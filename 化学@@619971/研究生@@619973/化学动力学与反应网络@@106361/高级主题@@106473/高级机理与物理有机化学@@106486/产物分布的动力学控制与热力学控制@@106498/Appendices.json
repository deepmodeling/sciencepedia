{"hands_on_practices": [{"introduction": "要掌握动力学与热力学控制，我们首先从最基础的情景出发。本练习将通过第一性原理推导，来分析一个简单的平行反应系统。通过求解该系统的动力学方程，你将亲自证明，对于相同反应级数的不可逆平行反应，产物的选择性仅由各通道的速率常数之比决定，而与反应时间无关，这是纯粹动力学控制的一个标志性特征 [@problem_id:2650595]。", "problem": "考虑一个等温、恒容的间歇式反应器，其中单一反应物种 $A$ 发生两个平行的、基元的、不可逆的一级反应，生成产物 $P_{1}$ 和 $P_{2}$：\n$$A \\xrightarrow{k_{1}} P_{1}, \\quad A \\xrightarrow{k_{2}} P_{2}.$$\n假设质量作用定律成立，速率常数 $k_{1}$ 和 $k_{2}$ 与时间无关，且不存在其他反应或输运过程。在时间 $t=0$ 时，初始浓度满足 $[A](0)=A_{0}$ 且 $[P_{1}](0)=[P_{2}](0)=0$。在间歇条件下随着反应的进行，$A$ 会发生有限消耗。\n\n请仅使用基本动力学原理（质量作用定律、一级速率定律的定义和守恒定律），推导 $[P_{1}](t)$ 和 $[P_{2}](t)$ 的精确表达式，表达式需完全包含 $A$ 的有限消耗。然后，将随时间变化的选择性定义为\n$$S(t) \\equiv \\frac{[P_{1}](t)}{[P_{2}](t)}.$$\n请将最终的选择性 $S(t)$ 表示为以 $k_{1}$、$k_{2}$、$A_{0}$ 和 $t$ 为变量的闭式解析表达式。无需进行数值计算。选择性是无量纲的；报告表达式时无需带单位。您的最终答案必须是单一的解析表达式（而不是方程或不等式）。", "solution": "在尝试求解之前，需对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n- 反应方案：$A \\xrightarrow{k_{1}} P_{1}$， $A \\xrightarrow{k_{2}} P_{2}$。\n- 系统条件：等温、恒容的间歇式反应器。\n- 反应动力学：反应是平行的、基元的、不可逆的、一级的。\n- 基本假设：质量作用定律有效。速率常数 $k_{1}$ 和 $k_{2}$ 与时间无关。不存在其他反应或输运过程。\n- 初始条件：在时间 $t=0$ 时，浓度为 $[A](0)=A_{0}$，$[P_{1}](0)=0$，以及 $[P_{2}](0)=0$。\n- 过程约束：反应物 $A$ 发生有限消耗。\n- 给定定义：随时间变化的选择性为 $S(t) \\equiv \\frac{[P_{1}](t)}{[P_{2}](t)}$。\n- 目标：推导 $[P_{1}](t)$ 和 $[P_{2}](t)$ 的表达式，并随后推导 $S(t)$ 以 $k_{1}$、$k_{2}$、$A_{0}$ 和 $t$ 表示的闭式表达式。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题是良定的且科学上合理的。它描述了平行反应动力学的一个典型例子，这是化学反应工程和物理化学中的一个基本概念。该系统由一组具有给定初始条件的线性常微分方程描述，这保证了解的唯一性和稳定性。所有术语的定义都明确无误，前提条件是自洽的，并建立在公认的化学原理之上。该问题具有一定难度，因为它需要从第一性原理推导积分速率定律。\n\n**步骤 3：结论与行动**\n该问题被认为是有效的。下面将给出解的严谨推导。\n\n各物种浓度随时间的变化速率由质量作用定律推导出的微分方程描述。由于物种 $A$ 在两个平行的一级反应中被消耗，其消失速率是两条路径速率之和：\n$$ -\\frac{d[A]}{dt} = k_{1}[A] + k_{2}[A] = (k_{1} + k_{2})[A] $$\n该方程是一个可分离的一阶线性常微分方程。我们通过从初始条件 $t=0$ 时的 $[A](0) = A_{0}$ 积分到时间 $t$ 时的 $[A](t)$ 来求解它。\n$$ \\int_{A_{0}}^{[A](t)} \\frac{d[A]}{[A]} = - \\int_{0}^{t} (k_{1} + k_{2}) dt' $$\n积分得出：\n$$ \\ln([A](t)) - \\ln(A_{0}) = -(k_{1} + k_{2})t $$\n$$ \\ln\\left(\\frac{[A](t)}{A_{0}}\\right) = -(k_{1} + k_{2})t $$\n对两边取指数，得到 $A$ 的浓度作为时间的函数，这恰当地包含了其有限消耗：\n$$ [A](t) = A_{0} \\exp(-(k_{1} + k_{2})t) $$\n接下来，我们写出产物 $P_{1}$ 和 $P_{2}$ 生成的速率定律：\n$$ \\frac{d[P_{1}]}{dt} = k_{1}[A] $$\n$$ \\frac{d[P_{2}]}{dt} = k_{2}[A] $$\n为了求得 $[P_{1}](t)$，我们将 $[A](t)$ 的表达式代入其速率方程：\n$$ \\frac{d[P_{1}]}{dt} = k_{1} A_{0} \\exp(-(k_{1} + k_{2})t) $$\n然后，我们从 $t=0$ 时的初始条件 $[P_{1}](0) = 0$ 对该方程进行积分：\n$$ \\int_{0}^{[P_{1}](t)} d[P_{1}] = \\int_{0}^{t} k_{1} A_{0} \\exp(-(k_{1} + k_{2})t') dt' $$\n$$ [P_{1}](t) = k_{1} A_{0} \\left[ \\frac{\\exp(-(k_{1} + k_{2})t')}{-(k_{1} + k_{2})} \\right]_{0}^{t} $$\n$$ [P_{1}](t) = -\\frac{k_{1} A_{0}}{k_{1} + k_{2}} \\left( \\exp(-(k_{1} + k_{2})t) - 1 \\right) $$\n$$ [P_{1}](t) = \\frac{k_{1} A_{0}}{k_{1} + k_{2}} \\left( 1 - \\exp(-(k_{1} + k_{2})t) \\right) $$\n$[P_{2}](t)$ 的推导形式上是相同的，只需将 $k_{1}$ 替换为 $k_{2}$：\n$$ [P_{2}](t) = \\frac{k_{2} A_{0}}{k_{1} + k_{2}} \\left( 1 - \\exp(-(k_{1} + k_{2})t) \\right) $$\n在推导出 $[P_{1}](t)$ 和 $[P_{2}](t)$ 的精确表达式后，我们现在可以计算问题中定义的选择性 $S(t)$。\n$$ S(t) = \\frac{[P_{1}](t)}{[P_{2}](t)} = \\frac{\\frac{k_{1} A_{0}}{k_{1} + k_{2}} \\left( 1 - \\exp(-(k_{1} + k_{2})t) \\right)}{\\frac{k_{2} A_{0}}{k_{1} + k_{2}} \\left( 1 - \\exp(-(k_{1} + k_{2})t) \\right)} $$\n假设反应进行（即，至少有一个速率常数不为零）且 $t > 0$，则项 $\\left( 1 - \\exp(-(k_{1} + k_{2})t) \\right)$ 不为零。该项和前置因子 $\\frac{A_{0}}{k_{1} + k_{2}}$ 在分子和分母中被消去。这得到一个非常简单的结果：\n$$ S(t) = \\frac{k_{1}}{k_{2}} $$\n这个结果展示了平行反应动力学的一个基本原理：对于相同级数的反应，选择性在整个反应过程中是恒定的，且仅由反应速率常数之比决定。它与时间 $t$ 和初始反应物浓度 $A_{0}$ 无关。尽管问题要求解以 $k_{1}$、$k_{2}$、$A_{0}$ 和 $t$ 表示，但正确的推导表明，其对 $A_{0}$ 和 $t$ 的依赖性不存在。", "answer": "$$\n\\boxed{\\frac{k_{1}}{k_{2}}}\n$$", "id": "2650595"}, {"introduction": "真实的化学反应网络往往比简单的平行反应更为复杂，常常涉及不稳定的中间体。本练习引入了一个包含中间体的分支反应网络，并要求你应用化学动力学中一个极其重要且强大的工具——准稳态近似 (Quasi-Steady-State Approximation, QSSA)。通过这个实践，你将学会如何简化复杂的反应网络，并揭示在QSSA条件下，产物的最终分布仍由初始的不可逆分支步骤决定 [@problem_id:2650608]。", "problem": "考虑一个充分混合的等温间歇式反应器，其中含有物种 $A$。$A$ 可以不可逆地转化为两种不同的中间体 $I_1$ 和 $I_2$，每种中间体又各自不可逆地生成一种不同的产物。该过程遵循基于质量作用动力学的基元反应网络：\n- $A \\xrightarrow{k_1} I_1 \\xrightarrow{k_3} P_1$，\n- $A \\xrightarrow{k_2} I_2 \\xrightarrow{k_4} P_2$。\n假设准稳态近似（QSSA）对中间体 $I_1$ 和 $I_2$ 成立。初始条件为 $[A](0) = [A]_0$，$[I_1](0) = 0$，$[I_2](0) = 0$，$[P_1](0) = 0$ 及 $[P_2](0) = 0$。设 $[A]_0 = 1.00 \\times 10^{-2}$ mol L$^{-1}$。速率常数为 $k_1 = 3.0 \\times 10^{-3}$ s$^{-1}$，$k_2 = 1.2 \\times 10^{-3}$ s$^{-1}$，$k_3 = 8.0$ s$^{-1}$ 及 $k_4 = 4.0$ s$^{-1}$。\n\n从质量作用定律和准稳态近似（QSSA）的定义出发，推导有限时间下产物比 $[P_1](t)/[P_2](t)$ 的表达式，并计算其在时间 $t = 1.00 \\times 10^{3}$ s 时的值。\n\n然后，简要讨论（定性地，无需计算）在此类分支网络中，区分产物比 $[P_1]/[P_2]$ 受动力学控制还是热力学控制的判据，并用相关速率常数之间的不等式来表示。\n\n将 $[P_1](t)/[P_2](t)$ 的最终数值答案保留四位有效数字。该比值以纯数形式（无单位）表示。", "solution": "所述问题具有科学依据，提法明确，且客观公正。唯一且有意义的解所需的所有数据和条件均已提供。题目明确要求使用准稳态近似（QSSA），且所给定的速率常数也证明了该近似的合理性，因为中间体的消耗速率（$k_3 = 8.0$ s$^{-1}$, $k_4 = 4.0$ s$^{-1}$）远大于其生成速率（$k_1 = 3.0 \\times 10^{-3}$ s$^{-1}$, $k_2 = 1.2 \\times 10^{-3}$ s$^{-1}$）。因此，该问题是有效的，将推导其解。\n\n反应网络为：\n$$A \\xrightarrow{k_1} I_1 \\xrightarrow{k_3} P_1$$\n$$A \\xrightarrow{k_2} I_2 \\xrightarrow{k_4} P_2$$\n\n根据基元反应的质量作用定律，所有物种浓度的速率方程为：\n$$\n\\begin{aligned}\n\\frac{d[A]}{dt} &= -k_1[A] - k_2[A] = -(k_1 + k_2)[A] \\\\\n\\frac{d[I_1]}{dt} &= k_1[A] - k_3[I_1] \\\\\n\\frac{d[I_2]}{dt} &= k_2[A] - k_4[I_2] \\\\\n\\frac{d[P_1]}{dt} &= k_3[I_1] \\\\\n\\frac{d[P_2]}{dt} &= k_4[I_2]\n\\end{aligned}\n$$\n\n此问题要求对中间体 $I_1$ 和 $I_2$ 应用准稳态近似（QSSA）。该近似假设高活性中间体浓度的净变化率与其生成和消耗速率相比可以忽略不计。在数学上，这表示为：\n$$\n\\begin{aligned}\n\\frac{d[I_1]}{dt} \\approx 0 \\\\\n\\frac{d[I_2]}{dt} \\approx 0\n\\end{aligned}\n$$\n\n将此近似应用于中间体的速率方程，可得到它们的稳态浓度 $[I_1]_{SS}$ 和 $[I_2]_{SS}$：\n$$k_1[A] - k_3[I_1]_{SS} = 0 \\implies [I_1]_{SS} = \\frac{k_1}{k_3}[A]$$\n$$k_2[A] - k_4[I_2]_{SS} = 0 \\implies [I_2]_{SS} = \\frac{k_2}{k_4}[A]$$\n\n将这些表达式代入产物 $P_1$ 和 $P_2$ 的速率方程：\n$$\\frac{d[P_1]}{dt} = k_3[I_1]_{SS} = k_3 \\left(\\frac{k_1}{k_3}[A]\\right) = k_1[A]$$\n$$\\frac{d[P_2]}{dt} = k_4[I_2]_{SS} = k_4 \\left(\\frac{k_2}{k_4}[A]\\right) = k_2[A]$$\n\n为了求出在时间 $t$ 时的产物浓度比 $[P_1](t)/[P_2](t)$，我们必须对这些微分方程进行积分。首先，我们求解反应物 $A$ 的浓度随时间变化的函数。$A$ 的速率定律为一级衰减：\n$$\\frac{d[A]}{dt} = -(k_1 + k_2)[A]$$\n在初始条件 $[A](0) = [A]_0$ 下，解为：\n$$[A](t) = [A]_0 \\exp(-(k_1 + k_2)t)$$\n\n现在，我们将 $P_1$ 和 $P_2$ 的速率方程从 $t=0$ 积分到 $t$：\n$$[P_1](t) = \\int_0^t \\frac{d[P_1]}{d\\tau} d\\tau = \\int_0^t k_1[A](\\tau) d\\tau = \\int_0^t k_1 [A]_0 \\exp(-(k_1 + k_2)\\tau) d\\tau$$\n$$[P_1](t) = k_1 [A]_0 \\left[ \\frac{\\exp(-(k_1 + k_2)\\tau)}{-(k_1 + k_2)} \\right]_0^t = \\frac{k_1 [A]_0}{k_1 + k_2} \\left(1 - \\exp(-(k_1 + k_2)t)\\right)$$\n\n对 $P_2$ 进行类似处理：\n$$[P_2](t) = \\int_0^t \\frac{d[P_2]}{d\\tau} d\\tau = \\int_0^t k_2[A](\\tau) d\\tau = \\frac{k_2 [A]_0}{k_1 + k_2} \\left(1 - \\exp(-(k_1 + k_2)t)\\right)$$\n\n则产物浓度的比值为：\n$$\\frac{[P_1](t)}{[P_2](t)} = \\frac{\\frac{k_1 [A]_0}{k_1 + k_2} \\left(1 - \\exp(-(k_1 + k_2)t)\\right)}{\\frac{k_2 [A]_0}{k_1 + k_2} \\left(1 - \\exp(-(k_1 + k_2)t)\\right)}$$\n\n对于任何时间 $t > 0$，与时间和浓度相关的项都会消去，得到一个恒定的比值：\n$$\\frac{[P_1](t)}{[P_2](t)} = \\frac{k_1}{k_2}$$\n此结果与时间无关，是对此反应网络应用 QSSA 的直接结果。产物分布完全由初始不可逆步骤的分支比决定。\n\n我们现在使用给定的速率常数计算这个比值：\n$k_1 = 3.0 \\times 10^{-3}$ s$^{-1}$\n$k_2 = 1.2 \\times 10^{-3}$ s$^{-1}$\n$$\\frac{[P_1]}{[P_2]} = \\frac{3.0 \\times 10^{-3}}{1.2 \\times 10^{-3}} = \\frac{3.0}{1.2} = 2.5$$\n计算该比值时不需要 $[A]_0$，$t$，$k_3$ 和 $k_4$ 的值，尽管 $k_3$ 和 $k_4$ 的值对于证明 QSSA 本身的有效性是必需的。问题要求答案保留四位有效数字，即 $2.500$。\n\n问题的第二部分要求定性讨论区分动力学控制和热力学控制的判据。\n\n在分支反应网络的背景下，区别如下：\n\n1.  **动力学控制 (Kinetic Control)**：当产物比由竞争路径的相对速率决定时，该机制占主导地位。要发生这种情况，生成产物的反应在操作条件下必须是有效不可逆的，或者反应必须在建立平衡之前停止。在给定的问题中，所有反应步骤都定义为不可逆的。因此，该系统完全处于动力学控制之下。产物比 $[P_1]/[P_2] = k_1/k_2$ 反映了通往 $P_1$ 的路径比通往 $P_2$ 的路径更快这一事实。$P_1$ 和 $P_2$ 的相对热力学稳定性是无关紧要的。就速率常数而言，如果任何逆向速率常数（例如，$I_1 \\to A$ 的 $k_{-1}$）与正向速率常数相比可以忽略不计，即 $k_1 \\gg k_{-1}$ 和 $k_2 \\gg k_{-2}$，则可保证动力学控制。\n\n2.  **热力学控制 (Thermodynamic Control)**：只有当反应路径是可逆的，且系统被允许达到化学平衡时，才能实现该机制。在平衡状态下，产物分布由产物的相对热力学稳定性决定，这由反应的总平衡常数来量化。热力学上更稳定的产物（具有更低 Gibbs 自由能的产物）将是主要产物，无论其生成速度有多快。要使网络处于热力学控制之下，逆向反应必须是显著的。例如，如果我们有 $A \\rightleftharpoons P_1$ 和 $A \\rightleftharpoons P_2$，平衡比将是 $[P_1]_{eq}/[P_2]_{eq} = K_{eq,1}/K_{eq,2}$。就速率常数而言，其判据是所有步骤的逆向速率常数都必须非零，从而允许系统达到平衡。这种情况通常在较高温度和较长反应时间下满足，因为这提供了足够的能量来克服正向和逆向反应的活化能垒。\n\n总而言之，区分这两种机制的基本判据是**可逆性 (reversibility)**。不可逆条件 ($k_{reverse} \\approx 0$) 导致动力学控制。可逆条件 ($k_{reverse} > 0$) 加上有足够的时间达到平衡则导致热力学控制。", "answer": "$$\n\\boxed{2.500}\n$$", "id": "2650608"}, {"introduction": "在定性理解了动力学与热力学控制之后，一个更高级的问题是如何定量地分析和调控一个反应。这个练习将引导你进入计算化学和反应工程的前沿领域，通过对一个可逆平行反应网络进行灵敏度分析。你将通过求解常微分方程组及其伴随的灵敏度方程，来精确计算产物比例对活化能（动力学“杠杆”）和产物稳定性（热力学“杠杆”）的偏导数，从而在不同时间尺度上定量地判断反应由哪种因素主导 [@problem_id:2650548]。", "problem": "给定一个平行可逆反应网络，其中单一反应物通过不同通道生成两种产物。该网络定义如下：反应物 $A$ 通过通道 $1$ 与产物 $P_1$ 可逆地相互转化，并通过通道 $2$ 与产物 $P_2$ 可逆地相互转化。状态变量为浓度 $[A](t)$、$[P_1](t)$ 和 $[P_2](t)$，初始条件为 $[A](0) = A_0$、$[P_1](0) = 0$ 和 $[P_2](0) = 0$。所有浓度都必须以摩尔单位进行解释，但下文要求的最终输出是无量纲的，或是对能量的导数，因此在输出中不需要浓度单位。动力学遵循质量作用动力学和过渡态理论（TST）计算速率常数。假设反应物的参考自由能为 $G_A = 0$。\n\n需要使用的基本依据和定义：\n- 令 $T$ 为绝对温度，单位为开尔文。令 $k_B$ 表示玻尔兹曼常数，$h$ 表示普朗克常数。Eyring 前置因子为 $k_0 = \\kappa \\, (k_B T / h)$，其中透射系数 $\\kappa = 1$。\n- 令 $R$ 表示摩尔气体常数。逆热能为 $\\beta = 1/(R T)$。您必须通过使用单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ 的 $R$ 和单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 的所有自由能来保持单位的一致性。\n- 对于每个通道 $i \\in \\{1,2\\}$，令正向活化自由能为 $\\Delta G_i^\\ddagger$，产物标准自由能为 $G_{P_i}$，所有能量均相对于 $G_A = 0$ 进行测量。TST 正向和逆向速率常数为\n$$\nk_{f,i} = k_0 \\exp\\!\\left(-\\beta \\, \\Delta G_i^\\ddagger\\right), \\qquad\nk_{r,i} = k_0 \\exp\\!\\left(-\\beta \\, (\\Delta G_i^\\ddagger - G_{P_i})\\right).\n$$\n- 基于质量作用动力学的浓度常微分方程（ODEs）为\n$$\n\\frac{d}{dt}\n\\begin{bmatrix}\n[A] \\\\\n[P_1] \\\\\n[P_2]\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-(k_{f,1}+k_{f,2})[A] + k_{r,1}[P_1] + k_{r,2}[P_2] \\\\\nk_{f,1}[A] - k_{r,1}[P_1] \\\\\nk_{f,2}[A] - k_{r,2}[P_2]\n\\end{bmatrix}.\n$$\n\n将 $P_1$ 的终态产物分数定义为\n$$\nf_1(t_f) = \\frac{[P_1](t_f)}{[P_1](t_f) + [P_2](t_f)}.\n$$\n您必须对 $f_1(t_f)$ 就动力学“杠杆” $\\Delta G_1^\\ddagger$、$\\Delta G_2^\\ddagger$ 和热力学“杠杆” $G_{P_1}$、$G_{P_2}$ 进行局域（无穷小）灵敏度分析。具体来说，计算以下偏导数\n$$\n\\left[\\frac{\\partial f_1}{\\partial \\Delta G_1^\\ddagger},\\;\\frac{\\partial f_1}{\\partial \\Delta G_2^\\ddagger},\\;\\frac{\\partial f_1}{\\partial G_{P_1}},\\;\\frac{\\partial f_1}{\\partial G_{P_2}}\\right]_{t=t_f},\n$$\n并在指定的基准参数集下进行评估。这些导数必须以实数形式报告，单位为每 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$（即一个无量纲量对一个单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 的能量的导数）。请使用一个一致的单位系统，其中能量单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，温度单位为 $\\mathrm{K}$，时间单位为 $\\mathrm{s}$，并使用下文提供的气体常数 $R$。\n\n您的程序必须：\n- 从上述带有 TST 速率常数的常微分方程出发，并从给定的基本依据开始，使用与对常微分方程系统解关于参数求导相一致的原则性方法来计算灵敏度。不要假设任何关于 $f_1(t)$ 的预先简化的公式。\n- 为保证可复现性，请使用以下物理常数作为精确数值：$k_B = 1.380649 \\times 10^{-23}\\,\\mathrm{J}\\,\\mathrm{K}^{-1}$，$h = 6.62607015 \\times 10^{-34}\\,\\mathrm{J}\\,\\mathrm{s}$，$R = 8.314462618 \\times 10^{-3}\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$，以及 $\\kappa = 1$。\n- 使用初始浓度 $A_0 = 1.0$（单位为 $\\mathrm{mol}\\,\\mathrm{L}^{-1}$），并设 $[P_1](0) = 0$ 和 $[P_2](0) = 0$。\n- 对于每个测试用例，根据给定的基准参数，在指定的 $t_f$ 时刻计算灵敏度向量。\n\n测试套件：\n为以下四个测试用例提供结果，每个用例指定为 $(T,\\; t_f,\\; \\Delta G_1^\\ddagger,\\; \\Delta G_2^\\ddagger,\\; G_{P_1},\\; G_{P_2})$，其中能量单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，温度单位为 $\\mathrm{K}$，时间单位为 $\\mathrm{s}$：\n1. 案例 K（早期动力学控制）：$(T = 298.15,\\; t_f = 1.0\\times 10^{-4},\\; \\Delta G_1^\\ddagger = 60.0,\\; \\Delta G_2^\\ddagger = 62.0,\\; G_{P_1} = -10.0,\\; G_{P_2} = -20.0)$。\n2. 案例 T（长时热力学控制）：$(T = 298.15,\\; t_f = 100.0,\\; \\Delta G_1^\\ddagger = 60.0,\\; \\Delta G_2^\\ddagger = 62.0,\\; G_{P_1} = -10.0,\\; G_{P_2} = -20.0)$。\n3. 案例 S（对称通道）：$(T = 298.15,\\; t_f = 1.0,\\; \\Delta G_1^\\ddagger = 60.0,\\; \\Delta G_2^\\ddagger = 60.0,\\; G_{P_1} = -20.0,\\; G_{P_2} = -20.0)$。\n4. 案例 C（动力学与热力学竞争）：$(T = 298.15,\\; t_f = 0.1,\\; \\Delta G_1^\\ddagger = 58.0,\\; \\Delta G_2^\\ddagger = 66.0,\\; G_{P_1} = -5.0,\\; G_{P_2} = -30.0)$。\n\n不涉及角度单位。所有输出均为数值浮点数。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含结果，格式为一个包含四个列表的逗号分隔列表，每个内部列表对应于上述顺序的一个测试用例。每个内部列表必须按顺序 $\\left[\\frac{\\partial f_1}{\\partial \\Delta G_1^\\ddagger},\\;\\frac{\\partial f_1}{\\partial \\Delta G_2^\\ddagger},\\;\\frac{\\partial f_1}{\\partial G_{P_1}},\\;\\frac{\\partial f_1}{\\partial G_{P_2}}\\right]$ 包含四个灵敏度。将每个浮点数四舍五入到六位小数。例如：$[[x_1,x_2,x_3,x_4],[y_1,y_2,y_3,y_4],[z_1,z_2,z_3,z_4],[w_1,w_2,w_3,w_4]]$。", "solution": "所提出的问题是在化学动力学领域中一个定义明确且科学严谨的练习，特别关注于产物分布对底层热力学和动力学参数的灵敏度分析。它基于质量作用动力学和过渡态理论的基本原理，并包含获得唯一解所需的所有信息。因此，不仅可能，而且必须给出一个严谨的解。\n\n任务是计算终态产物分数 $f_1(t_f)$ 对四个能量参数的局域灵敏度：正向活化自由能 $\\Delta G_1^\\ddagger$ 和 $\\Delta G_2^\\ddagger$，以及产物标准自由能 $G_{P_1}$ 和 $G_{P_2}$。这些灵敏度是 $f_1(t_f)$ 对这些参数的偏导数，在给定的一组基准值下进行评估。\n\n完成此任务的原则性方法是对底层的常微分方程（ODEs）系统进行正向灵敏度分析。令浓度的状态向量为 $\\mathbf{y}(t) = [[A](t), [P_1](t), [P_2](t)]^T$，为方便起见，我们记为 $y_1(t) = [A](t)$，$y_2(t) = [P_1](t)$，$y_3(t) = [P_2](t)$。令参数向量为 $\\boldsymbol{\\lambda} = [\\lambda_1, \\lambda_2, \\lambda_3, \\lambda_4]^T = [\\Delta G_1^\\ddagger, \\Delta G_2^\\ddagger, G_{P_1}, G_{P_2}]^T$。\n\n系统动力学由一组线性一阶常微分方程描述：\n$$\n\\frac{d\\mathbf{y}}{dt} = \\mathbf{F}(\\mathbf{y}, \\boldsymbol{\\lambda}) = \\mathbf{K}(\\boldsymbol{\\lambda}) \\mathbf{y}(t)\n$$\n初始条件为 $\\mathbf{y}(0) = [A_0, 0, 0]^T$。矩阵 $\\mathbf{K}(\\boldsymbol{\\lambda})$ 包含速率常数，这些常数依赖于参数 $\\boldsymbol{\\lambda}$：\n$$\n\\mathbf{K}(\\boldsymbol{\\lambda}) =\n\\begin{bmatrix}\n-(k_{f,1}+k_{f,2}) & k_{r,1} & k_{r,2} \\\\\nk_{f,1} & -k_{r,1} & 0 \\\\\nk_{f,2} & 0 & -k_{r,2}\n\\end{bmatrix}\n$$\n速率常数 $k_{f,i}$ 和 $k_{r,i}$ 由过渡态理论表达式给出：\n$$\nk_{f,i} = k_0 \\exp(-\\beta \\Delta G_i^\\ddagger), \\quad k_{r,i} = k_0 \\exp(-\\beta (\\Delta G_i^\\ddagger - G_{P_i}))\n$$\n对于通道 $i=1,2$。\n\n目标函数是终态时刻 $t_f$ 的产物 $P_1$ 的分数：\n$$\nf_1(t_f) = \\frac{y_2(t_f)}{y_2(t_f) + y_3(t_f)}\n$$\n其对参数 $\\lambda_j$ 的导数通过链式法则求得：\n$$\n\\frac{\\partial f_1}{\\partial \\lambda_j} = \\frac{\\partial f_1}{\\partial y_2} \\frac{\\partial y_2}{\\partial \\lambda_j} + \\frac{\\partial f_1}{\\partial y_3} \\frac{\\partial y_3}{\\partial \\lambda_j}\n$$\n其中所有项都在 $t=t_f$ 时进行评估。$f_1$ 对状态变量的偏导数为：\n$$\n\\frac{\\partial f_1}{\\partial y_2} = \\frac{y_3}{(y_2 + y_3)^2}, \\quad \\frac{\\partial f_1}{\\partial y_3} = \\frac{-y_2}{(y_2 + y_3)^2}\n$$\n项 $\\frac{\\partial y_i}{\\partial \\lambda_j}$ 是状态灵敏度。令 $\\mathbf{S}_j(t) = \\frac{\\partial \\mathbf{y}(t)}{\\partial \\lambda_j}$ 为参数 $\\lambda_j$ 的灵敏度向量。为求得 $\\mathbf{S}_j(t)$，我们将原始 ODE 系统对 $\\lambda_j$求导：\n$$\n\\frac{d}{dt} \\mathbf{S}_j(t) = \\frac{d}{dt}\\left(\\frac{\\partial \\mathbf{y}}{\\partial \\lambda_j}\\right) = \\frac{\\partial}{\\partial \\lambda_j}\\left(\\frac{d\\mathbf{y}}{dt}\\right) = \\frac{\\partial}{\\partial \\lambda_j} \\mathbf{F}(\\mathbf{y}, \\boldsymbol{\\lambda})\n$$\n对右侧应用链式法则，得到灵敏度方程：\n$$\n\\frac{d\\mathbf{S}_j}{dt} = \\frac{\\partial \\mathbf{F}}{\\partial \\mathbf{y}} \\mathbf{S}_j + \\frac{\\partial \\mathbf{F}}{\\partial \\lambda_j} = \\mathbf{J}(t) \\mathbf{S}_j(t) + \\frac{\\partial \\mathbf{F}}{\\partial \\lambda_j}\n$$\n其中 $\\mathbf{J}(t)$ 是系统的雅可比矩阵。对于此线性系统，$\\mathbf{J} = \\mathbf{K}$。项 $\\frac{\\partial \\mathbf{F}}{\\partial \\lambda_j}$ 是 $\\mathbf{F}$ 在保持 $\\mathbf{y}$ 不变的情况下对 $\\lambda_j$ 的偏导数，其值为 $\\frac{\\partial \\mathbf{K}}{\\partial \\lambda_j} \\mathbf{y}$。灵敏度的初始条件为 $\\mathbf{S}_j(0) = \\frac{\\partial \\mathbf{y}(0)}{\\partial \\lambda_j} = \\mathbf{0}$，因为初始状态不依赖于 $\\boldsymbol{\\lambda}$。\n\n我们通过对一个包含 $3 + 4 \\times 3 = 15$ 个常微分方程的增广系统从 $t=0$ 到 $t=t_f$ 进行积分，同时求解状态向量 $\\mathbf{y}(t)$ 和 4 个灵敏度向量 $\\mathbf{S}_j(t)$。该增广系统为：\n$$\n\\frac{d}{dt}\n\\begin{pmatrix}\n\\mathbf{y} \\\\ \\mathbf{S}_1 \\\\ \\mathbf{S}_2 \\\\ \\mathbf{S}_3 \\\\ \\mathbf{S}_4\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\mathbf{K}\\mathbf{y} \\\\\n\\mathbf{K}\\mathbf{S}_1 + \\mathbf{b}_1(\\mathbf{y}) \\\\\n\\mathbf{K}\\mathbf{S}_2 + \\mathbf{b}_2(\\mathbf{y}) \\\\\n\\mathbf{K}\\mathbf{S}_3 + \\mathbf{b}_3(\\mathbf{y}) \\\\\n\\mathbf{K}\\mathbf{S}_4 + \\mathbf{b}_4(\\mathbf{y})\n\\end{pmatrix}\n$$\n其中强迫项 $\\mathbf{b}_j(\\mathbf{y}) = \\frac{\\partial \\mathbf{K}}{\\partial \\lambda_j} \\mathbf{y}$ 由速率常数的导数导出。当 $\\beta = 1/(RT)$ 时，这些导数为：\n$\\frac{\\partial k_{f,1}}{\\partial \\lambda_1} = -\\beta k_{f,1}$，$\\frac{\\partial k_{r,1}}{\\partial \\lambda_1} = -\\beta k_{r,1}$\n$\\frac{\\partial k_{f,2}}{\\partial \\lambda_2} = -\\beta k_{f,2}$，$\\frac{\\partial k_{r,2}}{\\partial \\lambda_2} = -\\beta k_{r,2}$\n$\\frac{\\partial k_{r,1}}{\\partial \\lambda_3} = \\beta k_{r,1}$\n$\\frac{\\partial k_{r,2}}{\\partial \\lambda_4} = \\beta k_{r,2}$\n所有其他速率常数的偏导数均为零。\n\n因此，强迫向量为：\n$$\n\\mathbf{b}_1 = -\\beta \\begin{bmatrix} -(k_{f,1}y_1 - k_{r,1}y_2) \\\\ (k_{f,1}y_1 - k_{r,1}y_2) \\\\ 0 \\end{bmatrix}, \\quad\n\\mathbf{b}_2 = -\\beta \\begin{bmatrix} -(k_{f,2}y_1 - k_{r,2}y_3) \\\\ 0 \\\\ (k_{f,2}y_1 - k_{r,2}y_3) \\end{bmatrix}\n$$\n$$\n\\mathbf{b}_3 = \\beta \\begin{bmatrix} k_{r,1}y_2 \\\\ -k_{r,1}y_2 \\\\ 0 \\end{bmatrix}, \\quad\n\\mathbf{b}_4 = \\beta \\begin{bmatrix} k_{r,2}y_3 \\\\ 0 \\\\ -k_{r,2}y_3 \\end{bmatrix}\n$$\n\n算法如下：\n1. 对每个测试用例，定义参数 $(T, t_f, \\boldsymbol{\\lambda})$。\n2. 计算 $\\beta = 1/(RT)$ 和 $k_0 = k_B T/h$。\n3. 计算速率常数 $k_{f,i}, k_{r,i}$ 并组装矩阵 $\\mathbf{K}$。\n4. 构建增广系统的初始状态 $\\mathbf{z}(0)$，一个大小为 15 的向量，其中 $[y_1(0), y_2(0), y_3(0)] = [1.0, 0.0, 0.0]$，所有其他元素为零。\n5. 使用如 `scipy.integrate.solve_ivp` 的稳健求解器，对增广常微分方程系统进行从 $t=0$ 到 $t=t_f$ 的数值积分。\n6. 从解 $\\mathbf{z}(t_f)$ 中，提取最终状态 $\\mathbf{y}(t_f)$ 和灵敏度向量 $\\mathbf{S}_j(t_f)$。\n7. 对每个参数 $\\lambda_j$，使用提取的值计算产物分数的最终灵敏度：\n$$\n\\frac{\\partial f_1}{\\partial \\lambda_j} \\bigg|_{t=t_f} = \\frac{y_3(t_f) S_{2j}(t_f) - y_2(t_f) S_{3j}(t_f)}{\\left(y_2(t_f) + y_3(t_f)\\right)^2}\n$$\n该过程在提供的 Python 代码中实现，遵循指定的数值常数并生成所需的输出格式。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Solves for the sensitivities of a product fraction in a parallel reversible\n    reaction network using forward sensitivity analysis.\n    \"\"\"\n    # Physical constants\n    K_B = 1.380649e-23  # J K^-1\n    H = 6.62607015e-34   # J s\n    R = 8.314462618e-3   # kJ mol^-1 K^-1\n    KAPPA = 1.0          # Transmission coefficient\n\n    # Initial concentrations\n    A0 = 1.0\n\n    # Test cases: (T, t_f, dG1_ddagger, dG2_ddagger, GP1, GP2)\n    test_cases = [\n        # Case K (Kinetic control)\n        (298.15, 1.0e-4, 60.0, 62.0, -10.0, -20.0),\n        # Case T (Thermodynamic control)\n        (298.15, 100.0, 60.0, 62.0, -10.0, -20.0),\n        # Case S (Symmetric channels)\n        (298.15, 1.0, 60.0, 60.0, -20.0, -20.0),\n        # Case C (Competing kinetics/thermodynamics)\n        (298.15, 0.1, 58.0, 66.0, -5.0, -30.0)\n    ]\n\n    all_results = []\n\n    for case in test_cases:\n        T, t_f, dG1_ddagger, dG2_ddagger, GP1, GP2 = case\n        params = np.array([dG1_ddagger, dG2_ddagger, GP1, GP2])\n\n        # Calculate thermodynamic and kinetic constants\n        beta = 1.0 / (R * T)\n        k0 = KAPPA * K_B * T / H\n\n        # Calculate rate constants\n        kf1 = k0 * np.exp(-beta * dG1_ddagger)\n        kf2 = k0 * np.exp(-beta * dG2_ddagger)\n        kr1 = k0 * np.exp(-beta * (dG1_ddagger - GP1))\n        kr2 = k0 * np.exp(-beta * (dG2_ddagger - GP2))\n\n        # Rate matrix K (Jacobian)\n        K = np.array([\n            [-(kf1 + kf2), kr1, kr2],\n            [kf1, -kr1, 0.0],\n            [kf2, 0.0, -kr2]\n        ])\n\n        def augmented_ode_system(t, z):\n            # Unpack state vector y and sensitivity vectors S_j\n            y = z[0:3]\n            S = z[3:].reshape((4, 3))\n\n            # State equation\n            dydt = K @ y\n\n            # Forcing terms for sensitivity equations\n            b1 = -beta * np.array([-(kf1 * y[0] - kr1 * y[1]), kf1 * y[0] - kr1 * y[1], 0.0])\n            b2 = -beta * np.array([-(kf2 * y[0] - kr2 * y[2]), 0.0, kf2 * y[0] - kr2 * y[2]])\n            b3 = beta * np.array([kr1 * y[1], -kr1 * y[1], 0.0])\n            b4 = beta * np.array([kr2 * y[2], 0.0, -kr2 * y[2]])\n            \n            b = [b1, b2, b3, b4]\n            \n            # Sensitivity equations\n            dSdt = np.zeros_like(S)\n            for j in range(4):\n                dSdt[j, :] = K @ S[j, :] + b[j]\n\n            # Combine derivatives into a single vector\n            dzdt = np.concatenate((dydt, dSdt.flatten()))\n            return dzdt\n\n        # Initial conditions for augmented system\n        z0 = np.zeros(15)\n        z0[0] = A0\n\n        # Solve the augmented ODE system\n        sol = solve_ivp(augmented_ode_system, [0, t_f], z0, method='Radau', rtol=1e-9, atol=1e-12)\n        \n        # Extract final state and sensitivities\n        z_final = sol.y[:, -1]\n        y_final = z_final[0:3]\n        S_final = z_final[3:].reshape((4, 3))\n        \n        y2_f, y3_f = y_final[1], y_final[2]\n        \n        # Calculate sensitivities of the product fraction f1\n        sensitivities = []\n        denom = (y2_f + y3_f)**2\n        \n        if abs(denom) < 1e-16: # Avoid division by zero at t=0 or if no product forms\n             sensitivities = [0.0, 0.0, 0.0, 0.0]\n        else:\n            for j in range(4):\n                S2j_f, S3j_f = S_final[j, 1], S_final[j, 2]\n                df1_d_lambda_j = (y3_f * S2j_f - y2_f * S3j_f) / denom\n                sensitivities.append(df1_d_lambda_j)\n\n        all_results.append(sensitivities)\n    \n    # Format output string\n    # E.g., [[-0.123456,0.123456,...],[...]]\n    output_str = '[' + ','.join(\n        '[' + ','.join([f'{val:.6f}' for val in res]) + ']'\n        for res in all_results\n    ) + ']'\n    print(output_str)\n\nsolve()\n\n```", "id": "2650548"}]}