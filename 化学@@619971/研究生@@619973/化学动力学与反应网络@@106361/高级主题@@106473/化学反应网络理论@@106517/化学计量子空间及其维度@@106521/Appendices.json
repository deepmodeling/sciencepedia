{"hands_on_practices": [{"introduction": "第一个练习旨在巩固最核心的技能：如何从一个反应列表转换到其数学表示——化学计量矩阵 $N$。通过对一个具体的例子执行高斯消元法来计算矩阵的秩，你将亲手确定该网络动态行为所受到的结构性约束的维度。这项基本功是后续所有分析的基石。[@problem_id:2688774]", "problem": "考虑一个化学反应网络，其物种为 $A$、$B$ 和 $C$ (按此顺序)，反应为 $A \\to B$、$2B \\to C$ 和 $C \\to A$。仅使用反应网络的化学计量矩阵 $N$ 的定义——即 $N$ 的第 $j$ 列是反应 $j$ 的净化学计量变化向量(产物化学计量系数减去反应物化学计量系数)，其中行代表物种——完成以下操作：明确写出 $N$，然后通过对 $N$ 进行高斯消元法计算 $\\operatorname{rank}(N)$。仅报告 $\\operatorname{rank}(N)$ 的值作为最终答案。最终答案是一个整数，不需要四舍五入。", "solution": "该问题经检验在科学上是合理的、提法得当且客观的。其表述没有缺陷。我们开始解答。\n\n目标是确定给定化学反应网络的化学计量矩阵的秩，记为 $\\operatorname{rank}(N)$。该网络包含 $3$ 种化学物种，我们将其标记为 $S_1 = A$、$S_2 = B$ 和 $S_3 = C$，以及 $3$ 个反应：\n反应 1：$A \\to B$\n反应 2：$2B \\to C$\n反应 3：$C \\to A$\n\n化学计量矩阵 $N$ 是一个 $m \\times r$ 矩阵，其中 $m$ 是物种数量，$r$ 是反应数量。在本例中，$m=3$ 且 $r=3$，因此 $N$ 是一个 $3 \\times 3$ 矩阵。元素 $N_{ij}$ 是反应 $j$ 中物种 $i$ 分子数量的净变化。$N$ 的第 $j$ 列是第 $j$ 个反应的反应向量，其分量按指定顺序 $(A, B, C)$ 对应于各个物种。\n\n我们来构建 $N$ 的列向量。\n\n对于反应 1，$1A \\to 1B$：\n物种数量的变化为 $\\Delta A = -1$，$\\Delta B = +1$，$\\Delta C = 0$。因此，$N$ 的第一列是：\n$$\n\\mathbf{v}_1 = \\begin{pmatrix} -1 \\\\ 1 \\\\ 0 \\end{pmatrix}\n$$\n\n对于反应 2，$2B \\to 1C$：\n物种数量的变化为 $\\Delta A = 0$，$\\Delta B = -2$，$\\Delta C = +1$。$N$ 的第二列是：\n$$\n\\mathbf{v}_2 = \\begin{pmatrix} 0 \\\\ -2 \\\\ 1 \\end{pmatrix}\n$$\n\n对于反应 3，$1C \\to 1A$：\n物种数量的变化为 $\\Delta A = +1$，$\\Delta B = 0$，$\\Delta C = -1$。$N$ 的第三列是：\n$$\n\\mathbf{v}_3 = \\begin{pmatrix} 1 \\\\ 0 \\\\ -1 \\end{pmatrix}\n$$\n\n组合这些列向量，我们得到化学计量矩阵 $N$：\n$$\nN = \\begin{pmatrix} -1 & 0 & 1 \\\\ 1 & -2 & 0 \\\\ 0 & 1 & -1 \\end{pmatrix}\n$$\n\n为了求 $N$ 的秩，我们执行高斯消元法将其化为行阶梯形。设 $R_1, R_2, R_3$ 表示矩阵的行。\n\n初始矩阵为：\n$$\n\\begin{pmatrix} -1 & 0 & 1 \\\\ 1 & -2 & 0 \\\\ 0 & 1 & -1 \\end{pmatrix}\n$$\n\n第一个主元位于第一行第一列。我们用它来消去其下方的元素。我们执行行变换 $R_2 \\to R_2 + R_1$：\n$$\n\\begin{pmatrix} -1 & 0 & 1 \\\\ 1+(-1) & -2+0 & 0+1 \\\\ 0 & 1 & -1 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 & 1 \\\\ 0 & -2 & 1 \\\\ 0 & 1 & -1 \\end{pmatrix}\n$$\n\n现在需要对第一行下方的子矩阵进行化简。第二个主元位于第二行第二列。我们用它来消去其下方的元素。我们执行行变换 $R_3 \\to R_3 + \\frac{1}{2}R_2$：\n$$\n\\begin{pmatrix} -1 & 0 & 1 \\\\ 0 & -2 & 1 \\\\ 0+ \\frac{1}{2}(0) & 1+\\frac{1}{2}(-2) & -1+\\frac{1}{2}(1) \\end{pmatrix} = \\begin{pmatrix} -1 & 0 & 1 \\\\ 0 & -2 & 1 \\\\ 0 & 0 & -\\frac{1}{2} \\end{pmatrix}\n$$\n\n此矩阵是行阶梯形。矩阵的秩等于其行阶梯形中非零行的数量。我们可以清楚地看到有 $3$ 个非零行：\n行 1：$(-1, 0, 1)$\n行 2：$(0, -2, 1)$\n行 3：$(0, 0, -\\frac{1}{2})$\n\n由于有 $3$ 个非零行，矩阵 $N$ 的秩为 3。因此，化学计量子空间的维数为 3。\n$$\n\\operatorname{rank}(N) = 3\n$$", "answer": "$$\n\\boxed{3}\n$$", "id": "2688774"}, {"introduction": "第二个练习超越了纯粹的计算，揭示了化学计量子空间维度与网络中守恒定律之间的深刻联系。你将分析一个存在物质总量守恒的系统，并证明这个守恒关系如何直接导致化学计量矩阵的秩小于物种数量。这个例子阐明了为什么 $s$ 的值能告诉我们系统中有多少个独立的守恒量。[@problem_id:2688818]", "problem": "考虑一个封闭、充分混合的等温反应体系，其中包含三种化学物种 $A$、$B$ 和 $C$。它们通过三个可逆反应对 $A \\rightleftharpoons B$、$B \\rightleftharpoons C$ 和 $A \\rightleftharpoons C$相互转化。将每个可逆反应对视为两个独立的不可逆反应，因此总共有 $6$ 个不可逆反应。将物种排序为 $(A,B,C)$，反应列排序为 $(A \\to B,\\ B \\to A,\\ B \\to C,\\ C \\to B,\\ A \\to C,\\ C \\to A)$。\n\n仅使用基本定义，构建该网络的化学计量矩阵 $N$，其中 $N$ 的每一列是相应不可逆反应 $y \\to y'$ 的化学计量变化向量 $y' - y$。将化学计量子空间 $\\mathcal{S}$ 定义为 $N$ 列向量的张成空间，并回顾根据定义有 $\\dim \\mathcal{S} = \\operatorname{rank}(N)$。\n\n从第一性原理出发，证明为什么该网络的总物质量 $x_A + x_B + x_C$ 是守恒的，并利用此守恒关系为 $\\operatorname{rank}(N)$ 设定界限。然后通过对您计算出的 $N$ 进行显式线性代数运算来验证 $\\operatorname{rank}(N)$ 达到了这个界限，尽管存在 $3$ 个可逆反应对。\n\n请提供 $\\operatorname{rank}(N)$ 的值作为最终答案。最终答案无需数值舍入，也无需物理单位。", "solution": "所述问题具有科学依据，提法恰当，客观，并包含了获得唯一解所需的所有信息。这是化学反应网络分析中的一个标准练习。因此，该问题是有效的，我们开始求解。\n\n该体系涉及三种化学物种，我们将其排列成向量 $\\mathbf{x} = (x_A, x_B, x_C)^T$，其中 $x_i$ 代表物种 $i$ 的量或浓度。该网络由六个不可逆反应组成，我们按指定顺序排列它们：$R_1: A \\to B$、$R_2: B \\to A$、$R_3: B \\to C$、$R_4: C \\to B$、$R_5: A \\to C$ 和 $R_6: C \\to A$。\n\n首先，我们构建化学计量矩阵 $N$。这是一个 $m \\times r$ 矩阵，其中 $m$ 是物种数 ($m=3$)，$r$ 是反应数 ($r=6$)。$N$ 的每一列是相应反应的反应向量，表示每种物种数量的净变化。\n对于 $R_1: A \\to B$， $A$ 的变化是 $-1$，$B$ 的变化是 $+1$。向量为 $(-1, 1, 0)^T$。\n对于 $R_2: B \\to A$，$A$ 的变化是 $+1$，$B$ 的变化是 $-1$。向量为 $(1, -1, 0)^T$。\n对于 $R_3: B \\to C$，$B$ 的变化是 $-1$，$C$ 的变化是 $+1$。向量为 $(0, -1, 1)^T$。\n对于 $R_4: C \\to B$，$B$ 的变化是 $+1$，$C$ 的变化是 $-1$。向量为 $(0, 1, -1)^T$。\n对于 $R_5: A \\to C$，$A$ 的变化是 $-1$，$C$ 的变化是 $+1$。向量为 $(-1, 0, 1)^T$。\n对于 $R_6: C \\to A$，$A$ 的变化是 $+1$，$C$ 的变化是 $-1$。向量为 $(1, 0, -1)^T$。\n\n按指定顺序组合这些列向量，得到 $3 \\times 6$ 的化学计量矩阵 $N$：\n$$\nN = \\begin{pmatrix}\n-1 & 1 & 0 & 0 & -1 & 1 \\\\\n1 & -1 & -1 & 1 & 0 & 0 \\\\\n0 & 0 & 1 & -1 & 1 & -1\n\\end{pmatrix}\n$$\n\n接下来，我们从第一性原理出发，证明总物质量 $x_{total} = x_A + x_B + x_C$ 是一个守恒量。该体系的动力学由向量常微分方程 $\\frac{d\\mathbf{x}}{dt} = N \\mathbf{v}(\\mathbf{x})$ 描述，其中 $\\mathbf{v}(\\mathbf{x})$ 是反应速率向量，其分量为非负值。\n总物质量可以写成点积 $\\mathbf{1}^T \\mathbf{x}$，其中 $\\mathbf{1} = (1, 1, 1)^T$。该量的时间导数为：\n$$\n\\frac{d}{dt}(x_A + x_B + x_C) = \\frac{d}{dt}(\\mathbf{1}^T \\mathbf{x}) = \\mathbf{1}^T \\frac{d\\mathbf{x}}{dt} = \\mathbf{1}^T (N \\mathbf{v}(\\mathbf{x})) = (\\mathbf{1}^T N) \\mathbf{v}(\\mathbf{x})\n$$\n要使该量对于任何反应速率集合 $\\mathbf{v}(\\mathbf{x})$ 都守恒，向量 $\\mathbf{1}^T N$ 必须是零向量。我们计算这个乘积：\n$$\n\\mathbf{1}^T N = \\begin{pmatrix} 1 & 1 & 1 \\end{pmatrix}\n\\begin{pmatrix}\n-1 & 1 & 0 & 0 & -1 & 1 \\\\\n1 & -1 & -1 & 1 & 0 & 0 \\\\\n0 & 0 & 1 & -1 & 1 & -1\n\\end{pmatrix}\n$$\n$$\n= \\begin{pmatrix}\n(-1+1+0) & (1-1+0) & (0-1+1) & (0+1-1) & (-1+0+1) & (1+0-1)\n\\end{pmatrix}\n$$\n$$\n= \\begin{pmatrix} 0 & 0 & 0 & 0 & 0 & 0 \\end{pmatrix} = \\mathbf{0}^T\n$$\n由于 $\\mathbf{1}^T N = \\mathbf{0}^T$，因此对于所有时间都有 $\\frac{d}{dt}(x_A + x_B + x_C) = 0$，这证实了总物质量是守恒的。一个向量 $\\mathbf{w}$ 若满足 $\\mathbf{w}^T N = \\mathbf{0}^T$，则称为 $N$ 的左零向量。存在这样一个非零向量（在此例中为 $\\mathbf{w} = \\mathbf{1}$）意味着 $N$ 的行向量之间存在线性相关性。具体来说，$\\text{row}_1 + \\text{row}_2 + \\text{row}_3 = \\mathbf{0}^T$。\n\n这个守恒律使我们能够为 $N$ 的秩设定界限。一个矩阵的秩等于其行空间的维度。由于这三个行向量之间存在线性相关性，它们无法张成一个 $3$ 维空间。$N$ 的左零空间（记作 $\\operatorname{nullity}(N^T)$）的维度至少为 $1$，因为它包含非零向量 $\\mathbf{1}$。根据应用于 $N^T$ 的秩-零度定理，我们有 $\\operatorname{rank}(N^T) + \\operatorname{nullity}(N^T) = m$，其中 $m=3$ 是行数。由于 $\\operatorname{rank}(N) = \\operatorname{rank}(N^T)$，这得出：\n$$\n\\operatorname{rank}(N) = m - \\operatorname{nullity}(N^T) \\le 3 - 1 = 2\n$$\n因此，$N$ 的秩至多为 $2$。\n\n最后，我们通过显式线性代数运算来验证 $N$ 的秩，以证明它达到了这个界限。我们可以对 $N$ 进行高斯消元，以求得其行阶梯形矩阵。\n从 $N$ 开始：\n$$\nN = \\begin{pmatrix}\n-1 & 1 & 0 & 0 & -1 & 1 \\\\\n1 & -1 & -1 & 1 & 0 & 0 \\\\\n0 & 0 & 1 & -1 & 1 & -1\n\\end{pmatrix}\n$$\n将第 1 行加到第 2 行 ($R_2 \\to R_2 + R_1$):\n$$\n\\begin{pmatrix}\n-1 & 1 & 0 & 0 & -1 & 1 \\\\\n0 & 0 & -1 & 1 & -1 & 1 \\\\\n0 & 0 & 1 & -1 & 1 & -1\n\\end{pmatrix}\n$$\n将第 2 行加到第 3 行 ($R_3 \\to R_3 + R_2$):\n$$\n\\begin{pmatrix}\n-1 & 1 & 0 & 0 & -1 & 1 \\\\\n0 & 0 & -1 & 1 & -1 & 1 \\\\\n0 & 0 & 0 & 0 & 0 & 0\n\\end{pmatrix}\n$$\n该矩阵是行阶梯形。它包含两个非零行。一个矩阵的行阶梯形中非零行的数量就是它的秩。因此，$\\operatorname{rank}(N) = 2$。\n\n这证实了秩达到了从守恒律推导出的上界。尽管三个可逆反应对具有循环性质，但秩没有进一步减小的原因在于，这个循环没有引入任何新的、独立的守恒律。这三对反应的反应向量本身是线性相关的。例如，考虑正向反应 $A \\to B$（向量 $\\mathbf{c}_1$）、$B \\to C$（向量 $\\mathbf{c}_3$）和 $A \\to C$（向量 $\\mathbf{c}_5$）：\n$$\n\\mathbf{c}_1 = \\begin{pmatrix} -1 \\\\ 1 \\\\ 0 \\end{pmatrix}, \\quad \\mathbf{c}_3 = \\begin{pmatrix} 0 \\\\ -1 \\\\ 1 \\end{pmatrix}, \\quad \\mathbf{c}_5 = \\begin{pmatrix} -1 \\\\ 0 \\\\ 1 \\end{pmatrix}\n$$\n显然，$\\mathbf{c}_1 + \\mathbf{c}_3 = \\mathbf{c}_5$。反应向量本身之间的这种线性相关性意味着第三条“路径”($A \\rightleftharpoons C$) 并未增加由另外两条路径（$A \\rightleftharpoons B$ 和 $B \\rightleftharpoons C$）已经张成的化学计量子空间 $\\mathcal{S}$ 的维度。化学计量子空间 $\\mathcal{S} = \\operatorname{span}(\\text{columns of } N)$ 的维度，根据定义就是 $N$ 的秩。计算结果证实了 $\\dim \\mathcal{S} = 2$。", "answer": "$$\n\\boxed{2}\n$$", "id": "2688818"}, {"introduction": "在理论和手动计算之后，最后一个练习将你带入计算实践领域。对于现实世界中复杂或大型的网络，手动分析是不可行的，我们需要稳定可靠的数值方法。你将学习如何运用奇异值分解（SVD）——一种强大的线性代数工具——来精确计算化学计量矩阵的秩，并自动提取出所有线性守恒定律的基。[@problem_id:2688808]", "problem": "给定一个化学反应网络的化学计量矩阵 $N \\in \\mathbb{R}^{m \\times r}$，该网络包含 $m$ 个化学物种和 $r$ 个反应。化学计量子空间是 $N$ 的列空间，线性守恒律是满足 $w^{\\top} N = 0$ 的向量 $w \\in \\mathbb{R}^{m}$。设 $W \\in \\mathbb{R}^{d \\times m}$ 是一个矩阵，其行构成了 $N$ 的左零空间的一个基（即，每一行都是一个守恒律向量），其中 $d = m - \\operatorname{rank}(N)$。\n\n从基本物种平衡方程 $\\,\\dfrac{dx}{dt} = N v(x)\\,$ 出发（其中 $x \\in \\mathbb{R}^{m}$ 是浓度向量，$v(x) \\in \\mathbb{R}^{r}$ 是反应速率向量），可得 $\\,\\dfrac{d}{dt}(w^{\\top} x) = w^{\\top} N v(x)\\,$。因此，要使 $w^{\\top} x$ 对于所有与 $N$ 和任何容许的 $v(x)$ 相符的轨迹保持不变，其充要条件是 $w^{\\top} N = 0$。因此，$N$ 的左零空间编码了所有的线性守恒律，其维度 $d$ 等于独立线性不变量的数量。\n\n您的任务是编写一个完整的程序，对每个给定的测试矩阵 $N$，使用奇异值分解（SVD）以数值稳定的方式执行以下步骤：\n\n1. 通过对奇异值进行阈值处理来计算数值秩 $\\operatorname{rank}(N)$。使用阈值\n$$\n\\mathrm{tol} \\;=\\; \\max\\{m,r\\} \\cdot \\epsilon \\cdot \\max\\{s_i\\},\n$$\n其中 $\\epsilon$ 是双精度浮点数的机器精度，$s_i$ 是 $N$ 的奇异值。奇异值 $s_i \\le \\mathrm{tol}$ 应被视为零。如果 $N$ 是零矩阵以至于 $\\max\\{s_i\\}$ 未定义，则取 $\\mathrm{tol} = 0$。\n\n2. 从 SVD 分解 $N = U \\Sigma V^{\\top}$ 中提取 $N$ 的左零空间的一组标准正交基。如果 $\\operatorname{rank}(N) = \\rho$，则 $U$ 的最后 $m - \\rho$ 列张成左零空间。通过取这些列并进行转置来构成矩阵 $W \\in \\mathbb{R}^{(m-\\rho)\\times m}$，使得 $W$ 的行是基向量。\n\n3. 通过计算矩阵乘积 $W N$ 并测量 $W N$ 的最大绝对值元素来验证守恒律条件。使用验证容差 $\\delta = 10^{-10}$，当且仅当 $\\max_{i,j} |(W N)_{ij}| \\le \\delta$ 时，声明检查通过。如果 $W$ 没有行（即 $m-\\rho=0$），则按惯例将最大绝对值元素定义为 $0$。\n\n对于每个测试用例，您的程序必须输出一个包含四个值的元组 $ [\\operatorname{rank}(N),\\, d,\\, \\max_{i,j} |(W N)_{ij}|,\\, \\text{passed}] $，\n其中 $d = m - \\operatorname{rank}(N)$，$\\text{passed}$ 是一个布尔值，表示在容差 $\\delta$ 下验证是否成功。\n\n测试套件（每个 $N$ 均以列列表的形式给出，即每列是单个反应的净化学计量变化向量，单位是每次反应事件的无量纲分子计数）：\n1. 一个具有一个守恒律的三物种、三反应网络：\n   $$\n   N_1 = \\begin{bmatrix}\n   -1 & 1 & 0 \\\\\n   1 & -1 & -1 \\\\\n   0 & 0 & 1\n   \\end{bmatrix}.\n   $$\n   这对应于反应 $A \\to B$、$B \\to A$ 和 $B \\to C$。\n\n2. 一个满行秩的二物种矩阵（除了平凡的零向量外没有守恒律）：\n   $$\n   N_2 = \\begin{bmatrix}\n   1 & 0 & 1 \\\\\n   0 & 1 & 1\n   \\end{bmatrix}.\n   $$\n\n3. 一个三物种的零矩阵（具有最大数量的守恒律）：\n   $$\n   N_3 = \\begin{bmatrix}\n   0 & 0 \\\\\n   0 & 0 \\\\\n   0 & 0\n   \\end{bmatrix}.\n   $$\n\n4. 一个三物种、四反应的近似秩为 $1$ 的矩阵（用于测试数值容差处理）：\n   $$\n   N_4 = \\begin{bmatrix}\n   1 & 2 & 0 & 10^{-12} \\\\\n   -1 & -2 & 0 & -10^{-12} \\\\\n   0 & 0 & 0 & 0\n   \\end{bmatrix}.\n   $$\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，列表中的每个条目对应于上面相同顺序的一个测试用例，并且每个条目本身都是一个包含四个值 $ [\\operatorname{rank}(N),\\, d,\\, \\max_{i,j} |(WN)_{ij}|,\\, \\text{passed}] $ 的列表。例如，整体结构必须类似于 $[[\\cdots],[\\cdots],[\\cdots],[\\cdots]]$，不含任何额外文本。本问题不涉及角度和物理单位。所有浮点值都可以用标准十进制表示法报告。", "solution": "该问题要求实现一种数值稳定的算法，以分析由其化学计量矩阵 $N \\in \\mathbb{R}^{m \\times r}$ 表示的化学反应网络的线性守恒律。线性守恒律是一个向量 $w \\in \\mathbb{R}^{m}$，它使得物种浓度的加权和 $w^{\\top}x$ 随时间保持恒定。该条件等价于 $w^{\\top}N=0$，意味着所有线性守恒律构成的空间是 $N$ 的左零空间，记为 $\\operatorname{Nul}(N^{\\top})$。根据秩-零度定理，该空间的维度 $d$ 由 $d = m - \\operatorname{rank}(N)$ 给出。\n\n我们的任务是计算秩 $\\rho = \\operatorname{rank}(N)$、守恒空间的维度 $d$，并找到该空间的一组标准正交基，表示为矩阵 $W \\in \\mathbb{R}^{d \\times m}$ 的行。然后，我们必须在指定的数值容差内验证该基是否满足守恒条件 $W N = 0$。\n\n在数值线性代数中，执行此类任务的首选方法是奇异值分解（SVD），因为它在存在浮点运算时具有鲁棒性，并且能够处理秩亏和近奇异矩阵。$N$ 的 SVD 分解为 $N = U \\Sigma V^{\\top}$，其中 $U \\in \\mathbb{R}^{m \\times m}$ 和 $V \\in \\mathbb{R}^{r \\times r}$ 是正交矩阵，$\\Sigma \\in \\mathbb{R}^{m \\times r}$ 是一个矩形对角矩阵，按降序包含非负的奇异值 $s_i$。$U$ 的列构成了 $\\mathbb{R}^m$ 的一组标准正交基，$V$ 的列构成了 $\\mathbb{R}^r$ 的一组标准正交基。\n\n算法按要求分三个不同步骤进行。\n\n步骤1：计算数值秩。\n矩阵的秩是其非零奇异值的数量。在计算环境中，为了考虑浮点不精确性，通常将非常小的奇异值视为零。我们通过计算超过指定容差 $\\mathrm{tol}$ 的奇异值 $s_i$ 的数量来计算数值秩 $\\rho$。该容差定义为：\n$$\n\\mathrm{tol} = \\max\\{m, r\\} \\cdot \\epsilon \\cdot s_{\\max}\n$$\n其中 $s_{\\max} = \\max\\{s_i\\}$ 是 $N$ 的最大奇异值，$\\epsilon$ 是双精度浮点数的机器精度。这种容差选择随矩阵的维度及其最大奇异值而缩放，为区分有效奇异值和数值噪声提供了鲁棒的标准。如果 $N$ 是零矩阵，其所有奇异值均为零，因此 $s_{\\max}=0$ 且 $\\mathrm{tol}=0$。秩 $\\rho$ 则是 $s_i > \\mathrm{tol}$ 的计数。\n\n步骤2：提取左零空间的基。\nSVD 提供了一种直接获取 $N$ 的基本子空间标准正交基的方法。关系式 $N = U \\Sigma V^{\\top}$ 意味着 $N^{\\top} = V \\Sigma^{\\top} U^{\\top}$。由此，我们有 $N^{\\top}U = V \\Sigma^{\\top}$。$U$ 的列是 $NN^{\\top}$ 的特征向量。左零空间 $\\operatorname{Nul}(N^{\\top})$ 由所有满足 $N^{\\top}w = 0$ 的向量 $w$ 组成。如果 $N$ 的秩为 $\\rho$，则前 $\\rho$ 个奇异值为正，其余 $m-\\rho$ 个为零。对应于这些零奇异值的 $U$ 的最后 $m-\\rho$ 列构成了 $N$ 的左零空间的一组标准正交基。设这些列为 $u_{\\rho+1}, \\dots, u_m$。我们通过将这些基向量作为其行来构造矩阵 $W \\in \\mathbb{R}^{d \\times m}$，其中 $d=m-\\rho$。也就是说，$W$ 的第 $i$ 行是 $u_{\\rho+i}^{\\top}$。在矩阵表示法中，$W$ 是通过取由 $U$ 的最后 $d$ 列组成的子矩阵的转置而形成的。如果 $d=0$（即矩阵为满行秩），左零空间是平凡的，仅包含零向量，矩阵 $W$ 为空，即行数为零。\n\n步骤3：验证守恒律条件。\n利用计算出的秩 $\\rho$ 和基矩阵 $W$，我们必须验证条件 $WN = 0$。由于浮点运算，矩阵乘积 $WN$ 的结果不会是精确的零矩阵，而是一个其元素非常接近零的矩阵。我们通过计算乘积矩阵 $WN$ 中所有元素的最大绝对值来量化这一点。\n$$ \\text{error} = \\max_{i,j} |(WN)_{ij}| $$\n此误差必须与一个小的绝对验证容差 $\\delta = 10^{-10}$ 进行比较。如果此误差小于或等于 $\\delta$，则认为验证通过。在左零空间是平凡的情况下（$d=0$），$W$ 是一个 $0 \\times m$ 矩阵。乘积 $WN$ 是一个 $0 \\times r$ 矩阵，根据问题的约定，最大绝对值元素定义为 $0$，这自然会通过验证。\n\n对每个提供的测试矩阵应用此完整过程。每个矩阵的最终输出是一个元组，包含计算出的秩 $\\rho$、左零空间的维度 $d$、验证误差以及一个指示验证结果的布尔值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases and prints the results.\n    \"\"\"\n    # Test cases defined as lists of lists, representing the matrices.\n    test_cases = [\n        # N1: 3-species, 3-reaction network\n        np.array([\n            [-1.0, 1.0, 0.0],\n            [1.0, -1.0, -1.0],\n            [0.0, 0.0, 1.0]\n        ]),\n        # N2: 2-species, full row rank\n        np.array([\n            [1.0, 0.0, 1.0],\n            [0.0, 1.0, 1.0]\n        ]),\n        # N3: 3-species zero matrix\n        np.array([\n            [0.0, 0.0],\n            [0.0, 0.0],\n            [0.0, 0.0]\n        ]),\n        # N4: 3-species, nearly rank-1 matrix\n        np.array([\n            [1.0, 2.0, 0.0, 1.0e-12],\n            [-1.0, -2.0, 0.0, -1.0e-12],\n            [0.0, 0.0, 0.0, 0.0]\n        ])\n    ]\n\n    all_results = []\n    for N in test_cases:\n        result = analyze_stoichiometric_matrix(N)\n        all_results.append(result)\n\n    # Format the final output string according to the problem specification.\n    # Each sub-list is converted to a string without spaces.\n    formatted_results = [f\"[{','.join(map(str, res))}]\" for res in all_results]\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef analyze_stoichiometric_matrix(N):\n    \"\"\"\n    Performs SVD-based analysis of a single stoichiometric matrix N.\n\n    Args:\n        N (np.ndarray): The stoichiometric matrix of size m x r.\n\n    Returns:\n        list: A list containing [rank, d, max_abs_error, passed].\n    \"\"\"\n    m, r = N.shape\n    verification_tolerance = 1e-10\n\n    # Perform SVD. full_matrices=True is essential to get the full m x m U matrix.\n    U, s, Vh = np.linalg.svd(N, full_matrices=True)\n\n    # Step 1: Compute numerical rank\n    eps = np.finfo(float).eps\n    s_max = np.max(s) if s.size > 0 else 0.0\n    rank_tolerance = max(m, r) * eps * s_max\n    \n    numerical_rank = np.sum(s > rank_tolerance)\n    rho = numerical_rank\n\n    # Step 2: Extract an orthonormal basis of the left nullspace\n    d = m - rho\n    \n    if d > 0:\n        # The last m-rho columns of U form the basis for the left nullspace.\n        # W has these vectors as rows.\n        W = U[:, rho:].T\n    else:\n        # If d=0, W is an empty matrix of shape (0, m).\n        W = np.empty((0, m))\n\n    # Step 3: Verify the conservation-law condition\n    if W.shape[0] > 0:\n        # Compute the product WN\n        WN = W @ N\n        # Calculate the maximum absolute entry\n        max_abs_error = np.max(np.abs(WN))\n    else:\n        # By convention, if W has zero rows, the error is 0.\n        max_abs_error = 0.0\n    \n    passed = max_abs_error = verification_tolerance\n    \n    # Python's default True/False representation is acceptable.\n    return [rho, d, max_abs_error, passed]\n\n\nsolve()\n```", "id": "2688808"}]}