{"hands_on_practices": [{"introduction": "本练习是理解随机双稳态的一个基础。通过从化学主方程 (Chemical Master Equation, CME) 的第一性原理出发，您将推导出一维生灭过程的稳态分布，并将其应用于一个经典的基因开关模型。这项实践将直接展示确定性双稳态如何在随机框架下表现为具有两个峰值的概率分布，从而加深您对离散状态空间中稳态行为的理解 [@problem_id:2676919]。", "problem": "考虑一个由化学主方程（CME）描述的单物种生灭过程，其中系统状态为分子数 $n \\in \\{0,1,2,\\dots\\}$，转移倾向分为出生类型 $a_{+}(n)$ 和死亡类型 $a_{-}(n)$。假设该链是不可约且正常返的，因此存在唯一的稳态分布 $\\{p_{n}\\}_{n \\ge 0}$。从稳态CME和单步生灭链的微观可逆性定义出发，推导 $p_{n}$ 的递归关系，并获得一个用 $p_{0}$ 和转移倾向表示的 $p_{n}$ 的闭式乘积表达式。然后，使用此表达式以及以下给定的特定转移倾向\n$$\na_{+}(n) \\;=\\; k_{0} \\;+\\; \\frac{k_{1}\\,n^{2}}{K^{2} + n^{2}}, \n\\qquad \na_{-}(n) \\;=\\; \\gamma\\, n,\n$$\n在参数值为 $k_{0}=0.1$，$k_{1}=500$，$K=50$ 和 $\\gamma=4$ 的情况下，确定稳态分布的局部模（局部极大值）的整数位置。位置 $n$ 处的局部模由离散条件 $p_{n} \\ge p_{n-1}$ 和 $p_{n} \\ge p_{n+1}$ 定义，并约定在边界处仅需满足 $p_{0} \\ge p_{1}$。\n\n你的最终答案必须包含一个 $p_{n}$ 的单一闭式解析表达式（不考虑总归一化因子），以及两个按升序排列的整数模位置。无需四舍五入，也无需报告物理单位。", "solution": "问题陈述经审查，被认定有效。它在科学上基于随机过程理论，特别是通过化学主方程（CME）描述的生灭过程。该问题是自洽、适定且客观的。它代表了化学动力学中一个标准但并非无足轻重的练习。\n\n首要任务是推导单物种生灭过程的稳态概率分布 $p_{n}$ 的一般表达式。系统由代表分子数量的状态 $n \\in \\{0, 1, 2, \\dots\\}$ 组成。从状态 $n$ 到 $n+1$ 的转移倾向为 $a_{+}(n)$（出生），从状态 $n$ 到 $n-1$ 的转移倾向为 $a_{-}(n)$（死亡）。\n\n通过将概率分布的时间导数设为零，可以得到处于状态 $n$ 的概率 $p_{n}$ 的稳态CME。对于一个通用状态 $n \\ge 1$，这给出：\n$$\n\\frac{dp_{n}}{dt} = a_{+}(n-1) p_{n-1} + a_{-}(n+1) p_{n+1} - (a_{+}(n) + a_{-}(n)) p_{n} = 0\n$$\n对于边界状态 $n=0$：\n$$\n\\frac{dp_{0}}{dt} = a_{-}(1) p_{1} - a_{+}(0) p_{0} = 0\n$$\n对于一维生灭链，稳态条件意味着细致平衡原理。该原理指出，任何两个相邻状态之间的净概率流必须为零。从状态 $n$到 $n+1$ 的概率流是 $a_{+}(n)p_{n}$，从 $n+1$ 到 $n$ 的概率流是 $a_{-}(n+1)p_{n+1}$。在稳态下，对于所有 $n \\ge 0$，这些流必须相等：\n$$\na_{+}(n) p_{n} = a_{-}(n+1) p_{n+1}\n$$\n此方程是单步生灭过程的一个基本结果，并且等价于完整的稳态主方程。由此，我们推导出稳态概率的递推关系：\n$$\np_{n+1} = \\frac{a_{+}(n)}{a_{-}(n+1)} p_{n}\n$$\n通过迭代应用此递推关系，我们可以用 $p_{0}$ 表示任何 $p_{n}$：\n$$\np_{1} = \\frac{a_{+}(0)}{a_{-}(1)} p_{0}\n$$\n$$\np_{2} = \\frac{a_{+}(1)}{a_{-}(2)} p_{1} = \\frac{a_{+}(1)}{a_{-}(2)} \\frac{a_{+}(0)}{a_{-}(1)} p_{0}\n$$\n以这种方式进行，我们得到 $p_{n}$ 的通用闭式乘积表达式：\n$$\np_{n} = p_{0} \\prod_{i=0}^{n-1} \\frac{a_{+}(i)}{a_{-}(i+1)}\n$$\n常数 $p_{0}$ 是一个由条件 $\\sum_{n=0}^{\\infty} p_{n} = 1$ 决定的归一化因子。本题要求表达式精确到该因子。代入转移倾向的具体形式，$a_{+}(n) = k_{0} + \\frac{k_{1} n^{2}}{K^{2} + n^{2}}$ 和 $a_{-}(n) = \\gamma n$，得到：\n$$\np_{n} = p_{0} \\prod_{i=0}^{n-1} \\frac{k_{0} + \\frac{k_{1} i^{2}}{K^{2} + i^{2}}}{\\gamma(i+1)}\n$$\n这个表达式构成了所需答案的第一部分。\n\n第二个任务是找到稳态分布 $\\{p_{n}\\}_{n \\ge 0}$ 的局部模的整数位置。在一个内点 $n \\ge 1$ 处的局部模由离散条件 $p_{n} \\ge p_{n-1}$ 和 $p_{n} \\ge p_{n+1}$ 定义。对于边界 $n=0$，条件简化为 $p_{0} \\ge p_{1}$。\n\n使用递推关系 $p_{n}/p_{n-1} = a_{+}(n-1)/a_{-}(n)$，内点 $n$ 处模的条件变为：\n1. $p_{n}/p_{n-1} \\ge 1 \\implies a_{+}(n-1) \\ge a_{-}(n)$\n2. $p_{n+1}/p_{n} \\le 1 \\implies a_{+}(n) \\le a_{-}(n+1)$\n\n具体的参数值为 $k_{0}=0.1$，$k_{1}=500$，$K=50$ 和 $\\gamma=4$。转移倾向为：\n$a_{+}(n) = 0.1 + \\frac{500 n^{2}}{2500 + n^{2}}$\n$a_{-}(n) = 4n$\n\n首先，我们检查边界 $n=0$ 处是否存在模。条件是 $p_{0} \\ge p_{1}$，这等价于 $a_{+}(0) \\le a_{-}(1)$。\n我们计算：\n$a_{+}(0) = k_{0} = 0.1$\n$a_{-}(1) = \\gamma \\cdot 1 = 4$\n由于 $0.1 \\le 4$，条件得到满足。因此，$n=0$ 是一个局部模。\n\n接下来，我们搜索其他模。这些模出现在比率 $p_{n}/p_{n-1}$ 从大于1过渡到小于1的地方。这对应于找到一个同时满足 $a_{+}(n-1) \\ge a_{-}(n)$ 和 $a_{+}(n) \\le a_{-}(n+1)$ 的整数 $n$。所选转移倾向的双稳态性质表明存在第二个模。我们通过对整数 $n$ 的条件进行数值检验来搜索这个模。\n\n让我们在相应确定性系统的第二个稳定不动点预期所在的区域测试 $n$ 的值。系统的搜索表明，过渡发生在 $n=99$ 附近。我们来精确地验证这一点。\n\n对于 $n=98$：\n条件 $a_{+}(97) \\ge a_{-}(98)$ 要求：\n$a_{+}(97) = 0.1 + \\frac{500 \\cdot 97^{2}}{50^{2} + 97^{2}} = 0.1 + \\frac{500 \\cdot 9409}{2500 + 9409} = 0.1 + \\frac{4704500}{11909} \\approx 0.1 + 395.03 = 395.13$。\n$a_{-}(98) = 4 \\cdot 98 = 392$。\n由于 $395.13 \\ge 392$，条件 $p_{98} \\ge p_{97}$ 成立。\n条件 $a_{+}(98) \\le a_{-}(99)$ 要求：\n$a_{+}(98) = 0.1 + \\frac{500 \\cdot 98^{2}}{50^{2} + 98^{2}} = 0.1 + \\frac{500 \\cdot 9604}{2500 + 9604} = 0.1 + \\frac{4802000}{12104} \\approx 0.1 + 396.71 = 396.81$。\n$a_{-}(99) = 4 \\cdot 99 = 396$。\n不等式 $396.81 \\le 396$ 不成立。因此，$p_{99} > p_{98}$，且 $n=98$ 不是一个模。\n\n对于 $n=99$：\n条件 $a_{+}(98) \\ge a_{-}(99)$ 要求：\n$a_{+}(98) \\approx 396.81$。\n$a_{-}(99) = 396$。\n不等式 $396.81 \\ge 396$ 成立。这意味着 $p_{99} \\ge p_{98}$。\n条件 $a_{+}(99) \\le a_{-}(100)$ 要求：\n$a_{+}(99) = 0.1 + \\frac{500 \\cdot 99^{2}}{50^{2} + 99^{2}} = 0.1 + \\frac{500 \\cdot 9801}{2500 + 9801} = 0.1 + \\frac{4900500}{12301} \\approx 0.1 + 398.38 = 398.48$。\n$a_{-}(100) = 4 \\cdot 100 = 400$。\n不等式 $398.48 \\le 400$ 成立。这意味着 $p_{99} \\ge p_{100}$。\n由于两个条件都满足，$n=99$ 是一个局部模。\n\n对于 $n=100$：\n条件 $a_{+}(99) \\ge a_{-}(100)$ 要求：\n$a_{+}(99) \\approx 398.48$。\n$a_{-}(100) = 400$。\n不等式 $398.48 \\ge 400$ 不成立。因此，$p_{100} < p_{99}$，并且 $n=100$ 不是一个模。\n\n分析证实，稳态分布的局部模位于 $n=0$ 和 $n=99$。", "answer": "$$\n\\boxed{\\pmatrix{ p_{0} \\prod_{i=0}^{n-1} \\frac{k_{0} + \\frac{k_{1} i^{2}}{K^{2} + i^{2}}}{\\gamma(i+1)} & 0 & 99 }}\n$$", "id": "2676919"}, {"introduction": "噪声在化学和生物系统中扮演着复杂的角色，有时甚至能创造出确定性模型中不存在的稳定性。这个练习将引导您探索一个引人入胜的现象——噪声诱导的双稳态（noise-induced bistability）。您将通过分析一个具有状态依赖性噪声的系统，证明即使在确定性动力学是单稳态的情况下，随机涨落也能产生一个双峰的稳态概率分布 [@problem_id:2676865]。", "problem": "考虑一个单物种化学反应网络的一维介观极限，该极限由伊藤(Itô)随机微分方程(SDE) $dX_{t} = f(X_{t})\\,dt + g(X_{t})\\,dW_{t}$ 建模，其中 $W_{t}$ 是标准布朗运动。令确定性漂移为 $f(x) = -x$（向 $x=0$ 的单稳弛豫），并令状态依赖的噪声幅度为 $g(x) = \\sqrt{a + b x^{2} + c x^{4}}$，其中 $a=3$，$b=-3$，$c=1$。状态空间为 $\\mathbb{R}$，并假设在 $x \\to \\pm \\infty$ 处为自然边界条件，使得稳态概率流为零。\n\n从该伊藤SDE的福克-普朗克(Fokker–Planck)方程出发，并施加零流稳态条件，证明尽管确定性漂移是单稳的，但稳态概率密度函数(PDF)是双峰的。然后，计算稳态PDF的两个峰（局部极大值）的精确位置。将您的最终答案表示为一个行矩阵，其中包含按升序排列的两个峰值位置，不要包含单位。答案必须是精确的，不需要四舍五-入。", "solution": "该问题描述了一个由以下形式的一维伊藤(Itô)随机微分方程(SDE)控制的系统：\n$$dX_{t} = f(X_{t})\\,dt + g(X_{t})\\,dW_{t}$$\n状态变量 $X_t$ 的概率密度函数(PDF) $P(x, t)$ 的演化由福克-普朗克(Fokker–Planck)方程(FPE)描述：\n$$\\frac{\\partial P(x, t)}{\\partial t} = -\\frac{\\partial}{\\partial x} [f(x) P(x, t)] + \\frac{1}{2} \\frac{\\partial^2}{\\partial x^2} [g(x)^2 P(x, t)]$$\n这可以写成概率流 $J(x, t)$ 的形式 $\\frac{\\partial P}{\\partial t} = -\\frac{\\partial J}{\\partial x}$，其中\n$$J(x, t) = f(x) P(x, t) - \\frac{1}{2} \\frac{\\partial}{\\partial x} [g(x)^2 P(x, t)]$$\n当 $\\frac{\\partial P}{\\partial t} = 0$ 时达到稳态，这意味着稳态概率流 $J_s(x)$ 是一个常数，即 $\\frac{\\partial J_s}{\\partial x} = 0$。问题指明在 $x \\to \\pm \\infty$ 处为自然边界条件，使得稳态流为零。这要求对所有 $x \\in \\mathbb{R}$ 都有 $J_s(x) = 0$。因此，对于稳态PDF $P_s(x)$，我们有：\n$$f(x) P_s(x) - \\frac{1}{2} \\frac{d}{dx} [g(x)^2 P_s(x)] = 0$$\n这是一个关于 $P_s(x)$ 的一阶线性常微分方程。其通解由下式给出：\n$$P_s(x) = \\frac{N}{g(x)^2} \\exp\\left( \\int \\frac{2f(x)}{g(x)^2} dx \\right)$$\n其中 $N$ 是一个归一化常数。稳态PDF $P_s(x)$ 的峰值对应其局部极大值。为了找到这些峰值，我们可以求 $P_s(x)$ 对数的极值，因为 $\\ln(z)$ 是一个单调函数。极值出现在 $\\frac{d}{dx} \\ln(P_s(x)) = 0$ 的地方。\n$$\\ln(P_s(x)) = \\ln(N) - \\ln(g(x)^2) + \\int \\frac{2f(x)}{g(x)^2} dx$$\n对 $x$ 求导并将结果设为零，得到极值的条件：\n$$\\frac{d}{dx} \\ln(P_s(x)) = -\\frac{1}{g(x)^2} \\frac{d(g(x)^2)}{dx} + \\frac{2f(x)}{g(x)^2} = 0$$\n由于对于 $x^2$ 的二次式 $g(x)^2 = x^4 - 3x^2 + 3$ 的判别式为 $(-3)^2 - 4(1)(3) = -3 < 0$，所以它始终为正。因此，我们可以乘以 $g(x)^2$ 来获得一个更简单的极值位置条件：\n$$2f(x) - \\frac{d}{dx}[g(x)^2] = 0$$\n给定的函数是 $f(x) = -x$ 和 $g(x)^2 = x^4 - 3x^2 + 3$。我们计算 $g(x)^2$ 的导数：\n$$\\frac{d}{dx}[g(x)^2] = \\frac{d}{dx}(x^4 - 3x^2 + 3) = 4x^3 - 6x$$\n将这些表达式代入极值条件：\n$$2(-x) - (4x^3 - 6x) = 0$$\n$$-2x - 4x^3 + 6x = 0$$\n$$-4x^3 + 4x = 0$$\n$$-4x(x^2 - 1) = 0$$\n$$-4x(x - 1)(x + 1) = 0$$\n临界点，即 $P_s(x)$ 的极值位置，是 $x = -1$，$x = 0$ 和 $x = 1$。\n\n为证明PDF是双峰的，我们必须对这些极值点进行分类。双峰分布有两个局部极大值。我们对 $\\ln(P_s(x))$ 使用二阶导数检验。令 $\\Phi(x) = \\ln(P_s(x))$。我们从 $\\Phi'(x) = 0$ 找到了临界点。现在我们必须在这些点上评估 $\\Phi''(x)$ 的符号。\n$$\\Phi'(x) = \\frac{2f(x) - \\frac{d}{dx}[g(x)^2]}{g(x)^2} = \\frac{-4x^3 + 4x}{x^4 - 3x^2 + 3}$$\n令 $H(x) = -4x^3 + 4x$ 和 $D(x) = x^4 - 3x^2 + 3$。那么 $\\Phi'(x) = \\frac{H(x)}{D(x)}$。使用商法则，二阶导数是：\n$$\\Phi''(x) = \\frac{H'(x)D(x) - H(x)D'(x)}{[D(x)]^2}$$\n在临界点处，$H(x) = 0$，所以 $\\Phi''(x)$ 的表达式简化为：\n$$\\Phi''(x_c) = \\frac{H'(x_c)D(x_c)}{[D(x_c)]^2} = \\frac{H'(x_c)}{D(x_c)}$$\n由于 $D(x)=g(x)^2$ 始终为正，$\\Phi''(x_c)$ 的符号由 $H'(x_c)$ 的符号决定。\n$H(x)$ 的导数是 $H'(x) = \\frac{d}{dx}(-4x^3 + 4x) = -12x^2 + 4$。\n现在我们检验每个临界点：\n1.  对于 $x = 0$：$\\Phi''(0) = \\frac{H'(0)}{D(0)} = \\frac{-12(0)^2 + 4}{3} = \\frac{4}{3} > 0$。这表明是一个局部极小值。\n2.  对于 $x = 1$：$\\Phi''(1) = \\frac{H'(1)}{D(1)} = \\frac{-12(1)^2 + 4}{1 - 3 + 3} = \\frac{-8}{1} < 0$。这表明是一个局部极大值。\n3.  对于 $x = -1$：$\\Phi''(-1) = \\frac{H'(-1)}{D(-1)} = \\frac{-12(-1)^2 + 4}{1 - 3 + 3} = \\frac{-8}{1} < 0$。这表明是一个局部极大值。\n\n稳态PDF $P_s(x)$ 在 $x = -1$ 和 $x = 1$ 处有两个局部极大值，并在它们之间的 $x = 0$ 处有一个局部极小值。两个峰（极大值）的存在证实了该分布是双峰的。尽管确定性漂移 $f(x)=-x$ 仅在 $x=0$ 处有一个稳定不动点，但这种情况仍然发生，这一现象被称为噪声诱导双稳态。\n\n两个峰的位置是 $x = -1$ 和 $x = 1$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix} -1 & 1 \\end{pmatrix}\n}\n$$", "id": "2676865"}, {"introduction": "将理论知识应用于实际计算是检验理解的最终标准。在这个实践中，您将为经典的Schlögl化学双稳态模型编写一个数值程序，来计算其化学主方程的稳态解。这项编码任务旨在将理论（如详细平衡和递推关系）与实际的数值计算相结合，要求您处理数值稳定性和状态空间截断等实际问题，这是对随机系统进行定量分析的一项核心技能 [@problem_id:2676908]。", "problem": "考虑一个具有恒化环境的单物种自催化反应网络（Schlögl 型模型）。单一动态物种 $X$ 与两个保持在固定浓度的储备物种 $A$ 和 $B$相互作用。反应通道及其对 $X$ 的拷贝数 $n$ 的化学计量效应如下：\n- $A + 2X \\xrightarrow{k_1} 3X$ （净变化 $+1$），\n- $3X \\xrightarrow{k_2} A + 2X$ （净变化 $-1$），\n- $B \\xrightarrow{k_3} X$ （净变化 $+1$），\n- $X \\xrightarrow{k_4} B$ （净变化 $-1$）。\n\n假设在一个体积为 $\\Omega$ 的充分混合区域内，遵循标准的随机质量作用动力学，其中 $A$ 和 $B$ 的恒化浓度分别为 $a$ 和 $b$。拷贝数 $n \\in \\{0,1,2,\\dots\\}$ 的生灭过程中，其倾向（风险）函数由以下公式给出：\n- 生成倾向 $\\lambda_n = k_1 a \\,\\dfrac{n(n-1)}{\\Omega} + k_3 b \\,\\Omega$，\n- 消亡倾向 $\\mu_n = k_2 \\,\\dfrac{n(n-1)(n-2)}{\\Omega^2} + k_4 n$。\n\n在确定性大体积极限下，浓度 $x = n/\\Omega$ 的演化遵循平均场速率方程\n$$\n\\frac{dx}{dt} = k_1 a\\, x^2 - k_2 x^3 + k_3 b - k_4 x.\n$$\n某些参数集表现出确定性双稳态（两个稳定不动点被一个不稳定不动点分隔），而在有限的 $\\Omega$ 下，化学主方程（CME）中 $n$ 的稳态概率分布是双峰的，并且峰值位置可能随 $\\Omega$ 系统性地移动。\n\n您的任务是，对于指定的参数集和系统体积 $\\Omega$，在不调用任何预制解的情况下，数值计算一维生灭过程化学主方程的稳态分布，识别两个峰值位置（两个最可能的拷贝数），并将其位置以浓度 $x = n/\\Omega$ 的形式报告。数值方法必须从稳态 CME 的第一性原理推导得出，仅从核心定义和生灭过程的结构出发；在程序设计中，不得预先假设任何闭合形式的稳态分布。\n\n您的推导必须基于以下经过充分检验的事实和核心定义：\n- 一维生灭过程的化学主方程（CME）的定义及其稳态条件。\n- 生灭过程的生成元是三对角的，其非对角线元素由生成和消亡倾向决定。\n- 概率归一化为一的原则。\n\n您必须设计一个数值稳定且科学上现实的计算方法，该方法能产生归一化的稳态分布，然后通过识别稳态概率在 $n$ 上的局部最大值来定位其两个峰值。由于状态空间是可数无限的，您必须选择一个科学上合理的截断策略，以确保在数值公差范围内归一化，并且不会扭曲主要峰值的识别。\n\n对于此问题，有两个确定性双稳态参数集。所有参数均为无量纲：\n\n- 参数集 $\\mathcal{P}_A$：$k_1 = 1.0$, $k_2 = 0.02$, $k_3 = 1.0$, $k_4 = 3.92$, $a = 0.56$, $b = 5.76$。\n- 参数集 $\\mathcal{P}_B$：$k_1 = 1.0$, $k_2 = 0.05$, $k_3 = 1.0$, $k_4 = 4.275$, $a = 0.925$, $b = 4.5$。\n\n测试套件。对于每个参数集，为以下体积 $\\Omega$ 计算两个稳态峰值（以浓度形式表示）：\n- 对于 $\\mathcal{P}_A$：$\\Omega \\in \\{10.0, 30.0, 100.0\\}$。\n- 对于 $\\mathcal{P}_B$：$\\Omega \\in \\{20.0, 50.0, 120.0\\}$。\n\n您的程序必须：\n- 对于每个测试用例，使用一个源自稳态 CME 的数值稳定方法，构建并求解生灭过程 CME 的归一化稳态分布，并采用合理的、能保留双峰结构的状态空间截断原则。\n- 将稳态分布在 $n$ 上的两个最高局部最大值识别为两个主要峰值位置，并将这些位置转换为浓度 $x = n/\\Omega$。\n- 对于每个测试用例，按升序报告两个峰值浓度，并四舍五入到三位小数。\n\n最终输出格式。您的程序应生成单行输出，其中包含所有六个结果，格式为单个 Python 风格的列表的列表，其中每个内部列表包含一个测试用例的两个四舍五入后的峰值浓度，按上文列出的顺序排列。例如，一个包含三个案例的输出看起来像 $[ [x_{1,\\mathrm{low}}, x_{1,\\mathrm{high}}], [x_{2,\\mathrm{low}}, x_{2,\\mathrm{high}}], [x_{3,\\mathrm{low}}, x_{3,\\mathrm{high}}] ]$；您必须按指定顺序生成六个这样的内部列表。由于所有量都是无量纲的，因此不需要物理单位。不涉及角度。任何地方都不得使用百分比；所有答案都是纯浮点数。", "solution": "此问题是有效的。这是一个在随机化学动力学领域中定义明确、科学上合理的问题，具体涉及 Schlögl 模型的稳态性质。所有参数和动力学定律都已指定，该任务是该领域的一项标准计算练习。\n\n解决方案通过从第一性原理推导求给定生灭过程稳态概率分布的数值方法来进行。\n\n第一性原理：稳态化学主方程 (CME)\n\n系统的状态由物种 $X$ 的拷贝数 $n \\in \\{0, 1, 2, \\dots\\}$ 给出。处于状态 $n$ 的概率 $P_n(t)$ 的时间演化由 CME 控制。对于具有生成倾向 $\\lambda_n$ 和消亡倾向 $\\mu_n$ 的一维生灭过程，CME 为：\n$$ \\frac{dP_n(t)}{dt} = \\lambda_{n-1} P_{n-1}(t) + \\mu_{n+1} P_{n+1}(t) - (\\lambda_n + \\mu_n) P_n(t) $$\n在稳态下，概率 $P_n$ 是恒定的，因此 $\\frac{dP_n}{dt} = 0$。这意味着任何两个相邻状态 $n$ 和 $n+1$ 之间的净概率通量为零。这个条件，被称为细致平衡，表示为：\n$$ \\lambda_n P_n = \\mu_{n+1} P_{n+1} $$\n对于所有 $n \\ge 0$。这个基本关系直接源于一维生灭过程的稳态 CME 结构。\n\n递推关系的推导\n\n从细致平衡条件，我们推导出稳态概率的递推关系：\n$$ P_{n+1} = \\frac{\\lambda_n}{\\mu_{n+1}} P_n $$\n这个关系允许我们将任何概率 $P_n$ 用 $P_0$ 表示：\n$$ P_n = P_0 \\prod_{i=0}^{n-1} \\frac{\\lambda_i}{\\mu_{i+1}} $$\n给定 Schlögl 模型的倾向函数为：\n$$ \\lambda_n = k_1 a \\frac{n(n-1)}{\\Omega} + k_3 b \\Omega $$\n$$ \\mu_n = k_2 \\frac{n(n-1)(n-2)}{\\Omega^2} + k_4 n $$\n注意 $\\mu_0=0$，但递推关系中涉及 $\\mu_{i+1}$，并且在给定正速率常数的情况下，对于所有 $n \\ge 1$，$\\mu_n > 0$，因此不会发生除零错误。\n\n数值策略\n\n直接计算乘积 $\\prod_{i=0}^{n-1} (\\lambda_i / \\mu_{i+1})$ 在数值上是不稳定的，因为它可能导致浮点数上溢或下溢，特别是对于具有深概率谷的双峰分布。一个稳定的方法是使用对数进行计算。设 $L_n = \\ln(P_n)$。递推关系变为：\n$$ L_{n+1} = L_n + \\ln(\\lambda_n) - \\ln(\\mu_{n+1}) $$\n我们可以计算一个未归一化的对数概率数组 $L'_n = \\ln(P_n/P_0)$，从 $L'_0 = 0$ 开始：\n$$ L'_n = \\sum_{i=0}^{n-1} \\left[ \\ln(\\lambda_i) - \\ln(\\mu_{i+1}) \\right] $$\n\n状态空间截断\n\n状态空间是无限的。为了得到数值解，我们必须在最大拷贝数 $N_{max}$ 处将其截断，使得 $\\sum_{n=0}^{N_{max}} P_n \\approx 1$。因为对于大的 $n$，$\\lambda_n \\propto n^2$ 且 $\\mu_n \\propto n^3$，所以消亡速率占主导，确保 $P_n$ 随 $n$ 增大而快速衰减。一个稳健的 $N_{max}$ 选择方法是，通过求解 $\\frac{dx}{dt} = f(x) = -k_2 x^3 + k_1 a x^2 - k_4 x + k_3 b = 0$ 来找到确定性稳态。在双稳态区域，这个三次方程有三个正实根，两个稳定根 ($x_{s1}, x_{s2}$) 和一个不稳定根。随机模式（峰值）将位于稳定不动点附近。我们选择 $N_{max}$ 显著大于最大稳定不动点对应的拷贝数 $n_{s2} = \\Omega x_{s2}$。一个安全的选择是 $N_{max} = \\lceil 2.0 \\cdot \\Omega \\cdot x_{s2,max} \\rceil$，其中 $x_{s2,max}$ 是 $f(x)=0$ 的最大根。\n\n归一化\n\n未归一化的概率是 $P'_n = \\exp(L'_n)$。归一化常数是 $Z = \\sum_{n=0}^{N_{max}} P'_n$。归一化的概率是 $P_n = P'_n / Z$。为避免计算 $Z$ 时发生上溢，我们使用 log-sum-exp 技巧。设 $L'_{max} = \\max_n(L'_n)$。\n$$ Z = \\sum_{n=0}^{N_{max}} \\exp(L'_n) = \\exp(L'_{max}) \\sum_{n=0}^{N_{max}} \\exp(L'_n - L'_{max}) $$\n然后从对数概率计算最终的归一化概率分布，以保持稳定性。\n\n峰值识别\n\n分布的峰值是对应于概率分布 $P_n$ 中局部最大值的拷贝数 $n$。对于双峰分布，我们预期有两个这样的峰。我们识别在范围 $1 \\le n < N_{max}$ 内所有满足 $P_n > P_{n-1}$ 且 $P_n > P_{n+1}$ 的整数 $n$。由于问题暗示存在两个主要峰值，我们找到所有这样的峰，并选择对应最高概率值的两个。这些峰值拷贝数 $n_{mode,1}$ 和 $n_{mode,2}$ 随后被转换为浓度 $x_{mode} = n_{mode}/\\Omega$。\n\n以下 Python 代码实现了这一完整的数值过程。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the stationary distribution modes of the Schlögl model CME\n    for specified parameter sets and system volumes.\n    \"\"\"\n\n    # Parameter sets as provided in the problem description.\n    params = {\n        'A': {'k1': 1.0, 'k2': 0.02, 'k3': 1.0, 'k4': 3.92, 'a': 0.56, 'b': 5.76},\n        'B': {'k1': 1.0, 'k2': 0.05, 'k3': 1.0, 'k4': 4.275, 'a': 0.925, 'b': 4.5}\n    }\n\n    # Test suite as provided.\n    test_cases = [\n        ('A', 10.0),\n        ('A', 30.0),\n        ('A', 100.0),\n        ('B', 20.0),\n        ('B', 50.0),\n        ('B', 120.0),\n    ]\n\n    def calculate_modes(k1, k2, k3, k4, a, b, Omega):\n        \"\"\"\n        Calculates the two dominant mode concentrations for a given parameter set.\n        \"\"\"\n        # Step 1: Determine state-space truncation size N_max.\n        # This is done by finding the roots of the deterministic rate equation\n        # and setting N_max safely beyond the largest stable fixed point.\n        coeffs = [-k2, k1 * a, -k4, k3 * b]\n        roots = np.roots(coeffs)\n        real_roots = roots[np.isreal(roots)].real\n        if len(real_roots) == 0:\n             raise ValueError(\"No real deterministic fixed points found.\")\n        x_max_root = np.max(real_roots)\n        \n        # A safety factor of 2.0 ensures the distribution tail is captured.\n        N_max = int(np.ceil(2.0 * Omega * x_max_root))\n        if N_max <= 2: # Ensure state space is large enough for peak finding\n            N_max = int(np.ceil(Omega * x_max_root + 5 * np.sqrt(Omega * x_max_root)))\n            if N_max < 100: N_max = 100\n\n        # Step 2: Compute unnormalized log-probabilities using the recurrence relation.\n        # The calculation is vectorized for efficiency.\n        n = np.arange(N_max + 1, dtype=np.float64)\n        \n        # Propensity functions as given in the problem statement.\n        lambda_vals = k1 * a * n * (n - 1.0) / Omega + k3 * b * Omega\n        mu_vals = k2 * n * (n - 1.0) * (n - 2.0) / (Omega**2) + k4 * n\n        \n        # The recurrence relation is P_{i+1}/P_i = lambda_i / mu_{i+1}.\n        # In log-space: log(P_{i+1}) = log(P_i) + log(lambda_i) - log(mu_{i+1}).\n        # Handle log(0) for propensities. lambda_n is always positive for n>=0.\n        # mu_vals[0] is 0, but is not used in the recurrence denominator mu[1:].\n        with np.errstate(divide='ignore'):\n            log_lambda = np.log(lambda_vals[:N_max])\n            log_mu_plus_1 = np.log(mu_vals[1:])\n        \n        # The recurrence sum is computed efficiently using np.cumsum.\n        log_P_unnormalized = np.zeros(N_max + 1)\n        log_P_unnormalized[1:] = np.cumsum(log_lambda - log_mu_plus_1)\n\n        # Step 3: Normalize the distribution using the log-sum-exp trick for stability.\n        max_log_P = np.max(log_P_unnormalized)\n        P_normalized = np.exp(log_P_unnormalized - max_log_P)\n        P_normalized /= np.sum(P_normalized)\n\n        # Step 4: Find the two dominant modes by identifying local maxima.\n        peak_indices = []\n        for i in range(1, N_max):\n            if P_normalized[i] > P_normalized[i-1] and P_normalized[i] > P_normalized[i+1]:\n                peak_indices.append(i)\n        \n        if len(peak_indices) < 2:\n            # This case is not expected given the problem description but is handled\n            # by sorting all points and taking the top two probabilities if needed.\n            # In a truly unimodal case this would be incorrect, but problem guarantees bistability.\n            sorted_prob_indices = np.argsort(P_normalized)[-2:]\n            modes_n = sorted(sorted_prob_indices)\n        elif len(peak_indices) > 2:\n            # If more than two peaks are found, select the two with the highest probability.\n            peak_probs = [P_normalized[i] for i in peak_indices]\n            top_two_indices = np.argsort(peak_probs)[-2:]\n            modes_n = sorted([peak_indices[i] for i in top_two_indices])\n        else: # Exactly two peaks found\n            modes_n = sorted(peak_indices)\n\n        # Step 5: Convert mode copy numbers to concentrations.\n        modes_x = [n / Omega for n in modes_n]\n        return modes_x\n\n    # --- Main execution loop ---\n    results = []\n    for p_key, Omega_val in test_cases:\n        p = params[p_key]\n        modes = calculate_modes(p['k1'], p['k2'], p['k3'], p['k4'], p['a'], p['b'], Omega_val)\n        rounded_modes = [round(m, 3) for m in modes]\n        results.append(rounded_modes)\n\n    # Format the final output string according to the specification.\n    # The format is a string representation of a Python list of lists,\n    # with no spaces within each inner list.\n    formatted_results = []\n    for pair in results:\n        formatted_results.append(f\"[{pair[0]},{pair[1]}]\")\n    \n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2676908"}]}