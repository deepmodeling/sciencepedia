{"hands_on_practices": [{"introduction": "本练习旨在建立一项基本技能：为给定的化学反应网络推导其化学朗之万方程（CLE）。你将实践如何将微观的反应规则转化为一个连续的随机微分方程，并学习使用关键的线性噪声近似（LNA）方法来分析系统在稳态附近的涨落。这是理解介观尺度动力学如何从基本原理中涌现出来的核心实践。[@problem_id:2684182]", "problem": "考虑一个在固定体积 $V$ 中充分混合的等温反应系统，其中包含单一化学物种 $X$，该物种经历以下具有质量作用动力学的反应：\n- 移入：$\\varnothing \\to X$，速率常数为 $k_{0}$（因此倾向函数为 $a_{1}(X)=k_{0}V$）。\n- 线性降解：$X \\to \\varnothing$，速率常数为 $k_{1}$（因此倾向函数为 $a_{2}(X)=k_{1}X$）。\n- 成对湮灭：$2X \\to \\varnothing$，速率常数为 $k_{2}$（因此倾向函数为 $a_{3}(X)=k_{2}\\,\\frac{X(X-1)}{V}$）。\n\n该系统在介观尺度上通过化学主方程建模，其倾向函数如上定义，化学计量变化为 $\\nu_{1}=+1$、$\\nu_{2}=-1$ 和 $\\nu_{3}=-2$。定义浓度 $x=X/V$。\n\n从主方程的描述以及充分混合系统的倾向函数和化学计量的定义出发，推导浓度 $x$ 的化学朗之万方程（CLE），其形式为一个伊藤随机微分方程 $dx=f(x)\\,dt+\\frac{1}{\\sqrt{V}}\\,g(x)\\,dW(t)$，其中 $W(t)$ 是一个标准维纳过程。然后，确定漂移项 $f(x)$ 的稳定确定性不动点 $x^{\\ast}>0$，并围绕 $x^{\\ast}$ 线性化化学朗之万方程，以获得一个奥恩斯坦-乌伦贝克近似，其平稳方差可以以闭合形式计算。\n\n将此线性噪声近似下浓度 $x$ 在平稳状态下的平稳方差 $\\operatorname{Var}[x]$ 表示为仅包含 $k_{0}$、$k_{1}$、$k_{2}$ 和 $V$ 的单一解析表达式。除这些参数和标准代数运算外，不要引入任何其他符号。最终答案无需单位，也不要进行四舍五入。", "solution": "起点是充分混合反应系统的化学主方程。对于由 $r$ 索引的、化学计量变化为 $\\nu_{r}$、倾向函数为 $a_{r}(X)$ 的反应，在波动为 $\\sqrt{V}$ 数量级的介观尺度变换下，化学主方程可通过 Kramers–Moyal 展开近似为一个 Fokker–Planck 方程。这得到了化学朗之万方程（CLE），一个关于分子数 $X(t)$ 的伊藤随机微分方程，\n$$\ndX(t)=\\sum_{r}\\nu_{r}\\,a_{r}\\!\\left(X(t)\\right)\\,dt+\\sum_{r}\\nu_{r}\\,\\sqrt{a_{r}\\!\\left(X(t)\\right)}\\,dW_{r}(t),\n$$\n其中 $W_{r}(t)$ 是独立的标准维纳过程。引入浓度 $x(t)=X(t)/V$，并将 $a_{r}(X)$ 在 $V$ 的主导项上写为 $a_{r}(X)=V\\,\\alpha_{r}(x)$（宏观倾向函数），可得到\n$$\ndx(t)=\\sum_{r}\\nu_{r}\\,\\alpha_{r}\\!\\left(x(t)\\right)\\,dt+\\frac{1}{\\sqrt{V}}\\sum_{r}\\nu_{r}\\,\\sqrt{\\alpha_{r}\\!\\left(x(t)\\right)}\\,dW_{r}(t).\n$$\n对于当前反应，化学计量变化为 $\\nu_{1}=+1$、$\\nu_{2}=-1$、$\\nu_{3}=-2$。精确的离散倾向函数为 $a_{1}(X)=k_{0}V$、$a_{2}(X)=k_{1}X$、$a_{3}(X)=k_{2}\\,\\frac{X(X-1)}{V}$。在介观极限下，相应的宏观倾向函数为\n$$\n\\alpha_{1}(x)=k_{0},\\quad \\alpha_{2}(x)=k_{1}x,\\quad \\alpha_{3}(x)=k_{2}x^{2}.\n$$\n因此，浓度 $x$ 的化学朗之万方程为\n$$\ndx=\\underbrace{\\big(k_{0}-k_{1}x-2k_{2}x^{2}\\big)}_{f(x)}\\,dt+\\frac{1}{\\sqrt{V}}\\left[\\,\\nu_{1}\\sqrt{\\alpha_{1}(x)}\\,dW_{1}+\\nu_{2}\\sqrt{\\alpha_{2}(x)}\\,dW_{2}+\\nu_{3}\\sqrt{\\alpha_{3}(x)}\\,dW_{3}\\,\\right].\n$$\n由于 $W_{1}$、$W_{2}$ 和 $W_{3}$ 是独立的，一维噪声可以合并为一个具有状态依赖振幅 $g(x)$ 的单一有效维纳过程 $W(t)$，该振幅与总瞬时方差相匹配：\n$$\n\\left(\\frac{1}{\\sqrt{V}}\\,g(x)\\right)^{2}dt=\\frac{1}{V}\\left(\\nu_{1}^{2}\\alpha_{1}(x)+\\nu_{2}^{2}\\alpha_{2}(x)+\\nu_{3}^{2}\\alpha_{3}(x)\\right)dt.\n$$\n因此，\n$$\ng(x)=\\sqrt{\\nu_{1}^{2}\\alpha_{1}(x)+\\nu_{2}^{2}\\alpha_{2}(x)+\\nu_{3}^{2}\\alpha_{3}(x)}=\\sqrt{k_{0}+k_{1}x+4k_{2}x^{2}}.\n$$\n因此，紧凑形式的化学朗之万方程为\n$$\ndx=\\big(k_{0}-k_{1}x-2k_{2}x^{2}\\big)\\,dt+\\frac{1}{\\sqrt{V}}\\,\\sqrt{k_{0}+k_{1}x+4k_{2}x^{2}}\\,dW(t).\n$$\n\n接下来，确定性不动点 $x^{\\ast}>0$ 满足 $f(x^{\\ast})=0$，即\n$$\nk_{0}-k_{1}x^{\\ast}-2k_{2}(x^{\\ast})^{2}=0,\n$$\n这是一个二次方程 $2k_{2}(x^{\\ast})^{2}+k_{1}x^{\\ast}-k_{0}=0$，其根为\n$$\nx=\\frac{-k_{1}\\pm\\sqrt{k_{1}^{2}+8k_{2}k_{0}}}{4k_{2}}.\n$$\n其正根为\n$$\nx^{\\ast}=\\frac{-k_{1}+\\sqrt{k_{1}^{2}+8k_{2}k_{0}}}{4k_{2}}.\n$$\n线性稳定性由 $f'(x)=-k_{1}-4k_{2}x$ 给出，因此 $f'(x^{\\ast})=-k_{1}-4k_{2}x^{\\ast}<0$，该不动点是线性稳定的。\n\n对于线性噪声近似（LNA），将化学朗之万方程在 $x^{\\ast}$ 附近进行线性化。令 $y=x-x^{\\ast}$，则\n$$\ndy=f'(x^{\\ast})\\,y\\,dt+\\frac{1}{\\sqrt{V}}\\,g(x^{\\ast})\\,dW(t)+\\text{higher-order terms in }y,\n$$\n并忽略 $y$ 的高阶项。这是一个 Ornstein–Uhlenbeck 过程 $dy=a\\,y\\,dt+\\sigma\\,dW$，其中 $a=f'(x^{\\ast})$，$ \\sigma=\\frac{1}{\\sqrt{V}}\\,g(x^{\\ast})$。其平稳方差为\n$$\n\\operatorname{Var}[y]=\\frac{\\sigma^{2}}{-2a}=\\frac{\\frac{1}{V}\\,g(x^{\\ast})^{2}}{-2f'(x^{\\ast})}.\n$$\n由于 $y=x-x^{\\ast}$，所以 $\\operatorname{Var}[x]=\\operatorname{Var}[y]$。我们明确地计算 $g(x^{\\ast})^{2}$ 和 $f'(x^{\\ast})$。\n$$\n\\operatorname{Var}[x]=\\frac{1}{V}\\cdot\\frac{g(x^{\\ast})^{2}}{-2f'(x^{\\ast})}=\\frac{1}{V}\\cdot\\frac{k_{0}+k_{1}x^{\\ast}+4k_{2}(x^{\\ast})^{2}}{2\\big(k_{1}+4k_{2}x^{\\ast}\\big)}.\n$$\n利用稳态关系 $k_{0}=k_{1}x^{\\ast}+2k_{2}(x^{\\ast})^{2}$，我们可以简化分子：\n$$\nk_{0}+k_{1}x^{\\ast}+4k_{2}(x^{\\ast})^{2} = (k_{1}x^{\\ast}+2k_{2}(x^{\\ast})^{2}) + k_{1}x^{\\ast}+4k_{2}(x^{\\ast})^{2} = 2k_{1}x^{\\ast}+6k_{2}(x^{\\ast})^{2} = 2x^{\\ast}(k_{1}+3k_{2}x^{\\ast}).\n$$\n代入方差表达式中，得到：\n$$\n\\operatorname{Var}[x] = \\frac{1}{V} \\cdot \\frac{2x^{\\ast}(k_{1}+3k_{2}x^{\\ast})}{2(k_{1}+4k_{2}x^{\\ast})} = \\frac{1}{V}\\cdot\\frac{x^{\\ast}\\big(k_{1}+3k_{2}x^{\\ast}\\big)}{k_{1}+4k_{2}x^{\\ast}}.\n$$\n代入 $x^{\\ast}=\\frac{-k_{1}+\\sqrt{k_{1}^{2}+8k_{2}k_{0}}}{4k_{2}}$ 可以得到一个仅用 $k_{0}$、$k_{1}$、$k_{2}$ 和 $V$ 表示的闭合形式表达式。为了代数运算的简洁，令 $\\Delta=\\sqrt{k_{1}^{2}+8k_{2}k_{0}}$。那么\n$$\nk_{1}+4k_{2}x^{\\ast}=k_{1}+4k_{2}\\cdot\\frac{-k_{1}+\\Delta}{4k_{2}}=\\Delta,\n$$\n以及\n$$\nk_{1}+3k_{2}x^{\\ast}=k_{1}+3k_{2}\\cdot\\frac{-k_{1}+\\Delta}{4k_{2}}=\\frac{k_{1}+3\\Delta}{4},\n$$\n所以\n$$\n\\operatorname{Var}[x]=\\frac{1}{V}\\cdot\\frac{\\left(\\frac{-k_{1}+\\Delta}{4k_{2}}\\right)\\left(\\frac{k_{1}+3\\Delta}{4}\\right)}{\\Delta}=\\frac{\\left(-k_{1}+\\sqrt{k_{1}^{2}+8k_{2}k_{0}}\\right)\\left(k_{1}+3\\sqrt{k_{1}^{2}+8k_{2}k_{0}}\\right)}{16\\,k_{2}\\,\\sqrt{k_{1}^{2}+8k_{2}k_{0}}\\,V}.\n$$\n这就是在线性噪声近似下，所需浓度的平稳方差，它仅用 $k_{0}$、$k_{1}$、$k_{2}$ 和 $V$ 来表示。", "answer": "$$\\boxed{\\frac{\\left(-k_{1}+\\sqrt{k_{1}^{2}+8k_{2}k_{0}}\\right)\\left(k_{1}+3\\sqrt{k_{1}^{2}+8k_{2}k_{0}}\\right)}{16\\,k_{2}\\,\\sqrt{k_{1}^{2}+8k_{2}k_{0}}\\,V}}$$", "id": "2684182"}, {"introduction": "在推导出化学朗之万方程的基础上，本练习将探索其动态特性。你将学习如何应用伊东引理（Itô's lemma）来推导统计矩（如均值和方差）的演化方程，并接触到在非线性系统中普遍存在的矩封闭（moment closure）问题。这项技能对于分析那些无法求得精确解的复杂随机系统的行为至关重要。[@problem_id:2684183]", "problem": "考虑一个充分混合的介观系统，其中单一化学物种 $X$ 发生以下反应：\n- $\\varnothing \\to X$，随机倾向为 $a_{1}(N)=\\alpha$，其中 $N(t)$ 表示 $t$ 时刻 $X$ 的分子数，\n- $2X \\to \\varnothing$，随机倾向为 $a_{2}(N)=\\beta \\binom{N}{2}$，\n\n其中 $\\alpha>0$ 和 $\\beta>0$ 是常数。第一个反应的化学计量变化为 $\\nu_{1}=+1$，第二个反应的化学计量变化为 $\\nu_{2}=-2$。\n\n从其底层的连续时间马尔可夫跳跃过程的扩散近似——即化学朗之万方程（CLE）——出发，将 $N(t)$ 视为一个由独立标准维纳过程驱动的一维随机微分方程（SDE）控制的实值过程。使用 Itô 积分推导前两个矩 $m(t)=\\mathbb{E}[N(t)]$ 和 $M_{2}(t)=\\mathbb{E}[N(t)^{2}]$ 的时间演化，并明确指出 Itô 校正项出现在何处。然后，施加一个二阶矩封闭，该封闭用平均值的平方来近似二阶阶乘矩，即 $\\mathbb{E}[N(t)(N(t)-1)]\\approx m(t)^{2}$，以在稳态下封闭矩方程。\n\n在此封闭下，计算稳态平均分子数 $m_{\\ast}=\\lim_{t\\to\\infty}\\mathbb{E}[N(t)]$，需用 $\\alpha$ 和 $\\beta$ 表示为一个精确的解析表达式。将 $m_{\\ast}$ 报告为无量纲的计数（无单位）。不需要数值，也无需四舍五入。您的最终答案必须是一个单一的封闭形式表达式。", "solution": "该系统涉及单一物种 $X$ 的两个反应，其分子数为 $N(t)$：\n1. $\\varnothing \\to X$：倾向 $a_{1}(N) = \\alpha$，化学计量变化 $\\nu_{1} = +1$。\n2. $2X \\to \\varnothing$：倾向 $a_{2}(N) = \\beta \\binom{N}{2} = \\frac{\\beta}{2}N(N-1)$，化学计量变化 $\\nu_{2} = -2$。\n\n化学朗之万方程（CLE）是一个随机微分方程（SDE），它近似了分子数 $N(t)$ 的演化。其一般形式为：\n$$ dN(t) = \\left( \\sum_{j} \\nu_{j} a_{j}(N) \\right) dt + \\sum_{j} \\nu_{j} \\sqrt{a_{j}(N)} dW_{j}(t) $$\n其中 $dW_{j}(t)$ 是独立标准维纳过程的增量。通过对所有方差求和，总噪声项可以合并为一个单一的维纳过程 $dW(t)$。于是，SDE 变为：\n$$ dN(t) = A(N) dt + B(N) dW(t) $$\n其中漂移项 $A(N)$ 为：\n$$ A(N) = \\sum_{j} \\nu_{j} a_{j}(N) = \\nu_{1} a_{1}(N) + \\nu_{2} a_{2}(N) = (1)(\\alpha) + (-2)\\left(\\frac{\\beta}{2}N(N-1)\\right) = \\alpha - \\beta N(N-1) $$\n扩散项 $B(N)$ 由 $B(N)^2 = \\sum_{j} \\nu_{j}^2 a_{j}(N)$ 给出：\n$$ B(N)^2 = \\nu_{1}^2 a_{1}(N) + \\nu_{2}^2 a_{2}(N) = (1)^2(\\alpha) + (-2)^2\\left(\\frac{\\beta}{2}N(N-1)\\right) = \\alpha + 2\\beta N(N-1) $$\n因此，该系统的特定 CLE 为：\n$$ dN(t) = \\left( \\alpha - \\beta N(t)(N(t)-1) \\right) dt + \\sqrt{\\alpha + 2\\beta N(t)(N(t)-1)} dW(t) $$\n\n为求矩的时间演化，我们使用 Itô 引理。对于一个函数 $f(N)$，其微分 $df(N)$ 由下式给出：\n$$ df(N) = \\frac{\\partial f}{\\partial N} dN + \\frac{1}{2} \\frac{\\partial^2 f}{\\partial N^2} (dN)^2 $$\n使用 Itô 积分的法则，$(dN)^2 = (B(N) dW)^2 = B(N)^2 dt = (\\alpha + 2\\beta N(N-1)) dt$。代入此式和 $dN$ 的表达式，可得：\n$$ df(N) = \\left( \\frac{\\partial f}{\\partial N} A(N) + \\frac{1}{2} \\frac{\\partial^2 f}{\\partial N^2} B(N)^2 \\right) dt + \\frac{\\partial f}{\\partial N} B(N) dW $$\n对该方程取期望 $\\mathbb{E}[\\cdot]$，维纳过程项消失，得到 $f(N)$ 期望值时间演化的一般方程：\n$$ \\frac{d\\mathbb{E}[f(N)]}{dt} = \\mathbb{E}\\left[ \\frac{\\partial f}{\\partial N} A(N) + \\frac{1}{2} \\frac{\\partial^2 f}{\\partial N^2} B(N)^2 \\right] $$\n\n首先，我们推导一阶矩 $m(t) = \\mathbb{E}[N(t)]$ 的方程。令 $f(N) = N$。则 $\\frac{\\partial f}{\\partial N} = 1$ 且 $\\frac{\\partial^2 f}{\\partial N^2} = 0$。对于一阶矩，一般方程中的第二项（即 Itô 校正项）为零。\n$$ \\frac{dm}{dt} = \\mathbb{E}[1 \\cdot (\\alpha - \\beta N(N-1)) + 0] = \\alpha - \\beta \\mathbb{E}[N(N-1)] $$\n$$ \\frac{dm}{dt} = \\alpha - \\beta (\\mathbb{E}[N^2] - \\mathbb{E}[N]) = \\alpha - \\beta (M_{2}(t) - m(t)) $$\n这个一阶矩的方程依赖于二阶矩 $M_{2}(t) = \\mathbb{E}[N(t)^2]$。\n\n接下来，我们按要求推导二阶矩 $M_{2}(t)$ 的方程。令 $f(N) = N^2$。则 $\\frac{\\partial f}{\\partial N} = 2N$ 且 $\\frac{\\partial^2 f}{\\partial N^2} = 2$。\n$$ \\frac{dM_{2}}{dt} = \\mathbb{E}\\left[ 2N \\cdot (\\alpha - \\beta N(N-1)) + \\frac{1}{2} \\cdot 2 \\cdot (\\alpha + 2\\beta N(N-1)) \\right] $$\n其中 $\\mathbb{E}[\\frac{1}{2} \\cdot 2 \\cdot (\\alpha + 2\\beta N(N-1))] = \\mathbb{E}[\\alpha + 2\\beta N(N-1)]$ 这一项是关键的 **Itô 校正项**。没有它，结果将是不正确的。\n简化表达式：\n$$ \\frac{dM_{2}}{dt} = \\mathbb{E}[2\\alpha N - 2\\beta N^2(N-1) + \\alpha + 2\\beta N(N-1)] $$\n$$ \\frac{dM_{2}}{dt} = 2\\alpha \\mathbb{E}[N] - 2\\beta \\mathbb{E}[N^3] + 2\\beta \\mathbb{E}[N^2] + \\alpha + 2\\beta \\mathbb{E}[N^2] - 2\\beta \\mathbb{E}[N] $$\n$$ \\frac{dM_{2}}{dt} = \\alpha + (2\\alpha - 2\\beta)m(t) + 4\\beta M_{2}(t) - 2\\beta \\mathbb{E}[N^3] $$\n这个二阶矩的方程依赖于三阶矩 $\\mathbb{E}[N^3]$，这揭示了标准的矩层次问题。\n\n问题要求我们找到稳态平均值 $m_{\\ast} = \\lim_{t\\to\\infty} m(t)$。在稳态下，所有时间导数都为零。一阶矩的方程变为：\n$$ \\frac{dm}{dt} \\to 0 \\implies 0 = \\alpha - \\beta \\mathbb{E}[N_{\\ast}(N_{\\ast}-1)] $$\n其中 $N_{\\ast}$ 是稳态下分子数的随机变量。这为稳态二阶阶乘矩提供了一个精确的关系：\n$$ \\mathbb{E}[N_{\\ast}(N_{\\ast}-1)] = \\frac{\\alpha}{\\beta} $$\n现在我们在稳态下施加指定的封闭近似。问题要求使用 $\\mathbb{E}[N(t)(N(t)-1)] \\approx m(t)^2$。在稳态下，这变为：\n$$ \\mathbb{E}[N_{\\ast}(N_{\\ast}-1)] \\approx m_{\\ast}^2 $$\n这个近似等价于假设稳态分布具有泊松分布的二阶阶乘矩特性。将此近似代入从一阶矩动力学导出的精确稳态方程中：\n$$ m_{\\ast}^2 \\approx \\frac{\\alpha}{\\beta} $$\n求解 $m_{\\ast}$，并注意到分子数必须为非负数，我们取正平方根：\n$$ m_{\\ast} = \\sqrt{\\frac{\\alpha}{\\beta}} $$\n在给定的特定封闭下，寻找稳态平均值 $m_{\\ast}$ 并不需要二阶矩的方程。推导其动力学是为了满足问题陈述的所有部分，并正确识别 Itô 校正项。", "answer": "$$ \\boxed{\\sqrt{\\frac{\\alpha}{\\beta}}} $$", "id": "2684183"}, {"introduction": "最后的这项实践将理论与应用联系起来，展示了化学朗之万方程如何作为分析真实世界数据的统计模型。你将构建一个极大似然框架，从一个模拟的时间序列数据中推断反应参数，这是系统生物学和定量建模中的一项基本任务。通过这个练习，你将把抽象的随机微分方程转化为一个强大的数据分析工具。[@problem_id:2684181]", "problem": "考虑一个等温、充分混合的单物种生灭反应网络，其中分子物种 $X(t)$ 在随机反应框架下于介观拷贝数空间中演化。该网络包含两个反应，其化学计量向量分别为 $\\nu_1 = +1$ 和 $\\nu_2 = -1$，倾向函数（以拷贝数为单位的质量作用动力学）分别为 $a_1(x) = k_0$（零级生成）和 $a_2(x) = k_1 x$（一级消亡），其中 $k_0 \\ge 0$ 和 $k_1 \\ge 0$ 是待从数据中推断的未知动力学参数。假设在离散时间点 $t_i = i \\Delta t$（时间增量 $\\Delta t > 0$ 为常数）对 $X(t)$ 的状态进行完整且无噪声的观测。使用能够导出化学朗之万方程 (CLE) 的扩散近似和单步欧拉-丸山离散化方法，为 $X(t)$ 在每个时间步长上构建一个具有高斯转移密度的近似状态空间模型。通过将这些跨时间步长的转移密度相乘，为完整的观测轨迹构建一个似然函数。在所述假设下，从第一性原理出发，推导得出依赖于 $(k_0,k_1)$、观测轨迹和 $\\Delta t$ 的对数似然函数。\n\n您的任务是实现一个程序，针对每个提供的测试用例，为一组有限的候选参数对 $(k_0,k_1)$ 评估近似对数似然，并返回具有最大对数似然的参数对。将所有观测值视为实数值，并确保在评估任何候选参数时，似然函数中使用的所有高斯方差均为严格正值；如果某个候选参数 $(k_0,k_1)$ 会导致任何转移的方差为非正值，则该候选参数必须在该测试用例中被舍弃。仅使用由 CLE 扩散近似所蕴含的统计模型，不要引入任何额外的观测噪声模型。\n\n您推导方法时必须使用的基本原理：\n- 随机化学动力学中倾向函数 $a_r(x)$ 和化学计量向量 $\\nu_r$ 的定义。\n- 导致反应网络介观动力学的化学朗之万方程 (CLE) 的扩散近似。\n- 用于获取近似高斯转移密度的随机微分方程的欧拉-丸山离散化。\n\n测试套件：\n- 测试用例 A (一般情况):\n  - 时间增量 $\\Delta t = 0.2$。\n  - 观测值 (时间点 $t_0,t_1,\\dots,t_{10}$ 的状态有序列表): $[\\,10.0,\\,10.4,\\,10.1,\\,11.2,\\,11.2,\\,12.0,\\,11.8,\\,12.5,\\,12.6,\\,13.1,\\,12.5\\,]$。\n  - 候选参数对 $\\{(k_0,k_1)\\}$: $[\\, [\\,2.0,\\,0.1\\,],\\,[\\,1.0,\\,0.05\\,],\\,[\\,3.5,\\,0.25\\,],\\,[\\,2.0,\\,0.2\\,]\\,]$。\n- 测试用例 B (一级消亡率为零的边界情况):\n  - 时间增量 $\\Delta t = 0.5$。\n  - 观测值 (时间点 $t_0,t_1,\\dots,t_{7}$ 的状态有序列表): $[\\,3.0,\\,3.4,\\,4.7,\\,4.9,\\,4.8,\\,5.7,\\,6.0,\\,6.5\\,]$。\n  - 候选参数对 $\\{(k_0,k_1)\\}$: $[\\, [\\,1.2,\\,0.0\\,],\\,[\\,1.2,\\,0.05\\,],\\,[\\,0.8,\\,0.0\\,],\\,[\\,2.0,\\,0.2\\,]\\,]$。\n- 测试用例 C (更高的速率和更强的状态依赖性):\n  - 时间增量 $\\Delta t = 0.1$。\n  - 观测值 (时间点 $t_0,t_1,\\dots,t_{11}$ 的状态有序列表): $[\\,20.0,\\,19.5,\\,20.3,\\,19.1,\\,19.0,\\,18.7,\\,19.3,\\,18.4,\\,18.2,\\,17.7,\\,17.6,\\,18.0\\,]$。\n  - 候选参数对 $\\{(k_0,k_1)\\}$: $[\\, [\\,8.0,\\,0.5\\,],\\,[\\,10.0,\\,0.3\\,],\\,[\\,5.0,\\,0.6\\,],\\,[\\,7.0,\\,0.8\\,]\\,]$。\n\n对每个测试用例，您的程序必须：\n- 根据指定的网络、给定的 $\\Delta t$ 和观测轨迹，构建由 CLE 和欧拉-丸山离散化所蕴含的近似高斯转移模型。\n- 通过对轨迹中所有连续转移进行求和，计算每个候选参数 $(k_0,k_1)$ 的总对数似然。\n- 选择具有最高对数似然的候选参数（若出现平局，则选择在所提供列表中先出现的候选参数）。\n- 将每个测试用例选定的 $(k_0,k_1)$ 作为一对小数返回，保留三位小数，并保持 $(k_0,k_1)$ 的顺序。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，每个元素对应一个测试用例，其本身是一个列表 $[k_0,k_1]$。例如，打印的行应类似于 $[[k_{0,A},k_{1,A}],[k_{0,B},k_{1,B}],[k_{0,C},k_{1,C}]]$，其中每个条目都四舍五入到三位小数。\n- 无需报告物理单位；所有量均为无量纲的拷贝数和速率，使用一致的内部单位。本问题不涉及角度和百分比。", "solution": "我们根据物种数量的时间序列观测数据，从一组离散的候选参数中确定最可能的动力学参数 $(k_0, k_1)$。系统动力学模型被指定为扩散近似，这导出了化学朗之万方程 (CLE)。\n\n首先，我们定义随机反应网络。我们有一个物种 $X$ 和两个反应：\n1. 生成: $\\emptyset \\xrightarrow{k_0} X$，倾向函数为 $a_1(x) = k_0$，化学计量向量为 $\\nu_1 = +1$。\n2. 消亡: $X \\xrightarrow{k_1} \\emptyset$，倾向函数为 $a_2(x) = k_1 x$，化学计量向量为 $\\nu_2 = -1$。\n此处，$x$ 是物种 $X$ 的拷贝数，$k_0 \\ge 0$ 和 $k_1 \\ge 0$ 是反应速率常数。\n\n化学朗之万方程提供了一个连续随机微分方程 (SDE)，它近似于化学主方程的离散随机动力学。对于一个具有 $M$ 个反应的通用反应网络，其状态向量 $\\mathbf{X}(t)$ 的演化遵循：\n$$ \\frac{d\\mathbf{X}(t)}{dt} = \\sum_{r=1}^{M} \\boldsymbol{\\nu}_r a_r(\\mathbf{X}(t)) + \\sum_{r=1}^{M} \\boldsymbol{\\nu}_r \\sqrt{a_r(\\mathbf{X}(t))} \\Gamma_r(t) $$\n其中 $\\boldsymbol{\\nu}_r$ 是反应 $r$ 的化学计量向量，$a_r(\\mathbf{X}(t))$ 是其倾向函数，$\\Gamma_r(t)$ 是独立的高斯白噪声过程。\n\n对于我们的单物种系统，这个 SDE 可以写成伊藤 (Ito) 形式：\n$$ dX(t) = \\mu(X(t)) dt + \\sigma(X(t)) dW(t) $$\n漂移项 $\\mu(x)$ 是确定性变化率：\n$$ \\mu(x) = \\sum_{r=1}^{2} \\nu_r a_r(x) = (+1)a_1(x) + (-1)a_2(x) = k_0 - k_1 x $$\n扩散项的平方 $\\sigma^2(x)$ 代表了随机波动的强度：\n$$ \\sigma^2(x) = \\sum_{r=1}^{2} \\nu_r^2 a_r(x) = (+1)^2 a_1(x) + (-1)^2 a_2(x) = k_0 + k_1 x $$\n因此，控制物种数量 $X(t)$ 的 CLE 是：\n$$ dX(t) = (k_0 - k_1 X(t)) dt + \\sqrt{k_0 + k_1 X(t)} dW(t) $$\n\n为了从离散时间序列数据构建似然函数，我们必须对这个 SDE 进行离散化。问题指定使用欧拉-丸山 (Euler-Maruyama) 方法。对于一个很小的时间步长 $\\Delta t$，时间 $t_{i+1} = t_i + \\Delta t$ 的状态可以从时间 $t_i$ 的状态（记为 $x_i$）近似得到：\n$$ x_{i+1} \\approx x_i + \\mu(x_i) \\Delta t + \\sigma(x_i) \\sqrt{\\Delta t} Z_i $$\n其中 $Z_i$ 是一个从标准正态分布中抽取的随机变量，$Z_i \\sim \\mathcal{N}(0, 1)$。\n\n这个近似意味着给定 $x_i$ 时 $x_{i+1}$ 的条件概率分布是一个高斯分布：\n$$ P(x_{i+1} | x_i; k_0, k_1) \\sim \\mathcal{N}(\\mu_{i+1|i}, \\sigma^2_{i+1|i}) $$\n条件均值 $\\mu_{i+1|i}$ 由更新的确定性部分给出：\n$$ \\mu_{i+1|i} = E[x_{i+1} | x_i] = x_i + \\mu(x_i) \\Delta t = x_i + (k_0 - k_1 x_i) \\Delta t $$\n条件方差 $\\sigma^2_{i+1|i}$ 由随机部分的平方给出：\n$$ \\sigma^2_{i+1|i} = \\text{Var}[x_{i+1} | x_i] = (\\sigma(x_i) \\sqrt{\\Delta t})^2 = \\sigma^2(x_i) \\Delta t = (k_0 + k_1 x_i) \\Delta t $$\n\n给定在时间 $\\{t_0, t_1, \\dots, t_N\\}$ 的观测状态轨迹 $\\{x_0, x_1, \\dots, x_N\\}$，根据模型的马尔可夫性质，参数 $(k_0, k_1)$ 的总似然是每个观测到的转移概率的乘积：\n$$ P(x_1, \\dots, x_N | x_0; k_0, k_1) = \\prod_{i=0}^{N-1} P(x_{i+1} | x_i; k_0, k_1) $$\n为了计算的稳定性和便利性，我们使用对数似然 $\\mathcal{L}(k_0, k_1)$：\n$$ \\mathcal{L}(k_0, k_1) = \\ln \\left( \\prod_{i=0}^{N-1} P(x_{i+1} | x_i; k_0, k_1) \\right) = \\sum_{i=0}^{N-1} \\ln P(x_{i+1} | x_i; k_0, k_1) $$\n单个高斯转移的概率密度函数是：\n$$ P(x_{i+1} | x_i; k_0, k_1) = \\frac{1}{\\sqrt{2\\pi\\sigma^2_{i+1|i}}} \\exp\\left(-\\frac{(x_{i+1} - \\mu_{i+1|i})^2}{2\\sigma^2_{i+1|i}}\\right) $$\n因此，一次转移的对数概率是：\n$$ \\ln P(x_{i+1} | x_i; k_0, k_1) = -\\frac{1}{2}\\ln(2\\pi) - \\frac{1}{2}\\ln(\\sigma^2_{i+1|i}) - \\frac{(x_{i+1} - \\mu_{i+1|i})^2}{2\\sigma^2_{i+1|i}} $$\n代入均值和方差的表达式，总对数似然为：\n$$ \\mathcal{L}(k_0, k_1) = \\sum_{i=0}^{N-1} \\left[ -\\frac{1}{2}\\ln(2\\pi((k_0 + k_1 x_i)\\Delta t)) - \\frac{(x_{i+1} - (x_i + (k_0 - k_1 x_i)\\Delta t))^2}{2 (k_0 + k_1 x_i)\\Delta t} \\right] $$\n问题要求方差 $\\sigma^2_{i+1|i}$ 对于所有转移必须是严格正值。由于 $\\Delta t > 0$，这等价于条件 $k_0 + k_1 x_i > 0$ 对所有 $i \\in \\{0, \\dots, N-1\\}$ 成立。任何候选参数对 $(k_0, k_1)$ 若在给定轨迹的任何观测值 $x_i$ 上违反此条件，则必须在该轨迹的评估中被舍弃。\n\n计算流程是为每个候选对和每个测试用例轨迹评估 $\\mathcal{L}(k_0, k_1)$。产生最高对数似然值的对即为该测试用例的解。平局通过选择所提供列表中的第一个候选者来解决。", "answer": "```python\nimport numpy as np\n\ndef calculate_log_likelihood(params, trajectory, dt):\n    \"\"\"\n    Calculates the log-likelihood of a parameter set given a trajectory.\n    \"\"\"\n    k0, k1 = params\n    log_likelihood = 0.0\n\n    for i in range(len(trajectory) - 1):\n        x_i = trajectory[i]\n        x_i_plus_1 = trajectory[i+1]\n        \n        # Calculate the diffusion term for variance check\n        diffusion_term = k0 + k1 * x_i\n        \n        # Per problem specification, variance must be strictly positive.\n        # Since dt > 0, this means diffusion_term must be > 0.\n        if diffusion_term = 0:\n            return -np.inf  # Invalid candidate, log-likelihood is -infinity\n\n        # Conditional variance of the transition\n        variance = diffusion_term * dt\n        \n        # Conditional mean of the transition\n        mean = x_i + (k0 - k1 * x_i) * dt\n\n        # Log probability of the transition x_i -> x_i+1 under the Gaussian approximation\n        log_prob_transition = -0.5 * np.log(2 * np.pi * variance) - 0.5 * ((x_i_plus_1 - mean)**2) / variance\n        log_likelihood += log_prob_transition\n        \n    return log_likelihood\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for all test cases.\n    \"\"\"\n    test_cases = [\n        # Test case A\n        {\n            \"dt\": 0.2,\n            \"observations\": [10.0, 10.4, 10.1, 11.2, 11.2, 12.0, 11.8, 12.5, 12.6, 13.1, 12.5],\n            \"candidates\": [[2.0, 0.1], [1.0, 0.05], [3.5, 0.25], [2.0, 0.2]],\n        },\n        # Test case B\n        {\n            \"dt\": 0.5,\n            \"observations\": [3.0, 3.4, 4.7, 4.9, 4.8, 5.7, 6.0, 6.5],\n            \"candidates\": [[1.2, 0.0], [1.2, 0.05], [0.8, 0.0], [2.0, 0.2]],\n        },\n        # Test case C\n        {\n            \"dt\": 0.1,\n            \"observations\": [20.0, 19.5, 20.3, 19.1, 19.0, 18.7, 19.3, 18.4, 18.2, 17.7, 17.6, 18.0],\n            \"candidates\": [[8.0, 0.5], [10.0, 0.3], [5.0, 0.6], [7.0, 0.8]],\n        },\n    ]\n\n    best_params_all_cases = []\n\n    for case in test_cases:\n        dt = case[\"dt\"]\n        trajectory = case[\"observations\"]\n        candidates = case[\"candidates\"]\n        \n        max_log_likelihood = -np.inf\n        best_params = None\n\n        for params in candidates:\n            current_log_likelihood = calculate_log_likelihood(params, trajectory, dt)\n            \n            # Update best parameters if a new maximum is found.\n            # Tie-breaking rule: first one in the list wins, hence '>' not '>='.\n            if current_log_likelihood > max_log_likelihood:\n                max_log_likelihood = current_log_likelihood\n                best_params = params\n        \n        best_params_all_cases.append(best_params)\n\n    # Format the final output string as specified\n    formatted_results = [f'[{r[0]:.3f},{r[1]:.3f}]' for r in best_params_all_cases]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2684181"}]}