{"hands_on_practices": [{"introduction": "经典的 Michaelis-Menten 动力学假设酶具有单一、静态的构象，这导致了希尔系数 $n_H=1$ 的双曲速率曲线。然而，酶是动态分子。本练习将探讨一个关键的偏离经典模型的现象：当酶在两种构象状态之间进行简单的随机涨落，且每种状态都具有其自身的 Michaelis-Menten 参数时，整个酶系综如何表现出“表观协同性”。你将为这样一个系统推导出表观希尔系数，从而亲身理解微观动力学如何塑造宏观可观测的现象。[@problem_id:2677176]", "problem": "考虑一个单酶系统，其中酶由于与底物浓度 $[S]$ 无关的构象转换，在两种长寿命的构象状态 $E_{1}$ 和 $E_{2}$ 之间随机涨落。该转换是一个简单的两态连续时间马尔可夫过程，其速率为 $k_{12}$ 和 $k_{21}$。假设酶群体足够大，且处于稳态构象分布。在状态 $E_{i}$ 下，对底物 $S$ 的催化通过一个准稳态机制进行，产生一个米氏（Michaelis–Menten）速度 $v_{i}([S]) = V_{i}\\,[S]/(K_{i} + [S])$，其中 $V_{i}$ 和 $K_{i}$ 是状态特异性参数。\n\n您可以以下述结论作为基础出发点：对于一个构象占据率与 $[S]$ 无关的大型稳态系综，其系综平均稳态速率是条件速率根据全期望定律计算的平均值，\n$$\nv([S]) \\;=\\; p_{1}\\,v_{1}([S]) \\;+\\; p_{2}\\,v_{2}([S]),\n$$\n其中 $p_{1}$ 和 $p_{2}$ 分别是处于 $E_{1}$ 和 $E_{2}$ 的稳态概率。\n\n假设系统的转换动力学是对称的，即 $k_{12} = k_{21}$，因此 $p_{1} = p_{2} = \\tfrac{1}{2}$。设 $V_{1} = V_{2} = V$ 且 $K_{1} = K$, $K_{2} = 9K$，其中 $V>0$ 和 $K>0$ 为固定值。\n\n定义最大速率为 $V_{\\max} \\equiv \\lim_{[S]\\to\\infty} v([S])$，并通过 $v([S]_{0.5}) = V_{\\max}/2$ 定义半饱和浓度 $[S]_{0.5}$。在半饱和时的表观 Hill 系数 $n_{H}$ 定义为\n$$\nn_{H} \\;\\equiv\\; \\left.\\frac{d}{d\\ln [S]}\\,\\ln\\!\\left(\\frac{v([S])}{V_{\\max} - v([S])}\\right)\\right|_{[S]=[S]_{0.5}}.\n$$\n\n从上述定义和假设出发，推导该系统的 $n_{H}$，并以单个精确数值（无量纲）的形式给出最终答案。请勿对答案进行四舍五入。", "solution": "该问题是有效的。这是一个关于酶动力学的适定理伦练习，基于随机构象动力学和系综平均的既定原理。所有必要的参数和定义均已提供，该问题在科学上和数学上都是合理的。我们开始求解。\n\n该系统由一个大的酶系综组成，每个酶在两个状态 $E_1$ 和 $E_2$ 之间涨落。每个状态下的催化速率遵循米氏（Michaelis-Menten）模型：\n$$\nv_{i}([S]) = \\frac{V_{i}\\,[S]}{K_{i} + [S]}\n$$\n对于 $i \\in \\{1, 2\\}$。系综平均稳态速率由各个速率的加权平均值给出：\n$$\nv([S]) = p_{1}\\,v_{1}([S]) + p_{2}\\,v_{2}([S])\n$$\n其中 $p_1$ 和 $p_2$ 分别是发现酶处于状态 $E_1$ 和 $E_2$ 的稳态概率。\n\n问题指定了以下参数：\n- 对称的转换动力学 ($k_{12} = k_{21}$), 这意味着稳态概率相等：$p_1 = p_2 = \\frac{1}{2}$。\n- 两种状态的最大速度相等：$V_1 = V_2 = V$。\n- 两种状态的米氏常数不同：$K_1 = K$ 和 $K_2 = 9K$。\n\n将这些参数代入系综平均速率的表达式中，我们得到：\n$$\nv([S]) = \\frac{1}{2} v_1([S]) + \\frac{1}{2} v_2([S]) = \\frac{1}{2} \\left( \\frac{V [S]}{K + [S]} + \\frac{V [S]}{9K + [S]} \\right)\n$$\n我们可以提出因子 $V[S]$ 并合并分数：\n$$\nv([S]) = \\frac{V[S]}{2} \\left( \\frac{(9K + [S]) + (K + [S])}{(K + [S])(9K + [S])} \\right) = \\frac{V[S]}{2} \\left( \\frac{10K + 2[S]}{(K + [S])(9K + [S])} \\right)\n$$\n$$\nv([S]) = V[S] \\frac{5K + [S]}{(K + [S])(9K + [S])}\n$$\n\n首先，我们通过求底物浓度 $[S]$ 趋于无穷大时的极限来确定最大速率 $V_{\\max}$：\n$$\nV_{\\max} = \\lim_{[S]\\to\\infty} v([S]) = \\lim_{[S]\\to\\infty} \\left[ \\frac{1}{2} \\left( \\frac{V [S]}{K + [S]} + \\frac{V [S]}{9K + [S]} \\right) \\right]\n$$\n$$\nV_{\\max} = \\frac{1}{2} \\left( \\lim_{[S]\\to\\infty} \\frac{V [S]}{K + [S]} + \\lim_{[S]\\to\\infty} \\frac{V [S]}{9K + [S]} \\right) = \\frac{1}{2} (V + V) = V\n$$\n所以，该系综的最大速率是 $V$。\n\n接下来，我们求解半饱和浓度 $[S]_{0.5}$，它由条件 $v([S]_{0.5}) = V_{\\max}/2 = V/2$ 定义。\n$$\nV[S]_{0.5} \\frac{5K + [S]_{0.5}}{(K + [S]_{0.5})(9K + [S]_{0.5})} = \\frac{V}{2}\n$$\n两边除以 $V$（因为 $V > 0$），并为简化符号令 $x = [S]_{0.5}$：\n$$\n2x (5K + x) = (K + x)(9K + x)\n$$\n$$\n10Kx + 2x^2 = 9K^2 + 10Kx + x^2\n$$\n$$\nx^2 = 9K^2\n$$\n由于浓度必须为正值，我们取正根：\n$$\n[S]_{0.5} = 3K\n$$\n\n在半饱和时的表观 Hill 系数 $n_H$ 定义为：\n$$\nn_{H} = \\left.\\frac{d}{d\\ln [S]}\\,\\ln\\!\\left(\\frac{v([S])}{V_{\\max} - v([S])}\\right)\\right|_{[S]=[S]_{0.5}}\n$$\n令 $Y([S]) = v([S])/(V_{\\max} - v([S]))$。使用链式法则 $\\frac{d}{d\\ln [S]} f([S]) = [S] \\frac{df}{d[S]}$，我们有：\n$$\nn_{H} = \\left. [S] \\frac{d}{d[S]} \\ln(Y([S])) \\right|_{[S]=[S]_{0.5}} = \\left. [S] \\frac{1}{Y([S])} \\frac{dY}{d[S]} \\right|_{[S]=[S]_{0.5}}\n$$\n在 $[S]=[S]_{0.5}$ 处，我们有 $v([S]_{0.5}) = V_{\\max}/2$，所以 $Y([S]_{0.5}) = (V_{\\max}/2) / (V_{\\max} - V_{\\max}/2) = 1$。$n_H$ 的表达式简化为：\n$$\nn_H = [S]_{0.5} \\left. \\frac{dY}{d[S]} \\right|_{[S]=[S]_{0.5}}\n$$\n我们计算 $Y([S]) = v/(V-v)$ 的导数：\n$$\n\\frac{dY}{d[S]} = \\frac{v'(V-v) - v(-v')}{(V-v)^2} = \\frac{V v'}{(V-v)^2}\n$$\n其中 $v' = dv/d[S]$。在 $[S]=[S]_{0.5}$ 处求值：\n$$\nn_H = [S]_{0.5} \\frac{V v'([S]_{0.5})}{(V - v([S]_{0.5}))^2} = [S]_{0.5} \\frac{V v'([S]_{0.5})}{(V - V/2)^2} = \\frac{[S]_{0.5} V v'([S]_{0.5})}{V^2/4} = \\frac{4[S]_{0.5}}{V} v'([S]_{0.5})\n$$\n我们需要计算 $v'([S])$ 并在 $[S]_{0.5} = 3K$ 处求值。我们对 $v([S])$ 最初的和形式进行微分：\n$$\nv'([S]) = \\frac{d}{d[S]} \\left[ \\frac{V}{2} \\left( \\frac{[S]}{K + [S]} + \\frac{[S]}{9K + [S]} \\right) \\right]\n$$\n使用法则 $\\frac{d}{dx} \\frac{x}{a+x} = \\frac{a}{(a+x)^2}$：\n$$\nv'([S]) = \\frac{V}{2} \\left( \\frac{K}{(K + [S])^2} + \\frac{9K}{(9K + [S])^2} \\right)\n$$\n现在，我们在 $[S] = [S]_{0.5} = 3K$ 处计算这个导数的值：\n$$\nv'(3K) = \\frac{V}{2} \\left( \\frac{K}{(K + 3K)^2} + \\frac{9K}{(9K + 3K)^2} \\right) = \\frac{V}{2} \\left( \\frac{K}{(4K)^2} + \\frac{9K}{(12K)^2} \\right)\n$$\n$$\nv'(3K) = \\frac{V}{2} \\left( \\frac{K}{16K^2} + \\frac{9K}{144K^2} \\right) = \\frac{V}{2K} \\left( \\frac{1}{16} + \\frac{9}{144} \\right)\n$$\n因为 $\\frac{9}{144} = \\frac{1}{16}$，我们有：\n$$\nv'(3K) = \\frac{V}{2K} \\left( \\frac{1}{16} + \\frac{1}{16} \\right) = \\frac{V}{2K} \\left( \\frac{2}{16} \\right) = \\frac{V}{16K}\n$$\n最后，我们将 $[S]_{0.5}$ 和 $v'([S]_{0.5})$ 的值代入我们的 $n_H$ 表达式中：\n$$\nn_H = \\frac{4[S]_{0.5}}{V} v'([S]_{0.5}) = \\frac{4(3K)}{V} \\left( \\frac{V}{16K} \\right)\n$$\n$$\nn_H = \\frac{12K \\cdot V}{16K \\cdot V} = \\frac{12}{16} = \\frac{3}{4}\n$$\n半饱和时的表观 Hill 系数为 $\\frac{3}{4}$。该值小于 1，这表示表观负协同性，对于一个由具有不同亲和力的米氏过程加和而成的系统，这是一个预期的结果。", "answer": "$$\\boxed{\\frac{3}{4}}$$", "id": "2677176"}, {"introduction": "单分子酶学使我们能够逐一观察催化周转，将其记录为事件的时间序列。本练习将从系综平均转向对单个分子事件的统计分析。你将学习如何将实验上可测量的量——平均速率 $m$、长时程法诺因子 $F_{\\infty}$（一种噪声度量）以及构象相关时间 $\\tau_{c}$——与一个隐藏的微观参数联系起来：活性状态的内在催化速率 $k$。这种实践是现代生物物理分析的核心，它展示了如何利用统计工具来“揭开”酶动力学行为的“面纱”。[@problem_id:2677167]", "problem": "单个酶分子在非活性构象 $\\mathrm{I}$ 和活性构象 $\\mathrm{A}$ 之间相互转换，其过程为一个连续时间马尔可夫链 (CTMC)，从 $\\mathrm{I} \\to \\mathrm{A}$ 的转移速率为 $\\alpha$，从 $\\mathrm{A} \\to \\mathrm{I}$ 的转移速率为 $\\beta$。在底物饱和条件下，产物生成事件以点过程的形式发生，其风险率具有状态依赖性：当酶处于 $\\mathrm{A}$ 状态时，产物以催化速率 $k$（一阶风险率）形成；当酶处于 $\\mathrm{I}$ 状态时，不形成产物。您可以在长时间内以单分子分辨率观察到带有时间戳的产物事件，但不能直接观察到构象状态。一项独立的单分子构象波动探测实验给出了该两态过程的构象自相关时间 $\\tau_{c}$。\n\n假设以下建模基础：\n- 催化事件过程是一个双重随机泊松过程 (DSPP)，也称为考克斯过程 (Cox process)，其随机强度为 $\\lambda(t) = k \\,\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)$，由构象动力学的底层两态 CTMC 驱动。\n- 构象 CTMC 是平稳的，具有平稳活性分数 $p = \\alpha/(\\alpha+\\beta)$ 和相关速率 $\\gamma = \\alpha+\\beta = 1/\\tau_{c}$。\n- 长时间法诺因子 $F_{\\infty}$ 定义为 $F_{\\infty} = \\lim_{T \\to \\infty} \\operatorname{Var}[N(T)]/\\mathbb{E}[N(T)]$，其中 $N(T)$ 是在持续时间为 $T$ 的窗口内的产物事件数量。\n\n仅从这些基础和定义出发（不引用任何非由它们推导出的预编译公式），推导催化速率 $k$ 的显式表达式，该表达式应使用稳态平均产物生成速率 $m = \\lim_{T \\to \\infty} \\mathbb{E}[N(T)]/T$、长时间法诺因子 $F_{\\infty}$ 和构象自相关时间 $\\tau_{c}$ 来表示。然后，使用测量值 $m = 3.0 \\, \\mathrm{s}^{-1}$、$F_{\\infty} = 2.2$ 和 $\\tau_{c} = 0.5 \\, \\mathrm{s}$ 对 $k$ 进行数值计算。\n\n以 $\\mathrm{s}^{-1}$ 为单位表示最终的催化速率，并将答案四舍五入到四位有效数字。", "solution": "该问题要求基于所提供的随机模型，从第一性原理出发推导催化速率 $k$。我们将首先进行严格的推导，然后进行数值计算。\n\n首先，我们分析产物事件的平均数量 $\\mathbb{E}[N(T)]$。该过程被定义为一个双重随机泊松过程 (DSPP)，其随机强度为 $\\lambda(t) = k \\,\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)$，其中 $\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)$ 是酶处于活性状态 $\\mathrm{A}$ 的指示函数。根据 DSPP 的性质和积分算子的线性性，在持续时间为 $T$ 的时间间隔内，事件数量 $N(T)$ 的平均值为：\n$$ \\mathbb{E}[N(T)] = \\mathbb{E}\\left[\\int_0^T \\lambda(t) \\, dt\\right] = \\int_0^T \\mathbb{E}[\\lambda(t)] \\, dt $$\n强度的期望值为：\n$$ \\mathbb{E}[\\lambda(t)] = \\mathbb{E}[k \\,\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)] = k \\, \\mathbb{E}[\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)] $$\n指示函数 $\\mathbb{E}[\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)]$ 的期望值是酶在时间 $t$ 处于活性状态 $\\mathrm{A}$ 的概率。由于底层的构象 CTMC 假设是平稳的，这个概率就是平稳活性分数 $p$, 该值不随时间变化：$\\mathbb{E}[\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)] = p$。因此：\n$$ \\mathbb{E}[N(T)] = \\int_0^T k p \\, dt = k p T $$\n稳态平均产物生成速率 $m$ 定义为 $m = \\lim_{T \\to \\infty} \\mathbb{E}[N(T)]/T$。根据我们的结果，我们得到第一个基本关系：\n$$ m = \\lim_{T \\to \\infty} \\frac{k p T}{T} = kp $$\n\n接下来，我们推导事件数量的方差 $\\operatorname{Var}[N(T)]$。对于 DSPP，全方差定律（也称为条件方差公式）给出：\n$$ \\operatorname{Var}[N(T)] = \\mathbb{E}[\\operatorname{Var}[N(T) | \\{\\lambda(t')\\}_{0 \\le t' \\le T}]] + \\operatorname{Var}[\\mathbb{E}[N(T) | \\{\\lambda(t')\\}_{0 \\le t' \\le T}]] $$\n以强度过程 $\\lambda(t)$ 的特定实现为条件，计数过程 $N(T)$ 是一个非齐次泊松过程。其条件均值和方差均等于积分强度 $\\Lambda_T = \\int_0^T \\lambda(t) \\, dt$。因此：\n$$ \\operatorname{Var}[N(T)] = \\mathbb{E}[\\Lambda_T] + \\operatorname{Var}[\\Lambda_T] $$\n我们已经确定 $\\mathbb{E}[\\Lambda_T] = \\mathbb{E}[N(T)] = k p T$。任务简化为求积分强度的方差：\n$$ \\operatorname{Var}[\\Lambda_T] = \\operatorname{Var}\\left[\\int_0^T k \\,\\mathbf{1}_{\\{\\mathrm{A}\\}}(t) \\, dt\\right] = k^2 \\operatorname{Var}\\left[\\int_0^T \\mathbf{1}_{\\{\\mathrm{A}\\}}(t) \\, dt\\right] $$\n平稳随机过程的时间积分的方差由其自协方差函数的双重积分给出：\n$$ \\operatorname{Var}\\left[\\int_0^T \\mathbf{1}_{\\{\\mathrm{A}\\}}(t) \\, dt\\right] = \\int_0^T \\int_0^T C_{\\mathbf{1}}(t_1, t_2) \\, dt_1 \\, dt_2 $$\n其中 $C_{\\mathbf{1}}(t_1, t_2) = \\operatorname{Cov}[\\mathbf{1}_{\\{\\mathrm{A}\\}}(t_1), \\mathbf{1}_{\\{\\mathrm{A}\\}}(t_2)]$。对于平稳的两态 CTMC，已知此自协方差函数随时间延迟 $\\tau = |t_2-t_1|$ 呈指数衰减：\n$$ C_{\\mathbf{1}}(\\tau) = \\operatorname{Var}[\\mathbf{1}_{\\{\\mathrm{A}\\}}(0)] \\exp(-\\gamma \\tau) $$\n伯努利随机变量 $\\mathbf{1}_{\\{\\mathrm{A}\\}}(t)$ 的方差为 $p(1-p)$。这给出：\n$$ C_{\\mathbf{1}}(\\tau) = p(1-p) \\exp(-\\gamma |\\tau|) $$\n其中 $\\gamma = \\alpha+\\beta = 1/\\tau_c$ 是相关速率。我们现在计算该双重积分：\n$$ \\int_0^T \\int_0^T \\exp(-\\gamma |t_2 - t_1|) \\, dt_1 \\, dt_2 = \\frac{2}{\\gamma^2}(\\gamma T - 1 + \\exp(-\\gamma T)) $$\n这是一个标准结果。因此，积分强度的方差为：\n$$ \\operatorname{Var}[\\Lambda_T] = k^2 p(1-p) \\frac{2}{\\gamma^2}(\\gamma T - 1 + \\exp(-\\gamma T)) $$\n合并 $N(T)$ 的总方差的各项：\n$$ \\operatorname{Var}[N(T)] = k p T + 2 k^2 p(1-p) \\frac{1}{\\gamma^2}(\\gamma T - 1 + \\exp(-\\gamma T)) $$\n\n现在我们使用长时间法诺因子 $F_{\\infty}$ 的定义：\n$$ F_{\\infty} = \\lim_{T \\to \\infty} \\frac{\\operatorname{Var}[N(T)]}{\\mathbb{E}[N(T)]} = \\lim_{T \\to \\infty} \\frac{k p T + 2k^2 p(1-p)\\frac{1}{\\gamma^2}(\\gamma T - 1 + \\exp(-\\gamma T))}{k p T} $$\n分子和分母同除以 $k p T$：\n$$ F_{\\infty} = \\lim_{T \\to \\infty} \\left( 1 + \\frac{2k(1-p)}{\\gamma^2} \\left(\\gamma - \\frac{1}{T} + \\frac{\\exp(-\\gamma T)}{T}\\right) \\right) $$\n取 $T \\to \\infty$ 的极限，乘以 $1/T$ 和 $\\exp(-\\gamma T)/T$ 的项消失，得到：\n$$ F_{\\infty} = 1 + \\frac{2k(1-p)}{\\gamma} $$\n这个结果表明，法诺因子与泊松值 1 之间的偏差是由酶的随机转换引起的，该偏差由速率 $k$ 和 $\\gamma$ 以及占据概率 $p$ 来量化。\n\n我们得到两个将微观参数与宏观可观测量联系起来的方程：\n1.  $m = kp$\n2.  $F_{\\infty} = 1 + \\frac{2k(1-p)}{\\gamma}$\n\n我们的目标是求解 $k$。我们消去未观测到的参数 $p$。从第一个方程，我们得到 $p = m/k$。我们将其代入第二个方程：\n$$ F_{\\infty} = 1 + \\frac{2k(1 - m/k)}{\\gamma} = 1 + \\frac{2(k-m)}{\\gamma} $$\n现在，我们求解 $k$：\n$$ F_{\\infty} - 1 = \\frac{2(k-m)}{\\gamma} $$\n$$ \\gamma(F_{\\infty} - 1) = 2(k-m) $$\n$$ k-m = \\frac{\\gamma}{2}(F_{\\infty} - 1) $$\n$$ k = m + \\frac{\\gamma}{2}(F_{\\infty} - 1) $$\n最后，利用给定的关系式 $\\gamma = 1/\\tau_c$，我们得到用可测量量表示的 $k$ 的期望表达式：\n$$ k = m + \\frac{F_{\\infty} - 1}{2\\tau_c} $$\n\n最后一步是代入所提供的数值：$m = 3.0 \\, \\mathrm{s}^{-1}$、$F_{\\infty} = 2.2$ 和 $\\tau_c = 0.5 \\, \\mathrm{s}$。\n$$ k = 3.0 + \\frac{2.2 - 1}{2 \\times 0.5} $$\n$$ k = 3.0 + \\frac{1.2}{1.0} $$\n$$ k = 3.0 + 1.2 = 4.2 $$\n单位是 $\\mathrm{s}^{-1}$，这与催化速率的单位相符。问题要求答案表示为四位有效数字，即 $4.200$。", "answer": "$$\\boxed{4.200}$$", "id": "2677167"}, {"introduction": "经典模型通常假设体系是“充分混合”的，但在微观尺度上，从酶上解离的底物分子并不会立即消失在溶液中。最后的这个实践引入了一个更符合实际的模型，该模型包含一个中间的“相遇态”($C$)，用以解释扩散效应和即时重结合（孪生重结合）的可能性。通过以计算方式实现并求解这个三态模型，你将量化这些空间效应如何改变酶的周转率（相较于朴素的 Michaelis–Menten 预测），从而深入理解简单质量作用定律在拥挤细胞环境中的局限性。[@problem_id:2677177]", "problem": "考虑一个单酶催化方案，其中扩散介导相遇，解离产生一个空间局域化的相遇复合物，该复合物可以重结合，而逃逸至本体与重结合过程相竞争。将酶建模为一个具有三个状态的连续时间马尔可夫链：自由酶状态 $E$、结合复合物状态 $ES$ 以及代表扩散重结合微区的相遇状态 $C$。状态转换如下：\n- $E \\to ES$，在底物浓度为 $[S]$（单位 $\\mathrm{M}$）时，二级结合速率常数为 $k_{\\mathrm{on}}$（单位 $\\mathrm{M^{-1}\\,s^{-1}}$），得到有效一级速率 $a = k_{\\mathrm{on}} [S]$（单位 $\\mathrm{s^{-1}}$）。\n- $ES \\to E$，通过催化作用，速率为 $k_{\\mathrm{cat}}$（单位 $\\mathrm{s^{-1}}$），产生一个产物分子并使酶返回到 $E$ 状态。\n- $ES \\to C$，通过微观解离，速率为 $k_{\\mathrm{off}}^0$（单位 $\\mathrm{s^{-1}}$）。\n- $C \\to ES$，通过孪生重结合，速率为 $k_{\\mathrm{rb}}$（单位 $\\mathrm{s^{-1}}$）。\n- $C \\to E$，通过逃逸至本体，速率为 $k_{\\mathrm{esc}}$（单位 $\\mathrm{s^{-1}}$）。\n\n假设只有一个酶，因此瞬时产物生成速率等于 $k_{\\mathrm{cat}}$ 乘以处于 $ES$ 状态的概率。当所有速率为正时，该系统是各态历经的。\n\n您的任务是，对于几个参数集，计算稳态周转速率 $v_{\\mathrm{ss}}$（单位 $\\mathrm{s^{-1}}$），并量化其与忽略相遇状态的经典两状态 Michaelis–Menten 预测的偏差。请按以下基本原理进行：\n\n1. 稳态通量表述。设 $\\boldsymbol{\\pi} = (\\pi_E,\\pi_{ES},\\pi_C)$ 为马尔可夫链的平稳分布。使用稳态下的化学主方程平衡和归一化条件，确定 $\\boldsymbol{\\pi}$ 并计算 $v_{\\mathrm{ss}} = k_{\\mathrm{cat}} \\,\\pi_{ES}$（单位 $\\mathrm{s^{-1}}$）。\n\n2. 更新（首次通过）表述。考虑一个催化循环，该循环在酶处于自由状态（$E$）时开始，并在催化转化（通过 $k_{\\mathrm{cat}}$ 实现 $ES \\to E$）产生一个产物分子时结束。分别定义从状态 $E$、$ES$ 和 $C$ 开始到产物生成的平均首次通过时间 $T_E$、$T_{ES}$ 和 $T_C$。根据连续时间马尔可夫链的指数等待时间性质，为这些平均时间编写线性方程组并求解 $T_E$。更新理论的周转速率为 $v_{\\mathrm{ren}} = 1/T_E$（单位 $\\mathrm{s^{-1}}$）。\n\n3. 经典 Michaelis–Menten 比较器。简化的两状态模型 $E \\rightleftharpoons ES \\to E + P$，其中 $E \\to ES$ 的速率为 $a = k_{\\mathrm{on}}[S]$，$ES \\to E$ 的总速率为 $k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}}$，预测的稳态速率为 $v_{\\mathrm{MM}} = k_{\\mathrm{cat}} \\, \\dfrac{a}{a + k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}}}$（单位 $\\mathrm{s^{-1}}$），这等价于 $K_M = (k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}})/k_{\\mathrm{on}}$ 的 Michaelis–Menten 表达式。定义偏差因子 $\\Delta = v_{\\mathrm{ss}}/v_{\\mathrm{MM}}$（无量纲）。\n\n实现一个程序，对于下面测试套件中的每个参数集，执行以下操作：\n- 通过稳态通量表述计算 $v_{\\mathrm{ss}}$。\n- 通过更新表述计算 $v_{\\mathrm{ren}}$。\n- 数值验证 $v_{\\mathrm{ss}}$ 和 $v_{\\mathrm{ren}}$ 在相对误差 $10^{-9}$ 内一致；如果不一致，程序必须引发异常。\n- 计算 $\\Delta = v_{\\mathrm{ss}}/v_{\\mathrm{MM}}$。\n- 仅报告所有测试用例的 $\\Delta$ 值列表，按顺序排列，形式为单行、用方括号括起来的逗号分隔列表。每个 $\\Delta$ 值必须打印为小数点后恰好有六位的小数。输出是无量纲的，不得包含单位。\n\n测试套件（所有速率常数单位为 $\\mathrm{s^{-1}}$，$k_{\\mathrm{on}}$ 单位为 $\\mathrm{M^{-1}\\,s^{-1}}$，浓度单位为 $\\mathrm{M}$）：\n- 用例 A（正常情况，有明显的孪生重结合）：$k_{\\mathrm{on}} = 10^8$, $[S] = 2 \\times 10^{-6}$, $k_{\\mathrm{cat}} = 10$, $k_{\\mathrm{off}}^0 = 50$, $k_{\\mathrm{rb}} = 1000$, $k_{\\mathrm{esc}} = 100$。\n- 用例 B（边界情况，无重结合且瞬时逃逸，近似于两状态模型）：$k_{\\mathrm{on}} = 10^8$, $[S] = 2 \\times 10^{-6}$, $k_{\\mathrm{cat}} = 10$, $k_{\\mathrm{off}}^0 = 50$, $k_{\\mathrm{rb}} = 0$, $k_{\\mathrm{esc}} = 10^6$。\n- 用例 C（扩散限制的逃逸，强重结合）：$k_{\\mathrm{on}} = 10^8$, $[S] = 2 \\times 10^{-6}$, $k_{\\mathrm{cat}} = 10$, $k_{\\mathrm{off}}^0 = 50$, $k_{\\mathrm{rb}} = 1000$, $k_{\\mathrm{esc}} = 1$。\n- 用例 D（低底物浓度情况）：$k_{\\mathrm{on}} = 10^8$, $[S] = 10^{-8}$, $k_{\\mathrm{cat}} = 5$, $k_{\\mathrm{off}}^0 = 20$, $k_{\\mathrm{rb}} = 500$, $k_{\\mathrm{esc}} = 50$。\n- 用例 E（快速催化，重结合影响有限）：$k_{\\mathrm{on}} = 10^8$, $[S] = 2 \\times 10^{-6}$, $k_{\\mathrm{cat}} = 1000$, $k_{\\mathrm{off}}^0 = 50$, $k_{\\mathrm{rb}} = 1000$, $k_{\\mathrm{esc}} = 100$。\n\n最终输出格式：您的程序应生成单行输出，其中包含用例 A-E 的 $\\Delta$ 值，形式为用方括号括起来的逗号分隔列表，例如 $[\\delta_A,\\delta_B,\\delta_C,\\delta_D,\\delta_E]$，其中每个条目小数点后恰好有六位数字。不应打印任何其他文本。", "solution": "我们从三状态酶方案的连续时间马尔可夫链描述开始。设 $a = k_{\\mathrm{on}}[S]$ 表示有效一级结合速率（单位 $\\mathrm{s^{-1}}$）。状态为 $E$、$ES$ 和 $C$。转换和速率为：$E \\to ES$ 速率为 $a$，$ES \\to E$ 速率为 $k_{\\mathrm{cat}}$，$ES \\to C$ 速率为 $k_{\\mathrm{off}}^0$，$C \\to ES$ 速率为 $k_{\\mathrm{rb}}$，$C \\to E$ 速率为 $k_{\\mathrm{esc}}$。\n\n稳态通量表述。设 $\\boldsymbol{\\pi} = (\\pi_E,\\pi_{ES},\\pi_C)$ 为平稳分布。生成元 $\\mathbf{Q}$ 的非对角元素为 $Q_{E,ES} = a$, $Q_{ES,E} = k_{\\mathrm{cat}}$, $Q_{ES,C} = k_{\\mathrm{off}}^0$, $Q_{C,ES} = k_{\\mathrm{rb}}$, $Q_{C,E} = k_{\\mathrm{esc}}$，对角元素使每行之和为零。稳态条件是 $\\boldsymbol{\\pi}^{\\top} \\mathbf{Q} = \\boldsymbol{0}^{\\top}$ 以及归一化条件 $\\pi_E + \\pi_{ES} + \\pi_C = 1$。明确写出平衡方程：\n- $E$ 状态平衡：流入等于流出，得 $a \\,\\pi_E = k_{\\mathrm{cat}} \\,\\pi_{ES} + k_{\\mathrm{esc}} \\,\\pi_C$。\n- $ES$ 状态平衡：$(k_{\\mathrm{cat}} + k_{\\mathrm{off}}^0)\\,\\pi_{ES} = a \\,\\pi_E + k_{\\mathrm{rb}} \\,\\pi_C$。\n- $C$ 状态平衡：$(k_{\\mathrm{rb}} + k_{\\mathrm{esc}})\\,\\pi_C = k_{\\mathrm{off}}^0 \\,\\pi_{ES}$。\n这些线性方程与 $\\pi_E + \\pi_{ES} + \\pi_C = 1$ 一起确定了 $\\boldsymbol{\\pi}$。稳态产物生成速率是催化通量：\n$$\nv_{\\mathrm{ss}} = k_{\\mathrm{cat}} \\,\\pi_{ES} \\quad \\text{单位 } \\mathrm{s^{-1}}。\n$$\n\n更新（首次通过）表述。设 $T_E$、$T_{ES}$ 和 $T_C$ 分别表示从状态 $E$、$ES$ 和 $C$ 开始到产物生成（$ES \\to E$ 催化转换）的平均首次通过时间。对于具有指数等待时间的连续时间马尔可夫链，离开一个状态到下一次转换的平均等待时间是总出口速率的倒数；通过对下一次转换进行条件分析，可以得到关于平均首次通过时间的线性方程组。具体而言：\n- 从 $E$ 出发，唯一的转换是 $E \\to ES$，速率为 $a$，因此离开的平均等待时间是 $1/a$，之后过程从 $ES$ 继续。因此\n$$\nT_E = \\frac{1}{a} + T_{ES}.\n$$\n- 从 $ES$ 出发，有两种可能的转换：速率为 $k_{\\mathrm{cat}}$ 的催化 $ES \\to E$（完成循环）和速率为 $k_{\\mathrm{off}}^0$ 的解离 $ES \\to C$（之后过程从 $C$ 继续）。到下一次事件的平均等待时间是 $1/(k_{\\mathrm{cat}} + k_{\\mathrm{off}}^0)$。因此\n$$\nT_{ES} = \\frac{1}{k_{\\mathrm{cat}} + k_{\\mathrm{off}}^0} + \\frac{k_{\\mathrm{off}}^0}{k_{\\mathrm{cat}} + k_{\\mathrm{off}}^0} \\, T_C + \\frac{k_{\\mathrm{cat}}}{k_{\\mathrm{cat}} + k_{\\mathrm{off}}^0} \\cdot 0.\n$$\n- 从 $C$ 出发，有两种可能的转换：速率为 $k_{\\mathrm{rb}}$ 的重结合 $C \\to ES$ 和速率为 $k_{\\mathrm{esc}}$ 的逃逸 $C \\to E$。到下一次事件的平均等待时间是 $1/(k_{\\mathrm{rb}} + k_{\\mathrm{esc}})$。因此\n$$\nT_C = \\frac{1}{k_{\\mathrm{rb}} + k_{\\mathrm{esc}}} + \\frac{k_{\\mathrm{rb}}}{k_{\\mathrm{rb}} + k_{\\mathrm{esc}}} \\, T_{ES} + \\frac{k_{\\mathrm{esc}}}{k_{\\mathrm{rb}} + k_{\\mathrm{esc}}} \\, T_E.\n$$\n这个线性系统唯一地确定了 $T_E$，更新速率为\n$$\nv_{\\mathrm{ren}} = \\frac{1}{T_E} \\quad \\text{单位 } \\mathrm{s^{-1}}。\n$$\n这两种表述都源于连续时间马尔可夫链和更新理论的基本性质。\n\n$v_{\\mathrm{ss}}$ 和 $v_{\\mathrm{ren}}$ 的等价性。通常，对于可划分为独立同分布循环的各态历经马尔可夫更新过程，稳态吞吐率等于平均循环时间的倒数。在此模型中，由于催化后返回 $E$ 状态时具有再生结构，$v_{\\mathrm{ss}} = v_{\\mathrm{ren}}$ 成立。在数值上，求解稳态平衡方程和平均首次通过时间方程必须得到相同的速率，直至数值精度。\n\n经典 Michaelis–Menten 比较器。如果忽略相遇状态，两状态模型中 $E \\to ES$ 的速率为 $a$，$ES \\to E$ 的总速率为 $k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}}$，其稳态结合概率为\n$$\n\\pi_{ES}^{\\mathrm{(2\\text{-}state)}} = \\frac{a}{a + k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}}},\n$$\n因此\n$$\nv_{\\mathrm{MM}} = k_{\\mathrm{cat}} \\, \\frac{a}{a + k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}}} \\quad \\text{单位 } \\mathrm{s^{-1}}。\n$$\n偏差因子\n$$\n\\Delta = \\frac{v_{\\mathrm{ss}}}{v_{\\mathrm{MM}}}\n$$\n量化了由扩散影响的重结合和空间逃逸路径所引起的增强或减弱效应。值得注意的是，当 $k_{\\mathrm{rb}} = 0$ 且 $k_{\\mathrm{esc}}$ 足够大以至于逃逸近似瞬时发生时，三状态方案简化为两状态模型，$\\Delta$ 趋近于 $1$。相反，当 $k_{\\mathrm{rb}} \\gg k_{\\mathrm{esc}}$ 时，孪生重结合频繁发生，有效增加了 $ES$ 在解离后的占据率，从而导致 $\\Delta > 1$。\n\n程序算法规划。\n- 对于每个测试用例，计算 $a = k_{\\mathrm{on}} [S]$。\n- 稳态速率 $v_{\\mathrm{ss}}$：\n  - 构建转置生成元 $\\mathbf{Q}^{\\top}$ 并求解 $\\mathbf{Q}^{\\top} \\boldsymbol{\\pi} = \\boldsymbol{0}$ 及 $\\pi_E + \\pi_{ES} + \\pi_C = 1$。一个实用的方法是用归一化条件替换三个方程之一，并求解一个 $3 \\times 3$ 线性方程组。然后计算 $v_{\\mathrm{ss}} = k_{\\mathrm{cat}} \\,\\pi_{ES}$。\n- 更新速率 $v_{\\mathrm{ren}}$：\n  - 求解上面定义的关于 $(T_E, T_{ES}, T_C)$ 的 $3 \\times 3$ 线性方程组，然后计算 $v_{\\mathrm{ren}} = 1/T_E$。\n- 断言相对一致性：验证 $\\left|v_{\\mathrm{ss}} - v_{\\mathrm{ren}}\\right| / \\max(1, v_{\\mathrm{ss}}) \\le 10^{-9}$。\n- 计算 $v_{\\mathrm{MM}} = k_{\\mathrm{cat}} \\, a / (a + k_{\\mathrm{off}}^0 + k_{\\mathrm{cat}})$。\n- 计算 $\\Delta = v_{\\mathrm{ss}} / v_{\\mathrm{MM}}$。\n- 按测试用例顺序收集 $\\Delta$ 值，并按要求格式（小数点后六位）打印为单个列表。\n\n对于给定的参数量级，此计算是数值稳定的，因为所有速率都是非负且尺度适中；对于给定用例，线性系统的系数矩阵是 $3 \\times 3$ 且良态的。中间速率的单位处理保持一致，但最终报告的 $\\Delta$ 值是无量纲的，并且打印时不含单位。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef steady_state_flux(kon, S, kcat, koff0, krb, kesc):\n    \"\"\"\n    Compute steady-state catalytic flux v_ss = kcat * pi_ES for the three-state CTMC.\n    States order: [E, ES, C]\n    \"\"\"\n    a = kon * S  # effective first-order association rate\n    # Generator transpose Q^T for equations Q^T * pi = 0\n    # Rows correspond to equations for E, ES, C balances:\n    # For numerical solution with normalization, we build a 3x3 system:\n    # Replace the last row by normalization: pi_E + pi_ES + pi_C = 1\n    QT = np.array([\n        [-a,           kcat,        kesc],       # balance for E: -a*pi_E + kcat*pi_ES + kesc*pi_C = 0\n        [a,      -(kcat+koff0),     krb],        # balance for ES: a*pi_E - (kcat+koff0)*pi_ES + krb*pi_C = 0\n        [1.0,          1.0,         1.0]         # normalization\n    ], dtype=float)\n    b = np.array([0.0, 0.0, 1.0], dtype=float)\n    try:\n        pi = np.linalg.solve(QT, b)\n    except np.linalg.LinAlgError as e:\n        # As a fallback, use least squares (should not happen for well-posed cases)\n        pi, *_ = np.linalg.lstsq(QT, b, rcond=None)\n    pi_E, pi_ES, pi_C = pi\n    v_ss = kcat * pi_ES\n    return v_ss, (pi_E, pi_ES, pi_C)\n\ndef renewal_flux(kon, S, kcat, koff0, krb, kesc):\n    \"\"\"\n    Compute renewal-theory flux v_ren = 1 / T_E via mean first-passage times.\n    Unknowns: [T_E, T_ES, T_C], linear system A * T = rhs\n    Equations:\n      T_E  = 1/a + T_ES\n      T_ES = 1/(kcat+koff0) + (koff0/(kcat+koff0)) * T_C\n      T_C  = 1/(krb+kesc) + (krb/(krb+kesc)) * T_ES + (kesc/(krb+kesc)) * T_E\n    \"\"\"\n    a = kon * S\n    # Handle potential zero a to avoid division by zero (not present in tests)\n    if a <= 0.0:\n        raise ValueError(\"Association rate a must be positive for mean cycle time.\")\n    A = np.zeros((3, 3), dtype=float)\n    rhs = np.zeros(3, dtype=float)\n    # T_E - T_ES = 1/a\n    A[0, 0] = 1.0\n    A[0, 1] = -1.0\n    rhs[0] = 1.0 / a\n    # T_ES - (koff0/(kcat+koff0)) * T_C = 1/(kcat+koff0)\n    denom_es = kcat + koff0\n    if denom_es <= 0.0:\n        raise ValueError(\"kcat + koff0 must be positive.\")\n    A[1, 1] = 1.0\n    A[1, 2] = -(koff0 / denom_es)\n    rhs[1] = 1.0 / denom_es\n    # T_C - (krb/(krb+kesc)) * T_ES - (kesc/(krb+kesc)) * T_E = 1/(krb+kesc)\n    denom_c = krb + kesc\n    if denom_c <= 0.0:\n        raise ValueError(\"krb + kesc must be positive.\")\n    A[2, 2] = 1.0\n    A[2, 1] = -(krb / denom_c)\n    A[2, 0] = -(kesc / denom_c)\n    rhs[2] = 1.0 / denom_c\n    try:\n        T = np.linalg.solve(A, rhs)\n    except np.linalg.LinAlgError as e:\n        T, *_ = np.linalg.lstsq(A, rhs, rcond=None)\n    T_E = T[0]\n    v_ren = 1.0 / T_E\n    return v_ren, tuple(T.tolist())\n\ndef mm_naive_flux(kon, S, kcat, koff0):\n    \"\"\"\n    Classical two-state Michaelis-Menten steady-state flux for a single enzyme:\n    v_MM = kcat * a / (a + koff0 + kcat), where a = kon * S.\n    \"\"\"\n    a = kon * S\n    denom = a + koff0 + kcat\n    if denom <= 0.0:\n        return 0.0\n    return kcat * a / denom\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case: (kon [M^-1 s^-1], S [M], kcat [s^-1], koff0 [s^-1], krb [s^-1], kesc [s^-1])\n    test_cases = [\n        (1e8, 2e-6, 10.0, 50.0, 1000.0, 100.0),     # Case A\n        (1e8, 2e-6, 10.0, 50.0,    0.0, 1e6),       # Case B\n        (1e8, 2e-6, 10.0, 50.0, 1000.0,   1.0),     # Case C\n        (1e8, 1e-8,  5.0, 20.0,  500.0,  50.0),     # Case D\n        (1e8, 2e-6, 1000.0, 50.0, 1000.0, 100.0),   # Case E\n    ]\n\n    results = []\n    for case in test_cases:\n        kon, S, kcat, koff0, krb, kesc = case\n        v_ss, _ = steady_state_flux(kon, S, kcat, koff0, krb, kesc)\n        v_ren, _ = renewal_flux(kon, S, kcat, koff0, krb, kesc)\n        # Relative check with tolerance 1e-9; scale by max(1, v_ss) to avoid tiny denominators\n        denom = max(1.0, abs(v_ss))\n        rel_err = abs(v_ss - v_ren) / denom\n        if rel_err > 1e-9:\n            raise RuntimeError(f\"v_ss and v_ren mismatch: v_ss={v_ss}, v_ren={v_ren}, rel_err={rel_err}\")\n        v_mm = mm_naive_flux(kon, S, kcat, koff0)\n        # Avoid division by zero; per test design v_mm > 0\n        if v_mm == 0.0:\n            delta = float('nan')\n        else:\n            delta = v_ss / v_mm\n        results.append(delta)\n\n    # Format each result to exactly six digits after decimal point.\n    formatted = \"[\" + \",\".join(f\"{x:.6f}\" for x in results) + \"]\"\n    # Final print statement in the exact required format.\n    print(formatted)\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2677177"}]}