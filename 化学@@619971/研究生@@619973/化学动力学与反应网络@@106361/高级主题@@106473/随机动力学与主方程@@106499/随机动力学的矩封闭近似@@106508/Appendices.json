{"hands_on_practices": [{"introduction": "在使用矩封闭近似时，第一步是将未封闭的高阶矩用我们正在追踪的低阶矩来表示。本练习提供了这方面基础的代数操作训练，它利用高斯封闭假设，即假定所有三阶及更高阶的累积量为零。掌握这种代数替换是推导封闭常微分方程组（ODEs）的关键。[@problem_id:2657882]", "problem": "考虑一个充分混合的随机反应网络，其中单一化学物种 $A$ 在化学主方程 (CME, Chemical Master Equation) 的框架下经历反应 $\\varnothing \\xrightarrow{\\lambda} A$ 和 $2A \\xrightarrow{k} \\varnothing$。令 $X$ 表示物种 $A$ 的随机拷贝数。此网络的矩动力学通过与双分子反应相关的质量作用倾向涉及到高阶矩，该倾向取决于阶乘矩 $\\mathbb{E}[X(X-1)]$。为了闭合矩层次，采用高斯闭合假设：将 $X$ 的分布近似为单变量高斯分布，从而使得所有高于二阶的累积量都为零。令 $m = \\mathbb{E}[X]$ 和 $\\sigma^{2} = \\mathrm{Var}[X]$ 分别表示均值和方差。\n\n仅使用基本的概率定义（原点矩、中心矩、累积量）和高斯闭合假设下高斯分布的定义性质，推导下列各项关于 $m$ 和 $\\sigma^{2}$ 的闭合形式表达式：\n- $\\mathbb{E}[X(X-1)]$\n- $\\mathbb{E}[X^{3}]$\n- $\\mathbb{E}[X^{4}]$\n\n你的最终答案必须是单个解析表达式，按所列顺序写出这三个表达式。无需进行数值计算，也无需四舍五入。答案中不要包含任何物理单位。", "solution": "问题陈述需进行验证。\n\n**第 1 步：提取已知条件**\n- 化学物种：$A$\n- 反应：$\\varnothing \\xrightarrow{\\lambda} A$ 和 $2A \\xrightarrow{k} \\varnothing$\n- 随机变量：$X$ 是物种 $A$ 的拷贝数。\n- 矩：$m = \\mathbb{E}[X]$ (均值)，$\\sigma^{2} = \\mathrm{Var}[X]$ (方差)。\n- 闭合假设：$X$ 的分布被近似为一个单变量高斯分布。这意味着所有高于二阶的累积量都为零。\n- 任务：用 $m$ 和 $\\sigma^{2}$ 推导 $\\mathbb{E}[X(X-1)]$, $\\mathbb{E}[X^{3}]$ 和 $\\mathbb{E}[X^{4}]$ 的表达式。\n\n**第 2 步：使用已知条件进行验证**\n- **科学基础**：该问题正确定位于随机化学动力学领域。当解析解难以获得时，使用矩闭合，特别是高斯闭合，是求解化学主方程的一种标准且有效的近似技术。矩、中心矩和累积量之间的关系是概率论中的基本概念。该问题在科学上和数学上都是合理的。\n- **适定性**：该问题是适定的。它提供了一个清晰、明确的假设（高斯闭合），并要求基于此假设推导特定量。存在一个唯一、稳定且有意义的解，并且可以通过标准的数学步骤推导出来。\n- **客观性**：该问题以精确、客观的语言陈述，不含任何主观或非科学的主张。\n\n**第 3 步：结论与行动**\n该问题是**有效的**。它是矩闭合方法应用中的一个标准练习。将提供完整解法。\n\n问题的核心在于概率分布的原点矩（$\\mu_n' = \\mathbb{E}[X^n]$）、中心矩（$\\mu_n = \\mathbb{E}[(X-m)^n]$）和累积量（$\\kappa_n$）之间的关系。高斯闭合假设假定该分布是高斯分布。高斯分布的一个定义性质是其所有阶数 $n > 2$ 的累积量都恒等于零。\n\n前两个累积量分别定义为均值和方差：\n$$ \\kappa_1 = \\mathbb{E}[X] = m $$\n$$ \\kappa_2 = \\mathrm{Var}[X] = \\sigma^2 $$\n\n高斯闭合假设施加了以下条件：\n$$ \\kappa_n = 0 \\quad \\text{for all } n > 2 $$\n\n我们将使用通用公式，即用累积量表示原点矩，来推导所要求的量。\n\n**1. $\\mathbb{E}[X(X-1)]$ 的推导**\n这个量是二阶阶乘矩。根据期望的线性性，我们有：\n$$ \\mathbb{E}[X(X-1)] = \\mathbb{E}[X^2 - X] = \\mathbb{E}[X^2] - \\mathbb{E}[X] $$\n我们需要二阶原点矩 $\\mathbb{E}[X^2]$。二阶原点矩与前两个累积量之间的关系由下式给出：\n$$ \\mu_2' = \\mathbb{E}[X^2] = \\kappa_2 + \\kappa_1^2 $$\n代入给定的定义 $\\kappa_1 = m$ 和 $\\kappa_2 = \\sigma^2$：\n$$ \\mathbb{E}[X^2] = \\sigma^2 + m^2 $$\n现在，我们可以求出二阶阶乘矩的表达式：\n$$ \\mathbb{E}[X(X-1)] = (\\sigma^2 + m^2) - m = m^2 - m + \\sigma^2 $$\n\n**2. $\\mathbb{E}[X^3]$ 的推导**\n这是三阶原点矩 $\\mu_3'$。将 $\\mu_3'$ 与前三个累积量相关联的通用公式是：\n$$ \\mu_3' = \\mathbb{E}[X^3] = \\kappa_3 + 3\\kappa_2\\kappa_1 + \\kappa_1^3 $$\n应用高斯闭合假设，我们令 $\\kappa_3 = 0$：\n$$ \\mathbb{E}[X^3] = 0 + 3\\kappa_2\\kappa_1 + \\kappa_1^3 $$\n代入 $\\kappa_1 = m$ 和 $\\kappa_2 = \\sigma^2$：\n$$ \\mathbb{E}[X^3] = 3\\sigma^2 m + m^3 = m^3 + 3m\\sigma^2 $$\n\n**3. $\\mathbb{E}[X^4]$ 的推导**\n这是四阶原点矩 $\\mu_4'$。$\\mu_4'$ 用至多四阶的累积量表示的通用公式是：\n$$ \\mu_4' = \\mathbb{E}[X^4] = \\kappa_4 + 4\\kappa_3\\kappa_1 + 3\\kappa_2^2 + 6\\kappa_2\\kappa_1^2 + \\kappa_1^4 $$\n在高斯闭合假设下，$\\kappa_3$ 和 $\\kappa_4$ 均为零。公式简化为：\n$$ \\mathbb{E}[X^4] = 0 + 4(0)\\kappa_1 + 3\\kappa_2^2 + 6\\kappa_2\\kappa_1^2 + \\kappa_1^4 = 3\\kappa_2^2 + 6\\kappa_2\\kappa_1^2 + \\kappa_1^4 $$\n代入 $\\kappa_1 = m$ 和 $\\kappa_2 = \\sigma^2$：\n$$ \\mathbb{E}[X^4] = 3(\\sigma^2)^2 + 6(\\sigma^2)(m^2) + m^4 = m^4 + 6m^2\\sigma^2 + 3\\sigma^4 $$\n至此，完成了基于指定的闭合假设对所有三个要求量的推导。", "answer": "$$\\boxed{\\begin{pmatrix} m^{2} - m + \\sigma^{2} & m^{3} + 3m\\sigma^{2} & m^{4} + 6m^{2}\\sigma^{2} + 3\\sigma^{4} \\end{pmatrix}}$$", "id": "2657882"}, {"introduction": "矩封闭近似虽然强大，但并非普遍适用，有时会导致非物理性的结果。本练习旨在揭示一个典型的失效模式：高斯封闭可能会预测内在非负量（如二阶阶乘矩）出现负值。通过构建这样一个场景并提出修正方案，您将对这些方法的局限性形成更深刻、更具批判性的理解。[@problem_id:2657891]", "problem": "考虑一个单物种随机反应网络，其包含流入和二聚化（湮灭）反应，具体如下\n- $\\varnothing \\to X$，速率常数为 $k_{0}$（零阶流入），\n- $2X \\to \\varnothing$，速率常数为 $k_{2}$（二阶湮灭，质量作用倾向函数为 $a_{2}(X) = \\frac{k_{2}}{2} X(X-1)$）。\n\n令 $X(t)$ 表示随机拷贝数，$m(t) := \\mathbb{E}[X(t)]$ 为均值，$f_{2}(t) := \\mathbb{E}[X(t)(X(t)-1)]$ 为二阶阶乘矩，$v(t) := \\operatorname{Var}(X(t)) = \\mathbb{E}[X^{2}(t)] - m^{2}(t) = f_{2}(t) + m(t) - m^{2}(t)$ 为方差。使用化学主方程 (CME) 的生成元恒等式，即\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}t}\\mathbb{E}[g(X)] \\;=\\; \\mathbb{E}\\Bigg[\\sum_{r} a_{r}(X)\\big(g(X+\\nu_{r}) - g(X)\\big)\\Bigg],\n$$\n其中 $a_{r}(X)$ 和 $\\nu_{r}$ 分别表示反应 $r$ 的倾向函数和化学计量变化，以推导出 $\\frac{\\mathrm{d}}{\\mathrm{d}t} m$ 和 $\\frac{\\mathrm{d}}{\\mathrm{d}t} f_{2}$ 关于 $\\mathbb{E}[X^{3}]$ 的精确矩方程。然后，通过引入高斯闭合（正态近似）来闭合该系统，该近似假设三阶中心矩为零，从而得到\n$$\n\\mathbb{E}[X^{3}] \\;=\\; m^{3} + 3 m v \\;=\\; m^{3} + 3 m \\big(f_{2} + m - m^{2}\\big).\n$$\n回答以下问题：\n\n1) 从 CME 恒等式出发, 推导 $\\frac{\\mathrm{d}}{\\mathrm{d}t} m$ 和 $\\frac{\\mathrm{d}}{\\mathrm{d}t} f_{2}$ 的精确表达式, 并展示其对 $\\mathbb{E}[X^{3}]$ 的依赖性。\n\n2) 将 $\\mathbb{E}[X^{3}]$ 的高斯闭合表达式代入您得到的 $\\frac{\\mathrm{d}}{\\mathrm{d}t} f_{2}$ 公式中，以获得用 $m$ 和 $f_{2}$ 表示的 $\\frac{\\mathrm{d}}{\\mathrm{d}t} f_{2}$ 的闭合表达式。\n\n3) 考虑参数集 $k_{0} = 1$ 和 $k_{2} = 9$ 以及状态 $(m, f_{2}) = \\left(\\frac{3}{4}, 0\\right)$。计算 $\\left.\\frac{\\mathrm{d}}{\\mathrm{d}t} f_{2}\\right|_{t=0}$ 的高斯闭合值并确定其符号，从而构建一个高斯闭合在 $t>0$ 且足够小时立即违背非负性（即 $f_{2}(t) < 0$）的情形。\n\n4) 概述一种恢复非负性的基于投影的修正方法：在边界 $f_{2} = 0$ 处，保持 $m$ 固定，并仅对闭合所用的三阶原点矩 $\\mathbb{E}[X^{3}]$ 进行最小扰动，使得修正后的瞬时漂移满足 $\\left.\\frac{\\mathrm{d}}{\\mathrm{d}t} f_{2}\\right|_{t=0}^{\\mathrm{corr}} = 0$。计算该修正量的精确值\n$$\n\\Delta \\mathbb{E}[X^{3}] \\;:=\\; \\mathbb{E}[X^{3}]_{\\mathrm{corr}} - \\mathbb{E}[X^{3}]_{\\mathrm{Gauss}}\n$$\n在给定的参数和状态下。\n\n给出 $\\Delta \\mathbb{E}[X^{3}]$ 的精确值作为最终答案（无单位）。如果使用数值近似，将答案四舍五入到四位有效数字；否则，提供一个精确分数。", "solution": "该问题陈述在科学上是合理的、适定的、客观且自洽的。这是对随机动力学系统矩闭合近似分析的一个有效练习。我们开始进行解答。\n\n该随机过程涉及两个反应：\n1.  零阶流入：$\\varnothing \\xrightarrow{k_0} X$。倾向函数为 $a_1(X) = k_0$，化学计量变化为 $\\nu_1 = +1$。\n2.  二阶湮灭：$2X \\xrightarrow{k_2} \\varnothing$。倾向函数为 $a_2(X) = \\frac{k_2}{2} X(X-1)$，化学计量变化为 $\\nu_2 = -2$。\n\n给定任意函数 $g(X)$ 的期望值的时间演化生成元恒等式：\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}t}\\mathbb{E}[g(X)] = \\mathbb{E}\\Bigg[\\sum_{r=1}^{2} a_r(X) \\big(g(X+\\nu_r) - g(X)\\big)\\Bigg]\n$$\n\n**1) 精确矩方程的推导**\n\n首先，我们通过令 $g(X)=X$ 来推导均值 $m(t) = \\mathbb{E}[X(t)]$ 的方程。\n反应 1 带来的变化为 $a_1(X)(g(X+\\nu_1)-g(X)) = k_0((X+1)-X) = k_0$。\n反应 2 带来的变化为 $a_2(X)(g(X+\\nu_2)-g(X)) = \\frac{k_2}{2}X(X-1)((X-2)-X) = -k_2 X(X-1)$。\n对期望求和，得到均值的演化方程：\n$$\n\\frac{\\mathrm{d}m}{\\mathrm{d}t} = \\mathbb{E}[k_0 - k_2 X(X-1)] = k_0 - k_2\\mathbb{E}[X(X-1)]\n$$\n根据定义，$f_2(t) = \\mathbb{E}[X(t)(X(t)-1)]$，因此我们有：\n$$\n\\frac{\\mathrm{d}m}{\\mathrm{d}t} = k_0 - k_2 f_2\n$$\n这个方程是精确且已经闭合的，不依赖于更高阶的矩。\n\n接下来，我们通过令 $g(X)=X(X-1)$ 来推导二阶阶乘矩 $f_2(t) = \\mathbb{E}[X(t)(X(t)-1)]$ 的方程。\n反应 1 带来的变化为 $a_1(X)(g(X+\\nu_1)-g(X)) = k_0((X+1)X - X(X-1)) = k_0(X^2+X - X^2+X) = 2k_0 X$。\n反应 2 带来的变化为 $a_2(X)(g(X+\\nu_2)-g(X)) = \\frac{k_2}{2}X(X-1)((X-2)(X-3) - X(X-1)) = \\frac{k_2}{2}X(X-1)(X^2-5X+6 - (X^2-X)) = \\frac{k_2}{2}X(X-1)(-4X+6) = -k_2 X(X-1)(2X-3)$。\n对期望求和，得到二阶阶乘矩的演化方程：\n$$\n\\frac{\\mathrm{d}f_2}{\\mathrm{d}t} = \\mathbb{E}[2k_0 X - k_2 X(X-1)(2X-3)] = 2k_0\\mathbb{E}[X] - k_2\\mathbb{E}[2X^3 - 5X^2 + 3X]\n$$\n我们用 $m$ 和 $f_2$ 来表示 $\\mathbb{E}[X^2]$：$\\mathbb{E}[X^2] = \\mathbb{E}[X(X-1)+X] = f_2+m$。\n将此代入 $\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}$ 的方程中：\n$$\n\\frac{\\mathrm{d}f_2}{\\mathrm{d}t} = 2k_0 m - k_2(2\\mathbb{E}[X^3] - 5\\mathbb{E}[X^2] + 3m) = 2k_0 m - k_2(2\\mathbb{E}[X^3] - 5(f_2+m) + 3m)\n$$\n化简后得到最终的精确方程，该方程展示了对 $\\mathbb{E}[X^3]$ 的依赖性：\n$$\n\\frac{\\mathrm{d}f_2}{\\mathrm{d}t} = 2k_0 m - k_2(2\\mathbb{E}[X^3] - 5f_2 - 2m)\n$$\n\n**2) 高斯闭合**\n\n高斯闭合使用均值 $m$、方差 $v$ 和二阶阶乘矩 $f_2$ 来近似三阶原点矩 $\\mathbb{E}[X^3]$。方差为 $v = \\mathbb{E}[X^2] - m^2 = (f_2+m) - m^2$。\n该近似为 $\\mathbb{E}[X^3] = m^3 + 3mv$。代入 $v$ 的表达式：\n$$\n\\mathbb{E}[X^3]_{\\mathrm{Gauss}} = m^3 + 3m(f_2 + m - m^2)\n$$\n我们把这个代入 $\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}$ 的精确方程中：\n$$\n\\frac{\\mathrm{d}f_2}{\\mathrm{d}t} = 2k_0 m - k_2\\Big(2\\big(m^3 + 3m(f_2+m-m^2)\\big) - 5f_2 - 2m\\Big)\n$$\n我们化简括号中的项：\n$$\n2m^3 + 6mf_2 + 6m^2 - 6m^3 - 5f_2 - 2m = -4m^3 + 6m^2 - 2m + (6m-5)f_2\n$$\n因此，$\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}$ 的闭合方程为：\n$$\n\\frac{\\mathrm{d}f_2}{\\mathrm{d}t} = 2k_0 m - k_2\\big(-4m^3 + 6m^2 - 2m + (6m-5)f_2\\big)\n$$\n$$\n\\frac{\\mathrm{d}f_2}{\\mathrm{d}t} = 2k_0 m + 2k_2 m(2m^2 - 3m + 1) - k_2(6m-5)f_2\n$$\n\n**3) 违背非负性**\n\n我们在指定状态下计算闭合形式的导数 $\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}$。\n参数：$k_0 = 1$，$k_2 = 9$。\n$t=0$ 时的状态：$(m(0), f_2(0)) = \\left(\\frac{3}{4}, 0\\right)$。\n将这些值代入闭合方程：\n$$\n\\left.\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}\\right|_{t=0} = 2(1)\\left(\\frac{3}{4}\\right) + 2(9)\\left(\\frac{3}{4}\\right)\\left(2\\left(\\frac{3}{4}\\right)^2 - 3\\left(\\frac{3}{4}\\right) + 1\\right) - 9\\left(6\\left(\\frac{3}{4}\\right)-5\\right)(0)\n$$\n$$\n\\left.\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}\\right|_{t=0} = \\frac{3}{2} + \\frac{27}{2}\\left(2\\left(\\frac{9}{16}\\right) - \\frac{9}{4} + 1\\right) = \\frac{3}{2} + \\frac{27}{2}\\left(\\frac{9}{8} - \\frac{18}{8} + \\frac{8}{8}\\right)\n$$\n$$\n\\left.\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}\\right|_{t=0} = \\frac{3}{2} + \\frac{27}{2}\\left(-\\frac{1}{8}\\right) = \\frac{3}{2} - \\frac{27}{16} = \\frac{24}{16} - \\frac{27}{16} = -\\frac{3}{16}\n$$\n$\\left.\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}\\right|_{t=0}$ 的符号为负。由于 $f_2(0)=0$ 且其时间导数为负，对于足够小的 $t>0$，$f_2(t)$ 将变为负值。这违背了物理约束 $f_2(t) = \\mathbb{E}[X(t)(X(t)-1)] \\ge 0$，因为 $X(t)$ 是一个非负整数。\n\n**4) 基于投影的修正**\n\n为了恢复非负性，我们要求修正后的漂移 $\\left.\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}\\right|_{t=0}^{\\mathrm{corr}}$ 为零。我们通过找到满足此条件的修正后三阶矩 $\\mathbb{E}[X^3]_{\\mathrm{corr}}$ 来实现这一点。我们使用 $f_2$ 的**精确**演化方程：\n$$\n\\left.\\frac{\\mathrm{d}f_2}{\\mathrm{d}t}\\right|_{t=0}^{\\mathrm{corr}} = 2k_0 m(0) - k_2\\big(2\\mathbb{E}[X^3]_{\\mathrm{corr}} - 5f_2(0) - 2m(0)\\big) = 0\n$$\n代入参数 $k_0 = 1, k_2 = 9$ 和状态 $(m(0), f_2(0)) = \\left(\\frac{3}{4}, 0\\right)$：\n$$\n2(1)\\left(\\frac{3}{4}\\right) - 9\\left(2\\mathbb{E}[X^3]_{\\mathrm{corr}} - 5(0) - 2\\left(\\frac{3}{4}\\right)\\right) = 0\n$$\n$$\n\\frac{3}{2} - 9\\left(2\\mathbb{E}[X^3]_{\\mathrm{corr}} - \\frac{3}{2}\\right) = 0\n$$\n$$\n\\frac{3}{2} - 18\\mathbb{E}[X^3]_{\\mathrm{corr}} + \\frac{27}{2} = 0\n$$\n$$\n18\\mathbb{E}[X^3]_{\\mathrm{corr}} = \\frac{30}{2} = 15\n$$\n$$\n\\mathbb{E}[X^3]_{\\mathrm{corr}} = \\frac{15}{18} = \\frac{5}{6}\n$$\n现在，我们计算在相同状态下高斯闭合预测的三阶矩 $\\mathbb{E}[X^3]_{\\mathrm{Gauss}}$：\n$$\n\\mathbb{E}[X^3]_{\\mathrm{Gauss}} = m(0)^3 + 3m(0)\\big(f_2(0) + m(0) - m(0)^2\\big)\n$$\n$$\n\\mathbb{E}[X^3]_{\\mathrm{Gauss}} = \\left(\\frac{3}{4}\\right)^3 + 3\\left(\\frac{3}{4}\\right)\\left(0 + \\frac{3}{4} - \\left(\\frac{3}{4}\\right)^2\\right)\n$$\n$$\n\\mathbb{E}[X^3]_{\\mathrm{Gauss}} = \\frac{27}{64} + \\frac{9}{4}\\left(\\frac{3}{4} - \\frac{9}{16}\\right) = \\frac{27}{64} + \\frac{9}{4}\\left(\\frac{12-9}{16}\\right) = \\frac{27}{64} + \\frac{9}{4}\\left(\\frac{3}{16}\\right)\n$$\n$$\n\\mathbb{E}[X^3]_{\\mathrm{Gauss}} = \\frac{27}{64} + \\frac{27}{64} = \\frac{54}{64} = \\frac{27}{32}\n$$\n所需的修正量是这两个值之差：\n$$\n\\Delta \\mathbb{E}[X^3] = \\mathbb{E}[X^3]_{\\mathrm{corr}} - \\mathbb{E}[X^3]_{\\mathrm{Gauss}} = \\frac{5}{6} - \\frac{27}{32}\n$$\n$6$ 和 $32$ 的最小公倍数是 $96$。\n$$\n\\Delta \\mathbb{E}[X^3] = \\frac{5 \\times 16}{96} - \\frac{27 \\times 3}{96} = \\frac{80}{96} - \\frac{81}{96} = -\\frac{1}{96}\n$$\n这是在边界 $f_2=0$ 处，为强制执行非负性约束而对闭合所使用的三阶矩进行的最小扰动。", "answer": "$$\n\\boxed{-\\frac{1}{96}}\n$$", "id": "2657891"}, {"introduction": "我们如何判断一个矩封闭近似对于给定的系统是否准确？黄金标准是将其预测与精确方法（如 Gillespie 的随机模拟算法，SSA）的结果进行比较。本计算练习要求您实现一个 SSA，并将其结果与泊松封闭的预测进行对比，从而揭示该近似在一个非复杂平衡网络中的不准确性。[@problem_id:2657915]", "problem": "考虑一个单物种反应网络，其包含以下两个由质量作用动力学控制的反应：\n1. 生成反应：$\\varnothing \\rightarrow X$，倾向函数为 $a_{1}(x) = k_{0}$。\n2. 二聚化移除反应：$2X \\rightarrow \\varnothing$，倾向函数为 $a_{2}(x) = k_{2}\\,\\frac{x(x-1)}{2}$。\n\n假设该动力学过程由化学主方程（CME）描述，并令 $X(t)$ 表示在时间 $t$ 的分子数。对于任意状态 $x \\in \\mathbb{N}_{0}$，由 Gillespie 首次提出的随机模拟算法（SSA）可以提供 CME 的一条精确样本路径。该网络不是弱可逆的，因此也不是复数平衡的；已知泊松矩封闭对于此类网络通常不是精确的。\n\n您的任务是通过数值方法证明，对于此非复数平衡网络，泊松矩封闭得到的结果与从 SSA 获得的稳态矩不匹配。请按以下步骤进行：\n\n1. 使用标准恒等式 $\\frac{d}{dt}\\mathbb{E}[X(t)] = \\sum_{r} \\nu_{r} \\,\\mathbb{E}[a_{r}(X(t))]$ 从 CME 推导出的一阶矩演化方程，其中 $\\nu_{r}$ 是反应 $r$ 的化学计量变化，$a_{r}$ 是其倾向函数。将此方程应用于上述网络，以 $\\mathbb{E}[X(t)(X(t)-1)]$ 的形式表示 $\\frac{d}{dt}\\mathbb{E}[X(t)]$。\n\n2. 实现泊松矩封闭，方法是假设 $X$ 服从均值为 $m(t) = \\mathbb{E}[X(t)]$ 的泊松分布，从而近似所有阶乘矩，即 $\\mathbb{E}[X(t)(X(t)-1)] \\approx m(t)^{2}$ 且 $\\operatorname{Var}[X(t)] \\approx m(t)$。使用此封闭方法，通过求解 $\\frac{d}{dt}m(t) = 0$ 来确定封闭的稳态均值 $m_{\\mathrm{pc}}$。\n\n3. 实现一个 SSA，通过长时间的时间平均来估计稳态均值 $\\mu_{\\mathrm{ssa}}$ 和稳态方差 $\\sigma_{\\mathrm{ssa}}^{2}$。具体来说，对于总模拟时长 $T_{\\text{total}}$ 和预烧时间 $T_{\\text{burn}}$，估计\n$\\mu_{\\mathrm{ssa}} \\approx \\frac{1}{T_{\\text{total}} - T_{\\text{burn}}}\\int_{T_{\\text{burn}}}^{T_{\\text{total}}} X(t)\\,dt$ 和 $\\mathbb{E}[X^{2}] \\approx \\frac{1}{T_{\\text{total}} - T_{\\text{burn}}}\\int_{T_{\\text{burn}}}^{T_{\\text{total}}} X(t)^{2}\\,dt$，然后设 $\\sigma_{\\mathrm{ssa}}^{2} = \\mathbb{E}[X^{2}] - \\mu_{\\mathrm{ssa}}^{2}$。\n\n4. 通过检查法诺因子 $F = \\sigma_{\\mathrm{ssa}}^{2}/\\mu_{\\mathrm{ssa}}$ 与泊松值 $1$ 的偏差是否超过预设阈值来证明不匹配。为每个测试用例定义一个布尔结果：\n$\\text{mismatch} := \\left| \\frac{\\sigma_{\\mathrm{ssa}}^{2}}{\\mu_{\\mathrm{ssa}}} - 1 \\right| > \\epsilon$\n其中 $\\epsilon = 0.1$。\n\n使用以下参数测试套件 $(k_{0}, k_{2}, T_{\\text{total}}, T_{\\text{burn}}, \\text{seed})$：\n- 用例 A (中等分子数): $(20, 0.2, 1500, 500, 13)$。\n- 用例 B (低分子数): $(2, 1.0, 1500, 500, 17)$。\n- 用例 C (较高分子数): $(200, 0.2, 1500, 500, 19)$。\n\n所有数值都是无量纲的，代表与离散时间和计数的 CME 一致的反应速率单位。\n\n您的程序应：\n- 实现具有精确倾向函数 $a_{1}(x) = k_{0}$ 和 $a_{2}(x) = k_{2}\\,\\frac{x(x-1)}{2}$ 以及相应状态更新 $+1$ 和 $-2$ 的 SSA。\n- 在预烧区间之后计算时间平均的稳态估计值。\n- 对每个测试用例，计算上述定义的布尔值不匹配结果。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含用例 A、B 和 C 的三个布尔结果，形式为逗号分隔的列表，并用方括号括起来，例如 '[True,False,True]'。", "solution": "所述问题是有效的。它在科学上基于成熟的随机化学动力学理论，问题设定良好，提供了所有必需的参数，并以客观、明确的语言进行表述。它提出了一个标准的、非平凡的任务：将一种近似解析方法与一种精确的数值模拟进行比较。我们现在开始进行求解。\n\n目标是数值证明泊松矩封闭未能准确预测非复数平衡反应网络的稳态统计特性。该网络包含两个反应：\n1. 生成反应：$\\varnothing \\xrightarrow{k_0} X$，倾向函数为 $a_{1}(x) = k_{0}$。\n2. 二聚化移除反应：$2X \\xrightarrow{k_2} \\varnothing$，倾向函数为 $a_{2}(x) = k_2 \\frac{x(x-1)}{2}$。\n\n我们将遵循规定的步骤：首先，推导精确的矩动力学方程以及在泊松近似下的相应封闭方程；其次，实现随机模拟算法（SSA）以获得精确的统计数据；最后，比较结果。\n\n**1. 矩演化与泊松矩封闭**\n\n在化学主方程（CME）下，函数 $f(X(t))$ 的期望值的时间演化由主方程到矩方程的转换公式给出：\n$$\n\\frac{d}{dt}\\mathbb{E}[f(X(t))] = \\sum_{r=1}^{R} \\mathbb{E}[a_r(X(t)) (f(X(t) + \\nu_r) - f(X(t)))]\n$$\n其中 $a_r(x)$ 是反应 $r$ 的倾向函数，$\\nu_r$ 是物种 $X$ 分子数的相应化学计量变化。\n对于一阶矩，我们设 $f(x) = x$。这可以简化为：\n$$\n\\frac{d}{dt}\\mathbb{E}[X(t)] = \\sum_{r=1}^{R} \\nu_r \\mathbb{E}[a_r(X(t))]\n$$\n对于给定的网络，我们有两个反应，其化学计量变化分别为 $\\nu_1 = +1$ 和 $\\nu_2 = -2$。代入倾向函数 $a_1(x) = k_0$ 和 $a_2(x) = k_2 \\frac{x(x-1)}{2}$，我们得到均值 $\\mathbb{E}[X(t)]$ 的演化方程：\n$$\n\\frac{d}{dt}\\mathbb{E}[X(t)] = (+1)\\mathbb{E}[a_1(X(t))] + (-2)\\mathbb{E}[a_2(X(t))]\n$$\n$$\n\\frac{d}{dt}\\mathbb{E}[X(t)] = \\mathbb{E}[k_0] - 2\\mathbb{E}\\left[k_2 \\frac{X(t)(X(t)-1)}{2}\\right]\n$$\n由于 $k_0$ 和 $k_2$ 是常数，这变为：\n$$\n\\frac{d}{dt}\\mathbb{E}[X(t)] = k_0 - k_2 \\mathbb{E}[X(t)(X(t)-1)]\n$$\n该方程不是封闭的，因为一阶矩 $\\mathbb{E}[X]$ 的动力学依赖于二阶阶乘矩 $\\mathbb{E}[X(X-1)]$。为了封闭该系统，我们采用泊松矩封闭。此封闭方法假设 $X(t)$ 的分布近似为泊松分布。对于均值为 $m$ 的泊松分布随机变量，其二阶阶乘矩等于均值的平方，即 $\\mathbb{E}[X(X-1)] = m^2$。\n令 $m(t) = \\mathbb{E}[X(t)]$。应用矩封闭近似 $\\mathbb{E}[X(t)(X(t)-1)] \\approx m(t)^2$，我们得到关于均值的封闭常微分方程：\n$$\n\\frac{dm(t)}{dt} \\approx k_0 - k_2 m(t)^2\n$$\n为了找到此封闭方法预测的稳态均值 $m_{\\mathrm{pc}}$，我们将导数设为零：\n$$\n0 = k_0 - k_2 m_{\\mathrm{pc}}^2 \\implies m_{\\mathrm{pc}}^2 = \\frac{k_0}{k_2} \\implies m_{\\mathrm{pc}} = \\sqrt{\\frac{k_0}{k_2}}\n$$\n由于分子数是非负的，我们只考虑正根。\n泊松分布的一个关键性质是其方差等于其均值，这意味着法诺因子 $F = \\sigma^2/\\mu$ 恒等于 $1$。因此，泊松矩封闭隐含地预测稳态下的法诺因子为 $F=1$。\n\n**2. 随机模拟与统计分析**\n\n为了找到真实的稳态统计数据，我们使用 Gillespie 随机模拟算法（SSA），该算法生成由 CME 描述的过程的统计精确实现。该算法按以下步骤进行：\n- 在时间 $t$ 状态为 $x$ 时，计算倾向函数 $a_1 = k_0$ 和 $a_2 = k_2 x(x-1)/2$。\n- 总倾向函数为 $a_{\\text{total}} = a_1 + a_2$。\n- 到下一次反应发生的时间 $\\tau$ 从速率为 $a_{\\text{total}}$ 的指数分布中抽样，即 $\\tau = \\frac{1}{a_{\\text{total}}}\\ln(\\frac{1}{u_1})$，其中 $u_1 \\sim U(0,1)$。时间推进到 $t + \\tau$。\n- 将要发生的反应是根据其倾向函数按比例选择的。抽取第二个随机数 $u_2 \\sim U(0,1)$ 。如果 $u_2 a_{\\text{total}} < a_1$，则发生生成反应，状态更新为 $x+1$。否则，发生二聚化反应，状态更新为 $x-2$。\n\n轨迹 $X(t)$ 是一个分段常数函数。为了估计稳态矩，我们在一个长的模拟时域 $[T_{\\text{burn}}, T_{\\text{total}}]$ 上执行时间平均，其中 $T_{\\text{burn}}$ 是一个预烧期，以使系统达到稳态。时间平均均值 $\\mu_{\\mathrm{ssa}}$ 和二阶原始矩 $\\mathbb{E}[X^2]_{\\mathrm{ssa}}$ 计算如下：\n$$\n\\mu_{\\mathrm{ssa}} = \\frac{1}{T_{\\text{total}} - T_{\\text{burn}}} \\int_{T_{\\text{burn}}}^{T_{\\text{total}}} X(t) dt \\quad \\text{和} \\quad \\mathbb{E}[X^2]_{\\mathrm{ssa}} = \\frac{1}{T_{\\text{total}} - T_{\\text{burn}}} \\int_{T_{\\text{burn}}}^{T_{\\text{total}}} X(t)^2 dt\n$$\n这些积分是通过对连续反应之间的每个时间间隔的贡献求和来计算的。如果在时间 $t_i$ 发生反应导致状态为 $x_i$，且下一次反应发生在 $t_{i+1}$，则计算区间 $[t_i, t_{i+1})$ 对积分的贡献，同时只考虑该区间落在 $[T_{\\text{burn}}, T_{\\text{total}}]$ 内的部分。\n根据这些估计值，稳态方差计算为 $\\sigma_{\\mathrm{ssa}}^2 = \\mathbb{E}[X^2]_{\\mathrm{ssa}} - \\mu_{\\mathrm{ssa}}^2$。然后，法诺因子为 $F_{\\mathrm{ssa}} = \\sigma_{\\mathrm{ssa}}^2 / \\mu_{\\mathrm{ssa}}$。\n\n**3. 不匹配判据**\n\n通过检查法诺因子是否接近 $1$ 来测试泊松矩封闭的有效性。我们根据以下条件定义，如果偏差显著，则发生不匹配：\n$$\n\\text{mismatch} := \\left| \\frac{\\sigma_{\\mathrm{ssa}}^2}{\\mu_{\\mathrm{ssa}}} - 1 \\right| > \\epsilon\n$$\n给定阈值为 $\\epsilon = 0.1$。以下 Python 程序为所提供的测试用例实现了 SSA 和此准则。对于这个特定的反应网络，一个已知的理论结果是其稳态分布是亚泊松分布的，在大分子数极限下，法诺因子接近 $3/4$。因此，我们预期所有测试用例都会出现不匹配。", "answer": "```python\nimport numpy as np\n\ndef run_ssa_and_check_mismatch(k0, k2, T_total, T_burn, seed, epsilon):\n    \"\"\"\n    Runs the Stochastic Simulation Algorithm (SSA) for the given reaction network\n    and checks for a mismatch with the Poisson closure assumption.\n\n    Args:\n        k0 (float): Rate constant for the birth reaction.\n        k2 (float): Rate constant for the dimerization reaction.\n        T_total (float): Total simulation time.\n        T_burn (float): Burn-in time, statistics are collected after this time.\n        seed (int): Seed for the random number generator.\n        epsilon (float): Threshold for the mismatch criterion.\n\n    Returns:\n        bool: True if the Fano factor deviates from 1 by more than epsilon, False otherwise.\n    \"\"\"\n    rng = np.random.default_rng(seed)\n\n    t = 0.0\n    x = 0  # Initial state: 0 molecules\n\n    # Integrals for time-averaged moments\n    integral_x = 0.0\n    integral_x2 = 0.0\n    \n    while t < T_total:\n        t_old = t\n\n        # Calculate propensities for the current state x\n        a1 = k0\n        a2 = k2 * x * (x - 1) / 2.0 if x >= 2 else 0.0\n        a_total = a1 + a2\n\n        if a_total <= 0:\n            # This case occurs if k0=0 and x<2. With k0>0, it's unreachable.\n            # If it happened, system is stuck. Advance time to end.\n            t = T_total\n        else:\n            # Sample time to next reaction from an exponential distribution\n            u1 = rng.random()\n            tau = -np.log(u1) / a_total\n            t += tau\n\n        # --- Accumulate time-weighted statistics ---\n        # The state was `x` during the interval [t_old, t].\n        # We calculate the overlap of this interval with the measurement window [T_burn, T_total].\n        \n        # Effective start and end of the integration interval\n        t_start_interval = max(t_old, T_burn)\n        t_end_interval = min(t, T_total)\n\n        if t_end_interval > t_start_interval:\n            duration_in_window = t_end_interval - t_start_interval\n            integral_x += x * duration_in_window\n            integral_x2 += (x**2) * duration_in_window\n\n        if t >= T_total:\n            break\n\n        # --- Choose reaction and update state ---\n        u2 = rng.random()\n        if u2 * a_total < a1:\n            # Reaction 1: Birth (x -> x + 1)\n            x += 1\n        else:\n            # Reaction 2: Dimerization (x -> x - 2)\n            x -= 2\n\n    # --- Finalize statistics and check mismatch ---\n    measurement_duration = T_total - T_burn\n    if measurement_duration <= 0:\n        # No measurement window, cannot determine mismatch. Assume False.\n        return False\n        \n    mu_ssa = integral_x / measurement_duration\n    e_x2 = integral_x2 / measurement_duration\n\n    if mu_ssa <= 0:\n        # If mean is zero or negative, Fano factor is ill-defined or system is empty.\n        # This implies a strong deviation from any non-trivial Poisson distribution.\n        # A positive mean is expected. In case it happens, we consider it a mismatch.\n        return True\n        \n    sigma2_ssa = e_x2 - mu_ssa**2\n    fano_factor = sigma2_ssa / mu_ssa\n    \n    mismatch = abs(fano_factor - 1.0) > epsilon\n    return mismatch\n\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    # Test suite: (k0, k2, T_total, T_burn, seed)\n    test_cases = [\n        (20, 0.2, 1500, 500, 13),    # Case A: moderate copy numbers\n        (2, 1.0, 1500, 500, 17),    # Case B: low copy numbers\n        (200, 0.2, 1500, 500, 19),   # Case C: higher copy numbers\n    ]\n    \n    epsilon = 0.1\n    results = []\n\n    for k0, k2, T_total, T_burn, seed in test_cases:\n        mismatch_result = run_ssa_and_check_mismatch(k0, k2, T_total, T_burn, seed, epsilon)\n        results.append(mismatch_result)\n\n    # Convert boolean results to strings ('True'/'False') and format output\n    print(f\"[{','.join(map(str, results))}]\")\n\n\n# Execute the solution\nsolve()\n\n```", "id": "2657915"}]}