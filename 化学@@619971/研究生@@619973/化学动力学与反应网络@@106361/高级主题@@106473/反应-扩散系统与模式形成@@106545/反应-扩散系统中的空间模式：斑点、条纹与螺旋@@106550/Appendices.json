{"hands_on_practices": [{"introduction": "图灵失稳理论提供了一个强大的框架，但真正的理解源于动手实践。本练习将引导你对“布鲁塞尔振子”（Brusselator）模型进行线性稳定性分析，这是一个研究化学振荡和图样形成的经典模型[@problem_id:2675355]。通过这个计算，你将掌握判断特定反应-扩散系统能否产生图样，并确定其特征空间尺度（即最不稳定的波长）的核心技能。", "problem": "考虑一个经典的布鲁塞尔振子（Brusselator）反应扩散系统，其浓度 $u(x,y,t)$ 和 $v(x,y,t)$ 定义在方形区域 $\\Omega = [0,L] \\times [0,L]$ 上，并满足齐次诺伊曼（零通量）边界条件。其控制偏微分方程（PDEs）为\n$$\n\\frac{\\partial u}{\\partial t} = A - (B+1)\\,u + u^{2} v + D_{u} \\nabla^{2} u,\\qquad\n\\frac{\\partial v}{\\partial t} = B\\,u - u^{2} v + D_{v} \\nabla^{2} v,\n$$\n其中，$A$、$B$ 是动力学参数，$D_{u}$、$D_{v}$ 是扩散系数。\n\n使用以下参数值：\n$$\nA = 1.000000,\\quad B = 1.799568,\\quad D_{u} = 1.0 \\times 10^{-6}\\ \\text{cm}^{2}\\,\\text{s}^{-1},\\quad D_{v} = 1.0 \\times 10^{-4}\\ \\text{cm}^{2}\\,\\text{s}^{-1},\n$$\n并设区域边长为\n$$\nL = 1.000000\\ \\text{cm}.\n$$\n\n从空间均匀稳态的线性稳定性分析的基本原理出发，判断该系统在给定区域上是否允许出现扩散驱动（图灵）不稳定性。如果允许，请找出一个由整数 $(m,n)$ 索引的离散诺伊曼本征模，使其允许的波数等于最快增长波数，并计算相应的波数大小 $k_{mn}$。\n\n将最终报告的波数以 $\\text{cm}^{-1}$ 为单位表示，并将您的答案四舍五入到四位有效数字。您的最终回答必须仅为按要求给出的 $k_{mn}$ 的数值。", "solution": "首先必须严格验证问题陈述。\n\n步骤1：提取给定条件。\n布鲁塞尔振子系统的控制偏微分方程为：\n$$\n\\frac{\\partial u}{\\partial t} = A - (B+1)\\,u + u^{2} v + D_{u} \\nabla^{2} u\n$$\n$$\n\\frac{\\partial v}{\\partial t} = B\\,u - u^{2} v + D_{v} \\nabla^{2} v\n$$\n该系统定义在具有齐次诺伊曼边界条件的方形区域 $\\Omega = [0,L] \\times [0,L]$ 上。\n参数值给定如下：\n$$\nA = 1.000000\n$$\n$$\nB = 1.799568\n$$\n$$\nD_{u} = 1.0 \\times 10^{-6}\\ \\text{cm}^{2}\\,\\text{s}^{-1}\n$$\n$$\nD_{v} = 1.0 \\times 10^{-4}\\ \\text{cm}^{2}\\,\\text{s}^{-1}\n$$\n区域边长为：\n$$\nL = 1.000000\\ \\text{cm}\n$$\n\n步骤2：使用提取的给定条件进行验证。\n该问题具有科学依据。布鲁塞尔振子是研究非线性化学振荡和模式形成的典型模型。所要求的分析——通过线性稳定性分析研究图灵不稳定性——是研究反应扩散系统的标准基本方法。该问题是适定的，提供了确定唯一解所需的所有方程、参数、区域规格和边界条件。所用语言客观、精确。问题本身是自洽的，没有矛盾、伪科学或歧义。这是一个图灵分析的教科书式例子。\n\n步骤3：结论与行动。\n问题有效。将提供解答。\n\n分析的第一步是确定系统的空间均匀稳态 $(u_s, v_s)$。该状态通过将时间导数和空间导数（扩散项）设为零来找到：\n$$\nA - (B+1)u_s + u_s^2 v_s = 0\n$$\n$$\nB u_s - u_s^2 v_s = 0\n$$\n从第二个方程，假设 $u_s \\neq 0$，我们得到 $v_s = B/u_s$。将其代入第一个方程得到：\n$$\nA - (B+1)u_s + u_s^2 (B/u_s) = 0 \\implies A - (B+1)u_s + B u_s = 0 \\implies A - u_s = 0\n$$\n这给出了稳态解 $u_s = A$。因此，$v_s = B/A$。\n使用给定的参数 $A=1.0$ 和 $B=1.799568$，稳态为 $(u_s, v_s) = (1.0, 1.799568)$。\n\n接下来，我们围绕此稳态进行线性稳定性分析。设 $u(x,y,t) = u_s + \\delta u(x,y,t)$ 和 $v(x,y,t) = v_s + \\delta v(x,y,t)$，其中 $\\delta u$ 和 $\\delta v$ 是小扰动。反应动力学项为 $f(u,v) = A - (B+1)u + u^2v$ 和 $g(u,v) = Bu - u^2v$。在 $(u_s, v_s)$ 附近对系统进行线性化，得到关于扰动的系统：\n$$\n\\frac{\\partial}{\\partial t} \\begin{pmatrix} \\delta u \\\\ \\delta v \\end{pmatrix} = \\begin{pmatrix} f_u  f_v \\\\ g_u  g_v \\end{pmatrix}_{(u_s,v_s)} \\begin{pmatrix} \\delta u \\\\ \\delta v \\end{pmatrix} + \\begin{pmatrix} D_u  0 \\\\ 0  D_v \\end{pmatrix} \\nabla^2 \\begin{pmatrix} \\delta u \\\\ \\delta v \\end{pmatrix}\n$$\n此处，偏导数矩阵是在稳态下求值的反应雅可比矩阵 $J$。偏导数为：\n$f_u = -(B+1) + 2uv$, $f_v = u^2$, $g_u = B - 2uv$, $g_v = -u^2$。\n在 $(u_s, v_s) = (A, B/A)$ 处求值：\n$f_u = -(B+1) + 2A(B/A) = B-1$\n$f_v = A^2$\n$g_u = B - 2A(B/A) = -B$\n$g_v = -A^2$\n所以雅可比矩阵为 $J = \\begin{pmatrix} B-1  A^2 \\\\ -B  -A^2 \\end{pmatrix}$。\n\n方形区域上的齐次诺伊曼边界条件意味着扰动可以展开为拉普拉斯算子的余弦本征函数基：$\\delta \\mathbf{u}(x,y,t) \\propto e^{\\lambda t} \\cos(k_x x) \\cos(k_y y)$，其中对于非负整数 $m, n$，$k_x = m\\pi/L$ 且 $k_y = n\\pi/L$。对于这样一个模，拉普拉斯算子的作用是乘以 $-k^2$，其中波数的平方为 $k^2 = k_x^2 + k_y^2$。每个模的演化由以下线性系统控制：\n$$\n\\frac{d}{dt} \\mathbf{\\hat{u}}_k = (J - k^2 D) \\mathbf{\\hat{u}}_k = M(k^2) \\mathbf{\\hat{u}}_k\n$$\n其中 $D = \\text{diag}(D_u, D_v)$ 并且 $M(k^2)$ 是波数为 $k$ 的模的稳定性矩阵。\n\n图灵不稳定性需要满足两个条件：\n1.  在没有扩散（$k=0$）的情况下，均匀稳态是稳定的。这要求 $J$ 的特征值具有负实部，对于一个 $2 \\times 2$ 系统，这意味着 $\\text{tr}(J)  0$ 和 $\\det(J)  0$。\n2.  对于某个空间模 $k0$，扩散使系统失稳。如果 $M(k^2)$ 的至少一个特征值获得正实部，就会发生这种情况。对于静态（图灵）不稳定性，这种情况发生在对于某个 $k^2  0$ 有 $\\det(M(k^2))  0$ 时。\n\n让我们验证这些条件。\n对于条件1：\n$\\text{tr}(J) = (B-1) - A^2 = 1.799568 - 1 - 1^2 = -0.200432$。由于 $\\text{tr}(J)  0$，此条件满足。\n$\\det(J) = (B-1)(-A^2) - (A^2)(-B) = -A^2B + A^2 + A^2B = A^2 = 1^2 = 1$。由于 $\\det(J)0$，此条件满足。\n均匀稳态是稳定的。\n\n对于条件2，我们考察完整稳定性矩阵 $M(k^2)$ 的行列式：\n$$\n\\det(M(k^2)) = \\det(J - k^2 D) = (B-1-D_u k^2)(-A^2-D_v k^2) - (A^2)(-B)\n$$\n$$\n\\det(M(k^2)) = D_u D_v (k^2)^2 + (A^2 D_u - (B-1)D_v) k^2 + A^2\n$$\n为了产生不稳定性，对于某个 $k^20$，$\\det(M(k^2))$ 必须变为负值。由于 $\\det(M(0)) = A^2  0$ 且二次项 $D_u D_v (k^2)^2$ 为正，抛物线（作为 $k^2$ 的函数）低于零的唯一方法是 $k^2$ 的线性项系数为负。\n不稳定性条件：$A^2 D_u - (B-1)D_v  0$，或 $(B-1)D_v  A^2 D_u$。\n让我们代入给定值：\n$(B-1)D_v = (1.799568 - 1)(1.0 \\times 10^{-4}) = 0.799568 \\times 10^{-4} = 7.99568 \\times 10^{-5}$。\n$A^2 D_u = (1.0)^2 (1.0 \\times 10^{-6}) = 1.0 \\times 10^{-6}$。\n确实，$7.99568 \\times 10^{-5}  1.0 \\times 10^{-6}$，因此条件满足。系统允许出现图灵不稳定性。\n\n最快增长波数，此处记为 $k_c$，对应于行列式函数 $\\det(M(k^2))$ 的最小值。我们通过对 $k^2$ 求导并令结果为零来找到它：\n$$\n\\frac{d}{d(k^2)} \\det(M(k^2)) = 2 D_u D_v k^2 + A^2 D_u - (B-1)D_v = 0\n$$\n$$\nk_c^2 = \\frac{(B-1)D_v - A^2 D_u}{2 D_u D_v}\n$$\n代入数值：\n分子：$(B-1)D_v - A^2 D_u = 7.99568 \\times 10^{-5} - 1.0 \\times 10^{-6} = 7.89568 \\times 10^{-5}\\ \\text{cm}^2\\text{s}^{-2}$。\n分母：$2 D_u D_v = 2 (1.0 \\times 10^{-6}) (1.0 \\times 10^{-4}) = 2.0 \\times 10^{-10}\\ \\text{cm}^4\\text{s}^{-2}$。\n$$\nk_c^2 = \\frac{7.89568 \\times 10^{-5}}{2.0 \\times 10^{-10}} = 394784\\ \\text{cm}^{-2}\n$$\n系统仅支持由边界条件定义的离散波数 $k_{mn}$，其中 $k_{mn}^2 = k_x^2 + k_y^2 = (\\frac{m\\pi}{L})^2 + (\\frac{n\\pi}{L})^2 = \\frac{\\pi^2}{L^2}(m^2+n^2)$。当 $L=1.000000\\ \\text{cm}$ 时，这变为 $k_{mn}^2 = \\pi^2(m^2+n^2)$。不稳定模将是其 $k_{mn}^2$ 最接近 $k_c^2$ 的那个模。我们必须找到整数 $(m,n)$ 使得 $\\pi^2(m^2+n^2) \\approx 394784$。\n$$\nm^2 + n^2 \\approx \\frac{394784}{\\pi^2} \\approx \\frac{394784}{9.8696044} \\approx 39999.98\n$$\n最接近这个值的 $m^2+n^2$ 的整数值显然是 $40000$。这个值可以写成两个平方数之和，例如，$m=200, n=0$（代表条纹）或 $m=120, n=160$（代表混合模式）。任何这样的选择都确定了一个允许的模。我们选择模 $(m, n) = (200, 0)$。\n\n问题要求计算相应的波数大小 $k_{mn}$。对于选定的模 $(200,0)$：\n$$\nk_{200,0} = \\sqrt{\\frac{\\pi^2}{L^2}(200^2+0^2)} = \\frac{200\\pi}{L}\n$$\n当 $L=1.0\\ \\text{cm}$ 时，波数大小为 $k_{200,0} = 200\\pi\\ \\text{cm}^{-1}$。\n我们被要求提供一个四舍五入到四位有效数字的数值：\n$$\nk_{200,0} = 200 \\times \\pi \\approx 200 \\times 3.14159265... \\approx 628.31853\\ \\text{cm}^{-1}\n$$\n四舍五入到四位有效数字得到 $628.3$。", "answer": "$$\\boxed{628.3}$$", "id": "2675355"}, {"introduction": "化学动力学和扩散系数满足图灵条件是图样形成的必要前提，但这并非全部。系统的物理尺寸同样扮演着决定性角色，它决定了理论上可能出现的图样是否能在现实中显现[@problem_id:2675362]。本练习将让你通过计算图样涌现所需的最小系统尺寸，来深入理解系统的几何边界如何通过离散化允许的波数来筛选和限制空间模式。这项实践将抽象的稳定性理论与可观测的物理约束紧密联系起来，揭示了系统尺寸对自组织现象的根本性影响。", "problem": "考虑一个定义在长度为 $L$ 的一维区域上的双物种反应-扩散(RD)系统，其在 $x=0$ 和 $x=L$ 处具有齐次Neumann(零通量)边界条件：\n$$\n\\frac{\\partial u}{\\partial t} = f(u,v) + D_u \\frac{\\partial^2 u}{\\partial x^2}, \n\\qquad \n\\frac{\\partial v}{\\partial t} = g(u,v) + D_v \\frac{\\partial^2 v}{\\partial x^2}.\n$$\n假设存在一个空间均匀的稳态 $(u^{\\ast},v^{\\ast})$，并将此稳态下的反应动力学的雅可比矩阵记为\n$$\nJ \\equiv \\begin{pmatrix} a  b \\\\ c  d \\end{pmatrix}\n\\quad \\text{with} \\quad\na=1,\\; b=2,\\; c=-3,\\; d=-2,\n$$\n以及扩散系数\n$$\nD_u = 1, \\qquad D_v = 100,\n$$\n均以无量纲单位表示。无扩散时的动力学是线性稳定的，即 $a+d0$ 且 $ad-bc0$。\n\n从关于 $(u^{\\ast},v^{\\ast})$ 的线性化以及将变量分离为与齐次Neumann边界条件一致的拉普拉斯算子的空间本征模开始，确定出现任何Turing图案所需的最小区域长度 $L_{\\min}$，即至少有一个容许的离散波数 $k$ 位于从色散关系得到的具有正增长率的波数带内。你可以使用以下结论：对于 $[0,L]$ 上的齐次Neumann边界条件，容许的空间波数为 $k_n = n\\pi/L$，其中整数 $n \\geq 1$。\n\n对给定参数，明确计算 $L_{\\min}$。将你的最终结果表示为一个无量纲长度单位的实数，并将答案四舍五入到四位有效数字。", "solution": "该问题要求确定一维反应-扩散系统中出现Turing不稳定性所需的最小区域长度 $L_{\\min}$。\n\n该系统由以下方程组给出：\n$$\n\\frac{\\partial u}{\\partial t} = f(u,v) + D_u \\frac{\\partial^2 u}{\\partial x^2}\n$$\n$$\n\\frac{\\partial v}{\\partial t} = g(u,v) + D_v \\frac{\\partial^2 v}{\\partial x^2}\n$$\n定义在区域 $x \\in [0, L]$上，具有齐次Neumann边界条件。\n\n首先，我们围绕空间均匀稳态 $(u^{\\ast}, v^{\\ast})$ 进行线性稳定性分析。设扰动为 $u(x,t) = u^{\\ast} + \\delta u(x,t)$ 和 $v(x,t) = v^{\\ast} + \\delta v(x,t)$。扰动向量 $\\mathbf{w} = (\\delta u, \\delta v)^T$ 的线性化系统为：\n$$\n\\frac{\\partial \\mathbf{w}}{\\partial t} = J \\mathbf{w} + D \\frac{\\partial^2 \\mathbf{w}}{\\partial x^2}\n$$\n其中 $J$ 是在稳态处求值的反应动力学雅可比矩阵，$D$ 是扩散系数的对角矩阵：\n$$\nJ = \\begin{pmatrix} a  b \\\\ c  d \\end{pmatrix}, \\qquad D = \\begin{pmatrix} D_u  0 \\\\ 0  D_v \\end{pmatrix}\n$$\n我们使用变量分离法求解。在 $[0, L]$ 上具有齐次Neumann边界条件的拉普拉斯算子 $\\frac{\\partial^2}{\\partial x^2}$ 的空间本征函数是 $\\cos(k_n x)$，对应的特征值为 $-k_n^2$，其中离散波数为 $k_n = \\frac{n\\pi}{L}$，整数 $n=0, 1, 2, \\dots$。我们关心的是空间非均匀图案，因此考虑 $n \\geq 1$。\n\n一个一般扰动可以表示为傅里叶级数：\n$$\n\\mathbf{w}(x,t) = \\sum_{n=0}^{\\infty} \\mathbf{w}_n(t) \\cos(k_n x)\n$$\n将单一模式 $\\mathbf{w}(x,t) = \\mathbf{w}_k e^{\\lambda t} \\cos(kx)$ 代入线性化系统，得到每个波数 $k$ 的增长率 $\\lambda$ 的特征值问题：\n$$\n\\lambda \\mathbf{w}_k = (J - k^2 D) \\mathbf{w}_k\n$$\n因此，增长率 $\\lambda$ 是矩阵 $M_k = J - k^2 D$ 的一个特征值。\n$$\nM_k = \\begin{pmatrix} a - k^2 D_u  b \\\\ c  d - k^2 D_v \\end{pmatrix}\n$$\n特征值 $\\lambda$ 由特征方程 $\\det(M_k - \\lambda I) = 0$ 确定，即：\n$$\n\\lambda^2 - \\text{tr}(M_k) \\lambda + \\det(M_k) = 0\n$$\n其中\n$$\n\\text{tr}(M_k) = a + d - k^2(D_u + D_v)\n$$\n$$\n\\det(M_k) = (a - k^2 D_u)(d - k^2 D_v) - bc = D_u D_v (k^2)^2 - (aD_v + dD_u)k^2 + (ad-bc)\n$$\n当一个对均匀扰动($k=0$)稳定的系统，对空间变化的扰动($k > 0$)变得不稳定时，就会出现Turing不稳定性。\n在 $k=0$ 处稳定的条件是 $\\text{tr}(M_0)  0$ 和 $\\det(M_0)  0$。\n$$\n\\text{tr}(M_0) = a+d  0\n$$\n$$\n\\det(M_0) = ad-bc  0\n$$\n问题陈述断言这些条件已满足，我们可以用给定参数进行验证：$a+d = 1-2 = -1  0$ 且 $ad-bc = (1)(-2) - (2)(-3) = 4  0$。\n\n为了在 $k0$ 处出现不稳定性，至少一个特征值 $\\lambda$ 必须具有正实部。特征方程的解为 $\\lambda_{\\pm} = \\frac{1}{2} (\\text{tr}(M_k) \\pm \\sqrt{\\text{tr}(M_k)^2 - 4\\det(M_k)})$。\n由于 $a+d  0$ 且 $D_u, D_v  0$，所以对任何 $k$ 都有 $\\text{tr}(M_k) = (a+d) - k^2(D_u+D_v)$ 恒为负。由于 $\\lambda_+ + \\lambda_- = \\text{tr}(M_k)  0$，两个特征值不可能都为正。如果发生不稳定性，则必定是一个特征值变为正，而另一个保持为负。这要求 $\\lambda_+$ 为实数且为正，这又要求特征值的乘积 $\\det(M_k)$ 为负。\n因此，在波数 $k$ 处不稳定的条件是 $\\det(M_k)  0$。\n\n令 $q = k^2$。函数 $\\det(M_k)$ 是一个关于 $q$ 的二次函数：\n$$\nh(q) = (D_u D_v) q^2 - (aD_v + dD_u) q + (ad-bc)\n$$\n不稳定性要求对于某个 $q  0$ 有 $h(q)  0$。因为 $D_u D_v  0$，$h(q)$ 是一个开口向上的抛物线。在 $q=0$ 处，$h(0) = ad-bc  0$。要使 $h(q)$ 变为负值，其最小值必须为负，并且最小值必须在 $q0$ 处取得。抛物线的最小值在 $q_{min} = \\frac{aD_v + dD_u}{2D_u D_v}$ 处。这要求 $aD_v + dD_u  0$。最小值必须为负，这意味着抛物线有两个正实根 $q_-$ 和 $q_+$。不稳定波数平方的区间是 $(q_-, q_+)$。\n\n使用给定值：$a=1, b=2, c=-3, d=-2, D_u=1, D_v=100$。\n二次函数 $h(q)$ 的系数是：\n$D_u D_v = 1 \\times 100 = 100$\n$aD_v + dD_u = (1)(100) + (-2)(1) = 98$\n$ad-bc = 4$\n所以，$h(q) = 100q^2 - 98q + 4$。条件 $aD_v + dD_u = 98  0$ 得到满足。\n$h(q)=0$ 的根由求根公式给出：\n$$\nq_{\\pm} = \\frac{98 \\pm \\sqrt{(-98)^2 - 4(100)(4)}}{2(100)} = \\frac{98 \\pm \\sqrt{9604 - 1600}}{200} = \\frac{98 \\pm \\sqrt{8004}}{200}\n$$\n$k^2$ 的不稳定带是 $(q_-, q_+)$。如果至少有一个容许的离散波数 $k_n = n\\pi/L$ (对于 $n \\ge 1$) 落在不稳定的波数范围内，Turing图案就可能出现。这意味着对于某个整数 $n \\ge 1$：\n$$\nq_-  k_n^2  q_+ \\implies q_-  \\left(\\frac{n\\pi}{L}\\right)^2  q_+\n$$\n这个不等式可以改写为：\n$$\n\\frac{(n\\pi)^2}{q_+}  L^2  \\frac{(n\\pi)^2}{q_-}\n$$\n对于给定的模式 $n$，存在一个区域长度 $L$ 的范围，使该模式不稳定。*任何*不稳定性可能出现的最小长度 $L$ 是通过考虑所有可能模式 $n \\ge 1$ 的下界的最小值（下确界）来找到的：\n$$\nL_{\\min} = \\inf \\left\\{ \\bigcup_{n=1}^{\\infty} \\left( \\frac{n\\pi}{\\sqrt{q_+}}, \\frac{n\\pi}{\\sqrt{q_-}} \\right) \\right\\} = \\min_{n \\ge 1} \\left( \\frac{n\\pi}{\\sqrt{q_+}} \\right)\n$$\n这个最小值在 $n=1$ 时取得，因此我们有：\n$$\nL_{\\min} = \\frac{\\pi}{\\sqrt{q_+}}\n$$\n我们现在计算 $L_{\\min}$ 的数值。首先，我们求出 $q_+$：\n$$\nq_+ = \\frac{98 + \\sqrt{8004}}{200}\n$$\n现在我们计算 $L_{\\min}$：\n$$\nL_{\\min} = \\frac{\\pi}{\\sqrt{\\frac{98 + \\sqrt{8004}}{200}}} = \\pi \\sqrt{\\frac{200}{98 + \\sqrt{8004}}}\n$$\n使用数值：$\\sqrt{8004} \\approx 89.465075$。\n$$\nq_+ \\approx \\frac{98 + 89.465075}{200} = \\frac{187.465075}{200} \\approx 0.937325375\n$$\n$$\nL_{\\min} \\approx \\frac{\\pi}{\\sqrt{0.937325375}} \\approx \\frac{3.14159265}{0.96815566} \\approx 3.244900\n$$\n将结果四舍五入到四位有效数字，得到 $3.245$。", "answer": "$$\\boxed{3.245}$$", "id": "2675362"}, {"introduction": "线性稳定性分析能告诉我们哪些图样具备“生长潜力”，但无法预测它们经过非线性竞争后最终形成的复杂结构。为了真正见证斑点和条纹的诞生，我们必须借助计算机模拟[@problem_id:2675298]。这个实践任务是编写一个程序来模拟反应-扩散方程的完整动态过程，并用它来探索一个核心问题：在完全相同的参数下，系统为何有时选择条纹，有时又选择斑点？这项编码实践将带你从线性理论跨越到非线性图样选择的广阔世界。", "problem": "要求您编写一个完整、可运行的程序，该程序模拟随机初始扰动如何在双物种反应扩散系统中催生不同的空间构图，并在各向同性噪声下，量化所选构图为条纹状而非点状的经验概率。该设定纯属数学性质，使用无量纲变量；不涉及物理单位。\n\n从一个边长为 $L$ 的方形周期性区域上的双物种反应扩散方程开始：\n$$\n\\frac{\\partial u}{\\partial t} = D_u \\nabla^2 u + f(u,v), \\quad\n\\frac{\\partial v}{\\partial t} = D_v \\nabla^2 v + g(u,v),\n$$\n其中 $u=u(x,y,t)$ 和 $v=v(x,y,t)$ 分别是激活剂和抑制剂的浓度，$D_u$ 和 $D_v$ 是扩散系数，$(f,g)$ 是反应动力学。使用 Schnakenberg 动力学模型：\n$$\nf(u,v) = a - u + u^2 v, \\qquad g(u,v) = b - u^2 v,\n$$\n其中 $a$ 和 $b$ 是正常数。空间域在两个方向上都是周期性的，并在一个间距为 $\\Delta x = L/N$ 的均匀 $N \\times N$ 网格上进行离散化。\n\n在均匀稳态下初始化每次模拟：\n$$\nu^\\star = a + b, \\qquad v^\\star = \\frac{b}{(a+b)^2},\n$$\n该稳态在 $t=0$ 时，被施加于 $u$ 和 $v$ 的各向同性的、独立同分布的高斯噪声所扰动，该噪声均值为零，标准差为 $\\varepsilon$：\n$$\nu(x,y,0) = u^\\star + \\varepsilon\\, \\eta_u(x,y), \\quad\nv(x,y,0) = v^\\star + \\varepsilon\\, \\eta_v(x,y),\n$$\n其中 $\\eta_u$ 和 $\\eta_v$ 是在每个网格点上服从 $\\mathcal{N}(0,1)$ 分布且没有优选方向的独立高斯随机场。使用对扩散算子数值稳定的时间步进器，例如在傅里叶空间中使用快速傅里叶变换（FFT）的半隐式格式。假设两个方向上均为周期性边界条件。\n\n为了在最终时刻 $T = n_{\\text{steps}}\\,\\Delta t$ 对构图进行分类，需要分析 $u(x,y,T)$ 的功率谱。令 $\\mathcal{F}$ 表示傅里叶变换（FT），并定义功率谱密度：\n$$\nS(k_x,k_y) = \\left|\\mathcal{F}\\{u(\\cdot,\\cdot,T) - \\overline{u(T)}\\}(k_x,k_y)\\right|^2,\n$$\n其中 $\\overline{u(T)}$ 是 $u$ 在时刻 $T$ 的空间平均值。令 $r = \\sqrt{k_x^2 + k_y^2}$ 为径向波数。通过在环带上对 $S$ 进行径向平均，以确定主导波数 $r^\\star$（为避免平均模式，需排除 $r=0$ 的一个小邻域）。在 $r^\\star$ 周围构建一个窄环带，并通过将角度 $\\theta = \\operatorname{atan2}(k_y,k_x)$ 模 $\\pi$ 分箱到 $[0,\\pi)$ 上的 $B$ 个均匀区间中，来计算功率的角向分布。定义各向异性比：\n$$\nR = \\frac{\\max_{\\theta\\text{ bins}} \\,\\mathcal{S}(\\theta)}{\\frac{1}{B}\\sum_{\\text{bins}} \\mathcal{S}(\\theta)},\n$$\n其中 $\\mathcal{S}(\\theta)$ 是环带内落入相应 $\\theta$ 区间的总谱功率。如果 $R \\ge R_{\\text{thr}}$，则将一次实现分类为条纹状，否则分类为点状。使用 $B = 36$ 和 $R_{\\text{thr}} = 2.2$。\n\n您的程序必须：\n- 实现上文所述的、带有周期性边界条件和各向同性高斯随机初始扰动的 Schnakenberg 系统的半隐式谱方法时间积分。\n- 对于所提供的测试套件中的每一组参数，使用不同的随机数生成器种子运行多次独立试验，并根据各向异性比 $R$ 将每次实现分类为条纹状或点状。\n- 对于每一组参数，返回条纹选择的经验概率，即被分类为条纹的试验所占的比例，表示为四舍五入到三位小数的小数。\n\n使用以下参数值测试套件，每组参数指定为一个元组：\n$$\n(a,b,D_u,D_v,L,N,\\Delta t,n_{\\text{steps}},\\varepsilon,n_{\\text{trials}},\\text{base\\_seed}).\n$$\n\n测试套件：\n1. $(0.10,\\,0.90,\\,1.0,\\,16.0,\\,50.0,\\,64,\\,0.2,\\,800,\\,0.01,\\,6,\\,202311)$\n2. $(0.20,\\,1.30,\\,1.0,\\,40.0,\\,50.0,\\,64,\\,0.2,\\,800,\\,0.01,\\,6,\\,202312)$\n3. $(0.15,\\,0.99,\\,1.0,\\,25.0,\\,50.0,\\,64,\\,0.2,\\,800,\\,0.01,\\,6,\\,202313)$\n\n为保证可复现性，在每种情况下，使用种子 $\\text{base\\_seed}+i$（其中 $i=0,1,\\dots,n_{\\text{trials}}-1$）初始化随机数生成器。对于每次试验，在 $t=0$ 时使用指定的各向同性高斯噪声初始化 $(u,v)$，并演化至 $T = n_{\\text{steps}}\\,\\Delta t$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含三个测试用例的条纹选择概率，形式为包含三个小数的逗号分隔列表，并用方括号括起，顺序与测试套件中的顺序相同，例如 $[0.667,0.333,1.000]$。", "solution": "用户提供了一个在化学动力学和模式形成领域中定义明确的计算问题。该问题在科学上基于反应扩散系统理论，特别是作为研究图灵斑图的典型范例的 Schnakenberg 模型。所有参数、方程、初始条件、边界条件和数值步骤都以清晰、客观和独立完整的方式给出。问题在于模拟该系统，并基于对其傅里叶功率谱的定量分析来对涌现出的空间模式进行分类。\n\n问题的核心是求解以下关于两种化学物质——激活剂 $u(x,y,t)$ 和抑制剂 $v(x,y,t)$——的耦合偏微分方程（PDEs）组：\n$$\n\\frac{\\partial u}{\\partial t} = D_u \\nabla^2 u + f(u,v) \\\\\n\\frac{\\partial v}{\\partial t} = D_v \\nabla^2 v + g(u,v)\n$$\n反应动力学由 Schnakenberg 模型给出：\n$$\nf(u,v) = a - u + u^2 v \\\\\ng(u,v) = b - u^2 v\n$$\n模拟在二维方形区域 $[0, L] \\times [0, L]$ 上进行，该区域具有周期性边界条件，并在一个均匀的 $N \\times N$ 网格上进行离散化。\n\n数值解采用半隐式谱方法实现，该方法也称为隐式-显式（IMEX）傅里叶伪谱法。这种方法非常适合求解反应扩散方程。为了数值稳定性，在傅里叶空间中对刚性的线性扩散项 ($\\nabla^2$) 进行隐式处理；而为了计算效率，在实空间中对非线性的反应项 ($f, g$) 进行显式处理。\n\n将偏微分方程变换到傅里叶空间，其中 $\\hat{u} = \\mathcal{F}\\{u\\}$ 且 $\\mathcal{F}$ 是二维快速傅里叶变换（FFT），拉普拉斯算子 $\\nabla^2$ 变为乘以 $-(k_x^2 + k_y^2)$，其中 $k_x$ 和 $k_y$ 是波数。令 $k^2 = k_x^2 + k_y^2$。傅里叶空间中的偏微分方程为：\n$$\n\\frac{d\\hat{u}}{dt} = -D_u k^2 \\hat{u} + \\mathcal{F}\\{f(u,v)\\} \\\\\n\\frac{d\\hat{v}}{dt} = -D_v k^2 \\hat{v} + \\mathcal{F}\\{g(u,v)\\}\n$$\n应用一阶半隐式时间步进格式（与 ETD1 方法相关），时间步长为 $\\Delta t$，我们在时间 $t_{n+1}$（隐式）处理扩散项，在时间 $t_n$（显式）处理反应项。这给出了从时间步 $n$ 到 $n+1$ 傅里叶系数的更新规则：\n$$\n\\hat{u}_{n+1} = \\frac{\\hat{u}_n + \\Delta t \\cdot \\mathcal{F}\\{f(u_n, v_n)\\}}{1 + \\Delta t D_u k^2} \\\\\n\\hat{v}_{n+1} = \\frac{\\hat{v}_n + \\Delta t \\cdot \\mathcal{F}\\{g(u_n, v_n)\\}}{1 + \\Delta t D_v k^2}\n$$\n单次模拟试验的算法流程如下：\n1.  在系统的均匀稳态 $(u^\\star, v^\\star)$ 处进行初始化，其中 $u^\\star = a+b$ 且 $v^\\star = b/(a+b)^2$。\n2.  通过生成两个独立的 $N \\times N$ 的 $\\mathcal{N}(0,1)$ 高斯噪声数组，并将其乘以 $\\varepsilon$ 后加到 $u^\\star$ 和 $v^\\star$ 上，来添加一个微小振幅的各向同性扰动。\n3.  迭代 $n_{\\text{steps}}$ 次：\n    a.  在实空间中计算非线性反应项 $f(u,v)$ 和 $g(u,v)$。\n    b.  使用 FFT 将当前场 $(u,v)$ 和反应项转换到傅里叶空间。\n    c.  应用半隐式更新规则获得新的傅里叶系数 $(\\hat{u}_{n+1}, \\hat{v}_{n+1})$。\n    d.  使用逆 FFT 变换回实空间，得到下一步的状态 $(u_{n+1}, v_{n+1})$。\n\n在最后一个时间步之后，对激活剂浓度 $u(x,y,T)$ 中产生的模式进行分类。这是通过分析其二维功率谱 $S(k_x, k_y) = |\\mathcal{F}\\{u - \\bar{u}\\}|^2$ 来完成的。\n1.  对谱进行径向平均，以找到主导波数 $r^\\star$，该波数对应于径向功率分布的峰值。这确定了模式的特征长度尺度。\n2.  在傅里叶空间中，围绕这个主导波数 $r^\\star$ 定义一个环带。\n3.  在此环带内，计算谱功率相对于角度 $\\theta = \\operatorname{atan2}(k_y, k_x)$ 的分布。由于实数场 $u$ 的功率谱关于原点对称（$S(\\mathbf{k}) = S(-\\mathbf{k})$），因此角度被视为模 $\\pi$。角度范围 $[0, \\pi)$ 被划分为 $B=36$ 个区间。\n4.  各向异性比 $R$ 计算为任何一个角向区间中的最大功率与所有区间的平均功率之比。\n5.  如果 $R \\ge R_{\\text{thr}} = 2.2$，则模式的各向异性程度高，这是条纹的特征（功率集中在两个相反的方向），并被分类为‘条纹状’。否则，它被分类为‘点状’（例如，六边形模式，其在 6 个模式间的功率分布更具各向同性）。\n\n对于测试套件中的每一组参数，整个过程重复 $n_{\\text{trials}}$ 次，每次使用不同的随机种子，以确保统计抽样的有效性。然后，条纹选择的经验概率就是导致条纹状分类的试验所占的比例。为得到最终输出，该概率被四舍五入到三位小数。", "answer": "```python\nimport numpy as np\n\ndef classify_pattern(u, L, N, B=36, R_thr=2.2):\n    \"\"\"\n    Classifies a spatial pattern as stripe-like or spot-like based on the anisotropy\n    of its Fourier power spectrum.\n    \"\"\"\n    # 1. Compute power spectrum of the centered field\n    u_prime = u - u.mean()\n    u_hat = np.fft.fft2(u_prime)\n    S = np.abs(u_hat)**2\n\n    # 2. Find dominant wavenumber r* from radial power spectrum\n    # Create integer radial indices for efficient binning\n    idx_x = np.fft.fftfreq(N) * N\n    id_y, id_x = np.meshgrid(idx_x, idx_x)  # Note meshgrid indexing\n    R_indices = np.round(np.sqrt(id_x**2 + id_y**2)).astype(int)\n\n    # Radially average the power spectrum using bincount\n    S_radial = np.bincount(R_indices.ravel(), weights=S.ravel())\n    counts_radial = np.bincount(R_indices.ravel())\n    \n    S_radial_avg = np.zeros_like(S_radial)\n    # Avoid division by zero for bins with no modes\n    non_zero_counts = counts_radial > 0\n    S_radial_avg[non_zero_counts] = S_radial[non_zero_counts] / counts_radial[non_zero_counts]\n    \n    # Find peak, excluding DC component (index 0)\n    if len(S_radial_avg) > 1:\n        peak_r_index = np.argmax(S_radial_avg[1:]) + 1\n    else:\n        return False  # Trivial pattern, classify as spot-like\n\n    # 3. Analyze angular distribution in the dominant wavenumber band\n    band_mask = (R_indices == peak_r_index)\n    \n    # Handle cases with no significant pattern power\n    total_power_in_band = S[band_mask].sum()\n    if total_power_in_band  1e-9:\n        return False\n\n    # Get angles and powers for modes in the band\n    qx_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    qy_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    Qy, Qx = np.meshgrid(qy_vals, qx_vals) # Note meshgrid indexing\n    \n    angles = np.arctan2(Qy[band_mask], Qx[band_mask])\n    # Map angles to [0, pi) to identify antipodal points, as S(k) = S(-k)\n    angles[angles  0] += np.pi\n    powers = S[band_mask]\n\n    # Compute histogram of power vs. angle\n    angular_power, _ = np.histogram(angles, bins=B, range=(0, np.pi), weights=powers)\n    \n    # 4. Calculate anisotropy ratio and classify\n    mean_angular_power = angular_power.mean()\n    if mean_angular_power  1e-9:\n        return False  # Isotropic noise, classify as spot-like\n\n    max_angular_power = angular_power.max()\n    R = max_angular_power / mean_angular_power\n    \n    return R >= R_thr\n\ndef run_single_trial(a, b, Du, Dv, L, N, dt, n_steps, eps):\n    \"\"\"\n    Runs a single simulation of the Schnakenberg system and classifies the final pattern.\n    \"\"\"\n    # Steady state\n    u_star = a + b\n    v_star = b / (a + b)**2\n\n    # Initial conditions with isotropic Gaussian noise\n    eta_u = np.random.randn(N, N)\n    eta_v = np.random.randn(N, N)\n    u = u_star + eps * eta_u\n    v = v_star + eps * eta_v\n\n    # Wavenumber grid setup for the spectral method\n    kx_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    ky_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    Kx, Ky = np.meshgrid(kx_vals, kx_vals) # Use kx_vals for both for square grid\n    K2 = Kx**2 + Ky**2\n\n    # Pre-compute denominators for the semi-implicit scheme\n    denom_u = 1 + dt * Du * K2\n    denom_v = 1 + dt * Dv * K2\n\n    # Fourier transforms of initial state\n    u_hat = np.fft.fft2(u)\n    v_hat = np.fft.fft2(v)\n\n    # Time integration loop\n    for _ in range(n_steps):\n        # Calculate nonlinear reaction terms in real space\n        u_real = np.fft.ifft2(u_hat).real\n        v_real = np.fft.ifft2(v_hat).real\n        u2v = u_real * u_real * v_real\n        f_uv = a - u_real + u2v\n        g_uv = b - u2v\n        \n        # FFT of reaction terms\n        f_hat = np.fft.fft2(f_uv)\n        g_hat = np.fft.fft2(g_uv)\n\n        # Update state in Fourier space using the semi-implicit rule\n        u_hat = (u_hat + dt * f_hat) / denom_u\n        v_hat = (v_hat + dt * g_hat) / denom_v\n        \n    # Get final state in real space\n    u_final = np.fft.ifft2(u_hat).real\n    \n    # Classify the resulting pattern\n    return classify_pattern(u_final, L, N)\n\ndef run_simulation_suite(a, b, Du, Dv, L, N, dt, n_steps, eps, n_trials, base_seed):\n    \"\"\"\n    Runs multiple trials for a given parameter set and computes the probability of stripe formation.\n    \"\"\"\n    stripe_count = 0\n    for i in range(n_trials):\n        np.random.seed(base_seed + i)\n        if run_single_trial(a, b, Du, Dv, L, N, dt, n_steps, eps):\n            stripe_count += 1\n    \n    return stripe_count / n_trials\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    test_cases = [\n        (0.10, 0.90, 1.0, 16.0, 50.0, 64, 0.2, 800, 0.01, 6, 202311),\n        (0.20, 1.30, 1.0, 40.0, 50.0, 64, 0.2, 800, 0.01, 6, 202312),\n        (0.15, 0.99, 1.0, 25.0, 50.0, 64, 0.2, 800, 0.01, 6, 202313),\n    ]\n\n    results = []\n    for case in test_cases:\n        probability = run_simulation_suite(*case)\n        results.append(f\"{probability:.3f}\")\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2675298"}]}