{"hands_on_practices": [{"introduction": "环状聚合物分子动力学 (RPMD) 的理论基石源于路径积分，它将单个量子粒子映射为一个经典的环状聚合物。这项实践将引导你亲手完成这一核心映射过程，你会从第一性原理出发，为量子谐振子推导其 $P$ 珠环状聚合物的配分函数 [@problem_id:2670909]。通过这个练习，你不仅能加深对路径积分形式论的理解，还能通过解析推导验证当珠子数 $P \\to \\infty$ 时，该近似将精确地收敛到量子力学的真实结果，从而体会RPMD方法的理论严谨性。", "problem": "在基于环状聚合物分子动力学（Ring Polymer Molecular Dynamics, RPMD）的量子过渡态理论中，一个核心要素是量子正则配分函数的路径积分表示，该表示将一个量子体系映射为一个经典的环状聚合物。考虑一个一维量子谐振子，其质量为 $m$，角频率为 $\\omega$，哈密顿算符为 $\\hat{H} = \\hat{p}^{2}/(2m) + \\tfrac{1}{2} m \\omega^{2} \\hat{x}^{2}$。令 $\\beta = 1/(k_{B} T)$, $\\hbar$ 表示约化普朗克常数。\n\n从玻尔兹曼算符的 Trotter 分解和环状聚合物同构出发，构建正则配分函数 $Z(\\beta)$ 的 $P$-珠离散化路径积分表达式，并通过将环状聚合物二次型对角化为简正模来精确计算高斯构型积分。仅使用关于高斯积分和离散傅里叶变换的基本定义和经过充分检验的结论。你的推导必须得到一个用 $\\beta$、$\\hbar$、$\\omega$ 和 $P$ 表示的 $P$-珠近似 $Z_{P}(\\beta,\\omega)$的闭合形式表达式。\n\n然后，仅使用初等函数的性质和 $\\arcsinh$ 的小自变量行为，取极限 $P \\to \\infty$ 来验证 $Z_{P}(\\beta,\\omega)$ 收敛于谐振子的精确量子配分函数。不要先验地假设收敛性，而要去证明它。\n\n清楚地陈述你所援引的任何数学乘积恒等式，并确保你的推理是自洽的。将你的最终答案表达为 $Z_{P}(\\beta,\\omega)$ 的单一闭合形式解析表达式。不需要进行数值计算，也不需要四舍五入。最终答案不得包含单位。", "solution": "该问题要求推导一维量子谐振子正则配分函数的 $P$-珠离散化路径积分表示，并验证在珠子数量无限多的极限下，其收敛于精确的量子结果。\n\n首先，有必要对问题陈述进行严格验证。\n\n已知条件：\n1.  体系：一维量子谐振子。\n2.  质量：$m$。\n3.  角频率：$\\omega$。\n4.  哈密顿算符：$\\hat{H} = \\frac{\\hat{p}^{2}}{2m} + \\frac{1}{2} m \\omega^{2} \\hat{x}^{2}$。\n5.  逆温度：$\\beta = 1/(k_{B} T)$。\n6.  约化普朗克常数：$\\hbar$。\n7.  珠子数量（离散化切片数）：$P$。\n8.  任务1：通过对角化环状聚合物二次型推导 $P$-珠配分函数 $Z_{P}(\\beta,\\omega)$。\n9.  任务2：取极限 $P \\to \\infty$ 以证明其收敛于精确的量子配分函数。\n\n验证：\n-   **科学基础：** 该问题是量子统计力学中的一个标准的、基本的推导，基于 Feynman 发展的路径积分形式。它是环状聚合物分子动力学（RPMD）等方法的基石。该问题在科学上是合理的。\n-   **良定性：** 该问题提供了推导 $Z_P$ 唯一的闭合形式表达式所需的所有物理参数（$m$、$\\omega$）和数学常数（$\\beta$、$\\hbar$、$P$）。过程被明确指定。\n-   **客观性：** 语言正式，没有主观论断。\n\n该问题被认为是有效的，因为它是理论化学和物理学中的一个标准练习，不存在任何使其无效的缺陷。我们着手进行解答。\n\n正则配分函数定义为玻尔兹曼算符的迹：\n$$Z = \\text{Tr}\\left(e^{-\\beta \\hat{H}}\\right)$$\n我们使用 Trotter 分解将玻尔兹曼算符分解为 $P$ 个相同的短时传播子，其中 $\\beta_P = \\beta/P$：\n$$e^{-\\beta \\hat{H}} = \\left(e^{-\\beta_P \\hat{H}}\\right)^P$$\n在迹表达式中插入 $P$ 个位置基中的单位分解 $\\int dx |x\\rangle\\langle x| = \\hat{1}$，得到：\n$$Z = \\int dx_1 \\int dx_2 \\ldots \\int dx_P \\, \\langle x_1 | e^{-\\beta_P \\hat{H}} | x_2 \\rangle \\langle x_2 | e^{-\\beta_P \\hat{H}} | x_3 \\rangle \\ldots \\langle x_P | e^{-\\beta_P \\hat{H}} | x_1 \\rangle$$\n循环条件 $x_{P+1} = x_1$ 建立了环状聚合物同构。对于小的 $\\beta_P$（高温或大的 $P$），传播子的矩阵元可以用对称 Trotter 分解 $\\hat{H} = \\hat{T} + \\hat{V}$ 来近似：\n$$\\langle x_i | e^{-\\beta_P (\\hat{T}+\\hat{V})} | x_{i+1} \\rangle \\approx \\langle x_i | e^{-\\frac{\\beta_P}{2}\\hat{V}} e^{-\\beta_P \\hat{T}} e^{-\\frac{\\beta_P}{2}\\hat{V}} | x_{i+1} \\rangle = e^{-\\frac{\\beta_P}{2}V(x_i)} \\langle x_i | e^{-\\beta_P \\hat{T}} | x_{i+1} \\rangle e^{-\\frac{\\beta_P}{2}V(x_{i+1})}$$\n动能算符的矩阵元是通过计算动量空间中的高斯积分得到的标准结果：\n$$\\langle x_i | e^{-\\beta_P \\hat{p}^2/(2m)} | x_{i+1} \\rangle = \\left(\\frac{m}{2\\pi\\hbar^2\\beta_P}\\right)^{1/2} \\exp\\left[-\\frac{m}{2\\hbar^2\\beta_P}(x_i-x_{i+1})^2\\right]$$\n将此代入迹表达式，我们得到 $P$-珠离散化配分函数 $Z_P$：\n$$Z_P = \\left(\\frac{m P}{2\\pi\\hbar^2\\beta}\\right)^{P/2} \\int d^P\\mathbf{x} \\exp\\left(-\\sum_{i=1}^P \\left[\\frac{m P}{2\\hbar^2\\beta}(x_i-x_{i+1})^2 + \\frac{\\beta}{P}V(x_i)\\right]\\right)$$\n其中 $d^P\\mathbf{x} = dx_1 \\ldots dx_P$。对于谐振子势 $V(x) = \\frac{1}{2}m\\omega^2x^2$，指数的宗量是珠子坐标 $\\{x_i\\}$ 的二次型：\n$$-\\sum_{i=1}^P \\left[\\frac{m P}{2\\hbar^2\\beta}(x_i-x_{i+1})^2 + \\frac{\\beta m\\omega^2}{2P}x_i^2\\right] = -\\frac{1}{2} \\mathbf{x}^T \\mathbf{A} \\mathbf{x}$$\n矩阵 $\\mathbf{A}$ 的元素为：\n$$A_{ij} = \\left(\\frac{2mP}{\\hbar^2\\beta} + \\frac{\\beta m\\omega^2}{P}\\right)\\delta_{ij} - \\frac{mP}{\\hbar^2\\beta}(\\delta_{i,j+1}+\\delta_{i,j-1})$$\n其中下标按模 $P$ 计算。该积分为标准的多维高斯积分：\n$$\\int d^P\\mathbf{x} \\exp\\left(-\\frac{1}{2} \\mathbf{x}^T \\mathbf{A} \\mathbf{x}\\right) = \\frac{(2\\pi)^{P/2}}{\\sqrt{\\det(\\mathbf{A})}}$$\n将此代回 $Z_P$ 的表达式中，得到：\n$$Z_P = \\left(\\frac{m P}{2\\pi\\hbar^2\\beta}\\right)^{P/2} \\frac{(2\\pi)^{P/2}}{\\sqrt{\\det(\\mathbf{A})}} = \\left(\\frac{m P}{\\hbar^2\\beta}\\right)^{P/2} \\frac{1}{\\sqrt{\\det(\\mathbf{A})}}$$\n矩阵 $\\mathbf{A}$ 是一个循环矩阵。其特征值 $\\tilde{\\lambda}_k$ 可以通过离散傅里叶变换求得：\n$$\\tilde{\\lambda}_k = \\left(\\frac{2mP}{\\hbar^2\\beta} + \\frac{\\beta m\\omega^2}{P}\\right) - \\frac{mP}{\\hbar^2\\beta}(e^{i2\\pi k/P} + e^{-i2\\pi k/P}) = \\frac{2mP}{\\hbar^2\\beta}(1-\\cos(2\\pi k/P)) + \\frac{\\beta m\\omega^2}{P}$$\n使用恒等式 $1-\\cos(2\\theta) = 2\\sin^2(\\theta)$：\n$$\\tilde{\\lambda}_k = \\frac{4mP}{\\hbar^2\\beta}\\sin^2\\left(\\frac{\\pi k}{P}\\right) + \\frac{\\beta m\\omega^2}{P}$$\n对于 $k = 0, 1, \\ldots, P-1$。行列式是特征值的乘积，$\\det(\\mathbf{A}) = \\prod_{k=0}^{P-1} \\tilde{\\lambda}_k$。\n我们求出 $Z_P^{-2}$ 的表达式：\n$$Z_P^{-2} = \\left(\\frac{\\hbar^2\\beta}{mP}\\right)^P \\det(\\mathbf{A}) = \\left(\\frac{\\hbar^2\\beta}{mP}\\right)^P \\prod_{k=0}^{P-1} \\left[ \\frac{4mP}{\\hbar^2\\beta}\\sin^2\\left(\\frac{\\pi k}{P}\\right) + \\frac{\\beta m\\omega^2}{P} \\right]$$\n从乘积中提出公因子：\n$$Z_P^{-2} = \\left(\\frac{\\hbar^2\\beta}{mP}\\right)^P \\left(\\frac{4mP}{\\hbar^2\\beta}\\right)^P \\prod_{k=0}^{P-1} \\left[ \\sin^2\\left(\\frac{\\pi k}{P}\\right) + \\frac{\\beta^2\\hbar^2\\omega^2}{4P^2} \\right]$$\n$$Z_P^{-2} = 4^P \\prod_{k=0}^{P-1} \\left[ \\sin^2\\left(\\frac{\\pi k}{P}\\right) + \\left(\\frac{\\beta\\hbar\\omega}{2P}\\right)^2 \\right]$$\n为了计算该乘积，我们使用以下恒等式：\n$$\\prod_{k=1}^{n-1} \\left(\\sin^2\\left(\\frac{k \\pi}{n}\\right) + \\sinh^2(y)\\right) = \\frac{\\sinh^2(ny)}{4^{n-1} \\sinh^2(y)}$$\n令 $C = \\frac{\\beta\\hbar\\omega}{2P} = \\sinh(y)$，所以 $y = \\arcsinh(\\frac{\\beta\\hbar\\omega}{2P})$。该乘积可以分解为 $k=0$ 项和其余项：\n$$\\prod_{k=0}^{P-1} [\\ldots] = \\left(\\sin^2(0) + C^2\\right) \\prod_{k=1}^{P-1} \\left(\\sin^2\\left(\\frac{\\pi k}{P}\\right) + C^2\\right) = C^2 \\frac{\\sinh^2(Py)}{4^{P-1}C^2} = \\frac{\\sinh^2(Py)}{4^{P-1}}$$\n将此代回 $Z_P^{-2}$ 的表达式：\n$$Z_P^{-2} = 4^P \\frac{\\sinh^2(Py)}{4^{P-1}} = 4\\sinh^2(Py)$$\n因此，$P$-珠环状聚合物的配分函数为：\n$$Z_P(\\beta, \\omega) = \\frac{1}{2\\sinh(Py)} = \\frac{1}{2\\sinh\\left(P \\arcsinh\\left(\\frac{\\beta\\hbar\\omega}{2P}\\right)\\right)}$$\n这就是所要求的闭合形式表达式。\n\n最后，我们验证在极限 $P \\to \\infty$ 的情况下，此表达式收敛于谐振子的精确量子配分函数 $Z_{QHO} = [2\\sinh(\\beta\\hbar\\omega/2)]^{-1}$。我们考察 sinh 函数的宗量。令 $x = \\frac{\\beta\\hbar\\omega}{2P}$。当 $P \\to \\infty$ 时，$x \\to 0$。我们使用反双曲正弦函数的小自变量行为，$\\arcsinh(x) \\approx x$（对于 $x \\ll 1$）。更正式地，$\\lim_{x\\to 0} \\frac{\\arcsinh(x)}{x} = 1$。\n$$\\lim_{P\\to\\infty} P \\arcsinh\\left(\\frac{\\beta\\hbar\\omega}{2P}\\right) = \\lim_{x\\to 0} \\frac{\\beta\\hbar\\omega}{2x} \\arcsinh(x) = \\frac{\\beta\\hbar\\omega}{2} \\lim_{x\\to 0} \\frac{\\arcsinh(x)}{x} = \\frac{\\beta\\hbar\\omega}{2}$$\n由于双曲正弦函数是连续的，我们可以将极限移到函数内部：\n$$\\lim_{P\\to\\infty} Z_P(\\beta, \\omega) = \\frac{1}{2\\sinh\\left(\\lim_{P\\to\\infty} P \\arcsinh\\left(\\frac{\\beta\\hbar\\omega}{2P}\\right)\\right)} = \\frac{1}{2\\sinh\\left(\\frac{\\beta\\hbar\\omega}{2}\\right)}$$\n这证实了在珠子数量趋于无穷多的极限下，离散化路径积分配分函数收敛于精确的量子力学结果。推导完成且自洽。", "answer": "$$\n\\boxed{\\frac{1}{2\\sinh\\left(P \\arcsinh\\left(\\frac{\\beta\\hbar\\omega}{2P}\\right)\\right)}}\n$$", "id": "2670909"}, {"introduction": "计算出一个收敛的速率常数后，我们必须回答一个关键问题：我们选择的分割面（即过渡态的定义）是否合适？这项实践向你介绍提交者分析（committor analysis），这是验证反应坐标和分割面质量的黄金标准方法 [@problem_id:2670891]。你将通过处理模拟轨迹的统计数据，计算一系列量化指标来评估分割面的“理想”程度，这个练习能让你学会如何诊断模拟设置中的潜在问题，并科学地评估结果的可靠性。", "problem": "考虑一个具有反应物盆 $A$ 和产物盆 $B$ 的单基元反应，该反应使用环形聚合物分子动力学（RPMD）进行研究。对于一个由质心坐标定义的设定分界面，可以通过 committor 分析来评估其质量。对于分界面上每个独立采样的初始构型，在总能量固定的情况下，发射一组短时间的 RPMD 发射轨迹，并统计有多少轨迹在到达盆 $A$ 之前先到达盆 $B$。对于构型 $i$，设 $N_i$ 为发射轨迹的总数，$N_i^{B}$ 为其中先到达盆 $B$ 的轨迹数量。该构型的 committor 即为概率 $p_i \\in [0,1]$，定义为 $p_i = N_i^{B}/N_i$。\n\n根据概率论的第一性原理，一个没有动力学偏倚的理想分界面对于所有构型 $i$ 都应有 $p_i = 1/2$，这反映了在没有额外偏倚的情况下，轨迹移动到任一盆的可能性是相等的。在 RPMD 动力学下，$p_i$ 的分布越偏离 $1/2$ 且越宽，表明预期的穿过分界面的再穿越效应就越强。\n\n您的任务是编写一个完整的程序。给定来自一个设定分界面上多个构型 $i$ 的 committor 采样数据（以整数对 $(N_i, N_i^{B})$ 的形式给出）的若干测试用例，该程序需要为每个测试用例计算以下汇总统计量：\n\n- committor 质量指数 $Q$，定义为\n$$\nQ \\equiv 4 \\, \\left\\langle p_i \\, \\left(1 - p_i\\right) \\right\\rangle,\n$$\n其中 $\\langle \\cdot \\rangle$ 表示对构型 $i$ 的简单算术平均。该指数满足 $0 \\le Q \\le 1$，当所有 $i$ 的 $p_i = 1/2$ 时 $Q=1$，并且随着 $p_i$ 的分布变得有偏或更分散时，Q 的值会减小。\n\n- 再穿越分数 $R$，定义为\n$$\nR \\equiv 1 - Q.\n$$\n较大的 $R$ 值表示设定的分界面有更强的预期再穿越水平。\n\n- 中间区间分数 $F_{\\mathrm{mid}}$，定义为满足 $p_i \\in [0.4, 0.6]$（含边界）的构型 $i$ 所占的比例。该分数用于量化接近理想值 $1/2$ 的样本比例。\n\n- 距离 $1/2$ 的平均绝对偏差，\n$$\n\\mathrm{MAD} \\equiv \\left\\langle \\left| p_i - \\tfrac{1}{2} \\right| \\right\\rangle.\n$$\n\n所有量均为无量纲，必须报告为四舍五入到六位小数的小数。\n\n测试套件。请精确使用以下四个测试用例，每个用例由一列 $(N_i, N_i^{B})$ 对指定：\n\n- 用例 $1$（一个接近最优的分界面，许多 $p_i$ 值接近 $1/2$）：\n  $(100,49)$, $(100,51)$, $(100,53)$, $(100,47)$, $(80,41)$, $(120,62)$, $(60,30)$, $(200,102)$。\n\n- 用例 $2$（一个质量较差的分界面，其 committor 分布在 $0$ 和 $1$ 附近呈现强烈的双峰形态）：\n  $(100,5)$, $(100,95)$, $(80,4)$, $(80,76)$, $(60,1)$, $(60,59)$, $(200,198)$, $(200,2)$。\n\n- 用例 $3$（一个质量混合的界面，具有中等程度的分布宽度和较小的样本变异性）：\n  $(10,6)$, $(10,4)$, $(20,11)$, $(20,9)$, $(50,30)$, $(50,21)$, $(5,3)$, $(5,2)$。\n\n- 用例 $4$（一个数据量最少的边缘情况）：\n  $(2,1)$。\n\n程序要求：\n\n- 您必须为每个用例计算四元组 $(Q, R, F_{\\mathrm{mid}}, \\mathrm{MAD})$，使用上述定义，其中每个 $(N_i, N_i^{B})$ 对的 $p_i = N_i^{B}/N_i$。\n- 所有的算术平均都是对一个用例中所有构型的简单平均（每个构型的贡献相等，与 $N_i$ 无关）。\n- 报告每个用例的这四个量，均为无量纲小数，并四舍五入到六位小数。\n- 最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。该列表按顺序连接了四个用例的四元组。即，输出必须是\n$$\n\\left[ Q_1, R_1, F_{\\mathrm{mid},1}, \\mathrm{MAD}_1, Q_2, R_2, F_{\\mathrm{mid},2}, \\mathrm{MAD}_2, Q_3, R_3, F_{\\mathrm{mid},3}, \\mathrm{MAD}_3, Q_4, R_4, F_{\\mathrm{mid},4}, \\mathrm{MAD}_4 \\right],\n$$\n其中每个条目都按要求四舍五入到六位小数。\n\n输出不涉及任何物理单位。如果出现角度，单位应为弧度，但本任务中没有角度。请确保您的程序是自包含的，并且不尝试从文件或网络读取输入。", "solution": "提交进行分析的问题陈述被认为是有效的。它在科学上基于化学动力学和过渡态理论的原理，特别是在环形聚合物分子动力学模拟中使用 committor 分析。所有统计量的定义在数学上都是精确且无歧义的。所提供的数据是自包含且一致的，该任务是一个适定的计算问题。因此，我们将着手提供一个完整的解决方案。\n\n目标是为几个 committor 概率数据集计算四个统计指标。每个数据集（或测试用例）由从分界面采样的多个构型 $i$ 组成，并为我们提供了整数对 $(N_i, N_i^{B})$。此处，$N_i$ 是从构型 $i$ 发射的发射轨迹的总数，$N_i^{B}$ 是其中投入到产物盆 $B$ 的轨迹数量。\n\n对于每个构型 $i$，其基本量是 committor 概率 $p_i$，通过以下比率计算得出：\n$$\np_i = \\frac{N_i^B}{N_i}\n$$\n一个没有再穿越伪影的理想分界面，其特征在于所有构型的 $p_i = \\frac{1}{2}$。所提供的指标量化了采样所得 $p_i$ 分布与此理想情况的偏差。设 $M$ 为给定测试用例中的构型数量。平均算子 $\\langle \\cdot \\rangle$ 表示对这 $M$ 个构型的简单算术平均。\n\n每个测试用例的算法步骤如下：\n\n1.  **计算 Committor 概率**：给定 $M$ 个对 $\\{(N_1, N_1^{B}), (N_2, N_2^{B}), \\dots, (N_M, N_M^{B})\\}$ 的列表，计算相应的 committor 概率列表 $\\{p_1, p_2, \\dots, p_M\\}$。\n\n2.  **计算 Committor 质量指数 ($Q$)**：该指数定义为：\n    $$\n    Q \\equiv 4 \\left\\langle p_i (1 - p_i) \\right\\rangle = 4 \\left( \\frac{1}{M} \\sum_{i=1}^{M} p_i (1 - p_i) \\right)\n    $$\n    项 $p_i(1 - p_i)$ 是成功概率为 $p_i$ 的伯努利试验的统计方差的一种度量。当 $p_i = \\frac{1}{2}$ 时，该项达到最大值 $\\frac{1}{4}$。因此，$Q$ 被归一化，对于所有 $p_i = \\frac{1}{2}$ 的理想界面，其值为 $1$；而当 $p_i$ 值向 $0$ 或 $1$ 极化时，它趋近于 $0$。\n\n3.  **计算再穿越分数 ($R$)**：这是 $Q$ 的直接补充：\n    $$\n    R \\equiv 1 - Q\n    $$\n    较高的 $R$ 值表示分界面质量较差，预期有显著的再穿越。\n\n4.  **计算中间区间分数 ($F_{\\mathrm{mid}}$)**：该指标量化了其 committor 值接近理想值 $\\frac{1}{2}$ 的构型比例。它定义为满足 $p_i$ 位于闭区间 $[0.4, 0.6]$ 内的构型 $i$ 所占的比例。\n    $$\n    F_{\\mathrm{mid}} \\equiv \\frac{1}{M} \\sum_{i=1}^{M} \\mathbb{I}(0.4 \\le p_i \\le 0.6)\n    $$\n    其中 $\\mathbb{I}(\\cdot)$ 是指示函数，如果条件为真，其值为 $1$，否则为 $0$。\n\n5.  **计算平均绝对偏差 ($\\mathrm{MAD}$)**：这提供了一个与理想 committor 值 $\\frac{1}{2}$ 的平均偏差的直接度量。\n    $$\n    \\mathrm{MAD} \\equiv \\left\\langle \\left| p_i - \\frac{1}{2} \\right| \\right\\rangle = \\frac{1}{M} \\sum_{i=1}^{M} \\left| p_i - \\frac{1}{2} \\right|\n    $$\n\n为作说明，我们将此过程应用于测试用例4，它包含单个构型对 $(N_1, N_1^{B}) = (2, 1)$。\n-   首先，我们计算 $p_1 = \\frac{1}{2} = 0.5$。\n-   由于只有一个构型，即 $M=1$，任何量的平均值就是该量对于这单一点的值。\n-   $Q = 4 \\times p_1(1-p_1) = 4 \\times 0.5 \\times (1-0.5) = 4 \\times 0.25 = 1.0$。\n-   $R = 1 - Q = 1.0 - 1.0 = 0.0$。\n-   $F_{\\mathrm{mid}}$：由于 $p_1=0.5$ 位于区间 $[0.4, 0.6]$ 内，该分数为 $\\frac{1}{1} = 1.0$。\n-   $\\mathrm{MAD} = |p_1 - 0.5| = |0.5 - 0.5| = 0.0$。\n\n因此，用例4的结果四元组（在四舍五入前）为 $(1.0, 0.0, 1.0, 0.0)$。该实现将使用浮点运算和 `numpy` 库进行高效的基于数组的计算，从而将此逻辑系统地应用于所有测试用例。所有最终数值结果都必须四舍五入到六位小数。代码将处理四个测试用例中的每一个，计算统计四元组 $(Q, R, F_{\\mathrm{mid}}, \\mathrm{MAD})$，并按指定要求将结果整理成一个单一的格式化字符串。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes summary statistics for committor analysis data from RPMD simulations.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (nearly optimal)\n        [\n            (100, 49), (100, 51), (100, 53), (100, 47), (80, 41),\n            (120, 62), (60, 30), (200, 102)\n        ],\n        # Case 2 (poor, bimodal)\n        [\n            (100, 5), (100, 95), (80, 4), (80, 76), (60, 1),\n            (60, 59), (200, 198), (200, 2)\n        ],\n        # Case 3 (mixed quality, small-sample)\n        [\n            (10, 6), (10, 4), (20, 11), (20, 9), (50, 30),\n            (50, 21), (5, 3), (5, 2)\n        ],\n        # Case 4 (minimal edge case)\n        [\n            (2, 1)\n        ]\n    ]\n\n    def calculate_statistics(case_data):\n        \"\"\"\n        Calculates Q, R, F_mid, and MAD for a single test case.\n\n        Args:\n            case_data: A list of tuples (N_i, N_i^B).\n\n        Returns:\n            A tuple of four floats (Q, R, F_mid, MAD).\n        \"\"\"\n        if not case_data:\n            return 0.0, 1.0, 0.0, 0.5 # A reasonable default for an empty case\n\n        # Unpack pairs into numpy arrays for vectorized operations\n        n_i_array = np.array([d[0] for d in case_data], dtype=float)\n        n_i_b_array = np.array([d[1] for d in case_data], dtype=float)\n\n        # Compute committor probabilities p_i\n        # Handle division by zero, though problem data guarantees N_i > 0\n        p_i = np.divide(n_i_b_array, n_i_array, out=np.zeros_like(n_i_array), where=n_i_array!=0)\n\n        # Calculate the committor quality index Q\n        # Q = 4 * <p_i * (1 - p_i)>\n        q = 4.0 * np.mean(p_i * (1.0 - p_i))\n\n        # Calculate the recrossing score R\n        # R = 1 - Q\n        r = 1.0 - q\n\n        # Calculate the mid-interval fraction F_mid\n        # Fraction of p_i in [0.4, 0.6]\n        f_mid = np.mean((p_i >= 0.4) & (p_i <= 0.6))\n\n        # Calculate the mean absolute deviation from 1/2\n        # MAD = <|p_i - 0.5|>\n        mad = np.mean(np.abs(p_i - 0.5))\n\n        return q, r, f_mid, mad\n\n    all_results = []\n    for case in test_cases:\n        stats = calculate_statistics(case)\n        all_results.extend(stats)\n\n    # Format all results to six decimal places and join into the final string\n    formatted_results = [f\"{res:.6f}\" for res in all_results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2670891"}]}