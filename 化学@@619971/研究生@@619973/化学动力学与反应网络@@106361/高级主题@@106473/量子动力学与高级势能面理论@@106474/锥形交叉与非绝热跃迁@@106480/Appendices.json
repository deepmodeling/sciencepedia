{"hands_on_practices": [{"introduction": "本练习深入探讨了锥形交叉点附近的局域几何结构及其对动力学的影响。通过使用定义分支平面的基本矢量——梯度差矢量 $\\mathbf{g}$ 和非绝热耦合矢量 $\\mathbf{h}$，你将具体计算基态与激发态核运动之间的关系，即 Duschinsky 旋转。这项实践将抽象的几何概念与波包在经历非绝热跃迁时的动态倾向直接联系起来，揭示了电子态势能面的拓扑结构如何决定化学反应的路径。[@problem_id:2635977]", "problem": "考虑一个在质量加权笛卡尔坐标下的线性振动耦合框架中描述的双态锥形交叉。在锥形交叉处的局域分支平面由梯度差矢量 $\\mathbf{g}$ 和导数（非绝热）耦合矢量 $\\mathbf{h}$ 张成，这两个矢量被取为标准正交的：$|\\mathbf{g}| = 1$， $|\\mathbf{h}| = 1$ 且 $\\mathbf{g}\\cdot\\mathbf{h} = 0$。在这个二维子空间内，每个电子态都有一对定义其局域调谐轴和耦合轴的标准正交简正模。\n\n在基态极小点处，分支平面内的两个归一化简正模方向由下式给出：\n$$\n\\mathbf{Q}_{g1} = \\frac{\\sqrt{3}}{2}\\,\\mathbf{g} + \\frac{1}{2}\\,\\mathbf{h}, \n\\qquad\n\\mathbf{Q}_{g2} = -\\frac{1}{2}\\,\\mathbf{g} + \\frac{\\sqrt{3}}{2}\\,\\mathbf{h}.\n$$\n在激发态极小点处，分支平面内的两个归一化简正模方向为：\n$$\n\\mathbf{Q}_{e1} = \\frac{1}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{2}{\\sqrt{5}}\\,\\mathbf{h},\n\\qquad\n\\mathbf{Q}_{e2} = -\\frac{2}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{1}{\\sqrt{5}}\\,\\mathbf{h}.\n$$\n\n仅使用分支平面和Duschinsky效应的基本定义，完成以下任务：\n- 构建Duschinsky旋转矩阵 $\\mathbf{J}$，该矩阵通过 $\\mathbf{Q}_{e} = \\mathbf{J}\\,\\mathbf{Q}_{g} + \\mathbf{K}$ 将分支平面中的基态简正模坐标 $(Q_{g1}, Q_{g2})$ 映射到激发态简正模坐标 $(Q_{e1}, Q_{e2})$，并限制在分支平面内且忽略该平面内的位移矢量 $\\mathbf{K}$。\n- 从 $\\mathbf{J}$ 中提取主Duschinsky旋转角 $\\theta$（取主值，满足 $0 \\le \\theta \\le \\pi$）。使用弧度制。\n- 在锥形交叉附近的线性振动耦合描述中，透热耦合（diabatic coupling）沿 $\\mathbf{h}$ 坐标是线性的。在每个态的分支平面参考系中，将第二个简正模轴解释为该态的耦合轴，通过无量纲的倾向因子来量化一个从基态出发、初始核速度沿 $\\mathbf{Q}_{g1}$ 的波包所受到的瞬时非绝热驱动。\n$$\nF \\equiv \\left|\\mathbf{Q}_{e2}\\cdot \\mathbf{Q}_{g1}\\right|^{2}.\n$$\n\n报告 $F$ 的最终值，作为一个无量纲数，并四舍五入到四位有效数字。", "solution": "该问题要求计算一个与锥形交叉处的非绝热跃迁相关的无量纲倾向因子 $F$。此计算需要构建Duschinsky旋转矩阵 $\\mathbf{J}$，该矩阵将二维分支平面内的基态简正模坐标映射到激发态简正模坐标。\n\n分支平面由两个标准正交矢量定义，即梯度差矢量 $\\mathbf{g}$ 和非绝热耦合矢量 $\\mathbf{h}$，满足 $|\\mathbf{g}|=1$，$|\\mathbf{h}|=1$ 和 $\\mathbf{g} \\cdot \\mathbf{h}=0$。它们构成了这个平面的一组基。\n\n该平面中的基态简正模由下式给出：\n$$\n\\mathbf{Q}_{g1} = \\frac{\\sqrt{3}}{2}\\,\\mathbf{g} + \\frac{1}{2}\\,\\mathbf{h}\n$$\n$$\n\\mathbf{Q}_{g2} = -\\frac{1}{2}\\,\\mathbf{g} + \\frac{\\sqrt{3}}{2}\\,\\mathbf{h}\n$$\n所提供的矢量构成一个标准正交基，因为 $|\\mathbf{Q}_{g1}|^2 = (\\frac{\\sqrt{3}}{2})^2 + (\\frac{1}{2})^2 = \\frac{3}{4} + \\frac{1}{4} = 1$，$|\\mathbf{Q}_{g2}|^2 = (-\\frac{1}{2})^2 + (\\frac{\\sqrt{3}}{2})^2 = \\frac{1}{4} + \\frac{3}{4} = 1$，且 $\\mathbf{Q}_{g1} \\cdot \\mathbf{Q}_{g2} = (\\frac{\\sqrt{3}}{2})(-\\frac{1}{2}) + (\\frac{1}{2})(\\frac{\\sqrt{3}}{2}) = 0$。\n\n该平面中的激发态简正模为：\n$$\n\\mathbf{Q}_{e1} = \\frac{1}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{2}{\\sqrt{5}}\\,\\mathbf{h}\n$$\n$$\n\\mathbf{Q}_{e2} = -\\frac{2}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{1}{\\sqrt{5}}\\,\\mathbf{h}\n$$\n这些矢量也构成一个标准正交基，因为 $|\\mathbf{Q}_{e1}|^2 = (\\frac{1}{\\sqrt{5}})^2 + (\\frac{2}{\\sqrt{5}})^2 = \\frac{1}{5} + \\frac{4}{5} = 1$，$|\\mathbf{Q}_{e2}|^2 = (-\\frac{2}{\\sqrt{5}})^2 + (\\frac{1}{\\sqrt{5}})^2 = \\frac{4}{5} + \\frac{1}{5} = 1$，且 $\\mathbf{Q}_{e1} \\cdot \\mathbf{Q}_{e2} = (\\frac{1}{\\sqrt{5}})(-\\frac{2}{\\sqrt{5}}) + (\\frac{2}{\\sqrt{5}})(\\frac{1}{\\sqrt{5}}) = 0$。\n\n忽略位移矢量 $\\mathbf{K}$ 的Duschinsky变换为 $\\mathbf{Q}_{e} = \\mathbf{J}\\,\\mathbf{Q}_{g}$。Duschinsky矩阵 $\\mathbf{J}$ 的元素由两个态的简正模矢量之间的点积给出：$J_{ij} = \\mathbf{Q}_{ei} \\cdot \\mathbf{Q}_{gj}$。我们为分支平面模构建 $2 \\times 2$ 的矩阵 $\\mathbf{J}$。\n\n$\\mathbf{J}$ 的元素计算如下：\n$J_{11} = \\mathbf{Q}_{e1} \\cdot \\mathbf{Q}_{g1} = \\left(\\frac{1}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{2}{\\sqrt{5}}\\,\\mathbf{h}\\right) \\cdot \\left(\\frac{\\sqrt{3}}{2}\\,\\mathbf{g} + \\frac{1}{2}\\,\\mathbf{h}\\right) = \\frac{\\sqrt{3}}{2\\sqrt{5}} + \\frac{2}{2\\sqrt{5}} = \\frac{2+\\sqrt{3}}{2\\sqrt{5}}$.\n$J_{12} = \\mathbf{Q}_{e1} \\cdot \\mathbf{Q}_{g2} = \\left(\\frac{1}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{2}{\\sqrt{5}}\\,\\mathbf{h}\\right) \\cdot \\left(-\\frac{1}{2}\\,\\mathbf{g} + \\frac{\\sqrt{3}}{2}\\,\\mathbf{h}\\right) = -\\frac{1}{2\\sqrt{5}} + \\frac{2\\sqrt{3}}{2\\sqrt{5}} = \\frac{2\\sqrt{3}-1}{2\\sqrt{5}}$.\n$J_{21} = \\mathbf{Q}_{e2} \\cdot \\mathbf{Q}_{g1} = \\left(-\\frac{2}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{1}{\\sqrt{5}}\\,\\mathbf{h}\\right) \\cdot \\left(\\frac{\\sqrt{3}}{2}\\,\\mathbf{g} + \\frac{1}{2}\\,\\mathbf{h}\\right) = -\\frac{2\\sqrt{3}}{2\\sqrt{5}} + \\frac{1}{2\\sqrt{5}} = \\frac{1-2\\sqrt{3}}{2\\sqrt{5}}$.\n$J_{22} = \\mathbf{Q}_{e2} \\cdot \\mathbf{Q}_{g2} = \\left(-\\frac{2}{\\sqrt{5}}\\,\\mathbf{g} + \\frac{1}{\\sqrt{5}}\\,\\mathbf{h}\\right) \\cdot \\left(-\\frac{1}{2}\\,\\mathbf{g} + \\frac{\\sqrt{3}}{2}\\,\\mathbf{h}\\right) = \\frac{2}{2\\sqrt{5}} + \\frac{\\sqrt{3}}{2\\sqrt{5}} = \\frac{2+\\sqrt{3}}{2\\sqrt{5}}$.\n\n因此，Duschinsky矩阵为：\n$$\n\\mathbf{J} = \\begin{pmatrix} J_{11} & J_{12} \\\\ J_{21} & J_{22} \\end{pmatrix} = \\frac{1}{2\\sqrt{5}} \\begin{pmatrix} 2+\\sqrt{3} & 2\\sqrt{3}-1 \\\\ 1-2\\sqrt{3} & 2+\\sqrt{3} \\end{pmatrix}\n$$\n这是一个行列式为 $\\det(\\mathbf{J})=1$ 的正交矩阵，代表一个纯旋转。题目要求Duschinsky旋转角 $\\theta$ 的范围在 $[0, \\pi]$ 内，其值可从对角元素求出，即 $\\cos(\\theta) = J_{11}$。所以，$\\theta = \\arccos\\left(\\frac{2+\\sqrt{3}}{2\\sqrt{5}}\\right)$。\n\n主要目标是计算倾向因子 $F$，其定义为：\n$$\nF \\equiv \\left|\\mathbf{Q}_{e2}\\cdot \\mathbf{Q}_{g1}\\right|^{2}\n$$\n这个量恰好是矩阵元素 $J_{21}$ 大小的平方。\n$$\nF = (J_{21})^2 = \\left(\\frac{1-2\\sqrt{3}}{2\\sqrt{5}}\\right)^2\n$$\n我们进行计算：\n$$\nF = \\frac{(1-2\\sqrt{3})^2}{(2\\sqrt{5})^2} = \\frac{1^2 - 2(1)(2\\sqrt{3}) + (2\\sqrt{3})^2}{4 \\cdot 5} = \\frac{1 - 4\\sqrt{3} + 12}{20} = \\frac{13 - 4\\sqrt{3}}{20}\n$$\n这是 $F$ 的精确解析表达式。为提供数值，我们代入 $\\sqrt{3} \\approx 1.7320508$：\n$$\nF = \\frac{13 - 4(1.7320508)}{20} = \\frac{13 - 6.9282032}{20} = \\frac{6.0717968}{20} \\approx 0.30358984\n$$\n根据要求将此结果四舍五入到四位有效数字，我们得到：\n$$\nF \\approx 0.3036\n$$\n这个因子 $F$ 量化了沿基态模 $\\mathbf{Q}_{g1}$ 的运动在激发态耦合模 $\\mathbf{Q}_{e2}$ 上的投影，提供了非绝热跃迁初始驱动力的一个度量。", "answer": "$$\n\\boxed{0.3036}\n$$", "id": "2635977"}, {"introduction": "在任何光化学研究中，仅仅了解锥形交叉点的几何特性是不够的，首先需要有能力在多维势能面上定位这些关键区域。本练习将指导你实现一个约束优化算法，以寻找最小能量锥形交叉点 (MECI)。你将应用计算化学中的核心技术——拉格朗日乘子法，来解决一个模型体系的优化问题，并学习如何根据交叉点处的梯度信息对其拓扑结构（“斜坡型”或“尖峰型”）进行分类。[@problem_id:2635932]", "problem": "给定一个描述$N$维核坐标空间中锥形交叉附近两个绝热势能面的局域线性振动耦合模型。这两个绝热势能的数学模型为\n$$\nE_{\\pm}(\\mathbf{x}) \\;=\\; E_0 \\;+\\; \\tfrac{1}{2}\\,\\mathbf{x}^{\\mathsf{T}}\\mathbf{A}\\,\\mathbf{x} \\;+\\; \\mathbf{s}_0^{\\mathsf{T}}\\mathbf{x} \\;\\pm\\; \\sqrt{(\\mathbf{g}^{\\mathsf{T}}\\mathbf{x})^2 + (\\mathbf{h}^{\\mathsf{T}}\\mathbf{x})^2},\n$$\n其中，$\\mathbf{x}\\in\\mathbb{R}^N$ 是相对于参考构型的位移向量，$\\mathbf{A}\\in\\mathbb{R}^{N\\times N}$ 是一个对称正定矩阵，描述了平均能量的谐波曲率，$\\mathbf{s}_0\\in\\mathbb{R}^N$ 是一个常数向量，$\\mathbf{g},\\mathbf{h}\\in\\mathbb{R}^N$ 是定义分支平面的两个线性无关向量。分支平面是由向量$\\mathbf{g}$和$\\mathbf{h}$张成的二维子空间，记作 $\\mathcal{B}=\\mathrm{span}\\{\\mathbf{g},\\mathbf{h}\\}$。平均能量为\n$$\nE_{\\mathrm{avg}}(\\mathbf{x}) \\;=\\; \\tfrac{1}{2}\\left(E_{+}(\\mathbf{x})+E_{-}(\\mathbf{x})\\right) \\;=\\; E_0 \\;+\\; \\tfrac{1}{2}\\,\\mathbf{x}^{\\mathsf{T}}\\mathbf{A}\\,\\mathbf{x} \\;+\\; \\mathbf{s}_0^{\\mathsf{T}}\\mathbf{x},\n$$\n其梯度为\n$$\n\\mathbf{s}(\\mathbf{x}) \\;=\\; \\nabla E_{\\mathrm{avg}}(\\mathbf{x}) \\;=\\; \\mathbf{A}\\mathbf{x} + \\mathbf{s}_0.\n$$\n在此局域模型中，锥形交叉接缝是满足以下简并约束条件点的集合：\n$$\n\\mathbf{g}^{\\mathsf{T}}\\mathbf{x} \\;=\\; 0,\\qquad \\mathbf{h}^{\\mathsf{T}}\\mathbf{x} \\;=\\; 0.\n$$\n最小能量锥形交叉（MECI）构型 $\\mathbf{x}^{\\star}$ 在此定义为约束优化问题：在满足 $\\mathbf{g}^{\\mathsf{T}}\\mathbf{x}=0$ 和 $\\mathbf{h}^{\\mathsf{T}}\\mathbf{x}=0$ 的条件下最小化 $E_{\\mathrm{avg}}(\\mathbf{x})$ 的任意解。使用 $\\mathbf{P}_{\\mathcal{B}}$ 表示到分支平面上的正交投影，使用 $\\mathbf{P}_{\\mathcal{B}}^{\\perp}=\\mathbf{I}-\\mathbf{P}_{\\mathcal{B}}$ 表示到其正交补上的正交投影。\n\n你的任务是实现一个分支平面约束的优化算法，该算法能够：\n- 在两个线性简并约束条件下，通过最小化 $E_{\\mathrm{avg}}(\\mathbf{x})$ 来计算 $\\mathbf{x}^{\\star}$。\n- 评估在 MECI 处的平均能量梯度，$\\mathbf{s}^{\\star}=\\mathbf{A}\\mathbf{x}^{\\star}+\\mathbf{s}_0$。\n- 计算平均能量梯度垂直于分支平面的分量 $\\mathbf{s}_{\\perp}^{\\star}=\\mathbf{P}_{\\mathcal{B}}^{\\perp}\\mathbf{s}^{\\star}$，作为在 MECI 处约束满足情况的诊断。\n- 计算平均能量梯度在分支平面内的分量 $\\mathbf{s}_{\\parallel}^{\\star}=\\mathbf{P}_{\\mathcal{B}}\\mathbf{s}^{\\star}$，如果 $\\lVert \\mathbf{s}_{\\parallel}^{\\star}\\rVert_2$ 大于一个阈值，则将 MECI 拓扑分类为“斜坡型”（sloped），否则分类为“尖峰型”（peaked）。\n\n算法要求：\n1. 使用拉格朗日乘子法构建并求解约束二次最小化问题。令 $\\mathbf{C}\\in\\mathbb{R}^{2\\times N}$ 的行分别为 $\\mathbf{g}^{\\mathsf{T}}$ 和 $\\mathbf{h}^{\\mathsf{T}}$。求解 Karush–Kuhn–Tucker 线性系统：\n$$\n\\begin{bmatrix}\n\\mathbf{A} & \\mathbf{C}^{\\mathsf{T}}\\\\\n\\mathbf{C} & \\mathbf{0}\n\\end{bmatrix}\n\\begin{bmatrix}\n\\mathbf{x}^{\\star}\\\\\n\\boldsymbol{\\lambda}^{\\star}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-\\mathbf{s}_0\\\\\n\\mathbf{0}\n\\end{bmatrix}.\n$$\n2. 通过对 $\\{\\mathbf{g},\\mathbf{h}\\}$ 进行标准正交化来构造 $\\mathbf{P}_{\\mathcal{B}}$ （例如，通过 Gram–Schmidt 过程或薄 QR 分解）。如果 $\\mathbf{Q}\\in\\mathbb{R}^{N\\times 2}$ 具有张成 $\\mathcal{B}$ 的标准正交列，则有 $\\mathbf{P}_{\\mathcal{B}}=\\mathbf{Q}\\mathbf{Q}^{\\mathsf{T}}$ 以及 $\\mathbf{P}_{\\mathcal{B}}^{\\perp}=\\mathbf{I}-\\mathbf{Q}\\mathbf{Q}^{\\mathsf{T}}$。\n3. 计算 $\\mathbf{s}^{\\star}$、$\\mathbf{s}_{\\perp}^{\\star}$ 和 $\\mathbf{s}_{\\parallel}^{\\star}$。\n4. 使用绝对分类阈值 $\\tau=10^{-10}$。如果 $\\lVert \\mathbf{s}_{\\parallel}^{\\star}\\rVert_2>\\tau$，则分类为“斜坡型”（sloped），否则分类为“尖峰型”（peaked）。输出时，将“斜坡型”编码为整数 $1$，将“尖峰型”编码为整数 $0$。\n\n测试套件：\n请为以下情况实现你的程序。每种情况都指定了 $N$、$\\mathbf{A}$、$\\mathbf{g}$、$\\mathbf{h}$ 和 $\\mathbf{s}_0$。\n\n- 情况 1（基准尖峰型）：\n  - $N=3$。\n  - $\\mathbf{A}=\\mathrm{diag}(1,1,1)$。\n  - $\\mathbf{g}=(1,0,0)^{\\mathsf{T}}$，$\\mathbf{h}=(0,1,0)^{\\mathsf{T}}$。\n  - $\\mathbf{s}_0=(0,0,0)^{\\mathsf{T}}$。\n\n- 情况 2（具有单位曲率的通用斜坡型）：\n  - $N=3$。\n  - $\\mathbf{A}=\\mathrm{diag}(1,1,1)$。\n  - $\\mathbf{g}=(1,1,0)^{\\mathsf{T}}$，$\\mathbf{h}=(0,1,1)^{\\mathsf{T}}$。\n  - $\\mathbf{s}_0=(0.5,-0.4,0.1)^{\\mathsf{T}}$。\n\n- 情况 3（具有各向异性曲率的尖峰型）：\n  - $N=4$。\n  - $\\mathbf{A}=\\mathrm{diag}(2,1.5,1,0.5)$。\n  - $\\mathbf{g}=(1,0,1,0)^{\\mathsf{T}}$，$\\mathbf{h}=(0,1,0,1)^{\\mathsf{T}}$。\n  - $\\mathbf{s}_0=(0,0,0,0)^{\\mathsf{T}}$。\n\n- 情况 4（具有耦合曲率的通用斜坡型）：\n  - $N=4$。\n  - $\\mathbf{A}=\\begin{bmatrix}\n2 & 0.2 & 0 & 0\\\\\n0.2 & 1.5 & 0.1 & 0\\\\\n0 & 0.1 & 1.2 & 0.05\\\\\n0 & 0 & 0.05 & 0.8\n\\end{bmatrix}$。\n  - $\\mathbf{g}=(1,1,0,0)^{\\mathsf{T}}$，$\\mathbf{h}=(0,1,1,0)^{\\mathsf{T}}$。\n  - $\\mathbf{s}_0=(0.1,-0.2,0.3,-0.05)^{\\mathsf{T}}$。\n\n答案规格：\n- 你的程序必须按照给定顺序，使用上述算法计算每种情况的分类。不涉及物理单位；所有量均为无量纲实数。\n- 你的程序应生成单行输出，其中包含一个用方括号括起来的、逗号分隔的整数列表，列表顺序与情况的顺序完全一致。其中，每个整数 $1$ 代表“斜坡型”，$0$ 代表“尖峰型”。例如，如果你的计算结果与情况相符，那么像 $[0,1,0,1]$ 这样的输出是可以接受的。", "solution": "问题陈述已经过严格审查，并被确定为有效。它在科学上是合理的、适定的、客观的且内部一致的。它阐述了理论化学中的一个标准问题——在线性振动耦合模型内优化锥形交叉构型——并为其求解提供了一个清晰、数学上严谨的算法。因此，我们可以继续。\n\n问题的核心是找到一个最小能量锥形交叉（MECI）构型，记为 $\\mathbf{x}^{\\star} \\in \\mathbb{R}^N$。这是通过在定义了锥形交叉接缝的线性约束条件下，最小化平均势能 $E_{\\mathrm{avg}}(\\mathbf{x})$ 来实现的。该优化问题表述如下：\n$$\n\\begin{aligned}\n& \\underset{\\mathbf{x}}{\\text{minimize}}\n& & E_{\\mathrm{avg}}(\\mathbf{x}) = E_0 + \\mathbf{s}_0^{\\mathsf{T}}\\mathbf{x} + \\tfrac{1}{2}\\mathbf{x}^{\\mathsf{T}}\\mathbf{A}\\mathbf{x} \\\\\n& \\text{subject to}\n& & \\mathbf{g}^{\\mathsf{T}}\\mathbf{x} = 0 \\\\\n& & & \\mathbf{h}^{\\mathsf{T}}\\mathbf{x} = 0\n\\end{aligned}\n$$\n由于 $E_0$ 是一个常数，它不影响最小值的位置，在优化过程中可以忽略。该问题是一个带等式约束的二次规划问题。拉格朗日乘子法是解决此类问题的标准方法。\n\n我们定义拉格朗日函数 $\\mathcal{L}(\\mathbf{x}, \\boldsymbol{\\lambda})$，其中拉格朗日乘子向量为 $\\boldsymbol{\\lambda} = (\\lambda_1, \\lambda_2)^{\\mathsf{T}}$：\n$$\n\\mathcal{L}(\\mathbf{x}, \\boldsymbol{\\lambda}) = E_{\\mathrm{avg}}(\\mathbf{x}) + \\lambda_1 (\\mathbf{g}^{\\mathsf{T}}\\mathbf{x}) + \\lambda_2 (\\mathbf{h}^{\\mathsf{T}}\\mathbf{x})\n$$\n使用约束矩阵 $\\mathbf{C} \\in \\mathbb{R}^{2 \\times N}$（其行为 $\\mathbf{g}^{\\mathsf{T}}$ 和 $\\mathbf{h}^{\\mathsf{T}}$），这可以更紧凑地写成：\n$$\n\\mathcal{L}(\\mathbf{x}, \\boldsymbol{\\lambda}) = E_{\\mathrm{avg}}(\\mathbf{x}) + \\boldsymbol{\\lambda}^{\\mathsf{T}}\\mathbf{C}\\mathbf{x}\n$$\n最小值 $(\\mathbf{x}^{\\star}, \\boldsymbol{\\lambda}^{\\star})$ 的一阶必要条件要求拉格朗日函数关于 $\\mathbf{x}$ 和 $\\boldsymbol{\\lambda}$ 的梯度均为零。\n关于 $\\mathbf{x}$ 的梯度为：\n$$\n\\nabla_{\\mathbf{x}}\\mathcal{L}(\\mathbf{x}^{\\star}, \\boldsymbol{\\lambda}^{\\star}) = \\nabla E_{\\mathrm{avg}}(\\mathbf{x}^{\\star}) + \\mathbf{C}^{\\mathsf{T}}\\boldsymbol{\\lambda}^{\\star} = \\mathbf{A}\\mathbf{x}^{\\star} + \\mathbf{s}_0 + \\mathbf{C}^{\\mathsf{T}}\\boldsymbol{\\lambda}^{\\star} = \\mathbf{0}\n$$\n关于 $\\boldsymbol{\\lambda}$ 的梯度仅恢复了约束条件：\n$$\n\\nabla_{\\boldsymbol{\\lambda}}\\mathcal{L}(\\mathbf{x}^{\\star}, \\boldsymbol{\\lambda}^{\\star}) = \\mathbf{C}\\mathbf{x}^{\\star} = \\mathbf{0}\n$$\n这两个向量方程可以重排为一个单独的分块矩阵线性系统，即 Karush–Kuhn–Tucker (KKT) 系统，这正是问题陈述中给出的形式：\n$$\n\\begin{bmatrix}\n\\mathbf{A} & \\mathbf{C}^{\\mathsf{T}}\\\\\n\\mathbf{C} & \\mathbf{0}\n\\end{bmatrix}\n\\begin{bmatrix}\n\\mathbf{x}^{\\star}\\\\\n\\boldsymbol{\\lambda}^{\\star}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-\\mathbf{s}_0\\\\\n\\mathbf{0}\n\\end{bmatrix}\n$$\n由于给定 $\\mathbf{A}$ 是正定的，且约束向量 $\\mathbf{g}$ 和 $\\mathbf{h}$ 是线性无关的（使得 $\\mathbf{C}$ 满秩），KKT 矩阵是非奇异的，从而保证了 $\\mathbf{x}^{\\star}$ 和 $\\boldsymbol{\\lambda}^{\\star}$ 存在唯一解。\n\n针对每个测试用例解决该问题的算法步骤如下：\n\n1.  **求解 KKT 系统**：使用提供的参数 $\\mathbf{A}$、$\\mathbf{g}$、$\\mathbf{h}$ 和 $\\mathbf{s}_0$ 构造 $(N+2) \\times (N+2)$ 的 KKT 矩阵和 $(N+2) \\times 1$ 的右侧向量。求解此线性系统以获得解向量，并从中提取 MECI 构型 $\\mathbf{x}^{\\star}$（前 $N$ 个分量）。\n\n2.  **计算 MECI 梯度**：评估在 MECI 构型处的平均能量梯度，$\\mathbf{s}^{\\star} = \\mathbf{s}(\\mathbf{x}^{\\star}) = \\mathbf{A}\\mathbf{x}^{\\star} + \\mathbf{s}_0$。根据 KKT 条件 $\\mathbf{A}\\mathbf{x}^{\\star} + \\mathbf{s}_0 = -\\mathbf{C}^{\\mathsf{T}}\\boldsymbol{\\lambda}^{\\star}$，显而易见 $\\mathbf{s}^{\\star}$ 必须位于 $\\mathbf{C}^{\\mathsf{T}}$ 的列空间中，即分支平面 $\\mathcal{B} = \\mathrm{span}\\{\\mathbf{g}, \\mathbf{h}\\}$。\n\n3.  **构造分支平面投影算子**：为了分解梯度，我们需要到分支平面上的正交投影算子 $\\mathbf{P}_{\\mathcal{B}}$。该算子由 $\\mathcal{B}$ 的一个标准正交基构造。我们构建一个大小为 $N \\times 2$ 的矩阵 $\\mathbf{G} = [\\mathbf{g} | \\mathbf{h}]$，并对其进行薄 QR 分解，$\\mathbf{G} = \\mathbf{Q}\\mathbf{R}$，其中 $\\mathbf{Q}$ 是一个 $N \\times 2$ 的矩阵，其标准正交列张成 $\\mathcal{B}$。则投影算子由 $\\mathbf{P}_{\\mathcal{B}} = \\mathbf{Q}\\mathbf{Q}^{\\mathsf{T}}$ 给出。到正交补上的投影算子为 $\\mathbf{P}_{\\mathcal{B}}^{\\perp} = \\mathbf{I} - \\mathbf{P}_{\\mathcal{B}}$。\n\n4.  **分解梯度**：计算梯度 $\\mathbf{s}^{\\star}$ 在分支平面内的分量：$\\mathbf{s}_{\\parallel}^{\\star} = \\mathbf{P}_{\\mathcal{B}}\\mathbf{s}^{\\star}$。如步骤 2 所述，我们预期 $\\mathbf{s}^{\\star}$ 已经位于 $\\mathcal{B}$ 中，因此理论上 $\\mathbf{s}_{\\parallel}^{\\star} = \\mathbf{s}^{\\star}$。垂直于分支平面的分量 $\\mathbf{s}_{\\perp}^{\\star} = \\mathbf{P}_{\\mathcal{B}}^{\\perp}\\mathbf{s}^{\\star}$ 作为数值诊断；其范数应接近于零。\n\n5.  **分类 MECI 拓扑**：MECI 的拓扑根据其在分支平面内的梯度大小进行分类。我们计算欧几里得范数 $L = \\lVert \\mathbf{s}_{\\parallel}^{\\star} \\rVert_2$。如果 $L$ 大于指定的阈值 $\\tau = 10^{-10}$，则 MECI 为“斜坡型”拓扑，编码为整数 $1$。如果 $L \\le \\tau$，则认为梯度在 MECI 处已消失，这对应于“尖峰型”拓扑，编码为整数 $0$。此过程将系统地应用于所有给定的测试用例。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the MECI geometry and classifies its topology for a series of test cases\n    based on a local linear vibronic coupling model.\n    \"\"\"\n    \n    test_cases = [\n        {\n            \"N\": 3,\n            \"A\": np.diag([1.0, 1.0, 1.0]),\n            \"g\": np.array([1.0, 0.0, 0.0]),\n            \"h\": np.array([0.0, 1.0, 0.0]),\n            \"s0\": np.array([0.0, 0.0, 0.0]),\n        },\n        {\n            \"N\": 3,\n            \"A\": np.diag([1.0, 1.0, 1.0]),\n            \"g\": np.array([1.0, 1.0, 0.0]),\n            \"h\": np.array([0.0, 1.0, 1.0]),\n            \"s0\": np.array([0.5, -0.4, 0.1]),\n        },\n        {\n            \"N\": 4,\n            \"A\": np.diag([2.0, 1.5, 1.0, 0.5]),\n            \"g\": np.array([1.0, 0.0, 1.0, 0.0]),\n            \"h\": np.array([0.0, 1.0, 0.0, 1.0]),\n            \"s0\": np.array([0.0, 0.0, 0.0, 0.0]),\n        },\n        {\n            \"N\": 4,\n            \"A\": np.array([\n                [2.0, 0.2, 0.0, 0.0],\n                [0.2, 1.5, 0.1, 0.0],\n                [0.0, 0.1, 1.2, 0.05],\n                [0.0, 0.0, 0.05, 0.8]\n            ]),\n            \"g\": np.array([1.0, 1.0, 0.0, 0.0]),\n            \"h\": np.array([0.0, 1.0, 1.0, 0.0]),\n            \"s0\": np.array([0.1, -0.2, 0.3, -0.05]),\n        },\n    ]\n\n    results = []\n    tau = 1e-10\n\n    for case in test_cases:\n        N = case[\"N\"]\n        A = case[\"A\"]\n        # Ensure vectors are column vectors for consistent matrix algebra\n        g = case[\"g\"].reshape(N, 1)\n        h = case[\"h\"].reshape(N, 1)\n        s0 = case[\"s0\"].reshape(N, 1)\n        \n        # 1. Formulate and solve the KKT linear system.\n        # Constraint matrix C\n        C = np.vstack([g.T, h.T])\n\n        # KKT matrix (block matrix)\n        KKT_matrix = np.block([\n            [A, C.T],\n            [C, np.zeros((2, 2))]\n        ])\n        \n        # Right-hand side vector\n        rhs = np.vstack([-s0, np.zeros((2, 1))])\n        \n        # Solve for [x_star^T, lambda_star^T]^T\n        solution = np.linalg.solve(KKT_matrix, rhs)\n        x_star = solution[:N]\n\n        # 2. Evaluate the average-energy gradient at the MECI.\n        s_star = A @ x_star + s0\n\n        # 3. Construct the projection operator P_B.\n        # Form matrix G whose columns [g, h] span the branching plane.\n        G = np.hstack([g, h])\n        # Orthonormalize the columns of G via QR decomposition.\n        Q, _ = np.linalg.qr(G)\n        # Projector onto the branching plane B.\n        P_B = Q @ Q.T\n        \n        # 4. Compute the component of the gradient within the branching plane.\n        s_parallel_star = P_B @ s_star\n\n        # 5. Classify the MECI topology.\n        # As a check, s_star should already be in the branching plane,\n        # so norm(s_parallel_star) should equal norm(s_star).\n        norm_s_parallel = np.linalg.norm(s_parallel_star)\n\n        if norm_s_parallel > tau:\n            classification = 1  # Sloped\n        else:\n            classification = 0  # Peaked\n            \n        results.append(classification)\n        \n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2635932"}, {"introduction": "一旦确定了锥形交叉点的位置，下一步便是模拟分子波包穿过该区域时的动力学行为。本练习要求你亲手实现并比较几种在半经典动力学模拟（如“最少切换表面跳跃法” (FSSH)）中常用的“退相干校正”方案。通过将你的模拟结果与高质量的基准数据进行对比，你将获得处理复杂体系中量子相干效应的实践经验，并深入理解在模拟中引入退相干的必要性与挑战。[@problem_id:2635943]", "problem": "针对锥形交叉的双模线性振动耦合模型，其非绝热哈密顿量的无量纲形式定义如下\n$$\n\\hat{H}_{\\text{dia}}(Q_x,Q_y)=\n\\begin{pmatrix}\na\\,Q_x & b\\,Q_y\\\\\nb\\,Q_y & -a\\,Q_x\n\\end{pmatrix},\n$$\n其中，$Q_x$ 和 $Q_y$ 是无量纲核坐标，$a$ 和 $b$ 是无量纲耦合斜率。绝热能量为\n$$\nE_{\\pm}(Q_x,Q_y)=\\pm \\sqrt{(a\\,Q_x)^2+(b\\,Q_y)^2},\n$$\n绝热混合角为\n$$\n\\theta(Q_x,Q_y)=\\tfrac{1}{2}\\operatorname{atan2}(b\\,Q_y, a\\,Q_x).\n$$\n考虑一个由时间 $t$ 参数化的经典直线核轨道，\n$$\nQ_x(t)=v\\,t,\\qquad Q_y(t)=b_0,\n$$\n其沿着 $Q_x$ 方向具有恒定的无量纲速度 $v$，沿着 $Q_y$ 方向具有碰撞参数 $b_0$。沿着该轨道，绝热混合角的时间导数（即沿轨道的标量非绝热耦合）为\n$$\ng(t)\\equiv \\frac{d\\theta}{dt}=\\frac{1}{2}\\,\\frac{a\\,b\\,\\big(\\dot{Q}_x Q_y-\\dot{Q}_y Q_x\\big)}{(a\\,Q_x)^2+(b\\,Q_y)^2}\n=-\\frac{1}{2}\\,\\frac{a\\,b\\,b_0\\,v}{(a\\,v\\,t)^2+(b\\,b_0)^2},\n$$\n因为 $\\dot{Q}_x=v$ 且 $\\dot{Q}_y=0$。在绝热表象中，沿轨道的随时间变化的电子哈密顿量为\n$$\nH_{\\text{adi}}(t)=\n\\begin{pmatrix}\n- E(t) & -i\\,g(t)\\\\\ni\\,g(t) & E(t)\n\\end{pmatrix},\\qquad\nE(t)=\\sqrt{(a\\,v\\,t)^2+(b\\,b_0)^2}.\n$$\n令 $\\rho(t)$ 为 $2\\times 2$ 的电子密度矩阵。在由 $H_{\\text{adi}}(t)$ 生成的幺正动力学下，其演化规律为\n$$\n\\rho(t+\\Delta t)=U(t,\\Delta t)\\,\\rho(t)\\,U(t,\\Delta t)^{\\dagger},\\qquad\nU(t,\\Delta t)=\\exp\\!\\big(-i\\,H_{\\text{adi}}(t)\\,\\Delta t\\big).\n$$\n我们定义三种常用于最少切换表面跳跃（FSSH）的退相干校正模型，此处表示为对 $\\rho(t)$ 的唯象去相位修正（在每个幺正步骤后应用）：\n\n- 瞬时退相干（代码 $0$）：当 $\\lvert g(t)\\rvert<g_{\\text{cut}}$ 且 $t>0$ 时，设置 $\\rho_{12}\\leftarrow 0$，并保持布居数不变。\n- 增强型 FSSH（代码 $1$）：应用指数去相位 $\\rho_{12}\\leftarrow \\rho_{12}\\,\\exp\\!\\big(-\\gamma_{\\text{AF}}(t)\\,\\Delta t\\big)$，其中 $\\gamma_{\\text{AF}}(t)=\\lvert g(t)\\rvert$。\n- 混合衰减（代码 $2$）：在耦合区域之外，当 $\\lvert g(t)\\rvert<g_{\\text{cut}}$ 时，应用 $\\rho_{12}\\leftarrow \\rho_{12}\\,\\exp\\!\\big(-\\gamma_{\\text{DM}}(t)\\,\\Delta t\\big)$，其中 $\\gamma_{\\text{DM}}(t)=\\alpha\\,\\Delta(t)$，否则 $\\gamma_{\\text{DM}}(t)=0$；此处 $\\Delta(t)=2\\,E(t)$。\n\n假设初始条件为 $\\rho(-T)=\\begin{pmatrix}1&0\\\\0&0\\end{pmatrix}$，即系统从较低的绝热态开始。所有量均为无量纲。对于固定的 $a$、$b$、$v$、$b_0$、时间步长为 $\\Delta t$ 的传播区间 $[-T,T_{\\text{end}}]$以及一组目标采样时间 $\\{t_k\\}$，将计算出的激发态布居数样本定义为\n$$\nP_2^{(m)}(t_k)=\\rho_{22}^{(m)}(t_k),\n$$\n其中 $m\\in\\{0,1,2\\}$ 表示退相干模型代码。\n\n给定一个参考“基准”激发态布居数剖面 $\\{P_2^{\\text{ref}}(t_k)\\}$（作为多组态时间依赖Hartree（MCTDH）方法结果的代理），将模型 $m$ 在该采样集上的均方根误差定义为\n$$\n\\text{RMSE}_m=\\sqrt{\\frac{1}{K}\\sum_{k=1}^{K}\\Big(P_2^{(m)}(t_k)-P_2^{\\text{ref}}(t_k)\\Big)^2}.\n$$\n\n您的任务是实现一个程序，对下方测试套件中的每一组参数，计算 $m\\in\\{0,1,2\\}$ 对应的 $P_2^{(m)}(t_k)$，评估 $\\text{RMSE}_m$，并为每个案例返回使 $\\text{RMSE}_m$ 最小化的整数代码 $m^{\\star}$（如果出现平局，选择最小的 $m$）。所有计算都必须使用所述的无量纲单位进行。\n\n对去相位模型使用以下常数：$g_{\\text{cut}}=10^{-2}$ 和 $\\alpha=10^{-1}$。\n\n测试套件（每行为一个案例；元组元素为 $(a,b,v,b_0,T,\\Delta t,[t_k\\text{列表}], [P_2^{\\text{ref}}(t_k)\\text{列表}])$）：\n\n- 案例 A（中等耦合，近交叉点穿越）：$(a,b,v,b_0,T,\\Delta t)=($$1.0$$,$$0.8$$,$$1.0$$,$$0.3$$,$$5.0$$,$$0.002$$)，目标时间 $[\\, $$1.0$$, $$2.0$$, $$4.0$$ \\,]$，参考值 $[\\, $$0.27$$, $$0.33$$, $$0.34$$ \\,]$。\n- 案例 B（弱耦合）：$(a,b,v,b_0,T,\\Delta t)=($$1.0$$,$$0.25$$,$$1.0$$,$$0.5$$,$$5.0$$,$$0.002$$)，目标时间 $[\\, $$1.0$$, $$2.0$$ \\,]$，参考值 $[\\, $$0.03$$, $$0.045$$ \\,]$。\n- 案例 C（较强耦合，小碰撞参数）：$(a,b,v,b_0,T,\\Delta t)=($$1.0$$,$$1.2$$,$$1.0$$,$$0.05$$,$$5.0$$,$$0.002$$)，目标时间 $[\\, $$0.5$$, $$1.0$$, $$2.0$$ \\,]$，参考值 $[\\, $$0.40$$, $$0.48$$, $$0.49$$ \\,]$。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个由三个整数组成的列表 $[m_A^{\\star},m_B^{\\star},m_C^{\\star}]$，分别对应案例 A、B 和 C 的最佳模型代码，无空格，形式为方括号内以逗号分隔的列表（例如 $[0,1,2]$）。不允许有其他输出。", "solution": "所提出的问题是理论化学物理学中一个明确定义的计算练习。它具有科学依据，内部一致，并包含了获得唯一解所需的所有信息。该模型，一个双态线性振动耦合系统，是研究锥形交叉处非绝热效应的标准范例。运动方程和唯象退相干模型在该领域是标准方法。因此，该问题是有效的，我们开始求解。\n\n任务的核心是模拟一个量子系统在含时哈密顿量作用下 $2 \\times 2$ 电子密度矩阵 $\\rho(t)$ 的时间演化，并将三种不同唯象退相干模型的结果与参考结果进行比较。目标是找出对于每组给定的参数，哪种模型能最好地拟合参考数据。\n\n该方法基于绝热表象中Liouville-von Neumann方程的数值积分。每个案例的总模拟区间为从 $t_{start} = -T$ 到 $t_{end} = T$。该区间被离散化为一个均匀的时间点网格 $t_i = t_{start} + i \\cdot \\Delta t$，其中 $\\Delta t$ 是时间步长。\n\n设时间 $t$ 的密度矩阵为 $\\rho(t)$。在一个小的时间步长 $\\Delta t$ 内的演化是一个两步过程：幺正演化，然后是非幺正的退相干校正。\n\n1.  **幺正演化**：\n    系统在含时绝热哈密顿量下演化：\n    $$\n    H_{\\text{adi}}(t)=\n    \\begin{pmatrix}\n    - E(t) & -i\\,g(t)\\\\\n    i\\,g(t) & E(t)\n    \\end{pmatrix}\n    $$\n    其中能量项为 $E(t)=\\sqrt{(a\\,v\\,t)^2+(b\\,b_0)^2}$，非绝热耦合为 $g(t)=-\\frac{1}{2}\\,\\frac{a\\,b\\,b_0\\,v}{(a\\,v\\,t)^2+(b\\,b_0)^2}$。\n    假设哈密顿量在小区间 $[t, t+\\Delta t]$ 内近似恒定，则密度矩阵的演化由以下公式决定：\n    $$\n    \\rho'(t+\\Delta t)=U(t, \\Delta t)\\,\\rho(t)\\,U(t, \\Delta t)^{\\dagger}\n    $$\n    时间演化算符（或称传播子）由矩阵指数给出：\n    $$\n    U(t, \\Delta t)=\\exp\\!\\big(-i\\,H_{\\text{adi}}(t)\\,\\Delta t\\big)\n    $$\n    这个矩阵指数在每个时间步长被数值计算。对于一个 $2 \\times 2$ 矩阵，虽然存在解析解，但使用一个稳健的数值算法，例如在 `scipy.linalg.expm` 中实现的算法，是更可取的选择，以确保稳定性和准确性，特别是在计算程序的背景下。模拟的初始条件是 $\\rho(-T) = \\begin{pmatrix}1 & 0 \\\\ 0 & 0 \\end{pmatrix}$，对应于系统处于较低（基态）的绝热电子态。\n\n2.  **退相干校正**：\n    在幺正步骤之后，会得到一个中间密度矩阵 $\\rho'(t+\\Delta t)$，然后根据三种指定模型之一（由 $m \\in \\{0, 1, 2\\}$ 索引）应用非幺正的退相干校正。这些校正仅影响非对角元素（相干项）$\\rho_{12}$ 和 $\\rho_{21}$，而保持对角元素（布居数）不变。\n\n    -   **模型 $m=0$（瞬时退相干）**：如果非绝热耦合的大小 $\\lvert g(t) \\rvert$ 低于阈值 $g_{\\text{cut}} = 10^{-2}$ 并且时间 $t$ 为正，则相干项被突然设置为零。\n        $$\n        \\rho_{12}(t+\\Delta t) \\leftarrow 0 \\quad \\text{若} \\quad \\lvert g(t)\\rvert < g_{\\text{cut}} \\text{ 且 } t > 0\n        $$\n        其共轭元素 $\\rho_{21}$ 也被设置为 $0$ 以保持厄米性。\n\n    -   **模型 $m=1$（增强型 FSSH，AFSSH）**：在每个时间步长，相干项都会被一个指数因子衰减。衰减速率等于非绝热耦合的大小。\n        $$\n        \\rho_{12}(t+\\Delta t) \\leftarrow \\rho'_{12}(t+\\Delta t) \\exp\\!\\big( -\\lvert g(t) \\rvert \\Delta t \\big)\n        $$\n\n    -   **模型 $m=2$（混合衰减，DM）**：仅当系统处于“耦合区域之外”时，相干项才会被一个指数因子衰减，该区域由条件 $\\lvert g(t) \\rvert < g_{\\text{cut}}$ 定义。衰减速率与绝热态之间的能隙成正比，$\\Delta(t) = 2E(t)$。\n        $$\n        \\rho_{12}(t+\\Delta t) \\leftarrow \\rho'_{12}(t+\\Delta t) \\exp\\!\\big( - \\gamma_{\\text{DM}}(t) \\Delta t \\big)\n        $$\n        其中，若 $\\lvert g(t)\\rvert < g_{\\text{cut}}$，则 $\\gamma_{\\text{DM}}(t) = \\alpha \\Delta(t)$，否则 $\\gamma_{\\text{DM}}(t) = 0$。常数 $\\alpha$ 给定为 $10^{-1}$。\n\n3.  **模拟与分析**：\n    对于每个测试案例（A, B, C），分别对每种退相干模型 $m \\in \\{0, 1, 2\\}$ 执行一次独立的模拟。\n    模拟从 $t=-T$ 进行到 $t=T$，时间步长为 $\\Delta t$。在每个指定的目标时间 $\\{t_k\\}$，记录激发态布居数 $P_2^{(m)}(t_k) = \\rho_{22}^{(m)}(t_k)$。\n    模拟结束后，为每种模型计算均方根误差（RMSE）：\n    $$\n    \\text{RMSE}_m=\\sqrt{\\frac{1}{K}\\sum_{k=1}^{K}\\Big(P_2^{(m)}(t_k)-P_2^{\\text{ref}}(t_k)\\Big)^2}\n    $$\n    其中 $\\{P_2^{\\text{ref}}(t_k)\\}$ 是给定的参考布居数，$K$ 是目标时间的数量。\n    最后，对每个测试案例，找出产生最小 RMSE 的模型索引 $m^{\\star}$。如果出现平局，则选择索引最小的模型。将案例 A、B 和 C 的索引 $m^{\\star}$ 收集起来，并作为最终结果呈现。\n\n附带的 Python 代码实现了这整个过程。它遍历测试案例，为三种模型中的每一种运行所述的模拟，计算 RMSE，并确定每个案例的最佳拟合模型。", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import expm\n\ndef solve():\n    \"\"\"\n    Solves the problem of finding the best decoherence model for three test cases\n    of nonadiabatic dynamics at a conical intersection.\n    \"\"\"\n\n    # Define constants from the problem statement\n    G_CUT = 1e-2\n    ALPHA = 1e-1\n\n    # Test suite: (a, b, v, b_0, T, dt, target_times, ref_pops)\n    test_cases = [\n        # Case A (moderate coupling, near-seam transit)\n        (1.0, 0.8, 1.0, 0.3, 5.0, 0.002, [1.0, 2.0, 4.0], [0.27, 0.33, 0.34]),\n        # Case B (weak coupling)\n        (1.0, 0.25, 1.0, 0.5, 5.0, 0.002, [1.0, 2.0], [0.03, 0.045]),\n        # Case C (stronger coupling, small impact parameter)\n        (1.0, 1.2, 1.0, 0.05, 5.0, 0.002, [0.5, 1.0, 2.0], [0.40, 0.48, 0.49]),\n    ]\n\n    best_model_indices = []\n\n    for case_params in test_cases:\n        a, b, v, b0, T, dt, target_times, ref_pops = case_params\n        \n        # Set up the time grid for the simulation\n        t_end = T\n        num_steps = int( (t_end - (-T)) / dt ) + 1\n        t_grid = np.linspace(-T, t_end, num_steps)\n\n        # Find the indices corresponding to target times for efficient sampling\n        target_indices = [np.argmin(np.abs(t_grid - t_k)) for t_k in target_times]\n\n        rmses = []\n        for model_code in range(3):\n            # Initial condition: system in the lower adiabatic state\n            rho = np.array([[1.0, 0.0], \n                            [0.0, 0.0]], dtype=np.complex128)\n            \n            sampled_pops = []\n            target_sample_idx = 0\n\n            # Propagate the density matrix in time\n            for i, t in enumerate(t_grid[:-1]):\n                # Calculate time-dependent quantities\n                avt = a * v * t\n                bb0 = b * b0\n                \n                # Energy E(t)\n                E_t = np.sqrt(avt**2 + bb0**2)\n                \n                # Nonadiabatic coupling g(t)\n                denom = avt**2 + bb0**2\n                if denom == 0:\n                    # This case is avoided by problem parameters but good practice\n                    g_t = 0.0\n                else:\n                    g_t = -0.5 * a * b * b0 * v / denom\n\n                # Construct the adiabatic Hamiltonian\n                H_adi = np.array([[-E_t, -1j * g_t],\n                                  [1j * g_t,  E_t]], dtype=np.complex128)\n\n                # 1. Unitary evolution step\n                U = expm(-1j * H_adi * dt)\n                rho = U @ rho @ U.conj().T\n\n                # 2. Decoherence correction step\n                if model_code == 0:  # Instantaneous decoherence\n                    if abs(g_t)  G_CUT and t > 0:\n                        rho[0, 1] = 0.0\n                        rho[1, 0] = 0.0\n                elif model_code == 1:  # Augmented FSSH (AFSSH)\n                    gamma_af = abs(g_t)\n                    dephasing_factor = np.exp(-gamma_af * dt)\n                    rho[0, 1] *= dephasing_factor\n                    rho[1, 0] *= dephasing_factor\n                elif model_code == 2:  # Decay-of-mixing (DM)\n                    if abs(g_t)  G_CUT:\n                        Delta_t = 2.0 * E_t\n                        gamma_dm = ALPHA * Delta_t\n                        dephasing_factor = np.exp(-gamma_dm * dt)\n                        rho[0, 1] *= dephasing_factor\n                        rho[1, 0] *= dephasing_factor\n\n                # Sample population at the next time step t+dt (index i+1)\n                if target_sample_idx  len(target_indices) and (i + 1) == target_indices[target_sample_idx]:\n                    sampled_pops.append(rho[1, 1].real)\n                    target_sample_idx += 1\n            \n            # Calculate RMSE for the current model\n            sampled_pops = np.array(sampled_pops)\n            ref_pops_arr = np.array(ref_pops)\n            rmse = np.sqrt(np.mean((sampled_pops - ref_pops_arr)**2))\n            rmses.append(rmse)\n\n        # Find the model with the minimum RMSE\n        best_model_indices.append(np.argmin(rmses))\n\n    # Print results in the required format\n    print(f\"[{','.join(map(str, best_model_indices))}]\")\n\nsolve()\n```", "id": "2635943"}]}