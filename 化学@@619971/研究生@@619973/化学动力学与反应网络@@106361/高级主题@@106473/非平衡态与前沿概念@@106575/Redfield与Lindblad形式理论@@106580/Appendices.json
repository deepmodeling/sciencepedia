{"hands_on_practices": [{"introduction": "要掌握Lindblad形式主义，第一步是能够将其抽象的算符方程转化为一个具体的、可解的动力学方程组。这个练习 [@problem_id:2669369] 引导您为一个物理上直观的三能级级联衰变模型构建Liouvillian超算符 $\\mathcal{L}$ 的矩阵表示。通过求解布居数随时间的演化，您将对该形式主义如何描述不可逆的弛豫过程获得具体的数学和物理感知。", "problem": "一个处于溶剂中的三能级分子系统被建模为一个梯级 $|3\\rangle \\to |2\\rangle \\to |1\\rangle$，其不可逆弛豫由弱马尔可夫环境驱动。在弱系统-浴耦合和久期近似下（如同将 Redfield 主方程简化为 Gorini-Kossakowski-Sudarshan-Lindblad (GKSL) 形式的推导），密度算符 $\\rho$ 遵循 Lindblad 主方程\n$$\n\\frac{d\\rho}{dt} \\;=\\; \\sum_{\\alpha} \\Big( L_{\\alpha}\\,\\rho\\,L_{\\alpha}^{\\dagger} \\;-\\; \\frac{1}{2}\\,\\{L_{\\alpha}^{\\dagger}L_{\\alpha}, \\rho\\} \\Big),\n$$\n其中哈密顿量为零。仅有的跳跃算符为\n$$\nL_{32} \\;=\\; \\sqrt{\\gamma_{32}}\\,|2\\rangle\\langle 3|, \\qquad L_{21} \\;=\\; \\sqrt{\\gamma_{21}}\\,|1\\rangle\\langle 2|,\n$$\n其中 $\\gamma_{32} > 0$ 和 $\\gamma_{21} > 0$ 是固定的速率常数，并且不存在其他耗散通道。令 $\\mathcal{L}$ 表示由右侧定义的 Liouville 超算符，它线性地作用于算符。\n\n任务：\n- 根据上述基本定义，构建 Liouville 算符 $\\mathcal{L}$ 的显式矩阵形式，该矩阵作用于有序算符基 \n$$\n\\big\\{|1\\rangle\\langle 1|,\\,|2\\rangle\\langle 2|,\\,|3\\rangle\\langle 3|,\\,|1\\rangle\\langle 2|,\\,|2\\rangle\\langle 1|,\\,|1\\rangle\\langle 3|,\\,|3\\rangle\\langle 1|,\\,|2\\rangle\\langle 3|,\\,|3\\rangle\\langle 2|\\big\\}\n$$\n下矢量化的密度算符 $\\mathrm{vec}(\\rho)$。展示其在布居数和相干项方面的块结构，并给出所有非零矩阵元。\n- 计算矩阵指数 $\\exp(\\mathcal{L}t)$，并用它将初态 $\\rho(0) = |3\\rangle\\langle 3|$ 演化到时间 $t \\ge 0$。假设 $\\gamma_{21} \\neq \\gamma_{32}$。\n- 令 $\\rho_{11}(t) = \\langle 1|\\rho(t)|1\\rangle$ 表示能级 $|1\\rangle$ 随时间变化的布居数。将 $\\rho_{11}(t)$ 的最终结果表示为包含 $\\gamma_{21}$、$\\gamma_{32}$ 和 $t$ 的单个闭合形式解析表达式。无需四舍五入。答案是无量纲的，不要包含单位。", "solution": "所述问题具有科学依据，提法恰当且客观。这是开放量子系统理论中的一个标准练习，具体而言，是将 Lindblad 主方程应用于一个简单的、具有代表性的模型。所有必需的信息都已提供，任务也已明确定义。因此，该问题是有效的，我们可以着手求解。\n\n密度算符 $\\rho$ 的演化由 Gorini-Kossakowski-Sudarshan-Lindblad (GKSL) 主方程决定。当哈密顿量为零 ($H=0$) 且跳跃算符为指定的 $L_{32} = \\sqrt{\\gamma_{32}}\\,|2\\rangle\\langle 3|$ 和 $L_{21} = \\sqrt{\\gamma_{21}}\\,|1\\rangle\\langle 2|$ 时，方程为：\n$$\n\\frac{d\\rho}{dt} = \\mathcal{L}(\\rho) = \\left( L_{21}\\rho L_{21}^{\\dagger} - \\frac{1}{2}\\{L_{21}^{\\dagger}L_{21}, \\rho\\} \\right) + \\left( L_{32}\\rho L_{32}^{\\dagger} - \\frac{1}{2}\\{L_{32}^{\\dagger}L_{32}, \\rho\\} \\right)\n$$\n我们来确定 Liouville 超算符 $\\mathcal{L}$ 的分量。\n首先，我们计算所需的算符乘积：\n$L_{21}^{\\dagger}L_{21} = (\\sqrt{\\gamma_{21}}\\,|2\\rangle\\langle 1|)(\\sqrt{\\gamma_{21}}\\,|1\\rangle\\langle 2|) = \\gamma_{21}|2\\rangle\\langle 2|$。\n$L_{32}^{\\dagger}L_{32} = (\\sqrt{\\gamma_{32}}\\,|3\\rangle\\langle 2|)(\\sqrt{\\gamma_{32}}\\,|2\\rangle\\langle 3|) = \\gamma_{32}|3\\rangle\\langle 3|$。\n\n主方程变为：\n$$\n\\frac{d\\rho}{dt} = \\gamma_{21}|1\\rangle\\langle 2|\\rho|2\\rangle\\langle 1| - \\frac{\\gamma_{21}}{2}(\\rho|2\\rangle\\langle 2| + |2\\rangle\\langle 2|\\rho) + \\gamma_{32}|2\\rangle\\langle 3|\\rho|3\\rangle\\langle 2| - \\frac{\\gamma_{32}}{2}(\\rho|3\\rangle\\langle 3| + |3\\rangle\\langle 3|\\rho)\n$$\n为了构建 $\\mathcal{L}$ 的矩阵表示，我们求解矩阵元 $\\rho_{ij} = \\langle i|\\rho|j\\rangle$ 的运动方程。\n\n对于布居数 ($\\rho_{11}$, $\\rho_{22}$, $\\rho_{33}$)：\n$$\n\\dot{\\rho}_{11} = \\langle 1|\\frac{d\\rho}{dt}|1\\rangle = \\gamma_{21}\\langle 1|1\\rangle\\langle 2|\\rho|2\\rangle\\langle 1|1\\rangle - \\frac{\\gamma_{21}}{2}\\langle 1|(\\rho|2\\rangle\\langle 2|+|2\\rangle\\langle 2|\\rho)|1\\rangle + \\dots = \\gamma_{21}\\rho_{22}\n$$\n$$\n\\dot{\\rho}_{22} = \\langle 2|\\frac{d\\rho}{dt}|2\\rangle = \\gamma_{32}\\rho_{33} - \\frac{\\gamma_{21}}{2}\\langle 2|(\\rho|2\\rangle\\langle 2|+|2\\rangle\\langle 2|\\rho)|2\\rangle = \\gamma_{32}\\rho_{33} - \\frac{\\gamma_{21}}{2}(2\\rho_{22}) = \\gamma_{32}\\rho_{33} - \\gamma_{21}\\rho_{22}\n$$\n$$\n\\dot{\\rho}_{33} = \\langle 3|\\frac{d\\rho}{dt}|3\\rangle = -\\frac{\\gamma_{32}}{2}\\langle 3|(\\rho|3\\rangle\\langle 3|+|3\\rangle\\langle 3|\\rho)|3\\rangle = -\\frac{\\gamma_{32}}{2}(2\\rho_{33}) = -\\gamma_{32}\\rho_{33}\n$$\n\n对于相干项 ($\\rho_{ij}$ 且 $i \\neq j$)：\n在久期近似和零哈密顿量下，非对角元的一般方程为 $\\dot{\\rho}_{ij} = - \\frac{1}{2}\\sum_k (\\Gamma_i + \\Gamma_j)\\rho_{ij}$，其中 $\\Gamma_k = \\sum_{\\alpha} \\langle k| L_\\alpha^\\dagger L_\\alpha |k\\rangle$。\n在此，$\\sum_{\\alpha} L_\\alpha^\\dagger L_\\alpha = \\gamma_{21}|2\\rangle\\langle 2| + \\gamma_{32}|3\\rangle\\langle 3|$。\n因此，$\\Gamma_1=0$，$\\Gamma_2=\\gamma_{21}$，以及 $\\Gamma_3=\\gamma_{32}$。\n$$\n\\dot{\\rho}_{12} = -\\frac{1}{2}(\\Gamma_1+\\Gamma_2)\\rho_{12} = -\\frac{\\gamma_{21}}{2}\\rho_{12} \\quad (\\text{以及 } \\dot{\\rho}_{21} = \\dot{\\rho}_{12}^*)\n$$\n$$\n\\dot{\\rho}_{13} = -\\frac{1}{2}(\\Gamma_1+\\Gamma_3)\\rho_{13} = -\\frac{\\gamma_{32}}{2}\\rho_{13} \\quad (\\text{以及 } \\dot{\\rho}_{31} = \\dot{\\rho}_{13}^*)\n$$\n$$\n\\dot{\\rho}_{23} = -\\frac{1}{2}(\\Gamma_2+\\Gamma_3)\\rho_{23} = -\\frac{\\gamma_{21}+\\gamma_{32}}{2}\\rho_{23} \\quad (\\text{以及 } \\dot{\\rho}_{32} = \\dot{\\rho}_{23}^*)\n$$\n矢量化状态为 $v = (\\rho_{11}, \\rho_{22}, \\rho_{33}, \\rho_{12}, \\rho_{21}, \\rho_{13}, \\rho_{31}, \\rho_{23}, \\rho_{32})^T$。其动力学为 $\\dot{v} = \\mathcal{L}v$。Liouville 矩阵 $\\mathcal{L}$ 是块对角矩阵，将布居数与相干项分离开来。\n\n作用于 $(\\rho_{11}, \\rho_{22}, \\rho_{33})^T$ 的布居数块为：\n$$\n\\mathcal{L}_{pop} = \\begin{pmatrix} 0 & \\gamma_{21} & 0 \\\\ 0 & -\\gamma_{21} & \\gamma_{32} \\\\ 0 & 0 & -\\gamma_{32} \\end{pmatrix}\n$$\n相干块是作用于其余元素的对角 $6 \\times 6$ 矩阵。完整的 $9 \\times 9$ Liouville 矩阵 $\\mathcal{L}$ 是：\n$$\n\\mathcal{L} = \\begin{pmatrix}\n0 & \\gamma_{21} & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & -\\gamma_{21} & \\gamma_{32} & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & -\\gamma_{32} & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & -\\frac{\\gamma_{21}}{2} & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & -\\frac{\\gamma_{21}}{2} & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{32}}{2} & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{32}}{2} & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{21}+\\gamma_{32}}{2} & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{21}+\\gamma_{32}}{2}\n\\end{pmatrix}\n$$\n非零矩阵元即为 $\\mathcal{L}_{pop}$ 的各项以及上文所列的相干项的对角元。这完成了第一个任务。\n\n对于第二个任务，我们演化初态 $\\rho(0) = |3\\rangle\\langle 3|$。在其矢量形式下，这对应于初始矢量 $v(0) = (0, 0, 1, 0, 0, 0, 0, 0, 0)^T$。由于初态没有相干项，并且 Liouville 算符不将布居数与相干项耦合，因此对于所有 $t \\ge 0$，相干项保持为零。演化完全在布居数子空间内进行：\n$$\n\\begin{pmatrix} \\rho_{11}(t) \\\\ \\rho_{22}(t) \\\\ \\rho_{33}(t) \\end{pmatrix} = \\exp(\\mathcal{L}_{pop}t) \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\end{pmatrix}\n$$\n这等价于求解布居数的常微分方程组，其初始条件为 $\\rho_{11}(0)=0$，$\\rho_{22}(0)=0$ 和 $\\rho_{33}(0)=1$。\n1. 求解 $\\rho_{33}(t)$：\n$\\dot{\\rho}_{33} = -\\gamma_{32}\\rho_{33}$，其中 $\\rho_{33}(0)=1$。解为 $\\rho_{33}(t) = \\exp(-\\gamma_{32}t)$。\n\n2. 求解 $\\rho_{22}(t)$：\n$\\dot{\\rho}_{22} = -\\gamma_{21}\\rho_{22} + \\gamma_{32}\\rho_{33}(t) = -\\gamma_{21}\\rho_{22} + \\gamma_{32}\\exp(-\\gamma_{32}t)$。\n这是一个初始条件为 $\\rho_{22}(0)=0$ 的一阶线性非齐次微分方程。对于 $\\gamma_{21} \\neq \\gamma_{32}$，其解为：\n$$\n\\rho_{22}(t) = \\frac{\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}}\\left(\\exp(-\\gamma_{32}t) - \\exp(-\\gamma_{21}t)\\right)\n$$\n\n3. 求解 $\\rho_{11}(t)$：\n$\\dot{\\rho}_{11} = \\gamma_{21}\\rho_{22}(t)$，其中 $\\rho_{11}(0)=0$。我们进行积分：\n$$\n\\rho_{11}(t) = \\int_0^t \\gamma_{21}\\rho_{22}(\\tau)d\\tau = \\gamma_{21} \\int_0^t \\frac{\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}}\\left(\\exp(-\\gamma_{32}\\tau) - \\exp(-\\gamma_{21}\\tau)\\right) d\\tau\n$$\n$$\n\\rho_{11}(t) = \\frac{\\gamma_{21}\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}} \\left[-\\frac{1}{\\gamma_{32}}\\exp(-\\gamma_{32}\\tau) + \\frac{1}{\\gamma_{21}}\\exp(-\\gamma_{21}\\tau)\\right]_0^t\n$$\n$$\n\\rho_{11}(t) = \\frac{\\gamma_{21}\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}} \\left( \\left(-\\frac{1}{\\gamma_{32}}\\exp(-\\gamma_{32}t) + \\frac{1}{\\gamma_{21}}\\exp(-\\gamma_{21}t)\\right) - \\left(-\\frac{1}{\\gamma_{32}} + \\frac{1}{\\gamma_{21}}\\right) \\right)\n$$\n$$\n\\rho_{11}(t) = \\frac{\\gamma_{21}\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}} \\left( \\frac{\\gamma_{32}\\exp(-\\gamma_{21}t) - \\gamma_{21}\\exp(-\\gamma_{32}t)}{\\gamma_{21}\\gamma_{32}} - \\frac{\\gamma_{32}-\\gamma_{21}}{\\gamma_{21}\\gamma_{32}} \\right)\n$$\n$$\n\\rho_{11}(t) = \\frac{1}{\\gamma_{21}-\\gamma_{32}} \\left( (\\gamma_{32}\\exp(-\\gamma_{21}t) - \\gamma_{21}\\exp(-\\gamma_{32}t)) - (\\gamma_{32}-\\gamma_{21}) \\right)\n$$\n此表达式可以简化，得到 $\\rho_{11}(t)$ 的最终闭合形式答案：\n$$\n\\rho_{11}(t) = 1 + \\frac{\\gamma_{32}\\exp(-\\gamma_{21}t) - \\gamma_{21}\\exp(-\\gamma_{32}t)}{\\gamma_{21}-\\gamma_{32}}\n$$\n这等价于更标准的形式：\n$$\n\\rho_{11}(t) = 1 - \\frac{\\gamma_{21}\\exp(-\\gamma_{32}t) - \\gamma_{32}\\exp(-\\gamma_{21}t)}{\\gamma_{21}-\\gamma_{32}}\n$$\n这完成了最后一个任务。", "answer": "$$\\boxed{1 - \\frac{\\gamma_{21}\\exp(-\\gamma_{32}t) - \\gamma_{32}\\exp(-\\gamma_{21}t)}{\\gamma_{21}-\\gamma_{32}}}$$", "id": "2669369"}, {"introduction": "在实践中，我们常用的Lindblad方程通常是从更普适的Redfield方程在“久期近似”（secular approximation）下得到的，此近似极大地简化了问题。然而，理解该近似的适用边界至关重要。这个练习 [@problem_id:2669326] 挑战您批判性地思考其物理有效性，它强调了在能量本征基（激子基）中进行分析的重要性，并揭示了系统能级分裂与环境关联时间之间的关键关系。", "problem": "考虑一个用于模拟分子网络中激发能量转移的耦合电子二聚体。在位点基 $\\{\\lvert 1\\rangle,\\lvert 2\\rangle\\}$ 中，系统哈密顿量为\n$$\nH_{\\mathrm{S}} \\;=\\; \\epsilon_1 \\lvert 1\\rangle\\langle 1\\rvert \\;+\\; \\epsilon_2 \\lvert 2\\rangle\\langle 2\\rvert \\;+\\; J\\big(\\lvert 1\\rangle\\langle 2\\rvert + \\lvert 2\\rangle\\langle 1\\rvert\\big),\n$$\n其中能量差为 $\\delta \\equiv \\epsilon_1 - \\epsilon_2$，相干耦合为 $J$。系统通过以下方式与独立的局域热环境耦合\n$$\nH_{\\mathrm{SB}} \\;=\\; \\sum_{n=1}^2 \\lvert n\\rangle\\langle n\\rvert \\,\\otimes\\, B_n,\n$$\n其中 $B_n$ 是位点 $n$ 的热库算符。热库关联函数为 $C_n(t) \\equiv \\langle B_n(t) B_n(0)\\rangle$，并在特征时间 $\\tau_c$ 上衰减；假设热库相同，即 $C_1(t)=C_2(t)$，温度高，且谱密度平滑，从而 Born 近似和 Markov 近似成立。约化密度算符 $\\rho(t)$ 的 Redfield 方程是对 $H_{\\mathrm{SB}}$ 取到二阶得到的。\n\nRedfield 方程既可以在位点基中书写，也可以在激子基中书写，其中激子态 $\\{\\lvert +\\rangle,\\lvert -\\rangle\\}$ 将 $H_{\\mathrm{S}}$ 对角化。激子能量为\n$$\nE_{\\pm} \\;=\\; \\tfrac{1}{2}(\\epsilon_1+\\epsilon_2) \\,\\pm\\, \\tfrac{1}{2}\\Delta,\\qquad \\Delta \\equiv \\sqrt{\\delta^2 + 4J^2},\n$$\n相应的玻尔频率为 $\\Omega \\equiv \\Delta/\\hbar$。久期近似舍弃了 Redfield 张量中耦合以不同玻尔频率振荡的算符分量的项；其有效性的一个标准判据是，对于任何被舍弃的频率对 $\\omega$ 和 $\\omega'$，都有 $\\lvert \\omega - \\omega' \\rvert \\,\\tau_c \\gg 1$，因此相应的交叉项在热库关联时间上平均为零。\n\n考虑有机激子输运的典型参数：$\\delta = 50\\,\\mathrm{cm}^{-1}$，$J = 100\\,\\mathrm{cm}^{-1}$，以及 $\\tau_c = 50\\,\\mathrm{fs}$。使用 $c = 3.00\\times 10^{10}\\,\\mathrm{cm\\,s}^{-1}$ 并注意与波数 $\\tilde{\\nu}$（单位为 $\\mathrm{cm}^{-1}$）相关的角频率为 $\\omega = 2\\pi c\\,\\tilde{\\nu}$。仅基于 Born-Markov-Redfield 构建的第一性原理、玻尔频率的定义以及上述久期判据，对于此二聚体，以下哪个陈述最能描述久期近似在位点基和激子基中哪个更准确，并说明原因？\n\nA. 当 $\\lvert \\Omega \\rvert \\tau_c \\gg 1$ 时，久期近似在激子基中更准确，因为在该基中，耗散子分解为由间隔良好的玻尔频率标记的块；对于给定参数，$\\Omega \\tau_c$ 的量级为 1 到几，这使得激子基中的久期近似具有中等准确性，并且比位点基中的久期近似更可靠。\n\nB. 当热库是局域耦合时，久期近似在位点基中更准确，因为耦合算符在该基中是对角的；对于给定参数，局域耦合使得位点基中的久期近似实际上是精确的。\n\nC. 久期近似的准确性在基变换下是不变的；对于任何 $\\delta$、$J$ 和 $\\tau_c$，位点基和激子基中的久期近似都是等效的。\n\nD. 对于任何弱耦合参数，位点基和激子基中的久期近似都不可能准确；必须始终通过对角化完整的 Redfield 张量来构造一个 Lindblad 生成元，才能获得任何合理的动力学。", "solution": "我们从适用于弱系统-热库耦合的 Born 近似和 Markov 近似开始：系统根据 Redfield 方程演化，\n$$\n\\frac{d}{dt}\\rho(t) \\;=\\; -\\frac{i}{\\hbar}[H_{\\mathrm{S}},\\rho(t)] \\;+\\; \\mathcal{R}[\\rho(t)],\n$$\n其中 Redfield 耗散子 $\\mathcal{R}$ 是 $H_{\\mathrm{SB}}$ 的二阶项，并依赖于热库关联函数。通常，我们将系统耦合算符写为 $A_n \\equiv \\lvert n\\rangle\\langle n\\rvert$。在 $H_{\\mathrm{S}}$ 的能量本征基 $\\{\\lvert \\alpha\\rangle\\}$ 中，这些算符分解为由 $H_{\\mathrm{S}}$ 生成的 Liouville 算符的本征算符，其傅里叶分量 $A_n(\\omega)$ 连接具有玻尔频率 $\\omega_{\\alpha\\beta} \\equiv (E_\\alpha - E_\\beta)/\\hbar$ 的本征态对。Redfield 张量耦合了以 $\\omega$ 和 $\\omega'$ 振荡的分量。\n\n久期近似舍弃了 $\\mathcal{R}$ 中耦合不同振荡扇区的项，条件是它们的相对相位在热库关联时间上平均为零。一个有原则的判据是\n$$\n\\lvert \\omega - \\omega' \\rvert \\,\\tau_c \\;\\gg\\; 1\n$$\n适用于任何被舍弃交叉项的频率对 $(\\omega,\\omega')$。当此条件成立时，主方程简化为在本征算符扇区中的块对角结构，并且在进一步的正定性条件下，它变为 Gorini-Kossakowski-Sudarshan-Lindblad (GKSL) 形式。\n\n现在我们比较位点基和激子基。激子基将 $H_{\\mathrm{S}}$ 对角化，有\n$$\n\\Delta \\;=\\; \\sqrt{\\delta^2 + 4J^2},\\qquad \\Omega \\;=\\; \\frac{\\Delta}{\\hbar},\\qquad E_{\\pm} \\;=\\; \\tfrac{1}{2}(\\epsilon_1+\\epsilon_2)\\pm \\tfrac{1}{2}\\Delta.\n$$\n在这个基中，玻尔频率为 0（布居数算符）和 $\\pm \\Omega$（$\\lvert +\\rangle$ 和 $\\lvert -\\rangle$ 之间的相干项算符）。在此基中的久期近似舍弃了在 0 和 $\\pm \\Omega$ 之间振荡的扇区之间的耦合，以及在 $+\\Omega$ 和 $-\\Omega$ 之间振荡的扇区之间的耦合，前提是 $\\Omega \\tau_c \\gg 1$。因此，激子基中久期近似的准确性由时间尺度 $\\tau_c$ 上激子分裂与零的分离程度控制。\n\n相比之下，在位点基中，$H_{\\mathrm{S}}$ 不是对角的。位点布居数和相干项不是哈密顿量 Liouville 算符的本征算符；对易子 $[H_{\\mathrm{S}},\\cdot]$ 以由 $\\Omega$ 设定的振荡频率将位点布居数与位点相干项耦合起来。直接在位点基中执行、并舍弃布居数-相干项耦合的朴素久期近似，是假设这些耦合会平均掉，但它们相关的频率与在激子基中主导动力学的频率相同，即 $\\pm \\Omega$。由于久期判据本质上是关于玻尔频率的分离，因此最自然地是在激子基中进行评估；在位点基中应用它，往往会舍弃具有可比频率内容的项，并可能损害能量转移动力学和热力学一致性。\n\n现在我们定量地评估给定参数。计算激子分裂：\n$$\n\\Delta \\;=\\; \\sqrt{\\delta^2 + 4J^2} \\;=\\; \\sqrt{(50\\,\\mathrm{cm}^{-1})^2 + 4(100\\,\\mathrm{cm}^{-1})^2} \\;=\\; \\sqrt{2500 + 40000}\\,\\mathrm{cm}^{-1} \\;=\\; \\sqrt{42500}\\,\\mathrm{cm}^{-1} \\;\\approx\\; 206\\,\\mathrm{cm}^{-1}.\n$$\n相关的角频率为\n$$\n\\Omega \\;=\\; 2\\pi c\\,\\tilde{\\nu} \\;=\\; 2\\pi \\times (3.00\\times 10^{10}\\,\\mathrm{cm\\,s}^{-1}) \\times (206\\,\\mathrm{cm}^{-1})\n\\;\\approx\\; 3.88\\times 10^{13}\\,\\mathrm{s}^{-1}.\n$$\n在 $\\tau_c = 50\\,\\mathrm{fs} = 5.0\\times 10^{-14}\\,\\mathrm{s}$ 的情况下，无量纲乘积为\n$$\n\\Omega \\tau_c \\;\\approx\\; (3.88\\times 10^{13}\\,\\mathrm{s}^{-1}) \\times (5.0\\times 10^{-14}\\,\\mathrm{s}) \\;\\approx\\; 1.94.\n$$\n这个值在几的量级，不是渐近地大，但足够大于 1，以至于以 $\\pm \\Omega$ 振荡的交叉项将在热库记忆时间内被显著平均。因此，在这种情况下，激子基中的久期近似是中等准确的。在位点基中，相同的 $\\Omega$ 控制着布居数和相干项之间的混合；由于位点布居数不是能量本征算符，舍弃它们与相干项的耦合，会移除在该基表示的相关时间尺度上没有与零强分离的频率项。因此，激子基更好地满足久期判据。\n\n我们现在评估每个选项：\n\nA. 此选项陈述了激子基判据 $\\lvert \\Omega \\rvert \\tau_c \\gg 1$ 并指出，对于给定参数，$\\Omega \\tau_c \\approx 1.94$，这使得激子基中的久期近似具有中等准确性，并且比位点基中的久期近似更可靠。这与我们的推导一致：久期判据自然地在能量（激子）基中表达，并且数值估计支持了其中等有效性。结论：正确。\n\nB. 这声称局域热库耦合使得位点基中的久期近似更准确或精确。这是一个误解：久期近似关注的是 $H_{\\mathrm{S}}$ 的玻尔频率的分离，而不是 $H_{\\mathrm{SB}}$ 在特定基中的对角结构。局域耦合不保证位点基布居数是慢算符；事实上，它们被 $H_{\\mathrm{S}}$ 以频率 $\\Omega$ 耦合。结论：不正确。\n\nC. 这声称久期近似的准确性具有基无关性。久期近似在基变换下不是不变的，因为 Redfield 张量划分为振荡扇区依赖于能量本征基。在不同基中进行久期近似会产生不同的动力学和准确性。结论：不正确。\n\nD. 这通过断言在弱耦合下两种基都永远不准确，从而夸大了其局限性。激子基中经过久期近似的 Redfield 方程通常会产生一个 Gorini-Kossakowski-Sudarshan-Lindblad 类型的生成元，并且在 $\\Omega \\tau_c \\gg 1$ 且耦合较弱时是准确的；我们的估计表明在这里具有中等有效性。虽然对角化 Redfield 张量（或构造一个全局 Lindblad 形式）可能有用，但在弱耦合、频率分离良好的区域中，这并非唯一的要求。结论：不正确。\n\n因此，最佳选择是激子基，对于给定参数，久期近似的合理性由玻尔频率相对于热库记忆时间的分离程度来证明。", "answer": "$$\\boxed{A}$$", "id": "2669326"}, {"introduction": "前面的练习将弛豫速率视为给定参数，但它们的物理起源是什么？这个计算练习 [@problem_id:2669298] 旨在弥合唯象的主方程与系统-浴相互作用的微观模型之间的鸿沟。您将学习如何从给定的环境谱密度 $J(\\omega)$ 和温度 $T$ 出发，计算量子跃迁速率，并将其与经典的Arrhenius定律进行比较，从而深入理解活化能等宏观动力学参数的量子起源。", "problem": "考虑一个嵌入在振动环境中的两能级子系统，该环境被建模为温度为 $T$ 且处于热平衡态的谐振子热库。该子系统有一个低能态 $i$ 和一个高能态 $j$，两者被能量差 $\\Delta = E_j - E_i > 0$（一个玻尔频率）分开。系统通过一个无量纲强度为 $g$ 的单个系统算符与热库弱耦合，热库由谱密度 $J(\\omega)$ 表征。在弱耦合、玻恩-马尔可夫和久期近似下进行研究，从而使约化动力学可以写成 Gorini–Kossakowski–Sudarshan–Lindblad (GKSL) 形式，该形式在这些假设下等价于久期雷德菲尔德主方程。使用自然单位制，其中 $\\hbar = 1$ 和 $k_\\mathrm{B} = 1$，因此能量、角频率和温度共享相同的单位，速率常数以 $\\mathrm{s}^{-1}$ 表示。\n\n从热谐振子环境的热库关联函数及其功率谱的定义出发，使用涨落-耗散关系，在 GKSL/Redfield 描述下，推导从低能态 $i$ 到高能态 $j$ 的跃迁速率，该速率应以 $J(\\omega)$ 和 $T$ 表示。您的推导必须从以下基础出发：\n- 对于弱耦合到热谐振子热库的两能级系统，在玻恩-马尔可夫-久期近似下，跃迁速率由在系统玻尔频率处取值的热库功率谱给出。\n- 温度为 $T$ 时，模式角频率为 $\\omega$ 的玻色-爱因斯坦占据数的定义。\n- 热库关联函数与谱密度之间的关系，确保细致平衡。\n\n然后：\n1. 使用推导出的表达式，编写一个程序，对于给定的 $g$、$\\Delta$ 和 $J(\\omega)$，数值计算向上跃迁速率 $k_{i \\to j}(T)$。\n2. 通过对 $\\ln k$ 与 $1/T$ 进行线性最小二乘回归，将 Arrhenius 模型 $k_\\mathrm{Arr}(T) = A \\exp(-E_a/T)$ 拟合到所提供温度集上数值计算出的 $k_{i \\to j}(T)$ 值，以提取最佳拟合的指前因子 $A$ 和活化能 $E_a$（两者单位均为 $\\mathrm{s}^{-1}$）。\n3. 使用自然对数均方根偏差量化数值计算的 $k_{i \\to j}(T)$ 和 Arrhenius 拟合之间的差异，\n$$\n\\mathrm{RMSE}_{\\ln} = \\sqrt{\\frac{1}{N}\\sum_{n=1}^N \\left(\\ln k_{i \\to j}(T_n) - \\ln k_\\mathrm{Arr}(T_n)\\right)^2},\n$$\n其中 $N$ 是温度集中的温度数量。\n\n使用以下包含三个案例的测试套件。所有量均采用自然单位制，其中 $\\hbar = 1$ 且 $k_\\mathrm{B} = 1$，因此速率以 $\\mathrm{s}^{-1}$ 报告，温度和能量也以 $\\mathrm{s}^{-1}$ 报告。\n\n定义以下谱密度：\n- Drude-Lorentz（也称为 Debye）谱密度：$J_\\mathrm{D}(\\omega) = \\dfrac{2 \\lambda \\, \\omega_c \\, \\omega}{\\omega^2 + \\omega_c^2}$。\n- 超欧姆型（带指数截断的立方关系）：$J_\\mathrm{S}(\\omega) = \\eta \\, \\omega^3 \\, e^{-\\omega/\\omega_c}$。\n\n测试案例：\n- 案例 1（低温区，Drude-Lorentz）：$g = 0.05$，$\\Delta = 80.0$，$\\lambda = 50.0$，$\\omega_c = 100.0$，温度 $T \\in \\{10.0, 15.0, 20.0, 25.0\\}$。\n- 案例 2（高温区，Drude-Lorentz）：$g = 0.05$，$\\Delta = 80.0$，$\\lambda = 50.0$，$\\omega_c = 100.0$，温度 $T \\in \\{200.0, 400.0, 800.0, 1600.0\\}$。\n- 案例 3（超欧姆型）：$g = 0.05$，$\\Delta = 50.0$，$\\eta = 1.0 \\times 10^{-4}$，$\\omega_c = 200.0$，温度 $T \\in \\{20.0, 50.0, 100.0, 200.0\\}$。\n\n您的程序必须：\n- 在温度 $T$ 下实现玻色-爱因斯坦占据数。\n- 实现上述定义的 $J_\\mathrm{D}(\\omega)$ 和 $J_\\mathrm{S}(\\omega)$。\n- 对每个案例中指定的温度，使用您推导的 Redfield/GKSL 表达式计算 $k_{i \\to j}(T)$。\n- 对每个案例进行 Arrhenius 拟合，并计算 $\\mathrm{RMSE}_{\\ln}$。\n- 对每个案例，输出一个包含三个数字的列表：拟合的活化能 $E_a$（单位 $\\mathrm{s}^{-1}$）、拟合的指前因子 $A$（单位 $\\mathrm{s}^{-1}$）和 $\\mathrm{RMSE}_{\\ln}$（无量纲）。最终输出必须是单行文本，包含三个案例的结果，形式为逗号分隔的列表之列表，例如 $[[E_{a,1},A_1,\\mathrm{RMSE}_{\\ln,1}],[E_{a,2},A_2,\\mathrm{RMSE}_{\\ln,2}],[E_{a,3},A_3,\\mathrm{RMSE}_{\\ln,3}]]$。\n\n不使用角度单位。不使用百分比。所有请求的量均为浮点数。您程序的最终打印输出必须是严格的一行，其中包含按指定格式排列的列表之列表，不得包含任何额外文本。", "solution": "该问题陈述具有科学依据、是良定且客观的。它提出了一个开放量子系统理论中的标准问题，特别是在玻恩-马尔可夫-久期近似下计算跃迁速率，并随后通过 Arrhenius 模型进行数据分析。所有必需的参数和函数都已明确定义，且前提与量子统计力学的既定原理一致。因此，该问题被认为是有效的，并将提供解答。\n\n主要任务是推导一个能量差为 $\\Delta = E_j - E_i > 0$ 的两能级系统在温度 $T$ 下弱耦合到热谐振子热库时的向上跃迁速率 $k_{i \\to j}(T)$ 的表达式。该推导将在弱耦合、玻恩-马尔可夫和久期近似的框架内进行，这些近似是 Gorini–Kossakowski–Sudarshan–Lindblad (GKSL) 和久期雷德菲尔德主方程的基础。\n\n根据费米黄金定则，两个系统本征态（例如，从初态 $|a\\rangle$ 到末态 $|b\\rangle$）之间的跃迁速率与相互作用哈密顿量的矩阵元的平方 $|\\langle b | H_{\\text{int}} | a \\rangle|^2$ 以及末态密度成正比。对于与热储相互作用的系统，该速率用在跃迁频率 $\\omega_{ba} = E_b - E_a$ 处取值的热库算符涨落的功率谱来表示。相互作用哈密顿量由 $H_{\\text{int}} = g S \\otimes B$ 给出，其中 $S$ 是一个无量纲的系统算符，$g$ 是耦合强度，$B$ 是一个热库算符。对于能量本征态 $|i\\rangle$ 和 $|j\\rangle$ 之间的跃迁，系统算符 $S$ 必须具有非零的非对角矩阵元，通常取为泡利算符 $S = \\sigma_x = |i\\rangle\\langle j| + |j\\rangle\\langle i|$。从态 $|a\\rangle$ 到 $|b\\rangle$ 的跃迁速率则由下式给出：\n$$\nk_{a \\to b} = g^2 |\\langle b|S|a\\rangle|^2 \\mathcal{S}(\\omega_{ba})\n$$\n其中 $\\mathcal{S}(\\omega) = \\int_{-\\infty}^{\\infty} dt \\, e^{i\\omega t} \\langle B(t)B(0) \\rangle_{\\text{B}}$ 是热库算符的量子功率谱。对于 $S=\\sigma_x$，矩阵元 $|\\langle j|S|i\\rangle|^2 = 1$。向上跃迁 $i \\to j$ 对应于一个正的跃迁频率 $\\omega_{ji} = \\Delta > 0$，因此速率为 $k_{i \\to j} = g^2 \\mathcal{S}(\\Delta)$。\n\n关键步骤是将功率谱 $\\mathcal{S}(\\omega)$ 与谱密度 $J(\\omega)$ 及温度 $T$ 联系起来。这通过量子涨落-耗散定理实现。对于处于热平衡态的谐振子热库，热库关联函数 $\\langle B(t)B(0) \\rangle_{\\text{B}}$ 可以用 $J(\\omega)$ 来表示。其傅里叶变换，即功率谱，可表示为：\n$$\n\\mathcal{S}(\\omega) = 2\\pi J(|\\omega|)\n\\begin{cases}\n    [n(|\\omega|, T) + 1] & \\text{if } \\omega > 0 \\\\\n    n(|\\omega|, T)       & \\text{if } \\omega < 0\n\\end{cases}\n$$\n此形式明确满足细致平衡条件，也称为 Kubo-Martin-Schwinger (KMS) 条件，即 $\\mathcal{S}(-\\omega) = e^{-\\omega/T} \\mathcal{S}(\\omega)$，这里使用了自然单位制 ($k_B=1$)。函数 $n(\\omega, T)$ 是温度为 $T$ 时，频率为 $\\omega$ 的玻色子模式的玻色-爱因斯坦占据数：\n$$\nn(\\omega, T) = \\frac{1}{e^{\\omega/T} - 1}\n$$\n$\\omega > 0$ 的情况对应于系统向热库发射能量 $\\omega$ 的过程（退激发），其速率与 $n(\\omega, T) + 1$（受激发射和自发发射）成正比。$\\omega < 0$ 的情况对应于系统从热库吸收能量 $|\\omega|$ 的过程（激发），其速率与 $n(|\\omega|, T)$ 成正比。\n\n向上跃迁 $i \\to j$ 是一个激发过程，需要系统从热库吸收能量 $\\Delta > 0$。相关的跃迁频率是 $\\omega = \\Delta$。然而，速率是由在系统跃迁频率处取值的功率谱决定的，在一些约定中，吸收过程的频率取负号，或者直接与热库响应的吸收分量相关。为避免符号歧义，我们认识到吸收能量 $\\Delta$ 的速率必须与 $n(\\Delta, T)$ 成正比。先验的零温跃迁速率（仅对发射过程非零）被发现与 $2\\pi g^2 J(\\Delta)$ 成正比。然后通过玻色-爱因斯坦因子引入温度依赖性。\n激发速率（吸收能量 $\\Delta$）为：\n$$\nk_{i \\to j}(T) = 2\\pi g^2 J(\\Delta) n(\\Delta, T)\n$$\n退激发速率（发射能量 $\\Delta$）为：\n$$\nk_{j \\to i}(T) = 2\\pi g^2 J(\\Delta) [n(\\Delta, T) + 1]\n$$\n这组速率正确地满足细致平衡：$k_{i \\to j} / k_{j \\to i} = n(\\Delta, T) / [n(\\Delta, T) + 1] = e^{-\\Delta/T}$。问题要求的是向上跃迁速率 $k_{i \\to j}(T)$。\n\n我们现在分析它在两种极限情况下的行为：\n1.  低温极限 ($T \\ll \\Delta$)：此时 $\\Delta/T \\gg 1$，因此 $e^{\\Delta/T} \\gg 1$。玻色-爱因斯坦因子简化为 $n(\\Delta, T) \\approx e^{-\\Delta/T}$。速率变为：\n    $$\n    k_{i \\to j}(T) \\approx [2\\pi g^2 J(\\Delta)] e^{-\\Delta/T}\n    $$\n    这恰好是 Arrhenius 形式 $k(T) = A e^{-E_a/T}$，其中活化能 $E_a = \\Delta$，指前因子 $A = 2\\pi g^2 J(\\Delta)$。\n2.  高温极限 ($T \\gg \\Delta$)：此时 $\\Delta/T \\ll 1$，因此我们可以展开指数 $e^{\\Delta/T} \\approx 1 + \\Delta/T$。玻色-爱因斯坦因子变为 $n(\\Delta, T) \\approx (\\Delta/T)^{-1} = T/\\Delta$。速率变为：\n    $$\n    k_{i \\to j}(T) \\approx 2\\pi g^2 J(\\Delta) \\frac{T}{\\Delta}\n    $$\n    在此区域，速率与温度成线性关系，不遵循 Arrhenius 定律。预期对 Arrhenius 模型的拟合效果会很差。\n\n问题的数值计算部分对每个测试案例涉及以下步骤：\n1.  使用给定参数定义指定的谱密度 $J_\\mathrm{D}(\\omega)$ 或 $J_\\mathrm{S}(\\omega)$。\n2.  使用推导出的公式，为所提供集合中的每个温度 $T_n$ 计算向上跃迁速率 $k_{i \\to j}(T_n)$：\n    $$\n    k_n = k_{i \\to j}(T_n) = 2\\pi g^2 J(\\Delta) \\frac{1}{e^{\\Delta/T_n} - 1}\n    $$\n3.  为了拟合 Arrhenius 模型 $k_\\mathrm{Arr}(T) = A \\exp(-E_a/T)$，我们通过取自然对数将其线性化：$\\ln k_\\mathrm{Arr}(T) = \\ln A - E_a (1/T)$。\n4.  对数据点 $(x_n, y_n) = (1/T_n, \\ln k_n)$ 执行线性最小二乘回归。这将得到最佳拟合直线 $y = mx+c$ 的斜率 $m$ 和截距 $c$。\n5.  接着提取 Arrhenius 参数：$E_a = -m$ 和 $A = e^c$。\n6.  拟合优度通过对数均方根偏差来量化：\n    $$\n    \\mathrm{RMSE}_{\\ln} = \\sqrt{\\frac{1}{N}\\sum_{n=1}^N (\\ln k_n - (m(1/T_n) + c))^2}\n    $$\n对三个指定的案例实施此程序，以获得所需的数值结果。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by computing transition rates, fitting them to an Arrhenius model,\n    and calculating the fit's RMSE for three different test cases.\n    \"\"\"\n\n    # Define spectral density functions\n    def make_drude_lorentz(lambda_val, omega_c):\n        \"\"\"Creates a Drude-Lorentz spectral density function.\"\"\"\n        def J(omega):\n            if omega == 0:\n                return 0.0\n            return (2 * lambda_val * omega_c * omega) / (omega**2 + omega_c**2)\n        return J\n\n    def make_super_ohmic(eta, omega_c):\n        \"\"\"Creates a super-ohmic spectral density function.\"\"\"\n        def J(omega):\n            if omega = 0: # Defined for omega > 0\n                return 0.0\n            return eta * (omega**3) * np.exp(-omega / omega_c)\n        return J\n\n    # Bose-Einstein occupation number\n    def bose_einstein(omega, T):\n        \"\"\"Calculates the Bose-Einstein occupation number.\"\"\"\n        if T = 0 or omega = 0:\n            return 0.0\n        # For large x, np.exp(x) returns inf, and 1/inf is 0.0, which is correct.\n        arg = omega / T\n        if arg > 700: # Avoid overflow in intermediate steps if any, np.exp(709) is finite.\n            return 0.0\n        return 1.0 / (np.exp(arg) - 1.0)\n\n    # Transition rate function\n    def calculate_rate(g, delta, T, J_func):\n        \"\"\"Calculates the upward transition rate k_i->j.\"\"\"\n        J_at_delta = J_func(delta)\n        n_at_delta = bose_einstein(delta, T)\n        return 2 * np.pi * g**2 * J_at_delta * n_at_delta\n\n    test_cases = [\n        {\n            \"name\": \"Case 1\", \"g\": 0.05, \"delta\": 80.0,\n            \"J_type\": \"DL\", \"J_params\": {\"lambda_val\": 50.0, \"omega_c\": 100.0},\n            \"temps\": np.array([10.0, 15.0, 20.0, 25.0])\n        },\n        {\n            \"name\": \"Case 2\", \"g\": 0.05, \"delta\": 80.0,\n            \"J_type\": \"DL\", \"J_params\": {\"lambda_val\": 50.0, \"omega_c\": 100.0},\n            \"temps\": np.array([200.0, 400.0, 800.0, 1600.0])\n        },\n        {\n            \"name\": \"Case 3\", \"g\": 0.05, \"delta\": 50.0,\n            \"J_type\": \"SO\", \"J_params\": {\"eta\": 1.0e-4, \"omega_c\": 200.0},\n            \"temps\": np.array([20.0, 50.0, 100.0, 200.0])\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        g = case[\"g\"]\n        delta = case[\"delta\"]\n        temps = case[\"temps\"]\n\n        if case[\"J_type\"] == \"DL\":\n            J_func = make_drude_lorentz(**case[\"J_params\"])\n        elif case[\"J_type\"] == \"SO\":\n            J_func = make_super_ohmic(**case[\"J_params\"])\n\n        # 1. Compute rates\n        rates = np.array([calculate_rate(g, delta, T, J_func) for T in temps])\n\n        # 2. Prepare data for linear regression\n        # y = ln(k), x = 1/T\n        # ln(k) = ln(A) - Ea * (1/T)\n        # y = c + m*x, where c = ln(A), m = -Ea\n        x_data = 1.0 / temps\n        y_data = np.log(rates)\n\n        # 3. Perform linear least-squares fit (degree 1 polynomial)\n        # np.polyfit returns [m, c]\n        m, c = np.polyfit(x_data, y_data, 1)\n        \n        # 4. Extract Arrhenius parameters\n        Ea = -m\n        A = np.exp(c)\n\n        # 5. Calculate RMSE_ln\n        y_pred = m * x_data + c\n        residuals = y_data - y_pred\n        rmse_ln = np.sqrt(np.mean(residuals**2))\n\n        results.append([Ea, A, rmse_ln])\n\n    # Final print statement in the exact required format\n    # Using a more controlled formatting for floating point numbers\n    formatted_results = []\n    for res_list in results:\n        formatted_list = f\"[{','.join(f'{v:.8e}' for v in res_list)}]\"\n        formatted_results.append(formatted_list)\n    \n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2669298"}]}