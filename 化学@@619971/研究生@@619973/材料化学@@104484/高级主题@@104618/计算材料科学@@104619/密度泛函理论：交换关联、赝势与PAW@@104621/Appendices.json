{"hands_on_practices": [{"introduction": "在任何平面波密度泛函理论计算中，选择一个合适的动能截断能 $E_{\\mathrm{cut}}$ 是平衡计算精度与成本的关键。本练习将引导您从基本原理出发，推导总能量收敛误差与截断能之间的定量关系，并展示赝势的光滑度如何显著影响收敛速度。通过亲自推导和计算，您将掌握进行可靠、高效DFT计算的基本功，为后续更复杂的模拟打下坚实基础 [@problem_id:2480412]。", "problem": "考虑在原子单位制下，密度泛函理论（DFT）中 Kohn–Sham 轨道的平面波离散化，其中动能截断能 $E_{\\mathrm{cut}}$ 在倒易空间中定义了一个半径为 $k_c$ 的球，满足 $k_c = \\sqrt{2 E_{\\mathrm{cut}}}$。在 $k_c$ 处截断平面波基组会移除轨道的高频分量，并导致总能量发生变分性增加。假设主要的截断误差来源于被忽略的高 $k$ 尾部的动能贡献，并且交换相关和静电贡献足够光滑，以至于在渐近区域，它们被忽略的尾部与动能贡献相比，要么衰减得更快，要么可以忽略不计。\n\n使用以下经过充分检验的事实作为基本依据：\n(1) 在原子单位制中，平面波分量 $\\mathbf{k}$ 的动能贡献正比于 $k^2$。\n(2) 对于足够大的 $k_c$，在 $k_c$ 处截断倒易空间所产生的忽略误差，可以通过对平面波振幅平方 $|c_{\\mathbf{k}}|^2$ 的高 $k$ 尾部进行积分来建模。对于许多物理相关的情况，该振幅平方的渐近行为服从幂律 $|c_{\\mathbf{k}}|^2 \\sim A k^{-p}$，其中 $p>3$ 且 $A>0$。\n(3) 对于库仑奇点附近的全电子轨道，Kato 尖点条件意味着存在非解析性，这导致了较慢的高 $k$ 衰减（一个代表性情况是 $p=4$）。而对于在选定的核半径 $r_c$ 内具有足够光滑赝波函数的保范赝势，核尖点的移除和强制施加的光滑性会产生更快的高 $k$ 衰减（例如，当赝波函数在 $r_c$ 处至少二阶连续可微时，一个代表性情况是 $p=6$）。\n\n基于这些依据，通过将误差建模为对被忽略的倒易空间区域的积分，推导出由于在 $k_c$ 处截断而产生的总能量误差 $\\Delta E(E_{\\mathrm{cut}})$ 的渐近主阶标度关系（用 $p$ 和 $k_c$ 表示）。将所有几何和归一化常数视为被吸收进一个单一的正预因子 $K$ 中，该因子取决于材料的细节和赝势的构造（包括 $r_c$ 的选择），从而使您的推导得出一个关于 $k_c$ 并因此关于 $E_{\\mathrm{cut}}$ 的显式幂律依赖关系。\n\n然后，使用您推导的表达式，实现一个算法，对于给定的 $(K,p,\\varepsilon)$（其中 $p>3$），计算满足渐近误差界限 $\\Delta E(E_{\\mathrm{cut}}) \\le \\varepsilon$ 的最小 $E_{\\mathrm{cut}}$（以 Hartree 为单位）。角度不出现；所有能量必须以 Hartree 表示。返回的数值答案需四舍五入到六位小数。\n\n对于氧化镁（MgO），考虑以下测试套件，该套件捕捉了全电子参考态与两种仅在核半径 $r_c$ 选择上有所不同的保范赝势（NCPP）构造之间的比较。较大的 $r_c$ 对应于一个具有较小预因子 $K$ 的“软”赝势；较小的 $r_c$ 对应于一个具有较大预因子 $K$ 的“硬”赝势。使用给定的代表性指数 $p$。\n\n测试套件（所有能量单位为 Hartree）：\n- 情况 1（MgO，全电子参考）：$p=4$，$K=0.01$，目标容差 $\\varepsilon=1\\times 10^{-3}$。\n- 情况 2（MgO，具有较小 $r_c$ 的 NCPP [较硬]）：$p=6$，$K=0.02$，目标容差 $\\varepsilon=1\\times 10^{-3}$。\n- 情况 3（MgO，具有较大 $r_c$ 的 NCPP [较软]）：$p=6$，$K=0.005$，目标容差 $\\varepsilon=1\\times 10^{-3}$。\n- 情况 4（MgO，全电子参考，更严格的容差）：$p=4$，$K=0.01$，目标容差 $\\varepsilon=1\\times 10^{-6}$。\n- 情况 5（用于鲁棒性测试的边界附近假设极限光滑度）：$p=3.2$，$K=0.001$，目标容差 $\\varepsilon=1\\times 10^{-3}$。\n\n您的程序必须：\n- 使用您推导的公式，计算满足情况 1–5 容差的最小 $E_{\\mathrm{cut}}$（以 Hartree 为单位）。\n- 此外，使用情况 1-3 的结果，计算当 $\\varepsilon=1\\times 10^{-3}$ 时的比率 $E_{\\mathrm{cut}}^{\\mathrm{NCPP\\;small}\\;r_c} / E_{\\mathrm{cut}}^{\\mathrm{AE}}$ 和 $E_{\\mathrm{cut}}^{\\mathrm{NCPP\\;large}\\;r_c} / E_{\\mathrm{cut}}^{\\mathrm{AE}}$。\n\n最终输出格式：\n- 您的程序应生成一行输出，其中包含一个用方括号括起来的逗号分隔列表，结果按以下顺序排列：\n  $[E_{\\mathrm{cut}}^{(1)},E_{\\mathrm{cut}}^{(2)},E_{\\mathrm{cut}}^{(3)},R_{\\mathrm{small}/\\mathrm{AE}},R_{\\mathrm{large}/\\mathrm{AE}},E_{\\mathrm{cut}}^{(4)},E_{\\mathrm{cut}}^{(5)}]$,\n  其中每个条目都四舍五入到六位小数，$E_{\\mathrm{cut}}^{(i)}$ 是情况 $i=1,\\dots,5$ 的最小截断能，而 $R_{\\mathrm{small}/\\mathrm{AE}}$ 和 $R_{\\mathrm{large}/\\mathrm{AE}}$ 是上面定义的两个比率。\n\n科学真实性和解释要求：\n- 根据上述第一性原理推导误差的标度关系，展示幂律中的指数如何依赖于 $p$，以及 $r_c$ 如何定性地影响 $K$。\n- 确保您的算法明确覆盖了数学边界条件 $p>3$；所提供的测试套件遵守了这一点。\n- 所有能量均以 Hartree 表示，并提供四舍五入到六位小数的最终数值输出。", "solution": "所提出的问题是计算材料科学中一个有效的练习，其基础是密度泛函理论（DFT）的原理。该问题提法恰当、客观，并包含了完整推导和求解所需的所有信息。我们将着手解决。\n\n主要目标是推导总能量截断误差 $\\Delta E$ 与平面波动能截断能 $E_{\\mathrm{cut}}$ 之间的标度关系，然后应用此关系来计算给定误差容差 $\\varepsilon$ 所需的截断能。\n\n问题陈述，Kohn-Sham 轨道在平面波基组中展开。该基组被截断，只包含动能（在原子单位制下为 $\\frac{1}{2}k^2$）小于截断能 $E_{\\mathrm{cut}}$ 的平面波 $\\mathbf{k}$。这在倒易空间中定义了一个半径为 $k_c$ 的球，使得 $\\frac{1}{2}k_c^2 = E_{\\mathrm{cut}}$，从而得出 $k_c = \\sqrt{2E_{\\mathrm{cut}}}$。\n\n问题明确指示我们通过对平面波振幅平方 $|c_{\\mathbf{k}}|^2$ 的高 $k$ 尾部进行积分来对截断误差 $\\Delta E$ 进行建模。这是一个作为前提提供的建模假设。因此，误差 $\\Delta E$ 与被截断系数的总权重成正比。\n\n$$\n\\Delta E(k_c) \\propto \\int_{|\\mathbf{k}| > k_c} |c_{\\mathbf{k}}|^2 \\, d^3k\n$$\n\n给定大 $k = |\\mathbf{k}|$ 时振幅平方的渐近行为为 $|c_{\\mathbf{k}}|^2 \\sim A k^{-p}$，其中 $A > 0$ 且 $p > 3$。由于被积函数是球对称的，我们可以转换到倒易空间中的球坐标系，其中的体积元为 $d^3k = 4\\pi k^2 dk$。积分变为：\n\n$$\n\\Delta E(k_c) \\propto \\int_{k_c}^{\\infty} (A k^{-p}) (4\\pi k^2 dk)\n$$\n\n我们将所有比例常数（包括 $A$ 和 $4\\pi$）合并为一个单一的预因子。我们将关系 $|c_{\\mathbf{k}}|^2 \\approx A k^{-p}$ 中的常数部分作为问题数据中给出的预因子 $K$ 的基础。一个恰当的形式化模型是将物理相关的预因子与积分的普适数学结构分离开来，即设误差与 $K$ 和积分结果成正比。\n\n$$\n\\Delta E(k_c) = \\text{const} \\cdot \\int_{k_c}^{\\infty} k^{2-p} dk\n$$\n\n该积分的计算结果为：\n$$\n\\int_{k_c}^{\\infty} k^{2-p} dk = \\left[ \\frac{k^{3-p}}{3-p} \\right]_{k_c}^{\\infty}\n$$\n\n要使该积分收敛，在积分上限处，$k$ 的指数必须小于 $-1$。但事实并非如此。让我重新审视一下前提。啊，前提是“通过对平面波振幅平方 $|c_{\\mathbf{k}}|^2$ 的高 k 尾部进行积分来建模”。这意味着误差 *本身* $\\Delta E$ 直接与振幅平方的积分成标度关系，而不是动能密度。这是收敛性分析中一种常见的启发式模型。让我们根据这一明确指示继续。因此，积分为：\n$$\n\\Delta E(k_c) \\propto \\int_{k_c}^{\\infty} |c_{\\mathbf{k}}|^2 (4\\pi k^2 dk) \\propto \\int_{k_c}^{\\infty} A k^{-p} k^2 dk = A \\int_{k_c}^{\\infty} k^{2-p} dk\n$$\n该积分的收敛条件是 $2-p < -1$，即 $p > 3$。这与问题陈述一致。该积分的计算结果为：\n$$\n\\int_{k_c}^{\\infty} k^{2-p} dk = \\left[ \\frac{k^{3-p}}{3-p} \\right]_{k_c}^{\\infty} = 0 - \\frac{k_c^{3-p}}{3-p} = \\frac{k_c^{3-p}}{p-3}\n$$\n因此，渐近误差的形式为：\n$$\n\\Delta E(k_c) = K' \\frac{k_c^{3-p}}{p-3}\n$$\n其中 $K'$ 是一个包含 $A$ 和 $4\\pi$ 的预因子。问题为每种情况都给出了一个预因子 $K$。我们将定义我们的模型，使得 $K$ 就是这个物理预因子，从而得到关系式：\n$$\n\\Delta E(k_c) = \\frac{K}{p-3} k_c^{3-p}\n$$\n现在，我们代入 $k_c = \\sqrt{2 E_{\\mathrm{cut}}}$：\n$$\n\\Delta E(E_{\\mathrm{cut}}) = \\frac{K}{p-3} \\left(\\sqrt{2 E_{\\mathrm{cut}}}\\right)^{3-p} = \\frac{K}{p-3} (2 E_{\\mathrm{cut}})^{\\frac{3-p}{2}}\n$$\n这就是推导出的标度定律。它正确地表明，对于更大的 $p$（更光滑的势），指数 $\\frac{3-p}{2}$ 的负值更大，导致误差随 $E_{\\mathrm{cut}}$ 的增加而更快地衰减。正如预期的那样，较小的预因子 $K$（更软的势）在给定截断能下也会减小误差。\n\n为了找到满足目标容差 $\\varepsilon$ 的最小截断能 $E_{\\mathrm{cut}}$，我们令 $\\Delta E(E_{\\mathrm{cut}}) = \\varepsilon$ 并求解 $E_{\\mathrm{cut}}$：\n$$\n\\varepsilon = \\frac{K}{p-3} (2 E_{\\mathrm{cut}})^{\\frac{3-p}{2}}\n$$\n重新整理各项以分离出 $E_{\\mathrm{cut}}$：\n$$\n(2 E_{\\mathrm{cut}})^{\\frac{3-p}{2}} = \\frac{\\varepsilon (p-3)}{K}\n$$\n将两边同时取 $\\frac{2}{3-p}$ 次幂，即 $-\\frac{2}{p-3}$ 次幂：\n$$\n2 E_{\\mathrm{cut}} = \\left( \\frac{\\varepsilon (p-3)}{K} \\right)^{\\frac{2}{3-p}} = \\left( \\left( \\frac{\\varepsilon (p-3)}{K} \\right)^{-1} \\right)^{\\frac{2}{p-3}} = \\left( \\frac{K}{\\varepsilon(p-3)} \\right)^{\\frac{2}{p-3}}\n$$\n最后，我们得到所需动能截断能的表达式：\n$$\nE_{\\mathrm{cut}} = \\frac{1}{2} \\left(\\frac{K}{\\varepsilon(p-3)}\\right)^{\\frac{2}{p-3}}\n$$\n对于给定的条件 $p>3$ 以及为正的先验常数 $K$ 和 $\\varepsilon$，该公式是良定义的。此表达式将被实现以解决问题的数值部分。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the minimum kinetic energy cutoff E_cut for given DFT convergence\n    parameters and calculates ratios between different potential types.\n    \"\"\"\n\n    # The formula for E_cut is derived from the asymptotic error model:\n    # Delta_E = (K / (p-3)) * (2 * E_cut)^((3-p)/2)\n    # Solving for E_cut for a given error tolerance epsilon gives:\n    # E_cut = (1/2) * (K / (epsilon * (p-3)))^(2 / (p-3))\n    def calculate_ecut(p, K, epsilon):\n        \"\"\"\n        Calculates the minimum kinetic energy cutoff in Hartree.\n\n        Args:\n            p (float): Power-law exponent for the decay of Fourier coefficients.\n            K (float): Prefactor related to the material and potential.\n            epsilon (float): Target energy tolerance in Hartree.\n\n        Returns:\n            float: The calculated E_cut in Hartree.\n        \"\"\"\n        if p <= 3:\n            # This case should not be reached with the given valid problem statement.\n            return float('inf')\n        \n        p_minus_3 = p - 3.0\n        exponent = 2.0 / p_minus_3\n        base = K / (epsilon * p_minus_3)\n        \n        e_cut = 0.5 * (base ** exponent)\n        return e_cut\n\n    # Test suite from the problem statement: (p, K, epsilon)\n    test_cases = [\n        # Case 1: MgO, all-electron reference\n        (4.0, 0.01, 1e-3),\n        # Case 2: MgO, NCPP with smaller r_c (harder)\n        (6.0, 0.02, 1e-3),\n        # Case 3: MgO, NCPP with larger r_c (softer)\n        (6.0, 0.005, 1e-3),\n        # Case 4: MgO, all-electron reference, tighter tolerance\n        (4.0, 0.01, 1e-6),\n        # Case 5: Hypothetical limiting smoothness\n        (3.2, 0.001, 1e-3)\n    ]\n\n    # Calculate E_cut for all cases\n    e_cut_results = [calculate_ecut(p, K, eps) for p, K, eps in test_cases]\n\n    e_cut_1, e_cut_2, e_cut_3, e_cut_4, e_cut_5 = e_cut_results\n    \n    # Calculate required ratios using results from Cases 1-3\n    # Ratio of NCPP (small r_c, harder) to All-Electron cutoff\n    ratio_small_ae = e_cut_2 / e_cut_1\n    \n    # Ratio of NCPP (large r_c, softer) to All-Electron cutoff\n    ratio_large_ae = e_cut_3 / e_cut_1\n\n    # Assemble the final list of results in the specified order\n    final_results = [\n        e_cut_1,\n        e_cut_2,\n        e_cut_3,\n        ratio_small_ae,\n        ratio_large_ae,\n        e_cut_4,\n        e_cut_5\n    ]\n\n    # Format the results to six decimal places for the output string\n    formatted_results = [f'{val:.6f}' for val in final_results]\n    \n    # Print the final output in the exact required format\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2480412"}, {"introduction": "在总能量收敛之后，精确计算原子间的作用力对于几何结构优化、分子动力学模拟和声子谱计算至关重要。本实践将深入探讨计算作用力时由基组不完备性（即Pulay力）引起的误差，您将构建一个定量模型来分析力误差如何依赖于波函数截断能 $E_{\\mathrm{cut}}$ 和电荷密度截断能 $E_{\\rho}$。通过比较超软赝势 (USPP) 和投影缀加波 (PAW) 方法，您将学会如何系统地进行力收敛测试，以确保模拟结果的物理真实性 [@problem_id:2480438]。", "problem": "要求您从第一性原理出发，为在使用平面波的科恩-沈吕九密度泛函理论（DFT）中计算的力的基组不完备性误差，建立一个定量模型。并利用该模型 (i) 对指定的参数集量化力误差的大小；(ii) 设计一个收敛性测试，以选择能确保目标力精度的最小截断能。所涉及的两种赝势族是超软赝势（USPP）和投影缀加波（PAW）。您的程序必须实现您推导出的模型，并为定义的测试套件生成数值输出。\n\n从以下基本依据和核心定义开始：\n\n- 在科恩-沈吕九密度泛函理论（DFT）中，总能量是电子密度的泛函，位于位置 $\\mathbf{R}$ 的原子核所受的力由总能量对 $\\mathbf{R}$ 的负导数给出，即 $ \\mathbf{F} = -\\frac{\\partial E}{\\partial \\mathbf{R}} $。在完备基组中，Hellmann–Feynman 定理给出精确的力；在有限基组中，会出现额外的“Pulay”项。\n- 在以动能截断 $E_{\\mathrm{cut}}$ 截断的平面波基组中，所包含的最大倒易矢量大小为 $k_{\\max}$，它通过自由电子色散关系与 $E_{\\mathrm{cut}}$ 相关。在原子单位（哈特里单位）中，$E = \\frac{k^2}{2}$，其中 $E$ 的单位是哈特里，$k$ 的单位是逆玻尔。请使用 $1 \\mathrm{Ha} = 27.211386245988 \\mathrm{eV}$ 和 $1/a_{0} = 1.88972612456506 \\mathrm{\\AA}^{-1}$，其中 $a_{0} = 0.529177210903 \\mathrm{\\AA}$。\n- 电子密度和缀加电荷在一个以密度截断 $E_{\\rho}$ 为特征的格点上表示，其最大倒易矢量为 $G_{\\max}$，与 $k_{\\max}$ 类似。\n- 对于具有有限可微性的光滑函数，截断超过最大波矢的傅里叶分量会导致一个系统误差，该误差随最大波矢的幂次衰减。更精确地说，如果第 $m$ 阶导数是控制傅里叶尾部的第一个非可积（或衰减不足）的导数，那么在表示导数（以及力）时的截断误差会像 $k_{\\max}^{-(m-1)}$ 一样衰减，其幅度由目标函数的特征高频内容决定。\n\n您必须采纳和使用的模型假设：\n\n- 由波函数基组截断引起的力误差大小由一个有效光滑度指数 $m_{w}$ 和一个特征倒易尺度 $k_{\\mathrm{ref}}$ 控制，其中 $k_{\\mathrm{ref}} \\equiv \\pi / r_{c}$，$r_{c}$ 是有效核半径。类似地，密度/缀加电荷的贡献由 $m_{\\rho}$ 和 $G_{\\mathrm{ref}} \\equiv \\pi / r_{c,\\rho}$ 控制。采用以下数值：\n  - 超软赝势 (USPP)：$m_{w} = 4$, $m_{\\rho} = 2$, $r_{c} = 1.2 \\ \\mathrm{\\AA}$, $r_{c,\\rho} = 0.8 \\ \\mathrm{\\AA}$。\n  - 投影缀加波 (PAW)：$m_{w} = 5$, $m_{\\rho} = 3$, $r_{c} = 0.9 \\ \\mathrm{\\AA}$, $r_{c,\\rho} = 0.7 \\ \\mathrm{\\AA}$。\n- 用 $F_{\\mathrm{true}}$ 表示目标吸附几何构型的完全收敛的力的大小（单位为 $\\mathrm{eV}/\\mathrm{\\AA}$）。总力误差大小 $\\Delta F$ 模型化为波函数截断贡献和密度格点贡献之和。引入与方法相关的无量纲校准因子 $\\alpha_{w}$ 和 $\\alpha_{\\rho}$，用以捕捉交换关联算符光滑度、非局域投影仪结构和有限截断下的 Pulay 残余项的综合效应。使用：\n  - 超软赝势 (USPP)：$\\alpha_{w} = 0.12$, $\\alpha_{\\rho} = 0.04$。\n  - 投影缀加波 (PAW)：$\\alpha_{w} = 0.08$, $\\alpha_{\\rho} = 0.025$。\n- 您的推导必须表明，进入误差模型的衰减指数对于波函数部分为 $p_{w} = m_{w} - 1$，对于密度部分为 $p_{\\rho} = m_{\\rho} - 1$，并且误差可以用由 $k_{\\mathrm{ref}}/k_{\\max}$ 和 $G_{\\mathrm{ref}}/G_{\\max}$ 构建的无量纲比率来表示。您必须使用原子单位关系 $E \\ (\\mathrm{Ha}) = \\frac{k^2}{2}$ 将 $E_{\\mathrm{cut}}$ 和 $E_{\\rho}$（单位为 $\\mathrm{eV}$）转换为 $k_{\\max}$ 和 $G_{\\max}$（单位为 $\\mathrm{\\AA}^{-1}$）。\n\n实现要求：\n\n- 单位：\n  - 平面波截断能 $E_{\\mathrm{cut}}$ 和密度截断能 $E_{\\rho}$ 以 $\\mathrm{eV}$ 为单位指定。\n  - 力和力误差必须以 $\\mathrm{eV}/\\mathrm{\\AA}$ 为单位计算和报告。\n- 角度不出现；不需要角度单位。\n- 您的程序必须计算以下内容：\n  1) 对于下面测试套件中的每个测试用例，预测的力误差大小 $\\Delta F$（单位为 $\\mathrm{eV}/\\mathrm{\\AA}$）。\n  2) 一个收敛性测试，该测试分别为每种方法（USPP 和 PAW）扫描一个平面波截断能的候选列表，并选择使代表性力大小 $F_{\\mathrm{true,ref}}$ 的预测 $\\Delta F$ 低于目标容差 $\\tau$ 的最小 $E_{\\mathrm{cut}}$。对于此收敛性扫描，请使用一个与方法相关的固定密度截断能比率 $E_{\\rho} / E_{\\mathrm{cut}}$。如果没有候选值满足容差，则返回 $-1$。\n- 收敛性测试参数：\n  - 候选列表 $E_{\\mathrm{cut}}^{\\mathrm{cand}} = [25, 30, 35, 40, 50, 60] \\ \\mathrm{eV}$。\n  - 代表性力大小 $F_{\\mathrm{true,ref}} = 0.80 \\ \\mathrm{eV}/\\mathrm{\\AA}$。\n  - 容差 $\\tau = 0.05 \\ \\mathrm{eV}/\\mathrm{\\AA}$。\n  - 比率：USPP 使用 $E_{\\rho} / E_{\\mathrm{cut}} = 12$，PAW 使用 $E_{\\rho} / E_{\\mathrm{cut}} = 8$。\n\n参数值测试套件：\n\n- 用例 $1$：方法 $=$ USPP, $E_{\\mathrm{cut}} = 30 \\ \\mathrm{eV}$, $E_{\\rho} = 180 \\ \\mathrm{eV}$, $F_{\\mathrm{true}} = 0.80 \\ \\mathrm{eV}/\\mathrm{\\AA}$。\n- 用例 $2$：方法 $=$ USPP, $E_{\\mathrm{cut}} = 45 \\ \\mathrm{eV}$, $E_{\\rho} = 200 \\ \\mathrm{eV}$, $F_{\\mathrm{true}} = 0.25 \\ \\mathrm{eV}/\\mathrm{\\AA}$。\n- 用例 $3$：方法 $=$ PAW, $E_{\\mathrm{cut}} = 35 \\ \\mathrm{eV}$, $E_{\\rho} = 280 \\ \\mathrm{eV}$, $F_{\\mathrm{true}} = 1.50 \\ \\mathrm{eV}/\\mathrm{\\AA}$。\n- 用例 $4$：方法 $=$ PAW, $E_{\\mathrm{cut}} = 60 \\ \\mathrm{eV}$, $E_{\\rho} = 360 \\ \\mathrm{eV}$, $F_{\\mathrm{true}} = 0.60 \\ \\mathrm{eV}/\\mathrm{\\AA}$。\n\n输出规范：\n\n- 您的程序应生成单行输出，其中包含一个逗号分隔的列表，用方括号括起来：\n  - 前四个条目是用例 $1$–$4$ 的预测 $\\Delta F$，每个都四舍五入到 $6$ 位小数。\n  - 第五个条目是从候选列表中为 USPP 选择的满足容差的最小 $E_{\\mathrm{cut}}$（单位为 $\\mathrm{eV}$）（如果没有，则为 $-1$）。\n  - 第六个条目是从候选列表中为 PAW 选择的满足容差的最小 $E_{\\mathrm{cut}}$（单位为 $\\mathrm{eV}$）（如果没有，则为 $-1$）。\n- 输出格式示例（非实际答案）：$[0.123456,0.234567,0.345678,0.456789,40,50]$。\n\n科学真实性和约束条件：\n\n- 确保您的推导将傅里叶空间截断与由光滑度指数 $m_{w}$ 和 $m_{\\rho}$ 控制的幂律收敛联系起来，并且您正确地将能量截断转换为倒易矢量大小。\n- 除了从所提供依据推导出的幂律模型外，不要引入任何额外的经验公式。所有未明确提供的常数必须来自上面指定的基本常数和定义。", "solution": "问题陈述已经过验证，被认为是科学上合理、定义明确且完整的。我将继续进行模型的推导及其计算实现。\n\n目标是为使用平面波密度泛函理论（DFT）计算的力中的基组不完备性误差建立一个定量模型。总力误差大小 $\\Delta F$ 被假定为两个独立贡献之和：一个来自波函数基组的截断 $\\Delta F_w$，另一个来自用于电子密度和缀加电荷的实空间格点的截断 $\\Delta F_\\rho$。\n$$\n\\Delta F = \\Delta F_w + \\Delta F_\\rho\n$$\n这两个贡献都源于在有限动能截断下对傅里叶级数表示的截断。问题指出，对于一个函数，如果其第 $m$ 阶导数是第一个傅里叶变换缓慢衰减的导数，那么由于在波矢 $k_{\\max}$ 处的傅里叶截断，在表示该函数导数时产生的误差，其尺度与 $k_{\\max}^{-(m-1)}$ 成正比。力是总能量相对于原子位置的导数，其精确计算取决于波函数和密度表示的质量。因此，力误差 $\\Delta F$ 将继承这种对截断能的幂律依赖性。\n\n该模型将使用无量纲比率构建，并且必须与完全收敛的力的大小 $F_{\\mathrm{true}}$ 以及一个与方法相关的校准因子 $\\alpha$ 成正比。这导出了以下形式的误差模型：\n$$\n\\text{Error Term} = F_{\\mathrm{true}} \\cdot \\alpha \\cdot \\left(\\frac{k_{\\text{characteristic}}}{k_{\\text{cutoff}}}\\right)^{p}\n$$\n其中 $p$ 是衰减指数。\n\n**1. 波函数贡献 ($\\Delta F_w$)**\n\n来自波函数平面波基组的误差贡献由光滑度指数 $m_w$ 控制。相应的衰减指数为 $p_w = m_w - 1$。截断值是由动能截断 $E_{\\mathrm{cut}}$ 决定的最大波矢大小 $k_{\\max}$。特征长度尺度是有效核半径 $r_c$，它定义了一个特征倒易尺度 $k_{\\mathrm{ref}} = \\pi / r_c$。使用无量纲校准因子 $\\alpha_w$，波函数误差贡献为：\n$$\n\\Delta F_w = F_{\\mathrm{true}} \\cdot \\alpha_w \\cdot \\left(\\frac{k_{\\mathrm{ref}}}{k_{\\max}}\\right)^{p_w} = F_{\\mathrm{true}} \\cdot \\alpha_w \\cdot \\left(\\frac{\\pi / r_c}{k_{\\max}}\\right)^{m_w - 1}\n$$\n\n**2. 密度和缀加电荷贡献 ($\\Delta F_\\rho$)**\n\n类似地，来自密度格点的误差贡献由光滑度指数 $m_\\rho$ 控制，其指数为 $p_\\rho = m_\\rho - 1$。截断值是由密度截断 $E_\\rho$ 决定的格点最大倒易矢量大小 $G_{\\max}$。特征长度尺度是 $r_{c,\\rho}$，其倒易尺度为 $G_{\\mathrm{ref}} = \\pi / r_{c,\\rho}$。使用校准因子 $\\alpha_\\rho$，此误差贡献为：\n$$\n\\Delta F_\\rho = F_{\\mathrm{true}} \\cdot \\alpha_\\rho \\cdot \\left(\\frac{G_{\\mathrm{ref}}}{G_{\\max}}\\right)^{p_\\rho} = F_{\\mathrm{true}} \\cdot \\alpha_\\rho \\cdot \\left(\\frac{\\pi / r_{c,\\rho}}{G_{\\max}}\\right)^{m_\\rho - 1}\n$$\n\n**3. 完整模型和单位转换**\n\n总力误差大小的完整模型是：\n$$\n\\Delta F = F_{\\mathrm{true}} \\left[ \\alpha_w \\left(\\frac{\\pi / r_c}{k_{\\max}}\\right)^{m_w - 1} + \\alpha_\\rho \\left(\\frac{\\pi / r_{c,\\rho}}{G_{\\max}}\\right)^{m_\\rho - 1} \\right]\n$$\n为了实现此模型，所有量都必须使用一组一致的单位。我们将使用埃（$\\mathrm{\\AA}$）作为长度单位，逆埃（$\\mathrm{\\AA}^{-1}$）作为倒易矢量单位。能量截断 $E_{\\mathrm{cut}}$ 和 $E_\\rho$ 以电子伏特（$\\mathrm{eV}$）为单位给出。它们必须被转换为相应的波矢 $k_{\\max}$ 和 $G_{\\max}$，单位为 $\\mathrm{\\AA}^{-1}$。\n\n该转换基于原子单位中的自由电子色散关系，$E [\\mathrm{Ha}] = \\frac{k^2}{2}$，其中 $k$ 的单位是逆玻尔 ($a_0^{-1}$)。\n提供的转换常数是：\n- $C_E = 27.211386245988 \\ \\mathrm{eV}/\\mathrm{Ha}$\n- $C_k = 1.88972612456506 \\ \\mathrm{\\AA}^{-1}/(a_0^{-1})$\n\n给定一个以 $\\mathrm{eV}$ 为单位的能量截断 $E_{\\mathrm{cut}}$，我们首先将其转换为哈特里：\n$$\nE_{\\mathrm{cut}} [\\mathrm{Ha}] = \\frac{E_{\\mathrm{cut}} [\\mathrm{eV}]}{C_E}\n$$\n接下来，我们计算相应的原子单位下的波矢大小：\n$$\nk_{\\max} [a_0^{-1}] = \\sqrt{2 \\cdot E_{\\mathrm{cut}} [\\mathrm{Ha}]}\n$$\n最后，我们将其转换为 $\\mathrm{\\AA}^{-1}$：\n$$\nk_{\\max} [\\mathrm{\\AA}^{-1}] = k_{\\max} [a_0^{-1}] \\cdot C_k = \\sqrt{\\frac{2 \\cdot E_{\\mathrm{cut}} [\\mathrm{eV}]}{C_E}} \\cdot C_k\n$$\n同样的公式用于将 $E_\\rho$ 转换为 $G_{\\max}$。由于 $r_c$ 和 $r_{c,\\rho}$ 的单位是 $\\mathrm{\\AA}$，特征尺度 $k_{\\mathrm{ref}}=\\pi/r_c$ 和 $G_{\\mathrm{ref}}=\\pi/r_{c,\\rho}$ 的单位已经是 $\\mathrm{\\AA}^{-1}$。\n\n两种赝势族的参数如下：\n- **超软赝势 (USPP)**: $m_w = 4$, $m_\\rho = 2$, $r_c = 1.2 \\ \\mathrm{\\AA}$, $r_{c,\\rho} = 0.8 \\ \\mathrm{\\AA}$, $\\alpha_w = 0.12$, $\\alpha_\\rho = 0.04$。\n- **投影缀加波 (PAW)**: $m_w = 5$, $m_\\rho = 3$, $r_c = 0.9 \\ \\mathrm{\\AA}$, $r_{c,\\rho} = 0.7 \\ \\mathrm{\\AA}$, $\\alpha_w = 0.08$, $\\alpha_\\rho = 0.025$。\n\n**4. 计算任务**\n\n任务如下：\n1.  使用推导的模型为四个特定测试用例计算 $\\Delta F$。\n2.  对 USPP 和 PAW 两种方法进行收敛性测试。对于给定的候选截断能列表 $E_{\\mathrm{cut}}^{\\mathrm{cand}}$，我们找到能使预测力误差 $\\Delta F \\le \\tau$ 的最小 $E_{\\mathrm{cut}}$，其中 $\\tau = 0.05 \\ \\mathrm{eV}/\\mathrm{\\AA}$。此测试使用代表性力 $F_{\\mathrm{true,ref}} = 0.80 \\ \\mathrm{eV}/\\mathrm{\\AA}$ 和与方法相关的密度截断比率（USPP 为 $E_\\rho/E_{\\mathrm{cut}} = 12$；PAW 为 $E_\\rho/E_{\\mathrm{cut}} = 8$）。如果没有候选截断能满足标准，则结果为 $-1$。\n\n该实现将包含一个基于模型计算 $\\Delta F$ 的函数，然后在每个测试用例和收敛性测试循环中调用该函数。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem: calculate force errors for test cases\n    and perform convergence tests for USPP and PAW methods.\n    \"\"\"\n\n    # --- Physical Constants ---\n    EV_PER_HA = 27.211386245988\n    INV_A_PER_INV_BOHR = 1.88972612456506\n\n    # --- Method-Specific Parameters ---\n    # Keys: m_w, m_rho, r_c, r_c_rho, alpha_w, alpha_rho\n    params = {\n        'USPP': {\n            'm_w': 4, 'm_rho': 2,\n            'r_c': 1.2, 'r_c_rho': 0.8, # in Angstrom\n            'alpha_w': 0.12, 'alpha_rho': 0.04\n        },\n        'PAW': {\n            'm_w': 5, 'm_rho': 3,\n            'r_c': 0.9, 'r_c_rho': 0.7, # in Angstrom\n            'alpha_w': 0.08, 'alpha_rho': 0.025\n        }\n    }\n\n    def convert_energy_to_wavevector(energy_ev):\n        \"\"\"Converts energy cutoff in eV to wavevector in 1/Angstrom.\"\"\"\n        if energy_ev <= 0:\n            return float('inf')\n        energy_ha = energy_ev / EV_PER_HA\n        k_inv_bohr = np.sqrt(2 * energy_ha)\n        k_inv_a = k_inv_bohr * INV_A_PER_INV_BOHR\n        return k_inv_a\n\n    def calculate_force_error(method, E_cut, E_rho, F_true):\n        \"\"\"\n        Calculates the predicted force error magnitude based on the derived model.\n\n        Args:\n            method (str): 'USPP' or 'PAW'.\n            E_cut (float): Wavefunction energy cutoff in eV.\n            E_rho (float): Density energy cutoff in eV.\n            F_true (float): Magnitude of the fully converged force in eV/Angstrom.\n\n        Returns:\n            float: The predicted force error magnitude Delta_F in eV/Angstrom.\n        \"\"\"\n        p = params[method]\n\n        # Wavefunction contribution\n        m_w = p['m_w']\n        p_w = m_w - 1\n        r_c = p['r_c']\n        alpha_w = p['alpha_w']\n        k_ref = np.pi / r_c\n        k_max = convert_energy_to_wavevector(E_cut)\n        \n        delta_F_w = F_true * alpha_w * (k_ref / k_max)**p_w\n\n        # Density/augmentation contribution\n        m_rho = p['m_rho']\n        p_rho = m_rho - 1\n        r_c_rho = p['r_c_rho']\n        alpha_rho = p['alpha_rho']\n        G_ref = np.pi / r_c_rho\n        G_max = convert_energy_to_wavevector(E_rho)\n        \n        delta_F_rho = F_true * alpha_rho * (G_ref / G_max)**p_rho\n        \n        return delta_F_w + delta_F_rho\n\n    # --- Task 1: Calculate force errors for test suite ---\n    test_cases = [\n        {'method': 'USPP', 'E_cut': 30, 'E_rho': 180, 'F_true': 0.80},\n        {'method': 'USPP', 'E_cut': 45, 'E_rho': 200, 'F_true': 0.25},\n        {'method': 'PAW', 'E_cut': 35, 'E_rho': 280, 'F_true': 1.50},\n        {'method': 'PAW', 'E_cut': 60, 'E_rho': 360, 'F_true': 0.60},\n    ]\n\n    force_error_results = []\n    for case in test_cases:\n        error = calculate_force_error(case['method'], case['E_cut'], case['E_rho'], case['F_true'])\n        force_error_results.append(error)\n\n    # --- Task 2: Perform convergence tests ---\n    conv_params = {\n        'E_cut_cand': [25, 30, 35, 40, 50, 60], # in eV\n        'F_true_ref': 0.80, # in eV/Angstrom\n        'tau': 0.05, # in eV/Angstrom\n        'ratios': {\n            'USPP': 12.0,\n            'PAW': 8.0\n        }\n    }\n    \n    convergence_results = []\n    for method in ['USPP', 'PAW']:\n        E_cut_candidates = conv_params['E_cut_cand']\n        ratio = conv_params['ratios'][method]\n        F_true_ref = conv_params['F_true_ref']\n        tau = conv_params['tau']\n\n        optimal_E_cut = -1\n        for E_cut in sorted(E_cut_candidates):\n            E_rho = E_cut * ratio\n            delta_F = calculate_force_error(method, E_cut, E_rho, F_true_ref)\n            if delta_F <= tau:\n                optimal_E_cut = E_cut\n                break\n        convergence_results.append(optimal_E_cut)\n\n    # --- Final Output Formatting ---\n    all_results = [f\"{x:.6f}\" for x in force_error_results] + [str(x) for x in convergence_results]\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2480438"}, {"introduction": "在实际的DFT计算中，由于赝势构造不佳，有时会产生被称为“鬼态”的非物理、虚假的电子态。本练习将教您一种强大的双重诊断方法来识别这些计算赝象。您将学习如何通过寻找两个同步出现的特征来侦测鬼态：一是在投影态密度 (PDOS) 中出现异常尖锐的峰，二是在该能量区域附近的电子态违反了模守恒条件。通过在合成数据上实现这一诊断流程，您将掌握关键的计算问题排查技能，从而能够鉴别真实的电子结构与计算赝象 [@problem_id:2480463]。", "problem": "实现一个程序，该程序使用源自赝势理论和投影缀加波 (PAW) 方法的两个独立数值特征来诊断平面波 Kohn–Sham (KS) 计算中是否存在赝态：一个是逐带范数测试，另一个是投影态密度 (PDOS) 分析。该诊断必须以纯数学术语进行描述，并且不得假定任何特定的电子结构软件包。所有能量必须以电子伏特 (eV) 表示。\n\n给定您以下基本要素和定义来构建您的诊断程序。\n\n1. 基本要素。\n   - 在 KS 形式体系中，单粒子态是厄米本征问题的解，具有明确定义的能带能量 $E_{n\\mathbf{k}}$，这些能量由能带索引 $n$ 和布里渊区 (BZ) 中的晶体动量 $\\mathbf{k}$ 索引。\n   - 在保范赝势和投影缀加波 (PAW) 方法中，类原子投影算符 $\\{ \\hat{p}_{\\ell m} \\}$ 用于分辨由 $\\ell \\in \\{0,1,2\\}$（解释为 $s,p,d$）标记的角动量通道。对于一个 KS 态 $\\lvert \\psi_{n\\mathbf{k}} \\rangle$，在通道 $\\ell$ 中的逐带投影算符范数定义为\n     $$W_{n\\mathbf{k},\\ell} \\equiv \\sum_{m} \\left| \\langle \\hat{p}_{\\ell m} \\mid \\psi_{n\\mathbf{k}} \\rangle \\right|^2.$$\n     在理想化的保范情形下，每个通道的目标范数为 $T_\\ell$，每个态的偏差为\n     $$d_{n\\mathbf{k},\\ell} \\equiv \\left| W_{n\\mathbf{k},\\ell} - T_\\ell \\right|.$$\n   - 通道 $\\ell$ 中的投影态密度 (PDOS) 是能量 $E$ 的一个非负函数 $g_\\ell(E)$，它在任何有限区间上都可积。赝态可能在某个能量 $E^\\star$ 处表现为 $g_\\ell(E)$ 中一个窄幅、高振幅的孤立峰。\n\n2. 待实现的诊断条件。\n   - PDOS 中的峰检测：如果在能量 $E^\\star$ 处，$E^\\star$ 是 $g_\\ell(E)$ 的一个严格局部最大值，并且其半峰全宽 (FWHM)，记作 $W_{\\ell}(E^\\star)$，满足\n     $$W_{\\ell}(E^\\star) < w_{\\max}, \\quad g_\\ell(E^\\star) > g_{\\min},$$\n     则在通道 $\\ell$ 中识别出一个位于能量 $E^\\star$ 的候选赝态峰。\n     FWHM 定义为 $E^\\star$ 两侧 $g_\\ell(E)$ 等于 $g_\\ell(E^\\star)/2$ 的两点之间的能量距离。\n   - 峰附近的逐带范数异常：定义邻近态的集合\n     $$\\mathcal{S}_{\\Delta E}(E^\\star) \\equiv \\left\\{ (n,\\mathbf{k}) \\ \\big| \\ \\left| E_{n\\mathbf{k}} - E^\\star \\right| \\le \\Delta E \\right\\}.$$\n     设这些态在通道 $\\ell$ 中的范数偏差为 $d_{n\\mathbf{k},\\ell}$。如果在 $E^\\star$ 附近存在范数异常，则\n     $$\\max_{(n,\\mathbf{k}) \\in \\mathcal{S}_{\\Delta E}(E^\\star)} d_{n\\mathbf{k},\\ell} > \\tau_N,$$\n     且 $\\mathcal{S}_{\\Delta E}(E^\\star)$ 中满足 $d_{n\\mathbf{k},\\ell} > \\tau_N$ 的元素比例至少为 $f_{\\min}$。\n   - 赝态判定：当且仅当存在一个通道 $\\ell$ 和一个候选峰能量 $E^\\star$，使得 PDOS 峰条件和范数异常条件同时满足时，诊断必须返回 true。\n\n3. 在所有数据集中使用的阈值。\n   - 使用\n     $$w_{\\max} = 0.10 \\ \\text{eV}, \\quad g_{\\min} = 1.0, \\quad \\Delta E = 0.10 \\ \\text{eV}, \\quad \\tau_N = 0.15, \\quad f_{\\min} = 0.25.$$\n   - 使用目标范数\n     $$T_0 = 1.0, \\quad T_1 = 1.0, \\quad T_2 = 1.0.$$\n\n4. 输入模型和测试套件。您的程序必须在内部生成三个合成数据集 A、B 和 C，每个数据集包括：\n   - 一个能量网格 $E$，范围从 $-5.0$ 到 $15.0$ eV，步长为 $0.1$ eV。\n   - 三个 PDOS 通道函数 $g_0(E)$、$g_1(E)$、$g_2(E)$，构建为有限个未归一化高斯函数的和，\n     $$G(E ; \\mu, \\sigma, A) \\equiv A \\exp\\!\\left(-\\frac{(E-\\mu)^2}{2\\sigma^2}\\right).$$\n   - 一个能带能量 $E_{n\\mathbf{k}}$ 的矩形数组，其中 $n \\in \\{0,\\dots,N_b-1\\}$，$\\mathbf{k} \\in \\{0,\\dots,N_k-1\\}$。\n   - 一个逐带投影算符范数 $W_{n\\mathbf{k},\\ell}$ 的张量，其中 $\\ell \\in \\{0,1,2\\}$。\n   - 所有随机扰动必须通过使用整数种子 $12345$ 为伪随机数生成器设置种子来确定性地生成。\n\n   按如下方式构建三个数据集。\n\n   - 数据集 A（干净的参考，预期无赝态）：\n     - 设 $N_b = 20$，$N_k = 8$。\n     - 能量网格 $E$ 如上所述。\n     - 通过以下方式定义 PDOS 通道：\n       $$g_0(E) = 1.5 \\, G(E; -2.0, 0.8, 1) + 1.0 \\, G(E; 6.0, 0.9, 1),$$\n       $$g_1(E) = 2.0 \\, G(E; 0.5, 1.2, 1) + 1.0 \\, G(E; 8.0, 1.0, 1),$$\n       $$g_2(E) = 1.0 \\, G(E; 3.0, 1.5, 1).$$\n     - 使用能带索引偏移和弱色散定义能带能量，\n       $$E_n^{(0)} = -4.0 + 1.0 \\, n,$$\n       $$E_{n\\mathbf{k}} = E_n^{(0)} + 0.15 \\cos\\!\\left(\\frac{2\\pi \\mathbf{k}}{N_k}\\right) + \\delta_{n\\mathbf{k}},$$\n       其中每个 $\\delta_{n\\mathbf{k}}$ 都是在固定种子的条件下从 $[-0.02, 0.02]$ 中均匀抽取的。\n     - 定义每个通道的范数\n       $$W_{n\\mathbf{k},\\ell} = T_\\ell + \\epsilon_{n\\mathbf{k},\\ell}, \\quad \\epsilon_{n\\mathbf{k},\\ell} \\sim \\text{Uniform}([-0.02, 0.02]).$$\n\n   - 数据集 B（s-通道中存在赝态，能量 $E^\\star \\approx 7.0$ eV）：\n     - $N_b$、$N_k$、能量网格 $E$ 以及 $g_1(E)$、$g_2(E)$ 与数据集 A 相同。\n     - 设\n       $$g_0(E) = \\left[1.5 \\, G(E; -2.0, 0.8, 1) + 1.0 \\, G(E; 6.0, 0.9, 1)\\right] + 5.0 \\, G(E; 7.0, 0.03, 1).$$\n     - 使用与数据集 A 相同的 $E_{n\\mathbf{k}}$ 构建方法（使用相同的随机种子）。\n     - 对于范数，背景设置与数据集 A 相同，但对能量在 $7.0$ eV 附近的态强制引入一个 s-通道异常：\n       $$W_{n\\mathbf{k},0} =\n         \\begin{cases}\n           0.60, & \\text{如果 } \\left|E_{n\\mathbf{k}} - 7.0\\right| \\le 0.08, \\\\\n           T_0 + \\epsilon_{n\\mathbf{k},0}, & \\text{其他情况},\n         \\end{cases}\n       $$\n       其中 $\\epsilon_{n\\mathbf{k},0} \\sim \\text{Uniform}([-0.02, 0.02])$ 如上所述。对于 $\\ell \\in \\{1,2\\}$，使用 $W_{n\\mathbf{k},\\ell} = T_\\ell + \\epsilon_{n\\mathbf{k},\\ell}$，其中 $\\epsilon_{n\\mathbf{k},\\ell} \\sim \\text{Uniform}([-0.02, 0.02])$。\n\n   - 数据集 C（边缘情况：看似窄的共振，但宽度高于阈值；预期无赝态）：\n     - $N_b$、$N_k$、能量网格 $E$ 以及能带能量与数据集 A 相同。\n     - 设\n       $$g_0(E) = \\left[1.5 \\, G(E; -2.0, 0.8, 1) + 1.0 \\, G(E; 6.0, 0.9, 1)\\right] + 1.5 \\, G(E; 3.0, 0.12, 1),$$\n       $$g_1(E), g_2(E) \\text{ 与数据集 A 相同。}$$\n     - 所有通道的范数与数据集 A 相同，即 $W_{n\\mathbf{k},\\ell} = T_\\ell + \\epsilon_{n\\mathbf{k},\\ell}$，其中 $\\epsilon_{n\\mathbf{k},\\ell} \\sim \\text{Uniform}([-0.02, 0.02])$。\n\n5. 要求的输出。您的程序必须：\n   - 使用 FWHM 定义以及阈值 $w_{\\max}$ 和 $g_{\\min}$ 实现 PDOS 峰检测。\n   - 使用阈值 $\\Delta E$、$\\tau_N$ 和 $f_{\\min}$ 实现逐带范数异常检测。\n   - 为每个数据集返回一个布尔值：如果根据上述组合条件检测到赝态，则为 true，否则为 false。\n   - 生成一行输出，其中包含三个布尔结果，按数据集 A、B、C 的顺序排列，形式为以逗号分隔的小写字面量列表，并用方括号括起，例如 $[{\\rm true},{\\rm false},{\\rm true}]$。\n\n您的程序应生成一行输出，其中包含用方括号括起来的、以逗号分隔的结果列表（例如，`[true,false,true]`）。", "solution": "该问题是有效的。这是一个来自计算材料化学领域、定义明确且具有科学依据的任务，要求实现一种特定的数值算法来诊断 Kohn-Sham 密度泛函理论计算中的赝态。问题提供了生成合成测试数据所需的所有必要定义、参数和确定性步骤。解决方案通过将这些规范转化为具体的计算过程来执行。\n\n该解决方案的核心是一个处理给定数据集的函数，该数据集包括一个能量网格 $E$、一组投影态密度 (PDOS) 函数 $\\{g_\\ell(E)\\}$、一个能带能量矩阵 $\\{E_{n\\mathbf{k}}\\}$ 以及一个逐带投影算符范数张量 $\\{W_{n\\mathbf{k},\\ell}\\}$。该诊断返回一个布尔值：如果检测到赝态，则为 `true`，否则为 `false`。对标记为 A、B 和 C 的三个不同的、人工生成的数据集重复此过程。\n\n首先，生成所有三个数据集的公共组件。使用指定的整数种子 $12345$ 初始化一个伪随机数生成器，以确保结果的确定性和可复现性。创建能量网格 $E$，范围从 $-5.0 \\ \\text{eV}$ 到 $15.0 \\ \\text{eV}$，步长为 $0.1 \\ \\text{eV}$，共产生 $201$ 个点。对于 $N_b=20$ 个能带和 $N_k=8$ 个 $\\mathbf{k}$ 点，能带能量 $E_{n\\mathbf{k}}$ 根据以下公式计算：\n$$E_{n\\mathbf{k}} = (-4.0 + 1.0 \\cdot n) + 0.15 \\cos\\!\\left(\\frac{2\\pi \\mathbf{k}}{N_k}\\right) + \\delta_{n\\mathbf{k}}$$\n其中 $\\delta_{n\\mathbf{k}}$ 是从 $[-0.02, 0.02]$ 上的均匀分布中抽取的随机扰动。这个能带能量矩阵对所有三个数据集都是相同的。\n\n对于每个数据集（A、B 和 C），特定的 PDOS 函数 $g_0(E)$、$g_1(E)$ 和 $g_2(E)$ 被构建为高斯函数 $G(E ; \\mu, \\sigma, A) = A \\exp(- (E-\\mu)^2 / (2\\sigma^2) )$ 的和，并使用给定的参数。投影算符范数 $W_{n\\mathbf{k},\\ell}$ 也按照每个数据集的规定生成，使用公共的随机数生成器流在目标范数 $T_\\ell=1.0$ 周围引入小的扰动 $\\epsilon_{n\\mathbf{k},\\ell}$，并对数据集 B 应用特殊逻辑以引入范数异常。\n\n对每个数据集，赝态检测算法按以下步骤进行，遍历每个角动量通道 $\\ell \\in \\{0, 1, 2\\}$：\n\n步骤 1：PDOS 峰分析\n分析当前通道的 PDOS 函数 $g_\\ell(E)$ 以寻找候选赝态峰。\n1.  搜索 $g_\\ell(E)$ 中所有的严格局部最大值。如果能量为 $E_i$ 的点的值 $g_\\ell(E_i)$ 严格大于其紧邻点 $g_\\ell(E_{i-1})$ 和 $g_\\ell(E_{i+1})$，则该点是一个严格局部最大值。使用 `scipy.signal.find_peaks` 函数进行初步搜索，然后通过手动筛选来强制执行严格最大值条件。\n2.  每个识别出的能量为 $E^\\star$ 的峰必须满足振幅条件 $g_\\ell(E^\\star) > g_{\\min}$，其中 $g_{\\min} = 1.0$。\n3.  对于满足振幅条件的峰，计算其半峰全宽 (FWHM)，记作 $W_\\ell(E^\\star)$。这是通过使用相对高度为 $0.5$ 的 `scipy.signal.peak_widths` 函数完成的。该函数的输出（以数组索引表示的宽度）通过乘以能量网格步长（$0.1 \\ \\text{eV}$）转换为能量值。\n4.  如果一个候选赝态峰的 FWHM 满足 $W_\\ell(E^\\star) < w_{\\max}$，其中 $w_{\\max} = 0.10 \\ \\text{eV}$，则该峰得到确认。\n\n步骤 2：逐带范数异常分析\n如果在通道 $\\ell$ 中于能量 $E^\\star$ 处发现一个候选赝态峰，则寻找相应的范数异常。\n1.  识别“邻近态”的集合 $\\mathcal{S}_{\\Delta E}(E^\\star)$。该集合由所有 Kohn-Sham 态 $(n, \\mathbf{k})$ 组成，其能量 $E_{n\\mathbf{k}}$ 落在峰能量 $E^\\star$ 周围大小为 $\\Delta E = 0.10 \\ \\text{eV}$ 的窗口内：$|E_{n\\mathbf{k}} - E^\\star| \\le \\Delta E$。\n2.  如果这个态集合不为空，则计算集合中每个态的范数偏差 $d_{n\\mathbf{k},\\ell} = |W_{n\\mathbf{k},\\ell} - T_\\ell|$，其中 $T_\\ell = 1.0$。\n3.  如果同时满足两个条件，则确认存在范数异常：\n    a. 集合中的最大偏差超过阈值 $\\tau_N = 0.15$：$\\max d_{n\\mathbf{k},\\ell} > \\tau_N$。\n    b. 集合中偏差大于 $\\tau_N$ 的态的比例至少为 $f_{\\min} = 0.25$。\n\n步骤 3：最终判定\n当且仅当对于任何通道 $\\ell$，存在至少一个能量 $E^\\star$，使得 PDOS 候选峰条件（振幅和宽度）和范数异常条件（最大偏差和比例）都得到满足时，才宣告数据集中存在赝态（返回 `true`）。如果检查完所有通道后没有发现这样的对应关系，则认为该数据集不含赝态（返回 `false`）。\n\n整个过程被封装在最终的程序中。该程序生成三个数据集，对每个数据集应用诊断，并以要求的格式打印布尔结果列表。根据问题的构造，预期的结果是：对于干净的数据集 A 为 `false`，对于包含故意设计的赝态的数据集 B 为 `true`，对于数据集 C 为 `false`，因为它具有一个因太宽而不能归类为赝态的共振。", "answer": "```python\nimport numpy as np\nfrom scipy.signal import find_peaks, peak_widths\n\n# Define global constants based on the problem statement\nW_MAX = 0.10  # eV\nG_MIN = 1.0\nDELTA_E = 0.10  # eV\nTAU_N = 0.15\nF_MIN = 0.25\nTARGET_NORMS = np.array([1.0, 1.0, 1.0])\nRNG_SEED = 12345\n\ndef gaussian(E, mu, sigma, A):\n    \"\"\"Computes an unnormalized Gaussian function.\"\"\"\n    return A * np.exp(-((E - mu)**2) / (2 * sigma**2))\n\ndef generate_datasets(rng):\n    \"\"\"Generates the three datasets A, B, and C.\"\"\"\n    \n    # Common parameters for all datasets\n    Nb, Nk = 20, 8\n    # Use linspace to ensure the endpoint 15.0 is included\n    E_grid = np.linspace(-5.0, 15.0, 201) \n\n    # Generate common band energies E_nk for all datasets to ensure consistency\n    E_n0 = -4.0 + 1.0 * np.arange(Nb)\n    k_vals = np.arange(Nk)\n    cos_term = 0.15 * np.cos(2 * np.pi * k_vals / Nk)\n    delta_nk = rng.uniform(-0.02, 0.02, size=(Nb, Nk))\n    band_energies = E_n0[:, np.newaxis] + cos_term[np.newaxis, :] + delta_nk\n\n    # --- Dataset A ---\n    pdos_A = np.zeros((3, len(E_grid)))\n    pdos_A[0, :] = 1.5 * gaussian(E_grid, -2.0, 0.8, 1) + 1.0 * gaussian(E_grid, 6.0, 0.9, 1)\n    pdos_A[1, :] = 2.0 * gaussian(E_grid, 0.5, 1.2, 1) + 1.0 * gaussian(E_grid, 8.0, 1.0, 1)\n    pdos_A[2, :] = 1.0 * gaussian(E_grid, 3.0, 1.5, 1)\n    \n    eps_A = rng.uniform(-0.02, 0.02, size=(Nb, Nk, 3))\n    norms_A = TARGET_NORMS[np.newaxis, np.newaxis, :] + eps_A\n    dataset_A = (E_grid, pdos_A, band_energies, norms_A)\n\n    # --- Dataset B ---\n    pdos_B = np.copy(pdos_A)\n    # Add the sharp ghost peak to channel 0 (s-channel)\n    pdos_B[0, :] += 5.0 * gaussian(E_grid, 7.0, 0.03, 1)\n    \n    eps_B = rng.uniform(-0.02, 0.02, size=(Nb, Nk, 3))\n    norms_B = TARGET_NORMS[np.newaxis, np.newaxis, :] + eps_B\n    # Introduce norm anomaly for states near 7.0 eV in channel 0\n    anomaly_mask = np.abs(band_energies - 7.0) <= 0.08\n    norms_B[anomaly_mask, 0] = 0.60\n    dataset_B = (E_grid, pdos_B, band_energies, norms_B)\n\n    # --- Dataset C ---\n    pdos_C = np.copy(pdos_A)\n    # Add a narrow-looking but wider-than-threshold peak\n    pdos_C[0, :] += 1.5 * gaussian(E_grid, 3.0, 0.12, 1)\n    \n    eps_C = rng.uniform(-0.02, 0.02, size=(Nb, Nk, 3))\n    norms_C = TARGET_NORMS[np.newaxis, np.newaxis, :] + eps_C\n    dataset_C = (E_grid, pdos_C, band_energies, norms_C)\n    \n    return [dataset_A, dataset_B, dataset_C]\n\ndef check_for_ghost(dataset):\n    \"\"\"Applies the diagnostic to a single dataset.\"\"\"\n    E_grid, pdos_channels, band_energies, projector_norms = dataset\n    energy_step = E_grid[1] - E_grid[0]\n\n    for l_idx in range(3):  # Iterate over channels l=0, 1, 2\n        pdos = pdos_channels[l_idx]\n        \n        # 1. PDOS Peak Analysis\n        # Find peaks with height greater than G_MIN\n        all_peaks, _ = find_peaks(pdos, height=G_MIN)\n        \n        # Filter for strict local maxima\n        strict_peaks = [\n            p for p in all_peaks \n            if 0 < p < len(pdos) - 1 and pdos[p] > pdos[p-1] and pdos[p] > pdos[p+1]\n        ]\n\n        if not strict_peaks:\n            continue\n            \n        # Calculate FWHM for strict peaks\n        widths_info = peak_widths(pdos, strict_peaks, rel_height=0.5)\n        fwhms_indices = widths_info[0]\n        fwhms_ev = fwhms_indices * energy_step\n        \n        for i, peak_idx in enumerate(strict_peaks):\n            if fwhms_ev[i] < W_MAX:\n                # Found a candidate ghost peak, now check for norm anomaly\n                peak_energy = E_grid[peak_idx]\n                \n                # 2. Norm Anomaly Analysis\n                nearby_states_mask = np.abs(band_energies - peak_energy) <= DELTA_E\n                \n                num_nearby_states = np.sum(nearby_states_mask)\n                if num_nearby_states == 0:\n                    continue\n\n                norms_nearby = projector_norms[nearby_states_mask, l_idx]\n                deviations = np.abs(norms_nearby - TARGET_NORMS[l_idx])\n                \n                # Check the two norm anomaly conditions\n                max_dev_cond = np.max(deviations) > TAU_N\n                \n                anomalous_fraction = np.sum(deviations > TAU_N) / num_nearby_states\n                fraction_cond = anomalous_fraction >= F_MIN\n                \n                if max_dev_cond and fraction_cond:\n                    # Both PDOS and norm conditions met: ghost detected\n                    return True\n    \n    # No ghost state found across all channels\n    return False\n\ndef solve():\n    \"\"\"\n    Main function to run the ghost state diagnostic on the three datasets.\n    \"\"\"\n    rng = np.random.default_rng(RNG_SEED)\n    datasets = generate_datasets(rng)\n    \n    results = []\n    for dataset in datasets:\n        is_ghost = check_for_ghost(dataset)\n        results.append(str(is_ghost).lower())\n    \n    # Print final output in the required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2480463"}]}