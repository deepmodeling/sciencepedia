{"hands_on_practices": [{"introduction": "在相场模型中，界面是连接不同相的核心结构。理解界面的结构和能量是至关重要的第一步。本练习将引导你完成一个经典的解析推导，求解非守恒 Allen-Cahn 模型中的静态界面剖面，从而将抽象的自由能泛函与界面宽度和界面能等具体的物理量联系起来。这是一个从理论参数推导物理性质的基础训练。", "problem": "考虑一个一维空间中非守恒序参量 $\\eta(x,t)$ 的相场模型，其 Ginzburg–Landau 自由能泛函为\n$$\nF[\\eta] \\,=\\, \\int_{-\\infty}^{+\\infty} \\left[ \\frac{\\kappa}{2} \\left(\\frac{d\\eta}{dx}\\right)^{2} \\,+\\, f_{0}(\\eta) \\right] \\, dx,\n$$\n其中 $\\kappa \\,>\\, 0$ 是梯度能量系数，$f_{0}(\\eta) \\,=\\, \\frac{A}{4} \\left(\\eta^{2} - 1\\right)^{2}$ 是对称双势阱体自由能密度，且 $A \\,>\\, 0$。其动力学遵循 Allen–Cahn (AC) 方程 $\\partial \\eta/\\partial t \\,=\\, -L \\, \\delta F/\\delta \\eta$（其中迁移率 $L$ 为正），但我们只关注在边界条件 $\\eta(x) \\to -1$ (当 $x \\to -\\infty$) 以及 $\\eta(x) \\to +1$ (当 $x \\to +\\infty$) 下使 $F$ 最小化的稳态剖面 $\\eta(x)$。\n\n仅使用应用于 $F[\\eta]$ 的变分法，并施加给定的边界条件，完成以下任务：\n- 推导稳态界面剖面 $\\eta(x)$ 的主控常微分方程，并对其积分一次，以获得一个包含 $\\eta'(x)$ 和 $f_{0}(\\eta)$ 的第一积分。\n- 从该第一积分出发，确定连接两个势阱的单调稳态剖面，并用 $\\kappa$ 和 $A$ 表示特征界面宽度 $\\lambda$。\n- 使用稳态剖面和第一积分，计算单位面积的界面自由能（在一维情况下为线张力），\n$$\n\\gamma \\,=\\, \\int_{-\\infty}^{+\\infty} \\left[ \\frac{\\kappa}{2} \\left(\\frac{d\\eta}{dx}\\right)^{2} + f_{0}(\\eta) \\right] \\, dx,\n$$\n并将其纯粹用 $A$ 和 $\\kappa$ 表示。\n\n答案要求：\n- 将您的最终答案表示为 $\\gamma$ 关于 $A$ 和 $\\kappa$ 的单个闭式符号表达式。\n- 不要提供任何数值近似。", "solution": "所述问题是变分学中的一个标准练习，特别是在界面 Ginzburg-Landau 理论的背景下。所有前提在科学上都是合理的，且该问题在数学上是适定的。我们开始进行求解。\n\n该问题要求找到一个稳态剖面 $\\eta(x)$，以最小化自由能泛函\n$$\nF[\\eta] = \\int_{-\\infty}^{+\\infty} L(\\eta, \\eta') \\, dx,\n$$\n其中拉格朗日量为 $L(\\eta, \\eta') = \\frac{\\kappa}{2} (\\eta')^{2} + f_{0}(\\eta)$，且 $\\eta' \\equiv \\frac{d\\eta}{dx}$ 以及 $f_{0}(\\eta) = \\frac{A}{4} (\\eta^{2} - 1)^{2}$。参数 $\\kappa$ 和 $A$ 是正常数。边界条件为 $\\eta(x) \\to -1$ (当 $x \\to -\\infty$) 以及 $\\eta(x) \\to +1$ (当 $x \\to +\\infty$)。\n\n一个稳态剖面必须满足欧拉-拉格朗日方程：\n$$\n\\frac{\\partial L}{\\partial \\eta} - \\frac{d}{dx} \\left( \\frac{\\partial L}{\\partial \\eta'} \\right) = 0.\n$$\n拉格朗日量的偏导数为：\n$$\n\\frac{\\partial L}{\\partial \\eta} = \\frac{df_{0}}{d\\eta} = \\frac{A}{4} \\cdot 2(\\eta^2 - 1) \\cdot (2\\eta) = A\\eta(\\eta^2 - 1).\n$$\n$$\n\\frac{\\partial L}{\\partial \\eta'} = \\kappa \\eta'.\n$$\n将这些代入欧拉-拉格朗日方程，得到稳态剖面的主控常微分方程：\n$$\nA\\eta(\\eta^2 - 1) - \\kappa \\frac{d^2\\eta}{dx^2} = 0 \\quad \\implies \\quad \\kappa \\frac{d^2\\eta}{dx^2} = \\frac{df_{0}}{d\\eta}.\n$$\n这就是所要求的主控常微分方程。为了找到它的第一积分，我们观察到拉格朗日量 $L(\\eta, \\eta')$ 不显式依赖于自变量 $x$。因此，Beltrami 恒等式成立，它表明量 $H = \\eta' \\frac{\\partial L}{\\partial \\eta'} - L$ 是一个常数。\n$$\nH = \\eta'(\\kappa \\eta') - \\left[ \\frac{\\kappa}{2} (\\eta')^{2} + f_{0}(\\eta) \\right] = \\frac{\\kappa}{2} (\\eta')^{2} - f_{0}(\\eta) = \\text{const}.\n$$\n为了求出该常数，我们应用边界条件。当 $x \\to \\pm\\infty$ 时，剖面趋近于其中一个体平衡态，即 $\\eta \\to \\pm 1$。在这些区域，剖面必须是均匀的，因此 $\\eta' \\to 0$。在这些状态下的体自由能密度为 $f_{0}(\\pm 1) = \\frac{A}{4}((\\pm 1)^2 - 1)^2 = 0$。\n将这些值代入 $H$ 的表达式，我们发现该常数为 $0$：\n$$\n\\frac{\\kappa}{2} (0)^{2} - 0 = 0.\n$$\n因此，能量最小化剖面的运动第一积分为\n$$\n\\frac{\\kappa}{2} \\left(\\frac{d\\eta}{dx}\\right)^{2} = f_{0}(\\eta).\n$$\n根据这个第一积分，我们可以找到剖面的显式形式。我们寻求一个连接 $\\eta = -1$ 和 $\\eta = +1$ 的单调递增解（$\\frac{d\\eta}{dx} > 0$）。\n$$\n\\frac{d\\eta}{dx} = \\sqrt{\\frac{2f_{0}(\\eta)}{\\kappa}} = \\sqrt{\\frac{2}{\\kappa} \\frac{A}{4}(\\eta^2-1)^2} = \\sqrt{\\frac{A}{2\\kappa}} |\\eta^2-1|.\n$$\n由于 $\\eta(x)$ 在 $-1$ 和 $+1$ 之间变化，项 $\\eta^2 - 1$ 是非正的，所以 $|\\eta^2 - 1| = 1 - \\eta^2$。微分方程变为：\n$$\n\\frac{d\\eta}{dx} = \\sqrt{\\frac{A}{2\\kappa}} (1 - \\eta^2).\n$$\n这是一个可分离方程。我们在界面中心位于 $x=0$ 的条件下（即 $\\eta(0)=0$）对其进行积分。\n$$\n\\int_{0}^{\\eta} \\frac{d\\tilde{\\eta}}{1 - \\tilde{\\eta}^2} = \\int_{0}^{x} \\sqrt{\\frac{A}{2\\kappa}} d\\tilde{x}\n$$\n$$\n[\\operatorname{arctanh}(\\tilde{\\eta})]_{0}^{\\eta} = \\left[\\sqrt{\\frac{A}{2\\kappa}}\\tilde{x}\\right]_{0}^{x}\n$$\n$$\n\\operatorname{arctanh}(\\eta) = \\sqrt{\\frac{A}{2\\kappa}} x.\n$$\n因此，稳态剖面由下式给出：\n$$\n\\eta(x) = \\tanh\\left(\\sqrt{\\frac{A}{2\\kappa}} x\\right).\n$$\n该剖面正确地满足了当 $x \\to \\pm \\infty$ 时 $\\eta \\to \\pm 1$ 的边界条件。特征界面宽度 $\\lambda$ 通常通过参数的标度关系 $\\eta(x) = \\tanh(x/\\lambda)$ 来定义。通过比较，我们确定宽度为：\n$$\n\\lambda = \\sqrt{\\frac{2\\kappa}{A}}.\n$$\n最后一步是计算界面自由能 $\\gamma$，它被定义为此稳态剖面下泛函 $F[\\eta]$ 的值：\n$$\n\\gamma = \\int_{-\\infty}^{+\\infty} \\left[ \\frac{\\kappa}{2} \\left(\\frac{d\\eta}{dx}\\right)^{2} + f_{0}(\\eta) \\right] dx.\n$$\n使用第一积分 $\\frac{\\kappa}{2}(\\eta')^2 = f_{0}(\\eta)$，我们可以简化被积函数：\n$$\n\\gamma = \\int_{-\\infty}^{+\\infty} 2 f_{0}(\\eta) \\, dx \\quad \\text{或} \\quad \\gamma = \\int_{-\\infty}^{+\\infty} \\kappa \\left(\\frac{d\\eta}{dx}\\right)^{2} dx.\n$$\n一个更直接的计算方法是利用第一积分将 $\\frac{d\\eta}{dx}$ 写成 $\\eta$ 的函数，并将积分变量从 $x$ 更改为 $\\eta$。\n$$\n\\gamma = \\int_{-\\infty}^{+\\infty} \\kappa \\left(\\frac{d\\eta}{dx}\\right) \\frac{d\\eta}{dx} dx = \\int_{\\eta(-\\infty)}^{\\eta(+\\infty)} \\kappa \\left(\\frac{d\\eta}{dx}\\right) d\\eta.\n$$\n代入 $\\frac{d\\eta}{dx} = \\sqrt{\\frac{2f_0(\\eta)}{\\kappa}}$：\n$$\n\\gamma = \\int_{-1}^{+1} \\kappa \\sqrt{\\frac{2f_{0}(\\eta)}{\\kappa}} d\\eta = \\int_{-1}^{+1} \\sqrt{2\\kappa f_{0}(\\eta)} \\,d\\eta.\n$$\n现在，我们代入 $f_0(\\eta)$ 的表达式：\n$$\n\\gamma = \\int_{-1}^{+1} \\sqrt{2\\kappa \\cdot \\frac{A}{4}(\\eta^2-1)^2} \\, d\\eta = \\sqrt{\\frac{A\\kappa}{2}} \\int_{-1}^{+1} |\\eta^2-1| \\, d\\eta.\n$$\n同样，由于 $\\eta \\in [-1, 1]$，我们有 $|\\eta^2 - 1| = 1 - \\eta^2$。\n$$\n\\gamma = \\sqrt{\\frac{A\\kappa}{2}} \\int_{-1}^{+1} (1-\\eta^2) \\, d\\eta.\n$$\n该积分为初等积分：\n$$\n\\int_{-1}^{+1} (1-\\eta^2) \\, d\\eta = \\left[\\eta - \\frac{\\eta^3}{3}\\right]_{-1}^{+1} = \\left(1 - \\frac{1}{3}\\right) - \\left(-1 - \\frac{-1}{3}\\right) = \\frac{2}{3} - \\left(-\\frac{2}{3}\\right) = \\frac{4}{3}.\n$$\n将此结果代回 $\\gamma$ 的表达式：\n$$\n\\gamma = \\sqrt{\\frac{A\\kappa}{2}} \\cdot \\frac{4}{3} = \\frac{4}{3\\sqrt{2}}\\sqrt{A\\kappa} = \\frac{2\\sqrt{2}}{3}\\sqrt{A\\kappa}.\n$$\n这就是以给定参数 $A$ 和 $\\kappa$ 表示的界面能的最终表达式。", "answer": "$$\n\\boxed{\\frac{2\\sqrt{2}}{3}\\sqrt{A\\kappa}}\n$$", "id": "2508064"}, {"introduction": "从非守恒系统过渡到守恒系统（如Cahn-Hilliard模型）时，我们必须考虑质量守恒这一基本物理定律。在建立任何物理模型或数值模拟时，正确处理边界条件是确保其物理真实性的关键。本练习将挑战你批判性地思考不同类型的边界条件如何保证（或违反）质量守恒定律，这是构建一个有意义的相场模拟的必要步骤。", "problem": "设 $\\Omega \\subset \\mathbb{R}^{d}$ 为一个有界域，其边界 $\\partial \\Omega$ 光滑，外单位法向量为 $\\mathbf{n}$。在微结构演化的 Cahn–Hilliard 描述中，设 $c(\\mathbf{x},t)$ 是一个守恒相场变量（类成分序参量），$\\mu(\\mathbf{x},t)$ 是其化学势。总质量为 $M(t) = \\int_{\\Omega} c(\\mathbf{x},t)\\,\\mathrm{d}V$。需要在边界 $\\partial \\Omega$ 上对 $c$ 和 $\\mu$ 施加边界条件。 Dirichlet 条件规定了场在 $\\partial \\Omega$ 上的值；Neumann 条件规定了在 $\\partial \\Omega$ 上的法向导数；周期性条件要求在相对面上的配对边界点处，场（及其法向导数）的值相等。仅使用守恒第一性原理和守恒扩散的适定性，判断下列哪些陈述正确定义了 $c$ 和 $\\mu$ 的边界条件类型，并能如其所述保证总质量 $M(t)$ 在所有 $t \\ge 0$ 时守恒。选择所有适用项。\n\nA. 对两个场均使用 Dirichlet 条件：在 $\\partial \\Omega$ 上规定 $c = c_{b}(\\mathbf{x},t)$ 和 $\\mu = \\mu_{b}(\\mathbf{x},t)$。这种组合能守恒质量。\n\nB. 对两个场均使用齐次 Neumann 条件：在 $\\partial \\Omega$ 上施加 $\\mathbf{n}\\cdot \\nabla c = 0$ 和 $\\mathbf{n}\\cdot \\nabla \\mu = 0$。这种组合能守恒质量。\n\nC. 在相对面上对两个场均使用周期性条件：在配对的边界点 $\\mathbf{x}_{L}$ 和 $\\mathbf{x}_{R}$ 处，要求 $c(\\mathbf{x}_{L},t) = c(\\mathbf{x}_{R},t)$，$\\mu(\\mathbf{x}_{L},t) = \\mu(\\mathbf{x}_{R},t)$，以及匹配的法向导数 $\\mathbf{n}\\cdot \\nabla c(\\mathbf{x}_{L},t) = -\\mathbf{n}\\cdot \\nabla c(\\mathbf{x}_{R},t)$，$\\mathbf{n}\\cdot \\nabla \\mu(\\mathbf{x}_{L},t) = -\\mathbf{n}\\cdot \\nabla \\mu(\\mathbf{x}_{R},t)$。这种组合能守恒质量。\n\nD. 仅对 $c$ 使用齐次 Neumann 条件：在 $\\partial \\Omega$ 上施加 $\\mathbf{n}\\cdot \\nabla c = 0$，但让 $\\mu$ 在 $\\partial \\Omega$ 上任意。仅此条件即可守恒质量，无论对 $\\mu$ 施加何种边界条件。\n\nE. 对 $c$ 使用 Dirichlet 条件，对 $\\mu$ 使用齐次 Neumann 条件：在 $\\partial \\Omega$ 上规定 $c = c_{b}(\\mathbf{x},t)$ 并施加 $\\mathbf{n}\\cdot \\nabla \\mu = 0$。这种组合能守恒质量。\n\n注：“齐次”意味着规定的边界数据恒为 $0$；对于周期性条件，配对的边界取相反的外法线方向，以便用适当的符号比较通量。", "solution": "所提出陈述的有效性取决于域 $\\Omega$ 内物理量 $c(\\mathbf{x},t)$ 的基本守恒原理。该物理量的总量（或总质量）由积分 $M(t) = \\int_{\\Omega} c(\\mathbf{x},t)\\,\\mathrm{d}V$ 给出。要使总质量守恒，其时间导数必须在所有时间 $t \\ge 0$ 内为零。\n\n让我们从第一性原理推导质量守恒的条件。对 $M(t)$ 求时间导数：\n$$ \\frac{dM}{dt} = \\frac{d}{dt} \\int_{\\Omega} c(\\mathbf{x},t)\\,\\mathrm{d}V $$\n在场 $c(\\mathbf{x},t)$ 足够光滑的假设下，我们可以交换求导和积分的顺序：\n$$ \\frac{dM}{dt} = \\int_{\\Omega} \\frac{\\partial c(\\mathbf{x},t)}{\\partial t}\\,\\mathrm{d}V $$\nCahn-Hilliard 描述基于守恒变量 $c$ 的连续性方程，该方程指出 $c$ 的局域变化率等于通量 $\\mathbf{J}(\\mathbf{x},t)$ 的负散度：\n$$ \\frac{\\partial c}{\\partial t} = -\\nabla \\cdot \\mathbf{J} $$\n在 Cahn-Hilliard 模型中，该通量由化学势 $\\mu(\\mathbf{x},t)$ 的梯度驱动，使得 $\\mathbf{J} = -L \\nabla \\mu$，其中 $L$ 是一个正定迁移率参数，为简化起见，此处取为正常数。\n\n将连续性方程代入 $\\frac{dM}{dt}$ 的表达式中：\n$$ \\frac{dM}{dt} = \\int_{\\Omega} (-\\nabla \\cdot \\mathbf{J})\\,\\mathrm{d}V $$\n通过应用散度定理（高斯定理），散度的体积分可以转换成通量在边界 $\\partial \\Omega$ 上的面积分：\n$$ \\frac{dM}{dt} = - \\oint_{\\partial \\Omega} \\mathbf{J} \\cdot \\mathbf{n}\\,\\mathrm{d}S $$\n其中 $\\mathbf{n}$ 是边界 $\\partial \\Omega$ 上的外单位法向量。\n因此，为了使质量守恒，即 $\\frac{dM}{dt}=0$，我们必须使穿过边界的净通量为零：\n$$ \\oint_{\\partial \\Omega} \\mathbf{J} \\cdot \\mathbf{n}\\,\\mathrm{d}S = 0 $$\n代入通量的本构关系 $\\mathbf{J}=-L\\nabla\\mu$，条件变为：\n$$ \\oint_{\\partial \\Omega} (-L \\nabla \\mu) \\cdot \\mathbf{n}\\,\\mathrm{d}S = -L \\oint_{\\partial \\Omega} (\\mathbf{n} \\cdot \\nabla \\mu)\\,\\mathrm{d}S = 0 $$\n由于 $L > 0$，这等价于要求化学势在边界上的法向导数的积分值为零：\n$$ \\oint_{\\partial \\Omega} (\\mathbf{n} \\cdot \\nabla \\mu)\\,\\mathrm{d}S = 0 $$\n一个充分但非绝对必要的条件是，被积函数本身在边界上处处为零，即在 $\\partial \\Omega$ 上 $\\mathbf{n} \\cdot \\nabla \\mu = 0$。这就是无通量边界条件。Cahn-Hilliard 方程是关于 $c(\\mathbf{x},t)$ 的四阶方程，需要两个边界条件才能构成一个适定问题。\n\n我们现在根据这个推导出的原理来评估每个陈述。\n\nA. 对两个场均使用 Dirichlet 条件：在 $\\partial \\Omega$ 上规定 $c = c_{b}(\\mathbf{x},t)$ 和 $\\mu = \\mu_{b}(\\mathbf{x},t)$。\n该陈述不正确。在边界上规定化学势 $\\mu = \\mu_{b}$ 的值，通常不能约束其法向导数 $\\mathbf{n} \\cdot \\nabla \\mu$ 为零或在 $\\partial \\Omega$ 上的积分为零。边界上 $\\mu_{b}$ 的非均匀分布通常会引起非零通量 $\\mathbf{J} \\cdot \\mathbf{n} \\neq 0$。因此，不能保证质量守恒。此外，在边界上同时指定 $c$ 和 $\\mu$ 会使问题过约束，因为 $\\mu$ 与 $c$ 及其空间导数相关。结论：**不正确**。\n\nB. 对两个场均使用齐次 Neumann 条件：在 $\\partial \\Omega$ 上施加 $\\mathbf{n}\\cdot \\nabla c = 0$ 和 $\\mathbf{n}\\cdot \\nabla \\mu = 0$。\n该陈述正确。条件 $\\mathbf{n} \\cdot \\nabla \\mu = 0$ 施加在整个边界 $\\partial \\Omega$ 上。这意味着总通量积分中的被积函数 $\\mathbf{J} \\cdot \\mathbf{n} = -L(\\mathbf{n} \\cdot \\nabla \\mu)$ 在边界上的每一点都恒为零。因此，积分 $\\oint_{\\partial \\Omega} \\mathbf{J} \\cdot \\mathbf{n}\\,\\mathrm{d}S$ 保证为零，总质量 $M(t)$ 守恒。附加条件 $\\mathbf{n}\\cdot \\nabla c = 0$ 使问题适定，并对应于孤立系统的自然边界条件。结论：**正确**。\n\nC. 在相对面上对两个场均使用周期性条件：在配对的边界点 $\\mathbf{x}_{L}$ 和 $\\mathbf{x}_{R}$ 处，要求 $c(\\mathbf{x}_{L},t) = c(\\mathbf{x}_{R},t)$，$\\mu(\\mathbf{x}_{L},t) = \\mu(\\mathbf{x}_{R},t)$，以及匹配的法向导数。\n该陈述正确。周期性边界条件意味着域 $\\Omega$ 可以被看作是无限重复晶格中的一个晶胞。对于任何一对相对面，例如 $\\Gamma_{L}$ 和 $\\Gamma_{R}$，其外法线向量方向相反，即 $\\mathbf{n}_{L} = -\\mathbf{n}_{R}$。场 $c$ 和 $\\mu$ 的周期性意味着它们的梯度，以及通量向量 $\\mathbf{J}$，也必须是周期性的：对于对应的点 $\\mathbf{x}_{L} \\in \\Gamma_{L}$ 和 $\\mathbf{x}_{R} \\in \\Gamma_{R}$，有 $\\mathbf{J}(\\mathbf{x}_{L},t) = \\mathbf{J}(\\mathbf{x}_{R},t)$。穿过这对面的总通量为 $\\int_{\\Gamma_{L}} \\mathbf{J} \\cdot \\mathbf{n}_{L}\\,\\mathrm{d}S + \\int_{\\Gamma_{R}} \\mathbf{J} \\cdot \\mathbf{n}_{R}\\,\\mathrm{d}S$。利用周期性关系，这变为 $\\int_{\\text{face}} \\mathbf{J} \\cdot (-\\mathbf{n}_{R})\\,\\mathrm{d}S + \\int_{\\text{face}} \\mathbf{J} \\cdot \\mathbf{n}_{R}\\,\\mathrm{d}S = 0$。由于每对相对面的净通量都为零，因此整个边界上的总通量积分 $\\oint_{\\partial \\Omega} \\mathbf{J} \\cdot \\mathbf{n}\\,\\mathrm{d}S$ 为零。质量守恒。关于匹配法向导数的措辞正确地反映了场周期性的结果。结论：**正确**。\n\nD. 仅对 $c$ 使用齐次 Neumann 条件：在 $\\partial \\Omega$ 上施加 $\\mathbf{n}\\cdot \\nabla c = 0$，但让 $\\mu$ 在 $\\partial \\Omega$ 上任意。\n该陈述不正确。质量守恒由通量决定，而通量取决于 $\\nabla \\mu$，而非 $\\nabla c$。条件 $\\mathbf{n} \\cdot \\nabla c = 0$ 并不约束通量 $\\mathbf{J} \\cdot \\mathbf{n}$。如果对 $\\mu$ 的边界条件保持“任意”，人们可以轻易地选择一个条件（例如，一个非恒定的 Dirichlet 条件），导致非零边界通量，从而违反质量守恒。该陈述存在根本性缺陷。结论：**不正确**。\n\nE. 对 $c$ 使用 Dirichlet 条件，对 $\\mu$ 使用齐次 Neumann 条件：在 $\\partial \\Omega$ 上规定 $c = c_{b}(\\mathbf{x},t)$ 并施加 $\\mathbf{n}\\cdot \\nabla \\mu = 0$。\n该陈述正确。保证质量守恒的条件是关于通量的条件。与选项 B 一样，对化学势明确施加齐次 Neumann 条件，即 $\\mathbf{n}\\cdot \\nabla \\mu = 0$，可以确保通量的法向分量 $\\mathbf{J} \\cdot \\mathbf{n} = -L(\\mathbf{n}\\cdot\\nabla\\mu)$ 在边界 $\\partial \\Omega$ 上处处为零。这直接使得总通量积分 $\\oint_{\\partial \\Omega} \\mathbf{J} \\cdot \\mathbf{n}\\,\\mathrm{d}S$ 为零，从而保证质量守恒。伴随的对 $c$ 的 Dirichlet 条件 $c=c_{b}(\\mathbf{x},t)$ 仅作为提出问题所需的第二个边界条件；它不影响由对 $\\mu$ 的无通量条件所提供的质量守恒的数学保证。结论：**正确**。", "answer": "$$\\boxed{BCE}$$", "id": "2508078"}, {"introduction": "理论的最终检验和应用往往依赖于计算。许多真实的相场问题过于复杂，无法求得解析解，必须借助数值方法。本练习提供了一个直接连接理论与实践的机会，你将亲手为Cahn-Hilliard方程实现一个数值求解器，并用它来验证模型最重要的物理原理之一：系统自由能随时间的单调递减。这个实践将深化你对相场模型动力学本质及其计算实现的理解。", "problem": "考虑 Cahn–Hilliard 方程，其描述了一个定义在长度为 $L$ 的一维周期性域上的守恒相场 $c(x,t)$，\n$$\n\\frac{\\partial c}{\\partial t} = M \\nabla^2 \\mu,\\quad \\mu = \\frac{\\delta \\mathcal{F}}{\\delta c},\n$$\n其中自由能泛函为\n$$\n\\mathcal{F}[c] = \\int_0^L \\left( F(c) + \\frac{\\kappa}{2} \\left|\\nabla c\\right|^2 \\right)\\, dx,\\quad F(c) = \\frac{1}{4}\\left(c^2-1\\right)^2,\n$$\n迁移率 $M>0$，梯度能量系数 $\\kappa>0$。假设采用周期性边界条件和无量纲变量，因此在计算或输出的任何部分都不需要物理单位。\n\n您的任务是从这些定义和第一性原理出发，通过调用变分导数和化学势的定义，推导一个时间上一阶精确的傅里叶伪谱半隐式离散格式。在该格式中，由梯度能量项产生的对化学势的贡献被隐式处理，而非线性体导数 $F'(c)$ 则被显式处理。使用在长度为 $L$ 的周期性区间上的具有 $N$ 个点的均匀网格来离散化空间，并使用快速傅里叶变换在谱空间中表示空间导数。将相场 $c$ 向前演化指定数量的时间步 $\\Delta t$，并使用网格上的梯形法则计算每个时间步的离散自由能：\n$$\n\\mathcal{F}_h[c] = \\sum_{j=0}^{N-1} \\left[ \\frac{1}{4}\\left(c_j^2-1\\right)^2 + \\frac{\\kappa}{2} \\left(\\partial_x c\\big|_j\\right)^2 \\right] \\Delta x,\n$$\n其中 $\\Delta x = L/N$，$c_j = c(x_j)$，$x_j = j\\,\\Delta x$，并且 $\\partial_x c$ 通过将 $c$ 的傅里叶系数与对应于所选 $L$ 和 $N$ 的标准波数 $k$ 乘以 $\\mathrm{i}k$ 在谱空间中计算。您必须对每个测试用例验证离散自由能序列 $\\{\\mathcal{F}_h^n\\}_{n=0}^{N_t}$（其中 $N_t$ 是时间步数）是否单调不增，即对于所有 $n$，是否有 $\\mathcal{F}_h^{n+1} \\le \\mathcal{F}_h^{n}$。由于浮点舍入误差，您可以允许一个通过算法确定的小的非负容差，但您必须在您的解决方案中解释和证明您的选择。\n\n将您的推导实现为一个可执行程序，该程序为每个指定的参数集构建谱算子，推进半隐式格式，计算每一步的离散自由能，并返回一个布尔值，以指示在整个运行过程中自由能是否单调递减。\n\n使用以下参数集作为测试套件。对于所有情况，设域长度为 $L=2\\pi$，并使用无量纲参数。“噪声”情况下的初始条件是具有零均值和指定振幅的空间不相关高斯扰动，可通过指定的伪随机种子复现。“均匀”情况下的初始条件是空间常数。对于每种情况，报告自由能是否在所采取的步骤中单调不增。\n\n- 情况 1（理想情况）：$N=128$，$M=1$，$\\kappa=10^{-2}$，$\\Delta t = 2\\times 10^{-5}$，步数 $N_t=2000$，初始条件类型为“噪声”，振幅 $10^{-2}$，种子 $1$。\n- 情况 2（中等小时间步）：$N=128$，$M=1$，$\\kappa=10^{-2}$，$\\Delta t = 10^{-4}$，步数 $N_t=400$，初始条件类型为“噪声”，振幅 $10^{-2}$，种子 $2$。\n- 情况 3（体能量最小值处的边界条件）：$N=64$，$M=1$，$\\kappa=10^{-2}$，$\\Delta t = 5\\times 10^{-4}$，步数 $N_t=200$，初始条件类型为“均匀”，值为 $+1$。\n- 情况 4（较大时间步，可能违反单调衰减）：$N=128$，$M=1$，$\\kappa=10^{-2}$，$\\Delta t = 2\\times 10^{-3}$，步数 $N_t=100$，初始条件类型为“噪声”，振幅 $10^{-2}$，种子 $3$。\n\n所有变量和参数都是无量纲的；任何量都不需要物理单位。您的程序必须在单行中生成一个包含四个布尔值的列表，这些布尔值按上述顺序对应四种情况。最终输出格式必须是仅包含一行由方括号括起来的、以逗号分隔的结果列表，例如，“[True,False,True,True]”。\n\n您的实现必须是自包含的，使用傅里叶伪谱表示法来处理空间导数，并且遵循您从所述原理推导出的半隐式时间离散格式，不依赖任何外部数据。不要包含任何无关的输出。唯一可接受的输出是指定的单行布尔值列表。", "solution": "该问题是有效的，因为它具有科学依据，问题陈述清晰且客观。它提出了一个计算材料物理学中的标准数值任务，并提供了所有必要的信息。我们继续进行推导和求解。\n\nCahn-Hilliard 方程描述守恒相场 $c(x,t)$ 的演化，其形式为\n$$\n\\frac{\\partial c}{\\partial t} = M \\nabla^2 \\mu,\n$$\n其中 $M$ 是迁移率，$\\mu$ 是化学势。化学势定义为 Ginzburg-Landau 自由能泛函 $\\mathcal{F}[c]$ 相对于相场 $c$ 的变分导数：\n$$\n\\mu = \\frac{\\delta \\mathcal{F}}{\\delta c}.\n$$\n自由能泛函由下式给出\n$$\n\\mathcal{F}[c] = \\int_0^L \\left( F(c) + \\frac{\\kappa}{2} |\\nabla c|^2 \\right) dx,\n$$\n其中具有双阱体能量密度 $F(c) = \\frac{1}{4}(c^2-1)^2$ 和梯度能量系数 $\\kappa > 0$。\n\n首先，我们推导化学势 $\\mu$ 的显式形式。泛函的被积函数是 $I(c, \\nabla c) = F(c) + \\frac{\\kappa}{2} |\\nabla c|^2$。变分导数通过欧拉-拉格朗日方程求得：\n$$\n\\mu = \\frac{\\delta \\mathcal{F}}{\\delta c} = \\frac{\\partial I}{\\partial c} - \\nabla \\cdot \\frac{\\partial I}{\\partial (\\nabla c)}.\n$$\n所需的偏导数为：\n$$\n\\frac{\\partial I}{\\partial c} = \\frac{dF}{dc} = \\frac{d}{dc}\\left[\\frac{1}{4}(c^2-1)^2\\right] = \\frac{1}{4} \\cdot 2(c^2-1) \\cdot 2c = c^3 - c.\n$$\n$$\n\\frac{\\partial I}{\\partial (\\nabla c)} = \\kappa \\nabla c.\n$$\n将它们代入 $\\mu$ 的表达式中，得到：\n$$\n\\mu = (c^3 - c) - \\kappa \\nabla^2 c.\n$$\n将此式代入 Cahn-Hilliard 方程，得到完整的四阶非线性偏微分方程：\n$$\n\\frac{\\partial c}{\\partial t} = M \\nabla^2 (c^3 - c - \\kappa \\nabla^2 c) = M \\left( \\nabla^2(c^3 - c) - \\kappa \\nabla^4 c \\right).\n$$\n\n对于数值求解，我们采用傅里叶伪谱方法进行空间离散，并采用半隐式一阶格式进行时间积分。空间域 $[0, L]$ 被离散化为 $N$ 个网格点 $x_j = j \\Delta x$，网格间距为 $\\Delta x = L/N$。相场 $c(x,t)$ 由其在该网格上的值 $c_j(t)$ 表示。在傅里叶谱方法中，空间导数在傅里叶空间中计算。函数 $f(x)$ 被变换为其傅里叶系数 $\\hat{f}(k)$，其中 $k$是波数。在傅里叶空间中，$n$ 阶导数对应于乘以 $(ik)^n$。因此，$\\nabla^2$ 变为乘以 $-k^2$，$\\nabla^4$ 变为乘以 $k^4$。\n\n问题要求一个半隐式时间推进格式，其中来自 $F'(c) = c^3-c$ 的非线性体项的贡献被显式处理，而刚性的梯度能量项 $-\\kappa\\nabla^2 c$ 被隐式处理。对显式部分使用一阶前向欧拉法，对隐式部分使用后向欧拉法，从时间步 $n$ 到 $n+1$，时间步长为 $\\Delta t$ 的时间离散化方程为：\n$$\n\\frac{c^{n+1} - c^n}{\\Delta t} = M \\nabla^2 \\left[ ( (c^n)^3 - c^n ) - \\kappa \\nabla^2 c^{n+1} \\right].\n$$\n该方程在傅里叶空间中是代数形式的，这使得求解 $\\hat{c}^{n+1}$ 变得容易。设 $\\hat{c}^n(k)$ 为 $c^n(x_j)$ 的离散傅里叶变换。对该方程进行变换，我们得到：\n$$\n\\frac{\\hat{c}^{n+1} - \\hat{c}^n}{\\Delta t} = M (-k^2) \\left[ \\widehat{((c^n)^3 - c^n)} + \\kappa k^2 \\hat{c}^{n+1} \\right].\n$$\n项 $\\widehat{((c^n)^3 - c^n)}$ 是伪谱计算的：在每个网格点上计算实空间中的表达式 $(c^n)^3 - c^n$，然后将结果变换到傅里叶空间。\n我们重新整理方程以求解 $\\hat{c}^{n+1}(k)$：\n$$\n\\hat{c}^{n+1} - \\hat{c}^n = -M k^2 \\Delta t \\, \\widehat{((c^n)^3 - c^n)} - M \\kappa k^4 \\Delta t \\, \\hat{c}^{n+1}\n$$\n$$\n\\hat{c}^{n+1}(1 + M \\kappa k^4 \\Delta t) = \\hat{c}^n - M k^2 \\Delta t \\, \\widehat{((c^n)^3 - c^n)}\n$$\n这给出了每个时间步傅里叶系数的更新规则：\n$$\n\\hat{c}^{n+1}(k) = \\frac{\\hat{c}^n(k) - M k^2 \\Delta t \\, \\widehat{((c^n)^3 - c^n)}(k)}{1 + M \\kappa k^4 \\Delta t}.\n$$\n在每个时间步，我们从 $c^n$ 开始，计算其傅里叶变换 $\\hat{c}^n$，计算非线性项及其变换，应用更新规则找到 $\\hat{c}^{n+1}$，然后执行逆傅里叶变换以获得 $c^{n+1}$。\n\n离散自由能 $\\mathcal{F}_h$ 在每一步使用网格上的梯形法则计算：\n$$\n\\mathcal{F}_h[c] = \\sum_{j=0}^{N-1} \\left[ \\frac{1}{4}(c_j^2-1)^2 + \\frac{\\kappa}{2} (\\partial_x c|_j)^2 \\right] \\Delta x.\n$$\n空间导数 $\\partial_x c$ 通过对 $c$ 进行傅里叶变换，将系数 $\\hat{c}(k)$ 乘以 $ik$，然后进行逆傅里叶变换来在谱空间中计算。\n\n我们必须验证能量序列 $\\{\\mathcal{F}_h^n\\}$ 是否单调不增。使用有限精度算术的数值计算会引入舍入误差。因此，对严格不等式 $\\mathcal{F}_h^{n+1} \\le \\mathcal{F}_h^{n}$ 的检查是不合适的。只有当能量增加超过某个容差时，才认为该增加是显著的。一个鲁棒的容差必须同时考虑能量接近零时潜在舍入误差的绝对量级和能量较大时的相对误差。我们将容差 $\\epsilon_{tol}$ 定义为一个绝对分量 $\\tau_{abs}$ 和一个相对分量 $\\tau_{rel} \\cdot |\\mathcal{F}_h^n|$ 的和。那么，非单调步骤的条件是 $\\mathcal{F}_h^{n+1} - \\mathcal{F}_h^n > \\tau_{abs} + \\tau_{rel} |\\mathcal{F}_h^n|$。对于使用的双精度浮点数，我们选择保守值 $\\tau_{abs} = 10^{-12}$ 和 $\\tau_{rel} = 10^{-10}$。如果任何时间步 $n$ 满足此条件，则认为能量序列是非单调的。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function to run all test cases and print the final result.\n    \"\"\"\n    test_cases = [\n        # Case 1 (happy path): N=128, M=1, kappa=10^-2, dt=2x10^-5, Nt=2000, \n        # IC noise amp=10^-2, seed=1.\n        {'N': 128, 'M': 1.0, 'kappa': 1e-2, 'dt': 2e-5, 'Nt': 2000, \n         'ic_type': 'noise', 'ic_params': (1e-2, 1)},\n        # Case 2 (moderately small time step): N=128, M=1, kappa=10^-2, dt=10^-4, Nt=400,\n        # IC noise amp=10^-2, seed=2.\n        {'N': 128, 'M': 1.0, 'kappa': 1e-2, 'dt': 1e-4, 'Nt': 400, \n         'ic_type': 'noise', 'ic_params': (1e-2, 2)},\n        # Case 3 (boundary condition at a bulk minimum): N=64, M=1, kappa=10^-2, dt=5x10-4, Nt=200,\n        # IC uniform value=+1.\n        {'N': 64, 'M': 1.0, 'kappa': 1e-2, 'dt': 5e-4, 'Nt': 200,\n         'ic_type': 'uniform', 'ic_params': (1.0,)},\n        # Case 4 (larger time step, potential to violate monotonic decay): N=128, M=1, kappa=10^-2, dt=2x10-3, Nt=100,\n        # IC noise amp=10^-2, seed=3.\n        {'N': 128, 'M': 1.0, 'kappa': 1e-2, 'dt': 2e-3, 'Nt': 100,\n         'ic_type': 'noise', 'ic_params': (1e-2, 3)},\n    ]\n\n    results = []\n    for case in test_cases:\n        result = run_simulation(**case)\n        results.append(result)\n\n    # Format the final output string as specified\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef run_simulation(N, M, kappa, dt, Nt, ic_type, ic_params):\n    \"\"\"\n    Runs a single Cahn-Hilliard simulation for a given set of parameters.\n    Returns a boolean indicating if the free energy was monotonically non-increasing.\n    \"\"\"\n    L = 2.0 * np.pi\n    dx = L / N\n    k = 2.0 * np.pi * np.fft.fftfreq(N, d=dx)\n\n    # Set up initial condition\n    if ic_type == \"noise\":\n        amplitude, seed = ic_params\n        np.random.seed(seed)\n        c = amplitude * np.random.randn(N)\n    elif ic_type == \"uniform\":\n        value = ic_params[0]\n        c = np.full(N, value, dtype=float)\n\n    # Pre-calculate the denominator for the semi-implicit scheme, as it is constant.\n    den = 1.0 + M * kappa * k**4 * dt\n\n    energies = []\n    \n    # Calculate and store initial energy\n    energies.append(calculate_energy(c, k, kappa, dx))\n\n    # Perform time-stepping\n    for _ in range(Nt):\n        # Evaluate nonlinear term F'(c) = c^3 - c in real space\n        F_prime = c**3 - c\n        F_prime_hat = np.fft.fft(F_prime)\n        \n        c_hat = np.fft.fft(c)\n        \n        # Calculate numerator of the update rule\n        num = c_hat - M * dt * k**2 * F_prime_hat\n        \n        # Update concentration field in Fourier space\n        c_hat_new = num / den\n        \n        # Transform back to real space for the next step\n        # Taking np.real is necessary to discard numerical noise in the imaginary part\n        c = np.real(np.fft.ifft(c_hat_new))\n        \n        # Calculate and store energy of the new state\n        energies.append(calculate_energy(c, k, kappa, dx))\n\n    # Check for monotonic decrease in the stored energy sequence\n    is_monotonic = True\n    for i in range(len(energies) - 1):\n        # A tolerance is necessary for floating-point comparisons.\n        # It combines an absolute component for near-zero energies and\n        # a relative component for larger energies.\n        abs_tol = 1e-12\n        rel_tol = 1e-10\n        tolerance = abs_tol + rel_tol * abs(energies[i])\n        \n        if energies[i+1] > energies[i] + tolerance:\n            is_monotonic = False\n            break\n            \n    return is_monotonic\n\ndef calculate_energy(c, k, kappa, dx):\n    \"\"\"\n    Computes the discrete free energy of the system using the trapezoidal rule.\n    \"\"\"\n    # Bulk energy contribution: F(c) = (1/4)(c^2-1)^2\n    bulk_energy_density = 0.25 * (c**2 - 1)**2\n    \n    # Gradient energy contribution: (kappa/2) |grad c|^2\n    # The derivative is computed spectrally for high accuracy.\n    c_hat = np.fft.fft(c)\n    grad_c_hat = 1j * k * c_hat\n    grad_c = np.real(np.fft.ifft(grad_c_hat))\n    gradient_energy_density = 0.5 * kappa * grad_c**2\n    \n    # Total free energy is the integral over the domain, approximated by a sum.\n    # For a periodic function on a uniform grid, this sum is the trapezoidal rule.\n    total_energy = np.sum(bulk_energy_density + gradient_energy_density) * dx\n    return total_energy\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2847487"}]}