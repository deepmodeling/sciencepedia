{"hands_on_practices": [{"introduction": "保护性氧化膜的生长速率通常由离子穿过其厚度的速度决定。然而，这种输运并非均匀发生；在多晶材料中，晶界等“快速通道”往往可以主导整体扩散过程。本练习将引导你运用一个经典的并行扩散模型，来定量比较通过晶格（体扩散）和通过晶界这两种相互竞争的路径对氧化物生长动力学的贡献，从而深入理解微观结构在决定材料宏观性能中的关键作用。[@problem_id:2506040]", "problem": "一种致密的、附着性良好的金属氧化膜在氧气气氛下形成，并在温度 $T$ 下表现出受扩散控制的（抛物线型）生长。其速率限制步骤是单一可动离子缺陷物种在均匀化学势梯度的驱动下，穿过氧化物厚度 $x(t)$ 的稳态扩散。该氧化物是多晶的，具有贯穿膜厚的柱状晶粒，晶粒尺寸为 $d$，晶界宽度为 $\\delta$，并且处于所谓的中间耦合区，其中晶界作为快速、连续的扩散路径，与相邻的晶格交换缺陷。假设如下：\n- 菲克第一定律对晶格和晶界区域均成立，其本征扩散系数分别为 $D_{\\ell}$（晶格）和 $D_{\\mathrm{gb}}$（晶界），并且具有相同的热力学因子，因此驱动化学势梯度在两个区域中产生相同的浓度梯度。\n- 对于柱状晶粒，晶界近似排列为每个面内方向两个正交族，因此与扩散方向垂直的平面相交的晶界材料的面积分数是 $f \\approx 2\\,\\delta/d$。三叉晶界可以忽略不计，并且没有偏析（偏析因子等于1）。\n- 总通量是穿过膜横截面的晶格通量和晶界通量的并联总和，并且在移动界面处的质量守恒将通量转化为厚度变化，从而导致抛物线动力学。\n\n从菲克第一定律和给定的几何分数 $f$ 出发，推导晶界对抛物线速率常数的贡献与晶格（体）对抛物线速率常数的贡献之比 $R$ 的表达式。然后，对于 $D_{\\ell} = 1.0 \\times 10^{-16}$ m$^{2}$ s$^{-1}$，$D_{\\mathrm{gb}} = 1.0 \\times 10^{-12}$ m$^{2}$ s$^{-1}$，$\\delta = 0.8$ nm 和 $d = 100$ nm，对 $R$ 进行数值计算。以纯数字形式报告 $R$。将您的答案四舍五入到四位有效数字。", "solution": "该问题要求推导在扩散控制的氧化物生长中，晶界和晶格对抛物线速率常数的贡献之比，然后进行数值计算。所提供的物理模型是物质通过晶格和晶界进行并联扩散的模型。\n\n设时间 $t$ 时氧化膜的厚度为 $x(t)$。其生长由一种离子缺陷物种的稳态扩散所控制。该物种穿过垂直于扩散方向的平面的总通量 $J_{\\text{total}}$，是穿过晶格（体）的通量 $J_{\\ell}$ 和穿过晶界的通量 $J_{\\mathrm{gb}}$ 按其各自的横截面积分数加权的总和。\n\n晶界的面积分数 $f$ 由 $f \\approx \\frac{2\\delta}{d}$ 给出，其中 $\\delta$ 是晶界宽度，$d$ 是晶粒尺寸。因此，晶格的面积分数为 $(1-f)$。总通量由并联传导模型给出：\n$$\nJ_{\\text{total}} = J_{\\ell}(1-f) + J_{\\mathrm{gb}}f\n$$\n\n根据菲克第一定律，通量与浓度梯度成正比。问题陈述，均匀的化学势梯度在晶格和晶界区域中产生相同的浓度梯度，我们将其表示为 $\\nabla C$。对于穿过厚度为 $x$ 的薄膜的稳态扩散，这个梯度可以近似为 $\\nabla C \\approx -\\frac{\\Delta C}{x}$，其中 $\\Delta C$ 是可移动物种穿过薄膜的浓度差。晶格和晶界中的通量为：\n$$\nJ_{\\ell} = -D_{\\ell} \\nabla C = D_{\\ell} \\frac{\\Delta C}{x}\n$$\n$$\nJ_{\\mathrm{gb}} = -D_{\\mathrm{gb}} \\nabla C = D_{\\mathrm{gb}} \\frac{\\Delta C}{x}\n$$\n其中 $D_{\\ell}$ 和 $D_{\\mathrm{gb}}$ 分别是晶格和晶界扩散系数。\n\n将这些表达式代入总通量的方程中：\n$$\nJ_{\\text{total}} = \\left( D_{\\ell} \\frac{\\Delta C}{x} \\right) (1-f) + \\left( D_{\\mathrm{gb}} \\frac{\\Delta C}{x} \\right) f\n$$\n这可以用有效扩散系数 $D_{\\text{eff}}$ 来表示：\n$$\nJ_{\\text{total}} = \\left( D_{\\ell}(1-f) + D_{\\mathrm{gb}}f \\right) \\frac{\\Delta C}{x} = D_{\\text{eff}} \\frac{\\Delta C}{x}\n$$\n其中 $D_{\\text{eff}} = D_{\\ell}(1-f) + D_{\\mathrm{gb}}f$。这是用于并联扩散路径的Hart-Mortlock方程。\n\n氧化物的生长速率 $\\frac{dx}{dt}$ 与生长界面处的通量成正比。设 $\\Omega$ 是每摩尔扩散物种形成的氧化物体积。质量守恒要求：\n$$\n\\frac{dx}{dt} = \\Omega J_{\\text{total}} = \\Omega D_{\\text{eff}} \\frac{\\Delta C}{x}\n$$\n重新整理并对该微分方程进行积分，得到抛物线速率定律：\n$$\nx \\frac{dx}{dt} = \\Omega D_{\\text{eff}} \\Delta C\n$$\n$$\n\\int_0^{x(t)} x' dx' = \\int_0^t \\Omega D_{\\text{eff}} \\Delta C dt'\n$$\n$$\n\\frac{1}{2}x^2 = (\\Omega D_{\\text{eff}} \\Delta C)t\n$$\n这就是 $x^2 = k_p t$ 的形式，其中抛物线速率常数 $k_p$ 为：\n$$\nk_p = 2 \\Omega \\Delta C D_{\\text{eff}} = 2 \\Omega \\Delta C \\left( D_{\\ell}(1-f) + D_{\\mathrm{gb}}f \\right)\n$$\n抛物线速率常数 $k_p$ 可以分解为来自晶格的贡献 $k_{p,\\ell}$ 和来自晶界的贡献 $k_{p,\\mathrm{gb}}$：\n$$\nk_p = k_{p,\\ell} + k_{p,\\mathrm{gb}}\n$$\n其中\n$$\nk_{p,\\ell} = (2 \\Omega \\Delta C) D_{\\ell}(1-f)\n$$\n$$\nk_{p,\\mathrm{gb}} = (2 \\Omega \\Delta C) D_{\\mathrm{gb}}f\n$$\n问题要求的是晶界对抛物线速率常数的贡献与晶格对抛物线速率常数的贡献之比 $R$。\n$$\nR = \\frac{k_{p,\\mathrm{gb}}}{k_{p,\\ell}} = \\frac{(2 \\Omega \\Delta C) D_{\\mathrm{gb}}f}{(2 \\Omega \\Delta C) D_{\\ell}(1-f)}\n$$\n前置因子相互抵消，得到 $R$ 的表达式：\n$$\nR = \\frac{f D_{\\mathrm{gb}}}{(1-f)D_{\\ell}}\n$$\n代入给定的几何近似 $f = \\frac{2\\delta}{d}$：\n$$\nR = \\frac{\\left(\\frac{2\\delta}{d}\\right) D_{\\mathrm{gb}}}{\\left(1-\\frac{2\\delta}{d}\\right)D_{\\ell}}\n$$\n这就是推导出的比率 $R$ 的表达式。\n\n现在，我们使用所提供的数据对 $R$ 进行数值计算：\n$D_{\\ell} = 1.0 \\times 10^{-16} \\, \\text{m}^{2} \\, \\text{s}^{-1}$\n$D_{\\mathrm{gb}} = 1.0 \\times 10^{-12} \\, \\text{m}^{2} \\, \\text{s}^{-1}$\n$\\delta = 0.8 \\, \\text{nm} = 0.8 \\times 10^{-9} \\, \\text{m}$\n$d = 100 \\, \\text{nm} = 100 \\times 10^{-9} \\, \\text{m} = 1.0 \\times 10^{-7} \\, \\text{m}$\n\n首先，计算晶界的面积分数 $f$：\n$$\nf = \\frac{2\\delta}{d} = \\frac{2 \\times (0.8 \\times 10^{-9} \\, \\text{m})}{1.0 \\times 10^{-7} \\, \\text{m}} = \\frac{1.6 \\times 10^{-9}}{1.0 \\times 10^{-7}} = 0.016\n$$\n因此，晶格面积的分数为：\n$$\n1-f = 1 - 0.016 = 0.984\n$$\n现在，将这些值代入 $R$ 的表达式中：\n$$\nR = \\frac{f D_{\\mathrm{gb}}}{(1-f)D_{\\ell}} = \\frac{0.016 \\times (1.0 \\times 10^{-12} \\, \\text{m}^{2} \\, \\text{s}^{-1})}{0.984 \\times (1.0 \\times 10^{-16} \\, \\text{m}^{2} \\, \\text{s}^{-1})}\n$$\n$$\nR = \\frac{0.016}{0.984} \\times \\frac{1.0 \\times 10^{-12}}{1.0 \\times 10^{-16}} = \\frac{0.016}{0.984} \\times 10^4\n$$\n计算数值：\n$$\nR \\approx 0.016260163 \\times 10^4 \\approx 162.60163\n$$\n按要求将结果四舍五入到四位有效数字：\n$$\nR \\approx 162.6\n$$\n这个结果表明，在给定条件下，由于晶界中的扩散系数要高得多，通过狭窄晶界路径的总输运量比通过宽得多的晶格路径的输运量大 $160$ 多倍。", "answer": "$$\\boxed{162.6}$$", "id": "2506040"}, {"introduction": "我们已经知道扩散是氧化膜生长的核心，但下一个关键问题是“什么在扩散？”。离子扩散是通过晶格中的点缺陷（例如空位）实现的，因此，理解这些缺陷的浓度至关重要。本练习将带你从理论走向实践，学习如何利用现代量子力学计算（如密度泛函理论，DFT）得出的第一性原理数据，来预测在特定温度和环境下，氧化物中关键点缺陷的平衡浓度。[@problem_id:2506026]", "problem": "你的任务是将基于密度泛函理论 (DFT) 的第一性原理形成能，转换为在温度 $T=800\\ \\mathrm{K}$ 时三氧化二铬 ($\\mathrm{Cr_2O_3}$) 中氧空位的平衡点缺陷浓度。对固定的氧位亚晶格上的稀释缺陷布居使用正则系综统计力学方法。假设以下基于物理的定义和约束。\n\n1. 基本原理：\n   - 在稀疏极限下，形成自由能为 $\\Delta G_\\mathrm{f}$ 的缺陷种类的平衡浓度遵循 Boltzmann 分布，其表达式为 $c = N_\\mathrm{sites}\\,\\exp\\!\\left(-\\Delta G_\\mathrm{f}/(k_\\mathrm{B}T)\\right)$，其中 $N_\\mathrm{sites}$ 是可用晶格位置的密度。\n   - 在温度 $T$ 和氧分压 $p_{\\mathrm{O}_2}$ 下，氧化学势为 $\\mu_{\\mathrm{O}_2}(T,p_{\\mathrm{O}_2})=\\mu_{\\mathrm{O}_2}^0(T,p_0)+k_\\mathrm{B}T\\ln\\!\\left(p_{\\mathrm{O}_2}/p_0\\right)$，其中 $p_0$ 是参考压力。氧原子化学势为 $\\mu_{\\mathrm{O}}=\\tfrac{1}{2}\\mu_{\\mathrm{O}_2}$。因此，相对于参考态的偏移为 $\\Delta\\mu_{\\mathrm{O}}(T,p_{\\mathrm{O}_2})=\\tfrac{1}{2}k_\\mathrm{B}T\\ln\\!\\left(p_{\\mathrm{O}_2}/p_0\\right)$。\n   - 对于电荷态为 $q\\in\\{0,+1,+2\\}$ 的氧空位，其在一般 Fermi 能级 $E_\\mathrm{F}$（从价带顶计算）和氧分压 $p_{\\mathrm{O}_2}$ 下的形成自由能模型为\n     $$E_\\mathrm{f}^{(q)}(E_\\mathrm{F},p_{\\mathrm{O}_2})=E_{0}^{(q)}+\\Delta\\mu_{\\mathrm{O}}(T,p_{\\mathrm{O}_2})+q\\,E_\\mathrm{F},$$\n     其中 $E_{0}^{(q)}$ 是参考于 $\\mu_{\\mathrm{O}_2}^0(T,p_0)$ 且 $E_\\mathrm{F}=0$ 时的形成自由能。\n\n2. 在 $T=800\\ \\mathrm{K}$ 时 $\\mathrm{Cr_2O_3}$ 的数据：\n   - 使用 $k_\\mathrm{B}=8.617333262145\\times 10^{-5}\\ \\mathrm{eV/K}$。\n   - 参考压力为 $p_0=1\\ \\mathrm{atm}$。\n   - 带隙为 $E_\\mathrm{g}=3.4\\ \\mathrm{eV}$，因此 $E_\\mathrm{F}\\in[0,E_\\mathrm{g}]$。\n   - 氧位密度为 $N_\\mathrm{sites}=6.20\\times 10^{22}\\ \\mathrm{cm^{-3}}$。\n   - 在 $p_0$ 和 $E_\\mathrm{F}=0$ 时的密度泛函理论 (DFT) 参考形成自由能：\n     - 中性氧空位：$E_{0}^{(0)}=4.00\\ \\mathrm{eV}$。\n     - 单正电荷氧空位：$E_{0}^{(+1)}=3.20\\ \\mathrm{eV}$。\n     - 双正电荷氧空位：$E_{0}^{(+2)}=2.50\\ \\mathrm{eV}$。\n\n3. 建模假设：\n   - 将缺陷布居视为理想且极度稀释，从而位点排斥可以被线性化；总空位浓度是各电荷态之和：\n     $$c_\\mathrm{tot}(E_\\mathrm{F},p_{\\mathrm{O}_2})=\\sum_{q\\in\\{0,+1,+2\\}} N_\\mathrm{sites}\\,\\exp\\!\\left(-\\frac{E_\\mathrm{f}^{(q)}(E_\\mathrm{F},p_{\\mathrm{O}_2})}{k_\\mathrm{B}T}\\right).$$\n   - 忽略振动自由能修正和缺陷间的弹性相互作用。\n   - 假设每个位点上每个电荷态的构型简并度为1。\n\n4. 你的任务：\n   - 实现一个程序，对指定的 $(p_{\\mathrm{O}_2},E_\\mathrm{F})$ 对测试套件，使用上述方程计算 $c_\\mathrm{tot}$。\n   - 将每个最终浓度表示为以 $\\mathrm{cm^{-3}}$ 为单位的浮点数，并四舍五入到三位有效数字。不要打印单位。\n\n5. 测试套件：\n   - 案例 $1$：$(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(0.21\\ \\mathrm{atm},\\,1.0\\ \\mathrm{eV}\\right)$。\n   - 案例 $2$：$(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(1.0\\times 10^{-10}\\ \\mathrm{atm},\\,2.5\\ \\mathrm{eV}\\right)$。\n   - 案例 $3$：$(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(1.0\\ \\mathrm{atm},\\,0.0\\ \\mathrm{eV}\\right)$。\n   - 案例 $4$：$(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(10.0\\ \\mathrm{atm},\\,1.7\\ \\mathrm{eV}\\right)$。\n\n6. 最终输出格式：\n   - 你的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表，并按照案例1到4的顺序排列，例如：$\\left[\\mathrm{result_1},\\mathrm{result_2},\\mathrm{result_3},\\mathrm{result_4}\\right]$。", "solution": "该问题已根据既定标准进行了严格验证。\n\n**1. 提取已知条件：**\n- **系统**：三氧化二铬 ($\\mathrm{Cr_2O_3}$) 中的氧空位\n- **温度**：$T=800\\ \\mathrm{K}$\n- **Boltzmann 常数**：$k_\\mathrm{B}=8.617333262145\\times 10^{-5}\\ \\mathrm{eV/K}$\n- **参考压力**：$p_0=1\\ \\mathrm{atm}$\n- **带隙**：$E_\\mathrm{g}=3.4\\ \\mathrm{eV}$\n- **氧位密度**：$N_\\mathrm{sites}=6.20\\times 10^{22}\\ \\mathrm{cm^{-3}}$\n- **电荷态**：$q\\in\\{0,+1,+2\\}$\n- **在 $p_0$ 和 $E_\\mathrm{F}=0$ 时的参考形成能**：\n  - $E_{0}^{(0)}=4.00\\ \\mathrm{eV}$\n  - $E_{0}^{(+1)}=3.20\\ \\mathrm{eV}$\n  - $E_{0}^{(+2)}=2.50\\ \\mathrm{eV}$\n- **浓度模型**：$c = N_\\mathrm{sites}\\,\\exp\\!\\left(-\\Delta G_\\mathrm{f}/(k_\\mathrm{B}T)\\right)$\n- **形成能模型**：$E_\\mathrm{f}^{(q)}(E_\\mathrm{F},p_{\\mathrm{O}_2})=E_{0}^{(q)}+\\Delta\\mu_{\\mathrm{O}}(T,p_{\\mathrm{O}_2})+q\\,E_\\mathrm{F}$\n- **氧化学势偏移**：$\\Delta\\mu_{\\mathrm{O}}(T,p_{\\mathrm{O}_2})=\\tfrac{1}{2}k_\\mathrm{B}T\\ln\\!\\left(p_{\\mathrm{O}_2}/p_0\\right)$\n- **总浓度模型**：$c_\\mathrm{tot}(E_\\mathrm{F},p_{\\mathrm{O}_2})=\\sum_{q\\in\\{0,+1,+2\\}} c^{(q)}(E_\\mathrm{F},p_{\\mathrm{O}_2})$\n\n**2. 验证结论：**\n判定此问题**有效**。它在科学上基于统计力学和固态缺陷热力学的原理。其表述是适定的，为得到唯一解提供了所有必要的数据和方程。语言客观精确，所涉及系统的物理参数和条件是符合实际的。不存在矛盾、歧义或逻辑缺陷。\n\n**3. 求解方法：**\n氧空位的总平衡浓度 $c_\\mathrm{tot}$ 通过对每个电荷态 $q \\in \\{0, +1, +2\\}$ 的浓度求和来计算。对于每个给定的氧分压 $p_{\\mathrm{O}_2}$ 和 Fermi 能级 $E_\\mathrm{F}$ 测试对，计算过程如下。\n\n首先，计算热能：\n$$k_\\mathrm{B}T = (8.617333262145\\times 10^{-5}\\ \\mathrm{eV/K}) \\times (800\\ \\mathrm{K}) \\approx 0.068939\\ \\mathrm{eV}$$\n\n对于每个测试案例 $(p_{\\mathrm{O}_2}, E_\\mathrm{F})$：\n1.  计算相对于参考态的氧原子化学势偏移：\n    $$\\Delta\\mu_{\\mathrm{O}} = \\frac{1}{2}k_\\mathrm{B}T\\ln\\!\\left(\\frac{p_{\\mathrm{O}_2}}{p_0}\\right)$$\n2.  对每个电荷态 $q$，计算其形成能 $E_\\mathrm{f}^{(q)}$：\n    $$E_\\mathrm{f}^{(q)} = E_{0}^{(q)} + \\Delta\\mu_{\\mathrm{O}} + q\\,E_\\mathrm{F}$$\n3.  对每个电荷态 $q$，计算其浓度 $c^{(q)}$：\n    $$c^{(q)} = N_\\mathrm{sites}\\,\\exp\\!\\left(-\\frac{E_\\mathrm{f}^{(q)}}{k_\\mathrm{B}T}\\right)$$\n4.  將各浓度相加得到总浓度：\n    $$c_\\mathrm{tot} = c^{(0)} + c^{(+1)} + c^{(+2)}$$\n5.  最终结果四舍五入至三位有效数字。\n\n**4. 测试案例执行：**\n\n**案例 1:** $(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(0.21\\ \\mathrm{atm},\\,1.0\\ \\mathrm{eV}\\right)$\n1.  $\\Delta\\mu_{\\mathrm{O}} = \\frac{1}{2}(0.068939\\ \\mathrm{eV})\\ln(0.21) \\approx -0.05379\\ \\mathrm{eV}$。\n2.  $E_\\mathrm{f}^{(0)} = 4.00 - 0.05379 + 0 \\approx 3.946\\ \\mathrm{eV}$。\n3.  $E_\\mathrm{f}^{(+1)} = 3.20 - 0.05379 + 1.0 \\approx 4.146\\ \\mathrm{eV}$。\n4.  $E_\\mathrm{f}^{(+2)} = 2.50 - 0.05379 + 2(1.0) \\approx 4.446\\ \\mathrm{eV}$。\n5.  $c_\\mathrm{tot} = N_\\mathrm{sites} \\left( e^{-3.946/0.068939} + e^{-4.146/0.068939} + e^{-4.446/0.068939} \\right) \\approx 0.00819\\ \\mathrm{cm^{-3}}$。\n\n**案例 2:** $(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(1.0\\times 10^{-10}\\ \\mathrm{atm},\\,2.5\\ \\mathrm{eV}\\right)$\n1.  $\\Delta\\mu_{\\mathrm{O}} = \\frac{1}{2}(0.068939\\ \\mathrm{eV})\\ln(10^{-10}) \\approx -0.7936\\ \\mathrm{eV}$。\n2.  $E_\\mathrm{f}^{(0)} = 4.00 - 0.7936 + 0 \\approx 3.206\\ \\mathrm{eV}$。\n3.  $E_\\mathrm{f}^{(+1)} = 3.20 - 0.7936 + 2.5 \\approx 4.906\\ \\mathrm{eV}$。\n4.  $E_\\mathrm{f}^{(+2)} = 2.50 - 0.7936 + 2(2.5) \\approx 6.706\\ \\mathrm{eV}$。\n5.  $c_\\mathrm{tot} = N_\\mathrm{sites} \\left( e^{-3.206/0.068939} + e^{-4.906/0.068939} + e^{-6.706/0.068939} \\right) \\approx 354\\ \\mathrm{cm^{-3}}$。\n\n**案例 3:** $(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(1.0\\ \\mathrm{atm},\\,0.0\\ \\mathrm{eV}\\right)$\n1.  $\\Delta\\mu_{\\mathrm{O}} = \\frac{1}{2}(0.068939\\ \\mathrm{eV})\\ln(1.0) = 0\\ \\mathrm{eV}$。\n2.  $E_\\mathrm{f}^{(0)} = 4.00\\ \\mathrm{eV}$。\n3.  $E_\\mathrm{f}^{(+1)} = 3.20\\ \\mathrm{eV}$。\n4.  $E_\\mathrm{f}^{(+2)} = 2.50\\ \\mathrm{eV}$。\n5.  $c_\\mathrm{tot} = N_\\mathrm{sites} \\left( e^{-4.00/0.068939} + e^{-3.20/0.068939} + e^{-2.50/0.068939} \\right) \\approx 2.06\\times 10^7\\ \\mathrm{cm^{-3}}$。主要贡献来自于双正电荷空位 $V_{\\mathrm{O}}^{+2}$。\n\n**案例 4:** $(p_{\\mathrm{O}_2},E_\\mathrm{F})=\\left(10.0\\ \\mathrm{atm},\\,1.7\\ \\mathrm{eV}\\right)$\n1.  $\\Delta\\mu_{\\mathrm{O}} = \\frac{1}{2}(0.068939\\ \\mathrm{eV})\\ln(10.0) \\approx 0.07936\\ \\mathrm{eV}$。\n2.  $E_\\mathrm{f}^{(0)} = 4.00 + 0.07936 + 0 \\approx 4.079\\ \\mathrm{eV}$。\n3.  $E_\\mathrm{f}^{(+1)} = 3.20 + 0.07936 + 1.7 \\approx 4.979\\ \\mathrm{eV}$。\n4.  $E_\\mathrm{f}^{(+2)} = 2.50 + 0.07936 + 2(1.7) \\approx 5.979\\ \\mathrm{eV}$。\n5.  $c_\\mathrm{tot} = N_\\mathrm{sites} \\left( e^{-4.079/0.068939} + e^{-4.979/0.068939} + e^{-5.979/0.068939} \\right) \\approx 0.00125\\ \\mathrm{cm^{-3}}$。\n\n四舍五入至三位有效数字的最终计算结果是：$0.00819$、$354$、$2.06\\times 10^7$ 和 $0.00125$。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the total equilibrium concentration of oxygen vacancies in Cr2O3\n    for a given set of test cases based on a statistical mechanics model.\n    \"\"\"\n\n    # --- Constants and System Parameters ---\n    # Per the problem statement, all values are defined with high precision.\n    T = 800.0  # Temperature in Kelvin (K)\n    KB_EV_PER_K = 8.617333262145e-5  # Boltzmann constant in eV/K\n    P0 = 1.0  # Reference pressure in atm\n    N_SITES = 6.20e22  # Oxygen site density in cm^-3\n\n    # DFT-calculated reference formation energies E_0^(q) in eV\n    # for charge states q = 0, +1, +2\n    E0_Q = {\n        0: 4.00,  # Neutral vacancy\n        1: 3.20,  # Singly positive vacancy\n        2: 2.50,  # Doubly positive vacancy\n    }\n    \n    # Thermal energy term k_B * T\n    KBT = KB_EV_PER_K * T\n\n    # --- Test Cases ---\n    # Each case is a tuple (p_O2 in atm, E_F in eV)\n    test_cases = [\n        (0.21, 1.0),\n        (1.0e-10, 2.5),\n        (1.0, 0.0),\n        (10.0, 1.7),\n    ]\n\n    results = []\n\n    # --- Main Calculation Loop ---\n    for p_O2, E_F in test_cases:\n        # 1. Calculate the shift in oxygen chemical potential\n        delta_mu_O = 0.5 * KBT * np.log(p_O2 / P0)\n\n        total_concentration = 0.0\n\n        # 2. Iterate over each charge state q to calculate its contribution\n        for q, e0 in E0_Q.items():\n            # 3. Calculate the formation energy for the current state\n            # E_f^(q) = E_0^(q) + delta_mu_O + q * E_F\n            formation_energy = e0 + delta_mu_O + q * E_F\n\n            # 4. Calculate the concentration for the current state\n            # c^(q) = N_sites * exp(-E_f^(q) / (k_B * T))\n            # The exponent can be very negative, np.exp handles this gracefully.\n            concentration_q = N_SITES * np.exp(-formation_energy / KBT)\n            \n            # 5. Add to the total concentration\n            total_concentration += concentration_q\n        \n        # 6. Format the result to three significant figures\n        # The 'g' format specifier is ideal for this, correctly handling\n        # standard and scientific notation.\n        formatted_result = f'{total_concentration:.3g}'\n        results.append(formatted_result)\n\n    # --- Final Output ---\n    # Print the results in the required format: [result_1,result_2,...]\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2506026"}, {"introduction": "在建立了扩散路径和缺陷浓度的理论模型之后，我们如何在一个真实的材料中验证这些模型或测量相关参数呢？这个实践将让你扮演一名实验科学家的角色。你将学习如何分析常见的示踪物扩散实验数据（例如来自二次离子质谱，SIMS），并利用所学的扩散模型从中提取出我们在之前练习中探讨过的体扩散系数和晶界扩散系数，从而完成理论、计算与实验之间的闭环。[@problem_id:2506041]", "problem": "给定同位素交换后保护性氧化膜中示踪氧的横向平均二次离子质谱（SIMS）深度剖面。假设在探测深度范围内，该膜可被视为半无限介质，并且示踪物通过两种平行的路径进行扩散：穿过氧化物晶格（体扩散）和沿晶界的快速扩散。在持续时间为 $t$ 的交换过程中，氧化物表面（深度 $z=0$ 处）的示踪物活度保持恒定，而氧化物内部的初始示踪物浓度为零。SIMS信号与横向平均的示踪物浓度 $c(z,t)$ 成正比，此处已将其归一化，使得 $c(0,t)=1$。\n\n基本原理：从每条路径的菲克第二扩散定律 $\\partial c/\\partial t = D\\,\\partial^2 c/\\partial z^2$ 出发，采用适用于固定表面活度和固体中初始示踪物浓度为零的半无限介质的初始和边界条件。利用线性关系来证明，当SIMS信号在每个深度上对横向微观结构进行平均时，平行的、无相互作用的扩散路径可以如何组合。除基于此推导出的公式外，不要假设任何简化公式。\n\n您的任务是推导一个适用于拟合横向平均SIMS剖面的双路径扩散模型，然后实现一个数值参数提取方法，以推断测试套件中每个数据集的体扩散系数和晶界扩散系数。将体扩散系数记为 $D_b$，晶界扩散系数记为 $D_{gb}$。如果最佳拟合的晶界贡献可以忽略不计，请定义一个决策规则来报告未检测到晶界扩散。\n\n物理单位：深度 $z$ 的单位是米 ($\\mathrm{m}$)，时间 $t$的单位是秒 ($\\mathrm{s}$)，扩散系数必须以平方米每秒 ($\\mathrm{m^2\\,s^{-1}}$) 为单位报告。最终的扩散系数需用科学计数法表示，并保留三位有效数字。\n\n角度单位不适用。任何分数量必须以小数形式报告。\n\n测试套件：对于以下每种情况，给定时间 $t$、一个深度数组以及一个相应的归一化浓度数组。拟合双路径模型，并为每种情况输出扩散系数对 $\\{D_b, D_{gb}\\}$。如果推断出的晶界面积分数低于您必须从建模角度明确定义和论证的一个小阈值，则将 $D_{gb}$ 报告为 $0$ in $\\mathrm{m^2\\,s^{-1}}$。\n\n- 情况1（理想情况，混合传输）：\n  - $t = 3600\\,\\mathrm{s}$\n  - 深度 $z$（列表形式）：$[0,\\;2.0\\times 10^{-8},\\;4.0\\times 10^{-8},\\;6.0\\times 10^{-8},\\;8.0\\times 10^{-8},\\;1.0\\times 10^{-7},\\;1.5\\times 10^{-7},\\;2.0\\times 10^{-7}]\\,\\mathrm{m}$\n  - 归一化浓度 $c$（与 $z$ 长度相同）：$[1.0000,\\;0.8213,\\;0.6485,\\;0.4946,\\;0.3737,\\;0.2522,\\;0.1044,\\;0.0447]$\n\n- 情况2（短时间下由晶界主导的尾部）：\n  - $t = 1800\\,\\mathrm{s}$\n  - 深度 $z$（列表形式）：$[0,\\;1.0\\times 10^{-8},\\;2.0\\times 10^{-8},\\;4.0\\times 10^{-8},\\;6.0\\times 10^{-8},\\;8.0\\times 10^{-8},\\;1.2\\times 10^{-7},\\;1.5\\times 10^{-7}]\\,\\mathrm{m}$\n  - 归一化浓度 $c$：$[1.0000,\\;0.8309,\\;0.6667,\\;0.4060,\\;0.2238,\\;0.1349,\\;0.0825,\\;0.0781]$\n\n- 情况3（快速路径可忽略的边界情况）：\n  - $t = 7200\\,\\mathrm{s}$\n  - 深度 $z$：$[0,\\;4.0\\times 10^{-8},\\;8.0\\times 10^{-8},\\;1.2\\times 10^{-7},\\;1.6\\times 10^{-7},\\;2.0\\times 10^{-7},\\;2.4\\times 10^{-7},\\;3.0\\times 10^{-7}]\\,\\mathrm{m}$\n  - 归一化浓度 $c$：$[1.0000,\\;0.8160,\\;0.6380,\\;0.4795,\\;0.3550,\\;0.2300,\\;0.1573,\\;0.0780]$\n\n最终输出格式：您的程序应生成单行文本，包含三种情况下推断出的六个扩散系数，按 $[D_b^{(1)},D_{gb}^{(1)},D_b^{(2)},D_{gb}^{(2)},D_b^{(3)},D_{gb}^{(3)}]$ 的顺序排列，单位为 $\\mathrm{m^2\\,s^{-1}}$，格式为方括号内以逗号分隔的列表，无空格，每个数字均为科学计数法表示并保留三位有效数字（例如：$[1.00\\mathrm{e}{-18},3.00\\mathrm{e}{-16},\\dots]$）。", "solution": "所述问题具有科学依据，提法明确，并包含了获得唯一解所需的所有信息。它要求推导用于扩散分析的标准模型，并将其应用于合成数据，这是材料科学中一项常规且有效的任务。所有物理量和条件都是符合实际的。因此，我将开始进行解答。\n\n分析结构如下：首先，从基本原理推导沿两个平行路径扩散的控制数学模型。其次，详细说明从实验数据中提取模型参数的数值方法。最后，实施该方法为给定的测试用例提供解决方案。\n\n**双路径扩散模型的推导**\n\n控制一维扩散物质浓度 $c$ 随时间 $t$ 和深度 $z$ 变化的基本方程是Fick第二定律：\n$$\n\\frac{\\partial c}{\\partial t} = D \\frac{\\partial^2 c}{\\partial z^2}\n$$\n其中 $D$ 是扩散系数。问题指定了一个半无限介质（$z \\ge 0$），其表面浓度恒定，初始浓度为零。因此，初始条件和边界条件为：\n1.  初始条件：当 $z > 0$ 时，$c(z, t=0) = 0$\n2.  边界条件1：当 $t > 0$ 时，$c(z=0, t) = c_s$\n3.  边界条件2：当 $t > 0$ 时，$c(z \\to \\infty, t) = 0$\n\n问题指出浓度被归一化，使得表面浓度 $c_s$ 为1，即 $c_s=1$。这个边值问题的解由互补误差函数 $\\mathrm{erfc}$ 给出：\n$$\nc(z,t) = \\mathrm{erfc}\\left(\\frac{z}{2\\sqrt{Dt}}\\right)\n$$\n问题假设存在两种平行的、无相互作用的扩散路径：穿过体相氧化物晶格的扩散（扩散系数为 $D_b$），以及沿晶界的快速扩散（扩散系数为 $D_{gb}$）。\n\n对于体扩散路径，浓度剖面 $c_b(z,t)$ 为：\n$$\nc_b(z,t) = \\mathrm{erfc}\\left(\\frac{z}{2\\sqrt{D_b t}}\\right)\n$$\n对于晶界扩散路径，浓度剖面 $c_{gb}(z,t)$ 为：\n$$\nc_{gb}(z,t) = \\mathrm{erfc}\\left(\\frac{z}{2\\sqrt{D_{gb} t}}\\right)\n$$\nSIMS测量提供的是包含体材料和晶界的区域上的横向平均浓度。设 $f$ 为与表面相交的晶界的面积分数。因此，体相的面积分数为 $(1-f)$。由于控制扩散方程的线性特性，测得的总浓度 $c_{total}(z,t)$ 可以表示为各路径浓度的加权和：\n$$\nc_{total}(z,t) = (1-f) c_b(z,t) + f c_{gb}(z,t)\n$$\n代入各自的解，得到用于拟合实验数据的最终模型：\n$$\nc(z,t) = (1-f) \\cdot \\mathrm{erfc}\\left(\\frac{z}{2\\sqrt{D_b t}}\\right) + f \\cdot \\mathrm{erfc}\\left(\\frac{z}{2\\sqrt{D_{gb} t}}\\right)\n$$\n对于给定的时间 $t$，需要从实验数据 $(z_i, c_i)$ 中确定的参数是体扩散系数 $D_b$、晶界扩散系数 $D_{gb}$ 和晶界面积分数 $f$。\n\n**参数提取方法**\n\n参数 $\\{D_b, D_{gb}, f\\}$ 是通过使用非线性最小二乘法将推导出的模型与所提供的数据进行拟合来确定的。这涉及最小化实验浓度 $c_i$ 与模型预测浓度 $c(z_i,t)$ 之间的残差平方和（SSR）：\n$$\n\\mathrm{SSR}(D_b, D_{gb}, f) = \\sum_{i} \\left[ c_i - c(z_i, t; D_b, D_{gb}, f) \\right]^2\n$$\n为确保物理约束 $D_{gb} \\ge D_b$ 得到遵守，并提高数值优化的稳定性，对模型进行重新参数化。我们不直接拟合 $D_{gb}$，而是拟合一个正定的差值项 $\\delta_D$，其中 $D_{gb} = D_b + \\delta_D$ 且 $\\delta_D \\ge 0$。拟合参数变为 $\\{D_b, \\delta_D, f\\}$，其界限为 $D_b > 0$，$\\delta_D \\ge 0$ 和 $0 \\le f \\le 1$。\n\n拟合过程应用于 $z > 0$ 的数据点。$z=0, c=1$ 的点根据模型构造已默认满足，不为确定参数提供信息。\n\n必须建立一个决策规则来处理晶界贡献可以忽略不计的情况。如果拟合得到的晶界面积分数 $f$ 低于一个定义的阈值，或者两个扩散系数 $D_b$ 和 $D_{gb}$ 非常接近以至于实际上无法区分，则认为其贡献可以忽略。\n1.  **面积分数阈值**：我将晶界面积分数的阈值定义为 $f_{thresh} = 0.001$。如果最佳拟合值 $f^* < f_{thresh}$，则认为其贡献不可检测。该阈值对应于 $0.1\\%$ 的面积分数，这对于此类实验而言，处于物理合理性和可检测性的下限。\n2.  **扩散系数差异阈值**：如果 $D_b$ 和 $D_{gb}$ 非常接近，模型将变得病态。我定义一个相对差异阈值。如果 $\\delta_D^* / (D_b^* + \\delta_D^*) < 0.05$，即 $D_{gb}^*$ 比 $D_b^*$ 大不到 $5\\%$，则认为这两条路径无法区分。\n\n如果满足这些条件中的任何一个，则双路径模型不成立。在这种情况下，数据将重新拟合到单路径模型 $c(z,t) = \\mathrm{erfc}\\left(z / (2\\sqrt{D_b t})\\right)$，以获得对 $D_b$ 更稳健的估计。然后将晶界扩散系数 $D_{gb}$ 报告为 $0$。否则，报告双路径拟合得到的 $D_b$ 和 $D_{gb}$ 的值。\n\n针对每个测试用例的此过程的实现已在最终答案中提供。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import erfc, erfcinv\nfrom scipy.optimize import curve_fit\n\ndef solve():\n    \"\"\"\n    Main function to solve the diffusion problem for all test cases.\n    \"\"\"\n    \n    # Define test cases from the problem statement\n    test_cases = [\n        {\n            \"t\": 3600.0,\n            \"z\": np.array([0, 2.0e-8, 4.0e-8, 6.0e-8, 8.0e-8, 1.0e-7, 1.5e-7, 2.0e-7]),\n            \"c\": np.array([1.0000, 0.8213, 0.6485, 0.4946, 0.3737, 0.2522, 0.1044, 0.0447])\n        },\n        {\n            \"t\": 1800.0,\n            \"z\": np.array([0, 1.0e-8, 2.0e-8, 4.0e-8, 6.0e-8, 8.0e-8, 1.2e-7, 1.5e-7]),\n            \"c\": np.array([1.0000, 0.8309, 0.6667, 0.4060, 0.2238, 0.1349, 0.0825, 0.0781])\n        },\n        {\n            \"t\": 7200.0,\n            \"z\": np.array([0, 4.0e-8, 8.0e-8, 1.2e-7, 1.6e-7, 2.0e-7, 2.4e-7, 3.0e-7]),\n            \"c\": np.array([1.0000, 0.8160, 0.6380, 0.4795, 0.3550, 0.2300, 0.1573, 0.0780])\n        }\n    ]\n\n    def solve_case(t, z_data, c_data):\n        \"\"\"\n        Fits diffusion models to a single dataset to extract Db and Dgb.\n        \"\"\"\n        # Exclude the z=0 data point as it is fixed at c=1 by model construction.\n        z_fit = z_data[1:]\n        c_fit = c_data[1:]\n\n        # --- Two-Path Model Fit ---\n        def model_two_path_reparam(z, Db, delta_D, f):\n            \"\"\"\n            Two-path diffusion model with re-parameterization Dgb = Db + delta_D.\n            This enforces Dgb >= Db.\n            \"\"\"\n            Dgb = Db + delta_D\n            # Safety for optimizer stepping into unphysical >0 territory\n            if Db <= 0 or Dgb <= 0:\n                return np.full_like(z, np.inf)\n\n            arg_b = z / (2 * np.sqrt(Db * t))\n            arg_gb = z / (2 * np.sqrt(Dgb * t))\n            return (1 - f) * erfc(arg_b) + f * erfc(arg_gb)\n\n        # Estimate an initial guess for Db\n        try:\n            # Interpolate to find z where concentration is 0.5\n            z_half = np.interp(0.5, c_fit[::-1], z_fit[::-1])\n            eta_half = erfcinv(0.5) \n            Db_guess = (z_half / (2 * eta_half))**2 / t\n        except Exception:\n            Db_guess = 1e-19 # Fallback guess\n\n        # Initial guesses for [Db, delta_D, f]\n        p0 = [Db_guess, Db_guess * 50, 0.05]\n        # Bounds for [Db, delta_D, f]\n        bounds = ([1e-25, 0, 0], [1e-14, 1e-12, 1.0])\n\n        try:\n            popt, _ = curve_fit(\n                model_two_path_reparam,\n                z_fit,\n                c_fit,\n                p0=p0,\n                bounds=bounds,\n                method='trf',\n                max_nfev=10000\n            )\n            Db_fit, delta_D_fit, f_fit = popt\n            Dgb_fit = Db_fit + delta_D_fit\n\n            # --- Decision Rule ---\n            f_threshold = 0.001\n            diff_rel_threshold = 0.05\n            \n            is_single_path = (f_fit < f_threshold) or \\\n                             (Dgb_fit > 0 and (delta_D_fit / Dgb_fit) < diff_rel_threshold)\n\n            if is_single_path:\n                # --- Single-Path Model Re-fit ---\n                def model_single_path(z, Db):\n                    \"\"\"Single-path diffusion model.\"\"\"\n                    if Db <= 0:\n                        return np.full_like(z, np.inf)\n                    arg = z / (2 * np.sqrt(Db * t))\n                    return erfc(arg)\n\n                popt_single, _ = curve_fit(\n                    model_single_path,\n                    z_fit,\n                    c_fit,\n                    p0=[Db_fit], # Use previous fit as a good starting guess\n                    bounds=([1e-25], [1e-14]),\n                    max_nfev=5000\n                )\n                Db_final = popt_single[0]\n                Dgb_final = 0.0\n            else:\n                Db_final = Db_fit\n                Dgb_final = Dgb_fit\n\n        except RuntimeError:\n            Db_final, Dgb_final = 0.0, 0.0 # Indicate fit failure\n\n        return Db_final, Dgb_final\n\n    results = []\n    for case in test_cases:\n        Db, Dgb = solve_case(case[\"t\"], case[\"z\"], case[\"c\"])\n        results.extend([Db, Dgb])\n\n    # Format the final output as specified.\n    formatted_results = [f\"{val:.2e}\" for val in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2506041"}]}