{"hands_on_practices": [{"introduction": "要想将衍射理论应用于实际晶体结构分析，必须熟练掌握真实晶格（正空间）与其倒易晶格之间的数学关系。这个练习将引导你从第一性原理出发，为一个非立方晶系（六方晶系）构建倒易晶格基矢，并计算特定晶面的晶面间距 $d$。通过这个实践，你将深刻理解倒易矢量 $\\mathbf{G}$ 的物理意义及其与可测量的晶面间距 $d$ 之间的核心关系 $|\\mathbf{G}| = 2\\pi/d$。", "problem": "一个六方晶体的正点阵参数为 $a=2.50\\,\\text{\\AA}$ 和 $c=4.10\\,\\text{\\AA}$。考虑用米勒-布拉维（Miller-Bravais）标系 $(hkil)$（其中 $i=-(h+k)$）标记的晶面。请仅使用倒易空间和衍射理论的基本定义，完成以下操作：\n\n- 为正点阵选择一个右手笛卡尔坐标系嵌入，其基矢 $\\mathbf{a}_{1}$、$\\mathbf{a}_{2}$ 和 $\\mathbf{a}_{3}$ 与六方晶格的定义相符（$|\\mathbf{a}_{1}|=|\\mathbf{a}_{2}|=a$，$\\mathbf{a}_{1}$ 与 $\\mathbf{a}_{2}$ 之间的夹角为 $120^{\\circ}$，且 $\\mathbf{a}_{3}$ 沿 $c$ 轴）。\n- 根据定义关系 $\\mathbf{a}_{i}\\cdot\\mathbf{b}_{j}=2\\pi\\,\\delta_{ij}$ 以及 $\\mathbf{b}_{1}=\\dfrac{2\\pi\\,\\mathbf{a}_{2}\\times\\mathbf{a}_{3}}{V}$、$\\mathbf{b}_{2}=\\dfrac{2\\pi\\,\\mathbf{a}_{3}\\times\\mathbf{a}_{1}}{V}$ 和 $\\mathbf{b}_{3}=\\dfrac{2\\pi\\,\\mathbf{a}_{1}\\times\\mathbf{a}_{2}}{V}$ 构建倒易基矢 $\\mathbf{b}_{1}$、$\\mathbf{b}_{2}$ 和 $\\mathbf{b}_{3}$，其中 $V=\\mathbf{a}_{1}\\cdot(\\mathbf{a}_{2}\\times\\mathbf{a}_{3})$ 是单胞体积。\n- 对于晶面 $(10\\bar{1}0)$ 和 $(0002)$，构建相应的倒格矢 $\\mathbf{G}$，并基于基本原理计算其模长 $|\\mathbf{G}|$。\n\n利用将晶面间距 $d$ 与该晶面族的倒格矢模长联系起来的倒易空间几何关系，确定晶面间距之比 $d_{(10\\bar{1}0)}/d_{(0002)}$，结果应为一个无量纲数。将您的答案四舍五入至四位有效数字。最终答案只提供该比值（不含中间值），且最终方框内的结果不应包含单位。", "solution": "我们从基本定义开始。设正格矢基矢选择为\n$$\n\\mathbf{a}_{1}=a\\,(1,0,0),\\quad \\mathbf{a}_{2}=a\\left(\\tfrac{1}{2},\\tfrac{\\sqrt{3}}{2},0\\right),\\quad \\mathbf{a}_{3}=c\\,(0,0,1).\n$$\n单胞体积为\n$$\nV=\\mathbf{a}_{1}\\cdot(\\mathbf{a}_{2}\\times\\mathbf{a}_{3}).\n$$\n计算 $\\mathbf{a}_{2}\\times\\mathbf{a}_{3}$：\n$$\n\\mathbf{a}_{2}\\times\\mathbf{a}_{3}=\\left(\\tfrac{a\\sqrt{3}}{2}c,-\\tfrac{a}{2}c,0\\right),\n$$\n所以\n$$\nV=\\mathbf{a}_{1}\\cdot(\\mathbf{a}_{2}\\times\\mathbf{a}_{3})=a\\cdot \\tfrac{a\\sqrt{3}}{2}c=\\tfrac{\\sqrt{3}}{2}a^{2}c.\n$$\n倒易基矢可由下式得出\n$$\n\\mathbf{b}_{1}=\\frac{2\\pi\\,(\\mathbf{a}_{2}\\times\\mathbf{a}_{3})}{V},\\quad \\mathbf{b}_{2}=\\frac{2\\pi\\,(\\mathbf{a}_{3}\\times\\mathbf{a}_{1})}{V},\\quad \\mathbf{b}_{3}=\\frac{2\\pi\\,(\\mathbf{a}_{1}\\times\\mathbf{a}_{2})}{V}.\n$$\n使用 $\\mathbf{a}_{3}\\times\\mathbf{a}_{1}=(0,ca,0)$ 和 $\\mathbf{a}_{1}\\times\\mathbf{a}_{2}=(0,0,\\tfrac{\\sqrt{3}}{2}a^{2})$，我们得到\n$$\n\\mathbf{b}_{1}=2\\pi\\left(\\frac{1}{a},-\\frac{1}{a\\sqrt{3}},0\\right),\\quad\n\\mathbf{b}_{2}=2\\pi\\left(0,\\frac{2}{a\\sqrt{3}},0\\right),\\quad\n\\mathbf{b}_{3}=2\\pi\\left(0,0,\\frac{1}{c}\\right).\n$$\n计算范数所需的模长和内积为\n$$\n|\\mathbf{b}_{1}|^{2}=\\frac{16\\pi^{2}}{3a^{2}},\\quad\n|\\mathbf{b}_{2}|^{2}=\\frac{16\\pi^{2}}{3a^{2}},\\quad\n\\mathbf{b}_{1}\\cdot\\mathbf{b}_{2}=-\\frac{8\\pi^{2}}{3a^{2}},\\quad\n|\\mathbf{b}_{3}|^{2}=\\frac{4\\pi^{2}}{c^{2}},\n$$\n且 $\\mathbf{b}_{1}\\cdot\\mathbf{b}_{3}=\\mathbf{b}_{2}\\cdot\\mathbf{b}_{3}=0$。\n\n在六方米勒-布拉维记法中，一个指数为 $(hkil)$ 且满足 $i=-(h+k)$ 的晶面，对应一个倒格矢。该倒格矢在基面内的分量由 $(h,k)$ 对确定，沿 $\\mathbf{b}_{3}$ 的分量由 $l$ 确定。在标准三指数表示法中，这由向量处理\n$$\n\\mathbf{G}=h\\,\\mathbf{b}_{1}+k\\,\\mathbf{b}_{2}+l\\,\\mathbf{b}_{3}.\n$$\n\n对于 $(10\\bar{1}0)$，我们有 $h=1$、$k=0$、$l=0$（因为在基面组合中 $i=-(h+k)=-1$ 是自动满足的）。因此\n$$\n\\mathbf{G}_{(10\\bar{1}0)}=\\mathbf{b}_{1},\\quad |\\mathbf{G}_{(10\\bar{1}0)}|=|\\mathbf{b}_{1}|=\\frac{4\\pi}{\\sqrt{3}\\,a}.\n$$\n\n对于 $(0002)$，我们有 $h=0$、$k=0$、$l=2$，因此\n$$\n\\mathbf{G}_{(0002)}=2\\,\\mathbf{b}_{3},\\quad |\\mathbf{G}_{(0002)}|=2\\,|\\mathbf{b}_{3}|=\\frac{4\\pi}{c}.\n$$\n\n在衍射理论中，晶面间距为 $d$ 的晶面族对应一个倒格矢 $\\mathbf{G}$，其模长满足\n$$\n|\\mathbf{G}|=\\frac{2\\pi}{d}.\n$$\n因此\n$$\nd_{(10\\bar{1}0)}=\\frac{2\\pi}{|\\mathbf{G}_{(10\\bar{1}0)}|}=\\frac{2\\pi}{\\frac{4\\pi}{\\sqrt{3}\\,a}}=\\frac{\\sqrt{3}}{2}\\,a,\n$$\n以及\n$$\nd_{(0002)}=\\frac{2\\pi}{|\\mathbf{G}_{(0002)}|}=\\frac{2\\pi}{\\frac{4\\pi}{c}}=\\frac{c}{2}.\n$$\n\n所求比值为\n$$\n\\frac{d_{(10\\bar{1}0)}}{d_{(0002)}}=\\frac{\\frac{\\sqrt{3}}{2}\\,a}{\\frac{c}{2}}=\\frac{\\sqrt{3}\\,a}{c}.\n$$\n代入 $a=2.50\\,\\text{\\AA}$ 和 $c=4.10\\,\\text{\\AA}$ 得\n$$\n\\frac{d_{(10\\bar{1}0)}}{d_{(0002)}}=\\frac{\\sqrt{3}\\times 2.50}{4.10}.\n$$\n数值计算如下：\n$$\n\\sqrt{3}\\approx 1.7320508075688772,\\quad \\Rightarrow\\quad \\frac{d_{(10\\bar{1}0)}}{d_{(0002)}}\\approx \\frac{1.7320508075688772\\times 2.50}{4.10}\\approx 1.056127.\n$$\n四舍五入到四位有效数字，该无量纲比值为 $1.056$。", "answer": "$$\\boxed{1.056}$$", "id": "2537262"}, {"introduction": "理想的布拉格衍射几何是理论分析的基石，但在实际的X射线衍射仪中，仪器误差是不可避免的。本练习聚焦于一种常见的系统误差——样品位移，并要求你从基本的几何光学原理出发，推导它对衍射峰位 $2\\theta$ 造成的影响。完成此练习有助于你将抽象的倒易空间理论与粉末衍射仪（如布拉格-布伦塔诺几何）的具体工作方式联系起来，从而更好地理解和修正实验数据。", "problem": "在衍射仪半径为 $R$ 的X射线衍射（XRD）仪中，使用Bragg–Brentano准聚焦几何构型测量一个粉末样品。测量的衍射角是射线源臂和探测器臂之间的张角 $2\\theta$，这两个臂都位于一个穿过样品表面且半径为 $R$ 的聚焦圆上。在倒易空间中，衍射条件可以看作是Ewald球（对于X射线波长 $\\lambda$，其半径为 $k=2\\pi/\\lambda$）与对应于晶面间距为 $d$ 的晶面的倒易晶格轨迹的交点，这对于给定的 $d$ 确定了真实的布拉格角 $\\theta$。\n\n假设样品因沿衍射仪半径方向的微小高度位移 $\\Delta h$ 而未对准（正的 $\\Delta h$ 意味着样品表面沿着射线源和探测器之间夹角的平分线向外移动）。这个扰动不改变 $d$，但破坏了聚焦条件，因此仪器记录到一个偏移后的臂张角 $2\\theta+\\Delta(2\\theta)$，以满足相同的倒易空间交点条件。\n\n仅从圆周运动的基本几何原理和小角度线性化出发，特别是利用半径为 $R$ 的圆上一个小的弧角变化 $\\Delta\\alpha$ 与相应的切向位移 $\\Delta s$ 之间的关系 $\\Delta s \\approx R\\,\\Delta\\alpha$，并使用样品高度误差在入射臂和衍射臂上的投影，推导系统角度偏移 $\\Delta(2\\theta)$ 关于 $\\Delta h$、$R$ 和 $\\theta$ 的一阶表达式，并包含其符号。然后，对于 $\\Delta h=0.2\\,\\mathrm{mm}$、$R=200\\,\\mathrm{mm}$ 和 $2\\theta=40^\\circ$ 的情况，对此偏移进行数值计算。\n\n以度为单位报告 $\\Delta(2\\theta)$ 的最终值，四舍五入到四位有效数字。答案以单个数字形式给出。不要报告校正后的角度，只报告偏移量。角度使用度数，并且最终数值答案中不包含任何单位符号。", "solution": "**推导与求解**\n本问题要求推导在Bragg-Brentano衍射仪中由于样品位移 $\\Delta h$ 引起的角度偏移 $\\Delta(2\\theta)$。该几何构型包含一个射线源 $S$ 和一个探测器 $D$，它们在一个半径为 $R$ 的测角仪圆上移动。样品理想情况下位于此圆的中心 $O$，当探测器位于 $2\\theta$ 位置时，样品旋转 $\\theta$ 角。位移将样品移动到一个新位置 $P$。位移矢量 $\\vec{OP}$ 的大小为 $\\Delta h$，方向沿着样品表面法线，该法线平分入射光束和衍射光束之间的夹角。\n\n设 $2\\theta_{meas}$ 是仪器测量的角度，即探测器的角位置。对于对称衍射，样品表面与入射光束成 $\\theta_{meas}$ 角。设 $\\theta_{Bragg}$ 是由材料的晶格间距 $d$ 和X射线波长 $\\lambda$ 决定的真实布拉格角。当晶面上的实际入射角 $\\theta_i$ 等于 $\\theta_{Bragg}$ 时，观测到衍射峰。\n\n样品位移 $\\Delta h$ 改变了相对于仪器角度设置 $\\theta_{meas}$ 的实际入射角 $\\theta_i$。我们必须量化这一变化。位移 $\\vec{OP}$ 可以看作是样品相对于固定射线源 $S$ 和探测器 $D$ 的位移。等效地，从样品在 $P$ 点的参考系来看，射线源和探测器看起来偏离了它们的理想位置。\n\n问题引导我们使用位移误差的投影。从样品看，入射光束的角度偏移约等于位移垂直于光束的分量除以到射线源的距离。样品到射线源的距离是 $R$。位移矢量 $\\vec{OP}$ 沿着表面法线。表面法线与入射光束 $SO$ 之间的夹角是 $\\theta_{meas}$。因此，位移 $\\Delta h$ 垂直于入射光束的分量是 $\\Delta h \\cos(\\theta_{meas})$。\n\n这个垂直位移引入了一个角度偏差 $\\delta\\theta_{in}$。对于小位移 $\\Delta h \\ll R$，此偏差为：\n$$\n\\delta\\theta_{in} \\approx \\frac{\\Delta h \\cos(\\theta_{meas})}{R}\n$$\n我们必须确定这一贡献的符号。正位移 $\\Delta h > 0$ 使样品向外移动，或者说“向上”移动，朝向射线源和探测器。这个运动增加了相对于固定仪器臂的入射角。因此，实际入射角 $\\theta_i$ 大于仪器设置角 $\\theta_{meas}$：\n$$\n\\theta_i = \\theta_{meas} + \\delta\\theta_{in} = \\theta_{meas} + \\frac{\\Delta h \\cos(\\theta_{meas})}{R}\n$$\n当满足布拉格条件时，即 $\\theta_i = \\theta_{Bragg}$，观测到衍射峰。将此代入上式得：\n$$\n\\theta_{Bragg} = \\theta_{meas} + \\frac{\\Delta h \\cos(\\theta_{meas})}{R}\n$$\n在 $\\theta$ 标度上的角度误差为 $\\Delta\\theta = \\theta_{meas} - \\theta_{Bragg}$。重新整理方程得到：\n$$\n\\theta_{meas} - \\theta_{Bragg} = -\\frac{\\Delta h \\cos(\\theta_{meas})}{R}\n$$\n可观测的误差在 $2\\theta$ 标度上，即 $\\Delta(2\\theta) = 2\\Delta\\theta$。因此，系统角度偏移的一阶表达式为：\n$$\n\\Delta(2\\theta) = -\\frac{2 \\Delta h \\cos(\\theta_{meas})}{R}\n$$\n此表达式以弧度为单位。由于偏移很小，我们可以近似认为 $\\cos(\\theta_{meas}) \\approx \\cos(\\theta_{Bragg})$，其中 $\\theta$ 是观测到的峰的角位置。\n$$\n\\Delta(2\\theta)_{\\text{rad}} = -\\frac{2 \\Delta h \\cos\\theta}{R}\n$$\n正位移 $\\Delta h > 0$ 导致负偏移 $\\Delta(2\\theta) < 0$，意味着衍射峰在较小的 $2\\theta$ 值处被观测到，这与实验观察结果一致。\n\n**数值计算**\n给定以下数值：\n- $\\Delta h = 0.2\\,\\mathrm{mm}$\n- $R = 200\\,\\mathrm{mm}$\n- $2\\theta = 40^\\circ \\implies \\theta = 20^\\circ$\n\n首先，我们计算以弧度为单位的偏移量。$\\Delta h$ 和 $R$ 的单位必须一致；两者都使用毫米即可。\n$$\n\\Delta(2\\theta)_{\\text{rad}} = -\\frac{2 \\times (0.2\\,\\mathrm{mm}) \\times \\cos(20^\\circ)}{200\\,\\mathrm{mm}} = -\\frac{0.4 \\times \\cos(20^\\circ)}{200} = -0.002 \\cos(20^\\circ)\n$$\n要将结果从弧度转换为度，我们乘以 $180/\\pi$：\n$$\n\\Delta(2\\theta)_{\\text{deg}} = -0.002 \\cos(20^\\circ) \\times \\frac{180}{\\pi}\n$$\n现在，我们计算数值：\n- $\\cos(20^\\circ) \\approx 0.93969262$\n- $\\Delta(2\\theta)_{\\text{deg}} \\approx -0.002 \\times 0.93969262 \\times \\frac{180}{\\pi}$\n- $\\Delta(2\\theta)_{\\text{deg}} \\approx -0.0018793852 \\times 57.2957795$\n- $\\Delta(2\\theta)_{\\text{deg}} \\approx -0.107684^\\circ$\n\n题目要求答案四舍五入到四位有效数字。\n$$\n\\Delta(2\\theta) \\approx -0.1077\n$$\n这就是以度为单位的角度偏移的最终数值。", "answer": "$$\n\\boxed{-0.1077}\n$$", "id": "2537239"}, {"introduction": "现代晶体学研究高度依赖于计算模拟来预测和解析复杂的衍射图样。这个综合性练习将挑战你运用本章所有核心概念，编写一个程序来模拟单晶衍射实验。你需要构建晶体的取向矩阵 $\\mathbf{U}\\mathbf{B}$，在样品旋转过程中应用埃瓦尔德球结构，并预测哪些衍射点将被观察到，从而将静态的倒易空间图像转化为动态的衍射过程。", "problem": "给定一个基于Ewald作图的单晶X射线衍射的谱线站式取向模型。考虑一个与实验室$z$轴对齐的单色入射波矢$\\mathbf{k}_i$，其大小为$k = 2\\pi/\\lambda$，其中$\\lambda$是以$\\mathrm{\\AA}$表示的X射线波长。如果存在一个出射波矢$\\mathbf{k}_f$满足$\\lVert \\mathbf{k}_f \\rVert = \\lVert \\mathbf{k}_i \\rVert = k$且$\\mathbf{k}_f = \\mathbf{k}_i + \\mathbf{G}$，则倒格子矢量$\\mathbf{G}$满足弹性衍射（Ewald球）条件。这等效于标量条件$2\\,\\mathbf{k}_i \\cdot \\mathbf{G} + \\lVert \\mathbf{G} \\rVert^2 = 0$，或者，用角度形式表示为$\\cos \\psi = -\\lVert \\mathbf{G} \\rVert / (2k)$，其中$\\psi$是$\\mathbf{k}_i$和$\\mathbf{G}$之间的夹角。\n\n倒格子由一个取向-晶格矩阵$\\mathbf{U}\\mathbf{B}$参数化，在参考旋转$\\phi = 0$时，该矩阵通过$\\mathbf{G}_0 = \\mathbf{U}\\mathbf{B}\\,\\mathbf{h}$将密勒指数$\\mathbf{h} = (h,k,l)^\\top \\in \\mathbb{Z}^3$映射到实验室坐标系中的倒格子矢量。样品绕实验室$z$轴旋转角度$\\phi$（以度为单位）由旋转矩阵$\\mathbf{R}_z(\\phi)$作用于倒格子来表示，得到$\\mathbf{G}(\\phi) = \\mathbf{R}_z(\\phi)\\,\\mathbf{G}_0$。您需要确定在指定范围内的$\\phi$扫描过程中，哪些衍射点$\\mathbf{h}$在某个角度容差内满足Ewald条件。\n\n使用以下基本定义为每个测试用例构建$\\mathbf{U}\\mathbf{B}$：\n- 正格子的边长为$a$、$b$、$c$（以$\\mathrm{\\AA}$为单位），轴间角为$\\alpha$、$\\beta$、$\\gamma$（以度为单位），其中$\\alpha$是边$b$和$c$之间的夹角，$\\beta$是$a$和$c$之间的夹角，$\\gamma$是$a$和$b$之间的夹角。\n- 将正格子的笛卡尔基构建为矩阵$\\mathbf{A} = [\\mathbf{a}\\ \\mathbf{b}\\ \\mathbf{c}]$的列向量，其中\n  $\\mathbf{a} = (a, 0, 0)^\\top$，\n  $\\mathbf{b} = \\left(b\\cos\\gamma,\\, b\\sin\\gamma,\\, 0\\right)^\\top$，\n  $\\mathbf{c} = \\left(c\\cos\\beta,\\, c\\frac{\\cos\\alpha - \\cos\\beta\\cos\\gamma}{\\sin\\gamma},\\, c\\,\\sqrt{1 - \\cos^2\\alpha - \\cos^2\\beta - \\cos^2\\gamma + 2\\cos\\alpha\\cos\\beta\\cos\\gamma} / \\sin\\gamma \\right)^\\top$,\n  其中三角函数的参数以弧度为单位。\n- 倒格子基底矩阵为$\\mathbf{B} = 2\\pi\\,\\mathbf{A}^{-T}$，因此晶体坐标系中的倒格子矢量为$\\mathbf{G}_{\\mathrm{crystal}} = \\mathbf{B}\\,\\mathbf{h}$。\n- 取向矩阵$\\mathbf{U}$由绕实验室坐标轴的外旋右手系旋转定义：$\\mathbf{U} = \\mathbf{R}_z(\\zeta)\\,\\mathbf{R}_y(\\eta)\\,\\mathbf{R}_x(\\xi)$，其中$\\xi$、$\\eta$、$\\zeta$以度为单位给出，并且\n  $\\mathbf{R}_x(\\theta) = \\begin{pmatrix}1&0&0\\\\0&\\cos\\theta&-\\sin\\theta\\\\0&\\sin\\theta&\\cos\\theta\\end{pmatrix}$,\n  $\\mathbf{R}_y(\\theta) = \\begin{pmatrix}\\cos\\theta&0&\\sin\\theta\\\\0&1&0\\\\-\\sin\\theta&0&\\cos\\theta\\end{pmatrix}$,\n  $\\mathbf{R}_z(\\theta) = \\begin{pmatrix}\\cos\\theta&-\\sin\\theta&0\\\\\\sin\\theta&\\cos\\theta&0\\\\0&0&1\\end{pmatrix}$,\n  其中$\\theta$以弧度为单位。\n- 因此，在$\\phi = 0$时，$\\mathbf{U}\\mathbf{B}$将$\\mathbf{h}$直接映射到实验室坐标系中的$\\mathbf{G}_0$。\n\n如果在指定的包含边界的范围内，以指定的步长，存在一个旋转角$\\phi$，使得以下两个条件都成立，则认为在扫描过程中观测到了衍射点$\\mathbf{h}$：\n1. $\\lVert \\mathbf{G}(\\phi) \\rVert \\le 2k$,\n2. $\\left|\\psi(\\phi) - \\psi_{\\mathrm{req}}\\right| \\le \\Delta\\theta$,\n其中$\\psi(\\phi) = \\arccos\\!\\left(\\dfrac{\\mathbf{k}_i \\cdot \\mathbf{G}(\\phi)}{k\\,\\lVert \\mathbf{G}(\\phi) \\rVert}\\right)$是$\\mathbf{k}_i$和$\\mathbf{G}(\\phi)$之间的实际夹角，而$\\psi_{\\mathrm{req}} = \\arccos\\!\\left(-\\dfrac{\\lVert \\mathbf{G}(\\phi) \\rVert}{2k}\\right)$是Ewald条件所要求的角度，它仅取决于$\\lVert \\mathbf{G}(\\phi) \\rVert$和$\\lambda$。使用$\\mathbf{k}_i = (0,0,k)^\\top$，其中$k = 2\\pi/\\lambda$。\n\n使用角度容差$\\Delta\\theta = 0.2^\\circ$（度）。扫描从$\\phi_{\\min}$到$\\phi_{\\max}$（以度为单位，包含两端），以固定的步长$\\Delta\\phi$（以度为单位）进行。在您的计算中，所有角度必须在内部按弧度处理，但所有测试用例参数都是以度为单位指定的。密勒指数搜索空间是$h$、$k$、$l$整数范围的笛卡尔积，不包括$\\mathbf{h} = (0,0,0)$。\n\n您的程序必须实现以上内容，并将其应用于以下测试套件。对于每个测试用例，报告在扫描期间至少满足一次条件的衍射点集合，形式为一个整数三元组列表$[h,k,l]$，并按$(h,k,l)$的字典序排序。\n\n测试套件：\n- 测试用例 1:\n  - 正格子: $a = 4.0\\,\\mathrm{\\AA}$, $b = 4.0\\,\\mathrm{\\AA}$, $c = 4.0\\,\\mathrm{\\AA}$, $\\alpha = 90^\\circ$, $\\beta = 90^\\circ$, $\\gamma = 90^\\circ$.\n  - 取向: $\\xi = 40^\\circ$, $\\eta = 25^\\circ$, $\\zeta = 10^\\circ$.\n  - 波长: $\\lambda = 1.5406\\,\\mathrm{\\AA}$.\n  - 扫描: $\\phi_{\\min} = 0^\\circ$, $\\phi_{\\max} = 180^\\circ$, $\\Delta\\phi = 0.25^\\circ$.\n  - 密勒指数范围: $h \\in [-2,2]$, $k \\in [-2,2]$, $l \\in [-2,2]$, 不包括 $(0,0,0)$.\n\n- 测试用例 2:\n  - 正格子: $a = 3.9\\,\\mathrm{\\AA}$, $b = 3.9\\,\\mathrm{\\AA}$, $c = 5.2\\,\\mathrm{\\AA}$, $\\alpha = 90^\\circ$, $\\beta = 90^\\circ$, $\\gamma = 90^\\circ$.\n  - 取向: $\\xi = 15^\\circ$, $\\eta = -20^\\circ$, $\\zeta = 35^\\circ$.\n  - 波长: $\\lambda = 1.0000\\,\\mathrm{\\AA}$.\n  - 扫描: $\\phi_{\\min} = 0^\\circ$, $\\phi_{\\max} = 180^\\circ$, $\\Delta\\phi = 0.25^\\circ$.\n  - 密勒指数范围: $h \\in [-2,2]$, $k \\in [-2,2]$, $l \\in [-2,2]$, 不包括 $(0,0,0)$.\n\n- 测试用例 3:\n  - 正格子: $a = 5.1\\,\\mathrm{\\AA}$, $b = 7.3\\,\\mathrm{\\AA}$, $c = 9.2\\,\\mathrm{\\AA}$, $\\alpha = 90^\\circ$, $\\beta = 105^\\circ$, $\\gamma = 90^\\circ$.\n  - 取向: $\\xi = -10^\\circ$, $\\eta = 30^\\circ$, $\\zeta = 22^\\circ$.\n  - 波长: $\\lambda = 1.5400\\,\\mathrm{\\AA}$.\n  - 扫描: $\\phi_{\\min} = 0^\\circ$, $\\phi_{\\max} = 180^\\circ$, $\\Delta\\phi = 0.25^\\circ$.\n  - 密勒指数范围: $h \\in [-2,2]$, $k \\in [-2,2]$, $l \\in [-2,2]$, 不包括 $(0,0,0)$.\n\n- 测试用例 4 (运动学上没有衍射点被球半径允许的边缘情况):\n  - 正格子: $a = 2.0\\,\\mathrm{\\AA}$, $b = 2.0\\,\\mathrm{\\AA}$, $c = 2.0\\,\\mathrm{\\AA}$, $\\alpha = 90^\\circ$, $\\beta = 90^\\circ$, $\\gamma = 90^\\circ$.\n  - 取向: $\\xi = 5^\\circ$, $\\eta = -15^\\circ$, $\\zeta = 55^\\circ$.\n  - 波长: $\\lambda = 5.0000\\,\\mathrm{\\AA}$.\n  - 扫描: $\\phi_{\\min} = 0^\\circ$, $\\phi_{\\max} = 180^\\circ$, $\\Delta\\phi = 0.25^\\circ$.\n  - 密勒指数范围: $h \\in [-1,1]$, $k \\in [-1,1]$, $l \\in [-1,1]$, 不包括 $(0,0,0)$.\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含四个测试用例的结果，形式为用方括号括起来的逗号分隔列表。每个测试用例的结果本身就是一个衍射点列表，其中每个衍射点表示为一个包含三个整数的列表$[h,k,l]$。例如，一个有效的输出格式是\n  \"[[[h1,k1,l1],[h2,k2,l2]],[[...]],[[...]],[[...]]]\"。", "solution": "我们从Ewald作图的基本原理以及密勒指数与倒格子矢量之间的映射推导出该算法。入射波矢为$\\mathbf{k}_i = (0,0,k)^\\top$，其中$k = 2\\pi/\\lambda$。对于一个倒格子矢量$\\mathbf{G}$，弹性衍射条件是存在一个$\\mathbf{k}_f$，使得$\\lVert \\mathbf{k}_f \\rVert = \\lVert \\mathbf{k}_i \\rVert = k$并且$\\mathbf{k}_f = \\mathbf{k}_i + \\mathbf{G}$。对两边平方并使用$\\lVert \\mathbf{k}_f \\rVert^2 = \\lVert \\mathbf{k}_i \\rVert^2$可得\n$$\n\\lVert \\mathbf{k}_i + \\mathbf{G} \\rVert^2 = \\lVert \\mathbf{k}_i \\rVert^2\n\\ \\Longrightarrow\\\n\\lVert \\mathbf{k}_i \\rVert^2 + 2\\,\\mathbf{k}_i \\cdot \\mathbf{G} + \\lVert \\mathbf{G} \\rVert^2 = \\lVert \\mathbf{k}_i \\rVert^2\n\\ \\Longrightarrow\\\n2\\,\\mathbf{k}_i \\cdot \\mathbf{G} + \\lVert \\mathbf{G} \\rVert^2 = 0.\n$$\n令$\\psi$为$\\mathbf{k}_i$和$\\mathbf{G}$之间的夹角，则$\\mathbf{k}_i \\cdot \\mathbf{G} = k\\,\\lVert \\mathbf{G} \\rVert \\cos\\psi$。代入得\n$$\n2\\,k\\,\\lVert \\mathbf{G} \\rVert \\cos\\psi + \\lVert \\mathbf{G} \\rVert^2 = 0\n\\ \\Longrightarrow\\\n\\cos\\psi = -\\frac{\\lVert \\mathbf{G} \\rVert}{2k}.\n$$\n这就是Ewald角度条件。此外，弹性散射施加了运动学边界条件$\\lVert \\mathbf{G} \\rVert \\le 2k$，否则$\\cos\\psi$将位于$[-1,1]$范围之外。\n\n为了根据密勒指数计算$\\mathbf{G}$，我们从正格子构建倒格子基底。正格子基底矩阵$\\mathbf{A}$的列为$\\mathbf{a}$、$\\mathbf{b}$、$\\mathbf{c}$。给定正晶胞参数$(a,b,c,\\alpha,\\beta,\\gamma)$（角度以弧度为单位），一种标准的笛卡尔嵌入是\n$$\n\\mathbf{a} = \\begin{pmatrix} a \\\\ 0 \\\\ 0 \\end{pmatrix},\\quad\n\\mathbf{b} = \\begin{pmatrix} b\\cos\\gamma \\\\ b\\sin\\gamma \\\\ 0 \\end{pmatrix},\\quad\n\\mathbf{c} = \\begin{pmatrix}\nc\\cos\\beta \\\\\nc\\frac{\\cos\\alpha - \\cos\\beta\\cos\\gamma}{\\sin\\gamma} \\\\\nc\\,\\frac{\\sqrt{1 - \\cos^2\\alpha - \\cos^2\\beta - \\cos^2\\gamma + 2\\cos\\alpha\\cos\\beta\\cos\\gamma}}{\\sin\\gamma}\n\\end{pmatrix}.\n$$\n那么，倒格子基底矩阵为\n$$\n\\mathbf{B} = 2\\pi\\,\\mathbf{A}^{-T},\n$$\n该矩阵满足对于整数$\\mathbf{h} = (h,k,l)^\\top$，晶体坐标系中的倒格子矢量为$\\mathbf{G}_{\\mathrm{crystal}} = \\mathbf{B}\\,\\mathbf{h}$。\n\n我们通过由绕实验室坐标轴的外旋构建的取向矩阵$\\mathbf{U}$，转换到实验室坐标系：\n$$\n\\mathbf{U} = \\mathbf{R}_z(\\zeta)\\,\\mathbf{R}_y(\\eta)\\,\\mathbf{R}_x(\\xi),\n$$\n其中\n$$\n\\mathbf{R}_x(\\theta) =\n\\begin{pmatrix}1&0&0\\\\0&\\cos\\theta&-\\sin\\theta\\\\0&\\sin\\theta&\\cos\\theta\\end{pmatrix},\\ \n\\mathbf{R}_y(\\theta) =\n\\begin{pmatrix}\\cos\\theta&0&\\sin\\theta\\\\0&1&0\\\\-\\sin\\theta&0&\\cos\\theta\\end{pmatrix},\\ \n\\mathbf{R}_z(\\theta) =\n\\begin{pmatrix}\\cos\\theta&-\\sin\\theta&0\\\\\\sin\\theta&\\cos\\theta&0\\\\0&0&1\\end{pmatrix}.\n$$\n在参考旋转$\\phi = 0$时，实验室坐标系中的倒格子矢量为$\\mathbf{G}_0 = \\mathbf{U}\\mathbf{B}\\,\\mathbf{h}$。绕实验室$z$轴进行角度为$\\phi$的扫描旋转由$\\mathbf{R}_z(\\phi)$作用于倒格子来表示，得到\n$$\n\\mathbf{G}(\\phi) = \\mathbf{R}_z(\\phi)\\,\\mathbf{G}_0.\n$$\n大小$\\lVert \\mathbf{G}(\\phi) \\rVert$在$\\mathbf{R}_z(\\phi)$作用下是不变的，因此所需的Ewald角\n$$\n\\psi_{\\mathrm{req}} = \\arccos\\!\\left(-\\frac{\\lVert \\mathbf{G}_0 \\rVert}{2k}\\right)\n$$\n与$\\phi$无关（前提是$\\lVert \\mathbf{G}_0 \\rVert \\le 2k$）。与入射束的实际夹角为\n$$\n\\psi(\\phi) = \\arccos\\!\\left(\\frac{\\mathbf{k}_i \\cdot \\mathbf{G}(\\phi)}{k\\,\\lVert \\mathbf{G}_0 \\rVert}\\right),\n$$\n其中$\\mathbf{k}_i = (0,0,k)^\\top$。如果在指定范围内存在某个$\\phi$，使得\n$$\n\\left| \\psi(\\phi) - \\psi_{\\mathrm{req}} \\right| \\le \\Delta\\theta,\n$$\n且$\\lVert \\mathbf{G}_0 \\rVert \\le 2k$，则认为在扫描过程中观测到了一个衍射点。容差$\\Delta\\theta$被指定为$0.2^\\circ$，计算时必须转换为弧度。为确保数值稳定性，我们将$\\arccos$的参数限制在区间$[-1,1]$内。\n\n算法步骤：\n1. 对于每个测试用例，计算$k = 2\\pi/\\lambda$，由$(a,b,c,\\alpha,\\beta,\\gamma)$构建$\\mathbf{A}$，然后是$\\mathbf{B} = 2\\pi\\,\\mathbf{A}^{-T}$，再由$(\\xi,\\eta,\\zeta)$构建$\\mathbf{U}$，所有角度都转换为弧度。\n2. 在指定范围内枚举整数三元组$(h,k,l)$，不包括$(0,0,0)$。\n3. 对于每个$\\mathbf{h}$，计算$\\mathbf{G}_0 = \\mathbf{U}\\mathbf{B}\\,\\mathbf{h}$及其大小$g = \\lVert \\mathbf{G}_0 \\rVert$。如果$g > 2k$，则舍弃，因为它不能满足Ewald条件。\n4. 计算$\\psi_{\\mathrm{req}} = \\arccos\\!\\left(-g/(2k)\\right)$。\n5. 在$\\phi_{\\min}$到$\\phi_{\\max}$（包含两端）的范围内以给定步长扫描$\\phi$。对于每个$\\phi$，计算$\\mathbf{G}(\\phi) = \\mathbf{R}_z(\\phi)\\,\\mathbf{G}_0$，然后\n$$\n\\cos\\psi(\\phi) = \\frac{\\mathbf{k}_i \\cdot \\mathbf{G}(\\phi)}{k\\,g}\n= \\frac{G_z(\\phi)}{g},\n$$\n因为$\\mathbf{k}_i = (0,0,k)^\\top$。将此余弦值限制在$[-1,1]$，计算$\\psi(\\phi) = \\arccos(\\cos\\psi(\\phi))$，并检验$\\left| \\psi(\\phi) - \\psi_{\\mathrm{req}} \\right| \\le \\Delta\\theta$。\n6. 如果在扫描中任何$\\phi$值满足该条件，则将$\\mathbf{h}$记录为在该测试用例中被观测到。\n7. 返回每个测试用例的已观测衍射点的排序列表。\n\n理由：\n- 映射$\\mathbf{G}_0 = \\mathbf{U}\\mathbf{B}\\,\\mathbf{h}$直接源于倒格子和取向的定义。\n- Ewald角度条件$\\cos\\psi = -\\lVert \\mathbf{G} \\rVert/(2k)$来自弹性散射和动量守恒。\n- 旋转$\\mathbf{R}_z(\\phi)$模拟了绕实验室$z$轴的$\\phi$扫描。由于$\\lVert \\mathbf{G}(\\phi) \\rVert$在旋转下不变，$\\psi_{\\mathrm{req}}$仅取决于$g$和$\\lambda$。\n- 容差应用于$\\psi$的角度失配，因为$\\psi$表征了Ewald球所要求的$\\mathbf{G}$与入射束之间的几何关系，且问题指定了角度容差$\\Delta\\theta$。\n\n测试套件中的边缘情况：\n- 测试用例4使用$\\lambda = 5.0\\,\\mathrm{\\AA}$和$a = b = c = 2.0\\,\\mathrm{\\AA}$，得到$k = 2\\pi/\\lambda$以及最小非零倒格子矢量大小$2\\pi/a$，使得对于任何非零的$(h,k,l)$都有$2k < \\lVert \\mathbf{G}_0 \\rVert$；因此没有衍射点能满足Ewald条件，结果为空列表。这验证了运动学边界条件$\\lVert \\mathbf{G} \\rVert \\le 2k$。\n\n该程序实现了这些步骤，并将四个测试用例的结果打印为单行：一个包含四个列表的列表，每个列表包含在指定的$\\phi$扫描和容差内观测到的、按字典序排序的$[h,k,l]$衍射点。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef rotation_x(theta_rad: float) -> np.ndarray:\n    c, s = np.cos(theta_rad), np.sin(theta_rad)\n    return np.array([[1.0, 0.0, 0.0],\n                     [0.0, c, -s],\n                     [0.0, s,  c]], dtype=float)\n\ndef rotation_y(theta_rad: float) -> np.ndarray:\n    c, s = np.cos(theta_rad), np.sin(theta_rad)\n    return np.array([[ c, 0.0, s],\n                     [0.0, 1.0, 0.0],\n                     [-s, 0.0, c]], dtype=float)\n\ndef rotation_z(theta_rad: float) -> np.ndarray:\n    c, s = np.cos(theta_rad), np.sin(theta_rad)\n    return np.array([[ c, -s, 0.0],\n                     [ s,  c, 0.0],\n                     [0.0, 0.0, 1.0]], dtype=float)\n\ndef direct_lattice_basis(a: float, b: float, c: float, alpha_deg: float, beta_deg: float, gamma_deg: float) -> np.ndarray:\n    # Convert to radians\n    alpha = np.deg2rad(alpha_deg)\n    beta  = np.deg2rad(beta_deg)\n    gamma = np.deg2rad(gamma_deg)\n    # Compute components\n    ax = a\n    ay = 0.0\n    az = 0.0\n    bx = b * np.cos(gamma)\n    by = b * np.sin(gamma)\n    bz = 0.0\n    cx = c * np.cos(beta)\n    # Avoid division by zero when sin(gamma) is zero (not in provided tests)\n    s_gamma = np.sin(gamma) if np.sin(gamma) != 0.0 else 1e-16\n    cy = c * (np.cos(alpha) - np.cos(beta) * np.cos(gamma)) / s_gamma\n    # Compute cz from the triple-product relation\n    cos_a, cos_b, cos_g = np.cos(alpha), np.cos(beta), np.cos(gamma)\n    vol_sq = 1.0 - cos_a**2 - cos_b**2 - cos_g**2 + 2.0 * cos_a * cos_b * cos_g\n    vol_sq = max(vol_sq, 0.0)  # guard against tiny negatives from rounding\n    cz = c * np.sqrt(vol_sq) / s_gamma\n    A = np.array([[ax, bx, cx],\n                  [ay, by, cy],\n                  [az, bz, cz]], dtype=float)\n    return A\n\ndef reciprocal_basis_from_direct(A: np.ndarray) -> np.ndarray:\n    # B = 2*pi * A^{-T}\n    return 2.0 * np.pi * np.linalg.inv(A).T\n\ndef build_U_matrix(xi_deg: float, eta_deg: float, zeta_deg: float) -> np.ndarray:\n    # U = Rz(zeta) * Ry(eta) * Rx(xi) with extrinsic rotations\n    xi = np.deg2rad(xi_deg)\n    eta = np.deg2rad(eta_deg)\n    zeta = np.deg2rad(zeta_deg)\n    return rotation_z(zeta) @ rotation_y(eta) @ rotation_x(xi)\n\ndef phi_scan_reflections(UB: np.ndarray,\n                         wavelength_A: float,\n                         phi_min_deg: float, phi_max_deg: float, dphi_deg: float,\n                         h_range: tuple, k_range: tuple, l_range: tuple,\n                         delta_theta_deg: float) -> list:\n    # Incident wavevector magnitude\n    k_mag = 2.0 * np.pi / wavelength_A\n    k_i = np.array([0.0, 0.0, k_mag], dtype=float)\n    # Angular tolerance in radians\n    delta_theta = np.deg2rad(delta_theta_deg)\n\n    # Enumerate Miller indices\n    reflections = []\n    hmin, hmax = h_range\n    kmin, kmax = k_range\n    lmin, lmax = l_range\n\n    # Build phi grid inclusive\n    if dphi_deg <= 0:\n        raise ValueError(\"phi step must be positive\")\n    n_steps = int(round((phi_max_deg - phi_min_deg) / dphi_deg))\n    # Make sure inclusive of phi_max\n    phi_values_deg = [phi_min_deg + i * dphi_deg for i in range(n_steps + 1)]\n    # Ensure last exactly equals phi_max within float tolerance\n    if abs(phi_values_deg[-1] - phi_max_deg) > 1e-9:\n        phi_values_deg.append(phi_max_deg)\n    phi_values_rad = np.deg2rad(np.array(phi_values_deg, dtype=float))\n\n    # Precompute rotation matrices about z for all phi\n    Rz_list = [rotation_z(phi) for phi in phi_values_rad]\n\n    # Loop over reflections\n    for h in range(hmin, hmax + 1):\n        for k in range(kmin, kmax + 1):\n            for l in range(lmin, lmax + 1):\n                if h == 0 and k == 0 and l == 0:\n                    continue\n                hvec = np.array([h, k, l], dtype=float)\n                G0 = UB @ hvec\n                g = np.linalg.norm(G0)\n                # Kinematic bound: |G| <= 2k\n                if g <= 0.0 or g > 2.0 * k_mag:\n                    continue\n                # Required angle for Ewald condition\n                arg_req = -g / (2.0 * k_mag)\n                # Clamp to [-1,1]\n                arg_req = float(np.clip(arg_req, -1.0, 1.0))\n                psi_req = float(np.arccos(arg_req))\n                found = False\n                for Rz in Rz_list:\n                    Gphi = Rz @ G0\n                    # cos(psi) = (k_i · Gphi) / (k*|G|)\n                    cos_psi = (k_i @ Gphi) / (k_mag * g)\n                    cos_psi = float(np.clip(cos_psi, -1.0, 1.0))\n                    psi = float(np.arccos(cos_psi))\n                    if abs(psi - psi_req) <= delta_theta:\n                        found = True\n                        break\n                if found:\n                    reflections.append([int(h), int(k), int(l)])\n\n    # Sort lexicographically\n    reflections.sort(key=lambda t: (t[0], t[1], t[2]))\n    return reflections\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case defines the direct lattice, orientation, wavelength, scan, and Miller index ranges.\n    test_cases = [\n        {\n            \"cell\": {\"a\": 4.0, \"b\": 4.0, \"c\": 4.0, \"alpha\": 90.0, \"beta\": 90.0, \"gamma\": 90.0},\n            \"orientation\": {\"xi\": 40.0, \"eta\": 25.0, \"zeta\": 10.0},\n            \"wavelength_A\": 1.5406,\n            \"phi_scan\": {\"phi_min\": 0.0, \"phi_max\": 180.0, \"dphi\": 0.25},\n            \"ranges\": {\"h\": (-2, 2), \"k\": (-2, 2), \"l\": (-2, 2)},\n            \"delta_theta_deg\": 0.2\n        },\n        {\n            \"cell\": {\"a\": 3.9, \"b\": 3.9, \"c\": 5.2, \"alpha\": 90.0, \"beta\": 90.0, \"gamma\": 90.0},\n            \"orientation\": {\"xi\": 15.0, \"eta\": -20.0, \"zeta\": 35.0},\n            \"wavelength_A\": 1.0,\n            \"phi_scan\": {\"phi_min\": 0.0, \"phi_max\": 180.0, \"dphi\": 0.25},\n            \"ranges\": {\"h\": (-2, 2), \"k\": (-2, 2), \"l\": (-2, 2)},\n            \"delta_theta_deg\": 0.2\n        },\n        {\n            \"cell\": {\"a\": 5.1, \"b\": 7.3, \"c\": 9.2, \"alpha\": 90.0, \"beta\": 105.0, \"gamma\": 90.0},\n            \"orientation\": {\"xi\": -10.0, \"eta\": 30.0, \"zeta\": 22.0},\n            \"wavelength_A\": 1.54,\n            \"phi_scan\": {\"phi_min\": 0.0, \"phi_max\": 180.0, \"dphi\": 0.25},\n            \"ranges\": {\"h\": (-2, 2), \"k\": (-2, 2), \"l\": (-2, 2)},\n            \"delta_theta_deg\": 0.2\n        },\n        {\n            \"cell\": {\"a\": 2.0, \"b\": 2.0, \"c\": 2.0, \"alpha\": 90.0, \"beta\": 90.0, \"gamma\": 90.0},\n            \"orientation\": {\"xi\": 5.0, \"eta\": -15.0, \"zeta\": 55.0},\n            \"wavelength_A\": 5.0,\n            \"phi_scan\": {\"phi_min\": 0.0, \"phi_max\": 180.0, \"dphi\": 0.25},\n            \"ranges\": {\"h\": (-1, 1), \"k\": (-1, 1), \"l\": (-1, 1)},\n            \"delta_theta_deg\": 0.2\n        }\n    ]\n\n    results = []\n    two_pi = 2.0 * np.pi\n\n    for case in test_cases:\n        a = case[\"cell\"][\"a\"]\n        b = case[\"cell\"][\"b\"]\n        c = case[\"cell\"][\"c\"]\n        alpha = case[\"cell\"][\"alpha\"]\n        beta = case[\"cell\"][\"beta\"]\n        gamma = case[\"cell\"][\"gamma\"]\n        xi = case[\"orientation\"][\"xi\"]\n        eta = case[\"orientation\"][\"eta\"]\n        zeta = case[\"orientation\"][\"zeta\"]\n        wavelength_A = case[\"wavelength_A\"]\n        phi_min = case[\"phi_scan\"][\"phi_min\"]\n        phi_max = case[\"phi_scan\"][\"phi_max\"]\n        dphi = case[\"phi_scan\"][\"dphi\"]\n        h_range = case[\"ranges\"][\"h\"]\n        k_range = case[\"ranges\"][\"k\"]\n        l_range = case[\"ranges\"][\"l\"]\n        delta_theta_deg = case[\"delta_theta_deg\"]\n\n        # Build A, B, U, then UB\n        A = direct_lattice_basis(a, b, c, alpha, beta, gamma)\n        B = reciprocal_basis_from_direct(A)\n        U = build_U_matrix(xi, eta, zeta)\n        UB = U @ B\n\n        reflections = phi_scan_reflections(\n            UB=UB,\n            wavelength_A=wavelength_A,\n            phi_min_deg=phi_min, phi_max_deg=phi_max, dphi_deg=dphi,\n            h_range=h_range, k_range=k_range, l_range=l_range,\n            delta_theta_deg=delta_theta_deg\n        )\n        results.append(reflections)\n\n    # Final print statement in the exact required format.\n    # Convert to string with default Python list formatting.\n    print(str(results))\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2537243"}]}