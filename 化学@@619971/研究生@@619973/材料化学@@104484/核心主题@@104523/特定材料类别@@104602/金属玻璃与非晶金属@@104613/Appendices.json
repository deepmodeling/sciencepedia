{"hands_on_practices": [{"introduction": "金属玻璃的存在本身取决于在冷却过程中能否成功“绕过”结晶过程。Johnson-Mehl-Avrami-Kolmogorov (JMAK) 理论为理解这一相变动力学提供了强有力的定量框架。本练习将引导您从第一性原理出发，推导著名的阿夫拉米指数 $n$，从而深刻理解不同的形核与生长机制如何决定结晶速率。[@problem_id:2500134]", "problem": "一块金属玻璃在固定温度下进行等温退火，在此过程中，通过随机、均匀形核和晶区的各向同性生长发生结晶，直至晶区相互接触（冲撞）。相变分数由 Johnson–Mehl–Avrami–Kolmogorov (JMAK) 形式主义描述，$X(t)=1-\\exp\\!\\left[-(k t)^n\\right]$，其中 $X(t)$ 是时间 $t$ 时的相变分数，$k$ 是一个包含形核和生长动力学的速率常数，$n$ 是 Avrami 指数。假设实际相变分数 $X(t)$ 可以通过扩展相变分数 $X_{\\mathrm{e}}(t)$ 由 $X(t)=1-\\exp[-X_{\\mathrm{e}}(t)]$ 得到，并且 $X_{\\mathrm{e}}(t)$ 是通过将形核速率与在没有冲撞的情况下生长的单个晶域的体积的乘积对相变时间进行积分来计算的。\n\n假设每个晶域的生长是各向同性的，并且在时间 $t'$ 形核的晶域的特征线性尺寸 $R$ 在之后的某个时间 $t$ 根据幂律 $R(t-t') \\propto (t-t')^{m}$ 生长，其中 $m$ 反映了速率限制机制：对于界面控制（恒速）生长，$m=1$；对于扩散控制（抛物线）生长，$m=\\tfrac{1}{2}$。设生长是 $d$ 维的，其中 $d \\in \\{1,2,3\\}$，因此晶域体积与 $[R(t-t')]^{d}$ 成正比。\n\n基于这些基础，从第一性原理出发（将 $X_{\\mathrm{e}}(t)$ 定义为形核和生长过程的时间积分，不假设任何关于 $n$ 的已知结果），解释 Avrami 指数 $n$ 如何依赖于形核模式（$t=0$ 时的位点饱和形核与单位体积的恒定形核速率）以及生长机制和维度。\n\n关于 $n$ 的下列陈述中，哪些是正确的？选择所有适用的选项。\n\nA. 在 $t=0$ 时位点饱和形核，三维（$d=3$）界面控制生长，得到 $n=3$。\n\nB. 单位体积恒定形核速率，二维（$d=2$）界面控制生长，得到 $n=4$。\n\nC. 在 $t=0$ 时位点饱和形核，三维（$d=3$）扩散控制生长，得到 $n=\\tfrac{3}{2}$。\n\nD. 单位体积恒定形核速率，三维（$d=3$）扩散控制生长，得到 $n=3$。\n\nE. 单位体积恒定形核速率，二维（$d=2$）扩散控制生长，得到 $n=2$。\n\nF. 在 $t=0$ 时位点饱和形核，一维（$d=1$）界面控制生长，得到 $n=1$。", "solution": "在尝试任何解答之前，需要对问题陈述进行验证。\n\n**第1步：提取已知条件**\n- 相变分数 $X(t)$ 由 Johnson–Mehl–Avrami–Kolmogorov (JMAK) 方程给出：$X(t)=1-\\exp\\!\\left[-(k t)^n\\right]$。\n- 实际相变分数 $X(t)$ 与扩展相变分数 $X_{\\mathrm{e}}(t)$ 的关系为 $X(t)=1-\\exp[-X_{\\mathrm{e}}(t)]$。\n- 这意味着关系式 $X_{\\mathrm{e}}(t) = (kt)^n$。\n- $X_{\\mathrm{e}}(t)$ 被定义为形核速率与在没有冲撞情况下生长的单个晶域体积的乘积的积分。\n- 在时间 $t'$ 形核的晶域的生长是各向同性的，在之后的某个时间 $t$ 其线性尺寸为 $R(t-t') \\propto (t-t')^{m}$。\n- 生长机制指数 $m$ 对于界面控制生长为 $m=1$，对于扩散控制生长为 $m=\\tfrac{1}{2}$。\n- 生长维度为 $d$，其中 $d \\in \\{1,2,3\\}$。\n- 晶域的体积与 $[R(t-t')]^{d}$ 成正比。\n- 需要考虑两种形核情景：(1) $t=0$ 时的位点饱和形核，以及 (2) 单位体积恒定的形核速率。\n\n**第2步：验证结论**\n该问题具有科学依据，提法明确，且客观。它提出了一个来自材料动力学的标准（尽管是简化的）理论模型，即 Avrami 理论。其定义、参数和关系与相变理论的既定第一性原理一致。提供了所有必要的信息，可以明确地推导出 Avrami 指数 $n$。该问题是应用动力学基本原理的有效练习。\n\n**第3步：从第一性原理推导**\n本分析的基础是扩展体积分数 $X_{\\mathrm{e}}(t)$ 的定义。它是指如果生长的晶域可以自由重叠时，本应已经相变的总的体积分数。设 $I_V(t')$ 是在时间 $t'$ 单位体积的形核速率，设 $V(t-t')$ 是在时间 $t'$ 形核的单个晶域在时间 $t$ 的体积。扩展体积由卷积分给出：\n$$X_{\\mathrm{e}}(t) = \\int_{0}^{t} I_V(t') V(t-t') dt'$$\n必须构建在 $t'$ 形核并生长到时间 $t$ 的单个 $d$ 维晶域的体积公式。线性尺寸为 $R(t-t') = G(t-t')^m$，其中 $G$ 是一个生长常数。因此体积为 $V(t-t') = g_d [R(t-t')]^d = g_d G^d (t-t')^{md}$，其中 $g_d$ 是一个几何形状因子。\n\n我们分析两种指定的形核模式。\n\n**情况1：位点饱和形核**\n在这种情景下，所有潜在的晶核在 $t=0$ 时瞬间被激活。设 $N_V$ 是单位体积内此类晶核的数量。形核速率可以用 Dirac delta 函数来描述：$I_V(t') = N_V \\delta(t')$。\n将此代入 $X_{\\mathrm{e}}(t)$ 的积分中：\n$$X_{\\mathrm{e}}(t) = \\int_{0}^{t} N_V \\delta(t') V(t-t') dt'$$\n根据 delta 函数的性质，该积分的值等于被积函数其余部分在 $t'=0$ 时的值：\n$$X_{\\mathrm{e}}(t) = N_V V(t-0) = N_V V(t) = N_V g_d G^d t^{md}$$\n我们将此结果与给定形式 $X_{\\mathrm{e}}(t) = (kt)^n$ 进行比较。时间依赖性决定了指数。对于位点饱和形核，立即可以清楚地看到：\n$$n = md$$\n\n**情况2：恒定形核速率**\n在这里，晶核以恒定速率 $I_V(t') = I_0$ 形成（对于所有 $t' \\ge 0$）。\n我们将此代入 $X_{\\mathrm{e}}(t)$ 的积分中：\n$$X_{\\mathrm{e}}(t) = \\int_{0}^{t} I_0 V(t-t') dt' = \\int_{0}^{t} I_0 \\left[ g_d G^d (t-t')^{md} \\right] dt'$$\n常数可以移到积分号外：\n$$X_{\\mathrm{e}}(t) = I_0 g_d G^d \\int_{0}^{t} (t-t')^{md} dt'$$\n这个积分是初等的。设 $u = t-t'$，则 $du = -dt'$。积分上下限从 $t'=0 \\rightarrow u=t$ 和 $t'=t \\rightarrow u=0$ 改变。\n$$\\int_{0}^{t} (t-t')^{md} dt' = \\int_{t}^{0} u^{md} (-du) = \\int_{0}^{t} u^{md} du = \\left[ \\frac{u^{md+1}}{md+1} \\right]_{0}^{t} = \\frac{t^{md+1}}{md+1}$$\n将此代回 $X_{\\mathrm{e}}(t)$ 的表达式中：\n$$X_{\\mathrm{e}}(t) = I_0 g_d G^d \\left( \\frac{t^{md+1}}{md+1} \\right) = \\left( \\frac{I_0 g_d G^d}{md+1} \\right) t^{md+1}$$\n将此结果与 $X_{\\mathrm{e}}(t) = (kt)^n$ 比较，时间依赖性揭示了指数。对于恒定形核速率：\n$$n = md + 1$$\n\n我们现在已经从第一性原理推导出了 Avrami 指数 $n$ 的通用表达式。我们接下来评估每个陈述。\n\n**选项评估**\n\n**A. 在 $t=0$ 时位点饱和形核，三维（$d=3$）界面控制生长，得到 $n=3$。**\n- 形核模型：位点饱和。相关公式为 $n = md$。\n- 生长机制：界面控制，意味着 $m=1$。\n- 维度：$d=3$。\n- 计算：$n = (1)(3) = 3$。\n- 该陈述声称 $n=3$。\n- 结论：**正确**。\n\n**B. 单位体积恒定形核速率，二维（$d=2$）界面控制生长，得到 $n=4$。**\n- 形核模型：恒定速率。相关公式为 $n = md + 1$。\n- 生长机制：界面控制，所以 $m=1$。\n- 维度：$d=2$。\n- 计算：$n = (1)(2) + 1 = 3$。\n- 该陈述声称 $n=4$。这是不正确的。指数 $n=4$ 对应于三维界面控制生长下的恒定形核。\n- 结论：**错误**。\n\n**C. 在 $t=0$ 时位点饱和形核，三维（$d=3$）扩散控制生长，得到 $n=\\tfrac{3}{2}$。**\n- 形核模型：位点饱和。相关公式为 $n = md$。\n- 生长机制：扩散控制，所以 $m=\\tfrac{1}{2}$。\n- 维度：$d=3$。\n- 计算：$n = (\\tfrac{1}{2})(3) = \\tfrac{3}{2}$。\n- 该陈述声称 $n=\\tfrac{3}{2}$。\n- 结论：**正确**。\n\n**D. 单位体积恒定形核速率，三维（$d=3$）扩散控制生长，得到 $n=3$。**\n- 形核模型：恒定速率。相关公式为 $n = md + 1$。\n- 生长机制：扩散控制，所以 $m=\\tfrac{1}{2}$。\n- 维度：$d=3$。\n- 计算：$n = (\\tfrac{1}{2})(3) + 1 = \\tfrac{3}{2} + 1 = \\tfrac{5}{2}$。\n- 该陈述声称 $n=3$。\n- 结论：**错误**。\n\n**E. 单位体积恒定形核速率，二维（$d=2$）扩散控制生长，得到 $n=2$。**\n- 形核模型：恒定速率。相关公式为 $n = md + 1$。\n- 生长机制：扩散控制，所以 $m=\\tfrac{1}{2}$。\n- 维度：$d=2$。\n- 计算：$n = (\\tfrac{1}{2})(2) + 1 = 1 + 1 = 2$。\n- 该陈述声称 $n=2$。\n- 结论：**正确**。\n\n**F. 在 $t=0$ 时位点饱和形核，一维（$d=1$）界面控制生长，得到 $n=1$。**\n- 形核模型：位点饱和。相关公式为 $n = md$。\n- 生长机制：界面控制，所以 $m=1$。\n- 维度：$d=1$。\n- 计算：$n = (1)(1) = 1$。\n- 该陈述声称 $n=1$。\n- 结论：**正确**。", "answer": "$$\\boxed{ACEF}$$", "id": "2500134"}, {"introduction": "在掌握了动力学原理的基础上，我们现在转向一个实际应用：大块金属玻璃部件的铸造。真实的制备过程会引入热梯度，这意味着材料的不同部分会以迥然不同的速率冷却。通过运用基本的热扩散概念和动力学参数，本练习将让您能够预测铸造棒材径向上的微观结构（非晶 vs. 晶体）以及诸如虚构温度 $T_f$ 和硬度等关键性能的变化，这个练习阐明了“制备-结构-性能”之间的关键联系。[@problem_id:2500092]", "problem": "一个半径为 $R=5\\,\\mathrm{mm}$ 的圆柱形块体金属玻璃 (BMG) 被吸铸到水冷铜模中。熔体在 $T_0=1100\\,\\mathrm{K}$ 的温度下被浇注到模具中，由于传热系数非常高，模具壁在 $T_\\infty=300\\,\\mathrm{K}$ 下可视为有效等温，因此在初始瞬态过程中，边界条件可近似为 $T(r=R,t)\\approx T_\\infty$。该合金的玻璃化转变温度为 $T_g=650\\,\\mathrm{K}$，在 $T_n=700\\,\\mathrm{K}$ 附近有一个连续冷却转变 (CCT) 曲线的“鼻尖”，其等温“鼻尖”时间为 $t_n\\approx 1.5\\,\\mathrm{s}$；如果局部热路径在 $T_n$ 附近停留的时间达到 $t_n$ 的量级，就会形成显著的晶相分数。在相关温度范围内，液体和玻璃的热扩散率近似为常数，$\\alpha=4.0\\times 10^{-6}\\,\\mathrm{m^2\\,s^{-1}}$。你可以假设结晶仅在局部冷却路径在 $T_n$ 附近停留时才会发生，并且在非晶区，局部虚构温度 $T_f$ 遵循由局部冷却速率在 $T_g$ 处决定的结构冻结过程。\n\n仅使用基本的热扩散标度律以及玻璃化转变、虚构温度和时间-温度-转变动力学的定义，推断出虚构温度 $T_f(r)$、硬度 $H(r)$ 和结晶度 $X(r)$ 沿半径方向的变化趋势。同时，通过将局部热扩散时间与 $t_n$ 进行比较，估算任何非晶表面边缘层的特征厚度。\n\n在这些铸造条件下，哪个选项最能描述物理上一致的空间变化以及对非晶边缘层厚度的正确量级估算？\n\nA. 形成一个晶态核心，并带有一个厚度量级为 $d_c\\sim \\sqrt{\\alpha t_n}\\approx 2.5\\,\\mathrm{mm}$ 的非晶边缘层；在非晶边缘层中，$T_f(r)$ 在表面处最高，向内减小，因此 $H(r)$ 在表面处最低，向边缘层-核心界面方向增加；在核心内部，金属间化合物晶体的存在使 $H$ 相对于非晶边缘层更高。\n\nB. 整个横截面保持完全非晶，因为中心的冷却时间尺度远小于 $t_n$；$T_f(r)$ 和 $H(r)$ 基本均匀，预计不会形成晶态核心。\n\nC. 由于表面与冷模具接触，它是结构弛豫最充分的区域；因此 $T_f(r)$ 在表面处最低，在中心处最高，导致表面具有最高的 $H$；由于热量从中心向外流动，因此不会产生结晶。\n\nD. 由于最快的冷却速率，$T_f(r)$ 在表面处最高，并且硬度在表面处也最高，因为快速淬火“冻结”了一个更致密的结构；结晶（如果发生）会在温度梯度最大的表面附近形成一个薄层，而中心保持非晶态。", "solution": "题目陈述经过验证。\n\n步骤 1：提取已知条件\n-   圆柱半径：$R = 5\\,\\mathrm{mm} = 5 \\times 10^{-3}\\,\\mathrm{m}$。\n-   初始熔体温度：$T_0 = 1100\\,\\mathrm{K}$。\n-   模具/边界温度：$T_\\infty = 300\\,\\mathrm{K}$，边界条件为 $T(r=R,t) \\approx T_\\infty$。\n-   玻璃化转变温度：$T_g = 650\\,\\mathrm{K}$。\n-   连续冷却转变 (CCT) 鼻尖温度：$T_n = 700\\,\\mathrm{K}$。\n-   CCT 等温鼻尖时间：$t_n \\approx 1.5\\,\\mathrm{s}$。\n-   热扩散率：$\\alpha = 4.0 \\times 10^{-6}\\,\\mathrm{m^2\\,s^{-1}}$。\n-   假设：如果一个区域在 $T_n$ 附近停留的时间达到 $t_n$ 的量级，就会发生结晶。虚构温度 $T_f$ 由局部冷却速率决定。\n\n步骤 2：使用提取的已知条件进行验证\n该问题描述了块体金属玻璃的铸造，这是材料科学中的一个标准课题。提供的物理量（$R$, $T_0$, $T_g$, $t_n$, $\\alpha$）是现实的且量纲一致。涉及热扩散、玻璃化转变动力学（CCT图）和结构-性能关系（虚构温度、硬度）的概念框架在科学上是合理且成熟的。问题的目标清晰：基于基本原理推断微观结构和性能的径向变化。对于高传热情况，等温边界的简化假设是一种常见且可接受的近似。该问题是自洽的、客观的，并且不违反任何科学原理。这个问题并非微不足道，需要综合传热学和物理冶金学的概念。\n\n步骤 3：结论和行动\n问题是有效的。进行严谨的推导是可能且有必要的。\n\n解答过程首先分析圆柱体内的热传递及其对微观结构和力学性能的影响。\n\n1. 冷却与结晶分析\n圆柱体的冷却由热扩散控制。尺寸为 $L$ 的物体中心（$r=0$）热量扩散出去的特征时间 $\\tau_{cool}$ 由标度律 $\\tau_{cool} \\sim L^2/\\alpha$ 给出。对于半径为 $R$ 的圆柱棒，中心冷却的特征时间为：\n$$ \\tau_{cool} \\approx \\frac{R^2}{\\alpha} $$\n代入给定值：\n$$ \\tau_{cool} \\approx \\frac{(5 \\times 10^{-3}\\,\\mathrm{m})^2}{4.0 \\times 10^{-6}\\,\\mathrm{m^2\\,s^{-1}}} = \\frac{25 \\times 10^{-6}\\,\\mathrm{m^2}}{4.0 \\times 10^{-6}\\,\\mathrm{m^2\\,s^{-1}}} = 6.25\\,\\mathrm{s} $$\n如果合金在CCT鼻尖（$T_n=700\\,\\mathrm{K}$）附近的关键温度区间停留的时间小于临界时间 $t_n \\approx 1.5\\,\\mathrm{s}$，则可以避免结晶。中心的冷却时间 $\\tau_{cool} \\approx 6.25\\,\\mathrm{s}$ 明显长于 $t_n$。因此，棒的中心冷却速度太慢，无法绕过CCT鼻尖，将会发生结晶。这意味着会形成一个晶态核心。\n\n相反，靠近表面的区域冷却得快得多。在局部冷却时间小于 $t_n$ 的表层中，会保留非晶（玻璃态）结构。我们可以通过将该厚度上的扩散时间设为临界时间 $t_n$ 来估算这个非晶边缘层的厚度 $d_c$：\n$$ t_n \\approx \\frac{d_c^2}{\\alpha} $$\n解出 $d_c$：\n$$ d_c \\approx \\sqrt{\\alpha t_n} = \\sqrt{(4.0 \\times 10^{-6}\\,\\mathrm{m^2\\,s^{-1}}) \\times (1.5\\,\\mathrm{s})} = \\sqrt{6.0 \\times 10^{-6}\\,\\mathrm{m^2}} \\approx 2.45 \\times 10^{-3}\\,\\mathrm{m} $$\n因此，预计会形成一个厚度为 $d_c \\approx 2.45\\,\\mathrm{mm}$ 的非晶边缘层。考虑到总半径为 $5\\,\\mathrm{mm}$，这是横截面的很大一部分。因此，结晶度 $X(r)$ 的径向分布在 $r > (R-d_c) \\approx 2.55\\,\\mathrm{mm}$ 时近似为零，而在 $r < 2.55\\,\\mathrm{mm}$ 时大于零，在中心 $r=0$ 处达到最大值。\n\n2. 非晶边缘层中虚构温度和硬度的分析\n在非晶边缘层（$R-d_c < r \\le R$）内，性能由局部冷却速率 $|dT/dt|$ 决定。冷却速率在淬火表面（$r=R$）处最高，并向内逐渐减小。\n虚构温度 $T_f$ 代表液体原子结构被动力学冻结的温度。更高的冷却速率为结构弛豫提供的时间更少，从而“冻结”了一个弛豫程度更低、能量更高、体积更大的状态，这是更高温度下的特征。因此，$T_f$ 随着冷却速率的增加而增加。\n$$ |dT/dt| \\text{ 在 } r=R \\text{ 处最大，并且对于 } r<R \\text{ 减小。} $$\n$$ \\implies \\text{在非晶边缘层中，} T_f(r) \\text{ 在 } r=R \\text{ 处最大，并且对于 } r<R \\text{ 减小。} $$\n在金属玻璃中，硬度 $H$ 与自由体积的量成反比，而自由体积本身又与 $T_f$ 正相关。更高的 $T_f$ 意味着结构密度更低、弛豫程度更小、自由体积更多。这种结构对塑性变形（剪切带形成）的抵抗力更小，从而导致硬度更低。\n$$ H(r) \\propto \\frac{1}{T_f(r)} $$\n因此，硬度在表面（$r=R$）处最低，因为此处的冷却速率和 $T_f$ 最高；硬度向内朝向与晶态核心的界面处增加。\n\n3. 晶态核心的硬度\n在形成BMG的合金中形成的晶相通常是硬的金属间化合物。核心中最终的微观结构是这些硬相的复合物，可能还带有一些残余的非晶基体。这种晶态或部分晶态的结构几乎总是比其完全非晶的对应物更硬、更脆。因此，核心中的硬度 $H_{core}$ 将显著高于非晶边缘层中任何位置的硬度 $H_{rim}$。\n\n预测总结：\n- **结晶度 $X(r)$**：在厚度约 $2.5 \\, \\mathrm{mm}$ 的外边缘层中为零，在核心中非零。\n- **虚构温度 $T_f(r)$**：在边缘层中，在表面（$r=R$）处最高，向内减小。\n- **硬度 $H(r)$**：在边缘层中，在表面（$r=R$）处最低，向内增加。核心中的硬度高于边缘层。\n\n选项评估：\n\nA. 形成一个晶态核心，并带有一个厚度量级为 $d_c\\sim \\sqrt{\\alpha t_n}\\approx 2.5\\,\\mathrm{mm}$ 的非晶边缘层；在非晶边缘层中，$T_f(r)$ 在表面处最高，向内减小，因此 $H(r)$ 在表面处最低，向边缘层-核心界面方向增加；在核心内部，金属间化合物晶体的存在使 $H$ 相对于非晶边缘层更高。\n该陈述正确地指出了晶态核心和非晶边缘层的形成。对边缘层厚度 $d_c \\sim \\sqrt{\\alpha t_n} \\approx 2.45\\,\\mathrm{mm}$ 的估算与我们的量级计算相符。$T_f(r)$ 的趋势（表面最高）是正确的。由此得出的边缘层中 $H(r)$ 的趋势（表面最低）也是正确的。最后，关于晶态核心比非晶边缘层更硬的陈述是正确的。该选项的每一部分都与我们的推导一致。\n结论：**正确**。\n\nB. 整个横截面保持完全非晶，因为中心的冷却时间尺度远小于 $t_n$；$T_f(r)$ 和 $H(r)$ 基本均匀，预计不会形成晶态核心。\n这是不正确的。中心的冷却时间尺度 $\\tau_{cool} \\approx 6.25\\,\\mathrm{s}$ 比 $t_n \\approx 1.5\\,\\mathrm{s}$ 更长，而不是更短。因此，预计会形成晶态核心。此外，冷却速率随半径显著变化，因此 $T_f(r)$ 和 $H(r)$ 不可能均匀。\n结论：**不正确**。\n\nC. 由于表面与冷模具接触，它是结构弛豫最充分的区域；因此 $T_f(r)$ 在表面处最低，在中心处最高，导致表面具有最高的 $H$；由于热量从中心向外流动，因此不会产生结晶。\n这是不正确的。表面冷却最快，因此是结构弛豫程度*最差*的区域，具有最高的 $T_f$。因此，它的硬度最低，而不是最高。关于不发生结晶的说法也是错误的，正如 $\\tau_{cool}$ 和 $t_n$ 的比较所示。“因为热量向外流动”这一理由与是否发生结晶无关；重要的是热流的速率。\n结论：**不正确**。\n\nD. 由于最快的冷却速率，$T_f(r)$ 在表面处最高，并且硬度在表面处也最高，因为快速淬火“冻结”了一个更致密的结构；结晶（如果发生）会在温度梯度最大的表面附近形成一个薄层，而中心保持非晶态。\n该选项正确地指出 $T_f$ 在表面最高。然而，它错误地声称硬度在表面也最高，其依据是快速淬火会冻结“更致密”结构的错误前提。快速淬火冻结的是一个密度更低、自由体积更高的结构。此外，它错误地预测结晶发生在表面附近，而中心保持非晶态。这与正确的物理行为相反；冷却缓慢的中心结晶，而冷却迅速的表面形成玻璃。\n结论：**不正确**。", "answer": "$$\\boxed{A}$$", "id": "2500092"}, {"introduction": "一旦成功制备出金属玻璃，我们如何定量地描述其固有的无序原子结构呢？这个高级计算练习将指导您直接从原子尺度的模拟数据中，计算静态结构因子 $S(q)$ 和径向分布函数 $g(r)$——这二者是表征非晶材料结构的基本“指纹”。通过完成此实践，您将获得分子动力学和结构分析等前沿材料研究工具的实践经验。[@problem_id:2500159]", "problem": "您将编写一个完整的程序，从第一性原理出发，根据周期性边界条件下二元金属玻璃模型的分子动力学轨迹，计算静态结构因子 $S(q)$ 和径向分布函数 $g(r)$，并通过将计算出的 $S(q)$ 与一个通过向精确 $S(q)$ 添加受控噪声而生成的合成实验数据集进行比较，来验证计算结果。您的推导和算法选择必须基于散射理论和统计力学中针对各向同性系统的核心定义，不得引用任何未经证明的简化公式。您将在立方模拟单元中，根据最小镜像约定，直接从粒子坐标实现 $g(r)$ 和 $S(q)$ 的计算。\n\n在您的推导和算法中，您应明确使用的基本原理是：对于各向同性流体，径向分布函数的定义，该定义基于对关联（对粒子间距进行delta函数计数，并由理想气体壳层中的粒子数进行归一化）；静态结构因子的定义，即倒易空间中密度-密度关联的取向平均（对于具有依赖于物种的散射长度的多组分系统，表示为对间距的函数）；以及用于时间平均或帧平均的各向同性假设。所有符号、算符和数字均应按如下纯数学术语处理。\n\n您的程序必须：\n- 在边长为 $L$ 的立方盒子中，使用周期性边界条件，构建数密度为 $\\rho$（单位 $\\text{\\AA}^{-3}$）、组分分数为 $c_{\\mathrm{A}}$ 和 $c_{\\mathrm{B}}$（其中 $c_{\\mathrm{A}}+c_{\\mathrm{B}}=1$）的二元合金构型。原子总数为 $N$，体积为 $V=L^3$，因此 $\\rho=N/V$。分配原子类型 $\\mathrm{A}$ 和 $\\mathrm{B}$ 以匹配组分，并为每个物种分配相应的散射长度 $b_{\\mathrm{A}}$ 和 $b_{\\mathrm{B}}$（视为与 $q$ 无关的常数）。\n- 通过对初始构型进行小位移来生成 $F$ 帧，以模拟采样。在周期性盒子中使用最小镜像约定计算对间距。\n- 在一个径向网格上计算径向分布函数 $g(r)$，该网格的 bin 宽度为 $\\Delta r$，范围从 $r=0$ 到 $r_{\\max}=L/2$。使用基于对粒子间距离进行计数并由数密度为 $\\rho$ 的理想气体壳层粒子数进行归一化的各向同性定义。报告所有距离 $r$ 的单位为 $\\text{\\AA}$。\n- 在一个波矢网格 $q\\in[q_{\\min},q_{\\max}]$（包含 $M_q$ 个点）上计算静态结构因子 $S(q)$。使用 $S(q)$ 的各向同性定义，即对于一个多组分系统，其在倒易空间中密度-密度关联的帧平均和取向平均，其中每个原子都分配有散射长度 $b_i$。使用一种归一化方法，使得当 $q\\to\\infty$ 时 $S(q)\\to 1$。报告所有波矢 $q$ 的单位为 $\\text{\\AA}^{-1}$，并将 $S(q)$ 作为无量纲量。\n- 通过向从相同坐标计算的精确 $S(q)$ 添加标准差为 $\\sigma$（无量纲）的独立同分布高斯噪声，构建一个合成实验曲线 $S_{\\mathrm{exp}}(q)$。为保证可复现性，请使用指定的随机种子。\n- 通过计算在 $q$ 网格上的均方根偏差 $\\mathrm{RMSD}=\\sqrt{\\langle (S(q)-S_{\\mathrm{exp}}(q))^2\\rangle_q}$，将计算出的 $S(q)$ 与 $S_{\\mathrm{exp}}(q)$ 进行验证，并检查对于给定的容差 $\\varepsilon$（无量纲），是否有 $\\mathrm{RMSD}\\le \\varepsilon$。对于每个测试用例，您必须输出一个布尔值，指示验证是否通过。\n\n物理单位：将 $r$ 的单位视为 $\\text{\\AA}$，$q$ 的单位视为 $\\text{\\AA}^{-1}$，数密度 $\\rho$ 的单位视为 $\\text{\\AA}^{-3}$，$S(q)$ 和 $g(r)$ 视为无量纲。由于各向同性，角度无关；无需报告任何角度。\n\n测试套件。您的程序必须在内部执行以下三个案例，并将验证布尔值聚合到最终的单行输出中。对于每个案例，首先在指定的密度下生成一个初始构型，然后通过在每个笛卡尔分量上添加小于 $0.1\\,\\text{\\AA}$ 的均匀小位移来创建额外的帧，并应用周期性边界条件进行包裹。对间距使用最小镜像约定。对于每个案例，通过使用列出的随机种子添加具有所列 $\\sigma$ 的高斯噪声来生成合成实验。\n\n- 案例 1（正常路径，平衡二元体系）：\n  - $N=200$, $c_{\\mathrm{A}}=0.5$, $c_{\\mathrm{B}}=0.5$。\n  - $\\rho=0.06\\,\\text{\\AA}^{-3}$。\n  - 帧数 $F=3$。\n  - 散射长度：$b_{\\mathrm{A}}=7.7$, $b_{\\mathrm{B}}=7.2$。\n  - 径向 bin 宽度 $\\Delta r=0.05\\,\\text{\\AA}$。\n  - 波矢网格：$q_{\\min}=0$, $q_{\\max}=20\\,\\text{\\AA}^{-1}$，包含 $M_q=256$ 个等间距点，并包括两个端点。\n  - 合成实验：噪声标准差 $\\sigma=0.02$，随机种子 $=12345$。\n  - 验证容差 $\\varepsilon=0.04$。\n\n- 案例 2（小体系，更高噪声的实验）：\n  - $N=64$, $c_{\\mathrm{A}}=0.5$, $c_{\\mathrm{B}}=0.5$。\n  - $\\rho=0.06\\,\\text{\\AA}^{-3}$。\n  - 帧数 $F=1$。\n  - 散射长度：$b_{\\mathrm{A}}=7.7$, $b_{\\mathrm{B}}=7.2$。\n  - 径向 bin 宽度 $\\Delta r=0.05\\,\\text{\\AA}$。\n  - 波矢网格：$q_{\\min}=0$, $q_{\\max}=20\\,\\text{\\AA}^{-1}$，包含 $M_q=256$ 个等间距点，并包括两个端点。\n  - 合成实验：噪声标准差 $\\sigma=0.03$，随机种子 $=54321$。\n  - 验证容差 $\\varepsilon=0.08$。\n\n- 案例 3（组分不对称，散射衬度显著，密度略有不同）：\n  - $N=128$, $c_{\\mathrm{A}}=0.8$, $c_{\\mathrm{B}}=0.2$。\n  - $\\rho=0.065\\,\\text{\\AA}^{-3}$。\n  - 帧数 $F=2$。\n  - 散射长度：$b_{\\mathrm{A}}=10.0$, $b_{\\mathrm{B}}=5.0$。\n  - 径向 bin 宽度 $\\Delta r=0.05\\,\\text{\\AA}$。\n  - 波矢网格：$q_{\\min}=0$, $q_{\\max}=20\\,\\text{\\AA}^{-1}$，包含 $M_q=256$ 个等间距点，并包括两个端点。\n  - 合成实验：噪声标准差 $\\sigma=0.015$，随机种子 $=9876$。\n  - 验证容差 $\\varepsilon=0.03$。\n\n算法约束：\n- 在边长为 $L$ 的立方盒子中使用最小镜像约定，其中 $L=(N/\\rho)^{1/3}$，单位为 $\\text{\\AA}$。\n- 在构建初始构型时，确保原子间距有一个适度的下界（例如，一个软约束，即任意两个原子间的距离不小于一个小的 $r_{\\min}$），以避免不物理的重叠。任何允许在给定 $\\rho$ 下成功放置原子的合理 $r_{\\min}$ 都是可接受的。\n- 在进行任何分析之前，对所有帧的 $g(r)$ 进行平均；然而，验证仅要求将 $S(q)$ 与 $S_{\\mathrm{exp}}(q)$ 进行比较。\n- 为保证数值稳定性，精确地实现各向同性系统中 $S(q)$ 定义的球形取向平均，并正确处理 $q\\to 0$ 的极限情况。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含三个案例的验证布尔值，形式为逗号分隔的列表，并用方括号括起来，例如，`[True,False,True]`。\n\n您的实现必须是完全确定性的，并且不得读取任何外部输入。所有随机数生成必须使用上述指定的固定种子以确保可复现性。所有中间计算使用的距离单位为 $\\text{\\AA}$，波矢单位为 $\\text{\\AA}^{-1}$，密度单位为 $\\text{\\AA}^{-3}$。最终输出包含三个指定的布尔值。", "solution": "所述问题已经过验证，被认为是科学上合理的、提法恰当的，并且没有矛盾或含糊之处。它提出了一个凝聚态物理学中的标准计算任务，基于统计力学和散射理论的既定原理。因此，有必要提供一个解决方案。\n\n目标是从粒子坐标计算二元非晶合金的静态结构因子 $S(q)$ 和径向分布函数 $g(r)$，并验证计算出的 $S(q)$。我们将从第一性原理出发。\n\n**1. 系统定义与几何初步**\n\n该系统包含 $N$ 个原子，位于体积为 $V=L^3$ 的立方模拟单元中，并采用周期性边界条件。数密度为 $\\rho = N/V$，这决定了盒子边长 $L = (N/\\rho)^{1/3}$。该系统是 $\\mathrm{A}$ 和 $\\mathrm{B}$ 两种物种的二元合金，组分分数为 $c_{\\mathrm{A}}$ 和 $c_{\\mathrm{B}}$，其中 $c_{\\mathrm{A}}+c_{\\mathrm{B}}=1$。每种物种的原子数分别为 $N_{\\mathrm{A}} = \\text{round}(c_{\\mathrm{A}}N)$ 和 $N_{\\mathrm{B}} = N - N_{\\mathrm{A}}$。每个原子 $i$ 被赋予一个依赖于物种的散射长度 $b_i$，其值为 $b_{\\mathrm{A}}$ 或 $b_{\\mathrm{B}}$。\n\n位于位置 $\\mathbf{r}_i$ 和 $\\mathbf{r}_j$ 的两个原子 $i$ 和 $j$ 之间的距离必须使用最小镜像约定（MIC）计算。对于边长为 $L$ 的立方盒子，分离矢量 $\\Delta\\mathbf{r} = \\mathbf{r}_i - \\mathbf{r}_j$ 按如下方式调整：\n$$ \\Delta\\mathbf{r}_{\\text{MIC}} = \\Delta\\mathbf{r} - L \\cdot \\text{round}(\\Delta\\mathbf{r} / L) $$\n其中 `round` 函数按分量作用。对间距则为 $r_{ij} = ||\\Delta\\mathbf{r}_{\\text{MIC}}||$。所有计算都在 $F$ 个统计独立的构型（帧）上进行，以近似系综平均，这援引了各向同性假设。\n\n**2. 径向分布函数 $g(r)$**\n\n对于一个各向同性系统，径向分布函数 $g(r)$ 给出了在距离一个参考粒子为 $r$ 的地方找到另一个粒子的概率，该概率是相对于同等密度的理想气体的。对于体积 $V$ 中的 $N$ 个粒子，它通过对对间距进行直方图统计来计算。\n\n设 $H(r, \\Delta r)$ 为在所有 $F$ 帧上平均的、其分离距离 $r_{ij}$ 落在区间 $[r, r+\\Delta r]$ 内的原子对 $(i, j)$（其中 $i<j$）的数量。相应球壳的体积为 $V_{\\text{shell}}(r) = \\frac{4}{3}\\pi((r+\\Delta r)^3 - r^3)$。在理想气体中，围绕一个给定中心粒子在此壳层中预期的粒子数为 $\\rho V_{\\text{shell}}(r)$。对所有 $N$ 个可能的中心粒子求和，并考虑到唯一对以避免双重计数，壳层中理想的对数为 $\\frac{1}{2}N\\rho V_{\\text{shell}}(r)$。\n\n因此，$g(r)$ 由观测到的对数与理想对数之比给出：\n$$ g(r) = \\frac{H(r, \\Delta r)}{\\frac{1}{2} F N \\rho V_{\\text{shell}}(r)} $$\n其中，直方图计数 $H(r, \\Delta r)$ 首先通过对所有帧的对计数求和得到，然后用于此公式。分母中的因子 $F$ 将总计数归一化为每帧的平均值。\n\n**3. 静态结构因子 $S(q)$**\n\n静态结构因子 $S(q)$ 是倒易空间中密度-密度关联的度量。对于一个受散射（例如中子或X射线）的多组分系统，它是基于散射强度定义的。总散射振幅是来自每个原子的振幅之和，$\\sum_{j=1}^N b_j e^{-i\\mathbf{q}\\cdot\\mathbf{r}_j}$。强度 $I(\\mathbf{q})$ 是该振幅模平方的系综平均。\n$$ I(\\mathbf{q}) = \\left\\langle \\left| \\sum_{j=1}^N b_j e^{-i\\mathbf{q}\\cdot\\mathbf{r}_j} \\right|^2 \\right\\rangle = \\left\\langle \\sum_{j,k=1}^N b_j b_k e^{-i\\mathbf{q}\\cdot(\\mathbf{r}_j - \\mathbf{r}_k)} \\right\\rangle $$\n对于各向同性系统，我们对模为 $q=|\\mathbf{q}|$ 的波矢 $\\mathbf{q}$ 的所有取向进行平均。这得出了一个解析结果 $\\langle e^{-i\\mathbf{q}\\cdot\\mathbf{r}} \\rangle_{|\\mathbf{q}|=q} = \\frac{\\sin(qr)}{qr}$。应用此结果，我们得到：\n$$ I(q) = \\left\\langle \\sum_{j,k=1}^N b_j b_k \\frac{\\sin(q r_{jk})}{q r_{jk}} \\right\\rangle_{\\text{frames}} $$\n其中 $r_{jk} = |\\mathbf{r}_j - \\mathbf{r}_k|$。问题要求当 $q \\to \\infty$ 时 $S(q) \\to 1$。当 $q \\to \\infty$ 时，对于 $r_{jk} \\ne 0$，$\\frac{\\sin(qr_{jk})}{qr_{jk}} \\to 0$，所以只有 $j=k$ 的项存活下来。对于 $j=k$，$r_{jj}=0$ 且 $\\lim_{x\\to 0} \\frac{\\sin x}{x} = 1$。因此，强度在高 $q$ 时的极限是：\n$$ \\lim_{q\\to\\infty} I(q) = \\left\\langle \\sum_{j=1}^N b_j^2 \\right\\rangle = N \\langle b^2 \\rangle $$\n其中 $\\langle b^2 \\rangle = \\frac{1}{N}\\sum_j b_j^2 = c_{\\mathrm{A}}b_{\\mathrm{A}}^2 + c_{\\mathrm{B}}b_{\\mathrm{B}}^2$。用这个因子对强度进行归一化，得到的结构因子满足所需条件：\n$$ S(q) = \\frac{I(q)}{N \\langle b^2 \\rangle} = \\frac{1}{N \\langle b^2 \\rangle} \\left\\langle \\sum_{j,k=1}^N b_j b_k \\frac{\\sin(q r_{jk})}{q r_{jk}} \\right\\rangle_{\\text{frames}} $$\n这个双重求和可以分为对角（$j=k$）和非对角（$j \\ne k$）部分：\n$$ S(q) = \\frac{1}{N \\langle b^2 \\rangle} \\left\\langle \\left( \\sum_{j=1}^N b_j^2 \\cdot 1 + \\sum_{j \\ne k} b_j b_k \\frac{\\sin(q r_{jk})}{q r_{jk}} \\right) \\right\\rangle_{\\text{frames}} $$\n必须小心处理 $q=0$ 的情况。当 $q \\to 0$ 时，对于所有对，$\\frac{\\sin(qr_{jk})}{qr_{jk}} \\to 1$。\n$$ S(0) = \\frac{1}{N \\langle b^2 \\rangle} \\left\\langle \\sum_{j,k} b_j b_k \\right\\rangle = \\frac{1}{N \\langle b^2 \\rangle} \\left( \\sum_j b_j \\right)^2 = \\frac{(N \\langle b \\rangle)^2}{N \\langle b^2 \\rangle} = \\frac{N \\langle b \\rangle^2}{\\langle b^2 \\rangle} $$\n其中 $\\langle b \\rangle = c_{\\mathrm{A}}b_{\\mathrm{A}} + c_{\\mathrm{B}}b_{\\mathrm{B}}$。\n\n**4. 算法实现与验证**\n\n对于每个测试用例，算法按以下步骤进行：\n\n1.  **构型生成**：\n    *   确定系统参数：$L, N_{\\mathrm{A}}, N_{\\mathrm{B}}$。\n    *   使用指定的种子初始化一个随机数生成器。\n    *   通过随机顺序添加的方式在盒子中生成 $N$ 个原子的初始构型，强制实施最小分离距离（例如，$r_{\\min}=1.0\\,\\text{\\AA}$）以防止不物理的重叠。\n    *   通过对前一帧的原子位置施加小的随机位移（例如，在每个坐标上来自均匀分布 $U(-0.1, 0.1)\\,\\text{\\AA}$）来生成 $F$ 帧，并使用周期性边界条件将坐标包回盒子中。\n\n2.  **S(q) 计算**：\n    *   创建一个从 $q_{\\min}$ 到 $q_{\\max}$ 的 $M_q$ 个波矢的网格。\n    *   初始化一个大小为 $M_q$ 的数组 `S_q` 为零。\n    *   对于 $F$ 帧中的每一帧：\n        *   计算一个特定于该帧的和 `current_frame_sum_q`，它也是一个大小为 $M_q$ 的数组。\n        *   加上对角项：`current_frame_sum_q = sum(b_i^2)`。\n        *   遍历所有唯一的原子对 $(i, j)$，其中 $i < j$。对于每一对：\n            *   使用 MIC 计算距离 $r_{ij}$。\n            *   为网格中所有 $q$ 值计算贡献 $2 b_i b_j \\frac{\\sin(q r_{ij})}{q r_{ij}}$。这可以通过向量化操作高效完成，例如，使用 `numpy.sinc(q_grid * rij / numpy.pi)`。\n            *   将此向量加到 `current_frame_sum_q` 上。\n        *   将 `current_frame_sum_q` 加到总的 `S_q` 累加器中。\n    *   遍历完所有帧后，对总和进行归一化：`S_q = S_q / (F * N * <b^2>)`。\n\n3.  **验证**：\n    *   使用相同的带种子的随机数生成器，生成一个包含 $M_q$ 个噪声值的向量，这些值来自均值为 $0$、标准差为 $\\sigma$ 的高斯分布。\n    *   构建合成实验数据：$S_{\\text{exp}}(q) = S(q) + \\text{noise}$。\n    *   计算均方根偏差：$\\mathrm{RMSD} = \\sqrt{\\frac{1}{M_q}\\sum_k (S(q_k) - S_{\\text{exp}}(q_k))^2}$。这等效于所生成噪声样本的标准差。\n    *   如果 $\\mathrm{RMSD} \\le \\varepsilon$，则验证通过。记录布尔结果。\n\n对所有三个测试用例执行此过程，以生成最终的布尔值列表。", "answer": "```python\nimport numpy as np\n\ndef run_simulation_case(N, c_A, rho, F, b_A, b_B, dr, q_min, q_max, M_q, sigma, seed, epsilon):\n    \"\"\"\n    Computes S(q) for a binary system and validates it against synthetic data.\n    \"\"\"\n    # 1. System Setup\n    L = (N / rho)**(1/3)\n    c_B = 1.0 - c_A\n    N_A = int(round(c_A * N))\n    N_B = N - N_A\n\n    b_values = np.array([b_A] * N_A + [b_B] * N_B)\n    b_avg = c_A * b_A + c_B * b_B\n    b2_avg = c_A * b_A**2 + c_B * b_B**2\n\n    # Initialize a single RNG for the entire case for reproducibility\n    rng = np.random.default_rng(seed)\n\n    # 2. Frame Generation\n    frames = []\n    r_min_sq = 1.0**2  # Minimum distance constraint squared (1.0 Å)\n\n    # Generate initial configuration (Frame 0) by Random Sequential Addition\n    coords = np.zeros((N, 3))\n    for i in range(N):\n        placed = False\n        # Attempt to place atom i up to 10000 times\n        for _ in range(10000):\n            pos = rng.uniform(0, L, size=3)\n            # If it's the first atom, no need to check distances\n            if i == 0:\n                coords[i] = pos\n                placed = True\n                break\n            \n            # Check minimum distance against all previously placed atoms\n            delta = coords[:i] - pos\n            delta -= L * np.round(delta / L)  # Minimum image convention\n            dist_sq = np.sum(delta**2, axis=1)\n            \n            if np.all(dist_sq >= r_min_sq):\n                coords[i] = pos\n                placed = True\n                break\n        \n        if not placed:\n            # This should not happen with the given parameters but is a safeguard.\n            raise RuntimeError(f\"Failed to place atom {i+1} in the simulation box.\")\n            \n    frames.append(coords.copy())\n\n    # Generate subsequent F-1 frames by small displacements\n    for _ in range(F - 1):\n        prev_coords = frames[-1]\n        displacements = rng.uniform(-0.1, 0.1, size=(N, 3))\n        new_coords = prev_coords + displacements\n        # Apply periodic boundary conditions by wrapping\n        new_coords -= L * np.floor(new_coords / L)\n        frames.append(new_coords)\n\n    # 3. Static Structure Factor S(q) Calculation\n    q_grid = np.linspace(q_min, q_max, M_q)\n    total_sum_q = np.zeros(M_q)\n    \n    for f in range(F):\n        coords_frame = frames[f]\n        \n        # Contribution from pairs (off-diagonal terms)\n        current_frame_off_diagonal_sum = np.zeros(M_q)\n        for i in range(N):\n            for j in range(i + 1, N):\n                rij_vec = coords_frame[i] - coords_frame[j]\n                rij_vec -= L * np.round(rij_vec / L) # MIC\n                rij = np.sqrt(np.sum(rij_vec**2))\n                \n                # The term is sin(q*r)/(q*r), which is np.sinc(q*r/pi) in numpy\n                sinc_vals = np.sinc(q_grid * rij / np.pi)\n                current_frame_off_diagonal_sum += 2 * b_values[i] * b_values[j] * sinc_vals\n        \n        # Add diagonal term (sum_i b_i^2) and off-diagonal term for this frame\n        total_sum_q += np.sum(b_values**2) + current_frame_off_diagonal_sum\n\n    # Final normalization\n    S_q = total_sum_q / (F * N * b2_avg)\n\n    # 4. Validation against Synthetic Experimental Data\n    noise = rng.normal(loc=0.0, scale=sigma, size=M_q)\n    S_exp = S_q + noise\n    \n    # RMSD is the root mean square of the difference, which is the noise itself\n    rmsd = np.sqrt(np.mean((S_q - S_exp)**2))\n    \n    validation_passed = rmsd <= epsilon\n\n    return validation_passed\n\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the final result.\n    \"\"\"\n    test_cases = [\n        # Case 1 (happy path, balanced binary)\n        {'N': 200, 'c_A': 0.5, 'rho': 0.06, 'F': 3, 'b_A': 7.7, 'b_B': 7.2,\n         'dr': 0.05, 'q_min': 0.0, 'q_max': 20.0, 'M_q': 256,\n         'sigma': 0.02, 'seed': 12345, 'epsilon': 0.04},\n        \n        # Case 2 (small system, noisier experiment)\n        {'N': 64, 'c_A': 0.5, 'rho': 0.06, 'F': 1, 'b_A': 7.7, 'b_B': 7.2,\n         'dr': 0.05, 'q_min': 0.0, 'q_max': 20.0, 'M_q': 256,\n         'sigma': 0.03, 'seed': 54321, 'epsilon': 0.08},\n\n        # Case 3 (compositionally asymmetric, distinct scattering contrast)\n        {'N': 128, 'c_A': 0.8, 'rho': 0.065, 'F': 2, 'b_A': 10.0, 'b_B': 5.0,\n         'dr': 0.05, 'q_min': 0.0, 'q_max': 20.0, 'M_q': 256,\n         'sigma': 0.015, 'seed': 9876, 'epsilon': 0.03},\n    ]\n\n    results = []\n    for case in test_cases:\n        result = run_simulation_case(**case)\n        results.append(result)\n\n    # Format the final output as specified\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2500159"}]}