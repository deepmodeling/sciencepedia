{"hands_on_practices": [{"introduction": "反应的活化热力学参数，如活化焓（$\\Delta H_f^\\ddagger$）和活化熵（$\\Delta S_f^\\ddagger$），不仅描述了单一方向的反应速率，它们还通过共享的过渡态与整个反应的热力学紧密相连。本练习将通过一个可逆异构化反应的例子，帮助你构建完整的反应能量剖面图，并从动力学角度加深对微观可逆性原理的理解。通过计算逆反应的活化参数，你将实践如何将正向反应动力学、逆向反应动力学与反应的整体热力学变化（$\\Delta H^\\circ$ 和 $\\Delta S^\\circ$）联系起来 [@problem_id:1526820]。", "problem": "分子的异构化是化学中许多领域（从材料科学到生物学）的一个基本过程。考虑一个分子两种构象异构体（表示为A和B）之间的可逆异构化反应，该反应在标准温度和压力下的溶剂中进行：\n$$\n\\text{A} \\rightleftharpoons \\text{B}\n$$\n根据过渡态理论的热力学表述，已通过实验确定了正向反应（A $\\rightarrow$ B）的活化参数。标准活化焓为 $\\Delta H_f^\\ddagger = +78.6 \\text{ kJ/mol}$，标准活化熵为 $\\Delta S_f^\\ddagger = -21.4 \\text{ J/(mol·K)}$。\n\n此外，该反应的整体热力学性质也已被表征。标准反应焓为 $\\Delta H^\\circ = -15.2 \\text{ kJ/mol}$，标准反应熵为 $\\Delta S^\\circ = +8.9 \\text{ J/(mol·K)}$。\n\n你的任务是计算逆向反应（B $\\rightarrow$ A）的标准活化焓 $\\Delta H_r^\\ddagger$ 和标准活化熵 $\\Delta S_r^\\ddagger$。\n\n活化焓以 kJ/mol 为单位，活化熵以 J/(mol·K) 为单位表示。请按顺序给出你的两个答案，并四舍五入到三位有效数字。", "solution": "本题要求在给定正向反应参数和过程整体热力学性质的情况下，求出逆向反应的活化参数。我们将使用从过渡态理论的热力学表述中推导出的关系式。\n\n设 $H_A$ 和 $S_A$ 分别为反应物 A 的标准摩尔焓和熵，$H_B$ 和 $S_B$ 分别为产物 B 的标准摩尔焓和熵，$H_{TS}$ 和 $S_{TS}$ 分别为过渡态的标准摩尔焓和熵。\n\n总的标准反应焓 $\\Delta H^\\circ$ 和反应熵 $\\Delta S^\\circ$ 定义为产物与反应物之间的差值：\n$$\n\\Delta H^\\circ = H_B - H_A\n$$\n$$\n\\Delta S^\\circ = S_B - S_A\n$$\n\n正向反应 A $\\rightarrow$ B 的标准活化焓和活化熵定义为过渡态与反应物 A 之间的差值：\n$$\n\\Delta H_f^\\ddagger = H_{TS} - H_A\n$$\n$$\n\\Delta S_f^\\ddagger = S_{TS} - S_A\n$$\n\n同样，逆向反应 B $\\rightarrow$ A 的标准活化焓和活化熵定义为过渡态与反应物 B（即正向反应的产物）之间的差值：\n$$\n\\Delta H_r^\\ddagger = H_{TS} - H_B\n$$\n$$\n\\Delta S_r^\\ddagger = S_{TS} - S_B\n$$\n\n我们的目标是求出 $\\Delta H_r^\\ddagger$ 和 $\\Delta S_r^\\ddagger$。我们可以根据给定参数推导出这些量的表达式。\n\n对于逆向反应的活化焓 $\\Delta H_r^\\ddagger$：\n我们可以将 $H_B$ 用 $H_A$ 和 $\\Delta H^\\circ$ 表示为 $H_B = H_A + \\Delta H^\\circ$。将其代入 $\\Delta H_r^\\ddagger$ 的表达式中：\n$$\n\\Delta H_r^\\ddagger = H_{TS} - (H_A + \\Delta H^\\circ) = (H_{TS} - H_A) - \\Delta H^\\circ\n$$\n注意到 $(H_{TS} - H_A)$ 是 $\\Delta H_f^\\ddagger$ 的定义，我们得到以下关系式：\n$$\n\\Delta H_r^\\ddagger = \\Delta H_f^\\ddagger - \\Delta H^\\circ\n$$\n\n现在，我们代入给定的数值：\n$\\Delta H_f^\\ddagger = +78.6 \\text{ kJ/mol}$\n$\\Delta H^\\circ = -15.2 \\text{ kJ/mol}$\n$$\n\\Delta H_r^\\ddagger = (+78.6 \\text{ kJ/mol}) - (-15.2 \\text{ kJ/mol}) = 78.6 + 15.2 = 93.8 \\text{ kJ/mol}\n$$\n四舍五入到三位有效数字，$\\Delta H_r^\\ddagger = 93.8 \\text{ kJ/mol}$。\n\n接下来，对于逆向反应的活化熵 $\\Delta S_r^\\ddagger$：\n使用相同的逻辑，我们将 $S_B$ 用 $S_A$ 和 $\\Delta S^\\circ$ 表示为 $S_B = S_A + \\Delta S^\\circ$。将其代入 $\\Delta S_r^\\ddagger$ 的表达式中：\n$$\n\\Delta S_r^\\ddagger = S_{TS} - (S_A + \\Delta S^\\circ) = (S_{TS} - S_A) - \\Delta S^\\circ\n$$\n注意到 $(S_{TS} - S_A)$ 是 $\\Delta S_f^\\ddagger$ 的定义，我们得到以下关系式：\n$$\n\\Delta S_r^\\ddagger = \\Delta S_f^\\ddagger - \\Delta S^\\circ\n$$\n\n现在，我们代入给定的数值：\n$\\Delta S_f^\\ddagger = -21.4 \\text{ J/(mol·K)}$\n$\\Delta S^\\circ = +8.9 \\text{ J/(mol·K)}$\n$$\n\\Delta S_r^\\ddagger = (-21.4 \\text{ J/(mol·K)}) - (+8.9 \\text{ J/(mol·K)}) = -21.4 - 8.9 = -30.3 \\text{ J/(mol·K)}\n$$\n四舍五入到三位有效数字，$\\Delta S_r^\\ddagger = -30.3 \\text{ J/(mol·K)}$。\n\n计算得出逆向反应的活化焓为 93.8 kJ/mol，活化熵为 -30.3 J/(mol·K)。", "answer": "$$\\boxed{\\begin{pmatrix} 93.8 & -30.3 \\end{pmatrix}}$$", "id": "1526820"}, {"introduction": "经典的过渡态理论虽然功能强大，但其核心是基于经典力学，因此存在局限性。对于涉及轻粒子（如质子或氢原子）转移的反应，或是在低温下发生的反应，量子力学隧穿效应可能成为一个不可忽视甚至起决定性作用的因素。本练习将引导你使用一阶Wigner校正，来定量估算这种量子效应在一种假设的场景下对反应速率的贡献，从而理解经典模型在何种情况下会失效，以及我们如何初步修正理论预测以更好地匹配实验结果 [@problem_id:1526808]。", "problem": "一位天体化学家正在研究一种假设的小有机分子“cryoformamide”通过分子内质子转移反应发生的异构化。该反应在维持于 $77.0$ K 恒定温度的模拟星际冰环境中被认为具有重要意义。基于过渡态理论（TST）的经典模型的初步理论研究一致地低估了实验测得的反应速率。这种差异表明，在此低温下，量子力学隧穿效应在反应机理中起着重要作用。\n\n为了量化这种隧穿贡献，我们进行了一项高水平的量子化学计算来表征该反应的过渡态。该计算揭示了沿着反应坐标的运动对应于一个具有虚频率的振动模式。该特征频率的大小被确定为 $\\nu^\\ddagger = 4.50 \\times 10^{13}$ s⁻¹。\n\n假设量子隧穿效应可以由一阶 Wigner 校正充分描述，请计算实验观测到的速率常数 $k_{obs}$ 与经典 TST 模型预测的速率常数 $k_{TST}$ 的理论比值。你的答案应该是一个无量纲数。\n\n使用以下物理常数：\n- 普朗克常数，$h = 6.626 \\times 10^{-34}$ J·s\n- 玻尔兹曼常数，$k_B = 1.381 \\times 10^{-23}$ J·K⁻¹\n\n将你的最终答案四舍五入至三位有效数字。", "solution": "一阶 Wigner 隧穿校正乘以经典 TST 速率常数。因此，观测到的（包含隧穿效应的）速率与经典 TST 速率的比值为\n$$\n\\frac{k_{obs}}{k_{TST}}=\\kappa_{W},\n$$\n其中 Wigner 校正因子为\n$$\n\\kappa_{W}=1+\\frac{1}{24}\\left(\\frac{\\hbar \\omega^{\\ddagger}}{k_{B}T}\\right)^{2}=1+\\frac{1}{24}\\left(\\frac{h \\nu^{\\ddagger}}{k_{B}T}\\right)^{2}.\n$$\n此处，$\\nu^{\\ddagger}$ 是以 s⁻¹ 为单位的过渡态虚频率的大小，并且我们使用了关系式 $\\hbar \\omega^{\\ddagger}=h \\nu^{\\ddagger}$。\n\n定义无量纲参数\n$$\n\\chi=\\frac{h \\nu^{\\ddagger}}{k_{B}T}.\n$$\n代入给定值，\n$$\nh \\nu^{\\ddagger}=(6.626 \\times 10^{-34}\\,\\text{J}\\cdot \\text{s})(4.50 \\times 10^{13}\\,\\text{s}^{-1})=(6.626 \\times 4.50)\\times 10^{-21}\\,\\text{J}=2.9817 \\times 10^{-20}\\,\\text{J},\n$$\n$$\nk_{B}T=(1.381 \\times 10^{-23}\\,\\text{J}\\cdot \\text{K}^{-1})(77.0\\,\\text{K})=1.06337 \\times 10^{-21}\\,\\text{J},\n$$\n所以\n$$\n\\chi=\\frac{2.9817 \\times 10^{-20}}{1.06337 \\times 10^{-21}}=\\left(\\frac{2.9817}{1.06337}\\right)\\times 10^{1}\\approx 28.0397.\n$$\n则\n$$\n\\kappa_{W}=1+\\frac{1}{24}\\chi^{2}=1+\\frac{1}{24}(28.0397)^{2}\\approx 1+\\frac{1}{24}\\times 786.225\\approx 33.759.\n$$\n四舍五入至三位有效数字，得到\n$$\n\\frac{k_{obs}}{k_{TST}}\\approx 33.8.\n$$", "answer": "$$\\boxed{33.8}$$", "id": "1526808"}, {"introduction": "从解析模型到现代计算化学研究方法，本练习将带你进入一个更高级的实践领域。在复杂体系中，反应坐标和“瓶颈”般的过渡态位置并非总是显而易见的。此练习引入了正则变分过渡态理论（CVT），它通过在所有可能的分割面上最小化反应速率来寻找最优过渡态，并将其与通过分子模拟获得的平均力势（PMF）联系起来。你将通过实践编程，不仅计算出 CVT 速率常数，还将学习如何通过参数自举法来评估计算结果的统计不确定性，这是计算科学中一项至关重要的技能 [@problem_id:2682419]。", "problem": "给定一个离散化的平均力势，由摩尔吉布斯自由能分布 $G(\\xi)$ 表示，该分布是通过沿标量反应坐标 $\\xi$ 进行伞形采样获得的。您的任务是推导、实现并评估一个数值程序，以在温度 $T$ 下使用过渡态理论 (TST) 的热力学公式计算正则变分过渡态理论 (CVT) 的单分子速率常数 $k_{\\mathrm{CVT}}(T)$，并根据已知的 $G(\\xi)$ 不确定度来估计其统计不确定性。\n\n推导的起点：仅使用平衡统计力学和热力学的基础原理，包括（但不限于）正则系综、配分函数、自由能定义以及沿反应坐标的约束配分函数与概率之间的关系。您可以做出以下假设：\n- 反应坐标 $\\xi$ 参数化了一系列候选的分割面，在 TST 近似中使用时，这些分割面通过其构造阻止了再穿越。\n- 摩尔吉布斯自由能 $G(\\xi)$ 是沿 $\\xi$ 的可逆功（平均力势），相差一个加性常数，并且与正则系综中沿 $\\xi$ 的边缘概率密度相关。\n- 动力学再穿越校正和隧穿校正被忽略（即，假设透射系数等于 $1$ 且无量子隧穿）。\n\n数值评估的定义和约束：\n- 设离散网格为 $\\{\\xi_i\\}_{i=1}^{N}$，对应的 $G_i \\equiv G(\\xi_i)$ 和每个 $G_i$ 的标准差为 $\\sigma_i$，并假设它们在统计上是独立且服从高斯分布的。\n- 通过一个给定的索引 $r$ 定义一个反应物盆地区域，其索引为 $i \\in \\{1,\\dots,r\\}$；反应物参考自由能 $G_{\\mathrm{R}}$ 是 $\\{G_i\\}_{i=1}^{r}$ 中的最小值。容许的分割面集合是索引集合 $\\{r+1, r+2, \\dots, N\\}$。\n- 使用一致的单位以确保指数是无量纲的。$G_i$ 值以 $\\mathrm{kJ \\cdot mol^{-1}}$ 为单位提供。摩尔气体常数 $R$ 使用 $\\mathrm{J \\cdot mol^{-1} \\cdot K^{-1}}$ 单位。Boltzmann 常数 $k_{\\mathrm{B}}$ 使用 $\\mathrm{J \\cdot K^{-1}}$ 单位，Planck 常数 $h$ 使用 $\\mathrm{J \\cdot s}$ 单位。\n\n任务：\n1. 从热力学第一性原理出发，推导在 $\\xi$ 处的分割面所关联的 TST 速率表达式，该表达式用 $G(\\xi)$、反应物参考自由能和基本常数表示。然后，解释 CVT 速率常数 $k_{\\mathrm{CVT}}(T)$ 是如何通过在容许的分割面上进行最小化得到的。\n2. 给定离散的 $\\{G_i\\}$，提供一个数值稳定的算法来计算 $k_{\\mathrm{CVT}}(T)$，该算法仅使用所提供的数组和常数，并确保单位一致性。\n3. 统计不确定性：假设每个 $G_i$ 是一个独立的服从正态分布的随机变量，其均值为 $G_i$，标准差为 $\\sigma_i$。使用包含 $N_{\\mathrm{boot}}$ 个重复样本的参数自助法来估计 $k_{\\mathrm{CVT}}(T)$ 的均值和标准差。为保证可复现性，请使用固定的随机种子。\n4. 报告：对每个测试案例，报告两个浮点数：$k_{\\mathrm{CVT}}(T)$ 的自助法均值（单位为 $\\mathrm{s^{-1}}$）和自助法标准差（单位为 $\\mathrm{s^{-1}}$）。将每个浮点数四舍五入到 $6$ 位有效数字。最终程序的输出必须是单行，包含一个逗号分隔的 Python 风格列表，其中按顺序包含了所有测试案例的扁平化结果，即 $[k_1, u_1, k_2, u_2, \\dots]$，其中 $k_j$ 是测试案例 $j$ 的自助法均值， $u_j$ 是自助法标准差。\n\n使用的常数：\n- Boltzmann 常数 $k_{\\mathrm{B}} = 1.380649 \\times 10^{-23}\\ \\mathrm{J \\cdot K^{-1}}$。\n- Planck 常数 $h = 6.62607015 \\times 10^{-34}\\ \\mathrm{J \\cdot s}$。\n- 摩尔气体常数 $R = 8.314462618\\ \\mathrm{J \\cdot mol^{-1} \\cdot K^{-1}}$。\n\n自助法配置：\n- 自助法重复样本数 $N_{\\mathrm{boot}} = 5000$。\n- 随机种子 $= 12345$。\n\n测试套件：\n为以下三个案例提供结果。在所有案例中，描述中的索引是基于 $1$ 的，但在代码中您将使用基于零的数组来实现它们。\n- 案例 1（标准情况；中等势垒）：\n  - 温度 $T = 300\\ \\mathrm{K}$。\n  - 网格 $\\xi_i$：$N = 11$ 个点，$\\xi = \\{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0\\}$。\n  - 自由能 $G(\\xi)$（单位 $\\mathrm{kJ \\cdot mol^{-1}}$）：$\\{0, 8, 20, 35, 47, 50, 47, 35, 20, 8, 0\\}$。\n  - 标准差 $\\sigma$（单位 $\\mathrm{kJ \\cdot mol^{-1}}$）：所有条目均为 $0.5$。\n  - 反应物窗口上界索引 $r = 1$（即仅第一个点）。\n- 案例 2（边界情况；带噪声的平坦剖面）：\n  - 温度 $T = 300\\ \\mathrm{K}$。\n  - 网格 $\\xi_i$：与案例 1 相同。\n  - 自由能 $G(\\xi)$（单位 $\\mathrm{kJ \\cdot mol^{-1}}$）：所有条目均为 $0$。\n  - 标准差 $\\sigma$（单位 $\\mathrm{kJ \\cdot mol^{-1}}$）：所有条目均为 $0.2$。\n  - 反应物窗口上界索引 $r = 1$。\n- 案例 3（高温下的稀疏高势垒）：\n  - 温度 $T = 500\\ \\mathrm{K}$。\n  - 网格 $\\xi_i$：$N = 5$ 个点，$\\xi = \\{0.0, 0.25, 0.5, 0.75, 1.0\\}$。\n  - 自由能 $G(\\xi)$（单位 $\\mathrm{kJ \\cdot mol^{-1}}$）：$\\{0, 20, 40, 20, 0\\}$。\n  - 标准差 $\\sigma$（单位 $\\mathrm{kJ \\cdot mol^{-1}}$）：$\\{0.2, 1.0, 2.0, 1.0, 0.2\\}$。\n  - 反应物窗口上界索引 $r = 1$。\n\n数值要求：\n- 确保所有指数计算都使用一致的单位，即在与 $R T$ 形成无量纲比率之前，将 $\\mathrm{kJ \\cdot mol^{-1}}$ 转换为 $\\mathrm{J \\cdot mol^{-1}}$。\n- 最终速率常数必须以 $\\mathrm{s^{-1}}$ 为单位报告，并四舍五入到 $6$ 位有效数字。\n- 您的程序应产生单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果（例如，$[k_1,u_1,k_2,u_2,k_3,u_3]$），其中每个 $k_j$ 和 $u_j$ 都是四舍五入到 $6$ 位有效数字的浮点数，单位为 $\\mathrm{s^{-1}}$。", "solution": "该问题要求推导并数值实现一个程序，用以从一个离散的平均力势 $G(\\xi)$ 计算正则变分过渡态理论 (CVT) 速率常数 $k_{\\mathrm{CVT}}(T)$，并估计其统计不确定性。解决方案首先验证问题陈述，发现其科学上合理且定义明确。然后，我们给出理论推导，接着是数值算法和统计分析方法。\n\n问题验证如下：\n- **已知条件**：离散化的吉布斯自由能剖面 $\\{G_i(\\xi_i)\\}_{i=1}^{N}$ 及其相关的不确定性 $\\{\\sigma_i\\}_{i=1}^{N}$，温度 $T$，反应物窗口定义 $r$，基本常数 $k_{\\mathrm{B}}$, $h$, $R$，以及自助法参数 $N_{\\mathrm{boot}}$ 和种子。\n- **验证**：该问题在科学上基于已建立的统计力学和化学动力学（过渡态理论）原理。它定义明确，为获得唯一解提供了所有必要的数据和定义。表述客观且无歧义。未发现验证标准中列出的任何缺陷。因此，该问题是有效的，可以构建解决方案。\n\n**1. 从热力学原理推导 CVT 速率常数**\n\n过渡态理论 (TST) 通过假设反应物与分隔反应物和产物的分割面上的“活化络合物”之间存在准平衡，为化学反应的速率常数提供了一个表达式。对于正则系综中的单分子反应，TST 速率常数 $k_{\\mathrm{TST}}$ 由下式给出：\n$$\nk_{\\mathrm{TST}} = \\frac{k_{\\mathrm{B}}T}{h} \\exp\\left(-\\frac{\\Delta G^{\\ddagger}}{RT}\\right)\n$$\n这里，$k_{\\mathrm{B}}$ 是 Boltzmann 常数 ($1.380649 \\times 10^{-23}\\ \\mathrm{J \\cdot K^{-1}}$)，$h$ 是 Planck 常数 ($6.62607015 \\times 10^{-34}\\ \\mathrm{J \\cdot s}$)，$T$ 是绝对温度，$R$ 是摩尔气体常数 ($8.314462618\\ \\mathrm{J \\cdot mol^{-1} \\cdot K^{-1}}$)，而 $\\Delta G^{\\ddagger}$ 是摩尔吉布斯活化自由能。\n\n平均力势 $G(\\xi)$ 代表系统作为反应坐标 $\\xi$ 函数的摩尔吉布斯自由能。位于特定坐标 $\\xi$ 处的分割面的吉布斯活化自由能 $\\Delta G^{\\ddagger}(\\xi)$ 是该分割面处的自由能与反应物参考自由能 $G_{\\mathrm{R}}$ 之间的差值：\n$$\n\\Delta G^{\\ddagger}(\\xi) = G(\\xi) - G_{\\mathrm{R}}\n$$\n因此，TST 速率常数是分割面选择 $\\xi$ 的函数：\n$$\nk(\\xi, T) = \\frac{k_{\\mathrm{B}}T}{h} \\exp\\left(-\\frac{G(\\xi) - G_{\\mathrm{R}}}{RT}\\right)\n$$\nTST 的一个关键假设是，任何从反应物侧穿越分割面到产物侧的轨迹都将继续生成产物而不再穿越回来。这一假设通常不严格成立，导致 TST 仅提供了真实速率常数的一个上限。\n\n正则变分过渡态理论 (CVT) 通过寻找使计算出的速率常数最小化的最佳分割面对 TST 进行了改进。通过最小化速率，可以找到最能满足“无再穿越”假设的分割面，从而得到更准确的速率估计。因此，CVT 速率常数 $k_{\\mathrm{CVT}}(T)$ 定义为：\n$$\nk_{\\mathrm{CVT}}(T) = \\min_{\\xi} k(\\xi, T)\n$$\n其中最小化是在所有容许的分割面上进行的。\n\n由于在给定温度 $T$ 下，前置因子 $\\frac{k_{\\mathrm{B}}T}{h}$ 和分母 $RT$ 是正常数，最小化 $k(\\xi, T)$ 等价于最大化指数的参数 $-(G(\\xi) - G_{\\mathrm{R}})$，这又等价于最大化自由能垒 $G(\\xi) - G_{\\mathrm{R}}$。这导出了 CVT 速率的核心表达式：\n$$\nk_{\\mathrm{CVT}}(T) = \\frac{k_{\\mathrm{B}}T}{h} \\exp\\left(-\\frac{\\left(\\max_{\\xi \\in \\text{DS}} G(\\xi)\\right) - G_{\\mathrm{R}}}{RT}\\right)\n$$\n其中 $\\text{DS}$ 表示容许的分割面集合。我们定义 CVT 活化自由能为 $\\Delta G_{\\mathrm{CVT}}^{\\ddagger} = \\left(\\max_{\\xi \\in \\text{DS}} G(\\xi)\\right) - G_{\\mathrm{R}}$。\n\n**2. 离散数据的数值算法**\n\n该问题在网格 $\\{\\xi_i\\}_{i=1}^{N}$ 上提供了一个离散的自由能剖面 $\\{G_i\\}_{i=1}^{N}$。给定反应物盆地由索引 $i \\in \\{1, \\dots, r\\}$ 定义，而容许的分割面集合对应于索引 $i \\in \\{r+1, \\dots, N\\}$。计算 $k_{\\mathrm{CVT}}(T)$ 的算法如下，实现时使用 Python 中标准的基于 $0$ 的索引：\n\n- **步骤 A：确定反应物自由能 ($G_{\\mathrm{R}}$)**\n  反应物参考自由能 $G_{\\mathrm{R}}$ 是在定义的反应物区域内的最小自由能。\n  $$\n  G_{\\mathrm{R}} = \\min_{i \\in \\{0, \\dots, r-1\\}} G_i\n  $$\n\n- **步骤 B：确定过渡态自由能 ($G_{\\mathrm{CVT}}^{\\ddagger}$)**\n  变分过渡态的自由能是所有容许分割面上的最大自由能。\n  $$\n  G_{\\mathrm{CVT}}^{\\ddagger} = \\max_{i \\in \\{r, \\dots, N-1\\}} G_i\n  $$\n\n- **步骤 C：计算活化自由能 ($\\Delta G_{\\mathrm{CVT}}^{\\ddagger}$)**\n  活化能垒是过渡态自由能与反应物自由能之差。这里需要进行单位转换，因为输入的 $G_i$ 值单位是 $\\mathrm{kJ \\cdot mol^{-1}}$，而常数 $R$ 的单位是 $\\mathrm{J \\cdot mol^{-1} \\cdot K^{-1}}$。\n  $$\n  \\Delta G_{\\mathrm{CVT}}^{\\ddagger}\\ [\\mathrm{J \\cdot mol^{-1}}] = (G_{\\mathrm{CVT}}^{\\ddagger} - G_{\\mathrm{R}})\\ [\\mathrm{kJ \\cdot mol^{-1}}] \\times 1000\n  $$\n\n- **步骤 D：计算 CVT 速率常数 ($k_{\\mathrm{CVT}}(T)$)**\n  将计算出的活化自由能代入 CVT 速率方程。得到的速率常数单位将是 $\\mathrm{s^{-1}}$。\n  $$\n  k_{\\mathrm{CVT}}(T) = \\frac{k_{\\mathrm{B}}T}{h} \\exp\\left(-\\frac{\\Delta G_{\\mathrm{CVT}}^{\\ddagger}}{RT}\\right)\n  $$\n\n**3. 通过参数自助法估计统计不确定性**\n\n计算出的速率常数 $k_{\\mathrm{CVT}}(T)$ 的不确定性源于输入自由能值 $\\{G_i\\}$ 的统计不确定性。我们已知每个 $G_i$ 是一个独立的随机变量，服从均值为给定值、标准差为 $\\sigma_i$ 的高斯分布，即 $G_i \\sim \\mathcal{N}(G_{i,\\text{mean}}, \\sigma_i^2)$。采用参数自助法将这些不确定性传播到最终的速率常数上。\n\n该过程使用指定数量的重复样本 $N_{\\mathrm{boot}} = 5000$ 和一个固定的随机种子以保证可复现性，具体如下：\n\n1.  用指定的种子 ($12345$) 初始化一个随机数生成器。\n2.  创建一个空列表 `k_samples`，用于存储速率常数的自助法估计值。\n3.  对于从 $1$ 到 $N_{\\mathrm{boot}}$ 的每个重复样本 $j$：\n    a. 生成一个新的、合成的自由能剖面 $\\{G_i^{(j)}\\}_{i=0}^{N-1}$。对每个索引 $i$，从正态分布 $\\mathcal{N}(G_i, \\sigma_i^2)$ 中抽取一个值 $G_i^{(j)}$。\n    b. 使用这个合成剖面 $\\{G_i^{(j)}\\}$，通过应用上一节描述的四步数值算法，计算相应的速率常数 $k_{\\mathrm{CVT}}^{(j)}$。\n    c. 将计算出的速率 $k_{\\mathrm{CVT}}^{(j)}$ 添加到 `k_samples` 列表中。\n4.  完成所有自助法重复样本后，计算 `k_samples` 分布的均值 ($\\bar{k}_{\\mathrm{CVT}}$) 和样本标准差 ($u_{\\mathrm{CVT}}$)。\n    $$\n    \\bar{k}_{\\mathrm{CVT}} = \\frac{1}{N_{\\mathrm{boot}}} \\sum_{j=1}^{N_{\\mathrm{boot}}} k_{\\mathrm{CVT}}^{(j)}\n    $$\n    $$\n    u_{\\mathrm{CVT}} = \\sqrt{\\frac{1}{N_{\\mathrm{boot}}-1} \\sum_{j=1}^{N_{\\mathrm{boot}}} (k_{\\mathrm{CVT}}^{(j)} - \\bar{k}_{\\mathrm{CVT}})^2}\n    $$\n5.  这两个值 $\\bar{k}_{\\mathrm{CVT}}$ 和 $u_{\\mathrm{CVT}}$ 分别代表速率常数的最佳估计值及其统计不确定性。然后将它们四舍五入到 $6$ 位有效数字进行报告。\n\n该过程正确地传播了输入自由能的全部不确定性分布，考虑了 $G_i$ 值与 $k_{\\mathrm{CVT}}$ 之间的非线性关系，包括确定反应物最小值和过渡态最大值位置的不确定性。", "answer": "```python\nimport numpy as np\nimport math\n\ndef round_to_significant_figures(value, sf):\n    \"\"\"\n    Rounds a floating-point number to a specified number of significant figures.\n    \"\"\"\n    if value == 0:\n        return 0.0\n    # Calculate the position to round to.\n    power = sf - 1 - int(math.floor(math.log10(abs(value))))\n    return round(value, power)\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases, calculating the CVT rate constant\n    and its uncertainty using a parametric bootstrap method.\n    \"\"\"\n\n    # --- Constants ---\n    # As specified in the problem statement\n    K_B = 1.380649e-23  # Boltzmann constant in J/K\n    H = 6.62607015e-34   # Planck constant in J·s\n    R = 8.314462618     # Molar gas constant in J/(mol·K)\n\n    # --- Bootstrap Configuration ---\n    N_BOOT = 5000\n    RANDOM_SEED = 12345\n\n    # --- Test Suite ---\n    test_cases = [\n        {\n            \"T\": 300.0,  # K\n            \"G\": np.array([0., 8., 20., 35., 47., 50., 47., 35., 20., 8., 0.]),  # kJ/mol\n            \"sigma\": np.array([0.5] * 11),  # kJ/mol\n            \"r\": 1,  # 1-based index\n        },\n        {\n            \"T\": 300.0,\n            \"G\": np.array([0.0] * 11),\n            \"sigma\": np.array([0.2] * 11),\n            \"r\": 1,\n        },\n        {\n            \"T\": 500.0,\n            \"G\": np.array([0., 20., 40., 20., 0.]),\n            \"sigma\": np.array([0.2, 1.0, 2.0, 1.0, 0.2]),\n            \"r\": 1,\n        },\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        T = case[\"T\"]\n        G_mean = case[\"G\"]\n        G_sigma = case[\"sigma\"]\n        # Convert 1-based reactant window index to 0-based slice upper bound\n        r_idx = case[\"r\"]\n\n        rng = np.random.default_rng(RANDOM_SEED)\n        \n        k_boot_samples = []\n\n        for _ in range(N_BOOT):\n            # 1. Generate a bootstrap replicate of the free energy profile\n            # G_sample is drawn from N(G_mean, G_sigma^2)\n            noise = rng.normal(loc=0.0, scale=1.0, size=G_mean.shape)\n            G_sample = G_mean + G_sigma * noise\n\n            # 2. Calculate k_CVT for the sampled profile\n            # Step A: Determine reactant free energy (using 0-based index)\n            G_R = np.min(G_sample[0:r_idx])\n            \n            # Step B: Determine transition state free energy\n            G_TS = np.max(G_sample[r_idx:])\n\n            # Step C: Calculate activation free energy in J/mol\n            delta_G_cvt_J_mol = (G_TS - G_R) * 1000.0\n\n            # Step D: Calculate the CVT rate constant\n            prefactor = (K_B * T) / H\n            exponent = -delta_G_cvt_J_mol / (R * T)\n            k_cvt = prefactor * np.exp(exponent)\n            \n            k_boot_samples.append(k_cvt)\n\n        # Calculate mean and standard deviation of the bootstrap samples\n        k_boot_samples = np.array(k_boot_samples)\n        k_mean = np.mean(k_boot_samples)\n        # Use ddof=1 for sample standard deviation\n        k_std_dev = np.std(k_boot_samples, ddof=1)\n        \n        # Round to 6 significant figures for reporting\n        k_mean_rounded = round_to_significant_figures(k_mean, 6)\n        k_std_dev_rounded = round_to_significant_figures(k_std_dev, 6)\n        \n        all_results.extend([k_mean_rounded, k_std_dev_rounded])\n\n    # Format the final output as a comma-separated list string\n    # Using a format specifier to avoid scientific notation for small numbers where possible\n    # and ensure standard float representation.\n    results_str = ','.join(f'{val:.15g}' for val in all_results)\n    print(f\"[{results_str}]\")\n\nsolve()\n```", "id": "2682419"}]}