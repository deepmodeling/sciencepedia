{"hands_on_practices": [{"introduction": "我们从一项基本技能开始：确定给定分子和基组的基函数总数。这个练习将帮助您剖析像 6-31G(d) 这样的 Pople 型基组的命名法，并理解如何计算笛卡尔 (Cartesian) 基函数的总数。[@problem_id:2916487] 掌握这项技能是进行可靠的量子化学计算并理解其成本与规模关系的第一步。", "problem": "考虑在电子结构方法的原子轨道线性组合框架中使用收缩高斯型轨道 (GTOs)。Pople风格的 $\\text{6-31G(d)}$ 基组对不同原子有如下规定：\n- 对于像碳这样的第二周期原子，核心轨道（$1s$）由一个从 $6$ 个原始高斯函数收缩而成的函数描述。价层轨道（$2s, 2p$）采用“分裂价”方案，由两套函数描述：一套内层价函数（从 $3$ 个原始函数收缩而成）和一套外层价函数（由 $1$ 个未收缩的原始函数构成）。每套价函数都包含 $s$ 和 $p$ 型函数。\n- 对于氢原子，价层轨道（$1s$）同样采用分裂价方案，由一个从 $3$ 个原始函数收缩而成的内层函数和一个由 $1$ 个原始函数构成的外层函数描述。\n- $(d)$ 符号表示在所有非氢原子（此处为碳）上添加一套 $d$ 型极化函数。\n\n在本题中，假设所有 $p$ 型和 $d$ 型函数均为笛卡尔型。一个笛卡尔 $p$ 型壳层包含 $3$ 个函数（$p_x, p_y, p_z$），一个笛卡尔 $d$ 型壳层包含 $6$ 个函数。计算使用 $\\text{6-31G(d)}$ 基组描述甲烷分子 $\\text{CH}_{4}$ 时，所使用的笛卡尔基函数总数。", "solution": "题目要求计算使用 $\\text{6-31G(d)}$ 基组描述甲烷分子 $\\text{CH}_{4}$ 时的笛卡尔基函数总数。我们需要分别计算一个碳原子和四个氢原子贡献的基函数数量，然后将它们相加。\n\n**1. 碳 (C) 原子:**\n根据 $\\text{6-31G(d)}$ 的定义：\n- **核心轨道:** 1个 $s$ 型函数 ($1s$)。\n- **内层价轨道:** 1个 $s$ 型函数 ($2s_{in}$) 和 1套 $p$ 型函数 ($2p_{in}$)。由于是笛卡尔型，$p$ 型函数包含 $p_x, p_y, p_z$ 共 $3$ 个函数。总计 $1+3=4$ 个函数。\n- **外层价轨道:** 1个 $s$ 型函数 ($2s_{out}$) 和 1套 $p$ 型函数 ($2p_{out}$)。同样，这套 $p$ 型函数包含 $3$ 个函数。总计 $1+3=4$ 个函数。\n- **极化函数:** $(d)$ 表示添加 1 套笛卡尔 $d$ 型函数，包含 $6$ 个函数。\n\n因此，碳原子上的基函数总数为：\n$N_C = 1 (\\text{core } s) + 4 (\\text{inner valence}) + 4 (\\text{outer valence}) + 6 (\\text{polarization}) = 15$ 个基函数。\n\n**2. 氢 (H) 原子:**\n根据 $\\text{6-31G}$ 的定义：\n- **内层价轨道:** 1个 $s$ 型函数。\n- **外层价轨道:** 1个 $s$ 型函数。\n- 该基组不为氢原子添加极化函数。\n\n因此，每个氢原子上的基函数总数为：\n$N_H = 1 (\\text{inner}) + 1 (\\text{outer}) = 2$ 个基函数。\n\n**3. 甲烷 ($\\text{CH}_4$) 分子:**\n甲烷分子由 1 个碳原子和 4 个氢原子组成。基函数总数是所有原子的贡献之和：\n$N_{total} = N_C + 4 \\times N_H$\n$N_{total} = 15 + 4 \\times 2 = 15 + 8 = 23$\n\n因此，用 $\\text{6-31G(d)}$ 基组描述甲烷分子需要 $23$ 个笛卡尔基函数。", "answer": "$$\\boxed{23}$$", "id": "2916487"}, {"introduction": "在掌握了 Pople 型基组的基础上，我们现在转向 Karlsruhe def2 家族，这是另一类广泛使用的基组。这个练习将比较两种基组的构造理念，并特别关注球谐 (spherical harmonic) 函数的使用，它与笛卡尔函数在处理高角动量轨道（如 $d$ 或 $f$ 函数）时有所不同。[@problem_id:2916478] 理解这种差异对于在现代计算化学软件中选择和指定基组至关重要。", "problem": "一个一氧化碳分子由一个碳原子和一个氧原子组成。考虑一个卡尔斯鲁厄 def2 族的分段收缩高斯基组，处于三倍泽塔价层加极化水平 (def2-TZVP)，并使用其纯球谐函数形式。一个角动量量子数为 $l$ 的收缩高斯壳层包含磁量子数为 $m=-l,\\dots,+l$ 的球谐函数，从而每个收缩壳层产生 $2l+1$ 个基函数的多重度。相关的角动量为：$s$ 对应 $l=0$，$p$ 对应 $l=1$，$d$ 对应 $l=2$，$f$ 对应 $l=3$。\n\n假设 def2-TZVP 基组具有以下收缩壳层组成（每种角动量的收缩壳层数量）：\n- 碳：$5$ 个 $s$ 型壳层，$4$ 个 $p$ 型壳层，$2$ 个 $d$ 型壳层，$1$ 个 $f$ 型壳层。\n- 氧：$6$ 个 $s$ 型壳层，$4$ 个 $p$ 型壳层，$2$ 个 $d$ 型壳层，$1$ 个 $f$ 型壳层。\n\n仅使用上述定义，计算在使用球谐函数时，位于碳原子上的基函数数量、位于氧原子上的基函数数量以及分子的总基函数数量。请按碳、氧、总数的顺序，以三个整数的形式给出最终答案。无需四舍五入。", "solution": "一个原子上的总基函数数是其每个收缩壳层贡献的基函数之和。对于一个给定角动量量子数 $l$ 的壳层，基函数的数量由该 $l$ 对应的球谐函数数量决定。问题正确地指出该多重度为 $2l+1$。\n\n首先，我们确定每种角动量类型每个壳层的基函数数量：\n- 对于 $s$ 型壳层，$l=0$。函数数量为 $2 \\times 0 + 1 = 1$。\n- 对于 $p$ 型壳层，$l=1$。函数数量为 $2 \\times 1 + 1 = 3$。\n- 对于 $d$ 型壳层，$l=2$。函数数量为 $2 \\times 2 + 1 = 5$。\n- 对于 $f$ 型壳层，$l=3$。函数数量为 $2 \\times 3 + 1 = 7$。\n\n接下来，我们计算碳原子的总基函数数，记为 $N_C$。我们将其所有指定壳层的贡献相加：\n$$N_C = (s\\text{壳层数} \\times 1) + (p\\text{壳层数} \\times 3) + (d\\text{壳层数} \\times 5) + (f\\text{壳层数} \\times 7)$$\n使用为碳提供的数据：\n$$N_C = (5 \\times 1) + (4 \\times 3) + (2 \\times 5) + (1 \\times 7)$$\n$$N_C = 5 + 12 + 10 + 7 = 34$$\n因此，有 $34$ 个基函数位于碳原子上。\n\n同样，我们计算氧原子的总基函数数，记为 $N_O$。\n$$N_O = (s\\text{壳层数} \\times 1) + (p\\text{壳层数} \\times 3) + (d\\text{壳层数} \\times 5) + (f\\text{壳层数} \\times 7)$$\n使用为氧提供的数据：\n$$N_O = (6 \\times 1) + (4 \\times 3) + (2 \\times 5) + (1 \\times 7)$$\n$$N_O = 6 + 12 + 10 + 7 = 35$$\n因此，有 $35$ 个基函数位于氧原子上。\n\n一氧化碳分子的总基函数数 $N_{total}$ 是每个组成原子上的基函数之和。\n$$N_{total} = N_C + N_O$$\n$$N_{total} = 34 + 35 = 69$$\nCO 分子的总基函数数为 $69$。\n\n所需结果是对应于碳原子上、氧原子上以及分子总基函数数量的三个整数的集合。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n34 & 35 & 69\n\\end{pmatrix}\n}\n$$", "id": "2916478"}, {"introduction": "超越单纯的函数计数，理解基组设计的*物理动机*至关重要。本练习探讨了弥散函数 (diffuse functions) 的关键作用，它们对于准确描述具有松散束缚电子的体系（例如阴离子）是必不可少的。[@problem_id:2916573] 通过一个基于微扰理论的简化模型来计算氯原子的电子亲和能 ($EA$)，您将直观地感受到添加弥散函数是如何通过变分原理稳定体系能量，从而获得更符合物理现实的计算结果。", "problem": "您需要形式化、推导并实现一个有原则的算法，用于比较在量子化学中两种广泛使用的高斯轨道基组族（Pople型和Karlsruhe def2）中，有和没有弥散增广情况下氯原子（形成氯阴离子）的电子亲和能。您的目标是设计一种仅利用关于基组增广及其对俘获电子能量的变分效应的第一性原理推导的计算方法，而不引入任何经验校正。\n\n从以下经过充分检验的基础开始。\n\n- 变分原理与Rayleigh–Ritz方法：对于一个厄米算符，扩展试探子空间不会增加其最低本征值。如果一个哈密顿（或福克）算符在一个划分为参考子空间和外部子空间的块划分基中表示，那么参考子空间内的能量会因与外部空间的虚耦合而降低。\n- 正交投影（Löwdin）划分与二阶能量降低：考虑一个未微扰能量为 $\\varepsilon_0$ 的单一参考轨道，它通过非对角耦合 $\\{v_k\\}$ 与一组轨道能量为 $\\{\\varepsilon_k^{\\mathrm{ext}}\\}$ 的外部正交函数耦合。在假设 $|\\varepsilon_k^{\\mathrm{ext}}-\\varepsilon_0| \\gg |v_k|$ 并忽略高阶项的情况下，参考态的有效能量会降低一个量，该量可以通过算符在组合空间中的块对角化推导得出。\n- Hartree–Fock Koopmans 定理：在冻结轨道近似中，电子亲和能（EA）近似为中性物质的最低未占分子轨道（LUMO）能量相对于真空能级的负值，即 $\\mathrm{EA} \\approx -\\varepsilon_{\\mathrm{LUMO}}$。\n\n您的任务是：\n\n1) 严格从上述原理出发，推导当基组被位于外部空间的弥散函数增广时，中性氯原子LUMO的能量移动 $\\Delta \\varepsilon$ 的最低阶表达式。用 $\\varepsilon_0$、耦合 $\\{v_k\\}$ 以及外部空间轨道能量 $\\{\\varepsilon_k^{\\mathrm{ext}}\\}$ 来表示校正后的LUMO能量 $\\varepsilon$。然后使用 $\\mathrm{EA} \\approx -\\varepsilon$ 得到电子亲和能。\n\n2) 将推导出的表达式实现为一个程序，为以下四个测试用例计算电子亲和能，这些用例代表了Pople型和Karlsruhe def2基组在有和没有弥散增广的情况。下面提供的所有能量单位均为哈特里（Hartree）。使用物理换算关系 $1\\,\\mathrm{Hartree} = 27.211386245988\\,\\mathrm{eV}$，并以电子伏特（eV）为单位报告电子亲和能，保留三位小数。\n\n- 用例A (Pople 6-31G(d)，无弥散增广)：未微扰的中性LUMO能量 $\\varepsilon_0 = 0.065$。不存在外部空间态，因此没有耦合。\n- 用例B (Pople 6-31+G(d)，有弥散增广)：未微扰的中性LUMO能量 $\\varepsilon_0 = 0.065$。外部空间轨道能量 $\\{\\varepsilon_k^{\\mathrm{ext}}\\} = \\{0.335, 0.265, 0.245\\}$。耦合 $\\{v_k\\} = \\{0.17, 0.12, 0.07\\}$。\n- 用例C (Karlsruhe def2-SVP，无弥散增广)：未微扰的中性LUMO能量 $\\varepsilon_0 = 0.050$。不存在外部空间态。\n- 用例D (Karlsruhe def2-SVPD，有弥散增广)：未微扰的中性LUMO能量 $\\varepsilon_0 = 0.050$。外部空间轨道能量 $\\{\\varepsilon_k^{\\mathrm{ext}}\\} = \\{0.32, 0.27, 0.25, 0.23\\}$。耦合 $\\{v_k\\} = \\{0.15, 0.11, 0.08, 0.05\\}$。\n\n您必须遵守的假设和约束：\n\n- 将中性LUMO视为参考态，将添加的弥散函数视为构成外部空间。假设所有分母 $\\varepsilon_k^{\\mathrm{ext}}-\\varepsilon_0$ 均严格为正，并且与 $|v_k|$ 相比足够大，以证明在最低非平凡阶进行截断是合理的。\n- 忽略超出上述最低阶变分/划分校正和Hartree–Fock冻结轨道电子俘获解释之外的弛豫和相关效应。\n- 以 $\\mathrm{eV}$ 为单位计算 $\\mathrm{EA}$，并保留三位小数。\n\n您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔的结果列表（例如，\"[x1,x2,x3,x4]\"）。该列表必须按[用例A, 用例B, 用例C, 用例D]的顺序排列。每个用例的结果必须是一个以 $\\mathrm{eV}$ 为单位的浮点数。\n\n您的程序应逐字使用的测试套件摘要：\n\n- 用例A：$\\varepsilon_0 = 0.065$，无 $\\{\\varepsilon_k^{\\mathrm{ext}}\\}$，无 $\\{v_k\\}$。\n- 用例B：$\\varepsilon_0 = 0.065$，$\\{\\varepsilon_k^{\\mathrm{ext}}\\} = \\{0.335, 0.265, 0.245\\}$，$\\{v_k\\} = \\{0.17, 0.12, 0.07\\}$。\n- 用例C：$\\varepsilon_0 = 0.050$，无 $\\{\\varepsilon_k^{\\mathrm{ext}}\\}$，无 $\\{v_k\\}$。\n- 用例D：$\\varepsilon_0 = 0.050$，$\\{\\varepsilon_k^{\\mathrm{ext}}\\} = \\{0.32, 0.27, 0.25, 0.23\\}$，$\\{v_k\\} = \\{0.15, 0.11, 0.08, 0.05\\}$。\n\n角度单位不适用。不使用百分比。所有物理量均使用上述单位。最终输出必须是严格遵循指定格式的单行。", "solution": "任务是确定氯原子的电子亲和能（$\\mathrm{EA}$），在冻结轨道Hartree-Fock近似（Koopmans定理）下，该值由最低未占分子轨道（LUMO）能量 $\\varepsilon_{\\mathrm{LUMO}}$ 的负值给出。\n$$\n\\mathrm{EA} \\approx -\\varepsilon_{\\mathrm{LUMO}}\n$$\n我们被要求模拟向基组中添加弥散函数的效果。这对应于扩展单电子希尔伯特空间。原始的、未增广的基组定义了一个参考子空间，而添加的弥散函数构成了一个外部子空间。来自未增广计算的LUMO是我们的参考态，记作 $|\\phi_0\\rangle$，其未微扰能量为 $\\varepsilon_0$。外部空间的基函数（假设与参考空间正交）产生一组外部轨道 $\\{|\\phi_k^{\\mathrm{ext}}\\rangle\\}$，其能量为 $\\{\\varepsilon_k^{\\mathrm{ext}}\\}$。\n\n在这个组合基中，福克算符 $\\hat{F}$ 可以用一个分块矩阵表示。问题在于找到与微扰后的参考态相对应的新的最低本征值 $\\varepsilon$。本征值问题由下式给出：\n$$\n\\begin{pmatrix} \\varepsilon_0 & \\mathbf{v}^T \\\\ \\mathbf{v} & \\mathbf{E}^{\\mathrm{ext}} \\end{pmatrix} \\begin{pmatrix} c_0 \\\\ \\mathbf{c}_{\\mathrm{ext}} \\end{pmatrix} = \\varepsilon \\begin{pmatrix} c_0 \\\\ \\mathbf{c}_{\\mathrm{ext}} \\end{pmatrix}\n$$\n此处，$\\varepsilon_0$ 是未微扰的LUMO能量，$\\mathbf{v}$ 是耦合矩阵元 $v_k = \\langle \\phi_0 | \\hat{F} | \\phi_k^{\\mathrm{ext}} \\rangle$ 的向量，$\\mathbf{E}^{\\mathrm{ext}}$ 是外部轨道能量 $\\{\\varepsilon_k^{\\mathrm{ext}}\\}$ 的对角矩阵。线性方程组为：\n$$\n\\varepsilon_0 c_0 + \\sum_k v_k c_k = \\varepsilon c_0 \\quad (1)\n$$\n$$\nv_k c_0 + \\varepsilon_k^{\\mathrm{ext}} c_k = \\varepsilon c_k \\quad (2)\n$$\n从方程 $(2)$，我们求解外部态的系数 $c_k$：\n$$\n(\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon) c_k = -v_k c_0 \\implies c_k = -\\frac{v_k}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon} c_0\n$$\n将 $c_k$ 的这个表达式代回方程 $(1)$：\n$$\n\\varepsilon_0 c_0 + \\sum_k v_k \\left( -\\frac{v_k}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon} \\right) c_0 = \\varepsilon c_0\n$$\n两边同除以 $c_0$（对于一个主要为原始LUMO的态，该系数必须非零），我们得到了一个关于校正能量 $\\varepsilon$ 的精确但隐式的方程：\n$$\n\\varepsilon = \\varepsilon_0 - \\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon}\n$$\n问题规定能量差 $|\\varepsilon_k^{\\mathrm{ext}}-\\varepsilon_0|$ 远大于耦合 $|v_k|$，这为微扰方法提供了依据。我们寻求最低阶非平凡校正。这可以通过在分母中用其未微扰值 $\\varepsilon_0$ 来近似未知能量 $\\varepsilon$ 来实现。这是二阶Rayleigh-Schrödinger微扰理论的标准步骤。\n$$\n\\varepsilon \\approx \\varepsilon_0 - \\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon_0}\n$$\n因此，能量移动 $\\Delta \\varepsilon = \\varepsilon - \\varepsilon_0$ 为：\n$$\n\\Delta \\varepsilon \\approx - \\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon_0}\n$$\n新的、校正后的LUMO能量是 $\\varepsilon = \\varepsilon_0 + \\Delta \\varepsilon$。然后，电子亲和能计算为 $\\mathrm{EA} \\approx -\\varepsilon$。\n$$\n\\mathrm{EA} \\approx - \\left( \\varepsilon_0 - \\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon_0} \\right) = -\\varepsilon_0 + \\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon_0}\n$$\n所有能量单位均为哈特里（Hartree），最终结果必须以电子伏特（$\\mathrm{eV}$）为单位，使用换算因子 $1\\,\\mathrm{Hartree} = 27.211386245988\\,\\mathrm{eV}$。\n\n我们现在将此公式应用于四个指定的用例。\n\n**用例 A：Pople 6-31G(d)**\n基组未增广。外部空间为空，所以求和项为零。\n$\\varepsilon_0 = 0.065\\,\\mathrm{Hartree}$。\n$\\varepsilon = \\varepsilon_0 = 0.065\\,\\mathrm{Hartree}$。\n$\\mathrm{EA} = -0.065\\,\\mathrm{Hartree} \\times 27.211386245988\\,\\mathrm{eV/Hartree} \\approx -1.76874\\,\\mathrm{eV}$。\n保留三位小数，$\\mathrm{EA} = -1.769\\,\\mathrm{eV}$。\n\n**用例 B：Pople 6-31+G(d)**\n基组已增广。我们计算校正项。\n$\\varepsilon_0 = 0.065\\,\\mathrm{Hartree}$。\n$\\{\\varepsilon_k^{\\mathrm{ext}}\\} = \\{0.335, 0.265, 0.245\\}\\,\\mathrm{Hartree}$。\n$\\{v_k\\} = \\{0.17, 0.12, 0.07\\}\\,\\mathrm{Hartree}$。\n校正项为：\n$\\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon_0} = \\frac{0.17^2}{0.335 - 0.065} + \\frac{0.12^2}{0.265 - 0.065} + \\frac{0.07^2}{0.245 - 0.065}$\n$= \\frac{0.0289}{0.27} + \\frac{0.0144}{0.20} + \\frac{0.0049}{0.18} \\approx 0.107037 + 0.072 + 0.027222 = 0.206259\\,\\mathrm{Hartree}$。\n校正后的LUMO能量为 $\\varepsilon \\approx 0.065 - 0.206259 = -0.141259\\,\\mathrm{Hartree}$。\n$\\mathrm{EA} \\approx 0.141259\\,\\mathrm{Hartree} \\times 27.211386245988\\,\\mathrm{eV/Hartree} \\approx 3.84409\\,\\mathrm{eV}$。\n保留三位小数，$\\mathrm{EA} = 3.844\\,\\mathrm{eV}$。\n\n**用例 C：Karlsruhe def2-SVP**\n基组未增广。求和项为零。\n$\\varepsilon_0 = 0.050\\,\\mathrm{Hartree}$。\n$\\varepsilon = \\varepsilon_0 = 0.050\\,\\mathrm{Hartree}$。\n$\\mathrm{EA} = -0.050\\,\\mathrm{Hartree} \\times 27.211386245988\\,\\mathrm{eV/Hartree} \\approx -1.36057\\,\\mathrm{eV}$。\n保留三位小数，$\\mathrm{EA} = -1.361\\,\\mathrm{eV}$。\n\n**用例 D：Karlsruhe def2-SVPD**\n基组用弥散函数增广。\n$\\varepsilon_0 = 0.050\\,\\mathrm{Hartree}$。\n$\\{\\varepsilon_k^{\\mathrm{ext}}\\} = \\{0.32, 0.27, 0.25, 0.23\\}\\,\\mathrm{Hartree}$。\n$\\{v_k\\} = \\{0.15, 0.11, 0.08, 0.05\\}\\,\\mathrm{Hartree}$。\n校正项为：\n$\\sum_k \\frac{v_k^2}{\\varepsilon_k^{\\mathrm{ext}} - \\varepsilon_0} = \\frac{0.15^2}{0.32 - 0.05} + \\frac{0.11^2}{0.27 - 0.05} + \\frac{0.08^2}{0.25 - 0.05} + \\frac{0.05^2}{0.23 - 0.05}$\n$= \\frac{0.0225}{0.27} + \\frac{0.0121}{0.22} + \\frac{0.0064}{0.20} + \\frac{0.0025}{0.18} \\approx 0.083333 + 0.055 + 0.032 + 0.013889 = 0.184222\\,\\mathrm{Hartree}$。\n校正后的LUMO能量为 $\\varepsilon \\approx 0.050 - 0.184222 = -0.134222\\,\\mathrm{Hartree}$。\n$\\mathrm{EA} \\approx 0.134222\\,\\mathrm{Hartree} \\times 27.211386245988\\,\\mathrm{eV/Hartree} \\approx 3.65287\\,\\mathrm{eV}$。\n保留三位小数，$\\mathrm{EA} = 3.653\\,\\mathrm{eV}$。\n\n结果表明，正如预期的那样，用弥散函数增广基组会显著降低LUMO能量，从而得到一个正值更大（且物理上更真实）的电子亲和能。这是因为弥散函数为轨道提供了必要的空间灵活性，以在更松散束缚的阴离子中容纳额外的电子。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the electron affinity for chlorine using a second-order perturbation\n    model for the effect of diffuse basis functions.\n    \"\"\"\n\n    # Physical constant for energy conversion from Hartree to electron-volts.\n    HARTREE_TO_EV = 27.211386245988\n\n    # Define the test cases from the problem statement.\n    # Each case is a dictionary with unperturbed LUMO energy (e0),\n    # external-space orbital energies (e_ext), and couplings (v_k).\n    test_cases = [\n        {\n            \"name\": \"Case A: Pople 6-31G(d)\",\n            \"e0\": 0.065, # in Hartree\n            \"e_ext\": np.array([]),\n            \"v_k\": np.array([])\n        },\n        {\n            \"name\": \"Case B: Pople 6-31+G(d)\",\n            \"e0\": 0.065, # in Hartree\n            \"e_ext\": np.array([0.335, 0.265, 0.245]), # in Hartree\n            \"v_k\": np.array([0.17, 0.12, 0.07]) # in Hartree\n        },\n        {\n            \"name\": \"Case C: Karlsruhe def2-SVP\",\n            \"e0\": 0.050, # in Hartree\n            \"e_ext\": np.array([]),\n            \"v_k\": np.array([])\n        },\n        {\n            \"name\": \"Case D: Karlsruhe def2-SVPD\",\n            \"e0\": 0.050, # in Hartree\n            \"e_ext\": np.array([0.32, 0.27, 0.25, 0.23]), # in Hartree\n            \"v_k\": np.array([0.15, 0.11, 0.08, 0.05]) # in Hartree\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        e0 = case[\"e0\"]\n        e_ext = case[\"e_ext\"]\n        v_k = case[\"v_k\"]\n\n        # Calculate the second-order energy correction, which is zero for non-augmented bases.\n        energy_shift = 0.0\n        if e_ext.size > 0:\n            # The derived formula for the energy correction is sum(v_k^2 / (e_k_ext - e0))\n            denominators = e_ext - e0\n            terms = np.square(v_k) / denominators\n            energy_shift = np.sum(terms)\n        \n        # The corrected LUMO energy is lowered by the energy shift.\n        e_lumo_corrected_hartree = e0 - energy_shift\n\n        # Per Koopmans' theorem, EA is the negative of the LUMO energy.\n        ea_hartree = -e_lumo_corrected_hartree\n\n        # Convert the final electron affinity from Hartrees to eV.\n        ea_ev = ea_hartree * HARTREE_TO_EV\n\n        # Round the result to three decimal places as required.\n        results.append(round(ea_ev, 3))\n\n    # Final print statement in the exact required format: [x1,x2,x3,x4]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2916573"}]}