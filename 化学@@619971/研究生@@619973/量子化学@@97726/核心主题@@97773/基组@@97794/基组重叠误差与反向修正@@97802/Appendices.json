{"hands_on_practices": [{"introduction": "我们从一个基本练习开始，以巩固核心概念。这个练习将指导您从原始（未校正的）相互作用能和BSSE校正值出发，推导出并计算经过平衡校正的相互作用能。通过这个过程，您将加深对BSSE作为一种非物理稳定化伪影的理解，并学会如何正确地应用校正并解释其物理意义 [@problem_id:2875570]。", "problem": "在一个固定的几何构型下，使用相同的原子轨道基组对一个由单体 $A$ 和 $B$ 组成的非共价二聚体进行了研究。原始相互作用能（计算为二聚体的超分子能量与各自在自身单体基组中优化的孤立单体能量之差）据报道为 $-4.5$ kcal/mol。使用 Boys–Bernardi 平衡校正方法，在相同几何构型下，该二聚体的基组重叠误差（BSSE）校正值被评估为 $+1.2$ kcal/mol。\n\n仅从超分子相互作用能的基本定义（二聚体能量与单体能量之和的差值）以及平衡校正的概念性定义（通过“鬼”函数移除因基组共享导致的人为稳定性）出发，推导平衡校正后的相互作用能与未校正的相互作用能及BSSE校正值之间的关系。然后，根据上述数据计算平衡校正后的相互作用能。最后，从结合强度和BSSE的角度解释校正值和校正后相互作用能的符号。以 kcal/mol 为单位表示最终能量，不要四舍五入。", "solution": "所提出的问题是计算量子化学中的一个标准练习。在尝试进行任何解答之前，需要进行严格的验证。\n\n首先，逐字提取问题陈述中给出的条件。\n1.  系统是在一个固定几何构型下的、由单体 $A$ 和 $B$ 组成的非共价二聚体。\n2.  原始相互作用能，定义为二聚体的超分子能量与孤立、优化的单体能量之差，为 $E_{\\text{int}}^{\\text{raw}} = -4.5 \\, \\text{kcal/mol}$。\n3.  基组重叠误差（BSSE）的 Boys–Bernardi 平衡校正值被评估为 $\\delta_{\\text{BSSE}} = +1.2 \\, \\text{kcal/mol}$。\n\n接下来，根据科学合理性和适定性的标准对这些给定条件进行验证。\n该问题具有科学依据。超分子相互作用能、基组重叠误差和平衡校正等概念是量子化学框架内的基本且公认的原理，源于将变分原理应用于由不完备（有限）基组描述的系统。\n该问题是适定的且自洽的。它提供了执行所要求的推导、计算和解释所需的所有必要定义和数值。这些数值本身对于非共价二聚体是物理上现实的；负的相互作用能表示结合，而正的BSSE校正值是预期的结果，因为该误差几乎总是起稳定作用。所使用的语言是客观和精确的，并采用了标准术语。\n该问题并非无足轻重，因为它要求从第一性原理进行正确的推导，并对结果进行清晰的物理解释。\n\n结论是该问题有效。我现在将进行解答。\n\n任务是从基本定义出发，推导校正后的相互作用能、未校正的相互作用能和BSSE校正值之间的关系。\n\n让我们定义能量项。用于特定计算的基组由上标表示。设 $\\chi_A$ 是以单体 $A$ 为中心的基组，$\\chi_B$ 是以单体 $B$ 为中心的基组。超分子基组是它们的并集，即 $\\chi_{AB} = \\chi_A \\cup \\chi_B$。\n\n用其自身的基组 $\\chi_A$ 计算的孤立单体 $A$ 的能量为 $E_{A}^{\\chi_A}$。\n用其自身的基组 $\\chi_B$ 计算的孤立单体 $B$ 的能量为 $E_{B}^{\\chi_B}$。\n用完整的超分子基组 $\\chi_{AB}$ 计算的二聚体 $AB$ 的能量为 $E_{AB}^{\\chi_{AB}}$。\n\n未校正或原始的相互作用能，在问题中给出为 $E_{\\text{int}}^{\\text{raw}}$，此处记为 $\\Delta E_{\\text{uncorr}}$，定义如下：\n$$\n\\Delta E_{\\text{uncorr}} = E_{AB}^{\\chi_{AB}} - (E_{A}^{\\chi_A} + E_{B}^{\\chi_B})\n$$\n问题陈述此值为 $-4.5 \\, \\text{kcal/mol}$。\n\n基组重叠误差的产生是因为在二聚体能量 $E_{AB}^{\\chi_{AB}}$ 的计算中，单体 $A$ 可以“借用”来自 $\\chi_B$ 的基函数，而单体 $B$ 可以“借用”来自 $\\chi_A$ 的基函数。这使得二聚体内的每个单体片段都可以用比孤立单体（分别只用自己的基组 $\\chi_A$ 和 $\\chi_B$ 描述）更大、更灵活的基组（$\\chi_{AB}$）来描述。根据变分原理，更大的基组会导致计算出的能量更低（更负）。这导致了二聚体的一种人为的、非物理的稳定性。\n\nBoys和Bernardi的平衡校正是为了估计并移除这种人为稳定性而设计的。这是通过使用完整的超分子基组 $\\chi_{AB}$ 来计算单个单体的能量来实现的。为此，需要在存在 $B$ 的基函数（但没有其原子核和电子）的情况下计算单体 $A$ 的能量，这些基函数被称为“鬼轨道”。该能量记为 $E_{A}^{\\chi_{AB}}$。类似地，带有 $A$ 的鬼轨道的单体 $B$ 的能量是 $E_{B}^{\\chi_{AB}}$。\n\n平衡校正值 $\\delta_{\\text{BSSE}}$ 是每个单体所经历的人为稳定性之和：\n$$\n\\delta_{\\text{BSSE}} = (E_{A}^{\\chi_A} - E_{A}^{\\chi_{AB}}) + (E_{B}^{\\chi_B} - E_{B}^{\\chi_{AB}})\n$$\n由于变分原理，有 $E_{A}^{\\chi_{AB}} \\le E_{A}^{\\chi_A}$ 和 $E_{B}^{\\chi_{AB}} \\le E_{B}^{\\chi_B}$，因此 $\\delta_{\\text{BSSE}}$ 的值是非负的。它代表了非物理稳定性的量级。问题陈述该校正值为 $+1.2 \\, \\text{kcal/mol}$。\n\n平衡校正后的相互作用能 $\\Delta E_{\\text{corr}}$ 的定义方式是，二聚体及其组分单体的能量是在“同等基础”上计算的，即它们都使用同一个超分子基组 $\\chi_{AB}$ 进行计算：\n$$\n\\Delta E_{\\text{corr}} = E_{AB}^{\\chi_{AB}} - (E_{A}^{\\chi_{AB}} + E_{B}^{\\chi_{AB}})\n$$\n为了推导 $\\Delta E_{\\text{corr}}$、$\\Delta E_{\\text{uncorr}}$ 和 $\\delta_{\\text{BSSE}}$ 之间的关系，我们可以通过加上和减去项 $(E_{A}^{\\chi_A} + E_{B}^{\\chi_B})$ 来重新排列 $\\Delta E_{\\text{corr}}$ 的表达式：\n$$\n\\Delta E_{\\text{corr}} = E_{AB}^{\\chi_{AB}} - (E_{A}^{\\chi_{AB}} + E_{B}^{\\chi_{AB}}) + (E_{A}^{\\chi_A} + E_{B}^{\\chi_B}) - (E_{A}^{\\chi_A} + E_{B}^{\\chi_B})\n$$\n重新组合各项：\n$$\n\\Delta E_{\\text{corr}} = \\left[ E_{AB}^{\\chi_{AB}} - (E_{A}^{\\chi_A} + E_{B}^{\\chi_B}) \\right] + \\left[ (E_{A}^{\\chi_A} + E_{B}^{\\chi_B}) - (E_{A}^{\\chi_{AB}} + E_{B}^{\\chi_{AB}}) \\right]\n$$\n根据定义，第一个方括号中的项是未校正的相互作用能 $\\Delta E_{\\text{uncorr}}$。第二个方括号中的项可以重新排列为：\n$$\n(E_{A}^{\\chi_A} - E_{A}^{\\chi_{AB}}) + (E_{B}^{\\chi_B} - E_{B}^{\\chi_{AB}})\n$$\n这正是平衡校正 $\\delta_{\\text{BSSE}}$ 的定义。\n因此，推导出的关系式是：\n$$\n\\Delta E_{\\text{corr}} = \\Delta E_{\\text{uncorr}} + \\delta_{\\text{BSSE}}\n$$\n推导完毕。\n\n现在，我们使用给定的数据计算校正后的相互作用能的数值：\n$\\Delta E_{\\text{uncorr}} = -4.5 \\, \\text{kcal/mol}$\n$\\delta_{\\text{BSSE}} = +1.2 \\, \\text{kcal/mol}$\n\n$$\n\\Delta E_{\\text{corr}} = -4.5 \\, \\text{kcal/mol} + 1.2 \\, \\text{kcal/mol} = -3.3 \\, \\text{kcal/mol}\n$$\n\n最后，我们解释这些符号和数值。\n1.  **BSSE校正值的符号 ($\\delta_{\\text{BSSE}} = +1.2 \\, \\text{kcal/mol}$)**：校正值为正。这表明未经校正的计算高估了二聚体的结合能 $1.2 \\, \\text{kcal/mol}$。由于单体之间非物理性的基函数“借用”，原始相互作用能 $-4.5 \\, \\text{kcal/mol}$ 被人为地降低了（过于稳定）。正号表示这个误差是一种稳定化效应，而校正的作用是减小结合能的绝对值，使相互作用变弱。这是BSSE在物理上预期的结果。\n\n2.  **校正后相互作用能的符号 ($\\Delta E_{\\text{corr}} = -3.3 \\, \\text{kcal/mol}$)**：校正后的相互作用能为负。在化学热力学中，负的生成能表示一个稳定的相互作用。因此，在移除了基组重叠的人为效应之后，$-3.3 \\, \\text{kcal/mol}$ 这个值代表了在给定几何构型下二聚体 $AB$ 的“真实”物理结合能。它证实了该二聚体是一个束缚复合物，相对于解离成其组分单体而言是稳定的，稳定能量为 $3.3 \\, \\text{kcal/mol}$。未校正的结果表明结合能为 $4.5 \\, \\text{kcal/mol}$，但这种表观稳定性中大约有 $27\\%$（$1.2/4.5 \\approx 0.267$）是计算方法带来的人为效应。平衡校正提供了对相互作用强度更具物理意义的估计。", "answer": "$$\\boxed{-3.3}$$", "id": "2875570"}, {"introduction": "在实际研究中，BSSE的大小会受到所用电子结构方法和基组的影响。这个练习提供了一个具体的案例，使用两种不同的相关方法（MP2和CCSD(T)）计算了水分子的二聚体。您将利用给定的原始能量数据，亲手计算未校正和经过平衡校正的相互作用能，并量化BSSE导致的“过度结合”效应 [@problem_id:2875497]。", "problem": "使用相关一致极化价层双泽塔基组(cc-pVDZ)，在两个电子结构理论水平上计算了水二聚体的相互作用：Møller–Plesset二阶微扰(MP2)和包含单、双和微扰三激发的耦合簇理论(CCSD(T))。超分子相互作用能定义为二聚体的总电子能量与孤立单体的总电子能量之和的差，单位均为Hartree。基组重叠误差的产生是因为在有限基组中，二聚体中的每个单体都可以通过借用伙伴单体的基函数来变分地降低其能量。Boys–Bernardi平衡校正用“在二聚体基组中的单体”能量替换了单体能量，其中伙伴单体的基函数作为未占据的“鬼”函数被包含在内。\n\n给定以下总电子能量，均在指定水平下使用cc-pVDZ计算得出：\n\n- 在MP2水平：\n  - 二聚体在二聚体基组中的能量：$E_{AB}^{AB} = -152.064220$。\n  - 单体在各自单体基组中的能量：$E_{A}^{A} = -76.026760$，$E_{B}^{B} = -76.026760$。\n  - “在二聚体基组中的单体”能量（鬼计算）：$E_{A}^{AB} = -76.028600$，$E_{B}^{AB} = -76.028320$。\n\n- 在CCSD(T)水平：\n  - 二聚体在二聚体基组中的能量：$E_{AB}^{AB} = -152.226100$。\n  - 单体在各自单体基组中的能量：$E_{A}^{A} = -76.108150$，$E_{B}^{B} = -76.108150$。\n  - “在二聚体基组中的单体”能量（鬼计算）：$E_{A}^{AB} = -76.109300$，$E_{B}^{AB} = -76.108900$。\n\n仅使用超分子相互作用能的定义、鬼函数的概念，以及平衡校正的相互作用能用“在二聚体基组中的单体”能量替换单体能量的思路，在每个水平（MP2和CCSD(T)）上完成以下操作：\n\n1. 计算未校正的相互作用能（未进行平衡校正）。\n2. 计算经过平衡校正的相互作用能。\n3. 将由基组重叠误差引起的过结合定义为未校正相互作用能的幅值相对于经过平衡校正的相互作用能的幅值的超出部分。然后，计算平衡校正所消除的过结合分数，即该超出部分与未校正相互作用能幅值的比率。\n\n将每个被消除过结合分数的结果表示为无单位的小数。将你的两个结果四舍五入至四位有效数字。按 $(\\text{MP2}, \\text{CCSD(T)})$ 的顺序提供你的最终答案。", "solution": "所给问题是计算量子化学中的一个标准练习，其科学上合理、问题定义明确、客观，并包含了完整解答所需的所有信息。因此，我们着手进行分析。\n\n基本量是未校正和经过平衡校正的相互作用能。设能量项 $E$ 的上标表示计算所用的基组，下标表示分子体系。单体 $A$ 的基组表示为 $A$，二聚体 $AB$ 的基组是单体基组的并集，也表示为 $AB$。\n\n未校正的超分子相互作用能 $\\Delta E_{\\text{uncorr}}$ 定义为在完整二聚体基组中计算的二聚体 $AB$ 的总能量 $E_{AB}^{AB}$ 与孤立单体 $A$ 和 $B$（分别在各自基组中计算的能量 $E_{A}^{A}$ 和 $E_{B}^{B}$）的能量总和之差。\n$$\n\\Delta E_{\\text{uncorr}} = E_{AB}^{AB} - (E_{A}^{A} + E_{B}^{B})\n$$\n\n基组重叠误差(BSSE)的产生是因为在二聚体计算中，单体 $A$ 可以“借用”单体 $B$ 的基函数来降低其能量，反之亦然。这是使用不完整、有限基组所产生的人为结果。Boys–Bernardi平衡校正试图纠正这一点。经过平衡校正的相互作用能 $\\Delta E_{\\text{corr}}$ 是使用在完整二聚体基组中计算的单体能量来计算的。这是通过在伙伴单体的“鬼”基函数存在但没有其原子核或电子的情况下，对每个单体进行计算来实现的。这些能量表示为 $E_{A}^{AB}$ 和 $E_{B}^{AB}$。\n$$\n\\Delta E_{\\text{corr}} = E_{AB}^{AB} - (E_{A}^{AB} + E_{B}^{AB})\n$$\n\n由BSSE引起的过结合定义为未校正和校正后相互作用能的幅值之差。由于结合复合物的相互作用能为负，其幅值为 $|\\Delta E|$。\n$$\n\\text{Overbinding} = |\\Delta E_{\\text{uncorr}}| - |\\Delta E_{\\text{corr}}|\n$$\n被消除的过结合分数，我们记为 $F$，是该过结合量与未校正相互作用能幅值的比率。\n$$\nF = \\frac{|\\Delta E_{\\text{uncorr}}| - |\\Delta E_{\\text{corr}}|}{|\\Delta E_{\\text{uncorr}}|} = 1 - \\frac{|\\Delta E_{\\text{corr}}|}{|\\Delta E_{\\text{uncorr}}|}\n$$\n我们现在将为两种指定的理论水平计算这个分数。\n\n首先，对于MP2/cc-pVDZ理论水平：\n给定的能量为：\n$E_{AB}^{AB} = -152.064220$\n$E_{A}^{A} = -76.026760$\n$E_{B}^{B} = -76.026760$\n$E_{A}^{AB} = -76.028600$\n$E_{B}^{AB} = -76.028320$\n\n未校正的相互作用能为：\n$$\n\\Delta E_{\\text{uncorr}}(\\text{MP2}) = -152.064220 - (-76.026760 - 76.026760) = -152.064220 + 152.053520 = -0.010700 \\, \\text{Hartree}\n$$\n校正后的相互作用能为：\n$$\n\\Delta E_{\\text{corr}}(\\text{MP2}) = -152.064220 - (-76.028600 - 76.028320) = -152.064220 + 152.056920 = -0.007300 \\, \\text{Hartree}\n$$\n现在，我们计算被消除的过结合分数：\n$$\nF(\\text{MP2}) = \\frac{|-0.010700| - |-0.007300|}{|-0.010700|} = \\frac{0.010700 - 0.007300}{0.010700} = \\frac{0.003400}{0.010700} \\approx 0.317757\n$$\n四舍五入到四位有效数字，我们得到 $F(\\text{MP2}) = 0.3178$。\n\n其次，对于CCSD(T)/cc-pVDZ理论水平：\n给定的能量为：\n$E_{AB}^{AB} = -152.226100$\n$E_{A}^{A} = -76.108150$\n$E_{B}^{B} = -76.108150$\n$E_{A}^{AB} = -76.109300$\n$E_{B}^{AB} = -76.108900$\n\n未校正的相互作用能为：\n$$\n\\Delta E_{\\text{uncorr}}(\\text{CCSD(T)}) = -152.226100 - (-76.108150 - 76.108150) = -152.226100 + 152.216300 = -0.009800 \\, \\text{Hartree}\n$$\n校正后的相互作用能为：\n$$\n\\Delta E_{\\text{corr}}(\\text{CCSD(T)}) = -152.226100 - (-76.109300 - 76.108900) = -152.226100 + 152.218200 = -0.007900 \\, \\text{Hartree}\n$$\n现在，我们计算被消除的过结合分数：\n$$\nF(\\text{CCSD(T)}) = \\frac{|-0.009800| - |-0.007900|}{|-0.009800|} = \\frac{0.009800 - 0.007900}{0.009800} = \\frac{0.001900}{0.009800} \\approx 0.193877\n$$\n四舍五入到四位有效数字，我们得到 $F(\\text{CCSD(T)}) = 0.1939$。\n\n被消除过结合分数的最终结果，MP2为 $0.3178$，CCSD(T)为 $0.1939$。问题要求按 $(\\text{MP2}, \\text{CCSD(T)})$ 的顺序提供最终答案。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0.3178 & 0.1939\n\\end{pmatrix}\n}\n$$", "id": "2875497"}, {"introduction": "为了将理论付诸实践，高效地设置和执行平衡校正计算至关重要。最后一个练习将引导您思考如何将平衡校正的步骤自动化，从构建二聚体几何结构到生成进行“鬼原子”计算所需的输入文件。通过为一个假设的计算化学程序编写工作流程，您将掌握在实际计算中系统地处理BSSE的核心逻辑 [@problem_id:2762232]。", "problem": "编写一个完整的程序，该程序为使用虚拟基函数计算双体复合物的平衡校正相互作用能构建一个可复现的自动化工作流。该程序必须：(i) 根据给定的单体坐标和对一个单体的刚性平移，组装可复现的单体和二聚体几何构型；(ii) 在一种明确定义的伪量子化学格式下，为每种情况生成三个文本输入（完整的二聚体，单体 A 与虚拟化的单体 B，单体 B 与虚拟化的单体 A）；(iii) 从提供的总能量计算平衡校正相互作用能。您的实现必须有原则性，并基于电子结构理论的第一性原理。\n\n使用以下基本原理来启发和设计算法：\n- 在 Born–Oppenheimer 近似下，电子基态能量是通过在有限基表示上最小化 Rayleigh–Ritz 泛函获得的，这意味着根据变分原理，增加基组会单调降低变分能量。\n- 当两个子系统被组合在一起时，复合物的有限基组允许每个单体变分地“借用”以另一个单体为中心的函数，这被称为基组重叠误差 (Basis Set Superposition Error, BSSE)。\n- 带有虚拟基函数的平衡校正流程通过将基函数放置在不贡献电子和核吸引力的原子核（虚拟原子）上，并在与二聚体几何构型中相同的核坐标处进行评估，从而形式化了“单体在二聚体基组中”的能量。\n\n因此，您的程序应：\n- 对于每个测试用例，接受以埃为单位的单体 A 和单体 B 的笛卡尔坐标，以及应用于单体 B 以形成二聚体几何构型的刚性平移向量（无旋转）。所有原子坐标均为三维元组。同时还给出了每个物种的电荷和自旋多重度。\n- 生成三个文本输入（不写入磁盘；在内存中构造字符串即可）：\n    1. 完整的二聚体输入，包含在指定位置组合的两个单体的几何构型。\n    2. 单体 A 在二聚体基组中的输入，其中单体 B 作为虚拟原子出现。\n    3. 单体 B 在二聚体基组中的输入，其中单体 A 作为虚拟原子出现。\n  对于每个生成的输入，使用以下明确的伪格式：\n    - 第一行：字面文本 “molecule &lt;name&gt;”\n    - 第二行：“charge &lt;q&gt; mult &lt;{m}&gt; basis &lt;label&gt;”，其中基组标签是任意字符串。\n    - 后续行：每行一个原子，格式为“&lt;symbol&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt;”，坐标单位为埃。虚拟原子必须通过在其符号前加上字面量“Gh:”来表示（例如，“Gh:O”）。\n- 对于每个测试用例，使用每个用例提供的以下数据计算平衡校正相互作用能：\n    - 在完整二聚体基组中的二聚体总能量（单位为哈特里）。\n    - 在二聚体基组中计算的单体 A 的总能量（B 为虚拟原子）（单位为哈特里）。\n    - 在二聚体基组中计算的单体 B 的总能量（A 为虚拟原子）（单位为哈特里）。\n- 使用精确因子 $2625.49962\\,\\mathrm{kJ\\,mol^{-1}\\,E_h^{-1}}$ 将最终的平衡校正相互作用能转换为千焦/摩尔，并四舍五入到三位小数。仅报告每个测试用例的平衡校正相互作用能。\n\n要实现的测试套件和参数：\n- 情况 1 (正常路径，氢键二聚体):\n  - 单体 A (水): 原子坐标，单位为埃\n    - $\\mathrm{O}\\ (0.000000,\\,0.000000,\\,0.000000)$\n    - $\\mathrm{H}\\ (0.957200,\\,0.000000,\\,0.000000)$\n    - $\\mathrm{H}\\ (-0.239987,\\,0.927297,\\,0.000000)$\n  - 单体 B (水): 与上述坐标相同，B 的平移向量为 $(0.000000,\\,0.000000,\\,2.900000)$。\n  - 所有分子的电荷和多重度: $q=0$, $m=1$。\n  - 能量 (单位为哈特里):\n    - 二聚体在二聚体基组中: $-152.792000$\n    - 单体 A 在二聚体基组中 (B 为虚拟原子): $-76.392345$\n    - 单体 B 在二聚体基组中 (A 为虚拟原子): $-76.391500$\n- 情况 2 (边界情况：大分离，非常弱的相互作用):\n  - 单体 A (氖原子): $\\mathrm{Ne}\\ (0.000000,\\,0.000000,\\,0.000000)$\n  - 单体 B (氖原子): 相同，B 的平移向量为 $(0.000000,\\,0.000000,\\,8.000000)$。\n  - 电荷和多重度: 所有物种均为 $q=0$, $m=1$。\n  - 能量 (单位为哈特里):\n    - 二聚体在二聚体基组中: $-257.094250$\n    - 单体 A 在二聚体基组中 (B 为虚拟原子): $-128.547100$\n    - 单体 B 在二聚体基组中 (A 为虚拟原子): $-128.547100$\n- 情况 3 (边缘情况：类似最小基组的强 BSSE 场景):\n  - 单体 A (氨): 原子坐标，单位为埃\n    - $\\mathrm{N}\\ (0.000000,\\,0.000000,\\,0.000000)$\n    - $\\mathrm{H}\\ (0.000000,\\,0.937700,\\,-0.381600)$\n    - $\\mathrm{H}\\ (-0.812100,\\,-0.468900,\\,-0.381600)$\n    - $\\mathrm{H}\\ (0.812100,\\,-0.468900,\\,-0.381600)$\n  - 单体 B (氨): 与上述坐标相同，B 的平移向量为 $(0.000000,\\,0.000000,\\,3.000000)$。\n  - 电荷和多重度: 所有物种均为 $q=0$, $m=1$。\n  - 能量 (单位为哈特里):\n    - 二聚体在二聚体基组中: $-112.485500$\n    - 单体 A 在二聚体基组中 (B 为虚拟原子): $-56.234000$\n    - 单体 B 在二聚体基组中 (A 为虚拟原子): $-56.233500$\n\n程序规范和输出格式：\n- 在程序中硬编码上述测试套件；不要读取外部输入或写入文件。\n- 遵循上述伪格式和虚拟化规则，实现确定性的几何构型组装和输入字符串生成，以确保可复现性。\n- 对于每个测试用例，计算以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位的平衡校正相互作用能，并保留三位小数。\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，例如：“[$x_1,x_2,x_3$]”，其中每个 $x_i$ 是一个测试用例的四舍五入后的浮点数，单位为 $\\mathrm{kJ\\,mol^{-1}}$。", "solution": "设计从变分原理和基组限制能量的定义出发。在 Born–Oppenheimer 近似下，对于固定的核坐标，非相对论电子哈密顿算符 $\\hat{H}$ 的基态能量是 Rayleigh–Ritz 泛函 $E[\\Psi]=\\langle \\Psi \\vert \\hat{H} \\vert \\Psi \\rangle/\\langle \\Psi \\vert \\Psi \\rangle$ 在所有允许的波函数 $\\Psi$ 上的最小值。在有限基表示中，随着基组 $\\mathcal{B}$ 的扩大，近似基态能量 $E^{\\mathcal{B}}$ 会单调减小。对于两个子系统 $A$ 和 $B$，基组重叠误差 (BSSE) 的产生是由于在组合基组 $\\mathcal{B}_{AB}=\\mathcal{B}_A \\cup \\mathcal{B}_B$ 中计算二聚体能量时，可用于变分降低能量的空间比每个单体在各自基组中的空间更大。如果通过减去在各自单体基组中获得的单体能量来构成相互作用能，结果会偏向于过度结合，因为二聚体被两个单体上的基函数“帮助”了，而单体则没有。\n\n平衡校正思想通过在二聚体几何构型下进行“单体在二聚体基组中”的计算来取代单体计算：计算 $E_A^{AB}$，即仅包含 $A$ 的电子和原子核的单体 $A$ 的能量，但使用的是包含以 $B$ 为中心的“虚拟”函数的基组 $\\mathcal{B}_{AB}$，这些虚拟函数不贡献电子和核吸引力。类似地，计算 $E_B^{AB}$。这两项都在与二聚体几何构型相同的核坐标下进行评估，以确保同类比较。将二聚体基组中的完整二聚体能量表示为 $E_{AB}^{AB}$，通过从二聚体能量中减去“单体在二聚体基组中”的能量，即可获得平衡校正相互作用能。这遵循了相互作用能的定义，即在固定几何构型和相同变分空间内将 $A$ 和 $B$ 组合在一起时的能量变化；后一个要求通过对所有三个能量使用相同的基组 $\\mathcal{B}_{AB}$ 来强制执行。\n\n算法上：\n1. 几何构型组装。我们被给予单体 A 的笛卡尔坐标（埃）列表 $\\{(\\mathrm{sym}_i, x_i, y_i, z_i)\\}$ 和单体 B 的列表 $\\{(\\mathrm{sym}_j, x'_j, y'_j, z'_j)\\}$。为 B 提供了一个刚性平移向量 $\\mathbf{t}=(t_x,t_y,t_z)$。二聚体的几何构型是单体 A 的坐标与平移后的单体 B 坐标 $\\{(\\mathrm{sym}_j, x'_j+t_x, y'_j+t_y, z'_j+t_z)\\}$ 的拼接。该过程是确定性的，因此是可复现的。此问题中不应用旋转，因此不需要角度。\n2. 输入生成。对于给定的基组标签（任意字符串）、电荷 $q$ 和多重度 $m$，我们生成三个字符串：\n   - 二聚体 AB：标题行 “molecule AB”、“charge $q$ mult $m$ basis &lt;label&gt;”，然后是所有二聚体原子，每个原子格式为“symbol x y z”。\n   - 单体 A 在二聚体基组中：标题 “molecule A_in_AB_basis”，相同的 “charge $q$ mult $m$ basis &lt;label&gt;”，然后是 A 的原子作为真实原子，B 的原子前缀为“Gh:”以表示虚拟原子，使用与二聚体几何构型中相同的坐标。\n   - 单体 B 在二聚体基组中：标题 “molecule B_in_AB_basis”，反之亦然，B 为真实原子，A 为虚拟原子。\n   这再现了概念上的平衡校正输入：虚拟原子提供基函数，但不提供电子或核吸引力。\n3. 能量计算。对于每种情况，我们被给予三个标量能量（单位为哈特里）：$E_{AB}^{AB}$、$E_{A}^{AB}$ 和 $E_{B}^{AB}$。平衡校正相互作用能（以哈特里为单位）是\n   $$\\Delta E_{\\mathrm{CP}} = E_{AB}^{AB} - E_{A}^{AB} - E_{B}^{AB}.$$\n   使用因子 $f=2625.49962\\,\\mathrm{kJ\\,mol^{-1}\\,E_h^{-1}}$ 转换为千焦/摩尔，得到\n   $$\\Delta E_{\\mathrm{CP}}^{(\\mathrm{kJ/mol})} = f \\times \\Delta E_{\\mathrm{CP}}.$$\n   然后我们四舍五入到三位小数。\n4. 确定性。因为组装是带有固定平移的纯粹拼接，并且输入格式被明确指定（包括用于虚拟原子的“Gh:”前缀），因此工作流是可复现的。不存在随机选择。\n\n将此应用于测试套件：\n- 情况 $1$ (水二聚体):\n  $$\\Delta E_{\\mathrm{CP}} = (-152.792000) - (-76.392345) - (-76.391500) = -0.008155\\ \\mathrm{E_h},$$\n  $$\\Delta E_{\\mathrm{CP}}^{(\\mathrm{kJ/mol})} = 2625.49962 \\times (-0.008155) \\approx -21.410949 \\ \\Rightarrow\\ \\text{四舍五入为 } -21.411.$$\n- 情况 $2$ (氖二聚体，大分离):\n  $$\\Delta E_{\\mathrm{CP}} = (-257.094250) - (-128.547100) - (-128.547100) = -0.000050\\ \\mathrm{E_h},$$\n  $$\\Delta E_{\\mathrm{CP}}^{(\\mathrm{kJ/mol})} = 2625.49962 \\times (-0.000050) \\approx -0.131275 \\ \\Rightarrow\\ \\text{四舍五入为 } -0.131.$$\n- 情况 $3$ (氨二聚体，类似强 BSSE):\n  $$\\Delta E_{\\mathrm{CP}} = (-112.485500) - (-56.234000) - (-56.233500) = -0.018000\\ \\mathrm{E_h},$$\n  $$\\Delta E_{\\mathrm{CP}}^{(\\mathrm{kJ/mol})} = 2625.49962 \\times (-0.018000) \\approx -47.258993 \\ \\Rightarrow\\ \\text{四舍五入为 } -47.259.$$\n\n因此，程序应输出单行：\n$$[\\,-21.411,-0.131,-47.259\\,].$$", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Execution environment: Python 3.12, standard library only (numpy/scipy optional but not required).\n# This script constructs ghosted inputs and computes CP-corrected interaction energies for given test cases.\n\nHARTREE_TO_KJ_MOL = 2625.49962  # kJ/mol per Eh\n\nfrom dataclasses import dataclass\nfrom typing import List, Tuple\n\n@dataclass(frozen=True)\nclass Atom:\n    symbol: str\n    x: float\n    y: float\n    z: float\n\n@dataclass(frozen=True)\nclass Monomer:\n    label: str\n    charge: int\n    multiplicity: int\n    atoms: List[Atom]\n\n@dataclass(frozen=True)\nclass TestCase:\n    name: str\n    basis_label: str\n    monomer_A: Monomer\n    monomer_B: Monomer\n    translation_B: Tuple[float, float, float]  # translation applied to monomer B\n    E_AB_AB: float  # Hartree\n    E_A_AB: float   # Hartree (monomer A in dimer basis, B ghosted)\n    E_B_AB: float   # Hartree (monomer B in dimer basis, A ghosted)\n\ndef translate_atoms(atoms: List[Atom], t: Tuple[float, float, float]) -> List[Atom]:\n    tx, ty, tz = t\n    return [Atom(a.symbol, a.x + tx, a.y + ty, a.z + tz) for a in atoms]\n\ndef build_dimer_geometry(mA: Monomer, mB: Monomer, tB: Tuple[float, float, float]) -> List[Atom]:\n    # Deterministic concatenation: A atoms first, then translated B atoms\n    b_translated = translate_atoms(mB.atoms, tB)\n    return list(mA.atoms) + b_translated\n\ndef generate_input_string(name: str, charge: int, mult: int, basis: str, real_atoms: List[Atom], ghost_atoms: List[Atom]) -> str:\n    # Pseudo-format as specified\n    lines = []\n    lines.append(f\"molecule {name}\")\n    lines.append(f\"charge {charge} mult {mult} basis {basis}\")\n    for a in real_atoms:\n        lines.append(f\"{a.symbol} {a.x:.6f} {a.y:.6f} {a.z:.6f}\")\n    for g in ghost_atoms:\n        lines.append(f\"Gh:{g.symbol} {g.x:.6f} {g.y:.6f} {g.z:.6f}\")\n    return \"\\n\".join(lines)\n\ndef build_counterpoise_inputs(case: TestCase) -> Tuple[str, str, str]:\n    # Dimer geometry\n    dimer_atoms = build_dimer_geometry(case.monomer_A, case.monomer_B, case.translation_B)\n    # Split back to A (real) and B (translated) for ghost constructions\n    nA = len(case.monomer_A.atoms)\n    atoms_A_real = dimer_atoms[:nA]\n    atoms_B_real = dimer_atoms[nA:]\n    # Build three inputs\n    input_AB = generate_input_string(\n        name=\"AB\",\n        charge=case.monomer_A.charge + case.monomer_B.charge,\n        mult=case.monomer_A.multiplicity,  # both are singlets in test suite\n        basis=case.basis_label,\n        real_atoms=dimer_atoms,\n        ghost_atoms=[]\n    )\n    input_A_in_AB = generate_input_string(\n        name=\"A_in_AB_basis\",\n        charge=case.monomer_A.charge,\n        mult=case.monomer_A.multiplicity,\n        basis=case.basis_label,\n        real_atoms=atoms_A_real,\n        ghost_atoms=atoms_B_real\n    )\n    input_B_in_AB = generate_input_string(\n        name=\"B_in_AB_basis\",\n        charge=case.monomer_B.charge,\n        mult=case.monomer_B.multiplicity,\n        basis=case.basis_label,\n        real_atoms=atoms_B_real,\n        ghost_atoms=atoms_A_real\n    )\n    return input_AB, input_A_in_AB, input_B_in_AB\n\ndef delta_E_cp_kjmol(E_AB_AB: float, E_A_AB: float, E_B_AB: float) -> float:\n    delta_E_hartree = E_AB_AB - E_A_AB - E_B_AB\n    return delta_E_hartree * HARTREE_TO_KJ_MOL\n\ndef solve():\n    # Define monomer coordinates and test cases as specified\n    water_atoms = [\n        Atom(\"O\", 0.000000, 0.000000, 0.000000),\n        Atom(\"H\", 0.957200, 0.000000, 0.000000),\n        Atom(\"H\", -0.239987, 0.927297, 0.000000),\n    ]\n    neon_atoms = [Atom(\"Ne\", 0.000000, 0.000000, 0.000000)]\n    ammonia_atoms = [\n        Atom(\"N\", 0.000000, 0.000000, 0.000000),\n        Atom(\"H\", 0.000000, 0.937700, -0.381600),\n        Atom(\"H\", -0.812100, -0.468900, -0.381600),\n        Atom(\"H\", 0.812100, -0.468900, -0.381600),\n    ]\n\n    monomer_water = Monomer(\"H2O\", 0, 1, water_atoms)\n    monomer_neon = Monomer(\"Ne\", 0, 1, neon_atoms)\n    monomer_ammonia = Monomer(\"NH3\", 0, 1, ammonia_atoms)\n\n    test_cases = [\n        TestCase(\n            name=\"Water_dimer\",\n            basis_label=\"def2-SVP\",\n            monomer_A=monomer_water,\n            monomer_B=monomer_water,\n            translation_B=(0.000000, 0.000000, 2.900000),\n            E_AB_AB=-152.792000,\n            E_A_AB=-76.392345,\n            E_B_AB=-76.391500\n        ),\n        TestCase(\n            name=\"Neon_dimer_far\",\n            basis_label=\"def2-SVP\",\n            monomer_A=monomer_neon,\n            monomer_B=monomer_neon,\n            translation_B=(0.000000, 0.000000, 8.000000),\n            E_AB_AB=-257.094250,\n            E_A_AB=-128.547100,\n            E_B_AB=-128.547100\n        ),\n        TestCase(\n            name=\"Ammonia_dimer\",\n            basis_label=\"MIN\",\n            monomer_A=monomer_ammonia,\n            monomer_B=monomer_ammonia,\n            translation_B=(0.000000, 0.000000, 3.000000),\n            E_AB_AB=-112.485500,\n            E_A_AB=-56.234000,\n            E_B_AB=-56.233500\n        ),\n    ]\n\n    results = []\n    # Also build the ghosted inputs (not printed) to satisfy the workflow requirement\n    for case in test_cases:\n        _ab, _a_in_ab, _b_in_ab = build_counterpoise_inputs(case)\n        # In a real workflow, these strings would be written to files and submitted to a QC engine.\n        # Here, we only compute the CP-corrected interaction energy from provided totals.\n        value_kjmol = delta_E_cp_kjmol(case.E_AB_AB, case.E_A_AB, case.E_B_AB)\n        # Round to three decimals for output\n        results.append(f\"{value_kjmol:.3f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2762232"}]}