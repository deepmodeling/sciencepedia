{"hands_on_practices": [{"introduction": "在追求基组完备性的过程中，我们通常会加入大量基函数，特别是弥散函数，来更好地描述分子的电子结构。然而，这种做法可能导致基函数之间出现近似线性相关，即一组基函数的线性组合近似为零。本练习[@problem_id:2875241]将引导您从第一性原理出发，推导这种线性相关性如何导致重叠矩阵$\\mathbf{S}$出现极小的本征值，从而揭示量子化学计算中数值不稳定性的根源。", "problem": "在分子电子结构的原子轨道线性组合 (LCAO) 方法中，对于一个有限基函数集合$\\{\\chi_{i}\\}_{i=1}^{N}$，其重叠矩阵$\\mathbf{S}$定义为$S_{ij}=\\langle \\chi_{i} \\mid \\chi_{j} \\rangle$，其中$\\langle \\cdot \\mid \\cdot \\rangle$是希尔伯特空间内积。一个通过添加非线性无关的函数而趋向完备性的基组会变得冗余。这种冗余性体现在格拉姆矩阵$\\mathbf{S}$的谱中，并影响形式为$\\mathbf{F}\\mathbf{c}=\\epsilon\\,\\mathbf{S}\\mathbf{c}$的广义特征值问题的数值稳定性。\n\n从内积和格拉姆矩阵的基本定义出发，除了平方可积性和归一化之外，不假设任何特殊性质，完成以下任务：\n\na) 使用 Rayleigh–Ritz 原理和格拉姆矩阵的特性，从第一性原理证明最小特征值$\\lambda_{\\min}(\\mathbf{S})$可以写为$\\lambda_{\\min}(\\mathbf{S})=\\min_{\\mathbf{c}\\neq \\mathbf{0}} \\frac{\\|\\sum_{i=1}^{N} c_{i}\\chi_{i}\\|^{2}}{\\|\\mathbf{c}\\|^{2}}$，其中$\\|\\cdot\\|$分别表示函数空间中由内积诱导的范数和系数空间中的欧几里得范数。解释为什么基函数存在一个几乎为零的线性组合（即近冗余）会迫使$\\lambda_{\\min}(\\mathbf{S})$变小，从而将冗余性、趋向完备性与$\\mathbf{S}$特征值的大小关联起来。\n\nb) 考虑一维希尔伯特空间$L^{2}(\\mathbb{R})$中$N=2$的具体情况，其中有两个归一化的高斯型函数\n$\\chi_{1}(x)=\\mathcal{N}\\,\\exp\\!\\left(-\\frac{\\alpha x^{2}}{2}\\right)$和$\\chi_{2}(x)=\\mathcal{N}\\,\\exp\\!\\left(-\\frac{\\alpha (x-\\delta)^{2}}{2}\\right)$，且$\\alpha>0$, $\\delta>0$, $\\mathcal{N}=(\\alpha/\\pi)^{1/4}$。根据内积的定义，精确计算重叠积分$s(\\alpha,\\delta)=\\langle \\chi_{1}\\mid \\chi_{2}\\rangle$。\n\nc) 对于$N=2$的情况，显式写出重叠矩阵$\\mathbf{S}$，并用$s(\\alpha,\\delta)$表示其特征值。利用这些结果，推导出谱条件数$\\kappa_{2}(\\mathbf{S})=\\lambda_{\\max}(\\mathbf{S})/\\lambda_{\\min}(\\mathbf{S})$作为$\\alpha$和$\\delta$的函数的闭合形式表达式。基于你的推导，讨论当$\\delta \\to 0$时$\\kappa_{2}(\\mathbf{S})$的行为，以及这对通过对$\\mathbf{S}$进行正交化或 Cholesky 分解来求解$\\mathbf{F}\\mathbf{c}=\\epsilon\\,\\mathbf{S}\\mathbf{c}$的数值稳定性意味着什么。\n\n最终答案请提供$\\kappa_{2}(\\mathbf{S})$关于$\\alpha$和$\\delta$的精确闭合形式解析表达式。不需要进行数值计算或四舍五入，也无需单位。", "solution": "所述问题具有科学依据、适定且客观。它提出了量子化学和线性代数领域中的一组标准、可验证的任务，并提供了所有必要的数据和定义。因此，我们开始解答。\n\na) 重叠矩阵$\\mathbf{S}$是一个格拉姆矩阵，其元素为$S_{ij} = \\langle \\chi_i \\mid \\chi_j \\rangle$。由于基函数是希尔伯特空间的元素，内积$\\langle \\cdot \\mid \\cdot \\rangle$确保$\\mathbf{S}$是厄米的（对于实基函数是对称的）和半正定的。对于线性无关的基组，$\\mathbf{S}$是正定的。\n\nRayleigh-Ritz 原理指出，对于一个厄米矩阵$\\mathbf{A}$，其最小特征值$\\lambda_{\\min}(\\mathbf{A})$由 Rayleigh 商的最小值给出：\n$$\n\\lambda_{\\min}(\\mathbf{A}) = \\min_{\\mathbf{x}\\neq\\mathbf{0}} \\frac{\\mathbf{x}^\\dagger \\mathbf{A} \\mathbf{x}}{\\mathbf{x}^\\dagger \\mathbf{x}}\n$$\n我们将此原理应用于重叠矩阵$\\mathbf{S}$和一个系数向量$\\mathbf{c} \\in \\mathbb{C}^{N}$，其元素为$\\{c_i\\}_{i=1}^{N}$。$\\mathbf{S}$的 Rayleigh 商是$\\frac{\\mathbf{c}^\\dagger \\mathbf{S} \\mathbf{c}}{\\mathbf{c}^\\dagger \\mathbf{c}}$。\n\n让我们分析分子$\\mathbf{c}^\\dagger \\mathbf{S} \\mathbf{c}$。根据矩阵乘法的定义，它等于$\\sum_{i=1}^{N} \\sum_{j=1}^{N} c_i^* S_{ij} c_j$。代入$S_{ij}$的定义，我们得到：\n$$\n\\mathbf{c}^\\dagger \\mathbf{S} \\mathbf{c} = \\sum_{i=1}^{N} \\sum_{j=1}^{N} c_i^* \\langle \\chi_i \\mid \\chi_j \\rangle c_j\n$$\n利用内积的性质（第一个参数是反线性的，第二个参数是线性的），我们可以重写这个表达式。让我们定义一个函数$\\psi$作为基函数的线性组合：$\\psi = \\sum_{j=1}^{N} c_j \\chi_j$。该函数的范数的平方$\\|\\psi\\|^2$由内积$\\langle \\psi \\mid \\psi \\rangle$给出：\n$$\n\\|\\psi\\|^2 = \\left\\langle \\sum_{i=1}^{N} c_i \\chi_i \\;\\middle|\\; \\sum_{j=1}^{N} c_j \\chi_j \\right\\rangle = \\sum_{i=1}^{N} \\sum_{j=1}^{N} c_i^* c_j \\langle \\chi_i \\mid \\chi_j \\rangle = \\mathbf{c}^\\dagger \\mathbf{S} \\mathbf{c}\n$$\nRayleigh 商的分母是$\\mathbf{c}^\\dagger \\mathbf{c} = \\sum_{i=1}^{N} c_i^* c_i$，即系数向量的欧几里得范数的平方，$\\|\\mathbf{c}\\|^2$。\n\n通过直接代入，$\\mathbf{S}$的 Rayleigh 商变为：\n$$\n\\frac{\\mathbf{c}^\\dagger \\mathbf{S} \\mathbf{c}}{\\mathbf{c}^\\dagger \\mathbf{c}} = \\frac{\\left\\|\\sum_{i=1}^{N} c_i \\chi_i\\right\\|^2}{\\|\\mathbf{c}\\|^2}\n$$\n然后 Rayleigh-Ritz 原理给出$\\mathbf{S}$的最小特征值是此表达式在所有非零系数向量$\\mathbf{c}$上的最小值：\n$$\n\\lambda_{\\min}(\\mathbf{S}) = \\min_{\\mathbf{c}\\neq\\mathbf{0}} \\frac{\\left\\|\\sum_{i=1}^{N} c_i \\chi_i\\right\\|^2}{\\|\\mathbf{c}\\|^2}\n$$\n证明完毕。\n\n现在进行物理解释。基组$\\{\\chi_i\\}_{i=1}^{N}$中的近冗余或近线性相关意味着存在一组不全为零的系数$\\{c_i\\}$，使得线性组合$\\psi = \\sum_{i=1}^{N} c_i \\chi_i$几乎是零函数。用范数来表示，这意味着我们可以找到一个向量$\\mathbf{c}$满足$\\|\\mathbf{c}\\| > 0$（例如，可以将其归一化使得$\\|\\mathbf{c}\\|^2=1$），使得$\\|\\psi\\|^2 = \\|\\sum_{i=1}^{N} c_i \\chi_i\\|^2$是一个非常小的正数$\\epsilon \\approx 0$。\n根据推导出的$\\lambda_{\\min}(\\mathbf{S})$的公式，比值$\\frac{\\|\\psi\\|^2}{\\|\\mathbf{c}\\|^2}$的最小值必须至少和这个值$\\epsilon$一样小。因此，这种几乎为零的线性组合的存在迫使$\\lambda_{\\min}(\\mathbf{S})$接近于零。通过增加更多函数来趋向完备性的过程最终会引入这种近冗余，这表现为重叠矩阵具有非常小的特征值。\n\nb) 给定$L^2(\\mathbb{R})$中的两个归一化高斯函数：\n$$\n\\chi_{1}(x) = \\mathcal{N}\\,\\exp\\left(-\\frac{\\alpha x^{2}}{2}\\right), \\quad \\chi_{2}(x) = \\mathcal{N}\\,\\exp\\left(-\\frac{\\alpha (x-\\delta)^{2}}{2}\\right)\n$$\n其中$\\mathcal{N} = (\\alpha/\\pi)^{1/4}$。重叠积分$s(\\alpha, \\delta) = \\langle \\chi_1 \\mid \\chi_2 \\rangle$被定义为$\\int_{-\\infty}^{\\infty} \\chi_1^*(x) \\chi_2(x) dx$。由于函数是实函数，这等于$\\int_{-\\infty}^{\\infty} \\chi_1(x) \\chi_2(x) dx$。\n$$\ns(\\alpha, \\delta) = \\int_{-\\infty}^{\\infty} \\mathcal{N}^2 \\exp\\left(-\\frac{\\alpha x^2}{2}\\right) \\exp\\left(-\\frac{\\alpha(x-\\delta)^2}{2}\\right) dx\n$$\n代入$\\mathcal{N}^2 = \\sqrt{\\alpha/\\pi}$并合并指数项：\n$$\n-\\frac{\\alpha x^2}{2} - \\frac{\\alpha(x^2-2\\delta x+\\delta^2)}{2} = -\\frac{\\alpha}{2}(2x^2 - 2\\delta x + \\delta^2) = -\\alpha x^2 + \\alpha\\delta x - \\frac{\\alpha\\delta^2}{2}\n$$\n积分变为：\n$$\ns(\\alpha, \\delta) = \\sqrt{\\frac{\\alpha}{\\pi}} \\int_{-\\infty}^{\\infty} \\exp\\left(-\\alpha x^2 + \\alpha\\delta x - \\frac{\\alpha\\delta^2}{2}\\right) dx\n$$\n我们对指数中含$x$的项进行配方：\n$$\n-\\alpha x^2 + \\alpha\\delta x = -\\alpha(x^2 - \\delta x) = -\\alpha \\left( \\left(x-\\frac{\\delta}{2}\\right)^2 - \\frac{\\delta^2}{4} \\right) = -\\alpha\\left(x-\\frac{\\delta}{2}\\right)^2 + \\frac{\\alpha\\delta^2}{4}\n$$\n将此代回完整的指数中：\n$$\n-\\alpha\\left(x-\\frac{\\delta}{2}\\right)^2 + \\frac{\\alpha\\delta^2}{4} - \\frac{\\alpha\\delta^2}{2} = -\\alpha\\left(x-\\frac{\\delta}{2}\\right)^2 - \\frac{\\alpha\\delta^2}{4}\n$$\n积分可以分离为一个常数因子和一个标准高斯积分：\n$$\ns(\\alpha, \\delta) = \\sqrt{\\frac{\\alpha}{\\pi}} \\exp\\left(-\\frac{\\alpha\\delta^2}{4}\\right) \\int_{-\\infty}^{\\infty} \\exp\\left(-\\alpha\\left(x-\\frac{\\delta}{2}\\right)^2\\right) dx\n$$\n该积分是$\\int_{-\\infty}^{\\infty} \\exp(-\\alpha u^2) du$，其中$u = x - \\delta/2$。其值为$\\sqrt{\\pi/\\alpha}$。\n$$\ns(\\alpha, \\delta) = \\sqrt{\\frac{\\alpha}{\\pi}} \\exp\\left(-\\frac{\\alpha\\delta^2}{4}\\right) \\sqrt{\\frac{\\pi}{\\alpha}} = \\exp\\left(-\\frac{\\alpha\\delta^2}{4}\\right)\n$$\n这就是重叠积分的精确表达式。\n\nc) 对于$N=2$的情况，基函数是归一化的，所以$\\langle \\chi_1 \\mid \\chi_1 \\rangle = 1$和$\\langle \\chi_2 \\mid \\chi_2 \\rangle = 1$。非对角元素为$\\langle \\chi_1 \\mid \\chi_2 \\rangle = \\langle \\chi_2 \\mid \\chi_1 \\rangle = s(\\alpha, \\delta) = s$。重叠矩阵是：\n$$\n\\mathbf{S} = \\begin{pmatrix} 1 & s \\\\ s & 1 \\end{pmatrix}\n$$\n为了找到特征值$\\lambda$，我们求解特征方程$\\det(\\mathbf{S} - \\lambda\\mathbf{I}) = 0$：\n$$\n\\det\\begin{pmatrix} 1-\\lambda & s \\\\ s & 1-\\lambda \\end{pmatrix} = (1-\\lambda)^2 - s^2 = 0\n$$\n这给出$(1-\\lambda-s)(1-\\lambda+s) = 0$。因此，特征值为$\\lambda_1 = 1+s$和$\\lambda_2 = 1-s$。\n因为$\\alpha > 0$且$\\delta > 0$，我们有$s = \\exp(-\\alpha\\delta^2/4)$，这意味着$0 < s < 1$。因此，两个特征值都是正的。\n最大特征值是$\\lambda_{\\max}(\\mathbf{S}) = 1+s$，最小特征值是$\\lambda_{\\min}(\\mathbf{S}) = 1-s$。\n谱条件数$\\kappa_2(\\mathbf{S})$是最大特征值与最小特征值的比值：\n$$\n\\kappa_2(\\mathbf{S}) = \\frac{\\lambda_{\\max}(\\mathbf{S})}{\\lambda_{\\min}(\\mathbf{S})} = \\frac{1+s}{1-s}\n$$\n代入$s(\\alpha, \\delta)$的表达式：\n$$\n\\kappa_2(\\mathbf{S}) = \\frac{1 + \\exp\\left(-\\frac{\\alpha\\delta^2}{4}\\right)}{1 - \\exp\\left(-\\frac{\\alpha\\delta^2}{4}\\right)}\n$$\n现在我们分析当$\\delta \\to 0$时的行为。当$\\delta$趋近于$0$时，指数$-\\frac{\\alpha\\delta^2}{4}$趋近于$0$，因此$s = \\exp(-\\frac{\\alpha\\delta^2}{4})$趋近于$\\exp(0) = 1$。\n物理上，$\\delta \\to 0$意味着$\\chi_2(x) \\to \\chi_1(x)$，两个基函数变得相同，即线性相关。它们的重叠积分$s$正确地趋近于$1$。\n在此极限下，条件数的行为如下：\n$$\n\\lim_{\\delta\\to 0} \\kappa_2(\\mathbf{S}) = \\lim_{s\\to 1^{-}} \\frac{1+s}{1-s} = \\frac{2}{0^{+}} = \\infty\n$$\n无穷大或非常大的条件数表示矩阵$\\mathbf{S}$是奇异的或病态的。求解广义特征值问题$\\mathbf{F}\\mathbf{c}=\\epsilon\\,\\mathbf{S}\\mathbf{c}$通常需要对$\\mathbf{S}$求逆或进行像 Cholesky 分解($\\mathbf{S}=\\mathbf{L}\\mathbf{L}^\\dagger$)或奇异值分解这样的因式分解。对于一个病态矩阵，这些数值过程是高度不稳定的。在求逆或分解过程中，$\\mathbf{S}$元素中的微小数值误差会被极大地放大，导致计算出的特征值$\\epsilon$和特征向量$\\mathbf{c}$出现巨大的、不可靠的误差。因此，具有近线性相关的基组（$\\delta \\to 0$）使得电子结构问题在数值上变得难解。", "answer": "$$\n\\boxed{\\frac{1 + \\exp\\left(-\\frac{\\alpha\\delta^{2}}{4}\\right)}{1 - \\exp\\left(-\\frac{\\alpha\\delta^{2}}{4}\\right)}}\n$$", "id": "2875241"}, {"introduction": "理解了数值不稳定性的来源后，下一步自然是学习如何解决它。本练习[@problem_id:2875252]提供了一个应对由基函数近似线性相关引起的数值问题的实用算法。您将通过编程实现一种基于阈值的裁剪方案，该方案能够系统地识别并移除导致重叠矩阵病态的冗余基函数，从而在最小化完备性损失的同时，恢复计算的稳定性。", "problem": "给定一个单中心阴离子基组，它由一组以原点为中心的归一化原初笛卡尔高斯s型函数构成，通过指数$\\{\\alpha_i\\}_{i=1}^n$定义。每个基函数为\n$$\n\\phi_i(\\mathbf{r}) = N_i \\exp\\!\\big(-\\alpha_i \\lVert \\mathbf{r} \\rVert^2\\big), \\quad N_i = \\left(\\frac{2\\alpha_i}{\\pi}\\right)^{3/4}.\n$$\n重叠矩阵$S \\in \\mathbb{R}^{n \\times n}$的矩阵元为\n$$\nS_{ij} = \\int_{\\mathbb{R}^3} \\phi_i(\\mathbf{r}) \\phi_j(\\mathbf{r}) \\, d\\mathbf{r} = N_i N_j \\left(\\frac{\\pi}{\\alpha_i + \\alpha_j}\\right)^{3/2}.\n$$\n近线性相关表现为$S$的极小特征值。设$S$的谱分解为$S = U \\Lambda U^\\top$，其中$\\Lambda = \\mathrm{diag}(\\lambda_1,\\ldots,\\lambda_n)$且$\\lambda_1 \\le \\cdots \\le \\lambda_n$。给定一个阈值$\\tau > 0$，将任何小于$\\tau$的特征值$\\lambda_k$称为近零模。在阈值$\\tau$下的有效秩定义为大于等于$\\tau$的特征值的数量。\n\n您的任务是实现一个基于阈值的剪枝方案，该方案通过移除基函数来消除近线性相关，同时最小化剩余张成空间的完备性损失：\n- 从给定的指数$\\{\\alpha_i\\}$（全部以$\\mathbf{R} = \\mathbf{0}$为中心）构建重叠矩阵$S$开始。\n- 如果$\\lambda_{\\min}(S) \\ge \\tau$，则不执行任何操作。\n- 否则，执行以下贪心迭代，直到$\\lambda_{\\min}(S) \\ge \\tau$：\n  1. 计算$S = U \\Lambda U^\\top$并确定由特征值$\\lambda_k < \\tau$对应的特征向量所张成的近零子空间$U_0$。\n  2. 构建到近零子空间的正交投影算子$P_0 = U_0 U_0^\\top$。\n  3. 移除使对角元$(P_0)_{kk}$最大化的那个基函数索引$k$，即$k = \\arg\\max_i (P_0)_{ii}$。\n  4. 通过删除$S$的第$k$行和第$k$列来更新$S$，然后重复此过程。\n\n此方案旨在通过优先移除对近零子空间贡献最大的函数，从而保留互补的良态子空间，以最小化完备性的损失。对每个测试用例，您必须报告：\n- 移除的函数数量（一个整数）。\n- 剪枝前的最小特征值（一个浮点数）。\n- 剪枝后的最小特征值（一个浮点数）。\n- 剪枝前在阈值$\\tau$下的有效秩（一个整数）。\n- 剪枝后在阈值$\\tau$下的有效秩（一个整数）。\n\n所有浮点数必须四舍五入到$10$位有效数字后打印。\n\n测试套件：\n- A例（无需剪枝的顺利路径）：指数$\\{\\alpha_i\\} = \\{\\,1.2,\\,0.5,\\,0.2,\\,0.08\\,\\}$，阈值$\\tau = 10^{-10}$。\n- B例（具有多个弥散函数导致近线性相关的阴离子）：指数$\\{\\alpha_i\\} = \\{\\,1.0,\\,0.4,\\,0.15,\\,0.06,\\,0.02,\\,0.008,\\,0.0035\\,\\}$，阈值$\\tau = 10^{-6}$。\n- C例（在单一中心上存在精确重复的边界情况）：指数$\\{\\alpha_i\\} = \\{\\,0.5,\\,0.2,\\,0.04,\\,0.04,\\,0.04,\\,0.015\\,\\}$，阈值$\\tau = 10^{-8}$。\n\n您的程序应生成单行输出，其中包含每个案例的结果，这些结果以逗号分隔的列表形式呈现，每个案例的结果本身也是一个按上述顺序排列的列表。格式必须是单行形式\n$[ [r_1,m_{\\text{before},1},m_{\\text{after},1},e_{\\text{before},1},e_{\\text{after},1}], [r_2,\\dots], [r_3,\\dots] ]$\n，不含空格。例如：$[[1,1e-12,1e-6,4,4],[\\dots],[\\dots]]$。", "solution": "我们从以$\\mathbf{R} = \\mathbf{0}$为中心的归一化原初高斯s型轨道的基本定义开始，\n$$\n\\phi_i(\\mathbf{r}) = N_i \\exp\\!\\big(-\\alpha_i \\lVert \\mathbf{r} \\rVert^2\\big), \\quad N_i = \\left(\\frac{2\\alpha_i}{\\pi}\\right)^{3/4}.\n$$\n对于同一中心上指数为$\\alpha_i$和$\\alpha_j$的两个原初函数，其重叠积分根据高斯乘积法则有已知的闭合形式：\n$$\nS_{ij} = \\int \\phi_i(\\mathbf{r}) \\phi_j(\\mathbf{r}) \\, d\\mathbf{r}\n= N_i N_j \\int \\exp\\!\\big(-(\\alpha_i + \\alpha_j) \\lVert \\mathbf{r} \\rVert^2\\big) \\, d\\mathbf{r}\n= N_i N_j \\left(\\frac{\\pi}{\\alpha_i+\\alpha_j}\\right)^{3/2}.\n$$\n由于归一化，这保证了$S_{ii} = 1$。当函数变得非常相似时（例如，同一中心上非常弥散的指数或重复的指数），格拉姆矩阵$S$会产生非常小的特征值。谱定理指出，一个对称半正定矩阵$S$容许正交对角化$S = U \\Lambda U^\\top$，其特征值$\\{\\lambda_k\\}$为非负。小特征值对应于系数空间中的某些方向，在这些方向上基函数的线性组合其范数几乎为零，即存在近线性相关。\n\n为了检测相对于阈值$\\tau > 0$的近线性相关，我们将有效秩定义为大于等于$\\tau$的特征值的数量。我们的目标是剪枝基函数以移除近零方向，同时尽可能地保留互补子空间。\n\n为了量化哪些基函数最主要地参与构成近零子空间，我们考虑正交投影算子$P_0 = U_0 U_0^\\top$，其中$U_0$的列向量张成了与特征值$\\lambda_k < \\tau$相关联的近零空间。对角元$(P_0)_{ii}$等于第$i$个标准基向量在近零子空间上投影的范数平方；在基函数格拉姆矩阵的背景下，它度量了第$i$个基函数在近零组合中的参与程度。因此，移除使$(P_0)_{kk}$最大化的索引$k$能最有效地减少近零成分，同时对互补的良态子空间造成最小的扰动。这个贪心规则在精神上类似于主元分解（例如，秩显示QR分解或奇异值分解(SVD)），但它是直接根据重叠矩阵的本征结构来表述的。\n\n算法步骤：\n- 输入：指数$\\{\\alpha_i\\}$和阈值$\\tau$。\n- 使用$S_{ij} = N_i N_j (\\pi/(\\alpha_i+\\alpha_j))^{3/2}$和$N_i = (2\\alpha_i/\\pi)^{3/4}$构建$S$。\n- 计算$S$的特征值，记录$\\lambda_{\\min}^{\\text{before}}$和有效秩$r_{\\text{before}} = \\#\\{k : \\lambda_k \\ge \\tau\\}$。\n- 如果$\\lambda_{\\min}(S) \\ge \\tau$，则返回移除数量为零。\n- 否则，迭代：\n  1. 对角化$S = U \\Lambda U^\\top$并为$\\lambda_k < \\tau$选出$U_0$。\n  2. 构建$P_0 = U_0 U_0^\\top$。\n  3. 移除索引$k = \\arg\\max_i (P_0)_{ii}$，从$S$中删除第$k$行和第$k$列。\n  4. 重复此过程，直到$\\lambda_{\\min}(S) \\ge \\tau$。\n- 最后，为剪枝后的$S$计算$\\lambda_{\\min}^{\\text{after}}$和$r_{\\text{after}}$。\n\n该过程在以下意义上保持了完备性。将$\\mathbb{R}^n$分解为近零子空间及其关于欧几里得内积的正交补的直和，这通过$S$对应于基函数的近相关和良态线性组合。通过移除具有最大$(P_0)_{ii}$的基函数，我们在贪心意义上最大程度地减小了近零分量的维度和权重，同时尽可能地保持互补子空间的完整性。因此，完备性的损失——由阈值$\\tau$下有效秩的减少来近似——被最小化了，这一点也得到了算法在测试套件上的行为所证实。\n\n测试套件设计与预期：\n- A例：$\\{\\alpha_i\\} = \\{\\,1.2,\\,0.5,\\,0.2,\\,0.08\\,\\}$，$\\tau = 10^{-10}$。指数间距适中；$\\lambda_{\\min}(S)$预计远大于$\\tau$，因此不会发生剪枝，有效秩保持为$4$。\n- B例：$\\{\\alpha_i\\} = \\{\\,1.0,\\,0.4,\\,0.15,\\,0.06,\\,0.02,\\,0.008,\\,0.0035\\,\\}$，$\\tau = 10^{-6}$。多个非常弥散的指数会产生近线性组合；算法将移除少量最有问题的弥散函数，直到$\\lambda_{\\min}(S) \\ge \\tau$，此时有效秩将与在此阈值下保留的良态模式数量相匹配。\n- C例：$\\{\\alpha_i\\} = \\{\\,0.5,\\,0.2,\\,0.04,\\,0.04,\\,0.04,\\,0.015\\,\\}$，$\\tau = 10^{-8}$。在$\\alpha = 0.04$处的精确重复会产生精确的零特征值；算法将移除重复项，直到只剩下一个代表，此时$\\lambda_{\\min}(S) > 0$且超过$\\tau$。\n\n输出规格：\n- 对于每个案例，返回一个列表$[r_{\\text{removed}}, \\lambda_{\\min}^{\\text{before}}, \\lambda_{\\min}^{\\text{after}}, r_{\\text{before}}, r_{\\text{after}}]$，其中浮点值四舍五入到$10$位有效数字。\n- 打印一行，其中包含三个案例的结果，结果为以逗号分隔的列表，并用方括号括起来，不含空格，例如：$[[1,1e-12,1e-6,4,4],[\\dots],[\\dots]]$。\n\n在给定阈值$\\tau$和基组规格的情况下，该算法是确定性的，并且其输出对于所提供的测试套件是可量化和可验证的。", "answer": "```python\nimport numpy as np\n\ndef normalization_factor(alpha: float) -> float:\n    # N = (2*alpha/pi)^(3/4)\n    return (2.0 * alpha / np.pi) ** 0.75\n\ndef overlap_matrix_same_center(exponents):\n    n = len(exponents)\n    S = np.empty((n, n), dtype=float)\n    # All functions centered at origin; r_ij = 0\n    for i in range(n):\n        ai = exponents[i]\n        Ni = normalization_factor(ai)\n        for j in range(i, n):\n            aj = exponents[j]\n            Nj = normalization_factor(aj)\n            p = ai + aj\n            val = Ni * Nj * (np.pi / p) ** 1.5  # exp(-mu*0) = 1\n            S[i, j] = val\n            S[j, i] = val\n    return S\n\ndef effective_rank(eigs, tau):\n    return int(np.count_nonzero(eigs >= tau))\n\ndef prune_by_projector(S_init, tau):\n    # Returns pruned S, removed indices (relative to original), and stats\n    S = S_init.copy()\n    n0 = S.shape[0]\n    original_indices = list(range(n0))\n    # Pre-stats\n    w0, _ = np.linalg.eigh(S)\n    min_before = float(w0[0])\n    eff_before = effective_rank(w0, tau)\n    removed_indices = []\n\n    # Iterative pruning\n    while True:\n        w, U = np.linalg.eigh(S)\n        min_eig = float(w[0])\n        if min_eig >= tau or S.shape[0] <= 1:\n            break\n        mask = w < tau\n        # If there are near-null modes, form projector onto that subspace\n        if not np.any(mask):\n            break\n        U0 = U[:, mask]\n        P0 = U0 @ U0.T  # projector onto near-null subspace\n        diag = np.diag(P0)\n        k_local = int(np.argmax(diag))\n        removed_indices.append(original_indices[k_local])\n        # Remove row and column k_local\n        S = np.delete(np.delete(S, k_local, axis=0), k_local, axis=1)\n        original_indices.pop(k_local)\n\n    # Post-stats\n    wf, _ = np.linalg.eigh(S)\n    min_after = float(wf[0])\n    eff_after = effective_rank(wf, tau)\n    return S, removed_indices, min_before, min_after, eff_before, eff_after\n\ndef format_float_g(x, sig=10):\n    # Format float to given significant digits without spaces\n    return f\"{x:.{sig}g}\"\n\ndef solve():\n    # Define test cases: (exponents list, tau)\n    test_cases = [\n        ([1.2, 0.5, 0.2, 0.08], 1e-10),                         # Case A\n        ([1.0, 0.4, 0.15, 0.06, 0.02, 0.008, 0.0035], 1e-6),     # Case B\n        ([0.5, 0.2, 0.04, 0.04, 0.04, 0.015], 1e-8),             # Case C\n    ]\n\n    results_str = []\n    for exps, tau in test_cases:\n        S = overlap_matrix_same_center(exps)\n        _, removed, min_before, min_after, eff_before, eff_after = prune_by_projector(S, tau)\n        removed_count = len(removed)\n        # Prepare string for this case with required formatting\n        elems = [\n            str(int(removed_count)),\n            format_float_g(min_before, 10),\n            format_float_g(min_after, 10),\n            str(int(eff_before)),\n            str(int(eff_after)),\n        ]\n        results_str.append(\"[\" + \",\".join(elems) + \"]\")\n\n    print(\"[\" + \",\".join(results_str) + \"]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2875252"}, {"introduction": "基组误差不仅源于数值上的线性相关，也来自于基函数在描述波函数精确形态上的固有缺陷。本练习[@problem_id:2875265]将焦点转向高斯型轨道 (GTO) 的一个关键物理局限：它们无法准确描述原子核附近的电子-核尖点 (cusp)。通过在一个简单的类氢离子体系中进行变分计算，您将亲手量化这种函数形式上的不匹配对动能和核附近电子密度等基本物理量所造成的误差。", "problem": "您的任务是，以一种可通过计算验证的方式，形式化和量化高斯型轨道 (GTO) 基组中电子-原子核尖点的缺失，如何随着基组质量的提高，影响电子动能和近核区域电子密度的收敛性。请在非相对论性、单电子量子力学框架下，对核电荷为$Z$的类氢离子，在 Born–Oppenheimer 近似下进行研究，并使用原子单位（能量单位为 Hartree，长度单位为 bohr）。基本出发点是：单个电子在库仑势中的不含时 Schrödinger 方程、基态的变分原理，以及以原子核为中心的$s$-态的球对称性。您还可以使用以下已知信息：精确的类氢$1s$基态波函数为$\\psi_{\\mathrm{ex}}(r) = \\left(\\frac{Z^{3}}{\\pi}\\right)^{1/2} e^{-Z r}$，相关的电子密度为$\\rho_{\\mathrm{ex}}(r) = \\left|\\psi_{\\mathrm{ex}}(r)\\right|^{2}$，并且根据维里定理，该状态的精确动能为$T_{\\mathrm{ex}} = Z^{2}/2$。不要预先假设任何其他专门的公式；相反，您需要从这些基础出发构建所需内容。\n\n在原子核处，构建一个$n$项均匀回火 (even-tempered) $s$型 GTO 展开式，\n$$\n\\psi_{G}(r) = \\sum_{k=0}^{n-1} c_{k} \\, \\mathcal{N}(\\alpha_{k}) \\, e^{-\\alpha_{k} r^{2}}, \\quad \\alpha_{k} = \\alpha_{0} \\, \\beta^{k},\n$$\n其中归一化因子$\\mathcal{N}(\\alpha)$确保$\\int |\\mathcal{N}(\\alpha) e^{-\\alpha r^{2}}|^{2} \\, d^{3}\\mathbf{r} = 1$。从第一性原理出发，将重叠矩阵$S$、动能矩阵$T$和电子-原子核吸引矩阵$V$表示为球坐标系下同心$s$型高斯函数的三维积分，然后对于给定的$Z$形成哈密顿量$H = T + V$。从广义本征值问题$H \\mathbf{c} = E S \\mathbf{c}$中确定最低本征对$(E_{0}, \\mathbf{c})$，并将$\\mathbf{c}$归一化，使得$\\mathbf{c}^{\\top} S \\mathbf{c} = 1$。\n\n对于每组参数，计算以下两个诊断量，以量化缺失尖点的影响及其随高斯基组质量提高的收敛情况：\n\n1. 动能误差\n$$\n\\Delta T = T_{G} - T_{\\mathrm{ex}},\n$$\n其中$T_{G} = \\mathbf{c}^{\\top} T \\mathbf{c}$且$T_{\\mathrm{ex}} = Z^{2}/2$。\n\n2. 在半径为$r_{c}$的球内积分的近核密度偏差，\n$$\n\\Delta \\rho_{\\mathrm{core}} = \\int_{0}^{r_{c}} \\left| \\rho_{G}(r) - \\rho_{\\mathrm{ex}}(r) \\right| 4 \\pi r^{2} \\, dr,\n$$\n其中$\\rho_{G}(r) = |\\psi_{G}(r)|^{2}$且$\\rho_{\\mathrm{ex}}(r) = \\left(\\frac{Z^{3}}{\\pi}\\right) e^{-2 Z r}$。该积分为无量纲量，代表核心球内电子布居数的绝对误差。\n\n您的程序必须实现$S$、$T$和$V$的构建并求解广义本征值问题。然后，对于下方的每个测试用例，它必须输出一对浮点数$[\\Delta T, \\Delta \\rho_{\\mathrm{core}}]$，其中$\\Delta T$以 Hartree 表示，$\\Delta \\rho_{\\mathrm{core}}$为无量纲量。在所有情况下，距离单位必须为 bohr，能量单位必须为 Hartree。将两个数字都四舍五入到$8$位小数。\n\n用于评估不同收敛机制和边界情况的测试套件：\n-   用例 1：$Z = 1$，$\\alpha_{0} = 0.3$，$\\beta = 2.5$，$n = 1$，$r_{c} = 0.2$。\n-   用例 2：$Z = 1$，$\\alpha_{0} = 0.3$，$\\beta = 2.5$，$n = 3$，$r_{c} = 0.2$。\n-   用例 3：$Z = 1$，$\\alpha_{0} = 0.3$，$\\beta = 2.5$，$n = 8$，$r_{c} = 0.2$。\n-   用例 4：$Z = 2$，$\\alpha_{0} = 0.3$，$\\beta = 2.5$，$n = 8$，$r_{c} = 0.2$。\n-   用例 5：$Z = 1$，$\\alpha_{0} = 5.0$，$\\beta = 3.0$，$n = 3$，$r_{c} = 0.2$。\n-   用例 6：$Z = 1$，$\\alpha_{0} = 0.05$，$\\beta = 1.7$，$n = 6$，$r_{c} = 0.2$。\n\n最终输出格式要求：\n-   您的程序应生成单行输出，其中包含一个结果列表，每个结果都是针对一个测试用例的双元素列表$[\\Delta T, \\Delta \\rho_{\\mathrm{core}}]$，顺序与上文相同。该行必须是一个类似 JSON 的 Python 列表的列表，数字四舍五入到$8$位小数，例如：\n$[\\,[\\Delta T_{1}, \\Delta \\rho_{\\mathrm{core},1}], [\\Delta T_{2}, \\Delta \\rho_{\\mathrm{core},2}], \\dots ]$。", "solution": "所述问题是有效的。它是在计算量子化学领域一个标准的、良构的练习，其基础是变分法和基组理论的基本原理。所有必要的参数和定义都已提供，从而可以得到一个唯一且可验证的数值解。其目标是量化因使用高斯型轨道 (GTO) 而引入的误差，GTO 内在地缺乏原子体系的 Schrödinger 方程精确解中所存在的电子-原子核尖点。\n\n理论框架是针对核电荷为$Z$的原子核的中心库仑势$V(r) = -Z/r$中单个电子的不含时 Schrödinger 方程$H\\psi = E\\psi$。在原子单位中，哈密顿算符为$H = T + V = -\\frac{1}{2}\\nabla^2 - \\frac{Z}{r}$。根据变分原理，基态波函数被近似为基函数的线性组合$\\psi_G(r)$。该原理保证了任何试探波函数的能量期望值都是真实基态能量$E_{\\mathrm{ex}}$的一个上界，即$E_G = \\frac{\\langle \\psi_G | H | \\psi_G \\rangle}{\\langle \\psi_G | \\psi_G \\rangle} \\ge E_{\\mathrm{ex}}$。\n\n我们采用一个由$n$个同心$s$型 GTO 组成的均匀回火 (even-tempered) 基组：\n$$\n\\psi_{G}(r) = \\sum_{k=0}^{n-1} c_{k} \\, \\phi_k(r)\n$$\n其中原初高斯函数$\\phi_k(r)$由下式给出：\n$$\n\\phi_k(r) = \\mathcal{N}(\\alpha_k) e^{-\\alpha_k r^2} \\quad \\text{且} \\quad \\alpha_k = \\alpha_0 \\beta^k\n$$\n因子$\\mathcal{N}(\\alpha_k) = \\left(\\frac{2\\alpha_k}{\\pi}\\right)^{3/4}$确保每个原初高斯函数都归一化为 1，即$\\langle \\phi_k | \\phi_k \\rangle = 1$。对能量泛函关于线性系数$\\{c_k\\}$进行最小化，可得到广义本征值问题，也称为 Roothaan-Hall 方程：\n$$\nH \\mathbf{c} = E S \\mathbf{c}\n$$\n其中$H$是哈密顿矩阵，$S$是重叠矩阵，$\\mathbf{c}$是由系数$c_k$构成的列向量，$E$是能量本征值。矩阵元定义为$S_{ij} = \\langle \\phi_i | \\phi_j \\rangle$和$H_{ij} = \\langle \\phi_i | H | \\phi_j \\rangle = T_{ij} + V_{ij}$。\n\n从第一性原理出发，使用球坐标系下的标准三维高斯积分，我们推导出两个指数为$\\alpha_i$和$\\alpha_j$的归一化同心$s$型 GTO $\\phi_i$和$\\phi_j$的矩阵元：\n\n1. **重叠矩阵 $S$**：\n重叠积分由下式给出：\n$$\nS_{ij} = \\langle \\phi_i | \\phi_j \\rangle = \\int \\phi_i^*(r) \\phi_j(r) d^3\\mathbf{r} = \\left(\\frac{4\\alpha_i \\alpha_j}{(\\alpha_i+\\alpha_j)^2}\\right)^{3/4}\n$$\n此公式由标准积分$\\int_0^\\infty r^2 e^{-ar^2} dr = \\frac{\\sqrt{\\pi}}{4a^{3/2}}$导出。当$i=j$时，$S_{ii}=1$，符合归一化基函数的要求。\n\n2. **动能矩阵 $T$**：\n动能矩阵元$T_{ij} = \\langle \\phi_i | -\\frac{1}{2}\\nabla^2 | \\phi_j \\rangle$使用关系式$T_{ij} = \\frac{1}{2}\\int (\\nabla \\phi_i) \\cdot (\\nabla \\phi_j) d^3\\mathbf{r}$计算最为方便。这导出了一个紧凑表达式：\n$$\nT_{ij} = \\frac{3\\alpha_i\\alpha_j}{\\alpha_i+\\alpha_j} S_{ij}\n$$\n\n3. **核吸引矩阵 $V$**：\n势能矩阵元$V_{ij} = \\langle \\phi_i | -Z/r | \\phi_j \\rangle$计算结果为：\n$$\nV_{ij} = -\\frac{2\\pi Z}{\\alpha_i+\\alpha_j}\\mathcal{N}(\\alpha_i)\\mathcal{N}(\\alpha_j) = -2 Z \\sqrt{\\frac{\\pi}{\\alpha_i+\\alpha_j}} S_{ij} \\left(\\frac{(\\alpha_i+\\alpha_j)^2}{4\\alpha_i\\alpha_j}\\right)^{3/4} \\frac{(\\alpha_i+\\alpha_j)}{\\pi}\n$$\n一个更直接的用于实现的公式是：\n$$\nV_{ij} = \\mathcal{N}_i \\mathcal{N}_j \\int_0^\\infty e^{-(\\alpha_i+\\alpha_j)r^2} \\left(-\\frac{Z}{r}\\right) 4\\pi r^2 dr = - \\frac{2\\pi Z \\mathcal{N}_i \\mathcal{N}_j}{\\alpha_i+\\alpha_j}\n= -\\frac{2Z}{\\sqrt{\\pi}} \\frac{(4\\alpha_i\\alpha_j)^{3/4}}{\\alpha_i+\\alpha_j}\n$$\n\n利用这些矩阵，我们求解$H\\mathbf{c} = E S \\mathbf{c}$得到最低本征值$E_0$和对应的本征向量$\\mathbf{c}_0$，该向量被归一化以满足$\\mathbf{c}_0^\\top S \\mathbf{c}_0 = 1$。然后计算诊断量：\n\n1. **动能误差 $\\Delta T$**：GTO 波函数的动能为$T_G = \\mathbf{c}_0^\\top T \\mathbf{c}_0$。根据维里定理，类氢系统的精确值为$T_{\\mathrm{ex}} = -E_{\\mathrm{ex}} = Z^2/2$。误差为$\\Delta T = T_G - T_{\\mathrm{ex}}$。GTO 波函数在原子核处过分平滑（$d\\psi_G/dr|_{r=0}=0$），无法再现精确波函数的尖锐尖点，而精确波函数在$r=0$处具有发散的局域动能。这一缺陷预计会体现在总动能期望值中，尤其是在收敛良好的基组中。\n\n2. **近核密度偏差 $\\Delta \\rho_{\\mathrm{core}}$**：该度量量化了原子核附近电子概率密度的错误表示。它是 GTO 密度$\\rho_G(r) = |\\psi_G(r)|^2$与精确密度$\\rho_{\\mathrm{ex}}(r) = (Z^3/\\pi)e^{-2Zr}$之间绝对差在一个半径为$r_c$的小球内的积分：\n$$\n\\Delta \\rho_{\\mathrm{core}} = \\int_{0}^{r_{c}} \\left| \\rho_{G}(r) - \\rho_{\\mathrm{ex}}(r) \\right| 4 \\pi r^{2} \\, dr\n$$\n该积分使用数值积分方法计算。\n\n计算流程如下：\n对于每个测试用例，我们生成指数$\\alpha_k$。然后，我们构建尺寸为$n \\times n$的对称矩阵$S$、$T$和$V$。哈密顿量$H = T+V$被构建出来。使用标准库例程（`scipy.linalg.eigh`）求解广义本征值问题，得到一组本征值和本征向量。最低本征值及其关联的本征向量定义了基态近似。使用此本征向量，计算$T_G$。最后，对$\\Delta\\rho_{\\mathrm{core}}$的积分进行数值计算。对每组参数重复这些步骤。", "answer": "```python\nimport numpy as np\nfrom scipy import linalg, integrate\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases and prints the results.\n    \"\"\"\n    test_cases = [\n        # Z, alpha0, beta, n, rc\n        (1.0, 0.3, 2.5, 1, 0.2),\n        (1.0, 0.3, 2.5, 3, 0.2),\n        (1.0, 0.3, 2.5, 8, 0.2),\n        (2.0, 0.3, 2.5, 8, 0.2),\n        (1.0, 5.0, 3.0, 3, 0.2),\n        (1.0, 0.05, 1.7, 6, 0.2),\n    ]\n\n    results = []\n    for case in test_cases:\n        Z, alpha0, beta, n, rc = case\n        delta_T, delta_rho_core = calculate_diagnostics(Z, alpha0, beta, n, rc)\n        results.append([round(delta_T, 8), round(delta_rho_core, 8)])\n\n    # The output format must be a string representation of a Python list of lists.\n    print(str(results))\n\n\ndef calculate_diagnostics(Z, alpha0, beta, n, rc):\n    \"\"\"\n    Performs the full quantum chemical calculation for a single test case.\n\n    Args:\n        Z (float): Nuclear charge.\n        alpha0 (float): Initial exponent for the even-tempered basis.\n        beta (float): Progression factor for the exponents.\n        n (int): Number of basis functions.\n        rc (float): Radius of the core sphere for density deviation calculation.\n\n    Returns:\n        tuple[float, float]: A tuple containing the kinetic energy error (delta_T)\n                             and the near-nuclear density deviation (delta_rho_core).\n    \"\"\"\n    # 1. Generate exponents\n    alphas = np.array([alpha0 * beta**k for k in range(n)])\n\n    # 2. Construct S, T, and V matrices\n    S = np.zeros((n, n))\n    T = np.zeros((n, n))\n    V = np.zeros((n, n))\n\n    for i in range(n):\n        for j in range(i, n):\n            alpha_i = alphas[i]\n            alpha_j = alphas[j]\n            alpha_sum = alpha_i + alpha_j\n            \n            # Normalization constants product: N_i * N_j\n            # N_k = (2*alpha_k/pi)^(3/4)\n            # N_i * N_j = ((4 * alpha_i * alpha_j) / pi^2)^(3/4)\n            norm_prod_term = (4 * alpha_i * alpha_j)**(3.0/4.0)\n\n            # Overlap matrix element S_ij\n            # S_ij = (4*alpha_i*alpha_j / (alpha_i+alpha_j)^2)^(3/4)\n            #  or N_i*N_j * (pi/(alpha_i+alpha_j))^(3/2)\n            s_ij = (norm_prod_term / np.pi**(3.0/2.0)) * (np.pi / alpha_sum)**(3.0/2.0)\n            S[i, j] = S[j, i] = s_ij\n\n            # Kinetic energy matrix element T_ij\n            # T_ij = (3*alpha_i*alpha_j / (alpha_i+alpha_j)) * S_ij\n            t_ij = (3.0 * alpha_i * alpha_j / alpha_sum) * s_ij\n            T[i, j] = T[j, i] = t_ij\n\n            # Nuclear attraction matrix element V_ij\n            # V_ij = -2*Z/sqrt(pi) * ( (4*alpha_i*alpha_j)^(3/4) / (alpha_i+alpha_j) )\n            v_ij = -2.0 * Z / np.sqrt(np.pi) * (norm_prod_term / alpha_sum)\n            V[i, j] = V[j, i] = v_ij\n\n    # 3. Form Hamiltonian and solve the generalized eigenvalue problem\n    H = T + V\n    # SciPy's eigh returns eigenvalues in ascending order and corresponding\n    # eigenvectors as columns. Eigenvectors are normalized such that c.T @ S @ c = I.\n    eigenvalues, eigenvectors = linalg.eigh(H, S)\n    \n    # The ground state is the one with the lowest energy\n    E0 = eigenvalues[0]\n    c0 = eigenvectors[:, 0]\n\n    # 4. Calculate kinetic energy error\n    T_G = c0.T @ T @ c0\n    T_ex = Z**2 / 2.0\n    delta_T = T_G - T_ex\n\n    # 5. Calculate near-nuclear density deviation\n    \n    # Pre-calculate combined coefficients c_k * N_k for efficiency\n    norm_coeffs = c0 * (2 * alphas / np.pi)**(0.75)\n\n    def psi_G(r):\n        \"\"\"Calculates the value of the GTO wavefunction at radius r.\"\"\"\n        # Using a vectorized operation for performance\n        return np.sum(norm_coeffs * np.exp(-alphas * r**2))\n\n    def integrand(r):\n        \"\"\"The integrand |rho_G(r) - rho_ex(r)| * 4*pi*r^2 for numerical integration.\"\"\"\n        rho_G_r = psi_G(r)**2\n        rho_ex_r = (Z**3 / np.pi) * np.exp(-2 * Z * r)\n        return np.abs(rho_G_r - rho_ex_r) * 4 * np.pi * r**2\n\n    delta_rho_core, _ = integrate.quad(integrand, 0, rc)\n\n    return delta_T, delta_rho_core\n\n# Execute the main function when the script is run.\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2875265"}]}