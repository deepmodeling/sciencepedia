{"hands_on_practices": [{"introduction": "虽然精确的密度泛函理论在理论上是完美的，但我们实际使用的近似泛函却并非如此。其中一个最基本的误差是自相互作用误差（self-interaction error, SIE）。这个练习提供了一种直接的方法，在可以想象到的最简单的体系——氢原子——中量化这一误差，因为我们知道其精确的自相互作用能应为零。通过解析计算局域密度近似（LDA）和一个简单的广义梯度近似（GGA）的残余误差，你将对这个普遍存在的问题获得一个具体而深刻的理解。", "problem": "考虑在Kohn–Sham密度泛函理论（KS-DFT）框架下，一个处于非相对论基态的单电子氢原子。其空间轨道为归一化的类氢$1s$函数，且该电子是完全自旋极化的。使用哈特里原子单位，此时玻尔半径满足$a_0 = 1$，电子密度是球对称的，等于\n\n$$\nn(r) \\;=\\; \\frac{1}{\\pi}\\,\\exp(-2 r),\n$$\n\n且系统恰好只有一个电子。\n\n从第一性原理和标准定义出发，完成以下任务：\n\n- 使用经典哈特里静电能的定义，\n\n$$\nE_{\\mathrm{H}}[n] \\;=\\; \\frac{1}{2}\\int \\!\\! \\int \\frac{n(\\mathbf{r})\\,n(\\mathbf{r}')}{|\\mathbf{r}-\\mathbf{r}'|}\\,d\\mathbf{r}\\,d\\mathbf{r}',\n$$\n\n以及斯莱特行列式的哈特里-福克交换能，\n\n$$\nE_{x}^{\\mathrm{HF}}[\\{\\varphi_i\\}] \\;=\\; -\\frac{1}{2}\\sum_{i,j}\\int \\!\\! \\int \\frac{\\varphi_i(\\mathbf{r})\\,\\varphi_j^{*}(\\mathbf{r})\\,\\varphi_j(\\mathbf{r}')\\,\\varphi_i^{*}(\\mathbf{r}')}{|\\mathbf{r}-\\mathbf{r}'|}\\,d\\mathbf{r}\\,d\\mathbf{r}',\n$$\n\n从这些定义出发，验证对于单电子系统，$E_{\\mathrm{H}} + E_{x}^{\\mathrm{exact}} = 0$，其中$E_{x}^{\\mathrm{exact}}$表示在给定密度下计算的精确交换能泛函。\n\n- 接下来，对于两种近似交换泛函，量化定义为$E_{\\mathrm{H}} + E_{x}^{\\mathrm{approx}}$的残余自相互作用误差：\n  1. 用于自旋密度泛函理论的局域密度近似（LDA）交换能，\n  \n$$\n  E_{x}^{\\mathrm{LDA}}[n_{\\uparrow},n_{\\downarrow}] \\;=\\; -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}\\int \\left(n_{\\uparrow}^{4/3} + n_{\\downarrow}^{4/3}\\right)\\,d\\mathbf{r},\n  $$\n\n  在完全自旋极化的氢原子密度$n_{\\uparrow} = n$, $n_{\\downarrow} = 0$下进行计算。\n  2. 用于交换能的二阶梯度展开（一种广义梯度近似（GGA）的原型），\n  \n$$\n  E_{x}^{\\mathrm{GEA2}}[n] \\;=\\; -C_{x}\\int n(\\mathbf{r})^{4/3}\\left[1 + \\mu\\,s(\\mathbf{r})^{2}\\right]\\,d\\mathbf{r},\n  $$\n\n  其中$C_{x} = \\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}$，$\\mu = \\frac{10}{81}$，约化梯度为$s(\\mathbf{r}) = \\frac{|\\nabla n(\\mathbf{r})|}{2 k_{F}(\\mathbf{r})\\,n(\\mathbf{r})}$，局域费米波矢为$k_{F}(\\mathbf{r}) = \\left(3\\pi^{2} n(\\mathbf{r})\\right)^{1/3}$。\n\n推导两种残余自相互作用误差的解析闭合形式表达式，\n\n$$\n\\Delta_{\\mathrm{LDA}} \\;=\\; E_{\\mathrm{H}}[n] + E_{x}^{\\mathrm{LDA}}[n_{\\uparrow}=n,n_{\\downarrow}=0], \n\\quad\n\\Delta_{\\mathrm{GEA2}} \\;=\\; E_{\\mathrm{H}}[n] + E_{x}^{\\mathrm{GEA2}}[n],\n$$\n\n表达式应由有理数以及$\\pi$和$3$的幂次构成。将最终答案表示为行矩阵$\\bigl[\\Delta_{\\mathrm{LDA}}\\;\\;\\Delta_{\\mathrm{GEA2}}\\bigr]$的形式，并使用哈特里（$\\mathrm{E_h}$）作为能量单位。无需进行数值取整；请给出精确表达式。", "solution": "问题陈述在科学上是合理的、适定的和客观的。所有给出的定义、常数和物理量在密度泛函理论框架内都是标准的，或是为本问题专门定义的。此任务是一项严谨且可验证的计算。因此，该问题被认定为有效，并将提供完整解答。\n\n本问题要求对单电子系统（具体为基态氢原子）中的自相互作用进行两部分分析。所有计算均在哈特里原子单位（$e=m_e=\\hbar=1$, $a_0=1$）下进行。\n\n第一部分：精确自相互作用抵消的验证\n\n对于任意单电子系统，其基态电子密度$n(\\mathbf{r})$由单个占据轨道$\\varphi_1(\\mathbf{r})$的模平方给出，即$n(\\mathbf{r}) = |\\varphi_1(\\mathbf{r})|^2$。由于氢原子的$1s$轨道是实函数，我们有$n(\\mathbf{r}) = \\varphi_1(\\mathbf{r})^2$。\n\n哈特里能定义为：\n$$\nE_{\\mathrm{H}}[n] = \\frac{1}{2}\\int \\!\\! \\int \\frac{n(\\mathbf{r})\\,n(\\mathbf{r}')}{|\\mathbf{r}-\\mathbf{r}'|}\\,d\\mathbf{r}\\,d\\mathbf{r}'\n$$\n代入$n(\\mathbf{r}) = \\varphi_1(\\mathbf{r})^2$，我们得到：\n$$\nE_{\\mathrm{H}}[n] = \\frac{1}{2}\\int \\!\\! \\int \\frac{\\varphi_1(\\mathbf{r})^2\\,\\varphi_1(\\mathbf{r}')^2}{|\\mathbf{r}-\\mathbf{r}'|}\\,d\\mathbf{r}\\,d\\mathbf{r}'\n$$\n精确交换能$E_{x}^{\\mathrm{exact}}$由作用在精确Kohn-Sham轨道上的哈特里-福克交换能表达式给出。对于单电子系统，只有一个轨道$\\varphi_1$。在$E_{x}^{\\mathrm{HF}}$的定义中，对$i$和$j$的求和各自只有一项，即$i=j=1$。\n$$\nE_{x}^{\\mathrm{exact}} = E_{x}^{\\mathrm{HF}}[\\{\\varphi_1\\}] = -\\frac{1}{2}\\int \\!\\! \\int \\frac{\\varphi_1(\\mathbf{r})\\,\\varphi_1^{*}(\\mathbf{r})\\,\\varphi_1(\\mathbf{r}')\\,\\varphi_1^{*}(\\mathbf{r}')}{|\\mathbf{r}-\\mathbf{r}'|}\\,d\\mathbf{r}\\,d\\mathbf{r}'\n$$\n由于$\\varphi_1$是实函数，$\\varphi_1^* = \\varphi_1$。表达式简化为：\n$$\nE_{x}^{\\mathrm{exact}} = -\\frac{1}{2}\\int \\!\\! \\int \\frac{\\varphi_1(\\mathbf{r})^2\\,\\varphi_1(\\mathbf{r}')^2}{|\\mathbf{r}-\\mathbf{r}'|}\\,d\\mathbf{r}\\,d\\mathbf{r}'\n$$\n将此式与哈特里能的表达式进行比较，我们发现：\n$$\nE_{x}^{\\mathrm{exact}} = -E_{\\mathrm{H}}[n]\n$$\n因此，对于任意单电子系统，哈特里能与精确交换能之和恒为零：\n$$\nE_{\\mathrm{H}}[n] + E_{x}^{\\mathrm{exact}} = 0\n$$\n这证明了在精确理论中，自相互作用被完全抵消。然而，近似泛函通常不满足此条件，从而导致残余的自相互作用误差。\n\n第二部分：残余自相互作用误差的计算\n\n我们必须计算$\\Delta_{\\mathrm{LDA}} = E_{\\mathrm{H}}[n] + E_{x}^{\\mathrm{LDA}}[n]$和$\\Delta_{\\mathrm{GEA2}} = E_{\\mathrm{H}}[n] + E_{x}^{\\mathrm{GEA2}}[n]$。第一步是计算给定密度$n(r) = \\frac{1}{\\pi}\\exp(-2r)$下的哈特里能$E_{\\mathrm{H}}$。\n\n哈特里能$E_{\\mathrm{H}}$的计算\n哈特里能是电荷分布$n(\\mathbf{r})$的静电自能。它可以表示为$E_{\\mathrm{H}} = \\frac{1}{2}\\int n(\\mathbf{r}) V_{\\mathrm{H}}(\\mathbf{r}) \\,d\\mathbf{r}$，其中$V_{\\mathrm{H}}(\\mathbf{r})$是由$n(\\mathbf{r})$产生的静电势。对于球对称密度，其势为：\n$$\nV_{\\mathrm{H}}(r) = \\frac{1}{r} \\int_0^r n(r') 4\\pi r'^2 dr' + \\int_r^\\infty \\frac{n(r') 4\\pi r'^2}{r'} dr'\n$$\n使用$n(r) = \\frac{1}{\\pi}\\exp(-2r)$，积分得出$V_{\\mathrm{H}}(r) = \\frac{1}{r} - \\left(\\frac{1}{r}+1\\right)\\exp(-2r)$。\n现在我们计算$E_{\\mathrm{H}}$：\n$$\nE_{\\mathrm{H}} = \\frac{1}{2} \\int_0^\\infty V_{\\mathrm{H}}(r) n(r) 4\\pi r^2 dr = \\frac{1}{2} \\int_0^\\infty \\left[\\frac{1}{r} - \\left(\\frac{1}{r}+1\\right)\\exp(-2r)\\right] \\left(\\frac{1}{\\pi}\\exp(-2r)\\right) 4\\pi r^2 dr\n$$\n$$\nE_{\\mathrm{H}} = 2 \\int_0^\\infty \\left[ r\\exp(-2r) - (r+r^2)\\exp(-4r) \\right] dr\n$$\n我们使用标准积分$\\int_0^\\infty x^k \\exp(-ax) dx = k!/a^{k+1}$：\n- $\\int_0^\\infty r\\exp(-2r) dr = 1!/2^2 = \\frac{1}{4}$\n- $\\int_0^\\infty r^2\\exp(-4r) dr = 2!/4^3 = \\frac{2}{64} = \\frac{1}{32}$\n- $\\int_0^\\infty r\\exp(-4r) dr = 1!/4^2 = \\frac{1}{16}$\n代入这些结果：\n$$\nE_{\\mathrm{H}} = 2 \\left[ \\frac{1}{4} - \\left(\\frac{1}{16} + \\frac{1}{32}\\right) \\right] = 2 \\left[ \\frac{8}{32} - \\frac{2}{32} - \\frac{1}{32} \\right] = 2 \\left( \\frac{5}{32} \\right) = \\frac{5}{16}\n$$\n\nLDA自相互作用误差$\\Delta_{\\mathrm{LDA}}$的计算\n问题给出了自旋极化系统（$n_{\\uparrow}=n, n_{\\downarrow}=0$）的LDA交换能泛函为：\n$$\nE_{x}^{\\mathrm{LDA}}[n] = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}\\int n(\\mathbf{r})^{4/3}\\,d\\mathbf{r}\n$$\n我们计算积分$\\int n(\\mathbf{r})^{4/3}\\,d\\mathbf{r}$：\n$$\n\\int n(r)^{4/3} 4\\pi r^2 dr = \\int_0^\\infty \\left(\\frac{1}{\\pi}\\exp(-2r)\\right)^{4/3} 4\\pi r^2 dr = 4\\pi \\pi^{-4/3} \\int_0^\\infty r^2 \\exp\\left(-\\frac{8}{3}r\\right) dr\n$$\n$$\n= 4\\pi^{-1/3} \\left( \\frac{2!}{(8/3)^3} \\right) = 4\\pi^{-1/3} \\left( \\frac{2}{512/27} \\right) = 4\\pi^{-1/3} \\left( \\frac{54}{512} \\right) = \\frac{27}{64}\\pi^{-1/3}\n$$\n现在我们将此结果代入$E_{x}^{\\mathrm{LDA}}$的表达式：\n$$\nE_{x}^{\\mathrm{LDA}} = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3} \\left(\\frac{27}{64}\\pi^{-1/3}\\right) = -\\frac{3}{4} \\frac{3^{1/3}}{\\pi^{1/3}} \\frac{27}{64\\pi^{1/3}} = -\\frac{81 \\cdot 3^{1/3}}{256 \\pi^{2/3}} = -\\frac{3^{4} \\cdot 3^{1/3}}{256 \\pi^{2/3}} = -\\frac{3^{13/3}}{256 \\pi^{2/3}}\n$$\nLDA的残余自相互作用误差为：\n$$\n\\Delta_{\\mathrm{LDA}} = E_{\\mathrm{H}} + E_{x}^{\\mathrm{LDA}} = \\frac{5}{16} - \\frac{3^{13/3}}{256 \\pi^{2/3}}\n$$\n\nGEA2自相互作用误差$\\Delta_{\\mathrm{GEA2}}$的计算\nGEA2交换能由下式给出：\n$$\nE_{x}^{\\mathrm{GEA2}}[n] = -C_{x}\\int n^{4/3}\\left[1 + \\mu\\,s^{2}\\right]\\,d\\mathbf{r} = E_{x}^{\\mathrm{LDA}} - C_x \\mu \\int n^{4/3}s^2\\,d\\mathbf{r}\n$$\n我们需要计算梯度修正项。首先，我们求出约化梯度$s$：\n$s = \\frac{|\\nabla n|}{2 k_F n}$，其中$k_F = (3\\pi^2 n)^{1/3}$。\n对于给定的密度，$\\nabla n = \\frac{dn}{dr}\\hat{\\mathbf{r}} = -2 \\frac{1}{\\pi}\\exp(-2r) \\hat{\\mathbf{r}} = -2n\\hat{\\mathbf{r}}$，所以$|\\nabla n| = 2n$。\n$$\ns = \\frac{2n}{2 (3\\pi^2 n)^{1/3} n} = \\frac{1}{(3\\pi^2 n)^{1/3}} \\implies s^2 = \\frac{1}{(3\\pi^2 n)^{2/3}} = \\frac{1}{3^{2/3}\\pi^{4/3}n^{2/3}}\n$$\n修正项的被积函数为$n^{4/3}s^2$：\n$$\nn^{4/3}s^2 = n^{4/3} \\frac{1}{3^{2/3}\\pi^{4/3}n^{2/3}} = \\frac{n^{2/3}}{3^{2/3}\\pi^{4/3}}\n$$\n梯度修正能量为：\n$$\n\\Delta E_{x}^{\\mathrm{GEA2}} = -C_x \\mu \\int \\frac{n^{2/3}}{3^{2/3}\\pi^{4/3}}\\,d\\mathbf{r} = -\\frac{C_x \\mu}{3^{2/3}\\pi^{4/3}} \\int n^{2/3}\\,d\\mathbf{r}\n$$\n我们计算积分$\\int n^{2/3}\\,d\\mathbf{r}$：\n$$\n\\int n(r)^{2/3} 4\\pi r^2 dr = \\int_0^\\infty \\left(\\frac{1}{\\pi}\\exp(-2r)\\right)^{2/3} 4\\pi r^2 dr = 4\\pi \\pi^{-2/3} \\int_0^\\infty r^2 \\exp\\left(-\\frac{4}{3}r\\right) dr\n$$\n$$\n= 4\\pi^{1/3} \\left( \\frac{2!}{(4/3)^3} \\right) = 4\\pi^{1/3} \\left( \\frac{2}{64/27} \\right) = 4\\pi^{1/3} \\left( \\frac{54}{64} \\right) = \\frac{27}{8}\\pi^{1/3}\n$$\n将此结果与$C_x = \\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}$和$\\mu = \\frac{10}{81}$一起代回：\n$$\n\\Delta E_{x}^{\\mathrm{GEA2}} = -\\left(\\frac{3}{4}\\frac{3^{1/3}}{\\pi^{1/3}}\\right) \\left(\\frac{10}{81}\\right) \\frac{1}{3^{2/3}\\pi^{4/3}} \\left(\\frac{27}{8}\\pi^{1/3}\\right)\n$$\n$$\n= -\\frac{3 \\cdot 10 \\cdot 27}{4 \\cdot 81 \\cdot 8} \\frac{3^{1/3}}{3^{2/3}} \\frac{\\pi^{1/3}}{\\pi^{1/3}\\pi^{4/3}} = -\\frac{810}{2592} \\cdot 3^{-1/3} \\pi^{-4/3} = -\\frac{5 \\cdot 162}{16 \\cdot 162} \\cdot 3^{-1/3} \\pi^{-4/3} = -\\frac{5}{16} 3^{-1/3} \\pi^{-4/3}\n$$\n总的GEA2交换能为$E_{x}^{\\mathrm{GEA2}} = E_{x}^{\\mathrm{LDA}} + \\Delta E_{x}^{\\mathrm{GEA2}}$。残余自相互作用误差是：\n$$\n\\Delta_{\\mathrm{GEA2}} = E_{\\mathrm{H}} + E_{x}^{\\mathrm{GEA2}} = \\frac{5}{16} - \\frac{3^{13/3}}{256 \\pi^{2/3}} - \\frac{5}{16} 3^{-1/3} \\pi^{-4/3}\n$$\n最终结果是$\\Delta_{\\mathrm{LDA}}$和$\\Delta_{\\mathrm{GEA2}}$的表达式。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{5}{16} - \\frac{3^{13/3}}{256 \\pi^{2/3}} & \\frac{5}{16} - \\frac{3^{13/3}}{256 \\pi^{2/3}} - \\frac{5 \\cdot 3^{-1/3}}{16 \\pi^{4/3}} \\end{pmatrix}}\n$$", "id": "2901403"}, {"introduction": "在自相互作用概念的基础上，本练习将探讨其最关键的后果之一：离域误差（delocalization error）。这种误差表现为近似泛函的一种病态倾向，即过度地将电子密度散开，导致错误的解离能和电荷转移预测。本实践采用一个简化的拉伸原子链模型，展示了该误差如何与能量 $E$ 随粒子数 $N$ 变化的片区线性条件的违背相关联，并允许你在不同类别的泛函之间进行定量比较。", "problem": "请考虑一个由 $M$ 个等距分布的相同位点组成的一维拉伸氢链，位点间的交叠可忽略不计。在基于 Kohn–Sham 轨道的密度泛函理论（DFT）框架下，使用以下具有物理基础的最小模型来研究离域误差以及能量相对于分数电子数的逐段线性性质。假设对于一个固定的整数基线电子数 $N_0$（每个位点一个电子），我们考虑添加一个分数电子量 $\\omega \\in [0,1]$，因此总电子数为 $N = N_0 + \\omega$。精确 DFT 能量作为 $N$ 的函数，在整数之间是逐段线性的；任何相对于 $\\omega$ 的曲率都标志着离域误差。\n\n通过在每个位点 $i$ 上定义一个类似于 Hartree 的局域二次项来模拟近似泛函中对能量的赝自相互作用贡献，该项与位点占据数 $n_i$ 的平方成正比，比例参数为 $J$（单位为 Hartree）。对于一个给定的近似泛函，总的赝自相互作用能贡献为\n$$\nE_{\\text{SI}} = s \\, J \\sum_{i=1}^M n_i^2,\n$$\n其中 $s$ 是一个无量纲且依赖于泛函的标度因子。采用以下固定的标度分配：\n- 局域密度近似（LDA）：$s_{\\mathrm{LDA}} = 1.0$，\n- 广义梯度近似（GGA）：$s_{\\mathrm{GGA}} = 0.85$，\n- 广义 Kohn–Sham 意义下的杂化泛函，其精确交换组分分数为 $\\lambda \\in [0,1]$：$s_{\\mathrm{HYB}} = 1 - \\lambda$。\n\n您可以假设，在固定的分数电子量 $\\omega$ 下，表现出离域误差的近似泛函会通过最小化 $E_{\\text{SI}}$ 来分布所添加的分数电荷，同时满足过剩电荷的约束条件 $\\sum_i n_i = \\omega$，这导致所添加的电荷均匀分布在 $M$ 个位点上。此外，为了诊断相对于逐段线性基线的曲率，将 $E_{\\text{linear}}(\\omega)$ 定义为连接在同一近似泛函内一致计算的整数 $N$ 端点能量的直线。线性度的偏离则通过差值 $E_{\\text{approx}}(\\omega) - E_{\\text{linear}}(\\omega)$ 来量化，对于这种拉伸极限下的离域近似，该差值在区间内部为负，并在端点 $\\omega=0$ 和 $\\omega=1$ 处为零。\n\n任务：\n1. 仅从赝自相互作用能的定义、精确 DFT 能量的逐段线性性质以及关于分数电荷分布的约束最小化出发，推导中点处曲率的闭式表达式\n$$\n\\mathcal{C} \\equiv \\left.\\frac{d^2 E_{\\text{approx}}}{d\\omega^2}\\right|_{\\omega=\\tfrac{1}{2}},\n$$\n表示为 $M$、$J$ 和 $s$ 的函数。\n2. 推导逐段线性度的积分绝对偏差的闭式表达式，\n$$\n\\mathcal{D} \\equiv \\int_0^1 \\left| E_{\\text{approx}}(\\omega) - E_{\\text{linear}}(\\omega)\\right| \\, d\\omega,\n$$\n表示为 $M$、$J$ 和 $s$ 的函数。\n3. 实现一个程序，对于下面列出的每个测试用例，计算三种泛函（LDA、GGA 和具有指定 $\\lambda$ 的杂化泛函）的值对 $\\left[\\mathcal{C}, \\mathcal{D}\\right]$，单位为 Hartree。\n\n重要约束和说明：\n- 您必须仅使用上述假设和定义；不要引入任何未提及的公式。\n- 曲率 $\\mathcal{C}$ 和积分绝对偏差 $\\mathcal{D}$ 都必须以 Hartree 为单位表示和报告。\n- 不涉及角度；不需要角度单位。\n- 添加的分数电荷为 $\\omega \\in [0,1]$，并且必须遵守 $E_{\\text{approx}}(\\omega) - E_{\\text{linear}}(\\omega)$ 在 $\\omega=0$ 和 $\\omega=1$ 处为零的要求。\n- 您的算法可以解析或数值地计算积分，只要它与从所述模型进行的推导一致即可。\n\n测试套件：\n为以下四个参数集 $(M, J, \\lambda)$ 提供输出：\n- 情况 A（理想路径）：$(M, J, \\lambda) = (10, 0.6, 0.25)$，\n- 情况 B（边界条件，最小链）：$(M, J, \\lambda) = (1, 0.6, 0.25)$，\n- 情况 C（长链，更强的杂化混合）：$(M, J, \\lambda) = (50, 1.0, 0.5)$，\n- 情况 D（边缘情况，无自相互作用标度）：$(M, J, \\lambda) = (20, 0.0, 0.2)$。\n\n对于每种情况，使用 $s_{\\mathrm{LDA}}=1.0$、$s_{\\mathrm{GGA}}=0.85$ 和 $s_{\\mathrm{HYB}}=1-\\lambda$ 计算三种泛函的结果。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果。该行应为一个长度为 4 的列表（每个测试用例一个条目）；每个条目必须是一个长度为 3 的列表（按 LDA、GGA、HYB 的顺序排列，每种泛函一个）；这些条目中的每一个都必须是一个包含两个浮点数 $[\\mathcal{C}, \\mathcal{D}]$ 的列表，单位为 Hartree。例如，打印的行应具有以下结构形式\n$$\n\\big[ \\big[ [\\mathcal{C}_{A,\\mathrm{LDA}}, \\mathcal{D}_{A,\\mathrm{LDA}}], [\\mathcal{C}_{A,\\mathrm{GGA}}, \\mathcal{D}_{A,\\mathrm{GGA}}], [\\mathcal{C}_{A,\\mathrm{HYB}}, \\mathcal{D}_{A,\\mathrm{HYB}}] \\big], \\dots \\big].\n$$", "solution": "问题陈述经过验证，被认为是科学上合理的、自洽的且定义明确的。它提出了一个简化但连贯的密度泛函理论中离域误差的物理模型，适合进行严格的数学分析。其前提具有物理动机，目标定义清晰。我们将继续推导所需的量。\n\n分析从所提供的基本模型假设开始。该系统由 $M$ 个相同的位点组成，每个位点的基线占据数为一个电子。一个分数电荷 $\\omega \\in [0,1]$ 被添加到系统中，导致总电子数为 $N = M + \\omega$。问题陈述指出，所添加的分数电荷 $\\omega$ 均匀分布在 $M$ 个位点上，以最小化赝自相互作用能。这意味着每个位点 $i$ 上的过剩电子电荷是相同的，由 $n_{i, \\text{excess}} = \\omega/M$ 给出。\n\n位点 $i$ 上的总电子占据数，记为 $n_i$，是基线整数占据数和分数过剩占据数的总和：\n$$n_i = 1 + n_{i, \\text{excess}} = 1 + \\frac{\\omega}{M}$$\n总赝自相互作用能 $E_{\\text{SI}}$ 定义为对位点占据数的求和：\n$$E_{\\text{SI}} = s J \\sum_{i=1}^M n_i^2$$\n将均匀位点占据数 $n_i$ 的表达式代入此方程，得到自相互作用能作为 $\\omega$ 的函数：\n$$E_{\\text{SI}}(\\omega) = s J \\sum_{i=1}^M \\left(1 + \\frac{\\omega}{M}\\right)^2$$\n由于求和中的项对于所有 $M$ 个位点都是相同的，因此简化为：\n$$E_{\\text{SI}}(\\omega) = s J M \\left(1 + \\frac{\\omega}{M}\\right)^2 = s J M \\left(1 + \\frac{2\\omega}{M} + \\frac{\\omega^2}{M^2}\\right)$$\n$$E_{\\text{SI}}(\\omega) = s J \\left(M + 2\\omega + \\frac{\\omega^2}{M}\\right)$$\n这个表达式代表了总能量 $E_{\\text{approx}}(\\omega)$ 中相对于 $\\omega$ 非线性的部分。在这个简化模型中，任何其他对能量的贡献都被假设为关于 $\\omega$ 是线性的。因此，总能量的曲率与自相互作用能的曲率相同。\n\n任务 1：曲率 $\\mathcal{C}$ 的推导\n\n曲率 $\\mathcal{C}$ 定义为近似总能量 $E_{\\text{approx}}(\\omega)$ 关于 $\\omega$ 的二阶导数，在 midpoint $\\omega=1/2$ 处求值。\n$$\\mathcal{C} \\equiv \\left.\\frac{d^2 E_{\\text{approx}}}{d\\omega^2}\\right|_{\\omega=\\tfrac{1}{2}}$$\n如前所述，这等同于求 $E_{\\text{SI}}(\\omega)$ 的二阶导数：\n$$\\frac{d^2 E_{\\text{approx}}}{d\\omega^2} = \\frac{d^2 E_{\\text{SI}}}{d\\omega^2}$$\n首先，我们计算 $E_{\\text{SI}}(\\omega)$ 的一阶导数：\n$$\\frac{d E_{\\text{SI}}}{d\\omega} = \\frac{d}{d\\omega} \\left[ s J \\left(M + 2\\omega + \\frac{\\omega^2}{M}\\right) \\right] = s J \\left(2 + \\frac{2\\omega}{M}\\right)$$\n接着，我们计算二阶导数：\n$$\\frac{d^2 E_{\\text{SI}}}{d\\omega^2} = \\frac{d}{d\\omega} \\left[ s J \\left(2 + \\frac{2\\omega}{M}\\right) \\right] = s J \\left(\\frac{2}{M}\\right) = \\frac{2sJ}{M}$$\n二阶导数是一个常数，与 $\\omega$ 无关。因此，其在 $\\omega=1/2$ 处的值就是这个常数。\n$$\\mathcal{C} = \\frac{2sJ}{M}$$\n这是曲率的闭式表达式，按要求以 Hartree 为单位给出。\n\n任务 2：积分绝对偏差 $\\mathcal{D}$ 的推导\n\n积分绝对偏差 $\\mathcal{D}$ 定义为：\n$$\\mathcal{D} \\equiv \\int_0^1 \\left| E_{\\text{approx}}(\\omega) - E_{\\text{linear}}(\\omega)\\right| \\, d\\omega$$\n项 $E_{\\text{approx}}(\\omega) - E_{\\text{linear}}(\\omega)$ 是线性度的偏离，我们将其表示为 $\\Delta E(\\omega)$。这种偏离完全归因于自相互作用能的非线性特性。线性参考能量 $E_{\\text{linear}}(\\omega)$ 是连接端点能量 $E_{\\text{approx}}(0)$ 和 $E_{\\text{approx}}(1)$ 的一条直线。偏离可以表示为：\n$$\\Delta E(\\omega) = E_{\\text{SI}}(\\omega) - \\left[ (1-\\omega)E_{\\text{SI}}(0) + \\omega E_{\\text{SI}}(1) \\right]$$\n我们计算端点的自相互作用能：\n在 $\\omega=0$ 时：$E_{\\text{SI}}(0) = sJ(M + 2(0) + 0^2/M) = sJM$。\n在 $\\omega=1$ 时：$E_{\\text{SI}}(1) = sJ(M + 2(1) + 1^2/M) = sJ(M+2+1/M)$。\nSI 能量的线性参考是：\n$$E_{\\text{SI,linear}}(\\omega) = (1-\\omega)sJM + \\omega sJ(M+2+1/M) = sJM + \\omega sJ(2+1/M)$$\n现在，我们计算偏离 $\\Delta E(\\omega)$：\n$$\\Delta E(\\omega) = sJ\\left(M+2\\omega+\\frac{\\omega^2}{M}\\right) - \\left[ sJM + \\omega sJ\\left(2+\\frac{1}{M}\\right) \\right]$$\n$$\\Delta E(\\omega) = sJ \\left[ M+2\\omega+\\frac{\\omega^2}{M} - M - 2\\omega - \\frac{\\omega}{M} \\right]$$\n$$\\Delta E(\\omega) = sJ \\left[ \\frac{\\omega^2}{M} - \\frac{\\omega}{M} \\right] = \\frac{sJ}{M}(\\omega^2 - \\omega)$$\n对于 $\\omega \\in (0,1)$，项 $\\omega^2 - \\omega$ 是负的。问题陈述本身指出偏离是负的。因此，绝对值为：\n$$|\\Delta E(\\omega)| = \\left| \\frac{sJ}{M}(\\omega^2 - \\omega) \\right| = -\\frac{sJ}{M}(\\omega^2 - \\omega) = \\frac{sJ}{M}(\\omega - \\omega^2)$$\n我们现在可以计算 $\\mathcal{D}$ 的积分：\n$$\\mathcal{D} = \\int_0^1 \\frac{sJ}{M}(\\omega - \\omega^2) \\, d\\omega = \\frac{sJ}{M} \\int_0^1 (\\omega - \\omega^2) \\, d\\omega$$\n$$\\mathcal{D} = \\frac{sJ}{M} \\left[ \\frac{\\omega^2}{2} - \\frac{\\omega^3}{3} \\right]_0^1 = \\frac{sJ}{M} \\left( \\left(\\frac{1}{2} - \\frac{1}{3}\\right) - 0 \\right)$$\n$$\\mathcal{D} = \\frac{sJ}{M} \\left(\\frac{1}{6}\\right) = \\frac{sJ}{6M}$$\n这是积分绝对偏差的闭式表达式，同样以 Hartree 为单位。\n\n最终需要实现的表达式是：\n曲率：$\\mathcal{C} = \\frac{2sJ}{M}$\n积分偏差：$\\mathcal{D} = \\frac{sJ}{6M}$\n这些推导完成了任务 1 和 2。任务 3 要求针对指定的测试用例实现这些公式。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the DFT delocalization error problem for a stretched hydrogen chain model.\n\n    This function calculates the curvature (C) and integrated absolute deviation (D)\n    from piecewise linearity for various DFT functionals, based on a simplified\n    model of spurious self-interaction.\n    \"\"\"\n    \n    # Test suite: (M, J, lambda)\n    # M: Number of sites\n    # J: Self-interaction scale parameter (Hartree)\n    # lambda: Exact exchange fraction for hybrid functional\n    test_cases = [\n        (10, 0.6, 0.25),   # Case A (happy path)\n        (1, 0.6, 0.25),    # Case B (boundary condition, minimal chain)\n        (50, 1.0, 0.5),    # Case C (large chain, stronger hybrid mixing)\n        (20, 0.0, 0.2),    # Case D (edge case, no self-interaction scale)\n    ]\n\n    # Functional-dependent scale factors (s)\n    # These are dimensionless.\n    s_lda_val = 1.0\n    s_gga_val = 0.85\n\n    results = []\n    \n    for case in test_cases:\n        M, J, lambda_ = case\n        \n        case_results = []\n        \n        # Calculate s_hyb for the current case\n        s_hyb_val = 1.0 - lambda_\n        \n        # List of scale factors for the three functionals in order: LDA, GGA, HYB\n        s_vals = [s_lda_val, s_gga_val, s_hyb_val]\n\n        for s in s_vals:\n            # The formulas for C and D were derived from the model.\n            # C = 2 * s * J / M\n            # D = s * J / (6 * M)\n            \n            # M must be non-zero. The problem context (M identical sites) implies M >= 1.\n            # J=0 is a valid physical limit meaning no self-interaction in the model.\n            if M == 0:\n                # This case is physically not sensible and would lead to division by zero.\n                # The problem constraints imply M >= 1. We proceed assuming M >= 1.\n                # In a robust implementation, one might raise an error here.\n                # For this problem, we can assume valid M values based on test cases.\n                C = float('nan')\n                D = float('nan')\n            else:\n                C = (2.0 * s * J) / M\n                D = (s * J) / (6.0 * M)\n            \n            case_results.append([C, D])\n            \n        results.append(case_results)\n\n    # Format the final output string according to the problem specification.\n    # The format requires a comma-separated list of lists, with no spaces.\n    # e.g., [[[C1,D1],[C2,D2]],[[C3,D3],[C4,D4]]]\n    stringified_results = []\n    for case_res in results:\n        # Convert each inner list to its string representation and remove spaces.\n        stringified_results.append(str(case_res).replace(\" \", \"\"))\n\n    # Join the string representations of each case's results with commas.\n    final_output_string = f\"[{','.join(stringified_results)}]\"\n    \n    print(final_output_string)\n\nsolve()\n```", "id": "2901422"}, {"introduction": "最后的这个实践将我们对近似 DFT 优缺点的理解应用于一个关键的现实世界问题：计算电子带隙。我们将使用一个精确可解的模型体系，来严格比较真实的基态能隙（fundamental gap）与标准 KS-DFT 和杂化泛函所预测的 HOMO-LUMO 能隙。这个练习不仅突出了“带隙问题”，还介绍了如“剪刀校正”（scissor correction）等实用策略，为我们理解计算材料科学中的挑战与解决方案提供了全面的视角。", "problem": "您需要设计并实现一个完整、可复现的基准测试协议，用于在一个最小但非平凡的格点模型上预测带隙。该模型需能捕捉Kohn–Sham密度泛函理论 (DFT)、广义Kohn–Sham杂化方法、后验“剪刀”校正以及基本（电荷激发）带隙之间的概念性差异。您的实现必须是一个单一的可运行程序，无需用户输入即可计算所有所需量。该协议必须基于第一性原理和核心定义，并以纯粹的数学和算法术语进行表述。\n\n基本模型与定义：\n- 考虑一个含自旋的双格点扩展Hubbard二聚体，定义在两个标记为 $i \\in \\{1,2\\}$ 的格点和自旋标记 $\\sigma \\in \\{\\uparrow,\\downarrow\\}$ 上。其二次量子化哈密顿量为\n$$\n\\hat{H} \\;=\\; -t \\sum_{\\sigma} \\left( \\hat{c}_{1\\sigma}^\\dagger \\hat{c}_{2\\sigma} + \\hat{c}_{2\\sigma}^\\dagger \\hat{c}_{1\\sigma} \\right)\n\\;+\\; \\frac{\\Delta}{2}\\left(\\hat{n}_{1}-\\hat{n}_{2}\\right)\n\\;+\\; U \\sum_{i=1}^{2} \\hat{n}_{i\\uparrow}\\hat{n}_{i\\downarrow}\n\\;+\\; V \\sum_{\\sigma,\\sigma'} \\hat{n}_{1\\sigma}\\hat{n}_{2\\sigma'} \\,,\n$$\n其中 $\\hat{n}_{i\\sigma} = \\hat{c}_{i\\sigma}^\\dagger \\hat{c}_{i\\sigma}$，$\\hat{n}_i = \\sum_{\\sigma}\\hat{n}_{i\\sigma}$，且 $t$、$\\Delta$、$U$、$V$ 为实数参数。所有能量均须以电子伏特 (eV) 为单位处理。\n\n- 粒子数为 $N$ 时的基本带隙由基态总能量定义为\n$$\nE_{\\mathrm{g}}^{\\mathrm{fund}}(N) \\;=\\; \\left[ E_0(N+1) + E_0(N-1) - 2 E_0(N) \\right] \\,,\n$$\n其中 $E_0(M)$ 是哈密顿量 $\\hat{H}$ 在 $M$ 电子扇区中的精确基态能量。此定义是您的参考目标。\n\n- 自旋限制的Kohn–Sham (KS) 无相互作用参考体系的定义是，在一个仅使用Hartree项（无显式交换关联）的平均场闭合下，再现相互作用体系的基态格点密度，从而得到一个每个自旋的 $2\\times 2$ 单电子哈密顿量\n$$\n\\mathbf{h}^{\\mathrm{KS}} \\;=\\; \\begin{pmatrix}\n\\varepsilon_1 & -t \\\\\n-t & \\varepsilon_2\n\\end{pmatrix},\n\\quad\n\\varepsilon_1 \\;=\\; \\frac{\\Delta}{2} + U \\frac{n_1}{2} + V n_2, \\;\\;\n\\varepsilon_2 \\;=\\; -\\frac{\\Delta}{2} + U \\frac{n_2}{2} + V n_1 \\,,\n$$\n其中 $n_i$ 是在粒子数为 $N=2$ 的自旋非极化（闭壳层）解中需要自洽确定的总格点占据数。Kohn–Sham带隙是单粒子本征值之差\n$$\nE_{\\mathrm{g}}^{\\mathrm{KS}} \\;=\\; \\varepsilon_{\\mathrm{LUMO}} - \\varepsilon_{\\mathrm{HOMO}} \\,.\n$$\n\n- 广义Kohn–Sham杂化方法包含了一部分比例为 $\\alpha$ 的Fock交换，这部分交换源于对密度-密度项进行Hartree–Fock退耦而产生的格点间相互作用 $V$。在自旋限制的情况下，这会通过一个与键级成正比的非局域交换贡献来修正非对角跃迁项。具体而言，\n$$\n\\mathbf{h}^{\\mathrm{gKS}} \\;=\\; \\begin{pmatrix}\n\\varepsilon_1 & -t_{\\mathrm{eff}} \\\\\n-t_{\\mathrm{eff}} & \\varepsilon_2\n\\end{pmatrix},\n\\quad\nt_{\\mathrm{eff}} \\;=\\; t + \\alpha V p \\,,\n$$\n其中 $p = \\langle \\hat{c}_{1\\sigma}^\\dagger \\hat{c}_{2\\sigma} \\rangle$ 是在 $N=2$ 的同一闭壳层流形中，与 $n_1$ 和 $n_2$ 一同自洽获得的每个自旋的键级，而 $\\varepsilon_1, \\varepsilon_2$ 如上所述。杂化带隙是本征值之差\n$$\nE_{\\mathrm{g}}^{\\mathrm{hyb}} \\;=\\; \\varepsilon_{\\mathrm{LUMO}}^{\\mathrm{gKS}} - \\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{gKS}} \\,.\n$$\n\n- 此处，“剪刀”校正定义为对给定方法预测的带隙施加的一个后验常数平移，该平移通过在单个指定的校准案例上进行校准来确定。对于方法 $X \\in \\{\\mathrm{KS}, \\mathrm{hyb}\\}$，定义\n$$\n\\Delta_{\\mathrm{sc}}^{(X)} \\;=\\; E_{\\mathrm{g}}^{\\mathrm{fund}}(\\text{cal}) - E_{\\mathrm{g}}^{(X)}(\\text{cal}) \\,,\n$$\n然后，对于任何其他案例，经过“剪刀”校正的带隙预测值为\n$$\n\\widetilde{E}_{\\mathrm{g}}^{(X)} \\;=\\; E_{\\mathrm{g}}^{(X)} + \\Delta_{\\mathrm{sc}}^{(X)} \\,.\n$$\n您的程序必须使用测试套件中的第一组参数作为校准案例。\n\n使用的基本依据：\n- 仅使用上述哈密顿量以及基态能量、基本带隙、平均场Hartree闭合和密度-密度相互作用的Hartree–Fock退耦等基本定义来构建计算协议。不要假设任何预先制表的密度泛函。自洽场必须通过对所选的无相互作用单体哈密顿量强制输入和输出密度（以及在适用情况下的键级）相等来推导得出。\n\n计算任务：\n- 对于每组参数，通过在相应的粒子数扇区中数值对角化多体哈密顿量，精确计算 $N \\in \\{1,2,3\\}$ 时的 $E_0(N)$。然后根据上述定义计算 $E_{\\mathrm{g}}^{\\mathrm{fund}}(2)$。所有对角化必须在浮点精度范围内数学上精确。\n- 对于 $N=2$，求解 $\\mathbf{h}^{\\mathrm{KS}}$ 和 $\\mathbf{h}^{\\mathrm{gKS}}$ 的自旋限制自洽场，以分别获得 $E_{\\mathrm{g}}^{\\mathrm{KS}}$ 和 $E_{\\mathrm{g}}^{\\mathrm{hyb}}$。使用固定的杂化混合比例 $\\alpha = 0.25$（无量纲）和合理的不动点混合方法，以确保从对称的初始猜测开始能够收敛。\n- 使用第一组参数作为校准案例，从 $E_{\\mathrm{g}}^{\\mathrm{fund}}$ 与相应方法的未校正带隙之间的差异计算 $\\Delta_{\\mathrm{sc}}^{(\\mathrm{KS})}$ 和 $\\Delta_{\\mathrm{sc}}^{(\\mathrm{hyb})}$。\n- 对于所有剩余的参数集，报告以下四个预测量相对于 $E_{\\mathrm{g}}^{\\mathrm{fund}}$ 的绝对误差（单位 eV）：未校正的Kohn–Sham带隙、未校正的杂化带隙、经“剪刀”校正的Kohn–Sham带隙以及经“剪刀”校正的杂化带隙。\n\n数值单位与输出：\n- 所有能量必须以电子伏特 (eV) 为单位处理和报告。最终报告的误差必须是单位为 eV 的浮点数。\n- 角度未出现；无需角度单位。\n\n测试套件：\n- 在总粒子数为 $N=2$ 时，使用以下参数集 $(t, \\Delta, U, V)$，所有单位均为 eV：\n    - 案例 A (校准): $(t, \\Delta, U, V) = (1.0, 0.5, 4.0, 1.0)$。\n    - 案例 B (边缘情况：无格点间交换): $(t, \\Delta, U, V) = (1.0, 0.5, 4.0, 0.0)$。\n    - 案例 C (大格点不对称性): $(t, \\Delta, U, V) = (1.0, 3.0, 4.0, 1.0)$。\n    - 案例 D (弱关联，对称): $(t, \\Delta, U, V) = (1.0, 0.0, 1.0, 0.2)$。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含 $12$ 个结果，形式为方括号内的逗号分隔列表。顺序必须为\n$$\n\\left[\n\\begin{array}{l}\n\\text{B:}\\; |E_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |E_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|, \\\\\n\\text{C:}\\; |E_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |E_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|, \\\\\n\\text{D:}\\; |E_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |E_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|,\\; |\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|\n\\end{array}\n\\right] \\,,\n$$\n以数值形式表示为一个包含 $12$ 个浮点数（单位 eV）的单个扁平列表，不含任何额外文本。\n\n科学真实性与推导要求：\n- 从上述哈密顿量和带隙定义出发。通过在 $N=2$ 时对无相互作用参考体系强制输入和输出的单体密度（以及杂化情况下的键级）相等，来推导自洽的单体问题。除了给定密度-密度相互作用的Hartree和Hartree–Fock退耦之外，不要假设任何预先指定的泛函形式。确保所有数值过程都是一致且收敛的。\n\n您的最终答案必须是遵循稍后指定的执行环境的完整、可运行的程序。", "solution": "该问题陈述是计算量子化学中一个有效且适定的练习。它在科学上植根于多体物理学和密度泛函理论的既定原理，使用扩展Hubbard模型作为一个非平凡的测试平台。它是客观、自洽的，所有术语都得到了严格定义。计算任务是可行的，并直接针对带隙预测的核心概念。因此，我们可以着手进行推导和求解。\n\n该协议要求将精确结果与从Kohn-Sham (KS) 和广义Kohn-Sham (gKS) 理论推导出的近似结果进行比较。我们首先将详细说明获得精确基本带隙的步骤，该带隙将作为我们的参考基准。随后，我们将推导KS和gKS方法的自洽场 (SCF) 方程。最后，我们将概述完整的基准测试计算流程。\n\n**1. 从多体哈密顿量计算精确基本带隙**\n\n对于一个基态为 $N$ 粒子的系统，其基本带隙通过 $M$ 粒子系统的总基态能量 $E_0(M)$ 定义为：\n$$\nE_{\\mathrm{g}}^{\\mathrm{fund}}(N) = E_0(N+1) + E_0(N-1) - 2 E_0(N)\n$$\n对于我们目标中的 $N=2$ 情况，我们必须找到由指定哈密顿量 $\\hat{H}$ 所描述的 $N=1$、$N=2$ 和 $N=3$ 电子系统的精确基态能量。这可以通过在占据数态构成的基矢中构建完整的多体哈密顿量矩阵，并数值求解其最低本征值来完成。该基矢由四个自旋轨道 $\\{|1\\uparrow\\rangle, |1\\downarrow\\rangle, |2\\uparrow\\rangle, |2\\downarrow\\rangle\\}$ 构建。\n\n**N=1 电子扇区：**\n基矢包含 $\\binom{4}{1}=4$ 个态。由于自旋简并，我们只需考虑单个自旋，例如自旋向上。基矢为 $\\{|1\\uparrow\\rangle, |2\\uparrow\\rangle\\}$。哈密顿量矩阵为：\n$$\n\\mathbf{H}^{(1)} = \\begin{pmatrix} \\Delta/2 & -t \\\\ -t & -\\Delta/2 \\end{pmatrix}\n$$\n基态能量 $E_0(1)$ 是 $\\mathbf{H}^{(1)}$ 的最低本征值，即 $E_0(1) = -\\sqrt{(\\Delta/2)^2 + t^2}$。\n\n**N=3 电子扇区：**\n该扇区与 $N=1$ 扇区呈粒子-空穴对称。基矢有 $\\binom{4}{3}=4$ 个态。考虑总自旋投影 $S_z = +1/2$ 的子空间，在占据数表示 $(n_{1\\uparrow}, n_{1\\downarrow}, n_{2\\uparrow}, n_{2\\downarrow})$ 下，基矢态可写为 $|1,1,1,0\\rangle$ 和 $|1,0,1,1\\rangle$。相应的哈密顿量矩阵为：\n$$\n\\mathbf{H}^{(3)} = \\begin{pmatrix} U+2V+\\Delta/2 & -t \\\\ -t & U+2V-\\Delta/2 \\end{pmatrix}\n$$\n基态能量 $E_0(3)$ 是 $\\mathbf{H}^{(3)}$ 的最低本征值，即 $E_0(3) = U+2V - \\sqrt{(\\Delta/2)^2 + t^2}$。$S_z=-1/2$ 的子空间产生相同的能谱。\n\n**N=2 电子扇区：**\n基矢包含 $\\binom{4}{2}=6$ 个态。该体系的基态通常是自旋单重态 ($S=0$)。在由两个离子态（双占据子在格点1或2上）和共价单重态组成的单重态子空间中构建哈密顿量矩阵，是一个标准的教科书步骤。使用基矢 $\\{|D_1\\rangle, |D_2\\rangle, |S\\rangle\\}$，其中 $|D_1\\rangle$ 是格点1双占据， $|D_2\\rangle$ 是格点2双占据，而 $|S\\rangle$ 是共价单重态组合，单重态扇区的哈密顿量矩阵为：\n$$\n\\mathbf{H}^{(2)}_{\\text{singlet}} = \\begin{pmatrix} U+\\Delta & 0 & \\sqrt{2}t \\\\ 0 & U-\\Delta & \\sqrt{2}t \\\\ \\sqrt{2}t & \\sqrt{2}t & V \\end{pmatrix}\n$$\n基态能量 $E_0(2)$ 是 $\\mathbf{H}^{(2)}_{\\text{singlet}}$ 的最低本征值与最低三重态能量（即 $V$）中的较小者。对于所给参数，单重态基态的能量总是更低。\n\n然后将数值获得的基态能量 $E_0(1)$、$E_0(2)$ 和 $E_0(3)$ 代入定义式，即可计算出 $N=2$ 时的基本带隙。\n\n**2. 自洽场 (SCF) 方法**\n\n对于 $N=2$ 的体系，我们求解自旋限制的SCF问题。两个电子占据一个由 $2 \\times 2$ 有效哈密顿量 $\\mathbf{h}$ 描述的无相互作用体系的最低能量分子轨道 (HOMO)。\n\n单个自旋的单电子哈密顿量为：\n$$\n\\mathbf{h} = \\begin{pmatrix} \\varepsilon_1 & -t_{\\mathrm{eff}} \\\\ -t_{\\mathrm{eff}} & \\varepsilon_2 \\end{pmatrix}\n$$\n其本征值为 $\\lambda_{\\pm} = \\frac{\\varepsilon_1+\\varepsilon_2}{2} \\pm \\sqrt{(\\frac{\\varepsilon_1-\\varepsilon_2}{2})^2 + t_{\\mathrm{eff}}^2}$。占据轨道 (HOMO) 对应 $\\lambda_-$，未占轨道 (LUMO) 对应 $\\lambda_+$。带隙为 $E_{\\mathrm{g}} = \\lambda_+ - \\lambda_- = \\sqrt{(\\varepsilon_1-\\varepsilon_2)^2 + 4t_{\\mathrm{eff}}^2}$。\n\nHOMO $\\lambda_-$ 对应的归一化本征矢量 $\\mathbf{c}_- = (c_{1-}, c_{2-})^T$ 用于计算格点密度 $n_i$ 和每个自旋的键级 $p$：\n$$\nn_1 = 2 c_{1-}^2, \\quad n_2 = 2 c_{2-}^2, \\quad p = c_{1-} c_{2-}\n$$\n密度中的因子 2 来自自旋限制形式中HOMO的双占据。这些量必须与产生它们的哈密顿量参数相一致。\n\n**Kohn-Sham (KS) 方法：**\nKS体系由一个纯局域势定义。在该模型中，这对应于Hartree势。有效跃迁 $t_{\\mathrm{eff}}$ 就是裸跃迁 $t$。在位能为：\n$$\n\\varepsilon_1^{\\mathrm{KS}} = \\frac{\\Delta}{2} + U \\frac{n_1}{2} + V n_2, \\quad \\varepsilon_2^{\\mathrm{KS}} = -\\frac{\\Delta}{2} + U \\frac{n_2}{2} + V n_1\n$$\nSCF过程涉及迭代计算 $(\\varepsilon_1, \\varepsilon_2)$ 和 $(n_1, n_2)$ 直至达到自洽。\n\n**广义Kohn-Sham (gKS) 杂化方法：**\n杂化方法包含了一部分比例为 $\\alpha$ 的Fock交换。对于格点间的 $V$ 项，这修正了非对角跃迁：\n$$\nt_{\\mathrm{eff}} = t + \\alpha V p\n$$\n在位能 $\\varepsilon_i$ 与KS情况相同。SCF过程现在迭代 $(\\varepsilon_1, \\varepsilon_2, t_{\\mathrm{eff}})$ 和 $(n_1, n_2, p)$ 以达到自洽。我们使用指定的比例 $\\alpha=0.25$。\n\n两种方法的SCF算法如下：\n1.  用一个密度（以及gKS情况下的键级）的猜测值进行初始化，例如 $n_1=1, n_2=1, p=0.5$。\n2.  使用当前的密度和键级构建有效哈密顿量 $\\mathbf{h}$。\n3.  对角化 $\\mathbf{h}$ 以找到HOMO本征矢量 $\\mathbf{c}_-$。\n4.  从 $\\mathbf{c}_-$ 计算输出的密度 $n'_i$ 和键级 $p'$。\n5.  通过比较输入和输出量来检查收敛性。如果收敛，则退出。\n6.  使用混合方案更新密度和键级（例如，使用参数 $\\beta$ 进行线性混合）：$n_i \\leftarrow (1-\\beta)n_i + \\beta n'_i$。返回第2步。\n\n**3. “剪刀”校正**\n\n“剪刀”校正是对计算出的带隙进行的后验调整。对于方法 $X \\in \\{\\mathrm{KS}, \\mathrm{hyb}\\}$，校正量 $\\Delta_{\\mathrm{sc}}^{(X)}$ 在单个参考案例（此处为案例A）上进行校准：\n$$\n\\Delta_{\\mathrm{sc}}^{(X)} = E_{\\mathrm{g}}^{\\mathrm{fund}}(\\text{A}) - E_{\\mathrm{g}}^{(X)}(\\text{A})\n$$\n然后将这个常数平移应用于方法 $X$ 对任何其他参数集预测的带隙：\n$$\n\\widetilde{E}_{\\mathrm{g}}^{(X)} = E_{\\mathrm{g}}^{(X)} + \\Delta_{\\mathrm{sc}}^{(X)}\n$$\n\n**4. 基准测试协议**\n完整的计算协议如下：\n1.  对于校准案例（案例A），计算 $E_{\\mathrm{g}}^{\\mathrm{fund}}(\\text{A})$、$E_{\\mathrm{g}}^{\\mathrm{KS}}(\\text{A})$ 和 $E_{\\mathrm{g}}^{\\mathrm{hyb}}(\\text{A})$。\n2.  根据这些结果，确定两个“剪刀”校正量 $\\Delta_{\\mathrm{sc}}^{(\\mathrm{KS})}$ 和 $\\Delta_{\\mathrm{sc}}^{(\\mathrm{hyb})}$。\n3.  对于每个剩余的测试案例（B、C、D）：\n    a.  计算精确的基本带隙 $E_{\\mathrm{g}}^{\\mathrm{fund}}$。\n    b.  通过SCF计算未校正的带隙 $E_{\\mathrm{g}}^{\\mathrm{KS}}$ 和 $E_{\\mathrm{g}}^{\\mathrm{hyb}}$。\n    c.  应用“剪刀”校正以获得 $\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{KS}}$ 和 $\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{hyb}}$。\n    d.  计算相对于精确基本带隙的四个所需绝对误差：$|E_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|$、$|E_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|$、$|\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{KS}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|$ 和 $|\\widetilde{E}_{\\mathrm{g}}^{\\mathrm{hyb}} - E_{\\mathrm{g}}^{\\mathrm{fund}}|$。\n4.  将来自案例B、C和D的 $12$ 个误差值合并为一个列表，用于最终输出。\n这个流程在一个能够捕捉关键关联物理的模型系统上，提供了一个对不同带隙预测方法的严格的、基于第一性原理的基准测试。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import eigh\n\ndef solve():\n    \"\"\"\n    Main function to execute the benchmarking protocol for band gap prediction.\n    \"\"\"\n\n    def get_fundamental_gap(params):\n        \"\"\"\n        Calculates the exact fundamental gap by diagonalizing the many-body Hamiltonian.\n        \"\"\"\n        t, delta, U, V = params\n\n        # N=1 electron sector\n        H1 = np.array([\n            [delta / 2.0, -t],\n            [-t, -delta / 2.0]\n        ])\n        eigvals1, _ = eigh(H1)\n        e0_1 = eigvals1[0]\n\n        # N=3 electron sector\n        H3 = np.array([\n            [U + 2 * V + delta / 2.0, -t],\n            [-t, U + 2 * V - delta / 2.0]\n        ])\n        eigvals3, _ = eigh(H3)\n        e0_3 = eigvals3[0]\n\n        # N=2 electron sector (singlet subspace)\n        # Note: The triplet energy is V. For the given parameters, the singlet\n        # ground state is always lower.\n        H2_singlet = np.array([\n            [U + delta, 0, np.sqrt(2) * t],\n            [0, U - delta, np.sqrt(2) * t],\n            [np.sqrt(2) * t, np.sqrt(2) * t, V]\n        ])\n        eigvals2, _ = eigh(H2_singlet)\n        e0_2 = eigvals2[0]\n\n        # Fundamental gap definition for N=2\n        fund_gap = e0_1 + e0_3 - 2 * e0_2\n        return fund_gap\n\n    def scf_solver(params, alpha, tol=1e-12, max_iter=200, mix_beta=0.5):\n        \"\"\"\n        Solves the self-consistent field equations for KS and gKS systems.\n        \"\"\"\n        t, delta, U, V = params\n\n        # Initial guess\n        n1, n2 = 1.0, 1.0\n        # Bond order p is only used in gKS (alpha > 0)\n        p = 0.5 \n\n        for _ in range(max_iter):\n            # Construct the 1-body effective Hamiltonian\n            e1 = delta / 2.0 + U * n1 / 2.0 + V * n2\n            e2 = -delta / 2.0 + U * n2 / 2.0 + V * n1\n            \n            t_eff = t\n            if alpha > 0:\n                t_eff = t + alpha * V * p\n\n            h_eff = np.array([\n                [e1, -t_eff],\n                [-t_eff, e2]\n            ])\n\n            # Diagonalize to find HOMO/LUMO\n            eigvals, eigvecs = eigh(h_eff)\n            homo_eigval, lumo_eigval = eigvals[0], eigvals[1]\n            homo_vec = eigvecs[:, 0]\n            \n            # Compute new densities and bond order from HOMO\n            c1, c2 = homo_vec[0], homo_vec[1]\n            n1_new = 2.0 * c1**2\n            n2_new = 2.0 * c2**2\n            p_new = c1 * c2\n\n            # Check for convergence\n            density_diff = abs(n1 - n1_new) + abs(n2 - n2_new)\n            bond_order_diff = abs(p - p_new) if alpha > 0 else 0.0\n            \n            if density_diff < tol and bond_order_diff < tol:\n                break\n\n            # Mix for next iteration\n            n1 = (1.0 - mix_beta) * n1 + mix_beta * n1_new\n            n2 = (1.0 - mix_beta) * n2 + mix_beta * n2_new\n            if alpha > 0:\n                p = (1.0 - mix_beta) * p + mix_beta * p_new\n\n        # The gap is the eigenvalue difference\n        gap = lumo_eigval - homo_eigval\n        return gap\n\n    # Define test cases from the problem statement.\n    # (t, delta, U, V) in eV\n    test_cases = {\n        'A': (1.0, 0.5, 4.0, 1.0),\n        'B': (1.0, 0.5, 4.0, 0.0),\n        'C': (1.0, 3.0, 4.0, 1.0),\n        'D': (1.0, 0.0, 1.0, 0.2),\n    }\n\n    # --- Calibration Step (Case A) ---\n    params_calib = test_cases['A']\n    alpha_hyb = 0.25\n\n    e_fund_calib = get_fundamental_gap(params_calib)\n    e_ks_calib = scf_solver(params_calib, alpha=0.0)\n    e_hyb_calib = scf_solver(params_calib, alpha=alpha_hyb)\n\n    # Compute scissor corrections\n    delta_sc_ks = e_fund_calib - e_ks_calib\n    delta_sc_hyb = e_fund_calib - e_hyb_calib\n\n    # --- Benchmarking Step (Cases B, C, D) ---\n    results = []\n    for case_name in ['B', 'C', 'D']:\n        params = test_cases[case_name]\n        \n        # 1. Exact fundamental gap\n        e_fund = get_fundamental_gap(params)\n\n        # 2. Uncorrected KS and hybrid gaps\n        e_ks = scf_solver(params, alpha=0.0)\n        e_hyb = scf_solver(params, alpha=alpha_hyb)\n\n        # 3. Scissor-corrected gaps\n        e_ks_sc = e_ks + delta_sc_ks\n        e_hyb_sc = e_hyb + delta_sc_hyb\n\n        # 4. Compute absolute errors\n        err_ks = abs(e_ks - e_fund)\n        err_hyb = abs(e_hyb - e_fund)\n        err_ks_sc = abs(e_ks_sc - e_fund)\n        err_hyb_sc = abs(e_hyb_sc - e_fund)\n        \n        results.extend([err_ks, err_hyb, err_ks_sc, err_hyb_sc])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.8f}' for r in results)}]\")\n\nsolve()\n```", "id": "2901417"}]}