{"hands_on_practices": [{"introduction": "密度泛函理论的一个基石是，对于分数电子数，精确泛函的能量是分段线性的。然而，近似泛函通常会违反这一Perdew–Parr–Levy–Balduz (PPLB) 条件，导致能量曲线出现非线性，这种偏差，特别是凸性偏差，是离域误差的直接体现。本练习 [@problem_id:2923346] 提供了一种实践方法，通过一个简洁的解析模型，让您亲手计算并量化这种与线性行为的偏差，从而巩固对离域误差理论根源的理解。", "problem": "您将设计并实现一个程序，用于计算密度泛函理论 (DFT) 中离域误差的原理性诊断。精确的 Perdew–Parr–Levy–Balduz (PPLB) 分段线性条件指出，对于电子数为相邻两个整数之间的分数时的体系，其精确基态总能量 $E$ 呈线性变化。任何偏离这种线性的情况都源于自相互作用和离域误差。您的任务是通过计算源于此线性原理的诊断指标，来量化一系列小型模型体系中此类偏差。\n\n基本原理：\n- 精确的 DFT 遵循 PPLB 分段线性条件：在整数 $N$ 和 $N+1$ 之间，精确的基态能量 $E(N+\\eta)$ 是分数占据数 $\\eta \\in [0,1]$ 的线性函数。\n- 对于任何近似能量 $E(x)$，定义线性参考 $E_{\\mathrm{lin}}(x) = (1-x) E_0 + x E_1$，其中 $E_0 = E(0)$ 且 $E_1 = E(1)$。\n- 与 $E_{\\mathrm{lin}}(x)$ 的偏差可量化离域误差和多电子自相互作用误差。\n\n程序输入（硬编码，无用户输入），用作测试套件：\n考虑一个模型体系家族，其总能量作为分数电子数 $x \\in [0,1]$ 的函数定义为\n$$\nE(x) \\;=\\; (1-x)\\,E_0 \\;+\\; x\\,E_1 \\;+\\; a\\,x(1-x) \\;+\\; c\\,x(1-x)(1-2x),\n$$\n其中 $E_0$ 和 $E_1$ 的单位为哈特里 (Hartree)，参数 $a$ 和 $c$ 的单位也为哈特里 (Hartree)。与 $a$ 和 $c$ 成比例的微扰在端点 $x=0$ 和 $x=1$ 处为零，从而保持了端点能量不变。请按所列顺序使用以下 $4$ 组参数作为测试套件：\n\n- 情况 $1$ (完全分段线性): $(E_0, E_1, a, c) = (-100.0, -100.2, 0.0, 0.0)$。\n- 情况 $2$ (离域/凸误差): $(E_0, E_1, a, c) = (-100.0, -100.2, -0.01, 0.0)$。\n- 情况 $3$ (过局域/凹误差): $(E_0, E_1, a, c) = (-100.0, -100.2, +0.01, 0.0)$。\n- 情况 $4$ (偏斜离域): $(E_0, E_1, a, c) = (-100.0, -100.2, -0.008, -0.006)$。\n\n为每种情况计算的诊断指标：\n- 定义线性参考 $E_{\\mathrm{lin}}(x) = (1-x)E_0 + x E_1$ 和偏差 $d(x) = E(x) - E_{\\mathrm{lin}}(x)$。\n- 计算以下度量：\n  1. 单位区间上的 $L^1$ 偏差：\n     $$\n     D_1 \\;=\\; \\int_0^1 \\left| d(x) \\right| \\, dx.\n     $$\n     以电子伏特 (eV) 为单位报告 $D_1$，四舍五入到六位小数。\n  2. 单位区间上的 $L^2$ 均方根 (RMS) 偏差：\n     $$\n     D_2 \\;=\\; \\sqrt{\\int_0^1 d(x)^2 \\, dx }.\n     $$\n     以电子伏特 (eV) 为单位报告 $D_2$，四舍五入到六位小数。\n  3. 离散中点曲率（衡量相对于分段线性的凸性/凹性的一个代理指标）：\n     $$\n     K \\;=\\; E(1) \\;-\\; 2E\\!\\left(\\tfrac{1}{2}\\right) \\;+\\; E(0).\n     $$\n     以电子伏特 (eV) 为单位报告 $K$，四舍五入到六位小数。\n  4. 归一化曲率：\n     $$\n     s \\;=\\; \\frac{K}{\\left|E_1 - E_0\\right|}.\n     $$\n     报告 $s$ 为一个无量纲浮点数，四舍五入到六位小数。该比率可以在哈特里 (Hartree) 单位下计算，以避免分母的单位转换。\n  5. 一个用于表示过离域的布尔诊断标志：\n     $$\n     \\text{over\\_delocalized} \\;=\\; (K > 0).\n     $$\n\n数值方法：\n- 在 $x \\in [0,1]$ 上使用一个包含 $N = 1001$ 个点的均匀网格。\n- 在此网格上评估 $E(x)$ 和 $E_{\\mathrm{lin}}(x)$。\n- 使用复合梯形法则计算 $D_1$ 和 $D_2$ 中的积分。\n- 通过将 $x = \\tfrac{1}{2}$ 直接代入 $E(x)$ 公式来评估 $E\\!\\left(\\tfrac{1}{2}\\right)$。\n\n单位和常数：\n- 使用哈特里到电子伏特的转换关系 $1\\,\\text{Hartree} = 27.211386245988\\,\\text{eV}$。\n- 报告 $D_1$、$D_2$ 和 $K$ 时使用 eV 单位并保留六位小数；报告 $s$ 时保留六位小数，作为一个无量纲数；报告布尔值时为 True 或 False。\n\n最终输出格式：\n- 您的程序应生成一行输出，其中包含一个有 $4$ 个条目的列表，每个条目对应一个测试用例，顺序与上文相同。每个条目本身必须是一个列表，形式如下：\n  $$\n  [D_1,\\, D_2,\\, K,\\, s,\\, \\text{over\\_delocalized}],\n  $$\n  其中 $D_1$、$D_2$ 和 $K$ 的单位是 eV，四舍五入到六位小数，$s$ 是无量纲数，四舍五入到六位小数，布尔值不带引号。例如，总输出必须如下所示：\n  $$\n  [[d_{1,1}, d_{1,2}, d_{1,3}, d_{1,4}, b_1],[d_{2,1}, d_{2,2}, d_{2,3}, d_{2,4}, b_2],[d_{3,1}, d_{3,2}, d_{3,3}, d_{3,4}, b_3],[d_{4,1}, d_{4,2}, d_{4,3}, d_{4,4}, b_4]].\n  $$\n\n您的任务：\n- 精确执行上述计算，并生成所需的单行输出。不允许用户输入。所有计算和常数必须在程序内部定义。", "solution": "所给的问题陈述是有效的。它在科学上基于密度泛函理论 (DFT) 的原理，特别是关于分数电子数的 Perdew–Parr–Levy–Balduz (PPLB) 条件。问题定义明确，所有必要的参数、模型和计算步骤都已明确说明。这是一个在计算量子化学领域中客观且可形式化的任务。我们现在将着手解决它。\n\n分析的关键在于量化一个近似能量泛函与精确分段线性行为的偏差。对于分数电子数 $x \\in [0,1]$，模型能量由下式给出：\n$$\nE(x) = (1-x)E_0 + xE_1 + a x(1-x) + c x(1-x)(1-2x)\n$$\n其中 $E_0$ 和 $E_1$ 分别是体系拥有 $0$ 和 $1$ 个分数电子时的能量。参数 $a$ 和 $c$ 引入了非线性偏差。\n\n完美线性的参考定义为：\n$$\nE_{\\mathrm{lin}}(x) = (1-x)E_0 + xE_1\n$$\n与线性的偏差 $d(x) = E(x) - E_{\\mathrm{lin}}(x)$ 是此模型中离域误差的来源。代入 $E(x)$ 和 $E_{\\mathrm{lin}}(x)$ 的表达式，我们得到偏差的简化形式：\n$$\nd(x) = [ (1-x)E_0 + xE_1 + a x(1-x) + c x(1-x)(1-2x) ] - [ (1-x)E_0 + xE_1 ]\n$$\n$$\nd(x) = a x(1-x) + c x(1-x)(1-2x) = x(1-x)[a + c(1-2x)]\n$$\n函数 $d(x)$ 将成为计算所需诊断指标的基础。所有能量参数（$E_0$、$E_1$、$a$、$c$）的单位都是哈特里，因此 $d(x)$ 的单位也是哈特里。\n\n每个诊断指标的计算步骤如下：\n\n1.  **网格离散化**：我们在区间 $[0,1]$ 上为分数电子数 $x$ 建立一个包含 $N=1001$ 个点的均匀网格。设这些点为 $x_i = i/(N-1)$，其中 $i = 0, 1, \\dots, N-1$。步长为 $h = 1/(N-1)$。我们在每个网格点上计算 $d(x_i)$。\n\n2.  **$L^1$ 偏差 ($D_1$)**：这个度量衡量总的绝对偏差。它由积分定义：\n    $$\n    D_1 = \\int_0^1 |d(x)| \\, dx\n    $$\n    我们使用复合梯形法则在我们的网格上对此积分进行数值近似：\n    $$\n    D_1 \\approx \\sum_{i=1}^{N-1} \\frac{|d(x_{i-1})| + |d(x_i)|}{2} h = h \\left( \\sum_{i=1}^{N-2} |d(x_i)| + \\frac{|d(x_0)| + |d(x_{N-1})|}{2} \\right)\n    $$\n    由于 $d(0)=0$ 和 $d(1)=0$，该式得以简化。结果的单位是哈特里，必须使用给定的转换因子 $1\\,\\text{Hartree} = 27.211386245988\\,\\text{eV}$ 转换为电子伏特 (eV)。\n\n3.  **$L^2$ 均方根偏差 ($D_2$)**：这个度量是均方根偏差，对较大的偏差更敏感。\n    $$\n    D_2 = \\sqrt{\\int_0^1 d(x)^2 \\, dx}\n    $$\n    积分部分使用梯形法则对 $d(x)^2$ 的值进行计算，然后取平方根。结果的单位也是哈特里，需要转换为 eV。\n\n4.  **中点曲率 ($K$)**：这是能量曲线凹凸性的一个离散度量。其定义为：\n    $$\n    K = E(1) - 2E(\\tfrac{1}{2}) + E(0)\n    $$\n    我们可以推导出精确的解析表达式，而不是在网格上进行数值评估。我们知道 $E(0) = E_0$ 且 $E(1) = E_1$。我们计算 $E(\\tfrac{1}{2})$：\n    $$\n    E(\\tfrac{1}{2}) = (1-\\tfrac{1}{2})E_0 + \\tfrac{1}{2}E_1 + a(\\tfrac{1}{2})(1-\\tfrac{1}{2}) + c(\\tfrac{1}{2})(1-\\tfrac{1}{2})(1-2 \\cdot \\tfrac{1}{2})\n    $$\n    $$\n    E(\\tfrac{1}{2}) = \\tfrac{1}{2}E_0 + \\tfrac{1}{2}E_1 + \\tfrac{a}{4}\n    $$\n    将其代入 $K$ 的表达式：\n    $$\n    K = E_1 - 2\\left( \\tfrac{1}{2}E_0 + \\tfrac{1}{2}E_1 + \\tfrac{a}{4} \\right) + E_0 = E_1 - E_0 - E_1 - \\tfrac{a}{2} + E_0 = -\\frac{a}{2}\n    $$\n    这个简洁的结果表明，中点曲率仅由参数 $a$ 决定。$K$ 的值单位为哈特里，必须转换为 eV。\n\n5.  **归一化曲率 ($s$)**：这个无量纲量用区间两端的能量差来归一化曲率。\n    $$\n    s = \\frac{K}{|E_1 - E_0|}\n    $$\n    我们使用哈特里单位下的 $K$、$E_1$ 和 $E_0$ 的值来计算，以确保在取比值之前量纲一致。\n\n6.  **过离域标志**：这个布尔标志指示曲率的符号。凸曲线（$E(x) < E_{\\mathrm{lin}}(x)$）是离域误差的特征，对应于正曲率。\n    $$\n    \\text{over\\_delocalized} = (K > 0)\n    $$\n    根据我们的推导 $K = -a/2$，这个条件等价于 $a < 0$。\n\n该实现将系统地将这些计算应用于给定的 $4$ 组参数中的每一组，根据指定的精度格式化结果，并以所需的列表的列表结构呈现它们。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes DFT delocalization error diagnostics for a family of model systems.\n    \"\"\"\n\n    # Define the Hartree-to-electronvolt conversion factor.\n    HARTREE_TO_EV = 27.211386245988\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (E0, E1, a, c) in Hartrees.\n    test_cases = [\n        (-100.0, -100.2, 0.0, 0.0),     # Case 1: Perfectly piecewise-linear\n        (-100.0, -100.2, -0.01, 0.0),    # Case 2: Delocalization/convex error\n        (-100.0, -100.2, 0.01, 0.0),     # Case 3: Over-localization/concave error\n        (-100.0, -100.2, -0.008, -0.006) # Case 4: Skewed delocalization\n    ]\n\n    # Grid parameters for numerical integration.\n    N_POINTS = 1001\n    x_grid = np.linspace(0.0, 1.0, N_POINTS)\n\n    results_all_cases = []\n\n    for case in test_cases:\n        E0, E1, a, c = case\n\n        # ----------------------------------------------------------------------\n        # 1. Calculate the deviation function d(x) on the grid.\n        # d(x) = E(x) - E_lin(x) = a*x*(1-x) + c*x*(1-x)*(1-2x)\n        # ----------------------------------------------------------------------\n        d_x = x_grid * (1.0 - x_grid) * (a + c * (1.0 - 2.0 * x_grid))\n\n        # ----------------------------------------------------------------------\n        # 2. Compute D1, the L1 deviation, using the composite trapezoidal rule.\n        # ----------------------------------------------------------------------\n        d1_hartree = np.trapz(np.abs(d_x), x_grid)\n        d1_ev = round(d1_hartree * HARTREE_TO_EV, 6)\n\n        # ----------------------------------------------------------------------\n        # 3. Compute D2, the L2 RMS deviation, using the trapezoidal rule.\n        # ----------------------------------------------------------------------\n        integral_d2_squared = np.trapz(d_x**2, x_grid)\n        d2_hartree = np.sqrt(integral_d2_squared)\n        d2_ev = round(d2_hartree * HARTREE_TO_EV, 6)\n\n        # ----------------------------------------------------------------------\n        # 4. Compute K, the discrete midpoint curvature.\n        # Analytically, K = -a/2.\n        # ----------------------------------------------------------------------\n        k_hartree = -a / 2.0\n        k_ev = round(k_hartree * HARTREE_TO_EV, 6)\n        \n        # ----------------------------------------------------------------------\n        # 5. Compute s, the normalized curvature.\n        # The ratio is computed in Hartrees to keep it dimensionless.\n        # ----------------------------------------------------------------------\n        delta_E_abs = abs(E1 - E0)\n        # Avoid division by zero if E1 == E0, though not the case here.\n        s = round(k_hartree / delta_E_abs if delta_E_abs != 0 else 0.0, 6)\n\n        # ----------------------------------------------------------------------\n        # 6. Determine the over_delocalized boolean flag.\n        # ----------------------------------------------------------------------\n        is_over_delocalized = (k_hartree > 0)\n        \n        # ----------------------------------------------------------------------\n        # 7. Collect the results for the current case.\n        # ----------------------------------------------------------------------\n        case_results = [d1_ev, d2_ev, k_ev, s, is_over_delocalized]\n        results_all_cases.append(case_results)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results_all_cases))}]\")\n\nsolve()\n```", "id": "2923346"}, {"introduction": "前一个练习中探讨的能量曲线非线性行为会带来直接的实际后果，其中最著名的就是 Janak 定理在近似泛函中的失效。对于精确泛函，最高占据分子轨道 (HOMO) 能量的负值 ($-\\epsilon_{\\mathrm{HOMO}}$) 精确等于电离势 ($I$)，但自相互作用误差会导致近似泛函系统性地低估此值。本练习 [@problem_id:2804410] 将指导您通过编程，定量地验证这一趋势，并比较 $-\\epsilon_{\\mathrm{HOMO}}$ 近似与更为可靠的 $\\Delta\\mathrm{SCF}$ 方法在不同泛函（LDA, PBE, B3LYP）下的表现，从而培养您在计算化学中诊断泛函性能的实践技能。", "problem": "构建一个完整、可运行的程序，该程序实现一个基于前线轨道的度量标准，用于比较最高占据分子轨道能量的负值 $-\\epsilon_{\\mathrm{HOMO}}$ 与通过粒子数变化的总能量差（通常称为 $\\Delta$自洽场，记为 $\\Delta\\mathrm{SCF}$）计算的电离势，以及与实验电离势的比较，并将观察到的系统性趋势与密度泛函理论 (DFT) 中的自相互作用和离域误差联系起来。你的推理过程应仅基于第一性原理和经过充分检验的事实：(i) 电离势 $I$ 定义为在固定核几何构型下（垂直电离），$N$ 电子体系的总能量差 $I = E(N-1) - E(N)$，(ii) 使用精确泛函的 Kohn–Sham (KS) DFT 满足电离势定理，该定理指出最高占据 KS 本征值等于电离势的负值，即 $-\\epsilon_{\\mathrm{HOMO}} = I$，以及 (iii) 近似的交换相关泛函存在自相互作用误差及相关的离域误差，这通常导致 $-\\epsilon_{\\mathrm{HOMO}}$ 低估 $I$，而 $\\Delta\\mathrm{SCF}$ 方法通常能减少这种偏差。\n\n你的程序必须对每种交换相关泛函，根据所提供的数据计算以下度量：\n- 对于每个分子 $i$，计算其电离势的 KS 前线轨道估计值 $I^{\\mathrm{H}}_i = -\\epsilon_{\\mathrm{HOMO},i}$ 和 $\\Delta\\mathrm{SCF}$ 估计值 $I^{\\Delta}_i = E_{N-1,i} - E_{N,i}$，单位均为电子伏特。\n- 对于每种方法 $m \\in \\{\\mathrm{H}, \\Delta\\}$，构建带符号误差数组 $\\{e^{m}_i\\}$，其中 $e^{m}_i = I^{m}_i - I^{\\mathrm{exp}}_i$ 是相对于实验电离势 $I^{\\mathrm{exp}}_i$ 的误差。\n- 对于每种方法，计算平均符号误差 $\\mathrm{MSE}^{m} = \\frac{1}{M}\\sum_{i=1}^M e^{m}_i$ 和平均绝对误差 $\\mathrm{MAE}^{m} = \\frac{1}{M}\\sum_{i=1}^M |e^{m}_i|$。\n- 定义一个自相互作用偏差差 $\\mathcal{B}_{\\mathrm{diff}} = \\mathrm{MSE}^{\\mathrm{H}} - \\mathrm{MSE}^{\\Delta}$ 和一个自相互作用偏差比 $\\mathcal{B}_{\\mathrm{ratio}} = \\frac{\\mathrm{MAE}^{\\mathrm{H}}}{\\mathrm{MAE}^{\\Delta}}$。将 $\\mathcal{B}_{\\mathrm{diff}} < 0$ 和 $\\mathcal{B}_{\\mathrm{ratio}} > 1$ 解释为 $-\\epsilon_{\\mathrm{HOMO}}$ 相对于 $\\Delta\\mathrm{SCF}$ 的系统性低估，这与自相互作用和离域误差一致。\n- 对每种方法 $m$，计算预测电离势与实验电离势之间的皮尔逊相关系数 $r\\big(I^{m}, I^{\\mathrm{exp}}\\big)$。\n所有能量必须以电子伏特（缩写为 $\\mathrm{eV}$）处理和报告。\n\n使用以下测试套件。该分子集涵盖一种具有大电离势的稀有气体（边界情况）、一种第二周期稀有气体和两种闭壳层分子。对于每种泛函，数据提供了 KS 最高占据分子轨道能量 $\\epsilon_{\\mathrm{HOMO}}$（单位 $\\mathrm{eV}$，为负数），以及 $N$ 电子和 $(N-1)$ 电子态的总能量（单位 $\\mathrm{eV}$）：\n- 分子（四种情况；$M=4$）：\n  1. He，实验 $I^{\\mathrm{exp}} = 24.59\\,\\mathrm{eV}$，\n  2. Ne，实验 $I^{\\mathrm{exp}} = 21.56\\,\\mathrm{eV}$，\n  3. $\\mathrm{H_2O}$，实验 $I^{\\mathrm{exp}} = 12.62\\,\\mathrm{eV}$，\n  4. $\\mathrm{N_2}$，实验 $I^{\\mathrm{exp}} = 15.58\\,\\mathrm{eV}$。\n- 局域密度近似 (LDA)：\n  - $\\epsilon_{\\mathrm{HOMO}}$ (单位 $\\mathrm{eV}$): He $-15.5$, Ne $-13.0$, $\\mathrm{H_2O}$ $-6.8$, $\\mathrm{N_2}$ $-8.9$。\n  - $E(N)$ (单位 $\\mathrm{eV}$): He $-80.0$, Ne $-3500.0$, $\\mathrm{H_2O}$ $-2075.0$, $\\mathrm{N_2}$ $-2960.0$。\n  - $E(N-1)$ (单位 $\\mathrm{eV}$): He $-56.1$, Ne $-3479.0$, $\\mathrm{H_2O}$ $-2062.7$, $\\mathrm{N_2}$ $-2944.8$。\n- 广义梯度近似 (Perdew–Burke–Ernzerhof, PBE)：\n  - $\\epsilon_{\\mathrm{HOMO}}$ (单位 $\\mathrm{eV}$): He $-16.8$, Ne $-14.5$, $\\mathrm{H_2O}$ $-7.2$, $\\mathrm{N_2}$ $-9.8$。\n  - $E(N)$ (单位 $\\mathrm{eV}$): He $-79.5$, Ne $-3500.5$, $\\mathrm{H_2O}$ $-2075.3$, $\\mathrm{N_2}$ $-2960.5$。\n  - $E(N-1)$ (单位 $\\mathrm{eV}$): He $-55.3$, Ne $-3479.3$, $\\mathrm{H_2O}$ $-2062.9$, $\\mathrm{N_2}$ $-2945.2$。\n- 杂化泛函 (Becke, 3-parameter, Lee–Yang–Parr, B3LYP)：\n  - $\\epsilon_{\\mathrm{HOMO}}$ (单位 $\\mathrm{eV}$): He $-20.5$, Ne $-17.8$, $\\mathrm{H_2O}$ $-8.3$, $\\mathrm{N_2}$ $-11.7$。\n  - $E(N)$ (单位 $\\mathrm{eV}$): He $-79.2$, Ne $-3501.0$, $\\mathrm{H_2O}$ $-2075.6$, $\\mathrm{N_2}$ $-2961.0$。\n  - $E(N-1)$ (单位 $\\mathrm{eV}$): He $-54.7$, Ne $-3479.6$, $\\mathrm{H_2O}$ $-2063.1$, $\\mathrm{N_2}$ $-2945.6$。\n\n你的程序必须：\n- 完全以 $\\mathrm{eV}$ 为单位实现上述度量定义。\n- 对 $[\\mathrm{LDA}, \\mathrm{PBE}, \\mathrm{B3LYP}]$ 顺序中的每种泛函，计算以下包含八个浮点数的有序列表，每个浮点数四舍五入到三位小数：\n  1. $\\mathrm{MSE}^{\\mathrm{H}}$，\n  2. $\\mathrm{MSE}^{\\Delta}$，\n  3. $\\mathrm{MAE}^{\\mathrm{H}}$，\n  4. $\\mathrm{MAE}^{\\Delta}$，\n  5. $\\mathcal{B}_{\\mathrm{diff}}$，\n  6. $\\mathcal{B}_{\\mathrm{ratio}}$，\n  7. $r\\big(I^{\\mathrm{H}}, I^{\\mathrm{exp}}\\big)$，\n  8. $r\\big(I^{\\Delta}, I^{\\mathrm{exp}}\\big)$。\n- 将三种泛函的计算结果按相同顺序聚合成一个单一列表，并以一行形式打印结果。该结果为一个由方括号包围的逗号分隔列表，其中每种泛函的结果又表现为一个独立的、由方括号包围的逗号分隔子列表。例如：\"[[f1_1,f1_2,...,f1_8],[f2_1,...,f2_8],[f3_1,...,f3_8]]\"。所有数值输出必须四舍五入到三位小数。不使用角度。不得出现百分比；比率请使用小数形式。\n\n此测试套件涵盖：一般情况（水和氮气）、边界情况（高电离势的氦和氖），并展示了与自相互作用和离域误差相关的系统性偏差。你的最终输出必须仅包含一行指定格式的内容。", "solution": "问题陈述已经过严格验证，并被确定为有效。它在科学上基于密度泛函理论（DFT）的原理，问题设定良好，提供了所有必要的数据和定义，并且表述客观。任务是实现对 DFT 框架内两种常用电离势近似方法的计算分析——一种基于最高占据分子轨道（HOMO）能量，另一种基于总能量差（$\\Delta$SCF）——并将其性能与近似交换相关泛函中已知的自相互作用误差问题联系起来。\n\n这个问题的理论基础建立在电子结构理论的三个关键概念之上。\n\n首先，垂直电离势 $I$ 被严格定义为在 $N$ 电子基态的固定几何构型下，$(N-1)$ 电子体系与 $N$ 电子体系之间的总能量差。这表示为：\n$$\nI = E(N-1) - E(N)\n$$\n这种计算电离势的方法被称为 $\\Delta$ 自洽场（$\\Delta\\mathrm{SCF}$）方法，在此记为 $I^{\\Delta}$。它需要两次独立的、计算量大的 SCF 计算。\n\n其次，对于*精确的* Kohn-Sham（KS）DFT 泛函，一个基本定理（通常称为电离势定理或 Janak 定理）指出，最高占据 KS 本征值的负值 $-\\epsilon_{\\mathrm{HOMO}}$ 精确等于第一电离势：\n$$\n-\\epsilon_{\\mathrm{HOMO}} = I\n$$\n这为计算电离势提供了一条直接且计算成本较低的途径，在此记为 $I^{\\mathrm{H}}$。\n\n第三，在实际 DFT 计算中使用的交换相关泛函（如 LDA、PBE、B3LYP）是*近似的*。这类泛函的一个主要缺陷是自相互作用误差（SIE），即一个电子与其自身的电荷密度发生非物理性的相互作用。该误差在所有轨道上的分布并不均匀，且倾向于使占据轨道的能量不稳定，从而将其能量推高（使其负值变小）。HOMO 通常受影响最大。因此，对于近似泛函，$\\epsilon_{\\mathrm{HOMO}}$ 的值被人为地抬高，导致其估计值 $-\\epsilon_{\\mathrm{HOMO}}$ 系统性地低估了真实的电离势 $I$。这一现象也与离域误差有关，即近似泛函错误地偏爱空间离域的电子密度，而不是正确的局域密度，这也导致了 $\\epsilon_{\\mathrm{HOMO}}$ 的错误抬高。$\\Delta\\mathrm{SCF}$ 方法 $I^{\\Delta}$ 虽然也使用近似泛函，但通常能得出更准确的结果，因为总能量 $E(N)$ 和 $E(N-1)$ 中存在的自相互作用误差在求差时会部分抵消。像 B3LYP 这样的杂化泛函包含一部分精确交换，这明确抵消了一部分自相互作用，因此与 LDA 或 PBE 相比，预计其 $-\\epsilon_{\\mathrm{HOMO}}$ 的低估偏差会更小。\n\n计算流程如下。对于三种泛函（LDA、PBE、B3LYP）中的每一种，我们将使用所提供的四种分子（He、Ne、$\\mathrm{H_2O}$、$\\mathrm{N_2}$）的数据执行以下步骤，其中分子数量为 $M=4$。\n\n1.  实验电离势以数组 $I^{\\mathrm{exp}} = \\{I^{\\mathrm{exp}}_i\\}_{i=1}^M$ 的形式给出。\n\n2.  对每个分子 $i$，计算两种理论电离势估计值：\n    -   基于 HOMO 的估计值： $I^{\\mathrm{H}}_i = -\\epsilon_{\\mathrm{HOMO},i}$。\n    -   $\\Delta\\mathrm{SCF}$ 估计值： $I^{\\Delta}_i = E_{N-1,i} - E_{N,i}$。\n    这会产生两个预测值数组，$I^{\\mathrm{H}}$ 和 $I^{\\Delta}$。\n\n3.  对每种方法 $m \\in \\{\\mathrm{H}, \\Delta\\}$，计算相对于实验值的带符号误差：\n    $$\n    e^{m}_i = I^{m}_i - I^{\\mathrm{exp}}_i\n    $$\n    这会得到两个误差数组，$\\{e^{\\mathrm{H}}_i\\}$ 和 $\\{e^{\\Delta}_i\\}$。\n\n4.  根据这些误差数组，计算每种方法的平均符号误差（MSE）和平均绝对误差（MAE）：\n    $$\n    \\mathrm{MSE}^{m} = \\frac{1}{M}\\sum_{i=1}^M e^{m}_i\n    $$\n    $$\n    \\mathrm{MAE}^{m} = \\frac{1}{M}\\sum_{i=1}^M |e^{m}_i|\n    $$\n    MSE 量化了系统性偏差（低估或高估），而 MAE 则衡量误差的平均大小。\n\n5.  计算自相互作用偏差度量，用于比较两种理论方法的性能：\n    -   偏差差： $\\mathcal{B}_{\\mathrm{diff}} = \\mathrm{MSE}^{\\mathrm{H}} - \\mathrm{MSE}^{\\Delta}$。一个大的负值表示基于 HOMO 的方法比 $\\Delta\\mathrm{SCF}$ 方法更严重地系统性低估了 IP。\n    -   偏差比： $\\mathcal{B}_{\\mathrm{ratio}} = \\frac{\\mathrm{MAE}^{\\mathrm{H}}}{\\mathrm{MAE}^{\\Delta}}$。一个远大于 1 的值表示基于 HOMO 的方法平均而言准确性显著较低。\n\n6.  最后，通过计算皮尔逊相关系数 $r(I^{m}, I^{\\mathrm{exp}})$ 来评估每种方法与实验数据的相关性，其定义为：\n    $$\n    r(X, Y) = \\frac{\\sum_{i=1}^M (X_i - \\bar{X})(Y_i - \\bar{Y})}{\\sqrt{\\sum_{i=1}^M (X_i - \\bar{X})^2} \\sqrt{\\sum_{i=1}^M (Y_i - \\bar{Y})^2}}\n    $$\n    其中 $X$ 代表理论值（$I^{\\mathrm{H}}$ 或 $I^{\\Delta}$），$Y$ 代表实验值（$I^{\\mathrm{exp}}$）。$r$ 值接近 1 表示存在强正线性关系。\n\n将对每种泛函实施这一系列计算，并将得到的八个度量值收集并按指定格式输出。预期结果将定量地展示理论原理：$I^{\\mathrm{H}}$ 中存在一个大的负偏差，且该偏差从 LDA 到 PBE 再到 B3LYP 依次减小；$I^{\\Delta}$ 具有更高的准确性和更小的偏差；因此，对于所有泛函，$\\mathcal{B}_{\\mathrm{diff}} < 0$ 且 $\\mathcal{B}_{\\mathrm{ratio}} > 1$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements a frontier-orbital based metric for comparing DFT approximations\n    of ionization potentials and relates trends to self-interaction errors.\n    \"\"\"\n\n    # Experimental Ionization Potentials in eV for [He, Ne, H2O, N2]\n    exp_ips = np.array([24.59, 21.56, 12.62, 15.58])\n\n    # Data for each functional.\n    # Structure: {homo_ev: [...], e_n: [...], e_n_minus_1: [...]}\n    test_cases = [\n        { # LDA\n            'name': 'LDA',\n            'homo_ev': np.array([-15.5, -13.0, -6.8, -8.9]),\n            'e_n': np.array([-80.0, -3500.0, -2075.0, -2960.0]),\n            'e_n_minus_1': np.array([-56.1, -3479.0, -2062.7, -2944.8]),\n        },\n        { # PBE\n            'name': 'PBE',\n            'homo_ev': np.array([-16.8, -14.5, -7.2, -9.8]),\n            'e_n': np.array([-79.5, -3500.5, -2075.3, -2960.5]),\n            'e_n_minus_1': np.array([-55.3, -3479.3, -2062.9, -2945.2]),\n        },\n        { # B3LYP\n            'name': 'B3LYP',\n            'homo_ev': np.array([-20.5, -17.8, -8.3, -11.7]),\n            'e_n': np.array([-79.2, -3501.0, -2075.6, -2961.0]),\n            'e_n_minus_1': np.array([-54.7, -3479.6, -2063.1, -2945.6]),\n        }\n    ]\n\n    all_results = []\n\n    for functional_data in test_cases:\n        # 1. Calculate theoretical ionization potentials\n        # I^H from HOMO eigenvalues\n        i_h = -functional_data['homo_ev']\n        \n        # I^Delta from ΔSCF\n        i_delta = functional_data['e_n_minus_1'] - functional_data['e_n']\n\n        # 2. Calculate errors\n        errors_h = i_h - exp_ips\n        errors_delta = i_delta - exp_ips\n\n        # 3. Compute metrics\n        # Mean Signed Error (MSE)\n        mse_h = np.mean(errors_h)\n        mse_delta = np.mean(errors_delta)\n\n        # Mean Absolute Error (MAE)\n        mae_h = np.mean(np.abs(errors_h))\n        mae_delta = np.mean(np.abs(errors_delta))\n\n        # Self-interaction bias metrics\n        b_diff = mse_h - mse_delta\n        # Handle division by zero, although not expected with given data\n        b_ratio = mae_h / mae_delta if mae_delta != 0 else np.inf\n\n        # Pearson correlation coefficient\n        corr_h = np.corrcoef(i_h, exp_ips)[0, 1]\n        corr_delta = np.corrcoef(i_delta, exp_ips)[0, 1]\n\n        # 4. Collect results for the current functional\n        current_results = [\n            mse_h, mse_delta, mae_h, mae_delta, \n            b_diff, b_ratio, corr_h, corr_delta\n        ]\n        all_results.append(current_results)\n\n    # 5. Format the final output string\n    # Each sublist is formatted to strings with 3 decimal places\n    formatted_results = []\n    for res_list in all_results:\n        formatted_list = [f\"{val:.3f}\" for val in res_list]\n        formatted_results.append(f\"[{','.join(formatted_list)}]\")\n    \n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output_string)\n\nsolve()\n```", "id": "2804410"}, {"introduction": "自相互作用和离域误差在某些化学体系中尤为棘手，过渡金属配合物便是一个典型的例子。在这些体系中，离域误差可能导致 $d$ 电子过度地、非物理地离域到配体上，从而严重影响对自旋密度分布和电子结构性质（如配位场分裂能）的预测。本练习 [@problem_id:2804353] 采用一个简化但极具洞察力的二能级模型，模拟不同类型的泛函（GGA、杂化泛函和自相互作用校正）如何处理这一挑战，让您直观地理解抽象的泛函误差与具体的化学键描述之间的深刻联系。", "problem": "您将使用一个任何开发者都可以实现的简单通用双能级混合框架，来模拟密度泛函理论 (DFT) 中的自相互作用误差和离域误差如何影响高自旋铁配合物的自旋密度分布和预测的配体场分裂。该体系是一个八面体、高自旋的铁中心，具有形式 $d^5$ 构型，其中五个金属 d 轨道分裂为三重简并的 $t_{2g}$ 组和双重简并的 $e_g$ 组。每个给定对称性的金属 d 轨道与一个对称性匹配的配体轨道混合，形成一个双能级问题。您必须通过一个缩放金属-配体耦合的单一参数来模拟三种近似的 DFT 处理方法——广义梯度近似 (GGA)、杂化泛函和自相互作用校正 (SIC)，该参数代表了自相互作用驱动的离域的严重程度。\n\n基本原理和建模假设：\n- 高自旋 $d^5$ 构型有五个未成对电子，每个 d 派生轨道被一个自旋向上 ($\\alpha$) 的电子占据，而自旋向下 ($\\beta$) 的占据数为零。根据定义，任何位点上的自旋密度是该位点上积分的自旋向上和自旋向下电子布居数之差。\n- 每个给定对称性的 d 轨道只与一个对称性匹配的配体轨道混合，得到的量子态通过对角化每个轨道对称性的 $2 \\times 2$ 厄米哈密顿量获得。这是线性代数和量子力学中的一个标准双能级混合模型。\n- 对于每个轨道对称性 $s \\in \\{ t, e \\}$ ($t$ 代表 $t_{2g}$，$e$ 代表 $e_g$)，使用哈密顿量\n$$\n\\mathbf{H}_s \\;=\\; \\begin{pmatrix}\n\\varepsilon_d^{(s)} & V_s^{(\\text{eff})} \\\\\nV_s^{(\\text{eff})} & \\varepsilon_L\n\\end{pmatrix},\n$$\n其中 $\\varepsilon_d^{(t)} = 0$ (参考)，$\\varepsilon_d^{(e)} = \\Delta_0$ 是裸配体场分裂，$\\varepsilon_L$ 是对称性匹配的配体轨道的能量，而 $V_s^{(\\text{eff})}$ 是对称性 $s$ 的有效金属-配体耦合。\n- 为模拟自相互作用和离域误差，通过一个依赖于泛函的因子来缩放基础耦合，从而定义有效耦合，\n$$\nV_s^{(\\text{eff})} \\;=\\; s_f \\, V_s,\n$$\n其中缩放因子固定为 $s_{\\text{GGA}} = 1.20$、$s_{\\text{HYB}} = 1.00$ 和 $s_{\\text{SIC}} = 0.80$。这模拟了广义梯度近似 (GGA) 会过度离域（更强的有效耦合），杂化泛函居中，而自相互作用校正 (SIC) 则会定域化（更弱的有效耦合）。\n- 对于每个对称性 $s$，对角化 $\\mathbf{H}_s$ 以获得较高的（反键）本征态能量 $E_{+,s}$ 及其归一化本征矢量。设该本征矢量中的金属 d 轨道系数为 $c_{d,s}$；则该较高能态中的金属成分分数为 $|c_{d,s}|^2$。因为构型是高自旋 $d^5$，在五个 d 派生的较高能态中各有_一个_ $\\alpha$ 电子，且没有 $\\beta$ 电子，所以总金属自旋密度为\n$$\n\\rho_M \\;=\\; 3 \\, |c_{d,t}|^2 \\;+\\; 2 \\, |c_{d,e}|^2,\n$$\n配体自旋密度为 $5 - \\rho_M$。所有自旋密度都是无量纲的。\n- 这里定义的预测配体场分裂是 $e_g$ 派生和 $t_{2g}$ 派生反键态的能量之差：\n$$\n\\Delta_{\\text{pred}} \\;=\\; E_{+,e} \\;-\\; E_{+,t}.\n$$\n所有能量均以电子伏特 (eV) 表示。\n- 为了量化在三种泛函类型中，自旋密度在金属上的定域化程度与预测分裂大小的关系，计算三元组 $\\{\\rho_M^{\\text{GGA}}, \\rho_M^{\\text{HYB}}, \\rho_M^{\\text{SIC}}\\}$ 和 $\\{\\Delta_{\\text{pred}}^{\\text{GGA}}, \\Delta_{\\text{pred}}^{\\text{HYB}}, \\Delta_{\\text{pred}}^{\\text{SIC}}\\}$ 之间的皮尔逊相关系数，\n$$\nr \\;=\\; \\frac{\\sum_{i=1}^{3} \\left(x_i - \\bar{x}\\right)\\left(y_i - \\bar{y}\\right)}{\\sqrt{\\sum_{i=1}^{3} \\left(x_i - \\bar{x}\\right)^2} \\; \\sqrt{\\sum_{i=1}^{3} \\left(y_i - \\bar{y}\\right)^2}},\n$$\n其中 $x_i$ 是金属自旋密度，$y_i$ 是预测的分裂值，$\\bar{x}$、$\\bar{y}$ 是它们的平均值。如果分母为零（没有方差），则定义 $r = 0$。\n\n必需的计算任务：\n1. 对于每个对称性 $s \\in \\{t,e\\}$ 和每个泛函缩放因子 $s_f \\in \\{1.20, 1.00, 0.80\\}$，对角化 $2 \\times 2$ 哈密顿量以获得较高的本征值 $E_{+,s}$ 和归一化的本征矢量。使用得到的本征矢量计算该较高能态中的金属成分分数 $|c_{d,s}|^2$。\n2. 按照上述规定，计算总金属自旋密度 $\\rho_M$。\n3. 计算预测的配体场分裂 $\\Delta_{\\text{pred}}$，单位为电子伏特。\n4. 按照上述定义，计算三种泛函类型之间 $\\rho_M$ 和 $\\Delta_{\\text{pred}}$ 的皮尔逊相关系数 $r$。\n5. 对于每个测试用例，按以下顺序输出一个包含七个浮点数的列表：$[\\rho_M^{\\text{GGA}}, \\rho_M^{\\text{HYB}}, \\rho_M^{\\text{SIC}}, \\Delta_{\\text{pred}}^{\\text{GGA}}, \\Delta_{\\text{pred}}^{\\text{HYB}}, \\Delta_{\\text{pred}}^{\\text{SIC}}, r]$。将所有浮点数四舍五入到六位小数。能量单位默认为电子伏特。\n\n测试套件（每个元组为 $(\\Delta_0, \\varepsilon_L, V_t, V_e)$，所有类能量的量纲均为电子伏特）：\n- 用例 A: $(1.8, -3.0, 0.6, 1.5)$\n- 用例 B: $(0.5, -2.0, 0.4, 1.0)$\n- 用例 C: $(1.0, 0.95, 0.5, 1.2)$\n- 用例 D: $(2.5, -1.0, 0.2, 0.5)$\n- 用例 E (边缘情况，无混合): $(1.2, -3.0, 0.0, 0.0)$\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表。列表中的每个元素本身也是一个列表，对应每个测试用例的结果，并遵循上述指定顺序和测试套件的顺序。例如，语法模板为 $[[\\dots],[\\dots],\\dots]$。不应打印任何额外文本。", "solution": "问题陈述已经过验证，被认为是科学合理的、定义明确的且客观的。它提出了一个简化但连贯的模型，用于研究密度泛函理论 (DFT) 中的自相互作用和离域误差对高自旋过渡金属配合物电子结构的影响。该问题是自洽的，提供了所有必要的参数、定义和计算任务。我们可以开始求解。\n\n此问题的核心是代表金属 d 轨道和对称性匹配的配体轨道之间相互作用的 $2 \\times 2$ 厄米矩阵的对角化。对于每个轨道对称性 $s \\in \\{t, e\\}$ (代表 $t_{2g}$ 和 $e_g$) 和每种由缩放因子 $s_f$ 表征的泛函类型，哈密顿量由下式给出：\n$$\n\\mathbf{H}_{s,f} \\;=\\; \\begin{pmatrix}\n\\varepsilon_d^{(s)} & V_s^{(\\text{eff})} \\\\\nV_s^{(\\text{eff})} & \\varepsilon_L\n\\end{pmatrix} \\;=\\; \\begin{pmatrix}\n\\varepsilon_d^{(s)} & s_f V_s \\\\\ns_f V_s & \\varepsilon_L\n\\end{pmatrix}\n$$\n其中 $\\varepsilon_d^{(s)}$ 是对称性为 $s$ 的金属 d 轨道的能量，$\\varepsilon_L$ 是配体轨道的能量，$V_s$是基础金属-配体耦合，而 $s_f$是泛函的缩放因子 ($s_{\\text{GGA}} = 1.20$, $s_{\\text{HYB}} = 1.00$, $s_{\\text{SIC}} = 0.80$)。\n\n该哈密顿量的本征值 $E$ 是通过求解特征方程 $\\det(\\mathbf{H}_{s,f} - E\\mathbf{I}) = 0$ 得到的，这是一个关于 $E$ 的二次方程。两个解是：\n$$\nE_{\\pm,s,f} = \\frac{\\varepsilon_d^{(s)} + \\varepsilon_L}{2} \\pm \\frac{1}{2}\\sqrt{(\\varepsilon_d^{(s)} - \\varepsilon_L)^2 + 4(s_f V_s)^2}\n$$\n问题要求的是较高的（反键）本征值，它对应于能量较高的解，记为 $E_{+,s,f}$ (使用 ‘$+$’ 号)。\n\n为了找到金属成分 $|c_{d,s,f}|^2$，必须确定反键态对应的本征矢量 $|\\psi_{+,s,f}\\rangle = c_{d,s,f}|d_s\\rangle + c_{L,s,f}|L_s\\rangle$。通过求解本征值方程 $(\\mathbf{H}_{s,f} - E_{+,s,f}\\mathbf{I})\\mathbf{c} = 0$ 并应用归一化条件 $|c_{d,s,f}|^2 + |c_{L,s,f}|^2 = 1$，我们推导出金属 d 轨道对反键态的成分分数表达式：\n$$\n|c_{d,s,f}|^2 = \\frac{(s_f V_s)^2}{(s_f V_s)^2 + (\\varepsilon_d^{(s)} - E_{+,s,f})^2}\n$$\n在耦合为零 ($V_s = 0$) 的特殊情况下，轨道不发生混合。较高的本征态就是两个基组轨道中能量较高的那个，即 $\\varepsilon_d^{(s)}$ 或 $\\varepsilon_L$。如果 $\\varepsilon_d^{(s)} > \\varepsilon_L$，则 $E_{+,s,f} = \\varepsilon_d^{(s)}$ 且该态为纯金属态，所以 $|c_{d,s,f}|^2 = 1$。如果 $\\varepsilon_L > \\varepsilon_d^{(s)}$，则 $E_{+,s,f} = \\varepsilon_L$ 且该态为纯配体态，所以 $|c_{d,s,f}|^2 = 0$。\n\n在为每个对称性 ($s=t,e$) 和泛函 ($f \\in \\{\\text{GGA}, \\text{HYB}, \\text{SIC}\\}$) 计算出这些量之后，我们就可以组合出所需的可观测量。\n总金属自旋密度 $\\rho_M^f$ 是基于高自旋 $d^5$ 构型计算的，其中五个反键轨道各被一个电子占据。金属成分是这五个轨道的金属成分之和：\n$$\n\\rho_M^f = 3 \\cdot |c_{d,t,f}|^2 + 2 \\cdot |c_{d,e,f}|^2\n$$\n预测的配体场分裂 $\\Delta_{\\text{pred}}^f$ 定义为 $e_g$ 和 $t_{2g}$ 对称性的反键态之间的能量差：\n$$\n\\Delta_{\\text{pred}}^f = E_{+,e,f} - E_{+,t,f}\n$$\n最后，我们必须量化三种泛函类型中自旋定域化与预测分裂之间的关系。这通过计算金属自旋密度集合 $X = \\{\\rho_M^{\\text{GGA}}, \\rho_M^{\\text{HYB}}, \\rho_M^{\\text{SIC}}\\}$ 与预测分裂集合 $Y = \\{\\Delta_{\\text{pred}}^{\\text{GGA}}, \\Delta_{\\text{pred}}^{\\text{HYB}}, \\Delta_{\\text{pred}}^{\\text{SIC}}\\}$ 之间的皮尔逊相关系数 $r$ 来完成。公式如下：\n$$\nr \\;=\\; \\frac{\\sum_{i=1}^{3} \\left(x_i - \\bar{x}\\right)\\left(y_i - \\bar{y}\\right)}{\\sqrt{\\sum_{i=1}^{3} \\left(x_i - \\bar{x}\\right)^2} \\; \\sqrt{\\sum_{i=1}^{3} \\left(y_i - \\bar{y}\\right)^2}}\n$$\n其中 $\\bar{x}$ 和 $\\bar{y}$ 是样本均值。如果任一集合的方差为零，分母将为零，在这种情况下 $r$ 定义为 $0$。\n\n实现过程将首先遍历每个测试用例，然后遍历三种泛函类型，为两种对称性计算 $|c_{d,s,f}|^2$ 和 $E_{+,s,f}$。接着使用这些中间结果计算最终的可观测量 $\\rho_M^f$ 和 $\\Delta_{\\text{pred}}^f$。每个测试用例的相关系数 $r$ 由这些可观测量的三元组计算一次。所有结果将按要求格式化为六位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the DFT modeling problem for a series of test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each tuple is (Delta_0, epsilon_L, V_t, V_e).\n    test_cases = [\n        (1.8, -3.0, 0.6, 1.5),  # Case A\n        (0.5, -2.0, 0.4, 1.0),  # Case B\n        (1.0, 0.95, 0.5, 1.2),  # Case C\n        (2.5, -1.0, 0.2, 0.5),  # Case D\n        (1.2, -3.0, 0.0, 0.0),  # Case E (edge, no mixing)\n    ]\n\n    s_factors = {'GGA': 1.20, 'HYB': 1.00, 'SIC': 0.80}\n    functional_order = ['GGA', 'HYB', 'SIC']\n\n    all_results = []\n    for case in test_cases:\n        delta0, eps_L, V_t, V_e = case\n\n        rho_M_values = []\n        delta_pred_values = []\n        \n        eps_d_s = {'t': 0.0, 'e': delta0}\n        V_s_base = {'t': V_t, 'e': V_e}\n\n        for func in functional_order:\n            s_f = s_factors[func]\n            \n            c_d_sq_s = {}\n            E_plus_s = {}\n\n            for s in ['t', 'e']:\n                eps_d = eps_d_s[s]\n                V_base = V_s_base[s]\n                V_eff = s_f * V_base\n\n                # Handle the case of zero coupling (unmixed states)\n                if np.isclose(V_eff, 0.0):\n                    if eps_d > eps_L:\n                        E_plus = eps_d\n                        c_d_sq = 1.0\n                    else:\n                        E_plus = eps_L\n                        c_d_sq = 0.0\n                else:\n                    # Diagonalize the 2x2 Hamiltonian to find the upper eigenvalue\n                    E_plus = 0.5 * (eps_d + eps_L) + 0.5 * np.sqrt((eps_d - eps_L)**2 + 4 * V_eff**2)\n                    # Calculate metal character in the upper (antibonding) state\n                    c_d_sq = V_eff**2 / (V_eff**2 + (eps_d - E_plus)**2)\n                \n                E_plus_s[s] = E_plus\n                c_d_sq_s[s] = c_d_sq\n            \n            # Compute total metal spin density\n            rho_M = 3 * c_d_sq_s['t'] + 2 * c_d_sq_s['e']\n            # Compute predicted ligand-field splitting\n            delta_pred = E_plus_s['e'] - E_plus_s['t']\n            \n            rho_M_values.append(rho_M)\n            delta_pred_values.append(delta_pred)\n            \n        # Compute Pearson correlation coefficient for the triplets\n        x = np.array(rho_M_values)\n        y = np.array(delta_pred_values)\n\n        mean_x = np.mean(x)\n        mean_y = np.mean(y)\n\n        sum_sq_dev_x = np.sum((x - mean_x)**2)\n        sum_sq_dev_y = np.sum((y - mean_y)**2)\n        \n        # Check for zero variance to avoid division by zero\n        if np.isclose(sum_sq_dev_x, 0.0) or np.isclose(sum_sq_dev_y, 0.0):\n            r = 0.0\n        else:\n            numerator = np.sum((x - mean_x) * (y - mean_y))\n            denominator = np.sqrt(sum_sq_dev_x * sum_sq_dev_y)\n            r = numerator / denominator\n\n        # Compile results for the current test case\n        case_results = rho_M_values + delta_pred_values + [r]\n        all_results.append(case_results)\n\n    # Format the final output string as a list of lists.\n    # Each number is formatted to 6 decimal places.\n    formatted_case_results = []\n    for res_list in all_results:\n        str_list = [f\"{val:.6f}\" for val in res_list]\n        formatted_case_results.append(f\"[{','.join(str_list)}]\")\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_case_results)}]\")\n\nsolve()\n```", "id": "2804353"}]}