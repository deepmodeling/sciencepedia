{"hands_on_practices": [{"introduction": "这项实践深入探讨了时间相关密度泛函理论（TD-DFT）中电荷转移问题的理论核心。通过分析一个可以精确求解的双中心哈伯德模型，你将可以从解析上推导出绝热局域近似（adiabatic local approximations）所引入的巨大误差。这项纸笔练习将加深你对多体理论和 TD-DFT 基本原理的理解，并清晰地揭示为何这些近似在处理长程激发时会失效 [@problem_id:2878994]。", "problem": "考虑一个包含两个电子的非对称双位点哈伯德二聚体，其哈密顿量定义为\n$$\n\\hat{H} \\;=\\; -t \\sum_{\\sigma}\\left(\\hat{c}_{1\\sigma}^{\\dagger}\\hat{c}_{2\\sigma} + \\hat{c}_{2\\sigma}^{\\dagger}\\hat{c}_{1\\sigma}\\right) \\;+\\; U \\sum_{i=1}^{2} \\hat{n}_{i\\uparrow}\\hat{n}_{i\\downarrow} \\;+\\; \\frac{\\Delta}{2}\\,(\\hat{n}_{1}-\\hat{n}_{2}),\n$$\n其中 $t>0$ 是位点间跃迁参数，$U>0$ 是在位相互作用强度，$\\Delta>0$ 是位点能量非对称性，在位能量分别为 $\\varepsilon_{1}=+\\Delta/2$ 和 $\\varepsilon_{2}=-\\Delta/2$。$\\hat{c}_{i\\sigma}^{\\dagger}$ 在位点 $i$ 上产生一个自旋为 $\\sigma$ 的电子，且 $\\hat{n}_{i\\sigma}=\\hat{c}_{i\\sigma}^{\\dagger}\\hat{c}_{i\\sigma}$，$\\hat{n}_{i}=\\hat{n}_{i\\uparrow}+\\hat{n}_{i\\downarrow}$。在 $t \\to 0^{+}$ 的严格极限下进行计算，其中 $0<\\Delta<U$，并仅考虑单重态。\n\n此处，电荷转移激发定义为相对于基态，位点占据数改变了一个电子的最低单重激发态（即，在位点间转移了一个电子）。\n\n使用第一性原理多体推断以及采用绝热局域密度近似 (ALDA) 的线性响应含时密度泛函理论 (TDDFT)，确定其渐近误差\n$$\n\\delta \\;=\\; \\omega_{\\text{exact}} \\;-\\; \\omega_{\\text{ALDA}}\n$$\n在给定参数范围内的 $t \\to 0^{+}$ 极限下，$\\omega_{\\text{exact}}$ 是精确的多体电荷转移激发能，而 $\\omega_{\\text{ALDA}}$ 是由绝热局域 TDDFT 对能够复现相互作用体系基态密度的精确 Kohn–Sham 参考体系所预测的激发能。\n\n将最终答案表示为仅含 $U$ 和 $\\Delta$ 的单一简化解析表达式，无需进行数值计算，也无需单位。", "solution": "我们首先在 $t \\to 0^{+}$ 的严格极限下描述多体能谱的特征。在此极限下，由于跃迁项消失，哈密顿量 $\\hat{H}$ 在位点占据数表象中是对角的。对于两个电子，相关的粒子数态构型及其与相互作用无关的在位能量如下：\n- 双占据的低能位点（位点 $2$）：$|0,2\\rangle$，其能量为\n$$\nE(0,2) \\;=\\; 2\\varepsilon_{2} + U \\;=\\; 2\\left(-\\frac{\\Delta}{2}\\right) + U \\;=\\; -\\Delta + U.\n$$\n- 每个位点上有一个电子（单重态部分）：$|1,1\\rangle_{S}$，其能量为\n$$\nE(1,1) \\;=\\; \\varepsilon_{1} + \\varepsilon_{2} \\;=\\; \\frac{\\Delta}{2} + \\left(-\\frac{\\Delta}{2}\\right) \\;=\\; 0.\n$$\n- 双占据的高能位点（位点 $1$）：$|2,0\\rangle$，其能量为\n$$\nE(2,0) \\;=\\; 2\\varepsilon_{1} + U \\;=\\; 2\\left(+\\frac{\\Delta}{2}\\right) + U \\;=\\; +\\Delta + U.\n$$\n\n给定 $0 < \\Delta < U$，这些能量的顺序为\n$$\nE(0,2) \\;=\\; -\\Delta + U \\;>\\; 0 \\quad \\text{and} \\quad E(2,0) \\;=\\; \\Delta + U \\;>\\; 0,\n$$\n因此，最低能量态是每个位点上各有一个电子的态（以避免在位排斥），即\n$$\nE_{\\text{g}} \\;=\\; E(1,1) \\;=\\; 0.\n$$\n最低电荷转移激发态对应于将一个电子转移到低能位点以在位点 $2$ 上形成双占据，即 $|0,2\\rangle$，因为对于 $\\Delta>0$ 有 $E(0,2) < E(2,0)$。因此，精确的多体电荷转移激发能为\n$$\n\\omega_{\\text{exact}} \\;=\\; E(0,2) - E_{\\text{g}} \\;=\\; (-\\Delta + U) - 0 \\;=\\; U - \\Delta.\n$$\n\n接下来，我们分析采用绝热局域密度近似 (ALDA) 的线性响应含时密度泛函理论 (TDDFT) 对能够复现相互作用体系基态密度的精确 Kohn–Sham (KS) 参考体系的预测。在 $0<\\Delta<U$ 条件下的 $t \\to 0^{+}$ 极限中，相互作用基态是每个位点上各有一个电子，即基态密度满足\n$$\n\\langle \\hat{n}_{1} \\rangle \\;=\\; 1, \\qquad \\langle \\hat{n}_{2} \\rangle \\;=\\; 1.\n$$\n为在 $t \\to 0^{+}$ 的无相互作用 KS 体系中复现此密度，KS 位点势必须使得两个单体位点轨道是简并的，因为任何非零的 KS 非对称性都会导致两个无相互作用的电子双占据能量较低的 KS 位点。因此，精确的 KS 势能差必须为零，\n$$\n\\Delta_{s} \\;=\\; 0,\n$$\n在 $t \\to 0^{+}$ 极限下，从而得到 KS 的 HOMO–LUMO 能隙（即 KS 单粒子跃迁能）为\n$$\n\\omega_{s} \\;=\\; 0.\n$$\n\n在线性响应 TDDFT 中，对于单一主导跃迁（即双能级或单极点近似，由于杂化消失，该近似在 $t \\to 0^{+}$ 极限下是精确的），相互作用激发能 $\\omega$ 满足类 Casida 标量方程\n$$\n\\omega^{2} \\;=\\; \\omega_{s}^{2} + 4\\,\\omega_{s}\\,K_{\\text{Hxc}},\n$$\n其中 $K_{\\text{Hxc}}$ 表示将占据到非占据的 KS 跃迁与其自身耦合的 Hartree-交换-相关核矩阵元。在绝热局域密度近似 (ALDA) 中，$K_{\\text{Hxc}}$ 是与频率无关的有限值，但由于在此极限下 $\\omega_{s}=0$ 是精确成立的，该方程简化为\n$$\n\\omega^{2} \\;=\\; 0,\n$$\n所以 ALDA 预测的激发能为\n$$\n\\omega_{\\text{ALDA}} \\;=\\; 0.\n$$\n一个等价的观点是，在 $t \\to 0^{+}$ 极限下，占据和非占据的 KS 轨道严格地局域在不同位点上，因此跃迁密度交叠为零，导致线性响应核耦合在任何绝热近似下都无法打开一个有限的能隙。\n\n因此，对于此电荷转移激发的渐近 TDDFT 误差为\n$$\n\\delta \\;=\\; \\omega_{\\text{exact}} - \\omega_{\\text{ALDA}} \\;=\\; (U - \\Delta) - 0 \\;=\\; U - \\Delta.\n$$\n\n这就完成了在指定渐近区域内基于多体能谱和线性响应 TDDFT 的推导。", "answer": "$$\\boxed{U-\\Delta}$$", "id": "2878994"}, {"introduction": "从理论转向实践分析，这项练习将让你掌握诊断问题激发的实用工具。你将编写代码来量化评估一个电子激发的电荷转移（charge-transfer, CT）特性和里德堡（Rydberg）特性，这是基于相关轨道的空间分布来完成的。这项实践对于解读计算结果至关重要，能帮助你识别标准 TD-DFT 方法可能不可靠的情况 [@problem_id:2878978]。", "problem": "您将使用一维归一化电子密度作为占据轨道和虚拟轨道概率密度的代理，对单电子激发中的电荷转移和里德堡特性进行建模和量化。其目的在于形式化激发引起的密度变化的片段划分，并计算两个无量纲度量，用于标记已知会导致含时密度泛函理论（TD-DFT）失效的情景：长程电荷转移和弥散（类里德堡）特性。\n\n从以下基本依据开始：\n\n- 一维空间中单个电子的电子密度是一个非负函数 $\\rho(x)$，其积分为1个电子：\n$$\\int_{-\\infty}^{+\\infty} \\rho(x)\\, dx = 1.$$\n- 从密度为 $\\rho_i(x)$ 的占据态到密度为 $\\rho_a(x)$ 的虚拟态的单电子激发会保持电子数守恒，激发引起的差分密度定义为\n$$\\Delta \\rho(x) = \\rho_a(x) - \\rho_i(x), \\quad \\text{其中} \\quad \\int_{-\\infty}^{+\\infty} \\Delta \\rho(x)\\, dx = 0.$$\n- 根据 $x$ 的符号将实数轴划分为给体和受体片段：\n$$D = \\{ x \\in \\mathbb{R} \\, | \\, x < 0 \\}, \\quad A = \\{ x \\in \\mathbb{R} \\, | \\, x > 0 \\}.$$\n- 对于任意实数 $y$，定义其正部为 $[y]_+ = \\max(y, 0)$。\n\n定义以下量化度量：\n\n- 从给体到受体的电荷转移量（单位：电子）为\n$$Q_A^+ = \\int_A [\\Delta \\rho(x)]_+ \\, dx, \\qquad Q_D^- = \\int_D [-\\Delta \\rho(x)]_+ \\, dx,$$\n电荷转移度量为\n$$f_{\\mathrm{CT}} = \\min\\left(Q_A^+,\\, Q_D^-\\right).$$\n对于一个理想的、纯粹的从给体到受体的电荷转移，$f_{\\mathrm{CT}}$ 接近1个电子；对于单个片段上的局域激发，$f_{\\mathrm{CT}}$ 接近0。\n- 里德堡性（弥散性）由出现在渐近区域的附加电子密度部分决定\n$$R = \\{ x \\in \\mathbb{R} \\, | \\, |x| \\ge R_c \\},$$\n为\n$$f_{\\mathrm{Ry}} = \\frac{\\int_R [\\Delta \\rho(x)]_+ \\, dx}{\\int_{-\\infty}^{+\\infty} [\\Delta \\rho(x)]_+ \\, dx}.$$\n较大的 $f_{\\mathrm{Ry}}$ 值表示附加电子密度显著弥散，如里德堡激发中的情况。\n\n在本问题中，用归一化高斯密度（正态分布）来近似占据轨道和虚拟轨道的概率密度：\n$$\\rho(x; \\mu, \\sigma) = \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp\\!\\left( -\\frac{(x-\\mu)^2}{2\\sigma^2} \\right),$$\n其中平均位置为 $\\mu$（单位：玻尔），标准差为 $\\sigma$（单位：玻尔）。对于单次激发，设置 $\\rho_i(x) = \\rho(x; \\mu_i, \\sigma_i)$ 和 $\\rho_a(x) = \\rho(x; \\mu_a, \\sigma_a)$。\n\n数值计算说明：\n\n- 在 $x \\in [x_{\\min}, x_{\\max}]$ 上使用间距为 $\\Delta x$ 的均匀网格，并通过黎曼和近似积分，\n$$\\int g(x)\\, dx \\approx \\sum_k g(x_k) \\, \\Delta x.$$\n- 使用给体区域 $D = \\{ x < 0 \\}$ 和受体区域 $A = \\{ x > 0 \\}$，以及一个渐近截断值 $R_c$（所有距离单位为玻尔，记作 $a_0$）。\n- 所有输出均为无量纲，且必须报告为四舍五入到六位小数的十进制数。\n\n测试套件：\n\n对于所有测试用例，使用 $x_{\\min} = -50\\, a_0$，$x_{\\max} = +50\\, a_0$，$\\Delta x = 0.01\\, a_0$ 和 $R_c = 4.0\\, a_0$。每个测试用例指定 $(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a)$，单位为玻尔：\n\n- 案例1（给体上的局域激发）：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-3.0, 0.5, -2.5, 0.6)$。\n- 案例2（长程电荷转移）：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-3.0, 0.5, +3.0, 0.5)$。\n- 案例3（给体上的类里德堡激发）：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-2.0, 0.6, -2.0, 3.0)$。\n- 案例4（电荷转移与里德堡混合）：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-2.5, 0.7, +2.0, 2.5)$。\n\n任务：\n\n- 编写一个完整的程序，为每个测试用例在指定的网格上构建 $\\rho_i(x)$ 和 $\\rho_a(x)$，形成 $\\Delta \\rho(x)$，并计算如上定义的 $f_{\\mathrm{CT}}$ 和 $f_{\\mathrm{Ry}}$。\n- 如果 $f_{\\mathrm{Ry}}$ 中的分母在数值上为零（低于 $10^{-12}$），则设置 $f_{\\mathrm{Ry}} = 0$。\n- 将每个度量四舍五入到六位小数。\n\n最终输出格式：\n\n您的程序应生成单行输出，其中包含一个用逗号分隔、方括号括起来的结果列表，顺序如下\n$$[f_{\\mathrm{CT}}^{(1)}, f_{\\mathrm{Ry}}^{(1)}, f_{\\mathrm{CT}}^{(2)}, f_{\\mathrm{Ry}}^{(2)}, f_{\\mathrm{CT}}^{(3)}, f_{\\mathrm{Ry}}^{(3)}, f_{\\mathrm{CT}}^{(4)}, f_{\\mathrm{Ry}}^{(4)}],$$\n其中上标表示测试用例索引。例如，输出必须如下所示\n$$[0.123456,0.654321,0.111111,0.222222,0.333333,0.444444,0.555555,0.666666],$$\n包含八个精确到小数点后六位的十进制数。", "solution": "该问题要求在一个一维模型系统中，为单电子激发计算两个度量：电荷转移度量 $f_{\\mathrm{CT}}$ 和里德堡性度量 $f_{\\mathrm{Ry}}$。该问题在科学上是有效的、适定的，并为获得唯一的数值解提供了所有必要信息。该模型虽然经过简化，但正确地捕捉了电荷转移和里德堡激发的本质特征，这些是含时密度泛函理论中标准近似的已知问题案例。我们将基于所提供的定义，进行直接的数值实现。\n\n这个问题的基础是单电子密度 $\\rho(x)$ 的概念，它是一个归一化为1个电子的非负函数：\n$$\n\\int_{-\\infty}^{+\\infty} \\rho(x)\\, dx = 1.\n$$\n激发被建模为从一个密度为 $\\rho_i(x)$ 的初（占据）态到一个密度为 $\\rho_a(x)$ 的末（虚拟）态的跃迁。电子密度的变化由差分密度 $\\Delta \\rho(x)$ 描述：\n$$\n\\Delta \\rho(x) = \\rho_a(x) - \\rho_i(x).\n$$\n由于 $\\rho_i(x)$ 和 $\\rho_a(x)$ 的归一化，$\\Delta \\rho(x)$ 在全空间上的积分为零，这表示总电子数守恒。\n\n对激发特性的分析是通过对系统进行划分并对 $\\Delta \\rho(x)$ 的部分进行积分来执行的。实数轴被划分为一个给体片段 $D = \\{ x \\in \\mathbb{R} \\, | \\, x < 0 \\}$ 和一个受体片段 $A = \\{ x \\in \\mathbb{R} \\, | \\, x > 0 \\}$。\n\n占据态和虚拟态的密度由归一化高斯函数建模：\n$$\n\\rho(x; \\mu, \\sigma) = \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp\\!\\left( -\\frac{(x-\\mu)^2}{2\\sigma^2} \\right),\n$$\n其中 $\\mu$ 是平均位置，$\\sigma$ 是标准差。因此，$\\rho_i(x) = \\rho(x; \\mu_i, \\sigma_i)$ 和 $\\rho_a(x) = \\rho(x; \\mu_a, \\sigma_a)$。\n\n数值解将在一个离散的空间网格上构建。定义域指定为 $x \\in [-50, 50]\\,a_0$，网格间距为 $\\Delta x = 0.01\\,a_0$。这定义了一组离散点 $x_k = x_{\\min} + k \\Delta x$。积分通过黎曼和来近似，例如，$\\int g(x) dx \\approx \\sum_k g(x_k) \\Delta x$。\n\n首先，我们计算电荷转移度量 $f_{\\mathrm{CT}}$。该度量量化了在给体和受体片段之间移动的电荷量。我们将实数 $y$ 的正部定义为 $[y]_+ = \\max(y, 0)$。受体获得的电荷量是 $\\Delta \\rho(x)$ 的正部在受体区域 $A$ 上的积分：\n$$\nQ_A^+ = \\int_A [\\Delta \\rho(x)]_+ \\, dx \\approx \\sum_{x_k > 0} [\\Delta \\rho(x_k)]_+ \\Delta x.\n$$\n类似地，给体失去的电荷量是 $-\\Delta \\rho(x)$ 的正部在给体区域 $D$ 上的积分：\n$$\nQ_D^- = \\int_D [-\\Delta \\rho(x)]_+ \\, dx \\approx \\sum_{x_k < 0} [-\\Delta \\rho(x_k)]_+ \\Delta x.\n$$\n电荷转移度量则定义为这两个量中的较小者：\n$$\nf_{\\mathrm{CT}} = \\min(Q_A^+, Q_D^-).\n$$\n对于一个从完全包含在 $D$ 中的给体到完全处于 $A$ 中的受体的纯电荷转移激发，$Q_A^+$ 和 $Q_D^-$ 都将接近 $1$，因此 $f_{\\mathrm{CT}}$ 将接近 $1$。对于单个片段内的局域激发，这些量中的一个将接近于零，使得 $f_{\\mathrm{CT}}$ 接近 $0$。\n\n其次，我们计算里德堡性度量 $f_{\\mathrm{Ry}}$。该度量通过量化位于渐近区域 $R = \\{ x \\in \\mathbb{R} \\, | \\, |x| \\ge R_c \\}$ 中的附加电子密度 $[\\Delta \\rho(x)]_+$ 的分数来衡量激发的弥散性。截断值给定为 $R_c = 4.0\\,a_0$。该度量定义为比率：\n$$\nf_{\\mathrm{Ry}} = \\frac{\\int_R [\\Delta \\rho(x)]_+ \\, dx}{\\int_{-\\infty}^{+\\infty} [\\Delta \\rho(x)]_+ \\, dx}.\n$$\n对于单电子激发，总附加电荷（即分母）必须等于1。在数值上，这计算为：\n$$\n\\text{分子} = \\sum_{|x_k| \\ge R_c} [\\Delta \\rho(x_k)]_+ \\Delta x.\n$$\n$$\n\\text{分母} = \\sum_{\\text{所有 } k} [\\Delta \\rho(x_k)]_+ \\Delta x.\n$$\n如果分母小于数值阈值 $10^{-12}$，则将 $f_{\\mathrm{Ry}}$ 设置为 $0$。一个大的 $f_{\\mathrm{Ry}}$ 值表明虚拟轨道是弥散的，是里德堡态的特征。\n\n该算法通过遍历所提供的四个测试用例来进行：\n1.  案例1：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-3.0, 0.5, -2.5, 0.6)$\n2.  案例2：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-3.0, 0.5, +3.0, 0.5)$\n3.  案例3：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-2.0, 0.6, -2.0, 3.0)$\n4.  案例4：$(\\mu_i, \\sigma_i, \\mu_a, \\sigma_a) = (-2.5, 0.7, +2.0, 2.5)$\n\n对于每个案例，我们在网格上构建密度 $\\rho_i(x)$ 和 $\\rho_a(x)$，计算 $\\Delta \\rho(x)$，然后应用求和公式来计算 $f_{\\mathrm{CT}}$ 和 $f_{\\mathrm{Ry}}$。最终结果按要求四舍五入到六位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes charge-transfer (f_CT) and Rydbergness (f_Ry) metrics\n    for four test cases of a 1D single-electron excitation model.\n    \"\"\"\n    # Define the global numerical parameters.\n    # All units are in bohr (a_0) or are dimensionless.\n    x_min = -50.0\n    x_max = 50.0\n    dx = 0.01\n    R_c = 4.0\n    \n    # Generate the uniform spatial grid.\n    num_points = int((x_max - x_min) / dx) + 1\n    x = np.linspace(x_min, x_max, num_points)\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (mu_i, sigma_i, mu_a, sigma_a)\n    test_cases = [\n        (-3.0, 0.5, -2.5, 0.6),  # Case 1: local excitation on donor\n        (-3.0, 0.5, 3.0, 0.5),   # Case 2: long-range charge transfer\n        (-2.0, 0.6, -2.0, 3.0),  # Case 3: Rydberg-like on donor\n        (-2.5, 0.7, 2.0, 2.5),   # Case 4: mixed charge transfer and Rydberg\n    ]\n\n    results = []\n\n    def gaussian_density(x, mu, sigma):\n        \"\"\"\n        Calculates the normalized Gaussian density rho(x; mu, sigma).\n        \"\"\"\n        return (1.0 / (sigma * np.sqrt(2.0 * np.pi))) * \\\n               np.exp(-((x - mu)**2) / (2.0 * sigma**2))\n\n    for case in test_cases:\n        mu_i, sigma_i, mu_a, sigma_a = case\n\n        # 1. Construct densities and difference density\n        rho_i = gaussian_density(x, mu_i, sigma_i)\n        rho_a = gaussian_density(x, mu_a, sigma_a)\n        delta_rho = rho_a - rho_i\n\n        # 2. Calculate the charge-transfer metric f_CT\n        \n        # Positive part of delta_rho for acceptor region gain\n        pos_delta_rho = np.maximum(0, delta_rho)\n        # Positive part of -delta_rho for donor region loss\n        neg_delta_rho = np.maximum(0, -delta_rho)\n\n        # Create masks for donor (x < 0) and acceptor (x > 0) regions\n        donor_mask = x < 0\n        acceptor_mask = x > 0\n\n        # Integrate over the respective regions using Riemann sum\n        Q_A_plus = np.sum(pos_delta_rho[acceptor_mask]) * dx\n        Q_D_minus = np.sum(neg_delta_rho[donor_mask]) * dx\n        \n        f_ct = min(Q_A_plus, Q_D_minus)\n\n        # 3. Calculate the Rydbergness metric f_Ry\n        \n        # Create mask for the asymptotic region R = {x | |x| >= R_c}\n        asymptotic_mask = np.abs(x) >= R_c\n        \n        # Numerator: integral of added density in the asymptotic region\n        numerator = np.sum(pos_delta_rho[asymptotic_mask]) * dx\n        \n        # Denominator: integral of total added density over all space\n        denominator = np.sum(pos_delta_rho) * dx\n        \n        # Calculate f_Ry with the zero-denominator check\n        if denominator < 1e-12:\n            f_ry = 0.0\n        else:\n            f_ry = numerator / denominator\n\n        # Append results for the current case, formatting to 6 decimal places\n        results.append(f\"{f_ct:.6f}\")\n        results.append(f\"{f_ry:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2878978"}, {"introduction": "这项最终实践在一个综合性的建模挑战中合成了本章所学的概念。你将探索半局域泛函的失败之处，以及范围分离杂化泛函（range-separated hybrids）提供的修正，如何影响激发态电离势（$I^{\\ast}$）和电子亲和能（$A^{\\ast}$）等物理性质。通过比较局域激发、电荷转移激发和里德堡激发的计算结果，你将更深刻地体会到泛函选择的实际后果，以及为这些挑战性体系选择合适方法的重要性 [@problem_id:2878999]。", "problem": "考虑在含时密度泛函理论 (TD-DFT) 的线性响应框架下，垂直激发态电离势和电子亲和能，以及其对于电荷转移和里德堡激发的已知局限性。设一个 $N$ 电子系统的基态能量为 $E_{0}(N)$，其第一激发态能量为 $E_{1}(N) = E_{0}(N) + \\Omega$， $N-1$ 电子系统的基态能量为 $E_{0}(N-1)$，以及 $N+1$ 电子系统的基态能量为 $E_{0}(N+1)$。定义基态电离势 $I_{g}$ 和电子亲和能 $A_{g}$ 为\n$$\nI_{g} = E_{0}(N-1) - E_{0}(N), \\quad A_{g} = E_{0}(N) - E_{0}(N+1).\n$$\n对于能量为 $\\Omega$ 的垂直激发，精确的激发态电离势 $I^{\\ast}$ 和激发态电子亲和能 $A^{\\ast}$ 由以下恒等式给出\n$$\nI^{\\ast} = E_{0}(N-1) - E_{1}(N) = I_{g} - \\Omega, \\quad A^{\\ast} = E_{1}(N) - E_{0}(N+1) = A_{g} + \\Omega.\n$$\n为模拟绝热半局域 TD-DFT 在处理电荷转移和里德堡态时的已知失效情况，考虑以下激发能模型。所有能量必须以电子伏特 (eV) 表示，所有距离必须以埃 (Å) 表示。使用库仑转换因子 $C = e^{2}/(4\\pi\\varepsilon_{0}) = 14.3996\\,\\text{eV}\\cdot\\text{\\AA}$。\n\n定义两个近似模型族 $f \\in \\{\\text{S}, \\text{R}\\}$，分别代表典型的半局域泛函 (S) 和调谐的范围分离杂化泛函 (R)，通过以下四个参数\n$$\n\\delta I_{f} \\ge 0, \\quad \\delta A_{f} \\ge 0, \\quad \\Delta_{\\text{gap},f} \\ge 0, \\quad \\lambda_{f} \\in [0,1],\n$$\n这些参数分别模拟了对基态电离势和电子亲和能的系统性低估、基本带隙中缺失的导数不连续性校正，以及在激发核中对长程 $-1/r$ 电子-空穴相互作用的恢复。近似的基态性质建模为\n$$\nI_{g}^{(f)} = I_{g} - \\delta I_{f}, \\quad A_{g}^{(f)} = A_{g} - \\delta A_{f}.\n$$\n对于给定的具有所需输入的激发类别，精确激发能 $\\Omega_{\\text{true}}$ 和近似激发能 $\\Omega_{f}$ 定义如下。\n\n- 局域价层激发 (LE)，轨道重叠因子为 $S \\in [0,1]$，重叠标度的结合参数为 $\\beta > 0$：\n$$\n\\Omega_{\\text{true}}^{\\text{LE}} = (I_{g} - A_{g}) - \\beta S, \\quad \\Omega_{f}^{\\text{LE}} = \\Omega_{\\text{true}}^{\\text{LE}}.\n$$\n\n- 施主（电离势为 $I_{D}$）和受主（电子亲和能为 $A_{A}$）之间的长程电荷转移激发 (CT)，两者相距为 $R$：\n$$\n\\Omega_{\\text{true}}^{\\text{CT}} = (I_{D} - A_{A}) - \\frac{C}{R}, \\quad \\Omega_{f}^{\\text{CT}} = (I_{D} - A_{A}) - \\Delta_{\\text{gap},f} - \\lambda_{f}\\frac{C}{R}.\n$$\n\n- 里德堡激发 (RY)，主量子数为 $n \\in \\mathbb{N}$，类氢结合参数为 $\\chi > 0$：\n$\n\\Omega_{\\text{true}}^{\\text{RY}} = I_{g} - \\chi/n^{2}, \\quad \\Omega_{f}^{\\text{RY}} = (I_{g} - \\delta I_{f}) - \\lambda_{f}^{2}\\chi/n^{2}.\n$\n\n对于每种情况，通过以下公式定义模型 $f$ 的激发态电离势和电子亲和能\n$$\nI_{f}^{\\ast} = I_{g}^{(f)} - \\Omega_{f}, \\quad A_{f}^{\\ast} = A_{g}^{(f)} + \\Omega_{f}.\n$$\n当将 $f$ 取为精确模型，即 $\\delta I_{f} = 0$，$\\delta A_{f} = 0$，$\\Delta_{\\text{gap},f} = 0$ 且 $\\lambda_{f} = 1$ 时，可恢复精确值。\n\n对这两个近似族使用以下固定模型参数：\n- 半局域 (S): $\\delta I_{\\text{S}} = 1.50\\,\\text{eV}$, $\\delta A_{\\text{S}} = 1.00\\,\\text{eV}$, $\\Delta_{\\text{gap},\\text{S}} = 2.20\\,\\text{eV}$, $\\lambda_{\\text{S}} = 0$。\n- 范围分离 (R): $\\delta I_{\\text{R}} = 0.10\\,\\text{eV}$, $\\delta A_{\\text{R}} = 0.05\\,\\text{eV}$, $\\Delta_{\\text{gap},\\text{R}} = 0.10\\,\\text{eV}$, $\\lambda_{\\text{R}} = 1$。\n\n测试套件。为以下三个测试案例计算各物理量：\n\n案例 LE:\n- $I_{g} = 9.50\\,\\text{eV}$, $A_{g} = 1.20\\,\\text{eV}$, $S = 0.85$, $\\beta = 1.50\\,\\text{eV}$。\n\n案例 CT:\n- $I_{D} = 7.80\\,\\text{eV}$, $A_{A} = 1.10\\,\\text{eV}$, $R = 12.00\\,\\text{\\AA}$；对于超分子极限，认定 $I_{g} = I_{D}$ 和 $A_{g} = A_{A}$。\n\n案例 RY:\n- $I_{g} = 13.60\\,\\text{eV}$, $A_{g} = 0.00\\,\\text{eV}$, $\\chi = 13.60\\,\\text{eV}$, $n = 4$。\n\n对于每个案例，你必须计算六个数值：\n$\n\\big(I_{\\text{exact}}^{\\ast},\\, A_{\\text{exact}}^{\\ast},\\, I_{\\text{S}}^{\\ast},\\, A_{\\text{S}}^{\\ast},\\, I_{\\text{R}}^{\\ast},\\, A_{\\text{R}}^{\\ast}\\big).\n$\n所有能量以 $\\text{eV}$ 为单位报告，每个数值四舍五入到三位小数。\n\n最终输出格式。你的程序应该生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，该列表按 LE、CT、RY 的顺序串联了三个案例的六个数值输出。例如，该行应如下所示\n\"[x1,x2,x3,x4,x5,x6,y1,y2,y3,y4,y5,y6,z1,z2,z3,z4,z5,z6]\"\n其中每个条目都是一个以 $\\text{eV}$ 为单位、四舍五入到三位小数的十进制数。", "solution": "该问题陈述已经过验证，被认为是科学上合理、提法明确且自洽的。它提出了一个简化但概念正确的模型，用于描述含时密度泛函理论 (TD-DFT) 的已知失效情况，并要求基于此模型进行具体计算。我们将着手进行求解。\n\n核心任务是计算在三种不同理论模型下——精确参考模型、半局域泛函模型 (S) 和范围分离杂化模型 (R)——不同类型电子激发的激发态电离势 ($I^{\\ast}$) 和电子亲和能 ($A^{\\ast}$)。\n\n给出的基本关系式为：\n对于精确情况：\n$$ I_{\\text{exact}}^{\\ast} = I_{g} - \\Omega_{\\text{true}} $$\n$$ A_{\\text{exact}}^{\\ast} = A_{g} + \\Omega_{\\text{true}} $$\n对于近似泛函模型 $f \\in \\{\\text{S}, \\text{R}\\}$:\n$$ I_{f}^{\\ast} = I_{g}^{(f)} - \\Omega_{f} $$\n$$ A_{f}^{\\ast} = A_{g}^{(f)} + \\Omega_{f} $$\n其中，近似的基态性质定义为 $I_{g}^{(f)} = I_{g} - \\delta I_{f}$ 和 $A_{g}^{(f)} = A_{g} - \\delta A_{f}$。真实激发能 ($\\Omega_{\\text{true}}$) 和近似激发能 ($\\Omega_{f}$) 取决于激发的类型。\n\n模型和常数的固定参数如下：\n- 库仑常数: $C = 14.3996\\,\\text{eV}\\cdot\\text{\\AA}$\n- 半局域模型 (S): $\\delta I_{\\text{S}} = 1.50\\,\\text{eV}$, $\\delta A_{\\text{S}} = 1.00\\,\\text{eV}$, $\\Delta_{\\text{gap},\\text{S}} = 2.20\\,\\text{eV}$, $\\lambda_{\\text{S}} = 0$\n- 范围分离模型 (R): $\\delta I_{\\text{R}} = 0.10\\,\\text{eV}$, $\\delta A_{\\text{R}} = 0.05\\,\\text{eV}$, $\\Delta_{\\text{gap},\\text{R}} = 0.10\\,\\text{eV}$, $\\lambda_{\\text{R}} = 1$\n\n我们将系统地分析每个测试案例。\n\n**案例 1：局域激发 (LE)**\n输入参数为 $I_{g} = 9.50\\,\\text{eV}$，$A_{g} = 1.20\\,\\text{eV}$，$S = 0.85$ 和 $\\beta = 1.50\\,\\text{eV}$。\n\n1.  **激发能**：对于 LE 态，模型激发能与真实激发能相同，$\\Omega_{f}^{\\text{LE}} = \\Omega_{\\text{true}}^{\\text{LE}}$。\n    $$ \\Omega_{\\text{true}}^{\\text{LE}} = (I_{g} - A_{g}) - \\beta S = (9.50 - 1.20)\\,\\text{eV} - (1.50\\,\\text{eV} \\cdot 0.85) = 8.30\\,\\text{eV} - 1.275\\,\\text{eV} = 7.025\\,\\text{eV} $$\n2.  **精确性质**：\n    $$ I_{\\text{exact}}^{\\ast} = I_{g} - \\Omega_{\\text{true}}^{\\text{LE}} = 9.50\\,\\text{eV} - 7.025\\,\\text{eV} = 2.475\\,\\text{eV} $$\n    $$ A_{\\text{exact}}^{\\ast} = A_{g} + \\Omega_{\\text{true}}^{\\text{LE}} = 1.20\\,\\text{eV} + 7.025\\,\\text{eV} = 8.225\\,\\text{eV} $$\n3.  **模型 S 的性质**：当 $\\Omega_{\\text{S}}^{\\text{LE}} = 7.025\\,\\text{eV}$ 时：\n    $$ I_{g}^{(\\text{S})} = 9.50 - 1.50 = 8.00\\,\\text{eV}; \\quad A_{g}^{(\\text{S})} = 1.20 - 1.00 = 0.20\\,\\text{eV} $$\n    $$ I_{\\text{S}}^{\\ast} = 8.00\\,\\text{eV} - 7.025\\,\\text{eV} = 0.975\\,\\text{eV} $$\n    $$ A_{\\text{S}}^{\\ast} = 0.20\\,\\text{eV} + 7.025\\,\\text{eV} = 7.225\\,\\text{eV} $$\n4.  **模型 R 的性质**：当 $\\Omega_{\\text{R}}^{\\text{LE}} = 7.025\\,\\text{eV}$ 时：\n    $$ I_{g}^{(\\text{R})} = 9.50 - 0.10 = 9.40\\,\\text{eV}; \\quad A_{g}^{(\\text{R})} = 1.20 - 0.05 = 1.15\\,\\text{eV} $$\n    $$ I_{\\text{R}}^{\\ast} = 9.40\\,\\text{eV} - 7.025\\,\\text{eV} = 2.375\\,\\text{eV} $$\n    $$ A_{\\text{R}}^{\\ast} = 1.15\\,\\text{eV} + 7.025\\,\\text{eV} = 8.175\\,\\text{eV} $$\n\n**案例 2：电荷转移激发 (CT)**\n参数：$I_{D} = 7.80\\,\\text{eV}$，$A_{A} = 1.10\\,\\text{eV}$，$R = 12.00\\,\\text{\\AA}$。我们使用 $I_{g} = I_{D}$ 和 $A_{g} = A_{A}$。\n\n1.  **激发能**：\n    $$ \\Omega_{\\text{true}}^{\\text{CT}} = (I_{D} - A_{A}) - \\frac{C}{R} = (7.80 - 1.10)\\,\\text{eV} - \\frac{14.3996}{12.00}\\,\\text{eV} = 6.70\\,\\text{eV} - 1.199966... \\,\\text{eV} \\approx 5.500033\\,\\text{eV} $$\n    $$ \\Omega_{\\text{S}}^{\\text{CT}} = (I_{D} - A_{A}) - \\Delta_{\\text{gap},\\text{S}} - \\lambda_{\\text{S}}\\frac{C}{R} = (6.70 - 2.20 - 0)\\,\\text{eV} = 4.50\\,\\text{eV} $$\n    $$ \\Omega_{\\text{R}}^{\\text{CT}} = (I_{D} - A_{A}) - \\Delta_{\\text{gap},\\text{R}} - \\lambda_{\\text{R}}\\frac{C}{R} = (6.70 - 0.10 - 1.199966...)\\,\\text{eV} \\approx 5.400033\\,\\text{eV} $$\n2.  **精确性质**：\n    $$ I_{\\text{exact}}^{\\ast} = 7.80\\,\\text{eV} - 5.500033...\\,\\text{eV} = 2.299966...\\,\\text{eV} $$\n    $$ A_{\\text{exact}}^{\\ast} = 1.10\\,\\text{eV} + 5.500033...\\,\\text{eV} = 6.600033...\\,\\text{eV} $$\n3.  **模型 S 的性质**：\n    $$ I_{g}^{(\\text{S})} = 7.80 - 1.50 = 6.30\\,\\text{eV}; \\quad A_{g}^{(\\text{S})} = 1.10 - 1.00 = 0.10\\,\\text{eV} $$\n    $$ I_{\\text{S}}^{\\ast} = 6.30\\,\\text{eV} - 4.50\\,\\text{eV} = 1.800\\,\\text{eV} $$\n    $$ A_{\\text{S}}^{\\ast} = 0.10\\,\\text{eV} + 4.50\\,\\text{eV} = 4.600\\,\\text{eV} $$\n4.  **模型 R 的性质**：\n    $$ I_{g}^{(\\text{R})} = 7.80 - 0.10 = 7.70\\,\\text{eV}; \\quad A_{g}^{(\\text{R})} = 1.10 - 0.05 = 1.05\\,\\text{eV} $$\n    $$ I_{\\text{R}}^{\\ast} = 7.70\\,\\text{eV} - 5.400033...\\,\\text{eV} = 2.299966...\\,\\text{eV} $$\n    $$ A_{\\text{R}}^{\\ast} = 1.05\\,\\text{eV} + 5.400033...\\,\\text{eV} = 6.450033...\\,\\text{eV} $$\n\n**案例 3：里德堡激发 (RY)**\n参数：$I_{g} = 13.60\\,\\text{eV}$，$A_{g} = 0.00\\,\\text{eV}$，$\\chi = 13.60\\,\\text{eV}$，$n = 4$。\n\n1.  **激发能**：\n    $$ \\Omega_{\\text{true}}^{\\text{RY}} = I_{g} - \\frac{\\chi}{n^{2}} = 13.60\\,\\text{eV} - \\frac{13.60}{4^2}\\,\\text{eV} = 13.60\\,\\text{eV} - 0.85\\,\\text{eV} = 12.75\\,\\text{eV} $$\n    $$ \\Omega_{\\text{S}}^{\\text{RY}} = (I_{g} - \\delta I_{\\text{S}}) - \\lambda_{\\text{S}}^{2}\\frac{\\chi}{n^{2}} = (13.60 - 1.50)\\,\\text{eV} - 0 = 12.10\\,\\text{eV} $$\n    $$ \\Omega_{\\text{R}}^{\\text{RY}} = (I_{g} - \\delta I_{\\text{R}}) - \\lambda_{\\text{R}}^{2}\\frac{\\chi}{n^{2}} = (13.60 - 0.10)\\,\\text{eV} - 1^2\\frac{13.60}{16}\\,\\text{eV} = 13.50\\,\\text{eV} - 0.85\\,\\text{eV} = 12.65\\,\\text{eV} $$\n2.  **精确性质**：\n    $$ I_{\\text{exact}}^{\\ast} = 13.60\\,\\text{eV} - 12.75\\,\\text{eV} = 0.850\\,\\text{eV} $$\n    $$ A_{\\text{exact}}^{\\ast} = 0.00\\,\\text{eV} + 12.75\\,\\text{eV} = 12.750\\,\\text{eV} $$\n3.  **模型 S 的性质**：\n    $$ I_{g}^{(\\text{S})} = 12.10\\,\\text{eV}; \\quad A_{g}^{(\\text{S})} = 0.00 - 1.00 = -1.00\\,\\text{eV} $$\n    $$ I_{\\text{S}}^{\\ast} = 12.10\\,\\text{eV} - 12.10\\,\\text{eV} = 0.000\\,\\text{eV} $$\n    $$ A_{\\text{S}}^{\\ast} = -1.00\\,\\text{eV} + 12.10\\,\\text{eV} = 11.100\\,\\text{eV} $$\n4.  **模型 R 的性质**：\n    $$ I_{g}^{(\\text{R})} = 13.50\\,\\text{eV}; \\quad A_{g}^{(\\text{R})} = 0.00 - 0.05 = -0.05\\,\\text{eV} $$\n    $$ I_{\\text{R}}^{\\ast} = 13.50\\,\\text{eV} - 12.65\\,\\text{eV} = 0.850\\,\\text{eV} $$\n    $$ A_{\\text{R}}^{\\ast} = -0.05\\,\\text{eV} + 12.65\\,\\text{eV} = 12.600\\,\\text{eV} $$\n\n结果将被收集并格式化为三位小数以供最终输出。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n# No other libraries are needed for this problem.\n\ndef solve():\n    \"\"\"\n    Computes excited-state ionization potentials and electron affinities for three\n    test cases based on a model of TD-DFT failures.\n    \"\"\"\n    \n    # Global constant\n    C = 14.3996  # eV * Angstrom\n\n    # Model parameters\n    params = {\n        'S': { # Semi-local\n            'delta_I': 1.50, \n            'delta_A': 1.00, \n            'delta_gap': 2.20, \n            'lambda': 0.0\n        },\n        'R': { # Range-separated\n            'delta_I': 0.10, \n            'delta_A': 0.05, \n            'delta_gap': 0.10, \n            'lambda': 1.0\n        }\n    }\n\n    def calculate_case_le(case_params, model_params):\n        \"\"\"Calculates results for the Local Excitation (LE) case.\"\"\"\n        I_g, A_g, S, beta = case_params\n        \n        # Calculate true excitation energy\n        omega_true = (I_g - A_g) - beta * S\n        \n        # Exact properties\n        I_exact_star = I_g - omega_true\n        A_exact_star = A_g + omega_true\n\n        # Model S properties\n        p_s = model_params['S']\n        omega_s = omega_true # For LE, omega_f = omega_true\n        I_g_s = I_g - p_s['delta_I']\n        A_g_s = A_g - p_s['delta_A']\n        I_s_star = I_g_s - omega_s\n        A_s_star = A_g_s + omega_s\n\n        # Model R properties\n        p_r = model_params['R']\n        omega_r = omega_true # For LE, omega_f = omega_true\n        I_g_r = I_g - p_r['delta_I']\n        A_g_r = A_g - p_r['delta_A']\n        I_r_star = I_g_r - omega_r\n        A_r_star = A_g_r + omega_r\n        \n        return (I_exact_star, A_exact_star, I_s_star, A_s_star, I_r_star, A_r_star)\n\n    def calculate_case_ct(case_params, model_params, C_const):\n        \"\"\"Calculates results for the Charge-Transfer (CT) case.\"\"\"\n        I_d, A_a, R = case_params\n        I_g, A_g = I_d, A_a # Supermolecular limit\n        \n        coulomb_term = C_const / R\n        \n        # True excitation energy\n        omega_true = (I_g - A_g) - coulomb_term\n        \n        # Exact properties\n        I_exact_star = I_g - omega_true\n        A_exact_star = A_g + omega_true\n\n        # Model S properties\n        p_s = model_params['S']\n        omega_s = (I_g - A_g) - p_s['delta_gap'] - p_s['lambda'] * coulomb_term\n        I_g_s = I_g - p_s['delta_I']\n        A_g_s = A_g - p_s['delta_A']\n        I_s_star = I_g_s - omega_s\n        A_s_star = A_g_s + omega_s\n\n        # Model R properties\n        p_r = model_params['R']\n        omega_r = (I_g - A_g) - p_r['delta_gap'] - p_r['lambda'] * coulomb_term\n        I_g_r = I_g - p_r['delta_I']\n        A_g_r = A_g - p_r['delta_A']\n        I_r_star = I_g_r - omega_r\n        A_r_star = A_g_r + omega_r\n\n        return (I_exact_star, A_exact_star, I_s_star, A_s_star, I_r_star, A_r_star)\n\n    def calculate_case_ry(case_params, model_params):\n        \"\"\"Calculates results for the Rydberg (RY) case.\"\"\"\n        I_g, A_g, chi, n = case_params\n        \n        binding_term = chi / (n**2)\n        \n        # True excitation energy\n        omega_true = I_g - binding_term\n        \n        # Exact properties\n        I_exact_star = I_g - omega_true\n        A_exact_star = A_g + omega_true\n\n        # Model S properties\n        p_s = model_params['S']\n        omega_s = (I_g - p_s['delta_I']) - (p_s['lambda']**2) * binding_term\n        I_g_s = I_g - p_s['delta_I']\n        A_g_s = A_g - p_s['delta_A']\n        I_s_star = I_g_s - omega_s\n        A_s_star = A_g_s + omega_s\n\n        # Model R properties\n        p_r = model_params['R']\n        omega_r = (I_g - p_r['delta_I']) - (p_r['lambda']**2) * binding_term\n        I_g_r = I_g - p_r['delta_I']\n        A_g_r = A_g - p_r['delta_A']\n        I_r_star = I_g_r - omega_r\n        A_r_star = A_g_r + omega_r\n\n        return (I_exact_star, A_exact_star, I_s_star, A_s_star, I_r_star, A_r_star)\n\n    # Define the test cases from the problem statement.\n    case_le_params = (9.50, 1.20, 0.85, 1.50)\n    case_ct_params = (7.80, 1.10, 12.00)\n    case_ry_params = (13.60, 0.00, 13.60, 4)\n\n    # Calculate results for all cases\n    results_le = calculate_case_le(case_le_params, params)\n    results_ct = calculate_case_ct(case_ct_params, params, C)\n    results_ry = calculate_case_ry(case_ry_params, params)\n    \n    # Concatenate all results\n    all_results = results_le + results_ct + results_ry\n    \n    # Format results to three decimal places\n    formatted_results = [f\"{x:.3f}\" for x in all_results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2878999"}]}