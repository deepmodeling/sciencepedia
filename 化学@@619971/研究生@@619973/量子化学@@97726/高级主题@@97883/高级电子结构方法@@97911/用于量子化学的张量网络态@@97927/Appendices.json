{"hands_on_practices": [{"introduction": "要评估一种算法对特定问题的可行性，理解其计算标度行为至关重要。本练习将剖析密度矩阵重整化群（DMRG）方法的核心步骤，即“哈密顿量-向量乘积”，以揭示其计算成本如何依赖于关键参数，如矩阵积态（MPS）的键维数 $M$ 和矩阵积算符（MPO）的键维数 $w$。掌握此分析方法，对于在使用和开发 DMRG 时就计算资源做出明智决策而言至关重要 [@problem_id:2929047]。", "problem": "在量子化学中，密度矩阵重整化群 (DMRG) 算法将费米子波函数表示为矩阵乘积态 (MPS) 形式，并将电子哈密顿量表示为矩阵乘积算符 (MPO) 形式。考虑一个在由 $L$ 个空间轨道组成的链上的二次量子化形式的量子化学哈密顿量，它被映射到一个具有均匀键维 $M$ 和局域物理维度 $d=4$ (空轨道、自旋向上、自旋向下、双占据) 的 MPS。假设进行一次双位 DMRG 更新，其中双位波函数张量为 $A_{l s_1 s_2 r}$，$l,r \\in \\{1,\\dots,M\\}$ 且 $s_1,s_2 \\in \\{1,\\dots,d\\}$。哈密顿量 MPO 具有均匀键维 $w$，其对应两个格点的格点张量为 $W^{(1)}_{a a_1 s_1' s_1}$ 和 $W^{(2)}_{a_1 b s_2' s_2}$，其中 $a,a_1,b \\in \\{1,\\dots,w\\}$，物理指标 $s_i,s_i' \\in \\{1,\\dots,d\\}$。设左、右环境张量分别为 $L_{l l' a}$ 和 $R_{b r r'}$。\n\n通过将 $L$、$W^{(1)}$、$W^{(2)}$ 和 $R$ 与 $A$ 进行缩并来定义有效哈密顿量在双位张量上的作用，以获得 $(H \\cdot A)_{l' s_1' s_2' r'}$。采用以下缩并顺序来以标量乘法次数为度量，限定其运算成本：\n- 首先将 $A_{l s_1 s_2 r}$ 与 $R_{b r r'}$ 对指标 $r$ 进行缩并，形成一个具有指标 $(l,s_1,s_2,b,r')$ 的中间量。\n- 接着将该中间量与 $W^{(2)}_{a_1 b s_2' s_2}$ 对指标 $s_2$ 和 $b$ 进行缩并，形成 $(l,s_1,a_1,s_2',r')$。\n- 然后与 $W^{(1)}_{a a_1 s_1' s_1}$ 对指标 $s_1$和 $a_1$ 进行缩并，形成 $(l,a,s_1',s_2',r')$。\n- 最后与 $L_{l l' a}$ 对指标 $l$ 和 $a$ 进行缩并，产生 $(l',s_1',s_2',r')$。\n\n假设在每个双位位置上，局域线性问题通过使用克雷洛夫方法施加 $n_{\\mathrm{K}}$ 次有效哈密顿量来求解，并且一次完整的双位扫描从左到右访问所有相邻对一次，因此每次扫描有 $L-1$ 个双位位置。在计算成本时，只统计标量乘法次数。忽略在主导阶上不与 $M$、$w$、$d$ 或 $L$ 成正比的成本，但保留上述缩并顺序所隐含的精确系数。\n\n任务：\n- 从 MPS、MPO 和张量缩并维度的定义出发，根据指定的缩并顺序，推导在固定位置将有效哈密顿量单次作用于双位张量所需的标量乘法的主导阶精确数量，并将其表示为 $M$、$w$ 和 $d$ 的函数。\n- 利用此结果，推导在每个位置施加 $n_{\\mathrm{K}}$ 次哈密顿量的情况下，完成一次双位扫描所需的总标量乘法次数的封闭形式表达式，然后令 $d=4$。\n- 另外，以 $L$、$M$、$w$ 和 $d$ 为变量，估算同时存储所有格点的 MPS 核心张量、MPO 张量以及左右环境张量集所需的内存（以实标量数量计）。将此估算作为你推导过程的一部分，但不要包含在最终答案中。\n\n给出每次完整双位扫描所需的总标量乘法次数的单一封闭形式解析表达式，以 $L$、$M$、$w$ 和 $n_{\\mathrm{K}}$ 为变量，并令 $d=4$。", "solution": "所述问题具有科学依据、问题明确且客观。它描述了密度矩阵重整化群 (DMRG) 算法中的一个标准计算过程。所有必要的参数和规范均已提供，从而可以得出一个唯一的、可验证的解。因此，我们将着手进行推导。\n\n问题的核心是计算将有效哈密顿量作用于一个双位波函数张量所需的运算成本，特别是标量乘法的次数。这一计算是 DMRG 扫描中的关键步骤，因为在基于克雷洛夫子空间的本征求解器中，该操作会执行多次。我们将严格遵循指定的缩并顺序。各指标的维度给定为 $|l|=|r|=|l'|=|r'|=M$、 $|s_1|=|s_2|=|s_1'|=|s_2'|=d$ 以及 $|a|=|a_1|=|b|=w$。\n\n整个计算被分解为四个张量缩并阶段。我们将分析每个阶段的成本。\n\n阶段 1：双位波函数张量与右环境张量的缩并。\n该操作是形成一个中间张量 $I^{(1)}$：\n$$I^{(1)}_{l s_1 s_2 b r'} = \\sum_{r=1}^{M} A_{l s_1 s_2 r} R_{b r r'}$$\n输入张量 $A$ 的大小为 $M \\times d \\times d \\times M$，$R$ 的大小为 $w \\times M \\times M$。生成的张量 $I^{(1)}$ 具有指标 $(l, s_1, s_2, b, r')$，其大小为 $M \\times d \\times d \\times w \\times M$。为计算 $I^{(1)}$ 的每个元素，需要对指标 $r$ 进行求和，这涉及 $M$ 次乘法。$I^{(1)}$ 中的元素总数为 $M \\cdot d \\cdot d \\cdot w \\cdot M = M^2 d^2 w$。\n因此，该阶段的标量乘法次数为：\n$$C_1 = (M^2 d^2 w) \\times M = M^3 d^2 w$$\n\n阶段 2：第一个中间量与第二个 MPO 张量的缩并。\n下一个中间量 $I^{(2)}$ 是通过将 $I^{(1)}$ 与 MPO 张量 $W^{(2)}$ 缩并形成的：\n$$I^{(2)}_{l s_1 a_1 s_2' r'} = \\sum_{s_2=1}^{d} \\sum_{b=1}^{w} I^{(1)}_{l s_1 s_2 b r'} W^{(2)}_{a_1 b s_2' s_2}$$\n输入张量 $I^{(1)}$ 的大小为 $M \\times d \\times d \\times w \\times M$，$W^{(2)}$ 的大小为 $w \\times w \\times d \\times d$。缩并的指标是 $s_2$ (大小为 $d$) 和 $b$ (大小为 $w$)。生成的张量 $I^{(2)}$ 具有指标 $(l, s_1, a_1, s_2', r')$，其大小为 $M \\times d \\times w \\times d \\times M$。$I^{(2)}$ 中的元素数量为 $M \\cdot d \\cdot w \\cdot d \\cdot M = M^2 d^2 w$。对于每个这样的元素，我们执行一个对 $d \\times w$ 个乘积的求和。\n该阶段的成本是：\n$$C_2 = (M^2 d^2 w) \\times (d \\cdot w) = M^2 d^3 w^2$$\n\n阶段 3：与第一个 MPO 张量的缩并。\n第三个中间量 $I^{(3)}$ 是通过将 $I^{(2)}$ 与 MPO 张量 $W^{(1)}$ 缩并形成的：\n$$I^{(3)}_{l a s_1' s_2' r'} = \\sum_{s_1=1}^{d} \\sum_{a_1=1}^{w} I^{(2)}_{l s_1 a_1 s_2' r'} W^{(1)}_{a a_1 s_1' s_1}$$\n输入张量 $I^{(2)}$ 的大小为 $M \\times d \\times w \\times d \\times M$，$W^{(1)}$ 的大小为 $w \\times w \\times d \\times d$。缩并的指标是 $s_1$ (大小为 $d$) 和 $a_1$ (大小为 $w$)。结果 $I^{(3)}$ 具有指标 $(l, a, s_1', s_2', r')$，其大小为 $M \\times w \\times d \\times d \\times M$。元素数量为 $M \\cdot w \\cdot d \\cdot d \\cdot M = M^2 d^2 w$。对于每个元素，计算一个对 $d \\times w$ 个乘积的求和。\n该阶段的成本在形式上与前一阶段相同：\n$$C_3 = (M^2 d^2 w) \\times (d \\cdot w) = M^2 d^3 w^2$$\n\n阶段 4：与左环境张量的最终缩并。\n最终结果，即双位张量 $(H \\cdot A)$，是通过将 $I^{(3)}$ 与左环境张量 $L$ 缩并得到的：\n$$(H \\cdot A)_{l' s_1' s_2' r'} = \\sum_{l=1}^{M} \\sum_{a=1}^{w} I^{(3)}_{l a s_1' s_2' r'} L_{l l' a}$$\n输入张量 $I^{(3)}$ 的大小为 $M \\times w \\times d \\times d \\times M$，$L$ 的大小为 $M \\times M \\times w$。缩并的指标是 $l$ (大小为 $M$) 和 $a$ (大小为 $w$)。生成的张量 $(H \\cdot A)$ 具有指标 $(l', s_1', s_2', r')$，其大小为 $M \\times d \\times d \\times M$。元素数量为 $M \\cdot d \\cdot d \\cdot M = M^2 d^2$。对于每个元素，执行一个对 $M \\times w$ 个乘积的求和。\n这最后阶段的成本是：\n$$C_4 = (M^2 d^2) \\times (M \\cdot w) = M^3 d^2 w$$\n\n单次施加有效哈密顿量所需的总标量乘法次数 $C_{\\text{app}}$ 是这四个阶段成本的总和：\n$$C_{\\text{app}} = C_1 + C_2 + C_3 + C_4 = M^3 d^2 w + M^2 d^3 w^2 + M^2 d^3 w^2 + M^3 d^2 w$$\n$$C_{\\text{app}} = 2 M^3 d^2 w + 2 M^2 d^3 w^2 = 2 M^2 d^2 w (M + dw)$$\n这是一个位置所需的成本。\n\n接下来，我们计算一次完整的双位扫描的总成本。一次扫描包含 $L-1$ 次双位更新。在每个位置，有效哈密顿量在克雷洛夫求解器中被施加 $n_{\\mathrm{K}}$ 次。\n一次扫描的总成本 $C_{\\text{sweep}}$ 是：\n$$C_{\\text{sweep}} = (L-1) \\times n_{\\mathrm{K}} \\times C_{\\text{app}} = (L-1) n_{\\mathrm{K}} (2 M^3 d^2 w + 2 M^2 d^3 w^2)$$\n问题指定了局域物理维度为 $d=4$，对应于费米子系统中的一个空间轨道。将 $d=4$ 代入表达式中：\n$$C_{\\text{sweep}} = (L-1) n_{\\mathrm{K}} (2 M^3 (4^2) w + 2 M^2 (4^3) w^2)$$\n$$C_{\\text{sweep}} = (L-1) n_{\\mathrm{K}} (2 M^3 (16) w + 2 M^2 (64) w^2)$$\n$$C_{\\text{sweep}} = (L-1) n_{\\mathrm{K}} (32 M^3 w + 128 M^2 w^2)$$\n提取公因式得到最终表达式：\n$$C_{\\text{sweep}} = 32 (L-1) n_{\\mathrm{K}} M^2 w (M + 4w)$$\n\n另外，我们被要求估算存储 MPS、MPO 和环境张量所需的内存。假设键维 $M$ 和 $w$ 是均匀的，并且我们同时存储所有 $L$ 个格点的所有张量以避免在扫描期间重新计算：\n1.  **MPS 张量**：有 $L$ 个单位点张量，每个大小为 $M \\times d \\times M$。MPS 的总内存为：$S_{\\text{MPS}} = L d M^2$。\n2.  **MPO 张量**：有 $L$ 个 MPO 张量，每个大小为 $w \\times d \\times d \\times w$。MPO 的总内存为：$S_{\\text{MPO}} = L d^2 w^2$。\n3.  **环境张量**：有 $L-1$ 个非平凡的左环境张量和 $L-1$ 个非平凡的右环境张量。每个左环境张量 $L_i$ 的大小为 $M \\times M \\times w$，每个右环境张量 $R_i$ 的大小为 $w \\times M \\times M$。存储所有这些张量的总内存近似为 $S_{\\text{Env}} \\approx 2 L w M^2$。\n总内存需求 $S_{\\text{total}}$ 是这些贡献的总和：\n$$S_{\\text{total}} = S_{\\text{MPS}} + S_{\\text{MPO}} + S_{\\text{Env}} = L d M^2 + L d^2 w^2 + 2 L w M^2$$\n$$S_{\\text{total}} = L \\left( (d+2w)M^2 + d^2w^2 \\right)$$\n设 $d=4$：\n$$S_{\\text{total}} = L \\left( (4+2w)M^2 + 16w^2 \\right)$$\n此估算为算法的资源需求提供了背景信息，但不是最终答案的一部分。最终答案仅为每次扫描的计算成本。", "answer": "$$\n\\boxed{32(L-1)n_{\\mathrm{K}}M^2w(M+4w)}\n$$", "id": "2929047"}, {"introduction": "除了算法速度，张量网络方法的效率还取决于如何紧凑地表示相关算符。本实践探讨了一种强大的技术——积分分解——来为哈密顿量构建一个最小且精确的矩阵积算符（MPO）[@problem_id:2929033]。通过从第一性原理出发推导MPO的键维数，您将深入理解关于相互作用结构的先验知识如何直接转化为计算成本的节省。", "problem": "考虑一个由 $N$ 个自旋轨道组成的链，其费米子产生和湮灭算符为 $\\{\\hat{a}_{p}^{\\dagger},\\hat{a}_{p}\\}_{p=1}^{N}$，满足正则反对易关系，粒子数算符为 $\\hat{n}_{p}=\\hat{a}_{p}^{\\dagger}\\hat{a}_{p}$。二次量子化的电子哈密顿量被限制为只包含单体项和密度-密度两体项，\n$$\n\\hat{H}=\\sum_{p=1}^{N}\\epsilon_{p}\\,\\hat{n}_{p}+\\frac{1}{2}\\sum_{\\substack{p,q=1\\\\p\\neq q}}^{N}V_{pq}\\,\\hat{n}_{p}\\hat{n}_{q},\n$$\n其中 $V_{pq}=V_{qp}$ 是实数。假设 $V_{pq}$ 通过秩为 $R$ 的精确积分分解（例如，密度拟合或 Cholesky 分解）给出，这意味着存在实向量 $\\{\\boldsymbol{x}^{(L)}\\}_{L=1}^{R}$（其分量为 $x_{p}^{(L)}$），使得\n$$\nV_{pq}=\\sum_{L=1}^{R}x_{p}^{(L)}x_{q}^{(L)}\\quad\\text{对所有 }p\\neq q.\n$$\n你需要将 $\\hat{H}$ 表示为沿着轨道排序 $1,2,\\dots,N$ 的矩阵乘积算符（MPO）。考虑对于某个满足 $1\\leq k\\leq N-1$ 的 $k$，在格点 $k$ 和 $k+1$ 之间的二分（键）。假设 $R\\leq \\min\\{k,N-k\\}$，并且受限族 $\\{(x_{p}^{(L)})_{p=1}^{k}\\}_{L=1}^{R}$ 和 $\\{(x_{q}^{(L)})_{q=k+1}^{N}\\}_{L=1}^{R}$ 分别在 $\\mathbb{R}^{k}$ 和 $\\mathbb{R}^{N-k}$ 中是线性无关的。在费米子数守恒的扇区中进行计算，并注意粒子数算符是对易的，因此密度项不需要宇称串。\n\n仅从哈密顿量、分解、二分的定义，以及“MPO 跨越一个切口的最小内部键维度等于该算符跨越该切口的算符施密特秩”这一概念出发，推导当最优地利用此分解时，跨越格点 $k$ 和 $k+1$ 之间键的可实现的最小 MPO 键维度 $D_{\\min}(k)$。然后，对于 $N=20$、$k=10$ 和 $R=7$ 的中心切口，计算你的表达式的值。你的最终答案必须是一个实数。不要四舍五入。", "solution": "该问题陈述是良定的且科学上合理的，允许进行严格的推导。目标是确定给定哈密顿量 $\\hat{H}$ 在特定二分下的矩阵乘积算符（MPO）表示的最小键维度。这个最小键维度 $D_{\\min}(k)$ 等价于 $\\hat{H}$ 跨越格点 $k$ 和 $k+1$ 之间切口的算符施密特秩。\n\n哈密顿量由下式给出：\n$$ \\hat{H}=\\sum_{p=1}^{N}\\epsilon_{p}\\,\\hat{n}_{p}+\\frac{1}{2}\\sum_{\\substack{p,q=1\\\\p\\neq q}}^{N}V_{pq}\\,\\hat{n}_{p}\\hat{n}_{q} $$\n我们将系统划分为两个子系统：$A = \\{1, 2, \\dots, k\\}$ 和 $B = \\{k+1, \\dots, N\\}$。哈密顿量可以分解为纯粹作用在 $A$ 内部的项、纯粹作用在 $B$ 内部的项，以及耦合 $A$ 和 $B$ 的项：\n$$ \\hat{H} = \\hat{H}_A + \\hat{H}_B + \\hat{H}_{AB} $$\n这里，$\\hat{H}_A$ 和 $\\hat{H}_B$ 分别是 $\\hat{H}$ 在子系统 $A$ 和 $B$ 内部格点上的限制。耦合项 $\\hat{H}_{AB}$ 由下式给出：\n$$ \\hat{H}_{AB} = \\sum_{p=1}^{k} \\sum_{q=k+1}^{N} V_{pq} \\hat{n}_p \\hat{n}_q $$\n我们已知相互作用张量 $V_{pq} = \\sum_{L=1}^{R}x_{p}^{(L)}x_{q}^{(L)}$（对于 $p \\neq q$）的秩为 $R$ 的分解。将其代入耦合项可得：\n$$ \\hat{H}_{AB} = \\sum_{p=1}^{k} \\sum_{q=k+1}^{N} \\left(\\sum_{L=1}^{R}x_{p}^{(L)}x_{q}^{(L)}\\right) \\hat{n}_p \\hat{n}_q = \\sum_{L=1}^{R} \\left(\\sum_{p=1}^{k} x_p^{(L)} \\hat{n}_p\\right) \\left(\\sum_{q=k+1}^{N} x_q^{(L)} \\hat{n}_q\\right) $$\n我们定义作用在子系统 $A$ 和 $B$ 上的算符：\n$$ \\hat{O}_A^{(L)} = \\sum_{p=1}^{k} x_p^{(L)} \\hat{n}_p \\quad \\text{对于 } L=1, \\dots, R $$\n$$ \\hat{O}_B^{(L)} = \\sum_{q=k+1}^{N} x_q^{(L)} \\hat{n}_q \\quad \\text{对于 } L=1, \\dots, R $$\n总哈密顿量可以写成跨越二分 $(A,B)$ 的算符施密特分解形式：\n$$ \\hat{H} = \\hat{H}_A \\otimes \\hat{I}_B + \\hat{I}_A \\otimes \\hat{H}_B + \\sum_{L=1}^{R} \\hat{O}_A^{(L)} \\otimes \\hat{O}_B^{(L)} $$\n其中 $\\hat{I}_A$ 和 $\\hat{I}_B$ 分别是相应子系统上的单位算符。\n最小 MPO 键维度 $D_{\\min}(k)$ 是切口一侧（例如，左侧）线性无关算符的数量。左算符集合为 $\\mathcal{S}_A = \\{\\hat{H}_A, \\hat{I}_A, \\hat{O}_A^{(1)}, \\dots, \\hat{O}_A^{(R)}\\}$。维度 $D_{\\min}(k)$ 是由 $\\mathcal{S}_A$ 张成的向量空间的维度。\n\n为了找到这个维度，我们通过将任意线性组合设为零算符来检验其线性无关性：\n$$ c_H \\hat{H}_A + c_I \\hat{I}_A + \\sum_{L=1}^{R} c_L \\hat{O}_A^{(L)} = \\hat{0} $$\n$\\mathcal{S}_A$ 中的所有算符在占据数基 $|s_1, \\dots, s_k\\rangle$（其中 $s_p \\in \\{0,1\\}$）中都是对角的。它们是关于粒子数算符 $\\{\\hat{n}_p\\}_{p=1}^k$ 的多项式。我们可以通过考虑它们关于这些算符的多项式次数来分析其线性无关性。\n- $\\hat{I}_A$ 的次数为 0。\n- $\\hat{O}_A^{(L)}$ 的次数为 1。\n- $\\hat{H}_A = \\sum_{p=1}^{k}\\epsilon_{p}\\,\\hat{n}_{p}+\\frac{1}{2}\\sum_{\\substack{p,q=1\\\\p\\neq q}}^{k}V_{pq}\\,\\hat{n}_{p}\\hat{n}_{q}$ 包含次数为 1 和次数为 2 的项。次数为 2 的部分是 $\\hat{H}_{A,2} = \\frac{1}{2}\\sum_{p \\neq q \\in A} V_{pq} \\hat{n}_p \\hat{n}_q$。\n\n具有不同多项式次数的算符空间是线性无关的。该线性组合必须按次数逐项为零。唯一的二次项贡献是 $c_H \\hat{H}_{A,2}$。要使该组合为零，必须有 $c_H \\hat{H}_{A,2} = \\hat{0}$。这意味着要么 $c_H=0$，要么 $\\hat{H}_{A,2}=\\hat{0}$。\n\n我们来判断 $\\hat{H}_{A,2}$ 是否可能为零算符。$\\hat{H}_{A,2} = \\hat{0}$ 当且仅当对所有 $p,q \\in \\{1,\\dots,k\\}$ 且 $p \\neq q$，都有 $V_{pq} = 0$。使用该分解，这意味着 $\\sum_{L=1}^R x_p^{(L)} x_q^{(L)} = 0$。令 $\\boldsymbol{u}_p = (x_p^{(1)}, \\dots, x_p^{(R)}) \\in \\mathbb{R}^R$。条件是对于 $\\{1, \\dots, k\\}$ 中所有 $p \\neq q$，都有 $\\boldsymbol{u}_p \\cdot \\boldsymbol{u}_q = 0$。这意味着 $k$ 个向量的集合 $\\{\\boldsymbol{u}_p\\}_{p=1}^k$ 在 $\\mathbb{R}^R$ 中是一个正交集。要使 $k$ 个非零向量在 $R$ 维空间中正交，必须满足 $k \\le R$。问题指定的参数为 $k=10$ 和 $R=7$。由于 $k > R$，$\\mathbb{R}^7$ 中的 10 个向量 $\\{\\boldsymbol{u}_p\\}_{p=1}^{10}$ 不可能相互正交（假设它们非零，这对于相互作用系统是一个物理上合理的假设）。因此，对于 $p,q \\in A$，至少有一个 $V_{pq} \\neq 0$，所以 $\\hat{H}_{A,2} \\neq \\hat{0}$。\n\n由于 $\\hat{H}_{A,2} \\neq \\hat{0}$，我们必须有 $c_H=0$。线性无关条件简化为：\n$$ c_I \\hat{I}_A + \\sum_{L=1}^{R} c_L \\hat{O}_A^{(L)} = \\hat{0} $$\n算符 $\\hat{I}_A$ 的次数为 0，而求和项的次数为 1。因此，它们是线性无关的，这必然导致 $c_I=0$ 且 $\\sum_{L=1}^{R} c_L \\hat{O}_A^{(L)} = \\hat{0}$。\n最终的条件是 $\\sum_{L=1}^{R} c_L \\left(\\sum_{p=1}^k x_p^{(L)} \\hat{n}_p\\right) = \\sum_{p=1}^k \\left(\\sum_{L=1}^R c_L x_p^{(L)}\\right) \\hat{n}_p = \\hat{0}$。粒子数算符 $\\{\\hat{n}_p\\}_{p=1}^k$ 是线性无关的。这要求它们的系数为零：\n$$ \\sum_{L=1}^{R} c_L x_p^{(L)} = 0 \\quad \\text{对所有 } p=1, \\dots, k. $$\n这是一个关于 $R$ 个未知数 $\\{c_L\\}$ 的 $k$ 个线性方程组。令 $\\mathbb{R}^k$ 中的向量为 $\\boldsymbol{y}^{(L)} = (x_1^{(L)}, \\dots, x_k^{(L)})$。该方程组为 $\\sum_{L=1}^R c_L \\boldsymbol{y}^{(L)} = \\boldsymbol{0}$。题目指出族 $\\{(x_p^{(L)})_{p=1}^k\\}_{L=1}^R$ 在 $\\mathbb{R}^k$ 中是线性无关的，这意味着向量 $\\{\\boldsymbol{y}^{(L)}\\}_{L=1}^R$ 是线性无关的。这意味着唯一的解是 $c_L=0$ 对所有 $L=1,\\dots,R$。\n\n由于所有系数 $c_H, c_I, c_L$ 都必须为零，所以这 $R+2$ 个算符的集合 $\\mathcal{S}_A = \\{\\hat{H}_A, \\hat{I}_A, \\hat{O}_A^{(1)}, \\dots, \\hat{O}_A^{(R)}\\}$ 是线性无关的。因此，由这些算符张成的空间的维度是 $R+2$。\n因此，最小 MPO 键维度为 $D_{\\min}(k) = R+2$。\n\n题目要求计算当 $N=20$、$k=10$ 和 $R=7$ 时此表达式的值。条件 $k > R$（$10 > 7$）成立，验证了我们的推导路径。\n$$ D_{\\min}(10) = R+2 = 7+2 = 9 $$\n这一结果在问题指定的条件下成立，代表了通过最优地利用给定的两体相互作用张量的秩为 $R$ 的分解所能达到的最小键维度。", "answer": "$$\\boxed{9}$$", "id": "2929033"}, {"introduction": "在理论算法和实际结果之间架起桥梁，需要一套稳健的程序来监控收敛并估计误差。本编程练习将指导您实现真实 DMRG 计算中常见的数据分析任务，例如能量外推和纠缠分析 [@problem_id:2929049]。这项实践将使您掌握解读数值输出和评估张量网络模拟质量所需的实用技能。", "problem": "考虑在密度矩阵重整化群 (DMRG) 框架内，使用矩阵乘积态 (MPS) 拟设进行电子结构的变分计算。一个二分划分上的量子态可以进行 Schmidt 分解，其奇异值为 $\\{ s_i \\}_{i=1}^{\\chi_{\\max}}$，对应的概率为 $p_i = s_i^2$ 且满足 $\\sum_i p_i = 1$。截断至键维 $\\chi$ 会保留最大的 $\\chi$ 个奇异值并舍弃其余部分，这导致了一个丢弃权重 $\\epsilon_\\chi = \\sum_{i > \\chi} p_i$。对于哈密顿量 $H$ 的一个近似本征态 $\\lvert \\psi \\rangle$，其能量方差为 $v = \\langle \\psi \\lvert H^2 \\rvert \\psi \\rangle - \\langle \\psi \\lvert H \\rvert \\psi \\rangle^2$，而对于精确本征态，$v = 0$。在接近收敛时，变分能量通常与丢弃权重或能量方差近似呈线性相关。你的任务是仅使用上述基本定义和通过最小化残差平方和推导出的最小二乘法拟合，从第一性原理出发，实现基于原理的收敛控制和误差估计。\n\n你必须编写一个程序来完成以下任务，并使用下面给出的精确数据。所有能量单位均为 Hartree，且必须以 Hartree 报告。所有对数均为自然对数。\n\n任务 A (能量对外推丢弃权重)：给定在小 $\\epsilon$ 范围内近似线性的能量 $E$ 与丢弃权重 $\\epsilon$ 的样本数据，通过普通最小二乘法拟合一条直线 $E(\\epsilon)$，并计算其在 $\\epsilon=0$ 处的值，从而得到外推的零丢弃权重基态能量 $E_0$。使用以下数据：\n- 能量 (Hartree): $\\mathbf{E}^{(A)} = (-75.64301, -75.64309, -75.64315, -75.64318)$\n- 丢弃权重: $\\boldsymbol{\\epsilon}^{(A)} = (1.0 \\times 10^{-4}, 6.0 \\times 10^{-5}, 3.0 \\times 10^{-5}, 1.5 \\times 10^{-5})$\n报告估算的 $E_0$ 值（单位为 Hartree），四舍五入到 8 位小数。\n\n任务 B (能量对外推方差)：给定能量 $E$ 与能量方差 $v$ 的样本数据，通过普通最小二乘法拟合一条直线 $E(v)$，并计算其在 $v = 0$ 处的值，从而得到外推的零方差能量 $E_0$。使用以下数据：\n- 能量 (Hartree): $\\mathbf{E}^{(B)} = (-1.13677, -1.13707, -1.13722, -1.137245)$\n- 方差: $\\mathbf{v}^{(B)} = (1.0 \\times 10^{-3}, 4.0 \\times 10^{-4}, 1.0 \\times 10^{-4}, 5.0 \\times 10^{-5})$\n报告估算的 $E_0$ 值（单位为 Hartree），四舍五入到 8 位小数。\n\n任务 C (收敛判定准则)：实现一个基于两个必须同时满足的标准的收敛判定准则：\n- 最后两次扫视中，每一次的最大丢弃权重均小于或等于目标阈值 $\\tau$。\n- 最后两次扫视之间的能量绝对变化量小于或等于阈值 $\\delta E$。\n使用以下数据：\n- 扫视能量 (Hartree): $\\mathbf{E}^{(\\mathrm{sweeps})} = (-40.12340000, -40.12348000, -40.12350000, -40.12350005)$\n- 扫视丢弃权重: $\\boldsymbol{\\epsilon}^{(\\mathrm{sweeps})} = (2.0 \\times 10^{-6}, 9.0 \\times 10^{-7}, 7.0 \\times 10^{-7}, 5.0 \\times 10^{-7})$\n- 阈值: $\\tau = 1.0 \\times 10^{-6}$ 和 $\\delta E = 1.0 \\times 10^{-7}$ Hartree\n报告一个指示此准则下是否达到收敛的布尔值。\n\n任务 D (针对目标丢弃权重的最小键维)：给定一个二分划分的单键奇异值谱（已按非递增顺序排序），计算使得丢弃权重 $\\epsilon_\\chi$ 小于或等于目标容差 $\\tau$ 的最小键维 $\\chi$。使用以下奇异值：\n- $\\mathbf{s} = \\big(\\sqrt{0.6}, \\sqrt{0.2}, \\sqrt{0.1}, \\sqrt{0.05}, \\sqrt{0.03}, \\sqrt{0.01}, \\sqrt{0.005}, \\sqrt{0.003}, \\sqrt{0.001}, \\sqrt{0.001}\\big)$\n和容差 $\\tau = 5.0 \\times 10^{-3}$。\n报告满足 $\\epsilon_\\chi \\le \\tau$ 的最小整数 $\\chi$。\n\n任务 E (纠缠熵)：对于与任务 D 中相同的谱，计算 von Neumann 纠缠熵 $S = - \\sum_i p_i \\ln p_i$，其中 $p_i = s_i^2$。报告 $S$ 的值，四舍五入到 6 位小数。\n\n任务 F (固定键维下的丢弃权重)：对于与任务 D 中相同的谱，计算当 $\\chi = 7$ 时的丢弃权重 $\\epsilon_\\chi$。报告 $\\epsilon_\\chi$ 的值，四舍五入到 6 位小数。\n\n你可以使用的基本原理：\n- 变分原理意味着近似能量是精确基态能量的上界，并且精确本征态的方差为 $v = 0$。\n- 通过保留最大的 $\\chi$ 个奇异值得到的截断 MPS 的丢弃权重为 $\\epsilon_\\chi = \\sum_{i>\\chi} s_i^2$。\n- 普通最小二乘法通过最小化残差平方和来拟合一条直线；你可以推导并使用最佳拟合线的闭式解。\n\n你的程序必须根据所提供的数据计算答案，并按以下顺序和格式生成它们：\n- 顺序：$[A, B, C, D, E, F]$，其中 $A$ 和 $B$ 是以 Hartree 为单位、四舍五入到 8 位小数的浮点数，$C$ 是一个布尔值，$D$ 是一个整数，$E$ 和 $F$ 是四舍五入到 6 位小数的浮点数。\n- 最终输出格式：你的程序应生成单行输出，其中包含一个逗号分隔的列表形式的结果，并用方括号括起来（例如，$[x_1,x_2,x_3,x_4,x_5,x_6]$），不含空格。", "solution": "问题陈述已经过严格的验证流程。\n\n### 第 1 步：提取的已知条件\n问题提供了以下定义和数据：\n- **基本概念**：问题定义了矩阵乘积态 (MPS) 在二分划分上的 Schmidt 分解，其奇异值为 $\\{s_i\\}_{i=1}^{\\chi_{\\max}}$，Schmidt 概率为 $p_i = s_i^2$ 且归一化为 $\\sum_i p_i = 1$，丢弃权重为 $\\epsilon_\\chi = \\sum_{i > \\chi} p_i$，能量方差为 $v = \\langle \\psi \\lvert H^2 \\rvert \\psi \\rangle - \\langle \\psi \\lvert H \\rvert \\psi \\rangle^2$。问题指出，对于精确本征态，$v=0$。问题还假设在接近收敛时，变分能量 $E$ 与丢弃权重 $\\epsilon$ 或方差 $v$ 近似呈线性相关。\n- **任务 A 数据**：能量 $\\mathbf{E}^{(A)} = (-75.64301, -75.64309, -75.64315, -75.64318)$ Hartrees 和对应的丢弃权重 $\\boldsymbol{\\epsilon}^{(A)} = (1.0 \\times 10^{-4}, 6.0 \\times 10^{-5}, 3.0 \\times 10^{-5}, 1.5 \\times 10^{-5})$。\n- **任务 B 数据**：能量 $\\mathbf{E}^{(B)} = (-1.13677, -1.13707, -1.13722, -1.137245)$ Hartrees 和对应的能量方差 $\\mathbf{v}^{(B)} = (1.0 \\times 10^{-3}, 4.0 \\times 10^{-4}, 1.0 \\times 10^{-4}, 5.0 \\times 10^{-5})$。\n- **任务 C 数据**：扫视能量 $\\mathbf{E}^{(\\mathrm{sweeps})} = (-40.12340000, -40.12348000, -40.12350000, -40.12350005)$ Hartrees，扫视丢弃权重 $\\boldsymbol{\\epsilon}^{(\\mathrm{sweeps})} = (2.0 \\times 10^{-6}, 9.0 \\times 10^{-7}, 7.0 \\times 10^{-7}, 5.0 \\times 10^{-7})$，以及阈值 $\\tau = 1.0 \\times 10^{-6}$ 和 $\\delta E = 1.0 \\times 10^{-7}$ Hartree。\n- **任务 D、E、F 数据**：一个已排序的奇异值列表 $\\mathbf{s} = \\big(\\sqrt{0.6}, \\sqrt{0.2}, \\sqrt{0.1}, \\sqrt{0.05}, \\sqrt{0.03}, \\sqrt{0.01}, \\sqrt{0.005}, \\sqrt{0.003}, \\sqrt{0.001}, \\sqrt{0.001}\\big)$。对于任务 D，容差为 $\\tau = 5.0 \\times 10^{-3}$。对于任务 F，键维为 $\\chi = 7$。\n\n### 第 2 步：验证\n问题根据既定标准进行评估：\n- **科学上合理且客观**：该问题基于量子力学和数值量子化学的标准、可验证的原理，特别是使用张量网络 (DMRG/MPS) 的变分法。所有概念，如 Schmidt 分解、纠缠熵和能量外推，都得到了严格定义并在该领域广泛使用。所提供的数据在数值上是合理的。该问题不含主观性和伪科学。\n- **定义明确且完整**：每个任务都明确指定了输入、清晰的目标和要求的输出格式。奇异值谱的数据正确归一化，因为 $\\sum_i s_i^2 = 0.6 + 0.2 + 0.1 + 0.05 + 0.03 + 0.01 + 0.005 + 0.003 + 0.001 + 0.001 = 1.0$。该问题是自洽的，并为计算每个任务的唯一解提供了所有必要信息。\n\n### 第 3 步：结论\n该问题有效。它在科学上是合理的，定义明确，并且提供了所有必要的数据。将基于第一性原理构建解决方案。\n\n### 解法推导\n\n**任务 A 和 B：通过普通最小二乘法进行能量外推**\n\n任务要求将线性模型 $E(x) = mx + E_0$ 拟合到一组数据点 $(x_i, E_i)$，其中 $x$ 代表丢弃权重 $\\epsilon$ 或方差 $v$。目标是找到外推能量 $E_0$，即回归线的截距。这可以通过最小化残差平方和 $S = \\sum_{i=1}^{n} (E_i - (mx_i + E_0))^2$ 来实现。\n\n为最小化 $S$，我们将其对参数 $m$ 和 $E_0$ 的偏导数设为零：\n$$\n\\frac{\\partial S}{\\partial E_0} = -2 \\sum_{i=1}^{n} (E_i - mx_i - E_0) = 0 \\implies \\sum E_i = m \\sum x_i + n E_0\n$$\n$$\n\\frac{\\partial S}{\\partial m}   = -2 \\sum_{i=1}^{n} x_i(E_i - mx_i - E_0) = 0 \\implies \\sum x_i E_i = m \\sum x_i^2 + E_0 \\sum x_i\n$$\n从第一个方程，定义均值 $\\bar{x} = \\frac{1}{n}\\sum x_i$ 和 $\\bar{E} = \\frac{1}{n}\\sum E_i$，我们得到截距：\n$$\nE_0 = \\bar{E} - m\\bar{x}\n$$\n将此代入第二个方程得到斜率：\n$$\nm = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(E_i - \\bar{E})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}\n$$\n所需的外推能量 $x=0$ 恰好是截距 $E_0$。这些公式将用于任务 A (其中 $x = \\epsilon$) 和任务 B (其中 $x = v$) 的实现。\n\n**任务 C：收敛判定准则**\n\n收敛由最后两次变分扫视（索引为 $n-1$ 和 $n$）的两个同时满足的条件确定：\n1. 最后两次扫视中每一次的最大丢弃权重必须低于阈值 $\\tau$：$\\epsilon_{n-1} \\leq \\tau$ 且 $\\epsilon_n \\leq \\tau$。\n2. 最后两次扫视之间的能量绝对差必须低于阈值 $\\delta E$：$|E_n - E_{n-1}| \\leq \\delta E$。\n最终判定是这两个条件的逻辑与。\n\n**任务 D：针对目标丢弃权重的最小键维**\n\n给定概率 $p_i = s_i^2$，对于给定的键维 $\\chi$，丢弃权重定义为被丢弃状态的概率之和：\n$$\n\\epsilon_\\chi = \\sum_{i=\\chi+1}^{\\chi_{\\max}} p_i\n$$\n任务是找到最小的整数 $\\chi$ 使得对于给定的容差 $\\tau$ 满足 $\\epsilon_\\chi \\leq \\tau$。这可以通过从 $\\chi=1$ 开始向上迭代并计算 $\\epsilon_\\chi$ 直到满足条件来找到。\n\n**任务 E：纠缠熵**\n\n二分划分的 von Neumann 纠缠熵直接根据其定义，使用 Schmidt 概率 $p_i$ 计算：\n$$\nS = - \\sum_{i=1}^{\\chi_{\\max}} p_i \\ln p_i\n$$\n其中，如果 $p_i=0$，则项 $p_i \\ln p_i$ 取为 0。在给定的问题中，所有 $p_i > 0$。\n\n**任务 F：固定键维下的丢弃权重**\n\n这是使用任务 D 中定义的公式，针对指定的键维 $\\chi=7$ 进行的直接计算。必须计算：\n$$\n\\epsilon_7 = \\sum_{i=8}^{\\chi_{\\max}} p_i\n$$\n概率 $p_i$ 是通过对提供的奇异值 $s_i$ 进行平方得到的。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves a multi-part problem related to DMRG convergence and analysis.\n    \"\"\"\n\n    # --- Task A: Energy vs. Discarded Weight Extrapolation ---\n    def extrapolate_energy_ols(x_vals, e_vals):\n        \"\"\"\n        Performs ordinary least squares linear regression to find the intercept.\n        The model is E = m*x + c, where the intercept c is the extrapolated energy.\n        \"\"\"\n        x = np.array(x_vals)\n        y = np.array(e_vals)\n        n = len(x)\n\n        x_mean = np.mean(x)\n        y_mean = np.mean(y)\n\n        # Calculate slope (m) and intercept (c) using OLS formulas\n        numerator = np.sum((x - x_mean) * (y - y_mean))\n        denominator = np.sum((x - x_mean)**2)\n        \n        m = numerator / denominator\n        c = y_mean - m * x_mean\n        \n        return c\n\n    energies_A = [-75.64301, -75.64309, -75.64315, -75.64318]\n    weights_A = [1.0e-4, 6.0e-5, 3.0e-5, 1.5e-5]\n    result_A = extrapolate_energy_ols(weights_A, energies_A)\n\n    # --- Task B: Energy vs. Variance Extrapolation ---\n    energies_B = [-1.13677, -1.13707, -1.13722, -1.137245]\n    variances_B = [1.0e-3, 4.0e-4, 1.0e-4, 5.0e-5]\n    result_B = extrapolate_energy_ols(variances_B, energies_B)\n\n    # --- Task C: Convergence Decision Rule ---\n    sweep_energies = [-40.12340000, -40.12348000, -40.12350000, -40.12350005]\n    sweep_weights = [2.0e-6, 9.0e-7, 7.0e-7, 5.0e-7]\n    tau_conv = 1.0e-6\n    delta_E_conv = 1.0e-7\n\n    weight_cond = (sweep_weights[-1] <= tau_conv) and (sweep_weights[-2] <= tau_conv)\n    energy_cond = abs(sweep_energies[-1] - sweep_energies[-2]) <= delta_E_conv\n    \n    result_C = weight_cond and energy_cond\n\n    # --- Data for Tasks D, E, F ---\n    s_vals = np.sqrt([0.6, 0.2, 0.1, 0.05, 0.03, 0.01, 0.005, 0.003, 0.001, 0.001])\n    p_vals = s_vals**2\n\n    # --- Task D: Minimal Bond Dimension ---\n    tau_discard = 5.0e-3\n    chi_max = len(p_vals)\n    result_D = -1 # Initialize with an invalid value\n    for chi in range(1, chi_max):\n        # Discarded weight is sum of probabilities of states with index > chi\n        # In 0-based index, this corresponds to sum from index chi onwards\n        discarded_weight = np.sum(p_vals[chi:])\n        if discarded_weight <= tau_discard:\n            result_D = chi\n            break\n\n    # --- Task E: Entanglement Entropy ---\n    # S = - sum(p_i * log(p_i))\n    # All p_i are > 0, so no need to check for log(0)\n    result_E = -np.sum(p_vals * np.log(p_vals))\n\n    # --- Task F: Discarded Weight for a Fixed Bond Dimension ---\n    chi_fixed = 7\n    # Discarded weight is sum of probabilities of states with index > 7.\n    # In 0-based index, sum from index 7 onwards.\n    result_F = np.sum(p_vals[chi_fixed:])\n    \n    # --- Format Results for Final Output ---\n    results_formatted = [\n        f\"{result_A:.8f}\",\n        f\"{result_B:.8f}\",\n        str(result_C),\n        str(result_D),\n        f\"{result_E:.6f}\",\n        f\"{result_F:.6f}\",\n    ]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results_formatted)}]\")\n\nsolve()\n```", "id": "2929049"}]}