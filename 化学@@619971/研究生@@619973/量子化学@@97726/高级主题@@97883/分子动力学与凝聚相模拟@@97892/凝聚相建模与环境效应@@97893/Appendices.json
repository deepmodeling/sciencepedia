{"hands_on_practices": [{"introduction": "在分子力学中，点电荷和线性响应诱导偶极子的简单经典模型在短距离处会失效，导致称为“极化灾难”的非物理性发散。本练习将指导您从第一性原理出发，理解这个问题，并实现一种物理上合理的阻尼方案（Thole 型阻尼）来修正近程相互作用 [@problem_id:2881216]。通过这个实践，您将掌握在先进的可极化力场中处理静电相互作用的核心技术。", "problem": "你需要从第一性原理出发，对强电荷离子附近的感应偶极子模型中的经典极化灾变进行推理，并实现一种具有物理动机的阻尼以防止发散。请在原子单位制下进行计算，其中能量单位为哈特里（Hartree），长度单位为玻尔（Bohr），基本电荷为 1。考虑一个各向同性的可极化位点，其极化率为 $\\alpha$，与一个固定的点电荷 $q$ 相距为 $r$。在原子单位制下，离子在可极化位点处产生的局部电场强度大小为 $|\\mathcal{E}| = |q|/r^2$。感应偶极矩满足线性响应关系 $\\boldsymbol{\\mu} = \\alpha \\,\\boldsymbol{\\mathcal{E}}$，感应能是在线性介质中极化的经典功，其表达式为 $U_{\\mathrm{ind}} = -\\tfrac{1}{2}\\,\\boldsymbol{\\mu}\\cdot \\boldsymbol{\\mathcal{E}}$。对于点离子，当 $r \\to 0$ 时，该能量会发散，这一现象被称为极化灾变。\n\n为了对离子附近的场进行正则化，并表示短程范围内的电荷穿透效应，引入一个阻尼函数 $f_{\\mathrm{damp}}(r; a, \\rho)$，该函数满足 $f_{\\mathrm{damp}}(0)=0$、$f_{\\mathrm{damp}}(\\infty)=1$ 且单调递增。采用 Thole 型函数形式\n$f_{\\mathrm{damp}}(r; a, \\rho) = 1 - \\exp\\!\\left(-a \\left(\\dfrac{r}{\\rho}\\right)^3\\right)$\n其中形状参数 $a>0$，以及一个依赖于极化率的长度尺度 $\\rho = \\gamma\\,\\alpha^{1/3}$，$\\gamma>0$ 是一个无量纲参数。经过阻尼后的局部电场强度大小为 $|\\mathcal{E}_{\\mathrm{d}}| = f_{\\mathrm{damp}}(r; a, \\rho)\\,|\\mathcal{E}|$，相应的感应能为 $U_{\\mathrm{ind}}^{\\mathrm{(d)}} = -\\tfrac{1}{2}\\,\\alpha\\,|\\mathcal{E}_{\\mathrm{d}}|^2$。\n\n你的任务是实现一个程序，针对一组指定的测试用例，为每个用例计算未阻尼的感应能 $U_{\\mathrm{ind}}$ 和使用上述基本关系式计算出的阻尼感应能 $U_{\\mathrm{ind}}^{\\mathrm{(d)}}$。所有量均以原子单位表示。程序不得接受任何输入，并且必须生成一行输出，其中包含一个逗号分隔的扁平列表，按以下提供的顺序排列每个测试的未阻尼能量和阻尼能量。每个值必须四舍五入到恰好八位小数。因此，最终输出必须是严格符合 $[u_1^{\\mathrm{(und)}},u_1^{\\mathrm{(d)}},u_2^{\\mathrm{(und)}},u_2^{\\mathrm{(d)}},\\dots]$ 格式的单行文本。\n\n使用以下测试套件，它涵盖了近灾变的短程情况、中等距离和电荷、q 的符号反转（这不应影响能量的大小），以及阻尼应可忽略不计的远场极限：\n\n- 测试 1：$(q,\\alpha,r,a,\\gamma) = (\\,{+2},\\,{10},\\,{0.5},\\,{0.39},\\,{1.0}\\,)$。\n- 测试 2：$(q,\\alpha,r,a,\\gamma) = (\\,{+1},\\,{10},\\,{2.0},\\,{0.39},\\,{1.0}\\,)$。\n- 测试 3：$(q,\\alpha,r,a,\\gamma) = (\\,{+3},\\,{20},\\,{1.0},\\,{0.39},\\,{1.2}\\,)$。\n- 测试 4：$(q,\\alpha,r,a,\\gamma) = (\\,{-1},\\,{5},\\,{4.0},\\,{0.39},\\,{1.0}\\,)$。\n- 测试 5：$(q,\\alpha,r,a,\\gamma) = (\\,{+1},\\,{10},\\,{10.0},\\,{0.39},\\,{1.0}\\,)$。\n\n实现要求：\n\n- 从基本定义 $\\boldsymbol{\\mu} = \\alpha \\boldsymbol{\\mathcal{E}}$ 和 $U_{\\mathrm{ind}} = -\\tfrac{1}{2}\\,\\boldsymbol{\\mu}\\cdot \\boldsymbol{\\mathcal{E}}$ 出发，其中 $|\\mathcal{E}| = |q|/r^2$。\n- 通过 $f_{\\mathrm{damp}}(r; a, \\rho) = 1 - \\exp\\!\\left(-a \\left(\\dfrac{r}{\\rho}\\right)^3\\right)$ 和 $\\rho = \\gamma\\,\\alpha^{1/3}$ 应用阻尼，以获得阻尼后的电场强度大小 $|\\mathcal{E}_{\\mathrm{d}}|$ 和阻尼能量 $U_{\\mathrm{ind}}^{\\mathrm{(d)}}$。\n- 对每个测试，计算两个浮点数：未阻尼的 $U_{\\mathrm{ind}}$ 和阻尼的 $U_{\\mathrm{ind}}^{\\mathrm{(d)}}$，两者均以哈特里（Hartree）为单位，并四舍五入到恰好八位小数。\n- 你的程序应生成一行输出，包含一个用方括号括起来的逗号分隔列表形式的结果（例如，$[x_1,x_2,\\dots]$），不含任何其他文本。\n\n注意：此问题不涉及角度。所有答案必须以哈特里（原子单位能量）表示，并按规定四舍五入到八位小数。", "solution": "首先对问题陈述进行严格的验证程序。\n\n**步骤 1：提取已知条件**\n以下信息是逐字提供或作为直接的数学定义给出：\n-   系统由一个点电荷 $q$ 和一个各向同性可极化位点组成，该位点具有极化率 $\\alpha$，两者相距固定距离 $r$。所有量均采用原子单位。\n-   由电荷在可极化位点处产生的电场强度大小为 $|\\mathcal{E}| = |q|/r^2$。\n-   感应偶极矩遵循线性响应关系 $\\boldsymbol{\\mu} = \\alpha \\,\\boldsymbol{\\mathcal{E}}$。\n-   未阻尼的感应能定义为 $U_{\\mathrm{ind}} = -\\tfrac{1}{2}\\,\\boldsymbol{\\mu}\\cdot \\boldsymbol{\\mathcal{E}}$。\n-   引入一个 Thole 型阻尼函数：$f_{\\mathrm{damp}}(r; a, \\rho) = 1 - \\exp\\!\\left(-a \\left(\\dfrac{r}{\\rho}\\right)^3\\right)$，其中形状参数 $a>0$。\n-   阻尼函数依赖于一个与极化率相关的长度尺度 $\\rho = \\gamma\\,\\alpha^{1/3}$，其中 $\\gamma>0$ 是一个无量纲参数。\n-   阻尼后的局部电场强度大小由 $|\\mathcal{E}_{\\mathrm{d}}| = f_{\\mathrm{damp}}(r; a, \\rho)\\,|\\mathcal{E}|$ 给出。\n-   阻尼后的感应能为 $U_{\\mathrm{ind}}^{\\mathrm{(d)}} = -\\tfrac{1}{2}\\,\\alpha\\,|\\mathcal{E}_{\\mathrm{d}}|^2$。\n-   为元组 $(q, \\alpha, r, a, \\gamma)$ 指定了以下五个测试用例：\n    1.  $(\\,{+2},\\,{10},\\,{0.5},\\,{0.39},\\,{1.0}\\,)$\n    2.  $(\\,{+1},\\,{10},\\,{2.0},\\,{0.39},\\,{1.0}\\,)$\n    3.  $(\\,{+3},\\,{20},\\,{1.0},\\,{0.39},\\,{1.2}\\,)$\n    4.  $(\\,{-1},\\,{5},\\,{4.0},\\,{0.39},\\,{1.0}\\,)$\n    5.  $(\\,{+1},\\,{10},\\,{10.0},\\,{0.39},\\,{1.0}\\,)$\n\n**步骤 2：使用提取的已知条件进行验证**\n根据所需标准对问题进行评估：\n-   **科学依据**：该问题探讨了经典极化灾变（分子力学力场中一个众所周知的赝象）及其通过 Thole 型阻尼的解决方案。这是凝聚相模拟领域中一个标准且具有物理动机的概念。其物理和数学原理完全合理。\n-   **适定性**：所有必要的公式、变量和常数都已明确提供。函数形式已在给定的参数域中定义。对于每组输入参数，都存在唯一的数值解。\n-   **客观性**：问题使用精确、无歧义的数学语言陈述。它不含主观或非科学内容。\n-   **完整性和一致性**：问题是自洽的。它没有内部矛盾，并提供了求解所需的所有数据。\n-   **可行性**：所要求的计算在计算上是简单直接的，参数在理论模型的合理范围内。\n\n**步骤 3：结论与行动**\n该问题是**有效的**。它代表了理论化学中一个标准的、定义明确的计算练习。将基于所提供的第一性原理构建一个解决方案。\n\n求解过程从第一性原理开始。所考虑的系统包含一个点电荷 $q$，在距离 $r$ 处产生一个电场 $\\boldsymbol{\\mathcal{E}}$。该场的强度大小由原子单位制下的库仑定律给出：\n$$\n|\\boldsymbol{\\mathcal{E}}| = \\frac{|q|}{r^2}\n$$\n在此场中，一个具有各向同性极化率 $\\alpha$ 的粒子会获得一个感应偶极矩 $\\boldsymbol{\\mu} = \\alpha\\boldsymbol{\\mathcal{E}}$。感应能 $U_{\\mathrm{ind}}$ 是极化粒子所做的功，由下式给出：\n$$\nU_{\\mathrm{ind}} = -\\frac{1}{2} \\boldsymbol{\\mu} \\cdot \\boldsymbol{\\mathcal{E}} = -\\frac{1}{2} (\\alpha\\boldsymbol{\\mathcal{E}}) \\cdot \\boldsymbol{\\mathcal{E}} = -\\frac{1}{2} \\alpha |\\boldsymbol{\\mathcal{E}}|^2\n$$\n代入场强的表达式，得到未阻尼感应能的公式：\n$$\nU_{\\mathrm{ind}} = -\\frac{1}{2} \\alpha \\left( \\frac{|q|}{r^2} \\right)^2 = -\\frac{\\alpha q^2}{2r^4}\n$$\n该表达式在 $r \\to 0$ 时表现出非物理性发散，即所谓的极化灾变。\n\n为了修正这个问题，使用阻尼函数在短程处对电场进行正则化，该函数模拟了相互作用电荷分布的有限尺寸。阻尼后的场强大小 $|\\mathcal{E}_{\\mathrm{d}}|$ 定义为：\n$$\n|\\mathcal{E}_{\\mathrm{d}}| = f_{\\mathrm{damp}}(r; a, \\rho) |\\boldsymbol{\\mathcal{E}}|\n$$\n指定的 Thole 型阻尼函数为：\n$$\nf_{\\mathrm{damp}}(r; a, \\rho) = 1 - \\exp\\left(-a \\left(\\frac{r}{\\rho}\\right)^3\\right)\n$$\n该函数依赖于一个形状参数 $a$ 和一个特征长度尺度 $\\rho$，后者通过 $\\rho = \\gamma\\alpha^{1/3}$ 与可极化粒子的体积相关联，其中 $\\gamma$ 为某个无量纲常数。该函数正确地满足了物理极限：当 $r \\to 0$ 时 $f_{\\mathrm{damp}} \\to 0$（完全屏蔽），当 $r \\to \\infty$ 时 $f_{\\mathrm{damp}} \\to 1$（无屏蔽）。\n\n阻尼后的感应能 $U_{\\mathrm{ind}}^{\\mathrm{(d)}}$ 使用相同的基本关系式计算，但使用阻尼后的场：\n$$\nU_{\\mathrm{ind}}^{\\mathrm{(d)}} = -\\frac{1}{2} \\alpha |\\mathcal{E}_{\\mathrm{d}}|^2 = -\\frac{1}{2} \\alpha \\left( f_{\\mathrm{damp}}(r; a, \\rho) |\\boldsymbol{\\mathcal{E}}| \\right)^2\n$$\n通过观察，可以得出阻尼能量与未阻尼能量之间的关系是：\n$$\nU_{\\mathrm{ind}}^{\\mathrm{(d)}} = \\left( f_{\\mathrm{damp}}(r; a, \\rho) \\right)^2 U_{\\mathrm{ind}}\n$$\n这种表述方式在计算上是高效的。对每个测试用例的处理流程是：首先计算 $U_{\\mathrm{ind}}$，然后计算阻尼因子 $f_{\\mathrm{damp}}$，最后得到 $U_{\\mathrm{ind}}^{\\mathrm{(d)}}$。\n\n对于给定的参数集 $(q, \\alpha, r, a, \\gamma)$，计算步骤如下：\n1.  计算未阻尼电场的强度平方：$|\\boldsymbol{\\mathcal{E}}|^2 = (q/r^2)^2$。\n2.  计算未阻尼能量：$U_{\\mathrm{ind}} = -0.5 \\times \\alpha \\times |\\boldsymbol{\\mathcal{E}}|^2$。\n3.  计算长度尺度：$\\rho = \\gamma \\times \\alpha^{1/3}$。\n4.  计算阻尼因子：$f_{\\mathrm{damp}} = 1 - \\exp(-a \\times (r/\\rho)^3)$。\n5.  计算阻尼能量：$U_{\\mathrm{ind}}^{\\mathrm{(d)}} = U_{\\mathrm{ind}} \\times (f_{\\mathrm{damp}})^2$。\n6.  将两个能量值格式化为八位小数。\n此过程将应用于所有指定的测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes undamped and damped induction energies for several test cases\n    based on a classical model with Thole-type damping.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (q, alpha, r, a, gamma) in atomic units.\n    test_cases = [\n        (2.0, 10.0, 0.5, 0.39, 1.0),\n        (1.0, 10.0, 2.0, 0.39, 1.0),\n        (3.0, 20.0, 1.0, 0.39, 1.2),\n        (-1.0, 5.0, 4.0, 0.39, 1.0),\n        (1.0, 10.0, 10.0, 0.39, 1.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        q, alpha, r, a, gamma = case\n\n        # 1. Undamped calculation\n        # Electric field magnitude: |E| = |q|/r^2\n        # Undamped induction energy: U_ind = -1/2 * alpha * |E|^2\n        E_mag_sq = (abs(q) / r**2)**2\n        U_ind_undamped = -0.5 * alpha * E_mag_sq\n\n        # 2. Damped calculation\n        # Length scale: rho = gamma * alpha^(1/3)\n        rho = gamma * np.power(alpha, 1.0/3.0)\n\n        # Damping function: f_damp = 1 - exp(-a * (r/rho)^3)\n        # We must handle the case where rho can be zero to avoid division by zero,\n        # although with the given constraints (alpha > 0), rho will not be zero.\n        if rho == 0:\n            # If rho is 0 and r > 0, r/rho is infinite, exp -> 0, f_damp -> 1.\n            # If rho is 0 and r = 0, the expression is indeterminate but physically\n            # the fields should be zero, so we can define f_damp as 0.\n            # For non-polarizable site (alpha=0), rho=0, U=0.\n            f_damp = 1.0 if r > 0 else 0.0\n        else:\n            u = r / rho\n            f_damp = 1.0 - np.exp(-a * np.power(u, 3.0))\n\n        # Damped induction energy: U_ind_d = -1/2 * alpha * (f_damp * |E|)^2\n        # This can be simplified to U_ind_d = (f_damp)^2 * U_ind\n        U_ind_damped = U_ind_undamped * (f_damp**2)\n\n        # 3. Append formatted results to the list\n        # The problem requires rounding to exactly eight decimal places,\n        # which is best achieved with string formatting.\n        results.append(f\"{U_ind_undamped:.8f}\")\n        results.append(f\"{U_ind_damped:.8f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2881216"}, {"introduction": "色散力是决定凝聚相物质结构和热力学性质的关键长程相互作用。本练习要求您通过对液体水的模型计算，亲手实现色散能的计算，其中包含了对短程发散的阻尼校正和对有限截断半径（cutoff）的长程尾部校正 [@problem_id:2881241]。这个实践将帮助您深入理解在分子模拟中处理长程相互作用的常用技术及其对计算结果敏感性的重要性。", "problem": "您将编写一个完整的程序，通过将液体建模为具有对加（pairwise-additive）色散相互作用的均匀、各向同性流体，来计算在常温常压条件下液态水摩尔焓的色散贡献。您将使用一个选定的色散校正模型，并分析结果对球形截断方案以及是否包含长程尾部校正的敏感性。每个测试用例的最终数值答案必须以千焦耳/摩尔（kilojoules per mole）为单位表示，并四舍五入到三位小数。\n\n物理模型定义如下。考虑一个数密度为 $\\rho_{\\mathrm{N}}$ 的各向同性流体，其具有对加的、球对称的色散势 $u(r)$。每个粒子的势能的构型（色散）贡献为\n$$\n\\bar{u} \\;=\\; 2\\pi\\,\\rho_{\\mathrm{N}} \\int_{0}^{\\infty} g(r)\\,u(r)\\,r^2\\,dr,\n$$\n其中 $g(r)$ 是径向分布函数。为了分离和模拟色散贡献，我们用硬核阶跃函数来近似 $g(r)$\n$$\ng(r) \\;=\\; \\Theta\\!\\big(r - r_{\\mathrm{hc}}\\big),\n$$\n其中硬核距离为 $r_{\\mathrm{hc}}$。色散势被视为一个使用 6 阶 Tang–Toennies 阻尼函数的阻尼 $C_6$ 项：\n$$\nu(r) \\;=\\; -\\,s_6\\,\\frac{C_6}{r^6}\\,F_6\\!\\big(b\\,r\\big),\n\\quad\\text{with}\\quad\nF_6(x) \\;=\\; 1 - e^{-x}\\sum_{k=0}^{6}\\frac{x^k}{k!}.\n$$\n在实际模拟中，通常使用球形截断半径 $r_c$。在不进行移位的球形截断下，有限范围的估计值为\n$$\n\\bar{u}(r_c;\\,\\text{no-tail}) \\;=\\; 2\\pi\\,\\rho_{\\mathrm{N}} \\int_{r_{\\min}}^{r_c} g(r)\\,u(r)\\,r^2\\,dr,\n\\quad r_{\\min} \\equiv r_{\\mathrm{hc}}.\n$$\n一种常见的长程尾部校正假设对于 $r\\ge r_c$，$g(r)\\approx 1$ 且 $F_6(br)\\approx 1$，从而得出解析的尾部项\n$$\n\\Delta\\bar{u}_{\\mathrm{tail}}(r_c) \\;=\\; 2\\pi\\,\\rho_{\\mathrm{N}} \\int_{r_c}^{\\infty} \\left(-\\,s_6\\,\\frac{C_6}{r^6}\\right)\\,r^2\\,dr\n\\;=\\; -\\,\\frac{2\\pi}{3}\\,\\rho_{\\mathrm{N}}\\,s_6\\,\\frac{C_6}{r_c^3}.\n$$\n包含尾部校正时，校正后的估计值为\n$$\n\\bar{u}(r_c;\\,\\text{with-tail}) \\;=\\; \\bar{u}(r_c;\\,\\text{no-tail}) \\;+\\; \\Delta\\bar{u}_{\\mathrm{tail}}(r_c).\n$$\n采纳标准近似，即对于常温常压下的凝聚相液体，摩尔焓的色散贡献可以很好地近似为摩尔内能的构型（色散）贡献。因此，报告值为\n$$\nH_{\\mathrm{disp}} \\;\\approx\\; U_{\\mathrm{disp,\\,molar}} \\;=\\; N_{\\mathrm{A}}\\,\\bar{u},\n$$\n其中 $N_{\\mathrm{A}}$ 是阿伏伽德罗常数。请以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位表示 $U_{\\mathrm{disp,\\,molar}}$。\n\n使用以下物理上合理的参数：\n- 常温常压下液态水的质量密度：$\\rho_{\\mathrm{m}} = 997\\ \\mathrm{kg\\,m^{-3}}$。\n- 水的摩尔质量：$M = 18.01528\\times 10^{-3}\\ \\mathrm{kg\\,mol^{-1}}$。\n- 阿伏伽德罗常数：$N_{\\mathrm{A}} = 6.02214076\\times 10^{23}\\ \\mathrm{mol^{-1}}$。\n- 数密度：$\\rho_{\\mathrm{N}} = \\rho_{\\mathrm{m}}\\,N_{\\mathrm{A}}/M$，单位为 $\\mathrm{m^{-3}}$。\n- 原子单位下的色散系数：$C_6^{\\mathrm{(au)}} = 45.0$，其中 $1\\ \\text{原子单位的}\\ C_6 = E_{\\mathrm{h}}\\,a_0^6$，$E_{\\mathrm{h}}$ 为哈特里（Hartree）能量 $4.3597447222071\\times 10^{-18}\\ \\mathrm{J}$，$a_0$ 为玻尔（Bohr）半径 $0.529177210903\\times 10^{-10}\\ \\mathrm{m}$。将 $C_6$ 转换为 $\\mathrm{J\\,m^6}$。\n- 阻尼参数：$b = 3.0\\ \\mathrm{\\AA^{-1}}$，转换为 $\\mathrm{m^{-1}}$。\n- 硬核距离：$r_{\\mathrm{hc}} = 2.7\\ \\mathrm{\\AA}$，转换为 $\\mathrm{m}$。\n- 缩放因子：$s_6 = 1.0$。\n\n角度单位不适用。所有最终能量必须以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位表示，并四舍五入到三位小数。\n\n测试套件。对于每个测试用例，使用上述模型、指定的球形截断半径 $r_c$ 以及是否包含长程尾部校正的选项来计算 $H_{\\mathrm{disp}}$。对有限范围积分使用数值积分法，并在要求时对尾部校正使用解析表达式。六个测试用例如下：\n1. $r_c = 0.27\\ \\mathrm{nm}$，无尾部校正。\n2. $r_c = 0.27\\ \\mathrm{nm}$，带尾部校正。\n3. $r_c = 0.80\\ \\mathrm{nm}$，无尾部校正。\n4. $r_c = 0.80\\ \\mathrm{nm}$，带尾部校正。\n5. $r_c = 1.50\\ \\mathrm{nm}$，无尾部校正。\n6. $r_c = 1.50\\ \\mathrm{nm}$，带尾部校正。\n\n算法要求：\n- 使用 $\\bar{u}$ 的积分定义，其中 $g(r)=\\Theta(r-r_{\\mathrm{hc}})$ 且 $u(r)$ 为指定函数。\n- 对于每个测试用例，计算从 $r_{\\min}=\\max(0, r_{\\mathrm{hc}})$ 到 $r_c$ 的有限范围积分。如果 $r_c \\le r_{\\mathrm{hc}}$，根据定义，该有限范围积分为零。\n- 如果要求进行尾部校正，则加上述给出的 $\\Delta\\bar{u}_{\\mathrm{tail}}(r_c)$。\n- 通过乘以 $N_{\\mathrm{A}}$ 并除以 $1000$ 将结果转换为 $\\mathrm{kJ\\,mol^{-1}}$。\n\n您的程序应生成单行输出，其中包含六个结果，格式为方括号内由逗号分隔的列表，例如，“[x1,x2,x3,x4,x5,x6]”。每个条目必须以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位，并四舍五入到三位小数，并根据需要包含符号。不应打印任何其他文本。", "solution": "我们通过一个具有对加（pairwise-additive）相互作用的均匀、各向同性液体的构型能来模拟摩尔焓的色散贡献。均匀流体中单个粒子势能的基本统计力学关系是\n$$\n\\bar{u} \\;=\\; 2\\pi\\,\\rho_{\\mathrm{N}} \\int_{0}^{\\infty} g(r)\\,u(r)\\,r^2\\,dr,\n$$\n其中 $\\rho_{\\mathrm{N}}$ 是数密度，$g(r)$ 是径向分布函数，$u(r)$ 是对势。为了在保持计算可行性的同时分离出色散物理，我们采用阶跃函数近似\n$$\ng(r)=\\Theta(r-r_{\\mathrm{hc}}),\n$$\n该近似强制了一个半径为 $r_{\\mathrm{hc}}$ 的排除体积，并且在此范围之外 $g(r)\\approx 1$。这是对液体中长程贡献的一种标准近似。\n\n对于色散模型，我们使用带有 6 阶 Tang–Toennies 阻尼的阻尼 $C_6$ 势，\n$$\nu(r)=-s_6\\,\\frac{C_6}{r^6}\\,F_6(b r),\n\\quad\nF_6(x)=1-e^{-x}\\sum_{k=0}^{6}\\frac{x^k}{k!},\n$$\n该函数通过强制执行由电子密度重叠产生的正确短程极限行为，来正则化 $r^{-6}$ 项的短程发散。参数包括：缩放因子 $s_6$、以 $\\mathrm{J\\,m^6}$ 为单位的色散系数 $C_6$，以及以 $\\mathrm{m^{-1}}$ 为单位的阻尼参数 $b$。\n\n在实际模拟中，会应用一个球形截断半径 $r_c$。不带尾部校正的有限范围估计量为\n$$\n\\bar{u}(r_c;\\,\\text{no-tail})=2\\pi\\,\\rho_{\\mathrm{N}}\\int_{r_{\\min}}^{r_c} g(r)\\,u(r)\\,r^2\\,dr,\n\\quad\nr_{\\min}=r_{\\mathrm{hc}}.\n$$\n如果 $r_c\\le r_{\\mathrm{hc}}$，则根据阶跃函数 $g(r)$，$\\int_{r_{\\mathrm{hc}}}^{r_c}=0$。一种标准的长程校正假设，在截断半径之外，对于 $r\\ge r_c$ 的情况，$g(r)\\approx 1$ 且阻尼可以忽略，即 $F_6(br)\\approx 1$。在这些假设下，尾部积分变得可解析求解：\n$$\n\\Delta\\bar{u}_{\\mathrm{tail}}(r_c)\n=2\\pi\\,\\rho_{\\mathrm{N}}\\int_{r_c}^{\\infty}\\left(-s_6\\frac{C_6}{r^6}\\right)r^2\\,dr\n=-\\frac{2\\pi}{3}\\,\\rho_{\\mathrm{N}}\\,s_6\\,\\frac{C_6}{r_c^3}.\n$$\n校正后的估计值为\n$$\n\\bar{u}(r_c;\\,\\text{with-tail})=\\bar{u}(r_c;\\,\\text{no-tail})+\\Delta\\bar{u}_{\\mathrm{tail}}(r_c).\n$$\n\n在常温常压条件下，摩尔焓的色散贡献可近似为相应的摩尔构型能贡献，\n$$\nH_{\\mathrm{disp}}\\approx U_{\\mathrm{disp,\\,molar}}=N_{\\mathrm{A}}\\bar{u}.\n$$\n这种做法忽略了相对较小的 $pV$ 贡献以及任何特定于色散的温度导数，这对于常温常压下的凝聚相液体而言，是一种标准近似。\n\n单位和常数：\n- 数密度由质量密度和摩尔质量计算得出，\n$$\n\\rho_{\\mathrm{N}}=\\frac{\\rho_{\\mathrm{m}}\\,N_{\\mathrm{A}}}{M},\n$$\n其中 $\\rho_{\\mathrm{m}}=997\\ \\mathrm{kg\\,m^{-3}}$，$M=18.01528\\times 10^{-3}\\ \\mathrm{kg\\,mol^{-1}}$，以及 $N_{\\mathrm{A}}=6.02214076\\times 10^{23}\\ \\mathrm{mol^{-1}}$。\n- 色散系数从原子单位转换而来，\n$$\nC_6 = C_6^{(\\mathrm{au})}\\times E_{\\mathrm{h}}\\,a_0^6,\n$$\n其中 $C_6^{(\\mathrm{au})}=45.0$，$E_{\\mathrm{h}}=4.3597447222071\\times 10^{-18}\\ \\mathrm{J}$，以及 $a_0=0.529177210903\\times 10^{-10}\\ \\mathrm{m}$。\n- 阻尼参数为 $b=3.0\\ \\mathrm{\\AA^{-1}}=3.0\\times 10^{10}\\ \\mathrm{m^{-1}}$。\n- 硬核距离为 $r_{\\mathrm{hc}}=2.7\\ \\mathrm{\\AA}=2.7\\times 10^{-10}\\ \\mathrm{m}$。\n- 缩放因子为 $s_6=1.0$。\n\n数值计算方案：\n- 通过其级数定义 $F_6(x)$ 来评估阻尼。\n- 根据上述公式定义 $u(r)$。\n- 将 $\\bar{u}$ 的被积函数定义为 $2\\pi\\,\\rho_{\\mathrm{N}}\\,g(r)\\,u(r)\\,r^2$，其中 $g(r)=\\Theta(r-r_{\\mathrm{hc}})$。\n- 对于每个截断半径 $r_c$，使用数值积分计算从 $r_{\\min}=r_{\\mathrm{hc}}$ 到 $r_c$ 的有限积分。如果 $r_c\\le r_{\\mathrm{hc}}$，该有限积分为零。\n- 如果需要尾部校正，则使用上述解析表达式加上 $\\Delta\\bar{u}_{\\mathrm{tail}}(r_c)$。\n- 通过乘以 $N_{\\mathrm{A}}$ 并除以 $1000$ 将 $\\bar{u}$ 转换为 $\\mathrm{kJ\\,mol^{-1}}$。\n- 将每个结果四舍五入到三位小数，并以列表形式打印。\n\n敏感性分析已编码在测试套件中：\n- 极短的截断半径 $r_c=0.27\\ \\mathrm{nm}$ 测试了这样一个边界情况：有限积分因 $g(r)$ 而消失，但尾部校正仍可能存在贡献。\n- 中等截断半径 $r_c=0.80\\ \\mathrm{nm}$ 用于检验截断误差的影响以及尾部校正的效果。\n- 较大的截断半径 $r_c=1.50\\ \\mathrm{nm}$ 减少了截斷误差，并测试尾部校正是否变得很小。\n在所有情况下，尾部校正都假设在 $r_c$ 之外 $g(r)\\approx 1$ 且阻尼可忽略，这个假设在 $r_c$ 越大时越成立。结果以 $[H_1,H_2,H_3,H_4,H_5,H_6]$ 的形式报告，单位为 $\\mathrm{kJ\\,mol^{-1}}$，并四舍五入到三位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve():\n    # Physical constants and parameters\n    NA = 6.02214076e23  # mol^-1\n    rho_mass = 997.0  # kg m^-3\n    M = 18.01528e-3  # kg mol^-1\n    rho_N = rho_mass * NA / M  # number density, m^-3\n\n    # Atomic unit conversion for C6: 1 a.u. = Eh * a0^6\n    Eh = 4.3597447222071e-18  # J\n    a0 = 0.529177210903e-10  # m\n    C6_au = 45.0  # atomic units\n    C6_SI = C6_au * Eh * (a0 ** 6)  # J m^6\n\n    # Damping and structural parameters\n    b = 3.0e10  # m^-1  (3.0 Å^-1)\n    r_hc = 2.7e-10  # m (2.7 Å)\n    s6 = 1.0\n\n    # Tang-Toennies damping function of order 6\n    def F6(x):\n        # F6(x) = 1 - exp(-x) * sum_{k=0}^6 x^k/k!\n        # Evaluate the finite series explicitly\n        poly = 0.0\n        term = 1.0\n        # Compute sum_{k=0}^6 x^k/k! iteratively\n        for k in range(0, 7):\n            if k > 0:\n                term *= x / k\n            poly += term\n        return 1.0 - np.exp(-x) * poly\n\n    # Pair potential u(r) with damping\n    def u_disp(r):\n        # - s6 * C6 / r^6 * F6(b r)\n        return -s6 * C6_SI * F6(b * r) / (r ** 6)\n\n    # Integrand for per-particle energy: 2π ρ_N g(r) u(r) r^2 with g(r)=Theta(r-r_hc)\n    def integrand(r):\n        if r < r_hc:\n            return 0.0\n        return 2.0 * np.pi * rho_N * u_disp(r) * (r ** 2)\n\n    # Tail correction assuming g(r)=1 and F6(br)=1 beyond rc\n    def tail_correction(rc):\n        # Δu = - (2π/3) ρ_N s6 C6 / rc^3\n        return -(2.0 * np.pi / 3.0) * rho_N * s6 * C6_SI / (rc ** 3)\n\n    # Test cases: (rc in meters, include_tail boolean)\n    test_cases = [\n        (0.27e-9, False),\n        (0.27e-9, True),\n        (0.80e-9, False),\n        (0.80e-9, True),\n        (1.50e-9, False),\n        (1.50e-9, True),\n    ]\n\n    results = []\n    # Numerical integration settings\n    # Tight tolerances to ensure stable kJ/mol precision\n    epsabs = 1e-13\n    epsrel = 1e-9\n\n    for rc, include_tail in test_cases:\n        # Finite integral from r_hc to rc (if rc > r_hc)\n        if rc > r_hc:\n            finite_val, _ = quad(integrand, r_hc, rc, epsabs=epsabs, epsrel=epsrel, limit=400)\n        else:\n            finite_val = 0.0\n\n        ubar = finite_val\n        if include_tail and rc > 0.0:\n            ubar += tail_correction(rc)\n\n        # Convert per-particle energy to kJ/mol\n        H_disp_kJmol = ubar * NA / 1000.0\n        # Round to three decimals in output representation\n        results.append(H_disp_kJmol)\n\n    # Final print statement in the exact required format, rounded to three decimals\n    formatted = \"[\" + \",\".join(f\"{x:.3f}\" for x in results) + \"]\"\n    print(formatted)\n\nsolve()\n```", "id": "2881241"}, {"introduction": "任何计算模拟的可靠性都取决于其数值参数是否收敛。本练习提供了一个系统性的框架，用于研究溶剂化自由能计算中各种误差来源的收敛行为，包括体系大小、采样长度、相互作用截断、PME 网格间距和 PCM 角度离散化等 [@problem_id:2881230]。通过一个综合的合成模型，您将学会如何设计和评估收敛性研究，这是确保计算化学结果准确可靠的必备技能。", "problem": "您正在为凝聚相量子化学环境中的溶剂化自由能设计一个有原则的收敛性研究，其中同时使用了显式环境模型和连续介质模型。您的任务是实现一个确定性的合成模型，该模型编码了环境中普遍观察到的渐近标度行为以及数值参数，并为这些参数形式化并测试收敛接受标准。您必须以千焦/摩尔（$\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$）为单位表示所有自由能，所有角度均不相关。所有置信水平必须以小数形式表示（例如，$0.95$），不得使用百分号。\n\n从关于偏差和不确定性标度的基本陈述开始：\n- 对于一个包含 $N$ 个显式溶剂分子的体系，由于周期性边界条件下的数密度归一化和自相互作用约束，广延可观测量（extensive observable）的有限尺寸偏差通常按 $N^{-1}$ 标度。\n- 对于截断相互作用方案中的实空间截断半径 $r_c$，短程屏蔽相互作用的残余误差对于某个屏蔽长度 $\\xi$ 近似按 $\\exp(-r_c/\\xi)$ 衰减，而对于色散力尾部，它按代数形式 $r_c^{-3}$ 衰减。\n- 对于 Particle Mesh Ewald (PME) 静电求解器，在常用插值法下，实空间网格分辨率 $h$ 对平滑的可观测量会引入一个按 $h^2$ 标度的离散化误差。\n- 对于可极化连续介质模型 (Polarizable Continuum Model, PCM) 的表面离散化，角向求积等级 $L$（例如，球谐函数带限或 Lebedev 等级）会引入一个按 $L^{-p}$ (其中 $p>0$) 衰减的离散化误差。\n- 在混合和中心极限定理的条件下，对于长度为 $T$ 的时间采样，统计标准误按 $T^{-1/2}$ 标度，其带有一个取决于自相关时间的未知前置因子。\n\n在本问题中，假设溶剂化自由能估算器为一个合成但科学上合理的模型，\n$$\n\\hat G(N,T,r_c,h,L)\n=\nG^\\star\n+\n\\frac{\\alpha}{N}\n+\n\\beta\\,\\exp\\!\\left(-\\frac{r_c}{\\xi}\\right)\n+\n\\frac{\\gamma}{r_c^3}\n+\n\\delta\\,h^2\n+\n\\frac{\\varepsilon}{L^p},\n$$\n以及一个相关的采样标准误\n$$\n\\mathrm{SE}(T) = \\frac{\\sigma}{\\sqrt{T}}.\n$$\n将 $\\hat G$ 视为均值估算器（不添加随机噪声），并仅将 $\\mathrm{SE}(T)$ 用于基于不确定性的接受检查。在您的整个程序中使用以下固定常量：\n- $G^\\star = -25.0$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n- $\\alpha = 20.0$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n- $\\beta = 1.5$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n- $\\xi = 0.25$ $\\mathrm{nm}$,\n- $\\gamma = 0.05$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}^3$,\n- $\\delta = 3.0$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}^{-2}$,\n- $\\varepsilon = 6.0$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n- $p = 3.0$,\n- $\\sigma = 1.0$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\sqrt{\\mathrm{ns}}$.\n\n单位和定义域：\n- $N$ 是无量纲正整数，\n- $T$ 以纳秒 ($\\mathrm{ns}$) 为单位，是严格正实数，\n- $r_c$ 以纳米 ($\\mathrm{nm}$) 为单位，是严格正实数，\n- $h$ 以纳米 ($\\mathrm{nm}$) 为单位，是严格正实数，\n- $L$ 是无量纲正整数。\n\n为逐个参数优化的协议定义接受标准如下。给定每个参数的有序优化列表，使用每个列表的最后两个条目来测试当所有其他参数保持其最终（最后一个）值时，最终变化是否足够小：\n- 对于 $N$、$r_c$、$h$ 和 $L$：设 $\\Delta_X$ 为绝对差\n$$\n\\Delta_X = \\left| \\hat G(\\ldots,X_{\\mathrm{final}},\\ldots) - \\hat G(\\ldots,X_{\\mathrm{prev}},\\ldots) \\right|,\n$$\n其中省略号表示将所有其他参数保持在其最终水平，而 $X_{\\mathrm{final}}$ 和 $X_{\\mathrm{prev}}$ 表示参数 $X \\in \\{N,r_c,h,L\\}$ 优化列表中的最后一个和倒数第二个条目。如果 $\\Delta_X \\le \\tau_X$，则声明 $X$ 收敛。\n- 对于 $T$：由于模型偏差不依赖于 $T$，因此使用基于置信度的接受规则，置信水平为 $0.95$ 时，双侧正态分位数为 $z = 1.96$。如果以下两个条件都成立，则声明收敛：\n  (i) 最后两个 $T$ 值之间的均值估算器的绝对变化小于或等于 $\\tau_T$（在给定的均值模型下，此变化恒为 $0$），且\n  (ii) $z\\,\\mathrm{SE}(T_{\\mathrm{final}}) \\le \\tau_T$。\n- 此外，在最终优化点定义一个全局偏差接受检查：\n$$\nB_{\\mathrm{final}} = \\left| \\hat G(N_{\\mathrm{final}},T_{\\mathrm{final}},r_{c,\\mathrm{final}},h_{\\mathrm{final}},L_{\\mathrm{final}}) - G^\\star \\right|,\n$$\n并要求 $B_{\\mathrm{final}} \\le \\tau_{\\mathrm{global}}$。\n\n使用以下绝对容差（均以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 为单位）：\n- $\\tau_N = 0.05$,\n- $\\tau_T = 0.50$,\n- $\\tau_{r_c} = 0.05$,\n- $\\tau_h = 0.05$,\n- $\\tau_L = 0.05$,\n- $\\tau_{\\mathrm{global}} = 0.10$.\n\n实现一个程序，对于下面的每个测试用例，评估五个逐参数接受检查和全局偏差接受检查，并为每个用例返回一个布尔值，当且仅当所有六个检查都满足时，该值为真。\n\n测试套件（每个用例是一个优化列表的元组，顺序为 $(N\\_list, T\\_list, r_c\\_list, h\\_list, L\\_list)$）：\n- 用例 $1$（一个良好收敛的场景）：\n  - $N\\_\\mathrm{list} = [512, 1024, 2048]$,\n  - $T\\_\\mathrm{list} = [5.0, 10.0, 20.0]$ $\\mathrm{ns}$,\n  - $r_c\\_\\mathrm{list} = [0.9, 1.0, 1.2]$ $\\mathrm{nm}$,\n  - $h\\_\\mathrm{list} = [0.2, 0.15, 0.1]$ $\\mathrm{nm}$,\n  - $L\\_\\mathrm{list} = [8, 10, 12]$.\n- 用例 $2$（最后一步 PME 网格优化不足）：\n  - $N\\_\\mathrm{list} = [512, 1024, 2048]$,\n  - $T\\_\\mathrm{list} = [5.0, 10.0, 20.0]$ $\\mathrm{ns}$,\n  - $r_c\\_\\mathrm{list} = [0.9, 1.0, 1.2]$ $\\mathrm{nm}$,\n  - $h\\_\\mathrm{list} = [0.3, 0.25, 0.2]$ $\\mathrm{nm}$,\n  - $L\\_\\mathrm{list} = [8, 10, 12]$.\n- 用例 $3$（最终水平的采样长度太短）：\n  - $N\\_\\mathrm{list} = [1024, 2048]$,\n  - $T\\_\\mathrm{list} = [2.5, 5.0, 8.0]$ $\\mathrm{ns}$,\n  - $r_c\\_\\mathrm{list} = [1.0, 1.2]$ $\\mathrm{nm}$,\n  - $h\\_\\mathrm{list} = [0.15, 0.1]$ $\\mathrm{nm}$,\n  - $L\\_\\mathrm{list} = [10, 12]$.\n- 用例 $4$（即使在最终水平，截断半径也太小；全局偏差不可接受）：\n  - $N\\_\\mathrm{list} = [512, 1024]$,\n  - $T\\_\\mathrm{list} = [5.0, 10.0, 20.0]$ $\\mathrm{ns}$,\n  - $r_c\\_\\mathrm{list} = [0.7, 1.0]$ $\\mathrm{nm}$,\n  - $h\\_\\mathrm{list} = [0.15, 0.1]$ $\\mathrm{nm}$,\n  - $L\\_\\mathrm{list} = [10, 12]$.\n\n您的程序应生成单行输出，其中包含每个用例的结果，形式为逗号分隔的列表，并用方括号括起来，例如 $[b_1,b_2,b_3,b_4]$，其中每个 $b_i$ 是对应于上述用例 $i$ 的接受结果的 `true` 或 `false` 字面值。输出必须严格按照此格式打印，使用小写布尔值，并且不含任何附加文本。", "solution": "所提出的问题是计算科学中的一个形式化练习，具体来说，是在凝聚相量子化学模拟中对数值参数进行严格验证。该任务要求实施一个确定性协议来评估收敛性。这不是一个观点或定性判断的问题；这是一个将已定义的数学标准应用于给定模型的问题。因此，该问题是适定的、有科学依据的，并且允许唯一的解。我们将对其进行系统的解析。\n\n这项任务的基础是一个用于溶剂化自由能估算器 $\\hat G$ 的合成模型，该模型是五个关键模拟参数的函数：显式溶剂分子的数量 $N$；模拟时间 $T$；实空间相互作用截断半径 $r_c$；用于静电计算的实空间网格分辨率 $h$；以及连续介质模型表面离散化等级 $L$。该模型由下式给出：\n$$\n\\hat G(N,T,r_c,h,L)\n=\nG^\\star\n+\n\\frac{\\alpha}{N}\n+\n\\beta\\,\\exp\\!\\left(-\\frac{r_c}{\\xi}\\right)\n+\n\\frac{\\gamma}{r_c^3}\n+\n\\delta\\,h^2\n+\n\\frac{\\varepsilon}{L^p}.\n$$\n此表达式概括了标准的渐近误差行为。每一项都代表一个特定的系统偏差来源：\n- $\\alpha/N$：有限尺寸误差，与粒子数成反比。\n- $\\beta\\,\\exp(-r_c/\\xi)$：截断屏蔽短程相互作用所产生的误差，呈指数衰减。\n- $\\gamma/r_c^3$：截断长程色散相互作用所产生的误差，呈代数衰减。\n- $\\delta\\,h^2$：来自二阶精度实空间网格方法（如 Particle Mesh Ewald (PME)）的离散化误差。\n- $\\varepsilon/L^p$：来自连续介质模型表面网格的离散化误差，呈多项式衰减。\n\n精确的自由能是 $G^\\star$。其他项的总和构成了估算器的总系统偏差。在此模型中，参数 $T$ 不影响均值估算器，但它决定了由标准误建模的统计不确定性：\n$$\n\\mathrm{SE}(T) = \\frac{\\sigma}{\\sqrt{T}},\n$$\n这源于中心极限定理。常数按规定固定：$G^\\star = -25.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，$\\alpha = 20.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，$\\beta = 1.5\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，$\\xi = 0.25\\,\\mathrm{nm}$，$\\gamma = 0.05\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}^3$，$ \\delta = 3.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}^{-2}$，$\\varepsilon = 6.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，$p = 3.0$，以及 $\\sigma = 1.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\sqrt{\\mathrm{ns}}$。\n\n我们的任务是实现指定的收敛协议。这涉及对每个参数的一系列检查以及一个最终的全局检查。对于给定的参数 $X \\in \\{N, r_c, h, L\\}$，我们提供了一个优化序列。设 $X_{\\mathrm{final}}$ 为序列中的最后一个值，$X_{\\mathrm{prev}}$ 为倒数第二个值。$X$ 的收敛准则是\n$$\n\\Delta_X = \\left| \\hat G(\\ldots,X_{\\mathrm{final}},\\ldots) - \\hat G(\\ldots,X_{\\mathrm{prev}},\\ldots) \\right| \\le \\tau_X,\n$$\n其中所有其他参数保持在其各自的最终、最精细的值。这测试了在最后一次优化步骤中，可观测量的变化是否在可接受的小范围内。给定的容差为 $\\tau_N = 0.05\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，$\\tau_{r_c} = 0.05\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，$\\tau_h = 0.05\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，以及 $\\tau_L = 0.05\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n对于采样时间 $T$，准则有两方面。首先，均值估算器的变化必须低于容差 $\\tau_T$，在我们的模型中 $|\\Delta \\hat{G}| = 0$，因此这个条件是自然满足的。其次，必须控制由置信区间半宽度表示的统计不确定性：\n$$\nz\\,\\mathrm{SE}(T_{\\mathrm{final}}) \\le \\tau_T,\n$$\n其中 $z = 1.96$ 对应于 $95\\%$ 的置信水平，且 $\\tau_T = 0.50\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n最后，一个全局偏差检查确保在最精细的参数集下，总系统误差低于全局容差 $\\tau_{\\mathrm{global}} = 0.10\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。这表示为：\n$$\nB_{\\mathrm{final}} = \\left| \\hat G(N_{\\mathrm{final}}, T_{\\mathrm{final}}, r_{c,\\mathrm{final}}, h_{\\mathrm{final}}, L_{\\mathrm{final}}) - G^\\star \\right| \\le \\tau_{\\mathrm{global}}.\n$$\n当且仅当所有五个逐参数检查和单个全局偏差检查都满足时，一个测试用例才被认为已通过。\n\n算法实现将按以下步骤进行：\n1. 根据提供的公式和常数，定义估算器 $\\hat{G}(N, r_c, h, L)$ 和标准误 $\\mathrm{SE}(T)$ 的函数。\n2. 对于每个测试用例，提取所有参数的优化列表。\n3. 从每个参数的列表中识别最终 ($X_{\\mathrm{final}}$) 和倒数第二个 ($X_{\\mathrm{prev}}$) 值。\n4. 系统地评估六个必需的布尔条件：\n    - $\\Delta_N \\le \\tau_N$\n    - $\\Delta_{r_c} \\le \\tau_{r_c}$\n    - $\\Delta_h \\le \\tau_h$\n    - $\\Delta_L \\le \\tau_L$\n    - $z\\,\\mathrm{SE}(T_{\\mathrm{final}}) \\le \\tau_T$\n    - $B_{\\mathrm{final}} \\le \\tau_{\\mathrm{global}}$\n5. 测试用例的最终判定是这六个条件的逻辑与。对所有提供的测试用例重复此过程。然后将结果编译成所需的输出格式。\n该程序为每个测试场景的收敛状态提供了一个明确的、确定性的评估。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements a deterministic synthetic model to test convergence criteria\n    for a solvation free energy calculation in a quantum chemistry context.\n    \"\"\"\n\n    # --- Define constants and tolerances based on the problem statement ---\n    CONSTANTS = {\n        \"G_star\": -25.0,  # kJ/mol\n        \"alpha\": 20.0,   # kJ/mol\n        \"beta\": 1.5,     # kJ/mol\n        \"xi\": 0.25,      # nm\n        \"gamma\": 0.05,   # kJ/mol * nm^3\n        \"delta\": 3.0,    # kJ/mol * nm^-2\n        \"epsilon\": 6.0,  # kJ/mol\n        \"p\": 3.0,\n        \"sigma\": 1.0,    # kJ/mol * ns^0.5\n    }\n\n    TOLERANCES = {\n        \"tau_N\": 0.05,   # kJ/mol\n        \"tau_T\": 0.50,   # kJ/mol\n        \"tau_rc\": 0.05,  # kJ/mol\n        \"tau_h\": 0.05,   # kJ/mol\n        \"tau_L\": 0.05,   # kJ/mol\n        \"tau_global\": 0.10, # kJ/mol\n    }\n\n    Z_CONFIDENCE = 1.96  # For 95% confidence level\n\n    # --- Define the model functions ---\n\n    def G_hat(N, rc, h, L, consts):\n        \"\"\"Calculates the mean solvation free energy estimator.\"\"\"\n        term_N = consts[\"alpha\"] / N\n        term_rc_exp = consts[\"beta\"] * np.exp(-rc / consts[\"xi\"])\n        term_rc_alg = consts[\"gamma\"] / (rc**3)\n        term_h = consts[\"delta\"] * (h**2)\n        term_L = consts[\"epsilon\"] / (L**consts[\"p\"])\n        \n        bias = term_N + term_rc_exp + term_rc_alg + term_h + term_L\n        return consts[\"G_star\"] + bias\n\n    def SE(T, consts):\n        \"\"\"Calculates the standard error of the mean.\"\"\"\n        return consts[\"sigma\"] / np.sqrt(T)\n\n    def evaluate_case(params, consts, tols):\n        \"\"\"\n        Evaluates the six convergence checks for a single test case.\n        Returns True if all checks pass, otherwise False.\n        \"\"\"\n        N_list, T_list, rc_list, h_list, L_list = params\n\n        # Extract final and penultimate parameter values\n        N_final, N_prev = N_list[-1], N_list[-2]\n        T_final = T_list[-1]\n        rc_final, rc_prev = rc_list[-1], rc_list[-2]\n        h_final, h_prev = h_list[-1], h_list[-2]\n        L_final, L_prev = L_list[-1], L_list[-2]\n\n        checks = []\n\n        # -- Perform the 5 per-parameter checks --\n\n        # 1. N convergence\n        G_N_final = G_hat(N_final, rc_final, h_final, L_final, consts)\n        G_N_prev = G_hat(N_prev, rc_final, h_final, L_final, consts)\n        delta_N = abs(G_N_final - G_N_prev)\n        checks.append(delta_N <= tols[\"tau_N\"])\n\n        # 2. T convergence\n        # The change in the mean estimator is 0 as G_hat does not depend on T.\n        # This part of the check is trivially true: 0 <= tau_T.\n        # We only need to check the statistical uncertainty.\n        se_final = SE(T_final, consts)\n        checks.append(Z_CONFIDENCE * se_final <= tols[\"tau_T\"])\n\n        # 3. rc convergence\n        # G_rc_final is the same as G_N_final\n        G_rc_prev = G_hat(N_final, rc_prev, h_final, L_final, consts)\n        delta_rc = abs(G_N_final - G_rc_prev)\n        checks.append(delta_rc <= tols[\"tau_rc\"])\n\n        # 4. h convergence\n        G_h_prev = G_hat(N_final, rc_final, h_prev, L_final, consts)\n        delta_h = abs(G_N_final - G_h_prev)\n        checks.append(delta_h <= tols[\"tau_h\"])\n\n        # 5. L convergence\n        G_L_prev = G_hat(N_final, rc_final, h_final, L_prev, consts)\n        delta_L = abs(G_N_final - G_L_prev)\n        checks.append(delta_L <= tols[\"tau_L\"])\n\n        # -- Perform the global bias check --\n        \n        # 6. Global bias\n        G_final_point = G_N_final # Calculated already\n        global_bias = abs(G_final_point - consts[\"G_star\"])\n        checks.append(global_bias <= tols[\"tau_global\"])\n        \n        return all(checks)\n\n\n    # --- Define the test cases ---\n    test_cases = [\n        # Case 1 (well-converged scenario)\n        (\n            [512, 1024, 2048],          # N_list\n            [5.0, 10.0, 20.0],          # T_list (ns)\n            [0.9, 1.0, 1.2],            # rc_list (nm)\n            [0.2, 0.15, 0.1],           # h_list (nm)\n            [8, 10, 12],                # L_list\n        ),\n        # Case 2 (insufficient PME grid refinement)\n        (\n            [512, 1024, 2048],\n            [5.0, 10.0, 20.0],\n            [0.9, 1.0, 1.2],\n            [0.3, 0.25, 0.2],\n            [8, 10, 12],\n        ),\n        # Case 3 (sampling length too short)\n        (\n            [1024, 2048],\n            [2.5, 5.0, 8.0],\n            [1.0, 1.2],\n            [0.15, 0.1],\n            [10, 12],\n        ),\n        # Case 4 (cutoff too small, unacceptable global bias)\n        (\n            [512, 1024],\n            [5.0, 10.0, 20.0],\n            [0.7, 1.0],\n            [0.15, 0.1],\n            [10, 12],\n        ),\n    ]\n\n    results = []\n    for case in test_cases:\n        # Evaluate the case and append the boolean result\n        result = evaluate_case(case, CONSTANTS, TOLERANCES)\n        results.append(str(result).lower())\n\n    # Format and print the final output string\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2881230"}]}