{"hands_on_practices": [{"introduction": "计算周期性体系的总能量是电子结构理论的核心任务之一，而获得准确结果的前提是布里渊区积分必须收敛。本练习将指导您实现一个重要的实践技能：通过理查森外推法（Richardson extrapolation）来系统地评估和加速$k$点采样的收敛性。通过为绝缘体和金属这两种典型的电子结构模型设计并实施一个收敛性测试协议 [@problem_id:2901043]，您将掌握一种既能估计离散化误差又能提高计算效率的强大工具。", "problem": "你的任务是设计并实现一个数值方案，用于在指定的容差 $\\epsilon$ 内，使用两个系统嵌套的$\\mathbf{k}$点网格和一个外推程序，评估每个晶胞的布里渊区总能量的$\\mathbf{k}$点收敛性。该方案必须基于光滑周期被积函数的布里渊区积分的定义，并且必须可为二维正方晶格布里渊区实现。\n\n基本原理和目标。在周期性固体中，每个晶胞的总能量（不计一个无关紧要的常数）可以写成一个布里渊区平均值\n$$\nE = \\frac{1}{\\Omega_{\\mathrm{BZ}}} \\int_{\\mathrm{BZ}} F(\\mathbf{k}) \\, d^2 k,\n$$\n其中 $\\Omega_{\\mathrm{BZ}}$ 是布里渊区的体积，$F(\\mathbf{k})$ 是一个依赖于电子结构的$\\mathbf{k}$周期性被积函数，通常是按占据数加权的能带能量之和。对于一个原胞倒易点阵矢量大小为 $2\\pi$ 的二维正方晶格，你可以将布里渊区视为正方形区域 $[-\\pi,\\pi]^2$，其归一化平均可以作为 $F(\\mathbf{k})$ 在均匀网格上的未加权平均值来计算。\n\n离散化基础。一个每个方向有 $N$ 个点的、以$\\Gamma$为中心的均匀 Monkhorst–Pack 网格由以下点定义\n$$\nk_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}, \\quad i \\in \\{1,2,\\dots,N\\}, \\quad \\alpha \\in \\{x,y\\},\n$$\n因此 $N\\times N$ 网格是一维节点的笛卡尔积。因为区域和被积函数都是周期性的，所以使用此网格对布里渊区平均值的数值近似是所有 $N^2$ 个$\\mathbf{k}$点的算术平均。\n\n收敛性评估基础。假设一个 $p$ 阶网格平均的渐近误差模型，\n$$\nE_N = E_\\infty + C\\,N^{-p} + o(N^{-p}),\n$$\n其中 $E_N$ 表示在 $N\\times N$ 网格上获得的平均值，$E_\\infty$ 是无限网格极限，$C$ 是一个与 $N$ 无关的常数，且 $p>0$ 取决于 $F(\\mathbf{k})$ 的光滑度以及系统是绝缘的还是金属的（可能带有展宽）。在具有弱展宽的金属情况下，费米面周围的陡峭梯度会有效地降低 $p$。\n\n你的任务。根据以上定义，给定一个指定的收敛阶数 $p$，基于 $E_N$ 和 $E_{2N}$ 推导一个 $E_\\infty$ 的双网格模型外推估计量，并推导一个仅基于 $E_N$、$E_{2N}$ 和 $p$ 的可计算误差指标。然后实现以下方案：\n\n- 给定一个粗网格尺寸 $N$（沿每个方向），构建尺寸为 $2N$（沿每个方向）的嵌套细网格，将 $E_N$ 和 $E_{2N}$ 作为在各自网格上 $F(\\mathbf{k})$ 的算术平均值进行评估，并使用你的外推估计量获得 $E_\\infty^{\\mathrm{est}}$ 和误差估计 $\\Delta$。\n- 如果 $\\Delta \\le \\epsilon$ 则宣布收敛，否则宣布不收敛。\n\n物理和数值单位。角度以弧度为单位。所有能量必须以电子伏特 (eV) 报告。打印浮点数能量时，小数点后精确到 $10$ 位。\n\n待使用的被积函数。为了可测试性，实现以下模型被积函数 $F(\\mathbf{k})$，每个函数代表一种不同的物理情况：\n\n- 类绝缘体解析代理函数：\n$$\nF_{\\mathrm{ins}}(k_x,k_y) = E_0 + A \\exp\\!\\big(\\alpha \\cos k_x + \\beta \\cos k_y\\big),\n$$\n其中参数 $E_0$ 的单位为 eV，而 $A$、$\\alpha$ 和 $\\beta$ 为无量纲参数。\n\n- 具有费米-狄拉克占据的类金属单能带：\n$$\n\\varepsilon(k_x,k_y) = -2t\\left(\\cos k_x + \\cos k_y\\right), \\quad\nn(\\varepsilon;\\mu,\\sigma) = \\frac{1}{1 + \\exp\\!\\left(\\frac{\\varepsilon - \\mu}{\\sigma}\\right)}, \\quad\nF_{\\mathrm{met}}(k_x,k_y) = \\varepsilon(k_x,k_y)\\, n(\\varepsilon(k_x,k_y);\\mu,\\sigma),\n$$\n其中 $t$ 的单位为 eV，化学势 $\\mu$ 的单位为 eV，展宽参数 $\\sigma$ 的单位为 eV。\n\n对于每种情况，假设一个用户指定的收敛阶数 $p$，以反映预期的渐近行为：对解析的类绝缘体被积函数使用较大的 $p$，对具有小而有限展宽的类金属情况使用较小的 $p$。\n\n测试套件。你的程序必须在没有任何用户输入的情况下，对以下四种情况运行该方案：\n\n- 情况 $\\mathbf{1}$ (类绝缘体，光滑)：$F = F_{\\mathrm{ins}}$，$E_0 = -5.0$ eV，$A = 0.2$ eV，$\\alpha = 0.3$，$\\beta = 0.4$，粗网格尺寸 $N = 8$，假定阶数 $p = 4$，容差 $\\epsilon = 1.0\\times 10^{-8}$ eV。\n- 情况 $\\mathbf{2}$ (类金属，中等展宽)：$F = F_{\\mathrm{met}}$，$t = 1.0$ eV，$\\mu = 0.0$ eV，$\\sigma = 0.05$ eV，粗网格尺寸 $N = 24$，假定阶数 $p = 2$，容差 $\\epsilon = 1.0\\times 10^{-6}$ eV。\n- 情况 $\\mathbf{3}$ (类金属，弱展宽，严格容差)：$F = F_{\\mathrm{met}}$，$t = 1.0$ eV，$\\mu = 0.0$ eV，$\\sigma = 0.005$ eV，粗网格尺寸 $N = 16$，假定阶数 $p = 2$，容差 $\\epsilon = 1.0\\times 10^{-10}$ eV。\n- 情况 $\\mathbf{4}$ (类绝缘体，非常光滑，低 $N$)：$F = F_{\\mathrm{ins}}$，$E_0 = -2.0$ eV，$A = 0.5$ eV，$\\alpha = 0.9$，$\\beta = 0.7$，粗网格尺寸 $N = 6$，假定阶数 $p = 4$，容差 $\\epsilon = 1.0\\times 10^{-9}$ eV。\n\n要求的最终输出格式。你的程序应产生单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，每个情况贡献一个包含三个元素的列表：$[c,E_\\infty^{\\mathrm{est}},\\Delta]$，其中 $c$ 是一个整数，如果收敛则为 $1$，否则为 $0$；$E_\\infty^{\\mathrm{est}}$ 和 $\\Delta$ 以 eV 为单位打印，小数点后精确到 $10$ 位。例如：\n$[[1,-4.8123456789,0.0000000042],[1,\\dots,\\dots],[0,\\dots,\\dots],[1,\\dots,\\dots]]$。", "solution": "问题陈述需经过验证。\n\n**第一步：提取的已知条件**\n- **目标**：设计一个方案来评估每个晶胞的布里渊区 (BZ) 总能量的$\\mathbf{k}$点收敛性。\n- **能量定义**：$E = \\frac{1}{\\Omega_{\\mathrm{BZ}}} \\int_{\\mathrm{BZ}} F(\\mathbf{k}) \\, d^2 k$。\n- **布里渊区**：一个二维正方形区域 $\\left[-\\pi,\\pi\\right]^2$。\n- **离散化**：大小为 $N \\times N$ 的以$\\Gamma$为中心的均匀 Monkhorst–Pack 网格。\n- **网格点**：$k_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}$，对于 $i \\in \\{1,2,\\dots,N\\}$, $\\alpha \\in \\{x,y\\}$。\n- **数值平均**：$E_N$ 是 $F(\\mathbf{k})$ 在 $N \\times N$ 网格上的算术平均值。\n- **渐近误差模型**：$E_N = E_\\infty + C\\,N^{-p} + o(N^{-p})$。\n- **任务**：推导一个双网格 ($N$, $2N$) 外推估计量 $E_\\infty^{\\mathrm{est}}$ 和一个误差指标 $\\Delta$。实现一个检查 $\\Delta \\le \\epsilon$ 的方案。\n- **被积函数**：\n    1. $F_{\\mathrm{ins}}(k_x,k_y) = E_0 + A \\exp\\!\\big(\\alpha \\cos k_x + \\beta \\cos k_y\\big)$。\n    2. $F_{\\mathrm{met}}(k_x,k_y) = \\varepsilon(k_x,k_y)\\, n(\\varepsilon(k_x,k_y);\\mu,\\sigma)$，其中 $\\varepsilon(k_x,k_y) = -2t\\left(\\cos k_x + \\cos k_y\\right)$ 和 $n(\\varepsilon;\\mu,\\sigma) = \\frac{1}{1 + \\exp\\!\\left(\\frac{\\varepsilon - \\mu}{\\sigma}\\right)}$。\n- **测试用例**：提供了四个具体的用例，包含所有必要的参数 ($E_0, A, \\alpha, \\beta, t, \\mu, \\sigma, N, p, \\epsilon$)。\n- **输出**：一行文本，包含所有用例的结果，格式为 $[[c_1,E_{\\infty,1}^{\\mathrm{est}},\\Delta_1],[c_2,E_{\\infty,2}^{\\mathrm{est}},\\Delta_2],\\dots]$，能量格式化为小数点后10位。\n\n**第二步：验证提取的已知条件**\n该问题具有科学依据、提法明确且客观。它描述了计算凝聚态物理中一种标准且重要的数值技术——即使用 Richardson 外推法来加速收敛并估计布里渊区积分中的误差。数学模型和定义是精确且无矛盾的。\n\n注意到一个微小的术语不精确之处。问题将大小为 $2N \\times 2N$ 的网格称为相对于 $N \\times N$ 网格是“嵌套的”。对于指定的以$\\Gamma$为中心的网格公式 $k_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}$，粗网格的点不是细网格点的子集。例如，对于 $N=2$，点是 $\\{-\\pi/2, \\pi/2\\}$，而对于 $N=4$，点是 $\\{-3\\pi/4, -\\pi/4, \\pi/4, 3\\pi/4\\}$。然而，这种非嵌套性并不会使外推程序失效。Richardson 外推法的有效性依赖于离散化的系统性细化，而非严格的网格嵌套。问题提供了明确的网格生成公式，必须遵循。因此，为了正确性，我们指出了这个术语问题，但这并不使问题无效。\n\n**第三步：结论与行动**\n问题被判定为**有效**。将提供一个完整的、有理有据的解决方案。\n\n**外推公式和误差估计量的推导**\n该方案的基础是数值近似 $E_N$ 对真实能量 $E_\\infty$ 的渐近误差模型：\n$$E_N = E_\\infty + C N^{-p} + o(N^{-p})$$\n其中 $p$ 是收敛阶数。我们获得了来自两个网格的结果，一个粗网格大小为 $N \\times N$，一个细网格大小为 $2N \\times 2N$。忽略高阶项 $o(N^{-p})$，我们可以为两个未知数 $E_\\infty$ 和 $C$ 写出一个二元方程组：\n$$E_N \\approx E_\\infty + C N^{-p} \\quad (1)$$\n$$E_{2N} \\approx E_\\infty + C (2N)^{-p} = E_\\infty + C N^{-p} 2^{-p} \\quad (2)$$\n为了找到 $E_\\infty$ 的估计，我们必须消去常数 $C$。从方程 (1) 中，我们有 $C N^{-p} \\approx E_N - E_\\infty$。将此代入方程 (2) 得到：\n$$E_{2N} \\approx E_\\infty + (E_N - E_\\infty) 2^{-p}$$\n$$E_{2N} \\approx E_\\infty (1 - 2^{-p}) + E_N 2^{-p}$$\n解出 $E_\\infty$：\n$$E_\\infty (1 - 2^{-p}) \\approx E_{2N} - E_N 2^{-p}$$\n$$E_\\infty \\approx \\frac{E_{2N} - E_N 2^{-p}}{1 - 2^{-p}}$$\n将分子和分母同乘以 $2^p$ 得到一个更方便的形式。因此，我们对收敛能量的估计量 $E_\\infty^{\\mathrm{est}}$ 是：\n$$E_\\infty^{\\mathrm{est}} = \\frac{2^p E_{2N} - E_N}{2^p - 1}$$\n这是标准的 Richardson 外推公式。\n\n接下来，我们推导误差的估计量。更精确结果 $E_{2N}$ 的真实误差是 $|E_{2N} - E_\\infty|$。我们可以通过取我们对真实值的最佳估计 $E_\\infty^{\\mathrm{est}}$ 与细网格结果 $E_{2N}$ 之间的差的绝对值来估计这个误差。这作为我们的误差指标 $\\Delta$：\n$$\\Delta = |E_\\infty^{\\mathrm{est}} - E_{2N}|$$\n代入 $E_\\infty^{\\mathrm{est}}$ 的表达式：\n$$\\Delta = \\left| \\frac{2^p E_{2N} - E_N}{2^p - 1} - E_{2N} \\right|$$\n为了简化，我们将第二项通分：\n$$\\Delta = \\left| \\frac{2^p E_{2N} - E_N - (2^p - 1)E_{2N}}{2^p - 1} \\right| = \\left| \\frac{2^p E_{2N} - E_N - 2^p E_{2N} + E_{2N}}{2^p - 1} \\right|$$\n这简化为：\n$$\\Delta = \\left| \\frac{E_{2N} - E_N}{2^p - 1} \\right|$$\n绝对值确保误差为非负。这是我们的可计算误差指标，它仅取决于计算出的能量 $E_N$ 和 $E_{2N}$ 以及假定的收敛阶数 $p$。\n\n**数值方案**\n推导出的公式为所需的数值方案提供了基础。对于问题陈述中指定的每个测试用例，执行以下步骤：\n1.  确定该用例的参数：被积函数 $F(\\mathbf{k})$ 及其特定参数、粗网格尺寸 $N$、假定的收敛阶数 $p$ 以及收敛容差 $\\epsilon$。\n2.  使用公式 $k_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}$ 为粗糙的 $N \\times N$ 网格生成 $N^2$ 个k点集。\n3.  通过计算粗网格上所有点的 $F(\\mathbf{k})$ 的算术平均值来计算粗网格能量平均值 $E_N$。\n4.  为精细的 $2N \\times 2N$ 网格生成 $(2N)^2$ 个k点集。\n5.  通过计算细网格上的算术平均值来计算细网格能量平均值 $E_{2N}$。\n6.  使用推导的公式计算外推能量 $E_\\infty^{\\mathrm{est}}$ 和误差估计 $\\Delta$。\n7.  将误差估计与容差进行比较：如果 $\\Delta \\le \\epsilon$，则声明计算收敛（状态 $c=1$）；否则，不收敛（状态 $c=0$）。\n8.  将结果——收敛状态 $c$、外推能量 $E_\\infty^{\\mathrm{est}}$ 和误差估计 $\\Delta$——格式化并存储以备最终输出。\n\n将针对四个指定的测试用例实施该方案，涵盖具有不同参数的类绝缘体和类金属被积函数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the k-point convergence protocol for all test cases.\n    \"\"\"\n\n    def F_ins(kx, ky, E0, A, alpha, beta):\n        \"\"\"\n        Calculates the insulator-like integrand F_ins(k).\n        Args:\n            kx (np.ndarray): Grid of kx points.\n            ky (np.ndarray): Grid of ky points.\n            E0 (float): Energy offset in eV.\n            A (float): Amplitude in eV.\n            alpha (float): Dimensionless parameter.\n            beta (float): Dimensionless parameter.\n        Returns:\n            np.ndarray: Values of the integrand on the grid.\n        \"\"\"\n        return E0 + A * np.exp(alpha * np.cos(kx) + beta * np.cos(ky))\n\n    def F_met(kx, ky, t, mu, sigma):\n        \"\"\"\n        Calculates the metal-like integrand F_met(k).\n        Args:\n            kx (np.ndarray): Grid of kx points.\n            ky (np.ndarray): Grid of ky points.\n            t (float): Hopping parameter in eV.\n            mu (float): Chemical potential in eV.\n            sigma (float): Smearing parameter in eV.\n        Returns:\n            np.ndarray: Values of the integrand on the grid.\n        \"\"\"\n        epsilon = -2.0 * t * (np.cos(kx) + np.cos(ky))\n        # Add a small constant to sigma to prevent division by zero, although not\n        # strictly necessary with the given test cases.\n        if sigma == 0:\n            sigma = 1e-12 \n        n_fermi_dirac = 1.0 / (1.0 + np.exp((epsilon - mu) / sigma))\n        return epsilon * n_fermi_dirac\n    \n    def compute_energy_average(N_grid, F_func, f_params):\n        \"\"\"\n        Computes the Brillouin zone average energy on an N x N grid.\n        Args:\n            N_grid (int): Number of k-points along one direction.\n            F_func (function): The integrand function (F_ins or F_met).\n            f_params (dict): Dictionary of parameters for the integrand function.\n        Returns:\n            float: The calculated average energy.\n        \"\"\"\n        if N_grid == 0:\n            return 0.0\n        \n        # Generate 1D k-points based on the Monkhorst-Pack scheme\n        k_1d = (2.0 * np.arange(1, N_grid + 1) - N_grid - 1.0) * np.pi / N_grid\n        \n        # Create a 2D meshgrid of k-points\n        kx, ky = np.meshgrid(k_1d, k_1d)\n        \n        # Calculate integrand values over the grid\n        energy_values = F_func(kx, ky, **f_params)\n        \n        # The BZ average is the arithmetic mean for a uniform grid\n        return np.mean(energy_values)\n\n    def run_protocol(case):\n        \"\"\"\n        Executes the two-grid convergence protocol for a single test case.\n        Args:\n            case (dict): Dictionary containing all parameters for the case.\n        Returns:\n            list: A list [c, E_inf_est, Delta] with the results.\n        \"\"\"\n        N, p, epsilon = case['N'], case['p'], case['epsilon']\n        integrand_type = case['type']\n        \n        if integrand_type == 'ins':\n            F_func = F_ins\n            f_params = {k: case[k] for k in ['E0', 'A', 'alpha', 'beta']}\n        elif integrand_type == 'met':\n            F_func = F_met\n            f_params = {k: case[k] for k in ['t', 'mu', 'sigma']}\n        else:\n            # This case should not be reached with the given problem.\n            raise ValueError(f\"Unknown integrand type: {integrand_type}\")\n\n        # Calculate energy on the coarse grid (N x N)\n        E_N = compute_energy_average(N, F_func, f_params)\n        \n        # Calculate energy on the fine grid (2N x 2N)\n        E_2N = compute_energy_average(2 * N, F_func, f_params)\n\n        # Apply Richardson extrapolation to estimate E_infinity\n        # E_inf_est = (2^p * E_2N - E_N) / (2^p - 1)\n        power_of_2 = 2.0**p\n        E_inf_est = (power_of_2 * E_2N - E_N) / (power_of_2 - 1.0)\n        \n        # Estimate the error of the fine-grid result\n        # Delta = |E_2N - E_N| / (2^p - 1)\n        Delta = np.abs(E_2N - E_N) / (power_of_2 - 1.0)\n        \n        # Determine convergence status\n        converged = 1 if Delta <= epsilon else 0\n        \n        return [converged, E_inf_est, Delta]\n\n    # Definition of the test cases from the problem statement.\n    test_cases = [\n        {'type': 'ins', 'E0': -5.0, 'A': 0.2, 'alpha': 0.3, 'beta': 0.4, 'N': 8, 'p': 4, 'epsilon': 1.0e-8},\n        {'type': 'met', 't': 1.0, 'mu': 0.0, 'sigma': 0.05, 'N': 24, 'p': 2, 'epsilon': 1.0e-6},\n        {'type': 'met', 't': 1.0, 'mu': 0.0, 'sigma': 0.005, 'N': 16, 'p': 2, 'epsilon': 1.0e-10},\n        {'type': 'ins', 'E0': -2.0, 'A': 0.5, 'alpha': 0.9, 'beta': 0.7, 'N': 6, 'p': 4, 'epsilon': 1.0e-9}\n    ]\n\n    results = []\n    for case in test_cases:\n        result_triplet = run_protocol(case)\n        results.append(result_triplet)\n\n    # Format the final output string exactly as required.\n    formatted_results = []\n    for c, e_inf, delta in results:\n        e_inf_str = f\"{e_inf:.10f}\"\n        delta_str = f\"{delta:.10f}\"\n        formatted_results.append(f\"[{c},{e_inf_str},{delta_str}]\")\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2901043"}, {"introduction": "在总能量收敛的基础上，我们进一步探讨原子间力（forces）的计算，这对于结构优化、声子谱计算和分子动力学至关重要。作为能量对原子位移的一阶导数，力通常对布里渊区采样的精度要求更高，尤其是在金属体系中。本练习 [@problem_id:2900974] 将引导您在一个简化的金属模型中，研究$k$点网格密度和电子展宽（smearing）参数如何共同影响力的收敛性，从而帮助您理解在处理金属性体系时获得可靠力计算的关键因素。", "problem": "您需要设计并实现一个针对简单金属性带状模型中力的数值收敛性测试，明确地探究其对 $\\mathbf{k}$ 点密度和电子展宽宽度的敏感性。您的实现必须是一个无需任何外部输入即可生成指定输出格式的完整可运行程序。\n\n基本原理和模型设置：从 Hellmann–Feynman 定理出发，该定理指出，原子核在微小标量坐标 $u$ 的位移下所受的力 $F$ 由 $F = -\\partial E_{\\text{tot}}/\\partial u$ 给出，其中 $E_{\\text{tot}}$ 是总电子能量。对于一个处于金属性区域、具有单条紧束缚能带的周期性一维晶体系统，每个晶胞的总能量可以写作布里渊区内对能带能量按电子占据数加权的积分，而力则是该能量对 $u$ 的导数。考虑一个一维布里渊区，$k \\in [-\\pi,\\pi)$，并为无量纲化设置晶格常数 $a=1$。设在微小位移 $u$ 下的能带色散为\n$\\epsilon(k; u) = -2t \\cos k + g\\,u \\cos k$,\n其中常数 $t > 0$ 和 $g > 0$，化学势 $\\mu = 0$（半填充金属）。假设电子占据数由有限电子温度下的费米-狄拉克函数给出（在此用作展宽代理）：$f(\\epsilon;\\sigma) = \\left(1 + \\exp\\left(\\frac{\\epsilon - \\mu}{\\sigma}\\right)\\right)^{-1}$，其中 $\\sigma > 0$ 是一个您将要改变的展宽宽度。\n\n任务：仅使用上述基本定义，推导在 $u=0$ 时力 $F$ 的一个数值可计算表达式。该表达式应为一个布里渊区平均值，并可用一个包含 $N_k$ 个点的均匀 $\\mathbf{k}$ 点网格来近似。请实现以下收敛协议：\n\n1) 定义一个函数，对于给定的 $(N_k, \\sigma)$，通过在 $[-\\pi,\\pi)$ 上一个包含 $N_k$ 个点的均匀中点网格上对布里渊区积分进行离散化，返回在 $u=0$ 处计算的近似力 $F(N_k,\\sigma)$。\n\n2) 通过使用一个具有 $N_{\\mathrm{ref}}$ 个点的非常密集的网格和一个非常小的展宽宽度 $\\sigma_{\\mathrm{ref}}$ 来定义一个高精度的参考力 $F_{\\mathrm{ref}}$，两者的选择应使得对于给定模型，离散化和展宽误差可以忽略不计。\n\n3) 对于所提供测试套件中的每个测试用例 $(N_k, \\sigma, \\tau)$，计算一个布尔值，以指示绝对误差 $\\lvert F(N_k,\\sigma) - F_{\\mathrm{ref}} \\rvert$ 是否小于或等于容差 $\\tau$。\n\n模型常数和数值选择：使用 $t = 1$（无量纲）、$g = 0.4$（无量纲）、$\\mu = 0$（无量纲）、$N_{\\mathrm{ref}} = 200000$（无量纲计数）以及 $\\sigma_{\\mathrm{ref}} = 10^{-4}$（无量纲）。您的 $\\mathbf{k}$ 点网格必须遵循 $[-\\pi,\\pi)$ 上的均匀中点法则：如果 $j \\in \\{0,1,\\dots,N_k-1\\}$，则中点为 $k_j = -\\pi + (j + \\tfrac{1}{2}) \\,\\Delta k$，其中 $\\Delta k = \\frac{2\\pi}{N_k}$。\n\n测试套件：您的程序必须评估以下用例，并汇总通过/失败的结果。\n\n- 用例 1：$N_k = 400$, $\\sigma = 5 \\times 10^{-2}$, $\\tau = 10^{-3}$。\n- 用例 2：$N_k = 8$, $\\sigma = 10^{-2}$, $\\tau = 10^{-3}$。\n- 用例 3：$N_k = 400$, $\\sigma = 5 \\times 10^{-1}$, $\\tau = 10^{-3}$。\n- 用例 4：$N_k = 100$, $\\sigma = 2 \\times 10^{-2}$, $\\tau = 7 \\times 10^{-4}$。\n- 用例 5：$N_k = 60$, $\\sigma = 10^{-1}$, $\\tau = 2 \\times 10^{-3}$。\n- 用例 6：$N_k = 2$, $\\sigma = 2 \\times 10^{-1}$, $\\tau = 5 \\times 10^{-2}$。\n\n角度单位：所有角度均为无量纲；三角函数使用弧度作为参数。\n\n最终输出格式：您的程序应生成单行输出，其中包含六个布尔结果，以逗号分隔并用方括号括起（例如，“[True,False,True,True,False,True]”）。\n\n注意事项和约束：\n\n- 仅使用矢量化数值运算来评估布里渊区平均值，并通过安全地处理指数函数的大参数，确保在 $\\sigma$ 非常小时费米-狄拉克函数的数值稳定性。\n- 由于模型已完全无量纲化，因此无需物理单位。\n- 最终打印的输出必须与指定的单行格式完全匹配，不得包含任何额外文本。", "solution": "该问题已经过验证，被认定是有效的。这是一个计算凝聚态物理学中的适定问题，它基于公认的原理，如 Hellmann-Feynman 定理、紧束缚模型和费米-狄拉克统计。为获得唯一的数值解所需的所有必要参数和定义均已提供。\n\n然而，该问题在其“总电子能量”$E_{\\text{tot}}$ 的定义中存在一个微妙的模糊之处。在非零温度或有限电子展宽 $\\sigma$ 的情况下，其导数产生力的热力学正确物理量是亥姆霍兹自由能，$A = E_{\\text{band}} - \\mathcal{T}S_{\\text{el}}$，而不仅仅是被占据单粒子能量的总和，$E_{\\text{band}} = \\langle \\epsilon f \\rangle$。对 $E_{\\text{band}}$ 进行简单的微分会漏掉一个与电子熵 $S_{\\text{el}}$ 导数相关的项。作用在集体坐标 $u$ 上的力的标准且物理正确的公式是由哈密顿量导数的期望值给出，这等同于对自由能进行微分。我将采用这种严谨的表述进行推导。\n\n每个晶胞的亥姆霍兹自由能由下式给出：\n$$ A(u) = E_{\\text{band}}(u) - \\sigma S_{\\text{el}}(u) $$\n其中 $\\sigma$ 是展宽宽度（与温度 $k_B \\mathcal{T}$ 成正比），$E_{\\text{band}}$ 是能带能量，$S_{\\text{el}}$ 是电子熵。它们被定义为布里渊区（BZ）积分：\n$$ E_{\\text{band}}(u) = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\epsilon(k; u) f(\\epsilon(k; u) - \\mu; \\sigma) dk $$\n$$ S_{\\text{el}}(u) = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ f_k \\ln f_k + (1 - f_k) \\ln(1 - f_k) \\right] dk $$\n其中 $f_k$ 是 $f(\\epsilon(k; u) - \\mu; \\sigma)$ 的简写。力为 $F = -\\partial A(u)/\\partial u$。\n$$ F(u) = -\\frac{\\partial E_{\\text{band}}}{\\partial u} + \\sigma \\frac{\\partial S_{\\text{el}}}{\\partial u} $$\n熵项的导数可以使用链式法则简化：\n$$ \\frac{\\partial S_{\\text{el}}}{\\partial u} = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\frac{d}{df_k}[-f_k \\ln f_k - (1-f_k)\\ln(1-f_k)] \\frac{\\partial f_k}{\\partial u} dk $$\n方括号内的导数是 $\\ln(f_k/(1-f_k))$，它等于 $(\\epsilon(k;u)-\\mu)/\\sigma$。因此：\n$$ \\sigma \\frac{\\partial S_{\\text{el}}}{\\partial u} = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} (\\epsilon(k;u)-\\mu) \\frac{\\partial f_k}{\\partial u} dk $$\n能带能量的导数是：\n$$ \\frac{\\partial E_{\\text{band}}}{\\partial u} = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ \\frac{\\partial \\epsilon(k; u)}{\\partial u} f_k + \\epsilon(k;u) \\frac{\\partial f_k}{\\partial u} \\right] dk $$\n结合这些，力为：\n$$ F(u) = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ \\frac{\\partial \\epsilon}{\\partial u} f_k + \\epsilon \\frac{\\partial f_k}{\\partial u} - (\\epsilon-\\mu) \\frac{\\partial f_k}{\\partial u} \\right] dk = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ \\frac{\\partial \\epsilon}{\\partial u} f_k + \\mu \\frac{\\partial f_k}{\\partial u} \\right] dk $$\n问题指定化学势 $\\mu=0$。力的表达式显著简化为纯粹的 Hellmann-Feynman 项：\n$$ F(u) = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\frac{\\partial \\epsilon(k; u)}{\\partial u} f(\\epsilon(k; u); \\sigma) dk $$\n我们被要求计算 $u=0$ 时的力。能带色散为 $\\epsilon(k; u) = -2t \\cos k + g u \\cos k$。\n它对 $u$ 的导数是 $\\frac{\\partial \\epsilon}{\\partial u} = g \\cos k$。\n在 $u=0$ 时，色散为 $\\epsilon(k; 0) = -2t \\cos k$。\n将这些代入力表达式中：\n$$ F = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} (g \\cos k) f(-2t \\cos k; \\sigma) dk $$\n代入费米-狄拉克函数的形式，$f(\\epsilon;\\sigma) = (1 + \\exp(\\epsilon/\\sigma))^{-1}$：\n$$ F(\\sigma) = -\\frac{g}{2\\pi} \\int_{-\\pi}^{\\pi} \\frac{\\cos k}{1 + \\exp\\left(\\frac{-2t \\cos k}{\\sigma}\\right)} dk $$\n这便是力的最终解析表达式。\n\n为了进行数值计算，我们使用指定的在 $[-\\pi, \\pi)$ 上的 $N_k$ 点中点法则对积分进行离散化。k 点为 $k_j = -\\pi + (j + 1/2)\\Delta k$，其中 $j \\in \\{0, \\dots, N_k-1\\}$ 且 $\\Delta k = 2\\pi/N_k$。积分由一个和式近似：\n$$ \\int_{-\\pi}^{\\pi} G(k) dk \\approx \\sum_{j=0}^{N_k-1} G(k_j) \\Delta k = \\sum_{j=0}^{N_k-1} G(k_j) \\frac{2\\pi}{N_k} $$\n将此应用于力的表达式：\n$$ F(N_k, \\sigma) \\approx -\\frac{g}{2\\pi} \\sum_{j=0}^{N_k-1} \\frac{\\cos k_j}{1 + \\exp\\left(\\frac{-2t \\cos k_j}{\\sigma}\\right)} \\frac{2\\pi}{N_k} $$\n$2\\pi$ 因子相互抵消，得到最终的计算公式：\n$$ F(N_k, \\sigma) = -\\frac{g}{N_k} \\sum_{j=0}^{N_k-1} \\frac{\\cos k_j}{1 + \\exp\\left(\\frac{-2t \\cos k_j}{\\sigma}\\right)} $$\n数值计算协议如下：\n1. 基于上述公式实现一个 `compute_force(Nk, sigma)` 函数。常数为 $t=1$ 和 $g=0.4$。费米-狄拉克函数的求值必须是数值稳健的；标准的 `numpy` 矢量化操作通过返回 `inf` 来处理 `exp` 中的潜在溢出，这正确地导致占据数为 $0$。\n2. 使用提供的值 $N_{\\mathrm{ref}} = 200000$ 和 $\\sigma_{\\mathrm{ref}} = 10^{-4}$ 计算高精度参考力 $F_{\\mathrm{ref}} = \\text{compute\\_force}(N_{\\mathrm{ref}}, \\sigma_{\\mathrm{ref}})$。\n3. 对于每个测试用例 $(N_k, \\sigma, \\tau)$，计算 $F(N_k, \\sigma)$ 并确定绝对误差 $|F(N_k, \\sigma) - F_{\\mathrm{ref}}|$ 是否小于或等于指定的容差 $\\tau$。\n4. 收集布尔结果并按要求格式化输出。\n此过程将在提供的 Python 脚本中实现。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the numerical convergence problem for forces in a simple metallic band model.\n    \"\"\"\n    # Model constants as defined in the problem statement\n    T_HOP = 1.0  # Hopping parameter t\n    G_COUPLING = 0.4  # Electron-displacement coupling g\n    \n    # Reference calculation parameters\n    N_REF = 200000  # Reference number of k-points\n    SIGMA_REF = 1e-4  # Reference smearing width\n\n    # Test suite from the problem statement\n    test_cases = [\n        # (Nk, sigma, tolerance)\n        (400, 5e-2, 1e-3),\n        (8, 1e-2, 1e-3),\n        (400, 5e-1, 1e-3),\n        (100, 2e-2, 7e-4),\n        (60, 1e-1, 2e-3),\n        (2, 2e-1, 5e-2),\n    ]\n\n    def compute_force(nk, sigma):\n        \"\"\"\n        Computes the force for a given number of k-points and smearing width.\n        \n        Args:\n            nk (int): Number of k-points in the uniform grid.\n            sigma (float): Smearing width (electronic temperature).\n\n        Returns:\n            float: The calculated force.\n        \"\"\"\n        if nk == 0:\n            return 0.0\n\n        # Create the uniform midpoint k-point grid on [-pi, pi)\n        # k_j = -pi + (j + 0.5) * delta_k\n        delta_k = 2.0 * np.pi / nk\n        k_points = -np.pi + (np.arange(nk) + 0.5) * delta_k\n        \n        cos_k = np.cos(k_points)\n        \n        # Calculate band energies at u=0\n        epsilon = -2.0 * T_HOP * cos_k\n        \n        # Argument for the exponential in the Fermi-Dirac function\n        exp_arg = epsilon / sigma\n        \n        # Calculate Fermi-Dirac occupation numbers.\n        # numpy handles overflow for large positive exp_arg by returning inf,\n        # and 1.0 / (1.0 + inf) correctly evaluates to 0.0.\n        # This ensures numerical stability without manual checks.\n        occupations = 1.0 / (1.0 + np.exp(exp_arg))\n        \n        # Calculate the force using the discretized formula\n        # F = - (g/Nk) * sum(cos(k_j) * f(epsilon_j))\n        force = -G_COUPLING / nk * np.sum(cos_k * occupations)\n        \n        return force\n\n    # Calculate the high-accuracy reference force\n    f_ref = compute_force(N_REF, SIGMA_REF)\n    \n    results = []\n    for nk_test, sigma_test, tau_test in test_cases:\n        # Calculate the force for the current test case\n        f_test = compute_force(nk_test, sigma_test)\n        \n        # Calculate the absolute error\n        error = abs(f_test - f_ref)\n        \n        # Check if the error is within the tolerance\n        is_converged = error <= tau_test\n        results.append(is_converged)\n\n    # Format the final output as a comma-separated list of booleans\n    # e.g., [True,False,True,True,False,True]\n    output_str = f\"[{','.join(map(str, results))}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2900974"}, {"introduction": "前面的练习展示了在金属计算中引入电子展宽的必要性，但这并非没有代价——它会引入系统性偏差。为了成为一名专业的计算科学家，理解并控制这些偏差至关重要。本练习 [@problem_id:2901014] 将带领您从理论层面深入分析，通过数学推导来比较不同展宽方法（如费米-狄拉克展宽与Methfessel–Paxton展宽）对力的计算所引入的偏差。这将揭示高级展宽方法在设计上如何系统性地消除低阶误差，从而让您更深刻地理解计算方法背后的物理和数学原理。", "problem": "考虑一个三维周期性金属体系，其具有光滑的能带结构，并且在费米能级附近具有不为零且光滑的单粒子态密度。一个积分可观测量，例如 Hellmann–Feynman 力的一个笛卡尔分量或应力张量的一个分量，在零温下可以写成如下形式的能量积分：\n$$\nQ_0 \\;=\\; \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,\\Theta\\!\\big(\\mu-\\varepsilon\\big)\\,d\\varepsilon,\n$$\n其中 $g(\\varepsilon)$ 是能带能量 $\\varepsilon$ 的一个光滑函数，它包含了在固定 $\\varepsilon$ 下该可观测量被积函数的布里渊区平均值（包括态密度的效应），$\\mu$ 是费米能级，$\\Theta$ 是 Heaviside 阶跃函数。在实际的布里渊区积分中，为了减少 k 点离散化误差，通常用一个展宽宽度为 $\\sigma>0$ 的展宽占据数 $s\\!\\left((\\varepsilon-\\mu)/\\sigma\\right)$ 来替代不连续的占据数。两种标准的选择是：\n- Fermi–Dirac 展宽，它对应于有限的电子温度 $T$，其中 $\\sigma=k_{\\mathrm{B}}T$ 且 $s_{\\mathrm{FD}}(x) = \\big(1+\\mathrm{e}^{x}\\big)^{-1}$，以及\n- 一阶 Methfessel–Paxton 展宽，它使用基于高斯函数的 Hermite 展开的累积分布函数来近似 $\\Theta$。\n\n定义展宽积分\n$$\nQ_{\\sigma} \\;=\\; \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,s\\!\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon,\n$$\n以及由展宽引起的偏差\n$$\n\\delta Q(\\sigma) \\;=\\; Q_{\\sigma}-Q_{0}.\n$$\n假设：\n- $g(\\varepsilon)$ 在 $\\mu$ 的一个邻域内是解析的，并且其直到足够高阶的导数都有界，\n- 在 $\\mu$ 处恰好没有能带交叉或 van Hove 奇异点，\n- 并且力或应力分量仅通过 $g(\\varepsilon)$ 进入计算，因此在零温下唯一的非解析性是 $\\Theta$ 在 $\\mu$ 处的不连续性。\n\n在上述假设下，对于 $\\sigma \\to 0$ 的极限情况，以下哪种说法最能比较一阶 Methfessel–Paxton 展宽与 Fermi–Dirac 展宽在力和应力等积分量中引入的系统性偏差？\n\nA. 在 Fermi–Dirac 展宽下，$\\delta Q_{\\mathrm{FD}}(\\sigma)=C_{2}\\,\\sigma^{2}\\,g'(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{4}\\right)$，而在 一阶 Methfessel–Paxton 展宽下，$\\delta Q_{\\mathrm{MP1}}(\\sigma)=C_{4}\\,\\sigma^{4}\\,g^{(3)}(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{6}\\right)$；因此，对于光滑的金属被积函数，当 $\\sigma$ 很小时，一阶 Methfessel–Paxton 展宽表现出参数上更小的主导偏差。\n\nB. Fermi–Dirac 展宽由于其变分性质，对于任何 $\\sigma>0$ 都能得到完全无偏的积分力和应力，而一阶 Methfessel–Paxton 展宽由于核函数的不对称性，通常会产生 $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$ 的线性偏差。\n\nC. Fermi–Dirac 展宽和一阶 Methfessel–Paxton 展宽的主导偏差均为 $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$，因为唯一的非解析性是 $\\mu$ 处的占据数跳变。\n\nD. 当 $g$ 是光滑的时，Fermi–Dirac 展宽产生指数级小的偏差 $\\delta Q_{\\mathrm{FD}}(\\sigma)=\\mathcal{O}\\!\\big(\\mathrm{e}^{-c/\\sigma}\\big)$（对于某个 $c>0$），而一阶 Methfessel–Paxton 展宽具有代数偏差 $\\delta Q_{\\mathrm{MP1}}(\\sigma)=\\mathcal{O}\\!\\left(\\sigma^{2}\\right)$。", "solution": "对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n- 零温下的积分可观测量由 $Q_0 = \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,\\Theta(\\mu-\\varepsilon)\\,d\\varepsilon$ 给出。\n- $g(\\varepsilon)$ 是能带能量 $\\varepsilon$ 的光滑函数。\n- $\\mu$ 是费米能级。\n- $\\Theta$ 是 Heaviside 阶跃函数。\n- 使用展宽宽度为 $\\sigma>0$ 的展宽占据数 $s((\\varepsilon-\\mu)/\\sigma)$。\n- 展宽积分为 $Q_{\\sigma} = \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,s((\\varepsilon-\\mu)/\\sigma)\\,d\\varepsilon$。\n- 由展宽引起的偏差为 $\\delta Q(\\sigma) = Q_{\\sigma}-Q_{0}$。\n- 考虑了两种展宽函数：Fermi-Dirac 函数，$s_{\\mathrm{FD}}(x) = (1+\\mathrm{e}^{x})^{-1}$，其中 $\\sigma=k_{\\mathrm{B}}T$；以及一阶 Methfessel-Paxton 函数，$s_{\\mathrm{MP1}}$。\n- 假设：$g(\\varepsilon)$ 在 $\\mu$ 附近是解析的；其导数有界；在 $\\mu$ 处恰好没有能带交叉或 van Hove 奇异点；非解析性仅来自于 $\\Theta(\\mu-\\varepsilon)$。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据。它探讨了计算固态物理和量子化学中一个标准且重要的话题：用于金属布里渊区积分的展宽技术所引入的系统误差。其表述在数学上是精确的，并基于对这些方法的既有理论分析。所提供的假设对于此类推导是标准的。\n\n该问题是良定的。它要求比较两种定义明确的方法在 $\\sigma \\to 0$ 时偏差 $\\delta Q(\\sigma)$ 的主导阶渐近行为。从这些前提出发可以推导出唯一的答案。\n\n该问题是客观的。其定义和问题均以清晰、无歧义的数学语言陈述。\n\n**步骤 3：结论与行动**\n该问题是有效的。可以推导出严格的解。\n\n我们首先将偏差 $\\delta Q(\\sigma)$ 表示成一个便于对 $\\sigma$ 进行级数展开的形式，以此开始推导。令 $\\phi(\\varepsilon)$ 是 $g(\\varepsilon)$ 的一个原函数，使得 $\\phi'(\\varepsilon) = g(\\varepsilon)$。我们可以通过分部积分来写出零温可观测量 $Q_0$：\n$$\nQ_0 = \\int_{-\\infty}^{+\\infty} \\phi'(\\varepsilon)\\,\\Theta(\\mu-\\varepsilon)\\,d\\varepsilon = \\big[\\phi(\\varepsilon)\\Theta(\\mu-\\varepsilon)\\big]_{-\\infty}^{+\\infty} - \\int_{-\\infty}^{+\\infty} \\phi(\\varepsilon) \\frac{d}{d\\varepsilon}\\Theta(\\mu-\\varepsilon)\\,d\\varepsilon\n$$\n假设当 $|\\varepsilon| \\to \\infty$ 时 $g(\\varepsilon)$ 足够快地趋于零，则边界项为零。使用 $\\frac{d}{d\\varepsilon}\\Theta(\\mu-\\varepsilon) = -\\delta(\\varepsilon-\\mu)$，我们得到 $Q_0 = \\phi(\\mu)$。\n\n展宽可观测量 $Q_{\\sigma}$ 由下式给出：\n$$\nQ_{\\sigma} = \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,s\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon = \\int_{-\\infty}^{+\\infty} \\phi'(\\varepsilon)\\,s\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon\n$$\n再次进行分部积分：\n$$\nQ_{\\sigma} = \\left[\\phi(\\varepsilon)s\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\right]_{-\\infty}^{+\\infty} - \\int_{-\\infty}^{+\\infty} \\phi(\\varepsilon) \\frac{1}{\\sigma} s'\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon\n$$\n展宽函数 $s(x)$ 具有性质 $s(-\\infty)=1$ 和 $s(+\\infty)=0$。假设 $\\phi(-\\infty)=0$（通过选择积分常数），则边界项消失。然后我们将积分变量改为 $x = (\\varepsilon-\\mu)/\\sigma$，这给出 $d\\varepsilon = \\sigma dx$：\n$$\nQ_{\\sigma} = - \\int_{-\\infty}^{+\\infty} \\phi(\\mu+\\sigma x)\\,s'(x)\\,dx\n$$\n我们现在将 $\\phi(\\mu+\\sigma x)$ 在 $\\mu$ 附近展开为泰勒级数，这是允许的，因为我们假设 $g(\\varepsilon)$（因此 $\\phi(\\varepsilon)$）在 $\\mu$ 处是解析的：\n$$\n\\phi(\\mu+\\sigma x) = \\sum_{k=0}^{\\infty} \\frac{\\phi^{(k)}(\\mu)}{k!} (\\sigma x)^k = \\phi(\\mu) + \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} (\\sigma x)^k\n$$\n将此代入 $Q_{\\sigma}$ 的表达式中：\n$$\nQ_{\\sigma} = - \\int_{-\\infty}^{+\\infty} \\left(\\phi(\\mu) + \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} (\\sigma x)^k\\right) s'(x)\\,dx\n$$\n$$\nQ_{\\sigma} = -\\phi(\\mu)\\int_{-\\infty}^{+\\infty} s'(x)\\,dx - \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} \\sigma^k \\int_{-\\infty}^{+\\infty} x^k s'(x)\\,dx\n$$\n积分 $\\int_{-\\infty}^{+\\infty} s'(x)\\,dx = s(+\\infty) - s(-\\infty) = 0 - 1 = -1$。因此，第一项是 $\\phi(\\mu) = Q_0$。\n于是偏差为 $\\delta Q(\\sigma) = Q_{\\sigma} - Q_0$：\n$$\n\\delta Q(\\sigma) = - \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} \\sigma^k \\int_{-\\infty}^{+\\infty} x^k s'(x)\\,dx\n$$\n这个通用公式允许我们通过考察其导数的矩 $I_k = \\int_{-\\infty}^{+\\infty} x^k s'(x)\\,dx$ 来分析任何给定展宽函数 $s(x)$ 所产生的偏差。\n\n**对 Fermi-Dirac 展宽 ($s_{\\mathrm{FD}}$) 的分析**\n展宽函数为 $s_{\\mathrm{FD}}(x) = (1+\\mathrm{e}^x)^{-1}$。其导数为 $s'_{\\mathrm{FD}}(x) = -\\mathrm{e}^x(1+\\mathrm{e}^x)^{-2}$。\n我们来检查导数的对称性：\n$$\ns'_{\\mathrm{FD}}(-x) = -\\mathrm{e}^{-x}(1+\\mathrm{e}^{-x})^{-2} = -\\mathrm{e}^{-x} \\left(\\frac{\\mathrm{e}^x+1}{\\mathrm{e}^x}\\right)^{-2} = -\\mathrm{e}^{-x} \\frac{\\mathrm{e}^{2x}}{(\\mathrm{e}^x+1)^2} = -\\frac{\\mathrm{e}^x}{(1+\\mathrm{e}^x)^2} = s'_{\\mathrm{FD}}(x)\n$$\n导数 $s'_{\\mathrm{FD}}(x)$ 是一个偶函数。因此，其所有奇数阶矩都为零：当 $k=1, 3, 5, \\dots$ 时，$I_k = 0$。\n偏差的展开式变为：\n$$\n\\delta Q_{\\mathrm{FD}}(\\sigma) = - \\frac{g'(\\mu)}{2!} \\sigma^2 I_2 - \\frac{g'''(\\mu)}{4!} \\sigma^4 I_4 - \\dots\n$$\n第一个非零矩是 $I_2 = \\int_{-\\infty}^{+\\infty} x^2 s'_{\\mathrm{FD}}(x)\\,dx$。这是 Sommerfeld 展开中的一个标准积分，其值为 $-\\pi^2/3$。\n因此，偏差的主导项是：\n$$\n\\delta Q_{\\mathrm{FD}}(\\sigma) = - \\frac{g'(\\mu)}{2} \\sigma^2 \\left(-\\frac{\\pi^2}{3}\\right) + \\mathcal{O}(\\sigma^4) = \\frac{\\pi^2}{6} \\sigma^2 g'(\\mu) + \\mathcal{O}(\\sigma^4)\n$$\nFermi-Dirac 展宽的主导偏差是 $\\sigma^2$ 阶的，并与 $g'(\\mu)$ 成正比。\n\n**对一阶 Methfessel-Paxton 展宽 ($s_{\\mathrm{MP1}}$) 的分析**\nMethfessel-Paxton 展宽函数 $s_{\\mathrm{MP,N}}(x)$ 的构造方式使得对 delta 函数的近似 $\\tilde{\\delta}_N(x) = -s'_{\\mathrm{MP,N}}(x)$ 能够正确地再现真实 delta 函数的前 $2N+2$ 个矩。也就是说，对于 $m = 0, 1, \\dots, 2N+1$，有 $\\int_{-\\infty}^{+\\infty} x^m \\tilde{\\delta}_N(x) dx = \\delta_{m0}$。用 $s'$ 的矩来表示，这意味着对于 $m=0, \\dots, 2N+1$，$I_m = -\\delta_{m0}$。\n对于一阶 MP 展宽，有 $N=1$。条件是：\n- $I_0 = \\int s'_{\\mathrm{MP1}}(x) dx = -1$\n- $I_1 = \\int x s'_{\\mathrm{MP1}}(x) dx = 0$\n- $I_2 = \\int x^2 s'_{\\mathrm{MP1}}(x) dx = 0$\n- $I_3 = \\int x^3 s'_{\\mathrm{MP1}}(x) dx = 0$\n第一个不被约束为零的矩是 $I_4$。函数 $\\tilde{\\delta}_1(x)$ 是偶函数，所以其所有奇数阶矩都为零，这与 $I_1$ 和 $I_3$ 的条件相符。$I_2=0$ 这个条件是相比于高斯展宽或 Fermi-Dirac 展宽等更简单方法的关键改进。\n\n将这些矩代入通用的偏差公式中：\n$$\n\\delta Q_{\\mathrm{MP1}}(\\sigma) = - \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} \\sigma^k I_k\n$$\n由于 $I_1=I_2=I_3=0$，所以 $k=1, 2, 3$ 的项都为零。第一个非零项对应于 $k=4$：\n$$\n\\delta Q_{\\mathrm{MP1}}(\\sigma) = - \\frac{g^{(3)}(\\mu)}{4!} \\sigma^4 I_4 + \\mathcal{O}(\\sigma^6)\n$$\n由于根据构造 $I_4 \\neq 0$，一阶 Methfessel-Paxton 展宽的主导偏差是 $\\sigma^4$ 阶的，并与三阶导数 $g'''(\\mu)$ 成正比。\n\n**逐项分析**\n\nA. 在 Fermi-Dirac 展宽下，$\\delta Q_{\\mathrm{FD}}(\\sigma)=C_{2}\\,\\sigma^{2}\\,g'(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{4}\\right)$，而在 一阶 Methfessel-Paxton 展宽下，$\\delta Q_{\\mathrm{MP1}}(\\sigma)=C_{4}\\,\\sigma^{4}\\,g^{(3)}(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{6}\\right)$；因此，对于光滑的金属被积函数，当 $\\sigma$ 很小时，一阶 Methfessel-Paxton 展宽表现出参数上更小的主导偏差。\n该陈述与我们的推导完全一致。我们发现 $\\delta Q_{\\mathrm{FD}}(\\sigma) \\propto \\sigma^2 g'(\\mu)$ 和 $\\delta Q_{\\mathrm{MP1}}(\\sigma) \\propto \\sigma^4 g'''(\\mu)$。对于小的 $\\sigma$，$\\mathcal{O}(\\sigma^4)$ 的偏差在参数上小于 $\\mathcal{O}(\\sigma^2)$ 的偏差。\n结论：**正确**。\n\nB. Fermi–Dirac 展宽由于其变分性质，对于任何 $\\sigma>0$ 都能得到完全无偏的积分力和应力，而一阶 Methfessel–Paxton 展宽由于核函数的不对称性，通常会产生 $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$ 的线性偏差。\n该陈述不正确。Fermi-Dirac 展宽产生的偏差是 $\\mathcal{O}(\\sigma^2)$，而非零。Mermin 自由能的变分性质并不意味着基态可观测量能被精确恢复。此外，一阶 Methfessel-Paxton 展宽不会产生线性偏差；其相关的 $s'(x)$ 是一个偶函数，这保证了 $\\mathcal{O}(\\sigma)$ 项为零。\n结论：**不正确**。\n\nC. Fermi–Dirac 展宽和一阶 Methfessel–Paxton 展宽的主导偏差均为 $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$，因为唯一的非解析性是 $\\mu$ 处的占据数跳变。\n该陈述不正确。如推导所示，FD 展宽的主导偏差是 $\\mathcal{O}(\\sigma^2)$，而 MP1 展宽的主导偏差是 $\\mathcal{O}(\\sigma^4)$。对于任何 $s'(x)$ 是偶函数的展宽方案，$\\mathcal{O}(\\sigma)$ 项都会消失，FD 和 MP 方法都属于这种情况。\n结论：**不正确**。\n\nD. 当 $g$ 是光滑的时，Fermi–Dirac 展宽产生指数级小的偏差 $\\delta Q_{\\mathrm{FD}}(\\sigma)=\\mathcal{O}\\!\\big(\\mathrm{e}^{-c/\\sigma}\\big)$（对于某个 $c>0$），而一阶 Methfessel–Paxton 展宽具有代数偏差 $\\delta Q_{\\mathrm{MP1}}(\\sigma)=\\mathcal{O}\\!\\left(\\sigma^{2}\\right)$。\n该陈述不正确。如 Sommerfeld 展开所示，Fermi-Dirac 展宽的偏差是代数的，为 $\\mathcal{O}(\\sigma^2)$。一阶 Methfessel-Paxton 展宽的偏差是 $\\mathcal{O}(\\sigma^4)$，而不是 $\\mathcal{O}(\\sigma^2)$。\n结论：**不正确**。", "answer": "$$\\boxed{A}$$", "id": "2901014"}]}