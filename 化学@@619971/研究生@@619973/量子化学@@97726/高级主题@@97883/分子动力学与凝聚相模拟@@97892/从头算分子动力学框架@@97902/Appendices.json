{"hands_on_practices": [{"introduction": "任何分子动力学模拟的准确性和稳定性都取决于一个关键参数：积分时间步长 $\\Delta t$。这个练习将引导您探索在选择 $\\Delta t$ 时所需做的权衡，您需要根据系统中最高频的振动模式来确定满足数值稳定性的 $\\Delta t$ 上限。在此约束下，您还将考虑如何在有限的计算资源内最大化模拟的总时长，这是设置任何从头算分子动力学模拟时最基本的一步 [@problem_id:2452055]。", "problem": "需要在速度-Verlet积分器的辅助下，在一个Born–Oppenheimer框架内对$300\\,\\mathrm{K}$的液态水进行一次从头算分子动力学（AIMD）模拟，该模拟不设完整约束（例如，所有的$\\mathrm{O\\!-\\!H}$键伸缩都是自由的）。系统中最高的振动波数是$\\mathrm{O\\!-\\!H}$伸缩振动，其值为$\\tilde{\\nu} = 3600\\,\\mathrm{cm^{-1}}$。真空中的光速为$c = 2.998\\times 10^{10}\\,\\mathrm{cm\\,s^{-1}}$。为了控制离散化误差和能量漂移，您采纳了这样一个要求：最快振动模式的每个周期至少使用$20$个时间步长。您的计算预算最多允许$2.0\\times 10^{5}$个AIMD时间步长（每一步都涉及一次自洽电子结构计算及相关的力评估）。考虑候选时间步长$\\Delta t \\in \\{2.0\\,\\mathrm{fs},\\,1.0\\,\\mathrm{fs},\\,0.5\\,\\mathrm{fs},\\,0.25\\,\\mathrm{fs}\\}$。\n\n下列哪个陈述是正确的？\n\nA. $\\Delta t = 2.0\\,\\mathrm{fs}$ 满足每个周期$20$个时间步长的要求，因为$\\mathrm{O\\!-\\!H}$振动周期约为$0.5\\,\\mathrm{fs}$。\n\nB. $\\Delta t = 1.0\\,\\mathrm{fs}$ 满足每个周期$20$个时间步长的要求，因为$\\mathrm{O\\!-\\!H}$振动周期约为$9\\,\\mathrm{fs}$，这导致每个周期大约有$9$个步长。\n\nC. $\\Delta t = 0.5\\,\\mathrm{fs}$ 不满足最快模式每个周期$20$个时间步长的要求。\n\nD. $\\Delta t = 0.25\\,\\mathrm{fs}$ 满足要求，并且在预算下，得到的总模拟物理时间为$50\\,\\mathrm{ps}$。\n\nE. 在给定的候选项中，$\\Delta t = 0.25\\,\\mathrm{fs}$ 在遵守每个周期$20$个时间步长要求的同时最大化了总模拟时间；在固定预算下选择一个更小的 $\\Delta t$ 将会减少采样，而不会改善对所述要求的遵守情况。", "solution": "问题陈述已提交以供验证。\n\n### 步骤1：提取已知条件\n- 模拟类型：液态水的从头算分子动力学（AIMD）。\n- 温度：$T = 300\\,\\mathrm{K}$。\n- 积分器：速度-Verlet。\n- 框架：Born–Oppenheimer，无完整约束。\n- 最高振动波数：$\\tilde{\\nu} = 3600\\,\\mathrm{cm^{-1}}$（对应于O-H伸缩振动）。\n- 真空中的光速：$c = 2.998\\times 10^{10}\\,\\mathrm{cm\\,s^{-1}}$。\n- 离散化要求：最快振动模式的每个周期至少20个时间步长。\n- 计算预算：最多 $2.0\\times 10^{5}$ 个AIMD时间步长。\n- 候选时间步长：$\\Delta t \\in \\{2.0\\,\\mathrm{fs},\\,1.0\\,\\mathrm{fs},\\,0.5\\,\\mathrm{fs},\\,0.25\\,\\mathrm{fs}\\}$。\n\n### 步骤2：使用提取的已知条件进行验证\n这个问题在科学上是有根据的，因为它描述了计算化学模拟（水的AIMD）的标准设置。提供的O-H伸缩振动波数和光速的值在事实上是正确的。这个问题是适定的；它提供了计算时间步长约束和评估给定选项所需的所有必要信息。语言客观而精确。这个问题是自洽的，没有矛盾。\n\n### 步骤3：结论与行动\n问题陈述有效。我将继续进行推导和评估。\n\n### 推导\n分子动力学数值积分方案（如velocity-Verlet算法）的稳定性和准确性由时间步长$\\Delta t$决定。时间步长必须足够小，才能精确采样系统中最快的运动。问题给出的这个最快运动是波数为$\\tilde{\\nu} = 3600\\,\\mathrm{cm^{-1}}$的$\\mathrm{O\\!-\\!H}$键振动。\n\n首先，我们必须计算该振动的周期$T_{OH}$。频率$\\nu$通过光速$c$与波数$\\tilde{\\nu}$相关联：\n$$ \\nu = c \\tilde{\\nu} $$\n周期$T$是频率的倒数：\n$$ T_{OH} = \\frac{1}{\\nu} = \\frac{1}{c \\tilde{\\nu}} $$\n代入给定值：\n$$ T_{OH} = \\frac{1}{(2.998\\times 10^{10}\\,\\mathrm{cm\\,s^{-1}}) \\times (3600\\,\\mathrm{cm^{-1}})} = \\frac{1}{1.07928 \\times 10^{14}\\,\\mathrm{s^{-1}}} \\approx 9.2654 \\times 10^{-15}\\,\\mathrm{s} $$\n因为$1\\,\\mathrm{fs} = 10^{-15}\\,\\mathrm{s}$，周期为：\n$$ T_{OH} \\approx 9.2654\\,\\mathrm{fs} $$\n\n问题陈述了每个周期至少$20$个时间步长的要求。设$N_{steps}$为每个周期的步数。条件是：\n$$ N_{steps} = \\frac{T_{OH}}{\\Delta t} \\ge 20 $$\n这对可接受的时间步长施加了一个上限$\\Delta t_{max}$：\n$$ \\Delta t \\le \\frac{T_{OH}}{20} $$\n使用我们计算出的周期：\n$$ \\Delta t_{max} \\approx \\frac{9.2654\\,\\mathrm{fs}}{20} \\approx 0.4633\\,\\mathrm{fs} $$\n任何选择的时间步长$\\Delta t$都必须小于或等于这个值。我们现在基于此标准评估给定的选项。\n\n### 逐项分析\n\n**A. $\\Delta t = 2.0\\,\\mathrm{fs}$ 满足每个周期$20$个时间步长的要求，因为$\\mathrm{O\\!-\\!H}$振动周期约为$0.5\\,\\mathrm{fs}$。**\n关于$\\mathrm{O\\!-\\!H}$振动周期约为$0.5\\,\\mathrm{fs}$的说法是完全错误的。我们的计算显示周期是$T_{OH} \\approx 9.27\\,\\mathrm{fs}$。一个$0.5\\,\\mathrm{fs}$的周期对应约$66700\\,\\mathrm{cm^{-1}}$的波数，这属于X射线范围，与分子振动无关。此外，对于$\\Delta t = 2.0\\,\\mathrm{fs}$，每个周期的步数将是$T_{OH} / \\Delta t \\approx 9.27 / 2.0 \\approx 4.6$，远低于所要求的$20$。\n結論：**錯誤**。\n\n**B. $\\Delta t = 1.0\\,\\mathrm{fs}$ 满足每个周期$20$个时间步长的要求，因为$\\mathrm{O\\!-\\!H}$振动周期约为$9\\,\\mathrm{fs}$，这导致每个周期大约有$9$个步长。**\n将周期近似为$9\\,\\mathrm{fs}$是合理的。使用这个值，$\\Delta t = 1.0\\,\\mathrm{fs}$时每个周期的步数确实是$9\\,\\mathrm{fs} / 1.0\\,\\mathrm{fs} = 9$。然而，陈述接着声称这满足每个周期至少$20$个步长的要求。由于$9 < 20$，这个要求显然没有被满足。该陈述包含一个逻辑矛盾。\n結論：**錯誤**。\n\n**C. $\\Delta t = 0.5\\,\\mathrm{fs}$ 不满足最快模式每个周期$20$个时间步长的要求。**\n我们必须检查$\\Delta t = 0.5\\,\\mathrm{fs}$是否小于或等于我们计算出的最大值$\\Delta t_{max} \\approx 0.4633\\,\\mathrm{fs}$。由于$0.5\\,\\mathrm{fs} > 0.4633\\,\\mathrm{fs}$，这个时间步长太大了，违反了要求。每个周期的步数将是$T_{OH} / \\Delta t \\approx 9.27 / 0.5 \\approx 18.5$，小于$20$。因此，该陈述在事实上是正确的。\n結論：**正確**。\n\n**D. $\\Delta t = 0.25\\,\\mathrm{fs}$ 满足要求，并且在预算下，得到的总模拟物理时间为$50\\,\\mathrm{ps}$。**\n首先，我们检查$\\Delta t = 0.25\\,\\mathrm{fs}$是否满足要求。由于$0.25\\,\\mathrm{fs} < \\Delta t_{max} \\approx 0.4633\\,\\mathrm{fs}$，要求被满足。其次，我们使用$2.0 \\times 10^{5}$步的最大预算计算总模拟时间：\n$$ t_{total} = (\\text{步数}) \\times \\Delta t = (2.0 \\times 10^{5}) \\times (0.25\\,\\mathrm{fs}) = 5.0 \\times 10^{4}\\,\\mathrm{fs} $$\n将其转换为皮秒（$1\\,\\mathrm{ps} = 1000\\,\\mathrm{fs}$）：\n$$ t_{total} = 5.0 \\times 10^{4}\\,\\mathrm{fs} \\times \\frac{1\\,\\mathrm{ps}}{1000\\,\\mathrm{fs}} = 50\\,\\mathrm{ps} $$\n该陈述的两个部分都为真。\n結論：**正確**。\n\n**E. 在给定的候选项中，$\\Delta t = 0.25\\,\\mathrm{fs}$ 在遵守每个周期$20$个时间步长要求的同时最大化了总模拟时间；在固定预算下选择一个更小的 $\\Delta t$ 将会減少采样，而不会改善对所述要求的遵守情况。**\n我们将此陈述分为两部分进行分析。\n首先，我们确定哪些候选时间步长$\\{2.0\\,\\mathrm{fs},\\,1.0\\,\\mathrm{fs},\\,0.5\\,\\mathrm{fs},\\,0.25\\,\\mathrm{fs}\\}$遵守$\\Delta t \\le 0.4633\\,\\mathrm{fs}$的要求。只有$\\Delta t = 0.25\\,\\mathrm{fs}$是有效的。由于它是唯一有效的选项，因此在有效候选项中，它自然是最大化总模拟时间的那个。对于固定的步数，总模拟时间与$\\Delta t$成正比，因此总是倾向于选择最大的有效$\\Delta t$以最大化采样。\n其次，该陈述讨论了选择一个更小的$\\Delta t$（不在列表中）的后果。一个更小的$\\Delta t$（例如$0.1\\,\\mathrm{fs}$）仍然是合规的。然而，对于$2.0 \\times 10^{5}$步的固定预算，总模拟时间会减少，导致对系统相空间的采样减少。“而不会改善遵守情况”这一说法也是正确的；遵守“至少$20$”的条件是一个二元状态（是/否）。一旦条件得到满足（例如，使用$\\Delta t = 0.25\\,\\mathrm{fs}$），即使将时间步长变得更小，也不会将符合状态从“是”变为“更是”。这个推理是合理的，并反映了模拟设计的一个关键原则：选择一个“恰到好处”的时间步长——足够小以保证稳定性和准确性，但又足够大以最大化计算效率和采样。\n結論：**正確**。", "answer": "$$\\boxed{CDE}$$", "id": "2452055"}, {"introduction": "从头算分子动力学模拟产生的原子轨迹蕴含着丰富的物理化学信息，而提取这些信息是理论研究的关键环节。本实践的核心任务是从给定的动力学数据中计算出振动光谱，例如红外（IR）和拉曼（Raman）光谱。您将通过编程实现时间相关函数与功率谱密度之间的傅里叶变换关系，这是联系微观动力学与宏观光谱测量的基石，其理论基础是Wiener-Khinchin定理 [@problem_id:2872074]。", "problem": "您将实现一个程序，该程序给定代表从头算分子动力学（AIMD）输出的合成一维简正模轨迹，用以计算振动光谱和电子-声子耦合度。这些计算基于线性响应理论和涨落-耗散关系，它们是量子化学中的基本原理。目标概念是红外（IR）和拉曼活性，以及在质量加权坐标下的模式分辨电子-声子耦合。您的实现必须基于第一性原理，并使用广为接受的事实：时间相关函数与谱密度之间的傅里叶变换关系，以及关于质量加权简正坐标的导数定义。\n\n从以下基本依据出发：\n- 线性响应：一个响应谱与某个随时间变化的观测量在平衡态下的适当相关函数的傅里叶变换相关。例如，红外（IR）吸收的经典表达式涉及偶极矩，而拉曼强度涉及极化率张量。\n- Wiener–Khinchin 定理：功率谱密度是一个平稳过程的自相关函数的傅里叶变换。\n- Born–Oppenheimer 分离：某个简正模坐标的电子-声子耦合常数是电子能级能量对质量加权简正坐标的导数。\n- 离散傅里叶变换和加窗：实际的数值估计使用带时间步长的离散采样和一个窗函数来减轻频谱泄漏。\n\n精确地讲，假设一个单一的谐振简正模，其坐标为 $x(t) = A \\cos(2\\pi \\nu t)$，其中 $t$ 是时间（单位：秒），$A$ 是小振幅（单位：埃），$\\nu$ 是频率（单位：赫兹），它通过 $\\nu = c\\,\\tilde{\\nu}$ 与波数 $\\tilde{\\nu}$（单位：反厘米）相关，其中 $c$ 是光速。速度为 $v(t) = \\frac{dx}{dt}$。标量偶极矩为 $\\mu(t) = q\\, x(t)$，其中 $q$ 是一个标量有效偶极系数（单位任意），各向同性极化率为 $\\alpha(t) = \\alpha_{1}\\, x(t)$，其中 $\\alpha_{1}$ 是一个标量导数（单位任意）。电子能级能量与位移呈线性关系，$E_{\\mathrm{el}}(x) = E_{0} + k\\, x$，其中 $k$ 是一个斜率（单位：电子伏特每埃）。质量加权简正坐标为 $Q = \\sqrt{m}\\, x$，其中 $m$ 的单位是原子质量单位，$x$ 的单位是埃。沿着此模式的电子-声子耦合常数定义为 $g_{Q} = \\frac{dE_{\\mathrm{el}}}{dQ}$。\n\n基于这些依据，实现以下数值流程：\n- 使用 $N$ 个样本和均匀的时间步长 $\\Delta t$（单位：飞秒）构建 $x(t_{n})$, $v(t_{n})$, $\\mu(t_{n})$ 和 $\\alpha(t_{n})$ 的离散时间序列，其中 $t_{n} = n\\,\\Delta t$ 需转换为秒，且 $\\nu = c\\,\\tilde{\\nu}$，其中 $c$ 的单位是厘米每秒，$\\tilde{\\nu}$ 的单位是反厘米。使用 $c = 2.99792458\\times 10^{10}$ 厘米每秒。\n- 对每个时间序列使用 Hann 窗以减轻频谱泄漏。计算每个观测量对应的单边离散傅里叶变换幅值谱。\n- 使用离散傅里叶变换返回的频率轴（单位：赫兹），通过除以 $c$ 将其转换为波数（单位：反厘米），即 $\\tilde{\\nu} = \\nu / c$。\n- 定义三个光谱估计量：\n  - 振动光谱估计量 $S_{\\mathrm{vib}}(\\tilde{\\nu})$，定义为 $v(t)$ 的功率谱密度。\n  - 红外（IR）强度估计量 $I_{\\mathrm{IR}}(\\tilde{\\nu})$，定义为 $(2\\pi \\nu)^{2}$ 乘以 $\\mu(t)$ 的功率谱密度，其中 $\\nu$ 的单位为赫兹。这个因子体现了在经典极限下，红外吸收与偶极矩时间导数的平方成正比。\n  - 拉曼强度估计量 $I_{\\mathrm{R}}(\\tilde{\\nu})$，定义为 $\\alpha(t)$ 的功率谱密度。\n- 对于这三个估计量中的每一个，通过定位严格为正的频率区间中的最大值来找到主峰波数。如果严格为正的频率区间上的谱恒等于零，则该峰值返回 $0.0$。\n- 通过质量加权导数计算电子-声子耦合常数 $g_{Q} = \\frac{dE_{\\mathrm{el}}}{dQ} = \\frac{k}{\\sqrt{m}}$，其中 $k$ 的单位是电子伏特每埃，$m$ 的单位是原子质量单位，得出的单位为电子伏特每埃每平方根原子质量单位。\n\n单位和数值输出要求：\n- 使用 $c = 2.99792458\\times 10^{10}$ 厘米每秒。\n- 所有情况下均使用 $\\Delta t = 0.5$ 飞秒和 $N = 65536$ 个采样点。\n- 所有报告的波数均以反厘米表示，并四舍五入到一位小数。\n- $g_{Q}$ 以电子伏特每埃每平方根原子质量单位表示，并四舍五入到六位小数。\n\n测试套件：\n为以下三个参数集计算四个要求的输出。每个参数集是一个元组 $(m, \\tilde{\\nu}, A, q, \\alpha_{1}, k)$，其中 $m$ 的单位是原子质量单位，$\\tilde{\\nu}$ 的单位是反厘米，$A$ 的单位是埃，$q$ 无单位（任意），$\\alpha_{1}$ 无单位（任意），$k$ 的单位是电子伏特每埃。\n\n- 情况 1（典型的红外和拉曼活性，非零耦合）：$(12.0, 1600.0, 0.02, 1.0, 2.0, 0.5)$。\n- 情况 2（红外非活性，拉曼活性，零耦合）：$(1.0, 3000.0, 0.01, 0.0, 1.5, 0.0)$。\n- 情况 3（低频模式，拉曼非活性，负耦合）：$(32.0, 50.0, 0.03, 0.8, 0.0, -0.2)$。\n\n对于每种情况，您的程序必须生成列表 $[\\tilde{\\nu}_{\\mathrm{vib}}, \\tilde{\\nu}_{\\mathrm{IR}}, \\tilde{\\nu}_{\\mathrm{Raman}}, g_{Q}]$：\n- $\\tilde{\\nu}_{\\mathrm{vib}}$ 是 $S_{\\mathrm{vib}}$ 的主峰，单位为反厘米，四舍五入到一位小数。\n- $\\tilde{\\nu}_{\\mathrm{IR}}$ 是 $I_{\\mathrm{IR}}$ 的主峰，单位为反厘米，四舍五入到一位小数（如果严格为正的频率强度为零，则返回 $0.0$）。\n- $\\tilde{\\nu}_{\\mathrm{Raman}}$ 是 $I_{\\mathrm{R}}$ 的主峰，单位为反厘米，四舍五入到一位小数（如果严格为正的频率强度为零，则返回 $0.0$）。\n- $g_{Q}$ 是电子-声子耦合常数，单位为电子伏特每埃每平方根原子质量单位，四舍五入到六位小数。\n\n最终输出格式：\n您的程序应生成一行输出，其中包含三个情况的结果，形式为一个用逗号分隔的列表，每个结果本身是按指定顺序包含四个浮点数的列表。例如，打印的输出必须如下所示：\n$[ [a_{1},b_{1},c_{1},d_{1}], [a_{2},b_{2},c_{2},d_{2}], [a_{3},b_{3},c_{3},d_{3}] ]$\n除了显示的空格外，不需要额外的空格，也不应有其他文本。", "solution": "我们通过结合线性响应理论、Wiener–Khinchin 定理和质量加权坐标的定义，构建一个理论上严谨的解决方案，并将其特化于模拟从头算分子动力学（AIMD）输出的一维谐振简正模。谐振位移为 $x(t) = A \\cos(2\\pi \\nu t)$，频率为 $\\nu = c\\,\\tilde{\\nu}$，其中 $\\tilde{\\nu}$ 是波数（单位：反厘米），$c$ 是光速（单位：厘米每秒）。速度为 $v(t) = \\frac{dx}{dt} = -A\\,(2\\pi \\nu)\\,\\sin(2\\pi \\nu t)$。偶极矩和极化率分别为 $\\mu(t) = q\\,x(t)$ 和 $\\alpha(t) = \\alpha_{1}\\,x(t)$。电子能量为 $E_{\\mathrm{el}}(x) = E_{0} + k\\,x$。\n\n所需的光谱量推导如下。\n\n- 振动光谱估计量。在经典动力学中，振动态密度与速度自相关函数的傅里叶变换成正比。根据 Wiener–Khinchin 定理，速度时间序列 $v(t)$ 的功率谱密度与此变换成正比。因此，计算 $v(t)$ 的离散傅里叶变换并取其幅度的平方，可以得到一个估计量 $S_{\\mathrm{vib}}(\\nu)$，其主峰位于物理振动频率 $\\nu$ 处，这等效于波数 $\\tilde{\\nu} = \\nu / c$ 处的峰。\n\n- 红外（IR）强度估计量。在线性响应框架内，红外吸收与偶极-偶极时间相关函数的傅里叶变换成正比。由于吸收探测的是偶极矩的时间导数，一个经典估计量是 $I_{\\mathrm{IR}}(\\nu) \\propto \\nu^{2}\\,S_{\\mu}(\\nu)$，其中 $S_{\\mu}(\\nu)$ 是 $\\mu(t)$ 的功率谱密度。记作 $(2\\pi \\nu)^{2} \\, |\\mathcal{F}\\{\\mu(t)\\}|^{2}$（其中 $\\mathcal{F}$ 是傅里叶变换）可确保正确的角频率标度。$I_{\\mathrm{IR}}(\\nu)$（转换为 $\\tilde{\\nu}$）中的主峰提供了红外活性波数。如果 $q = 0$，则 $\\mu(t) \\equiv 0$，光谱中严格为正的频率部分恒等于零，根据构造，报告的峰值为 $0.0$。\n\n- 拉曼强度估计量。各向同性拉曼活性与极化率自相关的傅里叶变换成正比。在简单模型 $\\alpha(t) = \\alpha_{1} x(t)$ 中，该估计量简化为 $\\alpha(t)$ 的功率谱密度。如果 $\\alpha_{1} = 0$，则严格为正的频率内容消失，根据相同规则，报告的峰值为 $0.0$。\n\n- 电子-声子耦合。质量加权简正坐标为 $Q = \\sqrt{m}\\,x$，其中 $m$ 的单位是原子质量单位。模式分辨的电子-声子耦合常数为 $g_{Q} = \\frac{dE_{\\mathrm{el}}}{dQ}$。根据链式法则，$g_{Q} = \\frac{dE_{\\mathrm{el}}}{dx} \\cdot \\frac{dx}{dQ} = \\frac{k}{\\sqrt{m}}$，在当前单位下，其单位为电子伏特每埃每平方根原子质量单位。这仅依赖于质量加权坐标的定义和 $E_{\\mathrm{el}}(x)$ 的线性依赖关系。\n\n离散实现的算法设计细节：\n\n- 时间离散化。使用 $N$ 个样本和时间步长 $\\Delta t$（单位：飞秒）。为了进行频率计算，需将其转换为秒，$t_{n} = n\\,\\Delta t \\times 10^{-15}$。以赫兹为单位的频率网格由单边离散傅里叶变换的频率区间 $\\nu_{k} = \\frac{k}{N\\,\\Delta t_{\\mathrm{s}}}$ 给出，其中 $k$ 从 $0$ 到 $N/2$，$\\Delta t_{\\mathrm{s}}$ 的单位为秒。通过 $\\tilde{\\nu}_{k} = \\nu_{k} / c$ 将其转换为波数，其中 $c = 2.99792458\\times 10^{10}$ 厘米每秒。\n\n- 加窗与谱。为减轻频谱泄漏，在进行离散傅里叶变换之前，将每个离散时间序列乘以一个 Hann 窗 $w_{n} = \\frac{1}{2}\\left(1 - \\cos\\left(\\frac{2\\pi n}{N-1}\\right)\\right)$。通过实数输入的快速傅里叶变换计算单边离散傅里叶变换 $\\mathcal{F}\\{s\\}(\\nu_{k})$，并取其幅度的平方以构成功率谱密度估计量 $| \\mathcal{F}\\{s\\}(\\nu_{k}) |^{2}$。对于红外估计量，需乘以 $(2\\pi \\nu_{k})^{2}$。\n\n- 寻峰。对于每个估计量，考虑严格为正的频率区间（$k \\ge 1$）。如果估计量在这些区间上的最大值（在数值容差范围内）为零，则为对应的峰返回 $0.0$。否则，返回最大值出现的波数，并四舍五入到所需精度。\n\n- 耦合。直接计算 $g_{Q} = \\frac{k}{\\sqrt{m}}$ 并四舍五入到所需精度。\n\n数值设置和预期行为：\n- 当 $\\Delta t = 0.5$ 飞秒且 $N = 65536$ 时，总时间为 $T \\approx 3.2768 \\times 10^{-11}$ 秒，频率分辨率为 $\\Delta \\nu \\approx 3.05176 \\times 10^{10}$ 赫兹。除以 $c$ 得到波数分辨率 $\\Delta \\tilde{\\nu} \\approx 1.0176$ 反厘米。因此，峰值位置将位于真实波数的大约一个反厘米范围内。\n- 情况 1 中 $\\tilde{\\nu} = 1600.0$ 反厘米，非零的 $q$ 和 $\\alpha_{1}$，以及 $k = 0.5$ 电子伏特每埃，应该会在所有三个光谱中产生接近 $1600.0$ 反厘米的峰，并且 $g_{Q} \\approx \\frac{0.5}{\\sqrt{12.0}} \\approx 0.144337$ 电子伏特每埃每平方根原子质量单位。\n- 情况 2 中 $\\tilde{\\nu} = 3000.0$ 反厘米，$q = 0.0$，非零的 $\\alpha_{1}$，以及 $k = 0.0$，会得到一个位于 $0.0$ 反厘米的红外峰（因为严格为正频率的红外光谱恒等于零），一个接近 $3000.0$ 反厘米的拉曼峰，以及 $g_{Q} = 0.0$。\n- 情况 3 中 $\\tilde{\\nu} = 50.0$ 反厘米，$\\alpha_{1} = 0.0$，以及 $k = -0.2$ 电子伏特每埃，会得到一个接近 $50.0$ 反厘米的振动峰，一个位于 $0.0$ 反厘米的拉曼峰，以及 $g_{Q} \\approx \\frac{-0.2}{\\sqrt{32.0}} \\approx -0.035355$ 电子伏特每埃每平方根原子质量单位。\n\n最终程序为每种情况构建时间序列，通过加窗计算相应的光谱，以反厘米为单位识别主峰位置，通过质量加权导数计算 $g_{Q}$，四舍五入到所需精度，并打印一个单行列表 $[ [\\tilde{\\nu}_{\\mathrm{vib}}, \\tilde{\\nu}_{\\mathrm{IR}}, \\tilde{\\nu}_{\\mathrm{Raman}}, g_{Q}], \\ldots ]$，汇总测试套件中的所有情况。", "answer": "```python\nimport numpy as np\n\n# Constants\nC_CM_PER_S = 2.99792458e10  # speed of light in cm/s\n\ndef hann_window(N: int) -> np.ndarray:\n    \"\"\"Return a Hann window of length N.\"\"\"\n    n = np.arange(N)\n    return 0.5 * (1.0 - np.cos(2.0 * np.pi * n / (N - 1)))\n\ndef rfft_power_spectrum(signal: np.ndarray, dt_s: float) -> tuple[np.ndarray, np.ndarray]:\n    \"\"\"\n    Compute one-sided power spectrum |FFT|^2 of a real signal using a Hann window.\n    Returns (freqs_Hz, power).\n    \"\"\"\n    N = signal.size\n    # Subtract mean to avoid spurious DC components\n    sig = signal - np.mean(signal)\n    window = hann_window(N)\n    windowed = sig * window\n    # Real FFT\n    fft_vals = np.fft.rfft(windowed)\n    power = np.abs(fft_vals) ** 2\n    freqs = np.fft.rfftfreq(N, d=dt_s)\n    return freqs, power\n\ndef dominant_peak_wavenumber(freqs_hz: np.ndarray, power: np.ndarray) -> float:\n    \"\"\"\n    Find dominant peak wavenumber (cm^-1) for strictly positive frequencies.\n    If all strictly positive frequency power is zero, return 0.0.\n    \"\"\"\n    # Exclude zero frequency bin\n    if freqs_hz.size <= 1:\n        return 0.0\n    pos_freqs = freqs_hz[1:]\n    pos_power = power[1:]\n    # Numerical check for nonzero content\n    if not np.any(pos_power > 0.0):\n        return 0.0\n    idx_max = np.argmax(pos_power)\n    freq_hz_peak = pos_freqs[idx_max]\n    wnum_peak = freq_hz_peak / C_CM_PER_S\n    return wnum_peak\n\ndef synthesize_time_series(n_samples: int, dt_fs: float, nu_cm1: float, A_ang: float,\n                           q_eff: float, alpha1: float) -> dict:\n    \"\"\"\n    Synthesize time series for x(t), v(t), mu(t), alpha(t) for a 1D harmonic mode.\n    \"\"\"\n    t_s = np.arange(n_samples) * dt_fs * 1e-15  # time in seconds\n    freq_hz = C_CM_PER_S * nu_cm1  # Hz\n    phase = 2.0 * np.pi * freq_hz * t_s\n    x = A_ang * np.cos(phase)\n    v = -A_ang * (2.0 * np.pi * freq_hz) * np.sin(phase)  # derivative of x(t)\n    mu = q_eff * x\n    alpha = alpha1 * x  # isotropic scalar polarizability\n    return {\"t_s\": t_s, \"x\": x, \"v\": v, \"mu\": mu, \"alpha\": alpha}\n\ndef compute_observable_peaks(n_samples: int, dt_fs: float, params: tuple) -> list[float]:\n    \"\"\"\n    For given parameters (m_amu, nu_cm1, A_ang, q_eff, alpha1, k_eV_per_A),\n    compute:\n      - dominant vibrational wavenumber from velocity power spectrum,\n      - dominant IR wavenumber from (2*pi*f)^2 * dipole power spectrum,\n      - dominant Raman wavenumber from polarizability power spectrum,\n      - electron-phonon coupling g_Q = k / sqrt(m).\n    Returns list [nu_vib_cm1, nu_IR_cm1, nu_Raman_cm1, gQ].\n    \"\"\"\n    m_amu, nu_cm1, A_ang, q_eff, alpha1, k_eV_per_A = params\n    series = synthesize_time_series(n_samples, dt_fs, nu_cm1, A_ang, q_eff, alpha1)\n    dt_s = dt_fs * 1e-15\n\n    # Vibrational spectrum from velocity\n    freqs_v, power_v = rfft_power_spectrum(series[\"v\"], dt_s)\n    vib_peak_cm1 = dominant_peak_wavenumber(freqs_v, power_v)\n\n    # IR intensity: (2*pi*f)^2 * power_spectrum(mu)\n    freqs_mu, power_mu = rfft_power_spectrum(series[\"mu\"], dt_s)\n    omega_factor = (2.0 * np.pi * freqs_mu) ** 2\n    ir_intensity = omega_factor * power_mu\n    ir_peak_cm1 = dominant_peak_wavenumber(freqs_mu, ir_intensity)\n\n    # Raman intensity: power_spectrum(alpha)\n    freqs_a, power_a = rfft_power_spectrum(series[\"alpha\"], dt_s)\n    raman_peak_cm1 = dominant_peak_wavenumber(freqs_a, power_a)\n\n    # Electron-phonon coupling in eV/(A * sqrt(amu))\n    gQ = k_eV_per_A / np.sqrt(m_amu)\n\n    # Rounding as specified\n    vib_peak_cm1 = float(np.round(vib_peak_cm1, 1))\n    ir_peak_cm1 = float(np.round(ir_peak_cm1, 1))\n    raman_peak_cm1 = float(np.round(raman_peak_cm1, 1))\n    gQ = float(np.round(gQ, 6))\n\n    return [vib_peak_cm1, ir_peak_cm1, raman_peak_cm1, gQ]\n\ndef solve():\n    # Global settings\n    dt_fs = 0.5\n    n_samples = 65536\n\n    # Test suite cases: (m_amu, nu_cm1, A_ang, q_eff, alpha1, k_eV_per_A)\n    test_cases = [\n        (12.0, 1600.0, 0.02, 1.0, 2.0, 0.5),\n        (1.0, 3000.0, 0.01, 0.0, 1.5, 0.0),\n        (32.0, 50.0, 0.03, 0.8, 0.0, -0.2),\n    ]\n\n    results = []\n    for case in test_cases:\n        res = compute_observable_peaks(n_samples, dt_fs, case)\n        results.append(res)\n\n    # Exact required format: single line list of lists\n    # We will ensure formatting with default Python list string representation.\n    print(str(results).replace(\" \", \"\"))\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2872074"}, {"introduction": "对于光化学、电荷转移等过程，单一势能面的Born-Oppenheimer近似会失效，必须考虑非绝热效应。本练习将带您深入非绝热动力学的核心，通过数值求解一个经典的双态模型（Landau-Zener模型）的含时薛定谔方程，来模拟电子态之间的跃迁。通过将数值解与精确的解析解进行对比，您将对非绝热跃迁发生的条件和概率建立起具体而深刻的理解，这为掌握更高级的“最少切换表面跳跃”（FSSH）等方法奠定了基础 [@problem_id:2872065]。", "problem": "考虑一个双态非绝热交叉模型，该模型用于阐释“从头算”(ab initio)分子动力学中的最少切换表面跳跃 (FSSH) 算法。令单个核坐标 $x$ 以恒定速度 $v$ 经典地通过一个交叉区域，即 $x(t) = x_{0} + v t$，其中 $t \\in \\mathbb{R}$。在一个透热基 $\\{ \\lvert 1 \\rangle, \\lvert 2 \\rangle \\}$ 中，取含时电子哈密顿量为\n$$\n\\hat{H}(t) =\n\\begin{pmatrix}\n\\frac{\\Delta(t)}{2} & V \\\\\nV & -\\frac{\\Delta(t)}{2}\n\\end{pmatrix}, \\quad \\Delta(t) = \\kappa\\, v\\, t,\n$$\n其中 $V$ 是一个恒定的透热耦合，$\\kappa$ 是透热能量斜率相对于 $x$ 的恒定差值，因此有 $d\\Delta/dt = \\kappa v$。全文假设使用原子单位，即 $\\hbar = 1$，能量单位为哈特里 (Hartree)，时间单位为原子时间单位，距离单位为玻尔 (Bohr)。\n\n耦合的含时电子振幅 $c(t) = (c_{1}(t), c_{2}(t))^{\\top}$ 的演化遵循含时薛定谔方程\n$$\n\\mathrm{i}\\, \\frac{d}{dt}\\, c(t) = \\hat{H}(t)\\, c(t).\n$$\n通过对角化 $\\hat{H}(t)$ 来定义其瞬时绝热本征态 $\\{ \\lvert \\phi_{-}(t) \\rangle, \\lvert \\phi_{+}(t) \\rangle \\}$，其本征值为 $E_{-}(t) \\le E_{+}(t)$。考虑从大的负时间到大的正时间的单次穿越过程，系统在足够早的时刻 $t = -T$ 初始化于较低的绝热态，其中 $T$ 的选择需满足 $\\lvert \\Delta(-T) \\rvert \\gg \\lvert V \\rvert$，在 $t=+T$ 时同样如此。为确保具体性和可复现性，设\n$$\nT \\equiv R_{\\mathrm{end}} \\, \\frac{\\max(V, V_{\\mathrm{floor}})}{\\lvert \\kappa v \\rvert}, \\quad R_{\\mathrm{end}} = 20, \\quad V_{\\mathrm{floor}} = 10^{-4}.\n$$\n\n任务：\n- 仅从含时薛定谔方程、上述绝热/透热定义以及恒定速度 $v$ 的单次线性交叉假设出发，推导绝热态之间单次穿越的非绝热跃迁概率的解析表达式（即给定初始状态为 $\\lvert \\phi_{-}(-T) \\rangle$，最终处于 $\\lvert \\phi_{+}(+T) \\rangle$ 上的概率）。您的推导必须从给定的基本定义开始，通过逻辑上完备的简化，将其归约为一个具有线性时间依赖性的可解双能级问题；不得直接套用作为目标结果的任何公式。\n- 设计一个算法，该算法 (i) 在初始条件为 $c(-T) = \\lvert \\phi_{-}(-T) \\rangle$ 的情况下，对双能级系统从 $t=-T$ 到 $t=+T$ 数值积分求解含时薛定谔方程，并且 (ii) 计算最终的非绝热跃迁概率 $P_{\\mathrm{num}} = \\lvert \\langle \\phi_{+}(+T) \\vert c(+T) \\rangle \\rvert^{2}$。同时，计算您推导出的解析预测值 $P_{\\mathrm{LZ}}$。\n- 您的程序必须为每个测试用例输出概率对 $[P_{\\mathrm{num}}, P_{\\mathrm{LZ}}]$。最终程序输出必须是单行，包含一个由方括号括起来的逗号分隔列表，其中每个元素是双元素列表 $[P_{\\mathrm{num}},P_{\\mathrm{LZ}}]$。输出行中不得有任何空格。每个浮点数必须四舍五入到小数点后恰好六位。\n\n角度单位不适用。所有输出均为 $[0,1]$ 范围内的无量纲概率。\n\n测试套件：\n使用以下四组参数集 $(V,\\kappa,v)$，均以上述原子单位表示：\n- 情况 A（边界情况，精确透热交叉）：$(V,\\kappa,v) = (0, 0.05, 0.3)$。\n- 情况 B（快速穿越，弱耦合）：$(V,\\kappa,v) = (0.01, 0.02, 0.5)$。\n- 情况 C（中等穿越速度，强耦合）：$(V,\\kappa,v) = (0.1, 0.02, 0.5)$。\n- 情况 D（慢速穿越，中等耦合）：$(V,\\kappa,v) = (0.02, 0.05, 0.01)$。\n\n您的程序应生成一行输出，其中包含按指定顺序排列的 A、B、C、D 四种情况的结果。每个情况的答案必须是一个双元素列表 $[P_{\\mathrm{num}}, P_{\\mathrm{LZ}}]$，其中每个条目都是一个四舍五入到小数点后六位的浮点数，整个输出行为这四个列表组成的单个列表，且无空格，例如：$[[P_{\\mathrm{num,A}},P_{\\mathrm{LZ,A}}],[P_{\\mathrm{num,B}},P_{\\mathrm{LZ,B}}],[P_{\\mathrm{num,C}},P_{\\mathrm{LZ,C}}],[P_{\\mathrm{num,D}},P_{\\mathrm{LZ,D}}]]$。", "solution": "我们从透热基中电子振幅的含时薛定谔方程开始，\n$$\n\\mathrm{i}\\, \\frac{d}{dt}\n\\begin{pmatrix}\nc_{1}(t)\\\\ c_{2}(t)\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\frac{\\Delta(t)}{2} & V \\\\\nV & -\\frac{\\Delta(t)}{2}\n\\end{pmatrix}\n\\begin{pmatrix}\nc_{1}(t)\\\\ c_{2}(t)\n\\end{pmatrix},\n\\quad \\Delta(t) = \\kappa v t,\n$$\n其中使用原子单位，因此 $\\hbar = 1$。绝热态定义为哈密顿量的瞬时本征矢量，\n$$\n\\hat{H}(t) \\lvert \\phi_{\\pm}(t) \\rangle = E_{\\pm}(t) \\lvert \\phi_{\\pm}(t) \\rangle,\\quad\nE_{\\pm}(t) = \\pm \\sqrt{ \\left( \\frac{\\Delta(t)}{2} \\right)^{2} + V^{2} }.\n$$\n初始条件为 $c(-T) = \\lvert \\phi_{-}(-T) \\rangle$，若 $\\lvert \\Delta(-T) \\rvert \\gg \\lvert V \\rvert$ 则此条件是明确的；同样，若 $\\lvert \\Delta(+T) \\rvert \\gg \\lvert V \\rvert$，则 $\\lvert \\phi_{+}(+T) \\rangle$ 也是良定义的。因为 $x(t)$ 是时间 $t$ 的线性函数，速度 $v$ 恒定，所以透热能隙 $\\Delta(t)$ 也是 $t$ 的线性函数，斜率为 $d\\Delta/dt = \\kappa v$。\n\n为了推导单次穿越的非绝热跃迁概率的闭合形式解，我们将该问题映射到经典的 Landau–Zener 模型。经典的双能级含时哈密顿量是\n$$\n\\hat{H}_{\\mathrm{LZ}}(t) = \n\\begin{pmatrix}\n\\alpha t/2 & V \\\\\nV & -\\alpha t/2\n\\end{pmatrix},\n$$\n其中 $\\alpha = d\\Delta/dt$。这正是我们的模型，其中 $\\alpha = \\kappa v$。在 $t \\to \\pm \\infty$ 的渐近极限下，绝热态和透热态在相差一个相位因子的意义上是一致的。Landau–Zener 问题有以抛物柱函数表示的精确解，对于从 $t \\to -\\infty$ 时的较低绝热态开始的单次线性穿越，绝热态之间的非绝热跃迁概率由下式给出\n$$\nP_{\\mathrm{LZ}} = \\exp\\!\\left( - 2 \\pi \\, \\Gamma \\right), \\quad \\Gamma \\equiv \\frac{V^{2}}{\\hbar \\, \\lvert d\\Delta/dt \\rvert}.\n$$\n在原子单位中 $\\hbar = 1$，且 $d\\Delta/dt = \\kappa v$，该式可简化为\n$$\nP_{\\mathrm{LZ}} = \\exp\\!\\left( - \\frac{2 \\pi \\, V^{2}}{ \\lvert \\kappa v \\rvert } \\right).\n$$\n这个概率是在绝热态之间发生跃迁的概率（即，从 $\\lvert \\phi_{-}(-\\infty) \\rangle$ 开始，最终处于 $\\lvert \\phi_{+}(+\\infty) \\rangle$ 上的概率）。在透热图像中，这是指在穿越交叉点时保持在同一透热态上的概率；这种对应关系源于绝热特性在避开交叉点处的交换。其极限行为与物理直觉一致：当 $\\lvert \\kappa v \\rvert \\to \\infty$（瞬时穿越）或 $V \\to 0$ 时，$P_{\\mathrm{LZ}} \\to 1$；当 $\\lvert \\kappa v \\rvert \\to 0$（绝热穿越）或 $V \\to \\infty$ 时，$P_{\\mathrm{LZ}} \\to 0$。\n\n用于数值验证的算法设计：\n- 将哈密顿量 $\\hat{H}(t)$ 表示为一个函数，该函数返回一个 $2 \\times 2$ 的复厄米矩阵，其中 $\\Delta(t) = \\kappa v t$。\n- 根据参数确定性地计算 $T$：\n$$\nT = R_{\\mathrm{end}} \\, \\frac{\\max(V, V_{\\mathrm{floor}})}{\\lvert \\kappa v \\rvert}, \\quad R_{\\mathrm{end}} = 20, \\quad V_{\\mathrm{floor}} = 10^{-4}.\n$$\n这确保了当 $V>0$ 时 $\\lvert \\Delta(\\pm T) \\rvert / (2 \\lvert V \\rvert) \\gtrsim R_{\\mathrm{end}}/2$，从而使得边界处的非对角混合可以忽略不计，并且在 $V=0$ 的特殊情况下保持有限值。\n- 通过对角化 $\\hat{H}(-T)$ 计算初始绝热态 $\\lvert \\phi_{-}(-T) \\rangle$（使用厄米本征求解器获得与本征值 $E_{-}(-T) \\le E_{+}(-T)$ 对应的标准正交本征矢量），并设 $c(-T) = \\lvert \\phi_{-}(-T) \\rangle$。\n- 使用高精度的显式 Runge–Kutta 方法将含时薛定谔方程 $\\mathrm{i}\\, \\dot{c}(t) = \\hat{H}(t) c(t)$ 从 $t=-T$ 积分到 $t=+T$。在代码中，设 $c'(t) = -\\mathrm{i}\\, \\hat{H}(t) c(t)$，并使用选定的绝对和相对容差（例如，$\\mathrm{rtol} = 10^{-9}$，$\\mathrm{atol} = 10^{-12}$）进行演化以控制幺正性误差。对于这些参数，哈密顿量是平滑的，系统是非刚性的；误差控制将概率保持在数值容差范围内。\n- 在 $t=+T$ 时，对角化 $\\hat{H}(+T)$ 以获得绝热本征矢量。选择与较大本征值 $E_{+}(+T)$ 对应的上绝热本征矢量 $\\lvert \\phi_{+}(+T) \\rangle$，并计算\n$$\nP_{\\mathrm{num}} = \\left\\lvert \\langle \\phi_{+}(+T) \\vert c(+T) \\rangle \\right\\rvert^{2}.\n$$\n- 计算解析的 Landau–Zener 预测值\n$$\nP_{\\mathrm{LZ}} = \\exp\\!\\left( - \\frac{2 \\pi \\, V^{2}}{ \\lvert \\kappa v \\rvert } \\right).\n$$\n- 对于每个测试用例 $(V,\\kappa,v)$，返回数值对 $[P_{\\mathrm{num}}, P_{\\mathrm{LZ}}]$，并四舍五入到六位小数。按指定顺序组合四个数值对，并以精确的括号格式和无空格的单行形式打印。\n\n边界情况与覆盖范围：\n- 情况 A 中 $V=0$，是一个精确的透热交叉。数值积分得出 $P_{\\mathrm{num}} = 1$，因为状态保持在其初始透热分量上，该分量在 $t=+T$ 时映射到相反的绝热态；解析公式给出 $P_{\\mathrm{LZ}} = \\exp(0) = 1$。\n- 情况 B 测试了弱耦合下的快速穿越，得到接近于 $1$ 的 $P_{\\mathrm{LZ}}$；数值积分结果应与之匹配。\n- 情况 C 测试了中等速度下的强耦合，得到较小的 $P_{\\mathrm{LZ}}$；数值计算能捕捉到这种微小的转移。\n- 情况 D 测试了慢速穿越，同样得到较小的 $P_{\\mathrm{LZ}}$；长的演化区间确保了在边界处的绝热解耦。\n\n该设计将基本原理（含时薛定谔动力学、绝热/透热变换、线性交叉近似）与一个可验证的数值算法以及一个基于精确 Landau–Zener 解的解析基准相结合，而 Landau–Zener 解是线性化轨迹下 FSSH 类型框架中跳跃概率的标准基础。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef landau_zener_probability(V, kappa, v):\n    # Atomic units: ħ = 1\n    rate = abs(kappa * v)\n    # Avoid division by zero; if rate == 0, treat as infinitely slow (adiabatic) -> P_LZ = exp(-∞) = 0 if V>0, or 1 if V=0.\n    if rate == 0.0:\n        return 1.0 if V == 0.0 else 0.0\n    return float(np.exp(-2.0 * np.pi * (V ** 2) / rate))\n\ndef hamiltonian(t, V, kappa, v):\n    Delta = kappa * v * t\n    return np.array([[0.5 * Delta, V],\n                     [V, -0.5 * Delta]], dtype=np.complex128)\n\ndef adiabatic_eigensystem(t, V, kappa, v):\n    H = hamiltonian(t, V, kappa, v)\n    # eigh returns ascending eigenvalues and the corresponding eigenvectors as columns\n    evals, evecs = np.linalg.eigh(H)\n    return evals, evecs\n\ndef propagate_two_level(V, kappa, v, R_end=20.0, V_floor=1e-4):\n    rate = abs(kappa * v)\n    if rate == 0.0:\n        # No time dependence; if V==0, Hamiltonian is identically zero -> trivial.\n        # Define T finite to avoid zero interval; choose T=1 for definiteness.\n        T = 1.0\n    else:\n        T = R_end * max(V, V_floor) / rate\n\n    t0 = -T\n    tf = +T\n\n    # Initial state: lower adiabatic eigenvector at t0\n    evals0, evecs0 = adiabatic_eigensystem(t0, V, kappa, v)\n    # Lower is index 0 due to ascending order\n    c0 = evecs0[:, 0].astype(np.complex128)\n\n    def rhs(t, y):\n        H = hamiltonian(t, V, kappa, v)\n        return (-1j) * H.dot(y)\n\n    # Integrate Schrödinger equation\n    sol = solve_ivp(\n        fun=rhs,\n        t_span=(t0, tf),\n        y0=c0,\n        method=\"RK45\",\n        rtol=1e-9,\n        atol=1e-12,\n        dense_output=False,\n        vectorized=False,\n        max_step=np.inf\n    )\n\n    c_tf = sol.y[:, -1]\n\n    # Final adiabatic upper state at tf\n    evals_f, evecs_f = adiabatic_eigensystem(tf, V, kappa, v)\n    # Upper is index 1\n    phi_plus = evecs_f[:, 1]\n\n    # Probability to be on upper adiabatic state\n    P_num = float(abs(np.vdot(phi_plus, c_tf))**2)\n\n    # Analytic Landau-Zener\n    P_LZ = landau_zener_probability(V, kappa, v)\n\n    # Numerical errors may slightly push outside [0,1]\n    P_num = min(max(P_num, 0.0), 1.0)\n    return P_num, P_LZ\n\ndef format_results(results):\n    # Format as [[a,b],[c,d],...] with exactly six decimals and no spaces\n    inner = []\n    for a, b in results:\n        inner.append(f\"[{a:.6f},{b:.6f}]\")\n    return \"[\" + \",\".join(inner) + \"]\"\n\ndef solve():\n    # Test cases: (V, kappa, v) in atomic units\n    test_cases = [\n        (0.0, 0.05, 0.3),   # Case A: exact diabatic crossing\n        (0.01, 0.02, 0.5),  # Case B: fast passage, weak coupling\n        (0.1, 0.02, 0.5),   # Case C: stronger coupling\n        (0.02, 0.05, 0.01), # Case D: slow passage\n    ]\n\n    results = []\n    for V, kappa, v in test_cases:\n        P_num, P_LZ = propagate_two_level(V, kappa, v)\n        results.append((P_num, P_LZ))\n\n    print(format_results(results))\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2872065"}]}