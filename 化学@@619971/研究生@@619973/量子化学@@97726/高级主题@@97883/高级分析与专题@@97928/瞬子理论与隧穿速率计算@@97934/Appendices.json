{"hands_on_practices": [{"introduction": "在有限温度的瞬子理论中，隧穿速率与虚时中的周期性路径有关。最基本也最重要的这类路径是在势垒顶端附近的小振幅振荡，通常被称为“弹跳”（bounce）。这项练习将引导你推导这个在抛物线势垒顶部的周期性轨道的本征周期，它完全由势垒的曲率决定。通过求解这个基本问题[@problem_id:2898615]，你将掌握隧穿的特征时间尺度 $T_b = 2\\pi/\\omega_b$ 是如何从势能面的静态属性中产生的，这是理解半经典速率理论的基石。", "problem": "考虑一个质量为 $m$ 的一维反应坐标，在势垒中运动。该势垒在其最大值 $x^{\\ddagger}$ 附近被局域近似为二次型 $V(x) \\approx V^{\\ddagger} - \\frac{1}{2}m\\omega_{b}^{2}(x - x^{\\ddagger})^{2}$，其中 $\\omega_{b}>0$ 是垒顶曲率频率。在适用于热激活隧穿的半经典瞬子理论的虚时（欧几里得）表述中，欧几里得作用量为 $S_{E}[x]=\\int \\mathrm{d}\\tau\\,\\left(\\frac{m}{2}\\dot{x}^{2}+V(x)\\right)$，相应的欧拉-拉格朗日方程为 $m\\ddot{x}=\\partial V/\\partial x$，其中上方的点表示对虚时 $\\tau$ 的导数。假设小振幅运动局限于垒顶谐振区域，并施加代表有限温度路径的周期性边界条件 $x(\\tau+\\beta\\hbar)=x(\\tau)$，其中 $\\beta=(k_{B}T)^{-1}$。\n\n仅从这些基本定义出发，推导在平移坐标 $y(\\tau)=x(\\tau)-x^{\\ddagger}$ 下的欧几里得运动方程，求解该方程以获得瞬子轨迹 $x(\\tau)$ 的闭合形式（可带有任意振幅和相位），并确定其本原周期 $T_{b}$（解的最小正周期）。清晰地陈述将非平庸解与虚时间隔 $\\beta\\hbar$ 联系起来的周期性条件，并用 $\\omega_{b}$ 表示本原周期。\n\n你的最终答案只需报告本原周期 $T_{b}$。将其表示为 $\\omega_{b}$ 的符号函数。最终的方框答案中不要包含单位。", "solution": "问题陈述被认为是有效的。这是一个关于虚时中周期轨道的半经典速率理论中的标准、适定问题。我们将按要求进行推导。\n\n出发点是问题中给出的在势垒最大值 $x^{\\ddagger}$ 附近的势能面：\n$$\nV(x) \\approx V^{\\ddagger} - \\frac{1}{2}m\\omega_{b}^{2}(x - x^{\\ddagger})^{2}\n$$\n问题陈述指出，欧几里得运动方程为 $m\\ddot{x} = \\partial V/\\partial x$，其中上方的点表示对虚时 $\\tau$ 的导数。\n\n首先，我们计算力项 $\\partial V/\\partial x$。势能对坐标 $x$ 的导数为：\n$$\n\\frac{\\partial V}{\\partial x} = \\frac{\\partial}{\\partial x} \\left[ V^{\\ddagger} - \\frac{1}{2}m\\omega_{b}^{2}(x - x^{\\ddagger})^{2} \\right]\n$$\n常数项 $V^{\\ddagger}$ 在微分后消失。对二次项应用链式法则得到：\n$$\n\\frac{\\partial V}{\\partial x} = - \\frac{1}{2}m\\omega_{b}^{2} \\cdot 2(x - x^{\\ddagger}) \\cdot \\frac{\\partial}{\\partial x}(x - x^{\\ddagger}) = -m\\omega_{b}^{2}(x - x^{\\ddagger})\n$$\n将此结果代入运动方程得到：\n$$\nm\\ddot{x} = -m\\omega_{b}^{2}(x - x^{\\ddagger})\n$$\n根据题目要求，我们使用平移坐标 $y(\\tau) = x(\\tau) - x^{\\ddagger}$。由于 $x^{\\ddagger}$ 是一个常数， $y(\\tau)$ 对 $\\tau$ 的导数为 $\\dot{y} = \\dot{x}$ 和 $\\ddot{y} = \\ddot{x}$。通过代换，运动方程可以用 $y(\\tau)$ 重写为：\n$$\nm\\ddot{y} = -m\\omega_{b}^{2}y\n$$\n除以质量 $m$（非零）可将方程简化为：\n$$\n\\ddot{y}(\\tau) + \\omega_{b}^{2}y(\\tau) = 0\n$$\n这是一个标准的简谐振子二阶线性常微分方程。其物理解释是，在虚时中穿越势垒的运动等效于在倒置势阱 $-V(x)$ 中的振荡运动。\n\n该方程的通解是一个正弦函数。以振幅-相位形式，可以写为：\n$$\ny(\\tau) = A \\cos(\\omega_{b}\\tau + \\phi)\n$$\n其中 $A$ 是振幅，$\\phi$ 是相位常数。这是两个任意的积分常数。\n\n因此，在原始坐标系中的轨迹 $x(\\tau)$，即代表垒顶的周期轨道或“瞬子”，为：\n$$\nx(\\tau) = x^{\\ddagger} + y(\\tau) = x^{\\ddagger} + A \\cos(\\omega_{b}\\tau + \\phi)\n$$\n问题要求确定该解的*本原周期* $T_{b}$。本原周期是使 $x(\\tau + T) = x(\\tau)$ 对所有 $\\tau$ 成立的最小正值 $T$。该条件等价于 $y(\\tau + T) = y(\\tau)$。对于函数 $y(\\tau) = A \\cos(\\omega_{b}\\tau + \\phi)$，在一个周期内，余弦函数的自变量必须改变 $2\\pi$ 的整数倍。对于最小周期 $T_{b}$，该变化必须恰好是 $2\\pi k$（其中 $k$ 为整数），并且为了得到最小正周期，取 $k=1$：\n$$\n\\omega_{b}(\\tau + T_{b}) + \\phi = (\\omega_{b}\\tau + \\phi) + 2\\pi k\n$$\n对于最小正周期，有 $k=1$。\n$$\n\\omega_{b}T_{b} = 2\\pi\n$$\n求解本原周期 $T_{b}$ 得到：\n$$\nT_{b} = \\frac{2\\pi}{\\omega_{b}}\n$$\n该周期是势垒的内禀性质，完全由其曲率频率 $\\omega_{b}$ 决定。\n\n问题还提到了边界条件 $x(\\tau + \\beta\\hbar) = x(\\tau)$，该条件源于热速率的量子统计力学表述。为了在从 $\\tau=0$ 到 $\\tau=\\beta\\hbar$ 的虚时间隔内存在满足此周期性的非平庸解（$A \\neq 0$），该时间间隔的长度必须是本原周期 $T_{b}$ 的整数倍。因此，周期性条件为：\n$$\n\\beta\\hbar = n T_{b} = n \\frac{2\\pi}{\\omega_{b}}\n$$\n其中 $n$ 是一个正整数，$n \\in \\{1, 2, 3, \\dots\\}$。在由 $\\beta = (k_B T)^{-1}$ 指定的给定温度 $T$ 下，只有当此条件能够满足时，这种周期解才存在。然而，问题只要求本原周期 $T_{b}$ 本身，它与温度无关。\n\n最终结果如题所求，仅依赖于 $\\omega_{b}$。", "answer": "$$\\boxed{\\frac{2\\pi}{\\omega_{b}}}$$", "id": "2898615"}, {"introduction": "真实的化学反应很少只涉及单一坐标。这项练习将我们带入一个更现实的二维势能面，探索瞬子路径——即“最可几隧穿路径”——的行为。你将发现，该路径并非简单地沿着最小能量路径，而是走出一条弯曲的轨迹以“切角”通过势垒。通过微扰论的方法解决这个问题[@problem_id:2898633]，你将亲身体验到瞬子理论如何揭示这一关键的量子效应，即系统会选择穿越能量更高但路程更短的路径，这与经典直觉截然不同。", "problem": "考虑一个在二维空间中的核隧穿事件，其在虚时间中由欧几里得作用量描述：\n$$\nS_{\\mathrm{E}}[x(\\tau),y(\\tau)] \\;=\\; \\int_{-\\infty}^{+\\infty} \\mathrm{d}\\tau \\left[ \\frac{m_{x}}{2}\\,\\dot{x}(\\tau)^{2} \\;+\\; \\frac{m_{y}}{2}\\,\\dot{y}(\\tau)^{2} \\;+\\; V\\!\\big(x(\\tau),y(\\tau)\\big) \\right],\n$$\n其中 $m_{x}$ 和 $m_{y}$ 分别是沿 $x$ 和 $y$ 方向的质量，势能面为\n$$\nV(x,y) \\;=\\; U(x) \\;+\\; \\frac{k}{2}\\,\\big(y - \\alpha x^{2}\\big)^{2}, \\qquad U(x) \\;=\\; \\frac{\\lambda}{4}\\,\\big(x^{2}-a^{2}\\big)^{2}.\n$$\n假设系统通过一个瞬子（虚时间经典路径）在对称的极小值点 $(x,y)=(-a,\\alpha a^{2})$ 和 $(x,y)=(+a,\\alpha a^{2})$ 之间隧穿，该瞬子满足在边界条件 $x(\\tau\\to\\pm\\infty)=\\pm a$ 和 $y(\\tau\\to\\pm\\infty)=\\alpha a^{2}$ 下使 $S_{\\mathrm{E}}$ 最小化的欧拉-拉格朗日方程。研究需在弱几何耦合 $|\\alpha|\\ll 1$ 和刚性横向模式 $k \\gg m_{y}\\Omega^{2}$ 的条件下进行，其中 $\\Omega$ 是裸双势阱 $U(x)$ 中沿 $x$ 方向的一维瞬子的特征频率标度。\n\n1. 从欧几里得作用量及其欧拉-拉格朗日方程出发，在所述刚度假设下，确定瞬子路径 $\\big(x(\\tau),y(\\tau)\\big)$ 至 $\\alpha$ 的领头阶。您的推导必须从作用量开始，并依据第一性原理进行，不得援引任何现成的瞬子公式。\n\n2. 使用您的结果，给出 $y(\\tau)$ 关于 $m_{x}$、$\\lambda$、$a$、$\\alpha$ 和 $\\tau$ 的显式闭式表达式。\n\n3. 在相同的第一性原理框架下，通过将在瞬子路径上遇到的势与在相同 $x(\\tau)$ 但受约束的直线路径 $y(\\tau)=0$ 上遇到的势（在 $\\alpha$ 的领头非零阶上）进行比较，简要论证此二维瞬子路径如何“绕过”由横向限制产生的更高势垒区域。\n\n请将项目2中要求的单个解析表达式作为您的最终答案。不需要数值计算，最终表达式中也不应包含单位。", "solution": "该问题陈述已经过验证，被认为是科学上合理的、适定的、内部一致的，并且在给定的近似条件下为微扰解提供了充分的规定。它代表了理论化学物理中一个标准的、非平凡的问题，涉及多维势能面上基于瞬子的隧穿速率。因此，我们可以进行推导。\n\n出发点是二维系统的欧几里得作用量 $S_{\\mathrm{E}}$，其坐标为 $x(\\tau)$ 和 $y(\\tau)$：\n$$\nS_{\\mathrm{E}}[x(\\tau),y(\\tau)] \\;=\\; \\int_{-\\infty}^{+\\infty} \\mathrm{d}\\tau \\, L_{\\mathrm{E}}\\big(x, \\dot{x}, y, \\dot{y}\\big)\n$$\n其中欧几里得拉格朗日量 $L_{\\mathrm{E}}$ 为\n$$\nL_{\\mathrm{E}} \\;=\\; \\frac{m_{x}}{2}\\,\\dot{x}^{2} \\;+\\; \\frac{m_{y}}{2}\\,\\dot{y}^{2} \\;+\\; V(x,y)\n$$\n且势为\n$$\nV(x,y) \\;=\\; \\frac{\\lambda}{4}\\,\\big(x^{2}-a^{2}\\big)^{2} \\;+\\; \\frac{k}{2}\\,\\big(y - \\alpha x^{2}\\big)^{2}.\n$$\n瞬子路径是使该作用量最小化的经典轨迹。这样的路径必须满足欧拉-拉格朗日方程：\n$$\n\\frac{d}{d\\tau}\\frac{\\partial L_{\\mathrm{E}}}{\\partial\\dot{q}_{i}} - \\frac{\\partial L_{\\mathrm{E}}}{\\partial q_{i}} = 0 \\quad \\implies \\quad m_i \\ddot{q}_i = \\frac{\\partial V}{\\partial q_i},\n$$\n其中 $q_i$ 代表 $x$ 或 $y$。这些方程描述了一个经典粒子在倒置势 $-V(x,y)$ 中的运动。将此应用于我们的系统，得到两个耦合的运动方程：\n$$\nm_{x}\\ddot{x} \\;=\\; \\frac{\\partial V}{\\partial x} \\;=\\; \\lambda x(x^{2}-a^{2}) - 2k\\alpha x(y - \\alpha x^{2})\n$$\n$$\nm_{y}\\ddot{y} \\;=\\; \\frac{\\partial V}{\\partial y} \\;=\\; k(y - \\alpha x^{2})\n$$\n我们的任务是在弱耦合 $|\\alpha| \\ll 1$ 和刚性横向模式 $k \\gg m_{y}\\Omega^{2}$ 的条件下解这些方程。这表明可以采用微扰方法，将解按 $\\alpha$ 的幂次展开。令 $x(\\tau) = x_{0}(\\tau) + O(\\alpha)$ 及 $y(\\tau) = y_{0}(\\tau) + \\alpha y_{1}(\\tau) + O(\\alpha^{2})$。\n\n在 $\\alpha$ 的零阶（$\\alpha=0$），方程解耦：\n$$\nm_{x}\\ddot{x}_{0} \\;=\\; \\lambda x_{0}(x_{0}^{2}-a^{2})\n$$\n$$\nm_{y}\\ddot{y}_{0} \\;=\\; k y_{0}\n$$\n瞬子的边界条件是 $x(\\tau \\to \\pm\\infty) = \\pm a$ 和 $y(\\tau \\to \\pm\\infty) = \\alpha a^{2}$。在 $\\alpha$ 的零阶，这些条件变为 $x_{0}(\\tau \\to \\pm\\infty) = \\pm a$ 和 $y_{0}(\\tau \\to \\pm\\infty) = 0$。对于 $y_0$ 的方程，在这些边界条件下仅有平凡解 $y_{0}(\\tau) = 0$。\n$x_{0}$ 的方程描述了一个质量为 $m_x$、总能量为零的经典粒子在倒置势 $-U(x_{0}) = -\\frac{\\lambda}{4}(x_{0}^{2}-a^{2})^{2}$ 中的运动。该运动的能量守恒为 $\\frac{1}{2}m_{x}\\dot{x}_{0}^{2} - U(x_{0}) = 0$，这给出：\n$$\n\\frac{1}{2}m_{x}\\dot{x}_{0}^{2} \\;=\\; \\frac{\\lambda}{4}(x_{0}^{2}-a^{2})^{2}\n$$\n取平方根并分离变量，我们得到：\n$$\n\\dot{x}_{0} \\;=\\; \\sqrt{\\frac{\\lambda}{2m_{x}}}(a^{2}-x_{0}^{2}) \\quad \\implies \\quad \\int \\frac{\\mathrm{d}x_{0}}{a^{2}-x_{0}^{2}} = \\sqrt{\\frac{\\lambda}{2m_{x}}} \\int \\mathrm{d}\\tau\n$$\n积分并设瞬子中心在 $\\tau=0$（即 $x_{0}(0)=0$），得到：\n$$\n\\frac{1}{a} \\arctanh\\left(\\frac{x_{0}}{a}\\right) = \\sqrt{\\frac{\\lambda}{2m_{x}}} \\tau\n$$\n解出 $x_{0}(\\tau)$，我们找到一维瞬子解：\n$$\nx_{0}(\\tau) \\;=\\; a \\tanh\\left(a\\sqrt{\\frac{\\lambda}{2m_{x}}} \\tau\\right)\n$$\n这样就完成了零阶解。该瞬子的特征频率标度为 $\\Omega_{0} = a\\sqrt{\\lambda/(2m_x)}$，对应于问题陈述中提到的 $\\Omega$。\n\n现在我们确定路径 $y(\\tau)$ 至 $\\alpha$ 的领头阶。我们考察 $y(\\tau)$ 的方程：\n$$\nm_{y}\\ddot{y} - k y = -k \\alpha x^{2}\n$$\n在领头阶，我们可以将 $x(\\tau) \\approx x_{0}(\\tau)$ 代入右侧，将其视为一个驱动项。该方程变为关于 $y(\\tau)$ 的一个线性非齐次常微分方程：\n$$\nm_{y}\\ddot{y} - k y \\approx -k \\alpha x_{0}(\\tau)^{2}\n$$\n给定条件为刚性横向模式，$k \\gg m_{y}\\Omega^{2}$。我们来分析 $y$ 的方程中各项的量级。右侧的驱动项在瞬子的时间标度上变化，即 $\\sim 1/\\Omega_{0}$。因此，我们可以估计 $\\ddot{y} \\sim \\Omega_{0}^{2} y$。方程的各项为 $m_{y}\\Omega_{0}^{2}y$ 和 $ky$。刚度条件 $k \\gg m_{y}\\Omega_{0}^{2}$ 意味着 $|m_{y}\\ddot{y}| \\ll |ky|$。因此，$m_{y}\\ddot{y}$ 项在领头阶可以被忽略。这是一个绝热近似：快的 $y$ 运动会迅速适应 $x$ 坐标的慢变化。\n$y$ 的方程简化为：\n$$\n-k y(\\tau) \\approx -k \\alpha x_{0}(\\tau)^{2}\n$$\n这给出了 $y(\\tau)$ 在 $\\alpha$ 的领头阶上的解：\n$$\ny(\\tau) \\approx \\alpha x_{0}(\\tau)^{2} = \\alpha \\left[a \\tanh\\left(a\\sqrt{\\frac{\\lambda}{2m_{x}}} \\tau\\right)\\right]^{2}\n$$\n该解满足边界条件 $y(\\tau \\to \\pm\\infty) = \\alpha a^{2} \\tanh^{2}(\\pm\\infty) = \\alpha a^{2}$。结合我们的结果，领头阶的瞬子路径为 $(x_0(\\tau), \\alpha x_0(\\tau)^2)$。\n\n$y(\\tau)$ 的显式闭式表达式为：\n$$\ny(\\tau) = \\alpha a^{2} \\tanh^{2}\\left(a\\sqrt{\\frac{\\lambda}{2m_{x}}} \\tau\\right)\n$$\n这就是项目2所要求的答案。\n\n对于项目3，我们必须论证该路径如何绕过更高势垒的区域。我们比较瞬子路径上的势能 $V_{I}(\\tau)$ 和受约束的直线路径 $y(\\tau)=0$ 上的势能 $V_{S}(\\tau)$，两者都使用相同的 $x$ 坐标轨迹 $x_0(\\tau)$。\n对于瞬子路径 $(x_0(\\tau), \\alpha x_0(\\tau)^2)$，势中的项 $(y-\\alpha x^2)$ 变为 $(\\alpha x_0^2 - \\alpha x_0^2)=0$。因此，该路径上的势能就是一维双势阱势：\n$$\nV_{I}(\\tau) = V(x_0(\\tau), \\alpha x_0(\\tau)^2) = U(x_0(\\tau)) + 0 = \\frac{\\lambda}{4}(x_0(\\tau)^2 - a^2)^2\n$$\n对于直线路径 $(x_0(\\tau), 0)$，项 $(y-\\alpha x^2)$ 变为 $(0-\\alpha x_0^2)$。其势能为：\n$$\nV_{S}(\\tau) = V(x_0(\\tau), 0) = U(x_0(\\tau)) + \\frac{k}{2}(-\\alpha x_0(\\tau)^2)^2 = U(x_0(\\tau)) + \\frac{k\\alpha^2}{2} x_0(\\tau)^4\n$$\n比較兩者，$V_{S}(\\tau) = V_{I}(\\tau) + \\frac{k\\alpha^2}{2} x_0(\\tau)^4$。因为 $k > 0$，所以直线路径上的势总是大于或等于瞬子路径上的势。附加项 $\\frac{k\\alpha^2}{2} x_0(\\tau)^4$ 代表了偏离由 $y=\\alpha x^2$ 定义的谷底所带来的势能代价。瞬子路径通过跟随这个谷底来最小化作用量，从而“绕过”了在直线路径上会遇到的更高势能区域。这种选择是有利的，因为在刚性极限下（$k$ 很大），直线路径的势能代价远大于弯曲的瞬子路径所产生的动能代价 $\\frac{1}{2}m_y \\dot{y}^2$。", "answer": "$$\n\\boxed{\\alpha a^{2} \\tanh^{2}\\left(a \\sqrt{\\frac{\\lambda}{2m_{x}}} \\tau\\right)}\n$$", "id": "2898633"}, {"introduction": "对于复杂的势能面，瞬子路径的解析解极其罕见。这项练习将介绍一种适用于一般势垒的强大数值方法：将虚时路径离散化为一系列“珠子”组成的“环状聚合物”，并通过最小化欧几里得作用量来确定其形状。这项编程实践[@problem_id:2898586]指导你如何使用牛顿-拉夫逊（Newton-Raphson）方法来稳健地找到这个稳态路径。完成这项练习意味着你将掌握一种从抽象的路径积分理论到实用的计算化学研究的转化工具，能够解决更具挑战性的真实问题。", "problem": "您的任务是实现一个完整的程序，该程序构建一个在虚时中一维路径的欧几里得作用量的有限差分格点化（该路径被离散为 $P$ 个珠子），建立在周期性边界条件下珠子坐标的非线性定态条件，并使用 Newton–Raphson 方法求解这些条件。该程序必须能够处理固定珠子的约束，以强制实现对势垒的穿越，从而稳定一个非平凡的类瞬子路径。所有量均以原子单位表示，其中约化普朗克常数 $\\hbar$ 等于 $1$，质量以电子质量为单位，能量以哈特里（Hartree）为单位。\n\n从虚时中的定态作用量原理出发，考虑一维坐标 $x(\\tau)$ 在区间 $\\tau \\in [0, \\beta \\hbar]$ 上满足周期性边界条件 $x(0) = x(\\beta \\hbar)$，其中 $\\beta$ 是逆温度。使用一个包含 $P$ 个珠子的均匀网格，时间步长为 $\\Delta \\tau = \\beta \\hbar / P$，并将离散欧几里得作用量定义为给定势 $V(x)$ 的虚时作用量泛函的一致性有限差分近似。以此为基础，推导表示在周期性边界条件下珠子坐标的离散定态条件的非线性系统。然后，建立一个 Newton–Raphson 迭代来求解该系统，并带有可选的固定珠子约束，这些约束将指定的珠子索引固定在特定值上，从而将未知数减少为自由珠子。\n\n您的程序必须实现：\n- 一个通用例程，用于在给定一组珠子坐标 $\\{x_k\\}_{k=1}^P$、质量 $m$、逆温度 $\\beta$ 和势 $V(x)$ 的情况下，在环上计算离散欧几里得作用量 $S_{\\mathrm{E}}[\\{x_k\\}]$。\n- 一个通用例程，用于为自由珠子在周期性边界条件下的离散欧几里得作用量的定态条件组装非线性残差向量 $\\mathbf{F}(\\mathbf{x})$ 和雅可比矩阵 $\\mathbf{J}(\\mathbf{x})$，同时将固定珠子视为参数。\n- 一个带有回溯线搜索的 Newton–Raphson 求解器，用以减小残差的范数，并在残差范数的停止容差内收敛到解。\n- 三个测试用例（每个都在下面完整指定），生成一行输出，该输出汇总了所有用例请求的量。所有用例均使用原子单位并设置 $\\hbar = 1$。\n\n使用的势函数：\n- 谐振子势：$V(x) = \\frac{1}{2} k x^2$，其梯度 $V'(x)$ 和 Hessian 矩阵 $V''(x)$ 与此定义一致。\n- 对称双势阱：$V(x) = a (x^2 - b^2)^2$，其梯度 $V'(x)$ 和 Hessian 矩阵 $V''(x)$ 与此定义一致。\n\n数值要求：\n- 在由 $P$ 个珠子组成的环上使用周期性边界条件。\n- 允许将一组珠子索引 $\\mathcal{I}_{\\mathrm{fixed}} \\subset \\{0,1,\\dots,P-1\\}$ 固定在指定值上，所有其他珠子均视为自由变量。残差方程仅对自由珠子强制执行。在构建最近邻耦合时，适当地使用固定值。\n- 使用带有回溯线搜索的 Newton–Raphson 迭代来稳健地减小残差范数。当残差的欧几里得范数低于 $10^{-10}$ 或达到最大 $100$ 次迭代时停止。如果未达到收敛，则返回找到的最佳迭代结果。\n\n测试套件：\n- 用例 1 (谐振子，平凡定态路径)：$P = 32$，$\\beta = 6$，$m = 1$，谐振子劲度系数 $k = 1$。将珠子索引 $0$ 固定在 $x=0$。将所有珠子初始化在 $x=0$。报告收敛路径上 $\\exp(-S_{\\mathrm{E}})$ 的值，格式为浮点数（无量纲，因为 $\\hbar=1$）。\n- 用例 2 (中等逆温度下的双势阱，强制穿越)：$P = 64$，$\\beta = 6$，$m = 1$，双势阱参数 $a = 1$，$b = 1$。将珠子索引 $0$ 固定在 $x=+1$，珠子索引 $P/2$ 固定在 $x=-1$。通过在两个固定珠子之间的环段上进行线性插值来初始化其余珠子，以创建平滑的周期性路径。报告收敛路径上 $\\exp(-S_{\\mathrm{E}})$ 的值，格式为浮点数（无量纲）。\n- 用例 3 (较低温度下的双势阱，强制穿越)：$P = 128$，$\\beta = 10$，$m = 1$，双势阱参数 $a = 1$，$b = 1$。将珠子索引 $0$ 固定在 $x=+1$，珠子索引 $P/2$ 固定在 $x=-1$。按用例 2 的方式进行初始化。报告收敛路径上 $\\exp(-S_{\\mathrm{E}})$ 的值，格式为浮点数（无量纲）。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含三个结果，按用例 1、2、3 的顺序以逗号分隔的列表形式放在方括号内。例如：“[r1,r2,r3]”。\n- 每个元素必须是浮点数。\n- 角度单位不适用。不应打印任何物理单位，因为所请求的输出是原子单位下作用量的无量纲指数函数。", "solution": "所提出的问题陈述是有效的。这是一个来自计算量子化学领域的、定义明确且有科学依据的问题，具体涉及使用虚时路径积分形式主义对瞬子路径进行数值计算。所有必要的参数、物理模型和数值要求都已明确无误地给出。我将继续进行推导和求解。\n\n该问题的基础在于量子统计力学的路径积分表述。对于一个哈密顿量为 $\\hat{H}$、逆温度为 $\\beta = 1/(k_B T)$ 的系统，其配分函数 $Z$ 由 $Z = \\mathrm{Tr}[e^{-\\beta \\hat{H}}]$ 给出。这可以表示为在虚时 $\\tau \\in [0, \\beta\\hbar]$ 中对所有可能的闭合路径 $x(\\tau)$ 的 Feynman 路径积分，其中 $x(0) = x(\\beta\\hbar)$。我们在原子单位下进行操作，其中约化普朗克常数 $\\hbar = 1$。配分函数则为：\n$$\nZ = \\int \\mathcal{D}x(\\tau) \\, e^{-S_{\\mathrm{E}}[x(\\tau)]}\n$$\n其中 $S_{\\mathrm{E}}[x(\\tau)]$ 是质量为 $m$ 的粒子在势 $V(x)$ 中的欧几里得作用量泛函：\n$$\nS_{\\mathrm{E}}[x(\\tau)] = \\int_0^{\\beta} \\left[ \\frac{1}{2}m \\left(\\frac{dx}{d\\tau}\\right)^2 + V(x(\\tau)) \\right] d\\tau\n$$\n为了对该积分进行数值计算，我们将虚时间隔 $[0, \\beta]$ 离散为 $P$ 个时间片，或称“珠子”，每个时间片的长度为 $\\Delta\\tau = \\beta/P$。路径 $x(\\tau)$ 由一组坐标 $\\{x_k\\}_{k=0}^{P-1}$ 表示，其中 $x_k = x(k\\Delta\\tau)$。导数通过有限差分近似，$\\frac{dx}{d\\tau} \\approx \\frac{x_{k+1}-x_k}{\\Delta\\tau}$，积分则变为求和。离散欧几里得作用量在周期性边界条件 $x_P = x_0$ 下为：\n$$\nS_{\\mathrm{E}}[\\{x_k\\}] = \\sum_{k=0}^{P-1} \\left[ \\frac{1}{2}m \\left(\\frac{x_{k+1} - x_k}{\\Delta\\tau}\\right)^2 \\Delta\\tau + V(x_k) \\Delta\\tau \\right] = \\sum_{k=0}^{P-1} \\left[ \\frac{mP}{2\\beta}(x_{k+1}-x_k)^2 + \\frac{\\beta}{P}V(x_k) \\right]\n$$\n一条定态路径，例如瞬子，对应于作用量的一个极值点。我们通过求解作用量对每个珠子坐标的偏导数为零的方程组来找到这些路径：$\\frac{\\partial S_{\\mathrm{E}}}{\\partial x_j} = 0$。这为每个珠子 $j$ 定义了残差向量分量 $F_j$：\n$$\nF_j(\\mathbf{x}) \\equiv \\frac{\\partial S_{\\mathrm{E}}}{\\partial x_j} = \\frac{\\partial}{\\partial x_j} \\left( \\sum_{k=0}^{P-1} \\left[ \\frac{mP}{2\\beta}(x_{k+1}-x_k)^2 + \\frac{\\beta}{P}V(x_k) \\right] \\right)\n$$\n坐标 $x_j$ 出现在索引为 $k=j$ 和 $k=j-1$ 的动能项中，以及索引为 $k=j$ 的势能项中。进行微分可得：\n$$\nF_j(\\mathbf{x}) = \\frac{mP}{\\beta}(2x_j - x_{j-1} - x_{j+1}) + \\frac{\\beta}{P} V'(x_j) = 0\n$$\n其中索引按模 $P$ 计算以强制周期性（例如，对于 $j=0$，$x_{j-1} = x_{P-1}$）。这是一个关于坐标 $\\mathbf{x} = \\{x_0, \\dots, x_{P-1}\\}$ 的包含 $P$ 个耦合非线性方程的方程组。\n\n为了求解系统 $\\mathbf{F}(\\mathbf{x}) = 0$，我们采用 Newton-Raphson 方法。这种迭代方法通过求解线性系统以获得修正量 $\\Delta\\mathbf{x}$ 来改进估计值 $\\mathbf{x}^{(n)}$：\n$$\n\\mathbf{J}(\\mathbf{x}^{(n)}) \\Delta\\mathbf{x} = -\\mathbf{F}(\\mathbf{x}^{(n)})\n$$\n下一个估计值则为 $\\mathbf{x}^{(n+1)} = \\mathbf{x}^{(n)} + \\alpha \\Delta\\mathbf{x}$，其中 $\\alpha \\in (0, 1]$ 是由线搜索确定的步长。矩阵 $\\mathbf{J}$ 是 $\\mathbf{F}$ 的雅可比矩阵，其元素为 $J_{ij} = \\frac{\\partial F_i}{\\partial x_j}$，它同时也是作用量 $S_{\\mathrm{E}}$ 的 Hessian 矩阵。其元素为：\n- 对角元素 ($j=i$):\n  $$\n  J_{ii} = \\frac{\\partial F_i}{\\partial x_i} = \\frac{2mP}{\\beta} + \\frac{\\beta}{P}V''(x_i)\n  $$\n- 非对角的最近邻元素 ($j=i\\pm1$，模 $P$):\n  $$\n  J_{i, i\\pm1} = \\frac{\\partial F_i}{\\partial x_{i\\pm1}} = -\\frac{mP}{\\beta}\n  $$\n- 所有其他元素均为零。该雅可比矩阵是一个对称、稀疏且（在周期性边界下）类循环的三对角矩阵。\n\n该问题要求处理固定的珠子。如果一部分珠子 $\\mathcal{I}_{\\mathrm{fixed}}$ 的位置被固定，它们就不再是变量。方程组仅对自由珠子 $\\mathcal{I}_{\\mathrm{free}}$ 求解。Newton-Raphson 系统的维度减小到 $N_{\\mathrm{free}} = |\\mathcal{I}_{\\mathrm{free}}|$。残差向量 $\\mathbf{F}_{\\mathrm{free}}$ 和雅可比矩阵 $\\mathbf{J}_{\\mathrm{free}}$ 仅根据 $\\mathcal{I}_{\\mathrm{free}}$ 中的索引构建。在计算自由珠子 $i$ 的残差 $F_i$ 时，如果其邻居 $i\\pm1$ 是固定的，则使用其固定的坐标值作为常数。类似地，在构建雅可比矩阵 $\\mathbf{J}_{\\mathrm{free}}$ 时，耦合项 $J_{i,j}$ 仅在 $i$ 和 $j$ 都是自由珠子且互为最近邻时才非零。\n\n算法流程如下：\n1. 根据测试用例的指定初始化所有 $P$ 个珠子坐标 $\\{x_k\\}$。\n2. 定义自由和固定珠子索引的集合。\n3. 开始 Newton-Raphson 迭代：\n    a. 为当前的自由珠子坐标构建残差向量 $\\mathbf{F}_{\\mathrm{free}}$ 和雅可比矩阵 $\\mathbf{J}_{\\mathrm{free}}$。\n    b. 检查残差的欧几里得范数 $\\|\\mathbf{F}_{\\mathrm{free}}\\|$。如果它低于容差 $10^{-10}$，则解已收敛。\n    c. 求解线性系统 $\\mathbf{J}_{\\mathrm{free}} \\Delta\\mathbf{x}_{\\mathrm{free}} = -\\mathbf{F}_{\\mathrm{free}}$ 以找到更新步长。\n    d. 执行回溯线搜索以找到一个能减小残差范数的步长 $\\alpha \\in (0, 1]$。从 $\\alpha=1$ 开始，测试更新 $\\mathbf{x}_{\\mathrm{free}}' = \\mathbf{x}_{\\mathrm{free}} + \\alpha \\Delta\\mathbf{x}_{\\mathrm{free}}$。如果 $\\|\\mathbf{F}_{\\mathrm{free}}(\\mathbf{x}_{\\mathrm{free}}')\\| < \\|\\mathbf{F}_{\\mathrm{free}}(\\mathbf{x}_{\\mathrm{free}})\\|$, 则接受该步长。否则，将 $\\alpha$ 减小一个因子（例如 2）并重复。\n    e. 将接受的更新应用于自由珠子坐标。\n4. 在收敛或达到最大迭代次数后，使用所有 $P$ 个珠子（包括自由和固定的）的最终坐标计算总的欧几里得作用量 $S_{\\mathrm{E}}$。\n5. 最终报告的值是 $\\exp(-S_{\\mathrm{E}})$。\n\n指定的势函数及其导数为：\n- 谐振子势：$V(x) = \\frac{1}{2} k x^2$，$V'(x) = kx$，$V''(x) = k$。\n- 双势阱：$V(x) = a (x^2 - b^2)^2$。其一阶和二阶导数分别为 $V'(x) = 4ax(x^2 - b^2)$ 和 $V''(x) = 4a(3x^2 - b^2)$。\n\n将实施这种结构化方法来解决测试用例。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite for finding stationary paths of the Euclidean action.\n    \"\"\"\n\n    def get_potentials(name, params):\n        \"\"\"Returns functions for V, V', V'' for a given potential.\"\"\"\n        if name == 'harmonic':\n            k = params['k']\n            V = lambda x: 0.5 * k * x**2\n            V_prime = lambda x: k * x\n            V_double_prime = lambda x: k * np.ones_like(x)\n        elif name == 'double_well':\n            a, b = params['a'], params['b']\n            V = lambda x: a * (x**2 - b**2)**2\n            V_prime = lambda x: 4 * a * x * (x**2 - b**2)\n            V_double_prime = lambda x: 4 * a * (3 * x**2 - b**2)\n        else:\n            raise ValueError(f\"Unknown potential: {name}\")\n        return V, V_prime, V_double_prime\n\n    def calculate_action(x, m, beta, V):\n        \"\"\"Calculates the discrete Euclidean action.\"\"\"\n        P = len(x)\n        # Periodic boundary condition: x_P = x_0 handled by np.roll\n        kinetic_term = 0.5 * m * (P / beta)**2 * np.sum((x - np.roll(x, -1))**2)\n        potential_term = np.sum(V(x))\n        # Each term in the integral is weighted by d_tau = beta/P\n        return (beta / P) * (kinetic_term + potential_term)\n\n    def run_newton_raphson(x_init, m, beta, V, V_prime, V_double_prime, fixed_beads):\n        \"\"\"\n        Solves for the stationary path using Newton-Raphson with fixed bead constraints.\n        \n        Args:\n            x_init (np.ndarray): Initial coordinates of the P beads.\n            m (float): Mass.\n            beta (float): Inverse temperature.\n            V, V_prime, V_double_prime (callable): Potential and its derivatives.\n            fixed_beads (dict): A dictionary {index: value} for fixed beads.\n\n        Returns:\n            np.ndarray: Converged coordinates of the P beads.\n        \"\"\"\n        P = len(x_init)\n        x = np.copy(x_init)\n        \n        # Apply fixed bead values\n        for idx, val in fixed_beads.items():\n            x[idx] = val\n\n        is_free = np.ones(P, dtype=bool)\n        is_free[list(fixed_beads.keys())] = False\n        free_indices = np.where(is_free)[0]\n        n_free = len(free_indices)\n        \n        if n_free == 0:\n            return x\n\n        # Map global bead index to local index in the free-bead system\n        free_map = {global_idx: local_idx for local_idx, global_idx in enumerate(free_indices)}\n\n        max_iter = 100\n        tol = 1e-10\n        \n        kinetic_prefactor1 = m * P / beta\n        potential_prefactor = beta / P\n\n        for i in range(max_iter):\n            # 1. Assemble Residual F for free beads\n            F_free = np.zeros(n_free)\n            x_prev = np.roll(x, 1)\n            x_next = np.roll(x, -1)\n            \n            # Vectorized calculation for the residual\n            all_F = kinetic_prefactor1 * (2*x - x_prev - x_next) + potential_prefactor * V_prime(x)\n            F_free = all_F[free_indices]\n            \n            residual_norm = np.linalg.norm(F_free)\n            if residual_norm  tol:\n                break\n            \n            # 2. Assemble Jacobian J for free beads\n            J_free = np.zeros((n_free, n_free))\n            \n            # Diagonal elements\n            diag_vals = 2 * kinetic_prefactor1 + potential_prefactor * V_double_prime(x[free_indices])\n            np.fill_diagonal(J_free, diag_vals)\n            \n            # Off-diagonal elements\n            off_diag_val = -kinetic_prefactor1\n            for k, bead_idx in enumerate(free_indices):\n                # Neighbor k-1\n                neighbor_prev = (bead_idx - 1 + P) % P\n                if is_free[neighbor_prev]:\n                    local_prev_idx = free_map[neighbor_prev]\n                    J_free[k, local_prev_idx] += off_diag_val\n\n                # Neighbor k+1 (already handled by symmetry, but doing explicitly for clarity)\n                # We can exploit J being symmetric, but this is more direct.\n                neighbor_next = (bead_idx + 1) % P\n                if is_free[neighbor_next]:\n                    local_next_idx = free_map[neighbor_next]\n                    J_free[k, local_next_idx] += off_diag_val\n\n            # 3. Solve for the step\n            try:\n                delta_x_free = np.linalg.solve(J_free, -F_free)\n            except np.linalg.LinAlgError:\n                # If Jacobian is singular, we cannot proceed.\n                # This may happen for bad initial guesses.\n                # Here we just stop and return the current state.\n                break\n\n            # 4. Backtracking line search\n            alpha = 1.0\n            x_new = np.copy(x)\n            for _ in range(10): # Max 10 backtracking steps\n                x_new[free_indices] = x[free_indices] + alpha * delta_x_free\n                \n                # Recalculate residual for the new coordinates\n                x_new_prev = np.roll(x_new, 1)\n                x_new_next = np.roll(x_new, -1)\n                all_F_new = kinetic_prefactor1 * (2*x_new - x_new_prev - x_new_next) + potential_prefactor * V_prime(x_new)\n                F_free_new = all_F_new[free_indices]\n\n                if np.linalg.norm(F_free_new)  residual_norm:\n                    break\n                alpha /= 2.0\n            \n            x = x_new\n\n        return x\n\n    # --- Test Suite ---\n    test_cases = [\n        {\n            'case': 1, 'P': 32, 'beta': 6, 'm': 1,\n            'potential_name': 'harmonic', 'potential_params': {'k': 1},\n            'fixed_beads': {0: 0.0},\n            'init_func': lambda P, fixed: np.zeros(P)\n        },\n        {\n            'case': 2, 'P': 64, 'beta': 6, 'm': 1,\n            'potential_name': 'double_well', 'potential_params': {'a': 1, 'b': 1},\n            'fixed_beads': {0: 1.0, 32: -1.0},\n            'init_func': lambda P, fixed: np.interp(\n                np.arange(P), [0, P/2, P], [fixed[0], fixed[P/2], fixed[0]]\n            )\n        },\n        {\n            'case': 3, 'P': 128, 'beta': 10, 'm': 1,\n            'potential_name': 'double_well', 'potential_params': {'a': 1, 'b': 1},\n            'fixed_beads': {0: 1.0, 64: -1.0},\n            'init_func': lambda P, fixed: np.interp(\n                np.arange(P), [0, P/2, P], [fixed[0], fixed[P/2], fixed[0]]\n            )\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        P = case['P']\n        fixed_beads = case['fixed_beads']\n        \n        V, Vp, Vpp = get_potentials(case['potential_name'], case['potential_params'])\n        \n        x_init = case['init_func'](P, fixed_beads)\n        \n        x_converged = run_newton_raphson(\n            x_init, case['m'], case['beta'], V, Vp, Vpp, fixed_beads\n        )\n        \n        action = calculate_action(x_converged, case['m'], case['beta'], V)\n        \n        result = np.exp(-action)\n        results.append(result)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2898586"}]}