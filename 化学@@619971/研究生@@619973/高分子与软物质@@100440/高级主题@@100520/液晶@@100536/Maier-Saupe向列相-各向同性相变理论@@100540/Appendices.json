{"hands_on_practices": [{"introduction": "标量序参量 $S$ 是描述向列相液晶取向有序程度的核心物理量。在分析有序相之前，我们必须首先建立一个明确的基准。这个练习 [@problem_id:2920250] 将通过计算最简单情况——完全随机的各向同性流体——的序参量，来帮助你巩固对 $S$ 定义的理解，并验证它如何准确地量化了取向序的完全缺失。", "problem": "在 Maier–Saupe 平均场理论对向列相-各向同性相变的描述中，标量向列相序参数被定义为分子对称轴与宏观指向矢之间夹角的余弦的二阶勒让德多项式的系综平均。考虑单位球面上的一个取向分布函数，记为 $f(\\theta,\\phi)$，其根据以下方式归一化：\n$$\n\\int_{0}^{2\\pi}\\int_{0}^{\\pi} f(\\theta,\\phi)\\,\\sin\\theta\\,\\mathrm{d}\\theta\\,\\mathrm{d}\\phi \\;=\\; 1,\n$$\n其中 $\\theta$ 是以弧度度量的极角，$\\phi$ 是方位角。标量取向序参数定义为：\n$$\nS \\;=\\; \\int_{0}^{2\\pi}\\int_{0}^{\\pi} P_{2}(\\cos\\theta)\\, f(\\theta,\\phi)\\,\\sin\\theta\\,\\mathrm{d}\\theta\\,\\mathrm{d}\\phi,\n$$\n其中 $P_{2}(x)$ 是2阶勒让德多项式。\n\n假设一个由均匀取向分布 $f(\\theta,\\phi)=\\frac{1}{4\\pi}$ 描述的各向同性态。从以上定义和标准球面面元出发，明确计算 $S$。序参数 $S$ 是无量纲的；请将您的最终答案表示为一个精确数（无需四舍五入）。", "solution": "标量取向序参数 $S$ 定义为二阶勒让德多项式 $P_{2}(\\cos\\theta)$ 的系综平均。其公式由下式给出：\n$$\nS \\;=\\; \\int_{0}^{2\\pi}\\int_{0}^{\\pi} P_{2}(\\cos\\theta)\\, f(\\theta,\\phi)\\,\\sin\\theta\\,\\mathrm{d}\\theta\\,\\mathrm{d}\\phi\n$$\n对于指定的各向同性态，取向分布函数是均匀的：\n$$\nf(\\theta,\\phi) = \\frac{1}{4\\pi}\n$$\n将此代入 $S$ 的定义，我们得到：\n$$\nS \\;=\\; \\int_{0}^{2\\pi}\\int_{0}^{\\pi} P_{2}(\\cos\\theta)\\, \\left(\\frac{1}{4\\pi}\\right)\\,\\sin\\theta\\,\\mathrm{d}\\theta\\,\\mathrm{d}\\phi\n$$\n常数因子 $\\frac{1}{4\\pi}$ 可以移到积分之外。被积函数 $P_{2}(\\cos\\theta)\\sin\\theta$ 不依赖于方位角 $\\phi$。因此，该二重积分可以分离为两个单变量积分的乘积：\n$$\nS \\;=\\; \\frac{1}{4\\pi} \\left( \\int_{0}^{2\\pi} \\mathrm{d}\\phi \\right) \\left( \\int_{0}^{\\pi} P_{2}(\\cos\\theta)\\,\\sin\\theta\\,\\mathrm{d}\\theta \\right)\n$$\n对 $\\phi$ 的积分很简单：\n$$\n\\int_{0}^{2\\pi} \\mathrm{d}\\phi \\;=\\; [\\phi]_{0}^{2\\pi} \\;=\\; 2\\pi - 0 \\;=\\; 2\\pi\n$$\n将此结果代回，$S$ 的表达式简化为：\n$$\nS \\;=\\; \\frac{2\\pi}{4\\pi} \\int_{0}^{\\pi} P_{2}(\\cos\\theta)\\,\\sin\\theta\\,\\mathrm{d}\\theta \\;=\\; \\frac{1}{2} \\int_{0}^{\\pi} P_{2}(\\cos\\theta)\\,\\sin\\theta\\,\\mathrm{d}\\theta\n$$\n为计算剩余的积分，我们必须使用2阶勒让德多项式的显式形式，即：\n$$\nP_{2}(x) = \\frac{1}{2}(3x^{2} - 1)\n$$\n因此，对于 $x = \\cos\\theta$，我们有：\n$$\nP_{2}(\\cos\\theta) = \\frac{1}{2}(3\\cos^{2}\\theta - 1)\n$$\n$S$ 的积分变为：\n$$\nS \\;=\\; \\frac{1}{2} \\int_{0}^{\\pi} \\frac{1}{2}(3\\cos^{2}\\theta - 1)\\,\\sin\\theta\\,\\mathrm{d}\\theta \\;=\\; \\frac{1}{4} \\int_{0}^{\\pi} (3\\cos^{2}\\theta - 1)\\,\\sin\\theta\\,\\mathrm{d}\\theta\n$$\n我们使用换元法来解这个积分。令 $u = \\cos\\theta$。其微分为 $\\mathrm{d}u = -\\sin\\theta\\,\\mathrm{d}\\theta$。我们还必须更改积分上下限。当 $\\theta = 0$ 时，$u = \\cos(0) = 1$。当 $\\theta = \\pi$ 时，$u = \\cos(\\pi) = -1$。\n将 $u$ 和 $\\mathrm{d}u$ 代入积分：\n$$\nS \\;=\\; \\frac{1}{4} \\int_{1}^{-1} (3u^{2} - 1)\\,(-\\mathrm{d}u)\n$$\n利用定积分的性质 $\\int_{a}^{b} g(u)\\,\\mathrm{d}u = -\\int_{b}^{a} g(u)\\,\\mathrm{d}u$，我们反转积分上下限，这会消去负号：\n$$\nS \\;=\\; \\frac{1}{4} \\int_{-1}^{1} (3u^{2} - 1)\\,\\mathrm{d}u\n$$\n现在，我们计算多项式 $(3u^{2} - 1)$ 的原函数：\n$$\n\\int (3u^{2} - 1)\\,\\mathrm{d}u \\;=\\; 3\\frac{u^{3}}{3} - u \\;=\\; u^{3} - u\n$$\n计算从 $-1$ 到 $1$ 的定积分：\n$$\nS \\;=\\; \\frac{1}{4} \\left[ u^{3} - u \\right]_{-1}^{1} \\;=\\; \\frac{1}{4} \\left( (1^{3} - 1) - ((-1)^{3} - (-1)) \\right)\n$$\n$$\nS \\;=\\; \\frac{1}{4} \\left( (1 - 1) - (-1 + 1) \\right) \\;=\\; \\frac{1}{4} (0 - 0) \\;=\\; 0\n$$\n结果恰好为 $0$。这个结果是基础性的：标量序参数 $S$ 量化了集体取向有序的程度。$S=0$ 的值表示完全没有平均取向，这正是各向同性态的定义。\n\n另外，通过调用勒让德多项式的正交性，可以更优雅地得到该结果。该性质表明：\n$$\n\\int_{-1}^{1} P_{n}(x)P_{m}(x)\\,\\mathrm{d}x \\;=\\; \\frac{2}{2n+1}\\delta_{nm}\n$$\n其中 $\\delta_{nm}$ 是克罗内克 δ。我们关于 $S$ 的积分可以写成 $S = \\frac{1}{2} \\int_{-1}^{1} P_{2}(u)\\,\\mathrm{d}u$。认识到常数函数 $1$ 是零阶勒让德多项式，$P_{0}(u)=1$，该积分为：\n$$\nS \\;=\\; \\frac{1}{2}\\int_{-1}^{1} P_{2}(u)P_{0}(u)\\,\\mathrm{d}u\n$$\n这里，$n=2$ 且 $m=0$。由于 $n \\neq m$，克罗内克 δ $\\delta_{20} = 0$，因此积分为零。这证实了我们的显式计算。", "answer": "$$\n\\boxed{0}\n$$", "id": "2920250"}, {"introduction": "前一个练习中的线性化分析揭示了失稳的起点，但未能描述序参量的完整行为，特别是它在向列相-各向同性相变温度 $T_{NI}$ 处的一阶不连续跳跃。这个计算实践 [@problem_id:2920228] 旨在弥合解析近似与完整解之间的鸿沟。通过实现一个数值积分方案，你将能够计算在任意给定相互作用强度下的 $S$ 值，并亲眼见证这一相变的一阶特性。", "problem": "一个单轴非极性向列相流体在平均场水平上通过单粒子取向势 $U(\\theta)=-\\lambda S P_{2}(\\cos\\theta)$ 进行建模，其中 $S$ 是标量序参量，$\\lambda>0$ 是一个与温度无关的耦合常数，单位为能量，$P_{2}(\\cos\\theta)$ 是第二勒让德多项式，$\\theta$ 是分子轴与指向矢之间的极角（以弧度为单位）。取向概率密度为 $f(\\theta,\\phi)=Z^{-1}\\exp(-\\beta U(\\theta))$，其中 $\\beta=1/(k_{B}T)$，$k_{B}$ 是玻尔兹曼常数，$T$ 是绝对温度，$Z$ 是归一化常数，使得 $\\int f(\\theta,\\phi)\\,d\\Omega=1$，其中 $d\\Omega=\\sin\\theta\\,d\\theta\\,d\\phi$。标量序参量由热平均值定义：$S=\\langle P_{2}(\\cos\\theta)\\rangle=\\int P_{2}(\\cos\\theta) f(\\theta,\\phi)\\,d\\Omega$。\n\n仅从这些定义和单位球面上的角积分的一般性质出发，完成以下任务：\n\n1. 将 $S$ 的精确自洽关系写成单位球面上角积分的比值形式。\n2. 对小 $S$ 情况下的此关系进行线性化，以确定平均场分岔温度 $T^{\\ast}$。在该温度下，当温度 $T$ 从高温降低时，首次出现 $S$ 的非零解。\n3. 在您的推导中，明确计算所需 $P_{2}(\\cos\\theta)$ 和 $P_{2}^{2}(\\cos\\theta)$ 在单位球面上的角平均值，并指出控制 $T^{\\ast}$ 的数值因子的来源。\n\n将您关于 $T^{\\ast}$ 的最终答案表示为仅包含 $\\lambda$ 和 $k_{B}$ 的单个闭合形式解析表达式。请勿在最终答案中提供任何数值计算或单位。", "solution": "该问题要求推导向列相-各向同性相变的平均场分岔温度 $T^{\\ast}$。这将按要求分三个阶段完成：首先，建立标量序参量 $S$ 的自洽关系；其次，对小 $S$ 情况下的此关系进行线性化；第三，明确计算出现在线性化方程中的必要角平均值。\n\n**1. S 的自洽关系**\n\n标量序参量 $S$ 定义为第二勒让德多项式 $P_{2}(\\cos\\theta)$ 的热平均值：\n$$\nS = \\langle P_{2}(\\cos\\theta) \\rangle = \\int P_{2}(\\cos\\theta) f(\\theta,\\phi) \\, d\\Omega\n$$\n取向概率密度函数由 $f(\\theta,\\phi) = Z^{-1}\\exp(-\\beta U(\\theta))$ 给出，其中 $\\beta = 1/(k_{B}T)$，取向势为 $U(\\theta) = -\\lambda S P_{2}(\\cos\\theta)$。归一化常数或配分函数 $Z$ 由条件 $\\int f(\\theta,\\phi) \\, d\\Omega = 1$ 定义，这意味着：\n$$\nZ = \\int \\exp(-\\beta U(\\theta)) \\, d\\Omega = \\int \\exp(\\beta \\lambda S P_{2}(\\cos\\theta)) \\, d\\Omega\n$$\n将这些表达式代入 $S$ 的定义，得到自洽关系：\n$$\nS = \\frac{\\int P_{2}(\\cos\\theta) \\exp(\\beta \\lambda S P_{2}(\\cos\\theta)) \\, d\\Omega}{\\int \\exp(\\beta \\lambda S P_{2}(\\cos\\theta)) \\, d\\Omega}\n$$\n单位球面上的体积元为 $d\\Omega = \\sin\\theta \\, d\\theta \\, d\\phi$，其中极角 $\\theta$ 的范围是 $0$ 到 $\\pi$，方位角 $\\phi$ 的范围是 $0$ 到 $2\\pi$。由于被积函数与 $\\phi$ 无关，对 $\\phi$ 的积分在分子和分母中产生一个 $2\\pi$ 的因子，可以消去。我们引入变量代换 $x = \\cos\\theta$，这意味着 $dx = -\\sin\\theta \\, d\\theta$。$x$ 的积分范围变为 $x=1$ (对于 $\\theta=0$) 和 $x=-1$ (对于 $\\theta=\\pi$)。因此，$\\int_{0}^{\\pi} \\dots \\sin\\theta \\, d\\theta$ 变为 $\\int_{-1}^{1} \\dots dx$。\n\n因此，$S$ 的精确自洽关系可以表示为关于变量 $x$ 的积分之比：\n$$\nS = \\frac{\\int_{-1}^{1} P_{2}(x) \\exp(\\beta \\lambda S P_{2}(x)) \\, dx}{\\int_{-1}^{1} \\exp(\\beta \\lambda S P_{2}(x)) \\, dx}\n$$\n这是问题第一部分所要求的表达式。\n\n**2. 线性化与分岔温度 $T^{\\ast}$**\n\n分岔温度 $T^{\\ast}$ 是一个临界温度，当系统从高温各向同性相（其中 $S=0$）冷却时，首次可能出现 $S$ 的非零解。在此相变附近，$S$ 是无穷小的。这允许我们对自洽关系进行关于 $S$ 的线性化。\n\n对于小 $S$，指数的参数 $\\beta \\lambda S P_{2}(x)$ 也很小。我们可以对小 $y$ 使用泰勒级数展开 $\\exp(y) \\approx 1 + y$。\n将此展开应用于自洽关系的分子和分母：\n分子：\n$$\n\\int_{-1}^{1} P_{2}(x) \\left[ 1 + \\beta \\lambda S P_{2}(x) + \\mathcal{O}(S^{2}) \\right] \\, dx = \\int_{-1}^{1} P_{2}(x) \\, dx + \\beta \\lambda S \\int_{-1}^{1} [P_{2}(x)]^{2} \\, dx + \\mathcal{O}(S^{2})\n$$\n分母：\n$$\n\\int_{-1}^{1} \\left[ 1 + \\beta \\lambda S P_{2}(x) + \\mathcal{O}(S^{2}) \\right] \\, dx = \\int_{-1}^{1} 1 \\, dx + \\beta \\lambda S \\int_{-1}^{1} P_{2}(x) \\, dx + \\mathcal{O}(S^{2})\n$$\n$S$ 的线性化方程变为：\n$$\nS \\approx \\frac{\\int_{-1}^{1} P_{2}(x) \\, dx + \\beta \\lambda S \\int_{-1}^{1} [P_{2}(x)]^{2} \\, dx}{\\int_{-1}^{1} 1 \\, dx + \\beta \\lambda S \\int_{-1}^{1} P_{2}(x) \\, dx}\n$$\n\n**3. 角平均的计算**\n\n我们现在明确计算所需的积分。这些对应于在各向同性分布下的平均值，其中所有取向都是等概率的。一个量 $A(\\theta)$ 在单位球面上的平均值为 $\\langle A \\rangle_{0} = (\\int A \\, d\\Omega) / (\\int d\\Omega)$。\n球体的总立体角为 $\\int d\\Omega = \\int_{0}^{2\\pi}d\\phi \\int_{0}^{\\pi} \\sin\\theta \\, d\\theta = 4\\pi$。\n\n第一个积分 $\\int_{-1}^{1} P_{2}(x) \\, dx$ 对应于 $P_{2}(\\cos\\theta)$ 的未归一化平均值。利用勒让德多项式的正交性 $\\int_{-1}^{1} P_{l}(x) P_{m}(x) \\, dx = \\frac{2}{2l+1} \\delta_{lm}$，我们可以通过设置 $l=2$ 和 $m=0$ (因为 $P_{0}(x)=1$) 来计算这个积分：\n$$\n\\int_{-1}^{1} P_{2}(x) \\, dx = \\int_{-1}^{1} P_{2}(x) P_{0}(x) \\, dx = 0\n$$\n因此，$P_{2}(\\cos\\theta)$ 在球面上的平均值为 $\\langle P_{2}(\\cos\\theta) \\rangle_{0} = \\frac{2\\pi \\int_{-1}^{1} P_{2}(x) \\, dx}{4\\pi} = 0$。\n\n第二个积分是 $\\int_{-1}^{1} 1 \\, dx = [x]_{-1}^{1} = 2$。\n\n第三个积分是 $\\int_{-1}^{1} [P_{2}(x)]^{2} \\, dx$。使用 $l=m=2$ 的正交关系：\n$$\n\\int_{-1}^{1} [P_{2}(x)]^{2} \\, dx = \\frac{2}{2(2)+1} = \\frac{2}{5}\n$$\n$P_{2}(\\cos\\theta)$ 在球面上的均方平均值为 $\\langle P_{2}^{2}(\\cos\\theta) \\rangle_{0} = \\frac{2\\pi \\int_{-1}^{1} [P_{2}(x)]^{2} \\, dx}{4\\pi} = \\frac{1}{2} \\left( \\frac{2}{5} \\right) = \\frac{1}{5}$。将控制 $T^{\\ast}$ 的数值因子来源于这个平均值。\n\n将这些积分值代回到 $S$ 的线性化方程中：\n$$\nS \\approx \\frac{0 + \\beta \\lambda S \\left(\\frac{2}{5}\\right)}{2 + \\beta \\lambda S (0)} = \\frac{\\beta \\lambda S}{5}\n$$\n为了存在非平凡解（$S \\neq 0$），我们可以用 $S$ 除两边。当此等式成立时，发生分岔。我们将温度 $T$ 设为临界温度 $T^{\\ast}$，相应地 $\\beta$ 设为 $\\beta^{\\ast} = 1/(k_{B}T^{\\ast})$。\n$$\n1 = \\frac{\\beta^{\\ast} \\lambda}{5} = \\frac{\\lambda}{5 k_{B} T^{\\ast}}\n$$\n求解分岔温度 $T^{\\ast}$ 可得：\n$$\nT^{\\ast} = \\frac{\\lambda}{5 k_{B}}\n$$\n这是各向同性相相对于向列相的形成变得不稳定的温度的平均场预测。", "answer": "$$\n\\boxed{\\frac{\\lambda}{5 k_{B}}}\n$$", "id": "2945027"}, {"introduction": "前一个练习中的线性化分析揭示了失稳的起点，但未能描述序参量的完整行为，特别是它在向列相-各向同性相变温度 $T_{NI}$ 处的一阶不连续跳跃。这个计算实践 [@problem_id:2920228] 旨在弥合解析近似与完整解之间的鸿沟。通过实现一个数值积分方案，你将能够计算在任意给定相互作用强度下的 $S$ 值，并亲眼见证这一相变的一阶特性。", "problem": "你的任务是实现一个数值计算器，用于计算在聚合物和软物质的向列相-各向同性相变中，由 Maier–Saupe 平均场描述所产生的取向配分函数和向列序参数。从与第二勒让德多项式成正比的轴对称单体平均场势的玻尔兹曼统计权重出发。使用以下基本原理和定义：\n\n- 玻尔兹曼分布赋予能量为 $U$ 的状态以与 $\\exp\\!\\left(-\\beta U\\right)$ 成正比的权重。在 Maier–Saupe 平均场中，单体势与第二勒让德多项式 $P_{2}(\\mu)$ 成正比，其中 $P_{2}(\\mu) = \\tfrac{1}{2}\\left(3\\mu^{2}-1\\right)$ 且 $\\mu = \\cos\\theta$ 是极角的余弦。\n- 引入一个无量纲场参数 $\\lambda$，它与平均场强度除以热能之比成正比，因此未归一化的取向权重为 $\\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)$。\n- 在对整个单位球面进行积分时，无量纲配分函数 $Z(\\lambda)$ 在对角向积分后，可简化为在区间 $\\mu \\in [-1,1]$ 上的积分。\n- 向列序参数 $S(\\lambda)$ 是 $P_{2}(\\mu)$ 相对于从上述玻尔兹曼权重得到的归一化分布的统计期望。\n\n你的任务是：\n\n1) 根据以上原理，推导出 $Z(\\lambda)$ 和 $S(\\lambda)$ 作为 $\\mu \\in [-1,1]$ 上的积分的显式表达式，表达式中只包含 $\\lambda$ 和 $P_{2}(\\mu)$。你的推导必须逻辑上一致，并且不应引入超出所述范围的任何假设。\n\n2) 实现一个在 $[-1,1]$ 上的高斯-勒让德求积方法，以高精度计算 $Z(\\lambda)$ 和 $S(\\lambda)$。你的算法必须：\n- 使用 $N$ 点高斯-勒让德求积，并自适应地增加 $N$（例如，通过倍增），直到 $Z(\\lambda)$ 和 $S(\\lambda)$ 的收敛，其绝对变化不大于 $10^{-13}$，或者直到达到一个明确定义的最大 $N$ 值。\n- 只使用单个空间变量 $\\mu$；除了 $\\mu = \\cos\\theta$ 之外，你不能转换为角度变量。所有量均为无量纲，没有物理单位。\n\n3) 通过对归一化分布 $f(\\mu \\,|\\, \\lambda)$ 在 $\\mu \\in [-1,1]$ 上进行一次独立的高斯-勒让德积分（其求积阶数必须严格不同于计算 $Z(\\lambda)$ 和 $S(\\lambda)$ 时使用的阶数），来验证归一化至机器精度。报告绝对偏差 $\\varepsilon(\\lambda) = \\left|\\int_{-1}^{1} f(\\mu \\,|\\, \\lambda)\\,d\\mu - 1\\right|$。\n\n测试套件：\n针对以下无量纲场参数的值来评估你的实现：\n- $\\lambda = 0$\n- $\\lambda = 0.5$\n- $\\lambda = 2$\n- $\\lambda = -1.5$\n- $\\lambda = 8$\n\n最终输出格式：\n- 对于上面给出的每个输入值 $\\lambda$，按顺序生成一个包含三个浮点数的列表 $[Z(\\lambda), S(\\lambda), \\varepsilon(\\lambda)]$。\n- 你的程序应生成单行输出，其中包含一个逗号分隔的列表，该列表被方括号包围，其中每个元素是对应一个 $\\lambda$ 的三元组列表，顺序如上所列。没有物理单位，也无需报告角度；所有量都是无量纲的。", "solution": "我们从玻尔兹曼权重原理开始。在 Maier–Saupe 平均场描述中，单粒子取向势仅通过 $\\mu = \\cos\\theta$ 依赖于极角 $\\theta$，并且与第二勒让德多项式成正比。核心定义如下：\n\n- 第二勒让德多项式为 $P_{2}(\\mu) = \\tfrac{1}{2}\\left(3\\mu^{2}-1\\right)$。\n- 玻尔兹曼权重与 $\\exp\\!\\left(-\\beta U\\right)$ 成正比。在平均场中，势与 $-P_{2}(\\mu)$ 成正比，比例常数被吸收到一个无量纲参数 $\\lambda$ 中，因此未归一化的权重为 $\\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)$。\n- 由于分布是轴对称的，在对方位角积分后，剩余的积分是在 $\\mu \\in [-1,1]$ 上进行的。\n\n因此，在不考虑一个整体常数（该常数在归一化平均中被消去）的情况下，关于 $\\mu$ 的无量纲配分函数为\n$$\nZ(\\lambda) \\equiv \\int_{-1}^{1} \\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)\\, d\\mu.\n$$\n因此，关于 $\\mu$ 的归一化取向分布为\n$$\nf(\\mu \\,|\\, \\lambda) = \\frac{\\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)}{Z(\\lambda)}.\n$$\n向列序参数是 $P_{2}(\\mu)$ 相对于 $f(\\mu \\,|\\, \\lambda)$ 的期望值：\n$$\nS(\\lambda) \\equiv \\int_{-1}^{1} P_{2}(\\mu)\\, f(\\mu \\,|\\, \\lambda)\\, d\\mu\n= \\frac{\\int_{-1}^{1} P_{2}(\\mu)\\, \\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)\\, d\\mu}{\\int_{-1}^{1} \\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)\\, d\\mu}.\n$$\n这些表达式直接源于玻尔兹曼原理和将取向积分简化到 $\\mu$ 域的轴对称性。\n\n数值计算策略：\n- 我们使用 $N$ 点高斯-勒让德求积来近似 $\\mu \\in [-1,1]$ 上的积分，该方法对于最高 $2N-1$ 次的多项式是精确的，并且对于像 $\\exp\\!\\left(\\lambda P_{2}(\\mu)\\right)$ 这样的光滑被积函数具有很高的精度。\n- 对于给定的 $N$，我们同时计算两个量：\n  $$\n  Z_{N}(\\lambda) = \\sum_{i=1}^{N} w_{i}\\, \\exp\\!\\left(\\lambda P_{2}(\\mu_{i})\\right),\n  \\quad\n  \\mathcal{N}_{N}(\\lambda) = \\sum_{i=1}^{N} w_{i}\\, P_{2}(\\mu_{i})\\, \\exp\\!\\left(\\lambda P_{2}(\\mu_{i})\\right),\n  $$\n  其中 $\\{\\mu_{i}, w_{i}\\}_{i=1}^{N}$ 是 $[-1,1]$ 上的高斯-勒让德节点和权重。然后 $S_{N}(\\lambda) = \\mathcal{N}_{N}(\\lambda)/Z_{N}(\\lambda)$。\n- 我们自适应地增加 $N$（例如，从一个初始的 $N$ 开始倍增），直到 $|Z_{N} - Z_{N/2}| \\leq 10^{-13}\\max(1,|Z_{N}|)$ 和 $|S_{N} - S_{N/2}| \\leq 10^{-13}\\max(1,|S_{N}|)$ 同时满足，或者直到达到一个预定义的最大 $N$ 值。这确保了两个量在 $10^{-13}$ 的尺度上达到绝对收敛，这对于双精度准确性是合适的。\n- 为了在不产生平凡恒等式的情况下验证归一化，我们使用一个严格不同于计算 $Z(\\lambda)$ 所用收敛阶数 $N$ 的求积阶数 $M$ 来对 $f(\\mu \\,|\\, \\lambda)$ 进行独立的高斯-勒让德积分，即\n  $$\n  I_{M}(\\lambda) = \\sum_{j=1}^{M} \\tilde{w}_{j}\\, \\frac{\\exp\\!\\left(\\lambda P_{2}(\\tilde{\\mu}_{j})\\right)}{Z(\\lambda)},\n  $$\n  然后我们报告\n  $$\n  \\varepsilon(\\lambda) = \\left| I_{M}(\\lambda) - 1 \\right|.\n  $$\n  使用不同的 $M$ 可以防止 $\\varepsilon(\\lambda)$ 因为在分子和分母中重复使用相同的求积和而恒等于零；当 $M$ 足够大时，$\\varepsilon(\\lambda)$ 应该接近机器精度。\n\n合理性检查：\n- 对于 $\\lambda = 0$， $Z(\\lambda)$ 的被积函数为 1，得到 $Z(0) = \\int_{-1}^{1} d\\mu = 2$，而 $S(0)$ 的分子是 $\\int_{-1}^{1} P_{2}(\\mu)\\, d\\mu = 0$ (根据勒让德多项式的正交性)，因此 $S(0) = 0$。算法应在目标容差内重现这些值。\n- 对于正的 $\\lambda$，权重集中在 $P_{2}(\\mu)$ 较大的 $\\mu$ 附近（排列有序的状态），所以 $S(\\lambda) > 0$。对于负的 $\\lambda$，权重集中在 $P_{2}(\\mu)$ 较小的 $\\mu$ 处（平面或扁圆序），所以 $S(\\lambda) < 0$。\n\n算法细节：\n- 使用从标准程序中获得的 $[-1,1]$ 上的高斯-勒让德节点和权重。\n- 在 $N \\in \\{32, 64, 128, \\dots\\}$ 中实现自适应细化，最大可达 $N=4096$ 等值，比较连续的估计值，直到满足 $10^{-13}$ 的标准。\n- 对于归一化检查，选择与 $N$ 不同的 $M$（例如，如果仍在限制内，则为 $M=N+3$ 或 $M=2N$），计算归一化函数 $f(\\mu \\,|\\, \\lambda)$ 的积分，并报告 $\\varepsilon(\\lambda)$。\n\n程序为测试套件中的每个 $\\lambda$ 按指定顺序输出三元组 $[Z(\\lambda), S(\\lambda), \\varepsilon(\\lambda)]$，并聚合成单行顶层列表。所有量都是无量纲的，并且没有角度需要报告，因此不需要角度单位。由于高斯-勒让德求积能非常精确地积分光滑函数，并且我们采用了自适应细化，因此所报告的归一化偏差 $\\varepsilon(\\lambda)$ 对于双精度算术应该接近机器精度。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom numpy.polynomial.legendre import leggauss\n\ndef P2(mu: np.ndarray) -> np.ndarray:\n    \"\"\"Second Legendre polynomial P2(mu) = (3 mu^2 - 1)/2.\"\"\"\n    return 0.5 * (3.0 * mu * mu - 1.0)\n\ndef gauss_legendre_integrate(func, n: int) -> float:\n    \"\"\"Integrate func(mu) over mu in [-1,1] using n-point Gauss-Legendre quadrature.\"\"\"\n    nodes, weights = leggauss(n)\n    values = func(nodes)\n    # Use dot product for numerical stability and performance.\n    return float(np.dot(weights, values))\n\ndef compute_Z_S_and_norm_error(lam: float,\n                               tol: float = 1e-13,\n                               n0: int = 32,\n                               nmax: int = 4096) -> tuple[float, float, float]:\n    \"\"\"\n    Compute Z(lam), S(lam), and an independent normalization error epsilon(lam)\n    using adaptive Gauss-Legendre quadrature.\n    \"\"\"\n    # Adaptive refinement for Z and S\n    n = n0\n    prev_Z = None\n    prev_S = None\n\n    # We predefine a function for the exponential weight for reuse\n    def exp_weight(mu: np.ndarray) -> np.ndarray:\n        return np.exp(lam * P2(mu))\n\n    while True:\n        nodes, weights = leggauss(n)\n        p2_vals = P2(nodes)\n        exp_vals = np.exp(lam * p2_vals)\n\n        Z = float(np.dot(weights, exp_vals))\n        S_num = float(np.dot(weights, p2_vals * exp_vals))\n        S = S_num / Z\n\n        if prev_Z is not None and prev_S is not None:\n            z_change = abs(Z - prev_Z)\n            s_change = abs(S - prev_S)\n            z_thresh = tol * max(1.0, abs(Z))\n            s_thresh = tol * max(1.0, abs(S))\n            if z_change <= z_thresh and s_change <= s_thresh:\n                break\n\n        if n >= nmax:\n            break\n\n        prev_Z, prev_S = Z, S\n        n *= 2\n\n    # Independent normalization check with a strictly different quadrature order\n    m = min(n + 3, nmax) if n + 3 != n else min(n + 1, nmax)\n    if m == n:  # ensure different order; if at cap, try to reduce by 1\n        m = max(2, n - 1)\n        if m == n:\n            # As a last resort (shouldn't happen in our test suite), keep m different by 0. This would make err=0.\n            m = n\n\n    # Define normalized distribution f(mu) = exp(lam * P2(mu)) / Z\n    def f_norm(mu: np.ndarray) -> np.ndarray:\n        return np.exp(lam * P2(mu)) / Z\n\n    nodes_m, weights_m = leggauss(m)\n    I_norm = float(np.dot(weights_m, f_norm(nodes_m)))\n    err = abs(I_norm - 1.0)\n\n    return Z, S, err\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        0.0,\n        0.5,\n        2.0,\n        -1.5,\n        8.0,\n    ]\n\n    results = []\n    for lam in test_cases:\n        Z, S, err = compute_Z_S_and_norm_error(lam)\n        results.append([Z, S, err])\n\n    # Final print statement in the exact required format: single line list of per-case triples.\n    # Remove spaces for a compact, unambiguous representation.\n    results_str = \"[\" + \",\".join(str(triple).replace(\" \", \"\") for triple in results) + \"]\"\n    print(results_str)\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2920228"}]}