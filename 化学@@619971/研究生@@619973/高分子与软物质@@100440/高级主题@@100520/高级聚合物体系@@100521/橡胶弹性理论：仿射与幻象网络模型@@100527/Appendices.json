{"hands_on_practices": [{"introduction": "首先，让我们通过一个基础计算来巩固我们的理论知识。仿射网络模型和幻影网络模型为橡胶的弹性模量提供了两种极限情况下的预测，其区别在于它们如何处理交联点微观涨落。本练习将引导你直接应用这两种模型的核心公式来计算剪切模量 $G$，从而量化因考虑交联点涨落而产生的理论“折减因子”。[@problem_id:2518798]", "problem": "一个理想的、干燥的弹性体网络在熔融状态下由四官能交联点形成，然后进行淬火以固定其拓扑结构。该网络是各向同性的，在剪切下不可压缩，并且交联点之间的链段可以被建模为高斯链。在温度 $T = 298\\ \\mathrm{K}$ 下，弹性活性网络链的密度为 $\\nu = 5\\ \\mathrm{mol/m^{3}}$。考虑两种极限的网络弹性模型：\n\n- 在仿射网络模型中，交联点被约束以遵循宏观形变。\n- 在幻影网络模型中，由于缺少周围基体的约束，交联点会围绕其平均位置进行热涨落；需要考虑这些涨落如何减少每个官能度为 $f$ 的交联点的独立约束数量。\n\n从高斯链的熵弹性以及剪切模量作为关联剪切应力与剪切应变的小应变极限的定义出发，推导每种模型下剪切模量 $G$ 的表达式，并针对 $f = 4$ 的情况进行求值。然后，量化缩减系数，其定义为幻影模型模量与仿射模型模量之比。\n\n使用普适气体常数 $R = 8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}$。将 $G$ 以 $\\mathrm{MPa}$ 为单位表示，并将缩减系数表示为无量纲数。将您的结果四舍五入至四位有效数字。按顺序报告仿射模型模量、幻影模型模量和缩减系数。", "solution": "首先，对问题的科学性和逻辑一致性进行验证。\n\n**步骤一：提取已知条件**\n- 网络类型：理想、干燥的弹性体\n- 交联官能度：$f = 4$（四官能）\n- 网络形成：在熔融态下形成，然后淬火\n- 网络性质：各向同性，剪切下不可压缩\n- 链模型：高斯链\n- 弹性活性网络链密度：$\\nu = 5\\ \\mathrm{mol/m^{3}}$\n- 温度：$T = 298\\ \\mathrm{K}$\n- 仿射网络模型：交联点遵循宏观形变\n- 幻影网络模型：交联点发生热涨落，减少约束\n- 任务：推导并计算两种模型的剪切模量 $G$，并求出幻影模量与仿射模量之比。\n- 常数：$R = 8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}$\n\n**步骤二：使用提取的已知条件进行验证**\n该问题具有科学依据，因为它涉及到橡胶弹性的标准经典理论，比较了两种典型的极限情况：仿射网络模型和幻影网络模型。这些是高分子物理和材料化学中公认的概念。该问题是适定的，提供了计算所需量所必需的所有参数（$\\nu$, $T$, $f$, $R$）。其语言客观而精确。该问题不违反任何基本原理，既不不完整也不矛盾，并且并非琐碎。它代表了特定领域中一个标准的、可形式化的问题。\n\n**步骤三：结论与行动**\n问题被判定为有效。将提供解答。\n\n理想弹性体网络的弹性特性源于形变时高分子链构象熵的变化。一个由高斯链组成的网络在经受主拉伸比 $\\lambda_1, \\lambda_2, \\lambda_3$ 时，其亥姆霍兹自由能密度 $W = \\Delta A_{el}$ 的变化由下式给出：\n$$\nW = C (\\lambda_1^2 + \\lambda_2^2 + \\lambda_3^2 - 3)\n$$\n其中 $C$ 是一个与网络结构和温度相关的常数。材料被设定为不可压缩的，这施加了约束条件 $\\lambda_1 \\lambda_2 \\lambda_3 = 1$。剪切模量 $G$ 可以通过简单剪切下的应力-应变关系来定义。对于上述形式（新胡克形式）的能量密度函数，剪切模量为 $G = 2C$。我们的任务是确定仿射模型和幻影模型中 $C$ 的适当形式。\n\n**仿射网络模型**\n在仿射网络模型中，假定交联点固定在弹性基体中，并随宏观形变发生仿射变换。弹性自由能密度是通过对单位体积内所有 $\\nu$ 个弹性活性链的贡献求和来计算的。对于此模型，常数 $C$ 为：\n$$\nC_{affine} = \\frac{1}{2} \\nu R T\n$$\n此处，$\\nu$ 是弹性活性链的摩尔密度，$R$ 是普适气体常数，$T$ 是绝对温度。\n\n因此，仿射模型的剪切模量 $G_{affine}$ 为：\n$$\nG_{affine} = 2 C_{affine} = 2 \\left( \\frac{1}{2} \\nu R T \\right) = \\nu R T\n$$\n\n**幻影网络模型**\n在幻影网络模型中，交联点不是固定的，而是可以围绕其平均位置自由进行热涨落。这些涨落仅受到连接到每个交联点的 $f$ 条链的约束。这个由 James and Guth 发展的模型认识到，只有交联点平均位置的形变才对弹性恢复力有贡献。热涨落降低了网络的有效弹性响应。其结果是弹性自由能密度按一个与交联官能度 $f$ 相关的因子减少。\n\n有效弹性约束的数量由网络的圈秩 $\\xi$ 来描述。对于一个拥有 $N_{chains}$ 条链和 $N_c$ 个官能度为 $f$ 的交联点的网络，其圈秩为 $\\xi \\approx N_{chains} - N_c$。从拓扑学角度考虑，有 $2 N_{chains} = f N_c$。这使我们能够用 $N_{chains}$ 来表示 $\\xi$：\n$$\n\\xi = N_{chains} - \\frac{2}{f} N_{chains} = N_{chains} \\left( 1 - \\frac{2}{f} \\right)\n$$\n弹性自由能密度与这个有效链数（圈秩密度，$\\xi/V$）成正比。因此，幻影模型的常数 $C$ 为：\n$$\nC_{phantom} = \\left( 1 - \\frac{2}{f} \\right) \\frac{1}{2} \\nu R T\n$$\n幻影模型的剪切模量 $G_{phantom}$ 为：\n$$\nG_{phantom} = 2 C_{phantom} = 2 \\left[ \\left( 1 - \\frac{2}{f} \\right) \\frac{1}{2} \\nu R T \\right] = \\left( 1 - \\frac{2}{f} \\right) \\nu R T\n$$\n对于给定的四官能网络，$f=4$。该表达式简化为：\n$$\nG_{phantom} = \\left( 1 - \\frac{2}{4} \\right) \\nu R T = \\frac{1}{2} \\nu R T\n$$\n\n**数值计算**\n已知条件为：\n$\\nu = 5\\ \\mathrm{mol/m^{3}}$\n$T = 298\\ \\mathrm{K}$\n$R = 8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}$\n\n首先，我们计算乘积 $\\nu R T$：\n$$\n\\nu R T = (5\\ \\mathrm{mol\\,m^{-3}}) \\times (8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}) \\times (298\\ \\mathrm{K})\n$$\n$$\n\\nu R T = 12388.5492... \\ \\mathrm{J\\,m^{-3}} = 12388.5492... \\ \\mathrm{Pa}\n$$\n\n现在我们以兆帕（$\\mathrm{MPa}$）为单位计算模量，其中 $1\\ \\mathrm{MPa} = 10^6\\ \\mathrm{Pa}$。\n\n1.  **仿射模量**：\n    $$\n    G_{affine} = \\nu R T = 12388.5492... \\ \\mathrm{Pa} = 0.0123885... \\ \\mathrm{MPa}\n    $$\n    四舍五入至四位有效数字，$G_{affine} = 0.01239\\ \\mathrm{MPa}$。\n\n2.  **幻影模量**：\n    $$\n    G_{phantom} = \\frac{1}{2} \\nu R T = \\frac{1}{2} \\times (12388.5492... \\ \\mathrm{Pa}) = 6194.2746... \\ \\mathrm{Pa} = 0.00619427... \\ \\mathrm{MPa}\n    $$\n    四舍五入至四位有效数字，$G_{phantom} = 0.006194\\ \\mathrm{MPa}$。\n\n**缩减系数**\n缩减系数是幻影模型模量与仿射模型模量之比。\n$$\n\\text{缩减系数} = \\frac{G_{phantom}}{G_{affine}} = \\frac{\\left( 1 - \\frac{2}{f} \\right) \\nu R T}{\\nu R T} = 1 - \\frac{2}{f}\n$$\n对于 $f=4$：\n$$\n\\text{缩减系数} = 1 - \\frac{2}{4} = 1 - 0.5 = 0.5\n$$\n作为一个报告至四位有效数字的无量纲数，该值为 $0.5000$。\n\n按要求的顺序和精度，最终结果为：$G_{affine} = 0.01239\\ \\mathrm{MPa}$，$G_{phantom} = 0.006194\\ \\mathrm{MPa}$，以及缩减系数为 $0.5000$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 0.01239 & 0.006194 & 0.5000 \\end{pmatrix}}\n$$", "id": "2518798"}, {"introduction": "在建立了两种模型在数学上的区别之后，我们现在来更深入地探讨它们的物理基础。一个高分子体系究竟需要具备怎样的拓扑特征才能表现出橡胶弹性？这个概念性练习将挑战你思考一个功能度为 $f=2$ 的假想网络——本质上是线性链和环的集合——并推断为何仿射模型和幻影模型都预测其剪切模量为零。[@problem_id:2935700] 通过这个练习，你将更清晰地理解为什么一个贯穿始终的网络结构是材料呈现类固体弹性行为的先决条件。", "problem": "一个高分子网络由遵循高斯链统计的统计链段构成。一个永久性交联点的官能度为 $f$，即在交联点汇集的链的数量。考虑一个所有交联点官能度均为 $f=2$ 的系综，因此永久连接的图形分解为没有支化的线性链和环。样品是体相试样，没有链端接枝到外壁上。施加一个均匀形变，其形变梯度张量为 $\\boldsymbol{\\Lambda}$。\n\n仅使用以下基本依据：在由右柯西-格林张量 $\\mathbf{C}=\\boldsymbol{\\Lambda}^{\\mathrm{T}}\\boldsymbol{\\Lambda}$ 表征的宏观形变下，一个端到端矢量为 $\\mathbf{r}$ 的高斯链的熵自由能与 $\\Delta F \\propto \\langle \\mathbf{r}^{\\mathrm{T}}\\mathbf{C}\\,\\mathbf{r}\\rangle$ 成正比，以及宏观剪切模量 $G$ 是自由能密度在小应变下对相应剪切应变的二阶导数，推断决定哪些链是弹性活性链的连通性和约束条件。\n\n对于这个 $f=2$ 的网络，在热力学极限 $V\\to\\infty$ 下，仿射网络模型和幻影网络模型都预测剪切模量趋于零 $G\\to 0$。哪个选项能最好地解释其原因？\n\nA. 在仿射模型中，自由能变化与弹性活性链的数量密度成正比，这些链连接着属于一个无限连接簇的交联点。一个 $f=2$ 的网络只包含有限的链和环，因此没有无限簇，所以弹性活性链的密度按 $V^{-1}$ 比例缩放，并在 $V\\to\\infty$ 时趋于零，得出 $G_{\\text{affine}}\\to 0$。在幻影模型中，交联点位置发生涨落以最小化网络的谐波能量；对于 $f=2$，每个连通组分都是一个一维的链或环，其平移和内部松弛消除了 $O(V)$ 阶的宏观应力，因此单位体积的自由能变化趋于零，得出 $G_{\\text{phantom}}\\to 0$。\n\nB. 仿射模型指定了一个与总链数成正比的非零模量，因为每条链在拉伸下熵都会减少；因此 $G_{\\text{affine}}>0$。幻影模型包含了交联点涨落，这部分地减小了模量，但对于 $f=2$ 的网络并不能将其消除，所以 $G_{\\text{phantom}}>0$。\n\nC. 只有在链长分布是有限聚合度的单分散分布时，两种模型才给出 $G=0$；如果链长分布是多分散的，最长的链将占主导地位，并确保即使在 $f=2$ 时也有 $G>0$。\n\nD. 在两种模型中，缠结都充当有效的交联点，因此即使 $f=2$，网络也因拓扑约束而逾渗，两种模型都预测在热力学极限下 $G>0$。\n\nE. 幻影模型过度松弛了 $f=2$ 的网络，产生了负的剪切模量 $G<0$，而仿射模型因为没有支化而预测 $G=0$。", "solution": "用户要求在橡胶弹性的仿射网络模型和幻影网络模型的框架内，对一个交联点官能度 $f=2$ 的高分子网络进行分析。\n\n### 问题验证\n\n首先，我将验证问题陈述。\n\n**步骤1：提取已知条件**\n- 系统是一个由遵循高斯链统计的统计链段构成的高分子网络。\n- 所有永久性交联点的官能度均为 $f=2$。\n- 网络拓扑由无支化的线性链和环组成。\n- 样品是体相试样，没有链端接枝到外壁上。\n- 施加一个均匀形变，其形变梯度张量为 $\\boldsymbol{\\Lambda}$。\n- 一个端到端矢量为 $\\mathbf{r}$ 的高斯链的熵自由能与 $\\Delta F \\propto \\langle \\mathbf{r}^{\\mathrm{T}}\\mathbf{C}\\,\\mathbf{r}\\rangle$ 成正比，其中 $\\mathbf{C}=\\boldsymbol{\\Lambda}^{\\mathrm{T}}\\boldsymbol{\\Lambda}$ 是右柯西-格林张量。\n- 宏观剪切模量 $G$ 是自由能密度在小应变下对相应剪切应变的二阶导数。\n- 问题询问为何仿射模型和幻影模型都预测，对于这个 $f=2$ 的网络，在热力学极限 $V \\to \\infty$ 下剪切模量会趋于零 $G \\to 0$。\n\n**步骤2：使用提取的已知条件进行验证**\n- **科学依据**：该问题基于橡胶弹性的经典理论，这是高分子物理学的核心课题。高斯链、交联点官能度、仿射和幻影模型以及剪切模量等概念都是标准且科学合理的。\n- **适定性**：该问题要求解释这些模型得出的一个已知结果背后的物理原因。$f=2$ 的设置代表了未交联聚合物（线性和环状）的熔体，这是一个有效的极限情况。问题的结构旨在获得一个唯一的概念性答案。\n- **客观性**：语言技术性强且精确。\n\n**缺陷分析**：\n1.  **科学不合理性**：前提并非不合理。它们描述了一个定义明确的理论系统。\n2.  **不相关性**：该问题与橡胶弹性模型的主题直接相关。\n3.  **不完整/矛盾**：问题陈述所有交联点的官能度都为 $f=2$，但也提到了“线性链”。一条有限的线性链必须有两个末端，这两个末端应是官能度为 $f=1$ 的交联点。然而，在没有接枝末端的体相试样中，并在热力学极限下，有限数量链端的贡献可以忽略不计。该陈述可以解释为系统由非常长的线性链和环组成，其中所有的单体（除了线性链的两个末端）都可以被看作是 $f=2$ 的交联点。本质的拓扑特征——即没有支化点（官能度 $f \\ge 3$ 的交联点）——是明确的。因此，不存在贯穿的网状结构。这种轻微的模糊性并不会使问题的核心失效，即探讨没有网络逾渗的后果。\n4.  **不现实/不可行**：一个 $f=2$ 网络是一个理论上的理想化情况，但它代表了一个具有物理意义的系统：未交联聚合物的熔体。\n5.  **不适定**：该问题是适定的，并且寻求标准的教科书式解释。\n6.  **琐碎性**：这个问题并不琐碎；它要求区分两种主要橡胶弹性模型的物理假设，并将其应用于特定的拓扑结构。\n7.  **不可验证性**：在统计力学的框架内，这些模型的预测是可验证的。\n\n**步骤3：结论与行动**\n问题有效。我将继续进行解答和选项分析。\n\n### 推导与分析\n\n材料的剪切模量 $G$ 是其对剪切形变的宏观弹性响应的度量。在高分子网络中，该模量源于高分子链在形变时构象熵的变化。为了维持宏观应力，这些链必须是贯穿整个样品体积的连接结构的一部分，即一个“逾渗”或“无限”的簇。没有这样的结构，不相连的组分可以平移、旋转或内部重排，从而松弛任何施加的应力。\n\n问题指定了一个网络，其中所有交联点的官能度均为 $f=2$。这意味着每个交联点恰好连接两条链。在拓扑上，这描述了一个由不相连的线性链和环组成的系统。没有支化点（官能度 $f \\ge 3$ 的交联点）来将这些组分连接成一个单一的、贯穿样品的网络。\n\n**仿射网络模型**\n仿射模型假设网络的交联点嵌入在宏观连续介质中，并随形变作仿射变换。也就是说，位于位置 $\\mathbf{r}$ 的交联点移动到 $\\boldsymbol{\\Lambda}\\mathbf{r}$。交联点相对于这些仿射位置的涨落被完全抑制。该模型中的剪切模量由 $G_{\\text{affine}} = \\nu_{\\text{active}} k_B T$ 给出，其中 $\\nu_{\\text{active}}$ 是“弹性活性”链的数量密度，$k_B T$ 是热能。一条弹性活性链是指对网络的宏观弹性有贡献的链。标准定义要求这样的链是凝胶组分的一部分，凝胶组分是贯穿样品的无限簇。\n\n在 $f=2$ 的网络中，无法形成这样的无限簇。该系统是一个“溶胶”组分，是有限尺寸物体（线性链和环）的集合。因此，弹性活性链的数量为零，即 $N_{\\text{active}}=0$。所以其密度 $\\nu_{\\text{active}} = N_{\\text{active}} / V$ 也为零。结果，仿射模型预测 $G_{\\text{affine}} = 0$。即使考虑所有的链，它们所属的有限组分也未被锚定，可以自由地重取向或平移以松弛应力，导致平均宏观应力为零，因此模量也为零。\n\n**幻影网络模型**\n幻影网络模型更真实，因为它允许交联点位置涨落。交联点被视为由高斯链连接，它们可以自由移动以最小化系统的总弹性自由能，但其*平均*位置受仿射变换的约束。对于一个官能度为 $f$ 的通用网络，幻影模型预测的模量为 $G_{\\text{phantom}} = (1-2/f) \\nu k_B T$，其中 $\\nu$ 可以是链的密度或交联点的密度，具体取决于特定公式，但前置因子 $(1-2/f)$ 捕捉了涨落的影响。\n\n对于 $f=2$ 的情况，该公式立即得出 $G_{\\text{phantom}} = (1-2/2) \\nu k_B T = 0$。其物理意义是涨落占主导地位，以至于它们完全松弛了任何应力。一个官能度为 $f=2$ 的交联点仅仅是一维轮廓（链或环）上的一个点。来自两条相连链作用于该交联点的力沿着链的轮廓大小相等、方向相反。该交联点可以沿此轮廓自由滑动。更重要的是，整个有限物体（链或环）可以进行平移运动。这些集体运动不受任何与其他组分的网络连接的阻碍。当施加宏观形变时，单个的链/环可以简单地平移和重排其内部构象，以完全适应新的边界条件，而不会储存任何与系统体积 $V$ 成比例的弹性能。在热力学极限 $V \\to \\infty$ 下，自由能密度的变化 $\\Delta F/V$ 为零。因此，剪切模量 $G_{\\text{phantom}}$ 为零。\n\n### 逐项分析\n\n**A. 在仿射模型中，自由能变化与弹性活性链的数量密度成正比，这些链连接着属于一个无限连接簇的交联点。一个 $f=2$ 的网络只包含有限的链和环，因此没有无限簇，所以弹性活性链的密度按 $V^{-1}$ 比例缩放，并在 $V\\to\\infty$ 时趋于零，得出 $G_{\\text{affine}}\\to 0$。在幻影模型中，交联点位置发生涨落以最小化网络的谐波能量；对于 $f=2$，每个连通组分都是一个一维的链或环，其平移和内部松弛消除了 $O(V)$ 阶的宏观应力，因此单位体积的自由能变化趋于零，得出 $G_{\\text{phantom}}\\to 0$。**\n该选项为两种模型提供了正确的解释。对于仿射模型，它正确地指出了缺乏逾渗簇是活性链为零并因此模量为零的原因。对于幻影模型，它正确地指出有限组分的不受约束的涨落和平移导致了完全的应力松弛。关于自由能变化不是广延量（不与 $V$ 成正比）的论点是精确的。\n**结论：正确。**\n\n**B. 仿射模型指定了一个与总链数成正比的非零模量，因为每条链在拉伸下熵都会减少；因此 $G_{\\text{affine}}>0$。幻影模型包含了交联点涨落，这部分地减小了模量，但对于 $f=2$ 的网络并不能将其消除，所以 $G_{\\text{phantom}}>0$。**\n这是不正确的。它忽略了宏观模量所需的关键拓扑要求。虽然单个链会经历熵力，但如果它们不是贯穿样品的网络的一部分，这并不会转化为宏观模量。它错误地声称两种模型都预测 $G>0$。\n**结论：不正确。**\n\n**C. 只有在链长分布是有限聚合度的单分散分布时，两种模型才给出 $G=0$；如果链长分布是多分散的，最长的链将占主导地位，并确保即使在 $f=2$ 时也有 $G>0$。**\n这是不正确的。链长的多分散性不会改变系统的基本拓扑结构。无论其尺寸如何，一个 $f=2$ 的系统仍然是不相连物体的集合。它不能形成逾渗网络，因此无论链长分布如何，模量都为零。\n**结论：不正确。**\n\n**D. 在两种模型中，缠结都充当有效的交联点，因此即使 $f=2$，网络也因拓扑约束而逾渗，两种模型都预测在热力学极限下 $G>0$。**\n这是不正确的。如问题基本依据中所述，经典的仿射模型和幻影模型不包括缠结。它们只考虑通过永久化学交联点的连通性。问题是关于这些特定模型对具有 $f=2$ 永久交联点的网络的预测。引入缠结是在讨论一个不同的物理模型（例如，爬行理论），这超出了规定范围。对于指定的模型，G=0。\n**结论：不正确。**\n\n**E. 幻影模型过度松弛了 $f=2$ 的网络，产生了负的剪切模量 $G<0$，而仿射模型因为没有支化而预测 $G=0$。**\n这是不正确的。幻影模型预测会完全松弛到零应力状态，对应于 $G=0$，而不是负模量。负模量意味着热力学不稳定性，这是不符合物理规律的。对仿射模型的推理是正确的，但对幻影模型的陈述是根本错误的。\n**结论：不正确。**", "answer": "$$\\boxed{A}$$", "id": "2935700"}, {"introduction": "最后，我们从解析理论过渡到计算实践，从零开始构建一个模型，以观察这些原理在实际中的运作。幻影网络模型的核心思想是，交联点会通过局部重排来最小化网络总的弹性能。本练习将指导你实现一个珠簧网络模拟，以显式地计算这些非仿射位移，并由此得到幻影模量。[@problem_id:2935696] 通过数值方法验证理论折减因子 $(1-2/f)$，你将对幻影模型背后的物理机制获得深刻而直观的理解。", "problem": "你需要实现一个完整的、可运行的程序，该程序构建并分析一个三维珠簧网络，以量化交联点涨落，并从应力-应变数据中提取剪切模量，同时将测得的非仿射（幻影）剪切模量与其相对于仿射预测的理论折扣进行比较。\n\n推导和算法应基于以下基本事实：\n\n- 高斯链弹性：聚合物网络中一个端到端矢量为 $\\mathbf{r}$ 的理想链，其自由能与 $\\lVert \\mathbf{r} \\rVert^2$ 成正比，这导出了一个谐振子弹簧模型。将每个网络链模拟为一个谐振子弹簧，其能量为 $E_{\\text{spring}} = \\tfrac{1}{2} k \\lVert \\mathbf{r} \\rVert^2$，其中 $k$ 是一个恒定的弹簧刚度（使用折合单位，令 $k = 1$）。\n- 网络运动学：设 $\\mathbf{R}_i$ 为边长为 $L$ 的周期性立方晶胞中交联点 $i$ 的参考位置（使用折合单位，晶格间距为 $1$，因此对于 $n \\times n \\times n$ 的晶格，$L = n$）。一个沿 $x$ 方向施加、梯度沿 $y$ 方向的工程剪切应变 $\\gamma$ 由形变梯度 $\\mathbf{F}(\\gamma) = \\mathbf{I} + \\gamma\\, \\mathbf{e}_x \\otimes \\mathbf{e}_y$ 表示，即 $\\mathbf{F} = \\begin{pmatrix} 1 & \\gamma & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}$。\n- 仿射与幻影运动学：仿射预测将节点位置取为 $\\mathbf{r}_i^{\\text{aff}} = \\mathbf{F}\\mathbf{R}_i$。幻影网络允许交联点发生非仿射位移 $\\mathbf{w}_i$，以便在施加的宏观形变下最小化总网络能量：$\\mathbf{r}_i = \\mathbf{F}\\mathbf{R}_i + \\mathbf{w}_i$。\n- 能量公式：对于连接节点 $i$ 和 $j$ 的一个无向键（弹簧），其参考键矢量为 $\\Delta \\mathbf{R}_{ij}$（考虑周期性），当前键矢量为 $\\mathbf{r}_j - \\mathbf{r}_i = \\mathbf{F}\\Delta \\mathbf{R}_{ij} + (\\mathbf{w}_j - \\mathbf{w}_i)$。总能量为 $E(\\gamma, \\{\\mathbf{w}\\}) = \\tfrac{1}{2} \\sum_{\\langle ij \\rangle} \\lVert \\mathbf{F}\\Delta \\mathbf{R}_{ij} + (\\mathbf{w}_j - \\mathbf{w}_i) \\rVert^2$。仿射能量使用对所有 $i$ 均有 $\\mathbf{w}_i \\equiv \\mathbf{0}$。\n- 剪切模量的线性响应提取：在小应变区域，简单剪切下的应变能密度为 $u(\\gamma) = \\tfrac{1}{2} G \\gamma^2 + o(\\gamma^2)$。因此，对于一个体积为 $V$ 的系统，在 $\\gamma \\to 0$ 极限下，剪切模量可以从相对于零应变的能量变化中提取：$G = \\dfrac{2}{V\\,\\gamma^2}\\left[E(\\gamma) - E(0)\\right]$。这等价于 $G = \\left.\\dfrac{\\partial \\sigma_{xy}}{\\partial \\gamma}\\right|_{\\gamma \\to 0}$，其中 $\\sigma_{xy}$ 是剪切应力，但此处你必须使用基于能量的路径。\n\n网络构建和数值方法约束：\n\n- 几何与连通性：在 $n \\times n \\times n$ 的网格上构建一个具有周期性边界条件（PBC）的周期性简单立方网络。使用连接每个节点到其沿坐标轴 $(\\pm \\hat{\\mathbf{x}}, \\pm \\hat{\\mathbf{y}}, \\pm \\hat{\\mathbf{z}})$ 的六个最近邻的键，通过仅列出正向键 $(+\\hat{\\mathbf{x}}, +\\hat{\\mathbf{y}}, +\\hat{\\mathbf{z}})$ 并结合 PBC 来实现；这使得每个交联点的功能度（配位数）$f = 6$ 保持一致。\n- 折合单位：使用折合单位，令 $k = 1$，晶格间距 $a = 1$，玻尔兹曼常数乘以温度 $k_{\\mathrm{B}} T = 1$，因此所有输出都是无量纲的。立方晶胞的体积为 $V = L^3$，其中 $L = n$。\n- 幻影最小化：对于给定的 $\\gamma$，计算最小化 $E(\\gamma, \\{\\mathbf{w}\\})$ 的非仿射位移 $\\{\\mathbf{w}_i\\}$。使用图关联矩阵 $\\mathbf{B}$（行代表键，列代表节点，每行在键的尾节点处为 $-1$，在头节点处为 $+1$）来为每个笛卡尔分量 $\\alpha \\in \\{x,y,z\\}$ 写出二次型 $E_\\alpha = \\tfrac{1}{2}\\lVert \\mathbf{B}\\,\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)} \\rVert^2$，其中 $\\mathbf{d}^{(\\alpha)}$ 堆叠了所有键的 $\\mathbf{F}\\Delta \\mathbf{R}_{ij}$ 的 $\\alpha$ 分量。最小化产生稀疏正规方程 $\\mathbf{L}\\,\\mathbf{w}^{(\\alpha)} = -\\mathbf{B}^{\\mathsf{T}} \\mathbf{d}^{(\\alpha)}$，其中图拉普拉斯算子为 $\\mathbf{L} = \\mathbf{B}^{\\mathsf{T}}\\mathbf{B}$。通过在每个分量中将一个节点的位移固定为零来固定规范，以消除与刚性平移相关的零空间。\n- 能量评估：计算仿射能量变化 $\\Delta E_{\\text{aff}}(\\gamma) = E_{\\text{aff}}(\\gamma) - E_{\\text{aff}}(0)$ 和幻影最小化能量变化 $\\Delta E_{\\text{phan}}(\\gamma) = E_{\\text{min}}(\\gamma) - E_{\\text{min}}(0)$，然后通过 $G = \\dfrac{2\\Delta E}{V \\gamma^2}$ 提取 $G_{\\text{aff}}$ 和 $G_{\\text{phan}}$。\n\n交联点涨落量化和理论折扣因子：\n\n- 交联点涨落：报告在节点上平均的非仿射位移的均方大小 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle$，并报告应变归一化的涨落幅度 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$。\n- 理论幻影折扣因子：推导具有均匀功能度 $f$ 的幻影网络中剪切模量的理论折扣因子，并用它计算幻影剪切模量与仿射剪切模量之间的预测比率，该比率仅用 $f$ 表示。不要使用任何经验拟合；你的推导必须源于消除由二次能量和网络连通性所暗示的交联点平动涨落模式。\n\n要实现和计算的任务：\n\n1.  对于给定的 $n$，构建 $f=6$ 的周期性立方网络，构造其关联矩阵 $\\mathbf{B}$ 和拉普拉斯算子 $\\mathbf{L}$，并实现幻影网络的能量最小化求解器，该求解器使用每个笛卡尔分量一个稀疏线性系统，且每个分量固定一个节点。\n2.  对以下每个测试用例，计算：\n    -   由 $\\Delta E_{\\text{aff}}(\\gamma)$ 计算出的仿射模量 $G_{\\text{aff}}$。\n    -   由 $\\Delta E_{\\text{phan}}(\\gamma)$ 计算出的幻影模量 $G_{\\text{phan}}$。\n    -   测得的折扣因子 $\\phi_{\\text{meas}} = G_{\\text{phan}} / G_{\\text{aff}}$。\n    -   根据 $f$ 推导出的理论预测因子 $\\phi_{\\text{theory}}$，以及绝对误差 $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$。\n    -   对于指定情况，应变归一化的交联点涨落幅度 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$。\n\n3.  使用基于能量的定义，通过在两个小应变下计算 $G_{\\text{phan}}$ 并返回其绝对差值来检查线性响应。\n\n测试套件（所有输出均为无量纲浮点数）：\n\n-   用例 A（有限尺寸，小晶胞）：$n = 2$，$\\gamma = 1.0 \\times 10^{-4}$。返回 $\\phi_{\\text{meas}}$ 和 $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$。\n-   用例 B（较大晶胞）：$n = 4$，$\\gamma = 1.0 \\times 10^{-4}$。返回 $\\phi_{\\text{meas}}$ 和 $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$。\n-   用例 C（线性度检查）：$n = 4$，$\\gamma_1 = 1.0 \\times 10^{-4}$ 和 $\\gamma_2 = 5.0 \\times 10^{-4}$。返回 $|G_{\\text{phan}}(\\gamma_1) - G_{\\text{phan}}(\\gamma_2)|$。\n-   用例 D（交联点涨落）：$n = 4$，$\\gamma = 1.0 \\times 10^{-3}$。返回应变归一化的涨落幅度 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$。\n\n最终输出格式：\n\n- 你的程序必须生成单行输出，其中包含一个逗号分隔的结果列表，并用方括号括起来，顺序如下：\n  1.  用例 A 的 $\\phi_{\\text{meas}}$，\n  2.  用例 A 的 $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$，\n  3.  用例 B 的 $\\phi_{\\text{meas}}$，\n  4.  用例 B 的 $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$，\n  5.  用例 C 的 $|G_{\\text{phan}}(\\gamma_1) - G_{\\text{phan}}(\\gamma_2)|$，\n  6.  用例 D 的 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$。", "solution": "该问题经过验证，被认为是科学上可靠、定义明确且客观的。它代表了聚合物网络弹性领域一个标准的计算问题。所有必要的参数和方法都已提供，以获得唯一的数值解。我将进行完整的推导和算法描述。\n\n### 理论基础\n\n该问题要求分析一个在简单剪切作用下的珠簧聚合物网络，比较仿射和幻影网络模型的预测。\n\n**1. 网络能量公式**\n\n一个网络由 $N$ 个交联点（节点）和弹性链（键）连接而成。在折合单位中，弹簧常数 $k=1$。单个端到端矢量为 $\\mathbf{r}$ 的链的弹性能为 $E_{\\text{spring}} = \\frac{1}{2} \\lVert \\mathbf{r} \\rVert^2$。\n\n交联点的参考位置 $\\{\\mathbf{R}_i\\}$ 构成一个大小为 $n \\times n \\times n$ 的简单立方晶格。周期性晶胞的体积为 $V = n^3$。施加一个宏观简单剪切形变，由形变梯度张量描述：\n$$\n\\mathbf{F}(\\gamma) = \\begin{pmatrix} 1 & \\gamma & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}\n$$\n仿射模型假设交联点完全跟随宏观形变。节点 $i$ 的位置为 $\\mathbf{r}_i^{\\text{aff}} = \\mathbf{F}\\mathbf{R}_i$。\n幻影模型允许相对于仿射位置存在局部的、非仿射的位移 $\\mathbf{w}_i$，使得 $\\mathbf{r}_i = \\mathbf{F}\\mathbf{R}_i + \\mathbf{w}_i$。这些位移通过最小化总网络能量来确定。\n\n对于连接节点 $i$ 和 $j$ 的一个键，其参考矢量为 $\\Delta\\mathbf{R}_{ij} = \\mathbf{R}_j - \\mathbf{R}_i$，当前的键矢量为 $\\mathbf{r}_j - \\mathbf{r}_i = \\mathbf{F}\\Delta\\mathbf{R}_{ij} + (\\mathbf{w}_j - \\mathbf{w}_i)$。网络的总能量是对所有键 $\\langle ij \\rangle$ 的求和：\n$$\nE(\\gamma, \\{\\mathbf{w}\\}) = \\frac{1}{2} \\sum_{\\langle ij \\rangle} \\lVert \\mathbf{F}\\Delta\\mathbf{R}_{ij} + \\mathbf{w}_j - \\mathbf{w}_i \\rVert^2\n$$\n仿射能量 $E_{\\text{aff}}(\\gamma)$ 是通过将所有 $\\mathbf{w}_i = \\mathbf{0}$ 设置得到的。幻影能量 $E_{\\text{min}}(\\gamma)$ 是通过最小化 $E(\\gamma, \\{\\mathbf{w}\\})$ 关于所有非仿射位移 $\\{\\mathbf{w}_i\\}$ 找到的。\n\n**2. 幻影网络的能量最小化**\n\n能量表达式是位移 $\\mathbf{w}_i$ 的二次型。位移的三个笛卡尔分量是解耦的，允许对每个分量 $\\alpha \\in \\{x, y, z\\}$ 分别进行最小化。令 $\\mathbf{w}^{(\\alpha)}$ 为所有 $w_{i,\\alpha}$ 的矢量，$\\mathbf{d}^{(\\alpha)}$ 为所有键的 $\\mathbf{F}\\Delta\\mathbf{R}_{ij}$ 的 $\\alpha$ 分量的矢量。使用图关联矩阵 $\\mathbf{B}$（其中每行对应一个键，并在起始和结束节点的列上分别有 $-1$ 和 $+1$ 的条目），分量 $\\alpha$ 的能量为：\n$$\nE_\\alpha = \\frac{1}{2} \\left\\lVert \\mathbf{B}\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)} \\right\\rVert^2\n$$\n通过将梯度设为零，即 $\\nabla_{\\mathbf{w}^{(\\alpha)}} E_\\alpha = \\mathbf{B}^{\\mathsf{T}}(\\mathbf{B}\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)}) = \\mathbf{0}$，来最小化这个关于 $\\mathbf{w}^{(\\alpha)}$ 的二次型，得到正规方程：\n$$\n(\\mathbf{B}^{\\mathsf{T}}\\mathbf{B})\\mathbf{w}^{(\\alpha)} = -\\mathbf{B}^{\\mathsf{T}}\\mathbf{d}^{(\\alpha)}\n$$\n矩阵 $\\mathbf{L} = \\mathbf{B}^{\\mathsf{T}}\\mathbf{B}$ 是网络的图拉普拉斯算子。$\\mathbf{L}$ 是奇异的；它的零空间由常数矢量构成，对应于整个网络的均匀平移，这不会改变能量。为了获得唯一解，我们必须固定规范。这可以通过固定一个节点（例如节点0）来实现，使得 $\\mathbf{w}_0 = \\mathbf{0}$。这对应于从 $\\mathbf{L}$ 中移除第一行和第一列，并从 $\\mathbf{w}^{(\\alpha)}$ 和右侧矢量中移除第一个元素，从而得到一个可以求解剩余位移的非奇异线性系统。\n\n**3. 剪切模量计算**\n\n剪切模量 $G$ 是在小应变 $\\gamma$ 极限下，从应变能密度 $u(\\gamma) = E(\\gamma)/V$ 的变化中提取的：\n$$\nG = \\lim_{\\gamma \\to 0} \\frac{2 \\left[ E(\\gamma) - E(0) \\right]}{V \\gamma^2}\n$$\n对于仿射模型，$G_{\\text{aff}}$ 是用 $E(\\gamma) = E_{\\text{aff}}(\\gamma)$ 计算的。对于幻影模型，$G_{\\text{phan}}$ 是用 $E(\\gamma) = E_{\\text{min}}(\\gamma)$ 计算的。\n对于指定的具有最近邻键（长度 $a=1$）的立方晶格，有 $N=n^3$ 个节点和 $M=3N$ 个键。对于 $N$ 个节点中的每一个，都有一个在 $+\\hat{\\mathbf{y}}$ 方向上的键，其 $\\Delta\\mathbf{R}=(0,1,0)$。仿射能量变化为 $\\Delta E_{\\text{aff}} = E_{\\text{aff}}(\\gamma) - E_{\\text{aff}}(0) = \\frac{1}{2}\\sum_{\\langle ij \\rangle} (\\lVert\\mathbf{F}\\Delta\\mathbf{R}_{ij}\\rVert^2 - \\lVert\\Delta\\mathbf{R}_{ij}\\rVert^2)$。\n该项计算为 $\\frac{1}{2}\\sum_{\\langle ij \\rangle} (2\\gamma \\Delta R_x \\Delta R_y + \\gamma^2 \\Delta R_y^2)$。对于指定的晶格连通性，所有键的 $\\Delta R_x \\Delta R_y=0$。只有 $N$ 个 $\\Delta\\mathbf{R}=(0,1,0)$ 的键有贡献，得到 $\\Delta E_{\\text{aff}} = \\frac{1}{2} N \\gamma^2$。因此，仿射模量为：\n$$\nG_{\\text{aff}} = \\frac{2 (\\frac{1}{2}N\\gamma^2)}{V\\gamma^2} = \\frac{N\\gamma^2}{n^3\\gamma^2} = 1\n$$\n这为数值实现提供了一个有用的解析基准。\n\n**4. 幻影网络的理论折扣因子**\n\n幻影网络模型预测的模量低于仿射模型，因为一部分宏观应变被涨落的交联点平均位置的重排所吸收，而不是完全转移到链的形变中。理论折扣因子 $\\phi_{\\text{theory}} = G_{\\text{phan}}/G_{\\text{aff}}$ 可以从自由度的论证中导出。\n\n一个理想网络由 $N$ 个交联点（接合点）和 $\\nu_e$ 条弹性活性链组成。在仿射模型中，所有交联点都固定于宏观形变，模量与链的数量成正比：$G_{\\text{aff}} \\propto \\nu_e$。\n在幻影模型中，交联点不是固定的，而是涨落的。由链施加在交联点上的约束减少了总的弹性自由度。对于一个完美网络（没有悬垂链），模量与链的数量减去交联点数量成正比：$G_{\\text{phan}} \\propto (\\nu_e - N)$。\n\n因此，模量的比率为：\n$$\n\\phi_{\\text{theory}} = \\frac{G_{\\text{phan}}}{G_{\\text{aff}}} = \\frac{\\nu_e - N}{\\nu_e} = 1 - \\frac{N}{\\nu_e}\n$$\n对于每个交联点都具有均匀配位数（功能度）$f$ 的网络，每条链连接两个交联点，每个交联点是 $f$ 条链的端点。因此，链的数量为 $\\nu_e = \\frac{f N}{2}$。将此代入比率中得到：\n$$\n\\phi_{\\text{theory}} = 1 - \\frac{N}{fN/2} = 1 - \\frac{2}{f}\n$$\n在问题中，网络是具有最近邻连通性的简单立方晶格，所以每个节点连接到6个邻居。功能度为 $f=6$。\n理论折扣因子为：\n$$\n\\phi_{\\text{theory}} = 1 - \\frac{2}{6} = \\frac{2}{3}\n$$\n\n### 算法实现\n\n该解决方案通过一个Python程序实现，遵循以下步骤：\n\n1.  **网络生成：** 对于给定的边长 $n$，生成 $N=n^3$ 个节点。使用一个从三维晶格坐标 $(i,j,k)$ 到单个节点索引 $u$ 的映射：$u = i \\cdot n^2 + j \\cdot n + k$。\n2.  **键列表和矩阵构造：** 创建所有键及其对应参考矢量 $\\Delta\\mathbf{R}_{ij}$ 的列表。对于指定的周期性简单立方晶格，我们通过将每个节点连接到其在 $+\\hat{\\mathbf{x}}$、 $+\\hat{\\mathbf{y}}$ 和 $+\\hat{\\mathbf{z}}$ 方向上的邻居（考虑周期性边界条件）来定义 $3N$ 个键。参考矢量分别为 $(1,0,0)$、$(0,1,0)$ 和 $(0,0,1)$。\n3.  **关联矩阵和拉普拉斯矩阵：** 构造大小为 $(3N \\times N)$ 的稀疏关联矩阵 $\\mathbf{B}$。使用稀疏矩阵乘法计算图拉普拉斯算子 $\\mathbf{L} = \\mathbf{B}^{\\mathsf{T}}\\mathbf{B}$。\n4.  **非仿射位移求解器：**\n    *   对于给定的剪切应变 $\\gamma$，计算每个笛卡尔分量的驱动矢量 $\\mathbf{d}^{(\\alpha)}$。\n    *   对每个分量，形成右侧矢量 $\\mathbf{b}^{(\\alpha)} = -\\mathbf{B}^{\\mathsf{T}}\\mathbf{d}^{(\\alpha)}$。\n    *   通过从 $\\mathbf{L}$ 中移除与固定节点（节点0）对应的行和列来应用规范固定条件，得到一个可逆矩阵 $\\mathbf{L}'$。类似地，从 $\\mathbf{b}^{(\\alpha)}$ 中移除第一个元素得到 $\\mathbf{b'}^{(\\alpha)}$。\n    *   使用 `scipy.sparse.linalg.spsolve` 求解稀疏线性系统 $\\mathbf{L}'\\mathbf{w'}^{(\\alpha)} = \\mathbf{b'}^{(\\alpha)}$。\n    *   通过为固定节点插入一个零来重构完整的位移矢量 $\\mathbf{w}^{(\\alpha)}$。\n5.  **能量和模量计算：**\n    *   仿射模量 $G_{\\text{aff}}$ 解析地已知为 $1$。\n    *   在应变 $\\gamma$ 下的最小化幻影能量为 $E_{\\text{min}}(\\gamma) = \\frac{1}{2} \\sum_{\\alpha} \\lVert \\mathbf{B}\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)} \\rVert^2$。\n    *   零应变下的能量为 $E_{\\text{min}}(0) = E_{\\text{aff}}(0) = \\frac{1}{2}\\sum_{\\langle ij \\rangle}\\lVert \\Delta\\mathbf{R}_{ij} \\rVert^2 = \\frac{3N}{2}$，因为所有键长均为 $1$。\n    *   幻影模量计算为 $G_{\\text{phan}} = \\frac{2(E_{\\text{min}}(\\gamma) - E_{\\text{min}}(0))}{V\\gamma^2}$。\n6.  **涨落分析：**\n    *   均方非仿射位移计算为 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle = \\frac{1}{N} \\sum_i (\\mathbf{w}_i \\cdot \\mathbf{w}_i)$。\n    *   应变归一化的涨落幅度则为 $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$。\n7.  **测试用例执行：** 对测试套件中指定的每组参数执行以上程序，并收集所需量以用于最终输出。根据要求计算绝对误差 $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$ 和线性度检查 $|G_{\\text{phan}}(\\gamma_1)-G_{\\text{phan}}(\\gamma_2)|$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.sparse import lil_matrix\nfrom scipy.sparse.linalg import spsolve\n\ndef calculate_network_properties(n, gamma, calculate_fluctuations=False):\n    \"\"\"\n    Constructs and analyzes a bead-spring network to find elastic moduli.\n\n    Args:\n        n (int): Side length of the cubic lattice.\n        gamma (float): Applied engineering shear strain.\n        calculate_fluctuations (bool): If True, computes and returns the \n                                       normalized fluctuation amplitude.\n\n    Returns:\n        tuple: A tuple containing (G_aff, G_phan, fluctuation_amplitude).\n               fluctuation_amplitude is 0.0 unless calculate_fluctuations is True.\n    \"\"\"\n    # 1. Network Construction\n    N = n * n * n  # Total number of nodes\n    V = float(N)   # Volume in reduced units\n\n    # Create lists of bonds and their reference vectors\n    bonds = []\n    bond_vectors = []\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                u = i * n**2 + j * n + k\n                \n                # Bond in +x direction (with PBC)\n                v_x = ((i + 1) % n) * n**2 + j * n + k\n                bonds.append((u, v_x))\n                bond_vectors.append([1.0, 0.0, 0.0])\n\n                # Bond in +y direction (with PBC)\n                v_y = i * n**2 + ((j + 1) % n) * n + k\n                bonds.append((u, v_y))\n                bond_vectors.append([0.0, 1.0, 0.0])\n                \n                # Bond in +z direction (with PBC)\n                v_z = i * n**2 + j * n + ((k + 1) % n)\n                bonds.append((u, v_z))\n                bond_vectors.append([0.0, 0.0, 1.0])\n    \n    num_bonds = len(bonds)\n    bond_vectors = np.array(bond_vectors, dtype=np.float64)\n\n    # 2. Matrix Construction (Incidence B, Laplacian L)\n    B = lil_matrix((num_bonds, N), dtype=np.float64)\n    for bond_idx, (u, v) in enumerate(bonds):\n        B[bond_idx, u] = -1.0\n        B[bond_idx, v] = 1.0\n    B = B.tocsc()\n    L = (B.T @ B).tocsc()\n\n    # 3. Affine Modulus Calculation (Analytical)\n    # delta_E_aff = 0.5 * sum over bonds of (gamma^2 * dy^2)\n    # There are N y-bonds, each with dy=1.\n    delta_E_aff = 0.5 * N * gamma**2\n    G_aff = (2.0 * delta_E_aff) / (V * gamma**2) # Should be exactly 1.0\n\n    # 4. Phantom Modulus Calculation (Numerical)\n    # a) Deformation gradient F and driving vector d\n    F = np.array([[1.0, gamma, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]])\n    d_vectors = (F @ bond_vectors.T).T\n    d_x, d_y, d_z = d_vectors[:, 0], d_vectors[:, 1], d_vectors[:, 2]\n\n    # b) Solve for non-affine displacements w\n    # Pin node 0 to remove rigid translation nullspace\n    pinned_node_idx = 0\n    active_nodes_indices = list(range(N))\n    active_nodes_indices.pop(pinned_node_idx)\n    \n    L_prime = L[np.ix_(active_nodes_indices, active_nodes_indices)]\n\n    # RHS vectors b = -B^T * d\n    b_x, b_y, b_z = -B.T @ d_x, -B.T @ d_y, -B.T @ d_z\n    \n    b_x_prime = b_x[active_nodes_indices]\n    b_y_prime = b_y[active_nodes_indices]\n    b_z_prime = b_z[active_nodes_indices]\n    \n    # Solve sparse linear system L'w' = b'\n    w_x_prime = spsolve(L_prime, b_x_prime)\n    w_y_prime = spsolve(L_prime, b_y_prime)\n    w_z_prime = spsolve(L_prime, b_z_prime)\n\n    # Reconstruct full w vectors\n    w_x, w_y, w_z = np.zeros(N), np.zeros(N), np.zeros(N)\n    w_x[active_nodes_indices] = w_x_prime\n    w_y[active_nodes_indices] = w_y_prime\n    w_z[active_nodes_indices] = w_z_prime\n    \n    # c) Calculate minimized energy and modulus\n    # Energy at gamma=0. E(0) = 0.5 * sum(|bond_vector|^2) = 0.5 * num_bonds * 1^2\n    E_min_0 = 0.5 * num_bonds\n\n    # Minimized energy at strain gamma. E_min(gamma) = 0.5 * ||Bw + d||^2 for each component\n    E_min_gamma = 0.5 * (\n        np.linalg.norm(B @ w_x + d_x)**2 +\n        np.linalg.norm(B @ w_y + d_y)**2 +\n        np.linalg.norm(B @ w_z + d_z)**2\n    )\n\n    delta_E_phan = E_min_gamma - E_min_0\n    G_phan = (2.0 * delta_E_phan) / (V * gamma**2)\n    \n    # 5. Fluctuation amplitude calculation (optional)\n    fluctuation_amplitude = 0.0\n    if calculate_fluctuations:\n        # ||w||^2 = wx^2 + wy^2 + wz^2\n        w_squared_mag = w_x**2 + w_y**2 + w_z**2\n        mean_w_squared_mag = np.mean(w_squared_mag)\n        fluctuation_amplitude = mean_w_squared_mag / gamma**2\n\n    return G_aff, G_phan, fluctuation_amplitude\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {'id': 'A', 'n': 2, 'gamma': 1.0e-4},\n        {'id': 'B', 'n': 4, 'gamma': 1.0e-4},\n        {'id': 'C', 'n': 4, 'gammas': [1.0e-4, 5.0e-4]},\n        {'id': 'D', 'n': 4, 'gamma': 1.0e-3}\n    ]\n\n    # Theoretical reduction factor for functionality f=6\n    f = 6.0\n    phi_theory = 1.0 - 2.0 / f\n\n    results = []\n\n    # --- Case A ---\n    case_A = test_cases[0]\n    G_aff_A, G_phan_A, _ = calculate_network_properties(case_A['n'], case_A['gamma'])\n    phi_meas_A = G_phan_A / G_aff_A\n    error_A = abs(phi_meas_A - phi_theory)\n    results.extend([phi_meas_A, error_A])\n\n    # --- Case B ---\n    case_B = test_cases[1]\n    G_aff_B, G_phan_B, _ = calculate_network_properties(case_B['n'], case_B['gamma'])\n    phi_meas_B = G_phan_B / G_aff_B\n    error_B = abs(phi_meas_B - phi_theory)\n    results.extend([phi_meas_B, error_B])\n\n    # --- Case C ---\n    case_C = test_cases[2]\n    _, G_phan_C1, _ = calculate_network_properties(case_C['n'], case_C['gammas'][0])\n    _, G_phan_C2, _ = calculate_network_properties(case_C['n'], case_C['gammas'][1])\n    G_diff_C = abs(G_phan_C1 - G_phan_C2)\n    results.append(G_diff_C)\n\n    # --- Case D ---\n    case_D = test_cases[3]\n    _, _, fluctuation_D = calculate_network_properties(case_D['n'], case_D['gamma'], calculate_fluctuations=True)\n    results.append(fluctuation_D)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2935696"}]}