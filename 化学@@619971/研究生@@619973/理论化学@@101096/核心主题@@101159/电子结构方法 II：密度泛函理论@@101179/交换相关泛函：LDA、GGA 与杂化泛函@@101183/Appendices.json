{"hands_on_practices": [{"introduction": "在密度泛函理论中，一个关键的精确条件是单电子体系的交换相关能 $E_{xc}[n]$ 必须完全抵消其自身的哈特里（Hartree）静电能 $E_{H}[n]$。这项练习提供了一个基础且重要的分析实践：通过对氢原子（最简单的单电子体系）进行直接计算，你将亲手验证并量化局域自旋密度近似（LSDA）在满足这一精确条件上的失败。完成此练习将使你对自相互作用误差（SIE）这一近似泛函的核心缺陷有一个具体而深刻的理解 [@problem_id:2772959]。", "problem": "在科恩-尚密度泛函理论（Kohn-Sham Density Functional Theory, DFT）中，总能量泛函包含经典库仑（哈特里）贡献 $E_{H}[n]$ 和交换相关贡献 $E_{xc}[n]$。对于单电子体系，精确条件要求 $E_{H}[n] + E_{xc}[n] = 0$，以确保没有自相互作用。在局域自旋密度近似（Local Spin Density Approximation, LSDA）中，交换部分取自均匀电子气，并局域地应用于自旋密度。在本题中，您将证明对于氢原子，LSDA 不满足精确的单电子自相互作用相消条件。\n\n在原子单位制下进行计算，因此玻尔半径 $a_{0} = 1$，能量单位为哈特里（Hartree）。考虑氢原子 $1s$ 基态电子，其自旋向上的密度为\n$$\nn(\\mathbf{r}) = n_{\\uparrow}(\\mathbf{r}) = \\frac{1}{\\pi}\\,\\exp\\!\\left(-2 r\\right),\\quad n_{\\downarrow}(\\mathbf{r}) = 0,\n$$\n其中 $r = |\\mathbf{r}|$。使用以下广为接受的定义作为出发点：\n\n- 哈特里能量\n$$\nE_{H}[n] = \\frac{1}{2}\\int \\int \\frac{n(\\mathbf{r})\\,n(\\mathbf{r}')}{|\\mathbf{r}-\\mathbf{r}'|}\\,d^{3}\\mathbf{r}\\,d^{3}\\mathbf{r}'.\n$$\n\n- 自旋极化均匀电子气的局域自旋密度近似（LSDA）交换能（本题中忽略相关能，因此 $E_{xc}^{\\text{LSDA}} \\equiv E_{x}^{\\text{LSDA}}$）\n$$\nE_{x}^{\\text{LSDA}}[n_{\\uparrow},n_{\\downarrow}] = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}\\int \\left( n_{\\uparrow}(\\mathbf{r})^{4/3} + n_{\\downarrow}(\\mathbf{r})^{4/3}\\right) d^{3}\\mathbf{r}.\n$$\n\n计算\n$$\nE_{H}[n] + E_{xc}^{\\text{LSDA}}[n],\n$$\n的精确解析值，并由此明确证明 LSDA 未能抵消单电子密度的哈特里项。将您的最终结果表示为以哈特里（原子单位）为单位的单个精确解析表达式。请勿对结果进行四舍五入。简要解释该非零值是 LSDA 中的自相互作用误差。", "solution": "所述问题具有科学依据，表述清晰，且无任何歧义或矛盾。我们直接开始计算 $E_{H}[n] + E_{xc}^{\\text{LSDA}}[n]$ 的值。计算分两部分进行：评估哈特里能量 $E_{H}[n]$ 和评估局域自旋密度近似 (LSDA) 交换能 $E_{x}^{\\text{LSDA}}[n]$。\n\n首先，我们计算给定电子密度 $n(\\mathbf{r}) = \\frac{1}{\\pi}\\exp(-2r)$ 的哈特里能量 $E_{H}[n]$。该密度是归一化的，因为 $\\int n(\\mathbf{r})\\,d^{3}\\mathbf{r} = \\int_{0}^{\\infty} \\frac{1}{\\pi}\\exp(-2r) 4\\pi r^{2} dr = 4\\int_{0}^{\\infty} r^{2}\\exp(-2r) dr = 4\\left(\\frac{2!}{2^{3}}\\right) = 1$。哈特里能量是该电荷分布的经典静电自排斥能：\n$$\nE_{H}[n] = \\frac{1}{2}\\int \\int \\frac{n(\\mathbf{r})\\,n(\\mathbf{r}')}{|\\mathbf{r}-\\mathbf{r}'|}\\,d^{3}\\mathbf{r}\\,d^{3}\\mathbf{r}'\n$$\n对于球对称密度 $n(r)$，可以通过先求出该密度产生的静电势 $\\phi(r)$，然后计算相互作用能来得到。电势 $\\phi(r)$ 由下式给出：\n$$\n\\phi(r) = 4\\pi \\left( \\frac{1}{r}\\int_{0}^{r} n(r') r'^{2} dr' + \\int_{r}^{\\infty} n(r') r' dr' \\right)\n$$\n代入 $n(r) = \\frac{1}{\\pi}\\exp(-2r)$:\n$$\n\\phi(r) = 4\\left( \\frac{1}{r}\\int_{0}^{r} \\exp(-2r') r'^{2} dr' + \\int_{r}^{\\infty} \\exp(-2r') r' dr' \\right)\n$$\n使用标准积分公式 $\\int x^{n}\\exp(-ax)dx$，我们得到 $\\phi(r) = \\frac{1}{r} - \\left(1 + \\frac{1}{r}\\right)\\exp(-2r)$。\n现在，我们计算哈特里能量：\n$$\nE_{H}[n] = \\frac{1}{2}\\int n(\\mathbf{r}) \\phi(\\mathbf{r}) d^{3}\\mathbf{r} = \\frac{1}{2}\\int_{0}^{\\infty} n(r) \\phi(r) 4\\pi r^{2} dr\n$$\n$$\nE_{H}[n] = \\frac{1}{2} \\int_{0}^{\\infty} \\frac{1}{\\pi}\\exp(-2r) \\left( \\frac{1}{r} - \\left(1 + \\frac{1}{r}\\right)\\exp(-2r) \\right) 4\\pi r^{2} dr\n$$\n$$\nE_{H}[n] = 2 \\int_{0}^{\\infty} \\left( r\\exp(-2r) - (r^{2}+r)\\exp(-4r) \\right) dr\n$$\n我们使用伽马函数积分形式 $\\int_{0}^{\\infty} x^{m}\\exp(-ax)dx = \\frac{m!}{a^{m+1}}$ 来求解积分：\n$$\n\\int_{0}^{\\infty} r\\exp(-2r)dr = \\frac{1!}{2^{2}} = \\frac{1}{4}\n$$\n$$\n\\int_{0}^{\\infty} r^{2}\\exp(-4r)dr = \\frac{2!}{4^{3}} = \\frac{2}{64} = \\frac{1}{32}\n$$\n$$\n\\int_{0}^{\\infty} r\\exp(-4r)dr = \\frac{1!}{4^{2}} = \\frac{1}{16}\n$$\n代入这些结果：\n$$\nE_{H}[n] = 2 \\left( \\frac{1}{4} - \\frac{1}{32} - \\frac{1}{16} \\right) = 2 \\left( \\frac{8-1-2}{32} \\right) = 2 \\left( \\frac{5}{32} \\right) = \\frac{10}{32} = \\frac{5}{16}\n$$\n因此，氢 $1s$ 密度的哈特里能量为 $E_{H}[n] = \\frac{5}{16}$ Hartree。\n\n其次，我们计算 LSDA 交换能 $E_{x}^{\\text{LSDA}}[n]$。题目给出了公式，我们必须遵循它。相关部分被忽略（$E_{c}^{\\text{LSDA}}=0$）。自旋向下的密度为零，$n_{\\downarrow}(\\mathbf{r})=0$。\n$$\nE_{x}^{\\text{LSDA}}[n] = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}\\int n_{\\uparrow}(\\mathbf{r})^{4/3} d^{3}\\mathbf{r}\n$$\n我们代入 $n_{\\uparrow}(\\mathbf{r}) = \\frac{1}{\\pi}\\exp(-2r)$ 并使用球坐标下的体积元 $d^{3}\\mathbf{r} = 4\\pi r^{2}dr$进行积分：\n$$\nE_{x}^{\\text{LSDA}}[n] = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3} \\int_{0}^{\\infty} \\left( \\frac{1}{\\pi}\\exp(-2r) \\right)^{4/3} 4\\pi r^{2} dr\n$$\n$$\nE_{x}^{\\text{LSDA}}[n] = -\\frac{3}{4}\\left(\\frac{3^{1/3}}{\\pi^{1/3}}\\right) \\int_{0}^{\\infty} \\frac{1}{\\pi^{4/3}}\\exp\\left(-\\frac{8r}{3}\\right) 4\\pi r^{2} dr\n$$\n我们合并常数项：\n$$\nE_{x}^{\\text{LSDA}}[n] = -3 \\frac{3^{1/3}}{\\pi^{2/3}} \\int_{0}^{\\infty} r^{2}\\exp\\left(-\\frac{8r}{3}\\right) dr\n$$\n该积分同样是标准形式，其中 $m=2$，$a=8/3$：\n$$\n\\int_{0}^{\\infty} r^{2}\\exp\\left(-\\frac{8r}{3}\\right) dr = \\frac{2!}{(8/3)^{3}} = \\frac{2}{512/27} = \\frac{54}{512} = \\frac{27}{256}\n$$\n将此结果代回能量表达式中：\n$$\nE_{x}^{\\text{LSDA}}[n] = -3 \\frac{3^{1/3}}{\\pi^{2/3}} \\left(\\frac{27}{256}\\right) = -\\frac{81 \\cdot 3^{1/3}}{256 \\pi^{2/3}}\n$$\n最后，我们计算题目所要求的总和：\n$$\nE_{H}[n] + E_{x}^{\\text{LSDA}}[n] = \\frac{5}{16} - \\frac{81 \\cdot 3^{1/3}}{256 \\pi^{2/3}}\n$$\n这个值显然不为零。对于单电子体系，精确的交换相关泛函必须完全抵消哈特里自相互作用，即 $E_{H}[n] + E_{xc}[n] = 0$。我们的计算表明 $E_{H}[n] + E_{x}^{\\text{LSDA}}[n] \\neq 0$。具体来说，$E_{H}[n] = \\frac{5}{16} = \\frac{80}{256} = 0.3125$ Hartree，而 $|E_{x}^{\\text{LSDA}}[n]| \\approx 0.2127$ Hartree。LSDA 交换能的量值不足以抵消虚假的哈特里自相互作用。非零的残差 $E_{H}[n] + E_{x}^{\\text{LSDA}}[n] > 0$ 即为 LSDA 泛函在该体系中的自相互作用误差（self-interaction error, SIE）。这是局域和半局域密度泛函的一个典型缺陷。", "answer": "$$\n\\boxed{\\frac{5}{16} - \\frac{81 \\cdot 3^{1/3}}{256 \\pi^{2/3}}}\n$$", "id": "2772959"}, {"introduction": "自相互作用误差（SIE）会导致一个更普遍的问题，即离域误差（delocalization error），它使得诸如 LDA 和 GGA 这类的半局域泛函错误地偏爱电子电荷的离域分布。此练习构建了一个理想化的双势阱分数电荷模型，这是一个强大的思想实验，旨在揭示离域误差如何导致对电荷转移或化学键断裂等过程的错误预测 [@problem_id:2772971]。通过分析不同泛函下的能量最小化过程，你将直观地看到混合泛函（hybrid functional）如何通过引入一部分精确交换来纠正这种非物理行为。", "problem": "考虑一个 Kohn-Sham 密度泛函理论 (DFT) 模型，用于描述一个分布在两个相同、不重叠的势阱上的单电子系综。这两个势阱相距足够远，可以忽略阱间重叠和库仑耦合。设总系综电子数为一个分数 $w \\in [0,1]$，电荷 $q_{A}$ 和 $q_{B}$ 分别位于势阱 $A$ 和 $B$ 中，使得 $q_{A} + q_{B} = w$ 且 $0 \\le q_{A}, q_{B} \\le 1$。在每个势阱内部，假设密度在一个固定体积 $\\Omega$ 内是均匀的，因此对于 $i \\in \\{A,B\\}$，有 $n_{i} = q_{i}/\\Omega$。忽略所有与势阱间分布无关的贡献（例如，动能和外势中任何不依赖于 $q$ 的部分）。假设阱内哈特里自能为 $E_{H,i} = J q_{i}^{2}$，其中 $J$ 是一个正常数\n$$\nJ \\equiv \\frac{1}{2} \\iint_{\\Omega \\times \\Omega} \\frac{d\\mathbf{r}\\,d\\mathbf{r}'}{|\\mathbf{r} - \\mathbf{r}'|} \\,\\Omega^{-2},\n$$\n因此 $E_{H} = J(q_{A}^{2} + q_{B}^{2})$。使用以下仅交换近似（对于单电子系综，忽略相关能）：\n- 局域密度近似 (LDA) 交换能：$E_{x}^{\\mathrm{LDA}}[n] = - C_{x} \\int n^{4/3}(\\mathbf{r})\\,d\\mathbf{r}$，其中 $C_{x} = \\frac{3}{4} \\left(\\frac{3}{\\pi}\\right)^{1/3}$。对于当前模型，定义 $A \\equiv C_{x}\\,\\Omega^{-1/3}$，因此 $E_{x}^{\\mathrm{LDA}} = -A \\left(q_{A}^{4/3} + q_{B}^{4/3}\\right)$。\n- 广义梯度近似 (GGA)，采用 Perdew–Burke–Ernzerhof (PBE) 形式：对于此粗粒化模型，通过对 LDA 交换能进行固定增强来近似交换能，$E_{x}^{\\mathrm{PBE}} = -\\Lambda A \\left(q_{A}^{4/3} + q_{B}^{4/3}\\right)$，其中 $\\Lambda > 1$ 是一个有效的恒定增强因子，代表界面处的特征性约化梯度值。\n- 全局杂化泛函：$E^{\\mathrm{hyb}} = E_{H} + a\\,E_{x}^{\\mathrm{HF}} + (1-a)\\,E_{x}^{\\mathrm{PBE}}$，其中 $E_{x}^{\\mathrm{HF}}$ 是精确福克交换能，$a \\in [0,1]$ 是混合参数。对于每个势阱中具有分数占据的单个占据轨道，假设 $E_{x,i}^{\\mathrm{HF}} = -J q_{i}^{2}$，因此 $E_{H} + a E_{x}^{\\mathrm{HF}} = (1-a)J(q_{A}^{2}+q_{B}^{2})$。\n\n从 Kohn-Sham 总能量划分 $E[n] = T_{s}[n] + \\int v_{\\mathrm{ext}}(\\mathbf{r}) n(\\mathbf{r})\\,d\\mathbf{r} + E_{H}[n] + E_{xc}[n]$ 出发，并且仅使用上述具有物理合理性的建模假设，执行以下操作：\n- 对于每种近似，将能量表达为固定 $w$ 时关于 $q_{A}$ 的函数，并通过在 $q_{A} \\in [0,w]$ 上的约束最小化，确定平衡分布 $\\{q_{A}^{\\ast}(w), q_{B}^{\\ast}(w)\\}$。\n- 将最小化分布代入每种能量表达式，以获得解析表达式 $E_{\\mathrm{LDA}}^{\\ast}(w)$、$E_{\\mathrm{PBE}}^{\\ast}(w)$ 和 $E_{\\mathrm{hyb}}^{\\ast}(w)$。\n\n所有能量均以哈特里原子单位表示。以 $w$、$J$、$A$、$\\Lambda$ 和 $a$ 的闭式表达式提供您的最终结果。不需要进行数值计算或四舍五入。您的最终答案必须是一个单行矩阵，按顺序包含 $q_{A}^{\\ast}(w)$、$q_{B}^{\\ast}(w)$、$E_{\\mathrm{LDA}}^{\\ast}(w)$、$E_{\\mathrm{PBE}}^{\\ast}(w)$ 和 $E_{\\mathrm{hyb}}^{\\ast}(w)$。", "solution": "问题陈述已经过严格审查，并被认为是有效的。这是一个计算化学中适定的理论问题，基于密度泛函理论 (DFT) 的原理。它为一个具有分数电荷分布的系统——一个用于研究自相互作用和离域误差的已知背景——中常见的交换相关泛函近似的行为建模。所有术语和常量都为所要求的推导目的得到了充分的定义。\n\n任务是找到分布在两个相同势阱中的总电荷 $w$ 的平衡电荷分布 $\\{q_A, q_B\\}$，以及三种不同 DFT 近似：LDA、PBE (一种 GGA) 和杂化泛函对应的基态能量。总电荷受限于 $q_A + q_B = w$，且 $q_A, q_B \\ge 0$。这使我们能够将能量表示为单个变量的函数，我们选择该变量为 $q_A \\in [0,w]$。总能量中与电荷分布无关的项在最小化过程中可以忽略，因为它们只贡献一个常数偏移。\n\n对于任何泛函，总能量的相关部分可以写成以下一般形式：\n$$\nE(q_A) = F(q_A, w-q_A)\n$$\n其中 $F(x,y)$ 是一个关于其自变量的对称函数，即 $F(x,y) = F(y,x)$。因此，能量函数 $E(q_A)$ 关于点 $q_A = w/2$ 对称，因为 $E(w-q_A) = F(w-q_A, q_A) = F(q_A, w-q_A) = E(q_A)$。对于闭区间 $[0, w]$ 上的这样一个对称函数，其全局最小值必须出现在中心点 $q_A = w/2$ 或边界点 $q_A=0$ 和 $q_A=w$。\n\n让我们分析这三种情况。\n\n1.  **局域密度近似 (LDA)**\n    需要最小化的能量由哈特里能和 LDA 交换能之和给出：\n    $$\n    E_{\\mathrm{LDA}}(q_A, q_B) = J(q_A^2 + q_B^2) - A(q_A^{4/3} + q_B^{4/3})\n    $$\n    将其用 $q_A$ 表示，其中 $q_B = w - q_A$：\n    $$\n    E_{\\mathrm{LDA}}(q_A) = J(q_A^2 + (w-q_A)^2) - A(q_A^{4/3} + (w-q_A)^{4/3})\n    $$\n    为找到最小值，我们比较对称点 $q_A = w/2$ 的能量与边界点（例如 $q_A = w$）的能量。\n    在边界点（$q_A=w, q_B=0$）:\n    $$\n    E_{\\mathrm{LDA}}(w) = J(w^2 + 0^2) - A(w^{4/3} + 0^{4/3}) = Jw^2 - Aw^{4/3}\n    $$\n    在中心点（$q_A=w/2, q_B=w/2$）:\n    $$\n    E_{\\mathrm{LDA}}(w/2) = J\\left(\\left(\\frac{w}{2}\\right)^2 + \\left(\\frac{w}{2}\\right)^2\\right) - A\\left(\\left(\\frac{w}{2}\\right)^{4/3} + \\left(\\frac{w}{2}\\right)^{4/3}\\right)\n    $$\n    $$\n    E_{\\mathrm{LDA}}(w/2) = J\\left(\\frac{w^2}{2}\\right) - A\\left(2 \\cdot \\frac{w^{4/3}}{2^{4/3}}\\right) = \\frac{J}{2}w^2 - 2^{1-4/3} A w^{4/3} = \\frac{J}{2}w^2 - 2^{-1/3} A w^{4/3}\n    $$\n    如果 $E_{\\mathrm{LDA}}(w/2) < E_{\\mathrm{LDA}}(w)$，则对称的、离域的解（$q_A=w/2$）是最小值：\n    $$\n    \\frac{J}{2}w^2 - 2^{-1/3} A w^{4/3} < Jw^2 - Aw^{4/3}\n    $$\n    $$\n    A(1 - 2^{-1/3})w^{4/3} < \\frac{J}{2}w^2\n    $$\n    $$\n    w^{2/3} > \\frac{2A}{J}(1 - 2^{-1/3})\n    $$\n    这表明解的性质（局域化 vs. 离域化）取决于参数 $A、J$ 和总电荷 $w$ 的具体值。这将导致 $q_A^*(w)$ 的一个分段定义的解，这与所要求的单一解析表达式格式不兼容。然而，LDA 和 GGA 的问题设置模拟了被广泛研究的离域误差，其中半局域泛函会虚假地降低离域分数电荷的能量。为了提供一个能反映所建模物理现象的解，我们将继续假设参数处于离域解是稳定解的范围内。这是研究 DFT 泛函误差时主要关注的情况。因此，我们假设满足上述条件。\n\n    在此假设下，平衡分布为：\n    $$\n    q_A^{\\ast}(w) = \\frac{w}{2}, \\quad q_B^{\\ast}(w) = \\frac{w}{2}\n    $$\n    最小化的能量为：\n    $$\n    E_{\\mathrm{LDA}}^{\\ast}(w) = E_{\\mathrm{LDA}}(w/2) = \\frac{J}{2}w^2 - 2^{-1/3} A w^{4/3}\n    $$\n\n2.  **广义梯度近似 (PBE)**\n    能量表达式与 LDA 类似，只是交换常数 $A$ 被替换为 $\\Lambda A$：\n    $$\n    E_{\\mathrm{PBE}}(q_A) = J(q_A^2 + (w-q_A)^2) - \\Lambda A(q_A^{4/3} + (w-q_A)^{4/3})\n    $$\n    数学分析完全相同。施加与之前相同的假设，即离域解是最小值，我们得到相同的平衡分布：\n    $$\n    q_A^{\\ast}(w) = \\frac{w}{2}, \\quad q_B^{\\ast}(w) = \\frac{w}{2}\n    $$\n    将此分布代入能量表达式，得到最小化的能量：\n    $$\n    E_{\\mathrm{PBE}}^{\\ast}(w) = E_{\\mathrm{PBE}}(w/2) = \\frac{J}{2}w^2 - 2^{-1/3} \\Lambda A w^{4/3}\n    $$\n\n3.  **杂化泛函**\n    杂化泛函的能量表示为：\n    $$\n    E^{\\mathrm{hyb}} = E_{H} + a\\,E_{x}^{\\mathrm{HF}} + (1-a)\\,E_{x}^{\\mathrm{PBE}}\n    $$\n    使用所提供的恒等式 $E_{H} + a E_{x}^{\\mathrm{HF}} = (1-a)J(q_{A}^{2}+q_{B}^{2})$ 和 $E_{x}^{\\mathrm{PBE}} = -\\Lambda A (q_{A}^{4/3} + q_{B}^{4/3})$，我们得到：\n    $$\n    E^{\\mathrm{hyb}}(q_A, q_B) = (1-a)J(q_A^2 + q_B^2) - (1-a)\\Lambda A(q_A^{4/3} + q_B^{4/3})\n    $$\n    $$\n    E^{\\mathrm{hyb}}(q_A, q_B) = (1-a) \\left[ J(q_A^2 + q_B^2) - \\Lambda A(q_A^{4/3} + q_B^{4/3}) \\right] = (1-a) E_{\\mathrm{PBE}}(q_A, q_B)\n    $$\n    由于 $a \\in [0,1]$，因子 $(1-a)$ 是非负的。因此，最小化 $E^{\\mathrm{hyb}}$ 等价于最小化 $E_{\\mathrm{PBE}}$（对于 $a<1$ 的情况）。当 $a=1$ 时，能量为零，任何分布都是最小值。假设 $a<1$，平衡分布与 PBE 的相同：\n    $$\n    q_A^{\\ast}(w) = \\frac{w}{2}, \\quad q_B^{\\ast}(w) = \\frac{w}{2}\n    $$\n    最小化的杂化能则是最小化 PBE 能量的 $(1-a)$ 倍：\n    $$\n    E_{\\mathrm{hyb}}^{\\ast}(w) = (1-a) E_{\\mathrm{PBE}}^{\\ast}(w) = (1-a) \\left( \\frac{J}{2}w^2 - 2^{-1/3} \\Lambda A w^{4/3} \\right)\n    $$\n\n综合这些结果，即可得出平衡分布和相应的最小化能量的最终表达式。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{w}{2} & \\frac{w}{2} & \\frac{J}{2}w^2 - 2^{-1/3} A w^{4/3} & \\frac{J}{2}w^2 - 2^{-1/3} \\Lambda A w^{4/3} & (1-a) \\left( \\frac{J}{2}w^2 - 2^{-1/3} \\Lambda A w^{4/3} \\right) \\end{pmatrix}}\n$$", "id": "2772971"}, {"introduction": "从解析模型到实际的分子计算，需要将抽象的数学公式转化为稳健的数值算法。这项动手实践旨在带你深入了解量子化学计算程序的核心机制：构建用于实空间积分的原子中心数值格点 [@problem_id:2772979]。你将亲自设计并实现径向和角度积分方案，并用它来计算广义梯度近似（GGA）的交换能。这不仅能巩固你对交换相关泛函积分的理解，还能让你获得宝贵的计算化学编程经验。", "problem": "您将实现一个完整、可运行的程序，该程序构建由径向求积和角度求积组成的、以原子为中心的数值积分网格，并使用这些网格计算模型电子密度的广义梯度近似 (GGA) 交换能。目标是从第一性原理出发设计求积法则，实现这些法则，并数值分析计算出的总交换能相对于网格尺寸的收敛性。本问题陈述中的所有数学符号和数字均使用 LaTeX 格式。\n\n从以下基本定义和事实开始。\n\n1) 局域密度近似 (LDA) 中的交换能由以下实空间积分给出\n$$\nE_{x}^{\\mathrm{LDA}} = \\int_{\\mathbb{R}^3} e_{x}^{\\mathrm{LDA}}(\\mathbf{r}) \\, d^3 r,\n\\quad\ne_{x}^{\\mathrm{LDA}}(\\mathbf{r}) = - C_{x} \\, n(\\mathbf{r})^{4/3},\n\\quad\nC_{x} = \\frac{3}{4} \\left(\\frac{3}{\\pi}\\right)^{1/3},\n$$\n其中 $n(\\mathbf{r})$ 是电子密度。\n\n2) 在广义梯度近似 (GGA) 中，LDA 能量密度被一个依赖于约化密度梯度 $s(\\mathbf{r})$ 的增强因子 $F_{x}(s)$ 所调制，得到\n$$\nE_{x}^{\\mathrm{GGA}} = \\int_{\\mathbb{R}^3} e_{x}^{\\mathrm{GGA}}(\\mathbf{r}) \\, d^3 r,\n\\quad\ne_{x}^{\\mathrm{GGA}}(\\mathbf{r}) = e_{x}^{\\mathrm{LDA}}(\\mathbf{r}) \\, F_{x}\\!\\left(s(\\mathbf{r})\\right).\n$$\n一个标准选择是 Perdew–Burke–Ernzerhof (PBE) 交换增强，具体规定为\n$$\nF_{x}(s) = 1 + \\kappa - \\frac{\\kappa}{1 + \\mu s^2/\\kappa},\n\\quad\n\\kappa = 0.804,\n\\quad\n\\mu = 0.21951,\n$$\n其中约化梯度为\n$$\ns(\\mathbf{r}) = \\frac{|\\nabla n(\\mathbf{r})|}{2 k_{F}(\\mathbf{r}) \\, n(\\mathbf{r})},\n\\quad\nk_{F}(\\mathbf{r}) = \\left(3 \\pi^2 n(\\mathbf{r}) \\right)^{1/3}.\n$$\n\n3) 在球坐标 $(r,\\theta,\\phi)$ 中（角度以弧度为单位），体积元为 $d^3 r = r^2 \\sin\\theta \\, dr \\, d\\theta \\, d\\phi$，标量场 $n(r,\\theta,\\phi)$ 的梯度平方为\n$$\n|\\nabla n|^2 = \\left(\\frac{\\partial n}{\\partial r}\\right)^2 + \\frac{1}{r^2} \\left(\\frac{\\partial n}{\\partial \\theta}\\right)^2 + \\frac{1}{r^2 \\sin^2\\theta} \\left(\\frac{\\partial n}{\\partial \\phi}\\right)^2.\n$$\n\n4) 考虑以下归一化的、物理上合理的模型密度，它们由衰减指数 $\\zeta > 0$、角度各向异性参数 $\\beta$（其中 $|\\beta| \\le 1$）、方位调制振幅 $\\gamma$（其中 $0 \\le \\gamma < 1$）以及整数方位角模 $m \\ge 1$ 参数化：\n- S-型（球对称）密度：\n$$\nn_{s}(r,\\theta,\\phi) = \\frac{\\zeta^3}{\\pi} \\, e^{-2 \\zeta r}.\n$$\n- 具有极向和方位调制的各向异性密度：\n$$\nn_{a}(r,\\theta,\\phi) = \\frac{\\zeta^3}{\\pi} \\, e^{-2 \\zeta r} \\, \\left(1 + \\beta \\, P_{2}(\\cos\\theta)\\right)\\, \\left(1 + \\gamma \\cos(m \\phi)\\right),\n$$\n其中 $P_{2}(x)$ 是2阶勒让德多项式，$P_{2}(x) = \\tfrac{1}{2}(3x^2-1)$。对于指定的 $\\beta$ 和 $\\gamma$ 范围，这些密度是非负的。归一化常数的选择使得 $\\int n(\\mathbf{r}) \\, d^3 r = 1$。\n\n您的程序必须设计并实现以下求积方案：\n\nA) 径向求积。通过\n$$\nr(t) = a \\, \\frac{t}{1-t},\n\\quad\na = \\frac{1}{\\zeta},\n$$\n将半无限区间 $r \\in [0,\\infty)$ 映射到有限区间 $t \\in [0,1)$，\n其雅可比行列式为\n$$\n\\frac{dr}{dt} = \\frac{a}{(1-t)^2}.\n$$\n对变量 $t$ 在单位区间上使用具有 $N_r$ 个点的 Gauss–Legendre 求积（通过从标准 Gauss–Legendre 节点在 $[-1,1]$ 上的仿射映射实现），并通过同时包含雅可比行列式 $\\tfrac{dr}{dt}$ 和来自体积元的因子 $r^2$ 来组合成能够正确积分 $\\int_{0}^{\\infty} f(r)\\, r^2 \\, dr$ 的径向权重。\n\nB) 角度求积。对于极角，使用在 $x \\in [-1,1]$ 上具有 $N_{\\theta}$ 个节点的 Gauss–Legendre 求积（其中 $x=\\cos\\theta$），以积分 $\\int_{0}^{\\pi} g(\\theta) \\sin\\theta\\, d\\theta = \\int_{-1}^{1} g(\\arccos x)\\, dx$。对于方位角，使用在 $[0,2\\pi)$ 上的具有 $N_{\\phi}$ 个等距点的梯形法则，每个点的权重为 $\\Delta \\phi = \\tfrac{2\\pi}{N_{\\phi}}$。\n\n使用以上方法，为两种模型密度 $n_{s}$ 和 $n_{a}$ 实现 $E_{x}^{\\mathrm{GGA}}$ 的计算。计算 $|\\nabla n|$ 所需的所有角向导数必须根据给定的 $n_{s}$ 和 $n_{a}$ 进行解析计算。所有积分必须使用设计的求积方案进行数值计算。使用以弧度为单位的角度。为确保在坐标奇点附近的数值稳健性，您可以在必要时通过添加一个小的正数常量来正则化除以 $r$ 或 $\\sin\\theta$ 的运算，前提是您不偏离其渐近收敛性。\n\n测试套件。您的程序必须为以下六个测试用例计算以哈特里（原子单位）为单位的 PBE GGA 交换能 $E_{x}^{\\mathrm{GGA}}$，并将六个结果作为单个列表打印。对于每个用例，请指明密度类型、参数 $(\\zeta,\\beta,\\gamma,m)$ 和网格尺寸 $(N_r,N_{\\theta},N_{\\phi})$：\n\n- 用例 1：$n_{s}$ 密度，参数 $\\zeta = 1.0$, $\\beta = 0.0$, $\\gamma = 0.0$, $m = 2$，网格尺寸 $(N_r,N_{\\theta},N_{\\phi})=(2,2,1)$。\n- 用例 2：$n_{s}$ 密度，参数 $\\zeta = 1.0$, $\\beta = 0.0$, $\\gamma = 0.0$, $m = 2$，网格尺寸 $(N_r,N_{\\theta},N_{\\phi})=(40,2,1)$。\n- 用例 3：$n_{a}$ 密度，参数 $\\zeta = 1.0$, $\\beta = 0.8$, $\\gamma = 0.3$, $m = 2$，网格尺寸 $(N_r,N_{\\theta},N_{\\phi})=(20,4,4)$。\n- 用例 4：$n_{a}$ 密度，参数 $\\zeta = 1.0$, $\\beta = 0.8$, $\\gamma = 0.3$, $m = 2$，网格尺寸 $(N_r,N_{\\theta},N_{\\phi})=(60,10,12)$。\n- 用例 5：$n_{a}$ 密度，参数 $\\zeta = 2.0$, $\\beta = 0.5$, $\\gamma = 0.3$, $m = 2$，网格尺寸 $(N_r,N_{\\theta},N_{\\phi})=(80,14,18)$。\n- 用例 6：$n_{a}$ 密度，参数 $\\zeta = 1.0$, $\\beta = 0.8$, $\\gamma = 0.6$, $m = 2$，网格尺寸 $(N_r,N_{\\theta},N_{\\phi})=(60,10,6)$。\n\n输出规范。您的程序应产生单行输出，其中包含六个以哈特里为单位的能量值，每个值四舍五入到8位小数，形式为用方括号括起来的逗号分隔列表，例如\n$$\n[\\;E_{1},E_{2},E_{3},E_{4},E_{5},E_{6}\\;].\n$$\n不允许有其他任何输出。\n\n要求回顾：\n- 实现指定的径向和角度求积。\n- 对给定的密度，使用 PBE 交换增强计算 $E_{x}^{\\mathrm{GGA}}$。\n- 角度必须以弧度为单位。\n- 以哈特里为单位输出能量，四舍五入到8位小数，并遵循所描述的精确单行格式。", "solution": "该问题是有效的，因为它在科学上基于密度泛函理论，在数学上是适定的，并为数值计算提供了一套完整且一致的指令。所有给出的公式和参数在指定的理论框架内都是标准和正确的表示。该任务是计算化学中的一个标准数值练习，要求实现求积法则并应用已定义的物理公式。\n\n目标是为指定的模型电子密度计算广义梯度近似 (GGA) 交换能 $E_{x}^{\\mathrm{GGA}}$。总能量由 GGA 能量密度 $e_{x}^{\\mathrm{GGA}}(\\mathbf{r})$ 的三维积分给出：\n$$\nE_{x}^{\\mathrm{GGA}} = \\int_{\\mathbb{R}^3} e_{x}^{\\mathrm{GGA}}(\\mathbf{r}) \\, d^3 r\n$$\n该积分使用球坐标 $(r, \\theta, \\phi)$ 下一维求积法则的乘积进行数值计算。体积元为 $d^3r = r^2 \\sin\\theta \\, dr \\, d\\theta \\, d\\phi$。因此积分为：\n$$\nE_{x}^{\\mathrm{GGA}} = \\int_{0}^{2\\pi} d\\phi \\int_{0}^{\\pi} \\sin\\theta \\, d\\theta \\int_{0}^{\\infty} r^2 \\, dr \\ e_{x}^{\\mathrm{GGA}}(r, \\theta, \\phi)\n$$\n该积分被离散化为在一个点网格 $(r_i, \\theta_j, \\phi_k)$ 上的求和。\n\n首先，我们按照规定为每个坐标构建求积网格和权重。\n\n对半无限区间 $r \\in [0, \\infty)$ 的径向求积是通过变量替换来构建的。映射 $r(t) = a \\frac{t}{1-t}$（其中 $a = 1/\\zeta$）将积分域变换为 $t \\in [0,1)$。微分元变为 $dr = \\frac{dr}{dt} dt = \\frac{a}{(1-t)^2} dt$。函数 $f(r, \\theta, \\phi)$ 的径向积分（包括来自体积元的 $r^2$ 因子）为：\n$$\n\\int_{0}^{\\infty} f(r, \\theta, \\phi) \\, r^2 \\, dr = \\int_{0}^{1} f(r(t), \\theta, \\phi) \\, [r(t)]^2 \\, \\frac{a}{(1-t)^2} \\, dt\n$$\n这个在 $t \\in [0,1)$ 上的积分使用一个 $N_r$ 点的 Gauss-Legendre 求积来近似。标准的 Gauss-Legendre 节点 $u_i$ 和权重 $w_i^{\\mathrm{GL}}$ 定义在 $[-1,1]$ 上。我们通过仿射映射 $t = (u+1)/2$ 将它们变换到区间 $[0,1)$，得到节点 $t_i = (u_i+1)/2$ 和权重 $w_i^t = w_i^{\\mathrm{GL}}/2$。径向积分则由以下求和近似：\n$$\n\\sum_{i=1}^{N_r} w_i^t \\, f(r_i, \\theta, \\phi) \\, r_i^2 \\, \\frac{a}{(1-t_i)^2}, \\quad \\text{其中 } r_i = r(t_i)\n$$\n在数值上，将对 $dr$ 的积分定义一个有效径向权重 $w_i^{\\mathrm{rad}} = w_i^t \\frac{a}{(1-t_i)^2}$ 是有利的。\n\n对于 $\\theta \\in [0,\\pi]$ 的极角求积通过代换 $x = \\cos\\theta$ 来处理，此时 $dx = -\\sin\\theta \\, d\\theta$。积分变为：\n$$\n\\int_{0}^{\\pi} g(\\theta) \\, \\sin\\theta \\, d\\theta = \\int_{-1}^{1} g(\\arccos x) \\, dx\n$$\n这使用一个在 $[-1,1]$ 上具有节点 $x_j$ 和权重 $w_j^x$ 的 $N_{\\theta}$ 点 Gauss-Legendre 求积来近似。角度节点为 $\\theta_j = \\arccos(x_j)$。极角积分的和为 $\\sum_{j=1}^{N_{\\theta}} w_j^x \\, g(\\theta_j)$。\n\n对于 $\\phi \\in [0, 2\\pi)$ 的方位角求积使用 $N_{\\phi}$ 点梯形法则。节点是等距的，$\\phi_k = k \\frac{2\\pi}{N_{\\phi}}$（其中 $k = 0, \\ldots, N_{\\phi}-1$），权重是均匀的，$w_k^{\\phi} = \\frac{2\\pi}{N_{\\phi}}$。\n\n结合这些方案，总能量积分通过以下离散和来近似：\n$$\nE_{x}^{\\mathrm{GGA}} \\approx \\sum_{i=1}^{N_r} \\sum_{j=1}^{N_{\\theta}} \\sum_{k=1}^{N_{\\phi}} w_i^{\\mathrm{rad}} \\, w_j^x \\, w_k^{\\phi} \\, e_{x}^{\\mathrm{GGA}}(r_i, \\theta_j, \\phi_k) \\, r_i^2\n$$\n\n接下来，我们定义被积函数 $e_{x}^{\\mathrm{GGA}}(r, \\theta, \\phi)$。这需要在每个网格点上计算电子密度 $n(\\mathbf{r})$ 及其梯度 $\\nabla n(\\mathbf{r})$。\nGGA 能量密度为 $e_{x}^{\\mathrm{GGA}} = e_{x}^{\\mathrm{LDA}} F_x(s)$，其中 $e_{x}^{\\mathrm{LDA}} = -C_x n^{4/3}$，且 $C_x = \\frac{3}{4}(\\frac{3}{\\pi})^{1/3}$。PBE 增强因子为 $F_{x}(s) = 1 + \\kappa - \\kappa / (1 + \\mu s^2/\\kappa)$，其中 $\\kappa = 0.804$ 且 $\\mu = 0.21951$。\n约化密度梯度 $s(\\mathbf{r})$ 由下式给出：\n$$\ns(\\mathbf{r}) = \\frac{|\\nabla n(\\mathbf{r})|}{2 k_{F}(\\mathbf{r}) n(\\mathbf{r})} = \\frac{|\\nabla n(\\mathbf{r})|}{2 (3\\pi^2)^{1/3} n(\\mathbf{r})^{4/3}}\n$$\n其中 $|\\nabla n|^2 = (\\frac{\\partial n}{\\partial r})^2 + \\frac{1}{r^2} (\\frac{\\partial n}{\\partial \\theta})^2 + \\frac{1}{r^2 \\sin^2\\theta} (\\frac{\\partial n}{\\partial \\phi})^2$。\n\n对于模型密度，需要其解析导数。对于形式为 $n(r,\\theta,\\phi) = N e^{-2\\zeta r} A(\\theta) B(\\phi)$ 的通用密度：\n- $\\frac{\\partial n}{\\partial r} = -2\\zeta n$\n- $\\frac{\\partial n}{\\partial \\theta} = n \\frac{1}{A(\\theta)} \\frac{dA(\\theta)}{d\\theta}$\n- $\\frac{\\partial n}{\\partial \\phi} = n \\frac{1}{B(\\phi)} \\frac{dB(\\phi)}{d\\phi}$\n\n对于各向异性密度 $n_a$，我们有 $A(\\theta) = 1 + \\beta P_2(\\cos\\theta)$ 和 $B(\\phi) = 1 + \\gamma \\cos(m\\phi)$。其导数为：\n- $\\frac{d A}{d \\theta} = \\beta \\frac{d}{d\\theta} P_2(\\cos\\theta) = \\beta (3\\cos\\theta)(-\\sin\\theta) = -3\\beta \\cos\\theta \\sin\\theta$\n- $\\frac{d B}{d \\phi} = -\\gamma m \\sin(m\\phi)$\n这些表达式被代入 $|\\nabla n|^2$ 的公式中，以计算每个网格点上的 $s(\\mathbf{r})$ 并随后计算 $e_{x}^{\\mathrm{GGA}}(\\mathbf{r})$。球对称密度 $n_s$ 是 $\\beta=0$ 和 $\\gamma=0$ 的特殊情况，此时角向导数为零。\n\n该实现将生成三维网格点和相应的权重。然后，对于 $(r_i, \\theta_j, \\phi_k)$ 点的网格，它将计算 $e_{x}^{\\mathrm{GGA}}(r_i, \\theta_j, \\phi_k)$ 值的矩阵。最终能量通过对该矩阵进行加权求和（包括 $r_i^2$ 因子）得到。所选的 $r$ 和 $\\theta$ 的求积节点自然地避免了 $r=0$ 和 $\\sin\\theta=0$ 处的坐标奇点，从而无需在梯度表达式的分母中进行显式正则化。对于接近零的密度值，使用小的数值阈值以防止浮点错误。", "answer": "```python\nimport numpy as np\nfrom scipy.special import roots_legendre\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for all test cases.\n    \"\"\"\n\n    # Define constants from the problem statement\n    C_x = (3.0 / 4.0) * (3.0 / np.pi)**(1.0 / 3.0)\n    KAPPA = 0.804\n    MU = 0.21951\n\n    def get_radial_grid(N_r, zeta):\n        \"\"\"\n        Constructs the radial grid points and weights.\n        The map is r(t) = a * t / (1-t) for t in [0,1), with a = 1/zeta.\n        Gauss-Legendre quadrature is used for the t-integral.\n        \"\"\"\n        # Gauss-Legendre quadrature nodes and weights on [-1, 1]\n        t_nodes_std, t_weights_std = roots_legendre(N_r)\n        \n        # Map nodes and weights to [0, 1] for variable t\n        t_nodes = (t_nodes_std + 1.0) / 2.0\n        t_weights = t_weights_std / 2.0\n        \n        # Transformation from t to r\n        a = 1.0 / zeta\n        # Ensure t is not exactly 1 to avoid division by zero\n        t_nodes = np.minimum(t_nodes, 1.0 - 1e-16)\n        r_nodes = a * t_nodes / (1.0 - t_nodes)\n        \n        # Jacobian of the transformation r(t), dr/dt\n        dr_dt = a / (1.0 - t_nodes)**2\n\n        # The weight for the integral over dr is w_t * (dr/dt)\n        radial_weights = t_weights * dr_dt\n        \n        return r_nodes, radial_weights\n\n    def get_angular_grids(N_theta, N_phi):\n        \"\"\"\n        Constructs the angular grid points and weights.\n        Polar (theta): Gauss-Legendre for x = cos(theta) on [-1, 1].\n        Azimuthal (phi): Trapezoidal rule on [0, 2*pi).\n        \"\"\"\n        # Polar grid for variable x = cos(theta)\n        x_nodes, polar_weights = roots_legendre(N_theta)\n        # Ensure nodes are within [-1, 1] to avoid domain errors in arccos\n        x_nodes = np.clip(x_nodes, -1.0, 1.0)\n        theta_nodes = np.arccos(x_nodes)\n\n        # Azimuthal grid for phi\n        phi_nodes = np.linspace(0.0, 2.0 * np.pi, N_phi, endpoint=False)\n        azimuthal_weights = np.full(N_phi, 2.0 * np.pi / N_phi)\n\n        return theta_nodes, polar_weights, phi_nodes, azimuthal_weights\n\n    def compute_gga_exchange(zeta, beta, gamma, m, N_r, N_theta, N_phi):\n        \"\"\"\n        Computes the PBE GGA exchange energy for a given model density.\n        \"\"\"\n        # 1. Generate quadrature grids and weights\n        r_nodes, radial_weights = get_radial_grid(N_r, zeta)\n        theta_nodes, polar_weights, phi_nodes, azimuthal_weights = get_angular_grids(N_theta, N_phi)\n        \n        # 2. Create 3D mesh grids for coordinates using 'ij' indexing\n        R, THETA, PHI = np.meshgrid(r_nodes, theta_nodes, phi_nodes, indexing='ij')\n        \n        # 3. Compute the integrand at each grid point\n        EPS = 1e-40  # Small epsilon for numerical stability\n\n        # Calculate density n(r, theta, phi)\n        X = np.cos(THETA)\n        P2 = 0.5 * (3.0 * X**2 - 1.0)\n        \n        A_theta = 1.0 + beta * P2\n        B_phi = 1.0 + gamma * np.cos(m * PHI)\n        \n        norm_const = zeta**3 / np.pi\n        exp_factor = np.exp(-2.0 * zeta * R)\n        \n        n = norm_const * exp_factor * A_theta * B_phi\n        n_reg = n + EPS  # Regularize for division and fractional powers\n\n        # Calculate gradient of density |∇n|\n        # ∂n/∂r\n        dn_dr = -2.0 * zeta * n\n        \n        # ∂n/∂θ\n        dA_dtheta = beta * (3.0 * X) * (-np.sin(THETA))\n        dn_dtheta = norm_const * exp_factor * dA_dtheta * B_phi\n\n        # ∂n/∂φ\n        dB_dphi = -gamma * m * np.sin(m * PHI)\n        dn_dphi = norm_const * exp_factor * A_theta * dB_dphi\n        \n        # |∇n|^2 = (∂n/∂r)² + (1/r²) (∂n/∂θ)² + (1/(r²sin²θ)) (∂n/∂φ)²\n        grad_n_sq = (dn_dr**2 \n                     + (1.0 / (R**2 + EPS)) * dn_dtheta**2 \n                     + (1.0 / (R**2 * np.sin(THETA)**2 + EPS)) * dn_dphi**2)\n        abs_grad_n = np.sqrt(grad_n_sq)\n        \n        # Calculate reduced density gradient s(r)\n        kF = (3.0 * np.pi**2 * n_reg)**(1.0/3.0)\n        s = abs_grad_n / (2.0 * kF * n_reg + EPS)\n\n        # Calculate PBE enhancement factor F_x(s)\n        Fx = 1.0 + KAPPA - KAPPA / (1.0 + MU * s**2 / KAPPA)\n\n        # Calculate LDA and GGA exchange energy densities\n        e_lda = -C_x * n_reg**(4.0/3.0)\n        e_gga = e_lda * Fx\n\n        # 4. Perform the numerical integration\n        # The full integrand is e_gga(r,θ,φ) * r^2 from the volume element\n        integrand = e_gga * R**2\n\n        # Use np.einsum for efficient summation over all grid points\n        total_energy = np.einsum('i,j,k,ijk->', radial_weights, polar_weights, azimuthal_weights, integrand)\n        \n        return total_energy\n\n    # Test cases from the problem statement\n    test_cases = [\n        # (zeta, beta, gamma, m, Nr, N_theta, N_phi)\n        (1.0, 0.0, 0.0, 2, 2, 2, 1),    # Case 1\n        (1.0, 0.0, 0.0, 2, 40, 2, 1),   # Case 2\n        (1.0, 0.8, 0.3, 2, 20, 4, 4),   # Case 3\n        (1.0, 0.8, 0.3, 2, 60, 10, 12), # Case 4\n        (2.0, 0.5, 0.3, 2, 80, 14, 18), # Case 5\n        (1.0, 0.8, 0.6, 2, 60, 10, 6),  # Case 6\n    ]\n\n    results = []\n    for case in test_cases:\n        energy = compute_gga_exchange(*case)\n        results.append(f\"{energy:.8f}\")\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2772979"}]}