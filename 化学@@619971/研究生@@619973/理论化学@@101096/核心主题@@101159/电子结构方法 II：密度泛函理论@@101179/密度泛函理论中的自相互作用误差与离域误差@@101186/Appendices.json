{"hands_on_practices": [{"introduction": "在近似密度泛函理论中，自相互作用和离域误差最直接的表现之一是 Janak 定理的失效。本练习提供了一种动手实践的方法，通过比较由总能量差（一种更可靠的方法）计算的电离势与根据最高占据分子轨道（HOMO）本征值估算的电离势，来量化这一定理的失效程度。通过对简单原子进行此计算，您将对这些误差如何影响基本电子性质获得一个具体而定量的理解。[@problem_id:2804406]", "problem": "给定三个原子的预先计算好的局域密度近似 (LDA) 基态总能量和最高占据 Kohn–Sham 轨道能量数据。使用第一电离能的定义（即阳离子和中性原子之间的基态总能量之差），以及最高占据轨道能量负值的 Kohn–Sham 解释，量化在 LDA 中出现的偏差。所有能量均以哈特里 (hartree) 为单位，计算结果必须以哈特里表示，并四舍五入到六位小数。\n\n使用的基本定义和事实：\n- 在密度泛函理论 (DFT) 中，第一电离能由总能量的有限差分定义为 $I \\equiv E(N-1) - E(N)$，其中 $E(M)$ 表示 $M$ 电子体系的精确基态总能量。\n- 在精确的 Kohn–Sham (KS) DFT 中，成立 $I = -\\varepsilon_{\\mathrm{HOMO}}$，其中 $\\varepsilon_{\\mathrm{HOMO}}$ 是最高占据的 KS 本征值，但近似泛函，如局域密度近似 (LDA)，通常不满足此等式。\n\n你的任务：\n- 对每个原子，计算 $I = E(N-1) - E(N)$。\n- 计算 $-\\varepsilon_{\\mathrm{HOMO}}$。\n- 计算有符号偏差 $\\Delta = I - \\left(-\\varepsilon_{\\mathrm{HOMO}}\\right)$。\n- 为每个原子报告三元组 $[I,\\,-\\varepsilon_{\\mathrm{HOMO}},\\,\\Delta]$。\n\n测试套件数据（LDA，相关处为自旋非极化；数值为代表性的自洽值）：\n- 氢 (Hydrogen): $E_{\\mathrm{LDA}}(N=1) = -0.478$, $E_{\\mathrm{LDA}}(N-1=0) = 0.000$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.270$。\n- 氦 (Helium): $E_{\\mathrm{LDA}}(N=2) = -2.834$, $E_{\\mathrm{LDA}}(N-1=1) = -1.940$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.571$。\n- 氖 (Neon): $E_{\\mathrm{LDA}}(N=10) = -128.200$, $E_{\\mathrm{LDA}}(N-1=9) = -127.360$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.540$。\n\n测试套件的覆盖范围基本原理：\n- 氢 (Hydrogen) 作为一个边缘案例，$E(N-1)=0$ 且体系只有一个电子，突显了自相互作用。\n- 氦 (Helium) 是一个闭壳层轻原子，用于探测从单电子到双电子行为的过渡。\n- 氖 (Neon) 是一个闭壳层重原子，用于探测多电子行为和离域趋势。\n\n要求的最终输出格式：\n- 你的程序应生成单行输出，其中包含一个由三个列表组成的逗号分隔列表，每个列表对应一个原子（依次为 Hydrogen、Helium、Neon），每个内部列表包含三个浮点数 $[I,\\,-\\varepsilon_{\\mathrm{HOMO}},\\,\\Delta]$，所有数值均四舍五入到六位小数。\n- 该行必须严格按照以下格式：\n  “[[a1,a2,a3],[b1,b2,b3],[c1,c2,c3]]”\n  其中每个 $a_i$, $b_i$, $c_i$ 是以哈特里为单位的浮点数，小数点后恰好有六位数字。\n\n不会向你的程序提供任何输入；它必须使用上面嵌入的测试套件数据并打印所需的单行输出。", "solution": "该问题已经过验证，被认为是有效的。它在科学上基于密度泛函理论 (DFT) 的原理，问题陈述清晰且提供了所有必要数据，表述客观。我们将着手提供一个解决方案。\n\n核心任务是在局域密度近似 (LDA) 框架内，量化计算第一电离能 $I$ 的两种方法之间的差异。在精确的 DFT 中，第一电离能由两个等价的表达式给出。第一个是 $(N-1)$ 电子体系和 $N$ 电子体系之间的基态总能量之差：\n$$I \\equiv E(N-1) - E(N)$$\n这通常被称为 $\\Delta$SCF 方法。第二个源于 Janak 定理，该定理将总能量对轨道占据数的导数与轨道本征值联系起来。对于最高占据分子轨道 (HOMO)，这导致了精确关系：\n$$I = -\\varepsilon_{\\mathrm{HOMO}}$$\n其中 $\\varepsilon_{\\mathrm{HOMO}}$ 是最高占据 Kohn-Sham 轨道的能量。\n\n对于近似的交换相关泛函，如 LDA，这个等式并不保证成立。LDA 未能满足此条件是一个众所周知的缺陷，源于自相互作用误差和相关的离域误差。在这种近似势中，一个电子会与自身被人为延展开的电荷密度发生虚假的相互作用。这种非物理的自排斥作用抬高了轨道能量，特别是 $\\varepsilon_{\\mathrm{HOMO}}$，使其负值程度低于应有的水平。因此，$-\\varepsilon_{\\mathrm{HOMO}}$ 成为对电离能的一个很差的近似。\n\n我们将使用两种定义计算电离能，然后计算每个指定原子的有符号偏差 $\\Delta$。该偏差定义为：\n$$\\Delta = I - (-\\varepsilon_{\\mathrm{HOMO}})$$\n一个非零的 $\\Delta$ 值量化了 LDA 泛函在这一基本性质上的误差。所有能量单位均为哈特里 (hartree)。\n\n对于氢 (Hydrogen) 原子 ($N=1$)：\n提供的数据为 $E_{\\mathrm{LDA}}(N=1) = -0.478$, $E_{\\mathrm{LDA}}(N-1=0) = 0.000$, 以及 $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.270$。\n由总能量差计算的电离能为：\n$$I_{\\mathrm{H}} = E_{\\mathrm{LDA}}(0) - E_{\\mathrm{LDA}}(1) = 0.000 - (-0.478) = 0.478$$\n由 HOMO 本征值计算的电离能为：\n$$-\\varepsilon_{\\mathrm{HOMO, H}}^{\\mathrm{LDA}} = -(-0.270) = 0.270$$\n偏差为：\n$$\\Delta_{\\mathrm{H}} = I_{\\mathrm{H}} - (-\\varepsilon_{\\mathrm{HOMO, H}}^{\\mathrm{LDA}}) = 0.478 - 0.270 = 0.208$$\n对于单电子的氢原子，这个偏差是自相互作用误差的纯粹体现。\n\n对于氦 (Helium) 原子 ($N=2$)：\n提供的数据为 $E_{\\mathrm{LDA}}(N=2) = -2.834$, $E_{\\mathrm{LDA}}(N-1=1) = -1.940$, 以及 $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.571$。\n由总能量差计算的电离能为：\n$$I_{\\mathrm{He}} = E_{\\mathrm{LDA}}(1) - E_{\\mathrm{LDA}}(2) = -1.940 - (-2.834) = 0.894$$\n由 HOMO 本征值计算的电离能为：\n$$-\\varepsilon_{\\mathrm{HOMO, He}}^{\\mathrm{LDA}} = -(-0.571) = 0.571$$\n偏差为：\n$$\\Delta_{\\mathrm{He}} = I_{\\mathrm{He}} - (-\\varepsilon_{\\mathrm{HOMO, He}}^{\\mathrm{LDA}}) = 0.894 - 0.571 = 0.323$$\n显著的正偏差表明 $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}}$ 的值过高（负得不够）。\n\n对于氖 (Neon) 原子 ($N=10$)：\n提供的数据为 $E_{\\mathrm{LDA}}(N=10) = -128.200$, $E_{\\mathrm{LDA}}(N-1=9) = -127.360$, 以及 $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.540$。\n由总能量差计算的电离能为：\n$$I_{\\mathrm{Ne}} = E_{\\mathrm{LDA}}(9) - E_{\\mathrm{LDA}}(10) = -127.360 - (-128.200) = 0.840$$\n由 HOMO 本征值计算的电离能为：\n$$-\\varepsilon_{\\mathrm{HOMO, Ne}}^{\\mathrm{LDA}} = -(-0.540) = 0.540$$\n偏差为：\n$$\\Delta_{\\mathrm{Ne}} = I_{\\mathrm{Ne}} - (-\\varepsilon_{\\mathrm{HOMO, Ne}}^{\\mathrm{LDA}}) = 0.840 - 0.540 = 0.300$$\n对于多电子体系，该误差依然存在，突显了 LDA 在这方面的系统性失效。在所有情况下，$-\\varepsilon_{\\mathrm{HOMO}}$ 的值都严重低估了由更可靠的总能量差方法预测的电离能。这是由于局域泛函不能很好地再现 $E(N)$ 曲线的凸性，反而产生近乎线性的依赖关系的直接后果。正偏差 $\\Delta$ 是常见近似泛函固有的离域误差的特征。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the deviation between two definitions of the first ionization energy\n    using precomputed Local Density Approximation (LDA) data for H, He, and Ne.\n    \"\"\"\n    \n    # Test suite data (LDA, in hartree): (E_N, E_N_minus_1, epsilon_HOMO)\n    # The data represents ground-state total energies and the highest occupied\n    # Kohn-Sham orbital energy for the neutral atom.\n    test_cases = [\n        # Hydrogen (N=1)\n        (-0.478, 0.000, -0.270),  \n        # Helium (N=2)\n        (-2.834, -1.940, -0.571),  \n        # Neon (N=10)\n        (-128.200, -127.360, -0.540) \n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        E_N, E_N_minus_1, epsilon_HOMO = case\n        \n        # 1. Compute the ionization energy from the total energy difference.\n        # I = E(N-1) - E(N)\n        I_delta_scf = E_N_minus_1 - E_N\n        \n        # 2. Compute the ionization energy from the HOMO eigenvalue.\n        # I = -epsilon_HOMO\n        I_ks_eigenvalue = -epsilon_HOMO\n        \n        # 3. Compute the signed deviation.\n        # Delta = I_delta_scf - I_ks_eigenvalue\n        deviation = I_delta_scf - I_ks_eigenvalue\n        \n        # Store the triplet [I, -epsilon_HOMO, Delta] for the current atom.\n        atom_results = [I_delta_scf, I_ks_eigenvalue, deviation]\n        all_results.append(atom_results)\n\n    # Format the final output according to the specified format:\n    # \"[[a1,a2,a3],[b1,b2,b3],[c1,c2,c3]]\" with values rounded to six decimal places.\n    formatted_results = []\n    for atom_res in all_results:\n        # Format each number in the inner list to have exactly six decimal places.\n        inner_list_str = f\"[{atom_res[0]:.6f},{atom_res[1]:.6f},{atom_res[2]:.6f}]\"\n        formatted_results.append(inner_list_str)\n        \n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    \n    # Print the single required line.\n    print(final_output_string)\n\n# Execute the main function.\nsolve()\n```", "id": "2804406"}, {"introduction": "为了理解这些误差的根源，我们可以分析一个简单分子的解离过程，这是一个离域误差变得至关重要的经典场景。本实践使用处于无限分离状态的 H$_2^+$ 阳离子模型，对比了精确 DFT（正确预测电子的定域化）与近似泛函（错误地偏好离域的、分数电荷的状态）的行为。这个思想实验揭示了能量-粒子数曲线的非物理凸性是如何导致离域误差的。[@problem_id:2804468]", "problem": "考虑氢二聚体阳离子（化学式为 $\\mathrm{H}_{2}^{+}$）的解离，在核间距非常大的极限下，两个质子定义了两个标记为 $\\mathrm{A}$ 和 $\\mathrm{B}$ 的非重叠片段。系统中只有一个电子。使用以下基本依据：\n\n- 在密度泛函理论（DFT）的精确Kohn–Sham表述中，对于任意单电子密度，Hartree自相互作用被交换相关泛函精确抵消。因此，对于单电子体系，总能量是无相互作用动能与外势能之和，并且根据Perdew–Parr–Levy–Balduz (PPLB) 条件，能量作为分数电子数的函数是分段线性的。\n- 在无限分离时，哈密顿量分离为两个孤立片段，其在位单电子能量分别为 $\\varepsilon_{\\mathrm{A}}$ 和 $\\varepsilon_{\\mathrm{B}}$。对于氢原子，精确的非相对论基态能量为$-0.5$ Hartree。在对称的 $\\mathrm{H}_{2}^{+}$ 情况下，$\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}=-0.5$ Hartree。\n- 在近似的半局域泛函中，如广义梯度近似 (GGA)，对单电子自相互作用的抵消是不完全的。一个用于描述解离时残余离域误差的稳健定性模型是关于片段占据数的凸二次惩罚项，其形式为 $E_{\\mathrm{res}}(\\,n_{\\mathrm{A}}\\,)=\\alpha\\left(n_{\\mathrm{A}}^{2}+\\left(1-n_{\\mathrm{A}}\\right)^{2}\\right)$ (其中 $\\alpha>0$)，这反映了Hartree能量随电荷的二次标度关系。这里，$n_{\\mathrm{A}}\\in[0,1]$ 是定域在片段 $\\mathrm{A}$ 上的电子分数，而 $1-n_{\\mathrm{A}}$ 是定域在片段 $\\mathrm{B}$ 上的电子分数。\n\n任务：\n\n- 仅使用上述基本原理，并假设在无限分离条件下没有片段间的跃迁或重叠，从第一性原理推导作为占据数 $n_{\\mathrm{A}}$ 函数的精确解离极限能量，并确定代表对称性破缺、电子定域化状态的极小化占据数。在完全对称的情况 $\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}$ 下，采用约定，将电子定域化分支对应于 $n_{\\mathrm{A}}=1$。\n- 通过将凸二次残余误差 $E_{\\mathrm{res}}$ 添加到无相互作用片段能量上，构建一个类GGA的近似解离极限能量，并解析地确定在边界约束 $n_{\\mathrm{A}}\\in[0,1]$ 下使该近似能量极小化的占据数 $n_{\\mathrm{A}}^{\\ast}$。指明极小值点何时严格位于区间内部，以及何时在边界达到饱和。\n- 所有能量均以Hartree单位表示。角度不出现。所有最终数值答案必须是实数。所有打印的浮点结果必须四舍五入到小数点后六位。\n\n您的程序必须实现所推导的公式，并对每个测试用例，按此顺序评估以下四个量：精确的最小能量 $E_{\\mathrm{exact}}^{\\min}$ (Hartree)，相应的精确极小化占据数 $n_{\\mathrm{A,exact}}^{\\ast}$，类GGA的最小能量 $E_{\\mathrm{GGA}}^{\\min}$ (Hartree)，以及相应的类GGA极小化占据数 $n_{\\mathrm{A,GGA}}^{\\ast}$。\n\n使用以下参数三元组 $(\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}},\\alpha)$ 的测试套件，所有能量单位均为Hartree：\n\n- $( -0.5, -0.5, 0.1 )$\n- $( -0.48, -0.52, 0.1 )$\n- $( -0.3, -0.7, 0.1 )$\n- $( -0.48, -0.52, 0.01 )$\n- $( -0.5, -0.5, 0.001 )$\n\n您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表形式的结果。该列表必须按照上面指定的精确顺序，并按所列顺序遍历测试套件，连接每个测试用例的四个四舍五入后的值。例如，格式必须为 `[E_{\\mathrm{exact}}^{\\min}(\\text{案例}\\ \\mathrm{A}),n_{\\mathrm{A,exact}}^{\\ast}(\\text{案例}\\ \\mathrm{A}),E_{\\mathrm{GGA}}^{\\min}(\\text{案例}\\ \\mathrm{A}),n_{\\mathrm{A,GGA}}^{\\ast}(\\text{案例}\\ \\mathrm{A}),\\dots]`，不含任何额外的空白字符或文本。", "solution": "我们考虑 $\\mathrm{H}_{2}^{+}$ 在解离极限下的情况，即两个无限分离的片段 $\\mathrm{A}$ 和 $\\mathrm{B}$，其在位单电子能量分别为 $\\varepsilon_{\\mathrm{A}}$ 和 $\\varepsilon_{\\mathrm{B}}$。系统中有一个电子，其在片段 $\\mathrm{A}$ 上的占据数为 $n_{\\mathrm{A}}$，在片段 $\\mathrm{B}$ 上的占据数为 $1-n_{\\mathrm{A}}$，其中 $n_{\\mathrm{A}}\\in[0,1]$。\n\n从第一性原理推导精确解离能。对于任意单电子密度，精确的交换相关泛函会抵消Hartree自相互作用，而Perdew–Parr–Levy–Balduz (PPLB) 条件强制要求总能量相对于每个解耦片段上的电子数呈分段线性关系。在无限分离时，不存在耦合项，因此精确能量作为 $n_{\\mathrm{A}}$ 的函数，就是片段能量之间的线性插值：\n$$\nE_{\\mathrm{exact}}(n_{\\mathrm{A}})=n_{\\mathrm{A}}\\,\\varepsilon_{\\mathrm{A}}+\\left(1-n_{\\mathrm{A}}\\right)\\,\\varepsilon_{\\mathrm{B}}.\n$$\n由于 $E_{\\mathrm{exact}}(n_{\\mathrm{A}})$ 是关于 $n_{\\mathrm{A}}$ 的线性函数，其在闭区间 $[0,1]$ 上的最小值在边界点达到。具体而言，\n$$\nE_{\\mathrm{exact}}^{\\min}=\\min\\left\\{\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}}\\right\\},\\quad\nn_{\\mathrm{A,exact}}^{\\ast}=\\begin{cases}\n1,&\\text{若 }\\varepsilon_{\\mathrm{A}}&lt;\\varepsilon_{\\mathrm{B}},\\\\\n0,&\\text{若 }\\varepsilon_{\\mathrm{B}}&lt;\\varepsilon_{\\mathrm{A}},\\\\\n1,&\\text{若 }\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}\\ \\text{(根据所述选择定域化分支的约定)}.\n\\end{cases}\n$$\n因此，精确解离将整个电子置于能量较低的片段上，在对称情况下，任何 $n_{\\mathrm{A}}\\in[0,1]$ 都是简并的；我们选择 $n_{\\mathrm{A,exact}}^{\\ast}=1$ 来表示片段 $\\mathrm{A}$ 上的一个电子定域化状态。\n\n类GGA的近似能量及其极小值点。像广义梯度近似 (GGA) 这样的半局域泛函不能完全抵消单电子自相互作用，从而产生一个随电荷定域化程度增加而增大的残余凸性离域误差。在解离极限下，对此残余误差的一个最小的、保持对称性的模型是片段占据数的二次惩罚项：\n$$\nE_{\\mathrm{res}}(n_{\\mathrm{A}})=\\alpha\\left(n_{\\mathrm{A}}^{2}+\\left(1-n_{\\mathrm{A}}\\right)^{2}\\right),\\quad \\alpha>0.\n$$\n将此项加到无相互作用片段能量上，得到类GGA的总能量\n$$\nE_{\\mathrm{GGA}}(n_{\\mathrm{A}})=n_{\\mathrm{A}}\\,\\varepsilon_{\\mathrm{A}}+\\left(1-n_{\\mathrm{A}}\\right)\\,\\varepsilon_{\\mathrm{B}}+\\alpha\\left(n_{\\mathrm{A}}^{2}+\\left(1-n_{\\mathrm{A}}\\right)^{2}\\right).\n$$\n为在 $n_{\\mathrm{A}}\\in[0,1]$ 上求 $E_{\\mathrm{GGA}}(n_{\\mathrm{A}})$ 的最小值，我们首先通过求导找到无约束驻点：\n$$\n\\frac{dE_{\\mathrm{GGA}}}{dn_{\\mathrm{A}}}=\\varepsilon_{\\mathrm{A}}-\\varepsilon_{\\mathrm{B}}+2\\alpha\\left(2n_{\\mathrm{A}}-1\\right).\n$$\n令导数为零，得到无约束极小值点\n$$\nn_{\\mathrm{A}}^{\\mathrm{uncon}}=\\frac{1}{2}+\\frac{\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}}{4\\alpha}.\n$$\n因为二阶导数是正常数，$\\frac{d^{2}E_{\\mathrm{GGA}}}{dn_{\\mathrm{A}}^{2}}=4\\alpha>0$，所以该驻点是无约束二次函数的全局极小值点。施加边界约束 $n_{\\mathrm{A}}\\in[0,1]$ 后，得到约束下的极小值点\n$$\nn_{\\mathrm{A,GGA}}^{\\ast}=\\min\\left\\{1,\\max\\left\\{0,\\ \\frac{1}{2}+\\frac{\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}}{4\\alpha}\\right\\}\\right\\}.\n$$\n相应的最小类GGA能量为\n$$\nE_{\\mathrm{GGA}}^{\\min}=E_{\\mathrm{GGA}}\\!\\left(n_{\\mathrm{A,GGA}}^{\\ast}\\right)=n_{\\mathrm{A,GGA}}^{\\ast}\\,\\varepsilon_{\\mathrm{A}}+\\left(1-n_{\\mathrm{A,GGA}}^{\\ast}\\right)\\,\\varepsilon_{\\mathrm{B}}+\\alpha\\left(\\left(n_{\\mathrm{A,GGA}}^{\\ast}\\right)^{2}+\\left(1-n_{\\mathrm{A,GGA}}^{\\ast}\\right)^{2}\\right).\n$$\n内部与边界区域。当且仅当 $0<n_{\\mathrm{A}}^{\\mathrm{uncon}}<1$ 时，极小值点严格位于区间内部，即\n$$\n-2\\alpha<\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}<2\\alpha.\n$$\n如果 $\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}\\leq -2\\alpha$，则 $n_{\\mathrm{A,GGA}}^{\\ast}=0$；如果 $\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}\\geq 2\\alpha$，则 $n_{\\mathrm{A,GGA}}^{\\ast}=1$。在对称情况 $\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}$ 下，无约束极小值点是 $n_{\\mathrm{A}}^{\\mathrm{uncon}}=\\frac{1}{2}$，由于 $\\left(\\frac{1}{2}\\right)^{2}+\\left(1-\\frac{1}{2}\\right)^{2}=\\frac{1}{2}$，最小能量因残余惩罚项 $\\alpha\\left(\\frac{1}{2}\\right)$ 而高于精确值。\n\n计算步骤。对于每个参数三元组 $(\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}},\\alpha)$：\n- 计算 $E_{\\mathrm{exact}}^{\\min}=\\min\\left\\{\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}}\\right\\}$ 和 $n_{\\mathrm{A,exact}}^{\\ast}$，如上所述，根据约定在对称情况下取 $n_{\\mathrm{A,exact}}^{\\ast}=1$。\n- 通过将 $n_{\\mathrm{A}}^{\\mathrm{uncon}}$ 限制在 $[0,1]$ 区间内来计算 $n_{\\mathrm{A,GGA}}^{\\ast}$，然后通过计算 $E_{\\mathrm{GGA}}$ 在 $n_{\\mathrm{A,GGA}}^{\\ast}$ 处的值来得到 $E_{\\mathrm{GGA}}^{\\min}$。\n- 将每个数值输出四舍五入到小数点后六位，并按要求的顺序将结果汇总到一个扁平列表中。\n\n应用于测试套件。使用所列参数（单位为Hartree），我们得到：\n\n- 对于 $( -0.5, -0.5, 0.1 )$: $E_{\\mathrm{exact}}^{\\min}=-0.5$, $n_{\\mathrm{A,exact}}^{\\ast}=1$, $n_{\\mathrm{A,GGA}}^{\\ast}=\\frac{1}{2}$, $E_{\\mathrm{GGA}}^{\\min}=-0.5+0.1\\cdot\\frac{1}{2}=-0.45$。\n- 对于 $( -0.48, -0.52, 0.1 )$: $E_{\\mathrm{exact}}^{\\min}=-0.52$, $n_{\\mathrm{A,exact}}^{\\ast}=0$, $n_{\\mathrm{A,GGA}}^{\\ast}=\\frac{1}{2}+\\frac{-0.52-(-0.48)}{4\\cdot 0.1}=0.4$, 且 $E_{\\mathrm{GGA}}^{\\min}=-0.504+0.1\\cdot 0.52=-0.452$。\n- 对于 $( -0.3, -0.7, 0.1 )$: $E_{\\mathrm{exact}}^{\\min}=-0.7$, $n_{\\mathrm{A,exact}}^{\\ast}=0$, 无约束的 $n_{\\mathrm{A}}^{\\mathrm{uncon}}=-0.5$, 因此 $n_{\\mathrm{A,GGA}}^{\\ast}=0$, 且 $E_{\\mathrm{GGA}}^{\\min}=-0.7+0.1=-0.6$。\n- 对于 $( -0.48, -0.52, 0.01 )$: $E_{\\mathrm{exact}}^{\\min}=-0.52$, $n_{\\mathrm{A,exact}}^{\\ast}=0$, 无约束的 $n_{\\mathrm{A}}^{\\mathrm{uncon}}=-0.5$, 因此 $n_{\\mathrm{A,GGA}}^{\\ast}=0$, 且 $E_{\\mathrm{GGA}}^{\\min}=-0.52+0.01=-0.51$。\n- 对于 $( -0.5, -0.5, 0.001 )$: $E_{\\mathrm{exact}}^{\\min}=-0.5$, $n_{\\mathrm{A,exact}}^{\\ast}=1$, $n_{\\mathrm{A,GGA}}^{\\ast}=\\frac{1}{2}$, 且 $E_{\\mathrm{GGA}}^{\\min}=-0.5+0.001\\cdot\\frac{1}{2}=-0.4995$。\n\n程序将以六位小数的精度重现这些值，并按要求将它们格式化为单个扁平列表。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef clamp(x, lo, hi):\n    return max(lo, min(hi, x))\n\ndef exact_min_energy_and_occupation(eA, eB):\n    # Exact: piecewise linear, minimize at boundaries.\n    if eA < eB:\n        nA = 1.0\n        E = eA\n    elif eB < eA:\n        nA = 0.0\n        E = eB\n    else:\n        # Degenerate symmetric case: choose localized branch on A by convention.\n        nA = 1.0\n        E = eA  # equals eB\n    return E, nA\n\ndef gga_min_energy_and_occupation(eA, eB, alpha):\n    # Unconstrained minimizer for quadratic energy\n    n_uncon = 0.5 + (eB - eA) / (4.0 * alpha)\n    nA = clamp(n_uncon, 0.0, 1.0)\n    # Energy at minimizer\n    E = nA * eA + (1.0 - nA) * eB + alpha * (nA**2 + (1.0 - nA)**2)\n    return E, nA\n\ndef solve():\n    # Define the test cases from the problem statement: (eA, eB, alpha), in Hartree.\n    test_cases = [\n        (-0.5,   -0.5,  0.1),\n        (-0.48,  -0.52, 0.1),\n        (-0.3,   -0.7,  0.1),\n        (-0.48,  -0.52, 0.01),\n        (-0.5,   -0.5,  0.001),\n    ]\n\n    results = []\n    for eA, eB, alpha in test_cases:\n        E_exact, n_exact = exact_min_energy_and_occupation(eA, eB)\n        E_gga, n_gga = gga_min_energy_and_occupation(eA, eB, alpha)\n        # Append rounded values as strings to control formatting and avoid spaces.\n        results.extend([\n            f\"{E_exact:.6f}\",\n            f\"{n_exact:.6f}\",\n            f\"{E_gga:.6f}\",\n            f\"{n_gga:.6f}\",\n        ])\n\n    # Final print statement in the exact required format (single line, no extra spaces).\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2804468"}, {"introduction": "在诊断了误差并理解了其来源之后，我们现在可以着手对其进行明确的量化。本练习将介绍一个约束 DFT (cDFT) 的简化模型，这是一种用于纠正分数电荷误差的强大技术。您将通过计算非约束（且虚假的）分数电荷能量最小值与物理上正确的整数电荷态之间的能量差，来计算离域误差 $\\delta$，从而为泛函的缺陷提供一个切实的度量。[@problem_id:2804379]", "problem": "您的任务是，在一个完整的程序中，形式化并实现一个简化的双片段密度泛函理论 (DFT) 计算模型。该模型通过比较一个无约束的广义梯度近似 (GGA) 最小值与一个强制片段电荷为整数的约束计算，来量化离域误差。您的模型必须在数学上是良构且可解的，并且无需任何外部量子化学软件。\n\n需要使用的基本背景和定义：\n- 在精确密度泛函理论 (DFT) 中，Perdew–Parr–Levy–Balduz (PPLB) 分段线性条件指出，对于一个孤立系统，其精确基态能量作为电子数的函数，在整数之间是分段线性的。对于分离的片段，一个带有一个额外电子的复合系统的精确能量是两个整数电荷态（额外电子定域在任一片段上）中的最小值；任何分数电荷态在能量上都与两个整数端点之间的直线插值简并。\n- 广义梯度近似 (GGA) 等近似方法通常会引入自相互作用和离域误差，从而产生相对于分数电子数的凸能量。这种凸性会虚假地稳定分数电荷态。\n- 约束密度泛函理论 (cDFT) 使用拉格朗日乘子对一个片段强制施加整数电荷约束，从而消除分数电荷离域。\n\n模型构建：\n- 考虑两个片段，标记为 A 和 B，以及一个可以在它们之间分数式分布的额外电子。设片段 A 上的额外电子分数为变量 $x \\in [0,1]$，因此片段 B 上的分数是 $1 - x$。\n- 设 $E_A(0)$ 和 $E_A(1)$ 分别是片段 A 上定域了 0 和 1 个额外电子时的能量（单位为电子伏特）。同样，设 $E_B(0)$ 和 $E_B(1)$ 分别是片段 B 上定域了 0 和 1 个额外电子时的能量。定义能量差 $\\Delta_A = E_A(1) - E_A(0)$ 和 $\\Delta_B = E_B(1) - E_B(0)$。\n- 复合系统的精确分段线性基线（无离域误差）作为 $x$ 的函数，由以下线性贡献给出：\n  $$\n  L_A(x) = (1 - x)\\,E_A(0) + x\\,E_A(1), \\quad L_B(1 - x) = x\\,E_B(0) + (1 - x)\\,E_B(1).\n  $$\n- 为了模拟类似 GGA 的离域误差，通过在每个片段上带有参数 $\\kappa_A \\le 0$ 和 $\\kappa_B \\le 0$（单位为电子伏特）的二次曲率项来增加凸性，从而产生一个附加项 $\\kappa_A\\,x(1 - x) + \\kappa_B\\,x(1 - x)$。符号约定 $\\kappa_i \\le 0$ 会在 $x$ 上产生凸能量，有利于离域。\n- 包含一个片段间的库仑相互作用惩罚项 $J \\ge 0$（单位为电子伏特），该项也与 $x(1 - x)$ 成正比，反映了分离片段上部分电荷之间的静电排斥。\n- 复合系统的总 GGA 模型能量则为：\n  $$\n  E_{\\mathrm{GGA}}(x) = L_A(x) + L_B(1 - x) + \\big(\\kappa_A + \\kappa_B + J\\big)\\,x(1 - x).\n  $$\n- 约束密度泛函理论 (cDFT) 能量通过拉格朗日乘子将 $x$ 限制在 $x \\in \\{0,1\\}$，从而强制片段电荷为整数。在此模型中，cDFT 能量为：\n  $$\n  E_{\\mathrm{cDFT}} = \\min\\!\\big\\{ E_{\\mathrm{GGA}}(0),\\, E_{\\mathrm{GGA}}(1) \\big\\}.\n  $$\n  注意，在 $x=0$ 和 $x=1$ 时，曲率项和片段间相互作用项为零。\n- 离域误差被量化为：\n  $$\n  \\delta = E_{\\mathrm{cDFT}} - \\min_{x \\in [0,1]} E_{\\mathrm{GGA}}(x).\n  $$\n  根据构造，$\\delta \\ge 0$，严格为正表示近似泛函对分数电荷态产生了虚假的稳定性。\n\n您的任务：\n1. 从约束优化的第一性原理出发，建立在有和没有整数电荷约束下最小化 $E_{\\mathrm{GGA}}(x)$ 的问题。对于无约束情况，如果驻点存在于内部，则确定它，否则选择边界极小值点。对于约束情况，使用拉格朗日乘子形式体系强制 $x \\in \\{0,1\\}$，并证明这等同于选择两个端点能量中较小的一个。\n2. 实现一个程序，为每个提供的参数集计算 $\\delta$（单位为电子伏特），精确到小数点后六位。\n\n输入不会提供给您的程序；相反，您必须硬编码以下测试参数集，每个参数集为一个 7 元组 $(E_A(0), E_A(1), E_B(0), E_B(1), \\kappa_A, \\kappa_B, J)$，所有单位均为电子伏特：\n- 测试 1（对称，强离域）：$(0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 0.1)$。\n- 测试 2（非对称，中等离域）：$(0.0, -3.2, 0.0, -2.7, -0.5, -0.7, 0.3)$。\n- 测试 3（对称，强库仑惩罚，无离域）：$(0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 2.0)$。\n- 测试 4（零曲率，线性基线，边界最小值）：$(0.0, -3.5, 0.0, -2.0, 0.0, 0.0, 0.2)$。\n- 测试 5（非对称，边界附近的弱离域）：$(0.0, -1.1, 0.0, -1.0, -0.15, -0.15, 0.1)$。\n- 测试 6（高度非对称，负曲率但被边界钳位）：$(0.0, -4.0, 0.0, -1.0, -0.1, -0.2, 0.1)$。\n\n角度单位不适用。所有能量必须以电子伏特 (eV) 处理和报告。\n\n您的程序应生成单行输出，包含一个逗号分隔的列表，用方括号括起来，其中每个值都是一个浮点数，格式精确到小数点后六位，顺序与测试集相同，例如：“[0.123456,0.000000,...]”。", "solution": "该问题具有科学依据，论证合理，客观且自洽，因此是有效的待解问题。任务是基于密度泛函理论 (DFT) 的原则，在一个简化的双片段系统模型中，形式化并计算离域误差 $\\delta$。\n\n复合系统的总能量作为片段 A 上分数电子电荷 $x$ 的函数，由下式给出：\n$$ E_{\\mathrm{GGA}}(x) = L_A(x) + L_B(1 - x) + \\big(\\kappa_A + \\kappa_B + J\\big)\\,x(1 - x) $$\n其中 $x \\in [0,1]$。我们首先展开并简化该表达式。\n代入线性分量 $L_A(x) = (1 - x)\\,E_A(0) + x\\,E_A(1)$ 和 $L_B(1 - x) = x\\,E_B(0) + (1 - x)\\,E_B(1)$ 的定义，我们得到：\n$$ E_{\\mathrm{GGA}}(x) = \\big((1 - x)\\,E_A(0) + x\\,E_A(1)\\big) + \\big(x\\,E_B(0) + (1 - x)\\,E_B(1)\\big) + (\\kappa_A + \\kappa_B + J)(x - x^2) $$\n我们可以按 $x$ 的幂次对各项进行分组：\n$$ E_{\\mathrm{GGA}}(x) = \\big(E_A(0) + E_B(1)\\big) + x \\big( (E_A(1) - E_A(0)) - (E_B(1) - E_B(0)) \\big) + (\\kappa_A + \\kappa_B + J)x(1-x) $$\n为清晰起见，我们定义三个常数。\n$x=0$ 时的能量是 $E_{\\mathrm{GGA}}(0) = E_A(0) + E_B(1)$。\n$x=1$ 时的能量是 $E_{\\mathrm{GGA}}(1) = E_A(1) + E_B(0)$。\n总曲率参数是 $K = \\kappa_A + \\kappa_B + J$。\n端点之间的能量差是 $\\Delta E = E_{\\mathrm{GGA}}(1) - E_{\\mathrm{GGA}}(0) = (E_A(1) - E_A(0)) - (E_B(1) - E_B(0))$。\n\n现在，能量表达式可以写成关于 $x$ 的二次函数：\n$$ E_{\\mathrm{GGA}}(x) = E_{\\mathrm{GGA}}(0) + \\Delta E \\cdot x + K \\cdot x(1-x) = -Kx^2 + (K + \\Delta E)x + E_{\\mathrm{GGA}}(0) $$\n离域误差 $\\delta$ 定义为 $\\delta = E_{\\mathrm{cDFT}} - E_{\\mathrm{min-unc}}$，其中 $E_{\\mathrm{cDFT}}$ 是整数电荷约束下的最小能量，$E_{\\mathrm{min-unc}}$ 是在 $x \\in [0,1]$ 上的无约束最小能量。\n\n**1. 约束最小化 ($E_{\\mathrm{cDFT}}$)**\n\n该约束强制每个片段上的电荷为整数，这对应于将 $x$ 的定义域限制在集合 $\\{0, 1\\}$ 内。\n问题要求使用拉格朗日乘子和约束 $x(1-x)=0$ 来形式化此过程。拉格朗日函数为 $\\mathcal{L}(x, \\lambda) = E_{\\mathrm{GGA}}(x) - \\lambda x(1-x)$。驻点条件是 $\\frac{\\partial \\mathcal{L}}{\\partial x} = 0$ 和 $\\frac{\\partial \\mathcal{L}}{\\partial \\lambda} = 0$。第二个条件给出 $x(1-x)=0$，因此 $x=0$ 或 $x=1$。这些是最小值的唯一候选点。因此，此约束下的最小能量通过简单比较这两点的能量找到：\n$$ E_{\\mathrm{cDFT}} = \\min_{x \\in \\{0,1\\}} E_{\\mathrm{GGA}}(x) = \\min\\big(E_{\\mathrm{GGA}}(0), E_{\\mathrm{GGA}}(1)\\big) $$\n\n**2. 无约束最小化 ($E_{\\mathrm{min-unc}}$)**\n\n我们必须在闭区间 $[0,1]$ 上找到二次函数 $E_{\\mathrm{GGA}}(x)$ 的全局最小值。最小值的位置取决于 $x^2$ 项系数 $-K$ 的符号。二阶导数为 $\\frac{d^2E_{\\mathrm{GGA}}}{dx^2} = -2K$。\n\n情况 I：$K \\ge 0$。\n在这种情况下，$-2K \\le 0$，所以抛物线是凹的（开口向下），或者如果 $K=0$，函数是线性的。在闭区间上的最小值必然出现在边界之一。\n$$ E_{\\mathrm{min-unc}} = \\min\\big(E_{\\mathrm{GGA}}(0), E_{\\mathrm{GGA}}(1)\\big) $$\n这与 $E_{\\mathrm{cDFT}}$ 相同。因此，对于 $K \\ge 0$，离域误差为 $\\delta = E_{\\mathrm{cDFT}} - E_{\\mathrm{min-unc}} = 0$。\n\n情况 II：$K < 0$。\n在这种情况下，$-2K > 0$，所以抛物线是凸的（开口向上）。抛物线的顶点是一个全局最小值。我们通过将一阶导数设为零来找到顶点的坐标 $x^*$：\n$$ \\frac{dE_{\\mathrm{GGA}}}{dx} = -2Kx + (K + \\Delta E) = 0 \\implies x^* = \\frac{K + \\Delta E}{2K} = \\frac{1}{2} + \\frac{\\Delta E}{2K} $$\n$E_{\\mathrm{GGA}}(x)$ 在区间 $[0,1]$ 上的最小值取决于 $x^*$ 的位置：\n- 如果 $0 < x^* < 1$，顶点位于区间内，无约束最小值在 $x^*$ 处。最小能量为 $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(x^*)$。\n- 如果 $x^* \\le 0$，函数在 $[0,1]$ 上单调递增，所以最小值在 $x=0$ 处。最小能量为 $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(0)$。\n- 如果 $x^* \\ge 1$，函数在 $[0,1]$ 上单调递减，所以最小值在 $x=1$ 处。最小能量为 $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(1)$。\n\n这个逻辑可以简化。区间上的最小值出现在 $x_{\\mathrm{opt}} = \\max(0, \\min(1, x^*))$。最小能量则为 $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(x_{\\mathrm{opt}})$。然后计算离域误差为 $\\delta = E_{\\mathrm{cDFT}} - E_{\\mathrm{GGA}}(x_{\\mathrm{opt}})$。由于 $E_{\\mathrm{GGA}}(x_{\\mathrm{opt}}) \\le E_{\\mathrm{cDFT}}$，我们保证 $\\delta \\ge 0$。\n\n以下程序实现了上述逻辑，为提供的测试用例计算 $\\delta$。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the delocalization error for a simplified two-fragment DFT model.\n\n    The function iterates through a hard-coded suite of test cases. For each case,\n    it computes the energy of the constrained integer-charge state (EcDFT) and\n    the minimum energy of the unconstrained fractional-charge state (E_min_unc)\n    over the interval x in [0, 1]. The delocalization error is the difference\n    delta = EcDFT - E_min_unc.\n    \"\"\"\n    \n    # Test cases as 7-tuples: (E_A(0), E_A(1), E_B(0), E_B(1), kappa_A, kappa_B, J)\n    test_cases = [\n        # Test 1 (symmetric, strong delocalization)\n        (0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 0.1),\n        # Test 2 (asymmetric, moderate delocalization)\n        (0.0, -3.2, 0.0, -2.7, -0.5, -0.7, 0.3),\n        # Test 3 (symmetric, strong Coulomb penalty, no delocalization)\n        (0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 2.0),\n        # Test 4 (zero curvature, linear baseline, boundary minimum)\n        (0.0, -3.5, 0.0, -2.0, 0.0, 0.0, 0.2),\n        # Test 5 (asymmetric, weak delocalization near boundary)\n        (0.0, -1.1, 0.0, -1.0, -0.15, -0.15, 0.1),\n        # Test 6 (high asymmetry, negative curvature but boundary clamp)\n        (0.0, -4.0, 0.0, -1.0, -0.1, -0.2, 0.1),\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        Ea0, Ea1, Eb0, Eb1, ka, kb, J = case\n        \n        # 1. Calculate endpoint energies and constrained minimum (EcDFT)\n        # E_GGA(0) corresponds to x=0, electron is on fragment B\n        E_gga_0 = Ea0 + Eb1\n        # E_GGA(1) corresponds to x=1, electron is on fragment A\n        E_gga_1 = Ea1 + Eb0\n        \n        E_cdft = min(E_gga_0, E_gga_1)\n        \n        # 2. Define constants for the quadratic energy function E_GGA(x)\n        # E_GGA(x) = -Kx^2 + (K + DeltaE)x + E_gga_0\n        K = ka + kb + J\n        DeltaE = E_gga_1 - E_gga_0\n        \n        # 3. Find the unconstrained minimum (E_min_unc) on x in [0, 1]\n        E_min_unc = 0.0\n        \n        if K >= 0:\n            # Parabola is concave or linear. Minimum is at a boundary.\n            E_min_unc = E_cdft\n        else: # K < 0\n            # Parabola is convex. Minimum is at the vertex, if in [0,1].\n            x_star = (K + DeltaE) / (2 * K)\n            \n            # Clamp x_star to the interval [0, 1] to find the minimum location\n            x_opt = max(0.0, min(1.0, x_star))\n            \n            # Calculate energy at the optimal x\n            # E_GGA(x) = L_A(x) + L_B(1-x) + K*x*(1-x)\n            # L_A(x) = (1-x)Ea0 + x*Ea1\n            # L_B(1-x) = x*Eb0 + (1-x)*Eb1\n            La_opt = (1 - x_opt) * Ea0 + x_opt * Ea1\n            Lb_opt = x_opt * Eb0 + (1 - x_opt) * Eb1\n            E_min_unc = La_opt + Lb_opt + K * x_opt * (1 - x_opt)\n            \n        # 4. Calculate delocalization error\n        delta = E_cdft - E_min_unc\n        \n        results.append(f\"{delta:.6f}\")\n        \n    # Final print statement in the exact required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2804379"}]}