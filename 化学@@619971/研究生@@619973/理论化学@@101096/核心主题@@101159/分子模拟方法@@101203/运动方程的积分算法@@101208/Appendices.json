{"hands_on_practices": [{"introduction": "在分子动力学模拟中，选择一个合适的积分步长 $h$ 是确保模拟稳定性和准确性的首要步骤。Verlet 积分等算法的数值稳定性有一个临界上限，它直接取决于系统中存在的最快运动频率。这个练习 ([@problem_id:2780537]) 将引导你通过对一个简谐振子进行线性稳定性分析，从第一性原理出发，计算出一个安全的积分步长，从而将抽象的理论概念与具体的模拟参数设定联系起来。", "problem": "双原子分子中的单个键合对在平衡点附近可以建模为一维谐振子，其势能为 $V(x)=\\frac{1}{2}k x^{2}$，其中 $k$ 是势的曲率，$x$ 是键位移。运动方程为 $m\\,\\ddot{x}=-\\frac{\\partial V}{\\partial x}$，其中 $m$ 是约化质量。光谱测量报告了一个高频伸缩模式，其波数为 $\\tilde{\\nu}=3000\\ \\mathrm{cm}^{-1}$。您计划使用位置-Verlet算法来积分运动方程。仅使用基本定义和对所产生的离散谐振子动力学进行线性稳定性分析，确定一个数值安全的步长 $h_{\\text{safe}}$，其定义为保持离散解有界（无指数增长）的最大步长 $h_{\\max}$ 的十分之一。使用光速 $c=2.99792458\\times 10^{10}\\ \\mathrm{cm\\,s^{-1}}$ 将波数转换为角频率。\n\n将您的最终答案表示为以飞秒为单位的 $h_{\\text{safe}}$，并将您的答案四舍五入到四位有效数字。仅报告 $h_{\\text{safe}}$ 的值。", "solution": "该问题陈述经确认为具有科学依据、提法恰当且客观。它基于经典力学（谐振子）、光谱学和数值分析（积分算法的稳定性）的基本原理。所有必要信息均已提供，可得到唯一解。我将开始推导。\n\n该系统是一个一维谐振子，其势能由 $V(x) = \\frac{1}{2}kx^2$ 给出。运动方程是牛顿第二定律：\n$$m\\ddot{x} = -\\frac{\\partial V}{\\partial x} = -kx$$\n这可以重写为简谐振子的标准形式：\n$$\\ddot{x} + \\omega^2 x = 0$$\n其中 $\\omega = \\sqrt{k/m}$ 是振子的固有角频率。\n\n问题给出了伸缩模式的波数，$\\tilde{\\nu} = 3000\\ \\mathrm{cm}^{-1}$。角频率 $\\omega$ 通过以下基本关系与波数 $\\tilde{\\nu}$ 和光速 $c$ 相关联。频率 $\\nu$ 由 $\\nu = c\\tilde{\\nu}$ 给出，角频率为 $\\omega = 2\\pi\\nu$。因此：\n$$\\omega = 2\\pi c \\tilde{\\nu}$$\n这使得在没有约化质量 $m$ 或力常数 $k$ 的明确知识的情况下，也能确定 $\\omega$。\n\n位置-Verlet算法是Verlet积分方案的一种具体实现。为了进行线性稳定性分析，分析基本的Verlet递推关系就足够了，它在此上下文中是数学上等价的。对于时间步长为 $h$、在时间 $t_n = n h$ 时的位置 $x_n = x(nh)$，其离散形式为：\n$$x_{n+1} = 2x_n - x_{n-1} + h^2 a_n$$\n其中 $a_n = \\ddot{x}(t_n)$ 是在时间 $t_n$ 的加速度。对于谐振子，加速度为 $a_n = -\\omega^2 x_n$。将此代入递推关系中得到：\n$$x_{n+1} = 2x_n - x_{n-1} - h^2 \\omega^2 x_n$$\n这是一个常系数线性齐次递推关系，可以重新整理为：\n$$x_{n+1} - (2 - (\\omega h)^2)x_n + x_{n-1} = 0$$\n为了分析此关系的稳定性，我们寻求 $x_n = \\lambda^n$ 形式的解。代入此拟设得到特征方程：\n$$\\lambda^2 - (2 - (\\omega h)^2)\\lambda + 1 = 0$$\n为了使解保持有界，这个二次方程的根 $\\lambda$ 的模长不得大于1。由于根的乘积为 $\\lambda_1 \\lambda_2 = 1$（根据多项式的常数项），此条件意味着根必须是位于复平面单位圆上的共轭复数，即 $|\\lambda| = 1$。这种情况发生当且仅当特征方程的判别式为负：\n$$\\Delta = (2 - (\\omega h)^2)^2 - 4 < 0$$\n对 $(\\omega h)^2$ 项解此不等式：\n$$(2 - (\\omega h)^2)^2 < 4$$\n$$|2 - (\\omega h)^2| < 2$$\n这导出了一个双侧不等式：\n$$-2 < 2 - (\\omega h)^2 < 2$$\n不等式的右侧 $2 - (\\omega h)^2 < 2$ 意味着 $-(\\omega h)^2 < 0$，这对任何非零的 $h$ 和 $\\omega$ 都成立。不等式的左侧 $-2 < 2 - (\\omega h)^2$ 意味着 $(\\omega h)^2 < 4$。\n因此，数值稳定性的条件是：\n$$|\\omega h| < 2$$\n保持离散解有界的最大可能时间步长 $h_{\\max}$ 在此稳定区域的边界处找到：\n$$\\omega h_{\\max} = 2 \\implies h_{\\max} = \\frac{2}{\\omega}$$\n问题将数值安全的步长 $h_{\\text{safe}}$ 定义为此最大值的十分之一：\n$$h_{\\text{safe}} = \\frac{1}{10} h_{\\max} = \\frac{1}{10} \\left(\\frac{2}{\\omega}\\right) = \\frac{1}{5\\omega}$$\n代入 $\\omega = 2\\pi c \\tilde{\\nu}$ 的表达式：\n$$h_{\\text{safe}} = \\frac{1}{5(2\\pi c \\tilde{\\nu})} = \\frac{1}{10\\pi c \\tilde{\\nu}}$$\n现在，我们代入所给的数值：$\\tilde{\\nu} = 3000\\ \\mathrm{cm}^{-1}$和 $c = 2.99792458 \\times 10^{10}\\ \\mathrm{cm\\,s^{-1}}$。\n$$h_{\\text{safe}} = \\frac{1}{10\\pi (2.99792458 \\times 10^{10}\\ \\mathrm{cm\\,s^{-1}})(3000\\ \\mathrm{cm}^{-1})}$$\n$$h_{\\text{safe}} = \\frac{1}{30000\\pi \\times 2.99792458 \\times 10^{10}}\\ \\mathrm{s}$$\n$$h_{\\text{safe}} \\approx 3.5392318 \\times 10^{-16}\\ \\mathrm{s}$$\n问题要求答案以飞秒为单位，其中 $1\\ \\mathrm{fs} = 10^{-15}\\ \\mathrm{s}$。\n$$h_{\\text{safe}} \\approx 3.5392318 \\times 10^{-16} \\ \\mathrm{s} \\times \\left(\\frac{1\\ \\mathrm{fs}}{10^{-15}\\ \\mathrm{s}}\\right) = 0.35392318\\ \\mathrm{fs}$$\n将结果四舍五入到四位有效数字得到：\n$$h_{\\text{safe}} = 0.3539\\ \\mathrm{fs}$$", "answer": "$$\\boxed{0.3539}$$", "id": "2780537"}, {"introduction": "掌握了如何选择步长后，下一步便是亲手实现积分算法。速度 Verlet 算法是分子模拟领域最常用和最强大的工具之一，因为它具有辛性和时间可逆性，能保证能量在长时间内有界的浮动。这个动手实践 ([@problem_id:2780514]) 要求你为一个在一维 Morse 势中运动的粒子编写速度 Verlet 积分器，并通过计算能量漂移来评估其数值精度，这是检验任何动力学模拟代码正确性的基本功。", "problem": "考虑一个具有约化质量 $m$ 的单自由度坐标 $q$ 在莫尔斯势 $V(q)=D_e\\left(1-\\exp\\left(-a\\,(q-q_e)\\right)\\right)^2$ 中的一维运动方程。动力学由牛顿第二定律 $m\\,\\mathrm{d}^2 q / \\mathrm{d} t^2 = - \\mathrm{d} V / \\mathrm{d} q$ 决定，动能为 $K = \\tfrac{1}{2}\\,m\\,v^2$，其中 $v=\\mathrm{d} q / \\mathrm{d} t$。总能量为 $E=K+V$，对于精确解而言，这是一个运动常量。\n\n您的任务是编写一个完整的程序，使其能够：\n- 实现速度 Verlet 时间积分算法，在力 $F(q)=-\\mathrm{d}V/\\mathrm{d}q$ 的作用下，从初始条件 $q(0)=q_0$ 和 $v(0)=v_0$ 开始，以大小为 $h$ 的步长将轨迹推进 $N$ 步。\n- 计算能量漂移 $\\Delta E = E_N - E_0$，其中 $E_0$ 是初始总能量，$E_N$ 是 $N$ 步后的总能量。\n- 全程使用原子单位：能量单位为哈特里（Hartree），长度单位为玻尔（bohr），质量单位为电子质量单位，时间单位为原子时间单位。您必须以哈特里（Hartree）为单位表示最终的数值答案（针对能量漂移），并四舍五入到小数点后 $10$ 位。\n\n您的实现应仅基于：\n- 牛顿第二定律 $m\\,\\mathrm{d}^2 q / \\mathrm{d} t^2 = F(q)$，其中 $F(q)=-\\mathrm{d}V/\\mathrm{d}q$。\n- 动能 $K=\\tfrac{1}{2}\\,m\\,v^2$ 和总能量 $E=K+V$ 的定义。\n- 与这些定律一致的标准速度 Verlet 方案。\n\n直接从给定的势 $V(q)$ 中推导出任何所需的表达式（例如力）。\n\n测试套件：\n使用以下五个参数集评估程序。每个案例按给定顺序指定 $(D_e,a,q_e,m,q_0,v_0,h,N)$，所有量均采用上文指定的原子单位。\n- 案例 1：$(D_e,a,q_e,m,q_0,v_0,h,N)=(\\,0.176,\\,1.02,\\,0.0,\\,1836.0,\\,0.2,\\,0.0,\\,0.2,\\,1000\\,)$。\n- 案例 2：$(D_e,a,q_e,m,q_0,v_0,h,N)=(\\,0.176,\\,1.02,\\,0.0,\\,1836.0,\\,0.2,\\,0.0,\\,0.02,\\,10000\\,)$。\n- 案例 3：$(D_e,a,q_e,m,q_0,v_0,h,N)=(\\,0.176,\\,1.02,\\,0.0,\\,1836.0,\\,0.0,\\,0.0,\\,0.5,\\,100\\,)$。\n- 案例 4：$(D_e,a,q_e,m,q_0,v_0,h,N)=(\\,0.176,\\,1.02,\\,0.0,\\,1836.0,\\,1.0,\\,-0.05,\\,0.4,\\,800\\,)$。\n- 案例 5：$(D_e,a,q_e,m,q_0,v_0,h,N)=(\\,0.176,\\,1.02,\\,0.0,\\,1836.0,\\,0.3,\\,0.1,\\,0.1,\\,0\\,)$。\n\n要求的最终输出格式：\n您的程序应生成单行输出，其中包含按上述案例顺序排列的五个能量漂移结果，形式为方括号括起来的逗号分隔列表。每个漂移值必须是浮点数，并四舍五入到小数点后 $10$ 位，例如 $[0.0000000000,0.1234567890,-0.0000000001,0.0000000000,0.0000000000]$。", "solution": "该问题要求实现速度 Verlet 算法，以模拟粒子在一维莫尔斯势中的动力学，并计算数值能量漂移。在尝试求解之前，需对问题陈述进行验证。\n\n**问题验证**\n\n1.  **提取的已知条件：**\n    *   势能: $V(q)=D_e\\left(1-\\exp\\left(-a\\,(q-q_e)\\right)\\right)^2$。\n    *   运动方程: $m\\,\\mathrm{d}^2 q / \\mathrm{d} t^2 = - \\mathrm{d} V / \\mathrm{d} q$。\n    *   能量: $E = \\tfrac{1}{2}\\,m\\,v^2 + V(q)$。\n    *   算法: 速度 Verlet 积分。\n    *   任务: 计算在大小为 $h$ 的 $N$ 个步长内的能量漂移 $\\Delta E = E_N - E_0$。\n    *   单位: 所有量均指定为原子单位。\n    *   参数: 提供了五个测试案例，其中包含 $(D_e,a,q_e,m,q_0,v_0,h,N)$ 的指定值。\n\n2.  **验证结论：**\n    该问题是**有效的**。它在经典力学方面有科学依据，在数学上是适定的，并且为获得唯一的数值解提供了所有必要信息。莫尔斯势和速度 Verlet 算法的使用是理论化学中的标准实践。该问题是既定原则的直接应用，不包含任何歧义、矛盾或事实错误。所提供的两个测试案例（案例 3 和案例 5）代表了平凡动力学，可作为对任何正确实现的逻辑检验。\n\n**求解推导**\n\n求解过程分三步：力的推导、积分算法的构建以及能量计算的说明。\n\n**1. 力的推导**\n力 $F(q)$ 是势能 $V(q)$ 的负梯度。势能由下式给出：\n$$V(q) = D_e\\left(1 - \\exp\\left(-a(q - q_e)\\right)\\right)^2$$\n为了求出力，我们必须计算导数 $\\mathrm{d}V/\\mathrm{d}q$。使用链式法则，令 $u(q) = -a(q - q_e)$。则 $V(q) = D_e(1 - e^u)^2$。\n$$\\frac{\\mathrm{d}V}{\\mathrm{d}q} = \\frac{\\mathrm{d}V}{\\mathrm{d}u} \\frac{\\mathrm{d}u}{\\mathrm{d}q}$$\n各自的导数是：\n$$\\frac{\\mathrm{d}V}{\\mathrm{d}u} = D_e \\cdot 2(1 - e^u) \\cdot \\frac{d}{du}(1-e^u) = D_e \\cdot 2(1 - e^u) \\cdot (-e^u) = -2D_e(e^u - e^{2u})$$\n$$\\frac{\\mathrm{d}u}{\\mathrm{d}q} = -a$$\n将这些结果合并得到：\n$$\\frac{\\mathrm{d}V}{\\mathrm{d}q} = \\left(-2D_e(e^u - e^{2u})\\right) \\cdot (-a) = 2aD_e(e^u - e^{2u})$$\n将 $u = -a(q-q_e)$ 代回该表达式，得到：\n$$\\frac{\\mathrm{d}V}{\\mathrm{d}q} = 2aD_e \\left(\\exp\\left(-a(q-q_e)\\right) - \\exp\\left(-2a(q-q_e)\\right)\\right)$$\n因此，力 $F(q) = -\\mathrm{d}V/\\mathrm{d}q$ 为：\n$$F(q) = -2aD_e \\left(\\exp\\left(-a(q-q_e)\\right) - \\exp\\left(-2a(q-q_e)\\right)\\right)$$\n此表达式将用于计算每个时间步的力。\n\n**2. 速度 Verlet 算法**\n速度 Verlet 算法是一种用于求解牛顿运动方程的二阶辛积分器。给定在时间 $t_n = n h$ 的位置 $q_n$、速度 $v_n$ 和力 $F_n = F(q_n)$，下一个时间步 $t_{n+1} = (n+1)h$ 的状态按如下方式计算。\n\n首先，将位置推进一个完整的时间步 $h$：\n$$q_{n+1} = q_n + v_n h + \\frac{1}{2} \\frac{F_n}{m} h^2$$\n接下来，计算新位置 $q_{n+1}$ 处的力 $F_{n+1}$：\n$$F_{n+1} = F(q_{n+1})$$\n最后，使用新旧力的平均值更新速度：\n$$v_{n+1} = v_n + \\frac{h}{2m} (F_n + F_{n+1})$$\n从初始条件 $(q_0, v_0)$ 开始，将此操作序列重复 $N$ 步。\n\n**3. 能量计算与漂移**\n在任意时间点，状态 $(q,v)$ 的总能量 $E$ 是动能 $K$ 和势能 $V$ 的和：\n$$E(q,v) = K(v) + V(q) = \\frac{1}{2}mv^2 + D_e\\left(1 - \\exp\\left(-a(q-q_e)\\right)\\right)^2$$\n初始能量在 $t=0$ 时计算：\n$$E_0 = E(q_0, v_0)$$\n经过 $N$ 步积分后，系统处于最终状态 $(q_N, v_N)$。最终能量为：\n$$E_N = E(q_N, v_N)$$\n能量漂移 $\\Delta E$ 是最终能量与初始能量之差：\n$$\\Delta E = E_N - E_0$$\n对于一个守恒系统的完美积分，$\\Delta E$ 应为零。对于数值速度 Verlet 方案，能量并非精确守恒，但它会围绕真实值表现出有界涨落，且没有长期的系统性漂移。这些涨落的幅度取决于时间步长 $h$。\n\n在案例 3 中，$q_0 = q_e$ 且 $v_0 = 0$，初始力为 $F(q_e) = 0$。粒子在势阱的最小值处静止。该算法将正确地保持粒子静止，因此对所有 $n$ 都有 $q_n = q_e$ 和 $v_n = 0$。因此，$E_N = E_0$，能量漂移 $\\Delta E$ 必须恰好为 $0.0$。\n\n在案例 5 中，步数 $N=0$，不执行任何积分。最终状态与初始状态相同，因此 $q_N = q_0$ 且 $v_N = v_0$。能量漂移 $\\Delta E = E_0 - E_0$ 显然为 $0.0$。这些案例可作为对实现的验证。程序将遵循这些推导出的公式来计算每个测试案例的能量漂移，最终结果按要求四舍五入到小数点后 $10$ 位。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run simulations for all test cases and print results.\n    \"\"\"\n\n    # Helper functions for physical quantities, defined within the scope of solve()\n    # to keep the solution self-contained.\n\n    def get_potential(q, De, a, qe):\n        \"\"\"Calculates the Morse potential energy.\"\"\"\n        return De * (1.0 - np.exp(-a * (q - qe)))**2\n\n    def get_force(q, De, a, qe):\n        \"\"\"Calculates the force derived from the Morse potential.\"\"\"\n        exp_term = np.exp(-a * (q - qe))\n        return -2.0 * a * De * (exp_term - exp_term**2)\n\n    def get_total_energy(q, v, De, a, qe, m):\n        \"\"\"Calculates the total energy (kinetic + potential).\"\"\"\n        kinetic_energy = 0.5 * m * v**2\n        potential_energy = get_potential(q, De, a, qe)\n        return kinetic_energy + potential_energy\n\n    def run_simulation(De, a, qe, m, q0, v0, h, N):\n        \"\"\"\n        Runs a velocity Verlet simulation for a single parameter set.\n\n        Args:\n            De, a, qe: Morse potential parameters.\n            m: Mass of the particle.\n            q0, v0: Initial position and velocity.\n            h: Time step size.\n            N: Number of integration steps.\n\n        Returns:\n            The energy drift (E_final - E_initial).\n        \"\"\"\n        # Handle the trivial case of zero steps.\n        if N == 0:\n            return 0.0\n\n        # Handle the trivial stationary case where the particle starts at rest at the potential minimum.\n        if q0 == qe and v0 == 0.0:\n            return 0.0\n\n        # Initial state\n        q = float(q0)\n        v = float(v0)\n\n        # Calculate initial energy\n        E0 = get_total_energy(q, v, De, a, qe, m)\n\n        # Calculate initial force needed for the first step\n        force = get_force(q, De, a, qe)\n\n        # Velocity Verlet integration loop\n        for _ in range(int(N)):\n            # Update position to a full step\n            q_new = q + v * h + 0.5 * (force / m) * h**2\n\n            # Calculate force at the new position\n            force_new = get_force(q_new, De, a, qe)\n\n            # Update velocity with the average of old and new forces\n            v_new = v + 0.5 * ((force + force_new) / m) * h\n\n            # Update state for the next iteration\n            q, v, force = q_new, v_new, force_new\n\n        # Calculate final energy\n        E_final = get_total_energy(q, v, De, a, qe, m)\n        \n        energy_drift = E_final - E0\n        return energy_drift\n\n    # Test suite from the problem statement.\n    # Each tuple contains: (De, a, qe, m, q0, v0, h, N)\n    test_cases = [\n        (0.176, 1.02, 0.0, 1836.0, 0.2, 0.0, 0.2, 1000),\n        (0.176, 1.02, 0.0, 1836.0, 0.2, 0.0, 0.02, 10000),\n        (0.176, 1.02, 0.0, 1836.0, 0.0, 0.0, 0.5, 100),\n        (0.176, 1.02, 0.0, 1836.0, 1.0, -0.05, 0.4, 800),\n        (0.176, 1.02, 0.0, 1836.0, 0.3, 0.1, 0.1, 0),\n    ]\n\n    results = []\n    for case in test_cases:\n        drift = run_simulation(*case)\n        # Round the result to 10 decimal places as required.\n        results.append(round(drift, 10))\n\n    # Format the results into the specified string format.\n    # Using f-string with .10f ensures fixed-point notation and avoids scientific notation.\n    formatted_results = [f\"{r:.10f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\n# Execute the main function.\nsolve()\n```", "id": "2780514"}, {"introduction": "我们已经看到，系统中的高频振动（如化学键的伸缩）是限制积分步长 $\\Delta t$ 的主要瓶颈。在实际模拟中，为提高计算效率，一种常见的策略是使用约束算法（如 SHAKE 或 RATTLE）将这些高频自由度“冻结”。这个练习 ([@problem_id:2780480]) 将让你从理论上量化这种策略带来的优势，通过分析一个水分子模型，计算出在固定 O-H 键长后，最大稳定时间步长可以获得的具体增益。", "problem": "考虑一个分子系统的单个解耦简正模，该模式由Newton第二定律支配，在谐振近似下满足 $m \\, \\ddot{x}(t) = - k \\, x(t)$，等价于 $\\ddot{x}(t) + \\omega^{2} x(t) = 0$，其中 $\\omega = \\sqrt{k/m}$。该模式在分子动力学（MD）中使用速度Verlet算法进行积分，该算法由以下离散更新定义\n$v_{n+\\frac{1}{2}} = v_{n} + \\frac{\\Delta t}{2} a(x_{n})$，\n$x_{n+1} = x_{n} + \\Delta t \\, v_{n+\\frac{1}{2}}$，\n$v_{n+1} = v_{n+\\frac{1}{2}} + \\frac{\\Delta t}{2} a(x_{n+1})$，\n其中 $a(x) = -\\omega^{2} x$ 且 $\\Delta t$ 是时间步长。从这些定义和谐振运动方程出发，推导确保离散轨迹 $\\{x_{n}\\}$ 在 $n \\to \\infty$ 时为有界解的线性稳定性条件，并得出最大稳定时间步长作为模式角频率 $\\omega$ 的函数的表达式。\n\n然后应用您的结果来评估完整约束在水模型中刚化高频 O–H 伸缩振动的影响。使用以下气相水的波数（单位为 $\\mathrm{cm}^{-1}$）作为最快内运动的特征值：不对称伸缩振动 $\\tilde{\\nu}_{\\mathrm{as}} = 3756 \\ \\mathrm{cm}^{-1}$，对称伸缩振动 $\\tilde{\\nu}_{\\mathrm{s}} = 3657 \\ \\mathrm{cm}^{-1}$，以及弯曲振动 $\\tilde{\\nu}_{\\mathrm{b}} = 1595 \\ \\mathrm{cm}^{-1}$。假设在无约束（完全柔性）的情况下，最大角频率由不对称伸缩振动决定，并且在将 O-H 键约束为刚性后，两种伸缩模式都被移除，因此弯曲振动决定了最大角频率。将每个简正模建模为独立的，并估算从无约束水模型变为 O-H 约束水模型时，最大稳定时间步长 $\\Delta t_{\\max}$ 的乘法增益。将您的最终答案表示为等于比率 $\\Delta t_{\\max}^{(\\mathrm{rigid\\ O\\!-\\!H})} / \\Delta t_{\\max}^{(\\mathrm{flexible})}$ 的单个无量纲数，并将您的答案四舍五入到 $4$ 位有效数字。", "solution": "所提出的问题具有科学依据，提法恰当，并包含了解决该问题所需的所有信息。它代表了计算理论化学中的一个标准分析。我们将着手进行解答。\n\n该问题需要进行两部分分析。首先，我们必须推导应用于简谐振子的速度Verlet算法的稳定性条件。其次，我们必须将此条件应用于涉及水分子的分子动力学实际情景中。\n\n让我们从推导开始。该系统由运动方程 $\\ddot{x}(t) + \\omega^{2} x(t) = 0$ 描述，其中加速度为 $a(x) = -\\omega^{2} x$。速度Verlet积分器由以下更新步骤给出：\n$$v_{n+\\frac{1}{2}} = v_{n} + \\frac{\\Delta t}{2} a(x_{n})$$\n$$x_{n+1} = x_{n} + \\Delta t \\, v_{n+\\frac{1}{2}}$$\n$$v_{n+1} = v_{n+\\frac{1}{2}} + \\frac{\\Delta t}{2} a(x_{n+1})$$\n\n我们的目标是找到从时间步 $n$ 的状态向量 $\\mathbf{z}_{n} = \\begin{pmatrix} x_{n} \\\\ v_{n} \\end{pmatrix}$ 到时间步 $n+1$ 的状态向量 $\\mathbf{z}_{n+1} = \\begin{pmatrix} x_{n+1} \\\\ v_{n+1} \\end{pmatrix}$ 的映射。该映射通过一个转移矩阵 $\\mathbf{T}$ 表示，使得 $\\mathbf{z}_{n+1} = \\mathbf{T} \\mathbf{z}_{n}$。算法的稳定性取决于 $\\mathbf{T}$ 的特征值。\n\n我们将加速度 $a(x_{n}) = -\\omega^{2} x_{n}$ 代入第一个更新方程：\n$$v_{n+\\frac{1}{2}} = v_{n} - \\frac{\\omega^{2} \\Delta t}{2} x_{n}$$\n接下来，我们将其代入位置更新方程：\n$$x_{n+1} = x_{n} + \\Delta t \\left( v_{n} - \\frac{\\omega^{2} \\Delta t}{2} x_{n} \\right) = \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) x_{n} + (\\Delta t) v_{n}$$\n此方程给出了转移矩阵 $\\mathbf{T}$ 的第一行。\n\n为了求第二行，我们必须用 $x_{n}$ 和 $v_{n}$ 来表示 $v_{n+1}$。我们使用第三个更新规则，其中 $a(x_{n+1}) = -\\omega^{2} x_{n+1}$：\n$$v_{n+1} = v_{n+\\frac{1}{2}} - \\frac{\\omega^{2} \\Delta t}{2} x_{n+1}$$\n代入 $v_{n+\\frac{1}{2}}$ 和 $x_{n+1}$ 的表达式：\n$$v_{n+1} = \\left(v_{n} - \\frac{\\omega^{2} \\Delta t}{2} x_{n}\\right) - \\frac{\\omega^{2} \\Delta t}{2} \\left( \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) x_{n} + (\\Delta t) v_{n} \\right)$$\n按 $x_{n}$ 和 $v_{n}$ 对各项进行分组：\n$$v_{n+1} = \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) v_{n} - \\left( \\frac{\\omega^{2} \\Delta t}{2} + \\frac{\\omega^{2} \\Delta t}{2} \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) \\right) x_{n}$$\n$$v_{n+1} = \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) v_{n} - \\frac{\\omega^{2} \\Delta t}{2} \\left( 2 - \\frac{(\\omega \\Delta t)^{2}}{2} \\right) x_{n}$$\n$$v_{n+1} = -\\omega^{2} \\Delta t \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{4}\\right) x_{n} + \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) v_{n}$$\n这就得到了转移矩阵的第二行。\n\n综合这些结果，转移矩阵 $\\mathbf{T}$ 为：\n$$\\mathbf{T} = \\begin{pmatrix} 1 - \\frac{(\\omega \\Delta t)^{2}}{2} & \\Delta t \\\\ -\\omega^{2} \\Delta t \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{4}\\right) & 1 - \\frac{(\\omega \\Delta t)^{2}}{2} \\end{pmatrix}$$\n为使离散轨迹在 $n \\to \\infty$ 时保持有界，$\\mathbf{T}$ 的特征值 $\\lambda$ 的模不得超过 $1$。特征值是特征方程 $\\det(\\mathbf{T} - \\lambda \\mathbf{I}) = 0$ 的解。该方程为 $\\lambda^{2} - \\mathrm{Tr}(\\mathbf{T})\\lambda + \\det(\\mathbf{T}) = 0$。\n\n矩阵的行列式为：\n$$\\det(\\mathbf{T}) = \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right)^{2} + \\omega^{2} \\Delta t^{2} \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{4}\\right) = 1 - (\\omega \\Delta t)^{2} + \\frac{(\\omega \\Delta t)^{4}}{4} + (\\omega \\Delta t)^{2} - \\frac{(\\omega \\Delta t)^{4}}{4} = 1$$\n这个结果 $\\det(\\mathbf{T}) = 1$ 证实了速度Verlet算法的辛性质。\n\n矩阵的迹为：\n$$\\mathrm{Tr}(\\mathbf{T}) = \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) + \\left(1 - \\frac{(\\omega \\Delta t)^{2}}{2}\\right) = 2 - (\\omega \\Delta t)^{2}$$\n特征方程为 $\\lambda^{2} - (2 - (\\omega \\Delta t)^{2})\\lambda + 1 = 0$。\n如果这个二次方程的判别式为负，则 $\\lambda$ 的解为复数，否则为实数。稳定性边界是特征值从模为 $1$ 的复数过渡到其中一个模大于 $1$ 的实数的地方。这发生在判别式为零时。对于一个 $2 \\times 2$ 的辛矩阵，普遍的稳定性条件是 $|\\mathrm{Tr}(\\mathbf{T})| \\le 2$。\n\n应用此条件：\n$$|2 - (\\omega \\Delta t)^{2}| \\le 2$$\n该不等式等价于 $-2 \\le 2 - (\\omega \\Delta t)^{2} \\le 2$。\n右边的不等式 $2 - (\\omega \\Delta t)^{2} \\le 2$ 意味着 $-(\\omega \\Delta t)^{2} \\le 0$，这总是成立的。\n左边的不等式 $-2 \\le 2 - (\\omega \\Delta t)^{2}$ 意味着 $(\\omega \\Delta t)^{2} \\le 4$。\n由于 $\\omega$ 和 $\\Delta t$ 是正的物理量，稳定性条件是：\n$$\\omega \\Delta t \\le 2$$\n由此，对于角频率为 $\\omega$ 的模式，最大稳定时间步长 $\\Delta t_{\\max}$ 为：\n$$\\Delta t_{\\max} = \\frac{2}{\\omega}$$\n\n现在，我们将此结果应用于水分子。在一个分子系统中，总体的最大稳定时间步长由最快的振动模式决定，该模式具有最高的角频率 $\\omega_{\\max}$。\n$$\\Delta t_{\\max} = \\frac{2}{\\omega_{\\max}}$$\n角频率 $\\omega$ 通过 $\\omega = 2 \\pi c \\tilde{\\nu}$ 与波数 $\\tilde{\\nu}$（单位为 $\\mathrm{cm}^{-1}$）相关，其中 $c$ 是光速。\n因此，$\\Delta t_{\\max} = \\frac{2}{2 \\pi c \\tilde{\\nu}_{\\max}} = \\frac{1}{\\pi c \\tilde{\\nu}_{\\max}}$。这表明 $\\Delta t_{\\max}$ 与最大波数 $\\tilde{\\nu}_{\\max}$ 成反比。\n\n对于无约束（完全柔性）的情况，最高频率模式是不对称伸缩振动：\n$$\\tilde{\\nu}_{\\max}^{(\\mathrm{flexible})} = \\tilde{\\nu}_{\\mathrm{as}} = 3756 \\ \\mathrm{cm}^{-1}$$\n对于 O–H 约束的情况，伸缩模式被移除。剩余的最快模式是弯曲振动：\n$$\\tilde{\\nu}_{\\max}^{(\\mathrm{rigid\\ O\\!-\\!H})} = \\tilde{\\nu}_{\\mathrm{b}} = 1595 \\ \\mathrm{cm}^{-1}$$\n问题要求计算最大稳定时间步长的乘法增益，即以下比率：\n$$\\frac{\\Delta t_{\\max}^{(\\mathrm{rigid\\ O\\!-\\!H})}}{\\Delta t_{\\max}^{(\\mathrm{flexible})}} = \\frac{1 / (\\pi c \\tilde{\\nu}_{\\max}^{(\\mathrm{rigid\\ O\\!-\\!H})})}{1 / (\\pi c \\tilde{\\nu}_{\\max}^{(\\mathrm{flexible})})} = \\frac{\\tilde{\\nu}_{\\max}^{(\\mathrm{flexible})}}{\\tilde{\\nu}_{\\max}^{(\\mathrm{rigid\\ O\\!-\\!H})}}$$\n代入给定的数值：\n$$\\frac{\\Delta t_{\\max}^{(\\mathrm{rigid\\ O\\!-\\!H})}}{\\Delta t_{\\max}^{(\\mathrm{flexible})}} = \\frac{3756}{1595} \\approx 2.3548589...$$\n按要求四舍五入到 $4$ 位有效数字，我们得到最终答案。", "answer": "$$\\boxed{2.355}$$", "id": "2780480"}]}