{"hands_on_practices": [{"introduction": "我们将从一个最基本但极具启发性的例子开始：两个相近的数相减。这个练习将向您展示，即使一个计算结果在“后向误差”的意义上是完全可以接受的，它也可能与真实答案相去甚远（即“前向误差”巨大）。通过这个练习[@problem_id:3231943]，您将亲身体会到病态问题的核心特征，并理解为何后向稳定性并不总能保证答案的准确性。", "problem": "设 $x$ 和 $y$ 是实数，在一个十进制浮点系统中存储和相减，该系统以 $p=7$ 位有效数字的精度进行四舍五入到最近值。设真实输入为 $x=1.0000004$ 和 $y=1.0000001$。存储值为 $\\mathrm{fl}(x)$ 和 $\\mathrm{fl}(y)$，每个值都是通过将真实值四舍五入到 $7$ 位有效数字得到的，计算出的减法结果为 $z_{\\mathrm{comp}}=\\mathrm{fl}(\\mathrm{fl}(x)-\\mathrm{fl}(y))$。使用前向误差和后向误差的核心定义，并结合“四舍五入到 $p$ 位有效数字是浮点存储的一个经过充分检验的模型”这一事实，来分析两个几乎相等的数的减法。具体来说，确定 $x$ 的相对后向误差，定义为 $\\frac{|\\Delta x|}{|x|}$，其中 $\\Delta x$ 是使得精确减法 $(x+\\Delta x)-y$ 等于 $0$ 的 $x$ 的最小扰动。将你的最终数值答案四舍五入到 $4$ 位有效数字。", "solution": "该问题已经过验证，被认为是数值分析领域中一个适定且科学合理的问题。它要求在特定定义下计算减法运算的相对后向误差。\n\n目标是确定运算 $x-y$ 的输入 $x$ 的相对后向误差，其中后向误差是相对于目标结果 $0$ 来定义的。给定的真实输入是 $x=1.0000004$ 和 $y=1.0000001$。$x$ 的相对后向误差由公式 $\\frac{|\\Delta x|}{|x|}$ 给出，其中 $\\Delta x$ 是导致精确减法结果为 $0$ 的 $x$ 的最小扰动。\n\n首先，我们分析浮点系统提供的上下文。该系统是一个十进制浮点系统，精度 $p=7$，并四舍五入到最近的可表示数。\n$x$ 的真实值是 $1.0000004$。要用 $7$ 位有效数字存储这个值，我们必须对其进行四舍五入。该数可以写成 $1.0000004 \\times 10^0$。第 $8$ 位有效数字是 $4$。由于 $4  5$，我们向下舍入。\n因此，$x$ 的存储值为 $\\mathrm{fl}(x) = 1.000000$。\n$y$ 的真实值是 $1.0000001$。类似地，这是 $1.0000001 \\times 10^0$。第 $8$ 位有效数字是 $1$。由于 $1  5$，我们向下舍入。\n因此，$y$ 的存储值为 $\\mathrm{fl}(y) = 1.000000$。\n\n计算出的减法由 $z_{\\mathrm{comp}}=\\mathrm{fl}(\\mathrm{fl}(x)-\\mathrm{fl}(y))$ 给出。\n代入存储值：\n$z_{\\mathrm{comp}} = \\mathrm{fl}(1.000000 - 1.000000) = \\mathrm{fl}(0) = 0$。\n这证实了在指定的浮点系统中，减法运算的计算结果确实是 $0$。因此，问题要求的是实际执行的计算的后向误差，其中计算结果为 $0$。这种两个几乎相等的数相减导致精度损失（本例中为完全损失）的现象，被称为灾难性抵消。\n\n核心任务是找到问题中定义的扰动 $\\Delta x$。问题指出，$\\Delta x$ 是使得精确减法 $(x+\\Delta x)-y$ 等于 $0$ 的 $x$ 的最小扰动。\n我们根据这个定义建立方程：\n$$ (x + \\Delta x) - y = 0 $$\n这是一个关于 $\\Delta x$ 的线性方程。我们可以通过重新排列各项来解出 $\\Delta x$：\n$$ \\Delta x = y - x $$\n现在，我们代入给定的 $x$ 和 $y$ 的真实值：\n$$ x = 1.0000004 $$\n$$ y = 1.0000001 $$\n所以，扰动 $\\Delta x$ 是：\n$$ \\Delta x = 1.0000001 - 1.0000004 = -0.0000003 $$\n问题指定了“最小扰动”。由于关于 $\\Delta x$ 的方程有唯一解，所以这个解在绝对值上自然是最小的。扰动的绝对值是：\n$$ |\\Delta x| = |-0.0000003| = 0.0000003 = 3 \\times 10^{-7} $$\n\n接下来，我们计算 $x$ 的相对后向误差，其定义为 $\\frac{|\\Delta x|}{|x|}$。\n$x$ 的绝对值为 $|x| = |1.0000004| = 1.0000004$。\n因此，相对后向误差为：\n$$ \\frac{|\\Delta x|}{|x|} = \\frac{3 \\times 10^{-7}}{1.0000004} $$\n现在，我们进行数值除法：\n$$ \\frac{|\\Delta x|}{|x|} \\approx 2.999998800000479... \\times 10^{-7} $$\n问题要求将这个最终数值答案四舍五入到 $4$ 位有效数字。设该值为 $V = 2.9999988... \\times 10^{-7}$。\n前四位有效数字是 $2$、$9$、$9$、$9$。第五位有效数字是 $9$。由于 $9 \\ge 5$，我们必须将第四位数字向上舍入。将 $2.999$ 向上舍入得到 $3.000$。末尾的零是有效数字，必须包含在内，以表明四舍五入后结果的精度。\n所以，相对后向误差，四舍五入到 $4$ 位有效数字后，为 $3.000 \\times 10^{-7}$。\n\n这个小的后向误差表明，对于这个实例，该算法（减法）是后向稳定的，因为输入 $x$ 的一个非常小的相对变化就足以解释计算出的输出 $0$。然而，需要注意的是，前向误差很大。真实结果是 $x-y = 0.0000003$，而计算结果是 $0$。相对前向误差是 $\\frac{|(x-y) - z_{\\mathrm{comp}}|}{|x-y|} = \\frac{|0.0000003 - 0|}{|0.0000003|} = 1$，这代表了 $100\\%$ 的误差。这突显了后向稳定性和前向误差放大之间的区别。", "answer": "$$\\boxed{3.000 \\times 10^{-7}}$$", "id": "3231943"}, {"introduction": "在上一个练习的基础上，我们现在将问题从简单的算术运算升级到线性方程组。求解两条近乎平行的直线的交点是一个典型的病态问题。本练习[@problem_id:3232092]旨在通过一个直观的几何情景，帮助您理解为何输入数据（直线参数）的微小扰动会导致输出结果（交点坐标）的巨大变化，从而深化对条件数和误差放大效应的认识。", "problem": "给定平面上的两条直线，其斜截式方程为 $y = m_1 x + d_1$ 和 $y = m_2 x + d_2$，其中 $m_1 = 1$，$d_1 = 0$，$m_2 = 1 + 10^{-6}$ 及 $d_2 = 1$。它们的交点可以构建为一个 $2 \\times 2$ 的线性系统 $A \\mathbf{x} = \\mathbf{c}$，其中 $A = \\begin{pmatrix} -m_1  1 \\\\ -m_2  1 \\end{pmatrix}$，$\\mathbf{x} = \\begin{pmatrix} x \\\\ y \\end{pmatrix}$，以及 $\\mathbf{c} = \\begin{pmatrix} d_1 \\\\ d_2 \\end{pmatrix}$。由于两条直线几乎平行，矩阵 $A$ 是近奇异的。假设系数在测量中存在小的相对误差，产生了扰动值 $\\tilde{m}_2 = m_2 (1 + \\varepsilon_m)$ 和 $\\tilde{d}_2 = d_2 (1 + \\varepsilon_d)$，其中 $\\varepsilon_m = 10^{-8}$ 和 $\\varepsilon_d = -10^{-8}$，而 $m_1$ 和 $d_1$ 保持不变。将 $\\tilde{m}_2$ 和 $\\tilde{d}_2$ 视为唯一的扰动数据。\n\n从向前误差、向后误差的核心定义以及直线交点的几何解释出发，完成以下任务：\n\n- 计算未扰动直线的精确交点 $\\mathbf{x}^{\\ast} = \\begin{pmatrix} x^{\\ast} \\\\ y^{\\ast} \\end{pmatrix}$。\n- 使用扰动系数 $\\tilde{m}_2$ 和 $\\tilde{d}_2$ 计算扰动后直线的交点 $\\tilde{\\mathbf{x}} = \\begin{pmatrix} \\tilde{x} \\\\ \\tilde{y} \\end{pmatrix}$。\n- 使用欧几里得范数（也称 $2$-范数），评估范数相对向前误差 $\\frac{\\|\\tilde{\\mathbf{x}} - \\mathbf{x}^{\\ast}\\|_{2}}{\\|\\mathbf{x}^{\\ast}\\|_{2}}$。\n- 将系数相对向后误差定义为 $\\max\\!\\left\\{\\frac{|\\tilde{m}_2 - m_2|}{|m_2|}, \\frac{|\\tilde{d}_2 - d_2|}{|d_2|}\\right\\}$ 并针对给定的扰动计算其值。\n- 计算放大因子，其定义为范数相对向前误差与系数相对向后误差之比，并给出其数值。\n\n将最终的放大因子四舍五入到四位有效数字。无需单位。", "solution": "该问题陈述经评估具有科学依据、问题适定且客观。它提供了一套完整且一致的数据和定义，用于解决数值分析中关于病态线性系统误差放大的标准问题。因此，该问题是有效的，并将提供解答。\n\n该问题要求分析两条直线的交点，这等同于求解一个 $2 \\times 2$ 的线性系统。我们被给予了未扰动系统和其扰动版本，任务是计算向前误差、向后误差以及它们的比率（放大因子）。\n\n两条直线由以下方程描述：\n直线 1: $y = m_1 x + d_1$\n直线 2: $y = m_2 x + d_2$\n\n给定的未扰动系数为 $m_1 = 1$，$d_1 = 0$，$m_2 = 1 + 10^{-6}$ 及 $d_2 = 1$。\n\n**第 1 步：计算精确交点 $\\mathbf{x}^{\\ast}$**\n通过令 $y$ 的表达式相等来找到交点 $(x^{\\ast}, y^{\\ast})$：\n$$m_1 x^{\\ast} + d_1 = m_2 x^{\\ast} + d_2$$\n求解 $x^{\\ast}$：\n$$(m_1 - m_2) x^{\\ast} = d_2 - d_1$$\n$$x^{\\ast} = \\frac{d_2 - d_1}{m_1 - m_2}$$\n代入给定值：\n$$x^{\\ast} = \\frac{1 - 0}{1 - (1 + 10^{-6})} = \\frac{1}{-10^{-6}} = -10^6$$\n现在，我们使用直线 1 的方程来求解 $y^{\\ast}$：\n$$y^{\\ast} = m_1 x^{\\ast} + d_1 = (1)(-10^6) + 0 = -10^6$$\n因此，精确交点为 $\\mathbf{x}^{\\ast} = \\begin{pmatrix} x^{\\ast} \\\\ y^{\\ast} \\end{pmatrix} = \\begin{pmatrix} -10^6 \\\\ -10^6 \\end{pmatrix}$。\n\n**第 2 步：计算扰动后的交点 $\\tilde{\\mathbf{x}}$**\n系数 $m_2$ 和 $d_2$ 受到扰动。新的系数是 $\\tilde{m}_2$ 和 $\\tilde{d}_2$。\n扰动由 $\\varepsilon_m = 10^{-8}$ 和 $\\varepsilon_d = -10^{-8}$ 给出。\n$$\\tilde{m}_2 = m_2(1 + \\varepsilon_m) = (1 + 10^{-6})(1 + 10^{-8}) = 1 + 10^{-6} + 10^{-8} + 10^{-14}$$\n$$\\tilde{d}_2 = d_2(1 + \\varepsilon_d) = 1(1 - 10^{-8}) = 1 - 10^{-8}$$\n系数 $m_1$ 和 $d_1$ 保持不变。通过求解带扰动系数的系统来找到扰动后的交点 $(\\tilde{x}, \\tilde{y})$：\n$$m_1 \\tilde{x} + d_1 = \\tilde{m}_2 \\tilde{x} + \\tilde{d}_2$$\n$$\\tilde{x} = \\frac{\\tilde{d}_2 - d_1}{m_1 - \\tilde{m}_2}$$\n代入数值：\n$$\\tilde{x} = \\frac{(1 - 10^{-8}) - 0}{1 - (1 + 10^{-6} + 10^{-8} + 10^{-14})} = \\frac{1 - 10^{-8}}{-10^{-6} - 10^{-8} - 10^{-14}}$$\n对于新的 $y$ 坐标，使用未扰动的直线 1 方程：\n$$\\tilde{y} = m_1 \\tilde{x} + d_1 = (1)\\tilde{x} + 0 = \\tilde{x}$$\n所以，扰动后的交点是 $\\tilde{\\mathbf{x}} = \\begin{pmatrix} \\tilde{x} \\\\ \\tilde{x} \\end{pmatrix}$。\n\n**第 3 步：评估范数相对向前误差**\n范数相对向前误差定义为 $E_{fwd} = \\frac{\\|\\tilde{\\mathbf{x}} - \\mathbf{x}^{\\ast}\\|_{2}}{\\|\\mathbf{x}^{\\ast}\\|_{2}}$。\n首先，计算范数和差向量。\n$$\\|\\mathbf{x}^{\\ast}\\|_{2} = \\sqrt{(x^{\\ast})^2 + (y^{\\ast})^2} = \\sqrt{(-10^6)^2 + (-10^6)^2} = \\sqrt{2 \\cdot 10^{12}} = \\sqrt{2} \\cdot 10^6$$\n差向量为：\n$$\\tilde{\\mathbf{x}} - \\mathbf{x}^{\\ast} = \\begin{pmatrix} \\tilde{x} - (-10^6) \\\\ \\tilde{x} - (-10^6) \\end{pmatrix} = \\begin{pmatrix} \\tilde{x} + 10^6 \\\\ \\tilde{x} + 10^6 \\end{pmatrix}$$\n差向量的范数为：\n$$\\|\\tilde{\\mathbf{x}} - \\mathbf{x}^{\\ast}\\|_{2} = \\sqrt{(\\tilde{x} + 10^6)^2 + (\\tilde{x} + 10^6)^2} = \\sqrt{2(\\tilde{x} + 10^6)^2} = \\sqrt{2} |\\tilde{x} + 10^6|$$\n因此，相对向前误差 $E_{fwd}$ 是：\n$$E_{fwd} = \\frac{\\sqrt{2} |\\tilde{x} + 10^6|}{\\sqrt{2} \\cdot 10^6} = \\frac{|\\tilde{x} + 10^6|}{10^6}$$\n计算 $\\tilde{x} + 10^6$ 的值：\n$$\\tilde{x} + 10^6 = \\frac{1 - 10^{-8}}{-(10^{-6} + 10^{-8} + 10^{-14})} + 10^6 = \\frac{(1 - 10^{-8}) - 10^6(10^{-6} + 10^{-8} + 10^{-14})}{-(10^{-6} + 10^{-8} + 10^{-14})}$$\n$$= \\frac{1 - 10^{-8} - (1 + 10^{-2} + 10^{-8})}{-(10^{-6} + 10^{-8} + 10^{-14})} = \\frac{-10^{-2} - 2 \\cdot 10^{-8}}{-(10^{-6} + 10^{-8} + 10^{-14})} = \\frac{10^{-2} + 2 \\cdot 10^{-8}}{10^{-6} + 10^{-8} + 10^{-14}}$$\n因此，相对向前误差的表达式为：\n$$E_{fwd} = \\frac{1}{10^6} \\left( \\frac{10^{-2} + 2 \\cdot 10^{-8}}{10^{-6} + 10^{-8} + 10^{-14}} \\right)$$\n\n**第 4 步：评估系数相对向后误差**\n系数相对向后误差 $E_{bwd}$ 定义为：\n$$E_{bwd} = \\max\\!\\left\\{\\frac{|\\tilde{m}_2 - m_2|}{|m_2|}, \\frac{|\\tilde{d}_2 - d_2|}{|d_2|}\\right\\}$$\n使用定义式 $\\tilde{m}_2 = m_2(1+\\varepsilon_m)$ 和 $\\tilde{d}_2 = d_2(1+\\varepsilon_d)$:\n$$\\frac{|\\tilde{m}_2 - m_2|}{|m_2|} = \\frac{|m_2(1+\\varepsilon_m) - m_2|}{|m_2|} = \\frac{|m_2 \\varepsilon_m|}{|m_2|} = |\\varepsilon_m|$$\n$$\\frac{|\\tilde{d}_2 - d_2|}{|d_2|} = \\frac{|d_2(1+\\varepsilon_d) - d_2|}{|d_2|} = \\frac{|d_2 \\varepsilon_d|}{|d_2|} = |\\varepsilon_d|$$\n给定 $\\varepsilon_m = 10^{-8}$ 和 $\\varepsilon_d = -10^{-8}$：\n$$E_{bwd} = \\max\\{|10^{-8}|, |-10^{-8}|\\} = \\max\\{10^{-8}, 10^{-8}\\} = 10^{-8}$$\n\n**第 5 步：计算放大因子**\n放大因子是相对向前误差与相对向后误差的比值：\n$$\\text{放大因子} = \\frac{E_{fwd}}{E_{bwd}} = \\frac{1}{E_{bwd}} \\cdot E_{fwd}$$\n代入已求得的表达式：\n$$\\text{放大因子} = \\frac{1}{10^{-8}} \\cdot \\frac{1}{10^6} \\left( \\frac{10^{-2} + 2 \\cdot 10^{-8}}{10^{-6} + 10^{-8} + 10^{-14}} \\right)$$\n提出公因子进行简化：\n$$\\text{放大因子} = \\frac{10^8}{10^6} \\left( \\frac{10^{-2}(1 + 2 \\cdot 10^{-6})}{10^{-6}(1 + 10^{-2} + 10^{-8})} \\right) = 10^2 \\cdot \\frac{10^{-2}}{10^{-6}} \\left( \\frac{1 + 2 \\cdot 10^{-6}}{1 + 10^{-2} + 10^{-8}} \\right)$$\n$$= 10^2 \\cdot 10^4 \\left( \\frac{1 + 2 \\cdot 10^{-6}}{1 + 10^{-2} + 10^{-8}} \\right) = 10^6 \\frac{1 + 2 \\cdot 10^{-6}}{1 + 10^{-2} + 10^{-8}}$$\n现在，我们计算其数值：\n$$\\text{放大因子} = 10^6 \\frac{1.000002}{1.01000001} \\approx 10^6(0.990100980297)$$\n$$\\text{放大因子} \\approx 990100.980297$$\n问题要求将最终答案四舍五入到四位有效数字。前四位有效数字是 $9, 9, 0, 1$。第五位是 $0$，所以我们向下舍入。\n$$\\text{放大因子} \\approx 990100$$\n用科学记数法表示，这是 $9.901 \\times 10^5$。", "answer": "$$\\boxed{9.901 \\times 10^5}$$", "id": "3232092"}, {"introduction": "真实世界中的许多模型都涉及非线性方程组，而误差分析的原理同样适用于这些更复杂的场景。这个动手编程练习[@problem_id:3232016]将引导您为一个特意设计的非线性系统计算前向误差和后向误差。通过对不同参数和近似解的测试，您将能够主动探索并验证：即使残差（后向误差）极小，计算出的解也可能与真实解（前向误差）相差甚远，这在评估复杂模型的数值解时是一个至关重要的考量。", "problem": "考虑一个由映射 $F_{\\varepsilon} : \\mathbb{R}^2 \\to \\mathbb{R}^2$ 定义的二维变量非线性方程组族，其表达式为\n$$\nF_{\\varepsilon}(x_1, x_2) =\n\\begin{bmatrix}\n\\varepsilon \\,(x_1 - 1) \\\\\nx_1\\, x_2\n\\end{bmatrix},\n$$\n其中 $\\varepsilon  0$ 是一个参数。其唯一的精确解为 $x_{\\text{true}} = (1, 0)$，因为 $F_{\\varepsilon}(1,0) = (0,0)$ 且 $F_{\\varepsilon}(x_1,x_2)=(0,0)$ 意味着 $x_1=1$ 和 $x_2=0$。对于任意候选近似解 $\\hat{x} = (\\hat{x}_1, \\hat{x}_2)$，将前向误差定义为\n$$\n\\|x_{\\text{true}} - \\hat{x}\\|_2 = \\sqrt{(1 - \\hat{x}_1)^2 + (0 - \\hat{x}_2)^2},\n$$\n并将后向误差定义为\n$$\n\\|F_{\\varepsilon}(\\hat{x})\\|_2 = \\sqrt{\\left(\\varepsilon\\,(\\hat{x}_1 - 1)\\right)^2 + \\left(\\hat{x}_1\\,\\hat{x}_2\\right)^2}.\n$$\n该方程组族旨在说明病态问题：当 $\\varepsilon$ 非常小时，$x_1$ 的一个巨大变化仅在 $F_{\\varepsilon}$ 的第一个分量中产生一个非常微小的变化，因此即使前向误差 $\\|x_{\\text{true}} - \\hat{x}\\|_2$ 巨大，后向误差 $\\|F_{\\varepsilon}(\\hat{x})\\|_2$ 也可能很小。\n\n你的任务是实现一个程序，该程序针对一组测试用例计算前向误差和后向误差，并为每个用例返回一个布尔值，指示该用例是否表现出“后向误差微小但前向误差巨大”的现象。使用以下带有固定阈值的决策规则：\n- 微小后向误差：$\\|F_{\\varepsilon}(\\hat{x})\\|_2  \\tau_b$，\n- 巨大前向误差：$\\|x_{\\text{true}} - \\hat{x}\\|_2  \\tau_f$，\n其中 $\\tau_b = 10^{-7}$ 且 $\\tau_f = 10^{6}$。\n\n测试套件由以下参数集 $(\\varepsilon, \\hat{x}_1, \\hat{x}_2)$ 组成，这些参数集的选择是为了检验行为的不同方面：\n1. $(10^{-16}, 10^{8}, 0)$，代表性的病态情况，预期会表现出微小的后向误差和巨大的前向误差。\n2. $(1, 10^{8}, 0)$，一个良态的变体，其后向误差不小。\n3. $(10^{-16}, 1, 0)$，精确解，两个误差均为零。\n4. $(10^{-16}, 10^{8}, 10^{-12})$，第一个分量接近零，但非零的第二个分量使得后向误差不小。\n5. $(10^{-20}, 10^{12}, 0)$，一个更极端的病态情况，其 $\\varepsilon$ 更小，$\\hat{x}_1$ 更大。\n\n你的程序应该生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表（例如，“[result1,result2,result3,result4,result5]”），每个结果都是一个布尔值，计算方式如下：\n$$\n\\text{result} = \\left(\\|F_{\\varepsilon}(\\hat{x})\\|_2  \\tau_b\\right) \\land \\left(\\|x_{\\text{true}} - \\hat{x}\\|_2  \\tau_f\\right).\n$$\n不涉及物理单位。不涉及角度。输出为布尔值。", "solution": "对问题进行验证。\n\n### 第 1 步：提取已知信息\n- 该非线性方程组族由映射 $F_{\\varepsilon} : \\mathbb{R}^2 \\to \\mathbb{R}^2$ 定义，其中\n$$\nF_{\\varepsilon}(x_1, x_2) =\n\\begin{bmatrix}\n\\varepsilon \\,(x_1 - 1) \\\\\nx_1\\, x_2\n\\end{bmatrix}\n$$\n- 参数 $\\varepsilon  0$。\n- 唯一的精确解是 $x_{\\text{true}} = (1, 0)$。\n- 候选近似解是 $\\hat{x} = (\\hat{x}_1, \\hat{x}_2)$。\n- 前向误差定义为 $\\|x_{\\text{true}} - \\hat{x}\\|_2 = \\sqrt{(1 - \\hat{x}_1)^2 + (0 - \\hat{x}_2)^2}$。\n- 后向误差定义为 $\\|F_{\\varepsilon}(\\hat{x})\\|_2 = \\sqrt{\\left(\\varepsilon\\,(\\hat{x}_1 - 1)\\right)^2 + \\left(\\hat{x}_1\\,\\hat{x}_2\\right)^2}$。\n- 微小后向误差的阈值：$\\tau_b = 10^{-7}$。\n- 巨大前向误差的阈值：$\\tau_f = 10^{6}$。\n- 测试用例 $(\\varepsilon, \\hat{x}_1, \\hat{x}_2)$ 如下：\n  1. $(10^{-16}, 10^{8}, 0)$\n  2. $(1, 10^{8}, 0)$\n  3. $(10^{-16}, 1, 0)$\n  4. $(10^{-16}, 10^{8}, 10^{-12})$\n  5. $(10^{-20}, 10^{12}, 0)$\n- 将一个测试用例归类为表现出该现象的逻辑条件是：\n$$\n\\text{result} = \\left(\\|F_{\\varepsilon}(\\hat{x})\\|_2  \\tau_b\\right) \\land \\left(\\|x_{\\text{true}} - \\hat{x}\\|_2  \\tau_f\\right)\n$$\n\n### 第 2 步：使用提取的已知信息进行验证\n该问题是数值分析中一个定义明确的练习，特别涉及前向误差、后向误差和条件数的概念。\n- **科学依据：** 该问题使用了数值分析中的标准定义。数学函数和范数都是正确的，并且是该领域的基础。\n- **适定性：** 问题被完全指定。所有必要的公式、数据和决策标准均已提供。没有任何歧义，并且可以确定性地计算出唯一的布尔结果列表。\n- **客观性：** 问题陈述是客观和定量的。“微小”和“巨大”误差的概念通过给定的阈值 $\\tau_b$ 和 $\\tau_f$ 进行了精确化。\n\n该问题没有科学缺陷、矛盾或歧义。所有有效性检查清单项目均已满足。\n\n### 第 3 步：结论与行动\n问题被判定为**有效**。将提供一个解决方案。\n\n### 解题推导\n目标是根据一个涉及给定非线性系统的前向和后向误差的特定逻辑条件，来评估一组测试用例。对于每个测试用例 $(\\varepsilon, \\hat{x}_1, \\hat{x}_2)$，我们必须计算两个量，然后应用一个布尔测试。\n\n给定的精确解为 $x_{\\text{true}} = (1, 0)$。一个近似解是 $\\hat{x} = (\\hat{x}_1, \\hat{x}_2)$。\n\n前向误差 $E_f$ 是近似解与精确解之间的欧几里得距离：\n$$\nE_f = \\|x_{\\text{true}} - \\hat{x}\\|_2 = \\sqrt{(1 - \\hat{x}_1)^2 + (0 - \\hat{x}_2)^2}\n$$\n\n后向误差 $E_b$ 是函数 $F_{\\varepsilon}$ 在近似解 $\\hat{x}$ 处取值的欧几里得范数：\n$$\nE_b = \\|F_{\\varepsilon}(\\hat{x})\\|_2 = \\sqrt{\\left(\\varepsilon\\,(\\hat{x}_1 - 1)\\right)^2 + \\left(\\hat{x}_1\\,\\hat{x}_2\\right)^2}\n$$\n\n决策规则基于两个阈值，$\\tau_b = 10^{-7}$ 和 $\\tau_f = 10^{6}$。当且仅当后向误差“微小”且前向误差“巨大”时，一个用例的结果为 `True`，定义为：\n$$\n(E_b  \\tau_b) \\land (E_f  \\tau_f)\n$$\n\n我们现在处理每个测试用例。\n\n**案例 1：** $(\\varepsilon, \\hat{x}_1, \\hat{x}_2) = (10^{-16}, 10^{8}, 0)$\n- 前向误差：\n$E_f = \\sqrt{(1 - 10^8)^2 + (0 - 0)^2} = |1 - 10^8| = 10^8 - 1 \\approx 10^8$。\n条件 $E_f  \\tau_f$ 变为 $10^8 - 1  10^6$，成立。\n- 后向误差：\n$E_b = \\sqrt{(10^{-16}(10^8 - 1))^2 + (10^8 \\cdot 0)^2} = |10^{-16}(10^8 - 1)| = 10^{-8} - 10^{-16} \\approx 10^{-8}$。\n条件 $E_b  \\tau_b$ 变为 $10^{-8} - 10^{-16}  10^{-7}$，成立。\n- 结果： $(\\text{真}) \\land (\\text{真}) \\implies \\text{True}$。\n\n**案例 2：** $(\\varepsilon, \\hat{x}_1, \\hat{x}_2) = (1, 10^{8}, 0)$\n- 前向误差：\n$E_f = \\sqrt{(1 - 10^8)^2 + (0 - 0)^2} = 10^8 - 1$。\n条件 $E_f  \\tau_f$ 为 $10^8 - 1  10^6$，成立。\n- 后向误差：\n$E_b = \\sqrt{(1 \\cdot (10^8 - 1))^2 + (10^8 \\cdot 0)^2} = |10^8 - 1| = 10^8 - 1$。\n条件 $E_b  \\tau_b$ 为 $10^8 - 1  10^{-7}$，不成立。\n- 结果： $(\\text{假}) \\land (\\text{真}) \\implies \\text{False}$。\n\n**案例 3：** $(\\varepsilon, \\hat{x}_1, \\hat{x}_2) = (10^{-16}, 1, 0)$\n- 这是精确解，$\\hat{x} = x_{\\text{true}}$。\n- 前向误差：\n$E_f = \\sqrt{(1 - 1)^2 + (0 - 0)^2} = 0$。\n条件 $E_f  \\tau_f$ 为 $0  10^6$，不成立。\n- 后向误差：\n$E_b = \\sqrt{(10^{-16}(1 - 1))^2 + (1 \\cdot 0)^2} = 0$。\n条件 $E_b  \\tau_b$ 为 $0  10^{-7}$，成立。\n- 结果： $(\\text{真}) \\land (\\text{假}) \\implies \\text{False}$。\n\n**案例 4：** $(\\varepsilon, \\hat{x}_1, \\hat{x}_2) = (10^{-16}, 10^{8}, 10^{-12})$\n- 前向误差：\n$E_f = \\sqrt{(1 - 10^8)^2 + (0 - 10^{-12})^2} = \\sqrt{(10^8 - 1)^2 + 10^{-24}} \\approx \\sqrt{(10^8)^2} = 10^8$。\n条件 $E_f  \\tau_f$ 约为 $10^8  10^6$，成立。\n- 后向误差：\n$E_b = \\sqrt{(10^{-16}(10^8 - 1))^2 + (10^8 \\cdot 10^{-12})^2} = \\sqrt{(10^{-8} - 10^{-16})^2 + (10^{-4})^2}$。\n$E_b \\approx \\sqrt{(10^{-8})^2 + 10^{-8}} = \\sqrt{10^{-16} + 10^{-8}} \\approx \\sqrt{10^{-8}} = 10^{-4}$。\n条件 $E_b  \\tau_b$ 为 $10^{-4}  10^{-7}$，不成立。\n- 结果： $(\\text{假}) \\land (\\text{真}) \\implies \\text{False}$。\n\n**案例 5：** $(\\varepsilon, \\hat{x}_1, \\hat{x}_2) = (10^{-20}, 10^{12}, 0)$\n- 前向误差：\n$E_f = \\sqrt{(1 - 10^{12})^2 + (0 - 0)^2} = |1 - 10^{12}| = 10^{12} - 1 \\approx 10^{12}$。\n条件 $E_f  \\tau_f$ 为 $10^{12} - 1  10^6$，成立。\n- 后向误差：\n$E_b = \\sqrt{(10^{-20}(10^{12} - 1))^2 + (10^{12} \\cdot 0)^2} = |10^{-20}(10^{12} - 1)| = 10^{-8} - 10^{-20} \\approx 10^{-8}$。\n条件 $E_b  \\tau_b$ 为 $10^{-8} - 10^{-20}  10^{-7}$，成立。\n- 结果： $(\\text{真}) \\land (\\text{真}) \\implies \\text{True}$。\n\n五个测试用例的布尔结果序列是：True, False, False, False, True。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes forward and backward errors for a family of non-linear systems\n    and determines if they exhibit the \"tiny backward error, huge forward error\"\n    phenomenon based on fixed thresholds.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple (epsilon, x1_hat, x2_hat).\n    test_cases = [\n        (1e-16, 1e8, 0.0),\n        (1.0, 1e8, 0.0),\n        (1e-16, 1.0, 0.0),\n        (1e-16, 1e8, 1e-12),\n        (1e-20, 1e12, 0.0),\n    ]\n\n    # Define the thresholds for the decision rule.\n    tau_b = 1e-7  # Threshold for \"tiny\" backward error\n    tau_f = 1e6   # Threshold for \"huge\" forward error\n\n    # The exact solution x_true = (1, 0).\n    x_true = np.array([1.0, 0.0])\n\n    results = []\n    for case in test_cases:\n        eps, x1_hat, x2_hat = case\n        x_hat = np.array([x1_hat, x2_hat])\n\n        # Calculate the forward error: ||x_true - x_hat||_2\n        # This is the Euclidean distance between the exact and approximate solution.\n        forward_error = np.linalg.norm(x_true - x_hat)\n\n        # Calculate F_epsilon(x_hat).\n        # This is the evaluation of the function at the approximate solution.\n        f_of_x_hat_comp1 = eps * (x1_hat - 1)\n        f_of_x_hat_comp2 = x1_hat * x2_hat\n        f_of_x_hat = np.array([f_of_x_hat_comp1, f_of_x_hat_comp2])\n\n        # Calculate the backward error: ||F_epsilon(x_hat)||_2\n        # This is the norm of the residual.\n        backward_error = np.linalg.norm(f_of_x_hat)\n\n        # Apply the logical decision rule:\n        # (backward_error  tau_b) AND (forward_error > tau_f)\n        is_tiny_b_err = backward_error  tau_b\n        is_huge_f_err = forward_error > tau_f\n        result = is_tiny_b_err and is_huge_f_err\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    # str(True) -> 'True', str(False) -> 'False'\n    print(f\"[{','.join(map(str, [r.capitalize() for r in map(str, results)]))}]\")\n\nsolve()\n```", "id": "3232016"}]}