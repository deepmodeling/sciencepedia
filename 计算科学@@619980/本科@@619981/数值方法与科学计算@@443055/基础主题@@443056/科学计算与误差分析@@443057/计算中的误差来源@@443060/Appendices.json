{"hands_on_practices": [{"introduction": "计算机无法精确表示所有实数，这导致了舍入误差，它是计算中误差的一个基本来源。为了量化这种固有的精度限制，我们将通过一个简化的浮点数系统来探索和计算机器精度（machine epsilon）。这个练习将让我们亲手计算一个特定系统的精度度量，从而具体地理解数字在计算机中是如何存储的，以及其精度极限在何处。[@problem_id:2204331]", "problem": "考虑一个为低功耗嵌入式控制器设计的假设的8位浮点数系统。在这个系统中，每个数使用1位表示符号（$S$），4位表示带偏置的指数（$E$），以及3位表示尾数的小数部分（$M$）。\n\n一个数的值由以下公式给出：\n$$V = (-1)^S \\times (1.M)_2 \\times 2^{E - \\text{bias}}$$\n\n尾数是规格化的，意味着它的形式是 $(1.M)_2$，表示二进制数 $1$ 后面跟着3位的小数部分 $M$。指数偏置定义为 $\\text{bias} = 2^{k-1} - 1$，其中 $k$ 是指数域中的位数。\n\n在任何浮点系统中，都存在一个称为机器epsilon（$\\epsilon_m$）的精度基本限制。它被定义为在该系统的表示法中，当与1相加时，结果大于1的最小正数。\n\n计算这个8位浮点数系统的机器epsilon值。请用一个十进制实数表示你的答案。", "solution": "我们有一个8位浮点格式，其中包含1个符号位、4个指数位和3个尾数的小数位。其值由以下公式给出：\n$$\nV = (-1)^{S} (1.M)_{2} 2^{E - \\text{bias}},\n$$\n其中尾数是规格化的，偏置由 $\\text{bias} = 2^{k-1} - 1$ 定义，其中 $k$ 是指数位数。\n\n首先计算 $k=4$ 时的偏置：\n$$\n\\text{bias} = 2^{4-1} - 1 = 2^{3} - 1 = 7.\n$$\n数字 $1$ 通过选择 $S=0$，$E=\\text{bias}$ 和 $M=000$ 来表示，得到\n$$\nV_{1} = (1.000)_{2} \\times 2^{7-7} = 1 \\times 2^{0} = 1.\n$$\n在相同指数下，下一个大于 $1$ 的可表示数具有最小的正尾数增量，即 $M=001$。其值为\n$$\nV_{\\text{next}} = (1.001)_{2} \\times 2^{7-7} = \\left(1 + 2^{-3}\\right) \\times 2^{0} = 1 + 2^{-3}.\n$$\n根据机器epsilon $\\epsilon_{m}$ 的定义，即在该系统中使 $1 + \\epsilon_{m} > 1$ 的最小正数，我们有\n$$\n\\epsilon_{m} = V_{\\text{next}} - V_{1} = \\left(1 + 2^{-3}\\right) - 1 = 2^{-3} = \\frac{1}{8} = 0.125.\n$$\n等价地，由于精度为 $p=1+3=4$ 个有效位（包括隐含的前导 $1$），通用公式 $\\epsilon_{m} = 2^{1-p}$ 得出\n$$\n\\epsilon_{m} = 2^{1-4} = 2^{-3} = 0.125,\n$$\n与直接构造的结果一致。", "answer": "$$\\boxed{0.125}$$", "id": "2204331"}, {"introduction": "除了由有限表示引起的舍入误差，当我们用有限的步骤来近似一个无限过程时，会引入另一种截断误差。许多重要的数学函数，如对数和三角函数，在计算机中都是通过级数展开（如泰勒级数）来计算的。这个练习将探讨如何确定需要计算级数的多少项才能保证结果达到指定的精度，这是在计算成本和准确性之间取得平衡的一项关键技能。[@problem_id:2204306]", "problem": "一名程序员的任务是为一个专门的计算库实现一个高精度的自然对数函数 `log(y)`。为了处理非常接近 1 的输入 `y`，该函数使用 $f(x) = \\ln(1+x)$ 的麦克劳林级数展开，其中 $x = y-1$。麦克劳林级数由下式给出：\n$$ \\ln(1+x) = \\sum_{n=1}^{\\infty} (-1)^{n-1} \\frac{x^n}{n} = x - \\frac{x^2}{2} + \\frac{x^3}{3} - \\frac{x^4}{4} + \\dots $$\n对于一个特定的基准测试，必须计算 $\\ln(1.01)$ 的值。要求是截断误差的绝对值——即 $\\ln(1.01)$ 的真值与级数部分和之间的差值——必须严格小于 $10^{-8}$。\n\n为了保证近似值满足此误差容限，必须对级数的至少多少项进行求和？你的答案应该是一个整数。", "solution": "我们使用其交错麦克劳林级数 $\\sum_{n=1}^{\\infty}(-1)^{n-1}\\frac{x^{n}}{n}$ 来近似计算 $\\ln(1+x)$，其中 $x=y-1$。对于 $y=1.01$，我们有 $x=0.01=10^{-2}$。用 $N$ 项部分和 $S_{N}=\\sum_{n=1}^{N}(-1)^{n-1}\\frac{x^{n}}{n}$ 来近似 $\\ln(1+x)$，其截断误差（余项）为 $R_{N}=\\ln(1+x)-S_{N}$。\n由于 $x=0.01 \\in (0,1)$，这是一个各项绝对值 $a_{n}=\\frac{x^{n}}{n}$ 单调递减至零的交错级数，因为对于 $x1$：\n$$\n\\frac{a_{n+1}}{a_{n}}=\\frac{x^{n+1}}{n+1}\\cdot\\frac{n}{x^{n}}=x\\cdot\\frac{n}{n+1}  1,\n$$\n所以根据交错级数误差估计，余项的绝对值由被截掉的第一项的绝对值来界定：\n$$\n|R_{N}| \\leq a_{N+1}=\\frac{x^{N+1}}{N+1}.\n$$\n为保证 $|R_{N}|  10^{-8}$，我们只需满足：\n$$\n\\frac{x^{N+1}}{N+1}  10^{-8}.\n$$\n代入 $x=10^{-2}$，我们需要找到满足以下条件的最小整数 $N$：\n$$\n\\frac{10^{-2(N+1)}}{N+1}  10^{-8}\n$$\n我们来检验 $N$ 的值：\n- 若 $N=2$，误差界为 $\\frac{10^{-2(2+1)}}{2+1} = \\frac{10^{-6}}{3} \\approx 3.33 \\times 10^{-7}$，这不小于 $10^{-8}$。\n- 若 $N=3$，误差界为 $\\frac{10^{-2(3+1)}}{3+1} = \\frac{10^{-8}}{4} = 0.25 \\times 10^{-8}$，这小于 $10^{-8}$。\n因此，必须至少对级数的3项进行求和才能满足所需的精度要求。", "answer": "$$\\boxed{3}$$", "id": "2204306"}, {"introduction": "微小的舍入误差有时会以意想不到的方式被放大，导致计算结果完全错误。这种现象被称为“灾难性抵消”（catastrophic cancellation），是科学计算中一个需要警惕的关键陷阱。在这个练习中，我们将分析两个在代数上完全等价的方差计算公式，通过一个精心设计的例子，亲眼见证一个公式在有限精度下如何失效，而另一个公式却能保持数值稳定性。[@problem_id:2204336]", "problem": "一位质量控制工程师正在测量来自同一生产批次的三个高精度钢棒的长度。测量值记录为 $x_1 = 10000.001$ 毫米，$x_2 = 10000.002$ 毫米，以及 $x_3 = 10000.003$ 毫米。该工程师需要计算这三个长度的总体方差。\n\n该工程师使用一个浮点精度有限的计算器。这个计算器执行每个算术运算，并通过四舍五入到8位有效数字来存储每个中间结果。\n\n总体方差 $\\sigma^2$ 可以用两种不同的公式计算：\n1.  “单遍”计算公式：$\\sigma^2 = \\left(\\frac{1}{N}\\sum_{i=1}^{N} x_i^2\\right) - \\mu^2$，其中 $\\mu = \\frac{1}{N}\\sum_{i=1}^{N} x_i$。\n2.  “双遍”定义公式：$\\sigma^2 = \\frac{1}{N}\\sum_{i=1}^{N} (x_i - \\mu)^2$。\n\n设 $V_1$ 是使用单遍公式计算的方差，$V_2$ 是使用双遍公式计算的方差，两者都受到计算器舍入限制的影响。对于标准差相对于其均值较小的数据，已知双遍公式在数值上更为稳定。因此，在本题中，我们将 $V_2$ 视为更准确的值。\n\n计算单遍公式结果相对于双遍公式结果的相对误差 $E_{rel}$，其定义为 $E_{rel} = \\frac{|V_2 - V_1|}{|V_2|}$。将你的相对误差最终答案四舍五入到四位有效数字。", "solution": "我们有三个测量值 $x_{1}=10000.001$，$x_{2}=10000.002$，$x_{3}=10000.003$，且 $N=3$。每次运算和中间存储都四舍五入到8位有效数字。\n\n首先计算两种方法中都使用的均值。求和：\n$$x_{1}+x_{2}=20000.003 \\quad(\\text{已经是8位有效数字})，$$\n$$x_{1}+x_{2}+x_{3}=30000.006 \\quad(\\text{已经是8位有效数字})。$$\n然后\n$$\\mu=\\frac{1}{3}(30000.006)=10000.002 \\quad(\\text{四舍五入到8位有效数字})。$$\n\n单遍（计算）方差 $V_{1}=\\left(\\frac{1}{N}\\sum x_{i}^{2}\\right)-\\mu^{2}$，每次运算后四舍五入到8位有效数字：\n- 将每个 $x_i$ 平方并四舍五入到8位有效数字：\n$$x_{1}^{2}=100000020.000001 \\to 1.0000002\\times 10^{8},$$\n$$x_{2}^{2}=100000040.000004 \\to 1.0000004\\times 10^{8},$$\n$$x_{3}^{2}=100000060.000009 \\to 1.0000006\\times 10^{8}.$$\n- 求和并取平均值（舍入保持在8位有效数字）：\n$$\\sum x_{i}^{2}=3.0000012\\times 10^{8},\\qquad \\frac{1}{3}\\sum x_{i}^{2}=1.0000004\\times 10^{8}.$$\n- 将舍入后的均值平方并四舍五入到8位有效数字：\n$$\\mu^{2}=(10000.002)^{2}=1.00000040000004\\times 10^{8}\\to 1.0000004\\times 10^{8}.$$\n- 相减：\n$$V_{1}=\\left(1.0000004\\times 10^{8}\\right)-\\left(1.0000004\\times 10^{8}\\right)=0.$$\n\n双遍（定义）方差 $V_{2}=\\frac{1}{N}\\sum (x_{i}-\\mu)^{2}$，每一步都四舍五入到8位有效数字：\n- 偏差（四舍五入到8位有效数字）：\n$$x_{1}-\\mu=-0.001= -1.0000000\\times 10^{-3},\\quad x_{2}-\\mu=0,\\quad x_{3}-\\mu=+0.001=1.0000000\\times 10^{-3}.$$\n- 平方（四舍五入到8位有效数字）：\n$$(x_{1}-\\mu)^{2}=1.0000000\\times 10^{-6},\\quad (x_{2}-\\mu)^{2}=0,\\quad (x_{3}-\\mu)^{2}=1.0000000\\times 10^{-6}.$$\n- 求和并取平均值：\n$$\\sum (x_{i}-\\mu)^{2}=2.0000000\\times 10^{-6},\\qquad V_{2}=\\frac{1}{3}\\left(2.0000000\\times 10^{-6}\\right)=6.6666667\\times 10^{-7}\\quad(\\text{8位有效数字})。$$\n\n使用这些舍入后的结果计算相对误差：\n$$E_{\\text{rel}}=\\frac{|V_{2}-V_{1}|}{|V_{2}|}=\\frac{6.6666667\\times 10^{-7}-0}{6.6666667\\times 10^{-7}}=1.$$\n四舍五入到四位有效数字，结果是 $1.000$。", "answer": "$$\\boxed{1.000}$$", "id": "2204336"}]}