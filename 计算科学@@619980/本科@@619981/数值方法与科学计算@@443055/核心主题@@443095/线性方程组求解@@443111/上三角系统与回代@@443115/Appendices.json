{"hands_on_practices": [{"introduction": "我们从一个基础练习开始，旨在巩固你对回代法核心机制的理解。通过求解一个具体的 $4 \\times 4$ 上三角系统，并全程使用精确的分数进行计算，你将能够专注于算法的逐步逻辑，暂时避免浮点数舍入误差带来的复杂性。这个练习是掌握回代法的第一步，确保你对基本流程了然于心。", "problem": "使用回代法求解线性方程组 $ A \\mathbf{x} = \\mathbf{b} $，其中 $ A $ 是一个 4×4 的上三角矩阵，$ \\mathbf{b} $ 是一个向量。给定的矩阵和向量如下：\n\n\n$$\nA = \\begin{pmatrix}\n2.5  1.25  -0.6  1.8 \\\\\n0  0.4  2.1  -1.2 \\\\\n0  0  3.3  0.9 \\\\\n0  0  0  1.5\n\\end{pmatrix}, \\quad \n\\mathbf{b} = \\begin{pmatrix}\n1.1 \\\\\n-0.5 \\\\\n2.4 \\\\\n0.6\n\\end{pmatrix}.\n$$\n\n\n所有计算均需使用分数进行精确运算。将解向量 $ \\mathbf{x} = \\begin{pmatrix} x_1 \\\\ x_2 \\\\ x_3 \\\\ x_4 \\end{pmatrix} $ 以最简分数形式表示。", "solution": "我们将方程组中的小数表示为分数，重写方程组如下：\n$$\\begin{cases}\n\\frac52x_1+\\frac54x_2-\\frac35x_3+\\frac95x_4=\\frac{11}{10},\\\\\n\\frac25x_2+\\frac{21}{10}x_3-\\frac65x_4=-\\frac12,\\\\\n\\frac{33}{10}x_3+\\frac{9}{10}x_4=\\frac{12}{5},\\\\\n\\frac32x_4=\\frac35.\n\\end{cases}$$\n\n1. 由第四个方程可得：\n$$\\frac32x_4=\\frac35\\;\\Longrightarrow\\;\nx_4=\\frac{\\frac35}{\\frac32}=\\frac35\\cdot\\frac23=\\frac25.$$\n\n2. 第三个方程：\n$$\\frac{33}{10}x_3+\\frac{9}{10}\\cdot\\frac25=\\frac{12}{5}\n\\;\\Longrightarrow\\;\\frac{33}{10}x_3=\\frac{12}{5}-\\frac{18}{50}\n=\\frac{120-18}{50}=\\frac{102}{50}=\\frac{51}{25},$$\n$$x_3=\\frac{\\tfrac{51}{25}}{\\tfrac{33}{10}}\n=\\frac{51}{25}\\cdot\\frac{10}{33}=\\frac{510}{825}=\\frac{34}{55}.$$\n\n3. 第二个方程：\n$$\\frac25x_2+\\frac{21}{10}\\cdot\\frac{34}{55}-\\frac{6}{5}\\cdot\\frac25=-\\frac12\n\\;\\Longrightarrow\\;\\frac25x_2=-\\frac12-\\frac{357}{275}+\\frac{12}{25}\n=-\\frac{725}{550}=-\\frac{29}{22},$$\n$$x_2=-\\frac{29}{22}\\cdot\\frac52=-\\frac{145}{44}.$$\n\n4. 第一个方程：\n$$\\frac52x_1+\\frac54\\Bigl(-\\frac{145}{44}\\Bigr)-\\frac35\\cdot\\frac{34}{55}\n+\\frac95\\cdot\\frac25=\\frac{11}{10},$$\n$$\\frac52x_1=\\frac{11}{10}+\\frac{725}{176}+\\frac{102}{275}-\\frac{18}{25}\n=\\frac{21429}{4400},$$\n$$x_1=\\frac{21429}{4400}\\cdot\\frac25=\\frac{21429}{11000}.$$\n\n因此\n$$\\mathbf{x}=\\begin{pmatrix}\\frac{21429}{11000}\\\\-\\frac{145}{44}\\\\\\frac{34}{55}\\\\\\frac25\\end{pmatrix}.$$", "answer": "$$\\boxed{\\begin{pmatrix}\\frac{21429}{11000}\\\\-\\frac{145}{44}\\\\\\frac{34}{55}\\\\\\frac25\\end{pmatrix}}$$", "id": "1029943"}, {"introduction": "在掌握了基本方法之后，是时候面对科学计算中的一个关键挑战：数值稳定性。这个练习 [@problem_id:3285335] 揭示了一个理论上完美的算法在真实计算机上由于有限精度算术可能产生巨大误差。你将分析一个经过精心设计的系统，它会放大灾难性抵消（catastrophic cancellation）效应，从而深刻体验精确解与浮点计算结果之间的惊人差异。", "problem": "考虑通过标准的回代算法求解一个上三角线性系统，从最后一个方程开始向上进行。设\n$$\nU = \\begin{pmatrix}\n10^{-8}  10^{8}  10^{8}  10^{8} \\\\\n0  1  10^{8}  10^{8} \\\\\n0  0  1  10^{8} \\\\\n0  0  0  1\n\\end{pmatrix}, \n\\quad\nb = \\begin{pmatrix}\n3\\times 10^{8} + 10^{-8} \\\\\n2\\times 10^{8} + 1 \\\\\n10^{8} + 1 \\\\\n1\n\\end{pmatrix}.\n$$\n回代算法仅对这些条目使用加、减、乘/除运算。\n\n你将使用两种算术模型执行回代：\n1. 精确实数算术，作为概念上的基准真相。\n2. 由电气与电子工程师协会（IEEE）754标准指定的单精度（binary32）浮点算术，采用四舍五入至最近值（ties to even），以及通常的规格化有限格式。假设在进行任何算术运算之前，$U$ 和 $b$ 条目中提供的每个十进制字面常量都存储为最接近的可表示的 binary32 值，并且随后的每个算术运算都在 binary32 中执行，并四舍五入至最近值。\n\n任务：\n- 使用精确实数算术，确定精确解，并解释 $U$ 和 $b$ 的哪些结构特征使得 $x_1$ 的计算对相消（cancellation）敏感。\n- 然后，如上所述，在 IEEE 754 单精度（binary32）下执行回代，并确定返回的 $x_1$ 值，明确引用所遇到数量级附近的相邻浮点数之间的间距尺度（末位单位），以证明导致相消或有效数字损失的每次舍入事件。\n\n答案规格：\n- 以科学记数法将计算出的 IEEE 754 单精度 $x_1$ 值报告为单个实数。\n- 将最终报告的数字四舍五入至四位有效数字。", "solution": "用户希望我使用两种不同的算术模型求解上三角线性系统 $Ux = b$：\n1. 精确实数算术。\n2. IEEE 754 单精度浮点算术。\n\n该系统由矩阵 $U$ 和向量 $b$ 定义：\n$$\nU = \\begin{pmatrix}\n10^{-8}  10^{8}  10^{8}  10^{8} \\\\\n0  1  10^{8}  10^{8} \\\\\n0  0  1  10^{8} \\\\\n0  0  0  1\n\\end{pmatrix}, \n\\quad\nb = \\begin{pmatrix}\n3\\times 10^{8} + 10^{-8} \\\\\n2\\times 10^{8} + 1 \\\\\n10^{8} + 1 \\\\\n1\n\\end{pmatrix}.\n$$\n\n方程组为：\n$$\nu_{11}x_1 + u_{12}x_2 + u_{13}x_3 + u_{14}x_4 = b_1 \\\\\nu_{22}x_2 + u_{23}x_3 + u_{24}x_4 = b_2 \\\\\nu_{33}x_3 + u_{34}x_4 = b_3 \\\\\nu_{44}x_4 = b_4\n$$\n\n回代算法按如下方式计算解向量 $x$：\n$$\nx_i = \\frac{1}{u_{ii}} \\left( b_i - \\sum_{j=i+1}^{n} u_{ij} x_j \\right) \\quad \\text{for } i = n, n-1, \\dots, 1.\n$$\n\n### 步骤 1：提取已知条件\n- 上三角矩阵 $U$：\n$$\nU = \\begin{pmatrix}\n10^{-8}  10^{8}  10^{8}  10^{8} \\\\\n0  1  10^{8}  10^{8} \\\\\n0  0  1  10^{8} \\\\\n0  0  0  1\n\\end{pmatrix}\n$$\n- 右端向量 $b$：\n$$\nb = \\begin{pmatrix}\n3\\times 10^{8} + 10^{-8} \\\\\n2\\times 10^{8} + 1 \\\\\n10^{8} + 1 \\\\\n1\n\\end{pmatrix}\n$$\n- 算术模型：(1) 精确实数算术，(2) IEEE 754 单精度（binary32），采用四舍五入至最近值（ties-to-even）。\n- 浮点过程：每个常量首先存储为最接近的 binary32 值，然后所有后续运算都在 binary32 中执行，并四舍五入至最近值。\n\n### 步骤 2：使用提取的已知条件进行验证\n该问题是数值线性代数中的一个标准练习，旨在说明有限精度算术对线性系统解的影响。\n- **科学依据：** 该问题使用已建立的数学概念（线性系统、回代）和标准计算模型（IEEE 754）。它在科学上是合理的。\n- **适定性：** 矩阵 $U$ 的行列式非零（$\\det(U) = u_{11}u_{22}u_{33}u_{44} = 10^{-8} \\neq 0$），因此系统 $Ux=b$ 有唯一解。\n- **客观性：** 该问题使用精确、无歧义的数学术语陈述。\n\n该问题有效，因为它没有违反任何指定的标准。\n\n### 步骤 3：结论与行动\n该问题有效。我将继续进行求解。\n\n### 第 1 部分：精确实数算术解与灵敏度分析\n\n使用精确实数算术进行回代：\n\n1.  由第四个方程，$u_{44}x_4 = b_4$：\n    $$1 \\cdot x_4 = 1 \\implies x_4 = 1$$\n\n2.  由第三个方程，$u_{33}x_3 + u_{34}x_4 = b_3$：\n    $$1 \\cdot x_3 + 10^8 \\cdot x_4 = 10^8 + 1$$\n    代入 $x_4=1$：\n    $$x_3 + 10^8 = 10^8 + 1 \\implies x_3 = 1$$\n\n3.  由第二个方程，$u_{22}x_2 + u_{23}x_3 + u_{24}x_4 = b_2$：\n    $$1 \\cdot x_2 + 10^8 \\cdot x_3 + 10^8 \\cdot x_4 = 2 \\times 10^8 + 1$$\n    代入 $x_3=1$ 和 $x_4=1$：\n    $$x_2 + 10^8(1) + 10^8(1) = 2 \\times 10^8 + 1$$\n    $$x_2 + 2 \\times 10^8 = 2 \\times 10^8 + 1 \\implies x_2 = 1$$\n\n4.  由第一个方程，$u_{11}x_1 + u_{12}x_2 + u_{13}x_3 + u_{14}x_4 = b_1$：\n    $$10^{-8} \\cdot x_1 + 10^8 \\cdot x_2 + 10^8 \\cdot x_3 + 10^8 \\cdot x_4 = 3 \\times 10^8 + 10^{-8}$$\n    代入 $x_2=1, x_3=1, x_4=1$：\n    $$10^{-8} x_1 + 10^8(1) + 10^8(1) + 10^8(1) = 3 \\times 10^8 + 10^{-8}$$\n    $$10^{-8} x_1 + 3 \\times 10^8 = 3 \\times 10^8 + 10^{-8}$$\n    $$10^{-8} x_1 = 10^{-8} \\implies x_1 = 1$$\n\n精确解为 $x = (1, 1, 1, 1)^T$。\n\n**$x_1$ 的灵敏度分析**：\n$x_1$ 的计算公式为：\n$$x_1 = \\frac{1}{u_{11}} \\left( b_1 - \\sum_{j=2}^{4} u_{1j} x_j \\right)$$\n代入精确值：\n$$x_1 = \\frac{1}{10^{-8}} \\left( (3 \\times 10^8 + 10^{-8}) - (10^8 \\cdot 1 + 10^8 \\cdot 1 + 10^8 \\cdot 1) \\right)$$\n$$x_1 = 10^8 \\left( (3 \\times 10^8 + 10^{-8}) - (3 \\times 10^8) \\right)$$\n括号中的项涉及两个非常大且几乎相等的数的减法。这种现象被称为**灾难性相消（catastrophic cancellation）**。如果项 $b_1$ 和和 $\\sum u_{1j}x_j$ 的计算有任何精度损失，它们差值中的微小但重要的部分（$10^{-8}$）就可能丢失。导致这种情况的 $U$ 和 $b$ 的结构特征是：\n1. 对角元素 $u_{11} = 10^{-8}$ 非常小，因此其倒数 $1/u_{11} = 10^8$ 非常大。这会放大括号中所计算项的任何误差。\n2. 第一行中的非对角元素（$u_{12}$, $u_{13}$, $u_{14}$）非常大（$10^8$）。\n3. 右端项元素 $b_1 = 3 \\times 10^8 + 10^{-8}$ 被构造成非常接近于和 $\\sum_{j=2}^{4} u_{1j} x_j = 3 \\times 10^8$。\n这些条件使得系统是病态的，并且 $x_1$ 的计算对舍入误差高度敏感。\n\n### 第 2 部分：IEEE 754 单精度（binary32）解\n\n设 $\\text{fl}(z)$ 表示实数 $z$ 的最接近的单精度浮点表示。我们将使用 binary32 算术执行回代。\n\n**步骤 A：初始数据表示**\n我们必须首先找到给定常数的浮点表示。\n在 IEEE 754 单精度中，一个数 $y$ 的末位单位（ulp）是 $\\text{ulp}(y) = 2^{\\lfloor \\log_2|y| \\rfloor} \\cdot 2^{-23}$。一个数 $z$ 被舍入到最接近的可表示值。如果 $z$ 恰好位于两个可表示数的中间，它将被舍入到尾数最后一位为偶数（零）的那个数。\n\n- 对于 $u_{ij}$ 和 $b_i$：\n  - $1$, $10^8$, $2\\times 10^8$, $3 \\times 10^8$ 在单精度中都是精确可表示的。例如，$10^8 = 100000000 = 12500000 \\times 2^3 = (101111101011110000100000)_2 \\times 2^3$。尾数 $12500000$ 需要 $24$ 位，正好可以放入单精度格式的 $1$ 个隐含位和 $23$ 个显式位中。\n  - $\\text{fl}(10^{-8})$ 是一个非常接近 $10^{-8}$ 的值，我们称之为 $\\tilde{u}_{11}$。\n  - $\\text{fl}(b_4) = \\text{fl}(1) = 1$。\n  - 对于 $b_3 = 10^8 + 1$：我们必须计算 $\\text{fl}(10^8+1)$。$10^8$ 的数量级给出 $\\lfloor \\log_2(10^8) \\rfloor = 26$。所以，$\\text{ulp}(10^8) = 2^{26} \\times 2^{-23} = 2^3 = 8$。在 $10^8$ 附近的可表示数为 ...、$10^8-8$、$10^8$、$10^8+8$、...。值 $10^8+1$ 比 $10^8+8$ 更接近 $10^8$（距离为 1 vs 7）。因此，$\\text{fl}(10^8+1) = 10^8$。\n  - 对于 $b_2 = 2\\times 10^8 + 1$：$\\lfloor \\log_2(2\\times 10^8) \\rfloor = 27$。所以，$\\text{ulp}(2\\times 10^8) = 2^{27} \\times 2^{-23} = 2^4 = 16$。值 $2\\times 10^8+1$ 更接近 $2\\times 10^8$。因此，$\\text{fl}(2\\times 10^8+1) = 2\\times 10^8$。\n  - 对于 $b_1 = 3\\times 10^8 + 10^{-8}$：$\\lfloor \\log_2(3\\times 10^8) \\rfloor = 28$。所以，$\\text{ulp}(3\\times 10^8) = 2^{28} \\times 2^{-23} = 2^5 = 32$。增加的项 $10^{-8}$ 与 ulp 相比可以忽略不计。因此，$\\text{fl}(3\\times 10^8+10^{-8}) = 3\\times 10^8$。\n\n在浮点算术中求解的系统是 $U_{f}x_f=b_f$，其中\n$$\nU_f = \\begin{pmatrix}\n\\tilde{u}_{11}  10^{8}  10^{8}  10^{8} \\\\\n0  1  10^{8}  10^{8} \\\\\n0  0  1  10^{8} \\\\\n0  0  0  1\n\\end{pmatrix}, \n\\quad\nb_f = \\begin{pmatrix}\n3\\times 10^{8} \\\\\n2\\times 10^{8} \\\\\n10^{8} \\\\\n1\n\\end{pmatrix}.\n$$\n\n**步骤 B：浮点回代**\n设 $\\oplus, \\ominus, \\otimes, \\oslash$ 表示相应的 IEEE 754 运算。\n\n1.  计算 $x_{f,4}$：\n    $$x_{f,4} = b_{f,4} \\oslash u_{f,44} = 1 \\oslash 1 = 1$$\n\n2.  计算 $x_{f,3}$：\n    $$x_{f,3} = (b_{f,3} \\ominus u_{f,34} \\otimes x_{f,4}) \\oslash u_{f,33} = (10^8 \\ominus 10^8 \\otimes 1) \\oslash 1 = (10^8 \\ominus 10^8) \\oslash 1 = 0 \\oslash 1 = 0$$\n    存储 $b_3$ 时的舍入误差导致精确值 $x_3=1$ 变成了 $x_{f,3}=0$。\n\n3.  计算 $x_{f,2}$：\n    $$x_{f,2} = (b_{f,2} \\ominus (u_{f,23} \\otimes x_{f,3} \\oplus u_{f,24} \\otimes x_{f,4})) \\oslash u_{f,22}$$\n    和为 $10^8 \\otimes 0 \\oplus 10^8 \\otimes 1 = 0 \\oplus 10^8 = 10^8$。\n    $$x_{f,2} = (2\\times 10^8 \\ominus 10^8) \\oslash 1 = 10^8 \\oslash 1 = 10^8$$\n    来自 $x_{f,3}$ 的误差被传播，导致精确值 $x_2=1$ 变成了 $x_{f,2}=10^8$。\n\n4.  计算 $x_{f,1}$：\n    $$x_{f,1} = (b_{f,1} \\ominus (u_{f,12} \\otimes x_{f,2} \\oplus u_{f,13} \\otimes x_{f,3} \\oplus u_{f,14} \\otimes x_{f,4})) \\oslash \\tilde{u}_{11}$$\n    我们计算和 $S_f = u_{f,12} \\otimes x_{f,2} \\oplus u_{f,13} \\otimes x_{f,3} \\oplus u_{f,14} \\otimes x_{f,4}$。\n    $$S_f = 10^8 \\otimes 10^8 \\oplus 10^8 \\otimes 0 \\oplus 10^8 \\otimes 1$$\n    $$S_f = \\text{fl}(10^{16}) \\oplus 0 \\oplus 10^8 = \\text{fl}(10^{16}) \\oplus 10^8$$\n    现在我们必须分析运算 $\\text{fl}(10^{16}) \\oplus 10^8$。这是一个**淹没（swamping）**的例子。$\\lfloor \\log_2(10^{16}) \\rfloor = 53$。数量级为 $10^{16}$ 的数的 ulp 是 $\\text{ulp}(\\text{fl}(10^{16})) = 2^{53} \\times 2^{-23} = 2^{30} \\approx 1.07 \\times 10^9$。被加的数 $10^8$ 小于 ulp 的一半（$2^{29}$）。因此，在单精度下，这个加法对值没有影响。\n    $$S_f = \\text{fl}(10^{16})$$\n    分子为 $N_f = b_{f,1} \\ominus S_f = 3\\times 10^8 \\ominus \\text{fl}(10^{16})$。这是另一个淹没事件。被减数 $\\text{fl}(10^{16})$ 远大于 $3\\times 10^8$，且 $3\\times 10^8$ 小于 $\\text{ulp}(\\text{fl}(10^{16}))/2$。\n    $$N_f = \\text{fl}(3\\times 10^8 - \\text{fl}(10^{16})) = -\\text{fl}(10^{16})$$\n    最后，我们计算 $x_{f,1}$：\n    $$x_{f,1} = N_f \\oslash \\tilde{u}_{11} = (-\\text{fl}(10^{16})) \\oslash \\text{fl}(10^{-8})$$\n    使用高精度计算器计算由 binary32 格式表示的值：\n    $\\text{fl}(10^{16}) \\approx 1.00000001335 \\times 10^{16}$\n    $\\text{fl}(10^{-8}) \\approx 9.99999996004 \\times 10^{-9}$\n    商近似为：\n    $$x_{f,1} \\approx -\\frac{1.00000001335 \\times 10^{16}}{9.99999996004 \\times 10^{-9}} \\approx -1.00000001735 \\times 10^{24}$$\n    最接近该值的单精度浮点数通过舍入得到。\n    $\\text{fl}(-1.00000001735\\times 10^{24}) \\approx -1.0000000 \\times 10^{24}$。\n    保留四位有效数字，结果是 $-1.000 \\times 10^{24}$。\n\n精确实数算术分析中预期的灾难性相消并未发生。相反，在 $b_3$ 上的初始舍入误差被传播和放大，导致在 $x_1$ 的最终计算中发生淹没，产生了一个与真实解相差几个数量级的结果。", "answer": "$$\n\\boxed{-1.000 \\times 10^{24}}\n$$", "id": "3285335"}, {"introduction": "现实世界中的问题很少能完美符合教科书中的理想模型。这个练习 [@problem_id:3285181] 将挑战你解决一个“几乎”是上三角的线性系统。你将学习如何不依赖于通用的、效率较低的求解器，而是通过巧妙地利用矩阵的特殊结构来调整回代法，这在计算科学中是一项非常宝贵的技能。", "problem": "考虑线性方程组 $A \\mathbf{x} = \\mathbf{b}$，其中 $A \\in \\mathbb{R}^{n \\times n}$ 是一个上三角矩阵，但其左下角有一个非零元素，即对于所有 $i > j$，$A_{ij} = 0$，唯一的例外是 $A_{n1} \\neq 0$。在数值方法和科学计算的背景下，请从基本原理出发，解释如何利用这种结构，通过回代法的思想来高效地求解该方程组，而不是使用像高斯消元法这样的完全通用的算法。你的解释必须从上三角系统的定义和标准回代过程开始，然后逻辑地说明这个唯一的次对角线扰动所带来的影响。\n\n然后，将你的方法应用于一个具体的 $5 \\times 5$ 系统，其中\n$$\nA =\n\\begin{pmatrix}\n3  -1  2  0  1 \\\\\n0  2  1  -1  3 \\\\\n0  0  4  -2  1 \\\\\n0  0  0  5  2 \\\\\n-3  0  0  0  6\n\\end{pmatrix},\n\\qquad\n\\mathbf{b} =\n\\begin{pmatrix}\n7 \\\\ 4 \\\\ 5 \\\\ 1 \\\\ 2\n\\end{pmatrix}.\n$$\n计算 $A \\mathbf{x} = \\mathbf{b}$ 的唯一解 $\\mathbf{x}$ 中 $x_{1}$ 的值。请给出精确值，无需四舍五入。最终答案必须是一个实数。", "solution": "该问题要求提供一种高效的方法来求解线性系统 $A \\mathbf{x} = \\mathbf{b}$，其中矩阵 $A$ 是一个上三角矩阵，但在左下角有一个非零元素 $A_{n1}$。在从基本原理阐述该方法后，我们必须应用它来求解一个具体的 $5 \\times 5$ 系统解中的分量 $x_1$。\n\n### 问题验证\n\n**第1步：提取已知条件**\n- 线性系统为 $A \\mathbf{x} = \\mathbf{b}$，其中 $A \\in \\mathbb{R}^{n \\times n}$。\n- 矩阵 $A$ 的结构为：对于所有 $i > j$，$A_{ij} = 0$，唯一的例外是 $A_{n1} \\neq 0$。\n- 任务要求提供一种基于回代法的高效求解方法，并将其应用于一个具体案例。\n- 具体矩阵为 $A = \\begin{pmatrix} 3  -1  2  0  1 \\\\ 0  2  1  -1  3 \\\\ 0  0  4  -2  1 \\\\ 0  0  0  5  2 \\\\ -3  0  0  0  6 \\end{pmatrix}$。\n- 具体向量为 $\\mathbf{b} = \\begin{pmatrix} 7 \\\\ 4 \\\\ 5 \\\\ 1 \\\\ 2 \\end{pmatrix}$。\n- 最终需要输出的是 $x_{1}$ 的值。\n\n**第2步：使用提取的已知条件进行验证**\n- **科学依据：** 该问题是数值线性代数中的一个标准课题，涉及结构化线性系统的求解。它没有任何科学或事实上的不健全之处。\n- **良定性：** 要存在唯一解，矩阵 $A$ 必须是非奇异的，即 $\\det(A) \\neq 0$。例如，通过沿第一列的代数余子式展开计算行列式，得到 $\\det(A) = 909$，该值非零。因此，存在唯一解 $\\mathbf{x}$。该问题是良定的。\n- **客观性：** 该问题使用精确的数学语言陈述，没有歧义或主观论断。\n- 该问题是自洽的、一致的，并提供了推导方法和计算所需值的所有必要信息。\n\n**第3步：结论与行动**\n该问题有效。我们开始求解。\n\n### 通用求解方法\n\n一个标准的线性系统 $U\\mathbf{x} = \\mathbf{c}$，其中 $U$ 是一个对角线元素非零的上三角矩阵，可以用回代法高效求解。算法如下：\n$$x_n = \\frac{c_n}{U_{nn}}$$\n$$x_i = \\frac{1}{U_{ii}} \\left( c_i - \\sum_{j=i+1}^n U_{ij}x_j \\right) \\quad \\text{for } i = n-1, n-2, \\dots, 1$$\n这个过程的成本是 $O(n^2)$ 次浮点运算。\n\n现在，考虑给定的系统 $A\\mathbf{x} = \\mathbf{b}$。由于元素 $A_{n1}$ 的存在，矩阵 $A$ 不是上三角矩阵。这一个元素将第一个变量 $x_1$ 与最后一个方程耦合起来，破坏了回代法的顺序性。为了高效求解，我们可以利用 $A$ 的结构，将其写成一个上三角矩阵 $U$ 和一个简单的秩-1矩阵 $S$ 的和。\n\n令 $U$ 是将矩阵 $A$ 的 $(n,1)$ 元素置为零后得到的矩阵。$U$ 的所有其他元素与 $A$ 相同。令 $S$ 是一个除了 $S_{n1} = A_{n1}$ 外所有元素都为零的矩阵。使用标准基向量 $\\mathbf{e}_i$（其中 $\\mathbf{e}_i$ 是第 $i$ 个位置为1，其他位置为0的列向量），我们可以将 $S$ 写成 $S = A_{n1} \\mathbf{e}_n \\mathbf{e}_1^T$。\n\n系统 $A\\mathbf{x} = \\mathbf{b}$ 现在可以改写为：\n$$(U + A_{n1} \\mathbf{e}_n \\mathbf{e}_1^T) \\mathbf{x} = \\mathbf{b}$$\n$$U \\mathbf{x} + A_{n1} \\mathbf{e}_n (\\mathbf{e}_1^T \\mathbf{x}) = \\mathbf{b}$$\n由于 $\\mathbf{e}_1^T \\mathbf{x} = x_1$，该方程变为：\n$$U \\mathbf{x} + (A_{n1}x_1) \\mathbf{e}_n = \\mathbf{b}$$\n整理各项，我们得到：\n$$U \\mathbf{x} = \\mathbf{b} - (A_{n1}x_1) \\mathbf{e}_n$$\n该系统的左边是上三角矩阵 $U$。右边的向量取决于未知标量 $x_1$。假设 $U$ 是可逆的（即其对角线元素非零），我们可以形式上将解写为：\n$$\\mathbf{x} = U^{-1} (\\mathbf{b} - A_{n1}x_1 \\mathbf{e}_n)$$\n根据矩阵-向量乘法的线性性质，这可以写作：\n$$\\mathbf{x} = U^{-1}\\mathbf{b} - A_{n1}x_1 (U^{-1}\\mathbf{e}_n)$$\n这个方程用两个可以通过回代法计算的向量以及尚待确定的标量 $x_1$ 来表示解向量 $\\mathbf{x}$。我们定义：\n1.  $\\mathbf{y} = U^{-1}\\mathbf{b}$，这是上三角系统 $U\\mathbf{y} = \\mathbf{b}$ 的解。\n2.  $\\mathbf{z} = U^{-1}\\mathbf{e}_n$，这是上三角系统 $U\\mathbf{z} = \\mathbf{e}_n$ 的解。\n\n我们可以通过应用回代算法来找到 $\\mathbf{y}$ 和 $\\mathbf{z}$。有了这两个向量，解 $\\mathbf{x}$ 由下式给出：\n$$\\mathbf{x} = \\mathbf{y} - A_{n1}x_1 \\mathbf{z}$$\n这是一个向量方程。为了求出未知的 $x_1$，我们可以考察这个方程的第一个分量：\n$$x_1 = y_1 - A_{n1}x_1 z_1$$\n这是一个关于单变量 $x_1$ 的线性方程。我们求解它：\n$$x_1(1 + A_{n1}z_1) = y_1$$\n$$x_1 = \\frac{y_1}{1 + A_{n1}z_1}$$\n这个公式使我们能够直接计算 $x_1$。整个算法如下：\n1.  通过将 $A_{n1}$ 设置为0，从 $A$ 构造上三角矩阵 $U$。\n2.  使用回代法求解上三角系统 $U\\mathbf{y} = \\mathbf{b}$，得到 $\\mathbf{y}$。\n3.  使用回代法求解上三角系统 $U\\mathbf{z} = \\mathbf{e}_n$，得到 $\\mathbf{z}$。\n4.  使用公式 $x_1 = \\frac{y_1}{1 + A_{n1}z_1}$ 计算 $x_1$。\n\n该方法需要两次回代（每次复杂度为 $O(n^2)$）和几次标量运算，最终形成一个利用了近似上三角结构的高效 $O(n^2)$ 算法。\n\n### 应用于具体系统\n\n给定 $5 \\times 5$ 系统，$n=5$，$A_{51} = -3$，以及\n$$\nA =\n\\begin{pmatrix}\n3  -1  2  0  1 \\\\\n0  2  1  -1  3 \\\\\n0  0  4  -2  1 \\\\\n0  0  0  5  2 \\\\\n-3  0  0  0  6\n\\end{pmatrix},\n\\qquad\n\\mathbf{b} =\n\\begin{pmatrix}\n7 \\\\ 4 \\\\ 5 \\\\ 1 \\\\ 2\n\\end{pmatrix}.\n$$\n对应的上三角矩阵 $U$ 是：\n$$\nU =\n\\begin{pmatrix}\n3  -1  2  0  1 \\\\\n0  2  1  -1  3 \\\\\n0  0  4  -2  1 \\\\\n0  0  0  5  2 \\\\\n0  0  0  0  6\n\\end{pmatrix}\n$$\n**1. 求解 $U\\mathbf{y} = \\mathbf{b}$ 中的 $\\mathbf{y}$：**\n$6y_5 = 2 \\implies y_5 = \\frac{2}{6} = \\frac{1}{3}$。\n$5y_4 + 2y_5 = 1 \\implies 5y_4 = 1 - 2(\\frac{1}{3}) = \\frac{1}{3} \\implies y_4 = \\frac{1}{15}$。\n$4y_3 - 2y_4 + y_5 = 5 \\implies 4y_3 = 5 + 2(\\frac{1}{15}) - \\frac{1}{3} = 5 + \\frac{2-5}{15} = 5 - \\frac{3}{15} = 5 - \\frac{1}{5} = \\frac{24}{5} \\implies y_3 = \\frac{6}{5}$。\n$2y_2 + y_3 - y_4 + 3y_5 = 4 \\implies 2y_2 = 4 - \\frac{6}{5} + \\frac{1}{15} - 3(\\frac{1}{3}) = 3 - \\frac{18-1}{15} = 3 - \\frac{17}{15} = \\frac{45-17}{15} = \\frac{28}{15} \\implies y_2 = \\frac{14}{15}$。\n$3y_1 - y_2 + 2y_3 + y_5 = 7 \\implies 3y_1 = 7 + \\frac{14}{15} - 2(\\frac{6}{5}) - \\frac{1}{3} = 7 + \\frac{14 - 36 - 5}{15} = 7 - \\frac{27}{15} = 7 - \\frac{9}{5} = \\frac{26}{5} \\implies y_1 = \\frac{26}{15}$。\n所以，$y_1 = \\frac{26}{15}$。\n\n**2. 求解 $U\\mathbf{z} = \\mathbf{e}_5$ 中的 $\\mathbf{z}$：**\n右端项是 $\\mathbf{e}_5 = (0, 0, 0, 0, 1)^T$。\n$6z_5 = 1 \\implies z_5 = \\frac{1}{6}$。\n$5z_4 + 2z_5 = 0 \\implies 5z_4 = -2(\\frac{1}{6}) = -\\frac{1}{3} \\implies z_4 = -\\frac{1}{15}$。\n$4z_3 - 2z_4 + z_5 = 0 \\implies 4z_3 = 2(-\\frac{1}{15}) - \\frac{1}{6} = -\\frac{2}{15} - \\frac{1}{6} = \\frac{-4-5}{30} = -\\frac{9}{30} = -\\frac{3}{10} \\implies z_3 = -\\frac{3}{40}$。\n$2z_2 + z_3 - z_4 + 3z_5 = 0 \\implies 2z_2 = -z_3 + z_4 - 3z_5 = -(-\\frac{3}{40}) + (-\\frac{1}{15}) - 3(\\frac{1}{6}) = \\frac{3}{40} - \\frac{1}{15} - \\frac{1}{2} = \\frac{9-8-60}{120} = -\\frac{59}{120} \\implies z_2 = -\\frac{59}{240}$。\n$3z_1 - z_2 + 2z_3 + z_5 = 0 \\implies 3z_1 = z_2 - 2z_3 - z_5 = (-\\frac{59}{240}) - 2(-\\frac{3}{40}) - \\frac{1}{6} = -\\frac{59}{240} + \\frac{36}{240} - \\frac{40}{240} = \\frac{-59+36-40}{240} = -\\frac{63}{240} = -\\frac{21}{80} \\implies z_1 = -\\frac{7}{80}$。\n\n**3. 计算 $x_1$：**\n我们有 $A_{51} = -3$，$y_1 = \\frac{26}{15}$，以及 $z_1 = -\\frac{7}{80}$。\n将这些值代入推导出的公式：\n$$x_1 = \\frac{y_1}{1 + A_{51}z_1} = \\frac{\\frac{26}{15}}{1 + (-3)(-\\frac{7}{80})} = \\frac{\\frac{26}{15}}{1 + \\frac{21}{80}}$$\n$$x_1 = \\frac{\\frac{26}{15}}{\\frac{80+21}{80}} = \\frac{\\frac{26}{15}}{\\frac{101}{80}} = \\frac{26}{15} \\times \\frac{80}{101}$$\n$$x_1 = \\frac{26}{3 \\times 5} \\times \\frac{16 \\times 5}{101} = \\frac{26 \\times 16}{3 \\times 101} = \\frac{416}{303}$$\n唯一解中 $x_1$ 的值为 $\\frac{416}{303}$。", "answer": "$$\\boxed{\\frac{416}{303}}$$", "id": "3285181"}]}