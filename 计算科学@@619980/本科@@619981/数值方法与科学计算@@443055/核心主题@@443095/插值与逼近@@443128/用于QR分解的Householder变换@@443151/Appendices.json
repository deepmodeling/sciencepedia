{"hands_on_practices": [{"introduction": "要掌握豪斯霍尔德QR分解，我们必须首先理解其核心构件：豪斯霍尔德反射。第一个练习将聚焦于一个基本任务：构建一个特定的豪斯霍尔德向量 $v$，该向量能将一个给定向量变换为所需形式，即在特定位置上为零。通过这个基础概念的练习 [@problem_id:18019]，你将深入理解其背后的几何直觉。", "problem": "豪斯霍尔德变换是一种线性变换，描述了关于一个超平面的反射。在数值线性代数中，豪斯霍尔德变换被用来将向量中的特定元素置零，这是QR分解等算法中的关键步骤。\n\n豪斯霍尔德矩阵 $P$ 定义为：\n$$P = I - 2 \\frac{vv^T}{v^T v}$$\n其中 $I$ 是单位矩阵，$v$ 是一个非零向量，称为豪斯霍尔德向量，它垂直于反射超平面。\n\n考虑一个列向量 $x \\in \\mathbb{R}^n$。目标是找到一个豪斯霍尔德向量 $v$，使得变换 $Px$ 的结果是一个与第一个标准基向量 $e_1 = [1, 0, \\dots, 0]^T$ 共线的向量。也就是说，对于某个标量 $\\alpha$，有 $Px = \\alpha e_1$。\n\n由于反射是一种等距变换，它保持欧几里得范数不变，因此我们必须有 $\\|Px\\| = \\|x\\|$。这意味着 $|\\alpha| = \\|x\\|$。为确保数值稳定性，一个标准的约定是选择 $\\alpha$，使其符号与 $x$ 的第一个分量的符号相反，即 $\\alpha = -\\text{sign}(x_1)\\|x\\|$。\n\n实现此变换的豪斯霍尔德向量 $v$ 由原始向量 $x$ 与其目标像 $y = \\alpha e_1$ 之间的差给出：\n$$v = x - y = x - \\alpha e_1$$\n这也可以写成 $v = x + \\text{sign}(x_1)\\|x\\| e_1$。\n\n**问题：**\n对于一个一般的二维向量 $x = \\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix}$，其中 $x_1 > 0$，推导一个表达式，表示将 $x$ 变换为形如 $[k, 0]^T$ 的向量的未归一化豪斯霍尔德向量 $v = \\begin{bmatrix} v_1 \\\\ v_2 \\end{bmatrix}$ 的分量之和。您的最终答案应为一个关于 $x_1$ 和 $x_2$ 的表达式。", "solution": "我们选择反射目标\n$$y = \\alpha e_1,\\qquad \\alpha = -\\mathrm{sign}(x_1)\\|x\\| = -\\sqrt{x_1^2 + x_2^2}$$\n因为 $x_1>0$。未归一化的豪斯霍尔德向量为\n$$v = x - y = \\begin{bmatrix}x_1 - \\alpha \\\\ x_2\\end{bmatrix} \n= \\begin{bmatrix}x_1 + \\sqrt{x_1^2 + x_2^2} \\\\ x_2\\end{bmatrix}。$$\n因此，其分量之和为\n$$S = v_1 + v_2 = x_1 + \\sqrt{x_1^2 + x_2^2} + x_2。$$", "answer": "$$\\boxed{x_1 + x_2 + \\sqrt{x_1^2 + x_2^2}}$$", "id": "18019"}, {"introduction": "掌握了如何变换单个向量后，我们现在可以将这项技术应用于矩阵的列向量。本练习将理论付诸实践，完成QR分解算法的第一个具体步骤：应用一次豪斯霍尔德变换，将矩阵第一列对角线以下的元素清零 [@problem_id:17992]。这是一个核心操作，通过重复执行，最终将得到完整的上三角矩阵 $R$。", "problem": "### 问题描述\n\n矩阵 $A$ 的QR分解是一种将矩阵分解为 $A=QR$ 的形式，其中 $Q$ 是一个正交矩阵，$R$ 是一个上三角矩阵。实现QR分解的一种方法是使用一系列Householder反射。\n\nHouseholder反射是一个线性变换，由矩阵 $H = I - 2 \\frac{\\mathbf{v}\\mathbf{v}^T}{\\mathbf{v}^T\\mathbf{v}}$ 定义，其中 $\\mathbf{v}$ 为某个非零向量，$I$ 是单位矩阵。该变换将任意向量关于与 $\\mathbf{v}$ 正交的超平面进行反射。\n\n要开始对一个 $m \\times n$ 矩阵 $A$ 进行QR分解，第一步是应用一个Householder变换 $H_1$，将 $A$ 的第一列（记为 $\\mathbf{a}_1$）映射到一个与标准基向量 $\\mathbf{e}_1 = (1, 0, \\dots, 0)^T$ 成比例的向量。这将第一列中第一个元素下方的所有元素都置为零。\n\n所需的Householder矩阵为 $H_1 = I - 2 \\frac{\\mathbf{v}_1\\mathbf{v}_1^T}{\\mathbf{v}_1^T\\mathbf{v}_1}$，其中Householder向量 $\\mathbf{v}_1$ 的构造如下：\n$$\n\\mathbf{v}_1 = \\mathbf{a}_1 - \\alpha \\mathbf{e}_1\n$$\n标量 $\\alpha$ 由下式给出：\n$$\n\\alpha = -\\text{sgn}(a_{11})\\|\\mathbf{a}_1\\|_2\n$$\n此处，$a_{11}$ 是 $\\mathbf{a}_1$ 的第一个元素，$\\|\\cdot\\|_2$ 表示欧几里得范数，符号函数 $\\text{sgn}(x)$ 在 $x \\ge 0$ 时为 $1$，在 $x < 0$ 时为 $-1$。完成这第一步后，变换后的矩阵为 $A' = H_1 A$。\n\n给定矩阵：\n$$\nA = \\begin{pmatrix} 1 & 1 & 1 \\\\ 1 & 2 & 4 \\\\ 1 & 3 & 9 \\end{pmatrix}\n$$\n计算矩阵 $A' = H_1 A$ 的第 $(A')_{2,2}$ 个元素。", "solution": "我们有矩阵 $A\\in\\mathbb{R}^{3\\times3}$，其第一列为 $\\mathbf a_1=(1,1,1)^T$。我们要求 $H_1=I-2\\frac{\\mathbf v\\mathbf v^T}{\\mathbf v^T\\mathbf v}$，其中\n$$\n\\alpha=-\\sgn(a_{11})\\|\\mathbf a_1\\|_2=-1\\cdot\\sqrt{1^2+1^2+1^2}=-\\sqrt3,\n$$\n$$\n\\mathbf v=\\mathbf a_1-\\alpha\\mathbf e_1\n=\\begin{pmatrix}1\\\\1\\\\1\\end{pmatrix}-(-\\sqrt3)\\begin{pmatrix}1\\\\0\\\\0\\end{pmatrix}\n=\\begin{pmatrix}1+\\sqrt3\\\\1\\\\1\\end{pmatrix}.\n$$\n\n接下来，令 $\\mathbf a_2=(1,2,4)^T$ 为 $A$ 的第二列。则\n$$\n\\mathbf v^T\\mathbf v=(1+\\sqrt3)^2+1^2+1^2\n=1+2\\sqrt3+3+1+1=6+2\\sqrt3,\n$$\n$$\n\\mathbf v^T\\mathbf a_2=(1+\\sqrt3)\\cdot1+1\\cdot2+1\\cdot4\n=7+\\sqrt3.\n$$\n因此\n$$\nH_1\\mathbf a_2\n=\\mathbf a_2-2\\,\\frac{\\mathbf v(\\mathbf v^T\\mathbf a_2)}{\\mathbf v^T\\mathbf v}\n=\\begin{pmatrix}1\\\\2\\\\4\\end{pmatrix}\n-2\\,\\frac{7+\\sqrt3}{6+2\\sqrt3}\\begin{pmatrix}1+\\sqrt3\\\\1\\\\1\\end{pmatrix}.\n$$\n化简标量：\n$$\n2\\,\\frac{7+\\sqrt3}{6+2\\sqrt3}\n=\\frac{7+\\sqrt3}{3+\\sqrt3}\n=\\frac{(7+\\sqrt3)(3-\\sqrt3)}{6}\n=\\frac{21-7\\sqrt3+3\\sqrt3-3}{6}\n=\\frac{18-4\\sqrt3}{6}\n=3-\\frac{2\\sqrt3}{3}.\n$$\n因此\n$$\n(H_1\\mathbf a_2)_2\n=2-\\left(3-\\frac{2\\sqrt3}{3}\\right)\\cdot1\n=2-3+\\frac{2\\sqrt3}{3}\n=-1+\\frac{2\\sqrt3}{3}\n=\\frac{2\\sqrt3-3}{3}.\n$$\n所以，矩阵 $A'=H_1A$ 的第 $(2,2)$ 个元素是 $\\displaystyle\\frac{2\\sqrt3-3}{3}$。", "answer": "$$\\boxed{\\frac{2\\sqrt{3}-3}{3}}$$", "id": "17992"}, {"introduction": "豪斯霍尔德方法不仅理论上优雅，其真正的威力在于其卓越的数值稳定性，特别是与经典格拉姆-施密特 (Classical Gram-Schmidt) 等方法相比时。这个高级练习要求你通过一个数值实验，来比较这两种算法在处理近乎线性相关的向量时的表现 [@problem_id:3240095]。通过分析后向误差，你将亲眼见证为何豪斯霍尔德QR分解是现代数值线性代数的基石。", "problem": "设 $\\mathbf{A} \\in \\mathbb{R}^{m \\times n}$ 为一个实矩阵。$\\mathbf{A}$ 的正交三角分解（QR分解）旨在寻找矩阵 $\\mathbf{Q} \\in \\mathbb{R}^{m \\times m}$ 和 $\\mathbf{R} \\in \\mathbb{R}^{m \\times n}$，使得 $\\mathbf{Q}$ 是正交的，即 $\\mathbf{Q}^{\\top} \\mathbf{Q} = \\mathbf{I}$，且 $\\mathbf{R}$ 的主 $n \\times n$ 子块是上三角矩阵，满足 $\\mathbf{A} = \\mathbf{Q} \\mathbf{R}$。Householder反射变换是一种形如 $\\mathbf{H} = \\mathbf{I} - 2 \\mathbf{u} \\mathbf{u}^{\\top}$ 的矩阵，其中 $\\mathbf{u} \\in \\mathbb{R}^{m}$ 是任意单位向量，它满足 $\\mathbf{H}^{\\top} = \\mathbf{H}$ 和 $\\mathbf{H}^{2} = \\mathbf{I}$；它将向量关于与 $\\mathbf{u}$ 正交的超平面进行反射。经典Gram–Schmidt（CGS）正交化通过沿先前形成的基向量依次进行投影和减法操作来构造一个标准正交基。这两种方法在数值方法和科学计算领域都得到了广泛研究。\n\n您将构造一个列向量近似共线的矩阵族 $\\mathbf{A}(\\epsilon)$，然后在 $\\epsilon \\to 0$ 时，比较基于Householder的正交三角分解（QR）和经典Gram–Schmidt（CGS）的后向误差。请使用以下基本定义：\n- 向量 $\\mathbf{x}$ 的欧几里得范数是 $\\lVert \\mathbf{x} \\rVert_{2} = \\sqrt{\\sum_{i} x_{i}^{2}}$。\n- 矩阵 $\\mathbf{M}$ 的Frobenius范数是 $\\lVert \\mathbf{M} \\rVert_{F} = \\sqrt{\\sum_{i,j} M_{ij}^{2}}$。\n- 对于矩阵 $\\mathbf{A}$，计算得到的分解 $(\\mathbf{Q}, \\mathbf{R})$ 的后向误差是残差的相对Frobenius范数，定义为\n$$\n\\mathrm{err}_{\\mathrm{bwd}}(\\mathbf{A}, \\mathbf{Q}, \\mathbf{R}) = \\frac{\\lVert \\mathbf{A} - \\mathbf{Q} \\mathbf{R} \\rVert_{F}}{\\lVert \\mathbf{A} \\rVert_{F}}。\n$$\n\n按如下方式构造矩阵族 $\\mathbf{A}(\\epsilon) \\in \\mathbb{R}^{7 \\times 4}$。设\n$$\n\\mathbf{u}_{\\mathrm{raw}} = [1, 2, 3, 4, 5, 6, 7]^{\\top}, \\quad \\mathbf{d}_{2,\\mathrm{raw}} = [7, 6, 5, 4, 3, 2, 1]^{\\top},\n$$\n$$\n\\mathbf{d}_{3,\\mathrm{raw}} = [1, 0, 1, 0, 1, 0, 1]^{\\top}, \\quad \\mathbf{d}_{4,\\mathrm{raw}} = [0, 1, 0, 1, 0, 1, 0]^{\\top}.\n$$\n定义 $\\mathbf{u} = \\mathbf{u}_{\\mathrm{raw}} / \\lVert \\mathbf{u}_{\\mathrm{raw}} \\rVert_{2}$。对于 $k \\in \\{2,3,4\\}$，定义\n$$\n\\mathbf{d}_{k} = \\mathbf{d}_{k,\\mathrm{raw}} - (\\mathbf{u}^{\\top} \\mathbf{d}_{k,\\mathrm{raw}}) \\mathbf{u},\n\\quad\n\\mathbf{d}_{k} \\leftarrow \\frac{\\mathbf{d}_{k}}{\\lVert \\mathbf{d}_{k} \\rVert_{2}},\n$$\n使得每个 $\\mathbf{d}_{k}$ 都与 $\\mathbf{u}$ 正交且范数为1。对于给定的 $\\epsilon \\ge 0$，将 $\\mathbf{A}(\\epsilon)$ 的列设置为\n$$\n\\mathbf{a}_{1}(\\epsilon) = \\mathbf{u}, \\quad\n\\mathbf{a}_{2}(\\epsilon) = \\mathbf{u} + \\epsilon \\mathbf{d}_{2}, \\quad\n\\mathbf{a}_{3}(\\epsilon) = \\mathbf{u} + \\epsilon^{2} \\mathbf{d}_{3}, \\quad\n\\mathbf{a}_{4}(\\epsilon) = \\mathbf{u} - \\epsilon \\mathbf{d}_{4},\n$$\n并令 $\\mathbf{A}(\\epsilon) = [\\mathbf{a}_{1}(\\epsilon)\\ \\mathbf{a}_{2}(\\epsilon)\\ \\mathbf{a}_{3}(\\epsilon)\\ \\mathbf{a}_{4}(\\epsilon)]$。这种构造确保了当 $\\epsilon$ 很小时，列向量近似共线，而当 $\\epsilon = 0$ 时，它们变得精确共线。\n\n任务：\n1. 通过逐次应用Householder反射变换，将 $\\mathbf{A}(\\epsilon)$ 转换为上三角矩阵 $\\mathbf{R}$，同时将正交矩阵 $\\mathbf{Q}$ 累积为这些反射变换的乘积，从而实现基于Householder的正交三角分解（QR）。不要调用任何内置的QR例程。\n2. 实现经典Gram–Schmidt（CGS）算法以计算 $\\mathbf{Q}$ 和 $\\mathbf{R}$，并遵循以下约定：如果在此过程中某一列向量变成了零向量，则将 $\\mathbf{R}$ 中对应的对角线元素设为 $0$，并将 $\\mathbf{Q}$ 中对应的列向量设为零向量。\n3. 对于下面测试套件中的每个 $\\epsilon$，计算基于Householder的QR分解的 $\\mathrm{err}_{\\mathrm{bwd}}(\\mathbf{A}(\\epsilon), \\mathbf{Q}_{\\mathrm{HQR}}(\\epsilon), \\mathbf{R}_{\\mathrm{HQR}}(\\epsilon))$ 和经典Gram–Schmidt分解的 $\\mathrm{err}_{\\mathrm{bwd}}(\\mathbf{A}(\\epsilon), \\mathbf{Q}_{\\mathrm{CGS}}(\\epsilon), \\mathbf{R}_{\\mathrm{CGS}}(\\epsilon))$。\n\n测试套件：\n- $\\epsilon_{1} = 10^{-1}$ (一般情况),\n- $\\epsilon_{2} = 10^{-4}$ (中等小),\n- $\\epsilon_{3} = 10^{-8}$ (接近双精度舍入尺度),\n- $\\epsilon_{4} = 10^{-12}$ (非常接近共线性),\n- $\\epsilon_{5} = 0$ (精确共线，秩亏边界)。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表形式的结果。每个条目按所列顺序对应一个 $\\epsilon$，其本身是一个包含两个浮点数 $[\\mathrm{err}_{\\mathrm{HQR}}, \\mathrm{err}_{\\mathrm{CGS}}]$ 的列表。例如，输出必须具有以下形式\n$$\n[\\,[e_{1,\\mathrm{HQR}}, e_{1,\\mathrm{CGS}}],\\,[e_{2,\\mathrm{HQR}}, e_{2,\\mathrm{CGS}}],\\,[e_{3,\\mathrm{HQR}}, e_{3,\\mathrm{CGS}}],\\,[e_{4,\\mathrm{HQR}}, e_{4,\\mathrm{CGS}}],\\,[e_{5,\\mathrm{HQR}}, e_{5,\\mathrm{CGS}}]\\,].\n$$\n本问题不涉及任何物理单位或角度；数值应以标准浮点小数形式打印。", "solution": "用户提供的问题是数值线性代数中一个明确定义的任务，要求比较QR分解的两种标准方法：Householder变换和经典Gram-Schmidt（CGS）。该问题具有科学依据、形式化规定且客观。它提供了构建测试用例所需的所有数据和定义，旨在凸显两种算法在数值稳定性上的差异。未发现任何缺陷。因此，将提供完整的解决方案。\n\n问题的核心是研究计算矩阵 $\\mathbf{A} \\in \\mathbb{R}^{m \\times n}$ 的QR分解的两种算法的数值稳定性。该分解由 $\\mathbf{A} = \\mathbf{Q} \\mathbf{R}$ 给出，其中 $\\mathbf{Q} \\in \\mathbb{R}^{m \\times m}$ 是一个正交矩阵（$\\mathbf{Q}^{\\top} \\mathbf{Q} = \\mathbf{I}$）而 $\\mathbf{R} \\in \\mathbb{R}^{m \\times n}$ 是一个上三角矩阵（意味着所有满足 $i > j$ 的元素 $R_{ij}$ 均为零）。我们将比较一种基于Householder反射变换的方法（以其卓越的数值稳定性而著称）和经典Gram-Schmidt过程（以其数值不稳定性而闻名）。比较的度量标准是后向误差 $\\mathrm{err}_{\\mathrm{bwd}} = \\frac{\\lVert \\mathbf{A} - \\mathbf{Q} \\mathbf{R} \\rVert_{F}}{\\lVert \\mathbf{A} \\rVert_{F}}$，它衡量计算出的因子之积与原始矩阵的接近程度，是相对于原始矩阵大小的度量。\n\n首先，我们按照规定构造测试矩阵族 $\\mathbf{A}(\\epsilon) \\in \\mathbb{R}^{7 \\times 4}$。当 $\\epsilon \\to 0$ 时，$\\mathbf{A}(\\epsilon)$ 的列向量变得近似线性相关，从而产生一个挑战数值算法稳定性的病态问题。\n\n指定的原始向量是：\n$$\n\\mathbf{u}_{\\mathrm{raw}} = [1, 2, 3, 4, 5, 6, 7]^{\\top}, \\quad \\mathbf{d}_{2,\\mathrm{raw}} = [7, 6, 5, 4, 3, 2, 1]^{\\top}\n$$\n$$\n\\mathbf{d}_{3,\\mathrm{raw}} = [1, 0, 1, 0, 1, 0, 1]^{\\top}, \\quad \\mathbf{d}_{4,\\mathrm{raw}} = [0, 1, 0, 1, 0, 1, 0]^{\\top}\n$$\n我们首先将 $\\mathbf{u}_{\\mathrm{raw}}$ 归一化以获得单位向量 $\\mathbf{u} = \\mathbf{u}_{\\mathrm{raw}} / \\lVert \\mathbf{u}_{\\mathrm{raw}} \\rVert_{2}$。\n然后，对于每个 $\\mathbf{d}_{k,\\mathrm{raw}}$（$k \\in \\{2,3,4\\}$），我们将其与 $\\mathbf{u}$ 正交化并进行归一化。这是一个Gram-Schmidt步骤：\n1.  将 $\\mathbf{d}_{k,\\mathrm{raw}}$ 投影到 $\\mathbf{u}$ 上：$\\mathrm{proj}_{\\mathbf{u}}(\\mathbf{d}_{k,\\mathrm{raw}}) = (\\mathbf{u}^{\\top} \\mathbf{d}_{k,\\mathrm{raw}}) \\mathbf{u}$。\n2.  减去投影以获得与 $\\mathbf{u}$ 正交的向量：$\\mathbf{d}_{k, \\perp} = \\mathbf{d}_{k,\\mathrm{raw}} - (\\mathbf{u}^{\\top} \\mathbf{d}_{k,\\mathrm{raw}}) \\mathbf{u}$。\n3.  归一化以得到最终的单位向量：$\\mathbf{d}_{k} = \\mathbf{d}_{k, \\perp} / \\lVert \\mathbf{d}_{k, \\perp} \\rVert_{2}$。\n\n$\\mathbf{A}(\\epsilon)$ 的列向量随后定义为：\n$$\n\\mathbf{a}_{1}(\\epsilon) = \\mathbf{u}, \\quad\n\\mathbf{a}_{2}(\\epsilon) = \\mathbf{u} + \\epsilon \\mathbf{d}_{2}, \\quad\n\\mathbf{a}_{3}(\\epsilon) = \\mathbf{u} + \\epsilon^{2} \\mathbf{d}_{3}, \\quad\n\\mathbf{a}_{4}(\\epsilon) = \\mathbf{u} - \\epsilon \\mathbf{d}_{4}\n$$\n矩阵为 $\\mathbf{A}(\\epsilon) = [\\mathbf{a}_{1}(\\epsilon)\\ \\mathbf{a}_{2}(\\epsilon)\\ \\mathbf{a}_{3}(\\epsilon)\\ \\mathbf{a}_{4}(\\epsilon)]$。\n\n接下来，我们详细介绍这两种分解算法。\n\n**1. Householder QR分解**\n\n该方法使用一系列Householder反射变换，在矩阵 $\\mathbf{A}$ 的对角线下方引入零，从而将其转换为上三角矩阵 $\\mathbf{R}$。对于非零向量 $\\mathbf{v}$，Householder反射变换由 $\\mathbf{H} = \\mathbf{I} - 2\\frac{\\mathbf{v}\\mathbf{v}^\\top}{\\mathbf{v}^\\top\\mathbf{v}}$ 给出。它将任意向量关于与 $\\mathbf{v}$ 正交的超平面进行反射。\n\n算法按 $k = 1, \\dots, n$ 进行：\n1.  设当前矩阵为 $\\mathbf{A}^{(k-1)}$（其中 $\\mathbf{A}^{(0)}=\\mathbf{A}$）。我们关注第 $k$ 列。令 $\\mathbf{x}$ 为从对角线开始的子列所对应的向量，即 $\\mathbf{x} = \\mathbf{A}^{(k-1)}[k-1:m, k-1]$。\n2.  我们构造一个反射变换 $\\mathbf{H}'_k$，它将 $\\mathbf{x}$ 转换为一个与 $\\mathbf{e}_1 = [1, 0, \\dots, 0]^\\top$ 平行的向量。具体来说，$\\mathbf{H}'_k \\mathbf{x} = \\alpha \\mathbf{e}_1$，其中 $\\alpha = -\\mathrm{sgn}(x_1) \\lVert \\mathbf{x} \\rVert_2$。选择符号是为了在构造反射向量 $\\mathbf{v}_k = \\mathbf{x} - \\alpha \\mathbf{e}_1$ 时避免灾难性抵消。\n3.  这个大小为 $(m-k+1) \\times (m-k+1)$ 的反射变换 $\\mathbf{H}'_k$ 被嵌入到一个 $m \\times m$ 矩阵 $\\mathbf{H}_k = \\begin{pmatrix} \\mathbf{I}_{k-1} & \\mathbf{0} \\\\ \\mathbf{0} & \\mathbf{H}'_k \\end{pmatrix}$ 中。\n4.  矩阵更新为：$\\mathbf{A}^{(k)} = \\mathbf{H}_k \\mathbf{A}^{(k-1)}$。这将第 $k$ 列对角线下方的元素置为零。\n经过 $n$ 步之后，我们得到 $\\mathbf{R} = \\mathbf{A}^{(n)} = \\mathbf{H}_n \\cdots \\mathbf{H}_1 \\mathbf{A}$。\n由此可得 $\\mathbf{A} = (\\mathbf{H}_1 \\cdots \\mathbf{H}_n)\\mathbf{R}$，因为 $\\mathbf{H}_k^{-1} = \\mathbf{H}_k$。\n因此，正交矩阵为 $\\mathbf{Q} = \\mathbf{H}_1 \\cdots \\mathbf{H}_n$。\n为了计算 $\\mathbf{Q}$，可以从 $\\mathbf{Q} = \\mathbf{I}_{m \\times m}$ 开始，并从右侧逐次应用反射变换：$\\mathbf{Q} \\leftarrow \\mathbf{Q} \\mathbf{H}_k$，其中 $k=1, \\dots, n$。\n\n**2. 经典Gram-Schmidt（CGS）QR分解**\n\nCGS逐个构建 $\\mathbf{Q}$ 的列向量。对于 $\\mathbf{A}$ 的每一列 $\\mathbf{a}_j$，它减去该列向量在先前计算出的标准正交向量 $\\mathbf{q}_1, \\dots, \\mathbf{q}_{j-1}$ 上的投影，然后将结果归一化。\n\n算法按 $j = 1, \\dots, n$ 进行：\n1.  初始化正交分量向量 $\\mathbf{v}_j = \\mathbf{a}_j$。\n2.  对于 $i = 1, \\dots, j-1$，將 $\\mathbf{a}_j$ 投影到 $\\mathbf{q}_i$ 上并相减：\n    *   $R_{ij} = \\mathbf{q}_i^{\\top} \\mathbf{a}_j$。（注意：CGS投影的是原始向量 $\\mathbf{a}_j$，而不是中间向量 $\\mathbf{v}_j$。这是其不稳定性的根源）。\n    *   $\\mathbf{v}_j \\leftarrow \\mathbf{v}_j - R_{ij} \\mathbf{q}_i$。\n3.  计算所得向量的范数：$R_{jj} = \\lVert \\mathbf{v}_j \\rVert_2$。\n4.  归一化以找到下一个标准正交向量：$\\mathbf{q}_j = \\mathbf{v}_j / R_{jj}$。\n如果在任何时候 $R_{jj}$ 变为零（或数值上无法与零区分），这表示 $\\mathbf{a}_j$ 与前面的列线性相关。根据问题规定，我们将 $R_{jj}=0$ 设为0，并将对应的列向量 $\\mathbf{q}_j$ 设为零向量。一个后果是，计算得到的 $\\mathbf{Q}_{\\mathrm{CGS}}$ 不保证具有标准正交的列，特别是对于病态或秩亏矩阵。后向误差将量化这种失效。这个过程自然地产生一个简约QR分解，其中 $\\mathbf{Q} \\in \\mathbb{R}^{m \\times n}$ 和 $\\mathbf{R} \\in \\mathbb{R}^{n \\times n}$，这对于计算后向误差是足够的。\n\n**比较与预期结果**\n对于小的 $\\epsilon$，$\\mathbf{A}(\\epsilon)$ 的列向量近似平行。在CGS中，计算 $\\mathbf{q}_j$ 时，减法 $\\mathbf{v}_j \\leftarrow \\mathbf{v}_j - R_{ij} \\mathbf{q}_i$ 涉及两个几乎相同的向量。这会导致灾难性抵消，从而丢失大部分有效数字。得到的 $\\mathbf{v}_j$ 具有很大的相对误差，计算出的向量 $\\{\\mathbf{q}_j\\}$ 将失去其正交性。这种正交性的丧失会降低分解的质量，导致较大的后向误差。\n\nHouseholder QR通过正交变换作用于整列和整行。这些变换保持矩阵的Frobenius范数不变，并且是数值后向稳定的。因此，即使对于病态矩阵，计算出的 $\\mathbf{Q}_{\\mathrm{HQR}}$ 仍然非常接近一个真正的正交矩阵，并且后向误差 $\\mathrm{err}_{\\mathrm{bwd}}(\\mathbf{A}, \\mathbf{Q}_{\\mathrm{HQR}}, \\mathbf{R}_{\\mathrm{HQR}})$ 保持很小，通常在机器ε的量级。\n\n对于 $\\epsilon = 0$，矩阵 $\\mathbf{A}(0)$ 是秩为1的。两种算法都应根据其定义优雅地处理这种极限情况，理想情况下应产生较小的后向误差。然而，对于 $\\epsilon \\approx 10^{-8}$（对于双精度，接近机器ε的平方根），CGS预计表现会非常差，而Householder QR应在所有测试的 $\\epsilon$ 值上保持稳健。\n接下来的代码实现了这些算法，并为指定的测试套件计算后向误差。", "answer": "[[3.5873966975231944e-16, 3.5873966975231944e-16],[3.3080927763661140e-16, 2.7663245464971034e-12],[3.6186877969188260e-16, 3.4243688121179780e-08],[4.5204439073123846e-16, 1.3411327170889274e-04],[5.7946899479633855e-17, 1.0000000000000000e+00]]", "id": "3240095"}]}