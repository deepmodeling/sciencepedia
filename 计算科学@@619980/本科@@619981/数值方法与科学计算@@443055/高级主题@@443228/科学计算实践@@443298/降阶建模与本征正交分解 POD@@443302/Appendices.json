{"hands_on_practices": [{"introduction": "在深入研究数值计算之前，通过一个可以解析求解的例子来建立直观理解是非常有益的。本练习将指导你为一个简单的时空场 $u(x,t)$ 推导其解析POD模态，揭示POD如何从混合信号中分离出基本的空间结构和时间动态。这个过程将数据矩阵的奇异值分解（SVD）与一个积分算子 $R(x,x')$ 的本征函数理论联系起来，为你提供关于POD工作原理的根本性见解。[@problem_id:3266047]", "problem": "考虑在空间域 $x \\in [0,1]$ 和时间域 $t \\in \\mathbb{R}$ 上定义的时空场 $u(x,t)$\n$$\nu(x,t) = \\sin(2\\pi x)\\,\\cos(\\omega_{1} t) + \\sin(3\\pi x)\\,\\cos(\\omega_{2} t),\n$$\n其中 $\\omega_{1} \\neq \\omega_{2}$ 是固定的正常数。使用本征正交分解 (Proper Orthogonal Decomposition, POD) 的定义，其中空间模态是时间平均两点相关算符的本征函数\n$$\nR(x,x') = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} u(x,t)\\,u(x',t)\\,\\mathrm{d}t,\n$$\n推导与 $u(x,t)$ 相关的解析空间 POD 模态 $\\{\\phi_{k}(x)\\}$。假设空间内积是 $[0,1]$ 上的标准 $L^{2}$ 内积，\n$$\n\\langle f, g \\rangle = \\int_{0}^{1} f(x)\\,g(x)\\,\\mathrm{d}x,\n$$\n并对每个模态强制执行 POD 归一化条件 $\\int_{0}^{1} \\phi_{k}(x)^{2}\\,\\mathrm{d}x = 1$。按能量降序给出两个非平凡的空间 POD 模态，并以包含两个模态的单一解析表达式形式提供最终答案。无需四舍五入。", "solution": "首先确定问题陈述的有效性。\n\n**1. 提取已知条件：**\n- 时空场由 $u(x,t) = \\sin(2\\pi x)\\,\\cos(\\omega_{1} t) + \\sin(3\\pi x)\\,\\cos(\\omega_{2} t)$ 给出。\n- 空间域为 $x \\in [0,1]$；时间域为 $t \\in \\mathbb{R}$。\n- 常数 $\\omega_{1}$ 和 $\\omega_{2}$ 为正且不相等，$\\omega_{1} \\neq \\omega_{2}$。\n- 两点相关算符定义为 $R(x,x') = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} u(x,t)\\,u(x',t)\\,\\mathrm{d}t$。\n- 空间本征正交分解 (POD) 模态 $\\{\\phi_{k}(x)\\}$ 是算符 $R(x,x')$ 的本征函数。\n- 空间内积是 $[0,1]$ 上的 $L^{2}$ 内积：$\\langle f, g \\rangle = \\int_{0}^{1} f(x)\\,g(x)\\,\\mathrm{d}x$。\n- POD 模态是归一化的：$\\langle \\phi_k, \\phi_k \\rangle = \\int_{0}^{1} \\phi_{k}(x)^{2}\\,\\mathrm{d}x = 1$。\n\n**2. 有效性验证：**\n- **科学依据：** 该问题是本征正交分解的标准应用，这是科学计算和数据分析中的一项基本技术。所有数学构造都有明确定义。\n- **适定性：** 问题指定了一个场和一种寻找其 POD 模态的程序。由此产生的积分算符的特征值问题是适定的。条件 $\\omega_1 \\neq \\omega_2$ 是至关重要的且定义明确。\n- **客观性：** 问题以精确、客观的数学语言陈述。\n- **完备性与一致性：** 提供了所有必要信息，且没有内部矛盾。\n\n**结论：** 问题有效，可以按陈述求解。\n\n**求解推导：**\n\n第一步是计算时间平均两点相关算符 $R(x,x')$。我们将 $u(x,t)$ 的表达式代入其定义中：\n$$\nR(x,x') = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\left( \\sin(2\\pi x)\\cos(\\omega_{1} t) + \\sin(3\\pi x)\\cos(\\omega_{2} t) \\right) \\left( \\sin(2\\pi x')\\cos(\\omega_{1} t) + \\sin(3\\pi x')\\cos(\\omega_{2} t) \\right) \\mathrm{d}t.\n$$\n展开积分内的乘积得到四项。我们可以将空间部分和时间部分分开：\n\\begin{align*}\nR(x,x') = \\sin(2\\pi x)\\sin(2\\pi x') \\left( \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos^2(\\omega_{1} t) \\mathrm{d}t \\right) \\\\\n+ \\sin(3\\pi x)\\sin(3\\pi x') \\left( \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos^2(\\omega_{2} t) \\mathrm{d}t \\right) \\\\\n+ \\sin(2\\pi x)\\sin(3\\pi x') \\left( \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos(\\omega_{1} t)\\cos(\\omega_{2} t) \\mathrm{d}t \\right) \\\\\n+ \\sin(3\\pi x)\\sin(2\\pi x') \\left( \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos(\\omega_{1} t)\\cos(\\omega_{2} t) \\mathrm{d}t \\right).\n\\end{align*}\n我们计算时间平均积分。对于任意 $\\omega > 0$：\n$$\n\\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos^2(\\omega t) \\mathrm{d}t = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\frac{1 + \\cos(2\\omega t)}{2} \\mathrm{d}t = \\lim_{T \\to \\infty} \\frac{1}{T} \\left[ \\frac{t}{2} + \\frac{\\sin(2\\omega t)}{4\\omega} \\right]_{0}^{T} = \\frac{1}{2}.\n$$\n对于交叉项，由于 $\\omega_{1} \\neq \\omega_{2}$，我们使用积化和差恒等式 $\\cos(A)\\cos(B) = \\frac{1}{2}(\\cos(A-B) + \\cos(A+B))$：\n$$\n\\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos(\\omega_{1} t)\\cos(\\omega_{2} t) \\mathrm{d}t = \\frac{1}{2} \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\left( \\cos((\\omega_{1}-\\omega_{2})t) + \\cos((\\omega_{1}+\\omega_{2})t) \\right) \\mathrm{d}t = 0.\n$$\n当在无限区间上取平均时，具有非零频率的余弦项的积分消失。\n\n将这些时间平均值代回 $R(x,x')$ 的表达式中，交叉项消失，得到：\n$$\nR(x,x') = \\frac{1}{2} \\sin(2\\pi x)\\sin(2\\pi x') + \\frac{1}{2} \\sin(3\\pi x)\\sin(3\\pi x').\n$$\n空间 POD 模态 $\\phi(x)$ 是与此核相关的 Fredholm 积分方程的本征函数：\n$$\n\\int_{0}^{1} R(x,x') \\phi(x') \\mathrm{d}x' = \\lambda \\phi(x),\n$$\n其中 $\\lambda$ 是相应的特征值，代表每个模态的能量。\n\n我们定义空间基函数 $\\psi_{1}(x) = \\sin(2\\pi x)$ 和 $\\psi_{2}(x) = \\sin(3\\pi x)$。核为 $R(x,x') = \\frac{1}{2}\\psi_{1}(x)\\psi_{1}(x') + \\frac{1}{2}\\psi_{2}(x)\\psi_{2}(x')$。将其代入积分方程：\n$$\n\\int_{0}^{1} \\left(\\frac{1}{2}\\psi_{1}(x)\\psi_{1}(x') + \\frac{1}{2}\\psi_{2}(x)\\psi_{2}(x')\\right) \\phi(x') \\mathrm{d}x' = \\lambda \\phi(x).\n$$\n使用内积符号 $\\langle f, g \\rangle = \\int_{0}^{1} f(x)g(x)\\mathrm{d}x$：\n$$\n\\frac{1}{2}\\psi_{1}(x)\\langle \\psi_{1}, \\phi \\rangle + \\frac{1}{2}\\psi_{2}(x)\\langle \\psi_{2}, \\phi \\rangle = \\lambda \\phi(x).\n$$\n此方程表明，任何本征函数 $\\phi(x)$ 都必须是 $\\psi_{1}(x)$ 和 $\\psi_{2}(x)$ 的线性组合。函数 $\\psi_{1}(x)$ 和 $\\psi_{2}(x)$ 在区间 $[0,1]$ 上是正交的，因为它们的形式是 $\\sin(n\\pi x)$，其中 $n$ 是不同的整数。我们来计算它们的范数：\n$$\n\\langle \\psi_{1}, \\psi_{1} \\rangle = \\int_{0}^{1} \\sin^{2}(2\\pi x) \\mathrm{d}x = \\int_{0}^{1} \\frac{1-\\cos(4\\pi x)}{2} \\mathrm{d}x = \\left[ \\frac{x}{2} - \\frac{\\sin(4\\pi x)}{8\\pi} \\right]_{0}^{1} = \\frac{1}{2}.\n$$\n$$\n\\langle \\psi_{2}, \\psi_{2} \\rangle = \\int_{0}^{1} \\sin^{2}(3\\pi x) \\mathrm{d}x = \\int_{0}^{1} \\frac{1-\\cos(6\\pi x)}{2} \\mathrm{d}x = \\left[ \\frac{x}{2} - \\frac{\\sin(6\\pi x)}{12\\pi} \\right]_{0}^{1} = \\frac{1}{2}.\n$$\n并且 $\\langle \\psi_{1}, \\psi_{2} \\rangle = 0$。\n\n由于算符 $R$ 是由正交基 $\\{\\psi_1, \\psi_2\\}$ 构建的，其本征函数将与该基对齐。\n我们测试 $\\phi(x) = \\psi_{1}(x)$。特征值方程变为：\n$$\n\\frac{1}{2}\\psi_{1}(x)\\langle \\psi_{1}, \\psi_{1} \\rangle + \\frac{1}{2}\\psi_{2}(x)\\langle \\psi_{2}, \\psi_{1} \\rangle = \\lambda_{1} \\psi_{1}(x).\n$$\n$$\n\\frac{1}{2}\\psi_{1}(x) \\left(\\frac{1}{2}\\right) + \\frac{1}{2}\\psi_{2}(x)(0) = \\lambda_{1} \\psi_{1}(x) \\implies \\frac{1}{4} \\psi_{1}(x) = \\lambda_{1} \\psi_{1}(x).\n$$\n因此，第一个特征值为 $\\lambda_{1} = 1/4$，对应的未归一化本征函数是 $\\psi_{1}(x) = \\sin(2\\pi x)$。\n\n类似地，通过测试 $\\phi(x) = \\psi_{2}(x)$：\n$$\n\\frac{1}{2}\\psi_{1}(x)\\langle \\psi_{1}, \\psi_{2} \\rangle + \\frac{1}{2}\\psi_{2}(x)\\langle \\psi_{2}, \\psi_{2} \\rangle = \\lambda_{2} \\psi_{2}(x).\n$$\n$$\n\\frac{1}{2}\\psi_{1}(x)(0) + \\frac{1}{2}\\psi_{2}(x)\\left(\\frac{1}{2}\\right) = \\lambda_{2} \\psi_{2}(x) \\implies \\frac{1}{4} \\psi_{2}(x) = \\lambda_{2} \\psi_{2}(x).\n$$\n第二个特征值为 $\\lambda_{2} = 1/4$，对应的未归一化本征函数是 $\\psi_{2}(x) = \\sin(3\\pi x)$。\n\n这是仅有的两个非平凡模态，因为核 $R$ 的秩为 2。所有其他本征函数都将对应于特征值 $\\lambda=0$。\n\n最后一步是根据条件 $\\int_{0}^{1} \\phi_{k}(x)^2 \\mathrm{d}x = 1$ 对本征函数进行归一化。\n对于第一个模态，$\\phi_{1}(x) = C_{1}\\psi_{1}(x)$：\n$$\n\\int_{0}^{1} (C_{1}\\sin(2\\pi x))^{2} \\mathrm{d}x = C_{1}^{2} \\int_{0}^{1} \\sin^{2}(2\\pi x) \\mathrm{d}x = C_{1}^{2} \\cdot \\frac{1}{2} = 1 \\implies C_{1} = \\sqrt{2}.\n$$\n所以，第一个归一化的 POD 模态是 $\\phi_{1}(x) = \\sqrt{2}\\sin(2\\pi x)$。\n\n对于第二个模态，$\\phi_{2}(x) = C_{2}\\psi_{2}(x)$：\n$$\n\\int_{0}^{1} (C_{2}\\sin(3\\pi x))^{2} \\mathrm{d}x = C_{2}^{2} \\int_{0}^{1} \\sin^{2}(3\\pi x) \\mathrm{d}x = C_{2}^{2} \\cdot \\frac{1}{2} = 1 \\implies C_{2} = \\sqrt{2}.\n$$\n第二个归一化的 POD 模态是 $\\phi_{2}(x) = \\sqrt{2}\\sin(3\\pi x)$。\n\n两个模态的能量（特征值）相等，$\\lambda_1 = \\lambda_2 = 1/4$。因此，“按能量降序”不是严格的。我们按空间波数的顺序呈现模态。\n\n两个非平凡的空间 POD 模态是 $\\phi_{1}(x) = \\sqrt{2}\\sin(2\\pi x)$ 和 $\\phi_{2}(x) = \\sqrt{2}\\sin(3\\pi x)$。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\sqrt{2}\\sin(2\\pi x) & \\sqrt{2}\\sin(3\\pi x) \\end{pmatrix}}\n$$", "id": "3266047"}, {"introduction": "从理想的解析情况转向实际数据分析时，我们必须考虑真实世界数据的特性，例如非零的平均状态 $\\mu$。本练习通过一个编码问题，探讨了POD应用中一个至关重要的预处理步骤：将原始数据矩阵 $X$ 替换为均值中心化矩阵 $X_c = X - \\mu \\mathbf{1}^{\\top}$。你将通过计算发现，这一步骤如何确保POD方法捕捉的是系统围绕其平均状态的*变化*或*动力学*，而不是仅仅是静态的平均场本身。[@problem_id:3265876]", "problem": "给定一个合成快照矩阵族，这些矩阵代表在一维空间网格上随时间测量的温度场。目标是分析减去时间平均值如何影响本征正交分解（POD）基。本征正交分解（POD）定义为通过奇异值分解（SVD）从数据矩阵的左奇异向量中得到的标准正交基，该基在最小二乘意义上最优地捕获数据的方差（能量）。具体来说，如果数据矩阵表示为 $X \\in \\mathbb{R}^{n \\times m}$，其列为快照，则SVD为 $X = U \\Sigma V^{\\top}$，其中 $U \\in \\mathbb{R}^{n \\times n}$ 的列是标准正交的（空间模态），$\\Sigma \\in \\mathbb{R}^{n \\times m}$ 是对角矩阵，其对角线元素为非负值（奇异值），$V \\in \\mathbb{R}^{m \\times m}$ 的列是标准正交的（时间系数）。第一模态捕获的能量由 $\\sigma_{1}^{2} / \\sum_{i} \\sigma_{i}^{2}$ 量化，其中 $\\sigma_{i}$ 是奇异值。\n\n你将按照以下基本原理构建数据矩阵。考虑一个具有 $n$ 个点 $x_{j}$ 的空间网格，这些点在 $[0,1)$ 上均匀分布，以及 $m$ 个时间快照，索引为 $k = 0, 1, \\dots, m-1$。定义两种空间模式：一个平均模式 $\\phi_{\\mathrm{mean}}(x) \\equiv 1$ 和一个振荡模式 $\\phi_{\\mathrm{osc}}(x) \\equiv \\sin(2 \\pi x)$。将每个空间模式归一化，使其在 $\\mathbb{R}^{n}$ 中具有单位欧几里得范数。设相位为 $\\theta_{k} = 2 \\pi k / m$。将每个快照（$\\mathbb{R}^{n}$ 中的列向量）定义为\n$$\nT_{k} = A \\,\\phi_{\\mathrm{mean}} + B \\cos(\\theta_{k}) \\,\\phi_{\\mathrm{osc}},\n$$\n并组装快照矩阵 $X = [T_{0}\\; T_{1}\\; \\cdots\\; T_{m-1}] \\in \\mathbb{R}^{n \\times m}$。\n\n对于每个 $X$，需要计算两个版本的POD基：\n- 未中心化版本直接使用 $X$。\n- 均值中心化版本使用 $X_{\\mathrm{c}} = X - \\mu \\mathbf{1}^{\\top}$，其中 $\\mu = \\frac{1}{m} \\sum_{k=0}^{m-1} T_{k}$ 是时间平均场，$\\mathbf{1} \\in \\mathbb{R}^{m}$ 是全1向量。\n\n从每次SVD中，提取：\n- 第一个左奇异向量 $u_{1}$（单位范数）和奇异值 $\\{\\sigma_{i}\\}$。\n- 定义 $u_{1}$ 和平均场 $\\mu$ 之间的绝对相关性为\n$$ r \\equiv \\begin{cases} \\left| \\dfrac{u_{1}^{\\top} \\mu}{\\| \\mu \\|_{2}} \\right|,  \\text{若 } \\| \\mu \\|_{2} > 0, \\\\[6pt] 0,  \\text{若 } \\| \\mu \\|_{2} = 0, \\end{cases} $$\n其中 $\\| \\cdot \\|_{2}$ 表示欧几里得范数。如果数据矩阵（中心化或未中心化）在数值上为零，以至于 $\\sum_{i} \\sigma_{i}^{2} = 0$，则按惯例将其第一模态能量分数定义为 $0$，并将相关性 $r$ 设为 $0$。\n\n对于下方的每个测试用例，计算四个量：\n- $r_{\\mathrm{unc}}$：未中心化的第一模态与 $\\mu$ 之间的绝对相关性。\n- $r_{\\mathrm{cen}}$：中心化的第一模态与 $\\mu$ 之间的绝对相关性。\n- $e_{\\mathrm{unc}}$：未中心化的第一模态能量分数，等于 $X$ 的 $\\sigma_{1}^{2} / \\sum_{i} \\sigma_{i}^{2}$。\n- $e_{\\mathrm{cen}}$：中心化的第一模态能量分数，等于 $X_{\\mathrm{c}}$ 的 $\\sigma_{1}^{2} / \\sum_{i} \\sigma_{i}^{2}$。\n\n使用以下固定参数（不允许有随机性）：\n- 空间网格大小 $n = 128$，$x_{j}$ 在 $[0,1)$ 中均匀分布。\n- 快照数量 $m = 80$，对于 $k = 0, 1, \\dots, m-1$，$\\theta_{k} = 2 \\pi k / m$。\n\n参数值 $(A, B)$ 的测试套件：\n- 用例1（非零均值主导）：$(A, B) = (3, 1)$。\n- 用例2（零均值）：$(A, B) = (0, 1)$。\n- 用例3（恒定场）：$(A, B) = (2, 0)$。\n- 用例4（振荡主导且均值较小）：$(A, B) = (0.1, 2)$。\n\n你的程序必须：\n- 完全按照规定为每个用例构建 $X$。\n- 为每个用例计算 $(r_{\\mathrm{unc}}, r_{\\mathrm{cen}}, e_{\\mathrm{unc}}, e_{\\mathrm{cen}})$。\n- 将每个报告值四舍五入到 $6$ 位小数。\n\n最终输出格式：\n- 你的程序应生成单行输出，其中包含一个结果列表，每个测试用例一个结果，其中每个测试用例的结果是列表 $[r_{\\mathrm{unc}}, r_{\\mathrm{cen}}, e_{\\mathrm{unc}}, e_{\\mathrm{cen}}]$。\n- 整个输出必须打印为单行，不带空格，使用方括号和逗号分隔符，例如，`[[a₁₁,a₁₂,a₁₃,a₁₄],[a₂₁,a₂₂,a₂₃,a₂₄],…]`，其中每个 $a_{ij}$ 是一个四舍五入到 $6$ 位小数的浮点数。", "solution": "用户提供的问题已经过分析，并被确定为有效。该问题在科学上基于数值线性代数的原理，特别是奇异值分解（SVD）及其通过本征正交分解（POD）在数据分析中的应用。该问题是适定的，所有参数、定义和步骤都已明确无误地陈述。不存在内部矛盾或信息缺失。现在我将提供一个完整的解决方案。\n\n该问题要求比较给定合成数据集 $X$ 及其均值中心化版本 $X_c$ 的POD基。分析重点是第一个POD模态、其与时间平均场的对齐情况，以及其捕获的总方差的比例。\n\n首先，我将根据问题的定义建立理论框架。\n\n**1. 空间基的构建**\n空间域是一个具有 $n=128$ 个点的一维网格，$x_j = j/n$，$j=0, 1, \\dots, n-1$。定义了两种空间模式：\n- 恒定模式：$\\phi_{\\mathrm{mean}}(x) = 1$。离散向量是一个全为1的 $n$ 维向量。\n- 振荡模式：$\\phi_{\\mathrm{osc}}(x) = \\sin(2\\pi x)$。离散向量是 $[\\sin(2\\pi x_0), \\dots, \\sin(2\\pi x_{n-1})]^{\\top}$。\n\n这些向量被归一化，使其在 $\\mathbb{R}^n$ 中具有单位欧几里得范数。设未归一化的向量为 $v_{\\mathrm{mean}} = [1, \\dots, 1]^{\\top}$ 和 $v_{\\mathrm{osc}} = [\\sin(2\\pi x_0), \\dots, \\sin(2\\pi x_{n-1})]^{\\top}$。它们的范数平方为 $\\|v_{\\mathrm{mean}}\\|_2^2 = \\sum_{j=0}^{n-1} 1^2 = n$ 和 $\\|v_{\\mathrm{osc}}\\|_2^2 = \\sum_{j=0}^{n-1} \\sin^2(2\\pi j/n) = \\sum_{j=0}^{n-1} \\frac{1 - \\cos(4\\pi j/n)}{2} = \\frac{n}{2} - \\frac{1}{2}\\sum_{j=0}^{n-1}\\cos(4\\pi j/n)$。对于 $n2$，余弦和为零，因此 $\\|v_{\\mathrm{osc}}\\|_2^2 = n/2$。\n归一化后的向量为 $\\phi_{\\mathrm{mean}} = v_{\\mathrm{mean}}/\\sqrt{n}$ 和 $\\phi_{\\mathrm{osc}} = v_{\\mathrm{osc}}/\\sqrt{n/2}$。\n这两个向量是正交的，因为它们的点积是 $\\sum_{j=0}^{n-1} \\sin(2\\pi j/n)$，这是 $\\sum_{j=0}^{n-1} \\exp(i 2\\pi j/n) = 0$（对于 $n1$）的虚部。\n\n**2. 时间基的构建**\n时间行为由 $m=80$ 个快照决定。对于每个快照 $k \\in \\{0, \\dots, m-1\\}$，相位为 $\\theta_k = 2\\pi k/m$。与平均和振荡空间模式相关的时间向量是：\n- 恒定向量：$\\mathbf{1} = [1, \\dots, 1]^{\\top} \\in \\mathbb{R}^m$。\n- 余弦向量：$c = [\\cos(\\theta_0), \\dots, \\cos(\\theta_{m-1})]^{\\top} \\in \\mathbb{R}^m$。\n\n这些向量也是正交的，因为它们的点积是 $\\mathbf{1}^\\top c = \\sum_{k=0}^{m-1} \\cos(2\\pi k/m)$，这是 $\\sum_{k=0}^{m-1} \\exp(i 2\\pi k/m) = 0$（对于 $m1$）的实部。它们的范数平方是 $\\|\\mathbf{1}\\|_2^2=m$ 和 $\\|c\\|_2^2 = \\sum_{k=0}^{m-1} \\cos^2(2\\pi k/m) = m/2$（对于 $m2$）。\n\n**3. 快照矩阵及其SVD**\n第 $k$ 个快照是 $T_k = A \\phi_{\\mathrm{mean}} + B \\cos(\\theta_k) \\phi_{\\mathrm{osc}}$。快照矩阵 $X = [T_0 \\dots T_{m-1}]$ 可以写成外积和的形式：\n$$\nX = A \\phi_{\\mathrm{mean}}\\mathbf{1}^{\\top} + B \\phi_{\\mathrm{osc}}c^{\\top}\n$$\n令 $X_{\\mathrm{mean}} = A \\phi_{\\mathrm{mean}}\\mathbf{1}^{\\top}$ 和 $X_{\\mathrm{osc}} = B \\phi_{\\mathrm{osc}}c^{\\top}$。由于空间向量 $(\\phi_{\\mathrm{mean}}, \\phi_{\\mathrm{osc}})$ 和时间向量 $(\\mathbf{1}, c)$ 构成正交对，因此 $X$ 的SVD由 $X_{\\mathrm{mean}}$ 和 $X_{\\mathrm{osc}}$ 的SVD组成。\n$X_{\\mathrm{mean}}$ 的SVD是 $u_1 = \\phi_{\\mathrm{mean}}$，$v_1 = \\mathbf{1}/\\sqrt{m}$，奇异值为 $\\sigma_1 = A\\sqrt{m}$。\n$X_{\\mathrm{osc}}$ 的SVD是 $u_1' = \\phi_{\\mathrm{osc}}$，$v_1' = c/\\sqrt{m/2}$，奇异值为 $\\sigma_1' = B\\sqrt{m/2}$。\n因此，$X$ 的SVD包含两个非零奇异值，$\\sigma_{\\mathrm{mean}} = A\\sqrt{m}$ 和 $\\sigma_{\\mathrm{osc}} = B\\sqrt{m/2}$，对应的左奇异向量为 $\\phi_{\\mathrm{mean}}$ 和 $\\phi_{\\mathrm{osc}}$。第一个POD模态 $u_1$ 将是与较大奇异值相关联的那个。\n\n**4. 平均场和中心化数据**\n时间平均场是 $\\mu = \\frac{1}{m}\\sum_k T_k$。\n$$\n\\mu = \\frac{1}{m} \\sum_{k=0}^{m-1} (A \\phi_{\\mathrm{mean}} + B \\cos(\\theta_k) \\phi_{\\mathrm{osc}}) = A \\phi_{\\mathrm{mean}} + B \\phi_{\\mathrm{osc}} \\left(\\frac{1}{m} \\sum_{k=0}^{m-1} \\cos(\\theta_k)\\right)\n$$\n由于 $\\sum \\cos(\\theta_k) = 0$，我们有 $\\mu = A \\phi_{\\mathrm{mean}}$。\n均值中心化数据矩阵是：\n$$\nX_c = X - \\mu \\mathbf{1}^{\\top} = (A \\phi_{\\mathrm{mean}}\\mathbf{1}^{\\top} + B \\phi_{\\mathrm{osc}}c^{\\top}) - (A \\phi_{\\mathrm{mean}})\\mathbf{1}^{\\top} = B \\phi_{\\mathrm{osc}}c^{\\top} = X_{\\mathrm{osc}}\n$$\n因此，$X_c$ 是一个秩为1的矩阵，其唯一的POD模态是 $\\phi_{\\mathrm{osc}}$。\n\n有了这个理论基础，我可以预测每个测试用例的结果。\n- $r_{\\mathrm{unc}} = |u_1^{\\mathrm{unc}\\top}\\mu / \\|\\mu\\|_2|$\n- $e_{\\mathrm{unc}} = \\sigma_1^2 / (\\sigma_{\\mathrm{mean}}^2 + \\sigma_{\\mathrm{osc}}^2)$\n- $r_{\\mathrm{cen}} = |u_1^{\\mathrm{cen}\\top}\\mu / \\|\\mu\\|_2|$\n- $e_{\\mathrm{cen}} = \\sigma_{1,c}^2 / \\sum \\sigma_{i,c}^2$\n\n**用例1：$(A, B) = (3, 1)$**\n$\\sigma_{\\mathrm{mean}} = 3\\sqrt{80} \\approx 26.83$，$\\sigma_{\\mathrm{osc}} = 1\\sqrt{40} \\approx 6.32$。$\\sigma_{\\mathrm{mean}}  \\sigma_{\\mathrm{osc}}$，因此 $u_1^{\\mathrm{unc}} = \\phi_{\\mathrm{mean}}$。\n$\\mu = 3\\phi_{\\mathrm{mean}} \\neq 0$。\n$r_{\\mathrm{unc}} = |\\phi_{\\mathrm{mean}}^{\\top}(3\\phi_{\\mathrm{mean}}) / \\|3\\phi_{\\mathrm{mean}}\\|_2| = 1$。\n$e_{\\mathrm{unc}} = \\frac{(3\\sqrt{80})^2}{(3\\sqrt{80})^2 + (1\\sqrt{40})^2} = \\frac{9 \\cdot 80}{9 \\cdot 80 + 1 \\cdot 40} = \\frac{720}{760} = \\frac{18}{19} \\approx 0.947368$。\n$X_c = X_{\\mathrm{osc}}$，秩为1。$u_1^{\\mathrm{cen}} = \\phi_{\\mathrm{osc}}$。$e_{\\mathrm{cen}} = 1$。\n$r_{\\mathrm{cen}} = |\\phi_{\\mathrm{osc}}^{\\top}(3\\phi_{\\mathrm{mean}}) / \\|3\\phi_{\\mathrm{mean}}\\|_2| = 0$，根据正交性。\n预期：$[1.0, 0.0, 0.947368, 1.0]$。\n\n**用例2：$(A, B) = (0, 1)$**\n$\\mu = 0 \\cdot \\phi_{\\mathrm{mean}} = 0$。$X = X_{\\mathrm{osc}}$。秩为1。$u_1^{\\mathrm{unc}}=\\phi_{\\mathrm{osc}}$。\n$r_{\\mathrm{unc}} = 0$，根据定义，因为 $\\mu=0$。\n$e_{\\mathrm{unc}} = 1$，因为 $X$ 是秩为1的。\n$X_c = X - 0 = X$。所以中心化结果是相同的。\n$r_{\\mathrm{cen}} = 0$，$e_{\\mathrm{cen}} = 1$。\n预期：$[0.0, 0.0, 1.0, 1.0]$。\n\n**用例3：$(A, B) = (2, 0)$**\n$X = 2\\phi_{\\mathrm{mean}}\\mathbf{1}^{\\top} = X_{\\mathrm{mean}}$。秩为1。$u_1^{\\mathrm{unc}} = \\phi_{\\mathrm{mean}}$。\n$\\mu = 2\\phi_{\\mathrm{mean}} \\neq 0$。\n$r_{\\mathrm{unc}} = |\\phi_{\\mathrm{mean}}^{\\top}(2\\phi_{\\mathrm{mean}}) / \\|2\\phi_{\\mathrm{mean}}\\|_2| = 1$。\n$e_{\\mathrm{unc}} = 1$。\n$X_c = X - \\mu\\mathbf{1}^{\\top} = X_{\\mathrm{mean}} - X_{\\mathrm{mean}} = 0$。\n对于零矩阵，根据定义 $r_{\\mathrm{cen}}=0$ 和 $e_{\\mathrm{cen}}=0$。\n预期：$[1.0, 0.0, 1.0, 0.0]$。\n\n**用例4：$(A, B) = (0.1, 2)$**\n$\\sigma_{\\mathrm{mean}} = 0.1\\sqrt{80} \\approx 0.894$，$\\sigma_{\\mathrm{osc}} = 2\\sqrt{40} \\approx 12.65$。$\\sigma_{\\mathrm{osc}}  \\sigma_{\\mathrm{mean}}$，因此 $u_1^{\\mathrm{unc}} = \\phi_{\\mathrm{osc}}$。\n$\\mu = 0.1\\phi_{\\mathrm{mean}} \\neq 0$。\n$r_{\\mathrm{unc}} = |\\phi_{\\mathrm{osc}}^{\\top}(0.1\\phi_{\\mathrm{mean}}) / \\|0.1\\phi_{\\mathrm{mean}}\\|_2| = 0$。\n$e_{\\mathrm{unc}} = \\frac{(2\\sqrt{40})^2}{(0.1\\sqrt{80})^2 + (2\\sqrt{40})^2} = \\frac{4 \\cdot 40}{0.01 \\cdot 80 + 4 \\cdot 40} = \\frac{160}{0.8 + 160} = \\frac{160}{160.8} = \\frac{200}{201} \\approx 0.995025$。\n$X_c = X_{\\mathrm{osc}}$，秩为1。$u_1^{\\mathrm{cen}} = \\phi_{\\mathrm{osc}}$。$e_{\\mathrm{cen}} = 1$。\n$r_{\\mathrm{cen}} = |\\phi_{\\mathrm{osc}}^{\\top}(0.1\\phi_{\\mathrm{mean}}) / \\|0.1\\phi_{\\mathrm{mean}}\\|_2| = 0$。\n预期：$[0.0, 0.0, 0.995025, 1.0]$。\n\n以下程序以数值方式实现了这些计算。", "answer": "```python\nimport numpy as np\n\ndef compute_pod_metrics(A, B, n, m):\n    \"\"\"\n    Computes POD metrics for a given set of parameters.\n\n    Args:\n        A (float): Amplitude of the mean pattern.\n        B (float): Amplitude of the oscillatory pattern.\n        n (int): Number of spatial grid points.\n        m (int): Number of time snapshots.\n\n    Returns:\n        tuple: A tuple containing (r_unc, r_cen, e_unc, e_cen).\n    \"\"\"\n    # 1. Define grid and spatial patterns\n    x = np.linspace(0, 1, n, endpoint=False)\n    phi_mean_raw = np.ones(n)\n    phi_osc_raw = np.sin(2 * np.pi * x)\n\n    # 2. Normalize spatial patterns to unit Euclidean norm\n    norm_mean = np.linalg.norm(phi_mean_raw)\n    norm_osc = np.linalg.norm(phi_osc_raw)\n    \n    # Avoid division by zero if a pattern is somehow zero (e.g., n=1)\n    phi_mean = phi_mean_raw / norm_mean if norm_mean > 0 else phi_mean_raw\n    phi_osc = phi_osc_raw / norm_osc if norm_osc > 0 else phi_osc_raw\n\n    # 3. Construct the snapshot matrix X\n    k_vals = np.arange(m)\n    theta_k = 2 * np.pi * k_vals / m\n    cos_theta = np.cos(theta_k)\n\n    # Use broadcasting via np.outer for efficient construction\n    X = A * np.outer(phi_mean, np.ones(m)) + B * np.outer(phi_osc, cos_theta)\n    \n    # 4. Calculate the temporal mean field mu\n    mu = np.mean(X, axis=1)\n    mu_norm = np.linalg.norm(mu)\n\n    # 5. Compute metrics for the uncentered data X\n    U_unc, s_unc, _ = np.linalg.svd(X, full_matrices=False)\n    total_energy_sq_unc = np.sum(s_unc**2)\n\n    if total_energy_sq_unc > 1e-14:\n        e_unc = s_unc[0]**2 / total_energy_sq_unc\n        u1_unc = U_unc[:, 0]\n        if mu_norm > 1e-14:\n            r_unc = np.abs(np.dot(u1_unc, mu) / mu_norm)\n        else:\n            r_unc = 0.0\n    else: # This case corresponds to a numerically zero matrix\n        e_unc = 0.0\n        r_unc = 0.0\n\n    # 6. Compute metrics for the mean-centered data X_c\n    # X_c = X - mu * 1^T. Broadcasting handles this efficiently.\n    X_c = X - mu.reshape(-1, 1)\n    \n    U_cen, s_cen, _ = np.linalg.svd(X_c, full_matrices=False)\n    total_energy_sq_cen = np.sum(s_cen**2)\n\n    if total_energy_sq_cen > 1e-14:\n        e_cen = s_cen[0]**2 / total_energy_sq_cen\n        u1_cen = U_cen[:, 0]\n        if mu_norm > 1e-14:\n            r_cen = np.abs(np.dot(u1_cen, mu) / mu_norm)\n        else:\n            r_cen = 0.0\n    else: # This case corresponds to a numerically zero centered matrix\n        e_cen = 0.0\n        r_cen = 0.0\n        \n    return r_unc, r_cen, e_unc, e_cen\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    \"\"\"\n    # Fixed parameters from the problem statement\n    n = 128\n    m = 80\n\n    # Test suite of parameter values (A, B)\n    test_cases = [\n        (3.0, 1.0),   # Case 1: non-zero-mean dominant\n        (0.0, 1.0),   # Case 2: zero mean\n        (2.0, 0.0),   # Case 3: constant field\n        (0.1, 2.0)    # Case 4: oscillation dominant with small mean\n    ]\n\n    all_results = []\n    for A, B in test_cases:\n        # Compute the four required quantities for the current case\n        results_tuple = compute_pod_metrics(A, B, n, m)\n        \n        # Format the results as strings rounded to 6 decimal places\n        formatted_results = [f\"{val:.6f}\" for val in results_tuple]\n        \n        # Create the inner list string, e.g., \"[1.000000,0.000000,...]\"\n        all_results.append(f\"[{','.join(formatted_results)}]\")\n\n    # Join all case results into a single string in the required final format\n    final_output = f\"[{','.join(all_results)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "3265876"}, {"introduction": "在掌握了如何正确应用POD之后，理解其局限性也同样重要。本练习研究了一个标准POD效率不高的经典案例：纯平移运动，例如一个函数 $u(x,t) = f(x-ct)$。通过将POD应用于一个平移的高斯脉冲，你将计算重构误差 $E_r$，并了解到该方法可能需要非常多的模态（即 $r$ 值很大）才能精确表示简单的平移过程，这为探索更高级的数据分析技术提供了动力。[@problem_id:3265968]", "problem": "考虑一个平移高斯脉冲的快照函数族，其定义为 $u(x,t) = \\exp\\!\\left(-\\big(x - c t\\big)^{2}\\right)$，空间区间为 $x \\in [-L,L]$，离散时间为 $t \\in \\{t_{0}, t_{1}, \\dots, t_{m-1}\\}$。根据基本定义，本征正交分解（Proper Orthogonal Decomposition, POD）是这样一个过程：对于给定的秩 $r$，它在空间中选择一个 $r$ 维标准正交基，以最小化快照集的总平方投影误差。等价地，它（在涵盖所有网格点和时间的欧几里得最小二乘意义上）产生快照数据的最佳秩-$r$ 近似。\n\n你的任务是实现一个程序，该程序能够：\n- 对于给定的速度 $c$、快照数量 $m$ 和最终时间 $T$（其中 $t_k$ 在 $[0,T]$ 上等间隔分布），构建快照矩阵 $X \\in \\mathbb{R}^{N_x \\times m}$。该矩阵的第 $k$ 列是在 $[-L,L]$ 上的 $N_x$ 个均匀间隔网格点上采样的快照 $u(x,t_k)$。\n- 对于秩 $r \\in \\{1,2,5,10\\}$，计算（由 POD 定义的）最佳秩-$r$ 近似 $X_r$ 以及相应的相对重构误差\n$$E_r = \\frac{\\lVert X - X_r \\rVert_F}{\\lVert X \\rVert_F},$$\n其中 $\\lVert \\cdot \\rVert_F$ 表示弗罗贝尼乌斯范数。\n- 将每个测试用例的误差 $E_r$ 报告为四舍五入到六位小数的浮点数。\n\n使用的基本原理：\n- 欧几里得内积和弗罗贝尼乌斯范数的定义。\n- 本征正交分解（POD）的定义性优化性质：在所有 $r$ 维标准正交基中，POD 最小化快照的总平方投影误差。这在最小二乘意义上产生了快照矩阵的最佳秩-$r$ 近似。\n\n测试套件：\n所有用例均使用 $L = 10$ 和 $N_x = 401$。四个测试用例如下：\n1. 用例 A（静止脉冲）：$c = 0$, $T = 5$, $m = 50$。\n2. 用例 B（慢速平移）：$c = 0.5$, $T = 10$, $m = 100$。\n3. 用例 C（快速平移）：$c = 2.0$, $T = 4$, $m = 80$。\n4. 用例 D（少量快照）：$c = 0.5$, $T = 10$, $m = 5$。\n\n答案规格：\n- 对于每个测试用例，输出一个包含四个浮点数的列表 $[E_{1},E_{2},E_{5},E_{10}]$，每个浮点数四舍五入到六位小数。\n- 你的程序应生成单行输出，其中包含结果，格式为一个用方括号括起来的逗号分隔列表。其中每个元素是针对一个测试用例的、包含四个误差的、用方括号括起来的列表，顺序为用例 A、B、C、D。例如，正确格式的输出应如下所示\n$[[e_{A,1},e_{A,2},e_{A,5},e_{A,10}],[e_{B,1},e_{B,2},e_{B,5},e_{B,10}],[e_{C,1},e_{C,2},e_{C,5},e_{C,10}],[e_{D,1},e_{D,2},e_{D,5},e_{D,10}]]$，\n且行内任何地方都没有空格。\n\n单位：\n- 本问题不要求物理单位。\n\n角度单位：\n- 不适用。\n\n百分比：\n- 不适用；所有量均以小数表示。\n\n你的实现必须是自包含的，并且不需要用户输入、外部文件或网络访问。它必须能在一种现代编程语言中运行，并以单行形式生成上文描述的精确最终输出格式。", "solution": "对问题进行验证。\n\n### 步骤 1：提取已知条件\n- **快照函数**：$u(x,t) = \\exp(-(x - c t)^2)$\n- **空间域**：$x \\in [-L,L]$\n- **时间域**：$t \\in \\{t_{0}, t_{1}, \\dots, t_{m-1}\\}$，即在 $[0,T]$ 上的 $m$ 个等间隔点。\n- **空间离散化**：在 $[-L,L]$ 上的 $N_x$ 个均匀间隔网格点。\n- **快照矩阵**：$X \\in \\mathbb{R}^{N_x \\times m}$，其第 $k$ 列是采样快照 $u(x,t_k)$。\n- **任务**：使用本征正交分解（POD）计算秩 $r \\in \\{1, 2, 5, 10\\}$ 的最佳秩-$r$ 近似 $X_r$。\n- **误差度量**：相对重构误差 $E_r = \\frac{\\lVert X - X_r \\rVert_F}{\\lVert X \\rVert_F}$，其中 $\\lVert \\cdot \\rVert_F$ 是弗罗贝尼乌斯范数。\n- **常数**：$L = 10$, $N_x = 401$。\n- **测试用例**：\n    1. 用例 A: $c = 0$, $T = 5$, $m = 50$。\n    2. 用例 B: $c = 0.5$, $T = 10$, $m = 100$。\n    3. 用例 C: $c = 2.0$, $T = 4$, $m = 80$。\n    4. 用例 D: $c = 0.5$, $T = 10$, $m = 5$。\n- **输出规格**：一个单行的、逗号分隔的列表的列表，例如 `[[e_{A,1},...,e_{A,10}],[e_{B,1},...,e_{B,10}],...]`，数字四舍五入到六位小数，无空格。\n\n### 步骤 2：使用提取的已知条件进行验证\n- **科学依据**：该问题是本征正交分解（POD）的一个标准应用，POD 是科学计算中降阶建模的基石。其数学基础是奇异值分解（SVD），这是线性代数中的一个主要成果。物理背景是一个简单的平移高斯脉冲，这是一个常见且有效的测试用例。该问题在科学上是合理的。\n- **适定性**：每个用例都提供了所有必需的参数（$L, N_x, c, T, m$）。函数 $u(x,t)$、构建快照矩阵 $X$ 的过程以及误差度量 $E_r$ 都得到了明确无误的定义。SVD 为最佳秩-$r$ 近似提供了唯一的构造方法，确保了唯一解的存在。\n- **客观性**：该问题以精确的数学术语表述，不含任何主观性、模糊性或基于观点的陈述。\n\n### 步骤 3：结论与行动\n该问题是有效的。这是一个在数值方法领域内定义明确、自包含且科学合理的问题。将提供完整的解决方案。\n\n### 基于原理的解决方案\n目标是计算一组数据快照的秩-$r$ 近似的相对重构误差。其基本原理是，在由弗罗贝尼乌斯范数定义的最小二乘意义上，最优的秩-$r$ 近似可通过奇异值分解（SVD）获得。这一结果由 Eckart-Young-Mirsky 定理正式陈述。\n\n**1. 快照矩阵的构建**\n首先，我们对问题域进行离散化。空间域 $x \\in [-L, L]$ 在 $N_x$ 个均匀间隔的点上进行采样，形成网格 $\\{x_j\\}_{j=0}^{N_x-1}$。时间区间 $t \\in [0, T]$ 在 $m$ 个离散的、等间隔的点上进行采样，形成 $\\{t_k\\}_{k=0}^{m-1}$。每个时间点 $t_k$ 的快照数据是一个 $\\mathbb{R}^{N_x}$ 中的向量，其元素由函数 $u(x_j, t_k)$ 给出。这些快照的集合构成了快照矩阵 $X \\in \\mathbb{R}^{N_x \\times m}$ 的列。该矩阵的一个元素 $X_{jk}$ 由下式给出：\n$$X_{jk} = u(x_j, t_k) = \\exp\\!\\left(-\\big(x_j - c t_k\\big)^{2}\\right)$$\n\n**2. 奇异值分解与最优近似**\n快照矩阵 $X$ 的 SVD 分解如下：\n$$X = U \\Sigma V^T$$\n其中 $U \\in \\mathbb{R}^{N_x \\times N_x}$ 是一个正交矩阵，其列 $u_i$ 是左奇异向量（POD 模态），$V \\in \\mathbb{R}^{m \\times m}$ 是一个正交矩阵，其列 $v_i$ 是右奇异向量，而 $\\Sigma \\in \\mathbb{R}^{N_x \\times m}$ 是一个包含奇异值 $\\sigma_i$ 的矩形对角矩阵。奇异值为非负，并按惯例排序：$\\sigma_1 \\ge \\sigma_2 \\ge \\dots \\ge \\sigma_k \\ge 0$，其中 $k = \\min(N_x, m)$ 是矩阵的秩。\n\nEckart-Young-Mirsky 定理指出，对于最小化差的弗罗贝尼乌斯范数 $\\lVert X - X_r \\rVert_F$ 的 $X$ 的最佳秩-$r$ 近似是截断 SVD：\n$$X_r = \\sum_{i=1}^{r} \\sigma_i u_i v_i^T$$\n这个近似是使用前 $r$ 个奇异值及其对应的左、右奇异向量构建的。\n\n**3. 误差计算**\n相对重构误差 $E_r$ 定义为误差矩阵 $(X - X_r)$ 的弗罗贝尼乌斯范数与原始矩阵 $X$ 的弗罗贝尼乌斯范数之比。弗罗贝尼乌斯范数通过恒等式 $\\lVert A \\rVert_F^2 = \\sum_{i=1}^{\\text{rank}(A)} \\sigma_i(A)^2$ 与奇异值相关联。\n应用此性质，原始矩阵的范数平方是其所有奇异值平方的总和：\n$$\\lVert X \\rVert_F^2 = \\sum_{i=1}^{k} \\sigma_i^2$$\n误差矩阵为 $X - X_r = \\sum_{i=r+1}^{k} \\sigma_i u_i v_i^T$。由于奇异向量的正交性，误差矩阵的弗罗贝尼乌斯范数平方是被舍弃的奇异值的平方和：\n$$\\lVert X - X_r \\rVert_F^2 = \\sum_{i=r+1}^{k} \\sigma_i^2$$\n结合这些结果，相对重构误差由下式给出：\n$$E_r = \\frac{\\lVert X - X_r \\rVert_F}{\\lVert X \\rVert_F} = \\frac{\\sqrt{\\sum_{i=r+1}^{k} \\sigma_i^2}}{\\sqrt{\\sum_{i=1}^{k} \\sigma_i^2}}$$\n注意，如果请求的秩 $r$ 大于或等于矩阵的实际秩 $k$，则分子中的求和为空，其值为 0，从而正确地得出误差 $E_r = 0$。\n\n**4. 计算步骤**\n对于每个测试用例，算法按以下步骤进行：\n1.  定义参数 $c$、$T$ 和 $m$，以及固定常数 $L=10$ 和 $N_x=401$。\n2.  构建空间网格 $x$ 和时间网格 $t$。\n3.  使用给定函数 $u(x,t)$ 组装 $N_x \\times m$ 快照矩阵 $X$。\n4.  使用标准的 SVD 数值库函数计算 $X$ 的奇异值 $\\sigma_i$。最有效的方法是只计算奇异值，而不是完整的 U 和 V 矩阵。\n5.  计算总能量，表示为弗罗贝尼乌斯范数的平方，$S_{total} = \\sum_{i=1}^{k} \\sigma_i^2$。\n6.  对于每个所需的秩 $r \\in \\{1, 2, 5, 10\\}$，计算误差能量，$S_{error} = \\sum_{i=r+1}^{k} \\sigma_i^2$。\n7.  相对误差则为 $E_r = \\sqrt{S_{error} / S_{total}}$。\n8.  收集每个测试用例计算出的误差，并根据输出规格进行格式化。\n该过程提供了一种直接且数值稳定的方法，用于根据线性代数的基本原理确定所需的重构误差。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Proper Orthogonal Decomposition problem for a translating Gaussian pulse.\n    \"\"\"\n    # Global parameters for all test cases\n    L = 10.0\n    Nx = 401\n    ranks_to_compute = [1, 2, 5, 10]\n\n    # Test suite: (c, T, m)\n    # c: speed, T: final time, m: number of snapshots\n    test_cases = [\n        (0.0, 5.0, 50),   # Case A: stationary pulse\n        (0.5, 10.0, 100), # Case B: slow translation\n        (2.0, 4.0, 80),   # Case C: fast translation\n        (0.5, 10.0, 5),   # Case D: few snapshots\n    ]\n\n    all_results = []\n\n    for c, T, m in test_cases:\n        # 1. Create spatial and temporal grids\n        x = np.linspace(-L, L, Nx)\n        t = np.linspace(0.0, T, m)\n\n        # 2. Construct the snapshot matrix X using broadcasting\n        # x_col has shape (Nx, 1) and t_row has shape (1, m)\n        # Broadcasting expands them to (Nx, m) for element-wise operations\n        x_col = x[:, np.newaxis]\n        t_row = t[np.newaxis, :]\n        X = np.exp(-((x_col - c * t_row) ** 2))\n\n        # 3. Compute the singular values of X\n        # We only need the singular values, so compute_uv=False is most efficient.\n        s = np.linalg.svd(X, compute_uv=False)\n        num_singular_values = s.shape[0]\n\n        # 4. Calculate the total energy (squared Frobenius norm of X)\n        # This is the sum of the squares of all singular values.\n        norm_X_sq = np.sum(s**2)\n\n        case_errors = []\n        for r in ranks_to_compute:\n            # 5. Calculate the reconstruction error for rank r\n            \n            # If norm_X_sq is zero, all errors are zero.\n            if norm_X_sq == 0.0:\n                 error = 0.0\n            # If rank r is >= number of singular values, the approximation is perfect.\n            elif r >= num_singular_values:\n                error = 0.0\n            else:\n                # The error norm is based on the truncated singular values (from r to end).\n                # s[r:] corresponds to sigma_{r+1}, sigma_{r+2}, ...\n                norm_err_sq = np.sum(s[r:]**2)\n                error = np.sqrt(norm_err_sq / norm_X_sq)\n            \n            case_errors.append(error)\n\n        all_results.append(case_errors)\n\n    # 6. Format the output string exactly as specified.\n    # e.g., [[err1,err2,...],[err1,err2,...]] with no spaces.\n    formatted_sublists = []\n    for res_list in all_results:\n        # Format each number to 6 decimal places.\n        formatted_numbers = [f\"{err:.6f}\" for err in res_list]\n        # Join numbers with commas and enclose in brackets.\n        formatted_sublists.append(f\"[{','.join(formatted_numbers)}]\")\n    \n    # Join the sublists with commas and enclose in outer brackets.\n    final_output = f\"[{','.join(formatted_sublists)}]\"\n\n    print(final_output)\n\nsolve()\n```", "id": "3265968"}]}