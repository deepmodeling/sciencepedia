{"hands_on_practices": [{"introduction": "本练习旨在帮助您具体理解兰索斯算法的核心机制。通过对一个简单的秩一矩阵手动执行前两步迭代，您将亲眼看到正交向量 $q_j$ 以及三对角矩阵的元素 $\\alpha_j$ 和 $\\beta_j$ 是如何生成的。这项基础练习将抽象的公式转化为具体的计算，从而揭开算法的神秘面纱。[@problem_id:2184040]", "problem": "兰索斯算法是一种用于求大型对称矩阵的特征值和特征向量的数值方法。该方法通过为克雷洛夫子空间构建一个标准正交基，并在此过程中生成一个对称三对角矩阵，该矩阵的特征值近似于原始矩阵的特征值。\n\n考虑一个对称矩阵 $A \\in \\mathbb{R}^{n \\times n}$，定义为一个秩一矩阵 $A = vv^T$，其中 $v \\in \\mathbb{R}^n$ 是一个单位范数的列向量，即 $v^T v = 1$。\n\n兰索斯算法从一个起始向量 $q_1$ 开始，该向量也是一个单位向量 ($q_1^T q_1 = 1$）。已知起始向量 $q_1$ 与 $v$ 不正交。令这两个向量之间夹角的余弦表示为 $c = v^T q_1$。给定 $0  c  1$。\n\n该算法迭代地生成一个标准正交向量序列 $q_1, q_2, \\dots$ 以及一个对称三对角矩阵 $T_k$ 的元素。进行两步的流程如下：\n1.  计算 $w_1 = A q_1$。\n2.  计算 $\\alpha_1 = q_1^T w_1$。\n3.  计算 $w'_2 = w_1 - \\alpha_1 q_1$。\n4.  计算 $\\beta_2 = \\|w'_2\\|$。如果 $\\beta_2=0$，算法终止。否则，计算 $q_2 = w'_2 / \\beta_2$。\n5.  计算 $w_2 = A q_2$。\n6.  计算 $\\alpha_2 = q_2^T w_2$。\n\n您的任务是确定算法经过两次完整迭代后生成的 $2 \\times 2$ 对称三对角矩阵 $T_2$。\n$$\nT_2 = \\begin{pmatrix}\n\\alpha_1  \\beta_2 \\\\\n\\beta_2  \\alpha_2\n\\end{pmatrix}\n$$\n请将您的最终答案表示为一个矩阵，其元素是关于 $c$ 的函数。", "solution": "我们有 $A = v v^{T}$，其中 $v^{T} v = 1$，以及一个单位起始向量 $q_{1}$ 满足 $c = v^{T} q_{1} \\in (0,1)$。应用给定的兰索斯步骤。\n\n计算\n$$\nw_{1} = A q_{1} = v(v^{T} q_{1}) = c v.\n$$\n然后\n$$\n\\alpha_{1} = q_{1}^{T} w_{1} = q_{1}^{T} (c v) = c (q_{1}^{T} v) = c^{2}.\n$$\n计算\n$$\nw'_{2} = w_{1} - \\alpha_{1} q_{1} = c v - c^{2} q_{1}.\n$$\n为了计算其范数，我们将 $v$ 分解为平行于 $q_{1}$ 和正交于 $q_{1}$ 的分量。令 $r = v - (v^T q_1)q_1 = v - c q_1$。这个向量 $r$ 与 $q_1$ 正交，其范数的平方为 $\\|r\\|^2 = \\|v\\|^2 - c^2 = 1 - c^2$。因此 $v = c q_{1} + r$。\n将此代入 $w'_2$ 的表达式中：\n$$\nw'_{2} = c (c q_{1} + r) - c^{2} q_{1} = c^2 q_1 + cr - c^2 q_1 = cr.\n$$\n因此，次对角元素为\n$$\n\\beta_{2} = \\|w'_{2}\\| = \\|cr\\| = c \\|r\\| = c \\sqrt{1 - c^{2}}.\n$$\n由于 $\\beta_2 \\ne 0$ (因为 $0  c  1$)，我们归一化得到下一个兰索斯向量：\n$$\nq_{2} = \\frac{w'_{2}}{\\beta_{2}} = \\frac{cr}{c\\sqrt{1-c^2}} = \\frac{r}{\\sqrt{1-c^2}}.\n$$\n接下来，计算第二个对角元素：\n$$\nw_2 = A q_{2} = A \\frac{r}{\\sqrt{1-c^2}} = \\frac{1}{\\sqrt{1-c^2}} v(v^T r).\n$$\n由于 $v = c q_1 + r$ 且 $q_1$ 和 $r$ 正交，我们有 $v^T r = (c q_1 + r)^T r = c(q_1^T r) + r^T r = 0 + \\|r\\|^2 = 1 - c^2$。\n因此，\n$$\nw_2 = \\frac{1}{\\sqrt{1-c^2}} v (1-c^2) = \\sqrt{1-c^2} v.\n$$\n所以\n$$\n\\alpha_{2} = q_{2}^{T} w_{2} = \\left(\\frac{r}{\\sqrt{1-c^2}}\\right)^T (\\sqrt{1-c^2} v) = r^T v = 1 - c^2.\n$$\n因此，经过两次迭代后的三对角矩阵为\n$$\nT_{2} = \\begin{pmatrix}\n\\alpha_{1}  \\beta_{2} \\\\\n\\beta_{2}  \\alpha_{2}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\nc^{2}  c \\sqrt{1 - c^{2}} \\\\\nc \\sqrt{1 - c^{2}}  1 - c^{2}\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}c^{2}  c\\sqrt{1-c^{2}} \\\\ c\\sqrt{1-c^{2}}  1-c^{2}\\end{pmatrix}}$$", "id": "2184040"}, {"introduction": "在掌握了基本迭代步骤的基础上，本练习将探索兰索斯方法一个关键而巧妙的特性：其在不变子空间中的行为。您将研究一个初始向量将算法限制在整个空间的一个较小子空间内，从而导致“理想终止”的情景。这个练习揭示了兰索斯方法为何能在远未完成全部迭代时，就精确地识别出与不变子空间相关的特征值。[@problem_id:3246897]", "problem": "考虑一个实对称矩阵 $A \\in \\mathbb{R}^{4 \\times 4}$ 和一个非零起始向量 $b \\in \\mathbb{R}^{4}$，给定如下\n$$\nA \\;=\\; \\begin{pmatrix}\n4  0  0  0 \\\\\n0  6  0  0 \\\\\n0  0  2  0 \\\\\n0  0  0  11\n\\end{pmatrix},\n\\qquad\nb \\;=\\; \\begin{pmatrix}\n2 \\\\[4pt] 1 \\\\[4pt] 0 \\\\[4pt] 0\n\\end{pmatrix}.\n$$\n子空间 $\\mathcal{S} \\;=\\; \\mathrm{span}\\{e_{1},e_{2}\\}$ 是 $A$ 的一个不变子空间，且 $b \\in \\mathcal{S}$。使用克雷洛夫子空间 $\\mathcal{K}_{k}(A,b)$ 和用于对称矩阵特征值近似的兰索斯方法的基本定义，从 $b$ 开始应用兰索斯迭代，构造最初的几个标准正交兰索斯向量和相关的对称三对角投影 $T$，直到由于不变性而发生提前终止。然后，确定最大的里兹值，其定义为终止时产生的三对角矩阵 $T$ 的最大特征值。\n\n请将您的最终答案以单个实数值的形式给出。无需四舍五入；给出精确值。不要包含单位。", "solution": "兰索斯方法通过三项递推关系为克雷洛夫子空间 $\\mathcal{K}_{k}(A,b) = \\mathrm{span}\\{b, Ab, \\dots, A^{k-1}b\\}$ 构造了一个标准正交基 $\\{q_{1}, q_{2}, \\dots, q_k\\}$。该过程生成一个对称三对角矩阵 $T_k$，其特征值（里兹值）近似于 $A$ 的特征值。\n\n我们从观察不变子空间开始。由于 $A$ 是对角矩阵 $A = \\mathrm{diag}(4,6,2,11)$，子空间 $\\mathcal{S} = \\mathrm{span}\\{e_{1},e_{2}\\}$ 是不变的，因为 $A e_{1} \\in \\mathcal{S}$ 且 $A e_{2} \\in \\mathcal{S}$。因为起始向量 $b = (2, 1, 0, 0)^\\top$ 位于 $\\mathcal{S}$ 中，所以克雷洛夫序列中的每个向量 $A^j b$ 都将保持在 $\\mathcal{S}$ 内。因此，克雷洛夫子空间 $\\mathcal{K}_{k}(A,b)$ 的最大维数为 $2$，兰索斯过程将在 $k=2$ 后提前终止。\n\n我们现在明确地执行迭代。\n**第1步：**\n- 标准化起始向量 $b$：\n$$\n\\|b\\| = \\sqrt{2^{2} + 1^{2} + 0^{2} + 0^{2}} = \\sqrt{5}, \\qquad q_{1} = \\frac{b}{\\|b\\|} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 2 \\\\[2pt] 1 \\\\[2pt] 0 \\\\[2pt] 0 \\end{pmatrix}.\n$$\n- 计算第一个对角系数 $\\alpha_{1}$：\n$$\nA q_{1} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 4 \\cdot 2 \\\\ 6 \\cdot 1 \\\\ 2 \\cdot 0 \\\\ 11 \\cdot 0 \\end{pmatrix} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 8 \\\\ 6 \\\\ 0 \\\\ 0 \\end{pmatrix}.\n$$\n$$\n\\alpha_{1} = q_{1}^{\\top} A q_{1} = \\frac{1}{5} (2 \\cdot 8 + 1 \\cdot 6) = \\frac{22}{5}.\n$$\n- 构造残差 $r_{1}$：\n$$\nr_{1} = A q_{1} - \\alpha_{1} q_{1} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 8 \\\\ 6 \\\\ 0 \\\\ 0 \\end{pmatrix} - \\frac{22}{5} \\cdot \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 2 \\\\ 1 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\frac{1}{5 \\sqrt{5}} \\begin{pmatrix} 40 - 44 \\\\ 30 - 22 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\frac{1}{5 \\sqrt{5}} \\begin{pmatrix} -4 \\\\ 8 \\\\ 0 \\\\ 0 \\end{pmatrix}.\n$$\n- 计算第一个次对角系数 $\\beta_{2}$：\n$$\n\\beta_{2} = \\|r_{1}\\| = \\frac{1}{5 \\sqrt{5}} \\sqrt{(-4)^{2} + 8^{2}} = \\frac{\\sqrt{80}}{5 \\sqrt{5}} = \\frac{4 \\sqrt{5}}{5 \\sqrt{5}} = \\frac{4}{5}.\n$$\n- 标准化以得到 $q_{2}$：\n$$\nq_{2} = \\frac{r_{1}}{\\beta_{2}} = \\frac{ \\frac{1}{5 \\sqrt{5}} \\begin{pmatrix} -4 \\\\ 8 \\\\ 0 \\\\ 0 \\end{pmatrix} }{ \\frac{4}{5} } = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} -1 \\\\ 2 \\\\ 0 \\\\ 0 \\end{pmatrix}.\n$$\n\n**第2步：**\n- 计算第二个对角系数 $\\alpha_{2}$：\n$$\nA q_{2} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 4 \\cdot (-1) \\\\ 6 \\cdot 2 \\\\ 2 \\cdot 0 \\\\ 11 \\cdot 0 \\end{pmatrix} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} -4 \\\\ 12 \\\\ 0 \\\\ 0 \\end{pmatrix}.\n$$\n$$\n\\alpha_{2} = q_{2}^{\\top} A q_{2} = \\frac{1}{5} ((-1) \\cdot (-4) + 2 \\cdot 12) = \\frac{4+24}{5} = \\frac{28}{5}.\n$$\n- 构造残差 $r_2 = A q_2 - \\alpha_2 q_2 - \\beta_2 q_1$：\n$$\nr_{2} = \\frac{1}{\\sqrt{5}} \\begin{pmatrix} -4 \\\\ 12 \\\\ 0 \\\\ 0 \\end{pmatrix} - \\frac{28}{5} \\frac{1}{\\sqrt{5}} \\begin{pmatrix} -1 \\\\ 2 \\\\ 0 \\\\ 0 \\end{pmatrix} - \\frac{4}{5} \\frac{1}{\\sqrt{5}} \\begin{pmatrix} 2 \\\\ 1 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\frac{1}{5\\sqrt{5}} \\left[ \\begin{pmatrix} -20 \\\\ 60 \\\\ 0 \\\\ 0 \\end{pmatrix} - \\begin{pmatrix} -28 \\\\ 56 \\\\ 0 \\\\ 0 \\end{pmatrix} - \\begin{pmatrix} 8 \\\\ 4 \\\\ 0 \\\\ 0 \\end{pmatrix} \\right] = \\frac{1}{5\\sqrt{5}} \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\mathbf{0}.\n$$\n- 计算第二个次对角系数 $\\beta_{3} = \\|r_{2}\\| = 0$。\n\n由于 $\\beta_3 = 0$，算法提前终止。生成的三对角矩阵为 $2 \\times 2$ 矩阵 $T_2$：\n$$\nT_2 = \\begin{pmatrix}\n\\alpha_{1}  \\beta_{2} \\\\\n\\beta_{2}  \\alpha_{2}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\frac{22}{5}  \\frac{4}{5} \\\\\n\\frac{4}{5}  \\frac{28}{5}\n\\end{pmatrix}.\n$$\n里兹值是 $T_2$ 的特征值，通过求解 $\\det( T_2 - \\lambda I ) = 0$ 得到：\n$$\n\\left(\\frac{22}{5} - \\lambda\\right)\\left(\\frac{28}{5} - \\lambda\\right) - \\left(\\frac{4}{5}\\right)^{2} = 0\n$$\n$$\n\\lambda^{2} - \\left( \\frac{22}{5} + \\frac{28}{5} \\right) \\lambda + \\frac{22 \\cdot 28}{25} - \\frac{16}{25} = 0\n$$\n$$\n\\lambda^{2} - 10 \\lambda + \\frac{616 - 16}{25} = \\lambda^{2} - 10 \\lambda + 24 = 0\n$$\n因式分解得 $(\\lambda - 4)(\\lambda - 6) = 0$，其根为 $\\lambda_1 = 4$ 和 $\\lambda_2 = 6$。\n\n因此，终止时产生的最大里兹值是 $6$。", "answer": "$$\\boxed{6}$$", "id": "3246897"}, {"introduction": "最后的这项练习将从手动计算过渡到编程探索，将理论与实践结果联系起来。通过实现兰索斯方法，您将直接观察到初始向量的选择如何决定了哪些特征值可以被找到——这正是由谱测度这一概念所决定的。本练习演示了为什么该算法可能会错过某些特征值，以及如何确保它能捕捉到我们感兴趣的特征值，从而让您对该方法的能力与局限性有更深刻的直觉。[@problem_id:3246991]", "problem": "考虑一个实对称矩阵 $\\mathbf{A} \\in \\mathbb{R}^{n \\times n}$，其特征分解为 $\\mathbf{A} = \\mathbf{U}\\mathbf{\\Lambda}\\mathbf{U}^\\top$，其中 $\\mathbf{U}$ 是正交矩阵，其列向量 $\\mathbf{u}_j$ 构成一个特征向量的标准正交基，$\\mathbf{\\Lambda} = \\mathrm{diag}(\\lambda_1,\\dots,\\lambda_n)$ 包含实特征值。对于任意单位向量 $\\mathbf{v} \\in \\mathbb{R}^n$，由 $\\mathbf{v}$ 导出的谱测度在特征值 $\\lambda_j$ 处赋予的质量为 $w_j = |\\mathbf{u}_j^\\top \\mathbf{v}|^2$。由 $(\\mathbf{A},\\mathbf{v})$ 生成的 $k$ 阶克雷洛夫子空间为 $\\mathcal{K}_k(\\mathbf{A},\\mathbf{v}) = \\mathrm{span}\\{\\mathbf{v},\\mathbf{A}\\mathbf{v},\\dots,\\mathbf{A}^{k-1}\\mathbf{v}\\}$。兰索斯方法通过一个三项递推为 $\\mathcal{K}_m(\\mathbf{A},\\mathbf{v})$ 构建一个标准正交基 $\\{\\mathbf{q}_1,\\dots,\\mathbf{q}_m\\}$，使得 $\\mathbf{A}$ 在此基下的表示为一个对称三对角矩阵 $\\mathbf{T}_m$，其对角元素为 $\\alpha_j$，非对角元素为 $\\beta_j$；$\\mathbf{T}_m$ 的特征值是 $\\mathbf{A}$ 在 $\\mathcal{K}_m(\\mathbf{A},\\mathbf{v})$ 上的瑞利-里兹 (Rayleigh-Ritz, RR) 近似特征值。如果对于某个 $j$ 有 $w_j = 0$，那么对于所有的 $k$，$\\mathbf{u}_j$ 都与 $\\mathcal{K}_k(\\mathbf{A},\\mathbf{v})$ 正交，并且 $\\lambda_j$ 不会出现在从 $\\mathbf{v}$ 开始的兰索斯方法得到的 RR 值中。相反，如果 $\\mathbf{v}$ 等于一个特征向量 $\\mathbf{u}_j$，那么兰索斯方法会立即终止，得到 $\\mathbf{T}_1 = [\\lambda_j]$，从而在一步内精确捕获 $\\lambda_j$。\n\n您的任务是实现兰索斯方法，在一个小的、完全指定的示例上具体地演示这些现象。使用矩阵\n$$\n\\mathbf{A} = \\mathrm{diag}(1,2,3,4) \\in \\mathbb{R}^{4\\times 4},\n$$\n其标准正交特征向量是标准基 $\\{\\mathbf{e}_1,\\mathbf{e}_2,\\mathbf{e}_3,\\mathbf{e}_4\\}$，特征值为 $\\lambda_1=1$, $\\lambda_2=2$, $\\lambda_3=3$, $\\lambda_4=4$。实现经典的兰索斯三项递推，使用单位起始向量 $\\mathbf{v}_1$，构建三对角矩阵 $\\mathbf{T}_m$，直到在第一个满足 $\\beta_m \\le \\varepsilon$（其中 $\\varepsilon = 10^{-12}$）的索引 $m$ 处发生中断，然后计算 $\\mathbf{T}_m$ 的特征值作为 RR 值。使用成员容差 $\\delta = 10^{-10}$ 来测试一个特定的特征值是否出现在 RR 值中。\n\n您必须从基本原理出发，论证并测试以下情况：\n- 情况 1（边界条件：零谱质量）。令 $\\mathbf{v}_1^{(\\mathrm{no3})} = \\frac{1}{\\sqrt{3}}(1,1,0,1)^\\top$，因此在 $\\lambda_3$ 上的谱质量为 $w_3 = |\\mathbf{e}_3^\\top \\mathbf{v}_1^{(\\mathrm{no3})}|^2 = 0$。运行兰索斯方法直到中断，并检查 $\\mathbf{T}_m$ 的 RR 值是否在容差 $\\delta$ 内包含 $\\lambda_3$。预期的现象是 $\\lambda_3$ 不会出现，因为 $\\mathcal{K}_k(\\mathbf{A},\\mathbf{v}_1^{(\\mathrm{no3})})$ 包含在 $\\mathrm{span}\\{\\mathbf{e}_1,\\mathbf{e}_2,\\mathbf{e}_4\\}$ 中。\n- 情况 2（边缘情况：立即捕获）。令 $\\mathbf{v}_1^{(\\mathrm{exact3})} = \\mathbf{e}_3$。运行兰索斯方法并报告直到中断所需的步数 $m$。预期的现象是 $m=1$，并且唯一的 RR 值精确等于 $\\lambda_3$。\n- 情况 3（理想情况：非零谱质量）。令 $\\mathbf{v}_1^{(\\mathrm{all})} = \\frac{1}{2}(1,1,1,1)^\\top$，因此 $w_3 = \\left|\\mathbf{e}_3^\\top \\mathbf{v}_1^{(\\mathrm{all})}\\right|^2 = \\left(\\frac{1}{2}\\right)^2 = \\frac{1}{4}$。运行兰索斯方法直到中断，并检查 $\\mathbf{T}_m$ 的 RR 值是否在容差 $\\delta$ 内包含 $\\lambda_3$。预期的现象是，一旦克雷洛夫子空间张成整个不变子空间，$\\lambda_3$ 就会出现在 RR 值中。\n\n您的实现必须遵守以下规范：\n- 通过记录标量 $\\alpha_j = \\mathbf{q}_j^\\top \\mathbf{A}\\mathbf{q}_j$ 和 $\\beta_j = \\lVert \\mathbf{w}_j \\rVert_2$ 来构建 $\\mathbf{T}_m$，其中 $\\mathbf{w}_j = \\mathbf{A}\\mathbf{q}_j - \\alpha_j \\mathbf{q}_j - \\beta_{j-1}\\mathbf{q}_{j-1}$，$\\beta_0 = 0$，$\\mathbf{q}_0 = \\mathbf{0}$，并且当 $\\beta_j > \\varepsilon$ 时，$\\mathbf{q}_{j+1} = \\mathbf{w}_j / \\beta_j$。当 $\\beta_j \\le \\varepsilon$ 时停止。\n- 计算 $\\mathbf{T}_m$ 的特征值作为 RR 值。\n- 使用指定的容差 $\\varepsilon = 10^{-12}$ 和 $\\delta = 10^{-10}$。\n\n测试套件和最终输出规范：\n- 将该方法应用于上述三种情况。对于情况 1，您的程序必须返回一个布尔值，指示 $\\lambda_3$ 是否出现在 RR 值中（预期为 false）。对于情况 2，您的程序必须返回一个整数，等于直到中断的兰索斯步数 $m$（预期为 $1$）。对于情况 3，您的程序必须返回一个布尔值，指示 $\\lambda_3$ 是否出现在 RR 值中（预期为 true）。\n- 您的程序应生成单行输出，其中包含结果，格式为方括号内的逗号分隔列表，顺序为 $[\\text{情况 1 结果}, \\text{情况 2 结果}, \\text{情况 3 结果}]$，例如 $[b_1,i_2,b_3]$，其中 $b_1$ 和 $b_3$ 是布尔值， $i_2$ 是整数。\n\n本问题中的所有量都是无量纲的，不涉及物理单位或角度单位。", "solution": "该问题要求实现兰索斯三项递推，以找到给定实对称矩阵 $\\mathbf{A} \\in \\mathbb{R}^{n \\times n}$ 的瑞利-里兹近似特征值。我们将使用此实现来具体演示兰索斯方法与起始向量谱测度相关的三个基本性质。指定的矩阵为 $\\mathbf{A} = \\mathrm{diag}(1,2,3,4)$，其特征值为 $\\lambda_j = j$（$j=1,2,3,4$），对应的标准正交特征向量为标准基向量 $\\{\\mathbf{e}_1, \\mathbf{e}_2, \\mathbf{e}_3, \\mathbf{e}_4\\}$。\n\n### 兰索斯算法\n\n兰索斯算法是一种迭代方法，它为 $m$ 阶克雷洛夫子空间 $\\mathcal{K}_m(\\mathbf{A}, \\mathbf{v}_1) = \\mathrm{span}\\{\\mathbf{v}_1, \\mathbf{A}\\mathbf{v}_1, \\dots, \\mathbf{A}^{m-1}\\mathbf{v}_1\\}$ 生成一个标准正交基 $\\{\\mathbf{q}_1, \\dots, \\mathbf{q}_m\\}$，其中 $\\mathbf{v}_1$ 是给定的单位起始向量。在此基中，$\\mathbf{A}$ 在子空间 $\\mathcal{K}_m$ 上的作用由一个对称三对角矩阵 $\\mathbf{T}_m$ 表示。\n\n该算法通过以下三项递推进行，从 $\\mathbf{q}_1 = \\mathbf{v}_1$、$\\beta_0=0$ 和 $\\mathbf{q}_0 = \\mathbf{0}$ 开始：\n对于 $j = 1, 2, \\dots, m$：\n1.  计算矩阵-向量积：$\\mathbf{z}_j = \\mathbf{A} \\mathbf{q}_j$。\n2.  计算 $\\mathbf{T}_m$ 的对角元素：$\\alpha_j = \\mathbf{q}_j^\\top \\mathbf{z}_j$。\n3.  计算未归一化的下一个兰索斯向量：$\\mathbf{w}_j = \\mathbf{z}_j - \\alpha_j \\mathbf{q}_j - \\beta_{j-1} \\mathbf{q}_{j-1}$。\n4.  计算 $\\mathbf{T}_m$ 的非对角元素：$\\beta_j = \\lVert \\mathbf{w}_j \\rVert_2$。\n5.  如果 $\\beta_j$ 小于给定的容差 $\\varepsilon$，则称算法发生（理想）中断。这表明克雷洛夫子空间在 $\\mathbf{A}$ 下是不变的。我们设置 $m=j$ 并终止。生成的子空间的维数为 $m$。\n6.  如果 $\\beta_j > \\varepsilon$，则进行归一化以找到下一个兰索斯向量：$\\mathbf{q}_{j+1} = \\mathbf{w}_j / \\beta_j$。\n\n经过 $m$ 步后，此过程产生对称三对角矩阵：\n$$\n\\mathbf{T}_m = \\begin{pmatrix}\n\\alpha_1  \\beta_1   \\\\\n\\beta_1  \\alpha_2  \\beta_2  \\\\\n  \\beta_2  \\ddots  \\ddots \\\\\n   \\ddots  \\alpha_{m-1}  \\beta_{m-1} \\\\\n    \\beta_{m-1}  \\alpha_m\n\\end{pmatrix} \\in \\mathbb{R}^{m \\times m}\n$$\n$\\mathbf{T}_m$ 的特征值，称为瑞利-里兹 (RR) 值，是 $\\mathbf{A}$ 特征值的近似值。\n\n### 测试用例分析\n\n我们现在将此算法应用于矩阵 $\\mathbf{A} = \\mathrm{diag}(1,2,3,4)$，中断容差为 $\\varepsilon = 10^{-12}$，特征值成员容差为 $\\delta = 10^{-10}$。\n\n**情况 1：零谱质量**\n\n起始向量为 $\\mathbf{v}_1^{(\\mathrm{no3})} = \\frac{1}{\\sqrt{3}}(1,1,0,1)^\\top$。此向量导出的谱测度在特征值 $\\lambda_j$ 处赋予的质量为 $w_j = |\\mathbf{e}_j^\\top \\mathbf{v}_1^{(\\mathrm{no3})}|^2$。对于 $\\lambda_3=3$，其质量为 $w_3 = |\\mathbf{e}_3^\\top \\mathbf{v}_1^{(\\mathrm{no3})}|^2 = |0|^2 = 0$。\n\n从基本原理来看，由于起始向量 $\\mathbf{v}_1^{(\\mathrm{no3})}$ 仅是 $\\{\\mathbf{e}_1, \\mathbf{e}_2, \\mathbf{e}_4\\}$ 的线性组合，它位于子空间 $S = \\mathrm{span}\\{\\mathbf{e}_1, \\mathbf{e}_2, \\mathbf{e}_4\\}$ 中。因为 $\\mathbf{A}$ 是对角矩阵，所以该子空间是 $\\mathbf{A}$ 的一个不变子空间，这意味着对于任何向量 $\\mathbf{x} \\in S$，$\\mathbf{A}\\mathbf{x}$ 也属于 $S$。因此，克雷洛夫序列中的所有向量 $\\mathbf{A}^k \\mathbf{v}_1^{(\\mathrm{no3})}$ 都将保留在 $S$ 内。兰索斯过程对这些向量进行线性组合，将生成一个同样完全位于 $S$ 内的标准正交基 $\\{\\mathbf{q}_j\\}$。最终得到的三对角矩阵 $\\mathbf{T}_m$ 是 $\\mathbf{A}$ 在克雷洛夫子空间 $\\mathcal{K}_m(\\mathbf{A}, \\mathbf{v}_1^{(\\mathrm{no3})}) \\subseteq S$ 上的表示。$\\mathbf{A}$ 在 $S$ 上的特征值为 $\\{\\lambda_1, \\lambda_2, \\lambda_4\\} = \\{1, 2, 4\\}$。因此，作为 $\\mathbf{T}_m$ 特征值的 RR 值，只能近似或精确等于 $\\{1, 2, 4\\}$ 中的成员。特征值 $\\lambda_3=3$ 不可能出现在 RR 值中。当克雷洛夫子空间张成 $S$ 时，算法应在 $m=3$ 处中断。实现将运行兰索斯算法，并检查计算出的 RR 值中是否有任何值在容差 $\\delta$ 内接近 $\\lambda_3=3$。预期结果为 `False`。\n\n**情况 2：从精确特征向量开始**\n\n起始向量为 $\\mathbf{v}_1^{(\\mathrm{exact3})} = \\mathbf{e}_3$，即对应于 $\\lambda_3=3$ 的特征向量。\n\n阶数 $k>1$ 的克雷洛夫子空间没有明确定义，因为向量立即变为线性相关的。$\\mathcal{K}_1(\\mathbf{A}, \\mathbf{e}_3) = \\mathrm{span}\\{\\mathbf{e}_3\\}$。向量 $\\mathbf{A}\\mathbf{e}_3 = \\lambda_3 \\mathbf{e}_3 = 3\\mathbf{e}_3$ 与 $\\mathbf{e}_3$ 不是线性无关的。让我们追踪兰索斯算法的第一步：\n- 初始化：$\\mathbf{q}_1 = \\mathbf{e}_3 = (0,0,1,0)^\\top$。\n- 步骤 $j=1$：\n  - $\\mathbf{z}_1 = \\mathbf{A}\\mathbf{q}_1 = \\mathbf{A}\\mathbf{e}_3 = 3\\mathbf{e}_3 = (0,0,3,0)^\\top$。\n  - $\\alpha_1 = \\mathbf{q}_1^\\top \\mathbf{z}_1 = \\mathbf{e}_3^\\top (3\\mathbf{e}_3) = 3$。\n  - $\\mathbf{w}_1 = \\mathbf{z}_1 - \\alpha_1\\mathbf{q}_1 = 3\\mathbf{e}_3 - 3\\mathbf{e}_3 = \\mathbf{0}$。\n  - $\\beta_1 = \\lVert \\mathbf{w}_1 \\rVert_2 = 0$。\n由于 $\\beta_1=0 \\le \\varepsilon$，算法在 $m=1$ 处中断。得到的矩阵是 $\\mathbf{T}_1 = [\\alpha_1] = [3]$。唯一的 RR 值是 $3$，即精确的特征值。过程在一步内终止。任务是报告步数，即 $m=1$。\n\n**情况 3：非零谱质量**\n\n起始向量为 $\\mathbf{v}_1^{(\\mathrm{all})} = \\frac{1}{2}(1,1,1,1)^\\top$。该向量在每个特征向量 $\\mathbf{e}_j$ 方向上都有非零分量。在 $\\lambda_3=3$ 上的谱质量为 $w_3 = |\\mathbf{e}_3^\\top \\mathbf{v}_1^{(\\mathrm{all})}|^2 = |1/2|^2 = 1/4 \\neq 0$。\n\n由于起始向量在任何特征向量方向上都没有缺失，克雷洛夫子空间 $\\mathcal{K}_k(\\mathbf{A}, \\mathbf{v}_1^{(\\mathrm{all})})$ 的维数将随每一步增加，直到它张成整个空间 $\\mathbb{R}^4$。这是因为矩阵 $\\mathbf{A}$ 具有不同的特征值。因此，兰索斯算法将运行 $m=4$ 步，为 $\\mathbb{R}^4$ 生成一个基。得到的矩阵 $\\mathbf{T}_4$ 将是一个 $4 \\times 4$ 的三对角矩阵。兰索斯关系为 $\\mathbf{A} \\mathbf{Q}_4 = \\mathbf{Q}_4 \\mathbf{T}_4$，其中 $\\mathbf{Q}_4$ 是列为 $\\{\\mathbf{q}_1, \\mathbf{q}_2, \\mathbf{q}_3, \\mathbf{q}_4\\}$ 的正交矩阵。这意味着 $\\mathbf{T}_4 = \\mathbf{Q}_4^\\top \\mathbf{A} \\mathbf{Q}_4$，所以 $\\mathbf{T}_4$ 与 $\\mathbf{A}$ 正交相似。因此，$\\mathbf{T}_4$ 必须具有与 $\\mathbf{A}$ 相同的特征值，即 $\\{1, 2, 3, 4\\}$。算法应在 $m=4$ 处终止，因为 $\\mathcal{K}_4$ 是一个不变子空间（即整个 $\\mathbb{R}^4$），导致 $\\beta_4=0$。RR 值的集合将包含 $\\lambda_3=3$。实现将通过检查是否有 RR 值在 $\\delta$ 容差内接近 $3$ 来证实这一点。预期结果为 `True`。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef lanczos(A, v_start, epsilon):\n    \"\"\"\n    Implements the Lanczos three-term recurrence.\n\n    Args:\n        A (np.ndarray): The real symmetric matrix.\n        v_start (np.ndarray): The starting unit vector.\n        epsilon (float): The breakdown tolerance for beta.\n\n    Returns:\n        tuple: A tuple containing:\n            - m (int): The number of steps until breakdown.\n            - T_m (np.ndarray): The m x m symmetric tridiagonal matrix.\n    \"\"\"\n    n = A.shape[0]\n    \n    # Ensure v_start is a unit vector\n    q = v_start / np.linalg.norm(v_start)\n    q_prev = np.zeros(n)\n    \n    alphas = []\n    betas_off_diag = []\n    \n    m = 0\n    \n    for j in range(n):  # Loop corresponds to j=1, 2, ..., n\n        z = A @ q\n        alpha = q.T @ z\n        alphas.append(alpha)\n        \n        # w = z - alpha*q - beta_{j-1}*q_{j-1}\n        w = z - alpha * q\n        if j > 0:\n            w -= betas_off_diag[-1] * q_prev\n        \n        beta = np.linalg.norm(w)\n        \n        m = j + 1\n        if beta = epsilon:\n            break\n        \n        betas_off_diag.append(beta)\n        q_prev = q\n        q = w / beta\n    \n    # Construct the tridiagonal matrix T_m of size m x m\n    T_m = np.diag(alphas)\n    if m > 1:\n        T_m += np.diag(betas_off_diag, k=1)\n        T_m += np.diag(betas_off_diag, k=-1)\n        \n    return m, T_m\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the three specified cases.\n    \"\"\"\n    # Define matrix, target eigenvalue, and tolerances\n    A = np.diag([1.0, 2.0, 3.0, 4.0])\n    lambda3 = 3.0\n    epsilon = 1e-12\n    delta = 1e-10\n\n    # Define starting vectors for the three cases\n    v_no3 = np.array([1.0, 1.0, 0.0, 1.0]) / np.sqrt(3.0)\n    v_exact3 = np.array([0.0, 0.0, 1.0, 0.0])\n    v_all = np.array([1.0, 1.0, 1.0, 1.0]) / 2.0\n    \n    test_cases = [\n        {\"name\": \"Case 1\", \"vector\": v_no3},\n        {\"name\": \"Case 2\", \"vector\": v_exact3},\n        {\"name\": \"Case 3\", \"vector\": v_all},\n    ]\n\n    results = []\n\n    # Process Case 1: Zero spectral mass on lambda_3\n    m1, T1 = lanczos(A, test_cases[0][\"vector\"], epsilon)\n    rr_values1 = np.linalg.eigvalsh(T1)\n    case1_result = np.any(np.isclose(rr_values1, lambda3, atol=delta))\n    results.append(case1_result)\n\n    # Process Case 2: Exact eigenvector start\n    m2, T2 = lanczos(A, test_cases[1][\"vector\"], epsilon)\n    case2_result = m2\n    results.append(case2_result)\n\n    # Process Case 3: Non-zero spectral mass on lambda_3\n    m3, T3 = lanczos(A, test_cases[2][\"vector\"], epsilon)\n    rr_values3 = np.linalg.eigvalsh(T3)\n    case3_result = np.any(np.isclose(rr_values3, lambda3, atol=delta))\n    results.append(case3_result)\n    \n    # The problem asks for a list of a boolean, an integer, and a boolean.\n    # Convert booleans to lowercase strings for the output format.\n    print(f\"[{str(results[0]).lower()},{results[1]},{str(results[2]).lower()}]\")\n\nsolve()\n```", "id": "3246991"}]}