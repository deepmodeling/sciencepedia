{"hands_on_practices": [{"introduction": "为了真正掌握奇异值分解 (SVD) 的几何内涵，最好的方法莫过于亲手构造一个线性变换。这个练习将引导你逆向工作：给定一个变换对单位圆作用后的期望几何形状——一个特定大小和方向的椭圆——你的任务是构建出实现这一变换的矩阵 $A$。通过这个过程，你将深刻理解 SVD 分解 $A=U\\Sigma V^{\\top}$ 中的每个组成部分（旋转、缩放、再旋转）是如何协同作用，共同塑造最终的几何变换的。[@problem_id:3234724]", "problem": "考虑一个实 $2 \\times 2$ 矩阵 $A$ 在单位圆 $\\{x \\in \\mathbb{R}^{2} : \\|x\\|_{2} = 1\\}$ 上的几何作用。仅使用奇异值分解 (SVD) 的基本定义及其作为正交变换和轴向缩放复合的几何解释，构造一个具体的实 $2 \\times 2$ 矩阵 $A$，使得单位圆在该矩阵作用下的像是以原点为中心、长半轴长度为 $\\sigma_{1} = 3$、短半轴长度为 $\\sigma_{2} = 1$ 的椭圆，且其主轴相对于 x 轴逆时针倾斜 $45$ 度（即 $\\pi/4$ 弧度）。在所有具有此性质的可能矩阵中，选择右奇异向量与 $\\mathbb{R}^{2}$ 的标准基重合的那一个。给出具体的矩阵 $A$。无需四舍五入。", "solution": "该问题要求基于一个实 $2 \\times 2$ 矩阵 $A$ 在单位圆上的几何作用及其奇异值分解 (SVD) 的一个约束条件，来构造这个特定的矩阵。\n\n首先，我们验证问题陈述的有效性。\n已知条件如下：\n1.  A 是一个实 $2 \\times 2$ 矩阵。\n2.  单位圆 $\\{x \\in \\mathbb{R}^{2} : \\|x\\|_{2} = 1\\}$ 在变换 $A$ 下的像是一个椭圆。\n3.  该椭圆以原点为中心。\n4.  该椭圆的长半轴长度为 $\\sigma_1 = 3$。\n5.  该椭圆的短半轴长度为 $\\sigma_2 = 1$。\n6.  该椭圆的主轴相对于标准笛卡尔坐标轴逆时针倾斜 $\\pi/4$ 弧度（$45$ 度）。\n7.  $A$ 的右奇异向量是 $\\mathbb{R}^2$ 的标准基向量。\n\n该问题在科学上基于线性代数理论，特别是奇异值分解。只要椭圆方向的描述以标准的几何意义来解释，该问题就是客观且适定的。这种解释消除了歧义，并导向一个唯一解。因此，该问题被认为是有效的。\n\n我们通过构造矩阵 $A$ 的 SVD 来求解，其形式为 $A = U\\Sigma V^{\\top}$。$A$ 对向量 $x$ 的几何作用可以理解为三个连续操作：由 $V^{\\top}$ 施加的旋转/反射，由 $\\Sigma$ 施加的轴向缩放，以及由 $U$ 施加的另一次旋转/反射。在 $A$ 作用下，单位圆的像是椭圆，其主轴与 $U$ 的列（左奇异向量）对齐，其半轴长度是 $\\Sigma$ 对角线上的奇异值。\n\n1.  **确定奇异值矩阵 $\\Sigma$。**\n    椭圆半轴的长度由 $A$ 的奇异值给出。问题指明长半轴长度为 $\\sigma_1 = 3$，短半轴长度为 $\\sigma_2 = 1$。按照惯例，奇异值按降序排列。因此，对角矩阵 $\\Sigma$ 为：\n    $$\n    \\Sigma = \\begin{pmatrix} \\sigma_1 & 0 \\\\ 0 & \\sigma_2 \\end{pmatrix} = \\begin{pmatrix} 3 & 0 \\\\ 0 & 1 \\end{pmatrix}\n    $$\n\n2.  **确定右奇异向量矩阵 $V$。**\n    正交矩阵 $V$ 的列是 $A$ 的右奇异向量。问题明确指出这些是 $\\mathbb{R}^2$ 的标准基向量。令 $\\mathbf{v}_1 = \\mathbf{e}_1 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ 且 $\\mathbf{v}_2 = \\mathbf{e}_2 = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$。\n    因此，矩阵 $V$ 是 $2 \\times 2$ 单位矩阵：\n    $$\n    V = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = I\n    $$\n    因此，其转置 $V^{\\top}$ 也是单位矩阵，$V^{\\top} = I$。\n\n3.  **确定左奇异向量矩阵 $U$。**\n    正交矩阵 $U$ 的列是 $A$ 的左奇异向量，记为 $\\mathbf{u}_1$ 和 $\\mathbf{u}_2$。这些向量定义了所得椭圆主轴的方向。向量 $\\mathbf{u}_1$ 对应于长轴（长度 $\\sigma_1 = 3$），向量 $\\mathbf{u}_2$ 对应于短轴（长度 $\\sigma_2 = 1$）。\n    问题指出主轴相对于标准坐标轴逆时针倾斜 $\\pi/4$ 弧度。这意味着标准正交基 $(\\mathbf{u}_1, \\mathbf{u}_2)$ 是通过将标准基 $(\\mathbf{e}_1, \\mathbf{e}_2)$ 旋转 $\\pi/4$ 角度得到的。表示此旋转的矩阵是标准的 $2 \\times 2$ 旋转矩阵 $R_{\\theta}$，其中 $\\theta = \\pi/4$。这个矩阵就是我们的矩阵 $U$。\n    $U$ 的列为：\n    $$\n    \\mathbf{u}_1 = R_{\\pi/4} \\mathbf{e}_1 = \\begin{pmatrix} \\cos(\\pi/4) \\\\ \\sin(\\pi/4) \\end{pmatrix} = \\begin{pmatrix} \\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} \\end{pmatrix}\n    $$\n    $$\n    \\mathbf{u}_2 = R_{\\pi/4} \\mathbf{e}_2 = \\begin{pmatrix} -\\sin(\\pi/4) \\\\ \\cos(\\pi/4) \\end{pmatrix} = \\begin{pmatrix} -\\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} \\end{pmatrix}\n    $$\n    因此，矩阵 $U$ 为：\n    $$\n    U = \\begin{pmatrix} \\frac{1}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} & \\frac{1}{\\sqrt{2}} \\end{pmatrix} = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 & -1 \\\\ 1 & 1 \\end{pmatrix}\n    $$\n\n4.  **构造矩阵 $A$。**\n    现在我们使用已确定的分量 $U$、$\\Sigma$ 和 $V^{\\top}$ 来组装矩阵 $A$。\n    $$\n    A = U \\Sigma V^{\\top} = \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 & -1 \\\\ 1 & 1 \\end{pmatrix} \\right) \\begin{pmatrix} 3 & 0 \\\\ 0 & 1 \\end{pmatrix} \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}^{\\top}\n    $$\n    由于 $V^{\\top} = I$，表达式简化为 $A = U\\Sigma$。\n    $$\n    A = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 & -1 \\\\ 1 & 1 \\end{pmatrix} \\begin{pmatrix} 3 & 0 \\\\ 0 & 1 \\end{pmatrix}\n    $$\n    执行矩阵乘法：\n    $$\n    A = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} (1)(3) + (-1)(0) & (1)(0) + (-1)(1) \\\\ (1)(3) + (1)(0) & (1)(0) + (1)(1) \\end{pmatrix}\n    $$\n    $$\n    A = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 3 & -1 \\\\ 3 & 1 \\end{pmatrix}\n    $$\n    写出具有明确分量的矩阵：\n    $$\n    A = \\begin{pmatrix} \\frac{3}{\\sqrt{2}} & -\\frac{1}{\\sqrt{2}} \\\\ \\frac{3}{\\sqrt{2}} & \\frac{1}{\\sqrt{2}} \\end{pmatrix}\n    $$\n    这就是满足问题陈述中所有条件的具体实 $2 \\times 2$ 矩阵。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{3}{\\sqrt{2}}  -\\frac{1}{\\sqrt{2}} \\\\ \\frac{3}{\\sqrt{2}}  \\frac{1}{\\sqrt{2}} \\end{pmatrix}}\n$$", "id": "3234724"}, {"introduction": "上一个练习展示了如何通过拉伸和旋转将单位圆变换为椭圆。现在，我们来思考一个更微妙的情形：如果变换不仅是拉伸，还会“压扁”空间，将一个维度完全消除，会发生什么？这个练习通过分析一个投影矩阵来探讨秩亏变换，它将整个二维平面映射到一条直线上。你会发现 SVD 是如何通过零奇异值来优雅地捕捉这种维度坍缩的，这是理解 SVD 在数据压缩和降维等应用中强大功能的关键一步。[@problem_id:3234717]", "problem": "考虑线性映射 $P:\\mathbb{R}^{2}\\to\\mathbb{R}^{2}$，它将每个向量正交投影到直线 $y=2x$ 上。从欧几里得内积、到一维子空间的正交投影以及奇异值分解（SVD）作为因子分解 $A=U\\Sigma V^{\\top}$（其中 $U$ 和 $V$ 是正交矩阵，$\\Sigma$ 是具有非负元素的对角矩阵）的定义出发，完成以下任务：\n\n- 通过用直线 $y=2x$ 的单位方向向量表示 $P$，构造其矩阵表示。\n- 从基本原理出发，通过确定 $P$ 的奇异值以及相应的左右奇异向量，来求出其奇异值分解（SVD）。\n- 利用 SVD 的几何解释，描述 $P$ 如何变换 $\\mathbb{R}^{2}$ 中的单位圆，包括所得图像的半轴长度和方向，并评论该图像是否为退化椭圆。\n\n使用 $\\mathrm{pmatrix}$ 环境，将你的最终答案表示为一行有序的奇异值对 $(\\sigma_{1},\\sigma_{2})$。无需四舍五入。", "solution": "问题要求构造投影矩阵 $P$，求其奇异值分解（SVD），并对其作用于单位圆的几何意义进行解释。\n\n首先，我们构造线性映射 $P$ 的矩阵表示，该映射将 $\\mathbb{R}^{2}$ 中的向量正交投影到直线 $y=2x$ 上。\n直线 $y=2x$ 的一个方向向量是 $\\mathbf{d} = \\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$。要创建一个正交投影矩阵，我们首先需要这个方向上的单位向量。$\\mathbf{d}$ 的范数为 $\\|\\mathbf{d}\\| = \\sqrt{1^{2} + 2^{2}} = \\sqrt{5}$。\n因此，单位方向向量是 $\\mathbf{u} = \\frac{\\mathbf{d}}{\\|\\mathbf{d}\\|} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$。\n投影到由单位向量 $\\mathbf{u}$ 张成的一维子空间的正交投影矩阵 $P$ 由外积 $P = \\mathbf{u}\\mathbf{u}^{\\top}$ 给出。\n代入我们的向量 $\\mathbf{u}$：\n$$P = \\left(\\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}\\right) \\left(\\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 & 2 \\end{pmatrix}\\right) = \\frac{1}{5}\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}\\begin{pmatrix} 1 & 2 \\end{pmatrix} = \\frac{1}{5}\\begin{pmatrix} 1 \\cdot 1 & 1 \\cdot 2 \\\\ 2 \\cdot 1 & 2 \\cdot 2 \\end{pmatrix} = \\frac{1}{5}\\begin{pmatrix} 1 & 2 \\\\ 2 & 4 \\end{pmatrix}$$\n这就是投影 $P$ 的矩阵表示。\n\n接下来，我们确定 $P$ 的 SVD。SVD 是一个因子分解 $P = U\\Sigma V^{\\top}$。奇异值 $\\sigma_{i}$ 构成了 $\\Sigma$ 的对角线，它们是矩阵 $P^{\\top}P$ 的特征值的平方根。\n矩阵 $P$ 是对称的，即 $P^{\\top} = P$。因此，$P^{\\top}P = P^{2}$。\n对于投影矩阵，它是一个幂等算子，意味着 $P^{2} = P$。我们可以验证这一点：\n$$P^{2} = \\left(\\frac{1}{5}\\begin{pmatrix} 1 & 2 \\\\ 2 & 4 \\end{pmatrix}\\right)\\left(\\frac{1}{5}\\begin{pmatrix} 1 & 2 \\\\ 2 & 4 \\end{pmatrix}\\right) = \\frac{1}{25}\\begin{pmatrix} 1(1)+2(2) & 1(2)+2(4) \\\\ 2(1)+4(2) & 2(2)+4(4) \\end{pmatrix} = \\frac{1}{25}\\begin{pmatrix} 5 & 10 \\\\ 10 & 20 \\end{pmatrix} = \\frac{1}{5}\\begin{pmatrix} 1 & 2 \\\\ 2 & 4 \\end{pmatrix} = P$$\n因此，我们只需要找到 $P$ 本身的特征值。投影矩阵的特征值总是 $1$ 和 $0$。\n- 任何位于投影直线上的向量都是特征值为 $\\lambda=1$ 的特征向量，因为 $P\\mathbf{x} = \\mathbf{x}$。对应于 $\\lambda_1=1$ 的特征空间是直线 $y=2x$。\n- 任何与投影直线正交的向量都会被映射到零向量，因此它是特征值为 $\\lambda=0$ 的特征向量。对应于 $\\lambda_2=0$ 的特征空间是与 $y=2x$ 正交的直线，即 $y=-x/2$。\n\n$P$ 的特征值是 $\\lambda_{1}=1$ 和 $\\lambda_{2}=0$。奇异值是这些特征值的平方根，按非增序排列：\n$\\sigma_{1} = \\sqrt{\\lambda_{1}} = \\sqrt{1} = 1$\n$\\sigma_{2} = \\sqrt{\\lambda_{2}} = \\sqrt{0} = 0$\n所以，矩阵 $\\Sigma$ 是：\n$$\n\\Sigma = \\begin{pmatrix} 1 & 0 \\\\ 0 & 0 \\end{pmatrix}\n$$\n\n$V$ 的列（右奇异向量，$\\mathbf{v}_i$）是 $P^{\\top}P = P$ 的标准正交特征向量。\n- 对于 $\\lambda_{1}=1$，特征向量是沿直线 $y=2x$ 的任意向量。我们选择单位向量 $\\mathbf{v}_{1} = \\mathbf{u} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$。\n- 对于 $\\lambda_{2}=0$，特征向量必须与 $\\mathbf{v}_1$ 正交。与 $\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$ 正交的一个向量是 $\\begin{pmatrix} -2 \\\\ 1 \\end{pmatrix}$。将该向量单位化得到 $\\mathbf{v}_{2} = \\frac{1}{\\sqrt{(-2)^{2}+1^{2}}}\\begin{pmatrix} -2 \\\\ 1 \\end{pmatrix} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} -2 \\\\ 1 \\end{pmatrix}$。\n矩阵 $V$ 由这些向量作为列构成：$V = \\begin{pmatrix} \\mathbf{v}_{1} & \\mathbf{v}_{2} \\end{pmatrix} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 & -2 \\\\ 2 & 1 \\end{pmatrix}$。\n\n$U$ 的列（左奇异向量，$\\mathbf{u}_i$）由关系 $P\\mathbf{v}_i = \\sigma_i \\mathbf{u}_i$ 确定。\n- 对于 $\\sigma_{1}=1$：$\\mathbf{u}_{1} = \\frac{1}{\\sigma_{1}}P\\mathbf{v}_{1} = \\frac{1}{1}P\\mathbf{v}_{1}$。由于 $\\mathbf{v}_1$ 是 $P$ 的一个特征值为 $1$ 的特征向量，所以 $P\\mathbf{v}_1 = \\mathbf{v}_1$。因此，$\\mathbf{u}_{1} = \\mathbf{v}_{1} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$。\n- 对于 $\\sigma_{2}=0$：关系式为 $P\\mathbf{v}_2 = 0\\cdot\\mathbf{u}_2 = \\mathbf{0}$，这是成立的，因为 $\\mathbf{v}_2$ 在 $P$ 的零空间中。$\\mathbf{u}_2$ 必须是与 $\\mathbf{u}_1$ 正交的单位向量。我们可以选择 $\\mathbf{u}_2 = \\mathbf{v}_2 = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} -2 \\\\ 1 \\end{pmatrix}$。\n矩阵 $U$ 由这些向量作为列构成：$U = \\begin{pmatrix} \\mathbf{u}_{1} & \\mathbf{u}_{2} \\end{pmatrix} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 & -2 \\\\ 2 & 1 \\end{pmatrix}$。\n注意，由于 $P$ 是对称半正定矩阵，可以选择 $U=V$。\n\n$P$ 的 SVD 是 $P = U\\Sigma V^{\\top} = \\left(\\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 & -2 \\\\ 2 & 1 \\end{pmatrix}\\right) \\begin{pmatrix} 1 & 0 \\\\ 0 & 0 \\end{pmatrix} \\left(\\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 & 2 \\\\ -2 & 1 \\end{pmatrix}\\right)$。\n\n最后，我们提供 $P$ 如何变换 $\\mathbb{R}^{2}$ 中单位圆的几何解释。SVD 为这一变换提供了一个清晰的图像。任何矩阵 $A=U\\Sigma V^{\\top}$ 对单位圆的作用可以看作是三个操作的序列：\n1. 由 $V^{\\top}$ 进行的旋转/反射，它将标准基与右奇异向量 $\\mathbf{v}_i$ 对齐。\n2. 沿着这些新轴进行缩放，其中沿轴 $\\mathbf{v}_i$ 的缩放因子是奇异值 $\\sigma_i$。\n3. 由 $U$ 进行的旋转/反射，它将缩放后的轴与左奇异向量 $\\mathbf{u}_i$ 对齐。\n\n对于矩阵 $P$，单位圆被变换成一个椭圆，其半轴由向量 $\\sigma_{i}\\mathbf{u}_{i}$ 给出。\n- 第一个半轴的长度为 $\\sigma_{1}=1$，方向为 $\\mathbf{u}_{1} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$。这个向量位于直线 $y=2x$ 上。\n- 第二个半轴的长度为 $\\sigma_{2}=0$，方向为 $\\mathbf{u}_{2} = \\frac{1}{\\sqrt{5}}\\begin{pmatrix} -2 \\\\ 1 \\end{pmatrix}$。这个向量与直线 $y=2x$ 正交。\n\n由于其中一个半轴的长度为 $0$，所得图像是一个**退化椭圆**。该变换将整个单位圆压缩到一个一维对象上：一条线段。这条线段位于直线 $y=2x$ 上，并由点集 $\\{c\\mathbf{u}_1 : c \\in [-1, 1]\\}$ 定义。线段的端点是 $-\\mathbf{u}_1$ 和 $\\mathbf{u}_1$，所以它从 $(-\\frac{1}{\\sqrt{5}}, -\\frac{2}{\\sqrt{5}})$ 延伸到 $(\\frac{1}{\\sqrt{5}}, \\frac{2}{\\sqrt{5}})$。这个结果是符合预期的，因为到一条直线上的正交投影必须将平面上的所有点映射到该直线上。\n\n奇异值的有序对是 $(\\sigma_{1}, \\sigma_{2})=(1, 0)$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 1  0 \\end{pmatrix}}\n$$", "id": "3234717"}, {"introduction": "掌握了二维空间中的基本原理后，让我们将 SVD 应用于一个真实世界的三维问题中。在计算生物学、机器人学和计算机视觉等领域，一个常見的任务是找到最佳的旋转方式，以对齐两个处于不同位置和姿态的点云（例如，一个分子的两种构象）。这个问题，即“正交普罗克汝斯忒斯问题”(Orthogonal Procrustes problem)，可以通过 SVD 得到一个优美且最优的解。这个实践将让你亲自实现该算法，体验 SVD 在解决复杂几何对齐问题中的强大威力，并理解为何它是在噪声数据中寻找最佳旋转的核心工具。[@problem_id:3234685]", "problem": "给定两组三维点集，它们代表同一分子在不同空间构象下的坐标。设 $X \\in \\mathbb{R}^{N \\times 3}$ 和 $Y \\in \\mathbb{R}^{N \\times 3}$ 表示这两个点云，其中每一行是一个点。任务是计算最优旋转矩阵 $R \\in \\mathbb{R}^{3 \\times 3}$（满足 $R^{\\top} R = I$ 和 $\\det(R) = 1$），以最小化中心化后点云之间的平方弗罗贝尼乌斯范数差异。请从以下基本概念出发：弗罗贝尼乌斯范数的定义、正交矩阵的定义以及奇异值分解（SVD）的定义。推导为什么通过使用奇异值分解（SVD）对齐中心化点云的互协方差的主方向可以得到最小值解，并确保这是一个行列式为1的真旋转。\n\n计算出 $R$ 后，通过结合旋转和从质心推断出的平移，将 $X$ 对齐到 $Y$，并计算以下诊断指标：\n1. 对齐后的 $X$ 和 $Y$ 之间的均方根偏差（RMSD）。\n2. 与正交性的弗罗贝尼乌斯范数偏差，$\\| R^{\\top} R - I \\|_F$。\n3. 行列式 $\\det(R)$。\n\n所有浮点数输出必须四舍五入到6位小数。无需输出任何角度，但在构建测试套件时使用的任何角度均以弧度为单位指定。\n\n使用以下四个测试用例。对于每个用例，数组 $X$ 被明确指定，而 $Y$ 是通过已知的刚性变换（旋转和平移）构建的，其中一个用例可能包含反射以测试行列式校正。在所有情况下，$Y$ 的构建方式为 $Y = X R^{\\top} + t$，除非明确包含额外的反射矩阵 $S$。\n\n测试用例 1（正常路径）：\n- 点 $X_1$：\n  - ($0$, $0$, $0$)\n  - ($1$, $0$, $0$)\n  - ($0$, $1$, $0$)\n  - ($0$, $0$, $1$)\n  - ($1$, $1.2$, $-0.7$)\n  - ($-0.3$, $2.1$, $-1.5$)\n- 旋转：绕 $z$ 轴旋转角度 $\\theta = \\pi/6$ 弧度。\n- 平移 $t_1$：($1$, $-2$, $0.5$)。\n- 构建方式：$Y_1 = X_1 R_z(\\theta)^{\\top} + t_1$。\n\n测试用例 2（单位对齐）：\n- 点 $X_2$：\n  - ($0.2$, $-1.3$, $2$)\n  - ($3.5$, $0.4$, $-0.2$)\n  - ($1.1$, $1$, $1$)\n  - ($2.1$, $-0.9$, $0.3$)\n- 构建方式：$Y_2 = X_2$。\n\n测试用例 3（用于验证行列式校正的反射陷阱）：\n- 点 $X_3$：\n  - ($0$, $0$, $0$)\n  - ($1$, $2$, $3$)\n  - ($-1$, $-0.5$, $0.7$)\n  - ($0.8$, $-1.2$, $2.5$)\n- 旋转：绕 $y$ 轴旋转角度 $\\theta = \\pi/4$ 弧度。\n- 反射矩阵 $S = \\operatorname{diag}(1, 1, -1)$，即关于平面 $z = 0$ 的反射。\n- 平移 $t_3$：($-0.5$, $2$, $1$)。\n- 构建方式：$Y_3 = X_3 R_y(\\theta)^{\\top} S^{\\top} + t_3$。\n\n测试用例 4（退化几何：共线的两点）：\n- 点 $X_4$：\n  - ($0$, $0$, $0$)\n  - ($2$, $0$, $0$)\n- 旋转：绕 $x$ 轴旋转角度 $\\theta = \\pi/3$ 弧度。\n- 平移 $t_4$：($0$, $1$, $-1$)。\n- 构建方式：$Y_4 = X_4 R_x(\\theta)^{\\top} + t_4$。\n\n对于每个测试用例，通过将 $X$ 和 $Y$ 在其质心处中心化，形成中心化点云的 $3 \\times 3$ 互协方差矩阵，执行奇异值分解（SVD），并强制 $\\det(R) = 1$ 来计算最优旋转 $R$。然后计算：\n- 通过 $R$ 对齐的 $X$ 与 $Y$ 之间的均方根偏差（RMSD）。\n- 正交性偏差 $\\| R^{\\top} R - I \\|_F$。\n- 行列式 $\\det(R)$。\n\n您的程序应生成单行输出，其中包含一个以方括号括起来的逗号分隔列表形式的结果。每个测试用例贡献一个包含三个浮点数的子列表，顺序为 $[\\text{RMSD}, \\| R^{\\top} R - I \\|_F, \\det(R)]$，四舍五入到6位小数，最终形成一个嵌套列表，如 $[[r_1,o_1,d_1],[r_2,o_2,d_2],[r_3,o_3,d_3],[r_4,o_4,d_4]]$。", "solution": "用户提供的问题是一个有效且适定的科学问题，涉及奇异值分解（SVD）在对齐两个三维点云背景下的几何解释。该问题是普罗克汝斯忒斯分析（Procrustes analysis）的一个经典实例，特别是寻找最优旋转以叠加两个分子构象。解决方案通过 Kabsch 算法获得，其推导如下。\n\n### 1. 问题表述\n\n给定三维空间中的两组 $N$ 个点，由矩阵 $X \\in \\mathbb{R}^{N \\times 3}$ 和 $Y \\in \\mathbb{R}^{N \\times 3}$ 表示。我们的目标是找到最优的刚性变换（旋转 $R$ 和平移 $t$），以最小化 $X$ 的变换点与 $Y$ 中相应点之间的均方误差。问题陈述通过专注于最小化中心化点云之间的差异来简化此过程，这是我们将要论证的关键步骤。目标是找到一个旋转矩阵 $R \\in \\mathbb{R}^{3 \\times 3}$，它最小化旋转后的中心化点云 $X_c$ 与中心化点云 $Y_c$ 之间差值的平方弗罗贝尼乌斯范数：\n$$ \\min_{R} \\lVert X_c R^{\\top} - Y_c \\rVert_F^2 $$\n约束条件是 $R$ 是一个真旋转矩阵，意味着它是正交的（$R^{\\top} R = I$，其中 $I$ 是 $3 \\times 3$ 单位矩阵）并且行列式为 $+1$（$\\det(R) = 1$）。\n\n### 2. 解耦平移和旋转\n\n首先，我们证明寻找最优旋转和平移的问题可以解耦。完整的优化目标是最小化欧几里得距离的平方和：\n$$ E(R, t) = \\sum_{i=1}^N \\lVert (x_i R^{\\top} + t) - y_i \\rVert_2^2 $$\n其中 $x_i$ 和 $y_i$ 分别是 $X$ 和 $Y$ 的第 $i$ 个行向量（点），$t$ 是平移向量。\n\n为了找到固定旋转 $R$ 下的最优平移 $t$，我们对 $E$ 关于 $t$ 求导，并令梯度为零。\n$$ \\frac{\\partial E}{\\partial t} = \\sum_{i=1}^N 2(x_i R^{\\top} + t - y_i) = 0 $$\n$$ N t + \\left(\\sum_{i=1}^N x_i\\right) R^{\\top} - \\sum_{i=1}^N y_i = 0 $$\n设点云的质心为 $\\bar{x} = \\frac{1}{N}\\sum_{i=1}^N x_i$ 和 $\\bar{y} = \\frac{1}{N}\\sum_{i=1}^N y_i$。方程变为：\n$$ N t + N \\bar{x} R^{\\top} - N \\bar{y} = 0 $$\n$$ t = \\bar{y} - \\bar{x} R^{\\top} $$\n这表明最优平移将旋转后的 $X$ 点云的质心与 $Y$ 点云的质心对齐。将这个最优 $t$ 代回目标函数得到：\n$$ E(R) = \\sum_{i=1}^N \\lVert (x_i R^{\\top} + \\bar{y} - \\bar{x} R^{\\top}) - y_i \\rVert_2^2 = \\sum_{i=1}^N \\lVert (x_i - \\bar{x})R^{\\top} - (y_i - \\bar{y}) \\rVert_2^2 $$\n设 $X_c$ 和 $Y_c$ 为中心化坐标矩阵，其行为 $x_{c,i} = x_i - \\bar{x}$ 和 $y_{c,i} = y_i - \\bar{y}$。目标函数简化为最小化中心化点云之间差值的平方弗罗贝尼乌斯范数，如问题中所述：\n$$ E(R) = \\lVert X_c R^{\\top} - Y_c \\rVert_F^2 $$\n我们现在的任务是找到最优的旋转矩阵 $R$ 来最小化这个表达式。\n\n### 3. 使用奇异值分解（SVD）进行旋转优化\n\n我们展开弗罗贝尼乌斯范数项：\n$$ \\lVert X_c R^{\\top} - Y_c \\rVert_F^2 = \\mathrm{tr}\\left( (X_c R^{\\top} - Y_c)^{\\top} (X_c R^{\\top} - Y_c) \\right) $$\n$$ = \\mathrm{tr}\\left( (R X_c^{\\top} - Y_c^{\\top}) (X_c R^{\\top} - Y_c) \\right) $$\n$$ = \\mathrm{tr}(R X_c^{\\top} X_c R^{\\top} - R X_c^{\\top} Y_c - Y_c^{\\top} X_c R^{\\top} + Y_c^{\\top} Y_c) $$\n利用迹算子的线性和循环性质（$\\mathrm{tr}(A+B) = \\mathrm{tr}(A)+\\mathrm{tr}(B)$ 和 $\\mathrm{tr}(ABC) = \\mathrm{tr}(CAB)$）：\n$$ E(R) = \\mathrm{tr}(X_c^{\\top} X_c R^{\\top} R) - \\mathrm{tr}(R X_c^{\\top} Y_c) - \\mathrm{tr}(Y_c^{\\top} X_c R^{\\top}) + \\mathrm{tr}(Y_c^{\\top} Y_c) $$\n由于 $R$ 是正交的，所以 $R^{\\top} R = I$。此外，$\\mathrm{tr}(M^{\\top}) = \\mathrm{tr}(M)$，因此 $\\mathrm{tr}(Y_c^{\\top} X_c R^{\\top}) = \\mathrm{tr}((Y_c^{\\top} X_c R^{\\top})^{\\top}) = \\mathrm{tr}(R X_c^{\\top} Y_c)$。表达式变为：\n$$ E(R) = \\lVert X_c \\rVert_F^2 + \\lVert Y_c \\rVert_F^2 - 2 \\cdot \\mathrm{tr}(R X_c^{\\top} Y_c) $$\n为了最小化 $E(R)$，我们必须最大化 $\\mathrm{tr}(R X_c^{\\top} Y_c)$ 这一项。令 $H = X_c^{\\top} Y_c$ 为 $3 \\times 3$ 的互协方差矩阵。我们的问题简化为：\n$$ \\max_{R} \\mathrm{tr}(R H) \\quad \\text{约束条件为 } R^{\\top} R = I $$\n\n我们使用 $H$ 的奇异值分解（SVD），定义为 $H = U \\Sigma V^{\\top}$，其中 $U$ 和 $V$ 是 $3 \\times 3$ 的正交矩阵，$\\Sigma$ 是一个 $3 \\times 3$ 的对角矩阵，其对角线上有非负奇异值，$\\Sigma = \\mathrm{diag}(\\sigma_1, \\sigma_2, \\sigma_3)$，且排序为 $\\sigma_1 \\ge \\sigma_2 \\ge \\sigma_3 \\ge 0$。\n\n将 $H$ 的 SVD 代入迹表达式中：\n$$ \\mathrm{tr}(R H) = \\mathrm{tr}(R U \\Sigma V^{\\top}) $$\n利用迹的循环性质：\n$$ \\mathrm{tr}(R U \\Sigma V^{\\top}) = \\mathrm{tr}(\\Sigma V^{\\top} R U) $$\n令 $M = V^{\\top} R U$。由于 $V$、$R$ 和 $U$ 都是正交矩阵，它们的乘积 $M$ 也是一个正交矩阵。表达式变为：\n$$ \\mathrm{tr}(\\Sigma M) = \\sum_{i=1}^3 (\\Sigma M)_{ii} = \\sum_{i=1}^3 \\sigma_i M_{ii} $$\n由于 $M$ 是正交的，其列向量是标准正交的，这意味着其元素有界：$|M_{ii}| \\le 1$。为了在 $\\sigma_i \\ge 0$ 的前提下最大化和 $\\sum \\sigma_i M_{ii}$，我们应选择 $M_{ii}$ 尽可能大。当所有 $i$ 的 $M_{ii} = 1$ 时达到最大可能值，即 $M = I$。\n如果我们设置 $M = I$，则 $V^{\\top} R U = I$，这给出了最优正交矩阵 $R$ 的解：\n$$ R = V I U^{\\top} = V U^{\\top} $$\n\n### 4. 处理反射并确保 $\\det(R) = 1$\n\n矩阵 $R = V U^{\\top}$ 保证是正交的，但其行列式可以是 $+1$ 或 $-1$：\n$$ \\det(R) = \\det(V U^{\\top}) = \\det(V) \\det(U^{\\top}) = \\det(V) \\det(U) $$\n来自 SVD 的 $U$ 和 $V$ 的行列式都可以是 $\\pm 1$。\n\n情况1：$\\det(V)\\det(U) = 1$。在这种情况下，$\\det(R) = 1$，并且 $R = V U^{\\top}$ 是一个真旋转。这是我们期望的解。\n\n情况2：$\\det(V)\\det(U) = -1$。在这种情况下，$\\det(R) = -1$，意味着 $R$ 表示一个反射（一个非真旋转）。问题要求一个行列式为 $\\det(R) = 1$ 的真旋转。我们必须找到最好的真旋转。这对应于在附加约束 $\\det(M) = \\det(V^{\\top} R U) = \\det(V^{\\top})\\det(R)\\det(U) = \\det(V)\\det(U)\\det(R) = (-1)(1) = -1$ 下最大化 $\\sum \\sigma_i M_{ii}$。\n对于行列式为 $\\det(M) = -1$ 的正交矩阵 $M$，$\\sigma_1 M_{11} + \\sigma_2 M_{22} + \\sigma_3 M_{33}$ 的最大值在 $M = \\mathrm{diag}(1, 1, -1)$ 时实现。这个选择产生的值是 $\\sigma_1 + \\sigma_2 - \\sigma_3$，这是在约束下的最高可能值。更改作用于与最小奇异值 $\\sigma_3$ 相关联的分量，以最小化与无约束最大值 $\\sigma_1 + \\sigma_2 + \\sigma_3$ 的差距。\n\n因此，如果 $\\det(V U^{\\top}) = -1$，最优的真旋转通过设置 $M = \\mathrm{diag}(1, 1, -1)$ 获得。\n$$ V^{\\top} R U = \\mathrm{diag}(1, 1, -1) \\implies R = V \\cdot \\mathrm{diag}(1, 1, -1) \\cdot U^{\\top} $$\n\n一个涵盖两种情况的通用公式是：\n$$ R = V \\cdot \\mathrm{diag}(1, 1, \\det(V U^{\\top})) \\cdot U^{\\top} $$\n\n### 5. 算法与诊断指标总结\n\n1. 给定点云 $X, Y \\in \\mathbb{R}^{N \\times 3}$。\n2. 计算质心：$\\bar{x} = \\frac{1}{N}\\sum x_i$ 和 $\\bar{y} = \\frac{1}{N}\\sum y_i$。\n3. 中心化点云：$X_c = X - \\mathbf{1}\\bar{x}$ 和 $Y_c = Y - \\mathbf{1}\\bar{y}$。\n4. 计算互协方差矩阵 $H = X_c^{\\top} Y_c$。\n5. 对 $H$ 执行 SVD 得到 $H = U \\Sigma V^{\\top}$。\n6. 计算行列式的校正因子：$d = \\det(V U^{\\top})$。\n7. 计算最优旋转矩阵：$R = V \\cdot \\mathrm{diag}(1, 1, d) \\cdot U^{\\top}$。这确保了 $\\det(R) = 1$。\n8. 然后计算所需的诊断指标：\n    - **均方根偏差 (RMSD)**：此指标衡量 $Y$ 中的点与来自 $X$ 的最优对齐点之间的平均距离。对齐后的点是 $X_{\\text{aligned}} = X_c R^{\\top} + \\mathbf{1}\\bar{y}$。RMSD 是 $\\sqrt{\\frac{1}{N} \\lVert X_{\\text{aligned}} - Y \\rVert_F^2}$。\n    - **正交性偏差**：此指标检查计算出的 $R$ 与完美正交的接近程度。它计算为残差的弗罗贝尼乌斯范数：$\\| R^{\\top} R - I \\|_F$。对于一个完美的旋转，此值应为零。\n    - **行列式**：此指标确认最终的变换是一个真旋转。它应该等于 $1$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to define test cases, run the alignment algorithm,\n    and print the results in the specified format.\n    \"\"\"\n\n    def kabsch_algorithm(X, Y):\n        \"\"\"\n        Computes the optimal rotation matrix to align point cloud X to Y.\n\n        Args:\n            X (np.ndarray): An (N, 3) array of 3D points.\n            Y (np.ndarray): An (N, 3) array of 3D points.\n\n        Returns:\n            tuple: A tuple containing:\n                - R (np.ndarray): The optimal (3, 3) rotation matrix.\n                - centroid_X (np.ndarray): The centroid of X.\n                - centroid_Y (np.ndarray): The centroid of Y.\n        \"\"\"\n        N = X.shape[0]\n        # 1. Center the point clouds\n        centroid_X = np.mean(X, axis=0)\n        centroid_Y = np.mean(Y, axis=0)\n        X_c = X - centroid_X\n        Y_c = Y - centroid_Y\n\n        # 2. Compute the cross-covariance matrix\n        H = X_c.T @ Y_c\n\n        # 3. Perform SVD\n        U, S, Vt = np.linalg.svd(H)\n        V = Vt.T\n\n        # 4. Compute the optimal rotation matrix\n        # First, calculate the orthogonal matrix that does not guarantee det(R)=1\n        R_ortho = V @ U.T\n\n        # 5. Correct for reflections to ensure det(R)=1 (proper rotation)\n        d = np.linalg.det(R_ortho)\n        correction_matrix = np.diag([1, 1, d])\n        \n        R = V @ correction_matrix @ U.T\n        \n        return R, centroid_X, centroid_Y\n\n    def compute_diagnostics(X, Y, R, centroid_X, centroid_Y):\n        \"\"\"\n        Computes RMSD, orthogonality deviation, and determinant.\n\n        Args:\n            X (np.ndarray): Original (N, 3) points.\n            Y (np.ndarray): Target (N, 3) points.\n            R (np.ndarray): The (3, 3) rotation matrix.\n            centroid_X (np.ndarray): Centroid of X.\n            centroid_Y (np.ndarray): Centroid of Y.\n\n        Returns:\n            tuple: A tuple containing (rmsd, orth_dev, det_R).\n        \"\"\"\n        # 1. RMSD\n        X_c = X - centroid_X\n        X_aligned = X_c @ R.T + centroid_Y\n        rmsd = np.sqrt(np.mean(np.sum((X_aligned - Y)**2, axis=1)))\n\n        # 2. Orthogonality Deviation\n        orth_dev = np.linalg.norm(R.T @ R - np.identity(3), 'fro')\n\n        # 3. Determinant\n        det_R = np.linalg.det(R)\n\n        return rmsd, orth_dev, det_R\n\n    # Define test cases\n    X1 = np.array([\n        [0., 0., 0.], [1., 0., 0.], [0., 1., 0.], [0., 0., 1.],\n        [1., 1.2, -0.7], [-0.3, 2.1, -1.5]\n    ])\n    theta1 = np.pi / 6\n    c1, s1 = np.cos(theta1), np.sin(theta1)\n    Rz = np.array([[c1, -s1, 0], [s1, c1, 0], [0, 0, 1]])\n    t1 = np.array([1., -2., 0.5])\n    Y1 = X1 @ Rz.T + t1\n\n    X2 = np.array([\n        [0.2, -1.3, 2.], [3.5, 0.4, -0.2], [1.1, 1., 1.], [2.1, -0.9, 0.3]\n    ])\n    Y2 = X2.copy()\n\n    X3 = np.array([\n        [0., 0., 0.], [1., 2., 3.], [-1., -0.5, 0.7], [0.8, -1.2, 2.5]\n    ])\n    theta3 = np.pi / 4\n    c3, s3 = np.cos(theta3), np.sin(theta3)\n    Ry = np.array([[c3, 0, s3], [0, 1, 0], [-s3, 0, c3]])\n    S_reflect = np.diag([1., 1., -1.])\n    t3 = np.array([-0.5, 2., 1.])\n    Y3 = X3 @ Ry.T @ S_reflect.T + t3\n\n    X4 = np.array([[0., 0., 0.], [2., 0., 0.]])\n    theta4 = np.pi / 3\n    c4, s4 = np.cos(theta4), np.sin(theta4)\n    Rx = np.array([[1, 0, 0], [0, c4, -s4], [0, s4, c4]])\n    t4 = np.array([0., 1., -1.])\n    Y4 = X4 @ Rx.T + t4\n\n    test_cases = [(X1, Y1), (X2, Y2), (X3, Y3), (X4, Y4)]\n\n    all_results = []\n    for X, Y in test_cases:\n        R, cx, cy = kabsch_algorithm(X, Y)\n        rmsd, orth_dev, det_R = compute_diagnostics(X, Y, R, cx, cy)\n        all_results.append(f\"[{rmsd:.6f},{orth_dev:.6f},{det_R:.6f}]\")\n\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "3234685"}]}