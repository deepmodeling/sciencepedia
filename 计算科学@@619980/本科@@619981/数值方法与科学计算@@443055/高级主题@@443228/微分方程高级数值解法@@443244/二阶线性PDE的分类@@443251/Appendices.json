{"hands_on_practices": [{"introduction": "我们从一个基础练习开始。这个问题要求你对一个具有常系数的简单偏微分方程进行分类。你的主要任务是正确识别方程中的系数 $A$、$B$ 和 $C$——特别注意可能缺失的项——然后应用判别式公式来确定方程的类型。[@problem_id:2159299]", "problem": "一个关于函数 $u(x,y)$ 的二阶线性偏微分方程 (PDE) 可以写成以下一般形式：\n$$\nA(x,y)u_{xx} + B(x,y)u_{xy} + C(x,y)u_{yy} + D(x,y)u_x + E(x,y)u_y + F(x,y)u = G(x,y)\n$$\n其中下标表示偏微分，例如 $u_{xx} = \\frac{\\partial^2 u}{\\partial x^2}$ 和 $u_{xy} = \\frac{\\partial^2 u}{\\partial x \\partial y}$。这类方程被分为双曲型、抛物型或椭圆型，取决于其最高阶导数项的系数。\n\n考虑以下偏微分方程：\n$$\n4u_{xy} - u_{yy} = \\cos(x)\n$$\n\n根据其分类，下列关于此方程的陈述哪一项是正确的？\n\nA. 该偏微分方程是椭圆型的。\nB. 该偏微分方程是抛物型的。\nC. 该偏微分方程是双曲型的。\nD. 该偏微分方程的分类取决于 $\\cos(x)$ 的符号。\nE. 该偏微分方程的分类取决于定义域中的特定点 $(x,y)$。", "solution": "为了对给定的二阶线性偏微分方程进行分类，我们首先将其与一般形式进行比较：\n$$\nA u_{xx} + B u_{xy} + C u_{yy} + D u_x + E u_y + F u = G\n$$\n\n给定的方程是：\n$$\n4u_{xy} - u_{yy} = \\cos(x)\n$$\n\n通过匹配各项，我们可以确定二阶偏导数的系数。\n$u_{xx}$ 项的系数是 $A$。由于该项在给定方程中不存在，其系数为 $A = 0$。\n$u_{xy}$ 项的系数是 $B$。从方程中我们可以看出 $B = 4$。\n$u_{yy}$ 项的系数是 $C$。从方程中我们可以看出 $C = -1$。\n\n二阶线性偏微分方程的分类由判别式 $\\Delta$ 的符号决定，其定义为：\n$$\n\\Delta = B^2 - 4AC\n$$\n\n分类标准如下：\n- 如果 $\\Delta > 0$，方程是双曲型的。\n- 如果 $\\Delta = 0$，方程是抛物型的。\n- 如果 $\\Delta  0$，方程是椭圆型的。\n\n现在，我们使用我们找到的系数来计算判别式：$A=0$，$B=4$ 和 $C=-1$。\n$$\n\\Delta = (4)^2 - 4(0)(-1)\n$$\n$$\n\\Delta = 16 - 0\n$$\n$$\n\\Delta = 16\n$$\n\n由于 $\\Delta = 16$，大于 0，所以该偏微分方程被分类为双曲型。\n\n让我们分析给定的选项：\nA. 该偏微分方程是椭圆型的。这是不正确的，因为 $\\Delta > 0$。\nB. 该偏微分方程是抛物型的。这是不正确的，因为 $\\Delta \\neq 0$。\nC. 该偏微分方程是双曲型的。这是正确的，因为 $\\Delta > 0$。\nD. 该偏微分方程的分类取决于 $\\cos(x)$ 的符号。这是不正确的。分类仅取决于二阶导数项的系数 $A$、$B$ 和 $C$。方程的右侧 $G(x,y) = \\cos(x)$ 不影响偏微分方程的类型。\nE. 该偏微分方程的分类取决于定义域中的特定点 $(x,y)$。这是不正确的。系数 $A=0$、$B=4$ 和 $C=-1$ 是常数，而不是 $x$ 或 $y$ 的函数。因此，判别式 $\\Delta = 16$ 对所有的 $(x,y)$ 都是常数，该偏微分方程在其整个定义域内都是双曲型的。\n\n因此，正确的分类是双曲型。", "answer": "$$\\boxed{C}$$", "id": "2159299"}, {"introduction": "现在，让我们转向一个更复杂的场景，其中涉及可变系数。在这个问题中，偏微分方程的类型会随着它在 $(x, y)$ 平面中的位置而改变。这个练习不仅要求你计算判别式，还需要你分析其符号如何变化，从而将定义域划分为双曲型、抛物型和椭圆型等不同区域。[@problem_id:2159323]", "problem": "一个具有两个自变量 $x$ 和 $y$ 的一般二阶线性偏微分方程 (PDE) 可写成以下形式：\n$$A(x,y)u_{xx} + B(x,y)u_{xy} + C(x,y)u_{yy} + D(x,y)u_x + E(x,y)u_y + F(x,y)u = G(x,y)$$\n其中 $u_{xx} = \\frac{\\partial^2 u}{\\partial x^2}$，$u_{xy} = \\frac{\\partial^2 u}{\\partial x \\partial y}$，依此类推。方程在点 $(x,y)$ 处的类型由量 $\\Delta(x,y) = B(x,y)^2 - 4A(x,y)C(x,y)$ 的符号决定。该偏微分方程被分类为：\n- 如果 $\\Delta(x,y) > 0$，则在 $(x,y)$ 点是**双曲型**的。\n- 如果 $\\Delta(x,y) = 0$，则在 $(x,y)$ 点是**抛物型**的。\n- 如果 $\\Delta(x,y)  0$，则在 $(x,y)$ 点是**椭圆型**的。\n\n考虑以下变系数偏微分方程：\n$$y u_{xx} + 2x u_{xy} + x^2 u_{yy} = 0$$\n\n下列哪个陈述正确地描述了该偏微分方程在 $xy$ 平面中为双曲型、抛物型或椭圆型的区域？\n\nA. 当 $y > 1$ 时该偏微分方程为双曲型，当 $y  1$ 时为椭圆型，在直线 $y = 1$ 和 y 轴上为抛物型。\nB. 当 $y  1$ 且 $x \\neq 0$ 时该偏微分方程为双曲型，当 $y > 1$ 且 $x \\neq 0$ 时为椭圆型，在直线 $y = 1$ 和 y 轴 ($x = 0$) 上为抛物型。\nC. 在第一和第三象限该偏微分方程为双曲型，在第二和第四象限为椭圆型，在坐标轴上为抛物型。\nD. 当 $x > 0$ 且 $x \\neq 0$ 时该偏微分方程为双曲型，当 $x  0$ 且 $x \\neq 0$ 时为椭圆型，在 y 轴 ($x=0$) 上为抛物型。\nE. 对于不在坐标轴上的所有点 $(x,y)$，该偏微分方程为双曲型，在坐标轴上为抛物型。", "solution": "我们将给定的偏微分方程 $y u_{xx} + 2x u_{xy} + x^{2} u_{yy} = 0$ 与一般二阶线性偏微分方程 $A(x,y) u_{xx} + B(x,y) u_{xy} + C(x,y) u_{yy} + \\cdots = G(x,y)$ 进行比较，以确定主系数。这里，$A(x,y) = y$，$B(x,y) = 2x$，以及 $C(x,y) = x^{2}$。\n\n分类由判别式 $\\Delta(x,y) = B(x,y)^{2} - 4 A(x,y) C(x,y)$ 决定。代入已确定的系数得到\n$$\n\\Delta(x,y) = (2x)^{2} - 4 \\cdot y \\cdot x^{2} = 4 x^{2} - 4 y x^{2} = 4 x^{2} (1 - y).\n$$\n我们分析 $\\Delta$ 的符号：\n- 如果 $x \\neq 0$ 且 $y  1$，则 $1 - y > 0$，因此 $\\Delta > 0$，所以该偏微分方程是双曲型的。\n- 如果 $x \\neq 0$ 且 $y > 1$，则 $1 - y  0$，因此 $\\Delta  0$，所以该偏微分方程是椭圆型的。\n- 如果 $y = 1$ (对任意 $x$) 或 $x = 0$ (对任意 $y$)，则 $\\Delta = 0$，所以该偏微分方程在直线 $y=1$ 和 y 轴上是抛物型的。\n\n这与陈述 B 相符：当 $y  1$ 且 $x \\neq 0$ 时为双曲型，当 $y > 1$ 且 $x \\neq 0$ 时为椭圆型，在 $y=1$ 和 $x=0$ 上为抛物型。", "answer": "$$\\boxed{B}$$", "id": "2159323"}, {"introduction": "最后的这个练习将理论与计算应用相结合，这是现代科学计算中的一项关键技能。你的任务是首先从基本原理推导出分类准则，然后通过编写程序来实现它。这个练习将巩固你的理论知识，并让你亲身体验如何在一个区域上自动分析偏微分方程的性质，这是选择数值求解器之前的关键步骤。[@problem_id:3213827]", "problem": "你的任务是，对于几组系数函数，在平面上的一些点对一个二阶线性偏微分方程（PDE）进行类型分类。考虑一个具有两个自变量 $x$ 和 $y$ 的通用二阶线性偏微分方程，\n$$\nA(x,y)\\,\\frac{\\partial^2 u}{\\partial x^2} + B(x,y)\\,\\frac{\\partial^2 u}{\\partial x \\partial y} + C(x,y)\\,\\frac{\\partial^2 u}{\\partial y^2} + \\text{(低阶项)} = 0,\n$$\n其中 $A(x,y)$、$B(x,y)$ 和 $C(x,y)$ 是给定的系数函数。一个点上偏微分方程的分类完全由其主部决定，即二阶导数的二次型。一种标准且基础的方法是使用主部的对称矩阵，\n$$\nH(x,y) = \\begin{bmatrix} A(x,y)  \\tfrac{1}{2}B(x,y) \\\\ \\tfrac{1}{2}B(x,y)  C(x,y) \\end{bmatrix}.\n$$\n仅使用此基础以及关于对称矩阵和二次型的线性代数知识，推导出一个数值上稳健且可实现的判据，用于在每个点 $(x,y)$ 判断偏微分方程是椭圆型、抛物线型还是双曲线型。你的推导不能预先假设任何已知的分类判据；必须从 $H(x,y)$ 的定性性质出发，并为你将要实现的决策规则提供理由。\n\n程序要求：\n- 实现一个程序，对于下面给定的测试套件，在一个均匀整数点网格\n$$\n\\{(x,y)\\,:\\, x\\in \\{-10,-9,\\dots,9,10\\},\\; y\\in \\{-10,-9,\\dots,9,10\\}\\}\n$$\n上计算 $A(x,y)$、$B(x,y)$ 和 $C(x,y)$ 的值，并根据你推导出的判据，将每个网格点分类为椭圆型、抛物线型和双曲线型。每个测试用例有 $21\\times 21 = 441$ 个网格点。\n- 为保证数值稳健性，当你的判据涉及与零相等时，在适用情况下请使用精确整数运算。下面给出的特定测试套件经过设计，使得 $A(x,y)$、$B(x,y)$ 和 $C(x,y)$ 在指定的整数网格上均为整数值；因此，请精确地实现相等性检查（即，不要使用浮点容差）。\n- 对于每个测试用例，输出一个包含三个整数的列表 $[N_E,N_P,N_H]$，按顺序给出网格上椭圆型、抛物线型和双曲线型分类的计数。\n\n测试套件（系数函数）：\n1) 情况 1：$A(x,y)=1$, $B(x,y)=0$, $C(x,y)=1+x^2+y^2$。\n2) 情况 2：$A(x,y)=1$, $B(x,y)=2x$, $C(x,y)=x^2$。\n3) 情况 3：$A(x,y)=1$, $B(x,y)=0$, $C(x,y)=-1+y^2$。\n\n最终输出格式：\n- 你的程序应生成单行输出，其中包含一个由列表组成的、用逗号分隔的列表形式的结果，每个内部列表对应一个测试用例，并按上述顺序排列。具体来说，打印\n$$\n[[N_E^{(1)},N_P^{(1)},N_H^{(1)}],[N_E^{(2)},N_P^{(2)},N_H^{(2)}],[N_E^{(3)},N_P^{(3)},N_H^{(3)}]]\n$$\n且行内任何地方都不能有空格。例如，一个语法正确的行看起来像这样：$[[1,2,3],[4,5,6],[7,8,9]]$（这只是格式示例；不要使用这些数字）。\n\n注：\n- 本任务不涉及物理单位。\n- 未使用角度，因此不需要角度单位。\n- 未使用百分比；仅按规定报告整数计数。", "solution": "所提供的问题是有效的。它在科学上基于偏微分方程的数学理论，是适定的，提供了所有必要信息，并且陈述客观。任务是首先为二阶线性偏微分方程推导出一个分类判据，然后将其应用于一组给定的测试用例。\n\n### 分类判据的推导\n\n一个在两个变量 $x$ 和 $y$ 上的通用二阶线性偏微分方程由下式给出：\n$$\nA(x,y)\\,\\frac{\\partial^2 u}{\\partial x^2} + B(x,y)\\,\\frac{\\partial^2 u}{\\partial x \\partial y} + C(x,y)\\,\\frac{\\partial^2 u}{\\partial y^2} + \\text{(低阶项)} = 0\n$$\n在点 $(x,y)$ 处偏微分方程的类型由其主部决定，主部是与二阶导数相关的二次型。这个二次型可以使用 $u$ 的海森矩阵（Hessian）$\\nabla^2 u$ 和一个对称的系数矩阵来表示。令二阶导数算子向量为 $\\mathbf{D} = \\left[\\frac{\\partial^2}{\\partial x^2}, \\frac{\\partial^2}{\\partial x \\partial y}, \\frac{\\partial^2}{\\partial y^2}\\right]^T$。主部对应于变量 $\\xi$ 和 $\\eta$ 的二次型 $A\\xi^2 + B\\xi\\eta + C\\eta^2$。该二次型可以用矩阵表示为：\n$$\n\\begin{bmatrix} \\xi  \\eta \\end{bmatrix} \\begin{bmatrix} A  \\frac{1}{2}B \\\\ \\frac{1}{2}B  C \\end{bmatrix} \\begin{bmatrix} \\xi \\\\ \\eta \\end{bmatrix}\n$$\n这个二次型的矩阵即为问题陈述中提供的矩阵：\n$$\nH(x,y) = \\begin{bmatrix} A(x,y)  \\frac{1}{2}B(x,y) \\\\ \\frac{1}{2}B(x,y)  C(x,y) \\end{bmatrix}\n$$\n偏微分方程的分类基于此对称矩阵 $H$ 的定性，而其定性由其特征值（设为 $\\lambda_1$ 和 $\\lambda_2$）决定。\n\n1.  **椭圆型偏微分方程**：如果矩阵 $H$ 是定的（即正定或负定），则该偏微分方程是椭圆型的。这意味着其特征值均非零且符号相同。对于一个 $2 \\times 2$ 矩阵，此条件为 $\\lambda_1 > 0$ 且 $\\lambda_2 > 0$，或 $\\lambda_1  0$ 且 $\\lambda_2  0$。在这两种情况下，特征值之积为正：$\\lambda_1 \\lambda_2 > 0$。\n\n2.  **双曲线型偏微分方程**：如果矩阵 $H$ 是不定的，则该偏微分方程是双曲线型的。这意味着其特征值非零且符号相反。对于一个 $2 \\times 2$ 矩阵，此条件为 $\\lambda_1 \\lambda_2  0$。\n\n3.  **抛物线型偏微分方程**：如果矩阵 $H$ 是半定的，则该偏微分方程是抛物线型的。这意味着其至少一个特征值为零。对于一个非零的主部，恰好有一个特征值为零。此条件为 $\\lambda_1 \\lambda_2 = 0$。\n\n一个矩阵的特征值之积等于其行列式。因此，我们可以使用 $H$ 的行列式来重新表述分类判据：\n$$\n\\det(H) = \\lambda_1 \\lambda_2 = A(x,y)C(x,y) - \\left(\\frac{1}{2}B(x,y)\\right)^2 = AC - \\frac{1}{4}B^2\n$$\n\n*   **椭圆型**：$\\det(H) > 0 \\implies AC - \\frac{1}{4}B^2 > 0$\n*   **双曲线型**：$\\det(H)  0 \\implies AC - \\frac{1}{4}B^2  0$\n*   **抛物线型**：$\\det(H) = 0 \\implies AC - \\frac{1}{4}B^2 = 0$\n\n为了避免分数并便于整数运算，通常将这些不等式乘以 $-4$。这会反转不等号的方向。令判别式为 $\\Delta(x,y) = B(x,y)^2 - 4A(x,y)C(x,y)$。它们之间的关系是 $\\det(H) = -\\frac{1}{4}\\Delta$。判据变为：\n\n*   **椭圆型**：$\\Delta(x,y)  0$\n*   **双曲线型**：$\\Delta(x,y) > 0$\n*   **抛物线型**：$\\Delta(x,y) = 0$\n\n这个判别式 $\\Delta$ 提供了一个数值上稳健的判据。由于问题指明系数 $A(x,y)$、$B(x,y)$ 和 $C(x,y)$ 在整数网格上是整数值，$\\Delta$ 也将是整数。整数与零的比较是精确的，这满足了问题对数值稳健性以及不使用浮点容差的要求。\n\n### 应用于测试用例\n\n实现中将遍历一个 $21 \\times 21$ 的点网格，其中 $x,y \\in \\{-10, -9, \\dots, 9, 10\\}$。对于每个点 $(x,y)$ 和每个测试用例，我们将计算 $\\Delta(x,y)$ 并对该点进行分类，更新计数 $N_E$、$N_P$ 和 $N_H$。\n\n**情况 1：** $A(x,y)=1$, $B(x,y)=0$, $C(x,y)=1+x^2+y^2$。\n判别式为 $\\Delta = B^2 - 4AC = 0^2 - 4(1)(1+x^2+y^2) = -4(1+x^2+y^2)$。\n由于 $x^2 \\ge 0$ 且 $y^2 \\ge 0$，项 $1+x^2+y^2$ 总是大于或等于 $1$。因此，$\\Delta$ 总是严格为负。所有 $21 \\times 21 = 441$ 个点都是椭圆型的。\n预期的计数为 $[N_E, N_P, N_H] = [441, 0, 0]$。\n\n**情况 2：** $A(x,y)=1$, $B(x,y)=2x$, $C(x,y)=x^2$。\n判别式为 $\\Delta = B^2 - 4AC = (2x)^2 - 4(1)(x^2) = 4x^2 - 4x^2 = 0$。\n判别式对于所有点 $(x,y)$ 恒等于零。因此，所有 $441$ 个点都是抛物线型的。\n预期的计数为 $[N_E, N_P, N_H] = [0, 441, 0]$。\n\n**情况 3：** $A(x,y)=1$, $B(x,y)=0$, $C(x,y)=-1+y^2$。\n判别式为 $\\Delta = B^2 - 4AC = 0^2 - 4(1)(-1+y^2) = 4(1-y^2)$。\n分类仅取决于 $y$ 的值：\n*   **椭圆型 ($\\Delta  0$)：** $1-y^2  0 \\implies y^2 > 1$。这对 $y \\in \\{-10, \\dots, -2\\} \\cup \\{2, \\dots, 10\\}$ 成立。有 $9+9=18$ 个这样的 y 值。对于其中每一个，都有 $21$ 个 x 值。$N_E = 18 \\times 21 = 378$。\n*   **抛物线型 ($\\Delta = 0$)：** $1-y^2 = 0 \\implies y^2 = 1$。这对 $y \\in \\{-1, 1\\}$ 成立。有 $2$ 个这样的 y 值。$N_P = 2 \\times 21 = 42$。\n*   **双曲线型 ($\\Delta > 0$)：** $1-y^2 > 0 \\implies y^2  1$。这对 $y = 0$ 成立。有 $1$ 个这样的 y 值。$N_H = 1 \\times 21 = 21$。\n总计数为 $378 + 42 + 21 = 441$。\n预期的计数为 $[N_E, N_P, N_H] = [378, 42, 21]$。\n\n程序将实现此逻辑来计算和报告这些计数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Classifies second-order linear PDEs on a grid for given coefficient functions.\n    \n    The classification is based on the sign of the discriminant Delta = B^2 - 4AC:\n    - Elliptic: Delta  0\n    - Parabolic: Delta = 0\n    - Hyperbolic: Delta > 0\n    \"\"\"\n    \n    # Define the coefficient functions A(x,y), B(x,y), C(x,y) for each test case.\n    # The functions are designed to return integers for integer inputs.\n    test_cases = [\n        # Case 1: A=1, B=0, C=1+x^2+y^2\n        {\n            \"A\": lambda x, y: 1,\n            \"B\": lambda x, y: 0,\n            \"C\": lambda x, y: 1 + x**2 + y**2,\n        },\n        # Case 2: A=1, B=2x, C=x^2\n        {\n            \"A\": lambda x, y: 1,\n            \"B\": lambda x, y: 2 * x,\n            \"C\": lambda x, y: x**2,\n        },\n        # Case 3: A=1, B=0, C=-1+y^2\n        {\n            \"A\": lambda x, y: 1,\n            \"B\": lambda x, y: 0,\n            \"C\": lambda x, y: -1 + y**2,\n        },\n    ]\n\n    # Define the uniform integer grid of points.\n    # x and y range from -10 to 10 inclusive.\n    grid_coords = np.arange(-10, 11)\n    \n    all_results = []\n\n    # Iterate through each test case.\n    for case_coeffs in test_cases:\n        # Initialize counters for elliptic, parabolic, and hyperbolic points.\n        n_elliptic = 0\n        n_parabolic = 0\n        n_hyperbolic = 0\n\n        # Get the coefficient functions for the current case.\n        A_func = case_coeffs[\"A\"]\n        B_func = case_coeffs[\"B\"]\n        C_func = case_coeffs[\"C\"]\n\n        # Iterate over every point (x, y) in the grid.\n        for x in grid_coords:\n            for y in grid_coords:\n                # Evaluate coefficients at the point (x, y).\n                # Since x, y are integers, A, B, C will be integers.\n                A = A_func(x, y)\n                B = B_func(x, y)\n                C = C_func(x, y)\n\n                # Calculate the discriminant. This will be an integer.\n                discriminant = B**2 - 4 * A * C\n\n                # Classify the point based on the sign of the discriminant.\n                # The comparisons are exact as we are using integer arithmetic.\n                if discriminant  0:\n                    n_elliptic += 1\n                elif discriminant == 0:\n                    n_parabolic += 1\n                else: # discriminant > 0\n                    n_hyperbolic += 1\n        \n        # Store the counts for the current case.\n        case_result = [n_elliptic, n_parabolic, n_hyperbolic]\n        all_results.append(case_result)\n\n    # Format the final output string as specified: [[N_E1,N_P1,N_H1],[...],...]\n    # This involves building the string piece by piece to avoid spaces introduced\n    # by default list-to-string conversion.\n    inner_strings = [f\"[{','.join(map(str, res))}]\" for res in all_results]\n    final_output = f\"[{','.join(inner_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "3213827"}]}