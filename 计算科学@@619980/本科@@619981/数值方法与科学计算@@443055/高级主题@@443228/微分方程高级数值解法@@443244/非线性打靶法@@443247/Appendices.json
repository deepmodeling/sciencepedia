{"hands_on_practices": [{"introduction": "在深入研究复杂的非线性问题之前，让我们通过一个可以精确求解的线性问题，来牢固掌握“打靶”这一核心思想。本练习旨在通过解析方法，完整地展示如何将一个边值问题（BVP）转化为一个依赖于未知初始斜率 $s$ 的初值问题（IVP），并通过求解一个关于 $s$ 的代数方程来精确命中终点边界条件。这个过程将为我们后续的数值实现打下坚实的直观基础。[@problem_id:3256898]", "problem": "一根长度为 $L$ 的细杆进行一维热传导，其均匀且不随温度变化的属性已被纳入一个归一化模型中。杆上的稳态温度分布 $T(x)$ 由以下常微分方程 (ODE) 控制：\n$$\nT''(x) = -q(x),\n$$\n其中 $q(x)$ 是一个给定的空间热源密度，其单位与 $T''(x)$ 一致。杆的两端保持在固定温度 $T(0) = T_a$ 和 $T(L) = T_b$。\n\n考虑以下具体情况：\n$$\nL = 1,\\quad T_a = 310,\\quad T_b = 325,\\quad q(x) = 10\\,\\exp(2x).\n$$\n使用适用于非线性边值问题 (BVP) 的打靶法：引入未知初始斜率 $s = T'(0)$，将该问题视为一个初值问题，并通过求解一个关于 $s$ 的标量相容性方程来施加在 $x=L$ 处的末端边界条件。通过执行所需的积分并从第一性原理出发求解 $s$，推导出 $T(x)$ 的闭式表达式。您的推导必须从模型ODE和边界条件开始，不得假设任何预先推导出的解公式。\n\n报告以开尔文为单位的 $T(x)$ 的最终表达式。请精确提供表达式，不要进行四舍五入。", "solution": "该问题已经过验证，被认为是合理的。它有科学依据、适定且客观。所有必要的数据均已提供，且没有矛盾之处。该问题要求使用打靶法的概念框架来求解一个线性边值问题 (BVP) 的解析解。虽然打靶法通常用于数值求解非线性问题，但将其应用于此处的线性问题是一个有效的练习，它会产生一个关于未知初始条件的线性代数方程，该方程可以解析求解。\n\n控制常微分方程 (ODE) 为：\n$$\nT''(x) = -q(x)\n$$\n其中具体热源为 $q(x) = 10 \\exp(2x)$。方程变为：\n$$\nT''(x) = -10 \\exp(2x)\n$$\n边界条件为 $T(0) = T_a = 310$ 和 $T(L) = T(1) = T_b = 325$。\n\n遵循打靶法，我们将此BVP转换为一个初值问题 (IVP)。我们引入一个未知的初始斜率 $s = T'(0)$。因此，该IVP由ODE和以下初始条件定义：\n$$\nT(0) = 310\n$$\n$$\nT'(0) = s\n$$\n我们的目标是找到 $s$ 的值，以确保该IVP的解也满足第二个边界条件 $T(1) = 325$。\n\n首先，我们将ODE $T''(x) = -10 \\exp(2x)$ 对 $x$ 积分，以求得温度梯度 $T'(x)$ 的表达式：\n$$\nT'(x) = \\int -10 \\exp(2x) \\, dx = -10 \\frac{\\exp(2x)}{2} + C_1 = -5 \\exp(2x) + C_1\n$$\n其中 $C_1$ 是积分常数。我们使用初始条件 $T'(0) = s$ 来确定 $C_1$：\n$$\ns = T'(0) = -5 \\exp(2 \\cdot 0) + C_1 = -5 \\exp(0) + C_1 = -5(1) + C_1\n$$\n求解 $C_1$ 可得：\n$$\nC_1 = s + 5\n$$\n将其代入 $T'(x)$ 的表达式中，我们得到：\n$$\nT'(x) = -5 \\exp(2x) + s + 5\n$$\n接下来，我们将 $T'(x)$ 对 $x$ 积分，以求得温度分布 $T(x)$：\n$$\nT(x) = \\int \\left(-5 \\exp(2x) + s + 5\\right) \\, dx = -5 \\frac{\\exp(2x)}{2} + (s + 5)x + C_2\n$$\n$$\nT(x) = -\\frac{5}{2} \\exp(2x) + (s + 5)x + C_2\n$$\n其中 $C_2$ 是第二个积分常数。我们使用初始条件 $T(0) = 310$ 来确定 $C_2$：\n$$\n310 = T(0) = -\\frac{5}{2} \\exp(2 \\cdot 0) + (s+5)(0) + C_2 = -\\frac{5}{2} \\exp(0) + C_2 = -\\frac{5}{2} + C_2\n$$\n求解 $C_2$：\n$$\nC_2 = 310 + \\frac{5}{2} = \\frac{620}{2} + \\frac{5}{2} = \\frac{625}{2}\n$$\n因此，依赖于参数 $s$ 的IVP的解是：\n$$\nT(x; s) = -\\frac{5}{2} \\exp(2x) + (s + 5)x + \\frac{625}{2}\n$$\n现在，我们施加第二个边界条件 $T(1) = 325$ 来求得 $s$ 的正确值。我们令 $x=1$ 且 $T(1;s) = 325$：\n$$\n325 = T(1; s) = -\\frac{5}{2} \\exp(2 \\cdot 1) + (s + 5)(1) + \\frac{625}{2}\n$$\n$$\n325 = -\\frac{5}{2} \\exp(2) + s + 5 + \\frac{625}{2}\n$$\n现在，我们求解这个关于 $s$ 的线性方程。使用分数进行计算会更方便：$325 = \\frac{650}{2}$ 和 $5 = \\frac{10}{2}$。\n$$\n\\frac{650}{2} = -\\frac{5}{2} \\exp(2) + s + \\frac{10}{2} + \\frac{625}{2}\n$$\n$$\n\\frac{650}{2} = s + \\frac{635}{2} - \\frac{5}{2} \\exp(2)\n$$\n分离出 $s$：\n$$\ns = \\frac{650}{2} - \\frac{635}{2} + \\frac{5}{2} \\exp(2)\n$$\n$$\ns = \\frac{15}{2} + \\frac{5}{2} \\exp(2)\n$$\n找到了初始斜率 $s$ 的唯一值后，我们将其代回到通解 $T(x;s)$ 中，以获得 $T(x)$ 的最终表达式：\n$$\nT(x) = -\\frac{5}{2} \\exp(2x) + \\left( \\left(\\frac{15}{2} + \\frac{5}{2} \\exp(2)\\right) + 5 \\right)x + \\frac{625}{2}\n$$\n我们简化 $x$ 项的系数。注意到 $5 = \\frac{10}{2}$：\n$$\nT(x) = -\\frac{5}{2} \\exp(2x) + \\left( \\frac{15}{2} + \\frac{10}{2} + \\frac{5}{2} \\exp(2) \\right)x + \\frac{625}{2}\n$$\n$$\nT(x) = -\\frac{5}{2} \\exp(2x) + \\left( \\frac{25}{2} + \\frac{5}{2} \\exp(2) \\right)x + \\frac{625}{2}\n$$\n这就是杆上温度分布 $T(x)$ 的闭式表达式。", "answer": "$$\n\\boxed{T(x) = -\\frac{5}{2} \\exp(2x) + \\left( \\frac{25}{2} + \\frac{5}{2} \\exp(2) \\right)x + \\frac{625}{2}}\n$$", "id": "3256898"}, {"introduction": "掌握了基本思想后，我们便可以着手构建一个功能完备的非线性打靶法求解器。本练习将指导你实现一种更为高效和经典的算法：将龙格-库塔（Runge-Kutta）积分器与牛顿-拉夫逊（Newton-Raphson）根查找法相结合。为了计算牛顿法所需的导数，你需要同时求解描述解对初始斜率敏感性的“变分方程”，这是一个展示打靶法强大威力与精妙之处的综合性实践。[@problem_id:3256899]", "problem": "实现一个程序，该程序通过打靶法求解非线性两点边值问题，其中对未知的初始斜率使用牛顿-拉夫逊迭代，并同步积分关于 $\\partial y/\\partial s$ 的变分（灵敏度）方程。该设计的基础是将二阶常微分方程（ODE）标准地简化为一阶系统，以及应用链式法则计算终端值对初始斜率的灵敏度。\n\n给定一个标量二阶常微分方程，形式如下\n$$\ny''(x) = f\\big(x, y(x), y'(x)\\big),\n$$\n该方程定义在区间 $[a,b]$ 上，边界条件为\n$$\ny(a) = \\alpha,\\quad y(b) = \\beta,\n$$\n其中 $f$ 是一个足够光滑的函数。打靶法将未知的初始斜率 $s = y'(a)$ 视为一个参数，并定义残差\n$$\nR(s) = y(b; s) - \\beta,\n$$\n其中 $y(b; s)$ 是通过积分以下初值问题得到的终端值\n$$\n\\begin{aligned}\ny'(x) = p(x),\\\\\np'(x) = f(x, y(x), p(x)),\\\\\ny(a) = \\alpha,\\quad p(a) = s,\n\\end{aligned}\n$$\n从 $x=a$ 到 $x=b$。牛顿-拉夫逊迭代通过以下公式更新 $s$\n$$\ns_{k+1} = s_k - \\frac{R(s_k)}{R'(s_k)},\n$$\n这需要导数 $R'(s)$。通过对一阶系统关于 $s$ 求导并应用链式法则，可得到灵敏度系统\n$$\n\\begin{aligned}\nv_1'(x) = v_2(x),\\\\\nv_2'(x) = \\frac{\\partial f}{\\partial y}(x, y(x), p(x))\\, v_1(x) + \\frac{\\partial f}{\\partial p}(x, y(x), p(x))\\, v_2(x),\\\\\nv_1(a) = 0,\\quad v_2(a) = 1,\n\\end{aligned}\n$$\n其中 $v_1(x) = \\frac{\\partial y(x)}{\\partial s}$ 和 $v_2(x) = \\frac{\\partial p(x)}{\\partial s}$。于是有 $R'(s) = v_1(b)$。您的实现必须使用经典的四阶龙格-库塔法（RK4）同步积分 $(y,p,v_1,v_2)$，并且必须执行 $s$ 的牛顿-拉夫逊更新。为促进稳健收敛，对牛顿步使用简单的回溯线搜索：如果一个完整的牛顿更新未能减小 $|R(s)|$，则重复将步长减半，直到实现减小或达到一个小的步长因子阈值。\n\n数值积分细节：\n- 对 $(y,p,v_1,v_2)$ 的增广系统使用经典的四阶龙格-库塔法（RK4），采用均匀步长 $h = (b-a)/N$，其中 $N$ 是每个测试用例提供的正整数。\n- 当 $|R(s)| \\le \\varepsilon$（其中 $\\varepsilon = 10^{-10}$）或达到最大迭代次数 $M = 30$ 次时，终止牛顿-拉夫逊迭代。如果回溯在 $L = 20$ 次步长减半后仍未能减小残差，则接受尝试的更新并继续。\n\n测试套件：\n实现求解器并将其应用于以下三个边值问题。在每种情况下，定义 $f$、其偏导数 $\\frac{\\partial f}{\\partial y}$ 和 $\\frac{\\partial f}{\\partial p}$、区间端点 $a$ 和 $b$、边界值 $\\alpha$ 和 $\\beta$、初始猜测值 $s_0$ 以及积分步数 $N$。\n\n- 情况 $1$（非线性，且依赖于 $y'$）：\n  - $f(x,y,p) = \\sin(y) + x\\,p$\n  - $\\frac{\\partial f}{\\partial y}(x,y,p) = \\cos(y)$\n  - $\\frac{\\partial f}{\\partial p}(x,y,p) = x$\n  - $a = 0$, $b = 1$\n  - $\\alpha = 0$, $\\beta = 0.5$\n  - $s_0 = 0.3$\n  - $N = 2000$\n\n- 情况 $2$（非线性，以平凡解作为边界条件的边缘情况）：\n  - $f(x,y,p) = y^3 - y$\n  - $\\frac{\\partial f}{\\partial y}(x,y,p) = 3y^2 - 1$\n  - $\\frac{\\partial f}{\\partial p}(x,y,p) = 0$\n  - $a = 0$, $b = 1$\n  - $\\alpha = 0$, $\\beta = 0$\n  - $s_0 = 1.0$\n  - $N = 2000$\n\n- 情况 $3$（用于精度验证的线性参考问题）：\n  - $f(x,y,p) = y$\n  - $\\frac{\\partial f}{\\partial y}(x,y,p) = 1$\n  - $\\frac{\\partial f}{\\partial p}(x,y,p) = 0$\n  - $a = 0$, $b = 1$\n  - $\\alpha = 0$, $\\beta = 1$\n  - $s_0 = 0.5$\n  - $N = 2000$\n\n输出规格：\n- 对每个测试用例，计算打靶参数 $s$ 的牛顿-拉夫逊估计值 $s^\\ast$，使得 $|R(s^\\ast)| \\le \\varepsilon$。\n- 将每个 $s^\\ast$ 表示为四舍五入到八位小数的十进制数。\n- 您的程序应生成单行输出，其中包含三个四舍五入后的值，以逗号分隔并用方括号括起来，例如 $[s_1,s_2,s_3]$。\n\n本问题不涉及物理单位或角度单位。所有输出均为无量纲实数。", "solution": "所提出的问题要求实现一个数值算法来求解形式如下的非线性两点边值问题（BVP）\n$$\ny''(x) = f\\big(x, y(x), y'(x)\\big), \\quad x \\in [a,b]\n$$\n边界条件为 $y(a) = \\alpha$ 和 $y(b) = \\beta$。指定的方法是非线性打靶法，该方法将边值问题（BVP）转换为一个初值问题（IVP），并迭代地调整未知的初始条件，直到满足远端的边界条件。迭代调整将使用牛顿-拉夫逊法进行，这需要计算最终状态相对于初始条件的导数。该导数将通过积分一组称为灵敏度方程的辅助微分方程来求得。\n\n首先，我们来形式化打靶法框架。我们通过令 $p(x) = y'(x)$ 将二阶常微分方程简化为一个由两个一阶常微分方程组成的系统。该系统如下：\n$$\n\\begin{aligned}\ny'(x) = p(x) \\\\\np'(x) = f(x, y(x), p(x)).\n\\end{aligned}\n$$\n边界条件为 $y(a) = \\alpha$ 和 $y(b) = \\beta$。在打靶法中，我们将其视为一个从 $x=a$ 开始的初值问题。初始条件 $y(a)=\\alpha$ 是已知的，但 $p(a) = y'(a)$ 是未知的。我们将这个未知的初始斜率记作参数 $s$，因此 $p(a) = s$。有了这个，我们就可以将系统从 $x=a$ 积分到 $x=b$。在 $x=b$ 处 $y$ 的值将取决于我们对 $s$ 的选择。我们将这种函数依赖关系记为 $y(b; s)$。目标是找到 $s$ 的值，使得计算出的终端值与所需的边界条件相匹配，即 $y(b; s) = \\beta$。这个条件通过定义一个残差函数 $R(s)$ 来表示，我们需要寻找该函数的根：\n$$\nR(s) = y(b; s) - \\beta = 0.\n$$\n这是一个关于单变量 $s$ 的求根问题。问题指定使用牛顿-拉夫逊法来完成此任务。用于将估计值 $s_k$ 更新为新估计值 $s_{k+1}$ 的迭代公式是：\n$$\ns_{k+1} = s_k - \\frac{R(s_k)}{R'(s_k)},\n$$\n其中 $R'(s_k)$ 是残差函数关于 $s$ 的导数，在 $s_k$ 处求值。该导数为 $R'(s) = \\frac{d}{ds} \\left( y(b; s) - \\beta \\right) = \\frac{\\partial y(b; s)}{\\partial s}$。\n\n为了求得 $\\frac{\\partial y(b; s)}{\\partial s}$，我们推导灵敏度方程。我们定义灵敏度变量 $v_1(x) = \\frac{\\partial y(x)}{\\partial s}$ 和 $v_2(x) = \\frac{\\partial p(x)}{\\partial s}$。我们使用链式法则对一阶系统关于 $s$ 求导：\n$$\n\\frac{\\partial}{\\partial s} (y'(x)) = \\frac{\\partial}{\\partial s} (p(x)) \\implies \\left(\\frac{\\partial y}{\\partial s}\\right)' = \\frac{\\partial p}{\\partial s} \\implies v_1'(x) = v_2(x).\n$$\n$$\n\\frac{\\partial}{\\partial s} (p'(x)) = \\frac{\\partial}{\\partial s} f(x, y, p) \\implies \\left(\\frac{\\partial p}{\\partial s}\\right)' = \\frac{\\partial f}{\\partial y} \\frac{\\partial y}{\\partial s} + \\frac{\\partial f}{\\partial p} \\frac{\\partial p}{\\partial s} \\implies v_2'(x) = \\frac{\\partial f}{\\partial y} v_1(x) + \\frac{\\partial f}{\\partial p} v_2(x).\n$$\n这样我们就得到了一个关于灵敏度 $(v_1, v_2)$ 的线性常微分方程组。为了求解它，我们需要一组在 $x=a$ 处的初始条件。这些条件由主系统的初始条件推导而来：\n$$\ny(a) = \\alpha \\implies v_1(a) = \\frac{\\partial y(a)}{\\partial s} = \\frac{\\partial \\alpha}{\\partial s} = 0.\n$$\n$$\np(a) = s \\implies v_2(a) = \\frac{\\partial p(a)}{\\partial s} = \\frac{\\partial s}{\\partial s} = 1.\n$$\n残差的导数则为 $R'(s) = v_1(b)$。\n\n总体策略是求解一个由四个一阶常微分方程组成的增广系统，其状态向量为 $\\mathbf{U}(x) = [y(x), p(x), v_1(x), v_2(x)]^T$。控制方程为：\n$$\n\\mathbf{U}'(x) = \\mathbf{F}(x, \\mathbf{U}(x)) = \n\\begin{pmatrix}\np(x) \\\\\nf(x, y(x), p(x)) \\\\\nv_2(x) \\\\\n\\frac{\\partial f}{\\partial y} v_1(x) + \\frac{\\partial f}{\\partial p} v_2(x)\n\\end{pmatrix}.\n$$\n对于给定的猜测值 $s_k$，该增广系统在 $x=a$ 处的初始条件为 $\\mathbf{U}(a) = [\\alpha, s_k, 0, 1]^T$。\n\n单次牛顿-拉夫逊迭代的数值步骤如下：\n1.  设置初始向量 $\\mathbf{U}(a) = [\\alpha, s_k, 0, 1]^T$。\n2.  使用步长为 $h=(b-a)/N$ 的经典四阶龙格-库塔（RK4）方法，将 $\\mathbf{U}'(x)$ 的四维系统从 $x=a$ 积分到 $x=b$。积分得到终端状态向量 $\\mathbf{U}(b) = [y(b;s_k), p(b;s_k), v_1(b;s_k), v_2(b;s_k)]^T$。\n3.  计算残差 $R(s_k) = y(b;s_k) - \\beta$。\n4.  检查收敛性：如果 $|R(s_k)| \\le \\varepsilon=10^{-10}$，则过程终止。\n5.  计算残差的导数 $R'(s_k) = v_1(b;s_k)$。\n6.  计算牛顿步 $\\Delta s_k = -R(s_k)/R'(s_k)$。\n7.  为确保稳健收敛，执行回溯线搜索。首先尝试完整步长 $s_k + \\Delta s_k$。如果它没有减小残差的绝对值，即 $|R(s_k + \\Delta s_k)| \\ge |R(s_k)|$，则重复将步长减半。测试一个新的试探步长 $\\lambda \\Delta s_k$，其中 $\\lambda \\in \\{1, 1/2, 1/4, \\dots\\}$。接受第一个能使残差绝对值减小的 $\\lambda$ 值。\n8.  如果经过 $L=20$ 次步长减半仍未能找到更好的步长，则接受最后一次尝试的更新（使用最小的 $\\lambda$），并继续迭代。\n9.  更新斜率估计值，$s_{k+1} = s_k + \\lambda \\Delta s_k$，并从步骤 1 开始重复。\n如果达到收敛或达到最大迭代次数 $M=30$ 次，则终止该过程。将 $s_k$ 的最终值作为解 $s^\\ast$。该算法被实现并应用于三个指定的测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the specified boundary value problems and print the results.\n    \"\"\"\n    \n    # Define global constants for the Newton-Raphson solver\n    epsilon = 1e-10\n    max_iter = 30\n    max_backtrack = 20\n    \n    # Define the test cases from the problem statement\n    test_cases = [\n        {\n            \"f\": lambda x, y, p: np.sin(y) + x * p,\n            \"dfdy\": lambda x, y, p: np.cos(y),\n            \"dfdp\": lambda x, y, p: x,\n            \"a\": 0.0, \"b\": 1.0,\n            \"alpha\": 0.0, \"beta\": 0.5,\n            \"s0\": 0.3, \"N\": 2000\n        },\n        {\n            \"f\": lambda x, y, p: y**3 - y,\n            \"dfdy\": lambda x, y, p: 3 * y**2 - 1,\n            \"dfdp\": lambda x, y, p: 0.0,\n            \"a\": 0.0, \"b\": 1.0,\n            \"alpha\": 0.0, \"beta\": 0.0,\n            \"s0\": 1.0, \"N\": 2000\n        },\n        {\n            \"f\": lambda x, y, p: y,\n            \"dfdy\": lambda x, y, p: 1.0,\n            \"dfdp\": lambda x, y, p: 0.0,\n            \"a\": 0.0, \"b\": 1.0,\n            \"alpha\": 0.0, \"beta\": 1.0,\n            \"s0\": 0.5, \"N\": 2000\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        s_star = nonlinear_shooter(\n            case, epsilon, max_iter, max_backtrack\n        )\n        results.append(f\"{s_star:.8f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef nonlinear_shooter(params, epsilon, max_iter, max_backtrack):\n    \"\"\"\n    Solves a two-point BVP using the nonlinear shooting method with Newton's iteration.\n    \n    Args:\n        params (dict): A dictionary containing all problem-specific parameters.\n        epsilon (float): The tolerance for the residual.\n        max_iter (int): Maximum number of Newton-Raphson iterations.\n        max_backtrack (int): Maximum number of step halvings in the line search.\n        \n    Returns:\n        float: The converged value of the initial slope 's'.\n    \"\"\"\n    f = params[\"f\"]\n    dfdy = params[\"dfdy\"]\n    dfdp = params[\"dfdp\"]\n    a = params[\"a\"]\n    b = params[\"b\"]\n    alpha = params[\"alpha\"]\n    beta = params[\"beta\"]\n    s0 = params[\"s0\"]\n    N = params[\"N\"]\n    \n    h = (b - a) / N\n\n    def F_augmented(x, U):\n        \"\"\"\n        Defines the right-hand side of the augmented 4D system of ODEs.\n        U = [y, p, v1, v2]\n        \"\"\"\n        y, p, v1, v2 = U\n        dy_dx = p\n        dp_dx = f(x, y, p)\n        dv1_dx = v2\n        dv2_dx = dfdy(x, y, p) * v1 + dfdp(x, y, p) * v2\n        return np.array([dy_dx, dp_dx, dv1_dx, dv2_dx])\n\n    def integrate_ivp(s_guess):\n        \"\"\"\n        Integrates the augmented IVP from a to b using RK4 for a given initial slope s.\n        Returns the terminal value y(b) and the sensitivity v1(b).\n        \"\"\"\n        U = np.array([alpha, s_guess, 0.0, 1.0])\n        x = a\n        for _ in range(N):\n            k1 = h * F_augmented(x, U)\n            k2 = h * F_augmented(x + h/2, U + k1/2)\n            k3 = h * F_augmented(x + h/2, U + k2/2)\n            k4 = h * F_augmented(x + h, U + k3)\n            U += (k1 + 2*k2 + 2*k3 + k4) / 6\n            x += h\n        return U[0], U[2] # y(b), v1(b)\n\n    s = s0\n    for _ in range(max_iter):\n        y_b, v1_b = integrate_ivp(s)\n        \n        R_s = y_b - beta\n        \n        if abs(R_s) = epsilon:\n            return s\n            \n        Rp_s = v1_b\n        \n        if abs(Rp_s)  1e-12:  # Prevent division by zero or extremely large steps\n            break\n            \n        delta_s = -R_s / Rp_s\n        \n        # Backtracking line search\n        lambda_factor = 1.0\n        updated_in_backtrack = False\n        last_s_trial = s # Fallback value\n        \n        for _ in range(max_backtrack):\n            s_trial = s + lambda_factor * delta_s\n            last_s_trial = s_trial\n            y_b_trial, _ = integrate_ivp(s_trial)\n            R_s_new = y_b_trial - beta\n\n            if abs(R_s_new)  abs(R_s):\n                s = s_trial\n                updated_in_backtrack = True\n                break\n            \n            lambda_factor /= 2.0\n            \n        if not updated_in_backtrack:\n            # If no better step was found after L halvings, accept the last attempted update.\n            s = last_s_trial\n\n    return s\n\nsolve()\n```", "id": "3256899"}, {"introduction": "一个稳健的数值算法不仅要能解决理想问题，还必须能应对各种“意外情况”。本练习探讨了一个关键的实际问题：当微分方程本身存在奇异性时，打靶法会发生什么？你会发现，对于某些初始斜率 $s$ 的猜测，积分过程可能在到达区间终点前就因遇到奇异点而失败，导致打靶函数 $F(s)$ 在这些点上没有定义。通过分析这个问题，你将学会如何识别打靶法的局限性，并思考如何构建更具鲁棒性的求解策略。[@problem_id:3256930]", "problem": "考虑区间 $[0,1]$ 上的一个非线性常微分方程（ODE）边值问题（BVP），该问题由 $y''(x) = \\dfrac{1}{1 - y'(x)}$ 给出，边界条件为 $y(0) = 0$ 和 $y(1) = \\beta$，其中 $\\beta$ 是一个给定的实常数。在经典的打靶法中，我们通过引入打靶参数 $s = y'(0)$，将该 BVP 替换为一个初值问题（IVP），并从 $x=0$ 到 $x=1$ 向前积分该 ODE。目标函数定义为 $F(s) = y(1; s) - \\beta$，其中 $y(x; s)$ 表示初始斜率为 $s$ 的 IVP 的解。当 $y'(x) = 1$ 时，该 ODE 没有定义，因此根据 $s$ 的取值，IVP 可能会在到达 $x=1$ 之前遇到奇点。\n\n选择所有正确描述目标函数 $F(s)$ 的行为以及在这种打靶设置下对求根的实际影响的陈述。\n\nA. 对于 $s \\in (1 - \\sqrt{2}, 1)$，目标函数 $F(s)$ 没有定义，因为 IVP 在某个 $x \\in (0,1)$ 处达到了奇异面 $y'(x) = 1$，因此 $y(1; s)$ 不存在。\n\nB. 对于 $s \\le 1 - \\sqrt{2}$，目标函数 $F(s)$ 作为 $s$ 的函数是连续的，并且关于 $s$ 是严格递增的。\n\nC. 即使初始猜测 $s^{(0)}$ 位于 $(1 - \\sqrt{2}, 1)$ 区间内，直接应用于 $F(s)$ 的牛顿法也总能收敛到一个根。\n\nD. 一个稳健的策略是在 IVP 积分过程中实现对 $y'(x) = 1$ 的事件检测，并在一个已知 IVP 能在不遇到奇点的情况下到达 $x=1$ 的 $s$ 区间上，应用基于区间的一维求根方法（如二分法或割线法），从而避免 $F(s)$ 的不连续性。", "solution": "用户希望我解决一个关于特定边值问题（BVP）的非线性打靶法的问题。\n\n### 步骤1：提取已知条件\n-   **常微分方程 (ODE):** $y''(x) = \\dfrac{1}{1 - y'(x)}$\n-   **区间:** $[0, 1]$\n-   **边界条件 (BVP):** $y(0) = 0$, $y(1) = \\beta$\n-   **打靶法:** BVP 被转换为一个初值问题 (IVP)。\n-   **打靶参数:** $s = y'(0)$\n-   **初值条件 (IVP):** $y(0) = 0$, $y'(0) = s$\n-   **目标函数:** $F(s) = y(1; s) - \\beta$，其中 $y(x; s)$ 是 IVP 的解。\n-   **奇点:** 当 $y'(x) = 1$ 时，ODE 未定义。\n\n### 步骤2：使用提取的已知条件进行验证\n问题陈述是微分方程数值分析领域中一个定义明确的数学问题。\n-   **科学依据:** 该问题涉及非线性 ODE 和打靶法，这些是数学和科学计算中的标准课题。它不含伪科学。\n-   **适定性:** 任务是分析打靶函数 $F(s)$ 的性质。这是一个适定的数学问题，因为该函数的性质可以从控制 ODE 中导出。\n-   **客观性:** 该问题以精确的数学语言陈述，没有主观或含糊的术语。\n-   分析解 $y(x;s)$ 作为参数 $s$ 的函数行为所需的所有必要组成部分都已提供。该问题是自洽且内部一致的。\n\n### 步骤3：结论与行动\n问题陈述是**有效的**。我将继续进行解答和选项分析。\n\n### 求解推导\n\n问题的核心在于分析该 IVP 的解：\n$$ y''(x) = \\frac{1}{1 - y'(x)}, \\quad y(0) = 0, \\quad y'(0) = s $$\n令 $u(x) = y'(x)$。该二阶 ODE 降为关于 $u(x)$ 的一阶 ODE：\n$$ u'(x) = \\frac{1}{1 - u(x)}, \\quad u(0) = s $$\n这是一个可分离变量的 ODE。我们可以写出：\n$$ (1 - u) du = dx $$\n对两边从 $x=0$ 积分到一个一般的 $x$：\n$$ \\int_{u(0)}^{u(x)} (1 - v) dv = \\int_0^x d\\xi $$\n$$ \\left[v - \\frac{v^2}{2}\\right]_{s}^{u(x)} = x $$\n$$ \\left(u(x) - \\frac{u(x)^2}{2}\\right) - \\left(s - \\frac{s^2}{2}\\right) = x $$\n这给出了一个关于 $u(x)$ 的隐式二次方程：\n$$ u(x)^2 - 2u(x) + 2\\left(x + s - \\frac{s^2}{2}\\right) = 0 $$\n使用二次公式求解 $u(x) = y'(x)$：\n$$ u(x) = \\frac{2 \\pm \\sqrt{4 - 8\\left(x + s - \\frac{s^2}{2}\\right)}}{2} = 1 \\pm \\sqrt{1 - 2x - 2s + s^2} = 1 \\pm \\sqrt{(s-1)^2 - 2x} $$\n为了确定符号，我们使用初始条件 $u(0) = s$：\n$$ u(0) = 1 \\pm \\sqrt{(s-1)^2} = 1 \\pm |s-1| $$\n-   如果 $s \\le 1$，则 $|s-1| = 1-s$。为了得到 $u(0)=s$，我们需要 $1 - (1-s) = s$。所以必须使用减号。\n    $$ u(x) = 1 - \\sqrt{(s-1)^2 - 2x} \\quad \\text{对于 } s \\le 1 $$\n-   如果 $s > 1$，则 $|s-1| = s-1$。为了得到 $u(0)=s$，我们需要 $1 + (s-1) = s$。所以必须使用加号。\n    $$ u(x) = 1 + \\sqrt{(s-1)^2 - 2x} \\quad \\text{对于 } s > 1 $$\n当 $s=1$ 时，原 ODE 的分母在 $x=0$ 处为零，因此 IVP 从一开始就是奇异的。\n\n只要平方根下的项是非负的，即 $(s-1)^2 - 2x \\ge 0$，解才是实数。\n问题中提到的奇点 $y'(x) = 1$ 发生在平方根项为零时，即在 $x_{\\text{sing}} = \\frac{(s-1)^2}{2}$ 处。\n为了让 IVP 求解器能成功地从 $x=0$ 积分到 $x=1$，这个奇点不能在任何 $x \\in [0, 1)$ 中出现。这意味着我们必须有 $x_{\\text{sing}} \\ge 1$。\n$$ \\frac{(s-1)^2}{2} \\ge 1 \\implies (s-1)^2 \\ge 2 \\implies |s-1| \\ge \\sqrt{2} $$\n这个条件定义了“有效”的打靶参数 $s$ 的集合，对于这些 $s$，$y(1;s)$ 乃至 $F(s)$ 都是良定义的。有效值为 $s \\in (-\\infty, 1-\\sqrt{2}] \\cup [1+\\sqrt{2}, \\infty)$。\n对于 $s \\in (1-\\sqrt{2}, 1+\\sqrt{2})$，奇点在 $x_{\\text{sing}} \\in [0, 1)$ 处遇到，积分失败。\n\n现在我们评估每个选项。\n\n**A. 对于 $s \\in (1 - \\sqrt{2}, 1)$，目标函数 $F(s)$ 没有定义，因为 IVP 在某个 $x \\in (0,1)$ 处达到了奇异面 $y'(x) = 1$，因此 $y(1; s)$ 不存在。**\n\n我们检查给定区间 $s \\in (1 - \\sqrt{2}, 1)$ 中 $s$ 的条件。\n这意味着 $1 - \\sqrt{2}  s  1$，进而意味着 $-\\sqrt{2}  s-1  0$。\n对这个不等式平方得到 $0  (s-1)^2  2$。\n奇点发生在 $x_{\\text{sing}} = \\frac{(s-1)^2}{2}$。\n代入 $(s-1)^2$ 的范围，我们得到 $0  \\frac{(s-1)^2}{2}  1$。\n因此，对于任何 $s \\in (1-\\sqrt{2}, 1)$，奇点 $y'(x) = 1$ 会在某个 $x_{\\text{sing}} \\in (0, 1)$ 处达到。数值积分无法继续到 $x=1$。因此，$y(1;s)$ 不存在，目标函数 $F(s)$ 在这个 $s$ 的范围内没有定义。该陈述是准确的。\n\n结论：**正确**。\n\n**B. 对于 $s \\le 1 - \\sqrt{2}$，目标函数 $F(s)$ 作为 $s$ 的函数是连续的，并且关于 $s$ 是严格递增的。**\n\n对于 $s \\le 1 - \\sqrt{2}$，我们有 $|s-1| \\ge \\sqrt{2}$，所以 IVP 在整个区间 $[0,1]$ 上是良定义的。根据 ODE 的解对初值的连续依赖性定理，解 $y(1;s)$ 是初始参数 $s$ 的一个连续函数，因为当 $y' \\neq 1$ 时，ODE 的右端项是光滑的。因此，$F(s)=y(1;s)-\\beta$ 是连续的。\n\n要检查 $F(s)$ 是否严格递增，我们需要确定 $\\frac{dF}{ds} = \\frac{dy(1;s)}{ds}$ 的符号。\n令 $z(x;s) = \\frac{\\partial y(x;s)}{\\partial s}$。将 IVP 对 $s$ 求导，得到变分方程：\n$$ z''(x) = \\frac{d}{ds} \\left( \\frac{1}{1-y'(x;s)} \\right) = \\frac{1}{(1-y'(x;s))^2} z'(x) $$\n初始条件为：\n$$ z(0) = \\frac{\\partial y(0;s)}{\\partial s} = 0, \\quad z'(0) = \\frac{\\partial y'(0;s)}{\\partial s} = \\frac{\\partial s}{\\partial s} = 1 $$\n对于 $s \\le 1 - \\sqrt{2}$，我们有 $y'(x) = 1 - \\sqrt{(s-1)^2 - 2x}$，所以 $1-y'(x) = \\sqrt{(s-1)^2 - 2x}$。变分方程中的分母是 $(1-y'(x))^2 = (s-1)^2-2x > 0$ 对于 $x \\in [0,1]$。\n令 $v(x) = z'(x)$。$v$ 的 ODE 是 $v'(x) = \\frac{v(x)}{(s-1)^2-2x}$，且 $v(0)=1$。\n由于 $v(0)=1>0$ 且 $(s-1)^2-2x > 0$，$v'(x)$ 将与 $v(x)$ 同号。这意味着对于 $x \\ge 0$，$v(x)$ 保持为正。所以，对于所有 $x \\in [0,1]$，$z'(x) = v(x) > 0$。\n我们关心的是 $\\frac{dy(1;s)}{ds} = z(1)$。我们有：\n$$ z(1) = z(0) + \\int_0^1 z'(x) dx = 0 + \\int_0^1 z'(x) dx $$\n因为在 $[0,1]$ 上 $z'(x) > 0$，该积分严格为正。因此，$\\frac{dF}{ds} = z(1) > 0$。这证明了对于 $s \\le 1-\\sqrt{2}$，$F(s)$ 是严格递增的。该陈述是准确的。\n\n结论：**正确**。\n\n**C. 即使初始猜测 $s^{(0)}$ 位于 $(1 - \\sqrt{2}, 1)$ 区间内，直接应用于 $F(s)$ 的牛顿法也总能收敛到一个根。**\n\n寻找 $F(s)=0$ 的根的牛顿法由迭代公式 $s^{(k+1)} = s^{(k)} - \\frac{F(s^{(k)})}{F'(s^{(k)})}$ 给出。这个迭代过程要求在每一步都计算函数 $F(s)$ 及其导数 $F'(s)$ 的值。正如选项 A 的分析所确立的，对于区间 $(1 - \\sqrt{2}, 1)$ 中的任何 $s$，函数 $F(s)$ 都是未定义的。因此，如果初始猜测 $s^{(0)}$ 在这个区间内，牛顿法的第一步就无法执行。该陈述从根本上就是错误的。\n\n结论：**错误**。\n\n**D. 一个稳健的策略是在 IVP 积分过程中实现对 $y'(x) = 1$ 的事件检测，并在一个已知 IVP 能在不遇到奇点的情况下到达 $x=1$ 的 $s$ 区间上，应用基于区间的一维求根方法（如二分法或割线法），从而避免 $F(s)$ 的不连续性。**\n\n这个陈述描述了解决该 BVP 的一种实用方法。我们来分析其组成部分：\n1.  实现对 $y'(x)=1$ 的事件检测：这是一个稳健求解器的关键特性。打靶函数 $F(s)$ 在一个很大的定义域上是未定义的。求根算法可能会尝试在这个定义域内的某个 $s$ 值处计算 $F(s)$。事件检测允许 IVP 求解器在奇点 $y'(x)=1$ 处平稳停止，报告该 $s$ 值计算失败，并允许求根器调整其搜索，从而防止崩溃。这是处理状态相关奇点的标准技术。\n2.  应用基于区间的……方法（如二分法）：像二分法这样的区间法以其稳健性而闻名。如果从一个区间 $[s_a, s_b]$ 开始，其中 $F(s_a)$ 和 $F(s_b)$ 符号相反，它们保证收敛。考虑到 $F(s)$ 的巨大不连续性，像二分法这样稳健的方法比牛顿法更可取，因为牛顿法很容易失败。（虽然割线法不严格是区间法，但它经常与它们归为一类，在典型的二分法之后将其作为次要例子提及并不会使整体策略失效）。\n3.  ……在一个已知 IVP 能到达 $x=1$ 的 $s$ 区间上：这是正确的方法。对根 $s$ 的搜索必须限制在两个“安全”域中的一个，即 $(-\\infty, 1-\\sqrt{2}]$ 或 $[1+\\sqrt{2}, \\infty)$，在这些区域 $F(s)$ 是连续的。通过这样做，可以避开 $F(s)$ 未定义的有问题区域。\n总而言之，该陈述准确地描述了一种使用打靶法解决此类 BVP 的可靠且稳健的数值策略。\n\n结论：**正确**。", "answer": "$$\\boxed{ABD}$$", "id": "3256930"}]}