{"hands_on_practices": [{"introduction": "让我们从莱斯定理的一个基本应用开始。这个问题要求我们判断一个给定的图灵机所接受的所有字符串是否都具有偶数长度。这个练习非常适合实践应用莱斯定理的核心步骤：将一个语言属性形式化，检查它是否为“非平凡”的，然后应用该定理来确定其可判定性。[@problem_id:1446128]", "problem": "在理论计算机科学领域，图灵机 (TM) 是一种计算的数学模型。一个给定的图灵机 $M$ 所接受的所有输入字符串的集合被称为 $M$ 的语言，记为 $L(M)$。如果存在一个图灵机，它在每个输入字符串上都会停机，并且接受属于 $L$ 的字符串，同时拒绝不属于 $L$ 的字符串，那么语言 $L$ 就被称为是可判定的。如果一个问题对应的“是”实例的语言是可判定的，那么这个问题就被称为可判定的。\n\n考虑以下问题：给定任意图灵机 $\\langle M \\rangle$ 的描述，判断其语言 $L(M)$ 是否具有以下性质：对于 $L(M)$ 中的每个字符串 $w$，$w$ 的长度都是偶数。换句话说，我们想知道是否对于所有 $w \\in L(M)$，$|w|$ 都是偶数。我们将此性质称为 $P_{\\text{even}}$。\n\n以下哪个陈述正确地描述了该问题的可判定性？\n\nA. 该问题是可判定的，并且可以构造一个通用算法来为任何给定的图灵机求解该问题。\nB. 该问题是不可判定的，意味着不存在通用算法可以为所有可能的图灵机解决该问题。\nC. 该问题仅对于保证在所有输入上停机的图灵机子集（即，判定器）是可判定的。\nD. 该问题是可判定的，但已知任何解决该问题的算法所需的时间复杂度至少是图灵机描述大小的指数级。", "solution": "我们将该性质形式化如下。令 $E = \\{ w \\mid |w| \\text{ is even} \\}$。所讨论的性质是\n$$\nP_{\\text{even}}(M) \\iff L(M) \\subseteq E.\n$$\n这是一个语义性质：它仅取决于 $M$ 所识别的语言 $L(M)$，而不取决于 $M$ 的具体描述。\n\n我们首先证明 $P_{\\text{even}}$ 是非平凡的。存在一个图灵机 $M_{\\emptyset}$，其语言为 $L(M_{\\emptyset}) = \\emptyset$，因此 $L(M_{\\emptyset}) \\subseteq E$ 且 $P_{\\text{even}}(M_{\\emptyset})$ 成立。也存在一个图灵机 $M_{1}$，其语言为 $L(M_{1}) = \\{1\\}$，所以 $L(M_{1}) \\nsubseteq E$ 且 $P_{\\text{even}}(M_{1})$ 不成立。因此，$P_{\\text{even}}$ 并非对所有语言都为真，也并非对所有语言都为假；它是非平凡的。\n\n根据 Rice 定理，图灵机所识别语言的任何非平凡语义性质都是不可判定的。由于 $P_{\\text{even}}$ 就是这样一个性质，因此给定 $\\langle M \\rangle$，判断 $L(M) \\subseteq E$ 是否成立的问题是不可判定的。这排除了选项 A 和 D，并确立了选项 B。\n\n为了讨论选项 C，我们考虑将输入限制为保证是判定器（在每个输入上都会停机）的图灵机。我们通过将停机问题归约到该问题，来证明即使在这种保证下，$P_{\\text{even}}$ 仍然是不可判定的。给定任意图灵机 $N$ 和输入 $y$，构造一个全图灵机 $D_{N,y}$，其对输入 $w$ 的定义如下：\n- 如果 $|w|$ 是偶数，则拒绝。\n- 如果 $|w|$ 是奇数，模拟 $N$ 在输入 $y$ 上的运行 $|w|$ 步；如果 $N$ 在这 $|w|$ 步内停机，则接受，否则拒绝。\n\n根据其构造（有界模拟），$D_{N,y}$ 在所有输入上都会停机，因此它是一个判定器。此外，\n$$\nN \\text{ 在 } y \\text{ 上停机} \\iff \\exists w \\text{ 使得 } |w| \\text{ 是奇数且 } w \\in L(D_{N,y}) \\iff L(D_{N,y}) \\nsubseteq E.\n$$\n等价地，\n$$\n\\neg\\big(P_{\\text{even}}(D_{N,y})\\big) \\iff N \\text{ 在 } y \\text{ 上停机}.\n$$\n因此，如果我们能够为判定器判定 $P_{\\text{even}}$，我们就能判定停机问题，而这是一个矛盾。因此选项 C 是错误的。\n\n所以，正确的陈述是该问题是不可判定的，即选项 B。", "answer": "$$\\boxed{B}$$", "id": "1446128"}, {"introduction": "莱斯定理是一个强大的工具，但了解其局限性至关重要。它只适用于图灵机所识别的*语言*的属性，而不适用于机器的内部结构或特定计算路径。这个练习将挑战你扮演一名计算侦探，审视关于图灵机的几个不同问题，并确定哪些是真正关于语言本身的（因此受莱斯定理约束），哪些则不是。[@problem_id:1446117]", "problem": "可计算性理论的一个核心主题是区分那些可以通过算法回答的问题（可判定问题）和那些无法通过算法回答的问题（不可判定问题）。考虑一个标准的图灵机（TM）模型，它有一个单带，并在二进制输入字母表 $\\Sigma = \\{0, 1\\}$ 上操作。一台图灵机 $M$ 所识别的语言，记为 $L(M)$，是所有 $M$ 在其上停机并接受的字符串的集合。这样的语言被称为递归可枚举语言。\n\n递归可枚举语言的一个性质 $P$ 是一个递归可枚举语言的集合。如果一台图灵机 $M$ 的语言 $L(M)$ 在集合 $P$ 中，我们就说 $M$ 具有性质 $P$。这意味着该性质仅取决于语言本身，而不取决于识别它的具体机器。如果所有递归可枚举语言都在 $P$ 中，或者没有递归可枚举语言在 $P$ 中，那么性质 $P$ 就被称为平凡的。Rice 定理指出，任何递归可枚举语言的非平凡性质都是不可判定的。形式上，对于任何这样的性质 $P$，语言 $L_P = \\{ \\langle M \\rangle \\mid L(M) \\in P \\}$ 是不可判定的，其中 $\\langle M \\rangle$ 是机器 $M$ 的编码。\n\n为本题之目的，我们定义语言 $L$ 的 **DFA-复杂度**：如果 $L$ 是正则的，则其 DFA-复杂度是接受 $L$ 的最小确定性有限自动机（DFA）的状态数。如果 $L$ 不是正则语言，则其 DFA-复杂度被认为是无限的。\n\n给定一台图灵机 $M$ 的编码 $\\langle M \\rangle$。对于下面的每个问题，请确定它构成的是一个可判定问题还是一个不可判定问题。\n\n*   **A.** $L(M)$ 的 DFA-复杂度是一个大于 1 的有限数吗？\n*   **B.** $M$ 在空带上启动时，是否在完全平方数步数后停机？\n*   **C.** 语言 $L(M)$ 非空且其中所有字符串的长度都是偶数吗？\n*   **D.** 描述 $\\langle M \\rangle$ 的二进制表示是否包含子串 '10101'？\n*   **E.** $L(M)$ 是否包含语言 $\\{0^n 1^n \\mid 0 \\le n \\le 10\\}$ 作为子集？\n\n以上哪些问题对应于不可判定问题？", "solution": "我们通过确定每个问题是否询问 $L(M)$ 的语义性质（即，仅取决于所识别的语言）以及该性质是否非平凡来分析每个问题。对于递归可枚举语言的非平凡语义性质，根据 Rice 定理，它们是不可判定的。对于关于句法编码或并非仅由 $L(M)$ 决定的特定计算行为的性质，我们直接考察其可判定性或给出从停机问题的归约。\n\nA. 我们将性质 $P_A$ 定义为所有满足以下条件的递归可枚举语言 $L$ 的集合：接受 $L$ 的最小确定性有限自动机（DFA）的状态数是一个大于 1 的有限数。这是一个仅取决于 $L(M)$ 的性质，因此是语义性质。它是非平凡的：例如，在字母表 $\\{0,1\\}$ 上的语言 $L=\\{0\\}^*$ 满足 $P_A$（其最小 DFA 有 2 个状态），而 $L=\\emptyset$ 不满足（其 DFA-复杂度为 1），任何非正则语言（例如 $\\{0^n 1^n \\mid n \\ge 0\\}$）也不满足（其 DFA-复杂度是无限的）。根据莱斯定理，该性质是不可判定的。因此 A 是不可判定的。\n\nB. 令 $H = \\{\\langle N \\rangle \\mid N \\text{ 在空输入上停机}\\}$ 为停机问题，它是不可判定的。我们将 $H$ 归约到问题 B 所对应的语言 $S = \\{\\langle M \\rangle \\mid M \\text{ 在空输入上经过一个完全平方数步后停机}\\}$。给定 $\\langle N \\rangle$，我们可以构造一个图灵机 $\\langle M' \\rangle$，使得在空输入上，$M'$ 模拟 $N$ 在空输入上的行为；如果 $N$ 在 $t$ 步后停机，则 $M'$ 执行额外的无操作步骤，直到总步数等于某个大于 $t$ 的完全平方数 $s^2$ 然后停机；如果 $N$ 不停机，则 $M'$ 也不停机。这个构造确保了：\n$$\n\\langle N \\rangle \\in H \\iff \\langle M' \\rangle \\in S.\n$$\n因此，$S$ 的判定器将能判定 $H$，这构成了矛盾。所以 B 是不可判定的。\n\nC. 我们将性质 $P_C$ 定义为所有满足以下条件的递归可枚举语言 $L$ 的集合：$L$ 非空，且 $L$ 中所有字符串的长度都是偶数。这仅取决于 $L(M)$，因此是语义性质。它是非平凡的：例如，$L=\\{00\\}$ 满足它，而 $L=\\{0\\}$ 或 $L=\\emptyset$ 不满足。根据莱斯定理，该性质是不可判定的。因此 C 是不可判定的。\n\nD. 该问题询问的是有限的二进制字符串编码 $\\langle M \\rangle$ 是否包含子串 '10101'。这是一个可判定问题：给定 $\\langle M \\rangle$，执行一个有限的子串搜索，当且仅当 '10101' 出现时接受。这个性质取决于句法编码，而不是 $L(M)$，并且是平凡可判定的。因此 D 是可判定的。\n\nE. 令 $S_0=\\{0^n 1^n \\mid 0 \\le n \\le 10\\}$。我们将性质 $P_E$ 定义为所有满足 $S_0 \\subseteq L$ 的递归可枚举语言 $L$ 的集合。这是语义性质且非平凡的：$L=\\Sigma^*$ 满足它，而 $L=\\emptyset$ 不满足。根据莱斯定理，该性质是不可判定的。我们可以通过将停机问题（或更直接地，接受问题 $A_{TM}$）归约到这个问题来证明。给定图灵机 $M$ 和输入 $w$，构造一个新图灵机 $M'$，它对任何输入 $x$ 执行以下操作：首先模拟 $M$ 在 $w$ 上的运行；如果 $M$ 接受 $w$，$M'$ 就接受 $x$；如果 $M$ 拒绝或循环， $M'$ 也拒绝或循环。于是：如果 $M$ 接受 $w$，则 $L(M')=\\Sigma^*$，那么 $S_0 \\subseteq L(M')$ 成立。如果 $M$ 不接受 $w$，则 $L(M')=\\emptyset$，那么 $S_0 \\subseteq L(M')$ 不成立。因此，一个针对 $P_E$ 的判定器可以用来解决接受问题 $A_{TM}$，而后者是不可判定的。因此 E 是不可判定的。\n\n总结结果：A、B、C 和 E 是不可判定的；D 是可判定的。", "answer": "$$\\boxed{ABCE}$$", "id": "1446117"}, {"introduction": "在证明了许多属性是不可判定的之后，我们现在将进行更深入的探讨。如果一个问题是不可判定的，我们是否至少能构建一个算法来确认“是”的实例（即一个识别器）？这个练习通过询问一个图灵机的语言是否满足正则语言的泵引理，将可计算性理论与自动机理论联系起来。通过这个复杂的属性，你不仅将证实其不可判定性，还将探索为什么有些问题是如此困难，以至于它们甚至不是“可识别的”。[@problem_id:1446095]", "problem": "可计算性理论的一个核心主题是对哪些问题可由算法解决进行分类。考虑一个与正则语言基本定理相关的形式语言性质。\n\n令 $P_{pump}$ 为语言 $L$ 满足正则语言泵引理条件的性质。具体来说，如果存在一个整数 $p \\ge 1$（泵长度），使得对于任意长度 $|s| \\ge p$ 的字符串 $s \\in L$，该字符串 $s$ 都能被分成三部分 $s = xyz$，并满足以下三个条件，则语言 $L$ 具有性质 $P_{pump}$：\n1.  $|y| \\ge 1$\n2.  $|xy| \\le p$\n3.  对于所有整数 $i \\ge 0$，字符串 $xy^iz$ 也属于 $L$。\n\n现在，定义语言 $L_{PUMP}$ 为所有其接受的语言具有性质 $P_{pump}$ 的图灵机 (TM) 编码的集合。即：\n$$L_{PUMP} = \\{ \\langle M \\rangle \\mid M \\text{ is a TM and } L(M) \\text{ has property } P_{pump} \\}$$\n\n下列哪个陈述正确地对语言 $L_{PUMP}$ 进行了分类？\n\nA. $L_{PUMP}$ 是正则的。\nB. $L_{PUMP}$ 是上下文无关但非正则的。\nC. $L_{PUMP}$ 是可判定但非上下文无关的。\nD. $L_{PUMP}$ 是可识别但不可判定的。\nE. $L_{PUMP}$ 是不可识别的。", "solution": "该问题要求确定语言 $L_{PUMP} = \\{ \\langle M \\rangle \\mid L(M) \\text{ has property } P_{pump} \\}$ 的分类。这是一个关于图灵机语言性质的判定问题。我们可以使用 Rice 定理和可识别性的概念来分析此问题。\n\n首先，我们应用 Rice 定理来确定 $L_{PUMP}$ 是否是可判定的。Rice 定理指出，关于图灵机所接受语言的任何非平凡性质都是不可判定的。如果一个性质仅取决于图灵机接受的字符串集合，而与图灵机的具体实现无关，那么它就是语言的性质。如果至少存在一台图灵机，其语言具有该性质，并且至少存在另一台图灵机，其语言不具有该性质，那么该性质就是非平凡的。\n\n1.  **$P_{pump}$ 是语言的性质吗？**\n    是的。$P_{pump}$ 的定义完全取决于语言 $L$ 中的字符串集合。如果两台不同的图灵机 $M_1$ 和 $M_2$ 接受相同的语言，即 $L(M_1) = L(M_2)$，那么它们的语言要么都具有性质 $P_{pump}$，要么都不具有。该性质不依赖于图灵机的状态数、转移函数或带字母表。\n\n2.  **$P_{pump}$ 是非平凡性质吗？**\n    为了证明其非平凡性，我们必须找到一台其语言具有该性质的图灵机，以及一台其语言不具有该性质的图灵机。\n    *   **存在语言具有该性质的图灵机：** 考虑一个简单的正则语言，例如 $L_1 = \\{ a^n \\mid n \\ge 0 \\}$。该语言是正则的，而自动机理论的一个基本结论是，每个正则语言都满足泵引理。因此，$L_1$ 具有性质 $P_{pump}$。我们可以构造一台接受 $L_1$ 的图灵机 $M_1$。因此，存在一台图灵机 $\\langle M_1 \\rangle$，使得 $L(M_1)$ 具有性质 $P_{pump}$。\n    *   **存在语言不具有该性质的图灵机：** 考虑经典的上下文无关语言 $L_2 = \\{ a^n b^n \\mid n \\ge 0 \\}$。证明 $L_2$ 非正则的标准方法就是证明它不满足正则语言泵引理的条件。因此，$L_2$ 不具有性质 $P_{pump}$。我们可以构造一台接受 $L_2$ 的图灵机 $M_2$。因此，存在一台图灵机 $\\langle M_2 \\rangle$，使得 $L(M_2)$ 不具有性质 $P_{pump}$。\n\n由于 $P_{pump}$ 是图灵机语言的一个非平凡性质，根据 Rice 定理，语言 $L_{PUMP}$ 是**不可判定的**。\n\n这个结论立即排除了选项 A、B 和 C，因为正则语言、上下文无关语言和可判定语言都是可判定的。我们剩下 D（可识别但不可判定）和 E（不可识别）两个选项。\n\n为了确定 $L_{PUMP}$ 是否可识别，我们必须确定是否可以构建一台图灵机（一个识别器 $R$），对于任何使得 $L(M)$ 具有性质 $P_{pump}$ 的输入 $\\langle M \\rangle$，该识别器都会停机并接受。\n\n性质 $P_{pump}$ 由以下陈述定义：\n$(\\exists p \\ge 1) (\\forall s \\in L(M)) [|s| \\ge p \\implies (\\exists x,y,z \\text{ s.t. } s=xyz, |y|>0, |xy| \\le p) (\\forall i \\ge 0) [xy^iz \\in L(M)]]$\n\n$L_{PUMP}$ 的识别器需要确认对于给定的 $\\langle M \\rangle$，这个陈述为真。识别器可以尝试遍历所有可能的泵长度 $p = 1, 2, 3, \\ldots$。对于一个给定的 $p$，它必须对**所有**长度至少为 $p$ 的字符串 $s \\in L(M)$ 验证该条件。问题就出在这个对无限字符串集合（$L(M)$ 可能是无限的）的全称量化上。一台图灵机无法在有限时间内检查一个对无限多个字符串的条件。检查 $s \\in L(M)$ 本身也只有在 $M$ 在输入 $s$ 上停机时才有保证，而这对于所有的图灵机 $M$ 和所有的字符串都无法保证。\n\n该性质的形式结构是 $\\exists\\forall\\exists\\forall$。在算术层级中，可以表示为 $\\Sigma_1$ 形式（在一个可判定谓词上有一个存在量词）的性质对应于可识别语言。表示为 $\\Pi_1$ 形式（有一个全称量词）的性质对应于余可识别语言。$P_{pump}$ 的结构更复杂，包含存在量词和全称量词的交替 $(\\exists p)(\\forall s)(\\dots)$。这种结构通常对应于算术层级中更高的层次（例如 $\\Sigma_2$ 或 $\\Pi_2$），已知这超出了标准图灵机能够识别（$\\Sigma_1$）或余识别（$\\Pi_1$）的范围。\n\n因此，没有图灵机能够识别 $L_{PUMP}$。这意味着 $L_{PUMP}$ 是不可识别的。\n\n基于此分析，语言 $L_{PUMP}$ 是不可判定且不可识别的。这对应于选项 E。", "answer": "$$\\boxed{E}$$", "id": "1446095"}]}