{"hands_on_practices": [{"introduction": "让我们从最简单的波斯特对应问题（PCP）实例开始：一个只包含一对多米诺骨牌的实例。这个练习将迫使我们回归第一性原理，深入思考构成一个PCP解的本质条件。在处理更复杂的组合问题之前，通过这个练习打下坚实的基础至关重要。[@problem_id:1436463]", "problem": "波斯特对应问题 (Post Correspondence Problem, PCP) 是理论计算机科学中一个著名的不可判定决策问题。PCP 的一个实例包含一个有限的“多米诺骨牌”集合，其中每个多米诺骨牌都是某个字母表上的一个字符串对。一个解是这些多米诺骨牌的一个序列（允许重复），使得所有“顶部”字符串连接形成的字符串与所有“底部”字符串连接形成的字符串完全相同。\n\n考虑该问题的一个高度简化的版本，其中可用的多米诺骨牌集合仅包含一对非空字符串，记为 $P = \\{ (u, v) \\}$，其中 $u$ 和 $v$ 是字母表 $\\Sigma$ 上的字符串。该实例的一个解将是一个或多个此单一多米诺骨牌的副本组成的序列，该序列形成一个匹配。\n\n以下哪个陈述正确且完整地描述了此单多米诺骨牌 PCP 实例有解的条件？\n\nA. 当且仅当 $u$ 是 $v$ 的前缀或 $v$ 是 $u$ 的前缀时，存在解。\nB. 该问题仍然是不可判定的，因此无法陈述通用条件。\nC. 对于任意选择的非空字符串 $u$ 和 $v$，都存在解。\nD. 当且仅当字符串 $u$ 的长度等于字符串 $v$ 的长度时，存在解。\nE. 当且仅当字符串 $u$ 与字符串 $v$ 完全相同时，存在解。\nF. 当且仅当 $u$ 和 $v$ 互为变位词（即包含相同字符且频率相同）时，存在解。", "solution": "我们给定一个单多米诺骨牌 PCP 实例，其中 $P=\\{(u,v)\\}$，$u$ 和 $v$ 是字母表 $\\Sigma$ 上的非空字符串，一个解是一个或多个此单一多米诺骨牌的副本组成的序列，使得所有顶部字符串的连接等于所有底部字符串的连接。\n\n将单一多米诺骨牌 $(u,v)$ 使用恰好 $k\\geq 1$ 次会产生字符串对 $(u^{k},v^{k})$，其中 $x^{k}$ 表示 $x$ 与自身连接 $k$ 次。因此，该实例有解，当且仅当存在 $k\\in\\mathbb{N}$ 且 $k\\geq 1$ 使得\n$$\nu^{k}=v^{k}.\n$$\n\n我们使用字符串的基本长度属性：对于任意字符串 $x,y$，有 $|xy|=|x|+|y|$，因此 $|x^{k}|=k|x|$。将此应用于等式 $u^{k}=v^{k}$ 可得\n$$\n|u^{k}|=|v^{k}|\\quad\\Longrightarrow\\quad k|u|=k|v|\\quad\\Longrightarrow\\quad |u|=|v|.\n$$\n设 $|u|=|v|=\\ell$。考虑等式 $u^{k}=v^{k}$ 的前 $\\ell$ 个符号。$u^{k}$ 的前 $\\ell$ 个符号恰好是 $u$，$v^{k}$ 的前 $\\ell$ 个符号恰好是 $v$（因为当 $|u|=|v|$ 时，块边界是对齐的）。因此，\n$$\nu=v.\n$$\n因此，存在 $k\\geq 1$ 使得 $u^{k}=v^{k}$ 的一个必要条件是 $u=v$。\n\n反之，如果 $u=v$，那么选择 $k=1$ 立即得到 $u^{1}=v^{1}$，所以解是存在的。因此，该条件也是充分的。\n\n结合必要性和充分性，该单多米诺骨牌 PCP 实例有解的充要条件是 $u$ 与 $v$ 完全相同。在所提供的选项中，这正是陈述 E。所有其他选项都不成立：仅长度相等（D）在不相等的情况下是不够的；前缀（A）、变位词（F）或任意非空字符串（C）都不能保证任何相等次幂的相等性；不可判定性（B）不适用于这种平凡的单多米诺骨牌情况。", "answer": "$$\\boxed{E}$$", "id": "1436463"}, {"introduction": "理解了匹配的基本条件后，让我们来处理一个更标准的、包含多个多米诺骨牌的PCP实例。这个练习将引入一个关键的解题策略：检查前缀属性。这个方法可以有效地缩小寻找解的搜索空间，是解决PCP问题时非常有用的技巧。[@problem_id:1436490]", "problem": "波斯特对应问题 (Post's Correspondence Problem, PCP) 是理论计算机科学中一个经典的不可判定的判定问题。一个 PCP 实例由一组有限的“多米诺骨牌”组成，其中每个骨牌在某个字母表 $\\Sigma$ 上都有一个“顶部”字符串和一个“底部”字符串。一个 PCP 实例的解是一个非空的骨牌索引序列 $i_1, i_2, \\ldots, i_k$（允许重复），使得顶部字符串的串接等于底部字符串的串接。也就是说，如果骨牌 $j$ 是序对 $(t_j, b_j)$，那么解是一个索引序列 $[i_1, i_2, \\ldots, i_k]$，其中 $k \\ge 1$，满足 $t_{i_1}t_{i_2}\\ldots t_{i_k} = b_{i_1}b_{i_2}\\ldots b_{i_k}$。整数 $k$ 被称为解的长度。\n\n考虑以下在字母表 $\\Sigma = \\{0, 1\\}$ 上的 PCP 实例 $P$。多米诺骨牌以（顶部字符串, 底部字符串）序对的形式给出：\n- 骨牌 1: $(01, 1)$\n- 骨牌 2: $(0, 00)$\n\n对于这个 PCP 实例 $P$，以下哪个陈述是正确的？\n\nA. 最短解的长度为 2。\nB. 最短解的长度为 3。\nC. 最短解的长度为 4。\nD. 存在解，但最短解的长度大于 4。\nE. 该问题无解。", "solution": "给定的 PCP 实例及其多米诺骨牌如下：\n1: 顶部 $t_{1}=\\text{``01''}$，底部 $b_{1}=\\text{``1''}$，\n2: 顶部 $t_{2}=\\text{``0''}$，底部 $b_{2}=\\text{``00''}$。\n\n任何部分骨牌序列能够扩展成一个解的必要条件是前缀性质：在放置任何初始子序列后，两个串接的字符串中，一个必须是另一个的前缀。特别地，任何解中的第一个骨牌，其顶部和底部字符串必须具有前缀关系。\n\n检查每个骨牌作为第一个骨牌的可能性：\n- 骨牌 1: $t_{1}=\\text{``01''}$ 和 $b_{1}=\\text{``1''}$ 不具有前缀关系，因为它们的第一个符号不同。因此，骨牌 1 不能作为任何有效序列的开头。\n- 骨牌 2: $t_{2}=\\text{``0''}$ 是 $b_{2}=\\text{``00''}$ 的前缀。因此，任何解都必须以骨牌 2 开始。\n\n首先放置骨牌 2 后，底部字符串比顶部字符串多出一个悬垂部分 $\\text{``0''}$。为了继续，我们必须使用一个顶部以这个悬垂部分开头的骨牌，然后进行相应的抵消。\n\n考虑第二个骨牌的两种选择：\n- 第二个骨牌为 1: 此时悬垂部分为 $s=\\text{``0''}$，$t_{1}=\\text{``01''}$，$b_{1}=\\text{``1''}$。由于 $t_{1}=s\\,r$ 且 $r=\\text{``1''}$，我们将 $s$ 与 $t_{1}$ 的开头部分抵消，然后比较 $r$ 和 $b_{1}$。因为 $r=b_{1}=\\text{``1''}$，新的悬垂部分变为空，从而在放置两个骨牌后顶部和底部字符串相等。具体来说，\n$$\nt_{2}t_{1}=\\text{``0''}\\,\\text{``01''}=\\text{``001''},\\qquad\nb_{2}b_{1}=\\text{``00''}\\,\\text{``1''}=\\text{``001''}.\n$$\n因此 $[2,1]$ 是一个长度为 $2$ 的解。\n\n- 第二个骨牌为 2: 此时悬垂部分为 $s=\\text{``0''}$，$t_{2}=\\text{``0''}$，$b_{2}=\\text{``00''}$。由于 $s=t_{2}$，抵消后留下一个新的底部悬垂部分 $s' b_{2}=\\text{``00''}$，所以在两步内还未达到相等。\n\n最后，不存在长度为 $1$ 的解，因为 $t_{1}\\ne b_{1}$ 且 $t_{2}\\ne b_{2}$。因此，最短解的长度是 $2$，由序列 $[2,1]$ 实现。", "answer": "$$\\boxed{A}$$", "id": "1436490"}, {"introduction": "为了理解PCP是如何被用来证明其他问题不可判定性的，我们常常需要借助它的一个变体——“修正的波斯特对应问题”（MPCP）。这个练习旨在探索PCP和MPCP之间的细微但关键的区别。你将面临的挑战是，找到一个在一种定义下有解，但在另一种定义下无解的实例。[@problem_id:1436472]", "problem": "在计算理论中，Post 对应问题（Post's Correspondence Problem, PCP）是一个著名的不可判定问题。一个 PCP 实例由一组有限的“多米诺骨牌”组成，$P = \\{ (t_1, b_1), (t_2, b_2), \\dots, (t_k, b_k) \\}$，其中每个 $t_i$ 和 $b_i$ 都是给定字母表 $\\Sigma$ 上的非空字符串。该实例的一个解是一个索引序列 $i_1, i_2, \\dots, i_m$（$m \\ge 1$），使得顶部字符串的拼接与底部字符串的拼接相匹配：$t_{i_1}t_{i_2}\\dots t_{i_m} = b_{i_1}b_{i_2}\\dots b_{i_m}$。\n\n修正的 Post 对应问题（Modified Post's Correspondence Problem, MPCP）是一个变体，其中解序列被要求从第一张多米诺骨牌（索引为 1 的那张）开始。也就是说，MPCP 的一个解是一个以 1 开始的序列，例如 $1, i_2, \\dots, i_m$（$m \\ge 1$），满足相同的拼接属性：$t_1t_{i_2}\\dots t_{i_m} = b_1b_{i_2}\\dots b_{i_m}$。\n\n考虑以下四个基于字母表 $\\Sigma = \\{0, 1\\}$ 的 PCP 实例。每个实例都是一组 $(t_i, b_i)$ 对，其中多米诺骨牌从 1 开始索引。这些实例中，哪一个存在 PCP 解，但不存在其对应的 MPCP 解？\n\nA. $P_A = \\{ (0, 01), (10, 0) \\}$\nB. $P_B = \\{ (1, 101), (10, 1), (0, 00) \\}$\nC. $P_C = \\{ (01, 1), (10, 0) \\}$\nD. $P_D = \\{ (10, 1), (0, 10) \\}$", "solution": "问题要求我们识别一个有 Post 对应问题（PCP）解但其对应的修正 Post 对应问题（MPCP）无解的实例。让我们逐一分析每个选项。\n\n**选项 A 分析：$P_A = \\{ (1: 0, 01), (2: 10, 0) \\}$**\n\n首先，我们检查是否存在 MPCP 解。一个 MPCP 解必须从多米诺骨牌 1 开始。\n- 初始序列：`1`\n- 顶部字符串：$t_1 = 0$\n- 底部字符串：$b_1 = 01$\n顶部字符串是底部字符串的前缀。底部字符串余下 '1'。为了找到匹配，我们添加的下一个顶部字符串必须以 '1' 开始。多米诺骨牌 2 的 $t_2 = 10$。我们尝试追加多米诺骨牌 2。\n- 序列：`1, 2`\n- 顶部字符串：$t_1t_2 = 010$\n- 底部字符串：$b_1b_2 = 010$\n字符串匹配。因此，序列 `1, 2` 是该实例的一个 MPCP 解。由于任何 MPCP 解也是一个 PCP 解，因此该实例对 PCP 和 MPCP 都有解。该选项不满足条件。\n\n**选项 B 分析：$P_B = \\{ (1: 1, 101), (2: 10, 1), (3: 0, 00) \\}$**\n\n首先，我们检查是否存在一个通用的 PCP 解。我们可以从任何多米诺骨牌开始。让我们尝试从多米诺骨牌 2 开始。\n- 初始序列：`2`\n- 顶部字符串：$t_2 = 10$\n- 底部字符串：$b_2 = 1$\n底部字符串是顶部字符串的前缀。顶部字符串余下 '0'。为了找到匹配，我们添加的下一个底部字符串必须以 '0' 开始。多米诺骨牌 3 的 $b_3 = 00$。我们尝试追加多米诺骨牌 3。\n- 序列：`2, 3`\n- 顶部字符串：$t_2t_3 = 100$\n- 底部字符串：$b_2b_3 = 100$\n字符串匹配。序列 `2, 3` 是一个 PCP 解。所以，该实例存在 PCP 解。\n\n现在，我们检查是否存在 MPCP 解。序列必须从多米诺骨牌 1 开始。\n- 初始序列：`1`\n- 顶部字符串：$t_1 = 1$\n- 底部字符串：$b_1 = 101$\n顶部字符串是底部字符串的前缀，剩余部分为 `01`。下一个多米诺骨牌的顶部字符串必须以 `0` 开始。只有多米诺骨牌 3（$t_3=0$）符合条件。\n- 序列：`1, 3`\n- 顶部字符串：$t_1t_3 = 10$\n- 底部字符串：$b_1b_3 = 10100$\n顶部字符串是底部字符串的前缀，剩余部分为 `100`。下一个多米诺骨牌的顶部字符串必须以 `1` 开始。我们可以选择多米诺骨牌 1（$t_1=1$）或多米诺骨牌 2（$t_2=10$）。\n- 路径 1（追加多米诺骨牌 2）：剩余部分为 `100`，$t_2=10$ 是它的前缀。\n  - 序列：`1, 3, 2`\n  - 顶部字符串：$t_1t_3t_2 = 1010$\n  - 底部字符串：$b_1b_3b_2 = 101001$\n  顶部字符串是底部字符串的前缀，剩余部分为 `01`。这和我们第一步之后得到的剩余状态相同。这导致了一个状态的非终止循环：剩余 `01` 迫使我们选择多米诺骨牌 3，导致剩余 `100`，这又允许我们选择多米诺骨牌 2，最终回到剩余 `01` 的状态。永远无法达到解。\n- 路径 2（追加多米诺骨牌 1）：剩余部分为 `100`，$t_1=1$ 是它的前缀。\n  - 序列：`1, 3, 1`\n  - 顶部字符串：$t_1t_3t_1 = 101$\n  - 底部字符串：$b_1b_3b_1 = 10100101$\n  顶部字符串是底部字符串的前缀，剩余部分为 `00101`。长度差 $|B|-|T|$ 在增加：它曾是 2，然后是 3，现在是 5。这条路径也不会终止于一个解。\n\n因为没有以多米诺骨牌 1 开始的序列能产生解，所以 MPCP 无解。因此，这个实例有 PCP 解但没有 MPCP 解。该选项满足条件。\n\n**选项 C 分析：$P_C = \\{ (1: 01, 1), (2: 10, 0) \\}$**\n\n让我们比较每个多米诺骨牌的顶部和底部字符串的长度。\n- 对于多米诺骨牌 1：$|t_1| = |01| = 2$，$|b_1| = |1| = 1$。顶部字符串更长。\n- 对于多米诺骨牌 2：$|t_2| = |10| = 2$，$|b_2| = |0| = 1$。顶部字符串更长。\n对于任何多米诺骨牌序列 $i_1, i_2, \\dots, i_m$，拼接后的顶部字符串长度为 $\\sum_{j=1}^m |t_{i_j}|$，底部字符串长度为 $\\sum_{j=1}^m |b_{i_j}|$。由于对所有 $i \\in \\{1, 2\\}$ 都有 $|t_i|  |b_i|$，顶部字符串的总长度将始终严格大于底部字符串的总长度。因此，不可能匹配。该实例没有 PCP 解（因此也没有 MPCP 解）。该选项不满足条件。\n\n**选项 D 分析：$P_D = \\{ (1: 10, 1), (2: 0, 10) \\}$**\n\n我们检查是否存在 PCP 解。设 $n_1$ 和 $n_2$ 分别为多米诺骨牌 1 和多米诺骨牌 2 在一个潜在解序列中被使用的次数。为了使顶部和底部字符串的总长度相等，我们需要长度差之和为零。\n- 多米诺骨牌 1 的长度差：$|t_1| - |b_1| = 2 - 1 = 1$。\n- 多米诺骨牌 2 的长度差：$|t_2| - |b_2| = 1 - 2 = -1$。\n一个解必须满足 $n_1 \\cdot (1) + n_2 \\cdot (-1) = 0$，这意味着 $n_1 = n_2$。任何解都必须使用相同数量的多米诺骨牌 1 和多米诺骨牌 2。\n让我们测试最简单的情况：$n_1 = 1, n_2 = 1$。可能的序列是 `1, 2` 和 `2, 1`。\n- 序列 `1, 2`：顶部是 $t_1t_2 = 100$，底部是 $b_1b_2 = 110$。不匹配。\n- 序列 `2, 1`：顶部是 $t_2t_1 = 010$，底部是 $b_2b_1 = 101$。不匹配。\n测试更多的组合（例如，$n_1=n_2=2$）也未能产生匹配。该实例似乎没有 PCP 解。因此，它不满足条件。\n\n根据分析，只有选项 B 有 PCP 解但缺少 MPCP 解。", "answer": "$$\\boxed{B}$$", "id": "1436472"}]}