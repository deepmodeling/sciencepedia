{"hands_on_practices": [{"introduction": "线性加速定理在理论上保证了我们可以将任何算法加速一个常数倍，但这在现实世界中意味着什么呢？实际的系统升级往往伴随着固定的开销，例如数据传输延迟或初始化时间。这个练习 [@problem_id:1430460] 将让你扮演一个计算科学家的角色，进行一次成本效益分析，以确定升级后的系统在何种问题规模下才真正具备优势。通过计算这个“盈亏平衡点”，你将体会到理论加速与实际效益之间的重要区别。", "problem": "一个计算研究实验室正在评估其高性能计算集群的升级方案。其主要工作负载是一个模拟算法，该算法在当前硬件上的运行时复杂度可以很好地用函数 $T(n) = A n^k$ 来建模，其中 $n$ 代表输入数据的大小。参数 $A$ 和 $k$ 是由现有硬件和特定算法决定的正实常数。\n\n一个提议的硬件加速器承诺为核心计算提供一个为 $c$ 的加速比，其中 $c$ 是一个大于1的实常数。然而，使用该加速器会引入一个固定的、不可忽略的设置和数据传输延迟，大小为 $K$ 秒，这是一个与输入大小 $n$ 无关的正实常数。因此，升级后系统的总运行时由函数 $T'(n) = \\frac{A n^k}{c} + K$ 给出。\n\n只有当升级对于某些问题规模能真正减少运行时，该实验室才会认为此升级具有成本效益。求最小输入规模的解析表达式（记为 $n_{min}$），使得对于所有输入规模 $n > n_{min}$，升级后的系统都比原系统快。请用参数 $A, k, c$ 和 $K$ 表示你的答案。", "solution": "我们寻求升级后系统更快的条件，即 $T'(n) < T(n)$。根据给定的模型，该不等式为\n$$\n\\frac{A n^{k}}{c} + K < A n^{k}.\n$$\n从不等式两边减去 $\\frac{A n^{k}}{c}$ 以分离出 $K$：\n$$\nK < A n^{k} - \\frac{A n^{k}}{c} = A n^{k} \\left(1 - \\frac{1}{c}\\right).\n$$\n由于 $c > 1$，我们有 $1 - \\frac{1}{c} = \\frac{c-1}{c} > 0$。将两边同除以 $A \\frac{c-1}{c}$（因为 $A > 0$ 且 $c > 1$，所以该项为正）得到\n$$\nn^{k} > \\frac{K}{A} \\cdot \\frac{c}{c - 1} = \\frac{K c}{A (c - 1)}.\n$$\n因为 $k > 0$，函数 $x \\mapsto x^{1/k}$ 在正实数域上是严格递增的，所以对两边取 $k$ 次方根，不等号方向不变：\n$$\nn > \\left( \\frac{K c}{A (c - 1)} \\right)^{\\frac{1}{k}}.\n$$\n我们将等号成立时的临界值定义为 $n_{min}$。注意到，当 $k > 0$ 时，差值 $T(n) - T'(n) = A n^{k} \\left(1 - \\frac{1}{c}\\right) - K$ 是关于 $n$ 的严格递增函数，这确保了对于所有 $n > n_{min}$，升级后的系统都更快。因此，\n$$\nn_{min} = \\left( \\frac{K c}{A (c - 1)} \\right)^{\\frac{1}{k}}.\n$$", "answer": "$$\\boxed{\\left(\\frac{K c}{A (c - 1)}\\right)^{\\frac{1}{k}}}$$", "id": "1430460"}, {"introduction": "线性加速定理带来的速度提升并非没有代价。其标准证明构造的新图灵机虽然运行更快，但其自身的复杂性却急剧增加，具体表现为状态集和字母表的爆炸式增长。这个练习 [@problem_id:1430470] 让你能够量化这种“隐藏成本”。你将通过分析迭代应用加速过程后，机器状态数量 $|Q_N|$ 和字母表大小 $|\\Gamma_N|$ 的增长关系，从而深刻理解为换取运行时间减少所付出的理论代价。", "problem": "一个理论计算机科学家团队正在分析对计算模型迭代应用优化技术时所涉及的权衡。他们从一个单带图灵机（TM）开始，记为 $M_0$，它有一个初始状态集 $Q_0$ 和一个带字母表 $\\Gamma_0$。初始状态数为 $|Q_0| = s$，初始字母表大小为 $|\\Gamma_0| = a$，其中 $a \\geq 2$ 且 $s \\geq 1$。\n\n他们通过重复应用一个基于线性加速定理的特定过程，生成了一系列速度越来越快的图灵机 $M_1, M_2, \\ldots, M_N$。对于 $k \\in \\{1, 2, \\ldots, N\\}$，从机器 $M_{k-1}$ 到 $M_k$ 的变换由一个恒定的符号压缩因子（一个整数 $m > 1$）控制。此变换遵循两条规则：\n\n1.  **字母表扩展**：机器 $M_k$ 的带字母表 $\\Gamma_k$ 是通过将 $\\Gamma_{k-1}$ 中的符号分组成长度为 $m$ 的不重叠块来构造的。因此，$M_k$ 的单个符号代表了 $M_{k-1}$ 的 $m$ 个符号序列。\n2.  **状态复杂度增长**：在一个计算步骤中，机器 $M_k$ 模拟机器 $M_{k-1}$ 的行为。为实现这一点，$M_k$ 的有限控制器不仅必须存储 $M_{k-1}$ 的当前状态，还必须存储 $M_{k-1}$ 的局部带配置。构造协议规定，$Q_k$ 中的一个状态必须编码来自 $Q_{k-1}$ 的当前状态，以及 $M_{k-1}$ 带上长度为 $3m$ 的符号段的内容（对应于 $M_k$ 读写头当前位置的 $m$ 个符号，加上紧邻左侧块中的 $m$ 个符号和紧邻右侧块中的 $m$ 个符号）。\n\n经过 $N$ 次此过程的完整迭代，我们得到最终的机器 $M_N$，其状态集为 $Q_N$，字母表为 $\\Gamma_N$。\n\n确定比率 $\\frac{\\ln(|Q_N|)}{\\ln(|\\Gamma_N|)}$ 的值，其中 $\\ln$ 表示自然对数。你的答案应该是一个用初始参数 $s, a, m$ 和迭代次数 $N$ 表示的闭式表达式。", "solution": "设 $g_{k} = |\\Gamma_{k}|$ 且 $q_{k} = |Q_{k}|$。根据字母表扩展规则， $M_{k}$ 的每个符号编码了 $M_{k-1}$ 的 $m$ 个符号组成的块，因此字母表大小满足\n$$\ng_{k} = g_{k-1}^{m}, \\quad g_{0} = a.\n$$\n通过重复代入解此递归关系，得到\n$$\ng_{k} = a^{m^{k}},\n$$\n特别地\n$$\n|\\Gamma_{N}| = g_{N} = a^{m^{N}}.\n$$\n根据状态复杂度规则，$M_{k}$ 的一个状态必须编码 $M_{k-1}$ 的一个状态以及 $\\Gamma_{k-1}$ 上一个长度为 $3m$ 的段的内容，因此\n$$\nq_{k} = q_{k-1}\\, g_{k-1}^{3m}, \\quad q_{0} = s.\n$$\n使用 $g_{k-1} = a^{m^{k-1}}$，上式变为\n$$\nq_{k} = q_{k-1}\\, a^{3m \\cdot m^{k-1}} = q_{k-1}\\, a^{3 m^{k}}.\n$$\n展开乘积可得\n$$\nq_{N} = s \\prod_{i=1}^{N} a^{3 m^{i}} = s\\, a^{3 \\sum_{i=1}^{N} m^{i}}.\n$$\n此和是一个几何级数：\n$$\n\\sum_{i=1}^{N} m^{i} = \\frac{m(m^{N} - 1)}{m - 1}.\n$$\n因此，\n$$\n|Q_{N}| = q_{N} = s\\, a^{\\frac{3m(m^{N}-1)}{m-1}}.\n$$\n我们现在计算对数的比率。使用 $\\ln(xy) = \\ln x + \\ln y$ 和 $\\ln(a^{b}) = b \\ln a$，\n$$\n\\ln(|Q_{N}|) = \\ln(s) + \\frac{3m(m^{N}-1)}{m-1}\\, \\ln(a), \\qquad \\ln(|\\Gamma_{N}|) = m^{N} \\ln(a).\n$$\n因此，\n$$\n\\frac{\\ln(|Q_{N}|)}{\\ln(|\\Gamma_{N}|)} = \\frac{\\ln(s)}{m^{N}\\ln(a)} + \\frac{3m(m^{N}-1)}{(m-1)m^{N}}.\n$$\n化简后得到\n$$\n\\frac{\\ln(|Q_{N}|)}{\\ln(|\\Gamma_{N}|)} = \\frac{\\ln(s)}{m^{N}\\ln(a)} + \\frac{3\\bigl(m - m^{1-N}\\bigr)}{m - 1}.\n$$\n这就是所求的用 $s, a, m$ 和 $N$ 表示的闭式表达式。", "answer": "$$\\boxed{\\frac{\\ln(s)}{m^{N}\\ln(a)}+\\frac{3\\left(m-m^{1-N}\\right)}{m-1}}$$", "id": "1430470"}, {"introduction": "真正理解一个定理的标志是能够将其核心思想推广到新的情境中。这个练习 [@problem_id:1430455] 挑战你将线性加速定理从标准的一维带图灵机模型扩展到二维带。你需要思考如何将符号打包和局部模拟等关键构造思想应用于一个全新的几何空间，这不仅能检验你对该定理基本机制的掌握程度，还能锻炼你将理论知识应用于非标准模型的迁移能力。", "problem": "考虑一台图灵机（TM），其带子是二维的，在所有四个方向（北、南、东、西）上无限延伸。设这台机器为 $M$。对于一个在 $n \\times n$ 的带单元方块上以初始非空构型形式提供的输入，机器 $M$ 的时间复杂度由函数 $T(n) = \\alpha n^{3} + \\beta n^{2}$ 给出，其中 $\\alpha$ 和 $\\beta$ 是已知的正常数。\n\n我们希望构造一台新的二维带图灵机，称之为 $M'$，它能更快地解决同样的问题。所采用的策略是带压缩。$M'$ 带子上的每个单元存储一个“宏符号”，该符号代表 $M$ 带子上的一个完整的 $m \\times m$ 单元块，其中 $m$ 是一个称为压缩因子的正整数。\n\n$M'$ 的运行包括两个阶段：初始压缩阶段和模拟阶段。\n1.  **压缩阶段**：$M'$ 从 $M$ 的带子上读取整个 $n \\times n$ 的输入，并将相应的压缩后的 $(\\lceil n/m \\rceil \\times \\lceil n/m \\rceil)$ 构型写入其自己的带子上。这个阶段总共需要 $\\gamma n^{2}$ 步，其中 $\\gamma$ 是一个已知的正常数。\n2.  **模拟阶段**：$M'$ 模拟 $M$ 的执行。为了模拟 $M$ 的连续 $m$ 步，$M'$ 会执行一个固定的例程，该例程需要常数数量的自身步数。该例程包括：\n    a. 进行 $K$ 次移动来读取其当前单元和8个相邻单元（一个 $3 \\times 3$ 的邻域）中的宏符号。$K$ 是一个给定的正整数常量。\n    b. 在其有限控制器内进行内部计算（这在带上不产生移动）。\n    c. 一次写操作来更新其当前单元中的宏符号。\n    d. 一次移动到当前包含 $M$ 模拟读写头的相邻宏单元。（可以保证，在 $m$ 步之后，$M$ 的读写头会移动到包含在宏单元的 $3 \\times 3$ 邻域内的某个位置）。\n\n$M'$ 的总时间 $T'(n)$ 是这两个阶段时间之和。目标是实现线性加速，其定义为对于期望的加速因子 $c>1$ 和所有足够大的整数 $n$，满足条件 $T'(n) \\le \\frac{1}{c} T(n)$。\n\n确定能够保证实现这种加速的压缩因子 $m$ 的最小正整数值。你的答案应该是一个用常数 $c$ 和 $K$ 表示的封闭形式解析表达式。", "solution": "我们通过计算压缩模拟器 $M'$ 在两个阶段中的步数来为其运行时间建模。\n\n压缩阶段：根据假设，将 $n \\times n$ 的输入压缩到宏单元中需要 $\\gamma n^{2}$ 步。\n\n模拟阶段：设一个宏步骤是使用固定序列精确模拟 $M$ 的 $m$ 步的例程：$K$ 次移动以收集 $3 \\times 3$ 的宏单元邻域，0 次移动用于内部计算，1 次写入，以及 1 次移动到下一个宏单元。因此，每个宏步骤的成本是 $M'$ 的 $K+2$ 次移动。为了模拟 $M$ 的 $T(n)$ 步，$M'$ 最多需要 $\\lceil T(n)/m \\rceil$ 个宏步骤。因此\n$$\nT'(n) \\le \\gamma n^{2} + (K+2)\\left\\lceil \\frac{T(n)}{m} \\right\\rceil \\le \\gamma n^{2} + \\frac{K+2}{m}T(n) + (K+2).\n$$\n使用 $T(n)=\\alpha n^{3}+\\beta n^{2}$，可得\n$$\nT'(n) \\le \\gamma n^{2} + \\frac{K+2}{m}\\left(\\alpha n^{3}+\\beta n^{2}\\right) + (K+2).\n$$\n\n为了对所有足够大的 $n$ 实现因子为 $c>1$ 的线性加速，我们需要当 $n$ 足够大时满足\n$$\nT'(n) \\le \\frac{1}{c}T(n) = \\frac{1}{c}\\left(\\alpha n^{3}+\\beta n^{2}\\right)\n$$\n。忽略加法常数 $(K+2)$（当 $n$ 很大时，该项被高阶项主导），对于足够大的 $n$，此不等式成立的充要条件是，左边的主导项 $n^{3}$ 项严格小于右边的主导项 $n^{3}$ 项。将不等式明确写出并按 $n$ 的幂次合并同类项，可得\n$$\n\\left(\\frac{K+2}{m}-\\frac{1}{c}\\right)\\alpha n^{3}+\\left(\\gamma+\\frac{K+2}{m}\\beta-\\frac{1}{c}\\beta\\right)n^{2} \\le 0.\n$$\n由于 $\\alpha,\\beta,\\gamma>0$，为保证不等式对所有足够大的 $n$ 成立，$n^{3}$ 项的系数必须严格为负；如果系数等于零，由于 $\\gamma>0$ 会留下一个正的 $n^{2}$ 项，从而违反该界限。因此我们必须有\n$$\n\\frac{K+2}{m} - \\frac{1}{c} < 0 \\quad \\Longleftrightarrow \\quad m > c\\,(K+2).\n$$\n因为 $m$ 必须是正整数，所以满足条件的最小 $m$ 是严格大于 $c\\,(K+2)$ 的最小整数，即\n$$\nm_{\\min}=\\left\\lfloor c\\,(K+2)\\right\\rfloor + 1.\n$$\n这个条件保证了左边的 $n^{3}$ 系数严格小于右边的，因此负的 $n^{3}$ 项差最终将主导正的 $n^{2}$ 项（包括压缩成本），从而确保对于所有足够大的 $n$，都有 $T'(n)\\le \\frac{1}{c}T(n)$。", "answer": "$$\\boxed{\\left\\lfloor c\\,(K+2)\\right\\rfloor + 1}$$", "id": "1430455"}]}