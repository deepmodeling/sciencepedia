{"hands_on_practices": [{"introduction": "我们的第一个实践是一项基础练习，旨在揭示一个核心概念：字母表的大小如何指数级地影响可构成字符串的数量。通过比较一元字母表和二元字母表，你将亲手计算并体会到，即使字母表只增加一个符号，其表达能力也会发生巨大的变化。这个练习将为你理解计算理论中“空间”大小的概念建立起直观的认识。[@problem_id:1411661]", "problem": "在计算理论中，字母表是一个非空的符号有限集合。字母表上的字符串是来自该字母表的符号组成的有限序列。字符串的长度是它所包含的符号数量。\n\n考虑两个不同的字母表：\n1.  一个一元字母表，记作 $\\Sigma_1$，它只包含一个符号。设该字母表为 $\\Sigma_1 = \\{a\\}$。\n2.  一个二元字母表，记作 $\\Sigma_2$，它包含恰好两个不同的符号。设该字母表为 $\\Sigma_2 = \\{b, c\\}$。\n\n设 $U(n)$ 表示使用一元字母表 $\\Sigma_1$ 中的符号可以构造出的长度为 $n$ 的唯一字符串的总数。类似地，设 $B(n)$ 表示使用二元字母表 $\\Sigma_2$ 中的符号可以构造出的长度为 $n$ 的唯一字符串的总数。\n\n你的任务是找到一个函数 $F(n)$，该函数给出长度为 $n$ 的二元字符串数量与长度为 $n$ 的一元字符串数量之比。将 $F(n)$ 表示为关于整数 $n$ 的闭式解析表达式，其中 $n \\geq 1$。", "solution": "一个大小为 $k$ 的字母表为字符串中的每个位置提供了 $k$ 种选择。对于长度为 $n$ 的字符串，由于每个位置的选择是独立的且顺序很重要，根据乘法原理，字符串的总数为 $k^{n}$。\n\n对于一元字母表 $\\Sigma_{1}=\\{a\\}$，我们有 $\\lvert\\Sigma_{1}\\rvert=1$，因此\n$$\nU(n)=1^{n}=1 \\quad \\text{for } n\\geq 1.\n$$\n对于二元字母表 $\\Sigma_{2}=\\{b,c\\}$，我们有 $\\lvert\\Sigma_{2}\\rvert=2$，因此\n$$\nB(n)=2^{n}.\n$$\n因此，所求的比值为\n$$\nF(n)=\\frac{B(n)}{U(n)}=\\frac{2^{n}}{1}=2^{n}.\n$$", "answer": "$$\\boxed{2^{n}}$$", "id": "1411661"}, {"introduction": "在掌握了基本的字符串计数后，我们来增加一点复杂度。这个练习引入了一种常见的约束条件：相邻字符不能相同。解决这个问题需要你运用乘法原理，并考虑每个位置选择字符时所受到的限制。这不仅是一次有趣的组合数学挑战，更是为分析更复杂的字符串算法和数据结构打下坚实的基础。[@problem_id:1411643]", "problem": "考虑一个包含 $k$ 个不同符号的字母表 $\\Sigma$，其中 $k \\ge 2$。我们希望通过从该字母表中选择字符来构成长度为 $n$ 的字符串，其中 $n \\ge 1$。\n\n您的任务是确定，在字符串中任意两个连续字符都不相同的严格条件下，可以构成的长度为 $n$ 的所有可能字符串的总数。\n\n请用 $n$ 和 $k$ 的封闭形式解析表达式给出您的答案。", "solution": "我们必须计算在一个大小为 $|\\Sigma|=k$ 的字母表 $\\Sigma$ 上，长度为 $n$ 且任意两个连续字符都不相同的字符串的数量。\n\n根据乘法原理（乘积法则）：\n- 对于第一个位置，有 $k$ 种选择，因为字母表 $\\Sigma$ 中的任何符号都是允许的。\n- 对于每个后续位置 $i$（其中 $2 \\leq i \\leq n$），该位置的字符必须与位置 $i-1$ 的字符不同。由于总共有 $k$ 个符号，并且有一个被禁止（即紧邻的前一个符号），因此每个这样的位置有 $k-1$ 种选择。\n\n因此，有效字符串的总数是每个位置选择数的乘积：\n$$\nk \\times (k-1)^{n-1}.\n$$\n该表达式对所有 $k \\geq 2$ 和 $n \\geq 1$ 均有效。当 $n=1$ 时，它也正确地简化为 $k$。", "answer": "$$\\boxed{k(k-1)^{n-1}}$$", "id": "1411643"}, {"introduction": "最后的练习将我们的视角从单个字符串提升到字符串的集合——即“语言”。我们将探讨语言的一个重要代数性质：闭包性。通过分析回文（palindrome）这种特殊的字符串构成的语言，你将判断它在字符串连接（concatenation）操作下是否“封闭”。这个练习鼓励你进行抽象推理，并学习如何使用反例来证明或证伪一个通用命题，这是形式语言和可计算性理论中的一项关键技能。[@problem_id:1411669]", "problem": "在形式语言理论中，我们研究字符串集合的性质，这些集合被称为语言。令 $\\Sigma$ 是一个有限、非空的符号集合，称为字母表。字符串是来自 $\\Sigma$ 的一个有限符号序列。两个字符串 $u$ 和 $v$ 的连接是指将 $v$ 附加到 $u$ 的末尾形成的字符串 $uv$。一个字符串 $w$ 的反转，记作 $w^R$，是按相反顺序书写的字符串。\n\n如果一个字符串 $w$ 从前向后读和从后向前读都相同，即 $w = w^R$，则称其为回文串。令 $L_{pal}$ 是由字母表 $\\Sigma$（其中包含至少两个不同符号）上所有回文串组成的语言。\n\n如果对一个语言 $L$ 中的任意成员应用某个运算，产生的结果也总是该语言的成员，则称该语言在此运算下是封闭的。对于连接运算，这意味着对于任意两个字符串 $u \\in L$ 和 $v \\in L$，它们的连接 $uv$ 也必须属于 $L$。\n\n下列哪个陈述最准确且普遍地描述了语言 $L_{pal}$ 在连接运算下的闭包性质？\n\nA. $L_{pal}$在连接运算下是封闭的，因为连接两个与其反转相同的字符串，总会产生一个新的、也与其反转相同的字符串。\n\nB. $L_{pal}$在连接运算下不是封闭的。例如，考虑字母表 $\\Sigma = \\{s, t\\}$。字符串 $u = \\text{\"s\"}$ 和 $v = \\text{\"t\"}$ 都在 $L_{pal}$ 中，但它们的连接 $uv = \\text{\"st\"}$ 不在 $L_{pal}$ 中。\n\nC. $L_{pal}$在连接运算下不是封闭的。例如，考虑字母表 $\\Sigma = \\{s, t\\}$。字符串 $u = \\text{\"st\"}$ 和 $v = \\text{\"ts\"}$ 不在 $L_{pal}$ 中，但它们的连接 $uv = \\text{\"stts\"}$ 在 $L_{pal}$ 中。\n\nD. $L_{pal}$在连接运算下是封闭的，但仅当字母表 $\\Sigma$ 只包含一个符号时成立。\n\nE. $L_{pal}$在连接运算下不是封闭的。例如，考虑字母表 $\\Sigma = \\{s, t\\}$。字符串 $u = \\text{\"sts\"}$ 和 $v = \\text{\"s\"}$ 都在 $L_{pal}$ 中，并且它们的连接 $uv = \\text{\"stss\"}$ 也在 $L_{pal}$ 中。", "solution": "我们来形式化这些定义。对于一个字母表 $\\Sigma$，回文串的集合是 $L_{pal} = \\{ w \\in \\Sigma^{*} : w = w^{R} \\}$。$L_{pal}$ 在连接运算下的闭包性意味着\n$$\n\\forall u,v \\in L_{pal},\\; uv \\in L_{pal}.\n$$\n根据题意，假设 $|\\Sigma| \\ge 2$。选择 $\\Sigma$ 中两个不同的符号 $a,b$，使得 $a \\neq b$。考虑 $u = a$ 和 $v = b$。由于单个符号等于其自身反转，我们有 $u = u^{R}$ 和 $v = v^{R}$，因此 $u,v \\in L_{pal}$。现在计算它们连接后的反转：\n$$\n(uv)^{R} = (ab)^{R} = ba.\n$$\n因为 $a \\neq b$，所以我们有 $ab \\neq ba$，因此 $uv \\neq (uv)^{R}$，所以 $uv \\notin L_{pal}$。这提供了一个反例，证明了对于 $|\\Sigma| \\ge 2$ 的情况，$L_{pal}$ 在连接运算下不是封闭的。\n\n评估各个选项：\n- A 是错误的，因为上面的反例表明回文串的连接不一定是回文串。\n- B 是正确的：它断言了非闭包性，并给出了一个实例，其中 $u = \\text{\"s\"}$, $v = \\text{\"t\"}$，而它们的连接 $uv = \\text{\"st\"}$ 不是回文串。\n- C 没有解决闭包性问题：它使用了 $u,v \\notin L_{pal}$，并表明它们的连接可以是一个回文串，但这与 $L_{pal}$ 的闭包性无关。\n- D 作为一个对所有字母表都成立的普遍陈述是正确的（对于 $|\\Sigma| = 1$ 的情况，每个字符串都是回文串，闭包性成立），但问题明确规定了 $|\\Sigma| \\ge 2$，在这种情况下非闭包性成立；因此，它不像 B 那样直接回答所设定的情景。\n- E 是不正确的：连接后的字符串 $\\text{\"stss\"}$ 不是回文串，即使它是，一个回文连接的单一例子也无法证明闭包性。\n\n因此，在给定 $\\Sigma$ 至少有两个符号的假设下，准确的陈述是 B。", "answer": "$$\\boxed{B}$$", "id": "1411669"}]}