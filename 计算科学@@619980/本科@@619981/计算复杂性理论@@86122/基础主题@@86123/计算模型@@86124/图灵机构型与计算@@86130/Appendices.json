{"hands_on_practices": [{"introduction": "要真正掌握图灵机的计算方式，没有什么比亲手追踪其步骤更有效的方法了。第一个练习将引导你模拟一台图灵机从初始构型直到停机的完整计算过程。通过仔细应用转移规则，你将熟悉机器的状态、带内容和读写头位置是如何演变的，从而掌握包括读写头左右移动在内的核心机制。[@problem_id:1467875]", "problem": "图灵机 (Turing Machine, TM) 是一种计算的数学模型。我们考虑一个状态集为$Q = \\{q_0, q_1, q_2, q_f\\}$的图灵机，其中$q_0$是初始状态，$q_f$是唯一停机状态。该图灵机的带字母表是$\\Gamma = \\{0, 1, B\\}$，其中$B$代表空白符号。输入字母表是$\\Sigma = \\{0, 1\\}$。\n\n该图灵机的行为由一个转移函数$\\delta$控制，其定义规则如下：\n1.  $\\delta(q_0, 1) = (q_1, 0, R)$\n2.  $\\delta(q_1, 1) = (q_1, 1, R)$\n3.  $\\delta(q_1, 0) = (q_2, 1, L)$\n4.  $\\delta(q_2, 1) = (q_2, 1, L)$\n5.  $\\delta(q_2, 0) = (q_f, 0, R)$\n\n图灵机的构型由一个形如$uqv$的字符串表示。在此表示法中，$q$是机器的当前状态，字符串$u$表示读写头左侧的带上内容，字符串$v$表示读写头当前位置及其右侧的带上内容。读写头当前正在扫描字符串$v$的第一个符号。\n\n机器从构型`q_01101`开始，其所在的带子在其他位置的双向都填满了空白符号 ($B$)。如果机器进入状态$q_f$，它将停止计算。\n\n请确定该图灵机停机时的最终构型。你的答案应该以一个表示此最终构型的字符串形式给出。", "solution": "我们通过将给定的转移函数$\\delta$应用于构型来模拟图灵机，使用$uqv$的表示法，其中$q$是当前状态，$u$是读写头左侧的带上内容，$v$是读写头当前位置及其右侧的带上内容（读写头扫描$v$的第一个符号）。\n\n初始构型：$q_{0}1101$。\n\n1) 在状态$q_{0}$扫描$1$时，应用$\\delta(q_{0},1)=(q_{1},0,R)$。我们写入$0$，向右移动，并切换到$q_{1}$。构型变为$0q_{1}101$。\n\n2) 在状态$q_{1}$扫描$1$时，应用$\\delta(q_{1},1)=(q_{1},1,R)$。我们保持$1$不变，向右移动，并保持在$q_{1}$状态。构型变为$01q_{1}01$。\n\n3) 在状态$q_{1}$扫描$0$时，应用$\\delta(q_{1},0)=(q_{2},1,L)$。我们写入$1$，向左移动，并切换到$q_{2}$。构型变为$0q_{2}111$。\n\n4) 在状态$q_{2}$扫描$1$时，应用$\\delta(q_{2},1)=(q_{2},1,L)$。我们保持$1$不变，向左移动，并保持在$q_{2}$状态。构型变为$q_{2}0111$。\n\n5) 在状态$q_{2}$扫描$0$时，应用$\\delta(q_{2},0)=(q_{f},0,R)$。我们写入$0$，向右移动，并进入$q_{f}$状态，机器停机。最终构型是$0q_{f}111$。", "answer": "$$\\boxed{0q_{f}111}$$", "id": "1467875"}, {"introduction": "在学会了如何执行图灵机的指令后，下一步是理解支配其行为的基本原则。这个问题将我们的焦点从“如何做”转向“为什么”，提出了一个思想实验。你将分析几组计算历史，并依据确定性图灵机的核心性质——确定性，找出一个不可能发生的计算序列，从而加深对该计算模型内在约束的理解。[@problem_id:1467883]", "problem": "一台标准的确定性图灵机 (DTM) 在一条向右无限延伸的单带上运行。其行为由一个形式为$\\delta(q, s) = (q', s', D)$的转移函数控制，该函数将当前状态$q$和磁带头下的符号$s$映射到一个新状态$q'$、一个要写入磁带的符号$s'$以及一个磁带头移动方向$D \\in \\{L, R\\}$ (左移或右移)。\n\n一个构型是 DTM 状态的一个完整快照，由形式为$uqv$的字符串表示。在这种表示法中，$q$是当前状态，$u$是磁带头左侧的字符串，$v$是从磁带头所在位置开始的字符串。被读取的符号是$v$的第一个符号。例如，在构型$10q_{3}11B$中，机器处于状态$q_3$，磁带头正在读取 '1'，磁带头左侧的内容为 '10'，从磁带头位置开始的磁带内容为 '11B...'。从一个构型转移到下一个构型用符号$\\vdash$表示。空白符号用$B$表示。\n\n根据 DTM 的定义，下列计算历史或计算片段集中，有一项是任何单个 DTM 都不可能执行的。请找出不可能的那一项。\n\nA. $q_0 10 \\vdash 1 q_1 0 \\vdash 11 q_2 B$\n\nB. 机器可以执行 $q_0 11 \\vdash 1q_1 1$，并且它还可以在另一次独立的计算中执行 $q_1 1 \\vdash 0q_2 1$。\n\nC. $q_2 01 \\vdash B q_0 1 \\vdash q_2 B B$\n\nD. 机器可以执行 $q_0 11 \\vdash 1q_1 1$，并且它还可以在另一次独立的计算中执行 $q_0 11 \\vdash 1q_2 1$ (假设 $q_1 \\neq q_2$)。\n\nE. $q_0 11 \\vdash 1 q_1 1 \\vdash q_0 11$", "solution": "确定性图灵机 (DTM) 有一个单值转移函数$\\delta(q,s)=(q',s',D)$，其中$D \\in \\{L,R\\}$。在构型表示法中，我们将磁带写作$u q s w$，其中磁带头读取符号$s$（即$v:=sw$的第一个符号）。单步移动由$\\delta$唯一确定，规则如下：\n- 如果$\\delta(q,s)=(q',s',R)$，那么\n$$\nu q s w \\;\\vdash\\; u s' q' w.\n$$\n- 如果$\\delta(q,s)=(q',s',L)$且$u=x a$，其中$a$是一个单独的磁带符号（$x$可能为空），那么\n$$\nx a q s w \\;\\vdash\\; x q' a s' w.\n$$\n确定性意味着对于任何给定的构型，都存在唯一的后继构型。\n\n我们现在分析每个选项。\n\n选项 A: $q_{0} 10 \\vdash 1 q_{1} 0 \\vdash 11 q_{2} B$。这可以通过设置以下规则来实现：\n$$\n\\delta(q_{0},1)=(q_{1},1,R),\\quad \\delta(q_{1},0)=(q_{2},1,R).\n$$\n确实，$q_{0} 10 \\vdash 1 q_{1} 0$ 是通过 R 规则实现的，其中$u=\\epsilon$，$s=1$，$w=0$。接下来，$1 q_{1} 0 \\vdash 11 q_{2} B$ 是通过 R 规则实现的，其中$u=1$，$s=0$，$w=B$。\n\n选项 B: 机器可以执行 $q_{0} 11 \\vdash 1 q_{1} 1$，并且它还可以在另一次独立的计算中执行 $q_{1} 1 \\vdash 0 q_{2} 1$。这可以通过选择以下规则来保持一致性：\n$$\n\\delta(q_{0},1)=(q_{1},1,R),\\quad \\delta(q_{1},1)=(q_{2},0,R).\n$$\n这些描述了不同的构型，没有违反确定性；后一个转移也是构型$1 q_{1} 1$的唯一后继。\n\n选项 C: $q_{2} 01 \\vdash B q_{0} 1 \\vdash q_{2} B B$。这可以通过以下规则实现：\n$$\n\\delta(q_{2},0)=(q_{0},B,R),\\quad \\delta(q_{0},1)=(q_{2},B,L).\n$$\n对于第一步，使用 R 规则，其中$u=\\epsilon$，$s=0$，$w=1$，得到$B q_{0} 1$。对于第二步，将$u=B$写作$x a$（其中$x=\\epsilon$，$a=B$），然后应用 L 规则，其中$s=1$，$w=B$，得到$q_{2} B B$。\n\n选项 D: 机器可以执行 $q_{0} 11 \\vdash 1 q_{1} 1$，并且它还可以在另一次独立的计算中执行 $q_{0} 11 \\vdash 1 q_{2} 1$，其中$q_{1} \\neq q_{2}$。这将要求：\n$$\n\\delta(q_{0},1)=(q_{1},1,R)\\quad \\text{和}\\quad \\delta(q_{0},1)=(q_{2},1,R),\n$$\n当$q_{1}\\neq q_{2}$时，这对于一个单值的确定性函数$\\delta$来说是不可能的。因此，这个选项违反了确定性，对于任何单个 DTM 都是不可能发生的。\n\n选项 E: $q_{0} 11 \\vdash 1 q_{1} 1 \\vdash q_{0} 11$。这可以通过以下规则实现：\n$$\n\\delta(q_{0},1)=(q_{1},1,R),\\quad \\delta(q_{1},1)=(q_{0},1,L).\n$$\n从$q_{0} 11$出发，R 规则得到$1 q_{1} 1$。然后，当$u=1=x a$（其中$x=\\epsilon$，$a=1$）时，L 规则使其返回到$q_{0} 11$。\n\n因此，对于任何单个 DTM 来说，只有选项 D 是不可能的。", "answer": "$$\\boxed{D}$$", "id": "1467883"}, {"introduction": "我们最后的练习将从分析具体计算转向描述通用行为。这个挑战不再是追踪单个输入，而是要求你确定一台机器对于任意长度为$n$的输入可以达到的所有不同构型的总数。这种抽象分析的练习是迈向计算复杂性理论核心主题——量化计算所需资源（如时间和空间）——的关键一步。[@problem_id:1467821]", "problem": "考虑一个单带图灵机 (TM)，由形式化的七元组$M = (Q, \\Sigma, \\Gamma, \\delta, q_0, B, F)$定义。\n- 状态集合为$Q = \\{q_{\\text{start}}, q_{\\text{erase}}, q_{\\text{halt}}\\}$。\n- 输入字母表为$\\Sigma = \\{\\texttt{x}, \\texttt{y}\\}$。\n- 带字母表为$\\Gamma = \\{\\texttt{x}, \\texttt{y}, \\sqcup\\}$。\n- 初始状态为$q_0 = q_{\\text{start}}$。\n- 空白符号为$B = \\sqcup$。\n- 最终（停机）状态集合为$F = \\{q_{\\text{halt}}\\}$。\n- 转移函数$\\delta: (Q \\setminus F) \\times \\Gamma \\to Q \\times \\Gamma \\times \\{R\\}$是一个部分函数，定义如下：\n    1. 对于任意符号$\\sigma \\in \\Sigma$，$\\delta(q_{\\text{start}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$。\n    2. 对于任意符号$\\sigma \\in \\Sigma$，$\\delta(q_{\\text{erase}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$。\n    3. $\\delta(q_{\\text{erase}}, \\sqcup) = (q_{\\text{halt}}, \\sqcup, R)$。\n注意，读写头只向右 ($R$) 移动。\n\n一个构型由当前状态、带上内容以及读写头下方的带单元的整数索引（输入的第一个符号位于索引0处）指定。\n假设图灵机从状态$q_{\\text{start}}$开始其计算，其读写头位于长度为$n$（其中$n \\ge 1$）的输入字符串$w \\in \\Sigma^*$的第一个符号上。在$w$的左侧和右侧，带的其余部分充满了空白符号$\\sqcup$。\n\n设$S_w$是从此初始构型可达的所有构型的集合。如果存在一个零步或多步的计算序列能将$C_1$转换为$C_2$，则称构型$C_2$可从$C_1$到达。集合$S_w$包含初始构型本身。\n\n如果两个构型在它们的三个组成部分（状态、带上内容或读写头位置）中至少有一个不同，则认为它们是不同的。\n\n确定集合$S_w$的基数，记为$|S_w|$，并以$n$的解析表达式表示。", "solution": "因为该机器是确定性的，且读写头总是向右移动，所以从给定的初始构型可达的构型集合，正是沿着唯一计算路径所经过的构型序列，包括初始构型和停机构型。\n\n设输入为$w \\in \\Sigma^{*}$，其长度$|w| = n \\ge 1$，放置在单元格$0,1,\\dots,n-1$上，其他地方则为空白符号。\n\n逐步演化过程：\n1) 初始构型$C_{0}$：状态为$q_{\\text{start}}$，带上单元格$0$到$n-1$为$w$，其他地方为$\\sqcup$，读写头位于索引$0$。\n2) 第一步移动（从$q_{\\text{start}}$开始）：在索引$0$处读取符号$\\sigma \\in \\Sigma$，应用$\\delta(q_{\\text{start}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$。仅此一步之后，构型$C_{1}$的状态为$q_{\\text{erase}}$，单元格$0$被擦除为$\\sqcup$，单元格$1$到$n-1$的内容与$w$相比保持不变，读写头位于索引$1$。\n3) 擦除剩余部分（从状态$q_{\\text{erase}}$开始，处理$\\Sigma$中的符号）：对于每个$i \\in \\{1,2,\\dots,n-1\\}$，在索引$i$处读取符号$\\sigma \\in \\Sigma$，应用$\\delta(q_{\\text{erase}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$。这会对每个单元格$i$进行一步操作，擦除该单元格并将读写头移动到$i+1$。经过$n-1$次这样的步骤后（从$i=1$到$i=n-1$），构型$C_{n}$的状态为$q_{\\text{erase}}$，单元格$0$到$n-1$全都为$\\sqcup$，读写头位于索引$n$。\n4) 停机步骤：在索引$n$处，带上符号是$\\sqcup$，所以应用一次$\\delta(q_{\\text{erase}}, \\sqcup) = (q_{\\text{halt}}, \\sqcup, R)$。停机构型$C_{n+1}$的状态为$q_{\\text{halt}}$，带上各处都是$\\sqcup$，读写头位于索引$n+1$。\n\n计算步骤和构型：\n- 转移步骤的总数为$T = 1 + (n-1) + 1 = n+1$。\n- 每一步都使读写头位置严格增加$1$，并且状态在第一步从$q_{\\text{start}}$变为$q_{\\text{erase}}$，在最后一步变为$q_{\\text{halt}}$；因此没有构型会重复。所以，访问过的不同构型的数量（包括初始构型和停机构型）为$T + 1 = n + 2$。\n\n因此，$S_{w}$的基数为$|S_{w}| = n + 2$。", "answer": "$$\\boxed{n+2}$$", "id": "1467821"}]}