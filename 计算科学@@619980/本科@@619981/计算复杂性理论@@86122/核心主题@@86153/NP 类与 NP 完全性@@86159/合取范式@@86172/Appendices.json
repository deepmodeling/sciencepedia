{"hands_on_practices": [{"introduction": "在深入研究复杂的可满足性问题之前，让我们从最简单的情形开始：1-合取范式（1-CNF）。这个练习将帮助你掌握判断可满足性的一个基本原则。理解1-CNF公式的可满足性条件是构建更复杂逻辑推理能力的第一步，因为它揭示了逻辑矛盾最直接的形式 [@problem_id:1418346]。", "problem": "在计算复杂性理论中，如果一个布尔公式是一个或多个子句的合取（AND，用 $\\land$ 表示），则称其为合取范式（CNF），其中每个子句是文字的析取（OR，用 $\\lor$ 表示）。一个文字是一个布尔变量（例如，$x_i$）或其否定（例如，$\\neg x_i$）。\n\n这种情况的一个特例是 **1-CNF 公式**，其中每个子句都只包含一个文字。例如，$\\phi = (x_1) \\land (\\neg x_2) \\land (x_3)$ 就是一个 1-CNF 公式。\n\n如果存在至少一个真值指派（为每个变量赋 TRUE 或 FALSE）使得整个公式的求值结果为 TRUE，则该公式被称为**可满足的**。如果不存在这样的指派，则该公式是不可满足的。\n\n一个学生接到任务，需要创建一个非常高效的算法来判断给定的 1-CNF 公式是否可满足。他意识到，由于 1-CNF 的简单结构，对于其可满足性，必然存在一个既是必要条件又是充分条件的直接条件。\n\n对于任意给定的 1-CNF 公式，以下哪个条件是其可满足的充分必要条件？\n\nA. 该公式最多包含一个子句。\n\nB. 对于每个变量 $x$，该公式不同时包含子句 $(x)$ 和子句 $(\\neg x)$。\n\nC. 子句的数量严格小于公式中出现的不同变量的数量。\n\nD. 每个变量最多出现在一个子句中。\n\nE. 公式中至少有一个变量只以正文字（例如，$x_i$）的形式出现，或只以负文字（例如，$\\neg x_j$）的形式出现。", "solution": "设一个 1-CNF 公式被写成单位子句的合取：\n$$\n\\phi \\;=\\; \\bigwedge_{i=1}^{m} L_{i},\n$$\n其中每个 $L_{i}$ 是一个文字，即对于某个变量 $x$，它要么是 $x$ 要么是 $\\neg x$。一个真值指派能满足 $\\phi$ 当且仅当每个子句的求值结果都为 TRUE。\n\n我们主张，以下条件是可满足性的充分必要条件：\n对于每个变量 $x$，$\\phi$ 不会同时包含 $(x)$ 和 $(\\neg x)$ 作为子句。这正是选项 B。\n\n必要性：假设对于某个变量 $x$，$\\phi$ 同时包含 $(x)$ 和 $(\\neg x)$。如果一个指派将 $x=\\text{TRUE}$，那么 $(\\neg x)$ 为 FALSE；如果它将 $x=\\text{FALSE}$，那么 $(x)$ 为 FALSE。因此，没有任何指派可以同时使这两个子句为 TRUE，所以 $\\phi$ 是不可满足的。因此，B 中的条件是必要的。\n\n充分性：假设对于每个变量 $x$，$\\phi$ 不会同时包含 $(x)$ 和 $(\\neg x)$。通过以下方式定义一个指派 $a$：\n- 如果 $(x)$ 出现在 $\\phi$ 中，则设置 $a(x)=\\text{TRUE}$。\n- 否则，如果 $(\\neg x)$ 出现在 $\\phi$ 中，则设置 $a(x)=\\text{FALSE}$。\n- 否则（如果 $x$ 未出现），则任意设置 $a(x)$。\n在指派 $a$ 下，根据构造，任何子句 $(x)$ 都为 TRUE，任何子句 $(\\neg x)$ 也都为 TRUE。因此，$\\phi$ 中的所有子句都为 TRUE，所以 $\\phi$ 是可满足的。因此，B 中的条件是充分的。\n\n为了确认没有其他选项是充分且必要的：\n- A（最多一个子句）不是必要的：例如，$(x_{1}) \\land (x_{2})$ 是可满足的，且有两个子句。\n- C（子句数量严格小于不同变量的数量）不是必要的：$(x)$ 有一个子句和一个变量，因此不等式不成立，但它却是可满足的。尽管 C 是充分的（如果 $m<n$，那么不可满足性将要求至少一个变量以两种极性同时出现，这将导致 $m \\geq n+1$，这是一个矛盾），但它不是必要的。\n- D（每个变量最多出现在一个子句中）不是必要的：$(x) \\land (x)$ 是可满足的但违反了 D。它是充分的但不是必要的。\n- E（至少有一个变量只以一种极性出现）不是充分的：$(x) \\land (y) \\land (\\neg y)$ 是不可满足的但满足 E。它通常也不具有表征性。\n\n因此，只有 B 是充分且必要的。", "answer": "$$\\boxed{B}$$", "id": "1418346"}, {"introduction": "当我们从1-CNF过渡到2-合取范式（2-CNF）时，发现矛盾变得不再那么直观。一个公式可能不是因为它包含了像 $(x)$ 和 $(\\neg x)$ 这样直接的冲突而不可满足，而是因为子句之间的相互作用导致了逻辑上的死胡同。这个练习 [@problem_id:1418317] 将让你通过检查或使用归结（resolution）等系统性方法，亲手实践如何在一个看起来复杂的2-CNF公式中找出隐藏的矛盾。", "problem": "在布尔逻辑中，如果一个公式是一个或多个子句的合取（AND, $\\land$），那么它就处于合取范式（CNF）中，其中子句是文字的析取（OR, $\\lor$）。文字是一个布尔变量或其否定（例如，$x_1$ 或 $\\neg x_1$）。如果每个子句最多包含两个文字，那么该公式就处于 2-CNF 中。\n\n如果存在至少一个真值指派（为每个变量赋予“真”或“假”），使得整个公式的求值为“真”，则称该公式是“可满足的”。如果不存在这样的指派，则该公式是“不可满足的”。\n\n考虑三个布尔变量 $x_1, x_2, x_3$。以下哪个 2-CNF 公式是不可满足的？\n\nA. $(x_1 \\lor x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_2 \\lor \\neg x_3)$\n\nB. $(x_1 \\lor x_2) \\land (x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_1 \\lor \\neg x_3)$\n\nC. $(x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_2) \\land (x_1 \\lor x_3)$\n\nD. $(\\neg x_1 \\lor \\neg x_2) \\land (\\neg x_2 \\lor \\neg x_3) \\land (\\neg x_3 \\lor \\neg x_1)$", "solution": "一个 2-CNF 公式是可满足的，当且仅当存在一个对其变量的真值指派，使得每个子句的求值都为真值常数 $\\top$。要证明可满足性，只需展示一个这样的指派即可。要证明不可满足性，只需推导出一个矛盾，例如通过使用归结规则\n$$(A \\lor B)\\land(\\neg A \\lor C)\\;\\vdash\\;(B \\lor C),$$\n以及不矛盾律（没有指派可以同时使 $x$ 和 $\\neg x$ 为真）。\n\n考虑选项 A：\n$$(x_1 \\lor x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_2 \\lor \\neg x_3).$$\n令 $\\sigma_{A}$ 为指派 $\\sigma_{A}(x_1)=\\top$, $\\sigma_{A}(x_2)=\\bot$, $\\sigma_{A}(x_3)=\\top$。则\n$$x_1 \\lor x_2=\\top \\lor \\bot=\\top,$$\n$$\\neg x_1 \\lor x_3=\\neg \\top \\lor \\top=\\bot \\lor \\top=\\top,$$\n$$\\neg x_2 \\lor \\neg x_3=\\neg \\bot \\lor \\neg \\top=\\top \\lor \\bot=\\top.$$\n所有子句的求值均为 $\\top$，因此 A 是可满足的。\n\n考虑选项 C：\n$$(x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_2) \\land (x_1 \\lor x_3).$$\n令 $\\sigma_{C}$ 为指派 $\\sigma_{C}(x_1)=\\top$, $\\sigma_{C}(x_2)=\\top$, $\\sigma_{C}(x_3)=\\bot$。则\n$$x_1 \\lor \\neg x_2=\\top \\lor \\neg \\top=\\top \\lor \\bot=\\top,$$\n$$\\neg x_1 \\lor x_2=\\neg \\top \\lor \\top=\\bot \\lor \\top=\\top,$$\n$$x_1 \\lor x_3=\\top \\lor \\bot=\\top.$$\n所有子句的求值均为 $\\top$，因此 C 是可满足的。\n\n考虑选项 D：\n$$(\\neg x_1 \\lor \\neg x_2) \\land (\\neg x_2 \\lor \\neg x_3) \\land (\\neg x_3 \\lor \\neg x_1).$$\n令 $\\sigma_{D}$ 为指派 $\\sigma_{D}(x_1)=\\top$, $\\sigma_{D}(x_2)=\\bot$, $\\sigma_{D}(x_3)=\\bot$。则\n$$\\neg x_1 \\lor \\neg x_2=\\neg \\top \\lor \\neg \\bot=\\bot \\lor \\top=\\top,$$\n$$\\neg x_2 \\lor \\neg x_3=\\neg \\bot \\lor \\neg \\bot=\\top \\lor \\top=\\top,$$\n$$\\neg x_3 \\lor \\neg x_1=\\neg \\bot \\lor \\neg \\top=\\top \\lor \\bot=\\top.$$\n所有子句的求值均为 $\\top$，因此 D 是可满足的。\n\n考虑选项 B：\n$$(x_1 \\lor x_2) \\land (x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_1 \\lor \\neg x_3).$$\n对最后两个关于 $x_3$ 的子句应用归结规则：\n$$(\\neg x_1 \\lor x_3)\\land(\\neg x_1 \\lor \\neg x_3)\\;\\vdash\\;\\neg x_1.$$\n对前两个关于 $x_2$ 的子句应用归结规则：\n$$(x_1 \\lor x_2)\\land(x_1 \\lor \\neg x_2)\\;\\vdash\\;x_1.$$\n因此，该公式蕴含了 $x_1$ 和 $\\neg x_1$，根据不矛盾律，这会产生空子句 $\\bot$。因此，没有指派可以满足所有子句，B 是不可满足的。\n\n由于 A、C 和 D 是可满足的，而 B 不是，所以不可满足的公式是 B。", "answer": "$$\\boxed{B}$$", "id": "1418317"}, {"introduction": "在现实世界的许多问题中，“是”或“否”的答案并不足够。当一个逻辑公式不可满足时，我们往往想知道：“我们能得到的最好结果是什么？” 这个问题引入了最大可满足性问题（MAX-SAT），这是一个经典的优化问题。通过这个练习 [@problem_id:1418325]，你将探索如何在一个不可满足的3-CNF公式中，找到一个能满足最多子句的真值指派，从而将思维从判定问题转向优化问题。", "problem": "考虑一个定义在三个变量 $x_1, x_2, x_3$ 上的布尔公式 $\\phi$。该公式以合取范式（CNF）给出，即子句的合取（AND），其中每个子句是文字的析取（OR）。一个文字是变量或其否定（例如 $x_1$ 或 $\\neg x_1$）。具体来说，$\\phi$ 是一个 3-CNF 公式，表示每个子句都恰好包含三个不同的文字。\n\n公式 $\\phi$ 是以下八个子句的合取：\n$C_1 = (x_1 \\lor x_2 \\lor x_3)$\n$C_2 = (x_1 \\lor x_2 \\lor \\neg x_3)$\n$C_3 = (x_1 \\lor \\neg x_2 \\lor x_3)$\n$C_4 = (\\neg x_1 \\lor x_2 \\lor x_3)$\n$C_5 = (x_1 \\lor \\neg x_2 \\lor \\neg x_3)$\n$C_6 = (\\neg x_1 \\lor x_2 \\lor \\neg x_3)$\n$C_7 = (\\neg x_1 \\lor \\neg x_2 \\lor x_3)$\n$C_8 = (\\neg x_1 \\lor \\neg x_2 \\lor \\neg x_3)$\n\n这个公式是不可满足的，即不存在对变量 $(x_1, x_2, x_3)$ 的真值指派可以使所有八个子句同时为真。您的任务是解决该公式的相应 MAX-3-SAT 问题。请确定单个真值指派可以满足的最大子句数 $N_{max}$，并提供一个能达到此最大值的变量 $(x_1, x_2, x_3)$ 的真值指派。在您的答案中，用数字 1 表示布尔值“真”(True)，用数字 0 表示布尔值“假”(False)。", "solution": "我们使用布尔求值规则：一个子句 $(\\ell_{1} \\lor \\ell_{2} \\lor \\ell_{3})$ 为假，当且仅当在该指派下每个文字都求值为假；否则该子句为真。对于任意指派 $(a_{1},a_{2},a_{3}) \\in \\{0,1\\}^{3}$，定义子句\n$$\nD(a_{1},a_{2},a_{3}) \\equiv \\bigl(\\ell_{1} \\lor \\ell_{2} \\lor \\ell_{3}\\bigr), \\quad \\text{where } \\ell_{i} =\n\\begin{cases}\nx_{i}, & \\text{if } a_{i}=0, \\\\\n\\neg x_{i}, & \\text{if } a_{i}=1.\n\\end{cases}\n$$\n在指派 $(x_{1},x_{2},x_{3})=(a_{1},a_{2},a_{3})$ 下，根据构造，每个 $\\ell_{i}$ 的求值结果都为假，因此 $D(a_{1},a_{2},a_{3})$ 为假。反之，在 $\\{x_{1},x_{2},x_{3}\\}$ 上的任何其他不等于 $D(a_{1},a_{2},a_{3})$ 的三文字子句，必定包含至少一个在该指派下求值为真的文字，从而使得该子句为真。\n\n给定的公式 $\\phi$ 包含了在 $\\{x_{1},x_{2},x_{3}\\}$ 上所有八个可能的、具有不同符号模式的三文字子句，即对于每一个 $(a_{1},a_{2},a_{3}) \\in \\{0,1\\}^{3}$，它都包含了 $D(a_{1},a_{2},a_{3})$。因此，对于任意指派，都恰好有一个子句不被满足，而其余七个子句被满足。因此，可同时满足的子句的最大数量是\n$$\nN_{\\max}=7.\n$$\n一个达到此最大值的指派是 $(x_{1},x_{2},x_{3})=(1,1,1)$。明确验证如下：\n$$\n\\begin{aligned}\n&C_{1}=(1\\lor 1\\lor 1)=1,\\quad C_{2}=(1\\lor 1\\lor 0)=1,\\quad C_{3}=(1\\lor 0\\lor 1)=1,\\quad C_{4}=(0\\lor 1\\lor 1)=1,\\\\\n&C_{5}=(1\\lor 0\\lor 0)=1,\\quad C_{6}=(0\\lor 1\\lor 0)=1,\\quad C_{7}=(0\\lor 0\\lor 1)=1,\\quad C_{8}=(0\\lor 0\\lor 0)=0,\n\\end{aligned}\n$$\n所以恰好有七个子句被满足。", "answer": "$$\\boxed{\\begin{pmatrix} 7 & 1 & 1 & 1 \\end{pmatrix}}$$", "id": "1418325"}]}