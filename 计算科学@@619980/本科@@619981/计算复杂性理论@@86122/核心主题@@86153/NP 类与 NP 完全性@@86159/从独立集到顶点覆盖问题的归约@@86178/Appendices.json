{"hands_on_practices": [{"introduction": "理论学习的最佳伙伴是动手实践。这个练习将引导我们处理一个具体的、可视化的图——一个简单的六顶点环图。通过亲手找出图中的最大独立集和最小顶点覆盖，我们不仅可以验证它们的大小之间的关系，还能直观地理解这两个集合在结构上的互补性。这个练习旨在为你建立坚实的直觉基础，让你感受图论概念的实际形态。[@problem_id:1443292]", "problem": "在计算复杂性理论中，理解不同问题之间的关系是关键。两个基本的图问题是独立集问题和顶点覆盖问题。\n\n考虑一个简单无向图 $G$，其顶点集为 $V = \\{v_1, v_2, v_3, v_4, v_5, v_6\\}$，边集为 $E = \\{(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5), (v_5, v_6), (v_6, v_1)\\}$。\n\n**独立集**是图中顶点的一个子集，其中任意两个顶点都不相邻（即，该子集中的任意两个顶点之间都没有边相连）。**最大独立集**是给定图中规模最大的独立集。\n\n**顶点覆盖**是图中顶点的一个子集，使得图中的每条边都至少与该子集中的一个顶点相关联。**最小顶点覆盖**是给定图中规模最小的顶点覆盖。\n\n设 $I$ 是 $G$ 的一个最大独立集， $C$ 是 $G$ 的一个最小顶点覆盖。以下哪一对 $(I, C)$ 表示图 $G$ 的一个有效的最大独立集和一个有效的最小顶点覆盖？\n\nA. $I = \\{v_1, v_3, v_5\\}$, $C = \\{v_2, v_4, v_6\\}$\n\nB. $I = \\{v_1, v_2, v_3\\}$, $C = \\{v_4, v_5, v_6\\}$\n\nC. $I = \\{v_1, v_3, v_5\\}$, $C = \\{v_2, v_5\\}$\n\nD. $I = \\{v_1, v_4\\}$, $C = \\{v_2, v_3, v_5, v_6\\}$", "solution": "给定图 $G$ 是一个6-循环图 $C_{6}$，其顶点为 $v_{1},\\dots,v_{6}$，边连接了环上的连续顶点：$(v_{1},v_{2})$、$(v_{2},v_{3})$、$(v_{3},v_{4})$、$(v_{4},v_{5})$、$(v_{5},v_{6})$、$(v_{6},v_{1})$。\n\n基本事实：\n- 如果 $C \\subseteq V$ 是一个顶点覆盖，那么 $V \\setminus C$ 是一个独立集，因为如果 $C$ 之外的两个顶点相邻，则连接它们的边将未被覆盖。\n- 如果 $I \\subseteq V$ 是一个独立集，那么 $V \\setminus I$ 是一个顶点覆盖，因为每条边都必须至少有一个端点不在 $I$ 中。\n因此，如果 $\\alpha(G)$ 是最大独立集的大小，$\\tau(G)$ 是最小顶点覆盖的大小，则\n$$\n\\alpha(G) + \\tau(G) = |V| = 6.\n$$\n\n我们构建一个大的独立集：$\\{v_{1},v_{3},v_{5}\\}$ 是独立的（所列的边中没有任何一条连接这些顶点中的任意一对），所以 $\\alpha(G) \\geq 3$。不可能有 $|I| \\geq 4$，因为那样的话 $|V \\setminus I| \\leq 2$ 将会是一个顶点覆盖，但在 $C_{6}$ 中，任何一个顶点都恰好与2条边相关联，所以两个顶点最多能覆盖4条边，这严格小于6。因此 $\\alpha(G) = 3$，并且根据上述等式，$\\tau(G) = 3$。\n\n现在逐一检查每个选项：\n- 选项A：$I = \\{v_{1},v_{3},v_{5}\\}$ 是独立的，大小为3，因此是最大的。$C = \\{v_{2},v_{4},v_{6}\\}$ 大小为3，并且是 $I$ 的补集，所以它是一个顶点覆盖，并且是最小的。具体来说，每条边都与 $v_{2},v_{4},v_{6}$ 中的一个顶点相关联。\n- 选项B：$I = \\{v_{1},v_{2},v_{3}\\}$ 不是独立的，因为 $(v_{1},v_{2})$ 和 $(v_{2},v_{3})$ 都是边。$C = \\{v_{4},v_{5},v_{6}\\}$ 不是一个顶点覆盖，因为边 $(v_{1},v_{2})$ 未被覆盖。\n- 选项C：$I = \\{v_{1},v_{3},v_{5}\\}$ 是最大的，但是 $C = \\{v_{2},v_{5}\\}$ 大小为2，不能覆盖所有6条边；例如，边 $(v_{6},v_{1})$ 未被覆盖。\n- 选项D：$I = \\{v_{1},v_{4}\\}$ 是独立的但不是最大的（大小为 $2 < 3$）。$C = \\{v_{2},v_{3},v_{5},v_{6}\\}$ 是一个顶点覆盖但不是最小的（大小为 $4 > 3$）。\n\n因此，只有选项A给出了一个最大独立集与一个最小顶点覆盖的配对。", "answer": "$$\\boxed{A}$$", "id": "1443292"}, {"introduction": "掌握了基本概念后，让我们看看如何将理论应用于解决实际问题。这个练习描绘了一个常见的网络管理场景，你需要为安全审计和系统维护做出决策。这个问题展示了“顶点覆盖”和“独立集”这两个抽象概念如何作为强大的模型，帮助我们清晰地表述并解决现实世界中的优化难题。通过这个例子，你将看到理论知识如何转化为解决实际工程挑战的有效工具。[@problem_id:1443308]", "problem": "一名系统管理员正在管理一个由30台服务器组成的本地网络。这些服务器可以被建模为一个图的顶点，任意两台服务器之间的直接网络连接表示为一条边。为了进行安全审计，管理员需要在这些服务器的一个子集上安装监控代理。要求是对于每一条直接连接，其连接的两台服务器中至少有一台必须安装代理。管理员确定，要满足整个网络的要求，需要安装代理的服务器的最小数量是12。\n\n对于一项独立的维护任务，管理员需要确定可以同时下线进行更新的最大服务器集合。此项任务的关键约束是，被选定下线的任意两台服务器之间不能有直接的网络连接。可以同时下线的这个最大服务器集合的大小是多少？", "solution": "将网络建模为一个简单图 $G=(V,E)$，其中 $|V|=30$。一个集合 $C \\subseteq V$ 是一个顶点覆盖，如果图 $G$ 的每条边都至少有一个端点在 $C$ 中。给定的监控代理要求定义了一个顶点覆盖，而这类服务器的最小数量就是最小顶点覆盖的大小 $\\tau(G)=12$。\n\n一个集合 $I \\subseteq V$ 是一个独立集，如果 $I$ 中没有任意两个顶点是相邻的。可以同时下线的、任意两台之间没有直接连接的最大服务器集合对应于一个最大独立集，其大小为 $\\alpha(G)$。\n\n我们使用顶点覆盖和独立集之间的标准互补关系：\n1. 如果 $C$ 是一个顶点覆盖，那么 $V \\setminus C$ 是一个独立集。实际上，如果存在一条边的两个端点都在 $V \\setminus C$ 中，那么这条边就没有端点在 $C$ 中，这与 $C$ 是一个顶点覆盖相矛盾。因此，对于一个最小顶点覆盖 $C$，其大小为 $|C|=\\tau(G)$，我们有一个大小为 $|V \\setminus C|=|V|-\\tau(G)$ 的独立集，这意味着\n$$\n\\alpha(G) \\geq |V| - \\tau(G).\n$$\n2. 如果 $I$ 是一个独立集，那么 $V \\setminus I$ 是一个顶点覆盖。实际上，由于没有边的两个端点都在 $I$ 中，所以每条边都至少有一个端点在 $V \\setminus I$ 中。因此，对于一个最大独立集 $I$，其大小为 $|I|=\\alpha(G)$，我们有一个大小为 $|V \\setminus I|=|V|-\\alpha(G)$ 的顶点覆盖，这意味着\n$$\n\\tau(G) \\leq |V| - \\alpha(G) \\quad \\Longrightarrow \\quad \\alpha(G) \\leq |V| - \\tau(G).\n$$\n\n结合这两个不等式可以得出精确的关系\n$$\n\\alpha(G) = |V| - \\tau(G).\n$$\n代入 $|V|=30$ 和 $\\tau(G)=12$ 得\n$$\n\\alpha(G) = 30 - 12 = 18.\n$$\n因此，可以同时下线的最大服务器集合的大小是 $18$。", "answer": "$$\\boxed{18}$$", "id": "1443308"}, {"introduction": "最后，让我们将我们的理解从具体例子提升到一个更普适和抽象的层面。这个思想实验要求你利用一个能解决“最小顶点覆盖”问题的“黑箱”来解决“最大独立集”问题。这种思维方式是计算复杂性理论的核心，即“归约”（reduction）。它揭示了不同问题之间深层次的联系，表明解决一个问题的能力可以直接转化为解决另一个问题的能力，这是理解计算复杂性分类的关键一步。[@problem_id:1443327]", "problem": "一家科技初创公司正在开发一种新型的分布式传感器网络。该网络可以被建模为一个简单无向图 `G = (V, E)`，其中 `V` 是 `n` 个传感器节点的集合，`E` 是节点对之间的无线通信链路的集合。\n\n对于一项数据收集任务，工程师们需要选择一个尽可能大的节点子集同时激活，其约束条件是任意两个被激活的节点都不能通过通信链路直接相连（以避免信号干扰）。这样的节点子集被称为**最大独立集**，其大小记为 $\\alpha(G)$。\n\n对于一项网络监控任务，另一个团队需要选择一个尽可能小的节点子集来安装诊断软件。该选择必须确保网络中的每一条通信链路都至少有一个端点节点被选中进行监控。这样的节点子集被称为**最小顶点覆盖**，其大小记为 $\\tau(G)$。\n\n这家初创公司获得了一个功能强大但高度专业化的“黑盒”计算设备。当给定网络图 `G` 时，该设备可以立即计算并返回最小顶点覆盖的大小 $\\tau(G)$。然而，它无法计算 $\\alpha(G)$。\n\n您的任务是确定一个公式，数据收集团队可以用它来为任何给定的网络图 `G` 找到 $\\alpha(G)$。请将 $\\alpha(G)$ 表示为节点总数 `n` 和黑盒设备提供的 $\\tau(G)$ 值的简单代数函数。", "solution": "设 $G=(V,E)$ 且 $|V|=n$。根据定义，顶点覆盖 $C \\subseteq V$ 是一个覆盖了图中每条边的集合，而独立集 $I \\subseteq V$ 是一个不包含任何边的集合。将最大独立集的大小记为 $\\alpha(G)$，最小顶点覆盖的大小记为 $\\tau(G)$。\n\n首先，对于任意顶点覆盖 $C$，其补集 $V \\setminus C$ 是一个独立集。要证明这一点，假设存在一条边的两个端点都在 $V \\setminus C$ 中；那么这条边就没有端点在 $C$ 中，这与 $C$ 是一个顶点覆盖相矛盾。因此，\n$$\n|V \\setminus C| \\leq \\alpha(G).\n$$\n由于 $|V \\setminus C|=n-|C|$，对于任意顶点覆盖 $C$，我们有\n$$\nn-|C| \\leq \\alpha(G).\n$$\n取 $C$ 为最小顶点覆盖，使得 $|C|=\\tau(G)$，可得\n$$\nn-\\tau(G) \\leq \\alpha(G).\n$$\n\n反之，对于任意独立集 $I$，其补集 $V \\setminus I$ 是一个顶点覆盖。如果存在一条边的两个端点都在 $V \\setminus I$ 之外，那么这两个端点都将位于 $I$ 中，这与 $I$ 的独立性相矛盾。因此，\n$$\n|V \\setminus I| \\geq \\tau(G).\n$$\n由于 $|V \\setminus I|=n-|I|$，对于任意独立集 $I$，我们有\n$$\nn-|I| \\geq \\tau(G).\n$$\n取 $I$ 为最大独立集，使得 $|I|=\\alpha(G)$，可得\n$$\nn-\\alpha(G) \\geq \\tau(G),\n$$\n这等价于\n$$\n\\alpha(G) \\leq n-\\tau(G).\n$$\n\n综合这两个不等式，\n$$\nn-\\tau(G) \\leq \\alpha(G) \\leq n-\\tau(G),\n$$\n因此\n$$\n\\alpha(G)=n-\\tau(G).\n$$", "answer": "$$\\boxed{n-\\tau(G)}$$", "id": "1443327"}]}