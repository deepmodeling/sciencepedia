{"hands_on_practices": [{"introduction": "在尝试用复杂算法解决分割问题之前，一个聪明的做法是先进行快速的“可行性检查”。本练习将引导你应用分割问题最基本的一个必要条件：一个整数集合若要能被完美分割，其所有元素的总和必须为偶数。掌握这个简单的技巧可以帮助我们迅速排除许多无解的情况，从而节省大量的计算资源。[@problem_id:1460698]", "problem": "分割问题（PARTITION problem）是计算机科学中的一个经典问题，它询问一个给定的正整数多重集是否可以被分割成两个不相交的子集，例如 $S_1$ 和 $S_2$，使得 $S_1$ 中数字的总和等于 $S_2$ 中数字的总和。尽管找到这样的分割在计算上可能是一项艰巨的任务，但有一个非常简单快速的初步检查，有时可以立即证明这样的分割不存在。\n\n考虑以下五个整数多重集：\n\nA. $S_A = \\{1, 5, 11, 5\\}$\n\nB. $S_B = \\{2, 4, 6, 8, 10\\}$\n\nC. $S_C = \\{7, 13, 2, 4, 9\\}$\n\nD. $S_D = \\{3, 4, 5, 6\\}$\n\nE. $S_E = \\{1, 1, 1, 1, 1, 1, 1, 1\\}$\n\n仅通过应用这个最基本、最初步的检查，这些多重集中哪一个可以被确定为分割问题无解？", "solution": "分割问题的基本初步检查是：如果一个多重集可以被分割成两个和相等的子集，那么其总和必须是偶数。形式上，如果总和为 $T$ 并且两个子集的和相等，即 $S_1 = S_2$，那么 $T = S_1 + S_2$ 意味着 $T = 2S_1$，这是一个偶数。因此，如果总和 $T$ 是奇数，则不存在这样的分割。\n\n计算总和：\n$$\\sum S_A = 1 + 5 + 11 + 5 = 22 \\text{ (偶数)}$$\n$$\\sum S_B = 2 + 4 + 6 + 8 + 10 = 30 \\text{ (偶数)}$$\n$$\\sum S_C = 7 + 13 + 2 + 4 + 9 = 35 \\text{ (奇数)}$$\n$$\\sum S_D = 3 + 4 + 5 + 6 = 18 \\text{ (偶数)}$$\n$$\\sum S_E = 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 8 \\text{ (偶数)}$$\n\n只有 $S_C$ 的总和是奇数，所以通过这个初步检查，可以确定它无法被分割成两个和相等的子集。", "answer": "$$\\boxed{C}$$", "id": "1460698"}, {"introduction": "除了检查总和的奇偶性，我们还可以利用集合中最大元素的性质来进一步判断。如果一个集合中最大的数超过了总和的一半，那么即使总和是偶数，完美的分割也是不可能实现的。这个练习将带你应用这一更深层次的约束条件，在一个含有变量的场景中，精确地找出导致问题无解的临界点。[@problem_id:1460697]", "problem": "在一个高性能计算集群中，一组任务必须被分配到两条相同的并行处理流水线中。如果分配给每条流水线的任务的计算权重之和完全相等，则认为该分配是“完全均衡”的。对于一个给定的任务集，只有当该集合能被分割成两个总权重相等的子集时，才可能实现完全均衡，这是计算机科学中的一个经典问题。\n\n给定一个由四个任务组成的集合，其计算权重由一个正整数参数 $k$ 定义。权重集合为 $W = \\{k, 2k, 3k-5, k^2 - 10k + 40\\}$。系统正在对参数 $k$ 的整数值进行测试，其中 $k \\ge 10$。在此 $k$ 的取值范围内，所有计算权重都保证为正整数。\n\n有一个与集合中最大单个权重相关的著名条件，在某些情况下，该条件可以立即证明无法进行完美分割，而无需尝试完整的、计算成本高昂的分割算法。\n\n请确定满足此条件的最小整数 $k$ 值（$k \\ge 10$），从而为任务集 $W$ 无法被完全均衡提供一个确凿的证明。", "solution": "设给定的计算权重集合为 $S$。要使该集合能被分割成两个权重相等的子集（我们称之为 $S_1$ 和 $S_2$），每个子集中的权重之和必须相等。设 $T$ 为 $S$ 中所有权重的总和。存在分割的一个必要条件是 $T$ 必须是偶数，且每个子集的权重之和必须恰好为 $T/2$。\n\n问题提到了另一个与集合中最大元素相关的条件。设 $m_{max}$ 为集合 $S$ 中的最大权重。如果我们尝试构造一个分割，$m_{max}$ 必须属于其中一个子集，比如 $S_1$。要使 $S_1$ 中的权重之和为 $T/2$， $S_1$ 中的其他元素之和必须等于 $T/2 - m_{max}$。由于所有权重都是正数，这仅在 $T/2 - m_{max} \\ge 0$ 时才可能实现，即 $m_{max} \\le T/2$。\n\n因此，存在分割的一个必要条件是最大元素的权重必须小于等于总权重的一半。如果 $m_{max} > T/2$，则可以确凿地证明不存在这样的分割。我们需要找到满足 $m_{max} > T/2$ 这个条件的最小整数 $k \\ge 10$。\n\n权重集合为 $W = \\{k, 2k, 3k-5, k^2 - 10k + 40\\}$。给定条件为 $k \\ge 10$。\n\n首先，我们必须确定在 $k \\ge 10$ 的条件下，集合中的最大元素 $m_{max}$。让我们来比较这些元素：\n- 比较 $k^2 - 10k + 40$ 与 $3k-5$：考虑它们的差值 $f(k) = (k^2 - 10k + 40) - (3k-5) = k^2 - 13k + 45$。这个二次方程的判别式是 $\\Delta = (-13)^2 - 4(1)(45) = 169 - 180 = -11$。由于首项系数为正，且判别式为负，所以 $f(k)$ 恒为正。因此，对于所有的 $k$，都有 $k^2 - 10k + 40 > 3k-5$。\n- 由于 $k \\ge 10$，我们有 $3k-5 > 2k$（因为 $k>5$）并且 $2k > k$。\n- 根据传递性，$k^2 - 10k + 40$ 是所有 $k$ 值（特别是对于 $k \\ge 10$）的最大元素。所以，$m_{max}(k) = k^2 - 10k + 40$。\n\n接下来，我们计算权重的总和 $T(k)$：\n$T(k) = k + 2k + (3k-5) + (k^2 - 10k + 40)$\n$T(k) = k^2 + (1+2+3-10)k + (-5+40)$\n$T(k) = k^2 - 4k + 35$\n\n现在我们应用不可能条件：$m_{max}(k) > T(k)/2$。\n$k^2 - 10k + 40 > \\frac{k^2 - 4k + 35}{2}$\n\n为求解此不等式，我们将两边同乘以 2：\n$2(k^2 - 10k + 40) > k^2 - 4k + 35$\n$2k^2 - 20k + 80 > k^2 - 4k + 35$\n\n整理各项，得到一个标准的二次不等式：\n$2k^2 - k^2 - 20k + 4k + 80 - 35 > 0$\n$k^2 - 16k + 45 > 0$\n\n为了找出该不等式成立的条件，我们首先求出对应方程 $k^2 - 16k + 45 = 0$ 的根。使用二次方程求根公式：\n$$k = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$$\n$k = \\frac{16 \\pm \\sqrt{(-16)^2 - 4(1)(45)}}{2(1)}$\n$k = \\frac{16 \\pm \\sqrt{256 - 180}}{2}$\n$k = \\frac{16 \\pm \\sqrt{76}}{2}$\n$k = \\frac{16 \\pm \\sqrt{4 \\times 19}}{2} = \\frac{16 \\pm 2\\sqrt{19}}{2}$\n$k = 8 \\pm \\sqrt{19}$\n\n这两个根是 $k_1 = 8 - \\sqrt{19}$ 和 $k_2 = 8 + \\sqrt{19}$。\n我们知道 $4^2 = 16$ 且 $5^2 = 25$，所以 $4  \\sqrt{19}  5$。近似地，$\\sqrt{19} \\approx 4.359$。\n$k_1 \\approx 8 - 4.359 = 3.641$\n$k_2 \\approx 8 + 4.359 = 12.359$\n\n二次函数 $k^2 - 16k + 45$ 是一个开口向上的抛物线，因此当 $k$ 在两根之外时，其值为正（$0$），即 $k  k_1$ 或 $k > k_2$。\n所以，当 $k  8 - \\sqrt{19}$ 或 $k > 8 + \\sqrt{19}$ 时，不可能条件成立。\n\n问题要求的是满足此条件的最小整数 $k$ 值（$k \\ge 10$）。\n解的第一部分 $k  8 - \\sqrt{19} \\approx 3.641$，不在 $k \\ge 10$ 的范围内。\n我们必须在第二部分解中寻找答案，即 $k > 8 + \\sqrt{19} \\approx 12.359$。\n我们需要找到满足 $k \\ge 10$ 和 $k > 12.359$ 的最小整数 $k$。\n满足 $k > 12.359$ 的整数是 $13, 14, 15, \\ldots$。\n这个列表中的最小整数是 13。该值也满足 $k \\ge 10$。\n\n因此，满足条件的最小整数 $k$ 值（$k \\ge 10$）是 13。", "answer": "$$\\boxed{13}$$", "id": "1460697"}, {"introduction": "识别出问题“可能”有解，只是第一步；我们最终的目标是“找到”这个解。这自然引出了算法设计的话题。本练习将介绍一种直观的“最大数优先”贪心策略，并通过一个具体的反例让你亲身体会，为何这类看似合理的启发式算法对于像分割问题这样的NP-hard问题，并不能保证总能找到最优解。这有助于我们理解启发式算法与精确算法之间的关键区别。[@problem_id:1460724]", "problem": "计算机科学中的 PARTITION 问题（分割问题）旨在确定一个给定的正整数多重集 $S$ 是否可以被划分为两个子集 $S_1$ 和 $S_2$，使得 $S_1$ 中数字的总和等于 $S_2$ 中数字的总和。这样的划分被称为“完美划分”。PARTITION 问题是 NP-难的，这意味着目前没有已知的算法可以对所有输入高效地解决该问题。\n\n解决该问题的一种常见方法是采用一种名为“最大数优先”法的贪心启发式算法。该启发式算法的工作原理如下：首先，将集合 $S$ 中的数字按降序排序。然后，遍历排序后的数字，将每个数字放入当前总和较小的子集中。如果两个子集的总和相等，则该数字可以放入任一子集。\n\n虽然这种启发式算法很简单，但即使存在完美划分，它也并不总能找到。您的任务是确定以下哪个整数集是这种失败情况的例子，即，一个存在完美划分，但最大数优先贪心启发式算法未能找到它的集合。\n\nA. $S = \\{7, 6, 5, 4\\}$\n\nB. $S = \\{8, 7, 6, 5, 4\\}$\n\nC. $S = \\{10, 7, 6, 4, 2\\}$\n\nD. $S = \\{10, 9, 8, 7, 6, 5, 1\\}$", "solution": "最大数优先贪心启发式算法将下一个最大的元素放入当前总和较小的子集中；如果总和相等，它可以将元素放入任一子集。一个失败的例子必须满足两个条件：存在完美划分（总和为偶数，且该多重集可以被分成两个总和相等的子集），并且贪心启发式算法结束时子集的总和不相等。\n\n分析选项 A：$S=\\{7,6,5,4\\}$。总和为 $7+6+5+4=22$，所以每个子集的总和必须为 $11$。存在一个完美划分：$\\{7,4\\}$ 和 $\\{6,5\\}$ 的总和都是 $11$。在排序后的序列 $7,6,5,4$ 上模拟贪心算法：\n- 开始时 $S_1$ 和 $S_2$ 的总和都为 $0$。将 $7$ 放入 $S_1$ (平局)，总和变为 $7$ 和 $0$。\n- 将 $6$ 放入 $S_2$ (因为 $07$)，总和变为 $7$ 和 $6$。\n- 将 $5$ 放入 $S_2$ (因为 $67$)，总和变为 $7$ 和 $11$。\n- 将 $4$ 放入 $S_1$ (因为 $711$)，总和都变为 $11$。\n贪心算法成功，所以 A 不是一个失败的例子。\n\n分析选项 B：$S=\\{8,7,6,5,4\\}$。总和为 $8+7+6+5+4=30$，所以每个子集的总和必须为 $15$。存在一个完美划分：$\\{8,7\\}$ 和 $\\{6,5,4\\}$ 的总和都是 $15$。在序列 $8,7,6,5,4$ 上模拟贪心算法：\n- 将 $8$ 放入 $S_1$，总和为 $8$ 和 $0$。\n- 将 $7$ 放入 $S_2$ (因为 $08$)，总和为 $8$ 和 $7$。\n- 将 $6$ 放入 $S_2$ (因为 $78$)，总和为 $8$ 和 $13$。\n- 将 $5$ 放入 $S_1$ (因为 $813$)，总和都为 $13$。\n- 将 $4$ 放入任一子集 (平局)，导致总和为 $17$ 和 $13$。\n因此，该贪心启发式算法以不相等的总和结束，未能找到完美划分。由于最后一步的平局无法通过选择来使总和相等，因此无论如何选择，贪心算法都会失败。\n\n分析选项 C：$S=\\{10,7,6,4,2\\}$。总和为 $10+7+6+4+2=29$，是奇数，所以不存在完美划分。因此 C 不可能是失败的例子。\n\n分析选项 D：$S=\\{10,9,8,7,6,5,1\\}$。总和为 $10+9+8+7+6+5+1=46$，所以每个子集的总和必须为 $23$。存在一个完美划分：$\\{10,8,5\\}$ 的总和为 $23$，而 $\\{9,7,6,1\\}$ 的总和也为 $23$。在序列 $10,9,8,7,6,5,1$ 上模拟贪心算法：\n- 将 $10$ 放入 $S_1$，总和为 $10$ 和 $0$。\n- 将 $9$ 放入 $S_2$，总和为 $10$ 和 $9$。\n- 将 $8$ 放入 $S_2$ (因为 $910$)，总和为 $10$ 和 $17$。\n- 将 $7$ 放入 $S_1$ (因为 $1017$)，总和都为 $17$。\n- 将 $6$ 放入任一子集 (平局)。如果放入 $S_1$，总和变为 $23$ 和 $17$；然后将 $5$ 放入 $S_2$ 得到 $23$ 和 $22$，最后将 $1$ 放入 $S_2$ 得到 $23$ 和 $23$。如果将 $6$ 放入 $S_2$，对称地，总和变为 $17$ 和 $23$，然后将 $5$ 放入 $S_1$ 得到 $22$ 和 $23$，再将 $1$ 放入 $S_1$ 得到 $23$ 和 $23$。在所有情况下，贪心算法都成功了，所以 D 不是一个失败的例子。\n\n因此，唯一一个存在完美划分但最大数优先贪心启发式算法未能找到它的集合是选项 B。", "answer": "$$\\boxed{B}$$", "id": "1460724"}]}