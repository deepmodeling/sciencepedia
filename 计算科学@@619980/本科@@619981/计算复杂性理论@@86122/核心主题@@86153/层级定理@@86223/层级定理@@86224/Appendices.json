{"hands_on_practices": [{"introduction": "时间层次定理是计算复杂性理论的基石，它告诉我们，拥有更多的计算时间确实能解决更多的问题。然而，这个“更多”是需要精确量化的。本练习旨在通过一个常见的误解来帮助你深入理解时间层次定理的量化条件，即为什么我们不能直接用它来证明 $\\mathrm{TIME}(2n)$ 比 $\\mathrm{TIME}(n)$ 更强大 [@problem_id:1426909]。通过分析这个看似合理的尝试中的缺陷，你将学会如何严谨地应用该定理。", "problem": "在计算复杂性理论中，时间层次定理是一组基本结果，它们确立了复杂性类中存在着丰富的结构。它们表明，只要有更多的时间，图灵机就能解决更多的问题。确定性时间层次定理的一个标准版本陈述如下：\n\n**定理（确定性时间层次）：**\n设 $f(n)$ 和 $g(n)$ 是从非负整数到非负整数的函数。如果 $f(n)$ 是一个时间可构造函数，并且函数 $g(n)$ 满足 $g(n) \\log g(n) = o(f(n))$，那么 $\\mathrm{TIME}(g(n)) \\subsetneq \\mathrm{TIME}(f(n))$。\n\n此处，一个函数 $T(n)$ 被称为*时间可构造的*，如果存在一台图灵机，在给定大小为 $n$ 的输入时，它恰好在 $T(n)$ 个计算步骤后停机。记号 $h(n) = o(k(n))$（读作“h(n)是k(n)的小o”）意味着，对于任意正常数 $c$，存在一个整数 $N$，使得对于所有 $n > N$ 都有 $h(n) < c \\cdot k(n)$。这在形式上等价于 $\\lim_{n \\to \\infty} \\frac{h(n)}{k(n)} = 0$。类 $\\mathrm{TIME}(T(n))$ 表示所有可以由确定性图灵机在 $O(T(n))$ 时间内解决的判定问题。我们可以假定，像 $n$ 和 $2n$ 这样的简单函数是时间可构造的。\n\n一位刚学完这个定理的本科生，试图用它来证明 $\\mathrm{TIME}(n) \\neq \\mathrm{TIME}(2n)$。该学生的推理是令 $g(n)=n$ 和 $f(n)=2n$，然后应用该定理。\n\n下列哪个选项指出了该学生将时间层次定理应用于此特定问题的尝试中的根本缺陷？\n\nA. 函数 $f(n) = 2n$ 不是一个时间可构造函数。\n\nB. 时间层次定理只对至少是多项式的函数有效，而不适用于像 $n$ 和 $2n$ 这样的线性函数。\n\nC. 对于所选的函数 $g(n)=n$ 和 $f(n)=2n$，条件 $g(n) \\log g(n) = o(f(n))$ 不成立。\n\nD. 线性加速定理指出，对于常数 $c>0$ 和足够大的时间界限 $T(n)$，有 $\\mathrm{TIME}(T(n)) = \\mathrm{TIME}(c \\cdot T(n))$，这使得前提 $\\mathrm{TIME}(n) \\neq \\mathrm{TIME}(2n)$ 为假，因此任何证明尝试都是有缺陷的。\n\nE. 该定理要求 $f(n)$ 和 $g(n)$ 都是时间可构造的，但函数 $g(n)=n$ 不是。", "solution": "我们来分析该学生在选择 $g(n)=n$ 和 $f(n)=2n$ 的情况下应用确定性时间层次定理的尝试。该定理要求：\n1) $f(n)$ 是时间可构造的。\n2) $g(n)$ 是时间可构造的。\n3) 增长条件 $g(n)\\log g(n)=o(f(n))$ 成立。\n\n首先，根据复杂性理论中的标准事实，像 $n$ 和 $2n$ 这样的线性函数是时间可构造的，所以 $f(n)=2n$ 和 $g(n)=n$ 都满足时间可构造性。因此选项A和E是不正确的。\n\n其次，该定理不排除线性函数；它适用于任何满足小o条件的时间可构造函数。因此选项B是不正确的。\n\n第三，我们检查关键的增长条件。根据小o的定义，$h(n)=o(k(n))$ 当且仅当 $\\lim_{n\\to\\infty}\\frac{h(n)}{k(n)}=0$。设 $h(n)=g(n)\\log g(n)$ 和 $k(n)=f(n)$，其中 $g(n)=n$ 且 $f(n)=2n$。那么\n$$\n\\lim_{n\\to\\infty}\\frac{g(n)\\log g(n)}{f(n)}=\\lim_{n\\to\\infty}\\frac{n\\log n}{2n}=\\lim_{n\\to\\infty}\\frac{\\log n}{2}=+\\infty\\neq 0.\n$$\n因此，对于 $g(n)=n$ 和 $f(n)=2n$，$g(n)\\log g(n)\\neq o(f(n))$，所以定理的前提条件不成立。这就是该学生应用中的根本缺陷。因此选项C是正确的。\n\n最后，虽然线性加速定理确实意味着，对于合理的机器模型和足够大的界限，$\\mathrm{TIME}(n)$ 和 $\\mathrm{TIME}(2n)$ 是一致的，这使得目标结论 $\\mathrm{TIME}(n)\\neq \\mathrm{TIME}(2n)$ 站不住脚，但问题问的是应用时间层次定理时的根本缺陷。这个缺陷恰恰是条件 $g(n)\\log g(n)=o(f(n))$ 的不成立，即选项C，而非选项D中更宽泛的论述。", "answer": "$$\\boxed{C}$$", "id": "1426909"}, {"introduction": "层次定理向我们保证，对于某些时间界限，例如 $n^2$ 和 $n^3$，确实存在只能在更长时间内解决的问题，这意味着 $\\mathrm{DTIME}(n^2) \\subsetneq \\mathrm{DTIME}(n^3)$。但这句陈述的真正含义是什么？这个练习将挑战你对“真子集”符号 $\\subsetneq$ 的直观理解，通过一个假设性的问题来阐明为什么一个问题可以同时存在于多个复杂性类中，而这并不与层次定理相矛盾 [@problem_id:1426881]。", "problem": "在计算复杂性理论中，$\\mathrm{DTIME}(t(n))$ 表示所有可由确定性图灵机在最坏情况时间 $O(t(n))$ 内解决的判定问题的集合，其中 $n$ 是输入长度。确定性计算的时间层次定理指出，对于任意两个时间可构造函数 $t_1(n)$ 和 $t_2(n)$，如果满足 $t_1(n) \\log t_1(n) = o(t_2(n))$，则类 $\\mathrm{DTIME}(t_1(n))$ 是 $\\mathrm{DTIME}(t_2(n))$ 的一个真子集，记作 $\\mathrm{DTIME}(t_1(n)) \\subsetneq \\mathrm{DTIME}(t_2(n))$。一个常见的推论是，对于任意实数 $1 \\le a < b$，我们有 $\\mathrm{DTIME}(n^a) \\subsetneq \\mathrm{DTIME}(n^b)$。\n\n现在，考虑一个假设的判定问题，我们称之为 $L$。已知对于任意整数 $k \\ge 2$，问题 $L$ 属于类 $\\mathrm{DTIME}(n^k)$。一名学生认为这种情况产生了一个悖论。例如，选择 $a=2$ 和 $b=3$，根据定理有 $\\mathrm{DTIME}(n^2) \\subsetneq \\mathrm{DTIME}(n^3)$，这意味着在可在平方时间内解决的问题和可在立方时间内解决的问题之间应该存在一个分离。然而，问题 $L$ 同时属于 $\\mathrm{DTIME}(n^2)$ 和 $\\mathrm{DTIME}(n^3)$，这似乎与定理相矛盾。\n\n以下哪个陈述正确地解释了为什么这样一个问题 $L$ 的存在与时间层次定理不矛盾？\n\nA. 陈述 $\\mathrm{DTIME}(n^a) \\subsetneq \\mathrm{DTIME}(n^b)$ 意味着 $\\mathrm{DTIME}(n^a)$ 是 $\\mathrm{DTIME}(n^b)$ 的一个子集，并且在 $\\mathrm{DTIME}(n^b)$ 中至少存在一个问题不在 $\\mathrm{DTIME}(n^a)$ 中。问题 $L$ 的存在，它属于 $\\mathrm{DTIME}(n^2)$ 并因此属于所有 $k > 2$ 的 $\\mathrm{DTIME}(n^k)$，与此并不矛盾。\n\nB. 时间层次定理在此不适用，因为函数 $t(n)=n^k$ 不是时间可构造的。\n\nC. 时间层次定理只为包含被证明是难解问题的复杂性类（例如$\\mathrm{EXPTIME}$完备问题）建立层次结构。它不适用于多项式时间类。\n\nD. 这名学生是正确的；这样一个问题 $L$ 的存在确实会违反时间层次定理，表明该前提必定是不可能的。不存在这样的问题 $L$。\n\nE. 该定理是关于非确定性时间类（$\\mathrm{NTIME}$）的陈述，而非确定性时间类（$\\mathrm{DTIME}$），因此不能应用于由确定性算法解决的问题。\n\nF. 问题 $L$ 的性质意味着它属于复杂性类 $\\mathrm{P}$。时间层次定理的主要结果是 $\\mathrm{P} \\subsetneq \\mathrm{EXP}$，这是一个不同的、不相关的层次结构。", "solution": "我们重述确定性时间层次定理：如果 $t_{1}$ 和 $t_{2}$ 是时间可构造的并且满足 $t_{1}(n)\\log t_{1}(n)=o\\!\\left(t_{2}(n)\\right)$，那么 $\\mathrm{DTIME}(t_{1}(n))\\subsetneq \\mathrm{DTIME}(t_{2}(n))$。对于 $1\\le a<b$ 和 $t_{1}(n)=n^{a}$，$t_{2}(n)=n^{b}$，我们有\n$$\nt_{1}(n)\\log t_{1}(n)=n^{a}\\log(n^{a})=a\\,n^{a}\\log n.\n$$\n由于 $b>a$，我们有 $\\log n=o(n^{b-a})$，因此 $a\\,n^{a}\\log n=o(n^{b})$。多项式是时间可构造的，所以该定理适用并得出\n$$\n\\mathrm{DTIME}(n^{a})\\subsetneq \\mathrm{DTIME}(n^{b}).\n$$\n\n真子集 $\\subsetneq$ 的含义是，在 $\\mathrm{DTIME}(n^{b})$ 中至少存在一种语言 $L^{\\ast}$，它不在 $\\mathrm{DTIME}(n^{a})$ 中。这并不意味着这两个类是不相交的。事实上，由于当 $b>a$ 时有 $n^{a}=O(n^{b})$，任何可在时间 $O(n^{a})$ 内判定的语言也可以在时间 $O(n^{b})$ 内判定，所以\n$$\n\\mathrm{DTIME}(n^{a})\\subseteq \\mathrm{DTIME}(n^{b}),\n$$\n并且其交集等于 $\\mathrm{DTIME}(n^{a})$。\n\n现在考虑给定的问题 $L$，它具有对于每个整数 $k\\ge 2$ 都有 $L\\in \\mathrm{DTIME}(n^{k})$ 的性质。特别地，$L\\in \\mathrm{DTIME}(n^{2})$ 且 $L\\in \\mathrm{DTIME}(n^{3})$。这与定理完全一致：该定理保证了存在某个语言 $L^{\\ast}\\in \\mathrm{DTIME}(n^{3})\\setminus \\mathrm{DTIME}(n^{2})$，但并不禁止许多（实际上是无限多）语言同时存在于这两个类中。因此，$L$ 只是不是那个分离的见证。\n\n评估各个选项：\n- A 正确地解释了 $\\subsetneq$ 断言了至少存在一个分离语言，同时允许重叠；$L$ 同时属于两个类并不构成矛盾。\n- B 是错误的：对于整数 $k\\ge 1$，$n^{k}$ 是时间可构造的。\n- C 是错误的：该定理广泛适用于确定性时间类，包括多项式界。\n- D 是错误的：$L$ 的存在不违反该定理；这些类不是不相交的。\n- E 是错误的：所述定理也关于确定性时间类。\n- F 是不相关且有误导性的：虽然 $L \\in \\mathrm{P}$，但这并未解决学生的误解；多项式时间层次分离结果正是确定性时间层次定理的一个实例。\n\n因此，正确的解释是 A。", "answer": "$$\\boxed{A}$$", "id": "1426881"}, {"introduction": "与时间层次定理类似，空间层次定理也揭示了计算资源（这次是空间）与计算能力之间的关系。但每个定理都有其独特的前提条件。这个练习将探讨空间层次定理的一个关键要求——空间可构造性，并用一个关于对数和次对数空间类的微妙例子，来展示为何即使函数的增长率满足分离条件，定理本身也可能因其他前提不满足而无法直接应用 [@problem_id:1426917]。", "problem": "在计算复杂性理论中，空间层次定理 (Space Hierarchy Theorem) 提供了一种证明某些复杂度类是其他复杂度类的真子集的方法。该定理的形式化表述如下：\n\n设 $f(n)$ 和 $g(n)$ 是两个将自然数映射到自然数的空间可构造函数。一个函数 $s(n)$ 被定义为 **空间可构造的 (space-constructible)**，如果存在一台图灵机，对于任意长度为 $n$ 的输入，它在工作带上恰好使用 $s(n)$ 个单元后停机。\n\n该定理指出，如果 $g(n)$ 是空间可构造的并且\n$$ \\lim_{n \\to \\infty} \\frac{f(n)}{g(n)} = 0 $$\n那么复杂度类 $\\mathrm{SPACE}(f(n))$ 是复杂度类 $\\mathrm{SPACE}(g(n))$ 的一个真子集，记作 $\\mathrm{SPACE}(f(n)) \\subsetneq \\mathrm{SPACE}(g(n))$。\n\n现考虑函数 $f(n) = \\lfloor\\log_2(\\log_2 n)\\rfloor$ 和 $g(n) = \\lfloor\\log_2 n\\rfloor$ (对于 $n \\ge 4$)。我们希望确定空间层次定理是否能被直接用来断定 $\\mathrm{SPACE}(\\log \\log n)$ 是 $\\mathrm{SPACE}(\\log n)$ 的真子集。\n\n以下哪个陈述提供了正确的推理？\n\nA. 是的，该定理直接适用。$f(n)$ 和 $g(n)$ 都是空间可构造的，且上述极限的计算结果为 0。因此，$\\mathrm{SPACE}(\\log \\log n) \\subsetneq \\mathrm{SPACE}(\\log n)$。\n\nB. 不，该定理不适用，因为极限条件未被满足。当 $n$ 趋于无穷大时，表达式 $\\frac{\\log \\log n}{\\log n}$ 不趋近于 0。\n\nC. 不，该定理不适用，因为函数 $f(n) = \\lfloor\\log_2(\\log_2 n)\\rfloor$ 不是空间可构造的，而这是该定理的一个必要条件。\n\nD. 不，该定理不适用，因为函数 $g(n) = \\lfloor\\log_2 n\\rfloor$ 不是空间可构造的，而这是该定理的一个必要条件。\n\nE. 在这种情况下，该定理无法得出结论，因为层次定理仅对至少是线性的空间界限（即形式为 $\\Omega(n)$ 的界限）有效。", "solution": "给定 $f(n)=\\lfloor \\log_{2}\\log_{2} n \\rfloor$ 和 $g(n)=\\lfloor \\log_{2} n \\rfloor$ (对于 $n \\ge 4$)，我们想知道空间层次定理是否能用于得出 $\\mathrm{SPACE}(\\log \\log n) \\subsetneq \\mathrm{SPACE}(\\log n)$ 的结论。\n\n首先，验证极限条件。设 $t=\\log_{2} n$，那么当 $n \\to \\infty$ 时，$t \\to \\infty$。则\n$$\n\\frac{f(n)}{g(n)} \\sim \\frac{\\log_{2}\\log_{2} n}{\\log_{2} n}=\\frac{\\log_{2} t}{t}.\n$$\n使用标准事实 $\\lim_{t \\to \\infty} \\frac{\\ln t}{t}=0$ 以及换底公式 $\\log_{2} t=\\frac{\\ln t}{\\ln 2}$，可以推得\n$$\n\\lim_{n \\to \\infty} \\frac{\\log_{2}\\log_{2} n}{\\log_{2} n}=0.\n$$\n向下取整函数最多只会改变每个量一个加性常数，因此该比率仍然趋于 0。所以，极限条件 $f(n)=o(g(n))$ 成立。\n\n接下来，检查空间可构造性。根据问题的定义，一个函数 $s(n)$ 是空间可构造的，如果存在一台图灵机，在长度为 $n$ 的输入上，其工作带上恰好使用 $s(n)$ 个单元后停机。一个标准结论是 $g(n)=\\lfloor \\log_{2} n \\rfloor$ 是空间可构造的：直观上，我们可以在 $O(\\log n)$ 的工作空间内（实际上是在 $\\lfloor \\log_{2} n \\rfloor$ 空间内），计算出输入长度的表示，然后确保恰好使用了 $\\lfloor \\log_{2} n \\rfloor$ 个单元。\n\n相比之下，$f(n)=\\lfloor \\log_{2}\\log_{2} n \\rfloor$ 在这个意义上不是空间可构造的。为了保证在长度为 $n$ 的输入上恰好使用 $\\lfloor \\log_{2}\\log_{2} n \\rfloor$ 个单元，一台机器需要对于每个 $k$ 来确定 $n$ 是否位于区间 $[2^{2^{k}},\\,2^{2^{k+1}})$ 内，以便确定 $\\lfloor \\log_{2}\\log_{2} n \\rfloor=k$。任何通过计数或受控遍历来验证 $n \\ge 2^{2^{k}}$ 的通用方法，都需要维护一个能计数到 $2^{2^{k}}$ 步的计数器，这需要 $\\Theta(\\log(2^{2^{k}}))=\\Theta(2^{k})$ 位的工作带空间。由于 $2^{k}$ 相对于 $k$ 是超线性增长的，这超过了所允许的 $k=\\Theta(\\log_{2}\\log_{2} n)$ 空间，使得这样的机器不可能存在。这与空间层次定理通常被陈述时所带的标准限制条件相符：该定理适用于至少为 $\\log n$ 的空间可构造界限，而像 $\\log \\log n$ 这样的亚对数函数在所要求的精确意义上是不可构造的。\n\n因此，尽管 $\\frac{f(n)}{g(n)} \\to 0$ 且 $g$ 是空间可构造的，但 $f$ 不是空间可构造的，所以该定理不能被直接用来断定 $\\mathrm{SPACE}(\\log \\log n) \\subsetneq \\mathrm{SPACE}(\\log n)$。\n\n因此，正确选项是 C。", "answer": "$$\\boxed{C}$$", "id": "1426917"}]}