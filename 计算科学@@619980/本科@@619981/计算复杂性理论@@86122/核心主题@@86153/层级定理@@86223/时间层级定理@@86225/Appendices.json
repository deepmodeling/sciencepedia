{"hands_on_practices": [{"introduction": "掌握时间层次定理的第一步是能够熟练运用其核心数学条件。这个练习提供了一个直接的机会，通过计算一个关键的极限来验证定理的适用性，从而确定两个具体时间复杂度类之间的关系。这是一个基础但至关重要的技能，它构成了更复杂分析的基石 [@problem_id:1464342]。", "problem": "在计算复杂性理论领域，时间层次定理是一个基本定理，它表明拥有更多时间，图灵机就可以解决更多问题。确定性时间层次定理的一个简化版本可以陈述如下：\n\n**定理：** 设 $f(n)$ 和 $g(n)$ 是两个时间可构造函数。一个函数 $t(n)$ 被认为是时间可构造的，如果存在一台图灵机，对于长度为 $n$ 的输入，它能在 $O(t(n))$ 时间内计算出 $t(n)$ 的值。如果满足以下极限条件：\n$$ \\lim_{n \\to \\infty} \\frac{f(n) \\log f(n)}{g(n)} = 0 $$\n那么，在确定性时间 $O(f(n))$ 内可判定的语言类是确定性时间 $O(g(n))$ 内可判定的语言类的真子集。这种关系被记为 $\\mathrm{TIME}(f(n)) \\subsetneq \\mathrm{TIME}(g(n))$。请注意，就本问题而言，$\\log(x)$ 指的是 $x$ 的自然对数。\n\n考虑两个时间可构造函数 $f(n) = n$ 和 $g(n) = n (\\log n)^2$。根据所提供的定理，确定复杂性类 $\\mathrm{TIME}(f(n))$ 和 $\\mathrm{TIME}(g(n))$ 之间的关系。\n\nA. $\\mathrm{TIME}(n) = \\mathrm{TIME}(n(\\log n)^2)$\n\nB. $\\mathrm{TIME}(n) \\subsetneq \\mathrm{TIME}(n(\\log n)^2)$\n\nC. $\\mathrm{TIME}(n(\\log n)^2) \\subsetneq \\mathrm{TIME}(n)$\n\nD. 该定理不足以确定此关系。", "solution": "我们已知时间可构造函数 $f(n)=n$ 和 $g(n)=n(\\ln n)^{2}$。确定性时间层次定理适用，如果\n$$\n\\lim_{n \\to \\infty} \\frac{f(n)\\ln f(n)}{g(n)}=0.\n$$\n使用 $f(n)=n$ 和 $g(n)=n(\\ln n)^{2}$ 计算该极限：\n$$\n\\frac{f(n)\\ln f(n)}{g(n)}=\\frac{n\\ln n}{n(\\ln n)^{2}}=\\frac{1}{\\ln n}.\n$$\n那么\n$$\n\\lim_{n \\to \\infty} \\frac{1}{\\ln n}=0.\n$$\n由于极限条件成立，并且如题所述，两个函数都是时间可构造的，因此该定理蕴含\n$$\n\\mathrm{TIME}(n)\\subsetneq \\mathrm{TIME}\\big(n(\\ln n)^{2}\\big).\n$$\n因此，正确选项是B。", "answer": "$$\\boxed{B}$$", "id": "1464342"}, {"introduction": "一个理论的强大之处不仅在于它能证明什么，还在于我们了解它的局限性。这个思想实验探讨了为什么时间层次定理不能用于区分仅相差一个常数因子的时间类，例如 $TIME(n)$ 和 $TIME(2n)$。通过分析定理的必要条件为何在此失效，你将更深刻地理解该定理成立所需的时间界限之间的最小“鸿沟” [@problem_id:1426909]。", "problem": "在计算复杂性理论中，时间层次定理 (Time Hierarchy Theorems) 是一组基本结果，它们确立了复杂性类中存在丰富的结构。它们表明，给予更多时间，图灵机可以解决更多的问题。确定性时间层次定理 (Deterministic Time Hierarchy Theorem) 的一个标准版本陈述如下：\n\n**定理 (确定性时间层次定理):**\n设 $f(n)$ 和 $g(n)$ 是从非负整数到非负整数的函数。如果 $f(n)$ 是一个时间可构造函数，并且 $g(n)$ 是一个满足 $g(n) \\log g(n) = o(f(n))$ 的函数，那么 $\\mathrm{TIME}(g(n)) \\subsetneq \\mathrm{TIME}(f(n))$。\n\n这里，一个函数 $T(n)$ 被称为*时间可构造的* (time-constructible)，如果存在一台图灵机，在给定大小为 $n$ 的输入时，它会在恰好 $T(n)$ 个计算步骤后停机。符号 $h(n) = o(k(n))$ (读作“h(n) 是 k(n) 的小o”) 表示对于任意正常数 $c$，存在一个整数 $N$，使得对于所有 $n > N$，都有 $h(n) < c \\cdot k(n)$。这在形式上等价于 $\\lim_{n \\to \\infty} \\frac{h(n)}{k(n)} = 0$。复杂性类 $\\mathrm{TIME}(T(n))$ 表示所有可以由确定性图灵机在 $O(T(n))$ 时间内解决的判定问题。我们可以假设像 $n$ 和 $2n$ 这样的简单函数是时间可构造的。\n\n一名刚学过这个定理的本科生，试图用它来证明 $\\mathrm{TIME}(n) \\neq \\mathrm{TIME}(2n)$。该学生的推理是设 $g(n)=n$ 和 $f(n)=2n$ 并应用该定理。\n\n以下哪个选项指出了该学生在将时间层次定理应用于此特定问题时所犯的根本性缺陷？\n\nA. 函数 $f(n) = 2n$ 不是一个时间可构造函数。\n\nB. 时间层次定理仅对至少为多项式的函数有效，不适用于像 $n$ 和 $2n$ 这样的线性函数。\n\nC. 对于所选的函数 $g(n)=n$ 和 $f(n)=2n$，条件 $g(n) \\log g(n) = o(f(n))$ 不满足。\n\nD. 线性加速定理 (Linear Speedup Theorem) 指出对于常数 $c>0$ 和足够大的时间界限 $T(n)$，有 $\\mathrm{TIME}(T(n)) = \\mathrm{TIME}(c \\cdot T(n))$，这使得前提 $\\mathrm{TIME}(n) \\neq \\mathrm{TIME}(2n)$ 为假，因此任何证明尝试都是有缺陷的。\n\nE. 该定理要求 $f(n)$ 和 $g(n)$ 都是时间可构造的，但函数 $g(n)=n$ 不是。", "solution": "我们分析学生在选择 $g(n)=n$ 和 $f(n)=2n$ 时应用确定性时间层次定理的尝试。该定理需要满足：\n1) $f(n)$ 是时间可构造的。\n2) $g(n)$ 是时间可构造的。\n3) 增长条件 $g(n)\\log g(n)=o(f(n))$ 成立。\n\n首先，根据复杂性理论中的标准事实，像 $n$ 和 $2n$ 这样的线性函数是时间可构造的，所以 $f(n)=2n$ 和 $g(n)=n$ 都满足时间可构造性。因此选项 A 和 E 是不正确的。\n\n其次，该定理不排除线性函数；它适用于任何满足小o条件的时间可构造函数。因此选项 B 是不正确的。\n\n第三，我们检查关键的增长条件。根据小o的定义，$h(n)=o(k(n))$ 当且仅当 $\\lim_{n\\to\\infty}\\frac{h(n)}{k(n)}=0$。设 $h(n)=g(n)\\ln g(n)$ 和 $k(n)=f(n)$，其中 $g(n)=n$ 和 $f(n)=2n$。那么\n$$\n\\lim_{n\\to\\infty}\\frac{g(n)\\ln g(n)}{f(n)}=\\lim_{n\\to\\infty}\\frac{n\\ln n}{2n}=\\lim_{n\\to\\infty}\\frac{\\ln n}{2}=+\\infty\\neq 0.\n$$\n因此，对于 $g(n)=n$ 和 $f(n)=2n$，$g(n)\\ln g(n)\\neq o(f(n))$，所以定理的假设不成立。这是学生运用中的根本性缺陷。因此选项 C 是正确的。\n\n最后，尽管线性加速定理确实意味着，对于合理的机器模型和足够大的时间界限，$\\mathrm{TIME}(n)$ 与 $\\mathrm{TIME}(2n)$ 是相同的，这使得目标结论 $\\mathrm{TIME}(n)\\neq \\mathrm{TIME}(2n)$ 不成立，但问题所问的是在应用时间层次定理时的根本性缺陷。该缺陷恰恰是 $g(n)\\ln g(n)=o(f(n))$ 条件的不满足，即选项 C，而非选项 D 中更宽泛的论述。", "answer": "$$\\boxed{C}$$", "id": "1426909"}, {"introduction": "时间层次定理是一个存在性定理，它保证了更难问题的存在，但并未指明哪些具体问题是更难的。这个练习旨在阐明这一关键区别，挑战你思考该定理对单个特定问题的具体复杂性所能提供的信息。这有助于你避免对计算复杂性理论中的结论进行过度概括，并培养严谨的逻辑推理能力 [@problem_id:1464341]。", "problem": "设有两个函数 $f(n)$ 和 $g(n)$ 是时间可构造的，其中一个函数 $t(n)$ 是时间可构造的，如果存在一个图灵机，在输入长度为 $n$ 时，能以 $O(t(n))$ 的时间计算出 $t(n)$ 的值。确定性时间层级定理指出，若 $f(n) \\log f(n) = o(g(n))$，则复杂度类 $\\mathrm{TIME}(f(n))$ 是 $\\mathrm{TIME}(g(n))$ 的一个真子集。这意味着至少存在一种语言，它可以在 $O(g(n))$ 时间内被判定，但不能在 $O(f(n))$ 时间内被判定。\n\n假设一位计算机科学家 Alice 为一个特定的判定问题（对应于一个语言 $L$）开发了一种算法。她的算法在一个确定性图灵机上运行，对于长度为 $n$ 的输入，其最坏情况时间复杂度为 $O(n^3)$。因此，我们知道 $L \\in \\mathrm{TIME}(n^3)$。\n\n另一位科学家 Bob 声称，对*同一个*语言 $L$，他有一个更高效的算法，其最坏情况时间复杂度为 $O(n^2)$。\n\n*仅*根据确定性时间层级定理和所提供的信息，关于 Bob 的说法可以得出什么结论？\n\nA. 时间层级定理证明了 Bob 的说法必定是错误的，因为 $\\mathrm{TIME}(n^2)$ 是 $\\mathrm{TIME}(n^3)$ 的真子集。\n\nB. 时间层级定理证明了 Bob 的说法必定是正确的，因为 $\\mathrm{TIME}(n^3)$ 中的所有问题都可以简化到 $\\mathrm{TIME}(n^2)$。\n\nC. 时间层级定理无法应用，因为函数 $n^2 \\log(n^2)$ 不属于 $o(n^3)$。\n\nD. 时间层级定理保证了存在 $\\mathrm{TIME}(n^3)$ 中但不在 $\\mathrm{TIME}(n^2)$ 中的语言，但它没有提供关于特定语言 $L$ 是否是其中之一的信息。\n\nE. 时间层级定理与此无关，因为函数 $n^2$ 和 $n^3$ 不是时间可构造的。", "solution": "设 $f(n) = n^{2}$ 且 $g(n) = n^{3}$。根据在图灵机上模拟计数器的标准结论，多项式是时间可构造的，因此 $f$ 和 $g$ 都是时间可构造的。\n\n计算 $f(n)\\log f(n)$:\n$$\nf(n)\\log f(n) = n^{2}\\log\\!\\big(n^{2}\\big) = 2 n^{2}\\log n.\n$$\n为检验确定性时间层级定理的假设，计算其渐近比率：\n$$\n\\frac{f(n)\\log f(n)}{g(n)} = \\frac{2 n^{2}\\log n}{n^{3}} = \\frac{2 \\log n}{n}.\n$$\n由于\n$$\n\\lim_{n\\to\\infty} \\frac{2 \\log n}{n} = 0,\n$$\n可得 $f(n)\\log f(n) = o\\!\\big(g(n)\\big)$。\n\n根据确定性时间层级定理，这意味着\n$$\n\\mathrm{TIME}\\!\\big(n^{2}\\big) \\subsetneq \\mathrm{TIME}\\!\\big(n^{3}\\big).\n$$\n因此，存在可以在 $O\\!\\big(n^{3}\\big)$ 时间内被判定，但不能在 $O\\!\\big(n^{2}\\big)$ 时间内被判定的语言。然而，该定理是存在性的：它保证了至少存在一种这样的语言，但并未指明哪些语言具有此性质。仅凭 $L \\in \\mathrm{TIME}\\!\\big(n^{3}\\big)$ 这一点，该定理无法让我们断定 $L \\in \\mathrm{TIME}\\!\\big(n^{2}\\big)$ 还是 $L \\notin \\mathrm{TIME}\\!\\big(n^{2}\\big)$。因此，该定理没有提供关于 Bob 针对语言 $L$ 的具体说法的真实性的任何信息。\n\n选项A是错误的，因为真包含关系并不意味着 $\\mathrm{TIME}\\!\\big(n^{3}\\big)$ 中的每个语言都在 $\\mathrm{TIME}\\!\\big(n^{2}\\big)$ 之外。选项B是错误的，因为该定理并未将 $\\mathrm{TIME}\\!\\big(n^{3}\\big)$ 坍缩到 $\\mathrm{TIME}\\!\\big(n^{2}\\big)$。选项C是错误的，因为 $n^{2}\\log\\!\\big(n^{2}\\big) = o\\!\\big(n^{3}\\big)$。选项E是错误的，因为 $n^{2}$ 和 $n^{3}$ 是时间可构造的。\n\n所以，正确的结论是，该定理保证了存在 $\\mathrm{TIME}\\!\\big(n^{3}\\big)$ 中但不在 $\\mathrm{TIME}\\!\\big(n^{2}\\big)$ 中的语言，但它并不能确定特定语言 $L$ 是否是其中之一。", "answer": "$$\\boxed{D}$$", "id": "1464341"}]}