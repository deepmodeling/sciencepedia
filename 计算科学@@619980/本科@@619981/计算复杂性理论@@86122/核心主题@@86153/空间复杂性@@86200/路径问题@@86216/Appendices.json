{"hands_on_practices": [{"introduction": "PATH 问题是理解复杂度类 NL 的基石。为了真正掌握它为何属于 NL，首先研究一个简化版本会很有启发性。本练习邀请你分析一种特殊类型图上的 PATH 问题——其中每个顶点的出度最多为一——并确定此结构性约束如何影响其计算复杂度，从而为我们打开一扇清晰的窗口，来观察确定性对数空间（L）与非确定性对数空间（NL）之间的区别。[@problem_id:1460950]", "problem": "有向图s-t连通性问题（通常表示为 PATH）是计算复杂性理论中的一个基本问题。该问题询问的是，在给定的有向图 $G=(V, E)$ 中，是否存在一条从指定的起始顶点 $s$ 到目标顶点 $t$ 的路径。该问题的一般版本对于复杂性类 NL（非确定性对数空间）是完全的。\n\n让我们更正式地定义相关的复杂性类：\n- **L (对数空间)**：可以由一台确定性图灵机在只读输入带和大小为 $O(\\log n)$ 的读写工作带上解决的判定问题类，其中 $n$ 是输入的大小。\n- **NL (非确定性对数空间)**：可以由一台非确定性图灵机在相同的空间限制下解决的判定问题类。\n\n现在，考虑该问题的一个受限版本，我们称之为 U-PATH。在 U-PATH 问题中，输入包含一个有向图 $G=(V, E)$、一个起始顶点 $s$ 和一个目标顶点 $t$。然而，图 $G$ 具有一个特定的结构性保证：$V$ 中的每个顶点的出度最多为一。\n\n根据解决 U-PATH 所需计算资源的分析，以下哪个陈述最准确地描述了其复杂性？\n\nA. U-PATH 属于 L。\n\nB. U-PATH 是 NL-完全的。\n\nC. U-PATH 是 P-完全的（在对数空间归约下）。\n\nD. U-PATH 是不可判定的。\n\nE. U-PATH 属于 NL，但目前未知其是否属于 L 或是否为 NL-完全的。", "solution": "设 $G=(V,E)$ 是一个有向图，其中每个顶点的出度最多为一。等价地，存在一个部分函数 $f:V\\to V$，使得对于每个 $u\\in V$，要么没有从 $u$ 出发的边，要么恰好有一条边 $(u,f(u))\\in E$。给定 $s,t\\in V$，存在一条从 $s$ 到 $t$ 的有向路径，当且仅当存在 $k\\in \\mathbb{N}$ 使得 $f^{k}(s)=t$，其中 $f^{0}(s)=s$ 并且当 $f^{k}(s)$ 有定义时，$f^{k+1}(s)=f(f^{k}(s))$。\n\n记 $n=|V|$。从 $s$ 开始，序列 $s, f(s), f^{2}(s), \\dots$ 要么终止于一个没有出边的顶点（汇点），要么最终重复某个顶点，形成一个有向环。无论哪种情况，访问到的不同顶点数最多为 $n$。因此，如果 $t$ 从 $s$ 可达，那么存在一个 $k$ 满足 $0\\leq k\\leq n-1$，使得 $f^{k}(s)=t$。\n\n确定性对数空间算法（属于 L）：\n- 在工作带上维护两个变量：\n  - 一个当前顶点 $v$，初始化为 $s$；\n  - 一个计数器 $c$，初始化为 $0$，其取值范围为 $0$ 到 $n$。\n  $v$ 和 $c$ 都可以使用 $O(\\log_{2} n)$ 比特来存储。\n- 当 $c\\leq n$ 时，重复以下循环：\n  1. 如果 $v=t$，接受。\n  2. 寻找 $v$ 唯一存在的出边邻居。这可以通过扫描只读输入来定位一条边 $(v,w)\\in E$ 来完成。因为输入是只读的且顶点可以被索引，一次扫描使用 $O(\\log_{2} n)$ 比特来保存索引和指针。\n  3. 如果不存在出边邻居，则拒绝（因为唯一的前向遍历在到达 $t$ 之前已经结束）。\n  4. 否则，设置 $v:=w$ 并将 $c$ 增加1，$c:=c+1$。\n- 如果循环结束时仍未接受，则拒绝。\n\n正确性：\n- 如果存在从 $s$ 到 $t$ 的路径，那么某个 $k\\leq n-1$ 满足 $f^{k}(s)=t$，因此算法在第 $k$ 次迭代时接受。\n- 如果不存在这样的路径，那么沿着从 $s$ 出发的唯一前向遍历，要么在到达 $t$ 之前遇到一个汇点（立即拒绝），要么进入一个与 $t$ 不相交的环。在后一种情况下，由于遍历路径上最多有 $n$ 个不同的顶点，经过 $n$ 次递增后，算法必然没有看到 $t$ 并拒绝。\n\n空间界：\n- 该算法存储了 $v$ 和 $c$，每个使用 $O(\\log_{2} n)$ 比特，并使用额外的 $O(\\log_{2} n)$ 比特来扫描输入以寻找当前顶点的出边。因此，总工作空间为 $O(\\log_{2} n)$，即确定性对数空间。\n\n因此，U-PATH 可以在确定性对数空间内解决，所以 U-PATH 属于 L。所以，在这些选项中，最准确的描述是选项 A。\n\n由于 U-PATH 属于 L，除非 $\\mathrm{L}=\\mathrm{NL}$，否则它不可能是 NL-完全的；除非 $\\mathrm{L}=\\mathrm{P}$，否则它也不是 P-完全的。该问题显然是可判定的，所以 D是错误的；E 也是错误的，因为我们有一个明确的 L 算法。", "answer": "$$\\boxed{A}$$", "id": "1460950"}, {"introduction": "除了传统的图遍历算法，线性代数也为分析连通性问题提供了一个出乎意料地强大而优雅的框架。通过将图表示为邻接矩阵 $A$，我们可以通过矩阵运算揭示关于路径和步径（walks）的深层属性。本题挑战你运用这种代数视角，来计算两个顶点之间特定长度的步径数量，从而展示图论与矩阵指数运算之间的深刻联系。[@problem_id:1460973]", "problem": "在计算复杂性理论的研究中，PATH 问题旨在判断一个有向图中两个顶点之间是否存在路径。该问题可使用线性代数进行分析。\n\n考虑一个有向图 $G$，其包含 $n=4$ 个顶点，标记为 $\\{1, 2, 3, 4\\}$。其有向边集合为 $E = \\{(1,2), (1,3), (2,3), (3,2), (3,4), (4,1)\\}$。该图的结构可以用其邻接矩阵 $A$ 来表示。$A$ 是一个 $n \\times n$ 的矩阵，其中如果存在从顶点 $i$ 到顶点 $j$ 的有向边，则元素 $A_{ij}$ 为 1，否则为 0。\n\n为了分析该图的连通性性质，我们构建一个矩阵 $S$，其定义为邻接矩阵的前 $n-1$ 次幂之和：\n$$ S = \\sum_{k=1}^{n-1} A^k $$\n请计算元素 $S_{14}$ 的值。", "solution": "我们将顶点标记为 $\\{1,2,3,4\\}$ 并构建邻接矩阵 $A$，其中若存在有向边 $i \\to j$，则 $A_{ij}=1$，否则 $A_{ij}=0$。根据 $E=\\{(1,2),(1,3),(2,3),(3,2),(3,4),(4,1)\\}$，我们有\n$$\nA=\\begin{pmatrix}\n0 & 1 & 1 & 0 \\\\\n0 & 0 & 1 & 0 \\\\\n0 & 1 & 0 & 1 \\\\\n1 & 0 & 0 & 0\n\\end{pmatrix}.\n$$\n根据邻接矩阵的标准性质，$(A^{k})_{ij}$ 等于从 $i$ 到 $j$ 长度为 $k$ 的有向途径的数量。因此，矩阵\n$$\nS=\\sum_{k=1}^{n-1}A^{k}=\\sum_{k=1}^{3}A^{k}\n$$\n满足\n$$\nS_{14}=\\sum_{k=1}^{3}(A^{k})_{14}.\n$$\n\n首先，从矩阵 $A$ 中可以直接读出 $(A)_{14}=0$，因为不存在边 $1 \\to 4$。\n\n接下来，计算 $A^{2}$ 的第一行：\n$$\n(A^{2})_{1j}=\\sum_{m=1}^{4}A_{1m}A_{mj}=A_{12}A_{2j}+A_{13}A_{3j}=A_{2j}+A_{3j}.\n$$\n使用 $A$ 的第 2 行和第 3 行，即 $(0,0,1,0)$ 和 $(0,1,0,1)$，我们得到\n$$\n(A^{2})_{1\\cdot}=(0,1,1,1),\n$$\n所以 $(A^{2})_{14}=1$。\n\n然后，计算 $A^{3}$ 的第一行：\n$$\n(A^{3})_{1j}=\\sum_{m=1}^{4}(A^{2})_{1m}A_{mj}=(A^{2})_{12}A_{2j}+(A^{2})_{13}A_{3j}+(A^{2})_{14}A_{4j}=A_{2j}+A_{3j}+A_{4j}.\n$$\n将 $A$ 的第 2、3、4 行相加，即 $(0,0,1,0)+(0,1,0,1)+(1,0,0,0)=(1,1,1,1)$，得到\n$$\n(A^{3})_{1\\cdot}=(1,1,1,1),\n$$\n所以 $(A^{3})_{14}=1$。\n\n因此，\n$$\nS_{14}=(A)_{14}+(A^{2})_{14}+(A^{3})_{14}=0+1+1=2.\n$$", "answer": "$$\\boxed{2}$$", "id": "1460973"}, {"introduction": "在探索了简化情况和代数方法之后，我们现在来正面处理一般 PATH 问题的复杂性。这个场景引入了一个实际的约束：最大路径长度，模拟了现实世界网络中的路由协议。你的任务是对此有界长度路径问题进行复杂性分类，这将巩固你对 NL 完备性及其证明技术的理解。[@problem_id:1460957]", "problem": "一种新的数据路由协议，“路径受限传输”（PLT），正在被开发。在这个协议中，一个数据包在计算机网络中从源节点 $s$ 传输到目标节点 $t$ 的过程中，如果其经过的链路数量超过一个指定的最大值 $k$，该数据包将被丢弃。这是一个防止数据包循环或采用过长路径的特性。该网络被建模为一个有向图 $G = (V, E)$，其中 $V$ 是节点集合，$E$ 是有向通信链路集合。路径的长度定义为其包含的链路（边）的数量。\n\n您是一名复杂性分析师，任务是对此PLT协议相关的基本判定问题进行分类：给定一个网络图 $G$，一个源节点 $s$，一个目标节点 $t$，以及最大链路数 $k$，一个数据包能否成功地从 $s$ 传输到 $t$？\n\n我们将这个判定问题称为 `PLT_ROUTABLE`。请分析 `PLT_ROUTABLE` 的复杂性，并确定下列哪个陈述是最准确的分类。假设整数 $k$ 是作为输入的一部分，以标准二进制表示形式给出。\n\nA. `PLT_ROUTABLE` 属于 P，但尚不知道它是否属于 NL。\n\nB. `PLT_ROUTABLE` 是 NL-完备的。\n\nC. `PLT_ROUTABLE` 是 PSPACE-完备的，因为 $k$ 的值相对于其二进制表示的大小可以是指数级的。\n\nD. `PLT_ROUTABLE` 是 NP-完备的。\n\nE. `PLT_ROUTABLE` 可以在相对于 $|V|$ 和 $|E|$ 的多项式时间内解决，但时间复杂度相对于表示 $k$ 的比特数是指数级的。", "solution": "我们将 PLT_ROUTABLE 形式化如下：给定一个有向图 $G=(V,E)$，源点 $s\\in V$，目标点 $t\\in V$，以及一个以二进制形式给出的整数 $k\\ge 0$，判断是否存在一条从 $s$ 到 $t$ 的长度至多为 $k$ 的途径，其中长度为所使用的边的数量。\n\n关键的结构性观察。在任何有向图中，如果 $t$ 可以通过任何途径（可能包含重复的顶点）从 $s$ 到达，那么必定存在一条从 $s$ 到 $t$ 的长度至多为 $|V|-1$ 的简单路径。因此，这个有界长度约束总可以收紧为 $k$ 和平凡上界 $|V|-1$ 中的较小值。形式上，\n$$\n\\exists\\ \\text{一条长度} \\le k \\text{ 的 } s\\text{-}t \\text{ 路径}\n\\iff\n\\exists\\ \\text{一条长度} \\le \\min\\{k,|V|-1\\} \\text{ 的 } s\\text{-}t \\text{ 路径}。\n$$\n这个等价关系直接说明，极大的 $k$ 值（即使是相对于其二进制输入大小呈指数级的大）并不会增加问题的本质难度：任何 $k\\ge |V|-1$ 的情况都会将 PLT_ROUTABLE 问题归约到普通的可达性问题。\n\nNL 成员性。我们通过给出一个非确定性对数空间算法来证明 PLT_ROUTABLE $\\in \\text{NL}$。对于输入 $(G,s,t,k)$：\n1. 非确定性地猜测一个从 $s$ 出发的、至多包含 $|V|-1$ 条边的序列。使用 $O(\\log |V|)$ 比特来维护当前顶点。\n2. 维护一个步数计数器 $\\ell$，从 $0$ 开始，每选择一条边就加 $1$，上限为 $|V|-1$。这个计数器使用 $O(\\log |V|)$ 比特。\n3. 如果在某个步骤 $\\ell$ 时当前顶点为 $t$，则检查是否 $\\ell\\le k$，当且仅当该条件成立时接受。\n\n比较 $\\ell\\le k$ 可以在 $O(\\log |V|)$ 的额外空间内完成，方法是从只读输入中流式读取 $k$ 的二进制编码，并将其与 $O(\\log |V|)$ 比特的整数 $\\ell$ 进行比较。总的工作带使用量为 $O(\\log |V|)$，也就是 $O(\\log N)$（其中 $N$ 是输入长度），因为 $\\log |V|\\le \\log N$。因此 PLT_ROUTABLE 属于 NL。\n\nNL-困难性。我们通过一个对数空间的多一归约，将标准的 s-t 可达性问题（STCON）（该问题是 NL-完备的）归约到 PLT_ROUTABLE。给定 $(G,s,t)$，输出 $(G,s,t,k')$，其中\n$$\nk' = |V|-1\n$$\n以二进制编码。这个归约是对数空间可计算的，因为我们可以通过扫描顶点列表，用一个 $O(\\log |V|)$ 比特的计数器来计算 $|V|$，然后使用 $O(\\log |V|)$ 的工作空间将 $k'$ 写成二进制形式。正确性成立，因为\n$$\n(G,s,t)\\in \\text{STCON}\n\\iff\n\\exists\\ \\text{一条长度} \\le |V|-1 \\text{ 的 } s\\text{-}t \\text{ 路径}\n\\iff\n(G,s,t,k')\\in \\text{PLT\\_ROUTABLE}。\n$$\n因此 PLT_ROUTABLE 是 NL-困难的。\n\n结合 NL 成员性和 NL-困难性，PLT_ROUTABLE 是 NL-完备的。\n\n对各选项的推论：\n- 选项 A 是错误的，因为已知 PLT_ROUTABLE 属于 NL（实际上是 NL-完备的）。\n- 选项 B 是正确的，根据上述论证。\n- 选项 C 是错误的，因为由于可以归约到 $\\min\\{k,|V|-1\\}$，所以 $k$ 是否是指数级大并不重要。\n- 选项 D 是错误的；NL-完备问题属于 P，并且不是 NP-完备的，除非 $\\text{NL}=\\text{NP}$ 且伴有其他不太可能发生的复杂性类坍缩。\n- 选项 E 是错误的；一个限制深度为 $\\min\\{k,|V|-1\\}$ 的广度优先搜索算法，其运行时间是关于 $|V|+|E|$ 的多项式时间，与在将 $k$ 上限设为 $|V|-1$ 后，其对比特长度的指数依赖性无关。\n\n因此，最准确的分类是 NL-完备的。", "answer": "$$\\boxed{B}$$", "id": "1460957"}]}