{"hands_on_practices": [{"introduction": "理论概念如“功能完备性”在实际电路设计中具有深远影响。例如，仅使用与非门（NAND）就可以构建任何布尔函数。本练习将挑战你仅用一种逻辑门——与非门，来构建一个基本但至关重要的元件：2-to-1多路选择器（MUX）。这个过程不仅能让你深入理解逻辑等价变换，还能让你实践资源优化（最小化门电路数量）这一数字设计师的基本技能 [@problem_id:1413448]。", "problem": "在数字逻辑设计和计算理论中，如果任何任意的布尔函数都可以仅用某个集合中的逻辑门来表示，那么这个逻辑门集合就被称为“功能完备的”。双输入NAND门，其定义为 $x \\text{ NAND } y = \\neg(x \\land y)$，就构成了一个这样的功能完备集。\n\n考虑一个在数字电路中的基本组件——二选一多路复用器 (MUX)。MUX 从多个模拟或数字输入信号中选择一个，并将选定的输入信号转发到一条输出线上。一个二选一MUX有两个数据输入 $a$ 和 $b$，一个选择输入 $s$，以及一个输出 $f$。其逻辑行为由以下布尔函数定义：\n$$f(s, a, b) = (\\neg s \\land a) \\lor (s \\land b)$$\n这意味着如果 $s=0$，输出为 $a$；如果 $s=1$，输出为 $b$。\n\n你的任务是确定实现这个二选一MUX函数 $f(s, a, b)$ 所需的双输入NAND门的最少数量。\n\n以下哪个选项代表了所需的最少门数量？\nA. 3\n\nB. 4\n\nC. 5\n\nD. 6\n\nE. 7", "solution": "我们想要仅使用双输入NAND门来实现二选一MUX函数\n$$\nf(s,a,b)=(\\neg s \\land a)\\lor(s\\land b)\n$$\n，其中 $\\operatorname{NAND}(x,y)=\\neg(x\\land y)$。\n\n使用四个NAND门的合成方法（证明四个门是足够的）：\n1) 使用自NAND恒等式生成选择输入的反相：\n$$\n\\neg s=\\operatorname{NAND}(s,s)=\\neg(s\\land s).\n$$\n2) 以与非（NAND）形式构成两个乘积项：\n$$\nx=\\operatorname{NAND}(a,\\neg s)=\\neg(a\\land\\neg s),\\qquad y=\\operatorname{NAND}(b,s)=\\neg(b\\land s).\n$$\n3) 用最后一个NAND门将它们组合起来：\n$$\nf=\\operatorname{NAND}(x,y)=\\neg(x\\land y)=\\neg\\big(\\neg(a\\land\\neg s)\\land\\neg(b\\land s)\\big).\n$$\n使用De Morgan定律 $\\neg(\\neg P\\land\\neg Q)=P\\lor Q$，上式变为\n$$\nf=(a\\land\\neg s)\\lor(b\\land s),\n$$\n这正是所期望的MUX函数。该构造使用了四个NAND门：一个用于$\\neg s$，一个用于$x$，一个用于$y$，以及最后一个用于$f$的门。\n\n最小性证明（为什么三个NAND门是不够的）：\n使用反证法，假设 $f$ 可以仅用三个双输入NAND门实现。那么，输出必定是另外两个门的输出的NAND结果：\n$$\nf=\\operatorname{NAND}(X,Y)=\\neg(X\\land Y).\n$$\n因为 $f$ 同时依赖于 $a$ 和 $b$，不失一般性地，两个前级门必须一个包含 $a$ 而另一个包含 $b$。因此，存在信号 $u$ 和 $v$（它们是 $s,a,b$ 的函数），使得\n$$\nX=\\operatorname{NAND}(a,u)=\\neg(a\\land u),\\qquad Y=\\operatorname{NAND}(b,v)=\\neg(b\\land v).\n$$\n因此，\n$$\nf=\\neg\\big(\\neg(a\\land u)\\land\\neg(b\\land v)\\big)=(a\\land u)\\lor(b\\land v).\n$$\n现在，强制该表达式对于所有输入都与MUX函数相等：\n- 令 $a=1$ 且 $b=0$。MUX函数给出 $f=\\neg s$。上述表达式简化为 $f=u$。因此 $u=\\neg s$。\n- 令 $a=0$ 且 $b=1$。MUX函数给出 $f=s$。该表达式简化为 $f=v$。因此 $v=s$。\n因此，两个前级门必须有效地计算 $\\operatorname{NAND}(a,\\neg s)$ 和 $\\operatorname{NAND}(b,s)$，这要求 $s$ 和 $\\neg s$ 都必须是可用的。由于只有 $s$ 是一个原始输入，生成 $\\neg s$ 至少需要一个NAND门（具体为 $\\operatorname{NAND}(s,s)$）。在总共只有三个门的情况下，一个门是最终的NAND门，一个门必须用于对 $s$ 反相，这样就只剩下一个门来同时产生 $\\operatorname{NAND}(a,\\neg s)$ 和 $\\operatorname{NAND}(b,s)$，这对于双输入NAND门来说是不可能的。这个矛盾表明三个NAND门是不够的。\n\n因此，所需的双输入NAND门的最少数量是四个，对应选项B。", "answer": "$$\\boxed{B}$$", "id": "1413448"}, {"introduction": "掌握了单个逻辑门的组合后，下一步便是为更复杂的任务（如算术运算）构建电路。本次实践要求你设计一个计算2位二进制数平方的电路。你需要将一个算术规范转化为一组布尔函数，并对它们进行简化，从而亲身体验多输出组合逻辑电路的系统化设计过程 [@problem_id:1413466]。", "problem": "考虑一个数字电路，其设计用于计算一个2位非负整数的平方。输入是一个2位二进制数，由比特 $x_1x_0$ 表示，其对应的整数值为 $V = 2x_1 + x_0$。该电路的输出是一个4位二进制数，由比特 $y_3y_2y_1y_0$ 表示，其对应的整数值为 $V^2 = 8y_3 + 4y_2 + 2y_1 + y_0$。\n\n每个输出比特 $y_i$ 都可以表示为输入比特 $x_1$ 和 $x_0$ 的布尔函数。您的任务是为这四个函数中的每一个找到其最小表示。具体来说，您必须确定每个函数 $y_3, y_2, y_1,$ 和 $y_0$ 的最小析取范式 (DNF)。最小DNF被定义为包含最少可能文字总数的DNF表达式。一个文字是一个变量或其否定形式（例如，$x_1$ 和 $\\neg x_0$ 都是文字）。\n\n计算所有四个输出函数的最小DNF表示中文字的总数。", "solution": "设输入比特为 $x_{1},x_{0}\\in\\{0,1\\}$，其值为 $V=2x_{1}+x_{0}$。输出比特 $y_{3}y_{2}y_{1}y_{0}$ 编码了 $V^{2}$，其中 $V^{2}=8y_{3}+4y_{2}+2y_{1}+y_{0}$。计算所有四种输入组合的 $V^{2}$ 值：\n- 对于 $(x_{1},x_{0})=(0,0)$，$V=0$ 因此 $V^{2}=0\\Rightarrow y_{3}y_{2}y_{1}y_{0}=0000$。\n- 对于 $(x_{1},x_{0})=(0,1)$，$V=1$ 因此 $V^{2}=1\\Rightarrow y_{3}y_{2}y_{1}y_{0}=0001$。\n- 对于 $(x_{1},x_{0})=(1,0)$，$V=2$ 因此 $V^{2}=4\\Rightarrow y_{3}y_{2}y_{1}y_{0}=0100$。\n- 对于 $(x_{1},x_{0})=(1,1)$，$V=3$ 因此 $V^{2}=9\\Rightarrow y_{3}y_{2}y_{1}y_{0}=1001$。\n\n将每个输出比特作为 $x_{1},x_{0}$ 的布尔函数读出，并最小化为DNF（文字合取的析取）：\n1. 对于 $y_{0}$：其值对于输入 $(00,01,10,11)$ 分别是 $0,1,0,1$。这等于 $V$ 的奇偶性，也即 $x_{0}$。其最小DNF为\n$$\ny_{0}=x_{0},\n$$\n它有 $1$ 个文字。\n\n2. 对于 $y_{1}$：其值恒为 $0$。其最小DNF为常数\n$$\ny_{1}=0,\n$$\n它使用 $0$ 个文字。\n\n3. 对于 $y_{2}$：它仅在 $(x_{1},x_{0})=(1,0)$ 时为 $1$。唯一的质蕴涵项是最小项\n$$\ny_{2}=x_{1}\\land\\neg x_{0},\n$$\n它有 $2$ 个文字，并且无法进一步简化，因为它覆盖了一个单一孤立的 $1$。\n\n4. 对于 $y_{3}$：它仅在 $(x_{1},x_{0})=(1,1)$ 时为 $1$。唯一的质蕴涵项是最小项\n$$\ny_{3}=x_{1}\\land x_{0},\n$$\n它有 $2$ 个文字，并且已经是最小的。\n\n将各最小DNF中的文字数量相加：$1+0+2+2=5$。", "answer": "$$\\boxed{5}$$", "id": "1413466"}, {"introduction": "构建一个能工作的电路是一回事，而构建一个高效的电路则是另一回事。本练习将通过比较两种不同的设计方案，来揭示为 $n$ 位输入构建奇偶校验函数（Parity Function）时，电路架构的选择如何极大地影响其规模。通过分析一个巧妙的树形结构设计与一个朴素的范式实现，你将具体理解为何电路复杂性是关键考量，以及优秀的设计如何能带来指数级的资源节省 [@problem_id:1413469]。", "problem": "在计算复杂性理论的研究中，布尔电路为数字逻辑提供了一种形式化模型。考虑设计用于计算$n$位奇偶校验函数 $\\text{PARITY}_n(x_1, \\dots, x_n)$ 的电路。如果输入串中 1 的数量为奇数，该函数输出 1，否则输出 0。\n\n所有电路都将使用一个由双输入与门和双输入或门构成的基来构建。电路的规模定义为这些门的总数。在电路构建中，您可以假设对于每个输入变量 $x_i$，其非 $\\neg x_i$ 也可以作为输入，且无额外成本（即，用于输入的非门不计入电路规模）。\n\n我们将比较奇偶校验函数的两种不同实现的规模。设 $S_{\\text{XOR}}(n)$ 为第一种实现的规模，$S_{\\text{DNF}}(n)$ 为第二种实现的规模。\n\n1.  **异或树实现 (XOR Tree Implementation)：** 奇偶校验函数等价于其输入的链式异或（XOR）：$x_1 \\oplus x_2 \\oplus \\dots \\oplus x_n$。该结构可以通过一个由 $n-1$ 个双输入异或门构成的平衡二叉树来实现。每个双输入异或门 $a \\oplus b$ 可利用恒等式 $a \\oplus b \\equiv (a \\land \\neg b) \\lor (\\neg a \\land b)$ 从标准基构建。\n\n2.  **主析取范式（DNF）实现 (Canonical DNF Implementation)：** 该函数通过首先将其表示为主析取范式（DNF）来实现。主析取范式是所有使函数值为 1 的极小项的逻辑或。一个极小项是所有 $n$ 个输入文字的逻辑与（例如，对于 $n>2$，$x_1 \\land \\neg x_2 \\land \\dots \\land x_n$）。然后使用与门和或门构成的树形结构来构建电路，以实现此 DNF 表达式。\n\n确定电路规模的比值 $\\frac{S_{\\text{DNF}}(n)}{S_{\\text{XOR}}(n)}$，其中 $n \\ge 2$。请用一个关于 $n$ 的闭式解析表达式来表示您的答案。", "solution": "问题要求计算 $n$ 位奇偶校验函数两种不同实现的电路规模之比，$S_{\\text{DNF}}(n) / S_{\\text{XOR}}(n)$。我们需要分别计算每种电路的规模。电路规模是双输入与门和双输入或门的总数。我们假设输入变量 $x_i$ 及其非 $\\neg x_i$ 是无成本可用的。\n\n**第1步：计算异或树实现的规模 $S_{\\text{XOR}}(n)$**\n\n第一种实现使用一个由 $n-1$ 个双输入异或门构成的平衡二叉树来计算 $x_1 \\oplus x_2 \\oplus \\dots \\oplus x_n$。我们需要计算由我们的基门构建单个双输入异或门 $a \\oplus b$ 所需的规模。\n\n问题给出了恒等式：$a \\oplus b \\equiv (a \\land \\neg b) \\lor (\\neg a \\land b)$。\n要实现这个表达式，我们需要：\n- 一个与门用于项 $(a \\land \\neg b)$。\n- 一个与门用于项 $(\\neg a \\land b)$。\n- 一个或门用于合并这两项：$(a \\land \\neg b) \\lor (\\neg a \\land b)$。\n\n输入 $a$、$\\neg a$、$b$ 和 $\\neg b$ 是无成本可用的。因此，一个双输入异或门需要 2 个与门和 1 个或门，总共 3 个门。\n\n整个电路由 $n-1$ 个这样的异或门组成。因此，异或树实现的总规模是：\n$$S_{\\text{XOR}}(n) = (n-1) \\times (\\text{size of one XOR gate}) = 3(n-1)$$\n\n**第2步：计算主析取范式（DNF）实现的规模 $S_{\\text{DNF}}(n)$**\n\nDNF 实现是基于奇偶校验函数的主析取范式构建的。该范式由所有使函数值为 1 的输入所对应的极小项的或运算组成。\n\n首先，我们必须确定这类极小项的数量。当且仅当输入串 $(x_1, \\dots, x_n)$ 中 1 的数量为奇数时，奇偶校验函数的值为 1。含有 $k$ 个 1 的 $n$ 位串的数量由二项式系数 $\\binom{n}{k}$ 给出。极小项的总数 $N_{\\text{minterms}}$ 是这些计数在所有奇数 $k$ 上的总和：\n$$N_{\\text{minterms}} = \\binom{n}{1} + \\binom{n}{3} + \\binom{n}{5} + \\dots$$\n\n为了计算这个和，我们使用 $(1+x)^n$ 的二项式展开：\n$$(1+x)^n = \\sum_{k=0}^{n} \\binom{n}{k} x^k = \\binom{n}{0} + \\binom{n}{1}x + \\binom{n}{2}x^2 + \\dots$$\n令 $x=1$ 得：$2^n = \\binom{n}{0} + \\binom{n}{1} + \\binom{n}{2} + \\dots$\n令 $x=-1$ 得：$0^n = \\binom{n}{0} - \\binom{n}{1} + \\binom{n}{2} - \\dots$ (对于 $n \\ge 1$)\n\n用第一个方程减去第二个方程：\n$$2^n - 0 = \\left(\\binom{n}{0} + \\binom{n}{1} + \\dots\\right) - \\left(\\binom{n}{0} - \\binom{n}{1} + \\dots\\right)$$\n$$2^n = 2\\binom{n}{1} + 2\\binom{n}{3} + 2\\binom{n}{5} + \\dots = 2 \\times N_{\\text{minterms}}$$\n因此，极小项的数量是 $N_{\\text{minterms}} = 2^{n-1}$。\n\n现在我们计算实现这个 DNF 所需的门数。该 DNF 是 $2^{n-1}$ 个极小项的或运算。每个极小项是 $n$ 个文字的与运算。\n- **用于极小项的与门：** 每个极小项是 $n$ 个文字的合取。要使用双输入与门计算一个 $n$ 输入的与运算，我们需要一个由 $n-1$ 个门构成的二叉树。由于有 $N_{\\text{minterms}} = 2^{n-1}$ 个这样的极小项，与门的总数是：\n$$(\\text{gates per minterm}) \\times (\\text{number of minterms}) = (n-1) \\times 2^{n-1}$$\n- **用于最终析取的或门：** DNF 是 $N_{\\text{minterms}} = 2^{n-1}$ 个项（即与门子电路的输出）的析取。要使用双输入或门计算 $2^{n-1}$ 个输入的或运算，我们需要一个由 $2^{n-1}-1$ 个门构成的二叉树。\n\nDNF 电路的总规模是与门和或门数量之和：\n$$S_{\\text{DNF}}(n) = (n-1)2^{n-1} + (2^{n-1}-1)$$\n我们可以简化这个表达式：\n$$S_{\\text{DNF}}(n) = n \\cdot 2^{n-1} - 2^{n-1} + 2^{n-1} - 1 = n \\cdot 2^{n-1} - 1$$\n\n**第3步：计算比值**\n\n最后，我们计算比值 $\\frac{S_{\\text{DNF}}(n)}{S_{\\text{XOR}}(n)}$。\n$$ \\frac{S_{\\text{DNF}}(n)}{S_{\\text{XOR}}(n)} = \\frac{n \\cdot 2^{n-1} - 1}{3(n-1)} $$\n该表达式对于 $n \\ge 2$ 成立。", "answer": "$$\\boxed{\\frac{n \\cdot 2^{n-1} - 1}{3(n-1)}}$$", "id": "1413469"}]}