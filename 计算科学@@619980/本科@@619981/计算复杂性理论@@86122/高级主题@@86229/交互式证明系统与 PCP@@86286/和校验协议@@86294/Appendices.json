{"hands_on_practices": [{"introduction": "总和校验协议的核心思想是将一个复杂的多变量求和问题，转化为一系列对单变量多项式的简单校验。本练习将带你完成协议中的第一步，也是最基础的一步：构造证明者（Prover）需要发送的第一个多项式 $p_1(X_1)$。通过这个实践，你将掌握将多变量求和“降维”到单变量多项式的关键技巧。[@problem_id:1463894]", "problem": "考虑和校验协议，这是一种交互式证明系统，用于验证一个多变量多项式在布尔超立方体上求和的声称值。证明者 Peggy 希望让验证者 Victor 相信以下求和的值：\n$$ S = \\sum_{x_1 \\in \\{0, 1\\}} \\sum_{x_2 \\in \\{0, 1\\}} g(x_1, x_2) $$\n其中多项式定义为 $g(x_1, x_2) = x_1 x_2 + x_1$。变量 $x_1$ 和 $x_2$ 定义在一个特征不为 2 的域 $\\mathbb{F}$ 上。\n\n在协议的第一轮中，证明者必须计算并发送一个关于新变量 $X_1$ 的单变量多项式，我们称之为 $p_1(X_1)$。该多项式的构造方法是：在 $g(x_1, x_2)$ 中，用不定元 $X_1$ 替换第一个变量 $x_1$，然后对剩余变量 $x_2$ 的所有可能的布尔赋值进行求和。\n\n请确定一个诚实的证明者在第一轮中必须发送给验证者的多项式 $p_1(X_1)$。请将你的答案表示为关于变量 $X_1$ 的多项式。", "solution": "在和校验协议中，第一轮的多项式是通过用不定元 $X_{1}$ 替换 $x_{1}$ 并对剩余变量的所有布尔值求和来定义的。因此，\n$$\np_{1}(X_{1})=\\sum_{x_{2}\\in\\{0,1\\}} g(X_{1},x_{2}).\n$$\n给定 $g(x_{1},x_{2})=x_{1}x_{2}+x_{1}$，我们计算\n$$\np_{1}(X_{1})=\\sum_{x_{2}\\in\\{0,1\\}} \\left(X_{1}x_{2}+X_{1}\\right).\n$$\n利用域 $\\mathbb{F}$ 上的求和线性性质和分配律，\n$$\np_{1}(X_{1})=X_{1}\\sum_{x_{2}\\in\\{0,1\\}} x_{2}+X_{1}\\sum_{x_{2}\\in\\{0,1\\}} 1.\n$$\n计算在布尔集上的和，\n$$\n\\sum_{x_{2}\\in\\{0,1\\}} x_{2}=0+1=1,\\qquad \\sum_{x_{2}\\in\\{0,1\\}} 1=1+1=2.\n$$\n因此，\n$$\np_{1}(X_{1})=X_{1}\\cdot 1+X_{1}\\cdot 2=3X_{1},\n$$\n其中系数 $3$ 表示域中的 $1_{\\mathbb{F}}+1_{\\mathbb{F}}+1_{\\mathbb{F}}$（特征不为 $2$ 的假设确保了 $2\\neq 0$）。", "answer": "$$\\boxed{3X_{1}}$$", "id": "1463894"}, {"introduction": "一个交互式证明协议的价值在于其能够有效揭露作弊行为。这个练习将让你站在验证者（Verifier）的角度，审视一个可疑的证明，并揭示其薄弱环节。你将看到，一个随机的挑战值 $r_1$ 如何成为戳穿谎言的利器，并体会到总和校验协议在“可靠性”（soundness）上的精妙设计。[@problem_id:1463865]", "problem": "在和校验协议的背景下，证明者 (P) 旨在让验证者 (V) 相信其所声称的在一个布尔超立方体上的总和。所有算术运算都在有限域 $\\mathbb{F}_{29}$ 中进行。\n\n证明者考虑一个二元多项式 $g(x_1, x_2) = x_1 x_2 + 2x_1 + 3x_2$。证明者声称该多项式在布尔超立方体 $\\{0, 1\\}^2$ 上的总和等于 $C=10$。也就是说，P 声称 $\\sum_{x_1 \\in \\{0, 1\\}} \\sum_{x_2 \\in \\{0, 1\\}} g(x_1, x_2) = 10$。\n\n为开始此交互式协议，证明者向验证者发送一个关于第一个变量 $X_1$ 的多项式。然而，该证明者是不诚实的，它没有发送正确的多项式，而是发送了欺骗性多项式 $p_1(X_1) = 5$。\n\n验证者首先使用接收到的多项式 $p_1(X_1)$ 对声称的总和 $C$ 进行基本的一致性检查。由于此初始检查通过，验证者继续选择一个随机值 $r_1 \\in \\mathbb{F}_{29}$ 发送给证明者，以进行协议的下一轮。\n\n存在一个唯一的 $r_1$ 值，使得验证者在此阶段无法检测到证明者的欺骗，因为对于这个特定的 $r_1$，证明者的欺骗性声明 $p_1(r_1)$ 偶然地与对应子求和的真实值相匹配。请确定在 $\\mathbb{F}_{29}$ 中这个特定的 $r_1$ 值。", "solution": "我们在有限域 $\\mathbb{F}_{29}$ 上进行计算。诚实证明者在第一轮应发送的多项式是子求和\n$$\ns_{1}(X_{1})=\\sum_{x_{2}\\in\\{0,1\\}} g(X_{1},x_{2}) .\n$$\n给定 $g(x_{1},x_{2})=x_{1}x_{2}+2x_{1}+3x_{2}$，计算\n$$\ng(X_{1},0)=X_{1}\\cdot 0+2X_{1}+3\\cdot 0=2X_{1},\\qquad g(X_{1},1)=X_{1}\\cdot 1+2X_{1}+3\\cdot 1=3X_{1}+3,\n$$\n所以\n$$\ns_{1}(X_{1})=g(X_{1},0)+g(X_{1},1)=2X_{1}+(3X_{1}+3)=5X_{1}+3 \\quad \\text{in } \\mathbb{F}_{29}.\n$$\n欺骗的证明者发送了 $p_{1}(X_{1})=5$。验证者在此阶段无法检测到欺骗的唯一 $r_{1}\\in\\mathbb{F}_{29}$ 值由以下关系式刻画：\n$$\np_{1}(r_{1})=s_{1}(r_{1}) \\quad \\Longleftrightarrow \\quad 5=5r_{1}+3 \\pmod{29}.\n$$\n整理得，\n$$\n5r_{1}\\equiv 2 \\pmod{29}.\n$$\n由于 $\\gcd(5,29)=1$，所以 $5$ 存在模 $29$ 的乘法逆元。使用扩展欧几里得算法，\n$$\n29=5\\cdot 5+4,\\quad 5=4\\cdot 1+1 \\;\\Rightarrow\\; 1=5-4=5-(29-5\\cdot 5)=6\\cdot 5-29,\n$$\n因此 $5^{-1}\\equiv 6 \\pmod{29}$。将等式两边同乘以 $6$ 得到\n$$\nr_{1}\\equiv 6\\cdot 2\\equiv 12 \\pmod{29}.\n$$\n作为检验，\n$$\ns_{1}(12)\\equiv 5\\cdot 12+3\\equiv 60+3\\equiv 63\\equiv 5 \\pmod{29}=p_{1}(12),\n$$\n所以 $r_{1}=12$ 确实使得欺骗性子求和与诚实子求和的值一致，并且根据线性性，在 $\\mathbb{F}_{29}$ 中只存在一个这样的 $r_1$。", "answer": "$$\\boxed{12}$$", "id": "1463865"}, {"introduction": "如果证明者从一开始就提出了一个错误的总和声明，协议将如何应对？本练习将展示总和校验协议的鲁棒性。你将完整地追踪一个错误的声明是如何在协议的逐步传导下，最终在最后一步产生一个无可辩驳的矛盾，从而证明协议的正确性保证。[@problem_id:1463887]", "problem": "考虑和校验协议（sum-check protocol），这是一个用于验证多元多项式在有限布尔超立方体上求和的交互式证明系统。一个验证者想要在有限域 $\\mathbb{F}_{13}$（模13的整数）上验证以下求和声明：\n$$ \\sum_{x_1 \\in \\{0,1\\}} \\sum_{x_2 \\in \\{0,1\\}} g(x_1, x_2) = C' $$\n其中多项式为 $g(x_1, x_2) = x_1 x_2 + 2x_1 + 3x_2$，声明的和为 $C' = 10$。\n\n该协议分轮进行。在第 $i$ 轮，证明者提供一个单变量多项式 $S_i(z_i)$，验证者执行检查，然后选取一个随机挑战 $r_i$。对于本问题，假设证明者采用一种特定策略，且验证者是确定性的。\n\n证明者的策略如下：在每一轮 $i$ 中，当被要求提供一个满足一致性检查 $S_i(0) + S_i(1) = C_{i-1}$（其中 $C_0 = C'$）的多项式 $S_i(z_i)$ 时，证明者会首先计算对应于 $S_i(0)$ 的部分和的真实值。然后，它将确定为满足一致性检查所需的 $S_i(1)$ 的值，即使这个值是错误的。随后，证明者发送通过这两个点插值得到的唯一的、次数最低的多项式 $S_i(z_i)$。\n\n验证者在每轮检查后，使用一个预先确定的挑战序列。对于这个二元多项式，第一轮的挑战是 $r_1 = 5$，第二轮的挑战是 $r_2 = 7$。\n\n验证者按顺序执行以下检查。如果任何检查失败，验证者立即拒绝。\n1.  **第 1 轮检查：**\n    a. 验证接收到的多项式 $S_1(z_1)$ 的次数至多为 $g$ 关于 $x_1$ 的单项次数。\n    b. 验证 $S_1(0) + S_1(1) = C'$。\n2.  **第 2 轮检查：**\n    a. 验证接收到的多项式 $S_2(z_2)$ 的次数至多为 $g$ 关于 $x_2$ 的单项次数。\n    b. 验证 $S_2(0) + S_2(1) = C_1$，其中 $C_1 = S_1(r_1)$。\n3.  **最终检查：**\n    a. 验证 $g(r_1, r_2) = C_2$，其中 $C_2 = S_2(r_2)$。\n\n以下哪项是第一个失败的检查？\n\nA. 对 $S_1(z_1)$ 的次数检查。\n\nB. 一致性检查 $S_1(0) + S_1(1) = C'$。\n\nC. 一致性检查 $S_2(0) + S_2(1) = C_1$。\n\nD. 最终求值检查 $g(r_1, r_2) = C_2$。", "solution": "在域 $\\mathbb{F}_{13}$ 上进行计算。多项式为 $g(x_{1}, x_{2}) = x_{1} x_{2} + 2 x_{1} + 3 x_{2}$，其关于各变量的次数分别为 $\\deg_{x_{1}} g = 1$ 和 $\\deg_{x_{2}} g = 1$。声明的总和为 $C' = 10$。\n\n第 1 轮：根据证明者的策略，计算在 $z_{1} = 0$ 处的真实部分和：\n$$\nS_{1}(0) = \\sum_{x_{2} \\in \\{0,1\\}} g(0, x_{2}) = g(0,0) + g(0,1) = 0 + 3 = 3 \\mod 13.\n$$\n为满足 $S_{1}(0) + S_{1}(1) = C'$，设置\n$$\nS_{1}(1) = C' - S_{1}(0) = 10 - 3 = 7 \\mod 13.\n$$\n通过点 $(0,3)$ 和 $(1,7)$ 插值得到唯一的最低次多项式：\n$$\nS_{1}(z_{1}) = 4 z_{1} + 3.\n$$\n第 1 轮检查：\n- 次数检查：$\\deg S_{1} = 1 \\leq \\deg_{x_{1}} g = 1$；通过。\n- 一致性检查：$S_{1}(0) + S_{1}(1) = 3 + 7 = 10 = C'$；通过。\n设 $r_{1} = 5$，则\n$$\nC_{1} = S_{1}(r_{1}) = 4 \\cdot 5 + 3 = 20 + 3 = 23 \\equiv 10 \\mod 13.\n$$\n\n第 2 轮：当 $r_{1} = 5$ 时，证明者计算在 $z_{2} = 0$ 处的真实值：\n$$\nS_{2}(0) = g(5, 0) = 5 \\cdot 0 + 2 \\cdot 5 + 3 \\cdot 0 = 10 \\mod 13.\n$$\n为满足 $S_{2}(0) + S_{2}(1) = C_{1}$，设置\n$$\nS_{2}(1) = C_{1} - S_{2}(0) = 10 - 10 = 0 \\mod 13.\n$$\n通过点 $(0,10)$ 和 $(1,0)$ 插值得到：\n$$\nS_{2}(z_{2}) = 3 z_{2} + 10.\n$$\n第 2 轮检查：\n- 次数检查：$\\deg S_{2} = 1 \\leq \\deg_{x_{2}} g = 1$；通过。\n- 一致性检查：$S_{2}(0) + S_{2}(1) = 10 + 0 = 10 = C_{1}$；通过。\n设 $r_{2} = 7$，则\n$$\nC_{2} = S_{2}(r_{2}) = 3 \\cdot 7 + 10 = 21 + 10 = 31 \\equiv 5 \\mod 13.\n$$\n\n最终检查：\n$$\ng(r_{1}, r_{2}) = g(5,7) = 5 \\cdot 7 + 2 \\cdot 5 + 3 \\cdot 7 = 35 + 10 + 21 = 66 \\equiv 1 \\mod 13,\n$$\n而 $C_{2} = 5$。因此 $g(r_{1}, r_{2}) \\neq C_{2}$，所以第一个失败的检查是最终的求值检查。", "answer": "$$\\boxed{D}$$", "id": "1463887"}]}