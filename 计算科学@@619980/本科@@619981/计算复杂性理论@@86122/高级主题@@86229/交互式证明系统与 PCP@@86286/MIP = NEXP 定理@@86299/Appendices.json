{"hands_on_practices": [{"introduction": "多证明者交互式证明系统（MIP）的核心思想是利用多个互不通信的证明者来增强验证能力。通过向不同的证明者提出关于同一问题不同部分的问题，验证者可以检测出他们回答中的不一致性，从而揭露谎言。这个练习将通过一个关于3-SAT问题的简单场景，让你亲身体会验证者如何设计巧妙的质询来识破一个有缺陷的解 [@problem_id:1458993]。", "problem": "在计算复杂性理论领域，MIP = NEXP 定理在多证明者交互式证明 (MIP) 系统与复杂性类 NEXP (非确定性指数时间) 之间建立了一个非凡的联系。证明 NP 包含于 MIP 的一个关键要素是，验证者通过询问两个不通信的证明者，来检查一个声称的 3-SAT 公式 $\\phi$ 的满足赋值。\n\n考虑一个验证者 $V$ 与两个证明者 $P_1$ 和 $P_2$ 进行交互。证明者声称拥有一个大型 3-CNF 公式 $\\phi$ 的满足赋值。验证者的协议包括从 $\\phi$ 中随机选择一个子句，并执行测试以检查其正确性和一致性。\n\n假设验证者决定测试特定的子句 $C = (\\neg x_1 \\lor x_2 \\lor \\neg x_3)$。此外，假设证明者们共享（但保密）的赋值（我们称之为 $A$）实际上是错误的，并且证伪了这个特定的子句。具体来说，对于 $C$ 中的变量，该赋值为 $A(x_1) = 1$，$A(x_2) = 0$，以及 $A(x_3) = 1$。\n\n验证者必须设计其分别发送给 $(P_1, P_2)$ 的一对查询 $(Q_1, Q_2)$，以揭露这一矛盾。假设证明者坚守他们的赋值 $A$，并将根据 $A$ 如实地回答任何关于变量值的查询。\n\n以下哪个查询对 $(Q_1, Q_2)$ 能让验证者确定性地得出结论，即提供给子句 $C$ 的赋值是不满足的？\n\nA. $Q_1$：“报告 $x_1$ 的值。” $Q_2$：“报告 $x_2$ 和 $x_3$ 的值。”\n\nB. $Q_1$：“报告 $x_1$ 的值。” $Q_2$：“报告 $x_2$ 的值。”\n\nC. $Q_1$：“报告 $x_1$ 的值。” $Q_2$：“报告 $x_1$ 的值。”\n\nD. $Q_1$：“你们的赋值是否满足子句 $C$？” $Q_2$：“你们的赋值是否满足子句 $C$？”", "solution": "我们形式化地表示该子句和赋值。子句是 $C = (\\neg x_{1} \\lor x_{2} \\lor \\neg x_{3})$。证明者给出的赋值是 $A(x_{1}) = 1$，$A(x_{2}) = 0$，$A(x_{3}) = 1$。在赋值 $A$ 下对文字进行求值，得到 $\\neg x_{1} = 0$，$x_{2} = 0$ 和 $\\neg x_{3} = 0$。因此，\n$$\nC(A) \\;=\\; 0 \\lor 0 \\lor 0 \\;=\\; 0,\n$$\n所以 $C$ 被 $A$ 证伪。\n\n一个 3-CNF 子句不被满足，当且仅当它的所有三个文字都为假。因此，为了确定性地得出 $C$ 不被满足的结论，验证者必须获得经过验证的值，以确定 $x_{1} = 1$，$x_{2} = 0$ 和 $x_{3} = 1$（等价地，$\\neg x_{1} = 0$，$x_{2} = 0$ 和 $\\neg x_{3} = 0$）。问题陈述，证明者将根据 $A$ 如实地回答任何关于变量值的查询，所以验证者只能依赖于关于变量值的回答。\n\n现在我们根据这一要求分析每个选项：\n\n选项 A：$Q_{1}$ 询问 $x_1$ 的值，$Q_{2}$ 询问 $x_2$ 和 $x_3$ 的值。通过这些回答，验证者可以获得所有三个值 $x_{1}, x_{2}, x_{3}$，并可以计算三个文字 $\\neg x_{1}, x_{2}, \\neg x_{3}$。由于验证者得知所有三个文字都为 $0$，它可以确定性地得出结论 $C(A) = 0$。\n\n选项 B：$Q_{1}$ 询问 $x_1$ 的值，$Q_{2}$ 询问 $x_2$ 的值。验证者无法得知 $x_3$ 的值，因此不能排除 $x_3 = 0$ 的可能性，在这种情况下 $\\neg x_3 = 1$，子句 $C$ 将被满足。因此，无法得出确定性的结论。\n\n选项 C：两个查询都询问 $x_1$ 的值，这没有揭示任何关于 $x_2$ 或 $x_3$ 的信息；验证者无法确定是否所有三个文字都为假，因此无法得出确定性的结论。\n\n选项 D：两个查询都询问 $C$ 是否被满足。题目所陈述的保证只涵盖关于变量值的查询；它没有断言对关于满足性的问题会如实回答。因此，在给定的假设下，验证者不能依赖这些是/否的回答来确定性地得出不满足的结论。\n\n因此，只有选项 A 确保验证者以一种保证真实的方式获得了所需的确切信息（子句的所有三个变量值），从而可以确定性地得出 $C$ 不被满足的结论。", "answer": "$$\\boxed{A}$$", "id": "1458993"}, {"introduction": "将逻辑问题转化为代数问题，即“算术化”（arithmetization），是交互式证明领域的一项核心技术。通过这种转换，复杂的逻辑满足性问题可以被归结为检验一个多项式是否恒等于零。这个练习将指导你完成这一关键步骤，将一组布尔逻辑约束（包括子句约束和布尔值约束）合并成一个单一的、带随机系数的多项式，为使用多项式身份测试进行概率性验证奠定基础 [@problem_id:1459025]。", "problem": "在交互式证明系统的研究中，一种常见的技术是将问题“算术化”（arithmetize），即将一个逻辑陈述转换为一组多项式方程。这使得验证者（Verifier）可以通过在有限域上执行代数测试来检验证明者（Prover）的声明。\n\n考虑一个包含三个变量 $x_1, x_2, x_3$ 的布尔可满足性问题。一个证明者声称拥有一个对这些变量的赋值（从 $\\{0, 1\\}$ 中取值），该赋值满足以下子句集：\n1. $C_1 = (x_1 \\lor \\neg x_2)$\n2. $C_2 = (\\neg x_1 \\lor x_2 \\lor x_3)$\n3. $C_3 = (\\neg x_2 \\lor \\neg x_3)$\n\n为了验证这一声明，必须将此约束系统转换为某个大有限域上的一组多项式方程。一个有效的赋值必须满足两类约束：\n- **子句约束**：每个子句都必须被满足。如果一个子句对应的约束多项式求值为 0，则该子句被满足。该多项式的构造方式是：仅当子句*未被满足*时其值为 1，否则为 0。当且仅当一个子句中的所有文字（literal）都为假时，该子句未被满足。代表正文字 $x_i$ 为“假”的多项式是 $(1-x_i)$，代表负文字 $\\neg x_i$ 为“假”的多项式是 $x_i$。一个子句的约束多项式是该子句中所有文字对应的“假”条件多项式的乘积。\n- **布尔约束**：每个变量必须是 0 或 1。对于每个变量 $x_i$，这由方程 $x_i^2 - x_i = 0$ 强制约束。\n\n验证者不是逐一检查这些多项式方程，而是将它们组合成一个单一的概率性检查。验证者从底层域中选择随机系数 $r_1, r_2, r_3, r_4, r_5, r_6$，并构造一个单一多项式 $P(x_1, x_2, x_3)$，该多项式是所有约束多项式的线性组合。系数 $r_1, r_2, r_3$ 分别对应子句 $C_1, C_2, C_3$。系数 $r_4, r_5, r_6$ 分别对应 $x_1, x_2, x_3$ 的布尔约束。\n\n你的任务是构造这个组合多项式 $P(x_1, x_2, x_3)$。请将你的最终答案表示为一个关于变量 $x_1, x_2, x_3$ 的多项式，其系数用符号化的随机系数 $r_1, \\dots, r_6$ 表示。多项式中的项应首先按总次数（从高到低）排序，然后对于总次数相同的项，按字典序排序（例如，$x_1^2$ 在 $x_1 x_2$ 之前，$x_1 x_2$ 在 $x_2^2$ 之前）。", "solution": "目标是构造一个单一多项式 $P(x_1, x_2, x_3)$，它是多个约束多项式的随机线性组合。我们必须首先确定所有的约束多项式。\n\n**第 1 步：算术化子句约束**\n\n我们有一条规则，将每个子句转换为多项式约束 $p_i(x_1, x_2, x_3) = 0$。该多项式由子句中每个文字的“假”条件多项式相乘而成。文字 $x_i$ 的“假”多项式是 $(1-x_i)$，而 $\\neg x_i$ 的“假”多项式是 $x_i$。\n\n1.  **子句 $C_1 = (x_1 \\lor \\neg x_2)$**：如果 $x_1$ 为假 且 $\\neg x_2$ 为假，则该子句未被满足。\n    -   $x_1$ 为“假”的条件由多项式 $(1-x_1)$ 表示。\n    -   $\\neg x_2$ 为“假”的条件由多项式 $x_2$ 表示。\n    -   约束多项式是它们的乘积：$p_1(x_1, x_2, x_3) = (1-x_1)x_2 = x_2 - x_1 x_2$。\n\n2.  **子句 $C_2 = (\\neg x_1 \\lor x_2 \\lor x_3)$**：如果 $\\neg x_1$ 为假 且 $x_2$ 为假 且 $x_3$ 为假，则该子句未被满足。\n    -   $\\neg x_1$ 为“假”的条件是 $x_1$。\n    -   $x_2$ 为“假”的条件是 $(1-x_2)$。\n    -   $x_3$ 为“假”的条件是 $(1-x_3)$。\n    -   约束多项式是它们的乘积：$p_2(x_1, x_2, x_3) = x_1(1-x_2)(1-x_3) = x_1(1 - x_3 - x_2 + x_2 x_3) = x_1 - x_1 x_2 - x_1 x_3 + x_1 x_2 x_3$。\n\n3.  **子句 $C_3 = (\\neg x_2 \\lor \\neg x_3)$**：如果 $\\neg x_2$ 为假 且 $\\neg x_3$ 为假，则该子句未被满足。\n    -   $\\neg x_2$ 为“假”的条件是 $x_2$。\n    -   $\\neg x_3$ 为“假”的条件是 $x_3$。\n    -   约束多项式是它们的乘积：$p_3(x_1, x_2, x_3) = x_2 x_3$。\n\n**第 2 步：定义布尔约束**\n\n变量必须取值于 $\\{0, 1\\}$。这由多项式方程 $x_i(x_i - 1) = 0$（即 $x_i^2 - x_i = 0$）强制约束。\n\n4.  对于 $x_1$：$p_4(x_1, x_2, x_3) = x_1^2 - x_1$。\n5.  对于 $x_2$：$p_5(x_1, x_2, x_3) = x_2^2 - x_2$。\n6.  对于 $x_3$：$p_6(x_1, x_2, x_3) = x_3^2 - x_3$。\n\n**第 3 步：构造组合多项式**\n\n验证者的多项式 $P$ 是所有六个约束多项式的随机线性组合：\n$$P(x_1, x_2, x_3) = \\sum_{i=1}^{6} r_i p_i(x_1, x_2, x_3)$$\n代入每个 $p_i$ 的表达式：\n$$P(x_1, x_2, x_3) = r_1(x_2 - x_1 x_2) + r_2(x_1 - x_1 x_2 - x_1 x_3 + x_1 x_2 x_3) + r_3(x_2 x_3) + r_4(x_1^2 - x_1) + r_5(x_2^2 - x_2) + r_6(x_3^2 - x_3)$$\n\n**第 4 步：展开并合并同类项**\n\n现在，我们展开表达式，并按 $x_1, x_2, x_3$ 的单项式对项进行分组。\n\n$P(x_1, x_2, x_3) = r_1 x_2 - r_1 x_1 x_2 + r_2 x_1 - r_2 x_1 x_2 - r_2 x_1 x_3 + r_2 x_1 x_2 x_3 + r_3 x_2 x_3 + r_4 x_1^2 - r_4 x_1 + r_5 x_2^2 - r_5 x_2 + r_6 x_3^2 - r_6 x_3$\n\n让我们收集每个单项式的系数，按次数排序，然后按字典序排序：\n\n-   **3 次项：**\n    -   $x_1 x_2 x_3$：$r_2$\n\n-   **2 次项：**\n    -   $x_1^2$：$r_4$\n    -   $x_1 x_2$：$-r_1 - r_2$\n    -   $x_1 x_3$：$-r_2$\n    -   $x_2^2$：$r_5$\n    -   $x_2 x_3$：$r_3$\n    -   $x_3^2$：$r_6$\n\n-   **1 次项：**\n    -   $x_1$：$r_2 - r_4$\n    -   $x_2$：$r_1 - r_5$\n    -   $x_3$：$-r_6$\n\n-   **0 次项（常数项）：** 没有常数项。\n\n结合这些结果得到最终的多项式：\n$P(x_1, x_2, x_3) = r_2 x_1 x_2 x_3 + r_4 x_1^2 + r_5 x_2^2 + r_6 x_3^2 + (-r_1 - r_2)x_1 x_2 - r_2 x_1 x_3 + r_3 x_2 x_3 + (r_2 - r_4)x_1 + (r_1 - r_5)x_2 - r_6 x_3$。\n按照指定的排序顺序：$x_1 x_2 x_3$（3次），然后是 $x_1^2, x_1 x_2, x_1 x_3, x_2^2, x_2 x_3, x_3^2$（2次），然后是 $x_1, x_2, x_3$（1次）。\n该多项式是：\n$P(x_1, x_2, x_3) = r_2 x_1 x_2 x_3 + r_4 x_1^2 + (-r_1 - r_2) x_1 x_2 - r_2 x_1 x_3 + r_5 x_2^2 + r_3 x_2 x_3 + r_6 x_3^2 + (r_2 - r_4) x_1 + (r_1 - r_5) x_2 - r_6 x_3$。", "answer": "$$\\boxed{r_2 x_1 x_2 x_3 + r_4 x_1^2 + (-r_1 - r_2) x_1 x_2 - r_2 x_1 x_3 + r_5 x_2^2 + r_3 x_2 x_3 + r_6 x_3^2 + (r_2 - r_4) x_1 + (r_1 - r_5) x_2 - r_6 x_3}$$", "id": "1459025"}, {"introduction": "概率性检验的可靠性并非凭空而来，它建立在坚实的数学基础之上，其中Schwartz-Zippel引理扮演了核心角色。该引理指出，一个非零多项式在其定义域内不会有太多的根，这使得通过随机抽点的方法能以极高的概率判断一个多项式是否为零。这个练习让你扮演一个协议设计者的角色，实际应用Schwartz-Zippel引理来计算为了达到指定的低错误率，所需的有限域的最小规模 [@problem_id:1459033]。", "problem": "一位计算机代数系统的设计者正在实现一个概率算法，用于验证一个大型符号矩阵的行列式是否恒为零。该矩阵记作 $M(z_1, \\dots, z_k)$，是一个 $n \\times n$ 矩阵，其元素 $M_{ij}$ 是关于 $k$ 个变量 $z_1, \\dots, z_k$ 的多项式。已知每个多项式元素 $M_{ij}(z_1, \\dots, z_k)$ 的总次数至多为 $\\delta$。\n\n验证协议如下：\n1.  选择一个大小为整数 $S$ 的有限域 $\\mathbb{F}$。\n2.  从集合 $\\mathbb{F}^k$ 中均匀随机地选取一个点 $\\mathbf{r} = (r_1, \\dots, r_k)$。\n3.  计算矩阵在该点的行列式的值 $\\det(M(\\mathbf{r}))$。\n4.  如果 $\\det(M(\\mathbf{r})) = 0$，协议断定该行列式恒为零。否则，断定其不恒为零。\n\n“健全性错误”是指当行列式实际上是一个非零多项式时，协议却错误地断定其恒为零的概率。系统的设计规范要求该健全性错误必须严格小于一个容差 $\\epsilon$。\n\n给定参数 $n = 80$，$\\delta = 5$ 以及要求的容差 $\\epsilon = 3.9 \\times 10^{-9}$，满足此要求的有限域 $\\mathbb{F}$ 的最小整数大小 $S$ 是多少？", "solution": "令 $P(z_{1},\\dots,z_{k})=\\det(M(z_{1},\\dots,z_{k}))$。根据行列式的置换展开式，\n$$\nP(z_{1},\\dots,z_{k})=\\sum_{\\sigma\\in S_{n}}\\operatorname{sgn}(\\sigma)\\prod_{i=1}^{n}M_{i,\\sigma(i)}(z_{1},\\dots,z_{k}).\n$$\n每个元素 $M_{ij}$ 的总次数至多为 $\\delta$，因此每个乘积项的总次数至多为 $\\sum_{i=1}^{n}\\deg M_{i,\\sigma(i)}\\leq n\\delta$。因此总次数满足\n$$\n\\deg P \\leq n\\delta.\n$$\n\n根据 Schwartz–Zippel–DeMillo–Lipton 引理，对于一个在域 $\\mathbb{F}$（其中 $|\\mathbb{F}|=S$）上的总次数为 $D$ 的非零多项式 $P$，从 $\\mathbb{F}^{k}$ 中均匀随机选择一个 $\\mathbf{r}$ 使得 $P(\\mathbf{r})=0$ 的概率至多为 $D/S$。因此健全性错误至多为\n$$\n\\frac{\\deg P}{S} \\leq \\frac{n\\delta}{S}.\n$$\n为确保错误严格小于 $\\epsilon$，只需满足\n$$\n\\frac{n\\delta}{S}\\epsilon \\quad\\Longleftrightarrow\\quad S>\\frac{n\\delta}{\\epsilon}.\n$$\n由于 $S$ 必须是整数，最小的有效选择是\n$$\nS_{\\min}=\\left\\lfloor\\frac{n\\delta}{\\epsilon}\\right\\rfloor+1.\n$$\n\n将 $n=80$, $\\delta=5$ 和 $\\epsilon=3.9\\times 10^{-9}$ 代入可得\n$$\n\\frac{n\\delta}{\\epsilon}=\\frac{400}{3.9\\times 10^{-9}}=\\left(\\frac{400}{3.9}\\right)\\times 10^{9}=\\left(\\frac{4000}{39}\\right)\\times 10^{9}=\\frac{4\\times 10^{12}}{39}.\n$$\n计算其整数部分：\n$$\n\\frac{4\\times 10^{12}}{39}=102{,}564{,}102{,}564+\\frac{4}{39},\n$$\n所以\n$$\n\\left\\lfloor\\frac{n\\delta}{\\epsilon}\\right\\rfloor=102{,}564{,}102{,}564,\n$$\n因此\n$$\nS_{\\min}=102{,}564{,}102{,}564+1=102{,}564{,}102{,}565.\n$$\n此选择保证健全性错误严格小于 $\\epsilon$。", "answer": "$$\\boxed{102564102565}$$", "id": "1459033"}]}