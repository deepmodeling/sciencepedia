{"hands_on_practices": [{"introduction": "IP=PSPACE 证明的第一步是将布尔公式转化为多项式。这个练习将帮助你掌握逻辑连接词（如“与”、“或”、“非”）的基本转换规则，以及基于 $z^2=z$ 这一关键性质的简化方法。掌握这项技能是理解整个交互式证明协议的基石。[@problem_id:1447654]", "problem": "在计算复杂性理论的研究中，尤其是在交互式证明系统的背景下，布尔公式通常被转换为整数上的多元多项式。这个过程被称为算术化，它允许使用代数工具来分析逻辑性质。\n\n考虑一个包含变量 $x_1, x_2, \\dots, x_n$ 的布尔公式 $\\phi$。算术化过程根据以下规则将其映射到一个多项式 $P_\\phi(z_1, z_2, \\dots, z_n)$：\n- 每个布尔变量 $x_i \\in \\{\\text{true}, \\text{false}\\}$ 被映射到一个整数变量 $z_i \\in \\{1, 0\\}$，其中 `true` 对应 1，`false` 对应 0。\n- 一个文字 $x_i$ 映射到多项式 $z_i$。\n- 一个否定的文字 $\\neg x_i$ 映射到多项式 $(1-z_i)$。\n- 两个子公式的合取 (AND, $\\land$)，即 $\\psi_1 \\land \\psi_2$，映射为其对应多项式的乘积：$P_{\\psi_1} \\cdot P_{\\psi_2}$。\n- 两个子公式的析取 (OR, $\\lor$)，即 $\\psi_1 \\lor \\psi_2$，映射为多项式 $1 - (1-P_{\\psi_1})(1-P_{\\psi_2})$。\n\n构造出初始多项式后，需要将其完全展开和简化。一个关键的简化规则源于 $z_i \\in \\{0, 1\\}$ 这个事实，即对于任何整数次幂 $k \\ge 1$，我们可以将 $z_i^k$ 替换为 $z_i$。例如，像 $3z_1^3 z_2^5$ 这样的项可以简化为 $3z_1 z_2$。\n\n考虑以下关于三个变量的合取范式 (CNF) 布尔公式：\n$$ \\phi(x_1, x_2, x_3) = (\\neg x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor \\neg x_3) \\land (\\neg x_2 \\lor \\neg x_3) $$\n\n遵循上述算术化和简化规则，求出最终简化多项式 $P_\\phi(z_1, z_2, z_3)$ 的总次数。多项式的总次数是其任意单项式中变量指数的最大和。", "solution": "使用算术化规则来映射文字和连接词。对于每个否定的文字，$P(\\neg x_i)=1-z_i$。对于析取 (OR)，$P(\\psi_1 \\lor \\psi_2)=1-(1-P_{\\psi_1})(1-P_{\\psi_2})$。因此对于每个子句，\n$$\nP(\\neg x_1 \\lor \\neg x_2)=1-(1-(1-z_1))(1-(1-z_2))=1-z_1 z_2,\n$$\n$$\nP(\\neg x_1 \\lor \\neg x_3)=1-z_1 z_3,\\quad P(\\neg x_2 \\lor \\neg x_3)=1-z_2 z_3.\n$$\n该CNF是各子句的合取，因此其多项式是各项的乘积：\n$$\nP_{\\phi}(z_1,z_2,z_3)=(1-z_1 z_2)(1-z_1 z_3)(1-z_2 z_3).\n$$\n使用 $z_i^k=z_i$（对于 $k\\geq 1$）逐步展开。首先计算\n$$\n(1-z_1 z_2)(1-z_1 z_3)=1-z_1 z_3-z_1 z_2+z_1^2 z_2 z_3=1-z_1 z_3-z_1 z_2+z_1 z_2 z_3,\n$$\n因为 $z_1^2=z_1$。现在乘以 $(1-z_2 z_3)$：\n$$\n\\begin{aligned}\nP_{\\phi}&=(1-z_1 z_3-z_1 z_2+z_1 z_2 z_3)(1-z_2 z_3)\\\\\n&=(1-z_1 z_3-z_1 z_2+z_1 z_2 z_3) - z_2 z_3(1-z_1 z_3-z_1 z_2+z_1 z_2 z_3) \\\\\n&=1 - z_1 z_3 - z_1 z_2 + z_1 z_2 z_3 - z_2 z_3 + z_1 z_2 z_3^2 + z_1 z_2^2 z_3 - z_1 z_2^2 z_3^2.\n\\end{aligned}\n$$\n使用 $z_i^2=z_i$ 简化每个单项式：\n$$\nz_1 z_2 z_3^2=z_1 z_2 z_3,\\quad z_1 z_2^2 z_3=z_1 z_2 z_3,\\quad z_1 z_2^2 z_3^2=z_1 z_2 z_3.\n$$\n因此，\n$$\nP_{\\phi}=1 - z_1 z_3 - z_1 z_2 + z_1 z_2 z_3 - z_2 z_3 + z_1 z_2 z_3 + z_1 z_2 z_3 - z_1 z_2 z_3 = 1-z_1z_2-z_1z_3-z_2z_3+2z_1z_2z_3.\n$$\n总次数是简化后任意单项式中指数的最大和。单项式 $2z_1 z_2 z_3$ 的总次数为 $3$，这是所有项中最大的。因此，$P_{\\phi}$ 的总次数为 $3$。", "answer": "$$\\boxed{3}$$", "id": "1447654"}, {"introduction": "在上一个练习的基础上，我们现在引入量词的算术化，其中存在量词 $\\exists$ 变为求和，而全称量词 $\\forall$ 变为求积。这个练习要求你将这些规则应用于一个完整的量化布尔公式 (QBF)，为交互式证明的第一轮构建多项式声明。这是协议中的一个核心操作，让你完整体验从 QBF 到代数断言的转换过程。[@problem_id:1447644]", "problem": "在计算复杂性理论的背景下，Shamir 定理指出，复杂度类 IP（包含所有可由交互式证明系统解决的问题）等于 PSPACE（即可由确定性图灵机在多项式空间内解决的问题类）。$IP = PSPACE$ 证明的一个关键部分涉及对量化布尔公式 (QBF) 的算术化。\n\n这个算术化过程将一个布尔公式转换为一个多项式。令布尔变量 $x_i$ 在 $\\{0, 1\\}$ 中取值，其中 $1$ 代表 TRUE (真)，$0$ 代表 FALSE (假)。逻辑运算按如下方式映射到算术运算：\n-   $A \\land B$ 转换为乘积 $A \\cdot B$。\n-   $\\neg A$ 转换为 $(1-A)$。\n-   $A \\lor B$ 转换为 $1 - (1-A)(1-B) = A+B-AB$。\n\n类似地，量词被转换为对公式 $\\phi$ 的多项式表示 $\\phi'$ 的运算：\n-   $\\exists x \\phi(x)$ 转换为 $\\sum_{x \\in \\{0,1\\}} \\phi'(x)$。\n-   $\\forall x \\phi(x)$ 转换为 $\\prod_{x \\in \\{0,1\\}} \\phi'(x)$。\n\n任何得到的多项式都可以使用属性 $x_i^k = x_i$ 进行简化，其中变量 $x_i \\in \\{0,1\\}$，整数 $k \\ge 1$。\n\n考虑以下量化布尔公式：\n$$ \\Phi = \\exists x_1 \\forall x_2 \\exists x_3 ((x_1 \\lor x_2) \\land (\\neg x_2 \\lor x_3)) $$\n\n在此 QBF 的交互式证明的第一轮中，证明者 (Prover) 必须构建一个多项式，该多项式表示剥离最外层量词后的公式。这个我们称之为 $P(z)$ 的多项式是单个变量 $z$ 的函数，其中 $z$ 代表 $x_1$。确定多项式 $P(z)$。请将您的答案表示为变量 $z$ 的多项式。", "solution": "我们使用给定的规则对命题核心 $\\psi(x_1,x_2,x_3)=((x_1 \\lor x_2) \\land (\\neg x_2 \\lor x_3))$ 进行算术化。首先，\n$$(x_1 \\lor x_2) \\mapsto x_1+x_2-x_1 x_2,$$\n$$(\\neg x_2 \\lor x_3) \\mapsto (1-x_2)+x_3-(1-x_2)x_3 = 1 - x_2 + x_2 x_3.$$\n因此，算术化后的公式是\n$$\\psi'(x_1,x_2,x_3)=(x_1+x_2-x_1 x_2)(1-x_2+x_2 x_3).$$\n\n剥离最外层量词 $\\exists x_1$ 意味着我们通过固定 $x_1=z$ 并将剩余的量词 $\\forall x_2$ 应用为对 $x_2 \\in \\{0,1\\}$ 的乘积，将 $\\exists x_3$ 应用为对 $x_3 \\in \\{0,1\\}$ 的求和，来构造多项式 $P(z)$。因此，\n$$P(z)=\\prod_{x_2 \\in \\{0,1\\}}\\left(\\sum_{x_3 \\in \\{0,1\\}}(z+x_2-zx_2)(1-x_2+x_2 x_3)\\right).$$\n\n对于固定的 $z$ 和 $x_2$，从内层和中提出因子 $(z+x_2-zx_2)$：\n$$\\sum_{x_3 \\in \\{0,1\\}}(z+x_2-zx_2)(1-x_2+x_2 x_3)=(z+x_2-zx_2)\\sum_{x_3 \\in \\{0,1\\}}(1-x_2+x_2 x_3).$$\n计算关于 $x_3$ 的和：\n$$\\sum_{x_3 \\in \\{0,1\\}}(1-x_2+x_2 x_3)=\\bigl(1-x_2+x_2\\cdot 0\\bigr)+\\bigl(1-x_2+x_2\\cdot 1\\bigr)=(1-x_2)+1=2-x_2.$$\n因此，\n$$P(z)=\\prod_{x_2 \\in \\{0,1\\}}(z+x_2-zx_2)(2-x_2).$$\n\n明确地计算这两个因子：\n- 对于 $x_2=0$：$(z+0-z\\cdot 0)(2-0)=z\\cdot 2=2z$。\n- 对于 $x_2=1$：$(z+1-z\\cdot 1)(2-1)=(1)\\cdot 1=1$。\n\n所以，\n$$P(z)=(2z)\\cdot 1=2z.$$\n这已经是一个关于 $z$ 的多项式，不需要进一步简化。", "answer": "$$\\boxed{2z}$$", "id": "1447644"}, {"introduction": "现在，让我们超越单纯的机械计算，深入探讨交互式证明的动态过程。这个思想实验将让你扮演一个不诚实的证明者，试图利用验证者设计中的一个缺陷——缺乏随机性。通过构造一个欺骗性的多项式，你将深刻体会到为什么随机性是保证协议安全性的基石。[@problem_id:1447618]", "problem": "在计算复杂性理论的研究中，Shamir 定理指出，拥有交互式证明系统（IP）的问​​题类别等于可在多项式空间（PSPACE）内解决的问题类别。该定理证明的一个关键部分是针对真量化布尔公式（TQBF）问题的交互式协议，该问题是 PSPACE-完备的。\n\n该协议涉及一个称为“算术化”（arithmetization）的过程。一个量化布尔公式（QBF）被转换为有限域 $\\mathbb{F}_p$ 上的一个多项式表达式。布尔变量 $x_i \\in \\{0, 1\\}$ 被视作域元素。逻辑运算转换如下：$\\neg x$ 变为 $1-x$，$a \\land b$ 变为 $ab$，$a \\lor b$ 变为 $a+b-ab$。量词也被算术化：$\\exists x_i$ 被替换为求和 $\\sum_{x_i \\in \\{0,1\\}}$，$\\forall x_i$ 被替换为求积 $\\prod_{x_i \\in \\{0,1\\}}$。一个 QBF 为真，当且仅当其算术化形式在 $\\mathbb{F}_p$ 中计算出的值非零。\n\n考虑以下已知的假 QBF：\n$$ \\phi = \\exists x_1 \\forall x_2 (x_1 \\leftrightarrow x_2) $$\n内部子句 $(x_1 \\leftrightarrow x_2)$ 的算术化是多项式 $P(x_1, x_2) = 2x_1x_2 - x_1 - x_2 + 1$。整个公式 $\\phi$ 正确地计算为 0。\n\n一个全能但不诚实的证明者 Merlin 想让一个验证者 Arthur 相信 $\\phi$ 的值是 1。该协议在有限域 $\\mathbb{F}_{101}$ 上运行。\n\n协议分轮进行，每一轮对应一个变量，从最外层到最内层。\n1.  **第一轮 ($\\exists x_1$):**\n    子公式 $\\forall x_2 (x_1 \\leftrightarrow x_2)$ 的算术化结果是一个关于 $x_1$ 的多项式，我们称之为 $P_1(x_1)$。Merlin 应该将这个多项式发送给 Arthur。由于量词是 $\\exists x_1$，Arthur 会检查 $P_1(0) + P_1(1)$ 是否等于所声称的 $\\phi$ 的值。然而，Merlin 发送了一个（可能欺诈的）多项式 $P'_1(z)$。Arthur 检查 $P'_1(0) + P'_1(1) = 1$ 是否成立。如果检查失败，Arthur 拒绝。\n2.  如果检查通过，Arthur 从 $\\mathbb{F}_{101}$ 中选择一个值 $c_1$ 并发送给 Merlin。协议接着继续处理子问题，即验证 $P_1(c_1)$ 是否等于 Arthur 计算出的值 $P'_1(c_1)$。\n\nArthur 的某个特定实现存在缺陷：它不随机选择 $c_1$，而是总是选择预定值 $c_1 = 5$。Merlin 知道这个缺陷。为了构建一个成功的欺骗，Merlin 构造了一个欺诈多项式 $P'_1(z)$，它必须满足两个条件：\n(i) 它必须通过 Arthur 基于量词的初始检查。\n(ii) 它必须在 Arthur 将要检查的特定点上与真实多项式 $P_1(z)$ 的值一致，即 $P'_1(5) = P_1(5)$。这确保了 Merlin 的谎言不会立即被揭穿。\n\nMerlin 将他的欺诈多项式构造为 $P'_1(z) = az^2 + bz$ 的形式。确定 Merlin 必须使用的唯一的整数系数 $a$ 和 $b$（其中 $0 \\le a, b \\le 100$）。", "solution": "我们将子句 $x_1 \\leftrightarrow x_2$ 算术化为 $P(x_1,x_2)=2x_1 x_2 - x_1 - x_2 + 1$，在 $\\mathbb{F}_{101}$ 上，该多项式当且仅当 $x_1=x_2$ 时满足 $P(x_1,x_2)=1$，否则 $P(x_1,x_2)=0$。对于全称量词，子公式 $\\forall x_2(x_1 \\leftrightarrow x_2)$ 算术化为对 $x_2 \\in \\{0,1\\}$ 的求积：\n$$\nP_1(x_1)=\\prod_{x_2 \\in \\{0,1\\}}P(x_1,x_2)=P(x_1,0)\\cdot P(x_1,1).\n$$\n计算每个因子：\n$$\nP(x_1,0)=2x_1\\cdot 0 - x_1 - 0 + 1 = 1 - x_1, \\quad P(x_1,1)=2x_1\\cdot 1 - x_1 - 1 + 1 = x_1.\n$$\n因此\n$$\nP_1(x_1)=(1-x_1)x_1=x_1-x_1^2.\n$$\n外部的 $\\exists x_1$ 量词对应于对 $x_1 \\in \\{0,1\\}$ 的 $P_1(x_1)$ 求和，得到 $P_1(0)+P_1(1)=0$，这与一个假公式的预期结果相符。\n\nMerlin 发送 $P'_1(z)=az^2+bz$ 并且必须满足：\n(i) Arthur 的存在量词检查：$P'_1(0)+P'_1(1)=1$，得到\n$$\na+b \\equiv 1 \\pmod{101}.\n$$\n(ii) 在 Arthur 的固定选择 $c_1=5$ 处值一致：$P'_1(5)=P_1(5)$。计算\n$$\nP_1(5)=5-5^2=5-25=-20 \\equiv 81 \\pmod{101},\n$$\n和\n$$\nP'_1(5)=25a+5b \\equiv 81 \\pmod{101}.\n$$\n因此我们求解在 $\\mathbb{F}_{101}$ 上的线性方程组：\n$$\n\\begin{cases}\na+b \\equiv 1,\\\\\n25a+5b \\equiv 81.\n\\end{cases}\n$$\n根据 $b \\equiv 1-a$ 并代入：\n$$\n25a+5(1-a)=81 \\;\\Rightarrow\\; 20a+5=81 \\;\\Rightarrow\\; 20a=76.\n$$\n由于 $101=5\\cdot 20+1$，我们有 $20^{-1}\\equiv -5 \\equiv 96 \\pmod{101}$。因此\n$$\na \\equiv 76 \\cdot 96 \\equiv 24 \\pmod{101}, \\quad b \\equiv 1-a \\equiv 1-24 \\equiv -23 \\equiv 78 \\pmod{101}.\n$$\n验证：$a+b=24+78=102 \\equiv 1$ 且 $25a+5b=25\\cdot 24+5\\cdot 78=600+390=990 \\equiv 81 \\pmod{101}$。系数是唯一的，因为行列式 $5-25=-20 \\not\\equiv 0 \\pmod{101}$。", "answer": "$$\\boxed{\\begin{pmatrix}24 & 78\\end{pmatrix}}$$", "id": "1447618"}]}