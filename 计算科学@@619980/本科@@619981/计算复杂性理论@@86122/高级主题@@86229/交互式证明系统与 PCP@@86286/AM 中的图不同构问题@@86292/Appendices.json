{"hands_on_practices": [{"introduction": "在我们深入研究复杂的交互式协议之前，首先必须理解何时根本不需要它。这个练习可以被看作是一个“飞行前检查”，它探讨了 Arthur 自己可以执行的一个简单而高效的检查。通过关注图的基本属性——图不变量，你将揭示为什么在某些情况下，无需 Merlin 的帮助，问题就可以得到确定性的解决。[@problem_id:1426148]", "problem": "在计算复杂性理论中，一个交互式证明系统包含一个强大的、不可信的证明者（Merlin）试图让一个计算能力有限的概率性验证者（Arthur）相信一个陈述的真实性。图不同构（GNI）问题是一个拥有高效交互式证明的经典问题范例。GNI问题是判断两个图 $G_0$ 和 $G_1$ 是否*不*同构的问题。\n\n考虑针对两个具有相同 $n$ 顶点集 $V$ 的图 $G_0 = (V, E_0)$ 和 $G_1 = (V, E_1)$ 的标准Arthur-Merlin（AM）协议：\n\n1.  Arthur（验证者）收到图对 $(G_0, G_1)$。\n2.  Arthur 随机且秘密地选择一个索引 $i \\in \\{0, 1\\}$。\n3.  Arthur 生成顶点集 $V$ 的一个随机置换 $\\pi$。\n4.  Arthur 通过将置换 $\\pi$ 应用于他所选图 $G_i$ 的顶点来计算一个新图 $H$。也就是说，$H = \\pi(G_i)$，意味着当且仅当边 $(\\pi^{-1}(u), \\pi^{-1}(v))$ 在 $G_i$ 中时，边 $(u, v)$ 才在 $H$ 中。\n5.  Arthur 将图 $H$ 发送给 Merlin（证明者）。\n6.  Merlin 必须回复一个索引 $j \\in \\{0, 1\\}$，指明他认为 $H$ 与哪个原始图同构。\n7.  如果 Merlin 的回答是正确的（即，如果 $j=i$），Arthur 就接受这个不同构的证明。否则，Arthur 拒绝。\n\n一个正在实现 Arthur 算法的学生决定增加一个初步检查：在开始交互式协议之前，学生的程序首先计算 $G_0$ 和 $G_1$ 中的边数，分别表示为 $|E_0|$ 和 $|E_1|$。如果 $|E_0| \\neq |E_1|$，程序立即判定这两个图是不同构的，并且在不与 Merlin 进行任何交互的情况下停止。\n\n下列哪个陈述为“为何在这种特定情况下，这个初步检查是 Arthur 解决 GNI 问题的一种正确且充分的方法”提供了最准确和最根本的原因？\n\nA. 这个检查是有效的，因为如果 $|E_0| \\neq |E_1|$，Merlin 可以计算 $H$ 的边数，并将其与 $|E_0|$ 和 $|E_1|$ 比较，从而以100%的确定性确定正确的索引 $i$，因此总能说服 Arthur。\n\nB. 这个检查是有效的，因为边数是一个图不变量。如果两个图的边数不同，它们就不可能同构，并且 Arthur 可以在多项式时间内计算这个属性，而无需任何交互。\n\nC. 这个检查是有效的，因为应用于 $G_i$ 的随机置换 $\\pi$ 有非零的概率改变结果图 $H$ 的边数，从而向 Merlin 揭示了不同构性。\n\nD. 这个检查是有效的，因为已知 GNI 问题属于复杂性类别 co-NP，该类别要求任何简单的多项式时间检查都必须在交互式协议开始前由验证者执行。", "solution": "我们首先回顾图同构的定义：如果存在一个双射 $\\varphi:V\\to V$，使得对于每一对 $(u,v)\\in V\\times V$，边 $(u,v)\\in E_{0}$ 当且仅当 $(\\varphi(u),\\varphi(v))\\in E_{1}$，那么图 $G_{0}=(V,E_{0})$ 和 $G_{1}=(V,E_{1})$ 是同构的。任何同构都会在边之间导出一个双射，因此会保留边的数量。形式上，如果 $G_{1}\\cong G_{0}$，那么在 $E_{0}$ 和 $E_{1}$ 之间存在一个双射，所以 $|E_{0}|=|E_{1}|$。\n\n接下来，考虑 AM 协议中 Arthur 的置换步骤。对于任何图 $G=(V,E)$ 和 $V$ 的任何置换 $\\pi$，图 $\\pi(G)$ 的边集为 $E'=\\{(\\pi(u),\\pi(v)):(u,v)\\in E\\}$。映射 $(u,v)\\mapsto(\\pi(u),\\pi(v))$ 是从 $E$ 到 $E'$ 的一个双射，因此\n$$\n|E(\\pi(G))|=|E(G)|.\n$$\n所以，置换会保留边的数量。特别地，如果 $H=\\pi(G_{i})$，那么 $|E(H)|=|E_{i}|$。\n\n根据这些事实，其逆否命题得出了基本准则：如果 $|E_{0}|\\neq|E_{1}|$，那么 $G_{0}$ 和 $G_{1}$ 不可能同构。这是边数是图同构不变量的直接结果。此外，Arthur 可以在多项式时间内计算 $|E_{0}|$ 和 $|E_{1}|$（例如，通过邻接矩阵在 $O(|V|^{2})$ 时间内，或通过邻接表在 $O(|E|)$ 时间内），因此对于这种特定情况，Arthur 可以确定性地判定不同构，而无需与 Merlin 进行任何交互。这解释了为什么这个初步检查既正确又充分。\n\n我们现在来评估这些选项：\n\n- 选项 B 精确地陈述了基于不变量的原因：边数在同构下是保持不变的，因此不同的边数意味着不同构，并且 Arthur 可以在多项式时间内检查这一点而无需交互。这是最准确和最根本的原因。\n\n- 选项 A 描述了交互式协议中的一个真实现象（当 $|E_{0}|\\neq|E_{1}|$ 时，Merlin 可以通过计算 $H$ 的边数来确定地识别 $i$），但这并不是 Arthur 的初步检查之所以充分的根本理由；其充分性来自于不变量允许 Arthur 完全无需 Merlin 就能做出决定。\n\n- 选项 C 是不正确的，因为应用置换绝不会改变边的数量；$|E(\\pi(G))|=|E(G)|$ 总是成立。\n\n- 选项 D 的基本原理是错误的；并没有源于某个特定复杂性类别的成员资格的要求来强制进行此类初步检查，并且所给出的主张并不能证明该方法的正确性。\n\n因此，正确选项是 B。", "answer": "$$\\boxed{B}$$", "id": "1426148"}, {"introduction": "了解了何时协议是不必要的之后，我们现在来审视其在处理同构图时的核心优势：协议的可靠性（soundness）。这个实践问题将带你深入协议的概率核心，要求你计算一个试图作弊的 Merlin 的成功概率。这个计算是理解随机化如何保护协议免受欺骗的关键，并阐明了为什么当图同构时，Merlin 的最佳策略不比随机猜测更好。[@problem_id:1426161]", "problem": "在计算复杂性理论中，亚瑟-梅林 (AM) 协议描述了一类交互式证明系统。考虑以下为解决图不同构 (GNI) 问题而设计的两轮协议。该协议涉及两方：Arthur，一个可以访问随机比特源的验证者，以及 Merlin，一个计算能力无限的证明者。\n\n该协议的输入是两个简单无向图 $G_0 = (V, E_0)$ 和 $G_1 = (V, E_1)$，它们共享同一个包含 $n$ 个顶点的集合 $V$。\n\n协议流程如下：\n1.  Arthur 秘密地从集合 $\\{0, 1\\}$ 中均匀随机选择一个索引 $i$。\n2.  Arthur 从所有 $n!$ 种可能的排列中均匀随机地生成一个顶点集 $V$ 的排列 $\\pi$。\n3.  Arthur 通过将排列 $\\pi$ 应用于图 $G_i$ 来构造一个新图 $H$。$H$ 的顶点集为 $V$，当且仅当边 $(\\pi^{-1}(u), \\pi^{-1}(v))$ 存在于 $G_i$ 中时，边 $(u, v)$ 才存在于 $H$ 中。\n4.  Arthur 只将图 $H$ 发送给 Merlin。\n5.  Merlin 在收到 $H$ 后，必须确定原始图 $G_0$ 或 $G_1$ 中哪一个是 $H$ 的模板。Merlin 将他提议的索引 $j \\in \\{0, 1\\}$ 发回给 Arthur。\n6.  如果 Merlin 的回答 $j$ 与 Arthur 的秘密索引 $i$ 相同，则 Arthur 接受。否则，Arthur 拒绝。\n\n现在，考虑输入图 $G_0$ 和 $G_1$ 彼此同构的特定情况。在这种情况下，Merlin 被认为是“作弊”，因为他试图说服 Arthur 接受，即使输入对 $(G_0, G_1)$ 并非 GNI 问题的“是”实例。\n\n假设 Merlin 使用最优策略来最大化其成功概率，那么 Arthur 接受 Merlin 回答的确切概率是多少？请用小数表示您的答案。", "solution": "令 $G_{0}$ 和 $G_{1}$ 同构。那么存在一个 $V$ 的排列 $\\varphi$，使得 $G_{1} = \\varphi(G_{0})$。令 $I \\in \\{0,1\\}$ 是 Arthur 均匀随机选择的秘密比特，令 $\\Pi$ 是 $V$ 的一个均匀随机排列，令 $H = \\Pi(G_{I})$ 是发送给 Merlin 的图。\n\n我们首先证明 $H$ 的分布不依赖于 $I$。对于 $V$ 上的任意标记图 $h$，\n$$\n\\Pr(H = h \\mid I = 1) \\;=\\; \\Pr(\\Pi(G_{1}) = h) \\;=\\; \\Pr(\\Pi(\\varphi(G_{0})) = h) \\;=\\; \\Pr((\\Pi \\circ \\varphi)(G_{0}) = h).\n$$\n定义 $\\Pi' = \\Pi \\circ \\varphi$。由于与固定双射 $\\varphi$ 的复合是在所有排列集合上的一个双射，因此当 $\\Pi$ 是均匀分布时，$\\Pi'$ 也在所有排列上均匀分布。因此\n$$\n\\Pr(H = h \\mid I = 1) \\;=\\; \\Pr(\\Pi'(G_{0}) = h) \\;=\\; \\Pr(H = h \\mid I = 0).\n$$\n因此，$H$ 在 $I=0$ 和 $I=1$ 下具有相同的分布，这意味着 $I$ 和 $H$ 是独立的，并且根据贝叶斯法则，对于任何满足 $\\Pr(H=h)>0$ 的 $h$，\n$$\n\\Pr(I = 0 \\mid H = h) \\;=\\; \\Pr(I = 1 \\mid H = h) \\;=\\; \\frac{1}{2}.\n$$\n\nMerlin 的目标是输出 $J \\in \\{0,1\\}$ 以最大化 $\\Pr(J = I)$。Merlin 的任何（可能是随机的）策略都将 $H$ 映射到 $\\{0,1\\}$ 上的一个分布。鉴于对于两个 $j$ 都有 $\\Pr(I = j \\mid H = h) = \\frac{1}{2}$，最优选择（确定性或随机性）可以达到\n$$\n\\Pr(J = I \\mid H = h) \\;=\\; \\max_{j \\in \\{0,1\\}} \\Pr(I = j \\mid H = h) \\;=\\; \\frac{1}{2}.\n$$\n对 $H$ 取平均值得到\n$$\n\\Pr(\\text{Arthur accepts}) \\;=\\; \\mathbb{E}_{H}\\!\\left[\\Pr(J = I \\mid H)\\right] \\;=\\; \\frac{1}{2}.\n$$\n\n因此，即使在最优策略下，当 $G_{0}$ 和 $G_{1}$ 同构时，Merlin 的成功概率也恰好是二分之一，即小数 $0.5$。", "answer": "$$\\boxed{0.5}$$", "id": "1426161"}, {"introduction": "为了巩固我们的理论理解，让我们在一个具体的场景中扮演 Merlin 的角色。这个动手练习要求你使用特定的图 $G_0$ 和 $G_1$ 以及一个给定的随机置换 $\\pi$ 来完整地追踪协议的执行过程。通过计算 Arthur 发送的挑战图 $H$ 并找出相应的同构映射，你将对 Arthur-Merlin 交互背后的具体机制获得实践性的掌握。[@problem_id:61686]", "problem": "图不同构（Graph Non-Isomorphism, GNI）问题是判定两个给定图是否不同构的问题。它属于复杂度类 co-NP。复杂度理论中的一个重要结果表明，GNI 拥有一个交互式证明系统，这使其被归入 IP 类，实际上是更小的 AM (Arthur-Merlin) 类。\n\nGNI 的一个交互式证明系统涉及一个强大的证明者（Merlin），他想要说服一个概率多项式时间验证者（Arthur），使之相信两个图 $G_0$ 和 $G_1$ 确实是不同构的。协议如下：\n1.  Arthur 收到两个定义在顶点集 $V$ 上的图 $G_0$ 和 $G_1$。\n2.  Arthur 均匀随机地选择一个比特 $b \\in \\{0, 1\\}$。\n3.  Arthur 均匀随机地生成一个 $V$ 中顶点的置换 $\\pi$。\n4.  Arthur 通过将置换 $\\pi$ 应用于 $G_b$ 的顶点来计算图 $H$。也就是说，$H$ 的边集是 $E_H = \\{(\\pi(u), \\pi(v)) \\mid (u, v) \\in E_{G_b}\\}$。\n5.  Arthur 将挑战图 $H$ 发送给 Merlin。\n6.  Merlin 凭借其无限的计算能力，必须确定哪个原始图与 $H$ 同构。\n\n对于本题，考虑定义在顶点集 $V = \\{1, 2, 3, 4, 5, 6\\}$ 上的两个特定图。\n-   $G_0$ 是环图 $C_6$。其边集为 $E_0 = \\{(1,2), (2,3), (3,4), (4,5), (5,6), (6,1)\\}$。\n-   $G_1$ 是由两个不相交的3-环（三角形）组成的图。其边集为 $E_1 = \\{(1,2), (2,3), (3,1), (4,5), (5,6), (6,4)\\}$。\n\n假设 Arthur 选择了比特 $b=1$ 和一个以轮换表示法给出的置换 $\\pi = (1 \\ 3 \\ 5 \\ 2)(4 \\ 6)$。他构造了挑战图 $H = \\pi(G_1)$ 并将其发送给 Merlin。\n\nMerlin 的任务是证明 $H$ 来自哪个图。他通过找到一个从原始图之一到 $H$ 的同构 $\\sigma$ 来完成此任务。在这种情况下，由于 $G_0$ 和 $G_1$ 不同构，所以 $H$ 将与 $G_1$ 同构，但与 $G_0$ 不同构。\n\n你的任务是找到一个特定的同构 $\\sigma: V \\to V$，它将 $G_1$ 映射到 $H$（即，当且仅当 $(u,v)$ 是 $G_1$ 中的一条边时，$(\\sigma(u), \\sigma(v))$ 是 $H$ 中的一条边），并且该同构是字典序最小的。\n\n如果序列 $(\\sigma(1), \\sigma(2), \\sigma(3), \\sigma(4), \\sigma(5), \\sigma(6))$ 的字典序小于 $(\\tau(1), \\tau(2), \\tau(3), \\tau(4), \\tau(5), \\tau(6))$，则定义置换 $\\sigma$ 的字典序小于另一个置换 $\\tau$。\n\n这个字典序最小的同构 $\\sigma$ 用轮换表示法表示是什么？", "solution": "1. 挑战图为 \n   $$H=\\pi(G_1)\\,,\\qquad \\pi=(1\\ 3\\ 5\\ 2)(4\\ 6)\\,,$$ \n   其单行表示法为 \n   $$\\pi=\\begin{pmatrix}1&2&3&4&5&6\\\\3&1&5&6&2&4\\end{pmatrix}。$$\n2.  在置换 $\\pi$ 的作用下，$G_1$ 的两个三角形 $$T_1=\\{1,2,3\\},\\;T_2=\\{4,5,6\\},$$ 变成了 $H$ 中的两个三角形 \n   $$\\pi(T_1)=\\{1,3,5\\},\\;\\pi(T_2)=\\{2,4,6\\}。$$ \n3.  任何同构 $\\sigma:G_1\\to H$ 都必须将 $\\{1,2,3\\}$ 映射到 $\\{1,3,5\\}$，并将 $\\{4,5,6\\}$ 映射到 $\\{2,4,6\\}$，同时保持邻接关系。\n4.  为最小化 $(\\sigma(1),\\dots,\\sigma(6))$ 的字典序，选择 \n   $$\\sigma(1)=1$$ \n   （可能的最小值），这迫使 $\\sigma(\\{2,3\\})=\\{3,5\\}$。则 \n   $$\\sigma(2)=3,\\;\\sigma(3)=5。$$\n5.  剩下的值位于 $\\{2,4,6\\}$ 中；为最小化，取\n   $$\\sigma(4)=2,\\;\\sigma(5)=4,\\;\\sigma(6)=6。$$\n6.  以单行表示法，\n   $$\\sigma=\\begin{pmatrix}1&2&3&4&5&6\\\\1&3&5&2&4&6\\end{pmatrix}$$\n   其轮换表示法（省略不动点 $1,6$）为\n   $$(2\\ 3\\ 5\\ 4)\\,. $$", "answer": "$$\\boxed{(2\\ 3\\ 5\\ 4)}$$", "id": "61686"}]}