{"hands_on_practices": [{"introduction": "对角线论证法是构造预言机以分离复杂性类的核心技术。本练习让你扮演这样一个证明的设计者，专注于其中关键的决策步骤。通过弄清楚如何设置预言机来“战胜”一个来自较低复杂性类的计算模型，你将亲身体会到那种证明多项式时间层级（Polynomial Hierarchy）可以相对于某个预言机是无限的对抗性逻辑 [@problem_id:1430202]。", "problem": "在计算复杂性理论中，相对化技术通过为所有计算模型提供一个预言机（一个可以在单一步骤内回答特定查询的辅助函数）的访问权限，来探索复杂性类之间的关系。著名的 Baker-Gill-Solovay 定理证明了存在预言机 $A$ 和 $B$，使得 $\\mathrm{P}^A = \\mathrm{NP}^A$ 且 $\\mathrm{P}^B \\neq \\mathrm{NP}^B$。这意味着那些相对化的证明技术（即，无论使用何种预言机都有效）不足以解决 P versus NP 问题。\n\n你的任务是分析一个类似但更通用的构造中的一个关键步骤：构造一个预言机 $A$，该预言机迫使多项式层级 (PH) 是无限的。一个无限的 PH 意味着对于每个整数 $k \\ge 0$，复杂性类 $\\Sigma_k^{\\mathrm{P},A}$ 都真包含于 $\\Sigma_{k+1}^{\\mathrm{P},A}$。\n\n预言机 $A$ 的构造是分阶段进行的。在每个阶段，我们的目标是确保来自层级中较高级别的语言不能被任何来自较低级别的机器所判定。让我们关注这个对角线论证中的一个通用阶段。\n\n**场景：**\n\n设 $A_{current}$ 是在先前阶段已构造的预言机的有限部分。在当前阶段，我们的目标是针对一个特定的机器 $M \\in \\Sigma_k^{\\mathrm{P},A}$ 来对角化一个语言 $L_{k+1}(A) \\in \\Sigma_{k+1}^{\\mathrm{P},A}$。我们选择一个特殊的输入串 $w$，其属性依赖于一个被选得非常大的整数 $n$。\n\n我们将 $w$ 在我们的目标语言 $L_{k+1}(A)$ 中的成员关系设计为依赖于单个、当前尚未决定的“见证”串 $s_w$。具体来说，该构造保证了：\n$$w \\in L_{k+1}(A) \\quad \\iff \\quad s_w \\in A$$\n\n为了实现对角化，我们必须确保 $w \\in L(M^A) \\neq w \\in L_{k+1}(A)$。策略如下：\n\n1.  我们在输入 $w$ 上模拟机器 $M$。由于 $M$ 是一个 $\\Sigma_k^{\\mathrm{P},A}$ 机器，其计算涉及量词和对预言机 $A$ 的访问。\n2.  在模拟过程中，如果 $M$ 查询一个其在 $A$ 中的成员关系已由 $A_{current}$ 确定的字符串，我们使用该答案。对于任何关于新字符串（不包括 $s_w$）的查询，我们暂时回答“否”（即，不在预言机中）。\n3.  设 $Q$ 为此次模拟过程中所有被查询的新字符串的集合。我们精心选择见证串 $s_w$，使其不属于 $Q$。\n4.  模拟完成后，我们决定是否将 $s_w$ 添加到预言机中，从而创建 $A_{next}$。这个决定基于模拟的结果。\n\n**问题：**\n\n以下哪个决策规则能正确确保对于输入 $w$，$L(M^A) \\neq L_{k+1}(A)$，从而成功完成此对角化步骤？\n\nA. 如果 $M(w)$ 的模拟结果是拒绝，我们承诺永远不将 $s_w$ 添加到预言机中。如果模拟结果是接受，我们将 $s_w$ 添加到预言机中。\n\nB. 如果 $M(w)$ 的模拟结果是拒绝，我们将 $s_w$ 添加到预言机中。如果模拟结果是接受，我们承诺永远不将 $s_w$ 添加到预言机中。\n\nC. 无论模拟结果如何，我们都将 $s_w$ 添加到预言机中，因为这保证了 $w \\in L_{k+1}(A)$，并且 $L_{k+1}(A)$ 是更强大的类。\n\nD. 仅当模拟进行了奇数次查询时，我们才将 $s_w$ 添加到预言机中。否则，我们承诺永远不将 $s_w$ 添加到预言机中。\n\nE. 如果 $M(w)$ 的模拟结果是接受，我们找到一个被查询过的、不同的字符串 $s'_w \\in Q$，并将其而不是 $s_w$ 添加到预言机中。如果模拟结果是拒绝，我们则将 $s_w$ 添加到预言机中。", "solution": "我们为固定的 $k \\ge 0$、一个有限的预言机前缀 $A_{current}$、一个目标语言 $L_{k+1}(A) \\in \\Sigma_{k+1}^{\\mathrm{P},A}$ 形式化这个对角化步骤。该语言的构造方式是：对于一个选定的输入 $w$ 存在一个唯一的、尚未决定的见证 $s_{w}$，满足\n$$\nw \\in L_{k+1}(A) \\iff s_{w} \\in A,\n$$\n以及一个特定的机器 $M \\in \\Sigma_{k}^{\\mathrm{P},A}$ 以对其进行对角化。\n\n第一步：使用部分预言机答案在输入 $w$ 上模拟 $M$，方法如下：\n- 如果 $M$ 查询一个字符串 $x$，其在 $A$ 中的成员关系已由 $A_{current}$ 固定，则用该固定值作答。\n- 如果 $M$ 查询一个新字符串 $x \\notin \\mathrm{dom}(A_{current})$，则暂时回答 $x \\notin A$。\n设 $Q$ 是本次模拟中所有被查询的新字符串的集合。根据构造，选择 $s_{w} \\notin Q$。设模拟结果为一个比特 $b \\in \\{0,1\\}$，其中 $b=1$ 表示接受，$b=0$ 表示拒绝。\n\n第二步：将模拟与最终预言机更新后的真实运行联系起来。定义下一个预言机 $A_{next}$，方法是可能将 $s_{w}$ 添加到 $A_{current}$，并保持 $\\mathrm{dom}(A_{current})$ 之外的所有其他字符串为未定义状态，但我们不会改变对 $Q$ 中任何字符串的回答。因为 $s_{w} \\notin Q$，所以添加或不添加 $s_{w}$ 都不会改变 $M$ 在模拟中发出的任何查询的答案。因此，机器在使用预言机 $A_{next}$ 时对 $w$ 的实际判定等于模拟的结果：\n$$\nL(M^{A_{next}})(w) = b.\n$$\n\n第三步：计算预言机更新后目标语言的成员关系。根据 $L_{k+1}(A)$ 的设计，\n$$\nw \\in L_{k+1}(A_{next}) \\iff s_{w} \\in A_{next}.\n$$\n因此，如果我们设定 $s_{w} \\in A_{next}$，那么 $w \\in L_{k+1}(A_{next})$；如果我们设定 $s_{w} \\notin A_{next}$，那么 $w \\notin L_{k+1}(A_{next})$。\n\n第四步：选择更新规则以强制产生分歧。为了确保 $L(M^{A_{next}})(w) \\neq L_{k+1}(A_{next})(w)$，我们必须设定\n$$\ns_{w} \\in A_{next} \\iff b=0,\n$$\n也就是说，当且仅当模拟结果为拒绝时，才将 $s_{w}$ 添加到预言机中，否则不添加 $s_{w}$。\n\n对各选项进行验证：\n- 选项 A 使得 $s_{w} \\in A_{next} \\iff b=1$，这导致了一致，而不是对角化。\n- 选项 B 使得 $s_{w} \\in A_{next} \\iff b=0$，这按要求导致了分歧。\n- 选项 C 总是添加 $s_{w}$，这无法保证产生分歧。\n- 选项 D 将决策与查询的奇偶性挂钩，这与强制产生分歧无关。\n- 选项 E 在 $M$ 接受时添加某个 $s'_{w} \\in Q$；这改变了对 $M$ 实际发出的一个查询的回答，因此 $L(M^{A_{next}})(w)$ 可能与模拟的 $b$ 不同，从而破坏了对角化所需的控制。\n\n因此，正确的规则是选项 B。", "answer": "$$\\boxed{B}$$", "id": "1430202"}, {"introduction": "在学习了如何构造预言机来分离复杂性类之后，我们现在探讨相反的现象。这个实践将展示，通过选择一个足够强大的预言机，我们可以使像 $P^A$ 和 $NP^A$ 这样原本不同的复杂性类变得相等。这个练习对于理解类之间的关系是相对于预言机而言的至关重要，这也是相对化论证局限性的核心信息 [@problem_id:1430179]。", "problem": "Baker-Gill-Solovay定理是计算复杂性理论中的一个基础性成果，它展示了相对化证明技术的局限性。该定理表明，存在预言机 $A$ 和 $B$ 使得 $P^A = NP^A$ 且 $P^B \\neq NP^B$。这意味着任何不受预言机存在与否影响的证明技术（即“相对化”的技术）都无法解决P与NP问题。\n\n你的任务是探究一种预言机的构造，该预言机能迫使多项式层级在其第一层级上塌缩。预言图灵机是一种标准的图灵机，配备了特殊的查询带和查询状态。当机器进入查询状态时，会检查其查询带上的字符串 $q$ 是否属于一个固定的预言语言 $A$。此查询被认为只占用一个计算步骤。我们将 $P^A$ 定义为可由使用预言机 $A$ 的多项式时间确定性预言图灵机判定的语言类，将 $NP^A$ 定义为可由使用预言机 $A$ 的多项式时间非确定性预言图灵机判定的语言类。\n\n从下列语言中选择所有选项，当其作为预言机 $A$ 时，会导致相对化的复杂性类 $P^A$ 和 $NP^A$ 相等。你可以假设所列出的所有语言都是在指数时间（EXPTIME）内可判定的，并且它们各自的完备性属性在多项式时间归约下成立。\n\nA. SAT: 所有可满足的布尔公式的语言。该语言是 NP 完备的。\n\nB. TQBF: 所有真量化布尔公式的语言。该语言是 PSPACE 完备的。\n\nC. PATH: 所有元组 $\\langle G, s, t \\rangle$ 的语言，其中 $G$ 是一个有向图，包含一条从顶点 $s$ 到顶点 $t$ 的路径。该语言是 P 完备的。\n\nD. ALL_NFA: 所有非确定性有限自动机（NFA）$\\langle M \\rangle$ 的语言，这些自动机接受其输入字母表上的所有字符串（即 $L(M) = \\Sigma^*$）。该语言是 PSPACE 完备的。\n\nE. 一个 EXPTIME 完备的语言：任何对于复杂性类 EXPTIME 是完备的语言。", "solution": "我们的任务是判断，对于每个提议的预言语言，将其用作预言机 $A$ 是否会迫使 $P^{A} = NP^{A}$，即，是否会使相对化的多项式层级在其第一层级上塌缩。我们使用标准定义：$P^{A}$ 是带预言机 $A$ 的确定性多项式时间，而 $NP^{A}$ 是带预言机 $A$ 的非确定性多项式时间。我们依赖于（如题所述的）多项式时间多一归约下的完备性，以及标准的闭包性质。\n\n使用的一般原则：\n1) 如果 $A$ 在多项式时间多一归约下对于类 $\\mathcal{C}$ 是完备的，那么对于每个 $L \\in \\mathcal{C}$，都存在一个多项式时间可计算的归约 $f$，使得 $x \\in L$ 当且仅当 $f(x) \\in A$。因此 $L \\in P^{A}$，所以 $\\mathcal{C} \\subseteq P^{A}$。\n2) 如果 $A \\in \\mathcal{C}$ 且 $\\mathcal{C}$ 在多项式时间图灵归约下是闭合的，那么 $P^{A} \\subseteq \\mathcal{C}$，因为一个 $P^{A}$ 的计算可以被一个 $\\mathcal{C}$-机器模拟，该机器在 $\\mathcal{C}$ 内部回答每个预言机查询，并组合多项式数量的此类调用。\n3) 对于带有 $\\mathcal{C}$-预言机的非确定性计算，其中 $\\mathcal{C}$ 至少是 PSPACE 或 EXPTIME，我们利用 $NPSPACE = PSPACE$ (Savitch) 和 EXPTIME 在多项式时间图灵归约下是闭合的，并且可以通过暴力搜索多项式数量的非确定性分支而不超过指数时间。因此，只要 $A \\in \\mathcal{C}$ 且 $\\mathcal{C}$ 具有所述的闭包性质，就有 $NP^{A} \\subseteq \\mathcal{C}$。\n\n我们逐一分析每个选项。\n\nA. $A = SAT$ (NP完备)。\n因为 $SAT$ 是NP完备的，所以 $P^{SAT} = P^{NP} = \\Delta_{2}^{P}$ 并且 $NP^{SAT} = NP^{NP} = \\Sigma_{2}^{P}$。目前尚不清楚 $\\Delta_{2}^{P}$ 是否等于 $\\Sigma_{2}^{P}$。因此，使用 $SAT$ 作为预言机并不能证明会导致 $P^{A} = NP^{A}$，所以我们不能选择此选项。\n\nB. $A = TQBF$ (PSPACE完备)。\n首先，根据完备性，对于任何 $L \\in PSPACE$，都存在一个到 $TQBF$ 的多项式时间多一归约 $f$，所以 $PSPACE \\subseteq P^{A}$。其次，由于 $A \\in PSPACE$ 且 $PSPACE$ 在多项式时间图灵归约下是闭合的，任何 $P^{A}$ 计算都可以在 $PSPACE$ 中模拟，所以 $P^{A} \\subseteq PSPACE$。因此\n$$\nP^{A} = PSPACE.\n$$\n此外，$P^{A} \\subseteq NP^{A}$ 意味着 $PSPACE \\subseteq NP^{A}$。对于反向包含关系，可以通过深度优先遍历一个 $NP^{A}$ 机器的多项式深度计算树来在多项式空间内模拟它，同时在多项式空间内回答每个对 $A \\in PSPACE$ 的预言机查询。因此 $NP^{A} \\subseteq PSPACE$。所以\n$$\nNP^{A} = PSPACE,\n$$\n从而 $P^{A} = NP^{A}$。\n\nC. $A = PATH$ (P完备)。\n由于 $A \\in P$，任何 $P^{A}$ 机器的预言机查询都可以在多项式时间内模拟，得出 $P^{A} = P$。类似地，$NP^{A} = NP$。因此，$P^{A} = NP^{A}$ 将意味着 $P = NP$，而这是未知的。因此，这个预言机不能证明会导致 $P^{A} = NP^{A}$，所以我们不选择此选项。\n\nD. $A = ALL\\_NFA$ (PSPACE完备)。\n与对 $TQBF$ 的论证完全相同。根据完备性和闭包性，我们得到 $P^{A} = PSPACE$ 和 $NP^{A} = PSPACE$，因此 $P^{A} = NP^{A}$。\n\nE. $A$ 是 EXPTIME 完备的。\n根据完备性，对于任何 $L \\in EXPTIME$，都存在一个到 $A$ 的多项式时间多一归约 $f$，所以 $EXPTIME \\subseteq P^{A}$。反过来，确定性地模拟任何 $P^{A}$ 计算：其多项式数量的对 $A$ 的预言机查询中的每一个都可以在指数时间内对多项式长度的输入进行回答，总时间仍为指数级，因此 $P^{A} \\subseteq EXPTIME$。因此\n$$\nP^{A} = EXPTIME.\n$$\n对于 $NP^{A}$，带有 $EXPTIME$ 预言机的非确定性多项式时间可以通过枚举最多 $\\exp(p(n))$ 个分支来在确定性的指数时间内模拟，每个分支由于预言机调用和多项式工作最多耗费 $\\exp(p(n))$ 的时间，使得总时间保持在 $\\exp(q(n))$ 之内。因此 $NP^{A} \\subseteq EXPTIME$，并且由于 $P^{A} = EXPTIME \\subseteq NP^{A}$，我们得出结论\n$$\nNP^{A} = EXPTIME.\n$$\n因此 $P^{A} = NP^{A}$。\n\n结论：\n- B 和 D （均为PSPACE完备的预言机）得出 $P^{A} = NP^{A} = PSPACE$。\n- E （EXPTIME完备的预言机）得出 $P^{A} = NP^{A} = EXPTIME$。\n- 根据现有知识，A 和 C 不能证明得出 $P^{A} = NP^{A}$。\n\n因此，正确的选项是 B, D, 和 E。", "answer": "$$\\boxed{BDE}$$", "id": "1430179"}, {"introduction": "尽管 Baker-Gill-Solovay 定理表明预言机结果可能朝两个方向发展，但并非所有的预言机都具有同等的启发意义。本练习深入探讨了“稠密”（dense）与“稀疏”（sparse）预言机之间的重要区别，要求你思考为什么用稀疏预言机来分离 $P$ 和 $NP$ 是一个更困难且更有意义的挑战。理解这一点将有助于揭示早期预言机结果的局限性，并指明解决真实 P vs NP 问题所需的非相对化技术方向 [@problem_id:1430234]。", "problem": "在计算复杂性理论中，预言机图灵机（oracle Turing Machine）是一种用于研究证明技术局限性的理论模型。一个预言机 $A$ 是一个在固定字母表（例如 $\\{0,1\\}$）上的字符串集合，能够访问此预言机的机器可以在单个计算步骤内确定任何给定字符串是否属于 $A$。我们将可以通过带预言机 $A$ 的确定性机器在多项式时间内解决的判定问题类表示为 $\\text{P}^A$，将可以通过非确定性机器解决的表示为 $\\text{NP}^A$。相对化障碍（relativization barrier），由著名的 Baker-Gill-Solovay 定理所证明，表明存在预言机 $O_1$ 和 $O_2$，使得 $\\text{P}^{O_1} = \\text{NP}^{O_1}$ 且 $\\text{P}^{O_2} \\neq \\text{NP}^{O_2}$。这意味着“相对化”的证明技术（即，对任何可能的预言机都成立的技术）不足以解决基础的 $\\text{P}$ 与 $\\text{NP}$ 问题。\n\n因此，一个主要的研究方向是尝试寻找“非相对化”的证明技术。一种方法是研究 $\\text{P}^A$ 和 $\\text{NP}^A$ 之间的分离如何依赖于预言机 $A$ 的属性。如果存在一个多项式 $p(n)$，使得对于任何非负整数 $n$，在 $S$ 中长度不超过 $n$ 的字符串数量最多为 $p(n)$，则预言机 $S$ 被定义为“稀疏的”(sparse)。形式上， $|S \\cap \\{0,1\\}^{\\le n}| \\le p(n)$。不是稀疏的预言机被称为“稠密的”(dense)。\n\n该领域普遍认为，对于某个稀疏预言机 $S$，证明 $\\text{P}^S \\neq \\text{NP}^S$ 将是朝着解决 $\\text{P}$ 与 $\\text{NP}$ 问题迈出的比 Baker-Gill-Solovay 最初的分离预言机（它是稠密的）更重要的一步。下列哪个陈述为这一信念提供了最好的理由？\n\nA. 已知在 P 类中存在稀疏预言机，所以任何使用稀疏预言机的分离都将直接意味着 P $\\neq$ NP。\n\nB. 证明与稀疏预言机的分离需要本质上非相对化的技术，因为稀疏预言机的存在本身就使 Baker-Gill-Solovay 定理的前提失效。\n\nC. 非确定性机器的计算能力被稠密预言机大大增强，因为它可以轻易地“猜测”一个在预言机中的见证字符串。对于稀疏预言机，这种优势被显著削弱，这意味着分离必须依赖于 P 和 NP 之间更根本的区别。\n\nD. 所有已知的、属于 NP 但被怀疑不属于 P 的现实世界计算问题，都可以用稀疏预言机建模，但不能用稠密预言机建模。\n\nE. 一个多项式时间的确定性机器可以生成一个稀疏预言机中所有长度不超过给定长度的字符串的完整列表，从而有效地抵消了预言机对 NP 机器的效用。", "solution": "我们首先回顾相关的形式化定义。对于任何预言机 $A \\subseteq \\{0,1\\}^{\\ast}$，$\\text{P}^{A}$ 是指在允许对 $A$ 进行单位时间成员资格查询的情况下，可由确定性预言机图灵机在输入长度的多项式时间内解决的判定问题集合，而 $\\text{NP}^{A}$ 是具有不确定性的类似复杂性类。Baker-Gill-Solovay 定理给出了预言机 $O_{1}$ 和 $O_{2}$，使得 $\\text{P}^{O_{1}}=\\text{NP}^{O_{1}}$ 且 $\\text{P}^{O_{2}} \\neq \\text{NP}^{O_{2}}$，这表明相对化的技术无法解决 $\\text{P}$ vs $\\text{NP}$ 问题。\n\n如果存在一个多项式 $p$，使得对于所有 $n \\in \\mathbb{N}$，都有\n$$\n|S \\cap \\{0,1\\}^{\\leq n}| \\leq p(n).\n$$\n那么预言机 $S$ 是稀疏的。相比之下，一个稠密预言机通常包含指数级数量的长度至多为 $n$ 的字符串。例如，长度至多为 $n$ 的二进制字符串总数为\n$$\n\\sum_{i=0}^{n} 2^{i} = 2^{n+1}-1,\n$$\n一个稠密预言机可能包含其中一个常数比例的字符串，即在长度 $n$ 时有 $\\Theta(2^{n})$ 个。\n\n我们现在分析每一个提出的理由：\n\nA. “已知在 $\\text{P}$ 类中存在稀疏预言机”这一说法是正确的，但其结论“所以任何使用稀疏预言机的分离都将直接意味着 $\\text{P} \\neq \\text{NP}$”仅在特定的分离稀疏预言机 $S$ 也满足 $S \\in \\text{P}$ 时才成立。该陈述并未断言用于分离的稀疏预言机会在 $\\text{P}$ 中；此外，问题是要求解释为什么这样的结果会是更重要的一步，而不是说它会直接推导出 $\\text{P} \\neq \\text{NP}$。因此 A 不是正确的理由。\n\nB. 说与稀疏预言机的分离“需要本质上是非相对化的技术”是不正确的。对于一个特定的 $S$，证明 $\\text{P}^{S} \\neq \\text{NP}^{S}$ 仍然是一个相对化的陈述（它是关于相对于那个 $S$ 的计算），它本身既不会使相对化现象失效，也不会强迫使用非相对化的技术。因此 B 是不正确的。\n\nC. 一个非确定性机器可以通过存在性地分支到可能命中预言机中为真的字符串的猜测上来利用稠密预言机，因为存在指数级的机会：如果在长度 $n$ 时有 $\\Theta(2^{n})$ 个预言机中为真的字符串，非确定性分支可以利用这种丰富性，通过短的、预言机中为真的见证来认证成员资格。相比之下，对于稀疏预言机，长度至多为 $n$ 的预言机中为真的字符串数量受 $p(n)$（一个关于 $n$ 的多项式）的限制，所以非确定性机器不能依赖预言机中为真的字符串的“丰富性”来获得能力；任何 $\\text{P}^{S} \\neq \\text{NP}^{S}$ 的分离都必须依赖于确定性计算和非确定性计算之间更内在的区别，而不是一个微不足道的密度效应。这就是为什么稀疏预言机分离被认为是解决 $\\text{P}$ vs $\\text{NP}$ 问题的更强指标的核心启发式理由。因此 C 是最好的理由。\n\nD. 关于“所有已知的现实世界 NP 问题”都可以用稀疏预言机而不是稠密预言机来建模的断言是毫无根据且不正确的；现实世界问题的预言机建模并不受这种方式的限制。因此 D 是错误的。\n\nE. “稀疏”这一属性限制了数量，但没有说明成员资格的可判定性或有效可枚举性。在预言机设定中，$S$ 可以是任意的稀疏集合（甚至是不可判定的），并且没有通用的多项式时间确定性方法可以在没有预言机访问权限的情况下，列出 $S \\cap \\{0,1\\}^{\\leq n}$。因此 E 是错误的。\n\n从这些分析来看，选项 C 提供了最正确和最有说服力的理由。", "answer": "$$\\boxed{C}$$", "id": "1430234"}]}