{"hands_on_practices": [{"introduction": "复杂性类 `co-NP` 是 `NP` 类的“镜像”，它处理的是那些“否定”答案具有可被高效验证的证明（或称“证据”）的问题。本练习将通过逻辑蕴含这一基本概念，帮助你建立对这种对偶性的直观理解。你将通过识别一个“否定”答案的简洁证据，来证明判断一个逻辑公式是否蕴含另一个公式的问题属于 `co-NP` 类 [@problem_id:1417117]。", "problem": "在计算复杂性理论中，问题根据解决它们所需的资源进行分类。复杂性类 **coNP** 包含这样一类判定问题：对于这类问题，一个“否”的答案可以在给定合适证据的情况下被高效地验证。\n\n考虑两个布尔公式之间的逻辑蕴含问题。我们定义一个语言 `CNF_IMPLIES` 如下。该问题的输入是一对布尔公式 $\\langle \\phi_1, \\phi_2 \\rangle$，两者都以 3-合取范式 (3-CNF) 形式给出。一个公式如果是一系列子句的合取（AND），其中每个子句是恰好三个文字的析取（OR），则该公式为 3-CNF 形式。文字是一个变量或其否定。\n\n当且仅当每个满足 $\\phi_1$ 的真值指派也满足 $\\phi_2$ 时，该对 $\\langle \\phi_1, \\phi_2 \\rangle$ 属于语言 `CNF_IMPLIES`。换句话说，$\\phi_1$ 逻辑上蕴含 $\\phi_2$。\n\n下列哪个陈述为将 `CNF_IMPLIES` 语言归入复杂性类 **coNP** 提供了有效的论证？\n\nA. 一个“否”实例（即 $\\phi_1$ 不蕴含 $\\phi_2$）可以在多项式时间内验证。其证据是一个对变量的真值指派。验证者可以使用这个指派在多项式时间内检查它是否满足 $\\phi_1$ 但不满足 $\\phi_2$。\n\nB. 一个“是”实例（即 $\\phi_1$ 蕴含 $\\phi_2$）可以在多项式时间内验证。其证据是 $\\phi_2$ 的一个满足性指派。验证者的工作是确认这个指派也满足 $\\phi_1$。\n\nC. 该问题属于 **coNP**，因为一个确定性算法可以检查所有可能的变量真值指派。由于存在指数级数量的指派，这个检查需要指数时间，这是 **coNP** 中问题的特征。\n\nD. 一个“否”实例可以在多项式时间内验证。这是通过检查公式 $\\phi_1 \\land \\phi_2$ 是否不可满足来完成的。由于判定一个 3-CNF 公式的不可满足性是一个已知的 **coNP** 问题，这使得 `CNF_IMPLIES` 属于 **coNP**。\n\nE. 一个“否”实例可以在多项式时间内验证。其证据是来自 $\\phi_2$ 的一个子句。验证者的任务是检查这个子句是否可以在同时满足所有 $\\phi_1$ 的情况下为假。", "solution": "我们回顾 coNP 的定义：一个语言 $L$ 属于 coNP 当且仅当其补集 $\\overline{L}$ 属于 NP，这等价于以下表述：存在一个多项式时间验证者，对于给定的输入 $x$，当存在一个多项式大小的证据 $y$ 使得验证者在 $|x|$ 的多项式时间内运行并接受 $(x,y)$ 时，该验证者接受 $x \\notin L$。\n\n所讨论的语言是\n$$\n\\text{CNF\\_IMPLIES} = \\{ \\langle \\phi_{1}, \\phi_{2} \\rangle \\mid \\text{每个满足 } \\phi_{1} \\text{ 的指派也满足 } \\phi_{2} \\}.\n$$\n根据逻辑，$\\phi_{1}$ 蕴含 $\\phi_{2}$ 当且仅当 $\\phi_{1} \\land \\lnot \\phi_{2}$ 是不可满足的。等价地，\n$$\n\\langle \\phi_{1}, \\phi_{2} \\rangle \\notin \\text{CNF\\_IMPLIES} \\iff \\exists \\text{ 指派 } a \\text{ 使得 } a \\models \\phi_{1} \\text{ 且 } a \\not\\models \\phi_{2}.\n$$\n因此，一个“否”实例（即不属于该语言）的自然证据正是这样一个指派 $a$。\n\n为了在多项式时间内验证这个证据，验证者接收输入 $\\langle \\phi_{1}, \\phi_{2} \\rangle$（均为 3-CNF 公式）和指派 $a$。验证者通过以下方式在指派 $a$ 下评估 $\\phi_{1}$ 和 $\\phi_{2}$：\n- 对于每个公式中的每个子句，检查其三个文字中是否至少有一个被 $a$ 设置为真；每个子句的时间复杂度为 $O(1)$。\n- 对所有子句进行合取运算以确定整个公式的真值，这需要与公式大小成线性关系的时间。\n因此，总验证时间是输入大小 $|\\langle \\phi_{1}, \\phi_{2} \\rangle|$ 的多项式，并且证据 $a$ 的大小是变量数量的多项式，因此也是输入大小的多项式。这表明 CNF_IMPLIES 的补集属于 NP，因此 CNF_IMPLIES 属于 coNP。\n\n现在评估各个选项：\n- A 精确地陈述了上述论证：一个“否”实例由一个满足 $\\phi_{1}$ 且证伪 $\\phi_{2}$ 的指派来证明，并且这可以在多项式时间内验证。这正确定位了 CNF_IMPLIES 属于 coNP。\n- B 是不正确的：一个满足 $\\phi_{2}$ 同时也满足 $\\phi_{1}$ 的指派并不能证明每个满足 $\\phi_{1}$ 的指派都满足 $\\phi_{2}$。\n- C 是不正确的：coNP 不是由指数时间的确定性检查来定义的；这涉及到像 EXP 这样的时间复杂性类，而不是 coNP。\n- D 在两个方面是不正确的：它使用了 $\\phi_{1} \\land \\phi_{2}$ 而不是逻辑上相关的 $\\phi_{1} \\land \\lnot \\phi_{2}$，并且它错误地识别了不可满足性将证明哪一方（“是”或“否”）。实际上，当且仅当 $\\phi_{1} \\land \\lnot \\phi_{2}$ 是不可满足的时，$\\phi_{1} \\implies \\phi_{2}$ 成立，所以那里的不可满足性将证明一个“是”实例，而不是一个“否”实例。\n- E 的陈述不充分：仅指明 $\\phi_2$ 的单个子句而不提供明确的指派，并不构成一个可验证的证据。除非提供了见证指派，否则验证者无法在多项式时间内从存在性上确认该子句在满足所有 $\\phi_{1}$ 的同时可以被证伪。\n\n因此，只有 A 为将 CNF_IMPLIES 归入 coNP 提供了有效的论证。", "answer": "$$\\boxed{A}$$", "id": "1417117"}, {"introduction": "在多项式层级中更进一步，我们会遇到包含交替量词（alternating quantifiers）的问题，而这类问题可以很自然地用博弈进行建模。本练习通过一个在图上进行的双人“规避”博弈，来向你介绍 $\\Sigma_2^P$ 这个复杂性类。通过分析这个博弈的获胜条件，你将练习如何将一个策略性问题——“先手玩家是否存在一种走法，能够保证无论后手玩家如何应对都能获胜？”——映射到 $\\Sigma_2^P$ 的 $\\exists\\forall$（存在-任意）形式化结构上 [@problem_id:1417140]。", "problem": "在图论中，对于一个图 $G=(V, E)$，**支配集**是一个顶点子集 $S \\subseteq V$，使得每个不在 $S$ 中的顶点都与 $S$ 中至少一个顶点相邻。\n\n考虑以下在给定图 $G=(V,E)$ 和两个指定正整数 $k$ 和 $l$ 上进行的双人博弈，称为**支配集逃脱博弈**。\n\n1.  **玩家1（逃脱者）**选择一个顶点集 $U \\subseteq V$，使得 $|U|=k$。\n2.  **玩家2（支配者）**接着选择一个顶点集 $D \\subseteq V \\setminus U$，使得 $|D|=l$。\n3.  如果合并后的集合 $S = U \\cup D$ **不是** $G$ 的一个支配集，则逃脱者获胜。否则，支配者获胜。\n\n如果逃脱者有获胜策略，则给定的实例 $(G, k, l)$ 被定义为语言 `EVADER_WINS` 的一个成员。也就是说，如果存在一个大小为 $k$ 的集合 $U$，逃脱者可以选择它，使得对于支配者选择的**每一个**可能的大小为 $l$ 的集合 $D$，$U \\cup D$ 都不是一个支配集。\n\n给定以下四个实例，哪一个是 `EVADER_WINS` 的成员？\n\nA. $G_A$ 是一个星形图，其顶点集为 $V_A = \\{c, s_1, s_2, s_3\\}$，边集为 $E_A = \\{(c, s_1), (c, s_2), (c, s_3)\\}$。参数为 $k=1, l=1$。\n\nB. $G_B$ 是一个由三条各有3个顶点的路径的不交并组成的图。其顶点集为 $V_B = \\{a_1, a_2, a_3, b_1, b_2, b_3, c_1, c_2, c_3\\}$，边集为 $E_B = \\{(a_1,a_2), (a_2,a_3), (b_1,b_2), (b_2,b_3), (c_1,c_2), (c_2,c_3)\\}$。参数为 $k=1, l=1$。\n\nC. $G_C$ 是一个5个顶点的完全图 $K_5$。参数为 $k=1, l=1$。\n\nD. $G_D$ 是一个6个顶点的环形图 $C_6$。参数为 $k=1, l=1$。", "solution": "根据定义，一个集合 $S \\subseteq V$ 在图 $G=(V,E)$ 中是支配集，如果 $V \\setminus S$ 中的每个顶点在 $S$ 中至少有一个邻居。在 $k=1$ 和 $l=1$ 的博弈中，逃脱者选择 $U=\\{u\\}$，然后支配者选择 $D=\\{v\\} \\subseteq V \\setminus \\{u\\}$。逃脱者获胜的充要条件是，存在一个顶点 $u \\in V$，使得对于每一个 $v \\in V \\setminus \\{u\\}$，集合 $\\{u,v\\}$ 都不是一个支配集。\n\n实例 A: $G_{A}$ 是一个四顶点的星形图，中心点为 $c$，叶节点为 $s_{1},s_{2},s_{3}$。如果逃脱者选择 $u=c$，那么 $S=\\{c,v\\}$ 包含 $c$，并且由于 $c$ 与所有叶节点相邻，所以对于任何 $v$，$S$ 都能支配 $V$，因此支配者获胜。如果逃脱者选择一个叶节点，比如说 $u=s_{1}$，那么支配者可以选择 $v=c$，而 $S=\\{s_{1},c\\}$ 是支配集，因为 $c$ 支配了所有叶节点。因此，对于每一个 $u$，都存在一个 $v$ 使得 $\\{u,v\\}$ 是支配集，所以逃脱者没有获胜策略。因此 A 不在 $\\text{EVADER\\_WINS}$ 中。\n\n实例 B: $G_{B}$ 是三条各有三个顶点的路径的不交并。在任何图的不交并中，支配集必须与每个连通分量相交，因为一个分量中的顶点在另一个分量中没有邻居。因此，$G_{B}$ 中的任何支配集的大小必须至少等于连通分量的数量，即 3。这里 $|S|=|U \\cup D|=2$，所以无论 $U$ 和 $D$ 如何选择，$S$ 都不可能是一个支配集。特别地，存在一个 $U$（实际上是任何 $U$），使得对于所有的 $D$，$U \\cup D$ 都不是支配集。因此 B 在 $\\text{EVADER\\_WINS}$ 中。\n\n实例 C: $G_{C}=K_{5}$。在一个完全图中，任何单个顶点 $u$ 都与所有其他顶点相邻，所以 $\\{u\\}$ 本身就已经支配了 $V$。因此对于任何 $u$ 和任何 $v \\neq u$，集合 $\\{u,v\\}$ 都是支配集。所以支配者总是获胜，C 不在 $\\text{EVADER\\_WINS}$ 中。\n\n实例 D: $G_{D}=C_{6}$。用模6的整数标记顶点。对于逃脱者选择的任何 $u=i$，支配者可以选择 $v=i+3$（与 $u$ 的图距离为3的顶点）。那么它们的闭邻域满足 $N[u]=\\{i-1,i,i+1\\}$ 和 $N[v]=\\{i+2,i+3,i+4\\}$，因此 $N[u] \\cup N[v]=V$。所以 $\\{u,v\\}$ 是一个支配集。因此，对于每个 $u$，都存在一个 $v$ 使得 $\\{u,v\\}$ 是支配集，所以 D 不在 $\\text{EVADER\\_WINS}$ 中。\n\n因此，在给定的实例中，只有 B 是 $\\text{EVADER\\_WINS}$ 的成员。", "answer": "$$\\boxed{B}$$", "id": "1417140"}, {"introduction": "复杂性类 $\\Pi_2^P$ 是 $\\Sigma_2^P$ 的补集，它非常适合用来描述关于“普适性保证”（universal guarantees）的问题——即某个性质是否在所有可能性下都成立。本练习通过一个计算几何中的安全场景，将这个抽象概念具体化。你的任务是分析一个安全协议的稳健性，这需要判断是否对于“所有”可能出现的威胁，都“存在”一种有效的防御措施，这完美地体现了 $\\Pi_2^P$ 的 $\\forall\\exists$（任意-存在）逻辑 [@problem_id:1417173]。", "problem": "正在为一个高安全性金库评估一种新的安全协议。该金库的平面图被建模为二维平面中的一个多边形 `P`，其内部可能包含若干个不相交的多边形“禁区”（孔洞）。\n\n任意两点之间的可见性由连接它们的直线段定义。仅当该线段完全包含在 `P` 内部时，这条视线才被认为是“直接的”，即它不穿过 `P` 的外部或进入其任何孔洞。\n\n该协议被称为“相互不信任三角定位”（Mutual Distrust Triangulation, MDT），对于给定的平面图 `P`，如果满足以下条件，则认为该协议是成功的：对于入侵者可能在金库有效区域内占据的任何可能位置 `x`，都可以在有效区域内布置两个守卫，其位置分别为 `g_1` 和 `g_2`，使得两个守卫都能直接看到位于 `x` 的入侵者，但这两个守卫之间彼此不能直接看到对方。\n\n你是一位计算复杂性理论家，任务是分类确定给定平面图 `P` 是否满足 MDT 协议这一问题的难度。我们将该判定问题记为 MDT-DECIDABILITY。该问题的输入是多边形 `P`（带孔洞）的几何描述，其中所有顶点的坐标均为有理数。\n\n假设标准复杂性理论猜想成立，例如多项式层级（PH）不坍缩，那么下列哪个陈述最准确地描述了 MDT-DECIDABILITY 的复杂性？\n\nA. MDT-DECIDABILITY 属于 P。\n\nB. MDT-DECIDABILITY 是 NP-完全的。\n\nC. MDT-DECIDABILITY 是 coNP-完全的。\n\nD. MDT-DECIDABILITY 是 $\\Sigma_2^P$-完全的。\n\nE. MDT-DECIDABILITY 是 $\\Pi_2^P$-完全的。\n\nF. MDT-DECIDABILITY 是 PSPACE-完全的。", "solution": "我们使用在多边形域上的点进行量化的量词和一个可在多项式时间内检验的可见性谓词来形式化 MDT 属性。设输入为一个带孔洞的多边形 $P \\subset \\mathbb{R}^{2}$，其顶点坐标为有理数。定义可见性谓词\n$$\n\\mathrm{Vis}_{P}(a,b) \\iff \\overline{ab} \\subseteq P,\n$$\n即从 $a$ 到 $b$ 的闭合线段包含在 $P$ 中（它既不离开 $P$ 也不进入任何孔洞）。对于有理数输入 $a,b$，可以通过检查线段与描述 $P$ 边界的有限边集的交点，在多项式时间内判定 $\\mathrm{Vis}_{P}(a,b)$。\n\n$P$ 的 MDT 条件恰好是以下公式\n$$\n\\forall x \\in P\\;\\exists g_{1} \\in P\\;\\exists g_{2} \\in P:\\; \\mathrm{Vis}_{P}(g_{1},x)\\;\\wedge\\;\\mathrm{Vis}_{P}(g_{2},x)\\;\\wedge\\;\\neg \\mathrm{Vis}_{P}(g_{1},g_{2}).\n$$\n这个量词模式是 $\\forall\\exists$ 形式，其内部的谓词在给定候选点的情况下是多项式时间可判定的。\n\n隶属于 $\\Pi_{2}^{P}$：为了将其置于标准的多项式层级（该层级对多项式长度的字符串进行量化）中，我们论证只需对多项式比特长度的有理数点进行量化即可。多边形 $P$ 由其支撑线具有有理数系数的边定义；这些线以及由输入顶点对所导出的所有线的排列（arrangement）将平面分解为有限个单元（cell），在每个单元内部，与边界的可见性关系在组合上是恒定的。这些单元及其两两相交直线的交点的代表点，都可以选择为比特长度受输入大小多项式界定的有理数坐标点，因为在标准算术下，求解具有有理数系数的 $2\\times 2$ 线性方程组会产生其分子和分母大小受多项式界定的有理数解。因此：\n- 如果 MDT 公式在实数上成立，那么对于每个 $x$，我们可以从可见性单元的一组有限有理数代表点中选择 $x$，同样地，从一个有限有理数集合（例如，导出排列的顶点，或单元边界上合适的有理点）中选择 $g_{1},g_{2}$ 来见证存在量词，而不会改变可见性结果。\n- 如果 MDT 公式不成立，那么存在一个违例的 $x$，它可以被取作某个单元的有理数代表点，在该单元中该失效情况持续存在，并且该代表点的比特长度同样是多项式的。\n\n因此，存在一个多项式时间谓词 $R(P,x,g_{1},g_{2})$，它编码了上述关于 $x,g_{1},g_{2}$ 的有理数编码的三个可见性条件，并且 $P$ 满足 MDT 当且仅当对于某个多项式 $p$ 有\n$$\n\\forall x \\in \\{0,1\\}^{p(n)}\\;\\exists (g_{1},g_{2}) \\in \\{0,1\\}^{p(n)}:\\; R(P,x,g_{1},g_{2})\n$$\n这正是隶属于 $\\Pi_{2}^{P}$ 的定义。\n\n$\\Pi_{2}^{P}$-困难性：我们从经典的 $\\Pi_{2}^{P}$-完全问题 $\\forall\\exists$-SAT进行归约。给定一个合取范式（CNF）的量化布尔公式 $\\Phi(X,Y)$，其中 $X$ 是全称量词变量，$Y$ 是存在量词变量，我们在多项式时间内构造一个带孔洞的多边形 $P_{\\Phi}$，使得：\n- 对 $X$ 的每个赋值，都由入侵者 $x$ 在一系列不相交的“选择”区域中的一个位置来编码，这些区域由可见性走廊和遮挡物布局而成。为每个 $x$ 变量选择一个区域就固定了该变量的真值；通过构造，这些区域之间的可见或遮挡关系以一种组合的方式编码了该赋值。\n- 对 $Y$ 的存在性选择，则由两个守卫 $g_{1},g_{2}$ 在相应的守卫选择构件中的位置来编码。对于每个 $y$ 变量，都有两个守卫放置区域，分别对应于将 $y$ 设置为真或假；通过遮挡物选择性地启用或禁用从这些区域到入侵者位置的可见性，以强制编码的一致性。\n- 对于 $\\Phi$ 的每个子句，都有一个子句构件连接相应的文字（literal）可见性线，使得对于一个固定的 $x$ 赋值（入侵者位置），存在 $g_{1},g_{2}$ 的位置，它们既能看到 $x$ 又互相看不到，当且仅当该子句能被某个对 $Y$ 的选择所满足。“相互不信任”条件 $\\neg \\mathrm{Vis}_{P}(g_{1},g_{2})$ 是通过一个分离的遮挡物结构来强制实现的，该结构迫使任何两个都能看到 $x$ 的守卫处于几何上不兼容的区域，除非一个满足条件的文字为 $g_{1}$ 和 $g_{2}$ 打开了一对“不交叉”的视线。如果对于一个给定的 $x$ 赋值，某个子句对于所有对 $Y$ 的选择都不满足，那么几何结构会迫使任何一对都能看到 $x$ 的守卫也必须能互相看到（或者根本就阻止其中一个看到 $x$），从而对该 $x$ 违背了 MDT 的要求。\n\n这个构造确保了：\n$$\n\\forall X\\;\\exists Y:\\; \\Phi(X,Y)\\;\\;\\Longleftrightarrow\\;\\;\\forall x \\in P_{\\Phi}\\;\\exists g_{1},g_{2} \\in P_{\\Phi}:\\; \\mathrm{Vis}_{P_{\\Phi}}(g_{1},x)\\wedge \\mathrm{Vis}_{P_{\\Phi}}(g_{2},x)\\wedge \\neg \\mathrm{Vis}_{P_{\\Phi}}(g_{1},g_{2}).\n$$\n这些构件仅使用直线可见性和具有多项式比特长度有理数坐标的多边形遮挡物，因此在规定的计算模型下，该归约是有效的。\n\n结合隶属关系和困难性，MDT-DECIDABILITY 是 $\\Pi_{2}^{P}$-完全的。在多项式层级不坍缩的标准猜想下，这排除了其隶属于 $\\mathrm{P}$、$\\mathrm{NP}$、$\\mathrm{coNP}$ 或 $\\Sigma_{2}^{P}$ 的可能性，并且对于此分类任务而言，它的复杂性严格低于 $\\mathrm{PSPACE}$。", "answer": "$$\\boxed{E}$$", "id": "1417173"}]}