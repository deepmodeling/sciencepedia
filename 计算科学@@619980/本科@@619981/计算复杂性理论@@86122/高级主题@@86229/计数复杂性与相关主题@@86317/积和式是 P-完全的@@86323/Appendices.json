{"hands_on_practices": [{"introduction": "矩阵的行列式和积和式在定义上仅相差一个符号项，但它们的计算复杂性却有天壤之别。通过亲手计算一个小型矩阵的行列式和积和式，我们可以直观地体会这一定义上的细微差异如何导致计算过程的不同，并为理解积和式为何难以计算奠定基础。这项基本练习旨在加深你对基于排列的求和公式的理解。[@problem_id:1435361]", "problem": "在计算复杂性理论中，计算矩阵的积和式是复杂性类 $\\text{\\#P}$ 的一个范式问题。对于一个 $n \\times n$ 矩阵 $A = (a_{ij})$，其积和式由以下类似 Leibniz 的公式定义：\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^{n} a_{i, \\sigma(i)}\n$$\n其中 $S_n$ 是集合 $\\{1, 2, \\dots, n\\}$ 的所有排列的集合。这个定义在结构上与行列式的定义非常相似：\n$$\n\\det(A) = \\sum_{\\sigma \\in S_n} \\text{sgn}(\\sigma) \\prod_{i=1}^{n} a_{i, \\sigma(i)}\n$$\n其中 $\\text{sgn}(\\sigma)$ 是排列 $\\sigma$ 的符号（如果 $\\sigma$ 是一个偶排列，则为 $+1$；如果它是一个奇排列，则为 $-1$）。尽管有这种相似性，计算积和式通常比计算行列式要困难得多。\n\n考虑以下 $3 \\times 3$ 整数矩阵 $A$：\n$$\nA = \\begin{pmatrix}\n2 & 1 & 3 \\\\\n4 & 5 & 1 \\\\\n1 & 2 & 2\n\\end{pmatrix}\n$$\n计算 $A$ 的积和式（我们称之为 $p$）和 $A$ 的行列式（我们称之为 $d$）。\n\n你的任务是提供 $p$ 和 $d$ 的值。请将你的最终答案表示为包含两个整数值 $(p \\quad d)$ 的单行矩阵。", "solution": "我们使用以下定义：\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_{3}} \\prod_{i=1}^{3} a_{i,\\sigma(i)}, \\qquad \\det(A) = \\sum_{\\sigma \\in S_{3}} \\text{sgn}(\\sigma) \\prod_{i=1}^{3} a_{i,\\sigma(i)}.\n$$\n对于 $A=\\begin{pmatrix}2 & 1 & 3\\\\ 4 & 5 & 1\\\\ 1 & 2 & 2\\end{pmatrix}$，用单行表示法列出所有 $\\sigma \\in S_{3}$ 并计算相应的乘积：\n- $\\sigma=[1,2,3]$: $a_{1,1}a_{2,2}a_{3,3}=2\\cdot 5\\cdot 2=20$。\n- $\\sigma=[1,3,2]$: $a_{1,1}a_{2,3}a_{3,2}=2\\cdot 1\\cdot 2=4$。\n- $\\sigma=[2,1,3]$: $a_{1,2}a_{2,1}a_{3,3}=1\\cdot 4\\cdot 2=8$。\n- $\\sigma=[2,3,1]$: $a_{1,2}a_{2,3}a_{3,1}=1\\cdot 1\\cdot 1=1$。\n- $\\sigma=[3,1,2]$: $a_{1,3}a_{2,1}a_{3,2}=3\\cdot 4\\cdot 2=24$。\n- $\\sigma=[3,2,1]$: $a_{1,3}a_{2,2}a_{3,1}=3\\cdot 5\\cdot 1=15$。\n\n因此，\n$$\np=\\text{perm}(A)=20+4+8+1+24+15=72.\n$$\n对于行列式，需要包含符号 $\\text{sgn}(\\sigma)$：$\\text{sgn}([1,2,3])=+1$，$\\text{sgn}([1,3,2])=-1$，$\\text{sgn}([2,1,3])=-1$，$\\text{sgn}([2,3,1])=+1$，$\\text{sgn}([3,1,2])=+1$，$\\text{sgn}([3,2,1])=-1$。因此，\n$$\nd=\\det(A)=20-4-8+1+24-15=18.\n$$\n作为交叉检验，我们沿第一行通过余子式展开来计算 $d$：\n$$\nd=2\\,(5\\cdot 2-1\\cdot 2)-1\\,(4\\cdot 2-1\\cdot 1)+3\\,(4\\cdot 2-5\\cdot 1)=2\\cdot 8-1\\cdot 7+3\\cdot 3=16-7+9=18,\n$$\n该结果与通过排列的计算结果一致。\n\n因此，所求的数对为 $(p\\ d)=(72\\ 18)$。", "answer": "$$\\boxed{\\begin{pmatrix} 72 & 18 \\end{pmatrix}}$$", "id": "1435361"}, {"introduction": "虽然计算一般矩阵的积和式是一个难题，但对于具有特定结构的矩阵，计算可能变得非常高效。本练习将探讨上三角矩阵这一特殊情况，你将发现其大量的零元素如何极大地简化了积和式的求和公式。通过这个例子，我们可以理解问题的结构特性是如何从根本上影响其计算复杂性的。[@problem_id:1435400]", "problem": "在计算复杂性理论中，矩阵的积和式（permanent）是与行列式（determinant）密切相关的一个函数。虽然计算行列式是高效的（在复杂性类 P 中），但计算积和式通常被认为是困难的（它是 #P完全 的）。然而，对于某些特殊类型的矩阵，积和式可以被高效地计算。\n\n设 $A$ 是一个 $n \\times n$ 的方阵，其元素表示为 $a_{ij}$。矩阵 $A$ 是一个上三角矩阵，这意味着主对角线以下的所有元素都为零；即，对于所有满足 $i > j$ 的索引 $i, j$，$a_{ij} = 0$。\n\n$A$ 的积和式，记作 $\\text{perm}(A)$，由以下公式定义：\n$$ \\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^{n} a_{i, \\sigma(i)} $$\n其中 $S_n$ 是集合 $\\{1, 2, \\dots, n\\}$ 的所有置换的集合。\n\n根据这个定义，确定一个 $n \\times n$ 上三角矩阵 $A$ 的积和式的简单闭式表达式，用其元素表示。", "solution": "问题要求解一个 $n \\times n$ 上三角矩阵 $A$ 的积和式。积和式的定义如下：\n$$ \\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^{n} a_{i, \\sigma(i)} $$\n这里，$S_n$ 是 $\\{1, 2, \\dots, n\\}$ 的所有置换的集合。这个求和是针对所有 $n!$ 种可能的置换。和中的每一项都是矩阵中 $n$ 个元素的乘积，每行和每列各取一个。\n\n矩阵 $A$ 是上三角矩阵，这意味着对于所有 $i > j$，$a_{ij} = 0$。\n\n我们来分析和中的单个项，它对应于一个特定的置换 $\\sigma \\in S_n$：\n$$ P_{\\sigma} = \\prod_{i=1}^{n} a_{i, \\sigma(i)} = a_{1, \\sigma(1)} a_{2, \\sigma(2)} \\cdots a_{n, \\sigma(n)} $$\n要使这个乘积 $P_\\sigma$ 不为零，乘积中的每个因子 $a_{i, \\sigma(i)}$ 都必须不为零。\n鉴于 $A$ 是上三角矩阵，如果存在任何索引 $i$ 使得 $i > \\sigma(i)$，那么对应的元素 $a_{i, \\sigma(i)}$ 将为零，从而使得整个乘积 $P_\\sigma$ 等于零。\n\n因此，我们只对那些乘积 $P_\\sigma$ 可能不为零的置换 $\\sigma$ 感兴趣。这要求对于每个 $i \\in \\{1, 2, \\dots, n\\}$，都必须满足条件 $i \\le \\sigma(i)$。我们来确定哪些置换满足这个条件。\n\n考虑索引 $i=n$。条件是 $n \\le \\sigma(n)$。因为 $\\sigma(n)$ 必须是 $\\{1, 2, \\dots, n\\}$ 中的一个元素，所以唯一可能性是 $\\sigma(n) = n$。\n\n现在考虑索引 $i=n-1$。条件是 $n-1 \\le \\sigma(n-1)$。因为 $\\sigma$ 是一个置换，并且我们已经知道 $\\sigma(n) = n$，所以 $\\sigma(n-1)$ 的值必须在集合 $\\{1, 2, \\dots, n-1\\}$ 中。满足 $n-1 \\le \\sigma(n-1)$ 的唯一方式是 $\\sigma(n-1) = n-1$。\n\n我们可以通过归纳法继续这个推理。假设对于所有 $j > k$，我们已经证明了 $\\sigma(j) = j$。现在考虑索引 $i=k$。条件是 $k \\le \\sigma(k)$。因为 $\\sigma$ 是一个置换，并且值 $\\{k+1, \\dots, n\\}$ 已经分别赋给了 $\\sigma(k+1), \\dots, \\sigma(n)$，所以 $\\sigma(k)$ 的值必须从集合 $\\{1, 2, \\dots, k\\}$ 中选择。在这个集合中，满足 $k \\le \\sigma(k)$ 的唯一值是 $\\sigma(k) = k$。\n\n通过从 $i=n$ 向下迭代到 $i=1$ 的这个过程，我们发现，对于所有 $i$ 都满足条件 $i \\le \\sigma(i)$ 的唯一置换 $\\sigma$ 是恒等置换，即对于所有 $i \\in \\{1, 2, \\dots, n\\}$，$ \\sigma(i) = i$。\n\n对于任何其他置换 $\\sigma$，必然存在至少一个索引 $i$ 使得 $i > \\sigma(i)$。这是因为如果 $\\sigma$ 不是恒等置换，就必然存在一个最大的索引 $k$ 使得 $\\sigma(k) \\neq k$。由于所有 $j>k$ 都有 $\\sigma(j)=j$，因此 $\\sigma(k)$ 必须小于 $k$。对于这个置换，项 $a_{k, \\sigma(k)}$ 将为零，使得整个乘积为零。\n\n因此，在计算积和式的和中的所有 $n!$ 项中，只有一项是非零的：即对应于恒等置换的项。\n\n对于恒等置换 $\\sigma_{id}$，其中 $\\sigma_{id}(i) = i$，乘积为：\n$$ P_{\\sigma_{id}} = \\prod_{i=1}^{n} a_{i, \\sigma_{id}(i)} = \\prod_{i=1}^{n} a_{i,i} $$\n这是矩阵对角线元素的乘积。\n\n积和式是所有乘积 $P_\\sigma$ 的和。由于其中只有一个不为零，所以这个和就简化为这一个单项。\n$$ \\text{perm}(A) = \\sum_{\\sigma \\in S_n} P_\\sigma = P_{\\sigma_{id}} + \\sum_{\\sigma \\neq \\sigma_{id}} 0 = \\prod_{i=1}^{n} a_{i,i} $$\n因此，上三角矩阵的积和式是其对角线元素的乘积。", "answer": "$$ \\boxed{\\prod_{i=1}^{n} a_{ii}} $$", "id": "1435400"}, {"introduction": "计算复杂性理论中一个迷人的方面是，对问题进行微小的修改有时会极大地改变其难度。本练习探讨了一个经典例子：如果 $A$ 是一个 0-1 矩阵，计算积和式的奇偶性（即 $\\text{perm}(A) \\pmod 2$）是否仍然困难？这个问题将引导你发现积和式与行列式之间一个出人意料的深刻联系，揭示了在模 2 算术下，一个 #P-完备问题如何戏剧性地坍缩为一个多项式时间内可解的问题。[@problem_id:1435370]", "problem": "在计算复杂性理论中，我们研究解决计算问题所需的资源。一个核心问题是计算方阵的积和式。对于一个 $n \\times n$ 矩阵 $A = (a_{i,j})$，其积和式定义为：\n$$ \\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^{n} a_{i, \\sigma(i)} $$\n其中 $S_n$ 是数字集合 $\\{1, 2, \\dots, n\\}$ 的所有排列的集合。这与行列式的定义非常相似，其定义如下：\n$$ \\det(A) = \\sum_{\\sigma \\in S_n} \\text{sgn}(\\sigma) \\prod_{i=1}^{n} a_{i, \\sigma(i)} $$\n其中 $\\text{sgn}(\\sigma)$ 是排列 $\\sigma$ 的符号。\n\n众所周知，计算行列式属于复杂性类 P，这意味着它可以通过确定性算法在多项式时间内解决。相比之下，计算积和式是一个难得多的问题。它是复杂性类 Sharp-P（#P）的典型完备问题，#P是计算非确定性图灵机接受路径数量的函数类。人们普遍认为P是#P的真子集。\n\n一名计算机科学专业的学生面临着计算一个大的 $n \\times n$ 0-1矩阵（其元素为0或1）的积和式的任务。知道这是一个#P-完备问题，该学生决定通过计算积和式模2（即求 $\\text{perm}(A) \\pmod 2$）来简化问题。这个简化后的问题是在求积和式的奇偶性。\n\n下列哪个陈述正确描述了计算0-1矩阵的积和式模2的计算复杂性？\n\nA. 该问题仍然是#P-完备的。\n\nB. 该问题是NP-完备的。\n\nC. 该问题在P中（可在多项式时间内解决）。\n\nD. 该问题是coNP-完备的。\n\nE. 其复杂性是一个开放问题，但据推测它在P之外。", "solution": "题目要求我们确定计算0-1矩阵的积和式模2的计算复杂性。\n\n1. 根据定义，对于一个 $n \\times n$ 矩阵 $A = (a_{i,j})$，\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_{n}} \\prod_{i=1}^{n} a_{i,\\sigma(i)}, \\quad\n\\det(A) = \\sum_{\\sigma \\in S_{n}} \\text{sgn}(\\sigma) \\prod_{i=1}^{n} a_{i,\\sigma(i)}.\n$$\n\n2. 考虑这些表达式模 $2$ 的情况。在域 $\\mathbb{F}_{2}$上，有 $-1 \\equiv 1 \\pmod{2}$。因此，对于每个排列 $\\sigma$，由于其符号 $\\text{sgn}(\\sigma)$ 为 $1$ 或 $-1$，我们总是有 $\\text{sgn}(\\sigma) \\equiv 1 \\pmod{2}$。\n\n3. 将行列式表达式对2取模会消去符号项：\n$$ \\det(A) \\pmod{2} = \\left(\\sum_{\\sigma \\in S_{n}} \\text{sgn}(\\sigma) \\prod_{i=1}^{n} a_{i,\\sigma(i)}\\right) \\pmod{2} = \\left(\\sum_{\\sigma \\in S_{n}} \\prod_{i=1}^{n} a_{i,\\sigma(i)}\\right) \\pmod{2} = \\text{perm}(A) \\pmod{2}. $$\n\n4. 因此，对于任何整数矩阵（特别是任何0-1矩阵），我们有 $\\text{perm}(A) \\equiv \\det(A) \\pmod{2}$。\n\n5. 计算 $\\det(A) \\pmod{2}$ 可以通过在 $\\mathbb{F}_{2}$ 上进行高斯消元（或任何标准的多项式时间行列式算法）在多项式时间内完成。因此，计算 $\\text{perm}(A) \\pmod{2}$ 的问题属于P。\n\n因此，正确的选项是该问题可在多项式时间内解决。", "answer": "$$\\boxed{C}$$", "id": "1435370"}]}