{"hands_on_practices": [{"introduction": "永久值的定义与行列式仅一符号之差，但其计算的复杂性却截然不同。为了直观地理解永久值在计数问题中的作用，本练习将引导你建立一个具体的联系：将一个简单矩阵的永久值与一个著名图论问题——完全二分图中完美匹配的数量——直接对应起来。通过这个实践，你将体会到如何将一个代数表达式 ($\\text{perm}(A)$) 转化为一个组合计数问题的解 [@problem_id:1469032]。", "problem": "一个 $n \\times n$ 矩阵 $A=(a_{ij})$ 的积和式 (permanent) 定义为以下公式：\n$$ \\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^n a_{i, \\sigma(i)} $$\n其中求和项遍历了集合 $\\{1, 2, \\dots, n\\}$ 的所有排列 $\\sigma$。这个量与图论中的计数问题密切相关，构成了复杂性类别 #P 的基础。\n\n考虑一个完全二分图，记作 $K_{n,n}$。该图有两个顶点集 $U = \\{u_1, u_2, \\dots, u_n\\}$ 和 $V = \\{v_1, v_2, \\dots, v_n\\}$，并且集合 $U$ 中的每个顶点与集合 $V$ 中的每个顶点之间都存在一条边。$K_{n,n}$ 中的一个完美匹配是一个包含 $n$ 条边的集合，使得任意两条边都不共享同一个顶点。这种配置将集合 $U$ 中的每个顶点与集合 $V$ 中一个唯一的顶点配对。\n\n你的任务是找出一个 $n \\times n$ 矩阵 $A$，使其积和式 $\\text{perm}(A)$ 正好等于图 $K_{n,n}$ 中不同完美匹配的数量。\n\n以下哪个矩阵对任意整数 $n \\ge 1$ 都满足此条件？设 $J_n$ 为所有元素都为 1 的 $n \\times n$ 矩阵，设 $I_n$ 为 $n \\times n$ 单位矩阵，设 $\\delta_{ij}$ 为克罗内克 δ (Kronecker delta)。\n\nA. 矩阵 $A$ 的元素为 $a_{ij} = n$。\n\nB. 矩阵 $A$ 的元素为 $a_{ij} = 1 - \\delta_{ij}$。\n\nC. 矩阵 $A = I_n$。\n\nD. 矩阵 $A = J_n$。\n\nE. 矩阵 $A$ 的元素为 $a_{ij} = ij$。", "solution": "我们首先将完全二分图 $K_{n,n}$ 中的完美匹配与排列联系起来。一个完美匹配对应一个双射 $f: U \\to V$，该双射可以通过 $f(u_{i}) = v_{\\sigma(i)}$ 与一个排列 $\\sigma \\in S_{n}$ 等同起来。因此，$K_{n,n}$ 中完美匹配的数量就是 $n$ 个元素的排列数，即 $n!$。\n\n我们需要一个矩阵 $A$，使其积和式等于这个数量：\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_{n}} \\prod_{i=1}^{n} a_{i,\\sigma(i)} = n!.\n$$\n\n逐一评估每个选项：\n\n- 选项 D：$A = J_{n}$，其中对所有 $i,j$ 都有 $a_{ij} = 1$。\n对任意 $\\sigma \\in S_{n}$，\n$$\n\\prod_{i=1}^{n} a_{i,\\sigma(i)} = \\prod_{i=1}^{n} 1 = 1.\n$$\n因此，\n$$\n\\text{perm}(J_{n}) = \\sum_{\\sigma \\in S_{n}} 1 = |S_{n}| = n!,\n$$\n这与 $K_{n,n}$ 中完美匹配的数量相符。\n\n- 选项 A：$a_{ij} = n$。\n对任意 $\\sigma$，\n$$\n\\prod_{i=1}^{n} a_{i,\\sigma(i)} = \\prod_{i=1}^{n} n = n^{n},\n$$\n所以\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_{n}} n^{n} = n! \\, n^{n} \\neq n! \\quad \\text{for } n \\ge 2.\n$$\n\n- 选项 B：$a_{ij} = 1 - \\delta_{ij}$ (对角线上为0，非对角线上为1)。\n对任意 $\\sigma$，\n$$\n\\prod_{i=1}^{n} a_{i,\\sigma(i)} = \\prod_{i=1}^{n} (1 - \\delta_{i,\\sigma(i)}) =\n\\begin{cases}\n1, & \\text{if } \\sigma(i) \\ne i \\text{ for all } i, \\\\\n0, & \\text{otherwise}.\n\\end{cases}\n$$\n因此 $\\text{perm}(A)$ 计算的是 $n$ 的错排数，通常记为 $!n$，且\n$$\n\\text{perm}(A) = !n \\neq n! \\quad \\text{for } n \\ge 2.\n$$\n\n- 选项 C：$A = I_{n}$。\n对任意 $\\sigma$，\n$$\n\\prod_{i=1}^{n} a_{i,\\sigma(i)} = \\prod_{i=1}^{n} \\delta_{i,\\sigma(i)} =\n\\begin{cases}\n1, & \\sigma = \\text{id}, \\\\\n0, & \\text{otherwise},\n\\end{cases}\n$$\n所以\n$$\n\\text{perm}(I_{n}) = 1 \\neq n! \\quad \\text{for } n \\ge 2.\n$$\n\n- 选项 E：$a_{ij} = i j$。\n对任意 $\\sigma$，\n$$\n\\prod_{i=1}^{n} a_{i,\\sigma(i)} = \\prod_{i=1}^{n} (i \\, \\sigma(i)) = \\left( \\prod_{i=1}^{n} i \\right)\\left( \\prod_{i=1}^{n} \\sigma(i) \\right) = (n!)^{2},\n$$\n与 $\\sigma$ 无关，因此\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_{n}} (n!)^{2} = n! \\, (n!)^{2} = (n!)^{3} \\neq n! \\quad \\text{for } n \\ge 2.\n$$\n\n只有选项 D 能得出 $\\text{perm}(A) = n!$ 对所有整数 $n \\ge 1$ 都成立，与 $K_{n,n}$ 中完美匹配的数量相符。", "answer": "$$\\boxed{D}$$", "id": "1469032"}, {"introduction": "虽然瓦利安特定理揭示了计算一般矩阵永久值的极端困难性（#P-完备），但这是否意味着所有关于永久值的计算都遥不可及？本练习通过考察一个特殊情况——上三角矩阵——来回答这个问题。你将发现，当问题实例具有特定结构时，其计算复杂度可能会发生戏剧性的降低，从一个看似棘手的问题转变为一个可以在多项式时间内轻松解决的问题 [@problem_id:1469075]。", "problem": "一个元素为 $a_{ij}$ 的 $n \\times n$ 矩阵 $A$ 的积和式 (permanent) 由以下公式定义：\n$$ \\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^n a_{i, \\sigma(i)} $$\n此处，$S_n$ 表示集合 $\\{1, 2, \\dots, n\\}$ 的所有排列的集合。虽然积和式的定义与行列式 (determinant) 相似，但其计算性质却截然不同。Valiant 定理指出，计算积和式的一般问题是 #P-完全的，这意味着它是最难的计数问题之一。\n\n现在，考虑该问题的一个受限版本，我们称之为 TRI-PERM。在 TRI-PERM 问题中，输入矩阵 $A$ 保证是一个上三角矩阵。一个 $n \\times n$ 矩阵 $A$ 是上三角矩阵，如果其主对角线下方所有元素均为零；即，对于所有满足 $i > j$ 的索引对 $(i, j)$，都有 $a_{ij} = 0$。\n\n根据你对计算复杂性的理解，以下哪个类别最能对 TRI-PERM 问题进行分类？假设你熟悉标准复杂性类别的定义。\n\nA. P\n\nB. NP-complete\n\nC. #P-complete\n\nD. L (对数空间)\n\nE. PSPACE-complete", "solution": "我们回顾积和式的定义：\n$$\n\\operatorname{perm}(A)=\\sum_{\\sigma\\in S_{n}}\\prod_{i=1}^{n}a_{i,\\sigma(i)}.\n$$\n假设 $A$ 是上三角矩阵，因此当 $i>j$ 时，$a_{ij}=0$。考虑任意一个排列 $\\sigma\\in S_{n}$。如果对于某个排列 $\\sigma$，存在一个索引 $i$ 使得 $i > \\sigma(i)$，那么根据 $A$ 的上三角性质，$a_{i,\\sigma(i)}=0$，因此对应的乘积项 $\\prod_{i=1}^{n}a_{i,\\sigma(i)}$ 等于 $0$。因此，只有对所有 $i$ 都满足 $\\sigma(i)\\geq i$ 的排列才能贡献非零项。\n\n我们现在证明，对所有 $i$ 都满足 $\\sigma(i)\\geq i$ 的唯一排列是单位排列。确实，将这些不等式求和可得\n$$\n\\sum_{i=1}^{n}\\sigma(i)\\geq \\sum_{i=1}^{n}i.\n$$\n但由于 $\\sigma$ 是 $\\{1,\\dots,n\\}$ 的一个排列，我们有\n$$\n\\sum_{i=1}^{n}\\sigma(i)=\\sum_{i=1}^{n}i.\n$$\n因此，每个不等式 $\\sigma(i)\\geq i$ 都必须取等号，这意味着对所有 $i$ 都有 $\\sigma(i)=i$。因此，只有单位排列有贡献，所以\n$$\n\\operatorname{perm}(A)=\\prod_{i=1}^{n}a_{ii}.\n$$\n\n因此，TRI-PERM 问题简化为计算 $n$ 个对角线元素的乘积。这可以通过一个简单的算法来完成，该算法读取对角线元素并将它们相乘，其运行时间是输入规模的多项式时间。因此，TRI-PERM 属于 P 类。（实际上，它可以在资源消耗非常低的类别中被更高效地计算，但在所提供的选项中，P 是最合适的分类。）", "answer": "$$\\boxed{A}$$", "id": "1469075"}, {"introduction": "瓦利安特定理的核心在于建立#SAT问题与永久值计算之间的归约，其关键技术是“算术化”（arithmetization）——将布尔逻辑公式转化为多项式。本练习让你亲手实践这一过程的最基本步骤：为一个逻辑子句构建一个代数多项式。掌握这个技巧，是理解为何永久值计算能够“编码”并解决另一领域中困难计数问题的关键 [@problem_id:1469070]。", "problem": "在一种新的计算模型中，逻辑变量由其数值对应物表示。具体来说，一个布尔变量 $x_i$ 被映射到一个数值变量 $v_i$，其中当 $x_i$ 为 TRUE 时，$v_i=1$；当 $x_i$ 为 FALSE 时，$v_i=0$。因此，逻辑非 $\\neg x_i$ 由表达式 $1-v_i$ 表示。\n\n您的任务是为一特定的逻辑子句设计一个算术表示。考虑子句 $C = (x_1 \\lor \\neg x_2 \\lor x_3)$。构建一个多元多项式 $P(v_1, v_2, v_3)$，使其具有以下性质：对于变量 $v_1, v_2, v_3$ 的任何一组来自集合 $\\{0, 1\\}$ 的赋值，如果对应的真值赋值满足子句 $C$，则多项式 $P$ 的值为 1，否则为 0。\n\n用关于 $v_1$、$v_2$ 和 $v_3$ 的多项式来表示您的答案。", "solution": "我们用 $v_{i} \\in \\{0,1\\}$ 来编码布尔变量，其中一个文字（literal）为真时其值为 1，为假时其值为 0。子句 $C=(x_{1} \\lor \\neg x_{2} \\lor x_{3})$ 由三个文字组成：\n- $L_{1}=x_{1}$ 映射到 $v_{1}$，\n- $L_{2}=\\neg x_{2}$ 映射到 $1 - v_{2}$，\n- $L_{3}=x_{3}$ 映射到 $v_{3}$。\n\n对于文字 $L_{1},L_{2},L_{3} \\in \\{0,1\\}$，逻辑或（disjunction）满足恒等式\n$$\nL_{1} \\lor L_{2} \\lor L_{3} \\;=\\; 1 - (1 - L_{1})(1 - L_{2})(1 - L_{3}),\n$$\n因为该析取式为假当且仅当所有三个文字都为假，并且对于 $\\{0,1\\}$ 变量，合取（conjunction）对应于乘法。\n\n代入 $L_{1}=v_{1}$、$L_{2}=1 - v_{2}$ 和 $L_{3}=v_{3}$，可得\n$$\nP(v_{1},v_{2},v_{3}) \\;=\\; 1 - \\bigl(1 - v_{1}\\bigr)\\bigl(1 - (1 - v_{2})\\bigr)\\bigl(1 - v_{3}\\bigr)\n\\;=\\; 1 - \\bigl(1 - v_{1}\\bigr) v_{2} \\bigl(1 - v_{3}\\bigr).\n$$\n展开以获得多项式，\n$$\n\\bigl(1 - v_{1}\\bigr) v_{2} \\bigl(1 - v_{3}\\bigr)\n= v_{2}\\bigl(1 - v_{1}\\bigr)\\bigl(1 - v_{3}\\bigr)\n= v_{2}\\bigl(1 - v_{1} - v_{3} + v_{1} v_{3}\\bigr)\n= v_{2} - v_{1} v_{2} - v_{2} v_{3} + v_{1} v_{2} v_{3}.\n$$\n因此，\n$$\nP(v_{1},v_{2},v_{3}) = 1 - \\bigl(v_{2} - v_{1} v_{2} - v_{2} v_{3} + v_{1} v_{2} v_{3}\\bigr)\n= 1 - v_{2} + v_{1} v_{2} + v_{2} v_{3} - v_{1} v_{2} v_{3}.\n$$\n对于任何 $v_{1},v_{2},v_{3} \\in \\{0,1\\}$，该多项式的值为 1 当且仅当 $x_{1}$、$\\neg x_{2}$ 或 $x_{3}$ 中至少有一个为真，否则其值为 0。", "answer": "$$\\boxed{1 - v_{2} + v_{1} v_{2} + v_{2} v_{3} - v_{1} v_{2} v_{3}}$$", "id": "1469070"}]}