{"hands_on_practices": [{"introduction": "要真正理解积和式 (permanent)，一个有效的方法是将其与我们熟悉的行列式 (determinant) 进行比较。这个练习将引导你探索两者在最简单的非平凡情形——$2 \\times 2$ 二进制矩阵——中的关系。通过找出它们的值在何种条件下相等，你将对这两个概念的根本差异有更清晰的认识。[@problem_id:1461350]", "problem": "在用于研究计算问题的简化模型中，我们考虑一类特殊的二分图。这些图的连通性可以用一个 $2 \\times 2$ 矩阵 $A$ 来表示，其中每个元素 $a_{ij}$ 为 $0$ 或 $1$。元素 $1$ 表示存在连接，而 $0$ 表示没有连接。\n\n给定这样一个矩阵 $A = \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix}$，定义了两个重要的函数：\n1.  矩阵的行列式，由 $\\det(A) = ad - bc$ 给出。\n2.  矩阵的积和式，这是一个相关函数，由 $\\text{perm}(A) = ad + bc$ 给出。对于一般矩阵而言，积和式的计算是出了名的困难，并且是计算复杂性理论中的一个核心课题。\n\n你的任务是，对于元素仅取自集合 $\\{0, 1\\}$ 的 $2 \\times 2$ 矩阵，确定其中积和式的值等于行列式的值的矩阵有多少个。", "solution": "设 $A=\\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix}$，其中 $a,b,c,d \\in \\{0,1\\}$。行列式和积和式为\n$$\n\\det(A)=ad-bc, \\quad \\text{perm}(A)=ad+bc.\n$$\n要求 $\\text{perm}(A)=\\det(A)$，可得\n$$\nad+bc=ad-bc \\quad \\Longrightarrow \\quad 2bc=0.\n$$\n由于 $b,c \\in \\{0,1\\}$，我们有 $bc \\in \\{0,1\\}$。在整数上，方程 $2bc=0$ 成立的充要条件是 $bc=0$。因此，条件恰好是 $b$ 和 $c$ 不都为 $1$。\n\n为计算这类矩阵的数量，我们选择满足 $bc=0$ 的 $(b,c)$。共有 $3$ 对这样的组合：$(0,0)$、$(0,1)$ 和 $(1,0)$。对于 $(b,c)$ 的每一种选择，元素 $a$ 和 $d$ 都是自由的，可以各取 $0$ 或 $1$，这给出了 $2 \\times 2 = 4$ 种可能性。因此总数为\n$$\n3 \\times 4 = 12.\n$$\n等价地，从所有 $2^{4}=16$ 个矩阵中，排除那些 $b=c=1$ 的矩阵（由于 $a$ 和 $d$ 是自由的，这种矩阵有 $4$ 个），得到 $16-4=12$。", "answer": "$$\\boxed{12}$$", "id": "1461350"}, {"introduction": "尽管计算一般矩阵的积和式是一个难题，但某些特殊结构可以使问题变得异常简单。本练习将证明，对于上三角矩阵，积和式的计算可以简化为其对角元素的乘积，这恰好与行列式的一个著名性质相呼应。通过这个实践，你将加深对基于排列的积和式定义的理解。[@problem_id:1461317]", "problem": "在计算复杂性理论中，矩阵的积和式（permanent）是一个通常情况下计算困难的函数，这与行列式（determinant）不同。本题探讨一个特例。一个 $n \\times n$ 矩阵 $A = (a_{ij})$ 的积和式定义为：\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^n a_{i, \\sigma(i)}\n$$\n其中 $S_n$ 是集合 $\\{1, 2, \\dots, n\\}$ 的所有排列的集合。\n\n考虑以下 $4 \\times 4$ 上三角矩阵 $M$：\n$$\nM = \\begin{pmatrix}\nm_{11} & m_{12} & m_{13} & m_{14} \\\\\n0 & m_{22} & m_{23} & m_{24} \\\\\n0 & 0 & m_{33} & m_{34} \\\\\n0 & 0 & 0 & m_{44}\n\\end{pmatrix}\n$$\n其中当 $i \\le j$ 时，元素 $m_{ij}$ 是任意非零值，而当 $i > j$ 时，所有元素 $m_{ij}$ 均为零。\n\n使用所提供的定义，计算矩阵 $M$ 的积和式。将你的答案表示为以 $M$ 的元素表示的闭式解析表达式。", "solution": "根据定义，对于一个 $n \\times n$ 矩阵 $A=(a_{ij})$，其积和式为\n$$\n\\operatorname{perm}(A)=\\sum_{\\sigma \\in S_{n}} \\prod_{i=1}^{n} a_{i,\\sigma(i)}.\n$$\n对于给定的 $4 \\times 4$ 上三角矩阵 $M=(m_{ij})$，其中当 $i>j$ 时 $m_{ij}=0$，考虑任意一个排列 $\\sigma \\in S_{4}$。乘积项 $\\prod_{i=1}^{4} m_{i,\\sigma(i)}$ 非零的充要条件是对于所有的 $i$ 都有 $m_{i,\\sigma(i)} \\ne 0$，这要求对于所有 $i \\in \\{1,2,3,4\\}$ 都有 $\\sigma(i) \\ge i$，因为当 $j<i$ 时 $m_{i,j}=0$。因此，只有那些对所有 $i$ 都满足 $\\sigma(i) \\ge i$ 的排列才能对积和式贡献非零项。\n\n我们现在证明，唯一满足对所有 $i$ 都有 $\\sigma(i) \\ge i$ 的排列是单位排列。由于 $\\sigma$ 是 $\\{1,2,3,4\\}$ 的一个排列，\n$$\n\\sum_{i=1}^{4} \\sigma(i)=\\sum_{i=1}^{4} i.\n$$\n因为对所有 $i$ 都有 $\\sigma(i) \\ge i$，所以我们有\n$$\n\\sum_{i=1}^{4} \\bigl(\\sigma(i)-i\\bigr) \\ge 0,\n$$\n但由于两个和相等，上式左边等于 $0$。因此，每一项 $\\sigma(i)-i$ 都必须为零，这意味着对所有 $i$ 都有 $\\sigma(i)=i$。因而，唯一有贡献的排列是单位排列。\n\n将单位排列代入积和式的定义，得到\n$$\n\\operatorname{perm}(M)=\\prod_{i=1}^{4} m_{i,i}=m_{11} m_{22} m_{33} m_{44}.\n$$", "answer": "$$\\boxed{m_{11} m_{22} m_{33} m_{44}}$$", "id": "1461317"}, {"introduction": "现在，让我们深入探讨积和式的计算复杂性，这是该领域的核心主题。这个问题揭示了一个惊人而有力的恒等式：$\\text{perm}(A) \\equiv \\text{det}(A) \\pmod{2}$。通过解决这个问题，你将亲身体会到一个计算上的“难题”如何拥有一个“简单”的版本，从而为你提供一个理解计算复杂性理论中关键概念的绝佳实例。[@problem_id:1461368]", "problem": "在计算复杂性理论中，一个 $n \\times n$ 矩阵 $A = (a_{ij})$ 的积和式（permanent）定义为：\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_n} \\prod_{i=1}^n a_{i, \\sigma(i)}\n$$\n其中 $S_n$是集合 $\\{1, 2, \\dots, n\\}$ 的所有排列的集合。这个定义与行列式的定义非常相似，只是它省略了排列的符号。计算矩阵的积和式是一个众所周知的难题，已知它属于复杂性类 #P-完全（Sharp-P-complete）。这个类别包含了其相应判定问题在 NP 中的计数问题，并且人们认为 #P-完全问题即使对于量子计算机来说也是难解的。\n\n然而，一个显著的恒等式将积和式与行列式对于任何整数项矩阵 $A$ 联系起来：\n$$\n\\text{perm}(A) \\equiv \\text{det}(A) \\pmod{2}\n$$\n计算行列式的问题是已知的可以在多项式时间内求解，这将其置于复杂性类 P（多项式时间）中，这被认为是计算上可行的。\n\n根据这个恒等式，关于计算整数矩阵的积和式模 2 的计算复杂性，最准确的结论是什么？\n\nA. 计算 $\\text{perm}(A) \\pmod{2}$ 仍然是 #P-完全的，因为积和式函数本质上是复杂的。\n\nB. 计算 $\\text{perm}(A) \\pmod{2}$ 可以在多项式时间内完成。\n\nC. 该恒等式意味着 P = #P，从而导致复杂性层级坍塌。\n\nD. 该恒等式仅对元素仅为 0 或 1 的矩阵在计算上有用，并且对于任意整数矩阵没有提供普遍的简化。", "solution": "我们从定义开始。对于一个整数上的 $n \\times n$ 矩阵 $A=(a_{ij})$，积和式和行列式的展开式为\n$$\n\\text{perm}(A) = \\sum_{\\sigma \\in S_{n}} \\prod_{i=1}^{n} a_{i,\\sigma(i)}, \\qquad\n\\det(A) = \\sum_{\\sigma \\in S_{n}} \\operatorname{sgn}(\\sigma)\\prod_{i=1}^{n} a_{i,\\sigma(i)}.\n$$\n考虑模 2 简化，即在环 $R=\\mathbb{Z}/2\\mathbb{Z}$ 中进行运算。在 $R$ 中我们有 $-1 \\equiv 1 \\pmod{2}$。因此，对于每个排列 $\\sigma$，因子 $\\operatorname{sgn}(\\sigma)$ 满足 $\\operatorname{sgn}(\\sigma) \\equiv 1 \\pmod{2}$。由此可得\n$$\n\\det(A) \\equiv \\sum_{\\sigma \\in S_{n}} \\prod_{i=1}^{n} a_{i,\\sigma(i)} \\equiv \\text{perm}(A) \\pmod{2}.\n$$\n因此，对于任何整数矩阵 $A$，$\\text{perm}(A) \\pmod{2}$ 等于 $\\det(A) \\pmod{2}$。\n\n从计算的角度来看，在整数上计算 $\\det(A)$ 或直接在环 $R$ 上计算 $\\det(A) \\bmod 2$ 都可以使用诸如高斯消元法等标准算法在多项式时间内完成，这些算法的运行时间是 $n$ 的多项式。因为 $\\text{perm}(A) \\bmod 2$ 等于 $\\det(A) \\bmod 2$，所以我们可以通过计算 $\\det(A) \\bmod 2$ 来在多项式时间内计算 $\\text{perm}(A) \\bmod 2$。\n\n这并不意味着任何诸如 $\\text{P}=\\#\\text{P}$ 的坍塌；它只表明模为 2 的特定模算术变体是容易的，而精确积和式（以及许多其他模算术变体）仍然是 $\\#\\text{P}$-难的。\n\n因此，最准确的结论是计算 $\\text{perm}(A) \\pmod{2}$ 可以在多项式时间内完成。", "answer": "$$\\boxed{B}$$", "id": "1461368"}]}