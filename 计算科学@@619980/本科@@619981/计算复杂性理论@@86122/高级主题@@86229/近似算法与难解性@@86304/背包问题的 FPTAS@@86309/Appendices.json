{"hands_on_practices": [{"introduction": "理论学习之后，最好的检验方法莫过于亲自动手实践。本练习旨在通过一个具体的小规模实例，带领你逐步走过为背包问题设计的全多项式时间近似方案（FPTAS）的每一个核心步骤。通过追踪数据包选择的场景，你将掌握值缩放（value scaling）和动态规划如何协同工作，从而将抽象的算法转化为具体的求解过程。[@problem_id:1425023]", "problem": "一名网络工程师的任务是优化单次传输突发中要发送的数据包的选择。目标是在不超过传输缓冲区容量的前提下，最大化数据包的总“重要性”。为高效完成此任务，该工程师使用了一个完全多项式时间近似方案 (FPTAS) 的特定实例，该方案通过缩减重要性值来工作。\n\n该值缩放算法的步骤定义如下：\n1.  给定一个包含 $n$ 个项目的集合，其中每个项目 $i$ 都有一个重量 $w_i$ 和一个价值 $v_i$。同时给定一个总重量容量 $W$ 和一个误差容限参数 $\\epsilon$。\n2.  首先，确定所有项目中的最大价值，$V_{\\text{max}} = \\max_i(v_i)$。\n3.  计算缩放因子 $K = \\frac{\\epsilon V_{\\text{max}}}{n}$。\n4.  对于每个项目 $i$，创建一个新的缩放价值 $v'_i = \\lfloor \\frac{v_i}{K} \\rfloor$，其中 $\\lfloor \\cdot \\rfloor$ 是向下取整函数。原始重量 $w_i$ 保持不变。\n5.  使用动态规划，对于每个可能的总缩放价值 $V'$，确定达成它所需的最小总重量。我们将其表示为 $W_{\\text{min}}(V')$。\n6.  从所有可达成的缩放价值 $V'$ 中，找出满足其对应最小重量在容量限制内的最大一个，即 $W_{\\text{min}}(V'_{\\text{best}}) \\le W$。我们称之为 $V'_{\\text{best}}$。\n7.  找出以重量 $W_{\\text{min}}(V'_{\\text{best}})$ 达成 $V'_{\\text{best}}$ 所对应的项目组合，并计算它们**原始**价值的总和。这个总和就是近似的结果。\n\n给定以下四个数据包，及其大小（重量）和重要性分数（价值）：\n-   数据包 1：大小 = 2，重要性 = 60\n-   数据包 2：大小 = 3，重要性 = 70\n-   数据包 3：大小 = 4，重要性 = 90\n-   数据包 4：大小 = 5，重要性 = 120\n\n传输缓冲区的容量为 $W = 8$。误差容限为 $\\epsilon = \\frac{1}{2}$。\n\n通过对此数据仔细执行所述算法，确定被选中传输的数据包集合的总重要性分数。", "solution": "我们给定 $n=4$ 个项目及其重量和价值：$(w_{1},v_{1})=(2,60)$，$(w_{2},v_{2})=(3,70)$，$(w_{3},v_{3})=(4,90)$，$(w_{4},v_{4})=(5,120)$，容量 $W=8$，以及误差容限 $\\epsilon=\\frac{1}{2}$。值缩放算法的执行过程如下。\n\n计算最大价值和缩放因子：\n$$\nV_{\\max}=\\max\\{60,70,90,120\\}=120,\\qquad K=\\frac{\\epsilon V_{\\max}}{n}=\\frac{\\left(\\frac{1}{2}\\right)\\cdot 120}{4}=15.\n$$\n通过 $v'_{i}=\\left\\lfloor \\frac{v_{i}}{K}\\right\\rfloor$ 对价值进行缩放，同时保持重量不变：\n$$\nv'_{1}=\\left\\lfloor \\frac{60}{15}\\right\\rfloor=4,\\quad v'_{2}=\\left\\lfloor \\frac{70}{15}\\right\\rfloor=4,\\quad v'_{3}=\\left\\lfloor \\frac{90}{15}\\right\\rfloor=6,\\quad v'_{4}=\\left\\lfloor \\frac{120}{15}\\right\\rfloor=8.\n$$\n\n定义 $W_{\\min}(V')$ 为达成总缩放价值 $V'$ 所需的最小总重量。初始化 $W_{\\min}(0)=0$，其他情况下 $W_{\\min}(V')=\\infty$，然后逐个项目进行更新。\n\n处理项目 1 $(w_{1}=2,v'_{1}=4)$ 后：\n$$\nW_{\\min}(0)=0,\\quad W_{\\min}(4)=2.\n$$\n\n处理项目 2 $(w_{2}=3,v'_{2}=4)$ 后，与之前的状态组合产生新的候选 $(V',w)$: $(4,3)$ 和 $(8,5)$。取最小值：\n$$\nW_{\\min}(0)=0,\\quad W_{\\min}(4)=\\min\\{2,3\\}=2,\\quad W_{\\min}(8)=5.\n$$\n\n处理项目 3 $(w_{3}=4,v'_{3}=6)$ 后，与现有状态 $(0,0)$, $(4,2)$, $(8,5)$ 相加得到 $(6,4)$, $(10,6)$, $(14,9)$，然后取最小值：\n$$\nW_{\\min}(0)=0,\\quad W_{\\min}(4)=2,\\quad W_{\\min}(6)=4,\\quad W_{\\min}(8)=5,\\quad W_{\\min}(10)=6,\\quad W_{\\min}(14)=9.\n$$\n\n处理项目 4 $(w_{4}=5,v'_{4}=8)$ 后，与现有状态相加得到新的候选 $(8,5)$, $(12,7)$, $(14,9)$, $(16,10)$, $(18,11)$, $(22,14)$，然后取最小值：\n$$\nW_{\\min}(0)=0,\\quad W_{\\min}(4)=2,\\quad W_{\\min}(6)=4,\\quad W_{\\min}(8)=5,\\quad W_{\\min}(10)=6,\\quad W_{\\min}(12)=7,\\quad W_{\\min}(14)=9,\\quad W_{\\min}(16)=10,\\quad W_{\\min}(18)=11,\\quad W_{\\min}(22)=14.\n$$\n\n选择满足 $W_{\\min}(V'_{\\text{best}})\\leq W=8$ 的最大缩放价值 $V'_{\\text{best}}$。可行的价值为 $V'\\in\\{0,4,6,8,10,12\\}$，其对应的重量为 $\\{0,2,4,5,6,7\\}$；其中最大的是\n$$\nV'_{\\text{best}}=12\\quad \\text{with}\\quad W_{\\min}(12)=7\\leq 8.\n$$\n\n重构得到 $V'=12$ 且重量为 $7$ 的组合，该组合包含项目 1 和 4（因为 $v'_{1}+v'_{4}=4+8=12$ 且 $w_{1}+w_{4}=2+5=7$）。它们的原始价值之和是\n$$\nv_{1}+v_{4}=60+120=180.\n$$\n\n因此，该算法选择的数据包的总原始重要性等于 $180$。", "answer": "$$\\boxed{180}$$", "id": "1425023"}, {"introduction": "FPTAS 的核心魅力在于其可在计算效率和解的质量之间进行权衡。这个练习将让你直面这一核心思想，通过调整近似参数 $\\epsilon$ 来量化比较不同策略下的预期运行时间和解的质量保证。通过这个关于货运飞船装载的假设场景，你将深刻理解参数 $\\epsilon$ 在实际应用中的关键作用，以及如何根据任务需求做出明智的选择。[@problem_id:1425003]", "problem": "一个操作团队的任务是为一次任务装载一艘货运飞船。他们有一份包含$n$个可用科学仪器的清单，每种仪器都有特定的质量和科学价值分数。目标是选择这些仪器的一个子集，以在不超过飞船最大有效载荷质量的前提下，最大化总科学价值。这是一个经典的0/1背包问题。\n\n由于0/1背包问题是NP难的，且仪器数量$n$很大，该团队决定使用一个完全多项式时间近似方案（FPTAS）。他们采用的这个特定FPTAS具有以下特点：\n1.  **时间复杂度**：找到一个解的最坏情况运行时间由函数 $T(n, \\epsilon) = C \\cdot \\frac{n^3}{\\epsilon}$ 给出，其中$C$是一个与硬件相关的常数，$n$是仪器的数量，而$\\epsilon$是用户选择的近似参数（$0 < \\epsilon < 1$）。\n2.  **性能保证**：该算法保证其解的总科学价值 $V_{\\text{sol}} \\ge (1-\\epsilon)V_{\\text{opt}}$。即，$V_{\\text{sol}} \\ge (1-\\epsilon)V_{\\text{opt}}$。\n\n该团队针对同一批$n$个仪器考虑了两种不同的策略：\n-   **策略A**：使用近似参数 $\\epsilon_A = 0.60$ 进行一次快速、粗略的估算。\n-   **策略B**：使用近似参数 $\\epsilon_B = 0.15$ 进行一次更仔细、精确的计算。\n\n为了比较这两种策略，请计算以下两个比率：\n1.  策略B与策略A的最坏情况运行时间之比，即 $\\frac{T_B}{T_A}$。\n2.  策略B的最低保证科学价值与策略A的最低保证科学价值之比。我们将此比率称为 $R_V$。\n\n将你的最终答案表示为一对数 $(\\frac{T_B}{T_A}, R_V)$。将最终答案中的每个数字四舍五入到两位有效数字。", "solution": "问题要求我们计算，在两个不同的近似参数$\\epsilon_A$和$\\epsilon_B$下，与用于背包问题的完全多项式时间近似方案（FPTAS）性能相关的两个比率。\n\n**第1部分：运行时间之比**\n\nFPTAS的最坏情况运行时间由以下公式给出：\n$$T(n, \\epsilon) = C \\frac{n^3}{\\epsilon}$$\n其中$n$是仪器的数量，而$C$是一个常数。给定两种策略，具有不同的$\\epsilon$值：\n-   策略A：$\\epsilon_A = 0.60$\n-   策略B：$\\epsilon_B = 0.15$\n\n策略A的运行时间 $T_A$ 是：\n$$T_A = T(n, \\epsilon_A) = C \\frac{n^3}{\\epsilon_A}$$\n\n策略B的运行时间 $T_B$ 是：\n$$T_B = T(n, \\epsilon_B) = C \\frac{n^3}{\\epsilon_B}$$\n\n我们需要求出比率 $\\frac{T_B}{T_A}$。\n$$\\frac{T_B}{T_A} = \\frac{C \\frac{n^3}{\\epsilon_B}}{C \\frac{n^3}{\\epsilon_A}}$$\n\n项 $C$ 和 $n^3$ 会被消去，因为它们对于两种策略是相同的。\n$$\\frac{T_B}{T_A} = \\frac{1/\\epsilon_B}{1/\\epsilon_A} = \\frac{\\epsilon_A}{\\epsilon_B}$$\n\n现在，我们代入$\\epsilon_A$和$\\epsilon_B$的给定数值：\n$$\\frac{T_B}{T_A} = \\frac{0.60}{0.15} = 4$$\n\n因此，策略B的最坏情况运行时间是策略A的4倍。\n\n**第2部分：最低保证价值之比**\n\nFPTAS的性能保证指出，解的价值 $V_{\\text{sol}}$ 至少是最优值 $V_{\\text{opt}}$ 的 $(1-\\epsilon)$ 倍：\n$$V_{\\text{sol}} \\ge (1-\\epsilon)V_{\\text{opt}}$$\n\n因此，最低保证价值为 $(1-\\epsilon)V_{\\text{opt}}$。\n\n对于策略A，其最低保证价值，我们可以称之为 $V_{\\text{min},A}$，是：\n$$V_{\\text{min},A} = (1-\\epsilon_A)V_{\\text{opt}}$$\n\n对于策略B，其最低保证价值 $V_{\\text{min},B}$ 是：\n$$V_{\\text{min},B} = (1-\\epsilon_B)V_{\\text{opt}}$$\n\n问题要求计算这些最低保证价值的比率 $R_V = \\frac{V_{\\text{min},B}}{V_{\\text{min},A}}$。\n$$R_V = \\frac{(1-\\epsilon_B)V_{\\text{opt}}}{(1-\\epsilon_A)V_{\\text{opt}}}$$\n\n项 $V_{\\text{opt}}$ 是给定问题实例的真实最优值，在两种情况下是相同的，因此它会被消去。\n$$R_V = \\frac{1-\\epsilon_B}{1-\\epsilon_A}$$\n\n代入$\\epsilon_A$和$\\epsilon_B$的数值：\n$$R_V = \\frac{1 - 0.15}{1 - 0.60} = \\frac{0.85}{0.40}$$\n$$R_V = 2.125$$\n\n题目要求四舍五入到两位有效数字。\n第一个比率，4，可以写作 $4.0$ 来表示两位有效数字。\n第二个比率， $2.125$，四舍五入到两位有效数字是 $2.1$。\n\n因此，最终答案以数对 $(\\frac{T_B}{T_A}, R_V)$ 的形式表示为 $(4.0, 2.1)$。", "answer": "$$\\boxed{\\begin{pmatrix} 4.0 & 2.1 \\end{pmatrix}}$$", "id": "1425003"}, {"introduction": "一个算法的鲁棒性不仅体现在常规应用中，更体现在对边界条件的深刻理解上。本练习是一个概念性的“压力测试”，通过探讨当误差参数 $\\epsilon \\geq 1$ 这一非常规选择时会发生什么，来检验你对 FPTAS 性能保证的真正理解。这有助于你明确该算法理论保证的适用边界，并加深对近似比公式 $V_{ALG} \\geq (1-\\epsilon)V_{OPT}$ 内涵的认识。[@problem_id:1425012]", "problem": "考虑0-1背包问题：我们给定一个包含$n$个物品的集合，其中物品$i$具有正整数价值$v_i$和正整数重量$w_i$。我们还有一个最大重量容量为$W$的背包。目标是选择一个物品子集，在不超过重量容量$W$的前提下，最大化总价值。\n\n由于此问题是NP难的，因此通常使用近似算法。一种常见的算法是完全多项式时间近似方案（FPTAS）。对于任意给定的误差参数 $\\epsilon > 0$，该FPTAS能找到一个总价值为$V_{ALG}$的解，该解满足保证$V_{ALG} \\geq (1-\\epsilon)V_{OPT}$，其中$V_{OPT}$是最优解的价值。此FPTAS的运行时间是输入规模$n$和$1/\\epsilon$的多项式，具体由$T(n, \\epsilon) = O\\left(\\frac{n^3}{\\epsilon}\\right)$给出。\n\n一名学生正在对该FPTAS进行实验，但与标准做法相反，他决定使用一个大于或等于1的误差参数$\\epsilon$来运行它。以下哪个陈述最能描述这一选择的理论后果？\n\nA. 算法的运行时间是$n$的多项式时间（具体为$O(n^3)$或更快），但近似保证$V_{ALG} \\geq (1-\\epsilon)V_{OPT}$变得无意义，无法提供任何关于解相对于最优解的质量保证。\n\nB. 算法的运行时间会减少，且近似保证会变得更强，确保解比$\\epsilon < 1$时更接近最优值$V_{OPT}$。\n\nC. 算法将产生一个保证值至少为0的解，但其运行时间将变为$n$的指数级，因为参数$\\epsilon$超出了其预期的$(0, 1)$范围。\n\nD. 算法不保证终止或产生有效解（即满足重量容量$W$限制的解），因为FPTAS的理论基础依赖于$\\epsilon$是一个小的正分数。\n\nE. 近似保证失效，但算法的运行时间与$\\epsilon$是小分数的情况相比保持不变，因为复杂度主要由$n^3$项决定。", "solution": "我们给定一个用于0-1背包问题的FPTAS，其保证和运行时间如下：\n$$\nV_{ALG} \\geq (1-\\epsilon) V_{OPT}, \\quad T(n,\\epsilon) = O\\!\\left(\\frac{n^{3}}{\\epsilon}\\right).\n$$\n考虑学生选择的$\\epsilon \\geq 1$。\n\n首先，分析近似界限。对于$\\epsilon \\geq 1$，\n$$\n1 - \\epsilon \\leq 0.\n$$\n由于物品价值是正整数，任何可行解的总价值都是非负的，特别是空集产生的价值为0，因此\n$$\nV_{ALG} \\geq 0.\n$$\n因为$V_{OPT} \\geq 0$，我们有\n$$\n(1-\\epsilon) V_{OPT} \\leq 0.\n$$\n因此，形式上的保证\n$$\nV_{ALG} \\geq (1-\\epsilon) V_{OPT}\n$$\n简化为一个无意义的陈述，即$V_{ALG} \\geq$一个非正数，这对于解与$V_{OPT}$的接近程度没有提供任何有意义的保证。因此，当$\\epsilon \\geq 1$时，近似保证变得无意义。\n\n其次，分析运行时间。给定的运行时间是\n$$\nT(n,\\epsilon) = O\\!\\left(\\frac{n^{3}}{\\epsilon}\\right).\n$$\n对于$\\epsilon \\geq 1$，我们有$\\frac{1}{\\epsilon} \\leq 1$，因此\n$$\nT(n,\\epsilon) = O\\!\\left(\\frac{n^{3}}{\\epsilon}\\right) \\subseteq O(n^{3}).\n$$\n所以，该算法的运行时间仍然是$n$的多项式时间，最多为$O(n^{3})$，并且随着$\\epsilon$的增加可能会更快。\n\n算法的可行性和终止性不依赖于$\\epsilon < 1$；FPTAS的构造会继续产生一个满足背包容量限制的可行解，唯一的后果是当$\\epsilon \\geq 1$时失去了有意义的近似因子。\n\n综合以上分析，正确的描述是运行时间是$n$的多项式时间（不差于$O(n^{3})$，可能更快），并且近似保证变得无意义。\n\n这对应于选项A。", "answer": "$$\\boxed{A}$$", "id": "1425012"}]}