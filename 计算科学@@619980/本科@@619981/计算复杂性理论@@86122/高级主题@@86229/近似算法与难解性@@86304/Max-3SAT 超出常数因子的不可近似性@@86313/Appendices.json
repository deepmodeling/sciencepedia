{"hands_on_practices": [{"introduction": "MAX-3SAT 的 $7/8$ 近似比不仅是一个理论上的硬度阈值，同时也是一个可以通过简单算法达到的界限。这个练习将带你实践一个将随机算法转化为确定性算法的经典技巧——条件期望法。通过一步步计算，你将亲手为一个具体的 3-CNF 公式确定变量赋值，从而直观地理解为何 $7/8$ 是一个“可实现”的近似比，并掌握一种在算法设计中非常有用的去随机化方法 [@problem_id:1428172]。", "problem": "最大3可满足性（MAX-3SAT）问题要求为一个布尔变量集合找到一个真值指派，以最大化一个给定的3合取范式（3-CNF）公式中被满足的子句数量。一个3-CNF公式是由 AND 运算符（$\\land$）连接的子句的集合，其中每个子句由 OR 运算符（$\\lor$）连接的恰好三个文字组成，而一个文字是一个变量或其否定。\n\n考虑一个解决此问题的简单随机算法：对每个变量，以0.5的概率为其赋值 `true`，以0.5的概率为其赋值 `false`，且与所有其他变量的赋值独立。已知该算法在期望上能满足总子句数的 $7/8$。\n\n我们可以设计一个确定性过程，其性能至少能达到这个水平。该过程按顺序为变量 $x_1, x_2, \\ldots, x_n$ 指派真值。对于第一个变量 $x_1$，它在两种情况下计算被满足子句的总期望数：一种是假设 $x_1$ 被设为 `true`，另一种是假设 $x_1$ 被设为 `false`。在这两种情况下，其余的变量 $x_2, \\ldots, x_n$ 仍被视为随机的（即，每个变量以0.5的概率被赋值 `true` 或 `false`）。然后，该过程将 $x_1$ 永久地设置为能产生更大期望满足子句数的那个值。如果出现平局，则将该变量设置为 `true`。然后对 $x_2$ 重复此过程，这取决于为 $x_1$ 选择的值，并以此类推，对所有变量都执行此过程。\n\n给定以下包含四个变量和四个子句的3-CNF公式 $\\phi$：\n$$ \\phi = (x_1 \\lor x_2 \\lor \\neg x_3) \\land (\\neg x_1 \\lor \\neg x_2 \\lor x_4) \\land (x_1 \\lor \\neg x_3 \\lor \\neg x_4) \\land (\\neg x_1 \\lor x_2 \\lor x_3) $$\n\n根据所述确定性过程的第一步，以下哪个陈述是正确的？\n\nA. $x_1$ 被设为 `true`，新的期望满足子句数为 3.25。\n\nB. $x_1$ 被设为 `true`，新的期望满足子句数为 3.5。\n\nC. $x_1$ 被设为 `false`，新的期望满足子句数为 3.25。\n\nD. $x_1$ 被设为 `false`，新的期望满足子句数为 3.5。\n\nE. 该过程在第一步无法确定 $x_1$ 的值。", "solution": "该问题要求我们应用确定性过程的第一步，来确定变量 $x_1$ 的设置以及由此产生的期望满足子句数。这个过程是条件期望法的一个应用。\n\n将四个子句表示为：\n$C_1 = x_1 \\lor x_2 \\lor \\neg x_3$\n$C_2 = \\neg x_1 \\lor \\neg x_2 \\lor x_4$\n$C_3 = x_1 \\lor \\neg x_3 \\lor \\neg x_4$\n$C_4 = \\neg x_1 \\lor x_2 \\lor x_3$\n\n设 $S$ 为代表被满足子句总数的随机变量。我们想要计算条件期望 $E[S | x_1=\\text{true}]$ 和 $E[S | x_1=\\text{false}]$。假设其余变量 $x_2, x_3, x_4$ 是随机的，每个变量以 $0.5$ 的概率取值为 `true` 或 `false`。\n\n根据期望的线性性质，期望满足子句数是每个子句被满足的概率之和。设 $S_i$ 是一个指示变量，如果子句 $C_i$ 被满足，则为 1，否则为 0。那么 $S = S_1 + S_2 + S_3 + S_4$，且 $E[S | \\cdot] = \\sum_{i=1}^4 E[S_i | \\cdot] = \\sum_{i=1}^4 P(C_i \\text{ 被满足 } | \\cdot)$。\n\n首先，我们计算在 $x_1$ 被设为 `true` 的条件下，期望满足子句数。\n$E[S | x_1=\\text{true}] = \\sum_{i=1}^4 P(C_i \\text{ 被满足 } | x_1=\\text{true})$\n\n-   对于 $C_1 = x_1 \\lor x_2 \\lor \\neg x_3$：由于 $x_1$ 为 `true`，无论 $x_2$ 和 $x_3$ 的值如何，该子句都被满足。所以，$P(C_1 \\text{ 被满足 } | x_1=\\text{true}) = 1$。\n-   对于 $C_2 = \\neg x_1 \\lor \\neg x_2 \\lor x_4$：当 $x_1=\\text{true}$ 时，该子句变为 $\\text{false} \\lor \\neg x_2 \\lor x_4$，可简化为 $\\neg x_2 \\lor x_4$。只有当 $\\neg x_2$ 和 $x_4$ 都为假，即 $x_2=\\text{true}$ 且 $x_4=\\text{false}$ 时，该子句才不被满足。由于 $x_2$ 和 $x_4$ 是独立的随机变量，此事件的概率为 $P(x_2=\\text{true}) \\times P(x_4=\\text{false}) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$。该子句被满足的概率为 $1 - \\frac{1}{4} = \\frac{3}{4}$。\n-   对于 $C_3 = x_1 \\lor \\neg x_3 \\lor \\neg x_4$：由于 $x_1$ 为 `true`，该子句被满足。所以，$P(C_3 \\text{ 被满足 } | x_1=\\text{true}) = 1$。\n-   对于 $C_4 = \\neg x_1 \\lor x_2 \\lor x_3$：当 $x_1=\\text{true}$ 时，该子句变为 $\\text{false} \\lor x_2 \\lor x_3$，可简化为 $x_2 \\lor x_3$。只有当 $x_2$ 和 $x_3$ 都为假时，该子句才不被满足。此事件的概率为 $P(x_2=\\text{false}) \\times P(x_3=\\text{false}) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$。该子句被满足的概率为 $1 - \\frac{1}{4} = \\frac{3}{4}$。\n\n将这些概率相加，得到期望满足子句的总数：\n$E[S | x_1=\\text{true}] = 1 + \\frac{3}{4} + 1 + \\frac{3}{4} = 2 + \\frac{6}{4} = 2 + 1.5 = 3.5$。\n\n接下来，我们计算在 $x_1$ 被设为 `false` 的条件下，期望满足子句数。\n$E[S | x_1=\\text{false}] = \\sum_{i=1}^4 P(C_i \\text{ 被满足 } | x_1=\\text{false})$\n\n-   对于 $C_1 = x_1 \\lor x_2 \\lor \\neg x_3$：当 $x_1=\\text{false}$ 时，该子句变为 $x_2 \\lor \\neg x_3$。如果 $x_2=\\text{false}$ 且 $\\neg x_3=\\text{false}$（即 $x_3=\\text{true}$），则该子句不被满足。其概率为 $\\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$。被满足的概率为 $1 - \\frac{1}{4} = \\frac{3}{4}$。\n-   对于 $C_2 = \\neg x_1 \\lor \\neg x_2 \\lor x_4$：由于 $x_1=\\text{false}$，$\\neg x_1$ 为 `true`，所以该子句被满足。$P(C_2 \\text{ 被满足 } | x_1=\\text{false}) = 1$。\n-   对于 $C_3 = x_1 \\lor \\neg x_3 \\lor \\neg x_4$：当 $x_1=\\text{false}$ 时，该子句变为 $\\neg x_3 \\lor \\neg x_4$。如果 $\\neg x_3=\\text{false}$ 且 $\\neg x_4=\\text{false}$（即 $x_3=\\text{true}$ 且 $x_4=\\text{true}$），则该子句不被满足。其概率为 $\\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$。被满足的概率为 $1 - \\frac{1}{4} = \\frac{3}{4}$。\n-   对于 $C_4 = \\neg x_1 \\lor x_2 \\lor x_3$：由于 $x_1=\\text{false}$，$\\neg x_1$ 为 `true`，所以该子句被满足。$P(C_4 \\text{ 被满足 } | x_1=\\text{false}) = 1$。\n\n将这些概率相加，得到期望满足子句的总数：\n$E[S | x_1=\\text{false}] = \\frac{3}{4} + 1 + \\frac{3}{4} + 1 = 2 + \\frac{6}{4} = 2 + 1.5 = 3.5$。\n\n我们得到 $E[S | x_1=\\text{true}] = 3.5$ 且 $E[S | x_1=\\text{false}] = 3.5$。这两个期望值相等。问题陈述中说明了“如果出现平局，则将该变量设置为 `true`。”因此，该过程将 $x_1$ 设置为 `true`。由此产生的期望满足子句数为 3.5，其余变量的指派将以此为条件。\n\n这对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1428172"}, {"introduction": "MAX-3SAT 近似难度的来源是计算复杂性理论中的基石——PCP 定理。这个练习旨在揭示 PCP 系统的参数（如完备性 $c$ 和可靠性 $s$）与 MAX-3SAT 近似间隙之间的直接数学联系。通过分析一个假设的、具有不完美完备性的 PCP 系统，你将计算出新的不可近似间隙，从而深刻理解 PCP 定理的证明是如何通过归约转化为对具体优化问题的硬度结论的 [@problem_id:1428181]。", "problem": "在计算复杂性理论中，概率可检验证明 (PCP) 定理是证明近似困难性结果的基石。该定理的标准版本等价于陈述 NP = PCP(log n, 1)，它导出了著名的关于最大3-可满足性 (MAX-3SAT) 问题的不可近似性结果。该结果确立了，对于任意 $\\epsilon > 0$，区分一个完全可满足的3-合取范式 (3-CNF) 公式与一个至多只有 $7/8 + \\epsilon$ 比例的子句可以被满足的公式是NP难的。\n\n这个结果是通过从一个NP中的语言到MAX-3SAT的归约得出的。该归约将一个PCP验证者转换为一个3-CNF公式。一种基于3比特查询验证者的常见构造方法如下：对于验证者的每一个可能的随机串，都会生成一个由8个不同的3-CNF子句组成的小块。如果验证者对查询的3个比特的局部测试通过，那么该块中的所有8个子句都可以被满足。如果测试失败，任何赋值最多只能满足这8个子句中的7个。\n\n标准的PCP验证者具有完美完备性（对于YES实例，接受概率 $c=1$）和可靠性 $s < 1$（例如，对于NO实例，$s=1/2$）。\n\n现在，考虑一个假设的、较弱的PCP系统，其特征由以下参数描述：\n-   **完备性, $c$**: 对于任何YES实例，存在一个证明，使得验证者以恰好 $c = 0.9$ 的概率接受。\n-   **可靠性, $s$**: 对于任何NO实例，任何证明都将使验证者以至多 $s = 0.5$ 的概率接受。\n\n假设我们将上述相同的归约应用于这个假设的PCP系统。这个过程为MAX-3SAT创造了一个间隙，使得区分至少有 $G_c$ 比例子句可满足的实例和至多有 $G_s$ 比例子句可满足的实例成为NP难问题。\n\n确定代表这个新的不可近似性间隙的数值对 $(G_c, G_s)$。\n\nA. (0.9000, 0.5000)\n\nB. (0.9875, 0.9375)\n\nC. (1.0000, 0.9375)\n\nD. (0.9125, 0.5625)\n\nE. (0.8875, 0.9375)", "solution": "问题要求我们基于一个具有不完美完备性的假设PCP系统，来确定MAX-3SAT的新的不可近似性间隙 $(G_c, G_s)$。从PCP系统到MAX-3SAT实例的归约具有特定的属性：验证者的每个随机串对应一个由8个子句组成的块。如果局部测试通过，所有8个子句都可满足。如果失败，最多只有8个中的7个可满足。\n\n首先，我们来计算YES实例的可满足性阈值，我们将其表示为 $G_c$。\n一个YES实例对应于PCP系统的完备性情况。根据定义，对于一个YES实例，存在一个证明，使得验证者以概率 $c=0.9$ 接受。验证者的接受概率是导致局部测试接受的随机串的比例。\n- 比例为 $c$ 的子句块对应于接受的测试。对于这些块，8个子句中的所有8个都可以被满足。对可满足子句总比例的贡献是 $c \\times \\frac{8}{8} = c \\times 1$。\n- 剩下的比例为 $1-c$ 的子句块对应于拒绝的测试。对于这些块，最多有8个子句中的7个可以被满足。来自这些块的贡献是 $(1-c) \\times \\frac{7}{8}$。\n\n因此，在YES实例中可满足子句的最大比例 $G_c$ 是这些贡献的总和：\n$$G_c = c \\cdot 1 + (1-c) \\cdot \\frac{7}{8}$$\n代入给定的值 $c = 0.9$:\n$$G_c = 0.9 + (1 - 0.9) \\cdot \\frac{7}{8}$$\n$$G_c = 0.9 + 0.1 \\cdot 0.875$$\n$$G_c = 0.9 + 0.0875 = 0.9875$$\n\n接下来，我们计算NO实例的可满足性阈值，我们将其表示为 $G_s$。\n一个NO实例对应于PCP系统的可靠性情况。对于任何NO实例，对于任何所谓的证明，验证者以至多 $s=0.5$ 的概率接受。为了找到可满足子句比例的上限，我们考虑区分的最坏情况，也就是敌手试图满足尽可能多子句的最好情况。这种情况发生在接受概率恰好为 $s$ 时。\n- 至多有比例为 $s$ 的子句块对应于接受的测试。这些块可以被完全满足，对可满足子句总比例的贡献为 $s \\times \\frac{8}{8} = s \\times 1$。\n- 剩下的比例为 $1-s$ 的子句块对应于拒绝的测试，其中最多有8个子句中的7个可以被满足。它们对总比例的贡献为 $(1-s) \\times \\frac{7}{8}$。\n\n因此，在NO实例中可满足子句的最大比例 $G_s$ 是：\n$$G_s = s \\cdot 1 + (1-s) \\cdot \\frac{7}{8}$$\n代入给定的值 $s = 0.5$:\n$$G_s = 0.5 + (1 - 0.5) \\cdot \\frac{7}{8}$$\n$$G_s = 0.5 + 0.5 \\cdot 0.875$$\n$$G_s = 0.5 + 0.4375 = 0.9375$$\n\n所以，新的不可近似性间隙由数值对 $(G_c, G_s) = (0.9875, 0.9375)$ 定义。这意味着区分至少有 98.75% 子句可满足的3-CNF公式和至多有 93.75% 子句可满足的3-CNF公式是NP难的。\n\n将我们的结果与给定选项进行比较：\nA. (0.9000, 0.5000) - 这错误地假设了间隙就是 $(c, s)$。\nB. (0.9875, 0.9375) - 这与我们的计算相符。\nC. (1.0000, 0.9375) - 这正确地计算了 $G_s$ 但错误地假设了完美完备性 ($c=1$)。\nD. (0.9125, 0.5625) - 如果在计算失败块中可满足子句的比例时使用 $1/8$ 而不是 $7/8$，将会得到这个结果。\nE. (0.8875, 0.9375) - 这正确地计算了 $G_s$ 但在计算 $G_c$ 时出错了。\n\n正确的选项是 B。", "answer": "$$\\boxed{B}$$", "id": "1428181"}, {"introduction": "我们已经知道 MAX-3SAT 的 $7/8$ 硬度阈值，但这个阈值是仅限于由“或”运算连接的子句，还是源于更普遍的结构特性？这个挑战性的练习将引导你探索这个问题。通过将问题推广到所有满足“8 种输入中有 7 种为真”的任意三元谓词，你将发现这个硬度结果的普适性，并深入理解近似困难性的本质所在 [@problem_id:1428193]。", "problem": "著名的 PCP (概率可检验证明) 定理表明，对于任意常数 $\\epsilon > 0$，区分一个可满足的 3-SAT 公式与一个至多只有 $7/8 + \\epsilon$ 比例的子句可被满足的公式是 NP-难的。这为相应的优化问题 MAX-3-SAT 建立了一个强的不可近似阈值。本问题探讨这种困难性是析取子句的一个特有属性，还是某类约束的一个更普遍的性质。\n\n我们定义一个“八选七谓词”为任何谓词 $P:\\{0,1\\}^3 \\to \\{0,1\\}$，它对于 8 种可能的二进制输入中的 7 种求值为真。任何这样的谓词都可以由使其求值为假的那个唯一的 3 比特字符串 $s \\in \\{0,1\\}^3$ 来唯一确定。我们将这个谓词记为 $P_s$。例如，标准或子句 $(x \\lor y \\lor z)$ 的谓词是 $P_{000}$，因为它仅在 $(x,y,z)=(0,0,0)$ 时为假。类似地，子句 $(\\neg x \\lor y \\lor z)$ 的谓词是 $P_{100}$。总共有 8 个这样的谓词，每个 $s \\in \\{0,1\\}^3$ 对应一个。\n\n现在，考虑一类最大 3 变量约束满足问题，记为 MAX-3-CSP($P_s$)。MAX-3-CSP($P_s$) 的一个实例由一组布尔变量 $V = \\{x_1, \\dots, x_n\\}$ 和一系列约束组成。每个约束是通过将固定的谓词 $P_s$ 应用于一个有序文字三元组 $(\\ell_1, \\ell_2, \\ell_3)$ 而形成的，其中每个文字既可以是变量 $x_i \\in V$，也可以是其否定 $\\neg x_i$。目标是找到一个变量赋值，以最大化被满足的约束的数量。\n\n鉴于在 $(7/8 + \\epsilon)$ 因子内近似 MAX-3-SAT 已被证明是 NP-难的，那么对于 8 个谓词 $P_s$ 中的哪一个，其相应的问题 MAX-3-CSP($P_s$) 也表现出这同样的 NP-难性质？\n\nA. 8 个谓词都不是。\n\nB. 所有 8 个谓词都是。\n\nC. 仅当 $s$ 不是 $(0,0,0)$ 或 $(1,1,1)$ 时的 6 个谓词 $P_s$。\n\nD. 仅当 $s$ 是 $(0,0,0)$ 或 $(1,1,1)$ 时的 2 个谓词 $P_s$。\n\nE. 答案取决于困难性证明中使用的概率可检验证明系统的具体结构。", "solution": "我们从定义开始：对于任意固定的 $s \\in \\{0,1\\}^{3}$，谓词 $P_{s}:\\{0,1\\}^{3} \\to \\{0,1\\}$ 的定义是 $P_{s}(u)=1$ 对所有 $u \\in \\{0,1\\}^{3}$ 成立，但 $u=s$ 除外，此时 $P_{s}(s)=0$。一个 MAX-3-CSP($P_{s}$) 实例由形如 $P_{s}(\\ell_{1},\\ell_{2},\\ell_{3})$ 的约束组成，其中每个 $\\ell_{i}$ 是某个变量 $x_{j}$ 或其否定 $\\neg x_{j}$。\n\n标准的 MAX-3-SAT 问题完全对应于 MAX-3-CSP($P_{000}$)，因为一个子句 $(\\ell_{1} \\lor \\ell_{2} \\lor \\ell_{3})$ 为假当且仅当 $(\\operatorname{val}(\\ell_{1}),\\operatorname{val}(\\ell_{2}),\\operatorname{val}(\\ell_{3}))=(0,0,0)$，也就是说，它将谓词 $P_{000}$ 应用于文字真值的三元组。PCP 定理表明，对于任意常数 $\\epsilon>0$，区分所有约束都可被满足的实例和至多只有 $(7/8+\\epsilon)$ 比例的约束可被满足的实例是 NP-难的。\n\n我们证明，对于每个 $s \\in \\{0,1\\}^{3}$，都存在一个从 MAX-3-CSP($P_{000}$) 到 MAX-3-CSP($P_{s}$) 的简单、精确、保持间隙的归约，该归约在任何赋值下都保持了被满足约束的数量。\n\n固定 $s=(s_{1},s_{2},s_{3}) \\in \\{0,1\\}^{3}$。给定 MAX-3-SAT 的任意子句，写作 $(\\ell_{1} \\lor \\ell_{2} \\lor \\ell_{3})$，我们通过定义文字\n$$\n\\ell_{i}' \\;=\\;\n\\begin{cases}\n\\ell_{i}, & \\text{if } s_{i}=0,\\\\\n\\neg \\ell_{i}, & \\text{if } s_{i}=1,\n\\end{cases}\n\\quad \\text{对于 } i \\in \\{1,2,3\\},\n$$\n来构造 MAX-3-CSP($P_{s}$) 的一个约束，然后添加约束 $P_{s}(\\ell_{1}',\\ell_{2}',\\ell_{3}')$。\n\n对于变量的任意赋值 $\\alpha$，令 $\\operatorname{val}(\\ell)$ 表示一个文字的导出真值。原始子句在 $\\alpha$ 下不被满足，当且仅当 $(\\operatorname{val}(\\ell_{1}),\\operatorname{val}(\\ell_{2}),\\operatorname{val}(\\ell_{3}))=(0,0,0)$。构造的约束 $P_{s}(\\ell_{1}',\\ell_{2}',\\ell_{3}')$ 在 $\\alpha$ 下不被满足，当且仅当\n$$\n(\\operatorname{val}(\\ell_{1}'),\\operatorname{val}(\\ell_{2}'),\\operatorname{val}(\\ell_{3}'))=s.\n$$\n根据构造，对于每个坐标 $i$，如果 $s_{i}=0$，我们有 $\\operatorname{val}(\\ell_{i}')=\\operatorname{val}(\\ell_{i})$；如果 $s_{i}=1$，我们有 $\\operatorname{val}(\\ell_{i}')=1-\\operatorname{val}(\\ell_{i})$。因此\n$$\n(\\operatorname{val}(\\ell_{1}'),\\operatorname{val}(\\ell_{2}'),\\operatorname{val}(\\ell_{3}'))=s\n\\;\\;\\Longleftrightarrow\\;\\;\n(\\operatorname{val}(\\ell_{1}),\\operatorname{val}(\\ell_{2}),\\operatorname{val}(\\ell_{3}))=(0,0,0).\n$$\n因此，该子句在 $\\alpha$ 下不被满足，当且仅当构造的约束在 $\\alpha$ 下不被满足。因此，在每个赋值下，被满足的约束数量都完全相同，从而可满足约束的最优比例也被保持。\n\n这个归约是线性时间的，并且对每个固定的 $s \\in \\{0,1\\}^{3}$ 都有效。因此，对于 MAX-3-SAT (即 MAX-3-CSP($P_{000}$)) 来说，区分完全可满足的实例与那些至多有 $(7/8+\\epsilon)$ 比例可满足的实例的 NP-难性质，可以传递到对每个 $s$ 的 MAX-3-CSP($P_{s}$)。等价地，所有八个谓词 $P_{s}$ 都产生相同的 $(7/8+\\epsilon)$ 不可近似阈值。一个随机赋值以 $7/8$ 的概率满足任意 $P_s$ 约束，因此这个阈值在 $\\epsilon$ 的范围内是紧的。\n\n因此，正确的选项是所有八个谓词都表现出相同的 NP-难性质。", "answer": "$$\\boxed{B}$$", "id": "1428193"}]}