{"hands_on_practices": [{"introduction": "理解伪随机性的第一步是亲眼见证一个生成器如何失效。一个好的伪随机生成器不应在其输出中留下任何可被有效算法识别的模式。本练习 [@problem_id:1439184] 探讨了一个最简单的反例：一个生成器通过附加其种子的奇偶校验位来扩展输出，这在输出位之间建立了一个简单的线性关系。通过构建一个区分器来利用这个弱点，你将学会如何量化一个生成器的不安全性，这是评估任何密码学构造安全性的核心技能。", "problem": "在计算复杂性理论中，伪随机生成器（Pseudorandom Generator, PRG）是一种高效的确定性算法，它接收一个短的真随机种子，并将其扩展成一个更长的字符串，该字符串在计算上与同等长度的真随机字符串是不可区分的。\n\n让我们来分析一个简单的PRG候选方案。考虑一个生成器 $G: \\{0,1\\}^s \\to \\{0,1\\}^{s+1}$，它对任意整数 $s \\ge 1$ 定义。对于任意输入种子 $x \\in \\{0,1\\}^s$，生成器产生输出 $G(x) = x \\| \\text{parity}(x)$，其中 `\\|` 表示字符串拼接，而 $\\text{parity}(x)$ 是 $x$ 的所有比特位之和模2的值。例如，如果 $s=3$ 且 $x=101$，那么 $\\text{parity}(x) = (1+0+1) \\pmod 2 = 0$，所以 $G(101) = 1010$。\n\n如果存在一个称为区分器 $D$ 的高效算法，能够以不可忽略的优势将其输出与真随机字符串区分开来，那么这个PRG就被认为是“被攻破”了。区分器 $D$ 是一个算法，它接收一个长度为 $s+1$ 的字符串作为输入，并输出1（猜测输入来自PRG）或0（猜测输入是真随机的）。\n\n区分器 $D$ 对于生成器 $G$ 的优势定义为：\n$$ \\text{Adv}_G(D) = \\left| \\Pr_{x \\sim U_s}[D(G(x)) = 1] - \\Pr_{y \\sim U_{s+1}}[D(y) = 1] \\right| $$\n其中 $U_n$ 表示在所有长度为 $n$ 的二进制字符串上的均匀分布。\n\n你的任务是证明生成器 $G(x) = x \\| \\text{parity}(x)$ 不是一个安全的PRG。首先，为区分器 $D$ 设计一个简单、高效的算法。然后，计算你所提出的区分器的确切优势 $\\text{Adv}_G(D)$。最终答案应该是这个单一的数值。", "solution": "定义一个高效的区分器 $D$，对于输入 $y \\in \\{0,1\\}^{s+1}$，它将 $y$ 解析为 $y=a\\|b$，其中 $a \\in \\{0,1\\}^{s}$ 且 $b \\in \\{0,1\\}$，然后计算 $\\text{parity}(a)$（$a$ 的比特位之和模2），并且当且仅当 $b=\\text{parity}(a)$ 时输出1；否则输出0。这个算法是高效的，因为计算奇偶性和进行一次比较都是多项式时间的操作。\n\n当 $y$ 的形式为 $G(x)$ 且 $x \\sim U_{s}$ 时，根据定义有 $G(x)=x\\|\\text{parity}(x)$，因此对于每一个输入，最后一位比特都等于前 $s$ 位比特的奇偶校验值。所以，\n$$\n\\Pr_{x \\sim U_{s}}[D(G(x))=1]=1.\n$$\n当 $y \\sim U_{s+1}$ 是真均匀随机时，记 $y=a\\|b$，其中 $a \\in \\{0,1\\}^{s}$ 且 $b \\in \\{0,1\\}$。对于任何固定的 $a$，$\\text{parity}(a)$ 是固定的，而 $b$ 是均匀且独立的，所以\n$$\n\\Pr[b=\\text{parity}(a)\\mid a]=\\frac{1}{2}.\n$$\n根据全概率公式和 $a$ 的均匀性，\n$$\n\\Pr_{y \\sim U_{s+1}}[D(y)=1]=\\sum_{a \\in \\{0,1\\}^{s}} \\Pr[a]\\Pr[b=\\text{parity}(a)\\mid a]=\\sum_{a \\in \\{0,1\\}^{s}} 2^{-s}\\cdot \\frac{1}{2}=\\frac{1}{2}.\n$$\n因此，区分优势为\n$$\n\\text{Adv}_{G}(D)=\\left|\\Pr_{x \\sim U_{s}}[D(G(x))=1]-\\Pr_{y \\sim U_{s+1}}[D(y)=1]\\right|=\\left|1-\\frac{1}{2}\\right|=\\frac{1}{2}.\n$$\n这个不可忽略的优势表明 $G$ 不是一个安全的PRG。", "answer": "$$\\boxed{\\frac{1}{2}}$$", "id": "1439184"}, {"introduction": "除了局部的比特相关性，伪随机生成器也可能因为其输出中存在的全局结构性模式而变得不安全。本练习 [@problem_id:1439190] 介绍了一个看似巧妙但实则存在严重缺陷的生成器，它总是产生回文串（正读和反读都一样的字符串）。这个练习将引导你分析这种结构性偏差如何使生成器的输出与真正的随机字符串区分开来，并计算出区分器的优势。这有助于你理解，伪随机性不仅要求局部看起来随机，还要求在宏观结构上避免任何可预测性。", "problem": "在计算复杂性理论领域，伪随机生成器（Pseudorandom Generator, PRG）是一种确定性算法，它接收一个短的均匀随机种子，并将其扩展为一个对于任何计算有界的观察者来说都显得随机的长字符串。\n\n形式上，生成器是一个函数 $G: \\{0,1\\}^s \\to \\{0,1\\}^n$，其中 $n > s$，$s$ 是种子长度。区分器是一个算法 $D: \\{0,1\\}^n \\to \\{0,1\\}$，它试图区分生成器的输出和真正的随机字符串。\n\n区分器 $D$ 对于生成器 $G$ 的“优势”，记作 $Adv_G(D)$，用于衡量其成功的程度。其定义为：\n$Adv_G(D) = \\left| \\Pr_{x \\leftarrow \\{0,1\\}^s}[D(G(x)) = 1] - \\Pr_{y \\leftarrow \\{0,1\\}^n}[D(y) = 1] \\right|$，\n其中记号 $v \\leftarrow S$ 表示 $v$ 是从集合 $S$ 中均匀随机选择的。如果存在一个具有不可忽略优势的高效（多项式时间）区分器，则该生成器被认为是不安全的。\n\n考虑一个特定的简单生成器 $G_{pal}: \\{0,1\\}^s \\to \\{0,1\\}^{2s}$，其中 $s$ 是一个正整数。对于一个给定的种子 $x \\in \\{0,1\\}^s$，其输出是通过将该种子与其反转串拼接而成的。如果 $x^R$ 表示字符串 $x$ 的反转，那么 $G_{pal}(x) = x \\| x^R$。\n\n现在，考虑一个区分器 $D_{test}$，它对长度为 $2s$ 的字符串进行操作。这个区分器被设计用来检查一个特定的结构属性。对于输入 $z \\in \\{0,1\\}^{2s}$，$D_{test}(z)$ 在 $z$ 是回文串（即，正读和反读都一样）时输出 1，否则输出 0。\n\n你的任务是计算该区分器的优势 $Adv_{G_{pal}}(D_{test})$。请将你的答案表示为种子长度 $s$ 的函数。", "solution": "根据定义，区分器 $D$ 针对生成器 $G$ 的优势是\n$$\nAdv_{G}(D)=\\left|\\Pr_{x\\leftarrow\\{0,1\\}^{s}}\\left[D(G(x))=1\\right]-\\Pr_{y\\leftarrow\\{0,1\\}^{n}}\\left[D(y)=1\\right]\\right|.\n$$\n这里 $G_{pal}:\\{0,1\\}^{s}\\to\\{0,1\\}^{2s}$ 由 $G_{pal}(x)=x \\| x^{R}$ 给出，并且对于 $z\\in\\{0,1\\}^{2s}$，区分器 $D_{test}$ 当且仅当 $z$ 是回文串时输出 $1$。\n\n首先，对于任何 $x\\in\\{0,1\\}^{s}$，令 $z=G_{pal}(x)=x \\| x^{R}$。那么 $z$ 的反转是\n$$\nz^{R}=(x \\| x^{R})^{R}=(x^{R})^{R} \\| x^{R}=x \\| x^{R}=z,\n$$\n所以 $z$ 是一个回文串。因此，\n$$\n\\Pr_{x\\leftarrow\\{0,1\\}^{s}}\\left[D_{test}(G_{pal}(x))=1\\right]=1.\n$$\n\n其次，对于一个均匀随机的 $y\\in\\{0,1\\}^{2s}$，$y$ 是回文串这一事件完全由其前 $s$ 个比特决定；一旦这 $s$ 个比特固定，后 $s$ 个比特必须是它们的反转。因此，在 $\\{0,1\\}^{2s}$ 中回文串的数量是 $2^{s}$，而字符串的总数是 $2^{2s}$。于是，\n$$\n\\Pr_{y\\leftarrow\\{0,1\\}^{2s}}\\left[D_{test}(y)=1\\right]=\\frac{2^{s}}{2^{2s}}=2^{-s}.\n$$\n\n综合以上两点，优势为\n$$\nAdv_{G_{pal}}(D_{test})=\\left|1-2^{-s}\\right|=1-2^{-s},\n$$\n因为对于正整数 $s$，$1\\geq 2^{-s}$。", "answer": "$$\\boxed{1-2^{-s}}$$", "id": "1439190"}, {"introduction": "在学会了如何“攻击”不安全的生成器之后，让我们转换视角，探讨安全生成器的稳健性。一个好的安全定义应该在简单的可逆变换下保持其性质。这个练习 [@problem_id:1439188] 提出了一个思想实验：如果你对一个安全伪随机生成器的输出进行逐位取反，它是否仍然安全？通过这个练习，你将学习使用一种在计算复杂性理论和密码学中至关重要的证明技术——归约法（reduction），来论证新生成器的安全性。这有助于你更深刻地理解伪随机性形式化定义的内涵及其强大之处。", "problem": "在计算复杂性理论中，伪随机生成器 (Pseudorandom Generator, PRG) 是一种确定性算法，它接收一个短的真随机种子，并将其扩展为一个更长的伪随机字符串。如果其输出与相同长度的真随机字符串在计算上不可区分，则该输出被认为是伪随机的。\n\n形式上，一个函数 $G: \\{0,1\\}^n \\to \\{0,1\\}^m$，其中输出长度 $m=m(n)$ 是种子长度 $n$ 的一个多项式且 $m(n) > n$，如果对于每一个概率多项式时间 (PPT) 算法 $D$（称为区分器），以下不等式成立，则 $G$ 是一个安全的 PRG：\n$$\n|\\Pr_{x \\sim U_n}[D(G(x)) = 1] - \\Pr_{y \\sim U_m}[D(y) = 1]| \\le \\epsilon(n)\n$$\n其中 $x \\sim U_n$ 表示种子 $x$ 是从 $\\{0,1\\}^n$ 中均匀随机选取的，$y \\sim U_m$ 表示 $y$ 是从 $\\{0,1\\}^m$ 中均匀随机选取的，而 $\\epsilon(n)$ 是一个可忽略函数（一个比任何多项式的倒数下降得更快的函数）。\n\n假设给定一个函数 $G: \\{0,1\\}^n \\to \\{0,1\\}^m$，它是一个安全的 PRG。现在，考虑一个新的生成器 $G_{neg}: \\{0,1\\}^n \\to \\{0,1\\}^m$，定义为 $G_{neg}(x) = \\neg G(x)$，其中 $\\neg$ 是按位非操作（即，对于一个比特串 $y=y_1y_2...y_m$，操作 $\\neg y$ 会产生一个新的字符串 $z=z_1z_2...z_m$，使得对于所有的 $i$ 都有 $z_i = 1 - y_i$）。\n\n关于 $G_{neg}$ 的安全性，以下哪个陈述是正确的？\n\nA. $G_{neg}$ 总是安全的 PRG。\n\nB. $G_{neg}$ 绝不是安全的 PRG。\n\nC. $G_{neg}$ 的安全性取决于 $G$ 的具体构造，无法一概而论。\n\nD. $G_{neg}$ 的安全性是一个计算上不可判定的问题。", "solution": "令 $G:\\{0,1\\}^{n}\\to\\{0,1\\}^{m}$ 是一个安全的 PRG，并定义 $G_{neg}(x)=\\neg G(x)$，其中 $\\neg$ 是在 $\\{0,1\\}^{m}$ 上的按位非操作。我们通过归约法来证明 $G_{neg}$ 也是一个安全的 PRG。令 $D$ 为任何试图区分 $G_{neg}(U_{n})$ 和 $U_{m}$ 的 PPT 区分器。定义一个新的 PPT 区分器 $D':\\{0,1\\}^{m}\\to\\{0,1\\}$，其定义为 $D'(y)=D(\\neg y)$。映射 $y\\mapsto\\neg y$ 是 $\\{0,1\\}^{m}$ 上的一个双射，可以在多项式时间内计算，并且它保持均匀分布：如果 $y\\sim U_{m}$，则 $\\neg y\\sim U_{m}$。\n\n考虑区分器 $D$ 针对 $G_{neg}$ 的区分优势：\n$$\n\\Delta \\equiv \\left|\\Pr_{x\\sim U_{n}}[D(G_{neg}(x))=1]-\\Pr_{y\\sim U_{m}}[D(y)=1]\\right|.\n$$\n根据 $G_{neg}$ 和 $D'$ 的定义，\n$$\n\\Pr_{x\\sim U_{n}}[D(G_{neg}(x))=1]=\\Pr_{x\\sim U_{n}}[D(\\neg G(x))=1]=\\Pr_{x\\sim U_{n}}[D'(G(x))=1].\n$$\n此外，由于 $y\\sim U_{m}$ 意味着 $\\neg y\\sim U_{m}$ 并且 $\\neg$ 是一个置换，\n$$\n\\Pr_{y\\sim U_{m}}[D(y)=1]=\\Pr_{y\\sim U_{m}}[D(\\neg y)=1]=\\Pr_{y\\sim U_{m}}[D'(y)=1].\n$$\n因此，\n$$\n\\Delta=\\left|\\Pr_{x\\sim U_{n}}[D'(G(x))=1]-\\Pr_{y\\sim U_{m}}[D'(y)=1]\\right|.\n$$\n由于 $G$ 是一个安全的 PRG，对于任何 PPT $D'$，这个优势都被一个可忽略函数 $\\epsilon(n)$ 所约束：\n$$\n\\left|\\Pr_{x\\sim U_{n}}[D'(G(x))=1]-\\Pr_{y\\sim U_{m}}[D'(y)=1]\\right|\\le \\epsilon(n).\n$$\n因此，对于任何 PPT $D$ 都有 $\\Delta\\le \\epsilon(n)$，这证明了 $G_{neg}$ 是一个安全的 PRG。所以，正确的陈述是 $G_{neg}$ 总是安全的 PRG。", "answer": "$$\\boxed{A}$$", "id": "1439188"}]}