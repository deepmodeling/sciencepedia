{"hands_on_practices": [{"introduction": "理解算法的计算成本不仅仅是记住 $O(n^3)$ 这样的抽象符号。这个练习将理论与实践联系起来，让你估算当问题规模扩大时，计算时间会如何急剧增加 [@problem_id:2160731]。通过这个直接的应用，你将亲身体会到算法复杂度对现实世界性能的巨大影响，并理解为什么在处理大规模问题时，选择或设计高效算法是至关重要的。", "problem": "一名工程专业的学生正在使用一款定制开发的有限元方法（FEM）软件进行结构分析。该模拟的核心是求解一个大型的稠密线性方程组 $A\\mathbf{x} = \\mathbf{b}$，其中方阵 $A$ 的大小为 $N \\times N$。该软件使用直接求解器，对于此类方法，所需的计算时间已知与矩阵维度 $N$ 的立方成正比。\n\n为了进行初步分析，该学生运行了一个具有 $N_1 = 8,000$ 个自由度的粗略模型。在她的工作站上，求解器耗时 $T_1 = 10.0$ 秒完成计算。为了在最终报告中获得更精确的结果，她必须运行一个具有 $N_2 = 12,000$ 个自由度的精细模型。\n\n假设计算性能完全由这种关系决定，且所有其他因素均可忽略不计，请估算求解器对精细模型所需的计算时间。答案以秒为单位，并四舍五入到三位有效数字。", "solution": "题目指出，计算时间 $T$ 与矩阵维度 $N$ 的立方成正比。我们可以将这种关系用数学方式表示为：\n$$T = C N^{3}$$\n其中 $C$ 是一个比例常数，其值取决于具体的硬件和软件实现。\n\n我们已知两种情况：一个粗略模型和一个精细模型。我们用下标 1 表示粗略模型的参数，用下标 2 表示精细模型的参数。\n\n对于粗略模型，我们有：\n$$T_1 = C N_1^{3}$$\n\n对于精细模型，我们有：\n$$T_2 = C N_2^{3}$$\n\n已知 $T_1 = 10.0$ 秒，$N_1 = 8,000$，$N_2 = 12,000$。我们需要求解 $T_2$。为了消去未知常数 $C$，我们可以将两个方程相除：\n$$\\frac{T_2}{T_1} = \\frac{C N_2^{3}}{C N_1^{3}} = \\left(\\frac{N_2}{N_1}\\right)^{3}$$\n\n现在，我们可以求解 $T_2$：\n$$T_2 = T_1 \\left(\\frac{N_2}{N_1}\\right)^{3}$$\n\n我们将给定值代入此方程。首先，我们计算维度的比值：\n$$\\frac{N_2}{N_1} = \\frac{12,000}{8,000} = \\frac{12}{8} = \\frac{3}{2} = 1.5$$\n\n现在，我们将这个比值和 $T_1$ 的值代入 $T_2$ 的方程中：\n$$T_2 = 10.0 \\times (1.5)^{3}$$\n\n我们计算 $(1.5)^{3}$ 的值：\n$$(1.5)^{3} = 1.5 \\times 1.5 \\times 1.5 = 2.25 \\times 1.5 = 3.375$$\n\n最后，我们计算 $T_2$：\n$$T_2 = 10.0 \\times 3.375 = 33.75$$\n\n题目要求答案四舍五入到三位有效数字。计算值为 $33.75$。前三位有效数字是 3、3 和 7。下一位数字是 5，因此我们将最后一位有效数字向上取整。\n$$T_2 \\approx 33.8$$\n精细模型的估算时间为 33.8 秒。", "answer": "$$\\boxed{33.8}$$", "id": "2160731"}, {"introduction": "虽然求解一般稠密矩阵系统的成本高达 $O(n^3)$，但在科学与工程计算中，我们经常遇到具有特殊结构的矩阵，例如三对角矩阵。此练习聚焦于这类常见情况，要求你精确计算一种专门为此设计的算法的运算量 [@problem_id:2160762]。通过这个练习，你将超越“大O表示法”，深入到算法内部，揭示利用矩阵结构如何能将计算复杂度从三次方级别显著降低到线性级别。", "problem": "考虑求解一个线性方程组 $A\\mathbf{x} = \\mathbf{d}$，其中 $A$ 是一个非奇异的 $n \\times n$ 三对角矩阵，$\\mathbf{x}$ 和 $\\mathbf{d}$ 是大小为 $n$ 的列向量。三对角矩阵是一种非零元素仅位于主对角线、第一下对角线（主对角线正下方）和第一上对角线（主对角线正上方）的矩阵。\n\n求解此类系统的一个高效算法包括两个阶段：\n\n1.  **前向消元 (Forward Elimination)：** 此阶段将矩阵 $A$ 转换为一个上双对角矩阵（非零元素仅在主对角线和上对角线上）。这是通过从第二行（$i=2$）迭代到最后一行（$i=n$）来实现的。对于每一行 $i$，该算法执行一次行操作以消除下对角线元素 $A_{i, i-1}$。具体操作是：根据元素 $A_{i, i-1}$ 和前一行（可能已被修改）的主对角线元素 $A_{i-1, i-1}$ 计算一个乘数，然后从第 $i$ 行中减去第 $i-1$ 行的该倍数。此操作会修改主对角线元素 $A_{i,i}$ 和右侧向量中对应的元素 $d_i$。在此过程中，上对角线元素不被修改。\n\n2.  **回代 (Backward Substitution)：** 然后求解得到的上双对角系统以得到向量 $\\mathbf{x}$。这通过首先计算最后一个分量 $x_n$，然后从 $i = n-1$ 向下迭代到 $1$ 来求解 $\\mathbf{x}$ 的其余分量来完成。\n\n你的任务是确定使用此特定算法求解该系统所需的基本算术运算（即加、减、乘、除）的确切总数。假设不会遇到除以零的情况。\n\n请用一个关于 $n$ 的封闭形式解析表达式给出你的答案。", "solution": "设三对角矩阵的下对角线元为 $\\{a_{i}\\}_{i=2}^{n}$，主对角线元为 $\\{b_{i}\\}_{i=1}^{n}$，上对角线元为 $\\{c_{i}\\}_{i=1}^{n-1}$，右端项为 $\\{d_{i}\\}_{i=1}^{n}$。\n\n前向消元过程对 $i=2,3,\\dots,n$ 如下进行。首先计算乘数\n$$\nm_{i}=\\frac{a_{i}}{b_{i-1}},\n$$\n这是一次除法运算。然后更新主对角线元和右端项：\n$$\nb_{i}\\leftarrow b_{i}-m_{i}c_{i-1},\\qquad d_{i}\\leftarrow d_{i}-m_{i}d_{i-1}.\n$$\n这两项更新各需要一次乘法和一次减法。上对角线元 $c_{i}$ 不被修改。因此，对于每个 $i$，有 1 次除法、2 次乘法和 2 次减法，总计 5 次运算。由于此循环从 $i=2$ 运行到 $n$，前向消元阶段的成本为\n$$\n5(n-1).\n$$\n\n回代过程求解得到的上双对角系统。首先计算\n$$\nx_{n}=\\frac{d_{n}}{b_{n}},\n$$\n这是一次除法运算。然后对于 $i=n-1,n-2,\\dots,1$ 计算\n$$\nx_{i}=\\frac{d_{i}-c_{i}x_{i+1}}{b_{i}},\n$$\n这需要一次乘法（$c_{i}x_{i+1}$）、一次减法（$d_{i}-c_{i}x_{i+1}$）和一次除法（除以 $b_{i}$），即每个索引需要 3 次运算。因此，这个回代过程的成本为\n$$\n1+3(n-1)=3n-2\n$$\n次运算。\n\n将两个阶段的运算次数相加，得到基本算术运算的确切总数为：\n$$\n5(n-1)+(3n-2)=8n-7.\n$$\n\n此算法中没有显式出现加法运算；减法、乘法和除法均如上单独计数。此计数对所有 $n\\geq 1$ 均有效，并与边界情况相符（例如，对于 $n=1$ 的情况，只执行一次除法）。", "answer": "$$\\boxed{8n-7}$$", "id": "2160762"}, {"introduction": "在许多数值任务中，一次性的高成本计算（如矩阵分解）可以为后续的多次计算摊销成本，带来极大的便利。这个练习探讨了 LU 分解在计算行列式中的应用，这是一个展示预计算威力的经典例子 [@problem_id:2160751]。你将发现，一旦完成了初始的 $A = LU$ 分解，计算 $\\det(A)$ 的额外成本是多么微不足道，这深刻揭示了在算法设计中权衡初始投资与长期收益的战略价值。", "problem": "在一次计算流体动力学模拟中，一个关键步骤是求解一个形如 $A\\mathbf{x} = \\mathbf{b}$ 的大型稠密线性方程组，其中 $A$ 是一个 $n \\times n$ 矩阵。为了优化对不同向量 $\\mathbf{b}$ 的重复计算性能，工程团队预先计算了 $A$ 的 LU 分解（Lower-Upper factorization），使得 $A = LU$。在这个使用 Doolittle 算法的具体实现中，$L$ 是一个单位下三角矩阵（即其所有对角线元素都为1），而 $U$ 是一个上三角矩阵。\n\n模拟中增加了一项新的诊断要求：在 LU 分解完成后，必须计算矩阵 $A$ 的行列式以检查矩阵的奇异性。你的任务是确定这个额外步骤的计算开销。\n\n在已知矩阵 $L$ 和 $U$ 的情况下，计算 $A$ 的行列式所需额外浮点乘法的确切次数是多少？\n\nA. $n-1$\n\nB. $n$\n\nC. $2n-1$\n\nD. $n^2$\n\nE. $\\frac{2}{3}n^3$", "solution": "我们从行列式的乘法性质开始：对于同阶方阵，有 $\\det(AB)=\\det(A)\\det(B)$。对于 LU 分解 $A=LU$，这给出\n$$\n\\det(A)=\\det(L)\\det(U).\n$$\n在 Doolittle 算法中，$L$ 是单位下三角矩阵，因此其对角线元素对所有 $i$ 都满足 $L_{ii}=1$。三角矩阵的行列式等于其对角线元素的乘积，因此\n$$\n\\det(L)=\\prod_{i=1}^{n} L_{ii}=1.\n$$\n所以，\n$$\n\\det(A)=\\det(U).\n$$\n因为 $U$ 是上三角矩阵，其行列式是其对角线元素的乘积：\n$$\n\\det(U)=\\prod_{i=1}^{n} U_{ii}.\n$$\n要使用二进制浮点乘法计算 $n$ 个已知数的乘积，所需的确切乘法次数是 $n-1$ 次，因为可以按顺序构成乘积，如 $(((U_{11}U_{22})U_{33})\\cdots U_{nn})$，这在第一个因子之外，每增加一个因子就需要一次乘法。\n\n从已知的 $U$ 获得 $\\det(A)$，除了这些乘法之外不需要其他额外的运算。因此，所需额外浮点乘法的确切次数是 $n-1$。", "answer": "$$\\boxed{A}$$", "id": "2160751"}]}