{"hands_on_practices": [{"introduction": "理论学习的最佳起点是付诸实践。这个练习将带你进入最简单的约束优化情境：在一维线段上寻找最小值。通过这个练习，你将亲手计算一个完整的投影梯度下降步骤，直观地理解当梯度下降的“提议”超出可行范围时，投影操作是如何将其“拉回”到允许的区间内的。[@problem_id:2194842]", "problem": "一个简单机器人执行器的控制参数，记为 $x$，需被优化以最小化一个成本函数。该成本函数为 $f(x) = (x - 5)^2$。由于物理限制，控制参数 $x$ 必须位于闭区间 $[-1, 1]$ 内。\n\n一位工程师决定使用投影梯度下降法来寻找最优参数值。该方法的更新规则为 $x_{k+1} = P_{\\mathcal{C}}(x_k - \\alpha \\nabla f(x_k))$，其中 $\\mathcal{C}$ 是可行集，$\\alpha$ 是步长，$P_{\\mathcal{C}}(y)$ 是点 $y$ 到集合 $\\mathcal{C}$ 上的欧几里得投影。对于一维区间 $\\mathcal{C} = [a, b]$，投影定义为 $P_{[a, b]}(y) = \\max(a, \\min(y, b))$。\n\n该工程师使用 $\\alpha = 0.1$ 的固定步长。启动了两次独立的优化运行。\n- 运行 A 从初始点 $x_0^{(A)} = -1$ 开始。\n- 运行 B 从初始点 $x_0^{(B)} = 1$ 开始。\n\n计算两次运行第一次迭代后的参数值 $x_1$。请将您的答案以一对小数 $(x_1^{(A)}, x_1^{(B)})$ 的形式呈现。", "solution": "给定成本函数 $f(x) = (x - 5)^2$，可行集为 $\\mathcal{C} = [-1, 1]$。投影梯度下降的更新公式为\n$$\nx_{k+1} = P_{[-1,1]}(x_k - \\alpha \\nabla f(x_k)),\n$$\n其中 $\\alpha = 0.1$ 且 $P_{[-1,1]}(y) = \\max(-1, \\min(y, 1))$。\n\n首先计算梯度。由于 $f(x) = (x - 5)^2$，我们有\n$$\n\\nabla f(x) = \\frac{d}{dx}(x - 5)^2 = 2(x - 5).\n$$\n未投影的更新步骤变为\n$$\ny_k = x_k - \\alpha \\nabla f(x_k) = x_k - 0.1 \\cdot 2(x_k - 5) = x_k - 0.2 x_k + 1 = 0.8 x_k + 1.\n$$\n\n运行 A 从 $x_0^{(A)} = -1$ 开始。因此，\n$$\ny_0^{(A)} = 0.8(-1) + 1 = -0.8 + 1 = 0.2,\n$$\n并且由于 $0.2 \\in [-1, 1]$，投影给出 $x_1^{(A)} = P_{[-1,1]}(0.2) = 0.2$。\n\n运行 B 从 $x_0^{(B)} = 1$ 开始。因此，\n$$\ny_0^{(B)} = 0.8(1) + 1 = 1.8,\n$$\n并且由于 $1.8 > 1$，投影给出 $x_1^{(B)} = P_{[-1,1]}(1.8) = 1$。\n\n因此，第一次迭代后的数值对为 $(0.2, 1)$。", "answer": "$$\\boxed{\\begin{pmatrix}0.2 & 1\\end{pmatrix}}$$", "id": "2194842"}, {"introduction": "现在，让我们从一维直线进入二维平面。这个练习模拟了一个被绳索限制在圆形区域内的无人机，其任务是飞向一个目标点。你将计算无人机在一次更新后的位置，这需要你先执行一个标准的梯度下降步骤，然后将结果投影到圆形可行域上，这完美地诠释了投影梯度法的核心思想。[@problem_id:2194905]", "problem": "一架小型自主无人机在二维平面上运行。其控制系统旨在将其导航至坐标为 $(5, 5)$ 的目标位置。无人机的性能由一个成本函数 $f(x_1, x_2) = (x_1 - 5)^2 + (x_2 - 5)^2$ 来衡量，该函数表示其当前位置 $(x_1, x_2)$ 到目标的欧几里得距离的平方。该无人机通过一根长度为1的柔性缆绳物理连接到位于原点 $(0, 0)$ 的中心塔架上，这意味着其位置必须始终满足条件 $x_1^2 + x_2^2 \\le 1$。\n\n无人机根据一个两阶段导航算法每秒更新一次其位置。\n1.  **期望移动计算：**首先，它计算其当前位置成本函数的最速下降方向。然后，它通过沿此方向从当前位置移动一段与陡峭程度成正比的距离来确定期望的下一个位置，该移动由步长参数 $\\alpha = 0.1$ 控制。\n2.  **安全校正：**如果这个期望位置超出了其缆绳的范围，安全协议将被触发，该协议会立即将无人机拉回到其圆形操作区域边界上最近的一点（即以原点为中心、半径为1的圆）。如果期望位置在缆绳范围内，则无需校正。\n\n如果无人机从原点 $x^{(0)} = (0, 0)$ 开始，请确定在第一个完整的更新周期后其确切坐标 $(x_1, x_2)$。", "solution": "问题要求计算无人机在一次特定更新算法迭代后的位置。让我们将所描述的过程转化为数学公式。\n\n无人机在第 $k$ 步的位置表示为 $x^{(k)} = (x_1^{(k)}, x_2^{(k)})$。目标是最小化成本函数 $f(x_1, x_2) = (x_1 - 5)^2 + (x_2 - 5)^2$，约束条件是无人机必须保持在单位圆盘 $C = \\{(x_1, x_2) \\in \\mathbb{R}^2 \\mid x_1^2 + x_2^2 \\le 1\\}$ 内。初始位置为 $x^{(0)} = (0, 0)$，步长为 $\\alpha = 0.1$。\n\n所描述的算法是投影梯度法。更新规则为 $x^{(k+1)} = P_C(x^{(k)} - \\alpha \\nabla f(x^{(k)}))$，其中 $P_C$ 是到可行集 $C$ 上的投影算子。\n\n**步骤1：计算成本函数的梯度。**\n最速下降方向是成本函数梯度的负值，即 $-\\nabla f(x_1, x_2)$。首先，我们求梯度 $\\nabla f(x_1, x_2)$。\n$$\n\\nabla f(x_1, x_2) = \\left( \\frac{\\partial f}{\\partial x_1}, \\frac{\\partial f}{\\partial x_2} \\right)\n$$\n偏导数如下：\n$$\n\\frac{\\partial f}{\\partial x_1} = \\frac{\\partial}{\\partial x_1} \\left( (x_1 - 5)^2 + (x_2 - 5)^2 \\right) = 2(x_1 - 5)\n$$\n$$\n\\frac{\\partial f}{\\partial x_2} = \\frac{\\partial}{\\partial x_2} \\left( (x_1 - 5)^2 + (x_2 - 5)^2 \\right) = 2(x_2 - 5)\n$$\n所以，梯度为 $\\nabla f(x_1, x_2) = (2(x_1 - 5), 2(x_2 - 5))$。\n\n**步骤2：执行“期望移动计算”（梯度下降步骤）。**\n这一步计算安全校正前的一个中间点，我们称之为 $y^{(1)}$。\n$$\ny^{(1)} = x^{(0)} - \\alpha \\nabla f(x^{(0)})\n$$\n首先，计算在起始位置 $x^{(0)} = (0, 0)$ 处的梯度：\n$$\n\\nabla f(0, 0) = (2(0 - 5), 2(0 - 5)) = (-10, -10)\n$$\n现在，使用 $\\alpha = 0.1$ 计算 $y^{(1)}$：\n$$\ny^{(1)} = (0, 0) - 0.1 \\times (-10, -10) = (0,0) - (-1, -1) = (1, 1)\n$$\n这个点 $y^{(1)} = (1, 1)$ 是无人机在安全检查前的期望下一个位置。\n\n**步骤3：执行“安全校正”（投影步骤）。**\n我们必须检查 $y^{(1)}$ 是否在由 $x_1^2 + x_2^2 \\le 1$ 定义的可行集 $C$ 内。\n对于 $y^{(1)} = (1, 1)$，我们有 $1^2 + 1^2 = 2$。因为 $2 > 1$，点 $y^{(1)}$ 在允许的圆形区域之外。安全协议被触发。\n\n该协议将无人机移动到单位圆边界上最近的点。这等同于将点 $y^{(1)}$ 投影到集合 $C$ 上。对于单位圆盘外的一个点 $y$，其在圆盘上的投影是通过对向量进行归一化来找到的，即将该向量除以其欧几里得范数。\n$$\nx^{(1)} = P_C(y^{(1)}) = \\frac{y^{(1)}}{\\|y^{(1)}\\|_2}\n$$\n首先，我们求 $y^{(1)} = (1, 1)$ 的范数：\n$$\n\\|y^{(1)}\\|_2 = \\sqrt{1^2 + 1^2} = \\sqrt{2}\n$$\n现在，我们计算新位置 $x^{(1)}$：\n$$\nx^{(1)} = \\frac{(1, 1)}{\\sqrt{2}} = \\left( \\frac{1}{\\sqrt{2}}, \\frac{1}{\\sqrt{2}} \\right)\n$$\n为了使分母有理化，我们将分子和分母同乘以 $\\sqrt{2}$：\n$$\nx^{(1)} = \\left( \\frac{1 \\cdot \\sqrt{2}}{\\sqrt{2} \\cdot \\sqrt{2}}, \\frac{1 \\cdot \\sqrt{2}}{\\sqrt{2} \\cdot \\sqrt{2}} \\right) = \\left( \\frac{\\sqrt{2}}{2}, \\frac{\\sqrt{2}}{2} \\right)\n$$\n因此，第一个更新周期后无人机的确切坐标是 $\\left(\\frac{\\sqrt{2}}{2}, \\frac{\\sqrt{2}}{2}\\right)$。", "answer": "$$\\boxed{\\begin{pmatrix} \\frac{\\sqrt{2}}{2} & \\frac{\\sqrt{2}}{2} \\end{pmatrix}}$$", "id": "2194905"}, {"introduction": "在许多现实世界的工程和机器学习问题中，参数必须保持在给定的范围内，这被称为“盒子约束”（box constraint）。这个练习模拟了为一个机器人控制器整定参数的过程，其参数被限制在一个矩形区域内。通过解决这个问题，你将掌握如何处理这种常见的约束类型，并看到投影操作在这种情况下是如何简化为简单的“裁剪”（clipping）操作的。[@problem_id:2194880]", "problem": "一位工程师正在为机械臂调试一个比例-积分-微分（PID）控制器。对于这个特定的应用，调试过程涉及调整两个参数，我们称之为 $k_1$ 和 $k_2$，它们由向量 $x = (k_1, k_2)$ 表示。\n\n由于硬件限制和系统稳定性要求，这些参数必须保持在特定范围内：$-1 \\le k_1 \\le 1$ 和 $-1 \\le k_2 \\le 1$。这定义了参数的可行集为 $C = \\{ (k_1, k_2) \\in \\mathbb{R}^2 \\mid -1 \\le k_1 \\le 1, -1 \\le k_2 \\le 1 \\}$。\n\n控制器的性能由一个成本函数 $J(k_1, k_2)$ 来评估，该函数衡量了诸如跟踪误差和能量消耗等因素。工程师将此成本函数建模为 $J(x) = 2k_1^2 + k_2^2 - 3k_1 + 4k_2$。目标是找到在可行集 $C$ 内最小化此成本的参数向量 $x$。\n\n为了解决这个优化问题，工程师采用了投影梯度法。从迭代 $i$ 到 $i+1$ 的参数向量更新规则由下式给出：\n$$x_{i+1} = \\Pi_C(x_i - \\alpha \\nabla J(x_i))$$\n其中 $\\Pi_C(y)$ 是点 $y$ 在集合 $C$ 上的欧几里得投影，$\\nabla J(x_i)$ 是成本函数在 $x_i$ 处计算的梯度，而 $\\alpha$ 是步长。\n\n从初始猜测 $x_0 = (0, 0)$ 开始，并使用步长 $\\alpha = 0.5$，计算更新后的参数向量 $x_1$。将您的答案表示为包含 $x_1$ 两个分量的行矩阵。", "solution": "我们已知成本函数 $J(k_1, k_2) = 2k_1^2 + k_2^2 - 3k_1 + 4k_2$ 和可行集 $C = \\{ (k_1, k_2) \\in \\mathbb{R}^2 \\mid -1 \\le k_1 \\le 1, -1 \\le k_2 \\le 1 \\}$。投影梯度更新为\n$$\nx_{i+1} = \\Pi_C(x_i - \\alpha \\nabla J(x_i)).\n$$\n首先计算 $J$ 的梯度：\n$$\n\\nabla J(k_1, k_2) = \\left(\\frac{\\partial J}{\\partial k_1}, \\frac{\\partial J}{\\partial k_2}\\right) = (4k_1 - 3, 2k_2 + 4).\n$$\n在初始点 $x_0 = (0, 0)$ 处，梯度计算为\n$$\n\\nabla J(x_0) = (4 \\cdot 0 - 3, 2 \\cdot 0 + 4) = (-3, 4).\n$$\n当步长 $\\alpha = 0.5$ 时，未投影的梯度步长为\n$$\nx_0 - \\alpha \\nabla J(x_0) = (0, 0) - 0.5(-3, 4) = (1.5, -2).\n$$\n到盒子 $C = [-1, 1]^2$ 上的投影 $\\Pi_C$ 是通过将每个分量裁剪到区间 $[-1, 1]$ 内得到的。因此，\n$$\n\\Pi_C(1.5, -2) = (1, -1).\n$$\n因此更新后的参数向量是\n$$\nx_1 = (1, -1).\n$$\n表示为行矩阵，即为\n$$\n\\begin{pmatrix}\n1 & -1\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}1 & -1\\end{pmatrix}}$$", "id": "2194880"}]}