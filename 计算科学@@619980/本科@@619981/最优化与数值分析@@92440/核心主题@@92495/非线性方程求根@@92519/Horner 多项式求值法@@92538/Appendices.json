{"hands_on_practices": [{"introduction": "掌握新算法的第一步是理解其分步执行过程。这个练习将引导你手动追踪霍纳方法的核心递归流程，其中每一步的结果都会被代入下一步的计算中。通过追踪这些中间值，你将对该方法如何高效地嵌套乘法和加法运算建立起具体的直觉 [@problem_id:2177814]。", "problem": "一个 $n$ 次多项式的一般形式为 $P(x) = \\sum_{i=0}^{n} a_i x^i = a_n x^n + a_{n-1} x^{n-1} + \\dots + a_1 x + a_0$。在特定点 $x=c$ 处计算该多项式值的一种计算高效方法是生成一系列中间值，这通常被称为霍纳法（Horner's method）。该序列记为 $y_0, y_1, \\dots, y_n$，通过以下递推关系构建：\n- $y_0 = a_n$\n- 对于 $k = 1, 2, \\dots, n$，$y_k = y_{k-1} \\cdot c + a_{n-k}$。\n\n该序列的最后一项 $y_n$ 是多项式在 $c$ 处的值，即 $y_n = P(c)$。\n\n对于多项式 $P(x) = 4x^3 - 2x^2 + 5x - 1$，当在点 $x=2$ 处计算 $P(x)$ 时，请确定通过此方法生成的完整值序列 $(y_0, y_1, y_2, y_3)$。", "solution": "我们给定的多项式为 $P(x) = 4x^{3} - 2x^{2} + 5x - 1$，其次数为 $n=3$。因此，系数为 $a_{3} = 4$，$a_{2} = -2$，$a_{1} = 5$ 和 $a_{0} = -1$。我们使用霍纳递推在 $c=2$ 处进行求值：\n$$\ny_{0} = a_{3} = 4,\n$$\n对于 $k=1,2,3$，\n$$\ny_{k} = y_{k-1}\\cdot c + a_{3-k}.\n$$\n\n逐步计算：\n$$\ny_{1} = y_{0}\\cdot 2 + a_{2} = 4\\cdot 2 + (-2) = 8 - 2 = 6,\n$$\n$$\ny_{2} = y_{1}\\cdot 2 + a_{1} = 6\\cdot 2 + 5 = 12 + 5 = 17,\n$$\n$$\ny_{3} = y_{2}\\cdot 2 + a_{0} = 17\\cdot 2 + (-1) = 34 - 1 = 33.\n$$\n\n因此，序列为 $(y_{0}, y_{1}, y_{2}, y_{3}) = (4, 6, 17, 33)$，且 $y_{3} = P(2) = 33$。", "answer": "$$\\boxed{\\begin{pmatrix} 4 & 6 & 17 & 33 \\end{pmatrix}}$$", "id": "2177814"}, {"introduction": "理论上的高效是一回事，但在真实计算机上的实际精度则是另一回事。这个练习探讨了“灾难性抵消”现象，这是数值计算中误差的一个主要来源，通常发生在两个几乎相等的数相减时。通过模拟有限精度下的计算，你将亲眼见证霍纳方法在特定条件下如何变得不稳定，这对任何进行数值编程的人来说都是至关重要的一课 [@problem_id:2177809]。", "problem": "在数值分析中，算法的选择会显著影响结果的精度，尤其是在有限精度算术中。考虑求多项式 $P(x)$ 的值，其表达式如下：\n$$P(x) = a_4 x^4 + a_3 x^3 + a_2 x^2 + a_1 x + a_0$$\n其中系数为：\n$a_4 = 1.000000$\n$a_3 = -4.001000$\n$a_2 = 6.001500$\n$a_1 = -4.003000$\n$a_0 = 1.001001$\n\n你的任务是使用霍纳方法计算该多项式在点 $x = 1.000150$ 处的值。你必须模拟在一台浮点算术系统为7位有效数字精度的机器上的计算过程。具体而言，在每次基本算术运算（加法、减法和乘法）之后，你必须将中间结果舍入到7位有效数字，然后再用于下一步运算。\n\n请遵循此过程计算 $P(1.000150)$ 的值。将你的最终答案表示为一个舍入到四位有效数字的数。", "solution": "我们通过霍纳方法计算 $P(x)$ 在 $x=1.000150$ 处的值，并在每次基本运算后将结果舍入到7位有效数字：\n$$P(x)=((((a_{4}x)+a_{3})x+a_{2})x+a_{1})x+a_{0}.$$\n\n已知 $a_{4}=1.000000$，$a_{3}=-4.001000$，$a_{2}=6.001500$，$a_{1}=-4.003000$，$a_{0}=1.001001$ 及 $x=1.000150$。\n\n从 $b_{4}=a_{4}=1.000000$ 开始。\n\n1) 乘法并舍入：\n$$t_{1}=\\operatorname{round}_{7}(b_{4}x)=\\operatorname{round}_{7}(1.000000\\cdot 1.000150)=1.000150.$$\n\n2) 加法并舍入：\n$$b_{3}=\\operatorname{round}_{7}(t_{1}+a_{3})=\\operatorname{round}_{7}(1.000150-4.001000)=-3.000850.$$\n\n3) 乘法并舍入：\n$$t_{2}=\\operatorname{round}_{7}(b_{3}x)=\\operatorname{round}_{7}((-3.000850)\\cdot 1.000150)=\\operatorname{round}_{7}(-3.0013001275)=-3.001300.$$\n\n4) 加法并舍入：\n$$b_{2}=\\operatorname{round}_{7}(t_{2}+a_{2})=\\operatorname{round}_{7}((-3.001300)+6.001500)=3.000200.$$\n\n5) 乘法并舍入：\n$$t_{3}=\\operatorname{round}_{7}(b_{2}x)=\\operatorname{round}_{7}(3.000200\\cdot 1.000150)=\\operatorname{round}_{7}(3.00065003)=3.000650.$$\n\n6) 加法并舍入：\n$$b_{1}=\\operatorname{round}_{7}(t_{3}+a_{1})=\\operatorname{round}_{7}(3.000650-4.003000)=-1.002350.$$\n\n7) 乘法并舍入：\n$$t_{4}=\\operatorname{round}_{7}(b_{1}x)=\\operatorname{round}_{7}((-1.002350)\\cdot 1.000150)=\\operatorname{round}_{7}(-1.0025003525)=-1.002500.$$\n\n8) 加法并舍入：\n$$b_{0}=\\operatorname{round}_{7}(t_{4}+a_{0})=\\operatorname{round}_{7}((-1.002500)+1.001001)=-0.001499000.$$\n\n因此，根据指定的“每次运算后舍入”的规则，$P(1.000150)=-0.001499000$。将此结果舍入到四位有效数字，得到 $-0.001499$。", "answer": "$$\\boxed{-0.001499}$$", "id": "2177809"}, {"introduction": "为了更深入地理解和预测我们之前观察到的数值稳定性问题，我们可以运用微积分来进行灵敏度分析。这个问题要求你确定多项式的最终评估值对其中一个系数的微小变化的敏感程度。通过推导偏导数 $\\frac{\\partial P(x_0)}{\\partial a_k}$，你将获得一个精确的数学度量，揭示求值点 $x_0$ 的选择如何放大或减小输入误差的影响 [@problem_id:2177820]。", "problem": "考虑一个 $n$ 次多项式，其表达式为 $P(x) = \\sum_{i=0}^{n} a_i x^i$，其中系数 $a_i$ 被视为自变量。该多项式在特定点 $x_0$ 处的值可以看作是其系数的函数，即 $P(x_0; a_0, a_1, \\ldots, a_n)$。\n\n霍纳法 (Horner's method) 提供了一种通过递推关系高效计算该值的方法。设中间值的序列为 $b_i$，其定义如下：\n-   $b_n = a_n$\n-   $b_i = a_i + x_0 b_{i+1}$，对于 $i = n-1, n-2, \\ldots, 0$。\n\n最终值为 $P(x_0) = b_0$。注意，每个 $b_i$ 都是系数 $a_i, a_{i+1}, \\ldots, a_n$ 的函数。\n\n你的任务是分析最终输出 $b_0$ 相对于单个系数 $a_k$（其中 $k$ 是满足 $0 \\le k \\le n$ 的整数）变化的敏感度。求出偏导数 $\\frac{\\partial b_0}{\\partial a_k}$ 关于 $x_0$ 和 $k$ 的一个通用且简洁的表达式。", "solution": "我们将 $b_{0}=P(x_{0})=\\sum_{i=0}^{n}a_{i}x_{0}^{i}$ 视为系数 $\\{a_{i}\\}$ 的函数。由于 $x_{0}$ 是固定的，并且对每个 $a_{k}$ 的依赖是线性的，我们可以直接逐项求导得到\n$$\n\\frac{\\partial b_{0}}{\\partial a_{k}}=\\frac{\\partial}{\\partial a_{k}}\\left(\\sum_{i=0}^{n}a_{i}x_{0}^{i}\\right)=x_{0}^{k}.\n$$\n为了在霍纳递推中验证这一点，我们定义 $c_{i}=\\frac{\\partial b_{i}}{\\partial a_{k}}$。根据递推关系\n$$\nb_{n}=a_{n},\\qquad b_{i}=a_{i}+x_{0}b_{i+1}\\quad\\text{for }i=n-1,\\ldots,0,\n$$\n对其关于 $a_{k}$ 求导，得到\n$$\nc_{n}=\\frac{\\partial a_{n}}{\\partial a_{k}}=\\delta_{nk},\\qquad c_{i}=\\frac{\\partial a_{i}}{\\partial a_{k}}+x_{0}c_{i+1}=\\delta_{ik}+x_{0}c_{i+1},\n$$\n其中 $\\delta_{ik}$ 是克罗内克δ函数 (Kronecker delta)。对于 $i\\geq k+1$，由 $c_{n}=\\delta_{nk}$ 开始反向递推可得 $c_{i}=0$。在 $i=k$ 时，我们得到 $c_{k}=1+x_{0}c_{k+1}=1$。对于 $i<k$，递推关系简化为 $c_{i}=x_{0}c_{i+1}$，迭代可得\n$$\nc_{i}=x_{0}^{k-i}c_{k}=x_{0}^{k-i}.\n$$\n在 $i=0$ 处求值，得到\n$$\n\\frac{\\partial b_{0}}{\\partial a_{k}}=c_{0}=x_{0}^{k}.\n$$\n因此，输出 $b_{0}$ 对系数 $a_{k}$ 的敏感度为 $x_{0}^{k}$。", "answer": "$$\\boxed{x_{0}^{k}}$$", "id": "2177820"}]}