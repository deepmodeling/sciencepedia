{"hands_on_practices": [{"introduction": "线性最小二乘法最经典的应用之一就是为一组数据点拟合最佳直线。这个练习将引导你完成这个基本过程，通过为一个假设的材料科学实验数据建立一个线性模型 $y = mx + c$。通过亲手构建并求解正规方程组，你将巩固核心代数技巧，并深刻理解如何将抽象的数学工具应用于解决实际的科学问题。[@problem_id:2142967]", "problem": "一名材料科学专业的学生正在研究一种新合成的聚合物纤维的弹性特性。在一个实验中，该学生施加了不同大小的拉伸力，并测量了纤维的相应伸长量。力的大小以一个归一化的无量纲单位计量，记为 $x$；相应的伸长量以另一个无量纲单位计量，记为 $y$。该学生收集了三个数据点 $(x, y)$：$(0, 1)$、$(1, 3)$ 和 $(2, 2)$。\n\n为了在此范围内对材料的行为进行建模，该学生希望用一个形如 $y = mx + c$ 的线性模型来拟合这些数据。参数 $m$（有效刚度）和 $c$（零力下的初始伸长量）将通过最小二乘法来确定，该方法旨在找到一条直线，使得数据点到该直线的垂直距离平方和最小。\n\n请确定这条最佳拟合直线的斜率 $m$ 和 y轴截距 $c$。请按 $m$、$c$ 的顺序提供它们的值作为你的最终答案。请将结果表示为精确分数。", "solution": "我们用 $y = mx + c$ 对数据进行建模，并通过最小二乘法确定 $m$ 和 $c$，即最小化 $S(m,c) = \\sum_{i=1}^{n}\\left(y_{i} - (m x_{i} + c)\\right)^{2}$。由 $\\partial S/\\partial m = 0$ 和 $\\partial S/\\partial c = 0$ 得到的正规方程组为\n$$\nm \\sum_{i=1}^{n} x_{i}^{2} + c \\sum_{i=1}^{n} x_{i} = \\sum_{i=1}^{n} x_{i} y_{i}, \\qquad\nm \\sum_{i=1}^{n} x_{i} + c\\, n = \\sum_{i=1}^{n} y_{i}.\n$$\n对于数据点 $(x,y) = (0,1),(1,3),(2,2)$，我们有 $n=3$，$\\sum x_{i} = 0+1+2 = 3$，$\\sum y_{i} = 1+3+2 = 6$，$\\sum x_{i}^{2} = 0^{2}+1^{2}+2^{2} = 5$，以及 $\\sum x_{i} y_{i} = 0\\cdot 1 + 1\\cdot 3 + 2\\cdot 2 = 7$。将这些值代入正规方程组，得到\n$$\n5m + 3c = 7, \\qquad 3m + 3c = 6.\n$$\n用第一个方程减去第二个方程得到 $2m = 1$，因此 $m = \\frac{1}{2}$。代入 $3m + 3c = 6$ 得到 $3\\left(\\frac{1}{2}\\right) + 3c = 6$，所以 $3c = \\frac{9}{2}$ 且 $c = \\frac{3}{2}$。这些是所要求的精确分数。", "answer": "$$\\boxed{\\begin{pmatrix}\\frac{1}{2} & \\frac{3}{2}\\end{pmatrix}}$$", "id": "2142967"}, {"introduction": "为了更深入地理解最小二乘法的几何意义，我们来探讨一个特殊情况。最小二乘解可以被看作是向量 $\\mathbf{b}$ 在矩阵 $\\mathbf{A}$ 列空间上的正交投影；那么，如果 $\\mathbf{b}$ 本身已经位于这个列空间中，会发生什么呢？这个练习将揭示，在这种情况下，最小二乘法会找到一个精确解，使得残差为零，从而加深你对“最佳拟合”本质的理解。[@problem_id:2409652]", "problem": "考虑由矩阵 $A \\in \\mathbb{R}^{3 \\times 2}$ 和向量 $b \\in \\mathbb{R}^{3}$ 给出的超定线性系统：\n$$\nA \\;=\\; \\begin{pmatrix}\n1 & 0 \\\\\n1 & 1 \\\\\n0 & 1\n\\end{pmatrix},\n\\qquad\nb \\;=\\; \\begin{pmatrix}\n3 \\\\\n1 \\\\\n-2\n\\end{pmatrix}.\n$$\n设向量 $x \\in \\mathbb{R}^{2}$ 使得残差的平方欧几里得范数 $\\|A x - b\\|_{2}^{2}$ 最小。确定最小二乘解 $x_{\\mathrm{LS}} \\in \\mathbb{R}^{2}$，并计算残差 $r = b - A x_{\\mathrm{LS}}$ 的欧几里得范数，即 $\\|r\\|_{2}$。请给出精确值（不要四舍五入）。对于您的最终答案，请以一个 $1 \\times 3$ 矩阵的单行形式报告三元组 $(x_{1}, x_{2}, \\|r\\|_{2})$。", "solution": "首先对问题进行验证。\n\n第一步：提取已知条件。\n给定的矩阵 $A \\in \\mathbb{R}^{3 \\times 2}$ 为：\n$$ A = \\begin{pmatrix} 1 & 0 \\\\ 1 & 1 \\\\ 0 & 1 \\end{pmatrix} $$\n给定的向量 $b \\in \\mathbb{R}^{3}$ 为：\n$$ b = \\begin{pmatrix} 3 \\\\ 1 \\\\ -2 \\end{pmatrix} $$\n目标是找到一个向量 $x \\in \\mathbb{R}^{2}$，它能最小化残差的平方欧几里得范数 $\\|A x - b\\|_{2}^{2}$。该向量记为 $x_{\\mathrm{LS}}$。残差为 $r = b - A x_{\\mathrm{LS}}$。任务是确定 $x_{\\mathrm{LS}} = \\begin{pmatrix} x_1 \\\\ x_2 \\end{pmatrix}$ 并计算残差的范数 $\\|r\\|_{2}$。最终结果需要以三元组 $(x_{1}, x_{2}, \\|r\\|_{2})$ 的形式报告。\n\n第二步：使用提取的已知条件进行验证。\n该问题是线性最小二乘法的一个标准练习，这是计算工程和线性代数中的一个基本课题。所提供的矩阵 $A$ 有两个列向量，$\\begin{pmatrix} 1 \\\\ 1 \\\\ 0 \\end{pmatrix}$ 和 $\\begin{pmatrix} 0 \\\\ 1 \\\\ 1 \\end{pmatrix}$。这些向量是线性无关的，这确保了矩阵 $A$ 是列满秩的。因此，矩阵 $A^T A$ 是可逆的，这保证了最小二乘问题有唯一解 $x_{\\mathrm{LS}}$。该问题是自洽的、数学上一致的、适定的，并且是指定科学领域内的一个客观问题。它没有违反任何科学基础或逻辑原则。\n\n第三步：结论与行动。\n问题被判定为有效。现在将推导完整的解。\n\n线性最小二乘问题旨在找到一个向量 $x_{\\mathrm{LS}} \\in \\mathbb{R}^{2}$，以最小化目标函数 $J(x) = \\|Ax - b\\|_{2}^{2}$。取得最小值的必要条件是 $J(x)$ 关于 $x$ 的梯度为零。该条件导出了被称为正规方程的线性方程组：\n$$ A^T A x_{\\mathrm{LS}} = A^T b $$\n首先，我们计算矩阵 $A^T A$。$A$ 的转置是：\n$$ A^T = \\begin{pmatrix} 1 & 1 & 0 \\\\ 0 & 1 & 1 \\end{pmatrix} $$\n然后，乘积 $A^T A$ 为：\n$$ A^T A = \\begin{pmatrix} 1 & 1 & 0 \\\\ 0 & 1 & 1 \\end{pmatrix} \\begin{pmatrix} 1 & 0 \\\\ 1 & 1 \\\\ 0 & 1 \\end{pmatrix} = \\begin{pmatrix} (1)(1) + (1)(1) + (0)(0) & (1)(0) + (1)(1) + (0)(1) \\\\ (0)(1) + (1)(1) + (1)(0) & (0)(0) + (1)(1) + (1)(1) \\end{pmatrix} = \\begin{pmatrix} 2 & 1 \\\\ 1 & 2 \\end{pmatrix} $$\n接下来，我们计算向量 $A^T b$：\n$$ A^T b = \\begin{pmatrix} 1 & 1 & 0 \\\\ 0 & 1 & 1 \\end{pmatrix} \\begin{pmatrix} 3 \\\\ 1 \\\\ -2 \\end{pmatrix} = \\begin{pmatrix} (1)(3) + (1)(1) + (0)(-2) \\\\ (0)(3) + (1)(1) + (1)(-2) \\end{pmatrix} = \\begin{pmatrix} 4 \\\\ -1 \\end{pmatrix} $$\n正规方程变为：\n$$ \\begin{pmatrix} 2 & 1 \\\\ 1 & 2 \\end{pmatrix} \\begin{pmatrix} x_1 \\\\ x_2 \\end{pmatrix} = \\begin{pmatrix} 4 \\\\ -1 \\end{pmatrix} $$\n这对应于以下二元线性方程组：\n$$ 2x_1 + x_2 = 4 $$\n$$ x_1 + 2x_2 = -1 $$\n从第一个方程，我们将 $x_2$ 表示为 $x_1$ 的函数：$x_2 = 4 - 2x_1$。将此代入第二个方程得到：\n$$ x_1 + 2(4 - 2x_1) = -1 $$\n$$ x_1 + 8 - 4x_1 = -1 $$\n$$ -3x_1 = -9 $$\n$$ x_1 = 3 $$\n现在，我们将 $x_1$ 的值代回以求得 $x_2$：\n$$ x_2 = 4 - 2(3) = 4 - 6 = -2 $$\n因此，最小二乘解为：\n$$ x_{\\mathrm{LS}} = \\begin{pmatrix} 3 \\\\ -2 \\end{pmatrix} $$\n下一步是计算残差向量 $r = b - A x_{\\mathrm{LS}}$。首先，我们计算乘积 $A x_{\\mathrm{LS}}$：\n$$ A x_{\\mathrm{LS}} = \\begin{pmatrix} 1 & 0 \\\\ 1 & 1 \\\\ 0 & 1 \\end{pmatrix} \\begin{pmatrix} 3 \\\\ -2 \\end{pmatrix} = \\begin{pmatrix} (1)(3) + (0)(-2) \\\\ (1)(3) + (1)(-2) \\\\ (0)(3) + (1)(-2) \\end{pmatrix} = \\begin{pmatrix} 3 \\\\ 1 \\\\ -2 \\end{pmatrix} $$\n于是残差向量为：\n$$ r = b - A x_{\\mathrm{LS}} = \\begin{pmatrix} 3 \\\\ 1 \\\\ -2 \\end{pmatrix} - \\begin{pmatrix} 3 \\\\ 1 \\\\ -2 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\end{pmatrix} $$\n这表明向量 $b$ 位于 $A$ 的列空间中，方程组 $Ax = b$ 有一个精确解，而最小二乘法已经找到了这个解。残差向量 $r$ 的欧几里得范数是：\n$$ \\|r\\|_{2} = \\sqrt{0^2 + 0^2 + 0^2} = 0 $$\n因此，所要求的三元组 $(x_1, x_2, \\|r\\|_{2})$ 是 $(3, -2, 0)$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 3 & -2 & 0 \\end{pmatrix}}\n$$", "id": "2409652"}, {"introduction": "现在，让我们将最小二乘法应用到一个更高级、也更具实际意义的工程问题中：数字信号处理。从音频录音中滤除特定的交流电噪声（如 $60$ $\\mathrm{Hz}$ 的“嗡嗡声”）是一个常见挑战。这个练习将向你展示如何使用正弦和余弦函数作为基函数来为这种噪声建模，然后利用最小二乘法精确地“减去”它，这是一种强大的陷波滤波器技术。[@problem_id:2409659]", "problem": "给定一个均匀采样的离散时间信号，该信号可能包含一个频率为 $60$ $\\mathrm{Hz}$ 的强正弦干扰。对于一组采样时间 $\\{t_k\\}_{k=0}^{N-1}$，其中 $t_k = k / f_s$，$f_s$ 是以 $\\mathrm{Hz}$ 为单位的采样率，$N$ 是采样点数，将该干扰建模为\n$$\ny_k \\approx c_1 \\sin(\\omega t_k) + c_2 \\cos(\\omega t_k),\n$$\n其中 $\\omega = 2\\pi \\cdot 60$ $\\mathrm{rad/s}$，且三角函数的角度单位为弧度。对于下述每个测试用例，确定系数 $c_1$ 和 $c_2$ 以最小化\n$$\n\\sum_{k=0}^{N-1} \\left(y_k - c_1 \\sin(\\omega t_k) - c_2 \\cos(\\omega t_k)\\right)^2,\n$$\n然后从原始信号中减去拟合的分量，得到残差序列\n$$\nr_k = y_k - \\left(c_1 \\sin(\\omega t_k) + c_2 \\cos(\\omega t_k)\\right).\n$$\n对于每个测试用例，计算残差的均方根（RMS）值，\n$$\n\\mathrm{RMS} = \\sqrt{\\frac{1}{N}\\sum_{k=0}^{N-1} r_k^2}.\n$$\n\n使用以下测试套件，其中所有振幅均为无量纲，时间单位为 $\\mathrm{s}$，频率单位为 $\\mathrm{Hz}$，角频率单位为 $\\mathrm{rad/s}$：\n\n- 测试用例 1（包含干扰成分的一般情况）：\n  - $f_s = 8000$ $\\mathrm{Hz}$，$N = 4000$。对于 $k = 0,1,\\dots,N-1$，$t_k = k/f_s$ 且\n    $$\n    y_k = 0.7 \\sin(\\omega t_k + 1.0) + 0.2 \\sin(2\\pi \\cdot 5 \\, t_k) + 0.1 \\sin(2\\pi \\cdot 120 \\, t_k).\n    $$\n- 测试用例 2（不含 $60$ $\\mathrm{Hz}$ 成分）：\n  - $f_s = 44100$ $\\mathrm{Hz}$，$N = 2205$。对于 $k = 0,1,\\dots,N-1$，$t_k = k/f_s$ 且\n    $$\n    y_k = 0.3 \\cos(2\\pi \\cdot 440 \\, t_k) + 0.05 \\sin(2\\pi \\cdot 1000 \\, t_k).\n    $$\n- 测试用例 3（数据量最少且为纯粹交流声的边界情况）：\n  - $f_s = 1000$ $\\mathrm{Hz}$，$N = 2$。对于 $k = 0,1$，$t_k = k/f_s$ 且\n    $$\n    y_k = 1.5 \\sin(\\omega t_k + 0.3).\n    $$\n\n您的程序必须为每个测试用例计算减去上述定义的最佳拟合分量 $c_1 \\sin(\\omega t) + c_2 \\cos(\\omega t)$ 后的残差RMS值。最终输出必须为一行，包含三个RMS值，每个值四舍五入到六位小数，以逗号分隔并用方括号括起来。例如，\n$$\n[\\text{rms}_1,\\text{rms}_2,\\text{rms}_3].\n$$", "solution": "我们用线性代数的术语来形式化此问题。对于单个测试用例，定义列向量\n$$\n\\mathbf{s} = \\begin{bmatrix} \\sin(\\omega t_0) \\\\ \\sin(\\omega t_1) \\\\ \\vdots \\\\ \\sin(\\omega t_{N-1}) \\end{bmatrix}, \\quad\n\\mathbf{c} = \\begin{bmatrix} \\cos(\\omega t_0) \\\\ \\cos(\\omega t_1) \\\\ \\vdots \\\\ \\cos(\\omega t_{N-1}) \\end{bmatrix}, \\quad\n\\mathbf{y} = \\begin{bmatrix} y_0 \\\\ y_1 \\\\ \\vdots \\\\ y_{N-1} \\end{bmatrix}.\n$$\n构建设计矩阵\n$$\n\\mathbf{A} = \\begin{bmatrix} \\mathbf{s} & \\mathbf{c} \\end{bmatrix} \\in \\mathbb{R}^{N \\times 2},\n$$\n并令参数向量为\n$$\n\\boldsymbol{\\theta} = \\begin{bmatrix} c_1 \\\\ c_2 \\end{bmatrix}.\n$$\n模型为 $\\mathbf{y} \\approx \\mathbf{A}\\boldsymbol{\\theta}$。我们寻求使残差平方和最小化的 $\\boldsymbol{\\theta}$\n$$\nJ(\\boldsymbol{\\theta}) = \\|\\mathbf{y} - \\mathbf{A}\\boldsymbol{\\theta}\\|_2^2 = (\\mathbf{y} - \\mathbf{A}\\boldsymbol{\\theta})^\\top (\\mathbf{y} - \\mathbf{A}\\boldsymbol{\\theta}).\n$$\n将关于 $\\boldsymbol{\\theta}$ 的梯度设为零，可得正规方程组\n$$\n\\nabla_{\\boldsymbol{\\theta}} J = -2 \\mathbf{A}^\\top \\mathbf{y} + 2 \\mathbf{A}^\\top \\mathbf{A} \\boldsymbol{\\theta} = \\mathbf{0}\n\\;\\;\\Rightarrow\\;\\;\n\\mathbf{A}^\\top \\mathbf{A} \\, \\boldsymbol{\\theta} = \\mathbf{A}^\\top \\mathbf{y}.\n$$\n当 $\\mathbf{A}$ 为满列秩时，$\\mathbf{A}^\\top \\mathbf{A}$ 是对称正定且可逆的，唯一的最小化解为\n$$\n\\boldsymbol{\\theta}^\\star = (\\mathbf{A}^\\top \\mathbf{A})^{-1} \\mathbf{A}^\\top \\mathbf{y}.\n$$\n拟合的干扰为 $\\widehat{\\mathbf{y}} = \\mathbf{A}\\boldsymbol{\\theta}^\\star$，残差为 $\\mathbf{r} = \\mathbf{y} - \\widehat{\\mathbf{y}}$。残差的均方根（RMS）值为\n$$\n\\mathrm{RMS} = \\sqrt{\\frac{1}{N} \\sum_{k=0}^{N-1} r_k^2} = \\sqrt{\\frac{1}{N} \\mathbf{r}^\\top \\mathbf{r}}.\n$$\n\n应用于测试套件：\n- 在测试用例 1 中，信号包含一个振幅为 $0.7$、相位为 $1.0$ $\\mathrm{rad}$ 的 $60$ $\\mathrm{Hz}$ 分量，以及频率为 $5$ $\\mathrm{Hz}$ 和 $120$ $\\mathrm{Hz}$ 的额外分量。最小二乘拟合将提取出 $60$ $\\mathrm{Hz}$ 的部分，主要将 $5$ $\\mathrm{Hz}$ 和 $120$ $\\mathrm{Hz}$ 的内容留在残差中。计算出的 RMS 值将反映这些剩余分量。\n- 在测试用例 2 中，信号不包含 $60$ $\\mathrm{Hz}$ 的内容，因此最优系数应接近于零，残差的 RMS 值将约等于原始信号的 RMS 值（在有限窗口上存在小的数值投影效应）。\n- 在测试用例 3 中，当 $N=2$ 且存在纯粹的 $60$ $\\mathrm{Hz}$ 正弦波时，对于指定的采样时间，$\\mathbf{A}$ 的两列是线性无关的，因此双参数模型可以精确匹配这两个样本，从而产生为零的残差，因此其 RMS 值也为零（在数值精度范围内）。\n\n每个用例的算法步骤：\n1. 对于 $k = 0,1,\\dots,N-1$，生成 $t_k = k/f_s$，并计算 $\\omega = 2\\pi \\cdot 60$ $\\mathrm{rad/s}$。\n2. 用列 $\\sin(\\omega t_k)$ 和 $\\cos(\\omega t_k)$ 构建矩阵 $\\mathbf{A}$。\n3. 通过求解 $\\mathbf{A}^\\top \\mathbf{A} \\, \\boldsymbol{\\theta} = \\mathbf{A}^\\top \\mathbf{y}$ 来计算 $\\boldsymbol{\\theta}^\\star$。\n4. 计算残差 $\\mathbf{r} = \\mathbf{y} - \\mathbf{A}\\boldsymbol{\\theta}^\\star$ 及其 $\\mathrm{RMS}$ 值。\n5. 将每个 $\\mathrm{RMS}$ 值四舍五入到六位小数，并作为单个列表输出。\n\n该过程直接源于通过正规方程组定义的最小二乘法最小化解以及离散序列的均方根定义。", "answer": "```python\nimport numpy as np\n\ndef compute_rms_residual(fs, N, y_func):\n    \"\"\"\n    Compute the RMS of the residual after fitting c1*sin(omega*t) + c2*cos(omega*t)\n    at 60 Hz from the given signal y(t).\n    \"\"\"\n    t = np.arange(N, dtype=np.float64) / float(fs)\n    omega = 2.0 * np.pi * 60.0  # rad/s\n    # Design matrix with columns [sin(omega t), cos(omega t)]\n    A = np.column_stack((np.sin(omega * t), np.cos(omega * t)))\n    y = y_func(t).astype(np.float64)\n\n    # Solve normal equations (A^T A) theta = A^T y for theta = [c1, c2]\n    ATA = A.T @ A\n    ATy = A.T @ y\n    # Use solve; in the unlikely event of singularity, fall back to least squares\n    try:\n        theta = np.linalg.solve(ATA, ATy)\n    except np.linalg.LinAlgError:\n        theta, *_ = np.linalg.lstsq(A, y, rcond=None)\n\n    fitted = A @ theta\n    residual = y - fitted\n    rms = float(np.sqrt(np.mean(residual ** 2)))\n    return rms\n\ndef test_case_1():\n    # fs = 8000 Hz, N = 4000\n    fs = 8000\n    N = 4000\n    hum_omega = 2.0 * np.pi * 60.0\n    def y_func(t):\n        return (0.7 * np.sin(hum_omega * t + 1.0)\n                + 0.2 * np.sin(2.0 * np.pi * 5.0 * t)\n                + 0.1 * np.sin(2.0 * np.pi * 120.0 * t))\n    return compute_rms_residual(fs, N, y_func)\n\ndef test_case_2():\n    # fs = 44100 Hz, N = 2205\n    fs = 44100\n    N = 2205\n    def y_func(t):\n        return (0.3 * np.cos(2.0 * np.pi * 440.0 * t)\n                + 0.05 * np.sin(2.0 * np.pi * 1000.0 * t))\n    return compute_rms_residual(fs, N, y_func)\n\ndef test_case_3():\n    # fs = 1000 Hz, N = 2\n    fs = 1000\n    N = 2\n    hum_omega = 2.0 * np.pi * 60.0\n    def y_func(t):\n        return 1.5 * np.sin(hum_omega * t + 0.3)\n    return compute_rms_residual(fs, N, y_func)\n\ndef solve():\n    # Define and run the test suite\n    rms_values = [\n        test_case_1(),\n        test_case_2(),\n        test_case_3(),\n    ]\n    # Round to six decimals and format as required\n    formatted = [f\"{v:.6f}\" for v in rms_values]\n    print(f\"[{','.join(formatted)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2409659"}]}