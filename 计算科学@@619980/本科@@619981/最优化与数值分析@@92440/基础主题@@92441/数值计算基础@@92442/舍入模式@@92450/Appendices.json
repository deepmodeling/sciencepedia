{"hands_on_practices": [{"introduction": "理解浮点运算的第一步是深入其内部机制。本练习将带你模拟一个简化的8位浮点系统，让你亲手体验一个十进制数（如$0.3$）如何被转换、存储，以及在减法运算中如何因舍入而产生微小误差。通过追踪计算过程，你将直观地理解“四舍五入到最近的偶数”规则，并揭示为何看似简单的算法在实际硬件中可能产生意想不到的结果 [@problem_id:2199520]。", "problem": "一款新的低功耗微处理器正在为物联网（IoT）环境传感器进行设计。为了节省硬件资源，它使用了一种自定义的8位浮点数格式，我们称之为 LP8。一个 LP8 数由一个符号位 $S$（1位）、一个指数 $E$（3位）和一个尾数 $M$（4位）定义。一个规格化数的值 $V$ 由以下公式给出：\n\n$$V = (-1)^S \\times (1.M)_2 \\times 2^{E-B}$$\n\n其中 $(1.M)_2$ 表示由一个隐藏的前导1后跟4位尾数构成的二进制数，$E$ 是指数位的无符号整数值，指数偏移量为 $B=3$。所有算术运算都使用“向偶数舍入”（round to nearest, ties to even）模式。在这种舍入模式下，一个恰好位于两个可表示数中间的值，将被舍入到其尾数最低有效位为零的那个数。\n\n该处理器上执行一个简单的算法。一个变量 `x` 被初始化为十进制值 $2.0$ 的 LP8 表示。一个常量 `c` 被定义为十进制值 $0.3$ 的 LP8 表示。然后处理器总共执行两次 `x := x - c` 操作。\n\n在完成两次减法后，存储在变量 `x` 中的最终十进制值是多少？报告你的答案，并四舍五入到三位有效数字。", "solution": "该问题要求我们使用自定义的8位浮点格式模拟一个减法循环的两个步骤。我们必须首先确定初始值和常量的机器表示，然后执行两次减法，并在每一步应用指定的舍入规则。\n\n**步骤1：确定初始值 `x`（即 $2.0$）的 LP8 表示。**\n值为 $2.0$。用二进制表示为 $10.0_2$。为了匹配规格化格式 $(1.M)_2 \\times 2^{E-3}$，我们将其写作 $1.0_2 \\times 2^1$。\n- 该数为正，所以符号位 $S=0$。\n- 尾数位 $M$ 是 $1.0_2$ 的小数部分，所以 $M = 0000$。\n- 指数为 $1$。根据指数公式 $E-B = E-3 = 1$，得到 $E=4$。用3位二进制表示为 $E=100$。\n因此，初始值 `x`（我们称之为 $x_0$）由 $S=0, E=100, M=0000$ 表示。存储的值恰好是 $2.0$。\n\n**步骤2：确定常量 `c`（即 $0.3$）的 LP8 表示。**\n首先，将十进制 $0.3$ 转换为二进制。这是一个无限循环小数：$0.3_{10} = 0.0100110011..._2$。\n为了规格化，我们移动小数点以得到前导1：$1.00110011..._2 \\times 2^{-2}$。\n- 该数为正，所以 $S=0$。\n- 指数为 $-2$。由 $E-3=-2$ 可得 $E=1$。用3位二进制表示为 $E=001$。\n- 尾数需要我们取 $1.00110011..._2$ 小数点后的前4位。完整的小数部分是 `.00110011...`。\n- 我们需要将其舍入到4位。前4位是 `0011`。下一位是 `0`（来自 `...0011...`）。因为该位是 `0`，所以该值更接近 `0011` 而非 `0100`，因此我们向下舍入（截断）。\n- 尾数位 $M$ 是 `0011`。\n因此，常量 `c` 由 $S=0, E=001, M=0011$ 表示。让我们计算 `c` 的精确十进制值：\n$c = (1.0011)_2 \\times 2^{-2} = (1 + \\frac{0}{2} + \\frac{0}{4} + \\frac{1}{8} + \\frac{1}{16}) \\times 2^{-2} = (1 + \\frac{3}{16}) \\times \\frac{1}{4} = \\frac{19}{16} \\times \\frac{1}{4} = \\frac{19}{64} = 0.296875$。\n\n**步骤3：执行第一次减法：$x_1 = x_0 - c$。**\n$x_0 = (1.0000)_2 \\times 2^1$\n$c = (1.0011)_2 \\times 2^{-2}$\n为了进行减法，我们必须通过使指数相等来对齐小数点。我们将指数较小的数进行反规格化，以匹配较大的指数（指数1）。\n$c = (1.0011)_2 \\times 2^{-2} = (0.10011)_2 \\times 2^{-1} = (0.010011)_2 \\times 2^0 = (0.0010011)_2 \\times 2^1$。\n现在我们执行减法：\n$x_1 = ((1.0000000)_2 - (0.0010011)_2) \\times 2^1 = (0.1101101)_2 \\times 2^1$。\n为了存储这个结果，它必须被规格化和舍入。\n规格化：$(0.1101101)_2 \\times 2^1 = (1.101101)_2 \\times 2^0$。\n- 新的指数是 $0$。$E-3=0 \\implies E=3$。\n- 新的尾数必须舍入到4位。值为 $1.101101$。前4位尾数是 `1011`。其余位是 `01`。这小于一半（`10`），所以我们向下舍入。\n- $x_1$ 的存储尾数是 `1011`。\n存储的值 $x_1$ 是 $(1.1011)_2 \\times 2^0 = (1 + \\frac{1}{2} + \\frac{0}{4} + \\frac{1}{8} + \\frac{1}{16}) \\times 1 = 1 + \\frac{8+2+1}{16} = 1 + \\frac{11}{16} = \\frac{27}{16} = 1.6875$。\n\n**步骤4：执行第二次减法：$x_2 = x_1 - c$。**\n$x_1 = (1.1011)_2 \\times 2^0$\n$c = (1.0011)_2 \\times 2^{-2}$\n将指数对齐到较大的那个（指数0）。\n$c = (0.010011)_2 \\times 2^0$。\n现在执行减法：\n$x_2 = ((1.101100)_2 - (0.010011)_2) \\times 2^0 = (1.011001)_2 \\times 2^0$。\n为了存储这个结果，它必须被规格化（它已经是了）和舍入。\n- 指数是 $0$，所以 $E=3$。\n- 尾数位必须从 $1.011001$ 舍入。前4位是 `0110`。后续位是 `01`，这小于一半。我们向下舍入。\n- $x_2$ 的存储尾数是 `0110`。\n最终存储的值 $x_2$ 是 $(1.0110)_2 \\times 2^0 = (1 + \\frac{0}{2} + \\frac{1}{4} + \\frac{1}{8} + \\frac{0}{16}) \\times 1 = 1 + \\frac{2+1}{8} = 1 + \\frac{3}{8} = \\frac{11}{8} = 1.375$。\n\n**步骤5：最终答案格式化。**\n最终的十进制值是 $1.375$。问题要求答案四舍五入到三位有效数字。前三位有效数字是 1、3 和 7。下一位数字是 5，所以我们向上舍入。\n$1.375 \\approx 1.38$。", "answer": "$$\\boxed{1.38}$$", "id": "2199520"}, {"introduction": "在理想的数学世界里，乘法的结合律 $(a \\times b) \\times c = a \\times (b \\times c)$ 是颠扑不破的。然而，在有限精度的计算机中，这个定律还成立吗？本练习通过一个假设的处理器，让你在两种不同运算顺序下计算同一个乘积 [@problem_id:2199504]。你将亲自验证，由于每一步乘法后都进行舍入，运算的顺序会直接影响最终结果，从而揭示浮点运算不满足结合律这一关键特性。", "problem": "在科学计算中，浮点运算的有限精度可能导致其结果与使用理想的无限精度实数所得的结果不同。一个后果是，对于实数成立的乘法结合律（即 $(a \\times b) \\times c = a \\times (b \\times c)$），在实践中并不总是成立。\n\n考虑一个执行浮点运算的假设的简化处理器。该处理器有一个特定的硬件限制：每次乘法运算后，结果会立即舍入到三位有效数字的精度。所实现的舍入规则是“远离零的半数舍入”(round half away from zero)，这意味着一个数被舍入到其最近的值，而对于中间值（一个恰好在两个可表示值中间的数），则舍入到绝对值较大的那个值。例如，3.456 舍入为 3.46，3.452 舍入为 3.45，而 3.455 舍入为 3.46。\n\n给定三个输入数字 $a = 3.14$, $b = 1.78$ 和 $c = 9.99$，该处理器的任务是按两种不同的顺序计算乘积 $a \\times b \\times c$。令 $R_1$ 为计算 $(a \\times b) \\times c$ 的结果，令 $R_2$ 为计算 $a \\times (b \\times c)$ 的结果。\n\n请确定由该特定处理器计算出的 $R_1$ 和 $R_2$ 的最终值。将您的答案以数对 $(R_1, R_2)$ 的形式呈现。", "solution": "我们应用规则：每次乘法之后，结果使用“远离零的半数舍入”规则舍入到三位有效数字。\n\n首先，计算 $(a \\times b) \\times c$。\n- 精确乘积 $a \\times b$:\n$$\na \\times b = 3.14 \\times 1.78 = \\frac{314}{100} \\times \\frac{178}{100} = \\frac{55892}{10000} = 5.5892.\n$$\n- 舍入到三位有效数字：$5.5892 \\to 5.59$（第四位有效数字是 $9$）。\n- 乘以 $c$:\n$$\n5.59 \\times 9.99 = \\frac{559}{100} \\times \\frac{999}{100} = \\frac{558441}{10000} = 55.8441.\n$$\n- 舍入到三位有效数字：$55.8441 \\to 55.8$（第四位有效数字是 $4$）。\n\n因此，$R_{1} = 55.8$。\n\n接下来，计算 $a \\times (b \\times c)$。\n- 精确乘积 $b \\times c$:\n$$\nb \\times c = 1.78 \\times 9.99 = \\frac{178}{100} \\times \\frac{999}{100} = \\frac{177822}{10000} = 17.7822.\n$$\n- 舍入到三位有效数字：$17.7822 \\to 17.8$（第四位有效数字是 $8$）。\n- 乘以 $a$:\n$$\n3.14 \\times 17.8 = \\frac{314}{100} \\times \\frac{178}{10} = \\frac{55892}{1000} = 55.892.\n$$\n- 舍入到三位有效数字：$55.892 \\to 55.9$（第四位有效数字是 $9$）。\n\n因此，$R_{2} = 55.9$。\n\n所以，最终计算出的值为 $(R_{1}, R_{2}) = (55.8, 55.9)$。", "answer": "$$\\boxed{\\begin{pmatrix}55.8 & 55.9\\end{pmatrix}}$$", "id": "2199504"}, {"introduction": "单个运算的微小舍入误差，在迭代数千次后会产生怎样的累积效应？本练习模拟了一个数字滤波器，它根据一个简单的递推关系 $x_{n+1} = \\alpha x_n + \\beta$ 不断更新其状态。你将比较两种不同的舍入模式——“向零舍入”和“向最近偶数舍入”——如何引导系统走向完全不同的稳定状态（不动点） [@problem_id:2199495]。这个实践凸显了舍入模式的选择对算法长期行为的决定性影响，这在动态系统和数值稳定性分析中至关重要。", "problem": "一个简单的一阶数字无限脉冲响应 (IIR) 滤波器在两个不同的实验性微处理器（处理器 A 和处理器 B）上实现。滤波器的状态由变量 $x$ 表示，根据线性递推关系在离散时间步 $n=0, 1, 2, \\dots$ 进行更新：\n$$x_{n+1} = \\alpha x_n + \\beta$$\n对于此特定滤波器，系数为 $\\alpha = 0.5$ 和 $\\beta = 1.5$。滤波器的初始状态为 $x_0 = 0.67$。\n\n两个微处理器都采用十进制浮点算术系统，该系统以三位有效数字的精度存储所有值。更新规则实现为 $x_{n+1} = \\text{fl}(\\alpha x_n + \\beta)$，其中函数 $\\text{fl}(y)$ 将计算结果 $y = \\alpha x_n + \\beta$ 舍入到三位有效数字，然后将其存储为新状态 $x_{n+1}$。两个处理器仅在舍入模式上有所不同：\n\n1.  **处理器 A** 使用**向零舍入 (RTZ)**。在此模式下，数字被截断为三位有效数字。例如，$3.1498$ 舍入为 $3.14$，而 $-3.1498$ 舍入为 $-3.14$。\n\n2.  **处理器 B** 使用**向最近偶数舍入 (RNE)**。在此模式下，数字被舍入到最接近的有三位有效数字的可表示值。如果一个数字正好在两个可表示值之间（例如 $3.145$），它将被舍入到最后一个有效数字为偶数的那个值。例如，$3.145$ 舍入为 $3.14$，而 $3.155$ 舍入为 $3.16$。\n\n当滤波器的状态达到一个不动点时，它被认为是稳定的。不动点定义为一个值 $x^*$，使得一次迭代不再改变状态（即，对于某个步骤 $k$，$x_{k+1} = x_k = x^*$）。\n\n确定在处理器 A 上运行的系统的不动点值 $x_A^*$ 和在处理器 B 上运行的系统的不动点值 $x_B^*$。以一对十进制数 $(x_A^*, x_B^*)$ 的形式提供最终答案，每个值表示为三位有效数字。", "solution": "我们得到舍入后的迭代式\n$$x_{n+1}=\\mathrm{fl}(0.5\\,x_{n}+1.5),$$\n具有三位有效数字和两种舍入模式。舍入系统的一个不动点满足\n$$x^{*}=\\mathrm{fl}(0.5\\,x^{*}+1.5),$$\n其中 $x^{*}$ 可表示为三位有效数字。$x=0.5x+1.5$ 的未舍入不动点是 $x=3$，这为量化不动点的位置提供了指导。\n\n处理器 A (RTZ, 向零截断至三位有效数字)：\n从 $x_{0}=0.67$ 开始（存储为 $0.670$ 以满足三位有效数字）。\n逐步计算，总是截断到三位有效数字：\n$$y_{0}=0.5\\cdot 0.67+1.5=1.835\\;\\Rightarrow\\;x_{1}=\\mathrm{fl}(1.835)=1.83,$$\n$$y_{1}=0.5\\cdot 1.83+1.5=2.415\\;\\Rightarrow\\;x_{2}=\\mathrm{fl}(2.415)=2.41,$$\n$$y_{2}=0.5\\cdot 2.41+1.5=2.705\\;\\Rightarrow\\;x_{3}=\\mathrm{fl}(2.705)=2.70,$$\n$$y_{3}=0.5\\cdot 2.70+1.5=2.85\\;\\Rightarrow\\;x_{4}=\\mathrm{fl}(2.85)=2.85,$$\n$$y_{4}=0.5\\cdot 2.85+1.5=2.925\\;\\Rightarrow\\;x_{5}=\\mathrm{fl}(2.925)=2.92,$$\n$$y_{5}=0.5\\cdot 2.92+1.5=2.96\\;\\Rightarrow\\;x_{6}=\\mathrm{fl}(2.96)=2.96,$$\n$$y_{6}=0.5\\cdot 2.96+1.5=2.98\\;\\Rightarrow\\;x_{7}=\\mathrm{fl}(2.98)=2.98,$$\n$$y_{7}=0.5\\cdot 2.98+1.5=2.99\\;\\Rightarrow\\;x_{8}=\\mathrm{fl}(2.99)=2.99,$$\n$$y_{8}=0.5\\cdot 2.99+1.5=2.995\\;\\Rightarrow\\;x_{9}=\\mathrm{fl}(2.995)=2.99.$$\n因此 $x=2.99$ 是 RTZ 模式下的不动点，因为 $0.5\\cdot 2.99+1.5=2.995$ 截断后为 $2.99$。因此，从给定的初始条件出发，$x_{A}^{*}=2.99$。\n\n处理器 B (RNE, 向最近的数舍入，平局向偶，三位有效数字)：\n从 $x_{0}=0.67$ 开始，并对每一步进行舍入：\n$$y_{0}=0.5\\cdot 0.67+1.5=1.835\\;\\Rightarrow\\;x_{1}=\\mathrm{fl}(1.835)=1.84\\quad\\text{（平局，末位为偶）},$$\n$$y_{1}=0.5\\cdot 1.84+1.5=2.42\\;\\Rightarrow\\;x_{2}=2.42,$$\n$$y_{2}=0.5\\cdot 2.42+1.5=2.71\\;\\Rightarrow\\;x_{3}=2.71,$$\n$$y_{3}=0.5\\cdot 2.71+1.5=2.855\\;\\Rightarrow\\;x_{4}=\\mathrm{fl}(2.855)=2.86\\quad\\text{（平局，末位为偶）},$$\n$$y_{4}=0.5\\cdot 2.86+1.5=2.93\\;\\Rightarrow\\;x_{5}=2.93,$$\n$$y_{5}=0.5\\cdot 2.93+1.5=2.965\\;\\Rightarrow\\;x_{6}=\\mathrm{fl}(2.965)=2.96\\quad\\text{（平局，末位为偶）},$$\n$$y_{6}=0.5\\cdot 2.96+1.5=2.98\\;\\Rightarrow\\;x_{7}=2.98,$$\n$$y_{7}=0.5\\cdot 2.98+1.5=2.99\\;\\Rightarrow\\;x_{8}=2.99,$$\n$$y_{8}=0.5\\cdot 2.99+1.5=2.995\\;\\Rightarrow\\;x_{9}=\\mathrm{fl}(2.995)=3.00\\quad\\text{（平局，末位为偶）}。$$\n最后，\n$$y_{9}=0.5\\cdot 3.00+1.5=3.00\\;\\Rightarrow\\;x_{10}=3.00,$$\n所以 $x=3.00$ 是 RNE 模式下的不动点。因此 $x_{B}^{*}=3.00$。\n\n因此，不动点值（保留三位有效数字）为 $x_{A}^{*}=2.99$ 和 $x_{B}^{*}=3.00$。", "answer": "$$\\boxed{\\begin{pmatrix} 2.99 & 3.00 \\end{pmatrix}}$$", "id": "2199495"}]}