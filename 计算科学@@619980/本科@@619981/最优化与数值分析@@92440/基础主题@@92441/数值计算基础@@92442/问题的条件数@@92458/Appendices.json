{"hands_on_practices": [{"introduction": "在数值计算中，数学上等价的公式在实际应用中可能表现出截然不同的数值稳定性。本练习探讨了方差的“计算公式”，它涉及两个大而相近的数的减法。通过这个实践，你将量化在这种情况下舍入误差如何被急剧放大，这一现象被称为“灾难性抵消”，并理解为何它在处理均值远大于标准差的数据时尤为危险。[@problem_id:2161813]", "problem": "一位质量控制工程师负责检验高精度部件制造过程的一致性。这位工程师收集了 $N$ 个部件的样本，并测量了它们的质量，记为 $x_1, x_2, \\ldots, x_N$。这些质量的样本均值计算为 $\\bar{x}$，样本标准差为 $S$。已知该过程非常稳定，其测量结果的标准差远小于均值（即 $S \\ll \\bar{x}$）。\n\n该工程师的分析软件使用所谓的“计算公式”来计算样本方差 $S^2$。该方法包括两个步骤。首先，它计算两个中间量：$T_1 = \\sum_{i=1}^N x_i^2$ 和 $T_2 = N\\bar{x}^2$。其次，它使用这些值来求方差：$S^2 = \\frac{T_1 - T_2}{N-1}$。\n\n由于计算机算术的精度有限，软件所存储的值并非完全精确。设计算值为 $\\hat{T}_1$ 和 $\\hat{T}_2$，并假设它们相对于真值存在微小的相对误差 $\\delta_1$ 和 $\\delta_2$，使得 $\\hat{T}_1 = T_1(1+\\delta_1)$ 和 $\\hat{T}_2 = T_2(1+\\delta_2)$。这些初始误差的量级受一个小的正值 $\\epsilon$ 的限制，该值代表了机器精度：$|\\delta_1| \\leq \\epsilon$ 及 $|\\delta_2| \\leq \\epsilon$。\n\n工程师担心，两个大而相近的数 $T_1$ 和 $T_2$ 相减可能会导致严重的精度损失。为了研究这个问题，请确定计算差值 $D = T_1 - T_2$ 中相对误差的量级的上界。计算得到的差值为 $\\hat{D} = \\hat{T}_1 - \\hat{T}_2$。你的任务是推导出此相对误差量级的上界 $\\left|\\frac{\\hat{D} - D}{D}\\right|$。\n\n请将最终答案表示为一个由样本数 $N$、样本均值 $\\bar{x}$、样本标准差 $S$ 和误差界 $\\epsilon$ 构成的单一闭式解析表达式。", "solution": "我们从以下定义的精确量开始：\n$$\nT_{1}=\\sum_{i=1}^{N}x_{i}^{2},\\qquad T_{2}=N\\bar{x}^{2},\\qquad D=T_{1}-T_{2}.\n$$\n计算值满足：\n$$\n\\hat{T}_{1}=T_{1}(1+\\delta_{1}),\\qquad \\hat{T}_{2}=T_{2}(1+\\delta_{2}),\\qquad |\\delta_{1}|\\leq \\epsilon,\\quad |\\delta_{2}|\\leq \\epsilon,\n$$\n且计算出的差值为：\n$$\n\\hat{D}=\\hat{T}_{1}-\\hat{T}_{2}=T_{1}(1+\\delta_{1})-T_{2}(1+\\delta_{2})=D+\\delta_{1}T_{1}-\\delta_{2}T_{2}.\n$$\n因此，差值的相对误差为：\n$$\n\\frac{\\hat{D}-D}{D}=\\frac{\\delta_{1}T_{1}-\\delta_{2}T_{2}}{D}.\n$$\n取绝对值，并利用三角不等式以及 $\\delta_{1}$ 和 $\\delta_{2}$ 的边界，可得：\n$$\n\\left|\\frac{\\hat{D}-D}{D}\\right|\\leq \\frac{|\\delta_{1}|T_{1}+|\\delta_{2}|T_{2}}{|D|}\\leq \\epsilon\\,\\frac{T_{1}+T_{2}}{D}.\n$$\n为了用 $N$、$\\bar{x}$ 和 $S$ 来表示这个界，我们使用样本均值和样本方差的标准恒等式：\n$$\nS^{2}=\\frac{1}{N-1}\\sum_{i=1}^{N}(x_{i}-\\bar{x})^{2},\\qquad \\sum_{i=1}^{N}x_{i}^{2}=\\sum_{i=1}^{N}(x_{i}-\\bar{x})^{2}+N\\bar{x}^{2}.\n$$\n因此，\n$$\nT_{1}=(N-1)S^{2}+N\\bar{x}^{2},\\qquad T_{2}=N\\bar{x}^{2},\\qquad D=T_{1}-T_{2}=(N-1)S^{2}.\n$$\n将这些代入上界中可得：\n$$\n\\left|\\frac{\\hat{D}-D}{D}\\right|\\leq \\epsilon\\,\\frac{(N-1)S^{2}+2N\\bar{x}^{2}}{(N-1)S^{2}}=\\epsilon\\left(1+\\frac{2N\\bar{x}^{2}}{(N-1)S^{2}}\\right).\n$$\n只要 $S>0$，这个上界就是有限的；当 $S=0$ 时，$D=0$，相对误差未定义，这对应于退化的零方差情况。", "answer": "$$\\boxed{\\epsilon\\left(1+\\frac{2N\\bar{x}^{2}}{(N-1)S^{2}}\\right)}$$", "id": "2161813"}, {"introduction": "从一般函数转向数值分析的核心——线性代数，矩阵的条件数是衡量线性系统 $Ax=b$ 解的敏感度的关键指标。当矩阵接近奇异（不可逆）时，问题会变得“病态”。本练习通过一个简单的参数化矩阵，让你分析当参数趋近于零导致矩阵接近奇异时，其条件数如何变化，从而深刻理解病态性与矩阵近奇异性之间的内在联系。[@problem_id:2428542]", "problem": "在计算工程中，线性系统 $A(\\epsilon)\\,x=b$ 对 $b$（或 $A(\\epsilon)$）中扰动的敏感性由条件数来量化。考虑参数化的 $2 \\times 2$ 对称矩阵\n$$\nA(\\epsilon)=\\begin{pmatrix}\n1 & 1 \\\\\n1 & 1+\\epsilon\n\\end{pmatrix},\n$$\n其中 $\\epsilon>0$ 是一个小参数。使用谱范数（由欧几里得向量范数诱导的矩阵范数），确定当 $\\epsilon \\to 0^{+}$ 时谱条件数 $\\kappa_{2}(A(\\epsilon))$ 的主阶渐近表达式。提供一个关于 $\\epsilon$ 的简化解析表达式。请勿进行数值近似。", "solution": "所述问题是有效的。这是一个计算工程和数值线性代数中的适定问题，基于坚实的数学原理。所有必要信息均已提供，目标清晰明确。我们开始推导。\n\n可逆矩阵 $A$ 的谱条件数 $\\kappa_{2}(A)$ 定义为该矩阵及其逆矩阵的谱范数之积：\n$$\n\\kappa_{2}(A) = \\|A\\|_{2} \\|A^{-1}\\|_{2}\n$$\n问题指定的矩阵 $A(\\epsilon)$ 为：\n$$\nA(\\epsilon) = \\begin{pmatrix} 1 & 1 \\\\ 1 & 1+\\epsilon \\end{pmatrix}\n$$\n该矩阵是对称的。对于对称矩阵，谱范数 $\\| \\cdot \\|_{2}$ 等于其谱半径，即其特征值绝对值的最大值。设 $A(\\epsilon)$ 的特征值为 $\\lambda$。特征值是特征方程 $\\det(A(\\epsilon) - \\lambda I) = 0$ 的根，其中 $I$ 是 $2 \\times 2$ 单位矩阵。\n\n特征方程为：\n$$\n\\det \\begin{pmatrix} 1-\\lambda & 1 \\\\ 1 & 1+\\epsilon-\\lambda \\end{pmatrix} = 0\n$$\n展开行列式得到：\n$$\n(1-\\lambda)(1+\\epsilon-\\lambda) - 1^{2} = 0\n$$\n$$\n1 + \\epsilon - \\lambda - \\lambda - \\epsilon\\lambda + \\lambda^{2} - 1 = 0\n$$\n$$\n\\lambda^{2} - (2+\\epsilon)\\lambda + \\epsilon = 0\n$$\n这是一个关于 $\\lambda$ 的二次方程。我们使用二次公式求解 $\\lambda$：\n$$\n\\lambda = \\frac{-(-(2+\\epsilon)) \\pm \\sqrt{(-(2+\\epsilon))^{2} - 4(1)(\\epsilon)}}{2(1)}\n$$\n$$\n\\lambda = \\frac{2+\\epsilon \\pm \\sqrt{4 + 4\\epsilon + \\epsilon^{2} - 4\\epsilon}}{2}\n$$\n$$\n\\lambda = \\frac{2+\\epsilon \\pm \\sqrt{4 + \\epsilon^{2}}}{2}\n$$\n这给出了两个特征值，我们记为 $\\lambda_{max}$ 和 $\\lambda_{min}$：\n$$\n\\lambda_{max} = \\frac{2+\\epsilon + \\sqrt{4 + \\epsilon^{2}}}{2}\n$$\n$$\n\\lambda_{min} = \\frac{2+\\epsilon - \\sqrt{4 + \\epsilon^{2}}}{2}\n$$\n因为 $\\epsilon > 0$，我们有 $\\sqrt{4+\\epsilon^{2}} > \\sqrt{4} = 2$。并且，$(2+\\epsilon)^2 = 4+4\\epsilon+\\epsilon^2 > 4+\\epsilon^2$，这意味着 $2+\\epsilon > \\sqrt{4+\\epsilon^2}$。因此，可以得出 $\\lambda_{max} > \\lambda_{min} > 0$。两个特征值都是正数。\n\n$A(\\epsilon)$ 的谱范数是最大的特征值绝对值：\n$$\n\\|A(\\epsilon)\\|_{2} = |\\lambda_{max}| = \\lambda_{max} = \\frac{2+\\epsilon + \\sqrt{4 + \\epsilon^{2}}}{2}\n$$\n矩阵 $A(\\epsilon)$ 是可逆的，因为其行列式为 $\\det(A(\\epsilon)) = (1)(1+\\epsilon) - (1)(1) = \\epsilon \\neq 0$。逆矩阵 $A(\\epsilon)^{-1}$ 的特征值是 $A(\\epsilon)$ 特征值的倒数，即 $1/\\lambda_{max}$ 和 $1/\\lambda_{min}$。由于 $A(\\epsilon)^{-1}$ 也是对称的，其谱范数是其最大的特征值绝对值。因为 $0 < \\lambda_{min} < \\lambda_{max}$，所以 $0 < 1/\\lambda_{max} < 1/\\lambda_{min}$。因此：\n$$\n\\|A(\\epsilon)^{-1}\\|_{2} = \\frac{1}{\\lambda_{min}} = \\frac{2}{2+\\epsilon - \\sqrt{4 + \\epsilon^{2}}}\n$$\n谱条件数是最大特征值与最小特征值绝对值之比：\n$$\n\\kappa_{2}(A(\\epsilon)) = \\frac{\\lambda_{max}}{\\lambda_{min}} = \\frac{\\frac{2+\\epsilon + \\sqrt{4 + \\epsilon^{2}}}{2}}{\\frac{2+\\epsilon - \\sqrt{4 + \\epsilon^{2}}}{2}} = \\frac{2+\\epsilon + \\sqrt{4 + \\epsilon^{2}}}{2+\\epsilon - \\sqrt{4 + \\epsilon^{2}}}\n$$\n为了确定当 $\\epsilon \\to 0^{+}$ 时的主阶渐近表达式，我们分析在 $\\epsilon$ 很小时分子和分母的行为。使用二项式级数 $(1+x)^{\\alpha} \\approx 1+\\alpha x$（对于小的 $x$）展开 $\\sqrt{4+\\epsilon^2}$ 项：\n$$\n\\sqrt{4+\\epsilon^2} = 2\\sqrt{1+\\frac{\\epsilon^2}{4}}\n$$\n当 $x = \\epsilon^{2}/4$ 且 $\\alpha = 1/2$ 时，展开式为：\n$$\n2\\sqrt{1+\\frac{\\epsilon^2}{4}} \\approx 2\\left(1 + \\frac{1}{2}\\frac{\\epsilon^2}{4}\\right) = 2 + \\frac{\\epsilon^2}{4}\n$$\n所以，对于 $\\epsilon \\to 0^{+}$，我们有 $\\sqrt{4+\\epsilon^2} = 2 + \\frac{\\epsilon^2}{4} + O(\\epsilon^4)$。\n\n现在我们分析 $\\lambda_{max}$ 和 $\\lambda_{min}$ 的主阶行为。\n对于 $\\kappa_2(A(\\epsilon))$ 的分子：\n$$\n2+\\epsilon + \\sqrt{4 + \\epsilon^{2}} = 2+\\epsilon + \\left(2 + \\frac{\\epsilon^2}{4} + O(\\epsilon^4)\\right) = 4 + \\epsilon + O(\\epsilon^2)\n$$\n当 $\\epsilon \\to 0^{+}$ 时，主项是 $4$。\n\n对于 $\\kappa_2(A(\\epsilon))$ 的分母：\n$$\n2+\\epsilon - \\sqrt{4 + \\epsilon^{2}} = 2+\\epsilon - \\left(2 + \\frac{\\epsilon^2}{4} + O(\\epsilon^4)\\right) = \\epsilon - \\frac{\\epsilon^2}{4} + O(\\epsilon^4)\n$$\n当 $\\epsilon \\to 0^{+}$ 时，主项是 $\\epsilon$。\n\n因此，条件数的主阶渐近表达式是这些主项之比：\n$$\n\\kappa_2(A(\\epsilon)) \\approx \\frac{4+\\epsilon}{\\epsilon - \\frac{\\epsilon^2}{4}} = \\frac{4(1+\\frac{\\epsilon}{4})}{\\epsilon(1-\\frac{\\epsilon}{4})} \\approx \\frac{4}{\\epsilon} \\quad \\text{as } \\epsilon \\to 0^{+}\n$$\n更正式地，我们可以写成：\n$$\n\\kappa_2(A(\\epsilon)) = \\frac{4 + O(\\epsilon)}{\\epsilon + O(\\epsilon^2)} = \\frac{1}{\\epsilon} \\frac{4 + O(\\epsilon)}{1 + O(\\epsilon)} = \\frac{1}{\\epsilon} (4 + O(\\epsilon)) = \\frac{4}{\\epsilon} + O(1)\n$$\n当 $\\epsilon \\to 0^{+}$ 时，$\\kappa_{2}(A(\\epsilon))$ 的主阶渐近表达式为 $\\frac{4}{\\epsilon}$。这表明当 $\\epsilon \\to 0$ 时，矩阵趋于奇异，存在严重的病态问题。", "answer": "$$\\boxed{\\frac{4}{\\epsilon}}$$", "id": "2428542"}, {"introduction": "理论分析提供了深刻的洞见，但亲眼见证病态性的影响是巩固理解的最好方式。这个编程练习将理论付诸实践，要求你使用以极端病态著称的希尔伯特矩阵求解一个线性系统。你将通过计算发现，即使计算残差（后向误差）非常小，解的真实误差（前向误差）也可能巨大无比，从而直观地验证“小残差并不意味着精确解”这一在处理病态问题时的核心准则。[@problem_id:2428600]", "problem": "编写一个完整的程序，通过经验性演示在标准浮点运算中问题条件性对求解线性系统精度的影响。考虑线性系统 $A x = b$，其中 $A$ 是一个 $n \\times n$ 的希尔伯特矩阵 (Hilbert matrix)，其元素为 $A_{i j} = \\dfrac{1}{i + j - 1}$，对于 $1 \\le i,j \\le n$。对于每个测试用例，定义精确解向量 $x_{\\text{true}} \\in \\mathbb{R}^n$ 为 $x_{\\text{true}} = \\mathbf{1}$（所有元素均为 1），并构造右侧项 $b = A x_{\\text{true}}$。然后，使用符合电气与电子工程师协会 (Institute of Electrical and Electronics Engineers, IEEE) $754$ 双精度 (binary$64$) 语义的标准浮点运算来计算数值解 $\\hat{x}$。使用 $\\hat{x}$，计算以下几个量：\n- $2$-范数条件数 $\\kappa_2(A) = \\|A\\|_2 \\,\\|A^{-1}\\|_2$。\n- $2$-范数下的相对前向误差，$\\dfrac{\\|\\hat{x} - x_{\\text{true}}\\|_2}{\\|x_{\\text{true}}\\|_2}$。\n- 缩放残差（一个归一化的后向误差代理），$\\dfrac{\\|b - A \\hat{x}\\|_2}{\\|A\\|_2 \\,\\|\\hat{x}\\|_2 + \\|b\\|_2}$。\n- 解的估计正确十进制位数，定义为 $\\max\\!\\bigl(0,\\,-\\log_{10}(\\max(\\text{相对前向误差}, \\varepsilon)))$，其中 $\\varepsilon$ 表示最小的正规格化 IEEE $754$ 双精度数。\n\n测试集：\n为以下问题规模 $n$ 评估上述各项：\n- $n = 3$，\n- $n = 6$，\n- $n = 10$，\n- $n = 12$。\n\n所有向量和矩阵范数均为谱范数（即矩阵 $2$-范数和向量 $2$-范数）。不涉及角度。不涉及物理单位。\n\n您的程序必须生成单行输出，该行包含所有测试结果，形式为一个用方括号括起来的逗号分隔列表，其中每个测试结果本身是一个形如 $[n,\\;\\kappa_2(A),\\;相对前向误差,\\;缩放残差,\\;估计的正确位数]$ 的列表。因此，最终输出必须是表示列表的列表的单行，不含任何额外文本。例如，其结构必须类似于 $[[\\cdot,\\cdot,\\cdot,\\cdot,\\cdot],[\\cdot,\\cdot,\\cdot,\\cdot,\\cdot],\\ldots]$，但使用实际计算出的数字代替占位符。", "solution": "所提出的问题陈述是有效的。这是一个适定 (well-posed) 的、有科学依据的数值线性代数练习，旨在演示问题条件性、前向误差和后向误差等基本概念。该问题是自洽的，提供了所有必要的定义和数据。它不违反任何科学原理、逻辑，也不包含任何含糊之处。我们将着手进行求解。\n\n该问题要求对病态条件 (ill-conditioning) 对求解线性方程组 $A x = b$ 的影响进行经验性研究。矩阵 $A$ 被选为 $n \\times n$ 的希尔伯特矩阵，这是一个严重病态矩阵的经典例子。其元素由 $A_{i j} = \\frac{1}{i + j - 1}$ 给出，其中 $i, j$ 从 $1$ 到 $n$。\n\n数值分析的核心不仅在于计算解，还在于理解其精度。我们记为 $\\hat{x}$ 的计算解的精度受两个主要因素影响：所用算法的稳定性和问题本身的内在敏感性。这种敏感性由条件数来量化。\n\n对于线性系统 $A x = b$，矩阵 $A$ 的 $2$-范数条件数定义为：\n$$ \\kappa_2(A) = \\|A\\|_2 \\|A^{-1}\\|_2 $$\n其中 $\\| \\cdot \\|_2$ 是谱范数（最大奇异值）。一个大的条件数 $\\kappa_2(A) \\gg 1$ 标志着这是一个病态问题，其中输入数据（$A$ 或 $b$）的微小相对扰动可导致解 $x$ 发生巨大的相对变化。\n\n当我们使用浮点运算求解 $A x = b$ 时，舍入误差是不可避免的。一个后向稳定算法，例如标准求解器所采用的 LU 分解，会产生一个计算解 $\\hat{x}$，该解是一个微扰问题的精确解：\n$$ (A + \\delta A) \\hat{x} = b + \\delta b $$\n这些扰动 $\\delta A$ 和 $\\delta b$ 的“小”是衡量该算法后向稳定性的尺度。数值分析中的一个关键结果为相对前向误差建立了以下界限：\n$$ \\frac{\\|\\hat{x} - x_{\\text{true}}\\|_2}{\\|x_{\\text{true}}\\|_2} \\le \\kappa_2(A) \\left( \\frac{\\|\\delta A\\|_2}{\\|A\\|_2} + \\frac{\\|\\delta b\\|_2}{\\|b\\|_2} \\right) $$\n右侧括号内的项是相对后向误差。对于一个在机器精度 $\\varepsilon_{\\text{mach}}$ 下运行的后向稳定算法，其后向误差通常为 $\\mathcal{O}(\\varepsilon_{\\text{mach}})$ 数量级。IEEE $754$ 双精度的机器精度约为 $2.22 \\times 10^{-16}$。因此，我们预期相对前向误差的界限约为 $\\kappa_2(A) \\cdot \\varepsilon_{\\text{mach}}$。这表明，大的条件数会放大不可避免的舍入误差，从而可能破坏解的精度。\n\n残差向量定义为 $r = b - A \\hat{x}$。残差的范数 $\\|r\\|_2$ 与后向误差有关。问题要求计算一个特定的缩放残差：\n$$ \\frac{\\|b - A \\hat{x}\\|_2}{\\|A\\|_2 \\,\\|\\hat{x}\\|_2 + \\|b\\|_2} $$\n这个量可作为后向误差的归一化代理。由于求解器的后向稳定性，我们预期即使在条件数增长和前向误差激增的情况下，这个值也应保持在 $\\varepsilon_{\\text{mach}}$ 数量级的小范围内。这是一个关键的区别：小的残差不保证小的前向误差。\n\n最后，我们估计解中的正确十进制位数。这与相对前向误差直接相关。如果相对误差为 $10^{-k}$，则解的精度大约为 $k$ 位十进制数。给定的公式 $\\max\\!\\bigl(0,\\,-\\log_{10}(\\max(\\text{相对前向误差}, \\varepsilon)))$ 将此概念形式化。其中项 $\\varepsilon$ 是最小的正规格化双精度数，约为 $2.225 \\times 10^{-308}$，它避免了对零取对数，并处理误差小于可表示精度的情况。\n\n我们现在将对指定的矩阵大小测试集 $n \\in \\{3, 6, 10, 12\\}$ 执行这些计算。对于每个 $n$：\n1.  构造 $n \\times n$ 的希尔伯特矩阵 $A$。\n2.  将真实解 $x_{\\text{true}}$ 定义为包含 $n$ 个 1 的向量。\n3.  计算右侧项 $b = A x_{\\text{true}}$。\n4.  使用标准线性求解器求解数值解 $\\hat{x}$。\n5.  计算指定的四个量：$\\kappa_2(A)$、相对前向误差、缩放残差和估计位数。\n\n结果将通过经验验证该理论。希尔伯特矩阵的条件数随 $n$ 的增长而急剧增大。当 $n$ 较小（例如，$n=3$）时，$\\kappa_2(A)$ 适中，我们预期会得到一个相当精确的解。随着 $n$ 增加到 $10$ 和 $12$，$\\kappa_2(A)$ 将变得巨大（$> 10^{13}$），导致相对前向误差达到 $1$ 或更大的数量级，这表示精度已完全丧失。在整个过程中，缩放残差应保持较小，这展示了算法的后向稳定性，与病态问题糟糕的前向精度形成对比。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import hilbert\n\ndef solve():\n    \"\"\"\n    Empirically demonstrates the effect of problem conditioning on the accuracy\n    of solving linear systems Ax = b using the Hilbert matrix.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [3, 6, 10, 12]\n\n    results = []\n    \n    # Epsilon as defined in the problem: the smallest positive normalized\n    # IEEE 754 double-precision number.\n    smallest_norm_val = np.finfo(np.float64).smallest_normal\n\n    for n in test_cases:\n        # Step 1: Construct the n x n Hilbert matrix A.\n        # The problem statement indices are 1-based, but `scipy.linalg.hilbert` is 0-based,\n        # which results in the same matrix A_ij = 1 / ((i+1) + (j+1) - 1) for 0<=i,j<n.\n        A = hilbert(n)\n\n        # Step 2: Define the exact solution vector x_true (all ones).\n        x_true = np.ones(n)\n\n        # Step 3: Construct the right-hand side b = A * x_true.\n        # This ensures that b is consistent with A and x_true.\n        b = A @ x_true\n\n        # Step 4: Compute the numerical solution x_hat using a standard solver.\n        # numpy.linalg.solve uses LAPACK routines which are backward stable and\n        # operate in IEEE 754 double precision.\n        x_hat = np.linalg.solve(A, b)\n\n        # --- Calculate the required quantities ---\n\n        # The 2-norm condition number kappa_2(A).\n        kappa_2_A = np.linalg.cond(A, 2)\n\n        # The relative forward error in the 2-norm.\n        norm_x_true = np.linalg.norm(x_true, 2)\n        if norm_x_true == 0:\n            # Avoid division by zero, though not possible for x_true = 1.\n            rel_fwd_err = np.linalg.norm(x_hat - x_true, 2)\n        else:\n            rel_fwd_err = np.linalg.norm(x_hat - x_true, 2) / norm_x_true\n        \n        # The scaled residual (a normalized backward error proxy).\n        # residual = b - A @ x_hat\n        # norm_residual = ||b - A*x_hat||_2\n        # scaled_residual = norm_residual / (||A||_2 * ||x_hat||_2 + ||b||_2)\n        norm_A = np.linalg.norm(A, 2)\n        norm_x_hat = np.linalg.norm(x_hat, 2)\n        norm_b = np.linalg.norm(b, 2)\n        norm_residual = np.linalg.norm(b - A @ x_hat, 2)\n        \n        denominator = norm_A * norm_x_hat + norm_b\n        if denominator == 0:\n            # Handle potential division by zero.\n            scaled_res = norm_residual\n        else:\n            scaled_res = norm_residual / denominator\n\n        # The estimated number of correct decimal digits.\n        # est_digits = max(0, -log10(max(relative forward error, epsilon)))\n        log_val = max(rel_fwd_err, smallest_norm_val)\n        est_digits = max(0.0, -np.log10(log_val))\n        \n        # Store results for this test case.\n        results.append([n, kappa_2_A, rel_fwd_err, scaled_res, est_digits])\n\n    # Final print statement in the exact required format.\n    # The output format is a string representation of a list of lists.\n    # Example: [[3, 5.2e+02, ...], [6, 1.5e+07, ...], ...]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2428600"}]}