{"hands_on_practices": [{"introduction": "计算两个几乎相等的数值的对数之差，是展示相减抵消现象的一个经典例子。本练习将引导你运用一个简单的对数恒等式，将不稳定的表达式 $\\ln(x+1) - \\ln(x)$ 转化为在数值计算上更稳健的形式。这个过程不仅展现了问题重构的重要性，还进一步要求使用泰勒级数来分析其行为，让你熟悉一种在科学与工程计算中用于逼近复杂函数的强大工具 [@problem_id:2186157]。", "problem": "在数值计算中，直接以代数形式计算表达式有时会导致灾难性的精度损失。一个经典的例子是函数 $f(x) = \\ln(x+1) - \\ln(x)$，当 $x$ 是很大的正数时，该函数的计算会产生问题。当 $x$ 很大时，$ln(x+1)$ 和 $ln(x)$ 的值非常接近，它们的相减（一种被称为“相消减”的操作）会导致有效数字的大量损失。\n\n为了进行可靠的计算，必须首先将函数 $f(x)$ 转换为一个在数学上等价但在数值上稳定的形式，以避免这种减法运算。您的任务是分析这种稳定形式在 $x$ 很大时的行为。\n\n确定 $f(x)$ 的数值稳定形式在 $x$ 很大时的级数展开式。具体来说，求出该展开式以 $x$ 的负幂次表示的前三项非零项。将您的答案表示为变量 $z = \\frac{1}{x}$ 的多项式。", "solution": "我们从给定函数 $f(x) = \\ln(x+1) - \\ln(x)$ 开始。使用对数恒等式 $\\ln(a) - \\ln(b) = \\ln\\!\\left(\\frac{a}{b}\\right)$，我们得到一个数学上等价且数值上稳定的形式：\n$$\nf(x) = \\ln\\!\\left(\\frac{x+1}{x}\\right) = \\ln\\!\\left(1 + \\frac{1}{x}\\right).\n$$\n对于大的正数 $x$，$\\frac{1}{x}$ 是一个小数，因此这种形式避免了相消减，适合进行稳定的计算。\n\n引入变量 $z = \\frac{1}{x}$。那么\n$$\nf(x) = \\ln(1+z).\n$$\n为了找到函数在 $x$ 很大时（等价于 $z$ 很小时）的级数展开式，我们使用 $\\ln(1+z)$ 在 $z=0$ 处的泰勒级数，即\n$$\n\\ln(1+z) = \\sum_{n=1}^{\\infty} \\frac{(-1)^{n+1}}{n} z^{n}, \\quad \\text{在 } |z| < 1 \\text{ 时有效}.\n$$\n因此，前三个非零项是\n$$\n\\ln(1+z) = z - \\frac{z^{2}}{2} + \\frac{z^{3}}{3} + \\cdots.\n$$\n表示为 $z = \\frac{1}{x}$ 的多项式时，所求的前三项非零展开式为\n$$\nz - \\frac{1}{2} z^{2} + \\frac{1}{3} z^{3}.\n$$", "answer": "$$\\boxed{z - \\frac{1}{2} z^{2} + \\frac{1}{3} z^{3}}$$", "id": "2186157"}, {"introduction": "理论上的理解固然重要，但亲手实践更能揭示数值误差的真实影响。本练习通过模拟在有限精度计算机上的运算，让你直观地感受“灾难性抵消”如何侵蚀计算结果的有效数字。通过对比直接计算与经过代数重构的稳定算法来求解 $x^4 - y^4$，你将能够亲手量化由天真算法引入的巨大相对误差，从而深刻体会到算法设计对计算精度的决定性作用 [@problem_id:2186152]。", "problem": "一位计算科学家正在研究一个系统，其中一个关键的待求量是差值 $D = x^4 - y^4$。输入值 $x$ 和 $y$ 是从高精度实验中获得的正值，并且通常彼此非常接近。这位科学家担心，计算 $D$ 的朴素方法可能会因相减抵消而导致有效数字损失。\n\n所有计算都在一台假想的十进制计算机上执行。这台计算机以标准化的浮点格式表示数字，该格式存储10位有效数字的尾数。每次独立的算术运算（加、减、乘、除）后，结果都会被四舍五入到10位有效数字。舍入规则是四舍五入到最近的值，当出现平局（即数字以5结尾）时，向远离零的方向舍入。\n\n这位科学家决定比较两种方法，在给定输入 $x = 1000.00005$ 和 $y = 1000.00004$ 的情况下计算 $D$。\n\n-   **方法1（朴素法）：** 首先计算 $X = x^4$ 和 $Y = y^4$，然后求它们的差 $D_1 = X - Y$。\n-   **方法2（算法稳定法）：** 使用代数上等价的公式 $D_2 = (x-y)(x+y)(x^2+y^2)$ 来计算结果。\n\n假设用方法2计算出的值 $D_2$ 是真实值更准确的近似，计算方法1的相对误差，其定义为 $\\frac{|D_2 - D_1|}{|D_2|}$。所有的中间和最终计算都必须使用这台假想计算机的算术规则来执行。\n\n将你的最终答案表示为一个四舍五入到三位有效数字的实数。", "solution": "我们将算术建模为基数为10的浮点运算，尾数有10位有效数字，每次运算后都采用四舍五入到最近的值，平局时向远离零的方向舍入的规则。记 $x=1000.00005=1.00000005\\times 10^{3}$ 和 $y=1000.00004=1.00000004\\times 10^{3}$；这些输入是可以被精确表示的。\n\n方法1（朴素法）：通过平方计算 $X=x^{4}$ 和 $Y=y^{4}$，每次乘法后都进行舍入。\n1) 计算 $x^{2}$：\n$$x^{2}=(1.00000005)^{2}\\times 10^{6}=1.0000001000000025\\times 10^{6}\\;\\;\\to\\;\\;1.000000100\\times 10^{6},$$\n所以 $x^{2}_{\\text{fl}}=1000000.100$。\n2) 计算 $y^{2}$：\n$$y^{2}=(1.00000004)^{2}\\times 10^{6}=1.0000000800000016\\times 10^{6}\\;\\;\\to\\;\\;1.000000080\\times 10^{6},$$\n所以 $y^{2}_{\\text{fl}}=1000000.080$。\n3) 平方得到四次方：\n$$x^{4}=(1.000000100)^{2}\\times 10^{12}=1.00000020000001\\times 10^{12}\\;\\;\\to\\;\\;1.000000200\\times 10^{12},$$\n$$y^{4}=(1.000000080)^{2}\\times 10^{12}=1.0000001600000064\\times 10^{12}\\;\\;\\to\\;\\;1.000000160\\times 10^{12}.$$\n因此\n$$D_{1}=X-Y=(1.000000200-1.000000160)\\times 10^{12}=0.000000040\\times 10^{12}=4.000000000\\times 10^{4}.$$\n\n方法2（稳定法）：计算 $D_{2}=(x-y)(x+y)(x^{2}+y^{2})$，每次运算后都进行舍入。\n1) 差与和：\n$$x-y=0.00001=1.000000000\\times 10^{-5},\\quad x+y=2000.00009=2.000000090\\times 10^{3}.$$\n2) 平方和（使用上面计算出的舍入后的 $x^{2},y^{2}$）：\n$$x^{2}+y^{2}=(1.000000100+1.000000080)\\times 10^{6}=2.000000180\\times 10^{6}.$$\n3) 第一个乘积：\n$$(x-y)(x+y)=(1.000000000\\times 10^{-5})(2.000000090\\times 10^{3})=2.000000090\\times 10^{-2}\\;(\\text{已经是}10\\text{位有效数字}).$$\n4) 最终乘积：\n$$D_{2}=(2.000000090\\times 10^{-2})(2.000000180\\times 10^{6})=(2.000000090\\cdot 2.000000180)\\times 10^{4}.$$\n尾数的确切乘积是 $4.0000005400000162$，舍入到 $4.000000540$（10位有效数字），得到\n$$D_{2}=4.000000540\\times 10^{4}=40000.00540.$$\n\n相对误差（以 $D_{2}$ 为参考）在这台计算机上计算，每次运算后都进行舍入：\n1) 差值：\n$$|D_{2}-D_{1}|=|4.000000540\\times 10^{4}-4.000000000\\times 10^{4}|=0.000000540\\times 10^{4}=5.400000000\\times 10^{-3}.$$\n2) 除法：\n$$\\frac{|D_{2}-D_{1}|}{|D_{2}|}=\\frac{5.400000000\\times 10^{-3}}{4.000000540\\times 10^{4}}=\\left(\\frac{5.400000000}{4.000000540}\\right)\\times 10^{-7}.$$\n执行除法并保留10位有效数字，得到\n$$\\frac{5.400000000}{4.000000540}=1.349999818\\;(\\text{舍入到}10\\text{位有效数字}),$$\n所以，计算机计算出的相对误差结果是\n$$1.349999818\\times 10^{-7}.$$\n\n最后，将此结果四舍五入到三位有效数字（使用所述的舍入规则）得到\n$$1.35\\times 10^{-7}.$$", "answer": "$$\\boxed{1.35 \\times 10^{-7}}$$", "id": "2186152"}, {"introduction": "在前两个练习的基础上，我们将探索一种更通用的代数技巧——“提出最大项”——来避免数值抵消。当处理形如 $\\ln(e^a - e^b)$ 的表达式，且 $a$ 与 $b$ 非常接近时，直接计算指数函数之差会导致严重的精度损失。这个练习将挑战你从多个选项中辨别出那个既数学等价又数值稳定的表达式，从而将这一重要策略收入你的数值问题解决工具箱中 [@problem_id:2186124]。", "problem": "在某些物理系统的计算建模中，常常需要计算涉及指数差的表达式。考虑函数 $f(a, b) = \\ln(\\exp(a) - \\exp(b))$，其中 $\\ln$ 表示自然对数，$a$ 和 $b$ 是模型的实值参数。\n\n一个关键的计算挑战出现在 $a > b$ 但差值 $a - b$ 非常小且为正的情况下。在这种情况下，使用标准浮点运算直接计算该表达式可能会导致灾难性的精度损失，这种现象被称为相减抵消，因为 $\\exp(a)$ 和 $\\exp(b)$ 的值变得几乎相等。\n\n为确保计算精度，函数 $f(a, b)$ 必须重构成一个在此情况下数值稳定的代数等价表达式。\n\n对于 $a > b$ 的情况，以下哪个表达式是 $\\ln(\\exp(a) - \\exp(b))$ 的一个数学上有效且数值稳定的重构形式？\n\nA. $b + \\ln(1 - \\exp(b-a))$\n\nB. $a + \\ln(\\exp(b-a) - 1)$\n\nC. $a + \\ln(1 - \\exp(b-a))$\n\nD. $b + \\ln(\\exp(a-b) - 1)$\n\nE. $\\ln(a - b)$", "solution": "我们从目标表达式\n$$\n\\ln\\!\\big(\\exp(a)-\\exp(b)\\big),\n$$\n开始，并考虑给定情况 $a>b$ 且 $a-b$ 是一个小的正数。为避免两个几乎相等的大指数值之间发生相减抵消，我们提出较大的指数项 $\\exp(a)$：\n$$\n\\exp(a)-\\exp(b)=\\exp(a)\\left(1-\\exp(b-a)\\right).\n$$\n利用对数乘法法则 $\\ln(xy)=\\ln x+\\ln y$，我们得到代数等价形式\n$$\n\\ln\\!\\big(\\exp(a)-\\exp(b)\\big)=\\ln\\!\\left(\\exp(a)\\left(1-\\exp(b-a)\\right)\\right)=a+\\ln\\!\\left(1-\\exp(b-a)\\right).\n$$\n由于 $a>b$，我们有 $b-a<0$，因此 $\\exp(b-a)\\in(0,1)$，所以 $1-\\exp(b-a)\\in(0,1)$，故对数是良定义的。这种重构形式避免了两个几乎相等的大数值之间的灾难性相减，是标准的数值稳定形式；在实际计算中，它通常与一个针对小参数的稳定基本函数（例如，通过一个 `log1p` 风格的例程来计算 $\\ln(1-\\exp(b-a))$）配对使用。\n\n现在我们来比较各个选项：\n\n- 选项 C 正是推导出的表达式 $a+\\ln\\!\\left(1-\\exp(b-a)\\right)$，它对于 $a>b$ 的情况既是数学上正确的，也是数值稳定的。\n- 选项 D 是通过提出因子 $\\exp(b)$ 得到的：\n$$\n\\exp(a)-\\exp(b)=\\exp(b)\\left(\\exp(a-b)-1\\right)\\quad\\Rightarrow\\quad \\ln\\!\\big(\\exp(a)-\\exp(b)\\big)=b+\\ln\\!\\left(\\exp(a-b)-1\\right),\n$$\n这在数学上是正确的。然而，当 $a-b$ 很小时，直接计算 $\\exp(a-b)-1$ 同样面临相减抵消的风险；若不使用专门的例程（例如 $\\operatorname{expm1}$），这种方法不太可靠，因此对于 $a>b$ 的情况，标准的稳定选择是选项 C。\n- 选项 A，$b+\\ln\\!\\left(1-\\exp(b-a)\\right)$，与原表达式在代数上不等价。\n- 选项 B，$a+\\ln\\!\\left(\\exp(b-a)-1\\right)$，当 $a>b$ 时，有 $\\exp(b-a)-1<0$，使得对数在实数范围内无定义。\n- 选项 E，$\\ln(a-b)$，与 $\\ln\\!\\big(\\exp(a)-\\exp(b)\\big)$ 没有代数关系。\n\n因此，对于 $a > b$ 的情况，正确的、数学上有效且数值稳定的重构形式是选项 C。", "answer": "$$\\boxed{C}$$", "id": "2186124"}]}