{"hands_on_practices": [{"introduction": "任何数值算法都有其局限性，BiCGSTAB 也不例外。在深入研究其计算过程之前，我们首先要学会识别其潜在的“断点”，即可能导致计算失败的环节。这个练习将帮助你精准定位在 BiCGSTAB 迭代中可能导致除零错误的关键步骤 [@problem_id:2208883]，这对于编写稳健的算法和调试问题至关重要。", "problem": "稳定双共轭梯度法 (BiCGSTAB) 是一种用于求解形如 $A\\mathbf{x} = \\mathbf{b}$ 的非对称线性方程组的迭代算法。该算法生成一系列收敛于真实解的近似解 $\\mathbf{x}_i$。\n\n给定一个初始猜测值 $\\mathbf{x}_0$，初始残差为 $\\mathbf{r}_0 = \\mathbf{b} - A\\mathbf{x}_0$。此外，还会选择一个辅助残差向量 $\\hat{\\mathbf{r}}_0$，通常取 $\\hat{\\mathbf{r}}_0 = \\mathbf{r}_0$。该算法按如下方式进行迭代（$i=1, 2, \\dots$），其中 $(\\mathbf{u}, \\mathbf{v})$ 表示向量 $\\mathbf{u}$ 和 $\\mathbf{v}$ 之间的内积：\n\n- 初始化：$\\rho_0 = 1$，$\\alpha_{0} = 1$，$\\omega_{0} = 1$，$\\mathbf{v}_0 = \\mathbf{0}$，$\\mathbf{p}_0 = \\mathbf{0}$。\n\n- 对于 $i=1, 2, \\dots$\n    1. $\\rho_i = (\\hat{\\mathbf{r}}_0, \\mathbf{r}_{i-1})$\n    2. $\\beta_i = \\frac{\\rho_i}{\\rho_{i-1}} \\frac{\\alpha_{i-1}}{\\omega_{i-1}}$\n    3. $\\mathbf{p}_i = \\mathbf{r}_{i-1} + \\beta_i (\\mathbf{p}_{i-1} - \\omega_{i-1} \\mathbf{v}_{i-1})$\n    4. $\\mathbf{v}_i = A \\mathbf{p}_i$\n    5. $\\alpha_i = \\frac{\\rho_i}{(\\hat{\\mathbf{r}}_0, \\mathbf{v}_i)}$  （BiCG 步的步长）\n    6. $\\mathbf{s}_i = \\mathbf{r}_{i-1} - \\alpha_i \\mathbf{v}_i$\n    7. $\\mathbf{t}_i = A \\mathbf{s}_i$\n    8. $\\omega_i = \\frac{(\\mathbf{t}_i, \\mathbf{s}_i)}{(\\mathbf{t}_i, \\mathbf{t}_i)}$      （稳定化步的步长）\n    9. $\\mathbf{x}_i = \\mathbf{x}_{i-1} + \\alpha_i \\mathbf{p}_i + \\omega_i \\mathbf{s}_i$ （更新解）\n    10. $\\mathbf{r}_i = \\mathbf{s}_i - \\omega_i \\mathbf{t}_i$       （更新残差）\n\n与许多数值算法一样，BiCGSTAB 可能会发生崩溃，特别是由除零引起的崩溃。考虑单次迭代 $i$ 中的计算。在计算步长 $\\alpha_i$ 和 $\\omega_i$ 的过程中可能会发生崩溃。\n\n从以下选项中，选择所有描述了在第 $i$ 次迭代中计算步长 $\\alpha_i$ 或步长 $\\omega_i$ 时导致除零失败的条件。\n\nA. $(\\hat{\\mathbf{r}}_0, \\mathbf{v}_i) = 0$\n\nB. $(\\mathbf{t}_i, \\mathbf{t}_i) = 0$\n\nC. $(\\mathbf{r}_{i-1}, \\mathbf{r}_{i-1}) = 0$\n\nD. $\\rho_i = (\\hat{\\mathbf{r}}_0, \\mathbf{r}_{i-1}) = 0$\n\nE. $(\\mathbf{t}_i, \\mathbf{s}_i) = 0$", "solution": "我们分析 BiCGSTAB 迭代中的两个步长定义：\n$$\n\\alpha_{i}=\\frac{\\rho_{i}}{(\\hat{\\mathbf{r}}_{0},\\mathbf{v}_{i})},\\qquad\n\\omega_{i}=\\frac{(\\mathbf{t}_{i},\\mathbf{s}_{i})}{(\\mathbf{t}_{i},\\mathbf{t}_{i})}.\n$$\n当且仅当分母 $(\\hat{\\mathbf{r}}_{0},\\mathbf{v}_{i})$ 为零时，计算 $\\alpha_{i}$ 的过程中才会发生除零失败。这与选项 A 完全对应。\n\n当且仅当分母 $(\\mathbf{t}_{i},\\mathbf{t}_{i})$ 为零时，计算 $\\omega_{i}$ 的过程中才会发生除零失败。这与选项 B 完全对应。注意，如果 $\\mathbf{t}_{i}=\\mathbf{0}$，则 $(\\mathbf{t}_{i},\\mathbf{t}_{i})=0$，表达式变为 $0/0$ 的形式，这是未定义的。\n\n选项 D，$\\rho_{i}=(\\hat{\\mathbf{r}}_{0},\\mathbf{r}_{i-1})=0$，不会在计算 $\\alpha_{i}$ 时产生除零错误；它只使分子为零，若 $(\\hat{\\mathbf{r}}_{0},\\mathbf{v}_{i})\\neq 0$，则得到 $\\alpha_{i}=0$。选项 E，$(\\mathbf{t}_{i},\\mathbf{s}_{i})=0$，将 $\\omega_{i}$ 的分子设为零，因此若 $(\\mathbf{t}_{i},\\mathbf{t}_{i})\\neq 0$，则得到 $\\omega_{i}=0$，这并非除零错误。选项 C，$(\\mathbf{r}_{i-1},\\mathbf{r}_{i-1})=0$，意味着 $\\mathbf{r}_{i-1}=\\mathbf{0}$（精确收敛），并可能导致 $\\mathbf{t}_{i}=\\mathbf{0}$，但是在步长计算中引发除零的直接条件是由选项 B 捕获的，而非 C 本身。\n\n因此，在计算步长 $\\alpha_{i}$ 或 $\\omega_{i}$ 时直接导致除零失败的条件是 A 和 B。", "answer": "$$\\boxed{AB}$$", "id": "2208883"}, {"introduction": "理论学习之后，最好的消化方式就是亲自动手进行一次完整的计算。本练习将引导你使用精确算术，在一个简单的 $2 \\times 2$ 线性系统上完整地执行 BiCGSTAB 方法 [@problem_id:2374444]。通过手动计算每一步的中间量，你将对算法中各个参数（如 $\\rho_k, \\alpha_k, \\omega_k$）的相互作用和演化建立起直观而深刻的理解。", "problem": "您将应用双共轭梯度稳定 (BiCGSTAB) 方法（全称为 BiConjugate Gradient Stabilized (BiCGSTAB)）到一个非对称线性系统，以明确说明在精确算术和标准参数选择下，从零初始猜测开始，该方法需要两次迭代才能收敛。考虑具有以下条件的线性系统：\n- 矩阵 $A = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix}$，\n- 右端项 $b = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$，\n- 初始猜测 $x_0 = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$，\n- 单位预条件子，以及\n- 影子残差 $\\hat{r} = r_0$，其中 $r_0 = b - A x_0$。\n\n所有内积均为标准欧几里得内积。请使用精确算术（即不要对中间量进行四舍五入）。从定义 BiCGSTAB 递推关系的残差、搜索方向和标量系数的核心定义开始，逐步执行 BiCGSTAB 迭代，并证明：\n1. 第一次迭代后，残差为非零。\n2. 第二次迭代后，该方法达到精确解（残差等于零向量）。\n\n为证实这些论断，请明确计算并报告 BiCGSTAB 直至收敛所使用的所有中间向量和标量。最后，提供该系统在第一次 BiCGSTAB 迭代期间产生的第一个平滑参数 $\\omega_1$ 的精确值。请将最终答案表示为一个精确的有理数，不要四舍五入。", "solution": "我们将通过逐步应用 BiCGSTAB 算法来构建解。该算法如下：\n\n**初始化：**\n1. 给定初始猜测 $x_0$。\n2. 计算初始残差 $r_0 = b - Ax_0$。\n3. 选择一个影子残差向量 $\\hat{r}_0$，使得 $(\\hat{r}_0, r_0) \\neq 0$。此处，给定 $\\hat{r}_0 = r_0$。\n4. 为递推设置初始参数：$\\rho_0 = 1$，$\\alpha_0 = 1$，$\\omega_0 = 1$。\n5. 设置初始搜索方向：$p_0 = \\mathbf{0}$，$v_0 = \\mathbf{0}$。\n\n**主循环（对于 $k = 1, 2, \\dots$）：**\n1. $\\rho_k = (\\hat{r}_0, r_{k-1})$\n2. $\\beta_k = \\frac{\\rho_k}{\\rho_{k-1}} \\frac{\\alpha_{k-1}}{\\omega_{k-1}}$\n3. $p_k = r_{k-1} + \\beta_k (p_{k-1} - \\omega_{k-1} v_{k-1})$\n4. $v_k = A p_k$\n5. $\\alpha_k = \\frac{\\rho_k}{(\\hat{r}_0, v_k)}$\n6. $s_k = r_{k-1} - \\alpha_k v_k$\n7. $t_k = A s_k$\n8. $\\omega_k = \\frac{(t_k, s_k)}{(t_k, t_k)}$\n9. $x_k = x_{k-1} + \\alpha_k p_k + \\omega_k s_k$\n10. $r_k = s_k - \\omega_k t_k$\n\n我们现在将此算法应用于给定的系统。\n\n**初始化（$k=0$）：**\n- 系统由 $A = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix}$ 和 $b = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ 定义。\n- 初始猜测为 $x_0 = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$。\n- 初始残差为 $r_0 = b - Ax_0 = b = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$。\n- 影子残差为 $\\hat{r}_0 = r_0 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$。\n- 初始参数设置为 $\\rho_0 = 1$，$\\alpha_0 = 1$，$\\omega_0 = 1$。\n- 初始方向向量为 $p_0 = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$ 和 $v_0 = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$。\n\n**迭代 1 ($k=1$):**\n1. $\\rho_1 = (\\hat{r}_0, r_0) = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = 1$。\n2. $\\beta_1 = \\frac{\\rho_1}{\\rho_0} \\frac{\\alpha_0}{\\omega_0} = \\frac{1}{1} \\frac{1}{1} = 1$。\n3. $p_1 = r_0 + \\beta_1(p_0 - \\omega_0 v_0) = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} + 1 \\left( \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} - 1 \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} \\right) = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$。\n4. $v_1 = A p_1 = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 3 \\end{pmatrix}$。\n5. $\\alpha_1$ 的分母为 $(\\hat{r}_0, v_1) = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 3 \\end{pmatrix} = 1$。因此，$\\alpha_1 = \\frac{\\rho_1}{(\\hat{r}_0, v_1)} = \\frac{1}{1} = 1$。\n6. $s_1 = r_0 - \\alpha_1 v_1 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} - 1 \\begin{pmatrix} 1 \\\\ 3 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ -3 \\end{pmatrix}$。\n7. $t_1 = A s_1 = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ -3 \\end{pmatrix} = \\begin{pmatrix} -6 \\\\ -12 \\end{pmatrix}$。\n8. 对于 $\\omega_1$，我们计算内积：\n   $(t_1, s_1) = \\begin{pmatrix} -6 & -12 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ -3 \\end{pmatrix} = (0)(-6) + (-3)(-12) = 36$。\n   $(t_1, t_1) = \\begin{pmatrix} -6 & -12 \\end{pmatrix} \\begin{pmatrix} -6 \\\\ -12 \\end{pmatrix} = (-6)^2 + (-12)^2 = 36 + 144 = 180$。\n   所以，$\\omega_1 = \\frac{(t_1, s_1)}{(t_1, t_1)} = \\frac{36}{180} = \\frac{1}{5}$。\n9. $x_1 = x_0 + \\alpha_1 p_1 + \\omega_1 s_1 = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} + 1 \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} + \\frac{1}{5} \\begin{pmatrix} 0 \\\\ -3 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ -\\frac{3}{5} \\end{pmatrix}$。\n10. $r_1 = s_1 - \\omega_1 t_1 = \\begin{pmatrix} 0 \\\\ -3 \\end{pmatrix} - \\frac{1}{5} \\begin{pmatrix} -6 \\\\ -12 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ -3 \\end{pmatrix} - \\begin{pmatrix} -\\frac{6}{5} \\\\ -\\frac{12}{5} \\end{pmatrix} = \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix}$。\n\n第一次迭代后，残差为 $r_1 = \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix}$，它不是零向量。这证实了第一个论断。\n\n**迭代 2 ($k=2$):**\n1. $\\rho_2 = (\\hat{r}_0, r_1) = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} = \\frac{6}{5}$。\n2. $\\beta_2 = \\frac{\\rho_2}{\\rho_1} \\frac{\\alpha_1}{\\omega_1} = \\frac{6/5}{1} \\frac{1}{1/5} = \\frac{6}{5} \\cdot 5 = 6$。\n3. $p_2 = r_1 + \\beta_2(p_1 - \\omega_1 v_1) = \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} + 6 \\left( \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} - \\frac{1}{5} \\begin{pmatrix} 1 \\\\ 3 \\end{pmatrix} \\right) = \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} + 6 \\begin{pmatrix} \\frac{4}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} = \\begin{pmatrix} \\frac{6}{5} + \\frac{24}{5} \\\\ -\\frac{3}{5} - \\frac{18}{5} \\end{pmatrix} = \\begin{pmatrix} \\frac{30}{5} \\\\ -\\frac{21}{5} \\end{pmatrix} = \\begin{pmatrix} 6 \\\\ -\\frac{21}{5} \\end{pmatrix}$。\n4. $v_2 = A p_2 = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\begin{pmatrix} 6 \\\\ -\\frac{21}{5} \\end{pmatrix} = \\begin{pmatrix} 6 - \\frac{42}{5} \\\\ 18 - \\frac{84}{5} \\end{pmatrix} = \\begin{pmatrix} \\frac{30-42}{5} \\\\ \\frac{90-84}{5} \\end{pmatrix} = \\begin{pmatrix} -\\frac{12}{5} \\\\ \\frac{6}{5} \\end{pmatrix}$。\n5. $\\alpha_2$ 的分母为 $(\\hat{r}_0, v_2) = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} -\\frac{12}{5} \\\\ \\frac{6}{5} \\end{pmatrix} = -\\frac{12}{5}$。因此，$\\alpha_2 = \\frac{\\rho_2}{(\\hat{r}_0, v_2)} = \\frac{6/5}{-12/5} = -\\frac{1}{2}$。\n6. $s_2 = r_1 - \\alpha_2 v_2 = \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} - \\left(-\\frac{1}{2}\\right) \\begin{pmatrix} -\\frac{12}{5} \\\\ \\frac{6}{5} \\end{pmatrix} = \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} - \\begin{pmatrix} \\frac{6}{5} \\\\ -\\frac{3}{5} \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$。\n7. 由于 $s_2 = \\mathbf{0}$，我们有 $t_2 = A s_2 = A \\mathbf{0} = \\mathbf{0}$。\n8. $\\omega_2$ 的公式变为 $\\frac{(t_2, s_2)}{(t_2, t_2)} = \\frac{0}{0}$。这是一种所谓的“幸运分解”情况，表明在此步骤将找到精确解。我们可以设置 $\\omega_2 = 0$。\n9. $x_2 = x_1 + \\alpha_2 p_2 + \\omega_2 s_2 = \\begin{pmatrix} 1 \\\\ -\\frac{3}{5} \\end{pmatrix} + \\left(-\\frac{1}{2}\\right) \\begin{pmatrix} 6 \\\\ -\\frac{21}{5} \\end{pmatrix} + 0 \\cdot \\mathbf{0} = \\begin{pmatrix} 1 - 3 \\\\ -\\frac{3}{5} + \\frac{21}{10} \\end{pmatrix} = \\begin{pmatrix} -2 \\\\ -\\frac{6}{10} + \\frac{21}{10} \\end{pmatrix} = \\begin{pmatrix} -2 \\\\ \\frac{15}{10} \\end{pmatrix} = \\begin{pmatrix} -2 \\\\ \\frac{3}{2} \\end{pmatrix}$。\n10. $r_2 = s_2 - \\omega_2 t_2 = \\mathbf{0} - 0 \\cdot \\mathbf{0} = \\mathbf{0}$。\n\n残差 $r_2$ 是零向量，这意味着算法已收敛到精确解。这证实了第二个论断。为了验证，我们检查该解：\n$A x_2 = \\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\begin{pmatrix} -2 \\\\ \\frac{3}{2} \\end{pmatrix} = \\begin{pmatrix} 1(-2) + 2(\\frac{3}{2}) \\\\ 3(-2) + 4(\\frac{3}{2}) \\end{pmatrix} = \\begin{pmatrix} -2 + 3 \\\\ -6 + 6 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = b$。\n解是正确的。\n\n问题要求第一个平滑参数 $\\omega_1$ 的值。根据第一次迭代的计算，该值为 $\\omega_1 = \\frac{1}{5}$。", "answer": "$$\n\\boxed{\\frac{1}{5}}\n$$", "id": "2374444"}, {"introduction": "BiCGSTAB 中的“STAB”代表“Stabilized”（稳定化），但这具体意味着什么呢？这个练习通过一个精心设计的例子，让你直面 BiCG 方法可能崩溃而 BiCGSTAB 却能稳健求解的场景 [@problem_id:2376326]。通过对比两种方法的表现，你将切实理解 BiCGSTAB 稳定化步骤的精妙之处及其在克服数值不稳定性方面的关键作用。", "problem": "从克里洛夫子空间迭代法的第一性原理出发，要求您演示双共轭梯度（BiCG）法如何可能发生崩溃，而稳定双共轭梯度（BiCGSTAB）法在处理同一个线性系统时却仍然收敛。考虑线性系统 $A x = b$，其中\n$$\nA \\;=\\; \\begin{pmatrix}\n2 & 0 & 1\\\\\n1 & 3 & 0\\\\\n0 & 0 & 4\n\\end{pmatrix}, \n\\qquad\nb \\;=\\; \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix},\n\\qquad\nx_0 \\;=\\; \\begin{pmatrix} 0\\\\ 0\\\\ 0 \\end{pmatrix}.\n$$\n对于双共轭梯度法（BiCG），设置初始残差 $r_0 = b - A x_0$ 和初始影子残差 $\\tilde{r}_0 = r_0$。仅使用 BiCG 第一步更新的定义（残差和影子残差由单步克里洛夫投影和双正交配对定义），显式计算 $r_1$ 和 $\\tilde{r}_1$，并验证 $r_1 \\neq 0$、$\\tilde{r}_1 \\neq 0$ 和 $r_1^{T}\\tilde{r}_1 = 0$，这表明 BiCG 将在下一步发生崩溃。\n\n接下来，将稳定双共轭梯度法（BiCGSTAB）应用于具有相同初始猜测 $x_0$、相同初始残差 $r_0$ 和选定的固定影子残差 $\\hat{r}$ 的同一系统，其中\n$$\n\\hat{r} \\;=\\; r_0 + \\begin{pmatrix} 0\\\\ 1\\\\ 0 \\end{pmatrix} \\;=\\; \\begin{pmatrix} 1\\\\ 1\\\\ 0 \\end{pmatrix}.\n$$\n使用 BiCGSTAB 递推的标准定义（标量系数由 $r_{k-1}$、$\\hat{r}$ 和在 $A$ 作用下的克里洛夫像的内积定义），执行第一次 BiCGSTAB 迭代来计算平滑参数 $\\omega_1$。\n\n您的任务是提供标量 $\\omega_1$ 的值。请将最终答案表示为精确的最简分数。无需四舍五入。最终答案必须是单一数字，不带单位。", "solution": "所考虑的线性系统为 $A x = b$，给定条件如下：\n$$\nA \\;=\\; \\begin{pmatrix}\n2 & 0 & 1\\\\\n1 & 3 & 0\\\\\n0 & 0 & 4\n\\end{pmatrix}, \n\\qquad\nb \\;=\\; \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix},\n\\qquad\nx_0 \\;=\\; \\begin{pmatrix} 0\\\\ 0\\\\ 0 \\end{pmatrix}.\n$$\n\n首先，我们分析 BiCG 方法。初始残差为 $r_0 = b - A x_0 = b - 0 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix}$。\n问题指定设置初始影子残差 $\\tilde{r}_0 = r_0$。因此，$\\tilde{r}_0 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix}$。\nBiCG 算法设置初始搜索方向为 $p_0 = r_0$ 和 $\\tilde{p}_0 = \\tilde{r}_0$。\n在每一步 $k$ 中，标量 $\\alpha_k$ 的计算公式为 $\\alpha_k = \\frac{\\tilde{r}_k^T r_k}{\\tilde{p}_k^T A p_k}$。\n对于第一步（$k=0$）：\n分子为 $\\tilde{r}_0^T r_0 = r_0^T r_0 = \\begin{pmatrix} 1 & 0 & 0 \\end{pmatrix} \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} = 1$。\n为了计算分母，我们首先求出 $A p_0$：\n$A p_0 = A r_0 = \\begin{pmatrix} 2 & 0 & 1\\\\ 1 & 3 & 0\\\\ 0 & 0 & 4 \\end{pmatrix} \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 2\\\\ 1\\\\ 0 \\end{pmatrix}$。\n分母则为 $\\tilde{p}_0^T A p_0 = \\tilde{r}_0^T (A r_0) = \\begin{pmatrix} 1 & 0 & 0 \\end{pmatrix} \\begin{pmatrix} 2\\\\ 1\\\\ 0 \\end{pmatrix} = 2$。\n因此，$\\alpha_0 = \\frac{1}{2}$。\n\n更新后的残差 $r_1$ 和 $\\tilde{r}_1$ 计算如下：\n$r_1 = r_0 - \\alpha_0 A p_0 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} - \\frac{1}{2} \\begin{pmatrix} 2\\\\ 1\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} - \\begin{pmatrix} 1\\\\ 1/2\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0\\\\ -1/2\\\\ 0 \\end{pmatrix}$。\n$\\tilde{r}_1 = \\tilde{r}_0 - \\alpha_0 A^T \\tilde{p}_0$。$A$ 的转置是 $A^T = \\begin{pmatrix} 2 & 1 & 0\\\\ 0 & 3 & 0\\\\ 1 & 0 & 4 \\end{pmatrix}$。\n$A^T \\tilde{p}_0 = A^T \\tilde{r}_0 = \\begin{pmatrix} 2 & 1 & 0\\\\ 0 & 3 & 0\\\\ 1 & 0 & 4 \\end{pmatrix} \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 2\\\\ 0\\\\ 1 \\end{pmatrix}$。\n$\\tilde{r}_1 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} - \\frac{1}{2} \\begin{pmatrix} 2\\\\ 0\\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} - \\begin{pmatrix} 1\\\\ 0\\\\ 1/2 \\end{pmatrix} = \\begin{pmatrix} 0\\\\ 0\\\\ -1/2 \\end{pmatrix}$。\n\n我们验证问题中陈述的条件：\n1. $r_1 = \\begin{pmatrix} 0\\\\ -1/2\\\\ 0 \\end{pmatrix} \\neq 0$。\n2. $\\tilde{r}_1 = \\begin{pmatrix} 0\\\\ 0\\\\ -1/2 \\end{pmatrix} \\neq 0$。\n3. $r_1^T \\tilde{r}_1 = \\begin{pmatrix} 0 & -1/2 & 0 \\end{pmatrix} \\begin{pmatrix} 0\\\\ 0\\\\ -1/2 \\end{pmatrix} = (0)(0) + (-1/2)(0) + (0)(-1/2) = 0$。\n\nBiCG 算法的下一步是计算 $\\beta_0 = \\frac{\\tilde{r}_1^T r_1}{\\tilde{r}_0^T r_0} = \\frac{0}{1} = 0$。\n这导致新的搜索方向 $p_1 = r_1 + \\beta_0 p_0 = r_1$ 和 $\\tilde{p}_1 = \\tilde{r}_1 + \\beta_0 \\tilde{p}_0 = \\tilde{r}_1$。\n然后，下一个标量 $\\alpha_1$ 的计算公式为 $\\alpha_1 = \\frac{\\tilde{r}_1^T r_1}{\\tilde{p}_1^T A p_1} = \\frac{0}{\\tilde{r}_1^T A r_1}$。\n分母项为 $\\tilde{r}_1^T A r_1 = \\begin{pmatrix} 0 & 0 & -1/2 \\end{pmatrix} \\begin{pmatrix} 2 & 0 & 1\\\\ 1 & 3 & 0\\\\ 0 & 0 & 4 \\end{pmatrix} \\begin{pmatrix} 0\\\\ -1/2\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 & -2 \\end{pmatrix} \\begin{pmatrix} 0\\\\ -1/2\\\\ 0 \\end{pmatrix} = 0$。\n由于 $\\alpha_1$ 的分子和分母都为零，这构成了 BiCG 算法的严重崩溃。\n\n接下来，我们应用 BiCGSTAB 方法。初始残差为 $r_0 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix}$。给定的固定影子残差为 $\\hat{r} = \\begin{pmatrix} 1\\\\ 1\\\\ 0 \\end{pmatrix}$。\n标准算法以初始值 $\\rho_0=1$、$\\alpha_0=1$、$\\omega_0=1$、$p_0=0$ 和 $v_0=0$ 开始。我们执行第一次迭代（$k=1$）。\n\n1. 计算 $\\rho_1 = \\hat{r}^T r_0$：\n$\\rho_1 = \\begin{pmatrix} 1 & 1 & 0 \\end{pmatrix} \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} = 1$。\n\n2. 计算 $\\beta_1 = \\frac{\\rho_1}{\\rho_0} \\frac{\\alpha_0}{\\omega_0}$：\n$\\beta_1 = \\frac{1}{1} \\cdot \\frac{1}{1} = 1$。\n\n3. 计算 $p_1 = r_0 + \\beta_1 (p_0 - \\omega_0 v_0)$：\n$p_1 = r_0 + 1 (0 - 1 \\cdot 0) = r_0 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix}$。\n\n4. 计算 $v_1 = A p_1$：\n$v_1 = A r_0 = \\begin{pmatrix} 2 & 0 & 1\\\\ 1 & 3 & 0\\\\ 0 & 0 & 4 \\end{pmatrix} \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 2\\\\ 1\\\\ 0 \\end{pmatrix}$。\n\n5. 计算 $\\alpha_1 = \\frac{\\rho_1}{\\hat{r}^T v_1}$：\n$\\hat{r}^T v_1 = \\begin{pmatrix} 1 & 1 & 0 \\end{pmatrix} \\begin{pmatrix} 2\\\\ 1\\\\ 0 \\end{pmatrix} = (1)(2) + (1)(1) + (0)(0) = 3$。\n$\\alpha_1 = \\frac{1}{3}$。\n\n6. 计算临时残差 $s_1 = r_0 - \\alpha_1 v_1$：\n$s_1 = \\begin{pmatrix} 1\\\\ 0\\\\ 0 \\end{pmatrix} - \\frac{1}{3} \\begin{pmatrix} 2\\\\ 1\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1 - 2/3\\\\ 0 - 1/3\\\\ 0 - 0 \\end{pmatrix} = \\begin{pmatrix} 1/3\\\\ -1/3\\\\ 0 \\end{pmatrix}$。\n\n7. 计算 $t_1 = A s_1$：\n$t_1 = \\begin{pmatrix} 2 & 0 & 1\\\\ 1 & 3 & 0\\\\ 0 & 0 & 4 \\end{pmatrix} \\begin{pmatrix} 1/3\\\\ -1/3\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 2(1/3) + 0(-1/3) + 1(0) \\\\ 1(1/3) + 3(-1/3) + 0(0) \\\\ 0(1/3) + 0(-1/3) + 4(0) \\end{pmatrix} = \\begin{pmatrix} 2/3\\\\ 1/3 - 1\\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 2/3\\\\ -2/3\\\\ 0 \\end{pmatrix}$。\n\n8. 计算平滑参数 $\\omega_1 = \\frac{t_1^T s_1}{t_1^T t_1}$：\n分子为 $t_1^T s_1 = \\begin{pmatrix} 2/3 & -2/3 & 0 \\end{pmatrix} \\begin{pmatrix} 1/3\\\\ -1/3\\\\ 0 \\end{pmatrix} = (\\frac{2}{3})(\\frac{1}{3}) + (\\frac{-2}{3})(\\frac{-1}{3}) = \\frac{2}{9} + \\frac{2}{9} = \\frac{4}{9}$。\n分母为 $t_1^T t_1 = \\begin{pmatrix} 2/3 & -2/3 & 0 \\end{pmatrix} \\begin{pmatrix} 2/3\\\\ -2/3\\\\ 0 \\end{pmatrix} = (\\frac{2}{3})^2 + (\\frac{-2}{3})^2 = \\frac{4}{9} + \\frac{4}{9} = \\frac{8}{9}$。\n$\\omega_1 = \\frac{4/9}{8/9} = \\frac{4}{8} = \\frac{1}{2}$。\n\n平滑参数 $\\omega_1$ 的值为 $\\frac{1}{2}$。这表明，通过适当选择 $\\hat{r}$，BiCGSTAB 算法不会崩溃，并能继续进行计算。", "answer": "$$\n\\boxed{\\frac{1}{2}}\n$$", "id": "2376326"}]}