{"hands_on_practices": [{"introduction": "多重网格方法的核心思想是在粗网格上求解细网格误差的光滑分量。为此，我们必须首先将信息从细网格传递到粗网格，这个过程称为限制（restriction）。本练习将通过一个具体的一维问题，让你动手实践最简单的限制方法——“注入”（injection），来计算粗网格上的残差向量，这有助于你直观地理解多重网格循环中的数据流动。[@problem_id:2188716]", "problem": "在求解一维边值问题的多重网格方法中，我们通常需要在不同分辨率的网格之间传递信息。考虑一个在区间 $[0, 1]$ 上的均匀细网格 $\\Omega_h$，其上有 9 个内部网格点。一个残差向量 $r_h$ 在这些内部点上的值按顺序给出如下：\n$$\nr_h = (1.2, 0.5, -0.8, 2.1, 0.0, -1.5, 3.3, 0.9, -2.4)^T\n$$\n现在，考虑一个粗网格 $\\Omega_{2h}$，它是通过从细网格 $\\Omega_h$ 中每隔一个点取一个点来构建的。这样得到的粗网格有 4 个内部点。\n\n将残差从细网格传递到粗网格的过程称为限制（restriction）。我们将使用最简单的限制算子，称为注入（injection）。在注入操作中，粗网格点上的残差值被简单地设置为细网格上相应重合点处的残差值。\n\n计算粗网格 $\\Omega_{2h}$ 上 4 个内部点处的残差向量 $r_{2h}$。将您的答案表示为一个单行矩阵，按顺序包含粗网格残差向量的 4 个分量。", "solution": "该问题要求我们通过对一个来自细网格的残差向量应用注入限制算子来计算粗网格上的残差向量。\n\n设细网格 $\\Omega_h$ 的内部点用 $x_i$ 表示，其中 $i=1, 2, \\dots, 9$。给定的细网格残差向量是 $r_h$，其中第 $i$ 个分量 $(r_h)_i$ 是点 $x_i$ 处的残差值。\n所以，我们有：\n$r_h(x_1) = 1.2$\n$r_h(x_2) = 0.5$\n$r_h(x_3) = -0.8$\n$r_h(x_4) = 2.1$\n$r_h(x_5) = 0.0$\n$r_h(x_6) = -1.5$\n$r_h(x_7) = 3.3$\n$r_h(x_8) = 0.9$\n$r_h(x_9) = -2.4$\n\n粗网格 $\\Omega_{2h}$ 是通过从细网格中每隔一个点取一个点构成的。这意味着粗网格的内部点（我们称之为 $X_j$，其中 $j=1, 2, 3, 4$）与细网格的偶数索引点重合。\n具体来说：\n粗网格的第一个内部点 $X_1$ 与细网格的第二个内部点 $x_2$ 重合。\n粗网格的第二个内部点 $X_2$ 与细网格的第四个内部点 $x_4$ 重合。\n粗网格的第三个内部点 $X_3$ 与细网格的第六个内部点 $x_6$ 重合。\n粗网格的第四个内部点 $X_4$ 与细网格的第八个内部点 $x_8$ 重合。\n一般来说，第 $j$ 个粗网格点 $X_j$ 对应于细网格点 $x_{2j}$。\n\n限制算子是注入。这意味着粗网格点上的粗网格残差 $r_{2h}$ 的值就是同一位置上细网格残差 $r_h$ 的值。\n在数学上，这表示为：\n$$\nr_{2h}(X_j) = r_h(x_{2j})\n$$\n\n现在我们可以计算粗网格残差向量 $r_{2h}$ 的分量。\n\n对于第一个分量（在点 $X_1$ 处）：\n$$\n(r_{2h})_1 = r_{2h}(X_1) = r_h(x_2) = 0.5\n$$\n这是给定 $r_h$ 向量的第 2 个分量。\n\n对于第二个分量（在点 $X_2$ 处）：\n$$\n(r_{2h})_2 = r_{2h}(X_2) = r_h(x_4) = 2.1\n$$\n这是给定 $r_h$ 向量的第 4 个分量。\n\n对于第三个分量（在点 $X_3$ 处）：\n$$\n(r_{2h})_3 = r_{2h}(X_3) = r_h(x_6) = -1.5\n$$\n这是给定 $r_h$ 向量的第 6 个分量。\n\n对于第四个分量（在点 $X_4$ 处）：\n$$\n(r_{2h})_4 = r_{2h}(X_4) = r_h(x_8) = 0.9\n$$\n这是给定 $r_h$ 向量的第 8 个分量。\n\n按顺序组合这些分量，我们得到粗网格残差向量：\n$$\nr_{2h} = (0.5, 2.1, -1.5, 0.9)^T\n$$\n\n题目要求将此向量表示为单行矩阵。", "answer": "$$\\boxed{\\begin{pmatrix} 0.5 & 2.1 & -1.5 & 0.9 \\end{pmatrix}}$$", "id": "2188716"}, {"introduction": "在粗网格上计算出误差校正量后，我们需要将其传回细网格以更新解。这个从粗网格到细网格的数据传递过程被称为延长（prolongation）或插值（interpolation）。本练习将指导你使用标准的线性插值方法，将一个在粗网格上定义的校正向量转换为细网格上的向量，这是与限制算子相对应的关键逆操作。[@problem_id:2188706]", "problem": "在求解定义域 $[0, 1]$ 上的一维边值问题的多重网格法背景下，使用了一个细网格 $\\Omega_h$ 和一个粗网格 $\\Omega_{2h}$。细网格 $\\Omega_h$ 由节点 $x_i = i \\cdot h$ 定义，其中 $i = 0, 1, \\dots, 8$，网格间距为 $h = 1/8$。粗网格 $\\Omega_{2h}$ 是细网格的子集，仅包含节点 $x_j = j \\cdot (2h)$，其中 $j = 0, 1, \\dots, 4$。因此，细网格的内部点为 $\\{x_1, x_2, x_3, x_4, x_5, x_6, x_7\\}$，而粗网格的内部点对应于细网格索引下的 $\\{x_2, x_4, x_6\\}$。\n\n在算法的一个步骤中，在粗网格上求解一个误差修正方程，得到修正向量 $e_{2h}$。该向量在 $\\Omega_{2h}$ 的内部节点上定义，其值为 $e_{2h}(x_2) = c_1$、$e_{2h}(x_4) = c_2$ 和 $e_{2h}(x_6) = c_3$，其中 $c_1, c_2, c_3$ 是符号常数。已知修正在定义域的边界处为零，因此 $e_{2h}(x_0) = 0$ 且 $e_{2h}(x_8) = 0$。\n\n这个粗网格修正必须通过一个延拓（插值）算子（记为 $I_{2h}^h$）传回到细网格，以生成细网格修正向量 $e_h = I_{2h}^h e_{2h}$。插值是线性的，定义如下：\n1. 对于任何同时也是粗网格节点的细网格节点 $x_i$（即 $i$ 为偶数），其值被直接注入：$e_h(x_i) = e_{2h}(x_i)$。\n2. 对于任何不属于粗网格节点的细网格节点 $x_i$（即 $i$ 为奇数），其值为其最近的两个相邻粗网格节点上值的算术平均值。\n\n确定在细网格的所有七个内部点 $\\{x_1, x_2, \\dots, x_7\\}$ 上的完整修正向量 $e_h$。将答案表示为一个包含 7 个分量的单行向量，按从 $x_1$ 到 $x_7$ 的顺序排列，并用常数 $c_1$、$c_2$ 和 $c_3$ 表示。", "solution": "给定在 $[0,1]$ 上的两个嵌套均匀网格：细网格 $\\Omega_{h}$，其节点为 $x_{i}=i h$，$i=0,\\dots,8$，$h=1/8$；以及粗网格 $\\Omega_{2h}$，由偶数索引的细网格节点子集构成，$x_{j}=j(2h)$，$j=0,\\dots,4$，即索引 $i=0,2,4,6,8$。细网格的内部节点是 $x_{1},\\dots,x_{7}$，粗网格的内部节点对应于 $x_{2},x_{4},x_{6}$。粗网格修正 $e_{2h}$ 由下式指定：\n$$\ne_{2h}(x_{2})=c_{1},\\quad e_{2h}(x_{4})=c_{2},\\quad e_{2h}(x_{6})=c_{3},\\quad e_{2h}(x_{0})=0,\\quad e_{2h}(x_{8})=0.\n$$\n我们使用线性延拓来构造细网格修正 $e_{h}=I_{2h}^{h} e_{2h}$。插值规则如下：\n- 对于偶数 $i$（细网格节点与粗网格节点重合）：注入，\n$$\ne_{h}(x_{i})=e_{2h}(x_{i}).\n$$\n- 对于奇数 $i$（细网格节点位于两个相邻粗网格节点的中点）：算术平均值，\n$$\ne_{h}(x_{i})=\\frac{e_{2h}(x_{i-1})+e_{2h}(x_{i+1})}{2}.\n$$\n\n我们现在计算 $e_{h}$ 在七个内部细网格节点上的值：\n\n1) $i=1$（奇数），相邻节点为 $x_{0}$ 和 $x_{2}$：\n$$\ne_{h}(x_{1})=\\frac{e_{2h}(x_{0})+e_{2h}(x_{2})}{2}=\\frac{0+c_{1}}{2}=\\frac{c_{1}}{2}.\n$$\n\n2) $i=2$（偶数），注入：\n$$\ne_{h}(x_{2})=e_{2h}(x_{2})=c_{1}.\n$$\n\n3) $i=3$（奇数），相邻节点为 $x_{2}$ 和 $x_{4}$：\n$$\ne_{h}(x_{3})=\\frac{e_{2h}(x_{2})+e_{2h}(x_{4})}{2}=\\frac{c_{1}+c_{2}}{2}.\n$$\n\n4) $i=4$（偶数），注入：\n$$\ne_{h}(x_{4})=e_{2h}(x_{4})=c_{2}.\n$$\n\n5) $i=5$（奇数），相邻节点为 $x_{4}$ 和 $x_{6}$：\n$$\ne_{h}(x_{5})=\\frac{e_{2h}(x_{4})+e_{2h}(x_{6})}{2}=\\frac{c_{2}+c_{3}}{2}.\n$$\n\n6) $i=6$（偶数），注入：\n$$\ne_{h}(x_{6})=e_{2h}(x_{6})=c_{3}.\n$$\n\n7) $i=7$（奇数），相邻节点为 $x_{6}$ 和 $x_{8}$：\n$$\ne_{h}(x_{7})=\\frac{e_{2h}(x_{6})+e_{2h}(x_{8})}{2}=\\frac{c_{3}+0}{2}=\\frac{c_{3}}{2}.\n$$\n\n将分量按从 $x_{1}$ 到 $x_{7}$ 的顺序收集，得到行向量\n$$\n\\begin{pmatrix}\n\\frac{c_{1}}{2} & c_{1} & \\frac{c_{1}+c_{2}}{2} & c_{2} & \\frac{c_{2}+c_{3}}{2} & c_{3} & \\frac{c_{3}}{2}\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\\frac{c_{1}}{2} & c_{1} & \\frac{c_{1}+c_{2}}{2} & c_{2} & \\frac{c_{2}+c_{3}}{2} & c_{3} & \\frac{c_{3}}{2}\\end{pmatrix}}$$", "id": "2188706"}, {"introduction": "我们不仅需要在不同网格间传递解向量，还需要在粗网格上定义一个恰当的“问题”来求解。一个优雅且稳健的方法是使用伽辽金原理（Galerkin principle）来构建粗网格算子 $A_{2h}$，即 $A_{2h} = R A_h P$，其中 $R$ 是限制算子，$P$ 是延长算子。这个练习将让你亲手计算一个根据伽辽金原理生成的粗网格算子的特定元素，从而揭示一个重要特性：即使细网格算子具有简单的结构（如三对角），粗网格算子也可能变得更稠密。[@problem_id:2188696]", "problem": "在求解数值问题的多重网格方法背景下，考虑一个定义在域 $[0, 1]$ 上的一维问题。我们使用两种网格：一个细网格，其网格尺寸为 $h=1/8$，有 $N_h = 7$ 个内部网格点；以及一个粗网格，其网格尺寸为 $2h=1/4$，有 $N_{2h} = 3$ 个内部网格点。\n\n代表离散化微分算子的细网格线性算子 $A_h$ 由以下 $7 \\times 7$ 的三对角矩阵给出：\n$$\nA_h = \\begin{pmatrix}\n 2 & -1 &  0 &  0 &  0 &  0 &  0 \\\\\n-1 &  2 & -1 &  0 &  0 &  0 &  0 \\\\\n 0 & -1 &  2 & -1 &  0 &  0 &  0 \\\\\n 0 &  0 & -1 &  2 & -1 &  0 &  0 \\\\\n 0 &  0 &  0 & -1 &  2 & -1 &  0 \\\\\n 0 &  0 &  0 &  0 & -1 &  2 & -1 \\\\\n 0 &  0 &  0 &  0 &  0 & -1 &  2\n\\end{pmatrix}\n$$\n为了将数据从粗网格传递到细网格，我们使用一个延拓（或插值）算子 $P \\equiv I_{2h}^h$。我们定义一个特定的、非标准的 $7 \\times 3$ 延拓算子 $P$ 如下：\n$$\nP = \\begin{pmatrix}\n0.5 & 0 & 0 \\\\\n1 & 0 & 0 \\\\\n0.5 & 0.5 & 0 \\\\\n0 & 1 & 2 \\\\\n0 & 0.5 & 0.5 \\\\\n0 & 0 & 1 \\\\\n0 & 0 & 0.5\n\\end{pmatrix}\n$$\n用于将数据从细网格传递到粗网格的限制算子 $R \\equiv I_h^{2h}$ 定义为延拓算子的转置，即 $R = P^T$。\n\n粗网格算子 $A_{2h}$ 使用 Galerkin 原理构建：$A_{2h} = R A_h P$。\n计算得到的粗网格算子 $A_{2h}$ 中第一行第三列元素的值。请用一个精确数表示你的答案。", "solution": "目标是计算由 Galerkin 乘积 $A_{2h} = R A_h P$ 定义的粗网格算子 $A_{2h}$ 的 $(1,3)$ 元素。根据矩阵乘法法则，$A_{2h}(1,3)$ 的值由 $R$ 的第一行与矩阵乘积 $(A_h P)$ 的第三列的点积给出。\n\n各算子如下：\n- 细网格算子 $A_h$：一个 $7 \\times 7$ 矩阵。\n- 延拓算子 $P$：一个 $7 \\times 3$ 矩阵。\n- 限制算子 $R$：一个 $3 \\times 7$ 矩阵，定义为 $R = P^T$。\n\n粗网格算子 $A_{2h}$ 是一个 $3 \\times 3$ 矩阵。其 $(1,3)$ 元素由下式给出：\n$$\nA_{2h}(1,3) = (\\text{Row 1 of } R) \\cdot (\\text{Column 3 of } (A_h P))\n$$\n\n**步骤 1：确定所需的向量和矩阵。**\n\n$R=P^T$ 的第一行是 $P$ 的第一列的转置。我们用 $p_1, p_2, p_3$ 表示 $P$ 的列。\n$$\np_1 = [0.5, 1, 0.5, 0, 0, 0, 0]^T\n$$\n因此，$R$ 的第一行是 $p_1^T = [0.5, 1, 0.5, 0, 0, 0, 0]$。\n\n矩阵乘积 $(A_h P)$ 的第三列是矩阵 $A_h$ 乘以 $P$ 的第三列的结果，我们将其表示为 $p_3$。\n$$\np_3 = [0, 0, 0, 2, 0.5, 1, 0.5]^T\n$$\n因此，我们需要计算向量 $v = A_h p_3$。\n\n**步骤 2：计算向量 $v = A_h p_3$。**\n\n我们进行矩阵向量乘法：\n$$\nv = A_h p_3 = \\begin{pmatrix}\n 2 & -1 &  0 &  0 &  0 &  0 &  0 \\\\\n-1 &  2 & -1 &  0 &  0 &  0 &  0 \\\\\n 0 & -1 &  2 & -1 &  0 &  0 &  0 \\\\\n 0 &  0 & -1 &  2 & -1 &  0 &  0 \\\\\n 0 &  0 &  0 & -1 &  2 & -1 &  0 \\\\\n 0 &  0 &  0 &  0 & -1 &  2 & -1 \\\\\n 0 &  0 &  0 &  0 &  0 & -1 &  2\n\\end{pmatrix}\n\\begin{pmatrix}\n0 \\\\ 0 \\\\ 0 \\\\ 2 \\\\ 0.5 \\\\ 1 \\\\ 0.5\n\\end{pmatrix}\n$$\n让我们计算结果向量 $v$ 的每个分量：\n$v_1 = (2)(0) + (-1)(0) = 0$\n$v_2 = (-1)(0) + (2)(0) + (-1)(0) = 0$\n$v_3 = (-1)(0) + (2)(0) + (-1)(2) = -2$\n$v_4 = (-1)(0) + (2)(2) + (-1)(0.5) = 4 - 0.5 = 3.5$\n$v_5 = (-1)(2) + (2)(0.5) + (-1)(1) = -2 + 1 - 1 = -2$\n$v_6 = (-1)(0.5) + (2)(1) + (-1)(0.5) = -0.5 + 2 - 0.5 = 1$\n$v_7 = (-1)(1) + (2)(0.5) = -1 + 1 = 0$\n\n所以，$(A_h P)$ 的第三列是向量 $v = [0, 0, -2, 3.5, -2, 1, 0]^T$。\n\n**步骤 3：计算 $A_{2h}(1,3)$ 的最终值。**\n\n现在我们计算 $R$ 的第一行（即 $p_1^T$）与我们刚刚计算出的向量 $v$ 的点积。\n$$\nA_{2h}(1,3) = p_1^T \\cdot v = [0.5, 1, 0.5, 0, 0, 0, 0] \\cdot \\begin{pmatrix}\n0 \\\\ 0 \\\\ -2 \\\\ 3.5 \\\\ -2 \\\\ 1 \\\\ 0\n\\end{pmatrix}\n$$\n$$\nA_{2h}(1,3) = (0.5)(0) + (1)(0) + (0.5)(-2) + (0)(3.5) + (0)(-2) + (0)(1) + (0)(0)\n$$\n$$\nA_{2h}(1,3) = 0 + 0 - 1 + 0 + 0 + 0 + 0 = -1\n$$\n元素 $A_{2h}(1,3)$ 的值为 -1。这个满足 $|i-j| > 1$ 的非对角元素的非零值表明，尽管细网格算子 $A_h$ 是三对角的，但得到的粗网格算子 $A_{2h}$ 并非三对角的。这是所选择的延拓算子的非局部性质导致的结果。", "answer": "$$\\boxed{-1}$$", "id": "2188696"}]}