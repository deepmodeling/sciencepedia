{"hands_on_practices": [{"introduction": "在Nelder-Mead方法的每一步迭代中，首要任务是评估当前单纯形的状态。这个练习将带你实践这一基础但至关重要的步骤：根据函数值识别出最好和最差的顶点，并计算剩余顶点的质心。掌握这个过程是理解算法如何决定其移动方向的关键。[@problem_id:2217758]", "problem": "为了优化一个制造过程，一位工程师正在使用 Nelder-Mead 算法来寻找一组两个参数 $x$ 和 $y$，以最小化一个代价函数 $f(x,y)$。在一次迭代的开始，该算法在二维参数空间中的单纯形由三个顶点组成：$P_1$、$P_2$ 和 $P_3$。这些顶点的坐标及其对应的代价函数值如下所示：\n\n- 顶点 $P_1$：坐标为 $(\\frac{3}{2}, 2)$，函数值为 $f(P_1) = \\frac{25}{2}$。\n- 顶点 $P_2$：坐标为 $(3, \\frac{9}{2})$，函数值为 $f(P_2) = 25$。\n- 顶点 $P_3$：坐标为 $(\\frac{5}{2}, 1)$，函数值为 $f(P_3) = \\frac{17}{2}$。\n\n作为确定下一个测试点的预备步骤，您需要找出最差的顶点（函数值最高的那个）并计算其余顶点的质心。\n\n确定最差顶点的坐标 $(x_w, y_w)$ 和其他顶点质心的坐标 $(x_c, y_c)$。您的最终答案应该是一个行矩阵，按顺序 $(x_w, y_w, x_c, y_c)$ 包含这四个值。请以精确分数或整数形式提供坐标。", "solution": "在 Nelder-Mead 算法中，最差的顶点是函数值最高的那个。给定函数值\n$$\nf(P_1)=\\frac{25}{2}, \\quad f(P_2)=25, \\quad f(P_3)=\\frac{17}{2},\n$$\n我们注意到\n$$\n25 > \\frac{25}{2} \\quad \\text{和} \\quad 25 > \\frac{17}{2},\n$$\n所以最差的顶点是 $P_2$，其坐标为 $(3, \\frac{9}{2})$。因此 $(x_w, y_w)=(3, \\frac{9}{2})$。\n\n其余两个顶点 $P_1=(\\frac{3}{2},2)$ 和 $P_3=(\\frac{5}{2},1)$ 的质心是它们坐标的平均值。因此，\n$$\nx_c=\\frac{\\frac{3}{2}+\\frac{5}{2}}{2}=\\frac{\\frac{8}{2}}{2}=\\frac{4}{2}=2,\n$$\n$$\ny_c=\\frac{2+1}{2}=\\frac{3}{2}.\n$$\n因此 $(x_c, y_c)=(2, \\frac{3}{2})$。\n\n所要求的按 $(x_w, y_w, x_c, y_c)$ 顺序排列的行矩阵是 $\\begin{pmatrix}3 & \\frac{9}{2} & 2 & \\frac{3}{2}\\end{pmatrix}$。", "answer": "$$\\boxed{\\begin{pmatrix} 3 & \\frac{9}{2} & 2 & \\frac{3}{2} \\end{pmatrix}}$$", "id": "2217758"}, {"introduction": "Nelder-Mead算法的精髓在于其智能的决策逻辑。在通过反射最差顶点生成一个新测试点后，算法必须决定下一步行动。这个练习将检验你对这一核心逻辑的理解：根据新点的函数值，我们应该接受它，进行扩展，还是执行收缩？[@problem_id:2217773]", "problem": "一个优化程序正在使用Nelder-Mead算法，在多维空间中寻找函数 $f(\\mathbf{x})$ 的最小值。在某次迭代开始时，算法正在处理一个由三个顶点 $V_1, V_2,$ 和 $V_3$ 定义的单纯形。这些顶点的函数值已被计算为 $f(V_1) = 10.5$，$f(V_2) = 18.2$ 和 $f(V_3) = 25.0$。\n\n按照标准程序，算法会确定最差的顶点，并计算其余点的质心。然后它计算一个反射点 $P_r$，并评估这个新点的函数值，发现 $f(P_r) = 16.1$。\n\n在这种情况下，标准的Nelder-Mead算法规定紧接着的下一步是下列哪项操作？\n\nA. 接受反射点 $P_r$，用它替换当前最差的顶点，并用新的单纯形开始下一次迭代。\n\nB. 执行扩张步骤，沿反射方向进一步移动，因为反射点代表了显著的改进。\n\nC. 执行内收缩步骤，将最差的顶点移近质心，因为反射点不是一个足够的改进。\n\nD. 执行压缩操作，通过将所有点（除了最好的点）移近最好的点来减小整个单纯形的大小。\n\nE. 舍弃反射点并执行外收缩步骤，从质心移动一个比反射距离更短距离的新点。", "solution": "我们首先根据顶点的函数值对其进行排序。已知 $f(V_1)=10.5$，$f(V_2)=18.2$ 和 $f(V_3)=25.0$，我们有\n$$\nf(V_1) \\leq f(V_2) \\leq f(V_3),\n$$\n所以 $V_1$ 是最好的点，$V_2$ 是次好的点，$V_3$ 是最差的点。\n\nNelder-Mead算法计算除最差顶点外的所有点的质心 $C$，并形成反射点\n$$\nP_r = C + \\alpha\\,(C - V_3),\n$$\n其中标准反射系数 $\\alpha > 0$ (通常 $\\alpha=1$）。反射点的函数值给出为 $f(P_r)=16.1$。\n\n反射步骤的决策规则是将 $f(P_r)$ 与最好和次好顶点的函数值进行比较：\n- 如果 $f(P_r) < f(V_1)$，则执行扩张。\n- 如果 $f(V_1) \\leq f(P_r) < f(V_2)$，则接受反射点并替换最差的顶点。\n- 如果 $f(V_2) \\leq f(P_r) < f(V_3)$，则执行外收缩。\n- 如果 $f(P_r) \\geq f(V_3)$，则执行内收缩（如果收缩失败则进行压缩）。\n\n在本例中，\n$$\nf(V_1) = 10.5 \\leq f(P_r) = 16.1 < f(V_2) = 18.2,\n$$\n因此，适当的操作是接受反射点，用 $P_r$ 替换最差的顶点 $V_3$，并用更新后的单纯形继续下一次迭代。不执行扩张，因为 $f(P_r)$ 并不小于 $f(V_1)$；也不需要收缩或压缩，因为 $f(P_r)$ 优于次好点的阈值。", "answer": "$$\\boxed{A}$$", "id": "2217773"}, {"introduction": "现在，让我们将所有部分组合在一起，完成一次完整的Nelder-Mead迭代。这个综合性练习将引导你从排序顶点开始，执行反射，并根据结果决定是否需要进行收缩操作。通过这个实践，你将巩固对算法中不同步骤（如反射、扩展和收缩）如何协同工作的理解，从而在函数空间中进行导航。[@problem_id:2217774]", "problem": "奈尔德-米德方法是一种数值优化算法，用于在多维空间中寻找一个函数的最小值。它在一个单纯形上进行操作，单纯形是在$n$维空间中由$n+1$个顶点组成的几何图形。对于一个在$\\mathbb{R}^2$上的函数，该单纯形是一个三角形。该算法通过迭代修改单纯形，使其向最小值移动。\n\n本问题涉及使用奈尔德-米德算法最小化函数 $f(x, y) = 10x^2 + y^2$ 的一次迭代。初始单纯形的顶点为 $v_1 = (0.1, 0.1)$、$v_2 = (-0.1, 0.2)$ 和 $v_3 = (2.0, 0.3)$。\n\n该算法使用标准参数：反射系数 $\\alpha=1$、扩张系数 $\\gamma=2$、收缩系数 $\\rho=0.5$ 和压缩系数 $\\sigma=0.5$。\n\n算法的一次迭代按以下步骤进行：\n1.  **排序**：对 $n+1=3$ 个顶点 $x_1, x_2, x_3$ 进行排序，使其函数值满足：$f(x_1) \\le f(x_2) \\le f(x_3)$。其中，$x_1$ 是最好点，$x_3$ 是最差点。\n2.  **形心**：计算除最差点之外所有顶点的形心 $x_o$，$x_o = \\frac{1}{n}\\sum_{i=1}^{n} x_i = \\frac{1}{2}(x_1 + x_2)$。\n3.  **反射**：计算反射点 $x_r = x_o + \\alpha(x_o - x_3)$。计算 $f(x_r)$ 的值。\n4.  **决策逻辑**：\n    a. 如果 $f(x_1) \\le f(x_r) < f(x_2)$，则用 $x_r$ 替换最差点 $x_3$ 来更新单纯形。这是一个**反射**步骤。迭代终止。\n    b. 如果 $f(x_r) < f(x_1)$，说明算法找到了一个有希望的方向。它尝试进行**扩张**：\n        i.  计算扩张点 $x_e = x_o + \\gamma(x_r - x_o)$。\n        ii. 如果 $f(x_e) < f(x_r)$，用 $x_e$ 替换 $x_3$。迭代终止。\n        iii. 否则，扩张失败；用 $x_r$ 替换 $x_3$。迭代终止。\n    c. 如果 $f(x_r) \\ge f(x_2)$，说明反射点效果不佳。算法执行**收缩**：\n        i.  如果 $f(x_r) < f(x_3)$，执行**外收缩**：计算 $x_c = x_o + \\rho(x_r - x_o)$。如果 $f(x_c) \\le f(x_r)$，用 $x_c$ 替换 $x_3$。否则，执行**压缩**。\n        ii. 如果 $f(x_r) \\ge f(x_3)$，执行**内收缩**：计算 $x_{cc} = x_o - \\rho(x_o - x_3)$。如果 $f(x_{cc}) < f(x_3)$，用 $x_{cc}$ 替换 $x_3$。否则，执行**压缩**。\n        iii.如果收缩步骤成功，迭代终止。\n    d. 如果以上所有尝试都失败，则执行**压缩**：将除最好点外的所有点都向最好点移动。对于 $i=2, 3$，用 $x_1 + \\sigma(x_i - x_1)$ 替换 $x_i$。迭代终止。\n\n根据给定的初始单纯形和函数，判断以下哪个过程成功地结束了算法的第一次迭代。\n\nA. 反射\n\nB. 扩张\n\nC. 外收缩\n\nD. 内收缩\n\nE. 压缩", "solution": "我们在由顶点 $v_1=(0.1,0.1)$、$v_2=(-0.1,0.2)$ 和 $v_3=(2.0,0.3)$ 构成的单纯形上最小化函数 $f(x,y)=10x^2+y^2$。首先，计算函数在每个顶点处的值：\n$$\n\\begin{aligned}\nf(v_1) &= 10(0.1)^2 + (0.1)^2 = 10(0.01) + 0.01 = 0.11, \\\\\nf(v_2) &= 10(-0.1)^2 + (0.2)^2 = 10(0.01) + 0.04 = 0.14, \\\\\nf(v_3) &= 10(2.0)^2 + (0.3)^2 = 10(4) + 0.09 = 40.09.\n\\end{aligned}\n$$\n因此，排序为 $x_1=v_1$ (最好点)，$x_2=v_2$，$x_3=v_3$ (最差点)，因为 $0.11 \\le 0.14 \\le 40.09$。最好两个点的形心是\n$$\nx_o=\\frac{1}{2}(x_1+x_2)=\\frac{1}{2}\\big((0.1,0.1)+(-0.1,0.2)\\big)=(0,0.15).\n$$\n使用反射系数 $\\alpha=1$，反射点为\n$$\nx_r=x_o+\\alpha(x_o-x_3)=2x_o-x_3=(0,0.3)-(2.0,0.3)=(-2.0,0.0),\n$$\n其函数值为\n$$\nf(x_r)=10(-2.0)^2+(0.0)^2=10\\cdot 4+0=40.\n$$\n我们比较：$f(x_r)=40 \\ge f(x_2)=0.14$，所以我们进入收缩分支。由于 $f(x_r)  f(x_3)$ 成立 ($40  40.09$)，我们尝试使用 $\\rho=0.5$ 进行外收缩：\n$$\nx_c=x_o+\\rho(x_r-x_o)=(0,0.15)+0.5\\big((-2,0)-(0,0.15)\\big)=(0,0.15)+0.5(-2,-0.15)=(-1,0.075).\n$$\n计算其函数值：\n$$\nf(x_c)=10(-1)^2+(0.075)^2=10+0.005625=10.005625.\n$$\n如果 $f(x_c) \\le f(x_r)$，外收缩即为成功，此条件因 $10.005625 \\le 40$ 而成立。因此，迭代以一次成功的外收缩终止，用 $x_c$ 替换 $x_3$。", "answer": "$$\\boxed{C}$$", "id": "2217774"}]}