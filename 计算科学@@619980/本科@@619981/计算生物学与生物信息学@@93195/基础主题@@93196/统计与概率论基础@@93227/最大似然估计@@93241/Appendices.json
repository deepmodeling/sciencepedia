{"hands_on_practices": [{"introduction": "让我们从一项基本技能开始：估算一个事件的成功概率。在生物信息学中，这可能意味着估算某个基因表达的概率，或者某个碱基发生突变的概率。这个练习 [@problem_id:1933626] 使用了二项分布模型，这对于任何只有两种结果的场景都非常适用。通过解决这个问题，你将掌握最大似然估计（MLE）的基本流程：定义似然函数、取对数、求导，并最终解出使观测数据出现概率最大的参数值。", "problem": "一位质量控制工程师正在监控半导体晶圆的生产。每片晶圆包含大量固定的独立电子元件，其数量记为 $k$。该制造过程使得每个元件有恒定但未知的概率 $p$ 是有缺陷的，且各元件之间相互独立。因此，单片晶圆上的缺陷元件数量可以用参数为 $k$（试验次数）和 $p$（成功概率，即有缺陷的概率）的二项分布来建模。\n\n为了估计 $p$，该工程师检查了 $n$ 片晶圆的随机样本，并记录了每片晶圆上的缺陷元件数量。设此样本观察到的缺陷元件计数为 $x_1, x_2, \\ldots, x_n$。\n\n推导缺陷概率 $p$ 的最大似然估计量 $\\hat{p}$。请用一个包含 $k$、$n$ 和样本观测值 $x_1, x_2, \\ldots, x_n$ 的符号表达式来表示你的答案。", "solution": "设 $X_{i}$ 表示第 $i$ 片晶圆上的缺陷元件数量，其模型为 $X_{i} \\sim \\text{Binomial}(k, p)$，对于 $i=1,2,\\ldots,n$ 相互独立。观测值 $x_{1},\\ldots,x_{n}$ 的联合似然函数为\n$$\nL(p)=\\prod_{i=1}^{n}\\binom{k}{x_{i}} p^{x_{i}} (1-p)^{k-x_{i}}, \\quad 0 \\leq p \\leq 1.\n$$\n对数似然函数为\n$$\n\\ell(p)=\\sum_{i=1}^{n}\\ln\\binom{k}{x_{i}}+\\left(\\sum_{i=1}^{n}x_{i}\\right)\\ln p+\\left(nk-\\sum_{i=1}^{n}x_{i}\\right)\\ln(1-p).\n$$\n对 $p$ 求导并令其为零：\n$$\n\\ell'(p)=\\frac{\\sum_{i=1}^{n}x_{i}}{p}-\\frac{nk-\\sum_{i=1}^{n}x_{i}}{1-p}=0.\n$$\n对 $p$ 求解可得\n$$\n\\left(\\sum_{i=1}^{n}x_{i}\\right)(1-p)=p\\left(nk-\\sum_{i=1}^{n}x_{i}\\right)\\;\\;\\Longrightarrow\\;\\;\\sum_{i=1}^{n}x_{i}=pnk,\n$$\n因此\n$$\n\\hat{p}=\\frac{\\sum_{i=1}^{n}x_{i}}{nk}.\n$$\n二阶导数\n$$\n\\ell''(p)=-\\frac{\\sum_{i=1}^{n}x_{i}}{p^{2}}-\\frac{nk-\\sum_{i=1}^{n}x_{i}}{(1-p)^{2}},\n$$\n对于 $p \\in (0,1)$ 严格为负，因此该临界点是一个最大值点。由于 $0 \\leq \\sum_{i=1}^{n}x_{i} \\leq nk$，该估计量位于 $[0,1]$ 区间内，边界情况为当 $\\sum x_{i}=0$ 时 $\\hat{p}=0$，以及当 $\\sum x_{i}=nk$ 时 $\\hat{p}=1$。", "answer": "$$\\boxed{\\frac{\\sum_{i=1}^{n} x_{i}}{n k}}$$", "id": "1933626"}, {"introduction": "现实世界中的生物学数据往往存在一个挑战：我们无法看到全貌。此练习 [@problem_id:1933615] 探讨了一种常见的“截断数据”情景，即只有当事件满足特定条件时才会被记录（例如，只有当细胞中出现至少一个突变时，我们才会对其进行分析）。你会发现，在这种情况下，简单的样本均值可能会产生误导，而最大似然估计则提供了一种系统性的方法来校正这种观测偏差，从而更准确地估算出基础事件的发生率 $\\lambda$。", "problem": "一家材料科学公司正在开发高纯度光纤。每米光纤段中的微观缺陷数量服从一个泊松分布，其率参数 $\\lambda$ 未知。为了进行质量控制，一台自动激光扫描仪会检查每一段光纤。然而，扫描仪的软件配置为仅当其检测到至少一个缺陷时才记录光纤段的数据。没有缺陷的光纤段会直接通过，而不会被录入质量控制数据库。\n\n一位数据科学家受命使用现有数据来估计参数 $\\lambda$。他们分析了一个记录下的光纤段的随机样本，发现缺陷计数的样本均值恰好为 2.5。\n\n根据这些信息，确定参数 $\\lambda$ 的最大似然估计（MLE）。从以下选项中选择最佳答案。\n\nA. 2.05\n\nB. 2.22\n\nC. 2.50\n\nD. 2.81\n\nE. 3.00", "solution": "令 $Y \\sim \\text{Poisson}(\\lambda)$ 表示一段光纤中的缺陷计数，但只有当 $Y \\geq 1$ 时的观测值才被记录。因此，观测数据遵循零截断泊松分布：\n$$\n\\Pr(Y=k \\mid Y \\geq 1) = \\frac{\\exp(-\\lambda)\\lambda^{k}}{k!\\left(1 - \\exp(-\\lambda)\\right)}, \\quad k=1,2,\\dots\n$$\n给定一个来自此分布的样本 $y_{1},\\dots,y_{n}$，其样本均值为 $\\bar{y}=2.5$，则对数似然函数为\n$$\n\\ell(\\lambda) = \\sum_{i=1}^{n}\\left[-\\lambda + y_{i}\\ln \\lambda - \\ln(y_{i}!) - \\ln\\left(1 - \\exp(-\\lambda)\\right)\\right].\n$$\n求导并令其等于零：\n$$\n\\frac{\\partial \\ell}{\\partial \\lambda} = -n + \\frac{\\sum_{i=1}^{n} y_{i}}{\\lambda} - n\\,\\frac{\\exp(-\\lambda)}{1 - \\exp(-\\lambda)} = 0.\n$$\n令 $m = \\bar{y} = \\frac{1}{n}\\sum_{i=1}^{n} y_{i}$。方程两边同除以 $n$ 得\n$$\n-1 + \\frac{m}{\\lambda} - \\frac{\\exp(-\\lambda)}{1 - \\exp(-\\lambda)} = 0,\n$$\n因此\n$$\n\\frac{m}{\\lambda} = 1 + \\frac{\\exp(-\\lambda)}{1 - \\exp(-\\lambda)} = \\frac{1}{1 - \\exp(-\\lambda)}.\n$$\n所以，最大似然估计 $\\hat{\\lambda}$ 满足\n$$\nm = \\frac{\\lambda}{1 - \\exp(-\\lambda)}.\n$$\n等价地，\n$$\nm\\left(1 - \\exp(-\\lambda)\\right) = \\lambda \\quad \\Longrightarrow \\quad (m - \\lambda)\\exp(\\lambda) = m.\n$$\n令 $x = m - \\lambda$。则 $x\\exp(m - x) = m$，所以 $x\\exp(-x) = m\\exp(-m)$，由此得出\n$$\nx = - W\\!\\left(-m\\exp(-m)\\right), \\quad \\text{所以} \\quad \\hat{\\lambda} = m + W\\!\\left(-m\\exp(-m)\\right),\n$$\n其中 $W$ 是朗伯W函数。当 $m=2.5$ 时，\n$$\n- m\\exp(-m) = -2.5\\exp(-2.5) \\approx -0.2052,\n$$\n所以 $W(-0.2052) \\approx -0.27$（因为当 $y=-0.27$ 时，$y\\exp(y)$ 约等于 $-0.206$），得到\n$$\n\\hat{\\lambda} \\approx 2.5 - 0.27 = 2.23.\n$$\n在估计方程 $m = \\lambda/(1 - \\exp(-\\lambda))$ 中进行验证：\n- 对于 $\\lambda = 2.22$，$\\exp(-\\lambda) \\approx 0.1086$，所以 $m \\approx 2.22/0.8914 \\approx 2.492$。\n- 对于 $\\lambda = 2.23$，$\\exp(-\\lambda) \\approx 0.1075$，所以 $m \\approx 2.23/0.8925 \\approx 2.500$。\n\n因此，最大似然估计值约为 $2.23$，最接近的选项是 $2.22$，即选项 B。", "answer": "$$\\boxed{B}$$", "id": "1933615"}, {"introduction": "现在，我们将最大似然估计的技能应用于现代生物信息学的一个核心问题：量化DNA合成与测序过程中的错误率。这个动手实践 [@problem_id:2402385] 将错误过程建模为一系列具有不同概率（匹配、替换、删除）的独立事件，这是一个典型的多项分布框架。解决这个问题不仅能巩固你对MLE的理解，还能让你看到它如何导出一个极其简洁直观的结论——事件概率的最佳估计就是其观测频率，这是许多生物信息学模型的基础。", "problem": "一家生物技术实验室正在验证一台新型脱氧核糖核酸（DNA）合成仪，方法是合成一个与已知模板序列相对应的分子池。该模板的长度为 $L$ 个核苷酸。该合成仪独立地合成了 $N$ 个分子。对于每个分子，在模板的每个位置上，该仪器独立地产生三种结果之一：一个正确的碱基（匹配）、一个错误的碱基（替换）或无碱基（缺失）。在本实验中不发生插入。设替换概率为 $\\alpha$，缺失概率为 $\\beta$，匹配概率为 $1-\\alpha-\\beta$，约束条件为 $\\alpha \\ge 0$, $\\beta \\ge 0$ 且 $\\alpha + \\beta \\le 1$。在对合成的分子进行测序并与模板进行比对后（由于没有插入，比对是明确无歧义的），实验室汇总了所有 $N$ 个分子和所有 $L$ 个位置的计数：总替换数 $S$、总缺失数 $D$ 和总匹配数 $M$，其中 $M = NL - S - D$。根据所述的独立性假设，将每个分子中的每个位置视为一次独立的分类试验，该试验有三种结果，其相关概率为 $(1-\\alpha-\\beta, \\alpha, \\beta)$。\n\n使用最大似然估计（MLE），编写一个程序，为每个指定的测试用例，从提供的 $(N,L,S,D)$ 值中计算出最大似然估计值 $\\hat{\\alpha}$ 和 $\\hat{\\beta}$。你的程序必须以小数形式（而非百分比）输出结果，并四舍五入到 $6$ 位小数。\n\n测试集：\n- 案例 $1$：$N=1000$, $L=50$, $S=120$, $D=30$。\n- 案例 $2$：$N=200$, $L=100$, $S=0$, $D=0$。\n- 案例 $3$：$N=5$, $L=2$, $S=0$, $D=10$。\n- 案例 $4$：$N=3$, $L=4$, $S=2$, $D=1$。\n- 案例 $5$：$N=50$, $L=120$, $S=600$, $D=0$。\n\n最终输出格式：\n- 针对以上案例，按顺序输出一个单行，该行包含一个由方括号括起来的逗号分隔列表，序列为 $[\\hat{\\alpha}_1,\\hat{\\beta}_1,\\hat{\\alpha}_2,\\hat{\\beta}_2,\\hat{\\alpha}_3,\\hat{\\beta}_3,\\hat{\\alpha}_4,\\hat{\\beta}_4,\\hat{\\alpha}_5,\\hat{\\beta}_5]$，其中下标表示案例编号。例如，要求的格式是 $[r_1,r_2,\\dots,r_{10}]$，每个 $r_i$ 都四舍五入到 $6$ 位小数。", "solution": "这个问题的核心是为分类（或多项）分布的参数找到最大似然估计（MLE）。实验由总共 $T = N \\times L$ 次独立的试验组成。每次试验有三种可能的结果：替换（概率为 $\\alpha$）、缺失（概率为 $\\beta$）或匹配（概率为 $1-\\alpha-\\beta$）。我们观测到的数据是这些结果的总计数：$S$ 次替换，$D$ 次缺失，以及 $M = T - S - D$ 次匹配。\n\n在给定参数 $\\alpha$ 和 $\\beta$ 的条件下，观测到这些计数的联合概率由多项概率质量函数描述。似然函数 $L(\\alpha, \\beta)$ 与此质量函数成正比：\n$$L(\\alpha, \\beta | S, D, M) \\propto (1 - \\alpha - \\beta)^M \\alpha^S \\beta^D$$\n为了简化最大化过程，我们使用对数似然函数 $\\ell(\\alpha, \\beta) = \\log L(\\alpha, \\beta)$：\n$$\\ell(\\alpha, \\beta) = \\text{const} + M \\log(1 - \\alpha - \\beta) + S \\log(\\alpha) + D \\log(\\beta)$$\n为了找到使 $\\ell$ 最大化的 $\\alpha$ 和 $\\beta$ 值，我们计算关于 $\\alpha$ 和 $\\beta$ 的偏导数，并令它们等于零：\n$$\\frac{\\partial \\ell}{\\partial \\alpha} = \\frac{S}{\\alpha} - \\frac{M}{1 - \\alpha - \\beta} = 0$$\n$$\\frac{\\partial \\ell}{\\partial \\beta} = \\frac{D}{\\beta} - \\frac{M}{1 - \\alpha - \\beta} = 0$$\n假设 $S, D, M$ 均为正数，我们可以重排这些方程：\n$$\\frac{S}{\\alpha} = \\frac{M}{1 - \\alpha - \\beta} \\quad \\text{和} \\quad \\frac{D}{\\beta} = \\frac{M}{1 - \\alpha - \\beta}$$\n这意味着 $\\frac{S}{\\alpha} = \\frac{D}{\\beta}$，从而得到 $S\\beta = D\\alpha$。\n从第一个方程，我们有 $S(1 - \\alpha - \\beta) = M\\alpha$。代入 $M = T - S - D$：\n$$S - S\\alpha - S\\beta = (T - S - D)\\alpha$$\n现在代入 $S\\beta = D\\alpha$:\n$$S - S\\alpha - D\\alpha = (T - S - D)\\alpha$$\n$$S = S\\alpha + D\\alpha + (T - S - D)\\alpha = (S + D + T - S - D)\\alpha = T\\alpha$$\n因此，我们找到 $\\alpha$ 的最大似然估计：\n$$\\hat{\\alpha} = \\frac{S}{T} = \\frac{S}{NL}$$\n类似地，可以求解 $\\beta$：\n$$\\hat{\\beta} = \\frac{D}{T} = \\frac{D}{NL}$$\n这些结果直观地表示了每种事件的观测频率，这也是分类/多项分布参数的众所周知的最大似然估计。即使某些计数为零，这些估计量也成立，因为它们仍然在参数空间的边界上最大化了似然函数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the Maximum Likelihood Estimates (MLEs) for substitution and\n    deletion probabilities based on aggregated counts from a DNA synthesis experiment.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (N, L, S, D)\n    test_cases = [\n        (1000, 50, 120, 30),  # Case 1\n        (200, 100, 0, 0),    # Case 2\n        (5, 2, 0, 10),       # Case 3\n        (3, 4, 2, 1),        # Case 4\n        (50, 120, 600, 0)    # Case 5\n    ]\n\n    results = []\n    for N, L, S, D in test_cases:\n        # The total number of trials is the number of molecules (N)\n        # multiplied by the template length (L).\n        total_trials = N * L\n\n        # The Maximum Likelihood Estimate for the probability of an event in a\n        # categorical distribution is its observed frequency.\n        # This holds true even for edge cases where counts are zero or sum\n        # to the total number of trials.\n        if total_trials > 0:\n            alpha_hat = S / total_trials\n            beta_hat = D / total_trials\n        else:\n            # This case is not in the test suite but is handled for robustness.\n            # If there are no trials, the probabilities are undefined.\n            # We define them as 0.0 by convention.\n            alpha_hat = 0.0\n            beta_hat = 0.0\n        \n        # Append results formatted to 6 decimal places as required.\n        # Using f-string formatting ensures the correct number of decimal places,\n        # e.g., 0.1 becomes 0.100000.\n        results.append(f'{alpha_hat:.6f}')\n        results.append(f'{beta_hat:.6f}')\n\n    # Final print statement in the exact required format.\n    # The results list already contains formatted strings.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2402385"}]}