{"hands_on_practices": [{"introduction": "为了从根本上理解DNA的功能，我们必须能够量化其结构的稳定性。这个练习将引导你运用一个基础的双态热力学模型，将抽象的热力学概念（如焓 $\\Delta H$ 和熵 $\\Delta S$）转化为具体的计算任务。通过为DNA发夹结构编写熔解温度 $T_m$ 的计算程序，并探究一个G-T错配碱基对所带来的影响，你将亲身体验到序列如何决定DNA稳定性的核心原理。[@problem_id:2386777]", "problem": "您的任务是构建一个关于脱氧核糖核酸（DNA）发夹结构热变性（熔解）的自洽模拟，使用一个双态热力学模型，并量化茎区中单个鸟嘌呤-胸腺嘧啶（G-T）摆动碱基对对熔解温度的影响。在该模型中，一个具有长度为 $n$ 个碱基对的茎区和长度为 $L$ 的环区的发夹结构，在完全折叠态和完全解折叠态之间转换。折叠态通过茎区内的碱基配对和堆积作用而稳定，并通过成环熵而不稳定。解折叠态被视为参考态，其焓和熵均为零。\n\n假设在绝对温度 $T$ 下，折叠的总吉布斯自由能由 $\\Delta G(T) = \\Delta H_{\\mathrm{tot}} - T \\Delta S_{\\mathrm{tot}}$ 给出，其中 $\\Delta H_{\\mathrm{tot}}$ 和 $\\Delta S_{\\mathrm{tot}}$ 是不依赖于温度的总和，包含了来自碱基对、碱基对堆积和成环熵的贡献。在温度 $T$ 下的折叠分数由双态 Boltzmann 平衡定义为 $f_{\\mathrm{fold}}(T) = \\dfrac{1}{1+\\exp\\left(\\dfrac{\\Delta G(T)}{R T}\\right)}$，其中 $R$ 是通用气体常数。熔解温度 $T_m$ 被定义为唯一的温度（单位为开尔文），在该温度下 $f_{\\mathrm{fold}}(T_m)=\\dfrac{1}{2}$。\n\n对折叠态中的茎区和环区使用以下基于物理的粗粒化参数，所有焓值的单位为 $\\mathrm{cal\\cdot mol^{-1}}$，熵值的单位为 $\\mathrm{cal\\cdot mol^{-1}\\cdot K^{-1}}$：\n- 通用气体常数：$R = 1.987\\ \\mathrm{cal\\cdot mol^{-1}\\cdot K^{-1}}$。\n- 茎区中每个碱基对的贡献：\n  - Watson–Crick 鸟嘌呤-胞嘧啶对：$\\Delta h_{\\mathrm{GC}} = -9800$，$\\Delta s_{\\mathrm{GC}} = -24.4$。\n  - Watson–Crick 腺嘌呤-胸腺嘧啶对：$\\Delta h_{\\mathrm{AT}} = -7200$，$\\Delta s_{\\mathrm{AT}} = -20.4$。\n  - G–T 摆动对：$\\Delta h_{\\mathrm{GT}} = -4000$，$\\Delta s_{\\mathrm{GT}} = -12.0$。\n- 茎区中每个相邻堆积对的贡献（协同性），适用于长度为 $n$ 个碱基对的茎区中的 $n-1$ 个邻接位置：\n  - $\\Delta h_{\\mathrm{stack}} = -800$，$\\Delta s_{\\mathrm{stack}} = -2.0$。\n- 对于长度为 $L$（单位为核苷酸）的环区的成环熵罚分，使用聚合物成环模型，其焓变为零，熵的贡献为 $\\Delta s_{\\mathrm{loop}}(L) = R \\ln\\!\\big(A L^{-c}\\big)$，其中 $A = 1.0$，$c = 1.8$。因此，环区的总贡献为 $\\Delta h_{\\mathrm{loop}}(L) = 0$ 和 $\\Delta s_{\\mathrm{loop}}(L) = - c R \\ln L$。\n\n给定一个发夹结构，其茎区中三种碱基对类型的数量分别为 $n_{\\mathrm{GC}}$、$n_{\\mathrm{AT}}$ 和 $n_{\\mathrm{GT}}$（因此 $n = n_{\\mathrm{GC}} + n_{\\mathrm{AT}} + n_{\\mathrm{GT}}$），其在折叠态下的总焓和总熵为：\n$$\n\\Delta H_{\\mathrm{tot}} = n_{\\mathrm{GC}}\\,\\Delta h_{\\mathrm{GC}} + n_{\\mathrm{AT}}\\,\\Delta h_{\\mathrm{AT}} + n_{\\mathrm{GT}}\\,\\Delta h_{\\mathrm{GT}} + (n-1)\\,\\Delta h_{\\mathrm{stack}},\n$$\n$$\n\\Delta S_{\\mathrm{tot}} = n_{\\mathrm{GC}}\\,\\Delta s_{\\mathrm{GC}} + n_{\\mathrm{AT}}\\,\\Delta s_{\\mathrm{AT}} + n_{\\mathrm{GT}}\\,\\Delta s_{\\mathrm{GT}} + (n-1)\\,\\Delta s_{\\mathrm{stack}} + \\Delta s_{\\mathrm{loop}}(L).\n$$\n在双态模型下，$T_m$ 满足 $\\Delta G(T_m)=0$。\n\n测试套件和要求的输出：\n对于以下三种情况的每一种，考虑两种变体：一种是无 G-T 摆动对的天然变体（$n_{\\mathrm{GT}}=0$），另一种是摆动变体，其中一个指定类型的 Watson–Crick 对被一个 G-T 摆动对替换（将该 Watson–Crick 对的数量减 1，并设置 $n_{\\mathrm{GT}}=1$）。对于每种情况，计算熔解温度的变化量 $\\Delta T_m = T_m^{\\mathrm{wobble}} - T_m^{\\mathrm{native}}$，单位为开尔文。\n\n- 情况 1（理想路径）：$n_{\\mathrm{GC}}=6$, $n_{\\mathrm{AT}}=0$, $L=4$，摆动对替换一个 $\\mathrm{GC}$。\n- 情况 2（混合内容）：$n_{\\mathrm{GC}}=3$, $n_{\\mathrm{AT}}=3$, $L=8$，摆动对替换一个 $\\mathrm{AT}$。\n- 情况 3（边界，最小茎区）：$n_{\\mathrm{GC}}=1$, $n_{\\mathrm{AT}}=0$, $L=3$，摆动对替换一个 $\\mathrm{GC}$。\n\n角度单位不适用。所有温度必须以开尔文表示，并且每个最终数值结果必须是浮点数。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，按三种情况的顺序排列结果，每个 $\\Delta T_m$ 值均以开尔文为单位，并四舍五入到三位小数。例如，输出行的格式为 $[\\Delta T_{m,1},\\Delta T_{m,2},\\Delta T_{m,3}]$。", "solution": "问题陈述已经过严格验证，被认为是有效的。它在科学上基于生物物理化学的原理，特别是核酸热力学的双态最近邻模型。该问题设定良好，提供了确定熔解温度 $T_m$ 唯一解所需的所有参数、常数和方程。所提供的参数对于粗粒化模型是物理上合理的。总焓和总熵的公式是自洽的。关于成环熵公式 $\\Delta s_{\\mathrm{loop}}(L) = - c R \\ln L$（从 $\\Delta s_{\\mathrm{loop}}(L) = R \\ln(A L^{-c})$ 且 $A=1.0$ 导出）的澄清是正确的。注意到了“角度单位不适用”这一无关陈述，但它不影响问题的完整性或可解性。由于问题有效，现提出一个完整的、有理有据的解决方案。\n\n目标是计算当DNA发夹中的一个 Watson-Crick 碱基对被一个 G-T 摆动对替换时，熔解温度的变化量 $\\Delta T_m = T_m^{\\mathrm{wobble}} - T_m^{\\mathrm{native}}$。该解决方案基于所提供的双态热力学模型。\n\n熔解温度 $T_m$ 被定义为发夹结构半折叠时的温度，即 $f_{\\mathrm{fold}}(T_m) = 1/2$。根据给定的折叠分数模型：\n\n$$f_{\\mathrm{fold}}(T) = \\dfrac{1}{1+\\exp\\left(\\dfrac{\\Delta G(T)}{R T}\\right)}$$\n\n条件 $f_{\\mathrm{fold}}(T_m) = 1/2$ 意味着指数项必须等于1。这只有在指数为零时才可能，从而得出熔解温度的基本条件：\n\n$$\\Delta G(T_m) = 0$$\n\n折叠的吉布斯自由能由 $\\Delta G(T) = \\Delta H_{\\mathrm{tot}} - T \\Delta S_{\\mathrm{tot}}$ 给出。将此代入 $T_m$ 的条件，得到：\n\n$$\\Delta H_{\\mathrm{tot}} - T_m \\Delta S_{\\mathrm{tot}} = 0$$\n\n解出 $T_m$，我们获得了计算的核心方程，它将熔解温度（以开尔文为单位）表示为总折叠焓变与总折叠熵变之比：\n\n$$T_m = \\frac{\\Delta H_{\\mathrm{tot}}}{\\Delta S_{\\mathrm{tot}}}$$\n\n该方程在 $\\Delta S_{\\mathrm{tot}} \\neq 0$ 时有效，对于任何物理发夹结构，此条件都成立，因为所有提供的熵贡献都是非零负值，确保了总和不为零。\n\n要计算任何给定发夹的 $T_m$，我们必须首先计算其总折叠焓 $\\Delta H_{\\mathrm{tot}}$ 和总折叠熵 $\\Delta S_{\\mathrm{tot}}$。这些量通过对茎区中所有组成碱基对、它们之间的堆积相互作用以及成环的熵成本的贡献求和来确定。所提供的公式为：\n$$\n\\Delta H_{\\mathrm{tot}} = n_{\\mathrm{GC}}\\,\\Delta h_{\\mathrm{GC}} + n_{\\mathrm{AT}}\\,\\Delta h_{\\mathrm{AT}} + n_{\\mathrm{GT}}\\,\\Delta h_{\\mathrm{GT}} + (n-1)\\,\\Delta h_{\\mathrm{stack}}\n$$\n$$\n\\Delta S_{\\mathrm{tot}} = n_{\\mathrm{GC}}\\,\\Delta s_{\\mathrm{GC}} + n_{\\mathrm{AT}}\\,\\Delta s_{\\mathrm{AT}} + n_{\\mathrm{GT}}\\,\\Delta s_{\\mathrm{GT}} + (n-1)\\,\\Delta s_{\\mathrm{stack}} + \\Delta s_{\\mathrm{loop}}(L)\n$$\n其中 $n = n_{\\mathrm{GC}} + n_{\\mathrm{AT}} + n_{\\mathrm{GT}}$ 是茎区中碱基对的总数。项 $(n-1)$ 正确地计入了长度为 $n$ 的茎区中的 $n-1$ 个相邻堆积相互作用。对于只有一个碱基对的茎区（$n=1$），该项自然为零，这在物理上是正确的，因为不存在堆积相互作用。\n\n成环熵 $\\Delta s_{\\mathrm{loop}}(L)$ 由公式给出：\n\n$$\n\\Delta s_{\\mathrm{loop}}(L) = -c R \\ln L\n$$\n\n其中模型参数 $c = 1.8$，通用气体常数 $R = 1.987\\ \\mathrm{cal\\cdot mol^{-1}\\cdot K^{-1}}$，$L$ 为环区长度（单位为核苷酸）。\n\n算法步骤如下：\n1. 实现一个计算函数，根据推导出的公式 $T_m = \\Delta H_{\\mathrm{tot}} / \\Delta S_{\\mathrm{tot}}$ 计算 $T_m$。该函数接受 GC、AT 和 GT 对的数量（$n_{\\mathrm{GC}}$、$n_{\\mathrm{AT}}$、$n_{\\mathrm{GT}}$）和环区长度（$L$）作为输入。\n2. 在此函数内部，使用给定参数：$\\Delta h_{\\mathrm{GC}} = -9800$、$\\Delta s_{\\mathrm{GC}} = -24.4$、$\\Delta h_{\\mathrm{AT}} = -7200$、$\\Delta s_{\\mathrm{AT}} = -20.4$、$\\Delta h_{\\mathrm{GT}} = -4000$、$\\Delta s_{\\mathrm{GT}} = -12.0$、$\\Delta h_{\\mathrm{stack}} = -800$ 和 $\\Delta s_{\\mathrm{stack}} = -2.0$，通过对指定的热力学贡献求和来计算 $\\Delta H_{\\mathrm{tot}}$ 和 $\\Delta S_{\\mathrm{tot}}$。\n3. 程序随后遍历指定的三个测试用例。对于每个用例，它为“天然”发夹及其“摆动”对应物定义参数。\n4. 对于每个用例，调用 $T_m$ 计算函数两次：一次用于天然变体（$T_m^{\\mathrm{native}}$），一次用于摆动变体（$T_m^{\\mathrm{wobble}}$）。\n5. 计算熔解温度的变化量 $\\Delta T_m = T_m^{\\mathrm{wobble}} - T_m^{\\mathrm{native}}$。\n6. 收集三个用例的结果，按要求四舍五入到三位小数，并格式化为单个输出字符串。\n\n引入 G-T 摆动对会使发夹茎区不稳定，因为它在热力学上比 G-C 或 A-T Watson-Crick 对都更不稳定（即其 $\\Delta h$ 和 $\\Delta s$ 值的负值更小）。这种不稳定性会降低熔解温度，因此我们预计在所有情况下 $\\Delta T_m$ 都将为负值。这种效应的大小将取决于被替换的原始碱基对的稳定性以及发夹的整体稳定性。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the DNA hairpin melting problem by calculating the change in melting\n    temperature upon introduction of a G-T wobble pair for three test cases.\n    \"\"\"\n\n    # --- Thermodynamic Parameters ---\n    # Universal gas constant (cal/mol/K)\n    R = 1.987\n    \n    # Per base-pair contributions (enthalpy in cal/mol, entropy in cal/mol/K)\n    # Guanine-Cytosine pair\n    DH_GC = -9800.0\n    DS_GC = -24.4\n    # Adenine-Thymine pair\n    DH_AT = -7200.0\n    DS_AT = -20.4\n    # Guanine-Thymine wobble pair\n    DH_GT = -4000.0\n    DS_GT = -12.0\n    \n    # Per adjacent stacked-pair contribution\n    DH_STACK = -800.0\n    DS_STACK = -2.0\n    \n    # Loop entropy model parameter\n    C_LOOP = 1.8\n\n    def calculate_tm(n_gc, n_at, n_gt, loop_len):\n        \"\"\"\n        Calculates the melting temperature (Tm) for a DNA hairpin.\n\n        Args:\n            n_gc (int): Number of GC pairs.\n            n_at (int): Number of AT pairs.\n            n_gt (int): Number of GT pairs.\n            loop_len (int): Length of the loop in nucleotides.\n\n        Returns:\n            float: The melting temperature in Kelvin.\n        \"\"\"\n        # Total number of base pairs in the stem\n        n = n_gc + n_at + n_gt\n\n        if n == 0:\n            # A stem of zero length has no defined melting transition\n            return np.nan\n\n        # Calculate total enthalpy of folding\n        delta_h_tot = (n_gc * DH_GC + n_at * DH_AT + n_gt * DH_GT)\n        # Stacking contribution exists only for stems with 2 or more pairs\n        if n > 1:\n            delta_h_tot += (n - 1) * DH_STACK\n\n        # Calculate total entropy of folding\n        # Loop entropy penalty (destabilizing)\n        delta_s_loop = -C_LOOP * R * np.log(loop_len)\n        \n        delta_s_tot = (n_gc * DS_GC + n_at * DS_AT + n_gt * DS_GT + delta_s_loop)\n        # Stacking contribution\n        if n > 1:\n            delta_s_tot += (n - 1) * DS_STACK\n            \n        # If entropy change is zero, Tm is not well-defined in this model\n        if delta_s_tot == 0:\n            return np.nan\n\n        # Melting temperature is the ratio of enthalpy to entropy\n        tm = delta_h_tot / delta_s_tot\n        return tm\n\n    # Define the test cases from the problem statement\n    test_cases = [\n        # Case 1: nGC=6, nAT=0, L=4. A GC pair is replaced by a GT wobble.\n        {\n            \"native\": {\"n_gc\": 6, \"n_at\": 0, \"n_gt\": 0, \"loop_len\": 4},\n            \"wobble\": {\"n_gc\": 5, \"n_at\": 0, \"n_gt\": 1, \"loop_len\": 4}\n        },\n        # Case 2: nGC=3, nAT=3, L=8. An AT pair is replaced by a GT wobble.\n        {\n            \"native\": {\"n_gc\": 3, \"n_at\": 3, \"n_gt\": 0, \"loop_len\": 8},\n            \"wobble\": {\"n_gc\": 3, \"n_at\": 2, \"n_gt\": 1, \"loop_len\": 8}\n        },\n        # Case 3: nGC=1, nAT=0, L=3. A GC pair is replaced by a GT wobble.\n        {\n            \"native\": {\"n_gc\": 1, \"n_at\": 0, \"n_gt\": 0, \"loop_len\": 3},\n            \"wobble\": {\"n_gc\": 0, \"n_at\": 0, \"n_gt\": 1, \"loop_len\": 3}\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        # Calculate Tm for both the native and wobble-containing variants\n        tm_native = calculate_tm(**case[\"native\"])\n        tm_wobble = calculate_tm(**case[\"wobble\"])\n\n        # Calculate the change in melting temperature\n        delta_tm = tm_wobble - tm_native\n        \n        # Format the result to three decimal places\n        results.append(f\"{delta_tm:.3f}\")\n\n    # Print the final output in the exact required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2386777"}, {"introduction": "在掌握了基本的热力学模型后，我们将更进一步，采用更贴近真实的邻近碱基对模型来研究完整的DNA双螺旋。这个练习模拟了DNA损伤（一个脱碱基位点）对双螺旋性质的双重影响：它不仅会改变整体的热力学稳定性（即熔解温度 $T_m$），还会影响损伤位点局部的机械柔性。通过这个综合性的实践，你将了解到生物大分子中一个微小的局部变化是如何引发全局性和局部性物理性质的深刻改变的。[@problem_id:2386781]", "problem": "编写一个完整、可运行的程序，在一个基于物理的简化框架下，模拟单个脱碱基位点对脱氧核糖核酸（DNA）双螺旋的局部柔性和熔解温度的影响。对于每个测试用例，程序必须计算两个量：完整双螺旋和含有一个脱碱基位点的双螺旋的熔解温度（以摄氏度为单位），以及在指定参考温度下，完整和脱碱基条件下脱碱基位点处弯曲波动的局部角方差（以平方弧度为单位）。所有数值输入和输出都必须使用指定的单位进行处理。您的程序必须生成单行输出，其中包含所有测试用例的结果，格式为一个由方括号括起来的逗号分隔列表，每个测试用例的结果按如下所述顺序排列成一个列表。\n\n数学和物理设置：\n- 使用二态近似模拟双螺旋的热力学。标准 Gibbs 自由能变化写为 $\\Delta G(T) = \\Delta H - T \\,\\Delta S$，其中 $\\Delta H$ 是标准焓变，$\\Delta S$ 是双螺旋形成的标准熵变。对于总链浓度为 $C_t$（单位为 $\\mathrm{M}$）的非自互补双螺旋，在熔解温度 $T_m$ 时，化学平衡意味着 $K(T) = \\dfrac{1}{C_t/4}$，平衡常数 $K(T) = \\exp\\!\\left(-\\dfrac{\\Delta G(T)}{R T}\\right)$，其中 $R$ 是通用气体常数。\n- 使用最近邻（NN）可加性假说：对于长度为 $N$ 个碱基对的双螺旋，$\\Delta H = \\sum_{i=1}^{N-1} \\Delta H_i$ 且 $\\Delta S = \\sum_{i=1}^{N-1} \\Delta S_i + \\Delta S_{\\text{salt}}$，其中每个碱基对堆叠 $i$ 根据一条链上的 $5^\\prime\\!\\to\\!3^\\prime$ 双核苷酸贡献 $(\\Delta H_i,\\Delta S_i)$，单价盐校正为 $\\Delta S_{\\text{salt}} = 0.368\\,(N-1)\\,\\ln([\\mathrm{Na}^+])$，其中 $[\\mathrm{Na}^+]$ 单位为 $\\mathrm{M}$，$\\ln$ 为自然对数。忽略任何起始或末端校正。假设所有测试序列都是非自互补的。\n- NN参数 $(\\Delta H_i,\\Delta S_i)$ 必须从以下规范集合中获取（单位：$\\Delta H$ 为 $\\mathrm{kcal}\\,\\mathrm{mol}^{-1}$，$\\Delta S$ 为 $\\mathrm{cal}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$），以所考虑链上的 $5^\\prime\\!\\to\\!3^\\prime$ 双核苷酸为键。对于列表中未明确列出的任何双核苷酸，使用其反向互补序列 $\\mathrm{rc}(XY)$ 对应的条目，其中互补定义为 $A\\leftrightarrow T$，$C\\leftrightarrow G$，且 $\\mathrm{rc}(XY)$ 是反向字符串的互补序列。\n  - $AA: (\\,-7.9,\\,-22.2\\,)$, $AT: (\\,-7.2,\\,-20.4\\,)$, $TA: (\\,-7.2,\\,-21.3\\,)$, $CA: (\\,-8.5,\\,-22.7\\,)$, $GT: (\\,-8.4,\\,-22.4\\,)$, $CT: (\\,-7.8,\\,-21.0\\,)$, $GA: (\\,-8.2,\\,-22.2\\,)$, $CG: (\\,-10.6,\\,-27.2\\,)$, $GC: (\\,-9.8,\\,-24.4\\,)$, $GG: (\\,-8.0,\\,-19.9\\,)$。\n  - 对于任何未在列表中的双核苷酸 $XY$，使用其反向互补 $\\mathrm{rc}(XY)$ 的条目，其中互补定义为 $A\\leftrightarrow T$, $C\\leftrightarrow G$，$\\mathrm{rc}(XY)$ 是反向字符串的互补序列。\n- 脱碱基位点热力学：假设在碱基对索引 $j$（沿双螺旋的一维索引）处有一个脱碱基位点。通过仅修改与 $j$ 相邻的两个最近邻堆叠（即堆叠 $j-1$ 和 $j$，如果它们在 $1,\\dots,N-1$ 范围内存在）来模拟其影响。对于每个受影响的堆叠，将其焓贡献乘以一个因子 $\\beta$，并将其熵贡献加上一个偏移量 $\\delta$，其中\n  - $\\beta = 0.5$（无量纲），$\\delta = +5.0\\,\\mathrm{cal}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$。\n  与脱碱基位点不相邻的堆叠不受影响。\n- 熔解温度计算：使用 $R = 1.98720425864083\\,\\mathrm{cal}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$。最终熔解温度 $T_m$ 以摄氏度表示。明确指定任何角度量所使用的角度单位。\n- 局部柔性模型：用谐波角刚度 $k$（弹簧常数）表示碱基对堆叠附近的弯曲性，单位为 $\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{rad}^{-2}$。将 $k_0 = 150.0\\,\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{rad}^{-2}$ 赋给正常堆叠，将 $k_{\\text{ab}} = 30.0\\,\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{rad}^{-2}$ 赋给与脱碱基位点相邻的堆叠。将脱碱基位置的有效局部刚度定义为相邻一个或两个堆叠上弹簧的串联：\n  $$\\frac{1}{k_{\\mathrm{eff}}} = \\sum_{\\ell} \\frac{1}{k_{\\ell}},$$\n  其中求和遍及堆叠 $j-1$ 和堆叠 $j$（如果两者都存在）；如果脱碱基位点位于末端（因此只有一个相邻堆叠），则 $k_{\\mathrm{eff}}$ 等于该单个堆叠的刚度。使用单个二次角度自由度的能量均分定理，角方差为：\n  $$\\sigma^2 = \\frac{k_{\\mathrm{B}}\\,T_{\\mathrm{ref}}}{k_{\\mathrm{eff}}},$$\n  其中 Boltzmann 常数 $k_{\\mathrm{B}} = 0.01380649\\,\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{K}^{-1}$，参考温度 $T_{\\mathrm{ref}} = 298.15\\,\\mathrm{K}$。报告 $\\sigma^2$，单位为 $\\mathrm{rad}^2$。\n- 单位和数值要求：\n  - 报告 $T_m$（单位：摄氏度）和 $\\sigma^2$（单位：$\\mathrm{rad}^2$）。\n  - 所有 $\\ln(\\cdot)$ 均使用自然对数。\n  - 所有输入浓度 $C_t$ 和 $[\\mathrm{Na}^+]$ 的单位均为 $\\mathrm{M}$。\n\n要实现和评估的测试套件：\n- 案例1：序列 $S = \\mathrm{ATGCGTAC}$，长度 $N=8$，脱碱基索引 $j=4$，总链浓度 $C_t = 2\\times 10^{-6}\\,\\mathrm{M}$，单价盐浓度 $[\\mathrm{Na}^+] = 0.05\\,\\mathrm{M}$。\n- 案例2：序列 $S = \\mathrm{ATATATAT}$，$N=8$，$j=4$，$C_t = 1\\times 10^{-6}\\,\\mathrm{M}$，$[\\mathrm{Na}^+] = 0.01\\,\\mathrm{M}$。\n- 案例3：序列 $S = \\mathrm{GCGCGCGC}$，$N=8$，$j=1$，$C_t = 5\\times 10^{-6}\\,\\mathrm{M}$，$[\\mathrm{Na}^+] = 1.0\\,\\mathrm{M}$。\n- 案例4：序列 $S = \\mathrm{ATGC}$，$N=4$，$j=2$，$C_t = 1\\times 10^{-7}\\,\\mathrm{M}$，$[\\mathrm{Na}^+] = 0.05\\,\\mathrm{M}$。\n\n对于每个案例，程序必须按以下顺序生成一个包含四个实数的列表：\n- 完整双螺旋的 $T_m$（摄氏度），\n- 经过上述脱碱基位点修饰的双螺旋的 $T_m$（摄氏度），\n- 在指定脱碱基位点索引处，完整双螺旋的 $\\sigma^2$（单位：$\\mathrm{rad}^2$），\n- 在指定脱碱基位点索引处，经过脱碱基修饰的双螺旋的 $\\sigma^2$（单位：$\\mathrm{rad}^2$）。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含结果，格式为一个由方括号括起来的逗号分隔列表，每个元素是对应一个测试用例的四个数字列表，顺序与测试套件中的案例顺序相同。例如：$[ [x_1,x_2,x_3,x_4], [y_1,y_2,y_3,y_4], \\dots ]$。", "solution": "所提出的问题要求计算DNA双螺旋的热力学和力学性质，包括其完整形式和带有一个脱碱基位点缺陷的形式。提供的框架是一个简化的、但有物理基础的模型，在生物物理化学中很常见。在继续之前，我有责任验证问题陈述的科学合理性和逻辑一致性。\n\n问题指定了一套用于DNA稳定性的最近邻参数、一个标准的盐校正以及一个用于熔解的二态模型。熔解温度 $T_m$ 的方程源自条件 $K(T_m)=4/C_t$，这对于非自互补双螺旋是正确的。然后，问题指示“假设所有测试序列都是非自互补的”。然而，检查所提供的测试用例后发现，案例2 ($S = \\mathrm{ATATATAT}$) 和案例3 ($S = \\mathrm{GCGCGCGC}$) 包含自互补序列。对于这类序列，熔解平衡是不同的，导致条件为 $K(T_m)=1/C_t$。\n\n这在明确的假设和所提供的数据之间造成了矛盾。在严谨的科学背景下，人们会为每种序列类型使用正确的公式。然而，在一个学术问题的范围内，一个明确的“假设”指令必须被解释为应用指定模型的指令，即使这是一种简化或超出了其通常的应用范围。它为本次练习设定了计算规则。因此，我将严格遵守所述假设，按照指示将非自互补公式应用于所有情况。因此，该问题被认为是有效的，尽管其表述不完美。所有其他的科学原理和常数都是标准的且陈述正确。\n\n解决方案的结构如下：\n首先，将进行热力学计算，以求出双螺旋形成的总焓变 $\\Delta H$ 和熵变 $\\Delta S$。这使用最近邻模型，其中每个二核苷酸堆叠的参数相加。从提供的10对参数和反向互补对称规则构建一个包含所有16个二核苷酸的完整参数表。对于脱碱基情况，与脱碱基位点相邻的两个堆叠的焓和熵贡献将根据给定的参数 $\\beta$ 和 $\\delta$ 进行修改。\n\n熔解温度 $T_m$ 是从熔点处的化学平衡关系推导出来的。给定浓度依赖的平衡常数 $K(T) = \\exp(-\\Delta G(T) / (RT))$，以及非自互补链在 $T_m$ 处双螺旋分数为 $1/2$ 的条件，我们得到 $K(T_m)=4/C_t$。Gibbs 自由能为 $\\Delta G(T) = \\Delta H - T\\Delta S$。\n由此，我们推导出以开尔文为单位的 $T_m$ 表达式：\n\n$$ T_m = \\frac{\\Delta H}{\\Delta S - R \\ln(4/C_t)} $$\n\n在这里，$\\Delta H$ 和 $\\Delta S$ 是双螺旋形成的总焓变和熵变，包括盐效应。注意单位必须一致。给定的 $\\Delta H_i$ 单位是 $\\mathrm{kcal}\\,\\mathrm{mol}^{-1}$，必须通过乘以1000转换为 $\\mathrm{cal}\\,\\mathrm{mol}^{-1}$。得到的开尔文温度 $T_m$ 通过减去273.15转换为摄氏度。此过程将应用于完整和脱碱基修饰的双螺旋。\n\n其次，通过计算缺陷位置的角方差 $\\sigma^2$ 来模拟局部柔性。双螺旋被视为具有谐波弯曲刚度的链段链。位置 $j$ 处的有效刚度 $k_{\\mathrm{eff}}$ 是通过将相邻的碱基对堆叠（$j-1$ 和 $j$）视为串联弹簧来计算的：\n\n$$ \\frac{1}{k_{\\mathrm{eff}}} = \\sum_{\\ell \\in \\{j-1, j\\} \\cap \\{1, \\dots, N-1\\}} \\frac{1}{k_{\\ell}} $$\n\n对于完整的双螺旋，所有堆叠的刚度为 $k_0 = 150.0\\,\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{rad}^{-2}$。对于内部位点（$1 < j < N$），这得到 $1/k_{\\mathrm{eff}} = 1/k_0 + 1/k_0 = 2/k_0$，所以 $k_{\\mathrm{eff}} = k_0/2$。对于末端位点（$j=1$ 或 $j=N$），$k_{\\mathrm{eff}} = k_0$。对于在位置 $j$ 有一个脱碱基位点的双螺旋，相邻堆叠的刚度降低为 $k_{\\text{ab}} = 30.0\\,\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{rad}^{-2}$。同样的串联组合规则适用，导致内部位点的 $k_{\\mathrm{eff}} = k_{\\text{ab}}/2$ 和末端位点的 $k_{\\mathrm{eff}} = k_{\\text{ab}}$。\n\n然后，使用单个二次角度自由度的能量均分定理找到角方差 $\\sigma^2$：\n\n$$ \\sigma^2 = \\frac{k_{\\mathrm{B}}\\,T_{\\mathrm{ref}}}{k_{\\mathrm{eff}}} $$\n\n其中 $k_{\\mathrm{B}} = 0.01380649\\,\\mathrm{pN}\\cdot\\mathrm{nm}\\cdot\\mathrm{K}^{-1}$ 是 Boltzmann 常数， $T_{\\mathrm{ref}} = 298.15\\,\\mathrm{K}$ 是参考温度。使用各自的 $k_{\\mathrm{eff}}$ 值为完整和脱碱基两种情况计算方差。\n\n实现将通过应用这两个计算步骤来处理每个测试用例，从而得出四个所需的量：$T_{m,\\text{intact}}$、$T_{m,\\text{abasic}}$、$\\sigma^2_{\\text{intact}}$ 和 $\\sigma^2_{\\text{abasic}}$。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the DNA thermodynamics and mechanics problem as specified.\n    \"\"\"\n    # Global constants\n    R_GAS = 1.98720425864083  # cal mol^-1 K^-1\n    KB = 0.01380649          # pN nm K^-1\n    T_REF = 298.15            # K\n    K_0 = 150.0               # pN nm rad^-2\n    K_AB = 30.0               # pN nm rad^-2\n    K_TO_C = -273.15          # Kelvin to Celsius conversion\n\n    # Nearest-neighbor parameters (dH in kcal/mol, dS in cal/mol/K)\n    nn_params_raw = {\n        'AA': (-7.9, -22.2), 'AT': (-7.2, -20.4), 'TA': (-7.2, -21.3),\n        'CA': (-8.5, -22.7), 'GT': (-8.4, -22.4), 'CT': (-7.8, -21.0),\n        'GA': (-8.2, -22.2), 'CG': (-10.6, -27.2), 'GC': (-9.8, -24.4),\n        'GG': (-8.0, -19.9)\n    }\n\n    # Build full 16-dinucleotide parameter set using reverse complement symmetry\n    complements = {'A': 'T', 'T': 'A', 'C': 'G', 'G': 'C'}\n    \n    def reverse_complement(seq):\n        return \"\".join(complements[base] for base in reversed(seq))\n\n    nn_params = {}\n    all_bases = ['A', 'C', 'G', 'T']\n    for b1 in all_bases:\n        for b2 in all_bases:\n            dinucl = b1 + b2\n            if dinucl in nn_params_raw:\n                nn_params[dinucl] = nn_params_raw[dinucl]\n            else:\n                rc_dinucl = reverse_complement(dinucl)\n                nn_params[dinucl] = nn_params_raw[rc_dinucl]\n\n    # Abasic site modification parameters\n    BETA = 0.5   # Enthalpy scaling factor\n    DELTA = 5.0  # Entropy offset in cal/mol/K\n\n    test_cases = [\n        # S, N, j, Ct, Na_conc\n        (\"ATGCGTAC\", 8, 4, 2e-6, 0.05),\n        (\"ATATATAT\", 8, 4, 1e-6, 0.01),\n        (\"GCGCGCGC\", 8, 1, 5e-6, 1.0),\n        (\"ATGC\", 4, 2, 1e-7, 0.05),\n    ]\n\n    results = []\n\n    def calculate_tm(sequence, na_conc, ct, abasic_j=None):\n        \"\"\"Calculates melting temperature.\"\"\"\n        n = len(sequence)\n        \n        dH_total_kcal = 0.0\n        dS_nn_total = 0.0\n        \n        # Sum over nearest-neighbor steps\n        for i in range(n - 1):\n            step_idx = i + 1\n            dinucl = sequence[i:i+2]\n            dH_i_kcal, dS_i = nn_params[dinucl]\n            \n            # Apply abasic modification if applicable\n            if abasic_j is not None:\n                # Abasic site at base 'j' affects steps 'j-1' and 'j'\n                if step_idx == abasic_j - 1 or step_idx == abasic_j:\n                    dH_i_kcal *= BETA\n                    dS_i += DELTA\n            \n            dH_total_kcal += dH_i_kcal\n            dS_nn_total += dS_i\n        \n        # Convert dH to cal/mol\n        dH_total_cal = dH_total_kcal * 1000.0\n        \n        # Salt correction for entropy\n        dS_salt = 0.368 * (n - 1) * np.log(na_conc)\n        dS_total = dS_nn_total + dS_salt\n        \n        # Calculate Tm in Kelvin\n        # Formula: Tm = dH / (dS - R * ln(4/Ct)) for non-self-complementary\n        denominator = dS_total - R_GAS * np.log(4.0 / ct)\n        \n        # Avoid division by zero, though unlikely with physical params\n        if abs(denominator) < 1e-9:\n            return float('nan')\n        \n        tm_k = dH_total_cal / denominator\n        \n        # Convert to Celsius\n        tm_c = tm_k + K_TO_C\n        return tm_c\n\n    def calculate_variance(n, j):\n        \"\"\"Calculates local angular variance.\"\"\"\n        k_b_t_ref = KB * T_REF\n\n        # Intact duplex\n        if j == 1 or j == n: # Terminal position\n            k_eff_intact = K_0\n        else: # Internal position\n            k_eff_intact = K_0 / 2.0\n        \n        sigma2_intact = k_b_t_ref / k_eff_intact\n\n        # Abasic duplex\n        if j == 1 or j == n: # Terminal position\n            k_eff_abasic = K_AB\n        else: # Internal position\n            k_eff_abasic = K_AB / 2.0\n        \n        sigma2_abasic = k_b_t_ref / k_eff_abasic\n\n        return sigma2_intact, sigma2_abasic\n\n    for case in test_cases:\n        s, n, j, ct, na_conc = case\n        \n        # Calculate Tm for intact and abasic duplexes\n        tm_intact = calculate_tm(s, na_conc, ct)\n        tm_abasic = calculate_tm(s, na_conc, ct, abasic_j=j)\n        \n        # Calculate variances for intact and abasic duplexes\n        sigma2_intact, sigma2_abasic = calculate_variance(n, j)\n        \n        results.append([tm_intact, tm_abasic, sigma2_intact, sigma2_abasic])\n\n    # Format the final output string as specified\n    output_str = \"[\" + \",\".join([str(res) for res in results]) + \"]\"\n    print(output_str)\n\nsolve()\n```", "id": "2386781"}, {"introduction": "最后，我们将视角从DNA的局部性质放大到它作为长链高分子的整体行为。这个练习将微观的、依赖于序列的单步弯曲刚度与一个宏观的、可测量的物理量——持续长度 $L_p$ ——通过经典的蠕虫状链模型联系起来。通过实现一个平均局部刚度的模型，你将理解DNA长链的整体“硬度”是如何由其碱基序列这一内在编码决定的，这构成了从微观到宏观的关键概念桥梁。[@problem_id:2386739]", "problem": "要求您将脱氧核糖核酸（DNA）的序列依赖性力学模型与一个物理上可测量的涌现参数——持续长度——联系起来。将DNA建模为一个细长的、不可伸长的弹性杆，其中心线的几何形状由连续的弧长坐标 $s$ 和曲率 $\\kappa(s)$ 描述。假设绕主轴的弯曲是各向同性的，并且局部弯曲刚度（也称为弯曲模量）$A(s)$ 会因序列的异质性而随 $s$ 变化。在小偏转情况下，该杆的弹性能量遵循标准的弹性杆泛函\n$$\nE[\\kappa] \\;=\\; \\tfrac{1}{2} \\int_{0}^{L} A(s)\\,\\kappa(s)^2\\,ds,\n$$\n并且其构象的统计力学遵循绝对温度为 $T$、Boltzmann常数为 $k_{\\mathrm{B}}$ 的Boltzmann分布。蠕虫状链（WLC）模型是此类弹性模型的典型连续统极限。\n\n任务：\n1) 从上述能量泛函出发，并基于在给定净弯曲角度下，平衡曲率场 $\\kappa(s)$ 是通过在总弯曲的几何约束下最小化 $E[\\kappa]$ 得到的原理，推导出一个总轮廓长度为 $L$ 的异质杆的等效均质弯曲模量 $A_{\\mathrm{eff}}$ 的表达式。然后，对于一个由 $N$ 个碱基对步长组成的离散化杆，每个步长的弧长为 $b_i$，局部弯曲模量为 $A_i$，将您的连续表达式转换为用 $\\{A_i\\}_{i=1}^{N}$ 和 $\\{b_i\\}_{i=1}^{N}$ 表示的离散公式。\n\n2) 使用热化弹性杆和蠕虫状链模型的平衡统计力学基本结果，用 $A_{\\mathrm{eff}}$、$k_{\\mathrm{B}}$ 和 $T$ 表示持续长度 $L_p$。您必须清楚地陈述证明此关系所需的最小物理假设。\n\n3) 实现一个程序，对于一个具有均匀碱基对上升距离 $b$（单位为纳米）的DNA片段，给定温度 $T$（单位为开尔文）和每步弯曲模量列表 $\\{A_i\\}$（单位为 $\\mathrm{pN}\\cdot\\mathrm{nm}^2$），使用您推导的离散 $A_{\\mathrm{eff}}$ 和 $L_p$ 表达式计算持续长度 $L_p$（单位为纳米）。使用 $k_{\\mathrm{B}} = 1.380649\\times 10^{-23}\\ \\mathrm{J/K}$ 的值，并通过 $1\\ \\mathrm{J} = 10^{21}\\ \\mathrm{pN}\\cdot\\mathrm{nm}$ 将其转换为 $\\mathrm{pN}\\cdot\\mathrm{nm/K}$。\n\n4) 物理单位和数值单位：输入弯曲模量 $A_i$ 的单位是 $\\mathrm{pN}\\cdot\\mathrm{nm}^2$，碱基对上升距离 $b$ 的单位是 $\\mathrm{nm}$，温度 $T$ 的单位是 $\\mathrm{K}$，您必须输出 $L_p$（单位为 $\\mathrm{nm}$）。报告每个数值结果，四舍五入到 $6$ 位小数。\n\n5) 测试套件：您的程序必须为以下参数集计算 $L_p$。在所有情况下，均采用统一的每步上升距离 $b = 0.34\\ \\mathrm{nm}$。\n- 情况1（均质，室温下典型的类DNA刚度）：$T = 298.15$, $A = [\\,205.7,\\,205.7,\\,205.7,\\,205.7,\\,205.7\\,]$。\n- 情况2（软-硬步长交替）：$T = 298.15$, $A = [\\,100,\\,300,\\,100,\\,300,\\,100,\\,300\\,]$。\n- 情况3（非常刚硬）：$T = 298.15$, $A = [\\,1000,\\,1000,\\,1000\\,]$。\n- 情况4（在多个刚性步长中有一个非常软的步长）：$T = 298.15$, $A = [\\,300,\\,300,\\,300,\\,10,\\,300,\\,300,\\,300,\\,300,\\,300,\\,300\\,]$。\n- 情况5（生理温度下的温度依赖性）：$T = 310.0$, $A = [\\,205.7,\\,205.7,\\,205.7,\\,205.7\\,]$。\n- 情况6（单步长边缘情况）：$T = 298.15$, $A = [\\,150\\,]$。\n\n6) 最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔的结果列表（例如，`[result1,result2,result3]`）。每个条目必须是等于 $L_p$（单位为 $\\mathrm{nm}$）的浮点数，四舍五入到 $6$ 位小数，并按照上面列出的情况顺序排列。\n\n重要约束：\n- 您的推导必须从能量泛函和广义统计力学原理开始，而不是从一个快捷公式。您必须证明任何从连续到离散的转换的合理性。\n- 如果在推导过程中引入了角度，则应将其视为小角度并以弧度为单位。最终的数值输入或输出中不出现角度。\n- 您唯一可以使用的物理常数是 $k_{\\mathrm{B}}$ 和按规定指定的 $\\mathrm{J}$ 与 $\\mathrm{pN}\\cdot\\mathrm{nm}$ 之间的单位换算关系。", "solution": "我们从脱氧核糖核酸（DNA）的细长弹性杆模型入手，采用小偏转体系和各向同性弯曲。对于一个曲率场为 $\\kappa(s)$、弯曲模量随位置变化的 $A(s)$ 的空间曲线，其弹性能量为：\n\n$$\nE[\\kappa] \\;=\\; \\frac{1}{2}\\int_{0}^{L} A(s)\\,\\kappa(s)^2\\,ds,\n$$\n\n其中 $s$ 是弧长，$L$ 是轮廓长度。考虑施加一个小的整体弯曲，使得两端切线之间的净角度为 $\\Theta$。几何约束为：\n\n$$\n\\int_{0}^{L} \\kappa(s)\\,ds \\;=\\; \\Theta,\n$$\n\n其中 $\\Theta$ 的单位是弧度。在所有满足此约束的允许的 $\\kappa(s)$ 中，物理的弯曲响应会使 $E[\\kappa]$ 最小化。为该约束引入一个Lagrange乘子 $\\lambda$ 并最小化：\n\n$$\n\\mathcal{F}[\\kappa] \\;=\\; \\frac{1}{2}\\int_{0}^{L} A(s)\\,\\kappa(s)^2\\,ds \\;-\\; \\lambda\\left(\\int_{0}^{L}\\kappa(s)\\,ds - \\Theta\\right).\n$$\n\n相对于变分 $\\delta \\kappa(s)$ 的平稳性条件得出：\n\n$$\n\\frac{\\delta \\mathcal{F}}{\\delta \\kappa(s)} \\;=\\; A(s)\\,\\kappa(s) \\;-\\; \\lambda \\;=\\; 0 \\quad\\Rightarrow\\quad \\kappa(s) \\;=\\; \\frac{\\lambda}{A(s)}.\n$$\n\n强制执行约束条件可得：\n\n$$\n\\Theta \\;=\\; \\int_{0}^{L}\\kappa(s)\\,ds \\;=\\; \\int_{0}^{L}\\frac{\\lambda}{A(s)}\\,ds \\;=\\; \\lambda \\int_{0}^{L}\\frac{ds}{A(s)} \\;\\Rightarrow\\; \\lambda \\;=\\; \\frac{\\Theta}{\\int_{0}^{L}\\frac{ds}{A(s)}}.\n$$\n\n将最小化曲率代回能量表达式可得：\n\n$$\nE_{\\min} \\;=\\; \\frac{1}{2}\\int_{0}^{L}A(s)\\left(\\frac{\\lambda}{A(s)}\\right)^2 ds \n\\;=\\; \\frac{1}{2}\\lambda^2 \\int_{0}^{L}\\frac{ds}{A(s)}\n\\;=\\; \\frac{1}{2}\\frac{\\Theta^2}{\\int_{0}^{L}\\frac{ds}{A(s)}}.\n$$\n\n对于一个模量为 $A_{\\mathrm{eff}}$ 的等效均质杆，施加相同的弯曲 $\\Theta$ 将消耗的能量为：\n\n$$\nE_{\\mathrm{hom}} \\;=\\; \\frac{1}{2}\\frac{A_{\\mathrm{eff}}}{L}\\,\\Theta^2,\n$$\n\n因为曲率是均匀的，$\\kappa = \\Theta/L$，导致 $E = \\frac{1}{2}\\int_{0}^{L} A_{\\mathrm{eff}}(\\Theta/L)^2 ds = \\frac{1}{2}\\frac{A_{\\mathrm{eff}}}{L}\\Theta^2$。令 $E_{\\min}$ 和 $E_{\\mathrm{hom}}$ 相等可得：\n\n$$\n\\frac{1}{2}\\frac{A_{\\mathrm{eff}}}{L}\\,\\Theta^2 \\;=\\; \\frac{1}{2}\\frac{\\Theta^2}{\\int_{0}^{L}\\frac{ds}{A(s)}} \\quad\\Rightarrow\\quad \\frac{1}{A_{\\mathrm{eff}}} \\;=\\; \\frac{1}{L}\\int_{0}^{L}\\frac{ds}{A(s)}.\n$$\n\n因此，有效弯曲模量是局部模量以弧长为权重的调和平均值：\n\n$$\nA_{\\mathrm{eff}} \\;=\\; \\frac{L}{\\displaystyle \\int_{0}^{L}\\frac{ds}{A(s)}}.\n$$\n\n碱基对步长的离散化公式。假设杆被离散为 $N$ 个步长，索引为 $i=1,\\dots,N$，其长度为 $b_i$（单位为纳米），模量为 $A_i$（单位为 $\\mathrm{pN}\\cdot\\mathrm{nm}^2$）。通过黎曼和近似该积分可得：\n\n$$\nL \\;=\\; \\sum_{i=1}^{N} b_i,\\qquad \\int_{0}^{L}\\frac{ds}{A(s)} \\;\\approx\\; \\sum_{i=1}^{N}\\frac{b_i}{A_i},\n$$\n\n因此：\n\n$$\nA_{\\mathrm{eff}} \\;=\\; \\frac{\\displaystyle \\sum_{i=1}^{N} b_i}{\\displaystyle \\sum_{i=1}^{N}\\frac{b_i}{A_i}}.\n$$\n\n对于均匀步长 $b_i=b$，此式简化为（未加权的）调和平均值：\n\n$$\nA_{\\mathrm{eff}} \\;=\\; \\frac{N}{\\displaystyle \\sum_{i=1}^{N}\\frac{1}{A_i}}.\n$$\n\n从统计力学推导持续长度。在蠕虫状链（WLC）模型中（它是弹性杆在热涨落下的对应模型），切向-切向相关函数随弧长呈指数衰减，形式为 $\\langle \\mathbf{t}(s)\\cdot\\mathbf{t}(0)\\rangle = e^{-s/L_p}$，这定义了持续长度 $L_p$。一个标准且经过充分验证的关系通过热能将弯曲模量与持续长度联系起来：\n\n$$\nL_p \\;=\\; \\frac{A}{k_{\\mathrm{B}} T}.\n$$\n\n这可以从能量均分定理和二次弯曲能量密度推导得出：对于小的热涨落，每个二次模平均贡献 $\\tfrac{1}{2}k_{\\mathrm{B}}T$，这导致平均曲率方差与 $k_{\\mathrm{B}}T/A$ 成正比，而在WLC连续统极限中，相关长度 $L_p$ 与该方差成反比。对于一个粗粒化为等效均质杆的异质细丝，我们用 $A_{\\mathrm{eff}}$ 替换 $A$：\n\n$$\nL_p \\;=\\; \\frac{A_{\\mathrm{eff}}}{k_{\\mathrm{B}} T}.\n$$\n\n单位与换算。给定 $A_i$ 的单位为 $\\mathrm{pN}\\cdot\\mathrm{nm}^2$，$b_i$ 的单位为 $\\mathrm{nm}$，$T$ 的单位为 $\\mathrm{K}$。Boltzmann常数为 $k_{\\mathrm{B}} = 1.380649\\times 10^{-23}\\ \\mathrm{J/K}$。使用 $1\\ \\mathrm{J} = 10^{21}\\ \\mathrm{pN}\\cdot\\mathrm{nm}$，我们有：\n\n$$\nk_{\\mathrm{B}} \\;=\\; 1.380649\\times 10^{-23}\\ \\mathrm{J/K} \\;=\\; 1.380649\\times 10^{-23}\\times 10^{21}\\ \\mathrm{pN}\\cdot\\mathrm{nm/K} \\;=\\; 0.01380649\\ \\mathrm{pN}\\cdot\\mathrm{nm/K}.\n$$\n\n因此 $k_{\\mathrm{B}}T$ 的单位是 $\\mathrm{pN}\\cdot\\mathrm{nm}$，而 $A_{\\mathrm{eff}}/(k_{\\mathrm{B}}T)$ 得出的 $L_p$ 的单位是 $\\mathrm{nm}$。\n\n算法：\n- 对每种情况，构建 $b_i$ 和 $A_i$，计算 $L=\\sum_i b_i$ 和 $S=\\sum_i b_i/A_i$。\n- 计算 $A_{\\mathrm{eff}} = L/S$。\n- 计算 $k_{\\mathrm{B}}T = 0.01380649 \\times T$（单位 $\\mathrm{pN}\\cdot\\mathrm{nm}$）。\n- 计算 $L_p = A_{\\mathrm{eff}}/(k_{\\mathrm{B}}T)$（单位 $\\mathrm{nm}$）。\n- 四舍五入到 $6$ 位小数。\n\n现在使用统一的 $b_i=b=0.34\\ \\mathrm{nm}$ 对测试套件进行数值评估。\n\n情况 1：$T=298.15$, $A=[205.7,205.7,205.7,205.7,205.7]$。\n- $A_{\\mathrm{eff}} = 205.7$。\n- $k_{\\mathrm{B}}T = 0.01380649\\times 298.15 = 4.1164049935$。\n- $L_p = 205.7/4.1164049935 \\approx 49.970788\\ \\mathrm{nm}$。\n\n情况 2：$T=298.15$, $A=[100,300,100,300,100,300]$。\n- $A_{\\mathrm{eff}} = \\left(6 / (3/100+3/300)\\right) = 150$。\n- $k_{\\mathrm{B}}T = 4.1164049935$。\n- $L_p = 150/4.1164049935 \\approx 36.439563\\ \\mathrm{nm}$。\n\n情况 3：$T=298.15$, $A=[1000,1000,1000]$。\n- $A_{\\mathrm{eff}} = 1000$。\n- $k_{\\mathrm{B}}T = 4.1164049935$。\n- $L_p = 1000/4.1164049935 \\approx 242.930420\\ \\mathrm{nm}$。\n\n情况 4：$T=298.15$, $A=[300,300,300,10,300,300,300,300,300,300]$。\n- $A_{\\mathrm{eff}} = 10/\\left(9/300 + 1/10\\right) = 76.9230769231$。\n- $k_{\\mathrm{B}}T = 4.1164049935$。\n- $L_p \\approx 76.9230769231/4.1164049935 \\approx 18.686956\\ \\mathrm{nm}$。\n\n情况 5：$T=310.0$, $A=[205.7,205.7,205.7,205.7]$。\n- $A_{\\mathrm{eff}} = 205.7$。\n- $k_{\\mathrm{B}}T = 0.01380649\\times 310.0 = 4.2800119$。\n- $L_p = 205.7/4.2800119 \\approx 48.052203\\ \\mathrm{nm}$。\n\n情况 6：$T=298.15$, $A=[150]$。\n- $A_{\\mathrm{eff}} = 150$。\n- $k_{\\mathrm{B}}T = 4.1164049935$。\n- $L_p = 150/4.1164049935 \\approx 36.439563\\ \\mathrm{nm}$。\n\n最终要求的输出（四舍五入到 $6$ 位小数并按指定顺序排列）是包含一个浮点数列表的单行文本：\n$[49.970788,36.439563,242.930420,18.686956,48.052203,36.439563]$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef effective_bending_modulus(A_list, b_list):\n    \"\"\"\n    Compute A_eff for a heterogeneous elastic rod discretized into steps.\n    A_list: list or array of per-step bending moduli (pN*nm^2)\n    b_list: list or array of per-step lengths (nm)\n    Returns A_eff in pN*nm^2.\n    \"\"\"\n    A = np.asarray(A_list, dtype=float)\n    b = np.asarray(b_list, dtype=float)\n    L = b.sum()  # total contour length (nm)\n    compliance_sum = np.sum(b / A)  # sum of ds/A(s)\n    return L / compliance_sum\n\ndef persistence_length_nm(A_eff, T_kelvin):\n    \"\"\"\n    Compute L_p in nm given A_eff (pN*nm^2) and temperature T (K).\n    Uses k_B = 0.01380649 pN*nm/K (from 1.380649e-23 J/K with 1 J = 1e21 pN*nm).\n    \"\"\"\n    kB_pNnm_perK = 0.01380649\n    kBT = kB_pNnm_perK * T_kelvin  # pN*nm\n    return A_eff / kBT  # nm\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case: (T in K, b in nm, list of A_i in pN*nm^2)\n    test_cases = [\n        (298.15, 0.34, [205.7, 205.7, 205.7, 205.7, 205.7]),\n        (298.15, 0.34, [100.0, 300.0, 100.0, 300.0, 100.0, 300.0]),\n        (298.15, 0.34, [1000.0, 1000.0, 1000.0]),\n        (298.15, 0.34, [300.0, 300.0, 300.0, 10.0, 300.0, 300.0, 300.0, 300.0, 300.0, 300.0]),\n        (310.0,  0.34, [205.7, 205.7, 205.7, 205.7]),\n        (298.15, 0.34, [150.0]),\n    ]\n\n    results = []\n    for T, b, A_list in test_cases:\n        b_list = [b] * len(A_list)\n        A_eff = effective_bending_modulus(A_list, b_list)\n        Lp = persistence_length_nm(A_eff, T)\n        results.append(f\"{Lp:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2386739"}]}