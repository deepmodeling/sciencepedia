{"hands_on_practices": [{"introduction": "从第一性原理理解如何构建基函数是有限元方法的基石。本练习将引导你使用基函数的基本定义属性，推导最简单、最常见的形函数——三角形单元上的线性函数，并探索其优美的几何意义。[@problem_id:2375619]", "problem": "考虑一个二维空间中的三角形有限元，其顶点为 $v_{1} = (0,0)$、$v_{2} = (2,0)$ 和 $v_{3} = (0,1)$。在求解带有标量常数扩散系数 $k$ 的泊松方程的有限元法（FEM）中，三角形上的标准线性（一阶）基函数是与顶点相关联的重心坐标。重心坐标被定义为仿射函数，其在关联顶点处等于 $1$，在另外两个顶点处等于 $0$，并且在三角形内的每一点上，它们的和都为 $1$。它们有一种几何解释，即由某点和单元边构成的子三角形面积与总面积之比。对于标量扩散问题，单元刚度矩阵的项由双线性形式积分 $K_{ij} = \\int_{T} k \\, \\nabla N_{i} \\cdot \\nabla N_{j} \\, \\mathrm{d}A$ 给出，其中 $N_{i}$ 表示形函数，$T$ 是三角形单元域。\n\n任务：\n1) 仅从三角形上重心坐标的定义性质（仿射性、单位分解性以及在顶点处的克罗内克δ性质）出发，推导给定三角形上三个线性形函数 $N_{1}(x,y)$、$N_{2}(x,y)$ 和 $N_{3}(x,y)$ 的显式表达式。利用面积解释来证明每个 $N_{i}$ 的几何意义，即与顶点 $v_{i}$ 相对的子三角形面积与 $T$ 的总面积的（有向）比率。\n2) 证明单位分解性质 $N_{1} + N_{2} + N_{3} = 1$ 和节点插值性质 $N_{i}(v_{j}) = \\delta_{ij}$，其中 $i,j \\in \\{1,2,3\\}$。\n3) 证明梯度 $\\nabla N_{i}$ 在 $T$ 上是常向量，明确求出它们，并解释它们与相应顶点对边相关的几何解释。\n4) 对于常系数 $k=3$ 的标量扩散问题，计算该单元的非对角刚度项 $K_{12} = \\int_{T} k \\, \\nabla N_{1} \\cdot \\nabla N_{2} \\, \\mathrm{d}A$。将最终答案表示为单个精确实数，不要四舍五入。", "solution": "所述问题是有限元法理论中的一个标准的、基础的练习。它具有科学依据，是良定的，并且没有任何事实或逻辑上的不一致。定义和任务是清晰且客观的。因此，该问题是有效的，我们将以必要的严谨性来构建解答。\n\n三角形单元 $T$ 由顶点 $v_{1} = (0,0)$、$v_{2} = (2,0)$ 和 $v_{3} = (0,1)$ 定义。该三角形的面积（记为 $A$）由 $A = \\frac{1}{2} \\times \\text{base} \\times \\text{height} = \\frac{1}{2} \\times 2 \\times 1 = 1$ 给出。\n\n**1) 形函数的推导**\n\n线性形函数 $N_{i}(x,y)$ 是形式为 $N_{i}(x,y) = a_{i}x + b_{i}y + c_{i}$ 的仿射函数。每个函数的系数由其在顶点处的克罗内克δ性质 $N_{i}(v_{j}) = \\delta_{ij}$ 确定。\n\n对于 $N_{1}(x,y)$：\n我们施加条件 $N_{1}(v_{1})=1$，$N_{1}(v_{2})=0$ 和 $N_{1}(v_{3})=0$。\n$N_{1}(0,0) = a_{1}(0) + b_{1}(0) + c_{1} = 1 \\implies c_{1} = 1$。\n$N_{1}(2,0) = a_{1}(2) + b_{1}(0) + c_{1} = 0 \\implies 2a_{1} + 1 = 0 \\implies a_{1} = -\\frac{1}{2}$。\n$N_{1}(0,1) = a_{1}(0) + b_{1}(1) + c_{1} = 0 \\implies b_{1} + 1 = 0 \\implies b_{1} = -1$。\n因此，$N_{1}(x,y) = -\\frac{1}{2}x - y + 1$。\n\n对于 $N_{2}(x,y)$：\n我们施加条件 $N_{2}(v_{1})=0$，$N_{2}(v_{2})=1$ 和 $N_{2}(v_{3})=0$。\n$N_{2}(0,0) = a_{2}(0) + b_{2}(0) + c_{2} = 0 \\implies c_{2} = 0$。\n$N_{2}(2,0) = a_{2}(2) + b_{2}(0) + c_{2} = 1 \\implies 2a_{2} = 1 \\implies a_{2} = \\frac{1}{2}$。\n$N_{2}(0,1) = a_{2}(0) + b_{2}(1) + c_{2} = 0 \\implies b_{2} = 0$。\n因此，$N_{2}(x,y) = \\frac{1}{2}x$。\n\n对于 $N_{3}(x,y)$：\n我们施加条件 $N_{3}(v_{1})=0$，$N_{3}(v_{2})=0$ 和 $N_{3}(v_{3})=1$。\n$N_{3}(0,0) = a_{3}(0) + b_{3}(0) + c_{3} = 0 \\implies c_{3} = 0$。\n$N_{3}(2,0) = a_{3}(2) + b_{3}(0) + c_{3} = 0 \\implies 2a_{3} = 0 \\implies a_{3} = 0$。\n$N_{3}(0,1) = a_{3}(0) + b_{3}(1) + c_{3} = 1 \\implies b_{3} = 1$。\n因此，$N_{3}(x,y) = y$。\n\n$N_{i}$ 的几何解释是，由任意点 $P=(x,y)$ 和与顶点 $v_{i}$ 相对的边所形成的子三角形的面积与单元 $T$ 的总面积之比。让我们对 $N_{1}$ 进行验证。与 $v_{1}$ 相对的子三角形的顶点为 $P(x,y)$、$v_{2}(2,0)$ 和 $v_{3}(0,1)$。其面积 $A_{1}$ 可以用鞋带公式计算：\n$$ A_{1} = \\frac{1}{2} | (x(0) + 2(1) + 0(y)) - (y(2) + 0(0) + 1(x)) | = \\frac{1}{2} | 2 - (2y+x) | $$\n对于三角形 $T$ 内的任意点 $(x,y)$，我们有 $x > 0$, $y > 0$ 和 $\\frac{x}{2} + y  1$，这意味着 $x+2y  2$。绝对值内的项是正的。所以，$A_{1} = \\frac{1}{2}(2 - x - 2y) = 1 - \\frac{1}{2}x - y$。\n该比率为 $N_{1} = \\frac{A_{1}}{A} = \\frac{1 - \\frac{1}{2}x - y}{1} = 1 - \\frac{1}{2}x - y$。这与我们推导的表达式相符。对 $N_{2}$ 和 $N_{3}$ 的类似计算也证实了它们的几何面积比定义。\n\n**2) 性质的证明**\n\n问题要求证明在推导中已使用到的性质。我们将验证我们推导出的表达式满足它们。\n\n单位分解性：$N_{1} + N_{2} + N_{3} = 1$。\n$$ (1 - \\frac{1}{2}x - y) + (\\frac{1}{2}x) + (y) = 1 - \\frac{1}{2}x + \\frac{1}{2}x - y + y = 1 $$\n该性质对所有 $(x,y)$ 都成立。\n\n节点插值性质：$N_{i}(v_{j}) = \\delta_{ij}$。\n让我们对这9种组合进行验证。\n$N_{1}(v_{1}) = 1 - \\frac{1}{2}(0) - 0 = 1$。 $N_{1}(v_{2}) = 1 - \\frac{1}{2}(2) - 0 = 0$。 $N_{1}(v_{3}) = 1 - \\frac{1}{2}(0) - 1 = 0$。\n$N_{2}(v_{1}) = \\frac{1}{2}(0) = 0$。 $N_{2}(v_{2}) = \\frac{1}{2}(2) = 1$。 $N_{2}(v_{3}) = \\frac{1}{2}(0) = 0$。\n$N_{3}(v_{1}) = 0$。 $N_{3}(v_{2}) = 0$。 $N_{3}(v_{3}) = 1$。\n所有条件均得到满足，证实了 $N_{i}(v_{j}) = \\delta_{ij}$。\n\n**3) 形函数的梯度**\n\n标量函数 $f(x,y)$ 的梯度是 $\\nabla f = (\\frac{\\partial f}{\\partial x}, \\frac{\\partial f}{\\partial y})$。由于形函数是仿射函数，它们的偏导数是常数，因此它们的梯度也是常数。\n$$ \\nabla N_{1} = \\left( \\frac{\\partial}{\\partial x}(1 - \\frac{1}{2}x - y), \\frac{\\partial}{\\partial y}(1 - \\frac{1}{2}x - y) \\right) = \\left(-\\frac{1}{2}, -1\\right) $$\n$$ \\nabla N_{2} = \\left( \\frac{\\partial}{\\partial x}(\\frac{1}{2}x), \\frac{\\partial}{\\partial y}(\\frac{1}{2}x) \\right) = \\left(\\frac{1}{2}, 0\\right) $$\n$$ \\nabla N_{3} = \\left( \\frac{\\partial}{\\partial x}(y), \\frac{\\partial}{\\partial y}(y) \\right) = (0, 1) $$\n梯度确实是在整个单元 $T$ 上的常向量。\n\n几何解释：梯度 $\\nabla N_{i}$ 是一个与 $N_{i}$ 的等值线正交的向量。等值线是 $N_{i}$ 为常数的线。$N_{i}=0$ 所在的线恰好是与顶点 $v_{i}$ 相对的三角形边。因此，$\\nabla N_{i}$ 是一个垂直于 $v_{i}$ 对边的向量，从该边（此处 $N_{i}=0$）指向 $v_{i}$（此处 $N_{i}=1$），这是最陡峭的上升方向。\n- $v_{1}$ 的对边：连接 $v_{2}(2,0)$ 和 $v_{3}(0,1)$。方向向量是 $(-2,1)$。一个法向量是 $(1,2)$。$\\nabla N_{1} = (-\\frac{1}{2}, -1) = -\\frac{1}{2}(1,2)$。这确实与该边垂直。\n- $v_{2}$ 的对边：连接 $v_{1}(0,0)$ 和 $v_{3}(0,1)$。方向向量是 $(0,1)$。一个法向量是 $(1,0)$。$\\nabla N_{2} = (\\frac{1}{2}, 0) = \\frac{1}{2}(1,0)$。这与该边垂直。\n- $v_{3}$ 的对边：连接 $v_{1}(0,0)$ 和 $v_{2}(2,0)$。方向向量是 $(2,0)$。一个法向量是 $(0,1)$。$\\nabla N_{3} = (0,1)$，这与该边垂直。\n\n**4) 刚度矩阵项 $K_{12}$ 的计算**\n\n刚度矩阵项 $K_{12}$ 由公式 $K_{12} = \\int_{T} k \\, \\nabla N_{1} \\cdot \\nabla N_{2} \\, \\mathrm{d}A$ 给出，其中扩散系数 $k=3$。\n首先，计算梯度的点积：\n$$ \\nabla N_{1} \\cdot \\nabla N_{2} = \\left(-\\frac{1}{2}, -1\\right) \\cdot \\left(\\frac{1}{2}, 0\\right) = \\left(-\\frac{1}{2}\\right)\\left(\\frac{1}{2}\\right) + (-1)(0) = -\\frac{1}{4} $$\n被积函数为 $k \\, \\nabla N_{1} \\cdot \\nabla N_{2} = 3 \\times (-\\frac{1}{4}) = -\\frac{3}{4}$。\n由于被积函数是常数，积分等于该常数乘以积分域的面积，$A=1$。\n$$ K_{12} = \\int_{T} \\left(-\\frac{3}{4}\\right) \\mathrm{d}A = -\\frac{3}{4} \\int_{T} \\mathrm{d}A = -\\frac{3}{4} \\times A = -\\frac{3}{4} \\times 1 = -\\frac{3}{4} $$\n非对角刚度项的值为 $-\\frac{3}{4}$。", "answer": "$$\\boxed{-\\frac{3}{4}}$$", "id": "2375619"}, {"introduction": "在实践中，网格中的有限元很少是完美的形状。等参映射是将理想的参考单元与真实的、可能变形的物理单元联系起来的关键工具。本问题提供了一个动手计算，让你了解当一个单元变形过大时会发生什么，并引入雅可比行列式 $J$ 作为衡量单元质量的重要指标。[@problem_id:2375611]", "problem": "考虑在有限元法（FEM）中使用的等参二次三角形单元。设参考（父）三角形在自然坐标 $(\\xi,\\eta)$ 中定义为 $\\xi \\ge 0$，$\\eta \\ge 0$ 且 $\\xi + \\eta \\le 1$。设相关的面积（重心）坐标为 $L_{1} = 1 - \\xi - \\eta$, $L_{2} = \\xi$, 以及 $L_{3} = \\eta$。物理单元的顶点节点位于 $(x_{1},y_{1}) = (0,0)$、$(x_{2},y_{2}) = (1,0)$ 和 $(x_{3},y_{3}) = (0,1)$。边中节点为边 $1$–$2$ 上的 $(x_{4},y_{4}) = \\left(\\frac{1}{2},0\\right)$，边 $3$–$1$ 上的 $(x_{6},y_{6}) = \\left(0,\\frac{1}{2}\\right)$，而节点 $5$（名义上在边 $2$–$3$ 上）被有意移动到 $(x_{5},y_{5}) = \\left(0,\\frac{1}{5}\\right)$。使用由面积坐标为6节点二次三角形构建的标准二次形函数，建立等参映射 $(x(\\xi,\\eta),y(\\xi,\\eta)) = \\sum_{i=1}^{6} N_{i}(\\xi,\\eta) (x_{i},y_{i})$，计算在形心 $(\\xi,\\eta) = \\left(\\frac{1}{3},\\frac{1}{3}\\right)$ 处的雅可比矩阵 $\\partial(x,y)/\\partial(\\xi,\\eta)$，并求出其在该点的行列式 $J$。报告 $J$ 的精确值（不要四舍五入）。然后，用一句话说明在此单元配置下 $J$ 的符号的物理意义。你的最终数值答案应为 $J$ 的值。", "solution": "问题陈述经过严格审查，被认为是有效的。它在科学上基于计算物理学的原理，特别是有限元法。问题提法得当、客观、自洽，且所有提供的数据均一致。未检测到任何缺陷。我们继续进行求解。\n\n该问题要求计算一个6节点二次三角形单元在特定点上的等参映射的雅可比行列式。物理坐标 $(x,y)$ 是通过以下关系从参考坐标 $(\\xi,\\eta)$ 映射而来的：\n$$\nx(\\xi,\\eta) = \\sum_{i=1}^{6} N_{i}(\\xi,\\eta) x_{i}\n$$\n$$\ny(\\xi,\\eta) = \\sum_{i=1}^{6} N_{i}(\\xi,\\eta) y_{i}\n$$\n其中 $(x_i, y_i)$ 是物理域中的节点坐标，$N_i$ 是在参考域中定义的二次形函数。\n\n一个6节点serendipity三角形的形函数是用面积坐标 $L_1$, $L_2$ 和 $L_3$ 来表示的。对于顶点节点 ($i=1,2,3$)，形函数为：\n$$\nN_1 = L_1(2L_1 - 1)\n$$\n$$\nN_2 = L_2(2L_2 - 1)\n$$\n$$\nN_3 = L_3(2L_3 - 1)\n$$\n对于分别位于边 $1$-$2$、$2$-$3$ 和 $3$-$1$ 上的边中节点 ($i=4,5,6$)，形函数为：\n$$\nN_4 = 4L_1L_2\n$$\n$$\nN_5 = 4L_2L_3\n$$\n$$\nN_6 = 4L_3L_1\n$$\n面积坐标与自然坐标 $(\\xi, \\eta)$ 的关系如下：\n$L_1 = 1 - \\xi - \\eta$, $L_2 = \\xi$, 以及 $L_3 = \\eta$。\n将这些代入形函数的表达式中，得到：\n$N_1 = (1 - \\xi - \\eta)(1 - 2\\xi - 2\\eta)$\n$N_2 = \\xi(2\\xi - 1)$\n$N_3 = \\eta(2\\eta - 1)$\n$N_4 = 4\\xi(1 - \\xi - \\eta)$\n$N_5 = 4\\xi\\eta$\n$N_6 = 4\\eta(1 - \\xi - \\eta)$\n\n物理域中给定的节点坐标为：\n$(x_{1},y_{1}) = (0,0)$\n$(x_{2},y_{2}) = (1,0)$\n$(x_{3},y_{3}) = (0,1)$\n$(x_{4},y_{4}) = (\\frac{1}{2},0)$\n$(x_{5},y_{5}) = (0,\\frac{1}{5})$\n$(x_{6},y_{6}) = (0,\\frac{1}{2})$\n\n我们通过将形函数与相应的 $x$ 坐标的乘积求和来构建 $x(\\xi,\\eta)$ 的映射：\n$$\nx(\\xi,\\eta) = N_1(0) + N_2(1) + N_3(0) + N_4\\left(\\frac{1}{2}\\right) + N_5(0) + N_6(0)\n$$\n$$\nx(\\xi,\\eta) = N_2 + \\frac{1}{2}N_4 = \\xi(2\\xi - 1) + \\frac{1}{2} \\cdot 4\\xi(1 - \\xi - \\eta) = 2\\xi^2 - \\xi + 2\\xi(1 - \\xi - \\eta)\n$$\n$$\nx(\\xi,\\eta) = 2\\xi^2 - \\xi + 2\\xi - 2\\xi^2 - 2\\xi\\eta = \\xi - 2\\xi\\eta\n$$\n同理，对于 $y(\\xi,\\eta)$：\n$$\ny(\\xi,\\eta) = N_1(0) + N_2(0) + N_3(1) + N_4(0) + N_5\\left(\\frac{1}{5}\\right) + N_6\\left(\\frac{1}{2}\\right)\n$$\n$$\ny(\\xi,\\eta) = N_3 + \\frac{1}{5}N_5 + \\frac{1}{2}N_6 = \\eta(2\\eta - 1) + \\frac{1}{5}(4\\xi\\eta) + \\frac{1}{2}(4\\eta(1 - \\xi - \\eta))\n$$\n$$\ny(\\xi,\\eta) = 2\\eta^2 - \\eta + \\frac{4}{5}\\xi\\eta + 2\\eta(1 - \\xi - \\eta) = 2\\eta^2 - \\eta + \\frac{4}{5}\\xi\\eta + 2\\eta - 2\\xi\\eta - 2\\eta^2\n$$\n$$\ny(\\xi,\\eta) = \\eta + \\left(\\frac{4}{5} - 2\\right)\\xi\\eta = \\eta - \\frac{6}{5}\\xi\\eta\n$$\n因此，等参映射为：\n$x(\\xi,\\eta) = \\xi(1 - 2\\eta)$\n$y(\\xi,\\eta) = \\eta\\left(1 - \\frac{6}{5}\\xi\\right)$\n\n变换的雅可比矩阵 $\\mathbf{J}$ 定义为：\n$$\n\\mathbf{J} = \\frac{\\partial(x,y)}{\\partial(\\xi,\\eta)} = \\begin{pmatrix} \\frac{\\partial x}{\\partial \\xi}  \\frac{\\partial x}{\\partial \\eta} \\\\ \\frac{\\partial y}{\\partial \\xi}  \\frac{\\partial y}{\\partial \\eta} \\end{pmatrix}\n$$\n我们计算偏导数：\n$\\frac{\\partial x}{\\partial \\xi} = \\frac{\\partial}{\\partial \\xi}(\\xi - 2\\xi\\eta) = 1 - 2\\eta$\n$\\frac{\\partial x}{\\partial \\eta} = \\frac{\\partial}{\\partial \\eta}(\\xi - 2\\xi\\eta) = -2\\xi$\n$\\frac{\\partial y}{\\partial \\xi} = \\frac{\\partial}{\\partial \\xi}(\\eta - \\frac{6}{5}\\xi\\eta) = -\\frac{6}{5}\\eta$\n$\\frac{\\partial y}{\\partial \\eta} = \\frac{\\partial}{\\partial \\eta}(\\eta - \\frac{6}{5}\\xi\\eta) = 1 - \\frac{6}{5}\\xi$\n雅可比矩阵为：\n$$\n\\mathbf{J}(\\xi,\\eta) = \\begin{pmatrix} 1 - 2\\eta  -2\\xi \\\\ -\\frac{6}{5}\\eta  1 - \\frac{6}{5}\\xi \\end{pmatrix}\n$$\n我们必须在参考三角形的形心处计算该矩阵，即在 $(\\xi, \\eta) = (\\frac{1}{3}, \\frac{1}{3})$ 处。\n代入这些值：\n$\\frac{\\partial x}{\\partial \\xi} \\bigg|_{(\\frac{1}{3},\\frac{1}{3})} = 1 - 2\\left(\\frac{1}{3}\\right) = \\frac{1}{3}$\n$\\frac{\\partial x}{\\partial \\eta} \\bigg|_{(\\frac{1}{3},\\frac{1}{3})} = -2\\left(\\frac{1}{3}\\right) = -\\frac{2}{3}$\n$\\frac{\\partial y}{\\partial \\xi} \\bigg|_{(\\frac{1}{3},\\frac{1}{3})} = -\\frac{6}{5}\\left(\\frac{1}{3}\\right) = -\\frac{2}{5}$\n$\\frac{\\partial y}{\\partial \\eta} \\bigg|_{(\\frac{1}{3},\\frac{1}{3})} = 1 - \\frac{6}{5}\\left(\\frac{1}{3}\\right) = 1 - \\frac{2}{5} = \\frac{3}{5}$\n在形心处的雅可比矩阵为：\n$$\n\\mathbf{J}\\left(\\frac{1}{3},\\frac{1}{3}\\right) = \\begin{pmatrix} \\frac{1}{3}  -\\frac{2}{3} \\\\ -\\frac{2}{5}  \\frac{3}{5} \\end{pmatrix}\n$$\n该矩阵的行列式 $J$ 为：\n$$\nJ = \\det(\\mathbf{J}) = \\left(\\frac{1}{3}\\right)\\left(\\frac{3}{5}\\right) - \\left(-\\frac{2}{3}\\right)\\left(-\\frac{2}{5}\\right) = \\frac{3}{15} - \\frac{4}{15} = -\\frac{1}{15}\n$$\n在形心处的雅可比行列式的值为 $-\\frac{1}{15}$。\n\n雅可比行列式 $J$ 的符号的物理意义关系到映射的局部有效性；$J$ 的负号表示从参考坐标到物理坐标的等参映射不是一一对应的，并且在该点局部地反转了单元的几何形状。", "answer": "$$ \\boxed{-\\frac{1}{15}} $$", "id": "2375611"}, {"introduction": "基函数的选择对最终数值解的性质有着深远的影响，例如是否能保证质量等物理量的守恒。本练习通过编程方法，探讨了基函数集合的一个数学性质——是否能表示一个常数场——与最终近似解中质量守恒这一物理性质之间的直接联系。这表明，对于基于投影的方法，确保基函数包含常数函数是实现守恒的关键。[@problem_id:3100728]", "problem": "您将研究在使用有限基（形）函数集近似区间 $[0,1]$ 上的标量场时的质量守恒问题。在此设定下，如果对于所有 $x \\in [0,1]$ 都有 $\\sum_{i=1}^n \\phi_i(x) = 1$，则称基函数集 $\\{\\phi_i(x)\\}_{i=1}^n$ 构成单位分解。质量定义为场在定义域上的积分，即 $m(u) = \\int_0^1 u(x)\\,dx$。对于给定的场 $u$，其质量守恒的近似 $\\tilde{u}$ 满足 $m(\\tilde{u}) = m(u)$。\n\n仅使用平方可积函数 Lebesgue 空间 (L2) 中的内积、线性张成和正交投影的定义，完成以下任务：\n\n- 对于下文指定的每个基 $\\{\\phi_i\\}_{i=1}^n$ 和目标场 $u(x)$，计算使平方误差 $\\int_0^1 \\left(u(x) - \\sum_{i=1}^n c_i \\phi_i(x)\\right)^2 dx$ 最小的系数 $c \\in \\mathbb{R}^n$。记所得近似为 $\\tilde{u}(x) = \\sum_{i=1}^n c_i \\phi_i(x)$。\n- 计算精确质量 $m(u) = \\int_0^1 u(x)\\,dx$ 和近似质量 $m(\\tilde{u}) = \\int_0^1 \\tilde{u}(x)\\,dx$。\n- 如果 $|m(\\tilde{u}) - m(u)| \\le \\tau$，则将诊断布尔值声明为 true，否则为 false，其中绝对容差 $\\tau = 10^{-10}$。\n- 您的实现必须对所有需要的积分使用在 $[0,1]$ 上的数值稳定积分方法，并且不得依赖符号代数。\n\n测试套件。使用以下 5 个测试用例。定义域始终为 $[0,1]$，积分也在此区间上进行。函数如下：\n- 用例 1：基 $\\{\\phi_1(x)=x,\\ \\phi_2(x)=x^2\\}$；目标 $u(x) = 1 + \\sin(2\\pi x)$。\n- 用例 2：基 $\\{\\phi_1(x)=x,\\ \\phi_2(x)=x^2,\\ \\phi_3(x)=1\\}$；目标 $u(x) = 1 + \\sin(2\\pi x)$。此用例测试添加常数基函数的效果。\n- 用例 3：基 $\\{\\phi_1(x)=x,\\ \\phi_2(x)=1\\}$；目标 $u(x) = \\sin(6\\pi x)$。\n- 用例 4：基 $\\{\\phi_1(x)=x^2\\}$；目标 $u(x) = 1$。\n- 用例 5：基 $\\{\\phi_1(x)=x,\\ \\phi_2(x)=x^2\\}$；目标 $u(x) = 0$。\n\n输出格式。您的程序应生成单行输出，其中包含 5 个布尔结果，以逗号分隔并用方括号括起，例如 `[True, False, ...]`。不应打印任何额外文本。此问题不涉及物理单位。角度仅出现在三角函数中，默认为弧度。", "solution": "问题要求我们对于几种基函数的选择，确定一个函数的最小二乘近似是否是质量守恒的。问题的核心在于通过最小化 $L^2$ 范数下的平方误差来找到近似的系数，这是一个函数空间中的标准正交投影问题。\n\n记区间 $[0,1]$ 上的平方可积函数的 Hilbert 空间为 $L^2([0,1])$。对于两个函数 $f, g \\in L^2([0,1])$，其内积定义为：\n$$\n\\langle f, g \\rangle = \\int_0^1 f(x)g(x) \\, dx\n$$\n问题要求找到系数 $c = (c_1, \\dots, c_n)^T \\in \\mathbb{R}^n$，使得平方误差最小化，该平方误差是目标函数 $u(x)$ 与其近似 $\\tilde{u}(x) = \\sum_{i=1}^n c_i \\phi_i(x)$ 之差的 $L^2$ 范数的平方。\n$$\nE(c_1, \\dots, c_n) = \\left\\| u - \\sum_{i=1}^n c_i \\phi_i \\right\\|^2 = \\int_0^1 \\left(u(x) - \\sum_{i=1}^n c_i \\phi_i(x)\\right)^2 dx\n$$\n为了求此误差泛函 $E$ 的最小值，我们必须将其关于每个系数 $c_j$ 的偏导数设为零，对于 $j=1, \\dots, n$：\n$$\n\\frac{\\partial E}{\\partial c_j} = 0\n$$\n应用求导法则，我们得到：\n$$\n\\frac{\\partial}{\\partial c_j} \\int_0^1 \\left(u(x) - \\sum_{i=1}^n c_i \\phi_i(x)\\right)^2 dx = \\int_0^1 2 \\left(u(x) - \\sum_{i=1}^n c_i \\phi_i(x)\\right) (-\\phi_j(x)) dx = 0\n$$\n这可简化为：\n$$\n\\int_0^1 \\left(\\sum_{i=1}^n c_i \\phi_i(x)\\right) \\phi_j(x) dx = \\int_0^1 u(x) \\phi_j(x) dx\n$$\n根据积分的线性性质，我们可以将其写为：\n$$\n\\sum_{i=1}^n c_i \\int_0^1 \\phi_i(x) \\phi_j(x) dx = \\int_0^1 u(x) \\phi_j(x) dx\n$$\n使用内积表示法，这个包含 $n$ 个方程的方程组变为：\n$$\n\\sum_{i=1}^n c_i \\langle \\phi_i, \\phi_j \\rangle = \\langle u, \\phi_j \\rangle \\quad \\text{for } j=1, \\dots, n\n$$\n这是一个线性方程组，可以表示为矩阵形式 $Ac = b$，其中：\n- $A$ 是 Gram 矩阵，其元素为 $A_{ji} = \\langle \\phi_i, \\phi_j \\rangle$。\n- $b$ 是一个向量，其元素为 $b_j = \\langle u, \\phi_j \\rangle$。\n- $c$ 是未知系数向量。\n\n只要基函数 $\\{\\phi_i\\}_{i=1}^n$ 是线性无关的，Gram 矩阵 $A$ 就是对称正定的，因此是可逆的。系数的唯一解为 $c = A^{-1} b$。\n\n场 $f(x)$ 的质量定义为 $m(f) = \\int_0^1 f(x) dx$。在内积表示法中，这等于 $m(f) = \\langle f, 1 \\rangle$，其中 $1(x)=1$ 是常数函数。如果 $m(\\tilde{u}) = m(u)$，则近似 $\\tilde{u}$ 是质量守恒的，这可转换为 $\\langle \\tilde{u}, 1 \\rangle = \\langle u, 1 \\rangle$。\n\n条件 $\\sum_{i=1}^n c_i \\langle \\phi_i, \\phi_j \\rangle = \\langle u, \\phi_j \\rangle$ 等价于对所有 $j=1, \\dots, n$ 成立的正交条件 $\\langle u - \\tilde{u}, \\phi_j \\rangle = 0$。这意味着误差向量 $u - \\tilde{u}$与每个基函数都正交。根据线性性质，误差向量与由基函数张成的子空间 $V = \\text{span}\\{\\phi_1, \\dots, \\phi_n\\}$ 中的任何函数 $v$ 都正交。也就是说，对于所有 $v \\in V$，都有 $\\langle u - \\tilde{u}, v \\rangle = 0$。\n\n如果常数函数 $1(x)$ 属于基函数张成的空间（即 $1 \\in V$），我们可以在正交条件中令 $v=1(x)$：\n$$\n\\langle u - \\tilde{u}, 1 \\rangle = 0 \\implies \\langle u, 1 \\rangle - \\langle \\tilde{u}, 1 \\rangle = 0 \\implies \\langle u, 1 \\rangle = \\langle \\tilde{u}, 1 \\rangle\n$$\n这表明 $m(u) = m(\\tilde{u})$。因此，最小二乘近似是质量守恒的一个充分条件是常数函数 $1$ 可以表示为基函数的线性组合。\n\n我们可以将此原则应用于这些测试用例：\n- 用例 1：基 $\\{\\phi_1(x)=x, \\phi_2(x)=x^2\\}$。函数 $1(x)$ 不能写成 $c_1 x + c_2 x^2$ 的形式。因此，$1 \\notin \\text{span}\\{x, x^2\\}$。不保证质量守恒。\n- 用例 2：基 $\\{\\phi_1(x)=x, \\phi_2(x)=x^2, \\phi_3(x)=1\\}$。基明确包含常数函数 $1(x)$。因此，$1 \\in \\text{span}\\{x, x^2, 1\\}$。保证质量守恒。\n- 用例 3：基 $\\{\\phi_1(x)=x, \\phi_2(x)=1\\}$。基明确包含常数函数 $1(x)$。因此，$1 \\in \\text{span}\\{x, 1\\}$。保证质量守恒。\n- 用例 4：基 $\\{\\phi_1(x)=x^2\\}$。函数 $1(x)$ 不能写成 $c_1 x^2$ 的形式。因此，$1 \\notin \\text{span}\\{x^2\\}$。不保证质量守恒。\n- 用例 5：目标 $u(x)=0$。精确质量为 $m(u) = \\int_0^1 0\\,dx = 0$。最小二乘问题是最小化 $\\|\\sum c_i \\phi_i\\|^2$。对于线性无关的基函数，只有当所有 $c_i=0$ 时才能最小化。因此 $\\tilde{u}(x)=0$ 且 $m(\\tilde{u})=0$。无论基是什么，质量都平凡地守恒。\n\n计算过程如下：\n1. 对每个测试用例，定义基函数 $\\phi_i(x)$ 和目标函数 $u(x)$。\n2. 构建 Gram 矩阵 $A$，其中 $A_{ji} = \\int_0^1 \\phi_i(x) \\phi_j(x) dx$。\n3. 构建向量 $b$，其中 $b_j = \\int_0^1 u(x) \\phi_j(x) dx$。\n4. 求解线性方程组 $Ac=b$ 得到系数 $c$。\n5. 计算精确质量 $m(u) = \\int_0^1 u(x) dx$。\n6. 计算近似质量 $m(\\tilde{u}) = \\int_0^1 \\sum_{i=1}^n c_i \\phi_i(x) dx = \\sum_{i=1}^n c_i \\int_0^1 \\phi_i(x) dx$。\n7. 检查是否 $|m(\\tilde{u}) - m(u)| \\le \\tau$，其中 $\\tau = 10^{-10}$。\n\n所有积分都使用 `scipy.integrate.quad` 进行数值计算。线性系统使用 `numpy.linalg.solve` 求解。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve_and_print():\n    \"\"\"\n    Computes and prints mass conservation diagnostics for L2-approximations of functions.\n    \"\"\"\n    \n    # Define the 5 test cases from the problem statement.\n    test_cases = [\n        {\n            \"basis\": [lambda x: x, lambda x: x**2],\n            \"target\": lambda x: 1 + np.sin(2 * np.pi * x)\n        },\n        {\n            \"basis\": [lambda x: x, lambda x: x**2, lambda x: 1.0],\n            \"target\": lambda x: 1 + np.sin(2 * np.pi * x)\n        },\n        {\n            \"basis\": [lambda x: x, lambda x: 1.0],\n            \"target\": lambda x: np.sin(6 * np.pi * x)\n        },\n        {\n            \"basis\": [lambda x: x**2],\n            \"target\": lambda x: 1.0\n        },\n        {\n            \"basis\": [lambda x: x, lambda x: x**2],\n            \"target\": lambda x: 0.0\n        }\n    ]\n\n    results = []\n    tolerance = 1e-10\n    domain = (0, 1)\n\n    for case in test_cases:\n        basis_funcs = case[\"basis\"]\n        target_func = case[\"target\"]\n        n = len(basis_funcs)\n\n        # 1. Construct the Gram matrix A and vector b\n        gram_matrix = np.zeros((n, n))\n        b_vector = np.zeros(n)\n        \n        for j in range(n):\n            b_vector[j], _ = quad(lambda x: target_func(x) * basis_funcs[j](x), domain[0], domain[1])\n            for i in range(n):\n                gram_matrix[j, i], _ = quad(lambda x: basis_funcs[i](x) * basis_funcs[j](x), domain[0], domain[1])\n        \n        # 2. Solve for coefficients c\n        try:\n            coeffs = np.linalg.solve(gram_matrix, b_vector)\n        except np.linalg.LinAlgError:\n            # Should not happen with these linearly independent bases\n            results.append(False) \n            continue\n\n        # 3. Calculate exact and approximate mass\n        exact_mass, _ = quad(target_func, domain[0], domain[1])\n        \n        approx_mass = 0.0\n        for i in range(n):\n            integral_phi_i, _ = quad(basis_funcs[i], domain[0], domain[1])\n            approx_mass += coeffs[i] * integral_phi_i\n\n        # 4. Check for mass conservation\n        mass_conserved = abs(approx_mass - exact_mass) = tolerance\n        results.append(mass_conserved)\n\n    # 5. Format and print the final output as a single line\n    # Python's str(bool) gives 'True' and 'False', which is desired.\n    print(f\"[{','.join(str(r) for r in results)}]\")\n\nsolve_and_print()\n```", "id": "3100728"}]}