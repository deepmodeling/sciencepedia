{"hands_on_practices": [{"introduction": "掌握了理论之后，最重要的就是亲手实践。本练习将带你深入有限元方法的核心，为一个简单的四边形单元计算刚度矩阵的一个具体元素。通过分别使用解析方法和高斯数值积分法进行计算，你将能够验证理论与实践的一致性，并深刻理解坐标变换、雅可比行列式以及梯度转换在单元集成中的关键作用。[@problem_id:3098496]", "problem": "考虑矩形域上的稳态扩散模型 $-\\nabla \\cdot (A \\nabla u) = f$，并专注于使用有限元法 (FEM) 组装单元刚度矩阵。对于单个4节点双线性四边形单元，其物理坐标为顶点在 $(0,0)$、$(2,0)$、$(2,1)$ 和 $(0,1)$ 的矩形，设材料传导率张量为 $A = \\begin{pmatrix} 2  0 \\\\ 0  1 \\end{pmatrix}$。从参考正方形 $[-1,1] \\times [-1,1]$ 到单元的映射由 $x(\\xi,\\eta) = 1 + \\xi$ 和 $y(\\xi,\\eta) = \\tfrac{1}{2} + \\tfrac{1}{2}\\eta$ 给出。参考正方形上的标准双线性形函数为\n$N_1(\\xi,\\eta) = \\tfrac{1}{4}(1-\\xi)(1-\\eta)$, $N_2(\\xi,\\eta) = \\tfrac{1}{4}(1+\\xi)(1-\\eta)$, $N_3(\\xi,\\eta) = \\tfrac{1}{4}(1+\\xi)(1+\\eta)$, 和 $N_4(\\xi,\\eta) = \\tfrac{1}{4}(1-\\xi)(1+\\eta)$。\n\n从单元刚度矩阵的弱形式定义出发，其 $(i,j)$ 元为\n$$K_{e,ij} = \\int_{\\Omega_e} \\nabla N_i(x,y)^{\\top} A \\, \\nabla N_j(x,y) \\, \\mathrm{d}\\Omega,$$\n其中 $\\Omega_e$ 是物理单元域。仅使用上述核心定义，完成以下所有任务：\n- 通过将积分映射到参考域并应用梯度的链式法则，解析地推导对角元 $K_{e,11}$ 的值。\n- 使用张量積高斯求積，在参考正方形上每个方向取2个点（使用标准求积节点 $\\xi, \\eta = \\pm 1/\\sqrt{3}$ 和权重 $w_{\\xi} = w_{\\eta} = 1$），数值地组装 $K_{e,11}$，包括雅可比行列式因子，并说明其与您的解析结果相符。\n\n报告单个实数 $K_{e,11}$。答案无需四舍五入，也不包含单位。", "solution": "我们从单元刚度矩阵元的弱形式定义开始\n$$K_{e,11} = \\int_{\\Omega_e} \\nabla N_1(x,y)^{\\top} A \\, \\nabla N_1(x,y)\\, \\mathrm{d}\\Omega.$$\n我们将通过解析方法计算 $K_{e,11}$，然后在参考正方形上通过数值求积进行验证，以确认两者的一致性。\n\n解析推导：\n从参考坐标 $(\\xi,\\eta)$ 到物理坐标 $(x,y)$ 的映射为\n$$x(\\xi,\\eta) = 1 + \\xi,\\qquad y(\\xi,\\eta) = \\tfrac{1}{2} + \\tfrac{1}{2}\\eta.$$\n该映射的雅可比矩阵是\n$$J = \\begin{pmatrix} \\dfrac{\\partial x}{\\partial \\xi}  \\dfrac{\\partial x}{\\partial \\eta} \\\\ \\dfrac{\\partial y}{\\partial \\xi}  \\dfrac{\\partial y}{\\partial \\eta} \\end{pmatrix} = \\begin{pmatrix} 1  0 \\\\ 0  \\tfrac{1}{2} \\end{pmatrix},\\quad \\det(J) = \\tfrac{1}{2}.$$\n梯度变换遵循 $\\nabla_{x} N = J^{-T} \\nabla_{\\xi} N$，所以\n$$J^{-T} = \\begin{pmatrix} 1  0 \\\\ 0  2 \\end{pmatrix},\\qquad \\nabla_{x} N_1 = \\begin{pmatrix} \\dfrac{\\partial N_1}{\\partial x} \\\\ \\dfrac{\\partial N_1}{\\partial y} \\end{pmatrix} = \\begin{pmatrix} 1  0 \\\\ 0  2 \\end{pmatrix} \\begin{pmatrix} \\dfrac{\\partial N_1}{\\partial \\xi} \\\\ \\dfrac{\\partial N_1}{\\partial \\eta} \\end{pmatrix} = \\begin{pmatrix} \\dfrac{\\partial N_1}{\\partial \\xi} \\\\ 2 \\dfrac{\\partial N_1}{\\partial \\eta} \\end{pmatrix}.$$\n对于双线性形函数\n$$N_1(\\xi,\\eta) = \\tfrac{1}{4}(1-\\xi)(1-\\eta),$$\n其导数为\n$$\\dfrac{\\partial N_1}{\\partial \\xi} = -\\tfrac{1}{4}(1-\\eta),\\qquad \\dfrac{\\partial N_1}{\\partial \\eta} = -\\tfrac{1}{4}(1-\\xi).$$\n因此，在物理坐标系中，\n$$\\dfrac{\\partial N_1}{\\partial x} = -\\tfrac{1}{4}(1-\\eta),\\qquad \\dfrac{\\partial N_1}{\\partial y} = 2\\left(-\\tfrac{1}{4}(1-\\xi)\\right) = -\\tfrac{1}{2}(1-\\xi).$$\n对于 $A = \\begin{pmatrix} 2  0 \\\\ 0  1 \\end{pmatrix}$，被积函数变为\n$$\\nabla N_1^{\\top} A \\nabla N_1 = 2\\left(\\dfrac{\\partial N_1}{\\partial x}\\right)^{2} + 1\\left(\\dfrac{\\partial N_1}{\\partial y}\\right)^{2} = 2\\left(\\tfrac{(1-\\eta)^{2}}{16}\\right) + \\left(\\tfrac{(1-\\xi)^{2}}{4}\\right) = \\tfrac{(1-\\eta)^{2}}{8} + \\tfrac{(1-\\xi)^{2}}{4}.$$\n将积分变换到参考域上可得\n$$K_{e,11} = \\int_{\\Omega_e} \\nabla N_1^{\\top} A \\nabla N_1 \\, \\mathrm{d}\\Omega = \\int_{-1}^{1}\\int_{-1}^{1} \\left(\\tfrac{(1-\\eta)^{2}}{8} + \\tfrac{(1-\\xi)^{2}}{4}\\right) \\det(J)\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta.$$\n由于 $\\det(J) = \\tfrac{1}{2}$，\n$$K_{e,11} = \\tfrac{1}{2} \\left[ \\int_{-1}^{1}\\int_{-1}^{1} \\tfrac{(1-\\eta)^{2}}{8}\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta + \\int_{-1}^{1}\\int_{-1}^{1} \\tfrac{(1-\\xi)^{2}}{4}\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta \\right].$$\n分离积分：\n$$\\int_{-1}^{1}\\int_{-1}^{1} \\tfrac{(1-\\eta)^{2}}{8}\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta = \\tfrac{1}{8}\\left( \\int_{-1}^{1} (1-\\eta)^{2}\\, \\mathrm{d}\\eta \\right)\\left( \\int_{-1}^{1} \\mathrm{d}\\xi \\right),$$\n$$\\int_{-1}^{1}\\int_{-1}^{1} \\tfrac{(1-\\xi)^{2}}{4}\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta = \\tfrac{1}{4}\\left( \\int_{-1}^{1} (1-\\xi)^{2}\\, \\mathrm{d}\\xi \\right)\\left( \\int_{-1}^{1} \\mathrm{d}\\eta \\right).$$\n计算一维积分：\n$$\\int_{-1}^{1} (1-\\eta)^{2}\\, \\mathrm{d}\\eta = \\int_{-1}^{1} (1 - 2\\eta + \\eta^{2})\\, \\mathrm{d}\\eta = \\left[\\eta - \\eta^{2} + \\tfrac{\\eta^{3}}{3}\\right]_{-1}^{1} = \\tfrac{8}{3},$$\n$$\\int_{-1}^{1} \\mathrm{d}\\xi = 2,\\qquad \\int_{-1}^{1} (1-\\xi)^{2}\\, \\mathrm{d}\\xi = \\tfrac{8}{3},\\qquad \\int_{-1}^{1} \\mathrm{d}\\eta = 2.$$\n因此，\n$$\\int_{-1}^{1}\\int_{-1}^{1} \\tfrac{(1-\\eta)^{2}}{8}\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta = \\tfrac{1}{8}\\cdot \\tfrac{8}{3}\\cdot 2 = \\tfrac{2}{3},$$\n$$\\int_{-1}^{1}\\int_{-1}^{1} \\tfrac{(1-\\xi)^{2}}{4}\\, \\mathrm{d}\\xi\\, \\mathrm{d}\\eta = \\tfrac{1}{4}\\cdot \\tfrac{8}{3}\\cdot 2 = \\tfrac{4}{3}.$$\n于是\n$$K_{e,11} = \\tfrac{1}{2}\\left( \\tfrac{2}{3} + \\tfrac{4}{3} \\right) = \\tfrac{1}{2}\\cdot \\tfrac{6}{3} = \\tfrac{1}{2}\\cdot 2 = 1.$$\n\n数值求积验证：\n在 $[-1,1]$ 上对每个方向使用2点高斯求积，求积节点为 $\\xi,\\eta = \\pm \\tfrac{1}{\\sqrt{3}}$，权重为 $w_{\\xi} = w_{\\eta} = 1$，张量积法则给出\n$$K_{e,11}^{\\text{(quad)}} = \\det(J)\\sum_{k=1}^{2}\\sum_{\\ell=1}^{2} w_{\\xi_k} w_{\\eta_{\\ell}} \\left[ \\tfrac{(1-\\eta_{\\ell})^{2}}{8} + \\tfrac{(1-\\xi_{k})^{2}}{4} \\right].$$\n因为 $w_{\\xi_k} = w_{\\eta_{\\ell}} = 1$，我们可以分离求和：\n$$\\sum_{\\ell=1}^{2} (1-\\eta_{\\ell})^{2} = \\left(1 - \\tfrac{1}{\\sqrt{3}}\\right)^{2} + \\left(1 + \\tfrac{1}{\\sqrt{3}}\\right)^{2} = \\left(1 - \\tfrac{2}{\\sqrt{3}} + \\tfrac{1}{3}\\right) + \\left(1 + \\tfrac{2}{\\sqrt{3}} + \\tfrac{1}{3}\\right) = 2 + \\tfrac{2}{3} = \\tfrac{8}{3},$$\n$$\\sum_{k=1}^{2} (1-\\xi_{k})^{2} = \\tfrac{8}{3},\\qquad \\sum_{k=1}^{2} 1 = 2,\\qquad \\sum_{\\ell=1}^{2} 1 = 2.$$\n因此，\n$$\\sum_{k,\\ell}\\left[ \\tfrac{(1-\\eta_{\\ell})^{2}}{8} + \\tfrac{(1-\\xi_{k})^{2}}{4} \\right] = \\tfrac{1}{8}\\left(\\tfrac{8}{3}\\right)\\cdot 2 + \\tfrac{1}{4}\\left(\\tfrac{8}{3}\\right)\\cdot 2 = \\tfrac{2}{3} + \\tfrac{4}{3} = 2.$$\n乘以 $\\det(J) = \\tfrac{1}{2}$ 得到\n$$K_{e,11}^{\\text{(quad)}} = \\tfrac{1}{2}\\cdot 2 = 1.$$\n因此，使用 $2\\times 2$ 高斯求积的数值组装结果与解析值完全吻合。\n\n所以，所求的元为\n$$K_{e,11} = 1.$$", "answer": "$$\\boxed{1}$$", "id": "3098496"}, {"introduction": "在实际的工程计算中，一个常见的陷阱是物理单位的不一致，这会导致计算结果谬以千里。本练习将让你扮演一名计算工程师，对一个涉及多种单位制（如厘米、毫米、达因和千帕）的扩散问题进行“单位审计”。你的任务是制定一套策略，确保组装后的刚度矩阵和载荷向量在物理上是自洽的，从而保证最终计算结果的正确性。[@problem_id:3098522]", "problem": "考虑一个薄膜，其高度场由平面域 $\\Omega \\subset \\mathbb{R}^2$ 上的标量函数 $u(\\mathbf{x})$ 建模。该薄膜承受均匀的表面张力 $\\sigma$ 和均匀的横向压力载荷 $q$。能量泛函由下式给出\n$$\nE(u) = \\int_{\\Omega} \\frac{\\sigma}{2}\\,\\lvert \\nabla u \\rvert^2\\, dA \\;-\\; \\int_{\\Omega} q\\,u\\, dA,\n$$\n根据驻定作用量原理（等效于最小化 $E$）得到的弱形式为：求 $u$，使得对于所有容许的检验函数 $v$ 都满足，\n$$\n\\int_{\\Omega} \\sigma\\,\\nabla u \\cdot \\nabla v\\, dA \\;=\\; \\int_{\\Omega} q\\, v\\, dA.\n$$\n在使用有限元法 (FEM) 的协调伽辽金离散化中，离散系统由具有以下分量的单元刚度矩阵组装而成\n$$\nK_{ij}^{(e)} \\;=\\; \\int_{\\Omega_e} \\sigma\\, \\nabla \\phi_i \\cdot \\nabla \\phi_j\\, dA,\n$$\n以及单元载荷向量\n$$\nf_i^{(e)} \\;=\\; \\int_{\\Omega_e} q\\, \\phi_i\\, dA,\n$$\n其中 $\\{\\phi_i\\}$ 是单元 $\\Omega_e$ 上的无量纲形函数，$\\nabla \\phi_i$ 表示相对于物理坐标的空间梯度。组装后的全局系统为 $K\\,u = f$，其中 $K$ 是对称半正定的。\n\n您有一个网格，其中节点坐标以厘米 ($\\,\\mathrm{cm}$) 提供，即长度单位为 $\\,\\mathrm{cm}$；节点未知数 $u$ 以毫米 ($\\,\\mathrm{mm}$) 存储和报告，即 $\\,\\mathrm{mm}$；表面张力 $\\sigma$ 以厘米-克-秒单位制中的 $\\,\\mathrm{dyn/cm}$ 提供；压力载荷 $q$ 以千帕 ($\\,\\mathrm{kPa}$) 提供。回顾单位换算：$1\\,\\mathrm{dyn} = 10^{-5}\\,\\mathrm{N}$，$1\\,\\mathrm{cm} = 10^{-2}\\,\\mathrm{m}$，$1\\,\\mathrm{mm} = 10^{-3}\\,\\mathrm{m}$，以及 $1\\,\\mathrm{kPa} = 10^3\\,\\mathrm{N/m^2}$。\n\n您的任务是审查组装过程，以确保刚度矩阵项 $K_{ij}$ 的单位为能量每平方米，即 $\\,\\mathrm{J/m^2}$，载荷向量项 $f_i$ 的单位为能量每米，即 $\\,\\mathrm{J/m}$，并且当 $u$ 以米表示时，与 $K\\,u = f$ 一致。以下哪种单位处理策略能确保一致的组装，使得 $K$ 的单位为 $\\,\\mathrm{J/m^2}$，$f$ 的单位为 $\\,\\mathrm{J/m}$？\n\nA. 在计算梯度和面积之前，将所有节点坐标从 $\\,\\mathrm{cm}$ 转换为 $\\,\\mathrm{m}$，将 $\\sigma$ 从 $\\,\\mathrm{dyn/cm}$ 转换为 $\\,\\mathrm{N/m}$，并将 $q$ 从 $\\,\\mathrm{kPa}$ 转换为 $\\,\\mathrm{N/m^2}$。保留以 $\\,\\mathrm{mm}$ 存储的 $u$ 值，但在构建 $E(u)$ 时将其一致地解释为 $\\,\\mathrm{m}$；梯度 $\\nabla \\phi_i$ 是相对于 $\\,\\mathrm{m}$ 计算的。\n\nB. 保持坐标单位为 $\\,\\mathrm{cm}$，以便 $\\nabla \\phi_i$ 是相对于 $\\,\\mathrm{cm}$ 的，而 $dA$ 的单位是 $\\,\\mathrm{cm^2}$；将 $\\sigma$ 转换为 $\\,\\mathrm{N/m}$，并将 $q$ 转换为 $\\,\\mathrm{N/cm^2}$ 以匹配几何单位。保留以 $\\,\\mathrm{mm}$ 存储的 $u$ 值，但在构建 $E(u)$ 时将其一致地解释为 $\\,\\mathrm{m}$。\n\nC. 仅将 $\\sigma$ 从 $\\,\\mathrm{dyn/cm}$ 转换为 $\\,\\mathrm{N/m}$；保持坐标单位为 $\\,\\mathrm{cm}$，$q$ 的单位为 $\\,\\mathrm{kPa}$，对于刚度，依赖于 $\\nabla \\phi_i$ (单位 $\\,\\mathrm{cm^{-1}}$) 和 $dA$ (单位 $\\,\\mathrm{cm^2}$) 之间的抵消，并保持载荷向量不变。\n\nD. 将坐标转换为 $\\,\\mathrm{m}$，将 $q$ 转换为 $\\,\\mathrm{N/m^2}$，但保持 $\\sigma$ 的单位为 $\\,\\mathrm{dyn/cm}$；梯度相对于 $\\,\\mathrm{m}$ 计算。\n\n选择所有适用项。您的选项中无需提供推导；推导必须出现在您的解答中。", "solution": "用户要求对有限元法 (FEM) 组装中的单位处理策略进行审查。\n\n### 问题验证\n\n**步骤 1：提取已知条件**\n\n-   **模型：** 薄膜，其高度场为域 $\\Omega \\subset \\mathbb{R}^2$ 上的 $u(\\mathbf{x})$。\n-   **物理参数：** 均匀表面张力 $\\sigma$，均匀横向压力载荷 $q$。\n-   **能量泛函：** $E(u) = \\int_{\\Omega} \\frac{\\sigma}{2}\\,\\lvert \\nabla u \\rvert^2\\, dA \\;-\\; \\int_{\\Omega} q\\,u\\, dA$。\n-   **弱形式：** $\\int_{\\Omega} \\sigma\\,\\nabla u \\cdot \\nabla v\\, dA \\;=\\; \\int_{\\Omega} q\\, v\\, dA$。\n-   **有限元离散化：**\n    -   单元刚度矩阵：$K_{ij}^{(e)} \\;=\\; \\int_{\\Omega_e} \\sigma\\, \\nabla \\phi_i \\cdot \\nabla \\phi_j\\, dA$。\n    -   单元载荷向量：$f_i^{(e)} \\;=\\; \\int_{\\Omega_e} q\\, \\phi_i\\, dA$。\n-   **属性：** 形函数 $\\{\\phi_i\\}$ 是无量纲的。$\\nabla \\phi_i$ 是相对于物理坐标的梯度。全局系统是 $K\\,u = f$。\n-   **输入单位：**\n    -   节点坐标：厘米 ($\\mathrm{cm}$)。\n    -   节点未知数 $u$：以毫米 ($\\mathrm{mm}$) 存储/报告。\n    -   表面张力 $\\sigma$：达因每厘米 ($\\mathrm{dyn/cm}$)。\n    -   压力载荷 $q$：千帕 ($\\mathrm{kPa}$)。\n-   **单位换算：** $1\\,\\mathrm{dyn} = 10^{-5}\\,\\mathrm{N}$，$1\\,\\mathrm{cm} = 10^{-2}\\,\\mathrm{m}$，$1\\,\\mathrm{mm} = 10^{-3}\\,\\mathrm{m}$，$1\\,\\mathrm{kPa} = 10^3\\,\\mathrm{N/m^2}$。\n-   **任务目标：** 组装系统，使得全局刚度矩阵 $K$ 的单位为焦耳每平方米 ($\\mathrm{J/m^2}$)，全局载荷向量 $f$ 的单位为焦耳每米 ($\\mathrm{J/m}$)，且对于表示位移（单位为米，$\\mathrm{m}$）的解向量 $u$，系统 $K\\,u = f$ 是一致的。\n\n**步骤 2：使用提取的已知条件进行验证**\n\n-   **科学基础：** 该问题基于弹性膜的最小势能原理，导出一个标准的弱形式（带源项的拉普拉斯方程）和相应的协调伽辽金有限元公式。这是计算力学中的一个典型问题。所有原理和方程都是正确的。\n-   **适定性：** 任务是分析单位一致性，这是任何数值模拟中一个明确定义且至关重要的步骤。目标陈述清晰，并存在一组正确的换算关系。\n-   **客观性：** 问题陈述是纯技术性的，使用了标准的、明确的科学术语，不含主观因素。\n-   **不完整性或矛盾：** 提供了所有必要信息——控制方程、离散项的定义、输入单位和目标单位。所提供的单位换算是正确的。没有矛盾之处。\n-   **不切实际或不可行：** 单位的组合（$\\mathrm{cm}$、$\\mathrm{mm}$、$\\mathrm{dyn/cm}$、$\\mathrm{kPa}$）在工程实践中是一个现实的场景，其中数据可能来自遗留系统（如达因等CGS单位）或不同的惯例（几何单位用 $\\mathrm{cm}$，压力单位用 $\\mathrm{kPa}$）。\n-   **伪深刻、琐碎或同义反复：** 该问题解决了一个在科学计算中非同小可且常见的错误来源：在混合不同单位系统的数值代码中确保量纲齐次性。这是一个真实且有实质内容的问题。\n\n**步骤 3：结论与行动**\n\n问题陈述是有效的。它在科学上是合理的、适定的、完整的且相关的。我将继续进行解答。\n\n### 推导\n\n目标是组装线性系统 $K\\,u=f$，使其单位一致。设 $[X]$ 表示数量 $X$ 的单位。\n\n**目标单位：**\n1.  刚度矩阵 $K$：$[K_{ij}] = \\mathrm{J/m^2}$。\n    由于 $1\\,\\mathrm{J} = 1\\,\\mathrm{N \\cdot m}$，我们有 $[\\mathrm{J/m^2}] = [\\mathrm{N \\cdot m / m^2}] = [\\mathrm{N/m}]$。这是一个力每长度的单位，也就是表面张力的单位。\n2.  载荷向量 $f$：$[f_i] = \\mathrm{J/m}$。\n    这等效于 $[\\mathrm{N \\cdot m / m}] = [\\mathrm{N}]$。这是一个力的单位。\n3.  位移向量 $u$：问题指出系统应与以米为单位的 $u$ 一致，因此 $[u] = \\mathrm{m}$。\n\n**一致性检查：**\n系统 $K\\,u=f$ 要求 $[K][u] = [f]$。使用目标单位：\n$(\\mathrm{J/m^2}) \\cdot (\\mathrm{m}) = \\mathrm{J/m}$。或者等效地，$(\\mathrm{N/m}) \\cdot (\\mathrm{m}) = \\mathrm{N}$。\n目标单位是自洽的。\n\n**刚度矩阵组装分析：**\n刚度矩阵项由 $K_{ij}^{(e)} = \\int_{\\Omega_e} \\sigma\\, \\nabla \\phi_i \\cdot \\nabla \\phi_j\\, dA$ 计算得出。\n形函数 $\\phi_i$ 是无量纲的。梯度算子 $\\nabla$ 的单位是 $[长度]^{-1}$。面积元 $dA$ 的单位是 $[长度]^2$。\n因此，$K_{ij}$ 的单位是：\n$[K_{ij}] = [\\sigma] \\cdot [\\nabla] \\cdot [\\nabla] \\cdot [dA] = [\\sigma] \\cdot ([长度]^{-1}) \\cdot ([长度]^{-1}) \\cdot ([长度]^2) = [\\sigma]$。\n为了达到 $\\mathrm{N/m}$ 的目标单位，在积分过程中，表面张力 $\\sigma$ 必须以 $\\mathrm{N/m}$ 为单位表示。用于梯度和面积的长度单位必须一致（例如，都基于米，或都基于厘米），以便它们相互抵消。\n\n给定的 $\\sigma$ 单位是 $\\mathrm{dyn/cm}$。换算关系是：\n$1\\,\\mathrm{dyn/cm} = \\frac{10^{-5}\\,\\mathrm{N}}{10^{-2}\\,\\mathrm{m}} = 10^{-3}\\,\\mathrm{N/m}$。\n因此，如果表面张力的值是 $\\sigma_{val}$（单位 $\\mathrm{dyn/cm}$），计算中使用的值必须是 $\\sigma_{val} \\times 10^{-3}$，才能得到单位 $\\mathrm{N/m}$。\n\n**载荷向量组装分析：**\n载荷向量项由 $f_i^{(e)} = \\int_{\\Omega_e} q\\, \\phi_i\\, dA$ 计算得出。\n形函数 $\\phi_i$ 是无量纲的。$f_i$ 的单位是：\n$[f_i] = [q] \\cdot [dA]$。\n目标单位是 $\\mathrm{N}$。这意味着压力单位和面积单位的乘积必须得到力的单位牛顿。设几何的长度单位为 $L$。那么 $[dA] = L^2$。我们需要 $[q] \\cdot L^2 = \\mathrm{N}$。\n这意味着我们需要 $[q] = \\mathrm{N}/L^2$。\n\n给定的 $q$ 单位是 $\\mathrm{kPa}$，其中 $1\\,\\mathrm{kPa} = 10^3\\,\\mathrm{N/m^2}$。\n-   如果几何计算（对于 $dA$）以米为单位执行，我们必须将 $q$ 从 $\\mathrm{kPa}$ 转换为 $\\mathrm{N/m^2}$。转换因子是 $10^3$。\n-   如果几何计算（对于 $dA$）以厘米为单位执行，为保持一致性，我们必须将 $q$ 转换为 $\\mathrm{N/cm^2}$。换算关系是：\n    $1\\,\\mathrm{kPa} = 10^3 \\frac{\\mathrm{N}}{\\mathrm{m}^2} = 10^3 \\frac{\\mathrm{N}}{(100\\,\\mathrm{cm})^2} = 10^3 \\frac{\\mathrm{N}}{10^4\\,\\mathrm{cm}^2} = 10^{-1}\\,\\mathrm{N/cm^2}$。\n    因此，如果压力的值是 $q_{val}$（单位 $\\mathrm{kPa}$），计算中使用的值必须是 $q_{val} \\times 10^{-1}$，才能得到单位 $\\mathrm{N/cm^2}$。\n\n### 逐项分析\n\n**A. 在计算梯度和面积之前，将所有节点坐标从 $\\,\\mathrm{cm}$ 转换为 $\\,\\mathrm{m}$，将 $\\sigma$ 从 $\\,\\mathrm{dyn/cm}$ 转换为 $\\,\\mathrm{N/m}$，并将 $q$ 从 $\\,\\mathrm{kPa}$ 转换为 $\\,\\mathrm{N/m^2}$。保留以 $\\,\\mathrm{mm}$ 存储的 $u$ 值，但在构建 $E(u)$ 时将其一致地解释为 $\\,\\mathrm{m}$；梯度 $\\nabla \\phi_i$ 是相对于 $\\,\\mathrm{m}$ 计算的。**\n-   坐标被转换为 $\\mathrm{m}$。这意味着 $\\nabla$ 的单位是 $\\mathrm{m}^{-1}$，$dA$ 的单位是 $\\mathrm{m}^2$。\n-   $\\sigma$ 被转换为 $\\mathrm{N/m}$。刚度计算为 $\\int (\\sigma \\text{ 单位 N/m}) (\\nabla \\text{ 单位 m}^{-1})^2 (dA \\text{ 单位 m}^2)$，其结果单位为 $\\mathrm{N/m}$。这与 $K$ 的目标单位相符。\n-   $q$ 被转换为 $\\mathrm{N/m^2}$。载荷向量计算为 $\\int (q \\text{ 单位 N/m}^2) (dA \\text{ 单位 m}^2)$，其结果单位为 $\\mathrm{N}$。这与 $f$ 的目标单位相符。\n-   得到的系统 $K\\,u=f$ 中，$K$ 的单位是 $\\mathrm{N/m}$，$f$ 的单位是 $\\mathrm{N}$，因此解 $u$ 的单位将是 $\\mathrm{m}$。整个策略是一致的，并且基于标准的国际单位制 (SI)。关于 $u$ 以 $\\mathrm{mm}$ 存储的细节是数据表示问题，而不是物理问题；解向量所代表的物理量是以米为单位的。\n\n结论：**正确**。\n\n**B. 保持坐标单位为 $\\,\\mathrm{cm}$，以便 $\\nabla \\phi_i$ 是相对于 $\\,\\mathrm{cm}$ 的，而 $dA$ 的单位是 $\\,\\mathrm{cm^2}$；将 $\\sigma$ 转换为 $\\,\\mathrm{N/m}$，并将 $q$ 转换为 $\\,\\mathrm{N/cm^2}$ 以匹配几何单位。保留以 $\\,\\mathrm{mm}$ 存储的 $u$ 值，但在构建 $E(u)$ 时将其一致地解释为 $\\,\\mathrm{m}$。**\n-   坐标保持为 $\\mathrm{cm}$。这意味着 $\\nabla$ 的单位是 $\\mathrm{cm}^{-1}$，$dA$ 的单位是 $\\mathrm{cm}^2$。\n-   $\\sigma$ 被转换为 $\\mathrm{N/m}$。刚度计算为 $\\int (\\sigma \\text{ 单位 N/m}) (\\nabla \\text{ 单位 cm}^{-1})^2 (dA \\text{ 单位 cm}^2)$。$(\\mathrm{cm}^{-1})^2$ 和 $\\mathrm{cm}^2$ 项相互抵消，剩下 $\\sigma$ 的单位，即 $\\mathrm{N/m}$。这与 $K$ 的目标单位相符。\n-   $q$ 被转换为 $\\mathrm{N/cm^2}$。载荷向量计算为 $\\int (q \\text{ 单位 N/cm}^2) (dA \\text{ 单位 cm}^2)$，其结果单位为 $\\mathrm{N}$。这与 $f$ 的目标单位相符。\n-   得到的系统 $K\\,u=f$ 中，$K$ 的单位是 $\\mathrm{N/m}$，$f$ 的单位是 $\\mathrm{N}$，因此解 $u$ 的单位将是 $\\mathrm{m}$。这个策略也是一致的，尽管在计算过程中涉及到混合单位。\n\n结论：**正确**。\n\n**C. 仅将 $\\sigma$ 从 $\\,\\mathrm{dyn/cm}$ 转换为 $\\,\\mathrm{N/m}$；保持坐标单位为 $\\,\\mathrm{cm}$，$q$ 的单位为 $\\,\\mathrm{kPa}$，对于刚度，依赖于 $\\nabla \\phi_i$ (单位 $\\,\\mathrm{cm^{-1}}$) 和 $dA$ (单位 $\\,\\mathrm{cm^2}$) 之间的抵消，并保持载荷向量不变。**\n-   对于刚度 $K$：$\\sigma$ 转换为 $\\mathrm{N/m}$，几何单位为 $\\mathrm{cm}$。如选项 B 中分析，这正确地得到 $K$ 的单位为 $\\mathrm{N/m}$。\n-   对于载荷向量 $f$：$q$ 保持单位为 $\\mathrm{kPa}$，几何（$dA$）单位为 $\\mathrm{cm}^2$。积分的单位是 $[\\mathrm{kPa}] \\cdot [\\mathrm{cm}^2]$。我们将其转换为基本力的单位：$1\\,\\mathrm{kPa} \\cdot \\mathrm{cm}^2 = (10^3\\,\\mathrm{N/m^2}) \\cdot (10^{-2}\\,\\mathrm{m})^2 = (10^3\\,\\mathrm{N/m^2}) \\cdot (10^{-4}\\,\\mathrm{m}^2) = 10^{-1}\\,\\mathrm{N}$。\n-   得到的载荷向量 $f$ 的单位是 $0.1\\,\\mathrm{N}$，而不是 $\\mathrm{N}$。这意味着向量中的数值会比在一个单位为 $\\mathrm{N}$ 的一致系统中应有的值小 $10$ 倍。系统 $K\\,u=f$ 将是不一致的。\n\n结论：**不正确**。\n\n**D. 将坐标转换为 $\\,\\mathrm{m}$，将 $q$ 转换为 $\\,\\mathrm{N/m^2}$，但保持 $\\sigma$ 的单位为 $\\,\\mathrm{dyn/cm}$；梯度相对于 $\\,\\mathrm{m}$ 计算。**\n-   对于载荷向量 $f$：坐标单位为 $\\mathrm{m}$（$dA$ 单位为 $\\mathrm{m}^2$），$q$ 单位为 $\\mathrm{N/m}^2$。如选项 A 中分析，这正确地得到 $f$ 的单位为 $\\mathrm{N}$。\n-   对于刚度矩阵 $K$：坐标单位为 $\\mathrm{m}$，因此梯度和面积项的长度单位相互抵消。$K$ 的单位将是 $\\sigma$ 的单位，即保持为 $\\mathrm{dyn/cm}$。\n-   $K$ 的单位是 $\\mathrm{dyn/cm}$，而目标是 $\\mathrm{N/m}$。这两个单位不同；$1\\,\\mathrm{dyn/cm} = 10^{-3}\\,\\mathrm{N/m}$。矩阵 $K$ 中的数值将偏离 $10^3$ 倍（它们将过大 $1000$ 倍，因为以 $\\mathrm{dyn/cm}$ 为单位的 $\\sigma$ 值是以 $\\mathrm{N/m}$ 为单位的值的 $1000$ 倍）。系统 $K\\,u=f$ 中，$K$ 的单位是 $\\mathrm{dyn/cm}$，$f$ 的单位是 $\\mathrm{N}$，这在量纲上是不一致的。\n\n结论：**不正确**。", "answer": "$$\\boxed{AB}$$", "id": "3098522"}, {"introduction": "一个正确的程序不仅要能处理理想情况，更要能诊断和处理错误。本编码练习模拟了一个常见的网格拓扑错误：在共享物理顶点处重复定义了自由度，导致模型中出现未连接的“浮动”组件。通过对组装后的刚度矩阵进行特征值分析，你将学习如何检测由此产生的奇异性（矩阵不可逆），从而将一个具体的编程错误与其在线性代数中的根本后果联系起来。[@problem_id:3098508]", "problem": "考虑区间 $[0,1]$ 上的一维稳态扩散问题：求解 $u$ 使得\n$$- \\frac{d}{dx}\\left(a \\frac{du}{dx}\\right) = f(x),$$\n其中 $a$ 是一个正标量扩散系数，$f(x)$ 是给定的源项。在由点坐标和二节点单元定义的网格上，使用带有连续分段线性基函数的伽辽金有限元法。您将根据弱形式推导出的单元贡献来组装全局刚度矩阵 $K$ 和载荷向量 $F$。通过在共享的物理顶点处复制自由度 (DOF) 索引来人为地在一些测试网格中引入一个错误，以创建不连接的组件。施加狄利克雷边界条件后，通过检查限制在未知自由度上的组装矩阵 $K$ 的奇异性（秩亏）来检测此错误。\n\n从弱形式和标准线性“帽”基函数的定义出发，推导单元刚度矩阵和一致的单元载荷规则。实现一个组装程序，该程序：\n- 从所有单元构建全局刚度矩阵 $K$ 和载荷向量 $F$。\n- 通过消除 $K$ 中相应的行和列以及 $F$ 中的相应条目来施加齐次狄利克雷边界条件（即，在指定的自由度上 $u=0$）。\n- 通过计算缩减后的对称矩阵的近零特征值数量（零度）来检测奇异性。如果一个矩阵的特征值大小小于一个与最大特征值成比例的容差，则认为该矩阵有一个零特征值。\n\n使用 $a=1$ 和 $f(x)=x$。几何结构是无量纲的，不需要物理单位。网格由以下方式表示：\n- 自由度位置 $x_i$ 的坐标数组。\n- 一个由对 $(i,j)$ 组成的单元连接列表，每对都指向坐标数组中的自由度索引。\n\n您的程序必须处理以下网格和边界条件集的测试套件，并为每种情况输出零度（近零特征值的整数计数）：\n\n- 测试用例 1 (正常路径，正确组装)：\n  - 坐标：$[0,\\,0.5,\\,1]$。\n  - 单元：$(0,1)$ 和 $(1,2)$。\n  - 狄利克雷集：$\\{0\\}$。\n  - 预期行为：缩减后的 $K$ 应该是正定的，零度为 $0$。\n\n- 测试用例 2 (有错误的网格，共享顶点重复，导致一个未锚固的组件)：\n  - 坐标：$[0,\\,0.5,\\,0.5,\\,1]$ (位于 $x=0.5$ 的中间顶点由两个不同的自由度表示)。\n  - 单元：$(0,1)$ 和 $(2,3)$。\n  - 狄利克雷集：$\\{0\\}$。\n  - 预期行为：由于存在一个未锚固的断开组件，缩减后的 $K$ 应该是奇异的，零度为 $1$。\n\n- 测试用例 3 (有错误的网格，但完全锚固)：\n  - 坐标：$[0,\\,0.5,\\,0.5,\\,1]$。\n  - 单元：$(0,1)$ 和 $(2,3)$。\n  - 狄利克雷集：$\\{0,\\,3\\}$。\n  - 预期行为：缩减后的 $K$ 应该是正定的，零度为 $0$，因为所有组件都通过狄利克雷条件锚固。\n\n- 测试用例 4 (有错误的网格，无狄利克雷条件，多个浮动组件)：\n  - 坐标：$[0,\\,0.5,\\,0.5,\\,1]$。\n  - 单元：$(0,1)$ 和 $(2,3)$。\n  - 狄利克雷集：$\\{\\}$。\n  - 预期行为：缩减后的 $K$ 应该是奇异的，零度为 $2$（每个断开的组件有一个刚体模态）。\n\n最终输出格式要求：\n- 您的程序应生成单行输出，其中包含按上述顺序列出的测试用例的结果，结果为逗号分隔的列表，并用方括号括起来。例如 $[n_1,n_2,n_3,n_4]$，其中每个 $n_k$ 是测试用例 $k$ 的整数零度。", "solution": "任务是使用有限元法 (FEM) 对一维稳态扩散问题进行数值分析。我们必须推导单元矩阵，实现组装过程，然后使用组装后刚度矩阵的特征值分析来检测一种特定类型的网格错误：由重复的自由度 (DOF) 导致的断开组件。\n\n控制微分方程是区间 $[0,1]$ 上的一维扩散方程：\n$$\n- \\frac{d}{dx}\\left(a \\frac{du}{dx}\\right) = f(x)\n$$\n其中 $u(x)$ 是未知函数，$a$ 是扩散系数（给定为 $a=1$），$f(x)$ 是源项（给定为 $f(x)=x$）。\n\n**1. 弱形式**\n\n为了推导弱形式，我们将控制方程乘以一个合适的测试函数 $v(x)$，并在域 $\\Omega = [0,1]$ 上积分。\n$$\n- \\int_{0}^{1} v \\frac{d}{dx}\\left(a \\frac{du}{dx}\\right) dx = \\int_{0}^{1} v f(x) dx\n$$\n对左侧项应用分部积分：\n$$\n\\int_{0}^{1} a \\frac{dv}{dx} \\frac{du}{dx} dx - \\left[ v a \\frac{du}{dx} \\right]_{0}^{1} = \\int_{0}^{1} v f(x) dx\n$$\n项 $\\left[ v a \\frac{du}{dx} \\right]_{0}^{1}$ 代表自然 (诺伊曼) 边界条件。对于本问题，我们施加的是狄利克雷边界条件，因此我们选择在狄利克雷边界上为零的测试函数 $v(x)$。这使得边界项消失。\n\n弱形式为：找到 $u \\in V$，使得对于所有 $v \\in \\hat{V}$：\n$$\nB(v, u) = L(v)\n$$\n其中 $V$ 是试探函数空间，$\\hat{V}$ 是检验函数空间。双线性形式 $B(v, u)$ 和线性泛函 $L(v)$ 定义如下：\n$$\nB(v, u) = \\int_{0}^{1} a \\frac{dv}{dx} \\frac{du}{dx} dx\n$$\n$$\nL(v) = \\int_{0}^{1} v(x) f(x) dx\n$$\n\n**2. 有限元离散化**\n\n我们将域 $[0,1]$ 离散化为单元网格。解 $u(x)$ 由分段线性基函数 $\\phi_j(x)$（通常称为“帽”函数）的线性组合来近似：\n$$\nu_h(x) = \\sum_{j=1}^{N_{dof}} U_j \\phi_j(x)\n$$\n这里，$N_{dof}$ 是自由度（节点）的总数，$U_j$ 是解的未知节点值。基函数 $\\phi_j(x)$ 具有在节点 $j$ 处等于 $1$ 并在所有其他节点处等于 $0$ 的性质。\n\n在伽辽金方法中，测试函数 $v(x)$ 从与基函数相同的空间中选取，即 $v = \\phi_i(x)$，其中 $i=1, \\dots, N_{dof}$。将此代入弱形式，得到一个线性方程组 $KU=F$，其中：\n- $K_{ij} = B(\\phi_i, \\phi_j) = \\int_{0}^{1} a \\frac{d\\phi_i}{dx} \\frac{d\\phi_j}{dx} dx$ 是全局刚度矩阵。\n- $F_i = L(\\phi_i) = \\int_{0}^{1} \\phi_i(x) f(x) dx$ 是全局载荷向量。\n\n**3. 单元矩阵推导**\n\n全局矩阵由每个单元的贡献组装而成。考虑一个连接坐标 $x_A$ 的节点 $A$ 和坐标 $x_B$ 的节点 $B$ 的通用单元 $e$。单元长度为 $h_e = x_B - x_A$。在此单元内，只有两个基函数 $\\phi_A(x)$ 和 $\\phi_B(x)$ 非零。\n\n单元上的局部基函数为：\n$$\n\\phi_A(x) = \\frac{x_B - x}{h_e} \\quad \\text{和} \\quad \\phi_B(x) = \\frac{x - x_A}{h_e}\n$$\n它们的导数在整个单元上是常数：\n$$\n\\frac{d\\phi_A}{dx} = -\\frac{1}{h_e} \\quad \\text{和} \\quad \\frac{d\\phi_B}{dx} = \\frac{1}{h_e}\n$$\n\n**单元刚度矩阵 $k^e$**：\n$2 \\times 2$ 的单元刚度矩阵 $k^e$ 的项为 $k^e_{ij} = \\int_{x_A}^{x_B} a \\frac{d\\phi_i}{dx} \\frac{d\\phi_j}{dx} dx$。给定 $a=1$：\n$$\nk^e_{11} = \\int_{x_A}^{x_B} 1 \\cdot \\left(-\\frac{1}{h_e}\\right) \\left(-\\frac{1}{h_e}\\right) dx = \\frac{1}{h_e^2} \\int_{x_A}^{x_B} dx = \\frac{h_e}{h_e^2} = \\frac{1}{h_e}\n$$\n$$\nk^e_{12} = \\int_{x_A}^{x_B} 1 \\cdot \\left(-\\frac{1}{h_e}\\right) \\left(\\frac{1}{h_e}\\right) dx = -\\frac{1}{h_e^2} \\int_{x_A}^{x_B} dx = -\\frac{1}{h_e}\n$$\n根据对称性，$k^e_{21} = k^e_{12} = -1/h_e$，且 $k^e_{22} = 1/h_e$。因此，单元刚度矩阵为：\n$$\nk^e = \\frac{1}{h_e} \\begin{pmatrix} 1  -1 \\\\ -1  1 \\end{pmatrix}\n$$\n\n**单元载荷向量 $f^e$**：\n对于源项 $f(x)=x$，单元载荷向量 $f^e$ 的项为 $f^e_i = \\int_{x_A}^{x_B} x \\cdot \\phi_i(x) dx$。\n$$\nf^e_1 = \\int_{x_A}^{x_B} x \\left(\\frac{x_B - x}{h_e}\\right) dx = \\frac{1}{h_e} \\left[ x_B \\frac{x^2}{2} - \\frac{x^3}{3} \\right]_{x_A}^{x_B} = \\frac{h_e}{6}(2x_A + x_B)\n$$\n$$\nf^e_2 = \\int_{x_A}^{x_B} x \\left(\\frac{x - x_A}{h_e}\\right) dx = \\frac{1}{h_e} \\left[ \\frac{x^3}{3} - x_A \\frac{x^2}{2} \\right]_{x_A}^{x_B} = \\frac{h_e}{6}(x_A + 2x_B)\n$$\n所以，对于 $f(x)=x$ 的一致单元载荷向量是：\n$$\nf^e = \\frac{h_e}{6} \\begin{pmatrix} 2x_A + x_B \\\\ x_A + 2x_B \\end{pmatrix}\n$$\n\n**4. 组装与边界条件**\n\n组装过程包括遍历每个单元，计算其 $k^e$ 和 $f^e$，并将其值加到全局 $K$ 和 $F$ 矩阵的适当位置，同时将局部单元节点映射到全局自由度索引。\n\n组装后，施加齐次狄利克雷边界条件（对于给定集合中的自由度 $k$，$u_k=0$）。为了分析矩阵的奇异性，我们关心的是对应于*未知*自由度的系统。设 $I$ 是未知自由度的索引集。我们通过只选择 $K$ 中对应于 $I$ 中索引的行和列来形成一个缩减刚度矩阵 $K_{red}$。\n\n**5. 奇异性检测**\n\n对于没有任何狄利克雷边界条件的扩散问题，其刚度矩阵 $K$ 总是奇异的（对于连通网格，其零度为 $1$，对应于一个常数“刚体”模态）。在一个节点上施加狄利克雷条件会“锚固”解，并使剩余未知量的缩减矩阵变为非奇异的（正定），前提是网格是连通的。\n\n该问题引入了一个错误，即物理上连接的网格在数据结构中表示为断开的组件（例如，坐标 $[0, 0.5, 0.5, 1]$ 和单元 $(0,1), (2,3)$）。这会创建两个独立的图。每个未被狄利克雷边界条件锚固的断开组件都会对刚度矩阵贡献一个刚体模态，从而产生一个零特征值。缩减矩阵 $K_{red}$ 的零度（零空间的维度）就是这种未锚固组件的数量。\n\n我们可以通过计算 $K_{red}$ 的数值上为零的特征值数量来计算零度。由于 $K_{red}$ 是对称半正定的，其特征值是实数且非负的。我们计算所有特征值，并计算其绝对值小于一个容差的数量，该容差定义为最大特征值绝对值的一个小分数（例如 $|\\lambda_i| < 10^{-12} |\\lambda_{max}|$)。这个计数给出了 $K_{red}$ 的零度。", "answer": "```python\nimport numpy as np\n\ndef assemble_and_check(coords, elements, dirichlet_dofs):\n    \"\"\"\n    Assembles the stiffness matrix and load vector for a 1D diffusion problem,\n    imposes Dirichlet boundary conditions, and computes the nullity of the\n    reduced stiffness matrix.\n\n    Args:\n        coords (list or np.ndarray): Nodal coordinates.\n        elements (list of tuples): Element connectivity (pairs of DOF indices).\n        dirichlet_dofs (set): Set of DOF indices with Dirichlet boundary conditions.\n\n    Returns:\n        int: The nullity of the reduced stiffness matrix.\n    \"\"\"\n    n_dofs = len(coords)\n    K = np.zeros((n_dofs, n_dofs))\n    # The load vector F is not required for singularity check but is assembled for completeness.\n    F = np.zeros(n_dofs)\n    \n    # Constant diffusion coefficient\n    a = 1.0\n\n    # Assembly loop\n    for elem in elements:\n        dof1, dof2 = elem\n        x1, x2 = coords[dof1], coords[dof2]\n        \n        # Ensure h is positive, although order doesn't matter for stiffness matrix.\n        h = abs(x2 - x1)\n        if h < 1e-15:\n            # Avoid division by zero for zero-length elements, though not in test cases.\n            continue\n            \n        # Elemental stiffness matrix for a=1\n        k_elem = (a / h) * np.array([[1.0, -1.0], [-1.0, 1.0]])\n\n        # Elemental load vector for f(x)=x\n        # f_elem = (h/6) * [2*x_A + x_B, x_A + 2*x_B]\n        # Use min/max to ensure x_A < x_B for the formula\n        x_A, x_B = min(x1, x2), max(x1, x2)\n        f_elem_vals = (h / 6.0) * np.array([2 * x_A + x_B, x_A + 2 * x_B])\n        # The order of f_elem must match the dof order in the element tuple\n        if x1 > x2:\n            f_elem = np.array([f_elem_vals[1], f_elem_vals[0]])\n        else:\n            f_elem = f_elem_vals\n        \n        # Add to global matrices\n        ix = np.ix_([dof1, dof2], [dof1, dof2])\n        K[ix] += k_elem\n        F[[dof1, dof2]] += f_elem\n\n    # Identify unknown DOFs\n    all_dofs = set(range(n_dofs))\n    unknown_dofs = sorted(list(all_dofs - set(dirichlet_dofs)))\n\n    if not unknown_dofs:\n        return 0 # No unknown DOFs, reduced matrix is empty, nullity is 0.\n    \n    # Extract reduced stiffness matrix\n    K_reduced = K[np.ix_(unknown_dofs, unknown_dofs)]\n    \n    if K_reduced.shape[0] == 0:\n        return 0\n\n    # Compute eigenvalues of the symmetric reduced matrix\n    eigenvalues = np.linalg.eigh(K_reduced)[0]\n    \n    # Determine the tolerance for a \"zero\" eigenvalue\n    max_eig_abs = np.max(np.abs(eigenvalues)) if eigenvalues.size > 0 else 0.0\n    \n    # If the largest eigenvalue is itself near zero, all are zero.\n    # The tolerance must be absolute in this case.\n    if max_eig_abs < 1e-12:\n        return K_reduced.shape[0]\n\n    # Relative tolerance based on the largest eigenvalue\n    tolerance = max_eig_abs * 1e-12\n    \n    # Count eigenvalues smaller than the tolerance\n    nullity = np.sum(np.abs(eigenvalues) < tolerance)\n    \n    return int(nullity)\n\ndef solve():\n    \"\"\"\n    Runs the test suite and prints the results.\n    \"\"\"\n    # Test case 1 (happy path, correct assembly)\n    test_case_1 = {\n        \"coords\": [0.0, 0.5, 1.0],\n        \"elements\": [(0, 1), (1, 2)],\n        \"dirichlet_dofs\": {0}\n    }\n\n    # Test case 2 (buggy mesh with duplicated shared vertex, causing an unanchored component)\n    test_case_2 = {\n        \"coords\": [0.0, 0.5, 0.5, 1.0],\n        \"elements\": [(0, 1), (2, 3)],\n        \"dirichlet_dofs\": {0}\n    }\n\n    # Test case 3 (buggy mesh but fully anchored)\n    test_case_3 = {\n        \"coords\": [0.0, 0.5, 0.5, 1.0],\n        \"elements\": [(0, 1), (2, 3)],\n        \"dirichlet_dofs\": {0, 3}\n    }\n\n    # Test case 4 (buggy mesh with no Dirichlet conditions, multiple floating components)\n    test_case_4 = {\n        \"coords\": [0.0, 0.5, 0.5, 1.0],\n        \"elements\": [(0, 1), (2, 3)],\n        \"dirichlet_dofs\": set()\n    }\n    \n    test_cases = [test_case_1, test_case_2, test_case_3, test_case_4]\n    \n    results = []\n    for case in test_cases:\n        nullity = assemble_and_check(\n            case[\"coords\"], case[\"elements\"], case[\"dirichlet_dofs\"]\n        )\n        results.append(nullity)\n        \n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3098508"}]}