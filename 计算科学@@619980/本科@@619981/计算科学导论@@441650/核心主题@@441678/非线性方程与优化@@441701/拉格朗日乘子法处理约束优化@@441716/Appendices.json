{"hands_on_practices": [{"introduction": "本练习旨在通过一个经典的几何问题来巩固您对拉格朗日乘数法核心原理的理解。我们将求解函数 $f(x,y)=x^2+y^2$ 在双曲线约束 $xy=1$ 下的极值点，这相当于寻找双曲线上离原点最近的点。通过这个实践 [@problem_id:3150396]，您将加深对“在约束极值点上，目标函数的梯度平行于约束函数梯度”这一几何直觉的认识，并练习使用二阶条件来判别极值点的类型。", "problem": "在计算建模中，为了获得稳定的参数估计，人们常常在光滑约束流形上最小化一个光滑目标函数。考虑在等式约束 $g(x,y)=xy-1=0$ 下最小化目标函数 $f(x,y)=x^{2}+y^{2}$ 的问题。在 $\\nabla g(x,y)\\neq \\mathbf{0}$ 的地方，该约束在 $\\mathbb{R}^{2}$ 中定义了一个光滑的一维流形。仅使用核心定义——即约束稳定点出现在 $f$ 沿约束流形所有切线方向的方向导数都为零的地方，以及在该点处 $f$ 的梯度必须位于约束梯度的生成空间中的原理，完成以下任务：\n\n1. 推导约束稳定性的必要条件，并求解流形 $xy=1$ 上的所有约束稳定点 $(x,y)$。\n2. 使用限制在每个稳定点处约束流形切空间上的二阶微分，判断每个稳定点是约束局部最小值、约束局部最大值还是都不是。\n3. 说明是否存在约束全局最大值，并使用流形的结构或一维约简来证明你的结论。\n4. 作为你最终报告的值，提供在约束流形上达到的 $f$ 的最小值，该值应为一个精确的数字。不包括单位。无需四舍五入。", "solution": "所述问题是有效的。这是一个适定、自洽的约束优化问题，是计算科学和应用数学中的核心课题。它具有科学依据，并使用精确、客观的语言。所有必要的信息都已提供，问题没有矛盾或谬误。我们可以继续进行求解。\n\n问题要求在等式约束 $g(x,y) = xy - 1 = 0$ 下，求目标函数 $f(x,y) = x^2 + y^2$ 的极值并进行分类。函数 $f(x,y)$ 表示从原点到 $\\mathbb{R}^2$ 中一点 $(x,y)$ 的欧几里得距离的平方。约束 $g(x,y)=0$ 将点 $(x,y)$ 限制在一条双曲线上。\n\n首先，我们将推导约束稳定点的必要条件。如果函数 $f$ 在流形上一点 $(x_0, y_0)$ 沿该点切线方向的任何方向导数都为零，则该点是 $f$ 的一个稳定点。\n设 $\\mathbf{v}$ 是流形 $g(x,y)=0$ 在点 $(x_0, y_0)$ 处切空间中的一个向量。切空间与约束函数的梯度 $\\nabla g(x_0, y_0)$ 正交。因此，任何这样的向量 $\\mathbf{v}$ 都必须满足 $\\nabla g(x_0, y_0) \\cdot \\mathbf{v} = 0$。\n稳定性的条件是 $f$ 沿方向 $\\mathbf{v}$ 的方向导数为零：$D_{\\mathbf{v}}f(x_0, y_0) = \\nabla f(x_0, y_0) \\cdot \\mathbf{v} = 0$。\n这个条件必须对切空间中的所有向量 $\\mathbf{v}$ 都成立。由于切空间由所有与 $\\nabla g(x_0, y_0)$ 正交的向量组成，条件 $\\nabla f(x_0, y_0) \\cdot \\mathbf{v} = 0$ 意味着 $\\nabla f(x_0, y_0)$ 也必须与切空间正交。在欧几里得空间中，这意味着 $\\nabla f(x_0, y_0)$ 必须与法向量 $\\nabla g(x_0, y_0)$ 平行。这个几何条件可以用代数形式表示为存在一个标量 $\\lambda$（拉格朗日乘子），使得：\n$$ \\nabla f(x,y) = \\lambda \\nabla g(x,y) $$\n这个方程与原始约束相结合，提供了约束稳定点的必要条件。\n\n1. 约束稳定点的推导和求解。\n\n首先，我们计算 $f$ 和 $g$ 的梯度：\n$$ \\nabla f(x,y) = \\left\\langle \\frac{\\partial f}{\\partial x}, \\frac{\\partial f}{\\partial y} \\right\\rangle = \\langle 2x, 2y \\rangle $$\n$$ \\nabla g(x,y) = \\left\\langle \\frac{\\partial g}{\\partial x}, \\frac{\\partial g}{\\partial y} \\right\\rangle = \\langle y, x \\rangle $$\n约束流形 $xy=1$ 处处光滑，因为 $\\nabla g = \\langle y, x \\rangle$ 仅在 $(0,0)$ 处为零，而该点不在流形上。\n\n稳定点 $(x,y)$ 的必要条件由以下方程组给出：\n$$\n\\begin{align*}\n2x = \\lambda y \\quad (1) \\\\\n2y = \\lambda x \\quad (2) \\\\\nxy - 1 = 0 \\quad (3)\n\\end{align*}\n$$\n从方程 $(3)$ 可知，$x$ 和 $y$ 都不能为零。因此，我们可以除以 $x$ 和 $y$。从方程 $(1)$，我们可以将 $\\lambda$ 表示为 $\\lambda = \\frac{2x}{y}$。将其代入方程 $(2)$：\n$$ 2y = \\left(\\frac{2x}{y}\\right)x \\implies 2y^2 = 2x^2 \\implies y^2 = x^2 $$\n这意味着 $y = x$ 或 $y = -x$。我们分析这两种情况。\n\n情况1：$y = x$。\n将此代入约束方程 $(3)$：\n$$ x(x) - 1 = 0 \\implies x^2 = 1 \\implies x = \\pm 1 $$\n如果 $x=1$，则 $y=1$。这给出了稳定点 $(1,1)$。\n如果 $x=-1$，则 $y=-1$。这给出了稳定点 $(-1,-1)$。\n\n情况2：$y = -x$。\n将此代入约束方程 $(3)$：\n$$ x(-x) - 1 = 0 \\implies -x^2 = 1 \\implies x^2 = -1 $$\n这个方程对于 $x$ 没有实数解。\n\n因此，流形上仅有的约束稳定点是 $(1,1)$ 和 $(-1,-1)$。\n\n2. 使用二阶微分对稳定点进行分类。\n\n为了对这些点进行分类，我们使用二阶充分条件，这涉及到检验拉格朗日函数 $L(x,y,\\lambda) = f(x,y) - \\lambda g(x,y)$ 限制在约束切空间上的二阶微分的符号。\n拉格朗日函数为 $L(x,y,\\lambda) = x^2 + y^2 - \\lambda(xy-1)$。\n拉格朗日函数关于变量 $x$ 和 $y$ 的海森矩阵是：\n$$ H_L = \\begin{pmatrix} \\frac{\\partial^2 L}{\\partial x^2}  \\frac{\\partial^2 L}{\\partial x \\partial y} \\\\ \\frac{\\partial^2 L}{\\partial y \\partial x}  \\frac{\\partial^2 L}{\\partial y^2} \\end{pmatrix} = \\begin{pmatrix} 2  -\\lambda \\\\ -\\lambda  2 \\end{pmatrix} $$\n我们必须在每个稳定点处，对切空间中的任何非零向量 $\\mathbf{v}$，计算二次型 $\\mathbf{v}^T H_L \\mathbf{v}$。\n\n对于点 $(1,1)$：\n首先，我们求出 $\\lambda$ 的值。使用方程 $(1)$，$2(1) = \\lambda(1)$，得到 $\\lambda=2$。\n在 $(1,1)$ 处的海森矩阵是 $H_L(1,1) = \\begin{pmatrix} 2  -2 \\\\ -2  2 \\end{pmatrix}$。\n在 $(1,1)$ 处的切空间是满足 $\\nabla g(1,1) \\cdot \\mathbf{v} = 0$ 的向量 $\\mathbf{v} = \\langle v_x, v_y \\rangle$ 的集合。由于 $\\nabla g(1,1) = \\langle 1,1 \\rangle$，该条件为 $1 \\cdot v_x + 1 \\cdot v_y = 0$，即 $v_y = -v_x$。\n这个一维切空间的一个基是向量 $\\mathbf{v} = \\langle 1, -1 \\rangle$。\n我们对这个向量计算二次型：\n$$ \\mathbf{v}^T H_L \\mathbf{v} = \\begin{pmatrix} 1  -1 \\end{pmatrix} \\begin{pmatrix} 2  -2 \\\\ -2  2 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ -1 \\end{pmatrix} = \\begin{pmatrix} 1  -1 \\end{pmatrix} \\begin{pmatrix} 2(1) - 2(-1) \\\\ -2(1) + 2(-1) \\end{pmatrix} = \\begin{pmatrix} 1  -1 \\end{pmatrix} \\begin{pmatrix} 4 \\\\ -4 \\end{pmatrix} = 1(4) - 1(-4) = 8 $$\n由于 $8  0$，拉格朗日函数的海森矩阵在切空间上是正定的。这表明点 $(1,1)$ 是一个约束局部最小值。\n\n对于点 $(-1,-1)$：\n同样，我们从方程 $(1)$ 求出 $\\lambda$：$2(-1) = \\lambda(-1)$，得到 $\\lambda=2$。\n在 $(-1,-1)$ 处的海森矩阵是相同的：$H_L(-1,-1) = \\begin{pmatrix} 2  -2 \\\\ -2  2 \\end{pmatrix}$。\n在 $(-1,-1)$ 处的切空间由 $\\nabla g(-1,-1) \\cdot \\mathbf{v} = 0$ 定义。由于 $\\nabla g(-1,-1) = \\langle -1,-1 \\rangle$，该条件为 $-1 \\cdot v_x - 1 \\cdot v_y = 0$，即 $v_y = -v_x$。\n切空间是相同的，基向量为 $\\mathbf{v} = \\langle 1, -1 \\rangle$。\n因此，二次型是相同的：\n$$ \\mathbf{v}^T H_L \\mathbf{v} = 8 $$\n由于 $8  0$，点 $(-1,-1)$ 也是一个约束局部最小值。\n\n3. 约束全局最大值的存在性。\n\n约束流形是由 $xy=1$ 定义的双曲线。这个流形是无界的。它由两个分支组成，一个在第一象限，一个在第三象限。\n目标函数是 $f(x,y) = x^2 + y^2$。为了判断是否存在全局最大值，我们可以考察当点在流形上远离原点时 $f$ 的行为。\n考虑流形上的一系列点 $(x_n, y_n)$，使得 $x_n \\to \\infty$。由于 $y_n = 1/x_n$，我们有 $y_n \\to 0$。该序列的目标函数值为：\n$$ f(x_n, y_n) = x_n^2 + \\left(\\frac{1}{x_n}\\right)^2 $$\n当 $n \\to \\infty$ 时，$x_n \\to \\infty$ 且 $x_n^2 \\to \\infty$。因此，$\\lim_{n \\to \\infty} f(x_n, y_n) = \\infty$。\n由于目标函数 $f$ 在约束集上没有上界，所以不存在约束全局最大值。通过考虑 $x \\to -\\infty$ 或 $x \\to 0$ 的点，可以得出相同的结论。\n\n4. $f$ 在约束流形上的最小值。\n\n稳定点 $(1,1)$ 和 $(-1,-1)$ 都是约束局部最小值。由于当流形上的点移向无穷远时，函数 $f(x,y)$ 无界增长，因此全局最小值必须在这两个局部最小值之一处取得。\n让我们在这些点上计算函数 $f$ 的值：\n在 $(1,1)$ 处：\n$$ f(1,1) = 1^2 + 1^2 = 1 + 1 = 2 $$\n在 $(-1,-1)$ 处：\n$$ f(-1,-1) = (-1)^2 + (-1)^2 = 1 + 1 = 2 $$\n两点都得到相同的最小值。因此，$f(x,y)$ 在流形 $xy=1$ 上的约束全局最小值为 $2$。", "answer": "$$\\boxed{2}$$", "id": "3150396"}, {"introduction": "在许多现实世界的优化问题中，我们面对的往往是不等式约束，例如资源量不能为负，或结构应力必须低于某个安全阈值。本练习将引导您从等式约束过渡到不等式约束的情形。具体来说，我们将求解在一个半平面 $x + 2y - 4 \\le 0$ 内，距离点 $(3,1)$ 最近的点 [@problem_id:3150385]。这个过程将帮助您掌握处理不等式约束的强大工具——卡罗需-库恩-塔克（KKT）条件，特别是“有效约束”和“互补松弛性”这两个现代优化理论的基石概念。", "problem": "考虑一个约束优化问题，其目标是最小化二次目标函数\n$$f(x,y) = (x - 3)^{2} + (y - 1)^{2}$$\n该问题服从单个不等式约束\n$$g(x,y) = x + 2y - 4 \\leq 0.$$\n请从适用于计算科学导论的基本原理出发解决此问题：使用基于微积分的最优性（目标函数的驻点）、推广到不等式的拉格朗日乘子法，以及原始可行性、对偶可行性和互补松弛性的定义。\n\n任务：\n1. 通过比较目标函数的无约束最小化点与不等式定义的可行集，手动确定在约束最小化点处不等式约束是否是活跃的。请清楚地证明你的结论。\n2. 使用拉格朗日乘子法，推导针对此问题以及你所确定的活跃集状态的 Karush–Kuhn–Tucker (KKT) 条件（历史上称为 Karush 条件）。建立拉格朗日函数，并根据不等式约束的适当乘子符号约定写下平稳性条件。\n3. 求解得到的方程组，以获得最优点 $(x^{\\star}, y^{\\star})$ 和相应的乘子 $\\lambda^{\\star}$，并手动明确验证原始可行性、对偶可行性和互补松弛性。\n4. 报告最优目标函数值 $f^{\\star} = f(x^{\\star}, y^{\\star})$ 的精确值。请提供精确值，不要四舍五入。", "solution": "该问题是一个约束优化任务，在数学上是适定且自洽的，因此是有效的。目标函数是严格凸函数，可行域是一个闭的、非空的凸集，这保证了存在唯一的最小化点。\n\n该问题要求在不等式约束 $g(x,y) = x + 2y - 4 \\leq 0$ 下，最小化目标函数 $f(x,y) = (x - 3)^{2} + (y - 1)^{2}$。从几何上看，这等价于在由 $x + 2y \\leq 4$ 定义的闭半平面中，找到距离点 $(3,1)$ 最近的点 $(x,y)$。\n\n**1. 约束的活跃性**\n\n首先，我们确定约束在解处是否是活跃的。一个活跃约束以等式形式成立，即 $g(x,y) = 0$。如果解位于可行域的内部，即 $g(x,y)  0$，则约束是不活跃的。\n\n我们首先找到 $f(x,y)$ 的无约束最小化点。函数 $f(x,y)$ 表示点 $(x,y)$ 到中心点 $(3,1)$ 的欧几里得距离的平方。该函数是非负项之和，当每一项都为零时达到最小值。这发生在 $x=3$ 和 $y=1$ 时。因此，无约束最小化点为 $(x_u, y_u) = (3,1)$。\n\n接下来，我们检查这个无约束最小化点是否位于由约束 $g(x,y) \\leq 0$ 定义的可行域内。我们在点 $(3,1)$ 处计算 $g(x,y)$ 的值：\n$$g(3,1) = (3) + 2(1) - 4 = 3 + 2 - 4 = 1$$\n由于 $g(3,1) = 1$，且 $1 \\not\\leq 0$，无约束最小化点 $(3,1)$ 违反了约束，不在可行集内。\n\n因为无约束最小化点在可行域之外，所以约束最小化点不可能在可行域的内部。因此，约束最小化点必须位于可行集的边界上。这意味着不等式约束在最优点 $(x^{\\star}, y^{\\star})$ 处必须是**活跃的**，满足等式 $g(x^{\\star}, y^{\\star}) = x^{\\star} + 2y^{\\star} - 4 = 0$。\n\n**2. Karush–Kuhn–Tucker (KKT) 条件**\n\n我们使用由 KKT 条件推广到不等式的拉格朗日乘子法。此问题的拉格朗日函数 $\\mathcal{L}(x, y, \\lambda)$ 定义为：\n$$\\mathcal{L}(x, y, \\lambda) = f(x, y) + \\lambda g(x, y)$$\n$$\\mathcal{L}(x, y, \\lambda) = (x - 3)^{2} + (y - 1)^{2} + \\lambda (x + 2y - 4)$$\n对于一个带有 $g(x,y) \\leq 0$ 形式约束的最小化问题，拉格朗日乘子必须是非负的，即 $\\lambda \\geq 0$。\n\nKKT 条件是：\n1.  **平稳性 (Stationarity)：** 拉格朗日函数相对于原始变量 $(x,y)$ 的梯度必须为零：\n    $$\\frac{\\partial \\mathcal{L}}{\\partial x} = 2(x - 3) + \\lambda = 0$$\n    $$\\frac{\\partial \\mathcal{L}}{\\partial y} = 2(y - 1) + 2\\lambda = 0$$\n2.  **原始可行性 (Primal Feasibility)：** 必须满足约束条件：\n    $$g(x,y) = x + 2y - 4 \\leq 0$$\n3.  **对偶可行性 (Dual Feasibility)：** 拉格朗日乘子必须是非负的：\n    $$\\lambda \\geq 0$$\n4.  **互补松弛性 (Complementary Slackness)：** 乘子与约束函数的乘积必须为零：\n    $$\\lambda g(x,y) = \\lambda (x + 2y - 4) = 0$$\n\n由于我们已确定约束是活跃的，我们知道 $g(x^{\\star}, y^{\\star}) = 0$。这对任何 $\\lambda$ 都满足原始可行性条件（$0 \\leq 0$）和互补松弛性条件（$\\lambda \\cdot 0 = 0$）。问题简化为求解由平稳性条件和活跃约束方程构成的方程组。\n\n**3. 求解方程组**\n\n求解最优点 $(x^{\\star}, y^{\\star})$ 和乘子 $\\lambda^{\\star}$ 的方程组如下：\n(i) $2(x - 3) + \\lambda = 0 \\implies 2x - 6 + \\lambda = 0$\n(ii) $2(y - 1) + 2\\lambda = 0 \\implies 2y - 2 + 2\\lambda = 0$\n(iii) $x + 2y - 4 = 0$\n\n从 (i) 解出 $x$：\n$$x = \\frac{6 - \\lambda}{2} = 3 - \\frac{\\lambda}{2}$$\n从 (ii) 解出 $y$：\n$$y = \\frac{2 - 2\\lambda}{2} = 1 - \\lambda$$\n现在我们将 $x$ 和 $y$ 的表达式代入约束方程 (iii)：\n$$(3 - \\frac{\\lambda}{2}) + 2(1 - \\lambda) - 4 = 0$$\n$$3 - \\frac{\\lambda}{2} + 2 - 2\\lambda - 4 = 0$$\n$$1 - \\frac{5}{2}\\lambda = 0$$\n$$1 = \\frac{5}{2}\\lambda$$\n解出 $\\lambda$，我们得到最优乘子：\n$$\\lambda^{\\star} = \\frac{2}{5}$$\n现在，我们将 $\\lambda^{\\star}$ 代回 $x$ 和 $y$ 的表达式中：\n$$x^{\\star} = 3 - \\frac{1}{2}\\left(\\frac{2}{5}\\right) = 3 - \\frac{1}{5} = \\frac{15 - 1}{5} = \\frac{14}{5}$$\n$$y^{\\star} = 1 - \\frac{2}{5} = \\frac{5 - 2}{5} = \\frac{3}{5}$$\n最优点是 $(x^{\\star}, y^{\\star}) = (\\frac{14}{5}, \\frac{3}{5})$。\n\n我们用 $(x^{\\star}, y^{\\star}, \\lambda^{\\star}) = (\\frac{14}{5}, \\frac{3}{5}, \\frac{2}{5})$ 来明确验证 KKT 条件：\n- **平稳性：** 根据构造，方程已满足。\n- **原始可行性：** $g(\\frac{14}{5}, \\frac{3}{5}) = \\frac{14}{5} + 2(\\frac{3}{5}) - 4 = \\frac{14+6}{5} - \\frac{20}{5} = \\frac{20}{5} - \\frac{20}{5} = 0$。由于 $0 \\leq 0$，此条件满足。\n- **对偶可行性：** $\\lambda^{\\star} = \\frac{2}{5}$。由于 $\\frac{2}{5} > 0$，此条件满足。\n- **互补松弛性：** $\\lambda^{\\star} g(x^{\\star}, y^{\\star}) = (\\frac{2}{5})(0) = 0$。此条件满足。\n所有 KKT 条件均得到满足。\n\n**4. 最优目标值**\n\n最后，我们计算目标函数在最优点 $(x^{\\star}, y^{\\star}) = (\\frac{14}{5}, \\frac{3}{5})$ 处的值：\n$$f^{\\star} = f(x^{\\star}, y^{\\star}) = \\left(\\frac{14}{5} - 3\\right)^{2} + \\left(\\frac{3}{5} - 1\\right)^{2}$$\n$$f^{\\star} = \\left(\\frac{14 - 15}{5}\\right)^{2} + \\left(\\frac{3 - 5}{5}\\right)^{2}$$\n$$f^{\\star} = \\left(-\\frac{1}{5}\\right)^{2} + \\left(-\\frac{2}{5}\\right)^{2}$$\n$$f^{\\star} = \\frac{1}{25} + \\frac{4}{25} = \\frac{5}{25} = \\frac{1}{5}$$\n最优目标函数的精确值为 $\\frac{1}{5}$。", "answer": "$$\n\\boxed{\\frac{1}{5}}\n$$", "id": "3150385"}, {"introduction": "这个练习旨在连接优化理论的解析解与计算科学的数值实践。对于无法轻易求得解析解的大规模问题，我们通常需要通过数值方法求解其最优性条件。在这个动手编码练习 [@problem_id:3150367] 中，您将把一个带线性约束的二次规划问题的一阶最优性条件转化为一个可以由计算机求解的线性方程组（即“增广Hessian”系统）。此外，您还将研究该系统的数值条件数如何受问题参数的影响，这是评估数值解稳定性和可靠性的一个关键考量。", "problem": "要求您实现一个用于线性约束二次规划的数值求解器，并研究当二次型近乎奇异时，由此产生的 Karush–Kuhn–Tucker 系统（也称为增广 Hessian 系统）的条件数如何变化。该数学规划问题是在线性等式约束 $$A x = b$$ 下，最小化二次目标函数 $$f(x)=\\tfrac{1}{2}\\,x^\\top Q x$$，其中 $Q \\in \\mathbb{R}^{n \\times n}$ 是对称半正定矩阵，$A \\in \\mathbb{R}^{m \\times n}$ 行满秩，且 $b \\in \\mathbb{R}^{m}$。拉格朗日乘子法构建了拉格朗日函数 $$\\mathcal{L}(x,\\lambda)=\\tfrac{1}{2}\\,x^\\top Q x+\\lambda^\\top(Ax-b),$$ 其中 $\\lambda \\in \\mathbb{R}^m$ 是拉格朗日乘子。根据原理，最优性的一阶必要条件是 $\\mathcal{L}$ 关于 $x$ 和 $\\lambda$ 的梯度为零，并且约束条件得到满足。通过对 $\\mathcal{L}$ 求导并强制可行性，这些条件可以写成一个线性系统，从而得到一个带有增广 Hessian 矩阵的分块系统。您必须直接从这些定义中推导出该系统，并数值求解 $x$ 和 $\\lambda$。\n\n您的程序必须：\n- 从上述定义出发，根据一阶条件构建增广 Hessian 系统，然后求解该系统以恢复每个测试用例的 $x$。\n- 使用奇异值估算增广 Hessian 矩阵的 2-范数条件数，其定义为 $$\\kappa_2(K) = \\dfrac{\\sigma_{\\max}(K)}{\\sigma_{\\min}(K)},$$ 其中 $\\sigma_{\\max}(K)$ 和 $\\sigma_{\\min}(K)$ 分别是 $K$ 的最大和最小奇异值。报告该条件数的以 10 为底的对数，即 $$\\log_{10}\\bigl(\\kappa_2(K)\\bigr).$$\n\n科学和数值细节：\n- 本问题不涉及角度。\n- 没有物理单位；所有量均为无量纲实数。\n- 您必须将每个解分量 $x_i$ 四舍五入到六位小数，报告的 $\\log_{10}\\bigl(\\kappa_2(K)\\bigr)$ 四舍五入到三位小数。\n- 如果增广 Hessian 矩阵是非奇异的，则存在唯一解 $(x,\\lambda)$。下面的测试套件经过精心设计，确保每种情况下都存在唯一的极小值点。\n\n测试套件：\n对于每种情况，使用给定的 $Q$、$A$ 和 $b$，并返回向量 $x$ 和标量 $\\log_{10}\\bigl(\\kappa_2(K)\\bigr)$。矩阵和向量如下：\n1. $Q$ 良态的理想情况：\n   - $n=2$, $m=1$\n   - $Q=\\begin{bmatrix}1  0\\\\ 0  1\\end{bmatrix}$, $A=\\begin{bmatrix}1  1\\end{bmatrix}$, $b=\\begin{bmatrix}1\\end{bmatrix}$\n2. 沿约束方向的曲率近乎奇异：\n   - $n=3$, $m=1$\n   - $Q=\\operatorname{diag}\\!\\bigl(1,\\,1,\\,10^{-6}\\bigr)$, $A=\\begin{bmatrix}0  0  1\\end{bmatrix}$, $b=\\begin{bmatrix}1\\end{bmatrix}$\n3. 沿约束固定的方向的曲率近乎奇异：\n   - $n=3$, $m=1$\n   - $Q=\\operatorname{diag}\\!\\bigl(10^{-6},\\,1,\\,1\\bigr)$, $A=\\begin{bmatrix}1  0  0\\end{bmatrix}$, $b=\\begin{bmatrix}1\\end{bmatrix}$\n4. $Q$ 精确奇异，且约束消除了其零空间：\n   - $n=2$, $m=1$\n   - $Q=\\operatorname{diag}\\!\\bigl(1,\\,0\\bigr)$, $A=\\begin{bmatrix}0  1\\end{bmatrix}$, $b=\\begin{bmatrix}0\\end{bmatrix}$\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表。\n- 每个测试用例的结果本身必须是一个用方括号括起来的、以逗号分隔的列表，其条目顺序为 $[x_1,x_2,\\dots,x_n,\\log_{10}(\\kappa_2(K))]$，其中每个 $x_i$ 四舍五入到六位小数，$\\log_{10}(\\kappa_2(K))$ 四舍五入到三位小数。\n- 例如，整体结构应如下所示：$$\\bigl[\\,[\\dots],\\,[\\dots],\\,[\\dots],\\,[\\dots]\\,\\bigr].$$", "solution": "用户要求对一个线性约束二次规划问题进行数值求解，并分析相关 Karush-Kuhn-Tucker (KKT) 系统的条件数。\n\n### 步骤 1：提取给定信息\n- **目标函数**：最小化 $f(x) = \\tfrac{1}{2} x^\\top Q x$。\n- **约束条件**：$Ax = b$。\n- **变量和矩阵/向量定义**：$x \\in \\mathbb{R}^{n \\times 1}$，$Q \\in \\mathbb{R}^{n \\times n}$ 是对称半正定矩阵，$A \\in \\mathbb{R}^{m \\times n}$ 行满秩，$b \\in \\mathbb{R}^{m \\times 1}$。\n- **方法**：拉格朗日乘子法。拉格朗日函数定义为 $\\mathcal{L}(x, \\lambda) = \\tfrac{1}{2} x^\\top Q x + \\lambda^\\top (Ax - b)$，其中 $\\lambda \\in \\mathbb{R}^m$ 是拉格朗日乘子。\n- **任务**：\n    1. 从一阶必要条件（$\\nabla \\mathcal{L} = 0$）推导增广 Hessian 系统。\n    2. 数值求解该系统以得到 $x$。\n    3. 估算增广 Hessian 矩阵 $K$ 的 2-范数条件数 $\\kappa_2(K) = \\frac{\\sigma_{\\max}(K)}{\\sigma_{\\min}(K)}$。\n    4. 报告 $\\log_{10}(\\kappa_2(K))$。\n- **测试用例**：\n    1. $n=2, m=1$, $Q=\\begin{bmatrix}1  0 \\\\ 0  1\\end{bmatrix}$, $A=\\begin{bmatrix}1  1\\end{bmatrix}$, $b=\\begin{bmatrix}1\\end{bmatrix}$。\n    2. $n=3, m=1$, $Q=\\operatorname{diag}(1, 1, 10^{-6})$, $A=\\begin{bmatrix}0  0  1\\end{bmatrix}$, $b=\\begin{bmatrix}1\\end{bmatrix}$。\n    3. $n=3, m=1$, $Q=\\operatorname{diag}(10^{-6}, 1, 1)$, $A=\\begin{bmatrix}1  0  0\\end{bmatrix}$, $b=\\begin{bmatrix}1\\end{bmatrix}$。\n    4. $n=2, m=1$, $Q=\\operatorname{diag}(1, 0)$, $A=\\begin{bmatrix}0  1\\end{bmatrix}$, $b=\\begin{bmatrix}0\\end{bmatrix}$。\n- **格式化**：每个分量 $x_i$ 四舍五入到六位小数，$\\log_{10}(\\kappa_2(K))$ 四舍五入到三位小数。最终输出是一个列表的列表。\n\n### 步骤 2：使用提取的信息进行验证\n该问题具有科学依据，是适定且客观的。它提出了数值优化和线性代数中的一个标准任务。所有术语都有正式定义，数据一致，问题自成体系。提供的测试用例旨在探究 KKT 系统条件数的不同方面，这是计算科学中的一个关键课题。该问题有效。\n\n### 步骤 3：结论与行动\n该问题有效。将提供完整的解决方案。\n\n### 基于原理的解决方案\n在线性等式约束下最小化二次函数是优化中的一个典型问题。拉格朗日乘子法通过将约束问题转化为无约束问题，为寻找解提供了一种系统性方法。\n\n**1. Karush-Kuhn-Tucker (KKT) 系统的推导**\n\n给定目标函数 $f(x) = \\frac{1}{2} x^\\top Q x$ 和线性约束 $Ax = b$。拉格朗日函数 $\\mathcal{L}(x, \\lambda)$ 使用拉格朗日乘子向量 $\\lambda \\in \\mathbb{R}^m$ 将约束条件纳入目标函数：\n$$\n\\mathcal{L}(x, \\lambda) = \\frac{1}{2} x^\\top Q x + \\lambda^\\top(Ax - b)\n$$\n点 $(x^*, \\lambda^*)$ 成为极小值候选点的一阶必要条件是，拉格朗日函数相对于 $x$ 和 $\\lambda$ 的梯度必须为零。\n\n关于 $x$ 的偏导数为：\n$$\n\\nabla_x \\mathcal{L}(x, \\lambda) = \\frac{1}{2}(Q + Q^\\top)x + A^\\top \\lambda\n$$\n由于 $Q$ 是对称的（$Q = Q^\\top$），这可以简化为：\n$$\n\\nabla_x \\mathcal{L}(x, \\lambda) = Qx + A^\\top \\lambda\n$$\n将此梯度设为零，得到第一个条件：\n$$\nQx + A^\\top \\lambda = \\mathbf{0}\n$$\n关于 $\\lambda$ 的偏导数为：\n$$\n\\nabla_\\lambda \\mathcal{L}(x, \\lambda) = Ax - b\n$$\n将此梯度设为零，得到第二个条件，这正是原始的可行性约束：\n$$\nAx = b\n$$\n这两个矩阵方程构成一个单一的线性系统。我们可以将其写成分块矩阵形式：\n$$\n\\begin{pmatrix} Q  A^\\top \\\\ A  \\mathbf{0}_{m \\times m} \\end{pmatrix}\n\\begin{pmatrix} x \\\\ \\lambda \\end{pmatrix}\n=\n\\begin{pmatrix} \\mathbf{0}_{n \\times 1} \\\\ b \\end{pmatrix}\n$$\n这就是 Karush-Kuhn-Tucker (KKT) 系统，也称为增广 Hessian 系统。左侧的矩阵，我们记为 $K$，是 KKT 矩阵：\n$$\nK = \\begin{pmatrix} Q  A^\\top \\\\ A  \\mathbf{0} \\end{pmatrix}\n$$\n该矩阵的大小为 $(n+m) \\times (n+m)$。问题陈述保证了每个测试用例都存在唯一解，这意味着这个 KKT 矩阵是非奇异的。\n\n**2. 数值求解与条件数分析**\n\n每个测试用例的求解过程如下：\n1.  使用给定的矩阵 $Q$、$A$ 和向量 $b$ 构建 KKT 矩阵 $K$ 以及右侧向量 $v = \\begin{pmatrix} \\mathbf{0} \\\\ b \\end{pmatrix}$。\n2.  求解线性系统 $Kz = v$ 以得到未知向量 $z = \\begin{pmatrix} x \\\\ \\lambda \\end{pmatrix}$。这可以使用标准的线性求解器完成，例如 `numpy.linalg.solve`。解向量 $z$ 的前 $n$ 个分量构成了所需解 $x$。\n3.  计算 KKT 矩阵 $K$ 的 2-范数条件数。条件数 $\\kappa_2(K)$ 衡量了解 $z$ 对 $K$ 或 $v$ 中扰动的敏感度。它使用 $K$ 的奇异值定义：\n    $$\n    \\kappa_2(K) = \\frac{\\sigma_{\\max}(K)}{\\sigma_{\\min}(K)}\n    $$\n    其中 $\\sigma_{\\max}(K)$ 和 $\\sigma_{\\min}(K)$ 分别是 $K$ 的最大和最小奇异值。这些值通过奇异值分解 (SVD) 计算得出。\n4.  计算条件数的以 10 为底的对数 $\\log_{10}(\\kappa_2(K))$。该值提供了一个更易于管理的尺度，用于比较不同数量级下的条件数。值越高表示条件越差，意味着问题对数值误差更敏感。\n\n此过程将应用于所提供的四个测试用例中的每一个。结果，包括解向量 $x$ 的分量和计算出的 $\\log_{10}(\\kappa_2(K))$，将按照指定的舍入规则进行格式化。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the series of constrained quadratic programs.\n    \"\"\"\n    test_cases = [\n        # Case 1: Happy path case with well-conditioned Q\n        {\n            \"Q\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"A\": np.array([[1.0, 1.0]]),\n            \"b\": np.array([1.0])\n        },\n        # Case 2: Nearly singular curvature along the constrained direction\n        {\n            \"Q\": np.diag([1.0, 1.0, 1e-6]),\n            \"A\": np.array([[0.0, 0.0, 1.0]]),\n            \"b\": np.array([1.0])\n        },\n        # Case 3: Nearly singular curvature along a direction fixed by the constraint\n        {\n            \"Q\": np.diag([1e-6, 1.0, 1.0]),\n            \"A\": np.array([[1.0, 0.0, 0.0]]),\n            \"b\": np.array([1.0])\n        },\n        # Case 4: Exactly singular Q with constraints removing the nullspace\n        {\n            \"Q\": np.diag([1.0, 0.0]),\n            \"A\": np.array([[0.0, 1.0]]),\n            \"b\": np.array([0.0])\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        Q, A, b = case[\"Q\"], case[\"A\"], case[\"b\"]\n\n        # Get dimensions n (variables) and m (constraints)\n        n = Q.shape[0]\n        m = A.shape[0]\n\n        # Construct the (n+m) x (n+m) KKT matrix (bordered Hessian) K\n        K = np.zeros((n + m, n + m))\n        K[:n, :n] = Q\n        K[:n, n:] = A.T\n        K[n:, :n] = A\n\n        # Construct the right-hand-side vector v of size (n+m)\n        v = np.zeros(n + m)\n        if b is not None:\n             v[n:] = b.flatten()\n\n        # Solve the KKT linear system K * z = v for z = [x, lambda]\n        z = np.linalg.solve(K, v)\n\n        # Extract the solution vector x\n        x_sol = z[:n]\n\n        # Estimate the 2-norm condition number of K using SVD\n        # A more direct method is np.linalg.cond(K, 2)\n        singular_values = np.linalg.svd(K, compute_uv=False)\n        cond_K = singular_values[0] / singular_values[-1]\n\n        # Calculate the base-10 logarithm of the condition number\n        log10_cond_K = np.log10(cond_K)\n        \n        # Format the results according to the specified precision\n        x_strs = [f\"{val:.6f}\" for val in x_sol]\n        log10_cond_str = f\"{log10_cond_K:.3f}\"\n        \n        case_result_str = f\"[{','.join(x_strs)},{log10_cond_str}]\"\n        results.append(case_result_str)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "3150367"}]}