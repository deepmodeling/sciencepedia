{"hands_on_practices": [{"introduction": "尽管打靶法的威力在于解决那些没有已知解析解的复杂问题，但从一个可以精确求解的特例入手，是理解其核心思想的绝佳方式。这个练习 [@problem_id:558739] 提供了一个精心设计的非线性边值问题。通过解析推导，你将能够找到那个唯一正确的初始斜率$s$，使其精确“击中”远端的边界目标，从而牢固地掌握打靶法将边值问题转化为寻找正确初始条件的本质。", "problem": "打靶法是一种强大的技术，通过将边值问题 (BVP) 重新表述为初值问题 (IVP) 来求解。对于一个形如$u'' = f(x, u, u')$的二阶常微分方程，其边界条件为$u(x_0) = \\alpha$和$u(x_1) = \\beta$，我们将初始斜率$s = u'(x_0)$视为一个参数。初值问题 (IVP) 的解，记为$u(x; s)$，将取决于$s$的这个选择。目标是找到$s$的特定值，使得第二个边界条件得以满足，即$u(x_1; s) = \\beta$。假设$u(x_1; s)$是$s$的一个连续函数，那么这样一个$s$的存在性通常由介值定理保证。\n\n虽然这个过程通常是数值的，但某些特殊构造的非线性边值问题可以得到精确的解析解。考虑在区间$x \\in [0, 1]$上的以下边值问题：\n$$\nu'' = \\frac{\\pi^2}{8}(u + u^3)\n$$\n其边界条件为$u(0) = 0$和$u(1) = 1$。\n\n求初始斜率$s = u'(0)$的精确正值，使得相应初值问题的解也满足在$x=1$处的边界条件。", "solution": "我们寻求非线性边值问题\n$$u''=\\frac{\\pi^2}{8}(u+u^3),\\quad u(0)=0,\\;u(1)=1$$\n的一个精确解。\n1. 拟设：假设\n$$u(x)=\\tan(kx).$$\n则\n$$u'(x)=k\\sec^2(kx),$$\n$$u''(x)=k^2\\cdot2\\sec^2(kx)\\tan(kx)=2k^2\\bigl(u+u^3\\bigr).$$\n2. 与给定的常微分方程匹配需要\n$$2k^2=\\frac{\\pi^2}{8}\n\\quad\\Longrightarrow\\quad\nk^2=\\frac{\\pi^2}{16},\n\\quad k=\\frac{\\pi}{4}.$$\n3. 当$k=\\pi/4$时，边界条件为\n$$u(0)=\\tan(0)=0,\\quad\nu(1)=\\tan\\!\\bigl(\\tfrac{\\pi}{4}\\bigr)=1.$$\n4. 初始斜率为\n$$s=u'(0)=k\\sec^2(0)=k=\\frac{\\pi}{4}.$$", "answer": "$$\\boxed{\\frac{\\pi}{4}}$$", "id": "558739"}, {"introduction": "在第一个练习中我们成功找到了一个唯一的“打靶角度”，但如果任何我们尝试的初始斜率都能击中目标，情况又会如何呢？这并非是方法的失败，反而揭示了问题背后深刻的数学结构。这个练习 [@problem_id:3192307] 探讨了一个特殊的线性边值问题，它恰好构成一个本征值问题。通过分析，你将理解为何在这种情况下，初始斜率$s$会变得无关紧要，以及这一现象与微分算子的本征函数之间存在的深刻联系。", "problem": "考虑在区间$[0,\\pi]$上的一个二阶线性常微分方程 (ODE) 的两点边值问题 (BVP)：$y'' + y = 0$，其狄利克雷 (Dirichlet) 边界条件为$y(0) = 0$和$y(\\pi) = 0$。在打靶法中，通过选择一个初始斜率（打靶角度）$s = y'(0)$，将该 BVP 转换为一个初值问题 (IVP)，并从$x = 0$向前积分到$x = \\pi$，以检验终端边界条件。根据控制方程、其线性性质以及在这些边界条件下的解的结构，判断下列哪些陈述是正确的：\n\nA. 对于任意实数打靶角度$s = y'(0)$，该 IVP 的解都满足$y(\\pi) = 0$，因此无论$s$取何值，在$x = \\pi$处的边界条件都得到满足。\n\nB. 仅当$s = 0$时，在$x = \\pi$处的边界条件才得到满足。\n\nC. $s$的无关性是由于组合$\\{y'' + y = 0,\\, y(0) = 0,\\, y(\\pi) = 0\\}$构成了一个特征值问题，其中$\\lambda = 1$是在$[0,\\pi]$上的一个特征值，其产生的特征函数与$\\sin x$成正比，并在两个边界上自动为零。\n\nD. 如果定义打靶残差$R(s) = y(\\pi; s) - 0$并对$s$应用牛顿法更新，那么$\\mathrm{d}R/\\mathrm{d}s$恒等于$0$，因此更新步骤无法改变$s$。\n\nE. 对于任意小的正数$\\varepsilon$，将$y'' + y$替换为$y'' + (1 + \\varepsilon)y$后，对于所有$s$，$y(\\pi; s) = 0$的性质仍然保持。\n\nF. 满足两个边界条件的函数空间是一维的，由$\\{A \\sin x : A \\in \\mathbb{R}\\}$给出，因此$s$扮演了自由振幅参数的角色。\n\n选择所有正确选项。", "solution": "用户希望我扮演一位严谨的STEM教授，验证所给的问题陈述，然后通过评估每个选项来解决它。\n\n### 问题验证\n\n**第1步：提取已知条件**\n\n-   **控制方程**：二阶线性常微分方程 (ODE)：$y'' + y = 0$。\n-   **定义域**：区间 $[0, \\pi]$。\n-   **边界条件 (BCs)**：狄利克雷边界条件 $y(0) = 0$ 和 $y(\\pi) = 0$。\n-   **打靶法设置**：边值问题 (BVP) 被转换为初值问题 (IVP)。\n-   **IVP的初始条件 (ICs)**：$y(0) = 0$ 和一个初始斜率（打靶角度）$s = y'(0)$。\n-   **目标**：确定 IVP 的解 $y(x; s)$ 的性质，特别是关于在 $x = \\pi$ 处的终端边界条件的性质。\n\n**第2步：使用提取的已知条件进行验证**\n\n-   **科学依据**：该问题是常微分方程理论和数值分析中的一个经典例子。方程 $y'' + y = 0$ 代表一个简谐振子。打靶法是求解 BVP 的标准技术。与特征值问题（特别是 Sturm-Liouville 理论）的联系是一个基本概念。该问题在科学上是合理的。\n-   **适定性**：BVP 本身 ($y''+y=0, y(0)=0, y(\\pi)=0$) 是一个齐次问题。已知此类问题要么只有平凡解，要么有无穷多个解。这个 BVP 具有非唯一解这一事实是问题的核心，问题要求我们分析这一特性对打靶法的影响。关于这个特定BVP所提出的问题是定义明确的，旨在探究对这种特殊情况的理解。\n-   **目标**：问题使用精确的数学语言陈述，没有歧义或主观内容。\n\n**第3步：结论与行动**\n\n问题陈述是有效的。这是一个关于一个特定的、概念上很重要的 BVP 的适定问题，它突出了打靶法的一种特殊行为。我将继续进行求解。\n\n### 求解推导\n\n打靶法的核心是求解由 ODE 和初始条件定义的 IVP。\nODE 是：\n$$y'' + y = 0$$\n初始条件是：\n$$y(0) = 0$$\n$$y'(0) = s$$\n这是一个二阶线性齐次常系数 ODE。其特征方程是 $r^2 + 1 = 0$，根为 $r = \\pm i$。\n通解的形式为：\n$$y(x) = C_1 \\cos(x) + C_2 \\sin(x)$$\n我们应用初始条件来求出常数 $C_1$ 和 $C_2$。\n由 $y(0) = 0$ 可得：\n$$y(0) = C_1 \\cos(0) + C_2 \\sin(0) = C_1 \\cdot 1 + C_2 \\cdot 0 = C_1$$\n所以，$C_1 = 0$。解简化为 $y(x) = C_2 \\sin(x)$。\n\n接下来，我们使用第二个初始条件 $y'(0) = s$。首先，我们求 $y(x)$ 的导数：\n$$y'(x) = C_2 \\cos(x)$$\n现在，应用在 $x=0$ 处的条件：\n$$y'(0) = C_2 \\cos(0) = C_2 \\cdot 1 = C_2$$\n所以，$C_2 = s$。\n\n将 $C_1$ 和 $C_2$ 的值代回通解，我们得到对于给定打靶角度 $s$ 的 IVP 的唯一解：\n$$y(x; s) = s \\sin(x)$$\n现在，我们必须检查该解是否满足终端边界条件 $y(\\pi) = 0$。我们将解在 $x = \\pi$ 处进行求值：\n$$y(\\pi; s) = s \\sin(\\pi) = s \\cdot 0 = 0$$\n这个结果表明，对于打靶参数 $s$ 的**任何**实数值，终端边界条件 $y(\\pi) = 0$ 都得到满足。这是一个特殊情况，打靶法无法得出唯一的 $s$ 值，因为任何 $s$ 值都会导向该 BVP 的一个解。\n\n### 逐项分析\n\n**A. 对于任意实数打靶角度 $s = y'(0)$，该 IVP 的解都满足 $y(\\pi) = 0$，因此无论 $s$ 取何值，在 $x = \\pi$ 处的边界条件都得到满足。**\n我们的推导表明，对于任意实数 $s$，$y(\\pi; s) = s \\sin(\\pi) = 0$。这个陈述是 IVP 解的一个直接而准确的结论。\n**结论：正确**\n\n**B. 仅当 $s = 0$ 时，在 $x = \\pi$ 处的边界条件才得到满足。**\n这个陈述与我们的发现相矛盾，即对于所有实数 $s$，边界条件都得到满足。$s=0$ 的情况产生平凡解 $y(x) = 0$，它满足边界条件，但任何非零的 $s$ 也会产生一个有效的非平凡解，例如当 $s=1$ 时，$y(x) = \\sin(x)$。\n**结论：不正确**\n\n**C. $s$ 的无关性是由于组合 $\\{y'' + y = 0,\\, y(0) = 0,\\, y(\\pi) = 0\\}$ 构成了一个特征值问题，其中 $\\lambda = 1$ 是在 $[0,\\pi]$ 上的一个特征值，其产生的特征函数与 $\\sin x$ 成正比，并在两个边界上自动为零。**\n我们将该 BVP 作为一个形式为 $-y'' = \\lambda y$ 且满足 $y(0)=0$ 和 $y(\\pi)=0$ 的 Sturm-Liouville 特征值问题来分析。我们的 ODE $y''+y=0$ 可以写成 $-y'' = 1 \\cdot y$，所以我们正在检验 $\\lambda=1$ 是否是一个特征值。对于 $-y'' = \\lambda y$，通解是 $y(x) = A \\cos(\\sqrt{\\lambda}x) + B \\sin(\\sqrt{\\lambda}x)$。应用 $y(0)=0$ 得到 $A=0$。解为 $y(x) = B \\sin(\\sqrt{\\lambda}x)$。应用 $y(\\pi)=0$ 得到 $B \\sin(\\sqrt{\\lambda}\\pi) = 0$。为了得到非平凡解（$B \\neq 0$），我们需要 $\\sin(\\sqrt{\\lambda}\\pi) = 0$，这意味着 $\\sqrt{\\lambda}\\pi = n\\pi$，其中 $n$ 是一个大于等于 1 的整数。特征值为 $\\lambda_n = n^2$。当 $n=1$ 时，我们得到特征值 $\\lambda_1 = 1$，对应的特征函数为 $\\sin(x)$。给定的 BVP 正好对应这种情况。任何解都必须是特征函数的倍数，即 $y(x) = A \\sin(x)$。我们的 IVP 解 $y(x;s) = s \\sin(x)$ 正是这种形式。$s$ 的无关性在于特征函数的任何倍数都是一个有效的解，因此没有唯一的非平凡解可供确定。这个陈述正确地指出了所观察到行为的根本原因。\n**结论：正确**\n\n**D. 如果定义打靶残差 $R(s) = y(\\pi; s) - 0$ 并对 $s$ 应用牛顿法更新，那么 $\\mathrm{d}R/\\mathrm{d}s$ 恒等于 $0$，因此更新步骤无法改变 $s$。**\n残差函数是 $R(s) = y(\\pi; s) = s \\sin(\\pi) = 0$。由于 $R(s)$ 是常数函数 $0$，它关于 $s$ 的导数也恒等于 $0$：$\\frac{\\mathrm{d}R}{\\mathrm{d}s} = 0$。用于寻找 $R(s)=0$ 根的牛顿法需要更新步骤 $s_{k+1} = s_k - R(s_k) / (\\mathrm{d}R/\\mathrm{d}s)$。在我们的情况下，这变成了 $s_{k+1} = s_k - 0/0$，这是一个未定义的表达式。因此，该方法失效，无法产生新的 $s$ 值。这个陈述准确地描述了这种失效情况。\n**结论：正确**\n\n**E. 对于任意小的正数 $\\varepsilon$，将 $y'' + y$ 替换为 $y'' + (1 + \\varepsilon)y$ 后，对于所有 $s$，$y(\\pi; s) = 0$ 的性质仍然保持。**\n让我们考虑微扰问题 $y'' + (1 + \\varepsilon)y = 0$，其中 $\\varepsilon > 0$。令 $\\omega^2 = 1+\\varepsilon$。通解为 $y(x) = C_1 \\cos(\\omega x) + C_2 \\sin(\\omega x)$。应用 IVP 条件 $y(0)=0$ 和 $y'(0)=s$，我们得到 $C_1=0$ 和 $C_2 = s/\\omega$。解为 $y(x; s) = \\frac{s}{\\omega} \\sin(\\omega x)$。在 $x=\\pi$ 处，我们有 $y(\\pi; s) = \\frac{s}{\\sqrt{1+\\varepsilon}} \\sin(\\pi\\sqrt{1+\\varepsilon})$。要使该式对所有 $s$ 都为零，我们需要 $\\sin(\\pi\\sqrt{1+\\varepsilon}) = 0$。这意味着 $\\sqrt{1+\\varepsilon}$ 必须是一个整数。但对于小的正数 $\\varepsilon$，$\\sqrt{1+\\varepsilon}$ 是一个略大于 1 但不是整数的数。因此，$\\sin(\\pi\\sqrt{1+\\varepsilon}) \\neq 0$。因此，$y(\\pi; s) = 0$ 仅当 $s=0$ 时成立。该性质没有被保留。\n**结论：不正确**\n\n**F. 满足两个边界条件的函数空间是一维的，由 $\\{A \\sin x : A \\in \\mathbb{R}\\}$ 给出，因此 $s$ 扮演了自由振幅参数的角色。**\n如选项 C 的分析所示，任何满足 BVP ($y''+y=0, y(0)=0, y(\\pi)=0$) 的函数都必须具有形式 $y(x) = A \\sin(x)$，其中 $A$ 是某个实常数。这个函数集合是由单个函数 $\\sin(x)$ 张成的向量空间，因此它是一维的。我们发现 IVP（打靶问题）的解是 $y(x; s) = s \\sin(x)$。通过比较这两种形式，我们看到打靶参数 $s$ 与振幅参数 $A$ 是相同的。由于 $A$ 可以是任何实数，所以 $s$ 是一个自由参数。这个陈述清晰而正确地描述了解空间的结构和 $s$ 的作用。\n**结论：正确**", "answer": "$$\\boxed{ACDF}$$", "id": "3192307"}, {"introduction": "在建立了坚实的理论基础后，是时候运用数值工具来应对一个更贴近实际的挑战了。这个综合性练习 [@problem_id:3192271] 将引导你完整地解决一个无法轻易徒手求解的非线性边值问题。你将首先进行定性分析，以预测解的行为特征，然后将这些理论洞察转化为一个完整的数值实现，最终掌握使用现代编程工具，结合数值积分与求根算法来求解复杂边值问题的全过程。", "problem": "考虑在区间$[0,1]$上标量函数$y(x)$的边值问题 (BVP)，该问题由二阶常微分方程$y''(x)=y(x)^3$和边界条件$y(0)=0$及$y(1)=B$给出，其中$B$是一个实数参数。打靶法将此 BVP 转化为求解一个初值问题，该问题具有未知的初始斜率$s=y'(0)$，并定义了一个残差映射$F(s)=y(1;s)-B$，其中$y(x;s)$表示初值问题$y''=y^3$, $y(0)=0$, $y'(0)=s$的解。BVP 的一个解对应于$F(s)=0$的一个根。从常微分方程和打靶法的基本定义出发，并利用微积分中经过充分检验的事实（能量积分和从可分离形式导出的单调性），推导非线性方程$y''=y^3$的映射$s\\mapsto y(1;s)$的定性行为。特别地，讨论对于一个固定的$B$，是否可以有多个不同的$s$值满足$y(1)=B$，并探讨一个鲁棒的求根算法如何处理可能的多解分支。\n\n您的程序必须：\n- 通过数值积分求解初值问题$y'(x)=v(x)$, $v'(x)=y(x)^3$（其中$y(0)=0$和$v(0)=s$）直到$x=1$，并计算$F(s)=y(1;s)-B$，来实现打靶法。\n- 使用一个基于区间套的求根器来求解$F(s)=0$以得到$s$，自适应地扩展区间以确保存在符号变化。\n- 对于下面指定的每个测试用例，计算满足$x=1$处边界条件的初始斜率$s$的数值近似值。\n\n此问题不涉及物理单位。未使用角度。所有数值答案必须是浮点数。\n\n测试套件：\n1. $B=0$（边界情况）。\n2. $B=0.5$（正幅值，一般情况）。\n3. $B=-0.5$（负幅值，对称分支）。\n4. $B=2.0$（较大的正幅值）。\n5. $B=-2.0$（较大的负幅值）。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含五个测试用例计算出的$s$值，格式为一个由方括号括起来的逗号分隔列表，每个值四舍五入到六位小数（例如，$s_1,s_2,s_3,s_4,s_5$）。", "solution": "用户提供了一个问题，要求对一个边值问题 (BVP) 进行定性分析，并使用打靶法进行数值求解。我将首先验证问题陈述。\n\n### 第 1 步：提取已知条件\n-   **控制方程**：二阶常微分方程 (ODE) $y''(x)=y(x)^3$。\n-   **定义域**：$x \\in [0,1]$。\n-   **边界条件 (BCs)**：$y(0)=0$ 和 $y(1)=B$，其中 $B$ 是一个实数参数。\n-   **打靶法表述**：\n    -   BVP 通过引入一个未知的初始斜率 $s = y'(0)$ 转换为一个初值问题 (IVP)。\n    -   等效的 IVP 是：$y''=y^3$，初始条件为 $y(0)=0$ 和 $y'(0)=s$。\n    -   定义残差映射为 $F(s)=y(1;s)-B$，其中 $y(x;s)$ 是给定 $s$ 的 IVP 的解。\n    -   BVP 的解对应于找到一个根 $s$ 使得 $F(s)=0$。\n-   **分析要求**：推导映射 $s \\mapsto y(1;s)$ 的定性行为，包括多解的可能性及其对求根的影响。\n-   **测试套件**：为五个测试用例给出了参数 $B$：$0, 0.5, -0.5, 2.0, -2.0$。\n\n### 第 2 步：使用提取的已知条件进行验证\n1.  **科学基础（关键）**：该问题基于常微分方程的成熟理论和标准数值方法（打靶法）。方程 $y''=y^3$ 是非线性 Emden-Fowler 方程的一个特例，这是一类被广泛研究的方程。该问题在科学上是合理的。\n2.  **适定的**：该问题要求进行定性分析和数值求解。下面的定性分析将证明，对于任何给定的 $B$，都存在唯一的 $s$ 解，这使得求根问题是适定的。\n3.  **客观性（关键）**：问题陈述使用了精确的数学语言和定义，没有主观或模糊的术语。\n4.  **完整性**：所有必要信息（ODE、边界条件和打靶法的定义）都已提供，足以进行分析和开发数值解。该问题是自洽的。\n\n### 第 3 步：结论与行动\n该问题是有效的。它是计算科学中一个明确定义的任务，涉及理论分析和数值实现。我现在将着手提供完整的解决方案。\n\n---\n\n### 基于原理的解决方案\n\n任务是求解在区间 $x \\in [0, 1]$ 上的边值问题 $y''(x) = y(x)^3$，边界条件为 $y(0)=0$ 和 $y(1)=B$。问题的核心在于理解打靶函数的性质，该函数将初始斜率 $s=y'(0)$ 映射到终点位置 $y(1;s)$。\n\n#### 映射 $s \\mapsto y(1;s)$ 的定性分析\n\n令 $g(s) = y(1;s)$ 为我们希望分析的映射。\n\n**1. 能量积分和符号行为**\n我们可以通过乘以 $y'$ 来推导 ODE $y'' = y^3$ 的运动第一积分：\n$$ y'(x) y''(x) = y(x)^3 y'(x) $$\n关于 $x$ 从 $0$ 到 $x$ 积分得到：\n$$ \\int_0^x \\frac{d}{d\\tau}\\left(\\frac{1}{2}(y'(\\tau))^2\\right) d\\tau = \\int_0^x \\frac{d}{d\\tau}\\left(\\frac{1}{4}y(\\tau)^4\\right) d\\tau $$\n应用微积分基本定理和初始条件 $y(0)=0$ 及 $y'(0)=s$：\n$$ \\frac{1}{2}(y'(x))^2 - \\frac{1}{2}(y'(0))^2 = \\frac{1}{4}y(x)^4 - \\frac{1}{4}y(0)^4 $$\n$$ \\frac{1}{2}(y'(x))^2 - \\frac{1}{2}s^2 = \\frac{1}{4}y(x)^4 - 0 $$\n这给出了“能量守恒”定律：\n$$ (y'(x))^2 = \\frac{1}{2}y(x)^4 + s^2 $$\n根据这个关系，我们可以推断解 $y(x;s)$ 的符号：\n-   如果 $s=0$，方程变为 $(y')^2 = \\frac{1}{2}y^4$。在初始条件 $y(0)=0, y'(0)=0$ 下，唯一解是平凡解：对于所有 $x$，$y(x;0) = 0$。因此，$g(0) = y(1;0) = 0$。\n-   如果 $s > 0$，则 $y'(0) > 0$。右侧 $\\frac{1}{2}y^4 + s^2$ 始终为正。因此，$y'(x)$ 永远不可能为零，并且必须保持其初始的正号。所以，对于 $s>0$，$y'(x)>0$ 对所有 $x$ 成立。由于 $y(0)=0$，函数 $y(x)$ 是严格递增的，这意味着对于 $x>0$，$y(x;s) > 0$。因此，$g(s) = y(1;s) > 0$。\n-   如果 $s  0$，则 $y'(0)  0$。类似地，$y'(x)$ 必须保持为负。函数 $y(x)$ 是严格递减的，这意味着对于 $x>0$，$y(x;s)  0$。因此，$g(s) = y(1;s)  0$。\n\n总之，函数 $g(s)$ 是保号的：$g(s)$ 与 $s$ 具有相同的符号。\n\n**2. 单调性和解的唯一性**\n为了确定是否多个 $s$ 值可以导致相同的 $y(1)=B$，我们分析 $g(s)$ 的导数，即 $g'(s) = \\frac{d}{ds}y(1;s)$。令 $z(x;s) = \\frac{\\partial y}{\\partial s}(x;s)$。我们可以通过对原始 IVP 关于 $s$ 求导来找到控制 $z$ 的微分方程：\n-   ODE: $\\frac{\\partial}{\\partial s}(y'' - y^3) = 0 \\implies z'' - 3y^2 z = 0$，所以 $z''(x) = 3y(x;s)^2 z(x)$。\n-   IC 1: $z(0) = \\frac{\\partial}{\\partial s}y(0;s) = \\frac{\\partial}{\\partial s}(0) = 0$。\n-   IC 2: $z'(0) = \\frac{\\partial}{\\partial s}y'(0;s) = \\frac{\\partial}{\\partial s}(s) = 1$。\n\n这是一个关于 $z(x)$ 的线性、齐次、二阶 ODE。系数 $q(x) = 3y(x;s)^2$ 始终为非负。由于 $z(0)=0$ 和 $z'(0)=1$，$z(x)$ 从零开始增加。对于 $x > 0$ 且 $z(x)>0$ 的情况，项 $z''(x) = q(x)z(x)$ 必须为非负，这表明 $z(x)$ 是凸的。一个从 $0$ 开始且具有正斜率的凸函数对于所有 $x>0$ 必保持为正。因此，对于所有 $x > 0$，$z(x;s) > 0$。\n特别地，在 $x=1$ 处，我们有 $g'(s) = z(1;s) > 0$。由于 $g(s)$ 的导数始终为正，函数 $g(s)=y(1;s)$ 在其定义域内的所有 $s$ 上都是严格递增的。\n\n**结论**：对于任何实数 $B$，方程 $y(1;s)=B$ 最多只有一个 $s$ 的解。不存在多解分支。这极大地简化了求根任务。\n\n**3. 有限时间爆破和鲁棒求根**\n能量积分的可分离形式，$y' = \\sqrt{\\frac{1}{2}y^4+s^2}$（对于 $s>0$），可以写为 $dx = \\frac{dy}{\\sqrt{\\frac{1}{2}y^4+s^2}}$。达到状态 $y$ 所需的时间 $x$ 是 $x(y) = \\int_0^y \\frac{d\\tilde{y}}{\\sqrt{\\frac{1}{2}\\tilde{y}^4+s^2}}$。到 $y \\to \\infty$ 的积分收敛于一个有限值 $x_{bu}(s)$，这意味着解在有限的 $x$ 处爆破至无穷大。$|s|$ 越大，$y$ 增长越快，$x_{bu}(s)$ 就越小。\n这意味着存在一个临界值 $|s_{crit}|$ 使得 $x_{bu}(|s_{crit}|)=1$。对于任何 $|s| \\ge |s_{crit}|$，IVP 的解在 $x=1$ 或之前变为无穷大。因此，我们的映射 $g(s)$ 的定义域是开区间 $(-s_{crit}, s_{crit})$。在这个定义域内，$g(s)$ 从 $-\\infty$ 到 $+\\infty$ 严格递增。\n这证明了对于任何有限的 $B$，都存在唯一一个 $s$ 值满足 $y(1;s)=B$。\n\n一个鲁棒的求根算法不应担心多重根，而应关注 $g(s)$ 的有限定义域。由于已证明的单调性，区间套法（如二分法或 Brent 方法）是理想的选择。主要的挑战是找到一个位于 $(-s_{crit}, s_{crit})$ 内的初始区间 $[s_a, s_b]$。对区间的自适应搜索必须能正确解释数值 ODE 积分器的失败（如果试验的 $s$ 在定义域之外，就会发生这种情况），这表明 $y(1;s)$ 实际上是无穷大，从而有助于界定根的范围。\n\n**4. 对称性**\n令 $u(x)$ 为 $u''=u^3, u(0)=0, u'(0)=-s$ 的解。令 $v(x) = -u(x)$。那么 $v(0)=0$，$v'(0)=-u'(0)=s$。并且 $v''(x) = -u''(x) = -u^3(x) = -(-v(x))^3 = v^3(x)$。所以 $v(x)$ 解的是与 $y(x;s)$ 相同的 IVP。根据唯一性，$y(x;s)=v(x)=-u(x)$。由于根据定义 $u(x)$ 是 $y(x;-s)$，我们得到恒等式 $y(x;s) = -y(x;-s)$。在 $x=1$ 处，这得到 $g(s) = -g(-s)$，表明 $g(s)$ 是一个奇函数。这意味着如果 $s_B$ 是 $y(1)=B$ 的解，那么 $-s_B$ 就是 $y(1)=-B$ 的解。\n\n#### 数值实现\n基于此分析，数值方法如下：\n1.  将二阶 ODE 表示为一个一阶 ODE 组：令 $\\mathbf{u} = [y, v]^T = [y, y']^T$。则 $\\mathbf{u}' = [v, y^3]^T$。初始条件为 $\\mathbf{u}(0) = [0, s]^T$。\n2.  对于给定的 $B$，定义残差函数 $F(s) = y(1;s) - B$。该函数使用数值积分器（例如 `scipy.integrate.solve_ivp`）来计算 $y(1;s)$。\n3.  实现一个自适应的区间搜索。对于 $B>0$，我们知道 $s>0$。我们可以将区间的一端固定在 $s_a=0$（其中 $F(0, B) = -B  0$），并搜索一个 $s_b > 0$ 使得 $F(s_b, B) > 0$。搜索必须能处理积分失败的情况，这表明 $s_b$ 超出了爆破点，可以作为上界。对于 $B0$，也采用类似的策略。\n4.  使用一个鲁棒的区间套求根器，如 Brent 方法（`scipy.optimize.root_scalar` 使用 `method='brentq'`），在确定的区间内找到唯一的根。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\nfrom scipy.optimize import root_scalar\n\ndef solve():\n    \"\"\"\n    Computes the initial slope 's' for a BVP using the shooting method\n    for several boundary values 'B'.\n    \"\"\"\n    test_cases = [0.0, 0.5, -0.5, 2.0, -2.0]\n    results = []\n\n    for B in test_cases:\n        # For the trivial boundary condition B=0, the solution is y(x)=0,\n        # which corresponds to an initial slope s=0.\n        if B == 0.0:\n            results.append(0.0)\n            continue\n\n        def residual_map(s, B_val):\n            \"\"\"\n            Computes the residual F(s) = y(1;s) - B.\n            This function defines the shooting problem to be solved.\n            \"\"\"\n            # For s=0, we know y(1;0)=0 without integration.\n            if s == 0.0:\n                y_at_1 = 0.0\n            else:\n                # Define the ODE system for the integrator.\n                # Let u = [y, y'], so u' = [y', y''] = [y', y^3].\n                def ode_system(t, u):\n                    return [u[1], u[0]**3]\n\n                u0 = [0.0, s]  # Initial conditions: y(0)=0, y'(0)=s\n                t_span = [0.0, 1.0]\n\n                # Numerically integrate the IVP from x=0 to x=1.\n                sol = solve_ivp(\n                    ode_system,\n                    t_span,\n                    u0,\n                    method='RK45',\n                    atol=1e-9,  # Use tight tolerances for accuracy.\n                    rtol=1e-9,\n                    max_step=0.01  # Prevent solver from stepping over singularity.\n                )\n                \n                # If integration fails, it implies a finite-time blow-up.\n                # We treat y(1) as infinite, helping to bound the root.\n                if sol.status != 0:\n                    return np.sign(s) * np.inf\n                \n                y_at_1 = sol.y[0, -1]\n\n            return y_at_1 - B_val\n\n        # --- Adaptive Bracketing Strategy ---\n        # Based on the qualitative analysis, s must have the same sign as B.\n        s_a, s_b = None, None\n        \n        if B  0:\n            # We need an s  0. The bracket will be [0, s_b].\n            # F(0, B) = -B  0.\n            s_a = 0.0\n            s_b_guess = 0.1  # Start with a small positive guess for s.\n            max_iter = 20\n            for _ in range(max_iter):\n                f_b = residual_map(s_b_guess, B)\n                # Success if f_b is positive (or +inf, meaning we passed the blow-up point).\n                if f_b  0:\n                    s_b = s_b_guess\n                    break\n                s_b_guess *= 2.0  # Expand the search interval.\n            else:\n                raise RuntimeError(f\"Could not find an upper bracket for B={B}\")\n        \n        else:  # B  0\n            # We need an s  0. The bracket will be [s_a, 0].\n            # F(0, B) = -B  0.\n            s_b = 0.0\n            s_a_guess = -0.1 # Start with a small negative guess for s.\n            max_iter = 20\n            for _ in range(max_iter):\n                f_a = residual_map(s_a_guess, B)\n                # Success if f_a is negative (or -inf).\n                if f_a  0:\n                    s_a = s_a_guess\n                    break\n                s_a_guess *= 2.0\n            else:\n                raise RuntimeError(f\"Could not find a lower bracket for B={B}\")\n        \n        # Use a robust bracketing root-finder (Brent's method).\n        sol_root = root_scalar(residual_map, args=(B,), bracket=[s_a, s_b], method='brentq')\n        results.append(sol_root.root)\n\n    # Format and print the final output as a single-line list.\n    print(f\"[{','.join([f'{r:.6f}' for r in results])}]\")\n\nsolve()\n\n```", "id": "3192271"}]}