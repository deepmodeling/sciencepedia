{"hands_on_practices": [{"introduction": "在深入研究复杂的计算之前，建立关于本征正交分解（POD）真正含义的直觉至关重要。第一个练习 [@problem_id:3265917] 使用一个简单的低维例子来探讨一个基本概念：数据快照的分布如何直接影响最终的“最优”基向量。通过观察复制单个快照所带来的影响，您将更深刻地理解POD的数据驱动特性。", "problem": "考虑一个快照矩阵 $X \\in \\mathbb{R}^{2 \\times 2}$，其列是快照 $x_1$ 和 $x_2$，由下式给出：\n$$\nx_1=\\begin{bmatrix}1\\\\0\\end{bmatrix},\\qquad x_2=\\begin{bmatrix}1\\\\1\\end{bmatrix}.\n$$\n通过将 $x_1$ 复制一次，形成一个新的快照矩阵 $X' \\in \\mathbb{R}^{2 \\times 3}$：\n$$\nX'=\\begin{bmatrix}1  1  1 \\\\ 0  1  0\\end{bmatrix}=\\begin{bmatrix}x_1  x_2  x_1\\end{bmatrix}.\n$$\n根据定义，$X$ 的奇异值分解 (Singular Value Decomposition, SVD) 为 $X=U\\Sigma V^\\top$，其中 $U \\in \\mathbb{R}^{2 \\times 2}$ 是标准正交矩阵，$\\Sigma \\in \\mathbb{R}^{2 \\times 2}$ 是对角元非负（即奇异值）的对角矩阵，$V \\in \\mathbb{R}^{2 \\times 2}$ 是标准正交矩阵。本征正交分解 (Proper Orthogonal Decomposition, POD) 模态是 $U$ 的列，等价于经验相关矩阵 $C=XX^\\top$ 的特征向量。对于 $X'$ 及其对应的 $C'=X'X'^\\top$ 也是如此。\n\n仅使用这些定义和第一性原理（正交性、特征值问题和基础线性代数），判断对于上面定义的矩阵 $X$ 和 $X'$，下列哪些陈述是正确的。\n\nA. $X'$ 的秩等于 $2$，与 $X$ 的秩相同。\n\nB. $X'$ 的主本征正交分解 (POD) 模态恰好是归一化的快照 $x_1/\\|x_1\\|$。\n\nC. 相对于 $X$，$X'$ 的两个奇异值都更大。\n\nD. $X'$ 的有序奇异值是 $\\sqrt{2+\\sqrt{2}}$ 和 $\\sqrt{2-\\sqrt{2}}$。\n\nE. 由于列空间未改变，$X$ 和 $X'$ 的所有左奇异向量（POD模态）都相同（最多相差一个符号）。\n\n选择所有适用的选项。", "solution": "该问题陈述在科学上是合理的、定义明确且客观的。所有提供的信息都是自洽且一致的。该问题是关于奇异值分解 (SVD) 和本征正交分解 (POD) 的一个标准线性代数练习。因此，该问题是有效的，将进行完整的推导和分析。\n\n快照矩阵由下式给出：\n$$\nX = \\begin{bmatrix}x_1  x_2\\end{bmatrix} = \\begin{bmatrix}1  1 \\\\ 0  1\\end{bmatrix} \\in \\mathbb{R}^{2 \\times 2}\n$$\n和\n$$\nX' = \\begin{bmatrix}x_1  x_2  x_1\\end{bmatrix} = \\begin{bmatrix}1  1  1 \\\\ 0  1  0\\end{bmatrix} \\in \\mathbb{R}^{2 \\times 3}\n$$\nPOD模态是快照矩阵的左奇异向量，其定义为经验相关矩阵的特征向量。对于 $X$，该矩阵是 $C = XX^\\top$。对于 $X'$，该矩阵是 $C' = X'X'^\\top$。奇异值是对应特征值的平方根。\n\n我们来计算相关矩阵 $C$ 和 $C'$。\n$$\nC = XX^\\top = \\begin{bmatrix}1  1 \\\\ 0  1\\end{bmatrix} \\begin{bmatrix}1  0 \\\\ 1  1\\end{bmatrix} = \\begin{bmatrix}(1)(1)+(1)(1)  (1)(0)+(1)(1) \\\\ (0)(1)+(1)(1)  (0)(0)+(1)(1)\\end{bmatrix} = \\begin{bmatrix}2  1 \\\\ 1  1\\end{bmatrix}\n$$\n$$\nC' = X'X'^\\top = \\begin{bmatrix}1  1  1 \\\\ 0  1  0\\end{bmatrix} \\begin{bmatrix}1  0 \\\\ 1  1 \\\\ 1  0\\end{bmatrix} = \\begin{bmatrix}(1)(1)+(1)(1)+(1)(1)  (1)(0)+(1)(1)+(1)(0) \\\\ (0)(1)+(1)(1)+(0)(1)  (0)(0)+(1)(1)+(0)(0)\\end{bmatrix} = \\begin{bmatrix}3  1 \\\\ 1  1\\end{bmatrix}\n$$\n现在我们逐一评估每个陈述。\n\n**A. $X'$ 的秩等于 $2$，与 $X$ 的秩相同。**\n\n矩阵的秩是其列空间的维度，也就是线性无关列的数量。\n对于矩阵 $X = \\begin{bmatrix}1  1 \\\\ 0  1\\end{bmatrix}$，我们可以计算它的行列式：$\\det(X) = (1)(1) - (1)(0) = 1$。由于行列式非零，该矩阵可逆，其列是线性无关的。因此，$X$ 的秩为 $2$。\n对于矩阵 $X' = \\begin{bmatrix}1  1  1 \\\\ 0  1  0\\end{bmatrix}$，其列为 $c_1 = \\begin{bmatrix}1 \\\\ 0\\end{bmatrix}$、$c_2 = \\begin{bmatrix}1 \\\\ 1\\end{bmatrix}$ 和 $c_3 = \\begin{bmatrix}1 \\\\ 0\\end{bmatrix}$。由于 $c_3 = c_1$，列的集合是 $\\{c_1, c_2\\}$。向量 $c_1$ 和 $c_2$ 不是彼此的标量倍数，所以它们是线性无关的。$X'$ 的列空间由这两个向量张成，所以其维度是 $2$。\n因此，$X'$ 的秩为 $2$。\n该陈述声称 $X'$ 的秩等于 $2$，与 $X$ 的秩相同。这是正确的。\n\n**A的结论：正确。**\n\n**E. 由于列空间未改变，$X$ 和 $X'$ 的所有左奇异向量（POD模态）都相同（最多相差一个符号）。**\n\nPOD模态是相关矩阵 $C$ 和 $C'$ 的特征向量。我们有 $C = \\begin{bmatrix}2  1 \\\\ 1  1\\end{bmatrix}$ 和 $C' = \\begin{bmatrix}3  1 \\\\ 1  1\\end{bmatrix}$。\n由于 $C \\neq C'$，它们的特征向量预计不会相同。让我们为每个矩阵找到一个特征向量来验证。\n对于 $C'$，我们寻找对应于特征值 $\\mu$ 的特征向量 $u'$。\n$(C' - \\mu I)u' = \\begin{bmatrix}3-\\mu  1 \\\\ 1  1-\\mu\\end{bmatrix} \\begin{bmatrix}u'_1 \\\\ u'_2\\end{bmatrix} = \\begin{bmatrix}0 \\\\ 0\\end{bmatrix}$。\n第一行给出 $(3-\\mu)u'_1 + u'_2 = 0$。\n对于 $C$，我们寻找对应于特征值 $\\lambda$ 的特征向量 $u$。\n$(C - \\lambda I)u = \\begin{bmatrix}2-\\lambda  1 \\\\ 1  1-\\lambda\\end{bmatrix} \\begin{bmatrix}u_1 \\\\ u_2\\end{bmatrix} = \\begin{bmatrix}0 \\\\ 0\\end{bmatrix}$。\n第一行给出 $(2-\\lambda)u_1 + u_2 = 0$。\n如果特征向量相同，那么在相差一个缩放因子的情况下，我们应有 $u_1=u'_1$ 和 $u_2=u'_2$。这将意味着 $(3-\\mu)u_1 = (2-\\lambda)u_1$，即 $3-\\mu = 2-\\lambda$（假设 $u_1 \\neq 0$）。这通常不成立。例如，如选项D中所计算的，$C'$ 的特征值是 $\\mu = 2 \\pm \\sqrt{2}$，而 $C$ 的特征值是 $\\lambda = (3 \\pm \\sqrt{5})/2$。特征值不同，因此特征向量也不同。$C'$ 的主特征向量与 $\\begin{bmatrix}1 \\\\ \\sqrt{2}-1\\end{bmatrix}$ 成比例，而 $C$ 的主特征向量与 $\\begin{bmatrix}1 \\\\ (\\sqrt{5}-1)/2\\end{bmatrix}$ 成比例。这些不相同。\n“因为列空间未改变”这个理由是不正确的。虽然POD模态必须构成列空间的一组标准正交基，但它们的具体方向是由该空间内数据（快照）的分布决定的。添加一个重复的快照会加强该快照的方向，从而改变方差的主方向。\n\n**E的结论：不正确。**\n\n**D. $X'$ 的有序奇异值是 $\\sqrt{2+\\sqrt{2}}$ 和 $\\sqrt{2-\\sqrt{2}}$。**\n\n$X'$ 的奇异值是 $C' = X'X'^\\top = \\begin{bmatrix}3  1 \\\\ 1  1\\end{bmatrix}$ 的特征值的平方根。\n特征方程是 $\\det(C' - \\mu I) = 0$。\n$$\n\\det\\begin{pmatrix}3-\\mu  1 \\\\ 1  1-\\mu\\end{pmatrix} = (3-\\mu)(1-\\mu) - 1 = 3 - 3\\mu - \\mu + \\mu^2 - 1 = \\mu^2 - 4\\mu + 2 = 0\n$$\n使用二次公式，特征值 $\\mu$ 为：\n$$\n\\mu = \\frac{-(-4) \\pm \\sqrt{(-4)^2 - 4(1)(2)}}{2(1)} = \\frac{4 \\pm \\sqrt{16 - 8}}{2} = \\frac{4 \\pm 2\\sqrt{2}}{2} = 2 \\pm \\sqrt{2}\n$$\n特征值为 $\\mu_1 = 2+\\sqrt{2}$ 和 $\\mu_2 = 2-\\sqrt{2}$。由于奇异值是按非递增顺序排列的，$X'$ 的有序奇异值为 $\\sigma'_1 = \\sqrt{\\mu_1} = \\sqrt{2+\\sqrt{2}}$ 和 $\\sigma'_2 = \\sqrt{\\mu_2} = \\sqrt{2-\\sqrt{2}}$。\n该陈述是正确的。\n\n**D的结论：正确。**\n\n**C. 相对于 $X$，$X'$ 的两个奇异值都更大。**\n\n我们需要比较 $X$ 的奇异值（记为 $\\sigma_1, \\sigma_2$）和 $X'$ 的奇异值（记为 $\\sigma'_1, \\sigma'_2$）。\n$X$ 的奇异值是 $C = \\begin{bmatrix}2  1 \\\\ 1  1\\end{bmatrix}$ 的特征值的平方根。\n特征方程是 $\\det(C - \\lambda I) = 0$。\n$$\n\\det\\begin{pmatrix}2-\\lambda  1 \\\\ 1  1-\\lambda\\end{pmatrix} = (2-\\lambda)(1-\\lambda) - 1 = 2 - 2\\lambda - \\lambda + \\lambda^2 - 1 = \\lambda^2 - 3\\lambda + 1 = 0\n$$\n特征值 $\\lambda$ 为：\n$$\n\\lambda = \\frac{-(-3) \\pm \\sqrt{(-3)^2 - 4(1)(1)}}{2(1)} = \\frac{3 \\pm \\sqrt{9 - 4}}{2} = \\frac{3 \\pm \\sqrt{5}}{2}\n$$\n特征值为 $\\lambda_1 = \\frac{3+\\sqrt{5}}{2}$ 和 $\\lambda_2 = \\frac{3-\\sqrt{5}}{2}$。$X$ 的奇异值为 $\\sigma_1 = \\sqrt{\\frac{3+\\sqrt{5}}{2}}$ 和 $\\sigma_2 = \\sqrt{\\frac{3-\\sqrt{5}}{2}}$。\n\n现在我们进行比较：\n1. 比较 $\\sigma'_1 = \\sqrt{2+\\sqrt{2}}$ 和 $\\sigma_1 = \\sqrt{\\frac{3+\\sqrt{5}}{2}}$。这等价于比较它们的平方：$2+\\sqrt{2}$ 和 $\\frac{3+\\sqrt{5}}{2}$。\n    乘以 $2$ 得到 $4+2\\sqrt{2}$ 和 $3+\\sqrt{5}$。\n    减去 $3$ 得到 $1+2\\sqrt{2}$ 和 $\\sqrt{5}$。\n    两边都是正数，所以我们可以对它们进行平方：$(1+2\\sqrt{2})^2 = 1 + 4\\sqrt{2} + 8 = 9+4\\sqrt{2}$ 和 $(\\sqrt{5})^2 = 5$。显然 $9+4\\sqrt{2} > 5$，因此 $\\sigma'_1 > \\sigma_1$。\n\n2. 比较 $\\sigma'_2 = \\sqrt{2-\\sqrt{2}}$ 和 $\\sigma_2 = \\sqrt{\\frac{3-\\sqrt{5}}{2}}$。这等价于比较它们的平方：$2-\\sqrt{2}$ 和 $\\frac{3-\\sqrt{5}}{2}$。\n    乘以 $2$ 得到 $4-2\\sqrt{2}$ 和 $3-\\sqrt{5}$。\n    减去 $3$ 得到 $1-2\\sqrt{2}$ 和 $-\\sqrt{5}$。我们可以将其重写为 $1-\\sqrt{8}$ 和 $-\\sqrt{5}$，或者 $1$ 和 $\\sqrt{8}-\\sqrt{5}$。\n    我们知道 $\\sqrt{8} \\approx 2.828$ 和 $\\sqrt{5} \\approx 2.236$，所以 $\\sqrt{8}-\\sqrt{5} \\approx 0.592  1$。为了证明这一点，我们比较 $1$ 和 $\\sqrt{8}-\\sqrt{5}$。这等价于比较 $1+\\sqrt{5}$ 和 $\\sqrt{8}$。对两边（均为正数）进行平方，得到 $(1+\\sqrt{5})^2 = 1+2\\sqrt{5}+5 = 6+2\\sqrt{5}$ 和 $(\\sqrt{8})^2=8$。这等价于比较 $2\\sqrt{5}$ 和 $2$，或 $\\sqrt{5}$ 和 $1$。由于 $\\sqrt{5}>1$，我们有 $6+2\\sqrt{5}>8$，所以 $1+\\sqrt{5}>\\sqrt{8}$，这意味着 $1 > \\sqrt{8}-\\sqrt{5}$。\n    由于 $1 > \\sqrt{8}-\\sqrt{5}$，我们有 $1-2\\sqrt{2} > -\\sqrt{5}$。\n    这一系列推理意味着 $2-\\sqrt{2} > \\frac{3-\\sqrt{5}}{2}$，因此 $\\sigma'_2 > \\sigma_2$。\n\n$X'$ 的两个奇异值都大于 $X$ 的相应奇异值。该陈述是正确的。这也与Weyl不等式一致，因为 $C' = C + x_1 x_1^\\top$ 且 $x_1 x_1^\\top$ 是一个半正定矩阵。\n\n**C的结论：正确。**\n\n**B. $X'$ 的主本征正交分解 (POD) 模态恰好是归一化的快照 $x_1/\\|x_1\\|$。**\n\n$X'$ 的主POD模态是 $C'$ 对应于最大特征值 $\\mu_1 = 2+\\sqrt{2}$ 的特征向量。\n快照是 $x_1 = \\begin{bmatrix}1 \\\\ 0\\end{bmatrix}$。其范数为 $\\|x_1\\| = \\sqrt{1^2+0^2} = 1$。因此归一化的快照是 $u_{x_1} = x_1 = \\begin{bmatrix}1 \\\\ 0\\end{bmatrix}$。\n为了检查 $u_{x_1}$ 是否是 $C'$ 的特征向量，我们计算乘积 $C'u_{x_1}$：\n$$\nC'u_{x_1} = \\begin{bmatrix}3  1 \\\\ 1  1\\end{bmatrix} \\begin{bmatrix}1 \\\\ 0\\end{bmatrix} = \\begin{bmatrix}3 \\\\ 1\\end{bmatrix}\n$$\n要使 $u_{x_1}$ 成为一个特征向量，必须存在某个标量 $\\mu$ 使得 $C'u_{x_1} = \\mu u_{x_1}$。\n$$\n\\begin{bmatrix}3 \\\\ 1\\end{bmatrix} = \\mu \\begin{bmatrix}1 \\\\ 0\\end{bmatrix} = \\begin{bmatrix}\\mu \\\\ 0\\end{bmatrix}\n$$\n这将要求 $\\mu=3$ 且 $1=0$，这是一个矛盾。因此，$\\begin{bmatrix}1 \\\\ 0\\end{bmatrix}$ 不是 $C'$ 的特征向量。主POD模态不是归一化的快照 $x_1$。\n\n**B的结论：不正确。**\n\n总结如下：\n- 陈述 A 是正确的。\n- 陈述 B 是不正确的。\n- 陈述 C 是正确的。\n- 陈述 D 是正确的。\n- 陈述 E 是不正确的。", "answer": "$$\\boxed{ACD}$$", "id": "3265917"}, {"introduction": "从离散矩阵过渡到连续场，是理解POD在物理和工程领域应用的关键一步。本练习 [@problem_id:3265890] 将引导您从第一性原理出发，对一个简单的周期场进行POD模态的解析推导。这个纸笔练习通过将POD的抽象定义与空间相关算符的特征值问题的具体求解联系起来，揭示了其内在机理。", "problem": "考虑空间域 $x \\in [0,1]$，其空间内积由 $\\langle f, g \\rangle = \\int_{0}^{1} f(x) g(x) \\, dx$ 给出，时间系综平均由长时间均值 $\\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} (\\cdot) \\, dt$ 定义。设时空场为\n$$\nu(x,t) = \\sin(2\\pi x) \\cos(\\omega_{1} t) + \\sin(3\\pi x) \\cos(\\omega_{2} t),\n$$\n其中 $\\omega_{1} > 0$ 和 $\\omega_{2} > 0$ 是不同的实常数。使用本征正交分解 (POD) 的基本定义，其中空间POD模态是空间相关算子\n$$\n\\mathcal{C}[\\phi](x) = \\int_{0}^{1} C(x,y) \\, \\phi(y) \\, dy,\n$$\n的本征函数，该算子由相关核\n$$\nC(x,y) = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} u(x,t) \\, u(y,t) \\, dt,\n$$\n构建，请推导出与 $u(x,t)$ 相关的解析空间POD模态。将模态表示为 $L^{2}([0,1])$ 归一化函数。您的最终答案必须将两个归一化的空间POD模态在单个行矩阵中列出。不需要单位，也不需要四舍五入。", "solution": "该问题要求对给定的时空场 $u(x,t)$ 推导其空间本征正交分解 (POD) 模态。根据定义，记为 $\\phi(x)$ 的空间POD模态是空间两点相关算子 $\\mathcal{C}$ 的本征函数，该算子是以 $C(x,y)$ 为核的积分算子。该本征问题由下式给出：\n$$\n\\mathcal{C}[\\phi](x) = \\int_{0}^{1} C(x,y) \\, \\phi(y) \\, dy = \\lambda \\phi(x)\n$$\n核 $C(x,y)$ 定义为场在两个空间位置 $x$ 和 $y$ 的乘积的时间平均值。\n$$\nC(x,y) = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} u(x,t) \\, u(y,t) \\, dt\n$$\n第一步是为给定的场 $u(x,t) = \\sin(2\\pi x) \\cos(\\omega_{1} t) + \\sin(3\\pi x) \\cos(\\omega_{2} t)$ 计算这个核。\n\n我们展开乘积 $u(x,t) \\, u(y,t)$：\n\\begin{align*}\nu(x,t) \\, u(y,t) =  \\left[ \\sin(2\\pi x) \\cos(\\omega_{1} t) + \\sin(3\\pi x) \\cos(\\omega_{2} t) \\right] \\left[ \\sin(2\\pi y) \\cos(\\omega_{1} t) + \\sin(3\\pi y) \\cos(\\omega_{2} t) \\right] \\\\\n=  \\sin(2\\pi x) \\sin(2\\pi y) \\cos^2(\\omega_{1} t) \\\\\n + \\sin(3\\pi x) \\sin(3\\pi y) \\cos^2(\\omega_{2} t) \\\\\n + \\sin(2\\pi x) \\sin(3\\pi y) \\cos(\\omega_{1} t) \\cos(\\omega_{2} t) \\\\\n + \\sin(3\\pi x) \\sin(2\\pi y) \\cos(\\omega_{1} t) \\cos(\\omega_{2} t)\n\\end{align*}\n为了求得 $C(x,y)$，我们必须计算时间分量的长时间平均值。我们需要以下关于谐波函数的标准时间平均结果：\n$1$. 对于任意非零频率 $\\omega > 0$，\n$$\n\\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos^2(\\omega t) \\, dt = \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\frac{1 + \\cos(2\\omega t)}{2} \\, dt = \\lim_{T \\to \\infty} \\frac{1}{T} \\left[ \\frac{t}{2} + \\frac{\\sin(2\\omega t)}{4\\omega} \\right]_{0}^{T} = \\frac{1}{2}\n$$\n$2$. 对于两个不同的正频率 $\\omega_1 \\neq \\omega_2$，\n$$\n\\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos(\\omega_1 t) \\cos(\\omega_2 t) \\, dt = \\lim_{T \\to \\infty} \\frac{1}{2T} \\int_{0}^{T} \\left[ \\cos((\\omega_1 - \\omega_2)t) + \\cos((\\omega_1 + \\omega_2)t) \\right] dt = 0\n$$\n第二个结果成立，因为余弦函数在一个周期内的积分为零，其不定积分是一个有界的正弦函数。除以 $T \\to \\infty$ 使得平均值趋于 $0$。\n\n将这些时间平均应用于展开的乘积，包含 $\\cos(\\omega_{1} t) \\cos(\\omega_{2} t)$ 的交叉项的平均值为零。我们得到：\n\\begin{align*}\nC(x,y) = \\sin(2\\pi x) \\sin(2\\pi y) \\left( \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos^2(\\omega_{1} t) \\, dt \\right) + \\sin(3\\pi x) \\sin(3\\pi y) \\left( \\lim_{T \\to \\infty} \\frac{1}{T} \\int_{0}^{T} \\cos^2(\\omega_{2} t) \\, dt \\right) \\\\\n= \\frac{1}{2} \\sin(2\\pi x) \\sin(2\\pi y) + \\frac{1}{2} \\sin(3\\pi x) \\sin(3\\pi y)\n\\end{align*}\n这是一个秩为 $2$ 的可分核。具有此类核的算子的本征函数必须位于构成该核的函数的生成空间中，即 $\\text{span}\\{\\sin(2\\pi x), \\sin(3\\pi x)\\}$。\n\n我们来检查基函数 $\\psi_1(x) = \\sin(2\\pi x)$ 和 $\\psi_2(x) = \\sin(3\\pi x)$ 在给定的内积 $\\langle f, g \\rangle = \\int_{0}^{1} f(x) g(x) \\, dx$ 下是否正交：\n$$\n\\langle \\psi_1, \\psi_2 \\rangle = \\int_{0}^{1} \\sin(2\\pi x) \\sin(3\\pi x) \\, dx = \\frac{1}{2} \\int_{0}^{1} \\left[ \\cos(\\pi x) - \\cos(5\\pi x) \\right] dx = \\frac{1}{2} \\left[ \\frac{\\sin(\\pi x)}{\\pi} - \\frac{\\sin(5\\pi x)}{5\\pi} \\right]_{0}^{1} = 0\n$$\n由于空间函数是正交的，它们确实是相关算子 $\\mathcal{C}$ 的本征函数。我们可以通过将它们代入本征问题来验证这一点。\n\n对于第一个候选本征函数 $\\phi(x) = \\psi_1(x) = \\sin(2\\pi x)$：\n\\begin{align*}\n\\mathcal{C}[\\psi_1](x) = \\int_{0}^{1} \\left[ \\frac{1}{2} \\sin(2\\pi x) \\sin(2\\pi y) + \\frac{1}{2} \\sin(3\\pi x) \\sin(3\\pi y) \\right] \\sin(2\\pi y) \\, dy \\\\\n= \\frac{1}{2} \\sin(2\\pi x) \\int_{0}^{1} \\sin^2(2\\pi y) \\, dy + \\frac{1}{2} \\sin(3\\pi x) \\int_{0}^{1} \\sin(3\\pi y) \\sin(2\\pi y) \\, dy\n\\end{align*}\n由于正交性，第二个积分为零。第一个积分为：\n$$\n\\int_{0}^{1} \\sin^2(2\\pi y) \\, dy = \\int_{0}^{1} \\frac{1 - \\cos(4\\pi y)}{2} \\, dy = \\left[ \\frac{y}{2} - \\frac{\\sin(4\\pi y)}{8\\pi} \\right]_{0}^{1} = \\frac{1}{2}\n$$\n因此，$\\mathcal{C}[\\psi_1](x) = \\frac{1}{2} \\sin(2\\pi x) \\cdot \\frac{1}{2} = \\frac{1}{4} \\sin(2\\pi x)$。\n所以，$\\phi_1(x) = \\sin(2\\pi x)$ 是一个本征函数，其本征值为 $\\lambda_1 = \\frac{1}{4}$。\n\n对于第二个候选本征函数 $\\phi(x) = \\psi_2(x) = \\sin(3\\pi x)$：\n\\begin{align*}\n\\mathcal{C}[\\psi_2](x) = \\int_{0}^{1} \\left[ \\frac{1}{2} \\sin(2\\pi x) \\sin(2\\pi y) + \\frac{1}{2} \\sin(3\\pi x) \\sin(3\\pi y) \\right] \\sin(3\\pi y) \\, dy \\\\\n= \\frac{1}{2} \\sin(2\\pi x) \\int_{0}^{1} \\sin(2\\pi y) \\sin(3\\pi y) \\, dy + \\frac{1}{2} \\sin(3\\pi x) \\int_{0}^{1} \\sin^2(3\\pi y) \\, dy\n\\end{align*}\n第一个积分为零。第二个积分为：\n$$\n\\int_{0}^{1} \\sin^2(3\\pi y) \\, dy = \\int_{0}^{1} \\frac{1 - \\cos(6\\pi y)}{2} \\, dy = \\left[ \\frac{y}{2} - \\frac{\\sin(6\\pi y)}{12\\pi} \\right]_{0}^{1} = \\frac{1}{2}\n$$\n因此，$\\mathcal{C}[\\psi_2](x) = \\frac{1}{2} \\sin(3\\pi x) \\cdot \\frac{1}{2} = \\frac{1}{4} \\sin(3\\pi x)$。\n所以，$\\phi_2(x) = \\sin(3\\pi x)$ 是一个本征函数，其本征值为 $\\lambda_2 = \\frac{1}{4}$。\n\n最后一步是将这些本征函数归一化，使其具有单位 $L^2$-范数。本征函数 $\\phi$ 的范数平方为 $\\|\\phi\\|^2 = \\langle \\phi, \\phi \\rangle = \\int_{0}^{1} \\phi(x)^2 \\, dx$。\n对于第一个模态 $\\sin(2\\pi x)$：\n$$\n\\|\\sin(2\\pi x)\\|^2 = \\int_{0}^{1} \\sin^2(2\\pi x) \\, dx = \\frac{1}{2}\n$$\n归一化常数为 $1 / \\sqrt{1/2} = \\sqrt{2}$。第一个归一化的POD模态是 $\\hat{\\phi_1}(x) = \\sqrt{2} \\sin(2\\pi x)$。\n\n对于第二个模态 $\\sin(3\\pi x)$：\n$$\n\\|\\sin(3\\pi x)\\|^2 = \\int_{0}^{1} \\sin^2(3\\pi x) \\, dx = \\frac{1}{2}\n$$\n归一化常数也是 $\\sqrt{2}$。第二个归一化的POD模态是 $\\hat{\\phi_2}(x) = \\sqrt{2} \\sin(3\\pi x)$。\n\n因此，两个非平凡的空间POD模态是 $\\sqrt{2} \\sin(2\\pi x)$ 和 $\\sqrt{2} \\sin(3\\pi x)$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\sqrt{2}\\sin(2\\pi x)  \\sqrt{2}\\sin(3\\pi x)\n\\end{pmatrix}\n}\n$$", "id": "3265890"}, {"introduction": "在实际应用中，来自模拟或实验的数据可能非常庞大，使得直接进行奇异值分解（SVD）在计算上不可行。最后一个练习 [@problem_id:3266011] 介绍了“快照法”，这是一种在空间点数远超快照数量时计算POD模态的强大而高效的算法。通过实现该方法，您将学习到实用的POD分析标准流程，涵盖从数据中心化、能量计算到秩估计和重构的各个环节。", "problem": "你的任务是使用快照法实现本征正交分解（POD），用于处理在一系列网格上表示的空间场序列，其中网格点数远大于快照数。快照法基于一个基本原则，即POD在空间域中寻求一个标准正交基，以在标准欧几里得内积下最小化快照集合的均方重构误差。数据被组织成一个矩阵，其列是不同时间的场快照。在构建分解之前，应先移除快照间的样本均值场。该方法通过在快照空间中求解特征值问题来降低其维度。三角函数中使用的所有角度必须以弧度为单位。\n\n构建一个程序，该程序建立以下合成数据集的测试套件，并使用快照法计算从POD导出的量。对于每个数据集，令 $X \\in \\mathbb{R}^{m \\times n}$ 表示数据矩阵，其列是在区间 $[0,1]$ 上的均匀网格 $x_i$ 上采样的快照 $x^{(j)} \\in \\mathbb{R}^{m}$。对于每个数据集，减去快照间的样本均值场，即对每个空间坐标 $i$，从 $X_{i,j}$ 中减去关于 $j$ 的平均值，得到一个去均值矩阵 $X_c$。然后构建快照空间矩阵 $S = X_c^{\\top} X_c$。通过求解 $S$ 的对称特征值问题、将特征值从大到小排序并形成相应的空间模态来实现POD。所有计算必须是确定性的，并且只能使用指定的环境。以下数据集通过显式公式定义 $X$；所有三角函数参数均以弧度为单位。\n\n- 测试用例 1 （一般的“高瘦”情况）：$m = 200$，$n = 5$。令 $x_i = \\frac{i}{m-1}$ 对于 $i \\in \\{0,1,\\dots,m-1\\}$ 以及 $t_j = j$ 对于 $j \\in \\{0,1,\\dots,n-1\\}$。定义空间模式 $\\phi_1(x) = \\sin(\\pi x)$ 和 $\\phi_2(x) = \\cos(2\\pi x)$。对于每个快照 $j$，设置\n$$\nx^{(j)}(x) = 3\\,\\phi_1(x)\\left(1 + 0.5\\cos(0.8 t_j)\\right) + 1.5\\,\\phi_2(x)\\left(0.5\\sin(1.2 t_j)\\right) + 0.05\\,\\sin(5\\pi x)\\cos(2.3 t_j).\n$$\n计算使得累积捕获能量（$S$ 的前导特征值之和除以 $S$ 的所有特征值之和）至少为 $0.95$ 所需的最小POD模态数。将此数字作为整数输出。\n\n- 测试用例 2 （主导第一模态）：$m = 300$，$n = 3$。令 $x_i = \\frac{i}{m-1}$ 和 $t_j = j$。定义 $\\phi_d(x) = \\sin(\\pi x)$ 和 $\\phi_s(x) = \\cos(3\\pi x)$。对于每个 $j$，设置\n$$\nx^{(j)}(x) = 4\\,\\phi_d(x)\\left(1.1 + 0.9\\sin(0.5 t_j)\\right) + 0.6\\,\\phi_s(x)\\left(\\cos(0.8 t_j)\\right).\n$$\n计算第一个POD模态捕获的能量分数，定义为 $S$ 的最大特征值除以 $S$ 的所有特征值之和。将此值作为浮点数输出。\n\n- 测试用例 3 （使用两个模态的重构误差）：$m = 50$，$n = 10$。令 $x_i = \\frac{i}{m-1}$ 和 $t_j = j$。定义 $\\phi_1(x) = \\sin(2\\pi x)$，$\\phi_2(x) = \\cos(\\pi x)$，和 $\\phi_3(x) = \\sin(4\\pi x)$。对于每个 $j$，设置\n$$\nx^{(j)}(x) = 2\\,\\phi_1(x)\\sin(0.7 t_j) + 1.5\\,\\phi_2(x)\\cos(1.1 t_j) + 0.3\\,\\phi_3(x)\\sin(0.9 t_j).\n$$\n使用从 $S$ 计算出的前 $2$ 个POD模态，通过将 $X_c$ 投影到前两个空间模态的张成空间上，形成去均值数据的秩-2重构，并计算相对重构误差，定义为\n$$\n\\frac{\\lVert X_c - X_{c,2} \\rVert_F}{\\lVert X_c \\rVert_F},\n$$\n其中 $\\lVert \\cdot \\rVert_F$ 表示弗罗贝尼乌斯范数，$X_{c,2}$ 是 $X_c$ 在前两个模态上的投影。将此值作为浮点数输出。\n\n- 测试用例 4 （退化快照，秩检验）：$m = 400$，$n = 6$。令 $x_i = \\frac{i}{m-1}$。显式构造快照作为列：\n$$\nx^{(0)}(x) = \\sin(\\pi x) + \\cos(2\\pi x), \\quad\nx^{(1)}(x) = 2\\sin(2\\pi x) - 0.5\\cos(3\\pi x), \\quad\nx^{(2)}(x) = x^{(1)}(x), \\\\\nx^{(3)}(x) = 0.7\\sin(3\\pi x) + 0.1\\cos(\\pi x), \\quad\nx^{(4)}(x) = x^{(0)}(x), \\quad\nx^{(5)}(x) = 1.3\\sin(4\\pi x) - 0.9\\cos(2\\pi x).\n$$\n在跨快照进行均值移除后，通过计算 $S$ 的严格正特征值的数量来计算 $X_c$ 的数值秩，使用相对容差，定义为：如果一个特征值大于 $S$ 的最大特征值的 $10^{-10}$ 倍，则将其标记为非零。将此秩作为整数输出。\n\n你的程序应生成单行输出，其中包含四个测试用例的结果，形式为逗号分隔的列表并用方括号括起来（例如，$[result_1,result_2,result_3,result_4]$）。这四个结果必须按顺序为：测试用例1的整数模态数，测试用例2中第一模态的浮点数能量分数，测试用例3的浮点数相对重构误差，以及测试用例4的整数秩。", "solution": "该问题要求对几个合成数据集通过快照法实现本征正交分解（POD）。此方法的核心是分析一系列快照（不同时间实例的空间数据场），以找到一个最优捕获数据方差的低维基。\n\n设数据被组织在一个矩阵 $X \\in \\mathbb{R}^{m \\times n}$ 中，其中 $m$ 是空间网格点的数量，$n$ 是快照的数量。$X$ 的第 $j$ 列是在时间 $t_j$ 的快照向量 $x^{(j)} \\in \\mathbb{R}^{m}$。问题规定网格点数远大于快照数，即 $m \\gg n$。\n\n指定的POD流程如下：\n$1$.  **数据中心化**：第一步是从快照中移除时间平均值。平均快照计算为 $\\bar{x} = \\frac{1}{n} \\sum_{j=0}^{n-1} x^{(j)}$。通过从 $X$ 的每一列中减去 $\\bar{x}$ 来形成去均值数据矩阵 $X_c$。$X_c$ 的列是 $x_c^{(j)} = x^{(j)} - \\bar{x}$。\n$2$.  **快照法**：直接的POD方法需要求解 $m \\times m$ 空间协方差矩阵 $C = X_c X_c^\\top$ 的特征值问题。当 $m \\gg n$ 时，这在计算上是不可行的。快照法通过在更小的快照空间中求解一个特征值问题来规避此问题。我们构建 $n \\times n$ 的快照矩阵（或格拉姆矩阵）$S = X_c^\\top X_c$。\n$3$.  **特征值问题**：我们求解 $S$ 的对称特征值问题：\n$$\nS v_k = \\lambda_k v_k, \\quad \\text{for } k = 1, \\dots, n.\n$$\n$S$ 的特征值 $\\lambda_k$ 是较大协方差矩阵 $C$ 的非零特征值。这些特征值按降序排列 $\\lambda_1 \\ge \\lambda_2 \\ge \\dots \\ge \\lambda_n \\ge 0$，代表每个相应模态捕获的能量或方差。去均值数据的总能量（方差）由 $S$ 的迹给出，它等于其特征值之和：$\\sum_{k=1}^n \\lambda_k = \\text{tr}(S) = \\lVert X_c \\rVert_F^2$。\n$4$.  **POD模态**：空间POD模态 $\\Psi_k \\in \\mathbb{R}^m$ 可以通过关系式 $\\Psi_k = \\frac{1}{\\sqrt{\\lambda_k}} X_c v_k$ 从 $S$ 的特征向量 $v_k$ 构建。这些模态构成了空间数据的标准正交基。\n\n我们现在将此框架应用于所提供的四个测试用例。\n\n**测试用例 1：累积能量**\n数据集定义为 $m = 200$ 和 $n = 5$。快照在空间网格 $x_i = \\frac{i}{m-1}$（对于 $i \\in \\{0, \\dots, 199\\}$）和时间 $t_j = j$（对于 $j \\in \\{0, \\dots, 4\\}$）上生成。快照公式为：\n$$\nx^{(j)}(x) = 3 \\sin(\\pi x) \\left(1 + 0.5\\cos(0.8 t_j)\\right) + 0.75 \\cos(2\\pi x) \\sin(1.2 t_j) + 0.05 \\sin(5\\pi x)\\cos(2.3 t_j).\n$$\n在构建数据矩阵 $X$ 及其中心化版本 $X_c$ 之后，我们计算快照矩阵 $S = X_c^\\top X_c$ 及其特征值 $\\lambda_1, \\dots, \\lambda_5$，按降序排列。前 $k$ 个模态捕获的累积能量是部分特征值和与总和的比率：\n$$\nE_k = \\frac{\\sum_{i=1}^k \\lambda_i}{\\sum_{i=1}^5 \\lambda_i}.\n$$\n我们需要找到最小的整数 $k$，使得 $E_k \\ge 0.95$。这通过计算排序后特征值的累积和并检查 $k = 1, 2, \\dots, 5$ 的条件来完成。\n\n**测试用例 2：主导模态能量**\n数据集有 $m = 300$ 和 $n = 3$。快照在网格 $x_i = \\frac{i}{m-1}$ 上、时间 $t_j=j$（对于 $j \\in \\{0, 1, 2\\}$）生成，使用公式：\n$$\nx^{(j)}(x) = 4 \\sin(\\pi x) \\left(1.1 + 0.9\\sin(0.5 t_j)\\right) + 0.6 \\cos(3\\pi x) \\cos(0.8 t_j).\n$$\n遵循POD流程，我们计算 $3 \\times 3$ 快照矩阵 $S$ 的特征值 $\\lambda_1, \\lambda_2, \\lambda_3$。第一个（最主导的）POD模态捕获的能量分数由下式给出：\n$$\n\\frac{\\lambda_1}{\\sum_{i=1}^3 \\lambda_i}.\n$$\n该值将被计算并作为浮点数输出。\n\n**测试用例 3：重构误差**\n此案例使用 $m = 50$ 和 $n = 10$。在时间 $t_j=j$（对于 $j \\in \\{0, \\dots, 9\\}$）的快照由下式给出：\n$$\nx^{(j)}(x) = 2 \\sin(2\\pi x) \\sin(0.7 t_j) + 1.5 \\cos(\\pi x) \\cos(1.1 t_j) + 0.3 \\sin(4\\pi x) \\sin(0.9 t_j).\n$$\n我们计算 $10 \\times 10$ 矩阵 $S$ 的特征值 $\\lambda_1, \\dots, \\lambda_{10}$。$X_c$ 的秩-$k$ POD近似表示为 $X_{c,k}$。重构误差的弗罗贝尼乌斯范数平方是被忽略的特征值之和：\n$$\n\\lVert X_c - X_{c,k} \\rVert_F^2 = \\sum_{i=k+1}^n \\lambda_i.\n$$\n总能量，即 $X_c$ 的弗罗贝尼乌斯范数平方，是 $\\lVert X_c \\rVert_F^2 = \\sum_{i=1}^n \\lambda_i$。因此，对于秩-2近似（$k=2$）的相对重构误差是：\n$$\n\\text{Error} = \\frac{\\lVert X_c - X_{c,2} \\rVert_F}{\\lVert X_c \\rVert_F} = \\sqrt{\\frac{\\sum_{i=3}^{10} \\lambda_i}{\\sum_{i=1}^{10} \\lambda_i}}.\n$$\n该值将被计算并作为浮点数输出。\n\n**测试用例 4：数值秩**\n此案例有 $m = 400$，$n = 6$。快照是显式定义的，有两对相同的快照：$x^{(2)} = x^{(1)}$ 和 $x^{(4)} = x^{(0)}$。$X$ 列中的这些线性相关性降低了其秩。均值中心化操作保留了这些相关性：$x_c^{(2)} = x_c^{(1)}$ 和 $x_c^{(4)} = x_c^{(0)}$。此外，$X_c$ 的列总和为零向量，引入了另一个线性相关性。因此，$X_c$ 的秩最多为 $n-1-2 = 3$。$X_c$ 的秩等于 $S=X_c^\\top X_c$ 的秩，也就是其非零特征值的数量。我们计算 $S$ 的特征值 $\\lambda_1, \\dots, \\lambda_6$。数值秩通过使用相对容差计算有多少个特征值是严格正的来确定。如果特征值 $\\lambda_k > 10^{-10} \\lambda_1$（其中 $\\lambda_1$ 是最大特征值），则认为该特征值 $\\lambda_k$ 非零。我们将计算满足此条件的特征值的数量。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef perform_pod_analysis(X):\n    \"\"\"\n    Performs POD analysis on a snapshot matrix X.\n\n    Args:\n        X (np.ndarray): The data matrix of shape (m, n), where m is the number of\n                        spatial points and n is the number of snapshots.\n\n    Returns:\n        tuple: A tuple containing:\n            - np.ndarray: The mean-centered data matrix X_c.\n            - np.ndarray: A 1D array of eigenvalues of the snapshot matrix S,\n                          sorted in descending order.\n    \"\"\"\n    # Step 1: Mean removal\n    mean_field = X.mean(axis=1, keepdims=True)\n    X_c = X - mean_field\n\n    # Step 2: Form the snapshot matrix S\n    S = X_c.T @ X_c\n\n    # Step 3: Solve the eigenvalue problem for S\n    # np.linalg.eigh is used for symmetric matrices and returns eigenvalues in ascending order\n    eigenvalues = np.linalg.eigh(S)[0]\n\n    # Sort eigenvalues in descending order\n    eigenvalues = np.sort(eigenvalues)[::-1]\n    \n    # Ensure eigenvalues are non-negative due to potential floating point inaccuracies\n    eigenvalues[eigenvalues  0] = 0\n\n    return X_c, eigenvalues\n\ndef solve_case1():\n    \"\"\"Calculates the minimal number of POD modes for >= 95% energy.\"\"\"\n    m = 200\n    n = 5\n    x = np.linspace(0, 1, m)\n    t = np.arange(n)\n\n    phi1 = np.sin(np.pi * x)\n    phi2 = np.cos(2 * np.pi * x)\n    noise_phi = np.sin(5 * np.pi * x)\n\n    time_dep1 = 3 * (1 + 0.5 * np.cos(0.8 * t))\n    time_dep2 = 1.5 * (0.5 * np.sin(1.2 * t))\n    noise_time_dep = 0.05 * np.cos(2.3 * t)\n\n    X = (phi1[:, np.newaxis] * time_dep1[np.newaxis, :] +\n         phi2[:, np.newaxis] * time_dep2[np.newaxis, :] +\n         noise_phi[:, np.newaxis] * noise_time_dep[np.newaxis, :])\n    \n    _, eigenvalues = perform_pod_analysis(X)\n    \n    total_energy = np.sum(eigenvalues)\n    if total_energy == 0:\n        return n\n        \n    cumulative_energy = np.cumsum(eigenvalues) / total_energy\n    \n    num_modes = np.searchsorted(cumulative_energy, 0.95, side='left') + 1\n    return int(num_modes)\n\ndef solve_case2():\n    \"\"\"Calculates the energy fraction of the first POD mode.\"\"\"\n    m = 300\n    n = 3\n    x = np.linspace(0, 1, m)\n    t = np.arange(n)\n\n    phi_d = np.sin(np.pi * x)\n    phi_s = np.cos(3 * np.pi * x)\n\n    time_dep_d = 4 * (1.1 + 0.9 * np.sin(0.5 * t))\n    time_dep_s = 0.6 * np.cos(0.8 * t)\n\n    X = (phi_d[:, np.newaxis] * time_dep_d[np.newaxis, :] +\n         phi_s[:, np.newaxis] * time_dep_s[np.newaxis, :])\n    \n    _, eigenvalues = perform_pod_analysis(X)\n    \n    total_energy = np.sum(eigenvalues)\n    if total_energy == 0:\n        return 0.0\n\n    energy_fraction = eigenvalues[0] / total_energy\n    return float(energy_fraction)\n\ndef solve_case3():\n    \"\"\"Calculates the relative reconstruction error with 2 modes.\"\"\"\n    m = 50\n    n = 10\n    x = np.linspace(0, 1, m)\n    t = np.arange(n)\n\n    phi1 = np.sin(2 * np.pi * x)\n    phi2 = np.cos(np.pi * x)\n    phi3 = np.sin(4 * np.pi * x)\n\n    time_dep1 = 2 * np.sin(0.7 * t)\n    time_dep2 = 1.5 * np.cos(1.1 * t)\n    time_dep3 = 0.3 * np.sin(0.9 * t)\n\n    X = (phi1[:, np.newaxis] * time_dep1[np.newaxis, :] +\n         phi2[:, np.newaxis] * time_dep2[np.newaxis, :] +\n         phi3[:, np.newaxis] * time_dep3[np.newaxis, :])\n\n    _, eigenvalues = perform_pod_analysis(X)\n    \n    num_modes_for_reconstruction = 2\n    \n    total_energy = np.sum(eigenvalues)\n    if total_energy == 0:\n        return 0.0\n        \n    neglected_energy = np.sum(eigenvalues[num_modes_for_reconstruction:])\n    \n    relative_error = np.sqrt(neglected_energy / total_energy)\n    return float(relative_error)\n\ndef solve_case4():\n    \"\"\"Calculates the numerical rank of the mean-centered data.\"\"\"\n    m = 400\n    n = 6\n    x = np.linspace(0, 1, m)\n    X = np.zeros((m, n))\n\n    X[:, 0] = np.sin(np.pi * x) + np.cos(2 * np.pi * x)\n    X[:, 1] = 2 * np.sin(2 * np.pi * x) - 0.5 * np.cos(3 * np.pi * x)\n    X[:, 2] = X[:, 1]\n    X[:, 3] = 0.7 * np.sin(3 * np.pi * x) + 0.1 * np.cos(np.pi * x)\n    X[:, 4] = X[:, 0]\n    X[:, 5] = 1.3 * np.sin(4 * np.pi * x) - 0.9 * np.cos(2 * np.pi * x)\n    \n    _, eigenvalues = perform_pod_analysis(X)\n    \n    if len(eigenvalues) == 0 or eigenvalues[0] == 0:\n        return 0\n        \n    tolerance = 1e-10 * eigenvalues[0]\n    numerical_rank = np.sum(eigenvalues > tolerance)\n    \n    return int(numerical_rank)\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    result1 = solve_case1()\n    result2 = solve_case2()\n    result3 = solve_case3()\n    result4 = solve_case4()\n\n    results = [result1, result2, result3, result4]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "3266011"}]}