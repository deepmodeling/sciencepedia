{"hands_on_practices": [{"introduction": "在高性能计算领域，一个常见的任务是评估现有代码能否在更大规模的机器上达到预期的性能目标。这个练习 [@problem_id:3139830] 让你扮演一名HPC工程师，从一个给定的加速比目标出发，反向推算出代码所允许的最大串行部分比例 $\\alpha$。通过从第一性原理出发进行推导，你将深刻理解加速比、处理器数量和串行比例三者之间的内在制约关系。", "problem": "一个高性能计算（HPC）团队计划扩展一个模拟，使其在增加处理器数量的同时保持挂钟时间不变。假设计算由一个固有的串行部分和一个完全可并行的部分组成，除了串行部分外没有额外的开销。设在并行机上总运行时间中用于串行部分的时间分数由 $\\alpha$ 表示，处理器数量为 $N$。该团队使用扩展加速比的定义：当挂钟时间保持固定时，单个处理器执行相同扩展工作负载所需的时间与 $N$ 个处理器实际花费的时间之比。\n\n仅以上述定义为出发点，确定在 $N=128$ 个处理器上满足设计目标扩展加速比 $S(N)=120$ 的最大允许串行分数 $\\alpha$。不要引用任何记忆的公式；从第一性原理推导所需内容。将最终的 $\\alpha$ 报告为一个纯数字，四舍五入到四位有效数字。", "solution": "首先对问题陈述进行验证。\n\n### 第一步：提取已知条件\n- 计算由一个固有的串行部分和一个完全可并行的部分组成。\n- 扩展时挂钟时间保持不变。\n- $\\alpha$：在并行机上总运行时间中用于串行部分的时间分数。\n- $N$：处理器数量。\n- 扩展加速比定义为：单个处理器执行相同扩展工作负载所需的时间与 $N$ 个处理器实际花费的时间之比。\n- 设计目标扩展加速比：$S(N) = 120$。\n- 处理器数量：$N = 128$。\n- 限制条件：推导必须从第一性原理出发，不得引用记忆的公式。\n- 要求输出：$\\alpha$ 的值，作为一个纯数字，四舍五入到四位有效数字。\n\n### 第二步：使用提取的已知条件进行验证\n该问题具有科学依据，因为它描述了一种并行计算性能分析的标准模型，称为扩展加速比，这是古斯塔夫森定律的基础。这是一个适定问题，为扩展加速比提供了明确的定义，并提供了足够的数值数据（$S(N)$ 和 $N$）来求解未知变量 $\\alpha$。术语客观而精确。该问题不违反任何基本原理，不完整或不矛盾，并在计算科学领域提出了一个可解的、非平凡的挑战。\n\n### 第三步：结论与行动\n该问题是**有效的**。将按规定从第一性原理推导解答。\n\n### 推导\n设 $T(N)$ 为在 $N$ 个处理器上运行一个作业的总挂钟时间。问题陈述中指出该时间保持不变。为方便起见且不失一般性，我们可以将此时间归一化为 $T(N)=1$ 个单位。\n\n根据问题定义，$\\alpha$ 是在并行机（$N$ 个处理器）上总运行时间中用于串行部分的时间分数。\n在 $N$ 个处理器上用于串行部分的时间为：\n$$T_{\\text{serial}, N} = \\alpha T(N)$$\n剩余时间用于可并行部分：\n$$T_{\\text{parallel}, N} = (1 - \\alpha) T(N)$$\n两者之和为 $T_{\\text{serial}, N} + T_{\\text{parallel}, N} = \\alpha T(N) + (1-\\alpha)T(N) = T(N)$，这是一致的。\n\n接下来，我们必须确定单个处理器（$N=1$）执行此相同扩展工作负载所需的时间。设此时间为 $T(1)$。该工作负载由串行部分和并行部分组成。\n\n根据定义，工作负载的串行部分是不可并行的。因此，执行它所需的时间与处理器数量无关。单个处理器上串行部分的时间与 $N$ 个处理器上串行部分的时间相同。\n$$T_{\\text{serial}, 1} = T_{\\text{serial}, N} = \\alpha T(N)$$\n\n工作负载的并行部分是完全可并行的。当在 $N$ 个处理器上运行时，工作被分配到它们之间，耗时 $T_{\\text{parallel}, N}$。如果这同样数量的并行工作要在单个处理器上执行，将需要 $N$ 倍的时间。\n$$T_{\\text{parallel}, 1} = N \\cdot T_{\\text{parallel}, N} = N(1 - \\alpha) T(N)$$\n\n单个处理器所需的总时间 $T(1)$ 是其串行部分和并行部分时间的总和：\n$$T(1) = T_{\\text{serial}, 1} + T_{\\text{parallel}, 1}$$\n$$T(1) = \\alpha T(N) + N(1 - \\alpha) T(N)$$\n提取公因子 $T(N)$，我们得到：\n$$T(1) = [\\alpha + N(1 - \\alpha)] T(N)$$\n\n问题将扩展加速比 $S(N)$ 定义为单个处理器所需的时间 ($T(1)$) 与 $N$ 个处理器实际花费的时间 ($T(N)$) 之比。\n$$S(N) = \\frac{T(1)}{T(N)}$$\n代入我们为 $T(1)$ 推导出的表达式：\n$$S(N) = \\frac{[\\alpha + N(1 - \\alpha)] T(N)}{T(N)}$$\n$$S(N) = \\alpha + N(1 - \\alpha)$$\n这个从第一性原理推导出的表达式，将扩展加速比 $S(N)$、串行分数 $\\alpha$ 和处理器数量 $N$ 关联起来。\n\n现在我们必须求解 $\\alpha$。\n$$S(N) = \\alpha + N - N\\alpha$$\n$$S(N) - N = \\alpha - N\\alpha$$\n$$S(N) - N = \\alpha(1 - N)$$\n$$\\alpha = \\frac{S(N) - N}{1 - N}$$\n为避免分母中出现负号，我们可以将分子和分母同乘以 $-1$：\n$$\\alpha = \\frac{N - S(N)}{N - 1}$$\n\n问题给出了具体数值 $N = 128$ 和目标加速比 $S(128) = 120$。我们将这些值代入推导出的 $\\alpha$ 方程中。\n$$\\alpha = \\frac{128 - 120}{128 - 1}$$\n$$\\alpha = \\frac{8}{127}$$\n\n为了给出最终答案，我们计算其数值并四舍五入到四位有效数字。\n$$\\alpha \\approx 0.0629921259...$$\n前四位有效数字是 $6$、$2$、$9$、$9$。第五位数字是 $2$，小于 $5$，所以我们不对最后一位有效数字进行进位。\n$$\\alpha \\approx 0.06299$$\n这就是满足指定设计目标的最大允许串行分数。", "answer": "$$\\boxed{0.06299}$$", "id": "3139830"}, {"introduction": "当面临多种算法选择时，如何预判哪一种在大规模并行环境下表现更佳？此练习 [@problem_id:3139820] 提出了一个极具现实意义的对比分析场景。你将分析两个具有不同串行比例 $\\alpha$ 的计算核心，并确定哪一个能更快地达到接近理想线性加速的性能阈值。这个过程将锻炼你运用古斯塔夫森定律进行模型比较和决策的能力，并让你直观地感受到串行部分对可扩展性的巨大影响。", "problem": "一个高性能计算（HPC）应用程序在一个并行系统上进行弱扩展（weak scaling）评估。在弱扩展中，问题规模与处理单元的数量成比例增长，因此每个处理单元处理固定的工作负载。考虑两个计算核心，每个核心在基准工作负载规模下，其固有的顺序工作所花费时间的单处理器测量分数由 $\\alpha$ 表示。这两个核心的 $\\alpha$ 值分别为 $\\alpha_{1} = 0.06$ 和 $\\alpha_{2} = 0.12$，且 $\\alpha_{1} < \\alpha_{2}$。假设可并行部分在弱扩展下表现理想：并行部分完美地分布在 $N$ 个处理单元上，而顺序部分保持串行化。\n\n从并行执行时间分解和加速比的基本定义出发，推导出弱扩展加速比 $S(N)$ 作为 $N$ 和 $\\alpha$ 的函数，并用它来确定加速比何时达到理想线性扩展的至少 $95\\%$，即 $S(N) \\geq 0.95\\,N$。对于每个核心，分析该不等式，以确定满足条件 $S(N) \\geq 0.95\\,N$ 的最小整数 $N \\geq 2$。确定随着 $N$ 的增长，哪个核心首先达到此阈值，并报告两个核心中任意一个首次达到该阈值时的最小整数 $N$。将您的最终答案表示为该单个整数 $N$，不带单位。无需四舍五入。", "solution": "我们从执行时间的基本分解开始。设基准工作负载下的总单处理器执行时间分解为\n$$\nT_{1} = T_{s} + T_{p},\n$$\n其中 $T_{s}$ 是固有顺序工作所花费的时间，而 $T_{p}$ 是可并行工作所花费的时间。将顺序部分定义为\n$$\n\\alpha = \\frac{T_{s}}{T_{s} + T_{p}}.\n$$\n在弱扩展到 $N$ 个处理单元的情况下，问题规模会增加，以便每个处理单元接收与单处理器基准中相同数量的并行工作。在理想分布的情况下，在 $N$ 个处理单元上完成并行部分的时间，对于每个处理单元来说，仍等于基准工作负载的单处理器并行时间，而顺序部分保持串行化，并且仍必须由一个处理单元执行。使用归一化单位，其中基准总时间 $T_{1}$ 设为 $1$，我们有 $T_{s} = \\alpha$ 和 $T_{p} = 1 - \\alpha$。\n\n对于在 $N$ 个处理单元上扩展后的问题，总的扩展后单处理器时间（如果由一个处理器执行扩展后的问题）将是\n$$\nT_{1}^{\\text{scaled}} = T_{s} + N T_{p} = \\alpha + N(1 - \\alpha).\n$$\n在 $N$ 个处理单元上的实际并行执行时间仍然是\n$$\nT_{N} = T_{s} + T_{p} = \\alpha + (1 - \\alpha) = 1,\n$$\n因为弱扩展下的理想并行化使得每个处理单元在并行部分上花费的时间保持恒定，而串行化部分保持不变。\n\n根据加速比的定义，\n$$\nS(N) = \\frac{T_{1}^{\\text{scaled}}}{T_{N}} = \\frac{\\alpha + N(1 - \\alpha)}{1} = \\alpha + N(1 - \\alpha).\n$$\n这等同于常被引用的古斯塔夫森定律（Gustafson’s law）的形式 $S(N) = N - \\alpha(N - 1)$，但这里我们是直接从弱扩展下的时间分解推导出来的。\n\n我们需要确定对于每个核心，$S(N)$ 何时能达到理想线性加速比 $N$ 的至少 $95\\%$，即\n$$\nS(N) \\geq 0.95\\,N.\n$$\n代入 $S(N) = \\alpha + N(1 - \\alpha)$：\n$$\n\\alpha + N(1 - \\alpha) \\geq 0.95\\,N.\n$$\n重新整理以分离出 $N$：\n$$\nN(1 - \\alpha) - 0.95\\,N \\geq -\\alpha \\quad \\Longrightarrow \\quad N(0.05 - \\alpha) \\geq -\\alpha.\n$$\n这个不等式可以根据 $(0.05 - \\alpha)$ 的符号进行分情况分析。\n\n对于 $\\alpha_{1} = 0.06$，我们有 $(0.05 - \\alpha_{1}) = -0.01  0$。不等式两边同时除以一个负数会改变不等号的方向：\n$$\nN \\leq \\frac{-\\alpha_{1}}{0.05 - \\alpha_{1}} = \\frac{-0.06}{-0.01} = 6.\n$$\n因此，对于核心1，条件 $S(N) \\geq 0.95\\,N$ 对所有满足 $N \\leq 6$ 的整数 $N$ 成立。满足该条件的最小整数 $N \\geq 2$ 是 $N = 2$。\n\n对于 $\\alpha_{2} = 0.12$，我们有 $(0.05 - \\alpha_{2}) = -0.07  0$，得到\n$$\nN \\leq \\frac{-\\alpha_{2}}{0.05 - \\alpha_{2}} = \\frac{-0.12}{-0.07} = \\frac{12}{7} \\approx 1.7142857\\ldots.\n$$\n因此，对于核心2，条件 $S(N) \\geq 0.95\\,N$ 仅对整数 $N \\leq 1$ 成立。不存在整数 $N \\geq 2$ 使核心2满足该阈值。\n\n比较这两个核心，核心1（具有较小的顺序部分 $\\alpha_{1}$）在 $N = 2$ 时达到阈值 $S(N) \\geq 0.95\\,N$，而核心2对于任何 $N \\geq 2$ 都无法达到该阈值。因此，当 $N$ 增长超过平凡的单处理器情况时，任一核心满足该阈值的最早 $N$ 是 $N=2$，由核心1实现。\n\n所要求的最终数值答案是两个核心中任一核心首次达到该阈值时的最小整数 $N$：\n$$\nN = 2.\n$$", "answer": "$$\\boxed{2}$$", "id": "3139820"}, {"introduction": "现实世界的并行应用，其性能行为往往比基础模型更为复杂。这个高级练习 [@problem_id:3169108] 打破了串行比例 $\\alpha$ 是一个常数的简单假设，引入了一个更符合某些高级算法（如自适应网格加密）的动态模型。你将探索在这种情况下，当处理器数量 $p$ 趋于无穷时，系统的渐进行为和并行效率。这项挑战旨在让你一窥真实世界中复杂并行程序性能分析的精髓。", "problem": "一个科学计算团队正在从固定时间规模可伸缩性观点（Gustafson 的观点）研究一个自适应网格加密 (AMR) 模拟的并行性能。令 $S(p)$ 表示在 $p$ 个相同处理器上的加速比，定义为在 1 个处理器上执行规模可伸缩问题所需的时间与在 $p$ 个处理器上执行同一规模可伸缩问题所需的时间之比。令 $E(p) = S(p)/p$ 表示并行效率。在固定时间规模可伸缩性观点中，当 $p$ 增加时，通过增加问题规模来保持总墙上时钟时间近似恒定，从而使可并行部分随 $p$ 增长，而内在串行部分不增长。令 $T_s$ 和 $T_p$ 分别表示在 $p$ 个处理器上对墙上时钟时间的串行和可并行贡献，因此在 $p$ 个处理器上的执行时间为 $T_s + T_p$，而在 1 个处理器上执行规模可伸缩问题的执行时间为 $T_s + p\\,T_p$。将规模可伸缩问题的串行分数定义为 $f(p) = T_s/(T_s + T_p)$。仅使用这些定义，推导出一个用 $p$ 和 $f(p)$ 表示 $S(p)$ 的表达式，并由此表示 $E(p)$。\n\n现在考虑一个 AMR 工作负载，其中串行分数随 $p$ 的减小关系如下：\n$$\nf(p) = \\frac{0.4}{1 + \\sqrt{p}}.\n$$\n使用您推导的表达式，确定当 $p \\to \\infty$ 时 $S(p)$ 的渐进行为，并找出满足 $E(p) \\ge 0.95$ 的最小整数 $p$。\n\n哪个选项正确陈述了渐进行为和最小整数阈值？\n\n- A. 当 $p \\to \\infty$ 时，$S(p) \\sim p$，且满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $p = 47$。\n- B. 当 $p \\to \\infty$ 时，$S(p)$ 饱和到一个常数（与 $p$ 无关），且满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $p \\approx 9$。\n- C. 当 $p \\to \\infty$ 时，$S(p) \\sim \\sqrt{p}$，且满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $p \\approx 100$。\n- D. 当 $p \\to \\infty$ 时，$S(p) \\sim p$，但由于串行部分的存在，没有有限的 $p$ 能达到 $E(p) \\ge 0.95$。.", "solution": "首先将验证问题陈述的正确性、一致性和科学依据。\n\n### 第 1 步：提取已知条件\n- $S(p)$: 在 $p$ 个相同处理器上的加速比。\n- $p$: 处理器数量。\n- 规模可伸缩性模型：固定时间规模可伸缩性（Gustafson 的观点）。\n- 加速比的定义：$S(p)$ 是在 1 个处理器上执行一个规模可伸缩问题所需的时间与在 $p$ 个处理器上执行同一规模可伸缩问题所需的时间之比。\n- $E(p)$: 并行效率，定义为 $E(p) = S(p)/p$。\n- $T_s$: 对墙上时钟时间的内在串行贡献，不随 $p$ 增长。\n- $T_p$: 在 $p$ 个处理器上对墙上时钟时间的可并行贡献。\n- 在 $p$ 个处理器上的执行时间：$T(p) = T_s + T_p$。\n- 在 1 个处理器上执行规模可伸缩问题的执行时间：$T(1)_{\\text{scaled}} = T_s + p\\,T_p$。\n- 总墙上时钟时间 $T_s + T_p$ 保持近似恒定。\n- 问题规模增加，使得可并行部分随 $p$ 增长。\n- 串行分数的定义：$f(p) = T_s/(T_s + T_p)$。\n- 串行分数的特定工作负载模型：$f(p) = \\frac{0.4}{1 + \\sqrt{p}}$。\n- 问题要求：\n    1. 一个用 $p$ 和 $f(p)$ 表示 $S(p)$ 和 $E(p)$ 的表达式。\n    2. 当 $p \\to \\infty$ 时 $S(p)$ 的渐进行为。\n    3. 满足 $E(p) \\ge 0.95$ 的最小整数 $p$。\n\n### 第 2 步：使用提取的已知条件进行验证\n该问题在计算科学和并行计算领域内定义明确且具有科学依据。所提供的加速比、效率和执行时间的定义是分析 Gustafson 模型下规模可伸缩性加速比的标准。\n\n- 加速比的定义由 $S(p) = \\frac{T(1)_{\\text{scaled}}}{T(p)} = \\frac{T_s + p\\,T_p}{T_s + T_p}$ 给出。这是规模可伸缩性加速比的正确表述。\n- 串行分数 $f(p)$ 是相对于在 $p$ 个处理器上的执行时间定义的，这在此背景下是标准的。\n- $f(p)$ 的函数形式是一个假设但物理上合理的模型，代表了串行开销（例如通信）的增长远慢于可并行工作的场景。\n- 问题内部是一致的。陈述“总墙上时钟时间近似恒定”($T_s+T_p \\approx \\text{const}$) 而“可并行部分随 $p$ 增长”是通过理解“可并行部分”指的是*工作量*而非*时间*来解决的。如果并行工作量是 $W_p$，那么 $T_p = W_p/p$。为了使 $T_p$ 和 $T_s$ 恒定，$W_p$ 必须与 $p$ 成比例增长，这与模型一致。在给定的问题中，$T_s$ 和 $T_p$ 不一定是常数，而是 $p$ 的函数，使得 $T_s+T_p$ 保持恒定。然而，$f(p)$ 的显式表达式意味着当 $p$ 变化时，$T_s$ 和 $T_p$ 之间存在一种特定的关系，这覆盖了一般性陈述。推导过程仅依赖于显式定义。\n\n### 第 3 步：结论和行动\n该问题是有效的。这是一个在并行性能分析领域中提法得当且具有科学性的问题。可以继续进行求解过程。\n\n### 推导与求解\n\n**第 1 部分：推导 $S(p)$ 和 $E(p)$ 的表达式**\n我们已知加速比 $S(p)$ 和串行分数 $f(p)$ 的定义：\n$$S(p) = \\frac{T_s + p\\,T_p}{T_s + T_p}$$\n$$f(p) = \\frac{T_s}{T_s + T_p}$$\n我们也可以将运行时间的并行分数表示为：\n$$1 - f(p) = 1 - \\frac{T_s}{T_s + T_p} = \\frac{T_s + T_p - T_s}{T_s + T_p} = \\frac{T_p}{T_s + T_p}$$\n现在，我们用 $f(p)$ 和 $(T_s + T_p)$ 来重写 $S(p)$ 的分子和分母：\n- 分子：$T_s + p\\,T_p = f(p)(T_s+T_p) + p(1-f(p))(T_s+T_p) = (f(p) + p(1-f(p)))(T_s+T_p)$\n- 分母：$T_s + T_p = (1)(T_s+T_p)$\n将这些代入 $S(p)$ 的表达式中：\n$$S(p) = \\frac{(f(p) + p(1-f(p)))(T_s+T_p)}{T_s+T_p} = f(p) + p(1-f(p))$$\n这可以重写为 $S(p) = p + f(p)(1-p)$。这是 Gustafson 定律的标准公式。\n\n接下来，我们推导并行效率 $E(p)$ 的表达式：\n$$E(p) = \\frac{S(p)}{p} = \\frac{f(p) + p(1-f(p))}{p} = \\frac{f(p)}{p} + 1 - f(p)$$\n这可以重写为 $E(p) = 1 - f(p)(1 - \\frac{1}{p}) = 1 - f(p)\\frac{p-1}{p}$。\n\n**第 2 部分：$S(p)$ 的渐进行为**\n我们已知串行分数的具体形式：\n$$f(p) = \\frac{0.4}{1 + \\sqrt{p}}$$\n为了找到当 $p \\to \\infty$ 时 $S(p)$ 的渐进行为，我们检查表达式 $S(p) = p + f(p)(1-p)$。\n$$\\lim_{p \\to \\infty} f(p) = \\lim_{p \\to \\infty} \\frac{0.4}{1 + \\sqrt{p}} = 0$$\n为了确定渐近关系，我们可以分析比率 $S(p)/p$：\n$$\\lim_{p \\to \\infty} \\frac{S(p)}{p} = \\lim_{p \\to \\infty} E(p) = \\lim_{p \\to \\infty} \\left(1 - f(p) + \\frac{f(p)}{p}\\right)$$\n因为 $\\lim_{p \\to \\infty} f(p) = 0$ 且 $\\lim_{p \\to \\infty} f(p)/p = 0$，我们有：\n$$\\lim_{p \\to \\infty} E(p) = 1 - 0 + 0 = 1$$\n$S(p)/p$ 的极限为 $1$ 意味着对于大的 $p$，$S(p)$ 的行为类似于 $p$。在渐近表示法中，这写作 $S(p) \\sim p$。\n\n**第 3 部分：满足 $E(p) \\ge 0.95$ 的最小整数 $p$**\n我们需要解不等式 $E(p) \\ge 0.95$。使用我们推导的 $E(p)$ 表达式：\n$$1 - f(p)\\frac{p-1}{p} \\ge 0.95$$\n$$0.05 \\ge f(p)\\frac{p-1}{p}$$\n代入给定的 $f(p)$ 表达式：\n$$0.05 \\ge \\left(\\frac{0.4}{1 + \\sqrt{p}}\\right) \\left(\\frac{p-1}{p}\\right)$$\n$$0.05 \\ge \\frac{0.4(p-1)}{p(1+\\sqrt{p})}$$\n假设 $p1$，我们可以重排不等式：\n$$\\frac{p(1+\\sqrt{p})}{p-1} \\ge \\frac{0.4}{0.05}$$\n$$\\frac{p(1+\\sqrt{p})}{p-1} \\ge 8$$\n让我们解相应的等式来找到 $p$ 的边界值：\n$$p(1+\\sqrt{p}) = 8(p-1)$$\n$$p + p\\sqrt{p} = 8p - 8$$\n$$p\\sqrt{p} - 7p + 8 = 0$$\n令 $x = \\sqrt{p}$。该方程变为关于 $x$ 的三次多项式：\n$$x^3 - 7x^2 + 8 = 0$$\n我们需要找到函数 $h(x) = x^3 - 7x^2 + 8$ 的根。我们对 $x  1$（因为 $p1$）的解感兴趣。让我们测试一些值：\n$h(6) = 6^3 - 7(6^2) + 8 = 216 - 7(36) + 8 = 224 - 252 = -28$。\n$h(7) = 7^3 - 7(7^2) + 8 = 343 - 343 + 8 = 8$。\n因为 $h(6)  0$ 且 $h(7)  0$，根 $x$ 位于 $6$ 和 $7$ 之间。\n让我们找一个更精确的值。\n当 $x \\approx 6.8$ 时，$h(6.8) = (6.8)^3 - 7(6.8)^2 + 8 = 314.432 - 7(46.24) + 8 = 322.432 - 323.68 = -1.248$。\n当 $x \\approx 6.9$ 时，$h(6.9) = (6.9)^3 - 7(6.9)^2 + 8 = 328.509 - 7(47.61) + 8 = 336.509 - 333.27 = 3.239$。\n根位于 $6.8$ 和 $6.9$ 之间。\n$p$ 的值是 $x^2$。所以，$p$ 的临界点在 $(6.8)^2 = 46.24$ 和 $(6.9)^2 = 47.61$ 之间。\n不等式是 $\\frac{p(1+\\sqrt{p})}{p-1} \\ge 8$。对于 $p4$，左侧的函数是递增的。\n因此，对于任何大于我们找到的根的 $p$，不等式都将成立。根大约是 $p \\approx 46.65$（来自 $x \\approx \\sqrt{46.65} \\approx 6.83$）。\n我们需要满足条件的最小整数 $p$。\n对于 $p=46$，$p  46.65$，所以我们预期 $E(46)  0.95$。\n对于 $p=47$，$p  46.65$，所以我们预期 $E(47) \\ge 0.95$。\n因此，满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $47$。\n\n### 逐项分析选项\n\n- **A. 当 $p \\to \\infty$ 时，$S(p) \\sim p$，且满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $p = 47$。**\n  - 渐进行为 $S(p) \\sim p$ 与推导结果一致，是正确的。\n  - 效率条件下的最小整数 $p=47$ 与计算结果一致，是正确的。\n  - **结论：正确**\n\n- **B. 当 $p \\to \\infty$ 时，$S(p)$ 饱和到一个常数（与 $p$ 无关），且满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $p \\approx 9$。**\n  - 渐进行为不正确。$S(p) \\sim p$，它不会饱和。饱和是阿姆达尔定律的特征，而不是 Gustafson 定律的特征。\n  - $p \\approx 9$ 的值不正确。我们的计算显示 $p=47$。\n  - **结论：不正确**\n\n- **C. 当 $p \\to \\infty$ 时，$S(p) \\sim \\sqrt{p}$，且满足 $E(p) \\ge 0.95$ 的最小整数 $p$ 是 $p \\approx 100$。**\n  - 渐进行为不正确。$S(p) \\sim p$，而不是 $\\sqrt{p}$。\n  - 虽然 $p=100$ 确实满足 $E(p) \\ge 0.95$，但它不是满足条件的*最小*整数。\n  - **结论：不正确**\n\n- **D. 当 $p \\to \\infty$ 时，$S(p) \\sim p$，但由于串行部分的存在，没有有限的 $p$ 能达到 $E(p) \\ge 0.95$。**\n  - 渐进行为 $S(p) \\sim p$ 是正确的。\n  - 关于没有有限的 $p$ 能达到效率目标的说法是不正确的。我们明确地发现对于 $p \\ge 47$，$E(p) \\ge 0.95$。效率函数 $E(p)$ 在 $p \\to \\infty$ 时趋近于 $1$，所以它最终必然会超过任何小于 $1$ 的阈值。\n  - **结论：不正确**", "answer": "$$\\boxed{A}$$", "id": "3169108"}]}