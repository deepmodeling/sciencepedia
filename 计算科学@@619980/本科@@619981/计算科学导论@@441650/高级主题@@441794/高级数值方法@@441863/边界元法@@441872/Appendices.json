{"hands_on_practices": [{"introduction": "理解边界元方法 (BEM) 的最佳途径之一是亲手构建一个小型系统。这个练习将引导您为一个简单的方形域上的拉普拉斯问题，从零开始进行离散化，手动计算矩阵项，并建立最终的线性方程组，从而揭开 BEM 的神秘面紗。通过这种亲手计算，您将深刻理解边界积分方程与其离散代数形式之间的内在联系。", "problem": "考虑二维（$2$D）单位正方形域 $\\Omega = (0,1)\\times(0,1)$ 上的 Laplace 方程的内部边值问题，其边界为 $\\Gamma = \\partial\\Omega$。令 $u$ 表示势，令 $q = \\partial u/\\partial n$ 表示向外的法向通量。使用适用于 Laplace 算子的直接边界积分方程，以及二维自由空间 Green 函数\n$$\nG(\\mathbf{x},\\mathbf{y}) \\;=\\; -\\frac{1}{2\\pi}\\,\\ln|\\mathbf{x}-\\mathbf{y}|\\;,\n$$\n并在光滑边界点 $\\mathbf{x}\\in\\Gamma$ 处采用标准内部约定 $c(\\mathbf{x}) = \\tfrac{1}{2}$。用每边一个直的常强度单元（共四个单元）对边界进行离散，并在每个单元的中点进行配置。单元索引如下：\n- $\\Gamma_{1}:\\ \\{(s,0)\\,|\\,0\\le s\\le 1\\}$，其外法线向量为 $\\mathbf{n}_{1}=(0,-1)$，\n- $\\Gamma_{2}:\\ \\{(1,s)\\,|\\,0\\le s\\le 1\\}$，其外法线向量为 $\\mathbf{n}_{2}=(1,0)$，\n- $\\Gamma_{3}:\\ \\{(s,1)\\,|\\,0\\le s\\le 1\\}$，其外法线向量为 $\\mathbf{n}_{3}=(0,1)$，\n- $\\Gamma_{4}:\\ \\{(0,s)\\,|\\,0\\le s\\le 1\\}$，其外法线向量为 $\\mathbf{n}_{4}=(-1,0)$，\n以及配置点\n$$\n\\mathbf{x}_{1}=(\\tfrac{1}{2},0),\\quad \\mathbf{x}_{2}=(1,\\tfrac{1}{2}),\\quad \\mathbf{x}_{3}=(\\tfrac{1}{2},1),\\quad \\mathbf{x}_{4}=(0,\\tfrac{1}{2}).\n$$\n施加 Dirichlet 数据\n$$\nu=0\\ \\text{on}\\ \\Gamma_{1}\\cup\\Gamma_{4},\\qquad u=1\\ \\text{on}\\ \\Gamma_{2}\\cup\\Gamma_{3}.\n$$\n在每个单元上 $u$ 和 $q$ 为分段常数并在中点进行配置的条件下，通过精确计算所需的边界积分，从第一性原理出发，构建最终的 $4\\times 4$ 线性系统。然后求解该系统，得到四个未知的单元常数外向通量 $\\{q_{j}\\}_{j=1}^{4}$。使用反三角函数的主值（以弧度为单位），并将您的最终结果精确表示为一个行矩阵 $(q_{1}\\ q_{2}\\ q_{3}\\ q_{4})$（无数值舍入）。", "solution": "所提出的问题是一个定义明确的二维 Laplace 方程边值问题，将使用直接边界元法求解。所有需要的数据，包括几何形状、边界条件和离散化方案，均已提供。该问题具有科学依据，是自洽且客观的。因此，它被认为是有效的，并将提供解答。\n\n由 Laplace 方程控制的内部势问题的直接边界积分方程（BIE）由下式给出\n$$c(\\mathbf{x}) u(\\mathbf{x}) + \\int_{\\Gamma} u(\\mathbf{y}) \\frac{\\partial G(\\mathbf{x}, \\mathbf{y})}{\\partial n_y} \\, d\\Gamma_y = \\int_{\\Gamma} q(\\mathbf{y}) G(\\mathbf{x}, \\mathbf{y}) \\, d\\Gamma_y$$\n其中 $\\mathbf{x}$ 是边界 $\\Gamma$ 上的一个点，$c(\\mathbf{x})$ 是立体角系数，$u$ 是势，$q = \\partial u/\\partial n$ 是法向通量，$G(\\mathbf{x},\\mathbf{y})$ 是自由空间 Green 函数。对于此问题，$G(\\mathbf{x},\\mathbf{y}) = -\\frac{1}{2\\pi}\\ln|\\mathbf{x}-\\mathbf{y}|$。Green 函数的法向导数为 $\\frac{\\partial G}{\\partial n_y} = \\nabla_y G \\cdot \\mathbf{n}_y = -\\frac{1}{2\\pi} \\frac{(\\mathbf{y}-\\mathbf{x})\\cdot\\mathbf{n}_y}{|\\mathbf{y}-\\mathbf{x}|^2}$。\n\n边界 $\\Gamma$ 被离散为四个常强度单元 $\\Gamma_j$，$j=1,2,3,4$。势 $u$ 和通量 $q$ 在每个单元 $\\Gamma_j$ 上假定为分段常数 $u_j$ 和 $q_j$。在每个单元 $\\Gamma_i$ 的中点 $\\mathbf{x}_i$ 应用 BIE，得到一个线性代数方程组。由于配置点位于直线段的中点，它们是边界上的光滑点，因此对所有 $i$ 都有 $c(\\mathbf{x}_i) = 1/2$。离散化的 BIE 为：\n$$\\frac{1}{2} u_i + \\sum_{j=1}^{4} u_j \\left( \\int_{\\Gamma_j} \\frac{\\partial G(\\mathbf{x}_i, \\mathbf{y})}{\\partial n_y} \\, d\\Gamma_y \\right) = \\sum_{j=1}^{4} q_j \\left( \\int_{\\Gamma_j} G(\\mathbf{x}_i, \\mathbf{y}) \\, d\\Gamma_y \\right)$$\n这可以写成矩阵形式 $(\\mathbf{H} + \\frac{1}{2}\\mathbf{I})\\mathbf{u} = \\mathbf{G}\\mathbf{q}$，其中矩阵元素由下式给出：\n$$H_{ij} = \\int_{\\Gamma_j} \\frac{\\partial G(\\mathbf{x}_i, \\mathbf{y})}{\\partial n_y} \\, d\\Gamma_y \\quad \\text{and} \\quad G_{ij} = \\int_{\\Gamma_j} G(\\mathbf{x}_i, \\mathbf{y}) \\, d\\Gamma_y$$\n已知量是每个单元上的势，由 Dirichlet 边界条件给出：$u_1 = 0$，$u_2 = 1$，$u_3 = 1$，$u_4 = 0$。势向量为 $\\mathbf{u} = (0, 1, 1, 0)^T$。未知量是通量 $\\mathbf{q} = (q_1, q_2, q_3, q_4)^T$。\n\n我们现在必须计算矩阵系数 $H_{ij}$ 和 $G_{ij}$。\n由于正方形几何形状和配置点的选择，矩阵 $\\mathbf{H}$ 和 $\\mathbf{G}$ 将表现出对称结构。我们将有对角元（$i=j$）、相邻元（例如，$i=1, j=2$）和相对元（$i=1, j=3$）。\n\n$H_{ij}$ 的计算：\n对于直单元，当 $i=j$ 时，向量 $\\mathbf{y}-\\mathbf{x}_i$ 与单元 $\\Gamma_i$ 相切。法向量 $\\mathbf{n}_i$ 与单元正交。因此，$(\\mathbf{y}-\\mathbf{x}_i) \\cdot \\mathbf{n}_i = 0$，这意味着对所有 $i=1,2,3,4$ 都有 $H_{ii} = 0$。\n对于非对角元，我们计算积分。让我们计算第一行（$i=1$，其中 $\\mathbf{x}_1 = (1/2, 0)$）。\n$H_{12}$：在 $\\Gamma_2$ 上积分，其中 $\\mathbf{y}=(1,s)$，$s\\in[0,1]$，且 $\\mathbf{n}_2=(1,0)$。\n$H_{12} = -\\frac{1}{2\\pi} \\int_0^1 \\frac{((1,s)-(1/2,0))\\cdot(1,0)}{|(1,s)-(1/2,0)|^2} ds = -\\frac{1}{2\\pi} \\int_0^1 \\frac{1/2}{(1/2)^2+s^2} ds = -\\frac{1}{4\\pi} \\left[2\\arctan(2s)\\right]_0^1 = -\\frac{\\arctan(2)}{2\\pi}$。\n$H_{14}$：在 $\\Gamma_4$ 上积分，其中 $\\mathbf{y}=(0,s)$，$s\\in[0,1]$，且 $\\mathbf{n}_4=(-1,0)$。\n$H_{14} = -\\frac{1}{2\\pi} \\int_0^1 \\frac{((0,s)-(1/2,0))\\cdot(-1,0)}{|(0,s)-(1/2,0)|^2} ds = -\\frac{1}{2\\pi} \\int_0^1 \\frac{1/2}{(-1/2)^2+s^2} ds = H_{12} = -\\frac{\\arctan(2)}{2\\pi}$。\n$H_{13}$：在 $\\Gamma_3$ 上积分，其中 $\\mathbf{y}=(s,1)$，$s\\in[0,1]$，且 $\\mathbf{n}_3=(0,1)$。\n$H_{13} = -\\frac{1}{2\\pi} \\int_0^1 \\frac{((s,1)-(1/2,0))\\cdot(0,1)}{|(s,1)-(1/2,0)|^2} ds = -\\frac{1}{2\\pi} \\int_0^1 \\frac{1}{(s-1/2)^2+1^2} ds = -\\frac{1}{2\\pi} \\left[\\arctan(s-1/2)\\right]_0^1 = -\\frac{1}{2\\pi}(\\arctan(1/2)-\\arctan(-1/2)) = -\\frac{\\arctan(1/2)}{\\pi}$。\n根据对称性，令 $h_a = H_{12} = H_{14} = H_{21} = \\dots = -\\frac{\\arctan(2)}{2\\pi}$ 且 $h_o = H_{13} = H_{31} = \\dots = -\\frac{\\arctan(1/2)}{\\pi}$。\n矩阵 $\\mathbf{H}$ 为：\n$\\mathbf{H} = \\begin{pmatrix} 0  h_a  h_o  h_a \\\\ h_a  0  h_a  h_o \\\\ h_o  h_a  0  h_a \\\\ h_a  h_o  h_a  0 \\end{pmatrix}$。\n注意，每行的和为 $2h_a+h_o = -\\frac{\\arctan(2)}{\\pi} - \\frac{\\arctan(1/2)}{\\pi} = -\\frac{1}{\\pi}(\\arctan(2)+\\arctan(1/2)) = -\\frac{1}{\\pi}(\\frac{\\pi}{2}) = -1/2$，这满足求和规则 $\\sum_j H_{ij} = -c(\\mathbf{x}_i)$。\n\n$G_{ij}$ 的计算：\n我们使用通用积分公式：$\\int \\ln(t^2+c^2)dt = t\\ln(t^2+c^2) - 2t + 2c\\arctan(t/c)$。\n$G_{11}$：在 $\\Gamma_1$ 上积分，其中 $\\mathbf{y}=(s,0)$，$s\\in[0,1]$。\n$G_{11} = -\\frac{1}{2\\pi}\\int_0^1 \\ln|s-1/2| ds = -\\frac{1}{2\\pi} (2 \\int_0^{1/2} \\ln(t) dt) = -\\frac{1}{\\pi}[t\\ln t - t]_0^{1/2} = -\\frac{1}{\\pi}(\\frac{1}{2}\\ln(1/2)-\\frac{1}{2}) = \\frac{1+\\ln 2}{2\\pi}$。\n$G_{12}$：在 $\\Gamma_2$ 上积分，$\\mathbf{y}=(1,s)$，$s\\in[0,1]$。\n$G_{12} = -\\frac{1}{2\\pi} \\int_0^1 \\ln\\sqrt{(1/2)^2+s^2} ds = -\\frac{1}{4\\pi}\\int_0^1 \\ln(s^2+(1/2)^2) ds = -\\frac{1}{4\\pi}[s\\ln(s^2+1/4)-2s+\\arctan(2s)]_0^1 = -\\frac{1}{4\\pi}(\\ln(5/4)-2+\\arctan(2)) = \\frac{2-\\ln(5/4)-\\arctan(2)}{4\\pi}$。\n$G_{13}$：在 $\\Gamma_3$ 上积分，$\\mathbf{y}=(s,1)$，$s\\in[0,1]$。\n$G_{13} = -\\frac{1}{2\\pi} \\int_0^1 \\ln\\sqrt{(s-1/2)^2+1^2} ds = -\\frac{1}{4\\pi}\\int_{-1/2}^{1/2} \\ln(t^2+1) dt = -\\frac{2}{4\\pi}\\int_0^{1/2} \\ln(t^2+1) dt = -\\frac{1}{2\\pi}[t\\ln(t^2+1)-2t+2\\arctan(t)]_0^{1/2} = -\\frac{1}{2\\pi}(\\frac{1}{2}\\ln(5/4)-1+2\\arctan(1/2)) = \\frac{1-\\frac{1}{2}\\ln(5/4)-2\\arctan(1/2)}{2\\pi}$。\n根据对称性，令 $g_d = G_{11} = G_{22} = \\dots = \\frac{1+\\ln 2}{2\\pi}$，$g_a = G_{12} = G_{14} = \\dots = \\frac{2-\\ln(5/4)-\\arctan(2)}{4\\pi}$，且 $g_o = G_{13} = G_{31} = \\dots = \\frac{2-\\ln(5/4)-4\\arctan(1/2)}{4\\pi}$。\n矩阵 $\\mathbf{G}$ 为：\n$\\mathbf{G} = \\begin{pmatrix} g_d  g_a  g_o  g_a \\\\ g_a  g_d  g_a  g_o \\\\ g_o  g_a  g_d  g_a \\\\ g_a  g_o  g_a  g_d \\end{pmatrix}$。\n\n现在我们构建并求解系统 $\\mathbf{G}\\mathbf{q}=\\mathbf{v}$，其中 $\\mathbf{v} = (\\mathbf{H} + \\frac{1}{2}\\mathbf{I})\\mathbf{u}$。\n当 $\\mathbf{u}=(0,1,1,0)^T$ 时：\n$v_1 = \\frac{1}{2}u_1 + H_{12}u_2 + H_{13}u_3 + H_{14}u_4 = h_a(1) + h_o(1) = h_a+h_o$。\n$v_2 = H_{21}u_1 + \\frac{1}{2}u_2 + H_{23}u_3 + H_{24}u_4 = \\frac{1}{2}(1) + h_a(1) = 1/2+h_a$。\n$v_3 = H_{31}u_1 + H_{32}u_2 + \\frac{1}{2}u_3 + H_{34}u_4 = h_a(1) + \\frac{1}{2}(1) = 1/2+h_a$。\n$v_4 = H_{41}u_1 + H_{42}u_2 + H_{43}u_3 + \\frac{1}{2}u_4 = h_o(1) + h_a(1) = h_a+h_o$。\n所以，$\\mathbf{v} = (h_a+h_o, 1/2+h_a, 1/2+h_a, h_a+h_o)^T$。\n\n该问题关于直线 $y=x$ 具有反射对称性。边界条件也遵循此对称性。因此，通量的解也必须是对称的：$q_1=q_4$ 且 $q_2=q_3$。令 $q_1=q_4=A$ 且 $q_2=q_3=B$。这个 $4 \\times 4$ 系统简化为 $2 \\times 2$ 系统：\n\\begin{align*} (g_d+g_a)A + (g_a+g_o)B = h_a+h_o \\\\ (g_a+g_o)A + (g_d+g_a)B = 1/2+h_a \\end{align*}\n两方程相减得到：\n$((g_d+g_a)-(g_a+g_o))A + ((g_a+g_o)-(g_d+g_a))B = (h_a+h_o)-(1/2+h_a)$\n$(g_d-g_o)A - (g_d-g_o)B = h_o-1/2$\n$(g_d-g_o)(A-B) = h_o-1/2$。\n两方程相加得到：\n$((g_d+g_a)+(g_a+g_o))(A+B) = (h_a+h_o) + (1/2+h_a)$\n$(g_d+2g_a+g_o)(A+B) = 1/2+2h_a+h_o$。\n由于 $2h_a+h_o = -1/2$，右侧为 $0$。和 $g_d+2g_a+g_o$ 非零，因此我们必须有 $A+B=0$，即 $B=-A$。这与物理要求一致，即无源区域的总流出通量为零：$\\sum q_j L_j = q_1(1)+q_2(1)+q_3(1)+q_4(1) = A+B+B+A = 2(A+B)=0$。\n将 $B=-A$ 代入 $2 \\times 2$ 系统的第一个方程：\n$(g_d+g_a)A - (g_a+g_o)A = h_a+h_o$\n$(g_d-g_o)A = h_a+h_o \\implies A = \\frac{h_a+h_o}{g_d-g_o}$。\n我们计算分子和分母。\n$h_a+h_o = -\\frac{\\arctan(2)}{2\\pi} - \\frac{\\arctan(1/2)}{\\pi} = -\\frac{1}{2\\pi}(\\arctan(2)+2\\arctan(1/2))$。使用恒等式 $\\arctan(2)+\\arctan(1/2)=\\pi/2$，因此 $\\arctan(2)=\\pi/2-\\arctan(1/2)$，我们得到：\n$h_a+h_o = -\\frac{1}{2\\pi}(\\pi/2 - \\arctan(1/2) + 2\\arctan(1/2)) = -\\frac{1}{2\\pi}(\\frac{\\pi}{2}+\\arctan(1/2))$。\n对于分母：\n$g_d=\\frac{1+\\ln 2}{2\\pi}$ and $g_o=\\frac{2-\\ln(5/4)-4\\arctan(1/2)}{4\\pi}=\\frac{1-\\frac{1}{2}(\\ln 5 - 2\\ln 2)-2\\arctan(1/2)}{2\\pi}$。\n$g_d-g_o = \\frac{1}{2\\pi}[(1+\\ln 2) - (1-\\frac{1}{2}\\ln 5 + \\ln 2-2\\arctan(1/2))] = \\frac{1}{2\\pi}(\\frac{1}{2}\\ln 5 + 2\\arctan(1/2))$。\n因此，\n$A = \\frac{-\\frac{1}{2\\pi}(\\frac{\\pi}{2}+\\arctan(1/2))}{\\frac{1}{2\\pi}(\\frac{1}{2}\\ln 5+2\\arctan(1/2))} = -\\frac{\\frac{\\pi}{2}+\\arctan(1/2)}{\\frac{1}{2}\\ln 5+2\\arctan(1/2)}$。\n那么通量为：\n$q_1=q_4=A = -\\frac{\\pi/2+\\arctan(1/2)}{1/2\\ln 5+2\\arctan(1/2)}$\n$q_2=q_3=B=-A = \\frac{\\pi/2+\\arctan(1/2)}{1/2\\ln 5+2\\arctan(1/2)}$。\n\n最终结果为行矩阵 $(q_1 \\ q_2 \\ q_3 \\ q_4)$。\n令常数 $C = \\frac{\\frac{\\pi}{2}+\\arctan(\\frac{1}{2})}{\\frac{1}{2}\\ln 5+2\\arctan(\\frac{1}{2})} = \\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})}$。\n则 $q_1 = -C$，$q_2 = C$，$q_3 = C$，$q_4 = -C$。\n最终答案如下所示。", "answer": "$$ \\boxed{ \\begin{pmatrix} -\\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})}  \\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})}  \\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})}  -\\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})} \\end{pmatrix} } $$", "id": "2374819"}, {"introduction": "在掌握了 BEM 系统的整体构建框架后，我们现在聚焦于一个关键的实现细节：计算构成矩阵的积分项。本练习将引导您推导并实现对数核函数积分的精确解析公式，这对于确保计算精度至关重要，尤其是在源点和场点彼此靠近时。掌握这种奇性积分的处理是编写一个稳健的 BEM 代码的关键一步。", "problem": "考虑拉普拉斯方程的二维对数核，其定义为标量函数 $K(\\mathbf{x},\\mathbf{x}_0) = \\ln r$，其中 $r = \\|\\mathbf{x} - \\mathbf{x}_0\\|$ 是源点 $\\mathbf{x}$ 与场点 $\\mathbf{x}_0$ 之间的欧几里得距离。对于一个直线常数单元，设该单元为平面中连接端点 $\\mathbf{A} = (x_1, y_1)$ 和 $\\mathbf{B} = (x_2, y_2)$ 的线段 $\\Gamma$，并设场点为 $\\mathbf{P} = (x_f, y_f)$。定义线积分\n$$\nI(\\mathbf{A}, \\mathbf{B}, \\mathbf{P}) = \\int_{\\Gamma} \\ln\\!\\left(\\frac{\\|\\mathbf{x} - \\mathbf{P}\\|}{L_0}\\right)\\, d\\ell,\n$$\n其中 $d\\ell$ 是沿 $\\Gamma$ 的线元，$L_0$ 是一个为使对数参数无量纲而引入的固定参考长度。所有距离必须以米为单位测量，并使用 $L_0 = 1\\,\\mathrm{m}$。量 $I(\\mathbf{A}, \\mathbf{B}, \\mathbf{P})$ 的单位是米。\n\n任务：\n- 从第一性原理出发，推导 $I(\\mathbf{A}, \\mathbf{B}, \\mathbf{P})$ 的一个闭式表达式，该表达式对任何非退化直线段 $\\Gamma$ 和平面中的任何场点 $\\mathbf{P}$ 均有效，包括极限情况，即 $\\mathbf{P}$ 到线段所在直线的垂直距离为零，且 $\\mathbf{P}$ 在该直线上的投影位于线段内部。\n- 实现一个程序，使用推导出的闭式表达式计算下列测试套件中 $I(\\mathbf{A}, \\mathbf{B}, \\mathbf{P})$ 的值，其中所有坐标单位均为米：\n  - 测试 $1$：$\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (0.3,0.4)$。\n  - 测试 $2$：$\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (0.3,0)$。\n  - 测试 $3$：$\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (0.3,10^{-12})$。\n  - 测试 $4$：$\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (-0.5,0)$。\n  - 测试 $5$：$\\mathbf{A} = (1,2)$, $\\mathbf{B} = (4,6)$, $\\mathbf{P} = (3,3)$。\n  - 测试 $6$：$\\mathbf{A} = (0,0)$, $\\mathbf{B} = (10^{-9},0)$, $\\mathbf{P} = (0,1)$。\n  - 测试 $7$：$\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (1,0)$。\n\n在任何中间表达式中（例如，反正切），如果适用，角度单位必须是弧度。最终的数值结果必须以米表示。\n\n您的程序必须生成一行输出，其中包含测试 $1$ 到测试 $7$ 的结果，形式为一个逗号分隔的十进制数列表，每个数小数点后精确到 $12$ 位，并用方括号括起来。例如，输出格式必须为\n$[r_1,r_2,r_3,r_4,r_5,r_6,r_7]$\n其中每个 $r_k$ 是一个对应于测试 $k$ 的浮点数，单位为米，格式化为小数点后 $12$ 位。不允许有其他额外输出。", "solution": "该问题已经过验证，被认为是有效的。它具有科学依据、是适定的且客观的。问题陈述完整、一致且可形式化。该积分为二维位势论和边界元法中的标准单元。对数奇异性是可积的，这确保了即使求值点位于积分路径上，问题也是适定的。\n\n该问题要求推导并实现积分的闭式解：\n$$\nI(\\mathbf{A}, \\mathbf{B}, \\mathbf{P}) = \\int_{\\Gamma} \\ln\\!\\left(\\frac{\\|\\mathbf{x} - \\mathbf{P}\\|}{L_0}\\right)\\, d\\ell\n$$\n给定参考长度 $L_0=1$，对数的参数变为无量纲。由于 $\\ln(1)=0$，我们有 $\\ln(\\|\\mathbf{x} - \\mathbf{P}\\|/L_0) = \\ln(\\|\\mathbf{x} - \\mathbf{P}\\|) - \\ln(L_0) = \\ln(\\|\\mathbf{x} - \\mathbf{P}\\|)$。令 $r = \\|\\mathbf{x} - \\mathbf{P}\\|$。该积分简化为：\n$$\nI = \\int_{\\Gamma} \\ln r \\, d\\ell\n$$\n\n为求解此积分，我们为线段 $\\Gamma$ 建立一个局部坐标系 $(\\xi, \\eta)$。设原点在点 $\\mathbf{A}$，$\\xi$ 轴与从 $\\mathbf{A}$ 到 $\\mathbf{B}$ 的向量对齐。线段的长度为 $L = \\|\\mathbf{B} - \\mathbf{A}\\|$。线段上的一个点 $\\mathbf{x}$ 可由 $\\xi \\in [0, L]$ 参数化。线元为 $d\\ell = d\\xi$。\n\n沿线段的单位切向量为 $\\mathbf{t} = (\\mathbf{B} - \\mathbf{A})/L$。从 $\\mathbf{t}$ 逆时针旋转得到的单位法向量为 $\\mathbf{n}$。场点 $\\mathbf{P}$ 可在此局部坐标系中用坐标 $(\\xi_p, \\eta_p)$ 描述，它们是向量 $\\mathbf{P} - \\mathbf{A}$ 在局部坐标轴上的投影：\n$$\n\\xi_p = (\\mathbf{P} - \\mathbf{A}) \\cdot \\mathbf{t}\n$$\n$$\n\\eta_p = (\\mathbf{P} - \\mathbf{A}) \\cdot \\mathbf{n}\n$$\n从线段上一点 $\\mathbf{x}(\\xi)$（局部坐标为 $(\\xi, 0)$）到场点 $\\mathbf{P}$（局部坐标为 $(\\xi_p, \\eta_p)$）的距离 $r$ 由下式给出：\n$$\nr = \\sqrt{(\\xi - \\xi_p)^2 + \\eta_p^2}\n$$\n积分变为：\n$$\nI = \\int_{0}^{L} \\ln \\sqrt{(\\xi - \\xi_p)^2 + \\eta_p^2} \\, d\\xi = \\frac{1}{2} \\int_{0}^{L} \\ln \\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) \\, d\\xi\n$$\n\n我们使用分部积分法 $\\int u \\, dv = uv - \\int v \\, du$ 求解不定积分 $J(\\xi) = \\int \\ln \\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) \\, d\\xi$。令 $u = \\ln((\\xi - \\xi_p)^2 + \\eta_p^2)$ 且 $dv = d\\xi$。为方便起见，我们选择 $v = \\xi - \\xi_p$。则 $du = \\frac{2(\\xi - \\xi_p)}{(\\xi - \\xi_p)^2 + \\eta_p^2} d\\xi$。\n$$\nJ(\\xi) = (\\xi - \\xi_p) \\ln \\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) - \\int (\\xi - \\xi_p) \\frac{2(\\xi - \\xi_p)}{(\\xi - \\xi_p)^2 + \\eta_p^2} \\, d\\xi\n$$\n剩余的积分通过换元法计算。令 $s = \\xi - \\xi_p$：\n$$\n\\int \\frac{2s^2}{s^2 + \\eta_p^2} \\, ds = \\int \\frac{2(s^2 + \\eta_p^2) - 2\\eta_p^2}{s^2 + \\eta_p^2} \\, ds = \\int \\left( 2 - \\frac{2\\eta_p^2}{s^2 + \\eta_p^2} \\right) ds\n$$\n$$\n= 2s - 2\\eta_p^2 \\int \\frac{1}{s^2 + \\eta_p^2} ds = 2s - 2\\eta_p \\arctan\\left(\\frac{s}{\\eta_p}\\right)\n$$\n此式对任何符号的 $\\eta_p \\neq 0$ 均成立。将 $s = \\xi - \\xi_p$ 代回：\n$$\nJ(\\xi) = (\\xi - \\xi_p) \\ln\\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) - 2(\\xi - \\xi_p) + 2\\eta_p \\arctan\\left(\\frac{\\xi - \\xi_p}{\\eta_p}\\right)\n$$\n定积分为 $I = \\frac{1}{2}[J(L) - J(0)]$。令 $R_A = \\|\\mathbf{P} - \\mathbf{A}\\| = \\sqrt{\\xi_p^2 + \\eta_p^2}$ 且 $R_B = \\|\\mathbf{P} - \\mathbf{B}\\| = \\sqrt{(L-\\xi_p)^2 + \\eta_p^2}$。\n$$\nJ(L) = (L-\\xi_p)\\ln(R_B^2) - 2(L-\\xi_p) + 2\\eta_p \\arctan\\left(\\frac{L-\\xi_p}{\\eta_p}\\right)\n$$\n$$\nJ(0) = (-\\xi_p)\\ln(R_A^2) - 2(-\\xi_p) + 2\\eta_p \\arctan\\left(\\frac{-\\xi_p}{\\eta_p}\\right)\n$$\n相减并化简得到：\n$$\nI = (L - \\xi_p) \\ln R_B + \\xi_p \\ln R_A - L + \\eta_p \\left( \\arctan\\left(\\frac{L - \\xi_p}{\\eta_p}\\right) - \\arctan\\left(\\frac{-\\xi_p}{\\eta_p}\\right) \\right)\n$$\n使用恒等式 $\\arctan(-x) = -\\arctan(x)$，表达式简化为：\n$$\nI = (L - \\xi_p) \\ln R_B + \\xi_p \\ln R_A - L + \\eta_p \\left( \\arctan\\left(\\frac{L - \\xi_p}{\\eta_p}\\right) + \\arctan\\left(\\frac{\\xi_p}{\\eta_p}\\right) \\right)\n$$\n此表达式是 $\\eta_p$ 的偶函数，因为当 $\\eta_p  0$ 时，初始因子 $\\eta_p$ 是负的，但每个 $\\arctan$ 项也会符号反转，从而得到相同的值。因此，我们可以使用 $|\\eta_p|$ 来书写公式，以强调这种对称性：\n$$\nI = (L - \\xi_p) \\ln R_B + \\xi_p \\ln R_A - L + |\\eta_p| \\left( \\arctan\\left(\\frac{L - \\xi_p}{|\\eta_p|}\\right) + \\arctan\\left(\\frac{\\xi_p}{|\\eta_p|}\\right) \\right)\n$$\n\n现在，考虑极限情况，即 $\\mathbf{P}$ 位于包含线段 $\\Gamma$ 的直线上，即 $\\eta_p = 0$。我们直接对这种情况计算积分：\n$$\nI = \\int_0^L \\ln|\\xi - \\xi_p| \\, d\\xi\n$$\n使用 $\\ln|u|$ 的原函数 $u \\ln|u| - u$：\n$$\nI = \\left[ (\\xi - \\xi_p) \\ln|\\xi - \\xi_p| - (\\xi - \\xi_p) \\right]_0^L\n$$\n$$\n= \\left((L - \\xi_p)\\ln|L - \\xi_p| - (L - \\xi_p)\\right) - \\left((-\\xi_p)\\ln|-\\xi_p| - (-\\xi_p)\\right)\n$$\n$$\nI = (L - \\xi_p)\\ln|L - \\xi_p| + \\xi_p\\ln|\\xi_p| - L\n$$\n此表达式也是通用公式在 $\\eta_p \\to 0$ 时的极限，因为 $\\lim_{y \\to 0} y \\arctan(K/y) = 0$。在实现时，必须注意对数参数为零的情况（即 $\\xi_p=0$ 或 $\\xi_p=L$）。在这些情况下，项 $x \\ln|x|$ 必须按其极限（即 $0$）进行计算。\n\n实现将使用这两个公式。使用一个关于 $|\\eta_p|/L$ 的小数值容差来选择使用通用公式还是数值上更稳定的共线情况公式。\n$\\mathbf{P}$ 在局部坐标系中的坐标计算如下：\n$L = \\sqrt{(x_2-x_1)^2 + (y_2-y_1)^2}$\n$\\xi_p = \\frac{(x_f-x_1)(x_2-x_1) + (y_f-y_1)(y_2-y_1)}{L}$\n$\\eta_p = \\frac{(y_f-y_1)(x_2-x_1) - (x_f-x_1)(y_2-y_1)}{L}$\n量 $(y_f-y_1)(x_2-x_1) - (x_f-x_1)(y_2-y_1)$ 与二维向量叉积有关，表示由向量 $\\mathbf{P}-\\mathbf{A}$ 和 $\\mathbf{B}-\\mathbf{A}$ 构成的平行四边形的有向面积。", "answer": "```python\nimport numpy as np\n\ndef _x_times_log_abs_x(x):\n    \"\"\"\n    Calculates x * log(|x|) with a safeguard for x=0.\n    The limit of x*log|x| as x approaches 0 is 0.\n    \"\"\"\n    if np.abs(x)  1e-30:\n        return 0.0\n    return x * np.log(np.abs(x))\n\ndef calculate_integral(A_coords, B_coords, P_coords):\n    \"\"\"\n    Calculates the integral I = integral over Gamma of ln(r) dl,\n    where Gamma is the line segment from A to B and r is the distance from a point on Gamma to P.\n    \n    Args:\n        A_coords (tuple): Coordinates of point A (x1, y1).\n        B_coords (tuple): Coordinates of point B (x2, y2).\n        P_coords (tuple): Coordinates of field point P (xf, yf).\n\n    Returns:\n        float: The value of the integral.\n    \"\"\"\n    A = np.array(A_coords, dtype=np.float64)\n    B = np.array(B_coords, dtype=np.float64)\n    P = np.array(P_coords, dtype=np.float64)\n\n    vec_AB = B - A\n    L_sq = vec_AB.dot(vec_AB)\n\n    # If the segment is a point (degenerate), the integral is zero.\n    if L_sq  1e-30:\n        return 0.0\n    \n    L = np.sqrt(L_sq)\n    vec_AP = P - A\n\n    # Project P onto the local coordinate system of the segment.\n    # xi_p is the coordinate along the segment.\n    xi_p = vec_AP.dot(vec_AB) / L\n    \n    # eta_p is the perpendicular distance from P to the line containing the segment.\n    # It is calculated using the 2D cross product equivalent.\n    # The sign convention here corresponds to a normal vector obtained by a\n    # counter-clockwise rotation of the tangent vector.\n    # However, the final formula is independent of the sign of eta_p.\n    cross_prod = vec_AP[0] * vec_AB[1] - vec_AP[1] * vec_AB[0]\n    eta_p = -cross_prod / L\n\n    # Check for collinearity using a relative tolerance.\n    # If P is on (or very close to) the line containing the segment.\n    if np.abs(eta_p) / L  1e-15:\n        term1 = _x_times_log_abs_x(L - xi_p)\n        term2 = _x_times_log_abs_x(xi_p)\n        return term1 + term2 - L\n    else:\n        # General case where P is not on the line.\n        abs_eta_p = np.abs(eta_p)\n        \n        # Distances from P to endpoints A and B.\n        # Calculated using local coordinates for robustness.\n        R_A = np.sqrt(xi_p**2 + eta_p**2)\n        R_B = np.sqrt((L - xi_p)**2 + eta_p**2)\n\n        term_log_A = xi_p * np.log(R_A)\n        term_log_B = (L - xi_p) * np.log(R_B)\n        \n        # Arctangent term.\n        arg1 = (L - xi_p) / abs_eta_p\n        arg2 = xi_p / abs_eta_p\n        term_atan = abs_eta_p * (np.arctan(arg1) + np.arctan(arg2))\n        \n        return term_log_A + term_log_B - L + term_atan\n\ndef solve():\n    \"\"\"\n    Solves the problem for the given test cases and prints the results\n    in the required format.\n    \"\"\"\n    test_cases = [\n        # Test 1: General case\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (0.3, 0.4)},\n        # Test 2: P on the segment\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (0.3, 0.0)},\n        # Test 3: P very close to the segment\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (0.3, 1e-12)},\n        # Test 4: P on line extension\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (-0.5, 0.0)},\n        # Test 5: General segment and point\n        {'A': (1.0, 2.0), 'B': (4.0, 6.0), 'P': (3.0, 3.0)},\n        # Test 6: Very short segment\n        {'A': (0.0, 0.0), 'B': (1e-9, 0.0), 'P': (0.0, 1.0)},\n        # Test 7: P at an endpoint\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (1.0, 0.0)},\n    ]\n\n    results = []\n    for case in test_cases:\n        result = calculate_integral(case['A'], case['B'], case['P'])\n        results.append(f\"{result:.12f}\")\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2377305"}, {"introduction": "本练习将探讨在将 BEM 应用于实际场景时的一个常见挑战：由几何构型引起的数值不稳定性。通过模拟两个物体相互靠近的情景，您将通过计算来研究系统矩阵如何变得病态。这个练习能让您直观地理解该方法的局限性，并认识到分析矩阵条件数等性质的重要性。", "problem": "考虑两个不相交圆盘外部的二维拉普拉斯方程。设未知势函数 $u(\\mathbf{x})$ 在两个圆外部的无界域中满足 $\\Delta u(\\mathbf{x}) = 0$。在每个圆的边界上，$u$ 是给定的（狄利克雷边界条件）。这两个圆的半径均为 $R$，圆心分别位于 $\\mathbf{c}_1 = \\left(-R - \\frac{g}{2}, 0\\right)$ 和 $\\mathbf{c}_2 = \\left(R + \\frac{g}{2}, 0\\right)$，因此沿水平轴最近的两个边界点之间的间隙为 $g$。边界曲线通过弧度角进行参数化。取 $R = 1$，每个圆上使用 $N$ 个均匀分布的配置点，其中 $N = 64$。\n\n从第一性原理出发，使用此处定义的边界元法（BEM），通过双层势来构建外部狄利克雷问题的基于配置点的离散化。二维拉普拉斯方程的基本解为 $G(\\mathbf{x}, \\mathbf{y}) = -\\frac{1}{2\\pi} \\log \\|\\mathbf{x} - \\mathbf{y}\\|$。双层算子涉及核函数\n$$\nK(\\mathbf{x}, \\mathbf{y}) = \\frac{\\partial G(\\mathbf{x}, \\mathbf{y})}{\\partial n_{\\mathbf{y}}} = \\frac{1}{2\\pi} \\frac{\\mathbf{n}(\\mathbf{y}) \\cdot (\\mathbf{x} - \\mathbf{y})}{\\|\\mathbf{x} - \\mathbf{y}\\|^2},\n$$\n其中 $\\mathbf{n}(\\mathbf{y})$ 是点 $\\mathbf{y}$ 处指向每个圆盘内部之外的单位法向量。外部狄利克雷问题会导出一个第二类边界积分方程，其中著名的跳跃关系在趋近边界时引入了一个 $-\\frac{1}{2}$ 倍的单位算子。对于采用尼斯特姆型求积的配置点法，对每个边界点取均匀权重 $w_j = \\frac{2\\pi R}{N}$。\n\n任务：\n- 推导并构建两个圆组合边界的 $2N \\times 2N$ 离散系统矩阵 $A(g)$，该矩阵对应于算子 $-\\frac{1}{2}I + K$，其中 $K$ 使用上述核函数和权重进行离散化。确保对角线元对应于 $-\\frac{1}{2}$ 的单位算子贡献，并且在积分部分通过在求和中跳过 $j = i$ 来省略奇异的自相互作用。\n- 狄利克雷边界值由常数给出：左圆盘上 $u(\\mathbf{x}) = 1$，右圆盘上 $u(\\mathbf{x}) = 0$。对于此任务，您无需求解密度；相反，您只需量化矩阵 $A(g)$ 的条件数。具体来说，计算 2-范数条件数 $\\kappa_2(A(g)) = \\frac{\\sigma_{\\max}}{\\sigma_{\\min}}$，其中 $\\sigma_{\\max}$ 和 $\\sigma_{\\min}$ 分别是 $A(g)$ 的最大和最小奇异值。\n- 所有参数化均使用弧度角。\n- 几何形状是无量纲的；不需要物理单位。\n\n测试套件：\n- 使用半径 $R = 1$，每个圆上 $N=64$ 个配置点。\n- 评估以下间隙值的条件数：$g \\in \\{0.50, 0.20, 0.10, 0.05, 0.02\\}$。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果（例如，$[r_1,r_2,r_3,r_4,r_5]$），其中每个 $r_i$ 是对应 $g$ 的条件数，四舍五入到六位小数。", "solution": "该问题要求计算由两个不相交圆盘的二维外部拉普拉斯问题的边界元法（BEM）离散化所产生的系统矩阵的条件数。该问题是适定的，并包含了求解所需的所有必要信息。\n\n势函数 $u(\\mathbf{x})$ 在两个圆 $\\Gamma_1$ 和 $\\Gamma_2$ 外部的域 $\\Omega$ 中满足拉普拉斯方程：\n$$\n\\Delta u(\\mathbf{x}) = 0, \\quad \\mathbf{x} \\in \\Omega\n$$\n在边界 $\\Gamma = \\Gamma_1 \\cup \\Gamma_2$ 上给定狄利克雷边界条件。解 $u(\\mathbf{x})$ 可以用双层势表示，其未知密度函数 $\\sigma(\\mathbf{y})$ 定义在边界 $\\Gamma$ 上：\n$$\nu(\\mathbf{x}) = \\int_{\\Gamma} K(\\mathbf{x}, \\mathbf{y}) \\sigma(\\mathbf{y}) \\, dS(\\mathbf{y})\n$$\n其中 $K(\\mathbf{x}, \\mathbf{y})$ 是双层核函数，由二维拉普拉斯方程基本解 $G(\\mathbf{x}, \\mathbf{y}) = -\\frac{1}{2\\pi} \\log \\|\\mathbf{x} - \\mathbf{y}\\|$ 的法向导数推导而来。核函数由下式给出：\n$$\nK(\\mathbf{x}, \\mathbf{y}) = \\frac{\\partial G(\\mathbf{x}, \\mathbf{y})}{\\partial n_{\\mathbf{y}}} = \\frac{1}{2\\pi} \\frac{\\mathbf{n}(\\mathbf{y}) \\cdot (\\mathbf{x} - \\mathbf{y})}{\\|\\mathbf{x} - \\mathbf{y}\\|^2}\n$$\n此处，$\\mathbf{n}(\\mathbf{y})$ 是边界点 $\\mathbf{y}$ 处的单位法向量，指向每个圆盘内部之外。\n\n当外部域中的点 $\\mathbf{x}$ 趋近于边界 $\\Gamma$ 上的一个点时，我们利用双层势的跳跃性质，得到关于未知密度 $\\sigma$ 的第二类边界积分方程（BIE）：\n$$\nu(\\mathbf{x}) = -\\frac{1}{2} \\sigma(\\mathbf{x}) + \\text{P.V.} \\int_{\\Gamma} K(\\mathbf{x}, \\mathbf{y}) \\sigma(\\mathbf{y}) \\, dS(\\mathbf{y}), \\quad \\mathbf{x} \\in \\Gamma\n$$\n其中 P.V. 表示积分的柯西主值。这可以写成算子形式 $(-\\frac{1}{2}I + \\mathcal{K})\\sigma = u$，其中 $\\mathcal{K}$ 是双层积分算子。\n\n为了数值求解此方程，我们采用基于尼斯特姆的配置点法。边界 $\\Gamma$ 被离散化为 $2N$ 个点，每个圆上有 $N=64$ 个点。设这些配置点为 $\\{\\mathbf{x}_i\\}_{i=1}^{2N}$。该积分由求和积分近似。对每个求积点 $\\mathbf{y}_j$（与配置点相同，即 $\\mathbf{y}_j = \\mathbf{x}_j$）使用给定的均匀权重 $w_j = \\frac{2\\pi R}{N}$，在每个配置点 $\\mathbf{x}_i$ 处的离散化BIE为：\n$$\nu(\\mathbf{x}_i) = -\\frac{1}{2} \\sigma(\\mathbf{x}_i) + \\sum_{j=1, j \\neq i}^{2N} K(\\mathbf{x}_i, \\mathbf{x}_j) \\sigma(\\mathbf{x}_j) w_j\n$$\n问题指明，求和积分中的奇异项（$j=i$）被省略。这导出了一个线性方程组 $A\\vec{\\sigma} = \\vec{u}$，其中 $\\vec{\\sigma}$ 是未知密度向量 $\\{\\sigma(\\mathbf{x}_j)\\}$，$\\vec{u}$ 是给定边界值向量 $\\{u(\\mathbf{x}_i)\\}$。$2N \\times 2N$ 系统矩阵 $A$ 的元素定义为：\n$$\nA_{ij} = \\begin{cases}\n    -\\frac{1}{2}  \\text{if } i = j \\\\\n    w_j K(\\mathbf{x}_i, \\mathbf{x}_j)  \\text{if } i \\neq j\n\\end{cases}\n$$\n代入 $w_j$ 和 $K(\\mathbf{x}_i, \\mathbf{x}_j)$ 的表达式，对于 $i \\neq j$ 我们有：\n$$\nA_{ij} = \\left(\\frac{2\\pi R}{N}\\right) \\left(\\frac{1}{2\\pi}\\right) \\frac{\\mathbf{n}(\\mathbf{x}_j) \\cdot (\\mathbf{x}_i - \\mathbf{x}_j)}{\\|\\mathbf{x}_i - \\mathbf{x}_j\\|^2} = \\frac{R}{N} \\frac{\\mathbf{n}(\\mathbf{x}_j) \\cdot (\\mathbf{x}_i - \\mathbf{x}_j)}{\\|\\mathbf{x}_i - \\mathbf{x}_j\\|^2}\n$$\n几何形状由两个半径为 $R=1$ 的圆定义。它们的圆心是 $\\mathbf{c}_1 = (-1 - g/2, 0)$ 和 $\\mathbf{c}_2 = (1 + g/2, 0)$，其中 $g$ 是间隙。每个圆上的 $N=64$ 个配置点在角度上是均匀分布的。设角度为 $\\theta_k = \\frac{2\\pi k}{N}$，其中 $k=0, \\dots, N-1$。\n圆1上的点为 $\\mathbf{x}_k = \\mathbf{c}_1 + R(\\cos\\theta_k, \\sin\\theta_k)$，其中 $k=0, \\dots, N-1$。\n圆2上的点为 $\\mathbf{x}_{k+N} = \\mathbf{c}_2 + R(\\cos\\theta_k, \\sin\\theta_k)$，其中 $k=0, \\dots, N-1$。\n在以 $\\mathbf{c}$ 为中心的圆上，点 $\\mathbf{x}$ 处的外向法向量是 $\\mathbf{n}(\\mathbf{x}) = (\\mathbf{x}-\\mathbf{c})/R$。\n\n任务是为几个不同的 $g$ 值组装矩阵 $A(g)$，并计算其 2-范数条件数 $\\kappa_2(A) = \\sigma_{\\max}/\\sigma_{\\min}$，其中 $\\sigma_{\\max}$ 和 $\\sigma_{\\min}$ 是 $A$ 的最大和最小奇异值。这可以通过标准的数值线性代数程序来完成。条件数量化了线性系统解对输入数据扰动的敏感性，是衡量数值方法稳定性的一个重要指标，尤其是在几何形状接近奇异（$g \\to 0$）时。\n\n步骤如下：\n1. 对于 $\\{0.50, 0.20, 0.10, 0.05, 0.02\\}$ 中的每个 $g$ 值，设置 $R=1$ 和 $N=64$。\n2. 为两个圆生成 $2N=128$ 个配置点及其对应的法向量。\n3. 根据上述公式构造 $128 \\times 128$ 矩阵 $A(g)$。\n4. 计算 $A(g)$ 的奇异值，并求出最大值与最小值的比率以获得条件数。\n5. 将结果四舍五入到六位小数并存储。\n\n对每个指定的间隙 $g$ 重复此过程，并将结果汇编成一个最终列表。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the 2-norm condition number of the BEM matrix for the exterior\n    Laplace problem on two circles for various gap sizes.\n    \"\"\"\n\n    test_cases = [0.50, 0.20, 0.10, 0.05, 0.02]\n    R = 1.0\n    N = 64\n    \n    results = []\n\n    for g in test_cases:\n        # Step 1: Define the geometry (collocation points and normals)\n        M = 2 * N\n        \n        # Centers of the two circles\n        c1 = np.array([-R - g / 2.0, 0.0])\n        c2 = np.array([R + g / 2.0, 0.0])\n\n        # Uniformly spaced angles for parameterization\n        angles = np.linspace(0, 2 * np.pi, N, endpoint=False)\n        \n        # Points and normals for circle 1\n        # For a circle, the outward normal is (x-c)/R.\n        # Since points are c + R*(cos,sin), normal is (cos,sin).\n        unit_vectors = np.vstack((np.cos(angles), np.sin(angles))).T\n        points1 = c1 + R * unit_vectors\n        normals1 = unit_vectors\n\n        # Points and normals for circle 2\n        points2 = c2 + R * unit_vectors\n        normals2 = unit_vectors\n\n        # Combine into single arrays for the entire boundary\n        points = np.vstack((points1, points2))  # Shape (M, 2)\n        normals = np.vstack((normals1, normals2))  # Shape (M, 2)\n\n        # Step 2: Assemble the system matrix A\n        w = 2 * np.pi * R / N  # Quadrature weight\n        A = np.zeros((M, M))\n\n        # Vectorized calculation of off-diagonal elements\n        # Shape broadcasting: xi becomes (M, 1, 2), xj becomes (1, M, 2)\n        xi = points[:, np.newaxis, :]\n        xj = points[np.newaxis, :, :]\n        diff = xi - xj  # Shape: (M, M, 2)\n\n        # Squared norm of the difference vector\n        diff_norm_sq = np.sum(diff**2, axis=2) # Shape: (M, M)\n        \n        # To avoid division by zero on the diagonal (i=j), add the identity matrix.\n        # The diagonal entries of the final matrix will be overwritten anyway.\n        diff_norm_sq_safe = diff_norm_sq + np.eye(M)\n\n        # Dot product of normal at source point (j) with difference vector\n        nj = normals[np.newaxis, :, :]  # Shape: (1, M, 2)\n        n_dot_diff = np.sum(nj * diff, axis=2)  # Shape: (M, M)\n\n        # Kernel evaluation\n        kernel_val = (1 / (2 * np.pi)) * n_dot_diff / diff_norm_sq_safe\n        \n        # Matrix of off-diagonal contributions\n        A = kernel_val * w\n        \n        # Set the diagonal elements based on the BIE jump relation\n        np.fill_diagonal(A, -0.5)\n\n        # Step 3: Compute the 2-norm condition number\n        cond_num = np.linalg.cond(A, p=2)\n        results.append(round(cond_num, 6))\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3103590"}]}