{"hands_on_practices": [{"introduction": "构建高效的卷积神经网络（CNN）需要对数据在网络中的流动和转换方式有扎实的理解。第一个实践练习聚焦于特征金字塔网络（FPN），这是一个用于检测不同尺度物体的关键组件。通过手动计算FPN自顶向下和横向连接通路中的张量形状与参数，你将巩固对卷积运算的算术原理以及多尺度特征融合逻辑的理解。[@problem_id:3103702]", "problem": "一个卷积神经网络 (CNN) 主干网络处理一张大小为 $640 \\times 640$ 的输入图像，并在连续的阶段产生三个特征图，分别记为 $C_3$、$C_4$ 和 $C_5$。这些特征图相对于输入的空间步长分别为 $8$、$16$ 和 $32$，其形状如下：\n- $C_3$：$80 \\times 80 \\times 128$，\n- $C_4$：$40 \\times 40 \\times 256$，\n- $C_5$：$20 \\times 20 \\times 512$。\n\n一个特征金字塔网络 (FPN) 通过横向连接和自顶向下的路径构建而成：\n- 每个 $C_i$ 首先通过一个横向 $1 \\times 1$ 卷积，步长为 $1$，零填充，映射到 $F$ 个通道，其中 $F = 192$。假设每次卷积都包含偏置项。\n- 定义 $M_5 = \\text{Conv}_{1 \\times 1}(C_5)$、$M_4 = \\text{Conv}_{1 \\times 1}(C_4) + \\text{Upsample}_{\\times 2}(M_5)$ 和 $M_3 = \\text{Conv}_{1 \\times 1}(C_3) + \\text{Upsample}_{\\times 2}(M_4)$，其中 $\\text{Upsample}_{\\times 2}$ 表示在高度和宽度上进行因子为 $2$ 的最近邻上采样。\n- 每个 $M_i$ 接着通过一个步长为 $1$、填充为 $1$ 的 $3 \\times 3$ 卷积，生成 $P_i = \\text{Conv}_{3 \\times 3}(M_i)$，输出通道数为 $F$。\n\n使用以下基本事实：\n- 对于一个卷积核大小为 $K_h \\times K_w$、输入通道数为 $C_{\\text{in}}$、输出通道数为 $C_{\\text{out}}$ 的卷积，其可训练参数（包括偏置项）的数量为 $K_h \\cdot K_w \\cdot C_{\\text{in}} \\cdot C_{\\text{out}} + C_{\\text{out}}$。\n- 因子为 $2$ 的最近邻上采样将一个形状为 $H \\times W \\times C$ 的张量映射为 $2H \\times 2W \\times C$。\n- 张量的逐元素相加要求其在高度、宽度和通道数上具有相同的形状。\n- 在步长为 $1$ 和适当的零填充下，$1 \\times 1$ 卷积保持空间维度不变；在填充为 $1$ 的情况下，$3 \\times 3$ 卷积保持空间维度不变。\n\n任务：\n1. 推导 $M_5$、$M_4$ 和 $M_3$ 的形状，确保横向路径中的张量加法形状对齐。\n2. 推导 $P_5$、$P_4$ 和 $P_3$ 的形状。\n3. 计算此 FPN 路径中所有六个卷积（三个 $1 \\times 1$ 横向卷积和应用于 $M_5$、$M_4$ 和 $M_3$ 的三个 $3 \\times 3$ 卷积）所使用的可训练参数总数。将最终答案表示为一个精确的整数，无需四舍五入。", "solution": "问题要求计算一个指定的特征金字塔网络 (FPN) 架构中特征图的形状和可训练参数的总数。本解答将通过依次处理问题陈述中给出的三个任务来推导。所有形状都以“高度 $\\times$ 宽度 $\\times$ 通道数”的格式呈现。\n\n### 任务 1：推导 $M_5$、$M_4$ 和 $M_3$ 的形状\n\nFPN 是由一组主干网络特征图 $C_3$、$C_4$ 和 $C_5$ 构建的，其形状如下：\n- $S(C_3) = 80 \\times 80 \\times 128$\n- $S(C_4) = 40 \\times 40 \\times 256$\n- $S(C_5) = 20 \\times 20 \\times 512$\n\nFPN 路径将每个 $C_i$ 映射到一个共同的通道维度 $F=192$。\n\n**$M_5$ 的形状**：\n$M_5$ 定义为 $M_5 = \\text{Conv}_{1 \\times 1}(C_5)$。\n输入为 $C_5$，形状为 $20 \\times 20 \\times 512$。该卷积是一个步长为 $1$、带零填充的 $1 \\times 1$ 层，这会保持空间维度不变。输出通道数为 $F=192$。\n因此，$M_5$ 的形状为 $20 \\times 20 \\times 192$。\n\n**$M_4$ 的形状**：\n$M_4$ 定义为 $M_4 = \\text{Conv}_{1 \\times 1}(C_4) + \\text{Upsample}_{\\times 2}(M_5)$。\n为了求出 $M_4$ 的形状，我们必须首先确定相加的两个张量的形状。\n1.  第一项是 $\\text{Conv}_{1 \\times 1}(C_4)$。输入为 $C_4$，形状为 $40 \\times 40 \\times 256$。$1 \\times 1$ 卷积保持空间维度不变，并将通道数映射为 $F=192$。这一项的形状是 $40 \\times 40 \\times 192$。\n2.  第二项是 $\\text{Upsample}_{\\times 2}(M_5)$。输入为 $M_5$，形状为 $20 \\times 20 \\times 192$。因子为 $2$ 的最近邻上采样将高度和宽度加倍。这一项的形状是 $(2 \\times 20) \\times (2 \\times 20) \\times 192$，即 $40 \\times 40 \\times 192$。\n\n由于两项具有相同的形状 $40 \\times 40 \\times 192$，逐元素相加是有效的。得到的张量 $M_4$ 的形状是 $40 \\times 40 \\times 192$。\n\n**$M_3$ 的形状**：\n$M_3$ 定义为 $M_3 = \\text{Conv}_{1 \\times 1}(C_3) + \\text{Upsample}_{\\times 2}(M_4)$。\n遵循相同的逻辑：\n1.  第一项是 $\\text{Conv}_{1 \\times 1}(C_3)$。输入为 $C_3$，形状为 $80 \\times 80 \\times 128$。$1 \\times 1$ 卷积将其映射为形状 $80 \\times 80 \\times 192$。\n2.  第二项是 $\\text{Upsample}_{\\times 2}(M_4)$。输入为 $M_4$，形状为 $40 \\times 40 \\times 192$。因子为 $2$ 的上采样产生形状 $(2 \\times 40) \\times (2 \\times 40) \\times 192$，即 $80 \\times 80 \\times 192$。\n\n两项具有相同的形状 $80 \\times 80 \\times 192$。加法是有效的，得到的张量 $M_3$ 的形状是 $80 \\times 80 \\times 192$。\n\n### 任务 2：推导 $P_5$、$P_4$ 和 $P_3$ 的形状\n\n金字塔特征图 $P_i$ 是通过对每个 $M_i$ 应用一个 $3 \\times 3$ 卷积生成的，即 $P_i = \\text{Conv}_{3 \\times 3}(M_i)$。该卷积的步长为 $1$，填充为 $1$，这会保持空间维度不变。输出通道数为 $F=192$。\n\n**$P_5$ 的形状**：\n输入为 $M_5$，形状为 $20 \\times 20 \\times 192$。$3 \\times 3$ 卷积保持空间维度和通道数不变。因此，$P_5$ 的形状为 $20 \\times 20 \\times 192$。\n\n**$P_4$ 的形状**：\n输入为 $M_4$，形状为 $40 \\times 40 \\times 192$。$3 \\times 3$ 卷积保持空间维度和通道数不变。因此，$P_4$ 的形状为 $40 \\times 40 \\times 192$。\n\n**$P_3$ 的形状**：\n输入为 $M_3$，形状为 $80 \\times 80 \\times 192$。$3 \\times 3$ 卷积保持空间维度和通道数不变。因此，$P_3$ 的形状为 $80 \\times 80 \\times 192$。\n\n### 任务 3：计算可训练参数的总数\n\n一个卷积层（包括偏置项）的可训练参数数量由公式 $K_h \\cdot K_w \\cdot C_{\\text{in}} \\cdot C_{\\text{out}} + C_{\\text{out}}$ 给出，其中 $K_h$ 和 $K_w$ 是卷积核维度，$C_{\\text{in}}$ 是输入通道数，$C_{\\text{out}}$ 是输出通道数。\n\n我们计算 FPN 路径中六个卷积的参数。\n\n**三个横向 $1 \\times 1$ 卷积的参数：**\n卷积核大小为 $1 \\times 1$ 且 $C_{\\text{out}} = F = 192$。\n1.  对 $C_5$ 的卷积：$C_{\\text{in}} = 512$。\n    参数 = $1 \\cdot 1 \\cdot 512 \\cdot 192 + 192 = 98304 + 192 = 98496$。\n2.  对 $C_4$ 的卷积：$C_{\\text{in}} = 256$。\n    参数 = $1 \\cdot 1 \\cdot 256 \\cdot 192 + 192 = 49152 + 192 = 49344$。\n3.  对 $C_3$ 的卷积：$C_{\\text{in}} = 128$。\n    参数 = $1 \\cdot 1 \\cdot 128 \\cdot 192 + 192 = 24576 + 192 = 24768$。\n\n横向卷积的总参数 = $98496 + 49344 + 24768 = 172608$。\n\n**三个 $3 \\times 3$ 卷积的参数：**\n这些卷积应用于 $M_5$、$M_4$ 和 $M_3$ 以生成 $P_5$、$P_4$ 和 $P_3$。\n卷积核大小为 $3 \\times 3$。对于所有这三个卷积，输入和输出通道维度均为 $C_{\\text{in}} = F = 192$ 和 $C_{\\text{out}} = F = 192$。\n因此，所有三个卷积具有相同数量的参数。\n每个卷积的参数 = $3 \\cdot 3 \\cdot 192 \\cdot 192 + 192 = 9 \\cdot (192^2) + 192 = 9 \\cdot 36864 + 192 = 331776 + 192 = 331968$。\n\n三个 $3 \\times 3$ 卷积的总参数 = $3 \\times 331968 = 995904$。\n\n**FPN 路径中的可训练参数总数：**\n总数是两组卷积参数的总和。\n总参数 = (横向卷积的参数) + ($3 \\times 3$ 卷积的参数)\n总参数 = $172608 + 995904 = 1168512$。", "answer": "$$\\boxed{1168512}$$", "id": "3103702"}, {"introduction": "从单个组件到完整的系统，本实践将挑战你分析一个U-Net——一种用于语义分割的基准架构。U-Net以其带有跳跃连接的编码器-解码器结构而闻名，但如果处理不当，这些连接可能会引入难以察觉的错误。本练习将引导你追踪U-Net中的张量维度，以诊断一个关键且常见的问题：编码器与解码器路径之间的空间错位。[@problem_id:3103747]", "problem": "您的任务是为二维图像分割设计并分析一个完整的、属于 U-Net 家族的卷积神经网络（CNN）架构。U-Net 由一个带跳跃连接的编码器-解码器组成。您的任务是：使用关于二维卷积和转置卷积的基本原理来形式化编码器-解码器结构，计算每个跳跃连接阶段的拼接通道维度，并在给定步幅和填充的情况下，验证跳跃连接间的空间维度是否对齐。所要求的推导和计算必须纯粹基于数学定义和形状公式；不得使用任何外部深度学习库。\n\n从以下二维卷积运算的基本和标准公式开始：\n\n- 二维（2D）卷积输出尺寸公式：对于输入空间高度 $H_{\\text{in}}$ 和宽度 $W_{\\text{in}}$、卷积核大小 $k$、步幅 $s$ 和零填充 $p$，输出空间高度 $H_{\\text{out}}$ 和宽度 $W_{\\text{out}}$ 满足\n$$\nH_{\\text{out}} = \\left\\lfloor \\frac{H_{\\text{in}} + 2p - k}{s} \\right\\rfloor + 1, \\quad\nW_{\\text{out}} = \\left\\lfloor \\frac{W_{\\text{in}} + 2p - k}{s} \\right\\rfloor + 1.\n$$\n- 二维（2D）转置卷积输出尺寸公式：对于输入空间高度 $H_{\\text{in}}$ 和宽度 $W_{\\text{in}}$、卷积核大小 $k$、步幅 $s$ 和零填充 $p$，输出空间高度 $H_{\\text{out}}$ 和宽度 $W_{\\text{out}}$ 满足\n$$\nH_{\\text{out}} = (H_{\\text{in}} - 1) \\cdot s - 2p + k, \\quad\nW_{\\text{out}} = (W_{\\text{in}} - 1) \\cdot s - 2p + k.\n$$\n\n用于所有计算的架构规范：\n\n- 设输入张量的空间高度为 $H_0$，宽度为 $W_0$，通道数为 $C_{\\text{in}}$。\n- 编码器有 $D$ 个阶段。在编码器阶段 $i$（其中 $i \\in \\{0,1,\\dots,D-1\\}$），一个由两次卷积组成的块，其卷积核大小为奇数 $k = 3$，步幅 $s = 1$，填充 $p = \\left\\lfloor \\frac{k}{2} \\right\\rfloor = 1$，该块保持空间维度不变，并将特征通道数设置为 $C_i = C_0 \\cdot 2^i$，其中 $C_0$ 是基础通道数。之后是一个下采样卷积，其卷积核大小 $k = 2$，步幅 $s = 2$，填充 $p = 0$。使用上述公式，该下采样产生\n$$\nH_{i+1} = \\left\\lfloor \\frac{H_i - 2}{2} \\right\\rfloor + 1 = \\left\\lfloor \\frac{H_i}{2} \\right\\rfloor, \\quad\nW_{i+1} = \\left\\lfloor \\frac{W_i - 2}{2} \\right\\rfloor + 1 = \\left\\lfloor \\frac{W_i}{2} \\right\\rfloor,\n$$\n其中 $(H_i, W_i)$ 表示在阶段 $i$ 下采样前的空间尺寸。\n- 在最底部（经过 $D$ 次下采样后），一个由两次卷积组成的块，其参数为 $k = 3$，$s = 1$，$p = 1$，该块保持底部空间尺寸 $(H_D, W_D)$ 不变，并将通道数设置为 $C_D = C_0 \\cdot 2^D$。\n- 解码器对 $i$ 从 $D-1$ 降序到 $0$ 执行上采样转置卷积，其卷积核大小 $k = 2$，步幅 $s = 2$，填充 $p = 0$，得到\n$$\n\\tilde{H}_i = 2 \\cdot H_{i+1}, \\quad \\tilde{W}_i = 2 \\cdot W_{i+1}.\n$$\n这个上采样后的特征（通道数减少到 $C_i$）与编码器阶段 $i$ 的特征（其空间尺寸为 $(H_i, W_i)$，通道数为 $C_i$）进行拼接。因此，在跳跃连接阶段 $i$ 的拼接操作后，通道维度为 $C^{\\text{concat}}_i = C_i + C_i = 2 C_i$。空间拼接要求 $(\\tilde{H}_i, \\tilde{W}_i) = (H_i, W_i)$；如果 $\\tilde{H}_i \\neq H_i$ 或 $\\tilde{W}_i \\neq W_i$ 出现，则发生维度错位。\n\n您必须实现一个程序，为每个给定的测试用例计算：\n- 拼接通道维度的列表 $[C^{\\text{concat}}_0, C^{\\text{concat}}_1, \\dots, C^{\\text{concat}}_{D-1}]$。\n- 一个布尔值，指示所有跳跃连接在空间上是否对齐，定义为 $[\\forall i \\in \\{0,\\dots,D-1\\}: \\tilde{H}_i = H_i \\wedge \\tilde{W}_i = W_i]$。\n\n科学真实性约束：\n- 所有卷积都如上所述；除了已说明的，没有额外的裁剪或填充调整。\n- 必须严格根据公式检测错位，不能通过临时规则进行修补。\n\n测试套件：\n按顺序使用以下参数集作为输入。每个用例是一个元组 $(H_0, W_0, C_{\\text{in}}, C_0, D)$：\n1. $(256, 256, 3, 32, 4)$\n2. $(16, 16, 1, 8, 4)$\n3. $(101, 77, 3, 16, 3)$\n4. $(64, 64, 1, 4, 0)$\n5. $(64, 65, 2, 12, 2)$\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含一个结果列表（每个测试用例一个），形式为用方括号括起来的逗号分隔列表。\n- 每个测试用例的结果本身必须是一个双元素列表：第一个元素是拼接通道维度的列表 $[C^{\\text{concat}}_0, \\dots, C^{\\text{concat}}_{D-1}]$，第二个元素是对齐布尔值。\n- 例如，外层列表结构必须是 $[[\\dots,\\dots], [\\dots,\\dots], \\dots]$ 的形式；值必须使用标准的 Python 字面量表示。", "solution": "该问题要求为二维图像分割设计并分析一个类 U-Net 架构。这涉及到计算每个跳跃连接的通道维度，并验证编码器和解码器路径之间的空间对齐。分析必须基于所提供的二维卷积和转置卷积运算的基本原理。\n\n首先，对问题陈述进行严格的验证程序。\n\n### 步骤 1：提取已知条件\n- **二维卷积输出尺寸公式**：对于尺寸为 $H_{\\text{in}} \\times W_{\\text{in}}$ 的输入、卷积核大小 $k$、步幅 $s$ 和填充 $p$，输出尺寸 $H_{\\text{out}} \\times W_{\\text{out}}$ 由以下公式给出：\n$$\nH_{\\text{out}} = \\left\\lfloor \\frac{H_{\\text{in}} + 2p - k}{s} \\right\\rfloor + 1, \\quad\nW_{\\text{out}} = \\left\\lfloor \\frac{W_{\\text{in}} + 2p - k}{s} \\right\\rfloor + 1\n$$\n- **二维转置卷积输出尺寸公式**：对于尺寸为 $H_{\\text{in}} \\times W_{\\text{in}}$ 的输入、卷积核大小 $k$、步幅 $s$ 和填充 $p$，输出尺寸 $H_{\\text{out}} \\times W_{\\text{out}}$ 由以下公式给出：\n$$\nH_{\\text{out}} = (H_{\\text{in}} - 1) \\cdot s - 2p + k, \\quad\nW_{\\text{out}} = (W_{\\text{in}} - 1) \\cdot s - 2p + k\n$$\n- **输入张量**：维度为 $(H_0, W_0, C_{\\text{in}})$。\n- **编码器架构**：\n    - 深度为 $D$ 个阶段，由 $i \\in \\{0, 1, \\dots, D-1\\}$ 索引。\n    - 在阶段 $i$，一个由两次卷积组成的块（$k=3, s=1, p=1$）将通道数设置为 $C_i = C_0 \\cdot 2^i$。\n    - 之后是一个下采样卷积（$k=2, s=2, p=0$），它将空间维度减半：$H_{i+1} = \\lfloor H_i / 2 \\rfloor$，$W_{i+1} = \\lfloor W_i / 2 \\rfloor$。\n- **瓶颈层**：在深度 $D$ 处，一个由两次卷积组成的块（$k=3, s=1, p=1$）将通道数设置为 $C_D = C_0 \\cdot 2^D$。\n- **解码器架构**：\n    - 对于从 $D-1$ 到 $0$ 的 $i$。\n    - 对来自阶段 $i+1$ 的特征图应用上采样转置卷积（$k=2, s=2, p=0$），得到空间维度 $(\\tilde{H}_i, \\tilde{W}_i)$，其中 $\\tilde{H}_i = 2 \\cdot H_{i+1}$ 且 $\\tilde{W}_i = 2 \\cdot W_{i+1}$。\n    - 上采样的特征图与来自编码器阶段 $i$ 的特征图进行拼接。拼接后的通道数为 $C^{\\text{concat}}_i = C_i + C_i = 2C_i$。\n- **对齐条件**：阶段 $i$ 的空间对齐要求 $(\\tilde{H}_i, \\tilde{W}_i) = (H_i, W_i)$。\n- **任务**：对于给定的参数集 $(H_0, W_0, C_{\\text{in}}, C_0, D)$，计算拼接通道维度的列表 $[C^{\\text{concat}}_0, \\dots, C^{\\text{concat}}_{D-1}]$ 和一个指示所有跳跃连接是否空间对齐的布尔值。\n\n### 步骤 2：使用提取的已知条件进行验证\n该问题在科学上基于深度学习和卷积神经网络的原理。所提供的公式是标准定义。U-Net 结构是公认的。问题是适定 (well-posed) 的，所有必要的参数和关系都已定义，从而可以得到唯一解。语言客观且正式。基于基础公式，下采样（$H_{i+1} = \\lfloor H_i / 2 \\rfloor$）和上采样（$\\tilde{H}_i = 2H_{i+1}$）的推导是正确的。问题是自包含的、一致的，并且在数学上是可处理的。\n\n### 步骤 3：结论与行动\n问题是**有效的**。可以制定一个分步解决方案。\n\n### 基于原理的设计与解决方案\n通过分析任务的三个主要组成部分来推导解决方案：编码器路径的空间维度、拼接的通道维度以及跳跃连接的对齐。\n\n**1. 编码器路径空间维度计算**\n编码器顺序地减小特征图的空间维度。从输入维度 $(H_0, W_0)$ 开始，每个后续阶段 $i+1$ 的维度由阶段 $i$ 的维度通过下采样操作确定。\n跟踪编码器阶段 $i$ 的两次卷积块输出（也就是下采样的输入）的空间维度 $(H_i, W_i)$。对于 $i = 0, \\dots, D-1$，该过程是迭代的：\n$$\nH_{i+1} = \\left\\lfloor \\frac{H_i}{2} \\right\\rfloor, \\quad W_{i+1} = \\left\\lfloor \\frac{W_i}{2} \\right\\rfloor\n$$\n通过应用此规则 $D$ 次，我们可以计算出空间维度序列 $[(H_0, W_0), (H_1, W_1), \\dots, (H_D, W_D)]$。\n\n**2. 拼接通道维度计算**\n在解码器路径中，在每个阶段 $i$（从 $D-1$ 降序到 $0$），上采样的特征图与来自相应编码器阶段 $i$ 的特征图进行拼接。问题陈述指出，编码器阶段 $i$ 的特征图通道数为 $C_i = C_0 \\cdot 2^i$。来自阶段 $i+1$ 的上采样特征图的通道数也指定减少到 $C_i$。\n拼接操作沿通道轴组合这两个特征图。因此，所得特征图的通道数为：\n$$\nC^{\\text{concat}}_i = C_i + C_i = 2 C_i\n$$\n代入 $C_i$ 的表达式：\n$$\nC^{\\text{concat}}_i = 2 \\cdot (C_0 \\cdot 2^i) = C_0 \\cdot 2^{i+1}\n$$\n该公式允许直接计算所有跳跃连接的通道维度，其中 $i \\in \\{0, 1, \\dots, D-1\\}$。\n\n**3. 跳跃连接对齐验证**\n为了使阶段 $i$ 的拼接能够在不进行裁剪或填充的情况下进行，两个特征图的空间维度必须匹配。来自编码器的特征图维度为 $(H_i, W_i)$。来自解码器的上采样特征图维度为 $(\\tilde{H}_i, \\tilde{W}_i)$。\n对齐条件是：\n$$\nH_i = \\tilde{H}_i \\quad \\text{and} \\quad W_i = \\tilde{W}_i\n$$\n根据解码器上采样公式，我们有 $\\tilde{H}_i = 2 \\cdot H_{i+1}$。根据编码器下采样公式，我们有 $H_{i+1} = \\lfloor H_i / 2 \\rfloor$。将这些代入对齐条件，得到：\n$$\nH_i = 2 \\cdot \\left\\lfloor \\frac{H_i}{2} \\right\\rfloor\n$$\n当且仅当 $H_i$ 是偶数时，此等式成立。如果 $H_i$ 是偶数，$H_i = 2k$（对于某个整数 $k$）。则 $2 \\cdot \\lfloor (2k)/2 \\rfloor = 2 \\cdot \\lfloor k \\rfloor = 2k = H_i$。条件满足。\n如果 $H_i$ 是奇数，$H_i = 2k+1$（对于某个整数 $k$）。则 $2 \\cdot \\lfloor (2k+1)/2 \\rfloor = 2 \\cdot \\lfloor k + 1/2 \\rfloor = 2k$。由于 $2k \\neq 2k+1$，条件不满足。\n因此，阶段 $i$ 单个跳跃连接的对齐条件简化为检查 $H_i$ 和 $W_i$ 是否都为偶数。为了使整个架构对齐，此条件必须对所有跳跃连接都成立，即对所有 $i \\in \\{0, 1, \\dots, D-1\\}$ 成立。\n\n**算法综合**\n对于给定的测试用例 $(H_0, W_0, C_{\\text{in}}, C_0, D)$：\n1. 处理 $D=0$ 的基本情况。此时不存在跳跃连接。通道维度列表为空，对齐性理所当然地为真。\n2. 对于 $D > 0$：\n    a. 初始化一个高度数组 `H_dims`，其初始值为 $H_0$；一个宽度数组 `W_dims`，其初始值为 $W_0$。\n    b. 对 $i=1, \\dots, D$ 迭代计算 $H_i$ 和 $W_i$，并存储它们。\n    c. 使用公式 $C^{\\text{concat}}_i = C_0 \\cdot 2^{i+1}$ 计算拼接通道列表 $[C^{\\text{concat}}_0, \\dots, C^{\\text{concat}}_{D-1}]$。\n    d. 初始化一个对齐标志为 true。从 $i=0$ 到 $D-1$ 进行迭代。在每次迭代中，检查（来自存储的数组的）$H_i$ 和 $W_i$ 是否都为偶数。如果在任何阶段发现维度为奇数，则将该标志设置为 false，并可以终止检查。\n3. 将计算出的通道列表和最终的对齐标志组合成指定的输出格式。\n此过程为每个测试用例提供了一个完整且确定性的解决方案。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n# from scipy import ...\n\ndef solve():\n    \"\"\"\n    Analyzes a U-Net architecture for given parameters to compute skip connection\n    channel dimensions and spatial alignment.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (256, 256, 3, 32, 4),\n        (16, 16, 1, 8, 4),\n        (101, 77, 3, 16, 3),\n        (64, 64, 1, 4, 0),\n        (64, 65, 2, 12, 2),\n    ]\n\n    all_results_str = []\n    for case in test_cases:\n        H0, W0, Cin, C0, D = case\n\n        # Handle the special case where depth D=0 (no skip connections)\n        if D == 0:\n            concat_channels = []\n            is_aligned = True\n            \n            # Format output string for this case\n            channels_str = ''\n            aligned_str = str(is_aligned)\n            result_str = f\"[[{channels_str}],{aligned_str}]\"\n            all_results_str.append(result_str)\n            continue\n\n        # Step 1: Calculate spatial dimensions down the encoder path\n        H_dims = [H0]\n        W_dims = [W0]\n        current_H, current_W = H0, W0\n        for _ in range(D):\n            # Applying formula H_{i+1} = floor(H_i / 2)\n            current_H = int(np.floor(current_H / 2))\n            current_W = int(np.floor(current_W / 2))\n            H_dims.append(current_H)\n            W_dims.append(current_W)\n        \n        # H_dims is [H_0, H_1, ..., H_D]\n        # W_dims is [W_0, W_1, ..., W_D]\n\n        # Step 2: Calculate concatenation channel dimensions\n        # C_concat_i = 2 * C_i = 2 * (C0 * 2^i) = C0 * 2^(i+1)\n        # This is for i from 0 to D-1\n        concat_channels = [C0 * (2**(i + 1)) for i in range(D)]\n\n        # Step 3: Verify spatial alignment for all skip connections\n        is_aligned = True\n        # The loop must check dimensions H_i, W_i for i = 0 to D-1\n        for i in range(D):\n            # Alignment requires H_i = 2 * floor(H_i/2), which is true iff H_i is even.\n            if H_dims[i] % 2 != 0 or W_dims[i] % 2 != 0:\n                is_aligned = False\n                break\n        \n        # Format the result for the current case into a string with no spaces\n        channels_str = ','.join(map(str, concat_channels))\n        aligned_str = str(is_aligned)\n        result_str = f\"[[{channels_str}],{aligned_str}]\"\n        all_results_str.append(result_str)\n\n    # Final print statement in the exact required format.\n    # Produces a single line, comma-separated list of results enclosed in brackets, with no spaces.\n    print(f\"[{','.join(all_results_str)}]\")\n\nsolve()\n```", "id": "3103747"}, {"introduction": "在识别出U-Net架构中可能存在的空间错位问题之后，我们该如何解决它呢？最后一个实践练习将深入探讨解决方案，通过对各种上采样技术进行细致的比较来剖析问题。通过评估转置卷积和不同模式的双线性插值，你将学会如何选择正确的工具来确保解码器中像素级的完美对齐，这是实现高质量分割结果的关键细节。[@problem_id:3103688]", "problem": "正在构建一个用于语义分割的卷积神经网络（CNN）编码器-解码器。输入图像的空间尺寸为 $129 \\times 129$。编码器使用两个连续的二维卷积，每个卷积的核大小为 $3 \\times 3$，步幅 $s=2$，并选择填充（padding）方式，使得卷积是“same”类型的，即每个空间维度的输出尺寸为 $\\lceil N/s \\rceil$。假设膨胀（dilation）为单位值，并且对于奇数大小的卷积核，所有卷积都按照通常的离散方式进行中心对齐。因此，第一次下采样产生一个大小为 $65 \\times 65$ 的特征图，第二次下采样产生一个大小为 $33 \\times 33$ 的瓶颈特征图。从第一次下采样阶段（$65 \\times 65$）引出一个跳跃连接，与具有相同空间尺寸的解码器输出进行拼接。\n\n你的任务是选择一个解码器上采样块，该块能将 $33 \\times 33$ 的瓶颈特征图上采样到恰好 $65 \\times 65$ 的尺寸，并保持与 $65 \\times 65$ 的跳跃连接特征图的像素中心对齐，从而使得拼接操作不需要裁剪，也不会引入差一像素的空间偏移。这里的像素中心对齐意味着，当输出像素中心的坐标集被转换回原始输入的坐标系时，它们与编码器的 $65 \\times 65$ 跳跃连接图的像素中心坐标相吻合。\n\n使用以下经过充分检验的事实和定义作为你的出发点：\n\n- 对于标准卷积，输入长度为 $N$，核大小为 $K$，步幅为 $s$，填充为 $P$（两侧补零），膨胀为 $d=1$，其输出长度为 $N_{\\text{out}} = \\left\\lfloor \\frac{N + 2P - K}{s} \\right\\rfloor + 1$。对于步幅 $s$，“same”填充约定保证 $N_{\\text{out}} = \\lceil N/s \\rceil$，并且对于奇数大小的 $K$，它将输出中心锚定在以 $s$ 为步长分隔的输入中心上，没有小数偏移。\n- 对于转置卷积（也称为分数步幅卷积或反卷积），输入长度为 $N$，核大小为 $K$，步幅为 $s$，填充为 $P$，输出填充为 $OP$，其输出长度为 $N_{\\text{out}} = (N-1)s - 2P + K + OP$。\n- 最近邻上采样通过因子 $r$ 复制像素值，使得输出像素中心索引是输入网格的整数细化。\n- 当“align corners”设置为 $\\text{True}$ 时，双线性上采样使用从输出索引 $q$到连续输入坐标 $u$的坐标映射 $u = q \\cdot \\frac{N_{\\text{in}} - 1}{N_{\\text{out}} - 1}$，它对齐了输入和输出的第一个和最后一个中心；当“align corners”设置为 $\\text{False}$ 时，映射为 $u = \\left( q + \\frac{1}{2} \\right) \\cdot \\frac{N_{\\text{in}}}{N_{\\text{out}}} - \\frac{1}{2}$，这种方式通常会避免角点对齐，并相对于输入网格引入半个像素的偏移。\n\n考虑以下候选解码器块（每个都应用于 $33 \\times 33$ 的瓶颈特征图），旨在生成可与 $65 \\times 65$ 跳跃连接图拼接的输出：\n\nA. 一个转置卷积，核大小为 $4 \\times 4$，步幅为 2，填充为 1，输出填充为 0。\n\nB. 一个转置卷积，核大小为 $3 \\times 3$，步幅为 2，填充为 1，输出填充为 1。\n\nC. 最近邻上采样，缩放因子为 2，然后是一个卷积，核大小为 $3 \\times 3$，步幅为 1，并使用“same”填充。\n\nD. 双线性上采样，缩放因子为 2，并禁用“align corners”，然后是一个卷积，核大小为 $3 \\times 3$，步幅为 1，并使用“same”填充。\n\nE. 双线性上采样到显式目标尺寸 $65 \\times 65$，并启用“align corners”，然后是一个卷积，核大小为 $3 \\times 3$，步幅为 1，并使用“same”填充。\n\n哪个选项（或哪些选项）能生成尺寸恰好为 $65 \\times 65$ 且像素中心与 $65 \\times 65$ 编码器跳跃连接图对齐的输出，从而使得拼接操作有效，无需裁剪且没有中心点差一错位？选择所有适用的选项。", "solution": "问题要求我们确定所提出的解码器上采样块中，哪一个能够将 $33 \\times 33$ 的特征图正确地上采样为 $65 \\times 65$ 的特征图，同时确保与相应尺寸为 $65 \\times 65$ 的跳跃连接实现完美的像素中心对齐。\n\n### 第1步：提取已知条件\n- 输入图像尺寸：$N_0 = 129 \\times 129$。\n- 编码器，第1个卷积：输入尺寸 $N_0=129$，核大小 $K=3$，步幅 $s=2$。输出是一个“same”卷积，尺寸为 $N_1 = \\lceil N_0/s \\rceil = \\lceil 129/2 \\rceil = 65$。这是跳跃连接特征图。\n- 编码器，第2个卷积：输入尺寸 $N_1=65$，核大小 $K=3$，步幅 $s=2$。输出是一个“same”卷积，尺寸为 $N_2 = \\lceil N_1/s \\rceil = \\lceil 65/2 \\rceil = 33$。这是瓶颈特征图。\n- 解码器任务：将 $N_2=33 \\times 33$ 的瓶颈图上采样，以在尺寸和像素中心对齐方面匹配 $N_1=65 \\times 65$ 的跳跃连接图。\n- 卷积输出尺寸公式：$N_{\\text{out}} = \\left\\lfloor \\frac{N + 2P - K}{s} \\right\\rfloor + 1$。\n- 转置卷积输出尺寸公式：$N_{\\text{out}} = (N-1)s - 2P + K + OP$。\n- 双线性上采样 (`align_corners=True`) 坐标映射：$u = q \\cdot \\frac{N_{\\text{in}} - 1}{N_{\\text{out}} - 1}$。\n- 双线性上采样 (`align_corners=False`) 坐标映射：$u = \\left( q + \\frac{1}{2} \\right) \\cdot \\frac{N_{\\text{in}}}{N_{\\text{out}}} - \\frac{1}{2}$。\n\n### 第2步：验证问题陈述\n问题陈述定义明确，科学上基于深度学习原理，并且内部一致。根据所提供的“same”卷积规则，下采样计算是正确的：从尺寸为 $129$ 的输入，输出为 $\\lceil 129/2 \\rceil = 65$；从尺寸为 $65$ 的输入，输出为 $\\lceil 65/2 \\rceil = 33$。所提供的卷积、转置卷积和插值公式在问题上下文中是标准的或定义清晰的。核心任务是逆转带步幅卷积的几何变换，这是CNN设计中一个实际且适定（well-posed）的问题。该问题是有效的。\n\n### 第3步：推导与选项分析\n\n首先，我们建立坐标系。设 $65 \\times 65$ 跳跃连接图的像素中心位于沿一个维度的一系列整数坐标 $\\{0, 1, 2, \\dots, 64\\}$ 上。问题指出，带步幅的卷积（使用奇数大小的核，并按照“same”填充的标准采用对称填充）从此网格中采样。步幅 $s=2$ 意味着所得到的 $33 \\times 33$ 瓶颈图的中心对应于 $65 \\times 65$ 图坐标系中的坐标 $\\{0 \\cdot 2, 1 \\cdot 2, \\dots, 32 \\cdot 2\\} = \\{0, 2, 4, \\dots, 64\\}$。\n\n上采样块的目标是接收 $33 \\times 33$ 的图（其中心位于物理位置 $\\{0, 2, \\dots, 64\\}$），并生成一个 $65 \\times 65$ 的图，其中心位于物理位置 $\\{0, 1, 2, \\dots, 64\\}$。这确保了拼接时的完美对齐。\n\n我们现在将根据两个标准评估每个选项：\n1.  **输出尺寸**：该块必须生成一个尺寸为 $65 \\times 65$ 的特征图。\n2.  **像素中心对齐**：输出像素的中心必须与整数网格 $\\{0, 1, \\dots, 64\\}$ 对齐。\n\n所有候选块的输入尺寸均为 $N_{\\text{in}} = 33$。\n\n**A. 一个转置卷积，核大小为 $4 \\times 4$，步幅为 2，填充为 1，输出填充为 0。**\n我们使用提供的转置卷积输出长度公式：$N_{\\text{out}} = (N_{\\text{in}}-1)s - 2P + K + OP$。\n这里，$N_{\\text{in}}=33$，$s=2$，$K=4$，$P=1$，$OP=0$。\n$$N_{\\text{out}} = (33-1) \\cdot 2 - 2 \\cdot 1 + 4 + 0 = 32 \\cdot 2 - 2 + 4 = 64 - 2 + 4 = 66$$\n输出尺寸为 $66 \\times 66$，而不是 $65 \\times 65$。此选项不满足尺寸要求。\n**结论：不正确。**\n\n**B. 一个转置卷积，核大小为 $3 \\times 3$，步幅为 2，填充为 1，输出填充为 1。**\n我们使用相同的公式。这里，$N_{\\text{in}}=33$，$s=2$，$K=3$，$P=1$，$OP=1$。\n$$N_{\\text{out}} = (33-1) \\cdot 2 - 2 \\cdot 1 + 3 + 1 = 32 \\cdot 2 - 2 + 3 + 1 = 64 - 2 + 4 = 66$$\n输出尺寸为 $66 \\times 66$，而不是 $65 \\times 65$。此选项也不满足尺寸要求。\n**结论：不正确。**\n\n**C. 最近邻上采样，缩放因子为 2，然后是一个卷积，核大小为 $3 \\times 3$，步幅为 1，并使用“same”填充。**\n第一步是最近邻上采样。将尺寸为 $N$ 的输入按缩放因子 $r$ 上采样，通常会产生尺寸为 $N \\cdot r$ 的输出。\n对于 $N_{\\text{in}} = 33$ 和 $r=2$，输出尺寸为 $33 \\cdot 2 = 66$。\n第二步是一个步幅 $s=1$ 且使用“same”填充的卷积，这种卷积旨在保持其输入的空间维度。因此，最终输出尺寸为 $66 \\times 66$。这不满足尺寸要求。\n**结论：不正确。**\n\n**D. 双线性上采样，缩放因子为 2，并禁用“align corners”，然后是一个卷积，核大小为 $3 \\times 3$，步幅为 1，并使用“same”填充。**\n与选项C类似，对尺寸为 $N_{\\text{in}}=33$ 的输入按缩放因子 $r=2$ 进行上采样，会得到一个尺寸为 $33 \\cdot 2 = 66$ 的中间特征图。随后的步幅 $s=1$ 的“same”卷积会保持这个尺寸。最终输出为 $66 \\times 66$，不满足尺寸要求。此外，`align_corners` 设置为 `False` 的双线性上采样在其坐标映射中会引入半个像素的偏移，即使尺寸正确，这也会破坏像素中心的对齐。\n**结论：不正确。**\n\n**E. 双线性上采样到显式目标尺寸 $65 \\times 65$，并启用“align corners”，然后是一个卷积，核大小为 $3 \\times 3$，步幅为 1，并使用“same”填充。**\n第一步将 $33 \\times 33$ 的输入明确地调整为 $65 \\times 65$ 的特征图。随后的步幅 $s=1$ 且使用“same”填充的卷积保持了 $65 \\times 65$ 的维度。因此，此选项满足尺寸要求。\n\n现在，我们必须检查像素中心的对齐情况。`align_corners=True` 模式使用坐标映射 $u = q \\cdot \\frac{N_{\\text{in}} - 1}{N_{\\text{out}} - 1}$，其中 $q$ 是输出像素索引，$u$ 是输入索引空间中对应的连续坐标。\n这里，$N_{\\text{in}}=33$，$N_{\\text{out}}=65$。令 $q \\in \\{0, 1, \\dots, 64\\}$ 为输出网格中的一个索引。\n$$u(q) = q \\cdot \\frac{33 - 1}{65 - 1} = q \\cdot \\frac{32}{64} = \\frac{q}{2}$$\n这意味着为了计算输出索引 $q$ 处的值，我们在索引坐标 $u=q/2$ 处对输入特征图进行采样。输入特征图的索引是 $\\{0, 1, \\dots, 32\\}$，并且我们已经确定输入索引 $k$ 的物理坐标是 $2k$。因此，与连续输入索引 $u$ 相对应的物理坐标是 $2u$。\n因此，输出像素 $q$ 中心的物理坐标是：\n$$ \\text{Physical Coordinate}(q) = 2 \\cdot u(q) = 2 \\cdot \\left(\\frac{q}{2}\\right) = q $$\n当输出索引 $q$ 的范围从 $0$ 到 $64$ 时，输出像素中心的物理坐标为 $\\{0, 1, 2, \\dots, 64\\}$。这与 $65 \\times 65$ 跳跃连接特征图的网格完全匹配。随后的步幅为1的“same”卷积不会改变这种空间对齐。\n**结论：正确。**", "answer": "$$\\boxed{E}$$", "id": "3103688"}]}