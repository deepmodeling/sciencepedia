{"hands_on_practices": [{"introduction": "理论联系实际的第一步，是将连续分布的物理载荷转化为有限元模型能够“理解”的离散节点力。这个过程并非简单的均分，而是基于虚功原理进行精确的数学转换。本练习以一个经典的水坝模型为例，带你亲手计算随水深线性变化的静水压力如何等效为作用在单元节点上的“一致节点载荷”，这是精确施加 Neumann 边界条件的基础。[@problem_id:2402844]", "problem": "一个垂直混凝土坝在平面应变条件下进行二维建模，其平面外厚度为单位长度。上游迎水面与全局坐标系中的直线 $x=0$ 重合，从 $z=0$ 处的自由表面延伸至深度 $z=H$。坐标系的定义为：$x$ 轴水平指向坝体， $z$ 轴从自由表面垂直向下。水对大坝施加的静水压力为 $p(z)=\\rho g z$，其中 $\\rho$ 是流体密度，$g$ 是重力加速度。该压力垂直于坝面作用，并指向坝体内部。\n\n考虑沿上游面的一个直线边界有限元，它连接节点 $1$ (位于 $(x,z)=(0,0)$) 和节点 $2$ (位于 $(x,z)=(0,H)$)。在此边界段上使用线性插值，节点自由度按 $\\big[u_{1x},u_{1z},u_{2x},u_{2z}\\big]$ 的顺序排列。确定此边界单元的一致等效节点力向量的全局分量，用 $\\rho$、$g$ 和 $H$ 表示，并写成行向量 $\\big[F_{1x},F_{1z},F_{2x},F_{2z}\\big]$ 的形式。\n\n最终结果以牛顿每单位平面外厚度为单位表示。请将答案以单行矩阵的形式给出。无需进行四舍五入。", "solution": "首先，将对问题陈述进行严格验证，以确定其科学和逻辑上的完整性。\n\n**步骤1：提取已知条件**\n\n*   **模型**：二维垂直混凝土坝，处于平面应变状态，平面外厚度为单位长度。\n*   **坐标系**：$x$ 轴水平指向坝体。$z$ 轴从水的自由表面垂直向下。\n*   **几何形状**：坝的上游面是位于 $x=0$ 的一条竖直线，从 $z=0$ 处的自由表面延伸至深度 $z=H$。\n*   **荷载**：静水压力 $p(z) = \\rho g z$ 由水作用于上游面，其中 $\\rho$ 为流体密度，$g$ 为重力加速度。压力垂直于坝面作用，并指向坝体。\n*   **有限元离散化**：使用单个直线边界单元对上游面进行建模。该单元连接节点 $1$ (位于 $(x,z)=(0,0)$) 和节点 $2$ (位于 $(x,z)=(0,H)$)。\n*   **插值**：沿边界单元使用线性插值。\n*   **自由度**：节点自由度按向量 $\\big[u_{1x}, u_{1z}, u_{2x}, u_{2z}\\big]$ 排序。\n*   **目标**：确定此边界单元的一致等效节点力向量，以行向量 $\\big[F_{1x}, F_{1z}, F_{2x}, F_{2z}\\big]$ 的形式表示，并用 $\\rho$、$g$ 和 $H$ 表示。结果的单位为力每单位平面外厚度。\n\n**步骤2：使用提取的已知条件进行验证**\n\n对照所需标准对问题进行分析。\n\n*   **科学依据**：该问题是有限元法 (FEM) 在结构力学中的一个标准应用。静水压力公式 $p(z) = \\rho g z$ 是流体静力学的基本原理。从虚功原理导出的一致节点荷载概念是有限元法的核心原则。该设置是分析大坝时一种有效且常见的简化方法。\n*   **适定性**：该问题提供了所有必要信息——几何形状、荷载函数、单元类型、形函数（由“线性插值”隐含）和自由度——以唯一确定等效节点力向量。\n*   **客观性**：问题陈述使用了精确、客观且无歧义的技术语言。\n\n该问题没有任何缺陷。它在科学上是合理的、适定的、完全指定的，并且可以使用计算工程的既定原理直接求解。\n\n**步骤3：结论与行动**\n\n问题被判定为**有效**。下面将推导求解过程。\n\n**解的推导**\n\n一致等效节点力向量 $\\mathbf{F}_e$ 是通过令分布式面力向量 $\\mathbf{t}$ 所做的虚功等于节点力所做的虚功来导出的。其控制关系式为：\n$$ \\delta W_{ext} = \\int_{\\Gamma_e} (\\delta \\mathbf{u})^T \\mathbf{t} \\, d\\Gamma = (\\delta \\mathbf{d}_e)^T \\mathbf{F}_e $$\n其中 $\\Gamma_e$ 是单元的边界，$\\delta \\mathbf{u}$ 是沿边界的虚位移场，$\\delta \\mathbf{d}_e$ 是虚节点位移向量。\n\n沿单元的位移场 $\\mathbf{u}(z)$ 是使用线性形函数从节点位移 $\\mathbf{d}_e = \\begin{pmatrix} u_{1x} & u_{1z} & u_{2x} & u_{2z} \\end{pmatrix}^T$ 插值得到的。该单元从 $z=0$ 延伸至 $z=H$。用纵坐标 $z$ 表示的线性形函数为：\n$$ N_1(z) = 1 - \\frac{z}{H} $$\n$$ N_2(z) = \\frac{z}{H} $$\n位移向量 $\\mathbf{u}(z) = \\begin{pmatrix} u_x(z) \\\\ u_z(z) \\end{pmatrix}$ 可以写成矩阵形式：\n$$ \\mathbf{u}(z) = \\begin{bmatrix} N_1(z) & 0 & N_2(z) & 0 \\\\ 0 & N_1(z) & 0 & N_2(z) \\end{bmatrix} \\mathbf{d}_e = \\mathbf{N}(z) \\mathbf{d}_e $$\n其中 $\\mathbf{N}(z)$ 是形函数矩阵。那么虚位移场为 $\\delta\\mathbf{u}(z) = \\mathbf{N}(z) \\delta\\mathbf{d}_e$。\n\n将此代入虚功方程，可得：\n$$ (\\delta \\mathbf{d}_e)^T \\mathbf{F}_e = \\int_{\\Gamma_e} (\\mathbf{N}(z) \\delta\\mathbf{d}_e)^T \\mathbf{t}(z) \\, d\\Gamma = (\\delta \\mathbf{d}_e)^T \\int_{\\Gamma_e} \\mathbf{N}(z)^T \\mathbf{t}(z) \\, d\\Gamma $$\n由于此等式必须对任意虚节点位移向量 $\\delta\\mathbf{d}_e$ 成立，我们可以推导出等效节点力向量的表达式：\n$$ \\mathbf{F}_e = \\int_{\\Gamma_e} \\mathbf{N}(z)^T \\mathbf{t}(z) \\, d\\Gamma $$\n压力 $p(z) = \\rho g z$ 垂直于坝面并指向结构内部作用。坝面位于 $x=0$ 处，因此力的方向沿着 $x$ 轴正向。因此，面力向量 $\\mathbf{t}(z)$ 为：\n$$ \\mathbf{t}(z) = \\begin{pmatrix} p(z) \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} \\rho g z \\\\ 0 \\end{pmatrix} $$\n积分是沿单元长度进行的，因此 $d\\Gamma = dz$，积分限为从 $z=0$ 到 $z=H$。如题目要求，积分是按单位平面外厚度计算的。\n\n我们计算乘积 $\\mathbf{N}(z)^T \\mathbf{t}(z)$：\n$$ \\mathbf{N}(z)^T \\mathbf{t}(z) = \\begin{bmatrix} N_1(z) & 0 \\\\ 0 & N_1(z) \\\\ N_2(z) & 0 \\\\ 0 & N_2(z) \\end{bmatrix} \\begin{pmatrix} \\rho g z \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} N_1(z) \\rho g z \\\\ 0 \\\\ N_2(z) \\rho g z \\\\ 0 \\end{pmatrix} $$\n代入形函数的表达式：\n$$ \\mathbf{N}(z)^T \\mathbf{t}(z) = \\begin{pmatrix} (1 - \\frac{z}{H}) \\rho g z \\\\ 0 \\\\ (\\frac{z}{H}) \\rho g z \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} \\rho g (z - \\frac{z^2}{H}) \\\\ 0 \\\\ \\frac{\\rho g z^2}{H} \\\\ 0 \\end{pmatrix} $$\n现在，我们将该向量从 $z=0$ 积分到 $z=H$，以求出 $\\mathbf{F}_e = \\begin{pmatrix} F_{1x} & F_{1z} & F_{2x} & F_{2z} \\end{pmatrix}^T$ 的各个分量。\n\n第一个分量 $F_{1x}$ 是：\n$$ F_{1x} = \\int_{0}^{H} \\rho g \\left(z - \\frac{z^2}{H}\\right) dz = \\rho g \\left[ \\frac{z^2}{2} - \\frac{z^3}{3H} \\right]_{0}^{H} = \\rho g \\left( \\frac{H^2}{2} - \\frac{H^3}{3H} \\right) = \\rho g \\left( \\frac{H^2}{2} - \\frac{H^2}{3} \\right) = \\frac{1}{6} \\rho g H^2 $$\n第二个分量 $F_{1z}$ 是：\n$$ F_{1z} = \\int_{0}^{H} 0 \\, dz = 0 $$\n第三个分量 $F_{2x}$ 是：\n$$ F_{2x} = \\int_{0}^{H} \\frac{\\rho g z^2}{H} dz = \\frac{\\rho g}{H} \\left[ \\frac{z^3}{3} \\right]_{0}^{H} = \\frac{\\rho g}{H} \\left( \\frac{H^3}{3} \\right) = \\frac{1}{3} \\rho g H^2 $$\n第四个分量 $F_{2z}$ 是：\n$$ F_{2z} = \\int_{0}^{H} 0 \\, dz = 0 $$\n得到的一致等效节点力向量为 $\\mathbf{F}_e = \\begin{pmatrix} \\frac{1}{6} \\rho g H^2 \\\\ 0 \\\\ \\frac{1}{3} \\rho g H^2 \\\\ 0 \\end{pmatrix}$。\n题目要求结果以行向量 $\\big[F_{1x}, F_{1z}, F_{2x}, F_{2z}\\big]$ 的形式表示。\n因此，最终答案是 $\\left[ \\frac{1}{6} \\rho g H^2, 0, \\frac{1}{3} \\rho g H^2, 0 \\right]$。\n\n一个简要的验证证实了结果的正确性。总水平力为 $\\int_{0}^{H} \\rho g z \\, dz = \\frac{1}{2} \\rho g H^2$。节点力之和为 $F_{1x} + F_{2x} = \\frac{1}{6} \\rho g H^2 + \\frac{1}{3} \\rho g H^2 = \\frac{1}{2} \\rho g H^2$。总力是守恒的。\n由压力产生的绕节点1（位于$z=0$）的力矩为 $\\int_{0}^{H} z (\\rho g z) \\, dz = \\frac{1}{3} \\rho g H^3$。由节点力产生的力矩为 $H \\cdot F_{2x} = H \\cdot (\\frac{1}{3} \\rho g H^2) = \\frac{1}{3} \\rho g H^3$。力矩也是守恒的。推导正确。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{1}{6} \\rho g H^{2} & 0 & \\frac{1}{3} \\rho g H^{2} & 0\n\\end{pmatrix}\n}\n$$", "id": "2402844"}, {"introduction": "真实世界的工程结构拥有复杂的几何外形，其边界很少会与坐标轴完美对齐。这个练习在前一个练习的基础上增加了几何复杂性，要求你处理施加在任意倾斜边界上的压力。你将需要运用向量分析来确定法向压力的方向，并将其正确分解到全局坐标系中，这是在复杂几何模型中正确施加边界载荷的关键技能。[@problem_id:2402849]", "problem": "一个具有等厚度的平面三节点线性三角形有限元嵌入在一个二维实体中。节点坐标（单位：米）为：节点 $A$ 位于 $(x,y)=(1,2)$，节点 $B$ 位于 $(x,y)=(5,5)$，节点 $C$ 位于 $(x,y)=(2,7)$。该单元的均匀厚度为 $t=0.010~\\mathrm{m}$。一个大小为 $p=3.2\\times 10^{3}~\\mathrm{N/m^{2}}$ 的均布压力作用在连接节点 $A$ 和节点 $B$ 的单元边上。压力沿该边作用，方向为指向单元内部的单位法向量（即，指向单元内部）。\n\n将此压力视为边界面力（一个诺伊曼边界条件），在全局坐标系中，确定将此边界条件正确地纳入有限元列式后，在节点 $A$ 处产生的单个等效节点力的 $x$分量。\n\n最终答案以 $\\mathrm{N}$ 为单位表示，并四舍五入至四位有效数字。", "solution": "该问题要求计算作用在线性三角形有限元一条边上的均布压力所产生的等效节点力分量。这是在有限元法（FEM）中处理诺伊曼边界条件的一个标准流程。\n\n首先，必须对问题陈述进行验证。\n**步骤1：提取已知条件**\n- 单元类型：平面三节点线性三角形有限元。\n- 节点坐标：节点 $A$ 位于 $(x,y)=(1,2)$，节点 $B$ 位于 $(x,y)=(5,5)$，节点 $C$ 位于 $(x,y)=(2,7)$。所有坐标单位均为米 $(\\mathrm{m})$。\n- 单元厚度：$t=0.010~\\mathrm{m}$。\n- 作用载荷：均布压力 $p=3.2\\times 10^{3}~\\mathrm{N/m^{2}}$。\n- 载荷作用位置：连接节点 $A$ 和节点 $B$ 的单元边。\n- 载荷方向：沿 $AB$ 边指向单元内部的单位法向量。\n- 目标：确定节点 $A$ 处等效节点力的 $x$ 分量，记为 $F_{Ax}$。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题具有科学依据，是连续介质力学和有限元法既定原理的直接应用。问题是适定的，提供了计算唯一解所需的所有几何和载荷数据。语言客观精确。问题是完整的、一致的且可行的。\n\n**步骤3：结论与求解**\n问题有效。将推导求解。\n\n由边界面力 $\\{T\\}$ 引起的单元等效节点力 $\\{f^e\\}$，是通过确保节点力所做的功等于面力所做的功来求得的。根据虚功原理，可得到以下积分表达式：\n$$ \\{f^e\\} = \\int_{S_e} [N]^T \\{T\\} \\, dS $$\n其中 $[N]$ 是单元形函数矩阵，$S_e$ 是面力作用的表面。对于本问题，该表面是连接节点 $A$ 和 $B$ 的边的侧面。微分表面积为 $dS = t \\, dL$，其中 $t$ 是单元厚度，$dL$ 是沿该边的微分长度。\n\n对于线性单元，沿边 $A-B$ 的位移场是由节点 $A$ 和 $B$ 的节点位移线性插值得到的。节点 $A$ 和 $B$ 的形函数沿此边线性变化，而节点 $C$ 的形函数为零。对于均布面力 $\\{T\\}$ 和线性形函数，积分可以简化，使得作用在边上的总力被平均分配给定义该边的两个节点。\n\n总力向量 $\\vec{F}_{total}$ 是面力向量 $\\vec{T}$ 与边侧面面积 $A_{edge}$ 的乘积。\n$$ \\vec{F}_{total} = \\vec{T} \\cdot A_{edge} $$\n面积为 $A_{edge} = L_{AB} \\cdot t$，其中 $L_{AB}$ 是边 $A-B$ 的长度。\n\n首先，我们确定边 $A-B$ 的几何信息。坐标为 $A(1, 2)$ 和 $B(5, 5)$。\n从 $A$ 到 $B$ 沿边的向量为：\n$$ \\vec{V}_{AB} = (x_B - x_A, y_B - y_A) = (5 - 1, 5 - 2) = (4, 3) $$\n这条边的长度为：\n$$ L_{AB} = \\sqrt{(x_B - x_A)^2 + (y_B - y_A)^2} = \\sqrt{4^2 + 3^2} = \\sqrt{16 + 9} = \\sqrt{25} = 5~\\mathrm{m} $$\n压力作用面的面积为：\n$$ A_{edge} = L_{AB} \\cdot t = (5~\\mathrm{m}) \\cdot (0.010~\\mathrm{m}) = 0.05~\\mathrm{m^2} $$\n\n接下来，我们确定面力向量 $\\vec{T}$。面力的大小即为压力，$p = 3.2 \\times 10^3~\\mathrm{N/m^2}$。方向是边 $A-B$ 的指向内部的单位法向量。\n为了找到内法向量，我们首先找到外法向量。给定单元节点 $A(1,2)$、$B(5,5)$和$C(2,7)$，我们可以检查它们的排列顺序。有向面积计算如下：\n$$ 2 \\times \\text{Area} = \\det \\begin{pmatrix} x_A & y_A & 1 \\\\ x_B & y_B & 1 \\\\ x_C & y_C & 1 \\end{pmatrix} = \\det \\begin{pmatrix} 1 & 2 & 1 \\\\ 5 & 5 & 1 \\\\ 2 & 7 & 1 \\end{pmatrix} = 1(5-7) - 2(5-2) + 1(35-10) = -2 - 6 + 25 = 17 $$\n由于结果为正，节点 $A-B-C$ 是以逆时针 (CCW) 顺序列出的。对于逆时针排序的单元，从节点 $A$ 到节点 $B$ 的边的向外单位法向量 $\\hat{n}_{out}$ 由下式给出：\n$$ \\hat{n}_{out} = \\frac{1}{L_{AB}}(y_B - y_A, -(x_B - x_A)) = \\frac{1}{5}(5-2, -(5-1)) = \\frac{1}{5}(3, -4) $$\n题目规定压力作用方向为指向内部的单位法向量 $\\hat{n}_{in}$，其方向与外法向量相反：\n$$ \\hat{n}_{in} = -\\hat{n}_{out} = -\\frac{1}{5}(3, -4) = \\begin{pmatrix} -3/5 \\\\ 4/5 \\end{pmatrix} $$\n面力向量 $\\vec{T}$ 是压力乘以该方向向量：\n$$ \\vec{T} = p \\cdot \\hat{n}_{in} = (3.2 \\times 10^3~\\mathrm{N/m^2}) \\cdot \\begin{pmatrix} -3/5 \\\\ 4/5 \\end{pmatrix} = \\begin{pmatrix} -1920 \\\\ 2560 \\end{pmatrix}~\\mathrm{N/m^2} $$\n所以，$T_x = -1920~\\mathrm{N/m^2}$ 且 $T_y = 2560~\\mathrm{N/m^2}$。\n\n作用在边上的总力向量为：\n$$ \\vec{F}_{total} = \\vec{T} \\cdot A_{edge} = \\begin{pmatrix} -1920 \\\\ 2560 \\end{pmatrix} \\cdot (0.05) = \\begin{pmatrix} -96 \\\\ 128 \\end{pmatrix}~\\mathrm{N} $$\n对于沿一条边作用有均布面力的线性单元，此总力被平均分配到该边上的两个节点 $A$ 和 $B$。节点 $C$ 上的力为零。\n$$ \\vec{F}_A = \\vec{F}_B = \\frac{1}{2} \\vec{F}_{total} $$\n节点 $A$ 处的等效节点力向量为：\n$$ \\vec{F}_A = \\frac{1}{2} \\begin{pmatrix} -96 \\\\ 128 \\end{pmatrix} = \\begin{pmatrix} -48 \\\\ 64 \\end{pmatrix}~\\mathrm{N} $$\n节点 $A$ 处的力分量为 $F_{Ax} = -48~\\mathrm{N}$ 和 $F_{Ay} = 64~\\mathrm{N}$。\n\n题目要求的是节点 $A$ 处等效节点力的 $x$ 分量，即 $F_{Ax}$。\n$$ F_{Ax} = -48~\\mathrm{N} $$\n题目要求答案四舍五入到四位有效数字。\n$$ F_{Ax} = -48.00~\\mathrm{N} $$", "answer": "$$\\boxed{-48.00}$$", "id": "2402849"}, {"introduction": "在某些高级应用中，我们面临的约束可能不是简单的逐点 Dirichlet 或 Neumann 条件，而是对整个边界上某个物理量的积分值（例如平均温度、总通量）进行控制。本练习将介绍一种功能强大且通用的技术——拉格朗日乘子法——来施加这类积分约束。通过这个练习，你将学习如何构建和求解一个增广的“鞍点”方程组，从而精确满足全局或非局部约束，这在多物理场耦合和接触力学等高级领域中至关重要。[@problem_id:2402864]", "problem": "考虑在开放单位正方形域 $\\Omega = (0,1)\\times(0,1)$（其边界为 $\\partial\\Omega$）上的标量热传导问题。设热导率为正常数 $\\kappa>0$，体积源在 $\\Omega$ 上为常数 $q$。未知温度场为 $T:\\overline{\\Omega}\\to\\mathbb{R}$。其弱问题为：寻找 $T$，使得\n$$\\int_{\\Omega} \\kappa\\, \\nabla T\\cdot \\nabla v \\, \\mathrm{d}\\Omega \\;=\\; \\int_{\\Omega} q\\, v \\, \\mathrm{d}\\Omega \\quad \\text{对于所有容许的 } v,$$\n该问题受限于 $\\partial\\Omega$ 上的齐次自然边界条件以及在右边界边 $\\Gamma=\\{(x,y)\\in \\partial\\Omega \\mid x=1\\}$ 上的全局边界平均约束，\n$$\\frac{1}{L}\\int_{\\Gamma} T \\,\\mathrm{d}\\Gamma \\;=\\; T_{\\text{avg}},$$\n其中 $L$ 是 $\\Gamma$ 的几何长度，$T_{\\text{avg}}$ 是一个给定的常数。所有量均为无量纲；本问题中不使用任何物理单位。\n\n使用有限元法 (FEM)，在 $\\Omega$ 的一个均匀三角剖分上采用连续分片线性形函数。该剖分通过将 $\\Omega$ 细分为 $N_x\\times N_y$ 个全等矩形，然后通过一条一致的对角线将每个矩形分割成两个三角形而获得，其中 $N_x=N_y=8$。通过引入单个拉格朗日乘子来施加 $\\Gamma$ 上的平均边界约束。将对应于节点温度的离散标量未知向量定义为 $\\mathbf{T}\\in \\mathbb{R}^n$，拉格朗日乘子定义为 $\\lambda\\in \\mathbb{R}$，并对双线性和线性形式使用标准的伽辽金方法。使用 $\\mathbf{B}\\in \\mathbb{R}^{1\\times n}$ 表示一个行向量，其分量由节点基函数沿 $\\Gamma$ 的积分并进行适当缩放后给出，从而使得 $\\mathbf{B}\\,\\mathbf{T} = \\frac{1}{L}\\int_{\\Gamma} T_h \\,\\mathrm{d}\\Gamma$，其中 $T_h$ 是 $T$ 的有限元插值。\n\n你的任务是编写一个程序，针对下述的每个测试用例，组装带有拉格朗日乘子的离散线性系统以施加在 $\\Gamma$ 上的平均约束，求解 $(\\mathbf{T},\\lambda)$，并为每个测试用例报告两个值：\n- 计算出的 $\\Gamma$ 上平均温度与给定 $T_{\\text{avg}}$ 之间的绝对误差，即 $\\left|\\mathbf{B}\\,\\mathbf{T} - T_{\\text{avg}}\\right|$，以及\n- 拉格朗日乘子 $\\lambda$ 的值。\n\n使用以下参数三元组的测试套件 $(\\kappa, q, T_{\\text{avg}})$:\n- 测试 $1$：$(\\kappa, q, T_{\\text{avg}}) = (1.0, 0.0, 2.0)$，\n- 测试 $2$：$(\\kappa, q, T_{\\text{avg}}) = (1.0, 1.0, 0.0)$，\n- 测试 $3$：$(\\kappa, q, T_{\\text{avg}}) = (2.5, 0.0, -1.0)$，\n- 测试 $4$：$(\\kappa, q, T_{\\text{avg}}) = (0.7, 0.5, 0.3)$。\n\n所有计算都必须在上述指定的 $N_x=N_y=8$ 的均匀网格上执行。右边界 $\\Gamma$ 是 $x=1$ 处的整个边，而齐次自然边界条件应用于 $\\partial\\Omega$ 的其余部分。\n\n最终输出格式：你的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。该列表必须按顺序包含从测试 $1$ 到 $4$ 的每个测试 $i$ 的绝对误差 $\\left|\\mathbf{B}\\,\\mathbf{T} - T_{\\text{avg}}\\right|$ 和拉格朗日乘子 $\\lambda$，两者均四舍五入到六位小数。具体而言，输出必须采用以下格式：\n$$\\big[ \\text{err}_1, \\lambda_1, \\text{err}_2, \\lambda_2, \\text{err}_3, \\lambda_3, \\text{err}_4, \\lambda_4 \\big],$$\n其中每个条目都是一个小数点后恰好有六位数字的十进制数。", "solution": "我们对问题陈述进行了严格审查，并确定其是有效的。它描述了一个适定的泊松方程边值问题，该问题使用有限元法和一个拉格朗日乘子来施加一个积分约束。乍一看，由于在整个边界 $\\partial\\Omega$ 上施加了齐次自然边界条件，对于非零源项 $q$，该问题似乎是不适定的。一个标准的纯诺伊曼问题要求源项在域上的积分为零才能存在解，这个条件在 $q \\neq 0$ 的测试用例中被违反了。\n\n然而，引入拉格朗日乘子 $\\lambda$ 来施加约束 $\\frac{1}{L}\\int_{\\Gamma} T \\,\\mathrm{d}\\Gamma = T_{\\text{avg}}$ 从根本上改变了该问题。增广的弱形式导致了一个混合边值问题，其中自然边界条件 $\\kappa \\nabla T \\cdot \\mathbf{n} = 0$ 仅适用于 $\\partial\\Omega \\setminus \\Gamma$，而在约束边界 $\\Gamma$ 上，该条件变为 $\\kappa \\nabla T \\cdot \\mathbf{n} = -\\lambda/L$。在这种情况下，由散度定理推导出的相容性条件变为 $\\int_\\Omega q \\, \\mathrm{d}\\Omega = \\lambda$，这个条件用于定义拉格朗日乘子的值。解 $T$ 的唯一性由 $\\Gamma$ 上的积分约束保证。因此，该问题在科学上是合理的，并且是内部一致的。\n\n求解过程首先通过有限元法对控制方程进行离散化。出发点是最小化系统势能并满足给定约束而推导出的鞍点问题。寻找 $(T, \\lambda) \\in V \\times \\mathbb{R}$ 使得：\n$$\n\\int_{\\Omega} \\kappa \\nabla T \\cdot \\nabla v \\, d\\Omega + \\lambda \\left( \\frac{1}{L} \\int_{\\Gamma} v \\, d\\Gamma \\right) = \\int_{\\Omega} q v \\, d\\Omega, \\quad \\forall v \\in V\n$$\n$$\n\\frac{1}{L} \\int_{\\Gamma} T \\, d\\Gamma = T_{\\text{avg}}\n$$\n这里，$V$ 是温度场的合适函数空间，$v$ 是测试函数。\n\n将域 $\\Omega = (0,1)\\times(0,1)$ 离散化为一个 $N_x \\times N_y = 8 \\times 8$ 的均匀矩形单元网格。每个矩形随后通过一致的对角线被划分为两个线性三角形单元，从而产生 $128$ 个单元和 $(N_x+1)(N_y+1) = 81$ 个节点。温度场 $T$ 近似为连续分片线性函数 $T_h = \\sum_{j=1}^{n} T_j N_j$，其中 $T_j$ 是未知的节点温度，$N_j$ 是线性基（帽）函数，$n=81$。\n\n将近似解 $T_h$ 代入弱形式，并选择测试函数 $v$ 为基函数 $N_i$（其中 $i=1, \\dots, n$），得到一个线性代数方程组。该系统与离散化的约束方程一起，构成一个分块矩阵系统：\n$$\n\\begin{pmatrix}\n\\mathbf{K} & \\mathbf{B}^T \\\\\n\\mathbf{B} & 0\n\\end{pmatrix}\n\\begin{pmatrix}\n\\mathbf{T} \\\\\n\\lambda\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\mathbf{f} \\\\\nT_{\\text{avg}}\n\\end{pmatrix}\n$$\n其中 $\\mathbf{T} \\in \\mathbb{R}^n$ 是节点温度向量，$\\lambda \\in \\mathbb{R}$ 是拉格朗日乘子。该系统的组成部分如下：\n\n全局刚度矩阵 $\\mathbf{K} \\in \\mathbb{R}^{n \\times n}$，其分量为 $K_{ij} = \\int_{\\Omega} \\kappa \\nabla N_i \\cdot \\nabla N_j \\, d\\Omega$。它通过遍历所有三角形单元并累加它们的局部贡献来组装。对于一个面积为 $A_e$、节点坐标为 $(x_k, y_k)$ 的单个三角形单元 $e$，单元刚度矩阵 $\\mathbf{k}^e$ 的分量为 $k^e_{rs} = \\frac{\\kappa}{4 A_e} (b_r b_s + c_r c_s)$，其中 $b_r = y_{r+1} - y_{r+2}$ 且 $c_r = x_{r+2} - x_{r+1}$（使用循环索引置换）。\n\n全局力向量 $\\mathbf{f} \\in \\mathbb{R}^n$，其分量为 $f_i = \\int_{\\Omega} q N_i \\, d\\Omega$。对于常数源 $q$，单个单元 $e$ 对其三个节点的贡献为 $f_i^e = \\int_{A_e} q N_i \\, d\\Omega = q A_e / 3$。\n\n约束向量 $\\mathbf{B} \\in \\mathbb{R}^{1 \\times n}$，其分量为 $B_j = \\frac{1}{L} \\int_{\\Gamma} N_j \\, d\\Gamma$。边界 $\\Gamma$ 是位于 $x=1$ 的边，长度 $L=1$。仅当节点 $j$ 位于此边上时，基函数 $N_j$ 在 $\\Gamma$ 上才非零。$\\Gamma$ 上的节点坐标为 $(1, j h_y)$，其中 $j=0, \\dots, N_y$ 且 $h_y = 1/N_y = 1/8$。一个线性一维基函数在长度为 $h_y$ 的区间上的积分为 $h_y/2$。因此，$\\mathbf{B}$ 的非零分量为：\n- 对于 $\\Gamma$ 上的两个角节点（位于 $y=0$ 和 $y=1$），$B_j = (1/L) \\cdot (h_y/2) = (1/1) \\cdot (1/8)/2 = 1/16$。\n- 对于 $\\Gamma$ 上的 $N_y-1=7$ 个内部节点，基函数跨越两个线段，因此 $B_j = (1/L) \\cdot (h_y/2 + h_y/2) = h_y = 1/8$。\n$\\mathbf{B}$ 的所有其他分量均为零。\n\n将得到的 $(n+1) \\times (n+1)$ 线性系统构建为稀疏矩阵，并求解向量 $(\\mathbf{T}, \\lambda)^T$。然后计算所需的输出：\n1. 绝对误差 $\\left|\\mathbf{B}\\,\\mathbf{T} - T_{\\text{avg}}\\right|$。由于该约束作为线性系统中的一个精确方程被施加，这个误差预计在机器精度的数量级。\n2. 拉格朗日乘子 $\\lambda$。如相容性条件所示，$\\lambda$ 必须等于总源强度，即 $\\lambda = \\int_\\Omega q \\, d\\Omega = q$。\n\n对测试套件中提供的每组参数 $(\\kappa, q, T_{\\text{avg}})$ 执行此过程。", "answer": "```python\nimport numpy as np\nfrom scipy.sparse import lil_matrix\nfrom scipy.sparse.linalg import spsolve\n\ndef solve():\n    \"\"\"\n    Solves the heat conduction problem with an average boundary constraint\n    using the Finite Element Method with a Lagrange multiplier.\n    \"\"\"\n    test_cases = [\n        (1.0, 0.0, 2.0),\n        (1.0, 1.0, 0.0),\n        (2.5, 0.0, -1.0),\n        (0.7, 0.5, 0.3),\n    ]\n\n    results = []\n    \n    # Mesh parameters\n    Nx = 8\n    Ny = 8\n\n    for kappa, q, T_avg in test_cases:\n        # Mesh generation\n        num_nodes_x = Nx + 1\n        num_nodes_y = Ny + 1\n        num_nodes = num_nodes_x * num_nodes_y\n        hx = 1.0 / Nx\n        hy = 1.0 / Ny\n\n        node_coords = np.array([(i * hx, j * hy) for j in range(num_nodes_y) for i in range(num_nodes_x)])\n\n        # Initialize global system matrices\n        K = lil_matrix((num_nodes, num_nodes))\n        f = np.zeros(num_nodes)\n\n        # Assembly loop over rectangular cells\n        for j in range(Ny):\n            for i in range(Nx):\n                # Global indices of the 4 cell nodes (Bottom-Left, Bottom-Right, Top-Left, Top-Right)\n                n_bl = i + j * num_nodes_x\n                n_br = (i + 1) + j * num_nodes_x\n                n_tl = i + (j + 1) * num_nodes_x\n                n_tr = (i + 1) + (j + 1) * num_nodes_x\n\n                # Split rectangle into two triangles (using BL-TR diagonal)\n                triangles = [\n                    (n_bl, n_br, n_tr),  # Bottom-right triangle\n                    (n_bl, n_tr, n_tl)   # Top-left triangle\n                ]\n\n                for tri_nodes in triangles:\n                    # Element coordinates\n                    coords = node_coords[list(tri_nodes)]\n                    p1, p2, p3 = coords\n                    \n                    # Element area\n                    Ae = 0.5 * np.abs(p1[0]*(p2[1]-p3[1]) + p2[0]*(p3[1]-p1[1]) + p3[0]*(p1[1]-p2[1]))\n                    \n                    # Gradients of basis functions components\n                    b = np.array([p2[1]-p3[1], p3[1]-p1[1], p1[1]-p2[1]])\n                    c = np.array([p3[0]-p2[0], p1[0]-p3[0], p2[0]-p1[0]])\n                    \n                    # Element stiffness matrix\n                    Ke = (kappa / (4.0 * Ae)) * (np.outer(b, b) + np.outer(c, c))\n                    \n                    # Element force vector\n                    fe = (q * Ae / 3.0) * np.ones(3)\n\n                    # Assemble into global matrices\n                    for r in range(3):\n                        f[tri_nodes[r]] += fe[r]\n                        for s in range(3):\n                            K[tri_nodes[r], tri_nodes[s]] += Ke[r, s]\n        \n        # Assemble constraint vector B\n        L = 1.0 # Length of the boundary Gamma\n        B = np.zeros(num_nodes)\n        \n        # Nodes on the right boundary (x=1)\n        # Corner node at (1,0)\n        idx_bottom = Nx + 0 * num_nodes_x\n        B[idx_bottom] = (hy / 2.0) / L\n        # Corner node at (1,1)\n        idx_top = Nx + Ny * num_nodes_x\n        B[idx_top] = (hy / 2.0) / L\n        # Interior nodes\n        for j in range(1, Ny):\n            idx = Nx + j * num_nodes_x\n            B[idx] = hy / L\n\n        # Construct the augmented saddle-point system\n        n = num_nodes\n        M = lil_matrix((n + 1, n + 1))\n        rhs = np.zeros(n + 1)\n        \n        M[:n, :n] = K\n        M[:n, n] = B.reshape(-1, 1)\n        M[n, :n] = B\n        \n        rhs[:n] = f\n        rhs[n] = T_avg\n        \n        # Solve the linear system\n        M_csc = M.tocsc()\n        solution = spsolve(M_csc, rhs)\n\n        T_vec = solution[:n]\n        lambda_val = solution[n]\n        \n        # Post-processing: calculate error\n        T_avg_computed = np.dot(B, T_vec)\n        error = np.abs(T_avg_computed - T_avg)\n        \n        results.append(\"{:.6f}\".format(error))\n        results.append(\"{:.6f}\".format(lambda_val))\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2402864"}]}