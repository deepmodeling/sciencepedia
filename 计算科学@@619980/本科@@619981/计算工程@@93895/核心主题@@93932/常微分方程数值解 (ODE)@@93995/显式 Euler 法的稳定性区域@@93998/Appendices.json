{"hands_on_practices": [{"introduction": "理论知识是基础，但真正的理解来自于实践。这个练习将带你从一个具体的物理模型出发——一个热探针在振荡温度环境中的响应——来应用显式欧拉法的稳定性理论。通过解决这个问题，你将学会如何将抽象的稳定性判据 $|1+h\\lambda| \\le 1$ 与物理系统中的具体参数（如热弛豫率 $k$）联系起来，并计算出保证数值解稳定的临界时间步长。[@problem_id:2172206]", "problem": "本题模拟一个小型高导热性金属探针在温度快速振荡环境中的热行为。探针的温度 $T(t)$ 作为时间 $t$ 的函数，由以下一阶线性常微分方程描述：\n$$ \\frac{dT}{dt} = -k \\left( T - T_{ambient}(t) \\right) $$\n其中环境温度由 $T_{ambient}(t) = T_0 + A \\sin(\\omega t)$ 给出。探针的初始温度为 $T(0) = T_i$。\n\n在一次特定实验中，参数如下：\n- 热弛豫速率常数, $k = 100 \\text{ s}^{-1}$\n- 平均环境温度, $T_0 = 300 \\text{ K}$\n- 温度振荡幅度, $A = 2 \\text{ K}$\n- 振荡角频率, $\\omega = 1 \\text{ rad/s}$\n- 探针初始温度, $T_i = 301 \\text{ K}$\n\n为了求解 $T(t)$，我们采用一种基于显式欧拉法的数值方法。由于 $k$ 值很大，该微分方程被认为是“刚性”的。众所周知，如果时间步长 $h$ 过大，显式欧拉法可能会变得数值不稳定，产生剧烈振荡且发散的解。\n\n确定临界时间步长 $h_{crit}$，当时间步长超过该值时，用于此系统的显式欧拉法将变得不稳定。请以秒为单位，用精确的小数值表示你的答案。", "solution": "问题要求解应用于给定常微分方程（ODE）的显式欧拉法的稳定性的临界时间步长 $h_{crit}$。\n\n对于形式为 $\\frac{dy}{dt} = f(t, y)$ 的一阶常微分方程，显式欧拉法的更新规则如下：\n$$y_{n+1} = y_n + h \\cdot f(t_n, y_n)$$\n其中 $y_n$ 是 $y(t_n)$ 的数值近似值，$h$ 是时间步长。\n\n给定的常微分方程为：\n$$ \\frac{dT}{dt} = -k \\left( T - T_{ambient}(t) \\right) = -k \\left( T - (T_0 + A \\sin(\\omega t)) \\right) $$\n我们将其重排以匹配标准形式 $y' = \\lambda y + g(t)$。这里，我们的因变量是 $T$。\n$$ \\frac{dT}{dt} = -kT + k(T_0 + A \\sin(\\omega t)) $$\n这是一个线性一阶常微分方程。函数 $f(t, T)$ 为：\n$$ f(t, T) = -kT + k(T_0 + A \\sin(\\omega t)) $$\n\n对于线性常微分方程，显式欧拉法的稳定性由其齐次部分的行为决定。我们可以通过考虑一个形式为 $y' = \\lambda y$ 的测试方程来分析其稳定性，其中 $\\lambda$ 是系统雅可比矩阵的特征值。对于单个线性常微分方程，$\\lambda$ 就是因变量的系数。\n\n在我们的方程中，$T$ 的系数是 $-k$。因此，我们设 $\\lambda = -k$。方程的非齐次部分 $g(t) = k(T_0 + A \\sin(\\omega t))$ 和初始条件 $T(0) = T_i$ 不影响方法本身的稳定性条件。\n\n将显式欧拉法应用于测试方程 $y' = \\lambda y$ 可得：\n$$ y_{n+1} = y_n + h(\\lambda y_n) = (1 + h\\lambda) y_n $$\n为了使数值解保持稳定（不无界增长），放大因子 $(1 + h\\lambda)$ 的模必须小于或等于1。这给出了稳定性条件：\n$$ |1 + h\\lambda| \\le 1 $$\n现在，我们将 $\\lambda = -k$ 的值代入此条件：\n$$ |1 + h(-k)| \\le 1 $$\n$$ |1 - hk| \\le 1 $$\n这个绝对值不等式等价于复合不等式：\n$$ -1 \\le 1 - hk \\le 1 $$\n我们可以将其拆分为两个独立的不等式：\n\n1.  $1 - hk \\le 1$\n    $$ -hk \\le 0 $$\n    由于时间步长 $h$ 和速率常数 $k$ 都是正的物理量（$h>0, k>0$），它们的乘积 $hk$ 总是正的。因此，$-hk$ 总是负的，不等式 $-hk \\le 0$ 恒成立。\n\n2.  $-1 \\le 1 - hk$\n    $$ hk \\le 2 $$\n    $$ h \\le \\frac{2}{k} $$\n\n综合以上结果，对于范围在 $0 < h \\le \\frac{2}{k}$ 内的时间步长 $h$，显式欧拉法是稳定的。临界时间步长 $h_{crit}$ 是该方法保持稳定的 $h$ 的最大值。因此，对于任何 $h > \\frac{2}{k}$，该方法都会变得不稳定。这个稳定域的边界是：\n$$ h_{crit} = \\frac{2}{k} $$\n题目给出的热弛豫速率常数值为 $k = 100 \\text{ s}^{-1}$。将该值代入 $h_{crit}$ 的表达式中：\n$$ h_{crit} = \\frac{2}{100 \\text{ s}^{-1}} = 0.02 \\text{ s} $$\n因此，临界时间步长为 0.02 秒。对于任何大于此值的时间步长，数值解都将变得不稳定。确定稳定性阈值无需 $T_0$、$A$、$\\omega$ 和 $T_i$ 的值。问题要求以秒为单位，用精确的小数表示答案。", "answer": "$$\\boxed{0.02}$$", "id": "2172206"}, {"introduction": "在使用数值方法时，得到一个“答案”并不意味着它是正确的。这个练习是一个经典的警示案例，它展示了在求解刚性系统时，如果忽略了稳定性要求会发生什么。你将对一个具有两个不同时间尺度的解分量的系统使用显式欧拉法，并选择一个对慢分量稳定但对快分量不稳定的步长，亲眼见证数值解如何产生一个与真实物理行为完全背离的、荒谬的结果。[@problem_id:2438055]", "problem": "考虑线性时不变常微分方程组（ODEs）\n$$\n\\frac{d\\mathbf{u}}{dt} = A\\,\\mathbf{u}, \\quad A = \\begin{pmatrix} -1 & 0 \\\\ 0 & -100 \\end{pmatrix},\n$$\n其初始条件为\n$$\n\\mathbf{u}(0) = \\begin{pmatrix} 1 \\\\ 10^{-3} \\end{pmatrix}.\n$$\n从 $t=0$ 开始，应用步长恒为 $h = 0.05$ 的显式欧拉时间步进法，计算至最终时间 $T = 0.20$。确定在时间 $T$ 时第二个分量的显式欧拉近似值，记为 $u_2(T)$，并给出其精确值（无需四舍五入）。", "solution": "首先将对问题进行严格的验证。\n\n步骤 1：提取已知条件\n给定的信息如下：\n- 一个常微分方程组（ODEs）：$\\frac{d\\mathbf{u}}{dt} = A\\,\\mathbf{u}$\n- 矩阵 $A$：$A = \\begin{pmatrix} -1 & 0 \\\\ 0 & -100 \\end{pmatrix}$\n- 初始条件：$\\mathbf{u}(0) = \\begin{pmatrix} 1 \\\\ 10^{-3} \\end{pmatrix}$\n- 数值方法：显式欧拉时间步进法\n- 恒定时间步长：$h = 0.05$\n- 起始时间：$t=0$\n- 最终时间：$T = 0.20$\n- 待求量：在时间 $T$ 时第二个分量的显式欧拉近似值，记为 $u_2(T)$。\n\n步骤 2：使用提取的已知条件进行验证\n该问题是常微分方程数值分析领域的一个标准练习，特别是在计算工程中。该问题具有科学依据，是适定的、客观的。该问题要求将一个特定的、明确定义的数值算法（显式欧拉法）应用于一个具有给定参数的、明确定义的线性常微分方程组，并得出结果。\n\n该系统是一个刚性系统，因为矩阵 $A$ 的特征值 $\\lambda_1 = -1$ 和 $\\lambda_2 = -100$ 的数量级差异很大。对于形如 $y' = \\lambda y$ 的方程，显式欧拉法的稳定性由条件 $|1 + h\\lambda| \\le 1$ 决定。对于系统的第二个分量，我们有 $\\lambda_2 = -100$ 和 $h=0.05$。这得到 $|1 + (0.05)(-100)| = |1 - 5| = |-4| = 4$。由于 $4 > 1$，时间步长 $h=0.05$ 违反了针对快速衰减分量的稳定性条件。\n\n这个违规并不会使问题无效。它仅仅意味着该分量的数值解将是不稳定的，并且会偏离真实解。任务是计算这个不稳定过程的结果，这是一个在数学上合理且定义明确的计算。该问题提供了所有必要的信息，并且不包含任何矛盾或歧义。\n\n步骤 3：结论与行动\n问题有效。将推导解答。\n\n对于系统 $\\frac{d\\mathbf{u}}{dt} = A\\mathbf{u}$，显式欧拉法由以下递推关系给出：\n$$\n\\mathbf{u}^{n+1} = \\mathbf{u}^n + h A \\mathbf{u}^n\n$$\n其中 $\\mathbf{u}^n$ 是在时间 $t_n = n h$ 时 $\\mathbf{u}(t_n)$ 的数值近似值。这可以被重写为：\n$$\n\\mathbf{u}^{n+1} = (\\mathbf{I} + hA) \\mathbf{u}^n\n$$\n其中 $\\mathbf{I}$ 是单位矩阵。\n\n矩阵 $A$ 是对角矩阵，这意味着该方程组是解耦的。向量 $\\mathbf{u} = \\begin{pmatrix} u_1 \\\\ u_2 \\end{pmatrix}$ 的两个分量 $u_1$ 和 $u_2$ 是独立演化的。我们被要求求第二个分量 $u_2(T)$ 的近似值。$u_2$ 的控制微分方程为：\n$$\n\\frac{du_2}{dt} = -100 u_2\n$$\n其初始条件为 $u_2(0) = 10^{-3}$。\n\n对于这个标量方程，显式欧拉格式为：\n$$\nu_2^{n+1} = u_2^n + h (-100 u_2^n) = (1 - 100h) u_2^n\n$$\n给定 $h = 0.05$。将此值代入递推关系，得到：\n$$\nu_2^{n+1} = (1 - 100 \\times 0.05) u_2^n = (1 - 5) u_2^n = -4 u_2^n\n$$\n这个关系描述了数值近似值 $u_2$ 如何从一个时间步演化到下一个时间步。初始值为 $u_2^0 = u_2(0) = 10^{-3}$。\n\n最终时间为 $T = 0.20$，时间步长为 $h=0.05$。达到最终时间所需的总步数 $N$ 为：\n$$\nN = \\frac{T}{h} = \\frac{0.20}{0.05} = 4\n$$\n我们需要找到 $4$ 步之后 $u_2$ 的值，即 $u_2^4$。我们可以应用该递推关系四次：\n\n- 在 $n=0$ 时，$t_1 = 0.05$：\n$$\nu_2^1 = -4 u_2^0 = -4 \\times 10^{-3}\n$$\n- 在 $n=1$ 时，$t_2 = 0.10$：\n$$\nu_2^2 = -4 u_2^1 = -4 \\times (-4 \\times 10^{-3}) = 16 \\times 10^{-3}\n$$\n- 在 $n=2$ 时，$t_3 = 0.15$：\n$$\nu_2^3 = -4 u_2^2 = -4 \\times (16 \\times 10^{-3}) = -64 \\times 10^{-3}\n$$\n- 在 $n=3$ 时，$t_4 = 0.20 = T$：\n$$\nu_2^4 = -4 u_2^3 = -4 \\times (-64 \\times 10^{-3}) = 256 \\times 10^{-3}\n$$\n或者，递推关系 $u_2^{n+1} = (-4) u_2^n$ 的解为 $u_2^n = (-4)^n u_2^0$。对于 $n=4$：\n$$\nu_2^4 = (-4)^4 u_2^0 = 256 \\times 10^{-3}\n$$\n在时间 $T=0.20$ 时，第二个分量的显式欧拉近似值为：\n$$\nu_2(T) \\approx u_2^4 = 256 \\times 10^{-3} = 0.256\n$$\n这个结果是一个很大的正值，与真实解 $u_2(t) = 10^{-3} \\exp(-100t)$ 形成鲜明对比，真实解在 $t=0.20$ 时为 $u_2(0.20) = 10^{-3} \\exp(-20)$，这是一个极度接近于零的数。巨大的误差是在验证阶段指出的数值不稳定性的直接后果。尽管如此，根据指定方法的规则，该计算是正确的。", "answer": "$$\n\\boxed{0.256}\n$$", "id": "2438055"}, {"introduction": "显式欧拉法的稳定域是一个位于复平面上，以 $-1$ 为中心、半径为 $1$ 的圆盘。这个编程练习旨在将这个抽象的几何概念转化为一个具体的计算任务。你将通过编写代码，测试一系列复数 $z = h\\lambda$ 点，并根据其放大因子的模来对它们的稳定性进行分类，从而亲手“绘制”出稳定域的轮廓。[@problem_id:2441545] 这个过程不仅能加深你对稳定域定义的理解，还能让你熟悉如何用计算方法来探索和验证数值方法的理论性质。", "problem": "考虑将显式欧拉法应用于复平面上的线性检验方程，得到线性递推关系\n$$\nw_{n+1} = (1+z)\\,w_n,\n$$\n其中 $z \\in \\mathbb{C}$ 是一个固定的复数参数，$w_0 \\in \\mathbb{C}$ 是一个初始条件。为此递推关系定义渐近稳定、中性稳定和不稳定如下：\n- 渐近稳定：对于任意 $w_0 \\in \\mathbb{C}$，$\\lim_{n \\to \\infty} w_n = 0$，\n- 中性稳定：对于某个 $w_0 \\in \\mathbb{C}$，$\\{|w_n|\\}_{n \\in \\mathbb{N}}$ 有界且不收敛到 $0$，\n- 不稳定：对于某个 $w_0 \\in \\mathbb{C}$，$\\{|w_n|\\}_{n \\in \\mathbb{N}}$ 无界。\n\n对于每个固定的 $z \\in \\mathbb{C}$，将每步发散率（在扩展实数中）定义为极限\n$$\ng(z) = \\lim_{n \\to \\infty} \\frac{1}{n}\\,\\ln |w_n|,\n$$\n其中 $\\ln$ 表示自然对数。如果极限等于负无穷大，则表示为 $-\\infty$。\n\n编写一个完整的、可运行的程序，对于以下复数参数 $z$ 的测试集，确定每个 $z$ 的：\n- 一个整数稳定性分类 $S(z)$，约定 $S(z)=1$ 表示渐近稳定，$S(z)=0$ 表示中性稳定，$S(z)=-1$ 表示不稳定，以及\n- 发散率 $g(z)$。\n\n使用测试集：\n- $z_1 = -0.5 + 0.0\\,\\mathrm{i}$，\n- $z_2 = -2.0 + 0.0\\,\\mathrm{i}$，\n- $z_3 = 0.2 + 0.3\\,\\mathrm{i}$，\n- $z_4 = -1.0 + 0.0\\,\\mathrm{i}$，\n- $z_5 = -0.5 + 0.8660254037844386\\,\\mathrm{i}$，\n- $z_6 = -1.0 + 0.5\\,\\mathrm{i}$，\n- $z_7 = 1.0 + 0.0\\,\\mathrm{i}$。\n\n您的程序必须仅使用上述数学定义来计算每个 $k \\in \\{1,2,3,4,5,6,7\\}$ 的 $S(z_k)$ 和 $g(z_k)$。所有 $g(z_k)$ 的浮点数输出必须四舍五入到 6 位小数；如果 $g(z_k)=-\\infty$，则不经四舍五入直接输出为 $-\\infty$。最终的程序输出必须是单行，包含一个用方括号括起来的逗号分隔列表，格式如下\n$$\n[\\;S(z_1),\\,g(z_1),\\,S(z_2),\\,g(z_2),\\,\\dots,\\,S(z_7),\\,g(z_7)\\;],\n$$\n无空格。例如，一种可接受的格式是\n$$\n[1,-0.693147,0,0.000000,\\dots].\n$$", "solution": "对问题陈述进行验证。\n\n第 1 步：提取已知信息\n- 递推关系：$$w_{n+1} = (1+z)\\,w_n$$\n- 参数：$z \\in \\mathbb{C}$，$w_0 \\in \\mathbb{C}$。\n- 稳定性定义：\n  - 渐近稳定：对于任意 $w_0 \\in \\mathbb{C}$，$\\lim_{n \\to \\infty} w_n = 0$。\n  - 中性稳定：对于某个 $w_0 \\in \\mathbb{C}$，$\\{|w_n|\\}_{n \\in \\mathbb{N}}$ 有界且不收敛到 $0$。\n  - 不稳定：对于某个 $w_0 \\in \\mathbb{C}$，$\\{|w_n|\\}_{n \\in \\mathbb{N}}$ 无界。\n- 发散率：$$g(z) = \\lim_{n \\to \\infty} \\frac{1}{n}\\,\\ln |w_n|$$\n- 稳定性分类：$S(z)=1$ 表示渐近稳定，$S(z)=0$ 表示中性稳定，$S(z)=-1$ 表示不稳定。\n- 测试集：\n  - $z_1 = -0.5 + 0.0\\,\\mathrm{i}$\n  - $z_2 = -2.0 + 0.0\\,\\mathrm{i}$\n  - $z_3 = 0.2 + 0.3\\,\\mathrm{i}$\n  - $z_4 = -1.0 + 0.0\\,\\mathrm{i}$\n  - $z_5 = -0.5 + 0.8660254037844386\\,\\mathrm{i}$\n  - $z_6 = -1.0 + 0.5\\,\\mathrm{i}$\n  - $z_7 = 1.0 + 0.0\\,\\mathrm{i}$\n- 输出要求：一个单行列表 $[\\;S(z_1),\\,g(z_1),\\,S(z_2),\\,g(z_2),\\,\\dots,\\,S(z_7),\\,g(z_7)\\;]$，其中 $g(z_k)$ 四舍五入到 $6$ 位小数或为 $-\\infty$。\n\n第 2 步：使用提取的已知信息进行验证\n该问题具有科学依据、问题适定且客观。它是常微分方程数值方法稳定性分析中的一个标准问题，特别是将显式欧拉法应用于线性检验方程 $y' = \\lambda y$，其中 $z = h\\lambda$。稳定性和发散率的定义是标准且明确的。该问题是自洽的，没有矛盾或不科学的前提。\n\n第 3 步：结论与行动\n问题有效。将提供一个合理的解决方案。\n\n所提供的线性递推关系为\n$$w_{n+1} = (1+z) w_n$$\n其中 $z \\in \\mathbb{C}$ 是一个常数参数。这是一个一阶线性齐次常系数递推关系。其解可通过归纳法得到。从一个初始条件 $w_0$ 出发，我们有：\n$w_1 = (1+z)w_0$\n$w_2 = (1+z)w_1 = (1+z)^2 w_0$\n$w_3 = (1+z)w_2 = (1+z)^3 w_0$\n以此类推。通解由下式给出\n$$w_n = (1+z)^n w_0$$\n序列 $\\{w_n\\}$ 的长期行为由复数 $1+z$ 决定，该复数被称为放大因子。我们来分析 $w_n$ 的模：\n$$|w_n| = |(1+z)^n w_0| = |(1+z)^n| |w_0| = |1+z|^n |w_0|$$\n令 $R = |1+z|$。则 $|w_n| = R^n |w_0|$。系统的稳定性完全取决于 $R$ 的值。\n\n1.  **稳定性分析**：我们使用所提供的定义。\n    - 如果 $R < 1$，则 $\\lim_{n \\to \\infty} R^n = 0$。因此 $\\lim_{n \\to \\infty} |w_n| = 0$，这意味着对于任意 $w_0$，$\\lim_{n \\to \\infty} w_n = 0$。这对应于渐近稳定。于是 $S(z)=1$。\n    - 如果 $R = 1$，则对于所有 $n$， $|w_n| = 1^n |w_0| = |w_0|$。对于任意 $w_0 \\neq 0$，模序列 $\\{|w_n|\\}$ 是一个常正数序列 $\\{|w_0|, |w_0|, \\dots\\}$。它有界但不收敛到 $0$。这符合中性稳定的定义。于是 $S(z)=0$。\n    - 如果 $R > 1$，则 $\\lim_{n \\to \\infty} R^n = \\infty$。对于任意 $w_0 \\neq 0$，序列 $\\{|w_n|\\}$ 是无界的。这对应于不稳定。于是 $S(z)=-1$。\n    总之，稳定性分类 $S(z)$ 是通过将 $|1+z|$ 与 $1$ 进行比较来确定的。\n\n2.  **发散率分析**：发散率 $g(z)$ 定义为：\n    $$g(z) = \\lim_{n \\to \\infty} \\frac{1}{n}\\,\\ln |w_n|$$\n    假设初始条件非平凡，即 $w_0 \\neq 0$，我们代入 $|w_n| = R^n |w_0|$：\n    $$g(z) = \\lim_{n \\to \\infty} \\frac{1}{n}\\,\\ln (R^n |w_0|) = \\lim_{n \\to \\infty} \\frac{1}{n}\\,(n \\ln R + \\ln|w_0|) = \\lim_{n \\to \\infty} \\left( \\ln R + \\frac{\\ln|w_0|}{n} \\right)$$\n    当 $n \\to \\infty$ 时，项 $\\frac{\\ln|w_0|}{n} \\to 0$。因此，极限为：\n    $$g(z) = \\ln R = \\ln|1+z|$$\n    如果 $|1+z|=0$，即当 $z=-1$ 时，会出现一个特殊情况。在这种情况下，对于 $n \\ge 1$，$w_n=0$，且 $\\ln|w_n| = \\ln(0) = -\\infty$。极限 $g(-1)$ 为 $-\\infty$。这与公式 $g(-1) = \\ln|1-1| = \\ln(0)$ 一致。\n\n现在我们将这些发现应用于测试集中的每个 $z_k$。\n\n- 对于 $z_1 = -0.5 + 0.0\\,\\mathrm{i}$：\n  $1+z_1 = 0.5 + 0.0\\,\\mathrm{i}$。\n  $R_1 = |1+z_1| = 0.5$。\n  由于 $R_1 < 1$，系统是渐近稳定的，$S(z_1)=1$。\n  $g(z_1) = \\ln(0.5) \\approx -0.693147$。\n\n- 对于 $z_2 = -2.0 + 0.0\\,\\mathrm{i}$：\n  $1+z_2 = -1.0 + 0.0\\,\\mathrm{i}$。\n  $R_2 = |1+z_2| = 1$。\n  由于 $R_2 = 1$，系统是中性稳定的，$S(z_2)=0$。\n  $g(z_2) = \\ln(1) = 0.000000$。\n\n- 对于 $z_3 = 0.2 + 0.3\\,\\mathrm{i}$：\n  $1+z_3 = 1.2 + 0.3\\,\\mathrm{i}$。\n  $R_3 = |1+z_3| = \\sqrt{1.2^2 + 0.3^2} = \\sqrt{1.44 + 0.09} = \\sqrt{1.53}$。\n  由于 $R_3 = \\sqrt{1.53} \\approx 1.2369 > 1$，系统是不稳定的，$S(z_3)=-1$。\n  $g(z_3) = \\ln(\\sqrt{1.53}) = \\frac{1}{2}\\ln(1.53) \\approx 0.212634$。\n\n- 对于 $z_4 = -1.0 + 0.0\\,\\mathrm{i}$：\n  $1+z_4 = 0.0 + 0.0\\,\\mathrm{i}$。\n  $R_4 = |1+z_4| = 0$。\n  由于 $R_4 < 1$，系统是渐近稳定的，$S(z_4)=1$。序列在一个步骤内达到 $0$。\n  $g(z_4) = \\ln(0) = -\\infty$。\n\n- 对于 $z_5 = -0.5 + 0.8660254037844386\\,\\mathrm{i}$：\n  这是 $z_5 = -0.5 + i\\frac{\\sqrt{3}}{2}$。\n  $1+z_5 = 0.5 + i\\frac{\\sqrt{3}}{2}$。\n  $R_5 = |1+z_5| = \\sqrt{(0.5)^2 + (\\frac{\\sqrt{3}}{2})^2} = \\sqrt{0.25 + 0.75} = \\sqrt{1} = 1$。\n  由于 $R_5 = 1$，系统是中性稳定的，$S(z_5)=0$。\n  $g(z_5) = \\ln(1) = 0.000000$。\n\n- 对于 $z_6 = -1.0 + 0.5\\,\\mathrm{i}$：\n  $1+z_6 = 0.0 + 0.5\\,\\mathrm{i}$。\n  $R_6 = |1+z_6| = |0.5\\mathrm{i}| = 0.5$。\n  由于 $R_6 < 1$，系统是渐近稳定的，$S(z_6)=1$。\n  $g(z_6) = \\ln(0.5) \\approx -0.693147$。\n\n- 对于 $z_7 = 1.0 + 0.0\\,\\mathrm{i}$：\n  $1+z_7 = 2.0 + 0.0\\,\\mathrm{i}$。\n  $R_7 = |1+z_7| = 2$。\n  由于 $R_7 > 1$，系统是不稳定的，$S(z_7)=-1$。\n  $g(z_7) = \\ln(2) \\approx 0.693147$。\n\n这些计算提供了构建最终输出所需的所有值。实现将遵循此逻辑。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes stability classification and divergence rates for the explicit\n    Euler method applied to the linear test equation for a given suite of\n    complex parameters.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        -0.5 + 0.0j,                             # z_1\n        -2.0 + 0.0j,                             # z_2\n        0.2 + 0.3j,                              # z_3\n        -1.0 + 0.0j,                             # z_4\n        -0.5 + 0.8660254037844386j,              # z_5\n        -1.0 + 0.5j,                             # z_6\n        1.0 + 0.0j,                              # z_7\n    ]\n\n    results = []\n    # A small tolerance for floating-point comparisons to 1.0\n    tolerance = 1e-9\n\n    for z in test_cases:\n        # The stability and divergence are determined by the amplification factor (1+z).\n        amplification_factor = 1.0 + z\n        \n        # Calculate the modulus of the amplification factor.\n        magnitude = np.abs(amplification_factor)\n\n        # Determine stability classification S(z) and divergence rate g(z).\n        s_val = 0\n        g_val = 0.0\n\n        if magnitude  1.0 - tolerance:\n            # Asymptotically stable region: |1+z|  1\n            s_val = 1\n            if np.isclose(magnitude, 0.0):\n                # Special case for z = -1, where log(0) -> -inf\n                g_val = -np.inf\n            else:\n                g_val = np.log(magnitude)\n        elif magnitude > 1.0 + tolerance:\n            # Unstable region: |1+z| > 1\n            s_val = -1\n            g_val = np.log(magnitude)\n        else:\n            # Neutrally stable region: |1+z| = 1\n            s_val = 0\n            g_val = 0.0  # log(1) = 0\n\n        # Append the stability classification to the results.\n        results.append(str(s_val))\n        \n        # Format and append the divergence rate to the results.\n        if g_val == -np.inf:\n            results.append(\"-inf\")\n        else:\n            results.append(f\"{g_val:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2441545"}]}