{"hands_on_practices": [{"introduction": "这个练习将引导你从第一性原理出发，通过求解一个线性方程组来构建一个完整的三次样条。通过使用一个非标准的边界条件（指定的初始加速度），你将超越公式的直接应用，从而加深对样条如何被定制以模拟特定物理场景的理解。[@problem_id:2429242]", "problem": "对一个竖直发射过程在三个时间点 $t_0$、$t_1$ 和 $t_2$ 进行采样，其中 $t_0=0\\,\\text{s}$，$t_1=1\\,\\text{s}$，$t_2=2\\,\\text{s}$。测得的高度分别为 $y_0=0\\,\\text{m}$，$y_1=1\\,\\text{m}$ 和 $y_2=0\\,\\text{m}$。设 $S(t)$ 为唯一的三次样条函数，它在 $[t_0,t_1]$ 和 $[t_1,t_2]$ 上是分段三次的，全局二阶连续可微，并对数据进行插值，满足 $S(t_i)=y_i$ ($i\\in\\{0,1,2\\}$)。为了模拟具有指定初始加速度的发射过程，将通常的左端点钳位速度条件替换为非零加速度条件 $S''(t_0)=2\\,\\text{m}/\\text{s}^2$，并在右端点施加一个钳位速度条件 $S'(t_2)=0\\,\\text{m}/\\text{s}$。\n\n使用此样条函数 $S(t)$，确定在 $t=0.5\\,\\text{s}$ 时的插值高度。最终答案以米为单位表示。", "solution": "对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 数据点：$(t_0, y_0) = (0, 0)$，$(t_1, y_1) = (1, 1)$，$(t_2, y_2) = (2, 0)$。\n- 样条定义：$S(t)$ 是一个三次样条，在 $[0, 1]$ 和 $[1, 2]$ 上是分段三次的。\n- 光滑性：$S(t)$ 是全局二阶连续可微 ($C^2$) 的。\n- 插值条件：$S(t_i) = y_i$ 对于 $i \\in \\{0, 1, 2\\}$。\n- 边界条件：$S''(0) = 2\\,\\text{m}/\\text{s}^2$ 且 $S'(2) = 0\\,\\text{m}/\\text{s}$。\n- 目标：确定 $S(0.5)$ 的值。\n\n**步骤2：使用提取的已知条件进行验证**\n- 该问题是**有科学依据的**，因为它涉及到三次样条，这是数值分析和计算工程中的一个标准课题。\n- 该问题是**适定的**。它提供了8个条件（3个插值点给出4个约束，内部节点处一阶和二阶导数的2个连续性约束，以及2个边界条件）来确定两个分段三次多项式的8个系数。这种设置会导出一个唯一解。\n- 该问题是**客观的**，用精确的数学语言陈述，没有主观成分。\n- 该问题是完整的、一致的、可形式化的。\n\n**步骤3：结论与行动**\n此问题有效。将提供解答。\n\n设三次样条函数 $S(t)$ 分段定义如下：\n$$\nS(t) =\n\\begin{cases}\nS_0(t) & \\text{当 } t \\in [0, 1] \\\\\nS_1(t) & \\text{当 } t \\in [1, 2]\n\\end{cases}\n$$\n我们定义这两个三次多项式。为方便计算，第二个多项式是相对于节点 $t_1=1$ 定义的。\n$S_0(t) = a_0 + b_0 t + c_0 t^2 + d_0 t^3$\n$S_1(t) = a_1 + b_1 (t-1) + c_1 (t-1)^2 + d_1 (t-1)^3$\n\n一阶和二阶导数是：\n$S_0'(t) = b_0 + 2c_0 t + 3d_0 t^2$\n$S_0''(t) = 2c_0 + 6d_0 t$\n$S_1'(t) = b_1 + 2c_1 (t-1) + 3d_1 (t-1)^2$\n$S_1''(t) = 2c_1 + 6d_1 (t-1)$\n\n我们应用给定的条件来确定这8个系数：$a_0, b_0, c_0, d_0, a_1, b_1, c_1, d_1$。\n\n1.  **插值条件：**\n    - $S(0) = y_0 \\implies S_0(0) = 0 \\implies a_0 = 0$。\n    - $S(1) = y_1 \\implies S_0(1) = 1 \\implies a_0 + b_0 + c_0 + d_0 = 1$。由于 $a_0=0$，可得 $b_0 + c_0 + d_0 = 1$。\n    - $S(1) = y_1 \\implies S_1(1) = 1 \\implies a_1 = 1$。\n    - $S(2) = y_2 \\implies S_1(2) = 0 \\implies a_1 + b_1(2-1) + c_1(2-1)^2 + d_1(2-1)^3 = 0$。由于 $a_1=1$，可得 $1 + b_1 + c_1 + d_1 = 0$。\n\n2.  **$t=1$ 处的连续性条件：**\n    - $S_0'(1) = S_1'(1) \\implies b_0 + 2c_0 + 3d_0 = b_1$。\n    - $S_0''(1) = S_1''(1) \\implies 2c_0 + 6d_0 = 2c_1 \\implies c_0 + 3d_0 = c_1$。\n\n3.  **边界条件：**\n    - $S''(0) = 2 \\implies S_0''(0) = 2c_0 = 2 \\implies c_0 = 1$。\n    - $S'(2) = 0 \\implies S_1'(2) = 0 \\implies b_1 + 2c_1(2-1) + 3d_1(2-1)^2 = 0 \\implies b_1 + 2c_1 + 3d_1 = 0$。\n\n我们现在已经确定了三个系数：$a_0=0$，$a_1=1$ 和 $c_0=1$。我们将 $c_0=1$ 代入关于剩下五个系数（$b_0, d_0, b_1, c_1, d_1$）的方程组中：\n(A) $b_0 + 1 + d_0 = 1 \\implies b_0 + d_0 = 0$。\n(B) $1 + b_1 + c_1 + d_1 = 0$。\n(C) $b_0 + 2(1) + 3d_0 = b_1 \\implies b_0 + 2 + 3d_0 = b_1$。\n(D) $1 + 3d_0 = c_1$。\n(E) $b_1 + 2c_1 + 3d_1 = 0$。\n\n由方程(A)可得 $b_0 = -d_0$。\n将此代入(C)：$-d_0 + 2 + 3d_0 = b_1 \\implies b_1 = 2 + 2d_0$。\n现在我们得到了用 $d_0$ 表示 $b_1$ 和 $c_1$ 的表达式。我们将它们代入方程(B)和(E)，以创建一个关于 $d_0$ 和 $d_1$ 的方程组。\n\n将 $b_1$ 和 $c_1$ 代入(B)：\n$1 + (2 + 2d_0) + (1 + 3d_0) + d_1 = 0$\n$4 + 5d_0 + d_1 = 0 \\implies d_1 = -4 - 5d_0$。\n\n将 $b_1$ 和 $c_1$ 代入(E)：\n$(2 + 2d_0) + 2(1 + 3d_0) + 3d_1 = 0$\n$2 + 2d_0 + 2 + 6d_0 + 3d_1 = 0$\n$4 + 8d_0 + 3d_1 = 0$。\n\n现在，将 $d_1$ 的表达式代入最后一个方程：\n$4 + 8d_0 + 3(-4 - 5d_0) = 0$\n$4 + 8d_0 - 12 - 15d_0 = 0$\n$-8 - 7d_0 = 0$\n$7d_0 = -8 \\implies d_0 = -\\frac{8}{7}$。\n\n为了求出 $S(0.5)$ 的值，我们只需要多项式 $S_0(t)$ 的系数。我们有：\n- $a_0 = 0$\n- $c_0 = 1$\n- $d_0 = -\\frac{8}{7}$\n- $b_0 = -d_0 = -(-\\frac{8}{7}) = \\frac{8}{7}$。\n\n在区间 $t \\in [0, 1]$ 上的多项式为：\n$S_0(t) = a_0 + b_0 t + c_0 t^2 + d_0 t^3 = 0 + \\frac{8}{7}t + 1 \\cdot t^2 - \\frac{8}{7}t^3$。\n$S_0(t) = \\frac{8}{7}t + t^2 - \\frac{8}{7}t^3$。\n\n最后，我们计算 $S(0.5) = S_0(0.5)$。设 $t = 0.5 = \\frac{1}{2}$。\n$S(0.5) = \\frac{8}{7}\\left(\\frac{1}{2}\\right) + \\left(\\frac{1}{2}\\right)^2 - \\frac{8}{7}\\left(\\frac{1}{2}\\right)^3$\n$S(0.5) = \\frac{4}{7} + \\frac{1}{4} - \\frac{8}{7}\\left(\\frac{1}{8}\\right)$\n$S(0.5) = \\frac{4}{7} + \\frac{1}{4} - \\frac{1}{7}$\n$S(0.5) = \\left(\\frac{4}{7} - \\frac{1}{7}\\right) + \\frac{1}{4}$\n$S(0.5) = \\frac{3}{7} + \\frac{1}{4}$\n为了将这些分数相加，我们找到一个公分母，即 $28$。\n$S(0.5) = \\frac{3 \\cdot 4}{7 \\cdot 4} + \\frac{1 \\cdot 7}{4 \\cdot 7} = \\frac{12}{28} + \\frac{7}{28} = \\frac{19}{28}$。\n\n在 $t=0.5\\,\\text{s}$ 时的插值高度为 $\\frac{19}{28}\\,\\text{m}$。", "answer": "$$\\boxed{\\frac{19}{28}}$$", "id": "2429242"}, {"introduction": "本练习将你的关注点从数值计算转向符号推导，旨在探索样条的几何特性。通过推导自然三次样条在内部节点处存在拐点（即 $s''(x_1)=0$）的条件，你将发现其背后简洁的几何直觉。这个过程揭示了样条代数定义与其视觉形态之间的深刻联系。[@problem_id:2429320]", "problem": "设 $x_0<x_1<x_2$ 是严格递增的实数，且 $h_0:=x_1-x_0>0$，$h_1:=x_2-x_1>0$。考虑唯一的自然三次样条函数 $s(x)$，它对数据 $\\{(x_j,y_j)\\}_{j=0}^2$ 进行插值，即对 $j=0,1,2$ 满足 $s(x_j)=y_j$。该样条函数 $s(x)$ 在 $[x_0,x_2]$ 上二阶连续可微，在 $[x_0,x_1]$ 和 $[x_1,x_2]$ 上是分段三次的，并满足自然边界条件 $s''(x_0)=0$ 和 $s''(x_2)=0$。\n\n确定系数 $\\alpha=\\alpha(h_0,h_1)$，使得样条函数 $s(x)$ 在内部节点 $x_1$ 处有拐点的充要条件是\n$$\ny_1=\\alpha\\,y_0+\\bigl(1-\\alpha\\bigr)\\,y_2.\n$$\n请给出 $\\alpha$ 仅以 $h_0$ 和 $h_1$ 表示的闭式解析表达式。无需进行数值舍入。", "solution": "该问题陈述在科学上是成立的、适定的、客观且内容完整的。它提出了数值分析领域中的一个标准问题，具体涉及自然三次样条的性质。该问题是有效的，并且可以推导出解。\n\n设 $s(x)$ 是对数据点 $\\{(x_j, y_j)\\}_{j=0}^2$ 进行插值的自然三次样条，其中 $x_0 < x_1 < x_2$。区间定义为 $h_0 = x_1 - x_0 > 0$ 和 $h_1 = x_2 - x_1 > 0$。根据定义，三次样条是一个分段三次多项式，并且二阶连续可微。令 $M_j = s''(x_j)$（$j=0,1,2$）为样条在节点处的二阶导数，也称为矩。\n\n对于一般的三次样条，在内部节点 $x_1$ 处一阶导数的连续性 $s'(x_1^-) = s'(x_1^+)$，决定了各矩之间的一个线性关系。这个标准结果由以下方程给出：\n$$\n\\frac{h_0}{6} M_0 + \\frac{h_0+h_1}{3} M_1 + \\frac{h_1}{6} M_2 = \\frac{y_2-y_1}{h_1} - \\frac{y_1-y_0}{h_0}\n$$\n问题指明 $s(x)$ 是一个*自然*三次样条。这就施加了边界条件 $s''(x_0)=0$ 和 $s''(x_2)=0$。用矩来表示，这些条件就是 $M_0=0$ 和 $M_2=0$。\n\n将这些自然边界条件代入一般的矩方程，得到：\n$$\n\\frac{h_0}{6} (0) + \\frac{h_0+h_1}{3} M_1 + \\frac{h_1}{6} (0) = \\frac{y_2-y_1}{h_1} - \\frac{y_1-y_0}{h_0}\n$$\n这可以简化为：\n$$\n\\left(\\frac{h_0+h_1}{3}\\right) M_1 = \\frac{y_2-y_1}{h_1} - \\frac{y_1-y_0}{h_0}\n$$\n问题要求样条在内部节点 $x_1$ 处有一个拐点。对于一个二阶可微函数，拐点出现在其二阶导数为零的地方。因此，这个条件等价于 $s''(x_1) = 0$，即 $M_1=0$。\n\n问题陈述该拐点存在的“充要条件”是 $y_j$ 的值之间满足某个特定关系。由于 $h_0>0$ 且 $h_1>0$，系数 $\\frac{h_0+h_1}{3}$ 是严格为正且非零的。因此，条件 $M_1=0$ 等价于方程右侧为零：\n$$\nM_1 = 0 \\iff \\frac{y_2-y_1}{h_1} - \\frac{y_1-y_0}{h_0} = 0\n$$\n这就建立了“当且仅当”的逻辑。我们现在解这个关于 $y_1$ 的方程，以找到所需的关系。\n$$\n\\frac{y_2-y_1}{h_1} = \\frac{y_1-y_0}{h_0}\n$$\n这个条件有一个清晰的几何解释：连接 $(x_0, y_0)$ 和 $(x_1, y_1)$ 的线段的斜率必须等于连接 $(x_1, y_1)$ 和 $(x_2, y_2)$ 的线段的斜率。这意味着这三个数据点必须共线。\n\n为了求出系数 $\\alpha$，我们进行代数运算：\n$$\nh_0(y_2-y_1) = h_1(y_1-y_0)\n$$\n$$\nh_0 y_2 - h_0 y_1 = h_1 y_1 - h_1 y_0\n$$\n$$\nh_1 y_0 + h_0 y_2 = (h_0 + h_1) y_1\n$$\n解出 $y_1$，我们得到：\n$$\ny_1 = \\left(\\frac{h_1}{h_0+h_1}\\right) y_0 + \\left(\\frac{h_0}{h_0+h_1}\\right) y_2\n$$\n问题要求这种关系必须是 $y_1 = \\alpha y_0 + (1-\\alpha) y_2$ 的形式。通过比较两个表达式中 $y_0$ 的系数，我们确定 $\\alpha$：\n$$\n\\alpha = \\frac{h_1}{h_0+h_1}\n$$\n为了验证，我们检查 $y_2$ 的系数是否等于 $1-\\alpha$：\n$$\n1-\\alpha = 1 - \\frac{h_1}{h_0+h_1} = \\frac{h_0+h_1-h_1}{h_0+h_1} = \\frac{h_0}{h_0+h_1}\n$$\n这与我们推导出的表达式中 $y_2$ 的系数相匹配。因此，这个确定是正确的。系数 $\\alpha$ 仅是 $h_0$ 和 $h_1$ 的函数，符合题目要求。", "answer": "$$\n\\boxed{\\frac{h_1}{h_0+h_1}}\n$$", "id": "2429320"}, {"introduction": "这项综合性实践将理论与代码实现相结合，要求你为回归样条寻找最优的节点位置。你将使用截断幂基来构建模型，并通过编写程序系统性地搜索最佳节点以最小化拟合误差。这项练习让你直接体验模型选择的过程，这是计算科学和机器学习中的一项核心技能。[@problem_id:2429284]", "problem": "给定几个点集 $\\{(x_i,y_i)\\}_{i=1}^m$，其横坐标 $x_1 < x_2 < \\dots < x_m$ 严格递增。考虑 $C^2$ 连续的三次回归样条空间（即函数本身、其一阶导数和二阶导数处处连续）。一种表示在 $\\tau$ 处具有单个内部节点并保证 $C^2$ 连续性的三次样条的标准方法是使用截断幂基\n$$\ns(x;\\boldsymbol{\\theta},\\tau) \\;=\\; \\beta_0 + \\beta_1 x + \\beta_2 x^2 + \\beta_3 x^3 + \\gamma\\,(x-\\tau)_+^3,\n$$\n其中 $(x-\\tau)_+^3 = \\max\\{x-\\tau,0\\}^3$，且 $\\boldsymbol{\\theta} = (\\beta_0,\\beta_1,\\beta_2,\\beta_3,\\gamma)$ 是待通过最小二乘法从数据中确定的系数。当 $\\gamma=0$（即没有内部节点）时，可恢复为纯三次多项式 $p(x)=\\beta_0 + \\beta_1 x + \\beta_2 x^2 + \\beta_3 x^3$。数据拟合误差通过残差平方和 (RSS) 来衡量，\n$$\n\\mathrm{RSS}(\\tau) \\;=\\; \\min_{\\boldsymbol{\\theta}} \\sum_{i=1}^m \\left(s(x_i;\\boldsymbol{\\theta},\\tau)-y_i\\right)^2,\n$$\n无节点基线误差为\n$$\n\\mathrm{RSS}_0 \\;=\\; \\min_{\\beta_0,\\beta_1,\\beta_2,\\beta_3} \\sum_{i=1}^m \\left(\\beta_0 + \\beta_1 x_i + \\beta_2 x_i^2 + \\beta_3 x_i^3 - y_i\\right)^2.\n$$\n由于带一个内部节点的模型将无节点模型作为 $\\gamma=0$ 的特例包含在内，因此带节点的误差不会超过基线误差。\n\n您的任务是为每个给定的数据集，通过在一个离散的候选集上最小化 $\\mathrm{RSS}(\\tau)$，以编程方式确定能够最大程度减小总体近似误差的内部节点位置 $\\tau^\\star$。该候选集必须是内部横坐标的集合，即数据集中严格介于最小和最大 $x_i$ 值之间的所有 $x_i$。若有多个 $\\tau$ 在数值公差范围内达到最小值，则选择其中最小的 $\\tau$ 来打破平局。拟合后的样条必须处处 $C^2$ 连续，这一点由截断幂基保证。\n\n您必须直接使用截断幂基的设计矩阵来实现最小二乘拟合。除线性最小二乘法外，不要假定存在任何预先的样条拟合功能。您的程序必须：\n- 构建列为 $[1, x, x^2, x^3]$ 的基线三次多项式设计矩阵，并计算 $\\mathrm{RSS}_0$。\n- 对于每个候选 $\\tau$，构建列为 $[1, x, x^2, x^3, (x-\\tau)_+^3]$ 的增广设计矩阵，并计算 $\\mathrm{RSS}(\\tau)$。\n- 选择在公差范围内（对 RSS 差值使用固定的绝对公差 $\\varepsilon = 10^{-12}$）达到最小 $\\mathrm{RSS}(\\tau)$ 的最小候选 $\\tau$ 作为 $\\tau^\\star$。\n- 为每个测试用例输出 $\\tau^\\star$。\n\n基本原理和性质：\n- 三次多项式的一阶和二阶导数处处连续。\n- 截断幂函数 $(x-\\tau)_+^3$ 及其一阶和二阶导数在 $x\\le \\tau$ 时为零，在 $x>\\tau$ 时则分别为三次、二次和线性函数。因此，$s(x;\\boldsymbol{\\theta},\\tau)$ 在 $x=\\tau$ 处是 $C^2$ 连续的。\n- 到线性模型子空间上的普通最小二乘投影可以最小化残差平方和。\n\n测试套件：\n- 案例 1（理想情况，节点在中间）。使用 $m=11$ 和\n  $x = [\\,0.0,\\,0.1,\\,0.2,\\,0.3,\\,0.4,\\,0.5,\\,0.6,\\,0.7,\\,0.8,\\,0.9,\\,1.0\\,]$,\n  并定义\n  $y_i = x_i^3 + (x_i-0.5)_+^3$ for each $i$。这可以被真实节点在 $\\tau=0.5$ 的模型精确表示。\n- 案例 2（平局情况，数据是严格的三次函数）。使用 $m=11$ 和\n  $x = [\\,0.0,\\,0.1,\\,0.2,\\,0.3,\\,0.4,\\,0.5,\\,0.6,\\,0.7,\\,0.8,\\,0.9,\\,1.0\\,]$,\n  及\n  $y_i = x_i^3 - 2 x_i$。基线三次模型可以精确拟合，因此 $\\mathrm{RSS}_0=0$。所有候选节点都会产生相同的最小残差（在数值公差范围内）。您的平局打破规则应返回 $\\tau^\\star=0.1$（最小的内部横坐标）。\n- 案例 3（非均匀网格，偏心节点）。使用 $m=12$ 和\n  $x = [\\,0.0,\\,0.05,\\,0.1,\\,0.15,\\,0.2,\\,0.25,\\,0.3,\\,0.4,\\,0.55,\\,0.7,\\,0.85,\\,1.0\\,]$,\n  及\n  $y_i = 2 x_i^3 + 5 (x_i-0.25)_+^3$ 。这可以被真实节点在 $\\tau=0.25$ 的模型精确表示。\n\n本问题不涉及角度单位。本问题中没有物理单位。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。每个 $\\tau^\\star$ 都应格式化为精确到 $6$ 位小数的十进制数（例如，$[0.500000,0.100000,0.250000]$）。结果的顺序必须分别对应于案例1、案例2和案例3。", "solution": "所述问题是有效的。它在科学上基于回归样条和线性代数理论，问题定义明确，具有清晰的目标和约束，且其表述是客观的。所有必要的数据和定义都已提供。我现在将给出解决方案。\n\n目标是为一个 $C^2$ 连续的三次回归样条确定单个内部节点的最优位置 $\\tau^\\star$。最优性准则是最小化残差平方和 (RSS)。对 $\\tau^\\star$ 的搜索被限制在一个离散的候选位置集合内，即给定数据集 $\\{ (x_i, y_i) \\}_{i=1}^m$ 的内部横坐标。\n\n具有节点 $\\tau$ 的样条函数 $s(x)$ 的模型由截断幂基表示法给出：\n$$\ns(x; \\boldsymbol{\\theta}, \\tau) = \\beta_0 + \\beta_1 x + \\beta_2 x^2 + \\beta_3 x^3 + \\gamma (x - \\tau)_+^3\n$$\n其中 $(x - \\tau)_+^3 = \\max\\{0, x - \\tau\\}^3$。系数 $\\boldsymbol{\\theta} = (\\beta_0, \\beta_1, \\beta_2, \\beta_3, \\gamma)^T$ 通过为给定的节点 $\\tau$ 最小化 RSS 来确定。这是一个线性最小二乘问题。\n\n对于一组 $m$ 个数据点，我们可以将模型表示为矩阵向量形式 $\\mathbf{y} = \\mathbf{X}(\\tau)\\boldsymbol{\\theta} + \\boldsymbol{\\epsilon}$，其中 $\\mathbf{y} \\in \\mathbb{R}^m$ 是观测响应 $y_i$ 的向量，$\\mathbf{X}(\\tau) \\in \\mathbb{R}^{m \\times 5}$ 是设计矩阵，$\\boldsymbol{\\theta} \\in \\mathbb{R}^5$ 是系数向量，而 $\\boldsymbol{\\epsilon} \\in \\mathbb{R}^m$ 是误差向量。\n\n设计矩阵 $\\mathbf{X}(\\tau)$ 取决于所选的节点 $\\tau$。其第 $i$ 行对应于数据点 $x_i$：\n$$\n[\\mathbf{X}(\\tau)]_{i,:} = \\begin{bmatrix} 1 & x_i & x_i^2 & x_i^3 & (x_i - \\tau)_+^3 \\end{bmatrix}\n$$\n系数的普通最小二乘 (OLS) 估计 $\\hat{\\boldsymbol{\\theta}}$ 最小化了定义为 $\\mathrm{RSS}(\\tau) = \\|\\mathbf{y} - \\mathbf{X}(\\tau)\\boldsymbol{\\theta}\\|_2^2$ 的 RSS。该最小化问题的解通过求解正规方程组给出：\n$$\n(\\mathbf{X}(\\tau)^T \\mathbf{X}(\\tau)) \\hat{\\boldsymbol{\\theta}} = \\mathbf{X}(\\tau)^T \\mathbf{y}\n$$\n则对于给定的 $\\tau$，最小残差平方和为：\n$$\n\\mathrm{RSS}(\\tau) = \\|\\mathbf{y} - \\mathbf{X}(\\tau)\\hat{\\boldsymbol{\\theta}}\\|_2^2\n$$\n在数值计算上，更可取的方法是使用鲁棒的线性代数程序（例如基于 QR 分解的程序）来求解 $\\hat{\\boldsymbol{\\theta}}$ 并计算 RSS，而不是显式地构建和求逆 $\\mathbf{X}(\\tau)^T \\mathbf{X}(\\tau)$。\n\n找到最优节点 $\\tau^\\star$ 的算法流程如下：\n$1$. 对于一个大小为 $m$ 的给定数据集 $(\\mathbf{x}, \\mathbf{y})$，确定候选节点集 $\\mathcal{T} = \\{x_2, x_3, \\dots, x_{m-1}\\}$。\n$2$. 对于每个候选节点 $\\tau_k \\in \\mathcal{T}$：\n    a. 构建 $m \\times 5$ 的设计矩阵 $\\mathbf{X}(\\tau_k)$。\n    b. 求解线性最小二乘问题以找到 RSS，我们将其记为 $\\mathrm{RSS}(\\tau_k)$。该值可直接从标准的线性最小二乘数值求解器获得。\n$3$. 在计算完所有 $\\tau_k \\in \\mathcal{T}$ 的 $\\mathrm{RSS}(\\tau_k)$ 后，找到最小值：\n$$\n\\mathrm{RSS}_{\\min} = \\min_{\\tau_k \\in \\mathcal{T}} \\mathrm{RSS}(\\tau_k)\n$$\n$4$. 确定在指定的数值公差 $\\varepsilon = 10^{-12}$ 内达到此最小 RSS 的所有候选节点的集合：\n$$\n\\mathcal{T}_{\\min} = \\{ \\tau_k \\in \\mathcal{T} \\mid \\mathrm{RSS}(\\tau_k) \\le \\mathrm{RSS}_{\\min} + \\varepsilon \\}\n$$\n$5$. 通过从此集合中选择最小的节点来应用平局打破规则：\n$$\n\\tau^\\star = \\min(\\mathcal{T}_{\\min})\n$$\n此流程是确定性的，并保证对于任何给定的数据集都能得到唯一的解 $\\tau^\\star$。所提供的测试用例旨在验证此逻辑的正确实现，包括数据可被特定节点的模型完美表示的情况，以及需要使用平局打破规则的情况。随附的程序直接实现了该算法。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Finds the optimal single interior knot for a C^2 cubic regression spline\n    by minimizing the Residual Sum of Squares (RSS) over a discrete set of\n    candidate knots.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple of (x_data, y_data)\n    m1 = 11\n    x1 = np.linspace(0.0, 1.0, m1)\n    y1 = x1**3 + np.maximum(0, x1 - 0.5)**3\n    \n    m2 = 11\n    x2 = np.linspace(0.0, 1.0, m2)\n    y2 = x2**3 - 2 * x2\n\n    m3 = 12\n    x3 = np.array([0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.55, 0.7, 0.85, 1.0])\n    y3 = 2 * x3**3 + 5 * np.maximum(0, x3 - 0.25)**3\n    \n    test_cases = [\n        (x1, y1),\n        (x2, y2),\n        (x3, y3),\n    ]\n\n    results = []\n    \n    # Absolute tolerance for comparing RSS values\n    tolerance = 1e-12\n\n    for x, y in test_cases:\n        m = len(x)\n        # Candidate knots are the interior data points\n        candidate_taus = x[1:-1]\n        \n        rss_results = []\n\n        for tau in candidate_taus:\n            # Construct the design matrix X for the current knot tau\n            # Columns: 1, x, x^2, x^3, (x-tau)_+^3\n            X = np.zeros((m, 5))\n            X[:, 0] = 1.0\n            X[:, 1] = x\n            X[:, 2] = x**2\n            X[:, 3] = x**3\n            X[:, 4] = np.maximum(0, x - tau)**3\n            \n            # Solve the least squares problem.\n            # np.linalg.lstsq returns:\n            # 1. coefficients (solution)\n            # 2. residuals (sum of squared residuals), an array\n            # 3. rank of the matrix\n            # 4. singular values of the matrix\n            # We only need the sum of squared residuals.\n            # rcond=None is specified to use the machine-precision-based default.\n            _, rss_array, _, _ = np.linalg.lstsq(X, y, rcond=None)\n            \n            # rss_array is empty if m < 5. If it's not empty, it contains one value.\n            current_rss = rss_array[0] if rss_array.size > 0 else 0.0\n            \n            rss_results.append((current_rss, tau))\n\n        # Find the minimum RSS achieved\n        if not rss_results:\n            # This case should not happen with the given test data\n            # (m > 2, so interior points exist)\n            results.append(np.nan)\n            continue\n            \n        min_rss = min(res[0] for res in rss_results)\n        \n        # Identify all knots that achieve the minimum RSS within the tolerance\n        tied_taus = [tau for rss, tau in rss_results if rss <= min_rss + tolerance]\n        \n        # Apply the tie-breaking rule: choose the smallest tau\n        optimal_tau = min(tied_taus)\n        \n        results.append(optimal_tau)\n\n    # Format the final output according to the problem specification\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2429284"}]}