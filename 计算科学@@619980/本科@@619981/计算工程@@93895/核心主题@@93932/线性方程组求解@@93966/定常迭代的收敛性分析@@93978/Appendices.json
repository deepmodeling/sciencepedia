{"hands_on_practices": [{"introduction": "理解算法的最佳方式之一是亲手实现它。本练习将引导你编写雅可比 (Jacobi) 和高斯-赛德尔 (Gauss-Seidel) 迭代法的代码，并将其应用于具有不同性质（强对角占优与弱对角占优）的矩阵。通过这个过程，你将亲眼观察到矩阵的结构特性（及其对应的谱半径）如何直接影响收敛速度，从而将理论与实践紧密结合起来。[@problem_id:2406932]", "problem": "您必须编写一个完整的、可运行的程序，用于评估给定线性系统的线性定常迭代。考虑大小为 $n \\times n$ 的方形、实数、对称矩阵，以及右端向量 $\\mathbf{b} \\in \\mathbb{R}^n$。对于每个系统，从零向量 $\\mathbf{x}^{(0)} = \\mathbf{0}$ 开始迭代，直到残差的无穷范数 $\\|\\mathbf{r}^{(k)}\\|_{\\infty} = \\|\\mathbf{b} - A \\mathbf{x}^{(k)}\\|_{\\infty}$ 小于或等于容差 $\\tau$，或者达到最大迭代次数 $k_{\\max}$。使用 Jacobi 方法和 Gauss–Seidel 方法的标准定义。对于每个指定的矩阵，报告 Jacobi 和 Gauss–Seidel 方法满足残差容差所需的最小迭代次数，以及 Jacobi 迭代矩阵的谱半径。所有计算均为纯数值计算，不涉及物理单位。\n\n使用以下参数，它们构成了测试套件：\n\n- 维度 $n = 6$。\n- 右端向量 $\\mathbf{b} = [1,2,3,4,5,6]^T$。\n- 初始猜测值 $\\mathbf{x}^{(0)} = \\mathbf{0}$。\n- 残差容差 $\\tau = 10^{-8}$。\n- 最大迭代次数 $k_{\\max} = 20000$。\n\n定义三个矩阵 $A \\in \\mathbb{R}^{6 \\times 6}$ 如下：\n\n1) 强对角占优，具有恒定非对角元的稠密矩阵：\n- 参数 $\\alpha_{\\mathrm{s}} = 20.0$，$\\gamma = -1.0$。\n- 元素：\n  - 对于所有 $i \\in \\{1,\\dots,6\\}$，$A_{ii} = \\alpha_{\\mathrm{s}}$。\n  - 对于所有 $i \\neq j$，$A_{ij} = \\gamma$。\n\n2) 刚好对角占优，具有恒定非对角元的稠密矩阵：\n- 参数 $\\alpha_{\\mathrm{w}} = 5.1$，$\\gamma = -1.0$。\n- 元素：\n  - 对于所有 $i \\in \\{1,\\dots,6\\}$，$A_{ii} = \\alpha_{\\mathrm{w}}$。\n  - 对于所有 $i \\neq j$，$A_{ij} = \\gamma$。\n\n3) 边缘情况，对称三对角矩阵（一维离散拉普拉斯形式）：\n- 元素：\n  - 对于所有 $i \\in \\{1,\\dots,6\\}$，$A_{ii} = 2.0$。\n  - 对于所有 $i \\in \\{1,\\dots,5\\}$，$A_{i,i+1} = A_{i+1,i} = -1.0$。\n  - 所有其他非对角元素为 $0.0$。\n\n对于这三个矩阵中的每一个，执行以下操作：\n- 使用 Jacobi 方法，确定最小迭代次数 $k_{\\mathrm{J}}$，使得 $\\|\\mathbf{b} - A \\mathbf{x}^{(k_{\\mathrm{J}})}\\|_{\\infty} \\le \\tau$，如果在 $k_{\\max}$ 次迭代内未达到，则返回 $k_{\\max}$。\n- 使用 Gauss–Seidel 方法，确定最小迭代次数 $k_{\\mathrm{GS}}$，使得 $\\|\\mathbf{b} - A \\mathbf{x}^{(k_{\\mathrm{GS}})}\\|_{\\infty} \\le \\tau$，如果在 $k_{\\max}$ 次迭代内未达到，则返回 $k_{\\max}$。\n- 对于 Jacobi 方法，计算其迭代矩阵的谱半径 $\\rho_{\\mathrm{J}}$。报告 $\\rho_{\\mathrm{J}}$，四舍五入到六位小数。\n\n您的程序应生成单行输出，按以下顺序包含九个结果：\n- 对于强对角占优矩阵：$k_{\\mathrm{J}}$，$k_{\\mathrm{GS}}$，$\\rho_{\\mathrm{J}}$（四舍五入到六位小数）。\n- 对于刚好对角占优矩阵：$k_{\\mathrm{J}}$，$k_{\\mathrm{GS}}$，$\\rho_{\\mathrm{J}}$（四舍五入到六位小数）。\n- 对于三对角边缘情况矩阵：$k_{\\mathrm{J}}$，$k_{\\mathrm{GS}}$，$\\rho_{\\mathrm{J}}$（四舍五入到六位小数）。\n\n最终输出格式必须是单行，形式为方括号内以逗号分隔的列表，例如 $[\\text{result}_1,\\text{result}_2,\\dots,\\text{result}_9]$，其中 $k_{\\mathrm{J}}$ 和 $k_{\\mathrm{GS}}$ 是整数，每个 $\\rho_{\\mathrm{J}}$ 是一个四舍五入到六位小数的浮点数。", "solution": "该问题经过验证并被确定为有效。它在数值线性代数领域具有科学依据，问题提法适定 (well-posed)，所有必要参数均已定义，且其表述是客观的。该问题要求实现和评估两种基本的线性定常迭代方法——Jacobi 和 Gauss–Seidel——用于求解线性方程组 $A\\mathbf{x} = \\mathbf{b}$。\n\n这些方法基于将矩阵 $A$ 分解为其组成部分。一个方阵 $A$ 可以分解为 $A = D + L + U$，其中 $D$ 是包含 $A$ 的对角元素的对角矩阵，$L$ 是严格下三角矩阵，$U$ 是严格上三角矩阵。因此，系统 $A\\mathbf{x} = \\mathbf{b}$ 可以写成 $(D+L+U)\\mathbf{x} = \\mathbf{b}$。\n\n**Jacobi 方法**\n\nJacobi 方法将系统重新排列为 $D\\mathbf{x} = \\mathbf{b} - (L+U)\\mathbf{x}$。这导出了迭代格式：\n$$ D\\mathbf{x}^{(k+1)} = \\mathbf{b} - (L+U)\\mathbf{x}^{(k)} $$\n假设 $D$ 是可逆的（即没有零对角元素，对于本问题中的所有矩阵都成立），我们得到迭代公式：\n$$ \\mathbf{x}^{(k+1)} = D^{-1}(\\mathbf{b} - (L+U)\\mathbf{x}^{(k)}) $$\n这可以对向量 $\\mathbf{x}^{(k+1)}$ 的每个元素 $i$ 按分量进行计算：\n$$ x_i^{(k+1)} = \\frac{1}{A_{ii}} \\left( b_i - \\sum_{j=1, j \\neq i}^{n} A_{ij} x_j^{(k)} \\right) $$\nJacobi 方法的一个关键特点是，每个分量 $x_i^{(k+1)}$ 的计算仅依赖于前一次迭代的向量分量 $\\mathbf{x}^{(k)}$。这使得新向量分量的计算可以并行进行。\n\n**Gauss–Seidel 方法**\n\nGauss–Seidel 方法旨在通过使用最新的可用信息来提高收敛速度。它将系统重新排列为 $(D+L)\\mathbf{x} = \\mathbf{b} - U\\mathbf{x}$，导出了迭代格式：\n$$ (D+L)\\mathbf{x}^{(k+1)} = \\mathbf{b} - U\\mathbf{x}^{(k)} $$\n这产生了迭代公式：\n$$ \\mathbf{x}^{(k+1)} = (D+L)^{-1}(\\mathbf{b} - U\\mathbf{x}^{(k)}) $$\n在实践中，这通过前向替换来实现。其分量形式的公式为：\n$$ x_i^{(k+1)} = \\frac{1}{A_{ii}} \\left( b_i - \\sum_{j=1}^{i-1} A_{ij} x_j^{(k+1)} - \\sum_{j=i+1}^{n} A_{ij} x_j^{(k)} \\right) $$\n注意，在计算 $x_i^{(k+1)}$ 时，我们使用了当前迭代 $k+1$ 中新计算出的分量 $x_j^{(k+1)}$（对于 $j < i$），以及前一次迭代 $k$ 中的旧分量 $x_j^{(k)}$（对于 $j > i$）。这种顺序依赖性意味着各分量必须按顺序更新。\n\n**收敛性与谱半径**\n\n任何线性定常迭代都可以写成 $\\mathbf{x}^{(k+1)} = T \\mathbf{x}^{(k)} + \\mathbf{c}$ 的形式，其中 $T$ 是迭代矩阵。该方法对任意初始猜测值 $\\mathbf{x}^{(0)}$ 都保证收敛的充要条件是迭代矩阵的谱半径 $\\rho(T)$ 严格小于 $1$。谱半径定义为 $T$ 的特征值的最大绝对值，即 $\\rho(T) = \\max_i |\\lambda_i(T)|$。\n\n对于 Jacobi 方法，迭代矩阵 $T_J$ 由下式给出：\n$$ T_J = -D^{-1}(L+U) = I - D^{-1}A $$\n谱半径 $\\rho(T_J)$决定了 Jacobi 方法的收敛性。较小的谱半径意味着更快的渐进收敛速率。问题要求计算该值。\n\n**实现策略**\n\n解决方案将使用 Python 中的 `numpy` 库来实现。\n1.  **矩阵构造**: 三个指定的矩阵 $A_1$（强对角占优）、$A_2$（刚好对角占优）和 $A_3$（三对角）将被构造成 `numpy` 数组。问题参数 $n=6$、$\\mathbf{b}=[1,2,3,4,5,6]^T$、$\\mathbf{x}^{(0)}=\\mathbf{0}$、$\\tau=10^{-8}$ 和 $k_{\\max}=20000$ 将被定义。\n2.  **迭代求解器**: 将实现 Jacobi 和 Gauss–Seidel 方法的函数。每个函数将接收矩阵 $A$、向量 $\\mathbf{b}$、初始猜测值 $\\mathbf{x}^{(0)}$、容差 $\\tau$ 和最大迭代次数 $k_{\\max}$ 作为输入。循环将从 $k=1$ 到 $k_{\\max}$ 运行，在每一步更新解向量 $\\mathbf{x}$。每次更新后，将检查残差的无穷范数 $\\|\\mathbf{r}^{(k)}\\|_{\\infty} = \\|\\mathbf{b} - A\\mathbf{x}^{(k)}\\|_{\\infty}$ 是否小于等于容差 $\\tau$。如果条件满足，则返回当前迭代次数 $k$。如果循环完成而未收敛，则返回 $k_{\\max}$。也会对 $k=0$ 的情况进行初始检查。\n3.  **谱半径计算**: 一个函数将计算 Jacobi 迭代矩阵 $T_J = I - D^{-1}A$。将使用 `numpy.linalg.eigvals` 找到 $T_J$ 的特征值，谱半径将是它们绝对值的最大值。\n4.  **执行与输出**: 程序的主体部分将遍历三个测试用例（矩阵）。对于每个用例，它将调用求解器函数以获取迭代次数 $k_J$ 和 $k_{GS}$，并调用谱半径函数以获取 $\\rho_J$。结果将被收集并按问题陈述中指定的格式格式化为单个字符串。", "answer": "```python\nimport numpy as np\n\ndef jacobi(A: np.ndarray, b: np.ndarray, x0: np.ndarray, tol: float, k_max: int) -> int:\n    \"\"\"\n    Solves the system Ax=b using the Jacobi method.\n\n    Args:\n        A: The n x n coefficient matrix.\n        b: The n x 1 right-hand side vector.\n        x0: The initial guess vector.\n        tol: The residual tolerance.\n        k_max: The maximum number of iterations.\n\n    Returns:\n        The number of iterations required for convergence.\n    \"\"\"\n    n = A.shape[0]\n    x = x0.copy()\n\n    # Check for k=0\n    residual_norm = np.linalg.norm(b - A @ x, np.inf)\n    if residual_norm = tol:\n        return 0\n\n    D = np.diag(A)\n    R = A - np.diag(D)  # R = L + U\n\n    for k in range(1, k_max + 1):\n        x_new = (b - R @ x) / D\n        x = x_new\n        residual_norm = np.linalg.norm(b - A @ x, np.inf)\n        if residual_norm = tol:\n            return k\n    \n    return k_max\n\ndef gauss_seidel(A: np.ndarray, b: np.ndarray, x0: np.ndarray, tol: float, k_max: int) -> int:\n    \"\"\"\n    Solves the system Ax=b using the Gauss-Seidel method.\n\n    Args:\n        A: The n x n coefficient matrix.\n        b: The n x 1 right-hand side vector.\n        x0: The initial guess vector.\n        tol: The residual tolerance.\n        k_max: The maximum number of iterations.\n\n    Returns:\n        The number of iterations required for convergence.\n    \"\"\"\n    n = A.shape[0]\n    x = x0.copy()\n\n    # Check for k=0\n    residual_norm = np.linalg.norm(b - A @ x, np.inf)\n    if residual_norm = tol:\n        return 0\n\n    for k in range(1, k_max + 1):\n        x_old = x.copy()\n        for i in range(n):\n            sum1 = np.dot(A[i, :i], x[:i])\n            sum2 = np.dot(A[i, i + 1:], x_old[i + 1:])\n            x[i] = (b[i] - sum1 - sum2) / A[i, i]\n        \n        residual_norm = np.linalg.norm(b - A @ x, np.inf)\n        if residual_norm = tol:\n            return k\n            \n    return k_max\n\ndef get_spectral_radius_J(A: np.ndarray) -> float:\n    \"\"\"\n    Computes the spectral radius of the Jacobi iteration matrix.\n\n    Args:\n        A: The n x n coefficient matrix.\n\n    Returns:\n        The spectral radius of the Jacobi matrix T_J.\n    \"\"\"\n    D = np.diag(np.diag(A))\n    D_inv = np.linalg.inv(D)\n    T_J = np.eye(A.shape[0]) - D_inv @ A\n    eigenvalues = np.linalg.eigvals(T_J)\n    spectral_radius = np.max(np.abs(eigenvalues))\n    return spectral_radius\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    # Global parameters\n    n = 6\n    b = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0])\n    x0 = np.zeros(n)\n    tol = 1e-8\n    k_max = 20000\n\n    # Define the three matrices\n    test_cases = []\n\n    # Case 1: Strongly diagonally dominant\n    alpha_s = 20.0\n    gamma1 = -1.0\n    A1 = np.full((n, n), gamma1)\n    np.fill_diagonal(A1, alpha_s)\n    test_cases.append(A1)\n\n    # Case 2: Just-barely diagonally dominant\n    alpha_w = 5.1\n    gamma2 = -1.0\n    A2 = np.full((n, n), gamma2)\n    np.fill_diagonal(A2, alpha_w)\n    test_cases.append(A2)\n\n    # Case 3: Tridiagonal edge case\n    A3 = 2.0 * np.eye(n) - np.eye(n, k=1) - np.eye(n, k=-1)\n    test_cases.append(A3)\n\n    results = []\n    for A in test_cases:\n        k_J = jacobi(A, b, x0, tol, k_max)\n        k_GS = gauss_seidel(A, b, x0, tol, k_max)\n        rho_J = get_spectral_radius_J(A)\n\n        results.append(k_J)\n        results.append(k_GS)\n        results.append(round(rho_J, 6))\n\n    # Format and print the final output\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2406932"}, {"introduction": "在实现了基本算法之后，我们来深入分析一个在理论上表现完美的经典案例。本练习聚焦于一个在工程问题中常见的特殊矩阵（离散拉普拉斯算子），你的任务是解析地验证雅可比法和高斯-赛德尔法迭代矩阵谱半径之间的一个著名关系：$\\rho(T_{GS}) = [\\rho(T_J)]^2$。这个练习不仅能锻炼你的代数推导能力，也揭示了高斯-赛德尔法在何种情况下收敛速度会远超雅可比法的理论根源。[@problem_id:2381617]", "problem": "在计算工程的背景下，您需要处理一个线性系统的定常迭代问题。考虑一个 $3 \\times 3$ 的线性系统 $A x = b$，其中\n$$\nA \\;=\\; \\begin{pmatrix}\n2  -1  0 \\\\\n-1  2  -1 \\\\\n0  -1  2\n\\end{pmatrix}.\n$$\n使用为雅可比（Jacobi）和高斯-赛德尔（Gauss-Seidel）方法定义的标准分裂 $A = D - L - U$，其中 $D$ 是 $A$ 的对角部分，$L$ 是 $A$ 的严格下三角部分且其元素非负，$U$ 是 $A$ 的严格上三角部分且其元素非负。对应的迭代矩阵对于雅可比方法是 $G_{J} = D^{-1}(L + U)$，对于高斯-赛德尔方法是 $G_{GS} = (D - L)^{-1} U$。矩阵 $A$ 是对称正定（SPD）的。确定谱半径 $\\rho(G_{J})$ 和 $\\rho(G_{GS})$，验证 $\\rho(G_{GS}) = \\rho(G_{J})^{2}$，并给出 $\\rho(G_{J})$ 的精确值作为最终答案。最终答案需表示为单个精确表达式。无需四舍五入。", "solution": "对问题陈述进行验证。\n\n步骤 $1$：提取已知条件。\n- 线性系统 $A x = b$。\n- 矩阵 $A$ 如下所示：\n$$\nA \\;=\\; \\begin{pmatrix}\n2  -1  0 \\\\\n-1  2  -1 \\\\\n0  -1  2\n\\end{pmatrix}.\n$$\n- 雅可比和高斯-赛德尔方法的标准分裂定义为 $A = D - L - U$。\n- $D$ 是 $A$ 的对角部分。\n- $L$ 是 $A$ 的严格下三角部分，其元素非负。\n- $U$ 是 $A$ 的严格上三角部分，其元素非负。\n- 雅可比迭代矩阵：$G_{J} = D^{-1}(L + U)$。\n- 高斯-赛德尔迭代矩阵：$G_{GS} = (D - L)^{-1} U$。\n- 矩阵 $A$ 被说明为对称正定（SPD）。\n- 任务是确定谱半径 $\\rho(G_{J})$ 和 $\\rho(G_{GS})$，验证 $\\rho(G_{GS}) = \\rho(G_{J})^{2}$，并给出 $\\rho(G_{J})$ 的精确值。\n\n步骤 $2$：使用提取的已知条件进行验证。\n- **科学依据**：该问题是数值线性代数中的一个标准练习，具体涉及定常迭代法的收敛性分析。矩阵 $A$ 是一个著名的对称三对角矩阵的例子，它源于一维拉普拉斯算子的有限差分法离散化。该矩阵确实是对称正定的。迭代矩阵的定义是标准的。对于相容排序矩阵（$A$ 就是这种矩阵），关系式 $\\rho(G_{GS}) = \\rho(G_J)^2$ 是一个已知的定理。该问题是科学合理的。\n- **适定性**：问题定义清晰，提供了计算所需量全部必要的信息。目标明确，能导出一个唯一解。\n- **客观性**：问题使用精确的数学语言陈述，没有任何主观性或模糊性。\n\n步骤 $3$：结论与行动。\n该问题是有效的，因为它具有科学依据、适定性和客观性。将提供一个完整的解答。\n\n解题过程如下。首先，我们将矩阵 $A$ 分解为其分量 $D$、$L$ 和 $U$。然后，我们构造迭代矩阵 $G_J$ 和 $G_{GS}$。接着，我们求出每个迭代矩阵的特征值以确定其谱半径。最后，我们验证所需的关系。\n\n给定的矩阵是\n$$\nA \\;=\\; \\begin{pmatrix}\n2  -1  0 \\\\\n-1  2  -1 \\\\\n0  -1  2\n\\end{pmatrix}.\n$$\n根据所提供的定义，进行分裂 $A = D - L - U$。对角矩阵 $D$ 是\n$$\nD \\;=\\; \\begin{pmatrix}\n2  0  0 \\\\\n0  2  0 \\\\\n0  0  2\n\\end{pmatrix}.\n$$\n根据定义，矩阵 $L$ 和 $U$ 分别是 $A$ 的严格下三角和上三角部分，其元素经过取反变为非负值。\n$$\nL \\;=\\; \\begin{pmatrix}\n0  0  0 \\\\\n1  0  0 \\\\\n0  1  0\n\\end{pmatrix}, \\quad U \\;=\\; \\begin{pmatrix}\n0  1  0 \\\\\n0  0  1 \\\\\n0  0  0\n\\end{pmatrix}.\n$$\n我们可以验证这个分解：$D-L-U = \\begin{pmatrix} 2  -1  0 \\\\ -1  2  -1 \\\\ 0  -1  2 \\end{pmatrix} = A$。分解是正确的。\n\n现在，我们确定雅可比迭代矩阵，$G_J = D^{-1}(L+U)$。\n$D$ 的逆是 $D^{-1} = \\frac{1}{2}I = \\begin{pmatrix} 1/2  0  0 \\\\ 0  1/2  0 \\\\ 0  0  1/2 \\end{pmatrix}$。\n和 $L+U$ 是\n$$\nL+U \\;=\\; \\begin{pmatrix}\n0  1  0 \\\\\n1  0  1 \\\\\n0  1  0\n\\end{pmatrix}.\n$$\n因此，雅可比迭代矩阵是\n$$\nG_J \\;=\\; D^{-1}(L+U) \\;=\\; \\frac{1}{2} \\begin{pmatrix}\n0  1  0 \\\\\n1  0  1 \\\\\n0  1  0\n\\end{pmatrix} \\;=\\; \\begin{pmatrix}\n0  1/2  0 \\\\\n1/2  0  1/2 \\\\\n0  1/2  0\n\\end{pmatrix}.\n$$\n为了求出谱半径 $\\rho(G_J)$，我们必须通过求解特征方程 $\\det(G_J - \\lambda I) = 0$ 来找到 $G_J$ 的特征值 $\\lambda$。\n$$\n\\det\\begin{pmatrix}\n-\\lambda  1/2  0 \\\\\n1/2  -\\lambda  1/2 \\\\\n0  1/2  -\\lambda\n\\end{pmatrix} \\;=\\; 0.\n$$\n沿第一行展开行列式得：\n$$\n-\\lambda \\left( (-\\lambda)(-\\lambda) - (1/2)(1/2) \\right) - \\frac{1}{2} \\left( (1/2)(-\\lambda) - (1/2)(0) \\right) \\;=\\; 0\n$$\n$$\n-\\lambda (\\lambda^2 - 1/4) - \\frac{1}{2} (-\\frac{1}{2}\\lambda) \\;=\\; 0\n$$\n$$\n-\\lambda^3 + \\frac{1}{4}\\lambda + \\frac{1}{4}\\lambda \\;=\\; 0\n$$\n$$\n-\\lambda^3 + \\frac{1}{2}\\lambda \\;=\\; 0\n$$\n$$\n-\\lambda(\\lambda^2 - 1/2) \\;=\\; 0.\n$$\n$G_J$ 的特征值是 $\\lambda_1 = 0$, $\\lambda_2 = \\frac{1}{\\sqrt{2}}$ 和 $\\lambda_3 = -\\frac{1}{\\sqrt{2}}$。谱半径是特征值绝对值的最大值：\n$$\n\\rho(G_J) \\;=\\; \\max\\left\\{|0|, \\left|\\frac{1}{\\sqrt{2}}\\right|, \\left|-\\frac{1}{\\sqrt{2}}\\right|\\right\\} \\;=\\; \\frac{1}{\\sqrt{2}}.\n$$\n\n接下来，我们确定高斯-赛德尔迭代矩阵，$G_{GS} = (D-L)^{-1}U$。首先，我们计算矩阵 $D-L$ 及其逆矩阵。\n$$\nD-L \\;=\\; \\begin{pmatrix}\n2  0  0 \\\\\n-1  2  0 \\\\\n0  -1  2\n\\end{pmatrix}.\n$$\n逆矩阵 $(D-L)^{-1}$ 可通过求解 $(D-L)X = I$ 中的 $X$ 得到。由于 $D-L$ 是下三角矩阵，这可以通过向前代入法求解。\n$$\n(D-L)^{-1} \\;=\\; \\begin{pmatrix}\n1/2  0  0 \\\\\n1/4  1/2  0 \\\\\n1/8  1/4  1/2\n\\end{pmatrix}.\n$$\n现在，我们可以计算 $G_{GS}$：\n$$\nG_{GS} \\;=\\; (D-L)^{-1}U \\;=\\; \\begin{pmatrix}\n1/2  0  0 \\\\\n1/4  1/2  0 \\\\\n1/8  1/4  1/2\n\\end{pmatrix} \\begin{pmatrix}\n0  1  0 \\\\\n0  0  1 \\\\\n0  0  0\n\\end{pmatrix} \\;=\\; \\begin{pmatrix}\n0  1/2  0 \\\\\n0  1/4  1/2 \\\\\n0  1/8  1/4\n\\end{pmatrix}.\n$$\n为了求出谱半径 $\\rho(G_{GS})$，我们通过求解 $\\det(G_{GS} - \\mu I) = 0$ 来找到其特征值 $\\mu$。\n$$\n\\det\\begin{pmatrix}\n-\\mu  1/2  0 \\\\\n0  1/4 - \\mu  1/2 \\\\\n0  1/8  1/4 - \\mu\n\\end{pmatrix} \\;=\\; 0.\n$$\n沿第一列展开：\n$$\n-\\mu \\left( (1/4 - \\mu)(1/4 - \\mu) - (1/2)(1/8) \\right) \\;=\\; 0\n$$\n$$\n-\\mu \\left( (1/4 - \\mu)^2 - 1/16 \\right) \\;=\\; 0\n$$\n$$\n-\\mu \\left( 1/16 - 1/2\\mu + \\mu^2 - 1/16 \\right) \\;=\\; 0\n$$\n$$\n-\\mu (\\mu^2 - 1/2\\mu) \\;=\\; 0\n$$\n$$\n-\\mu^2 (\\mu - 1/2) \\;=\\; 0.\n$$\n$G_{GS}$ 的特征值是 $\\mu_1 = 0$（代数重数为 $2$）和 $\\mu_2 = 1/2$。谱半径是：\n$$\n\\rho(G_{GS}) \\;=\\; \\max\\left\\{|0|, |1/2|\\right\\} \\;=\\; \\frac{1}{2}.\n$$\n\n最后，我们必须验证 $\\rho(G_{GS}) = \\rho(G_{J})^{2}$。使用我们已经计算出的值：\n$$\n\\rho(G_J)^2 \\;=\\; \\left(\\frac{1}{\\sqrt{2}}\\right)^2 \\;=\\; \\frac{1}{2}.\n$$\n我们计算出 $\\rho(G_{GS}) = \\frac{1}{2}$。因此，该关系得到验证：\n$$\n\\rho(G_{GS}) \\;=\\; \\frac{1}{2} \\;=\\; \\rho(G_J)^2.\n$$\n问题要求 $\\rho(G_{J})$ 的精确值。该值已被确定为 $\\frac{1}{\\sqrt{2}}$。", "answer": "$$\\boxed{\\frac{1}{\\sqrt{2}}}$$", "id": "2381617"}, {"introduction": "尽管高斯-赛德尔法通常比雅可比法收敛得更快，但这并非一个普遍成立的定律。本练习将通过一个精心构造的反例来挑战这一直觉，在这个例子中，雅可比法是收敛的，而高斯-赛德尔法却是发散的。通过亲手计算并比较两种方法的谱半径，你将深刻理解迭代法收敛的唯一黄金准则——迭代矩阵的谱半径必须小于1——是如何超越任何经验法则的。[@problem_id:2381627]", "problem": "考虑一个线性方程组的定常迭代，该迭代由矩阵分裂定义。设系统为 $\\mathbf{A}\\mathbf{x}=\\mathbf{b}$，其中 $\\mathbf{A}\\in\\mathbb{R}^{3\\times 3}$ 是一个非奇异矩阵，标准分裂为 $\\mathbf{A}=\\mathbf{D}-\\mathbf{L}-\\mathbf{U}$，其中 $\\mathbf{D}$ 是 $\\mathbf{A}$ 的对角部分，$\\mathbf{L}$ 是其严格下三角部分，$\\mathbf{U}$ 是其严格上三角部分。雅可比迭代和高斯-赛德尔迭代分别由下式给出\n$$\n\\mathbf{x}^{(k+1)}=\\mathbf{D}^{-1}\\big(\\mathbf{L}+\\mathbf{U}\\big)\\mathbf{x}^{(k)}+\\mathbf{D}^{-1}\\mathbf{b}\n\\quad\\text{和}\\quad\n\\mathbf{x}^{(k+1)}=(\\mathbf{D}-\\mathbf{L})^{-1}\\mathbf{U}\\,\\mathbf{x}^{(k)}+(\\mathbf{D}-\\mathbf{L})^{-1}\\mathbf{b},\n$$\n它们的收敛性由迭代矩阵 $\\mathbf{T}_{J}=\\mathbf{D}^{-1}(\\mathbf{L}+\\mathbf{U})$ 和 $\\mathbf{T}_{GS}=(\\mathbf{D}-\\mathbf{L})^{-1}\\mathbf{U}$ 的谱半径决定。\n\n仅使用这些核心定义和谱半径收敛判据，完成以下任务：\n\n1. 设计一个具体的 $3\\times 3$ 系统（即，指定一个具有实数项和非奇异对角阵 $\\mathbf{D}$ 的特定矩阵 $\\mathbf{A}$），使得雅可比迭代收敛而高斯-赛德尔迭代发散。你的设计必须通过上述定义进行解析证明，而不是借助任何关于特殊矩阵类的现成定理。\n\n2. 通过推导 $\\mathbf{T}_{J}$ 的特征多项式并证明其谱半径严格小于 $1$ 来验证你的设计。\n\n3. 对于同一系统，推导 $\\mathbf{T}_{GS}$ 的非平凡部分的特征多项式，并证明其谱半径严格大于 $1$。\n\n为了使验证具体化，使用以下特定选择来实例化你的设计：\n$$\n\\mathbf{A}=\\begin{bmatrix}\n1  1  \\sqrt{2} \\\\\n1  1  1 \\\\\n-\\sqrt{2}  1  1\n\\end{bmatrix}\n$$\n\n以精确的闭式形式计算此 $\\mathbf{A}$ 的高斯-赛德尔迭代矩阵 $\\mathbf{T}_{GS}$ 的谱半径。你的最终答案必须是单一的精确解析表达式（无单位，不进行四舍五入）。", "solution": "给定的系统由以下矩阵定义：\n$$\n\\mathbf{A}=\\begin{bmatrix}\n1  1  \\sqrt{2} \\\\\n1  1  1 \\\\\n-\\sqrt{2}  1  1\n\\end{bmatrix}\n$$\n我们进行分裂 $\\mathbf{A}=\\mathbf{D}-\\mathbf{L}-\\mathbf{U}$，其中 $\\mathbf{D}$ 是对角矩阵，$\\mathbf{L}$ 是严格下三角矩阵，$\\mathbf{U}$ 是严格上三角矩阵。根据定义，$\\mathbf{L}$ 和 $\\mathbf{U}$ 分别是 $\\mathbf{A}$ 的严格下三角部分和严格上三角部分的负矩阵。\n$$\n\\mathbf{D} = \\begin{bmatrix}\n1  0  0 \\\\\n0  1  0 \\\\\n0  0  1\n\\end{bmatrix} = \\mathbf{I}\n$$\n$$\n\\mathbf{L} = -\\begin{bmatrix}\n0  0  0 \\\\\n1  0  0 \\\\\n-\\sqrt{2}  1  0\n\\end{bmatrix} = \\begin{bmatrix}\n0  0  0 \\\\\n-1  0  0 \\\\\n\\sqrt{2}  -1  0\n\\end{bmatrix}\n$$\n$$\n\\mathbf{U} = -\\begin{bmatrix}\n0  1  \\sqrt{2} \\\\\n0  0  1 \\\\\n0  0  0\n\\end{bmatrix} = \\begin{bmatrix}\n0  -1  -\\sqrt{2} \\\\\n0  0  -1 \\\\\n0  0  0\n\\end{bmatrix}\n$$\n使用这些矩阵，$\\mathbf{D}-\\mathbf{L}-\\mathbf{U}$ 能正确地重构出 $\\mathbf{A}$。\n\n首先，我们分析雅可比迭代。迭代矩阵是 $\\mathbf{T}_{J} = \\mathbf{D}^{-1}(\\mathbf{L}+\\mathbf{U})$。由于 $\\mathbf{D}=\\mathbf{I}$，这简化为 $\\mathbf{T}_{J} = \\mathbf{L}+\\mathbf{U}$：\n$$\n\\mathbf{T}_{J} = \\begin{bmatrix}\n0  -1  -\\sqrt{2} \\\\\n-1  0  -1 \\\\\n\\sqrt{2}  -1  0\n\\end{bmatrix}\n$$\n为求谱半径，我们推导特征多项式 $p(\\lambda) = \\det(\\mathbf{T}_{J} - \\lambda\\mathbf{I})$：\n$$\np(\\lambda) = \\det\\begin{pmatrix}\n-\\lambda  -1  -\\sqrt{2} \\\\\n-1  -\\lambda  -1 \\\\\n\\sqrt{2}  -1  -\\lambda\n\\end{pmatrix}\n$$\n展开行列式，我们得到：\n$$\np(\\lambda) = (-\\lambda)(\\lambda^2 - 1) - (-1)(\\lambda + \\sqrt{2}) + (-\\sqrt{2})(1 + \\lambda\\sqrt{2})\n$$\n$$\np(\\lambda) = -\\lambda^3 + \\lambda + \\lambda + \\sqrt{2} - \\sqrt{2} - 2\\lambda = -\\lambda^3\n$$\n特征方程为 $-\\lambda^3 = 0$，其特征值为 $\\lambda_1 = \\lambda_2 = \\lambda_3 = 0$。谱半径为 $\\rho(\\mathbf{T}_J) = \\max_i|\\lambda_i| = |0| = 0$。由于 $\\rho(\\mathbf{T}_J) = 0  1$，该系统的雅可比迭代是收敛的。\n\n接下来，我们分析高斯-赛德尔迭代。迭代矩阵是 $\\mathbf{T}_{GS} = (\\mathbf{D}-\\mathbf{L})^{-1}\\mathbf{U}$。首先，我们计算 $\\mathbf{D}-\\mathbf{L}$ 及其逆矩阵：\n$$\n\\mathbf{D}-\\mathbf{L} = \\begin{bmatrix} 1  0  0 \\\\ 1  1  0 \\\\ -\\sqrt{2}  1  1 \\end{bmatrix}\n$$\n其逆矩阵为：\n$$\n(\\mathbf{D}-\\mathbf{L})^{-1} = \\begin{bmatrix} 1  0  0 \\\\ -1  1  0 \\\\ 1+\\sqrt{2}  -1  1 \\end{bmatrix}\n$$\n现在，我们计算 $\\mathbf{T}_{GS} = (\\mathbf{D}-\\mathbf{L})^{-1}\\mathbf{U}$：\n$$\n\\mathbf{T}_{GS} = \\begin{bmatrix} 1  0  0 \\\\ -1  1  0 \\\\ 1+\\sqrt{2}  -1  1 \\end{bmatrix} \\begin{bmatrix} 0  -1  -\\sqrt{2} \\\\ 0  0  -1 \\\\ 0  0  0 \\end{bmatrix} = \\begin{bmatrix} 0  -1  -\\sqrt{2} \\\\ 0  1  \\sqrt{2}-1 \\\\ 0  -(1+\\sqrt{2})  -(1+\\sqrt{2})\\sqrt{2}+1 \\end{bmatrix}\n$$\n$$\n\\mathbf{T}_{GS} = \\begin{bmatrix} 0  -1  -\\sqrt{2} \\\\ 0  1  \\sqrt{2}-1 \\\\ 0  -(1+\\sqrt{2})  -1-\\sqrt{2} \\end{bmatrix}\n$$\n特征方程是 $\\det(\\mathbf{T}_{GS} - \\lambda\\mathbf{I}) = 0$。\n$$\n\\det\\begin{pmatrix} -\\lambda  -1  -\\sqrt{2} \\\\ 0  1-\\lambda  \\sqrt{2}-1 \\\\ 0  -(1+\\sqrt{2})  -1-\\sqrt{2}-\\lambda \\end{pmatrix} = -\\lambda \\det\\begin{pmatrix} 1-\\lambda  \\sqrt{2}-1 \\\\ -(1+\\sqrt{2})  -1-\\sqrt{2}-\\lambda \\end{pmatrix} = 0\n$$\n一个特征值是 $\\lambda_1 = 0$。另外两个特征值来自非平凡的 $2 \\times 2$ 子矩阵：\n$$\n\\mathbf{M} = \\begin{pmatrix} 1  \\sqrt{2}-1 \\\\ -(1+\\sqrt{2})  -1-\\sqrt{2} \\end{pmatrix}\n$$\n$\\mathbf{M}$ 的特征多项式为 $\\lambda^2 - \\text{Tr}(\\mathbf{M})\\lambda + \\det(\\mathbf{M}) = 0$。\n$\\text{Tr}(\\mathbf{M}) = 1 + (-1-\\sqrt{2}) = -\\sqrt{2}$。\n$\\det(\\mathbf{M}) = (1)(-1-\\sqrt{2}) - (\\sqrt{2}-1)(-(1+\\sqrt{2})) = -1-\\sqrt{2} + (\\sqrt{2}-1)(\\sqrt{2}+1) = -1-\\sqrt{2} + (2-1) = -\\sqrt{2}$。\n所以非平凡部分的特征方程为：\n$$\n\\lambda^2 + \\sqrt{2}\\lambda - \\sqrt{2} = 0\n$$\n根据二次求根公式，其根为：\n$$\n\\lambda = \\frac{-\\sqrt{2} \\pm \\sqrt{(\\sqrt{2})^2 - 4(1)(-\\sqrt{2})}}{2} = \\frac{-\\sqrt{2} \\pm \\sqrt{2 + 4\\sqrt{2}}}{2}\n$$\n$\\mathbf{T}_{GS}$ 的三个特征值是 $\\lambda_1 = 0$，$\\lambda_2 = \\frac{-\\sqrt{2} + \\sqrt{2 + 4\\sqrt{2}}}{2}$，和 $\\lambda_3 = \\frac{-\\sqrt{2} - \\sqrt{2 + 4\\sqrt{2}}}{2}$。\n谱半径是它们绝对值的最大值。\n$|\\lambda_1|=0$。\n$|\\lambda_2| = \\frac{\\sqrt{2 + 4\\sqrt{2}} - \\sqrt{2}}{2}$ 因为 $\\sqrt{2 + 4\\sqrt{2}}  \\sqrt{2}$。\n$|\\lambda_3| = \\frac{\\sqrt{2} + \\sqrt{2 + 4\\sqrt{2}}}{2}$。\n显然，$|\\lambda_3|  |\\lambda_2|$，所以谱半径为 $\\rho(\\mathbf{T}_{GS}) = |\\lambda_3|$。\n我们必须验证 $\\rho(\\mathbf{T}_{GS})  1$ 是否成立。\n$$\n\\frac{\\sqrt{2} + \\sqrt{2 + 4\\sqrt{2}}}{2}  1 \\iff \\sqrt{2} + \\sqrt{2 + 4\\sqrt{2}}  2 \\iff \\sqrt{2 + 4\\sqrt{2}}  2 - \\sqrt{2}\n$$\n由于 $2-\\sqrt{2}  0$，我们可以对两边平方：\n$$\n2 + 4\\sqrt{2}  (2-\\sqrt{2})^2 = 4 - 4\\sqrt{2} + 2 = 6 - 4\\sqrt{2}\n$$\n$$\n8\\sqrt{2}  4 \\iff 2\\sqrt{2}  1 \\iff \\sqrt{8}  1\n$$\n此式成立。因此，$\\rho(\\mathbf{T}_{GS})  1$，高斯-赛德尔迭代发散。\n所提供的特定矩阵确实是一个雅可比迭代收敛而高斯-赛德尔迭代发散的实例。高斯-赛德尔迭代矩阵的谱半径已用精确形式计算得出。", "answer": "$$\\boxed{\\frac{\\sqrt{2} + \\sqrt{2 + 4\\sqrt{2}}}{2}}$$", "id": "2381627"}]}