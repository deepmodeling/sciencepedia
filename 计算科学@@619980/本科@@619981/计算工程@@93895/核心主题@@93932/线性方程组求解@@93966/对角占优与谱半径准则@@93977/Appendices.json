{"hands_on_practices": [{"introduction": "理论是指导，实践是检验。对于迭代法，不等式 $\\rho(B_J) \\le \\|B_J\\|_{\\infty}$ 提供了一个无需计算复杂特征值就能预判收敛性的快捷方式。但是，这个上界有多精确呢？本练习将通过一系列精心设计的数值实验，让你亲手揭示这个理论界限在不同矩阵结构下的表现，从精确吻合到严重高估，从而深化你对谱半径与矩阵范数关系的理解。[@problem_id:2384241]", "problem": "考虑使用雅可比方法求解一个线性系统。设 $A \\in \\mathbb{R}^{n \\times n}$ 是一个非奇异矩阵，其对角部分为 $D$，严格下三角部分为 $L$，严格上三角部分为 $U$，因此 $A = D - L - U$。雅可比迭代的形式为 $x^{(k+1)} = D^{-1}(b + (L + U)x^{(k)})$，其迭代矩阵为 $B_J = D^{-1}(L + U)$。对于一个给定的矩阵 $B$，谱半径 $\\rho(B)$ 定义为其特征值模的最大值。导出矩阵范数的一个核心事实是，对于任何导出范数，都有 $\\rho(B) \\le \\lVert B \\rVert$，特别是 $\\rho(B_J) \\le \\lVert B_J \\rVert_\\infty$，其中 $\\lVert \\cdot \\rVert_\\infty$ 是导出的无穷范数（最大绝对行和）。\n\n设计一个数值实验，以比较在不同矩阵 $A$ 上，基于无穷范数的 $\\rho(B_J)$ 上界的紧致性。所有计算必须纯粹在 $\\mathbb{R}$ 中进行（不涉及物理单位）。从雅可比迭代矩阵和导出无穷范数的基本定义出发。对于每个测试用例，您必须：\n- 仅使用给定的参数构造指定的矩阵 $A$。\n- 通过 $B_J(i,j) = -a_{ij}/a_{ii}$ (当 $i \\ne j$) 和 $B_J(i,i) = 0$ 直接从 $A$ 构建 $B_J$。\n- 计算上界 $\\lVert B_J \\rVert_\\infty$（$B_J$ 的最大绝对行和）。\n- 计算谱半径 $\\rho(B_J)$，即 $B_J$ 特征值模的最大值。\n- 以浮点数形式报告非负间隙 $\\lVert B_J \\rVert_\\infty - \\rho(B_J)$，该值量化了上界的宽松程度（零表示紧致）。\n- 同时报告一个布尔值，指示该上界是否为数值紧致，此处定义为 $\\lVert B_J \\rVert_\\infty - \\rho(B_J) \\le 10^{-10}$。\n\n您必须实现以下矩阵 $A$ 的测试套件（每个矩阵完全由以下参数确定），这些矩阵旨在探究紧致性的不同行为：\n\n- 案例 1（通过恒定非对角结构实现精确或近似紧致）：$A \\in \\mathbb{R}^{n \\times n}$，其中对于所有 $i$，$a_{ii} = 1$；对于所有 $i \\ne j$，$a_{ij} = -s/(n-1)$。参数：$n = 5$，$s = 0.9$。\n- 案例 2（对于小型三对角托普利茨矩阵是宽松的）：$A = d I - c T$，其中 $T$ 是在第一副对角线和第一超对角线上为 $1$、其他位置为 $0$ 的三对角矩阵。参数：$n = 3$，$d = 1.0$，$c = 0.45$。\n- 案例 3（通过幂零的 $B_J$ 导致极其宽松）：$A = I - U$，其中 $U$ 在第一超对角线上的值为常数 $t$，其他位置为零（因此 $U$ 是严格上三角矩阵）。参数：$n = 6$，$t = 0.9$。\n- 案例 4（对于大型三对角托普利茨矩阵是近似紧致的）：$A = d I - c T$，其中 $T$ 的定义与案例 2 相同。参数：$n = 50$，$d = 1.0$，$c = 0.45$。\n\n您的程序必须：\n- 根据描述，完全从其参数构建每个 $A$，不使用任何随机性。\n- 对于每个案例，计算：\n  1) 上界 $\\lVert B_J \\rVert_\\infty$，\n  2) 谱半径 $\\rho(B_J)$，\n  3) 间隙 $\\lVert B_J \\rVert_\\infty - \\rho(B_J)$，\n  4) 如上定义的布尔紧致性指示器。\n- 在打印前，将所有浮点输出四舍五入到六位小数。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果。列表中的每个元素对应一个测试用例，并且本身是一个包含上述指定顺序的四个条目的列表。例如，一个包含两个案例的有效输出看起来像 $[[b_1,\\;r_1,\\;g_1,\\;t_1],[b_2,\\;r_2,\\;g_2,\\;t_2]]$，其中 $b_k$，$r_k$ 和 $g_k$ 是浮点数（四舍五入到六位小数），$t_k$ 是布尔值。", "solution": "所述问题是有效的。它基于数值线性代数的既定原则，特别是雅可比迭代法的收敛性分析。所有定义，包括雅可比迭代矩阵 $B_J$、谱半径 $\\rho(B)$ 和导出无穷范数 $\\lVert \\cdot \\rVert_\\infty$，都是标准的。该问题是自包含的，为每个测试用例提供了所有必要的参数，并提出了一个明确定义的计算任务。不存在科学上的不一致、模糊或矛盾之处。\n\n目标是进行一项数值实验，以评估上界 $\\rho(B_J) \\le \\lVert B_J \\rVert_\\infty$ 的紧致性。对于每个指定的矩阵 $A$，我们必须计算迭代矩阵 $B_J$、其谱半径 $\\rho(B_J)$、无穷范数 $\\lVert B_J \\rVert_\\infty$、间隙 $\\lVert B_J \\rVert_\\infty - \\rho(B_J)$ 以及数值紧致性的布尔指示器。\n\n让我们为每个测试用例进行正式的、分步的推导和实施计划。\n\n雅可比迭代矩阵 $B_J$ 定义为 $B_J = D^{-1}(L+U)$，其中 $A = D-L-U$。这里，$D$ 是 $A$ 的对角部分，$-L$ 是严格下三角部分，$-U$ 是严格上三角部分。一个等效且计算上更方便的 $B_J$ 公式是 $B_J = I - D^{-1}A$。$B_J$ 的分量由 $(B_J)_{ii} = 0$ (对所有 $i$) 和 $(B_J)_{ij} = -a_{ij}/a_{ii}$ (当 $i \\ne j$) 给出。这要求对所有 $i$ 都有 $a_{ii} \\ne 0$，这个条件在所有指定的测试用例中都成立。\n\n需要计算的量是：\n$1$。无穷范数, $\\lVert B_J \\rVert_\\infty = \\max_{1 \\le i \\le n} \\sum_{j=1}^{n} |(B_J)_{ij}|$。\n$2$。谱半径, $\\rho(B_J) = \\max \\{|\\lambda| : \\lambda \\text{ 是 } B_J \\text{ 的一个特征值}\\}$。\n$3$。间隙, $g = \\lVert B_J \\rVert_\\infty - \\rho(B_J)$。\n$4$。紧致性布尔值, $t = (g \\le 10^{-10})$。\n\n我们现在将分析每个案例，构造所需的矩阵并计算期望的值。\n\n**案例 1：恒定非对角结构**\n- 参数：$n=5$，$s=0.9$。\n- 矩阵 $A \\in \\mathbb{R}^{5 \\times 5}$ 定义为 $a_{ii} = 1$ 和 $a_{ij} = -s/(n-1) = -0.9/4 = -0.225$ (当 $i \\ne j$)。\n- 雅可比矩阵 $B_J$ 的元素为 $(B_J)_{ij} = -a_{ij}/a_{ii} = -(-0.225)/1 = 0.225$ (当 $i \\ne j$) 和 $(B_J)_{ii} = 0$。\n- 无穷范数是最大绝对行和。对于任意行 $i$，$\\sum_{j=1}^{n} |(B_J)_{ij}| = (n-1) \\times 0.225 = 4 \\times 0.225 = 0.9$。因此, $\\lVert B_J \\rVert_\\infty = 0.9$。\n- 矩阵 $B_J$ 可以写成 $k(J-I)$，其中 $k=0.225$，$J$ 是全一矩阵，$I$ 是单位矩阵。$J$ 的特征值为 $\\{n, 0, \\dots, 0\\}$。$J-I$ 的特征值为 $\\{n-1, -1, \\dots, -1\\}$。当 $n=5$ 时，它们是 $\\{4, -1, -1, -1, -1\\}$。\n- $B_J$ 的特征值是这些值的 $k$ 倍：$\\{0.225 \\times 4, 0.225 \\times (-1), \\dots\\} = \\{0.9, -0.225, -0.225, -0.225, -0.225\\}$。\n- 谱半径为 $\\rho(B_J) = \\max(|0.9|, |-0.225|) = 0.9$。\n- 间隙为 $\\lVert B_J \\rVert_\\infty - \\rho(B_J) = 0.9 - 0.9 = 0$。该上界是精确紧致的。\n\n**案例 2：小型三对角托普利茨矩阵**\n- 参数：$n=3$，$d=1.0$，$c=0.45$。\n- 矩阵 $A = dI - cT$，其中 $T$ 在第一副对角线和超对角线上元素为 1。\n$$A = \\begin{pmatrix} 1.0 & -0.45 & 0 \\\\ -0.45 & 1.0 & -0.45 \\\\ 0 & -0.45 & 1.0 \\end{pmatrix}$$\n- 由于 $a_{ii} = d = 1.0$，雅可比矩阵为 $B_J = cT$。\n$$B_J = \\begin{pmatrix} 0 & 0.45 & 0 \\\\ 0.45 & 0 & 0.45 \\\\ 0 & 0.45 & 0 \\end{pmatrix}$$\n- 绝对行和为 $\\{0.45, 0.9, 0.45\\}$。最大值为 $\\lVert B_J \\rVert_\\infty = 0.9$。\n- 这样一个尺寸为 $n \\times n$ 的三对角矩阵 $T$ 的特征值为 $\\lambda_k = 2\\cos(\\frac{k\\pi}{n+1})$，其中 $k=1, \\dots, n$。\n- 对于 $n=3$， $T$ 的特征值为 $2\\cos(\\pi/4) = \\sqrt{2}$，$2\\cos(2\\pi/4) = 0$ 和 $2\\cos(3\\pi/4) = -\\sqrt{2}$。\n- $B_J = cT$ 的特征值为 $\\{0.45\\sqrt{2}, 0, -0.45\\sqrt{2}\\}$。\n- 谱半径为 $\\rho(B_J) = |0.45\\sqrt{2}| \\approx 0.636396$。\n- 间隙为 $0.9 - 0.636396... \\approx 0.263604$。该上界不紧致。\n\n**案例 3：幂零雅可比矩阵**\n- 参数：$n=6$，$t=0.9$。\n- 矩阵 $A = I - U$，其中 $U$ 是在第一超对角线上为 $t=0.9$、其他位置为零的矩阵。\n$$A = \\begin{pmatrix} 1 & -0.9 & 0 & 0 & 0 & 0 \\\\ 0 & 1 & -0.9 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & -0.9 & 0 & 0 \\\\ 0 & 0 & 0 & 1 & -0.9 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & -0.9 \\\\ 0 & 0 & 0 & 0 & 0 & 1 \\end{pmatrix}$$\n- 对角线元素为 $a_{ii}=1$。雅可比矩阵为 $B_J = I - D^{-1}A = I - I^{-1}(I - U) = U$。\n- 因此，$B_J$ 在其第一超对角线上的值为 0.9，其他位置为零。\n- 绝对行和为 $\\{0.9, 0.9, 0.9, 0.9, 0.9, 0\\}$。最大值为 $\\lVert B_J \\rVert_\\infty = 0.9$。\n- $B_J$ 是一个严格上三角矩阵。其特征值为其对角线元素，均为 0。\n- 谱半径为 $\\rho(B_J) = 0$。\n- 间隙为 $0.9 - 0 = 0.9$。该上界极其宽松。\n\n**案例 4：大型三对角托普利茨矩阵**\n- 参数：$n=50$，$d=1.0$，$c=0.45$。\n- 设置与案例 2 相同，但 $n=50$。$A = dI - cT$ 且 $B_J = cT$。\n- 绝对行和为 $\\{c, 2c, \\dots, 2c, c\\}$。当 $c=0.45$ 时，和为 $\\{0.45, 0.9, \\dots, 0.9, 0.45\\}$。最大值为 $\\lVert B_J \\rVert_\\infty = 2c = 0.9$。\n- $B_J$ 的特征值为 $\\lambda_k = 2c\\cos(\\frac{k\\pi}{n+1})$，其中 $k=1, \\dots, n$。\n- 我们有 $n=50$，所以特征值为 $0.9\\cos(\\frac{k\\pi}{51})$，其中 $k=1, \\dots, 50$。\n- 谱半径为 $\\rho(B_J) = \\max_{k} |0.9\\cos(\\frac{k\\pi}{51})| = 0.9\\cos(\\frac{\\pi}{51})$。\n- 当 $n$ 变大时，$\\frac{\\pi}{n+1} \\to 0$ 且 $\\cos(\\frac{\\pi}{n+1}) \\to 1$。因此，$\\rho(B_J)$ 趋近于 $\\lVert B_J \\rVert_\\infty$。\n- $\\rho(B_J) = 0.9 \\times \\cos(\\pi/51) \\approx 0.9 \\times 0.998108 \\approx 0.898297$。\n- 间隙为 $0.9 - 0.898297... \\approx 0.001703$。该上界近似紧致，但不满足 $g \\le 10^{-10}$ 的严格标准。\n\n实施将针对每个案例遵循这些步骤，使用数值库来构造矩阵和计算特征值。最终结果将按指定格式进行格式化。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Performs a numerical experiment to compare the tightness of the\n    infinity-norm-based upper bound on the spectral radius of the Jacobi\n    iteration matrix for several test cases.\n    \"\"\"\n\n    test_cases_params = [\n        # Case 1: n=5, s=0.9\n        {'type': 'constant_off_diagonal', 'n': 5, 's': 0.9},\n        # Case 2: n=3, d=1.0, c=0.45\n        {'type': 'tridiagonal', 'n': 3, 'd': 1.0, 'c': 0.45},\n        # Case 3: n=6, t=0.9\n        {'type': 'nilpotent_b_j', 'n': 6, 't': 0.9},\n        # Case 4: n=50, d=1.0, c=0.45\n        {'type': 'tridiagonal', 'n': 50, 'd': 1.0, 'c': 0.45},\n    ]\n\n    all_results = []\n\n    for params in test_cases_params:\n        # Construct matrix A based on the case type and parameters\n        n = params['n']\n        if params['type'] == 'constant_off_diagonal':\n            s = params['s']\n            A = np.full((n, n), -s / (n - 1))\n            np.fill_diagonal(A, 1.0)\n        elif params['type'] == 'tridiagonal':\n            d = params['d']\n            c = params['c']\n            T = np.diag(np.ones(n - 1), k=1) + np.diag(np.ones(n - 1), k=-1)\n            A = d * np.eye(n) - c * T\n        elif params['type'] == 'nilpotent_b_j':\n            t = params['t']\n            U = np.diag(np.full(n - 1, t), k=1)\n            A = np.eye(n) - U\n        else:\n            raise ValueError(\"Unknown test case type\")\n\n        # Construct the Jacobi iteration matrix B_J\n        # B_J = I - D^{-1}A\n        diag_A = np.diag(A)\n        if np.any(diag_A == 0):\n            # This case should not be reached with the given problems.\n            raise ValueError(\"Matrix A has zero on the diagonal, D is not invertible.\")\n        \n        D_inv = np.diag(1.0 / diag_A)\n        B_J = np.eye(n) - D_inv @ A\n\n        # 1. Compute the infinity norm of B_J (the bound)\n        bound = np.linalg.norm(B_J, ord=np.inf)\n\n        # 2. Compute the spectral radius of B_J\n        eigenvalues = np.linalg.eigvals(B_J)\n        spectral_radius = np.max(np.abs(eigenvalues))\n\n        # 3. Compute the gap\n        gap = bound - spectral_radius\n\n        # 4. Determine if the bound is numerically tight\n        is_tight = gap = 1e-10\n\n        all_results.append([bound, spectral_radius, gap, is_tight])\n\n    # Format the final output string as specified\n    formatted_cases = []\n    for res in all_results:\n        b, r, g, t = res\n        # Format floats to 6 decimal places and boolean to string\n        case_str = f\"[{b:.6f},{r:.6f},{g:.6f},{str(t)}]\"\n        formatted_cases.append(case_str)\n    \n    final_output = f\"[{','.join(formatted_cases)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2384241"}, {"introduction": "在工程计算中，我们常遇到不满足对角占优条件的线性系统，这可能导致迭代法收敛缓慢甚至发散。一个常见的解决思路是“预处理”：对原矩阵进行微小的修正以改善其性质。这个练习将指导你解决一个实际的优化问题：寻找一个范数最小的对角矩阵 $\\Delta$，使得修正后的矩阵 $A + \\Delta$ 满足严格对角占优，这是实现稳健收敛的关键一步。[@problem_id:2384230]", "problem": "给定一个实方阵 $A \\in \\mathbb{R}^{n \\times n}$，它不是行严格对角占优的。对于一个对角矩阵 $\\Delta = \\mathrm{diag}(\\delta_1,\\dots,\\delta_n)$，定义 Frobenius 范数为 $\\|\\Delta\\|_{F} = \\sqrt{\\sum_{i=1}^{n} \\delta_i^2}$。对于给定的正裕量 $\\tau \\in \\mathbb{R}_{0}$，如果对于每个行索引 $i \\in \\{1,\\dots,n\\}$ 都有 $\\left|b_{ii}\\right| \\ge \\sum_{j \\ne i} \\left|b_{ij}\\right| + \\tau$ 成立，则称矩阵 $B$ 是 $\\tau$-行严格对角占优的。目标是找到具有最小 Frobenius 范数的对角矩阵 $\\Delta$，使得 $A + \\Delta$ 是 $\\tau$-行严格对角占优的。\n\n此外，设 $D = \\mathrm{diag}(b_{11},\\dots,b_{nn})$ 是 $B = A+\\Delta$ 的对角部分，并设 $I$ 表示大小为 $n$ 的单位矩阵。与 $B$ 相关联的 Jacobi 迭代矩阵 $T_J$ 定义为 $T_J = I - D^{-1} B$。方阵 $M$ 的谱半径（SR），记为 $\\rho(M)$，是 $M$ 的特征值绝对值的最大值。\n\n你的程序必须对下述每个测试矩阵，使用相同的指定裕量 $\\tau$，计算：\n1. 在所有使得 $A+\\Delta$ 是 $\\tau$-行严格对角占优的对角矩阵 $\\Delta$ 中，具有最小 Frobenius 范数 $\\|\\Delta\\|_{F}$ 的那个。如果存在多个最小值点（这只在某个 $i$ 的 $a_{ii} = 0$ 时发生），则为该索引 $i$ 选择满足 $a_{ii} + \\delta_i \\ge 0$ 的最小值点。\n2. 由 $B = A+\\Delta$ 构建的 Jacobi 迭代矩阵的谱半径 $\\rho(T_J)$。\n\n所有矩阵均为实值且无量纲。使用以下测试套件，并统一使用公共裕量 $\\tau = 10^{-3}$：\n- 测试 1：$A_1 = \\begin{bmatrix} 1  -2 \\\\ -2  1 \\end{bmatrix}$。\n- 测试 2：$A_2 = \\begin{bmatrix} 4  1  0 \\\\ 0.5  3.5  -0.2 \\\\ 0.1  0.1  1.5 \\end{bmatrix}$。\n- 测试 3：$A_3 = \\begin{bmatrix} 0  0.2 \\\\ -0.3  0 \\end{bmatrix}$。\n- 测试 4：$A_4 = \\begin{bmatrix} -1  0.4  0.6 \\\\ 0.3  -0.9  0.6 \\\\ 0.2  0.5  -0.7 \\end{bmatrix}$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，格式如下\n$[ \\|\\Delta_1\\|_{F}, \\rho(T_{J,1}), \\|\\Delta_2\\|_{F}, \\rho(T_{J,2}), \\|\\Delta_3\\|_{F}, \\rho(T_{J,3}), \\|\\Delta_4\\|_{F}, \\rho(T_{J,4}) ]$，\n其中 $\\Delta_k$ 和 $T_{J,k}$ 对应于测试 $k \\in \\{1,2,3,4\\}$。每个条目都必须是十进制或科学记数法表示的实数。不涉及角度或物理单位，且无需四舍五入到特定的小数位数。", "solution": "所述问题已经过验证，并被确定为有效。其科学依据在于数值线性代数的原理，是适定的、客观的，并包含获得唯一解所需的全部信息。因此，我们进行形式化的推导。\n\n核心任务是找到一个对角矩阵 $\\Delta = \\mathrm{diag}(\\delta_1, \\dots, \\delta_n)$，以最小化 Frobenius 范数 $\\|\\Delta\\|_{F}$，其约束条件是 $B = A + \\Delta$ 是 $\\tau$-行严格对角占优的。该优化问题为：\n$$\n\\underset{\\delta_1, \\dots, \\delta_n}{\\text{minimize}} \\quad \\|\\Delta\\|_{F}^2 = \\sum_{i=1}^{n} \\delta_i^2\n$$\n$$\n\\text{subject to} \\quad |b_{ii}| \\ge \\sum_{j \\ne i} |b_{ij}| + \\tau \\quad \\text{for all } i \\in \\{1, \\dots, n\\}\n$$\n矩阵 $B$ 的元素与 $A$ 和 $\\Delta$ 的元素关系如下：当 $i \\ne j$ 时，$b_{ij} = a_{ij}$；当 $i=j$ 时，$b_{ii} = a_{ii} + \\delta_i$。我们将 $A$ 的第 $i$ 行非对角元素绝对值之和定义为 $S_i = \\sum_{j \\ne i} |a_{ij}|$。约束条件于是可以重写为：\n$$\n|a_{ii} + \\delta_i| \\ge S_i + \\tau \\quad \\text{for all } i \\in \\{1, \\dots, n\\}\n$$\n待最小化的目标函数 $\\sum_{i=1}^{n} \\delta_i^2$ 是非负项之和，其中每一项仅依赖于单个变量 $\\delta_i$。约束条件也是解耦的，每个约束只涉及一个 $\\delta_i$。因此，我们可以通过对每一行 $i$ 独立地最小化每一项 $\\delta_i^2$ 来最小化总和。这等价于最小化 $|\\delta_i|$。\n\n对于每一行 $i$，我们必须找到满足约束 $|a_{ii} + \\delta_i| \\ge C_i$ 且具有最小绝对值的 $\\delta_i$ 值，其中我们定义常数 $C_i = S_i + \\tau$。由于 $\\tau  0$ 且 $S_i \\ge 0$，我们有 $C_i  0$。不等式 $|x| \\ge C_i$ 将 $x=a_{ii}+\\delta_i$ 的有效区域定义为 $(-\\infty, -C_i] \\cup [C_i, \\infty)$。我们寻求在此有效区域内找到一个距离 $a_{ii}$ 最近的点，以最小化扰动 $|\\delta_i| = |x - a_{ii}|$。\n\n我们对每一行 $i$ 的子问题进行分析：\n1.  如果原始矩阵 $A$ 的第 $i$ 行已经满足条件，即 $|a_{ii}| \\ge C_i$，则取 $\\delta_i = 0$ 即可满足约束。由于我们希望最小化 $|\\delta_i|$，最优选择确实是 $\\delta_i = 0$。\n2.  如果 $|a_{ii}|  C_i$，则条件不满足，需要一个非零的 $\\delta_i$。我们必须扰动 $a_{ii}$ 使之成为 $b_{ii} = a_{ii} + \\delta_i$ 以满足 $|b_{ii}| \\ge C_i$。为了最小化 $|\\delta_i| = |b_{ii} - a_{ii}|$，我们必须在有效集 $(-\\infty, -C_i] \\cup [C_i, \\infty)$ 中选择距离 $a_{ii}$ 值最近的点作为 $b_{ii}$。\n    -   如果 $a_{ii} \\ge 0$，最近的有效点是 $b_{ii} = C_i$。这得到 $\\delta_i = C_i - a_{ii}$。\n    -   如果 $a_{ii}  0$，最近的有效点是 $b_{ii} = -C_i$。这得到 $\\delta_i = -C_i - a_{ii}$。\n    -   如果 $a_{ii} = 0$，则出现一种特殊情况。两个候选值是 $\\delta_i = C_i$和 $\\delta_i = -C_i$，两者都具有相同的绝对值 $|C_i|$。问题规定，在这种情况下，我们必须选择使得 $a_{ii} + \\delta_i \\ge 0$ 的最小值点，这意味着 $b_{ii} \\ge 0$。因此，我们必须选择 $b_{ii} = C_i$，这意味着 $\\delta_i = C_i$。这种情况可由 $a_{ii} \\ge 0$ 的逻辑正确处理。\n\n这个过程唯一地确定了每一行 $i$ 的 $\\delta_i$ 的最优值。因此，对角矩阵 $\\Delta = \\mathrm{diag}(\\delta_1, \\dots, \\delta_n)$ 被唯一确定。第一个要求的值，即最小 Frobenius 范数，然后可计算为 $\\|\\Delta\\|_{F} = \\sqrt{\\sum_{i=1}^{n} \\delta_i^2}$。\n\n第二个要求的值是与新形成的矩阵 $B = A + \\Delta$ 相关联的 Jacobi 迭代矩阵 $T_J$ 的谱半径 $\\rho(T_J)$。根据构造，矩阵 $B$ 是 $\\tau$-行严格对角占优的。其对角元 $b_{ii}$ 保证为非零，因为 $|b_{ii}| \\ge C_i = S_i + \\tau  0$。因此，其对角部分 $D = \\mathrm{diag}(b_{11}, \\dots, b_{nn})$ 是可逆的。\n\nJacobi 矩阵定义为 $T_J = I - D^{-1}B$。其元素由下式给出：\n$$\n(T_J)_{ij} = \\begin{cases}\n0  \\text{if } i = j \\\\\n-\\frac{b_{ij}}{b_{ii}} = -\\frac{a_{ij}}{b_{ii}}  \\text{if } i \\ne j\n\\end{cases}\n$$\n谱半径 $\\rho(T_J)$ 是 $T_J$ 特征值中的最大绝对值：\n$$\n\\rho(T_J) = \\max \\{|\\lambda| : \\lambda \\text{ is an eigenvalue of } T_J \\}\n$$\n特征值通过数值求解特征方程 $\\det(T_J - \\lambda I) = 0$ 来找到。\n\n针对每个测试用例 $(A, \\tau)$ 的完整算法如下：\n1.  为 $\\Delta$ 的对角元 $(\\delta_1, \\dots, \\delta_n)$ 初始化一个 $n$ 维的全零向量。\n2.  对从 $1$ 到 $n$ 的每一行 $i$：\n    a. 计算非对角线元素之和 $S_i = \\sum_{j \\ne i} |a_{ij}|$。\n    b. 计算目标绝对值 $C_i = S_i + \\tau$。\n    c. 如果 $|a_{ii}|  C_i$，更新 $\\delta_i$：如果 $a_{ii} \\ge 0$，则设 $\\delta_i = C_i - a_{ii}$；否则，设 $\\delta_i = -C_i - a_{ii}$。\n3.  计算 Frobenius 范数 $\\|\\Delta\\|_{F} = \\sqrt{\\sum_{i=1}^{n} \\delta_i^2}$。\n4.  构造矩阵 $B = A + \\mathrm{diag}(\\delta_1, \\dots, \\delta_n)$。\n5.  构造 Jacobi 矩阵 $T_J$，其元素在 $i \\ne j$ 时为 $(T_J)_{ij} = -a_{ij}/b_{ii}$，对角线上为零。\n6.  计算 $T_J$ 的特征值。\n7.  通过找到所计算出的特征值的最大绝对值来确定谱半径 $\\rho(T_J)$。\n8.  返回 $\\|\\Delta\\|_{F}$ 和 $\\rho(T_J)$。\n对每个提供的测试矩阵实施此过程。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases and prints the formatted output.\n    \"\"\"\n\n    def process_matrix(A, tau):\n        \"\"\"\n        Calculates the minimal Frobenius norm of Delta and the spectral radius\n        of the Jacobi matrix for a given matrix A and margin tau.\n\n        Args:\n            A (np.ndarray): The input square matrix.\n            tau (float): The positive margin for strict diagonal dominance.\n        \n        Returns:\n            tuple[float, float]: A tuple containing the Frobenius norm of Delta\n                                 and the spectral radius of the Jacobi matrix.\n        \"\"\"\n        n = A.shape[0]\n        delta_diag = np.zeros(n, dtype=float)\n\n        # 1. Determine the optimal diagonal matrix Delta\n        for i in range(n):\n            a_ii = A[i, i]\n            # Sum of absolute values of off-diagonal elements\n            S_i = np.sum(np.abs(A[i, :])) - np.abs(a_ii)\n            C_i = S_i + tau\n\n            if np.abs(a_ii)  C_i:\n                # Condition for modification is met\n                if a_ii >= 0:\n                    # This case handles a_ii > 0 and a_ii = 0 as per problem specification.\n                    delta_diag[i] = C_i - a_ii\n                else: # a_ii  0\n                    delta_diag[i] = -C_i - a_ii\n            # else, delta_diag[i] remains 0, which is the optimal choice.\n\n        # 2. Compute the Frobenius norm of Delta\n        norm_f_delta = np.linalg.norm(delta_diag)\n\n        # 3. Construct the modified matrix B = A + Delta\n        B = A + np.diag(delta_diag)\n\n        # 4. Construct the Jacobi iteration matrix T_J = I - D^-1 * B\n        b_diag = np.diag(B)\n        \n        # T_J has zeros on the diagonal\n        T_J = np.zeros_like(A, dtype=float)\n        for i in range(n):\n            for j in range(n):\n                if i != j:\n                    T_J[i, j] = -A[i, j] / b_diag[i]\n\n        # 5. Compute the spectral radius of T_J\n        eigenvalues = np.linalg.eigvals(T_J)\n        rho_T_J = np.max(np.abs(eigenvalues))\n\n        return norm_f_delta, rho_T_J\n\n    # Define the test cases from the problem statement.\n    tau = 1e-3\n    test_cases = [\n        np.array([[1, -2], [-2, 1]]),\n        np.array([[4, 1, 0], [0.5, 3.5, -0.2], [0.1, 0.1, 1.5]]),\n        np.array([[0, 0.2], [-0.3, 0]]),\n        np.array([[-1, 0.4, 0.6], [0.3, -0.9, 0.6], [0.2, 0.5, -0.7]])\n    ]\n\n    results = []\n    for A in test_cases:\n        norm_D, rho_Tj = process_matrix(A.astype(float), tau)\n        results.extend([norm_D, rho_Tj])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2384230"}]}