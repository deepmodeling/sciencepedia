{"hands_on_practices": [{"introduction": "我们的动手实践之旅始于一项每位计算工程师都会面临的任务：代码调试。本练习将挑战你仅凭局部单元数据，来确定全局刚度矩阵中一个元素的正确值。通过聚焦于单个矩阵元，你将掌握直接刚度叠加法的基本原理，并精确理解单个单元如何对全局系统做出贡献 [@problem_id:2371849]。", "problem": "考虑一个单位正方形上的标量扩散问题，该问题使用线性三角形单元进行有限元法（FEM）离散化。网格节点坐标分别为 $(0,0)$、$(1,0)$、$(1,1)$ 和 $(0,1)$，并依次标记为全局节点 $1$、$2$、$3$ 和 $4$。单元由连接关系 $e_{1}=(1,2,3)$ 和 $e_{2}=(1,3,4)$ 定义。已知局部刚度矩阵（对于单位无量纲传导率和线性形函数）为\n$$\nK^{(1)}=\\begin{pmatrix}\n0.5 & -0.5 & 0 \\\\\n-0.5 & 1 & -0.5 \\\\\n0 & -0.5 & 0.5\n\\end{pmatrix},\n\\quad\nK^{(2)}=\\begin{pmatrix}\n0.5 & 0 & -0.5 \\\\\n0 & 0.5 & -0.5 \\\\\n-0.5 & -0.5 & 1\n\\end{pmatrix},\n$$\n其中 $K^{(1)}$ 根据对应于全局节点 $(1,2,3)$ 的局部节点排序，而 $K^{(2)}$ 根据对应于全局节点 $(1,3,4)$ 的局部节点排序。一个实现程序生成了如下组装后的全局刚度矩阵 $\\tilde{K}$：\n$$\n\\tilde{K}=\\begin{pmatrix}\n1.0 & -0.5 & -0.5 & 0 \\\\\n-0.5 & 1.0 & -0.5 & 0 \\\\\n-0.5 & -0.5 & 1.5 & -0.5 \\\\\n0 & 0 & -0.5 & 0.5\n\\end{pmatrix}.\n$$\n假设 $K^{(1)}$ 和 $K^{(2)}$ 是正确的，唯一的问题出在组装过程中，请使用给定的单元连接关系和局部刚度矩阵，确定正确组装后全局刚度矩阵元素 $K_{1,4}$ 的正确值。以无单位的精确数字形式给出答案。", "solution": "所述问题在科学上是合理的、适定的，并包含获得唯一解所需的所有信息。所提供的局部刚度矩阵 $K^{(1)}$ 和 $K^{(2)}$ 已被验证对于指定几何形状上的线性三角形单元以及单位无量纲传导率是正确的。任务是确定全局刚度矩阵 $K$ 中元素 $K_{1,4}$ 的正确值。\n\n在有限元法中，全局刚度矩阵的组装基于直接刚度求和原理。全局矩阵 $K$ 初始化为一个大小为 $N \\times N$ 的零矩阵，其中 $N$ 是全局节点的总数。在本问题中，$N=4$。然后将每个单元的局部刚度矩阵的贡献累加到全局矩阵中。全局矩阵的一个元素 $K_{I,J}$ 是所有单元矩阵 $K^{(e)}$ 贡献的总和：\n$$\nK_{I,J} = \\sum_{e} K^{(e)}_{I,J}\n$$\n其中 $K^{(e)}_{I,J}$ 是单元 $e$ 对全局矩阵第 $I$ 行、第 $J$ 列元素的贡献。只有当全局节点 $I$ 和 $J$ 都属于单元 $e$ 时，贡献 $K^{(e)}_{I,J}$ 才不为零。\n\n我们需要求解特定元素 $K_{1,4}$ 的值。我们必须检查每个单元的连接关系，以确定哪些单元对该元素有贡献。\n单元由以下连接关系定义：\n1. 单元 $e_1$：连接全局节点 $(1, 2, 3)$。\n2. 单元 $e_2$：连接全局节点 $(1, 3, 4)$。\n\n一个单元只有当它同时包含全局节点 $1$ 和全局节点 $4$ 时，才会对 $K_{1,4}$ 有贡献。\n- 单元 $e_1$ 包含节点 $1$ 但不包含节点 $4$。因此，它对 $K_{1,4}$ 元素的贡献为零。\n- 单元 $e_2$ 同时包含节点 $1$ 和节点 $4$。因此，它是唯一对 $K_{1,4}$ 元素有贡献的单元。\n\n因此，$K_{1,4}$ 的值完全由单元 $e_2$ 的贡献决定。我们必须确定局部刚度矩阵 $K^{(2)}$ 中的哪个元素对应于全局元素 $K_{1,4}$。\n\n问题陈述，对于单元 $e_2$，局部节点是根据全局节点 $(1, 3, 4)$ 进行排序的。这定义了从局部节点索引（我们称之为 $i, j, k$）到全局节点索引（$I, J, K$）的映射关系：\n- 局部节点 $1 \\rightarrow$ 全局节点 $1$\n- 局部节点 $2 \\rightarrow$ 全局节点 $3$\n- 局部节点 $3 \\rightarrow$ 全局节点 $4$\n\n单元 $e_2$ 的局部刚度矩阵如下所示：\n$$\nK^{(2)} = \\begin{pmatrix} k^{(2)}_{11} & k^{(2)}_{12} & k^{(2)}_{13} \\\\ k^{(2)}_{21} & k^{(2)}_{22} & k^{(2)}_{23} \\\\ k^{(2)}_{31} & k^{(2)}_{32} & k^{(2)}_{33} \\end{pmatrix} = \\begin{pmatrix} 0.5 & 0 & -0.5 \\\\ 0 & 0.5 & -0.5 \\\\ -0.5 & -0.5 & 1 \\end{pmatrix}\n$$\n单元 $e_2$ 对全局元素 $K_{I,J}$ 的贡献是局部元素 $k^{(2)}_{ij}$，其中局部节点 $i$ 映射到全局节点 $I$，局部节点 $j$ 映射到全局节点 $J$。\n\n我们要求解对 $K_{1,4}$ 的贡献。\n- 全局行索引为 $I=1$，对应于局部节点 $i=1$。\n- 全局列索引为 $J=4$，对应于局部节点 $j=3$。\n因此，对 $K_{1,4}$ 的贡献就是局部矩阵元素 $k^{(2)}_{1,3}$。\n\n从给定的矩阵 $K^{(2)}$ 中，第一行第三列的元素是：\n$$\nk^{(2)}_{1,3} = -0.5\n$$\n由于单元 $e_2$ 是唯一对 $K_{1,4}$ 有贡献的单元，因此在组装后的全局刚度矩阵中，此元素的正确值为：\n$$\nK_{1,4} = k^{(2)}_{1,3} = -0.5\n$$\n所提供的错误矩阵 $\\tilde{K}$ 与正确值的计算无关。正确的组装过程会明确地导向这个结果。", "answer": "$$\n\\boxed{-0.5}\n$$", "id": "2371849"}, {"introduction": "在掌握了正向的组装过程之后，让我们转换视角来解决一个难题。在这个问题中，你将获得一个完整的全局刚度矩阵，并需要推断出单元连接关系中的一个缺失信息。这项“逆向工程”任务将加深你对组装过程的理解，揭示全局矩阵不仅是一个结果，更是其所有组成单元相互作用的完整记录 [@problem_id:2371858]。", "problem": "考虑一个使用线性三角形单元通过有限元法（FEM）离散的标量二维扩散问题，每个全局节点有一个自由度。有限元组装规则指出，全局刚度矩阵 $K$ 是根据单元到全局的连接关系，将各单元刚度矩阵的贡献累加到 $K$ 中得到的。\n\n一个小网格包含 $4$ 个全局节点和两个三角形单元 $e_1$ 和 $e_2$。局部刚度矩阵 $k^{e_1}$ 和 $k^{e_2}$ 已经使用标准线性形函数从弱形式计算得出，并以数值形式提供如下：\n$$\nk^{e_1} \\;=\\;\n\\begin{pmatrix}\n2 & -1 & -1 \\\\\n-1 & 1 & 0 \\\\\n-1 & 0 & 1\n\\end{pmatrix},\n\\qquad\nk^{e_2} \\;=\\;\n\\begin{pmatrix}\n3 & -2 & -1 \\\\\n-2 & 2 & 0 \\\\\n-1 & 0 & 1\n\\end{pmatrix}.\n$$\n单元 $e_1$ 的连接关系是完全已知的：其局部节点 $\\{1,2,3\\}$ 分别映射到全局节点 $\\{1,2,3\\}$。单元 $e_2$ 的连接关系是部分已知的：其局部节点 $\\{1,2,3\\}$ 分别映射到全局节点 $\\{2,\\;?,\\;4\\}$，其中 $?$ 是集合 $\\{1,2,3,4\\}$ 中一个与 $2$ 和 $4$ 都不同的未知全局节点索引。\n\n组装后的全局刚度矩阵 $K \\in \\mathbb{R}^{4 \\times 4}$ 如下所示：\n$$\nK \\;=\\;\n\\begin{pmatrix}\n4 & -3 & -1 & 0 \\\\\n-3 & 4 & 0 & -1 \\\\\n-1 & 0 & 1 & 0 \\\\\n0 & -1 & 0 & 1\n\\end{pmatrix}.\n$$\n\n仅使用从弱形式导出的有限元组装基本原理（即，$K$ 是根据连接关系将单元刚度矩阵置入并求和得到的），并且不引入任何未提供的公式，请推导出与给定的 $K$、$k^{e_1}$、$k^{e_2}$ 以及已知的 $e_1$ 映射关系相一致的 $e_2$ 连接关系中缺失的全局节点索引 $?$。\n\n请以单个整数值的形式给出 $?$ 的最终答案（无单位）。无需四舍五入。", "solution": "在尝试求解之前，首先对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 该问题是一个通过有限元法（FEM）和线性三角形单元离散化的标量二维扩散问题。\n- 每个全局节点有一个自由度。\n- 全局刚度矩阵 $K$ 由单元刚度矩阵 $k^e$ 组装而成。\n- 网格包含 $4$ 个全局节点和 $2$ 个单元，$e_1$ 和 $e_2$。\n- 单元 $e_1$ 的局部刚度矩阵为：\n$$\nk^{e_1} =\n\\begin{pmatrix}\n2 & -1 & -1 \\\\\n-1 & 1 & 0 \\\\\n-1 & 0 & 1\n\\end{pmatrix}\n$$\n- 单元 $e_2$ 的局部刚度矩阵为：\n$$\nk^{e_2} =\n\\begin{pmatrix}\n3 & -2 & -1 \\\\\n-2 & 2 & 0 \\\\\n-1 & 0 & 1\n\\end{pmatrix}\n$$\n- 单元 $e_1$ 的连接关系将局部节点 $\\{1, 2, 3\\}$ 分别映射到全局节点 $\\{1, 2, 3\\}$。\n- 单元 $e_2$ 的连接关系将局部节点 $\\{1, 2, 3\\}$ 分别映射到全局节点 $\\{2, ?, 4\\}$，其中 $?$ 是集合 $\\{1, 3, 4\\}$ 中的一个整数。问题陈述意味着 $?$ 必须与2和4不同，因此 $?$ 必定在 $\\{1,3\\}$ 中。\n- 组装后的全局刚度矩阵 $K$ 为：\n$$\nK =\n\\begin{pmatrix}\n4 & -3 & -1 & 0 \\\\\n-3 & 4 & 0 & -1 \\\\\n-1 & 0 & 1 & 0 \\\\\n0 & -1 & 0 & 1\n\\end{pmatrix}\n$$\n- 目标是确定未知的全局节点索引 $?$。\n\n**步骤2：问题陈述验证**\n该问题具有科学依据，因为它描述了有限元法中的标准组装流程，这是计算工程学的基石。提供的单元刚度矩阵是对称且奇异的（每行之和为零），这与施加边界条件之前的扩散问题的物理特性相符。该问题是适定的，提供了足够的信息来推导出该单一未知值。语言客观而精确。该问题未违反任何指定的无效性标准。\n\n**步骤3：结论与求解**\n问题被判定为有效。将推导解答。\n\n有限元法中组装的基本原理指出，全局刚度矩阵 $K$ 是各个单元刚度矩阵扩展并映射到全局自由度后的代数和。对于给定的包含两个单元的系统，此关系表示为：\n$$K = K^{(1)} + K^{(2)}$$\n其中 $K^{(1)}$ 和 $K^{(2)}$ 分别是单元 $e_1$ 和 $e_2$ 对全局矩阵的贡献。在本例中，它们是 $4 \\times 4$ 矩阵。\n\n这个关系可以重排，以分离出单元 $e_2$ 的贡献：\n$$K^{(2)} = K - K^{(1)}$$\n\n首先，我们必须构建 $K^{(1)}$。单元 $e_1$ 的连接关系将其局部节点 $\\{1, 2, 3\\}$ 映射到全局节点 $\\{1, 2, 3\\}$。这意味着局部矩阵 $k^{e_1}$ 的元素贡献给全局矩阵 $K$ 的相应元素。具体而言，$k^{e_1}$ 的第 $ij$ 个元素加到 $K$ 的第 $IJ$ 个元素上，其中 $I$ 是与局部节点 $i$ 对应的全局节点，$J$ 是与局部节点 $j$ 对应的全局节点。\n给定 $k^{e_1}$ 和连接映射 $\\{1, 2, 3\\} \\to \\{1, 2, 3\\}$，矩阵 $K^{(1)}$ 是通过将 $k^{e_1}$ 放入一个 $4 \\times 4$ 零矩阵的左上角 $3 \\times 3$ 子矩阵中形成的：\n$$\nk^{e_1} =\n\\begin{pmatrix}\n2 & -1 & -1 \\\\\n-1 & 1 & 0 \\\\\n-1 & 0 & 1\n\\end{pmatrix}\n\\quad \\implies \\quad\nK^{(1)} =\n\\begin{pmatrix}\n2 & -1 & -1 & 0 \\\\\n-1 & 1 & 0 & 0 \\\\\n-1 & 0 & 1 & 0 \\\\\n0 & 0 & 0 & 0\n\\end{pmatrix}\n$$\n\n接下来，我们通过从给定的全局矩阵 $K$ 中减去 $K^{(1)}$ 来计算 $K^{(2)}$：\n$$\nK^{(2)} =\n\\begin{pmatrix}\n4 & -3 & -1 & 0 \\\\\n-3 & 4 & 0 & -1 \\\\\n-1 & 0 & 1 & 0 \\\\\n0 & -1 & 0 & 1\n\\end{pmatrix}\n-\n\\begin{pmatrix}\n2 & -1 & -1 & 0 \\\\\n-1 & 1 & 0 & 0 \\\\\n-1 & 0 & 1 & 0 \\\\\n0 & 0 & 0 & 0\n\\end{pmatrix}\n$$\n执行矩阵减法得出：\n$$\nK^{(2)} =\n\\begin{pmatrix}\n4-2 & -3-(-1) & -1-(-1) & 0-0 \\\\\n-3-(-1) & 4-1 & 0-0 & -1-0 \\\\\n-1-(-1) & 0-0 & 1-1 & 0-0 \\\\\n0-0 & -1-0 & 0-0 & 1-0\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n2 & -2 & 0 & 0 \\\\\n-2 & 3 & 0 & -1 \\\\\n0 & 0 & 0 & 0 \\\\\n0 & -1 & 0 & 1\n\\end{pmatrix}\n$$\n这个矩阵 $K^{(2)}$ 代表了单元 $e_2$ 组装后的贡献。$K^{(2)}$ 的非零元素必须对应于与单元 $e_2$ 相关联的全局节点。通过检查 $K^{(2)}$ 的行和列，我们观察到与全局节点 $1$, $2$ 和 $4$ 相关的非零元素。对应于全局节点 $3$ 的行和列完全为零。因此，单元 $e_2$ 的全局节点集合必须是 $\\{1, 2, 4\\}$。\n\n问题陈述指出 $e_2$ 的连接关系将其局部节点映射到全局节点 $\\{2, ?, 4\\}$。将此与我们推导出的节点集 $\\{1, 2, 4\\}$ 进行比较，从逻辑上必然得出，未知的节点索引 $?$ 必须是 $1$。\n\n为了验证这个结论，我们可以使用局部节点 $\\{1, 2, 3\\}$ 分别对应 $\\{2, 1, 4\\}$ 的连接映射来对 $k^{e_2}$ 进行正向组装，并检查结果是否与我们计算出的 $K^{(2)}$ 相匹配。该映射如下：\n- 局部节点 $1 \\to$ 全局节点 $2$\n- 局部节点 $2 \\to$ 全局节点 $1$\n- 局部节点 $3 \\to$ 全局节点 $4$\n\n使用给定的 $k^{e_2}$：\n$$\nk^{e_2} =\n\\begin{pmatrix}\n3 & -2 & -1 \\\\\n-2 & 2 & 0 \\\\\n-1 & 0 & 1\n\\end{pmatrix}\n$$\n对 $4 \\times 4$ 全局矩阵的贡献如下：\n- $k^{e_2}_{11} = 3 \\to K_{22}$\n- $k^{e_2}_{12} = -2 \\to K_{21}$\n- $k^{e_2}_{13} = -1 \\to K_{24}$\n- $k^{e_2}_{21} = -2 \\to K_{12}$\n- $k^{e_2}_{22} = 2 \\to K_{11}$\n- $k^{e_2}_{23} = 0 \\to K_{14}$\n- $k^{e_2}_{31} = -1 \\to K_{42}$\n- $k^{e_2}_{32} = 0 \\to K_{41}$\n- $k^{e_2}_{33} = 1 \\to K_{44}$\n\n将这些贡献组装到一个 $4 \\times 4$ 的零矩阵中，结果为：\n$$\n\\begin{pmatrix}\nk^{e_2}_{22} & k^{e_2}_{21} & 0 & k^{e_2}_{23} \\\\\nk^{e_2}_{12} & k^{e_2}_{11} & 0 & k^{e_2}_{13} \\\\\n0 & 0 & 0 & 0 \\\\\nk^{e_2}_{32} & k^{e_2}_{31} & 0 & k^{e_2}_{33}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n2 & -2 & 0 & 0 \\\\\n-2 & 3 & 0 & -1 \\\\\n0 & 0 & 0 & 0 \\\\\n0 & -1 & 0 & 1\n\\end{pmatrix}\n$$\n这个矩阵与从 $K - K^{(1)}$ 导出的 $K^{(2)}$ 完全相同。因此，$? = 1$ 的假设得到了证实。任何其他对 $?$ 的有效选择，例如 $? = 3$，都会导致一个不同的矩阵，这将与给定的全局矩阵 $K$ 相矛盾。因此，未知的全局节点索引是 $1$。", "answer": "$$\\boxed{1}$$", "id": "2371858"}, {"introduction": "现在，是时候将你所学的知识整合到一个完整、可运行的程序中了。这个练习将指导你从零开始构建一个有限元求解器，用于分析一个具有高对比度材料的复合结构。你将不再局限于简单的组装，而是需要统筹整个工作流程——从基于物理原理计算单元刚度，到求解最终的方程组——从而将理论转化为强大的计算工具 [@problem_id:2371824]。", "problem": "您需要编写一个完整的程序，从虚功原理和小应变、线性各向同性本构关系出发，使用有限元法（FEM）为一个二维线性弹性复合材料组装全局刚度矩阵。使用平面应力运动学。目标是为一个简单网格计算位移响应，其中相邻单元的杨氏模量不同，可能相差数个数量级。所有距离必须以米表示，力以牛顿表示，应力以帕斯卡表示。不需要角度。所有输出必须以米为单位。\n\n您必须使用的基本原理包括：(i) 线性弹性的虚功原理，(ii) 二维小应变张量定义，以及 (iii) 线性各向同性平面应力本构关系。基于这些原理，您必须推导单元刚度并组装全局刚度矩阵，然后施加边界条件和载荷以求解位移。\n\n域和网格：\n- 考虑一个尺寸为 $L_x = 2$ 米和 $L_y = 1$ 米的矩形域，其厚度恒为 $t = 1$ 米（采用平面应力厚度方向假设，但保留厚度以进行载荷等效计算）。\n- 使用以下节点集，坐标 $(x_i,y_i)$ 以米为单位：\n  - 节点索引 $0$: $(0,0)$，\n  - 节点索引 $1$: $(1,0)$，\n  - 节点索引 $2$: $(2,0)$，\n  - 节点索引 $3$: $(0,1)$，\n  - 节点索引 $4$: $(1,1)$，\n  - 节点索引 $5$: $(2,1)$。\n- 使用四个线性三角形单元，节点连接关系如下（每个三元组列出了三角形各节点的索引）：\n  - 单元 $0$: $(0,1,4)$，\n  - 单元 $1$: $(0,4,3)$，\n  - 单元 $2$: $(1,2,5)$，\n  - 单元 $3$: $(1,5,4)$。\n\n复合材料分配：\n- 每个形心x坐标严格小于1米的三角形使用材料 $E_1$；否则使用材料 $E_2$。\n- 所有单元的泊松比均相同，为 $\\nu = 0.3$。\n\n载荷与边界条件：\n- 在 $x = L_x$ 的边界上，即沿节点索引2和5之间的边，施加一个均匀面力 $\\mathbf{t} = (t_x,t_y)$，其中 $t_x = 10^6$ 帕斯卡， $t_y = 0$。将其视为物理面力（单位面积的力），并通过沿边积分并乘以厚度 $t$ 的标准一致加载法，将其转换为等效的节点线载荷。\n- 在所有 $x = 0$ 米的节点（节点索引0和3）上，对位移分量施加齐次狄利克雷边界条件：在这些节点上设置 $u_x = 0$ 和 $u_y = 0$。\n\n控制方程与离散化框架：\n- 从二维线性弹性的虚功原理和小应变定义出发，得到定义刚度算子和诺伊曼边界条件的线性泛函的双线性形式。使用每个单元内应变恒定的线性三角形单元。对于每个单元，根据本构关系以及该单元的杨氏模量和 $\\nu$，计算标准的应变-位移矩阵 $\\mathbf{B}$ 和平面应力弹性矩阵 $\\mathbf{D}$。\n- 通过对由单元连接关系映射的单元贡献求和，来组装全局刚度矩阵 $\\mathbf{K}$。\n- 通过将在 $x = L_x$ 边界边上施加的面力所产生的一致节点力相加，来组装全局力矢量 $\\mathbf{f}$。\n\n求解与要求输出：\n- 通过消除指定的自由度来强制施加狄利克雷边界条件，并求解得到的线性系统以获得未知的位移自由度。\n- 对于下面列出的每个测试用例，计算节点索引5（位于 $(2,1)$ 米的右上角）处的位移大小，即 $\\|\\mathbf{u}_5\\|_2 = \\sqrt{u_x^2 + u_y^2}$，单位为米。\n\n测试套件：\n- 用例 $1$ (极端对比): $E_1 = 10^{12}$ 帕斯卡, $E_2 = 10^{6}$ 帕斯卡。\n- 用例 $2$ (中等对比): $E_1 = 10^{9}$ 帕斯卡, $E_2 = 10^{6}$ 帕斯卡。\n- 用例 $3$ (均匀参考): $E_1 = 10^{9}$ 帕斯卡, $E_2 = 10^{9}$ 帕斯卡。\n\n输出规格：\n- 您的程序应生成单行输出，其中包含三个测试用例的结果，结果为以米为单位、用方括号括起来的逗号分隔列表，并按上述顺序排列。对每个浮点数使用科学记数法，并保留恰好 $6$ 位有效数字。例如，一个有效的输出格式类似于 $[1.234560e-03,4.321000e+00,5.000000e-02]$。", "solution": "所述问题经过了严格的验证。\n\n步骤1：提取已知条件。\n\n- **目标**：使用有限元法为二维线性弹性复合材料组装全局刚度矩阵，求解位移，并报告指定节点在三种材料情况下的位移大小。\n- **基本原理**：虚功原理、二维小应变张量、线性各向同性平面应力本构关系。\n- **域**：矩形，长 $L_x = 2$ 米，宽 $L_y = 1$ 米，均匀厚度 $t = 1$ 米。\n- **节点坐标**：\n  - 节点 $0$: $(0,0)$ 米\n  - 节点 $1$: $(1,0)$ 米\n  - 节点 $2$: $(2,0)$ 米\n  - 节点 $3$: $(0,1)$ 米\n  - 节点 $4$: $(1,1)$ 米\n  - 节点 $5$: $(2,1)$ 米\n- **单元连接关系（线性三角形）**：\n  - 单元 $0$: $(0,1,4)$\n  - 单元 $1$: $(0,4,3)$\n  - 单元 $2$: $(1,2,5)$\n  - 单元 $3$: $(1,5,4)$\n- **材料属性**：\n  - 对于形心x坐标 $< 1$ 米的单元：杨氏模量 $E_1$。\n  - 对于形心x坐标 $\\ge 1$ 米的单元：杨氏模量 $E_2$。\n  - 均匀泊松比 $\\nu = 0.3$。\n- **载荷**：在 $x = L_x$ 的边界（节点2和5之间的边）上施加均匀面力 $\\mathbf{t} = (t_x, t_y)$，其中 $t_x = 10^6$ 帕斯卡， $t_y = 0$ 帕斯卡。此面力需转换为一致节点载荷。\n- **边界条件**：在所有 $x=0$ 米的节点（节点0和3）上施加齐次狄利克雷条件 ($u_x = 0$, $u_y = 0$)。\n- **要求输出**：对于每个测试用例，计算节点5处的 $\\|\\mathbf{u}_5\\|_2 = \\sqrt{u_x^2 + u_y^2}$。\n- **测试用例**：\n  - 用例 $1$: $E_1 = 10^{12}$ 帕斯卡, $E_2 = 10^{6}$ 帕斯卡。\n  - 用例 $2$: $E_1 = 10^{9}$ 帕斯卡, $E_2 = 10^{6}$ 帕斯卡。\n  - 用例 $3$: $E_1 = 10^{9}$ 帕斯卡, $E_2 = 10^{9}$ 帕斯卡。\n\n步骤2：使用提取的已知条件进行验证。\n\n- **科学依据**：该问题基于线性弹性和有限元法的既定理论，这些是计算工程学的核心主题。所引用的所有原理都是标准且正确的。\n- **良态问题**：该问题是良态的。域、网格、材料属性、载荷和边界条件都已完全指定。狄利克雷边界条件足以防止刚体运动，从而确保唯一解的存在。\n- **目标**：问题以精确、客观、无歧义的语言表述。\n- **完整性与一致性**：问题是自洽的。提供了公式推导和求解所需的所有数据。给定信息中没有矛盾。单位（国际单位制）是一致的。\n- **现实性**：几何形状和载荷在物理上是合理的。材料属性虽然在一种情况下表现出高对比度，但仍在工程材料的范畴内（例如，钢与软聚合物）。高对比度是对数值方法鲁棒性的有效测试。\n\n步骤3：结论与行动。\n\n该问题被视为**有效**。这是计算力学中一个标准的、定义明确的练习。现在将提供一个完整的、有理有据的解决方案。\n\n推导和求解过程将按要求从基本原理出发。\n\n线性弹性固体的平衡方程弱形式由虚功原理给出。忽略体力，它表明对于任何运动学上容许的虚位移场 $\\delta\\mathbf{u}$：\n$$\n\\int_V \\boldsymbol{\\sigma} : \\delta\\boldsymbol{\\varepsilon} \\, dV = \\int_{S_t} \\mathbf{t} \\cdot \\delta\\mathbf{u} \\, dS\n$$\n其中 $\\boldsymbol{\\sigma}$ 是柯西应力张量，$\\delta\\boldsymbol{\\varepsilon}$ 是与 $\\delta\\mathbf{u}$ 对应的虚应变张量，$\\mathbf{t}$ 是在边界部分 $S_t$ 上施加的面力矢量，而 $V$ 是物体的体积。\n\n该问题在平面应力条件下进行分析。位移场 $\\mathbf{u}(x,y) = [u_x(x,y), u_y(x,y)]^T$ 在被剖分为有限单元的域上进行离散。在每个单元 $e$ 内，位移场通过节点位移 $\\mathbf{d}_e$ 和收集在矩阵 $\\mathbf{N}(x,y)$ 中的形函数来近似：\n$$\n\\mathbf{u}(x,y) \\approx \\mathbf{u}^h(x,y) = \\mathbf{N}(x,y) \\mathbf{d}_e\n$$\n对于一个具有节点 $i, j, k$ 的3节点线性三角形单元，单元节点位移矢量为 $\\mathbf{d}_e = [u_{ix}, u_{iy}, u_{jx}, u_{jy}, u_{kx}, u_{ky}]^T$。形函数矩阵为：\n$$\n\\mathbf{N} = \\begin{bmatrix} N_i & 0 & N_j & 0 & N_k & 0 \\\\ 0 & N_i & 0 & N_j & 0 & N_k \\end{bmatrix}\n$$\n虚位移同样被近似为 $\\delta\\mathbf{u} = \\mathbf{N} \\delta\\mathbf{d}_e$。\n\n小应变张量分量，在二维分析中以矢量形式 $\\boldsymbol{\\varepsilon} = [\\varepsilon_{xx}, \\varepsilon_{yy}, \\gamma_{xy}]^T$ 排列，由位移场导出：\n$$\n\\boldsymbol{\\varepsilon} = \\begin{Bmatrix} \\partial u_x / \\partial x \\\\ \\partial u_y / \\partial y \\\\ \\partial u_x / \\partial y + \\partial u_y / \\partial x \\end{Bmatrix}\n$$\n代入离散化的位移场，我们得到代数应变-位移关系：\n$$\n\\boldsymbol{\\varepsilon} = \\mathbf{B} \\mathbf{d}_e\n$$\n其中 $\\mathbf{B}$ 是应变-位移矩阵。对于一个节点为 $(x_i,y_i)$, $(x_j,y_j)$, $(x_k,y_k)$ 的逆时针顺序线性三角形单元，$\\mathbf{B}$ 在单元内是常数，由下式给出：\n$$\n\\mathbf{B} = \\frac{1}{2A_e}\n\\begin{bmatrix}\ny_j-y_k & 0 & y_k-y_i & 0 & y_i-y_j & 0 \\\\\n0 & x_k-x_j & 0 & x_i-x_k & 0 & x_j-x_i \\\\\nx_k-x_j & y_j-y_k & x_i-x_k & y_k-y_i & x_j-x_i & y_i-y_j\n\\end{bmatrix}\n$$\n这里，$A_e$是单元的面积。虚应变为 $\\delta\\boldsymbol{\\varepsilon} = \\mathbf{B} \\delta\\mathbf{d}_e$。\n\n对于平面应力条件下的线性、各向同性弹性材料，应力矢量 $\\boldsymbol{\\sigma} = [\\sigma_{xx}, \\sigma_{yy}, \\tau_{xy}]^T$ 通过本构矩阵 $\\mathbf{D}$ 与应变矢量相关联：\n$$\n\\boldsymbol{\\sigma} = \\mathbf{D} \\boldsymbol{\\varepsilon}\n$$\n矩阵 $\\mathbf{D}$ 为：\n$$\n\\mathbf{D} = \\frac{E}{1 - \\nu^2}\n\\begin{bmatrix}\n1 & \\nu & 0 \\\\\n\\nu & 1 & 0 \\\\\n0 & 0 & \\frac{1-\\nu}{2}\n\\end{bmatrix}\n$$\n其中 $E$ 是杨氏模量，$\\nu$ 是泊松比。\n\n将离散化量代入虚功原理并对所有单元求和，得到：\n$$\n\\sum_e \\int_{V_e} (\\mathbf{B} \\delta\\mathbf{d}_e)^T (\\mathbf{D} \\mathbf{B} \\mathbf{d}_e) \\, dV = \\sum_e \\int_{S_{te}} (\\mathbf{N} \\delta\\mathbf{d}_e)^T \\mathbf{t} \\, dS\n$$\n这可以重写为：\n$$\n\\delta\\mathbf{d}^T \\left( \\sum_e \\mathbf{L}_e^T \\mathbf{K}_e \\mathbf{L}_e \\right) \\mathbf{d} = \\delta\\mathbf{d}^T \\left( \\sum_e \\mathbf{L}_e^T \\mathbf{f}_e \\right)\n$$\n其中 $\\mathbf{d}$ 是全局位移矢量，$\\mathbf{L}_e$ 是将单元自由度（DOFs）映射到全局自由度的连接算子。由于此式必须对任意 $\\delta\\mathbf{d}$ 成立，我们得到全局线性方程组 $\\mathbf{K}\\mathbf{d} = \\mathbf{f}$。\n\n单元刚度矩阵 $\\mathbf{K}_e$ 由体积积分给出：\n$$\n\\mathbf{K}_e = \\int_{V_e} \\mathbf{B}^T \\mathbf{D} \\mathbf{B} \\, dV = t \\int_{A_e} \\mathbf{B}^T \\mathbf{D} \\mathbf{B} \\, dA = t A_e \\mathbf{B}^T \\mathbf{D} \\mathbf{B}\n$$\n因为 $\\mathbf{B}$、$\\mathbf{D}$ 和厚度 $t$ 在线性三角形单元内是常数。\n\n由于边长为 $L$ 的边上的面力 $\\mathbf{t}$ 产生的单元一致力矢量 $\\mathbf{f}_e$ 为：\n$$\n\\mathbf{f}_e = \\int_{S_{te}} \\mathbf{N}^T \\mathbf{t} \\, dS = t \\int_L \\mathbf{N}^T \\mathbf{t} \\, dL\n$$\n对于连接两个节点的线性单元边，该积分的计算结果是将边上的总力 $F = t \\cdot L \\cdot \\text{traction}$ 均等地分配给两个节点。在本问题中，面力 $t_x = 10^6$ 帕斯卡施加在节点2和5之间的边上。该边长为 $L_{2-5} = 1$ 米。总力为 $F_x = t_x \\cdot L_{2-5} \\cdot t = 10^6 \\text{ N/m}^2 \\cdot 1 \\text{ m} \\cdot 1 \\text{ m} = 10^6$ 牛顿。因此，一致节点力为 $f_{2x} = 5 \\times 10^5$ 牛顿和 $f_{5x} = 5 \\times 10^5$ 牛顿。这些力将被组装到全局力矢量 $\\mathbf{f}$ 中。\n\n全局刚度矩阵 $\\mathbf{K}$ 和力矢量 $\\mathbf{f}$ 是通过遍历所有单元，计算它们各自的 $\\mathbf{K}_e$，并根据节点连接关系将它们组装到全局系统中来构建的。\n\n通过划掉全局刚度矩阵中相应的行和列以及力矢量中相应的项，来施加在节点0和3处指定的齐次狄利克雷边界条件 ($u_x=u_y=0$)。这会得到一个简化的系统 $\\mathbf{K}_{red} \\mathbf{d}_{red} = \\mathbf{f}_{red}$，求解该系统可得到未知的节点位移 $\\mathbf{d}_{red}$。\n\n然后重构完整的位移矢量，并为每个测试用例计算节点5处的位移大小 $\\|\\mathbf{u}_5\\|_2 = \\sqrt{u_{5x}^2 + u_{5y}^2}$。\n单元的材料属性由其形心位置决定。\n- 单元0和1的形心x坐标分别为 $2/3$ 米和 $1/3$ 米。两者均 $< 1$ 米，因此使用材料 $E_1$。\n- 单元2和3的形心x坐标分别为 $5/3$ 米和 $4/3$ 米。两者均 $\\ge 1$ 米，因此使用材料 $E_2$。\n\n解题过程是通过数值化实现此程序来进行的。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the 2D linear elasticity problem using the Finite Element Method.\n    \"\"\"\n    \n    # Define problem parameters\n    nodes = np.array([\n        [0.0, 0.0], [1.0, 0.0], [2.0, 0.0],\n        [0.0, 1.0], [1.0, 1.0], [2.0, 1.0]\n    ])\n    \n    elements = np.array([\n        [0, 1, 4], [0, 4, 3],\n        [1, 2, 5], [1, 5, 4]\n    ])\n    \n    nu = 0.3  # Poisson's ratio\n    thickness = 1.0  # meters\n    traction_x = 1e6  # Pascals\n    \n    # Define test cases\n    test_cases = [\n        (1e12, 1e6), # Case 1\n        (1e9, 1e6),  # Case 2\n        (1e9, 1e9)   # Case 3\n    ]\n    \n    results = []\n\n    for E1, E2 in test_cases:\n        \n        n_nodes = nodes.shape[0]\n        n_dofs = 2 * n_nodes\n        \n        K = np.zeros((n_dofs, n_dofs))\n        f = np.zeros(n_dofs)\n        \n        # Assemble global stiffness matrix K\n        for elem_nodes in elements:\n            # Determine material properties for the element\n            coords = nodes[elem_nodes]\n            centroid_x = np.mean(coords[:, 0])\n            \n            E = E1 if centroid_x  1.0 else E2\n            \n            # Constitutive matrix D for plane stress\n            D_factor = E / (1.0 - nu**2)\n            D = D_factor * np.array([\n                [1.0, nu, 0.0],\n                [nu, 1.0, 0.0],\n                [0.0, 0.0, (1.0 - nu) / 2.0]\n            ])\n            \n            # Strain-displacement matrix B for linear triangle\n            (x1, y1), (x2, y2), (x3, y3) = coords[0], coords[1], coords[2]\n            \n            # Area of the element\n            # Using the determinant formula for area of a triangle\n            # The node ordering is consistently CCW, so area is positive\n            area = 0.5 * ((x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1))\n\n            B = (1.0 / (2.0 * area)) * np.array([\n                [y2 - y3, 0,       y3 - y1, 0,       y1 - y2, 0      ],\n                [0,       x3 - x2, 0,       x1 - x3, 0,       x2 - x1],\n                [x3 - x2, y2 - y3, x1 - x3, y3 - y1, x2 - x1, y1 - y2]\n            ])\n            \n            # Element stiffness matrix\n            Ke = thickness * area * (B.T @ D @ B)\n            \n            # Assemble Ke into K\n            dof_indices = []\n            for node_idx in elem_nodes:\n                dof_indices.extend([2 * node_idx, 2 * node_idx + 1])\n            \n            # Use np.ix_ for convenient submatrix assignment\n            K[np.ix_(dof_indices, dof_indices)] += Ke\n\n        # Assemble global force vector f\n        edge_len_2_5 = np.linalg.norm(nodes[5] - nodes[2])\n        total_force = traction_x * edge_len_2_5 * thickness\n        \n        # Distribute force to nodes 2 and 5 (consistent nodal loads for linear element)\n        f[2 * 2] += total_force / 2.0  # Force on node 2 in x-direction\n        f[2 * 5] += total_force / 2.0  # Force on node 5 in x-direction\n        \n        # Apply boundary conditions\n        prescribed_dofs = [0, 1, 6, 7] # DOFs for nodes 0 (0,1) and 3 (6,7)\n        all_dofs = np.arange(n_dofs)\n        free_dofs = np.setdiff1d(all_dofs, prescribed_dofs)\n        \n        # Solve for unknown displacements\n        K_reduced = K[np.ix_(free_dofs, free_dofs)]\n        f_reduced = f[free_dofs]\n        \n        u_reduced = np.linalg.solve(K_reduced, f_reduced)\n        \n        # Reconstruct full displacement vector\n        u = np.zeros(n_dofs)\n        u[free_dofs] = u_reduced\n        \n        # Calculate displacement magnitude at node 5\n        u5x, u5y = u[10], u[11]\n        disp_magnitude = np.sqrt(u5x**2 + u5y**2)\n        \n        results.append(disp_magnitude)\n\n    # Format output according to specification\n    formatted_results = [f\"{res:.6e}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2371824"}]}