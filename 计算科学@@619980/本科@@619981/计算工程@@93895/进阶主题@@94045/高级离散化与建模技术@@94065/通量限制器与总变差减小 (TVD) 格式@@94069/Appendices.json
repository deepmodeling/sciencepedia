{"hands_on_practices": [{"introduction": "许多经典的数值格式可以在现代通量限制器（flux limiter）的统一框架下进行分析。这项练习 [@problem_id:2394439] 将引导你剖析经典的 Beam-Warming 格式，找出其等效的通量限制器函数 $\\phi(r)$。通过这一过程，你将应用总变差递减 (Total Variation Diminishing, TVD) 的形式化条件，从而更深刻地理解是什么特性决定了一个格式是否会产生数值振荡。", "problem": "考虑线性平流方程 $u_{t} + a\\,u_{x} = 0$，其中波速 $a>0$ 为正常数，该方程定义在间距为 $\\Delta x$ 的均匀网格上，并采用步长为 $\\Delta t$ 的前向欧拉方法进行时间更新。记库朗数（Courant number）为 $\\nu = a\\,\\Delta t/\\Delta x$，且 $0<\\nu\\leq 1$。在守恒型有限体积框架下进行计算，\n$$\nu_{i}^{n+1} \\;=\\; u_{i}^{n} \\;-\\; \\frac{\\Delta t}{\\Delta x}\\left(F_{i+1/2}^{n} - F_{i-1/2}^{n}\\right),\n$$\n并对 $a>0$ 使用标准迎风数值通量 $F_{i+1/2}^{n}=a\\,u_{i+1/2}^{-,n}$，其中 $u_{i+1/2}^{-,n}$ 是 $u$ 在界面 $x_{i+1/2}$ 处的左侧重构。令光滑度指示器为\n$$\nr_{i}^{n} \\;=\\; \\frac{\\Delta_{i-1/2}^{n}}{\\Delta_{i+1/2}^{n}}, \n\\quad \\text{where} \\quad \\Delta_{j+1/2}^{n} \\;=\\; u_{j+1}^{n} - u_{j}^{n}.\n$$\n在高分辨率通量限制器格式中，对于 $a>0$，全离散更新可以写成如下单参数形式\n$$\nu_{i}^{n+1} \\;=\\; u_{i}^{n} \\;-\\; \\nu\\left(u_{i}^{n}-u_{i-1}^{n}\\right)\n\\;-\\; \\frac{1}{2}\\,\\nu\\left(1-\\nu\\right)\\left[\\,\\phi\\!\\left(r_{i}^{n}\\right)\\left(u_{i+1}^{n}-u_{i}^{n}\\right) \\;-\\; \\phi\\!\\left(r_{i-1}^{n}\\right)\\left(u_{i}^{n}-u_{i-1}^{n}\\right)\\right].\n$$\n经典的 Beam–Warming 格式是一种二阶精度的迎风偏置方法，对于 $a>0$，它在重构中使用迎风单侧斜率，从而使得每个界面上的反耗散修正项与迎风梯度成正比。\n\n任务：\n1) 从第一性原理出发，确定唯一的通量限制器函数 $\\phi(r)$，该函数需使上述通量限制器更新格式在 $a>0$ 时退化为经典的 Beam–Warming 格式。\n2) 使用已确立的、适用于 $0<\\nu\\leq 1$ 的显式格式的全变差递减（Total Variation Diminishing, TVD）约束（Sweby 充分条件），即对于 $r\\ge 0$ 必须满足 $0\\le \\phi(r)\\le \\min\\{2r,\\,2\\}$，并且只要 $r\\ge 0$ 就有 $\\phi(r)\\ge 0$（且在非单调点不允许有反耗散，通常要求当 $r\\le 0$ 时 $\\phi(r)=0$），简要解释为何所确定的 $\\phi(r)$ 未能定义一个 TVD 格式。\n\n你的最终答案必须是 $\\phi(r)$ 的单一闭式表达式。不需要进行数值取整。", "solution": "该问题首先要求推导与经典 Beam-Warming 格式相对应的通量限制器函数 $\\phi(r)$，其次要求解释为什么该函数不会形成一个总变差不增（Total Variation Diminishing, TVD）格式。\n\n**第1部分：通量限制器函数 $\\phi(r)$ 的推导**\n\n分析从线性平流方程 $u_t + a u_x = 0$（其中 $a>0$）的守恒型有限体积更新格式开始：\n$$\nu_{i}^{n+1} = u_{i}^{n} - \\frac{\\Delta t}{\\Delta x}\\left(F_{i+1/2}^{n} - F_{i-1/2}^{n}\\right)\n$$\n题目给出了通用的高分辨率通量限制器更新的单参数形式，它由一个结合了低阶（一阶迎风）通量和受限高阶修正项的数值通量 $F_{i+1/2}$ 生成。相应的数值通量为：\n$$\nF_{i+1/2}^n = \\underbrace{a u_i^n}_{\\text{一阶迎风通量}} + \\underbrace{\\frac{1}{2}a(1-\\nu)\\phi(r_i^n)(u_{i+1}^n - u_i^n)}_{\\text{反耗散修正通量}}\n$$\nBeam-Warming 格式是一种二阶精度的迎风偏置方法。它可被理解为对二阶 Lax-Wendroff 格式的修正。Lax-Wendroff 格式的通量为：\n$$\nF_{i+1/2}^{\\text{LW}} = a u_i^n + \\frac{1}{2}a(1-\\nu)(u_{i+1}^n - u_i^n)\n$$\n其中的反耗散修正项在 $a>0$ 时依赖于顺风差分 $(u_{i+1}^n - u_i^n)$。\n\n题目指出，Beam-Warming 格式“在重构中使用迎风单侧斜率”。这意味着反耗散修正项必须与迎风差分成正比，对于 $a>0$ 即为 $(u_{i}^n - u_{i-1}^n)$。因此，我们将 Lax-Wendroff 修正项中的顺风差分替换为迎风差分，以获得 Beam-Warming 通量：\n$$\nF_{i+1/2}^{\\text{BW}} = a u_i^n + \\frac{1}{2}a(1-\\nu)(u_i^n - u_{i-1}^n)\n$$\n为了求出 Beam-Warming 格式的通量限制器函数 $\\phi(r)$，我们将通量限制器的一般表达式 $F_{i+1/2}^n$ 与 $F_{i+1/2}^{\\text{BW}}$ 等同起来：\n$$\na u_i^n + \\frac{1}{2}a(1-\\nu)\\phi(r_i^n)(u_{i+1}^n - u_i^n) = a u_i^n + \\frac{1}{2}a(1-\\nu)(u_i^n - u_{i-1}^n)\n$$\n假设 $a(1-\\nu) \\neq 0$ 且 $u_{i+1}^n - u_i^n \\neq 0$，我们可以消去公因子并分离出 $\\phi(r_i^n)$：\n$$\n\\phi(r_i^n)(u_{i+1}^n - u_i^n) = (u_i^n - u_{i-1}^n)\n$$\n$$\n\\phi(r_i^n) = \\frac{u_i^n - u_{i-1}^n}{u_{i+1}^n - u_i^n}\n$$\n题目中将光滑度指示器 $r_i^n$ 定义为连续梯度的比率：\n$$\nr_{i}^{n} = \\frac{\\Delta_{i-1/2}^{n}}{\\Delta_{i+1/2}^{n}} = \\frac{u_{i}^{n} - u_{i-1}^{n}}{u_{i+1}^{n} - u_{i}^{n}}\n$$\n将我们得到的 $\\phi(r_i^n)$ 的结果与 $r_i^n$ 的定义进行比较，我们发现通量限制器函数就是恒等函数：\n$$\n\\phi(r) = r\n$$\n\n**第2部分：TVD 分析**\n\n如果一个数值格式的总变差不随时间增加，那么该格式就是 TVD 的。对于给定形式的显式格式，当 $0 < \\nu \\le 1$ 时，格式成为 TVD 的充分条件（称为 Sweby 条件）对通量限制器 $\\phi(r)$ 提出了如下要求：\n1.  对于非单调数据（$r \\le 0$），不允许有反耗散：$\\phi(r) = 0$。\n2.  对于单调数据（$r > 0$），限制器必须位于特定区域内：$0 \\le \\phi(r) \\le \\min\\{2r, 2\\}$。\n\n我们现在用这两个条件来检验 Beam-Warming 限制器 $\\phi(r) = r$。\n\n- **条件1（$r \\le 0$）：** TVD 条件为 $\\phi(r) = 0$。Beam-Warming 的限制器为 $\\phi(r) = r$。对于任何 $r < 0$，$\\phi(r) = r \\neq 0$。因此，该格式违反了此条件。这一违反意味着该格式在局部极值点增加了反耗散，而这是在间断点附近产生伪振荡的一个已知原因。\n\n- **条件2（$r > 0$）：** 此条件可分为两部分：\n    -   $0 \\le \\phi(r) \\le 2r$：对于 $\\phi(r)=r$，这变为 $0 \\le r \\le 2r$。这对所有 $r > 0$ 都成立。\n    -   $0 \\le \\phi(r) \\le 2$：对于 $\\phi(r)=r$，这变为 $0 \\le r \\le 2$。这个不等式仅在 $r$ 位于区间 $(0, 2]$ 内时才满足。对于任何 $r > 2$，我们有 $\\phi(r) = r > 2$，这违反了该条件。\n\n由于 Beam-Warming 格式的通量限制器 $\\phi(r) = r$ 未能对所有 $r \\le 0$ 和所有 $r > 2$ 的情况满足 TVD 充分条件，因此该格式不是 TVD 的。在图形上，在 Sweby 图（$\\phi$ 相对于 $r$ 的图）中，直线 $\\phi = r$ 超出了多边形 TVD 区域，这证实了其非 TVD 性质，并解释了其产生振荡的倾向。", "answer": "$$\n\\boxed{\\phi(r) = r}\n$$", "id": "2394439"}, {"introduction": "现实世界中的工程问题很少会使用完全均匀的网格，而理论的适用性必须在更复杂的条件下得到检验。这项练习 [@problem_id:2394403] 针对这一关键点，要求你在非均匀网格上重新推导光滑度指示器 $r$。完成此练习将向你展示，基本概念必须如何被审慎地推广到更普遍、更具实践性的场景中，以确保“梯度之比”这一物理意义得到保留。", "problem": "考虑一维域上具有恒定速度 $a > 0$ 的标量线性平流方程 $u_{t} + a\\,u_{x} = 0$。在网格单元中心位于 $\\{x_{j}\\}_{j\\in\\mathbb{Z}}$ 的严格递增非均匀网格上，使用有限体积法进行离散化，其中 $h_{j+1/2} \\equiv x_{j+1} - x_{j}$ 且 $h_{j-1/2} \\equiv x_{j} - x_{j-1}$。令 $u_{j}$ 表示网格单元 $j$ 内的单元平均解。在一个总变差递减 (TVD) 格式中，通量限制器函数在界面 $x_{j+1/2}$ 处使用无量纲比率 $r_{j+1/2}$ 来比较 $a>0$ 时的上风和下风梯度。\n\n假设在每个网格单元中进行分段线性重构，并将 $r_{j+1/2}$ 定义为界面 $x_{j+1/2}$ 处空间梯度的左偏与右偏线性估计的比值，每个估计都是根据非均匀网格上最近邻的单元平均值构建的。推导 $r_{j+1/2}$ 关于 $u_{j-1}$、$u_{j}$、$u_{j+1}$ 以及网格间距 $h_{j-1/2}$ 和 $h_{j+1/2}$ 的闭式解析表达式。以单个简化表达式的形式提供最终结果。不需要进行数值计算或四舍五入。", "solution": "我们的目标是推导在界面 $x_{j+1/2}$ 处的比率 $r_{j+1/2}$ 的表达式。根据题意，该比率定义为：\n$$\nr_{j+1/2} = \\frac{\\text{左偏梯度估计}}{\\text{右偏梯度估计}}\n$$\n这些是对空间梯度 $\\frac{\\partial u}{\\partial x}$ 的估计，它们是根据非均匀网格上最近邻的单元平均值构建的。界面 $x_{j+1/2}$ 位于单元中心 $x_j$ 和 $x_{j+1}$ 之间。\n\n首先，我们必须将梯度的“左偏线性估计”形式化。该估计是使用目标区域“左侧”的单元平均值构建的。对于界面 $x_{j+1/2}$，其左侧最直接的数据点是分别位于单元中心 $x_j$ 和 $x_{j-1}$ 的单元平均值 $u_j$ 和 $u_{j-1}$。由这两点得到的梯度线性估计由以下有限差分给出：\n$$\n(\\nabla u)_{\\text{left}} = \\frac{u_{j} - u_{j-1}}{x_{j} - x_{j-1}}\n$$\n使用给定的网格间距定义 $h_{j-1/2} \\equiv x_{j} - x_{j-1}$，上式变为：\n$$\n(\\nabla u)_{\\text{left}} = \\frac{u_{j} - u_{j-1}}{h_{j-1/2}}\n$$\n这表示在区间 $[x_{j-1}, x_j]$ 上的平均梯度。\n\n接下来，我们将梯度的“右偏线性估计”形式化。遵循相同的逻辑，该估计是使用定义了“右侧”斜率的单元平均值构建的。相关的数据点是位于单元中心 $x_{j+1}$ 和 $x_j$ 的单元平均值 $u_{j+1}$ 和 $u_j$。相应的梯度线性估计为：\n$$\n(\\nabla u)_{\\text{right}} = \\frac{u_{j+1} - u_{j}}{x_{j+1} - x_{j}}\n$$\n使用给定的网格间距定义 $h_{j+1/2} \\equiv x_{j+1} - x_j$，上式变为：\n$$\n(\\nabla u)_{\\text{right}} = \\frac{u_{j+1} - u_{j}}{h_{j+1/2}}\n$$\n这表示在区间 $[x_j, x_{j+1}]$ 上的平均梯度。\n\n问题明确指出，$r_{j+1/2}$ 是左偏估计与右偏估计的比值。因此，我们使用上面推导出的表达式来构建这个比率：\n$$\nr_{j+1/2} = \\frac{(\\nabla u)_{\\text{left}}}{(\\nabla u)_{\\text{right}}} = \\frac{\\frac{u_{j} - u_{j-1}}{h_{j-1/2}}}{\\frac{u_{j+1} - u_{j}}{h_{j+1/2}}}\n$$\n这个表达式是一个复合分数。为了得到最终的简化形式，我们重新整理这些项：\n$$\nr_{j+1/2} = \\left( \\frac{u_{j} - u_{j-1}}{u_{j+1} - u_{j}} \\right) \\left( \\frac{h_{j+1/2}}{h_{j-1/2}} \\right)\n$$\n此表达式即为 $r_{j+1/2}$ 关于指定量的闭式结果。它表示连续梯度近似值的比率，并针对非均匀网格间距进行了正确缩放。", "answer": "$$\\boxed{\\frac{(u_{j} - u_{j-1}) h_{j+1/2}}{(u_{j+1} - u_{j}) h_{j-1/2}}}$$", "id": "2394403"}, {"introduction": "理论的价值最终体现在实践中。这项综合性练习 [@problem_id:2448960] 将让你有机会亲手实现并比较几种主流通量限制器（如 Minmod、Superbee 和 Van Leer）的性能。通过模拟一个尖锐间断（方波）的平流过程，你将能够直观地观察并量化地评估不同限制器在数值耗散与振荡抑制之间的权衡，从而巩固你对通量限制器工作原理与实际效果的理解。", "problem": "考虑一维线性平流方程\n$$\n\\frac{\\partial u}{\\partial t} + a \\frac{\\partial u}{\\partial x} = 0\n$$\n该方程定义在周期性空间域 $[0,1)$ 上，具有恒定的正速度 $a>0$。所有量均为无量纲。初始条件为一个单位振幅的方波\n$$\nu(x,0) = \\begin{cases}\n1, & x \\in [0.25,\\,0.5),\\\\\n0, & \\text{otherwise,}\n\\end{cases}\n$$\n并采用周期性边界条件。\n\n使用一个包含 $N$ 个控制体积的均匀网格，网格宽度为 $\\Delta x = 1/N$，并用 $u_i^n$ 表示在时间层 $t^n$ 时，单元 $i \\in \\{0,1,\\dots,N-1\\}$ 内的单元平均值。令无量纲的 Courant 数为\n$$\n\\lambda \\equiv \\frac{a\\,\\Delta t}{\\Delta x}.\n$$\n使用守恒的显式更新格式来推进单元平均值\n$$\nu_i^{n+1} = u_i^n - \\frac{\\Delta t}{\\Delta x}\\left(F_{i+\\frac{1}{2}}^n - F_{i-\\frac{1}{2}}^n\\right),\n$$\n其中，对于 $a>0$，在交界面 $x_{i+\\frac{1}{2}}$ 处的数值通量由通量限制的高分辨率迎风格式定义\n$$\nF_{i+\\frac{1}{2}}^n = a\\,u_i^n + \\frac{a}{2}\\left(1-\\lambda\\right)\\,\\phi(r_i^n)\\,\\left(u_{i+1}^n - u_i^n\\right),\n$$\n采用模 $N$ 的周期性索引。光滑度指示器 $r_i^n$ 由下式给出\n$$\nr_i^n = \\frac{u_i^n - u_{i-1}^n}{u_{i+1}^n - u_i^n + \\varepsilon},\n$$\n其中 $\\varepsilon$ 是一个小的正数，以避免除以零，而 $\\phi(\\cdot)$ 是从以下集合中选择的通量限制器：\n- Minmod 限制器：\n$$\n\\phi_{\\text{minmod}}(r) = \\max\\left(0, \\min(1, r)\\right).\n$$\n- Superbee 限制器：\n$$\n\\phi_{\\text{superbee}}(r) = \\max\\left(0, \\min(2r,1), \\min(r,2)\\right).\n$$\n- Van Leer 限制器：\n$$\n\\phi_{\\text{van\\,Leer}}(r) = \\frac{r + |r|}{1 + |r|}.\n$$\n\n将 $u_i^0$ 初始化为方波在每个控制体积上的精确单元平均值。将解推进到最终时间 $T=1$（对于在 $[0,1)$ 上的 $a=1$ 而言，这是一个完整的平流周期），所用时间步长 $\\Delta t$ 满足 $\\lambda \\le \\text{CFL}$，且时间步数经过选择以精确达到 $T$。\n\n对于每次模拟，计算在 $t=T$ 时的以下三个定量诊断指标：\n- 相对于精确解 $u(x,T) = u(x,0)$ 的离散 $L^1$ 误差：\n$$\nE_1 = \\sum_{i=0}^{N-1} \\left|u_i^N - u_i^0\\right|\\,\\Delta x.\n$$\n- 超出名义最大值 $1$ 的最大过冲：\n$$\nO = \\max\\left(0, \\max_{i} u_i^N - 1\\right).\n$$\n- 低于名义最小值 $0$ 的最小下冲：\n$$\nU = \\min\\left(0, \\min_{i} u_i^N\\right).\n$$\n\n所有测试均采用以下固定参数：$a=1$，$T=1$，以及 $\\varepsilon = 10^{-12}$。所有量均为无量纲。所有索引操作均使用周期性边界条件。\n\n测试套件：\n为以下每一组参数 $(N,\\ \\text{CFL},\\ \\text{limiter})$ 计算 $(E_1, O, U)$：\n1. $(200,\\ 0.5,\\ \\text{minmod})$\n2. $(200,\\ 0.5,\\ \\text{superbee})$\n3. $(200,\\ 0.5,\\ \\text{van\\,Leer})$\n4. $(200,\\ 0.95,\\ \\text{superbee})$\n5. $(40,\\ 0.5,\\ \\text{van\\,Leer})$\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个由方括号括起来的、以逗号分隔的浮点数列表。按照测试套件的精确顺序，逐个将三元组展开，汇总这些值，即：\n$$\n[E_1^{(1)},\\,O^{(1)},\\,U^{(1)},\\,E_1^{(2)},\\,O^{(2)},\\,U^{(2)},\\,E_1^{(3)},\\,O^{(3)},\\,U^{(3)},\\,E_1^{(4)},\\,O^{(4)},\\,U^{(4)},\\,E_1^{(5)},\\,O^{(5)},\\,U^{(5)}].\n$$\n在打印输出中，每个浮点数必须精确到 $6$ 位小数。不应打印任何额外文本。", "solution": "该问题要求对一维线性平流方程进行数值求解，\n$$\n\\frac{\\partial u}{\\partial t} + a \\frac{\\partial u}{\\partial x} = 0,\n$$\n该方程描述了一个标量 $u(x,t)$ 在周期性域 $x \\in [0,1)$ 上以恒定的正平流速度 $a > 0$ 运动。此方程是典型的双曲守恒律。其精确解是初始剖面的简单平移，$u(x,t) = u_0(x-at)$。对于给定的参数 $a=1$ 和最终时间 $T=1$，在周期性域 $[0,1)$ 上的精确解与初始条件相同，即 $u(x,T) = u(x-1,0) = u(x,0)$。\n\n数值解将使用有限体积法获得。该域被离散为 $N$ 个均匀的控制体积（或称单元），每个控制体积的宽度为 $\\Delta x = 1/N$。第 $i$ 个单元（$i \\in \\{0, 1, \\dots, N-1\\}$）占据空间区间 $[x_{i-1/2}, x_{i+1/2}]$，其中 $x_{i-1/2} = i\\Delta x$。数值解由单元平均值表示，\n$$\nu_i^n \\approx \\frac{1}{\\Delta x} \\int_{x_{i-1/2}}^{x_{i+1/2}} u(x, t^n) \\, dx.\n$$\n初始条件 $u_i^0$ 是通过对给定的方波剖面 $u(x,0)$ 精确计算此积分得到的。对于单元 $i$，初始平均值是波占据该单元体积的分数，由下式给出\n$$\nu_i^0 = \\frac{1}{\\Delta x} \\int_{i\\Delta x}^{(i+1)\\Delta x} u(x,0) \\, dx = \\frac{\\text{length}([i\\Delta x, (i+1)\\Delta x] \\cap [0.25, 0.5))}{\\Delta x}.\n$$\n其计算方式为 $u_i^0 = \\max(0, \\min((i+1)\\Delta x, 0.5) - \\max(i\\Delta x, 0.25)) / \\Delta x$。这种初始化确保了离散总质量 $\\sum_i u_i^0 \\Delta x$ 与连续初始条件相一致。\n\n时间演化由显式守恒公式控制：\n$$\nu_i^{n+1} = u_i^n - \\frac{\\Delta t}{\\Delta x} \\left( F_{i+\\frac{1}{2}}^n - F_{i-\\frac{1}{2}}^n \\right).\n$$\n这种形式保证了单元 $i$ 中平均值的变化仅由跨越其边界 $x_{i-1/2}$ 和 $x_{i+1/2}$ 的净通量引起，从而确保了离散守恒性。时间步长 $\\Delta t$ 的确定方式是，使得最终时间 $T$ 能在整数个步数 $N_t$ 内达到。给定一个 Courant-Friedrichs-Lewy (CFL) 数，最大允许时间步长为 $\\Delta t_{\\max} = \\text{CFL} \\cdot \\Delta x / a$。我们选择时间步数为 $N_t = \\lceil T/\\Delta t_{\\max} \\rceil$，则实际使用的时间步长为 $\\Delta t = T/N_t$。由此产生的 Courant 数 $\\lambda = a \\Delta t / \\Delta x$ 保证小于或等于指定的 $\\text{CFL}$ 值，这是显式格式稳定性的一个必要条件。\n\n该方法的核心在于数值通量 $F_{i+1/2}^n$ 的定义。指定的通量是一种高分辨率、通量限制的格式。对于 $a>0$，单元 $i$ 和 $i+1$ 之间的交界面 $x_{i+1/2}$ 处的通量由下式给出\n$$\nF_{i+\\frac{1}{2}}^n = a\\,u_i^n + \\frac{a}{2}\\left(1-\\lambda\\right)\\,\\phi(r_i^n)\\,\\left(u_{i+1}^n - u_i^n\\right).\n$$\n第一项 $a\\,u_i^n$ 是一阶迎风通量。仅使用此通量会得到一个稳定但耗散性很强的格式，它会抹平尖锐的特征。第二项是一个受限的反扩散修正项。构建此项的目的是为了抵消一阶格式的过度数值扩散，同时防止在间断附近引入伪振荡，这是高阶线性格式（例如 Lax-Wendroff 格式）常见的问题。\n\n该修正项由一个通量限制器函数 $\\phi(r)$ 调节，该函数取决于光滑度指示器，\n$$\nr_i^n = \\frac{u_i^n - u_{i-1}^n}{u_{i+1}^n - u_i^n + \\varepsilon}.\n$$\n比率 $r_i^n$ 比较了迎风单元的梯度 $(u_i^n - u_{i-1}^n)$ 与顺风单元的梯度 $(u_{i+1}^n - u_i^n)$。在解的光滑区域，$r \\approx 1$，此时应选择限制器 $\\phi(r)$ 以使格式趋近于更高阶的精度。在间断或极值附近，$r$ 值会显著变化，此时限制器必须减小修正项的量级，即 $\\phi \\to 0$，从而迫使格式退化为稳健的一阶迎风方法。这种自适应行为是实现高分辨率而无振荡的关键，这一特性被称为总变差递减 (Total Variation Diminishing, TVD)。参数 $\\varepsilon=10^{-12}$ 是一个小量，用于防止在梯度 $u_{i+1}^n - u_i^n$ 为零时出现除以零的情况。\n\n问题指定了三种不同的通量限制器：\n1.  **Minmod**：$\\phi_{\\text{minmod}}(r) = \\max(0, \\min(1, r))$。这是 TVD 限制器中耗散性最强的一种，它能强力保证单调性（不产生新的极值），但代价是比其他限制器更能抹平剖面。\n2.  **Superbee**：$\\phi_{\\text{superbee}}(r) = \\max(0, \\min(2r,1), \\min(r,2))$。这是一种更具压缩性的限制器，旨在保持接触间断的尖锐分辨率。它的耗散性低于 Minmod，但可能会使光滑剖面变得略微陡峭。\n3.  **Van Leer**：$\\phi_{\\text{van\\,Leer}}(r) = \\frac{r + |r|}{1 + |r|}$。这种限制器在控制振荡和保持精度之间提供了良好的平衡，并且是可微的，这在某些情况下可能是有利的。\n\n模拟过程通过迭代应用更新公式 $N_t$ 步来进行。周期性边界条件通过对所有空间索引使用模运算来强制执行，例如，$u_{N} \\equiv u_0$ 和 $u_{-1} \\equiv u_{N-1}$。达到最终时间 $T$ 后，将数值解 $u_i^{N_t}$与初始（也是精确的最终）解 $u_i^0$进行比较，以计算 $L^1$ 误差 $E_1$、最大过冲 $O$ 和最小下冲 $U$。这些诊断指标量化了每组参数下格式的精度和单调性保持特性。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the 1D linear advection equation using a high-resolution flux-limited scheme\n    for a set of test cases and prints the diagnostic results.\n    \"\"\"\n\n    # --- Flux Limiter Functions ---\n    def limiter_minmod(r):\n        return np.maximum(0, np.minimum(1, r))\n\n    def limiter_superbee(r):\n        term1 = np.minimum(2 * r, 1)\n        term2 = np.minimum(r, 2)\n        return np.maximum(0, np.maximum(term1, term2))\n\n    def limiter_vanleer(r):\n        # Note: abs(r) is used, equivalent to |r|\n        # Add a small epsilon to the denominator to avoid division by zero if r = -1\n        return (r + np.abs(r)) / (1 + np.abs(r) + 1e-15)\n\n    limiter_map = {\n        'minmod': limiter_minmod,\n        'superbee': limiter_superbee,\n        'van_Leer': limiter_vanleer\n    }\n\n    # --- Problem Parameters ---\n    a = 1.0\n    T = 1.0\n    epsilon = 1e-12\n\n    test_cases = [\n        (200, 0.5, 'minmod'),\n        (200, 0.5, 'superbee'),\n        (200, 0.5, 'van_Leer'),\n        (200, 0.95, 'superbee'),\n        (40, 0.5, 'van_Leer'),\n    ]\n\n    all_results = []\n\n    for N, CFL, limiter_name in test_cases:\n        # --- Discretization ---\n        dx = 1.0 / N\n        x_faces = np.linspace(0.0, 1.0, N + 1)\n        \n        # --- Initial Condition (Cell Averages) ---\n        # u(x,0) is 1 on [0.25, 0.5), 0 otherwise\n        overlap = np.maximum(0, np.minimum(x_faces[1:], 0.5) - np.maximum(x_faces[:-1], 0.25))\n        u0 = overlap / dx\n        \n        # --- Time Stepping ---\n        dt_max = CFL * dx / a\n        num_steps = int(np.ceil(T / dt_max))\n        dt = T / num_steps\n        lambda_val = a * dt / dx\n\n        # --- Select Limiter ---\n        selected_limiter = limiter_map[limiter_name]\n        \n        # --- Time Evolution Loop ---\n        u_current = u0.copy()\n        \n        for _ in range(num_steps):\n            # Enforce periodic boundary conditions using np.roll\n            u_im1 = np.roll(u_current, 1)  # u_{i-1}\n            u_ip1 = np.roll(u_current, -1) # u_{i+1}\n            \n            # Gradients\n            du_forward = u_ip1 - u_current  # u_{i+1} - u_i\n            du_backward = u_current - u_im1 # u_i - u_{i-1}\n            \n            # Smoothness indicator r\n            # Suppress division by zero warnings, handled by epsilon\n            with np.errstate(divide='ignore', invalid='ignore'):\n                r = du_backward / (du_forward + epsilon)\n                r[np.isnan(r)] = 0  # Handle potential 0/0 -> NaN cases\n\n            # Limiter values\n            phi = selected_limiter(r)\n            \n            # Numerical flux F_{i+1/2}\n            # F[i] corresponds to F_{i+1/2}\n            flux = a * u_current + (a / 2.0) * (1.0 - lambda_val) * phi * du_forward\n            \n            # Flux difference across cell i: F_{i+1/2} - F_{i-1/2}\n            flux_diff = flux - np.roll(flux, 1)\n            \n            # Update solution\n            u_current -= (dt / dx) * flux_diff\n\n        u_final = u_current\n\n        # --- Diagnostics ---\n        # L1 error\n        e1 = np.sum(np.abs(u_final - u0)) * dx\n        \n        # Overshoot\n        overshoot = np.maximum(0, np.max(u_final) - 1.0)\n        \n        # Undershoot\n        # np.min(u_final) could be positive, so we need min(0, ...)\n        undershoot = np.minimum(0, np.min(u_final))\n        \n        # Append results for this case\n        all_results.extend([e1, overshoot, undershoot])\n\n    # --- Final Output Formatting ---\n    formatted_results = [f\"{val:.6f}\" for val in all_results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2448960"}]}