{"hands_on_practices": [{"introduction": "原子间势能函数是所有分子模拟的核心。为了在模拟中正确地计算驱动粒子运动的力，我们必须理解势能和力之间的基本关系。本练习将通过对一个类 Lennard-Jones 势进行解析推导，帮助你巩固这一核心概念，即力是势能的负梯度（$\\mathbf{F} = -\\nabla U(r)$）。通过亲手推导力和维里表达式，你将更深刻地理解分子动力学引擎如何在每一步计算这些关键物理量。[@problem_id:2404403]", "problem": "考虑一个单原子系统，其对心相互作用由以下类 Lennard-Jones 势描述：\n$$\nU(r) = 4\\,\\varepsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right],\n$$\n其中 $r = |\\mathbf{r}_{ij}|$ 是两个粒子间的标量距离，$\\mathbf{r}_{ij}$ 是粒子间距矢量，$\\sigma$ 是一个特征长度标度，$\\varepsilon$ 是一个能量标度。假设该相互作用是球对称的且具有对可加性。仅使用以下基本定义：(i) 力是势的负梯度，以及 (ii) 标量对维里贡献定义为 $w(r) = \\mathbf{r}_{ij} \\cdot \\mathbf{F}_{ij}(r)$，推导出力矢量 $\\mathbf{F}_{ij}(r)$ 和标量对维里 $w(r)$ 作为 $r$、$\\sigma$ 和 $\\varepsilon$ 的函数的解析表达式。将力表示为沿径向单位矢量 $\\hat{\\mathbf{r}}_{ij} = \\mathbf{r}_{ij}/r$ 的形式。\n\n最终结果应为仅用 $r$、$\\sigma$ 和 $\\varepsilon$ 表示的闭合形式表达式。将力表示为矢量，维里表示为标量。不要代入数值。最终的方框答案中不要包含单位。将两个结果以单行矩阵 $\\begin{pmatrix}\\mathbf{F}_{ij}(r) & w(r)\\end{pmatrix}$ 的形式一并报告。", "solution": "该问题要求从给定的对心势 $U(r)$ 推导粒子间力矢量 $\\mathbf{F}_{ij}(r)$ 和标量对维里 $w(r)$。该问题提法明确且科学上合理，是经典力学和统计物理学中的一个标准练习。我们将根据所提供的基本定义进行推导。\n\n原子间势给出如下：\n$$\nU(r) = 4\\,\\varepsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\n$$\n其中 $r = |\\mathbf{r}_{ij}|$ 是粒子 $i$ 和 $j$ 之间的标量距离。\n\n首先，我们推导力矢量 $\\mathbf{F}_{ij}$。力被定义为势能相对于粒子间距矢量 $\\mathbf{r}_{ij}$ 的负梯度：\n$$\n\\mathbf{F}_{ij} = -\\nabla_{\\mathbf{r}_{ij}} U(r)\n$$\n由于势 $U$ 仅是标量距离 $r$ 的函数，我们可以对梯度应用链式法则：\n$$\n\\nabla_{\\mathbf{r}_{ij}} U(r) = \\frac{dU}{dr} \\nabla_{\\mathbf{r}_{ij}} r\n$$\n标量距离 $r = |\\mathbf{r}_{ij}| = \\sqrt{x_{ij}^2 + y_{ij}^2 + z_{ij}^2}$ 的梯度是径向单位矢量 $\\hat{\\mathbf{r}}_{ij}$：\n$$\n\\nabla_{\\mathbf{r}_{ij}} r = \\frac{\\mathbf{r}_{ij}}{r} = \\hat{\\mathbf{r}}_{ij}\n$$\n因此，力矢量可以表示为：\n$$\n\\mathbf{F}_{ij}(r) = -\\frac{dU}{dr} \\hat{\\mathbf{r}}_{ij}\n$$\n现在我们计算势 $U(r)$ 对 $r$ 的导数。为清晰起见，我们将 $U(r)$ 重写为：\n$$\nU(r) = 4\\,\\varepsilon\\left(\\sigma^{10}r^{-10} - \\sigma^{5}r^{-5}\\right)\n$$\n导数为：\n$$\n\\frac{dU}{dr} = 4\\,\\varepsilon \\frac{d}{dr}\\left(\\sigma^{10}r^{-10} - \\sigma^{5}r^{-5}\\right) = 4\\,\\varepsilon\\left(\\sigma^{10}(-10)r^{-11} - \\sigma^{5}(-5)r^{-6}\\right)\n$$\n$$\n\\frac{dU}{dr} = 4\\,\\varepsilon\\left(-10 \\frac{\\sigma^{10}}{r^{11}} + 5 \\frac{\\sigma^{5}}{r^{6}}\\right)\n$$\n提取公因式后，我们可以写成：\n$$\n\\frac{dU}{dr} = \\frac{20\\,\\varepsilon}{r} \\left(-2 \\frac{\\sigma^{10}}{r^{10}} + \\frac{\\sigma^{5}}{r^{5}}\\right) = -\\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\n$$\n将此导数代回力的表达式中，我们得到：\n$$\n\\mathbf{F}_{ij}(r) = - \\left(-\\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\\right) \\hat{\\mathbf{r}}_{ij}\n$$\n$$\n\\mathbf{F}_{ij}(r) = \\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right] \\hat{\\mathbf{r}}_{ij}\n$$\n这就是力矢量的解析表达式。\n\n接下来，我们推导标量对维里 $w(r)$。其定义给出如下：\n$$\nw(r) = \\mathbf{r}_{ij} \\cdot \\mathbf{F}_{ij}(r)\n$$\n我们代入推导出的 $\\mathbf{F}_{ij}(r)$ 表达式：\n$$\nw(r) = \\mathbf{r}_{ij} \\cdot \\left(\\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right] \\hat{\\mathbf{r}}_{ij}\\right)\n$$\n使用关系式 $\\mathbf{r}_{ij} = r \\hat{\\mathbf{r}}_{ij}$ 并注意到单位矢量与自身的点积为 1，即 $\\hat{\\mathbf{r}}_{ij} \\cdot \\hat{\\mathbf{r}}_{ij} = 1$，我们发现：\n$$\nw(r) = (r \\hat{\\mathbf{r}}_{ij}) \\cdot \\left(\\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right] \\hat{\\mathbf{r}}_{ij}\\right)\n$$\n$$\nw(r) = r \\left(\\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\\right) (\\hat{\\mathbf{r}}_{ij} \\cdot \\hat{\\mathbf{r}}_{ij})\n$$\n$r$ 因子相互抵消，剩下：\n$$\nw(r) = 20\\,\\varepsilon \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\n$$\n这就是标量对维里的解析表达式。另一种求维里的等效方法是使用表达式 $w(r) = -r \\frac{dU}{dr}$，这会得到相同的结果：\n$$\nw(r) = -r \\left(-\\frac{20\\,\\varepsilon}{r} \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\\right) = 20\\,\\varepsilon \\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\n$$\n推导完成。我们已经得到了力矢量和标量对维里的闭合形式表达式。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{20\\,\\varepsilon}{r}\\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right]\\hat{\\mathbf{r}}_{ij} & 20\\,\\varepsilon\\left[2\\left(\\frac{\\sigma}{r}\\right)^{10} - \\left(\\frac{\\sigma}{r}\\right)^{5}\\right] \\end{pmatrix}}\n$$", "id": "2404403"}, {"introduction": "在掌握了从势能到力的基本推导之后，我们来探讨一个在实际计算中至关重要的问题：如何处理长程力。在有限尺寸的模拟盒子中，像库仑相互作用这样的长程力如果被简单地在截断半径处“硬性”切断，会引入严重的能量不守恒和数值不稳定性。本练习将让你通过编程实践，量化比较“硬截断”和使用平滑“切换函数”两种方法所产生的效应，从而揭示后者在保证模拟稳定性和物理真实性方面的优越性。[@problem_id:2404374]", "problem": "您的任务是分析当库仑势在截断距离处被突然截断与通过切换函数平滑地切换到零时，在逐对静电相互作用中引入的伪影。在约化单位制下进行计算，其中库仑常数 $k_\\mathrm{e}$ 等于 $1$，且两个电荷的乘积绝对值满足 $\\lvert q_i q_j \\rvert = 1$。在这些约化单位下，未切换的对势为 $U(r) = 1/r$，相应的力大小为 $F(r) = 1/r^2$，其中 $r$ 是两个点电荷之间的标量分离距离。\n\n定义以下两种对相互作用模型：\n\n- 在截断距离 $r_\\mathrm{c}$ 处的锐截断：\n  - 势：\n    $$\n    U_\\mathrm{T}(r; r_\\mathrm{c}) =\n    \\begin{cases}\n    \\dfrac{1}{r}, & r < r_\\mathrm{c},\\\\\n    0, & r \\ge r_\\mathrm{c}.\n    \\end{cases}\n    $$\n  - 力大小：\n    $$\n    F_\\mathrm{T}(r; r_\\mathrm{c}) =\n    \\begin{cases}\n    \\dfrac{1}{r^2}, & r < r_\\mathrm{c},\\\\\n    0, & r \\ge r_\\mathrm{c}.\n    \\end{cases}\n    $$\n\n- 使用立方切换函数 $S(r; r_\\mathrm{on}, r_\\mathrm{c})$ 进行切换，该函数在 $r \\le r_\\mathrm{on}$ 时等于 $1$，在 $r \\ge r_\\mathrm{c}$ 时等于 $0$，并在 $r \\in (r_\\mathrm{on}, r_\\mathrm{c})$ 内平滑变化：\n  - 定义 $x(r) = \\dfrac{r - r_\\mathrm{on}}{r_\\mathrm{c} - r_\\mathrm{on}}$。\n  - 切换函数：\n    $$\n    S(r; r_\\mathrm{on}, r_\\mathrm{c}) =\n    \\begin{cases}\n    1, & r \\le r_\\mathrm{on},\\\\\n    1 - 3x(r)^2 + 2x(r)^3, & r_\\mathrm{on} < r < r_\\mathrm{c},\\\\\n    0, & r \\ge r_\\mathrm{c}.\n    \\end{cases}\n    $$\n  - 切换后的势：\n    $$\n    U_\\mathrm{S}(r; r_\\mathrm{on}, r_\\mathrm{c}) = S(r; r_\\mathrm{on}, r_\\mathrm{c}) \\cdot \\dfrac{1}{r}.\n    $$\n  - 切换后的力大小，通过将 $F(r) = -\\dfrac{\\mathrm{d}U(r)}{\\mathrm{d}r}$ 应用于 $U_\\mathrm{S}$ 得到：\n    $$\n    F_\\mathrm{S}(r; r_\\mathrm{on}, r_\\mathrm{c}) = S(r; r_\\mathrm{on}, r_\\mathrm{c}) \\cdot \\dfrac{1}{r^2} - \\dfrac{\\mathrm{d}S(r; r_\\mathrm{on}, r_\\mathrm{c})}{\\mathrm{d}r} \\cdot \\dfrac{1}{r}.\n    $$\n\n对于任何选定的参数 $(r_\\mathrm{on}, r_\\mathrm{c})$（其中 $0 \\le r_\\mathrm{on} < r_\\mathrm{c}$），定义一个无穷小分离量 $\\epsilon > 0$，并通过跨越 $r_\\mathrm{c}$ 的绝对差来量化每个模型在截断处的表观跳跃：\n- 势能跳跃大小：\n  $$\n  \\Delta U_\\mathrm{T} = \\left| U_\\mathrm{T}(r_\\mathrm{c} - \\epsilon; r_\\mathrm{c}) - U_\\mathrm{T}(r_\\mathrm{c} + \\epsilon; r_\\mathrm{c}) \\right|,\n  \\quad\n  \\Delta U_\\mathrm{S} = \\left| U_\\mathrm{S}(r_\\mathrm{c} - \\epsilon; r_\\mathrm{on}, r_\\mathrm{c}) - U_\\mathrm{S}(r_\\mathrm{c} + \\epsilon; r_\\mathrm{on}, r_\\mathrm{c}) \\right|.\n  $$\n- 力跳跃大小：\n  $$\n  \\Delta F_\\mathrm{T} = \\left| F_\\mathrm{T}(r_\\mathrm{c} - \\epsilon; r_\\mathrm{c}) - F_\\mathrm{T}(r_\\mathrm{c} + \\epsilon; r_\\mathrm{c}) \\right|,\n  \\quad\n  \\Delta F_\\mathrm{S} = \\left| F_\\mathrm{S}(r_\\mathrm{c} - \\epsilon; r_\\mathrm{on}, r_\\mathrm{c}) - F_\\mathrm{S}(r_\\mathrm{c} + \\epsilon; r_\\mathrm{on}, r_\\mathrm{c}) \\right|.\n  $$\n\n使用固定的无穷小量 $\\epsilon = 10^{-6}$（无量纲）。在上述定义的约化单位中，所有量均为无量纲。对于下面的每个测试用例，计算列表 $[\\Delta U_\\mathrm{T}, \\Delta U_\\mathrm{S}, \\Delta F_\\mathrm{T}, \\Delta F_\\mathrm{S}]$。\n\n测试套件（每项为 $(r_\\mathrm{on}, r_\\mathrm{c})$）：\n- 情况 A：$(0.8, 1.0)$。\n- 情况 B：$(0.99, 1.0)$。\n- 情况 C：$(0.5, 2.0)$。\n\n最终输出要求：\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，每个测试用例按上述相同顺序贡献其自己的列表。例如，输出必须类似于 $[[a_1,a_2,a_3,a_4],[b_1,b_2,b_3,b_4],[c_1,c_2,c_3,c_4]]$，不含空格。\n- 在格式化输出之前，将每个浮点值四舍五入到恰好 $10$ 位小数。", "solution": "用户提出了一个来自计算工程领域的问题，该问题涉及分子模拟中对长程静电相互作用的处理。任务是量化两种不同方案（锐截断和平滑切换函数）在截断距离 $r_\\mathrm{c}$ 处势能和力的不连续性，即“跳跃”。所有计算均在一个约化单位制中执行，其中 $k_\\mathrm{e} = 1$ 且 $|q_i q_j| = 1$。\n\n首先，我们来分析问题陈述。问题为两种势模型提供了完整且一致的定义，即用于锐截断的 $U_\\mathrm{T}(r)$ 和用于平滑切换的 $U_\\mathrm{S}(r)$。相应的力大小 $F_\\mathrm{T}(r)$ 和 $F_\\mathrm{S}(r)$ 是从基本关系 $F(r) = -\\frac{\\mathrm{d}U(r)}{\\mathrm{d}r}$ 正确推导出来的。势和切换函数的数学形式是该领域的标准形式。目标陈述清晰，并且提供了所有必需的参数，包括测试用例 $(r_\\mathrm{on}, r_\\mathrm{c})$ 和无穷小评估距离 $\\epsilon = 10^{-6}$。该问题在科学上是合理的、适定的和客观的。因此，它被认为是有效的。\n\n我们开始求解。目标是计算两种模型在截断距离 $r_\\mathrm{c}$ 处势和力的跳跃大小。跳跃被定义为函数在 $r_\\mathrm{c} - \\epsilon$ 和 $r_\\mathrm{c} + \\epsilon$ 处值的绝对差。\n\n1.  **锐截断模型（$U_\\mathrm{T}, F_\\mathrm{T}$）的分析**\n\n    势 $U_\\mathrm{T}(r; r_\\mathrm{c})$ 定义为：当 $r < r_\\mathrm{c}$ 时为 $\\frac{1}{r}$，当 $r \\ge r_\\mathrm{c}$ 时为 $0$。\n    力 $F_\\mathrm{T}(r; r_\\mathrm{c})$ 定义为：当 $r < r_\\mathrm{c}$ 时为 $\\frac{1}{r^2}$，当 $r \\ge r_\\mathrm{c}$ 时为 $0$。\n\n    截断距离两侧紧邻的值为：\n    -   $U_\\mathrm{T}(r_\\mathrm{c} - \\epsilon) = \\frac{1}{r_\\mathrm{c} - \\epsilon}$\n    -   $U_\\mathrm{T}(r_\\mathrm{c} + \\epsilon) = 0$\n    -   $F_\\mathrm{T}(r_\\mathrm{c} - \\epsilon) = \\frac{1}{(r_\\mathrm{c} - \\epsilon)^2}$\n    -   $F_\\mathrm{T}(r_\\mathrm{c} + \\epsilon) = 0$\n\n    因此，跳跃大小为：\n    $$\n    \\Delta U_\\mathrm{T} = \\left| \\frac{1}{r_\\mathrm{c} - \\epsilon} - 0 \\right| = \\frac{1}{r_\\mathrm{c} - \\epsilon}\n    $$\n    $$\n    \\Delta F_\\mathrm{T} = \\left| \\frac{1}{(r_\\mathrm{c} - \\epsilon)^2} - 0 \\right| = \\frac{1}{(r_\\mathrm{c} - \\epsilon)^2}\n    $$\n    这些函数在 $r = r_\\mathrm{c}$ 处具有固有的不连续性。势的跳跃导致在 $r_\\mathrm{c}$ 处出现一个非物理的无限大的力（一个狄拉克δ函数），这是高保真模拟中通常避免此类截断的主要原因。\n\n2.  **切换模型（$U_\\mathrm{S}, F_\\mathrm{S}$）的分析**\n\n    切换后的势为 $U_\\mathrm{S}(r) = S(r) \\cdot \\frac{1}{r}$，其中 $S(r)$ 是切换函数。根据定义，对于 $r \\ge r_\\mathrm{c}$，$S(r) = 0$，这意味着 $U_\\mathrm{S}(r \\ge r_\\mathrm{c}) = 0$ 且 $F_\\mathrm{S}(r \\ge r_\\mathrm{c}) = 0$。\n    因此，$U_\\mathrm{S}(r_\\mathrm{c} + \\epsilon) = 0$ 且 $F_\\mathrm{S}(r_\\mathrm{c} + \\epsilon) = 0$。\n\n    对于在 $r_\\mathrm{c} - \\epsilon$ 处的值，我们分析切换函数 $S(r)$ 的性质。它是使用变量 $x(r) = \\frac{r - r_\\mathrm{on}}{r_\\mathrm{c} - r_\\mathrm{on}}$ 的一个三次多项式构建的。$S(x) = 1 - 3x^2 + 2x^3$ 的形式确保了在切换区间的边界处：\n    -   在 $r = r_\\mathrm{on}$ 处：$x=0$，$S(0)=1$，且 $\\frac{\\mathrm{d}S}{\\mathrm{d}r} \\propto \\frac{\\mathrm{d}S}{\\mathrm{d}x} = 6x(x-1) = 0$。\n    -   在 $r = r_\\mathrm{c}$ 处：$x=1$，$S(1)=1-3+2=0$，且 $\\frac{\\mathrm{d}S}{\\mathrm{d}r} \\propto \\frac{\\mathrm{d}S}{\\mathrm{d}x} = 6x(x-1) = 0$。\n\n    函数 $S(r)$ 及其一阶导数 $\\frac{\\mathrm{d}S}{\\mathrm{d}r}$ 对于 $r \\ge r_\\mathrm{c}$ 都是连续且等于零的。这种构造保证了势 $U_\\mathrm{S}(r)$ 和力 $F_\\mathrm{S}(r) = S(r)\\frac{1}{r^2} - \\frac{\\mathrm{d}S}{\\mathrm{d}r}\\frac{1}{r}$ 是在 $r = r_\\mathrm{c}$ 处平滑趋近于零的连续函数。因此，在严格的数学极限 $\\epsilon \\to 0$下，$\\Delta U_\\mathrm{S}$ 和 $\\Delta F_\\mathrm{S}$ 都精确为零。\n\n    然而，问题要求对一个有限的 $\\epsilon = 10^{-6}$ 进行计算。在这种情况下，在 $r_1 = r_\\mathrm{c} - \\epsilon$ 处，$S(r_1)$ 和 $\\frac{\\mathrm{d}S}{\\mathrm{d}r}|_{r_1}$ 的值将很小但非零。跳跃则按如下方式计算：\n    $$\n    \\Delta U_\\mathrm{S} = \\left| U_\\mathrm{S}(r_\\mathrm{c} - \\epsilon) - 0 \\right| = \\left| S(r_\\mathrm{c} - \\epsilon) \\cdot \\frac{1}{r_\\mathrm{c} - \\epsilon} \\right|\n    $$\n    $$\n    \\Delta F_\\mathrm{S} = \\left| F_\\mathrm{S}(r_\\mathrm{c} - \\epsilon) - 0 \\right| = \\left| S(r_\\mathrm{c} - \\epsilon) \\frac{1}{(r_\\mathrm{c} - \\epsilon)^2} - \\frac{\\mathrm{d}S}{\\mathrm{d}r}\\bigg|_{r=r_\\mathrm{c}-\\epsilon} \\frac{1}{r_\\mathrm{c} - \\epsilon} \\right|\n    $$\n    切换函数的导数是 $\\frac{\\mathrm{d}S}{\\mathrm{d}r} = \\frac{\\mathrm{d}S}{\\mathrm{d}x}\\frac{\\mathrm{d}x}{\\mathrm{d}r} = (6x^2 - 6x) \\frac{1}{r_\\mathrm{c} - r_\\mathrm{on}}$。这些非零值代表了由于在离真实截断点一个有限距离处进行评估而产生的“残余”跳跃，而不是一种内在的不连续性。\n\n3.  **计算算法**\n\n    对于每个测试用例 $(r_\\mathrm{on}, r_\\mathrm{c})$：\n    1.  设置常数：$\\epsilon = 10^{-6}$。\n    2.  定义截断下方的评估点：$r_1 = r_\\mathrm{c} - \\epsilon$。\n    3.  计算截断模型的跳跃：\n        -   $\\Delta U_\\mathrm{T} = 1 / r_1$。\n        -   $\\Delta F_\\mathrm{T} = 1 / r_1^2$。\n    4.  计算切换模型的跳跃：\n        -   计算标度化坐标：$x_1 = (r_1 - r_\\mathrm{on}) / (r_\\mathrm{c} - r_\\mathrm{on})$。\n        -   计算切换函数值：$S_1 = 1 - 3x_1^2 + 2x_1^3$。\n        -   计算势能跳跃：$\\Delta U_\\mathrm{S} = S_1 / r_1$。\n        -   计算切换函数导数：$\\frac{\\mathrm{d}S}{\\mathrm{d}r}|_{r_1} = (6x_1^2 - 6x_1) / (r_\\mathrm{c} - r_\\mathrm{on})$。\n        -   计算力值：$F_{\\mathrm{S},1} = S_1/r_1^2 - (\\frac{\\mathrm{d}S}{\\mathrm{d}r}|_{r_1}) / r_1$。\n        -   计算力跳跃：$\\Delta F_\\mathrm{S} = |F_{\\mathrm{S},1}|$。\n    5.  收集四个值 $[\\Delta U_\\mathrm{T}, \\Delta U_\\mathrm{S}, \\Delta F_\\mathrm{T}, \\Delta F_\\mathrm{S}]$。\n\n此过程对所有提供的测试用例实施。结果表明，虽然 $\\Delta U_\\mathrm{T}$ 和 $\\Delta F_\\mathrm{T}$ 的数量级为1，但 $\\Delta U_\\mathrm{S}$ 和 $\\Delta F_\\mathrm{S}$ 要小好几个数量级，这反映了切换后势和力的连续性。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Analyzes discontinuities in truncated and switched Coulomb potentials.\n    \"\"\"\n    test_cases = [\n        (0.8, 1.0),  # Case A\n        (0.99, 1.0), # Case B\n        (0.5, 2.0)   # Case C\n    ]\n    epsilon = 1e-6\n    all_results = []\n\n    for ron, rc in test_cases:\n        # Define the evaluation point just below the cutoff\n        r1 = rc - epsilon\n\n        # --- Analysis for Sharp Truncation Model ---\n        # The jump is the value just below the cutoff, as the value above is zero.\n        delta_U_T = 1.0 / r1\n        delta_F_T = 1.0 / r1**2\n\n        # --- Analysis for Switched Model ---\n        # The value above the cutoff is zero by construction. The jump is the value at r1.\n        \n        # Calculate the scaled coordinate in the switching region\n        delta_r_switch = rc - ron\n        x1 = (r1 - ron) / delta_r_switch\n\n        # Calculate the switching function S(r) at r1\n        # S(x) = 1 - 3x^2 + 2x^3\n        S1 = 1.0 - 3.0 * x1**2 + 2.0 * x1**3\n        \n        # Calculate potential jump for switched model\n        delta_U_S = S1 / r1\n\n        # Calculate the derivative of the switching function dS/dr at r1\n        # dS/dr = (dS/dx) * (dx/dr)\n        # dS/dx = -6x + 6x^2\n        # dx/dr = 1 / (rc - ron)\n        dSdx1 = -6.0 * x1 + 6.0 * x1**2\n        dSdr1 = dSdx1 / delta_r_switch\n\n        # Calculate force F_S(r) = S(r)/r^2 - (dS/dr)/r at r1\n        F_S_1 = S1 / r1**2 - dSdr1 / r1\n        \n        # The force jump is the absolute value of the force at r1\n        delta_F_S = abs(F_S_1)\n\n        case_result = [delta_U_T, delta_U_S, delta_F_T, delta_F_S]\n        all_results.append(case_result)\n\n    # Format the final output string as specified\n    def format_case(case_res):\n        formatted_nums = [f\"{x:.10f}\" for x in case_res]\n        return f\"[{','.join(formatted_nums)}]\"\n\n    output_str = f\"[{','.join([format_case(res) for res in all_results])}]\"\n    print(output_str)\n\n\nsolve()\n```", "id": "2404374"}, {"introduction": "我们已经学习了如何从给定的势函数计算力，以及如何正确地在计算中处理它们，但这些势函数中的参数（如电荷、键长等）本身从何而来？本节的高级实践将带你体验力场开发的核心任务之一：参数化。你将扮演一名计算工程师，利用高精度的量子化学计算结果作为“标准答案”，通过最小二乘法拟合出甲醛分子中各个原子的最佳部分电荷。这个练习完美地展示了如何将第一性原理的理论洞见转化为高效、实用的经典模型。[@problem_id:2404445]", "problem": "编写一个完整的程序，在原子单位制下，通过最小化力场静电势和一组代表量子力学计算的给定参考静电势值之间的差异，为甲醛分子拟合部分原子电荷。该分子包含四个原子：碳原子、氧原子和两个等价的氢原子。在原子单位制中（其中 $1/(4\\pi\\varepsilon_0)=1$），由位于位置 $\\mathbf{R}_i$ 的 $N$ 个点电荷 $q_i$ 在位置为 $\\mathbf{r}$ 的场点处产生的静电势由下式给出\n$$\nV(\\mathbf{r})=\\sum_{i=1}^{N}\\frac{q_i}{\\lVert \\mathbf{r}-\\mathbf{R}_i\\rVert}。\n$$\n对甲醛使用以下固定的原子位置（单位为玻尔）：\n- 碳 (C): $(0.00000,\\,0.00000,\\,0.00000)$\n- 氧 (O): $(2.28660,\\,0.00000,\\,0.00000)$\n- 氢 1 (H1): $(-1.03935,\\,1.80099,\\,0.00000)$\n- 氢 2 (H2): $(-1.03935,\\,-1.80099,\\,0.00000)$\n\n使用以下八个场点（单位为玻尔），其参考静电势值均已给定：\n- $\\mathbf{g}_1=(4.00000,\\,0.00000,\\,0.00000)$\n- $\\mathbf{g}_2=(-4.00000,\\,0.00000,\\,0.00000)$\n- $\\mathbf{g}_3=(0.00000,\\,4.00000,\\,0.00000)$\n- $\\mathbf{g}_4=(0.00000,\\,-4.00000,\\,0.00000)$\n- $\\mathbf{g}_5=(0.00000,\\,0.00000,\\,4.00000)$\n- $\\mathbf{g}_6=(0.00000,\\,0.00000,\\,-4.00000)$\n- $\\mathbf{g}_7=(3.00000,\\,3.00000,\\,0.00000)$\n- $\\mathbf{g}_8=(-3.00000,\\,-3.00000,\\,0.00000)$\n\n在这些场点上相应的参考静电势值 $V_{\\mathrm{ref}}(\\mathbf{g}_k)$（以原子单位的电势计）如下：\n- $V_{\\mathrm{ref}}(\\mathbf{g}_1)=-0.17942$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_2)=0.05318$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_3)=0.02462$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_4)=0.02462$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_5)=0.01088$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_6)=0.01088$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_7)=-0.05177$\n- $V_{\\mathrm{ref}}(\\mathbf{g}_8)=0.05125$\n\n设未知的部分电荷为 $\\mathbf{q}=[q_{\\mathrm{C}},\\,q_{\\mathrm{O}},\\,q_{\\mathrm{H1}},\\,q_{\\mathrm{H2}}]^{\\top}$，单位为基本电荷。通过最小化模型计算的电势与参考值之间的加权残差平方和，并辅以一个各向同性的 Tikhonov 正则化项，来确定 $\\mathbf{q}$：\n$$\n\\min_{\\mathbf{q}} \\; \\sum_{k=1}^{8} w_k \\left( \\sum_{i=1}^{4} \\frac{q_i}{\\lVert \\mathbf{g}_k-\\mathbf{R}_i\\rVert} - V_{\\mathrm{ref}}(\\mathbf{g}_k) \\right)^2 \\;+\\; \\lambda \\sum_{i=1}^{4} q_i^2\n$$\n需满足以下精确的线性等式约束：\n1. 分子电中性：$q_{\\mathrm{C}}+q_{\\mathrm{O}}+q_{\\mathrm{H1}}+q_{\\mathrm{H2}}=0$。\n2. 氢原子等价性：$q_{\\mathrm{H1}}-q_{\\mathrm{H2}}=0$。\n\n所有距离必须以玻尔为单位，所有电势以原子单位，所有电荷以基本电荷为单位。最终拟合的电荷必须按如下规定，以基本电荷为单位报告。\n\n测试套件。您的程序必须针对以下三个测试用例求解该问题，这些用例的非负权重 $\\{w_k\\}_{k=1}^8$ 和正则化参数 $\\lambda$ 不同：\n- 用例 A（基准）：$\\mathbf{w}=[1,\\,1,\\,1,\\,1,\\,1,\\,1,\\,1,\\,1]$, $\\lambda=0$。\n- 用例 B（重加权，轻度正则化）：$\\mathbf{w}=[2,\\,1,\\,1,\\,1,\\,1,\\,1,\\,2,\\,1]$, $\\lambda=0.001$。\n- 用例 C（稀疏强调，强度正则化）：$\\mathbf{w}=[0,\\,5,\\,0,\\,0,\\,0,\\,0,\\,0,\\,5]$, $\\lambda=1.000$。\n\n答案规格和最终输出格式。对于每个测试用例，计算精确满足约束条件的拟合电荷向量 $\\mathbf{q}$。将 $\\mathbf{q}$ 的每个分量以基本电荷为单位表示，并将每个分量四舍五入到六位小数。你的程序应生成单行输出，包含结果，格式为由三个列表组成的逗号分隔列表，每个测试用例一个列表，顺序为 $[q_{\\mathrm{C}},q_{\\mathrm{O}},q_{\\mathrm{H1}},q_{\\mathrm{H2}}]$。例如，要求的格式是\n$[[q_{\\mathrm{C}}^{(A)},q_{\\mathrm{O}}^{(A)},q_{\\mathrm{H1}}^{(A)},q_{\\mathrm{H2}}^{(A)}],[q_{\\mathrm{C}}^{(B)},q_{\\mathrm{O}}^{(B)},q_{\\mathrm{H1}}^{(B)},q_{\\mathrm{H2}}^{(B)}],[q_{\\mathrm{C}}^{(C)},q_{\\mathrm{O}}^{(C)},q_{\\mathrm{H1}}^{(C)},q_{\\mathrm{H2}}^{(C)}]]$，其中每个标量都四舍五入到六位小数，不含其他字符。此问题中没有角度量。所有答案必须以指定的单位和格式表示，并汇集到所要求的单行输出中。", "solution": "所提出的问题是一个约束二次优化任务，这是计算化学中一种常见的程序，称为静电势（ESP）拟合。我们需要为甲醛分子确定一组四个部分原子电荷 $\\mathbf{q} = [q_{\\mathrm{C}},\\,q_{\\mathrm{O}},\\,q_{\\mathrm{H1}},\\,q_{\\mathrm{H2}}]^{\\top}$，以最佳地重现一组给定的量子力学参考电势。这是一个可以解析求解的适定问题。\n\n目标是最小化成本函数 $J(\\mathbf{q})$，该函数由加权残差平方和与一个 Tikhonov 正则化项组成：\n$$\nJ(\\mathbf{q}) = \\sum_{k=1}^{M} w_k \\left( V_{\\mathrm{model}}(\\mathbf{g}_k) - V_{\\mathrm{ref}}(\\mathbf{g}_k) \\right)^2 \\;+\\; \\lambda \\sum_{i=1}^{N} q_i^2\n$$\n此处，$M=8$ 是场点数，$N=4$ 是原子数。由位于原子位置 $\\mathbf{R}_i$ 的点电荷 $q_i$ 生成的模型电势 $V_{\\mathrm{model}}(\\mathbf{g}_k)$ 是电荷的线性函数：\n$$\nV_{\\mathrm{model}}(\\mathbf{g}_k) = \\sum_{i=1}^{N} \\frac{q_i}{\\lVert \\mathbf{g}_k-\\mathbf{R}_i\\rVert}\n$$\n我们可以用矩阵形式表示这种关系。设 $\\mathbf{V}_{\\mathrm{ref}} \\in \\mathbb{R}^{M}$ 为参考电势值的向量，$\\mathbf{V}_{\\mathrm{model}} \\in \\mathbb{R}^{M}$ 为场点处的模型电势向量。则有 $\\mathbf{V}_{\\mathrm{model}} = \\mathbf{A}\\mathbf{q}$，其中 $\\mathbf{A}$ 是一个 $M \\times N$ 矩阵，其元素是场点与原子中心之间距离的倒数：\n$$\nA_{ki} = \\frac{1}{\\lVert \\mathbf{g}_k-\\mathbf{R}_i\\rVert}\n$$\n目标函数可以用矩阵代数写成：\n$$\nJ(\\mathbf{q}) = (\\mathbf{A}\\mathbf{q} - \\mathbf{V}_{\\mathrm{ref}})^{\\top} \\mathbf{W} (\\mathbf{A}\\mathbf{q} - \\mathbf{V}_{\\mathrm{ref}}) + \\lambda \\mathbf{q}^{\\top}\\mathbf{I}\\mathbf{q}\n$$\n其中 $\\mathbf{W}$ 是一个由权重 $w_k$ 构成的 $M \\times M$ 对角矩阵，$\\mathbf{I}$ 是 $N \\times N$ 的单位矩阵。\n\n该最小化问题受两个线性等式约束：\n1.  电中性：$q_{\\mathrm{C}}+q_{\\mathrm{O}}+q_{\\mathrm{H1}}+q_{\\mathrm{H2}}=0$\n2.  等价性：$q_{\\mathrm{H1}}-q_{\\mathrm{H2}}=0$\n\n这些约束减少了系统的独立自由度。我们可以求解这些约束，用一个更小的独立变量集合来表示这4个电荷。从第二个约束，我们得到 $q_{\\mathrm{H1}} = q_{\\mathrm{H2}}$。让我们将这个共同的电荷表示为 $q_{\\mathrm{H}}$。将其代入第一个约束得到 $q_{\\mathrm{C}} + q_{\\mathrm{O}} + 2q_{\\mathrm{H}} = 0$，这可以重新整理以将 $q_{\\mathrm{O}}$ 表示为 $q_{\\mathrm{O}} = -q_{\\mathrm{C}} - 2q_{\\mathrm{H}}$。\n\n因此，整个电荷向量 $\\mathbf{q} \\in \\mathbb{R}^4$ 可以由一个包含两个独立变量的向量 $\\mathbf{q}' = [q_{\\mathrm{C}}, q_{\\mathrm{H}}]^{\\top} \\in \\mathbb{R}^2$ 来参数化。该关系是一个线性变换 $\\mathbf{q} = \\mathbf{S}\\mathbf{q}'$，其中 $\\mathbf{S}$ 是一个 $4 \\times 2$ 的代换矩阵：\n$$\n\\mathbf{q} = \\begin{pmatrix} q_{\\mathrm{C}} \\\\ q_{\\mathrm{O}} \\\\ q_{\\mathrm{H1}} \\\\ q_{\\mathrm{H2}} \\end{pmatrix} = \\begin{pmatrix} 1 q_{\\mathrm{C}} + 0 q_{\\mathrm{H}} \\\\ -1 q_{\\mathrm{C}} - 2 q_{\\mathrm{H}} \\\\ 0 q_{\\mathrm{C}} + 1 q_{\\mathrm{H}} \\\\ 0 q_{\\mathrm{C}} + 1 q_{\\mathrm{H}} \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ -1 & -2 \\\\ 0 & 1 \\\\ 0 & 1 \\end{pmatrix} \\begin{pmatrix} q_{\\mathrm{C}} \\\\ q_{\\mathrm{H}} \\end{pmatrix} = \\mathbf{S}\\mathbf{q}'\n$$\n将 $\\mathbf{q} = \\mathbf{S}\\mathbf{q}'$ 代入目标函数，将 $\\mathbb{R}^4$ 中的约束问题转化为 $\\mathbb{R}^2$ 中的无约束问题：\n$$\nJ(\\mathbf{q}') = (\\mathbf{A}\\mathbf{S}\\mathbf{q}' - \\mathbf{V}_{\\mathrm{ref}})^{\\top} \\mathbf{W} (\\mathbf{A}\\mathbf{S}\\mathbf{q}' - \\mathbf{V}_{\\mathrm{ref}}) + \\lambda (\\mathbf{S}\\mathbf{q}')^{\\top}(\\mathbf{S}\\mathbf{q}')\n$$\n让我们定义一个简化的 $M \\times 2$ 几何矩阵 $\\mathbf{A}' = \\mathbf{A}\\mathbf{S}$。目标函数变为：\n$$\nJ(\\mathbf{q}') = (\\mathbf{A}'\\mathbf{q}' - \\mathbf{V}_{\\mathrm{ref}})^{\\top} \\mathbf{W} (\\mathbf{A}'\\mathbf{q}' - \\mathbf{V}_{\\mathrm{ref}}) + \\lambda \\mathbf{q}'^{\\top}\\mathbf{S}^{\\top}\\mathbf{S}\\mathbf{q}'\n$$\n这是一个标准的二次型。为了找到最小值，我们计算其关于 $\\mathbf{q}'$ 的梯度并将其设为零：\n$$\n\\nabla_{\\mathbf{q}'} J(\\mathbf{q}') = 2\\mathbf{A}'^{\\top}\\mathbf{W}(\\mathbf{A}'\\mathbf{q}' - \\mathbf{V}_{\\mathrm{ref}}) + 2\\lambda\\mathbf{S}^{\\top}\\mathbf{S}\\mathbf{q}' = \\mathbf{0}\n$$\n重新整理各项，得到一个关于 $\\mathbf{q}'$ 的 $2 \\times 2$ 线性方程组，称为正规方程组：\n$$\n(\\mathbf{A}'^{\\top}\\mathbf{W}\\mathbf{A}' + \\lambda\\mathbf{S}^{\\top}\\mathbf{S})\\mathbf{q}' = \\mathbf{A}'^{\\top}\\mathbf{W}\\mathbf{V}_{\\mathrm{ref}}\n$$\n这个形如 $\\mathbf{M}\\mathbf{x} = \\mathbf{b}$ 的方程组可以被可靠地求解出 $\\mathbf{q}'$。矩阵 $\\mathbf{A}'^{\\top}\\mathbf{W}\\mathbf{A}'$ 是半正定的，而 $\\mathbf{S}^{\\top}\\mathbf{S}$ 是正定的。对于任何 $\\lambda \\ge 0$，只要 $\\mathbf{A}'$ 具有满列秩（对于给定的几何结构，这是成立的），矩阵 $\\mathbf{M} = \\mathbf{A}'^{\\top}\\mathbf{W}\\mathbf{A}' + \\lambda\\mathbf{S}^{\\top}\\mathbf{S}$ 就是正定的，因此是可逆的，这保证了解的唯一性。\n\n计算步骤如下：\n1.  根据给定的原子坐标和场点构造矩阵 $\\mathbf{A}$。\n2.  定义代换矩阵 $\\mathbf{S}$。\n3.  对于三个测试用例中的每一个，定义权重矩阵 $\\mathbf{W}$ 和正则化参数 $\\lambda$。\n4.  建立并求解关于独立电荷向量 $\\mathbf{q}' = [q_{\\mathrm{C}}, q_{\\mathrm{H}}]^{\\top}$ 的 $2 \\times 2$ 线性系统。\n5.  使用变换 $\\mathbf{q} = \\mathbf{S}\\mathbf{q}'$ 重构完整的电荷向量 $\\mathbf{q}$。\n6.  按照规定格式化所得电荷 $[q_{\\mathrm{C}}, q_{\\mathrm{O}}, q_{\\mathrm{H1}}, q_{\\mathrm{H2}}]^{\\top}$。\n\n该过程将在提供的 Python 代码中实现，以计算三个测试用例的解。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for partial atomic charges by minimizing a regularized,\n    weighted sum of squared residuals between a force field electrostatic\n    potential and reference values, subject to linear constraints.\n    \"\"\"\n\n    # --- Step 1: Define Givens (in atomic units) ---\n\n    # Atomic positions (bohr), N=4 atoms\n    # Order: C, O, H1, H2\n    R_atoms = np.array([\n        [0.00000, 0.00000, 0.00000],   # C\n        [2.28660, 0.00000, 0.00000],   # O\n        [-1.03935, 1.80099, 0.00000],  # H1\n        [-1.03935, -1.80099, 0.00000]   # H2\n    ])\n\n    # Field points (bohr), M=8 points\n    g_points = np.array([\n        [4.00000, 0.00000, 0.00000],\n        [-4.00000, 0.00000, 0.00000],\n        [0.00000, 4.00000, 0.00000],\n        [0.00000, -4.00000, 0.00000],\n        [0.00000, 0.00000, 4.00000],\n        [0.00000, 0.00000, -4.00000],\n        [3.00000, 3.00000, 0.00000],\n        [-3.00000, -3.00000, 0.00000]\n    ])\n\n    # Reference electrostatic potential (atomic units)\n    V_ref = np.array([\n        -0.17942, 0.05318, 0.02462, 0.02462,\n        0.01088, 0.01088, -0.05177, 0.05125\n    ])\n\n    # Test cases: weights w and regularization parameter lambda\n    test_cases = [\n        # Case A\n        {'w': np.ones(8), 'lambda': 0.0},\n        # Case B\n        {'w': np.array([2., 1., 1., 1., 1., 1., 2., 1.]), 'lambda': 0.001},\n        # Case C\n        {'w': np.array([0., 5., 0., 0., 0., 0., 0., 5.]), 'lambda': 1.000}\n    ]\n\n    # --- Step 2: Formulate the Linear System ---\n\n    # The 4 charges q = [q_C, q_O, q_H1, q_H2] are dependent.\n    # Constraints:\n    # 1. q_H1 - q_H2 = 0  => q_H1 = q_H2 = q_H\n    # 2. q_C + q_O + q_H1 + q_H2 = 0 => q_O = -q_C - 2*q_H\n    # Independent variables are q' = [q_C, q_H].\n    # The transformation is q = S @ q'.\n    S = np.array([\n        [1., 0.],    # q_C = 1*q_C + 0*q_H\n        [-1., -2.],  # q_O = -1*q_C - 2*q_H\n        [0., 1.],    # q_H1 = 0*q_C + 1*q_H\n        [0., 1.]     # q_H2 = 0*q_C + 1*q_H\n    ])\n\n    # Compute the M x N matrix A of inverse distances 1/||g_k - R_i||\n    # Using broadcasting to calculate all distances at once\n    # g_points shape (M, 1, 3), R_atoms shape (1, N, 3)\n    # dists shape (M, N)\n    dists = np.linalg.norm(g_points[:, np.newaxis, :] - R_atoms[np.newaxis, :, :], axis=2)\n    A = 1.0 / dists\n\n    # Compute the reduced M x 2 geometry matrix A' = A @ S\n    A_prime = A @ S\n\n    # Compute the 2 x 2 matrix T = S^T @ S for the regularization term\n    T = S.T @ S\n\n    results = []\n    # --- Step 3: Solve for each test case ---\n    for case in test_cases:\n        w_k = case['w']\n        lambda_reg = case['lambda']\n\n        # Weight matrix W is diagonal\n        W = np.diag(w_k)\n\n        # Form the 2x2 linear system M @ q' = v\n        # M = A'^T @ W @ A' + lambda * S^T @ S\n        M = A_prime.T @ W @ A_prime + lambda_reg * T\n        # v = A'^T @ W @ V_ref\n        v = A_prime.T @ W @ V_ref\n\n        # Solve for the independent variables q' = [q_C, q_H]\n        q_prime = np.linalg.solve(M, v)\n\n        # Reconstruct the full 4-element charge vector q = S @ q'\n        q = S @ q_prime\n        \n        # Round to 6 decimal places for final output\n        rounded_q = [f\"{charge:.6f}\" for charge in q]\n        results.append(rounded_q)\n\n    # --- Step 4: Format and Print Final Output ---\n    # The format is a list of lists: [[...],[...],[...]]\n    case_strings = [f\"[{','.join(res)}]\" for res in results]\n    final_output = f\"[{','.join(case_strings)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2404445"}]}