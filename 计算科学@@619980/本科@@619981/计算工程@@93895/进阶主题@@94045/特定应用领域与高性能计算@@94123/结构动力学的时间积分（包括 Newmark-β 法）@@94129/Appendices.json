{"hands_on_practices": [{"introduction": "理论学习之后，真正的挑战在于应用。开始数值积分的第一步至关重要，但常常被忽视：如何确保仿真的初始状态是物理上一致的？此练习将指导您解决这个问题。您将学习到，运动方程不仅在整个时间域内必须成立，在初始时刻 $t=0^{+}$ 也不例外，您将亲手计算出正确的初始加速度，为精确的动力学仿真打下坚实的基础 [@problem_id:2446585]。", "problem": "一个具有质量 $m$、粘性阻尼系数 $c$ 和线性刚度 $k$ 的单自由度（SDOF）线性结构振子受到外力 $f(t)$ 的作用。其运动 $u(t)$ 满足二阶常微分运动方程\n$$\nm\\,\\ddot{u}(t) + c\\,\\dot{u}(t) + k\\,u(t) = f(t).\n$$\n该系统将使用 Newmark-β 时间积分方法进行时间推进，以模拟 $t \\ge 0$ 时的响应。在 $t=0^{-}$（加载前瞬间），状态已知，由 $u(0^{-}) = u_0$ 和 $\\dot{u}(0^{-}) = v_0$ 给出。在 $t=0^{+}$（施加荷载后瞬间），不存在冲量力。\n\n数据：\n- $m = 2\\,\\mathrm{kg}$,\n- $c = 3\\,\\mathrm{N\\cdot s/m}$,\n- $k = 50\\,\\mathrm{N/m}$,\n- 当 $t  0$ 时 $f(t) = 0\\,\\mathrm{N}$，当 $t \\ge 0$ 时 $f(t) = 10\\,\\mathrm{N}$,\n- $u_0 = 0.10\\,\\mathrm{m}$,\n- $v_0 = -0.20\\,\\mathrm{m/s}$.\n\n一位工程师错误地以一个不一致的加速度 $\\ddot{u}_0^{\\mathrm{(guess)}} = 0\\,\\mathrm{m/s^2}$ 初始化了模拟。确定在 $t=0^{+}$ 时一致地启动 Newmark-β 模拟所需的正确初始加速度 $\\ddot{u}_0$。\n\n以 $\\mathrm{m/s^2}$ 为单位，用一个实数给出你的答案。报告精确值（不要四舍五入）。", "solution": "对问题陈述进行验证。\n\n步骤1：提取已知条件。\n- 单自由度（SDOF）系统的运动方程为 $m\\,\\ddot{u}(t) + c\\,\\dot{u}(t) + k\\,u(t) = f(t)$。\n- 质量：$m = 2\\,\\mathrm{kg}$。\n- 阻尼系数：$c = 3\\,\\mathrm{N\\cdot s/m}$。\n- 刚度：$k = 50\\,\\mathrm{N/m}$。\n- 外力：当 $t  0$ 时 $f(t) = 0\\,\\mathrm{N}$，当 $t \\ge 0$ 时 $f(t) = 10\\,\\mathrm{N}$。\n- $t=0^{-}$ 时的初始位移：$u(0^{-}) = u_0 = 0.10\\,\\mathrm{m}$。\n- $t=0^{-}$ 时的初始速度：$\\dot{u}(0^{-}) = v_0 = -0.20\\,\\mathrm{m/s}$。\n- 条件：在 $t=0$ 时没有冲量力。\n- 目标是确定在 $t=0^{+}$ 时的正确初始加速度 $\\ddot{u}_0$。\n\n步骤2：使用提取的已知条件进行验证。\n- 该问题是**有科学依据的**，因为它基于支配有阻尼机械振子的基本线性二阶常微分方程，这是经典力学和结构动力学的基石。\n- 该问题是**适定的**和**客观的**。所有必要的参数和初始条件都以清晰、明确的数值给出，以确定唯一的初始加速度。\n- 该问题是**完整且一致的**。陈述“没有冲量力”是结构动力学中的一个标准条件，意味着位移和速度在时间原点上是连续的，这对于解决问题至关重要。\n- 给定的数值在物理上是合理的。\n- 该问题不违反任何无效性标准。\n\n步骤3：结论与行动。\n该问题被判定为**有效**。将提供解答。\n\n基本原理是运动方程必须在其定义的每个时间瞬间都得到满足，包括初始瞬间 $t=0^{+}$。任何有效的数值积分方案，例如 Newmark-β 方法，都必须以一个与控制微分方程一致的初始状态向量 $(u(0^{+}), \\dot{u}(0^{+}), \\ddot{u}(0^{+}))$ 开始。\n\n控制方程为：\n$$m\\,\\ddot{u}(t) + c\\,\\dot{u}(t) + k\\,u(t) = f(t)$$\n该方程必须在 $t=0^{+}$ 时成立。我们将其写为：\n$$m\\,\\ddot{u}(0^{+}) + c\\,\\dot{u}(0^{+}) + k\\,u(0^{+}) = f(0^{+})$$\n问题陈述中指出，在 $t=0$ 时系统上没有冲量力作用。在力学系统的背景下，这意味着储存能量的状态变量，即位移（弹簧中的势能）和速度（质量的动能），不能瞬时改变。因此，位移和速度在 $t=0$ 时是连续的。\n$$u(0^{+}) = u(0^{-}) = u_0 = 0.10\\ \\mathrm{m}$$\n$$\\dot{u}(0^{+}) = \\dot{u}(0^{-}) = v_0 = -0.20\\ \\mathrm{m/s}$$\n外力给出为当 $t \\ge 0$ 时 $f(t) = 10\\ \\mathrm{N}$。因此，在 $t=0$ 之后的瞬间，力为：\n$$f(0^{+}) = 10\\ \\mathrm{N}$$\n未知量是初始加速度，我们记为 $\\ddot{u}_0 = \\ddot{u}(0^{+})$。我们可以通过重新整理运动方程来求解：\n$$\\ddot{u}_0 = \\frac{1}{m} \\left[ f(0^{+}) - c\\,\\dot{u}(0^{+}) - k\\,u(0^{+}) \\right]$$\n现在，我们将所提供的数值代入此表达式。\n- $m = 2\\,\\mathrm{kg}$\n- $c = 3\\,\\mathrm{N\\cdot s/m}$\n- $k = 50\\,\\mathrm{N/m}$\n- $f(0^{+}) = 10\\,\\mathrm{N}$\n- $u(0^{+}) = 0.10\\,\\mathrm{m}$\n- $\\dot{u}(0^{+}) = -0.20\\,\\mathrm{m/s}$\n\n计算过程如下：\n$$\\ddot{u}_0 = \\frac{1}{2} \\left[ 10 - (3)(-0.20) - (50)(0.10) \\right]$$\n$$\\ddot{u}_0 = \\frac{1}{2} \\left[ 10 - (-0.6) - 5 \\right]$$\n$$\\ddot{u}_0 = \\frac{1}{2} \\left[ 10 + 0.6 - 5 \\right]$$\n$$\\ddot{u}_0 = \\frac{1}{2} \\left[ 5.6 \\right]$$\n$$\\ddot{u}_0 = 2.8\\,\\mathrm{m/s^2}$$\n这就是为了一致地开始模拟所需的正确初始加速度。工程师猜测的 $\\ddot{u}_0^{\\mathrm{(guess)}} = 0\\,\\mathrm{m/s^2}$ 是不正确的，因为它在 $t=0^{+}$ 时不满足运动方程。使用不一致的初始加速度会在数值解中引入一个非物理的瞬态响应。", "answer": "$$\n\\boxed{2.8}\n$$", "id": "2446585"}, {"introduction": "在将连续的物理世界离散化为数字模型时，我们必须警惕一个微妙的陷阱：混叠（aliasing）。选择的时间步长 $\\Delta t$ 不仅决定了计算的稳定性与精度，它还定义了一个采样频率，这可能导致高频载荷被错误地“看”成低频载荷。这个练习通过一个精心设计的思想实验，揭示了当外力频率超过奈奎斯特（Nyquist）频率时会发生什么，帮助您建立对采样理论在动力学仿真中重要性的直观理解 [@problem_id:2446581]。", "problem": "一个质量为 $m$、粘性阻尼系数为 $c$、刚度为 $k$ 的单自由度（SDOF）线性振子满足方程 $m \\ddot{u}(t)+c \\dot{u}(t)+k u(t)=p(t)$。考虑 $m=1\\,\\mathrm{kg}$，$k=\\left(2\\pi \\cdot 5\\right)^{2}\\,\\mathrm{N/m}$（因此自振频率为 $f_n=5\\,\\mathrm{Hz}$，圆频率为 $\\omega_n=2\\pi f_n$），阻尼比 $\\zeta=0.02$，从而 $c=2 \\zeta m \\omega_n$。系统受到简谐力 $p(t)=P_0 \\sin\\!\\left(2\\pi f\\, t\\right)$ 的作用，其中 $P_0=1\\,\\mathrm{N}$ 且 $f=63\\,\\mathrm{Hz}$。运动方程使用 Newmark–$\\beta$ 方法进行数值积分，参数为 $\\beta=1/4$ 和 $\\gamma=1/2$，采用均匀时间步长 $\\Delta t=0.01\\,\\mathrm{s}$，初始条件为 $u(0)=0$, $\\dot{u}(0)=0$。假设积分时间足够长，以观察到稳态响应。定义采样频率 $f_s=1/\\Delta t$ 和奈奎斯特频率 $f_N=1/(2\\Delta t)$。\n\n关于数值计算的位移响应，下列哪些陈述是正确的？\n\nA. 在 $f_s=100\\,\\mathrm{Hz}$ 的欠采样条件下，频率为 $f=63\\,\\mathrm{Hz}$ 的正弦输入与频率为 $f_a=|f-f_s|=37\\,\\mathrm{Hz}$ 的正弦波无法区分；因此，计算出的位移将表现出约 $37\\,\\mathrm{Hz}$ 的分量，而不是 $63\\,\\mathrm{Hz}$。\n\nB. 因为参数为 $\\beta=1/4, \\gamma=1/2$ 的 Newmark–$\\beta$ 方法是无条件稳定的，所以不会发生混叠；在给定数据下，由 $63\\,\\mathrm{Hz}$ 输入引起的稳态位移恒为零（瞬态响应除外）。\n\nC. 如果时间步长减小到 $\\Delta t=0.002\\,\\mathrm{s}$（因此 $f_s=500\\,\\mathrm{Hz}$ 且 $f_N=250\\,\\mathrm{Hz}$），$63\\,\\mathrm{Hz}$ 输入的混叠将被消除。\n\nD. 保持 $\\Delta t=0.01\\,\\mathrm{s}$ 不变，将阻尼比增加到 $\\zeta=0.20$ 将通过抑制所有高于 $f_N$ 的分量来消除混叠，从而使混叠分量不会出现在离散时间解中。\n\nE. 如果选择的 $\\Delta t$ 使得高频输入的混叠频率落在 $f_n$ 附近，那么即使真实的连续时间激励远未达到共振，Newmark 解也可能显示出很大的近共振振幅。\n\n选择所有适用项。", "solution": "对问题陈述进行解析和验证。所有提供的参数和条件在科学上和数学上都是合理的。问题是适定的，涉及计算结构动力学中的标准概念，特别是 Newmark-$\\beta$ 时间积分方案与信号采样理论的相互作用。没有发现不一致或缺陷。问题是有效的。\n\n此问题的核心是混叠（aliasing）。当连续时间信号的采样频率 $f_s$ 不足以捕捉其最高频率分量时，就会发生混叠。根据奈奎斯特-香农采样定理，为避免混叠，最大频率为 $f_{\\max}$ 的信号必须以 $f_s > 2 f_{\\max}$ 的速率进行采样。频率 $f_N = f_s / 2$ 被称为奈奎斯特频率。如果一个频率为 $f > f_N$ 的正弦分量被采样，它将变得与其在 $[0, f_N]$ 范围内的混叠体（一个频率为 $f_a$ 的低频正弦波）无法区分。混叠频率由 $f_a = \\min_{k \\in \\mathbb{Z}} |f - k f_s|$ 给出。\n\n在初始设置中，激励频率为 $f=63\\,\\mathrm{Hz}$。时间步长为 $\\Delta t = 0.01\\,\\mathrm{s}$，对应的采样频率为 $f_s = 1/\\Delta t = 100\\,\\mathrm{Hz}$。因此，奈奎斯特频率为 $f_N = f_s/2 = 50\\,\\mathrm{Hz}$。\n\n由于 $f = 63\\,\\mathrm{Hz} > f_N = 50\\,\\mathrm{Hz}$，输入信号被欠采样，将会发生混叠。数值积分器作用于激励函数 $p(t)$ 的离散样本 $p_i = p(i\\Delta t)$。因此，序列 $\\{p_i\\}$ 将表示一个混叠信号。混叠频率计算如下：\n$$ f_a = \\min_{k \\in \\mathbb{Z}} |f - k f_s| = |63\\,\\mathrm{Hz} - 1 \\cdot 100\\,\\mathrm{Hz}| = |-37\\,\\mathrm{Hz}| = 37\\,\\mathrm{Hz} $$\n因此，数值算法求解的是一个受到 $37\\,\\mathrm{Hz}$（而非 $63\\,\\mathrm{Hz}$）正弦激励的系统的运动方程。该系统是线性的，所以稳态响应也将处于这个混叠频率。\n\n指定的 Newmark–$\\beta$ 方法参数为 $\\beta=1/4$ 和 $\\gamma=1/2$。这对应于常平均加速度法，该方法对于线性系统是无条件稳定的。然而，稳定性仅能保证数值解保持有界；它不能防止诸如周期伸长、幅值衰减或输入混叠效应等不准确性。\n\n现在我们评估每个陈述。\n\nA. 在 $f_s=100\\,\\mathrm{Hz}$ 的欠采样条件下，频率为 $f=63\\,\\mathrm{Hz}$ 的正弦输入与频率为 $f_a=|f-f_s|=37\\,\\mathrm{Hz}$ 的正弦波无法区分；因此，计算出的位移将表现出约 $37\\,\\mathrm{Hz}$ 的分量，而不是 $63\\,\\mathrm{Hz}$。\n如上所述，采样过程将 $f=63\\,\\mathrm{Hz}$ 的输入频率混叠至 $f_a = 37\\,\\mathrm{Hz}$。数值积分器接收的是载荷的离散值 $p_i = P_0 \\sin(2\\pi f i \\Delta t)$。这一数值序列在数学上等同于一个频率为 $f_a$ 的正弦波的采样值（可能存在相位差，本例中为 $-\\sin(2\\pi f_a i \\Delta t)$）。线性系统将以其激励的频率响应。因此，数值计算的稳态位移将以非常接近于 $37\\,\\mathrm{Hz}$ 混叠频率的频率振荡。“约”这个词正确地考虑了积分方案固有的微小数值周期误差，尽管这种误差对于无阻尼情况下的这种特定方法为零，但在有阻尼系统中可能存在。该陈述的核心是正确的。\n结论：**正确**。\n\nB. 因为参数为 $\\beta=1/4, \\gamma=1/2$ 的 Newmark–$\\beta$ 方法是无条件稳定的，所以不会发生混叠；在给定数据下，由 $63\\,\\mathrm{Hz}$ 输入引起的稳态位移恒为零（瞬态响应除外）。\n这个陈述在两个基本点上是错误的。首先，数值方法的无条件稳定性与输入信号是否发生混叠无关。混叠是对连续信号进行低于奈奎斯特速率采样所导致的结果。它是一个发生在数值积分步骤之前的信号处理现象。其次，输入到数值方案的有效激励是一个频率为 $37\\,\\mathrm{Hz}$ 的正弦波。一个受到正弦力作用的线性有阻尼振子将表现出非零的稳态正弦响应。位移肯定不恒为零。\n结论：**错误**。\n\nC. 如果时间步长减小到 $\\Delta t=0.002\\,\\mathrm{s}$（因此 $f_s=500\\,\\mathrm{Hz}$ 且 $f_N=250\\,\\mathrm{Hz}$），$63\\,\\mathrm{Hz}$ 输入的混叠将被消除。\n在新的时间步长 $\\Delta t = 0.002\\,\\mathrm{s}$ 下，采样频率变为 $f_s = 1/\\Delta t = 500\\,\\mathrm{Hz}$。奈奎斯特频率为 $f_N = f_s/2 = 250\\,\\mathrm{Hz}$。输入频率为 $f = 63\\,\\mathrm{Hz}$。由于 $f  f_N$（或等效地，$f_s > 2f$），奈奎斯特-香农采样准则得到满足。采样过程将正确捕捉 $63\\,\\mathrm{Hz}$ 的正弦波而不会产生混叠。\n结论：**正确**。\n\nD. 保持 $\\Delta t=0.01\\,\\mathrm{s}$ 不变，将阻尼比增加到 $\\zeta=0.20$ 将通过抑制所有高于 $f_N$ 的分量来消除混叠，从而使混叠分量不会出现在离散时间解中。\n这个陈述从根本上误解了混叠的原因。混叠是由*输入信号* $p(t)$ 和*采样过程* ($\\Delta t$) 的特性决定的，而不是由被建模系统的物理特性（如阻尼系数 $c$）决定的。数值方法求解的是对离散力序列 $\\{p_i\\}$ 的响应，而这个序列无论 $\\zeta$ 的值是多少，都已经发生了混叠。增加阻尼会减小计算出的对 $37\\,\\mathrm{Hz}$ 混叠输入的响应幅值，但它本身并不能“消除混叠”。混叠现象在输入阶段就已经发生了。\n结论：**错误**。\n\nE. 如果选择的 $\\Delta t$ 使得高频输入的混叠频率落在 $f_n$ 附近，那么即使真实的连续时间激励远未达到共振，Newmark 解也可能显示出很大的近共振振幅。\n这描述了数值模拟中混叠的一个危险后果。系统的自振频率是 $f_n = 5\\,\\mathrm{Hz}$。让我们考虑一个高频输入，例如 $f_{true} = 105\\,\\mathrm{Hz}$，它远离共振区。如果我们选择采样频率 $f_s = 100\\,\\mathrm{Hz}$（即 $\\Delta t = 0.01\\,\\mathrm{s}$），混叠频率将是 $f_a = |f_{true} - f_s| = |105\\,\\mathrm{Hz} - 100\\,\\mathrm{Hz}| = 5\\,\\mathrm{Hz}$。那么，数值积分器将求解系统在其自振频率 $f_n = 5\\,\\mathrm{Hz}$ 处受激励的响应。考虑到低阻尼（$\\zeta=0.02$），这将在数值解中产生一个非常大的共振响应。这个数值结果将是完全伪假的，因为真实系统对 $105\\,\\mathrm{Hz}$ 激励的响应幅值会很小。该陈述正确地指出了这种可能性。\n结论：**正确**。", "answer": "$$\\boxed{ACE}$$", "id": "2446581"}, {"introduction": "为什么在结构动力学中，像 Newmark-β 这样的隐式方法如此受青睐，而不是像经典的龙格-库塔（Runge-Kutta）方法那样的通用ODE求解器？答案往往在于“刚度”（stiffness）这个概念。这个动手编程练习将让您直面一个包含广泛分离频率的“刚性”系统，通过亲手实现并比较这两种方法，您将深刻体会到隐式、无条件稳定方法的强大之处，并理解为何为特定问题选择合适的数值工具是如此重要 [@problem_id:2446625]。", "problem": "考虑一个双自由度的齐次线性结构动力学初值问题，该问题由以下二阶常微分方程给出\n$$\n\\mathbf{M}\\,\\ddot{\\mathbf{x}}(t) + \\mathbf{C}\\,\\dot{\\mathbf{x}}(t) + \\mathbf{K}\\,\\mathbf{x}(t) = \\mathbf{0},\n$$\n其初始条件为\n$$\n\\mathbf{x}(0) = \\mathbf{x}_0,\\quad \\dot{\\mathbf{x}}(0) = \\mathbf{v}_0,\n$$\n其中 $\\mathbf{M} \\in \\mathbb{R}^{2\\times 2}$ 是质量矩阵，$\\mathbf{C} \\in \\mathbb{R}^{2\\times 2}$ 是粘性阻尼矩阵，$\\mathbf{K} \\in \\mathbb{R}^{2\\times 2}$ 是刚度矩阵。对所有测试用例，使用以下建模假设：\n- $\\mathbf{M} = \\mathbf{I}_2$（$2\\times 2$ 单位矩阵），单位为 $\\mathrm{kg}$。\n- $\\mathbf{K} = \\mathrm{diag}(\\omega_1^2,\\ \\omega_2^2)$，单位为 $\\mathrm{N/m}$，其中 $\\omega_1$ 和 $\\omega_2$ 是固有角频率，单位为 $\\mathrm{rad/s}$。\n- $\\mathbf{C} = \\mathrm{diag}(2\\zeta_1 \\omega_1,\\ 2\\zeta_2 \\omega_2)$，单位为 $\\mathrm{N\\cdot s/m}$，其中 $\\zeta_1$ 和 $\\zeta_2$ 是模态阻尼比（无量纲）。\n- 所有位移单位为 $\\mathrm{m}$，速度单位为 $\\mathrm{m/s}$，时间单位为 $\\mathrm{s}$，角频率单位为 $\\mathrm{rad/s}$。\n\n通过引入状态向量 $\\mathbf{y}(t) = \\begin{bmatrix} \\mathbf{x}(t) \\\\ \\dot{\\mathbf{x}}(t) \\end{bmatrix} \\in \\mathbb{R}^{4}$ 来定义等效的一阶系统，从而得到\n$$\n\\dot{\\mathbf{y}}(t) = \\mathbf{A}\\,\\mathbf{y}(t),\\quad \\mathbf{A} = \\begin{bmatrix} \\mathbf{0}  \\mathbf{I}_2 \\\\ -\\mathbf{M}^{-1}\\mathbf{K}  -\\mathbf{M}^{-1}\\mathbf{C} \\end{bmatrix} = \\begin{bmatrix} \\mathbf{0}  \\mathbf{I}_2 \\\\ -\\mathbf{K}  -\\mathbf{C} \\end{bmatrix},\\quad \\mathbf{y}(0)=\\begin{bmatrix}\\mathbf{x}_0\\\\\\mathbf{v}_0\\end{bmatrix}.\n$$\n在时间 $t$ 的精确参考解为\n$$\n\\mathbf{y}_{\\mathrm{exact}}(t) = \\exp(\\mathbf{A}\\,t)\\,\\mathbf{y}(0),\n$$\n其中 $\\exp(\\cdot)$ 是矩阵指数。\n\n对于下述每个测试用例，使用以下两种时间积分格式，在一个从 $t=0$ 到 $t=T$、时间步长为 $\\Delta t$ 的均匀时间网格上计算数值近似解：\n- Newmark–$\\beta$ 法（采用平均加速度法参数 $\\beta=\\tfrac{1}{4}$ 和 $\\gamma=\\tfrac{1}{2}$）直接应用于二阶形式 $\\mathbf{M}\\ddot{\\mathbf{x}}+\\mathbf{C}\\dot{\\mathbf{x}}+\\mathbf{K}\\mathbf{x}=\\mathbf{0}$。\n- 经典的四阶四级 Runge–Kutta 法应用于一阶系统 $\\dot{\\mathbf{y}}=\\mathbf{A}\\mathbf{y}$。\n\n对于每个测试用例中的每种方法，计算最终时间 $T$ 的位移向量，记为 $\\mathbf{x}_{\\mathrm{num}}(T)$，以及从 $\\mathbf{y}_{\\mathrm{exact}}(T)$ 中提取的精确位移向量 $\\mathbf{x}_{\\mathrm{exact}}(T)$。报告位移误差的欧几里得范数\n$$\ne = \\left\\|\\mathbf{x}_{\\mathrm{num}}(T) - \\mathbf{x}_{\\mathrm{exact}}(T)\\right\\|_2,\n$$\n单位为 $\\mathrm{m}$，并四舍五入到 $6$ 位小数。此外，对于 Runge–Kutta 法，报告一个稳定性指标，其定义如下：计算所有时间步中状态向量的最大欧几里得范数，\n$$\n\\max_{0\\le n \\le N} \\left\\|\\mathbf{y}_n\\right\\|_2,\n$$\n其中 $N = T/\\Delta t$ 是一个整数，$\\mathbf{y}_n$ 是时间 $t_n=n\\Delta t$ 的数值状态。如果该最大值小于或等于初始状态范数的 $10^6$ 倍，则称该方法为“稳定”(stable)，即\n$$\n\\max_{0\\le n \\le N} \\left\\|\\mathbf{y}_n\\right\\|_2 \\le 10^6\\,\\left\\|\\mathbf{y}_0\\right\\|_2.\n$$\n使用以下测试套件。每个测试用例指定 $(\\omega_1,\\ \\omega_2,\\ \\zeta_1,\\ \\zeta_2,\\ \\mathbf{x}_0,\\ \\mathbf{v}_0,\\ \\Delta t,\\ T)$：\n- 测试用例 1（刚性问题，中等步长）：$(\\omega_1=\\;1,\\ \\omega_2=\\;100,\\ \\zeta_1=\\;0.01,\\ \\zeta_2=\\;0.01,\\ \\mathbf{x}_0=\\;[0.1,\\ 0.1]\\ \\mathrm{m},\\ \\mathbf{v}_0=\\;[0.0,\\ 0.0]\\ \\mathrm{m/s},\\ \\Delta t=\\;0.01\\ \\mathrm{s},\\ T=\\;1.0\\ \\mathrm{s})$。\n- 测试用例 2（刚性问题，大步长）：$(\\omega_1=\\;1,\\ \\omega_2=\\;100,\\ \\zeta_1=\\;0.01,\\ \\zeta_2=\\;0.01,\\ \\mathbf{x}_0=\\;[0.1,\\ 0.1]\\ \\mathrm{m},\\ \\mathbf{v}_0=\\;[0.0,\\ 0.0]\\ \\mathrm{m/s},\\ \\Delta t=\\;0.1\\ \\mathrm{s},\\ T=\\;1.0\\ \\mathrm{s})$。\n- 测试用例 3（非刚性问题，中等步长）：$(\\omega_1=\\;1,\\ \\omega_2=\\;5,\\ \\zeta_1=\\;0.02,\\ \\zeta_2=\\;0.02,\\ \\mathbf{x}_0=\\;[0.05,\\ -0.05]\\ \\mathrm{m},\\ \\mathbf{v}_0=\\;[0.1,\\ 0.0]\\ \\mathrm{m/s},\\ \\Delta t=\\;0.1\\ \\mathrm{s},\\ T=\\;10.0\\ \\mathrm{s})$。\n\n为每个测试用例生成三元组\n$$\n\\left[e_{\\mathrm{Newmark}},\\ e_{\\mathrm{RK4}},\\ b\\right],\n$$\n其中 $e_{\\mathrm{Newmark}}$ 是 Newmark–$\\beta$ 法的最终时间位移误差（单位为 $\\mathrm{m}$，四舍五入到 $6$ 位小数），$e_{\\mathrm{RK4}}$ 是 Runge–Kutta 法的最终时间位移误差（单位为 $\\mathrm{m}$，四舍五入到 $6$ 位小数），$b$ 是一个布尔值，当且仅当 Runge–Kutta 法根据上述判据是稳定的时，其值为 $\\mathrm{True}$，否则为 $\\mathrm{False}$。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表，列表项之间无空格，并按测试用例的顺序排列。例如，\n$$\n\\left[\\left[e_{\\mathrm{Newmark}}^{(1)},e_{\\mathrm{RK4}}^{(1)},b^{(1)}\\right],\\left[e_{\\mathrm{Newmark}}^{(2)},e_{\\mathrm{RK4}}^{(2)},b^{(2)}\\right],\\left[e_{\\mathrm{Newmark}}^{(3)},e_{\\mathrm{RK4}}^{(3)},b^{(3)}\\right]\\right].\n$$\n所有位移误差必须以 $\\mathrm{m}$ 为单位报告，四舍五入到 $6$ 位小数，并且布尔值必须打印为 $\\mathrm{True}$ 或 $\\mathrm{False}$。", "solution": "所提出的问题是一个定义明确的线性结构动力学初值问题。它在科学上是合理的，内容是自洽的，并且所有参数都已指定。任务是针对一个双自由度系统，在不同的刚度和时间步长条件下，比较两种标准时间积分格式——Newmark-β法和经典的四阶Runge-Kutta法——与精确解的性能。该问题是有效的，将提供一个解答。\n\n分析按以下方式进行：首先，详细说明控制方程和精确解析解。其次，介绍每种数值积分格式的公式。最后，概述为指定测试用例计算所需误差度量和稳定性指标的实现策略。\n\n**1. 控制方程和系统定义**\n\n该问题涉及一个由二阶常微分方程（ODE）描述的齐次线性系统：\n$$\n\\mathbf{M}\\,\\ddot{\\mathbf{x}}(t) + \\mathbf{C}\\,\\dot{\\mathbf{x}}(t) + \\mathbf{K}\\,\\mathbf{x}}(t) = \\mathbf{0}\n$$\n其初始条件为 $\\mathbf{x}(0) = \\mathbf{x}_0$ 和 $\\dot{\\mathbf{x}}(0) = \\mathbf{v}_0$。系统矩阵给定如下：\n- 质量矩阵: $\\mathbf{M} = \\mathbf{I}_2 = \\begin{bmatrix} 1  0 \\\\ 0  1 \\end{bmatrix}\\,\\mathrm{kg}$。\n- 刚度矩阵: $\\mathbf{K} = \\mathrm{diag}(\\omega_1^2, \\omega_2^2)\\,\\mathrm{N/m}$。\n- 阻尼矩阵: $\\mathbf{C} = \\mathrm{diag}(2\\zeta_1 \\omega_1, 2\\zeta_2 \\omega_2)\\,\\mathrm{N\\cdot s/m}$。\n\n由于矩阵 $\\mathbf{M}$、$\\mathbf{C}$ 和 $\\mathbf{K}$ 均为对角矩阵，该系统代表了两个解耦的、有阻尼的单自由度振子。\n\n为了进行分析和 Runge-Kutta 积分，该二阶系统被转换为一阶状态空间表示。我们定义状态向量 $\\mathbf{y}(t) = \\begin{bmatrix} \\mathbf{x}(t) \\\\ \\dot{\\mathbf{x}}(t) \\end{bmatrix} \\in \\mathbb{R}^{4}$。系统的动力学则由以下线性系统控制：\n$$\n\\dot{\\mathbf{y}}(t) = \\mathbf{A}\\,\\mathbf{y}(t), \\quad \\mathbf{y}(0) = \\mathbf{y}_0 = \\begin{bmatrix} \\mathbf{x}_0 \\\\ \\mathbf{v}_0 \\end{bmatrix}\n$$\n状态矩阵 $\\mathbf{A} \\in \\mathbb{R}^{4\\times 4}$ 构建如下：\n$$\n\\mathbf{A} = \\begin{bmatrix} \\mathbf{0}  \\mathbf{I}_2 \\\\ -\\mathbf{M}^{-1}\\mathbf{K}  -\\mathbf{M}^{-1}\\mathbf{C} \\end{bmatrix} = \\begin{bmatrix} 0  0  1  0 \\\\ 0  0  0  1 \\\\ -\\omega_1^2  0  -2\\zeta_1 \\omega_1  0 \\\\ 0  -\\omega_2^2  0  -2\\zeta_2 \\omega_2 \\end{bmatrix}\n$$\n\n**2. 精确解**\n\n对于形式为 $\\dot{\\mathbf{y}}(t) = \\mathbf{A}\\,\\mathbf{y}(t)$ 的线性时不变系统，其精确解由矩阵指数给出：\n$$\n\\mathbf{y}_{\\mathrm{exact}}(t) = \\exp(\\mathbf{A}\\,t)\\,\\mathbf{y}_0\n$$\n在最终时间 $T$ 的参考位移向量，记为 $\\mathbf{x}_{\\mathrm{exact}}(T)$，是通过提取状态向量 $\\mathbf{y}_{\\mathrm{exact}}(T)$ 的前两个分量得到的。矩阵指数 $\\exp(\\mathbf{A}\\,T)$ 是一个定义明确的数学对象，可以进行高精度数值计算。\n\n**3. 数值方法1：Newmark–$\\beta$ 法**\n\nNewmark-β 法是一种直接应用于二阶ODE的隐式时间积分格式。给定的特定参数 $\\beta = \\tfrac{1}{4}$ 和 $\\gamma = \\tfrac{1}{2}$ 定义了“平均加速度法”，该方法对于线性系统是无条件稳定的，并具有二阶精度。\n\n该算法从时间 $t_n$ 的已知状态 $(\\mathbf{x}_n, \\mathbf{v}_n, \\mathbf{a}_n)$ 推进到时间 $t_{n+1} = t_n + \\Delta t$ 的状态。\n1.  **初始化**：给定 $\\mathbf{x}_0$ 和 $\\mathbf{v}_0$，通过求解 $t=0$ 时的运动方程来计算初始加速度 $\\mathbf{a}_0$：\n    $$\n    \\mathbf{M}\\mathbf{a}_0 + \\mathbf{C}\\mathbf{v}_0 + \\mathbf{K}\\mathbf{x}_0 = \\mathbf{0} \\implies \\mathbf{a}_0 = -\\mathbf{M}^{-1}(\\mathbf{C}\\mathbf{v}_0 + \\mathbf{K}\\mathbf{x}_0)\n    $$\n2.  **时间步循环**：对每一步 $n=0, 1, \\dots, N-1$：\n    a.  **预测步**：计算位移和速度的预测值。\n        $$\n        \\tilde{\\mathbf{x}}_{n+1} = \\mathbf{x}_n + \\Delta t \\mathbf{v}_n + \\left(\\frac{1}{2}-\\beta\\right)\\Delta t^2 \\mathbf{a}_n\n        $$\n        $$\n        \\tilde{\\mathbf{v}}_{n+1} = \\mathbf{v}_n + (1-\\gamma)\\Delta t \\mathbf{a}_n\n        $$\n    b.  **求解加速度**：新时间步的加速度 $\\mathbf{a}_{n+1}$ 通过求解线性系统得到，该系统是将 Newmark 关系式代入 $t_{n+1}$ 时的运动方程得出的：\n        $$\n        \\left( \\mathbf{M} + \\gamma \\Delta t \\mathbf{C} + \\beta \\Delta t^2 \\mathbf{K} \\right) \\mathbf{a}_{n+1} = -\\left( \\mathbf{C}\\tilde{\\mathbf{v}}_{n+1} + \\mathbf{K}\\tilde{\\mathbf{x}}_{n+1} \\right)\n        $$\n        左侧的矩阵，即等效质量矩阵，对于固定的时间步长 $\\Delta t$ 是常数，可以只进行一次分解。\n    c.  **校正步**：使用计算出的 $\\mathbf{a}_{n+1}$ 更新位移和速度：\n        $$\n        \\mathbf{x}_{n+1} = \\tilde{\\mathbf{x}}_{n+1} + \\beta \\Delta t^2 \\mathbf{a}_{n+1}\n        $$\n        $$\n        \\mathbf{v}_{n+1} = \\tilde{\\mathbf{v}}_{n+1} + \\gamma \\Delta t \\mathbf{a}_{n+1}\n        $$\n重复此过程，直到达到最终时间 $T$。最终的数值位移为 $\\mathbf{x}_{\\mathrm{num}}(T) = \\mathbf{x}_N$。\n\n**4. 数值方法2：经典四阶 Runge-Kutta (RK4) 法**\n\nRK4 法是一种应用于一阶状态空间系统 $\\dot{\\mathbf{y}} = \\mathbf{A}\\mathbf{y}$ 的显式格式。从时间 $t_n$ 的状态 $\\mathbf{y}_n$，计算时间 $t_{n+1}$ 的状态 $\\mathbf{y}_{n+1}$ 如下：\n$$\n\\mathbf{y}_{n+1} = \\mathbf{y}_n + \\frac{\\Delta t}{6} (\\mathbf{k}_1 + 2\\mathbf{k}_2 + 2\\mathbf{k}_3 + \\mathbf{k}_4)\n$$\n其中四个阶段 $\\mathbf{k}_i$ 计算如下：\n$$\n\\begin{aligned}\n\\mathbf{k}_1 = \\mathbf{A}\\,\\mathbf{y}_n \\\\\n\\mathbf{k}_2 = \\mathbf{A}\\left(\\mathbf{y}_n + \\frac{\\Delta t}{2}\\mathbf{k}_1\\right) \\\\\n\\mathbf{k}_3 = \\mathbf{A}\\left(\\mathbf{y}_n + \\frac{\\Delta t}{2}\\mathbf{k}_2\\right) \\\\\n\\mathbf{k}_4 = \\mathbf{A}\\left(\\mathbf{y}_n + \\Delta t\\mathbf{k}_3\\right)\n\\end{aligned}\n$$\n此过程重复 $N = T/\\Delta t$ 步。最终的数值位移 $\\mathbf{x}_{\\mathrm{num}}(T)$ 是 $\\mathbf{y}_N$ 的前两个分量。\n\nRK4 是条件稳定的。其稳定性由时间步长 $\\Delta t$ 与矩阵 $\\mathbf{A}$ 的特征值的乘积决定。对于刚性系统，其特征值具有大的虚部（对应于高频 $\\omega$），稳定性要求非常小的 $\\Delta t$。这种行为将被测试，尤其是在测试用例1和2中。\n\n**5. 误差与稳定性评估**\n\n对于每种方法和每个测试用例，位移误差计算为最终时间 $T$ 时数值解与精确解之差的欧几里得范数：\n$$\ne = \\left\\|\\mathbf{x}_{\\mathrm{num}}(T) - \\mathbf{x}_{\\mathrm{exact}}(T)\\right\\|_2\n$$\nRK4 方法的稳定性使用给定的判据进行评估。如果所有时间步中状态向量的最大范数相对于初始范数没有过度增长，则认为模拟是“稳定”的：\n$$\n\\max_{0\\le n \\le N} \\left\\|\\mathbf{y}_n\\right\\|_2 \\le 10^6\\,\\left\\|\\mathbf{y}_0\\right\\|_2\n$$\n在 RK4 积分的每一步都通过监测 $\\|\\mathbf{y}_n\\|_2$ 来检查此条件。\n\n每个测试用例的计算步骤如下：\n1.  根据给定参数构建矩阵 $\\mathbf{M}$、$\\mathbf{C}$、$\\mathbf{K}$ 和 $\\mathbf{A}$。\n2.  设置初始条件 $\\mathbf{x}_0$、$\\mathbf{v}_0$，并构成 $\\mathbf{y}_0$。\n3.  计算 $\\mathbf{y}_{\\mathrm{exact}}(T) = \\exp(\\mathbf{A}\\,T)\\,\\mathbf{y}_0$ 并提取 $\\mathbf{x}_{\\mathrm{exact}}(T)$。\n4.  执行 Newmark-β 积分从 $t=0$ 到 $t=T$，求得 $\\mathbf{x}_{\\mathrm{Newmark}}(T)$。\n5.  执行 RK4 积分从 $t=0$ 到 $t=T$，求得 $\\mathbf{x}_{\\mathrm{RK4}}(T)$，同时跟踪最大状态范数以进行稳定性检查。\n6.  计算误差 $e_{\\mathrm{Newmark}}$ 和 $e_{\\mathrm{RK4}}$，并确定 RK4 稳定性的布尔值 $b$。\n7.  按规定格式报告结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import linalg\n\ndef solve():\n    \"\"\"\n    Solves the structural dynamics problem for three test cases using Newmark-beta\n    and RK4 methods, and calculates errors and stability.\n    \"\"\"\n\n    test_cases = [\n        # (omega1, omega2, zeta1, zeta2, x0, v0, dt, T)\n        (1.0, 100.0, 0.01, 0.01, np.array([0.1, 0.1]), np.array([0.0, 0.0]), 0.01, 1.0),\n        (1.0, 100.0, 0.01, 0.01, np.array([0.1, 0.1]), np.array([0.0, 0.0]), 0.1, 1.0),\n        (1.0, 5.0, 0.02, 0.02, np.array([0.05, -0.05]), np.array([0.1, 0.0]), 0.1, 10.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        omega1, omega2, zeta1, zeta2, x0, v0, dt, T = case\n\n        # --- Setup System Matrices ---\n        M = np.identity(2)\n        K = np.diag([omega1**2, omega2**2])\n        C = np.diag([2 * zeta1 * omega1, 2 * zeta2 * omega2])\n\n        # --- State-space representation ---\n        # A = [[0, I], [-M_inv*K, -M_inv*C]]\n        A = np.zeros((4, 4))\n        A[0:2, 2:4] = np.identity(2)\n        # M is identity, so M_inv is identity\n        A[2:4, 0:2] = -K\n        A[2:4, 2:4] = -C\n\n        y0 = np.concatenate((x0, v0))\n\n        # --- Exact Solution ---\n        y_exact_T = linalg.expm(A * T) @ y0\n        x_exact_T = y_exact_T[0:2]\n\n        num_steps = int(round(T / dt))\n\n        # --- Numerical Solution: Newmark-beta ---\n        x_nm, _, _ = newmark_beta_solver(M, C, K, x0, v0, dt, num_steps)\n        e_newmark = np.linalg.norm(x_nm - x_exact_T)\n\n        # --- Numerical Solution: RK4 ---\n        x_rk4, is_stable = rk4_solver(A, y0, dt, num_steps)\n        e_rk4 = np.linalg.norm(x_rk4 - x_exact_T)\n\n        results.append([\n            np.round(e_newmark, 6),\n            np.round(e_rk4, 6),\n            is_stable\n        ])\n\n    # Final print statement in the exact required format.\n    inner_parts = [f\"[{r[0]},{r[1]},{r[2]}]\" for r in results]\n    final_string = f\"[{','.join(inner_parts)}]\"\n    print(final_string)\n\ndef newmark_beta_solver(M, C, K, x0, v0, dt, num_steps):\n    \"\"\"\n    Solves M*x_ddot + C*x_dot + K*x = 0 using the Newmark-beta method.\n    Using average acceleration method (beta=1/4, gamma=1/2).\n    \"\"\"\n    beta = 0.25\n    gamma = 0.5\n    \n    # Initialize displacement, velocity, and acceleration\n    x = x0.copy()\n    v = v0.copy()\n    \n    # Initial acceleration from M*a0 + C*v0 + K*x0 = 0\n    # Since M=I, a0 = -(C*v0 + K*x0)\n    a = - (C @ v0 + K @ x0)\n\n    # Pre-compute effective mass matrix for efficiency\n    M_eff = M + gamma * dt * C + beta * dt**2 * K\n    M_eff_inv = np.linalg.inv(M_eff)\n\n    for _ in range(num_steps):\n        # Predictors\n        x_pred = x + dt * v + (0.5 - beta) * dt**2 * a\n        v_pred = v + (1 - gamma) * dt * a\n\n        # Solve for new acceleration\n        F_eff = - (C @ v_pred + K @ x_pred)\n        a_new = M_eff_inv @ F_eff\n        \n        # Correctors\n        x_new = x_pred + beta * dt**2 * a_new\n        v_new = v_pred + gamma * dt * a_new\n        \n        x, v, a = x_new, v_new, a_new\n\n    return x, v, a\n\ndef rk4_solver(A, y0, dt, num_steps):\n    \"\"\"\n    Solves y_dot = A*y using the classical 4th-order Runge-Kutta method.\n    \"\"\"\n    dof_state = y0.shape[0]\n    y = y0.copy()\n    \n    # Stability monitoring\n    max_norm = np.linalg.norm(y0)\n    y0_norm = max_norm if max_norm > 0 else 1.0 # Avoid division by zero\n\n    for _ in range(num_steps):\n        k1 = A @ y\n        k2 = A @ (y + 0.5 * dt * k1)\n        k3 = A @ (y + 0.5 * dt * k2)\n        k4 = A @ (y + dt * k3)\n        y += (dt / 6.0) * (k1 + 2 * k2 + 2 * k3 + k4)\n        \n        current_norm = np.linalg.norm(y)\n        if current_norm > max_norm:\n            max_norm = current_norm\n    \n    is_stable = (max_norm = 1e6 * y0_norm)\n    x_final = y[0:dof_state//2]\n\n    return x_final, is_stable\n\nif __name__ == \"__main__\":\n    solve()\n\n```", "id": "2446625"}]}