{"hands_on_practices": [{"introduction": "我们从一个简单的一维问题开始，以建立对 Karush-Kuhn-Tucker (KKT) 条件核心机制的直观理解。这个练习的目标是最小化一个二次函数，其约束为一个简单的不等式。通过解决这个问题，你将亲手实践平稳性 ($stationarity$)、原始可行性 ($primal \\ feasibility$)、对偶可行性 ($dual \\ feasibility$) 和互补松弛性 ($complementary \\ slackness$) 是如何协同作用以确定最优解的，而无需被复杂的代数计算分散注意力。[@problem_id:2167418]", "problem": "在一个简化的机器学习场景中，与模型参数 $x$ 相关的成本由二次函数 $f(x) = \\frac{1}{2}x^2$ 描述。为防止欠拟合并确保模型具有最低程度的复杂度，一位领域专家施加了一个约束，即参数 $x$ 必须至少为 2。这便构成了一个约束优化问题。\n\n该问题的拉格朗日函数定义为 $L(x, \\lambda) = f(x) + \\lambda g(x)$，其中 $g(x) \\le 0$ 代表不等式约束，且 $\\lambda \\ge 0$ 是拉格朗日乘子。\n\n你的任务是求出拉格朗日函数的鞍点 $(x^*, \\lambda^*)$。该点对应于在满足约束条件下最小化成本函数的最优参数值 $x^*$，以及相关的最优拉格朗日乘子 $\\lambda^*$。\n\n将鞍点以有序对 $(x^*, \\lambda^*)$ 的形式报告。", "solution": "给定凸二次目标函数 $f(x) = \\frac{1}{2}x^{2}$ 以及不等式约束 $x \\geq 2$。为将其表示为标准形式 $g(x) \\leq 0$，定义 $g(x) = 2 - x$，于是约束为 $g(x) \\leq 0$。拉格朗日函数为\n$$\nL(x, \\lambda) = \\frac{1}{2}x^{2} + \\lambda(2 - x),\n$$\n且需满足对偶可行性 $\\lambda \\geq 0$。\n\n对于带仿射约束的凸问题，Karush–Kuhn–Tucker (KKT) 条件是确定最优性和刻画鞍点的充要条件。KKT 条件如下：\n- 原始可行性：$g(x^{*}) \\leq 0$，即 $x^{*} \\geq 2$。\n- 对偶可行性：$\\lambda^{*} \\geq 0$。\n- 稳定性：$\\frac{\\partial L}{\\partial x}(x^{*}, \\lambda^{*}) = 0$。\n- 互补松弛性：$\\lambda^{*} g(x^{*}) = 0$。\n\n计算稳定性条件：\n$$\n\\frac{\\partial L}{\\partial x} = x - \\lambda \\quad \\Rightarrow \\quad x^{*} - \\lambda^{*} = 0 \\quad \\Rightarrow \\quad x^{*} = \\lambda^{*}.\n$$\n应用互补松弛性：\n$$\n\\lambda^{*}(2 - x^{*}) = 0.\n$$\n考虑以下情况：\n- 如果 $\\lambda^{*} = 0$，那么根据稳定性条件有 $x^{*} = 0$，这违反了原始可行性条件 $x^{*} \\geq 2$；故排除此情况。\n- 因此必有 $2 - x^{*} = 0 \\Rightarrow x^{*} = 2$。接着根据稳定性条件，$\\lambda^{*} = x^{*} = 2$，这满足 $\\lambda^{*} \\geq 0$ 和 $x^{*} \\geq 2$。\n\n因此，唯一的 KKT 点是 $(x^{*}, \\lambda^{*}) = (2, 2)$。因为该问题是带仿射约束的凸问题，所以这个 KKT 点就是拉格朗日函数的鞍点。等价地，验证鞍点性质：$L(x, 2)$ 在 $x = 2$ 处取得最小值，并且对于所有 $\\lambda \\geq 0$ 都有 $L(2, \\lambda) = 2$，其对偶最大化点在 $\\lambda^{*} = 2$。", "answer": "$$\\boxed{\\begin{pmatrix} 2 & 2 \\end{pmatrix}}$$", "id": "2167418"}, {"introduction": "接下来，我们将 KKT 条件从抽象理论应用到具体的工程设计中。这个经典的优化问题要求在给定体积的情况下，最小化一个圆柱体的表面积。通过这个练习，你将学会如何处理多变量、一个等式约束和多个非负性约束，这展示了 KKT 方法在解决材料优化等实际设计挑战中的强大效用。[@problem_id:2407263]", "problem": "一个半径为 $r$、高为 $h$ 的直立圆柱体，其表面积为 $S(r,h) = 2 \\pi r h + 2 \\pi r^{2}$，体积为 $V(r,h) = \\pi r^{2} h$。考虑计算工程中的材料优化任务：在体积固定为 $V_{0} > 0$ 的约束下，最小化其表面积。设计变量满足 $r \\ge 0$ 和 $h \\ge 0$。\n\n使用这些定义建立约束优化问题模型，并从驻点性定义和 Karush-Kuhn-Tucker (KKT) 条件出发，完成以下任务：\n\n- 写出该问题的所有 KKT 条件（原始可行性、对偶可行性、驻点性和互补松弛性），包括对 $r$ 和 $h$ 的显式非负性约束。\n- 求解 KKT 系统以获得驻点候选解，并确定具有物理意义的解。\n- 使用适用于等式约束问题的二阶充分条件论证，证明您找到的候选解是一个局部极小值点。\n- 将最小化后的表面积 $S^{\\star}(V_{0})$ 表示为仅含 $V_{0}$ 的闭式解析表达式。\n\n您的最终答案必须是关于 $S^{\\star}(V_{0})$ 的单个闭式表达式。最终答案中不要包含单位，也不要提供如 $r^{\\star}$ 或 $h^{\\star}$ 等中间值。", "solution": "该问题经核实具有科学依据、是适定的且客观的。这是一个约束优化中的标准问题，适合使用 Karush-Kuhn-Tucker (KKT) 条件进行分析。\n\n我们首先将问题形式化。设设计变量为半径 $r$ 和高 $h$。目标是最小化表面积函数 $f(r,h) = S(r,h)$。约束条件是固定的体积和尺寸的非负性。\n\n该优化问题为：\n最小化 $f(r,h) = 2 \\pi r h + 2 \\pi r^{2}$\n约束条件为：\n$g_1(r,h) = V_{0} - \\pi r^{2} h = 0$\n$g_2(r,h) = -r \\le 0$\n$g_3(r,h) = -h \\le 0$\n\n此处，$V_{0} > 0$ 是一个固定参数。该问题的拉格朗日函数定义为：\n$L(r, h, \\lambda, \\mu_r, \\mu_h) = f(r,h) + \\lambda g_1(r,h) + \\mu_r g_2(r,h) + \\mu_h g_3(r,h)$\n$$L(r, h, \\lambda, \\mu_r, \\mu_h) = (2 \\pi r h + 2 \\pi r^{2}) + \\lambda (V_{0} - \\pi r^{2} h) - \\mu_r r - \\mu_h h$$\n其中 $\\lambda$ 是等式约束的拉格朗日乘子，$\\mu_r, \\mu_h$ 是非负性不等式约束的 KKT 乘子。\n\nKarush-Kuhn-Tucker (KKT) 条件是在非线性规划中，一个解成为最优解所必须满足的一组一阶必要条件。它们如下：\n\n1.  **驻点性**：拉格朗日函数关于优化变量的梯度必须为零。\n    $$ \\frac{\\partial L}{\\partial r} = 2 \\pi h + 4 \\pi r - 2 \\pi \\lambda r h - \\mu_r = 0 $$\n    $$ \\frac{\\partial L}{\\partial h} = 2 \\pi r - \\pi \\lambda r^{2} - \\mu_h = 0 $$\n\n2.  **原始可行性**：解必须满足所有原始约束。\n    $$ V_{0} - \\pi r^{2} h = 0 $$\n    $$ r \\ge 0 $$\n    $$ h \\ge 0 $$\n\n3.  **对偶可行性**：不等式约束的乘子必须为非负。\n    $$ \\mu_r \\ge 0 $$\n    $$ \\mu_h \\ge 0 $$\n    （等式约束的乘子 $\\lambda$ 的符号无限制。）\n\n4.  **互补松弛性**：每个不等式约束乘子与其对应的松弛量的乘积必须为零。\n    $$ \\mu_r r = 0 $$\n    $$ \\mu_h h = 0 $$\n\n为求解此系统，我们分析约束条件。原始可行性条件 $V_{0} = \\pi r^{2} h$ 以及给定的 $V_{0} > 0$ 这一事实，直接意味着 $r$ 和 $h$ 都不能为零。半径为零或高为零的圆柱体体积为零。因此，任何具有物理意义的解都必须满足 $r > 0$ 和 $h > 0$。\n\n这个观察结果极大地简化了 KKT 系统。根据互补松弛性条件：\n-   $\\mu_r r = 0$ 且 $r > 0$ 意味着 $\\mu_r = 0$。\n-   $\\mu_h h = 0$ 且 $h > 0$ 意味着 $\\mu_h = 0$。\n\n当 $\\mu_r = 0$ 和 $\\mu_h = 0$ 时，驻点性方程变为：\n(1) $2 \\pi h + 4 \\pi r - 2 \\pi \\lambda r h = 0$\n(2) $2 \\pi r - \\pi \\lambda r^{2} = 0$\n\n从方程 (2) 出发，由于 $r > 0$，我们可以两边同除以 $\\pi r$:\n$2 - \\lambda r = 0 \\implies \\lambda = \\frac{2}{r}$\n\n将这个 $\\lambda$ 的表达式代入方程 (1)：\n$2 \\pi h + 4 \\pi r - 2 \\pi \\left(\\frac{2}{r}\\right) r h = 0$\n$2 \\pi h + 4 \\pi r - 4 \\pi h = 0$\n$4 \\pi r - 2 \\pi h = 0$\n$2r = h$\n\n这个结果表明，对于固定的体积，表面积最小的圆柱体，其高等于其直径。我们现在使用体积约束来求解用 $V_0$ 表示的最优尺寸。\n$V_{0} = \\pi r^{2} h = \\pi r^{2} (2r) = 2 \\pi r^{3}$\n解出 $r$，我们得到候选驻点 $r^{\\star}$：\n$r^{\\star} = \\left(\\frac{V_{0}}{2 \\pi}\\right)^{1/3}$\n相应的高为 $h^{\\star}$：\n$h^{\\star} = 2 r^{\\star} = 2 \\left(\\frac{V_{0}}{2 \\pi}\\right)^{1/3}$\n\n候选解为 $(r^{\\star}, h^{\\star}) = \\left( \\left(\\frac{V_{0}}{2 \\pi}\\right)^{1/3}, 2 \\left(\\frac{V_{0}}{2 \\pi}\\right)^{1/3} \\right)$。\n\n为证明该点是一个局部极小值点，我们应用二阶充分条件 (SOSC)。由于在 $(r^{\\star}, h^{\\star})$ 处不等式约束是无效的，我们在起作用的（等式）约束的切空间上分析拉格朗日函数关于变量 $(r, h)$ 的黑塞矩阵。切空间是起作用约束的梯度的零空间。\n等式约束 $g_1(r,h) = V_{0} - \\pi r^{2} h = 0$ 的梯度为：\n$\\nabla g_1(r,h) = \\begin{pmatrix} -2 \\pi r h \\\\ -\\pi r^{2} \\end{pmatrix}$\n如果 $\\nabla g_1(r^{\\star}, h^{\\star}) \\cdot d = 0$，则向量 $d = \\begin{pmatrix} d_r & d_h \\end{pmatrix}^T$ 位于切空间内。在解处，$h^{\\star} = 2r^{\\star}$，所以：\n$\\begin{pmatrix} -2 \\pi r^{\\star} (2r^{\\star}) \\\\ -\\pi (r^{\\star})^{2} \\end{pmatrix}^T \\begin{pmatrix} d_r \\\\ d_h \\end{pmatrix} = -4 \\pi (r^{\\star})^{2} d_r - \\pi (r^{\\star})^{2} d_h = 0$\n由于 $r^{\\star} > 0$，这可以简化为 $4 d_r + d_h = 0$，即 $d_h = -4 d_r$。零空间由任何与 $\\begin{pmatrix} 1 & -4 \\end{pmatrix}^T$ 成比例的向量张成。\n\n拉格朗日函数 $L(r, h, \\lambda) = 2 \\pi r h + 2 \\pi r^{2} + \\lambda (V_{0} - \\pi r^{2} h)$ 关于 $(r,h)$ 的黑塞矩阵为：\n$\\nabla^2_{r,h} L = \\begin{pmatrix} \\frac{\\partial^2 L}{\\partial r^2} & \\frac{\\partial^2 L}{\\partial r \\partial h} \\\\ \\frac{\\partial^2 L}{\\partial h \\partial r} & \\frac{\\partial^2 L}{\\partial h^2} \\end{pmatrix} = \\begin{pmatrix} 4 \\pi - 2 \\pi \\lambda h & 2 \\pi - 2 \\pi \\lambda r \\\\ 2 \\pi - 2 \\pi \\lambda r & 0 \\end{pmatrix}$\n\n我们在候选点处计算此黑塞矩阵，其中 $h^{\\star} = 2r^{\\star}$ 且 $\\lambda^{\\star} = \\frac{2}{r^{\\star}}$：\n$\\frac{\\partial^2 L}{\\partial r^2} = 4 \\pi - 2 \\pi \\left(\\frac{2}{r^{\\star}}\\right)(2r^{\\star}) = 4 \\pi - 8 \\pi = -4 \\pi$\n$\\frac{\\partial^2 L}{\\partial r \\partial h} = 2 \\pi - 2 \\pi \\left(\\frac{2}{r^{\\star}}\\right)r^{\\star} = 2 \\pi - 4 \\pi = -2 \\pi$\n$\\frac{\\partial^2 L}{\\partial h^2} = 0$\n所以，$\\nabla^2_{r,h} L(r^{\\star}, h^{\\star}, \\lambda^{\\star}) = \\begin{pmatrix} -4 \\pi & -2 \\pi \\\\ -2 \\pi & 0 \\end{pmatrix}$\n\nSOSC 要求对于切空间中所有非零向量 $d$，都有 $d^T (\\nabla^2 L) d > 0$。令 $d = \\begin{pmatrix} 1 & -4 \\end{pmatrix}^T$：\n$d^T (\\nabla^2 L) d = \\begin{pmatrix} 1 & -4 \\end{pmatrix} \\begin{pmatrix} -4 \\pi & -2 \\pi \\\\ -2 \\pi & 0 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ -4 \\end{pmatrix}$\n$= \\begin{pmatrix} 1 & -4 \\end{pmatrix} \\begin{pmatrix} -4\\pi(1) - 2\\pi(-4) \\\\ -2\\pi(1) + 0(-4) \\end{pmatrix} = \\begin{pmatrix} 1 & -4 \\end{pmatrix} \\begin{pmatrix} 4\\pi \\\\ -2\\pi \\end{pmatrix}$\n$= (1)(4 \\pi) + (-4)(-2 \\pi) = 4 \\pi + 8 \\pi = 12 \\pi$\n由于 $12 \\pi > 0$，拉格朗日函数的黑塞矩阵在切空间上是正定的。因此，点 $(r^{\\star}, h^{\\star})$ 是一个严格局部极小值点。\n\n最后，我们将最小化后的表面积 $S^{\\star}(V_{0})$ 表示为 $V_{0}$ 的函数。\n$S^{\\star} = 2 \\pi r^{\\star} h^{\\star} + 2 \\pi (r^{\\star})^{2}$\n使用 $h^{\\star} = 2r^{\\star}$:\n$S^{\\star} = 2 \\pi r^{\\star} (2r^{\\star}) + 2 \\pi (r^{\\star})^{2} = 4 \\pi (r^{\\star})^{2} + 2 \\pi (r^{\\star})^{2} = 6 \\pi (r^{\\star})^{2}$\n现在，代入 $r^{\\star} = \\left(\\frac{V_{0}}{2 \\pi}\\right)^{1/3}$:\n$S^{\\star}(V_{0}) = 6 \\pi \\left( \\left(\\frac{V_{0}}{2 \\pi}\\right)^{1/3} \\right)^{2} = 6 \\pi \\left(\\frac{V_{0}}{2 \\pi}\\right)^{2/3}$\n$S^{\\star}(V_{0}) = 6 \\pi \\frac{V_{0}^{2/3}}{(2 \\pi)^{2/3}} = (3 \\cdot 2) \\pi^{1} \\cdot 2^{-2/3} \\pi^{-2/3} V_{0}^{2/3}$\n$S^{\\star}(V_{0}) = 3 \\cdot 2^{1-2/3} \\cdot \\pi^{1-2/3} \\cdot V_{0}^{2/3}$\n$S^{\\star}(V_{0}) = 3 \\cdot 2^{1/3} \\cdot \\pi^{1/3} \\cdot V_{0}^{2/3} = 3 (2 \\pi)^{1/3} V_{0}^{2/3}$\n这就是最小表面积的闭式解析表达式。", "answer": "$$\n\\boxed{3 (2 \\pi)^{1/3} V_{0}^{2/3}}\n$$", "id": "2407263"}, {"introduction": "最后的实践是将理论与计算实践联系起来，这是计算工程中的一项关键技能。这个练习要求你编写一个程序来验证一个给定的点是否满足特定优化问题的 KKT 条件。这个任务不仅能加深你对每个 KKT 条件精确含义的理解，还能让你接触到数值计算中的实际问题，比如在进行检验时使用容差 $\\epsilon$ 的必要性。[@problem_id:2407334]", "problem": "给定一个具体的非线性优化问题，要求您为 Karush-Kuhn-Tucker (KKT) 最优性条件实现一个程序化验证器。考虑以下计算工程形式的最小化问题：最小化目标函数 $f(x) = (x_1 - 1)^2 + (x_2 - 2)^2$，需满足不等式约束 $g_1(x) = x_1 + x_2 - 2 \\le 0$、$g_2(x) = -x_1 \\le 0$、$g_3(x) = -x_2 \\le 0$ 和等式约束 $h_1(x) = x_1 - x_2 = 0$，其中 $x \\in \\mathbb{R}^2$。令 $\\lambda \\in \\mathbb{R}^3$ 表示不等式约束的拉格朗日乘子向量，$\\mu \\in \\mathbb{R}$ 表示等式约束的乘子。KKT 验证必须包括四个标准组成部分：原始可行性、对偶可行性、互补松弛性和平稳性。对平稳性残差使用欧几里得向量范数，并在规定的容差 $\\epsilon > 0$ 内执行所有检查。\n\n您的任务是编写一个完整的程序，实现一个名为 check_kkt(x, lam, mu, eps) 的函数，该函数返回一个布尔值，指示给定的三元组 $(x, \\lambda, \\mu)$ 是否在容差 $\\epsilon$ 内满足指定问题的 KKT 条件。该函数必须执行以下检查：\n- 原始可行性：所有不等式约束满足 $g_i(x) \\le \\epsilon$，所有等式约束满足 $|h_j(x)| \\le \\epsilon$。\n- 对偶可行性：所有不等式约束的乘子满足 $\\lambda_i \\ge -\\epsilon$。\n- 互补松弛性：所有乘积满足 $|\\lambda_i \\, g_i(x)| \\le \\epsilon$。\n- 平稳性：拉格朗日函数梯度的欧几里得范数满足 $\\|\\nabla f(x) + \\sum_{i=1}^{3} \\lambda_i \\nabla g_i(x) + \\mu \\nabla h_1(x)\\|_2 \\le \\epsilon$。\n\n此问题的梯度如下：\n- $\\nabla f(x) = \\big(2(x_1 - 1), \\, 2(x_2 - 2)\\big)$，\n- $\\nabla g_1(x) = (1, \\, 1)$，$\\nabla g_2(x) = (-1, \\, 0)$，$\\nabla g_3(x) = (0, \\, -1)$，\n- $\\nabla h_1(x) = (1, \\, -1)$。\n\n您的程序必须对以下输入测试套件评估 check_kkt 函数，并聚合布尔结果。对于每个测试用例，$x$ 是一个长度为 2 的实数数组，$\\lambda$ 是一个长度为 3 的实数数组，$\\mu$ 是一个实数标量，$\\epsilon$ 是一个正实数标量：\n- 测试用例 1 (标准 KKT 点)：$x = [1, 1]$，$\\lambda = [1, 0, 0]$，$\\mu = -1$，$\\epsilon = 10^{-8}$。预期：True。\n- 测试用例 2 (平稳性被违反)：$x = [1, 1]$，$\\lambda = [0.5, 0, 0]$，$\\mu = -0.5$，$\\epsilon = 10^{-8}$。预期：False。\n- 测试用例 3 (原始不可行)：$x = [1.2, 1.2]$，$\\lambda = [1, 0, 0]$，$\\mu = -1$，$\\epsilon = 10^{-8}$。预期：False。\n- 测试用例 4 (在容差内的近似 KKT 点)：$x = [1, 1 + 10^{-7}]$，$\\lambda = [1, -10^{-7}, 0]$，$\\mu = -1 - 10^{-7}$，$\\epsilon = 10^{-6}$。预期：True。\n- 测试用例 5 (互补松弛性被违反)：$x = [1, 1]$，$\\lambda = [1, 0.1, 0]$，$\\mu = -1$，$\\epsilon = 10^{-8}$。预期：False。\n\n最终输出格式要求：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表的结果（例如，\"[True,False,True,False,True]\"）。不得打印任何额外文本。不涉及物理单位。不涉及角度。不涉及百分比。唯一可接受的输出类型是按规定聚合的布尔值。", "solution": "所提供的问题经过了严格验证，并被认为是有效的。这是一个定义明确、有科学依据的计算工程领域问题，具体涉及非线性优化问题的 Karush-Kuhn-Tucker (KKT) 最优性条件的验证。所有函数、变量和条件都有明确定义，任务是实现一个数值验证器。\n\n该问题是最小化目标函数 $f(x)$，受一组不等式和等式约束。这是一个标准的非线性规划 (NLP) 问题，形式如下：\n$$\n\\begin{aligned}\n\\text{minimize} \\quad & f(x) \\\\\n\\text{subject to} \\quad & g_i(x) \\le 0, \\quad i = 1, \\dots, m \\\\\n& h_j(x) = 0, \\quad j = 1, \\dots, p\n\\end{aligned}\n$$\n对于给定的具体情况：\n-   目标函数：$f(x) = (x_1 - 1)^2 + (x_2 - 2)^2$，其中 $x = (x_1, x_2) \\in \\mathbb{R}^2$。\n-   不等式约束 ($m=3$)：\n    -   $g_1(x) = x_1 + x_2 - 2 \\le 0$\n    -   $g_2(x) = -x_1 \\le 0$\n    -   $g_3(x) = -x_2 \\le 0$\n-   等式约束 ($p=1$)：\n    -   $h_1(x) = x_1 - x_2 = 0$\n\nKarush-Kuhn-Tucker 条件是 NLP 中的解为最优解的一阶必要条件，前提是满足某些正则性条件。为了陈述这些条件，我们首先引入与问题相关的拉格朗日函数 $L(x, \\lambda, \\mu)$：\n$$\nL(x, \\lambda, \\mu) = f(x) + \\sum_{i=1}^{m} \\lambda_i g_i(x) + \\sum_{j=1}^{p} \\mu_j h_j(x)\n$$\n其中 $\\lambda = (\\lambda_1, \\dots, \\lambda_m)$ 是不等式约束的拉格朗日乘子（也称为对偶变量），$\\mu = (\\mu_1, \\dots, \\mu_p)$ 是等式约束的乘子。\n\n对于给定问题，拉格朗日函数为：\n$$\nL(x, \\lambda, \\mu) = (x_1 - 1)^2 + (x_2 - 2)^2 + \\lambda_1(x_1 + x_2 - 2) + \\lambda_2(-x_1) + \\lambda_3(-x_2) + \\mu_1(x_1 - x_2)\n$$\n由于只有一个等式约束，我们将其乘子表示为 $\\mu$。一个点 $(x^*, \\lambda^*, \\mu^*)$ 成为最优解候选点的 KKT 条件是：\n\n1.  **原始可行性**：点 $x^*$ 必须满足所有原始约束。\n    -   $g_i(x^*) \\le 0$ 对于 $i \\in \\{1, 2, 3\\}$\n    -   $h_1(x^*) = 0$\n2.  **对偶可行性**：不等式约束的拉格朗日乘子必须为非负。\n    -   $\\lambda_i^* \\ge 0$ 对于 $i \\in \\{1, 2, 3\\}$\n3.  **互补松弛性**：对于每个不等式约束，要么该约束是激活的（即等式成立），要么其对应的乘子为零。\n    -   $\\lambda_i^* g_i(x^*) = 0$ 对于 $i \\in \\{1, 2, 3\\}$\n4.  **平稳性**：在点 $(x^*, \\lambda^*, \\mu^*)$，拉格朗日函数相对于原始变量 $x$ 的梯度必须为零。\n    -   $\\nabla_x L(x^*, \\lambda^*, \\mu^*) = 0$\n\n对于数值验证，这些精确条件必须使用一个小的正容差 $\\epsilon$ 进行松弛。程序化检查的结构如下：\n\n-   **原始可行性检查**：\n    -   $g_i(x) \\le \\epsilon$ 对于 $i \\in \\{1, 2, 3\\}$\n    -   $|h_1(x)| \\le \\epsilon$\n-   **对偶可行性检查**：\n    -   $\\lambda_i \\ge -\\epsilon$ 对于 $i \\in \\{1, 2, 3\\}$。这允许出现数值上为零的微小负值。\n-   **互补松弛性检查**：\n    -   $|\\lambda_i g_i(x)| \\le \\epsilon$ 对于 $i \\in \\{1, 2, 3\\}$。\n-   **平稳性检查**：\n    拉格朗日函数相对于 $x$ 的梯度是：\n    $$\n    \\nabla_x L(x, \\lambda, \\mu) = \\nabla f(x) + \\sum_{i=1}^{3} \\lambda_i \\nabla g_i(x) + \\mu \\nabla h_1(x)\n    $$\n    代入给定的梯度：\n    -   $\\nabla f(x) = (2(x_1 - 1), 2(x_2 - 2))$\n    -   $\\nabla g_1(x) = (1, 1)$，$\\nabla g_2(x) = (-1, 0)$，$\\nabla g_3(x) = (0, -1)$\n    -   $\\nabla h_1(x) = (1, -1)$\n    拉格朗日梯度的分量是：\n    $$\n    \\frac{\\partial L}{\\partial x_1} = 2(x_1 - 1) + \\lambda_1(1) + \\lambda_2(-1) + \\lambda_3(0) + \\mu(1) = 2(x_1 - 1) + \\lambda_1 - \\lambda_2 + \\mu\n    $$\n    $$\n    \\frac{\\partial L}{\\partial x_2} = 2(x_2 - 2) + \\lambda_1(1) + \\lambda_2(0) + \\lambda_3(-1) + \\mu(-1) = 2(x_2 - 2) + \\lambda_1 - \\lambda_3 - \\mu\n    $$\n    平稳性条件则是这个梯度向量的欧几里得范数（称为平稳性残差）必须接近于零：\n    $$\n    \\|\\nabla_x L(x, \\lambda, \\mu)\\|_2 \\le \\epsilon\n    $$\n\n实现的函数 `check_kkt` 将系统地执行这四项检查。如果任何一项检查失败，函数立即返回 `False`。如果所有检查都通过，则返回 `True`。\n\n让我们用第一个测试用例来演示：$x = [1, 1]$，$\\lambda = [1, 0, 0]$，$\\mu = -1$，以及 $\\epsilon = 10^{-8}$。\n-   变量：$x_1 = 1$，$x_2 = 1$，$\\lambda_1 = 1$，$\\lambda_2 = 0$，$\\lambda_3 = 0$，$\\mu = -1$。\n\n-   **原始可行性**：\n    -   $g_1(x) = 1 + 1 - 2 = 0$。$0 \\le 10^{-8}$ 为真。\n    -   $g_2(x) = -1$。$-1 \\le 10^{-8}$ 为真。\n    -   $g_3(x) = -1$。$-1 \\le 10^{-8}$ 为真。\n    -   $h_1(x) = 1 - 1 = 0$。$|0| \\le 10^{-8}$ 为真。\n    条件满足。\n\n-   **对偶可行性**：\n    -   $\\lambda_1 = 1 \\ge -10^{-8}$ 为真。\n    -   $\\lambda_2 = 0 \\ge -10^{-8}$ 为真。\n    -   $\\lambda_3 = 0 \\ge -10^{-8}$ 为真。\n    条件满足。\n\n-   **互补松弛性**：\n    -   $|\\lambda_1 g_1(x)| = |1 \\cdot 0| = 0$。$0 \\le 10^{-8}$ 为真。\n    -   $|\\lambda_2 g_2(x)| = |0 \\cdot (-1)| = 0$。$0 \\le 10^{-8}$ 为真。\n    -   $|\\lambda_3 g_3(x)| = |0 \\cdot (-1)| = 0$。$0 \\le 10^{-8}$ 为真。\n    条件满足。\n\n-   **平稳性**：\n    -   $\\frac{\\partial L}{\\partial x_1} = 2(1 - 1) + 1 - 0 + (-1) = 0$。\n    -   $\\frac{\\partial L}{\\partial x_2} = 2(1 - 2) + 1 - 0 - (-1) = -2 + 1 + 1 = 0$。\n    -   梯度向量为 $(0, 0)$。\n    -   $\\|\\nabla_x L\\|_2 = \\sqrt{0^2 + 0^2} = 0$。$0 \\le 10^{-8}$ 为真。\n    条件满足。\n\n由于所有四个条件都在容差 $\\epsilon$ 内得到满足，点 $(x, \\lambda, \\mu)$ 是一个有效的 KKT 点，函数正确地返回 `True`。其他测试用例也以类似方式评估，程序将聚合这些布尔结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef check_kkt(x, lam, mu, eps):\n    \"\"\"\n    Verifies the KKT conditions for a given point (x, lam, mu).\n\n    Args:\n        x (np.ndarray): Primal variables, a 2-element array [x1, x2].\n        lam (np.ndarray): Lagrange multipliers for inequality constraints, a 3-element array [lam1, lam2, lam3].\n        mu (float): Lagrange multiplier for the equality constraint.\n        eps (float): Tolerance for all numerical checks.\n\n    Returns:\n        bool: True if the KKT conditions are satisfied, False otherwise.\n    \"\"\"\n    x1, x2 = x[0], x[1]\n    lam1, lam2, lam3 = lam[0], lam[1], lam[2]\n\n    # --- 1. Primal Feasibility ---\n    # g1(x) = x1 + x2 - 2 <= 0\n    g1 = x1 + x2 - 2\n    if g1 > eps:\n        return False\n\n    # g2(x) = -x1 <= 0\n    g2 = -x1\n    if g2 > eps:\n        return False\n\n    # g3(x) = -x2 <= 0\n    g3 = -x2\n    if g3 > eps:\n        return False\n\n    # h1(x) = x1 - x2 = 0\n    h1 = x1 - x2\n    if abs(h1) > eps:\n        return False\n        \n    # --- 2. Dual Feasibility ---\n    # lam_i >= 0 for all i\n    if np.any(lam  -eps):\n        return False\n\n    # --- 3. Complementary Slackness ---\n    # lam1 * g1(x) = 0\n    if abs(lam1 * g1) > eps:\n        return False\n\n    # lam2 * g2(x) = 0\n    if abs(lam2 * g2) > eps:\n        return False\n\n    # lam3 * g3(x) = 0\n    if abs(lam3 * g3) > eps:\n        return False\n\n    # --- 4. Stationarity ---\n    # Gradient of the Lagrangian with respect to x must be zero.\n    # grad_L_x1 = 2*(x1 - 1) + lam1 - lam2 + mu\n    # grad_L_x2 = 2*(x2 - 2) + lam1 - lam3 - mu\n    grad_L_x1 = 2 * (x1 - 1) + lam1 - lam2 + mu\n    grad_L_x2 = 2 * (x2 - 2) + lam1 - lam3 - mu\n    \n    grad_L = np.array([grad_L_x1, grad_L_x2])\n    \n    # Check the Euclidean norm of the gradient\n    stationarity_residual = np.linalg.norm(grad_L)\n    \n    if stationarity_residual > eps:\n        return False\n        \n    # If all conditions pass\n    return True\n\ndef solve():\n    \"\"\"\n    Executes the KKT verification for a predefined suite of test cases.\n    \"\"\"\n    test_cases = [\n        # Test case 1 (canonical KKT point)\n        {'x': np.array([1.0, 1.0]), 'lam': np.array([1.0, 0.0, 0.0]), 'mu': -1.0, 'eps': 1e-8},\n        # Test case 2 (stationarity violated)\n        {'x': np.array([1.0, 1.0]), 'lam': np.array([0.5, 0.0, 0.0]), 'mu': -0.5, 'eps': 1e-8},\n        # Test case 3 (primal infeasible)\n        {'x': np.array([1.2, 1.2]), 'lam': np.array([1.0, 0.0, 0.0]), 'mu': -1.0, 'eps': 1e-8},\n        # Test case 4 (near-KKT within tolerance)\n        {'x': np.array([1.0, 1.0 + 1e-7]), 'lam': np.array([1.0, -1e-7, 0.0]), 'mu': -1.0 - 1e-7, 'eps': 1e-6},\n        # Test case 5 (complementary slackness violated)\n        {'x': np.array([1.0, 1.0]), 'lam': np.array([1.0, 0.1, 0.0]), 'mu': -1.0, 'eps': 1e-8},\n    ]\n\n    results = []\n    for case in test_cases:\n        result = check_kkt(case['x'], case['lam'], case['mu'], case['eps'])\n        results.append(result)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2407334"}]}