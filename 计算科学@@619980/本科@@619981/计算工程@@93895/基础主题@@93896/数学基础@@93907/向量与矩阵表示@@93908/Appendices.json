{"hands_on_practices": [{"introduction": "本实践练习将理论与实际应用相结合，探讨如何根据一组抽象的物理和对称性约束来构建一个线性变换矩阵。我们将以数字图像处理中的一个经典任务——将RGB颜色向量转换为灰度——为例，通过这个过程，你不仅能设计出变换矩阵，还能深入理解其零空间等基本子空间的几何意义。这个练习旨在锻炼你将实际需求转化为矩阵数学语言的能力 [@problem_id:2449842]。", "problem": "在数字成像流水线中，每个彩色像素都由三维实向量空间 $\\mathbb{R}^{3}$ 中的一个向量表示，其坐标 $(R,G,B)^{\\top}$ 分别对应于红色、绿色和蓝色（RGB）。请设计一个由矩阵 $A \\in \\mathbb{R}^{3 \\times 3}$ 表示的线性变换，该变换将任意RGB向量 $x \\in \\mathbb{R}^{3}$ 映射到一个灰度向量 $y \\in \\mathbb{R}^{3}$，其中所有三个分量都相等，并代表一个标量灰度强度。假设该变换必须满足以下物理和对称性约束：(i) 它是线性的；(ii) 它保持整个灰度轴不变，即对于任意标量 $k \\in \\mathbb{R}$，有 $A \\,(k \\,\\mathbf{1}) = k \\,\\mathbf{1}$，其中 $\\mathbf{1} = (1,1,1)^{\\top}$；(iii) 在没有任何偏好通道的情况下，灰度强度在RGB通道的置换下保持不变。请仅根据这些约束，确定唯一的矩阵 $A$。\n\n分析矩阵 $A$ 的零空间在 $\\mathbb{R}^{3}$ 中关于RGB颜色方向的几何意义。然后，计算 $A$ 的零空间的维度。请将你的最终答案以等于零空间维度的单个数字形式给出。无需四舍五入，也无需单位。", "solution": "对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 每个彩色像素是 $\\mathbb{R}^{3}$ 中的一个向量，$x = (R,G,B)^{\\top}$。\n- 该变换是线性的，由一个矩阵 $A \\in \\mathbb{R}^{3 \\times 3}$ 表示。\n- 该变换将一个RGB向量 $x$ 映射到一个灰度向量 $y \\in \\mathbb{R}^{3}$，其中 $y=(g,g,g)^{\\top}$，g为某个标量强度。\n- 约束 (i)：变换是线性的，$y = Ax$。\n- 约束 (ii)：变换保持整个灰度轴不变。对于任意标量 $k \\in \\mathbb{R}$，有 $A \\,(k \\,\\mathbf{1}) = k \\,\\mathbf{1}$，其中 $\\mathbf{1} = (1,1,1)^{\\top}$。\n- 约束 (iii)：灰度强度在RGB通道的置换下保持不变。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题具有科学依据、是适定且客观的。这是一个应用于计算工程（色彩空间变换）的线性代数标准问题。所提供的约束在数学上是精确且一致的，允许推导出唯一解。该问题不违反任何基本原理，不基于错误的前提，且术语定义明确。\n\n**步骤3：结论与行动**\n此问题有效。下面将推导完整解答。\n\n**变换矩阵 $A$ 的推导**\n\n设变换矩阵为 $A = \\begin{pmatrix} a_{11} & a_{12} & a_{13} \\\\ a_{21} & a_{22} & a_{23} \\\\ a_{31} & a_{32} & a_{33} \\end{pmatrix}$。\n输入向量为 $x = (R, G, B)^{\\top}$。输出向量为 $y = Ax$。\n问题指出输出 $y$ 必须是一个灰度向量，意味着它的所有分量都相等。设这个公共值为 $g$。\n$$y = Ax = \\begin{pmatrix} a_{11}R + a_{12}G + a_{13}B \\\\ a_{21}R + a_{22}G + a_{23}B \\\\ a_{31}R + a_{32}G + a_{33}B \\end{pmatrix} = \\begin{pmatrix} g \\\\ g \\\\ g \\end{pmatrix}$$\n因为这必须对任意输入向量 $(R,G,B)^{\\top} \\in \\mathbb{R}^{3}$ 都成立，所以定义输出各分量的线性形式必须是相同的。这意味着矩阵 $A$ 的各行必须相同。设第一行为 $(c_1, c_2, c_3)$。那么矩阵 $A$ 必须具有以下形式：\n$$A = \\begin{pmatrix} c_1 & c_2 & c_3 \\\\ c_1 & c_2 & c_3 \\\\ c_1 & c_2 & c_3 \\end{pmatrix}$$\n标量灰度强度由 $g = c_1 R + c_2 G + c_3 B$ 给出。\n\n我们现在应用约束 (ii)：保持灰度轴不变。对于任意 $k \\in \\mathbb{R}$，灰度轴上的一个向量是 $k \\mathbf{1} = (k,k,k)^{\\top}$。\n$$A(k\\mathbf{1}) = \\begin{pmatrix} c_1 & c_2 & c_3 \\\\ c_1 & c_2 & c_3 \\\\ c_1 & c_2 & c_3 \\end{pmatrix} \\begin{pmatrix} k \\\\ k \\\\ k \\end{pmatrix} = \\begin{pmatrix} k(c_1+c_2+c_3) \\\\ k(c_1+c_2+c_3) \\\\ k(c_1+c_2+c_3) \\end{pmatrix}$$\n这个输出必须等于 $k\\mathbf{1} = (k,k,k)^{\\top}$。\n$$k(c_1+c_2+c_3) = k$$\n该等式必须对所有 $k \\in \\mathbb{R}$ 成立。当 $k \\neq 0$ 时，我们可以两边同除以 $k$，得到条件：\n$$c_1 + c_2 + c_3 = 1$$\n\n接下来，我们应用约束 (iii)：灰度强度 $g$ 在RGB通道的置换下保持不变。强度为 $g(R,G,B) = c_1 R + c_2 G + c_3 B$。\n我们考虑前两个通道 $R$ 和 $G$ 的一个置换。强度必须保持不变。\n$$g(G,R,B) = c_1 G + c_2 R + c_3 B$$\n令 $g(R,G,B) = g(G,R,B)$：\n$$c_1 R + c_2 G + c_3 B = c_1 G + c_2 R + c_3 B$$\n$$(c_1 - c_2)R + (c_2 - c_1)G = 0$$\n$$(c_1 - c_2)(R - G) = 0$$\n这必须对所有 $R,G \\in \\mathbb{R}$ 成立。我们可以选择 $R \\neq G$，这就迫使 $c_1 - c_2 = 0$，所以 $c_1 = c_2$。\n类似地，考虑第二和第三个通道 $G$ 和 $B$ 的置换：\n$$g(R,B,G) = c_1 R + c_2 B + c_3 G$$\n令 $g(R,G,B) = g(R,B,G)$：\n$$c_1 R + c_2 G + c_3 B = c_1 R + c_2 B + c_3 G$$\n$$(c_2 - c_3)G + (c_3 - c_2)B = 0$$\n$$(c_2 - c_3)(G - B) = 0$$\n这必须对所有 $G,B \\in \\mathbb{R}$ 成立。我们可以选择 $G \\neq B$，这就迫使 $c_2 - c_3 = 0$，所以 $c_2 = c_3$。\n结合这些结果，我们发现所有三个系数必须相等：$c_1 = c_2 = c_3$。我们称这个公共值为 $c$。\n\n现在，我们将这个结果与来自约束 (ii) 的条件相结合：\n$$c_1 + c_2 + c_3 = c + c + c = 3c = 1$$\n这得出 $c = \\frac{1}{3}$。\n因此，满足所有约束的唯一矩阵 $A$ 是：\n$$A = \\begin{pmatrix} \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\\\ \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\\\ \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\end{pmatrix}$$\n\n**零空间的分析和维度**\n\n$A$ 的零空间，记作 $\\text{Null}(A)$，是所有满足 $Ax = \\mathbf{0}$ 的向量 $x = (R,G,B)^{\\top} \\in \\mathbb{R}^{3}$ 的集合。\n$$Ax = \\begin{pmatrix} \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\\\ \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\\\ \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\end{pmatrix} \\begin{pmatrix} R \\\\ G \\\\ B \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\end{pmatrix}$$\n这个矩阵方程简化为单个线性方程：\n$$\\frac{1}{3}(R+G+B) = 0$$\n或者等价地，\n$$R+G+B=0$$\n在几何上，这个方程定义了三维空间 $\\mathbb{R}^{3}$ 中的一个平面。这个平面穿过原点 $(0,0,0)^{\\top}$，并且其法向量为 $\\mathbf{n} = (1,1,1)^{\\top}$，这正是灰度轴的方向。在色彩科学的背景下，变换 $A$ 将任意颜色向量投影到灰度轴上。所得灰色的强度是 $R$、$G$ 和 $B$分量的平均值。零空间由所有被映射到黑色（零强度）的颜色向量组成，也就是那些分量之和为零的向量。这些向量代表了纯色度信息，与亮度（灰度）轴正交。\n\n为了求零空间的维度，我们可以应用秩-零度定理，该定理指出对于一个有 $n$ 列的矩阵 $A$，有 $\\text{rank}(A) + \\text{dim}(\\text{Null}(A)) = n$。\n在我们的例子中，$A$ 是一个 $3 \\times 3$ 矩阵，所以 $n = 3$。$A$ 的各行均相同且非零，因此它们是线性相关的。行空间由单个向量 $(\\frac{1}{3}, \\frac{1}{3}, \\frac{1}{3})$ 张成，所以 $A$ 的秩为 $1$。\n$$\\text{rank}(A) = 1$$\n应用秩-零度定理：\n$$1 + \\text{dim}(\\text{Null}(A)) = 3$$\n求解零空间的维度：\n$$\\text{dim}(\\text{Null}(A)) = 3 - 1 = 2$$\n这个结果与零空间的几何解释——即 $\\mathbb{R}^{3}$ 中通过原点的一个平面，它是一个二维子空间——是一致的。\n$A$ 的零空间的维度是 $2$。", "answer": "$$\\boxed{2}$$", "id": "2449842"}, {"introduction": "在计算工程中，用矩阵表示和求解物理系统是核心技能之一。本练习将带你进入计算力学的世界，通过求解一个由刚度矩阵 $K$ 定义的线性系统 $K\\mathbf{u}=\\mathbf{f}$，来计算一维杆在不同载荷下的位移。这个实践将让你亲手体验如何使用矩阵来模拟离散化的物理结构，并理解求解线性方程组如何揭示系统的物理响应，例如在不同外力作用下的变形情况 [@problem_id:2449826]。", "problem": "给定一个线性系统，它代表了一根杆件的一维有限元离散化，由一个对称三对角刚度矩阵表示。设刚度矩阵 $K \\in \\mathbb{R}^{5 \\times 5}$ 和载荷向量 $\\mathbf{f}^{(k)} \\in \\mathbb{R}^{5}$ 定义如下：\n$$\nK = \\begin{bmatrix}\n2 & -1 & 0 & 0 & 0 \\\\\n-1 & 2 & -1 & 0 & 0 \\\\\n0 & -1 & 2 & -1 & 0 \\\\\n0 & 0 & -1 & 2 & -1 \\\\\n0 & 0 & 0 & -1 & 2\n\\end{bmatrix},\n$$\n并且载荷向量的测试组为\n$$\n\\mathbf{f}^{(1)} = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 1 \\end{bmatrix},\\quad\n\\mathbf{f}^{(2)} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix},\\quad\n\\mathbf{f}^{(3)} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\\\ 5 \\end{bmatrix},\\quad\n\\mathbf{f}^{(4)} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 1 \\\\ 0 \\\\ 0 \\end{bmatrix}.\n$$\n对于每个载荷向量 $\\mathbf{f}^{(k)}$，计算满足以下线性系统的位移向量 $\\mathbf{u}^{(k)} \\in \\mathbb{R}^{5}$\n$$\nK \\,\\mathbf{u}^{(k)} = \\mathbf{f}^{(k)}.\n$$\n所有计算均为纯数值计算且无量纲；无需物理单位。计算不涉及角度。任何输出中均不得出现百分比。\n\n你的程序必须处理所提供的测试组，并在单行内生成四个位移向量 $\\left[\\mathbf{u}^{(1)}, \\mathbf{u}^{(2)}, \\mathbf{u}^{(3)}, \\mathbf{u}^{(4)}\\right]$ 的列表，其中每个向量表示为一个包含 $5$ 个浮点数的列表，每个浮点数四舍五入到 $6$ 位小数。最终输出格式必须是如下形式的单行文本\n$$\n\\big[\\,[u^{(1)}_1,\\dots,u^{(1)}_5],[u^{(2)}_1,\\dots,u^{(2)}_5],[u^{(3)}_1,\\dots,u^{(3)}_5],[u^{(4)}_1,\\dots,u^{(4)}_5]\\,\\big],\n$$\n所有条目和子列表均用逗号分隔，且前后无任何额外文本。\n\n覆盖性设计：\n- 一般情况：$\\mathbf{f}^{(3)}$ 是一个非平凡的密集载荷。\n- 边界条件行为：$\\mathbf{f}^{(2)}$ 是零载荷。\n- 边缘局部化载荷：$\\mathbf{f}^{(1)}$ 仅作用于边界自由度。\n- 内部局部化载荷：$\\mathbf{f}^{(4)}$ 仅作用于中心自由度。\n\n你的程序应生成单行输出，其中包含用方括号括起来的结果，结果形式为逗号分隔的列表（例如，$[\\text{result}_1,\\text{result}_2,\\text{result}_3]$），在本问题中，结果是采用上文所述的精确嵌套列表结构的四个位移向量。", "solution": "所给出的问题是计算工程领域的一个标准练习，具体涉及求解形如 $K \\mathbf{u} = \\mathbf{f}$ 的线性代数方程组。此处，$K$ 代表一个离散化的一维力学系统的刚度矩阵，$\\mathbf{f}$ 是一个外加载荷向量，$\\mathbf{u}$ 是最终的位移向量。\n\n在进行求解之前，我们必须首先验证问题的适定性。对于任意给定的 $\\mathbf{f}$，唯一解 $\\mathbf{u}$ 存在的充要条件是矩阵 $K$ 非奇异，即其行列式不为零（$\\det(K) \\neq 0$）。给定的刚度矩阵是：\n$$\nK = \\begin{bmatrix}\n2 & -1 & 0 & 0 & 0 \\\\\n-1 & 2 & -1 & 0 & 0 \\\\\n0 & -1 & 2 & -1 & 0 \\\\\n0 & 0 & -1 & 2 & -1 \\\\\n0 & 0 & 0 & -1 & 2\n\\end{bmatrix}\n$$\n这是一个对称、三对角、托普利茨 (Toeplitz) 矩阵。此类矩阵经常源于在特定边界条件下对一维负拉普拉斯算子 $-\\frac{d^2}{dx^2}$ 进行的有限差分或有限元离散化。\n\n$K$ 的可逆性可以通过检查其特征值来确定。对于一个这种形式的 $n \\times n$ 矩阵，其特征值 $\\lambda_j$ 由以下解析公式给出：\n$$\n\\lambda_j = 2 - 2 \\cos\\left(\\frac{j\\pi}{n+1}\\right), \\quad \\text{for } j = 1, 2, \\dots, n\n$$\n在我们的例子中，$n=5$。对于 $j \\in \\{1, 2, 3, 4, 5\\}$，余弦函数的参数 $\\frac{j\\pi}{6}$ 严格位于区间 $(0, \\pi)$ 内，在此区间中 $\\cos(x) < 1$。因此，所有特征值 $\\lambda_j = 2(1 - \\cos(\\frac{j\\pi}{6}))$ 都严格为正。一个所有特征值均为正的矩阵是正定矩阵，而正定矩阵总是可逆的。行列式是特征值的乘积，因此也为正。具体来说，$\\det(K) = n+1 = 6$。\n\n由于 $K$ 是可逆的，该问题是适定的。对于每个载荷向量 $\\mathbf{f}^{(k)}$，存在一个唯一的位移向量 $\\mathbf{u}^{(k)}$，由以下形式解给出：\n$$\n\\mathbf{u}^{(k)} = K^{-1} \\mathbf{f}^{(k)}\n$$\n任务是为以下四个测试用例中的每一个计算该解：\n$$\n\\mathbf{f}^{(1)} = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 1 \\end{bmatrix},\\quad\n\\mathbf{f}^{(2)} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix},\\quad\n\\mathbf{f}^{(3)} = \\begin{bmatrix} 1 \\\\ 2 \\\\ 3 \\\\ 4 \\\\ 5 \\end{bmatrix},\\quad\n\\mathbf{f}^{(4)} = \\begin{bmatrix} 0 \\\\ 0 \\\\ 1 \\\\ 0 \\\\ 0 \\end{bmatrix}\n$$\n在数值计算上，直接求解线性系统比显式计算逆矩阵 $K^{-1}$ 更高效、更稳定。为此，可以采用标准的数值方法，例如 LU 分解，然后进行前向和后向代换。本实现将使用一个标准数值库提供的鲁棒线性求解器。\n\n步骤如下：\n1.  定义矩阵 $K$ 和载荷向量集合 $\\mathbf{f}^{(k)}$。\n2.  遍历每个载荷向量 $\\mathbf{f}^{(k)}$。\n3.  对于每个 $\\mathbf{f}^{(k)}$，求解方程组 $K \\mathbf{u}^{(k)} = \\mathbf{f}^{(k)}$ 以找到 $\\mathbf{u}^{(k)}$。\n4.  收集结果向量 $\\mathbf{u}^{(k)}$，并根据输出规范对其进行格式化，将每个分量四舍五入到 6 位小数。\n\n$\\mathbf{f}^{(2)} = \\mathbf{0}$ 的情况是平凡的：由于 $K$ 可逆， $K \\mathbf{u} = \\mathbf{0}$ 的唯一解是零向量 $\\mathbf{u}^{(2)} = \\mathbf{0}$。其他情况代表不同的载荷分布，并将产生非平凡的位移向量。该问题是有效的，现在可以通过算法求解。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves a set of linear systems Ku=f for a given stiffness matrix K\n    and multiple load vectors f.\n    \"\"\"\n    # Define the symmetric tridiagonal stiffness matrix K.\n    K = np.array([\n        [2.0, -1.0,  0.0,  0.0,  0.0],\n        [-1.0, 2.0, -1.0,  0.0,  0.0],\n        [ 0.0, -1.0, 2.0, -1.0,  0.0],\n        [ 0.0,  0.0, -1.0, 2.0, -1.0],\n        [ 0.0,  0.0,  0.0, -1.0, 2.0]\n    ])\n\n    # Define the test suite of load vectors f^(k).\n    test_cases = [\n        np.array([1.0, 0.0, 0.0, 0.0, 1.0]),  # f^(1)\n        np.array([0.0, 0.0, 0.0, 0.0, 0.0]),  # f^(2)\n        np.array([1.0, 2.0, 3.0, 4.0, 5.0]),  # f^(3)\n        np.array([0.0, 0.0, 1.0, 0.0, 0.0])   # f^(4)\n    ]\n\n    results = []\n    # Iterate through each load vector and solve the linear system.\n    for f_vector in test_cases:\n        # Use numpy's high-performance linear algebra solver.\n        u_vector = np.linalg.solve(K, f_vector)\n        results.append(u_vector)\n\n    # Format the results according to the problem specification.\n    # Each float is rounded to 6 decimal places.\n    # The final output must be a single-line string representation of a list of lists.\n    rounded_results_as_lists = [np.round(u, 6).tolist() for u in results]\n\n    # Manually construct the string to ensure no spaces and exact comma separation.\n    inner_strings = []\n    for res_list in rounded_results_as_lists:\n        # Format numbers to avoid trailing zeros where not needed, like `1.0` not `1.000000`\n        # `map(str, ...)` handles this correctly.\n        inner_strings.append(f\"[{','.join(map(str, res_list))}]\")\n    \n    final_output_string = f\"[{','.join(inner_strings)}]\"\n    \n    # Print the final result in the exact required format.\n    print(final_output_string)\n\nsolve()\n```", "id": "2449826"}, {"introduction": "能够求解问题固然重要，但理解求解方法的数值特性则更为关键。本练习探讨了求解最小二乘问题的两种标准算法——QR分解法与正规方程法——在数值稳定性上的差异。通过分析，你将理解条件数 $\\kappa_2(A)$ 的概念，以及为什么一种算法在处理病态问题时会比另一种算法精确得多。这项实践旨在强调，在计算工程领域，算法的选择与数学模型本身同等重要，它直接关系到最终计算结果的可靠性 [@problem_id:2449782]。", "problem": "考虑一个满列秩矩阵 $A \\in \\mathbb{R}^{m \\times n}$（其中 $m \\ge n$）和一个向量 $\\mathbf{b} \\in \\mathbb{R}^{m}$。线性最小二乘问题旨在寻找一个 $\\mathbf{x}^\\star \\in \\mathbb{R}^{n}$，以最小化欧几里得范数 $||A\\mathbf{x} - \\mathbf{b}||_2$。两种标准的计算方法是：\n(i) 计算正交三角（QR）分解 $A = Q R$，其中 $Q \\in \\mathbb{R}^{m \\times m}$ 是正交矩阵，$R \\in \\mathbb{R}^{m \\times n}$ 是上三角矩阵，然后求解该三角系统以得到最小二乘解；\n(ii) 构造法方程 $A^T A \\mathbf{x} = A^T \\mathbf{b}$ 并求解得到的对称正定（SPD）系统，例如通过 Cholesky 分解。\n假设所有计算都在单位舍入误差为 $u$ 的浮点运算中执行，并且所有范数均为矩阵或向量的 $2$-范数。设 $\\sigma_{\\max}$ 和 $\\sigma_{\\min}$ 分别表示 $A$ 的最大和最小奇异值，设 $2$-范数条件数为 $\\kappa_2(A) = \\sigma_{\\max} / \\sigma_{\\min}$。\n\n下列关于数值稳定性和条件数的陈述中，哪一项或几项是正确的？\n\nA. 如果 $A$ 是满列秩且计算在单位舍入误差为 $u$ 的情况下进行，那么通过法方程方法得到的计算解 $\\hat{\\mathbf{x}}$ 的前向相对误差通常在 $c\\,\\kappa_2(A)^2\\,u$ 的量级，而基于 Householder QR 的方法产生的前向相对误差在 $c'\\,\\kappa_2(A)\\,u$ 的量级，其中 $c$ 和 $c'$ 是与问题和实现相关的适度常数。\n\nB. 对于任何满列秩的 $A$，两种方法在计算解 $\\hat{\\mathbf{x}}$ 方面同样稳定，因为它们最小化的是相同的残差范数 $||A\\hat{\\mathbf{x}} - \\mathbf{b}||_2$，因此它们的前向误差在 $u$ 方面是同量级的。\n\nC. 如果 $\\sigma_{\\max}$ 和 $\\sigma_{\\min}$ 是 $A$ 的极端奇异值，则 $\\kappa_2(A^T A) = \\left(\\dfrac{\\sigma_{\\max}}{\\sigma_{\\min}}\\right)^2 = \\kappa_2(A)^2$。\n\nD. 显式构造 $A^T A$ 会累积舍入误差，并通过平方条件数来有效放大病态性，而基于正交变换的 QR 方法保留了 $2$-范数，并且对于最小二乘问题是后向稳定的。\n\nE. 因为当 $A$ 满列秩时，在精确算术中 $A^T A$ 是对称正定的（SPD），所以在浮点运算中计算出的 $A^T A$ 的 Cholesky 分解不会失败，即使 $A$ 是极端病态的。", "solution": "对问题陈述进行验证。\n\n### 步骤 1：提取已知条件\n- 一个满列秩矩阵 $A \\in \\mathbb{R}^{m \\times n}$，其中 $m \\ge n$。\n- 一个向量 $\\mathbf{b} \\in \\mathbb{R}^{m}$。\n- 线性最小二乘问题：寻找 $\\mathbf{x}^\\star \\in \\mathbb{R}^{n}$ 以最小化 $||A\\mathbf{x} - \\mathbf{b}||_2$。\n- 方法 (i)：QR 分解。$A = QR$，其中 $Q \\in \\mathbb{R}^{m \\times m}$ 是正交矩阵，$R \\in \\mathbb{R}^{m \\times n}$ 是上三角矩阵。\n- 方法 (ii)：法方程。$A^T A \\mathbf{x} = A^T \\mathbf{b}$。\n- 计算在单位舍入误差为 $u$ 的浮点运算中执行。\n- 所有范数均为矩阵或向量的 $2$-范数。\n- $\\sigma_{\\max}$ 和 $\\sigma_{\\min}$ 是 $A$ 的最大和最小奇异值。\n- $2$-范数条件数为 $\\kappa_2(A) = \\sigma_{\\max} / \\sigma_{\\min}$。\n\n### 步骤 2：使用提取的已知条件进行验证\n问题陈述描述了数值线性代数和计算工程中的一个基本主题：比较两种求解线性最小二乘问题的标准算法。\n- **科学依据充分：** QR 分解、法方程、奇异值、条件数和浮点误差分析等概念都是数值分析中的标准核心内容。该问题基于已确立的科学原理。\n- **适定的：** 该问题要求评估关于这两种方法的数值稳定性和条件数的几个陈述的正确性。这是一个定义明确的问题，基于已建立的理论，有一组唯一的正确答案。\n- **客观的：** 语言正式、精确，没有歧义或主观论断。\n- **完整的：** 提供了分析选项所需的所有必要定义和背景。\n\n### 步骤 3：结论与行动\n问题陈述在科学上是合理的、适定的、客观的和完整的。因此，它是有效的。我将继续推导解答并评估各个选项。\n\n### 分析\n核心任务是分析通过两种方法（法方程和 QR 分解）求解最小二乘问题 $\\min_{\\mathbf{x}} ||A\\mathbf{x} - \\mathbf{b}||_2$ 的数值特性。\n\n**方法 1：法方程**\n该方法将最小二乘问题转化为线性系统 $A^T A \\mathbf{x} = A^T \\mathbf{b}$。求解该系统的稳定性取决于矩阵 $A^T A$ 的条件数。设 $A$ 的奇异值分解（SVD）为 $A = U \\Sigma V^T$，其中 $U \\in \\mathbb{R}^{m \\times m}$ 和 $V \\in \\mathbb{R}^{n \\times n}$ 是正交矩阵，$\\Sigma \\in \\mathbb{R}^{m \\times n}$ 是由奇异值 $\\sigma_1 \\ge \\sigma_2 \\ge \\dots \\ge \\sigma_n > 0$ 构成的对角矩阵。$A$ 的条件数为 $\\kappa_2(A) = \\sigma_1 / \\sigma_n \\equiv \\sigma_{\\max} / \\sigma_{\\min}$。\n\n法方程的矩阵是 $A^T A = (U \\Sigma V^T)^T (U \\Sigma V^T) = V \\Sigma^T U^T U \\Sigma V^T$。由于 $U^T U = I$，这可以简化为 $A^T A = V (\\Sigma^T \\Sigma) V^T$。这是对称矩阵 $A^T A$ 的特征分解。$A^T A$ 的特征值是 $\\Sigma^T \\Sigma$ 的对角元素，即 $\\sigma_i^2$（其中 $i=1, \\dots, n$）。\n\n一个对称正定矩阵的条件数是其最大特征值与最小特征值之比。因此，\n$$\n\\kappa_2(A^T A) = \\frac{\\lambda_{\\max}(A^T A)}{\\lambda_{\\min}(A^T A)} = \\frac{\\sigma_{\\max}^2}{\\sigma_{\\min}^2} = \\left(\\frac{\\sigma_{\\max}}{\\sigma_{\\min}}\\right)^2 = (\\kappa_2(A))^2\n$$\n对于线性系统 $C\\mathbf{x}=\\mathbf{d}$，其计算解 $\\hat{\\mathbf{x}}$ 的前向误差通常受一个与 $\\kappa_2(C) u$ 成比例的项的限制。对于法方程，相关矩阵是 $A^T A$，因此误差与 $\\kappa_2(A^T A) u = (\\kappa_2(A))^2 u$ 成比例。这种条件数的平方是数值不稳定性的一个主要来源，尤其是在 $A$ 是病态的（即 $\\kappa_2(A)$ 很大）情况下。\n\n**方法 2：QR 分解**\n该方法依赖于找到一个正交矩阵 $Q$ 使得 $A=QR$。问题变为 $\\min ||QR\\mathbf{x} - \\mathbf{b}||_2$。由于正交变换保持 $2$-范数不变，这等价于 $\\min ||Q^T(QR\\mathbf{x} - \\mathbf{b})||_2 = \\min ||R\\mathbf{x} - Q^T\\mathbf{b}||_2$。\n将 $R$ 分块为 $R = \\begin{pmatrix} R_1 \\\\ 0 \\end{pmatrix}$，其中 $R_1 \\in \\mathbb{R}^{n \\times n}$ 是上三角且可逆的（因为 $A$ 满列秩），并将 $Q^T\\mathbf{b}$ 分块为 $Q^T\\mathbf{b} = \\begin{pmatrix} \\mathbf{c}_1 \\\\ \\mathbf{c}_2 \\end{pmatrix}$。最小化问题变为\n$$\n\\min \\left\\| \\begin{pmatrix} R_1\\mathbf{x} - \\mathbf{c}_1 \\\\ -\\mathbf{c}_2 \\end{pmatrix} \\right\\|_2^2 = \\min (||R_1\\mathbf{x} - \\mathbf{c}_1||_2^2 + ||\\mathbf{c}_2||_2^2)\n$$\n当 $R_1\\mathbf{x} - \\mathbf{c}_1 = \\mathbf{0}$ 时，上式达到最小值，即通过求解上三角系统 $R_1\\mathbf{x} = \\mathbf{c}_1$。\n$A$ 的条件数与 $R_1$ 的条件数相关。由于 $A=QR$，我们有 $\\kappa_2(A) = \\kappa_2(QR) = \\kappa_2(R) = \\kappa_2(R_1)$。数值求解涉及到一个以 $R_1$ 为矩阵的系统，因此前向误差预计与 $\\kappa_2(R_1)u = \\kappa_2(A)u$ 成比例。这种方法避免了构造 $A^TA$，从而避免了条件数的平方。使用 Householder 变换或 Givens 旋转进行的 QR 分解是公认的后向稳定算法。\n\n### 逐项分析\n\n**A. 如果 $A$ 是满列秩且计算在单位舍入误差为 $u$ 的情况下进行，那么通过法方程方法得到的计算解 $\\hat{\\mathbf{x}}$ 的前向相对误差通常在 $c\\,\\kappa_2(A)^2\\,u$ 的量级，而基于 Householder QR 的方法产生的前向相对误差在 $c'\\,\\kappa_2(A)\\,u$ 的量级，其中 $c$ 和 $c'$ 是与问题和实现相关的适度常数。**\n\n该陈述直接反映了这两种方法的标准误差分析。法方程方法求解一个有效条件数为 $\\kappa_2(A)^2$ 的系统，导致前向误差与该量成正比。QR 方法处理的矩阵条件数为 $\\kappa_2(A)$，导致前向误差与 $\\kappa_2(A)$ 成正比。该陈述准确地总结了典型的误差行为，忽略了与残差大小相关的项，这是一种常见的简化。\n**结论：正确。**\n\n**B. 对于任何满列秩的 $A$，两种方法在计算解 $\\hat{\\mathbf{x}}$ 方面同样稳定，因为它们最小化的是相同的残差范数 $||A\\hat{\\mathbf{x}} - \\mathbf{b}||_2$，因此它们的前向误差在 $u$ 方面是同量级的。**\n\n这个陈述有根本性错误。虽然两种方法在精确算术中解决的是同一个数学问题，但它们在浮点运算中的行为却大相径庭。数值算法的稳定性取决于计算步骤的顺序，而不仅仅是它要解决的问题。如上所示，法方程方法涉及一个中间步骤（构造 $A^TA$），该步骤会通过平方条件数而灾难性地降低数值精度。QR方法避免了这一点。因此，它们不是同样稳定的。\n**结论：不正确。**\n\n**C. 如果 $\\sigma_{\\max}$ 和 $\\sigma_{\\min}$ 是 $A$ 的极端奇异值，则 $\\kappa_2(A^T A) = \\left(\\dfrac{\\sigma_{\\max}}{\\sigma_{\\min}}\\right)^2 = \\kappa_2(A)^2$。**\n\n这是一个精确的数学恒等式。如在分析部分推导的，$A^T A$ 的特征值是 $A$ 的奇异值的平方。对称正定矩阵 $A^T A$ 的 $2$-范数条件数是其最大特征值与最小特征值之比，即 $\\sigma_{\\max}^2 / \\sigma_{\\min}^2$。根据定义，$\\kappa_2(A) = \\sigma_{\\max} / \\sigma_{\\min}$。因此，$\\kappa_2(A^T A) = (\\sigma_{\\max} / \\sigma_{\\min})^2 = \\kappa_2(A)^2$。该陈述是线性代数中的一个正确定理。\n**结论：正确。**\n\n**D. 显式构造 $A^T A$ 会累积舍入误差，并通过平方条件数来有效放大病态性，而基于正交变换的 QR 方法保留了 $2$-范数，并且对于最小二乘问题是后向稳定的。**\n\n该陈述对两种方法的数值特性进行了定性但准确的描述。\n- “显式构造 $A^T A$ 会累积舍入误差”：正确。矩阵乘法的计算本身就会引入舍入误差。对于病态的 $A$，信息可能会丢失。例如，如果 $\\sigma_{\\min}$ 足够小，以至于 $\\sigma_{\\min}^2$ 相对于 $\\sigma_{\\max}^2$ 小于机器精度，那么计算出的 $A^TA$ 在数值上将是秩亏的。\n- “通过平方条件数来有效放大病态性”：正确，如选项 C 所证明。\n- “基于正交变换的 QR 方法保留了 $2$-范数”：正确。这是正交矩阵 $Q$ 的定义：对于任何向量 $\\mathbf{v}$，都有 $||Q\\mathbf{v}||_2 = ||\\mathbf{v}||_2$。这个性质是该方法稳定性的关键。\n- “对于最小二乘问题是后向稳定的”：正确。通过 Householder 反射的 QR 分解是数值线性代数中一个重要的后向稳定算法。\n该陈述汇集了几个正确的事实，提供了一个有效的比较。\n**结论：正确。**\n\n**E. 因为当 $A$ 满列秩时，在精确算术中 $A^T A$ 是对称正定的（SPD），所以在浮点运算中计算出的 $A^T A$ 的 Cholesky 分解不会失败，即使 $A$ 是极端病态的。**\n\n这个陈述是错误的。在浮点运算中，我们计算 $\\hat{C} = \\text{fl}(A^T A)$。由于矩阵乘法过程中的舍入误差，即使精确矩阵 $A^T A$ 是对称正定的，计算出的 $\\hat{C}$ 也不保证是。如果 $A$ 病态到一定程度， $A^T A$ 的一些较小特征值（即 $\\sigma_i^2$）在计算矩阵 $\\hat{C}$ 中可能被扰动成零或负数。Cholesky 分解算法需要在每一步对角元素开平方根；如果计算出的对角元素变为非正数，算法就会失败。在使用法方程处理病态矩阵时，这种失败是一个实际风险。\n**结论：不正确。**", "answer": "$$\\boxed{ACD}$$", "id": "2449782"}]}