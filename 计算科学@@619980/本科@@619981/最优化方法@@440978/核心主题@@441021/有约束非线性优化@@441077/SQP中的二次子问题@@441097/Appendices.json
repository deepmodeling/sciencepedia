{"hands_on_practices": [{"introduction": "序列二次规划（SQP）方法的核心思想在于，它将复杂的非线性约束替换为更简单的线性近似。这个练习将通过一个清晰的一维案例，让你亲手计算线性化约束与真实非线性约束在迭代步长下的具体数值差异。通过这种方式，你可以深刻体会到二次规划（QP）子问题作为原始问题的一个局部模型的本质，并理解为何这种近似在某些情况下会导致偏差。[@problem_id:3169627]", "problem": "考虑序列二次规划（SQP），该方法在当前迭代点 $x_k$ 构造目标函数的二次近似和约束的线性化，以定义一个搜索方向 $d$。设存在单个非线性不等式约束 $g(x) \\le 0$，其中 $x \\in \\mathbb{R}$。在迭代点 $x_k = \\frac{3}{10}$ 处，约束为 $g(x) = x^2 - \\frac{1}{10}$。使用目标函数的二次模型，其海森矩阵 $H_k = 1$，梯度 $\\nabla f(x_k) = -1$，因此 SQP 子问题为\n$$\n\\min_{d \\in \\mathbb{R}} \\;\\; \\frac{1}{2} d^2 - d \\quad \\text{subject to} \\quad g(x_k) + \\nabla g(x_k)\\, d \\le 0.\n$$\n求解此子问题以获得步长 $d_k$，并验证在 $d_k$ 处线性化约束被满足，而真实约束 $g(x_k + d_k)$ 被违反。然后，通过计算以下公式来量化真实约束与其在该步长处的线性化预测之间的差异\n$$\n\\Delta \\;=\\; g(x_k + d_k) \\;-\\; \\big( g(x_k) + \\nabla g(x_k)\\, d_k \\big).\n$$\n以最简分数的形式给出 $\\Delta$ 的精确值。无需四舍五入。", "solution": "用户希望求解一个序列二次规划（SQP）子问题，并分析线性化约束与真实约束之间的差异。\n\n### 步骤 1：提取已知条件\n- **优化方法**：序列二次规划（SQP）。\n- **当前迭代点**：$x_k = \\frac{3}{10}$，其中 $x \\in \\mathbb{R}$。\n- **目标函数模型**：\n    - 海森矩阵：$H_k = 1$。\n    - 梯度：$\\nabla f(x_k) = -1$。\n- **约束函数**：\n    - 单个非线性不等式约束：$g(x) \\le 0$。\n    - 具体形式：$g(x) = x^2 - \\frac{1}{10}$。\n- **SQP 子问题定义**：\n    $$ \\min_{d \\in \\mathbb{R}} \\;\\; \\frac{1}{2} d^2 - d \\quad \\text{subject to} \\quad g(x_k) + \\nabla g(x_k)\\, d \\le 0 $$\n- **任务**：\n    1.  求解子问题以获得步长 $d_k$。\n    2.  验证线性化约束 $g(x_k) + \\nabla g(x_k)\\, d_k \\le 0$ 被满足。\n    3.  验证真实约束 $g(x_k + d_k) \\le 0$ 被违反。\n    4.  计算差异：$\\Delta = g(x_k + d_k) - \\big( g(x_k) + \\nabla g(x_k)\\, d_k \\big)$。\n    5.  以最简分数的形式给出 $\\Delta$。\n\n### 步骤 2：使用提取的已知条件进行验证\n对问题进行验证。\n- **科学依据**：该问题在非线性优化的既定理论，特别是 SQP 方法中，有充分的依据。二次子问题的表述是标准的。\n- **良定性**：目标函数 $\\frac{1}{2} d^2 - d$ 是一个严格凸的二次函数（其二阶导数为 $1 > 0$），且约束在变量 $d$ 上是线性的。这定义了一个凸二次规划（QP），已知其有唯一解。该问题是良定的。\n- **客观性**：语言精确且数学化，没有主观或模糊的术语。\n- **完整性**：提供了构建和求解子问题所需的所有必要函数（$g(x)$）、值（$x_k$）和模型参数（$H_k$, $\\nabla f(x_k)$）。\n- **其他缺陷**：该问题未表现出验证标准中列出的任何其他缺陷。这是一个标准的教科书练习题。\n\n### 步骤 3：结论与行动\n问题是**有效的**。将提供解答。\n\n### 解答推导\n解答过程首先是构建具体的二次规划（QP）子问题，然后求解它，最后进行所要求的验证和计算。\n\n**1. 构建 QP 子问题**\n\n我们需要计算线性化约束 $g(x_k) + \\nabla g(x_k)\\, d \\le 0$ 的各项。\n约束函数为 $g(x) = x^2 - \\frac{1}{10}$。\n当前迭代点为 $x_k = \\frac{3}{10}$。\n\n首先，计算在 $x_k$ 处的约束函数值：\n$$ g(x_k) = g\\left(\\frac{3}{10}\\right) = \\left(\\frac{3}{10}\\right)^2 - \\frac{1}{10} = \\frac{9}{100} - \\frac{10}{100} = -\\frac{1}{100} $$\n\n接下来，计算约束函数的梯度 $\\nabla g(x)$，并计算其在 $x_k$ 处的值：\n$$ \\nabla g(x) = \\frac{d}{dx}\\left(x^2 - \\frac{1}{10}\\right) = 2x $$\n$$ \\nabla g(x_k) = \\nabla g\\left(\\frac{3}{10}\\right) = 2\\left(\\frac{3}{10}\\right) = \\frac{6}{10} = \\frac{3}{5} $$\n\n子问题的目标函数给定为 $\\frac{1}{2}d^2 - d$。\n线性化约束为 $g(x_k) + \\nabla g(x_k) d \\le 0$，即：\n$$ -\\frac{1}{100} + \\frac{3}{5}d \\le 0 $$\n\n因此，完整的 SQP 子问题是：\n$$ \\min_{d \\in \\mathbb{R}} \\;\\; \\frac{1}{2} d^2 - d \\quad \\text{subject to} \\quad \\frac{3}{5}d \\le \\frac{1}{100} $$\n\n**2. 求解子问题以获得步长 $d_k$**\n\n这是一个约束优化问题。我们可以使用 Karush-Kuhn-Tucker (KKT) 条件来求解。设目标函数为 $q(d) = \\frac{1}{2}d^2 - d$。\n拉格朗日函数为：\n$$ \\mathcal{L}(d, \\lambda) = \\frac{1}{2}d^2 - d + \\lambda \\left(-\\frac{1}{100} + \\frac{3}{5}d\\right) $$\n其中 $\\lambda \\ge 0$ 是拉格朗日乘子。\n\nKKT 条件是：\n1.  **平稳性**：$\\frac{\\partial \\mathcal{L}}{\\partial d} = d - 1 + \\frac{3}{5}\\lambda = 0$\n2.  **原始可行性**：$-\\frac{1}{100} + \\frac{3}{5}d \\le 0$\n3.  **对偶可行性**：$\\lambda \\ge 0$\n4.  **互补松弛性**：$\\lambda \\left(-\\frac{1}{100} + \\frac{3}{5}d\\right) = 0$\n\n根据互补松弛性，我们有两种情况：\n\n情况 A：约束非激活，因此 $\\lambda = 0$。\n平稳性条件给出 $d - 1 + 0 = 0$，这意味着 $d = 1$。\n我们检查原始可行性：$-\\frac{1}{100} + \\frac{3}{5}(1) = -\\frac{1}{100} + \\frac{60}{100} = \\frac{59}{100}$。这不小于等于 $0$。所以，这种情况不是解。$q(d)$ 的无约束最小值在 $d=1$ 处取得，但这违反了约束。\n\n情况 B：约束激活，因此 $-\\frac{1}{100} + \\frac{3}{5}d = 0$。\n从此方程中，我们可以解出 $d$：\n$$ \\frac{3}{5}d = \\frac{1}{100} \\implies d = \\frac{1}{100} \\cdot \\frac{5}{3} = \\frac{5}{300} = \\frac{1}{60} $$\n这是我们步长的候选值，$d_k = \\frac{1}{60}$。\n现在我们使用平稳性条件来求解 $\\lambda$：\n$$ d - 1 + \\frac{3}{5}\\lambda = 0 \\implies \\frac{1}{60} - 1 + \\frac{3}{5}\\lambda = 0 $$\n$$ -\\frac{59}{60} + \\frac{3}{5}\\lambda = 0 \\implies \\frac{3}{5}\\lambda = \\frac{59}{60} $$\n$$ \\lambda = \\frac{59}{60} \\cdot \\frac{5}{3} = \\frac{59 \\cdot 5}{60 \\cdot 3} = \\frac{59}{12 \\cdot 3} = \\frac{59}{36} $$\n我们检查对偶可行性：$\\lambda = \\frac{59}{36} > 0$。这与激活约束的情况一致。\n因此，子问题的解是 $d_k = \\frac{1}{60}$。\n\n**3. 验证约束的满足与违反情况**\n\n让我们按要求验证这两个约束。\n- **线性化约束**：我们需要检查是否 $g(x_k) + \\nabla g(x_k) d_k \\le 0$。\n$$ g(x_k) + \\nabla g(x_k) d_k = -\\frac{1}{100} + \\frac{3}{5} \\left(\\frac{1}{60}\\right) = -\\frac{1}{100} + \\frac{3}{300} = -\\frac{1}{100} + \\frac{1}{100} = 0 $$\n由于 $0 \\le 0$ 为真，线性化约束被满足（它是激活的）。\n\n- **真实约束**：我们需要检查是否 $g(x_k + d_k) \\le 0$。\n首先，找到新的点 $x_k + d_k$：\n$$ x_k + d_k = \\frac{3}{10} + \\frac{1}{60} = \\frac{18}{60} + \\frac{1}{60} = \\frac{19}{60} $$\n现在，计算真实约束函数 $g(x)$ 在这个新点的值：\n$$ g(x_k + d_k) = g\\left(\\frac{19}{60}\\right) = \\left(\\frac{19}{60}\\right)^2 - \\frac{1}{10} = \\frac{19^2}{60^2} - \\frac{1}{10} = \\frac{361}{3600} - \\frac{1}{10} $$\n$$ g(x_k + d_k) = \\frac{361}{3600} - \\frac{360}{3600} = \\frac{1}{3600} $$\n真实约束的值是 $\\frac{1}{3600}$。由于 $\\frac{1}{3600} > 0$，条件 $g(x_k + d_k) \\le 0$ 被**违反**。\n\n**4. 计算差异 $\\Delta$**\n\n差异定义为 $\\Delta = g(x_k + d_k) - \\big( g(x_k) + \\nabla g(x_k) d_k \\big)$。\n根据我们之前的计算：\n- $g(x_k + d_k) = \\frac{1}{3600}$\n- $g(x_k) + \\nabla g(x_k) d_k = 0$\n\n将这些值代入 $\\Delta$ 的表达式中：\n$$ \\Delta = \\frac{1}{3600} - 0 = \\frac{1}{3600} $$\n这个差异的产生是因为线性化 $g(x_k) + \\nabla g(x_k) d$ 是 $g(x_k+d)$ 的一阶泰勒近似。此近似的误差由高阶项给出。对于像 $g(x) = x^2 - \\frac{1}{10}$ 这样的二次函数，泰勒级数是精确的，并在二阶项后终止：\n$$ g(x_k + d) = g(x_k) + (\\nabla g(x_k)) d + \\frac{1}{2} (\\nabla^2 g(x_k)) d^2 $$\n因此，差异恰好是二阶项：\n$$ \\Delta = g(x_k+d_k) - (g(x_k) + \\nabla g(x_k) d_k) = \\frac{1}{2} (\\nabla^2 g(x_k)) (d_k)^2 $$\n我们可以验证这一点。二阶导数是 $\\nabla^2 g(x) = 2$。所以，$\\nabla^2 g(x_k) = 2$。\n$$ \\Delta = \\frac{1}{2} (2) \\left(\\frac{1}{60}\\right)^2 = \\left(\\frac{1}{60}\\right)^2 = \\frac{1}{3600} $$\n这证实了我们的结果。分数 $\\frac{1}{3600}$ 已经是其最简形式。", "answer": "$$\\boxed{\\frac{1}{3600}}$$", "id": "3169627"}, {"introduction": "在理解了线性化近似的基本概念之后，我们将挑战一个更贴近实际的场景：一个包含多个不等式约束的二维非线性规划问题。本练习将引导你走过一个完整的SQP迭代步，包括构建二次子问题并运用Karush-Kuhn-Tucker（KKT）条件来精确求解它。掌握这一过程是解决复杂约束优化问题的核心技能之一，它将理论与求解步骤紧密联系起来。[@problem_id:3195671]", "problem": "考虑具有两个($2$)不等式约束的非线性规划问题：\n$$\n\\begin{aligned}\n\\min_{x \\in \\mathbb{R}^2}\\quad  f(x) \\\\\n\\text{s.t.}\\quad  g_1(x) \\le 0, \\\\\n g_2(x) \\le 0,\n\\end{aligned}\n$$\n其中\n$$\nf(x) = (x_1 - 3)^2 + (x_2 - 3)^2,\\quad\ng_1(x) = x_1 + x_2 - 2,\\quad\ng_2(x) = x_1^2 + x_2 - 2.\n$$\n从点 $x^{(0)} = (1,\\;1.5)$ 出发，构造一个序列二次规划（SQP）步。使用单位矩阵 $B^{(0)} = I_2$ 作为拉格朗日函数的海森矩阵的初始对称正定近似。使用由约束的一阶泰勒展开和带 $B^{(0)}$ 的目标函数的二次模型构成的标准SQP二次子问题。显式地推导这个二次子问题，并求解它以获得步长 $p^{(0)}$。\n\n为了使用精确罚函数评估全局化，考虑 $\\ell_1$ 精确罚函数\n$$\n\\phi_{\\mu}(x) = f(x) + \\mu\\left(|\\max\\{0, g_1(x)\\}| + |\\max\\{0, g_2(x)\\}|\\right),\n$$\n其惩罚参数为 $\\mu \\ge 0$。计算 $\\phi_{\\mu}$ 在 $x^{(0)}$ 点沿 SQP 步长 $p^{(0)}$ 的方向导数，并确定最小的阈值 $\\mu_{\\min}$，使得对于所有 $\\mu > \\mu_{\\min}$，SQP 步长是 $\\phi_{\\mu}$ 在 $x^{(0)}$ 点的一个严格下降方向。\n\n你的最终答案必须是单个实数 $\\mu_{\\min}$。不需要四舍五入；请提供一个精确值。仅报告 $\\mu_{\\min}$ 作为你的最终答案。", "solution": "用户要求我解决一个多部分的优化问题。\n\n以下是任务分解：\n1.  **验证问题**：检查问题陈述是否适定、科学上合理且完整。\n2.  **构造SQP子问题**：在初始点 $x^{(0)} = (1, 1.5)$ 处构建二次规划（QP）子问题。这包括：\n    *   计算目标函数 $f(x)$ 在 $x^{(0)}$ 处的梯度。\n    *   计算约束函数 $g_1(x)$ 和 $g_2(x)$ 在 $x^{(0)}$ 处的值和梯度。\n    *   使用给定的拉格朗日函数的海森矩阵近似 $B^{(0)} = I_2$。\n    *   写出以步长 $p = (p_1, p_2)$ 为变量的QP子问题。\n3.  **求解QP子问题**：求解推导出的QP以获得步长 $p^{(0)}$。这意味着找到最优的 $p_1$ 和 $p_2$。这本身就是一个约束优化问题。我可能需要使用子问题的Karush-Kuhn-Tucker（KKT）条件。\n4.  **分析价值函数**：定义 $\\ell_1$ 精确罚价值函数 $\\phi_{\\mu}(x)$。计算其在 $x^{(0)}$ 点沿方向 $p^{(0)}$ 的方向导数，记为 $D_{p^{(0)}} \\phi_{\\mu}(x^{(0)})$。确定 $p^{(0)}$ 成为严格下降方向的条件，即 $D_{p^{(0)}} \\phi_{\\mu}(x^{(0)})  0$。解这个关于 $\\mu$ 的不等式，以找到最小阈值 $\\mu_{\\min}$。\n\n**第1部分：问题验证**\n\n*   **提取已知条件**：\n    *   问题类型：带不等式约束的非线性规划。\n    *   目标函数：$f(x) = (x_1 - 3)^2 + (x_2 - 3)^2$。\n    *   约束1：$g_1(x) = x_1 + x_2 - 2 \\le 0$。\n    *   约束2：$g_2(x) = x_1^2 + x_2 - 2 \\le 0$。\n    *   起始点：$x^{(0)} = (1, 1.5)$。\n    *   初始海森矩阵近似：$B^{(0)} = I_2$（$2 \\times 2$ 单位矩阵）。\n    *   任务1：构造并求解SQP二次子问题以获得步长 $p^{(0)}$。\n    *   价值函数：$\\phi_{\\mu}(x) = f(x) + \\mu\\left(|\\max\\{0, g_1(x)\\}| + |\\max\\{0, g_2(x)\\}|\\right)$。\n    *   任务2：计算 $\\phi_{\\mu}$ 在 $x^{(0)}$ 点沿 $p^{(0)}$ 的方向导数。\n    *   任务3：找到最小的 $\\mu_{\\min}$ 使得对于 $\\mu  \\mu_{\\min}$，有 $D_{p^{(0)}} \\phi_{\\mu}(x^{(0)})  0$。\n\n*   **使用提取的已知条件进行验证**：\n    *   **科学依据**：该问题是非线性优化领域的一个标准练习，具体涉及序列二次规划方法。所有函数都是定义良好的多项式。SQP、价值函数和方向导数的概念在优化理论中是标准的。该问题在数学上是合理的。\n    *   **适定性**：问题要求基于给定数据进行特定计算。函数是光滑的。QP子问题是凸的，应该有唯一解。最后一部分要求一个阈值，该值应能从前面的计算中唯一确定。\n    *   **客观性**：语言是精确和数学化的。没有使用主观术语。\n    *   **完整性**：所有必要信息都已提供：函数、起始点、海森矩阵近似、价值函数的定义以及要执行的具体任务。问题是自包含的。\n    *   **可行性/现实性**：问题是一个数学构造，因此物理现实性不适用。这些值和函数对于教科书式的问题是合理的。\n    *   **不适定/结构不良**：此处无问题。结构是逻辑的，并引导求解者完成一个标准程序。\n    *   **琐碎/同义反复**：该问题需要多步计算和优化理论的应用。它不是琐碎的。\n    *   **主题相关性**：问题显然是关于*优化方法*领域内的*无约束和约束优化*。它特别涉及SQP，这是约束优化的核心算法。\n\n*   **结论**：问题是有效的。我将继续进行解答。\n\n**第2部分：解题步骤**\n\n**步骤A：构造SQP子问题**\n\n在第k次迭代时，SQP子问题的一般形式是：\n$$\n\\begin{aligned}\n\\min_{p \\in \\mathbb{R}^n}\\quad  f(x^{(k)}) + \\nabla f(x^{(k)})^T p + \\frac{1}{2} p^T B^{(k)} p \\\\\n\\text{s.t.}\\quad  g_i(x^{(k)}) + \\nabla g_i(x^{(k)})^T p \\le 0, \\quad i \\in \\mathcal{I}\n\\end{aligned}\n$$\n这里，$k=0$ 且 $n=2$。$x^{(0)} = (1, 1.5)$。$B^{(0)} = I_2 = \\begin{pmatrix} 1  0 \\\\ 0  1 \\end{pmatrix}$。\n\n首先，我需要计算在 $x^{(0)}$ 处的函数值和梯度。\n\n*   **目标函数 $f(x)$**：\n    *   $f(x) = (x_1 - 3)^2 + (x_2 - 3)^2$\n    *   $\\nabla f(x) = \\begin{pmatrix} 2(x_1 - 3) \\\\ 2(x_2 - 3) \\end{pmatrix}$\n    *   在 $x^{(0)} = (1, 1.5)$ 处：\n        *   $f(x^{(0)}) = (1 - 3)^2 + (1.5 - 3)^2 = (-2)^2 + (-1.5)^2 = 4 + 2.25 = 6.25$。\n        *   $\\nabla f(x^{(0)}) = \\begin{pmatrix} 2(1 - 3) \\\\ 2(1.5 - 3) \\end{pmatrix} = \\begin{pmatrix} -4 \\\\ -3 \\end{pmatrix}$。\n\n*   **约束函数 $g_1(x)$**：\n    *   $g_1(x) = x_1 + x_2 - 2$\n    *   $\\nabla g_1(x) = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$\n    *   在 $x^{(0)} = (1, 1.5)$ 处：\n        *   $g_1(x^{(0)}) = 1 + 1.5 - 2 = 0.5$。\n        *   $\\nabla g_1(x^{(0)}) = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$。\n\n*   **约束函数 $g_2(x)$**：\n    *   $g_2(x) = x_1^2 + x_2 - 2$\n    *   $\\nabla g_2(x) = \\begin{pmatrix} 2x_1 \\\\ 1 \\end{pmatrix}$\n    *   在 $x^{(0)} = (1, 1.5)$ 处：\n        *   $g_2(x^{(0)}) = 1^2 + 1.5 - 2 = 1 + 1.5 - 2 = 0.5$。\n        *   $\\nabla g_2(x^{(0)}) = \\begin{pmatrix} 2(1) \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix}$。\n\n现在，将这些代入子问题模板。设 $p = (p_1, p_2)^T$。\n子问题的目标是：\n$$\n\\min_{p \\in \\mathbb{R}^2} \\quad 6.25 + \\begin{pmatrix} -4 \\\\ -3 \\end{pmatrix}^T \\begin{pmatrix} p_1 \\\\ p_2 \\end{pmatrix} + \\frac{1}{2} \\begin{pmatrix} p_1 \\\\ p_2 \\end{pmatrix}^T \\begin{pmatrix} 1  0 \\\\ 0  1 \\end{pmatrix} \\begin{pmatrix} p_1 \\\\ p_2 \\end{pmatrix}\n$$\n常数项 $f(x^{(0)})$ 不影响最小化变量 $p$，所以我们可以忽略它。目标函数简化为：\n$$\n\\min_{p \\in \\mathbb{R}^2} \\quad -4 p_1 - 3 p_2 + \\frac{1}{2} (p_1^2 + p_2^2)\n$$\n子问题的约束是：\n1.  \n    $g_1(x^{(0)}) + \\nabla g_1(x^{(0)})^T p \\le 0$\n    $0.5 + \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}^T \\begin{pmatrix} p_1 \\\\ p_2 \\end{pmatrix} \\le 0 \\implies p_1 + p_2 + 0.5 \\le 0$\n2.  \n    $g_2(x^{(0)}) + \\nabla g_2(x^{(0)})^T p \\le 0$\n    $0.5 + \\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix}^T \\begin{pmatrix} p_1 \\\\ p_2 \\end{pmatrix} \\le 0 \\implies 2p_1 + p_2 + 0.5 \\le 0$\n\n因此，显式的QP子问题是：\n$$\n\\begin{aligned}\n\\min_{p_1, p_2} \\quad  \\frac{1}{2} p_1^2 + \\frac{1}{2} p_2^2 - 4 p_1 - 3 p_2 \\\\\n\\text{s.t.} \\quad  p_1 + p_2 + 0.5 \\le 0 \\\\\n 2p_1 + p_2 + 0.5 \\le 0\n\\end{aligned}\n$$\n\n**步骤B：求解QP子问题**\n\n这是一个凸二次规划。我将使用KKT条件来求解它。\n设目标函数为 $Q(p) = \\frac{1}{2} p_1^2 + \\frac{1}{2} p_2^2 - 4 p_1 - 3 p_2$。\n设约束为 $c_1(p) = p_1 + p_2 + 0.5 \\le 0$ 和 $c_2(p) = 2p_1 + p_2 + 0.5 \\le 0$。\n拉格朗日函数是：\n$$\n\\mathcal{L}(p_1, p_2, \\lambda_1, \\lambda_2) = Q(p) + \\lambda_1 c_1(p) + \\lambda_2 c_2(p)\n$$\n其中 $\\lambda_1, \\lambda_2 \\ge 0$ 是拉格朗日乘子。\n\nKKT条件是：\n1.  **平稳性**：$\\nabla_p \\mathcal{L} = 0$\n    $$\n    \\nabla_p Q(p) + \\lambda_1 \\nabla_p c_1(p) + \\lambda_2 \\nabla_p c_2(p) = 0\n    $$\n    $$\n    \\begin{pmatrix} p_1 - 4 \\\\ p_2 - 3 \\end{pmatrix} + \\lambda_1 \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} + \\lambda_2 \\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}\n    $$\n    这得到两个方程：\n    (i) $p_1 - 4 + \\lambda_1 + 2\\lambda_2 = 0 \\implies p_1 = 4 - \\lambda_1 - 2\\lambda_2$\n    (ii) $p_2 - 3 + \\lambda_1 + \\lambda_2 = 0 \\implies p_2 = 3 - \\lambda_1 - \\lambda_2$\n\n2.  **原始可行性**：\n    (iii) $p_1 + p_2 + 0.5 \\le 0$\n    (iv) $2p_1 + p_2 + 0.5 \\le 0$\n\n3.  **对偶可行性**：\n    (v) $\\lambda_1 \\ge 0$\n    (vi) $\\lambda_2 \\ge 0$\n\n4.  **互补松弛性**：\n    (vii) $\\lambda_1 (p_1 + p_2 + 0.5) = 0$\n    (viii) $\\lambda_2 (2p_1 + p_2 + 0.5) = 0$\n\n让我们测试有效约束的各种情况。\n\n*   情况1：没有有效约束。$\\lambda_1 = 0, \\lambda_2 = 0$。\n    从(i)得，$p_1 = 4$。从(ii)得，$p_2 = 3$。\n    检查可行性：\n    $c_1(p) = 4 + 3 + 0.5 = 7.5 \\not\\le 0$。这种情况不是解。\n\n*   情况2：约束1有效，约束2无效。$p_1 + p_2 + 0.5 = 0, \\lambda_2 = 0, \\lambda_1  0$。\n    从(i)得，$p_1 = 4 - \\lambda_1$。\n    从(ii)得，$p_2 = 3 - \\lambda_1$。\n    代入有效约束中：\n    $(4 - \\lambda_1) + (3 - \\lambda_1) + 0.5 = 0$\n    $7.5 - 2\\lambda_1 = 0 \\implies \\lambda_1 = 3.75$。\n    这满足 $\\lambda_1  0$。\n    现在求 $p_1, p_2$：\n    $p_1 = 4 - 3.75 = 0.25$。\n    $p_2 = 3 - 3.75 = -0.75$。\n    检查约束2的可行性：\n    $c_2(p) = 2(0.25) + (-0.75) + 0.5 = 0.5 - 0.75 + 0.5 = 0.25 \\not\\le 0$。这种情况不是解。\n\n*   情况3：约束2有效，约束1无效。$2p_1 + p_2 + 0.5 = 0, \\lambda_1 = 0, \\lambda_2  0$。\n    从(i)得，$p_1 = 4 - 2\\lambda_2$。\n    从(ii)得，$p_2 = 3 - \\lambda_2$。\n    代入有效约束中：\n    $2(4 - 2\\lambda_2) + (3 - \\lambda_2) + 0.5 = 0$\n    $8 - 4\\lambda_2 + 3 - \\lambda_2 + 0.5 = 0$\n    $11.5 - 5\\lambda_2 = 0 \\implies \\lambda_2 = 11.5 / 5 = 2.3$。\n    这满足 $\\lambda_2  0$。\n    现在求 $p_1, p_2$：\n    $p_1 = 4 - 2(2.3) = 4 - 4.6 = -0.6$。\n    $p_2 = 3 - 2.3 = 0.7$。\n    检查约束1的可行性：\n    $c_1(p) = -0.6 + 0.7 + 0.5 = 0.6 \\not\\le 0$。这种情况不是解。\n\n*   情况4：两个约束都有效。$p_1 + p_2 + 0.5 = 0, 2p_1 + p_2 + 0.5 = 0, \\lambda_1  0, \\lambda_2  0$。\n    这是一个关于 $p_1, p_2$ 的二元线性方程组：\n    (a) $p_1 + p_2 = -0.5$\n    (b) $2p_1 + p_2 = -0.5$\n    用(b)减去(a)：$(2p_1 - p_1) + (p_2 - p_2) = -0.5 - (-0.5) \\implies p_1 = 0$。\n    将 $p_1=0$ 代入(a)：$0 + p_2 = -0.5 \\implies p_2 = -0.5$。\n    所以 $p^{(0)} = (0, -0.5)^T$。\n    现在使用平稳性条件(i)和(ii)来求解 $\\lambda_1, \\lambda_2$：\n    $p_1 = 0 \\implies 4 - \\lambda_1 - 2\\lambda_2 = 0 \\implies \\lambda_1 + 2\\lambda_2 = 4$。\n    $p_2 = -0.5 \\implies 3 - \\lambda_1 - \\lambda_2 = -0.5 \\implies \\lambda_1 + \\lambda_2 = 3.5$。\n    这是一个关于 $\\lambda_1, \\lambda_2$ 的方程组。\n    用第一个方程减去第二个方程：$(\\lambda_1 - \\lambda_1) + (2\\lambda_2 - \\lambda_2) = 4 - 3.5 \\implies \\lambda_2 = 0.5$。\n    将 $\\lambda_2=0.5$ 代入第二个方程：$\\lambda_1 + 0.5 = 3.5 \\implies \\lambda_1 = 3$。\n    检查对偶可行性：$\\lambda_1 = 3  0$ 且 $\\lambda_2 = 0.5  0$。所有条件都满足。\n\n因此QP子问题的解是 $p^{(0)} = \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix}$。\n子问题的拉格朗日乘子是 $\\lambda^{(1)} = (\\lambda_1, \\lambda_2)^T = (3, 0.5)^T$。这些是下一次迭代中原始问题乘子的估计值。\n\n目前为止的结果总结：\n$x^{(0)} = (1, 1.5)^T$\n$p^{(0)} = (0, -0.5)^T$\n$\\nabla f(x^{(0)}) = (-4, -3)^T$\n$g_1(x^{(0)}) = 0.5$\n$g_2(x^{(0)}) = 0.5$\n$\\nabla g_1(x^{(0)}) = (1, 1)^T$\n$\\nabla g_2(x^{(0)}) = (2, 1)^T$\n来自QP的乘子：$\\lambda_1=3, \\lambda_2=0.5$。\n\n**步骤C：价值函数的方向导数**\n\n$\\ell_1$ 精确罚价值函数是：\n$$\n\\phi_{\\mu}(x) = f(x) + \\mu\\left(|\\max\\{0, g_1(x)\\}| + |\\max\\{0, g_2(x)\\}|\\right)\n$$\n我们需要计算 $\\phi_{\\mu}$ 在 $x^{(0)}$ 点沿方向 $p^{(0)}$ 的方向导数。\n$\\phi_{\\mu}$ 在点 $x$ 沿方向 $p$ 的方向导数公式为：\n$$\nD_p \\phi_{\\mu}(x) = \\nabla f(x)^T p + \\mu D_p \\left( \\sum_{i=1}^m |\\max\\{0, g_i(x)\\}| \\right)\n$$\n在约束被违反的点，即 $g_i(x)  0$，项 $|\\max\\{0, g_i(x)\\}|$ 就是 $g_i(x)$，它是可微的。其方向导数是 $\\nabla g_i(x)^T p$。\n在约束被满足的点，即 $g_i(x) \\le 0$，如果 $g_i(x)  0$，则项 $|\\max\\{0, g_i(x)\\}|$ 在一个邻域内是 $0$。如果 $g_i(x)=0$，方向导数是 $\\max\\{0, \\nabla g_i(x)^T p\\}$。\n在我们的例子中，在 $x^{(0)}$ 点，我们有 $g_1(x^{(0)}) = 0.5  0$ 和 $g_2(x^{(0)}) = 0.5  0$。\n因此，$\\phi_{\\mu}(x)$ 在 $x^{(0)}$ 点是可微的，并且在其邻域内，它由下式给出：\n$$\n\\phi_{\\mu}(x) = f(x) + \\mu(g_1(x) + g_2(x))\n$$\n因此，方向导数是：\n$$\nD_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = \\nabla \\phi_{\\mu}(x^{(0)})^T p^{(0)}\n$$\n其中 $\\nabla \\phi_{\\mu}(x^{(0)}) = \\nabla f(x^{(0)}) + \\mu(\\nabla g_1(x^{(0)}) + \\nabla g_2(x^{(0)}))$.\n所以，\n$$\nD_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = (\\nabla f(x^{(0)}) + \\mu(\\nabla g_1(x^{(0)}) + \\nabla g_2(x^{(0)})))^T p^{(0)}\n$$\n$$\nD_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = \\nabla f(x^{(0)})^T p^{(0)} + \\mu(\\nabla g_1(x^{(0)})^T p^{(0)} + \\nabla g_2(x^{(0)})^T p^{(0)})\n$$\n我们来计算各个部分。\n*   $\\nabla f(x^{(0)})^T p^{(0)} = \\begin{pmatrix} -4 \\\\ -3 \\end{pmatrix}^T \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} = (-4)(0) + (-3)(-0.5) = 1.5$。\n*   $\\nabla g_1(x^{(0)})^T p^{(0)} = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}^T \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} = (1)(0) + (1)(-0.5) = -0.5$。\n*   $\\nabla g_2(x^{(0)})^T p^{(0)} = \\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix}^T \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} = (2)(0) + (1)(-0.5) = -0.5$。\n\n将这些代入方向导数的表达式中：\n$$\nD_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = 1.5 + \\mu(-0.5 + (-0.5)) = 1.5 - \\mu\n$$\n\n另外，对于 $\\ell_1$ 罚函数的方向导数有一个通用公式。对于一个一般的非线性规划 $\\min f(x)$ s.t. $c(x) \\le 0$，$ \\phi_\\mu(x) = f(x) + \\mu \\sum_i \\max(0, c_i(x))$ 在方向 $p$ 上的方向导数是：\n$$ D_p \\phi_\\mu(x) = \\nabla f(x)^T p + \\mu \\sum_{i \\in I_0(x)} \\max(0, \\nabla c_i(x)^T p) + \\mu \\sum_{i \\in I_+(x)} \\nabla c_i(x)^T p $$\n其中 $I_+(x) = \\{i | c_i(x)  0\\}$ 且 $I_0(x) = \\{i | c_i(x) = 0\\}$。\n在我们所在的点 $x^{(0)}$，$g_1(x^{(0)})=0.5$ 且 $g_2(x^{(0)})=0.5$。所以两者都在 $I_+(x^{(0)})$ 中。集合 $I_0(x^{(0)})$ 是空的。\n所以公式变成：\n$$ D_{p^{(0)}} \\phi_\\mu(x^{(0)}) = \\nabla f(x^{(0)})^T p^{(0)} + \\mu (\\nabla g_1(x^{(0)})^T p^{(0)} + \\nabla g_2(x^{(0)})^T p^{(0)}) $$\n这正是我之前推导的。我之前的推导是正确的。\n所以，$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = 1.5 - \\mu$。\n\n**步骤D：找到阈值 $\\mu_{\\min}$**\n\n如果方向导数严格为负，那么SQP步长 $p^{(0)}$ 就是 $\\phi_{\\mu}$ 在 $x^{(0)}$ 点的严格下降方向：\n$$\nD_{p^{(0)}} \\phi_{\\mu}(x^{(0)})  0\n$$\n代入我们找到的表达式：\n$$\n1.5 - \\mu  0\n$$\n$$\n1.5  \\mu\n$$\n所以，对于所有 $\\mu  1.5$，步长 $p^{(0)}$ 是一个严格下降方向。\n问题要求找到最小的阈值 $\\mu_{\\min}$，使得对于所有 $\\mu  \\mu_{\\min}$，该条件都成立。\n这直接得出 $\\mu_{\\min} = 1.5$。\n\n我们来复核一下理论。\n惩罚参数 $\\mu$ 的一个常见条件是它必须满足 $\\mu \\ge \\|\\lambda^{(k+1)}\\|_\\infty$，其中 $\\lambda^{(k+1)}$ 是QP子问题的乘子。\n在我们的例子中，乘子是 $\\lambda^{(1)} = (\\lambda_1, \\lambda_2)^T = (3, 0.5)^T$。\n无穷范数是 $\\|\\lambda^{(1)}\\|_\\infty = \\max\\{|\\lambda_1|, |\\lambda_2|\\} = \\max\\{3, 0.5\\} = 3$。\n这表明 $\\mu$ 或许应该大于3。为什么我的结果不同？\n\n让我们重新审视下降的条件。\nQP的目标函数是 $Q(p) = \\nabla f(x^{(k)})^T p + \\frac{1}{2} p^T B^{(k)} p$。\n约束是 $\\nabla g_i(x^{(k)})^T p \\le -g_i(x^{(k)})$。\n设 $p^{(k)}$ 是QP的解，$\\lambda^{(k+1)}$ 是乘子。\nQP的KKT条件是：\n$\\nabla f(x^{(k)}) + B^{(k)} p^{(k)} + \\sum_i \\lambda_i^{(k+1)} \\nabla g_i(x^{(k)}) = 0$。\n这意味着 $\\nabla f(x^{(k)})^T p^{(k)} + (p^{(k)})^T B^{(k)} p^{(k)} + \\sum_i \\lambda_i^{(k+1)} \\nabla g_i(x^{(k)})^T p^{(k)} = 0$。这是通过乘以 $(p^{(k)})^T$ 得到的。\n由此，我们得到 $\\nabla f(x^{(k)})^T p^{(k)} = - (p^{(k)})^T B^{(k)} p^{(k)} - \\sum_i \\lambda_i^{(k+1)} \\nabla g_i(x^{(k)})^T p^{(k)}$。\n\n方向导数是：\n$D_{p^{(k)}} \\phi_{\\mu}(x^{(k)}) = \\nabla f(x^{(k)})^T p^{(k)} + \\mu \\sum_{i \\in \\mathcal{I}} D_{p^{(k)}} (|\\max\\{0, g_i(x^{(k)})\\}|)$。\n让我们重新评估约束的导数部分。\n$D_{p^{(k)}} \\sum_i |\\max(0,g_i)| = \\sum_{g_i  0} \\nabla g_i^T p^{(k)} + \\sum_{g_i=0} \\max(0, \\nabla g_i^T p^{(k)})$。\n在 $x^{(0)}$ 处，$g_1=0.50$ 且 $g_2=0.50$。\n所以 $D = \\nabla f^T p + \\mu(\\nabla g_1^T p + \\nabla g_2^T p)$。\n这是正确的。\n在解 $p^{(0)}$ 处，线性化约束是有效的：\n$g_1(x^{(0)}) + \\nabla g_1(x^{(0)})^T p^{(0)} = 0 \\implies \\nabla g_1(x^{(0)})^T p^{(0)} = -g_1(x^{(0)}) = -0.5$。\n$g_2(x^{(0)}) + \\nabla g_2(x^{(0)})^T p^{(0)} = 0 \\implies \\nabla g_2(x^{(0)})^T p^{(0)} = -g_2(x^{(0)}) = -0.5$。\n\n我之前对这些项的计算是：\n$\\nabla g_1(x^{(0)})^T p^{(0)} = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}^T \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} = -0.5$。正确。\n$\\nabla g_2(x^{(0)})^T p^{(0)} = \\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix}^T \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} = -0.5$。正确。\n这与QP约束有效是一致的。\n\n现在让我们使用QP的KKT条件。\n$\\nabla f(x^{(0)}) + B^{(0)} p^{(0)} + \\lambda_1 \\nabla g_1(x^{(0)}) + \\lambda_2 \\nabla g_2(x^{(0)}) = 0$。\n$\\begin{pmatrix} -4 \\\\ -3 \\end{pmatrix} + \\begin{pmatrix} 1  0 \\\\ 0  1 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} + \\lambda_1 \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} + \\lambda_2 \\begin{pmatrix} 2 \\\\ 1 \\end{pmatrix} = 0$\n$\\begin{pmatrix} -4 \\\\ -3 \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ -0.5 \\end{pmatrix} + \\begin{pmatrix} \\lambda_1 \\\\ \\lambda_1 \\end{pmatrix} + \\begin{pmatrix} 2\\lambda_2 \\\\ \\lambda_2 \\end{pmatrix} = 0$\n$\\begin{pmatrix} -4 + \\lambda_1 + 2\\lambda_2 \\\\ -3.5 + \\lambda_1 + \\lambda_2 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$。\n这是我之前用 $p_1, p_2$ 解 $\\lambda_1, \\lambda_2$ 时得到的同一个方程组。\n$p_1-4 + \\lambda_1 + 2\\lambda_2 = 0 \\implies 0-4+\\lambda_1+2\\lambda_2=0 \\implies \\lambda_1+2\\lambda_2 = 4$。\n$p_2-3 + \\lambda_1 + \\lambda_2 = 0 \\implies -0.5-3+\\lambda_1+\\lambda_2=0 \\implies \\lambda_1+\\lambda_2 = 3.5$。\n解为 $\\lambda_1 = 3, \\lambda_2 = 0.5$。正确。\n\n让我们找一个用QP解表示方向导数的一般表达式。\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = \\nabla f(x^{(0)})^T p^{(0)} + \\mu \\left( \\nabla g_1(x^{(0)})^T p^{(0)} + \\nabla g_2(x^{(0)})^T p^{(0)} \\right)$。\n从线性化约束（它们是有效的）：\n$\\nabla g_1(x^{(0)})^T p^{(0)} = -g_1(x^{(0)})$。\n$\\nabla g_2(x^{(0)})^T p^{(0)} = -g_2(x^{(0)})$。\n所以，$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = \\nabla f(x^{(0)})^T p^{(0)} - \\mu (g_1(x^{(0)}) + g_2(x^{(0)}))$。\n\n现在，让我们看看 $\\nabla f(x^{(0)})^T p^{(0)}$。\n从QP的KKT条件，乘以 $(p^{(0)})^T$：\n$(p^{(0)})^T \\nabla f(x^{(0)}) + (p^{(0)})^T B^{(0)} p^{(0)} + \\lambda_1 (p^{(0)})^T \\nabla g_1(x^{(0)}) + \\lambda_2 (p^{(0)})^T \\nabla g_2(x^{(0)}) = 0$。\n$\\nabla f(x^{(0)})^T p^{(0)} = - (p^{(0)})^T B^{(0)} p^{(0)} - \\lambda_1 (\\nabla g_1(x^{(0)})^T p^{(0)}) - \\lambda_2 (\\nabla g_2(x^{(0)})^T p^{(0)})$。\n代入 $\\nabla g_i^T p^{(0)} = -g_i(x^{(0)})$：\n$\\nabla f(x^{(0)})^T p^{(0)} = - (p^{(0)})^T B^{(0)} p^{(0)} - \\lambda_1 (-g_1(x^{(0)})) - \\lambda_2 (-g_2(x^{(0)}))$。\n$\\nabla f(x^{(0)})^T p^{(0)} = - p^{(0)T} B^{(0)} p^{(0)} + \\lambda_1 g_1(x^{(0)}) + \\lambda_2 g_2(x^{(0)})$。\n\n将这个 $\\nabla f^T p$ 的表达式代回方向导数公式：\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = \\left( - p^{(0)T} B^{(0)} p^{(0)} + \\lambda_1 g_1(x^{(0)}) + \\lambda_2 g_2(x^{(0)}) \\right) - \\mu (g_1(x^{(0)}) + g_2(x^{(0)}))$。\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = - p^{(0)T} B^{(0)} p^{(0)} + (\\lambda_1 - \\mu) g_1(x^{(0)}) + (\\lambda_2 - \\mu) g_2(x^{(0)})$。\n\n我们来计算各项：\n*   $p^{(0)} = (0, -0.5)^T$。\n*   $B^{(0)} = I_2$。\n*   $p^{(0)T} B^{(0)} p^{(0)} = p^{(0)T} p^{(0)} = 0^2 + (-0.5)^2 = 0.25$。这一项总为非负，如果 $p^{(0)} \\neq 0$ 则为正。\n*   $g_1(x^{(0)}) = 0.5$。\n*   $g_2(x^{(0)}) = 0.5$。\n*   $\\lambda_1 = 3$。\n*   $\\lambda_2 = 0.5$。\n\n代入这些值：\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = -0.25 + (3 - \\mu)(0.5) + (0.5 - \\mu)(0.5)$。\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = -0.25 + 1.5 - 0.5\\mu + 0.25 - 0.5\\mu$。\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = 1.5 - \\mu$。\n\n这证实了我之前更直接的计算。结果看起来是稳健的。\n$D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = 1.5 - \\mu$。\n我们需要这个值严格为负以得到下降方向。\n$1.5 - \\mu  0 \\implies \\mu  1.5$。\n所以，$\\mu_{\\min} = 1.5$。\n\n为什么经验法则 $\\mu \\ge \\|\\lambda\\|_\\infty$ 会给出一个不同的数字？让我们再查阅一下文献。\n条件 $\\mu \\ge \\|\\lambda^{(k+1)}\\|_\\infty$ 是一个确保 $p^{(k)}$ 是下降方向的*充分*条件。它不总是一个*必要*条件。让我们看看是否能从我找到的一般表达式中推导出它。\n$D_p \\phi_\\mu = - p^T B p + \\sum_{i \\in \\mathcal{A}} (\\lambda_i - \\mu) g_i(x)$。\n这里 $\\mathcal{A}$ 是QP的有效约束集。它不完全是 $g_i(x)$，而是线性化约束的违反量。\n让我们更精确一点。\n$D_{p^{(k)}} \\phi_\\mu(x^{(k)}) = \\nabla f^T p^{(k)} + \\mu \\sum_{i \\in I_+(x^{(k)})} \\nabla g_i^T p^{(k)} + \\mu \\sum_{i \\in I_0(x^{(k)})} \\max(0, \\nabla g_i^T p^{(k)})$。\n使用 $\\nabla f^T p^{(k)} = -p^{(k)T}B^{(k)}p^{(k)} - \\sum_i \\lambda_i^{(k+1)} \\nabla g_i^T p^{(k)}$：\n$D = -p^T B p - \\sum_i \\lambda_i \\nabla g_i^T p + \\mu \\sum_{i \\in I_+} \\nabla g_i^T p + \\mu \\sum_{i \\in I_0} \\max(0, \\nabla g_i^T p)$。\n（为清晰起见，我省略了迭代上标）\n$D = -p^T B p + \\sum_{i \\in I_+} (\\mu - \\lambda_i) \\nabla g_i^T p + \\sum_{i \\in I_0 \\cup I_-} (-\\lambda_i \\nabla g_i^T p) + \\mu \\sum_{i \\in I_0} \\max(0, \\nabla g_i^T p)$。\n回想QP约束：$\\nabla g_i^T p \\le -g_i(x)$。\n对于 $i\\in I_+$，$g_i(x)0$，所以 $\\nabla g_i^T p$ 必须是负的。\n对于 $i\\in I_0$，$g_i(x)=0$，所以 $\\nabla g_i^T p \\le 0$。\n对于 $i \\in I_-$，$g_i(x)0$。$\\nabla g_i^T p$ 可以是正的或负的。如果这个约束在QP中不是有效的，对应的 $\\lambda_i$ 应该为0。\n\n我们假设所有约束都在 $I_+ \\cup I_0$ 中。\n$g_i  0 \\implies \\nabla g_i^T p \\le -g_i  0$。\n$g_i = 0 \\implies \\nabla g_i^T p \\le 0$。\n所以在两种情况下 $\\nabla g_i^T p \\le 0$。\n$D = -p^T B p + \\sum_{i \\in I_+} (\\mu - \\lambda_i) \\nabla g_i^T p + \\sum_{i \\in I_0} [ -\\lambda_i \\nabla g_i^T p + \\mu \\max(0, \\nabla g_i^T p) ]$。\n因为对于 $i \\in I_0$，$\\nabla g_i^T p \\le 0$，我们有 $\\max(0, \\nabla g_i^T p) = 0$。\n所以 $i \\in I_0$ 的项变成 $-\\lambda_i \\nabla g_i^T p$。\n$D = -p^T B p + \\sum_{i \\in I_+} (\\mu - \\lambda_i) \\nabla g_i^T p - \\sum_{i \\in I_0} \\lambda_i \\nabla g_i^T p$。\n\n现在将此应用于我们的问题。\n两个约束都在 $I_+$ 中。$I_0$ 是空的。\n$D = -p^T B p + (\\mu - \\lambda_1) \\nabla g_1^T p + (\\mu - \\lambda_2) \\nabla g_2^T p$。\n我们需要 $D  0$。\n$p^T B p = 0.25  0$。\n$\\nabla g_1^T p = -0.5  0$。\n$\\nabla g_2^T p = -0.5  0$。\n$\\lambda_1=3, \\lambda_2=0.5$。\n$D = -0.25 + (\\mu - 3)(-0.5) + (\\mu - 0.5)(-0.5)$。\n$D = -0.25 - 0.5\\mu + 1.5 - 0.5\\mu + 0.25$。\n$D = 1.5 - \\mu$。\n是的，这绝对是正确的表达式。我的计算是一致的。\n\n现在，我们来探究我的困惑。\n条件 $D  0$ 变成：\n$-p^T B p + (\\lambda_1 - \\mu)g_1 + (\\lambda_2 - \\mu)g_2  0$。\n如果我们设置 $\\mu \\ge \\max(\\lambda_1, \\lambda_2)$，即 $\\mu \\ge 3$。\n那么 $(\\lambda_1-\\mu)$ 和 $(\\lambda_2-\\mu)$ 都 $\\le 0$。\n因为 $g_10$ 和 $g_20$，项 $(\\lambda_i-\\mu)g_i$ 都 $\\le 0$。\n并且 $-p^T B p = -0.25  0$。\n所以如果 $\\mu \\ge 3$，那么 $D  0$ 是保证的。这证实了 $\\mu \\ge \\|\\lambda\\|_\\infty$ 是一个*充分*条件。\n然而，它不是一个必要条件。\n我们需要找到*最小*的阈值 $\\mu_{\\min}$。\n条件是 $1.5 - \\mu  0$。\n这等价于 $\\mu  1.5$。\n这个阈值是满足条件的所有 $\\mu$ 组成的集合的下确界。这个集合是 $(1.5, \\infty)$。其下确界是 1.5。\n所以 $\\mu_{\\min}=1.5$。\n逻辑成立。\n\n让我们对所有计算做最后一次检查。\n$x^{(0)} = (1, 1.5)$。\n$f(x) = (x_1-3)^2 + (x_2-3)^2 \\implies \\nabla f = (2x_1-6, 2x_2-6)^T \\implies \\nabla f(x^{(0)}) = (-4, -3)^T$。\n$g_1(x) = x_1+x_2-2 \\implies \\nabla g_1 = (1,1)^T \\implies g_1(x^{(0)})=0.5, \\nabla g_1(x^{(0)})=(1,1)^T$。\n$g_2(x) = x_1^2+x_2-2 \\implies \\nabla g_2 = (2x_1, 1)^T \\implies g_2(x^{(0)})=0.5, \\nabla g_2(x^{(0)})=(2,1)^T$。\nQP子问题：\n$\\min \\frac{1}{2}p_1^2 + \\frac{1}{2}p_2^2 -4p_1 -3p_2$\ns.t. $p_1+p_2+0.5 \\le 0$\n$2p_1+p_2+0.5 \\le 0$\n无约束最小点在 $p=(4,3)$。两个约束都违反。\n如果第一个有效：$p_1+p_2=-0.5$。平稳性条件（$\\lambda_2=0$）给出 $p_1=4-\\lambda_1, p_2=3-\\lambda_1$。$(4-\\lambda_1)+(3-\\lambda_1)=-0.5 \\implies 7-2\\lambda_1=-0.5 \\implies 2\\lambda_1=7.5 \\implies \\lambda_1=3.75$。$p_1 = 0.25, p_2=-0.75$。检查第二个约束：$2(0.25)+(-0.75)+0.5 = 0.5-0.75+0.5=0.250$。违反。\n如果第二个有效：$2p_1+p_2=-0.5$。平稳性条件（$\\lambda_1=0$）给出 $p_1=4-2\\lambda_2, p_2=3-\\lambda_2$。$2(4-2\\lambda_2)+(3-\\lambda_2)=-0.5 \\implies 8-4\\lambda_2+3-\\lambda_2=-0.5 \\implies 11-5\\lambda_2 = -0.5 \\implies 5\\lambda_2=11.5 \\implies \\lambda_2=2.3$。$p_1 = 4-4.6=-0.6, p_2=3-2.3=0.7$。检查第一个约束：$-0.6+0.7+0.5=0.60$。违反。\n如果两者都有效：$p_1+p_2=-0.5$, $2p_1+p_2=-0.5$。相减得到 $p_1=0$。然后 $p_2=-0.5$。所以 $p^{(0)}=(0, -0.5)$。\n平稳性：\n$p_1-4+\\lambda_1+2\\lambda_2=0 \\implies 0-4+\\lambda_1+2\\lambda_2=0 \\implies \\lambda_1+2\\lambda_2=4$。\n$p_2-3+\\lambda_1+\\lambda_2=0 \\implies -0.5-3+\\lambda_1+\\lambda_2=0 \\implies \\lambda_1+\\lambda_2=3.5$。\n相减得到 $\\lambda_2=0.5$。然后 $\\lambda_1=3$。\n$\\lambda_10, \\lambda_20$。这是有效解。\nQP部分的所有计算都是正确的。\n\n方向导数部分：\n所有推导都基于这样一个事实：在 $x^{(0)}$ 点，两个约束都被违反 ($g_i  0$)。这将价值函数局部地简化为 $f+\\mu(g_1+g_2)$。这个简化是正确的。\n然后 $D_{p^{(0)}} \\phi_{\\mu}(x^{(0)}) = \\nabla f^T p^{(0)} + \\mu(\\nabla g_1^T p^{(0)} + \\nabla g_2^T p^{(0)})$。这是正确的。\n$\\nabla f^T p^{(0)} = (-4, -3) \\cdot (0, -0.5) = 1.5$。正确。\n$\\nabla g_1^T p^{(0)} = (1,1) \\cdot (0, -0.5) = -0.5$。正确。\n$\\nabla g_2^T p^{(0)} = (2,1) \\cdot (0, -0.5) = -0.5$。正确。\n$D = 1.5 + \\mu(-0.5 - 0.5) = 1.5 - \\mu$。正确。\n严格下降方向的条件：$D  0$。\n$1.5 - \\mu  0 \\implies \\mu  1.5$。\n阈值是 $\\mu_{\\min}=1.5$。\n所有步骤看起来都正确且经过验证。逻辑是合理的。计算已经复核。与标准的 $\\mu$ 的充分条件可能产生的混淆已经解决；问题要求的是最紧确的界（最小阈值），而不仅仅是任何一个充分的界。我的结果是最紧确的界。", "answer": "$$\n\\boxed{1.5}\n$$", "id": "3195671"}, {"introduction": "在实际应用中，尤其是在拟牛顿SQP方法中，我们用于构建二次子问题的Hessian近似矩阵$B_k$可能不是半正定的。这会导致一个非凸的QP子问题，使得寻找全局最优解变得困难或不可能。本编程练习旨在解决这一关键的实际问题，你将通过对Hessian矩阵进行正则化（regularization）来确保子问题的凸性，从而使其能够被可靠地求解。[@problem_id:3169643]", "problem": "要求您研究Hessian正则化在序列二次规划（SQP）中出现的二次规划子问题中的作用。您的研究必须实现为一个完整的、可运行的程序，该程序通过对一个不定的Hessian近似进行正则化，来求解一小组凸二次子问题。\n\n您必须基于以下基本原理：\n- 光滑目标函数在当前迭代点周围的二阶泰勒近似，从而得到一个关于步长变量的局部二次模型。\n- 光滑不等式约束在当前迭代点周围的一阶（仿射）近似，从而得到可行域的一个局部多面体近似。\n- 要求二次子问题是凸的，以保证全局最小值点的存在性，如果其二次型是半正定的，则可以确保这一点。\n\n构建以下示例非线性规划及其在给定迭代点处的SQP二次子问题。\n\n1) 非线性规划：\n- 目标：最小化函数 $f(x)$，其中 $x \\in \\mathbb{R}^2$ 且\n  $$ f(x) = x_1^3 - 3 x_1 x_2 + x_2^2. $$\n- 不等式约束：\n  - $$ c_1(x) := x_1^2 + x_2 - 1 \\le 0, $$\n  - $$ c_2(x) := -x_2 \\le 0. $$\n\n2) 二次子问题的线性化点和数据：\n- 当前迭代点：\n  $$ x_k = \\begin{bmatrix} 0.5 \\\\ 0.4 \\end{bmatrix}. $$\n- 目标函数在 $x_k$ 处的梯度：\n  $$ \\nabla f(x) = \\begin{bmatrix} 3 x_1^2 - 3 x_2 \\\\ -3 x_1 + 2 x_2 \\end{bmatrix}, \\quad g_k := \\nabla f(x_k). $$\n- 一个不定的对称Hessian近似（例如，一个已失去正定性的拟牛顿更新）：\n  $$ B_k = \\begin{bmatrix} -0.5  0.0 \\\\ 0.0  0.2 \\end{bmatrix}. $$\n- 在 $x_k$ 处不等式约束的线性化：\n  - 对于 $c_1(x)$，使用梯度\n    $$ \\nabla c_1(x) = \\begin{bmatrix} 2 x_1 \\\\ 1 \\end{bmatrix}, \\quad \\nabla c_1(x_k), \\quad c_1(x_k), $$\n    和仿射近似 $c_1(x_k) + \\nabla c_1(x_k)^\\top d \\le 0$。\n  - 对于 $c_2(x)$，使用梯度\n    $$ \\nabla c_2(x) = \\begin{bmatrix} 0 \\\\ -1 \\end{bmatrix}, \\quad \\nabla c_2(x_k), \\quad c_2(x_k), $$\n    和仿射近似 $c_2(x_k) + \\nabla c_2(x_k)^\\top d \\le 0$。\n\n3) 正则化的二次子问题：\n- 对于给定的正则化参数 $\\tau \\ge 0$，定义移位矩阵\n  $$ H(\\tau) := B_k + \\tau I. $$\n- 求解关于步长变量 $d \\in \\mathbb{R}^2$ 的凸二次规划：\n  $$ \\min_{d \\in \\mathbb{R}^2} \\; q_\\tau(d) := \\tfrac{1}{2} d^\\top H(\\tau) d + g_k^\\top d, $$\n  服从仿射不等式约束\n  $$ c_i(x_k) + \\nabla c_i(x_k)^\\top d \\le 0, \\quad \\text{for } i \\in \\{1,2\\}. $$\n\n科学真实性和凸性要求：\n- 如果 $H(\\tau)$ 不是半正定的，则二次子问题是非凸的，并且不保证存在全局最小值点。在这种情况下，为了本练习的目的，您必须将步长视为未定义。\n\n研究目标：\n- 对于每个测试的 $\\tau$，当且仅当 $H(\\tau)$ 是半正定（在最小特征值上，数值容差为 $\\varepsilon = 10^{-10}$）时，计算步长 $d(\\tau)$。如果 $H(\\tau)$ 未通过此测试，则声明步长未定义。\n- 当步长有定义时，报告其欧几里得范数 $\\lVert d(\\tau) \\rVert_2$；否则报告哨兵值 $-1.0$。\n- 报告两个可行性指标：\n  - 线性化可行性：计算出的步长 $d(\\tau)$ 是否在 $\\delta = 10^{-8}$ 的容差内满足所有仿射约束 $c_i(x_k) + \\nabla c_i(x_k)^\\top d \\le 0$。\n  - 原始可行性：试验点 $x_k + d(\\tau)$ 是否在相同的容差 $\\delta$ 内满足原始非线性约束 $c_i(x_k + d) \\le 0$。\n\n测试集：\n- 使用以下正则化参数值\n  $$ \\tau \\in \\{ 0.0, \\; 0.3, \\; 0.5, \\; 2.0 \\}. $$\n- 这些值涵盖了非凸二次型（$\\tau$ 太小）、产生半正定型的边界情况以及明显凸的情况（较大的 $\\tau$）。\n\n答案规格和输出格式：\n- 对于测试集中的每个 $\\tau$，您的程序必须生成一个四元素列表\n  $$ [\\tau, \\; \\lVert d(\\tau) \\rVert_2, \\; \\text{is\\_lin\\_feasible}, \\; \\text{is\\_orig\\_feasible}]. $$\n- 如果 $H(\\tau)$ 不是半正定的，返回 $[\\tau, \\; -1.0, \\; \\text{False}, \\; \\text{False}]$。\n- 将所有测试的 $\\tau$ 值的结​​果按给定顺序汇总到一个列表中，并精确打印一行包含此汇总列表的内容，格式为方括号内以逗号分隔，例如\n  $$ [[\\tau_1,\\; \\lVert d(\\tau_1)\\rVert_2,\\; \\dots], [\\tau_2,\\; \\lVert d(\\tau_2)\\rVert_2,\\; \\dots], \\dots]. $$\n- 此问题中没有物理单位或角度。所有实值输出必须是十进制浮点数。布尔值必须是字面量 $\\text{True}$ 或 $\\text{False}$。", "solution": "用户希望针对给定的非线性规划（NLP），分析在序列二次规划（SQP）中出现的正则化二次规划（QP）子问题。\n\n首先，我们通过计算指定迭代点 $x_k$ 处QP子问题的必要组件来形式化该问题。\n\n该NLP定义如下：\n最小化 $f(x) = x_1^3 - 3 x_1 x_2 + x_2^2$\n服从：\n$c_1(x) = x_1^2 + x_2 - 1 \\le 0$\n$c_2(x) = -x_2 \\le 0$\n\nQP子问题在迭代点 $x_k = \\begin{bmatrix} 0.5 \\\\ 0.4 \\end{bmatrix}$ 处构建。该子问题是原始问题关于步长变量 $d \\in \\mathbb{R}^2$ 的二次近似。\n\nQP的目标函数为 $q_\\tau(d) = \\tfrac{1}{2} d^\\top H(\\tau) d + g_k^\\top d$。\n其组成部分为：\n1.  目标函数 $f(x)$ 在 $x_k$ 处的梯度，记为 $g_k$。\n    梯度为 $\\nabla f(x) = \\begin{bmatrix} 3 x_1^2 - 3 x_2 \\\\ -3 x_1 + 2 x_2 \\end{bmatrix}$。\n    在 $x_k = \\begin{bmatrix} 0.5 \\\\ 0.4 \\end{bmatrix}$ 处，我们有：\n    $$ g_k = \\nabla f(x_k) = \\begin{bmatrix} 3(0.5)^2 - 3(0.4) \\\\ -3(0.5) + 2(0.4) \\end{bmatrix} = \\begin{bmatrix} 0.75 - 1.2 \\\\ -1.5 + 0.8 \\end{bmatrix} = \\begin{bmatrix} -0.45 \\\\ -0.7 \\end{bmatrix}. $$\n\n2.  正则化的Hessian近似, $H(\\tau)$。\n    问题提供了一个不定的Hessian近似 $B_k = \\begin{bmatrix} -0.5  0.0 \\\\ 0.0  0.2 \\end{bmatrix}$。\n    该矩阵使用参数 $\\tau \\ge 0$ 进行正则化，形成一个新矩阵 $H(\\tau) = B_k + \\tau I$，其中 $I$ 是单位矩阵。\n    $$ H(\\tau) = \\begin{bmatrix} -0.5  0.0 \\\\ 0.0  0.2 \\end{bmatrix} + \\tau \\begin{bmatrix} 1  0 \\\\ 0  1 \\end{bmatrix} = \\begin{bmatrix} -0.5 + \\tau  0.0 \\\\ 0.0  0.2 + \\tau \\end{bmatrix}. $$\n\nQP的约束是原始非线性约束 $c_i(x)$ 的仿射近似。一般形式为 $c_i(x_k) + \\nabla c_i(x_k)^\\top d \\le 0$。\n\n1.  对于约束 $c_1(x)$：\n    在 $x_k$ 处的值为 $c_1(x_k) = (0.5)^2 + 0.4 - 1 = 0.25 + 0.4 - 1 = -0.35$。\n    梯度为 $\\nabla c_1(x) = \\begin{bmatrix} 2 x_1 \\\\ 1 \\end{bmatrix}$。\n    在 $x_k$ 处，$\\nabla c_1(x_k) = \\begin{bmatrix} 2(0.5) \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$。\n    线性化约束为 $-0.35 + \\begin{bmatrix} 1  1 \\end{bmatrix} d \\le 0$，简化为 $d_1 + d_2 \\le 0.35$。\n\n2.  对于约束 $c_2(x)$：\n    在 $x_k$ 处的值为 $c_2(x_k) = -0.4$。\n    梯度为 $\\nabla c_2(x) = \\begin{bmatrix} 0 \\\\ -1 \\end{bmatrix}$，这是一个常数。\n    线性化约束为 $-0.4 + \\begin{bmatrix} 0  -1 \\end{bmatrix} d \\le 0$，简化为 $-d_2 \\le 0.4$，即 $d_2 \\ge -0.4$。\n\n完整的正则化QP子问题是：\n最小化 $q_\\tau(d) = \\tfrac{1}{2} d^\\top \\begin{bmatrix} -0.5+\\tau  0 \\\\ 0  0.2+\\tau \\end{bmatrix} d + \\begin{bmatrix} -0.45 \\\\ -0.7 \\end{bmatrix}^\\top d$\n服从：\n$d_1 + d_2 \\le 0.35$\n$d_2 \\ge -0.4$\n\n任务的一个关键部分是仅当此QP是凸的时候才求解它，这要求Hessian矩阵 $H(\\tau)$ 是半正定的（PSD）。一个对角矩阵是PSD的，当且仅当其所有对角元素都为非负。$H(\\tau)$ 的特征值为 $\\lambda_1 = -0.5 + \\tau$ 和 $\\lambda_2 = 0.2 + \\tau$。\n为了使 $H(\\tau)$ 是PSD，我们需要 $\\lambda_1 \\ge 0$ 和 $\\lambda_2 \\ge 0$。\n$-0.5 + \\tau \\ge 0 \\implies \\tau \\ge 0.5$。\n$0.2 + \\tau \\ge 0 \\implies \\tau \\ge -0.2$。\n综合条件是 $\\tau \\ge 0.5$。问题指定了数值容差 $\\varepsilon = 10^{-10}$，因此检查变为最小特征值是否大于或等于 $-\\varepsilon$。这实际上确认了分析条件 $\\tau \\ge 0.5$。\n\n我们现在对测试集 $\\{ 0.0, 0.3, 0.5, 2.0 \\}$ 中的每个 $\\tau$ 值进行分析。\n\n情况 $\\tau = 0.0$:\n$H(0.0) = \\begin{bmatrix} -0.5  0.0 \\\\ 0.0  0.2 \\end{bmatrix}$。最小特征值为 $-0.5$，小于 $-\\varepsilon$。该矩阵不是PSD，因此QP子问题是非凸的。根据问题陈述，步长 $d(0.0)$ 未定义。结果是 $[0.0, -1.0, \\text{False}, \\text{False}]$。\n\n情况 $\\tau = 0.3$:\n$H(0.3) = \\begin{bmatrix} -0.2  0.0 \\\\ 0.0  0.5 \\end{bmatrix}$。最小特征值为 $-0.2$，小于 $-\\varepsilon$。该矩阵不是PSD。步长 $d(0.3)$ 未定义。结果是 $[0.3, -1.0, \\text{False}, \\text{False}]$。\n\n情况 $\\tau = 0.5$:\n$H(0.5) = \\begin{bmatrix} 0.0  0.0 \\\\ 0.0  0.7 \\end{bmatrix}$。最小特征值为 $0.0$，大于等于 $-\\varepsilon$。该矩阵是PSD，因此QP是凸的，可以求解。目标函数是 $q_{0.5}(d) = \\tfrac{1}{2}(0.7 d_2^2) - 0.45 d_1 - 0.7 d_2$。由于 $d_1$ 的系数是负的（$-0.45$），我们必须使 $d_1$ 尽可能大以最小化目标。约束 $d_1 + d_2 \\le 0.35$ 界定了 $d_1$，因此在最优解处，此约束必须是活动的：$d_1 = 0.35 - d_2$。将此代入目标函数得到一个关于 $d_2$ 的一维二次问题。此问题的解为 $d_2 = 5/14 \\approx 0.3571$ 和 $d_1 = -1/140 \\approx -0.0071$。\n步长为 $d(0.5) \\approx [-0.0071, 0.3571]^\\top$。其欧几里得范数为 $\\lVert d(0.5) \\rVert_2 \\approx 0.3572$。\n-   线性化可行性：该步长满足 $d_1 + d_2 \\le 0.35$ 和 $d_2 \\ge -0.4$，因此它是线性可行的。\n-   原始可行性：新点为 $x_k + d(0.5) \\approx [0.4929, 0.7571]^\\top$。在原始非线性约束中测试该点得到 $c_1(x_k+d) \\approx 5.1 \\times 10^{-5}$，这违反了 $c_1(x) \\le 0$。因此，它对于原始问题是不可行的。结果是 $[0.5, \\lVert d(0.5) \\rVert_2, \\text{True}, \\text{False}]$。\n\n情况 $\\tau = 2.0$:\n$H(2.0) = \\begin{bmatrix} 1.5  0.0 \\\\ 0.0  2.2 \\end{bmatrix}$。特征值为 $1.5$ 和 $2.2$，因此矩阵是正定的。QP是严格凸的。无约束最小值点通过将 $q_{2.0}(d)$ 的梯度设为零找到，得到 $d_{unc} = [0.3, 7/22]^\\top \\approx [0.3, 0.318]^\\top$。该点违反了第一个线性化约束（$d_1 + d_2 \\approx 0.618  0.35$）。因此，解必须位于可行域的边界上。求解第一个约束为活动（$d_1+d_2=0.35$）时的KKT系统，得到最优步长 $d(2.0) \\approx [0.1405, 0.2095]^\\top$。其欧几里得范数为 $\\lVert d(2.0) \\rVert_2 \\approx 0.2522$。\n-   线性化可行性：通过构造，步长位于可行域的边界上，因此满足线性化约束。\n-   原始可行性：新点为 $x_k + d(2.0) \\approx [0.6405, 0.6095]^\\top$。对于此点，$c_1(x_k+d) \\approx 0.0198  0$，违反了第一个非线性约束。结果是 $[2.0, \\lVert d(2.0) \\rVert_2, \\text{True}, \\text{False}]$。\n\n该实现将使用 `numpy` 进行向量和矩阵运算，并使用 `scipy.optimize.minimize` 的 'SLSQP' 方法来求解凸QP子问题。可行性检查使用指定的容差 $\\delta = 10^{-8}$ 执行。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import minimize\n\ndef solve():\n    \"\"\"\n    Solves a family of regularized quadratic subproblems from an SQP method\n    for a given nonlinear program and reports the results.\n    \"\"\"\n    \n    # Define problem data and parameters from the problem statement.\n    # Current iterate x_k\n    x_k = np.array([0.5, 0.4])\n    \n    # Indefinite Hessian approximation B_k\n    B_k = np.array([[-0.5, 0.0], [0.0, 0.2]])\n    \n    # Test suite of regularization parameters\n    test_cases = [0.0, 0.3, 0.5, 2.0]\n    \n    # Tolerances\n    epsilon = 1e-10  # For positive-semidefinite check\n    delta = 1e-8     # For feasibility checks\n\n    # --- Pre-calculate quantities that do not depend on tau ---\n    \n    # Gradient of the objective at x_k\n    g_k = np.array([3*x_k[0]**2 - 3*x_k[1], -3*x_k[0] + 2*x_k[1]])\n    \n    # Values and gradients of constraints at x_k\n    # Constraint c1\n    c1_val_at_xk = x_k[0]**2 + x_k[1] - 1.0\n    nabla_c1_at_xk = np.array([2*x_k[0], 1.0])\n    \n    # Constraint c2\n    c2_val_at_xk = -x_k[1]\n    nabla_c2_at_xk = np.array([0.0, -1.0])\n\n    # List to store results for each tau\n    results = []\n\n    # --- Iterate through each tau value ---\n    for tau in test_cases:\n        # 1. Construct the regularized Hessian H(tau)\n        H_tau = B_k + tau * np.identity(2)\n        \n        # 2. Check for positive semidefiniteness (PSD)\n        # We use eigvalsh because H_tau is symmetric.\n        eigenvalues = np.linalg.eigvalsh(H_tau)\n        if np.min(eigenvalues)  -epsilon:\n            # Not PSD, the step is undefined.\n            results.append([tau, -1.0, False, False])\n            continue\n\n        # 3. If PSD, define and solve the convex QP subproblem\n        \n        # QP objective function\n        def qp_objective(d):\n            return 0.5 * d.T @ H_tau @ d + g_k.T @ d\n\n        # QP constraints (for scipy.optimize.minimize, type 'ineq' is f(x) >= 0)\n        constraints = [\n            {'type': 'ineq', 'fun': lambda d: -(c1_val_at_xk + nabla_c1_at_xk.T @ d)},\n            {'type': 'ineq', 'fun': lambda d: -(c2_val_at_xk + nabla_c2_at_xk.T @ d)}\n        ]\n        \n        # Initial guess for the step d\n        d_initial_guess = np.array([0.0, 0.0])\n        \n        # Solve the QP using Sequential Least Squares Programming (SLSQP)\n        qp_result = minimize(\n            qp_objective, \n            d_initial_guess, \n            method='SLSQP', \n            constraints=constraints\n        )\n        \n        d_solution = qp_result.x\n        \n        # 4. Compute required outputs\n        \n        # Euclidean norm of the step d\n        norm_d = np.linalg.norm(d_solution)\n        \n        # Check linearized feasibility\n        is_lin_feasible = (c1_val_at_xk + nabla_c1_at_xk.T @ d_solution = delta) and \\\n                          (c2_val_at_xk + nabla_c2_at_xk.T @ d_solution = delta)\n                          \n        # Check original nonlinear feasibility at the new trial point x_k + d\n        x_new = x_k + d_solution\n        c1_at_xnew = x_new[0]**2 + x_new[1] - 1.0\n        c2_at_xnew = -x_new[1]\n        \n        is_orig_feasible = (c1_at_xnew = delta) and (c2_at_xnew = delta)\n\n        # Append the full result for this tau\n        results.append([tau, norm_d, bool(is_lin_feasible), bool(is_orig_feasible)])\n\n    # Format the final output string as specified\n    output_str = \"[\" + \",\".join(str(r) for r in results) + \"]\"\n    print(output_str)\n\nsolve()\n```", "id": "3169643"}]}