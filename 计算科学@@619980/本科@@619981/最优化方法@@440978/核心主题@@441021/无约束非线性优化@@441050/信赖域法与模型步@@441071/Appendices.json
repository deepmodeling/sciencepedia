{"hands_on_practices": [{"introduction": "信赖域方法的核心在于求解一个约束优化子问题，以确定最佳的移动步长。这个过程不仅仅是应用一个公式，而是基于约束优化的基本原理。本练习将引导你从第一性原理出发，利用Karush-Kuhn-Tucker (KKT) 条件，为一个二次模型推导出精确的信赖域步长。通过这个过程，你将深入理解信赖域半径 $\\Delta$、拉格朗日乘子 $\\lambda$ 以及最终步长 $\\mathbf{s}$ 之间的内在联系，为你掌握信赖域方法奠定坚实的理论基础 [@problem_id:3193674]。", "problem": "设 $m(\\mathbf{s}) = g^{\\top} \\mathbf{s} + \\frac{1}{2} \\mathbf{s}^{\\top} Q \\mathbf{s}$ 是一个在给定迭代点处对二阶连续可微目标函数的二次模型，其中 $\\mathbf{s} \\in \\mathbb{R}^{2}$ 是步长，$g \\in \\mathbb{R}^{2}$ 是梯度向量，$Q \\in \\mathbb{R}^{2 \\times 2}$ 是一个对称正定矩阵。信赖域子问题旨在求解在欧几里得范数约束 $\\|\\mathbf{s}\\| \\leq \\Delta$ 下使 $m(\\mathbf{s})$ 最小化的步长，其中 $\\Delta  0$ 是信赖域半径。\n\n考虑 $Q = 3 I_{2}$ 且 $g = \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix}$ 的具体情况，其中 $I_{2}$ 是 $2 \\times 2$ 的单位矩阵。将 $\\Delta$ 视为一个正参数，并假设对于足够小的 $\\Delta$，极小化子位于信赖域的边界上。\n\n仅从约束最小化的一阶最优性条件（Karush-Kuhn-Tucker (KKT) 条件）出发，推导确定与信赖域约束相关联的拉格朗日乘子 $\\lambda \\geq 0$ 的长期方程（secular equation），精确求解此方程得到以 $\\Delta$ 表示的 $\\lambda$，然后获得精确的信赖域步长 $\\mathbf{s}^{\\star}(\\Delta)$。最后，通过计算 $\\frac{d\\lambda}{d\\Delta}$ 在 $\\Delta=1$ 处的值，确定拉格朗日乘子对信赖域半径的敏感度。\n\n你的最终答案必须是 $\\frac{d\\lambda}{d\\Delta}$ 在 $\\Delta = 1$ 处的单个实数值。无需进行四舍五入。", "solution": "该问题旨在求解在信赖域约束下二次模型 $m(\\mathbf{s})$ 的极小化子。该优化问题表述为：\n$$ \\min_{\\mathbf{s} \\in \\mathbb{R}^{2}} m(\\mathbf{s}) = g^{\\top} \\mathbf{s} + \\frac{1}{2} \\mathbf{s}^{\\top} Q \\mathbf{s} $$\n$$ \\text{约束条件为} \\quad \\|\\mathbf{s}\\| \\leq \\Delta $$\n其中使用的是欧几里得范数。我们给定具体值 $Q = 3 I_{2}$ 和 $g = \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix}$。问题还指明，解（记为 $\\mathbf{s}^{\\star}$）位于可行集的边界上，即 $\\|\\mathbf{s}^{\\star}\\| = \\Delta$。\n\n为求解此约束优化问题，我们利用 Karush-Kuhn-Tucker (KKT) 条件。约束可以写为 $c(\\mathbf{s}) = \\frac{1}{2}(\\mathbf{s}^{\\top}\\mathbf{s} - \\Delta^2) \\leq 0$。拉格朗日函数 $\\mathcal{L}(\\mathbf{s}, \\lambda)$ 为：\n$$ \\mathcal{L}(\\mathbf{s}, \\lambda) = m(\\mathbf{s}) + \\lambda c(\\mathbf{s}) = g^{\\top} \\mathbf{s} + \\frac{1}{2} \\mathbf{s}^{\\top} Q \\mathbf{s} + \\frac{\\lambda}{2} (\\mathbf{s}^{\\top}\\mathbf{s} - \\Delta^2) $$\n其中 $\\lambda$ 是与范数约束相关联的拉格朗日乘子。\n\n一阶最优性必要条件（KKT 条件）是：\n1.  **平稳性：** 拉格朗日函数关于 $\\mathbf{s}$ 的梯度必须为零向量：$\\nabla_{\\mathbf{s}} \\mathcal{L}(\\mathbf{s}^{\\star}, \\lambda) = \\mathbf{0}$。\n2.  **原始可行性：** 解必须满足约束条件：$(\\mathbf{s}^{\\star})^{\\top}\\mathbf{s}^{\\star} - \\Delta^2 \\leq 0$。\n3.  **对偶可行性：** 拉格朗日乘子必须为非负：$\\lambda \\geq 0$。\n4.  **互补松弛性：** $\\lambda ((\\mathbf{s}^{\\star})^{\\top}\\mathbf{s}^{\\star} - \\Delta^2) = 0$。\n\n首先，我们计算拉格朗日函数的梯度：\n$$ \\nabla_{\\mathbf{s}} \\mathcal{L}(\\mathbf{s}, \\lambda) = g + Q\\mathbf{s} + \\lambda\\mathbf{s} = (Q + \\lambda I)\\mathbf{s} + g $$\n因此，平稳性条件为：\n$$ (Q + \\lambda I)\\mathbf{s}^{\\star} = -g $$\n\n我们已知解位于边界上，因此 $\\|\\mathbf{s}^{\\star}\\| = \\Delta$。这意味着约束是激活的，即 $(\\mathbf{s}^{\\star})^{\\top}\\mathbf{s}^{\\star} - \\Delta^2 = 0$。根据互补松弛性条件，这允许 $\\lambda  0$。对于一个凸问题，解在边界上的条件意味着 $\\lambda$ 将严格为正。\n\n将给定的矩阵 $Q = 3 I_{2}$ 代入平稳性方程：\n$$ (3I_{2} + \\lambda I_{2})\\mathbf{s}^{\\star} = -g $$\n$$ (3 + \\lambda)\\mathbf{s}^{\\star} = -g $$\n由于 $Q$ 是正定的（其特征值均为 $3$），且 $\\lambda \\geq 0$，矩阵 $Q + \\lambda I_2$ 是对称正定的（其特征值为 $3+\\lambda  0$）。因此，该矩阵是可逆的。我们可以解出 $\\mathbf{s}^{\\star}$：\n$$ \\mathbf{s}^{\\star} = -\\frac{1}{3+\\lambda} g $$\n\n现在，我们施加边界条件 $\\|\\mathbf{s}^{\\star}\\| = \\Delta$：\n$$ \\|\\mathbf{s}^{\\star}\\| = \\left\\| -\\frac{1}{3+\\lambda} g \\right\\| = \\frac{1}{3+\\lambda} \\|g\\| $$\n这就得到了长期方程，它将 $\\lambda$ 与 $\\Delta$ 联系起来：\n$$ \\frac{\\|g\\|}{3+\\lambda} = \\Delta $$\n给定 $g = \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix}$。$g$ 的欧几里得范数是：\n$$ \\|g\\| = \\sqrt{3^2 + 4^2} = \\sqrt{9 + 16} = \\sqrt{25} = 5 $$\n将此值代入长期方程，得到：\n$$ \\frac{5}{3+\\lambda} = \\Delta $$\n对于给定的信赖域半径 $\\Delta$，此方程确定了拉格朗日乘子 $\\lambda$ 的值。\n\n下一步是解此方程，得到作为 $\\Delta$ 的函数的 $\\lambda$：\n$$ 5 = \\Delta (3+\\lambda) $$\n$$ \\frac{5}{\\Delta} = 3+\\lambda $$\n$$ \\lambda(\\Delta) = \\frac{5}{\\Delta} - 3 $$\n该表达式在 $\\lambda \\geq 0$ 时有效，这对应于 $\\frac{5}{\\Delta} - 3 \\geq 0$，即 $\\Delta \\leq \\frac{5}{3}$。本题考虑 $\\Delta=1$ 的情况，该值满足此条件。\n\n使用这个结果，我们可以找到精确的信赖域步长 $\\mathbf{s}^{\\star}(\\Delta)$：\n$$ 3 + \\lambda(\\Delta) = 3 + \\left(\\frac{5}{\\Delta} - 3\\right) = \\frac{5}{\\Delta} $$\n所以，\n$$ \\mathbf{s}^{\\star}(\\Delta) = -\\frac{1}{3+\\lambda(\\Delta)} g = -\\frac{1}{5/\\Delta} g = -\\frac{\\Delta}{5} g = -\\frac{\\Delta}{5} \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix} $$\n\n最后，我们需要计算拉格朗日乘子对信赖域半径的敏感度 $\\frac{d\\lambda}{d\\Delta}$，并在 $\\Delta = 1$ 处求值。我们有 $\\lambda(\\Delta)$ 的表达式：\n$$ \\lambda(\\Delta) = 5\\Delta^{-1} - 3 $$\n我们对 $\\lambda(\\Delta)$ 关于 $\\Delta$ 求导：\n$$ \\frac{d\\lambda}{d\\Delta} = \\frac{d}{d\\Delta} (5\\Delta^{-1} - 3) = -5\\Delta^{-2} = -\\frac{5}{\\Delta^2} $$\n在 $\\Delta = 1$ 处计算该导数的值：\n$$ \\left. \\frac{d\\lambda}{d\\Delta} \\right|_{\\Delta=1} = -\\frac{5}{1^2} = -5 $$\n在 $\\Delta=1$ 处，拉格朗日乘子对信赖域半径的敏感度是 $-5$。", "answer": "$$\n\\boxed{-5}\n$$", "id": "3193674"}, {"introduction": "在计算出信赖域步长后，一个关键问题是：我们所依赖的二次模型在多大程度上准确地预测了真实目标函数的行为？模型预测的下降量（predicted reduction）与函数实际的下降量（actual reduction）之间的差异，是衡量模型保真度的核心指标。本练习 [@problem_id:3193707] 让你通过分析一个非凸性可调的函数族，亲手量化这种差异。你将观察到，随着函数非凸性的增强，二次模型的预测能力会如何下降，从而直观地理解为何信赖域方法必须具备自适应调整半径的能力。", "problem": "考虑一种用于无约束最小化问题的一维信赖域方法。在迭代点 $x_k$ 处，一个二阶连续可微函数 $f$ 在由半径 $\\Delta$ 定义的信赖域内，被其二阶泰勒多项式（称为二次模型）所近似。关于 $x_k$ 的二次模型 $m(s)$ 是使用 $f$ 在 $x_k$ 处的梯度 $g$ 和海森矩阵 $B$ 构建的。信赖域子问题旨在寻找一个步长 $s$，在步长范数的约束下使模型值下降。实际下降量由真实函数值的变化来衡量，而预测下降量则由二次模型值的减少来衡量。实际下降量与预测下降量之间的差异，量化了二次模型在信赖域内捕捉真实函数行为的优劣程度。\n\n从这些基本定义出发，考虑以下具体设置：\n\n- 函数族为一个参数化的四次多项式，由 $f_{\\alpha}(x) = \\frac{1}{4}x^4 - \\frac{\\alpha}{2} x^2 + \\beta x$ 给出，其中 $\\alpha$ 控制非凸性，$\\beta$ 是一个固定的微小线性扰动。\n- 使用固定的扰动 $\\beta = 0.1$（即 $\\beta = 0.1$）。\n- 使用固定的迭代点 $x_k = 0.5$（即 $x_k = 0.5$）。\n- 在一维情况下，在 $x_k$ 处的二次模型可以表示为 $m(s) = f_{\\alpha}(x_k) + g_{\\alpha} s + \\frac{1}{2} B_{\\alpha} s^2$，其中 $g_{\\alpha} = f_{\\alpha}'(x_k)$ 且 $B_{\\alpha} = f_{\\alpha}''(x_k)$。\n- 将一维信赖域子问题定义为在约束 $|s| \\le \\Delta$ 下最小化 $m(s)$。\n\n对于一维情况，最速下降方向是负梯度方向。本问题中使用的步长应为在信赖域边界约束下，沿着最速下降方向的 $m(s)$ 的最小化子，即在方向为 $-g_{\\alpha}$ 的射线上，满足 $|s| \\le \\Delta$ 且使 $m(s)$ 最小化的步长 $s(\\Delta)$。\n\n你的任务是：\n\n- 对于每个 $\\alpha$ 的选择，构造 $f_{\\alpha}$ 并计算在 $x_k$ 处的梯度 $g_{\\alpha}$ 和海森矩阵 $B_{\\alpha}$。\n- 确定在约束 $|s| \\le \\Delta$ 下，沿着最速下降方向使二次模型 $m(s)$ 最小化的步长 $s(\\Delta)$。\n- 计算实际下降量 $AR(\\Delta) = f_{\\alpha}(x_k) - f_{\\alpha}(x_k + s(\\Delta))$ 和预测下降量 $PR(\\Delta) = m(0) - m(s(\\Delta))$。\n- 为每个测试用例计算差值 $D(\\Delta) = AR(\\Delta) - PR(\\Delta)$。\n\n测试套件规范：\n\n- 使用非凸性水平的参数集 $\\alpha \\in \\{0.0, 0.5, 0.75, 1.0, 2.0\\}$。\n- 使用信赖域半径 $\\Delta \\in \\{0.01, 0.1, 0.3, 0.5\\}$。\n- 固定迭代点为 $x_k = 0.5$。\n- 固定扰动为 $\\beta = 0.1$。\n\n覆盖性设计：\n\n- $\\alpha$ 值的集合探查了从 $x_k$ 附近的凸区域到 $x_k$ 附近的强非凸区域。\n- $\\Delta$ 值的集合探查了小半径（模型局部精确）、边界限制步长和中等大半径的情况。\n- 包括当 $\\alpha = 0.75$ 时 $x_k$ 处曲率为零的边界情况。\n\n最终输出规范：\n\n- 你的程序应生成单行输出，包含一个由方括号括起来的列表的列表，列表之间用逗号分隔。每个内部列表对应一个按升序排列的 $\\alpha$ 值，并包含按升序排列的 $\\Delta$ 对应的 $D(\\Delta)$ 值。例如，输出格式应如下所示：$[[d_{0,0},d_{0,1},d_{0,2},d_{0,3}],[d_{1,0},\\dots],\\dots]$，其中 $d_{i,j}$ 是第 $i$ 个 $\\alpha$ 和第 $j$ 个 $\\Delta$ 的差值。\n- 每个 $d_{i,j}$ 都必须是一个实数（浮点数），不带任何物理单位，并直接作为数值字面量打印。\n\n不需要用户输入；程序必须是自包含的，并使用给定的测试套件计算指定的值。角度单位不适用。此问题不涉及任何物理单位或百分比。请确保科学上的一致性，并仅使用信赖域方法中源自二阶泰勒模型的定义和经过充分检验的公式。", "solution": "用户请求了一个关于信赖域优化方法问题的解决方案。该任务涉及为一个给定的一维四次多项式族计算模型函数的实际下降量与预测下降量之间的差值。\n\n### 步骤 1：初步分析与公式化\n\n问题围绕函数 $f_{\\alpha}(x) = \\frac{1}{4}x^4 - \\frac{\\alpha}{2} x^2 + \\beta x$ 展开，其中固定参数为 $x_k=0.5$ 和 $\\beta=0.1$。问题的核心是确定使二次模型 $m(s)$ 最小化的步长 $s(\\Delta)$，然后使用该步长计算量 $D(\\Delta) = AR(\\Delta) - PR(\\Delta)$。\n\n首先，我们确定二次模型 $m(s) = f_{\\alpha}(x_k) + g_{\\alpha} s + \\frac{1}{2} B_{\\alpha} s^2$ 的关键组成部分。在迭代点 $x_k$ 处的梯度 $g_{\\alpha}$ 和海森矩阵 $B_{\\alpha}$ 是 $f_{\\alpha}(x)$ 在 $x_k$ 处求值的一阶和二阶导数。\n\n$f_{\\alpha}(x)$ 的导数是：\n$f'_{\\alpha}(x) = x^3 - \\alpha x + \\beta$\n$f''_{\\alpha}(x) = 3x^2 - \\alpha$\n$f'''_{\\alpha}(x) = 6x$\n$f''''_{\\alpha}(x) = 6$\n\n在固定迭代点 $x_k = 0.5$ 和 $\\beta = 0.1$ 处对这些导数求值：\n梯度为 $g_{\\alpha} = f'_{\\alpha}(0.5) = (0.5)^3 - \\alpha(0.5) + 0.1 = 0.125 - 0.5\\alpha + 0.1 = 0.225 - 0.5\\alpha$。\n海森矩阵（或一维情况下的曲率）为 $B_{\\alpha} = f''_{\\alpha}(0.5) = 3(0.5)^2 - \\alpha = 0.75 - \\alpha$。\n\n### 步骤 2：简化目标量 $D(\\Delta)$\n\n目标量是实际下降量 $AR(\\Delta)$ 与预测下降量 $PR(\\Delta)$ 之间的差值。\n$AR(\\Delta) = f_{\\alpha}(x_k) - f_{\\alpha}(x_k + s(\\Delta))$\n$PR(\\Delta) = m(0) - m(s(\\Delta)) = f_{\\alpha}(x_k) - m(s(\\Delta))$\n\n因此，差值为：\n$D(\\Delta) = AR(\\Delta) - PR(\\Delta) = (f_{\\alpha}(x_k) - f_{\\alpha}(x_k + s(\\Delta))) - (f_{\\alpha}(x_k) - m(s(\\Delta)))$\n$D(\\Delta) = m(s(\\Delta)) - f_{\\alpha}(x_k + s(\\Delta))$\n\n这个量代表了在点 $x_k + s(\\Delta)$ 处二次模型与真实函数之间的误差。我们可以使用 $f_{\\alpha}$ 在 $x_k$ 附近的泰勒展开的高阶项来表示这个误差。由于 $f_{\\alpha}$ 是一个四次多项式，其泰勒级数是有限且精确的：\n$f_{\\alpha}(x_k+s) = f_{\\alpha}(x_k) + f'_{\\alpha}(x_k)s + \\frac{1}{2}f''_{\\alpha}(x_k)s^2 + \\frac{1}{6}f'''_{\\alpha}(x_k)s^3 + \\frac{1}{24}f''''_{\\alpha}(x_k)s^4$\n根据定义，$m(s) = f_{\\alpha}(x_k) + f'_{\\alpha}(x_k)s + \\frac{1}{2}f''_{\\alpha}(x_k)s^2$。\n所以，$f_{\\alpha}(x_k+s) = m(s) + \\frac{1}{6}f'''_{\\alpha}(x_k)s^3 + \\frac{1}{24}f''''_{\\alpha}(x_k)s^4$。\n\n代入 $f'''_{\\alpha}(0.5) = 6(0.5) = 3$ 和 $f''''_{\\alpha}(0.5) = 6$：\n$f_{\\alpha}(0.5+s) = m(s) + \\frac{1}{6}(3)s^3 + \\frac{1}{24}(6)s^4 = m(s) + \\frac{1}{2}s^3 + \\frac{1}{4}s^4$。\n\n因此，对于任意步长 $s$，差值为：\n$m(s) - f_{\\alpha}(0.5+s) = -(\\frac{1}{2}s^3 + \\frac{1}{4}s^4)$。\n这意味着 $D(\\Delta) = -\\frac{1}{2} s(\\Delta)^3 - \\frac{1}{4} s(\\Delta)^4$，这极大地简化了计算。问题简化为求解步长 $s(\\Delta)$。\n\n### 步骤 3：确定步长 $s(\\Delta)$\n\n步长 $s(\\Delta)$ 定义为在信赖域约束 $|s| \\le \\Delta$ 下，沿最速下降方向 $-g_{\\alpha}$ 的模型 $m(s)$ 的最小化子。\n设步长形式为 $s = \\tau \\cdot \\operatorname{dir}$，其中 $\\tau \\ge 0$ 是步长大小，$\\operatorname{dir} = -\\frac{g_{\\alpha}}{|g_{\\alpha}|} = -\\operatorname{sgn}(g_{\\alpha})$ 是单位方向。约束变为 $\\tau \\le \\Delta$。\n\n我们将 $s = -\\tau \\operatorname{sgn}(g_{\\alpha})$ 代入模型。由于 $g_{\\alpha} s = -\\tau |g_{\\alpha}|$，模型变为关于 $\\tau$ 的函数：\n$m(\\tau) = f_{\\alpha}(x_k) - |g_{\\alpha}|\\tau + \\frac{1}{2} B_{\\alpha} \\tau^2$。\n\n我们需要在区间 $[0, \\Delta]$ 上最小化这个关于 $\\tau$ 的二次函数。我们根据曲率 $B_{\\alpha}$ 的符号分两种情况进行分析。\n\n**情况 1：凸模型 ($B_{\\alpha}  0$)**\n该模型是一个开口向上的凸抛物线。通过将关于 $\\tau$ 的导数设为零，可以找到无约束的最小值：\n$m'(\\tau) = -|g_{\\alpha}| + B_{\\alpha}\\tau = 0 \\implies \\tau_{unc} = \\frac{|g_{\\alpha}|}{B_{\\alpha}}$。\n信赖域内的最小化子是通过将该点投影到可行区间 $[0, \\Delta]$ 上找到的：\n$\\tau_{opt} = \\min(\\tau_{unc}, \\Delta) = \\min\\left(\\frac{|g_{\\alpha}|}{B_{\\alpha}}, \\Delta\\right)$。\n\n**情况 2：凹模型或线性模型 ($B_{\\alpha} \\le 0$)**\n函数 $m(\\tau)$ 是一个开口向下的抛物线，或者是一条斜率为负的直线（因为对于所有测试用例，$g_{\\alpha}$ 均不为零）。无论哪种情况，$m(\\tau)$ 在 $[0, \\infty)$ 上都是一个递减函数。为了在 $[0, \\Delta]$ 上最小化 $m(\\tau)$，我们必须选择 $\\tau$ 的最大可能值。\n$\\tau_{opt} = \\Delta$。\n\n一旦确定了 $\\tau_{opt}$，步长就计算为 $s(\\Delta) = \\tau_{opt} \\cdot (-\\operatorname{sgn}(g_{\\alpha}))$。\n\n### 步骤 4：最终计算算法\n\n对于指定测试套件中的每一对 $(\\alpha, \\Delta)$，我们执行以下计算：\n1.  计算 $g_{\\alpha} = 0.225 - 0.5\\alpha$。\n2.  计算 $B_{\\alpha} = 0.75 - \\alpha$。\n3.  确定最优步长大小 $\\tau_{opt}$：\n    - 如果 $B_{\\alpha}  0$，计算 $\\tau_{opt} = \\min(|g_{\\alpha}|/B_{\\alpha}, \\Delta)$。\n    - 如果 $B_{\\alpha} \\le 0$，设置 $\\tau_{opt} = \\Delta$。\n4.  计算步长 $s(\\Delta) = \\tau_{opt} \\cdot (-\\operatorname{sgn}(g_{\\alpha}))$。注意，对于 $g_{\\alpha}=0$ 的情况，这将正确地得到 $s=0$。\n5.  计算差值 $D(\\Delta) = -0.5 s(\\Delta)^3 - 0.25 s(\\Delta)^4$。\n6.  将当前 $\\alpha$ 的结果 $D(\\Delta)$ 收集到一个列表中。\n7.  在遍历所有 $\\Delta$ 值之后，将此列表附加到最终的列表的列表中。然后对所有指定的 $\\alpha$ 值实施此过程以生成最终输出。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the trust-region subproblem for a parameterized quartic polynomial\n    and computes the difference between actual and predicted reduction.\n    \"\"\"\n    \n    # Test Suite Specification\n    alphas = [0.0, 0.5, 0.75, 1.0, 2.0]\n    deltas = [0.01, 0.1, 0.3, 0.5]\n    \n    # Fixed parameters\n    x_k = 0.5\n    beta = 0.1\n    \n    # This list will hold lists of results, one for each alpha.\n    all_results = []\n    \n    for alpha in alphas:\n        # This list will hold the results for the current alpha over all deltas.\n        results_for_alpha = []\n        \n        # Step 1: Compute gradient g_alpha and Hessian B_alpha at x_k\n        # g_alpha = f'(x_k) = x_k^3 - alpha*x_k + beta\n        g_alpha = x_k**3 - alpha * x_k + beta\n        # B_alpha = f''(x_k) = 3*x_k^2 - alpha\n        B_alpha = 3 * x_k**2 - alpha\n        \n        for delta in deltas:\n            # Step 2: Determine the optimal step s(delta)\n            \n            # The minimization is along the steepest descent direction -g_alpha.\n            # We solve for the step length tau_opt along this direction.\n            # The model along this direction is m(tau) = c - |g_alpha|*tau + 0.5*B_alpha*tau^2.\n            \n            tau_opt = 0.0\n\n            if B_alpha  0:\n                # Convex case: The unconstrained minimizer is at tau_unc = |g_alpha| / B_alpha.\n                # The constrained solution is the minimum of this and the trust-region radius.\n                if g_alpha != 0:\n                    tau_unc = abs(g_alpha) / B_alpha\n                    tau_opt = min(tau_unc, delta)\n                else:\n                    # If gradient is zero, step is zero.\n                    tau_opt = 0.0\n\n            else: # B_alpha = 0\n                # Concave or linear case: The model decreases along the ray.\n                # The minimum is at the trust-region boundary.\n                tau_opt = delta\n                \n            # Compute the step vector s. The direction is -g_alpha.\n            # The sign of the step is -sign(g_alpha).\n            # np.sign(0) is 0, correctly handling the g_alpha=0 case.\n            step_s = tau_opt * (-np.sign(g_alpha))\n            \n            # Step 3: Compute the difference D(delta) = AR - PR = m(s) - f(x_k + s)\n            # As derived, D(delta) = -0.5 * s^3 - 0.25 * s^4.\n            diff_D = -0.5 * step_s**3 - 0.25 * step_s**4\n            results_for_alpha.append(diff_D)\n            \n        all_results.append(results_for_alpha)\n\n    # Final Output Specification\n    # Format: [[d_0,0, d_0,1, ...], [d_1,0, ...], ...]\n    # Using a list comprehension to format numbers without trailing '.0'\n    formatted_results = [\n        \"[\" + \",\".join(map(str, inner_list)) + \"]\"\n        for inner_list in all_results\n    ]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "3193707"}, {"introduction": "模型的准确性直接影响算法的后续决策，尤其是信赖域半径的更新。实际下降量与预测下降量的比值 $\\rho_k$ 是一个关键的反馈信号，它告诉算法当前的模型是否可靠。当模型与真实函数存在系统性偏差时，$\\rho_k$ 值可能会剧烈振荡，导致算法在“扩大半径”和“缩小半径”之间反复横跳，严重影响收敛效率。本练习 [@problem_id:3193702] 构建了这样一个场景，让你分析这种动态不稳定性，并思考如何通过调整算法的控制参数来稳定半径的更新，从而将对模型质量的理解与算法的整体性能表现联系起来。", "problem": "考虑将一维信赖域方法 (TRM) 应用于一个基于模型的非线性目标函数。设目标函数为三次多项式 $$f(x) = \\frac{1}{2} a x^{2} + \\beta x^{3},$$ 其参数满足 $$a  0 \\quad \\text{and} \\quad \\beta  0.$$ 在第 $$k$$ 次迭代时，算法构建一个二次模型 $$m_{k}(s) = f(x_{k}) + g_{k}^{\\text{mod}} s + \\frac{1}{2} a s^{2},$$ 其中 $$g_{k}^{\\text{mod}} = a x_{k}$$ 是一个忽略了目标函数中三次项的模型梯度。信赖域步长被选择为沿模型最速下降方向并饱和信赖域球，即 $$s_{k} = - \\delta_{k} \\,\\mathrm{sign}\\!\\left(g_{k}^{\\text{mod}}\\right),$$ 其中 $$\\delta_{k}  0$$ 是当前的信赖域半径。\n\n信赖域比率由实际下降量与预测下降量的比较定义为 $$\\rho_{k} = \\frac{f(x_{k}) - f(x_{k} + s_{k})}{m_{k}(0) - m_{k}(s_{k})}.$$ 假设 $$x_{0}  0,$$ 阈值满足 $$0  \\eta_{1}  \\eta_{2}  1,$$ 并且信赖域半径更新规则是标准的三向规则：若 $$\\rho_{k}  \\eta_{1}$$，则 $$\\delta_{k+1} = \\gamma_{\\mathrm{dec}} \\,\\delta_{k}$$，其中 $$0  \\gamma_{\\mathrm{dec}}  1;$$ 若 $$\\eta_{1} \\le \\rho_{k}  \\eta_{2}$$，则 $$\\delta_{k+1} = \\delta_{k};$$ 若 $$\\rho_{k} \\ge \\eta_{2}$$，则 $$\\delta_{k+1} = \\min\\!\\left(\\gamma_{\\mathrm{inc}} \\,\\delta_{k}, \\Delta_{\\max}\\right)$$，其中给定 $$\\gamma_{\\mathrm{inc}}  1$$ 和 $$\\Delta_{\\max}  0$$。\n\n从这些定义出发，完成以下任务：\n\n1. 使用上述定义和 $$f$$ 的结构，推导 $$\\rho_{k}$$ 关于 $$a,$$ $$\\beta,$$ $$x_{k},$$ 和 $$\\delta_{k}$$ 的表达式，并证明当 $$s_{k}$$ 的符号在迭代中交替变化时，$$\\rho_{k}$$ 在 $$\\rho_{\\mathrm{high}} = 1 + c$$ 和 $$\\rho_{\\mathrm{low}} = 1 - c$$ 这两种形式的值之间振荡，其中 $$c  0$$ 由 $$a,$$ $$\\beta,$$ $$x_{k},$$ 和 $$\\delta_{k}$$ 给出。\n\n2. 假设对于选定的 $$a,$$ $$\\beta,$$ 初始值 $$x_{0},$$ 和初始值 $$\\delta_{0},$$ 振荡满足 $$\\rho_{\\mathrm{low}}  \\eta_{1}$$ 和 $$\\rho_{\\mathrm{high}} \\ge \\eta_{2},$$ 因此算法会交替地收缩和扩大信赖域半径：先是 $$\\delta_{k+1} = \\gamma_{\\mathrm{dec}} \\,\\delta_{k}$$，然后是 $$\\delta_{k+2} = \\gamma_{\\mathrm{inc}} \\,\\delta_{k+1}.$$ 为了在两次交替迭代中稳定半径的大小，要求每当 $$\\rho_{k}$$ 继续以这种方式交替时，都有 $$\\delta_{k+2} = \\delta_{k}$$。在此稳定化要求下，计算 $$\\gamma_{\\mathrm{inc}}^{\\ast}$$ 关于 $$\\gamma_{\\mathrm{dec}}$$ 的值。然后，在 $$\\gamma_{\\mathrm{dec}} = 0.5$$ 的特定情况下，计算 $$\\gamma_{\\mathrm{inc}}^{\\ast}$$ 的值。\n\n将您的最终答案表示为单个数字。无需四舍五入。", "solution": "该问题被评估为有效。这是一个数值优化领域中定义明确的问题，其基础是对信赖域方法的标准分析。所有定义都清晰，前提在数学和科学上都是合理的。\n\n解决方案按要求分为两部分呈现。\n\n### 第 1 部分：信赖域比率的推导及其振荡\n\n信赖域比率 $\\rho_{k}$ 定义为目标函数的实际下降量与模型预测的下降量之比：\n$$\n\\rho_{k} = \\frac{\\text{ared}_{k}}{\\text{pred}_{k}} = \\frac{f(x_{k}) - f(x_{k} + s_{k})}{m_{k}(0) - m_{k}(s_{k})}\n$$\n我们首先计算预测下降量 $\\text{pred}_{k}$。模型由 $m_{k}(s) = f(x_{k}) + g_{k}^{\\text{mod}} s + \\frac{1}{2} a s^{2}$ 给出，其中 $m_{k}(0) = f(x_{k})$。\n$$\n\\text{pred}_{k} = m_{k}(0) - m_{k}(s_{k}) = -g_{k}^{\\text{mod}} s_{k} - \\frac{1}{2} a s_{k}^{2}\n$$\n模型梯度是 $g_{k}^{\\text{mod}} = a x_{k}$，步长是 $s_{k} = - \\delta_{k} \\,\\mathrm{sign}(g_{k}^{\\text{mod}})$。由于 $a  0$，因此 $\\mathrm{sign}(g_{k}^{\\text{mod}}) = \\mathrm{sign}(a x_{k}) = \\mathrm{sign}(x_{k})$。因此，$s_{k} = - \\delta_{k} \\,\\mathrm{sign}(x_{k})$。\n将这些代入 $\\text{pred}_{k}$ 的表达式中：\n$$\n\\text{pred}_{k} = -(a x_{k})(-\\delta_{k} \\,\\mathrm{sign}(x_{k})) - \\frac{1}{2} a (-\\delta_{k} \\,\\mathrm{sign}(x_{k}))^{2}\n$$\n使用性质 $x_{k} \\mathrm{sign}(x_{k}) = |x_{k}|$，可简化为：\n$$\n\\text{pred}_{k} = a \\delta_{k} |x_{k}| - \\frac{1}{2} a \\delta_{k}^{2} = a \\delta_{k} \\left(|x_{k}| - \\frac{\\delta_{k}}{2}\\right)\n$$\n为使预测下降量为正（一个有意义的下降步长的必要条件），我们必须有 $|x_{k}|  \\frac{\\delta_{k}}{2}$。\n\n接下来，我们计算实际下降量 $\\text{ared}_{k}$。目标函数是 $f(x) = \\frac{1}{2} a x^{2} + \\beta x^{3}$。\n$$\n\\text{ared}_{k} = f(x_{k}) - f(x_{k} + s_{k}) = \\left(\\frac{1}{2} a x_{k}^{2} + \\beta x_{k}^{3}\\right) - \\left(\\frac{1}{2} a (x_{k} + s_{k})^{2} + \\beta (x_{k} + s_{k})^{3}\\right)\n$$\n展开各项：\n$$\nf(x_{k} + s_{k}) = \\frac{1}{2} a (x_{k}^{2} + 2x_{k}s_{k} + s_{k}^{2}) + \\beta (x_{k}^{3} + 3x_{k}^{2}s_{k} + 3x_{k}s_{k}^{2} + s_{k}^{3})\n$$\n$$\nf(x_{k} + s_{k}) = \\left(\\frac{1}{2} a x_{k}^{2} + \\beta x_{k}^{3}\\right) + (a x_{k} s_{k} + \\frac{1}{2} a s_{k}^{2}) + (3\\beta x_{k}^{2} s_{k} + 3\\beta x_{k} s_{k}^{2} + \\beta s_{k}^{3})\n$$\n因此，实际下降量是：\n$$\n\\text{ared}_{k} = - (a x_{k} s_{k} + \\frac{1}{2} a s_{k}^{2}) - (3\\beta x_{k}^{2} s_{k} + 3\\beta x_{k} s_{k}^{2} + \\beta s_{k}^{3})\n$$\n第一项恰好是 $\\text{pred}_{k} = -g_{k}^{\\text{mod}} s_{k} - \\frac{1}{2} a s_{k}^{2}$。所以我们可以写成：\n$$\n\\text{ared}_{k} = \\text{pred}_{k} - (3\\beta x_{k}^{2} s_{k} + 3\\beta x_{k} s_{k}^{2} + \\beta s_{k}^{3})\n$$\n现在，我们可以表示 $\\rho_{k}$：\n$$\n\\rho_{k} = \\frac{\\text{ared}_{k}}{\\text{pred}_{k}} = 1 - \\frac{3\\beta x_{k}^{2} s_{k} + 3\\beta x_{k} s_{k}^{2} + \\beta s_{k}^{3}}{\\text{pred}_{k}}\n$$\n我们来分析分数的分子。设其为 $N_k = 3\\beta x_{k}^{2} s_{k} + 3\\beta x_{k} s_{k}^{2} + \\beta s_{k}^{3}$。代入 $s_{k} = - \\delta_{k} \\,\\mathrm{sign}(x_{k})$：\n$$\nN_k = 3\\beta x_{k}^{2} (-\\delta_{k}\\mathrm{sign}(x_{k})) + 3\\beta x_{k} (-\\delta_{k}\\mathrm{sign}(x_{k}))^{2} + \\beta (-\\delta_{k}\\mathrm{sign}(x_{k}))^{3}\n$$\n$$\nN_k = -3\\beta \\delta_{k} x_{k}^{2} \\mathrm{sign}(x_{k}) + 3\\beta \\delta_{k}^{2} x_{k} - \\beta \\delta_{k}^{3} (\\mathrm{sign}(x_{k}))^{3}\n$$\n使用 $(\\mathrm{sign}(x_{k}))^{3} = \\mathrm{sign}(x_{k})$ 并提出因子 $-\\delta_{k}\\mathrm{sign}(x_{k})$：\n$$\nN_k = -\\delta_{k}\\mathrm{sign}(x_{k}) \\left( 3\\beta x_{k}^{2} - 3\\beta \\delta_{k} x_{k} \\mathrm{sign}(x_{k}) + \\beta \\delta_{k}^{2} \\right)\n$$\n使用 $x_{k} \\mathrm{sign}(x_{k}) = |x_{k}|$ 和 $x_{k}^{2} = |x_{k}|^{2}$：\n$$\nN_k = -\\delta_{k}\\mathrm{sign}(x_{k}) \\left( 3\\beta |x_{k}|^{2} - 3\\beta \\delta_{k} |x_{k}| + \\beta \\delta_{k}^{2} \\right)\n$$\n$\\rho_k$ 表达式中的比率则为：\n$$\n\\frac{N_k}{\\text{pred}_{k}} = \\frac{-\\delta_{k}\\mathrm{sign}(x_{k}) \\beta \\left( 3|x_{k}|^{2} - 3\\delta_{k} |x_{k}| + \\delta_{k}^{2} \\right)}{a \\delta_{k} \\left(|x_{k}| - \\frac{\\delta_{k}}{2}\\right)} = - \\mathrm{sign}(x_{k}) \\frac{\\beta \\left( 3|x_{k}|^{2} - 3\\delta_{k} |x_{k}| + \\delta_{k}^{2} \\right)}{a \\left(|x_{k}| - \\frac{\\delta_{k}}{2}\\right)}\n$$\n我们定义项 $c_{k}$：\n$$\nc_{k} = \\frac{\\beta \\left( 3|x_{k}|^{2} - 3\\delta_{k} |x_{k}| + \\delta_{k}^{2} \\right)}{a \\left(|x_{k}| - \\frac{\\delta_{k}}{2}\\right)}\n$$\n$c_k$ 的分子是关于 $|x_k|$ 的二次式，$3\\beta u^2 - (3\\beta\\delta_k)u + \\beta\\delta_k^2$。其判别式为 $(3\\beta\\delta_k)^2 - 4(3\\beta)(\\beta\\delta_k^2) = 9\\beta^2\\delta_k^2 - 12\\beta^2\\delta_k^2 = -3\\beta^2\\delta_k^2  0$。由于首项系数 $3\\beta$ 为正，该分子恒为正。分母由条件 $\\text{pred}_{k}  0$ 可知为正。因此，$c_{k}  0$。\n\n代回到 $\\rho_{k}$ 的表达式中：\n$$\n\\rho_{k} = 1 - (- \\mathrm{sign}(x_{k}) c_{k}) = 1 + \\mathrm{sign}(x_{k}) c_{k}\n$$\n问题陈述 $s_{k}$ 的符号是交替的。由于 $s_{k} = -\\delta_{k}\\mathrm{sign}(x_{k})$，这意味着 $x_k$ 的符号在迭代之间交替。\n- 如果 $x_{k}  0$，则 $\\mathrm{sign}(x_{k}) = 1$，且 $\\rho_{k} = 1 + c_{k}$。这会是 $\\rho_{\\mathrm{high}}$。\n- 如果 $x_{k}  0$，则 $\\mathrm{sign}(x_{k}) = -1$，且 $\\rho_{k} = 1 - c_{k}$。这会是 $\\rho_{\\mathrm{low}}$。\n\n看来我最初的分配是反的。让我们重新检查一下 $\\rho_k = 1 - (N_k/\\text{pred}_k)$ 的表达式。啊，一个符号错误。$\\rho_{k} = 1 - \\frac{N_k}{\\text{pred}_{k}} = 1 - \\left(- \\mathrm{sign}(x_{k}) c_{k}\\right) = 1 + \\mathrm{sign}(x_k) c_k$。这是正确的。\n\n让我们检查一下问题陈述的逻辑。`ρ_high = 1 + c` 和 `ρ_low = 1 - c`。这意味着 $c_k$ 是常数，$c_k = c$。在这两个值之间振荡需要 $x_k$ 的符号交替变化。\n- 如果 $x_k  0$，则 $\\mathrm{sign}(x_k) = 1 \\implies \\rho_k = 1+c_k$。这是 $\\rho_{\\mathrm{high}}$。\n- 如果 $x_k  0$，则 $\\mathrm{sign}(x_k) = -1 \\implies \\rho_k = 1-c_k$。这是 $\\rho_{\\mathrm{low}}$。\n\n这表明，当 $x_k$（因此是 $s_k$）的符号交替时，$\\rho_k$ 会在一个大于 1 的值和一个小于 1 的值之间振荡，对应于 $1+c$ 和 $1-c$ 的形式，其中 $c$ 是正量 $c_k$。这完成了证明的第一部分。\n\n### 第 2 部分：信赖域半径的稳定化\n\n问题的第二部分建立了一个基于上述推导的振荡场景。\n假设振荡满足：\n1.  一次迭代产生 $\\rho_k = \\rho_{\\mathrm{low}}  \\eta_1$。根据更新规则，算法收缩信赖域半径：$\\delta_{k+1} = \\gamma_{\\mathrm{dec}} \\delta_k$。\n2.  下一次迭代产生 $\\rho_{k+1} = \\rho_{\\mathrm{high}} \\ge \\eta_2$。根据更新规则，算法扩大信赖域半径：$\\delta_{k+2} = \\gamma_{\\mathrm{inc}} \\delta_{k+1}$。我们假设扩大不受 $\\Delta_{\\max}$ 的限制。\n\n这就为信赖域半径建立了一个两步循环：\n$$\n\\delta_{k+1} = \\gamma_{\\mathrm{dec}} \\delta_{k}\n$$\n$$\n\\delta_{k+2} = \\gamma_{\\mathrm{inc}} \\delta_{k+1}\n$$\n我们可以结合这两个方程来关联 $\\delta_{k+2}$ 和 $\\delta_{k}$：\n$$\n\\delta_{k+2} = \\gamma_{\\mathrm{inc}} (\\gamma_{\\mathrm{dec}} \\delta_{k}) = (\\gamma_{\\mathrm{inc}} \\gamma_{\\mathrm{dec}}) \\delta_{k}\n$$\n问题接着施加了一个稳定化要求，即半径的大小在这个两步迭代周期内是稳定的。这表示为：\n$$\n\\delta_{k+2} = \\delta_{k}\n$$\n将此要求代入我们合并的方程中：\n$$\n\\delta_{k} = (\\gamma_{\\mathrm{inc}}^{\\ast} \\gamma_{\\mathrm{dec}}) \\delta_{k}\n$$\n由于 $\\delta_k  0$，我们可以将两边同时除以 $\\delta_k$：\n$$\n1 = \\gamma_{\\mathrm{inc}}^{\\ast} \\gamma_{\\mathrm{dec}}\n$$\n求解所需的扩大因子 $\\gamma_{\\mathrm{inc}}^{\\ast}$：\n$$\n\\gamma_{\\mathrm{inc}}^{\\ast} = \\frac{1}{\\gamma_{\\mathrm{dec}}}\n$$\n最后，我们被要求在 $\\gamma_{\\mathrm{dec}} = 0.5$ 的特定情况下计算此表达式的值。\n$$\n\\gamma_{\\mathrm{inc}}^{\\ast} = \\frac{1}{0.5} = 2\n$$\n$\\gamma_{\\mathrm{inc}}^{\\ast}$ 的值为 2。该值与约束条件 $\\gamma_{\\mathrm{inc}}  1$ 一致。", "answer": "$$\n\\boxed{2}\n$$", "id": "3193702"}]}