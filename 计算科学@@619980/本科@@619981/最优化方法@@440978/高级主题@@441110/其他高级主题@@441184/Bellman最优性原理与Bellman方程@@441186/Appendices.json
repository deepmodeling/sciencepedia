{"hands_on_practices": [{"introduction": "动态规划的威力取决于马尔可夫属性，即未来只依赖于当前状态。但当成本函数包含“转换成本”时（例如改变控制策略的代价），这个属性就被打破了。本练习将引导你通过“状态增强”这一核心技巧，将一个非马尔可夫问题转化为标准的动态规划模型，并探讨这种模型变换对计算复杂度的影响 [@problem_id:3101515]。", "problem": "考虑一个时间索引为 $t \\in \\{0,1,2\\}$ 的有限期确定性离散时间控制问题。状态为 $x_t \\in \\mathbb{R}$，控制为 $u_t \\in \\mathcal{U}$，其中 $\\mathcal{U} = \\{-1, 0, 1\\}$。动态方程由 $x_{t+1} = x_t + u_t$ 给出。在时间 $t \\in \\{0,1\\}$ 的阶段成本为\n$$\n\\ell(x_t,u_t,u_{t-1}) = x_t^2 + u_t^2 + k \\,\\mathbf{1}\\{u_t \\neq u_{t-1}\\},\n$$\n其中 $k > 0$ 是一个给定的常数，$\\mathbf{1}\\{\\cdot\\}$ 是指示函数。在时间 $t = 2$ 的终端成本为零。\n\n- 解释为什么在有切换惩罚 $k \\,\\mathbf{1}\\{u_t \\neq u_{t-1}\\}$ 的情况下，仅以状态 $x_t$ 描述的过程不具有马尔可夫性，并定义一个增广状态 $s_t = (x_t, u_{t-1})$ 来恢复马尔可夫性。使用最优性原理，为价值函数 $V_t(x,\\bar{u})$ 在整个时域 $t \\in \\{0,1,2\\}$ 上构建动态规划递推（贝尔曼方程）。\n\n- 对于 $k = 1$、初始状态 $x_0 = 1$、初始前一控制 $u_{-1} = 0$ 的具体实例，计算最优总未来成本 $V_0(1,0)$。\n\n- 简要讨论在对 $x$ 空间进行大小为 $|\\mathcal{X}|$ 的离散化假设下，将前一控制增广到状态中对每次动态规划（DP）回溯所需评估的状态数量的计算影响。\n\n你的最终数值答案应该是指定实例的最优总成本 $V_0(1,0)$。无需四舍五入。", "solution": "这是一个确定性的有限期最优控制问题。其求解需要通过动态规划应用最优性原理。分析将按要求分为三个部分进行。\n\n首先，我们讨论该问题的非马尔可夫性，并构建适当的动态规划递推。\n如果一个随机过程的未来状态的条件概率分布在给定当前和过去状态的情况下，仅取决于当前状态，那么该过程是马尔可夫的。在最优控制的背景下，如果时刻 $t$ 的最优控制仅取决于当前状态 $x_t$，则决策过程是马尔可夫的。需要最小化的总成本是阶段成本之和，即 $\\sum_{t=0}^{1} \\ell(x_t, u_t, u_{t-1})$。在时刻 $t$ 的阶段成本 $\\ell(x_t, u_t, u_{t-1}) = x_t^2 + u_t^2 + k \\,\\mathbf{1}\\{u_t \\neq u_{t-1}\\}$ 明确地依赖于前一个控制 $u_{t-1}$。为了选择最优控制 $u_t$，决策者在时刻 $t$ 必须同时知道状态 $x_t$ 和前一个控制 $u_{t-1}$，才能正确评估切换惩罚。由于 $u_{t-1}$ 不属于状态 $x_t$ 的一部分，仅凭 $x_t$ 中包含的信息不足以为未来做出最优决策。因此，以状态 $x_t$ 描述的决策过程不是马尔可夫的。\n\n为了恢复马尔可夫性，我们必须增广状态以包含决策所需的所有信息。我们为 $t \\in \\{0, 1, 2\\}$ 定义一个增广状态 $s_t = (x_t, u_{t-1})$。根据这个定义，时刻 $t$ 的状态是 $s_t = (x_t, u_{t-1})$，控制是 $u_t$。状态转移由 $s_{t+1} = (x_{t+1}, u_t) = (x_t + u_t, u_t)$ 给出。新状态 $s_{t+1}$ 仅取决于当前状态 $s_t$ 和当前控制 $u_t$。阶段成本 $\\ell(x_t, u_t, u_{t-1})$ 可以写成一个函数 $\\tilde{\\ell}(s_t, u_t)$，它仅依赖于增广状态和控制。这种结构确保了该过程是一个马尔可夫决策过程。\n\n价值函数 $V_t(s_t)$ 表示在时刻 $t$ 从状态 $s_t$ 出发的最优未来成本。我们将其写为 $V_t(x_t, u_{t-1})$。根据最优性原理推导出的贝尔曼方程为：\n$$V_t(x_t, u_{t-1}) = \\min_{u_t \\in \\mathcal{U}} \\left\\{ \\ell(x_t, u_t, u_{t-1}) + V_{t+1}(x_{t+1}, u_t) \\right\\}$$\n代入问题的具体细节，对于 $t \\in \\{0, 1\\}$，递推关系为：\n$$V_t(x_t, u_{t-1}) = \\min_{u_t \\in \\{-1, 0, 1\\}} \\left\\{ x_t^2 + u_t^2 + k \\, \\mathbf{1}\\{u_t \\neq u_{t-1}\\} + V_{t+1}(x_t + u_t, u_t) \\right\\}$$\n终端条件是在时间 $t=2$ 的成本为零，这意味着对于所有可能的 $x_2$ 和 $u_1$，$V_2(x_2, u_1) = 0$。\n\n其次，我们计算在 $k=1$，$x_0=1$ 和 $u_{-1}=0$ 的具体实例下，最优成本 $V_0(1, 0)$。我们从 $t=2$ 开始逆向回溯。\n\n**时间 $t=2$**：终端价值函数给定为零。\n$$V_2(x_2, u_1) = 0$$\n\n**时间 $t=1$**：我们计算 $V_1(x_1, u_0)$。\n$$V_1(x_1, u_0) = \\min_{u_1 \\in \\{-1, 0, 1\\}} \\left\\{ x_1^2 + u_1^2 + 1 \\cdot \\mathbf{1}\\{u_1 \\neq u_0\\} + V_2(x_1 + u_1, u_1) \\right\\}$$\n由于 $V_2(\\cdot, \\cdot) = 0$，这简化为：\n$$V_1(x_1, u_0) = x_1^2 + \\min_{u_1 \\in \\{-1, 0, 1\\}} \\left\\{ u_1^2 + \\mathbf{1}\\{u_1 \\neq u_0\\} \\right\\}$$\n最小化取决于 $u_0 \\in \\{-1, 0, 1\\}$ 的值。\n- 如果 $u_0 = 0$：需要最小化的项是 $\\min \\{(-1)^2 + 1, 0^2 + 0, 1^2 + 1\\} = \\min\\{2, 0, 2\\} = 0$。因此，$V_1(x_1, 0) = x_1^2$。\n- 如果 $u_0 = 1$：需要最小化的项是 $\\min \\{(-1)^2 + 1, 0^2 + 1, 1^2 + 0\\} = \\min\\{2, 1, 1\\} = 1$。因此，$V_1(x_1, 1) = x_1^2 + 1$。\n- 如果 $u_0 = -1$：需要最小化的项是 $\\min \\{(-1)^2 + 0, 0^2 + 1, 1^2 + 1\\} = \\min\\{1, 1, 2\\} = 1$。因此，$V_1(x_1, -1) = x_1^2 + 1$。\n\n**时间 $t=0$**：我们计算 $V_0(1, 0)$。\n$$V_0(1, 0) = \\min_{u_0 \\in \\{-1, 0, 1\\}} \\left\\{ 1^2 + u_0^2 + 1 \\cdot \\mathbf{1}\\{u_0 \\neq 0\\} + V_1(1 + u_0, u_0) \\right\\}$$\n我们对每种可能的控制 $u_0$ 计算大括号中的表达式：\n- 对于 $u_0 = -1$：成本为 $1^2 + (-1)^2 + \\mathbf{1}\\{-1 \\neq 0\\} + V_1(1 - 1, -1) = 1 + 1 + 1 + V_1(0, -1)$。使用我们推导的函数，$V_1(0, -1) = 0^2 + 1 = 1$。总成本为 $1+1+1+1 = 4$。\n- 对于 $u_0 = 0$：成本为 $1^2 + 0^2 + \\mathbf{1}\\{0 \\neq 0\\} + V_1(1 + 0, 0) = 1 + 0 + 0 + V_1(1, 0)$。使用我们推导的函数，$V_1(1, 0) = 1^2 = 1$。总成本为 $1+0+0+1 = 2$。\n- 对于 $u_0 = 1$：成本为 $1^2 + 1^2 + \\mathbf{1}\\{1 \\neq 0\\} + V_1(1 + 1, 1) = 1 + 1 + 1 + V_1(2, 1)$。使用我们推导的函数，$V_1(2, 1) = 2^2 + 1 = 5$。总成本为 $1+1+1+5 = 8$。\n\n比较这三种结果，最小成本为 $2$，这在 $u_0=0$ 时发生。\n因此，$V_0(1, 0) = 2$。\n\n第三，我们讨论状态增广的计算影响。\n在典型的动态规划设置中，对于像 $\\mathbb{R}$ 这样的连续状态空间，我们必须将其离散化才能数值上应用该算法。设 $x$ 分量的离散化空间为 $\\mathcal{X}$，其大小为 $|\\mathcal{X}|$。控制空间 $\\mathcal{U}$ 已经是离散的，大小为 $|\\mathcal{U}|=3$。\n\n如果没有状态增广，（假设的、不正确的）状态空间将仅为 $\\mathcal{X}$，大小为 $|\\mathcal{X}|$。对每个状态的 DP 回溯将涉及遍历 $|\\mathcal{U}|$ 个控制。一个时间步更新的总复杂度将与 $|\\mathcal{X}| \\times |\\mathcal{U}|$ 成正比。\n\n使用增广状态 $s_t = (x_t, u_{t-1})$，状态空间变为离散化 $x$ 空间和控制空间的笛卡尔积，即 $\\mathcal{X} \\times \\mathcal{U}$。这个增广状态空间的大小是 $|\\mathcal{X}| \\times |\\mathcal{U}|$。为了计算时刻 $t$ 每个状态的价值函数，我们必须在所有可能的控制 $u_t \\in \\mathcal{U}$ 上进行最小化。因此，对于 $|\\mathcal{X}| \\times |\\mathcal{U}|$ 个状态中的每一个，我们执行 $|\\mathcal{U}|$ 次评估。一个时间步更新（一次完整的 DP 回溯）的总复杂度与 $(|\\mathcal{X}| \\times |\\mathcal{U}|) \\times |\\mathcal{U}| = |\\mathcal{X}| \\times |\\mathcal{U}|^2$ 成正比。\n\n状态增广使需要评估的状态空间大小增加了 $|\\mathcal{U}|$ 倍。因此，每次 DP 回溯的计算复杂度也增加了 $|\\mathcal{U}|$ 倍。在这个具体问题中，$|\\mathcal{U}| = 3$，所以与一个忽略了切换成本对过去行为依赖的天真（且不正确）模型相比，状态空间大小和每步计算量都增加了三倍。这是“维度灾难”的一种体现，即扩展状态向量会导致状态空间体积和计算成本的指数级增长。", "answer": "$$\n\\boxed{2}\n$$", "id": "3101515"}, {"introduction": "状态增强不仅是理论技巧，更是解决复杂约束的实用工具，如此练习中带能量补充的最短路径问题。本题要求你将能量水平作为状态的一部分，从而在经典的寻路算法中融入资源管理维度。通过这个练习，你将学会如何构建多维状态的贝尔曼方程，并探索用于削减计算量的“优势剪枝”规则 [@problem_id:3101499]。", "problem": "考虑一个有向网络，其节点为 $s$、$A$、$B$、$C$、$D$、$t$。一个代理从节点 $s$ 出发，初始能量资源为 $E_0 = 3$ 个单位，电池容量为 $E_{\\max} = 5$ 个单位。穿过一条有向弧 $(i,j)$ 会产生非负的旅行时间成本 $d_{ij}$ 并消耗能量 $c_{ij}$；代理只有在当前能量 $e$ 满足 $e \\ge c_{ij}$ 时才能穿过 $(i,j)$。一些节点设有充电站：在节点 $A$ 充满电的时间成本为 $r_A = 6$ 个单位，在节点 $C$ 充满电的时间成本为 $r_C = 3$ 个单位。在节点 $i \\in \\{A,C\\}$ 充电仅在 $e  E_{\\max}$ 时可用，并立即将能量设置为 $E_{\\max}$。所有成本都是无量纲的标量。\n\n有向弧及其旅行时间和能量消耗如下：\n- 从 $s$ 到 $A$：$d_{sA} = 4$， $c_{sA} = 2$。\n- 从 $s$ 到 $B$：$d_{sB} = 3$， $c_{sB} = 3$。\n- 从 $s$ 到 $C$：$d_{sC} = 5$， $c_{sC} = 2$。\n- 从 $A$ 到 $C$：$d_{AC} = 2$， $c_{AC} = 2$。\n- 从 $A$ 到 $D$：$d_{AD} = 5$， $c_{AD} = 4$。\n- 从 $A$ 到 $t$：$d_{At} = 9$， $c_{At} = 5$。\n- 从 $B$ 到 $C$：$d_{BC} = 1$， $c_{BC} = 2$。\n- 从 $B$ 到 $D$：$d_{BD} = 4$， $c_{BD} = 1$。\n- 从 $B$ 到 $t$：$d_{Bt} = 7$， $c_{Bt} = 4$。\n- 从 $C$ 到 $D$：$d_{CD} = 2$， $c_{CD} = 1$。\n- 从 $C$ 到 $t$：$d_{Ct} = 6$， $c_{Ct} = 4$。\n- 从 $D$ 到 $t$：$d_{Dt} = 3$， $c_{Dt} = 2$。\n\n你的任务：\n1. 使用 Bellman 最优性原理，通过资源水平来增强状态，并定义一个值函数 $V(i,e)$，表示从具有当前能量 $e \\in \\{0,1,2,3,4,5\\}$ 的节点 $i$ 到达节点 $t$ 的最小剩余旅行时间。清晰地陈述边界条件，并推导包含遍历和充电决策的 $V(i,e)$ 的 Bellman 递归式。\n2. 在前向动态规划 (DP) 标签设置解释中，分析用于标签剪枝的支配规则：给定同一节点 $i$ 上的两个标签，分别为配对 $(\\ell_1, e_1)$ 和 $(\\ell_2, e_2)$，其中 $\\ell_k$ 是到达 $i$ 的累积旅行时间， $e_k$ 是到达时的剩余能量，陈述一个标签支配另一个标签的充分条件，并使用 Bellman 最优性原理证明其合理性。使用本实例中的一个明确比较来说明该规则。\n3. 在给定约束条件下，从能量 $E_0 = 3$ 开始，假设做出最优充电决策，计算从 $s$ 到 $t$ 的最小总旅行时间。将最终答案报告为精确整数（无需四舍五入）。", "solution": "该问题是一个带资源约束（能量）的有向图上的最短路径问题。代理的状态由其当前位置（节点）和当前能量水平定义。目标是找到从源节点 $s$ 到终端节点 $t$ 的总旅行时间最短的路径。这可以用动态规划来解决。\n\n首先，我们形式化问题参数。节点集合为 $\\mathcal{V} = \\{s, A, B, C, D, t\\}$。初始能量为 $E_0 = 3$，最大能量容量为 $E_{\\max} = 5$。能量水平 $e$ 是一个整数，所以 $e \\in \\{0, 1, 2, 3, 4, 5\\}$。对于网络中的每条弧 $(i,j)$，都有一个相关的旅行时间 $d_{ij} \\ge 0$ 和能量消耗 $c_{ij} \\ge 0$。在节点 $A$ 和 $C$ 可以充电。在 $A$ 充电的时间成本是 $r_A = 6$，在 $C$ 是 $r_C = 3$。充电将能量补充到 $E_{\\max}$。\n\n### 1. Bellman 原理与递归\n\n根据 Bellman 最优性原理，最优路径的任何子路径本身也必须是最优的。为了应用此原理，我们通过代理的当前节点 $i \\in \\mathcal{V}$ 和当前能量水平 $e \\in \\{0, 1, \\dots, E_{\\max}\\}$ 来定义状态。\n\n设 $V(i, e)$ 为值函数，表示从当前状态 $(i, e)$ 到达目标节点 $t$ 的最小可能累积旅行时间。这是一个“未来成本”(cost-to-go) 函数。\n\n边界条件在目标节点 $t$ 定义。从 $t$ 到达 $t$ 的时间为 $0$，无论到达时的能量水平如何。\n$$V(t, e) = 0, \\quad \\forall e \\in \\{0, 1, 2, 3, 4, 5\\}$$\n\n对于任何其他节点 $i \\neq t$，值函数 $V(i, e)$ 是通过对从状态 $(i, e)$ 出发的所有可能行动的成本取最小值来确定的。可能的行动是移动到相邻节点或充电（如果在充电站）。\n\n设 $\\mathcal{N}(i)$ 表示存在有向弧 $(i,j)$ 的节点 $j$ 的集合。穿过弧 $(i, j)$ 的成本是旅行时间 $d_{ij}$ 与从新状态 $(j, e - c_{ij})$ 出发的最小未来成本之和。此行动仅在当前能量充足时可行，即 $e \\ge c_{ij}$。\n\nBellman 递归式可以根据节点 $i$ 的类型来构建：\n\n**情况1：节点 $i$ 不是充电站 ($i \\in \\{s, B, D\\}$)**\n唯一可能的操作是移动到相邻节点 $j \\in \\mathcal{N}(i)$。\n$$V(i, e) = \\min_{j \\in \\mathcal{N}(i) \\text{ s.t. } e \\ge c_{ij}} \\{d_{ij} + V(j, e - c_{ij})\\}$$\n如果没有这样的移动是可能的（即，可行的下一个节点集合为空），则成本为无穷大，$V(i, e) = \\infty$，因为从该状态无法到达 $t$。\n\n**情况2：节点 $i$ 是充电站 ($i \\in \\{A, C\\}$)**\n除了移动之外，代理还可以选择充电。此操作仅在 $e  E_{\\max}$ 时可用。充电需要时间 $r_i$ 并将能量水平设置为 $E_{\\max}$。随后的成本是 $V(i, E_{\\max})$。\n\n如果 $e  E_{\\max}$:\n$$V(i, e) = \\min \\left( r_i + V(i, E_{\\max}), \\quad \\min_{j \\in \\mathcal{N}(i) \\text{ s.t. } e \\ge c_{ij}} \\{d_{ij} + V(j, e - c_{ij})\\} \\right)$$\n其中对于 $i=A$，$r_i$ 是 $r_A=6$；对于 $i=C$，$r_i$ 是 $r_C=3$。\n\n如果 $e = E_{\\max}$:\n代理不能再充电。方程简化为非充电站节点的情形：\n$$V(i, E_{\\max}) = \\min_{j \\in \\mathcal{N}(i) \\text{ s.t. } E_{\\max} \\ge c_{ij}} \\{d_{ij} + V(j, E_{\\max} - c_{ij})\\}$$\n\n目标是找到从起始状态 $(s, E_0)$ 出发的最小时间，即 $V(s, 3)$。\n\n### 2. 标签剪枝的支配规则\n\n在一个前向动态规划算法中（例如为该问题改编的 Dijkstra 算法），我们从源节点 $s$ 开始探索路径。我们在每个节点维护一个非支配“标签”的集合。节点 $i$ 的一个标签是一个配对 $(\\ell, e)$，表示从 $s$ 到 $i$ 的一条路径，其总旅行时间为 $\\ell$，剩余能量为 $e$。\n\n**支配条件：**\n考虑同一节点 $i$ 上的两个标签：$L_1 = (\\ell_1, e_1)$ 和 $L_2 = (\\ell_2, e_2)$。如果标签 $L_1$ 在一个维度（成本或能量）上至少一样好，而在另一个维度上严格更好，或者在两个维度上都更好，则称 $L_1$ 支配 $L_2$。$L_1$ 支配 $L_2$ 的一个充分条件是：\n$$\\ell_1 \\le \\ell_2 \\quad \\text{和} \\quad e_1 \\ge e_2$$\n如果两个不等式都成立，且至少有一个是严格的，那么 $L_1$ 严格支配 $L_2$，并且对应于 $L_2$ 的路径可以被剪枝。\n\n**证明：**\n其证明根植于 Bellman 原理。通过产生标签 $L_k$ 的路径到达目的地 $t$ 的总时间是 $\\ell_k + V(i, e_k)$，其中 $V(i, e_k)$ 是从状态 $(i, e_k)$ 出发的最优未来成本。\n值函数 $V(i, e)$ 必须是能量 $e$ 的非增函数。这是因为拥有更多能量永远不会是劣势；它扩展了未来可行行动的集合，而在一个更广泛的选择集上取最小值只能是更小或相等，即，如果 $e_1 \\ge e_2$，那么 $V(i, e_1) \\le V(i, e_2)$。\n给定支配条件 $\\ell_1 \\le \\ell_2$ 和 $e_1 \\ge e_2$，可以得出 $V(i, e_1) \\le V(i, e_2)$。因此：\n$$\\ell_1 + V(i, e_1) \\le \\ell_2 + V(i, e_2)$$\n这意味着从 $L_1$ 所代表的状态继续前进到 $t$ 的最佳可能路径保证不会比从 $L_2$ 出发的最佳路径差。因此，$L_2$ 是多余的，可以被丢弃。\n\n**示例：**\n让我们找出从 $s$ 到节点 $D$ 的两条路径来说明支配关系。\n路径 1: $s \\to A \\to \\text{充电} \\to D$\n- $s \\to A$：到达 $A$ 时，时间 $\\ell = d_{sA} = 4$，能量 $e = 3 - c_{sA} = 3-2=1$。\n- 在 $A$ 充电：时间变为 $\\ell = 4 + r_A = 4+6=10$。能量变为 $e = E_{\\max} = 5$。\n- $A \\to D$：到达 $D$ 时，时间 $\\ell = 10 + d_{AD} = 10+5=15$，能量 $e = 5 - c_{AD} = 5-4=1$。这在节点 $D$ 产生标签 $L_1 = (15, 1)$。\n\n路径 2: $s \\to C \\to \\text{充电} \\to D$\n- $s \\to C$：到达 $C$ 时，时间 $\\ell = d_{sC} = 5$，能量 $e = 3 - c_{sC} = 3-2=1$。\n- 在 $C$ 充电：时间变为 $\\ell = 5 + r_C = 5+3=8$。能量变为 $e = E_{\\max} = 5$。\n- $C \\to D$：到达 $D$ 时，时间 $\\ell = 8 + d_{CD} = 8+2=10$，能量 $e = 5 - c_{CD} = 5-1=4$。这在节点 $D$ 产生标签 $L_2 = (10, 4)$。\n\n在节点 $D$ 比较 $L_1 = (\\ell_1=15, e_1=1)$ 和 $L_2 = (\\ell_2=10, e_2=4)$：\n我们观察到 $\\ell_2  \\ell_1$ ($10  15$) 且 $e_2 > e_1$ ($4 > 1$)。支配的两个条件都严格满足。因此，标签 $L_2$ 严格支配标签 $L_1$。对应于 $L_1$ 的路径是较差的，可以被剪枝。\n\n### 3. 最小总旅行时间的计算\n\n我们应用一个前向搜索算法（Dijkstra 算法的一个变体），从状态 $(s, 3)$ 开始，成本为 $0$。我们维护一个标签 $(\\ell, e, i)$ 的优先队列，按旅行时间 $\\ell$ 排序。\n\n1.  初始化优先队列 `PQ` 为 `(0, 3, s)`。初始化到 $t$ 的成本为 $\\infty$。\n2.  弹出 `(0, 3, s)`。\n    - $s \\to A$：可行 ($3 \\ge c_{sA}=2$)。在 $A$ 的新标签：时间 $0+4=4$，能量 $3-2=1$。推入 `(4, 1, A)`。\n    - $s \\to B$：可行 ($3 \\ge c_{sB}=3$)。在 $B$ 的新标签：时间 $0+3=3$，能量 $3-3=0$。推入 `(3, 0, B)`。\n    - $s \\to C$：可行 ($3 \\ge c_{sC}=2$)。在 $C$ 的新标签：时间 $0+5=5$，能量 $3-2=1$。推入 `(5, 1, C)`。\n3.  弹出 `(3, 0, B)`。在节点 $B$，能量为 $0$。从 $B$ 出发的所有出弧都需要大于 $0$ 的能量。此路径是死胡同。\n4.  弹出 `(4, 1, A)`。在节点 $A$，能量为 $1$。\n    - 移动：到 $C, D, t$ 的弧分别需要能量 $2, 4, 5$。均不可行。\n    - 充电：可行，因为 $1  E_{\\max}$。成本 $r_A=6$。在 $A$ 的新标签：时间 $4+6=10$，能量 $5$。推入 `(10, 5, A)`。\n5.  弹出 `(5, 1, C)`。在节点 $C$，能量为 $1$。\n    - 移动：\n        - $C \\to D$：可行 ($1 \\ge c_{CD}=1$)。在 $D$ 的新标签：时间 $5+2=7$，能量 $1-1=0$。推入 `(7, 0, D)`。\n        - $C \\to t$：不可行 ($1  c_{Ct}=4$)。\n    - 充电：可行 ($1  E_{\\max}$)。成本 $r_C=3$。在 $C$ 的新标签：时间 $5+3=8$，能量 $5$。推入 `(8, 5, C)`。\n6.  弹出 `(7, 0, D)`。在节点 $D$，能量为 $0$。\n    - 移动 $D \\to t$：不可行 ($0  c_{Dt}=2$)。死胡同。\n7.  弹出 `(8, 5, C)`。在节点 $C$，能量为 $5$。\n    - 移动：\n        - $C \\to D$：可行 ($5 \\ge c_{CD}=1$)。在 $D$ 的新标签：时间 $8+2=10$，能量 $5-1=4$。检查在 $D$ 的支配关系：当前标签为 $(7,0)$。$(10,4)$ 和 $(7,0)$ 均不支配对方。推入 `(10, 4, D)`。\n        - $C \\to t$：可行 ($5 \\ge c_{Ct}=4$)。在时间 $8+6=14$ 到达 $t$。这是一条有效路径。更新到 $t$ 的成本为 $14$。\n    - 充电：不可行（能量已满）。\n8.  弹出 `(10, 4, D)`。在节点 $D$，能量为 $4$。\n    - 移动 $D \\to t$：可行 ($4 \\ge c_{Dt}=2$)。在时间 $10+3=13$ 到达 $t$。这比之前的路径更优。更新到 $t$ 的成本为 $13$。\n9.  弹出 `(10, 5, A)`。在节点 $A$，能量为 $5$。\n    - 移动：\n        - $A \\to C$：可行 ($5 \\ge c_{AC}=2$)。在 $C$ 的新标签：时间 $10+2=12$，能量 $5-2=3$。检查在 $C$ 的支配关系：现有标签为 $(5,1)$ 和 $(8,5)$。标签 $(8,5)$ 支配 $(12,3)$ 因为 $812$ 且 $5>3$。剪枝此路径。\n        - $A \\to D$：可行 ($5 \\ge c_{AD}=4$)。在 $D$ 的新标签：时间 $10+5=15$，能量 $5-4=1$。检查在 $D$ 的支配关系：现有标签为 $(7,0)$ 和 $(10,4)$。标签 $(10,4)$ 支配 $(15,1)$ 因为 $1015$ 且 $4>1$。剪枝此路径。\n        - $A \\to t$：可行 ($5 \\ge c_{At}=5$)。在时间 $10+9=19$ 到达 $t$。这比当前最小值 $13$ 要差。忽略。\n10. 优先队列现在为空。算法终止。\n\n最小总旅行时间是 $13$。最优路径是 $s \\to C \\to \\text{在 C 充电} \\to D \\to t$。\n- $s \\to C$：时间 $5$，到达时能量为 $3-2=1$。\n- 在 $C$ 充电：时间成本 $3$，总时间为 $5+3=8$，能量为 $5$。\n- $C \\to D$：时间成本 $2$，总时间为 $8+2=10$，到达时能量为 $5-1=4$。\n- $D \\to t$：时间成本 $3$，总时间为 $10+3=13$，到达时能量为 $4-2=2$。\n总时间为 $5+3+2+3=13$。", "answer": "$$\\boxed{13}$$", "id": "3101499"}, {"introduction": "现实世界中的决策常常充满不确定性，而贝尔曼最优性原理能够优雅地处理随机性。本练习通过一个涉及“沉没成本”的商业决策场景，展示了如何在贝尔曼方程中引入期望值来应对未来的随机事件（如市场需求）。你将学习如何分阶段评估决策，并计算在不确定性下的最优期望总成本 [@problem_id:3101502]。", "problem": "考虑一个有限期、两阶段决策问题，该问题被建模为马尔可夫决策过程 (MDP)。时间由 $t \\in \\{1,2\\}$ 索引。在阶段 $t=1$ 有一个沉没成本承诺选项，该选项会不可逆地改变阶段 $t=2$ 的可用行动集合。对所需服务的单个单位的需求 $D \\in \\{0,1\\}$ 在阶段 $t=1$ 的决策之后、阶段 $t=2$ 的决策之前实现。在 $t=1$ 时的初始状态为 $s_1 = (z_1)$，其中 $z_1 = 0$ 表示尚未做出沉没成本承诺。阶段 $t=1$ 的控制 $u_1 \\in \\{\\text{commit}, \\text{not commit}\\}$ 根据以下规则演化沉没成本状态：如果 $u_1=\\text{commit}$，立即产生 $K=5$ 的沉没成本，下一阶段的状态为 $z_2=1$；如果 $u_1=\\text{not commit}$，在 $t=1$ 时不产生任何成本，下一阶段的状态为 $z_2=0$。随机需求 $D$ 独立于控制和 $z_t$，并满足 $\\mathbb{P}(D=1)=\\frac{2}{3}$ 和 $\\mathbb{P}(D=0)=\\frac{1}{3}$。\n\n在阶段 $t=2$，控制集和阶段成本取决于沉没成本状态 $z_2$ 和实现的需求 $D$：\n- 如果 $z_2=1$（在 $t=1$ 时做出了沉没成本承诺），则：\n  - 如果 $D=1$，唯一允许的行动是内部生产，阶段成本为 $c_2=4$。\n  - 如果 $D=0$，允许的行动是无所作为，阶段成本为 $c_2=0$。\n- 如果 $z_2=0$（在 $t=1$ 时未做出沉没成本承诺），则：\n  - 如果 $D=1$，允许的行动是外部购买，阶段成本为 $c_2=9$；或紧急租赁，产生设置成本 $H=3$ 和单位成本 $3$；对于 $D=1$，租赁的总阶段成本为 $H+3=6$。在 $t=2$ 的决策应在给定实现的需求下最小化阶段成本。\n  - 如果 $D=0$，允许的行动是无所作为，阶段成本为 $c_2=0$。\n\n使用贝尔曼最优性原理，将沉没成本状态视为状态的一部分。推导每个可能状态 $s_2=(z_2,D)$ 的阶段-$t=2$ 价值函数 $V_2(s_2)$，并用它来明确地写出阶段-$t=1$ 的贝尔曼方程 $V_1(s_1)$，作为对阶段-$t=1$ 控制的最小化，其中包含对 $t=2$ 时需求实现的期望。然后计算从初始状态 $s_1=(z_1=0)$ 开始的最优期望总成本。\n\n请将您的最终答案表示为单个精确的实数。无需四舍五入，答案不带单位。", "solution": "用户提供了一个有效的问题陈述。该问题是一个有限期动态规划问题，可以建模为马尔可夫决策过程 (MDP)。目标是找到从给定初始状态开始的最优期望总成本。我们将根据贝尔曼最优性原理的要求，使用逆向归纳法来解决这个问题。\n\n问题涉及两个阶段，由 $t \\in \\{1, 2\\}$ 索引。\n阶段 $t=1$ 的状态是 $s_1 = (z_1)$，其中 $z_1 \\in \\{0, 1\\}$ 代表沉没成本承诺状态。给定的初始状态是 $s_1 = (z_1=0)$。\n阶段 $t=1$ 的行动是 $u_1 \\in \\{\\text{commit}, \\text{not commit}\\}$。\n阶段 $t=2$ 的状态是 $s_2 = (z_2, D)$，其中 $z_2 \\in \\{0, 1\\}$ 由行动 $u_1$ 决定，而 $D \\in \\{0, 1\\}$ 是一个随机需求变量，其概率为 $\\mathbb{P}(D=1) = \\frac{2}{3}$ 和 $\\mathbb{P}(D=0) = \\frac{1}{3}$。\n\n求解过程首先分析最后阶段 ($t=2$)，然后逆向回溯到初始阶段 ($t=1$)。\n\n**阶段 $t=2$ 分析：价值函数 $V_2(s_2)$ 的推导**\n\n阶段 $t=2$ 的价值函数，记作 $V_2(s_2)$，是从状态 $s_2$ 到期末所产生的最小成本。由于阶段 2 是终点阶段，$V_2(s_2)$ 仅为此阶段可能的最小成本，由 $V_2(s_2) = \\min_{u_2} c_2(s_2, u_2)$ 给出，其中 $c_2$ 是阶段 2 的成本。我们必须对所有可能的状态 $s_2=(z_2, D)$ 计算该值。\n\n1.  状态 $s_2 = (z_2=1, D=1)$：已做出沉没成本承诺 ($z_2=1$) 且需求高 ($D=1$) 。\n    唯一允许的行动是“内部生产”，成本为 $c_2=4$。\n    因此，此状态的价值函数为 $V_2(1,1) = 4$。\n\n2.  状态 $s_2 = (z_2=1, D=0)$：已做出沉没成本承诺 ($z_2=1$) 且需求低 ($D=0$) 。\n    唯一允许的行动是“无所作为”，成本为 $c_2=0$。\n    因此，此状态的价值函数为 $V_2(1,0) = 0$。\n\n3.  状态 $s_2 = (z_2=0, D=1)$：未做出沉没成本承诺 ($z_2=0$) 且需求高 ($D=1$) 。\n    允许的行动是“外部购买”，成本为 $c_2=9$，或“紧急租赁”，成本为 $H+3=6$。\n    问题规定所做决策应最小化阶段成本。\n    因此，产生的成本为 $\\min\\{9, 6\\} = 6$。\n    因此，此状态的价值函数为 $V_2(0,1) = 6$。\n\n4.  状态 $s_2 = (z_2=0, D=0)$：未做出沉没成本承诺 ($z_2=0$) 且需求低 ($D=0$) 。\n    唯一允许的行动是“无所作为”，成本为 $c_2=0$。\n    因此，此状态的价值函数为 $V_2(0,0) = 0$。\n\n总而言之，阶段 2 的价值函数为：\n$$ V_2(z_2, D) = \\begin{cases} 4  \\text{if } z_2=1, D=1 \\\\ 0  \\text{if } z_2=1, D=0 \\\\ 6  \\text{if } z_2=0, D=1 \\\\ 0  \\text{if } z_2=0, D=0 \\end{cases} $$\n\n**阶段 $t=1$ 分析：贝尔曼方程和最优成本**\n\n现在我们回溯到阶段 $t=1$。初始状态为 $s_1=(z_1=0)$。价值函数 $V_1(s_1)$ 的贝尔曼方程为：\n$$V_1(s_1) = \\min_{u_1 \\in A_1(s_1)} \\left\\{ c_1(s_1, u_1) + \\mathbb{E}_{D}[V_2(s_2(s_1, u_1, D))] \\right\\}$$\n其中 $c_1(s_1, u_1)$ 是行动 $u_1$ 的即时成本，期望是关于随机需求 $D$ 的。在 $s_1=(z_1=0)$ 时的行动集是 $A_1(0) = \\{\\text{commit}, \\text{not commit}\\}$。\n\n我们对每个可能的行动 $u_1$ 评估总期望成本：\n\n**情况 1：$u_1 = \\text{commit}$**\n- 即时成本是沉没成本，$c_1((z_1=0), \\text{commit}) = K = 5$。\n- 该行动将下一阶段的沉没成本状态设置为 $z_2=1$。\n- 期望未来成本是 $V_2(1, D)$ 在需求 $D$ 上的期望值：\n$$ \\mathbb{E}_{D}[V_2(1, D)] = V_2(1,1) \\cdot \\mathbb{P}(D=1) + V_2(1,0) \\cdot \\mathbb{P}(D=0) $$\n$$ \\mathbb{E}_{D}[V_2(1, D)] = (4) \\cdot \\left(\\frac{2}{3}\\right) + (0) \\cdot \\left(\\frac{1}{3}\\right) = \\frac{8}{3} $$\n- 此行动的总期望成本是即时成本和期望未来成本的总和：\n$$ \\text{Cost}(\\text{commit}) = 5 + \\frac{8}{3} = \\frac{15}{3} + \\frac{8}{3} = \\frac{23}{3} $$\n\n**情况 2：$u_1 = \\text{not commit}$**\n- 即时成本为 $c_1((z_1=0), \\text{not commit}) = 0$。\n- 该行动将下一阶段的沉没成本状态设置为 $z_2=0$。\n- 期望未来成本是 $V_2(0, D)$ 在需求 $D$ 上的期望值：\n$$ \\mathbb{E}_{D}[V_2(0, D)] = V_2(0,1) \\cdot \\mathbb{P}(D=1) + V_2(0,0) \\cdot \\mathbb{P}(D=0) $$\n$$ \\mathbb{E}_{D}[V_2(0, D)] = (6) \\cdot \\left(\\frac{2}{3}\\right) + (0) \\cdot \\left(\\frac{1}{3}\\right) = \\frac{12}{3} = 4 $$\n- 此行动的总期望成本是：\n$$ \\text{Cost}(\\text{not commit}) = 0 + 4 = 4 $$\n\n问题要求明确写出阶段 $t=1$ 的贝尔曼方程。对于初始状态 $s_1=(z_1=0)$，该方程为：\n$$ V_1(0) = \\min \\left\\{ 5 + \\mathbb{E}_{D}[V_2(1, D)], 0 + \\mathbb{E}_{D}[V_2(0, D)] \\right\\} $$\n代入计算出的值和期望：\n$$ V_1(0) = \\min \\left\\{ 5 + \\left(4 \\cdot \\frac{2}{3} + 0 \\cdot \\frac{1}{3}\\right), 0 + \\left(6 \\cdot \\frac{2}{3} + 0 \\cdot \\frac{1}{3}\\right) \\right\\} $$\n$$ V_1(0) = \\min \\left\\{ 5 + \\frac{8}{3}, 4 \\right\\} = \\min \\left\\{ \\frac{23}{3}, 4 \\right\\} $$\n\n最后，为了计算最优期望总成本，我们取这两个值中的最小值。我们可以将 $4$ 表示为 $\\frac{12}{3}$。\n$$ V_1(0) = \\min \\left\\{ \\frac{23}{3}, \\frac{12}{3} \\right\\} $$\n由于 $12  23$，最小值为 $\\frac{12}{3} = 4$。\n\n因此，从初始状态 $s_1=(z_1=0)$ 开始的最优期望总成本为 $4$。在阶段 $t=1$ 的最优策略是选择“not commit”行动。", "answer": "$$\n\\boxed{4}\n$$", "id": "3101502"}]}