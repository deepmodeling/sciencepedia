{"hands_on_practices": [{"introduction": "在将优化模型应用于现实世界时，我们必须考虑数据的不确定性。本练习以一个常见的项目管理问题为例，探讨当任务持续时间并非一个精确值，而是在一个区间内波动时，我们如何制定一个稳健的计划。通过推导一个简单的稳健对等式[@problem_id:3173524]，你将学习到稳健优化的核心思想：为最坏情况做准备，以确保约束条件的严格满足。", "problem": "考虑项目进度计划中的一个单活动优先关系，从活动 $i$ 到活动 $j$，其由确定性约束 $S_{j} \\ge S_{i} + d_{ij}$ 建模，其中 $S_{i}$ 和 $S_{j}$ 分别表示活动 $i$ 和 $j$ 的计划开始时间，$d_{ij}$ 是优先弧 $(i,j)$ 上的活动持续时间。在存在不确定性的情况下，假设真实持续时间是不确定性实现 $u$ 的函数 $d_{ij}(u)$，并且计划者只知道 $d_{ij}(u)$ 位于区间 $[\\underline{d}_{ij}, \\overline{d}_{ij}]$ 内。计划者在基准进度计划中使用名义持续时间 $d_{ij}^{\\text{nom}}$，并寻求一个鲁棒对等形式，以确保对于与该区间一致的所有 $u$ 的实现，约束都是可行的。\n\n从鲁棒优化（RO）中鲁棒对等形式的基本定义出发——即将包含不确定参数的约束替换为要求其在指定不确定性集合中的所有实现下都成立的规定——推导在区间不确定性下 $S_{j} \\ge S_{i} + d_{ij}(u)$ 的鲁棒优先约束。请说明这如何导致在名义优先约束 $S_{j} \\ge S_{i} + d_{ij}^{\\text{nom}}$ 的基础上增加一个最坏情况下的裕度。\n\n假设该优先弧具有以下数据：\n- 名义持续时间 $d_{ij}^{\\text{nom}} = 6$ 天。\n- 区间界限 $\\underline{d}_{ij} = 5$ 天 和 $\\overline{d}_{ij} = 8$ 天。\n\n计算必须添加到名义约束中以获得保证对区间内所有 $u$ 可行的鲁棒对等形式的最坏情况裕度的数值。请用天数表示您的最终裕度值。最终答案必须是一个实数值，无需四舍五入。", "solution": "首先验证问题，以确保其具有科学依据、是良定的且客观的。\n\n### 步骤1：提取已知条件\n-   确定性优先约束：$S_{j} \\ge S_{i} + d_{ij}$。\n-   变量：$S_{i}$ 和 $S_{j}$ 是活动 $i$ 和 $j$ 的计划开始时间。\n-   不确定参数：真实持续时间是一个函数 $d_{ij}(u)$。\n-   不确定性集合：持续时间 $d_{ij}(u)$ 属于区间 $[\\underline{d}_{ij}, \\overline{d}_{ij}]$。\n-   名义持续时间：$d_{ij}^{\\text{nom}}$。\n-   名义约束：$S_{j} \\ge S_{i} + d_{ij}^{\\text{nom}}$。\n-   数值数据：$d_{ij}^{\\text{nom}} = 6$ 天，$\\underline{d}_{ij} = 5$ 天，以及 $\\overline{d}_{ij} = 8$ 天。\n\n### 步骤2：使用提取的已知条件进行验证\n该问题根植于鲁棒优化（RO）这一成熟领域及其在项目调度中的应用，这是一个标准且已被充分理解的课题。它提出了一个带有区间不确定性的线性约束，这是RO中的一个经典案例。所使用的术语，如“鲁棒对等”和“不确定性集合”，是精确的，并符合该领域的标准。所提供的数据是完整和一致的，可以得出一个唯一且有意义的解。问题清晰且可形式化。因此，该问题被认定为有效。\n\n### 步骤3：结论与行动\n问题有效。将提供完整解答。\n\n### 解题推导\n鲁棒优化的核心原则是确保一个约束在指定的不确定性集合内对不确定参数的所有可能实现都成立。原始的不确定约束为：\n$$S_{j} \\ge S_{i} + d_{ij}(u)$$\n持续时间 $d_{ij}(u)$ 的不确定性由区间集合 $\\mathcal{U}$ 定义，使得 $d_{ij}(u) \\in [\\underline{d}_{ij}, \\overline{d}_{ij}]$。\n\n为了构建鲁棒对等形式，我们必须强制该约束对区间内 $d_{ij}(u)$ 的每一个可能值都成立。这可以表示为：\n$$S_{j} \\ge S_{i} + d_{ij}(u), \\quad \\forall d_{ij}(u) \\in [\\underline{d}_{ij}, \\overline{d}_{ij}]$$\n决策变量是开始时间 $S_{i}$ 和 $S_{j}$，它们必须在实际持续时间 $d_{ij}(u)$ 揭晓之前确定。为使不等式对所有可能的 $d_{ij}(u)$ 都成立，左侧的 $S_{j} - S_{i}$ 必须大于或等于右侧 $d_{ij}(u)$ 所能取到的最大可能值。这代表了该优先约束的最坏情况。\n\n在数学上，我们必须满足：\n$$S_{j} - S_{i} \\ge \\max_{d_{ij}(u) \\in [\\underline{d}_{ij}, \\overline{d}_{ij}]} \\{d_{ij}(u)\\}$$\n对于给定的区间不确定性，持续时间 $d_{ij}(u)$ 能达到的最大值是其上界 $\\overline{d}_{ij}$。\n$$\\max_{d_{ij}(u) \\in [\\underline{d}_{ij}, \\overline{d}_{ij}]} \\{d_{ij}(u)\\} = \\overline{d}_{ij}$$\n将这个最坏情况的值代回约束中，得到鲁棒对等形式：\n$$S_{j} \\ge S_{i} + \\overline{d}_{ij}$$\n这个新的约束是确定性的，并保证无论持续时间 $d_{ij}(u)$ 在其指定区间内取何值，优先关系都将得到满足。\n\n问题要求将此鲁棒约束表示为名义约束加上一个最坏情况裕度的形式。名义约束为：\n$$S_{j} \\ge S_{i} + d_{ij}^{\\text{nom}}$$\n为了找到该裕度，我们可以通过在右侧同时加上和减去名义持续时间 $d_{ij}^{\\text{nom}}$ 来重写鲁棒对等形式：\n$$S_{j} \\ge S_{i} + d_{ij}^{\\text{nom}} + (\\overline{d}_{ij} - d_{ij}^{\\text{nom}})$$\n将此与 $S_{j} \\ge S_{i} + d_{ij}^{\\text{nom}} + \\text{slack}$ 的形式进行比较，我们可以确定最坏情况的裕度为：\n$$\\text{slack} = \\overline{d}_{ij} - d_{ij}^{\\text{nom}}$$\n这个裕度代表了必须在名义持续时间上增加的额外时间缓冲，以保护进度计划免受最坏情况延迟的影响。\n\n现在，我们使用提供的数据计算该裕度的数值：\n-   名义持续时间：$d_{ij}^{\\text{nom}} = 6$ 天。\n-   区间上界：$\\overline{d}_{ij} = 8$ 天。\n\n最坏情况的裕度计算如下：\n$$\\text{slack} = 8 - 6 = 2$$\n因此，必须在名义优先约束上增加2天的裕度，以确保对于区间 $[\\underline{5}, \\overline{8}]$ 内所有可能的持续时间实现都具有鲁棒性。鲁棒约束在数值上为 $S_j \\ge S_i + 8$，这等价于 $S_j \\ge S_i + 6 + 2$。", "answer": "$$\n\\boxed{2}\n$$", "id": "3173524"}, {"introduction": "虽然区间不确定性直观易懂，但许多实际问题中的不确定性结构更为复杂。本练习将引导你处理一种更普遍的乘性不确定性，其中参数在一个由$\\ell_{\\infty}$范数定义的“盒子”内变化。通过分析推导其稳健对等式[@problem_id:3173436]，你将揭示不确定性集合的几何形状（一个$\\ell_{\\infty}$范数球）与稳健约束的结构（一个$\\ell_1$范数惩罚项）之间的深刻对偶关系。", "problem": "考虑鲁棒优化（RO）中受系数不确定性影响的单个线性不等式约束。设 $n \\in \\mathbb{N}$，$x \\in \\mathbb{R}^{n}$ 为决策向量，$b \\in \\mathbb{R}$ 为给定界限。不确定系数向量 $a(\\xi) \\in \\mathbb{R}^{n}$ 是从一个名义基准 $\\bar{a} \\in \\mathbb{R}^{n}$（对于所有 $i \\in \\{1,\\dots,n\\}$，分量非负 $\\bar{a}_{i} \\ge 0$）通过乘法扰动得到的，其规则为 $a(\\xi) = \\bar{a} \\circ (1 + \\xi)$，其中 $\\circ$ 表示哈达玛（分量）积，$\\xi \\in \\mathbb{R}^{n}$ 是一个未知的扰动向量，位于半径为 $\\delta \\in \\mathbb{R}$（$\\delta \\ge 0$）的闭合 $\\ell_{\\infty}$-范数球内，即 $\\|\\xi\\|_{\\infty} \\le \\delta$。不等式 $a(\\xi)^{\\top} x \\le b$ 的鲁棒可行性意味着它对于指定不确定性集合中的所有 $\\xi$ 都成立。\n\n从鲁棒可行性的定义和不确定性集合的描述出发，推导出在所有满足 $\\|\\xi\\|_{\\infty} \\le \\delta$ 的 $\\xi$ 上，$a(\\xi)^{\\top} x$ 的精确最坏情况（最大）值，并用 $x$、$\\bar{a}$ 和 $\\delta$ 以闭式形式表示。你的最终答案必须是 $\\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} a(\\xi)^{\\top} x$ 的单个闭式解析表达式。不需要进行数值计算。", "solution": "该问题在数学上是良定义的且内部一致，可以直接推导出所要求的量。任务是找到线性函数 $a(\\xi)^{\\top} x$ 在扰动向量 $\\xi$ 的不确定性集合上的上确界。不确定性集合被定义为半径为 $\\delta$ 的闭合 $\\ell_{\\infty}$-范数球。\n\n目标是计算以下表达式的值：\n$$\n\\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} a(\\xi)^{\\top} x\n$$\n\n首先，我们将不确定系数向量的给定定义 $a(\\xi) = \\bar{a} \\circ (1 + \\xi)$ 代入表达式中。符号 $\\circ$ 代表哈达玛（分量）积。因此，$a(\\xi)$ 的第 $i$ 个分量由 $a_i(\\xi) = \\bar{a}_i(1 + \\xi_i)$ 给出，其中 $i \\in \\{1, \\dots, n\\}$。\n\n标量积 $a(\\xi)^{\\top} x$ 可以写成各分量的和：\n$$\na(\\xi)^{\\top} x = \\sum_{i=1}^{n} a_i(\\xi) x_i = \\sum_{i=1}^{n} \\bar{a}_i (1 + \\xi_i) x_i\n$$\n\n我们可以展开这个和，并将依赖于 $\\xi$ 的项与不依赖于 $\\xi$ 的项分开：\n$$\n\\sum_{i=1}^{n} \\bar{a}_i (1 + \\xi_i) x_i = \\sum_{i=1}^{n} (\\bar{a}_i x_i + \\bar{a}_i \\xi_i x_i) = \\left(\\sum_{i=1}^{n} \\bar{a}_i x_i\\right) + \\left(\\sum_{i=1}^{n} \\bar{a}_i x_i \\xi_i\\right)\n$$\n第一项 $\\sum_{i=1}^{n} \\bar{a}_i x_i$ 就是名义值 $\\bar{a}^{\\top} x$，它相对于 $\\xi$ 是一个常数。\n\n现在，最大化问题可以重写为：\n$$\n\\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} \\left( \\bar{a}^{\\top} x + \\sum_{i=1}^{n} \\bar{a}_i x_i \\xi_i \\right)\n$$\n由于 $\\bar{a}^{\\top} x$ 是一个常数，它可以被移到上确界算子之外：\n$$\n\\bar{a}^{\\top} x + \\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} \\left( \\sum_{i=1}^{n} \\bar{a}_i x_i \\xi_i \\right)\n$$\n剩下的任务是解决最大化问题 $\\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} \\sum_{i=1}^{n} \\bar{a}_i x_i \\xi_i$。由 $\\|\\xi\\|_{\\infty} \\le \\delta$ 定义的不确定性集合等价于对所有 $i \\in \\{1, \\dots, n\\}$ 的分量约束 $|\\xi_i| \\le \\delta$ 的集合。这等价于对所有 $i$ 都有 $-\\delta \\le \\xi_i \\le \\delta$。\n\n这个子问题的目标函数 $\\sum_{i=1}^{n} \\bar{a}_i x_i \\xi_i$ 是一个项的和，其中每一项只涉及一个分量 $\\xi_i$。对变量 $\\xi_i$ 的约束也是解耦的。因此，我们可以通过独立地最大化每一项来最大化整个和：\n$$\n\\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} \\left( \\sum_{i=1}^{n} \\bar{a}_i x_i \\xi_i \\right) = \\sum_{i=1}^{n} \\sup_{|\\xi_i| \\le \\delta} (\\bar{a}_i x_i \\xi_i)\n$$\n对于每个 $i \\in \\{1, \\dots, n\\}$，我们需要在区间 $[-\\delta, \\delta]$ 上最大化线性函数 $f(\\xi_i) = (\\bar{a}_i x_i) \\xi_i$。线性函数在闭区间上的最大值在其端点之一处取得。\n令 $c_i = \\bar{a}_i x_i$。我们想在约束 $-\\delta \\le \\xi_i \\le \\delta$ 下最大化 $c_i \\xi_i$。\n- 如果 $c_i > 0$，通过选择 $\\xi_i$ 为其可能的最大值 $\\delta$ 来达到最大值。最大化的值为 $c_i \\delta$。\n- 如果 $c_i  0$，通过选择 $\\xi_i$ 为其可能的最小值 $-\\delta$ 来达到最大值。最大化的值为 $c_i (-\\delta) = -c_i \\delta$。\n- 如果 $c_i = 0$，对于任何 $\\xi_i$ 的选择，其值都为 $0$。\n\n这三种情况可以用绝对值函数统一起来。$c_i \\xi_i$ 的最大值是 $|c_i| \\delta$。\n因此，$\\sup_{|\\xi_i| \\le \\delta} (\\bar{a}_i x_i \\xi_i) = |\\bar{a}_i x_i| \\delta$。\n\n问题陈述中指出，对所有 $i$ 都有 $\\bar{a}_i \\ge 0$。这是一条关键信息。由于 $\\bar{a}_i$ 是非负的，我们可以简化绝对值：\n$$\n|\\bar{a}_i x_i| = |\\bar{a}_i| |x_i| = \\bar{a}_i |x_i|\n$$\n所以，每一项的最大值是 $\\delta \\bar{a}_i |x_i|$。\n\n将这些最大化的项对所有 $i$求和，得到：\n$$\n\\sum_{i=1}^{n} \\sup_{|\\xi_i| \\le \\delta} (\\bar{a}_i x_i \\xi_i) = \\sum_{i=1}^{n} \\delta \\bar{a}_i |x_i| = \\delta \\sum_{i=1}^{n} \\bar{a}_i |x_i|\n$$\n这个表达式是向量 $(\\bar{a}_1 x_1, \\dots, \\bar{a}_n x_n)$ 相对于 $\\ell_{\\infty}$-范数的对偶范数，并乘以 $\\delta$ 进行缩放。$\\ell_{\\infty}$-范数的对偶范数是 $\\ell_1$-范数。\n\n将此结果与常数名义项结合，我们得到 $a(\\xi)^{\\top} x$ 的最坏情况值的最终闭式表达式：\n$$\n\\sup_{\\|\\xi\\|_{\\infty} \\le \\delta} a(\\xi)^{\\top} x = \\bar{a}^{\\top} x + \\delta \\sum_{i=1}^{n} \\bar{a}_i |x_i|\n$$\n这就是所要求的以 $x$、$\\bar{a}$ 和 $\\delta$ 表示的解析表达式。", "answer": "$$\n\\boxed{\\bar{a}^{\\top} x + \\delta \\sum_{i=1}^{n} \\bar{a}_i |x_i|}\n$$", "id": "3173436"}, {"introduction": "为所有参数同时达到最坏情况做准备可能过于保守，导致解决方案成本过高。本练习介绍了一种更贴近现实的“预算不确定性”模型，该模型假设只有部分参数会发生显著偏离。你的任务是构建相应的稳健对等问题，并计算“稳健性的代价”[@problem_id:3173485]，从而量化在获得稳健性的同时，名义性能会损失多少，为决策者提供关键的权衡依据。", "problem": "考虑一个带有不确定成本的线性成本最小化问题。设决策变量为一个实向量 $x \\in \\mathbb{R}^n$，其被约束在概率单纯形上，即对于所有 $i$，$x_i \\ge 0$ 且 $\\sum_{i=1}^n x_i = 1$。不确定成本向量 $c(u) \\in \\mathbb{R}^n$ 属于一个以已知平均成本 $\\bar c \\in \\mathbb{R}^n$ 为中心的预算不确定性集合：\n$$\n\\mathcal{U} \\;=\\; \\left\\{ c \\in \\mathbb{R}^n \\;:\\; \\sum_{i=1}^n \\left| c_i - \\bar c_i \\right| \\le \\Gamma \\right\\},\n$$\n其中 $\\Gamma \\ge 0$ 是一个给定的不确定性预算。要求您：\n- 从给定的不确定性集合和 $x$ 的可行域出发，仅使用基本定义和经过充分检验的事实（例如，范数对偶和支撑函数的性质），来构建问题 $\\min_{x} \\max_{u \\in \\mathcal{U}} c(u)^\\top x$ 的鲁棒对应问题。\n- 从第一性原理出发，推导概率单纯形上鲁棒最优解的结构特征，不引入任何捷径或预先推导的公式。您的特征描述必须足以实现一个正确的算法。\n- 在相同的可行域上定义名义问题 $\\min_{x} \\bar c^\\top x$。\n- 将鲁棒性代价定义为，使用鲁棒最优解而非名义最优解所导致的名义性能差距：\n$$\n\\text{PoR} \\;=\\; \\bar c^\\top x^{\\star}_{\\text{rob}} \\;-\\; \\bar c^\\top x^{\\star}_{\\text{nom}},\n$$\n其中 $x^{\\star}_{\\text{rob}}$ 是任意一个鲁棒最优解，$x^{\\star}_{\\text{nom}}$ 是任意一个名义最优解。\n\n您的程序必须实现推导出的鲁棒对应逻辑，并为每个测试案例计算：\n1. $\\min_x \\max_{u \\in \\mathcal{U}} c(u)^\\top x$ 的鲁棒最优目标值。\n2. $\\min_x \\bar c^\\top x$ 的名义最优目标值。\n3. 如上定义的鲁棒性代价 $\\text{PoR}$。\n\n所有量均为无量纲实数。对于每个测试案例，按上述顺序输出一个包含这三个值的实数列表。\n\n测试套件：\n使用以下 $(\\bar c, \\Gamma)$ 对集合。在每个案例中，$\\bar c$ 以数字列表形式给出，$\\Gamma$ 是一个非负实数。\n\n- 案例1（一般情况）：$\\bar c = [3,\\,5,\\,2,\\,7]$, $\\Gamma = 2$。\n- 案例2（成本并列）：$\\bar c = [1,\\,1,\\,1]$, $\\Gamma = 1$。\n- 案例3（混合符号，大不确定性）：$\\bar c = [-2,\\,1,\\,4]$, $\\Gamma = 5$。\n- 案例4（单变量边界）：$\\bar c = [4]$, $\\Gamma = 3$。\n- 案例5（零不确定性边界）：$\\bar c = [2,\\,8,\\,5]$, $\\Gamma = 0$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。列表中的每个元素对应一个测试案例，其本身也是一个用方括号括起来的、包含三个数字的逗号分隔列表。例如：\n$$\n[\\,[v_{11},v_{12},v_{13}],\\,[v_{21},v_{22},v_{23}],\\,\\dots\\,]\n$$\n其中 $v_{i1}$ 是第 $i$ 个测试案例的鲁棒最优目标值，$v_{i2}$ 是名义最优目标值，$v_{i3}$ 是鲁棒性代价。", "solution": "用户提供的问题被评估为有效。它在科学上基于鲁棒优化理论，问题阐述清晰且提供了所有必要信息，并以客观、正式的语言表述。该问题涉及构建和求解一个带有成本系数预算不确定性集合的线性优化问题的鲁棒对应问题，这是该领域的标准课题。\n\n### 1. 鲁棒对应问题的构建\n\n问题是在概率单纯形 $\\Delta = \\{x \\in \\mathbb{R}^n : \\sum_{i=1}^n x_i = 1, x_i \\ge 0 \\text{ for all } i\\}$ 上找到一个鲁棒最优策略 $x$。问题陈述为：\n$$\n\\min_{x \\in \\Delta} \\max_{c \\in \\mathcal{U}} c^\\top x\n$$\n其中成本向量 $c$ 的不确定性集合由下式给出\n$$\n\\mathcal{U} = \\left\\{ c \\in \\mathbb{R}^n : \\sum_{i=1}^n |c_i - \\bar c_i| \\le \\Gamma \\right\\}\n$$\n对于一个名义成本向量 $\\bar c$ 和一个不确定性预算 $\\Gamma \\ge 0$。该不确定性集合可以使用 $\\ell_1$-范数表示为 $\\mathcal{U} = \\{ c \\in \\mathbb{R}^n : \\|c - \\bar c\\|_1 \\le \\Gamma \\}$。\n\n表达式 $\\max_{c \\in \\mathcal{U}} c^\\top x$ 是集合 $\\mathcal{U}$ 在 $x$ 处的支撑函数。我们可以从第一性原理推导出其闭式表达式。设与名义成本的不确定偏差为 $\\delta = c - \\bar c$，其中 $\\|\\delta\\|_1 \\le \\Gamma$。内部最大化问题可以重写为：\n$$\n\\max_{c \\in \\mathcal{U}} c^\\top x = \\max_{\\delta : \\|\\delta\\|_1 \\le \\Gamma} (\\bar c + \\delta)^\\top x = \\bar c^\\top x + \\max_{\\delta : \\|\\delta\\|_1 \\le \\Gamma} \\delta^\\top x\n$$\n现在，我们专注于评估项 $\\max_{\\delta : \\sum_i |\\delta_i| \\le \\Gamma} \\sum_i \\delta_i x_i$。为了最大化这个和，我们应该使 $\\delta_i$ 的符号与 $x_i$ 的符号对齐，并将预算 $\\Gamma$ 分配给对应于 $x_i$ 最大幅值的项 $\\delta_i$。由于 $x$ 在概率单纯形上，其所有分量都是非负的，$x_i \\ge 0$。因此，我们应该选择 $\\delta_i \\ge 0$。\n目标函数 $\\sum_i \\delta_i x_i$ 是有界的：\n$$\n\\sum_{i=1}^n \\delta_i x_i \\le \\sum_{i=1}^n |\\delta_i| |x_i| \\le \\left(\\max_j |x_j|\\right) \\sum_{i=1}^n |\\delta_i| \\le \\left(\\max_j |x_j|\\right) \\Gamma\n$$\n由于 $x_i \\ge 0$，我们有 $\\max_j |x_j| = \\max_j x_j$，这是非负向量的 $\\ell_\\infty$-范数 $\\|x\\|_\\infty$ 的定义。因此，$\\sum_i \\delta_i x_i \\le \\Gamma \\|x\\|_\\infty$。\n这个上界是可以达到的。设 $k$ 是一个索引，使得 $x_k = \\max_j x_j = \\|x\\|_\\infty$。我们可以如下选择一个向量 $\\delta$：$\\delta_k = \\Gamma$ 且对于所有 $i \\ne k$ 有 $\\delta_i = 0$。这个选择满足约束条件，因为 $\\sum_i |\\delta_i| = |\\delta_k| = \\Gamma$。对于这个 $\\delta$，目标函数变为 $\\sum_i \\delta_i x_i = \\delta_k x_k = \\Gamma x_k = \\Gamma \\|x\\|_\\infty$。\n因此，我们已经确定：\n$$\n\\max_{\\delta : \\|\\delta\\|_1 \\le \\Gamma} \\delta^\\top x = \\Gamma \\|x\\|_\\infty\n$$\n将此代入主问题，我们得到鲁棒对应（RC）的构建：\n$$\n\\min_{x \\in \\Delta} \\left( \\bar c^\\top x + \\Gamma \\|x\\|_\\infty \\right)\n$$\n这是一个在单纯形上的带有非线性目标函数的优化问题。\n\n### 2. 鲁棒最优解的特征描述\n\nRC 问题是 $\\min_{x \\in \\Delta} \\left( \\sum_{i=1}^n \\bar c_i x_i + \\Gamma \\max_{j} x_j \\right)$。\n为了分析最优解的结构，让我们考虑其中的权衡。项 $\\sum \\bar c_i x_i$ 的最小化可以通过将全部预算 $\\sum x_i=1$ 分配给具有最小成本 $\\bar c_j$ 的分量 $x_j$ 来实现。然而，这样做会使惩罚项 $\\Gamma \\max_j x_j = \\Gamma x_j = \\Gamma$ 最大化。一个鲁棒的解可能会将总和分配到几个成本较小的分量上，以保持 $\\max_j x_j$ 较低。\n\n设名义成本按非递减顺序排序：$\\bar c_{(1)} \\le \\bar c_{(2)} \\le \\dots \\le \\bar c_{(n)}$。直观上，一个最优解 $x^\\star$ 将只在对应于最小成本的索引上具有非零分量。\n我们假设最优解在排序列表中的前 $k$ 个索引处具有非零值，即对于 $i=1, \\dots, k$，$x_{(i)}  0$，而对于 $i  k$，$x_{(i)}=0$。为了最小化惩罚项 $\\Gamma \\max_i x_{(i)}$，最优的做法是使这 $k$ 个非零分量相等。如果它们不相等，比如说 $x_{(i)} > x_{(j)}$，我们可以将一小部分从 $x_{(i)}$ 转移到 $x_{(j)}$。由于 $\\bar c_{(j)} \\le \\bar c_{(i)}$，这不会增加 $\\bar c^\\top x$ 项（如果 $\\bar c_{(j)}  \\bar c_{(i)}$ 则会减小它），并且它会减小最大分量，从而减少惩罚项。\n因此，我们提出一种解的结构，其中对于 $i=1, \\dots, k$，$x_{(i)} = 1/k$；对于 $i>k$，$x_{(i)}=0$。\n\n对于一个固定的投资资产数量 $k$，在此结构下的目标值为：\n$$\nV(k) = \\sum_{i=1}^k \\bar c_{(i)} x_{(i)} + \\Gamma \\max_{i=1, \\dots, k} x_{(i)} = \\sum_{i=1}^k \\bar c_{(i)} \\left(\\frac{1}{k}\\right) + \\Gamma \\left(\\frac{1}{k}\\right) = \\frac{1}{k} \\left( \\sum_{i=1}^k \\bar c_{(i)} + \\Gamma \\right)\n$$\n最优策略对应于选择使该值 $V(k)$ 最小化的资产数量 $k \\in \\{1, \\dots, n\\}$。因此，鲁棒最优目标值为 $\\min_{k=1, \\dots, n} V(k)$。\n\n### 3. 名义问题和鲁棒性代价\n\n名义问题定义为：\n$$\n\\min_{x \\in \\Delta} \\bar c^\\top x\n$$\n这是一个在概率单纯形上的线性规划问题。为了最小化加权和 $\\sum_i \\bar c_i x_i$，我们必须将全部权重分配给成本最低的分量。设 $\\bar c_{\\min} = \\min_i \\bar c_i$。任何名义最优解 $x^{\\star}_{\\text{nom}}$ 都会在某个索引 $j$ 处有 $x_j=1$（其中 $\\bar c_j = \\bar c_{\\min}$），而在所有其他索引处有 $x_i=0$。那么名义最优目标值为：\n$$\n\\bar c^\\top x^{\\star}_{\\text{nom}} = \\bar c_{\\min}\n$$\n鲁棒性代价 (PoR) 衡量的是因选择鲁棒解而非名义解所导致的名义性能损失。其定义为：\n$$\n\\text{PoR} = \\bar c^\\top x^{\\star}_{\\text{rob}} - \\bar c^\\top x^{\\star}_{\\text{nom}}\n$$\n设 $k^*$ 是使 $V(k)$ 最小化的整数。鲁棒最优解为 $x^{\\star}_{\\text{rob}}$，其分量对于对应最小成本 $\\bar c_{(1)}, \\dots, \\bar c_{(k^*)}$ 的 $k^*$ 个索引为 $x_{(i)} = 1/k^*$，其他分量为 $x_{(i)}=0$。该解的名义性能为：\n$$\n\\bar c^\\top x^{\\star}_{\\text{rob}} = \\sum_{i=1}^{k^*} \\bar c_{(i)} \\left(\\frac{1}{k^*}\\right)\n$$\n因此，鲁棒性代价为：\n$$\n\\text{PoR} = \\frac{1}{k^*} \\sum_{i=1}^{k^*} \\bar c_{(i)} - \\bar c_{\\min}\n$$\n由于 $\\bar c_{\\min} = \\bar c_{(1)}$，该值总是非负的，因为它表示一个平均值与其最小元素之间的差。\n\n### 算法总结\n\n对于给定的 $(\\bar c, \\Gamma)$：\n1.  **名义解**：最优值为 $\\min(\\bar c)$。\n2.  **鲁棒解**：\n    a. 对成本进行排序：$\\bar c_{(1)} \\le \\dots \\le \\bar c_{(n)}$。\n    b. 对于每个 $k \\in \\{1, \\dots, n\\}$，计算候选值 $V(k) = \\frac{1}{k} (\\sum_{i=1}^k \\bar c_{(i)} + \\Gamma)$。\n    c. 鲁棒最优值为 $\\min_{k} V(k)$。\n3.  **鲁棒性代价**：\n    a. 设 $k^*$ 是产生最小 $V(k)$ 的 $k$ 值。\n    b. 计算鲁棒解的名义性能：$P_{\\text{rob,nom}} = \\frac{1}{k^*} \\sum_{i=1}^{k^*} \\bar c_{(i)}$。\n    c. PoR 为 $P_{\\text{rob,nom}} - \\min(\\bar c)$。\n\n这提供了一个完整的、构造性的程序来找到所有需要的量。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the robust optimization problem for a series of test cases.\n    \"\"\"\n    test_cases = [\n        # Case 1 (general case)\n        ({'c_bar': [3, 5, 2, 7], 'Gamma': 2}),\n        # Case 2 (ties in costs)\n        ({'c_bar': [1, 1, 1], 'Gamma': 1}),\n        # Case 3 (mixed signs, large uncertainty)\n        ({'c_bar': [-2, 1, 4], 'Gamma': 5}),\n        # Case 4 (single variable boundary)\n        ({'c_bar': [4], 'Gamma': 3}),\n        # Case 5 (zero uncertainty boundary)\n        ({'c_bar': [2, 8, 5], 'Gamma': 0}),\n    ]\n\n    results = []\n    for case in test_cases:\n        c_bar = np.array(case['c_bar'], dtype=float)\n        Gamma = float(case['Gamma'])\n        n = len(c_bar)\n\n        # Sort the nominal costs in non-decreasing order\n        c_sorted = np.sort(c_bar)\n\n        # 1. Calculate the nominal optimal objective value\n        # The nominal solution puts all weight on the minimum cost component.\n        nominal_optimal_value = c_sorted[0]\n\n        # 2. Calculate the robust optimal objective value\n        # We iterate through k=1...n to find the k that minimizes V(k).\n        min_robust_value = np.inf\n        k_star = -1\n        sum_c_at_k_star = 0.0\n        \n        current_c_sum = 0.0\n        for k in range(1, n + 1):\n            current_c_sum += c_sorted[k - 1]\n            v_k = (current_c_sum + Gamma) / k\n            \n            if v_k  min_robust_value:\n                min_robust_value = v_k\n                k_star = k\n                sum_c_at_k_star = current_c_sum\n        \n        robust_optimal_value = min_robust_value\n\n        # 3. Calculate the Price of Robustness (PoR)\n        # The robust solution x_rob assigns 1/k_star to the k_star cheapest assets.\n        # Its nominal performance is c_bar^T * x_rob.\n        nominal_performance_of_robust_sol = sum_c_at_k_star / k_star\n        price_of_robustness = nominal_performance_of_robust_sol - nominal_optimal_value\n        \n        # Store results for this test case\n        results.append([robust_optimal_value, nominal_optimal_value, price_of_robustness])\n\n    # Format the final output string as per requirements\n    def format_sublist(sublist):\n        # Maps each number to a string and joins them with commas, inside brackets.\n        return f\"[{','.join(f'{x:.10g}' for x in sublist)}]\"\n\n    formatted_results = [format_sublist(res) for res in results]\n    print(f\"[[{format_sublist(results[0])},{format_sublist(results[1])},{format_sublist(results[2])},{format_sublist(results[3])},{format_sublist(results[4])}]]\")\n\nsolve()\n```", "id": "3173485"}]}