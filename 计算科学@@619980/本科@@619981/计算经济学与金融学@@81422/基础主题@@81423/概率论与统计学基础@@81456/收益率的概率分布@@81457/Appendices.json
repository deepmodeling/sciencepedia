{"hands_on_practices": [{"introduction": "实践始于基础。在概率论中，一个核心关系是概率密度函数 (PDF) 是其累积分布函数 (CDF) 的导数。本练习 [@problem_id:2415147] 将让你通过实践来巩固这一基本概念，通过计算金融学中常见收益率分布——高斯分布、学生t分布和高斯混合分布——的 PDF，从而深化你对这些模型数学特性的理解。", "problem": "考虑三个用于模拟十进制股票收益率分布的累积分布函数。对于每一种设定，令 $r$ 表示收益率，其累积分布函数为 $F(r)$。您的任务是在指定点上数值计算导数 $\\frac{d}{dr}F(r)$，以获得概率密度函数 $f(r)$ 的估计值。\n\n测试集的 $F(r)$ 定义如下：\n- 测试用例 $1$（高斯分布）：$F(r) = \\Phi\\!\\left(\\frac{r - \\mu}{\\sigma}\\right)$，参数为 $\\mu = 0.001$ 和 $\\sigma = 0.02$，其中 $\\Phi(\\cdot)$ 表示标准正态分布的累积分布函数。\n- 测试用例 $2$（Student’s $t$ 分布）：$F(r) = T_{\\nu}\\!\\left(\\frac{r - \\mu}{s}\\right)$，参数为 $\\nu = 5$、$\\mu = 0.0$ 和 $s = 0.02$，其中 $T_{\\nu}(\\cdot)$ 表示自由度为 $\\nu$ 的标准化 Student’s $t$ 分布的累积分布函数。\n- 测试用例 $3$（双组分高斯混合模型）：$F(r) = w \\,\\Phi\\!\\left(\\frac{r - 0}{0.015}\\right) + (1-w)\\,\\Phi\\!\\left(\\frac{r - 0}{0.05}\\right)$，其中 $w = 0.9$。\n\n对于每个测试用例，在以下点处估计 $f(r) = \\frac{d}{dr}F(r)$：\n- 测试用例 $1$ 求值点：$\\{-0.05, 0.00, 0.05\\}$。\n- 测试用例 $2$ 求值点：$\\{-0.10, 0.00, 0.10\\}$。\n- 测试用例 $3$ 求值点：$\\{-0.10, -0.02, 0.00, 0.02, 0.10\\}$。\n\n您的程序必须：\n- 通过对给定的 $F(r)$ 关于 $r$ 求导，计算每个测试用例在所有指定点上 $f(r)$ 的数值估计。\n- 生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，排序如下：\n  [按所述顺序排列的测试用例 $1$ 的值，接着是按所述顺序排列的测试用例 $2$ 的值，最后是按所述顺序排列的测试用例 $3$ 的值]。\n- 将每个报告值四舍五入到 $6$ 位小数。\n\n程序没有输入，也不需要单位。最终输出应只包含上述格式的单行内容。", "solution": "对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n\n- **总体任务**：数值计算导数 $\\frac{d}{dr}F(r)$ 以估计概率密度函数 $f(r)$，其中 $F(r)$ 是十进制股票收益率 $r$ 的累积分布函数 (CDF)。\n\n- **测试用例 1 (高斯分布)**：\n  - CDF: $F(r) = \\Phi\\!\\left(\\frac{r - \\mu}{\\sigma}\\right)$\n  - 参数: $\\mu = 0.001$, $\\sigma = 0.02$。\n  - $\\Phi(\\cdot)$ 是标准正态 CDF。\n  - $r$ 的求值点：$\\{-0.05, 0.00, 0.05\\}$。\n\n- **测试用例 2 (Student’s t 分布)**：\n  - CDF: $F(r) = T_{\\nu}\\!\\left(\\frac{r - \\mu}{s}\\right)$\n  - 参数: $\\nu = 5$, $\\mu = 0.0$, $s = 0.02$。\n  - $T_{\\nu}(\\cdot)$ 是自由度为 $\\nu$ 的标准化 Student’s t 分布 CDF。\n  - $r$ 的求值点：$\\{-0.10, 0.00, 0.10\\}$。\n\n- **测试用例 3 (双组分高斯混合模型)**：\n  - CDF: $F(r) = w \\,\\Phi\\!\\left(\\frac{r - 0}{0.015}\\right) + (1-w)\\,\\Phi\\!\\left(\\frac{r - 0}{0.05}\\right)$\n  - 参数: $w = 0.9$。这隐含地是一个由两个正态分布组成的混合模型，其均值为 $\\mu_1 = 0$, $\\mu_2 = 0$，标准差为 $\\sigma_1 = 0.015$, $\\sigma_2 = 0.05$。\n  - $r$ 的求值点：$\\{-0.10, -0.02, 0.00, 0.02, 0.10\\}$。\n\n- **输出要求**：一个由所有计算出的导数值组成的单一逗号分隔列表，按测试用例和求值点排序，用方括号括起来，并四舍五入到 $6$ 位小数。\n\n**步骤 2：使用提取的已知条件进行验证**\n\n1.  **科学依据**：该问题在根本上是合理的。它基于概率论的核心原则，即概率密度函数 (PDF) $f(x)$ 是累积分布函数 (CDF) $F(x)$ 的导数，即 $f(x) = \\frac{d}{dx}F(x)$。所使用的分布——高斯分布、Student's t 分布和高斯混合模型——都是计算金融学中广泛用于模拟资产收益率的标准模型。该问题在科学上和数学上都是正确的。\n2.  **适定性**：该问题是适定的。对于每个测试用例，函数 $F(r)$ 都有明确的定义和所有必需的参数。需要计算导数的点也已明确指定。这些函数处处可微。存在唯一且有意义的解。\n3.  **客观性**：该问题使用精确、无歧义的数学语言和客观标准进行陈述。不包含主观或基于观点的部分。\n\n**步骤 3：结论与行动**\n\n该问题有效。它具有科学依据、适定、客观且完整。将提供一个解决方案。\n\n**方法论**\n\n该问题要求对累积分布函数 $F(r)$ 的导数进行数值评估，以获得概率密度函数 $f(r)$。基本关系是：\n$$f(r) = \\frac{d}{dr}F(r)$$\n虽然可以采用数值近似方案，如中心有限差分法 $f'(x) \\approx \\frac{f(x+h) - f(x-h)}{2h}$，但这没有必要，并且不如正确的解析方法精确。对于给定的标准分布，其 CDF 的导数是已知的解析函数——即 PDF 本身。最严谨和精确的“计算导数”的方法是评估相应的 PDF。这不是对问题的规避，而是数学原理的正确应用。\n\n**情况 1：高斯分布**\nCDF 由 $F(r) = \\Phi\\left(\\frac{r - \\mu}{\\sigma}\\right)$ 给出。应用链式法则，其导数为：\n$$f(r) = \\frac{dF}{dr} = \\frac{d}{dr}\\Phi\\left(\\frac{r - \\mu}{\\sigma}\\right) = \\phi\\left(\\frac{r - \\mu}{\\sigma}\\right) \\cdot \\frac{d}{dr}\\left(\\frac{r - \\mu}{\\sigma}\\right) = \\frac{1}{\\sigma}\\phi\\left(\\frac{r - \\mu}{\\sigma}\\right)$$\n其中 $\\phi(z) = \\frac{1}{\\sqrt{2\\pi}}e^{-z^2/2}$ 是标准正态分布的 PDF。所得表达式是均值为 $\\mu$、标准差为 $\\sigma$ 的一般正态分布的 PDF。参数为 $\\mu = 0.001$ 和 $\\sigma = 0.02$。\n\n**情况 2：Student’s t-分布**\nCDF 由 $F(r) = T_{\\nu}\\left(\\frac{r - \\mu}{s}\\right)$ 给出。类似地应用链式法则可得：\n$$f(r) = \\frac{dF}{dr} = \\frac{d}{dr}T_{\\nu}\\left(\\frac{r - \\mu}{s}\\right) = t_{\\nu}\\left(\\frac{r - \\mu}{s}\\right) \\cdot \\frac{1}{s}$$\n其中 $t_{\\nu}(z)$ 是自由度为 $\\nu$ 的标准化 Student's t-分布的 PDF。这是一个位置-尺度变换后的 Student's t-分布的 PDF。参数为 $\\nu = 5$、$\\mu = 0.0$ 和 $s = 0.02$。\n\n**情况 3：双组分高斯混合模型**\nCDF 是一个加权和：$F(r) = w_1 F_1(r) + w_2 F_2(r)$，其中 $F_1(r) = \\Phi\\left(\\frac{r - \\mu_1}{\\sigma_1}\\right)$ 且 $F_2(r) = \\Phi\\left(\\frac{r - \\mu_2}{\\sigma_2}\\right)$。和的导数是导数的和：\n$$f(r) = \\frac{dF}{dr} = w_1 \\frac{dF_1}{dr} + w_2 \\frac{dF_2}{dr}$$\n使用高斯分布情况下的结果，可得：\n$$f(r) = w_1 \\frac{1}{\\sigma_1}\\phi\\left(\\frac{r - \\mu_1}{\\sigma_1}\\right) + w_2 \\frac{1}{\\sigma_2}\\phi\\left(\\frac{r - \\mu_2}{\\sigma_2}\\right)$$\n这就是高斯混合模型的 PDF。参数为 $w_1 = 0.9$，$w_2 = 1-w_1 = 0.1$，$\\mu_1 = \\mu_2 = 0$，$\\sigma_1 = 0.015$ 和 $\\sigma_2 = 0.05$。\n\n实现将利用 `scipy.stats` 库，该库为评估这些标准分布的 PDF 提供了数值稳定且精确的函数。这将直接并正确地计算所需的值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm, t\n\ndef solve():\n    \"\"\"\n    Solves the problem by calculating the probability density function (PDF) values,\n    which are the derivatives of the given cumulative distribution functions (CDFs).\n    \"\"\"\n    \n    # This list will store all results in the required order.\n    all_results = []\n\n    # --- Test Case 1: Gaussian Distribution ---\n    mu_1 = 0.001\n    sigma_1 = 0.02\n    r_vals_1 = np.array([-0.05, 0.00, 0.05])\n    \n    # The derivative of the Gaussian CDF is the Gaussian PDF.\n    pdf_vals_1 = norm.pdf(r_vals_1, loc=mu_1, scale=sigma_1)\n    all_results.extend(pdf_vals_1)\n\n    # --- Test Case 2: Student’s t-Distribution ---\n    nu_2 = 5\n    mu_2 = 0.0\n    s_2 = 0.02\n    r_vals_2 = np.array([-0.10, 0.00, 0.10])\n    \n    # The derivative of the location-scale t-CDF is the corresponding t-PDF.\n    # The scipy.stats.t.pdf function correctly handles location and scale parameters.\n    pdf_vals_2 = t.pdf(r_vals_2, df=nu_2, loc=mu_2, scale=s_2)\n    all_results.extend(pdf_vals_2)\n\n    # --- Test Case 3: Two-component Gaussian Mixture ---\n    w_3 = 0.9\n    sigma_3_1 = 0.015\n    sigma_3_2 = 0.05\n    mu_3 = 0.0 # Both components are centered at 0\n    r_vals_3 = np.array([-0.10, -0.02, 0.00, 0.02, 0.10])\n    \n    # The PDF of a mixture is the weighted sum of the component PDFs.\n    pdf_vals_3_comp1 = norm.pdf(r_vals_3, loc=mu_3, scale=sigma_3_1)\n    pdf_vals_3_comp2 = norm.pdf(r_vals_3, loc=mu_3, scale=sigma_3_2)\n    pdf_vals_3 = w_3 * pdf_vals_3_comp1 + (1 - w_3) * pdf_vals_3_comp2\n    all_results.extend(pdf_vals_3)\n\n    # Format the final output string as specified.\n    # Each value is rounded to 6 decimal places.\n    output_str = f\"[{','.join([f'{val:.6f}' for val in all_results])}]\"\n    \n    # Final print statement in the exact required format.\n    print(output_str)\n\nsolve()\n```", "id": "2415147"}, {"introduction": "从理论转向应用，我们将探讨选择错误概率分布的实际后果。本练习 [@problem_id:2422084] 模拟了一个算法交易的执行过程，展示了如果错误地使用高斯模型而非更符合实际的学生t分布来建模，将如何显著低估尾部风险，并可能导致意料之外的巨大成本。通过量化不同模型下的风险敞口，你将具体地认识到为什么在金融风险管理中准确地为“肥尾”现象建模至关重要。", "problem": "一个交易员必须在一个有限的时间范围内执行一个大额买单，该时间范围被分为 $T$ 个等长的时间区间，索引为 $t \\in \\{1,\\dots,T\\}$。设初始中间价归一化为 $P_0 = 1$。在这些时间区间内的市场成交量分布由严格为正的整数 $V_t > 0$ 给出。该交易员使用成交量加权平均价格 (VWAP) 交易计划，由下式给出\n$$\nx_t \\equiv Q \\cdot \\frac{V_t}{\\sum_{s=1}^{T} V_s},\n$$\n使得 $\\sum_{t=1}^{T} x_t = Q$，其中 $Q > 0$ 是要购买的总股数。\n\n截至时间区间 $t$ 末的日内累计回报率被建模为一个单因子过程\n$$\nR_t = \\kappa_t \\cdot Z, \\quad \\kappa_t \\equiv \\sqrt{\\frac{t}{T}},\n$$\n其中 $Z$ 是一个代表整个时间范围回报因子的零均值随机变量。在时间区间 $t$ 末的已实现执行价格为\n$$\nP_t = P_0 \\cdot (1 + R_t) + \\eta \\cdot \\frac{x_t}{V_t},\n$$\n其中 $\\eta > 0$ 是一个临时冲击系数，交易以价格 $P_t$ 执行数量 $x_t$。执行差额成本（相对于 $P_0$）为\n$$\nC \\equiv \\sum_{t=1}^{T} x_t \\cdot (P_t - P_0) = Z \\cdot \\sum_{t=1}^{T} x_t \\kappa_t + \\eta \\cdot \\sum_{t=1}^{T} \\frac{x_t^2}{V_t}.\n$$\n假设一个风险经理使用高斯模型在尾部概率水平 $1-p$ 上校准风险价值 (Value-at-Risk)，其中 $Z \\sim \\mathcal{N}(0,\\sigma^2)$ 且 $\\sigma > 0$ 已知。在此高斯假设下，$C$ 的随机部分的 VaR 预算为\n$$\nB_{\\text{G}} \\equiv z_p \\cdot \\sigma \\cdot W, \\quad \\text{其中 } z_p \\text{ 是水平为 } p \\text{ 的标准正态分位数，且 } W \\equiv \\sum_{t=1}^{T} x_t \\kappa_t.\n$$\n实际上，假设 $Z$ 服从自由度为 $\\nu > 2$、零均值的学生 t 分布（Student-$t$），并经过缩放以使得 $\\mathrm{Var}(Z) = \\sigma^2$。令 $s_\\nu$ 表示为匹配 $\\mathrm{Var}(Z)$ 而选择的尺度因子，使得 $Z \\overset{d}{=} s_\\nu \\cdot T_\\nu$，其中 $T_\\nu$ 是一个标准的学生 t 分布随机变量（零均值，单位尺度），并且 $s_\\nu^2 \\cdot \\frac{\\nu}{\\nu - 2} = \\sigma^2$。\n\n您的任务是，对下面指定的每个测试用例：\n- 计算 VWAP 交易计划 $\\{x_t\\}_{t=1}^{T}$ 和风险暴露系数 $W = \\sum_{t=1}^{T} x_t \\kappa_t$。\n- 计算高斯校准预算 $B_{\\text{G}} = z_p \\cdot \\sigma \\cdot W$。\n- 在真实的 Student-$t$ 模型下，计算随机部分的实际超出概率，即\n$$\n\\pi_{\\text{true}} \\equiv \\mathbb{P}\\left( Z \\cdot W > B_{\\text{G}} \\right) = 1 - F_{T_\\nu}\\!\\left( \\frac{B_{\\text{G}}}{W \\cdot s_\\nu} \\right),\n$$\n其中 $F_{T_\\nu}$ 是自由度为 $\\nu$ 的标准 Student-$t$ 分布的累积分布函数，并且 $s_\\nu = \\sigma \\cdot \\sqrt{\\frac{\\nu - 2}{\\nu}}$。\n- 以小数形式报告高斯假设下的名义超出概率 $\\pi_{\\text{nom}} \\equiv 1 - p$。\n- 计算预期执行差额 $\\mathbb{E}[C]$，它等于确定性冲击成本：\n$$\n\\mathbb{E}[C] = \\eta \\cdot \\sum_{t=1}^{T} \\frac{x_t^2}{V_t}.\n$$\n\n所有货币计价的数量都应以与 $P_0 = 1$ 一致的相同归一化货币单位表示。所有概率必须以小数形式表示。\n\n测试套件：\n- 案例 1：\n  - $T = 4$\n  - $(V_1,V_2,V_3,V_4) = (300000,200000,200000,300000)$\n  - $Q = 100000$\n  - $\\sigma = 0.015$\n  - $p = 0.99$\n  - $\\nu = 5$\n  - $\\eta = 0.02$\n- 案例 2：\n  - $T = 6$\n  - $(V_1,V_2,V_3,V_4,V_5,V_6) = (100000,100000,100000,100000,100000,500000)$\n  - $Q = 50000$\n  - $\\sigma = 0.01$\n  - $p = 0.95$\n  - $\\nu = 3$\n  - $\\eta = 0.02$\n- 案例 3 (边界情况)：\n  - $T = 1$\n  - $(V_1) = (200000)$\n  - $Q = 20000$\n  - $\\sigma = 0.02$\n  - $p = 0.975$\n  - $\\nu = 100$\n  - $\\eta = 0.02$\n\n最终输出格式：\n- 您的程序必须生成单行输出，其中按顺序包含所有案例的结果，结果为逗号分隔的列表，并用方括号括起来。\n- 对于每个案例，按以下顺序输出四个浮点数：$B_{\\text{G}}$、$\\pi_{\\text{true}}$、$\\pi_{\\text{nom}}$、$\\mathbb{E}[C]$。\n- 将报告的每个数字四舍五入到 $6$ 位小数。\n- 因此，输出应采用以下格式\n$$\n[\\;B_{\\text{G}}^{(1)},\\;\\pi_{\\text{true}}^{(1)},\\;\\pi_{\\text{nom}}^{(1)},\\;\\mathbb{E}[C]^{(1)},\\;B_{\\text{G}}^{(2)},\\;\\pi_{\\text{true}}^{(2)},\\;\\pi_{\\text{nom}}^{(2)},\\;\\mathbb{E}[C]^{(2)},\\;B_{\\text{G}}^{(3)},\\;\\pi_{\\text{true}}^{(3)},\\;\\pi_{\\text{nom}}^{(3)},\\;\\mathbb{E}[C]^{(3)}\\;].\n$$", "solution": "该问题要求根据成交量加权平均价格 (VWAP) 交易计划，计算与执行大宗交易相关的成本和风险的几个量。问题的核心在于，将基于高斯模型假设得出的风险指标与在更现实的市场回报 Student-$t$ 分布下的实际风险进行比较。\n\n验证步骤确认了问题陈述在科学上是合理的、适定的、客观的且内部一致的。所有必需的参数和模型都已明确定义，且提供的测试用例是有效的。因此，我们着手进行求解。\n\n每个测试用例的解决方案都涉及一系列计算，我们将在下面进行概述。设一个案例的给定参数为 $T$、$\\{V_t\\}_{t=1}^T$、$Q$、$\\sigma$、$p$、$\\nu$ 和 $\\eta$。\n\n**1. VWAP 交易计划和总成交量**\n首先，我们计算执行时间范围内的市场总成交量：\n$$\nV_{\\text{total}} = \\sum_{s=1}^{T} V_s\n$$\nVWAP 交易计划指定了在每个时间区间 $t$ 要交易的股数 $x_t$，其计算方式如下：\n$$\nx_t = Q \\cdot \\frac{V_t}{V_{\\text{total}}} \\quad \\text{for } t=1, \\dots, T\n$$\n根据构造，这确保了交易的总数量等于订单规模，即 $\\sum_{t=1}^{T} x_t = Q$。\n\n**2. 风险暴露系数, $W$**\n执行差额成本的随机部分与一个投资组合加权的累计回报因子成正比。随机因子 $Z$ 的权重是风险暴露系数 $W$。它定义为交易规模 $x_t$ 按时间相关因子 $\\kappa_t$ 加权后的总和：\n$$\nW = \\sum_{t=1}^{T} x_t \\kappa_t\n$$\n其中 $\\kappa_t$ 定义为 $\\kappa_t = \\sqrt{t/T}$。该系数汇总了在整个执行时间范围内对基础市场回报因子 $Z$ 的风险暴露。\n\n**3. 高斯校准的 VaR 预算, $B_{\\text{G}}$**\n风险经理假设回报因子 $Z$ 服从高斯分布，$Z \\sim \\mathcal{N}(0,\\sigma^2)$。随机成本为 $C_{\\text{stoch}} = Z \\cdot W$。在高斯假设下，$C_{\\text{stoch}} \\sim \\mathcal{N}(0, (\\sigma W)^2)$。在置信水平为 $p$ 的风险价值 (VaR) 是指一个损失值，预期有 $p$ 的概率不会超过它。相应的预算 $B_{\\text{G}}$ 计算如下：\n$$\nB_{\\text{G}} = z_p \\cdot \\sigma \\cdot W\n$$\n其中 $z_p$ 是标准正态分布的分位数，满足 $\\mathbb{P}(Z_{std} \\le z_p) = p$，其中 $Z_{std} \\sim \\mathcal{N}(0,1)$。这通过使用标准正态分布的反累积分布函数（CDF）计算，通常表示为 $\\Phi^{-1}(p)$。\n\n**4. 名义超出概率和真实超出概率, $\\pi_{\\text{nom}}$ 和 $\\pi_{\\text{true}}$**\n名义超出概率 $\\pi_{\\text{nom}}$ 是在假定的高斯模型下，随机成本超过预算 $B_{\\text{G}}$ 的概率。根据水平为 $p$ 的 VaR 的定义，此概率为：\n$$\n\\pi_{\\text{nom}} = \\mathbb{P}(Z \\cdot W > B_{\\text{G}}) = 1 - p\n$$\n问题陈述指出 $Z$ 的真实分布是一个经过缩放的 Student-$t$ 分布，$Z = s_\\nu \\cdot T_\\nu$，其中 $T_\\nu$ 是一个自由度为 $\\nu$ 的标准 Student-$t$ 随机变量。尺度因子 $s_\\nu$ 的选择是为了匹配方差，即 $\\mathrm{Var}(Z) = \\sigma^2$。由于当 $\\nu > 2$ 时，$\\mathrm{Var}(T_\\nu) = \\nu/(\\nu-2)$，因此尺度因子推导如下：\n$$\ns_\\nu^2 \\cdot \\frac{\\nu}{\\nu - 2} = \\sigma^2 \\implies s_\\nu = \\sigma \\sqrt{\\frac{\\nu - 2}{\\nu}}\n$$\n真实超出概率 $\\pi_{\\text{true}}$ 是随机成本超过高斯校准预算 $B_{\\text{G}}$ 的概率，但这是在真实的 Student-$t$ 分布下计算的：\n$$\n\\pi_{\\text{true}} = \\mathbb{P}(Z \\cdot W > B_{\\text{G}}) = \\mathbb{P}\\left(s_\\nu \\cdot T_\\nu \\cdot W > B_{\\text{G}}\\right)\n$$\n假设 $W > 0$（由于对所有 $t$ 都有 $x_t > 0$，所以该假设成立），我们可以分离出 $T_\\nu$：\n$$\n\\pi_{\\text{true}} = \\mathbb{P}\\left(T_\\nu > \\frac{B_{\\text{G}}}{W \\cdot s_\\nu}\\right) = 1 - F_{T_\\nu}\\left(\\frac{B_{\\text{G}}}{W \\cdot s_\\nu}\\right)\n$$\n其中 $F_{T_\\nu}$ 是自由度为 $\\nu$ 的标准 Student-$t$ 分布的累积分布函数（CDF）。CDF 的参数可以简化为：\n$$\n\\frac{B_{\\text{G}}}{W \\cdot s_\\nu} = \\frac{z_p \\cdot \\sigma \\cdot W}{W \\cdot \\sigma \\sqrt{\\frac{\\nu-2}{\\nu}}} = z_p \\sqrt{\\frac{\\nu}{\\nu-2}}\n$$\n这种简化在计算上是有利的，因为它不依赖于 $W$和 $\\sigma$，并且可以避免潜在的浮点数不精确问题。\n\n**5. 预期执行差额, $\\mathbb{E}[C]$**\n总执行差额为 $C = Z \\cdot W + \\eta \\cdot \\sum_{t=1}^{T} \\frac{x_t^2}{V_t}$。其期望值通过对每一项取期望来计算。由于 $W$、$\\eta$、$x_t$ 和 $V_t$ 是确定性的，并且 $\\mathbb{E}[Z]=0$：\n$$\n\\mathbb{E}[C] = \\mathbb{E}[Z] \\cdot W + \\eta \\cdot \\sum_{t=1}^{T} \\frac{x_t^2}{V_t} = 0 \\cdot W + \\eta \\cdot \\sum_{t=1}^{T} \\frac{x_t^2}{V_t}\n$$\n因此，预期成本完全由确定性的临时市场冲击引起：\n$$\n\\mathbb{E}[C] = \\eta \\cdot \\sum_{t=1}^{T} \\frac{x_t^2}{V_t}\n$$\n该数量通过将所有交易区间的冲击成本相加来计算。\n\n对每个测试用例执行这些步骤，以生成所需的四个输出值：$B_{\\text{G}}$、$\\pi_{\\text{true}}$、$\\pi_{\\text{nom}}$ 和 $\\mathbb{E}[C]$。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm, t\n\ndef solve():\n    \"\"\"\n    Solves the trade execution risk problem for a suite of test cases.\n    \"\"\"\n\n    test_cases = [\n        {\n            \"T\": 4, \"V\": [300000, 200000, 200000, 300000], \"Q\": 100000,\n            \"sigma\": 0.015, \"p\": 0.99, \"nu\": 5, \"eta\": 0.02\n        },\n        {\n            \"T\": 6, \"V\": [100000, 100000, 100000, 100000, 100000, 500000], \"Q\": 50000,\n            \"sigma\": 0.01, \"p\": 0.95, \"nu\": 3, \"eta\": 0.02\n        },\n        {\n            \"T\": 1, \"V\": [200000], \"Q\": 20000,\n            \"sigma\": 0.02, \"p\": 0.975, \"nu\": 100, \"eta\": 0.02\n        }\n    ]\n\n    results = []\n\n    for case in test_cases:\n        T = case[\"T\"]\n        V = np.array(case[\"V\"], dtype=float)\n        Q = case[\"Q\"]\n        sigma = case[\"sigma\"]\n        p = case[\"p\"]\n        nu = case[\"nu\"]\n        eta = case[\"eta\"]\n\n        # 1. Compute the VWAP schedule {x_t}\n        V_total = np.sum(V)\n        x = Q * V / V_total\n        \n        # 2. Compute the exposure coefficient W\n        t_indices = np.arange(1, T + 1)\n        kappa = np.sqrt(t_indices / T)\n        W = np.sum(x * kappa)\n        \n        # 3. Compute the Gaussian-calibrated budget B_G\n        z_p = norm.ppf(p)\n        B_G = z_p * sigma * W\n        \n        # 4. Compute nominal and true exceedance probabilities\n        pi_nom = 1.0 - p\n        \n        # The argument for the Student-t CDF can be simplified to avoid\n        # dependency on W and sigma, which improves numerical stability.\n        if nu > 2:\n            t_stat = z_p * np.sqrt(nu / (nu - 2))\n            pi_true = 1.0 - t.cdf(t_stat, df=nu)\n        else:\n            # Variance is undefined for nu = 2, problem statement guarantees nu > 2.\n            pi_true = np.nan\n\n        # 5. Compute the expected implementation shortfall E[C]\n        E_C = eta * np.sum(np.square(x) / V)\n\n        results.extend([B_G, pi_true, pi_nom, E_C])\n        \n    # Format the final output string with 6 decimal places per value.\n    formatted_results = [f\"{val:.6f}\" for val in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2422084"}, {"introduction": "尽管学生t分布等模型相较于正态分布已是巨大改进，但极值理论 (EVT) 为分析最极端的市场事件提供了一个更为强大和专业的框架。此练习 [@problem_id:2422085] 将指导你使用 EVT 来估算“百年一遇”市场崩盘的概率——这是一项标准分布模型难以胜任的任务。通过将 EVT 的结果与学生t分布的拟合结果进行比较，你将学会应用并体会到这项高级技术在关键风险分析中的价值。", "problem": "构建一个程序，该程序针对一种加密货币的合成每日对数回报率，使用极值理论（EVT）估计“百年一遇”单日崩盘的概率，并将其与通过Student t分布估计的概率进行比较。相对于每年$365$天的每日时间步长，“百年一遇”事件被定义为每日概率为 $1/(100 \\cdot 365)$ 的事件。所有概率都必须以小数形式表示（而非百分比）。\n\n定义与设置：\n- 设每日对数回报率序列表示为 $\\{r_t\\}_{t=1}^N$。\n- 定义损失变量 $Z_t = -r_t$。$Z_t$ 的上尾对应于 $r_t$ 的下尾（崩盘）。\n- 对于EVT模型，使用广义帕累托分布（GPD）来拟合 $Z_t$ 超过阈值 $U$ 的超额部分。阈值 $U$ 定义为样本 $\\{Z_t\\}_{t=1}^N$ 的经验 $(1-q)$-分位数，其中给定了 $q \\in (0,1)$。\n- 对于参数基准，对样本 $\\{r_t\\}_{t=1}^N$ 拟合一个位置参数为零的Student t分布。\n\n每个测试用例的任务：\n1. 使用提供的种子初始化伪随机数生成器，从一个中心化的Student t分布中生成 $N$ 个独立的每日对数回报率 $\\{r_t\\}$，该分布的自由度为 $\\nu$，尺度为 $s$。对于有限的 $\\nu$，该分布的概率密度关于零对称，并且比高斯分布具有更重的尾部。\n2. 使用由给定 $q$ 定义的阈值的EVT方法，在 $Z_t$ 的拟合尾部模型下，估计单日回报水平 $r_{100}^{\\mathrm{EVT}}$，其每日概率恰好为 $1/(100 \\cdot 365)$。这个 $r_{100}^{\\mathrm{EVT}}$ 是以对数回报率为单位的EVT“百年一遇”崩盘水平。\n3. 在拟合的Student t分布下，计算观测到单日回报小于或等于 $r_{100}^{\\mathrm{EVT}}$ 的概率（以小数表示）。将此概率记为 $p_{\\mathrm{t}@\\mathrm{EVT}}$。\n4. 在拟合的Student t分布下，计算相应的百年崩盘水平 $r_{100}^{\\mathrm{t}}$，即拟合Student t分布的 $(1/(100 \\cdot 365))$-分位数。\n5. 同时，报告EVT在其自身的百年水平上所隐含的概率，记为 $p_{\\mathrm{EVT}}$。根据EVT尾部模型的构造，当在模型上精确评估时，该值等于目标每日概率 $1/(100 \\cdot 365)$；报告通过实现得到的数值。\n\n测试套件：\n- 使用以下三个测试用例，每个用例由一个元组 $(S, N, \\nu, s, q)$ 指定，其中 $S$ 是种子， $N$ 是天数， $\\nu$ 是自由度， $s$ 是尺度， $q$ 是定义阈值的左尾概率：\n  - 案例 $1$：$(S, N, \\nu, s, q) = (123456, 10000, 5.0, 0.02, 0.1)$。\n  - 案例 $2$：$(S, N, \\nu, s, q) = (54321, 5000, 3.5, 0.03, 0.1)$。\n  - 案例 $3$：$(S, N, \\nu, s, q) = (999, 20000, 8.0, 0.015, 0.1)$。\n\n每个测试用例的所需输出（按此确切顺序）：\n- $p_{\\mathrm{EVT}}$：$r_{100}^{\\mathrm{EVT}}$ 处EVT隐含的每日概率。\n- $p_{\\mathrm{t}@\\mathrm{EVT}}$：$r \\le r_{100}^{\\mathrm{EVT}}$ 的Student t概率。\n- $r_{100}^{\\mathrm{EVT}}$：EVT“百年一遇”崩盘水平，以对数回报率为单位。\n- $r_{100}^{\\mathrm{t}}$：Student t“百年一遇”崩盘水平，以对数回报率为单位。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含所有三个测试用例的结果，按用例和值的顺序列出，并连接成一个用方括号括起来的逗号分隔列表。具体来说，输出必须是\n  $[p_{\\mathrm{EVT}}^{(1)}, p_{\\mathrm{t}@\\mathrm{EVT}}^{(1)}, r_{100}^{\\mathrm{EVT},(1)}, r_{100}^{\\mathrm{t},(1)}, p_{\\mathrm{EVT}}^{(2)}, p_{\\mathrm{t}@\\mathrm{EVT}}^{(2)}, r_{100}^{\\mathrm{EVT},(2)}, r_{100}^{\\mathrm{t},(2)}, p_{\\mathrm{EVT}}^{(3)}, p_{\\mathrm{t}@\\mathrm{EVT}}^{(3)}, r_{100}^{\\mathrm{EVT},(3)}, r_{100}^{\\mathrm{t},(3)}]$,\n  其中上标 $(i)$ 为测试用例的索引。所有概率都必须是小数，所有回报水平都以对数回报率为单位。", "solution": "所提出的问题是计算统计学领域中一个明确定义的练习，应用于量化金融领域。它要求比较两种用于建模资产回报尾部行为的不同方法：一种是使用Student t分布的参数化方法，另一种是基于极值理论（EVT）的半参数化方法。该问题具有科学依据，逻辑上一致，并为其解决提供了所有必要信息。因此，它被认为是有效的，并将构建一个解决方案。\n\n目标是为一个合成的每日对数回报率时间序列，估计极端负回报（即“百年一遇”的崩盘）的概率和幅度。“百年一遇”事件由其每日概率 $p_{100}$ 定义，计算方式如下：\n$$ p_{100} = \\frac{1}{100 \\text{ years} \\times 365 \\text{ days/year}} = \\frac{1}{36500} $$\n\n对于每个由参数 $(S, N, \\nu, s, q)$ 定义的测试用例，分析过程分为几个阶段，其中 $S$ 是随机种子， $N$ 是样本量， $\\nu$ 和 $s$ 是数据生成过程的参数， $q$ 用于设定EVT的阈值。\n\n首先，生成一个包含 $N$ 个每日对数回报率的合成数据集 $\\{r_t\\}_{t=1}^N$ 。这些回报是从一个自由度为 $\\nu$、位置为零、尺度为 $s$ 的Student t分布中抽取的独立同分布样本。使用Student t分布的原因在于它能够产生“重尾”现象，这是金融回报序列的一个典型化事实，意味着极端事件的发生概率比高斯分布预测的要高。\n\n接着，分析沿着两条平行的路径进行。\n\n路径1：使用Student t分布进行参数拟合\n整个数据集 $\\{r_t\\}$ 用于拟合一个Student t分布。问题指定了位置参数为零，因此拟合过程（通常是最大似然估计，MLE）会估计自由度 $\\hat{\\nu}$ 和尺度参数 $\\hat{s}$。拟合模型的概率密度函数对于一个回报 $r$ 如下：\n$$ f(r | \\hat{\\nu}, \\hat{s}) = \\frac{1}{\\hat{s}} f_{\\text{std}}(r/\\hat{s} | \\hat{\\nu}) = \\frac{\\Gamma((\\hat{\\nu}+1)/2)}{\\hat{s}\\sqrt{\\hat{\\nu}\\pi}\\Gamma(\\hat{\\nu}/2)} \\left(1 + \\frac{1}{\\hat{\\nu}}\\left(\\frac{r}{\\hat{s}}\\right)^2\\right)^{-(\\hat{\\nu}+1)/2} $$\n其中 $f_{\\text{std}}(\\cdot | \\hat{\\nu})$ 是标准Student t分布的概率密度函数。\n\n利用这个拟合的分布，我们计算“百年一遇”的崩盘水平 $r_{100}^{\\mathrm{t}}$。这是与累积概率 $p_{100}$ 对应的分布分位数。它是满足 $\\mathrm{P}(r \\le r_{100}^{\\mathrm{t}}) = p_{100}$ 的值。形式上，它通过对累积分布函数（CDF） $F_t$ 求逆得到：\n$$ r_{100}^{\\mathrm{t}} = F_t^{-1}(p_{100} | \\hat{\\nu}, 0, \\hat{s}) $$\n\n路径2：使用极值理论（EVT）进行半参数拟合\nEVT提供了一个对分布尾部进行建模的框架，而无需对整个分布做出强假设。这里采用了超阈值峰值（POT）方法。我们首先将回报 $r_t$ 转换为损失 $Z_t = -r_t$，这样大的损失就对应于 $Z_t$ 分布的上尾。\n\n选择一个高阈值 $U$。问题指定 $U$ 为损失样本 $\\{Z_t\\}$ 的经验 $(1-q)$-分位数。收集超过此阈值的超额部分，即 $Y_j = Z_j - U$（对于所有 $Z_j  U$）。设 $N_u$ 为此类超额部分的总数。Pickands-Balkema-de Haan 定理指出，对于一个足够高的阈值，这些超额部分的分布可以很好地由广义帕累托分布（GPD）来近似。GPD的累积分布函数（CDF）由下式给出：\n$$ G(y | \\xi, \\beta) = 1 - \\left(1 + \\frac{\\xi y}{\\beta}\\right)^{-1/\\xi} $$\n对于 $\\xi \\neq 0$，其中 $\\xi$ 是形状参数，$\\beta$ 是尺度参数。这些参数 $\\hat{\\xi}$ 和 $\\hat{\\beta}$ 是通过对超额样本 $\\{Y_j\\}$ 应用最大似然估计（MLE）来估计的。\n\n损失变量 $Z$ 的尾部概率可以表示为：\n$$ \\mathrm{P}(Z  z) = \\mathrm{P}(ZU) \\cdot \\mathrm{P}(Z-U  z-U | ZU) \\quad \\text{for } z  U $$\n第一项 $\\mathrm{P}(ZU)$ 通过经验估计为 $\\zeta_U = N_u/N$。第二项由拟合的GPD的生存函数给出，即 $S_{\\mathrm{GPD}}(z-U) = 1 - G(z-U | \\hat{\\xi}, \\hat{\\beta})$。由此得到尾部公式：\n$$ \\mathrm{P}(Z  z) \\approx \\frac{N_u}{N} \\left(1 + \\frac{\\hat{\\xi}(z-U)}{\\hat{\\beta}}\\right)^{-1/\\hat{\\xi}} $$\n为了找到EVT的“百年一遇”损失水平 $z_{100}^{\\mathrm{EVT}}$，我们将此概率设为 $p_{100}$ 并求解 $z$：\n$$ z_{100}^{\\mathrm{EVT}} = U + \\frac{\\hat{\\beta}}{\\hat{\\xi}} \\left[ \\left(\\frac{p_{100} \\cdot N}{N_u}\\right)^{-\\hat{\\xi}} - 1 \\right] $$\n相应的“百年一遇”崩盘回报水平是 $r_{100}^{\\mathrm{EVT}} = -z_{100}^{\\mathrm{EVT}}$。\n\n最后，将所需的输出汇总如下：\n1. $p_{\\mathrm{EVT}}$：这是EVT在其自身的“百年一遇”水平上所隐含的概率。根据 $r_{100}^{\\mathrm{EVT}}$ 的构造，这正是目标概率 $p_{100}$。它用作一致性检查。\n2. $p_{\\mathrm{t}@\\mathrm{EVT}}$：这是一个跨模型验证指标。它是观测到回报小于或等于EVT导出的崩盘水平 $r_{100}^{\\mathrm{EVT}}$ 的概率，但是使用拟合的Student t分布的CDF计算得出：$p_{\\mathrm{t}@\\mathrm{EVT}} = F_t(r_{100}^{\\mathrm{EVT}} | \\hat{\\nu}, 0, \\hat{s})$。该值显示了全局参数模型如何评估由关注尾部的EVT模型所识别的风险水平。\n3. $r_{100}^{\\mathrm{EVT}}$：EVT估计的“百年一遇”崩盘水平，以对数回报率为单位。\n4. $r_{100}^{\\mathrm{t}}$：Student t分布估计的“百年一遇”崩盘水平，以对数回报率为单位。\n\n通过比较 $r_{100}^{\\mathrm{EVT}}$ 与 $r_{100}^{\\mathrm{t}}$，以及 $p_{\\mathrm{t}@\\mathrm{EVT}}$ 与 $p_{\\mathrm{EVT}}$，可以评估两种极端风险评估建模方法之间的一致性和差异。下面的程序为每个指定的测试用例实现了这一完整过程。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import t, genpareto\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases, estimating crash probabilities and levels\n    using EVT (GPD) and Student's t-distribution models.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (S, N, nu, s, q)\n        (123456, 10000, 5.0, 0.02, 0.1),\n        (54321, 5000, 3.5, 0.03, 0.1),\n        (999, 20000, 8.0, 0.015, 0.1),\n    ]\n\n    all_results = []\n    \n    # Define the 100-year event probability\n    p_100_year = 1.0 / (100.0 * 365.0)\n\n    for case in test_cases:\n        S, N, nu, s, q = case\n        \n        # --- 1. Generate Data ---\n        # Initialize pseudo-random number generator with the seed\n        rng = np.random.default_rng(S)\n        # Generate N log-returns from a scaled Student's t-distribution\n        returns = s * rng.standard_t(nu, size=N)\n        \n        # Define the loss variable\n        losses = -returns\n\n        # --- 2. Student's t-distribution Analysis ---\n        # Fit a Student's t-distribution to the returns, fixing location to 0\n        nu_fit, _, s_fit = t.fit(returns, floc=0)\n\n        # --- 3. Extreme Value Theory (EVT) Analysis ---\n        # Determine the threshold U as the (1-q)-quantile of losses\n        U = np.quantile(losses, 1 - q)\n        \n        # Identify excesses above the threshold\n        excesses = losses[losses > U] - U\n        N_u = len(excesses)\n        \n        # Fit a Generalized Pareto Distribution (GPD) to the excesses\n        # floc=0 sets the GPD location to 0, as we are modeling excesses y = z - U\n        # The shape parameter 'c' from scipy corresponds to xi\n        # The scale parameter 'scale' from scipy corresponds to beta\n        xi_fit, _, beta_fit = genpareto.fit(excesses, floc=0)\n        \n        # --- 4. Calculate Required Quantities ---\n\n        # Output 1: p_EVT\n        # This is the target probability by construction of the EVT return level.\n        p_EVT = p_100_year\n\n        # Output 3: r_100_EVT\n        # Formula for the high quantile (loss level) from the GPD tail model\n        zeta_U = N_u / N\n        \n        # Handle the case xi_fit -> 0, though unlikely with float arithmetic.\n        # The formula remains continuous.\n        term = (p_100_year / zeta_U)**(-xi_fit)\n        z_100_EVT = U + (beta_fit / xi_fit) * (term - 1)\n        r_100_EVT = -z_100_EVT\n\n        # Output 2: p_t_@EVT\n        # The probability of the EVT crash level under the fitted t-distribution\n        p_t_at_EVT = t.cdf(r_100_EVT, df=nu_fit, loc=0, scale=s_fit)\n\n        # Output 4: r_100_t\n        # The 100-year crash level from the fitted t-distribution\n        # This is the p_100_year quantile.\n        r_100_t = t.ppf(p_100_year, df=nu_fit, loc=0, scale=s_fit)\n        \n        # Append results for the current case\n        all_results.extend([p_EVT, p_t_at_EVT, r_100_EVT, r_100_t])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{x:.10f}' for x in all_results)}]\")\n\nsolve()\n\n```", "id": "2422085"}]}