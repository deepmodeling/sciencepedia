{"hands_on_practices": [{"introduction": "在计算经济学和金融学中，模拟是理解和量化风险的核心工具。许多模拟都始于生成随机冲击，而高斯白噪声是这些不可预测波动的经典模型。这个练习将带你亲手实践一个基本但至关重要的任务：使用标准的Box-Muller变换从均匀分布的随机数中生成一个高斯白噪声过程的样本 [@problem_id:1350034]。通过这个练习，你将把白噪声从一个抽象的统计概念，转变为一个可以在你的模拟中使用的具体数值。", "problem": "一位工程师正在开发一个数字通信系统仿真，需要对信道噪声进行建模。该噪声被建模为一个离散时间高斯白噪声过程 $\\{W[n]\\}_{n=1,2,...}$，它是一个独立同分布的随机变量序列，每个变量都服从均值为零、方差为特定值的正态分布。\n\n该工程师使用一个标准的伪随机数生成器，该生成器产生一个从区间 $[0, 1)$ 上的均匀分布中抽取的数列 $\\{U_n\\}$。为了将这些数转换为标准正态随机变量 $\\{Z_n\\}$（均值 $\\mu=0$，方差 $\\sigma^2=1$），工程师采用了 Box-Muller 变换。该方法取两个独立的均匀随机变量 $U_1$ 和 $U_2$，并使用以下方程生成两个独立的标准正态随机变量 $Z_1$ 和 $Z_2$：\n$$Z_1 = \\sqrt{-2 \\ln(U_1)} \\cos(2\\pi U_2)$$\n$$Z_2 = \\sqrt{-2 \\ln(U_1)} \\sin(2\\pi U_2)$$\n然后，通过对标准正态变量序列 $\\{Z[n]\\}$ 进行适当的缩放，生成高斯白噪声过程 $\\{W[n]\\}$，以达到期望的方差 $\\sigma_W^2 = 7.5$。\n\n假设均匀随机数生成器产生的前两个数是 $U_1 = \\exp(-4.5)$ 和 $U_2 = 1/3$。使用这两个均匀随机数生成的第一个标准正态变量 $Z_1$，计算白噪声过程的相应第一个样本 $W[1]$。\n\n将您的答案表示为一个保留三位有效数字的实数。", "solution": "我们使用 Box–Muller 变换。给定 $U_{1}=\\exp(-4.5)$ 和 $U_{2}=\\frac{1}{3}$，第一个标准正态变量是\n$$\nZ_{1}=\\sqrt{-2\\ln(U_{1})}\\,\\cos(2\\pi U_{2}).\n$$\n由于 $\\ln(U_{1})=\\ln(\\exp(-4.5))=-4.5$，我们有\n$$\n-2\\ln(U_{1})=-2(-4.5)=9,\\quad \\sqrt{-2\\ln(U_{1})}=\\sqrt{9}=3.\n$$\n另外，\n$$\n\\cos(2\\pi U_{2})=\\cos\\!\\left(2\\pi\\cdot \\frac{1}{3}\\right)=\\cos\\!\\left(\\frac{2\\pi}{3}\\right)=-\\frac{1}{2}.\n$$\n因此，\n$$\nZ_{1}=3\\left(-\\frac{1}{2}\\right)=-\\frac{3}{2}.\n$$\n为了获得方差为 $\\sigma_{W}^{2}=7.5$ 的白噪声样本，将标准正态变量乘以 $\\sigma_{W}=\\sqrt{7.5}$ 进行缩放：\n$$\nW[1]=\\sqrt{\\sigma_{W}^{2}}\\,Z_{1}=\\sqrt{7.5}\\left(-\\frac{3}{2}\\right)=-\\frac{3}{2}\\sqrt{7.5}.\n$$\n数值上，$\\sqrt{7.5}\\approx 2.738612787$，因此\n$$\nW[1]\\approx -1.5\\times 2.738612787\\approx -4.107919181,\n$$\n保留三位有效数字后为 $-4.11$。", "answer": "$$\\boxed{-4.11}$$", "id": "1350034"}, {"introduction": "理解了如何生成白噪声之后，下一步是学习如何使用它。现实世界中的大多数时间序列，例如资产收益率或宏观经济指标，都不是白噪声，因为它们的值在时间上存在相关性。然而，白噪声是构建更复杂模型来捕捉这些相关性的基本“积木”。这个练习 [@problem_id:1350040] 将通过构建一个简单的一阶移动平均 (MA(1)) 过程来阐释这一原理，并计算其自协方差，揭示了时间序列的结构和“记忆”是如何从纯粹的随机冲击中产生的。", "problem": "一位数字信号处理工程师正在分析一个新设计的滤波器的输出。在离散时间点 $t$ 的输出信号，记为 $X_t$，由一个随机过程建模。该模型描述了输出如何受到一连串不可预测的随机电子波动的影响。其关系由以下方程给出：\n\n$$X_t = W_t + \\theta W_{t-1}$$\n\n这里，对于所有整数时间 $t$ 的序列 $\\{W_t\\}$ 代表一个离散时间白噪声过程。这意味着每个 $W_t$ 都是一个具有以下性质的随机变量：\n1.  对所有 $t$，均值（期望值）为零：$\\mathbb{E}[W_t] = 0$。\n2.  对所有 $t$，方差为一个常数值 $\\sigma_W^2$：$\\text{Var}(W_t) = \\sigma_W^2$。\n3.  不同时间点的值是不相关的：对于任何 $t \\neq s$，$\\text{Cov}(W_t, W_s) = 0$。\n\n参数 $\\theta$ 是一个固定的实值常数，它表征了滤波器的设计。为了理解某一时刻的随机波动如何影响下一时刻的信号，该工程师需要计算信号在时间 $t$ 的值与其在紧接着的下一个时间步 $t+1$ 的值之间的协方差。\n\n求协方差 $\\text{Cov}(X_t, X_{t+1})$。你的最终答案应该是一个用 $\\theta$ 和 $\\sigma_W^2$ 表示的符号表达式。", "solution": "我们给定了一阶移动平均过程：\n$$X_{t} = W_{t} + \\theta W_{t-1}, \\quad X_{t+1} = W_{t+1} + \\theta W_{t}.$$\n滞后一阶的协方差定义为\n$$\\text{Cov}(X_{t}, X_{t+1}) = \\mathbb{E}[X_{t}X_{t+1}] - \\mathbb{E}[X_{t}]\\,\\mathbb{E}[X_{t+1}].$$\n因为对所有 $t$ 都有 $\\mathbb{E}[W_{t}] = 0$，我们得到\n$$\\mathbb{E}[X_{t}] = \\mathbb{E}[W_{t} + \\theta W_{t-1}] = 0 + \\theta \\cdot 0 = 0,$$\n类似地，$\\mathbb{E}[X_{t+1}] = 0$。因此，\n$$\\text{Cov}(X_{t}, X_{t+1}) = \\mathbb{E}[X_{t}X_{t+1}].$$\n计算乘积：\n$$X_{t}X_{t+1} = (W_{t} + \\theta W_{t-1})(W_{t+1} + \\theta W_{t})\n= W_{t}W_{t+1} + \\theta W_{t}^{2} + \\theta W_{t-1}W_{t+1} + \\theta^{2} W_{t-1}W_{t}.$$\n取期望，并利用白噪声的性质 $\\mathbb{E}[W_{s}W_{t}] = 0$（对于 $s \\neq t$）和 $\\mathbb{E}[W_{t}^{2}] = \\text{Var}(W_{t}) = \\sigma_{W}^{2}$，我们得到\n$$\\mathbb{E}[X_{t}X_{t+1}] = 0 + \\theta\\,\\mathbb{E}[W_{t}^{2}] + 0 + 0 = \\theta \\sigma_{W}^{2}.$$\n因此，\n$$\\text{Cov}(X_{t}, X_{t+1}) = \\theta \\sigma_{W}^{2}.$$", "answer": "$$\\boxed{\\theta \\sigma_{W}^{2}}$$", "id": "1350040"}, {"introduction": "在建立时间序列模型（例如，解释股票回报）之后，我们如何判断模型的好坏？一个关键的诊断步骤是检查模型无法解释的部分——残差——是否仅仅是随机噪声。如果残差序列是白噪声，这通常意味着我们的模型已经成功地捕捉了数据中的所有可预测模式。这个计算练习 [@problem_id:2448045] 将向你介绍专业人士使用的统计工具，即学生t检验和Ljung-Box检验，以正式判断一个残差序列是否可以被视为白噪声。对于任何量化分析师来说，这都是一项至关重要的实践技能。", "problem": "您正在分析一家公司的季节性调整后的日销售额残差是否在零均值和无线性自相关方面表现得像弱白噪声。使用以下基本原理：根据定义，弱白噪声过程 $\\{e_t\\}$ 满足 $\\mathbb{E}[e_t] = 0$ 以及对于所有整数 $k \\neq 0$，$\\operatorname{Cov}(e_t, e_{t-k}) = 0$。要判断一个有限的观测序列在给定的显著性水平下是否与弱白噪声一致，请按以下基本原理进行：使用双边学生t检验来检验均值 $\\mathbb{E}[e_t]=0$；使用 Ljung-Box 综合统计量来检验滞后阶数最高为 $h$ 的零自相关的联合原假设。\n\n您的程序需要遵循的实现细节：\n- 零均值检验。设样本量为 $n$，样本均值为 $\\bar{e} = \\frac{1}{n}\\sum_{t=1}^{n} e_t$，无偏样本标准差为 $s = \\sqrt{\\frac{1}{n-1}\\sum_{t=1}^{n}(e_t - \\bar{e})^2}$。在原假设 $\\mathbb{E}[e_t] = 0$ 下，对于具有有限二阶矩的独立同分布数据，统计量\n$$\nT = \\frac{\\bar{e}}{s/\\sqrt{n}}\n$$\n服从自由度为 $n-1$ 的学生t分布。计算双边 $p$ 值，并与给定的显著性水平 $\\alpha$ 进行比较。\n- 自相关检验。对于每个滞后阶数 $k \\in \\{1,\\dots,h^\\ast\\}$（其中 $h^\\ast = \\min(h, n-1)$），计算样本自相关\n$$\n\\hat{r}_k = \\frac{\\sum_{t=k+1}^{n}(e_t - \\bar{e})(e_{t-k} - \\bar{e})}{\\sum_{t=1}^{n}(e_t - \\bar{e})^2}。\n$$\n然后计算 Ljung-Box 统计量\n$$\nQ = n(n+2)\\sum_{k=1}^{h^\\ast} \\frac{\\hat{r}_k^2}{n-k}。\n$$\n在所有 $k=1,\\dots,h^\\ast$ 的 $\\hat{r}_k = 0$ 的联合原假设下，对于较大的 $n$，$Q$ 近似服从自由度为 $h^\\ast$ 的卡方分布。计算相应的 $p$ 值，并与 $\\alpha$ 进行比较。\n- 决策规则。当且仅当两个检验在显著性水平 $\\alpha$ 下都未能拒绝原假设时，才将残差序列声明为“弱白噪声”，即 $p_{\\text{mean}} \\ge \\alpha$ 和 $p_{\\text{LB}} \\ge \\alpha$ 同时成立。\n- 退化方差处理。如果无偏样本方差恰好为零，则所有 $e_t$ 都相等。在这种情况下，将序列声明为“非白噪声”，除非所有 $e_t$ 都恰好为零——此时根据本练习的约定将其视为白噪声。此规则可防止检验统计量中出现未定义的除法。\n\n角度单位要求：下文使用的任何角度均以弧度为单位。\n\n测试套件。将上述决策规则应用于以下四个季节性调整后的残差序列，每个序列都有其指定的显著性水平 $\\alpha$ 和最大自相关滞后 $h$：\n\n- 情况1（理想情况：稀疏不相关残差）：$n=60$，$h=10$，$\\alpha=0.05$。残差为 $e_t = 0$（对所有 $t$），除了 $e_{6} = 1.0$ 和 $e_{51} = -1.0$。\n- 情况2（来自周模式的自相关残留）：$n=56$，$h=10$，$\\alpha=0.05$。残差为 $e_t = \\sin\\!\\left(\\frac{2\\pi t}{7}\\right)$（对于 $t=0,1,\\dots,55$），其中 $\\pi$ 是数学常数，角度以弧度为单位。\n- 情况3（未正确调整的恒定偏差；零方差的边界情况）：$n=30$，$h=5$，$\\alpha=0.05$。残差为常数 $e_t = 0.3$（对于所有 $t=1,\\dots,30$）。\n- 情况4（小样本，大的 $h$ 接近 $n$；$h$ 的边界情况）：$n=12$，$h=10$，$\\alpha=0.05$。残差为 $e_t = 0$（对所有 $t$），除了 $e_{1} = 1.0$ 和 $e_{12} = -1.0$。\n\n您的程序必须为每种情况计算一个布尔值，根据上述规则指示该残差在显著性水平 $\\alpha$ 下是否为弱白噪声。最终输出格式必须是仅包含一行，其中按顺序包含四个布尔结果，形式为方括号括起来的逗号分隔列表，例如“[True,False,True,False]”。不应打印任何其他文本。", "solution": "所陈述的问题将进行验证。\n\n**步骤1：提取给定信息**\n- **定义**：弱白噪声过程 $\\{e_t\\}$ 满足 $\\mathbb{E}[e_t] = 0$ 以及对于所有整数 $k \\neq 0$，$\\operatorname{Cov}(e_t, e_{t-k}) = 0$。\n- **检验1（均值）**：针对原假设 $\\mathbb{E}[e_t]=0$ 的双边学生t检验。统计量 $T = \\frac{\\bar{e}}{s/\\sqrt{n}}$ 服从自由度为 $n-1$ 的学生t分布，其中 $\\bar{e}$ 是样本均值，$s$ 是无偏样本标准差，$n$ 是样本量。\n- **检验2（自相关）**：针对滞后阶数最高为 $h$ 的零自相关的联合原假设的 Ljung-Box 检验。统计量 $Q = n(n+2)\\sum_{k=1}^{h^\\ast} \\frac{\\hat{r}_k^2}{n-k}$ 近似服从自由度为 $h^\\ast$ 的卡方分布，其中 $h^\\ast = \\min(h, n-1)$，$\\hat{r}_k$ 是滞后阶数为 $k$ 的样本自相关。\n- **决策规则**：当且仅当均值检验的 $p$ 值（$p_{\\text{mean}}$）和 Ljung-Box 检验的 $p$ 值（$p_{\\text{LB}}$）都大于或等于显著性水平 $\\alpha$ 时，序列才被分类为弱白噪声。\n- **退化情况**：如果样本方差为零，则仅当序列所有元素都为零时，该序列才是弱白噪声；否则不是。\n- **测试用例**：\n    - 情况1：$n=60, h=10, \\alpha=0.05$。残差 $e_t=0$ 除了 $e_{6} = 1.0, e_{51} = -1.0$。\n    - 情况2：$n=56, h=10, \\alpha=0.05$。残差 $e_t = \\sin(\\frac{2\\pi t}{7})$ 对于 $t=0,1,\\dots,55$。\n    - 情况3：$n=30, h=5, \\alpha=0.05$。残差 $e_t = 0.3$ 对于所有 $t$。\n    - 情况4：$n=12, h=10, \\alpha=0.05$。残差 $e_t=0$ 除了 $e_{1} = 1.0, e_{12} = -1.0$。\n\n**步骤2：使用提取的给定信息进行验证**\n评估问题的有效性。\n- **科学依据**：该问题基于时间序列分析中已确立的统计方法，即学生t检验和 Ljung-Box 检验。弱白噪声的定义和公式、检验统计量及其分布都是标准且正确的。\n- **适定性**：该问题为每个测试用例提供了所有必要的数据和参数。决策规则明确。每个用例都可以获得唯一的布尔结果。处理零方差退化情况的规范是清晰的，可以防止除以零的错误。\n- **客观性**：问题以精确、客观和定量的术语陈述。分类基于将计算出的 $p$ 值与给定的显著性水平进行比较，这是一个客观标准。\n\n**步骤3：结论与行动**\n该问题具有科学合理性、适定性和客观性。它不包含逻辑矛盾、未指定的参数或无法形式化的指令。在情况2中序列索引的轻微模糊性（即 $t=0, \\dots, 55$）是一个次要的符号问题，可以合理地解释为定义一个包含56个值的0索引序列，这在计算实践中是标准的。因此，该问题被视为**有效**。将构建一个解决方案。\n\n**解决方案设计**\n\n解决方案将作为一个程序来实现，该程序根据弱白噪声的标准评估四个指定的时间序列中的每一个。程序的核心是一个封装了单个时间序列逻辑的函数。该函数将按以下方式执行。\n\n首先，对于给定的序列 $\\{e_t\\}_{t=1}^n$，我们计算基本的样本统计量：样本量 $n$、样本均值 $\\bar{e} = \\frac{1}{n}\\sum_{t=1}^{n} e_t$ 和离均差平方和 $\\sum_{t=1}^{n}(e_t - \\bar{e})^2$。\n\n首先按规定处理一个特殊情况。如果离均差平方和为零（在浮点容差范围内），则意味着所有 $e_t$ 都相同且等于 $\\bar{e}$。根据问题的约定，当且仅当 $\\bar{e}=0$ 时，此退化序列才被视为弱白噪声。如果方差不为零，则继续进行统计检验。\n\n第一个检验处理零均值条件 $\\mathbb{E}[e_t]=0$。计算学生t统计量：\n$$\nT = \\frac{\\bar{e}}{s/\\sqrt{n}}\n$$\n其中 $s = \\sqrt{\\frac{1}{n-1}\\sum_{t=1}^{n}(e_t - \\bar{e})^2}$ 是无偏样本标准差。然后从自由度为 $n-1$ 的学生t分布中计算出双边 $p$ 值 $p_{\\text{mean}}$。\n\n第二个检验处理无自相关条件 $\\operatorname{Cov}(e_t, e_{t-k}) = 0$（对于 $k \\ne 0$）。这通过 Ljung-Box 检验来完成。我们首先确定有效最大滞后阶数 $h^\\ast = \\min(h, n-1)$。然后，对于从 $1$ 到 $h^\\ast$ 的每个滞后阶数 $k$，我们计算样本自相关：\n$$\n\\hat{r}_k = \\frac{\\sum_{t=k+1}^{n}(e_t - \\bar{e})(e_{t-k} - \\bar{e})}{\\sum_{t=1}^{n}(e_t - \\bar{e})^2}\n$$\n然后构造 Ljung-Box 统计量 $Q$ 为：\n$$\nQ = n(n+2)\\sum_{k=1}^{h^\\ast} \\frac{\\hat{r}_k^2}{n-k}\n$$\n相应的 $p$ 值 $p_{\\text{LB}}$ 从自由度为 $h^\\ast$ 的卡方（$\\chi^2$）分布中导出。\n\n最后，应用决策规则。当且仅当 $p_{\\text{mean}} \\ge \\alpha$ 和 $p_{\\text{LB}} \\ge \\alpha$ 这两个条件都满足时，序列才被分类为弱白噪声。为问题陈述中提供的四个测试用例中的每一个计算此布尔结果。每个用例的分析按脚本进行：\n- **情况1**：一个稀疏序列，含有两个非零项，其和为零。样本均值恰好为零（$p_{\\text{mean}}=1.0$）。非零项相距很远，因此滞后阶数最高为 $h=10$ 的自相关均为零。因此，$Q=0$（$p_{\\text{LB}}=1.0$）。两个检验都通过。\n- **情况2**：一个跨越整数个周期的完美正弦波。样本均值接近于零（$p_{\\text{mean}} \\approx 1.0$），但序列具有强周期性。滞后阶数 $k=7$ 的自相关会很高，导致一个大的 $Q$ 统计量和一个非常小的 $p_{\\text{LB}}$。自相关检验将失败。\n- **情况3**：一个非零常数序列。这属于退化方差类别。由于均值非零，根据特殊规则它被分类为非白噪声。\n- **情况4**：一个与情况1类似的稀疏序列。样本均值为零（$p_{\\text{mean}}=1.0$）。非零项位于序列的两端（$e_1, e_{12}$）。它们之间的距离是 $11$。由于我们测试的滞后阶数最高为 $h=10$，它们的相互作用没有被捕捉到，所有相关的样本自相关都为零。$Q=0$（$p_{\\text{LB}}=1.0$）。两个检验都通过。\n\n该实现将利用 `numpy` 库进行数值运算，并利用 `scipy.stats` 从 $t$ 分布和 $\\chi^2$ 分布中获取 $p$ 值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import t, chi2\n\ndef is_weak_white_noise(e: np.ndarray, h: int, alpha: float) -> bool:\n    \"\"\"\n    Tests if a time series behaves like weak white noise.\n\n    Args:\n        e: A numpy array representing the time series of residuals.\n        h: The maximum lag for the Ljung-Box test.\n        alpha: The significance level for the tests.\n\n    Returns:\n        True if the series is classified as weak white noise, False otherwise.\n    \"\"\"\n    n = len(e)\n    if n == 0:\n        return True # Convention for empty series\n\n    e_bar = np.mean(e)\n    sum_sq_dev = np.sum((e - e_bar)**2)\n\n    # Degenerate variance handling rule\n    if np.isclose(sum_sq_dev, 0):\n        # Variance is zero, so all elements are equal to the mean.\n        # It's white noise by convention only if the mean is also zero.\n        return np.isclose(e_bar, 0)\n\n    # 1. Mean-zero test (Student's t-test)\n    # Unbiased sample standard deviation\n    s = np.sqrt(sum_sq_dev / (n - 1))\n    \n    # Check for s=0 shouldn't be needed due to sum_sq_dev check, but for robustness:\n    if np.isclose(s, 0):\n        # This case is already covered by the sum_sq_dev check, but as a safeguard.\n        return np.isclose(e_bar, 0)\n        \n    t_statistic = e_bar / (s / np.sqrt(n))\n    df_t = n - 1\n    p_mean = t.sf(np.abs(t_statistic), df=df_t) * 2\n\n    # 2. Autocorrelation test (Ljung-Box)\n    h_star = min(h, n - 1)\n    \n    lb_sum = 0.0\n    for k in range(1, h_star + 1):\n        # Numerator: sum_{i=k to n-1} (e[i] - e_bar) * (e[i-k] - e_bar)\n        # using 0-indexed array 'e'\n        numerator = np.dot(e[k:] - e_bar, e[:-k] - e_bar)\n        r_k = numerator / sum_sq_dev\n        lb_sum += (r_k**2) / (n - k)\n\n    q_statistic = n * (n + 2) * lb_sum\n    df_q = h_star\n    \n    # Handle df_q=0 case (e.g., n=1, so h_star=0)\n    if df_q == 0:\n        p_lb = 1.0 # No autocorrelations to test\n    else:\n        p_lb = chi2.sf(q_statistic, df=df_q)\n\n    # 3. Decision rule\n    return p_mean >= alpha and p_lb >= alpha\n\ndef solve():\n    \"\"\"\n    Solves the problem by applying the white noise test to four specified cases.\n    \"\"\"\n    \n    # Case 1 (happy path: sparse uncorrelated residuals)\n    n1, h1, alpha1 = 60, 10, 0.05\n    e1 = np.zeros(n1)\n    e1[5] = 1.0   # e_6 in 1-based indexing\n    e1[50] = -1.0 # e_51 in 1-based indexing\n    \n    # Case 2 (autocorrelated leftovers from weekly pattern)\n    n2, h2, alpha2 = 56, 10, 0.05\n    t2 = np.arange(n2)\n    e2 = np.sin(2 * np.pi * t2 / 7)\n    \n    # Case 3 (misadjusted constant bias; boundary case with zero variance)\n    n3, h3, alpha3 = 30, 5, 0.05\n    e3 = np.full(n3, 0.3)\n    \n    # Case 4 (small sample, large h close to n; boundary on h)\n    n4, h4, alpha4 = 12, 10, 0.05\n    e4 = np.zeros(n4)\n    e4[0] = 1.0   # e_1 in 1-based indexing\n    e4[11] = -1.0 # e_12 in 1-based indexing\n\n    test_cases = [\n        (e1, h1, alpha1),\n        (e2, h2, alpha2),\n        (e3, h3, alpha3),\n        (e4, h4, alpha4),\n    ]\n\n    results = []\n    for e, h, alpha in test_cases:\n        result = is_weak_white_noise(e, h, alpha)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2448045"}]}