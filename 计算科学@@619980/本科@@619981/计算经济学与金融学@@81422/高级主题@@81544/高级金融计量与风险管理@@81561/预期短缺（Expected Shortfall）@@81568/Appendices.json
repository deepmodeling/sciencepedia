{"hands_on_practices": [{"introduction": "理论学习之后，首要任务是将预期亏损（Expected Shortfall, ES）应用于实践。第一个练习将探讨如何计算由两种相关风险资产组成的投资组合的ES。该练习的核心在于理解，投资组合的风险（及其ES）不仅仅是单个资产风险的简单叠加，它还取决于资产间的相关性以及它们在组合中的权重。通过该实践[@problem_id:2390659]，你将掌握如何从单个资产的统计特性（均值、波动率、相关性）推导出整个投资组合的尾部风险，这是风险管理和资产配置中的一项基本技能。", "problem": "给定一个由两种相关的风险资产和一种现金资产组成的投资组合。设风险资产收益的随机向量为 $R = (R_1, R_2)^\\top$，其中 $R$ 服从联合正态分布，其均值向量为 $\\mu = (\\mu_1, \\mu_2)^\\top$，协方差矩阵为\n$$\n\\Sigma = \\begin{pmatrix}\n\\sigma_1^2  \\rho\\,\\sigma_1 \\sigma_2 \\\\\n\\rho\\,\\sigma_1 \\sigma_2  \\sigma_2^2\n\\end{pmatrix}.\n$$\n设 $w_1$ 和 $w_2$ 分别表示两种风险资产的投资组合权重，剩余权重 $w_0 = 1 - w_1 - w_2$ 投资于收益为零、方差为零的现金资产。假设 $w_1 \\ge 0$，$w_2 \\ge 0$ 且 $w_1 + w_2 \\le 1$。定义投资组合收益为 $R_p = w_1 R_1 + w_2 R_2 + w_0 \\cdot 0 = w_1 R_1 + w_2 R_2$，投资组合亏损为 $L = -R_p$。设在尾部概率水平 $\\alpha \\in (0,1)$ 下的期望亏损（条件在险价值）为\n$$\n\\mathrm{ES}_\\alpha(L) = \\mathbb{E}\\!\\left[\\,L \\,\\middle|\\, L \\ge \\mathrm{VaR}_\\alpha(L)\\,\\right],\n$$\n其中 $\\mathrm{VaR}_\\alpha(L)$ 是在水平 $\\alpha$ 下的在险价值。\n\n使用的参数：\n- 风险资产均值：$\\mu_1 = 0.001$，$\\mu_2 = 0.0005$。\n- 风险资产波动率：$\\sigma_1 = 0.02$，$\\sigma_2 = 0.015$。\n- 相关系数：$\\rho = 0.4$。\n- 尾部概率水平：$\\alpha = 0.975$。\n\n任务：\n- 对于正方形 $[0,1]\\times[0,1]$ 上步长为 $0.01$ 的均匀网格上的权重 $(w_1,w_2)$，计算所有满足 $w_1 \\ge 0$，$w_2 \\ge 0$ 和 $w_1 + w_2 \\le 1$ 的可行点的 $\\mathrm{ES}_\\alpha(L)$。这将生成一个数值曲面，其水平集构成了在可行权重三角形上投资组合期望亏损的二维等高线表示。\n- 不要输出网格。而是为以下特定的权重对测试套件计算 $\\mathrm{ES}_\\alpha(L)$，并按给定顺序表示：\n  $$\n  (w_1,w_2) \\in \\{(0,0),\\ (1,0),\\ (0,1),\\ (0.3,0.2)\\}.\n  $$\n- 所有答案必须表示为实数（浮点数）。没有物理单位。尾部概率水平是 $(0,1)$ 内的小数，而不是百分比。\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，结果顺序与测试套件的顺序一致，每个值四舍五入到 $6$ 位小数（例如，$[x_1,x_2,x_3,x_4]$）。\n\n输入数据已在上方完全指定；您的程序不得读取任何输入，也不得访问外部资源。", "solution": "在尝试求解之前，对问题陈述进行验证。\n\n给定条件逐字提取如下：\n- 一个投资组合由两种相关的风险资产和一种现金资产组成。\n- 风险资产收益的随机向量为 $R = (R_1, R_2)^\\top$。\n- $R$ 服从联合正态分布，其均值向量为 $\\mu = (\\mu_1, \\mu_2)^\\top$，协方差矩阵为 $\\Sigma = \\begin{pmatrix} \\sigma_1^2  \\rho\\,\\sigma_1 \\sigma_2 \\\\ \\rho\\,\\sigma_1 \\sigma_2  \\sigma_2^2 \\end{pmatrix}$。\n- 风险资产的投资组合权重为 $w_1$ 和 $w_2$。\n- 现金资产的权重为 $w_0 = 1 - w_1 - w_2$，其收益为零，方差为零。\n- 约束条件为 $w_1 \\ge 0$，$w_2 \\ge 0$ 且 $w_1 + w_2 \\le 1$。\n- 投资组合收益为 $R_p = w_1 R_1 + w_2 R_2$。\n- 投资组合亏损为 $L = -R_p$。\n- 在尾部概率水平 $\\alpha \\in (0,1)$ 下的期望亏损为 $\\mathrm{ES}_\\alpha(L) = \\mathbb{E}\\!\\left[\\,L \\,\\middle|\\, L \\ge \\mathrm{VaR}_\\alpha(L)\\,\\right]$。\n- 在险价值为 $\\mathrm{VaR}_\\alpha(L)$。\n- 参数：$\\mu_1 = 0.001$，$\\mu_2 = 0.0005$，$\\sigma_1 = 0.02$，$\\sigma_2 = 0.015$，$\\rho = 0.4$，$\\alpha = 0.975$。\n- $(w_1,w_2)$ 的测试用例为 $\\{(0,0),\\ (1,0),\\ (0,1),\\ (0.3,0.2)\\}$。\n\n验证评估：\n该问题具有科学依据、良态且客观。这是一个计算金融学中的标准问题，基于投资组合理论和风险管理的既定原则。其数学设置涉及正态分布随机变量的线性组合，是一致的，并能导向一个唯一的、明确定义的解。所提供的参数在数值上是现实的。术语“尾部概率水平 $\\alpha$”略有歧义。金融领域的标准惯例将 $\\mathrm{ES}_\\alpha$ 和 $\\mathrm{VaR}_\\alpha$ 中的 $\\alpha$ 定义为置信水平（例如 $0.95$，$0.99$），其中相应的尾部概率为 $1-\\alpha$。鉴于 $\\alpha=0.975$ 这个值，我们将其解释为置信水平，这是一种标准的解释，使得问题没有歧义。因此，该问题被认定为**有效**。\n\n求解过程如下。\n\n首先，我们确定投资组合亏损 $L$ 的概率分布。投资组合收益 $R_p$ 是两个联合正态分布随机变量 $R_1$ 和 $R_2$ 的线性组合。设权重向量为 $w = (w_1, w_2)^\\top$。投资组合收益可以写为 $R_p = w^\\top R$。\n因为 $R \\sim \\mathcal{N}(\\mu, \\Sigma)$，所以投资组合收益 $R_p$ 也服从正态分布。\n投资组合收益的均值 $\\mu_p$ 为：\n$$ \\mu_p = \\mathbb{E}[R_p] = \\mathbb{E}[w^\\top R] = w^\\top \\mu = w_1 \\mu_1 + w_2 \\mu_2 $$\n投资组合收益的方差 $\\sigma_p^2$ 为：\n$$ \\sigma_p^2 = \\mathrm{Var}(R_p) = \\mathrm{Var}(w^\\top R) = w^\\top \\Sigma w = w_1^2 \\sigma_1^2 + w_2^2 \\sigma_2^2 + 2 w_1 w_2 \\rho \\sigma_1 \\sigma_2 $$\n因此，$R_p \\sim \\mathcal{N}(\\mu_p, \\sigma_p^2)$。\n\n投资组合亏损定义为 $L = -R_p$。作为正态随机变量的仿射变换，$L$ 也服从正态分布。\n投资组合亏损的均值 $\\mu_L$ 为：\n$$ \\mu_L = \\mathbb{E}[L] = \\mathbb{E}[-R_p] = -\\mu_p = -(w_1 \\mu_1 + w_2 \\mu_2) $$\n投资组合亏损的方差 $\\sigma_L^2$ 为：\n$$ \\sigma_L^2 = \\mathrm{Var}(L) = \\mathrm{Var}(-R_p) = (-1)^2 \\mathrm{Var}(R_p) = \\sigma_p^2 $$\n亏损的标准差为 $\\sigma_L = \\sigma_p$。\n所以，亏损分布为 $L \\sim \\mathcal{N}(\\mu_L, \\sigma_L^2)$。\n\n其次，我们为这个正态分布构建期望亏损 $\\mathrm{ES}_\\alpha(L)$ 的公式。给定的定义是 $\\mathrm{ES}_\\alpha(L) = \\mathbb{E}[L \\mid L \\ge \\mathrm{VaR}_\\alpha(L)]$。\n在险价值 $\\mathrm{VaR}_\\alpha(L)$ 是亏损分布 $L$ 的 $\\alpha$-分位数。设 $z_\\alpha = \\Phi^{-1}(\\alpha)$ 是标准正态分布 $\\mathcal{N}(0,1)$ 的 $\\alpha$-分位数，其中 $\\Phi(\\cdot)$ 是标准正态累积分布函数（CDF）。\n然后，通过对 $L$ 进行标准化来找到 $\\mathrm{VaR}_\\alpha(L)$：\n$$ P(L \\le \\mathrm{VaR}_\\alpha(L)) = P\\left(\\frac{L - \\mu_L}{\\sigma_L} \\le \\frac{\\mathrm{VaR}_\\alpha(L) - \\mu_L}{\\sigma_L}\\right) = \\Phi\\left(\\frac{\\mathrm{VaR}_\\alpha(L) - \\mu_L}{\\sigma_L}\\right) = \\alpha $$\n这意味着 $\\frac{\\mathrm{VaR}_\\alpha(L) - \\mu_L}{\\sigma_L} = z_\\alpha$，得到：\n$$ \\mathrm{VaR}_\\alpha(L) = \\mu_L + \\sigma_L z_\\alpha $$\n现在，$\\mathrm{ES}_\\alpha(L)$ 是 $L$ 在 $c = \\mathrm{VaR}_\\alpha(L)$ 处从下方截断的期望值。对于一个一般的正态变量 $X \\sim \\mathcal{N}(\\mu, \\sigma^2)$，其条件期望由以下公式给出：\n$$ \\mathbb{E}[X \\mid X \\ge c] = \\mu + \\sigma \\frac{\\phi((c-\\mu)/\\sigma)}{1 - \\Phi((c-\\mu)/\\sigma)} $$\n其中 $\\phi(\\cdot)$ 是标准正态概率密度函数（PDF）。\n在我们的情况下，$X=L$，$\\mu=\\mu_L$，$\\sigma=\\sigma_L$，且 $c = \\mathrm{VaR}_\\alpha(L)$。标准化的截断点是：\n$$ \\frac{c - \\mu_L}{\\sigma_L} = \\frac{(\\mu_L + \\sigma_L z_\\alpha) - \\mu_L}{\\sigma_L} = z_\\alpha $$\n将此代入条件期望公式，得到期望亏损的公式：\n$$ \\mathrm{ES}_\\alpha(L) = \\mu_L + \\sigma_L \\frac{\\phi(z_\\alpha)}{1 - \\Phi(z_\\alpha)} $$\n根据定义 $\\Phi(z_\\alpha) = \\alpha$，我们得到最终的解析表达式：\n$$ \\mathrm{ES}_\\alpha(L) = \\mu_L + \\sigma_L \\frac{\\phi(z_\\alpha)}{1 - \\alpha} $$\n\n第三，我们使用指定的参数将此公式应用于给定的测试案例：$\\mu_1 = 0.001$，$\\mu_2 = 0.0005$，$\\sigma_1 = 0.02$，$\\sigma_2 = 0.015$，$\\rho = 0.4$ 和 $\\alpha = 0.975$。\n分位数 $z_{0.975} = \\Phi^{-1}(0.975) \\approx 1.959964$。分母为 $1 - \\alpha = 0.025$。\n\n情况1：$(w_1, w_2) = (0, 0)$。\n投资组合仅持有现金资产。\n$\\mu_L = -(0 \\cdot \\mu_1 + 0 \\cdot \\mu_2) = 0$。\n$\\sigma_L^2 = 0$，所以 $\\sigma_L = 0$。\n$\\mathrm{ES}_{0.975}(L) = 0 + 0 \\cdot \\frac{\\phi(z_{0.975})}{0.025} = 0$。\n\n情况2：$(w_1, w_2) = (1, 0)$。\n投资组合完全投资于资产1。\n$\\mu_L = -(1 \\cdot 0.001 + 0 \\cdot 0.0005) = -0.001$。\n$\\sigma_L = \\sigma_1 = 0.02$。\n$\\mathrm{ES}_{0.975}(L) = -0.001 + 0.02 \\cdot \\frac{\\phi(z_{0.975})}{0.025} \\approx 0.045753$。\n\n情况3：$(w_1, w_2) = (0, 1)$。\n投资组合完全投资于资产2。\n$\\mu_L = -(0 \\cdot 0.001 + 1 \\cdot 0.0005) = -0.0005$。\n$\\sigma_L = \\sigma_2 = 0.015$。\n$\\mathrm{ES}_{0.975}(L) = -0.0005 + 0.015 \\cdot \\frac{\\phi(z_{0.975})}{0.025} \\approx 0.034565$。\n\n情况4：$(w_1, w_2) = (0.3, 0.2)$。\n$\\mu_L = -(0.3 \\cdot 0.001 + 0.2 \\cdot 0.0005) = -(0.0003 + 0.0001) = -0.0004$。\n$\\sigma_L^2 = (0.3)^2(0.02)^2 + (0.2)^2(0.015)^2 + 2(0.3)(0.2)(0.4)(0.02)(0.015) = 0.0000594$。\n$\\sigma_L = \\sqrt{0.0000594} \\approx 0.00770714$。\n$\\mathrm{ES}_{0.975}(L) = -0.0004 + 0.00770714 \\cdot \\frac{\\phi(z_{0.975})}{0.025} \\approx 0.017597$。\n\n这些计算在提供的程序中实现，以产生最终的数值答案。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Calculates the Expected Shortfall (ES) for a two-asset portfolio for specific weight combinations.\n    \"\"\"\n    # Define the parameters given in the problem statement.\n    mu1 = 0.001\n    mu2 = 0.0005\n    sigma1 = 0.02\n    sigma2 = 0.015\n    rho = 0.4\n    alpha = 0.975\n\n    # Define the test suite of specific weight pairs.\n    test_cases = [\n        (0.0, 0.0),\n        (1.0, 0.0),\n        (0.0, 1.0),\n        (0.3, 0.2),\n    ]\n\n    # Pre-compute constants related to the standard normal distribution.\n    # z_alpha is the alpha-quantile of the standard normal distribution.\n    z_alpha = norm.ppf(alpha)\n    \n    # This is the term phi(z_alpha) / (1 - alpha) from the ES formula for a normal distribution.\n    pdf_over_tail = norm.pdf(z_alpha) / (1.0 - alpha)\n\n    results = []\n    for w1, w2 in test_cases:\n        # Calculate the mean of the portfolio loss (L = -R_p).\n        # mu_L = -E[R_p] = -(w1*mu1 + w2*mu2)\n        mu_L = -(w1 * mu1 + w2 * mu2)\n\n        # Calculate the variance of the portfolio return, which is equal to the variance of the loss.\n        # var_p = w1^2*sigma1^2 + w2^2*sigma2^2 + 2*w1*w2*rho*sigma1*sigma2\n        var_p = (w1 * sigma1)**2 + (w2 * sigma2)**2 + 2 * w1 * w2 * rho * sigma1 * sigma2\n        \n        # The standard deviation of the loss.\n        sigma_L = np.sqrt(var_p)\n\n        # Calculate Expected Shortfall (ES_alpha) using the derived formula for normal distributions:\n        # ES_alpha(L) = mu_L + sigma_L * (phi(z_alpha) / (1 - alpha))\n        es = mu_L + sigma_L * pdf_over_tail\n        results.append(es)\n\n    # Format the results to 6 decimal places as required.\n    formatted_results = [f\"{r:.6f}\" for r in results]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2390659"}, {"introduction": "简单的正态分布假设虽然便于计算，但往往无法捕捉金融市场的动态变化。在第二个练习中，我们将引入一个更高级的模型——马尔可夫转换模型（Markov-switching model）——来描述一个在不同市场“状态”（如高波动与低波动）间切换的投资组合。这个练习[@problem_id:2390701]将教会你如何区分和计算两种不同类型的预期亏损：特定市场状态下的条件ES，以及考虑了状态转换的长期无条件ES。通过这个练习，你将体会到动态建模在精确风险评估中的重要性。", "problem": "考虑一个单期投资组合回报的双机制马尔可夫转换模型。令时间 $t$ 的潜在机制为 $S_t \\in \\{1,2\\}$。在 $S_t = s$ 的条件下，投资组合回报 $R_t$ 服从均值为 $\\mu_s$、方差为 $\\sigma_s^2$ 的正态分布，即 $R_t \\mid (S_t = s) \\sim \\mathcal{N}(\\mu_s, \\sigma_s^2)$，其中 $s \\in \\{1,2\\}$。机制过程 $\\{S_t\\}$ 服从一个双状态时间齐次马尔可夫链，其转移矩阵为\n$$\nP \\;=\\; \\begin{bmatrix}\np_{11}  p_{12} \\\\\np_{21}  p_{22}\n\\end{bmatrix},\n$$\n其中 $p_{ij} = \\mathbb{P}(S_{t+1} = j \\mid S_t = i)$ 且 $p_{11} + p_{12} = 1$, $p_{21} + p_{22} = 1$。将损失定义为 $L_t = -R_t$，并固定一个尾部概率水平 $q \\in (0,1)$，该值被解释为损失分布右尾的概率质量。风险价值（Value-at-Risk）阈值 $c_q$ 由 $\\mathbb{P}(L_t \\ge c_q) = q$ 隐式定义。在尾部概率 $q$ 下的期望亏损（Expected Shortfall，或称条件风险价值，Conditional Value-at-Risk）定义为\n$$\n\\mathrm{ES}(q) \\;=\\; \\mathbb{E}\\!\\left[\\,L_t \\,\\middle|\\, L_t \\ge c_q \\,\\right].\n$$\n\n对于每个机制 $s \\in \\{1,2\\}$，使用条件损失分布 $L_t \\mid (S_t = s) \\sim \\mathcal{N}(-\\mu_s, \\sigma_s^2)$ 来定义机制条件期望亏损 $\\mathrm{ES}_s(q)$。使用通过马尔可夫链的平稳概率混合两个高斯分量得到的无条件损失分布，来定义无条件混合期望亏损 $\\mathrm{ES}_{\\mathrm{mix}}(q)$。设平稳分布为向量 $\\pi = (\\pi_1, \\pi_2)$，满足 $\\pi = \\pi P$ 和 $\\pi_1 + \\pi_2 = 1$，且 $\\pi_1  0$ 和 $\\pi_2  0$。\n\n将具有较大标准差 $\\sigma_s$ 的机制确定为高波动机制，将具有较小标准差的机制确定为低波动机制。对于下方的每个测试用例，您必须按此顺序计算三个量：高波动机制下的期望亏损 $\\mathrm{ES}_{\\text{high}}(q)$、低波动机制下的期望亏损 $\\mathrm{ES}_{\\text{low}}(q)$，以及无条件混合期望亏损 $\\mathrm{ES}_{\\mathrm{mix}}(q)$。所有输出必须以十进制回报单位（而非百分比）表示，每个值都需四舍五入到恰好八位小数。\n\n测试集。对于每个用例，元组列出了 $(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2, P, q)$，其中\n$$\nP \\,=\\, \\begin{bmatrix} p_{11}  p_{12} \\\\ p_{21}  p_{22} \\end{bmatrix}.\n$$\n- 用例 $1$：$(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (\\,0.0005,\\, 0.01,\\, -0.0005,\\, 0.03\\,)$，$P = \\begin{bmatrix} 0.95  0.05 \\\\ 0.10  0.90 \\end{bmatrix}$，$q = 0.01$。\n- 用例 $２$：$(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (\\,0.0,\\, 0.01,\\, 0.0,\\, 0.02\\,)$，$P = \\begin{bmatrix} 0.90  0.10 \\\\ 0.10  0.90 \\end{bmatrix}$，$q = 0.05$。\n- 用例 $３$：$(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (\\,0.0002,\\, 0.005,\\, -0.0002,\\, 0.05\\,)$，$P = \\begin{bmatrix} 0.995  0.005 \\\\ 0.005  0.995 \\end{bmatrix}$，$q = 0.02$。\n- 用例 $４$：$(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (\\,0.0001,\\, 0.001,\\, -0.0001,\\, 0.04\\,)$，$P = \\begin{bmatrix} 0.50  0.50 \\\\ 0.50  0.50 \\end{bmatrix}$，$q = 0.001$。\n\n您的程序必须：\n- 对于每个用例，通过比较 $\\sigma_1$ 和 $\\sigma_2$ 来确定哪个是高波动机制，哪个是低波动机制。\n- 使用机制条件的常态损失分布，根据第一性原理计算 $\\mathrm{ES}_{\\text{high}}(q)$ 和 $\\mathrm{ES}_{\\text{low}}(q)$。\n- 使用 $P$ 的平稳分布 $\\pi$ 和两个正态损失分量的无条件混合，根据第一性原理计算 $\\mathrm{ES}_{\\mathrm{mix}}(q)$。\n\n最终输出格式。您的程序应生成单行输出，其中包含一个浮点数的扁平列表，顺序如下\n$$\n\\big[\\, \\mathrm{ES}_{\\text{high}}^{(1)},\\, \\mathrm{ES}_{\\text{low}}^{(1)},\\, \\mathrm{ES}_{\\mathrm{mix}}^{(1)},\\, \\mathrm{ES}_{\\text{high}}^{(2)},\\, \\mathrm{ES}_{\\text{low}}^{(2)},\\, \\mathrm{ES}_{\\mathrm{mix}}^{(2)},\\, \\mathrm{ES}_{\\text{high}}^{(3)},\\, \\mathrm{ES}_{\\text{low}}^{(3)},\\, \\mathrm{ES}_{\\mathrm{mix}}^{(3)},\\, \\mathrm{ES}_{\\text{high}}^{(4)},\\, \\mathrm{ES}_{\\text{low}}^{(4)},\\, \\mathrm{ES}_{\\mathrm{mix}}^{(4)} \\,\\big],\n$$\n不含空格，其中上标 $(i)$ 指的是测试用例 $i$。每个数字都必须四舍五入到恰好八位小数。该行必须以方括号括起来的逗号分隔列表的形式打印，例如 $[x_1,x_2,\\dots,x_{12}]$。", "solution": "该问题经过了严格的验证。\n\n### 步骤1：提取给定信息\n- **模型**：一个单期投资组合回报 $R_t$ 的双机制马尔可夫转换模型。\n- **潜在机制**：$S_t \\in \\{1,2\\}$，服从一个时间齐次马尔可夫链。\n- **转移矩阵**：$P = \\begin{bmatrix} p_{11}  p_{12} \\\\ p_{21}  p_{22} \\end{bmatrix}$，其中 $p_{ij} = \\mathbb{P}(S_{t+1} = j \\mid S_t = i)$。\n- **条件回报分布**：$R_t \\mid (S_t = s) \\sim \\mathcal{N}(\\mu_s, \\sigma_s^2)$。\n- **损失定义**：$L_t = -R_t$。因此，条件损失分布为 $L_t \\mid (S_t = s) \\sim \\mathcal{N}(-\\mu_s, \\sigma_s^2)$。\n- **尾部概率**：一个固定水平 $q \\in (0,1)$。\n- **风险价值 (VaR)**：由 $\\mathbb{P}(L_t \\ge c_q) = q$ 定义的 $c_q$。\n- **期望亏损 (ES)**：$\\mathrm{ES}(q) = \\mathbb{E}[L_t \\mid L_t \\ge c_q]$。\n- **机制条件ES**：$\\mathrm{ES}_s(q)$ 是针对损失分布 $L_t \\mid (S_t = s)$ 的ES。\n- **无条件混合ES**：$\\mathrm{ES}_{\\mathrm{mix}}(q)$ 是针对无条件损失分布的ES，该分布是由马尔可夫链的平稳概率 $\\pi = (\\pi_1, \\pi_2)$ 加权的两个条件分布的混合。\n- **平稳分布**：$\\pi$ 是满足 $\\pi = \\pi P$ 和 $\\pi_1 + \\pi_2 = 1$ 的向量。\n- **机制识别**：高波动机制具有较大的 $\\sigma_s$，低波动机制具有较小的 $\\sigma_s$。\n- **任务**：对于四个测试用例，计算 $\\mathrm{ES}_{\\text{high}}(q)$、$\\mathrm{ES}_{\\text{low}}(q)$ 和 $\\mathrm{ES}_{\\mathrm{mix}}(q)$。\n- **测试用例**：\n    1. $(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (0.0005, 0.01, -0.0005, 0.03)$，$P = \\begin{bmatrix} 0.95  0.05 \\\\ 0.10  0.90 \\end{bmatrix}$，$q = 0.01$。\n    2. $(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (0.0, 0.01, 0.0, 0.02)$，$P = \\begin{bmatrix} 0.90  0.10 \\\\ 0.10  0.90 \\end{bmatrix}$，$q = 0.05$。\n    3. $(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (0.0002, 0.005, -0.0002, 0.05)$，$P = \\begin{bmatrix} 0.995  0.005 \\\\ 0.005  0.995 \\end{bmatrix}$，$q = 0.02$。\n    4. $(\\mu_1, \\sigma_1, \\mu_2, \\sigma_2) = (0.0001, 0.001, -0.0001, 0.04)$，$P = \\begin{bmatrix} 0.50  0.50 \\\\ 0.50  0.50 \\end{bmatrix}$，$q = 0.001$。\n\n### 步骤2：使用提取的给定信息进行验证\n该问题具有科学依据，基于金融计量经济学和风险管理的标准原则。马尔可夫转换模型、风险价值和期望亏损都是经典的概念。该问题是适定的（well-posed），为待计算的量提供了所有必要的参数和明确的定义。其数学结构保证了唯一且有意义的解的存在。问题陈述是客观的，不含任何主观或推测性内容。未发现清单中的任何缺陷。\n\n### 步骤3：结论与行动\n问题有效。以下是合理的解决方案。\n\n---\n\n### 求解方法\n\n该问题要求为一个源自双机制马尔可夫转换模型的损失过程计算三种类型的期望亏损（ES）。核心原则阐述如下。\n\n**1. 机制条件期望亏损**\n\n对于一个代表损失的随机变量 $L$，若其服从正态分布 $L \\sim \\mathcal{N}(\\mu_L, \\sigma_L^2)$，则在尾部概率 $q$ 下的期望亏损由以下公式给出：\n$$\n\\mathrm{ES}(q) = \\mu_L + \\sigma_L \\frac{\\phi(\\Phi^{-1}(1-q))}{q}\n$$\n其中 $\\phi(\\cdot)$ 是标准正态概率密度函数（PDF），$\\Phi(\\cdot)$ 是标准正态累积分布函数（CDF）。\n\n在此问题中，机制 $s$ 下的回报为 $R_s \\sim \\mathcal{N}(\\mu_s, \\sigma_s^2)$。损失为 $L_s = -R_s$，因此其分布为 $L_s \\sim \\mathcal{N}(-\\mu_s, \\sigma_s^2)$。损失的均值为 $\\mu_{L,s} = -\\mu_s$，其标准差为 $\\sigma_{L,s} = \\sigma_s$。将这些代入通用公式，得到机制条件ES：\n$$\n\\mathrm{ES}_s(q) = -\\mu_s + \\sigma_s \\frac{\\phi(z_q)}{q}\n$$\n其中 $z_q = \\Phi^{-1}(1-q)$ 是标准正态分布的 $(1-q)$-分位数。我们为高波动机制（$\\mathrm{ES}_{\\text{high}}(q)$）和低波动机制（$\\mathrm{ES}_{\\text{low}}(q)$）计算此量，这些机制通过比较 $\\sigma_1$ 和 $\\sigma_2$ 的值来确定。\n\n**2. 无条件混合期望亏损**\n\n$\\mathrm{ES}_{\\mathrm{mix}}(q)$ 的计算是一个多步骤过程。\n\n**步骤 2a：平稳分布**\n损失的无条件分布是两个机制条件分布的混合，由马尔可夫链的平稳概率加权。对于一个 $2 \\times 2$ 的转移矩阵 $P = \\begin{bmatrix} p_{11}  p_{12} \\\\ p_{21}  p_{22} \\end{bmatrix}$，平稳概率 $\\pi = (\\pi_1, \\pi_2)$ 通过求解线性系统 $\\pi P = \\pi$（满足 $\\pi_1 + \\pi_2 = 1$）得到。其解为：\n$$\n\\pi_1 = \\frac{p_{21}}{p_{12} + p_{21}}, \\quad \\pi_2 = \\frac{p_{12}}{p_{12} + p_{21}}\n$$\n这假设链是不可约的，即 $p_{12} + p_{21}  0$，所有测试用例均满足此条件。\n\n**步骤 2b：混合分布的风险价值**\n无条件损失 $L$ 的混合累积分布函数（CDF）为 $F_L(c) = \\pi_1 F_1(c) + \\pi_2 F_2(c)$，其中 $F_s(c)$ 是机制 $s$ 下损失的CDF，$L_s \\sim \\mathcal{N}(-\\mu_s, \\sigma_s^2)$。具体而言，$F_s(c) = \\Phi\\left(\\frac{c - (-\\mu_s)}{\\sigma_s}\\right) = \\Phi\\left(\\frac{c+\\mu_s}{\\sigma_s}\\right)$。\n风险价值 $c_q$ 由条件 $\\mathbb{P}(L \\ge c_q) = q$ 定义，这等价于 $F_L(c_q) = 1-q$。这给出了关于 $c_q$ 的非线性方程：\n$$\n\\pi_1 \\Phi\\left(\\frac{c_q+\\mu_1}{\\sigma_1}\\right) + \\pi_2 \\Phi\\left(\\frac{c_q+\\mu_2}{\\sigma_2}\\right) = 1-q\n$$\n该方程必须进行数值求解，例如，使用 Brent 方法。\n\n**步骤 2c：混合分布的期望亏损**\n混合ES是条件期望 $\\mathrm{ES}_{\\mathrm{mix}}(q) = \\mathbb{E}[L \\mid L \\ge c_q]$。其计算方式如下：\n$$\n\\mathrm{ES}_{\\mathrm{mix}}(q) = \\frac{1}{q} \\int_{c_q}^{\\infty} c \\cdot f_L(c) \\, dc = \\frac{1}{q} \\left( \\pi_1 \\int_{c_q}^{\\infty} c \\cdot f_1(c) \\, dc + \\pi_2 \\int_{c_q}^{\\infty} c \\cdot f_2(c) \\, dc \\right)\n$$\n其中 $f_s(c)$ 是损失分布 $L_s$ 的PDF。积分 $\\int_{c_q}^{\\infty} c \\cdot f_s(c) \\, dc$ 是正态分布 $L_s$ 的一阶部分矩。对于一个正态变量 $X \\sim \\mathcal{N}(\\mu, \\sigma^2)$，此部分矩由 $\\mu \\cdot \\mathbb{P}(X  c_q) + \\sigma \\cdot \\phi((c_q - \\mu)/\\sigma)$ 给出。对于我们的损失 $L_s \\sim \\mathcal{N}(-\\mu_s, \\sigma_s^2)$，这变为：\n$$\n\\int_{c_q}^{\\infty} c \\cdot f_s(c) \\, dc = (-\\mu_s)\\left(1 - \\Phi\\left(\\frac{c_q+\\mu_s}{\\sigma_s}\\right)\\right) + \\sigma_s \\phi\\left(\\frac{c_q+\\mu_s}{\\sigma_s}\\right)\n$$\n通过将每个机制的此表达式代入 $\\mathrm{ES}_{\\mathrm{mix}}(q)$ 的公式中，我们得到最终值。\n\n该算法的实现遵循了为每个提供的测试用例所制定的这些精确数学步骤。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\nfrom scipy.optimize import root_scalar\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: (mu1, sigma1, mu2, sigma2), [[p11, p12], [p21, p22]], q\n        ((0.0005, 0.01, -0.0005, 0.03), np.array([[0.95, 0.05], [0.10, 0.90]]), 0.01),\n        # Case 2\n        ((0.0, 0.01, 0.0, 0.02), np.array([[0.90, 0.10], [0.10, 0.90]]), 0.05),\n        # Case 3\n        ((0.0002, 0.005, -0.0002, 0.05), np.array([[0.995, 0.005], [0.005, 0.995]]), 0.02),\n        # Case 4\n        ((0.0001, 0.001, -0.0001, 0.04), np.array([[0.50, 0.50], [0.50, 0.50]]), 0.001),\n    ]\n\n    all_results = []\n    for params, P, q in test_cases:\n        mu1, sigma1, mu2, sigma2 = params\n        \n        # 1. Identify high/low volatility regimes.\n        if sigma1 > sigma2:\n            mu_high, sigma_high = mu1, sigma1\n            mu_low, sigma_low = mu2, sigma2\n        else:\n            mu_high, sigma_high = mu2, sigma2\n            mu_low, sigma_low = mu1, sigma1\n            \n        # 2. Calculate regime-conditional Expected Shortfall.\n        def es_normal(mu, sigma, q_level):\n            \"\"\"Calculates ES for a normal loss L ~ N(-mu, sigma^2).\"\"\"\n            z_q = norm.ppf(1 - q_level)\n            es = -mu + sigma * norm.pdf(z_q) / q_level\n            return es\n\n        es_high = es_normal(mu_high, sigma_high, q)\n        es_low = es_normal(mu_low, sigma_low, q)\n        \n        # 3. Calculate unconditional mixture Expected Shortfall.\n        \n        # 3a. Stationary probabilities\n        p12 = P[0, 1]\n        p21 = P[1, 0]\n        # Formula pi_1 = p21 / (p12 + p21), pi_2 = p12 / (p12 + p21)\n        # Handles reducible case where denominator is 0, though not present in tests.\n        if p12 + p21 > 0:\n            pi1 = p21 / (p12 + p21)\n            pi2 = 1.0 - pi1\n        else: # Reducible chain, assume initial state 1 if ambiguous. Here we assume non-reducible.\n            pi1 = 1.0\n            pi2 = 0.0\n            if P[0,0] != 1.0: # Check if state 2 is the absorbing one\n                pi1 = 0.0\n                pi2 = 1.0\n        \n        # 3b. Find VaR of the mixture (c_q) by finding the root.\n        # Loss L_s ~ N(-mu_s, sigma_s^2)\n        # CDF of L_s is F_s(c) = norm.cdf((c - (-mu_s)) / sigma_s) = norm.cdf((c + mu_s) / sigma_s)\n        # We need to solve F_L(c) = pi1*F1(c) + pi2*F2(c) = 1 - q\n        def mixture_cdf_minus_target(c, mu1, sigma1, mu2, sigma2, pi1, pi2, q_level):\n            cdf1 = norm.cdf((c + mu1) / sigma1)\n            cdf2 = norm.cdf((c + mu2) / sigma2)\n            return pi1 * cdf1 + pi2 * cdf2 - (1.0 - q_level)\n\n        # Bracket for root finding. A wide but safe range.\n        bracket_min = min(-mu1, -mu2) - 10 * max(sigma1, sigma2)\n        bracket_max = max(-mu1, -mu2) + 10 * max(sigma1, sigma2)\n        \n        sol = root_scalar(\n            mixture_cdf_minus_target, \n            args=(mu1, sigma1, mu2, sigma2, pi1, pi2, q),\n            bracket=[bracket_min, bracket_max],\n            method='brentq'\n        )\n        c_q = sol.root\n\n        # 3c. Calculate partial expectations and the mixture ES.\n        # Partial expectation for L_s: E[L_s | L_s > c_q] * P(L_s > c_q)\n        # This is integral from c_q to infinity of x * f_s(x) dx\n        def partial_expectation(c_threshold, mu, sigma):\n            mu_loss = -mu\n            z = (c_threshold - mu_loss) / sigma\n            # Formula: mu_L * (1 - CDF(z)) + sigma * PDF(z)\n            # This is equivalent to mu_L * P(L>c) + sigma^2 * f(c)\n            return mu_loss * (1 - norm.cdf(z)) + sigma * norm.pdf(z)\n\n        pe1 = partial_expectation(c_q, mu1, sigma1)\n        pe2 = partial_expectation(c_q, mu2, sigma2)\n        \n        es_mix = (pi1 * pe1 + pi2 * pe2) / q\n        \n        all_results.extend([es_high, es_low, es_mix])\n\n    # Final print statement in the exact required format.\n    formatted_results = [f\"{r:.8f}\" for r in all_results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2390701"}, {"introduction": "一个风险模型的好坏最终需要通过历史数据进行检验，这个过程被称为“回测”。最后一个练习旨在通过一个精巧的模拟实验，揭示一个深刻的观点：一个能准确预测极端亏损大小（高品质ES）的模型，却可能在预测极端亏损发生频率（VaR）上彻底失败。这个看似矛盾的场景[@problem_id:2374170]突显了风险价值（Value-at-Risk, VaR）的内在局限性，并强调了ES作为风险度量工具的优越性。完成这个挑战将帮助你深入理解不同风险指标的关注点，并培养对风险模型进行批判性评估的能力。", "problem": "要求您构建一个完整的、确定性的模拟，以证明一个具有极高质量预期短缺 (ES) 预测的模型，仍可能无法通过标准的风险价值 (VaR) 无条件覆盖率回测。您的程序必须从第一性原理出发实现相关定义和逻辑，且不得依赖任何外部数据或用户输入。\n\n定义与要求：\n- 置信水平为 $c$ 的风险价值 (Value-at-Risk, VaR) 定义为损失分布的 $c$ 分位数，即若 $L$ 表示损失，则 $\\mathrm{VaR}_c$ 是满足 $\\mathbb{P}(L \\le v) = c$ 的唯一值 $v$。等价地，对于尾部概率 $\\alpha := 1 - c$，$\\mathrm{VaR}_c$ 是满足 $\\mathbb{P}(L  v) = \\alpha$ 的阈值 $v$。\n- 置信水平为 $c$ 的预期短缺 (Expected Shortfall, ES) 定义为在损失超过 $\\mathrm{VaR}_c$ 的条件下的损失条件期望，即 $\\mathrm{ES}_c := \\mathbb{E}[L \\mid L  \\mathrm{VaR}_c]$。\n- 针对无条件覆盖率的“VaR 回测”是一种评估方法，它基于超额指标序列 $I_t := \\mathbf{1}\\{L_t  v\\}$，其原假设为 $\\mathbb{P}(I_t = 1) = \\alpha$ 且随时间独立。标准的无条件覆盖率检验旨在评估在给定的显著性水平下，观测到的超额次数 $x := \\sum_{t=1}^T I_t$ 是否与原假设一致。您的任务是实现无条件覆盖率似然比检验，并在 $0.05$ 的显著性水平下，若原假设被拒绝，则声明为“失败”(fail)，否则声明为“通过”(pass)。\n- 为量化 ES 预测的质量，当 $x \\ge 1$ 时，计算已实现的尾部均值 $\\widehat{\\mathrm{ES}} := \\frac{1}{x} \\sum_{t: L_t  v} L_t$，并将其与模型的 ES 预测值 $e$ 进行比较。定义相对误差 $\\varepsilon := \\lvert \\widehat{\\mathrm{ES}} - e \\rvert / e$。对于给定的容差 $\\tau$，如果 $\\varepsilon \\le \\tau$，则声明 ES 为“极高质量”(very high-quality)。\n\n用于演示该悖论的模拟设计：\n- “模型”将产生恒定的预测值 $(v, e)$，如同损失服从标准正态分布一样。具体而言，假设损失 $Z$ 从标准正态分布中抽取，并将 $v$ 定义为 $Z$ 的 $c$ 分位数，将 $e$ 定义为条件均值 $e := \\mathbb{E}[Z \\mid Z  v]$。在整个回测期间，这些 $(v, e)$ 是模型的恒定预测值。\n- 真实的数据生成过程 (DGP) 故意违反 VaR 的无条件覆盖率假设，同时保持 ES 预测近似正确：\n  1. 固定尾部概率 $\\alpha$ 和置信水平 $c := 1 - \\alpha$。固定尾部膨胀因子 $r \\ge 1$ 和样本量 $T$。将超额次数确定性地设置为 $x := \\mathrm{round}(r \\cdot \\alpha \\cdot T)$，非超额次数则为 $T-x$。这使得超额频率在四舍五入的误差范围内等于 $r \\cdot \\alpha$。\n  2. 对于 $x$ 次超额损失，其超过阈值 $v$ 的部分从广义帕累托分布 (GPD) 中抽样，其形状参数为 $\\xi \\in (0, 1)$，尺度参数 $\\beta$ 的选择要使条件均值等于模型的预测值 $e$。如果 $W \\sim \\mathrm{GPD}(\\xi, \\beta)$ 表示超额部分，且 $L := v + W$，则 $\\mathbb{E}[L \\mid L  v] = v + \\beta/(1 - \\xi)$。通过设置 $\\beta := (e - v)\\,(1 - \\xi)$ 来强制执行 $v + \\beta/(1 - \\xi) = e$。\n  3. 对于 $T-x$ 次非超额损失，从区间 $[0, v]$ 上的均匀分布中独立抽样，这保证了它们不会超过 $v$。\n- 这种构造确保已实现的超额概率近似为 $r \\cdot \\alpha$，当 $r$ 显著大于 $1$ 时，这将触发无条件覆盖率检验的失败。然而，通过构造，超额损失的条件均值与模型的 ES 相匹配，从而使得 ES 的预测非常准确。\n\n测试与报告：\n- 使用固定的随机种子以确保模拟是确定性和可复现的。您必须在 $0.05$ 的显著性水平下，使用原假设和经验超额率下的精确伯努利似然函数来实现无条件覆盖率似然比检验，并与自由度为 1 的卡方临界值进行比较。\n- 对于 ES 质量，使用下面每个测试用例中指定的相对误差阈值 $\\tau$。如果没有超额 ($x = 0$)，则可任意定义 $\\widehat{\\mathrm{ES}}$ 并将 ES 质量设置为“非高质量”(not high-quality)；不过，所提供的测试套件确保 $x \\ge 1$。\n\n测试套件：\n- 所有用例的通用参数：尾部概率 $\\alpha = 0.01$，VaR 检验的显著性水平 $0.05$，GPD 形状参数 $\\xi = 0.10$，以及 ES 容差 $\\tau = 0.05$。模型的置信水平为 $c = 1 - \\alpha = 0.99$。\n- 用例 1 (理想路径): $T = 5000$, $r = 1.0$。\n- 用例 2 (悖论): $T = 5000$, $r = 2.0$。\n- 用例 3 (低功效边界): $T = 5000$, $r = 1.2$。\n\n所需输出：\n- 对每个用例，计算两个布尔值： \n  1. VaR 回测失败（如果在 $0.05$ 显著性水平下拒绝无条件覆盖率的原假设，则为 True，否则为 False）。\n  2. ES 高质量指标（如果 $\\varepsilon \\le \\tau$，则为 True，否则为 False）。\n- 您的程序应生成单行输出，其中包含六个布尔值，这些值按用例和指标的顺序排列，形式为方括号内的逗号分隔列表，顺序如下：$[\\text{VaRFail}_1,\\text{ESGood}_1,\\text{VaRFail}_2,\\text{ESGood}_2,\\text{VaRFail}_3,\\text{ESGood}_3]$。仅为格式示例：$[\\text{True},\\text{False},\\dots]$。\n\n约束条件：\n- 程序必须是完全自包含和确定性的。\n- 所有的随机抽样都必须使用您选择的固定种子执行，并且超额次数必须按规定确定性地设置为 $x := \\mathrm{round}(r \\cdot \\alpha \\cdot T)$。", "solution": "问题陈述是有效的。其科学基础植根于金融风险管理的原则，特别是关于风险价值 (VaR) 和预期短缺 (ES) 模型的回测。所提供的关于 $\\mathrm{VaR}$、$\\mathrm{ES}$、无条件覆盖率检验和广义帕累托分布 (GPD) 的定义是标准的且在数学上是正确的。该模拟设计是一个适定的计算实验，旨在演示一个已知的、非平凡的现象：一个模型可以在 VaR 回测失败的同时，产生高质量的 ES 预测。问题是自包含的，指定了所有必要的参数和流程，并且没有矛盾或歧义。\n\n以下是推理过程的解决方案。\n\n核心任务是构建一个确定性模拟，以证明一个模型的风险价值 ($\\mathrm{VaR}$) 和预期短缺 ($\\mathrm{ES}$) 预测在回测中可能得到相互矛盾的评估。具体而言，该模拟必须展示一个情景，其中 $\\mathrm{VaR}$ 预测被拒绝，而 $\\mathrm{ES}$ 预测却被视为高度准确。\n\n首先，我们为模型预测、数据生成过程 (DGP) 和统计检验建立理论基础。\n\n**1. 模型预测**\n\n“模型”被定义为分别为 $\\mathrm{VaR}$ 和 $\\mathrm{ES}$ 生成恒定的预测值 $(v, e)$。这些预测是在金融损失 $L$ 服从标准正态分布 $Z \\sim N(0, 1)$ 的假设下推导出来的。\n\n置信水平为 $c = 1 - \\alpha$，其中 $\\alpha = 0.01$。因此，$c = 0.99$。\n$\\mathrm{VaR}$ 预测值 $v$ 是标准正态分布的 $c$ 分位数：\n$$v = \\Phi^{-1}(c) = \\Phi^{-1}(0.99)$$\n其中 $\\Phi^{-1}$ 是标准正态分布的分位数函数（逆 CDF）。\n\n$\\mathrm{ES}$ 预测值 $e$ 是在损失超过 $\\mathrm{VaR}$ 阈值 $v$ 条件下的损失条件期望：\n$$e = \\mathbb{E}[Z \\mid Z  v]$$\n对于标准正态分布，这有一个著名的闭式解：\n$$e = \\frac{\\phi(v)}{1 - c} = \\frac{\\phi(v)}{\\alpha}$$\n其中 $\\phi$ 是标准正态分布的概率密度函数 (PDF)。这些值 $v$ 和 $e$ 在整个模拟过程中是常数。\n\n**2. 数据生成过程 (DGP)**\n\n该模拟的 DGP 被设计成以一种可控的方式偏离模型的假设。它生成一个包含 $T$ 个损失的时间序列。\n\n$\\mathrm{VaR}$ 超额次数 $x$ 是基于尾部膨胀因子 $r$ 确定性地设置的：\n$$x = \\mathrm{round}(r \\cdot \\alpha \\cdot T)$$\n非超额次数相应地为 $T-x$。这种构造直接将超额的经验频率操纵为近似 $r \\cdot \\alpha$。\n\n损失本身是从两种不同的分布中生成的：\n- **超额损失（$x$ 个样本）：** 超过模型 $\\mathrm{VaR}$ 预测值 $v$ 的损失形式为 $L_t = v + W_t$，其中 $W_t$ 是超出阈值的超额损失。$W_t$ 从广义帕累托分布中抽样，$W_t \\sim \\mathrm{GPD}(\\xi, \\beta)$。问题指定了形状参数 $\\xi = 0.10$。选择尺度参数 $\\beta$ 以强迫超额损失的条件均值与模型的 $\\mathrm{ES}$ 预测值 $e$ 相匹配。对于 $\\xi  1$，$\\mathrm{GPD}(\\xi, \\beta)$ 的均值为 $\\mathbb{E}[W_t] = \\beta / (1 - \\xi)$。因此，我们强制执行：\n$$\\mathbb{E}[L_t \\mid L_t  v] = v + \\mathbb{E}[W_t] = v + \\frac{\\beta}{1 - \\xi} = e$$\n求解尺度参数 $\\beta$ 可得：\n$$\\beta = (e - v)(1 - \\xi)$$\n$\\beta$ 的这种选择是此悖论的核心：尾部损失的分布被构造成其均值精确匹配模型的（基于错误假设推导出的）$\\mathrm{ES}$ 预测。为了从这个 GPD 生成随机变量 $W$，我们使用逆变换采样法。对于一个均匀随机变量 $u \\sim U(0,1)$，GPD 的逆 CDF（分位数函数）是 $F^{-1}(u) = \\frac{\\beta}{\\xi}((1-u)^{-\\xi} - 1)$。\n\n- **非超额损失（$T-x$ 个样本）：** 这些损失从区间 $[0, v]$ 上的均匀分布中抽样。这个简单的选择保证了这些损失总是小于或等于 $v$，因此永远不会构成 $\\mathrm{VaR}$ 超额。\n\n**3. 回测程序**\n\n对生成的 $T$ 个损失序列执行两个独立的测试。\n\n- **VaR 回测（无条件覆盖率）：** 由 Kupiec 提出的无条件覆盖率检验，评估的原假设 $H_0$ 是在任何给定日期发生 $\\mathrm{VaR}$ 超额的概率为 $\\alpha$，即 $p = \\alpha$。该检验基于似然比 (LR) 统计量。在大小为 $T$ 的样本中观察到 $x$ 次超额的似然函数由二项概率质量函数给出 $L(p; x, T) = p^x (1-p)^{T-x}$。LR 统计量比较了原假设（$p=\\alpha$）下的似然与备择假设下的似然，其中 $p$ 由其最大似然估计 $\\hat{p} = x/T$ 给出。其统计量为：\n$$LR_{uc} = 2 \\ln\\left(\\frac{L(\\hat{p})}{L(\\alpha)}\\right) = 2 \\left[ \\ln(L(\\hat{p})) - \\ln(L(\\alpha)) \\right]$$\n$$LR_{uc} = 2 \\left[ x \\ln\\left(\\frac{x}{T}\\right) + (T-x) \\ln\\left(1 - \\frac{x}{T}\\right) - x \\ln(\\alpha) - (T-x) \\ln(1 - \\alpha) \\right]$$\n在 $H_0$ 下，该统计量渐近服从自由度为 1 的卡方分布 $\\chi^2_1$。如果在 $0.05$ 的显著性水平下，$LR_{uc}$ 超过临界值 $\\chi^2_{1, 0.95} \\approx 3.841$，则拒绝原假设。拒绝意味着 VaR 模型未能通过回测。\n\n- **ES 质量评估：** 通过将 ES 预测值 $e$ 与已实现的超额损失平均值 $\\widehat{\\mathrm{ES}}$ 进行比较来评估其质量。\n$$\\widehat{\\mathrm{ES}} = \\frac{1}{x} \\sum_{t: L_t  v} L_t$$\n相对误差 $\\varepsilon$ 计算如下：\n$$\\varepsilon = \\frac{\\lvert \\widehat{\\mathrm{ES}} - e \\rvert}{e}$$\n如果此误差在给定的容差 $\\tau = 0.05$ 以内，即 $\\varepsilon \\le 0.05$，则认为 ES 预测是“高质量”的。\n\n**4. 模拟执行**\n\n模拟通过对三个测试用例中的每一个执行上述步骤来进行。使用固定的随机种子以确保结果是确定性和可复现的。\n\n- **用例 1 ($r=1.0$):** $x = \\mathrm{round}(1.0 \\cdot 0.01 \\cdot 5000) = 50$。经验超额率 $\\hat{p} = 50/5000 = 0.01$，这恰好是 $\\alpha$。$LR_{uc}$ 统计量为 $0$，低于临界值。$\\mathrm{VaR}$ 检验通过。由于大数定律，实现的 ES，即 $\\widehat{\\mathrm{ES}}$，将接近真实均值 $e$，可能导致较小的误差 $\\varepsilon$ 和高质量的评估。\n- **用例 2 ($r=2.0$):** $x = \\mathrm{round}(2.0 \\cdot 0.01 \\cdot 5000) = 100$。经验率是 $\\hat{p} = 100/5000 = 0.02$，是假设的 $\\alpha$ 的两倍。这种巨大的差异将导致一个很大的 $LR_{uc}$ 统计量，使 $\\mathrm{VaR}$ 检验失败。然而，DGP 的构造仍然使得超额损失的条件均值为 $e$。因此，$\\widehat{\\mathrm{ES}}$ 预计将接近 $e$，并且 $\\mathrm{ES}$ 预测将被视为高质量。这就是核心的悖论结果。\n- **用例 3 ($r=1.2$):** $x = \\mathrm{round}(1.2 \\cdot 0.01 \\cdot 5000) = 60$。经验率是 $\\hat{p} = 60/5000 = 0.012$。与 $\\alpha$ 的偏差很小。由此产生的 $LR_{uc}$ 统计量可能不足以超过临界值，展示了一个低功效情景，其中 $\\mathrm{VaR}$ 检验未能检测出偏差。ES 质量预计将保持很高。\n\n实现将计算这些结果并报告指定的布尔值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm, chi2\n\ndef solve():\n    \"\"\"\n    Runs a deterministic simulation to demonstrate that a model with high-quality\n    Expected Shortfall (ES) forecasts can fail a standard Value-at-Risk (VaR)\n    backtest for unconditional coverage.\n    \"\"\"\n    # Use a fixed random seed for deterministic and reproducible results.\n    SEED = 42\n    rng = np.random.default_rng(SEED)\n\n    # --- Common parameters from the problem statement ---\n    alpha = 0.01            # Tail probability\n    var_test_sig_level = 0.05 # Significance level for the VaR LR test\n    xi = 0.10               # GPD shape parameter\n    tau = 0.05              # Relative error tolerance for ES quality\n    \n    # Confidence level for VaR and ES\n    c = 1 - alpha\n    \n    # --- Step 1: Calculate the model's constant forecasts (v, e) ---\n    # The model assumes losses are standard normal Z ~ N(0, 1).\n    # v is the c-quantile of the standard normal distribution.\n    v = norm.ppf(c)\n    # e is the expected value of Z given Z  v.\n    e = norm.pdf(v) / alpha\n    \n    # --- Pre-calculate the critical value for the LR test ---\n    # The LR statistic is asymptotically chi-square distributed with 1 df.\n    chi2_critical_value = chi2.ppf(1 - var_test_sig_level, df=1)\n\n    # --- Define the test cases ---\n    test_cases = [\n        # (T, r)\n        (5000, 1.0),  # Case 1: Happy path\n        (5000, 2.0),  # Case 2: Paradox\n        (5000, 1.2),  # Case 3: Low-power edge\n    ]\n\n    results = []\n    \n    # --- Step 2: Run simulation for each test case ---\n    for T, r in test_cases:\n        # --- a. Determine exceedance count deterministically ---\n        x = int(np.round(r * alpha * T))\n        T_minus_x = T - x\n\n        # Ensure x is within (0, T) to avoid log(0) issues in LR test.\n        # The test cases provided guarantee this.\n        assert 0  x  T, \"Number of exceedances must be between 0 and T.\"\n\n        # --- b. Generate simulated losses based on the true DGP ---\n        \n        # Exceedance losses: drawn from a GPD to match the model's ES 'e'\n        # The GPD scale parameter beta is chosen to match the conditional mean.\n        # E[L | L  v] = v + beta / (1 - xi) = e\n        beta = (e - v) * (1 - xi)\n        \n        # Generate GPD variates using inverse transform sampling (first principles)\n        # W = (beta / xi) * ((1 - U)^(-xi) - 1) for U ~ U(0,1)\n        u_samples_gpd = rng.uniform(size=x)\n        excess_losses = (beta / xi) * (np.power(1 - u_samples_gpd, -xi) - 1)\n        exceedance_losses = v + excess_losses\n        \n        # Non-exceedance losses: drawn from U[0, v]\n        # This is not strictly required for the tests but completes the DGP.\n        # non_exceedance_losses = rng.uniform(low=0.0, high=v, size=T_minus_x)\n\n        # --- c. Perform VaR unconditional coverage backtest ---\n        p_hat = x / T\n        \n        # Log-likelihood under the alternative hypothesis (p = p_hat)\n        log_L1 = x * np.log(p_hat) + T_minus_x * np.log(1 - p_hat)\n        # Log-likelihood under the null hypothesis (p = alpha)\n        log_L0 = x * np.log(alpha) + T_minus_x * np.log(1 - alpha)\n        \n        # Likelihood-ratio statistic\n        lr_uc_statistic = 2 * (log_L1 - log_L0)\n        \n        # VaR backtest fails if the statistic exceeds the critical value\n        var_fail = lr_uc_statistic  chi2_critical_value\n        results.append(var_fail)\n\n        # --- d. Evaluate ES forecast quality ---\n        # Realized tail average (sample mean of exceedance losses)\n        es_hat = np.mean(exceedance_losses)\n        \n        # Relative error of the ES forecast\n        epsilon = np.abs(es_hat - e) / e\n        \n        # ES forecast is high-quality if the relative error is within tolerance\n        es_good = epsilon = tau\n        results.append(es_good)\n        \n    # --- Final print statement in the exact required format ---\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2374170"}]}