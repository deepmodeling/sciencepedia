{"hands_on_practices": [{"introduction": "高斯 copula 和 t-copula 之间最重要的区别在于它们对尾部依赖的建模能力。这个练习将通过一个蒙特卡洛模拟，让您亲手量化和比较这两种 copula 在极端事件下的表现。通过计算联合尾部事件的经验概率，您将直观地理解为何 t-copula 在金融风险管理中（尤其是在危机情景下）通常是比高斯 copula 更为审慎的选择。[@problem_id:2396079]", "problem": "您的任务是构建两种资产的合成危机情景。您需要使用自由度极低（具体为 $\\nu=3$）的学生t-copula来模拟联合左尾事件，并将其与高斯copula进行比较。您将编写一个完整、可运行的程序，该程序会针对多种参数设置，估计两种资产的收益率同时低于指定边际分位数的经验概率，并将这些估计值汇总到单行输出中。\n\n需要使用的基本概念如下：copula是一个定义在 $[0,1]^d$ 上的多元累积分布函数（CDF），其边际分布为均匀分布，它将多个单变量边际分布耦合（couples）成一个联合分布。高斯copula是通过将标准正态CDF应用于一个多元正态向量而产生的；学生t-copula是通过将单变量学生t分布CDF应用于一个多元学生t分布向量而产生的。CDF指累积分布函数（CDF），本问题不需要概率密度函数（PDF）。根据Sklar定理，可以使用copula构造具有指定边际分布的联合分布。对于椭圆分布，一个标准且经过充分检验的构造方法如下：若 $Z \\sim \\mathcal{N}(0,\\Sigma)$ 是一个相关矩阵为 $\\Sigma$ 的多元正态变量，且 $S \\sim \\chi^2_{\\nu}$ 是一个与 $Z$ 独立的卡方随机变量，则 $T = Z/\\sqrt{S/\\nu}$ 服从自由度为 $\\nu$、相关矩阵为 $\\Sigma$ 的多元学生t分布。对于相关参数为 $\\rho \\in (-1,1)$ 的高斯copula，可以选择 $Z \\in \\mathbb{R}^2$ 为相关矩阵是 $\\Sigma = \\begin{pmatrix}1 & \\rho \\\\ \\rho & 1\\end{pmatrix}$ 的二元正态变量，然后通过标准正态CDF进行逐分量映射以获得均匀边际分布。对于具有相同相关参数 $\\rho$ 和自由度 $\\nu$ 的学生t-copula，可以选择 $T \\in \\mathbb{R}^2$ 为相关矩阵是 $\\Sigma$、自由度为 $\\nu$ 的二元学生t变量，然后通过自由度为 $\\nu$ 的单变量学生t分布CDF进行逐分量映射以获得均匀边际分布。\n\n将合成危机事件定义为两种资产的边际均匀变量同时低于给定水平 $\\alpha \\in (0,1)$ 的情况。这等价于：对于高斯copula，观测到底层高斯分布的两个分量都低于 $q_{\\alpha}^{(N)} = \\Phi^{-1}(\\alpha)$；对于自由度为 $\\nu$ 的学生t-copula，观测到底层学生t分布的两个分量都低于 $q_{\\alpha}^{(t)} = F^{-1}_{t,\\nu}(\\alpha)$。其中 $\\Phi^{-1}$ 是标准正态CDF的反函数，而 $F^{-1}_{t,\\nu}$ 是自由度为 $\\nu$ 的单变量学生t分布CDF的反函数。\n\n对于每个测试用例，您的程序必须执行以下所有步骤：\n1. 固定整数样本量 $N = 1{,}000{,}000$ 和一个固定的随机种子（如下所述），以确保可复现性。\n2. 根据指定的相关参数 $\\rho$ 构建 $2 \\times 2$ 的相关矩阵 $\\Sigma = \\begin{pmatrix}1 & \\rho \\\\ \\rho & 1\\end{pmatrix}$。\n3. 从二元正态分布 $\\mathcal{N}(0,\\Sigma)$ 中模拟 $N$ 个独立样本 $Z \\in \\mathbb{R}^2$，并估计高斯copula下的经验联合左尾概率如下：\n$$\n\\widehat{p}_{G} = \\frac{1}{N}\\sum_{i=1}^{N} \\mathbf{1}\\{Z_{i,1} < q_{\\alpha}^{(N)} \\ \\text{and} \\ Z_{i,2} < q_{\\alpha}^{(N)}\\},\n$$\n其中 $q_{\\alpha}^{(N)} = \\Phi^{-1}(\\alpha)$，$\\mathbf{1}\\{\\cdot\\}$ 是指示函数。\n4. 使用上文描述的椭圆尺度混合表示法，从自由度为 $\\nu=3$、相关矩阵为 $\\Sigma$ 的二元学生t分布中模拟 $N$ 个独立样本 $T \\in \\mathbb{R}^2$。并估计学生t-copula下的经验联合左尾概率如下：\n$$\n\\widehat{p}_{t} = \\frac{1}{N}\\sum_{i=1}^{N} \\mathbf{1}\\{T_{i,1} < q_{\\alpha}^{(t)} \\ \\text{and} \\ T_{i,2} < q_{\\alpha}^{(t)}\\},\n$$\n其中 $q_{\\alpha}^{(t)} = F^{-1}_{t,\\nu}(\\alpha)$ 且 $\\nu=3$。\n5. 计算放大比率\n$$\nr = \\frac{\\widehat{p}_{t}}{\\widehat{p}_{G}}。\n$$\n\n使用以下固定的随机化协议以确保可复现性：对于按下列顺序给出的测试用例索引 $k \\in \\{0,1,2,3\\}$，使用种子 $s_k = 24681357 + 10000 \\cdot k$ 初始化一个新的伪随机数生成器，并将其用于该测试用例中的所有随机抽样。\n\n测试套件（每个用例指定相关参数 $\\rho$ 和尾部水平 $\\alpha$）：\n- 用例1（边界情况：零线性相关）：$\\rho = 0.0$，$\\alpha = 0.01$。\n- 用例2（理想路径：中度正相关）：$\\rho = 0.7$，$\\alpha = 0.01$。\n- 用例3（极端情况：极强正相关）：$\\rho = 0.95$，$\\alpha = 0.01$。\n- 用例4（尾部水平变化）：$\\rho = 0.7$，$\\alpha = 0.05$。\n\n程序要求：\n- 通过一种数值稳定的方法（如Cholesky分解）施加指定的相关矩阵 $\\Sigma$ 来实现二元正态模拟。\n- 使用尺度混合构造法实现二元学生t模拟，其中混合变量为自由度 $\\nu=3$ 的卡方变量，核心为相关矩阵是 $\\Sigma$ 的二元正态分布。\n- 如上所述，分别对底层的高斯或学生t样本使用阈值比较来评估联合左尾事件。不要通过单变量CDF转换每个样本坐标；仅需计算分位数阈值 $q_{\\alpha}^{(N)}$ 和 $q_{\\alpha}^{(t)}$。\n- 每个测试用例中，每种copula使用 $N = 1{,}000{,}000$ 个样本。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表。对于每个测试用例，按顺序附加三个浮点数 $\\widehat{p}_{G}$、$\\widehat{p}_{t}$ 和 $r$。因此，最后一行必须包含对应于四个测试用例的12个浮点数，并按所列顺序排列。例如，输出必须具有以下形式：$[\\widehat{p}_{G,1},\\widehat{p}_{t,1},r_1,\\widehat{p}_{G,2},\\widehat{p}_{t,2},r_2,\\widehat{p}_{G,3},\\widehat{p}_{t,3},r_3,\\widehat{p}_{G,4},\\widehat{p}_{t,4},r_4]$。\n- 所有数字必须打印为十进制浮点数。不涉及任何物理单位或角度单位。不要打印任何额外文本。", "solution": "该问题陈述经确认为具有科学依据、定义明确且内容完整。它描述了一个在量化金融领域中标准的、有意义的数值实验，用于比较高斯copula和学生t-copula的尾部相关性。其方法论是合理的，所有必需的参数和步骤都得到了明确的规定。因此，我们可以着手解决此问题。\n\n目标是量化由高斯copula与学生t-copula建模的联合左尾风险之间的差异。众所周知，学生t-copula（尤其是在自由度较低时）表现出更强的尾部相关性，这意味着极端负面事件同时发生的可能性要高于高斯模型的预测。我们将要测量的正是这一现象。放大比率 $r = \\widehat{p}_{t}/\\widehat{p}_{G}$ 将作为此效应的直接度量。\n\n此项任务的核心是蒙特卡洛模拟。对于四个指定的测试用例中的每一个，我们执行以下步骤。\n\n一个测试用例由一个相关参数 $\\rho$ 和一个尾部概率水平 $\\alpha$ 定义。学生t分布的自由度固定为 $\\nu = 3$。每次估计的模拟样本数量为 $N = 1,000,000$。\n\n首先，我们建立模拟框架。为保证可复现性，对于每个测试用例 $k \\in \\{0, 1, 2, 3\\}$，都会使用特定的种子 $s_k = 24681357 + 10000 \\cdot k$ 初始化一个新的伪随机数生成器。$2 \\times 2$ 的相关矩阵构造如下：\n$$\n\\Sigma = \\begin{pmatrix} 1 & \\rho \\\\ \\rho & 1 \\end{pmatrix}\n$$\n为了生成相关的随机变量，我们使用 $\\Sigma$ 的Cholesky分解。我们找到一个下三角矩阵 $L$，使得 $\\Sigma = LL^T$。如果 $X = (X_1, X_2)^T$ 是一个由两个独立标准正态随机变量组成的向量，那么向量 $Z = LX$ 将服从二元正态分布 $\\mathcal{N}(0, \\Sigma)$。这是一种施加所需相关结构的标准且数值稳定的方法。\n\n在此设置下，我们开始估计这两个概率。\n\n1.  **高斯Copula概率 ($\\widehat{p}_{G}$)**：\n    我们需要估计概率 $P(U_1  \\alpha, U_2  \\alpha)$，其中 $(U_1, U_2)$ 根据参数为 $\\rho$ 的高斯copula分布。这等价于估计底层的相关正态变量低于相应分位数的概率。具体来说，如果 $Z = (Z_1, Z_2)^T \\sim \\mathcal{N}(0, \\Sigma)$，我们估计的是 $P(Z_1  q_{\\alpha}^{(N)}, Z_2  q_{\\alpha}^{(N)})$。阈值 $q_{\\alpha}^{(N)}$ 是标准正态分布的 $\\alpha$-分位数，由 $q_{\\alpha}^{(N)} = \\Phi^{-1}(\\alpha)$ 给出，其中 $\\Phi^{-1}$ 是标准正态累积分布函数（CDF）的反函数。\n    我们从 $\\mathcal{N}(0, \\Sigma)$ 生成 $N$ 个独立样本 $\\{Z_i\\}_{i=1}^N$。然后，经验概率计算为两个分量均低于阈值的样本所占的比例：\n    $$\n    \\widehat{p}_{G} = \\frac{1}{N}\\sum_{i=1}^{N} \\mathbf{1}\\{Z_{i,1}  q_{\\alpha}^{(N)} \\ \\text{and} \\ Z_{i,2}  q_{\\alpha}^{(N)}\\}\n    $$\n    其中 $\\mathbf{1}\\{\\cdot\\}$ 是指示函数。\n\n2.  **学生t-Copula概率 ($\\widehat{p}_{t}$)**：\n    此过程类似，但使用的是多元学生t分布。我们估计概率 $P(T_1  q_{\\alpha}^{(t)}, T_2  q_{\\alpha}^{(t)})$，其中 $T = (T_1, T_2)^T$ 服从自由度为 $\\nu = 3$、相关矩阵为 $\\Sigma$ 的二元学生t分布。阈值 $q_{\\alpha}^{(t)}$ 是自由度为 $\\nu=3$ 的单变量学生t分布的 $\\alpha$-分位数，即 $q_{\\alpha}^{(t)} = F^{-1}_{t,3}(\\alpha)$。\n    为了从多元学生t分布中生成样本，我们使用指定的尺度混合表示法。对于每个样本 $i=1, \\dots, N$，我们生成一个向量 $Z_i \\sim \\mathcal{N}(0, \\Sigma)$ 和一个独立的标量 $S_i \\sim \\chi^2_{\\nu}$（自由度为 $\\nu$ 的卡方分布）。然后，学生t分布向量 $T_i$ 的构造如下：\n    $$\n    T_i = \\frac{Z_i}{\\sqrt{S_i/\\nu}}\n    $$\n    生成 $N$ 个样本 $\\{T_i\\}_{i=1}^N$ 后，经验概率估计如下：\n    $$\n    \\widehat{p}_{t} = \\frac{1}{N}\\sum_{i=1}^{N} \\mathbf{1}\\{T_{i,1}  q_{\\alpha}^{(t)} \\ \\text{and} \\ T_{i,2}  q_{\\alpha}^{(t)}\\}\n    $$\n\n最后，对于每个测试用例，我们计算放大比率 $r = \\widehat{p}_{t} / \\widehat{p}_{G}$。这个比率直接衡量了在学生t-copula模型下，联合危机事件发生的可能性相对于高斯模型的增加程度。\n\n随附的Python程序实现了这整个过程。它使用 `numpy` 进行数值线性代数和随机数生成，使用 `scipy.stats` 计算所需的反CDF值（`ppf` 函数）。其逻辑封装在一个循环中，该循环遍历四个测试用例，为每个用例计算 $\\widehat{p}_{G}$、$\\widehat{p}_{t}$ 和 $r$，并将结果汇总为指定的输出格式。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm, t\n\ndef solve():\n    \"\"\"\n    Simulates joint left-tail events for Gaussian and Student's t-copulas\n    to compare tail dependence and compute the amplification ratio.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each case is a tuple (rho, alpha).\n    test_cases = [\n        (0.0, 0.01),   # Case 1\n        (0.7, 0.01),   # Case 2\n        (0.95, 0.01),  # Case 3\n        (0.7, 0.05),   # Case 4\n    ]\n\n    # Global parameters as specified in the problem.\n    N = 1_000_000\n    nu = 3  # Degrees of freedom for the Student's t-copula.\n\n    # Store all final results (p_G, p_t, r for each case).\n    results = []\n\n    for k, case in enumerate(test_cases):\n        rho, alpha = case\n        \n        # 1. Initialize PRNG with the specified seed for reproducibility.\n        seed = 24681357 + 10000 * k\n        rng = np.random.default_rng(seed)\n\n        # 2. Construct the correlation matrix and its Cholesky decomposition.\n        # Sigma = [[1, rho], [rho, 1]]\n        sigma = np.array([[1.0, rho], [rho, 1.0]])\n        # L is the lower-triangular Cholesky factor, such that Sigma = L * L.T\n        try:\n            L = np.linalg.cholesky(sigma)\n        except np.linalg.LinAlgError:\n            # This should not happen for valid correlation matrices where |rho|  1.\n            # Handle as a failsafe.\n            results.extend([np.nan, np.nan, np.nan])\n            continue\n            \n        # --- Gaussian Copula Simulation ---\n        \n        # 3. Simulate N samples from the bivariate normal distribution N(0, Sigma).\n        # Generate N x 2 independent standard normal variates.\n        X_g = rng.standard_normal(size=(N, 2))\n        # Correlate them using the Cholesky factor: Z = X * L.T\n        Z = X_g @ L.T\n        \n        # Calculate the quantile threshold for the Gaussian case.\n        q_alpha_N = norm.ppf(alpha)\n        \n        # Estimate the empirical joint left-tail probability p_G.\n        # Count occurrences where both Z_1  q_alpha_N and Z_2  q_alpha_N.\n        joint_events_g = np.sum((Z[:, 0]  q_alpha_N)  (Z[:, 1]  q_alpha_N))\n        p_hat_G = joint_events_g / N\n\n        # --- Student's t-Copula Simulation ---\n        \n        # 4. Simulate N samples from the bivariate Student's t-distribution.\n        # Generate N x 2 independent standard normal variates (fresh draw).\n        X_t = rng.standard_normal(size=(N, 2))\n        # Correlate them: Z_t = X_t * L.T\n        Z_t = X_t @ L.T\n        \n        # Generate N samples from a chi-squared distribution with nu degrees of freedom.\n        s = rng.chisquare(df=nu, size=N)\n        \n        # Construct the Student's t samples using the scale-mixture representation.\n        # T = Z_t / sqrt(s / nu). Use [:, np.newaxis] for broadcasting.\n        T = Z_t / np.sqrt(s / nu)[:, np.newaxis]\n        \n        # Calculate the quantile threshold for the Student's t-case.\n        q_alpha_t = t.ppf(alpha, df=nu)\n        \n        # Estimate the empirical joint left-tail probability p_t.\n        # Count occurrences where both T_1  q_alpha_t and T_2  q_alpha_t.\n        joint_events_t = np.sum((T[:, 0]  q_alpha_t)  (T[:, 1]  q_alpha_t))\n        p_hat_t = joint_events_t / N\n\n        # 5. Compute the amplification ratio.\n        # Handle division by zero, though unlikely with these parameters.\n        if p_hat_G == 0:\n            ratio = np.inf if p_hat_t  0 else np.nan\n        else:\n            ratio = p_hat_t / p_hat_G\n            \n        results.extend([p_hat_G, p_hat_t, ratio])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2396079"}, {"introduction": "Copula 最强大的应用之一是评估条件概率和条件风险。本练习将引导您解决一个典型的风险管理问题：在已知部分资产损失的情况下，如何估算另一项资产的条件风险价值（Conditional Value at Risk）。您将从第一性原理出发，运用高斯 copula 的性质来推导一个封闭形式的解析解，从而深刻理解 copula 在压力测试和实时风险监控中的实际应用。[@problem_id:2396087]", "problem": "一位风险经理使用高斯 copula 对一个非负单日损失向量 $\\left(L_1,L_2,L_3\\right)$ 进行建模，该向量具有连续的边缘分布和由高斯 copula 捕捉的相关性。设边缘分布为指数分布，其各自的率参数为 $\\lambda_1=\\tfrac{1}{2}$，$\\lambda_2=1$ 和 $\\lambda_3=2$。因此，对于 $i\\in\\{1,2,3\\}$，边缘累积分布函数为 $F_i(x)=1-\\exp(-\\lambda_i x)$，其中 $x\\geq 0$。高斯 copula 由 $U_i=F_i(L_i)$ 定义，并且 $\\left(Z_1,Z_2,Z_3\\right)$ 服从联合正态分布，其均值为 $0$，方差为 $1$，相关系数矩阵为\n$$\nR=\\begin{pmatrix}\n1  \\tfrac{3}{5}  \\tfrac{2}{5} \\\\\n\\tfrac{3}{5}  1  \\tfrac{1}{2} \\\\\n\\tfrac{2}{5}  \\tfrac{1}{2}  1\n\\end{pmatrix},\n$$\n其中 $U_i=\\Phi(Z_i)$，$\\Phi$ 是标准正态累积分布函数。假设在收盘时，两个交易指数的已实现损失为 $L_2=\\ln 2$ 和 $L_3=\\tfrac{\\ln 2}{2}$，并且交易台需要给定这些实现值的条件下 $L_1$ 的单日 $0.99$-分位数，以设定交易台级别的限额。这个条件分位数也是在给定观测到的 $L_2$ 和 $L_3$ 的情况下，交易台对 $L_1$ 在 $0.99$ 水平上的条件风险价值（Value at Risk (VaR)）。\n\n根据所述模型，从基本原理出发，推导在给定 $L_2=\\ln 2$ 和 $L_3=\\tfrac{\\ln 2}{2}$ 的条件下 $L_1$ 的 $0.99$-条件分位数的单一闭式解析表达式。您的最终表达式只能包含函数 $\\Phi$、$\\Phi^{-1}$ 和 $\\ln$。以美元表示最终答案。最终答案必须是单一的解析表达式；不要提供不等式或方程式。", "solution": "所述问题具有科学依据、是良定的且客观的。不存在会妨碍形式解的矛盾或缺失信息。相关系数矩阵 $R$ 是对称和正定的，这是有效的多元正态分布的必要条件。因此，我们可以开始推导。\n\n目标是找到单日损失 $L_1$ 的条件 $0.99$-分位数，我们将其表示为 $q$。这个值 $q$ 满足 $P(L_1 \\le q | L_2 = \\ln 2, L_3 = \\frac{\\ln 2}{2}) = 0.99$。\n\n求解过程分为以下几个步骤：\n1.  使用边缘累积分布函数（CDFs）将给定的损失值 $L_2$ 和 $L_3$ 转换为相应的均匀分布变量 $U_2$ 和 $U_3$。\n2.  使用标准正态CDF的反函数 $\\Phi^{-1}$ 将这些均匀分布变量转换为相应的标准正态变量 $Z_2$ 和 $Z_3$。\n3.  在给定实现值 $Z_2=z_2$ 和 $Z_3=z_3$ 的情况下，确定 $Z_1$ 的条件分布的参数。\n4.  建立 $L_1$ 的期望分位数与 $Z_1$ 的条件分布分位数之间的关系。\n5.  推导分位数 $q$ 的最终表达式。\n\n步骤1：将损失 $L_i$ 转换为均匀分布变量 $U_i$。\n损失 $L_i$ 的边缘 CDF 由 $F_i(x) = 1 - \\exp(-\\lambda_i x)$ 给出。均匀分布变量为 $U_i = F_i(L_i)$。我们已知 $L_2 = \\ln 2$ 且 $\\lambda_2 = 1$，以及 $L_3 = \\frac{\\ln 2}{2}$ 且 $\\lambda_3 = 2$。\n\n对于 $L_2$：\n$$ u_2 = F_2(L_2) = 1 - \\exp(-\\lambda_2 L_2) = 1 - \\exp(-1 \\cdot \\ln 2) = 1 - \\exp(\\ln(2^{-1})) = 1 - \\frac{1}{2} = \\frac{1}{2} $$\n对于 $L_3$：\n$$ u_3 = F_3(L_3) = 1 - \\exp(-\\lambda_3 L_3) = 1 - \\exp(-2 \\cdot \\frac{\\ln 2}{2}) = 1 - \\exp(-\\ln 2) = 1 - \\frac{1}{2} = \\frac{1}{2} $$\n\n步骤2：将均匀分布变量 $U_i$ 转换为正态变量 $Z_i$。\n关系式为 $U_i = \\Phi(Z_i)$，这意味着 $Z_i = \\Phi^{-1}(U_i)$。\n$$ z_2 = \\Phi^{-1}(u_2) = \\Phi^{-1}\\left(\\frac{1}{2}\\right) = 0 $$\n$$ z_3 = \\Phi^{-1}(u_3) = \\Phi^{-1}\\left(\\frac{1}{2}\\right) = 0 $$\n结果值为 $0$，因为标准正态分布关于 $0$ 对称，其中位数（$0.5$ 分位数）位于此处。\n\n步骤3：确定 $Z_1$ 的条件分布。\n向量 $\\mathbf{Z} = (Z_1, Z_2, Z_3)^T$ 服从多元正态分布 $N(\\boldsymbol{\\mu}, R)$，其均值向量为 $\\boldsymbol{\\mu} = (0, 0, 0)^T$，相关系数矩阵为 $R$。我们将 $\\mathbf{Z}$ 分块为 $\\mathbf{Z}_a = Z_1$ 和 $\\mathbf{Z}_b = (Z_2, Z_3)^T$。相关系数矩阵也相应地进行分块：\n$$ R = \\begin{pmatrix} \\Sigma_{aa}  \\Sigma_{ab} \\\\ \\Sigma_{ba}  \\Sigma_{bb} \\end{pmatrix} $$\n其中\n$\\Sigma_{aa} = 1$\n$\\Sigma_{ab} = \\begin{pmatrix} \\frac{3}{5}  \\frac{2}{5} \\end{pmatrix}$\n$\\Sigma_{ba} = \\Sigma_{ab}^T = \\begin{pmatrix} \\frac{3}{5} \\\\ \\frac{2}{5} \\end{pmatrix}$\n$\\Sigma_{bb} = \\begin{pmatrix} 1  \\frac{1}{2} \\\\ \\frac{1}{2}  1 \\end{pmatrix}$\n\n在 $\\mathbf{Z}_b = \\mathbf{z}_b = (z_2, z_3)^T = (0, 0)^T$ 的条件下， $Z_1$ 的分布是一个正态分布 $N(\\mu_{\\text{cond}}, \\sigma^2_{\\text{cond}})$。\n条件均值为 $\\mu_{\\text{cond}} = \\mu_a + \\Sigma_{ab} \\Sigma_{bb}^{-1} (\\mathbf{z}_b - \\boldsymbol{\\mu}_b)$。\n由于 $\\mu_a = 0$，$\\boldsymbol{\\mu}_b = (0, 0)^T$，且 $\\mathbf{z}_b = (0, 0)^T$，项 $(\\mathbf{z}_b - \\boldsymbol{\\mu}_b)$ 是零向量。因此，条件均值为：\n$$ \\mu_{\\text{cond}} = 0 + \\Sigma_{ab} \\Sigma_{bb}^{-1} \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} = 0 $$\n条件方差为 $\\sigma^2_{\\text{cond}} = \\Sigma_{aa} - \\Sigma_{ab} \\Sigma_{bb}^{-1} \\Sigma_{ba}$。首先，我们计算 $\\Sigma_{bb}$ 的逆矩阵：\n$$ \\det(\\Sigma_{bb}) = 1 \\cdot 1 - \\left(\\frac{1}{2}\\right)^2 = 1 - \\frac{1}{4} = \\frac{3}{4} $$\n$$ \\Sigma_{bb}^{-1} = \\frac{1}{3/4} \\begin{pmatrix} 1  -\\frac{1}{2} \\\\ -\\frac{1}{2}  1 \\end{pmatrix} = \\frac{4}{3} \\begin{pmatrix} 1  -\\frac{1}{2} \\\\ -\\frac{1}{2}  1 \\end{pmatrix} = \\begin{pmatrix} \\frac{4}{3}  -\\frac{2}{3} \\\\ -\\frac{2}{3}  \\frac{4}{3} \\end{pmatrix} $$\n现在我们计算乘积 $\\Sigma_{ab} \\Sigma_{bb}^{-1} \\Sigma_{ba}$：\n$$ \\Sigma_{ab} \\Sigma_{bb}^{-1} = \\begin{pmatrix} \\frac{3}{5}  \\frac{2}{5} \\end{pmatrix} \\begin{pmatrix} \\frac{4}{3}  -\\frac{2}{3} \\\\ -\\frac{2}{3}  \\frac{4}{3} \\end{pmatrix} = \\begin{pmatrix} \\frac{12}{15} - \\frac{4}{15}  -\\frac{6}{15} + \\frac{8}{15} \\end{pmatrix} = \\begin{pmatrix} \\frac{8}{15}  \\frac{2}{15} \\end{pmatrix} $$\n$$ (\\Sigma_{ab} \\Sigma_{bb}^{-1}) \\Sigma_{ba} = \\begin{pmatrix} \\frac{8}{15}  \\frac{2}{15} \\end{pmatrix} \\begin{pmatrix} \\frac{3}{5} \\\\ \\frac{2}{5} \\end{pmatrix} = \\frac{24}{75} + \\frac{4}{75} = \\frac{28}{75} $$\n因此，条件方差为：\n$$ \\sigma^2_{\\text{cond}} = 1 - \\frac{28}{75} = \\frac{47}{75} $$\n所以，在给定 $Z_2=0, Z_3=0$ 的条件下，$Z_1$ 的条件分布为 $N(0, \\frac{47}{75})$。\n\n步骤4：关联 $L_1$ 和 $Z_1$ 的分位数。\n我们寻求 $q$ 使得 $P(L_1 \\le q | L_2=\\ln 2, L_3=\\frac{\\ln 2}{2}) = 0.99$。\n这个概率可以通过一系列变换来表示：\n$$\nL_1 \\le q \\iff F_1(L_1) \\le F_1(q) \\iff U_1 \\le F_1(q) \\iff \\Phi(Z_1) \\le F_1(q) \\iff Z_1 \\le \\Phi^{-1}(F_1(q))\n$$\n条件事件 $L_2=\\ln 2, L_3=\\frac{\\ln 2}{2}$ 等价于 $Z_2=0, Z_3=0$。\n所以，我们需要解：\n$$ P(Z_1 \\le \\Phi^{-1}(F_1(q)) | Z_2=0, Z_3=0) = 0.99 $$\n设 $Z'_1$ 表示在此条件下的随机变量 $Z_1$。我们知道 $Z'_1 \\sim N(0, \\frac{47}{75})$。\n设 $Y = \\frac{Z'_1 - 0}{\\sqrt{47/75}} \\sim N(0,1)$。该概率变为：\n$$ P\\left(Y \\le \\frac{\\Phi^{-1}(F_1(q))}{\\sqrt{47/75}}\\right) = 0.99 $$\n根据标准正态 CDF $\\Phi$ 的定义，这等价于：\n$$ \\Phi\\left(\\frac{\\Phi^{-1}(F_1(q))}{\\sqrt{47/75}}\\right) = 0.99 $$\n对两边应用反函数 $\\Phi^{-1}$：\n$$ \\frac{\\Phi^{-1}(F_1(q))}{\\sqrt{47/75}} = \\Phi^{-1}(0.99) $$\n$$ \\Phi^{-1}(F_1(q)) = \\sqrt{\\frac{47}{75}} \\Phi^{-1}(0.99) $$\n\n步骤5：推导 $q$ 的最终表达式。\n对上一个方程两边应用函数 $\\Phi$ 得：\n$$ F_1(q) = \\Phi\\left(\\sqrt{\\frac{47}{75}} \\Phi^{-1}(0.99)\\right) $$\n为了求得 $q$，我们需要边缘 CDF $F_1(x)$ 的反函数。\n$u = F_1(x) = 1 - \\exp(-\\lambda_1 x) \\implies \\exp(-\\lambda_1 x) = 1-u \\implies -\\lambda_1 x = \\ln(1-u) \\implies x = F_1^{-1}(u) = -\\frac{1}{\\lambda_1}\\ln(1-u)$。\n给定 $\\lambda_1 = \\frac{1}{2}$，我们有 $F_1^{-1}(u) = -2\\ln(1-u)$。\n应用此反函数以获得 $q$：\n$$ q = F_1^{-1}\\left( \\Phi\\left(\\sqrt{\\frac{47}{75}} \\Phi^{-1}(0.99)\\right) \\right) $$\n$$ q = -2 \\ln\\left(1 - \\Phi\\left(\\sqrt{\\frac{47}{75}} \\Phi^{-1}(0.99)\\right)\\right) $$\n这就是 $L_1$ 的条件 $0.99$-分位数的最终闭式解析表达式。按照题目说明中提到的“美元”，此表达式代表了损失的基础货币单位的价值，在最终答案中我们将其视为一个纯数。", "answer": "$$\n\\boxed{-2 \\ln\\left(1 - \\Phi\\left(\\sqrt{\\frac{47}{75}} \\Phi^{-1}(0.99)\\right)\\right)}\n$$", "id": "2396087"}, {"introduction": "在金融模型中，任何参数的微小变化都可能对最终的风险度量产生显著影响，理解这种敏感性是风险管理的关键。本练习旨在探讨预期短缺（Expected Shortfall, $ES$）这一重要风险指标如何随高斯 copula 相关性参数 $\\rho$ 的变化而变化。通过实现一个数值方法来估算 $ES$ 对 $\\rho$ 的导数，您将亲身体验模型敏感性分析，这是评估和管理模型风险的核心技能。[@problem_id:2395999]", "problem": "给定一个双资产投资组合，其回报由高斯 copula 建模。每个边际回报均服从高斯分布：资产一的均值为 $\\mu_1$，标准差为 $\\sigma_1$；资产二的均值为 $\\mu_2$，标准差为 $\\sigma_2$。高斯 copula 通过相关性参数 $\\rho \\in [-1,1]$ 将边际分布耦合起来，这意味着一个二元正态联合分布。投资组合的回报为 $R_p = w_1 R_1 + w_2 R_2$，其中 $w_1$ 和 $w_2$ 是固定的投资组合权重，除了是实数外没有其他约束。定义投资组合损失为 $L = -R_p$。对于置信水平 $\\alpha \\in (0,1)$，损失 $L$ 在水平 $\\alpha$ 下的期望亏损 (Expected Shortfall, ES) 定义为条件期望 $ES_\\alpha = \\mathbb{E}[L \\mid L \\geq q_\\alpha(L)]$，其中 $q_\\alpha(L)$ 是 $L$ 的 $\\alpha$-分位数。\n\n对于一个固定的步长 $h  0$，定义中心差商\n$$\nS_h(\\rho) = \\frac{ES_\\alpha(\\rho + h) - ES_\\alpha(\\rho - h)}{2h}.\n$$\n此处 $ES_\\alpha(\\rho)$ 表示当 $R_1$ 和 $R_2$ 之间的高斯 copula 相关性为 $\\rho$ 时 $L$ 的期望亏损，并保持所有其他参数固定。\n\n编写一个完整的、可运行的程序，对下面测试套件中的每个测试用例，计算 $S_h(\\rho)$ 并按要求的格式输出结果。所有的中间和最终计算都是无量纲的（没有物理单位），且不涉及角度。\n\n测试套件（每个测试用例是一个元组 $(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h)$）：\n\n- 用例 A（一般情况）：$(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h) = (\\,0.5,\\, 0.975,\\, 0.6,\\, 0.4,\\, 0.0,\\, 0.0,\\, 0.2,\\, 0.3,\\, 10^{-4}\\,)$。\n- 用例 B（无相关性基线）：$(\\,0.0,\\, 0.99,\\, 0.5,\\, 0.5,\\, 0.0,\\, 0.0,\\, 0.15,\\, 0.15,\\, 10^{-5}\\,)$。\n- 用例 C（接近相关性上界）：$(\\,0.99,\\, 0.95,\\, 0.7,\\, 0.3,\\, 0.01,\\, 0.02,\\, 0.25,\\, 0.4,\\, 10^{-4}\\,)$。\n- 用例 D（权重边缘情况，仅单一资产）：$(\\,-0.9,\\, 0.975,\\, 1.0,\\, 0.0,\\, 0.0,\\, 0.0,\\, 0.2,\\, 0.3,\\, 10^{-4}\\,)$。\n\n最终输出格式：您的程序应生成单行输出，其中包含用例 A、B、C 和 D 的 $S_h(\\rho)$ 值，按此顺序以逗号分隔，并用方括号括起来，不含任何额外文本。例如，一个可接受的输出格式是\n$[s_A,s_B,s_C,s_D]$\n其中每个 $s_{\\cdot}$ 都是一个实数（浮点数）。", "solution": "在尝试解决方案之前，对问题陈述进行验证。\n\n**第一步：提取已知信息**\n- 投资组合构成：2 个资产。\n- 边际回报分布：资产 1 的回报 $R_1 \\sim \\mathcal{N}(\\mu_1, \\sigma_1^2)$；资产 2 的回报 $R_2 \\sim \\mathcal{N}(\\mu_2, \\sigma_2^2)$。\n- 相依结构：具有相关性参数 $\\rho \\in [-1, 1]$ 的高斯 copula。\n- 投资组合回报：$R_p = w_1 R_1 + w_2 R_2$，其中 $w_1, w_2 \\in \\mathbb{R}$ 是固定权重。\n- 投资组合损失：$L = -R_p$。\n- 置信水平：$\\alpha \\in (0, 1)$。\n- 期望亏损 (ES)：$ES_\\alpha = \\mathbb{E}[L \\mid L \\geq q_\\alpha(L)]$，其中 $q_\\alpha(L)$ 是损失 $L$ 的 $\\alpha$-分位数。\n- 目标量：对于步长 $h0$ 的中心差商 $S_h(\\rho) = \\frac{ES_\\alpha(\\rho + h) - ES_\\alpha(\\rho - h)}{2h}$。\n- 测试套件：\n  - 用例 A：$(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h) = (0.5, 0.975, 0.6, 0.4, 0.0, 0.0, 0.2, 0.3, 10^{-4})$。\n  - 用例 B：$(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h) = (0.0, 0.99, 0.5, 0.5, 0.0, 0.0, 0.15, 0.15, 10^{-5})$。\n  - 用例 C：$(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h) = (0.99, 0.95, 0.7, 0.3, 0.01, 0.02, 0.25, 0.4, 10^{-4})$。\n  - 用例 D：$(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h) = (-0.9, 0.975, 1.0, 0.0, 0.0, 0.0, 0.2, 0.3, 10^{-4})$。\n\n**第二步：验证**\n根据指定标准对问题进行评估。\n- **科学性**：该问题基于量化金融中标准、成熟的原理。高斯边际、高斯 copula、投资组合构建以及期望亏损的定义都是基本概念。\n- **适定性**：该问题要求计算一个明确定义的数值量 $S_h(\\rho)$。其基础模型是易于处理的。Copula 理论的一个基石指出，具有高斯边际和高斯 copula 的多元分布是一个多元正态分布。这将问题简化为涉及联合正态随机变量的线性组合，保证了其解的唯一性和稳定性。所提供的参数是有效的；具体而言，对于所有测试用例，$\\rho \\pm h$ 均保持在相关性的有效域 $[-1, 1]$ 内。\n- **客观性**：问题使用了精确、无歧义的数学语言和定义进行陈述。\n该问题显然不存在任何科学或逻辑上的缺陷、不完整性或模糊性。\n\n**第三步：结论与行动**\n问题是**有效的**。将制定解决方案。\n\n解决方案首先推导投资组合损失 $L$ 的分布，然后应用正态分布的期望亏损解析公式。\n\n首先，我们确定资产回报 $(R_1, R_2)$ 的联合分布。由于边际分布是高斯分布，$R_1 \\sim \\mathcal{N}(\\mu_1, \\sigma_1^2)$ 和 $R_2 \\sim \\mathcal{N}(\\mu_2, \\sigma_2^2)$，并且它们通过相关性参数为 $\\rho$ 的高斯 copula 耦合，因此联合分布是二元正态分布。协方差为 $\\text{Cov}(R_1, R_2) = \\rho \\sigma_1 \\sigma_2$。\n\n投资组合回报 $R_p = w_1 R_1 + w_2 R_2$ 是联合正态随机变量的线性组合。因此，$R_p$ 也服从正态分布。\n投资组合回报的均值为：\n$$\n\\mu_p = \\mathbb{E}[R_p] = \\mathbb{E}[w_1 R_1 + w_2 R_2] = w_1 \\mathbb{E}[R_1] + w_2 \\mathbb{E}[R_2] = w_1 \\mu_1 + w_2 \\mu_2\n$$\n投资组合回报的方差为：\n$$\n\\sigma_p^2 = \\text{Var}(R_p) = \\text{Var}(w_1 R_1 + w_2 R_2) = w_1^2 \\text{Var}(R_1) + w_2^2 \\text{Var}(R_2) + 2 w_1 w_2 \\text{Cov}(R_1, R_2)\n$$\n$$\n\\sigma_p^2(\\rho) = w_1^2 \\sigma_1^2 + w_2^2 \\sigma_2^2 + 2 w_1 w_2 \\rho \\sigma_1 \\sigma_2\n$$\n注意，投资组合方差 $\\sigma_p^2$ 是相关性参数 $\\rho$ 的函数。因此，投资组合回报为 $R_p \\sim \\mathcal{N}(\\mu_p, \\sigma_p^2(\\rho))$。\n\n投资组合损失定义为 $L = -R_p$。因此，损失 $L$ 也服从正态分布。\n损失的均值为：\n$$\n\\mu_L = \\mathbb{E}[L] = \\mathbb{E}[-R_p] = -\\mu_p = -(w_1 \\mu_1 + w_2 \\mu_2)\n$$\n损失的方差为：\n$$\n\\sigma_L^2(\\rho) = \\text{Var}(L) = \\text{Var}(-R_p) = (-1)^2 \\text{Var}(R_p) = \\sigma_p^2(\\rho)\n$$\n所以，损失分布为 $L \\sim \\mathcal{N}(\\mu_L, \\sigma_L^2(\\rho))$，其标准差为 $\\sigma_L(\\rho) = \\sqrt{\\sigma_L^2(\\rho)}$。观察可知，$\\mu_L$ 与 $\\rho$ 无关，而 $\\sigma_L(\\rho)$ 依赖于 $\\rho$。\n\n对于一个服从正态分布 $X \\sim \\mathcal{N}(\\mu, \\sigma^2)$ 的随机变量，其在置信水平 $\\alpha$ 下的期望亏损有一个闭式解析解：\n$$\nES_\\alpha(X) = \\mu + \\sigma \\frac{\\phi(z_\\alpha)}{1 - \\alpha}\n$$\n其中 $\\phi(\\cdot)$ 是标准正态分布 $\\mathcal{N}(0, 1)$ 的概率密度函数 (PDF)，$z_\\alpha = \\Phi^{-1}(\\alpha)$ 是标准正态分布的 $\\alpha$-分位数，而 $\\Phi(\\cdot)$ 是其累积分布函数 (CDF)。\n\n将此公式应用于投资组合损失 $L$，我们得到函数 $ES_\\alpha(\\rho)$：\n$$\nES_\\alpha(\\rho) = \\mu_L + \\sigma_L(\\rho) \\frac{\\phi(z_\\alpha)}{1 - \\alpha}\n$$\n\n计算任务是计算 $S_h(\\rho) = \\frac{ES_\\alpha(\\rho + h) - ES_\\alpha(\\rho - h)}{2h}$。这需要以下算法：\n1. 对于给定的测试用例 $(\\rho, \\alpha, w_1, w_2, \\mu_1, \\mu_2, \\sigma_1, \\sigma_2, h)$，定义一个函数，用于计算任意相关性输入下的 $ES_\\alpha$。\n2. 在此函数内部，对于给定的相关性输入（例如 $\\rho'$），计算 $\\mu_L$ 和 $\\sigma_L(\\rho')$。\n3. 计算常数因子 $\\frac{\\phi(\\Phi^{-1}(\\alpha))}{1 - \\alpha}$。分位数 $\\Phi^{-1}(\\alpha)$ 和概率密度函数值 $\\phi(\\cdot)$ 使用标准数值库函数获得。\n4. 组合这些值以得到 $ES_\\alpha(\\rho') = \\mu_L + \\sigma_L(\\rho') \\cdot (\\text{常数因子})$。\n5. 计算所需的两个相关性值：$\\rho_+ = \\rho + h$ 和 $\\rho_- = \\rho - h$。\n6. 调用步骤 1 中的函数来计算 $ES_\\alpha(\\rho_+)$ 和 $ES_\\alpha(\\rho_-)$。\n7. 最后，计算中心差商：$S_h(\\rho) = \\frac{ES_\\alpha(\\rho_+) - ES_\\alpha(\\rho_-)}{2h}$。\n对套件中提供的每个测试用例重复此过程。对于用例 D，其中 $w_2=0.0$，投资组合方差项 $2 w_1 w_2 \\rho \\sigma_1 \\sigma_2$ 变为零。因此，$\\sigma_L^2$ 与 $\\rho$ 无关，使得 $ES_\\alpha(\\rho)$ 成为关于 $\\rho$ 的常数函数。因此，其导数及其近似值 $S_h(\\rho)$ 必须为 $0$。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Computes the centered difference quotient of the Expected Shortfall with respect to the correlation parameter.\n    \"\"\"\n\n    # Test Suite (rho, alpha, w1, w2, mu1, mu2, sigma1, sigma2, h)\n    test_cases = [\n        (0.5, 0.975, 0.6, 0.4, 0.0, 0.0, 0.2, 0.3, 1e-4),    # Case A\n        (0.0, 0.99, 0.5, 0.5, 0.0, 0.0, 0.15, 0.15, 1e-5),  # Case B\n        (0.99, 0.95, 0.7, 0.3, 0.01, 0.02, 0.25, 0.4, 1e-4),   # Case C\n        (-0.9, 0.975, 1.0, 0.0, 0.0, 0.0, 0.2, 0.3, 1e-4),    # Case D\n    ]\n\n    results = []\n\n    def calculate_es_at_rho(\n        rho_val: float,\n        alpha: float,\n        w1: float,\n        w2: float,\n        mu1: float,\n        mu2: float,\n        sigma1: float,\n        sigma2: float\n    ) - float:\n        \"\"\"\n        Calculates the Expected Shortfall (ES) for the portfolio loss.\n\n        The problem specifies Gaussian marginals and a Gaussian copula, which implies\n        the joint distribution of returns is bivariate normal. The portfolio loss L, being\n        a linear combination of the returns, is therefore also normally distributed.\n        \"\"\"\n        \n        # Mean of portfolio loss L = -R_p = -(w1*R1 + w2*R2)\n        # This is independent of the correlation rho.\n        mu_L = -(w1 * mu1 + w2 * mu2)\n\n        # Variance of portfolio loss L = Var(-R_p) = Var(R_p)\n        # Var(R_p) = w1^2*Var(R1) + w2^2*Var(R2) + 2*w1*w2*Cov(R1, R2)\n        # Cov(R1, R2) = rho_val * sigma1 * sigma2\n        var_L = (w1**2 * sigma1**2) + (w2**2 * sigma2**2) + (2 * w1 * w2 * rho_val * sigma1 * sigma2)\n        \n        # The variance must be non-negative.\n        if var_L  0:\n            # This should not occur for valid parameters rho in [-1, 1] as the\n            # covariance matrix of (R1, R2) is positive semi-definite.\n            # Handle potential floating point inaccuracies near zero.\n            sigma_L = 0.0\n        else:\n            sigma_L = np.sqrt(var_L)\n\n        # The formula for ES for a Normal(mu, sigma^2) random variable is:\n        # ES_alpha = mu + sigma * (phi(z_alpha) / (1 - alpha))\n        # where z_alpha is the alpha-quantile of the standard normal distribution.\n        \n        # Avoid division by zero if alpha is 1, though problem states alpha in (0,1).\n        if alpha == 1.0:\n            # Undefined, but could be interpreted as infinity if sigma  0.\n            # However, problem constraints ensure alpha  1.\n            return float('inf') if sigma_L  0 else mu_L\n\n        z_alpha = norm.ppf(alpha)\n        pdf_at_z_alpha = norm.pdf(z_alpha)\n        \n        # The constant factor multiplying sigma_L\n        es_factor = pdf_at_z_alpha / (1.0 - alpha)\n\n        es = mu_L + sigma_L * es_factor\n        \n        return es\n\n    for case in test_cases:\n        rho, alpha, w1, w2, mu1, mu2, sigma1, sigma2, h = case\n\n        # Correlations for the centered difference quotient\n        rho_plus_h = rho + h\n        rho_minus_h = rho - h\n        \n        # Calculate ES at rho + h and rho - h\n        es_plus = calculate_es_at_rho(rho_plus_h, alpha, w1, w2, mu1, mu2, sigma1, sigma2)\n        es_minus = calculate_es_at_rho(rho_minus_h, alpha, w1, w2, mu1, mu2, sigma1, sigma2)\n\n        # Compute the centered difference quotient S_h(rho)\n        s_h_rho = (es_plus - es_minus) / (2.0 * h)\n        \n        results.append(s_h_rho)\n\n    # Format the output as specified: [s_A,s_B,s_C,s_D]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2395999"}]}