{"hands_on_practices": [{"introduction": "标准的 Ramsey-Cass-Koopmans (RCK) 模型假设效用是个人主义的。这项练习引入了一种更具现实意义的偏好结构，即“与邻居攀比”(catching up with the Joneses)，其中个体的效用取决于其相对消费水平。通过计算模型的稳态和稳定鞍路径的斜率，你将亲身体验分析动态经济模型局部动态的关键技术，并理解改变偏好的基本假设将如何影响模型的动态行为。[@problem_id:2381853]", "problem": "您将计算在“与邻俱进”（catching up with the Joneses）偏好下的 Ramsey–Cass–Koopmans 模型的均衡对象和局部稳定动态。考虑一个连续时间的代表性代理人经济体，其中没有人口增长和外生生产率增长。代表性家庭的瞬时效用取决于相对消费，由 ($c/C_{\\text{agg}}^{\\phi}$) 给出，其中 $c$ 是个人消费，$C_{\\text{agg}}$ 是总消费，$\\phi \\in [0,1)$ 衡量了外部性的强度。瞬时期效用函数为恒定相对风险规避（CRRA）形式：当 $\\sigma > 0$ 且 $\\sigma \\neq 1$ 时，$u(x) = \\dfrac{x^{1-\\sigma}}{1-\\sigma}$；当 $\\sigma = 1$ 时，$u(x) = \\ln x$。偏好是时间可分的，纯粹时间偏好率为 $\\rho > 0$。在对称均衡中，$C_{\\text{agg}} = c$。\n\n生产方面采用 Cobb–Douglas 生产函数，全要素生产率归一化为 $A = 1$，因此对于 $0 < \\alpha < 1$，$f(k) = k^{\\alpha}$，其中 $k$ 是人均资本。资本折旧率为 $\\delta > 0$。人均资源约束为 $\\dot{k} = f(k) - c - \\delta k$，给定初始资本 $k(0) = k_{0} > 0$。\n\n从代表性计划者问题的核心定义和最优控制的一阶条件出发，并利用在对称均衡中 $C_{\\text{agg}} = c$ 这一条件，可以证明 $(k,c)$ 的动态系统为：\n- $\\dot{k} = f(k) - \\delta k - c$,\n- $\\dfrac{\\dot{c}}{c} = \\dfrac{f'(k) - \\delta - \\rho}{D}$，其中 $D \\equiv \\sigma + \\phi(1 - \\sigma)$。\n\n稳态 $(k^{\\ast}, c^{\\ast})$ 由 $\\dot{k} = 0$ 和 $\\dot{c} = 0$ 定义。对于 Cobb–Douglas 生产函数 $f(k) = k^{\\alpha}$，这可以得到 $f'(k^{\\ast}) = \\delta + \\rho$，$k^{\\ast} = \\left(\\dfrac{\\alpha}{\\delta + \\rho}\\right)^{\\frac{1}{1-\\alpha}}$，以及 $c^{\\ast} = f(k^{\\ast}) - \\delta k^{\\ast}$。在稳态附近对二维系统 $(\\dot{k}, \\dot{c})$ 进行线性化，得到雅可比矩阵，其特征值 $\\lambda$ 满足方程 $\\lambda^{2} - \\rho \\lambda + \\dfrac{c^{\\ast} f''(k^{\\ast})}{D} = 0$，其中 $f''(k) = \\alpha(\\alpha - 1) k^{\\alpha - 2} < 0$。唯一的稳定特征值是负根，在 $(k,c)$ 空间中，$(k^{\\ast}, c^{\\ast})$ 点的局部稳定流形的斜率等于稳定特征向量的 $c$ 分量与 $k$ 分量之比，即 $S = \\rho - \\lambda_{\\text{s}} = \\dfrac{\\rho + \\sqrt{\\rho^{2} - 4 \\dfrac{c^{\\ast} f''(k^{\\ast})}{D}}}{2}$。因此，对于给定的 $k(0) = k_{0}$，与鞍点路径一致的初始消费的一阶线性近似为 $c(0) \\approx c^{\\ast} + S \\, (k_{0} - k^{\\ast})$。\n\n您的任务是实现一个程序，对于下面测试套件中的每一组参数，计算：\n- 稳态资本 $k^{\\ast}$，\n- 稳态消费 $c^{\\ast}$，\n- 稳态下的稳定流形斜率 $S$，\n- 线性化的鞍点路径初始消费 $c_{0,\\text{lin}} \\equiv c^{\\ast} + S \\, (k_{0} - k^{\\ast})$。\n\n所有计算必须假设 $A = 1$ 并使用上述定义。\n\n测试套件（每个案例为 $(\\alpha,\\sigma,\\phi,\\rho,\\delta,k_{0})$）：\n- 案例 $1$ (理想路径): $(0.33, 2.0, 0.5, 0.04, 0.08, 0.8 \\, k^{\\ast})$,\n- 案例 $2$ (强追赶强度，高于稳态资本): $(0.33, 2.0, 0.99, 0.04, 0.08, 1.2 \\, k^{\\ast})$,\n- 案例 $3$ (对数效用边界，$\\sigma = 1$): $(0.33, 1.0, 0.7, 0.04, 0.08, 0.95 \\, k^{\\ast})$。\n\n对于每个案例，您的程序必须：\n- 根据给定的 $(\\alpha,\\rho,\\delta)$ 计算 $k^{\\ast}$ 和 $c^{\\ast}$，\n- 根据该案例中指定的 $k^{\\ast}$ 倍数设置 $k_{0}$，\n- 计算 $D = \\sigma + \\phi(1-\\sigma)$，\n- 计算 $f''(k^{\\ast}) = \\alpha(\\alpha - 1) (k^{\\ast})^{\\alpha - 2}$，\n- 计算 $S = \\dfrac{\\rho + \\sqrt{\\rho^{2} - 4 \\dfrac{c^{\\ast} f''(k^{\\ast})}{D}}}{2}$，\n- 计算 $c_{0,\\text{lin}} = c^{\\ast} + S (k_{0} - k^{\\ast})$。\n\n输出规格：\n- 对于每个测试案例，生成一个包含四个浮点数的列表 $[k^{\\ast}, c^{\\ast}, S, c_{0,\\text{lin}}]$，每个浮点数四舍五入到 $6$ 位小数。\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，每个元素是对应案例的列表（例如，$[[\\dots],[\\dots],[\\dots]]$）。", "solution": "问题陈述须经验证。\n\n**第 1 步：提取已知信息**\n\n该问题提供了带有“与邻俱进”偏好的 Ramsey-Cass-Koopmans 模型的完整定量描述。已知信息如下：\n- 瞬时效用函数：当 $\\sigma > 0, \\sigma \\neq 1$ 时，$u(x) = \\dfrac{x^{1-\\sigma}}{1-\\sigma}$，当 $\\sigma = 1$ 时，$u(x) = \\ln x$，其中 $x = c/C_{\\text{agg}}^{\\phi}$。\n- 参数：外部性强度 $\\phi \\in [0,1)$，相对风险规避系数 $\\sigma > 0$，纯粹时间偏好率 $\\rho > 0$，资本折旧率 $\\delta > 0$。\n- 生产函数：$f(k) = k^{\\alpha}$，其中全要素生产率 $A=1$，资本份额 $0 < \\alpha < 1$。\n- 资源约束：$\\dot{k} = f(k) - c - \\delta k$。\n- 初始条件：$k(0) = k_{0} > 0$。\n- 对称均衡条件：$C_{\\text{agg}} = c$。\n- 动态系统方程：\n    - $\\dot{k} = k^{\\alpha} - \\delta k - c$\n    - $\\dfrac{\\dot{c}}{c} = \\dfrac{\\alpha k^{\\alpha-1} - \\delta - \\rho}{D}$，其中 $D \\equiv \\sigma + \\phi(1 - \\sigma)$。\n- 稳态公式：\n    - $k^{\\ast} = \\left(\\dfrac{\\alpha}{\\delta + \\rho}\\right)^{\\frac{1}{1-\\alpha}}$\n    - $c^{\\ast} = f(k^{\\ast}) - \\delta k^{\\ast} = (k^{\\ast})^{\\alpha} - \\delta k^{\\ast}$\n- 线性化动态公式：\n    - $f''(k^{\\ast}) = \\alpha(\\alpha - 1) (k^{\\ast})^{\\alpha - 2}$\n    - 稳定流形斜率：$S = \\dfrac{\\rho + \\sqrt{\\rho^{2} - 4 \\dfrac{c^{\\ast} f''(k^{\\ast})}{D}}}{2}$\n    - 线性化初始消费：$c_{0,\\text{lin}} = c^{\\ast} + S \\, (k_{0} - k^{\\ast})$\n- 参数测试套件 $(\\alpha, \\sigma, \\phi, \\rho, \\delta, k_{0})$：\n    - 案例 1：$(0.33, 2.0, 0.5, 0.04, 0.08, 0.8 \\, k^{\\ast})$\n    - 案例 2：$(0.33, 2.0, 0.99, 0.04, 0.08, 1.2 \\, k^{\\ast})$\n    - 案例 3：$(0.33, 1.0, 0.7, 0.04, 0.08, 0.95 \\, k^{\\ast})$\n\n**第 2 步：使用提取的已知信息进行验证**\n\n- **科学依据**：该问题基于 Ramsey-Cass-Koopmans 模型，这是现代宏观经济理论的一个基本框架。扩展到“与邻俱进”偏好是一个标准且经过充分研究的变体。所有给定的方程都是从该模型在对称均衡中的一阶条件正确推导出来的。该问题在科学上是合理的。\n- **适定性**：该问题设定了一个清晰、明确的计算任务。它为直接计算提供了所有必要的参数和公式。对于给定的参数范围，存在唯一的鞍点路径稳定均衡，确保了待计算的量是良定义的。\n- **客观性**：该问题以精确、形式化的数学和经济学语言陈述，没有主观性或模糊性。\n\n检查动态系统的参数集以确保内部一致性。为保证经济合理性，项 $D \\equiv \\sigma + \\phi(1-\\sigma)$ 必须为正，并且 $S$ 表达式中平方根下的项必须为非负。\n对于所有测试案例，$\\sigma > 0$ 且 $\\phi \\in [0,1)$。对于案例 1，$D = 1.5$；对于案例 2，$D=1.01$；对于案例 3 ($\\sigma=1$)，$D=1$。所有值均为正。\n平方根内的项是 $\\rho^2 - 4 c^{\\ast} f''(k^{\\ast})/D$。对于一个具有实际经济意义的经济体，稳态消费 $c^{\\ast}$ 必须为正。这要求 $(k^{\\ast})^{\\alpha} > \\delta k^{\\ast}$，可简化为 $(k^{\\ast})^{\\alpha-1} > \\delta$。使用稳态条件 $\\alpha (k^{\\ast})^{\\alpha-1} = \\delta + \\rho$，这等价于 $(\\delta+\\rho)/\\alpha > \\delta$，即 $\\rho > \\delta(\\alpha-1)$。由于 $\\rho>0$，$\\delta>0$ 且 $\\alpha<1$，此条件始终成立。\nCobb-Douglas 生产函数的二阶导数 $f''(k) = \\alpha(\\alpha-1)k^{\\alpha-2}$，在 $k>0$ 和 $\\alpha \\in (0,1)$ 的条件下是严格为负的。\n因此，项 $-4 c^{\\ast} f''(k^{\\ast})/D$ 严格为正。从而，平方根下的整个表达式 $\\rho^2 - 4 c^{\\ast} f''(k^{\\ast})/D$ 也严格为正。问题设置没有科学、数学或逻辑上的缺陷。\n\n**第 3 步：结论与行动**\n\n问题是**有效**的。将构建一个解决方案。\n\n**解决方案设计**\n\n任务是实现一个程序，为指定的经济模型的三个不同参数集计算四个关键量。解决方案将通过对每个案例依次应用所提供的公式来执行。\n\n对于由参数元组 $(\\alpha, \\sigma, \\phi, \\rho, \\delta, k_{0\\_\\text{ratio}})$ 定义的每个测试案例，将执行以下计算步骤：\n\n1.  **计算稳态资本 ($k^{\\ast}$)**：稳态的特征是资本的边际产出（扣除折旧后）等于时间偏好率，即 $f'(k^{\\ast}) - \\delta = \\rho$。对于 Cobb-Douglas 生产函数 $f(k) = k^{\\alpha}$，这变为 $\\alpha (k^{\\ast})^{\\alpha-1} = \\delta + \\rho$。解出 $k^{\\ast}$ 得到公式：\n    $$k^{\\ast} = \\left(\\frac{\\alpha}{\\delta + \\rho}\\right)^{\\frac{1}{1-\\alpha}}$$\n\n2.  **设置初始资本 ($k_{0}$)**：初始资本存量 $k_{0}$ 被指定为稳态资本 $k^{\\ast}$ 的一个倍数。\n    $$k_{0} = k_{0\\_\\text{ratio}} \\times k^{\\ast}$$\n\n3.  **计算稳态消费 ($c^{\\ast}$)**：在稳态下，资本是恒定的 ($\\dot{k}=0$)，因此所有产出都用于消费或替换折旧资本。从资源约束 $\\dot{k} = f(k) - \\delta k - c$ 中，我们得到：\n    $$c^{\\ast} = f(k^{\\ast}) - \\delta k^{\\ast} = (k^{\\ast})^{\\alpha} - \\delta k^{\\ast}$$\n\n4.  **计算偏好参数 ($D$)**: 这个复合参数出现在消费动态方程的分母中，并根据消费外部性的强度调整消费者对利率变化的反应。其定义为：\n    $$D = \\sigma + \\phi(1-\\sigma)$$\n    注意，对于对数效用情况 $\\sigma=1$，$D=1$。\n\n5.  **计算生产函数的二阶导数 ($f''(k^{\\ast})$)**：该项捕捉了生产函数在稳态下的曲率，对于确定局部动态至关重要。\n    $$f''(k^{\\ast}) = \\alpha(\\alpha - 1) (k^{\\ast})^{\\alpha - 2}$$\n\n6.  **计算稳定流形斜率 ($S$)**：稳态附近的系统动态是鞍点动态。稳定流形斜率 $S$ 决定了初始消费水平，该水平将经济体置于通往稳态的唯一收敛路径上。它由一个涉及线性化系统特征方程正根的公式给出：\n    $$S = \\frac{\\rho + \\sqrt{\\rho^2 - 4 \\frac{c^{\\ast} f''(k^{\\ast})}{D}}}{2}$$\n\n7.  **计算线性化初始消费 ($c_{0,\\text{lin}}$)**：稳定流形在稳态 $(k^{\\ast}, c^{\\ast})$ 附近的一阶泰勒近似是一条斜率为 $S$ 的直线。该近似给出了作为初始资本 $k(0) = k_0$ 函数的初始消费 $c(0)$：\n    $$c_{0,\\text{lin}} = c^{\\ast} + S (k_0 - k^{\\ast})$$\n\n这些步骤将在一个程序中实现，该程序将遍历三个测试案例，执行这些计算，并将得到的四个浮点数——$k^{\\ast}$、$c^{\\ast}$、$S$ 和 $c_{0,\\text{lin}}$——格式化为指定的输出结构。所有结果都将四舍五入到 6 位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes equilibrium objects and linearized dynamics for the Ramsey-Cass-Koopmans model\n    with 'catching up with the Joneses' preferences for a given set of test cases.\n    \"\"\"\n    \n    # Test suite: each case is (alpha, sigma, phi, rho, delta, k0_ratio)\n    test_cases = [\n        # Case 1: (0.33, 2.0, 0.5, 0.04, 0.08, 0.8 * k_star)\n        (0.33, 2.0, 0.5, 0.04, 0.08, 0.8),\n        # Case 2: (0.33, 2.0, 0.99, 0.04, 0.08, 1.2 * k_star)\n        (0.33, 2.0, 0.99, 0.04, 0.08, 1.2),\n        # Case 3: (0.33, 1.0, 0.7, 0.04, 0.08, 0.95 * k_star)\n        (0.33, 1.0, 0.7, 0.04, 0.08, 0.95),\n    ]\n\n    all_results = []\n\n    for case in test_cases:\n        alpha, sigma, phi, rho, delta, k0_ratio = case\n\n        # 1. Compute steady-state capital k_star\n        # k_star = (alpha / (delta + rho))^(1 / (1 - alpha))\n        base_k = alpha / (delta + rho)\n        exponent_k = 1.0 / (1.0 - alpha)\n        k_star = np.power(base_k, exponent_k)\n\n        # 2. Compute initial capital k0\n        k0 = k0_ratio * k_star\n\n        # 3. Compute steady-state consumption c_star\n        # c_star = k_star^alpha - delta * k_star\n        c_star = np.power(k_star, alpha) - delta * k_star\n        \n        # 4. Compute the preference parameter D\n        # D = sigma + phi * (1 - sigma)\n        D = sigma + phi * (1.0 - sigma)\n\n        # 5. Compute the second derivative of the production function f''(k_star)\n        # f''(k_star) = alpha * (alpha - 1) * k_star^(alpha - 2)\n        f_double_prime_k_star = alpha * (alpha - 1.0) * np.power(k_star, alpha - 2.0)\n\n        # 6. Compute the slope of the stable manifold S\n        # S = (rho + sqrt(rho^2 - 4 * c_star * f''(k_star) / D)) / 2\n        discriminant = np.power(rho, 2) - 4.0 * (c_star * f_double_prime_k_star / D)\n        S = (rho + np.sqrt(discriminant)) / 2.0\n\n        # 7. Compute linearized initial consumption c0_lin\n        # c0_lin = c_star + S * (k0 - k_star)\n        c0_lin = c_star + S * (k0 - k_star)\n        \n        # Store results for this case\n        case_results = [k_star, c_star, S, c0_lin]\n        all_results.append(case_results)\n\n    # Format the final output string as a list of lists of floats, rounded to 6 decimal places.\n    # e.g., [[val1, val2, ...], [val1, val2, ...]]\n    formatted_case_results = []\n    for res in all_results:\n        formatted_list = f\"[{','.join([f'{val:.6f}' for val in res])}]\"\n        formatted_case_results.append(formatted_list)\n    \n    final_output_string = f\"[{','.join(formatted_case_results)}]\"\n    \n    print(final_output_string)\n\nsolve()\n```", "id": "2381853"}, {"introduction": "如果政府实施一项严格的政策，例如固定资本产出比，将会发生什么？这项练习要求你从基本原理出发，思考这种政策与一个由理性、最优化的经济主体构成的经济体相容的条件。这个问题将促使你超越简单求解模型的层次，转而运用模型的核心原则——欧拉方程和资源约束——来检验均衡的一致性，从而加深你对 RCK 框架下有效均衡路径定义的理解。[@problem_id:2381831]", "problem": "考虑一个连续时间的 Ramsey-Cass-Koopmans (RCK) 模型，其中一个代表性家庭通过最大化其具有恒定相对风险规避 (CRRA) 的瞬时效用的贴现积分来进行决策。人口以恒定速率 $n$ 增长，劳动增进型生产率以恒定速率 $g_A$ 增长，贴现率为 $\\rho$，资本折旧率为 $\\delta$，CRRA 系数为 $\\theta$。产出由一家使用 Cobb-Douglas 技术的竞争性企业生产。政府承诺实施一项政策，使得总资本-产出比 $K/Y$ 随时间保持恒定。你的任务是从第一性原理出发，确定该政策在何种条件下与 RCK 模型中的均衡路径相一致，并计算出隐含的数量和增长率。\n\n模型原语和基本关系：\n- 偏好：瞬时效用为 $u(c) = \\frac{c^{1-\\theta}}{1-\\theta}$，其中 $c$ 为人均消费，$\\theta \\neq 1$；在 $\\theta = 1$ 的特殊情况下，$u(c) = \\ln(c)$。\n- 欧拉方程（最优消费的一阶条件）：$\\dot{c}/c = \\frac{1}{\\theta} (r - \\rho)$，其中 $r$ 是家庭面临的资本净回报率。\n- 生产：总产出 $Y = K^{\\alpha} (A L)^{1-\\alpha}$，其中 $K$ 为资本，$L$ 为劳动，$A$ 为技术水平。\n- 资本的边际产出：在完全竞争下，资本的租金率（毛）等于其边际产出 $R = \\alpha Y/K$，因此净回报率为 $r = R - \\delta = \\alpha (Y/K) - \\delta$。\n- 资本积累：$\\dot{K} = Y - C - \\delta K$，其中 $C$ 是总消费，且没有政府消费。\n- 外生状态的增长：$\\dot{L}/L = n$ 和 $\\dot{A}/A = g_A$。\n\n政府政策：\n- 该政策将总资本-产出比固定在一个恒定水平：$K/Y = \\varphi$，在所有时间均如此。\n\n任务：\n1) 仅从上述基本关系出发，推导出当 $K/Y$ 恒定时必须满足的均衡可行性条件。特别地，确定与最优化的家庭和恒定 $K/Y$ 政策相一致的 $\\varphi$ 的唯一值（如果存在）。清晰地指出该路径上总量和人均变量的隐含增长率。\n\n2) 根据你的推导，对于任意候选政策值 $\\varphi_{\\text{policy}}$，计算以下量：\n- 使跨期最优性条件和可行性相等的唯一候选恒定比率，记为 $\\varphi^{\\star}$。\n- 在该政策下，由欧拉方程隐含的人均消费增长率，$g_c^{\\text{Euler}}$。\n- 在恒定 $K/Y$ 下，由生产方隐含的人均产出增长率，$g_y^{\\text{pc}}$。\n- 在该政策下，由可行性隐含的恒定消费占产出份额，$s_c = C/Y$。\n\n3) 判断政策 $\\varphi_{\\text{policy}}$ 是否与具有恒定 $K/Y$ 的 Ramsey 均衡路径一致。当且仅当以下所有条件同时成立时，宣布其为可行的：\n- $|g_c^{\\text{Euler}} - g_y^{\\text{pc}}| < \\tau$，其中数值容差 $\\tau = 10^{-10}$，\n- $0 < s_c < 1$，并且\n- $\\varphi_{\\text{policy}} > 0$。\n相应地返回一个布尔值。\n\n数值测试套件：\n对于下方的每个参数元组 $(\\alpha,\\delta,\\rho,\\theta,g_A,n,\\varphi_{\\text{policy}})$，计算并返回一个列表 $[\\varphi^{\\star}, g_c^{\\text{Euler}}, g_y^{\\text{pc}}, s_c, \\text{feasible}]$。\n\n使用以下四个测试用例：\n- 用例 1：$(\\alpha,\\delta,\\rho,\\theta,g_A,n,\\varphi_{\\text{policy}}) = (\\,0.33,\\,0.06,\\,0.02,\\,2.0,\\,0.02,\\,0.01,\\,2.75\\,)$。\n- 用例 2：$(\\alpha,\\delta,\\rho,\\theta,g_A,n,\\varphi_{\\text{policy}}) = (\\,0.33,\\,0.06,\\,0.02,\\,2.0,\\,0.02,\\,0.01,\\,3.30\\,)$。\n- 用例 3：$(\\alpha,\\delta,\\rho,\\theta,g_A,n,\\varphi_{\\text{policy}}) = (\\,0.30,\\,0.05,\\,0.03,\\,1.0,\\,0.00,\\,0.00,\\,3.75\\,)$。\n- 用例 4：$(\\alpha,\\delta,\\rho,\\theta,g_A,n,\\varphi_{\\text{policy}}) = (\\,0.36,\\,0.05,\\,0.01,\\,1.5,\\,0.03,\\,0.02,\\,3.00\\,)$。\n\n最终输出格式：\n你的程序应产生单行输出，包含一个由方括号括起来的逗号分隔列表形式的结果，其中每个元素是对应一个测试用例的列表，顺序与上文给出的一致。例如，一个语法上有效的输出看起来像 $[\\text{case1},\\text{case2},\\text{case3},\\text{case4}]$。每个 $\\text{casei}$ 必须是 $[\\varphi^{\\star}, g_c^{\\text{Euler}}, g_y^{\\text{pc}}, s_c, \\text{feasible}]$ 的形式。所有实数值必须以小数（而非百分比）形式返回。", "solution": "本问题要求在 Ramsey-Cass-Koopmans (RCK) 模型中，分析一项将总资本-产出比 $K/Y$ 固定为常数 $\\varphi$ 的特定政府政策。我们必须确定这项政策在何种条件下与一个市场均衡相一致，在该均衡中，家庭进行最优化决策，企业则处于竞争之中。\n\n首先，我们分析政策约束 $K/Y = \\varphi$ 的含义，其中 $\\varphi$ 是一个正常数。对时间取对数导数可得：\n$$\n\\frac{d}{dt} \\ln(K) - \\frac{d}{dt} \\ln(Y) = 0 \\Rightarrow \\frac{\\dot{K}}{K} = \\frac{\\dot{Y}}{Y}\n$$\n这意味着总量资本 $K$ 和总量产出 $Y$ 必须以相同的恒定速率增长，我们将其记为 $g_K$。\n\n接下来，我们考察总量生产函数 $Y = K^{\\alpha} (A L)^{1-\\alpha}$。对时间取对数导数可以得出产出的增长率：\n$$\n\\frac{\\dot{Y}}{Y} = \\alpha \\frac{\\dot{K}}{K} + (1-\\alpha) \\left( \\frac{\\dot{A}}{A} + \\frac{\\dot{L}}{L} \\right)\n$$\n代入已知的增长率 $g_K = \\dot{K}/K = \\dot{Y}/Y$、$g_A = \\dot{A}/A$ 和 $n = \\dot{L}/L$，我们得到：\n$$\ng_K = \\alpha g_K + (1-\\alpha)(g_A + n) \\implies (1-\\alpha)g_K = (1-\\alpha)(g_A + n)\n$$\n假设 $\\alpha \\neq 1$，我们发现总量资本和产出的增长率由技术和人口的外生增长率决定：\n$$\ng_K = g_Y = g_A + n\n$$\n现在我们可以确定人均产出 $y_{pc} = Y/L$ 的增长率。\n$$\ng_{y}^{\\text{pc}} = \\frac{\\dot{y}_{pc}}{y_{pc}} = \\frac{\\dot{Y}}{Y} - \\frac{\\dot{L}}{L} = (g_A + n) - n = g_A\n$$\n这表明，在恒定 $K/Y$ 的政策下，人均产出必须以技术进步率 $g_A$ 增长。这是问题所要求的第一个关键量。\n\n现在，我们使用资本积累方程 $\\dot{K} = Y - C - \\delta K$ 来求出隐含的消费占产出份额 $s_c = C/Y$。将该积累方程两边同除以 $K$：\n$$\n\\frac{\\dot{K}}{K} = \\frac{Y}{K} - \\frac{C}{K} - \\delta\n$$\n代入 $\\dot{K}/K = g_A+n$、$Y/K = 1/\\varphi$ 和 $C/K = (C/Y)/(K/Y) = s_c/\\varphi$：\n$$\ng_A + n = \\frac{1}{\\varphi} - \\frac{s_c}{\\varphi} - \\delta = \\frac{1-s_c}{\\varphi} - \\delta\n$$\n解出消费份额 $s_c$ 可得：\n$$\ns_c = 1 - \\varphi (g_A + n + \\delta)\n$$\n为了使解具有经济意义，消费必须为正但小于总产出，这要求 $0 < s_c < 1$。条件 $s_c < 1$ 意味着 $-\\varphi(g_A+n+\\delta) < 0$，对于正参数而言，该条件总是成立的。条件 $s_c > 0$ 意味着 $1 - \\varphi(g_A+n+\\delta) > 0$，即 $\\varphi < 1/(g_A+n+\\delta)$。\n\n到目前为止，分析仅依赖于生产和资源可行性。现在我们必须纳入家庭的跨期优化，它由人均消费 $c$ 的欧拉方程概括：\n$$\n\\frac{\\dot{c}}{c} = \\frac{1}{\\theta} (r - \\rho)\n$$\n在完全竞争下，资本的净回报率 $r$ 是扣除折旧后的资本边际产出：$r = R - \\delta = \\alpha (Y/K) - \\delta$。政策 $K/Y=\\varphi$ 意味着回报率是恒定的：\n$$\nr = \\frac{\\alpha}{\\varphi} - \\delta\n$$\n由于 $r$ 是恒定的，欧拉方程意味着人均消费以一个恒定速率增长，我们将其记为 $g_c^{\\text{Euler}}$：\n$$\ng_c^{\\text{Euler}} = \\frac{1}{\\theta} \\left( \\frac{\\alpha}{\\varphi} - \\delta - \\rho \\right)\n$$\n这是人均消费的增长率，它确保在给定政策 $\\varphi$ 所隐含的资本回报率下，家庭处于其最优路径上。\n\n为了使模型处于完全均衡状态，从家庭方面得出的人均消费增长率 ($g_c^{\\text{Euler}}$) 必须与生产方面所隐含的增长率相一致。由于 $s_c = C/Y$ 是恒定的，总消费 $C$ 必须以与总产出 $Y$ 相同的速率 $g_Y = g_A+n$ 增长。因此，人均消费 $c=C/L$ 的增长率为：\n$$\n\\frac{\\dot{c}}{c} = \\frac{\\dot{C}}{C} - \\frac{\\dot{L}}{L} = (g_A+n) - n = g_A\n$$\n这意味着要使该路径可行，人均消费必须以与人均产出相同的速率 $g_A$ 增长。因此，一个一致的均衡要求 $g_c^{\\text{Euler}} = g_y^{\\text{pc}} = g_A$。\n$$\ng_A = \\frac{1}{\\theta} \\left( \\frac{\\alpha}{\\varphi} - \\delta - \\rho \\right)\n$$\n这个方程定义了与平衡增长路径均衡相一致的唯一资本-产出比，我们将其记为 $\\varphi^{\\star}$：\n$$\n\\theta g_A + \\delta + \\rho = \\frac{\\alpha}{\\varphi^{\\star}} \\implies \\varphi^{\\star} = \\frac{\\alpha}{\\theta g_A + \\delta + \\rho}\n$$\n\n为了解决给定政策值 $\\varphi_{\\text{policy}}$ 的数值问题，我们遵循以下步骤：\n1.  计算与均衡一致的唯一资本-产出比，$\\varphi^{\\star} = \\frac{\\alpha}{\\theta g_A + \\delta + \\rho}$。该值仅取决于经济的基本参数，而不取决于被测试的具体政策。\n2.  计算在政策 $\\varphi_{\\text{policy}}$ 下，由欧拉方程隐含的人均消费增长率，$g_c^{\\text{Euler}} = \\frac{1}{\\theta} \\left( \\frac{\\alpha}{\\varphi_{\\text{policy}}} - \\delta - \\rho \\right)$。\n3.  在恒定 $K/Y$ 的情况下，由生产方隐含的人均产出增长率始终是 $g_y^{\\text{pc}} = g_A$。\n4.  计算在政策 $\\varphi_{\\text{policy}}$ 下，由资本积累隐含的消费占产出份额，$s_c = 1 - \\varphi_{\\text{policy}}(g_A + n + \\delta)$。\n5.  通过同时检查三个条件来判断政策是否可行：\n    a) 增长率的一致性：$|g_c^{\\text{Euler}} - g_y^{\\text{pc}}| < \\tau$，其中 $\\tau = 10^{-10}$ 是一个微小容差。此条件当且仅当 $\\varphi_{\\text{policy}}$ 在数值上非常接近 $\\varphi^{\\star}$ 时满足。\n    b) 经济可行性：$0 < s_c < 1$。\n    c) 平凡条件检查：$\\varphi_{\\text{policy}} > 0$。\n\n当且仅当所有三个条件都得到满足时，政策 $\\varphi_{\\text{policy}}$ 才被视为与 Ramsey 均衡路径一致。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function that processes all test cases for the RCK model analysis.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (alpha, delta, rho, theta, g_A, n, phi_policy)\n        (0.33, 0.06, 0.02, 2.0, 0.02, 0.01, 2.75),\n        (0.33, 0.06, 0.02, 2.0, 0.02, 0.01, 3.30),\n        (0.30, 0.05, 0.03, 1.0, 0.00, 0.00, 3.75),\n        (0.36, 0.05, 0.01, 1.5, 0.03, 0.02, 3.00),\n    ]\n\n    results = []\n    for case in test_cases:\n        alpha, delta, rho, theta, g_A, n, phi_policy = case\n        result = compute_rck_quantities(alpha, delta, rho, theta, g_A, n, phi_policy)\n        results.append(result)\n\n    # Format the final output string as a list of lists.\n    # Each inner list is converted to a string without spaces for clean formatting.\n    formatted_results = [f\"[{','.join(map(str, res))}]\" for res in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef compute_rck_quantities(alpha, delta, rho, theta, g_A, n, phi_policy):\n    \"\"\"\n    Computes the required quantities for a single set of RCK model parameters and a policy choice.\n\n    Args:\n        alpha (float): Capital share of output.\n        delta (float): Depreciation rate of capital.\n        rho (float): Household discount rate.\n        theta (float): Coefficient of constant relative risk aversion (CRRA).\n        g_A (float): Growth rate of labor-augmenting technology.\n        n (float): Population growth rate.\n        phi_policy (float): The government's chosen constant capital-output ratio (K/Y).\n\n    Returns:\n        list: A list containing [phi_star, g_c_euler, g_y_pc, s_c, feasible].\n    \"\"\"\n    tau = 1e-10\n\n    # 1. Compute phi_star: the unique equilibrium-consistent capital-output ratio.\n    # phi_star = alpha / (theta * g_A + delta + rho)\n    phi_star_denominator = theta * g_A + delta + rho\n    # This denominator should be positive for any economically reasonable parameters.\n    phi_star = alpha / phi_star_denominator\n\n    # 2. Compute g_c_euler: per-capita consumption growth from the Euler equation under phi_policy.\n    # g_c_euler = (1/theta) * (alpha/phi_policy - delta - rho)\n    net_return_r = alpha / phi_policy - delta\n    g_c_euler = (net_return_r - rho) / theta\n\n    # 3. Compute g_y_pc: per-capita output growth from the production side.\n    # On a path with constant K/Y, per-capita variables grow at the rate of technology.\n    g_y_pc = g_A\n\n    # 4. Compute s_c: consumption share of output from the capital accumulation identity.\n    # s_c = 1 - phi_policy * (g_A + n + delta)\n    s_c = 1.0 - phi_policy * (g_A + n + delta)\n\n    # 5. Determine if the policy is feasible based on the problem's criteria.\n    # Condition 1: Consistency between household optimization and production feasibility.\n    growth_rates_match = abs(g_c_euler - g_y_pc) < tau\n    # Condition 2: Economic viability of the consumption share.\n    consumption_share_valid = 0 < s_c < 1\n    # Condition 3: Positive capital-output ratio.\n    phi_is_positive = phi_policy > 0\n    \n    feasible = growth_rates_match and consumption_share_valid and phi_is_positive\n\n    return [phi_star, g_c_euler, g_y_pc, s_c, feasible]\n\n# Execute the solver\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2381831"}, {"introduction": "在计算建模中，我们使用的参数通常是估计值或可能存在微小的误差。这些小误差对我们的结果有多大影响？这项练习引入了灵敏度分析的概念，这是一个在应用建模中至关重要的工具。通过分析推导并计算稳态资本存量对贴现率变化的敏感性，你将掌握评估模型结论稳健性的关键技能，这突显了理解解的局部属性在实践中的重要性。[@problem_id:2381856]", "problem": "考虑一个连续时间的拉姆齐-卡斯-库普曼 (RCK) 经济模型。该模型具有一个代表性社会计划者，人口恒定且无外生增长，人均生产函数为柯布-道格拉斯形式 $f(k) = k^{\\alpha}$，资本折旧率为 $\\delta \\ge 0$。计划者以恒定贴现率 $\\rho > 0$ 对效用进行贴现。在消费恒定的稳态下，必要的一阶条件意味着稳态资本存量 $k^{\\ast}$ 满足\n$$\nf^{\\prime}(k^{\\ast}) = \\rho + \\delta.\n$$\n对于 $f(k) = k^{\\alpha}$ 且 $\\alpha \\in (0,1)$ 的情况，从参数 $(\\alpha,\\delta,\\rho)$ 到稳态 $k^{\\ast}$ 的映射由上述条件唯一确定。\n\n假设参数 $\\rho$ 在计算中存在一个量级为 $\\varepsilon \\in (0,1)$ 的微小相对数值误差，因此程序使用的是 $\\tilde{\\rho}_{+} = \\rho (1+\\varepsilon)$ 或 $\\tilde{\\rho}_{-} = \\rho (1-\\varepsilon)$，而不是 $\\rho$。定义：\n- 精确稳态 $k^{\\ast}(\\rho)$：使用真实 $\\rho$ 满足稳态条件的资本存量。\n- 扰动稳态 $k^{\\ast}(\\tilde{\\rho}_{+})$ 和 $k^{\\ast}(\\tilde{\\rho}_{-})$：分别使用 $\\tilde{\\rho}_{+}$ 和 $\\tilde{\\rho}_{-}$ 计算得出的稳态。\n- $k^{\\ast}$ 对 $\\rho$ 在 $(\\alpha,\\delta,\\rho)$ 处的对数敏感度的绝对值定义为\n$$\nS(\\alpha,\\delta,\\rho) = \\left|\\frac{\\partial \\ln k^{\\ast}(\\rho)}{\\partial \\ln \\rho}\\right|.\n$$\n- 由扰动引起的相对变化定义为\n$$\nR_{+} = \\frac{\\left|k^{\\ast}(\\tilde{\\rho}_{+}) - k^{\\ast}(\\rho)\\right|}{k^{\\ast}(\\rho)}, \\quad \nR_{-} = \\frac{\\left|k^{\\ast}(\\tilde{\\rho}_{-}) - k^{\\ast}(\\rho)\\right|}{k^{\\ast}(\\rho)}.\n$$\n\n您的任务是编写一个程序，对于每个测试用例 $(\\alpha,\\delta,\\rho,\\varepsilon)$，计算并返回三元组 $[S(\\alpha,\\delta,\\rho), R_{+}, R_{-}]$。\n\n测试套件。您的程序必须评估以下四组参数，这些参数的选择覆盖了一个标准情况、一个零折旧的边界情况、一个高资本份额情况和一个高贴现率情况：\n- 情况 A：$(\\alpha,\\delta,\\rho,\\varepsilon) = (0.36, 0.06, 0.04, 10^{-8})$。\n- 情况 B：$(\\alpha,\\delta,\\rho,\\varepsilon) = (0.36, 0.00, 0.0001, 10^{-8})$。\n- 情况 C：$(\\alpha,\\delta,\\rho,\\varepsilon) = (0.80, 0.02, 0.03, 10^{-8})$。\n- 情况 D：$(\\alpha,\\delta,\\rho,\\varepsilon) = (0.50, 0.10, 0.20, 10^{-8})$。\n\n最终输出格式。您的程序应生成单行输出，其中包含按 A、B、C、D 顺序排列的三元组列表，列表内不含空格。每个三元组的形式为 $[S,R_{+},R_{-}]$。例如，输出必须采用以下形式\n$$\n[[S_A,R_{+,A},R_{-,A}],[S_B,R_{+,B},R_{-,B}],[S_C,R_{+,C},R_{-,C}],[S_D,R_{+,D},R_{-,D}]].\n$$\n所有返回的值都必须是实数（浮点数）。", "solution": "问题陈述已经过分析，并被认为是有效的。该问题提法适定，科学上基于标准的拉姆齐-卡斯-库普曼增长模型，并为获得唯一解提供了所有必要信息。我们将继续进行推导和计算。\n\n任务是针对给定的参数集 $(\\alpha, \\delta, \\rho, \\varepsilon)$ 计算三个量：稳态资本存量对贴现率 $\\rho$ 的对数敏感度 $S(\\alpha, \\delta, \\rho)$，以及由 $\\rho$ 的微小扰动 $\\varepsilon$ 引起的稳态资本存量的相对误差 $R_{+}$ 和 $R_{-}$。\n\n首先，我们必须推导人均稳态资本存量 $k^{\\ast}$ 的解析表达式。出发点是稳态的必要一阶条件：\n$$f^{\\prime}(k^{\\ast}) = \\rho + \\delta$$\n问题指定了柯布-道格拉斯生产函数 $f(k) = k^{\\alpha}$，其中 $k$ 是人均资本存量，$\\alpha \\in (0,1)$ 是资本的产出弹性。该函数对 $k$ 的一阶导数为：\n$$f^{\\prime}(k) = \\frac{d}{dk}(k^{\\alpha}) = \\alpha k^{\\alpha-1}$$\n将此导数代入稳态条件，得到：\n$$\\alpha (k^{\\ast})^{\\alpha-1} = \\rho + \\delta$$\n现在我们可以通过分离变量来求解 $k^{\\ast}$：\n$$(k^{\\ast})^{\\alpha-1} = \\frac{\\rho + \\delta}{\\alpha}$$\n$$k^{\\ast} = \\left(\\frac{\\rho + \\delta}{\\alpha}\\right)^{\\frac{1}{\\alpha-1}}$$\n此方程给出了作为模型参数 $\\alpha$、$\\delta$ 和 $\\rho$ 的函数的稳态资本存量 $k^{\\ast}$。\n\n接下来，我们推导绝对对数敏感度 $S(\\alpha, \\delta, \\rho)$ 的表达式。根据定义：\n$$S(\\alpha, \\delta, \\rho) = \\left|\\frac{\\partial \\ln k^{\\ast}(\\rho)}{\\partial \\ln \\rho}\\right|$$\n使用链式法则，这可以写成 $\\left|\\frac{\\partial \\ln k^{\\ast}}{\\partial \\rho} \\frac{\\partial \\rho}{\\partial \\ln \\rho}\\right|$。由于 $\\frac{\\partial \\ln \\rho}{\\partial \\rho} = \\frac{1}{\\rho}$，因此 $\\frac{\\partial \\rho}{\\partial \\ln \\rho} = \\rho$。表达式变为：\n$$S(\\alpha, \\delta, \\rho) = \\left|\\rho \\frac{\\partial \\ln k^{\\ast}}{\\partial \\rho}\\right|$$\n为了计算它，我们首先求 $k^{\\ast}$ 的自然对数：\n$$\\ln k^{\\ast} = \\ln\\left[\\left(\\frac{\\rho + \\delta}{\\alpha}\\right)^{\\frac{1}{\\alpha-1}}\\right] = \\frac{1}{\\alpha-1} \\ln\\left(\\frac{\\rho + \\delta}{\\alpha}\\right) = \\frac{1}{\\alpha-1} \\left[ \\ln(\\rho + \\delta) - \\ln(\\alpha) \\right]$$\n现在，我们将 $\\ln k^{\\ast}$ 对 $\\rho$ 求导：\n$$\\frac{\\partial \\ln k^{\\ast}}{\\partial \\rho} = \\frac{1}{\\alpha-1} \\left[ \\frac{1}{\\rho + \\delta} \\cdot \\frac{\\partial}{\\partial \\rho}(\\rho + \\delta) - 0 \\right] = \\frac{1}{(\\alpha-1)(\\rho + \\delta)}$$\n将其代回 $S$ 的表达式中：\n$$S(\\alpha, \\delta, \\rho) = \\left| \\rho \\cdot \\frac{1}{(\\alpha-1)(\\rho + \\delta)} \\right| = \\left| \\frac{\\rho}{(\\alpha-1)(\\rho + \\delta)} \\right|$$\n鉴于 $\\alpha \\in (0,1)$，项 $(\\alpha-1)$ 为负。参数 $\\rho$ 和 $\\delta$ 为非负，且 $\\rho > 0$，所以 $(\\rho+\\delta)$ 为正。因此，绝对值内的表达式为负。我们可以通过去掉绝对值并对表达式取负来简化：\n$$S(\\alpha, \\delta, \\rho) = -\\frac{\\rho}{(\\alpha-1)(\\rho + \\delta)} = \\frac{\\rho}{(1-\\alpha)(\\rho + \\delta)}$$\n这是敏感度 $S$ 的最终解析公式。\n\n最后，我们构建相对变化 $R_{+}$ 和 $R_{-}$ 的表达式。它们的定义如下：\n$$R_{+} = \\frac{\\left|k^{\\ast}(\\tilde{\\rho}_{+}) - k^{\\ast}(\\rho)\\right|}{k^{\\ast}(\\rho)}, \\quad R_{-} = \\frac{\\left|k^{\\ast}(\\tilde{\\rho}_{-}) - k^{\\ast}(\\rho)\\right|}{k^{\\ast}(\\rho)}$$\n其中 $\\tilde{\\rho}_{+} = \\rho(1+\\varepsilon)$ 且 $\\tilde{\\rho}_{-} = \\rho(1-\\varepsilon)$。\n这些可以改写为：\n$$R_{+} = \\left|\\frac{k^{\\ast}(\\tilde{\\rho}_{+})}{k^{\\ast}(\\rho)} - 1\\right|, \\quad R_{-} = \\left|\\frac{k^{\\ast}(\\tilde{\\rho}_{-})}{k^{\\ast}(\\rho)} - 1\\right|$$\n让我们计算对于一个一般的扰动率 $\\tilde{\\rho}$ 的比率 $\\frac{k^{\\ast}(\\tilde{\\rho})}{k^{\\ast}(\\rho)}$：\n$$\\frac{k^{\\ast}(\\tilde{\\rho})}{k^{\\ast}(\\rho)} = \\frac{\\left(\\frac{\\tilde{\\rho} + \\delta}{\\alpha}\\right)^{\\frac{1}{\\alpha-1}}}{\\left(\\frac{\\rho + \\delta}{\\alpha}\\right)^{\\frac{1}{\\alpha-1}}} = \\left(\\frac{\\tilde{\\rho} + \\delta}{\\rho + \\delta}\\right)^{\\frac{1}{\\alpha-1}}$$\n对于 $R_{+}$，我们代入 $\\tilde{\\rho} = \\tilde{\\rho}_{+} = \\rho(1+\\varepsilon)$：\n$$R_{+} = \\left| \\left(\\frac{\\rho(1+\\varepsilon) + \\delta}{\\rho + \\delta}\\right)^{\\frac{1}{\\alpha-1}} - 1 \\right|$$\n对于 $R_{-}$，我们代入 $\\tilde{\\rho} = \\tilde{\\rho}_{-} = \\rho(1-\\varepsilon)$：\n$$R_{-} = \\left| \\left(\\frac{\\rho(1-\\varepsilon) + \\delta}{\\rho + \\delta}\\right)^{\\frac{1}{\\alpha-1}} - 1 \\right|$$\n这些是相对变化量的精确公式。\n\n现在的计算算法很简单：\n1. 对于每个测试用例 $(\\alpha, \\delta, \\rho, \\varepsilon)$，使用其推导出的解析公式计算 $S$。\n2. 对于相同的测试用例，使用其推导出的解析公式计算 $R_{+}$ 和 $R_{-}$。\n3. 为每个情况收集三元组 $[S, R_{+}, R_{-}]$。\n4. 将最终输出格式化为这些三元组的列表，并连接成一个不含空格的单个字符串。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes sensitivity and relative changes for the Ramsey-Cass-Koopmans model \n    steady state given specific parameter sets.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (alpha, delta, rho, epsilon)\n    test_cases = [\n        # Case A: Standard\n        (0.36, 0.06, 0.04, 1e-8),\n        # Case B: Zero depreciation\n        (0.36, 0.00, 0.0001, 1e-8),\n        # Case C: High capital share\n        (0.80, 0.02, 0.03, 1e-8),\n        # Case D: High discount rate\n        (0.50, 0.10, 0.20, 1e-8),\n    ]\n\n    results = []\n    for case in test_cases:\n        alpha, delta, rho, epsilon = case\n\n        # 1. Calculate the logarithmic sensitivity S(alpha, delta, rho)\n        # Formula: S = rho / ((1 - alpha) * (rho + delta))\n        s_val = rho / ((1.0 - alpha) * (rho + delta))\n\n        # 2. Calculate the relative changes R+ and R-\n        # The exponent in the k* formula is 1 / (alpha - 1)\n        exponent = 1.0 / (alpha - 1.0)\n        \n        # Calculate R+\n        # Formula: R+ = |( (rho*(1+eps) + delta) / (rho + delta) )^exponent - 1|\n        base_plus = (rho * (1.0 + epsilon) + delta) / (rho + delta)\n        r_plus = abs(pow(base_plus, exponent) - 1.0)\n        \n        # Calculate R-\n        # Formula: R- = |( (rho*(1-eps) + delta) / (rho + delta) )^exponent - 1|\n        base_minus = (rho * (1.0 - epsilon) + delta) / (rho + delta)\n        r_minus = abs(pow(base_minus, exponent) - 1.0)\n        \n        results.append([s_val, r_plus, r_minus])\n\n    # Format the results into a single string with no spaces, as per the\n    # problem specification. Using str() on the list of lists produces\n    # the correct bracket structure, and .replace() removes the spaces.\n    final_output_string = str(results).replace(\" \", \"\")\n    \n    # Final print statement in the exact required format.\n    print(final_output_string)\n\nsolve()\n```", "id": "2381856"}]}