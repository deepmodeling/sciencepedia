{"hands_on_practices": [{"introduction": "理论通过实践才得以彰显其生命力。在短率模型中，诸如均值回归速度 $\\kappa$、长期均值 $\\theta$ 和波动率 $\\sigma$ 等参数并非抽象符号，而是模型行为的直接驱动力。本练习将通过一个重要的经济现象——收益率曲线倒挂，来帮助您建立对这些参数影响的直观理解。通过计算不同参数组合下收益率曲线倒挂的概率，您将亲身体会到模型参数如何塑造未来的利率路径，这是进行模型风险分析和经济预测的一项基本技能。[@problem_id:2429602]", "problem": "考虑风险中性概率测度下的 Vasicek 短期利率模型，其中瞬时短期利率 $r_t$ 服从随机微分方程\n$$\ndr_t = \\kappa \\left(\\theta - r_t\\right) dt + \\sigma \\, dW_t,\n$$\n其中参数 $\\kappa > 0$, $\\theta \\in \\mathbb{R}$ 和 $\\sigma \\ge 0$ 为常数，且 $W_t$ 是标准布朗运动。对于任意时间 $t$ 和到期期限 $\\tau > 0$，到期时间为 $t+\\tau$ 的零息债券在时间 $t$ 的价格由风险中性期望定义为\n$$\nP(t,t+\\tau) = \\mathbb{E}^{\\mathbb{Q}} \\left[ \\exp\\left( -\\int_t^{t+\\tau} r_s \\, ds \\right) \\Big| \\mathcal{F}_t \\right],\n$$\n并且连续复利零息收益率 $y(t,\\tau)$ 定义为\n$$\ny(t,\\tau) = -\\frac{1}{\\tau} \\ln P(t,t+\\tau).\n$$\n\n在时间 $t=0$ 时固定一个初始短期利率 $r_0$。将时间 $t=1$ 年的收益率曲线倒挂事件定义为严格不等式 $y(1,10) < y(1,1)$，其中 $y(1,10)$ 是时间 $t=1$ 时到期期限为 $\\tau=10$ 年的连续复利收益率，而 $y(1,1)$ 是时间 $t=1$ 时到期期限为 $\\tau=1$ 年的连续复利收益率。所有时间量均以年为单位，所有利率和收益率均以连续复利方式年化，并以小数形式表示（例如，$0.03$ 代表每年百分之三）。\n\n对于下方的每个测试用例，您将获得：\n- 一个初始短期利率 $r_0$，以及\n- 一个有限的候选参数三元组 $(\\kappa,\\theta,\\sigma)$ 列表，其中 $\\kappa > 0$ 且 $\\sigma \\ge 0$，\n\n所有这些都将被视作用于债券定价和概率计算的风险中性参数。对于每个测试用例，确定哪个候选参数三元组能使收益率曲线倒挂事件 $y(1,10) < y(1,1)$ 的概率（以 $[0,1]$ 区间内的小数表示）最大化。如果有两个或更多的候选者得到的概率在数值容差 $\\varepsilon = 10^{-12}$ 内相等，则选择在给定顺序中索引最小的候选者。\n\n测试套件（相同的候选列表适用于所有测试用例）：\n\n候选列表（按顺序索引 $0,1,2,3,4$）：\n- 索引 $0$：$(\\kappa,\\theta,\\sigma) = (0.8,\\, 0.03,\\, 0.01)$\n- 索引 $1$：$(\\kappa,\\theta,\\sigma) = (0.3,\\, 0.06,\\, 0.015)$\n- 索引 $2$：$(\\kappa,\\theta,\\sigma) = (1.2,\\, 0.02,\\, 0.005)$\n- 索引 $3$：$(\\kappa,\\theta,\\sigma) = (0.5,\\, 0.04,\\, 0)$\n- 索引 $4$：$(\\kappa,\\theta,\\sigma) = (0.1,\\, 0.08,\\, 0.03)$\n\n测试用例：\n- 测试用例 $1$：$r_0 = 0.03$\n- 测试用例 $2$：$r_0 = 0.01$\n- 测试用例 $3$：$r_0 = 0.05$\n\n您的程序必须为每个测试用例，在每个候选参数三元组下计算在时间 $t=1$ 时的倒挂概率，找出使概率最大化的候选者索引（遵循上述的平局打破规则），并输出所有测试用例的所选索引。\n\n最终输出格式：您的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的整数列表（例如，$[2,0,4]$）。列表中的第 $i$ 个整数必须是测试用例 $i$ 的所选候选者索引，使用从零开始的索引。\n\n所有计算必须与上述定义一致。所有时间均以年为单位，所有利率均以连续复利方式年化并以小数表示。概率必须以小数计算，而不是百分比。", "solution": "该问题要求对 Vasicek 短期利率模型进行深入分析，以确定给定的一组参数中哪一个能使特定收益率曲线倒挂事件的概率最大化。对问题陈述的验证证实了其科学合理性、一致性和适定性。这是量化金融中的一个标准问题，其基础是成熟的数学理论。因此，我们可以着手进行解题推导。\n\n我们的目标是为每个候选参数集 $(\\kappa, \\theta, \\sigma)$ 计算在时间 $t=1$ 时收益率曲线倒挂事件 $y(1,10) < y(1,1)$ 的概率。该概率以初始短期利率 $r_0$ 为条件。产生最高概率的参数集将被选中。\n\n首先，我们必须建立连续复利收益率 $y(t,\\tau)$ 和瞬时短期利率 $r_t$ 之间的关系。Vasicek 模型是一个仿射期限结构模型，对于该模型，零息债券的价格 $P(t, t+\\tau)$ 具有指数仿射形式：\n$$\nP(t, t+\\tau) = e^{A(\\tau) - B(\\tau)r_t}\n$$\n其中 $\\tau$ 是距离到期的时间。函数 $A(\\tau)$ 和 $B(\\tau)$ 取决于模型参数 $(\\kappa, \\theta, \\sigma)$。Vasicek 模型的标准理论提供了以下表达式：\n$$\nB(\\tau) = \\frac{1 - e^{-\\kappa\\tau}}{\\kappa}\n$$\n$$\nA(\\tau) = \\left(\\theta - \\frac{\\sigma^2}{2\\kappa^2}\\right) [B(\\tau) - \\tau] - \\frac{\\sigma^2}{4\\kappa} B(\\tau)^2\n$$\n连续复利收益率定义为 $y(t,\\tau) = -\\frac{1}{\\tau} \\ln P(t,t+\\tau)$。代入债券价格公式，我们得到收益率和短期利率之间的线性关系：\n$$\ny(t,\\tau) = -\\frac{1}{\\tau} (A(\\tau) - B(\\tau)r_t) = \\frac{B(\\tau)}{\\tau}r_t - \\frac{A(\\tau)}{\\tau}\n$$\n\n接下来，我们分析收益率曲线倒挂条件 $y(1,10) < y(1,1)$。代入收益率的表达式，我们得到：\n$$\n\\frac{B(10)}{10}r_1 - \\frac{A(10)}{10} < \\frac{B(1)}{1}r_1 - \\frac{A(1)}{1}\n$$\n重新整理各项以分離出 $r_1$：\n$$\n\\frac{A(1)}{1} - \\frac{A(10)}{10} < r_1 \\left( \\frac{B(1)}{1} - \\frac{B(10)}{10} \\right)\n$$\n$r_1$ 的系数是 $\\frac{B(1)}{\\tau_1} - \\frac{B(10)}{\\tau_2}$，其中 $\\tau_1=1$ 且 $\\tau_2=10$。对于 $\\kappa > 0$，函数 $h(\\tau) = B(\\tau)/\\tau = \\frac{1-e^{-\\kappa\\tau}}{\\kappa\\tau}$ 是 $\\tau$ 的严格递减函数。因此，$h(1) > h(10)$，并且 $r_1$ 的系数为正。我们可以用它来除不等式两边而无需改变不等号方向：\n$$\nr_1 > \\frac{A(1) - A(10)/10}{B(1) - B(10)/10}\n$$\n我们将右侧定义为临界短期利率，$r_{\\text{crit}}$。当且仅当时间 $t=1$ 的短期利率超过此阈值时，即 $r_1 > r_{\\text{crit}}$，倒挂事件发生。为了计算方便，简化 $r_{\\text{crit}}$ 的表达式是有利的。通过代入 $A(\\tau)$ 的公式，我们得到：\n$$\nr_{\\text{crit}} = \\left(\\theta - \\frac{\\sigma^2}{2\\kappa^2}\\right) - \\frac{\\sigma^2}{4\\kappa} \\frac{B(1)^2 - B(10)^2/10}{B(1) - B(10)/10}\n$$\n\n下一步是确定此事件的概率 $\\mathbb{P}(r_1 > r_{\\text{crit}} | r_0)$。这需要给定 $r_0$ 下 $r_1$ 的条件分布。Vasicek 模型的随机微分方程描述了一个 Ornstein-Uhlenbeck 过程。从 $t=0$ 时的 $r_0$ 开始，在时间 $t=1$ 的解为：\n$$\nr_1 = r_0 e^{-\\kappa} + \\theta(1-e^{-\\kappa}) + \\sigma \\int_0^1 e^{-\\kappa(1-s)} dW_s\n$$\n由此可知，$r_1$ 服从正态分布，其条件均值为 $\\mu$，方差为 $v^2$：\n$$\n\\mu = \\mathbb{E}[r_1 | r_0] = r_0 e^{-\\kappa} + \\theta(1-e^{-\\kappa})\n$$\n$$\nv^2 = \\text{Var}[r_1 | r_0] = \\frac{\\sigma^2}{2\\kappa}(1-e^{-2\\kappa})\n$$\n因此，倒挂概率是服从正态分布的随机变量 $r_1 \\sim \\mathcal{N}(\\mu, v^2)$ 超过 $r_{\\text{crit}}$ 的概率。这可以用标准正态累积分布函数 $\\Phi(z)$ 表示：\n$$\n\\mathbb{P}(r_1 > r_{\\text{crit}}) = \\mathbb{P}\\left(\\frac{r_1 - \\mu}{v} > \\frac{r_{\\text{crit}} - \\mu}{v}\\right) = 1 - \\Phi\\left(\\frac{r_{\\text{crit}} - \\mu}{v}\\right)\n$$\n这等价于正态分布的生存函数，其数值计算更为稳定。\n\n当 $\\sigma = 0$ 时出现一个特殊情况。模型变为确定性的，方差 $v^2$ 为零，并且 $r_1$ 取固定值 $r_1 = \\mu = r_0 e^{-\\kappa} + \\theta(1-e^{-\\kappa})$。在这种情况下，如果 $r_1 > r_{\\text{crit}}$，则概率 $\\mathbb{P}(r_1 > r_{\\text{crit}})$ 为 $1$，否则为 $0$。对于 $\\sigma=0$，$r_{\\text{crit}}$ 的表达式简化为 $\\theta$。\n\n计算流程如下：\n1. 对于由初始利率 $r_0$ 定义的每个测试用例。\n2. 遍历每个候选参数三元组 $(\\kappa, \\theta, \\sigma)$。\n3. 使用推导出的公式计算临界利率 $r_{\\text{crit}}$。\n4. 计算 $r_1$ 的条件均值 $\\mu$ 和方差 $v^2$。\n5. 分别处理确定性情况（$\\sigma = 0$）和随机情况（$\\sigma > 0$），以计算概率 $\\mathbb{P}(r_1 > r_{\\text{crit}})$。\n6. 比较所有候选者计算出的概率，并找出产生最大概率的候选者索引，同时应用指定的平局打破规则（如果概率在 $10^{-12}$ 的容差内相等，则选择较小的索引）。\n7. 收集所有测试用例的获胜索引。\n此流程为每个测试用例导出一个唯一且正确的解。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\n# According to the problem specification, the following libraries are permitted:\n# - `name: numpy`, `version: 1.23.5`\n# - `name: scipy`, `version: 1.11.4`\n\ndef solve():\n    \"\"\"\n    Solves the Vasicek model yield curve inversion problem.\n\n    For each test case, it iterates through a list of candidate parameter sets \n    for the Vasicek model. It calculates the probability of a yield curve \n    inversion event (y(1, 10) < y(1, 1)) for each parameter set and determines \n    which set maximizes this probability.\n    \"\"\"\n    \n    # Candidate parameter triples (kappa, theta, sigma)\n    candidate_params = [\n        (0.8, 0.03, 0.01),   # Index 0\n        (0.3, 0.06, 0.015),  # Index 1\n        (1.2, 0.02, 0.005),  # Index 2\n        (0.5, 0.04, 0),      # Index 3\n        (0.1, 0.08, 0.03),   # Index 4\n    ]\n\n    # Test cases defined by the initial short rate r_0\n    test_cases_r0 = [0.03, 0.01, 0.05]\n    \n    # Numerical tolerance for tie-breaking\n    TOLERANCE = 1e-12\n\n    def calculate_inversion_probability(r0, kappa, theta, sigma):\n        \"\"\"\n        Calculates the probability of yield curve inversion P(y(1,10) < y(1,1)).\n\n        Args:\n            r0 (float): Initial short rate at t=0.\n            kappa (float): Mean-reversion speed.\n            theta (float): Long-term mean of the short rate.\n            sigma (float): Volatility of the short rate.\n\n        Returns:\n            float: The probability of the inversion event.\n        \"\"\"\n        \n        # In the Vasicek model, bond prices are P(t, T) = exp(A(T-t) - B(T-t)*r_t).\n        # The yield is y(t, tau) = (B(tau)/tau)*r_t - A(tau)/tau.\n        # The inversion condition y(1,10) < y(1,1) becomes r_1 > r_crit.\n        \n        # Handle the special deterministic case where sigma = 0\n        if np.isclose(sigma, 0.0):\n            # For sigma=0, r_crit simplifies to theta\n            r_crit = theta\n            # The process is deterministic, so r_1 is known\n            r1 = r0 * np.exp(-kappa) + theta * (1 - np.exp(-kappa))\n            return 1.0 if r1 > r_crit else 0.0\n\n        # General stochastic case (sigma > 0)\n        \n        # B(tau) = (1 - exp(-kappa*tau)) / kappa\n        def b_func(tau, k):\n            if np.isclose(k, 0.0):\n                return tau  # Taylor expansion for small kappa\n            return (1.0 - np.exp(-k * tau)) / k\n\n        b1 = b_func(1.0, kappa)\n        b10 = b_func(10.0, kappa)\n\n        # Calculate r_crit using the simplified formula:\n        # r_crit = (theta - sigma^2/(2*k^2)) - (sigma^2/(4*k)) * (B(1)^2 - B(10)^2/10) / (B(1) - B(10)/10)\n        c_theta = theta - (sigma**2) / (2.0 * kappa**2)\n        c_sigma = -(sigma**2) / (4.0 * kappa)\n        \n        num_frac = b1**2 - (b10**2) / 10.0\n        den_frac = b1 - b10 / 10.0\n        \n        r_crit = c_theta + c_sigma * (num_frac / den_frac)\n        \n        # Distribution of r_1 given r_0 is Normal(mu, v^2)\n        mu = r0 * np.exp(-kappa) + theta * (1.0 - np.exp(-kappa))\n        var = (sigma**2 / (2.0 * kappa)) * (1.0 - np.exp(-2.0 * kappa))\n        std_dev = np.sqrt(var)\n\n        # If standard deviation is effectively zero, treat as deterministic\n        if np.isclose(std_dev, 0.0):\n            return 1.0 if mu > r_crit else 0.0\n        \n        # Probability P(r_1 > r_crit) is the survival function (1 - CDF)\n        # of a normal distribution. norm.sf is numerically stable.\n        return norm.sf(r_crit, loc=mu, scale=std_dev)\n\n    # Store the index of the best candidate for each test case\n    best_candidate_indices = []\n\n    for r0 in test_cases_r0:\n        probabilities = []\n        for params in candidate_params:\n            kappa, theta, sigma = params\n            prob = calculate_inversion_probability(r0, kappa, theta, sigma)\n            probabilities.append(prob)\n        \n        # Find the index of the candidate maximizing the probability\n        max_prob = -1.0\n        best_idx = -1\n        for i, p in enumerate(probabilities):\n            # Apply tie-breaking rule: if new prob > max_prob (plus tolerance),\n            # it becomes the new max. Otherwise, the smaller index is kept.\n            if p > max_prob + TOLERANCE:\n                max_prob = p\n                best_idx = i\n        \n        best_candidate_indices.append(best_idx)\n    \n    # Print the final result in the specified format\n    results_str = ','.join(map(str, best_candidate_indices))\n    print(f\"[{results_str}]\")\n\nsolve()\n\n```", "id": "2429602"}, {"introduction": "具有恒定参数的“教科书式”Vasicek模型通常过于简单，无法精确匹配现实世界中复杂的收益率曲线。为了使模型具有实际应用价值，我们必须对其进行“校准”以使其与市场数据吻合。本练习将指导您掌握一种强大的技术，通过引入随时间变化的市场风险价格 $\\lambda(t)$ 来扩展Vasicek模型，从而完美地拟合给定的初始利率期限结构。这是一项在量化金融中至关重要的工作，它确保了任何使用该模型定价的衍生品都与当前观测到的债券市场价格保持一致。[@problem_id:2429542]", "problem": "您必须编写一个完整的程序，在给定随时间变化的市场风险价格的情况下，在 Vasicek 短期利率框架内对指定的初始期限结构进行完美定价。在物理测度（由概率测度 $\\mathbb{P}$ 表示）下，Vasicek 模型由以下随机微分方程给出：$dr_t = \\kappa (\\mu - r_t) \\, dt + \\sigma \\, dW_t^{\\mathbb{P}}$，其中 $\\kappa > 0$ 是均值回归速度，$\\mu$ 是 $\\mathbb{P}$ 下的长期水平，$\\sigma > 0$ 是波动率，而 $W_t^{\\mathbb{P}}$ 是一个标准布朗运动。假设存在一个确定性的、随时间变化的市场风险价格 $\\lambda(t)$，它根据 $dr_t = [\\kappa (\\mu - r_t) - \\sigma \\lambda(t)] \\, dt + \\sigma \\, dW_t^{\\mathbb{Q}}$ 来改变风险中性测度（由概率测度 $\\mathbb{Q}$ 表示）下的漂移项，其中 $W_t^{\\mathbb{Q}}$ 是 $\\mathbb{Q}$ 下的一个标准布朗运动。要求是，在 $\\mathbb{Q}$ 测度下的模型应能完美地对由瞬时远期利率曲线 $f(0,T)$ 指定的给定初始非仿射期限结构进行定价。\n\n对于到期日 $T \\ge 0$，初始瞬时远期利率曲线 $f(0,T)$ 定义为 $f(0,T) = c_0 + c_1 e^{-b T} + c_2 T e^{-b T}$，参数为 $c_0 = 0.02$，$c_1 = 0.01$，$c_2 = 0.005$，$b = 0.5$。Vasicek 模型的参数为 $\\kappa = 0.7$，$\\mu = 0.03$，$\\sigma = 0.01$。时间以年为单位计量，所有利率均为年化且连续复利。您的任务是数值计算出随时间变化的市场风险价格 $\\lambda(t)$ 的值，该价格能迫使模型完美地对给定的初始期限结构进行定价。\n\n请使用以下评估时间（以年为单位）的测试套件：$t \\in \\{0.0, 0.25, 1.0, 5.0, 20.0\\}$。对于此集合中的每个 $t$，计算相应的 $\\lambda(t)$ 值（一个实数）。您的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表，并严格按照给定时间的顺序排列。例如：$[x_1,x_2,x_3,x_4,x_5]$。所需的输出是实数（浮点数）。不应打印任何其他文本。\n\n所有输入均如上文所述固定；您的程序必须是自包含的，且不得从用户或外部文件读取任何输入。为 $f(0,T)$ 提供的函数形式及参数值构成了在评估时间点计算 $\\lambda(t)$ 所需的完整规范。最终答案必须以指定的单行格式返回。", "solution": "该问题要求确定 Vasicek 短期利率模型中随时间变化的市场风险价格 $\\lambda(t)$，使其能够完美地再现给定的初始利率期限结构。该期限结构由瞬时远期利率曲线 $f(0,T)$ 指定。\n\n在风险中性测度 $\\mathbb{Q}$ 下，短期利率 $r_t$ 的 Vasicek 模型动态由以下随机微分方程 (SDE) 给出：\n$$dr_t = [\\kappa (\\mu - r_t) - \\sigma \\lambda(t)] \\, dt + \\sigma \\, dW_t^{\\mathbb{Q}}$$\n其中 $\\kappa$ 是均值回归速度，$\\mu$ 是物理测度 $\\mathbb{P}$ 下的长期均值，$\\sigma$ 是波动率，$\\lambda(t)$ 是确定性的市场风险价格。该 SDE 可以重写为标准的 Hull-White 形式：\n$$dr_t = \\kappa (\\theta(t) - r_t) \\, dt + \\sigma \\, dW_t^{\\mathbb{Q}}$$\n其中 $\\theta(t)$ 是 $\\mathbb{Q}$ 下一个随时间变化的均值回归水平，定义为：\n$$\\theta(t) = \\mu - \\frac{\\sigma}{\\kappa} \\lambda(t)$$\n我们的主要目标是确定 $\\theta(t)$，由此可以轻易求得 $\\lambda(t)$。\n\n校准条件是，模型在时间 $t=0$ 时对到期日为 $T$ 的瞬时远期利率（记为 $f_{model}(0, T)$）必须与给定的市场瞬时远期利率 $f_{market}(0, T)$ 对所有到期日 $T \\ge 0$ 都匹配。\n$$f_{model}(0, T) = f_{market}(0, T), \\quad \\forall T \\ge 0$$\n对于 Hull-White 模型，在时间 $t$ 价格为、到期日为 $T$ 的零息债券 $P(t, T)$，已知其具有仿射形式 $P(t, T) = A(t, T) e^{-B(t, T) r_t}$。瞬时远期利率定义为 $f(t, T) = -\\frac{\\partial \\ln P(t, T)}{\\partial T}$。模型的远期利率的一般表达式是一个标准结果：\n$$f_{model}(t, T) = e^{-\\kappa(T-t)} r_t + \\int_t^T \\kappa \\theta(s) e^{-\\kappa(T-s)} ds - \\frac{\\sigma^2}{2\\kappa^2} (1 - e^{-\\kappa(T-t)})^2$$\n为了在时间 $t=0$ 进行校准，我们在上述公式中设 $t=0$。初始短期利率 $r_0$ 由初始时刻的远期曲线给出，$r_0 = f_{market}(0, 0)$。\n$$f_{model}(0, T) = e^{-\\kappa T} r_0 + \\int_0^T \\kappa \\theta(s) e^{-\\kappa(T-s)} ds - \\frac{\\sigma^2}{2\\kappa^2} (1 - e^{-\\kappa T})^2$$\n应用校准条件，我们得到关于 $\\theta(s)$ 的一个积分方程：\n$$f_{market}(0, T) = e^{-\\kappa T} r_0 + e^{-\\kappa T}\\int_0^T \\kappa \\theta(s) e^{\\kappa s} ds - \\frac{\\sigma^2}{2\\kappa^2} (1 - e^{-\\kappa T})^2$$\n为简洁起见，我们定义一个函数 $G(T)$：\n$$G(T) = f_{market}(0, T) - e^{-\\kappa T} r_0 + \\frac{\\sigma^2}{2\\kappa^2} (1 - e^{-\\kappa T})^2$$\n该积分方程变为：\n$$\\int_0^T \\kappa \\theta(s) e^{\\kappa s} ds = e^{\\kappa T} G(T)$$\n为了求解 $\\theta(t)$，我们对等式两边关于 $T$ 求导，然后用 $t$ 替换 $T$。对左边应用微积分基本定理，对右边应用乘法法则，我们得到：\n$$\\kappa \\theta(T) e^{\\kappa T} = \\frac{d}{dT} \\left[ e^{\\kappa T} G(T) \\right] = \\kappa e^{\\kappa T} G(T) + e^{\\kappa T} G'(T)$$\n解出 $\\theta(T)$ 得：\n$$\\theta(T) = G(T) + \\frac{1}{\\kappa} G'(T)$$\n代入 $G(T)$ 及其导数 $G'(T)$ 的表达式并化简，可得到校准后均值回归水平的著名公式：\n$$\\theta(t) = f_{market}(0, t) + \\frac{1}{\\kappa} \\frac{\\partial f_{market}(0, t)}{\\partial t} + \\frac{\\sigma^2}{2\\kappa^2}(1 - e^{-2\\kappa t})$$\n此处，我们已用变量 $t$ 替换 $T$ 以表示时间依赖性。市场远期利率曲线为：\n$$f_{market}(0, t) = c_0 + c_1 e^{-b t} + c_2 t e^{-b t}$$\n它关于时间 $t$ 的导数为：\n$$\\frac{\\partial f_{market}(0, t)}{\\partial t} = -b c_1 e^{-b t} + c_2 e^{-b t} - b c_2 t e^{-b t} = (c_2 - b c_1) e^{-b t} - b c_2 t e^{-b t}$$\n将这些代入 $\\theta(t)$ 的表达式中：\n$$\\theta(t) = c_0 + \\left( c_1 + \\frac{c_2 - b c_1}{\\kappa} \\right) e^{-b t} + \\left( c_2 - \\frac{b c_2}{\\kappa} \\right) t e^{-b t} + \\frac{\\sigma^2}{2\\kappa^2}(1 - e^{-2\\kappa t})$$\n这可以化简为：\n$$\\theta(t) = c_0 + \\left( c_1(1-\\frac{b}{\\kappa}) + \\frac{c_2}{\\kappa} \\right) e^{-b t} + c_2(1-\\frac{b}{\\kappa}) t e^{-b t} + \\frac{\\sigma^2}{2\\kappa^2}(1 - e^{-2\\kappa t})$$\n最后，我们通过重新整理其定义来找到市场风险价格 $\\lambda(t)$：\n$$\\lambda(t) = \\frac{\\kappa}{\\sigma} (\\mu - \\theta(t))$$\n现在，我们将使用给定的参数实现这个最终公式，以计算在指定评估时间点的 $\\lambda(t)$。\n\n给定的参数是：\n- 模型参数：$\\kappa = 0.7$，$\\mu = 0.03$，$\\sigma = 0.01$。\n- 远期曲线参数：$c_0 = 0.02$，$c_1 = 0.01$，$c_2 = 0.005$，$b = 0.5$。\n- 评估时间：$t \\in \\{0.0, 0.25, 1.0, 5.0, 20.0\\}$。\n\n程序将为这些时间点中的每一个计算 $\\theta(t)$，然后计算 $\\lambda(t)$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the time-varying market price of risk lambda(t) that makes the\n    Vasicek model perfectly price a given initial term structure.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (kappa, mu, sigma, c0, c1, c2, b, evaluation_times)\n        (0.7, 0.03, 0.01, 0.02, 0.01, 0.005, 0.5, [0.0, 0.25, 1.0, 5.0, 20.0])\n    ]\n\n    results = []\n    # There is only one set of parameters in this problem.\n    kappa, mu, sigma, c0, c1, c2, b, eval_times = test_cases[0]\n\n    for t in eval_times:\n        # This implementation follows the derived formula for theta(t).\n        # theta(t) = f_market(0, t) + (1/kappa) * f_market'(0, t) + (sigma**2 / (2*kappa^2)) * (1 - exp(-2*kappa*t))\n        #\n        # f_market(0, t) = c0 + c1*exp(-b*t) + c2*t*exp(-b*t)\n        # f_market'(0, t) = (c2 - b*c1)*exp(-b*t) - b*c2*t*exp(-b*t)\n        #\n        # Combining these gives a simplified expression for theta(t), which is implemented here.\n\n        # Calculate common terms\n        exp_bt = np.exp(-b * t)\n        exp_2kt = np.exp(-2 * kappa * t)\n        \n        # Term 1: from c0\n        term1 = c0\n        \n        # Term 2: coefficient of exp(-b*t)\n        # This combines c1*exp(-b*t) from f_market and parts of f_market'\n        term2_coeff = c1 * (1 - b / kappa) + c2 / kappa\n        term2 = term2_coeff * exp_bt\n        \n        # Term 3: coefficient of t*exp(-b*t)\n        # This combines c2*t*exp(-b*t) from f_market and parts of f_market'\n        term3_coeff = c2 * (1 - b / kappa)\n        term3 = term3_coeff * t * exp_bt\n        \n        # Term 4: the volatility adjustment term\n        term4 = (sigma**2 / (2 * kappa**2)) * (1 - exp_2kt)\n        \n        # Sum the terms to get theta(t)\n        theta_t = term1 + term2 + term3 + term4\n        \n        # Calculate lambda(t) from theta(t)\n        # lambda(t) = (kappa/sigma) * (mu - theta(t))\n        lambda_t = (kappa / sigma) * (mu - theta_t)\n        \n        results.append(lambda_t)\n\n    # Final print statement in the exact required format.\n    # The format specified is a list of floats, comma-separated, inside square brackets.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2429542"}, {"introduction": "在理解了模型参数并学会了如何校准模型之后，我们将进入一个更高级的应用：使用Cox-Ingersoll-Ross (CIR)模型为附息债券期权定价。与简单的零息债券不同，附息债券代表了一系列未来现金流的组合，这使得其期权的估值变得更加复杂。本练习将介绍一种经典而巧妙的解决方法，即Jamshidian分解技巧，它能将“关于组合的期权”转化为“期权的组合”。通过这个过程，您将学习如何利用CIR模型的独特数学属性（特别是其与非中心卡方分布的联系）来推导出精确的解析解。[@problem_id:2429604]", "problem": "考虑一个风险中性测度下的单因子短期利率模型，其中短期利率 $r_s$ 服从 Cox–Ingersoll–Ross (CIR) 随机微分方程 (SDE)\n$$\n\\mathrm{d}r_s \\;=\\; \\kappa\\big(\\theta - r_s\\big)\\,\\mathrm{d}s \\;+\\; \\sigma \\sqrt{r_s}\\,\\mathrm{d}W_s,\n$$\n其中参数 $\\kappa$、$\\theta$ 和 $\\sigma$ 均为严格正值，$W_s$ 为布朗运动。设当前时间为 $t=0$，当前短期利率为 $r_0>0$。到期日为 $T$ 的无违约风险零息债券价格记为 $P(0,T)$，在 CIR 模型中，其具有指数—仿射形式\n$$\nP(0,T) \\;=\\; A(0,T)\\,\\exp\\big(-B(0,T)\\,r_0\\big),\n$$\n其中 $A(0,T)$ 和 $B(0,T)$ 是标准的 CIR 仿射系数。同样地，对于 $T \\leq U$，时间 $T$ 的价格 $P(T,U)$ 为 $A(T,U)\\exp(-B(T,U) r_T)$。假设所有确保无套利和可积性的标准技术条件均成立。\n\n你拥有一个以无违约风险付息债券为标的资产的欧式看涨期权，该债券在时间点 $\\{T_i\\}_{i=1}^{N}$ 支付确定性现金流 $\\{c_i\\}_{i=1}^{N}$，且 $0<T<T_1<\\cdots<T_N$。该期权在时间 $T$ 到期，行权价为 $K>0$。其在时间 $T$ 的支付为\n$$\n\\Bigg(\\sum_{i=1}^{N} c_i\\,P(T,T_i) \\;-\\; K\\Bigg)^{+}.\n$$\n从风险中性定价原理和 CIR 模型的单因子结构出发，在不假定任何给定的期权定价公式的情况下，通过将付息债券分解为零息债券组合，推导出该期权在时间 $0$ 的价格的解析表达式。你的推导应依赖于：\n\n- 时间 $0$ 价格的风险中性定价定义，即风险中性测度下的折现期望。\n- 单因子短期利率设定下的单调性，该单调性是 Jamshidian 分解的理论基础。\n- CIR 模型中零息债券价格的已知指数—仿射形式，以及 $r_T$ 的条件分布为非中心卡方分布这一事实，从而使得关于 $r_T$ 的函数的期望可以通过非中心卡方随机变量的累积分布函数 (CDF) 来表示。\n\n将你的最终答案表示为一个单一的闭式解析表达式，该表达式应包含 $A(\\cdot,\\cdot)$、$B(\\cdot,\\cdot)$、$\\kappa$、$\\theta$、$\\sigma$、$r_0$、$\\{c_i,T_i\\}_{i=1}^{N}$、$T$、$K$ 以及非中心卡方 CDF。不要对任何特殊函数进行数值计算。无需四舍五入。清晰地说明你引入的任何中间量，但最终答案必须是一个单一的解析表达式。", "solution": "**推导**\n\n欧式看涨期权在时间 $0$ 的价格 $C(0)$ 由风险中性定价原理给出。该原理指出，价格是风险中性测度 $Q$ 下支付的折现期望。\n$$\nC(0) = E^Q_0 \\left[ \\exp\\left(-\\int_0^T r_s ds\\right) \\left( \\sum_{i=1}^{N} c_i\\,P(T,T_i) - K \\right)^{+} \\right]\n$$\n其中 $E^Q_0[\\cdot]$ 表示在时间 $t=0$ 的信息条件下的期望。\n\n标的付息债券在期权到期时间 $T$ 的价格是对应于每笔未来现金流的零息债券价格之和：\n$$\nV_B(T) = \\sum_{i=1}^{N} c_i P(T, T_i)\n$$\n在 CIR 模型中，零息债券 $P(T, T_i)$ 的价格是短期利率 $r_T$ 的指数—仿射函数：\n$$\nP(T, T_i) = A(T, T_i) \\exp(-B(T, T_i) r_T)\n$$\nCIR 模型的参数 $\\kappa, \\theta, \\sigma$ 均为正值。对于 $t < T$，标准的 CIR 债券定价函数 $A(t,T)$ 和 $B(t,T)$ 严格为正。我们假设现金流 $c_i$ 也为正，这对于付息是标准的。\n\n为了应用 Jamshidian 分解，我们必须确定付息债券在时间 $T$ 的价格 $V_B(T)$ 是单一状态变量 $r_T$ 的单调函数。对 $V_B(T)$ 关于 $r_T$ 求导：\n$$\n\\frac{\\partial V_B(T)}{\\partial r_T} = \\sum_{i=1}^{N} c_i \\frac{\\partial}{\\partial r_T} \\left[ A(T, T_i) \\exp(-B(T, T_i) r_T) \\right] = \\sum_{i=1}^{N} c_i A(T, T_i) \\exp(-B(T, T_i) r_T) \\left( -B(T, T_i) \\right)\n$$\n由于 $c_i > 0$、$A(T,T_i) > 0$ 以及 $B(T,T_i) > 0$，和式中的每一项都为负。因此，$\\frac{\\partial V_B(T)}{\\partial r_T} < 0$，这意味着 $V_B(T)$ 是 $r_T$ 的严格递减函数。\n\n由于这种严格的单调性，存在一个唯一的短期利率临界值，我们记为 $r_T^*$，使得债券价格等于行权价：\n$$\nV_B(r_T^*) = \\sum_{i=1}^{N} c_i A(T, T_i) \\exp(-B(T, T_i) r_T^*) = K\n$$\n这个方程定义了 $r_T^*$。虽然通常无法得到 $r_T^*$ 的解析解，但其存在性是有保证的。如果 $V_B(T) > K$，即等价于 $r_T < r_T^*$，则期权为价内期权。因此，支付可以用指示函数 $\\mathbb{I}(\\cdot)$ 写成：\n$$\n\\left( V_B(T) - K \\right)^{+} = \\left( \\sum_{i=1}^{N} c_i\\,P(T,T_i) - K \\right) \\mathbb{I}(r_T < r_T^*)\n$$\n将此代入定价公式并利用期望的线性性质：\n$$\nC(0) = E^Q_0 \\left[ \\exp\\left(-\\int_0^T r_s ds\\right) \\left( \\sum_{i=1}^{N} c_i\\,P(T,T_i) - K \\right) \\mathbb{I}(r_T < r_T^*) \\right]\n$$\n$$\nC(0) = \\sum_{i=1}^{N} c_i E^Q_0 \\left[ \\exp\\left(-\\int_0^T r_s ds\\right) P(T,T_i) \\mathbb{I}(r_T < r_T^*) \\right] - K E^Q_0 \\left[ \\exp\\left(-\\int_0^T r_s ds\\right) \\mathbb{I}(r_T < r_T^*) \\right]\n$$\n这将一个关于组合的期权分解为一个数字式期权组合。我们现在使用计价单位变换技术来分析每一项。\n\n对于和式中的第 $i$ 项，我们使用零息债券 $P(t, T_i)$ 作为计价单位。相应的前向测度记为 $Q^{T_i}$。Radon-Nikodym 导数为 $\\frac{dQ^{T_i}}{dQ} |_{\\mathcal{F}_t} = \\frac{\\exp(-\\int_0^t r_s ds) P(t, T_i)}{P(0, T_i)}$。该项变为：\n$$\nc_i E^Q_0 [ \\exp(-\\int_0^T r_s ds) P(T,T_i) \\mathbb{I}(r_T < r_T^*) ] = c_i P(0, T_i) E^{Q^{T_i}}_0 [ \\mathbb{I}(r_T < r_T^*) ] = c_i P(0, T_i) Q^{T_i}(r_T < r_T^*)\n$$\n对于表达式中涉及行权价 $K$ 的第二部分，我们使用零息债券 $P(t, T)$ 作为计价单位。相应的前向测度为 $Q^T$。该项变为：\n$$\nK E^Q_0 [ \\exp(-\\int_0^T r_s ds) \\mathbb{I}(r_T < r_T^*) ] = K P(0, T) E^{Q^T}_0 [ \\mathbb{I}(r_T < r_T^*) ] = K P(0, T) Q^T(r_T < r_T^*)\n$$\n结合这些结果，期权价格为：\n$$\nC(0) = \\sum_{i=1}^{N} c_i P(0, T_i) Q^{T_i}(r_T < r_T^*) - K P(0, T) Q^T(r_T < r_T^*)\n$$\n问题现在简化为计算 $S \\in \\{T_1, \\dots, T_N, T\\}$ 的概率 $Q^S(r_T < r_T^*)$。对于 CIR 模型，一个已知的结果是，任何前向测度下的此类概率都可以用非中心卡方 CDF 来表示。\n\n我们为在 $S$-前向测度 $Q^S$ 下 $r_T < z$ 在时间 $t$ 的条件概率定义一个通用函数 $\\mathbb{P}(t, T, S, z)$：\n$$\n\\mathbb{P}(t, T, S, z) := Q^S(r_T < z | \\mathcal{F}_t)\n$$\n该概率由非中心卡方分布的 CDF 给出。令 $\\chi^2_{\\text{cdf}}(x; d, \\lambda)$ 表示该 CDF，其中 $x$ 是变量，$d$ 是自由度，$\\lambda$ 是非中心化参数。我们定义以下量：\n-   $\\gamma = \\sqrt{\\kappa^2 + 2\\sigma^2}$\n-   $d = \\frac{4\\kappa\\theta}{\\sigma^2}$ (自由度)\n-   $\\phi(t,T) = \\frac{2\\gamma}{\\sigma^2(\\exp(\\gamma(T-t))-1)}$\n-   $\\psi = \\frac{\\kappa+\\gamma}{\\sigma^2}$\n\n根据这些定义，概率函数由下式给出：\n$$\n\\mathbb{P}(t, T, S, z) = \\chi^2_{\\text{cdf}}\\left( 2z \\left(\\phi(t,T)+\\psi+B(T,S)\\right); d; \\frac{2(\\phi(t,T))^2 r_t \\exp(\\gamma(T-t))}{\\phi(t,T)+\\psi+B(T,S)} \\right)\n$$\n对于我们的问题，$t=0$。期权价格可以写为：\n$$\nC(0) = \\sum_{i=1}^{N} c_i P(0, T_i) \\mathbb{P}(0, T, T_i, r_T^*) - K P(0, T) \\mathbb{P}(0, T, T, r_T^*)\n$$\n注意，对于最后一项，计价单位的到期日 $S$ 等于期权的到期日 $T$。在这种情况下，$B(T,T)=0$。该公式仍然有效。\n\n将 $\\mathbb{P}$ 的显式形式代入价格公式即可得到最终表达式。临界利率 $r_T^*$ 被隐式地定义为方程 $\\sum_{i=1}^{N} c_i A(T,T_i) \\exp(-B(T,T_i) r_T^*) = K$ 的唯一正解。\n\n最终表达式通过令下式构建：\n-   $\\phi_T = \\frac{2\\gamma}{\\sigma^2(\\exp(\\gamma T)-1)}$\n-   $\\mathbb{P}_i = \\chi^2_{\\text{cdf}}\\left( 2r_T^*(\\phi_T+\\psi+B(T,T_i)); d; \\frac{2\\phi_T^2 r_0 \\exp(\\gamma T)}{\\phi_T+\\psi+B(T,T_i)} \\right)$，对于 $i=1, \\dots, N$。\n-   $\\mathbb{P}_K = \\chi^2_{\\text{cdf}}\\left( 2r_T^*(\\phi_T+\\psi); d; \\frac{2\\phi_T^2 r_0 \\exp(\\gamma T)}{\\phi_T+\\psi} \\right)$ (因为 $B(T,T)=0$)。\n\n期权价格为 $C(0) = \\sum_{i=1}^{N} c_i P(0, T_i) \\mathbb{P}_i - K P(0, T) \\mathbb{P}_K$。", "answer": "$$\n\\boxed{\\sum_{i=1}^{N} c_i P(0, T_i) \\chi^2_{\\text{cdf}}\\left( 2r_T^*\\left(\\phi_T+\\psi+B(T,T_i)\\right); d; \\frac{2\\phi_T^2 r_0 \\exp(\\gamma T)}{\\phi_T+\\psi+B(T,T_i)} \\right) - K P(0, T) \\chi^2_{\\text{cdf}}\\left( 2r_T^*\\left(\\phi_T+\\psi\\right); d; \\frac{2\\phi_T^2 r_0 \\exp(\\gamma T)}{\\phi_T+\\psi} \\right)}\n$$", "id": "2429604"}]}