{"hands_on_practices": [{"introduction": "极化函数为基组提供了必要的灵活性，以准确地模拟分子中电子密度的复杂形状。但为什么这种“灵活性”如此关键呢？本节的引导性探究将通过亚甲基（$\\mathrm{CH}_{2}$）的经典例子来阐明其背后的基本物理原理。通过比较其弯曲的单重态和近线性的三重态结构，你将推断出为何描述“各向异性”（即不均匀分布）的电子密度是极化函数所要解决的核心挑战 [@problem_id:2460495]。", "problem": "在采用收缩高斯基组的分子电子结构计算中，极化函数是额外的基函数，其角动量比表示每个原子标定价层所需的基函数更高（例如，在碳上添加$d$函数，在氢上添加$p$函数）。考虑亚甲基 $\\mathrm{CH}_{2}$，它有一个弯曲的低能级单重态 $\\left(^{1}\\mathrm{CH}_{2}\\right)$ 和一个近似线性的低能级三重态 $\\left(^{3}\\mathrm{CH}_{2}\\right)$。从第一性原理出发，下列哪个陈述最佳地解释了为什么极化函数对于描述 $\\,^{1}\\mathrm{CH}_{2}\\,$ 的弯曲结构比描述 $\\,^{3}\\mathrm{CH}_{2}\\,$ 的线性结构更重要？\n\nA. 弯曲的单重态由于再杂化和定域孤对电子而表现出强烈的价电子密度各向异性，这需要更高角动量的基函数来使电子密度朝向弯曲的化学键和孤对电子方向变形；线性的三重态更接近于围绕 $\\mathrm{C}$–$\\mathrm{H}$ 轴的柱对称性，因此较低角动量的函数已经能充分捕捉其形状。\n\nB. 极化函数主要用于恢复动态电子相关，而动态电子相关仅在单重态中出现；三重态缺乏动态相关，因此极化函数对于 $\\,^{3}\\mathrm{CH}_{2}\\,$ 是不必要的。\n\nC. 加入极化函数是为了让碳的 $3d$ 轨道参与成键，这稳定了弯曲的单重态结构，但在线性三重态结构中不起作用。\n\nD. 线性三重态具有更大的永久偶极矩，必须用弥散函数而非极化函数来描述；因此，极化函数对于 $\\,^{3}\\mathrm{CH}_{2}\\,$ 的重要性低于 $\\,^{1}\\mathrm{CH}_{2}\\,$。\n\nE. 极化函数主要用于优化电子密度的核心区域；核心层弛豫在弯曲构型中比在线性构型中更显著，因此它们对 $\\,^{1}\\mathrm{CH}_{2}\\,$ 比对 $\\,^{3}\\mathrm{CH}_{2}\\,$ 更重要。", "solution": "首先必须对问题陈述的科学合理性、自洽性和清晰度进行验证。\n\n**步骤1：提取已知信息**\n- **定义**：极化函数是额外的基函数，其角动量比表示每个原子标定价层所需的基函数更高。\n- **示例**：在碳上添加 $d$ 函数，在氢上添加 $p$ 函数。\n- **体系**：亚甲基分子，$\\mathrm{CH}_{2}$。\n- **状态1**：低能级单重态，$^{1}\\mathrm{CH}_{2}$，是弯曲的。\n- **状态2**：低能级三重态，$^{3}\\mathrm{CH}_{2}$，近似线性。\n- **问题**：从第一性原理出发，解释为什么极化函数对于描述 $^{1}\\mathrm{CH}_{2}$ 的弯曲结构比描述 $^{3}\\mathrm{CH}_{2}$ 的线性结构更重要。\n\n**步骤2：使用提取的信息进行验证**\n该问题陈述是基于计算量子化学中的既定概念构建的。\n- **科学依据**：对极化函数的描述是正确的。对亚甲基低能态的基态几何构型和自旋多重度的描述（$^{1}A_{1}$ 单重态是弯曲的，$^{3}B_{1}$ 三重态也是弯曲的，但键角大得多，接近 $180^\\circ$，为便于定性讨论常近似为线性）是物理化学中公认的事实。该问题探究的是基组构建的一个基本概念。问题在科学上是合理的。\n- **提问明确**：问题 unambiguous，要求对一个已知的计算现象给出物理解释。所提供的信息足以形成严谨的答案。\n- **客观性**：问题以客观、科学的语言陈述。\n\n**步骤3：结论与行动**\n问题有效。将推导解答。\n\n**从第一性原理推导**\n\n在 LCAO-MO（原子轨道线性组合成分子轨道）近似中，分子轨道 $\\psi_i$ 由一组以每个原子为中心的基函数 $\\{\\phi_{\\mu}\\}$ 构建而成：$\\psi_i = \\sum_{\\mu} c_{\\mu i} \\phi_{\\mu}$。此近似的质量关键取决于基组 $\\{\\phi_{\\mu}\\}$ 的完备性。\n\n最小基组仅包含容纳中性原子电子所必需的函数数量（例如，H 为 $1s$；C 为 $1s, 2s, 2p$）。这样的基组在本质上是受限的。分子中原子的电子分布不像孤立原子那样是球对称的（对于 $s$-轨道）或纯粹双瓣形的（对于 $p$-轨道）。由于化学键的形成和孤对电子的存在，电子分布会发生扭曲或*极化*。\n\n极化函数是这样一种基函数，其角动量量子数 $l$ 比价层中已占据原子轨道的最大 $l$ 值大一。对于氢（价层 $l=0$），极化函数是 $p$-函数（$l=1$）。对于碳（价层 $l=1$），极化函数是 $d$-函数（$l=2$）。\n\n添加更高角动量函数的数学效果是允许对电子密度进行更灵活的描述。例如，在氢原子上将一个 $p_z$ 函数与一个 $s$ 函数混合，可以使电子密度的中心沿 $z$ 轴偏离原子核。\n$$ \\phi_{polarized} = c_1 \\phi_{1s} + c_2 \\phi_{2p_z} $$\n这对于描述共价键中电荷的积累至关重要。类似地，在碳原子上将一个 $d_{xz}$ 函数与一个 $p_x$ 函数混合，可以使 $p$-轨道的电子密度“弯曲”而偏离 $x$ 轴。这种灵活性对于描述那些显著偏离原子对称性的环境中的电子密度至关重要。\n\n现在，考虑亚甲基的两种状态：\n1.  **单重态亚甲基 ($^{1}\\mathrm{CH}_{2}$)**：该分子是弯曲的，键角约为 $102^\\circ$。在简化的价键理论图像中，碳是 $sp^2$ 杂化的。两个杂化轨道与两个氢原子形成 $\\sigma$-键，第三个杂化轨道容纳一对孤对电子。其几何构型远非线性。这在中心碳原子周围产生了高度*各向异性*的电子分布。电子密度必须集中在两个 C-H 成键区域和非键孤对电子区域。一个仅由碳上的 $s$ 和 $p$ 函数组成的基组缺乏有效描述这种扭曲、弯曲排列的灵活性。引入 $d$-函数提供了这种必要的灵活性，使得基组能够精确地模拟弯曲的化学键和具有空间指向性的孤对电子。\n\n2.  **三重态亚甲基 ($^{3}\\mathrm{CH}_{2}$)**：该分子接近线性，键角约为 $134^\\circ$，在定性模型中常被视为线性（$180^\\circ$）。在这里，碳可以被看作是 $sp$ 杂化的，与氢原子形成两个线性的 $\\sigma$-键。两个未配对的电子占据了两个与分子轴垂直的简并 $p$-轨道。与弯曲的单重态相比，这种排列具有高得多的对称性（如果呈线性，则接近柱对称性 $D_{\\infty h}$）。$s$ 型和 $p$ 型基组天然更适合描述这种高对称性、线性排列中的电子密度。虽然极化函数仍然会提高计算的准确性（因为真实结构并非完全线性，且化学键仍然是极化的），但它们的能量贡献以及对于获得定性正确的几何构型和电子分布的重要性，都显著低于弯曲单重态的情况。\n\n因此，$^{1}\\mathrm{CH}_{2}$ 对极化函数有更大的需求，直接源于需要描述其低对称性的弯曲几何构型以及与之相关的化学键和孤对电子的各向异性电子密度。\n\n**选项评估**\n\n**A. 弯曲的单重态由于再杂化和定域孤对电子而表现出强烈的价电子密度各向异性，这需要更高角动量的基函数来使电子密度朝向弯曲的化学键和孤对电子方向变形；线性的三重态更接近于围绕 $\\mathrm{C}$–$\\mathrm{H}$ 轴的柱对称性，因此较低角动量的函数已经能充分捕捉其形状。**\n该陈述直接反映了上述第一性原理的推导。它正确地指出了关键因素：弯曲单重态中电子密度的各向异性、孤对电子和弯曲化学键的作用，以及近线性三重态的更高对称性。它准确地描述了更高角动量函数的作用是提供灵活性（“变形”）。\n**结论：正确。**\n\n**B. 极化函数主要用于恢复动态电子相关，而动态电子相关仅在单重态中出现；三重态缺乏动态相关，因此极化函数对于 $\\,^{3}\\mathrm{CH}_{2}\\,$ 是不必要的。**\n该陈述包含多个谬误。首先，虽然极化函数对于准确计算电子相关能至关重要，但它们的基本作用，即使在没有动态相关的平均场 Hartree-Fock 水平上，也是为分子轨道提供灵活性。其次，“三重态缺乏动态相关”的说法是根本错误的。所有多电子体系都表现出动态相关，即电子因相互库仑排斥而产生的短程回避行为。三重态也不例外。\n**结论：错误。**\n\n**C. 加入极化函数是为了让碳的 $3d$ 轨道参与成键，这稳定了弯曲的单重态结构，但在线性三重态结构中不起作用。**\n这是一种过于简单化且物理上具有误导性的解释。所添加的函数是数学构造（$d$-型高斯函数），用于提供角向灵活性。将其描述为使碳的高能量、未占据的原子 $3d$ 轨道“参与”成键，是一个拙劣的物理模型。它们的主要作用是扰动和极化价层 $2p$ 轨道。虽然它们确实稳定了弯曲结构，但它们在线性三重态中也是“起作用”的，尽管程度较小。这一解释缺乏选项 A 的基本严谨性。\n**结论：错误。**\n\n**D. 线性三重态具有更大的永久偶极矩，必须用弥散函数而非极化函数来描述；因此，极化函数对于 $\\,^{3}\\mathrm{CH}_{2}\\,$ 的重要性低于 $\\,^{1}\\mathrm{CH}_{2}\\,$.**\n该陈述在事实上是错误的。一个完全线性且对称的 $^{3}\\mathrm{CH}_{2}$（$D_{\\infty h}$ 对称性）由于具有反演中心，其偶极矩应为零。实际的弯曲三重态（$C_{2v}$ 对称性）有一个很小的偶极矩。而弯曲的单重态（$C_{2v}$ 对称性）则有显著更大的偶极矩。三重态具有更大偶极矩的前提是错误的。此外，虽然弥散函数对于弱束缚电子很重要，但极化函数对于通过正确描述价层区域电荷分布来准确计算任何偶极矩都是至关重要的。\n**结论：错误。**\n\n**E. 极化函数主要用于优化电子密度的核心区域；核心层弛豫在弯曲构型中比在线性构型中更显著，因此它们对 $\\,^{1}\\mathrm{CH}_{2}\\,$ 比对 $\\,^{3}\\mathrm{CH}_{2}\\,$ 更重要。**\n该陈述错误地描述了标准极化函数的主要作用。它们被设计用来为*价层*增加灵活性，因为化学成键和电子密度的显著变化都发生于此。核心电子（例如碳上的 $1s$ 电子）被束缚得更紧，受化学环境的影响小得多。准确处理核心效应需要特殊的基组（芯-价基组），但这不是本语境中讨论的极化函数的主要目的。其主导效应是在价空间。\n**结论：错误。**", "answer": "$$\\boxed{A}$$", "id": "2460495"}, {"introduction": "理解了为何需要极化函数的概念之后，我们现在来定量地探究它们是如何起作用的。在这个练习中，你将为水分子构建一个简化的紧束缚模型。通过在基组中加入极化函数并对哈密顿矩阵进行对角化，你将直接观察到它们如何根据变分原理降低体系的总能量，从而得到更准确的结果。这个实践不仅具体展示了变分原理的应用，还让你能够比较在不同原子上添加极化函数的相对效果 [@problem_id:2460489]。", "problem": "您将构建一个简化的变分紧束缚模型，以研究添加单个极化函数如何改变水分子的近似基态电子能量。比较的内容是：在每个氢原子上添加一个 $p$ 型基函数（每个氢原子上一个，与 O–H 键方向对齐）与在氧原子上添加一个 $d$ 型基函数（一个类 $d_{z^2}$ 函数，与分子角平分线对齐）这两种情况。您的程序必须使用线性代数和 Rayleigh–Ritz 变分原理，从第一性原理出发，实现以下内容。\n\n基本出发点：\n- Rayleigh–Ritz 变分原理指出，在任何子空间中，哈密顿矩阵 $H$ 的最低特征值是真实基态能量的一个上界，并且扩大基组（子空间）不会使变分能量增加。\n- 在一个具有规范正交基的原子轨道线性组合 (LCAO) 单电子紧束缚模型中，一个闭壳层体系的近似总电子能量计算公式为 $E_{\\mathrm{tot}} = 2 \\sum_{i=1}^{N_{\\mathrm{occ}}} \\varepsilon_i$，其中 $\\varepsilon_i$ 是 $H$ 的最低若干个特征值，$N_{\\mathrm{occ}}$ 是已占据的空间分子轨道数。\n\n几何结构与基组：\n- 考虑水分子，其键角为 $\\theta$（以度为单位），两个相同的 O–H 键位于 $x$–$z$ 平面内。将氧原子置于原点。定义沿两个 O–H 键的单位矢量为 $\\mathbf{u}_1 = (\\sin(\\theta/2), 0, \\cos(\\theta/2))$ 和 $\\mathbf{u}_2 = (-\\sin(\\theta/2), 0, \\cos(\\theta/2))$。使用标准的笛卡尔基矢 $\\mathbf{e}_x$、$\\mathbf{e}_y$ 和 $\\mathbf{e}_z$。\n- 最小基组由氧原子的 $2s$、$2p_x$、$2p_y$、$2p_z$ 轨道以及每个氢原子的一个 $1s$ 轨道组成。将其在位能分别表示为 $\\varepsilon_{\\mathrm{O}2s}$、$\\varepsilon_{\\mathrm{O}2p}$（所有三个氧 $2p$ 轨道共用）和 $\\varepsilon_{\\mathrm{H}1s}$。\n- 极化选项：\n  1. 氢 $p$ 轨道：在每个氢原子上添加一个 $p$ 型轨道，与其 O–H 键方向对齐（每个氢原子上一个）。其在位能为 $\\varepsilon_{\\mathrm{H}p}$。\n  2. 氧 $d$ 轨道：添加一个与 $\\mathbf{e}_z$ 对齐的类氧 $d_{z^2}$ 轨道，其在位能为 $\\varepsilon_{\\mathrm{O}d}$。\n\n哈密顿矩阵的构建（规范正交基，无重叠矩阵）：\n- 对角元是在位能。\n- 双中心非对角耦合使用 Slater–Koster 型方向因子：\n  - 氧 $2s$ 和氢 $1s$ 之间：$V_{ss\\sigma}$，对两个 O–H 键相同。\n  - 氧 $2p_i$ 和氢 $1s$ 之间：$V_{sp\\sigma} \\, (\\mathbf{e}_i \\cdot \\mathbf{u}_k)$，其中 $i \\in \\{x,y,z\\}$，$k \\in \\{1,2\\}$。\n  - 如果存在氢 $p$ 轨道，氧 $2s$ 与键 $k$ 上的氢 $p$ 轨道之间的耦合为 $V_{s p(\\mathrm{H}) \\sigma}$，氧 $2p_i$ 与键 $k$ 上的氢 $p$ 轨道之间的耦合为 $V_{pp\\sigma} \\, (\\mathbf{e}_i \\cdot \\mathbf{u}_k)$（氢 $p$ 轨道的轴与 $\\mathbf{u}_k$ 对齐）。\n  - 如果存在氧 $d_{z^2}$ 轨道，其与键 $k$ 上的氢 $1s$ 轨道的耦合为 $V_{sd\\sigma} \\, F_{sd}(\\mathbf{u}_k)$，其中 $F_{sd}(\\mathbf{u}_k)$ 是一个方向因子。使用四极因子 $F_{sd}(\\mathbf{u}_k) = \\frac{1}{2} \\left( 3 n_k^2 - 1 \\right)$，其中 $n_k = \\mathbf{u}_k \\cdot \\mathbf{e}_z = \\cos(\\theta/2)$。\n- 不包含其他非对角矩阵元。根据构建方式，哈密顿矩阵是实对称的。\n\n电子数与能量：\n- 在此模型中，水有 $8$ 个价电子，因此有 $N_{\\mathrm{occ}} = 4$ 个双占轨道。对于给定的哈密顿矩阵 $H$，对其进行对角化以获得按升序排列的特征值 $\\{\\varepsilon_i\\}$，并以 hartree 为单位计算 $E_{\\mathrm{tot}} = 2 \\sum_{i=1}^{4} \\varepsilon_i$。\n- 设 $E_0$ 为使用最小基组（无极化函数）时的总能量，$E_{\\mathrm{H}p}$ 为添加氢 $p$ 轨道后的总能量，$E_{\\mathrm{O}d}$ 为添加氧 $d$ 轨道后的总能量。定义稳定化能为 $\\Delta E_{\\mathrm{H}p} = E_{\\mathrm{H}p} - E_0$ 和 $\\Delta E_{\\mathrm{O}d} = E_{\\mathrm{O}d} - E_0$（值越负表示稳定化效果越强）。\n\n您的任务：\n- 严格按照上述规定实现模型。角度以度为单位提供；如果您使用三角函数，请在内部将其转换为弧度。\n- 对于下面的每个测试用例，计算以 hartree 为单位的 $\\Delta E_{\\mathrm{H}p}$ 和 $\\Delta E_{\\mathrm{O}d}$，并判断哪种极化选项产生了更大的稳定化效果（幅度上）。定义一个索引 $b$：如果氢 $p$ 轨道的稳定化效果更强（即 $\\Delta E_{\\mathrm{H}p} < \\Delta E_{\\mathrm{O}d}$），则 $b=0$；如果氧 $d$ 轨道的稳定化效果更强（即 $\\Delta E_{\\mathrm{O}d} < \\Delta E_{\\mathrm{H}p}$），则 $b=1$；如果两者在 $10^{-9}$ 的绝对容差内相等，则 $b=2$。\n- 所有能量均以 hartree 表示。最终输出必须是单行，包含每个测试用例结果的列表，其中每个结果是一个列表 $[\\Delta E_{\\mathrm{H}p}, \\Delta E_{\\mathrm{O}d}, b]$。在打印输出中，将每个浮点数能量四舍五入到 $6$ 位小数。\n\n测试套件（三个用例，所有能量单位为 hartree，$\\theta$ 单位为度）：\n- 用例 A（典型耦合）：$\\theta = 104.5$, $\\varepsilon_{\\mathrm{O}2s} = -1.20$, $\\varepsilon_{\\mathrm{O}2p} = -0.52$, $\\varepsilon_{\\mathrm{H}1s} = -0.50$, $V_{ss\\sigma} = -0.22$, $V_{sp\\sigma} = -0.30$, $V_{s p(\\mathrm{H}) \\sigma} = -0.25$, $V_{pp\\sigma} = -0.10$, $\\varepsilon_{\\mathrm{H}p} = -0.125$, $\\varepsilon_{\\mathrm{O}d} = 0.20$, $V_{sd\\sigma} = -0.12$。\n- 用例 B（高能量极化轨道，弱效应）：与用例 A 相同，但 $\\varepsilon_{\\mathrm{H}p} = 1.00$ 且 $\\varepsilon_{\\mathrm{O}d} = 2.00$。\n- 用例 C（氢 $p$ 轨道弱耦合，氧 $d$ 轨道中等耦合）：与用例 A 相同，但 $V_{s p(\\mathrm{H}) \\sigma} = -0.05$，$V_{pp\\sigma} = -0.02$，$\\varepsilon_{\\mathrm{O}d} = 0.30$ 且 $V_{sd\\sigma} = -0.20$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个逗号分隔的列表的列表，按 A、B、C 的顺序给出三个测试用例的结果，例如：$[[x_{A},y_{A},b_{A}],[x_{B},y_{B},b_{B}],[x_{C},y_{C},b_{C}]]$，其中每个 $x$ 和 $y$ 是四舍五入到 $6$ 位小数的浮点数，每个 $b$ 是一个整数。", "solution": "所述问题是量子化学中一个适定的练习。它在科学上基于原子轨道线性组合 (LCAO) 近似和 Rayleigh-Ritz 变分原理。所有必要的参数都已提供，目标明确且形式上已指定。我们将着手进行推导和求解。\n\n**1. 基本原理**\n\n理论基础是 Rayleigh-Ritz 变分原理。该原理指出，对于给定的哈密顿算符为 $\\hat{H}$ 的量子系统，任何试探波函数 $\\Psi$ 的能量期望值都是真实基态能量 $E_{\\mathrm{gs}}$ 的一个上界：\n$$\n\\frac{\\langle\\Psi|\\hat{H}|\\Psi\\rangle}{\\langle\\Psi|\\Psi\\rangle} \\geq E_{\\mathrm{gs}}\n$$\n在 LCAO 方法中，分子轨道 (MO) $\\psi_i$ 被近似为一组有限原子轨道 (AO) $\\{\\phi_j\\}_{j=1}^{N}$ 的线性组合：\n$$\n\\psi_i = \\sum_{j=1}^{N} c_{ji} \\phi_j\n$$\n将变分原理应用于此基组，可将薛定谔方程转化为矩阵特征值问题。对于一个规范正交的 AO 基（$\\langle\\phi_j|\\phi_k\\rangle = \\delta_{jk}$），这就是标准的特征值方程：\n$$\nH C = C \\mathcal{E}\n$$\n其中 $H$ 是哈密顿矩阵，其元为 $H_{jk} = \\langle\\phi_j|\\hat{H}|\\phi_k\\rangle$，$C$ 是系数 $c_{ji}$ 构成的矩阵，$\\mathcal{E}$ 是 MO 能量 $\\varepsilon_i$ 构成的对角矩阵。最低的特征值 $\\varepsilon_1$ 是系统内单个电子基态能量的变分近似。增加基函数（增大 $N$）会扩大变分空间，这只能降低或保持计算出的特征值，从而提供对真实能量更好（或相等）的近似。\n\n对于一个有 $2N_{\\mathrm{occ}}$ 个电子的闭壳层体系，总电子能量通过对已占据 MO 的能量求和来近似，同时考虑到双重占据：\n$$\nE_{\\mathrm{tot}} = 2 \\sum_{i=1}^{N_{\\mathrm{occ}}} \\varepsilon_i\n$$\n在此水分子的问题中，有 8 个价电子，因此我们占据能量最低的 $N_{\\mathrm{occ}} = 4$ 个空间 MO。\n\n**2. 系统规格和基组**\n\n水分子被放置在 $xz$-平面内，氧原子位于原点 $(0, 0, 0)$。O-H 键矢量由 $\\mathbf{u}_1 = (\\sin(\\theta/2), 0, \\cos(\\theta/2))$ 和 $\\mathbf{u}_2 = (-\\sin(\\theta/2), 0, \\cos(\\theta/2))$ 给出，其中 $\\theta$ 是键角。我们将构建与三个不同基组相对应的三个哈密顿矩阵。\n\n**基组 A：最小基组**\n此基组由 $N=6$ 个原子轨道组成：\n$$\n\\{ \\phi_{\\mathrm{O}2s}, \\phi_{\\mathrm{O}2p_x}, \\phi_{\\mathrm{O}2p_y}, \\phi_{\\mathrm{O}2p_z}, \\phi_{\\mathrm{H1}1s}, \\phi_{\\mathrm{H2}1s} \\}\n$$\n相应的哈密顿矩阵 $H_0$ 是一个 $6 \\times 6$ 矩阵。\n\n**基组 B：最小基组 + 氢 $p$-极化**\n该基组在每个氢原子上增加一个与 O-H 键对齐的 $p$ 型轨道。总共得到 $N=8$ 个 AO：\n$$\n\\{ \\phi_{\\mathrm{O}2s}, \\dots, \\phi_{\\mathrm{H2}1s}, \\phi_{\\mathrm{H1}p}, \\phi_{\\mathrm{H2}p} \\}\n$$\n相应的哈密顿矩阵 $H_{\\mathrm{H}p}$ 是一个 $8 \\times 8$ 矩阵。\n\n**基组 C：最小基组 + 氧 $d$-极化**\n该基组在氧原子上增加一个与 $z$ 轴对齐的类 $d_{z^2}$ 轨道。总共得到 $N=7$ 个 AO：\n$$\n\\{ \\phi_{\\mathrm{O}2s}, \\dots, \\phi_{\\mathrm{H2}1s}, \\phi_{\\mathrm{O}d_{z^2}} \\}\n$$\n相应的哈密顿矩阵 $H_{\\mathrm{O}d}$ 是一个 $7 \\times 7$ 矩阵。\n\n**3. 哈密顿矩阵构建**\n\n哈密顿矩阵元 $H_{jk}$ 由在位能（对角元，$j=k$）和耦合项（非对角元，$j \\neq k$）给出。\n\n**对角元（在位能）：**\n这些作为参数给出：\n$H_{ii} = \\varepsilon_{\\mathrm{O}2s}$ 对于 O $2s$ 轨道。\n$H_{ii} = \\varepsilon_{\\mathrm{O}2p}$ 对于所有三个 O $2p$ 轨道。\n$H_{ii} = \\varepsilon_{\\mathrm{H}1s}$ 对于两个 H $1s$ 轨道。\n$H_{ii} = \\varepsilon_{\\mathrm{H}p}$ 对于 H $p$ 极化轨道。\n$H_{ii} = \\varepsilon_{\\mathrm{O}d}$ 对于 O $d$ 极化轨道。\n\n**非对角元（耦合）：**\n非对角元是根据给定的类 Slater-Koster 规则构建的。设基轨道按上述顺序索引。设 $\\theta_r = \\theta \\cdot \\pi/180$ 为以弧度为单位的角度。\n\n**对于最小基组哈密顿矩阵 $H_0$ ($6 \\times 6$)：**\n\\begin{itemize}\n    \\item $H_{0,4} = H_{0,5} = V_{ss\\sigma}$ (O $2s$ 和 H $1s$ 之间的耦合)\n    \\item $H_{1,4} = V_{sp\\sigma} (\\mathbf{e}_x \\cdot \\mathbf{u}_1) = V_{sp\\sigma} \\sin(\\theta_r/2)$\n    \\item $H_{1,5} = V_{sp\\sigma} (\\mathbf{e}_x \\cdot \\mathbf{u}_2) = -V_{sp\\sigma} \\sin(\\theta_r/2)$\n    \\item $H_{2,4} = H_{2,5} = V_{sp\\sigma} (\\mathbf{e}_y \\cdot \\mathbf{u}_{1,2}) = 0$\n    \\item $H_{3,4} = H_{3,5} = V_{sp\\sigma} (\\mathbf{e}_z \\cdot \\mathbf{u}_{1,2}) = V_{sp\\sigma} \\cos(\\theta_r/2)$\n\\end{itemize}\n所有其他非对角元均为 $0$。该矩阵是对称的，因此 $H_{ji} = H_{ij}$。\n\n**对于哈密顿矩阵 $H_{\\mathrm{H}p}$ ($8 \\times 8$)：**\n左上角的 $6 \\times 6$ 子矩阵与 $H_0$ 相同。涉及 H $p$ 轨道（索引 6, 7）的新元素是：\n\\begin{itemize}\n    \\item $H_{0,6} = H_{0,7} = V_{s p(\\mathrm{H}) \\sigma}$ (O $2s$ 和 H $p$ 之间的耦合)\n    \\item $H_{1,6} = V_{pp\\sigma} (\\mathbf{e}_x \\cdot \\mathbf{u}_1) = V_{pp\\sigma} \\sin(\\theta_r/2)$\n    \\item $H_{1,7} = V_{pp\\sigma} (\\mathbf{e}_x \\cdot \\mathbf{u}_2) = -V_{pp\\sigma} \\sin(\\theta_r/2)$\n    \\item $H_{2,6} = H_{2,7} = 0$\n    \\item $H_{3,6} = H_{3,7} = V_{pp\\sigma} (\\mathbf{e}_z \\cdot \\mathbf{u}_{1,2}) = V_{pp\\sigma} \\cos(\\theta_r/2)$\n\\end{itemize}\n\n**对于哈密顿矩阵 $H_{\\mathrm{O}d}$ ($7 \\times 7$)：**\n左上角的 $6 \\times 6$ 子矩阵与 $H_0$ 相同。涉及 O $d_{z^2}$ 轨道（索引 6）的新元素是：\n\\begin{itemize}\n    \\item 问题陈述中指出耦合仅存在于 O $d_{z^2}$ 和 H $1s$ 之间。\n    \\item 设 $n_k = \\mathbf{u}_k \\cdot \\mathbf{e}_z = \\cos(\\theta_r/2)$。方向因子为 $F_{sd} = \\frac{1}{2}(3n_k^2 - 1)$。该因子对两个氢原子是相同的。\n    \\item $H_{4,6} = V_{sd\\sigma} F_{sd}$ (H1 $1s$ 和 O $d_{z^2}$ 之间的耦合)\n    \\item $H_{5,6} = V_{sd\\sigma} F_{sd}$ (H2 $1s$ 和 O $d_{z^2}$ 之间的耦合)\n\\end{itemize}\n\n**4. 能量计算与比较**\n\n对于每个哈密顿矩阵（$H_0$、$H_{\\mathrm{H}p}$、$H_{\\mathrm{O}d}$），我们数值计算其特征值 $\\{\\varepsilon_i\\}$，并按升序排序。然后总能量计算为 $E = 2 \\sum_{i=1}^{4} \\varepsilon_i$。这样我们就得到了 $E_0$、$E_{\\mathrm{H}p}$ 和 $E_{\\mathrm{O}d}$。\n\n由极化函数引起的稳定化能定义为：\n$$\n\\Delta E_{\\mathrm{H}p} = E_{\\mathrm{H}p} - E_0\n$$\n$$\n\\Delta E_{\\mathrm{O}d} = E_{\\mathrm{O}d} - E_0\n$$\n根据变分原理，$\\Delta E_{\\mathrm{H}p} \\le 0$ 且 $\\Delta E_{\\mathrm{O}d} \\le 0$。更负的值表示更大的稳定化效果。\n\n最后，我们通过比较 $\\Delta E_{\\mathrm{H}p}$ 和 $\\Delta E_{\\mathrm{O}d}$ 来确定哪一组极化函数更有效。索引 $b$ 的赋值如下：\n\\begin{itemize}\n    \\item $b=0$ 如果 $\\Delta E_{\\mathrm{H}p} < \\Delta E_{\\mathrm{O}d}$\n    \\item $b=1$ 如果 $\\Delta E_{\\mathrm{O}d} < \\Delta E_{\\mathrm{H}p}$\n    \\item $b=2$ 如果 $|\\Delta E_{\\mathrm{H}p} - \\Delta E_{\\mathrm{O}d}| \\leq 10^{-9}$\n\\end{itemize}\n此过程将应用于问题陈述中指定的每个测试用例。该算法将使用 Python 和 NumPy 库进行线性代数运算来实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the tight-binding model for all test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A\n        {\n            \"theta\": 104.5, \"eps_O2s\": -1.20, \"eps_O2p\": -0.52, \"eps_H1s\": -0.50,\n            \"V_ss_sigma\": -0.22, \"V_sp_sigma\": -0.30, \"V_spH_sigma\": -0.25,\n            \"V_pp_sigma\": -0.10, \"eps_Hp\": -0.125, \"eps_Od\": 0.20, \"V_sd_sigma\": -0.12\n        },\n        # Case B\n        {\n            \"theta\": 104.5, \"eps_O2s\": -1.20, \"eps_O2p\": -0.52, \"eps_H1s\": -0.50,\n            \"V_ss_sigma\": -0.22, \"V_sp_sigma\": -0.30, \"V_spH_sigma\": -0.25,\n            \"V_pp_sigma\": -0.10, \"eps_Hp\": 1.00, \"eps_Od\": 2.00, \"V_sd_sigma\": -0.12\n        },\n        # Case C\n        {\n            \"theta\": 104.5, \"eps_O2s\": -1.20, \"eps_O2p\": -0.52, \"eps_H1s\": -0.50,\n            \"V_ss_sigma\": -0.22, \"V_sp_sigma\": -0.30, \"V_spH_sigma\": -0.05,\n            \"V_pp_sigma\": -0.02, \"eps_Hp\": -0.125, \"eps_Od\": 0.30, \"V_sd_sigma\": -0.20\n        },\n    ]\n\n    results_str = []\n    for params in test_cases:\n        delta_E_Hp, delta_E_Od, b = calculate_stabilizations(params)\n        res_str = f\"[{delta_E_Hp:.6f},{delta_E_Od:.6f},{b}]\"\n        results_str.append(res_str)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results_str)}]\")\n\ndef calculate_stabilizations(params):\n    \"\"\"\n    Calculates stabilization energies for a single set of parameters.\n    \"\"\"\n    # Unpack parameters\n    theta_deg = params[\"theta\"]\n    eps_O2s = params[\"eps_O2s\"]\n    eps_O2p = params[\"eps_O2p\"]\n    eps_H1s = params[\"eps_H1s\"]\n    V_ss_sigma = params[\"V_ss_sigma\"]\n    V_sp_sigma = params[\"V_sp_sigma\"]\n    V_spH_sigma = params[\"V_spH_sigma\"]\n    V_pp_sigma = params[\"V_pp_sigma\"]\n    eps_Hp = params[\"eps_Hp\"]\n    eps_Od = params[\"eps_Od\"]\n    V_sd_sigma = params[\"V_sd_sigma\"]\n\n    # Geometric factors\n    theta_rad = np.deg2rad(theta_deg)\n    sin_half_theta = np.sin(theta_rad / 2)\n    cos_half_theta = np.cos(theta_rad / 2)\n\n    # Number of occupied orbitals for H2O (8 valence electrons)\n    n_occ = 4\n    \n    # 1. Energy with minimal basis (E0)\n    # Basis: {O2s, O2px, O2py, O2pz, H1s, H2s}\n    H0 = np.zeros((6, 6))\n    H0[0, 0] = eps_O2s\n    H0[1, 1] = H0[2, 2] = H0[3, 3] = eps_O2p\n    H0[4, 4] = H0[5, 5] = eps_H1s\n\n    # O2s - H1s/H2s\n    H0[0, 4] = H0[4, 0] = V_ss_sigma\n    H0[0, 5] = H0[5, 0] = V_ss_sigma\n    # O2p - H1s/H2s\n    H0[1, 4] = H0[4, 1] = V_sp_sigma * sin_half_theta\n    H0[1, 5] = H0[5, 1] = V_sp_sigma * -sin_half_theta\n    H0[3, 4] = H0[4, 3] = V_sp_sigma * cos_half_theta\n    H0[3, 5] = H0[5, 3] = V_sp_sigma * cos_half_theta\n    # O2py has zero coupling due to symmetry\n    \n    eigvals0 = np.linalg.eigh(H0)[0]\n    E0 = 2 * np.sum(eigvals0[:n_occ])\n\n    # 2. Energy with H-p polarization (EHp)\n    # Basis: {O2s, O2px, O2py, O2pz, H1s, H2s, H1p, H2p}\n    HHp = np.zeros((8, 8))\n    HHp[:6, :6] = H0\n    HHp[6, 6] = HHp[7, 7] = eps_Hp\n\n    # O2s - H1p/H2p\n    HHp[0, 6] = HHp[6, 0] = V_spH_sigma\n    HHp[0, 7] = HHp[7, 0] = V_spH_sigma\n    # O2p - H1p/H2p\n    HHp[1, 6] = HHp[6, 1] = V_pp_sigma * sin_half_theta\n    HHp[1, 7] = HHp[7, 1] = V_pp_sigma * -sin_half_theta\n    HHp[3, 6] = HHp[6, 3] = V_pp_sigma * cos_half_theta\n    HHp[3, 7] = HHp[7, 3] = V_pp_sigma * cos_half_theta\n    \n    eigvals_Hp = np.linalg.eigh(HHp)[0]\n    EHp = 2 * np.sum(eigvals_Hp[:n_occ])\n    delta_E_Hp = EHp - E0\n\n    # 3. Energy with O-d polarization (EOd)\n    # Basis: {O2s, O2px, O2py, O2pz, H1s, H2s, Odz2}\n    HOd = np.zeros((7, 7))\n    HOd[:6, :6] = H0\n    HOd[6, 6] = eps_Od\n    \n    # Odz2 - H1s/H2s\n    nk = cos_half_theta\n    F_sd = 0.5 * (3 * nk**2 - 1)\n    HOd[4, 6] = HOd[6, 4] = V_sd_sigma * F_sd\n    HOd[5, 6] = HOd[6, 5] = V_sd_sigma * F_sd\n    \n    eigvals_Od = np.linalg.eigh(HOd)[0]\n    EOd = 2 * np.sum(eigvals_Od[:n_occ])\n    delta_E_Od = EOd - E0\n\n    # 4. Compare stabilizations\n    if np.abs(delta_E_Hp - delta_E_Od) <= 1e-9:\n        b = 2\n    elif delta_E_Hp < delta_E_Od:\n        b = 0\n    else:\n        b = 1\n        \n    return delta_E_Hp, delta_E_Od, b\n\nsolve()\n```", "id": "2460489"}, {"introduction": "更高的精度固然是好的，但在计算科学中，这几乎总是伴随着代价。虽然极化函数能提高我们的计算质量，但它们也显著增加了所需的计算资源。最后一个练习将探讨这一关键的权衡。你将把一个简化但现实的成本模型应用于苯分子的几何优化，比较包含与不包含极化函数的基组，例如 $6-31\\mathrm{G}$ 与 $6-31\\mathrm{G}(\\mathrm{d},\\mathrm{p})$。这将让你对计算成本如何随基组大小而标度增长有一个定量的认识，这是量子化学任何实际应用中的重要一课 [@problem_id:2460510]。", "problem": "给定一个简化的第一性原理计算成本模型，用于比较使用两种基组（$6\\text{-}31\\mathrm{G}$ 和 $6\\text{-}31\\mathrm{G}(\\mathrm{d},\\mathrm{p})$）对苯（$\\mathrm{C}_6\\mathrm{H}_6$）进行几何优化所需的总中央处理器（CPU）时间。重点关注极化函数的作用，以及它们如何改变基函数的数量，从而影响计算量的标度关系。请使用以下定义和假设，在不引入任何额外近似的情况下，计算所要求的比率。\n\n关于基函数数量的假设：\n- 使用球谐函数。一个 $p$ 型函数有 $3$ 个角向分量，一个 $d$ 型函数有 $5$ 个角向分量。\n- 在 $6\\text{-}31\\mathrm{G}$ 基组中：\n  - 每个碳原子贡献 $9$ 个收缩基函数。\n  - 每个氢原子贡献 $2$ 个收缩基函数。\n- 添加极化函数以形成 $6\\text{-}31\\mathrm{G}(\\mathrm{d},\\mathrm{p})$ 基组：\n  - 每个碳原子增加 $5$ 个 $d$ 型函数。\n  - 每个氢原子增加 $3$ 个 $p$ 型函数。\n- 苯有 $6$ 个碳原子和 $6$ 个氢原子。\n\n根据这些假设，基函数的总数为：\n- 对于 $6\\text{-}31\\mathrm{G}$: $N_{\\mathrm{G}} = 6 \\times 9 + 6 \\times 2$。\n- 对于 $6\\text{-}31\\mathrm{G}(\\mathrm{d},\\mathrm{p})$: $N_{\\mathrm{Gdp}} = 6 \\times (9 + 5) + 6 \\times (2 + 3)$。\n\n几何优化的计算成本模型：\n- 一次几何优化包含 $S$ 个步骤。\n- 每个步骤包含 $I$ 次自洽场（Self-Consistent Field, SCF）过程的迭代以收敛电子能量，外加一次解析能量梯度计算。\n- 一次 SCF 迭代的主要成本与 $N^{p_{\\mathrm{scf}}}$ 成正比，其中 $N$ 是基函数的总数，$p_{\\mathrm{scf}}$ 是给定的标度指数。\n- 一次梯度计算的主要成本与 $N^{p_{\\mathrm{grad}}}$ 成正比，其中 $p_{\\mathrm{grad}}$ 是给定的标度指数。\n- 相对于单次 SCF 迭代，梯度成本可以有不同的前置因子。设 $g$ 为梯度成本的无量纲乘数，其单位为在相同 $N$ 下的单次 SCF 迭代成本。\n- 因此，在给定 $N$ 的情况下，一次完整优化的总成本正比于\n  $$ T(N) = S \\left( I \\, N^{p_{\\mathrm{scf}}} + g \\, N^{p_{\\mathrm{grad}}} \\right). $$\n- 因为所有项都乘以一个共同的未知比例常数，所以在算法参数相同但 $N$ 值不同的情况下，任意两个此类总成本的比率都是明确定义且无量纲的。\n\n任务：\n- 对于每个测试用例，计算无量纲比率\n  $$ R = \\frac{T\\!\\left(N_{\\mathrm{Gdp}}\\right)}{T\\!\\left(N_{\\mathrm{G}}\\right)} = \\frac{S \\left( I \\, N_{\\mathrm{Gdp}}^{p_{\\mathrm{scf}}} + g \\, N_{\\mathrm{Gdp}}^{p_{\\mathrm{grad}}} \\right)}{S \\left( I \\, N_{\\mathrm{G}}^{p_{\\mathrm{scf}}} + g \\, N_{\\mathrm{G}}^{p_{\\mathrm{grad}}} \\right)} = \\frac{I \\, N_{\\mathrm{Gdp}}^{p_{\\mathrm{scf}}} + g \\, N_{\\mathrm{Gdp}}^{p_{\\mathrm{grad}}}}{I \\, N_{\\mathrm{G}}^{p_{\\mathrm{scf}}} + g \\, N_{\\mathrm{G}}^{p_{\\mathrm{grad}}}}. $$\n- 将 $R$ 报告为小数点后精确到 $6$ 位的十进制浮点数。\n\n测试组：\n- 使用以下参数的有序元组 $(p_{\\mathrm{scf}}, p_{\\mathrm{grad}}, S, I, g)$：\n  1. $(3, 3, 12, 10, 2)$\n  2. $(4, 3, 8, 15, 1)$\n  3. $(3, 4, 20, 8, 3)$\n  4. $(3, 3, 1, 1, 0)$\n  5. $(2.5, 3.5, 25, 25, 1.5)$\n\n要求的最终输出格式：\n- 你的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表。例如 $[r_1,r_2,r_3,r_4,r_5]$，其中每个 $r_k$ 是测试用例 $k$ 的比率 $R$，四舍五入到小数点后恰好 $6$ 位。结果是无量纲的浮点数。", "solution": "所提出的问题是计算化学中一个有效的练习，它要求应用一个简化但概念上合理的成本模型来估算当向基组中添加极化函数时计算量的增加。所有参数和定义均已提供，问题是自洽的，科学上基于量子化学计算的原理，并且在数学上是适定的。我们将着手解决。\n\n主要任务是计算使用 $6\\text{-}31\\mathrm{G}(\\mathrm{d},\\mathrm{p})$ 基组相对于 $6\\text{-}31\\mathrm{G}$ 基组对苯（$\\mathrm{C}_6\\mathrm{H}_6$）进行几何优化的总计算时间比率 $R$。核心原理是计算成本与基函数数量 $N$ 呈多项式标度关系。添加极化函数会增加 $N$，从而导致成本显著上升。\n\n首先，我们必须确定每种基组的基函数总数。分子是苯，有 $6$ 个碳原子和 $6$ 个氢原子。\n\n对于 $6\\text{-}31\\mathrm{G}$ 基组：\n- 每个碳原子贡献 $9$ 个基函数。\n- 每个氢原子贡献 $2$ 个基函数。\n因此，基函数的总数 $N_{\\mathrm{G}}$ 为：\n$$ N_{\\mathrm{G}} = (6 \\text{ C atoms}) \\times (9 \\text{ functions/C}) + (6 \\text{ H atoms}) \\times (2 \\text{ functions/H}) = 54 + 12 = 66 $$\n\n对于 $6\\text{-}31\\mathrm{G}(\\mathrm{d},\\mathrm{p})$ 基组，我们添加极化函数：\n- 为 $6$ 个碳原子中的每一个添加一组 $5$ 个球谐 $d$ 型函数。\n- 为 $6$ 个氢原子中的每一个添加一组 $3$ 个球谐 $p$ 型函数。\n基函数的总数 $N_{\\mathrm{Gdp}}$ 为：\n$$ N_{\\mathrm{Gdp}} = 6 \\times (9 + 5) + 6 \\times (2 + 3) = 6 \\times 14 + 6 \\times 5 = 84 + 30 = 114 $$\n\n问题中给出的几何优化总成本为 $T(N) = S \\left( I \\, N^{p_{\\mathrm{scf}}} + g \\, N^{p_{\\mathrm{grad}}} \\right)$，其中 $S$ 是优化步数，$I$ 是每步的 SCF 迭代次数，$p_{\\mathrm{scf}}$ 和 $p_{\\mathrm{grad}}$ 是标度指数，$g$ 是梯度成本的前置因子。成本比率 $R$ 得以简化，因为公共因子 $S$ 被消掉：\n$$ R = \\frac{T(N_{\\mathrm{Gdp}})}{T(N_{\\mathrm{G}})} = \\frac{I \\, N_{\\mathrm{Gdp}}^{p_{\\mathrm{scf}}} + g \\, N_{\\mathrm{Gdp}}^{p_{\\mathrm{grad}}}}{I \\, N_{\\mathrm{G}}^{p_{\\mathrm{scf}}} + g \\, N_{\\mathrm{G}}^{p_{\\mathrm{grad}}}} $$\n\n现在我们使用 $N_{\\mathrm{G}} = 66$ 和 $N_{\\mathrm{Gdp}} = 114$ 对每个测试用例评估此比率。\n\n用例 1: $(p_{\\mathrm{scf}}, p_{\\mathrm{grad}}, S, I, g) = (3, 3, 12, 10, 2)$\n由于 $p_{\\mathrm{scf}} = p_{\\mathrm{grad}} = 3$，表达式简化为：\n$$ R_1 = \\frac{10 \\cdot 114^3 + 2 \\cdot 114^3}{10 \\cdot 66^3 + 2 \\cdot 66^3} = \\frac{(10 + 2) \\cdot 114^3}{(10 + 2) \\cdot 66^3} = \\left(\\frac{114}{66}\\right)^3 \\approx 5.15201173 \\approx 5.152012 $$\n\n用例 2: $(p_{\\mathrm{scf}}, p_{\\mathrm{grad}}, S, I, g) = (4, 3, 8, 15, 1)$\n$$ R_2 = \\frac{15 \\cdot 114^4 + 1 \\cdot 114^3}{15 \\cdot 66^4 + 1 \\cdot 66^3} = \\frac{15 \\cdot 168896016 + 1481544}{15 \\cdot 18974736 + 287496} = \\frac{2534921784}{284908536} \\approx 8.89730594 \\approx 8.897306 $$\n\n用例 3: $(p_{\\mathrm{scf}}, p_{\\mathrm{grad}}, S, I, g) = (3, 4, 20, 8, 3)$\n$$ R_3 = \\frac{8 \\cdot 114^3 + 3 \\cdot 114^4}{8 \\cdot 66^3 + 3 \\cdot 66^4} = \\frac{8 \\cdot 1481544 + 3 \\cdot 168896016}{8 \\cdot 287496 + 3 \\cdot 18974736} = \\frac{518540400}{59224176} \\approx 8.75567784 \\approx 8.755678 $$\n\n用例 4: $(p_{\\mathrm{scf}}, p_{\\mathrm{grad}}, S, I, g) = (3, 3, 1, 1, 0)$\n此处，$g=0$，因此梯度成本项为零。另请注意，$p_{\\mathrm{scf}}=p_{\\mathrm{grad}}$，尽管在 $g=0$ 时这一点无关紧要。\n$$ R_4 = \\frac{1 \\cdot 114^3 + 0 \\cdot 114^3}{1 \\cdot 66^3 + 0 \\cdot 66^3} = \\frac{114^3}{66^3} = \\left(\\frac{114}{66}\\right)^3 \\approx 5.15201173 \\approx 5.152012 $$\n这个结果与用例 1 相同，因为比率仅取决于共同的指数 $3$。\n\n用例 5: $(p_{\\mathrm{scf}}, p_{\\mathrm{grad}}, S, I, g) = (2.5, 3.5, 25, 25, 1.5)$\n指数为非整数，这在经验标度数据的拟合中很常见。\n$$ R_5 = \\frac{25 \\cdot 114^{2.5} + 1.5 \\cdot 114^{3.5}}{25 \\cdot 66^{2.5} + 1.5 \\cdot 66^{3.5}} $$\n计算幂次：\n$114^{2.5} \\approx 138763.33235$\n$114^{3.5} \\approx 15818960.038$\n$66^{2.5} \\approx 35386.43949$\n$66^{3.5} \\approx 2335492.206$\n代入这些值：\n$$ R_5 \\approx \\frac{25 \\cdot (138763.33235) + 1.5 \\cdot (15818960.038)}{25 \\cdot (35386.43949) + 1.5 \\cdot (2335492.206)} = \\frac{3469083.30875 + 23728440.057}{884660.98725 + 3503238.309} = \\frac{27197523.36575}{4387899.29625} \\approx 6.19830571 \\approx 6.198306 $$\n最终计算出的比率，四舍五入到小数点后六位，是根据所提供的模型系统地计算出来的。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the computational chemistry cost ratio problem.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each tuple is (p_scf, p_grad, S, I, g).\n    # S is not used in the final ratio formula but is kept for completeness.\n    test_cases = [\n        (3, 3, 12, 10, 2),\n        (4, 3, 8, 15, 1),\n        (3, 4, 20, 8, 3),\n        (3, 3, 1, 1, 0),\n        (2.5, 3.5, 25, 25, 1.5)\n    ]\n\n    # Calculate the number of basis functions for each basis set.\n    # Benzene C6H6: 6 Carbon atoms, 6 Hydrogen atoms.\n    \n    # For 6-31G:\n    # C: 9 functions, H: 2 functions\n    N_g = 6 * 9 + 6 * 2\n\n    # For 6-31G(d,p):\n    # C: 9 (base) + 5 (d-functions) = 14 functions\n    # H: 2 (base) + 3 (p-functions) = 5 functions\n    N_gdp = 6 * (9 + 5) + 6 * (2 + 3)\n\n    results = []\n    for case in test_cases:\n        p_scf, p_grad, _, I, g = case\n\n        # Numerator of the ratio R: T(N_gdp) part\n        # The S factor cancels out, so we calculate I * N^p_scf + g * N^p_grad\n        numerator = I * (N_gdp ** p_scf) + g * (N_gdp ** p_grad)\n\n        # Denominator of the ratio R: T(N_g) part\n        denominator = I * (N_g ** p_scf) + g * (N_g ** p_grad)\n\n        # Compute the ratio\n        if denominator == 0:\n            # This case should not happen with the given inputs, but it is good practice\n            # to handle potential division by zero.\n            ratio = float('inf')\n        else:\n            ratio = numerator / denominator\n\n        # Round the result to exactly 6 digits after the decimal point\n        # and format it as a string to preserve trailing zeros if any.\n        results.append(f\"{ratio:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2460510"}]}