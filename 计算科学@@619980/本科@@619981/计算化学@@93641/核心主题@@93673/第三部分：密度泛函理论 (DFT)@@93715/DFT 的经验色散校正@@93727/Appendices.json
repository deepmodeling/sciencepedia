{"hands_on_practices": [{"introduction": "经验校正的核心思想是通过将其“调整”以匹配高质量的参考数据，从而弥补基础理论的不足。本练习让您直接体验这一调参过程，展示如何通过代数方法确定一个标度因子 $s_6$，使得 DFT-D 计算能够精确再现一个已知的实验值，即分子晶体的晶格能。这个实践将参数化的抽象概念简化为一个清晰的、目标驱动的计算任务，帮助您理解经验方法中“经验”二字的由来 [@problem_id:2455164]。", "problem": "要求您形式化一个分子晶体色散校正密度泛函理论 (DFT-D) 方法中色散标度因子的重参数化过程。在应用于 Becke、三参数、Lee–Yang–Parr (B3LYP) 杂化泛函的 Grimme 第三代色散校正 (D3) 中，主导的对色散贡献项中包含一个与分子间距的负六次方成正比的项，该项由一个无量纲因子进行标度。相关量定义如下：每摩尔晶体的实验晶格能大小用 $U_{\\mathrm{exp}}$ 表示（为正值，单位为 $\\mathrm{kJ\\,mol^{-1}}$），在没有任何色散校正的情况下，晶体与孤立分子之间的基础泛函 Kohn–Sham 能量差为 $E_{\\mathrm{KS}}$ （单位为 $\\mathrm{kJ\\,mol^{-1}}$，负值表示结合），对晶体计算的所有对 $R^{-6}$ 色散项的未标度总和为 $D_6$（单位为 $\\mathrm{kJ\\,mol^{-1}}$，通常为负值）。在此简化设定中，D3校正后晶体与孤立分子之间的预测能量差为 $E_{\\mathrm{pred}} = E_{\\mathrm{KS}} + s_6 D_6$，其中 $s_6$ 是乘以 $R^{-6}$ 色散项的未知无量纲标度因子。为了在“预测能量差等于实验晶格能大小的负值”这一约定下完美再现实验晶格能，标度因子 $s_6$ 必须满足 $E_{\\mathrm{KS}} + s_6 D_6 = -U_{\\mathrm{exp}}$。\n\n请编写一个程序，为每个给定的参数集计算满足上述关系的唯一实数值 $s_6$。所有能量均以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位，最终的晶格能匹配标度因子 $s_6$ 是无量纲的。您的程序必须为以下测试套件生成结果，每个测试项以三元组 $\\left(U_{\\mathrm{exp}}, E_{\\mathrm{KS}}, D_6\\right)$ 的形式给出，所有条目的单位均为 $\\mathrm{kJ\\,mol^{-1}}$：\n- 测试 1 (固态苯，标称值): $\\left(50.6,\\ 7.4,\\ -58.0\\right)$。\n- 测试 2 (具有微弱吸引性基础泛函的备用计算设置): $\\left(50.6,\\ -5.0,\\ -45.0\\right)$。\n- 测试 3 (小数量级色散和的边界行为): $\\left(0.5,\\ 0.0,\\ -1.0\\right)$。\n- 测试 4 (捕获更多色散对的备用邻居列表): $\\left(50.6,\\ 12.0,\\ -120.0\\right)$。\n- 测试 5 (基础泛函已匹配晶格能大小的假设情况): $\\left(50.6,\\ -50.6,\\ -10.0\\right)$。\n\n您的程序必须输出一行内容，其中包含一个由方括号括起来的逗号分隔列表，列表包含五个计算出的 $s_6$ 值，顺序与测试套件相同，每个值都四舍五入到恰好六位小数。输出不得包含空格。例如，一个有效的输出格式是 $\\left[\\text{value}_1,\\text{value}_2,\\text{value}_3,\\text{value}_4,\\text{value}_5\\right]$，其中每个 $\\text{value}_i$ 是一个四舍五入到六位小数的十进制表示。", "solution": "所述问题已经过验证，被认为是科学上合理、提法得当且自洽的。它展示了计算化学中参数化经验色散校正的标准流程。所有提供的数据在物理上是合理的，在数学上是一致的。因此，我们可以着手推导解决方案。\n\n目标是确定无量纲标度因子 $s_6$ 的值，使得预测能量差 $E_{\\mathrm{pred}}$ 能正确再现实验晶格能的大小 $U_{\\mathrm{exp}}$。如前所述，基本条件是从孤立分子形成晶体的预测能量必须等于实验晶格能的负值。这表示为：\n$$E_{\\mathrm{pred}} = -U_{\\mathrm{exp}}$$\n\n在 DFT-D3 校正的框架内，预测能量的模型由未校正的 Kohn-Sham 能量差 $E_{\\mathrm{KS}}$ 和色散能量贡献之和给出。色散能量是未标度的对总和 $D_6$ 乘以标度因子 $s_6$。这给出了 $E_{\\mathrm{pred}}$ 的表达式：\n$$E_{\\mathrm{pred}} = E_{\\mathrm{KS}} + s_6 D_6$$\n\n通过将第二个方程代入第一个方程，我们建立了关联已知量（$U_{\\mathrm{exp}}$, $E_{\\mathrm{KS}}$, $D_6$）和未知参数 $s_6$ 的控制方程：\n$$E_{\\mathrm{KS}} + s_6 D_6 = -U_{\\mathrm{exp}}$$\n\n这是一个关于 $s_6$ 的单变量线性方程。为了求解 $s_6$，我们进行代数重排。首先，我们分离出包含 $s_6$ 的项：\n$$s_6 D_6 = -U_{\\mathrm{exp}} - E_{\\mathrm{KS}}$$\n\n接着，我们两边同除以 $D_6$ 以获得 $s_6$ 的显式公式。当且仅当 $D_6 \\neq 0$ 时，存在唯一解。在晶格内色散相互作用的物理背景下，构成 $D_6$ 的所有吸引性对项 $R_{ij}^{-6}$ 的总和仅在不存在相互作用的平凡情况下才可能为零。问题在所有测试用例中都为 $D_6$ 提供了非零值，从而保证了 $s_6$ 的唯一解。解为：\n$$s_6 = \\frac{-U_{\\mathrm{exp}} - E_{\\mathrm{KS}}}{D_6}$$\n这可以重写为：\n$$s_6 = -\\frac{U_{\\mathrm{exp}} + E_{\\mathrm{KS}}}{D_6}$$\n\n所有能量 ($U_{\\mathrm{exp}}$、$E_{\\mathrm{KS}}$、$D_6$) 的单位均为 $\\mathrm{kJ\\,mol^{-1}}$。因此，$s_6$ 是能量之比，并且是正确的无量纲量。\n\n我们现在将此公式应用于五个给定的测试用例：\n1. 对于 $(U_{\\mathrm{exp}}, E_{\\mathrm{KS}}, D_6) = (50.6, 7.4, -58.0)$:\n$$s_6 = -\\frac{50.6 + 7.4}{-58.0} = -\\frac{58.0}{-58.0} = 1.0$$\n2. 对于 $(U_{\\mathrm{exp}}, E_{\\mathrm{KS}}, D_6) = (50.6, -5.0, -45.0)$:\n$$s_6 = -\\frac{50.6 + (-5.0)}{-45.0} = -\\frac{45.6}{-45.0} \\approx 1.013333$$\n3. 对于 $(U_{\\mathrm{exp}}, E_{\\mathrm{KS}}, D_6) = (0.5, 0.0, -1.0)$:\n$$s_6 = -\\frac{0.5 + 0.0}{-1.0} = -\\frac{0.5}{-1.0} = 0.5$$\n4. 对于 $(U_{\\mathrm{exp}}, E_{\\mathrm{KS}}, D_6) = (50.6, 12.0, -120.0)$:\n$$s_6 = -\\frac{50.6 + 12.0}{-120.0} = -\\frac{62.6}{-120.0} \\approx 0.521667$$\n5. 对于 $(U_{\\mathrm{exp}}, E_{\\mathrm{KS}}, D_6) = (50.6, -50.6, -10.0)$:\n$$s_6 = -\\frac{50.6 + (-50.6)}{-10.0} = -\\frac{0.0}{-10.0} = 0.0$$\n\n这些计算出的值将按照最终输出的指定格式进行格式化。计算实现是直接的。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the dispersion scaling factor s6 for a set of test cases.\n    The derivation is based on the formula: s6 = -(U_exp + E_KS) / D6.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple (U_exp, E_KS, D_6) in kJ/mol.\n    test_cases = [\n        (50.6, 7.4, -58.0),   # Test 1\n        (50.6, -5.0, -45.0),  # Test 2\n        (0.5, 0.0, -1.0),      # Test 3\n        (50.6, 12.0, -120.0), # Test 4\n        (50.6, -50.6, -10.0)  # Test 5\n    ]\n\n    results = []\n    for case in test_cases:\n        # Unpack the parameters for clarity\n        U_exp, E_KS, D_6 = case\n\n        # The governing equation is E_KS + s6 * D6 = -U_exp.\n        # Solving for s6 gives: s6 = (-U_exp - E_KS) / D6\n        # The D6 values are guaranteed to be non-zero by the problem context.\n        s6_value = -(U_exp + E_KS) / D_6\n        results.append(s6_value)\n\n    # Format the results into a single string as specified:\n    # A comma-separated list of values, rounded to six decimal places,\n    # with no spaces, enclosed in square brackets.\n    output_string = f\"[{','.join(f'{res:.6f}' for res in results)}]\"\n\n    # Final print statement in the exact required format.\n    print(output_string)\n\nsolve()\n```", "id": "2455164"}, {"introduction": "在理解了如何校准参数以匹配实验之后，下一步是深入掌握色散能本身的计算细节。本练习将指导您为一个简化的 DNA 碱基对模型，实现完整的 Grimme D3 色散校正公式，包括其核心的 $C_6$ 和 $C_8$ 项以及 Becke-Johnson 阻尼函数。通过亲手计算色散对总结合能的贡献，您将对这些看似微弱的力在维系生物大分子结构中所起的关键作用有一个具体而深刻的认识 [@problem_id:2455220]。", "problem": "您将通过结合基准密度泛函理论 (DFT) 结合能与经验性第三代色散 (D3) 校正，来对鸟嘌呤-胞嘧啶 (G–C) DNA碱基对的相互作用能进行建模。目标是针对几组参数集，计算可归因于D3校正的能量在总结合能中所占的比例。请使用以下自洽的模型和数据。\n\n假设总结合能由下式给出\n$$\nE_{\\text{bind, total}} = E_{\\text{DFT, base}} + E_{\\text{D3}},\n$$\n其中，$E_{\\text{DFT, base}}$ 是不包含色散的基准DFT结合能，$E_{\\text{D3}}$ 是成对加和的色散能。将 $E_{\\text{D3}}$ 建模为\n$$\nE_{\\text{D3}} = - s_6 \\sum_{(i,j)} f_6(r_{ij}) \\frac{C_{6,ij}}{r_{ij}^6} - s_8 \\sum_{(i,j)} f_8(r_{ij}) \\frac{C_{8,ij}}{r_{ij}^8},\n$$\n其阻尼函数为 Becke–Johnson 类型\n$$\nf_n(r_{ij})=\\frac{1}{1 + 6 \\left(\\frac{r_{ij}}{a_1 R_{0,ij} + a_2}\\right)^{-\\alpha_n}},\n$$\n其中 $n \\in \\{6,8\\}$，$\\alpha_6=\\alpha_8=14$，并且\n$$\nR_{0,ij}=\\sqrt{\\frac{C_{8,ij}}{C_{6,ij}}}.\n$$\n所有片段间对距离 $r_{ij}$ 的单位为埃（ångström），$C_{6,ij}$ 的单位为 $\\text{kJ mol}^{-1}\\ \\text{Å}^6$，$C_{8,ij}$ 的单位为 $\\text{kJ mol}^{-1}\\ \\text{Å}^8$，所有能量必须以 $\\text{kJ mol}^{-1}$ 为单位报告。在此模型中，G–C碱基对由以下12个片段间原子对（由 $(i,j)$ 索引）及其距离和色散系数表示：\n- 原子对 1: $r_{1}=3.0$, $C_{6,1}=2500$, $C_{8,1}=35000$.\n- 原子对 2: $r_{2}=3.2$, $C_{6,2}=2700$, $C_{8,2}=37800$.\n- 原子对 3: $r_{3}=3.5$, $C_{6,3}=3000$, $C_{8,3}=42000$.\n- 原子对 4: $r_{4}=3.8$, $C_{6,4}=3300$, $C_{8,4}=46200$.\n- 原子对 5: $r_{5}=4.2$, $C_{6,5}=3600$, $C_{8,5}=50400$.\n- 原子对 6: $r_{6}=4.5$, $C_{6,6}=4000$, $C_{8,6}=56000$.\n- 原子对 7: $r_{7}=5.0$, $C_{6,7}=4500$, $C_{8,7}=63000$.\n- 原子对 8: $r_{8}=5.5$, $C_{6,8}=5000$, $C_{8,8}=70000$.\n- 原子对 9: $r_{9}=6.0$, $C_{6,9}=5500$, $C_{8,9}=77000$.\n- 原子对 10: $r_{10}=6.5$, $C_{6,10}=6000$, $C_{8,10}=84000$.\n- 原子对 11: $r_{11}=7.0$, $C_{6,11}=6500$, $C_{8,11}=91000$.\n- 原子对 12: $r_{12}=7.5$, $C_{6,12}=7000$, $C_{8,12}=98000$.\n\n对于下面描述的每个测试用例，程序必须计算 $E_{\\text{D3}}$，然后计算 $E_{\\text{bind, total}}$，最后计算以下比例\n$$\n\\phi=\\frac{\\lvert E_{\\text{D3}}\\rvert}{\\lvert E_{\\text{bind, total}}\\rvert},\n$$\n以小数形式报告（不带百分号）。如果一个测试用例涉及对所有距离的统一缩放，则使用 $r_{ij}^{(\\text{scaled})}=\\lambda \\cdot r_{ij}$，其中 $\\lambda$ 是给定的缩放因子。不涉及角度。所有测试用例的最终答案必须表示为无量纲小数，并四舍五入到小数点后恰好六位。\n\n测试套件：\n- 用例A（一般情况）：$s_6=1.0$, $s_8=1.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-65.0$，无距离缩放（$\\lambda=1.0$）。\n- 用例B（无 $C_8$ 项）：$s_6=1.0$, $s_8=0.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-65.0$，无距离缩放（$\\lambda=1.0$）。\n- 用例C（纯色散结合基准）：$s_6=1.0$, $s_8=1.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=0.0$，无距离缩放（$\\lambda=1.0$）。\n- 用例D（拉伸构型）：$s_6=1.0$, $s_8=1.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-50.0$，距离缩放 $\\lambda=1.15$。\n- 用例E（禁用色散的边界情况）：$s_6=0.0$, $s_8=0.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-60.0$，无距离缩放（$\\lambda=1.0$）。\n\n您的程序应生成单行输出，其中包含按用例A到E顺序排列、用逗号分隔并括在方括号内的结果列表。每个结果必须是该用例的小数 $\\phi$，四舍五入到小数点后六位。例如，输出必须采用“[x_A,x_B,x_C,x_D,x_E]”的形式。", "solution": "所述问题是有效的。其科学基础是计算化学的原理，特别是被称为 DFT-D3 的经验性色散校正方法。所有必要的方程、常数和数据均已提供，使得该问题是自洽的、适定的，且没有歧义或矛盾。一个唯一的、稳定的、有意义的解可以通过算法确定。我们现在开始进行推导和计算。\n\n目标是计算对于一个鸟嘌呤-胞嘧啶碱基对模型，可归因于经验性色散校正的能量在总结合能中所占的比例 $\\phi$。该比例定义为：\n$$\n\\phi = \\frac{\\lvert E_{\\text{D3}}\\rvert}{\\lvert E_{\\text{bind, total}}\\rvert}\n$$\n总结合能 $E_{\\text{bind, total}}$ 由基准密度泛函理论 (DFT) 能量和色散校正能 $E_{\\text{D3}}$ 之和给出：\n$$\nE_{\\text{bind, total}} = E_{\\text{DFT, base}} + E_{\\text{D3}}\n$$\n对于每个测试用例，$E_{\\text{DFT, base}}$ 的值是给定的。核心任务是根据所提供的模型和数据计算 $E_{\\text{D3}}$。\n\nD3色散能被表述为对所有相互作用的原子对 $(i,j)$ 的成对加和，其中包含偶极-偶极 ($C_6$) 和偶极-四极 ($C_8$) 相互作用项：\n$$\nE_{\\text{D3}} = - s_6 \\sum_{(i,j)} f_6(r_{ij}) \\frac{C_{6,ij}}{r_{ij}^6} - s_8 \\sum_{(i,j)} f_8(r_{ij}) \\frac{C_{8,ij}}{r_{ij}^8}\n$$\n此处，$s_6$ 和 $s_8$ 是特定于被校正泛函的全局缩放参数，在每个测试用例中均有提供。求和遍及指定的12个片段间原子对。\n\n为了防止在短原子间距处出现非物理行为（即所谓的“色散灾难”），对每一项都应用了一个阻尼函数 $f_n(r_{ij})$。问题指定了形式如下的 Becke–Johnson 型阻尼函数：\n$$\nf_n(r_{ij})=\\frac{1}{1 + 6 \\left(\\frac{r_{ij}}{a_1 R_{0,ij} + a_2}\\right)^{-\\alpha_n}}\n$$\n其中 $n \\in \\{6, 8\\}$。参数 $a_1$ 和 $a_2$ 用于修正阻尼半径，并在每个测试用例中指定。指数 $\\alpha_n$ 控制阻尼的陡峭程度；它被设定为常数 $\\alpha_6 = \\alpha_8 = 14$。特征阻尼半径 $R_{0,ij}$ 由色散系数定义：\n$$\nR_{0,ij} = \\sqrt{\\frac{C_{8,ij}}{C_{6,ij}}}\n$$\n对所有12对原子对所提供的数据进行分析后发现，比率 $\\frac{C_{8,ij}}{C_{6,ij}}$ 是一个等于14的常数。因此，对于此模型中的所有原子对 $(i,j)$，$R_{0,ij} = \\sqrt{14}\\ \\text{Å}$。由于 $\\alpha_6 = \\alpha_8$，对于任何给定的原子对，阻尼函数 $f_6(r_{ij})$ 和 $f_8(r_{ij})$ 是相同的。\n\n每个测试用例的计算步骤如下：\n1.  获取用例特定的参数：$s_6$、$s_8$、$a_1$、$a_2$、$E_{\\text{DFT, base}}$ 和距离缩放因子 $\\lambda$。\n2.  初始化色散能累加器，$E_{\\text{D3}} = 0$。\n3.  遍历所提供的12个原子对。对于每个具有数据 ($r_{ij}$, $C_{6,ij}$, $C_{8,ij}$) 的原子对 $(i,j)$：\n    a. 应用距离缩放：$r_{ij}^{\\text{scaled}} = \\lambda \\cdot r_{ij}$。\n    b. 计算阻尼半径 $R_{0,ij} = \\sqrt{C_{8,ij}/C_{6,ij}} = \\sqrt{14}$。\n    c. 计算修正后的阻尼半径 $R'_{0,ij} = a_1 R_{0,ij} + a_2$。\n    d. 使用 $\\alpha_n = 14$ 计算阻尼函数 $f_n(r_{ij}^{\\text{scaled}})$ 的值。\n    e. 计算来自 $C_6$ 和 $C_8$ 项的能量贡献：\n    $$\n    E_{6}^{(i,j)} = -s_6 f_6(r_{ij}^{\\text{scaled}}) \\frac{C_{6,ij}}{(r_{ij}^{\\text{scaled}})^6}\n    $$\n    $$\n    E_{8}^{(i,j)} = -s_8 f_8(r_{ij}^{\\text{scaled}}) \\frac{C_{8,ij}}{(r_{ij}^{\\text{scaled}})^8}\n    $$\n    f. 将这些贡献加到总色散能中：$E_{\\text{D3}} = E_{\\text{D3}} + E_{6}^{(i,j)} + E_{8}^{(i,j)}$。\n4.  遍历所有原子对后，获得最终的 $E_{\\text{D3}}$。\n5.  计算总结合能：$E_{\\text{bind, total}} = E_{\\text{DFT, base}} + E_{\\text{D3}}$。\n6.  计算最终比例 $\\phi = \\frac{\\lvert E_{\\text{D3}} \\rvert}{\\lvert E_{\\text{bind, total}} \\rvert}$。如果 $E_{\\text{bind, total}} = 0$ 则会出现特殊情况。在本问题的背景下（用例C），当 $E_{\\text{DFT, base}} = 0$ 时会发生这种情况，导致 $E_{\\text{bind, total}} = E_{\\text{D3}}$，因此 $\\phi = 1$（因为 $E_{\\text{D3}} \\neq 0$）。另一个特殊情况（用例E）是 $s_6=s_8=0$，这使得 $E_{\\text{D3}}=0$，因此 $\\phi=0$。\n7.  按要求将 $\\phi$ 的结果四舍五入到六位小数。\n\n此过程被系统地应用于五个测试用例中的每一个，以生成最终的结果列表。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the fraction of total binding energy from D3 dispersion correction\n    for a model G-C DNA base pair across several test cases.\n    \"\"\"\n\n    # Define constants from the problem statement.\n    ALPHA_N = 14.0\n\n    # Define the 12 inter-fragment atom pairs with their data.\n    # Data is structured as (r_ij in Å, C_6,ij, C_8,ij).\n    # Units for C_6 are kJ mol^-1 Å^6 and for C_8 are kJ mol^-1 Å^8.\n    atom_pairs = [\n        (3.0, 2500.0, 35000.0), (3.2, 2700.0, 37800.0),\n        (3.5, 3000.0, 42000.0), (3.8, 3300.0, 46200.0),\n        (4.2, 3600.0, 50400.0), (4.5, 4000.0, 56000.0),\n        (5.0, 4500.0, 63000.0), (5.5, 5000.0, 70000.0),\n        (6.0, 5500.0, 77000.0), (6.5, 6000.0, 84000.0),\n        (7.0, 6500.0, 91000.0), (7.5, 7000.0, 98000.0)\n    ]\n\n    # Define the test cases from the problem statement.\n    # Data is structured as (s6, s8, a1, a2, E_DFT_base, lambda).\n    test_cases = [\n        # Case A: general case\n        (1.0, 1.0, 1.0, 0.0, -65.0, 1.0),\n        # Case B: no C8 term\n        (1.0, 0.0, 1.0, 0.0, -65.0, 1.0),\n        # Case C: purely dispersion-bound baseline\n        (1.0, 1.0, 1.0, 0.0, 0.0, 1.0),\n        # Case D: stretched geometry\n        (1.0, 1.0, 1.0, 0.0, -50.0, 1.15),\n        # Case E: boundary with dispersion disabled\n        (0.0, 0.0, 1.0, 0.0, -60.0, 1.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        s6, s8, a1, a2, e_dft_base, lam = case\n        \n        e_d3 = 0.0\n\n        # The loop calculates E_D3. If s6 and s8 are both zero, E_D3 remains zero.\n        if not (s6 == 0.0 and s8 == 0.0):\n            for r_ij, c6_ij, c8_ij in atom_pairs:\n                # Apply distance scaling factor lambda\n                r_scaled = lam * r_ij\n                \n                # Calculate the damping radius R_0,ij\n                r0_ij = np.sqrt(c8_ij / c6_ij)\n                \n                # Calculate the modified damping radius R'_0,ij\n                r0_prime = a1 * r0_ij + a2\n                \n                # The damping function f_n is identical for n=6 and n=8\n                # because alpha_6 = alpha_8.\n                ratio = r_scaled / r0_prime\n                f_n = 1.0 / (1.0 + 6.0 * np.power(ratio, -ALPHA_N))\n                \n                # Calculate dispersion energy terms for this pair\n                e6_term = -s6 * f_n * (c6_ij / np.power(r_scaled, 6))\n                e8_term = -s8 * f_n * (c8_ij / np.power(r_scaled, 8))\n                \n                # Accumulate the total D3 energy\n                e_d3 += (e6_term + e8_term)\n\n        # Calculate the total binding energy\n        e_bind_total = e_dft_base + e_d3\n        \n        # Calculate the fraction phi = |E_D3| / |E_bind,total|\n        # Handle potential division by zero, although it is not an issue for the given test cases.\n        if np.isclose(e_bind_total, 0.0):\n            # This occurs in Case C where E_DFT_base = 0.\n            # E_bind_total = E_D3, so phi = |E_D3|/|E_D3| = 1, as E_D3 is non-zero.\n            # If E_D3 were also zero, phi would be 0/0, which we define as 0.\n            phi = 1.0 if not np.isclose(e_d3, 0.0) else 0.0\n        else:\n            phi = abs(e_d3) / abs(e_bind_total)\n\n        # Append the result formatted to exactly six decimal places.\n        results.append(f\"{phi:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2455220"}, {"introduction": "任何经验方法都面临一个关键问题，即其“可移植性”：为某一类系统训练的参数是否能很好地适用于另一类系统？这项高级实践正是要探讨这一问题，要求您在带电氨基酸二聚体上比较两套不同的 D3 参数集，这类系统在生物学上至关重要，但与通常用于拟合参数的中性分子存在显著差异。这项练习旨在磨练您对经验模型内在假设和适用范围的批判性思维，这是成为一名成熟的计算化学实践者的必经之路 [@problem_id:2455218]。", "problem": "您将实现一个程序，在带有经验色散校正的密度泛函理论 (DFT-D) 框架下，定量评估经验拟合的色散参数从中性有机分子到带电荷的氨基酸二聚体的可移植性。从已确立的物理基础出发，即长程色散相互作用源于相关的瞬时偶极，并且在领头阶上可以很好地由与 $C_6/R^6$ 和 $C_8/R^8$ 成正比的成对相加的 London 项来表示，其中 $C_6$ 和 $C_8$ 是色散系数，$R$ 是原子间距。使用物理上合理的短程有理阻尼，以避免在小 $R$ 处与基础密度泛函理论发生双重计算，并假设跨片段的原子对之间具有成对可加性。不要假设系数是环境依赖的；使用通过对称混合规则组合的元素分辨系数。\n\n您的任务是：\n- 实现一个色散能量模型，该模型对于一个给定的二聚体及其跨片段原子对列表 $\\{(i,j)\\}$（间距为 $R_{ij}$），通过对每个项应用短程有理阻尼的 $C_6/R^6$ 和 $C_8/R^8$ 项的贡献求和，计算出总色散校正 $E_{\\mathrm{disp}}$（单位为千焦/摩尔）。\n- 对元素分辨色散系数使用几何平均组合规则：对于元素 $A$ 和 $B$，$C_6^{AB} = \\sqrt{C_6^A C_6^B}$ 和 $C_8^{AB} = \\sqrt{C_8^A C_8^B}$。\n- 使用以下两套参数集，它们分别被解释为用中性有机物训练的参数集和针对带电体系的假设性重新拟合参数集：\n  - 中性体系训练参数：$s_6 = 1.0$, $s_8 = 1.2$, $a_1 = 0.40$, $a_2 = 4.50$。\n  - 带电体系重新拟合：$s_6 = 1.0$, $s_8 = 0.9$, $a_1 = 0.35$, $a_2 = 5.00$。\n- 使用以下原子单位（Hartree-Bohr幂）的元素分辨色散系数：氢（$\\text{H}$）元素：$C_6^{\\mathrm{H}} = 6.5$, $C_8^{\\mathrm{H}} = 124$；碳（$\\text{C}$）元素：$C_6^{\\mathrm{C}} = 46.6$, $C_8^{\\mathrm{C}} = 1560$；氮（$\\text{N}$）元素：$C_6^{\\mathrm{N}} = 24.2$, $C_8^{\\mathrm{N}} = 900$；氧（$\\text{O}$）元素：$C_6^{\\mathrm{O}} = 15.6$, $C_8^{\\mathrm{O}} = 650$。\n- 单位与常数：原子间距 $R_{ij}$ 将以埃（Angstrom）为单位提供，并且必须使用 $1\\,\\text{\\AA} = 1.889726125\\,\\text{Bohr}$ 将其转换为玻尔（Bohr）。总能量必须使用 $1\\,E_h = 2625.49962\\,\\mathrm{kJ\\,mol^{-1}}$ 以千焦/摩尔为单位报告。\n\n对于每个二聚体，使用中性体系训练参数计算色散能量 $E_{\\mathrm{disp}}^{\\text{neutral}}$，并使用带电体系重新拟合参数计算 $E_{\\mathrm{disp}}^{\\text{charged}}$。对于每个测试用例，输出以千焦/摩尔为单位的绝对差值 $\\lvert E_{\\mathrm{disp}}^{\\text{neutral}} - E_{\\mathrm{disp}}^{\\text{charged}} \\rvert$，结果四舍五入到小数点后5位。\n\n测试套件（每个条目是一个跨片段原子对的列表，其中每个原子对以（原子 $i$ 的元素，原子 $j$ 的元素，$R_{ij}$ 单位为 $\\text{\\AA}$）的形式给出）：\n\n- 案例 1（赖氨酸铵 $\\text{NH}_3^+$ 与谷氨酸羧酸盐 $\\text{COO}^-$，近距离盐桥接触）：\n  - 原子对：\n    - $(\\text{H}, \\text{O}, 2.1)$, $(\\text{H}, \\text{O}, 2.3)$, $(\\text{H}, \\text{O}, 2.5)$,\n    - $(\\text{N}, \\text{O}, 2.9)$, $(\\text{N}, \\text{O}, 3.1)$,\n    - $(\\text{C}, \\text{O}, 3.2)$, $(\\text{C}, \\text{O}, 3.6)$,\n    - $(\\text{C}, \\text{C}, 4.0)$.\n\n- 案例 2（精氨酸胍基 $\\text{C(NH}_2\\text{)_3}^+$ 与天冬氨酸盐 $\\text{COO}^-$，近距离接触）：\n  - 原子对：\n    - $(\\text{H}, \\text{O}, 2.0)$, $(\\text{H}, \\text{O}, 2.2)$,\n    - $(\\text{N}, \\text{O}, 2.8)$, $(\\text{N}, \\text{O}, 3.0)$, $(\\text{N}, \\text{O}, 3.2)$,\n    - $(\\text{C}, \\text{O}, 3.3)$,\n    - $(\\text{C}, \\text{N}, 3.5)$.\n\n- 案例 3（赖氨酸铵与天冬氨酸盐，长距离分离）：\n  - 原子对：\n    - $(\\text{H}, \\text{O}, 7.0)$, $(\\text{H}, \\text{O}, 7.5)$,\n    - $(\\text{N}, \\text{O}, 8.0)$,\n    - $(\\text{C}, \\text{O}, 7.2)$,\n    - $(\\text{C}, \\text{C}, 8.0)$.\n\n- 案例 4（精氨酸胍基与谷氨酸盐，压缩状态）：\n  - 原子对：\n    - $(\\text{H}, \\text{O}, 2.0)$, $(\\text{H}, \\text{O}, 2.0)$, $(\\text{H}, \\text{O}, 2.1)$,\n    - $(\\text{N}, \\text{O}, 2.6)$, $(\\text{N}, \\text{O}, 2.7)$,\n    - $(\\text{C}, \\text{O}, 3.0)$,\n    - $(\\text{C}, \\text{N}, 3.1)$.\n\n- 案例 5（赖氨酸铵与精氨酸胍基，中等距离处的同种电荷二聚体）：\n  - 原子对：\n    - $(\\text{H}, \\text{H}, 6.5)$,\n    - $(\\text{N}, \\text{N}, 6.0)$,\n    - $(\\text{N}, \\text{H}, 5.5)$,\n    - $(\\text{C}, \\text{N}, 6.2)$.\n\n本问题不涉及角度单位。所有距离均应按给定值处理为以埃（Angstrom）为单位的直线间距。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表（例如，$[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4,\\text{result}_5]$），其中每个 $\\text{result}_k$ 是案例 $k$ 的绝对差值 $\\lvert E_{\\mathrm{disp}}^{\\text{neutral}} - E_{\\mathrm{disp}}^{\\text{charged}} \\rvert$（单位为 $\\mathrm{kJ\\,mol^{-1}}$），四舍五入到小数点后5位。", "solution": "该问题要求实现一个成对相加的经验色散能量模型，该模型通常与密度泛函理论（DFT-D）结合使用，以评估参数在中性和带电化学体系之间的可移植性。问题陈述经核实具有科学依据、提法恰当且客观。它提供了所有必要的数据、常数和计算任务，尽管省略了阻尼函数的显式函数形式。然而，所提供的参数，特别是 $a_1$ 和 $a_2$，强烈且唯一地指向了 Grimme 及其合作者在 D4 色散模型中推广的有理阻尼方案形式。该领域的合格学生应该能够识别这种形式。我将基于此有充分理由的推断进行后续步骤。\n\n总色散能量 $E_{\\mathrm{disp}}$ 是通过对所有指定的跨片段原子对 $\\{i,j\\}$ 求和来计算的。每对原子的贡献由经过阻尼的 $C_6/R^6$ 和 $C_8/R^8$ 项之和给出。能量表达式为：\n\n$$E_{\\mathrm{disp}} = \\sum_{\\{i,j\\}} \\Delta E_{ij}$$\n\n其中 $\\Delta E_{ij}$ 是间距为 $R_{ij}$ 的单个原子对 $i$ 和 $j$ 的相互作用能。该项包括标度参数 $s_6$ 和 $s_8$，以及一个有理阻尼函数，以防止在小 $R_{ij}$ 处出现奇异点，并避免与底层 DFT 泛函已捕获的相关效应发生双重计算。$\\Delta E_{ij}$ 的具体形式为：\n\n$$\n\\Delta E_{ij} = - \\left( s_6 \\frac{C_6^{ij}}{R_{ij}^6} f_{\\mathrm{damp},6}(R_{ij}) + s_8 \\frac{C_8^{ij}}{R_{ij}^8} f_{\\mathrm{damp},8}(R_{ij}) \\right)\n$$\n\n问题描述了一个有理阻尼函数。根据所提供的参数 $a_1$ 和 $a_2$，该函数被推断为：\n\n$$\nf_{\\mathrm{damp},n}(R_{ij}) = \\frac{R_{ij}^n}{R_{ij}^n + (R_{thr,ij})^n}, \\quad \\text{for } n \\in \\{6, 8\\}\n$$\n\n其中 $R_{thr,ij}$ 是一个依赖于原子种类的阻尼半径。将此代入能量表达式可得到一个数值上稳定的形式：\n\n$$\n\\Delta E_{ij} = - \\left( s_6 \\frac{C_6^{ij}}{R_{ij}^6 + (R_{thr,ij})^6} + s_8 \\frac{C_8^{ij}}{R_{ij}^8 + (R_{thr,ij})^8} \\right)\n$$\n\n阻尼半径 $R_{thr,ij}$ 的计算公式为：\n\n$$\nR_{thr,ij} = a_1 R_{0,ij} + a_2\n$$\n\n在此，$a_1$ 是一个无量纲参数，$a_2$ 是一个具有长度单位的参数。特征半径 $R_{0,ij}$ 由色散系数导出：\n\n$$\nR_{0,ij} = \\sqrt{\\frac{C_8^{ij}}{C_6^{ij}}}\n$$\n\n所有计算都必须以原子单位（能量用 Hartree，距离用 Bohr）进行。所提供的原子间距 $R_{ij}$ 以埃（$\\text{\\AA}$）为单位，必须使用常数 $1\\,\\text{\\AA} = 1.889726125\\,\\text{Bohr}$ 进行转换。参数 $a_2$ 的单位假定为玻尔。异核原子对的色散系数 $C_n^{ij}$ 是使用几何平均组合规则，根据同核原子系数 $C_n^i$ 和 $C_n^j$ 计算得出：\n\n$$\nC_6^{ij} = \\sqrt{C_6^i C_6^j}\n$$\n$$\nC_8^{ij} = \\sqrt{C_8^i C_8^j}\n$$\n\n原子系数以原子单位（Hartree-Bohr幂）提供：\n-   氢（$\\mathrm{H}$）：$C_6^{\\mathrm{H}} = 6.5$, $C_8^{\\mathrm{H}} = 124$\n-   碳（$\\mathrm{C}$）：$C_6^{\\mathrm{C}} = 46.6$, $C_8^{\\mathrm{C}} = 1560$\n-   氮（$\\mathrm{N}$）：$C_6^{\\mathrm{N}} = 24.2$, $C_8^{\\mathrm{N}} = 900$\n-   氧（$\\mathrm{O}$）：$C_6^{\\mathrm{O}} = 15.6$, $C_8^{\\mathrm{O}} = 650$\n\n将使用两套阻尼参数：\n1.  中性体系训练：$s_6 = 1.0$, $s_8 = 1.2$, $a_1 = 0.40$, $a_2 = 4.50$。\n2.  带电体系重新拟合：$s_6 = 1.0$, $s_8 = 0.9$, $a_1 = 0.35$, $a_2 = 5.00$。\n\n每个测试用例的算法如下：\n1.  将两个总能量累加器 $E_{\\mathrm{disp}}^{\\text{neutral}}$ 和 $E_{\\mathrm{disp}}^{\\text{charged}}$ 初始化为零。\n2.  对于测试用例中的每个原子对（元素 $i$，元素 $j$，$R_{ij}$）：\n    a. 将 $R_{ij}$ 从埃转换为玻尔。\n    b. 计算组合系数 $C_6^{ij}$ 和 $C_8^{ij}$。\n    c. 计算特征半径 $R_{0,ij}$。\n    d. 对于每个参数集（“中性”和“带电”）：\n        i.  计算阻尼半径 $R_{thr,ij}$。\n        ii. 使用相应参数计算对能量贡献 $\\Delta E_{ij}$。\n        iii. 将此贡献加到各自的总能量累加器中。\n3.  遍历所有原子对后，得到的总能量 $E_{\\mathrm{disp}}^{\\text{neutral}}$ 和 $E_{\\mathrm{disp}}^{\\text{charged}}$ 的单位是哈特里（Hartrees）。使用常数 $1\\,E_h = 2625.49962\\,\\mathrm{kJ\\,mol^{-1}}$ 将两者都转换为千焦/摩尔。\n4.  计算绝对差值：$\\lvert E_{\\mathrm{disp}}^{\\text{neutral}} - E_{\\mathrm{disp}}^{\\text{charged}} \\rvert$。该值即为该测试用例的结果。\n\n对所有五个提供的测试用例执行此过程。最终输出是这些绝对差值的数组，四舍五入到小数点后五位。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the absolute difference in DFT-D dispersion energy between two\n    parameter sets for several molecular dimer test cases.\n    \"\"\"\n\n    # --- Givens from the problem statement ---\n\n    # Physical constants\n    BOHR_PER_ANGSTROM = 1.889726125\n    KJPERMOL_PER_HARTREE = 2625.49962\n\n    # Element-resolved dispersion coefficients in atomic units (Hartree-Bohr powers)\n    C_COEFFS = {\n        'H': {'C6': 6.5, 'C8': 124.0},\n        'C': {'C6': 46.6, 'C8': 1560.0},\n        'N': {'C6': 24.2, 'C8': 900.0},\n        'O': {'C6': 15.6, 'C8': 650.0},\n    }\n\n    # Parameter sets\n    PARAMS_NEUTRAL = {'s6': 1.0, 's8': 1.2, 'a1': 0.40, 'a2': 4.50}\n    PARAMS_CHARGED = {'s6': 1.0, 's8': 0.9, 'a1': 0.35, 'a2': 5.00}\n\n    # Test suite: list of lists of pairs (elem1, elem2, distance in Angstroms)\n    test_cases = [\n        # Case 1: Lys-NH3+ /// Glu-COO- (close)\n        [('H', 'O', 2.1), ('H', 'O', 2.3), ('H', 'O', 2.5), ('N', 'O', 2.9), \n         ('N', 'O', 3.1), ('C', 'O', 3.2), ('C', 'O', 3.6), ('C', 'C', 4.0)],\n        # Case 2: Arg-Guan+ /// Asp-COO- (close)\n        [('H', 'O', 2.0), ('H', 'O', 2.2), ('N', 'O', 2.8), ('N', 'O', 3.0),\n         ('N', 'O', 3.2), ('C', 'O', 3.3), ('C', 'N', 3.5)],\n        # Case 3: Lys-NH3+ /// Asp-COO- (long separation)\n        [('H', 'O', 7.0), ('H', 'O', 7.5), ('N', 'O', 8.0), ('C', 'O', 7.2),\n         ('C', 'C', 8.0)],\n        # Case 4: Arg-Guan+ /// Glu-COO- (compressed)\n        [('H', 'O', 2.0), ('H', 'O', 2.0), ('H', 'O', 2.1), ('N', 'O', 2.6),\n         ('N', 'O', 2.7), ('C', 'O', 3.0), ('C', 'N', 3.1)],\n        # Case 5: Lys-NH3+ /// Arg-Guan+ (like-charge)\n        [('H', 'H', 6.5), ('N', 'N', 6.0), ('N', 'H', 5.5), ('C', 'N', 6.2)],\n    ]\n\n    # --- Core Logic ---\n\n    def calculate_dispersion_energy(pairs, params):\n        \"\"\"\n        Calculates the total dispersion energy for a list of atom pairs\n        using a given set of DFT-D parameters.\n        \n        Args:\n            pairs (list): A list of tuples, each representing an atom pair\n                          (element1_str, element2_str, distance_in_angstrom).\n            params (dict): A dictionary of parameters (s6, s8, a1, a2).\n\n        Returns:\n            float: The total dispersion energy in Hartrees.\n        \"\"\"\n        total_energy_hartree = 0.0\n        \n        s6, s8, a1, a2 = params['s6'], params['s8'], params['a1'], params['a2']\n        \n        for elem1, elem2, r_angstrom in pairs:\n            # Convert distance to Bohr\n            r_bohr = r_angstrom * BOHR_PER_ANGSTROM\n            \n            # Get atomic coefficients\n            c6_1, c8_1 = C_COEFFS[elem1]['C6'], C_COEFFS[elem1]['C8']\n            c6_2, c8_2 = C_COEFFS[elem2]['C6'], C_COEFFS[elem2]['C8']\n            \n            # Apply geometric mean combination rule\n            c6_12 = np.sqrt(c6_1 * c6_2)\n            c8_12 = np.sqrt(c8_1 * c8_2)\n            \n            # Calculate characteristic radius\n            r0_12 = np.sqrt(c8_12 / c6_12)\n            \n            # Calculate damping threshold radius\n            r_thr = a1 * r0_12 + a2\n            \n            # Calculate energy contribution using rational damping form\n            e6_term = s6 * c6_12 / (r_bohr**6 + r_thr**6)\n            e8_term = s8 * c8_12 / (r_bohr**8 + r_thr**8)\n            \n            total_energy_hartree -= (e6_term + e8_term)\n            \n        return total_energy_hartree\n\n    # --- Main Execution Loop ---\n\n    results = []\n    for case_pairs in test_cases:\n        # Calculate energy for neutral-trained parameters\n        e_neutral_hartree = calculate_dispersion_energy(case_pairs, PARAMS_NEUTRAL)\n        e_neutral_kjmol = e_neutral_hartree * KJPERMOL_PER_HARTREE\n        \n        # Calculate energy for charged-system parameters\n        e_charged_hartree = calculate_dispersion_energy(case_pairs, PARAMS_CHARGED)\n        e_charged_kjmol = e_charged_hartree * KJPERMOL_PER_HARTREE\n        \n        # Calculate the absolute difference and format the result\n        diff = abs(e_neutral_kjmol - e_charged_kjmol)\n        results.append(f\"{diff:.5f}\")\n\n    # Print the final result in the specified format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2455218"}]}