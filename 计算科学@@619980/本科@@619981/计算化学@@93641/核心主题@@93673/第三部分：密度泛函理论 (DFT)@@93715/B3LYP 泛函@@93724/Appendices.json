{"hands_on_practices": [{"introduction": "要想真正理解一个工具，你必须首先了解它的构成。本练习将 B3LYP 泛函拆分为五个基本组成部分，从而揭开它的神秘面纱。通过计算每个部分的贡献——从 Hartree-Fock 交换到局域和梯度修正的相关能——你将对这个“混合”泛函的构造方式有一个具体的认识 [@problem_id:2464274]。", "problem": "给定用于密度泛函理论 (DFT) 中闭壳层水分子的 Becke 三参数 Lee–Yang–Parr (B3LYP) 交换相关泛函的定义。该交换相关能由五个分量能量组合而成：Slater 交换（局域自旋密度近似 (LSDA) 交换）、Becke 1988 交换修正项、Vosko–Wilk–Nusair (VWN) 局域相关项、Lee–Yang–Parr (LYP) 相关项以及 Hartree–Fock (HF) 精确交换。将这些未加权的分量能量分别表示为 $E_{x}^{\\mathrm{Slater}}$、$E_{x}^{\\mathrm{B88}}$、$E_{c}^{\\mathrm{VWN}}$、$E_{c}^{\\mathrm{LYP}}$ 和 $E_{x}^{\\mathrm{HF}}$，单位均为 Hartree。\n\nB3LYP 使用三个标准参数：$a_{0} = 0.20$、$a_{X} = 0.72$ 和 $a_{C} = 0.81$。B3LYP 交换相关能定义为以下线性组合\n$$\nE_{xc}^{\\mathrm{B3LYP}} = \\left(1 - a_{0}\\right) E_{x}^{\\mathrm{Slater}} + a_{X} E_{x}^{\\mathrm{B88}} + \\left(1 - a_{C}\\right) E_{c}^{\\mathrm{VWN}} + a_{C} E_{c}^{\\mathrm{LYP}} + a_{0} E_{x}^{\\mathrm{HF}}.\n$$\n对于下方的每个测试用例，请计算五个加权分量贡献及其总和 $E_{xc}^{\\mathrm{B3LYP}}$，单位均为 Hartree。每个测试用例所需的输出是一个包含六个浮点数的列表，顺序如下：\n$$\n\\big[\\left(1 - a_{0}\\right) E_{x}^{\\mathrm{Slater}},\\; a_{X} E_{x}^{\\mathrm{B88}},\\; \\left(1 - a_{C}\\right) E_{c}^{\\mathrm{VWN}},\\; a_{C} E_{c}^{\\mathrm{LYP}},\\; a_{0} E_{x}^{\\mathrm{HF}},\\; E_{xc}^{\\mathrm{B3LYP}}\\big].\n$$\n\n所有输入和输出都必须以 Hartree 为单位表示。你的程序应生成单行输出，其中包含用方括号括起来的结果，结果为逗号分隔的列表形式，列表中的每个元素是对应一个测试用例的列表（例如，$[\\text{case1},\\text{case2},\\dots]$）。\n\n测试套件（每个元组对应于 $\\left(E_{x}^{\\mathrm{Slater}}, E_{x}^{\\mathrm{B88}}, E_{c}^{\\mathrm{VWN}}, E_{c}^{\\mathrm{LYP}}, E_{x}^{\\mathrm{HF}}\\right)$，单位为 Hartree）：\n- 用例 A（类水，一般情况）：$\\left(-8.000,\\; -1.200,\\; -0.300,\\; -0.500,\\; -7.500\\right)$\n- 用例 B（边界情况，所有分量为零）：$\\left(0.000,\\; 0.000,\\; 0.000,\\; 0.000,\\; 0.000\\right)$\n- 用例 C（边缘情况，梯度修正为正）：$\\left(-10.000,\\; +0.100,\\; -0.400,\\; -0.450,\\; -9.000\\right)$\n- 用例 D（边缘情况，分量数值较大）：$\\left(-20.000,\\; -5.000,\\; -1.000,\\; -1.200,\\; -18.000\\right)$", "solution": "此任务要求通过指定的权重组合各分量能量，以计算 Becke 三参数 Lee–Yang–Parr (B3LYP) 交换相关能。B3LYP 泛函是一种杂化泛函，它将一部分 Hartree–Fock (HF) 精确交换与半局域交换和相关项混合。该定义使用了参数 $a_{0}$、$a_{X}$ 和 $a_{C}$。\n\n给定 $a_{0} = 0.20$、$a_{X} = 0.72$ 和 $a_{C} = 0.81$，我们将 B3LYP 交换相关能改写为按分量“分解”的形式：\n$$\nE_{xc}^{\\mathrm{B3LYP}} = \\underbrace{\\left(1 - a_{0}\\right) E_{x}^{\\mathrm{Slater}}}_{\\text{weighted Slater exchange}} + \\underbrace{a_{X} E_{x}^{\\mathrm{B88}}}_{\\text{weighted Becke 88 exchange}} + \\underbrace{\\left(1 - a_{C}\\right) E_{c}^{\\mathrm{VWN}}}_{\\text{weighted VWN correlation}} + \\underbrace{a_{C} E_{c}^{\\mathrm{LYP}}}_{\\text{weighted LYP correlation}} + \\underbrace{a_{0} E_{x}^{\\mathrm{HF}}}_{\\text{weighted HF exchange}}.\n$$\n明确定义各个权重：\n- Slater 交换权重：$c_{\\mathrm{Slater}} = 1 - a_{0} = 1 - 0.20 = 0.80$。\n- Becke 88 交换权重：$c_{\\mathrm{B88}} = a_{X} = 0.72$。\n- VWN 相关权重：$c_{\\mathrm{VWN}} = 1 - a_{C} = 1 - 0.81 = 0.19$。\n- LYP 相关权重：$c_{\\mathrm{LYP}} = a_{C} = 0.81$。\n- HF 交换权重：$c_{\\mathrm{HF}} = a_{0} = 0.20$。\n\n对于每个输入为 $\\left(E_{x}^{\\mathrm{Slater}}, E_{x}^{\\mathrm{B88}}, E_{c}^{\\mathrm{VWN}}, E_{c}^{\\mathrm{LYP}}, E_{x}^{\\mathrm{HF}}\\right)$ 的测试用例，计算：\n$$\n\\begin{aligned}\nW_{\\mathrm{Slater}} &= c_{\\mathrm{Slater}} \\, E_{x}^{\\mathrm{Slater}},\\\\\nW_{\\mathrm{B88}} &= c_{\\mathrm{B88}} \\, E_{x}^{\\mathrm{B88}},\\\\\nW_{\\mathrm{VWN}} &= c_{\\mathrm{VWN}} \\, E_{c}^{\\mathrm{VWN}},\\\\\nW_{\\mathrm{LYP}} &= c_{\\mathrm{LYP}} \\, E_{c}^{\\mathrm{LYP}},\\\\\nW_{\\mathrm{HF}} &= c_{\\mathrm{HF}} \\, E_{x}^{\\mathrm{HF}},\\\\\nE_{xc}^{\\mathrm{B3LYP}} &= W_{\\mathrm{Slater}} + W_{\\mathrm{B88}} + W_{\\mathrm{VWN}} + W_{\\mathrm{LYP}} + W_{\\mathrm{HF}}.\n\\end{aligned}\n$$\n\n现在对每个用例进行数值计算，单位为 Hartree：\n\n- 用例 A：$\\left(-8.000,\\; -1.200,\\; -0.300,\\; -0.500,\\; -7.500\\right)$\n$$\n\\begin{aligned}\nW_{\\mathrm{Slater}} &= 0.80 \\times (-8.000) = -6.400,\\\\\nW_{\\mathrm{B88}} &= 0.72 \\times (-1.200) = -0.864,\\\\\nW_{\\mathrm{VWN}} &= 0.19 \\times (-0.300) = -0.057,\\\\\nW_{\\mathrm{LYP}} &= 0.81 \\times (-0.500) = -0.405,\\\\\nW_{\\mathrm{HF}} &= 0.20 \\times (-7.500) = -1.500,\\\\\nE_{xc}^{\\mathrm{B3LYP}} &= -6.400 + (-0.864) + (-0.057) + (-0.405) + (-1.500) = -9.226.\n\\end{aligned}\n$$\n\n- 用例 B：$\\left(0.000,\\; 0.000,\\; 0.000,\\; 0.000,\\; 0.000\\right)$\n$$\n\\begin{aligned}\nW_{\\mathrm{Slater}} &= 0.80 \\times 0.000 = 0.000,\\\\\nW_{\\mathrm{B88}} &= 0.72 \\times 0.000 = 0.000,\\\\\nW_{\\mathrm{VWN}} &= 0.19 \\times 0.000 = 0.000,\\\\\nW_{\\mathrm{LYP}} &= 0.81 \\times 0.000 = 0.000,\\\\\nW_{\\mathrm{HF}} &= 0.20 \\times 0.000 = 0.000,\\\\\nE_{xc}^{\\mathrm{B3LYP}} &= 0.000.\n\\end{aligned}\n$$\n\n- 用例 C：$\\left(-10.000,\\; +0.100,\\; -0.400,\\; -0.450,\\; -9.000\\right)$\n$$\n\\begin{aligned}\nW_{\\mathrm{Slater}} &= 0.80 \\times (-10.000) = -8.000,\\\\\nW_{\\mathrm{B88}} &= 0.72 \\times (+0.100) = +0.072,\\\\\nW_{\\mathrm{VWN}} &= 0.19 \\times (-0.400) = -0.076,\\\\\nW_{\\mathrm{LYP}} &= 0.81 \\times (-0.450) = -0.3645,\\\\\nW_{\\mathrm{HF}} &= 0.20 \\times (-9.000) = -1.800,\\\\\nE_{xc}^{\\mathrm{B3LYP}} &= -8.000 + 0.072 - 0.076 - 0.3645 - 1.800 = -10.1685.\n\\end{aligned}\n$$\n\n- 用例 D：$\\left(-20.000,\\; -5.000,\\; -1.000,\\; -1.200,\\; -18.000\\right)$\n$$\n\\begin{aligned}\nW_{\\mathrm{Slater}} &= 0.80 \\times (-20.000) = -16.000,\\\\\nW_{\\mathrm{B88}} &= 0.72 \\times (-5.000) = -3.600,\\\\\nW_{\\mathrm{VWN}} &= 0.19 \\times (-1.000) = -0.190,\\\\\nW_{\\mathrm{LYP}} &= 0.81 \\times (-1.200) = -0.972,\\\\\nW_{\\mathrm{HF}} &= 0.20 \\times (-18.000) = -3.600,\\\\\nE_{xc}^{\\mathrm{B3LYP}} &= -16.000 - 3.600 - 0.190 - 0.972 - 3.600 = -24.362.\n\\end{aligned}\n$$\n\n因此，每个用例的分解输出（每个输出都是一个包含六个浮点数的列表，单位为 Hartree）如下：\n- 用例 A：$\\left[-6.400,\\; -0.864,\\; -0.057,\\; -0.405,\\; -1.500,\\; -9.226\\right]$\n- 用例 B：$\\left[0.000,\\; 0.000,\\; 0.000,\\; 0.000,\\; 0.000,\\; 0.000\\right]$\n- 用例 C：$\\left[-8.000,\\; 0.072,\\; -0.076,\\; -0.3645,\\; -1.800,\\; -10.1685\\right]$\n- 用例 D：$\\left[-16.000,\\; -3.600,\\; -0.190,\\; -0.972,\\; -3.600,\\; -24.362\\right]$\n\n程序应根据给定的输入计算这些值，并以单行形式打印输出，其格式为用方括号括起来的逗号分隔列表，其中每个用例由其六元素列表表示，所有数值的单位均为 Hartree。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef b3lyp_decomposition(E_slater, E_b88, E_vwn, E_lyp, E_hf, a0=0.20, aX=0.72, aC=0.81):\n    \"\"\"\n    Compute the B3LYP weighted component contributions and total.\n    Returns a list: [w_slater, w_b88, w_vwn, w_lyp, w_hf, total]\n    All energies are in Hartree.\n    \"\"\"\n    c_slater = 1.0 - a0\n    c_b88 = aX\n    c_vwn = 1.0 - aC\n    c_lyp = aC\n    c_hf = a0\n\n    w_slater = c_slater * E_slater\n    w_b88 = c_b88 * E_b88\n    w_vwn = c_vwn * E_vwn\n    w_lyp = c_lyp * E_lyp\n    w_hf = c_hf * E_hf\n    total = w_slater + w_b88 + w_vwn + w_lyp + w_hf\n\n    return [w_slater, w_b88, w_vwn, w_lyp, w_hf, total]\n\ndef format_list_of_floats(lst):\n    # Format floats consistently, avoiding scientific notation for given magnitudes\n    return \"[\" + \",\".join(f\"{x:.6f}\".rstrip('0').rstrip('.') if '.' in f\"{x:.6f}\" else f\"{x:.6f}\" for x in lst) + \"]\"\n\ndef solve():\n    # Define the test cases from the problem statement (Hartree units):\n    # Each tuple: (E_x^Slater, E_x^B88, E_c^VWN, E_c^LYP, E_x^HF)\n    test_cases = [\n        (-8.000, -1.200, -0.300, -0.500, -7.500),  # Case A\n        (0.000,  0.000,  0.000,  0.000,  0.000),   # Case B\n        (-10.000, 0.100, -0.400, -0.450, -9.000),  # Case C\n        (-20.000, -5.000, -1.000, -1.200, -18.000) # Case D\n    ]\n\n    results = []\n    for case in test_cases:\n        E_slater, E_b88, E_vwn, E_lyp, E_hf = case\n        result = b3lyp_decomposition(E_slater, E_b88, E_vwn, E_lyp, E_hf)\n        results.append(result)\n\n    # Build exact required format: a single line with a list of per-case lists, no extra text.\n    formatted_cases = [format_list_of_floats(r) for r in results]\n    print(f\"[{','.join(formatted_cases)}]\")\n\nsolve()\n```", "id": "2464274"}, {"introduction": "一个泛函的真正价值在于它在解决实际化学问题时的表现。本练习将挑战你使用 B3LYP 来模拟水二聚体中的氢键——一种至关重要的非共价相互作用。你将构建势能曲线，确定平衡几何构型和结合能，并观察不同参数组合的泛函“配方”与高精度基准数据的比较情况，这是计算研究中的一项常规实践 [@problem_id:2463392]。", "problem": "给定沿氧-氧分离坐标的水二聚体势能面的一维模型。该二聚体被约束为线性氢键几何构型，其中供体氢原子位于氧-氧轴上。单体几何构型是固定的，供体氧-氢键长等于 $d_{\\mathrm{OH}} = 0.958 \\ \\mathrm{\\AA}$。提供的所有能量均为相互作用能分量，定义为二聚体能量减去孤立单体能量之和，以 Hartree 为单位表示。\n\n对于给定的分子间距 $r$，Becke, three-parameter, Lee–Yang–Parr (B3LYP) 交换相关能通过以下分量混合的方式建模：\n$$\nE_{\\mathrm{int}}(r) \\;=\\; E_{\\mathrm{other}}(r) \\;+\\; a_0 \\, E_{x}^{\\mathrm{HF}}(r) \\;+\\; \\left(1 - a_0\\right) E_{x}^{\\mathrm{LSDA}}(r) \\;+\\; a_X \\, \\Delta E_{x}^{\\mathrm{B88}}(r) \\;+\\; a_C \\, E_{c}^{\\mathrm{LYP}}(r) \\;+\\; \\left(1 - a_C\\right) E_{c}^{\\mathrm{VWN}}(r),\n$$\n其中，$E_{\\mathrm{other}}(r)$ 汇总了对相互作用能的所有非交换相关贡献，其余符号表示在间距 $r$ 处的交换或相关相互作用能分量。变量 $a_0$、$a_X$ 和 $a_C$ 是混合参数。\n\n使用以下以埃（Angstrom）为单位的氧-氧分离距离 $r$ 的离散网格：\n$$\n[\\, 2.6,\\ 2.7,\\ 2.8,\\ 2.9,\\ 3.0,\\ 3.1,\\ 3.2,\\ 3.3 \\,] \\ \\mathrm{\\AA}.\n$$\n\n对于网格中的每个 $r$，相互作用能分量数组（以 Hartree 为单位）如下：\n- $E_{\\mathrm{other}}(r)$:\n$$\n[\\, +0.0060,\\ +0.0025,\\ -0.0010,\\ -0.0035,\\ -0.0045,\\ -0.0043,\\ -0.0038,\\ -0.0030 \\,]\n$$\n- $E_{x}^{\\mathrm{HF}}(r)$:\n$$\n[\\, +0.0100,\\ +0.0075,\\ +0.0055,\\ +0.0042,\\ +0.0032,\\ +0.0025,\\ +0.0020,\\ +0.0016 \\,]\n$$\n- $E_{x}^{\\mathrm{LSDA}}(r)$:\n$$\n[\\, +0.0120,\\ +0.0090,\\ +0.0065,\\ +0.0048,\\ +0.0036,\\ +0.0028,\\ +0.0022,\\ +0.0018 \\,]\n$$\n- $\\Delta E_{x}^{\\mathrm{B88}}(r)$:\n$$\n[\\, -0.0068,\\ -0.0055,\\ -0.0043,\\ -0.0034,\\ -0.0030,\\ -0.0025,\\ -0.0021,\\ -0.0018 \\,]\n$$\n- $E_{c}^{\\mathrm{LYP}}(r)$:\n$$\n[\\, -0.0058,\\ -0.0052,\\ -0.0046,\\ -0.0042,\\ -0.0038,\\ -0.0033,\\ -0.0030,\\ -0.0027 \\,]\n$$\n- $E_{c}^{\\mathrm{VWN}}(r)$:\n$$\n[\\, -0.0032,\\ -0.0029,\\ -0.0026,\\ -0.0023,\\ -0.0020,\\ -0.0018,\\ -0.0016,\\ -0.0014 \\,]\n$$\n\n使用 Hartree 到千卡/摩尔的转换关系：$1 \\ \\mathrm{Hartree} = 627.509474 \\ \\mathrm{kcal \\cdot mol^{-1}}$。来自耦合簇单、双和微扰三元激发 (Coupled Cluster with Single, Double, and perturbative Triple excitations, CCSD(T)) 的水二聚体氢键的高水平基准是：\n- 平衡氧-氧距离 $r_{\\mathrm{CCSD(T)}} = 2.910 \\ \\mathrm{\\AA}$，\n- 结合能 $E_{\\mathrm{CCSD(T)}} = -5.020 \\ \\mathrm{kcal \\cdot mol^{-1}}$。\n\n对于任何给定的混合参数集 $(a_0, a_X, a_C)$，通过上述表达式定义网格上的 B3LYP 模型相互作用能。平衡分离距离 $r_{\\mathrm{eq}}$ 是使 $E_{\\mathrm{int}}(r)$ 最小的网格值 $r$。氢键长度（氢-受体氧分离距离）为 $d_{\\mathrm{HO}} = r_{\\mathrm{eq}} - d_{\\mathrm{OH}}$，以埃为单位表示。平衡时的结合能是 $E_{\\mathrm{bind}} = E_{\\mathrm{int}}(r_{\\mathrm{eq}})$，并转换为千卡/摩尔。与 CCSD(T) 基准的偏差为 $\\Delta E = E_{\\mathrm{bind}} - E_{\\mathrm{CCSD(T)}}$（单位为 $\\mathrm{kcal \\cdot mol^{-1}}$）和 $\\Delta r = r_{\\mathrm{eq}} - r_{\\mathrm{CCSD(T)}}$（单位为埃）。\n\n待评估的混合参数测试套件：\n- 情况 1 (标准的 Becke, three-parameter, Lee–Yang–Parr 混合): $(a_0, a_X, a_C) = (0.20, \\ 0.72, \\ 0.81)$。\n- 情况 2 (无精确交换，无交换梯度校正，完全 Lee–Yang–Parr 相关): $(a_0, a_X, a_C) = (0.00, \\ 0.00, \\ 1.00)$。\n- 情况 3 (完全精确交换，无交换梯度校正，仅 Vosko–Wilk–Nusair 相关): $(a_0, a_X, a_C) = (1.00, \\ 0.00, \\ 0.00)$。\n\n您的任务\n- 对于测试套件中的每种情况，使用上述定义计算 $(r_{\\mathrm{eq}}, d_{\\mathrm{HO}}, E_{\\mathrm{bind}}, \\Delta E, \\Delta r)$。\n- 距离以 $\\mathrm{\\AA}$ 表示，能量以 $\\mathrm{kcal \\cdot mol^{-1}}$ 表示。\n- 将每个报告的数值结果四舍五入到三位小数。\n- 最终输出格式：您的程序应生成单行输出，其中包含结果，形式为以逗号分隔的各情况列表，每个列表的顺序为 $[r_{\\mathrm{eq}}, d_{\\mathrm{HO}}, E_{\\mathrm{bind}}, \\Delta E, \\Delta r]$。例如，一个语法上有效的输出形式为\n$$\n[[x_1,y_1,z_1,u_1,v_1],[x_2,y_2,z_2,u_2,v_2],[x_3,y_3,z_3,u_3,v_3]].\n$$\n不应打印任何额外文本。", "solution": "问题陈述已经过评估，并被确定为有效。它在科学上是合理的、问题是适定的，并为确定性计算提供了所有必要信息。任务是针对几组不同的混合参数，评估水二聚体相互作用能的 B3LYP 泛函简化模型。\n\n在分子间距为 $r$ 时的总相互作用能 $E_{\\mathrm{int}}(r)$ 由能量分量的线性组合给出：\n$$\nE_{\\mathrm{int}}(r) \\;=\\; E_{\\mathrm{other}}(r) \\;+\\; a_0 \\, E_{x}^{\\mathrm{HF}}(r) \\;+\\; \\left(1 - a_0\\right) E_{x}^{\\mathrm{LSDA}}(r) \\;+\\; a_X \\, \\Delta E_{x}^{\\mathrm{B88}}(r) \\;+\\; a_C \\, E_{c}^{\\mathrm{LYP}}(r) \\;+\\; \\left(1 - a_C\\right) E_{c}^{\\mathrm{VWN}}(r),\n$$\n其中 $(a_0, a_X, a_C)$ 是混合参数。\n\n对于每个指定的混合参数集，计算过程如下：\n\n1.  **数据初始化**：定义所有提供的数据。这包括氧-氧分离距离的网格 $r$、相应的相互作用能分量、物理常数和基准值。\n    -   分离距离网格 $r \\in [\\, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3 \\,] \\ \\mathrm{\\AA}$。\n    -   能量分量向量：$E_{\\mathrm{other}}(r)$、$E_{x}^{\\mathrm{HF}}(r)$、$E_{x}^{\\mathrm{LSDA}}(r)$、$\\Delta E_{x}^{\\mathrm{B88}}(r)$、$E_{c}^{\\mathrm{LYP}}(r)$ 和 $E_{c}^{\\mathrm{VWN}}(r)$，单位为 Hartree。\n    -   供体 O-H 键长：$d_{\\mathrm{OH}} = 0.958 \\ \\mathrm{\\AA}$。\n    -   转换因子：$1 \\ \\mathrm{Hartree} = 627.509474 \\ \\mathrm{kcal \\cdot mol^{-1}}$。\n    -   基准值：$r_{\\mathrm{CCSD(T)}} = 2.910 \\ \\mathrm{\\AA}$ 和 $E_{\\mathrm{CCSD(T)}} = -5.020 \\ \\mathrm{kcal \\cdot mol^{-1}}$。\n\n2.  **势能面构建**：对于给定的参数集 $(a_0, a_X, a_C)$，使用上述公式计算离散网格上的总相互作用能向量 $E_{\\mathrm{int}}(r)$。这个基本步骤是在分量能量数组上执行向量加法和标量乘法运算。\n\n3.  **平衡几何构型与能量**：找到计算出的 $E_{\\mathrm{int}}(r)$ 向量中的最小值。\n    -   平衡分离距离 $r_{\\mathrm{eq}}$ 是与该最小能量的索引相对应的网格中的 $r$ 值。\n    -   最小能量本身，$E_{\\mathrm{int}}(r_{\\mathrm{eq}})$，是在平衡分离距离下的相互作用能，单位为 Hartree。\n\n4.  **导出属性计算**：然后基于平衡值计算以下属性：\n    -   氢键长度（氢-受体氧分离距离）：$d_{\\mathrm{HO}} = r_{\\mathrm{eq}} - d_{\\mathrm{OH}}$。\n    -   结合能：$E_{\\mathrm{bind}} = E_{\\mathrm{int}}(r_{\\mathrm{eq}}) \\times 627.509474 \\ \\mathrm{kcal \\cdot mol^{-1}}$。\n    -   与基准的分离距离偏差：$\\Delta r = r_{\\mathrm{eq}} - r_{\\mathrm{CCSD(T)}}$。\n    -   与基准的能量偏差：$\\Delta E = E_{\\mathrm{bind}} - E_{\\mathrm{CCSD(T)}}$。\n\n5.  **报告**：所有计算出的数值结果（$r_{\\mathrm{eq}}$、$d_{\\mathrm{HO}}$、$E_{\\mathrm{bind}}$、$\\Delta E$、$\\Delta r$）均按问题规范要求四舍五入到三位小数。对提供的三种测试情况中的每一种都重复此过程。\n\n该算法的实现见最终答案。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the water dimer problem by calculating properties for different B3LYP mixing parameters.\n    \"\"\"\n    # Define the discrete grid of oxygen-oxygen separations in Angstrom.\n    r_grid = np.array([2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3])\n\n    # Define the interaction energy component arrays in Hartree.\n    E_other = np.array([+0.0060, +0.0025, -0.0010, -0.0035, -0.0045, -0.0043, -0.0038, -0.0030])\n    E_x_HF = np.array([+0.0100, +0.0075, +0.0055, +0.0042, +0.0032, +0.0025, +0.0020, +0.0016])\n    E_x_LSDA = np.array([+0.0120, +0.0090, +0.0065, +0.0048, +0.0036, +0.0028, +0.0022, +0.0018])\n    Delta_E_x_B88 = np.array([-0.0068, -0.0055, -0.0043, -0.0034, -0.0030, -0.0025, -0.0021, -0.0018])\n    E_c_LYP = np.array([-0.0058, -0.0052, -0.0046, -0.0042, -0.0038, -0.0033, -0.0030, -0.0027])\n    E_c_VWN = np.array([-0.0032, -0.0029, -0.0026, -0.0023, -0.0020, -0.0018, -0.0016, -0.0014])\n\n    # Define constants and benchmark values.\n    d_OH = 0.958  # Angstrom\n    HARTREE_TO_KCAL_MOL = 627.509474\n    r_ccsd_t = 2.910  # Angstrom\n    E_ccsd_t = -5.020  # kcal/mol\n\n    # Define the test suite of mixing parameters.\n    test_cases = [\n        # Case 1 (standard B3LYP)\n        (0.20, 0.72, 0.81),\n        # Case 2 (LSDA + LYP)\n        (0.00, 0.00, 1.00),\n        # Case 3 (HF + VWN)\n        (1.00, 0.00, 0.00),\n    ]\n\n    results_per_case = []\n    \n    for a0, aX, aC in test_cases:\n        # Calculate the total interaction energy on the grid using the B3LYP model.\n        E_int_hartree = (\n            E_other +\n            a0 * E_x_HF +\n            (1 - a0) * E_x_LSDA +\n            aX * Delta_E_x_B88 +\n            aC * E_c_LYP +\n            (1 - aC) * E_c_VWN\n        )\n\n        # Find the index of the minimum energy.\n        min_idx = np.argmin(E_int_hartree)\n\n        # Get the minimum energy value and the corresponding equilibrium separation.\n        min_E_int = E_int_hartree[min_idx]\n        r_eq = r_grid[min_idx]\n\n        # Calculate the required properties.\n        d_HO = r_eq - d_OH\n        E_bind = min_E_int * HARTREE_TO_KCAL_MOL\n        Delta_E = E_bind - E_ccsd_t\n        Delta_r = r_eq - r_ccsd_t\n\n        # Store the results for this case.\n        results_per_case.append([r_eq, d_HO, E_bind, Delta_E, Delta_r])\n\n    # Format the results for the final output string.\n    # Each number must be rounded to three decimal places.\n    formatted_results = []\n    for case_results in results_per_case:\n        # Using f-string formatting to ensure three decimal places.\n        formatted_list = [f\"{num:.3f}\" for num in case_results]\n        formatted_results.append(f\"[{','.join(formatted_list)}]\")\n    \n    # Final print statement in the exact required format.\n    final_output = f\"[{','.join(formatted_results)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2463392"}, {"introduction": "没有任何模型是完美的，了解一个工具的局限性与了解它的优点同样重要。本练习使用一个简化的 $H_2^+$ 分子离子模型来揭示包括 B3LYP 在内的许多密度泛函的一个根本性缺陷：自相互作用误差。通过计算解离曲线，你将亲眼观察到这种误差如何导致对化学键断裂的不符合物理现实的描述，从而深刻理解现代 DFT 面临的挑战 [@problem_id:2463434]。", "problem": "您将使用一个最小、双位点、紧束缚框架来模拟带有一个电子的分子离子 $H_2^+$ 的解离曲线，并引入一个受杂化泛函启发的离域项，以模拟 Becke, 3-参数, Lee-Yang-Parr (B3LYP) 交换相关泛函的行为。完全使用原子单位进行计算，其中距离单位为玻尔（bohr），能量单位为哈特里（Hartree）。该分子由两个相距为 $R$ 的相同位点 $A$ 和 $B$ 组成，单个归一化的分子轨道写作 $\\lvert \\psi \\rangle = \\sqrt{x}\\,\\lvert A \\rangle + \\sqrt{1-x}\\,\\lvert B \\rangle$，其中 $x \\in [0,1]$。总电子能量定义为\n$$\nE(x;R,\\lambda) \\;=\\; \\underbrace{-0.5}_{\\text{孤立 H 原子能量}} \\;+\\; \\underbrace{2\\,t(R)\\,\\sqrt{x(1-x)}}_{\\text{单电子能带项}} \\;+\\; \\underbrace{\\frac{1}{R}}_{\\text{核排斥}} \\;+\\; \\underbrace{2\\,\\lambda\\,x(1-x)}_{\\text{类 B3LYP 离域项}}。\n$$\n跃迁项与距离相关，\n$$\nt(R) \\;=\\; -t_0\\,e^{-\\beta R},\n$$\n其中 $t_0 = 0.3$，$β = 1.0$。参数 $\\lambda$ 用于量化能量相对于分数占据的曲率，在这里用作一个单参数代理，表示近似密度泛函中由自相互作用引起的离域误差；$\\lambda=0$ 时恢复到分段线性、精确的单电子极限，而 $\\lambda < 0$ 时则产生向下凹的偏差，这是近似泛函中离域误差的典型特征。本问题的类 B3LYP 设定由 $\\lambda_{\\mathrm{B3}} = -0.05$ 指定。\n\n对于每个固定的 $R$ 和 $\\lambda$，该模型的物理能量是在 $x \\in [0,1]$ 上的最小值：\n$$\nE_{\\min}(R,\\lambda) \\;=\\; \\min_{x \\in [0,1]} E(x;R,\\lambda).\n$$\n定义测试集为以下键长（单位为玻尔）：\n- $R \\in \\{0.5,\\; 1.0,\\; 2.0,\\; 4.0,\\; 8.0,\\; 20.0\\}$，\n并对每个键长计算 $E_{\\min}(R,\\lambda_{\\mathrm{B3}})$。所有能量必须以哈特里为单位，表示为实值浮点数。\n\n您的程序必须对测试集中的每个 $R$ 计算最小化后的能量 $E_{\\min}(R,\\lambda_{\\mathrm{B3}})$，并生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的列表，包含六个结果，其顺序与测试集相同（例如，$\\big[$在 $R{=}0.5$ 时的结果, 在 $R{=}1.0$ 时的结果, $\\ldots\\big]$）。不允许有其他输出。", "solution": "对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n\n- **系统：** 分子离子 $H_2^+$ 的一个双位点模型。\n- **基组：** 两个位点 $\\lvert A \\rangle$ 和 $\\lvert B \\rangle$，相距为 $R$。\n- **分子轨道：** 单个归一化分子轨道 $\\lvert \\psi \\rangle = \\sqrt{x}\\,\\lvert A \\rangle + \\sqrt{1-x}\\,\\lvert B \\rangle$，参数 $x \\in [0,1]$。\n- **总能量表达式：**\n$$ E(x;R,\\lambda) = -0.5 + 2\\,t(R)\\,\\sqrt{x(1-x)} + \\frac{1}{R} + 2\\,\\lambda\\,x(1-x) $$\n- **跃迁积分：** 依赖于距离的跃迁项为 $t(R) = -t_0\\,e^{-\\beta R}$。\n- **常数：**\n  - $t_0 = 0.3$ (原子单位)\n  - $\\beta = 1.0$ (原子单位)\n  - $\\lambda = \\lambda_{\\mathrm{B3}} = -0.05$ (原子单位)\n- **目标：** 对于一组键长 $R \\in \\{0.5, 1.0, 2.0, 4.0, 8.0, 20.0\\}$ (单位为玻尔)，找出最小能量 $E_{\\min}(R,\\lambda) = \\min_{x \\in [0,1]} E(x;R,\\lambda)$。\n- **单位：** 所有计算均采用原子单位（能量单位为哈特里，距离单位为玻尔）。\n\n**步骤 2：问题陈述的验证**\n\n该问题具有计算上的良定性和科学上的合理性。\n- **科学依据：** 该问题描述了一个简化的紧束缚模型，这是量子化学和凝聚态物理中的一种标准工具。能量的各个分量——孤立原子能量、跃迁项、核排斥和离域项——都是标准概念。当 $\\lambda < 0$ 时，离域项 $2\\lambda x(1-x)$ 正确地模拟了在近似密度泛函中，分数电荷所导致的偏离分段线性的已知凹形偏差，这一现象被称为离域误差或自相互作用误差。B3LYP 泛函是一种广泛使用的杂化泛函，对其行为进行建模是一个重要的科学课题。该问题是在一个有效的物理框架内的理论练习。\n- **良定性：** 目标是在紧区间 $x \\in [0,1]$ 上找到连续可微函数 $E(x;R,\\lambda)$ 的最小值。根据极值定理，最小值必然存在。参数和函数都有明确定义，因此可以确定唯一解。\n- **客观性：** 问题以精确的数学语言陈述，没有歧义或主观论断。\n\n**步骤 3：结论与行动**\n\n该问题是**有效的**。它自成体系、科学合理且良定。可以推导出严谨的解。\n\n**求解推导**\n\n目标是确定 $E_{\\min}(R,\\lambda_{\\mathrm{B3}}) = \\min_{x \\in [0,1]} E(x;R,\\lambda_{\\mathrm{B3}})$。能量表达式为：\n$$ E(x;R,\\lambda) = \\underbrace{-0.5 + \\frac{1}{R}}_{\\text{与 } x \\text{ 无关的常数项}} \\;+\\; \\underbrace{2\\,t(R)\\,\\sqrt{x(1-x)} + 2\\,\\lambda\\,x(1-x)}_{f(x)} $$\n为了找到最小值，我们必须分析函数 $f(x)$ 在 $x \\in [0,1]$ 上的行为。$E$ 的最小值将在使 $f(x)$ 最小的相同 $x$ 值处取得。最小值必然出现在区间的边界（$x=0$ 或 $x=1$）或区间 $(0,1)$ 内的临界点。\n\n首先，我们计算函数在边界处的值：\n$$ f(0) = 2\\,t(R)\\,\\sqrt{0(1)} + 2\\,\\lambda\\,0(1) = 0 $$\n$$ f(1) = 2\\,t(R)\\,\\sqrt{1(0)} + 2\\,\\lambda\\,1(0) = 0 $$\n在边界处，能量中依赖于 $x$ 的部分的值为零。\n\n接下来，我们通过对 $E(x;R,\\lambda)$ 关于 $x$ 求导并令其为零来寻找临界点。\n$$ \\frac{\\partial E}{\\partial x} = \\frac{d}{dx} \\left( 2\\,t(R)\\,\\sqrt{x-x^2} + 2\\,\\lambda\\,(x-x^2) \\right) $$\n$$ \\frac{\\partial E}{\\partial x} = 2\\,t(R)\\,\\left(\\frac{1-2x}{2\\sqrt{x-x^2}}\\right) + 2\\,\\lambda\\,(1-2x) $$\n$$ \\frac{\\partial E}{\\partial x} = (1-2x) \\left( \\frac{t(R)}{\\sqrt{x(1-x)}} + 2\\lambda \\right) $$\n令导数为零可以得到临界点的两种可能性：\n\n1.  $1-2x = 0 \\implies x = 1/2$。这对应于对称、完全离域的状态。\n2.  $\\frac{t(R)}{\\sqrt{x(1-x)}} + 2\\lambda = 0 \\implies \\sqrt{x(1-x)} = -\\frac{t(R)}{2\\lambda}$。\n\n我们使用给定参数分析第二种情况：$t(R) = -t_0\\,e^{-\\beta R} = -0.3\\,e^{-R}$ 且 $\\lambda = \\lambda_{\\mathrm{B3}} = -0.05$。\n$$ -\\frac{t(R)}{2\\lambda} = -\\frac{-0.3\\,e^{-R}}{2(-0.05)} = \\frac{0.3\\,e^{-R}}{-0.1} = -3\\,e^{-R} $$\n该条件变为 $\\sqrt{x(1-x)} = -3\\,e^{-R}$。对于任意实数 $R$，$e^{-R}$ 均为正。因此，等式右侧恒为负。而对于 $x \\in [0,1]$，等式左侧 $\\sqrt{x(1-x)}$ 必须为非负数。不存在实数解 $x$ 能满足此等式。因此，区间 $(0,1)$ 内唯一的临界点是 $x=1/2$。\n\n$E(x;R,\\lambda)$ 在闭区间 $x \\in [0,1]$ 上的全局最小值必然在 $x=0$、$x=1$ 或 $x=1/2$ 处取得。我们比较这几点的能量值。\n- 边界处的能量 ($x=0$ 或 $x=1$):\n  $$ E(0;R,\\lambda) = E(1;R,\\lambda) = -0.5 + \\frac{1}{R} $$\n- 临界点处的能量 ($x=1/2$):\n  $$ E(1/2;R,\\lambda) = -0.5 + 2\\,t(R)\\,\\sqrt{\\frac{1}{2}\\left(1-\\frac{1}{2}\\right)} + \\frac{1}{R} + 2\\,\\lambda\\,\\frac{1}{2}\\left(1-\\frac{1}{2}\\right) $$\n  $$ E(1/2;R,\\lambda) = -0.5 + 2\\,t(R)\\,\\sqrt{\\frac{1}{4}} + \\frac{1}{R} + 2\\,\\lambda\\,\\frac{1}{4} $$\n  $$ E(1/2;R,\\lambda) = -0.5 + t(R) + \\frac{1}{R} + \\frac{\\lambda}{2} $$\n\n为了确定哪个是最小值，我们通过考察它们差值的符号来比较 $E(0;R,\\lambda)$ 和 $E(1/2;R,\\lambda)$：\n$$ E(1/2;R,\\lambda) - E(0;R,\\lambda) = t(R) + \\frac{\\lambda}{2} $$\n代入参数值：\n$$ t(R) + \\frac{\\lambda}{2} = -0.3\\,e^{-R} + \\frac{-0.05}{2} = -0.3\\,e^{-R} - 0.025 $$\n由于对于实数 $R$，$e^{-R}$ 总是正的，所以项 $-0.3\\,e^{-R}$ 总是负的。因此，整个表达式 $-0.3\\,e^{-R} - 0.025$ 对于所有 $R$ 都恒为负。\n\n这证明了 $E(1/2;R,\\lambda) < E(0;R,\\lambda)$，因此，最小能量总是在 $x=1/2$ 处取得。对于任意给定的 $R$，该系统的物理最小能量为：\n$$ E_{\\min}(R,\\lambda) = E(1/2;R,\\lambda) = -0.5 + \\frac{1}{R} + t(R) + \\frac{\\lambda}{2} $$\n代入参数值得到最终的计算公式：\n$$ E_{\\min}(R, \\lambda_{\\mathrm{B3}}) = -0.525 + \\frac{1}{R} - 0.3\\,e^{-R} $$\n这个表达式将针对测试集中的每个 $R$ 值进行计算。即使在 $R$ 很大时，能量最小值也总是在 $x=1/2$ 处出现，导致不正确的解离能极限 $-0.525$ Hartree（而正确值应为 $-0.5$ Hartree），这是由负 $\\lambda$ 参数所模拟的离域误差的直接后果。这是某些近似密度泛函的一个已知的人为现象，也正是本问题旨在演示的内容。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the minimized energy of a model H2+ molecule for a series of bond distances.\n\n    The model energy is given by:\n    E(x; R, lambda) = -0.5 + 2*t(R)*sqrt(x(1-x)) + 1/R + 2*lambda*x(1-x)\n    where t(R) = -t0 * exp(-beta * R).\n\n    The problem asks to find E_min(R, lambda_B3) = min_{x in [0,1]} E(x; R, lambda_B3)\n    for a given set of parameters and R values.\n\n    Analysis shows the minimum energy is always found at x=1/2.\n    E_min = -0.5 + 1/R + t(R) + lambda/2\n          = -0.5 + 1/R - t0*exp(-beta*R) + lambda/2\n    \"\"\"\n    # Define constants from the problem statement in atomic units.\n    t0 = 0.3\n    beta = 1.0\n    lambda_b3 = -0.05\n\n    # Define the test cases for the bond distance R (in bohr).\n    test_cases_R = [0.5, 1.0, 2.0, 4.0, 8.0, 20.0]\n\n    results = []\n    \n    # Pre-calculate the constant part of the energy from lambda_b3.\n    # The term -0.5 is the isolated H energy.\n    constant_energy = -0.5 + lambda_b3 / 2.0\n    \n    for R in test_cases_R:\n        # Calculate the hopping term t(R).\n        t_R = -t0 * np.exp(-beta * R)\n        \n        # Calculate the nuclear repulsion term.\n        nuclear_repulsion = 1.0 / R\n        \n        # The minimized energy occurs at x=1/2.\n        # E_min = -0.5 (isolated H) + 1/R (repulsion) + t(R) (band) + lambda/2 (delocalization)\n        e_min = constant_energy + nuclear_repulsion + t_R\n        \n        results.append(e_min)\n\n    # Format the final output string as a comma-separated list in brackets.\n    # The map(str, ...) converts each float in the results list to its string representation.\n    output_str = f\"[{','.join(map(str, results))}]\"\n    \n    print(output_str)\n\nsolve()\n```", "id": "2463434"}]}