{"hands_on_practices": [{"introduction": "选择混合规则，即使是对于像原子尺寸 $\\sigma$ 这样看似简单的参数，也会产生实际的物理影响。本练习将指导您量化 $\\sigma$ 参数的算术平均和几何平均两种规则之间的差异。通过这个过程，您将把这个数学上的差异与混合物中分子堆积效率这一物理概念联系起来，这是理解非理想混合行为的基础一步。[@problem_id:2457921]", "problem": "在采用 Lennard-Jones (LJ) 势的经典分子模拟中，参数 $\\sigma$ 设定了对势函数穿过零点时的分离距离。对于物种 $i$ 和 $j$ 之间的非相似相互作用，交叉参数 $\\sigma_{ij}$ 通常使用混合规则来估算。考虑以下两种 $\\sigma_{ij}$ 的候选混合规则：\n- 算术 (Lorentz) 平均：$\\sigma_{ij}^{(A)} = \\dfrac{\\sigma_{ii} + \\sigma_{jj}}{2}$。\n- 几何平均：$\\sigma_{ij}^{(G)} = \\sqrt{\\sigma_{ii}\\sigma_{jj}}$。\n\n假设一个二元混合物，其中 $\\sigma_{ii} = 2\\sigma_{jj}$。计算由下式定义的 $\\sigma$ 的算术平均和几何平均之间的百分比差异：\n$$D \\equiv \\frac{\\sigma_{ij}^{(A)} - \\sigma_{ij}^{(G)}}{\\sigma_{ij}^{(A)}},$$\n并将 $D$ 表示为单个精确的代数表达式，不进行近似，也不使用百分号。然后，简要讨论 $D$ 的符号和大小对混合物中分子堆积的物理意义。", "solution": "在尝试求解之前，需要验证问题的前提。\n\n步骤 1：提取已知条件。\n已知条件如下：\n- Lennard-Jones 参数 $\\sigma$ 代表对势为零时的分离距离。\n- 非相似相互作用参数 $\\sigma_{ij}$ 的算术 (Lorentz) 平均混合规则是 $\\sigma_{ij}^{(A)} = \\dfrac{\\sigma_{ii} + \\sigma_{jj}}{2}$。\n- 非相似相互作用参数 $\\sigma_{ij}$ 的几何平均混合规则是 $\\sigma_{ij}^{(G)} = \\sqrt{\\sigma_{ii}\\sigma_{jj}}$。\n- 该二元混合物的尺寸关系为 $\\sigma_{ii} = 2\\sigma_{jj}$。\n- 百分比差异定义为 $D \\equiv \\frac{\\sigma_{ij}^{(A)} - \\sigma_{ij}^{(G)}}{\\sigma_{ij}^{(A)}}$。\n- 任务是计算 $D$ 的精确代数表达式，并讨论其符号和大小的物理意义。\n\n步骤 2：使用提取的已知条件进行验证。\n根据所需标准对问题进行评估：\n- **科学依据**：该问题基于 Lennard-Jones 势和 Lorentz-Berthelot 混合规则，这些是计算化学和统计力学中的标准和基本概念。前提具有科学合理性。\n- **适定性**：该问题提供了所有必要的定义和一个特定约束 ($\\sigma_{ii} = 2\\sigma_{jj}$)，从而可以明确地计算量 $D$。对物理意义解释的要求在分子模拟的背景下也得到了很好的定义。\n- **客观性**：该问题以精确、客观的语言陈述，不含主观或基于意见的主张。\n\n该问题没有表现出任何列出的可导致其无效的缺陷。它具有科学合理性、自洽性和适定性。\n\n步骤 3：结论与行动。\n该问题有效。将提供完整解答。\n\n第一个任务是计算 $D$ 的表达式。我们从已知的 $\\sigma_{ij}$ 的算术平均和几何平均的定义开始。\n设 $\\sigma_{jj}$ 为一个正常数，为了代数上的简便，我们可以将其表示为 $x$。由于 $\\sigma_{jj}$ 代表物理长度，所以 $x > 0$。\n根据给定条件 $\\sigma_{ii} = 2\\sigma_{jj}$，我们有 $\\sigma_{ii} = 2x$。\n\n现在，我们将这些表达式代入两种混合规则的公式中。\n算术平均为：\n$$ \\sigma_{ij}^{(A)} = \\frac{\\sigma_{ii} + \\sigma_{jj}}{2} = \\frac{2x + x}{2} = \\frac{3x}{2} $$\n几何平均为：\n$$ \\sigma_{ij}^{(G)} = \\sqrt{\\sigma_{ii}\\sigma_{jj}} = \\sqrt{(2x)(x)} = \\sqrt{2x^2} = x\\sqrt{2} $$\n\n接下来，我们将这些结果代入 $D$ 的定义中：\n$$ D = \\frac{\\sigma_{ij}^{(A)} - \\sigma_{ij}^{(G)}}{\\sigma_{ij}^{(A)}} = \\frac{\\frac{3x}{2} - x\\sqrt{2}}{\\frac{3x}{2}} $$\n由于 $x = \\sigma_{jj}$ 是一个非零直径，我们可以从分子和分母中消去 $x$：\n$$ D = \\frac{\\frac{3}{2} - \\sqrt{2}}{\\frac{3}{2}} $$\n化简该表达式得到：\n$$ D = 1 - \\frac{\\sqrt{2}}{\\frac{3}{2}} = 1 - \\frac{2\\sqrt{2}}{3} $$\n这就是所要求的 $D$ 的精确代数表达式。\n\n第二个任务是讨论 $D$ 的符号和大小的物理意义。\n首先，我们确定 $D$ 的符号。我们比较表达式中的两项，$1$ 和 $\\frac{2\\sqrt{2}}{3}$。为了比较它们，我们可以比较 $3$ 和 $2\\sqrt{2}$。由于这两个量都是正数，我们可以比较它们的平方：\n$$ 3^2 = 9 $$\n$$ (2\\sqrt{2})^2 = 4 \\times 2 = 8 $$\n因为 $9 > 8$，所以 $3 > 2\\sqrt{2}$，因此 $1 > \\frac{2\\sqrt{2}}{3}$。\n这证明了 $D = 1 - \\frac{2\\sqrt{2}}{3}$ 是一个正量。\n\n$D > 0$ 的事实意味着 $\\sigma_{ij}^{(A)} > \\sigma_{ij}^{(G)}$。这是算术平均-几何平均 (AM-GM) 不等式的直接结果，该不等式表明对于任何非负数 $a$ 和 $b$，$\\frac{a+b}{2} \\ge \\sqrt{ab}$，当且仅当 $a=b$ 时等号成立。在我们的例子中，$a = \\sigma_{ii}$ 且 $b = \\sigma_{jj}$，并且由于 $\\sigma_{ii} = 2\\sigma_{jj} \\ne \\sigma_{jj}$，严格不等式 $\\sigma_{ij}^{(A)} > \\sigma_{ij}^{(G)}$ 成立。\n\n物理意义：\n参数 $\\sigma_{ij}$ 代表一对相互作用的非相似粒子 $i$ 和 $j$ 的有效直径或最接近距离。\n- **D 的符号**：$D$ 的正号表示，与几何平均规则相比，算术 (Lorentz) 混合规则预测非相似粒子对相互作用的有效直径更大。算术规则的物理动机源于硬球碰撞模型，其中碰撞距离是直径的平均值。这个更大的有效直径意味着 $i$-$j$ 对的排除体积更大。在热力学方面，这通常对应于对 Raoult 定律的正偏差和正的混合超额体积 ($V^E > 0$)。这表明非相似粒子的堆积效率低于简单的理想化混合，这会在能量上不利于混合，并在极端情况下导致相分离。\n- **D 的大小**：$D$ 的大小，计算为 $1 - \\frac{2\\sqrt{2}}{3} \\approx 1 - \\frac{2 \\times 1.4142}{3} \\approx 1 - 0.9428 = 0.0572$，量化了两种规则之间的相对差异。对于尺寸比为 $2$ 的情况，算术平均预测的相互作用直径比几何平均预测的大约 $5.7\\%$。这个大小是两种规则所解释的粒子直径“非加和性”的一种度量。这种差异的大小随着粒子间尺寸不对称性的增加而增加。例如，如果 $\\sigma_{ii} = \\sigma_{jj}$，则 $D = 0$。随着比率 $\\frac{\\sigma_{ii}}{\\sigma_{jj}}$ 偏离 $1$，$D$ 的值增加，这表明对于具有高粒子尺寸差异的系统，混合规则的选择变得更加重要。\n\n总之，正的 $D$ 表示常用的算术规则意味着非相似粒子对具有更大的排除体积，这是导致流体混合物中非理想混合行为和正超额体积的关键因素。$D$ 的大小与组分粒子的尺寸不对称性成比例。", "answer": "$$\n\\boxed{1 - \\frac{2\\sqrt{2}}{3}}\n$$", "id": "2457921"}, {"introduction": "在分析了尺寸参数 $\\sigma$ 之后，我们现在转向能量参数 $\\epsilon$。$\\epsilon_{ij}$ 的标准几何平均规则通常会通过一个二元相互作用参数 $k_{ij}$ 进行修正。本练习首先要求您运用微积分从第一性原理推导 Lennard-Jones 势的最小值，这是一个基础性的结果。然后，您将通过编写代码，直观地观察改变 $k_{ij}$ 会如何调整相互作用能，从而对力场参数的精细调节有一个切实的感受。[@problem_id:2457967]", "problem": "考虑一种由 Lennard-Jones (LJ) 势模拟的成对分子间相互作用，该势在计算化学中被广泛用于近似范德华相互作用。不同位点 $i$ 和 $j$ 之间的 LJ $12-6$ 势定义为\n$$\nU_{ij}(r) = 4\\,\\epsilon_{ij}\\left[\\left(\\frac{\\sigma_{ij}}{r}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{r}\\right)^{6}\\right],\n$$\n其中 $r$ 是分离距离，$\\epsilon_{ij}$ 是势阱深度（能量标度），$\\sigma_{ij}$ 是距离标度。Lorentz-Berthelot 混合规则规定\n$$\n\\sigma_{ij} = \\frac{\\sigma_{ii} + \\sigma_{jj}}{2}, \\quad \\epsilon_{ij} = k_{ij}\\sqrt{\\epsilon_{ii}\\,\\epsilon_{jj}},\n$$\n其中 $k_{ij}$ 是一个二元相互作用参数，用于修正不同类型相互作用的几何平均值。你的任务是从第一性原理出发，确定 LJ 势能最小点的位置和深度如何依赖于 $k_{ij}$。\n\n仅从给定定义出发，并运用基于微积分的推理（例如，通过求解 $U_{ij}(r)$ 相对于 $r$ 的驻点并验证其为最小值），推导出计算势能最小点位置 $r_{\\min}$（单位为纳米）和深度 $U_{\\min}$（单位为千焦/摩尔）所需的表达式。然后，实现一个程序，在改变 $k_{ij}$ 的同时，对一个小型测试集评估这些量。\n\n你必须使用以下针对不同类型对的参数集和 $k_{ij}$ 值的测试套件。对于每种情况，计算当 $k_{ij}\\in\\{0.8,1.0,1.2\\}$ 时对应的 $r_{\\min}$ 和 $U_{\\min}$。\n\n- 情况 A（一般情况，不同类型）：$\\sigma_{ii} = 0.340\\ \\text{nm}$，$\\epsilon_{ii} = 0.996\\ \\text{kJ/mol}$，$\\sigma_{jj} = 0.400\\ \\text{nm}$，$\\epsilon_{jj} = 0.500\\ \\text{kJ/mol}$。\n- 情况 B（边界情况，相同类型）：$\\sigma_{ii} = 0.340\\ \\text{nm}$，$\\epsilon_{ii} = 0.996\\ \\text{kJ/mol}$，$\\sigma_{jj} = 0.340\\ \\text{nm}$，$\\epsilon_{jj} = 0.996\\ \\text{kJ/mol}$。\n- 情况 C（极端情况，差异较大）：$\\sigma_{ii} = 0.300\\ \\text{nm}$，$\\epsilon_{ii} = 0.200\\ \\text{kJ/mol}$，$\\sigma_{jj} = 0.500\\ \\text{nm}$，$\\epsilon_{jj} = 1.500\\ \\text{kJ/mol}$。\n\n要求：\n- 通过对 $U_{ij}(r)$ 形式的原理性推理，使用上述定义为每个指定的 $k_{ij}$ 获得 $r_{\\min}$ 和 $U_{\\min}$。未经基础微积分证明，不得假定任何结果。\n- 以 $\\text{nm}$ 为单位表示 $r_{\\min}$，以 $\\text{kJ/mol}$ 为单位表示 $U_{\\min}$。对于数值报告，将每个值四舍五入到 $6$ 位小数。\n- 你的程序必须评估所有三种情况和所有三个 $k_{ij}$ 值，总共产生 $18$ 个数字。\n- 最终输出格式：包含在方括号中的单行逗号分隔列表。数字必须按以下顺序排列：对于情况 A，列出 $[r_{\\min}(0.8), U_{\\min}(0.8), r_{\\min}(1.0), U_{\\min}(1.0), r_{\\min}(1.2), U_{\\min}(1.2)]$，然后情况 B 和情况 C 也采用相同的排序方式。例如，你的程序应输出形如\n$[x_1,y_1,x_2,y_2,x_3,y_3,x_4,y_4,\\dots,x_{18}]$\n的格式，其中每个 $x_\\ell$ 和 $y_\\ell$ 是一个四舍五入到 $6$ 位小数的浮点数。\n\n注意：\n- 你可以假定所陈述的 Lorentz-Berthelot 混合规则和所给定的标准 LJ $12-6$ 形式是成立的。\n- 本问题不涉及角度。\n- 输出必须是按规定格式的纯数字；不要打印单位或任何额外文本。", "solution": "本问题要求推导两个不同位点 $i$ 和 $j$ 之间 Lennard-Jones (LJ) 相互作用的平衡距离 $r_{\\min}$ 和势能最小值 $U_{\\min}$。这必须从给定的势函数形式出发，使用微积分从第一性原理完成。\n\nLennard-Jones $12-6$ 势表示为：\n$$\nU_{ij}(r) = 4\\,\\epsilon_{ij}\\left[\\left(\\frac{\\sigma_{ij}}{r}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{r}\\right)^{6}\\right]\n$$\n其中 $r$ 是核间距，$\\epsilon_{ij}$ 是势阱深度，$\\sigma_{ij}$ 是势能为零时的有限距离。为方便求导，我们将势重写为：\n$$\nU_{ij}(r) = 4\\,\\epsilon_{ij}\\left(\\sigma_{ij}^{12}r^{-12} - \\sigma_{ij}^{6}r^{-6}\\right)\n$$\n势能最小值点的位置 $r_{\\min}$ 对应一个驻点，在该点上力（即势梯度的负值）为零。在数学上，我们必须找到使势对 $r$ 的一阶导数为零的 $r$ 值。\n$$\n\\frac{dU_{ij}}{dr} = \\frac{d}{dr}\\left[4\\,\\epsilon_{ij}\\left(\\sigma_{ij}^{12}r^{-12} - \\sigma_{ij}^{6}r^{-6}\\right)\\right]\n$$\n应用幂函数的求导法则，我们得到：\n$$\n\\frac{dU_{ij}}{dr} = 4\\,\\epsilon_{ij}\\left(\\sigma_{ij}^{12}(-12)r^{-13} - \\sigma_{ij}^{6}(-6)r^{-7}\\right) = 4\\,\\epsilon_{ij}\\left(-12\\,\\sigma_{ij}^{12}r^{-13} + 6\\,\\sigma_{ij}^{6}r^{-7}\\right)\n$$\n我们将此导数设为零以寻找驻点。为了得到具有物理意义的解，我们假设 $\\epsilon_{ij} > 0$ 且 $r > 0$。\n$$\n4\\,\\epsilon_{ij}\\left(-12\\,\\sigma_{ij}^{12}r^{-13} + 6\\,\\sigma_{ij}^{6}r^{-7}\\right) = 0\n$$\n$$\n-12\\,\\sigma_{ij}^{12}r^{-13} + 6\\,\\sigma_{ij}^{6}r^{-7} = 0\n$$\n$$\n6\\,\\sigma_{ij}^{6}r^{-7} = 12\\,\\sigma_{ij}^{12}r^{-13}\n$$\n两边同除以 $6\\,\\sigma_{ij}^{6}$（假设 $\\sigma_{ij} > 0$）并乘以 $r^{13}$，得到：\n$$\nr^{6} = 2\\,\\sigma_{ij}^{6}\n$$\n对 $r$ 求解，得到驻点的位置：\n$$\nr_{\\min} = (2)^{1/6}\\,\\sigma_{ij}\n$$\n为确认这一点是最小值，我们必须在 $r = r_{\\min}$ 处计算二阶导数 $\\frac{d^2U_{ij}}{dr^2}$。二阶导数为正表示该点为最小值点。\n$$\n\\frac{d^2U_{ij}}{dr^2} = \\frac{d}{dr}\\left[4\\,\\epsilon_{ij}\\left(-12\\,\\sigma_{ij}^{12}r^{-13} + 6\\,\\sigma_{ij}^{6}r^{-7}\\right)\\right]\n$$\n$$\n\\frac{d^2U_{ij}}{dr^2} = 4\\,\\epsilon_{ij}\\left(-12\\,\\sigma_{ij}^{12}(-13)r^{-14} + 6\\,\\sigma_{ij}^{6}(-7)r^{-8}\\right)\n$$\n$$\n\\frac{d^2U_{ij}}{dr^2} = 4\\,\\epsilon_{ij}\\left(156\\,\\sigma_{ij}^{12}r^{-14} - 42\\,\\sigma_{ij}^{6}r^{-8}\\right)\n$$\n现在代入 $r = r_{\\min} = 2^{1/6}\\,\\sigma_{ij}$。由此，我们有 $r_{\\min}^{6} = 2\\,\\sigma_{ij}^{6}$。\n$$\n\\frac{d^2U_{ij}}{dr^2}\\bigg|_{r_{\\min}} = 4\\,\\epsilon_{ij}\\left(156\\,\\sigma_{ij}^{12}(2^{1/6}\\,\\sigma_{ij})^{-14} - 42\\,\\sigma_{ij}^{6}(2^{1/6}\\,\\sigma_{ij})^{-8}\\right)\n$$\n$$\n= 4\\,\\epsilon_{ij}\\left(156\\,\\sigma_{ij}^{12}2^{-14/6}\\sigma_{ij}^{-14} - 42\\,\\sigma_{ij}^{6}2^{-8/6}\\sigma_{ij}^{-8}\\right)\n$$\n$$\n= 4\\,\\epsilon_{ij}\\,\\sigma_{ij}^{-2}\\left(156 \\cdot 2^{-7/3} - 42 \\cdot 2^{-4/3}\\right)\n$$\n使用 $\\sigma_{ij}^{6} = r_{\\min}^{6}/2$，我们可以简化：\n$$\n\\frac{d^2U_{ij}}{dr^2}\\bigg|_{r_{\\min}} = 4\\,\\epsilon_{ij}\\left(156\\,\\frac{(r_{\\min}^{6}/2)^2}{r_{\\min}^{14}} - 42\\,\\frac{r_{\\min}^{6}/2}{r_{\\min}^{8}}\\right) = 4\\,\\epsilon_{ij}\\left(156\\,\\frac{r_{\\min}^{12}}{4r_{\\min}^{14}} - 42\\,\\frac{r_{\\min}^{6}}{2r_{\\min}^{8}}\\right)\n$$\n$$\n= 4\\,\\epsilon_{ij}\\left(\\frac{39}{r_{\\min}^2} - \\frac{21}{r_{\\min}^2}\\right) = 4\\,\\epsilon_{ij}\\left(\\frac{18}{r_{\\min}^2}\\right) = \\frac{72\\epsilon_{ij}}{r_{\\min}^2}\n$$\n因为 $\\epsilon_{ij} > 0$ 且 $r_{\\min}^2 > 0$，所以二阶导数为正。因此，$r_{\\min} = 2^{1/6}\\,\\sigma_{ij}$ 确实是势能最小值的位置。\n\n接下来，我们将 $r=r_{\\min}$ 代入原始势函数，以求得势阱深度 $U_{\\min}$：\n$$\nU_{\\min} = U_{ij}(r_{\\min}) = 4\\,\\epsilon_{ij}\\left[\\left(\\frac{\\sigma_{ij}}{r_{\\min}}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{r_{\\min}}\\right)^{6}\\right]\n$$\n使用关系式 $r_{\\min} = 2^{1/6}\\,\\sigma_{ij}$，我们得到 $\\frac{\\sigma_{ij}}{r_{\\min}} = \\frac{1}{2^{1/6}}$。\n$$\n\\left(\\frac{\\sigma_{ij}}{r_{\\min}}\\right)^{12} = \\left(\\frac{1}{2^{1/6}}\\right)^{12} = \\frac{1}{2^2} = \\frac{1}{4}\n$$\n$$\n\\left(\\frac{\\sigma_{ij}}{r_{\\min}}\\right)^{6} = \\left(\\frac{1}{2^{1/6}}\\right)^{6} = \\frac{1}{2}\n$$\n将这些表达式代入 $U_{\\min}$ 的方程中：\n$$\nU_{\\min} = 4\\,\\epsilon_{ij}\\left(\\frac{1}{4} - \\frac{1}{2}\\right) = 4\\,\\epsilon_{ij}\\left(-\\frac{1}{4}\\right) = -\\epsilon_{ij}\n$$\n总而言之，推导出的表达式为：\n$$\nr_{\\min} = 2^{1/6}\\,\\sigma_{ij} \\quad \\text{and} \\quad U_{\\min} = -\\epsilon_{ij}\n$$\n问题指定了 Lorentz-Berthelot 混合规则：\n$$\n\\sigma_{ij} = \\frac{\\sigma_{ii} + \\sigma_{jj}}{2}\n$$\n$$\n\\epsilon_{ij} = k_{ij}\\sqrt{\\epsilon_{ii}\\,\\epsilon_{jj}}\n$$\n将这些规则代入我们推导的表达式中，揭示了其对二元相互作用参数 $k_{ij}$ 的依赖性：\n$$\nr_{\\min} = 2^{1/6}\\,\\left(\\frac{\\sigma_{ii} + \\sigma_{jj}}{2}\\right)\n$$\n$$\nU_{\\min} = -k_{ij}\\sqrt{\\epsilon_{ii}\\,\\epsilon_{jj}}\n$$\n显然，$r_{\\min}$ 与 $k_{ij}$ 无关，仅由粒子尺寸的算术平均值决定。相比之下，$U_{\\min}$ 与 $k_{ij}$ 成正比，该参数用于缩放能量参数的几何平均值。\n\n以下程序实现了这些推导出的公式，用于计算指定测试用例和 $k_{ij}$ 值下的 $r_{\\min}$ 和 $U_{\\min}$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of calculating Lennard-Jones potential minima\n    for a given set of parameters and mixing rules.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (sigma_ii, epsilon_ii, sigma_jj, epsilon_jj)\n    # sigma is in nm, epsilon is in kJ/mol.\n    test_cases = [\n        # Case A (general, unlike)\n        (0.340, 0.996, 0.400, 0.500),\n        # Case B (boundary, like-like)\n        (0.340, 0.996, 0.340, 0.996),\n        # Case C (edge, disparate)\n        (0.300, 0.200, 0.500, 1.500),\n    ]\n\n    # Binary interaction parameter values to be tested.\n    k_ij_values = [0.8, 1.0, 1.2]\n    \n    # Pre-calculate the constant factor for r_min.\n    two_to_one_sixth = np.power(2.0, 1.0/6.0)\n\n    results = []\n    \n    # Main logic to calculate the result for each case and k_ij value.\n    for case in test_cases:\n        sigma_ii, epsilon_ii, sigma_jj, epsilon_jj = case\n        \n        # Apply Lorentz mixing rule for sigma_ij.\n        # This is independent of k_ij, so it's calculated once per case.\n        sigma_ij = (sigma_ii + sigma_jj) / 2.0\n        \n        # Calculate r_min using the derived formula r_min = 2^(1/6) * sigma_ij.\n        # This is also independent of k_ij.\n        r_min = two_to_one_sixth * sigma_ij\n        \n        # Loop through each k_ij value to calculate U_min.\n        for k_ij in k_ij_values:\n            # Apply Berthelot mixing rule for epsilon_ij, including the k_ij factor.\n            epsilon_ij = k_ij * np.sqrt(epsilon_ii * epsilon_jj)\n            \n            # Calculate U_min using the derived formula U_min = -epsilon_ij.\n            u_min = -epsilon_ij\n            \n            # Append the results for the current (case, k_ij) pair to the list.\n            results.append(r_min)\n            results.append(u_min)\n\n    # Format the results into a single string with 6 decimal places per value,\n    # as specified in the problem statement.\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2457967"}, {"introduction": "在前两个练习的基础上，这个最终实践模拟了一项真实世界的研究任务：选择最佳模型。您将实现并比较几种常见的组合规则（如 Lorentz-Berthelot 和 Fender-Halsey），通过计算它们对 Ar-Kr 混合物的预测值，并与一个目标数据集进行比较来衡量误差。这个练习将教会您如何定量地验证理论模型，并理解不同的规则可能更适用于不同的物理系统。[@problem_id:2457928]", "problem": "你的任务是构建一个完整的、可运行的程序，通过将不同 van der Waals 参数组合规则对氩–氪二元系统的预测结果与一个代表自洽“实验”目标值的给定数据集进行比较，来测试这些组合规则的优劣。该系统使用 Lennard-Jones $12-6$ 势进行建模。该程序必须计算在一个小型测试集上的归一化均方根误差，并确定哪种组合规则最符合目标数据。\n\n对相互作用由 Lennard-Jones 势建模\n$$\nu(r) \\;=\\; 4\\,\\varepsilon \\left[ \\left( \\dfrac{\\sigma}{r} \\right)^{12} \\;-\\; \\left( \\dfrac{\\sigma}{r} \\right)^{6} \\right],\n$$\n其中 $r$ 是标量分子间距，$\\sigma$ 是碰撞直径，$\\varepsilon$ 是势阱深度。对于二元混合物，将测试三种用于非同类对参数 $(\\sigma_{12}, \\varepsilon_{12})$ 的候选组合规则：\n\n- 规则 $1$ (Lorentz-Berthelot):\n$$\n\\sigma_{12} \\;=\\; \\dfrac{\\sigma_{11} + \\sigma_{22}}{2}, \n\\qquad\n\\varepsilon_{12} \\;=\\; \\sqrt{\\varepsilon_{11}\\,\\varepsilon_{22}}.\n$$\n\n- 规则 $2$ (Fender-Halsey):\n$$\n\\sigma_{12} \\;=\\; \\dfrac{\\sigma_{11} + \\sigma_{22}}{2}, \n\\qquad\n\\varepsilon_{12} \\;=\\; \\dfrac{2\\,\\varepsilon_{11}\\,\\varepsilon_{22}}{\\varepsilon_{11} + \\varepsilon_{22}}.\n$$\n\n- 规则 $3$ (几何-算术混合):\n$$\n\\sigma_{12} \\;=\\; \\sqrt{\\sigma_{11}\\,\\sigma_{22}}, \n\\qquad\n\\varepsilon_{12} \\;=\\; \\sqrt{\\varepsilon_{11}\\,\\varepsilon_{22}}.\n$$\n\n氩和氪的纯组分 Lennard-Jones 参数如下：\n- 氩: $\\sigma_{\\mathrm{Ar}} \\;=\\; 3.405\\ \\text{\\AA}$, $\\varepsilon_{\\mathrm{Ar}}/k_{\\mathrm{B}} \\;=\\; 119.8\\ \\text{K}$.\n- 氪: $\\sigma_{\\mathrm{Kr}} \\;=\\; 3.636\\ \\text{\\AA}$, $\\varepsilon_{\\mathrm{Kr}}/k_{\\mathrm{B}} \\;=\\; 164.0\\ \\text{K}$.\n\n此处 $k_{\\mathrm{B}}$ 是 Boltzmann 常数，势阱深度通过 $\\varepsilon/k_{\\mathrm{B}}$ 以开尔文（K）为单位指定。\n\n给定一个目标数据集，它代表了以下六个可观测量：\n1. 非同类碰撞直径 $\\sigma_{12}$，单位为 $\\text{\\AA}$。\n2. 非同类势阱深度 $\\varepsilon_{12}/k_{\\mathrm{B}}$，单位为 $\\text{K}$。\n3. 氩自身碰撞直径 $\\sigma_{11}$，单位为 $\\text{\\AA}$。\n4. 氩自身势阱深度 $\\varepsilon_{11}/k_{\\mathrm{B}}$，单位为 $\\text{K}$。\n5. 氪自身碰撞直径 $\\sigma_{22}$，单位为 $\\text{\\AA}$。\n6. 氪自身势阱深度 $\\varepsilon_{22}/k_{\\mathrm{B}}$，单位为 $\\text{K}$。\n\n这些目标值为\n- $\\sigma_{12}^{(\\text{target})} \\;=\\; 3.5205\\ \\text{\\AA}$,\n- $\\varepsilon_{12}^{(\\text{target})}/k_{\\mathrm{B}} \\;=\\; 138.17618\\ \\text{K}$,\n- $\\sigma_{11}^{(\\text{target})} \\;=\\; 3.405\\ \\text{\\AA}$,\n- $\\varepsilon_{11}^{(\\text{target})}/k_{\\mathrm{B}} \\;=\\; 119.8\\ \\text{K}$,\n- $\\sigma_{22}^{(\\text{target})} \\;=\\; 3.636\\ \\text{\\AA}$,\n- $\\varepsilon_{22}^{(\\text{target})}/k_{\\mathrm{B}} \\;=\\; 164.0\\ \\text{K}$.\n\n测试集和覆盖要求：\n- 非同类对条目 $1$ 和 $2$ 构成了依赖于组合规则的一般比较情况。\n- 同类对条目 $3$ 至 $6$ 构成了所有物理上允许的组合规则都必须精确再现的边界情况。\n\n你的程序必须：\n1. 对每个规则 $m \\in \\{1,2,3\\}$，使用 $\\sigma_{11} = \\sigma_{\\mathrm{Ar}}$、$\\varepsilon_{11} = \\varepsilon_{\\mathrm{Ar}}$、$\\sigma_{22} = \\sigma_{\\mathrm{Kr}}$、$\\varepsilon_{22} = \\varepsilon_{\\mathrm{Kr}}$ 以及从该规则得到的相应 $(\\sigma_{12}, \\varepsilon_{12})$，计算一个包含按上述顺序排列的六个条目的预测向量 $\\mathbf{y}^{(m)}$。\n2. 计算规则 $m$ 的归一化均方根误差，\n$$\n\\mathrm{nRMSE}^{(m)} \\;=\\; \\sqrt{ \\dfrac{1}{6} \\sum_{i=1}^{6} \\left( \\dfrac{y^{(m)}_i - y^{(\\text{target})}_i}{\\,y^{(\\text{target})}_i\\,} \\right)^{2} }.\n$$\n这种归一化处理使误差无量纲化，并避免了不同可观测量之间单位的混合。\n3. 确定使 $\\mathrm{nRMSE}^{(m)}$ 最小化的规则索引 $m^\\star$。\n\n最终输出格式：\n- 你的程序应产生单行输出，其中包含一个逗号分隔的结果列表，该列表用方括号括起，形式为 $[m^\\star,\\mathrm{nRMSE}^{(1)},\\mathrm{nRMSE}^{(2)},\\mathrm{nRMSE}^{(3)}]$。\n- 所有三个 $\\mathrm{nRMSE}^{(m)}$ 值都必须四舍五入到六位小数。\n- 程序没有用户输入。所有常数均已在上文中指定。", "solution": "所提供的问题陈述已经过严格评估，并被确定为有效。它在科学上基于统计力学和计算化学的原理，问题界定清晰，包含了所有必要的数据和定义，并且其表述是客观的。因此，我们将给出完整的解法。\n\n此问题要求对 Lennard-Jones ($LJ$) 势参数的三种组合规则进行定量比较，将其与一个氩-氪二元混合物的参考数据集进行对比。最佳规则是在一个定义好的可观测量测试集上，使归一化均方根误差 ($\\mathrm{nRMSE}$) 最小的规则。\n\nLennard-Jones 势由下式给出：\n$$\nu(r) = 4\\varepsilon \\left[ \\left( \\frac{\\sigma}{r} \\right)^{12} - \\left( \\frac{\\sigma}{r} \\right)^{6} \\right]\n$$\n其中 $\\sigma$ 是碰撞直径，$\\varepsilon$ 是势阱深度。为清晰起见，我们定义 $\\varepsilon' = \\varepsilon/k_{\\mathrm{B}}$，其中 $k_{\\mathrm{B}}$ 是 Boltzmann 常数。\n\n首先，我们定义氩（组分 $1$）和氪（组分 $2$）的纯组分参数：\n- 氩 ($1$): $\\sigma_{11} = 3.405\\ \\text{\\AA}$, $\\varepsilon'_{11} = 119.8\\ \\text{K}$。\n- 氪 ($2$): $\\sigma_{22} = 3.636\\ \\text{\\AA}$, $\\varepsilon'_{22} = 164.0\\ \\text{K}$。\n\n目标数据集是一个包含六个可观测量的向量 $\\mathbf{y}^{(\\text{target})}$：\n$$\n\\mathbf{y}^{(\\text{target})} = \n\\begin{pmatrix}\n\\sigma_{12}^{(\\text{target})} \\\\\n\\varepsilon'^{(\\text{target})}_{12} \\\\\n\\sigma_{11}^{(\\text{target})} \\\\\n\\varepsilon'^{(\\text{target})}_{11} \\\\\n\\sigma_{22}^{(\\text{target})} \\\\\n\\varepsilon'^{(\\text{target})}_{22}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n3.5205 \\\\\n138.17618 \\\\\n3.405 \\\\\n119.8 \\\\\n3.636 \\\\\n164.0\n\\end{pmatrix}\n$$\n$\\sigma$ 的单位默认为 $\\text{\\AA}$，$\\varepsilon'$ 的单位默认为 $\\text{K}$。对于每个规则 $m \\in \\{1, 2, 3\\}$，我们计算一个预测向量 $\\mathbf{y}^{(m)}$ 及其对应的 $\\mathrm{nRMSE}^{(m)}$。预测向量 $\\mathbf{y}^{(m)}$ 的构造如下：\n$$\n\\mathbf{y}^{(m)} = [\\sigma_{12}^{(m)}, \\varepsilon'_{12}{}^{(m)}, \\sigma_{11}, \\varepsilon'_{11}, \\sigma_{22}, \\varepsilon'_{22}]^T\n$$\n其中 $\\sigma_{12}^{(m)}$ 和 $\\varepsilon'_{12}{}^{(m)}$ 由具体的组合规则计算得出。纯组分条目（索引 $3$ 至 $6$）与输入参数相同，这反映了组合规则必须能再现纯组分极限的物理约束。\n\n误差使用 $\\mathrm{nRMSE}$ 指标计算：\n$$\n\\mathrm{nRMSE}^{(m)} = \\sqrt{ \\frac{1}{6} \\sum_{i=1}^{6} \\left( \\frac{y^{(m)}_i - y^{(\\text{target})}_i}{y^{(\\text{target})}_i} \\right)^{2} }\n$$\n由于当 $i \\in \\{3, 4, 5, 6\\}$ 时 $y^{(m)}_i = y^{(\\text{target})}_i$，误差公式可简化为仅对非同类对项求和：\n$$\n\\mathrm{nRMSE}^{(m)} = \\sqrt{ \\frac{1}{6} \\left[ \\left( \\frac{\\sigma_{12}^{(m)} - \\sigma_{12}^{(\\text{target})}}{\\sigma_{12}^{(\\text{target})}} \\right)^{2} + \\left( \\frac{\\varepsilon'_{12}{}^{(m)} - \\varepsilon'^{(\\text{target})}_{12}}{\\varepsilon'^{(\\text{target})}_{12}} \\right)^{2} \\right] }\n$$\n\n现在我们为每个规则计算非同类对参数和相应的误差。\n\n**规则 1：Lorentz-Berthelot**\n$$\n\\sigma_{12}^{(1)} = \\frac{\\sigma_{11} + \\sigma_{22}}{2} = \\frac{3.405 + 3.636}{2} = 3.5205\\ \\text{\\AA}\n$$\n$$\n\\varepsilon'_{12}{}^{(1)} = \\sqrt{\\varepsilon'_{11}\\,\\varepsilon'_{22}} = \\sqrt{119.8 \\times 164.0} \\approx 140.16847\\ \\text{K}\n$$\n相对误差为：\n$$\n\\Delta_{\\sigma}^{(1)} = \\frac{3.5205 - 3.5205}{3.5205} = 0\n$$\n$$\n\\Delta_{\\varepsilon}^{(1)} = \\frac{140.16847 - 138.17618}{138.17618} \\approx 0.0144185\n$$\n误差为：\n$$\n\\mathrm{nRMSE}^{(1)} = \\sqrt{\\frac{1}{6} \\left( 0^2 + (0.0144185)^2 \\right)} \\approx 0.005886\n$$\n\n**规则 2：Fender-Halsey**\n$$\n\\sigma_{12}^{(2)} = \\frac{\\sigma_{11} + \\sigma_{22}}{2} = 3.5205\\ \\text{\\AA}\n$$\n$$\n\\varepsilon'_{12}{}^{(2)} = \\frac{2\\,\\varepsilon'_{11}\\,\\varepsilon'_{22}}{\\varepsilon'_{11} + \\varepsilon'_{22}} = \\frac{2 \\times 119.8 \\times 164.0}{119.8 + 164.0} \\approx 138.45807\\ \\text{K}\n$$\n相对误差为：\n$$\n\\Delta_{\\sigma}^{(2)} = \\frac{3.5205 - 3.5205}{3.5205} = 0\n$$\n$$\n\\Delta_{\\varepsilon}^{(2)} = \\frac{138.45807 - 138.17618}{138.17618} \\approx 0.0020401\n$$\n误差为：\n$$\n\\mathrm{nRMSE}^{(2)} = \\sqrt{\\frac{1}{6} \\left( 0^2 + (0.0020401)^2 \\right)} \\approx 0.000833\n$$\n\n**规则 3：几何-算术混合**\n$$\n\\sigma_{12}^{(3)} = \\sqrt{\\sigma_{11}\\,\\sigma_{22}} = \\sqrt{3.405 \\times 3.636} \\approx 3.51860\\ \\text{\\AA}\n$$\n$$\n\\varepsilon'_{12}{}^{(3)} = \\sqrt{\\varepsilon'_{11}\\,\\varepsilon'_{22}} \\approx 140.16847\\ \\text{K}\n$$\n相对误差为：\n$$\n\\Delta_{\\sigma}^{(3)} = \\frac{3.51860 - 3.5205}{3.5205} \\approx -0.0005383\n$$\n$$\n\\Delta_{\\varepsilon}^{(3)} = \\frac{140.16847 - 138.17618}{138.17618} \\approx 0.0144185\n$$\n误差为：\n$$\n\\mathrm{nRMSE}^{(3)} = \\sqrt{\\frac{1}{6} \\left( (-0.0005383)^2 + (0.0144185)^2 \\right)} \\approx 0.005890\n$$\n\n**结论**\n比较这三个规则的误差：\n- $\\mathrm{nRMSE}^{(1)} \\approx 0.005886$\n- $\\mathrm{nRMSE}^{(2)} \\approx 0.000833$\n- $\\mathrm{nRMSE}^{(3)} \\approx 0.005890$\n\n最小误差由规则 $2$ (Fender-Halsey) 获得。因此，表现最佳的规则索引是 $m^\\star = 2$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes a normalized root-mean-square error for three competing\n    combining rules for Lennard-Jones parameters and identifies the best rule.\n    \"\"\"\n    # Define pure-component Lennard-Jones parameters for Argon (1) and Krypton (2).\n    # sigma is in Angstrom, epsilon/k_B is in Kelvin.\n    sigma_ar = 3.405    # sigma_11\n    eps_k_ar = 119.8     # eps'_11\n    sigma_kr = 3.636    # sigma_22\n    eps_k_kr = 164.0     # eps'_22\n\n    # Define the target dataset vector y_target.\n    # The order is: sigma_12, eps'_12, sigma_11, eps'_11, sigma_22, eps'_22.\n    target_data = np.array([\n        3.5205,      # target sigma_12\n        138.17618,   # target eps'_12\n        sigma_ar,    # target sigma_11\n        eps_k_ar,    # target eps'_11\n        sigma_kr,    # target sigma_22\n        eps_k_kr     # target eps'_22\n    ])\n\n    # --- Rule 1: Lorentz-Berthelot ---\n    # sigma_12 = (sigma_11 + sigma_22) / 2\n    # eps_12 = sqrt(eps_11 * eps_22)\n    sigma12_r1 = (sigma_ar + sigma_kr) / 2.0\n    eps12_r1 = np.sqrt(eps_k_ar * eps_k_kr)\n    y_pred_r1 = np.array([sigma12_r1, eps12_r1, sigma_ar, eps_k_ar, sigma_kr, eps_k_kr])\n\n    # --- Rule 2: Fender-Halsey ---\n    # sigma_12 = (sigma_11 + sigma_22) / 2\n    # eps_12 = (2 * eps_11 * eps_22) / (eps_11 + eps_22)\n    sigma12_r2 = (sigma_ar + sigma_kr) / 2.0\n    eps12_r2 = (2.0 * eps_k_ar * eps_k_kr) / (eps_k_ar + eps_k_kr)\n    y_pred_r2 = np.array([sigma12_r2, eps12_r2, sigma_ar, eps_k_ar, sigma_kr, eps_k_kr])\n\n    # --- Rule 3: Geometric-Arithmetic Hybrid ---\n    # sigma_12 = sqrt(sigma_11 * sigma_22)\n    # eps_12 = sqrt(eps_11 * eps_22)\n    sigma12_r3 = np.sqrt(sigma_ar * sigma_kr)\n    eps12_r3 = np.sqrt(eps_k_ar * eps_k_kr)\n    y_pred_r3 = np.array([sigma12_r3, eps12_r3, sigma_ar, eps_k_ar, sigma_kr, eps_k_kr])\n\n    # Store predicted vectors in a list for iteration\n    predictions = [y_pred_r1, y_pred_r2, y_pred_r3]\n    nrmse_values = []\n\n    # Calculate nRMSE for each rule\n    for y_pred in predictions:\n        # nRMSE = sqrt( (1/N) * sum( ((y_pred_i - y_target_i) / y_target_i)^2 ) )\n        # Note: target_data elements are all non-zero, so no division-by-zero risk.\n        relative_errors = (y_pred - target_data) / target_data\n        mean_squared_relative_error = np.mean(np.square(relative_errors))\n        nrmse = np.sqrt(mean_squared_relative_error)\n        nrmse_values.append(nrmse)\n\n    # Identify the rule with the minimum nRMSE.\n    # np.argmin returns the 0-based index of the minimum value.\n    # The problem asks for a 1-based rule index (m_star).\n    best_rule_index_1based = np.argmin(nrmse_values) + 1\n\n    # Format the results for the final output string.\n    # nRMSE values must be rounded to six decimal places.\n    nrmse_str = [f\"{v:.6f}\" for v in nrmse_values]\n\n    # Print the final result in the exact required format.\n    print(f\"[{best_rule_index_1based},{nrmse_str[0]},{nrmse_str[1]},{nrmse_str[2]}]\")\n\nsolve()\n```", "id": "2457928"}]}