{"hands_on_practices": [{"introduction": "在计算化学中，出乎意料的结果往往是宝贵的学习机会。本练习呈现了一个经典的“哪里出错了？”情景：一个苯分子在能量最小化后变得不呈平面结构。通过诊断其根本原因，您将发现一个特定但常被忽视的能量项——非正常二面角项 ($V_{\\text{improper}}$)——在维持 $sp^2$ 杂化系统平面性方面的关键作用 [@problem_id:2458525]。这项练习将磨练您解读模拟结果的能力，并理解力场中每个组分的精确功能。", "problem": "一名学生构建了苯分子，并错误地将同一个 $sp^2$ 碳原子类型分配给了系统中的每一个原子，包括氢原子。然后，他使用一个标准的分子力学（MM）势能对该分子进行能量最小化。该势能将总势能 $V_{\\text{tot}}$ 分解为成键和非键贡献，例如键伸缩、角弯曲、正常扭转、非正常扭转、范德华相互作用和静电相互作用。最小化后，尽管大多数键角仍接近 $120^\\circ$，苯环却明显不呈平面结构。假设拓扑结构中没有其他错误，由于不正确的原子类型指定，哪个单一的MM能量项被错误指定或忽略，最直接地导致了这个芳香性 $sp^2$ 系统失去平面性？\n\nA. 键角弯曲项，它为三角中心设定了接近 $120^\\circ$ 的平衡角\n\nB. 碳-碳键的正常二面角扭转项，它设定了沿键旋转的能垒\n\nC. 以三角碳为中心的非正常二面角（平面外）项，它对锥形化进行惩罚\n\nD. 非键合原子间的伦纳德-琼斯（LJ）范德华项，它对空间拥挤进行惩罚\n\nE. 键伸缩项，它将平衡键长固定在芳香键的键长附近", "solution": "对问题陈述进行验证。\n\n**第1步：提取已知条件**\n- 构建了一个苯分子。\n- 系统中所有原子，包括氢原子，都被指定了相同的 $sp^2$ 碳原子类型。\n- 使用分子力学（MM）势对系统进行能量最小化。\n- 势能 $V_{\\text{tot}}$ 包括键伸缩、角弯曲、正常扭转、非正常扭转、范德华（LJ）和静电相互作用项。\n- 能量最小化后，苯环呈非平面结构。\n- 大多数键角保持在 $120^\\circ$ 附近。\n- 假设拓扑结构中没有其他错误。\n- 问题询问由于不正确的原子类型指定，哪个单一的MM能量项被错误指定或忽略，从而最直接地导致了这种平面性的丧失。\n\n**第2步：使用已知条件进行验证**\n- **科学依据：** 该问题牢固地基于分子力学（MM）力场的原理，这是计算化学中的一种标准方法。用户在原子类型指定上出错导致非物理几何构型的情景是一个现实且常见的问题。所有提到的概念（能量项、原子类型、能量最小化、分子几何构型）都是标准的且在事实上是正确的。\n- **问题适定性：** 这个问题是适定的。它提出了一个具体的原因（不正确的原子类型指定）和一个具体的结果（非平面的苯环），并要求从一系列可能性中找出它们之间最直接的联系。约束条件（例如，键角接近 $120^\\circ$）提供了足够的信息来推导出唯一的答案。\n- **客观性：** 语言是客观和技术性的，没有歧义或主观陈述。\n\n**第3步：结论与行动**\n问题陈述在科学上是合理的、适定的和客观的。它是有效的。我将继续推导解决方案。\n\n在一个典型的分子力学力场中，总势能 $V_{\\text{tot}}$ 是各项之和：\n$$V_{\\text{tot}} = V_{\\text{bond}} + V_{\\text{angle}} + V_{\\text{proper\\_dihedral}} + V_{\\text{improper\\_dihedral}} + V_{\\text{nonbonded}}$$\n非键合项是范德华（$V_{\\text{vdW}}$）和静电（$V_{\\text{elec}}$）相互作用之和。\n$$V_{\\text{nonbonded}} = V_{\\text{vdW}} + V_{\\text{elec}}$$\n问题的核心是将 $sp^2$ 碳原子类型分配给所有原子（包括苯的六个氢（$H$）原子）所带来的后果。力场根据特定相互作用中涉及的原子类型来检索能量函数的参数（力常数、平衡值）。如果一个氢原子被指定为碳原子类型，比如 `$CA$` 型，那么任何涉及该氢原子的相互作用都将被参数化，就好像它是一个 `$CA$` 型的碳原子一样。\n\n$sp^2$ 杂化中心（例如苯环中的碳）的决定性特征是其三角形平面几何构型。虽然大约 $120^\\circ$ 的键角对此有贡献，但它们本身并不足以强制一组原子保持平面。一个C-C-C键角为 $120^\\circ$ 的六元环仍然可以采取非平面的褶皱构象。整个环的平面性，以及每个碳中心的平面性，主要由一个惩罚平面外扭曲的特定项来强制维持。\n\n让我们分析选项中提供的每一项的作用。\n\n**A. 键角弯曲项，它为三角中心设定了接近 $120^\\circ$ 的平衡角**\n键角弯曲项，通常是 $V_{\\text{angle}} = k_{\\theta}(\\theta - \\theta_0)^2$ 形式的简谐势，将键角维持在其平衡值 $\\theta_0$ 附近。对于苯环内的C-C-C片段，$\\theta_0$ 被正确设置为 $120^\\circ$。问题陈述中提到“大多数键角仍接近 $120^\\circ$”，这表明对于碳骨架而言，该项在很大程度上是正常工作的。错误的类型指定会影响C-C-H角，它们将被当作C-C-C角处理，但碳环本身平面性的根本丧失并非C-C-H角不正确的直接后果。维持局部键角并不能保证全局的平面性。因此，这不是最直接的原因。\n**结论：不正确**\n\n**B. 碳-碳键的正常二面角扭转项，它设定了沿键旋转的能垒**\n正常二面角描述了四个原子序列 $I-J-K-L$ 中围绕中心键的旋转。对于苯，该项将应用于环内的C-C-C-C四原子组。该项对于定义环褶皱的势能面至关重要。在芳香体系中，它的参数化有利于平面构象。然而，单个原子的锥形化（即一个原子移出由其三个成键邻居定义的平面）更直接地由非正常二面角项控制。失去正常二面角项使得环更容易扭曲，但失去非正常二面角项则直接移除了保持单个原子平面性的恢复力。因此，非正常二面角是观察到的锥形化现象更根本、更直接的原因。\n**结论：不正确**\n\n**C. 以三角碳为中心的非正常二面角（平面外）项，它对锥形化进行惩罚**\n非正常二面角项是专门设计用来在像 $sp^2$ 碳这样的中心强制实现平面性的。它定义在四个原子 $I-J-K-L$ 组上，其中 $J$ 是中心原子，与 $I$、$K$ 和 $L$ 成键。非正常二面角 $\\omega$ 测量的是 $I-J-K$ 平面与 $K-J-L$ 平面之间的夹角，或者等效地，原子 $J$ 偏离其三个邻居 $I$、$K$ 和 $L$ 所定义平面的程度。其势能通常是简谐的，$V_{\\text{improper}} = k_{\\omega}(\\omega - \\omega_0)^2$，其中对于平面中心，$\\omega_0$ 为 $0^\\circ$ 或 $180^\\circ$。在苯中，对于给定的碳原子 $C_i$，其平面性由一个涉及 $C_i$ 及其三个成键邻居（两个碳和一个氢）的非正常扭转来强制维持。例如，$C_{i-1}-C_{i+1}-C_i-H_i$。通过将氢原子 $H_i$ 错误地指定为 $sp^2$ 碳，系统将去寻找一个涉及四种 $sp^2$ 碳类型的非正常扭转参数。力场参数集中可能不包含这样的定义，或者相关的力常数 $k_{\\omega}$ 可能为零，或用于不同的化学环境。如果该项被忽略或其力常数为零，那么中心碳原子移出其邻居原子所在的平面就不会有能量惩罚。这直接*允许*了碳中心的锥形化以及随后整个环平面性的丧失。这是最直接和最主要的原因。\n**结论：正确**\n\n**D. 非键合原子间的伦纳德-琼斯（LJ）范德华项，它对空间拥挤进行惩罚**\n伦纳德-琼斯项解释了非键合相互作用。将一个小的氢原子错误地指定为一个大的碳原子，会急剧增加用于该原子位置的范德华半径。这将导致显著的空间位阻冲突，特别是在相邻的、被错误指定的“氢”原子之间。在能量最小化过程中，系统会试图缓解这种人为的空间应力，这确实可能驱动环发生褶皱。然而，该项并不*允许*平面性的丧失；它提供了一个导致形变的*力*。形变之所以可能，是因为本应维持平面性的恢复力（非正常二面角项）缺失或不正确。因此，LJ项是一个次要的、促成因素，而不是主要的允许性原因。问题问的是什么*允许*了形变。\n**结论：不正确**\n\n**E. 键伸缩项，它将平衡键长固定在芳香键的键长附近**\n键伸缩项 $V_{\\text{bond}} = k_{b}(b - b_0)^2$ 控制共价键的长度。将氢错误地指定为碳，将导致C-H键被当作C-C键处理，这可能导致最小化后错误的平衡键长（例如，将 $\\sim 1.1$ Å 的C-H键拉伸到 $\\sim 1.4$ Å 的C-C芳香键长度）。虽然这是一个严重的错误，但它并不直接解释环平面性的丧失。一个分子可以在键长不正确的情况下保持平面，反之，也可以在键长正确的情况下呈非平面。\n**结论：不正确**\n\n总之，非正常二面角项是MM力场中专门用于维持三角中心平面性的特定组成部分。由于学生的原子类型指定错误导致的该项的忽略或错误参数化，最直接地允许了苯环采取非平面构象。", "answer": "$$\\boxed{C}$$", "id": "2458525"}, {"introduction": "模拟新分子时，一个常见的挑战是在所选力场中遇到参数缺失的问题。本练习将您置于此情景中，要求您评估几种动态生成缺失角度参数（例如，力常数 $k_{\\theta}$ 和平衡角 $\\theta_{0}$）的策略 [@problem_id:2458533]。通过解决这个问题，您将探索参数可移植性的基本概念，学会在继续进行模拟时做出务实且有物理依据的选择，并理解其在准确性上的权衡。", "problem": "一个分子力学（MM）程序报告在一个选定的小分子力场中缺少一个价角参数：“未找到 C–N–H 角的参数”。在该力场中，价角对势能的贡献被模拟为一个谐波项，$E_{\\text{angle}} = \\tfrac{1}{2} k_{\\theta} (\\theta - \\theta_{0})^{2}$，其中 $k_{\\theta}$ 是角力常数，$\\theta_{0}$ 是平衡角。你希望立即继续进行几何优化，为此需要接受一个可以以最小的努力即时生成、且无需重新参数化整个分子的对该缺失角的粗略估计。\n\n下面的哪种策略是在所选力场框架内，即时估算缺失的 C–N–H 角参数的最简单（尽管最不准确）的方法？\n\nA. 从同一力场中已存在的化学相似的角类型中借鉴参数（例如，使用具有相同杂化状态的、以N为中心的现有角，如 H–N–H 和 C–N–C 的 $k_{\\theta}$ 和 $\\theta_{0}$ 的平均值），并将这些平均值赋给 C–N–H。\n\nB. 执行一次快速的量子化学计算（例如，密度泛函理论（DFT）），以获得分子的振动Hessian矩阵，并从投影的内坐标力常数中拟合 C–N–H 的 $k_{\\theta}$ 和 $\\theta_{0}$。\n\nC. 将缺失角的 $k_{\\theta}$ 设置为0，并依赖非键项和二面角项来保持几何构型的合理性，直到提供正确的参数为止。\n\nD. 使用 Lorentz–Berthelot 组合规则，通过相邻键伸缩力常数的几何平均值计算 C–N–H 的 $k_{\\theta}$，并将 $\\theta_{0}$ 设置为理想化的 C–N–C 和 H–N–H 平衡角的算术平均值。\n\nE. 仅用一个从通用力场（UFF）中导入的 C–N–H 通用价角参数来替换此缺失的角项，同时保持原力场中的所有其他项不变。", "solution": "按以下步骤对问题陈述进行严格评估。\n\n**步骤1：提取已知条件**\n- 一个分子力学（MM）程序报告了 `$\\text{C–N–H}$` 角的价角参数缺失。\n- 该力场对价角使用谐波势：$E_{\\text{angle}} = \\tfrac{1}{2} k_{\\theta} (\\theta - \\theta_{0})^{2}$。\n- $k_{\\theta}$ 是角力常数。\n- $\\theta_{0}$ 是平衡角。\n- 目标是立即继续进行几何优化。\n- 所期望的解决方案是为缺失参数提供一个粗略的估计。\n- 估算方法必须能够“即时”生成。\n- 估算方法必须需要“最小的努力”。\n- 估算方法不能涉及对整个分子进行重新参数化。\n- 问题是在所选力场框架内，找出选项中最简单（尽管最不准确）且满足这些约束条件的策略。\n\n**步骤2：使用提取的已知条件进行验证**\n根据所需标准对问题陈述进行评估。\n- **科学依据**：该问题在计算化学和分子力学原理方面有充分的依据。角弯曲的谐波势，$E_{\\text{angle}} = \\tfrac{1}{2} k_{\\theta} (\\theta - \\theta_{0})^{2}$，是许多经典力场（例如 AMBER、CHARMM、OPLS）的标准组成部分。参数缺失问题是在设置MM模拟时一个常见且实际的挑战。\n- **问题适定性**：这个问题是适定的。它要求根据明确的标准（简单性、最小努力、以及即时估算的直接适用性）来评估不同的启发式策略。基于这些标准对给定选项进行唯一排序是可能的。\n- **客观性**：问题以客观、技术性的语言陈述，没有偏见或主观论断。\n\n**步骤3：结论与行动**\n该问题是有效的。它在科学上是合理的，问题是适定的，并且是客观的。它描述了应用计算化学中的一个标准场景。我将继续推导解决方案并评估各个选项。\n\n**解决方案推导**\n核心任务是找到一种方法，为 $\\text{C–N–H}$ 角生成参数 $k_{\\theta}$ 和 $\\theta_{0}$ 的估计值。该方法必须计算成本低廉（“最小努力”、“即时”），并提供一个“粗略估计”，足以让几何优化继续进行而不会立即失败。理想情况下，该策略应在“所选力场内”操作，这意味着它应尊重力场的内部一致性及其原理。\n\n**选项评估**\n\n**A. 从同一力场中已存在的化学相似的角类型中借鉴参数（例如，使用具有相同杂化状态的、以N为中心的现有角，如 H–N–H 和 C–N–C 的 $k_{\\theta}$ 和 $\\theta_{0}$ 的平均值），并将这些平均值赋给 C–N–H。**\n该策略基于参数可移植性原理，这是大多数分子力学力场构建中的一个基本假设。该原理假定，给定化学基团的参数在不同分子中是相似的。如果力场包含化学上类似的角（例如 $\\text{H–N–H}$ 和 $\\text{C–N–C}$，其中中心氮原子具有相同的杂化和配位状态）的参数，那么合乎逻辑的假设是 $\\text{C–N–H}$ 的参数将介于两者之间。取平均值（算术平均或其他方式）是一个计算上微不足道的操作，可以自动化（“即时”）。这为 $k_{\\theta}$ 和 $\\theta_{0}$ 提供了一个物理上合理但粗略的估计。在许多模拟软件包中，这种方法是处理缺失参数的标准默认备用方案。它完全符合问题的所有约束。\n**结论：正确**\n\n**B. 执行一次快速的量子化学计算（例如，密度泛函理论（DFT）），以获得分子的振动Hessian矩阵，并从投影的内坐标力常数中拟合 C–N–H 的 $k_{\\theta}$ 和 $\\theta_{0}$。**\n该方法描述了一种正确、严谨的参数化途径。然而，这远非“最小努力”。一次量子力学（QM）计算，即使是“快速”的，其计算成本和耗时也比简单的启发式方法高出几个数量级。它需要设置和运行QM任务，然后对生成的Hessian矩阵进行后处理以提取所需的力常数。在立即继续MM优化的背景下，这不能被视为“即时”解决方案。该策略违反了“最小努力”的约束。\n**结论：错误**\n\n**C. 将缺失角的 $k_{\\theta}$ 设置为0，并依赖非键项和二面角项来保持几何构型的合理性，直到提供正确的参数为止。**\n将力常数 $k_{\\theta}$ 设置为0，实际上是从势能函数中移除了角弯曲项。虽然这是计算上最简单的操作，但它在物理上是不合理的。如果没有恢复力，$\\text{C–N–H}$ 角将仅由末端碳原子和氢原子之间的非键相互作用（范德华力和静电相互作用）控制。在大多数力场中，这种1,3非键相互作用要么被完全排除，要么被大幅缩减，以防止与键合项（键和角）中隐含包含的相互作用发生重复计算。因此，依赖这些微弱或不存在的力极有可能导致不符合物理实际的几何构型，尤其是在能量最小化过程中，原子可能会移动到能量上有利但几何上荒谬的位置。声称这将“保持几何构型的合理性”是不可信的。\n**结论：错误**\n\n**D. 使用 Lorentz–Berthelot 组合规则，通过相邻键伸缩力常数的几何平均值计算 C–N–H 的 $k_{\\theta}$，并将 $\\theta_{0}$ 设置为理想化的 C–N–C 和 H–N–H 平衡角的算术平均值。**\n这个选项提出了对既定规则的荒谬应用。Lorentz-Berthelot 组合规则（$\\sigma_{ij} = (\\sigma_{ii} + \\sigma_{jj})/2$ 和 $\\epsilon_{ij} = \\sqrt{\\epsilon_{ii}\\epsilon_{jj}}$）是专门设计用来从纯类型（$i-i$ 和 $j-j$）的参数来估计两种不同原子类型（$i$ 和 $j$）之间非键相互作用的Lennard-Jones参数。没有任何物理或理论基础支持将这些规则应用于键合力常数，例如从键伸缩力常数计算角力常数。这是对力场理论的根本性误解。\n**结论：错误**\n\n**E. 仅用一个从通用力场（UFF）中导入的 C–N–H 通用价角参数来替换此缺失的角项，同时保持原力场中的所有其他项不变。**\n通用力场（UFF）旨在基于通用规则为几乎所有元素组合提供参数。虽然它可以为 $k_{\\theta}$ 和 $\\theta_{0}$ 提供一个数值，但混合来自不同力场的参数是一种危险且通常不被推荐的做法。力场是作为一个自洽的集合进行参数化的，其中键合项和非键项之间存在微妙的平衡。将来自一个不同势能面（UFF）的参数引入到另一个势能面（例如 AMBER、OPLS）中会破坏这种平衡，并可能导致不可靠或不符合物理实际的结果。虽然简单，但这种方法违反了内部一致性原则。策略A更为优越，因为它利用所选力场*内部*的信息和原理生成参数，从而保持了更好的一致性。\n**结论：错误**\n\n总之，策略A是唯一满足所有要求的选项：它简单，需要最小的努力，可以即时执行，并且基于健全且被广泛接受的参数可移植性原理，而该原理本身就是源力场哲学的内在部分。", "answer": "$$\\boxed{A}$$", "id": "2458533"}, {"introduction": "在应用可移植性原理估算了一个缺失参数后，一个关键问题随之而来：“这个估算有多好？”。最后的这个练习将带您从定性推理转向定量验证，要求您通过编程实现一个数值测试来衡量参数的可移植性 [@problem_id:2458520]。通过编写一个计算两个势能面之间均方根偏差 ($\\text{RMSD}$) 的函数，您将对如何正式评估参数的“拟合优度”有一个切实的理解，并发展宝贵的计算技能。", "problem": "给定经典分子力学中使用的扭转（二面角）势的数学形式。对于单个二面角，其对势能的扭转贡献由一个截断的傅里叶级数建模：\n$$\nE(\\varphi;\\,\\mathcal{P}) \\;=\\; \\sum_{j=1}^{M} \\frac{K_j}{2}\\,\\bigl[\\,1 + \\cos\\!\\bigl(n_j \\varphi - \\delta_j\\bigr)\\,\\bigr],\n$$\n其中，$\\varphi$ 是以弧度为单位的二面角，$\\mathcal{P}=\\{(K_j,n_j,\\delta_j)\\}_{j=1}^{M}$ 为参数集，$K_j$ 是振幅（单位为 $\\mathrm{kJ\\,mol^{-1}}$），$n_j$ 是整数周期性，$\\delta_j$ 是相位移（单位为弧度）。考虑一个可移植性测试，其中为正丁烷（$n$-butane）推导出的参数集 $\\mathcal{P}^{(\\mathrm{but})}$ 被用来预测2-甲基丁烷（$2$-methylbutane）的扭转能量分布，其参考（目标）分布由 $\\mathcal{P}^{(\\mathrm{ref})}$ 给出。将在一组离散角度 $\\Phi$ 上的可移植性误差定义为均方根偏差：\n$$\n\\mathrm{RMSD}\\!\\left(\\mathcal{P}^{(\\mathrm{but})}\\to\\mathcal{P}^{(\\mathrm{ref})};\\,\\Phi\\right) \\;=\\; \\sqrt{\\frac{1}{|\\Phi|}\\sum_{\\varphi\\in\\Phi}\\Bigl(E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{but})}) - E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{ref})})\\Bigr)^2}.\n$$\n使用上述定义，编写一个程序来计算下列每个测试案例的 $\\mathrm{RMSD}$（单位为 $\\mathrm{kJ\\,mol^{-1}}$）。在所有案例中，使用角度集 $\\Phi=\\{0,\\,\\tfrac{\\pi}{2},\\,\\pi,\\,\\tfrac{3\\pi}{2}\\}$，角度单位为弧度。所有振幅 $K_j$ 必须解释为单位是 $\\mathrm{kJ\\,mol^{-1}}$，所有相位 $\\delta_j$ 必须解释为单位是弧度，所有周期性 $n_j$ 必须解释为整数。\n\n测试案例（每个案例将 $\\mathcal{P}^{(\\mathrm{but})}$ 和 $\\mathcal{P}^{(\\mathrm{ref})}$ 指定为三元组 $(K,n,\\delta)$ 的列表）：\n\n- 案例 A（理想可移植性基准）：\n  - $\\mathcal{P}^{(\\mathrm{but})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$,\n  - $\\mathcal{P}^{(\\mathrm{ref})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$.\n\n- 案例 B（$n{=}1$ 项的单一振幅偏差）：\n  - $\\mathcal{P}^{(\\mathrm{but})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$,\n  - $\\mathcal{P}^{(\\mathrm{ref})} = \\bigl[(5.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$.\n\n- 案例 C（参考项中 $n{=}3$ 项的相位反转）：\n  - $\\mathcal{P}^{(\\mathrm{but})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$,\n  - $\\mathcal{P}^{(\\mathrm{ref})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,\\pi)\\bigr]$.\n\n- 案例 D（参考振幅按 $s{=}0.5$ 统一缩放）：\n  - $\\mathcal{P}^{(\\mathrm{but})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$,\n  - $\\mathcal{P}^{(\\mathrm{ref})} = \\bigl[(2.0,\\,1,\\,0),\\,(0.5,\\,2,\\,0),\\,(1.0,\\,3,\\,0)\\bigr]$.\n\n您的程序必须生成单行输出，其中包含对应于案例 A、B、C 和 D 的四个 $\\mathrm{RMSD}$ 值（单位为 $\\mathrm{kJ\\,mol^{-1}}$）的列表，每个值四舍五入到六位小数，并严格按照方括号内逗号分隔列表的格式，例如 $[\\dots]$。", "solution": "该问题要求计算两个扭转势能分布之间的均方根偏差（RMSD），该值在分子力学中用作参数可移植性的度量。分析过程将首先定义必要的函数，然后将它们应用于指定的测试案例。\n\n对于给定的二面角 $\\varphi$，扭转势能 $E$ 由一个有限傅里叶级数描述：\n$$\nE(\\varphi;\\,\\mathcal{P}) \\;=\\; \\sum_{j=1}^{M} \\frac{K_j}{2}\\,\\bigl[\\,1 + \\cos\\!\\bigl(n_j \\varphi - \\delta_j\\bigr)\\,\\bigr]\n$$\n此处，$\\mathcal{P}=\\{(K_j,n_j,\\delta_j)\\}_{j=1}^{M}$ 是定义该势的参数集，其中 $K_j$ 是振幅（单位为 $\\mathrm{kJ\\,mol^{-1}}$），$n_j$ 是整数周期性，$\\delta_j$ 是相位移（单位为弧度）。\n\n可移植性误差通过待测试参数 $\\mathcal{P}^{(\\mathrm{but})}$ 生成的能量分布与参考分布 $\\mathcal{P}^{(\\mathrm{ref})}$ 之间的均方根偏差（RMSD）来量化，该偏差在一组离散角度 $\\Phi$ 上进行评估：\n$$\n\\mathrm{RMSD}\\!\\left(\\mathcal{P}^{(\\mathrm{but})}\\to\\mathcal{P}^{(\\mathrm{ref})};\\,\\Phi\\right) \\;=\\; \\sqrt{\\frac{1}{|\\Phi|}\\sum_{\\varphi\\in\\Phi}\\Bigl(E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{but})}) - E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{ref})})\\Bigr)^2}\n$$\n问题指定角度集为 $\\Phi=\\{0,\\,\\tfrac{\\pi}{2},\\,\\pi,\\,\\tfrac{3\\pi}{2}\\}$，其中包含 $|\\Phi|=4$ 个点。\n\n解决这个问题的算法由两个主要步骤组成：\n$1$. 设计一个函数来计算给定任意角度 $\\varphi$ 和参数集 $\\mathcal{P}$ 下的能量 $E(\\varphi; \\mathcal{P})$。该函数遍历参数集中的各项，使用公式 $\\frac{K_j}{2}\\,[1 + \\cos(n_j \\varphi - \\delta_j)]$ 计算每一项 $j$ 的能量贡献，并将这些贡献累加为总和。为了提高计算效率，可以将其向量化，以同时计算 $\\Phi$ 中所有角度的能量。\n\n$2$. 设计第二个函数来计算 RMSD。该函数以两个参数集 $\\mathcal{P}^{(\\mathrm{but})}$ 和 $\\mathcal{P}^{(\\mathrm{ref})}$ 以及角度集 $\\Phi$ 作为输入。它执行以下操作序列：\n   a. 对于 $\\Phi$ 中的每个角度 $\\varphi$，使用步骤 1 中的函数计算能量 $E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{but})})$ 和 $E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{ref})})$。\n   b. 对每个角度，计算差值的平方 $\\Delta E^2 = (E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{but})}) - E(\\varphi;\\,\\mathcal{P}^{(\\mathrm{ref})}))^2$。\n   c. 计算这些平方差在 $\\Phi$ 中所有角度上的平均值。\n   d. 最终的 RMSD 是该平均值的平方根。\n\n让我们以案例 C 为例进行说明。参数集为：\n$\\mathcal{P}^{(\\mathrm{but})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,0)\\bigr]$\n$\\mathcal{P}^{(\\mathrm{ref})} = \\bigl[(4.0,\\,1,\\,0),\\,(1.0,\\,2,\\,0),\\,(2.0,\\,3,\\,\\pi)\\bigr]$\n前两项（$j=1, 2$）在两个集合中是相同的。能量差 $\\Delta E(\\varphi) = E(\\varphi; \\mathcal{P}^{(\\mathrm{but})}) - E(\\varphi; \\mathcal{P}^{(\\mathrm{ref})})$ 仅取决于第三项（$j=3$）：\n$$\n\\Delta E(\\varphi) = \\frac{2.0}{2}\\bigl[1 + \\cos(3\\varphi - 0)\\bigr] - \\frac{2.0}{2}\\bigl[1 + \\cos(3\\varphi - \\pi)\\bigr]\n$$\n使用恒等式 $\\cos(x - \\pi) = -\\cos(x)$，上式可简化为：\n$$\n\\Delta E(\\varphi) = \\bigl(1 + \\cos(3\\varphi)\\bigr) - \\bigl(1 - \\cos(3\\varphi)\\bigr) = 2\\cos(3\\varphi)\n$$\n我们在 $\\Phi$ 中的每个角度上评估平方差 $(\\Delta E(\\varphi))^2 = 4\\cos^2(3\\varphi)$：\n- 对于 $\\varphi=0$：$(\\Delta E)^2 = 4\\cos^2(0) = 4(1)^2 = 4$。\n- 对于 $\\varphi=\\pi/2$：$(\\Delta E)^2 = 4\\cos^2(3\\pi/2) = 4(0)^2 = 0$。\n- 对于 $\\varphi=\\pi$：$(\\Delta E)^2 = 4\\cos^2(3\\pi) = 4(-1)^2 = 4$。\n- 对于 $\\varphi=3\\pi/2$：$(\\Delta E)^2 = 4\\cos^2(9\\pi/2) = 4(0)^2 = 0$。\n\n平方差之和为 $4+0+4+0=8$。平均值为 $8/4=2$。因此，RMSD 为 $\\sqrt{2} \\approx 1.414214\\,\\mathrm{kJ\\,mol^{-1}}$。\n\n该过程通过编程实现，并应用于所有四个指定的测试案例以生成最终结果。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the RMSD for torsional potential transferability test cases.\n    \"\"\"\n\n    def calculate_energy(phi_array, params):\n        \"\"\"\n        Calculates the torsional energy for a given array of angles.\n\n        Args:\n            phi_array (np.ndarray): An array of dihedral angles in radians.\n            params (list): A list of tuples, where each tuple is (K, n, delta).\n\n        Returns:\n            np.ndarray: An array of total torsional energies corresponding to each angle.\n        \"\"\"\n        total_energy = np.zeros_like(phi_array, dtype=float)\n        for K, n, delta in params:\n            total_energy += (K / 2.0) * (1.0 + np.cos(n * phi_array - delta))\n        return total_energy\n\n    def calculate_rmsd(params_but, params_ref, angles):\n        \"\"\"\n        Calculates the Root-Mean-Square Deviation (RMSD) between two\n        potential energy profiles.\n\n        Args:\n            params_but (list): Parameter set for the tested potential.\n            params_ref (list): Parameter set for the reference potential.\n            angles (np.ndarray): Array of angles for evaluation.\n\n        Returns:\n            float: The calculated RMSD value.\n        \"\"\"\n        # Calculate energy profiles for both parameter sets\n        E_but = calculate_energy(angles, params_but)\n        E_ref = calculate_energy(angles, params_ref)\n        \n        # Calculate the RMSD using the formula\n        squared_errors = (E_but - E_ref)**2\n        mean_squared_error = np.mean(squared_errors)\n        rmsd = np.sqrt(mean_squared_error)\n        \n        return rmsd\n\n    # Define the discrete set of angles in radians\n    angles = np.array([0, np.pi/2, np.pi, 3*np.pi/2])\n    \n    # Define the test cases as pairs of parameter sets (P_but, P_ref)\n    test_cases = [\n        # Case A: Perfect transferability baseline\n        (\n            [(4.0, 1, 0), (1.0, 2, 0), (2.0, 3, 0)],\n            [(4.0, 1, 0), (1.0, 2, 0), (2.0, 3, 0)]\n        ),\n        # Case B: Single-amplitude deviation in the n=1 term\n        (\n            [(4.0, 1, 0), (1.0, 2, 0), (2.0, 3, 0)],\n            [(5.0, 1, 0), (1.0, 2, 0), (2.0, 3, 0)]\n        ),\n        # Case C: Phase inversion in the n=3 term for the reference\n        (\n            [(4.0, 1, 0), (1.0, 2, 0), (2.0, 3, 0)],\n            [(4.0, 1, 0), (1.0, 2, 0), (2.0, 3, np.pi)]\n        ),\n        # Case D: Uniform scaling of reference amplitudes by s=0.5\n        (\n            [(4.0, 1, 0), (1.0, 2, 0), (2.0, 3, 0)],\n            [(2.0, 1, 0), (0.5, 2, 0), (1.0, 3, 0)]\n        )\n    ]\n    \n    results = []\n    for params_but, params_ref in test_cases:\n        rmsd_value = calculate_rmsd(params_but, params_ref, angles)\n        results.append(rmsd_value)\n        \n    # Format the results to six decimal places and print in the specified format\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2458520"}]}