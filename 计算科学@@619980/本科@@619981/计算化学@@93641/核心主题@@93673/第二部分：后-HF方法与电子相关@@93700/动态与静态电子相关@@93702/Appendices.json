{"hands_on_practices": [{"introduction": "当单个电子构型不足以描述一个系统时，静态相关就应运而生，这通常发生在电子态接近简并的几何构型附近。本练习提供了一个基于最小双态模型哈密顿量的动手实践，让您可以直接计算“静态相关指数”，并直观地了解电子态的混合如何引起强静态相关 [@problem_id:2454410]。通过对角化一个简单的 $2 \\times 2$ 矩阵，您将在势能面上精确地找出多参考特征最强的区域。", "problem": "考虑一个用于插入反应 $Be + H_{2} \\rightarrow H\\text{-}Be\\text{-}H$ 的简化双组态量子模型。设几何构型由一维反应坐标 $s$ (无量纲) 和弯曲角 $\\theta$ (以弧度为单位) 参数化。在由两个主导电子组态构成的非绝热基中，电子哈密顿量表示为对称的 $2 \\times 2$ 矩阵\n$$\nH(s,\\theta) = \\begin{pmatrix}\nE_{1}(s,\\theta) & V_{12}(s,\\theta) \\\\\nV_{12}(s,\\theta) & E_{2}(s,\\theta)\n\\end{pmatrix},\n$$\n其模型分量在无量纲单位下如下所示：\n$$\nE_{1}(s,\\theta) = k\\,(s - s_{r})^{2} + b_{1}\\,(\\theta - \\pi)^{2},\n$$\n$$\nE_{2}(s,\\theta) = k\\,(s - s_{i})^{2} + b_{2}\\,(\\theta - \\pi)^{2} + \\delta,\n$$\n$$\nV_{12}(s,\\theta) = V_{0}\\,\\exp\\!\\big(-\\alpha\\,(s - s_{c})^{2}\\big)\\,\\exp\\!\\big(-\\gamma\\,(\\theta - \\pi)^{2}\\big).\n$$\n使用固定的参数值 $k = 1.0$， $s_{r} = 3.0$， $s_{i} = 1.2$， $b_{1} = 0.10$， $b_{2} = 0.30$， $\\delta = 0.20$， $V_{0} = 0.05$， $\\alpha = 2.0$， $s_{c} = 2.0$ 以及 $\\gamma = 1.0$。所有能量和耦合项均采用相同的任意无量纲单位。\n\n对于每个几何构型 $(s,\\theta)$，设 $H(s,\\theta)$ 在非绝热基中的归一化基态本征矢量为 $\\lvert \\Psi_{0}\\rangle = c_{1}\\lvert \\phi_{1}\\rangle + c_{2}\\lvert \\phi_{2}\\rangle$，且满足 $|c_{1}|^{2} + |c_{2}|^{2} = 1$。定义静态相关指数 $\\mathrm{SCI}(s,\\theta)$ 为\n$$\n\\mathrm{SCI}(s,\\theta) = 4\\,|c_{1}|^{2}\\,|c_{2}|^{2},\n$$\n其取值范围为 $[0,1]$，并在完全双组态混合 $|c_{1}|^{2} = |c_{2}|^{2} = 1/2$ 时达到其最大值 $1$。\n\n任务：对于下面列出的几何构型测试集，计算每种情况下的 $\\mathrm{SCI}(s,\\theta)$，并四舍五入到恰好三位小数。然后，确定具有最大 $\\mathrm{SCI}$ 值的情况的从零开始的索引（如果多个情况共享相同的最大值，则选择最小的索引）。按照最终输出格式的要求，将所有 $\\mathrm{SCI}$ 值和最大值的索引作为单个列表在一行中报告。角度必须以弧度处理，所有输出均为无量纲。\n\n测试集（$(s,\\theta)$ 的有序列表）：\n- 情况 $0$：$(s=\\;3.0,\\;\\theta=\\;\\pi)$\n- 情况 $1$：$(s=\\;2.044,\\;\\theta=\\;\\pi)$\n- 情况 $2$：$(s=\\;2.044,\\;\\theta=\\;2.2)$\n- 情况 $3$：$(s=\\;1.2,\\;\\theta=\\;\\pi)$\n- 情况 $4$：$(s=\\;2.3,\\;\\theta=\\;\\pi)$\n\n最终输出格式：您的程序应生成单行输出，其中包含一个以方括号括起来的逗号分隔列表，列表内容为按顺序排列的五个 $\\mathrm{SCI}$ 值，后跟最大值所在的整数索引。例如，输出必须具有 $[\\mathrm{SCI}_{0},\\mathrm{SCI}_{1},\\mathrm{SCI}_{2},\\mathrm{SCI}_{3},\\mathrm{SCI}_{4},i_{\\max}]$ 的形式，其中每个 $\\mathrm{SCI}_{j}$ 是一个四舍五入到恰好三位小数的浮点数，而 $i_{\\max}$ 是一个整数。", "solution": "我们使用双组态非绝热哈密顿量 $H(s,\\theta)$ 来模拟插入反应 $Be + H_{2} \\rightarrow H\\text{-}Be\\text{-}H$，其中 $s$ 是无量纲反应坐标，$\\theta$ 是以弧度为单位的弯曲角。该哈密顿量为\n$$\nH(s,\\theta) = \\begin{pmatrix}\nE_{1}(s,\\theta) & V_{12}(s,\\theta) \\\\\nV_{12}(s,\\theta) & E_{2}(s,\\theta)\n\\end{pmatrix},\n$$\n其中\n$$\nE_{1}(s,\\theta) = k\\,(s - s_{r})^{2} + b_{1}\\,(\\theta - \\pi)^{2}, \\quad\nE_{2}(s,\\theta) = k\\,(s - s_{i})^{2} + b_{2}\\,(\\theta - \\pi)^{2} + \\delta,\n$$\n$$\nV_{12}(s,\\theta) = V_{0}\\,\\exp\\!\\big(-\\alpha\\,(s - s_{c})^{2}\\big)\\,\\exp\\!\\big(-\\gamma\\,(\\theta - \\pi)^{2}\\big),\n$$\n且固定参数为 $k = 1.0$，$s_{r} = 3.0$，$s_{i} = 1.2$，$b_{1} = 0.10$，$b_{2} = 0.30$，$\\delta = 0.20$，$V_{0} = 0.05$，$\\alpha = 2.0$，$s_{c} = 2.0$，$\\gamma = 1.0$。该模型捕捉了沿着插入坐标的两个主导电子组态之间近简并的基本物理特性，以及依赖于几何构型的耦合。\n\n为从第一性原理出发识别静态相关，我们对角化实对称矩阵 $H(s,\\theta)$ 以获得本征值 $E_{-} \\le E_{+}$ 和相应的归一化本征矢量。能量较低的（基态）本征矢量在非绝热基中可以写为\n$$\n\\lvert \\Psi_{0} \\rangle = c_{1} \\lvert \\phi_{1} \\rangle + c_{2} \\lvert \\phi_{2} \\rangle,\n$$\n且满足 $|c_{1}|^{2} + |c_{2}|^{2} = 1$。此处的静态（也称为非动态）相关的度量是两个组态之间由近简并诱导的混合程度，由下式量化：\n$$\n\\mathrm{SCI}(s,\\theta) = 4\\,|c_{1}|^{2}\\,|c_{2}|^{2}.\n$$\n这直接源于双组态图像：当对角能隙 $\\Delta(s,\\theta) = E_{1}(s,\\theta) - E_{2}(s,\\theta)$ 趋近于零而 $V_{12}(s,\\theta)$ 为有限值时，基态本征矢量会几乎均等地混合非绝热组态，即 $|c_{1}|^{2} \\approx |c_{2}|^{2} \\approx 1/2$，从而得到 $\\mathrm{SCI} \\approx 1$，这表明存在强静态相关。相反地，当 $|\\Delta(s,\\theta)| \\gg |V_{12}(s,\\theta)|$ 时，基态近似为单个组态，因此 $|c_{1}|^{2} \\approx 1$ 或 $0$，且 $\\mathrm{SCI} \\approx 0$，这表明静态相关很弱，而由动态相关主导。\n\n基于这些原理的算法步骤如下：\n1. 对于每个 $(s,\\theta)$，使用给定的参数值计算 $E_{1}(s,\\theta)$，$E_{2}(s,\\theta)$ 和 $V_{12}(s,\\theta)$。\n2. 构建对称矩阵 $H(s,\\theta)$，并通过求解不含时薛定谔方程来计算其本征值和归一化本征矢量：\n$$\nH(s,\\theta)\\,\\mathbf{c} = E\\,\\mathbf{c},\n$$\n其中，对于基态，$\\mathbf{c} = (c_{1}, c_{2})^{\\top}$。\n3. 从基态本征矢量中提取 $|c_{1}|^{2}$ 和 $|c_{2}|^{2}$，并计算\n$$\n\\mathrm{SCI}(s,\\theta) = 4\\,|c_{1}|^{2}\\,|c_{2}|^{2}.\n$$\n4. 将每个 $\\mathrm{SCI}$ 值四舍五入到恰好三位小数。\n5. 确定最大 $\\mathrm{SCI}$ 值的从零开始的索引 $i_{\\max}$。为避免因四舍五入引起的平局问题，原则上应使用未四舍五入的值来选择最大值，然后在报告时应用指定的四舍五入规则，同时在出现精确相等的情况下选择最小的索引。\n\n对所提供测试集的物理诠释：\n- 在 $(s=\\;3.0,\\theta=\\;\\pi)$ 和 $(s=\\;1.2,\\theta=\\;\\pi)$ 处，一个非绝热势能面远低于另一个（即 $|\\Delta|$ 相对于 $|V_{12}|$ 很大），因此 $|c_{1}|^{2}$ 或 $|c_{2}|^{2}$ 接近于 $1$，得到 $\\mathrm{SCI} \\approx 0$，这对应于弱静态相关。\n- 在 $(s \\approx 2.044,\\theta=\\;\\pi)$ 附近，非绝热势能面近简并（$\\Delta \\approx 0$）且耦合显著，导致几乎相等的组态混合，因此 $\\mathrm{SCI} \\approx 1$，这确定了势能面上静态相关最强的区域。\n- $s$ 或 $\\theta$ 从该区域的轻微偏离会增加 $|\\Delta|$ 并减小 $|V_{12}|$，从而减弱混合，降低 $\\mathrm{SCI}$ 值。\n\n该程序执行这些步骤，以所需的单行格式计算并报告列表 $[\\mathrm{SCI}_{0},\\mathrm{SCI}_{1},\\mathrm{SCI}_{2},\\mathrm{SCI}_{3},\\mathrm{SCI}_{4},i_{\\max}]$，其中角度以弧度为单位，所有输出均为无量纲单位。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef hamiltonian(s, theta):\n    # Parameters (dimensionless)\n    k = 1.0\n    s_r = 3.0\n    s_i = 1.2\n    b1 = 0.10\n    b2 = 0.30\n    delta = 0.20\n    V0 = 0.05\n    alpha = 2.0\n    s_c = 2.0\n    gamma = 1.0\n\n    E1 = k * (s - s_r) ** 2 + b1 * (theta - np.pi) ** 2\n    E2 = k * (s - s_i) ** 2 + b2 * (theta - np.pi) ** 2 + delta\n    V12 = V0 * np.exp(-alpha * (s - s_c) ** 2) * np.exp(-gamma * (theta - np.pi) ** 2)\n\n    H = np.array([[E1, V12],\n                  [V12, E2]], dtype=float)\n    return H\n\ndef static_correlation_index(s, theta):\n    H = hamiltonian(s, theta)\n    # Diagonalize symmetric 2x2 Hamiltonian\n    evals, evecs = np.linalg.eigh(H)\n    # Ground state eigenvector is column corresponding to smallest eigenvalue\n    idx_min = np.argmin(evals)\n    vec = evecs[:, idx_min]\n    # Normalize defensively (should already be normalized by eigh)\n    vec = vec / np.linalg.norm(vec)\n    p1 = float(vec[0] ** 2)  # |c1|^2\n    p2 = 1.0 - p1            # |c2|^2\n    sci = 4.0 * p1 * p2\n    return sci\n\ndef solve():\n    # Define the test cases from the problem statement: (s, theta) with theta in radians.\n    test_cases = [\n        (3.0, np.pi),     # Case 0\n        (2.044, np.pi),   # Case 1\n        (2.044, 2.2),     # Case 2\n        (1.2, np.pi),     # Case 3\n        (2.3, np.pi),     # Case 4\n    ]\n\n    sci_values = []\n    for (s, theta) in test_cases:\n        sci = static_correlation_index(s, theta)\n        sci_values.append(sci)\n\n    # Determine index of maximum SCI using unrounded values; tie broken by first occurrence.\n    imax = int(np.argmax(sci_values))\n\n    # Round SCI values to exactly three decimals for output.\n    sci_strings = [f\"{v:.3f}\" for v in sci_values]\n\n    # Build final output list: five SCI values followed by the integer index.\n    output_items = sci_strings + [str(imax)]\n    print(f\"[{','.join(output_items)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2454410"}, {"introduction": "在简单的双态模型之外，我们可以用更基本的多电子理论来量化静态相关。本实践采用双中心哈伯德（Hubbard）模型——理解电子相关的基石——来探究化学反应过渡态的双自由基特征 [@problem_id:2454423]。您将通过计算基态波函数、推导单粒子约化密度矩阵，并从其自然轨道占据数中计算双自由基指数，从而将抽象理论与开壳层单重态这一具体化学概念联系起来。", "problem": "考虑使用一个最小的、第一性原理的、双格点、双电子模型来探究 $[2+2]$ 环加成反应中过渡态的双自由基特征，该模型能捕捉动态和静态电子关联之间的竞争。通过二次量子化下的双格点、双电子哈伯德型哈密顿量来模拟过渡态的两个相互作用的前线轨道，\n$$\n\\hat{H} \\;=\\; -\\,t \\sum_{\\sigma \\in \\{\\uparrow,\\downarrow\\}} \\left( \\hat{c}_{1\\sigma}^{\\dagger}\\hat{c}_{2\\sigma} + \\hat{c}_{2\\sigma}^{\\dagger}\\hat{c}_{1\\sigma} \\right) \\;+\\; U \\sum_{i=1}^{2} \\hat{n}_{i\\uparrow}\\hat{n}_{i\\downarrow} \\;+\\; \\Delta \\left[ \\left(\\hat{n}_{1\\uparrow}+\\hat{n}_{1\\downarrow}\\right) - \\left(\\hat{n}_{2\\uparrow}+\\hat{n}_{2\\downarrow}\\right) \\right],\n$$\n其中 $t$ 是跃迁参数，$U$ 是在位电子排斥参数，$\\Delta$ 是区分两个前线格点的格点能量不对称性参数。费米子产生和湮灭算符 $\\hat{c}_{i\\sigma}^{\\dagger}$ 和 $\\hat{c}_{i\\sigma}$ 作用于格点 $i \\in \\{1,2\\}$ 和自旋 $\\sigma \\in \\{\\uparrow,\\downarrow\\}$，粒子数算符为 $\\hat{n}_{i\\sigma}=\\hat{c}_{i\\sigma}^{\\dagger}\\hat{c}_{i\\sigma}$。在恰好有 $N=2$ 个电子的扇区中进行计算。设归一化基态为 $\\lvert \\Psi_0 \\rangle$，其定义为 $\\hat{H}$ 在 $N=2$ 扇区中的能量最低的归一化本征向量。\n\n在空间格点基下定义自旋求和的单粒子约化密度矩阵 (one-particle reduced density matrix (1-RDM)) 为\n$$\n\\gamma_{ij} \\;=\\; \\sum_{\\sigma \\in \\{\\uparrow,\\downarrow\\}} \\langle \\Psi_0 \\lvert \\hat{c}_{i\\sigma}^{\\dagger}\\hat{c}_{j\\sigma} \\rvert \\Psi_0 \\rangle, \\quad i,j \\in \\{1,2\\}.\n$$\n设自然轨道占据数是 $2\\times 2$ 矩阵 $\\boldsymbol{\\gamma}$ 的本征值，按 $n_1 \\ge n_2$ 排序，它们满足 $n_1+n_2=2$。定义双自由基指数 $y$ 为\n$$\ny \\;=\\; 1 \\;-\\; \\tfrac{1}{2}\\Big( \\lvert n_1 - 1 \\rvert \\;+\\; \\lvert n_2 - 1 \\rvert \\Big).\n$$\n对于以动态电子关联为主的闭壳层态（$n_1 \\approx 2$ 且 $n_2 \\approx 0$），该指数满足 $y \\approx 0$；对于以强静态电子关联为特征的双自由基（开壳层单重态）（$n_1 \\approx 1$ 且 $n_2 \\approx 1$），该指数满足 $y \\approx 1$。\n\n任务：对于下面测试集中的每个参数三元组 $(t,U,\\Delta)$，计算如上定义的相应双自由基指数 $y$。所有参数均为无量纲。您的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的十进制数列表，其顺序与测试集中的顺序相同。\n\n测试集：\n- 情况 1：$(t,U,\\Delta) = (\\,1.0,\\,0.2,\\,0.0\\,)$.\n- 情况 2：$(t,U,\\Delta) = (\\,1.0,\\,8.0,\\,0.0\\,)$.\n- 情况 3：$(t,U,\\Delta) = (\\,1.0,\\,2.0,\\,0.0\\,)$.\n- 情况 4：$(t,U,\\Delta) = (\\,1.0,\\,4.0,\\,0.5\\,)$.\n- 情况 5：$(t,U,\\Delta) = (\\,0.0,\\,4.0,\\,0.0\\,)$.\n\n最终输出格式：单行，内容为\n$$\n[ y_1, y_2, y_3, y_4, y_5 ]\n$$\n其中 $y_k$ 是情况 $k$ 的双自由基指数，以十进制数表示。输出行中不允许有任何额外的文本或格式。", "solution": "该物理系统由一个最小的双格点、双电子哈密顿量表示，它捕捉了过渡态一对前线轨道中动能离域与在位排斥之间的本质竞争。该哈密顿量，\n$$\n\\hat{H} \\;=\\; -\\,t \\sum_{\\sigma} \\left( \\hat{c}_{1\\sigma}^{\\dagger}\\hat{c}_{2\\sigma} + \\hat{c}_{2\\sigma}^{\\dagger}\\hat{c}_{1\\sigma} \\right) \\;+\\; U \\sum_{i=1}^{2} \\hat{n}_{i\\uparrow}\\hat{n}_{i\\downarrow} \\;+\\; \\Delta \\left[ \\left(\\hat{n}_{1\\uparrow}+\\hat{n}_{1\\downarrow}\\right) - \\left(\\hat{n}_{2\\uparrow}+\\hat{n}_{2\\downarrow}\\right) \\right],\n$$\n平衡了跃迁参数 $t$（有利于离域化和闭壳层特性）与相互作用参数 $U$（惩罚双重占据并有利于局域化和静态关联）。格点能量不对称性 $\\Delta$ 使电子密度偏向一个格点，当其相对于 $t$ 较大时，会减弱双自由基特征。\n\n我们在由四个自旋轨道 $\\{(1\\uparrow),(1\\downarrow),(2\\uparrow),(2\\downarrow)\\}$ 构建的希尔伯特空间上的 $N=2$ 电子扇区中进行计算。斯莱特行列式的数量为 $\\binom{4}{2}=6$。精确方法从第一性原理出发：\n\n1. 将多电子基态 $\\{\\lvert \\Phi_a \\rangle\\}_{a=1}^{6}$ 表示为四个自旋轨道的占据数向量。费米子算符遵守正则反对易关系，确保了正确的相因子。通过逐项应用 $\\hat{H}$ 来构建哈密顿量矩阵 $H_{ab}=\\langle \\Phi_a \\lvert \\hat{H} \\rvert \\Phi_b \\rangle$：\n   - 当两个自旋占据同一格点时，即 $\\hat{n}_{i\\uparrow}\\hat{n}_{i\\downarrow}=1$ 时，相互作用项对对角元素贡献 $U$。\n   - 格点能量项贡献 $\\Delta$ 乘以格点 1 和格点 2 之间总占据数的差值。\n   - 跃迁项连接了因单个自旋为 $\\sigma$ 的电子在格点 1 和 2 之间移动而不同的行列式，其振幅为 $-t$，费米子符号由被湮灭和产生模式之间已占据自旋轨道的宇称决定。\n\n2. 对角化厄米矩阵 $\\mathbf{H}$ 以获得最低本征值及其归一化本征向量。能量最低的归一化本征向量定义了基态 $\\lvert \\Psi_0 \\rangle$。\n\n3. 在空间格点基中计算自旋求和的单粒子约化密度矩阵 (one-particle reduced density matrix (1-RDM))，\n   $$\n   \\gamma_{ij} \\;=\\; \\sum_{\\sigma \\in \\{\\uparrow,\\downarrow\\}} \\langle \\Psi_0 \\lvert \\hat{c}_{i\\sigma}^{\\dagger}\\hat{c}_{j\\sigma} \\rvert \\Psi_0 \\rangle,\\quad i,j\\in\\{1,2\\}.\n   $$\n   这需要对每对 $(i,j)$ 和自旋 $\\sigma$，在 $N=2$ 基中构建算符矩阵，其元素为 $O^{(i,j,\\sigma)}_{ab}=\\langle \\Phi_a \\lvert \\hat{c}_{i\\sigma}^{\\dagger}\\hat{c}_{j\\sigma} \\rvert \\Phi_b \\rangle$。矩阵元素通过对 $\\lvert \\Phi_b \\rangle$ 依次应用湮灭和产生算符得到，并跟踪费米子符号：\n   - 应用 $\\hat{c}_{j\\sigma}$ 从 $(j,\\sigma)$ 移除一个电子（如果存在），符号为 $(-1)^{\\nu_j}$，其中 $\\nu_j$ 是在固定排序中位于 $(j,\\sigma)$ 之前的已占据自旋轨道的数量。\n   - 应用 $\\hat{c}_{i\\sigma}^{\\dagger}$ 向 $(i,\\sigma)$ 添加一个电子（如果不存在），符号为 $(-1)^{\\nu_i'}$，其中 $\\nu_i'$ 是在中间态中位于 $(i,\\sigma)$ 之前的已占据轨道的数量。\n   这些符号的乘积给出了矩阵元素的振幅。对自旋求和得到 $\\gamma_{ij}$。\n\n4. 自然轨道占据数 $\\{n_1,n_2\\}$ 是 $2\\times 2$ 矩阵 $\\boldsymbol{\\gamma}$ 的本征值，按 $n_1 \\ge n_2$ 排序。粒子数守恒确保 $n_1+n_2=2$。\n\n5. 定义双自由基指数\n   $$\n   y \\;=\\; 1 \\;-\\; \\tfrac{1}{2}\\left(\\lvert n_1-1\\rvert+\\lvert n_2-1\\rvert\\right),\n   $$\n   它将闭壳层构型 $\\{n_1,n_2\\}=\\{2,0\\}$ 映射到 $y=0$，将完美的双自由基构型 $\\{n_1,n_2\\}=\\{1,1\\}$ 映射到 $y=1$。接近 $0$ 的 $y$ 值表示以动态关联为主，而接近 $1$ 的值表示显著的静态（多参考）关联，这是双自由基特征的典型表现。\n\n将此过程应用于测试集：\n- 情况 1，参数为 $(t,U,\\Delta)=(1.0,0.2,0.0)$，相互作用相对于跃迁较弱，倾向于形成闭壳层基态，其中 $n_1 \\approx 2$ 且 $n_2 \\approx 0$，因此 $y$ 接近 $0$。\n- 情况 2，参数为 $(1.0,8.0,0.0)$，具有强相互作用，抑制了双重占据，得到 $n_1 \\approx 1$ 且 $n_2 \\approx 1$，因此 $y$ 接近 $1$。\n- 情况 3，参数为 $(1.0,2.0,0.0)$，介于这两个极端之间，得到一个中间值 $y$。\n- 情况 4，参数为 $(1.0,4.0,0.5)$，增加了格点不对称性，导致电子不均匀局域化，与相似 $U/t$ 的对称情况相比，降低了双自由基特征。\n- 情况 5，参数为 $(0.0,4.0,0.0)$，消除了跃迁；能量最低的状态避免了双重占据，在每个格点上放置一个电子，导致 $n_1=n_2=1$ 且 $y=1$（精确值）。\n\n程序从第一性原理出发构建 $\\mathbf{H}$ 及相关单体算符，获得 $\\lvert \\Psi_0 \\rangle$，计算 $\\boldsymbol{\\gamma}$，提取 $\\{n_1,n_2\\}$，对每种情况计算 $y$，并按要求打印列表 $[y_1,y_2,y_3,y_4,y_5]$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# Indices for spin-orbitals: 0: 1↑, 1: 1↓, 2: 2↑, 3: 2↓\nUP = 0\nDOWN = 1\nsite_spin_to_index = {\n    (1, 'up'): 0,\n    (1, 'down'): 1,\n    (2, 'up'): 2,\n    (2, 'down'): 3,\n}\n\ndef popcount_below(state: int, idx: int) -> int:\n    \"\"\"Count number of occupied spin-orbitals with indices < idx.\"\"\"\n    if idx <= 0:\n        return 0\n    mask = (1 << idx) - 1\n    return int(bin(state & mask).count(\"1\"))\n\ndef is_occupied(state: int, idx: int) -> bool:\n    return (state >> idx) & 1 == 1\n\ndef apply_annihilation(state: int, idx: int):\n    \"\"\"Apply c_idx to state. Return (sign, new_state) or (0, None) if not applicable.\"\"\"\n    if not is_occupied(state, idx):\n        return 0.0, None\n    sign = -1.0 if (popcount_below(state, idx) % 2 == 1) else 1.0\n    new_state = state & ~(1 << idx)\n    return sign, new_state\n\ndef apply_creation(state: int, idx: int):\n    \"\"\"Apply c_idx^\\dagger to state. Return (sign, new_state) or (0, None) if not applicable.\"\"\"\n    if is_occupied(state, idx):\n        return 0.0, None\n    sign = -1.0 if (popcount_below(state, idx) % 2 == 1) else 1.0\n    new_state = state | (1 << idx)\n    return sign, new_state\n\ndef generate_basis_Ne(ne=2):\n    \"\"\"Generate basis states (as integers) with exactly ne electrons among 4 spin-orbitals.\"\"\"\n    basis = []\n    for s in range(1 << 4):\n        if bin(s).count(\"1\") == ne:\n            basis.append(s)\n    return basis\n\ndef diagonal_energy_terms(state: int, U: float, Delta: float) -> float:\n    \"\"\"Compute diagonal contributions from U and Delta for a given basis state.\"\"\"\n    n1_up = 1 if is_occupied(state, site_spin_to_index[(1, 'up')]) else 0\n    n1_dn = 1 if is_occupied(state, site_spin_to_index[(1, 'down')]) else 0\n    n2_up = 1 if is_occupied(state, site_spin_to_index[(2, 'up')]) else 0\n    n2_dn = 1 if is_occupied(state, site_spin_to_index[(2, 'down')]) else 0\n    # U term: on-site double occupancy\n    E_U = U * ((n1_up * n1_dn) + (n2_up * n2_dn))\n    # Delta term: site-energy asymmetry\n    E_D = Delta * ((n1_up + n1_dn) - (n2_up + n2_dn))\n    return E_U + E_D\n\ndef build_hamiltonian(t: float, U: float, Delta: float, basis, index_of):\n    \"\"\"Construct the 6x6 Hamiltonian matrix in the N=2 sector.\"\"\"\n    dim = len(basis)\n    H = np.zeros((dim, dim), dtype=float)\n    # Diagonal terms\n    for a, state in enumerate(basis):\n        H[a, a] += diagonal_energy_terms(state, U, Delta)\n    # Hopping terms: -t * sum_sigma (c1σ† c2σ + c2σ† c1σ)\n    for a, state in enumerate(basis):\n        for spin in ('up', 'down'):\n            i1 = site_spin_to_index[(1, spin)]\n            i2 = site_spin_to_index[(2, spin)]\n            # c1† c2\n            sgn1, s1 = apply_annihilation(state, i2)\n            if s1 is not None:\n                sgn2, s2 = apply_creation(s1, i1)\n                if s2 is not None:\n                    b = index_of[s2]\n                    H[b, a] += -t * (sgn1 * sgn2)\n            # c2† c1\n            sgn1, s1 = apply_annihilation(state, i1)\n            if s1 is not None:\n                sgn2, s2 = apply_creation(s1, i2)\n                if s2 is not None:\n                    b = index_of[s2]\n                    H[b, a] += -t * (sgn1 * sgn2)\n    return H\n\ndef build_one_body_operator(i_site: int, j_site: int, spin: str, basis, index_of):\n    \"\"\"Build the operator matrix for c_{i_site,spin}^\\dagger c_{j_site,spin} in N=2 basis.\"\"\"\n    dim = len(basis)\n    O = np.zeros((dim, dim), dtype=float)\n    p = site_spin_to_index[(i_site, spin)]\n    q = site_spin_to_index[(j_site, spin)]\n    for b_idx, state in enumerate(basis):\n        sgn_a, s1 = apply_annihilation(state, q)\n        if s1 is None:\n            continue\n        sgn_c, s2 = apply_creation(s1, p)\n        if s2 is None:\n            continue\n        a_idx = index_of[s2]\n        O[a_idx, b_idx] += sgn_a * sgn_c\n    return O\n\ndef compute_gamma(Psi: np.ndarray, basis, index_of):\n    \"\"\"Compute the 2x2 spin-summed 1-RDM gamma_{ij} in the spatial site basis.\"\"\"\n    # Build operator matrices for each (i,j,spin)\n    # gamma_{ij} = sum_sigma <Psi| c_{iσ}^\\dagger c_{jσ} |Psi>\n    gam = np.zeros((2, 2), dtype=float)\n    for i_site in (1, 2):\n        for j_site in (1, 2):\n            val = 0.0\n            for spin in ('up', 'down'):\n                O = build_one_body_operator(i_site, j_site, spin, basis, index_of)\n                val += float(np.vdot(Psi, O @ Psi).real)\n            gam[i_site - 1, j_site - 1] = val\n    return gam\n\ndef diradical_index_from_gamma(gamma: np.ndarray) -> float:\n    \"\"\"Compute diradical index y from 2x2 gamma.\"\"\"\n    evals = np.linalg.eigvalsh(gamma)\n    # Sort descending\n    evals = np.sort(evals)[::-1]\n    n1, n2 = float(evals[0]), float(evals[1])\n    y = 1.0 - 0.5 * (abs(n1 - 1.0) + abs(n2 - 1.0))\n    return y\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Cases: (t, U, Delta)\n    test_cases = [\n        (1.0, 0.2, 0.0),  # dynamic correlation dominated\n        (1.0, 8.0, 0.0),  # strong static correlation\n        (1.0, 2.0, 0.0),  # intermediate\n        (1.0, 4.0, 0.5),  # asymmetry reduces diradical character\n        (0.0, 4.0, 0.0),  # no hopping: perfect diradical\n    ]\n\n    # Prepare basis and mapping once (N=2 sector)\n    basis = generate_basis_Ne(ne=2)\n    index_of = {s: i for i, s in enumerate(basis)}\n\n    results = []\n    for t, U, Delta in test_cases:\n        H = build_hamiltonian(t, U, Delta, basis, index_of)\n        # Diagonalize\n        evals, evecs = np.linalg.eigh(H)\n        Psi0 = evecs[:, 0]  # ground state eigenvector\n        gamma = compute_gamma(Psi0, basis, index_of)\n        y = diradical_index_from_gamma(gamma)\n        results.append(y)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2454423"}, {"introduction": "在实际的量子化学计算中，诊断所选的单参考方法（如耦合簇理论）是否适用于特定分子至关重要。本练习介绍了 T1 诊断，这是一种广泛使用的启发式方法，通过单激发振幅来评估静态相关的重要性 [@problem_id:2454438]。通过实现这一诊断，您将学会如何利用计算数据来评估计算的可靠性，并判断是否需要使用更高级的多参考方法。", "problem": "您将使用一个简化的、基于第一性原理的耦合簇单激发诊断（T1诊断）定义，以评估取代有机双自由基中静态（非动态）电子相关的起始。考虑一个固定的、非正则的正交轨道基，在此基中，占据子空间与虚拟子空间之间的非对角Fock矩阵元不必为零。对于每个体系，设单激发集由占据轨道指数 $i$ 和虚拟轨道指数 $a$ 索引。近似的单激发振幅由下式给出：\n$$\nt_i^a \\approx \\frac{F_{ai}}{\\varepsilon_a - \\varepsilon_i},\n$$\n其中，$F_{ai}$ 是以哈特里为单位的非对角Fock矩阵元，$\\varepsilon_p$ 是以哈特里为单位的轨道能。T1诊断定义如下：\n$$\nT_1 \\equiv \\frac{\\left(\\sum_{i,a} \\left(t_i^a\\right)^2\\right)^{1/2}}{\\sqrt{n_{\\text{occ}}}},\n$$\n其中，$n_{\\text{occ}}$ 是占据自旋轨道的数量。在开壳层双自由基的情况下，使用常规的启发式阈值\n$$\n\\tau = 0.04,\n$$\n并且当且仅当 $T_1 \\ge \\tau$ 时，判定静态相关开始出现。诊断值 $T_1$ 是无量纲的。\n\n您的任务是实现一个程序，对每个测试用例，使用上述公式计算 $T_1$，并根据所述准则判断是否预测静态相关会起始。所有轨道能和Fock矩阵元都必须以哈特里为单位进行处理。每个测试用例的最终输出必须包含四舍五入到五位小数的 $T_1$ 值（无量纲）以及静态相关起始的相应布尔决策。\n\n测试套件（每个测试用例指定 $n_{\\text{occ}}$、一个 $F_{ai}$ 值列表以及一个相应的能隙 $\\Delta_{ia} = \\varepsilon_a - \\varepsilon_i$ 列表；所有能量均以哈特里为单位，且所有能隙满足 $\\Delta_{ia} > 0$）：\n\n- Case A（中等耦合，较大能隙）：$n_{\\text{occ}} = 5$, $F_{ai} = [0.02, 0.015, 0.01]$, $\\Delta_{ia} = [0.5, 0.6, 0.8]$。\n- Case B（接近阈值的边界情况）：$n_{\\text{occ}} = 2$, $F_{ai} = [0.01, 0.01]$, $\\Delta_{ia} = [0.25, 0.25]$。\n- Case C（小能隙和强耦合）：$n_{\\text{occ}} = 6$, $F_{ai} = [0.03, 0.025, 0.02, 0.02]$, $\\Delta_{ia} = [0.15, 0.2, 0.2, 0.25]$。\n- Case D（无耦合）：$n_{\\text{occ}} = 4$, $F_{ai} = [0.0, 0.0]$, $\\Delta_{ia} = [0.3, 0.4]$。\n- Case E（单一近简并激发）：$n_{\\text{occ}} = 4$, $F_{ai} = [0.005]$, $\\Delta_{ia} = [0.05]$。\n\n要求：\n\n- 对于每个提供的数据对，使用 $t_i^a = F_{ai}/\\Delta_{ia}$ 计算 $t_i^a$，然后为每种情况计算如上定义的 $T_1$。\n- 对于每种情况，将 $T_1$ 与 $\\tau = 0.04$ 进行比较，并根据准则 $T_1 \\ge \\tau$ 判断是否预测静态相关起始。\n- 最终程序输出必须是单行文本，包含一个由方括号括起来的逗号分隔列表。该列表必须按A到E的顺序包含每种情况的结果，即四舍五入到五位小数的 $T_1$ 值（浮点数）紧随其后的布尔决策（使用标记 True 或 False）。例如，输出格式必须为\n\"[T1_A,onset_A,T1_B,onset_B,T1_C,onset_C,T1_D,onset_D,T1_E,onset_E]\"。", "solution": "问题陈述已经过验证，被认为是有效的。它在科学上是合理的，在算术上是适定的，并为得出唯一且可验证的解提供了所有必要的数据。该问题需要计算耦合簇T1诊断值，这是量子化学中用于评估静态电子相关重要性的一个标准度量。\n\n控制方程如下。单激发振幅 $t_i^a$ 用于衡量参考行列式与单激发行列式之间的混合程度，可由一阶微扰理论近似得出：\n$$\nt_i^a \\approx \\frac{F_{ai}}{\\varepsilon_a - \\varepsilon_i} = \\frac{F_{ai}}{\\Delta_{ia}}\n$$\n此处，$F_{ai}$ 表示占据自旋轨道 $i$ 和虚拟自旋轨道 $a$ 之间的Fock矩阵的非对角元，$\\Delta_{ia} = \\varepsilon_a - \\varepsilon_i$ 是相应的轨道能差。所有量均采用原子单位（哈特里）。\n\nT1诊断定义为单激发振幅向量的范数，并用占据轨道数 $n_{\\text{occ}}$ 的平方根进行归一化：\n$$\nT_1 \\equiv \\frac{\\left(\\sum_{i,a} \\left(t_i^a\\right)^2\\right)^{1/2}}{\\sqrt{n_{\\text{occ}}}}\n$$\n此表达式等价于 $T_1 = ||\\mathbf{t}||_2 / \\sqrt{n_{\\text{occ}}}$，其中 $||\\mathbf{t}||_2$ 是振幅向量 $\\mathbf{t} = (t_1, t_2, \\ldots)$ 的欧几里得范数。\n\n如果诊断值超过预定义的阈值 $\\tau$，则判定静态相关是显著的。该问题指定了用于开壳层双自由基的常规阈值：\n$$\n\\tau = 0.04\n$$\n因此，静态相关起始的条件是 $T_1 \\ge \\tau$。\n\n我们继续对每个测试用例进行计算。\n\nCase A:\n给定：$n_{\\text{occ}} = 5$, $F_{ai} = [0.02, 0.015, 0.01]$, $\\Delta_{ia} = [0.5, 0.6, 0.8]$。\n振幅计算如下：\n$t_1 = 0.02 / 0.5 = 0.04$\n$t_2 = 0.015 / 0.6 = 0.025$\n$t_3 = 0.01 / 0.8 = 0.0125$\n振幅的平方和为 $\\sum_{i,a} (t_i^a)^2 = (0.04)^2 + (0.025)^2 + (0.0125)^2 = 0.0016 + 0.000625 + 0.00015625 = 0.00238125$。\nT1诊断值为：\n$$\nT_1 = \\frac{\\sqrt{0.00238125}}{\\sqrt{5}} \\approx \\frac{0.04880}{2.23607} \\approx 0.02182\n$$\n由于 $0.02182 < 0.04$，因此未预测静态相关的起始。结果：$(0.02182, \\text{False})$。\n\nCase B:\n给定：$n_{\\text{occ}} = 2$, $F_{ai} = [0.01, 0.01]$, $\\Delta_{ia} = [0.25, 0.25]$。\n振幅为：\n$t_1 = 0.01 / 0.25 = 0.04$\n$t_2 = 0.01 / 0.25 = 0.04$\n振幅的平方和为 $\\sum_{i,a} (t_i^a)^2 = (0.04)^2 + (0.04)^2 = 0.0016 + 0.0016 = 0.0032$。\nT1诊断值为：\n$$\nT_1 = \\frac{\\sqrt{0.0032}}{\\sqrt{2}} = \\sqrt{\\frac{0.0032}{2}} = \\sqrt{0.0016} = 0.04\n$$\n由于 $0.04 \\ge 0.04$，因此预测静态相关会起始。结果：$(0.04000, \\text{True})$。\n\nCase C:\n给定：$n_{\\text{occ}} = 6$, $F_{ai} = [0.03, 0.025, 0.02, 0.02]$, $\\Delta_{ia} = [0.15, 0.2, 0.2, 0.25]$。\n振幅为：\n$t_1 = 0.03 / 0.15 = 0.2$\n$t_2 = 0.025 / 0.2 = 0.125$\n$t_3 = 0.02 / 0.2 = 0.1$\n$t_4 = 0.02 / 0.25 = 0.08$\n振幅的平方和为 $\\sum_{i,a} (t_i^a)^2 = (0.2)^2 + (0.125)^2 + (0.1)^2 + (0.08)^2 = 0.04 + 0.015625 + 0.01 + 0.0064 = 0.072025$。\nT1诊断值为：\n$$\nT_1 = \\frac{\\sqrt{0.072025}}{\\sqrt{6}} = \\frac{0.268375}{2.44949} \\approx 0.10956\n$$\n由于 $0.10956 \\ge 0.04$，因此预测静态相关会起始。结果：$(0.10956, \\text{True})$。\n\nCase D:\n给定：$n_{\\text{occ}} = 4$, $F_{ai} = [0.0, 0.0]$, $\\Delta_{ia} = [0.3, 0.4]$。\n非对角Fock矩阵元为零，因此所有振幅均为零：$t_i^a = 0$。\n因此，振幅的平方和为 $\\sum_{i,a} (t_i^a)^2 = 0$。\nT1诊断值为：\n$$\nT_1 = \\frac{\\sqrt{0}}{\\sqrt{4}} = 0.0\n$$\n由于 $0.0 < 0.04$，因此未预测静态相关的起始。结果：$(0.00000, \\text{False})$。\n\nCase E:\n给定：$n_{\\text{occ}} = 4$, $F_{ai} = [0.005]$, $\\Delta_{ia} = [0.05]$。\n只有一个显著的激发。其振幅为：\n$t_1 = 0.005 / 0.05 = 0.1$\n振幅的平方和为 $\\sum_{i,a} (t_i^a)^2 = (0.1)^2 = 0.01$。\nT1诊断值为：\n$$\nT_1 = \\frac{\\sqrt{0.01}}{\\sqrt{4}} = \\frac{0.1}{2.0} = 0.05\n$$\n由于 $0.05 \\ge 0.04$，因此预测静态相关会起始。结果：$(0.05000, \\text{True})$。\n\n计算现已完成，将按要求以编程方式实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the T1 diagnostic for several test cases and determines\n    if static correlation onset is predicted.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {'id': 'A', 'n_occ': 5, 'F_ai': [0.02, 0.015, 0.01], 'Delta_ia': [0.5, 0.6, 0.8]},\n        {'id': 'B', 'n_occ': 2, 'F_ai': [0.01, 0.01], 'Delta_ia': [0.25, 0.25]},\n        {'id': 'C', 'n_occ': 6, 'F_ai': [0.03, 0.025, 0.02, 0.02], 'Delta_ia': [0.15, 0.2, 0.2, 0.25]},\n        {'id': 'D', 'n_occ': 4, 'F_ai': [0.0, 0.0], 'Delta_ia': [0.3, 0.4]},\n        {'id': 'E', 'n_occ': 4, 'F_ai': [0.005], 'Delta_ia': [0.05]},\n    ]\n    \n    # Heuristic threshold for static correlation onset\n    tau = 0.04\n    \n    results = []\n    \n    for case in test_cases:\n        n_occ = case['n_occ']\n        # Convert lists to numpy arrays for vectorized operations\n        F_ai = np.array(case['F_ai'])\n        Delta_ia = np.array(case['Delta_ia'])\n        \n        # Calculate the single-excitation amplitudes t_i^a\n        # Handle the case where Delta_ia might contain zeros to avoid division by zero,\n        # although the problem statement guarantees Delta_ia > 0.\n        # Adding a small epsilon or specific check is good practice but not strictly\n        # necessary given the problem constraints.\n        t_ia = F_ai / Delta_ia\n        \n        # Calculate the sum of squares of the amplitudes\n        sum_sq_t = np.sum(t_ia**2)\n        \n        # Calculate the T1 diagnostic\n        # Denominator will not be zero as n_occ is always a positive integer.\n        T1 = np.sqrt(sum_sq_t) / np.sqrt(n_occ)\n        \n        # Compare with the threshold to get the boolean decision\n        onset_predicted = T1 >= tau\n        \n        # Append the formatted results, rounded to five decimal places\n        results.append(f\"{T1:.5f}\")\n        results.append(str(onset_predicted))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2454438"}]}