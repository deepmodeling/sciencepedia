{"hands_on_practices": [{"introduction": "要想真正理解一种计算方法，没有什么比亲手实现其核心方程更有效了。这个实践练习将引导你利用其基本组成部分——轨道能量 $\\varepsilon_p$ 和双电子积分 $\\langle ij \\Vert ab \\rangle$——来计算 MP2 相关能。通过直接使用 MP2 能量公式，你将对电子相关的计算方式有一个具体的认识，同时你还将学习到一种至关重要的实用技巧：外推到完备基组（CBS）极限，以提高计算结果的准确性。[@problem_id:2461929]", "problem": "编写一个完整程序，该程序使用三个相关一致基组计算原子 Argon 的二阶 Møller-Plesset 理论 (MP2) 相关能，并执行完全基组 (CBS) 外推。请使用以下定义和数据。\n\n假设系统由具有轨道能 $\\{\\varepsilon_p\\}$ 的正则 Hartree-Fock (HF) 空间轨道和空间轨道 $i,j$（占据）与 $a,b$（虚拟）上的反对称化双电子积分 $\\langle ij \\Vert ab \\rangle$ 描述。MP2 相关能用这些量表示为\n$$\nE_{\\mathrm{MP2}} \\;=\\; \\sum_{i<j}^{\\mathrm{occ}} \\sum_{a<b}^{\\mathrm{vir}} \\frac{\\left(\\langle ij \\Vert ab \\rangle\\right)^2}{\\varepsilon_i + \\varepsilon_j - \\varepsilon_a - \\varepsilon_b}\\,,\n$$\n其中所有量均以哈特里原子单位表示。\n\n对于基组外推，假设相关能的渐近模型为\n$$\nE_{\\mathrm{c}}(X) \\;=\\; E_{\\mathrm{c}}^{\\mathrm{CBS}} \\;+\\; A \\, X^{-3}\\,,\n$$\n其中基数 $X \\in \\{2,3,4\\}$ 对应于相关一致极化价 X-zeta (cc-pVXZ) 基组：cc-pVDZ ($X=2$)、cc-pVTZ ($X=3$) 和 cc-pVQZ ($X=4$) 。通过使用三个点 $X \\in \\{2,3,4\\}$ 对 $E_{\\mathrm{c}}(X)$ 与 $X^{-3}$ 进行线性最小二乘拟合来估计 $E_{\\mathrm{c}}^{\\mathrm{CBS}}$。\n\n所有能量必须以哈特里（$E_h$）表示，并且所有最终数值结果必须四舍五入到小数点后九位。\n\n使用以下数据定义三个测试用例。在所有情况下，占据轨道能用 $\\varepsilon_i$ 表示，虚拟轨道能用 $\\varepsilon_a$ 表示。占据轨道的指数为 $i \\in \\{0,1,2\\}$，其中 $\\varepsilon_0 = \\varepsilon_{3p_x}$，$\\varepsilon_1 = \\varepsilon_{3p_y}$，$\\varepsilon_2 = \\varepsilon_{3s}$；虚拟轨道的指数为 $a \\in \\{0,1,2\\}$，其中 $\\varepsilon_0 = \\varepsilon_{4s}$，$\\varepsilon_1 = \\varepsilon_{3d}$，$\\varepsilon_2 = \\varepsilon_{4p}$。MP2 求和遍及所有唯一的对 $i<j$ 和 $a<b$。\n\n测试用例 1 (Argon，实际价电子子集)：\n- 轨道能 (哈特里)：\n  - 占据：$\\varepsilon_{3p_x} = -0.5$, $\\varepsilon_{3p_y} = -0.5$, $\\varepsilon_{3s} = -0.9$。\n  - 虚拟：$\\varepsilon_{4s} = 0.1$, $\\varepsilon_{3d} = 0.2$, $\\varepsilon_{4p} = 0.3$。\n- 对于对应于 $X \\in \\{2,3,4\\}$ 的三个基组 $\\mathrm{X} \\in \\{\\mathrm{D},\\mathrm{T},\\mathrm{Q}\\}$，非零反对称化双电子积分 $\\langle ij \\Vert ab \\rangle$ (哈特里)如下：\n  - 对于 $(i,j) = (0,1)$，$(a,b)$ 如下所列：\n    - $(a,b)=(0,1)$: 对于 $\\{\\mathrm{D},\\mathrm{T},\\mathrm{Q}\\}$ 分别为 $\\{0.30,\\,0.33,\\,0.35\\}$。\n    - $(a,b)=(0,2)$: $\\{0.26,\\,0.29,\\,0.31\\}$。\n    - $(a,b)=(1,2)$: $\\{0.24,\\,0.27,\\,0.29\\}$。\n  - 对于 $(i,j) = (0,2)$:\n    - $(a,b)=(0,1)$: $\\{0.28,\\,0.31,\\,0.33\\}$。\n    - $(a,b)=(0,2)$: $\\{0.25,\\,0.28,\\,0.30\\}$。\n    - $(a,b)=(1,2)$: $\\{0.22,\\,0.25,\\,0.27\\}$。\n  - 对于 $(i,j) = (1,2)$:\n    - $(a,b)=(0,1)$: $\\{0.27,\\,0.30,\\,0.32\\}$。\n    - $(a,b)=(0,2)$: $\\{0.24,\\,0.27,\\,0.29\\}$。\n    - $(a,b)=(1,2)$: $\\{0.21,\\,0.24,\\,0.26\\}$。\n\n测试用例 2 (健全性边界：零相关)：\n- 使用与测试用例 1 相同的轨道能。\n- 对于 $\\mathrm{D}、\\mathrm{T}、\\mathrm{Q}$ 中的每一个，设置所有 $\\langle ij \\Vert ab \\rangle = 0$。\n\n测试用例 3 (小数值边缘情况)：\n- 使用与测试用例 1 相同的轨道能。\n- 为每个基组将所有非零 $\\langle ij \\Vert ab \\rangle$ 设置为统一的小值：\n  - 对于 $\\mathrm{D}$：对于所有 $(i<j,a<b)$，$\\langle ij \\Vert ab \\rangle = 1.0 \\times 10^{-3}$。\n  - 对于 $\\mathrm{T}$：对于所有 $(i<j,a<b)$，$\\langle ij \\Vert ab \\rangle = 1.1 \\times 10^{-3}$。\n  - 对于 $\\mathrm{Q}$：对于所有 $(i<j,a<b)$，$\\langle ij \\Vert ab \\rangle = 1.2 \\times 10^{-3}$。\n\n对于每个测试用例，您的程序必须计算 cc-pVDZ ($X=\\mathrm{D}$)、cc-pVTZ ($X=\\mathrm{T}$) 和 cc-pVQZ ($X=\\mathrm{Q}$) 的 MP2 相关能 $E_{\\mathrm{MP2}}$，然后计算 CBS 极限估计值 $E_{\\mathrm{c}}^{\\mathrm{CBS}}$（所有单位均为哈特里）。将报告的每个值四舍五入到小数点后九位。最终输出必须是单行，包含一个由三个列表组成的列表，每个测试用例一个列表，每个内部列表按 $[E_{\\mathrm{D}},E_{\\mathrm{T}},E_{\\mathrm{Q}},E_{\\mathrm{CBS}}]$ 的顺序排列；例如，`[[x_{11},x_{12},x_{13},x_{14}],[x_{21},x_{22},x_{23},x_{24}],[x_{31},x_{32},x_{33},x_{34}]]`，其中所有 $x_{ij}$ 均为哈特里单位的十进制浮点数，四舍五入到小数点后九位。", "solution": "问题陈述已经过验证，并被认定为有效。它在科学上基于量子化学原理，特别是二阶 Møller-Plesset 微扰理论 (MP2) 和完全基组 (CBS) 外推。该问题定义明确，提供了唯一可确定解所需的所有必要数学定义、数据和约束条件。其语言客观，结构逻辑清晰。不存在矛盾、歧义或事实不准确之处。因此，我们可以着手求解。\n\n对于每个测试用例，求解过程分为两个主要计算步骤：首先，计算一系列基组的 MP2 相关能；其次，将这些能量外推至完全基组极限。\n\n**第一部分：MP2 相关能的计算**\n\n二阶 Møller-Plesset (MP2) 相关能 $E_{\\mathrm{MP2}}$ 由以下公式给出：\n$$\nE_{\\mathrm{MP2}} = \\sum_{i<j}^{\\mathrm{occ}} \\sum_{a<b}^{\\mathrm{vir}} \\frac{\\left(\\langle ij \\Vert ab \\rangle\\right)^2}{\\varepsilon_i + \\varepsilon_j - \\varepsilon_a - \\varepsilon_b}\n$$\n在此，指数 $i, j$ 遍及占据的正则 Hartree-Fock 空间轨道集，指数 $a, b$ 遍及虚拟轨道集。量 $\\varepsilon_p$ 代表轨道能，$\\langle ij \\Vert ab \\rangle$ 是空间轨道上的反对称化双电子积分。所有量均以哈特里原子单位表示。\n\n问题将占据和虚拟轨道指数集分别定义为 $i,j \\in \\{0,1,2\\}$ 和 $a,b \\in \\{0,1,2\\}$。求和是针对唯一的对，即 $i<j$ 和 $a<b$。唯一的指数对是 $(0,1), (0,2)$ 和 $(1,2)$。这导致每个基组的双重求和中总共有 $3 \\times 3 = 9$ 个项。\n\n提供的轨道能如下：\n- 占据：$\\varepsilon_0 = -0.5 \\, E_h$, $\\varepsilon_1 = -0.5 \\, E_h$, $\\varepsilon_2 = -0.9 \\, E_h$。\n- 虚拟：$\\varepsilon_{a=0} = 0.1 \\, E_h$, $\\varepsilon_{a=1} = 0.2 \\, E_h$, $\\varepsilon_{a=2} = 0.3 \\, E_h$。\n\n能量分母 $D_{ijab} = \\varepsilon_i + \\varepsilon_j - \\varepsilon_a - \\varepsilon_b$ 在所有测试用例和基组中都是恒定的。我们计算这9个不同的分母值：\n- 对于 $(i,j)=(0,1)$, $\\varepsilon_i + \\varepsilon_j = -1.0 \\, E_h$。\n  - 对于 $(a,b)=(0,1)$, $\\varepsilon_a + \\varepsilon_b = 0.3 \\, E_h \\implies D_{0101} = -1.3 \\, E_h$。\n  - 对于 $(a,b)=(0,2)$, $\\varepsilon_a + \\varepsilon_b = 0.4 \\, E_h \\implies D_{0102} = -1.4 \\, E_h$。\n  - 对于 $(a,b)=(1,2)$, $\\varepsilon_a + \\varepsilon_b = 0.5 \\, E_h \\implies D_{0112} = -1.5 \\, E_h$。\n- 对于 $(i,j)=(0,2)$, $\\varepsilon_i + \\varepsilon_j = -1.4 \\, E_h$。\n  - 对于 $(a,b)=(0,1)$, $\\varepsilon_a + \\varepsilon_b = 0.3 \\, E_h \\implies D_{0201} = -1.7 \\, E_h$。\n  - 对于 $(a,b)=(0,2)$, $\\varepsilon_a + \\varepsilon_b = 0.4 \\, E_h \\implies D_{0202} = -1.8 \\, E_h$。\n  - 对于 $(a,b)=(1,2)$, $\\varepsilon_a + \\varepsilon_b = 0.5 \\, E_h \\implies D_{0212} = -1.9 \\, E_h$。\n- 对于 $(i,j)=(1,2)$, $\\varepsilon_i + \\varepsilon_j = -1.4 \\, E_h$。\n  - 对于 $(a,b)=(0,1)$, $\\varepsilon_a + \\varepsilon_b = 0.3 \\, E_h \\implies D_{1201} = -1.7 \\, E_h$。\n  - 对于 $(a,b)=(0,2)$, $\\varepsilon_a + \\varepsilon_b = 0.4 \\, E_h \\implies D_{1202} = -1.8 \\, E_h$。\n  - 对于 $(a,b)=(1,2)$, $\\varepsilon_a + \\varepsilon_b = 0.5 \\, E_h \\implies D_{1212} = -1.9 \\, E_h$。\n\n对于每个指定的基组（$\\mathrm{D}$ 代表 cc-pVDZ, $\\mathrm{T}$ 代表 cc-pVTZ, $\\mathrm{Q}$ 代表 cc-pVQZ），都给定了一组相应的积分值 $\\langle ij \\Vert ab \\rangle$。该基组的 MP2 能量，例如 $E_{\\mathrm{D}}$，是通过对9个项求和来计算的，其中每个项使用来自基组 $\\mathrm{D}$ 的提供数据中的适当积分值和相应的预计算分母。对基组 $\\mathrm{T}$ 和 $\\mathrm{Q}$ 重复此过程以获得 $E_{\\mathrm{T}}$ 和 $E_{\\mathrm{Q}}$。\n\n**第二部分：完全基组 (CBS) 外推**\n\n问题指定了相关能 $E_{\\mathrm{c}}(X)$ 作为基组基数 $X$ 的函数的渐近模型：\n$$\nE_{\\mathrm{c}}(X) = E_{\\mathrm{c}}^{\\mathrm{CBS}} + A \\, X^{-3}\n$$\n在此，$E_{\\mathrm{c}}(X)$ 是使用 cc-pVXZ 基组计算的相关能（在我们的情况下，是 MP2 能量 $E_{\\mathrm{D}}$, $E_{\\mathrm{T}}$, 和 $E_{\\mathrm{Q}}$），$E_{\\mathrm{c}}^{\\mathrm{CBS}}$ 是期望的完全基组极限下的外推能量，而 $A$ 是一个拟合参数。基数分别为 $X=2$（cc-pVDZ）、$X=3$（cc-pVTZ）和 $X=4$（cc-pVQZ）。\n\n该模型描述了一种线性关系。如果我们定义因变量 $y_X = E_{\\mathrm{c}}(X)$ 和自变量 $z_X = X^{-3}$，则方程变为 $y_X = A z_X + E_{\\mathrm{c}}^{\\mathrm{CBS}}$。值 $E_{\\mathrm{c}}^{\\mathrm{CBS}}$ 是将 $E_{\\mathrm{c}}(X)$ 对 $X^{-3}$ 作图所得直线的 y 轴截距。\n\n对于每个测试用例，我们有三个数据点 $(z_X, y_X)$：\n- $(z_2, y_2) = (2^{-3}, E_{\\mathrm{D}}) = (0.125, E_{\\mathrm{D}})$\n- $(z_3, y_3) = (3^{-3}, E_{\\mathrm{T}}) \\approx (0.037037..., E_{\\mathrm{T}})$\n- $(z_4, y_4) = (4^{-3}, E_{\\mathrm{Q}}) = (0.015625, E_{\\mathrm{Q}})$\n\n为了找到 $E_{\\mathrm{c}}^{\\mathrm{CBS}}$，我们对这三个点执行线性最小二乘回归。所得回归线的截距提供了 $E_{\\mathrm{c}}^{\\mathrm{CBS}}$ 的估计值。这是一个标准的统计过程，可以使用诸如 `scipy.stats.linregress` 之类的数值库来实现。\n\n**算法总结**\n\n对于每个测试用例，总体算法如下：\n$1$. 定义恒定的轨道能分母 $D_{ijab}$。\n$2$. 对于每个基组 ($\\mathrm{D}, \\mathrm{T}, \\mathrm{Q}$)：\n    a. 检索指定的双电子积分集 $\\langle ij \\Vert ab \\rangle$。\n    b. 通过对9个项 $\\left(\\langle ij \\Vert ab \\rangle\\right)^2 / D_{ijab}$ 求和来计算 MP2 能量（$E_{\\mathrm{D}}$, $E_{\\mathrm{T}}$, 或 $E_{\\mathrm{Q}}$）。\n$3$. 构建自变量集 $z = [2^{-3}, 3^{-3}, 4^{-3}]$ 和因变量集 $y=[E_{\\mathrm{D}}, E_{\\mathrm{T}}, E_{\\mathrm{Q}}]$。\n$4$. 对 $(z, y)$ 数据点执行线性回归，以找到截距，即 $E_{\\mathrm{c}}^{\\mathrm{CBS}}$。\n$5$. 按要求收集四个值（$E_{\\mathrm{D}}, E_{\\mathrm{T}}, E_{\\mathrm{Q}}, E_{\\mathrm{c}}^{\\mathrm{CBS}}$）并四舍五入到小数点后九位。\n实现将封装此逻辑，处理所有三个测试用例，并将最终输出格式化为单个列表的列表。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import linregress\n\ndef solve():\n    \"\"\"\n    Computes MP2 correlation energies for three basis sets and extrapolates\n    to the Complete Basis Set (CBS) limit for three test cases.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Test Case 1: Argon, realistic valence subset\n        {\n            \"name\": \"Argon, realistic valence subset\",\n            \"integrals_D\": {\n                (0, 1): {(0, 1): 0.30, (0, 2): 0.26, (1, 2): 0.24},\n                (0, 2): {(0, 1): 0.28, (0, 2): 0.25, (1, 2): 0.22},\n                (1, 2): {(0, 1): 0.27, (0, 2): 0.24, (1, 2): 0.21},\n            },\n            \"integrals_T\": {\n                (0, 1): {(0, 1): 0.33, (0, 2): 0.29, (1, 2): 0.27},\n                (0, 2): {(0, 1): 0.31, (0, 2): 0.28, (1, 2): 0.25},\n                (1, 2): {(0, 1): 0.30, (0, 2): 0.27, (1, 2): 0.24},\n            },\n            \"integrals_Q\": {\n                (0, 1): {(0, 1): 0.35, (0, 2): 0.31, (1, 2): 0.29},\n                (0, 2): {(0, 1): 0.33, (0, 2): 0.30, (1, 2): 0.27},\n                (1, 2): {(0, 1): 0.32, (0, 2): 0.29, (1, 2): 0.26},\n            }\n        },\n        # Test Case 2: Sanity boundary: zero correlation\n        {\n            \"name\": \"Sanity boundary: zero correlation\",\n            \"integrals_D\": {\n                (0, 1): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n                (0, 2): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n                (1, 2): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n            },\n            \"integrals_T\": {\n                (0, 1): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n                (0, 2): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n                (1, 2): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n            },\n            \"integrals_Q\": {\n                (0, 1): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n                (0, 2): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n                (1, 2): {(0, 1): 0.0, (0, 2): 0.0, (1, 2): 0.0},\n            }\n        },\n        # Test Case 3: Small-magnitude edge case\n        {\n            \"name\": \"Small-magnitude edge case\",\n            \"integrals_D\": {\n                (0, 1): {(0, 1): 1e-3, (0, 2): 1e-3, (1, 2): 1e-3},\n                (0, 2): {(0, 1): 1e-3, (0, 2): 1e-3, (1, 2): 1e-3},\n                (1, 2): {(0, 1): 1e-3, (0, 2): 1e-3, (1, 2): 1e-3},\n            },\n            \"integrals_T\": {\n                (0, 1): {(0, 1): 1.1e-3, (0, 2): 1.1e-3, (1, 2): 1.1e-3},\n                (0, 2): {(0, 1): 1.1e-3, (0, 2): 1.1e-3, (1, 2): 1.1e-3},\n                (1, 2): {(0, 1): 1.1e-3, (0, 2): 1.1e-3, (1, 2): 1.1e-3},\n            },\n            \"integrals_Q\": {\n                (0, 1): {(0, 1): 1.2e-3, (0, 2): 1.2e-3, (1, 2): 1.2e-3},\n                (0, 2): {(0, 1): 1.2e-3, (0, 2): 1.2e-3, (1, 2): 1.2e-3},\n                (1, 2): {(0, 1): 1.2e-3, (0, 2): 1.2e-3, (1, 2): 1.2e-3},\n            }\n        }\n    ]\n\n    # Constants and shared data\n    occ_energies = {-0.5, -0.5, -0.9}\n    virt_energies = {0.1, 0.2, 0.3}\n    \n    eps_occ = {-0.5, -0.5, -0.9}\n    eps_i_map = {0: -0.5, 1: -0.5, 2: -0.9}\n    eps_a_map = {0: 0.1, 1: 0.2, 2: 0.3}\n\n    occ_pairs = [(0, 1), (0, 2), (1, 2)]\n    virt_pairs = [(0, 1), (0, 2), (1, 2)]\n\n    denominators = {}\n    for i, j in occ_pairs:\n        for a, b in virt_pairs:\n            denominators[(i, j, a, b)] = eps_i_map[i] + eps_i_map[j] - eps_a_map[a] - eps_a_map[b]\n\n    def calculate_mp2_energy(integrals):\n        energy = 0.0\n        for i, j in occ_pairs:\n            for a, b in virt_pairs:\n                integral_val = integrals[(i, j)][(a, b)]\n                denominator = denominators[(i, j, a, b)]\n                if denominator != 0:\n                    energy += integral_val**2 / denominator\n        return energy\n\n    all_results = []\n    for case in test_cases:\n        E_D = calculate_mp2_energy(case[\"integrals_D\"])\n        E_T = calculate_mp2_energy(case[\"integrals_T\"])\n        E_Q = calculate_mp2_energy(case[\"integrals_Q\"])\n\n        # CBS Extrapolation\n        X_vals = np.array([2, 3, 4])\n        energies = np.array([E_D, E_T, E_Q])\n        x_inv_cubed = 1 / (X_vals**3)\n\n        # Handle the trivial case to avoid polyfit/linregress warnings\n        if np.all(energies == 0):\n            E_CBS = 0.0\n        else:\n            # Linear regression: E(X) = A * X**(-3) + E_CBS\n            # slope is A, intercept is E_CBS\n            regression_result = linregress(x_inv_cubed, energies)\n            E_CBS = regression_result.intercept\n\n        case_results = [\n            round(E_D, 9),\n            round(E_T, 9),\n            round(E_Q, 9),\n            round(E_CBS, 9)\n        ]\n        all_results.append([f\"{res:.9f}\" for res in case_results])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(['[' + ','.join(res) + ']' for res in all_results])}]\")\n\nsolve()\n```", "id": "2461929"}, {"introduction": "尽管 MP2 是一个捕获动态电子相关的强大工具，但它建立在有其根本局限性的微扰理论之上。本练习使用一个简化的模型体系，来探究当 MP2 遇到近简并电子态时会发生什么——这种情况在拉伸的化学键或某些激发态中很常见。通过将 MP2 的结果与精确解进行对比，你将揭示 MP2 的“阿喀琉斯之踵”，并理解为何有时必须使用多参考方法。[@problem_id:2461933]", "problem": "考虑一个铍型原子的最小双行列式模型，该模型分离了从双占据 $2s$ 轨道到双占据 $2p$ 轨道的近简并双激发。在由两个归一化的Slater行列式构成的基中进行计算，这两个基分别是闭壳层参考态 $\\lvert ss \\rangle$ 和双激发组态 $\\lvert pp \\rangle$，两者均为自旋单重态。限制在该子空间中的电子哈密顿量由以下实对称矩阵表示\n$$\nH \\;=\\; \\begin{pmatrix}\nE_{ss} & V \\\\\nV & E_{pp}\n\\end{pmatrix},\n$$\n其中 $E_{ss}$ 和 $E_{pp}$ 是两个行列式的对角矩阵元（总电子能量，单位为Hartree），$V \\ge 0$ 是由 $\\lvert ss \\rangle$ 和 $\\lvert pp \\rangle$ 之间的反对称化双电子相互作用引起的非对角耦合项。参数 $V$ 模拟了将闭壳层基态组态与近简并双激发混合的有效双电子积分。在整个过程中，使用Hartree作为能量单位。\n\n将相关能定义为相互作用的基态能量与参考态能量 $E_{ss}$ 之差，\n$$\nE_{\\mathrm{corr}} \\;=\\; E_{\\mathrm{ground}} \\;-\\; E_{ss}.\n$$\n\n任务：\n1. 使用二阶Møller-Plesset理论 (MP2)，此处定义为以非微扰哈密顿量 $H_0 = \\operatorname{diag}(E_{ss}, E_{pp})$ 和微扰 $H' = H - H_0$ 进行的二阶Rayleigh-Schrödinger微扰理论，计算下面每个测试案例的MP2相关能 $E_{\\mathrm{corr}}^{\\mathrm{MP2}}$。\n2. 使用单双激发耦合簇理论 (CCSD)，对于此双行列式子空间中的两个电子，该方法与在此基中对 $H$ 进行精确对角化的结果一致，计算CCSD相关能 $E_{\\mathrm{corr}}^{\\mathrm{CCSD}}$，其值为 $H$ 的最低本征值与 $E_{ss}$ 之差。\n\n测试组（每个元组列出 $(E_{ss}, E_{pp}, V)$，单位均为Hartree）：\n- 案例1（充分分离）：$(0.000000, 0.500000, 0.100000)$\n- 案例2（近简并）：$(0.000000, 0.050000, 0.100000)$\n- 案例3（近简并极限）：$(0.000000, 0.000001, 0.100000)$\n- 案例4（无耦合边界）：$(0.000000, 0.500000, 0.000000)$\n\n对于每个案例，输出一个列表，其中包含 $E_{\\mathrm{corr}}^{\\mathrm{MP2}}$ 和 $E_{\\mathrm{corr}}^{\\mathrm{CCSD}}$，按此顺序排列，两者均以Hartree为单位表示并四舍五入到六位小数。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含所有案例的结果，形式为一个由各案例列表组成的、以逗号分隔的列表，并用方括号括起，例如：\n[[x_1,y_1],[x_2,y_2],[x_3,y_3],[x_4,y_4]],\n其中 $x_k$ 和 $y_k$ 是案例 $k$ 的四舍五入后的浮点数，单位为Hartree。", "solution": "对问题陈述进行验证。\n\n逐字提取的已知条件如下：\n- 一个具有归一化基态 $\\lvert ss \\rangle$ 和 $\\lvert pp \\rangle$ 的双行列式模型。\n- 在此基中的哈密顿矩阵：\n$$\nH \\;=\\; \\begin{pmatrix}\nE_{ss} & V \\\\\nV & E_{pp}\n\\end{pmatrix}\n$$\n其中 $V \\ge 0$。能量单位为Hartree。\n- 相关能定义：$E_{\\mathrm{corr}} \\;=\\; E_{\\mathrm{ground}} \\;-\\; E_{ss}$。\n- 任务1：使用二阶Rayleigh-Schrödinger微扰理论，以 $H_0 = \\operatorname{diag}(E_{ss}, E_{pp})$ 为非微扰哈密顿量，以 $H' = H - H_0$ 为微扰，计算MP2相关能 $E_{\\mathrm{corr}}^{\\mathrm{MP2}}$。\n- 任务2：计算CCSD相关能 $E_{\\mathrm{corr}}^{\\mathrm{CCSD}}$，定义为对 $H$ 进行精确对角化的结果，其中 $E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = (\\text{H的最低本征值}) - E_{ss}$。\n- 测试案例 $(E_{ss}, E_{pp}, V)$: $(0.0, 0.5, 0.1)$、$(0.0, 0.05, 0.1)$、$(0.0, 0.000001, 0.1)$、$(0.0, 0.5, 0.0)$。\n- 输出要求：一个列表的列表 `[[mp2_1, ccsd_1], [mp2_2, ccsd_2], ...]`，数值四舍五入到六位小数。\n\n问题被评估为有效。它在科学上基于标准的量子力学方法（微扰理论，组态相互作用），数学上是适定的，并提供了一套完整、明确且一致的数据和指令。该模型是量子化学中的一个标准教学工具。我们开始进行求解。\n\n求解过程需要推导两个量：二阶Møller-Plesset (MP2) 相关能和通过精确对角化得到的、此处等同于单双激发耦合簇理论 (CCSD) 的相关能。\n\n首先，我们处理MP2相关能。哈密顿量被划分为一个零阶部分 $H_0$ 和一个微扰部分 $H'$。\n$$\nH_0 = \\begin{pmatrix} E_{ss} & 0 \\\\ 0 & E_{pp} \\end{pmatrix}, \\quad H' = \\begin{pmatrix} 0 & V \\\\ V & 0 \\end{pmatrix}\n$$\n$H_0$ 的非微扰本征态就是基态本身：能量为 $E_0^{(0)} = E_{ss}$ 的 $\\lvert ss \\rangle$ 和能量为 $E_1^{(0)} = E_{pp}$ 的 $\\lvert pp \\rangle$。我们取 $\\lvert ss \\rangle$ 为我们的参考态。\n\n能量校正通过标准的Rayleigh-Schrödinger微扰理论求得。\n一阶能量校正是微扰项在参考态中的期望值：\n$$\nE^{(1)} = \\langle ss | H' | ss \\rangle = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} 0 & V \\\\ V & 0 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = 0\n$$\n二阶能量校正由以下公式给出：\n$$\nE^{(2)} = \\sum_{k \\neq 0} \\frac{|\\langle \\psi_k^{(0)} | H' | \\psi_0^{(0)} \\rangle|^2}{E_0^{(0)} - E_k^{(0)}}\n$$\n在我们的二能级系统中，求和只包含一项，即对应于态 $\\lvert pp \\rangle$ 的 $k=1$。\n所需的矩阵元为：\n$$\n\\langle pp | H' | ss \\rangle = \\begin{pmatrix} 0 & 1 \\end{pmatrix} \\begin{pmatrix} 0 & V \\\\ V & 0 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = V\n$$\n将此代入 $E^{(2)}$ 的公式，得到：\n$$\nE^{(2)} = \\frac{|\\langle pp | H' | ss \\rangle|^2}{E_{ss} - E_{pp}} = \\frac{V^2}{E_{ss} - E_{pp}}\n$$\nMP2相关能 $E_{\\mathrm{corr}}^{\\mathrm{MP2}}$ 定义为这个二阶能量校正。\n$$\nE_{\\mathrm{corr}}^{\\mathrm{MP2}} = E^{(2)} = \\frac{V^2}{E_{ss} - E_{pp}}\n$$\n这个结果揭示了非简并微扰理论的致命缺陷：当能量分母 $E_{ss} - E_{pp}$ 趋于零时，校正值会发散。\n\n其次，我们来处理CCSD相关能，它是通过对完整哈密顿量 $H$ 进行精确对角化得到的。我们通过求解久期方程 $\\det(H - \\lambda I) = 0$ 来寻找 $H$ 的本征值 $\\lambda$。\n$$\n\\det \\begin{pmatrix} E_{ss} - \\lambda & V \\\\ V & E_{pp} - \\lambda \\end{pmatrix} = (E_{ss} - \\lambda)(E_{pp} - \\lambda) - V^2 = 0\n$$\n这得到了一个二次方程 $\\lambda^2 - (E_{ss} + E_{pp})\\lambda + E_{ss}E_{pp} - V^2 = 0$。其解由二次公式给出：\n$$\n\\lambda_{\\pm} = \\frac{(E_{ss} + E_{pp}) \\pm \\sqrt{(E_{ss} + E_{pp})^2 - 4(E_{ss}E_{pp} - V^2)}}{2} = \\frac{E_{ss} + E_{pp} \\pm \\sqrt{(E_{ss} - E_{pp})^2 + 4V^2}}{2}\n$$\n基态能量 $E_{\\mathrm{ground}}$ 是较小的本征值 $\\lambda_{-}$。\n$$\nE_{\\mathrm{ground}} = \\frac{E_{ss} + E_{pp} - \\sqrt{(E_{ss} - E_{pp})^2 + 4V^2}}{2}\n$$\n相关能则为 $E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = E_{\\mathrm{ground}} - E_{ss}$。\n$$\nE_{\\mathrm{corr}}^{\\mathrm{CCSD}} = \\frac{E_{ss} + E_{pp} - \\sqrt{(E_{ss} - E_{pp})^2 + 4V^2}}{2} - E_{ss} = \\frac{E_{pp} - E_{ss} - \\sqrt{(E_{ss} - E_{pp})^2 + 4V^2}}{2}\n$$\n该表达式即使对于简并体系（$E_{ss} = E_{pp}$）也有效，此时它正确地给出 $E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = -V$。\n\n现在我们将这两个公式应用于所提供的测试案例。\n\n案例 1：$(E_{ss}, E_{pp}, V) = (0.0, 0.5, 0.1)$。\n$E_{\\mathrm{corr}}^{\\mathrm{MP2}} = \\frac{0.1^2}{0.0 - 0.5} = \\frac{0.01}{-0.5} = -0.02$。\n$E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = \\frac{0.5 - 0.0 - \\sqrt{(0.0 - 0.5)^2 + 4(0.1)^2}}{2} = \\frac{0.5 - \\sqrt{0.25 + 0.04}}{2} = \\frac{0.5 - \\sqrt{0.29}}{2} \\approx -0.019258$。\n在这种非简并情况下，MP2提供了一个合理的近似。\n\n案例 2：$(E_{ss}, E_{pp}, V) = (0.0, 0.05, 0.1)$。\n$E_{\\mathrm{corr}}^{\\mathrm{MP2}} = \\frac{0.1^2}{0.0 - 0.05} = \\frac{0.01}{-0.05} = -0.2$。\n$E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = \\frac{0.05 - 0.0 - \\sqrt{(0.0 - 0.05)^2 + 4(0.1)^2}}{2} = \\frac{0.05 - \\sqrt{0.0025 + 0.04}}{2} = \\frac{0.05 - \\sqrt{0.0425}}{2} \\approx -0.078078$。\n在近简并情况下，MP2的结果在定性上是错误的，它显著高估了相关能的大小。\n\n案例 3：$(E_{ss}, E_{pp}, V) = (0.0, 0.000001, 0.1)$。\n$E_{\\mathrm{corr}}^{\\mathrm{MP2}} = \\frac{0.1^2}{0.0 - 0.000001} = \\frac{0.01}{-10^{-6}} = -10000$。\n$E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = \\frac{0.000001 - 0.0 - \\sqrt{(0.0 - 0.000001)^2 + 4(0.1)^2}}{2} = \\frac{10^{-6} - \\sqrt{10^{-12} + 0.04}}{2} \\approx \\frac{10^{-6} - 0.2}{2} \\approx -0.1$。\n更精确地计算，结果为 $-0.0999995...$，四舍五入后为 $-0.100000$。\n这个案例展示了MP2在处理准简并态时的灾难性失败，得出了一个不合物理的巨大相关能，而非微扰的CCSD方法则保持稳定，并给出了正确的极限值 $-V = -0.1$。\n\n案例 4：$(E_{ss}, E_{pp}, V) = (0.0, 0.5, 0.0)$。\n$E_{\\mathrm{corr}}^{\\mathrm{MP2}} = \\frac{0.0^2}{0.0 - 0.5} = 0$。\n$E_{\\mathrm{corr}}^{\\mathrm{CCSD}} = \\frac{0.5 - 0.0 - \\sqrt{(0.0 - 0.5)^2 + 4(0.0)^2}}{2} = \\frac{0.5 - \\sqrt{0.25}}{2} = \\frac{0.5 - 0.5}{2} = 0$。\n在没有耦合（$V=0$）的情况下，组态之间没有相互作用。因此，在参考的Hartree-Fock描述之外不存在相关能，两种方法都正确地得出零。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of calculating MP2 and CCSD correlation energies\n    for a two-level quantum system.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each tuple contains (Ess, Epp, V) in Hartree units.\n    test_cases = [\n        (0.000000, 0.500000, 0.100000), # Case 1: well separated\n        (0.000000, 0.050000, 0.100000), # Case 2: near-degenerate\n        (0.000000, 0.000001, 0.100000), # Case 3: nearly degenerate limit\n        (0.000000, 5.000000e-01, 0.000000), # Case 4: no coupling\n    ]\n\n    all_results = []\n    for case in test_cases:\n        Ess, Epp, V = case\n\n        # Task 1: Calculate MP2 correlation energy\n        # E_corr_mp2 = V^2 / (Ess - Epp)\n        # Non-degenerate perturbation theory is used.\n        # The denominator (Ess - Epp) approaches zero in case 3,\n        # demonstrating the characteristic failure of MP2 for near-degenerate systems.\n        # The problem inputs do not result in division by exactly zero.\n        denominator_mp2 = Ess - Epp\n        e_corr_mp2 = (V**2) / denominator_mp2\n\n        # Task 2: Calculate CCSD (exact) correlation energy\n        # This is derived from the lowest eigenvalue of the 2x2 Hamiltonian.\n        # E_corr_ccsd = (Epp - Ess - sqrt((Ess - Epp)^2 + 4*V^2)) / 2\n        delta_E = Epp - Ess\n        e_corr_ccsd = (delta_E - np.sqrt(delta_E**2 + 4 * V**2)) / 2\n\n        # Append the pair of rounded results for the current case.\n        # The problem requires rounding to six decimal places.\n        all_results.append([\n            round(e_corr_mp2, 6),\n            round(e_corr_ccsd, 6)\n        ])\n\n    # Final print statement in the exact required format.\n    # The format is a string representation of a list of lists,\n    # with no spaces and with all numbers formatted to 6 decimal places.\n    case_strings = []\n    for result_pair in all_results:\n        # Format each number to ensure six decimal places are shown, e.g., 0.000000\n        formatted_pair = f\"[{result_pair[0]:.6f},{result_pair[1]:.6f}]\"\n        case_strings.append(formatted_pair)\n    \n    final_output_string = f\"[{','.join(case_strings)}]\"\n    print(final_output_string)\n\nsolve()\n```", "id": "2461933"}, {"introduction": "相关能并不仅仅是一个抽象的数字，它反映了电子在相互回避时发生的物理重组。本实践通过对 MP2 和 Hartree-Fock 电子密度之差 $\\Delta \\rho(\\mathbf{r}) = \\rho_{\\mathrm{MP2}}(\\mathbf{r}) - \\rho_{\\mathrm{HF}}(\\mathbf{r})$ 进行建模，为这一效应提供了直观的可视化。通过计算水二聚体的密度差场，你将亲眼看到电子相关如何增强分子间相互作用，并重塑分子内部的电荷分布。[@problem_id:2461938]", "problem": "需要您实现一个完整的程序，为水二聚体构建一个最小化的、自洽的二阶 Møller-Plesset 微扰理论 (MP2) 与 Hartree-Fock (HF) 理论之间的电子密度差模型，并计算该密度差的量化诊断指标。目标是通过在三维域和选定点上评估场 $\\Delta \\rho(\\mathbf{r}) = \\rho_{\\mathrm{MP2}}(\\mathbf{r}) - \\rho_{\\mathrm{HF}}(\\mathbf{r})$，来表示电子相关如何影响电荷分布。\n\n模型与定义：\n1) 考虑一个由两个水单体（表示为 A 和 B）组成的水二聚体。所有位置坐标均使用原子单位长度（玻尔）。设 O–H 共价键长为 $b = 1.809$，H–O–H 键角为 $\\theta_{\\mathrm{HOH}} = 104.5$ 度。原子位置如下：\n- 单体 A：\n  - 氧原子 $\\mathrm{O_A}$位于 $\\mathbf{R}_{\\mathrm{O_A}} = (0,0,0)$。\n  - 氢原子 $\\mathrm{H_{A1}}$ 和 $\\mathrm{H_{A2}}$ 位于 $xy$-平面内，坐标分别为\n    $\\mathbf{R}_{\\mathrm{H_{A1}}} = \\left(b \\cos\\left(\\frac{\\theta_{\\mathrm{HOH}}}{2}\\right), b \\sin\\left(\\frac{\\theta_{\\mathrm{HOH}}}{2}\\right), 0\\right)$ 和\n    $\\mathbf{R}_{\\mathrm{H_{A2}}} = \\left(b \\cos\\left(\\frac{\\theta_{\\mathrm{HOH}}}{2}\\right), -b \\sin\\left(\\frac{\\theta_{\\mathrm{HOH}}}{2}\\right), 0\\right)$。\n- 单体 B：\n  - 氧原子 $\\mathrm{O_B}$ 位于 $\\mathbf{R}_{\\mathrm{O_B}} = (0,0,5.5)$。\n  - 一个氢原子 $\\mathrm{H_{B1}}$ 沿 $z$ 轴负方向，从 $\\mathrm{O_B}$ 处延伸，位于 $\\mathbf{R}_{\\mathrm{H_{B1}}} = (0,0,5.5 - b)$。\n  - 第二个氢原子 $\\mathrm{H_{B2}}$ 位于 $xz$-平面内，坐标为\n    $\\mathbf{R}_{\\mathrm{H_{B2}}} = \\mathbf{R}_{\\mathrm{O_B}} + b \\left( \\sin(\\varphi), 0, \\cos(\\varphi) \\right)$，其中 $\\varphi$ 以度为单位，其选择是为了使 $\\mathrm{O_B}$ 处的 H–O–H 键角为 $104.5$ 度，即 $\\varphi = 75.5$。\n\n2) 将电子密度 $\\rho_{\\mathrm{HF}}(\\mathbf{r})$ 和 $\\rho_{\\mathrm{MP2}}(\\mathbf{r})$ 表示为归一化的、球对称的、以原子为中心的高斯分量的总和。对于中心在 $\\mathbf{R}$、指数为 $\\alpha$ 的任意原子中心高斯分量，定义归一化的基密度\n$$\ng_{\\alpha}(\\mathbf{r}-\\mathbf{R}) = \\left(\\frac{\\alpha}{\\pi}\\right)^{3/2} \\exp\\!\\left(-\\alpha \\lVert \\mathbf{r}-\\mathbf{R} \\rVert^2\\right),\n$$\n其在整个空间上的积分为 $1$。对于每个原子，电子密度是这些分量的加权和，其中每个权重是分配给该分量的非负电子数。\n\n3) 对每种原子类型和每种方法，使用以下指数和电子权重：\n- 氧原子分量：两个指数 $\\alpha_{\\mathrm{O,core}} = 8.0$ 和 $\\alpha_{\\mathrm{O,val}} = 1.5$。\n  - 每个氧原子上的 HF 权重：$c^{\\mathrm{HF}}_{\\mathrm{O,core}} = 2.0$, $c^{\\mathrm{HF}}_{\\mathrm{O,val}} = 6.0$。\n  - 每个氧原子上的 MP2 权重：$c^{\\mathrm{MP2}}_{\\mathrm{O,core}} = 1.95$, $c^{\\mathrm{MP2}}_{\\mathrm{O,val}} = 6.03$。\n- 氢原子分量：一个指数 $\\alpha_{\\mathrm{H,val}} = 0.8$。\n  - 每个氢原子上的 HF 权重：$c^{\\mathrm{HF}}_{\\mathrm{H,val}} = 1.0$。\n  - 每个氢原子上的 MP2 权重：$c^{\\mathrm{MP2}}_{\\mathrm{H,val}} = 1.01$。\n\n通过这些赋值，该二聚体在 Hartree-Fock 理论和二阶 Møller-Plesset 微扰理论之间的总积分电子数是守恒的，即 $\\int \\rho_{\\mathrm{HF}}(\\mathbf{r}) \\, d^3\\mathbf{r} = \\int \\rho_{\\mathrm{MP2}}(\\mathbf{r}) \\, d^3\\mathbf{r} = 20.0$。\n\n4) 使用上述模型，对方法 $M \\in \\{\\mathrm{HF}, \\mathrm{MP2}\\}$ 定义电子密度\n$$\n\\rho_{M}(\\mathbf{r}) = \\sum_{\\text{原子 } A} \\sum_{k} c^{M}_{A,k} \\, g_{\\alpha_{A,k}}(\\mathbf{r}-\\mathbf{R}_A),\n$$\n以及差分场 $\\Delta \\rho(\\mathbf{r}) = \\rho_{\\mathrm{MP2}}(\\mathbf{r}) - \\rho_{\\mathrm{HF}}(\\mathbf{r})$。\n\n计算域与诊断：\n5) 定义一个均匀的三维笛卡尔网格，覆盖盒子 $x \\in [-4.0, 4.0]$，$y \\in [-4.0, 4.0]$，$z \\in [-2.0, 8.0]$，每个轴上的均匀间距为 $h = 0.5$ 玻尔。在此网格上，评估所有网格点的 $\\Delta \\rho(\\mathbf{r})$，并使用体积元为 $h^3$ 的黎曼和（Riemann sum）来近似盒子上的离散积分。\n\n6) 定义空间中以下三个点（单位为玻尔），用于对 $\\Delta \\rho(\\mathbf{r})$ 进行逐点评估：\n- $P_1$：$\\mathrm{O_A}$ 和 $\\mathrm{H_{B1}}$ 之间氢键连线的中点，即 $P_1 = \\frac{1}{2} \\left( \\mathbf{R}_{\\mathrm{O_A}} + \\mathbf{R}_{\\mathrm{H_{B1}}} \\right)$。\n- $P_2$：靠近 $\\mathrm{O_A}$ 氧核的一个点，即 $P_2 = \\mathbf{R}_{\\mathrm{O_A}} + (0.1, 0, 0)$。\n- $P_3$：一个远点，即 $P_3 = (10.0, 10.0, 10.0)$。\n\n测试套件与要求输出：\n7) 您的程序必须使用上述定义计算以下五个量：\n- 测试 A：$\\Delta \\rho(P_1)$ 的值，单位为 bohr$^{-3}$。\n- 测试 B：$\\Delta \\rho(P_2)$ 的值，单位为 bohr$^{-3}$。\n- 测试 C：$\\Delta \\rho(P_3)$ 的值，单位为 bohr$^{-3}$。\n- 测试 D：网格上的离散积分 $\\sum_{\\text{grid points } \\mathbf{r}_i} \\Delta \\rho(\\mathbf{r}_i) \\, h^3$，表示盒子内捕获的净电子数差异，单位为电子。\n- 测试 E：网格上场的最大绝对值 $\\max_{\\text{grid points } \\mathbf{r}_i} \\left| \\Delta \\rho(\\mathbf{r}_i) \\right|$，单位为 bohr$^{-3}$。\n\n角度单位说明：\n8) 构建坐标时，三角函数中的所有角度必须按规定使用度；程序中的三角函数计算必须将度转换为弧度进行数值计算。\n\n最终输出格式：\n9) 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，顺序为 [测试 A, 测试 B, 测试 C, 测试 D, 测试 E]。测试 A、B、C 和 E 以 bohr$^{-3}$ 为单位，测试 D 以电子为单位。将每个值精确四舍五入到六位小数。例如，一个有效的输出应类似于 [$x_1$,$x_2$,$x_3$,$x_4$,$x_5$]，其中每个 $x_i$ 是一个保留六位小数的浮点数。", "solution": "问题陈述已经过严格分析，并被确定为有效。这是一个自洽、有科学依据且计算上适定的问题，其根源在于计算量子化学的原理。所有定义、参数和目标都已足够精确地指定，以确保能够得出一个唯一且可验证的解。我们现在开始系统地推导和构建解决方案。\n\n任务是基于使用原子中心高斯函数的简化模型，计算水二聚体在二阶 Møller-Plesset 微扰理论 (MP2) 和 Hartree-Fock (HF) 理论之间的电子密度差 $\\Delta \\rho(\\mathbf{r}) = \\rho_{\\mathrm{MP2}}(\\mathbf{r}) - \\rho_{\\mathrm{HF}}(\\mathbf{r})$。\n\n**1. 系统几何构型**\n\n水二聚体由六个原子组成。它们的笛卡尔坐标必须根据所提供的几何参数确定。所有位置均以原子单位（玻尔）表示。\n\n-   键长：$b = 1.809$ 玻尔。\n-   H-O-H 键角：$\\theta_{\\mathrm{HOH}} = 104.5^\\circ$。\n-   单体 B 取向角：$\\varphi = 75.5^\\circ$。\n\n三角函数需要使用弧度。设 $\\theta_{\\mathrm{HOH, rad}} = 104.5 \\times \\frac{\\pi}{180}$ 和 $\\varphi_{\\mathrm{rad}} = 75.5 \\times \\frac{\\pi}{180}$。\n\n原子坐标如下：\n-   单体 A 位于 $xy$-平面内：\n    -   氧原子 $\\mathrm{O_A}$：$\\mathbf{R}_{\\mathrm{O_A}} = (0, 0, 0)$。\n    -   氢原子 $\\mathrm{H_{A1}}$：$\\mathbf{R}_{\\mathrm{H_{A1}}} = \\left(b \\cos\\left(\\frac{\\theta_{\\mathrm{HOH, rad}}}{2}\\right), b \\sin\\left(\\frac{\\theta_{\\mathrm{HOH, rad}}}{2}\\right), 0\\right) \\approx (1.107435, 1.430335, 0)$。\n    -   氢原子 $\\mathrm{H_{A2}}$：$\\mathbf{R}_{\\mathrm{H_{A2}}} = \\left(b \\cos\\left(\\frac{\\theta_{\\mathrm{HOH, rad}}}{2}\\right), -b \\sin\\left(\\frac{\\theta_{\\mathrm{HOH, rad}}}{2}\\right), 0\\right) \\approx (1.107435, -1.430335, 0)$。\n-   单体 B 沿 $z$ 轴取向并位于 $xz$-平面内：\n    -   氧原子 $\\mathrm{O_B}$：$\\mathbf{R}_{\\mathrm{O_B}} = (0, 0, 5.5)$。\n    -   氢原子 $\\mathrm{H_{B1}}$（供体氢）：$\\mathbf{R}_{\\mathrm{H_{B1}}} = (0, 0, 5.5 - b) = (0, 0, 3.691)$。此原子与 $\\mathrm{O_A}$ 形成氢键。\n    -   氢原子 $\\mathrm{H_{B2}}$：$\\mathbf{R}_{\\mathrm{H_{B2}}} = \\mathbf{R}_{\\mathrm{O_B}} + b \\left( \\sin(\\varphi_{\\mathrm{rad}}), 0, \\cos(\\varphi_{\\mathrm{rad}}) \\right) \\approx (1.751631, 0, 5.952932)$。\n\n这六个原子中心 $\\{\\mathbf{R}_i\\}$ 构成了密度模型的几何基础。\n\n**2. 电子密度差模型**\n\n对于给定方法 $M \\in \\{\\mathrm{HF}, \\mathrm{MP2}\\}$，电子密度被建模为归一化的、以原子为中心的高斯函数的和：\n$$\n\\rho_{M}(\\mathbf{r}) = \\sum_{\\text{atom } A} \\sum_{k} c^{M}_{A,k} \\, g_{\\alpha_{A,k}}(\\mathbf{r}-\\mathbf{R}_A)\n$$\n其中归一化的高斯分量为：\n$$\ng_{\\alpha}(\\mathbf{r}-\\mathbf{R}) = \\left(\\frac{\\alpha}{\\pi}\\right)^{3/2} \\exp\\!\\left(-\\alpha \\lVert \\mathbf{r}-\\mathbf{R} \\rVert^2\\right)\n$$\n我们必须计算的是密度差场 $\\Delta \\rho(\\mathbf{r})$。为提高计算效率，我们合并求和项：\n$$\n\\Delta \\rho(\\mathbf{r}) = \\rho_{\\mathrm{MP2}}(\\mathbf{r}) - \\rho_{\\mathrm{HF}}(\\mathbf{r}) = \\sum_{\\text{atom } A} \\sum_{k} (c^{\\mathrm{MP2}}_{A,k} - c^{\\mathrm{HF}}_{A,k}) \\, g_{\\alpha_{A,k}}(\\mathbf{r}-\\mathbf{R}_A)\n$$\n我们定义差分系数 $\\Delta c_{A,k} = c^{\\mathrm{MP2}}_{A,k} - c^{\\mathrm{HF}}_{A,k}$。参数如下：\n-   对于两个氧原子（$\\mathrm{O_A}, \\mathrm{O_B}$）中的每一个：\n    -   核分量：$\\alpha_{\\mathrm{O,core}} = 8.0$, $\\Delta c_{\\mathrm{O,core}} = 1.95 - 2.0 = -0.05$。\n    -   价分量：$\\alpha_{\\mathrm{O,val}} = 1.5$, $\\Delta c_{\\mathrm{O,val}} = 6.03 - 6.0 = 0.03$。\n-   对于四个氢原子（$\\mathrm{H_{A1}}, \\mathrm{H_{A2}}, \\mathrm{H_{B1}}, \\mathrm{H_{B2}}$）中的每一个：\n    -   价分量：$\\alpha_{\\mathrm{H,val}} = 0.8$, $\\Delta c_{\\mathrm{H,val}} = 1.01 - 1.0 = 0.01$。\n\n因此，$\\Delta \\rho(\\mathbf{r})$ 的计算简化为对八个分量（每个氧原子两个，每个氢原子一个）的单次求和：\n$$\n\\Delta \\rho(\\mathbf{r}) = \\sum_{i=1}^{8} \\Delta c_i \\left(\\frac{\\alpha_i}{\\pi}\\right)^{3/2} \\exp\\!\\left(-\\alpha_i \\lVert \\mathbf{r}-\\mathbf{R}_i \\rVert^2\\right)\n$$\n其中索引 $i$ 遍历所有原子上的所有分量。\n\n**3. 在特定点上的评估（测试 A, B, C）**\n\n我们需要在三个特定点上评估 $\\Delta \\rho(\\mathbf{r})$：\n-   $P_1 = \\frac{1}{2} (\\mathbf{R}_{\\mathrm{O_A}} + \\mathbf{R}_{\\mathrm{H_{B1}}}) = (0, 0, 1.8455)$。该点位于氢键的中点。\n-   $P_2 = \\mathbf{R}_{\\mathrm{O_A}} + (0.1, 0, 0) = (0.1, 0, 0)$。该点靠近受体氧原子的核区。\n-   $P_3 = (10.0, 10.0, 10.0)$。这是一个远点，在此处密度场预计可以忽略不计。\n\n对于每个点 $P_j$，我们将 $\\mathbf{r} = P_j$ 代入 $\\Delta \\rho(\\mathbf{r})$ 的公式中进行计算。这些结果分别对应测试 A、B 和 C。\n\n**4. 在网格上的评估（测试 D, E）**\n\n在域 $x \\in [-4.0, 4.0]$，$y \\in [-4.0, 4.0]$ 和 $z \\in [-2.0, 8.0]$ 上定义了一个均匀的笛卡尔网格。网格间距为 $h = 0.5$ 玻尔。我们在每个网格点 $\\mathbf{r}_i$ 上评估 $\\Delta \\rho(\\mathbf{r}_i)$。\n\n-   **测试 D**：$\\Delta \\rho(\\mathbf{r})$ 在网格盒子上的离散积分通过黎曼和近似：\n    $$\n    I_{\\Delta \\rho} \\approx \\sum_{\\text{grid points } \\mathbf{r}_i} \\Delta \\rho(\\mathbf{r}_i) \\, \\Delta V\n    $$\n    其中体积元为 $\\Delta V = h^3 = (0.5)^3 = 0.125$ 玻尔$^3$。这个量表示在定义体积内的净电子布居变化。\n\n-   **测试 E**：网格上密度差的最大绝对值为：\n    $$\n    \\max |\\Delta \\rho| = \\max_{\\text{grid points } \\mathbf{r}_i} \\left| \\Delta \\rho(\\mathbf{r}_i) \\right|\n    $$\n    该诊断指标确定了电子密度变化幅度最大的位置。\n\n**5. 算法实现**\n\n将构建一个数值程序来执行这些计算。程序的核心是一个函数，用于计算任何给定点或点数组 $\\mathbf{r}$ 的 $\\Delta \\rho(\\mathbf{r})$。对于网格计算，使用 NumPy 的向量化方法性能更优。这包括创建一个包含所有网格点坐标的数组，并同时为所有点计算所有八个高斯分量的贡献。逐点评估使用相同的函数，提供 $P_1$、$P_2$ 和 $P_3$ 的坐标。最终结果按要求格式化为六位小数。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the computational chemistry problem for the water dimer density difference.\n    \"\"\"\n\n    # 1. System Geometry\n    b = 1.809  # O-H bond length in bohr\n    theta_hoh_deg = 104.5  # H-O-H bond angle in degrees\n    phi_deg = 75.5  # Monomer B orientation angle in degrees\n\n    # Convert angles to radians for numpy trigonometric functions\n    theta_hoh_rad = np.deg2rad(theta_hoh_deg)\n    phi_rad = np.deg2rad(phi_deg)\n\n    # Atomic coordinates\n    R_OA = np.array([0.0, 0.0, 0.0])\n    R_HA1 = np.array([\n        b * np.cos(theta_hoh_rad / 2),\n        b * np.sin(theta_hoh_rad / 2),\n        0.0\n    ])\n    R_HA2 = np.array([\n        b * np.cos(theta_hoh_rad / 2),\n        -b * np.sin(theta_hoh_rad / 2),\n        0.0\n    ])\n    R_OB = np.array([0.0, 0.0, 5.5])\n    R_HB1 = np.array([0.0, 0.0, 5.5 - b])\n    R_HB2 = R_OB + b * np.array([\n        np.sin(phi_rad),\n        0.0,\n        np.cos(phi_rad)\n    ])\n    \n    atom_centers = {\n        'O': [R_OA, R_OB],\n        'H': [R_HA1, R_HA2, R_HB1, R_HB2]\n    }\n\n    # 2. Electron Density Model Parameters\n    # Exponents (alpha)\n    alpha_O_core = 8.0\n    alpha_O_val = 1.5\n    alpha_H_val = 0.8\n\n    # Difference coefficients (delta_c = c_MP2 - c_HF)\n    dc_O_core = 1.95 - 2.0   # -0.05\n    dc_O_val = 6.03 - 6.0    #  0.03\n    dc_H_val = 1.01 - 1.0    #  0.01\n\n    # List of all components for difference density calculation\n    # Format: (center_coords, alpha, delta_c)\n    components = []\n    for center in atom_centers['O']:\n        components.append((center, alpha_O_core, dc_O_core))\n        components.append((center, alpha_O_val, dc_O_val))\n    for center in atom_centers['H']:\n        components.append((center, alpha_H_val, dc_H_val))\n\n    def calculate_delta_rho(points):\n        \"\"\"\n        Calculates delta_rho on a set of points using a vectorized approach.\n        \n        Args:\n            points: An (N, 3) numpy array of coordinates.\n        \n        Returns:\n            An (N,) numpy array of delta_rho values.\n        \"\"\"\n        if points.ndim == 1:\n            points = points.reshape(1, -1)\n        \n        n_points = points.shape[0]\n        delta_rho_values = np.zeros(n_points)\n\n        for center, alpha, delta_c in components:\n            # Normalization prefactor for the Gaussian function\n            prefactor = (alpha / np.pi)**1.5\n            \n            # Squared distance from all points to the current atomic center\n            dist_sq = np.sum((points - center)**2, axis=1)\n            \n            # Contribution of this component to delta_rho at all points\n            contribution = delta_c * prefactor * np.exp(-alpha * dist_sq)\n            delta_rho_values += contribution\n            \n        return delta_rho_values\n\n    # 3. Evaluation at Specific Points (Tests A, B, C)\n    P1 = 0.5 * (R_OA + R_HB1)\n    P2 = R_OA + np.array([0.1, 0.0, 0.0])\n    P3 = np.array([10.0, 10.0, 10.0])\n    \n    eval_points = np.array([P1, P2, P3])\n    pointwise_results = calculate_delta_rho(eval_points)\n    \n    test_A = pointwise_results[0]\n    test_B = pointwise_results[1]\n    test_C = pointwise_results[2]\n\n    # 4. Evaluation on a Grid (Tests D, E)\n    h = 0.5  # Grid spacing\n    x_coords = np.arange(-4.0, 4.0 + h, h)\n    y_coords = np.arange(-4.0, 4.0 + h, h)\n    z_coords = np.arange(-2.0, 8.0 + h, h)\n\n    # Create grid points\n    xx, yy, zz = np.meshgrid(x_coords, y_coords, z_coords, indexing='ij')\n    grid_points = np.vstack([xx.ravel(), yy.ravel(), zz.ravel()]).T\n\n    # Calculate delta_rho on the grid\n    grid_delta_rho = calculate_delta_rho(grid_points)\n\n    # Test D: Discrete integral\n    volume_element = h**3\n    test_D = np.sum(grid_delta_rho) * volume_element\n    \n    # Test E: Maximum absolute value on the grid\n    test_E = np.max(np.abs(grid_delta_rho))\n    \n    results = [test_A, test_B, test_C, test_D, test_E]\n\n    # 5. Final Output Formatting\n    formatted_results = [f\"{val:.6f}\" for val in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2461938"}]}