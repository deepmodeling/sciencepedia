{"hands_on_practices": [{"introduction": "在我们应用麦克斯韦-玻尔兹曼 (Maxwell-Boltzmann, MB) 分布之前，深刻理解其数学特性至关重要。一个常见的误区是混淆“最概然速率对应的动能”与“最概然动能”。本练习将挑战这一观念，通过推导证明一个非线性的变量变换（$E=\\frac{1}{2}mv^2$）会改变概率密度函数的峰值位置，从而加深您对概率论和统计力学严谨性的理解。这个问题是一个绝佳的基础性练习，可以锻炼您处理概率密度函数的精确能力。[@problem_id:2456595]", "id": "2456595", "problem": "温度为 $T$ 的理想单原子气体由质量为 $m$ 的粒子组成，这些粒子在三维容器中运动并处于热平衡状态。根据三维麦克斯韦-玻尔兹曼 (MB) 分布，考虑以下两个不同的量：\n- 将最概然速率 $v_p$ 代入 $E = \\tfrac{1}{2} m v^2$ 所得的动能，以及\n- 最概然动能，其定义为动能概率密度的众数。\n\n确定这两个能量的比值 $R$，其中\n$$\nR \\equiv \\frac{\\tfrac{1}{2} m v_p^2}{E_{\\text{mode}}}.\n$$\n将最终答案表示为一个纯数字，无需四舍五入。", "solution": "最概然速率 $v_p$ 定义为使三维麦克斯韦-玻尔兹曼 (MB) 速率概率密度函数 (PDF) 达到最大值的速率。温度为 $T$ 的理想气体的三维 MB 速率 PDF 为\n$$\nf(v) = 4 \\pi \\left( \\frac{m}{2 \\pi k_B T} \\right)^{3/2} v^2 \\exp\\!\\left( - \\frac{m v^2}{2 k_B T} \\right),\n$$\n其中 $k_B$ 是玻尔兹曼常数，$m$ 是粒子质量，$T$ 是绝对温度。为求 $v_p$，我们对 $v$ 最大化 $f(v)$。最大化 $f(v)$ 等价于最大化 $\\ln f(v)$：\n$$\n\\ln f(v) = \\ln\\!\\left[ 4 \\pi \\left( \\frac{m}{2 \\pi k_B T} \\right)^{3/2} \\right] + 2 \\ln v - \\frac{m v^2}{2 k_B T}.\n$$\n对 $v$ 求导并令其为零：\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}v} \\ln f(v) = \\frac{2}{v} - \\frac{m}{k_B T} v = 0.\n$$\n解出 $v$ 可得\n$$\nv_p = \\sqrt{ \\frac{2 k_B T}{m} }.\n$$\n将 $v_p$ 代入 $E = \\tfrac{1}{2} m v^2$ 所得的动能为\n$$\nE\\big|_{v_p} = \\frac{1}{2} m v_p^2 = \\frac{1}{2} m \\left( \\frac{2 k_B T}{m} \\right) = k_B T.\n$$\n\n接下来，我们确定最概然动能 $E_{\\text{mode}}$，即动能 PDF $g(E)$ 的众数。速率与动能之间的变换关系为 $E = \\tfrac{1}{2} m v^2$，等价于 $v = \\sqrt{2E/m}$，其雅可比行列式为\n$$\n\\frac{\\mathrm{d}v}{\\mathrm{d}E} = \\frac{1}{\\sqrt{2 m E}}.\n$$\n动能 PDF 可由变量替换得到：\n$$\ng(E) = f(v) \\left| \\frac{\\mathrm{d}v}{\\mathrm{d}E} \\right| \\quad \\text{其中} \\quad v = \\sqrt{\\frac{2E}{m}}.\n$$\n代入 $f(v)$ 并化简，得到标准的三维 MB 能量 PDF：\n$$\ng(E) = \\frac{2}{\\sqrt{\\pi}} \\frac{1}{(k_B T)^{3/2}} E^{1/2} \\exp\\!\\left( - \\frac{E}{k_B T} \\right), \\quad E \\ge 0.\n$$\n为求众数，需在 $E \\ge 0$ 的区间上最大化 $g(E)$。同样地，我们最大化 $\\ln g(E)$：\n$$\n\\ln g(E) = \\ln\\!\\left( \\frac{2}{\\sqrt{\\pi}} \\right) - \\frac{3}{2} \\ln(k_B T) + \\frac{1}{2} \\ln E - \\frac{E}{k_B T}.\n$$\n对 $E$ 求导并令其为零：\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}E} \\ln g(E) = \\frac{1}{2E} - \\frac{1}{k_B T} = 0 \\;\\;\\Longrightarrow\\;\\; E_{\\text{mode}} = \\frac{1}{2} k_B T.\n$$\n\n因此，在最概然速率下的动能与最概然动能的比值 $R$ 为\n$$\nR = \\frac{E\\big|_{v_p}}{E_{\\text{mode}}} = \\frac{k_B T}{\\tfrac{1}{2} k_B T} = 2.\n$$\n\n这表明，通过最概然速率计算出的动能与最概然动能不相同；前者是后者的 $2$ 倍。产生这种差异的原因是，非线性变换 $E = \\tfrac{1}{2} m v^2$ 在从速率 PDF 映射到能量 PDF 时，并未保持众数的位置不变。", "answer": "$$\\boxed{2}$$"}, {"introduction": "分子动力学模拟需要一个符合物理现实的初始状态，而这通常意味着需要根据麦克斯韦-玻尔兹曼分布来设定初始速度。本练习将理论与实践相结合，要求您首先从第一性原理出发，推导适用于表面吸附等二维体系的速度分布，然后编写代码从该分布中抽样并验证其统计特性。通过这一过程，您将掌握连接理论推导、编程实现与数据验证的核心计算科学工作流程，并切实理解能量均分定理等基本概念。[@problem_id:2456611]", "id": "2456611", "problem": "要求您使用 Maxwell–Boltzmann (MB) 框架，为限制在二维表面上的原子推导、实现并验证一个物理上一致的初始速度分配流程。您的目标是 (i) 从第一性原理出发推导二维 MB 速率分布，以及 (ii) 编写一个完整的程序，该程序能对符合此分布的初始速度进行采样，并通过将统计数据与解析预测进行比较来验证采样结果。\n\n您的推导必须从适用于平衡态统计力学和经典分子运动的基本原理和定义出发：\n- 动能的玻尔兹曼因子，与 $\\exp\\!\\left(-E/(k_\\mathrm{B} T)\\right)$ 成正比，其中 $E$ 是能量，$k_\\mathrm{B}$ 是玻尔兹曼常数，$T$ 是绝对温度。\n- 质量为 $m$ 的粒子在二维空间中以速度分量 $\\{v_x, v_y\\}$ 运动的理想化动能为 $E = \\tfrac{1}{2} m \\left(v_x^2 + v_y^2\\right)$。\n- 处于平衡态的经典理想气体动能中，正交自由度 (DOF) 的独立性。\n- 概率密度函数的变量替换，包括雅可比行列式。\n\n请勿使用、引用或假设目标二维 MB 速率分布或任何关于速率的中间闭式分布；您必须从上述基础出发明确地推导出它。您的推导必须得到二维空间中归一化的速率分布以及平均速率 $\\langle v \\rangle$ 的解析表达式。\n\n推导完成后，请实现一个完整的、可运行的程序，该程序能够：\n- 为 $N$ 个位于二维表面上、质量为 $m$、绝对温度为 $T$ 的原子采样初始速度 $\\{v_x, v_y\\}$，且采样结果与推导出的二维 MB 速率分布一致。\n- 为保证可复现性，使用一个固定种子为 $314159$ 的伪随机数生成器。\n- 为每个测试用例计算以下验证指标：\n  1. 样本平均速率 $\\overline{v}$，单位为 $\\mathrm{m/s}$。\n  2. $\\overline{v}$ 与您推导得出的理论平均速率 $\\langle v \\rangle$ 之间的绝对误差，单位为 $\\mathrm{m/s}$。\n  3. 用于比较经验速率分布与解析二维 MB 速率分布（等效地表示为具有适当尺度参数的 Rayleigh 分布）的 Kolmogorov–Smirnov (KS) 统计量。\n  4. 一个布尔值，指示在相对容差 $\\varepsilon = 5\\times 10^{-3}$ 内，每个自由度的能量均分是否成立，即是否同时满足 $\\left|\\frac{\\tfrac{1}{2} m \\overline{v_x^2} - \\tfrac{1}{2} k_\\mathrm{B} T}{\\tfrac{1}{2} k_\\mathrm{B} T}\\right| \\le \\varepsilon$ 和 $\\left|\\frac{\\tfrac{1}{2} m \\overline{v_y^2} - \\tfrac{1}{2} k_\\mathrm{B} T}{\\tfrac{1}{2} k_\\mathrm{B} T}\\right| \\le \\varepsilon$。\n\n使用以下常数和单位：\n- 玻尔兹曼常数 $k_\\mathrm{B} = 1.380\\,649 \\times 10^{-23}\\ \\mathrm{J/K}$。\n- 质量 $m$ 单位为 $\\mathrm{kg}$，温度 $T$ 单位为 $\\mathrm{K}$，速度单位为 $\\mathrm{m/s}$，动能单位为 $\\mathrm{J}$。\n\n测试套件：\n- 案例 1：$m = 6.633\\,520\\,9 \\times 10^{-26}\\ \\mathrm{kg}$, $T = 300$, $N = 100\\,000$。\n- 案例 2：$m = 1.673\\,557\\,5 \\times 10^{-27}\\ \\mathrm{kg}$, $T = 300$, $N = 100\\,000$。\n- 案例 3：$m = 6.633\\,520\\,9 \\times 10^{-26}\\ \\mathrm{kg}$, $T = 1$, $N = 100\\,000$。\n\n程序要求：\n- 程序必须是自包含的，且无需任何输入。\n- 对于每个案例，计算上面列出的四个验证指标。对于浮点数，四舍五入到 $6$ 位小数。对于布尔值，打印 $\\mathrm{True}$ 或 $\\mathrm{False}$。\n- 最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，条目按以下顺序排列：\n  $[\\overline{v}_1,\\ \\Delta_1,\\ D_1,\\ b_1,\\ \\overline{v}_2,\\ \\Delta_2,\\ D_2,\\ b_2,\\ \\overline{v}_3,\\ \\Delta_3,\\ D_3,\\ b_3]$,\n  其中 $\\overline{v}_i$ 是案例 $i$ 的样本平均速率（单位 $\\mathrm{m/s}$），$\\Delta_i$ 是绝对误差（单位 $\\mathrm{m/s}$），$D_i$ 是 KS 统计量，$b_i$ 是能量均分布尔值。\n\n所有速度以 $\\mathrm{m/s}$ 表示，能量以 $\\mathrm{J}$ 表示。不使用角度。百分比（如有）必须表示为小数（例如，百分之三表示为 $0.03$）。\n\n您的最终答案必须是一个完整的单一程序，该程序遵守指定的执行环境，并准确生成所描述的一行输出。", "solution": "所提出的问题是有效的。它以统计力学原理为科学基础，提法恰当，提供了所有必要信息，且表述客观。我们将按要求进行推导和实现。\n\n首先，将从第一性原理出发推导二维 Maxwell-Boltzmann (MB) 速率分布，接着推导理论平均速率。随后，将详细说明用于计算验证的算法。\n\n<strong>1. 二维 Maxwell-Boltzmann 分布的推导</strong>\n\n<strong>1.1. 速度分量分布</strong>\n我们从经典统计力学关于热平衡状态下理想气体的基本原理出发。粒子处于特定状态的概率与玻尔兹曼因子 $\\exp(-E/(k_\\mathrm{B} T))$ 成正比，其中 $E$ 是该状态的能量，$k_\\mathrm{B}$ 是玻尔兹曼常数，$T$ 是绝对温度。对于一个质量为 $m$、被限制在二维表面上的粒子，其动能 $E$ 以其笛卡尔速度分量 $\\{v_x, v_y\\}$ 表示为：\n$$\nE = \\frac{1}{2}m(v_x^2 + v_y^2)\n$$\n速度分量 $v_x$ 和 $v_y$ 代表独立的、正交的自由度。因此，速度矢量的联合概率密度函数 (PDF) $f(v_x, v_y)$ 可以表示为每个分量的独立 PDF $f_x(v_x)$ 和 $f_y(v_y)$ 的乘积。能量可以分解为 $E = E_x + E_y$，其中 $E_x = \\frac{1}{2}mv_x^2$，$E_y = \\frac{1}{2}mv_y^2$。\n$v_x$ 分量的 PDF 因此与其相应能量的玻尔兹曼因子成正比：\n$$\nf_x(v_x) \\propto \\exp\\left(-\\frac{E_x}{k_\\mathrm{B} T}\\right) = \\exp\\left(-\\frac{m v_x^2}{2 k_\\mathrm{B} T}\\right)\n$$\n为了获得归一化的 PDF，我们引入一个归一化常数 $A$，并施加总概率为一的条件：\n$$\n\\int_{-\\infty}^{\\infty} f_x(v_x) dv_x = A \\int_{-\\infty}^{\\infty} \\exp\\left(-\\frac{m v_x^2}{2 k_\\mathrm{B} T}\\right) dv_x = 1\n$$\n这是一个标准的高斯积分，形式为 $\\int_{-\\infty}^{\\infty} e^{-ax^2} dx = \\sqrt{\\pi/a}$。当 $a = m/(2 k_\\mathrm{B} T)$ 时，该积分的计算结果为 $\\sqrt{2\\pi k_\\mathrm{B} T/m}$。\n求解 $A$：\n$$\nA = \\left(\\frac{m}{2\\pi k_\\mathrm{B} T}\\right)^{1/2}\n$$\n$v_x$ 的归一化 PDF 是一个均值为 $0$、方差为 $\\sigma_v^2 = k_\\mathrm{B} T/m$ 的高斯分布：\n$$\nf_x(v_x) = \\left(\\frac{m}{2\\pi k_\\mathrm{B} T}\\right)^{1/2} \\exp\\left(-\\frac{m v_x^2}{2 k_\\mathrm{B} T}\\right)\n$$\n根据对称性，$v_y$ 的 PDF 是相同的。速度分量的联合 PDF 为：\n$$\nf(v_x, v_y) = f_x(v_x) f_y(v_y) = \\frac{m}{2\\pi k_\\mathrm{B} T} \\exp\\left(-\\frac{m(v_x^2 + v_y^2)}{2 k_\\mathrm{B} T}\\right)\n$$\n\n<strong>1.2. 速率分布</strong>\n为求出速率 $v = \\sqrt{v_x^2 + v_y^2}$ 的分布，我们将速度分量从笛卡尔坐标 $(v_x, v_y)$ 变换到极坐标 $(v, \\theta)$，其中 $v$ 是速率 ($v \\ge 0$)，$\\theta$ 是方向角。变换关系为 $v_x = v \\cos\\theta$ 和 $v_y = v \\sin\\theta$。\n微分面积元变换为 $dv_x dv_y = |J| dv d\\theta$，其中 $J$ 是变换的雅可比行列式：\n$$\nJ = \\det \\begin{pmatrix} \\frac{\\partial v_x}{\\partial v} & \\frac{\\partial v_x}{\\partial \\theta} \\\\ \\frac{\\partial v_y}{\\partial v} & \\frac{\\partial v_y}{\\partial \\theta} \\end{pmatrix} = \\det \\begin{pmatrix} \\cos\\theta & -v\\sin\\theta \\\\ \\sin\\theta & v\\cos\\theta \\end{pmatrix} = v\\cos^2\\theta + v\\sin^2\\theta = v\n$$\n通过将坐标变换代入 $f(v_x, v_y)$ 并乘以雅可比行列式，可以得到极坐标下的联合 PDF $g(v, \\theta)$：\n$$\ng(v, \\theta) dv d\\theta = f(v\\cos\\theta, v\\sin\\theta) v dv d\\theta = \\frac{m}{2\\pi k_\\mathrm{B} T} \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right) v dv d\\theta\n$$\n速率的 PDF $P(v)$，是通过将 $g(v, \\theta)$ 对所有可能的角度 $\\theta \\in [0, 2\\pi]$ 进行积分得到的：\n$$\nP(v) = \\int_0^{2\\pi} \\frac{m}{2\\pi k_\\mathrm{B} T} v \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right) d\\theta = 2\\pi \\left(\\frac{m}{2\\pi k_\\mathrm{B} T}\\right) v \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right)\n$$\n化简后得到二维 Maxwell-Boltzmann 速率分布：\n$$\nP(v) = \\frac{m}{k_\\mathrm{B} T} v \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right) \\quad \\text{for } v \\geq 0\n$$\n这是一个尺度参数为 $\\sigma = \\sqrt{k_\\mathrm{B} T / m}$ 的 Rayleigh 分布。\n\n<strong>1.3. 平均速率</strong>\n平均速率 $\\langle v \\rangle$ 是 $v$ 相对于分布 $P(v)$ 的期望值：\n$$\n\\langle v \\rangle = \\int_0^{\\infty} v P(v) dv = \\int_0^{\\infty} v \\left(\\frac{m}{k_\\mathrm{B} T}\\right) v \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right) dv = \\frac{m}{k_\\mathrm{B} T} \\int_0^{\\infty} v^2 \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right) dv\n$$\n该积分的形式为 $\\int_0^{\\infty} x^2 e^{-ax^2} dx = \\frac{1}{4}\\sqrt{\\frac{\\pi}{a^3}}$。在这里，$a = m/(2 k_\\mathrm{B} T)$。\n将 $a$ 代入积分的解中，得到：\n$$\n\\int_0^{\\infty} v^2 \\exp\\left(-\\frac{mv^2}{2 k_\\mathrm{B} T}\\right) dv = \\frac{1}{4} \\sqrt{\\frac{\\pi}{(m/2k_\\mathrm{B} T)^3}} = \\frac{1}{4} \\sqrt{\\frac{8\\pi (k_\\mathrm{B} T)^3}{m^3}} = \\frac{\\sqrt{2\\pi}}{2} \\frac{(k_\\mathrm{B} T)^{3/2}}{m^{3/2}}\n$$\n将此结果代回 $\\langle v \\rangle$ 的表达式中：\n$$\n\\langle v \\rangle = \\frac{m}{k_\\mathrm{B} T} \\left(\\frac{\\sqrt{2\\pi}}{2} \\frac{(k_\\mathrm{B} T)^{3/2}}{m^{3/2}}\\right) = \\sqrt{\\frac{\\pi k_\\mathrm{B} T}{2m}}\n$$\n这就是二维空间中平均速率的解析表达式。\n\n<strong>2. 计算验证算法</strong>\n\n该计算流程旨在为一个包含 $N$ 个原子的系统采样初始速度，并将采样结果与推导出的理论结果进行验证。\n\n<strong>2.1. 速度采样</strong>\n根据推导，速度分量 $v_x$ 和 $v_y$ 是独立的，并且各自服从均值为 $0$、方差为 $\\sigma_v^2 = k_\\mathrm{B} T / m$ 的高斯（正态）分布。因此，标准差为 $\\sigma_v = \\sqrt{k_\\mathrm{B} T / m}$。\n对于一个包含 $N$ 个粒子的系统，我们使用伪随机数生成器从此正态分布中抽取 $N$ 个 $v_x$ 值和 $N$ 个 $v_y$ 值。使用固定种子初始化的生成器可确保可复现性。\n\n<strong>2.2. 验证指标计算</strong>\n对于每个具有指定质量 $m$、温度 $T$ 和粒子数 $N$ 的测试用例：\n1.  <strong>样本平均速率 ($\\overline{v}$)</strong>：生成速度分量 $\\{v_{x,i}, v_{y,i}\\}$（$i=1, \\dots, N$）后，每个粒子的速率计算为 $v_i = \\sqrt{v_{x,i}^2 + v_{y,i}^2}$。样本平均速率是算术平均值：$\\overline{v} = \\frac{1}{N} \\sum_{i=1}^N v_i$。\n2.  <strong>绝对误差 ($\\Delta$)</strong>：样本平均速率与理论平均速率之间的绝对误差计算为 $\\Delta = |\\overline{v} - \\langle v \\rangle|$，其中 $\\langle v \\rangle = \\sqrt{\\pi k_\\mathrm{B} T / (2m)}$。\n3.  <strong>Kolmogorov-Smirnov (KS) 统计量 ($D$)</strong>：将采样速率的经验累积分布函数 (CDF) 与二维 MB 速率分布的理论 CDF 进行比较。后者是一个尺度参数为 $\\sigma = \\sqrt{k_\\mathrm{B} T / m}$ 的 Rayleigh 分布。KS 统计量 $D$ 是两个 CDF 之间的最大绝对差。\n4.  <strong>能量均分检验 ($b$)</strong>：能量均分定理指出，每个二次自由度的平均动能为 $\\frac{1}{2} k_\\mathrm{B} T$。我们通过计算每个分量的样本平均动能 $\\langle E_x \\rangle = \\frac{1}{2}m \\overline{v_x^2}$ 和 $\\langle E_y \\rangle = \\frac{1}{2}m \\overline{v_y^2}$ 来对此进行计算验证。将相对于理论值 $\\frac{1}{2} k_\\mathrm{B} T$ 的相对误差与容差 $\\varepsilon = 5 \\times 10^{-3}$ 进行比较。如果两个相对误差都小于或等于 $\\varepsilon$，则条件满足。\n$$\n\\left|\\frac{\\frac{1}{2}m \\overline{v_x^2} - \\frac{1}{2}k_\\mathrm{B} T}{\\frac{1}{2}k_\\mathrm{B} T}\\right| \\le \\varepsilon \\quad \\text{and} \\quad \\left|\\frac{\\frac{1}{2}m \\overline{v_y^2} - \\frac{1}{2}k_\\mathrm{B} T}{\\frac{1}{2}k_\\mathrm{B} T}\\right| \\le \\varepsilon\n$$\n然后，将这些计算的结果按指定格式进行格式化和报告。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import stats\n\ndef solve():\n    \"\"\"\n    Derives, implements, and validates a 2D initial velocity assignment procedure\n    using the Maxwell-Boltzmann framework.\n    \"\"\"\n\n    # Define constants and test cases\n    K_B = 1.380649e-23  # Boltzmann constant in J/K\n    EPSILON = 5e-3        # Relative tolerance for equipartition check\n    SEED = 314159         # Seed for pseudo-random number generator\n\n    test_cases = [\n        # Case 1: Argon at 300 K\n        {'m': 6.6335209e-26, 'T': 300, 'N': 100000},\n        # Case 2: Hydrogen at 300 K\n        {'m': 1.6735575e-27, 'T': 300, 'N': 100000},\n        # Case 3: Argon at 1 K\n        {'m': 6.6335209e-26, 'T': 1, 'N': 100000},\n    ]\n\n    # Initialize the random number generator for reproducibility\n    rng = np.random.default_rng(SEED)\n\n    results = []\n\n    for case in test_cases:\n        m = case['m']\n        T = case['T']\n        N = case['N']\n\n        # 1. Sample initial velocities\n        # The velocity components vx and vy are independent and follow a\n        # a normal distribution with mean=0 and variance = k_B*T/m.\n        # The standard deviation is sqrt(k_B*T/m).\n        sigma_v = np.sqrt(K_B * T / m)\n        vx = rng.normal(loc=0.0, scale=sigma_v, size=N)\n        vy = rng.normal(loc=0.0, scale=sigma_v, size=N)\n\n        # 2. Compute sample speeds and statistics\n        speeds = np.sqrt(vx**2 + vy**2)\n        v_bar = np.mean(speeds)\n\n        # 3. Compute theoretical mean speed for 2D system\n        # <v> = sqrt(pi * k_B * T / (2 * m))\n        v_theory = np.sqrt(np.pi * K_B * T / (2 * m))\n\n        # 4. Calculate validation metrics\n\n        # Metric 1: Sample mean speed\n        sample_mean_speed = v_bar\n        \n        # Metric 2: Absolute error\n        abs_error = np.abs(sample_mean_speed - v_theory)\n\n        # Metric 3: Kolmogorov-Smirnov statistic\n        # The analytical distribution is a Rayleigh distribution with scale=sigma_v.\n        ks_result = stats.kstest(speeds, 'rayleigh', args=(0, sigma_v))\n        ks_statistic = ks_result.statistic\n\n        # Metric 4: Equipartition check\n        # Mean kinetic energy per degree of freedom should be 0.5 * k_B * T.\n        ke_x_mean = 0.5 * m * np.mean(vx**2)\n        ke_y_mean = 0.5 * m * np.mean(vy**2)\n        ke_theory = 0.5 * K_B * T\n\n        rel_err_x = np.abs((ke_x_mean - ke_theory) / ke_theory)\n        rel_err_y = np.abs((ke_y_mean - ke_theory) / ke_theory)\n        \n        equipartition_holds = (rel_err_x <= EPSILON) and (rel_err_y <= EPSILON)\n\n        # Append rounded floats and boolean to the results list\n        results.append(round(sample_mean_speed, 6))\n        results.append(round(abs_error, 6))\n        results.append(round(ks_statistic, 6))\n        results.append(equipartition_holds)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```"}, {"introduction": "在实际的模拟中，由于有限样本的随机性，初始速度的设置几乎总会导致一个非零的总动量，这便是著名的“飞行冰块”伪影的根源。本练习将引导您处理这一常见的实际问题，您将学习如何将系统的总动能精确地分解为内部热运动能和整体质心运动能。通过推导并量化这种集体运动对系统压强等关键热力学性质造成的误差，您将掌握一项在进行物理上有意义的模拟时至关重要的后处理技能。[@problem_id:2456613]", "id": "2456613", "problem": "给定一个有限的点状粒子系统，其初始速度是通过从名义目标温度下的麦克斯韦-玻尔兹曼分布 (MB) 中独立采样而指定的，但有限采样导致了非零的净漂移。这会产生一个非零的总线性动量，从而导致一个非零的质心 (COM) 速度。COM 漂移的存在是分子动力学 (MD) 中“飞冰块”伪影的典型根源，在这种情况下，动能被虚假地隔离到低频集体运动中。您必须 (i) 基于第一性原理推导出一个后处理算法，以从速度中移除虚假的 COM 运动，以及 (ii) 量化当错误地将 COM 漂移包含在压力的动能贡献中时所产生的压力偏差。\n\n请仅使用以下基本依据：牛顿运动定律、动能的定义、总线性动量和质心速度的定义、理想气体定律中平动动能与压力的动理论联系，以及能量均分定理。请勿使用任何其他预先推导的专门结果。\n\n您的算法必须从平动动能的定义以及将速度分解为 COM 漂移和内禀（热）分量开始。关键量包括：\n- 粒子质量 $m_i$，单位为千克。\n- 粒子速度 $\\mathbf{v}_i$，单位为米/秒，表示为三分量向量。\n- 系统体积 $V$，单位为立方米。\n- 玻尔兹曼常数 $k_\\mathrm{B}$，单位为焦耳/开尔文，其值为 $k_\\mathrm{B} = 1.380\\,649\\times 10^{-23}\\,\\mathrm{J/K}$。\n\n定义总动能\n$$\nK_\\text{total} = \\frac{1}{2}\\sum_{i=1}^N m_i \\lVert \\mathbf{v}_i \\rVert^2,\n$$\n总线性动量\n$$\n\\mathbf{P} = \\sum_{i=1}^N m_i \\mathbf{v}_i,\n$$\n总质量\n$$\nM = \\sum_{i=1}^N m_i,\n$$\n以及质心速度\n$$\n\\mathbf{V}_\\text{cm} = \\frac{\\mathbf{P}}{M}.\n$$\n通过从每个 $\\mathbf{v}_i$ 中减去 $\\mathbf{V}_\\text{cm}$，您可以获得经 COM 校正的速度\n$$\n\\mathbf{v}_i^\\prime = \\mathbf{v}_i - \\mathbf{V}_\\text{cm},\n$$\n以及相应的热动能\n$$\nK_\\text{thermal} = \\frac{1}{2}\\sum_{i=1}^N m_i \\lVert \\mathbf{v}_i^\\prime \\rVert^2.\n$$\n\n根据动理论和应用于理想气体动能贡献的能量均分定理，由动能推断出的压力与平动动能和体积成比例。如果有人朴素地将 COM 漂移包括在内，会得到一个“朴素”压力 $P_\\text{naive}$；如果正确地排除了 COM 漂移，则会得到一个“热”压力 $P_\\text{thermal}$。将给定状态的飞冰块压力偏差定义为差值\n$$\n\\Delta P \\equiv P_\\text{naive} - P_\\text{thermal}.\n$$\n您的程序必须实现 COM 移除的后处理，并使用压力、动能和体积之间的理想动能关系计算 $\\Delta P$。最终答案以帕斯卡为单位表示，并四舍五入到最接近的整数。\n\n测试套件（三个独立案例）：\n- 案例 A（正常路径，非零 COM）：\n  - $N = 3$ 个相同粒子，对所有 $i$ 都有 $m_i = 6.633\\,520\\,9\\times 10^{-26}\\,\\mathrm{kg}$。\n  - 速度（单位 $\\mathrm{m/s}$）：$\\mathbf{v}_1 = (\\,350,\\,10,\\,0\\,)$，$\\mathbf{v}_2 = (\\,350,\\,-10,\\,0\\,)$，$\\mathbf{v}_3 = (\\,350,\\,0,\\,0\\,)$。\n  - 体积 $V = 2.7\\times 10^{-26}\\,\\mathrm{m}^3$。\n- 案例 B（边界情况，COM 已为零）：\n  - $N = 3$ 个相同粒子，对所有 $i$ 都有 $m_i = 6.633\\,520\\,9\\times 10^{-26}\\,\\mathrm{kg}$。\n  - 速度（单位 $\\mathrm{m/s}$）：$\\mathbf{v}_1 = (\\,100,\\,0,\\,0\\,)$，$\\mathbf{v}_2 = (\\,-100,\\,0,\\,0\\,)$，$\\mathbf{v}_3 = (\\,0,\\,0,\\,0\\,)$。\n  - 体积 $V = 2.7\\times 10^{-26}\\,\\mathrm{m}^3$。\n- 案例 C（边缘情况，极端漂移“飞冰块”）：\n  - $N = 4$，质量交替变化，$m_1 = m_3 = 39.948\\times 1.660\\,539\\,066\\,60\\times 10^{-27}\\,\\mathrm{kg}$ 和 $m_2 = m_4 = 20.179\\,7\\times 1.660\\,539\\,066\\,60\\times 10^{-27}\\,\\mathrm{kg}$。\n  - 速度（单位 $\\mathrm{m/s}$）均相等：$\\mathbf{v}_1 = \\mathbf{v}_2 = \\mathbf{v}_3 = \\mathbf{v}_4 = (\\,400,\\,0,\\,0\\,)$。\n  - 体积 $V = 8.0\\times 10^{-27}\\,\\mathrm{m}^3$。\n\n要求输出：\n- 对每个案例，计算 $\\Delta P$（单位：帕斯卡），四舍五入到最接近的整数。\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，按 $[\\Delta P_\\text{A}, \\Delta P_\\text{B}, \\Delta P_\\text{C}]$ 的顺序排列（单位：帕斯卡），例如 `[x,y,z]`。", "solution": "该问题要求推导并实现一种算法，以量化粒子系统中因虚假质心 (COM) 运动而产生的压力偏差。这种伪影通常被称为“飞冰块”效应，发生在初始速度虽从目标分布中采样，但由于有限采样而具有非零总线性动量时。推导将基于经典力学和动理论的第一性原理。\n\n首先，我们建立系统总动能、内禀（热）动能以及与 COM 运动相关的动能之间的关系。对于一个包含 $N$ 个粒子、质量为 $m_i$、速度为 $\\mathbf{v}_i$ 的系统，其总动能 $K_\\text{total}$ 定义为：\n$$\nK_\\text{total} = \\frac{1}{2}\\sum_{i=1}^N m_i \\lVert \\mathbf{v}_i \\rVert^2\n$$\n每个粒子的速度 $\\mathbf{v}_i$ 可以分解为 COM 速度 $\\mathbf{V}_\\text{cm}$ 和粒子相对于 COM 的速度 $\\mathbf{v}_i^\\prime$ 之和。\n$$\n\\mathbf{v}_i = \\mathbf{V}_\\text{cm} + \\mathbf{v}_i^\\prime\n$$\nCOM 速度定义为总动量 $\\mathbf{P}$ 除以总质量 $M$：\n$$\n\\mathbf{V}_\\text{cm} = \\frac{\\mathbf{P}}{M} = \\frac{\\sum_{i=1}^N m_i \\mathbf{v}_i}{\\sum_{i=1}^N m_i}\n$$\n将速度分解代入 $K_\\text{total}$ 的表达式中：\n$$\nK_\\text{total} = \\frac{1}{2}\\sum_{i=1}^N m_i \\lVert \\mathbf{V}_\\text{cm} + \\mathbf{v}_i^\\prime \\rVert^2 = \\frac{1}{2}\\sum_{i=1}^N m_i (\\mathbf{V}_\\text{cm} + \\mathbf{v}_i^\\prime) \\cdot (\\mathbf{V}_\\text{cm} + \\mathbf{v}_i^\\prime)\n$$\n展开点积：\n$$\nK_\\text{total} = \\frac{1}{2}\\sum_{i=1}^N m_i (\\lVert \\mathbf{V}_\\text{cm} \\rVert^2 + 2(\\mathbf{V}_\\text{cm} \\cdot \\mathbf{v}_i^\\prime) + \\lVert \\mathbf{v}_i^\\prime \\rVert^2)\n$$\n我们可以将其分为三项：\n$$\nK_\\text{total} = \\frac{1}{2}\\sum_{i=1}^N m_i \\lVert \\mathbf{v}_i^\\prime \\rVert^2 + \\mathbf{V}_\\text{cm} \\cdot \\left(\\sum_{i=1}^N m_i \\mathbf{v}_i^\\prime\\right) + \\frac{1}{2} \\lVert \\mathbf{V}_\\text{cm} \\rVert^2 \\left(\\sum_{i=1}^N m_i\\right)\n$$\n第一项根据定义是热动能 $K_\\text{thermal}$。第三项简化为 $\\frac{1}{2}M\\lVert \\mathbf{V}_\\text{cm} \\rVert^2$，即质心的动能 $K_\\text{cm}$。中间项涉及系统在 COM 参考系中的总动量。让我们来计算这个和：\n$$\n\\sum_{i=1}^N m_i \\mathbf{v}_i^\\prime = \\sum_{i=1}^N m_i (\\mathbf{v}_i - \\mathbf{V}_\\text{cm}) = \\sum_{i=1}^N m_i \\mathbf{v}_i - \\left(\\sum_{i=1}^N m_i\\right) \\mathbf{V}_\\text{cm}\n$$\n根据定义，$\\sum m_i \\mathbf{v}_i = \\mathbf{P}$ 且 $\\sum m_i = M$。由于 $\\mathbf{V}_\\text{cm} = \\mathbf{P}/M$，表达式变为：\n$$\n\\mathbf{P} - M\\left(\\frac{\\mathbf{P}}{M}\\right) = \\mathbf{P} - \\mathbf{P} = \\mathbf{0}\n$$\n因此，中间的交叉项为零。总动能严格地分离为热贡献和 COM 贡献（这一结果被称为柯尼希定理 (Koenig's theorem)）：\n$$\nK_\\text{total} = K_\\text{thermal} + K_\\text{cm}\n$$\n因此，移除 COM 运动的后处理算法包括：根据初始速度计算 $\\mathbf{V}_\\text{cm}$，然后将每个速度更新为 $\\mathbf{v}_i^\\prime = \\mathbf{v}_i - \\mathbf{V}_\\text{cm}$。\n\n接下来，我们量化压力偏差。对于一个行为类似理想气体的系统，压力 $P$、体积 $V$ 和平均平动动能 $\\langle K \\rangle$ 之间的联系源于理想气体定律 $PV=Nk_\\mathrm{B}T$ 和能量均分定理。对于三维空间中的 $N$ 个粒子，存在 $3N$ 个平动自由度。能量均分定理指出，平均动能为 $\\langle K \\rangle = N \\frac{3}{2}k_\\mathrm{B}T$。由此，我们得到 $k_\\mathrm{B}T = \\frac{2\\langle K \\rangle}{3N}$。将此代入理想气体定律，得到：\n$$\nP = \\frac{N}{V} k_\\mathrm{B}T = \\frac{N}{V} \\left(\\frac{2\\langle K \\rangle}{3N}\\right) = \\frac{2\\langle K \\rangle}{3V}\n$$\n对于模拟中的瞬时构型，我们使用瞬时动能 $K$ 作为平均值 $\\langle K \\rangle$ 的估计，从而得到表达式 $P = \\frac{2K}{3V}$。\n\n“朴素”压力 $P_\\text{naive}$ 是使用总动能计算的，它错误地包含了非热的 COM 运动：\n$$\nP_\\text{naive} = \\frac{2K_\\text{total}}{3V}\n$$\n正确的“热”压力 $P_\\text{thermal}$ 仅使用内禀动能：\n$$\nP_\\text{thermal} = \\frac{2K_\\text{thermal}}{3V}\n$$\n压力偏差 $\\Delta P$ 是二者之差：\n$$\n\\Delta P = P_\\text{naive} - P_\\text{thermal} = \\frac{2}{3V} (K_\\text{total} - K_\\text{thermal})\n$$\n利用能量分解 $K_\\text{total} = K_\\text{thermal} + K_\\text{cm}$，我们发现偏差完全由 COM 动能引起：\n$$\n\\Delta P = \\frac{2K_\\text{cm}}{3V}\n$$\n代入 $K_\\text{cm} = \\frac{1}{2}M\\lVert \\mathbf{V}_\\text{cm} \\rVert^2$ 的表达式：\n$$\n\\Delta P = \\frac{2}{3V} \\left( \\frac{1}{2}M\\lVert \\mathbf{V}_\\text{cm} \\rVert^2 \\right) = \\frac{M\\lVert \\mathbf{V}_\\text{cm} \\rVert^2}{3V}\n$$\n为了计算方便，通常更直接地使用总动量 $\\mathbf{P}$。由于 $\\mathbf{V}_\\text{cm} = \\mathbf{P}/M$，我们有 $\\lVert \\mathbf{V}_\\text{cm} \\rVert^2 = \\lVert \\mathbf{P} \\rVert^2 / M^2$。代入此式可得压力偏差的最终公式：\n$$\n\\Delta P = \\frac{M}{3V} \\left( \\frac{\\lVert \\mathbf{P} \\rVert^2}{M^2} \\right) = \\frac{\\lVert \\mathbf{P} \\rVert^2}{3VM}\n$$\n计算 $\\Delta P$ 的算法如下：\n1. 对于一个由 $N$ 个粒子组成的系统，计算总质量 $M = \\sum_{i=1}^N m_i$。\n2. 计算总线性动量向量 $\\mathbf{P} = \\sum_{i=1}^N m_i \\mathbf{v}_i$。\n3. 计算动量的平方大小 $\\lVert \\mathbf{P} \\rVert^2 = P_x^2 + P_y^2 + P_z^2$。\n4. 使用公式 $\\Delta P = \\frac{\\lVert \\mathbf{P} \\rVert^2}{3VM}$ 计算压力偏差。\n5. 由于所有输入均采用国际单位制(SI)，结果以帕斯卡为单位。\n\n此程序将应用于提供的三个测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the pressure bias due to COM drift for given test cases.\n    \"\"\"\n\n    amu_to_kg = 1.66053906660e-27\n\n    test_cases = [\n        {\n            # Case A: Happy path, non-zero COM drift\n            \"masses\": np.array([6.6335209e-26, 6.6335209e-26, 6.6335209e-26]),\n            \"velocities\": np.array([\n                [350.0, 10.0, 0.0],\n                [350.0, -10.0, 0.0],\n                [350.0, 0.0, 0.0]\n            ]),\n            \"volume\": 2.7e-26\n        },\n        {\n            # Case B: Boundary condition, zero COM drift\n            \"masses\": np.array([6.6335209e-26, 6.6335209e-26, 6.6335209e-26]),\n            \"velocities\": np.array([\n                [100.0, 0.0, 0.0],\n                [-100.0, 0.0, 0.0],\n                [0.0, 0.0, 0.0]\n            ]),\n            \"volume\": 2.7e-26\n        },\n        {\n            # Case C: Edge case, extreme drift \"flying ice cube\"\n            \"masses\": np.array([\n                39.948 * amu_to_kg,\n                20.1797 * amu_to_kg,\n                39.948 * amu_to_kg,\n                20.1797 * amu_to_kg\n            ]),\n            \"velocities\": np.array([\n                [400.0, 0.0, 0.0],\n                [400.0, 0.0, 0.0],\n                [400.0, 0.0, 0.0],\n                [400.0, 0.0, 0.0]\n            ]),\n            \"volume\": 8.0e-27\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        masses = case[\"masses\"]\n        velocities = case[\"velocities\"]\n        volume = case[\"volume\"]\n\n        # 1. Compute total mass M\n        total_mass = np.sum(masses)\n\n        # 2. Compute total linear momentum P\n        # Reshape masses to (N, 1) to broadcast with velocities (N, 3)\n        momenta = masses[:, np.newaxis] * velocities\n        total_momentum = np.sum(momenta, axis=0)\n\n        # 3. Calculate the squared magnitude of the momentum\n        p_squared = np.sum(total_momentum**2)\n\n        # 4. Compute the pressure bias delta_P\n        # If total_mass or volume is zero, pressure bias is ill-defined or zero.\n        # For non-zero momentum, it would be infinite. Given the problem\n        # context, we assume M > 0 and V > 0.\n        denominator = 3 * volume * total_mass\n        if denominator == 0:\n            # This case will happen if M=0 or V=0. If P is non-zero, this is a singularity.\n            # If P is zero, the bias is zero. In this problem, M>0 and V>0.\n            if p_squared == 0:\n                delta_p = 0.0\n            else:\n                # Mathematically infinite, but physically not sensible.\n                # The problem setups ensure this branch is not taken.\n                delta_p = np.inf\n        else:\n            delta_p = p_squared / denominator\n\n        # Round to the nearest integer as specified\n        # Standard rounding (round half up)\n        results.append(int(delta_p + 0.5))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```"}]}