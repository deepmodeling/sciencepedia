{"hands_on_practices": [{"introduction": "理解振动电子光谱的第一步，是掌握如何计算不同电子态上振动波函数之间的重叠。本练习提供了一个基础性的、分步进行的解析推导，它针对最简单的非平凡情况：两个势能面形状相同（频率 $\\omega$ 相同）但平衡位置不同的谐振子之间的 $0 \\rightarrow 0$ 跃迁。通过亲手完成这个推导，你将能巩固弗兰克-康登因子背后的量子力学原理，并深刻理解跃迁强度如何依赖于电子态之间的几何位移 $\\Delta x$。[@problem_id:2466970]", "problem": "考虑一个沿着一维坐标 $x$ 的核运动的单一简正模式，其折合质量为 $m$。低电子态和高电子态都建模为具有相同角频率 $\\omega$ 但平衡位置不同的谐振子势。具体来说，基态势为 $V_{\\mathrm{g}}(x) = \\tfrac{1}{2} m \\omega^{2} x^{2}$，激发态势为 $V_{\\mathrm{e}}(x) = \\tfrac{1}{2} m \\omega^{2} (x - \\Delta x)^{2}$，其中 $\\Delta x$ 是一个恒定的位移。假设 Born–Oppenheimer (BO) 近似和 Condon 近似（电子跃迁偶极矩与 $x$ 无关），并忽略任何 Duschinsky 转动，因此该简正模式对于两个电子态是共有的。\n\n令 $|v=0\\rangle$ 表示 $V_{\\mathrm{g}}(x)$ 中的振动基态，$|v'=0\\rangle$ 表示 $V_{\\mathrm{e}}(x)$ 中的振动基态。Franck–Condon 因子定义为这些振动态之间交叠积分的模的平方，即 $F_{00} = |\\langle v'=0 \\mid v=0 \\rangle|^2$。\n\n从每个谐振子势的定态 Schrödinger 方程以及束缚态波函数是平方可积和归一化的要求出发，推导出一个关于 $m$、$\\omega$、$\\hbar$ 和 $\\Delta x$ 的 $F_{00}$ 的闭式解析表达式。\n\n您的最终答案必须是一个单一的闭式解析表达式。不需要进行数值计算或四舍五入。Franck–Condon 因子是无量纲的；请勿在最终表达式中包含单位。", "solution": "对问题陈述进行验证。\n\n步骤 1：提取已知条件\n- 系统：沿一维坐标 $x$ 的核运动的单一简正模式。\n- 折合质量：$m$。\n- 基态势：$V_{\\mathrm{g}}(x) = \\frac{1}{2} m \\omega^{2} x^{2}$。\n- 激发态势：$V_{\\mathrm{e}}(x) = \\frac{1}{2} m \\omega^{2} (x - \\Delta x)^{2}$。\n- 角频率：$\\omega$，两个电子态相同。\n- 位移：$\\Delta x$，一个常数。\n- 近似：Born-Oppenheimer (BO) 近似、Condon 近似、无 Duschinsky 转动。\n- 振动态：$|v=0\\rangle$ 是 $V_{\\mathrm{g}}(x)$ 中的振动基态；$|v'=0\\rangle$ 是 $V_{\\mathrm{e}}(x)$ 中的振动基态。\n- 定义：Franck–Condon 因子为 $F_{00} = |\\langle v'=0 \\mid v=0 \\rangle|^2$。\n- 目标：推导出一个关于 $m$、$\\omega$、$\\hbar$ 和 $\\Delta x$ 的 $F_{00}$ 的闭式解析表达式。\n\n步骤 2：使用提取的已知条件进行验证\n该问题具有科学依据，因为它涉及到谐振子势能面之间的振动电子跃迁的标准和基本模型，这是分子光谱学和计算化学的基石。该问题是适定的，提供了所有必要的物理参数（$m$、$\\omega$、$\\Delta x$）和已确立的理论近似（BO、Condon），以唯一确定 Franck-Condon 因子。问题陈述客观而精确。它不包含任何科学或逻辑上的矛盾、无缺失信息、无歧义。这是量子力学中的一个经典问题。\n\n步骤 3：结论与行动\n问题有效。现在将推导严谨的解。\n\n推导始于一个一维谐振子的定态 Schrödinger 方程，其折合质量为 $m$，角频率为 $\\omega$，平衡位置为 $x_0$：\n$$\n-\\frac{\\hbar^2}{2m} \\frac{d^2\\psi(x)}{dx^2} + \\frac{1}{2}m\\omega^2(x-x_0)^2 \\psi(x) = E \\psi(x)\n$$\n此方程已归一化的基态（$v=0$）波函数解是一个高斯函数：\n$$\n\\psi_{v=0}(x; x_0) = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/4} \\exp\\left(-\\frac{m\\omega}{2\\hbar}(x-x_0)^2\\right)\n$$\n在这个问题中，我们有两个这样的势。\n\n对于基电子态，其势为 $V_{\\mathrm{g}}(x) = \\frac{1}{2} m \\omega^{2} x^{2}$，中心在 $x_0 = 0$。相应的振动基态波函数，我们记为 $\\psi_0(x) \\equiv \\langle x | v=0 \\rangle$，是：\n$$\n\\psi_0(x) = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/4} \\exp\\left(-\\frac{m\\omega}{2\\hbar}x^2\\right)\n$$\n对于激发电子态，其势为 $V_{\\mathrm{e}}(x) = \\frac{1}{2} m \\omega^{2} (x - \\Delta x)^{2}$，中心在 $x_0 = \\Delta x$。相应的振动基态波函数，我们记为 $\\psi'_{0}(x) \\equiv \\langle x | v'=0 \\rangle$，是：\n$$\n\\psi'_{0}(x) = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/4} \\exp\\left(-\\frac{m\\omega}{2\\hbar}(x-\\Delta x)^2\\right)\n$$\nFranck–Condon 因子 $F_{00}$ 是这两个波函数之间交叠积分的模的平方。交叠积分 $S_{00} = \\langle v'=0 \\mid v=0 \\rangle$ 在位置表象中计算如下：\n$$\nS_{00} = \\int_{-\\infty}^{\\infty} \\left(\\psi'_{0}(x)\\right)^* \\psi_0(x) \\,dx\n$$\n由于波函数是实数，复共轭 $(\\psi'_{0}(x))^*$ 就是 $\\psi'_{0}(x)$。代入波函数的表达式得到：\n$$\nS_{00} = \\int_{-\\infty}^{\\infty} \\left[ \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/4} \\exp\\left(-\\frac{m\\omega}{2\\hbar}(x-\\Delta x)^2\\right) \\right] \\left[ \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/4} \\exp\\left(-\\frac{m\\omega}{2\\hbar}x^2\\right) \\right] \\,dx\n$$\n合并归一化常数和指数项，我们得到：\n$$\nS_{00} = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/2} \\int_{-\\infty}^{\\infty} \\exp\\left[ -\\frac{m\\omega}{2\\hbar} \\left( (x-\\Delta x)^2 + x^2 \\right) \\right] \\,dx\n$$\n指数的自变量必须被简化。我们展开二次项：\n$$\n(x-\\Delta x)^2 + x^2 = (x^2 - 2x\\Delta x + (\\Delta x)^2) + x^2 = 2x^2 - 2x\\Delta x + (\\Delta x)^2\n$$\n为了求解该积分，我们对包含 $x$ 的项进行配方：\n$$\n2x^2 - 2x\\Delta x + (\\Delta x)^2 = 2\\left(x^2 - x\\Delta x\\right) + (\\Delta x)^2 = 2\\left( \\left(x - \\frac{\\Delta x}{2}\\right)^2 - \\left(\\frac{\\Delta x}{2}\\right)^2 \\right) + (\\Delta x)^2\n$$\n$$\n= 2\\left(x - \\frac{\\Delta x}{2}\\right)^2 - \\frac{(\\Delta x)^2}{2} + (\\Delta x)^2 = 2\\left(x - \\frac{\\Delta x}{2}\\right)^2 + \\frac{(\\Delta x)^2}{2}\n$$\n将此结果代回 $S_{00}$ 的积分中：\n$$\nS_{00} = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/2} \\int_{-\\infty}^{\\infty} \\exp\\left[ -\\frac{m\\omega}{2\\hbar} \\left( 2\\left(x - \\frac{\\Delta x}{2}\\right)^2 + \\frac{(\\Delta x)^2}{2} \\right) \\right] \\,dx\n$$\n与 $x$ 无关的项可以从积分中提出：\n$$\nS_{00} = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/2} \\exp\\left(-\\frac{m\\omega(\\Delta x)^2}{4\\hbar}\\right) \\int_{-\\infty}^{\\infty} \\exp\\left(-\\frac{m\\omega}{\\hbar}\\left(x - \\frac{\\Delta x}{2}\\right)^2\\right) \\,dx\n$$\n剩下的积分是一个标准的高斯积分，其形式为 $\\int_{-\\infty}^{\\infty} \\exp(-a(x-b)^2) \\,dx = \\sqrt{\\frac{\\pi}{a}}$。在我们的例子中，$a = \\frac{m\\omega}{\\hbar}$ 且 $b = \\frac{\\Delta x}{2}$。因此，积分的值为：\n$$\n\\int_{-\\infty}^{\\infty} \\exp\\left(-\\frac{m\\omega}{\\hbar}\\left(x - \\frac{\\Delta x}{2}\\right)^2\\right) \\,dx = \\sqrt{\\frac{\\pi}{m\\omega/\\hbar}} = \\sqrt{\\frac{\\pi\\hbar}{m\\omega}}\n$$\n将此结果代回 $S_{00}$ 的表达式中：\n$$\nS_{00} = \\left(\\frac{m\\omega}{\\pi\\hbar}\\right)^{1/2} \\exp\\left(-\\frac{m\\omega(\\Delta x)^2}{4\\hbar}\\right) \\left(\\frac{\\pi\\hbar}{m\\omega}\\right)^{1/2}\n$$\n前面的系数相互抵消，留下一个非常简洁的交叠积分表达式：\n$$\nS_{00} = \\exp\\left(-\\frac{m\\omega(\\Delta x)^2}{4\\hbar}\\right)\n$$\n最后，Franck-Condon 因子 $F_{00}$ 是 $S_{00}$ 的模的平方。由于 $S_{00}$ 是一个实数：\n$$\nF_{00} = |S_{00}|^2 = S_{00}^2 = \\left[ \\exp\\left(-\\frac{m\\omega(\\Delta x)^2}{4\\hbar}\\right) \\right]^2\n$$\n使用性质 $(\\exp(u))^2 = \\exp(2u)$，我们得到最终表达式：\n$$\nF_{00} = \\exp\\left(-2 \\cdot \\frac{m\\omega(\\Delta x)^2}{4\\hbar}\\right) = \\exp\\left(-\\frac{m\\omega(\\Delta x)^2}{2\\hbar}\\right)\n$$\n这是两个发生位移但其他方面相同的谐振子之间 $0-0$ 跃迁的 Franck-Condon 因子的闭式解析表达式。", "answer": "$$\\boxed{\\exp\\left(-\\frac{m\\omega(\\Delta x)^{2}}{2\\hbar}\\right)}$$", "id": "2466970"}, {"introduction": "在解析模型的基础上，我们常常需要计算整个振动电子跃迁系列（即所谓的“振动 progressions”）的强度，而不仅仅是单个 $0 \\rightarrow 0$ 跃迁。本实践介绍了一种巧妙且计算高效的方法，该方法利用了在位移谐振子模型中弗兰克-康登因子所呈现的泊松分布特性，并由此推导出一个简单的递推关系。这个练习将向你展示理论洞察力（即 $F_{v'} = e^{-S}S^{v'}/v'!$）如何转化为强大的算法，从而高效地模拟出完整的光谱轮廓。[@problem_id:2467001]", "problem": "一个双原子分子被建模为在两个电子态下沿单一简正模式运动的单一一维量子谐振子。较低电子态的振动本征态表示为 $\\lvert v \\rangle$，较高电子态的振动本征态表示为 $\\lvert v' \\rangle$。假设以下物理模型：两个电子态中的谐波频率相同，没有模式混合，并且 Born-Oppenheimer 近似和 Condon 近似适用。较高态的势能面相对于较低态的势能面沿同一简正坐标发生实数位移，该位移对应于一个 Huang–Rhys 因子 $S$，其定义为 $S = \\dfrac{m \\omega \\Delta Q^{2}}{2 \\hbar}$，其中 $m$ 是折合质量，$\\omega$ 是角频率，$\\Delta Q$ 是沿质量加权简正坐标的位移，$\\hbar$ 是约化普朗克常数。在这些假设下，从较低态的振动基态能级 $\\lvert v = 0 \\rangle$ 到较高态的能级 $\\lvert v' \\rangle$ 的垂直跃迁的 Franck–Condon 因子为 $F_{v'} = \\lvert \\langle v' \\lvert 0 \\rangle \\rvert^{2}$。\n\n您的任务是编写一个完整的程序，对于每个测试用例，该程序接受一个无量纲的 Huang–Rhys 因子 $S$ 和一个非负整数 $N_{\\max}$ 作为输入，并返回完整的 Franck–Condon 级数 $\\{F_{v'}\\}_{v' = 0}^{N_{\\max}}$，即从 $v' = 0$ 到 $v' = N_{\\max}$（含边界）的所有 Franck–Condon 因子。所有输出必须是实数，并且必须四舍五入到小数点后恰好 $10$ 位。由于 $S$ 是无量纲的，因此不需要物理单位。\n\n测试套件：\n- 用例 1：$S = 0.0$, $N_{\\max} = 8$。\n- 用例 2：$S = 0.75$, $N_{\\max} = 10$。\n- 用例 3：$S = 5.0$, $N_{\\max} = 14$。\n\n所要求的最终输出格式是包含一个列表的列表的单行，其中第 $k$ 个内部列表包含按上述顺序列出的第 $k$ 个测试用例的序列 $\\big[F_{0}, F_{1}, \\dots, F_{N_{\\max}^{(1)}}\\big]$。每个数字必须格式化为小数点后有恰好 $10$ 位的小数。例如，输出应具有以下形式：\n$[\\,[F_{0}^{(1)}, F_{1}^{(1)}, \\dots, F_{N_{\\max}^{(1)}}^{(1)}],[F_{0}^{(2)}, \\dots],[F_{0}^{(3)}, \\dots]\\,]$\n所有条目之间用逗号分隔，列表用方括号界定。程序必须精确地打印这一单行作为其唯一输出。", "solution": "此问题要求计算在振动电子跃迁中，从较低电子态的振动基态 $\\lvert v=0 \\rangle$ 到较高电子态的一系列振动能级 $\\lvert v' \\rangle$ 的 Franck–Condon 因子 $F_{v'}$。该系统被建模为一维量子谐振子。\n\n问题陈述提供了一组简化但标准的假设：Born-Oppenheimer 近似、Condon 近似以及两个电子态的谐波频率相同（$\\omega' = \\omega$）。两个势能面之间唯一的结构差异是沿简正坐标的几何位移 $\\Delta Q$。该位移由无量纲的 Huang–Rhys 因子 $S = \\frac{m \\omega \\Delta Q^2}{2 \\hbar}$ 来量化。\n\n从 $\\lvert 0 \\rangle \\to \\lvert v' \\rangle$ 跃迁的 Franck–Condon 因子由初始和最终振动波函数之间交叠积分的模平方定义：\n$$F_{v'} = \\lvert \\langle v' \\lvert 0 \\rangle \\rvert^2$$\n这里，$\\lvert 0 \\rangle$ 是较低态（未位移）谐振子的基态本征函数，而 $\\lvert v' \\rangle$ 是较高态（位移）谐振子的第 $v'$ 个本征函数。\n\n为了评估这个交叠积分，我们采用量子力学的算符形式。设较低态谐振子的湮灭算符和产生算符分别为 $a$ 和 $a^\\dagger$。位置算符为 $\\hat{Q} = \\sqrt{\\frac{\\hbar}{2m\\omega}}(a + a^\\dagger)$。较高态的势能中心位于 $Q = \\Delta Q$。因此，其本征态 $\\lvert v' \\rangle$ 是较低态本征态 $\\lvert v \\rangle$ 的位移版本。这种空间位移由位移算符 $D(\\alpha)$ 生成，其中 $\\alpha$ 是一个无量纲参数。\n态矢量之间的关系是 $\\lvert v' \\rangle = D(\\alpha) \\lvert v' \\rangle_0$，其中 $\\lvert v' \\rangle_0$ 表示量子数为 $v'$ 的未位移哈密顿量的本征态。位移算符由下式给出：\n$$D(\\alpha) = \\exp(\\alpha a^\\dagger - \\alpha^* a)$$\n位移参数 $\\alpha$ 与物理位移 $\\Delta Q$ 的关系为 $\\alpha = \\sqrt{\\frac{m\\omega}{2\\hbar}}\\Delta Q$。鉴于 $\\Delta Q$ 是一个实数值位移，$\\alpha$ 也是实数。我们可以将 $\\alpha$ 与 Huang–Rhys 因子 $S$ 联系起来：\n$$S = \\frac{m \\omega \\Delta Q^2}{2 \\hbar} = \\left(\\sqrt{\\frac{m\\omega}{2\\hbar}}\\Delta Q\\right)^2 = \\alpha^2$$\n因此，对于实数位移，我们有 $\\alpha = \\sqrt{S}$。\n\n现在交叠积分可以写为：\n$$\\langle v' \\lvert 0 \\rangle = \\langle v' \\rangle_0 D^\\dagger(\\alpha) \\lvert 0 \\rangle_0 = \\langle v' \\rangle_0 D(-\\alpha) \\lvert 0 \\rangle_0$$\n态 $D(-\\alpha) \\lvert 0 \\rangle_0$ 是一个相干态，记作 $\\lvert -\\alpha \\rangle$。相干态 $\\lvert \\beta \\rangle$ 在数态表象 $\\{\\lvert n \\rangle_0\\}$ 中的展开式为：\n$$\\lvert \\beta \\rangle = e^{-\\lvert\\beta\\rvert^2/2} \\sum_{n=0}^{\\infty} \\frac{\\beta^n}{\\sqrt{n!}} \\lvert n \\rangle_0$$\n代入 $\\beta = -\\alpha = -\\sqrt{S}$，我们得到：\n$$D(-\\alpha) \\lvert 0 \\rangle_0 = \\lvert -\\sqrt{S} \\rangle = e^{-S/2} \\sum_{n=0}^{\\infty} \\frac{(-\\sqrt{S})^n}{\\sqrt{n!}} \\lvert n \\rangle_0$$\n与 $\\langle v' \\rvert_0$ 作内积，并利用数态的正交归一性 $\\langle v' | n \\rangle_0 = \\delta_{v'n}$，我们分离出 $n=v'$ 的项：\n$$\\langle v' \\lvert 0 \\rangle = e^{-S/2} \\frac{(-\\sqrt{S})^{v'}}{\\sqrt{v'!}}$$\nFranck–Condon 因子是此振幅的模平方：\n$$F_{v'} = \\left| e^{-S/2} \\frac{(-\\sqrt{S})^{v'}}{\\sqrt{v'!}} \\right|^2 = e^{-S} \\frac{S^{v'}}{v'!}$$\n这个结果表明，振动电子级数的强度遵循均值为 $S$ 的泊松分布。这是位移谐振子模型的一个基本结果。\n\n在计算实现方面，直接计算 $S^{v'}$、$v'!$ 和 $e^{-S}$ 在数值上既不稳定又效率低下，特别是对于大的 $S$ 或 $v'$。一个更好的方法是使用从 $F_{v'}$ 公式推导出的递推关系：\n$$F_{v'} = \\frac{e^{-S} S^{v'}}{v'!} = \\left(\\frac{e^{-S} S^{v'-1}}{(v'-1)!}\\right) \\frac{S}{v'} = F_{v'-1} \\cdot \\frac{S}{v'}$$\n可以从 $v'=0$ 的初始值开始计算该级数：\n$$F_0 = e^{-S} \\frac{S^0}{0!} = e^{-S}$$\n然后，对于 $v' = 1, 2, \\dots, N_{\\max}$，每个后续因子都使用 $F_{v'} = F_{v'-1} \\cdot S/v'$ 来计算。这种迭代方法避免了巨大的中间值，在数值上既稳定又高效。$S=0$ 的特殊情况得出 $F_0 = 1$ 和 $F_{v'>0} = 0$，该递推关系能正确处理此情况。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates Franck-Condon progressions for given Huang-Rhys factors.\n    The Franck-Condon factor for a transition from v=0 to v' within the\n    displaced harmonic oscillator model (with equal frequencies) is given by\n    a Poisson distribution: F_v' = exp(-S) * S^v' / v'!, where S is the\n    Huang-Rhys factor.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Huang-Rhys factor S, max vibrational quantum number N_max)\n        (0.0, 8),\n        (0.75, 10),\n        (5.0, 14),\n    ]\n\n    all_results = []\n    for s_factor, n_max in test_cases:\n        fc_progression = []\n        \n        # Calculate the progression using a stable recurrence relation:\n        # F_v' = F_{v'-1} * S / v'\n        # This avoids calculating large factorials and powers directly.\n        \n        # Initial term for v'=0\n        # F_0 = exp(-S) * S^0 / 0! = exp(-S)\n        current_f = np.exp(-s_factor)\n        fc_progression.append(current_f)\n        \n        # Iteratively calculate terms for v' = 1, 2, ..., N_max\n        if n_max > 0:\n            for v_prime in range(1, n_max + 1):\n                # The case S=0 is implicitly handled. If S=0, current_f will\n                # become 0 for v_prime=1 and remain 0.\n                current_f = current_f * s_factor / v_prime\n                fc_progression.append(current_f)\n        \n        all_results.append(fc_progression)\n\n    # Format the final output string according to the problem specification.\n    # The output must be a single line string representing a list of lists,\n    # with each number formatted to exactly 10 decimal places.\n    outer_list_strs = []\n    for result_list in all_results:\n        inner_list_strs = [f\"{val:.10f}\" for val in result_list]\n        outer_list_strs.append(f\"[{','.join(inner_list_strs)}]\")\n    \n    final_output_str = f\"[{','.join(outer_list_strs)}]\"\n    \n    # The program must print exactly this single line as its only output.\n    print(final_output_str)\n\nsolve()\n```", "id": "2467001"}, {"introduction": "真实世界中的分子势能面通常很复杂，并非完美的谐振子，这使得解析解变得不可能。最后的这个实践将我们从理想化模型带入到现代计算化学所使用的通用数值方法中。在这里，波函数不再是解析函数，而是在坐标网格上表示的数值数组。你将学习通过直接对波函数的乘积进行数值积分来计算弗兰克-康登因子，这是一项适用于任何复杂势能面的通用且核心的计算技能。[@problem_id:2467014]", "problem": "一维（1D）振动坐标 $R$ 在一个包含 $N$ 个点 $\\{R_k\\}_{k=0}^{N-1}$ 的均匀网格上表示，该网格跨越区间 $[R_{\\min},R_{\\max}]$。两个实值振动波函数 $\\chi_i(R)$ 和 $\\chi_f(R)$ 在此网格上以数组 $\\{\\chi_i(R_k)\\}$ 和 $\\{\\chi_f(R_k)\\}$ 的形式给出。Franck-Condon（FC）因子是重叠积分的绝对值的平方，\n$$\nF = \\left|\\int_{R_{\\min}}^{R_{\\max}} \\chi_f^*(R)\\,\\chi_i(R)\\,dR\\right|^2,\n$$\n对于实值函数，该表达式简化为\n$$\nF = \\left(\\int_{R_{\\min}}^{R_{\\max}} \\chi_f(R)\\,\\chi_i(R)\\,dR\\right)^2.\n$$\n假设 $\\chi_i(R)$ 和 $\\chi_f(R)$ 在通常的 $L^2$ 范数意义下于实数轴上是归一化的。本问题中所有量均为无量纲。\n\n您需要编写一个完整、可运行的程序，对一组测试用例进行 $F$ 的数值计算。在这些测试用例中，振动波函数是无量纲一维量子谐振子（QHO）的波函数。对于一个非负整数量子数 $n$ 和一个位移 $\\Delta$，归一化的本征函数为\n$$\n\\psi_n(R;\\Delta) \\equiv \\frac{1}{\\sqrt{2^n\\,n!\\,\\sqrt{\\pi}}}\\,H_n(R-\\Delta)\\,e^{-\\frac{(R-\\Delta)^2}{2}},\n$$\n其中 $H_n(\\cdot)$ 是物理学家使用的 n 次埃尔米特多项式。对于每个测试用例，取 $\\chi_i(R)=\\psi_{n_i}(R;\\Delta_i)$ 和 $\\chi_f(R)=\\psi_{n_f}(R;\\Delta_f)$，并在指定的均匀网格上进行采样。\n\n您的程序必须为每个测试用例计算 Franck-Condon 因子\n$$\nF = \\left|\\int_{R_{\\min}}^{R_{\\max}} \\chi_f(R)\\,\\chi_i(R)\\,dR\\right|^2\n$$\n并恰当利用函数是在均匀网格上给出的这一事实。最终答案为纯数（无物理单位）。将每个报告结果表示为四舍五入到小数点后 $10$ 位的小数。\n\n测试套件（每个用例指定了 $(R_{\\min},R_{\\max},N,n_i,\\Delta_i,n_f,\\Delta_f)$）：\n- 用例 $1$：$(-10,\\,10,\\,20001,\\,0,\\,0,\\,0,\\,0)$。\n- 用例 $2$：$(-10,\\,10,\\,20001,\\,0,\\,0,\\,1,\\,0)$。\n- 用例 $3$：$(-10,\\,10,\\,20001,\\,0,\\,0,\\,0,\\,1)$。\n- 用例 $4$：$(-10,\\,10,\\,20001,\\,1,\\,0,\\,0,\\,1)$。\n- 用例 $5$：$(-12,\\,12,\\,24001,\\,0,\\,0,\\,0,\\,4)$。\n- 用例 $6$：$(-10,\\,10,\\,20001,\\,2,\\,1.5,\\,2,\\,1.5)$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表，结果的顺序与上述用例的顺序一致。例如，输出格式必须为\n$$\n[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4,\\text{result}_5,\\text{result}_6],\n$$\n其中每个 $\\text{result}_k$ 都四舍五入到小数点后 $10$ 位。不应打印任何其他文本。", "solution": "问题陈述已经过验证，被认定为具有科学依据、问题适定、客观且完整。它描述了理论光谱学中的一个标准计算任务：计算位移谐振子的 Franck-Condon 因子。所有必需的参数都已指定，且其物理和数学形式体系是正确的。因此，有必要提供一个解决方案。\n\n核心任务是计算初始振动态 $\\chi_i(R)$ 与末态振动态 $\\chi_f(R)$ 之间沿一维坐标 $R$ 的 Franck-Condon (FC) 因子 $F$。FC 因子定义为两个波函数之间重叠积分的绝对值的平方：\n$$ F = \\left| \\int \\chi_f^*(R) \\chi_i(R) dR \\right|^2 $$\n问题指明波函数为实值，这可将表达式简化为：\n$$ F = \\left( \\int \\chi_f(R) \\chi_i(R) dR \\right)^2 $$\n振动态被建模为无量纲一维量子谐振子 (QHO) 的本征函数。对于给定的整数量子数 $n \\ge 0$和势能最低点位移 $\\Delta$，归一化的波函数 $\\psi_n(R; \\Delta)$ 由下式给出：\n$$ \\psi_n(R; \\Delta) = \\frac{1}{\\sqrt{2^n n! \\sqrt{\\pi}}} H_n(R - \\Delta) e^{-\\frac{(R - \\Delta)^2}{2}} $$\n其中 $H_n(\\cdot)$ 表示物理学家使用的 n 次埃尔米特多项式。因此，初态和末态分别为 $\\chi_i(R) = \\psi_{n_i}(R; \\Delta_i)$ 和 $\\chi_f(R) = \\psi_{n_f}(R; \\Delta_f)$。\n\n该积分在指定的有限域 $[R_{\\min}, R_{\\max}]$ 上进行数值计算，这是一个有效的近似，因为当量子谐振子波函数在 $|R| \\to \\infty$ 时会指数衰减至零。对于指定的积分范围和参数，来自域外的对积分的贡献可以忽略不计。\n\n数值计算步骤如下：\n$1$. **网格生成**：对于由 $(R_{\\min}, R_{\\max}, N, n_i, \\Delta_i, n_f, \\Delta_f)$ 定义的每个测试用例，在区间 $[R_{\\min}, R_{\\max}]$ 上构建一个由 $N$ 个点组成的均匀网格，记为 $\\{R_k\\}$。网格间距为 $\\Delta R = (R_{\\max} - R_{\\min}) / (N - 1)$。\n\n$2$. **波函数求值**：在网格上的每个点 $R_k$ 处计算初态 $\\chi_i(R)$ 和末态 $\\chi_f(R)$ 的值。这需要计算埃尔米特多项式 $H_{n_i}$ 和 $H_{n_f}$、相应的归一化常数以及指数因子。标准科学计算库函数 `scipy.special.hermite` 提供了所需的多项式。\n\n$3$. **数值积分**：重叠积分 $I = \\int_{R_{\\min}}^{R_{\\max}} \\chi_f(R) \\chi_i(R) dR$ 通过数值方法计算。首先，通过将 $\\chi_f$ 和 $\\chi_i$ 数组进行逐元素相乘来形成被积函数数组。然后，对该被积函数数组应用梯形法则。该方法非常适合于均匀采样的函数，并在 `numpy.trapz` 函数中得到了高效实现。积分近似为：\n$$ I \\approx \\sum_{k=0}^{N-2} \\frac{\\chi_f(R_{k+1})\\chi_i(R_{k+1}) + \\chi_f(R_k)\\chi_i(R_k)}{2} (R_{k+1} - R_k) $$\n\n$4$. **最终计算**：将数值积分的结果平方，得到 Franck-Condon 因子 $F$，即 $F = I^2$。然后按要求将每个测试用例的结果四舍五入到小数点后10位。\n\n整个过程在所提供的 Python 程序中实现。程序定义了一个辅助函数来生成量子谐振子（QHO）的波函数，并通过一个主循环遍历所有测试用例，为每个用例执行计算并收集结果。最终输出按照指定要求被格式化为单行。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import hermite, factorial\n\ndef solve():\n    \"\"\"\n    Solves the Franck-Condon factor problem for a given set of test cases.\n    \"\"\"\n\n    def qho_wavefunction(n: int, delta: float, r_grid: np.ndarray) -> np.ndarray:\n        \"\"\"\n        Calculates the normalized 1D Quantum Harmonic Oscillator (QHO) wavefunction.\n\n        Args:\n            n: The integer quantum number.\n            delta: The displacement of the oscillator potential.\n            r_grid: The 1D grid of points R.\n\n        Returns:\n            A numpy array representing the wavefunction values on the grid.\n        \"\"\"\n        # Physicists' Hermite polynomial of degree n\n        hermite_poly = hermite(n)\n        \n        # Argument for the polynomial and exponential\n        x = r_grid - delta\n        \n        # Use np.longdouble for precision in intermediate calculations for the constant\n        # Normalization constant squared is (2^n * n! * sqrt(pi))\n        norm_const_sq = np.power(np.longdouble(2), n) * factorial(n, exact=False) * np.sqrt(np.pi)\n        norm_const = 1.0 / np.sqrt(norm_const_sq)\n        \n        # Wavefunction psi_n(R; delta)\n        psi = norm_const * hermite_poly(x) * np.exp(-x**2 / 2.0)\n        \n        return psi.astype(np.float64)\n\n    # Test Suite (R_min, R_max, N, n_i, delta_i, n_f, delta_f)\n    test_cases = [\n        (-10, 10, 20001, 0, 0, 0, 0),\n        (-10, 10, 20001, 0, 0, 1, 0),\n        (-10, 10, 20001, 0, 0, 0, 1),\n        (-10, 10, 20001, 1, 0, 0, 1),\n        (-12, 12, 24001, 0, 0, 0, 4),\n        (-10, 10, 20001, 2, 1.5, 2, 1.5),\n    ]\n\n    results = []\n    for case in test_cases:\n        R_min, R_max, N, n_i, delta_i, n_f, delta_f = case\n        \n        # Create the uniform 1D grid for the coordinate R\n        R_grid = np.linspace(R_min, R_max, N, dtype=np.float64)\n        \n        # Generate the initial and final state wavefunctions on the grid\n        chi_i = qho_wavefunction(n_i, delta_i, R_grid)\n        chi_f = qho_wavefunction(n_f, delta_f, R_grid)\n        \n        # The integrand is the product of the final and initial wavefunctions\n        integrand = chi_f * chi_i\n        \n        # Calculate the overlap integral using the trapezoidal rule.\n        # np.trapz(y, x) is the most robust way to perform the integration.\n        overlap_integral = np.trapz(integrand, x=R_grid)\n        \n        # The Franck-Condon factor is the square of the overlap integral\n        fc_factor = overlap_integral**2\n        \n        # Round the result to 10 decimal places as required\n        results.append(f\"{fc_factor:.10f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2467014"}]}