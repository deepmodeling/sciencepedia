{"hands_on_practices": [{"introduction": "理论学习的最佳补充是动手实践。本节将通过一系列精心设计的练习，帮助你将热力学积分的抽象概念转化为具体的计算技能。我们从一个理想化但极具启发性的系统开始：谐振子。通过为一个在一维谐波势中的粒子计算自由能变化，你将能亲手实践热力学积分的基本公式 $\\Delta A = \\int_{0}^{1} \\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\rangle_{\\lambda} d\\lambda$，并从一个可解析求解的模型中直观地理解其核心机制。这个练习将为你后续更复杂的计算打下坚实的基础。[@problem_id:2465950]", "problem": "一个质量为 $m$ 的单个经典粒子在一维空间中运动，并处于一个谐波势中。在状态 A 中，势为 $U_{A}(x) = \\frac{1}{2} k_{A} x^{2}$；在状态 B 中，势为 $U_{B}(x) = \\frac{1}{2} k_{B} x^{2}$，其中 $k_{A} > 0$ 和 $k_{B} > 0$ 是力常数。该系统处于绝对温度 $T$ 下的正则系综中。定义一个炼金术耦合参数 $\\lambda \\in [0,1]$ 和一条势的路径 $U_{\\lambda}(x) = (1-\\lambda) U_{A}(x) + \\lambda U_{B}(x)$。使用热力学积分 (TI)，确定亥姆霍兹自由能差 $\\Delta A_{A \\to B} = A_{B} - A_{A}$ 的精确解析表达式。假设采用经典统计，并注意状态 A 和 B 中的动能贡献是相同的，因此在自由能差中相互抵消。将最终答案以 $k_{A}$、$k_{B}$、玻尔兹曼常数 $k_{\\mathrm{B}}$ 和 $T$ 的单一闭合形式表达式符号化地表示。", "solution": "该系统是经典的，并且处于温度 $T$ 下的正则系综中。亥姆霍兹自由能的定义为 $A = - k_{\\mathrm{B}} T \\ln Z$，其中 $Z$ 是配分函数。在热力学积分 (TI) 中，引入一个耦合参数 $\\lambda \\in [0,1]$，它通过 $U_{\\lambda}(x) = (1-\\lambda) U_{A}(x) + \\lambda U_{B}(x)$ 将势从 $U_A$ 连续地变换到 $U_B$。在正则系综中，基本的 TI 关系式为\n$$\n\\Delta A_{A \\to B} \\equiv A_{B} - A_{A} = \\int_{0}^{1} \\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} \\, d\\lambda,\n$$\n其中 $\\langle \\cdot \\rangle_{\\lambda}$ 表示相对于与 $U_{\\lambda}$ 对应的正则分布的系综平均。\n\n对于给定路径，\n$$\nU_{\\lambda}(x) = \\frac{1}{2}\\left[(1-\\lambda)k_{A} + \\lambda k_{B}\\right] x^{2} \\equiv \\frac{1}{2} k(\\lambda) x^{2},\n$$\n其中 $k(\\lambda) = (1-\\lambda)k_{A} + \\lambda k_{B}$。将 $U_{\\lambda}$ 对 $\\lambda$ 求导，得到\n$$\n\\frac{\\partial U_{\\lambda}}{\\partial \\lambda} = \\frac{1}{2}\\left(k_{B} - k_{A}\\right) x^{2}.\n$$\n因此，TI 被积函数为\n$$\n\\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} = \\frac{1}{2}\\left(k_{B} - k_{A}\\right) \\langle x^{2} \\rangle_{\\lambda}.\n$$\n\n我们现在计算力常数为 $k(\\lambda)$ 的一维谐波势的 $\\langle x^{2} \\rangle_{\\lambda}$。在正则系综中，\n$$\n\\langle x^{2} \\rangle_{\\lambda} = \\frac{\\int_{-\\infty}^{\\infty} x^{2} \\exp\\!\\left[-\\beta \\frac{1}{2} k(\\lambda) x^{2}\\right] dx}{\\int_{-\\infty}^{\\infty} \\exp\\!\\left[-\\beta \\frac{1}{2} k(\\lambda) x^{2}\\right] dx},\n$$\n其中 $\\beta = \\frac{1}{k_{\\mathrm{B}} T}$。分子和分母都是高斯积分。使用此类矩的标准结果，可以得到\n$$\n\\langle x^{2} \\rangle_{\\lambda} = \\frac{1}{\\beta k(\\lambda)} = \\frac{k_{\\mathrm{B}} T}{k(\\lambda)}.\n$$\n因此，\n$$\n\\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} = \\frac{1}{2}\\left(k_{B} - k_{A}\\right) \\frac{k_{\\mathrm{B}} T}{k(\\lambda)}.\n$$\n\n代入 TI 积分，得到\n$$\n\\Delta A_{A \\to B} = \\int_{0}^{1} \\frac{1}{2}\\left(k_{B} - k_{A}\\right) \\frac{k_{\\mathrm{B}} T}{(1-\\lambda)k_{A} + \\lambda k_{B}} \\, d\\lambda.\n$$\n这是一个初等积分。令 $a = k_{A}$ 和 $b = k_{B}$。那么\n$$\n\\Delta A_{A \\to B} = \\frac{1}{2} k_{\\mathrm{B}} T (b - a) \\int_{0}^{1} \\frac{d\\lambda}{a + \\lambda (b - a)}.\n$$\n计算该积分，\n$$\n\\int_{0}^{1} \\frac{d\\lambda}{a + \\lambda (b - a)} = \\frac{1}{b - a} \\left[ \\ln\\!\\left(a + \\lambda (b - a)\\right) \\right]_{0}^{1} = \\frac{1}{b - a} \\left( \\ln b - \\ln a \\right).\n$$\n因此，\n$$\n\\Delta A_{A \\to B} = \\frac{1}{2} k_{\\mathrm{B}} T \\left( \\ln b - \\ln a \\right) = \\frac{1}{2} k_{\\mathrm{B}} T \\ln\\!\\left(\\frac{k_{B}}{k_{A}}\\right).\n$$\n\n该表达式是沿指定的线性耦合路径的两个一维谐波状态之间的精确经典构象自由能差，并且与直接的配分函数计算结果一致，注意到动能贡献在差值中被抵消了。", "answer": "$$\\boxed{\\frac{1}{2}\\,k_{\\mathrm{B}}\\,T\\,\\ln\\!\\left(\\frac{k_{B}}{k_{A}}\\right)}$$", "id": "2465950"}, {"introduction": "在掌握了基本原理之后，我们转向一个更接近真实分子模拟的场景。在实际研究中，我们处理的势能函数远比简单的谐波势复杂，且通常无法获得解析解。这个练习将引导你计算两种广泛使用的模型势——Lennard-Jones (LJ) 势和纯排斥的 Weeks-Chandler-Andersen (WCA) 势——之间的自由能差。通过这个数值计算任务，你将学习如何处理更真实的相互作用，并理解如何量化分子间吸引力对系统自由能的贡献，这是理解液体结构和性质的关键一步。[@problem_id:2466007]", "problem": "考虑一个稀疏的经典系统，该系统由三维空间中 $2$ 个全同粒子组成，处于绝对温度 $T$ 下。它们被限制在一定范围内，使得其质心间距 $r$ 局限于区间 $[0,R]$。粒子之间通过 Lennard–Jones (LJ) 势或 Weeks–Chandler–Andersen (WCA) 势相互作用。使用约化的 Lennard–Jones 单位，其中能量标度 $\\varepsilon$、长度标度 $\\sigma$ 和玻尔兹曼常数 $k_{\\mathrm{B}}$ 均设为1，即 $\\varepsilon=\\sigma=k_{\\mathrm{B}}=1$。因此，所有能量都以 $\\varepsilon$ 为单位表示，所有长度以 $\\sigma$ 为单位表示，温度以约化形式 $T^{\\ast}=T$ 表示。\n\n将 Lennard–Jones 势 $U_{\\mathrm{LJ}}(r)$ 定义为\n$$\nU_{\\mathrm{LJ}}(r)=4\\varepsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{12}-\\left(\\frac{\\sigma}{r}\\right)^{6}\\right],\n$$\n并将 Weeks–Chandler–Andersen (WCA) 势 $U_{\\mathrm{WCA}}(r)$ 定义为在截断半径 $r_{\\mathrm{c}}=2^{1/6}\\sigma$ 处的截断和平移：\n$$\nU_{\\mathrm{WCA}}(r)=\n\\begin{cases}\nU_{\\mathrm{LJ}}(r)-U_{\\mathrm{LJ}}(r_{\\mathrm{c}}), & r\\le r_{\\mathrm{c}},\\\\\n0, & r>r_{\\mathrm{c}}.\n\\end{cases}\n$$\n注意 $U_{\\mathrm{LJ}}(r_{\\mathrm{c}})=-\\varepsilon$，因此平移量等于 $+\\varepsilon$。\n\n考虑在如下炼金路径下，该双粒子系统的正则系综自由能 $A(\\lambda)$\n$$\nU_{\\lambda}(r)=(1-\\lambda)\\,U_{\\mathrm{LJ}}(r)+\\lambda\\,U_{\\mathrm{WCA}}(r), \\quad \\lambda\\in[0,1],\n$$\n该路径将 $\\lambda=0$ 时的 Lennard–Jones 相互作用连续地变换为 $\\lambda=1$ 时的 Weeks–Chandler–Andersen 相互作用。热力学积分 (TI) 自由能差定义为\n$$\n\\Delta A \\equiv A(1)-A(0)=\\int_{0}^{1}\\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda}\\right\\rangle_{\\lambda}\\,d\\lambda,\n$$\n其中 $\\langle\\cdot\\rangle_{\\lambda}$ 表示在固定的 $\\lambda$ 和温度 $T$ 下的正则系综平均值。\n\n你需要计算每对相互作用粒子的自由能差 $\\Delta A$（以 $\\varepsilon$ 为单位），针对下面指定的一组测试用例。假设相对构型积分是在径向距离 $r\\in[0,R]$ 上使用球坐标测度 $4\\pi r^{2}$ 进行评估；质心的贡献在系综平均中相互抵消，可以忽略。计算中不涉及角度，因此不需要角度单位。\n\n测试集（每个用例以约化单位 $(T^{\\ast},R)$ 的形式给出）：\n- 用例 1: $(1.0,\\,4.0)$\n- 用例 2: $(0.5,\\,4.0)$\n- 用例 3: $(2.0,\\,4.0)$\n- 用例 4: $(1.0,\\,1.05\\,r_{\\mathrm{c}})$\n- 用例 5: $(1.0,\\,0.95\\,r_{\\mathrm{c}})$\n\n你的任务：\n- 仅使用上述定义，将每个用例的 $\\Delta A$ 计算为以 $\\varepsilon$ 为单位的实数（浮点数）。\n- 将每个结果表示为四舍五入到小数点后 $6$ 位的小数。\n- 你的程序应产生单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表，顺序与测试集相同（例如，$[x_{1},x_{2},x_{3},x_{4},x_{5}]$）。", "solution": "问题陈述已经过验证，被认为是具有科学依据、良定且客观的。这是统计力学中的一个标准问题，要求计算由 Lennard–Jones 势和 Weeks–Chandler–Andersen 势定义的两个系统之间的自由能差。所有必需的参数和定义都已提供，不存在矛盾或歧义。该问题是有效的，将提供一个解法。\n\n目标是计算当粒子间势从 Lennard–Jones 势 $U_{\\mathrm{LJ}}(r)$ 变换为 Weeks–Chandler–Andersen 势 $U_{\\mathrm{WCA}}(r)$ 时，亥姆霍兹自由能的变化量 $\\Delta A$。该系统由两个粒子组成，处于温度 $T$ 下，其间距 $r$ 被限制在区间 $[0, R]$ 内。所有计算都在约化单位下进行，其中 $\\varepsilon=\\sigma=k_{\\mathrm{B}}=1$。\n\n自由能差通过热力学积分 (TI) 定义：\n$$\n\\Delta A = A(\\lambda=1) - A(\\lambda=0) = \\int_{0}^{1} \\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} \\,d\\lambda\n$$\n其中 $U_{\\lambda}(r) = (1-\\lambda)U_{\\mathrm{LJ}}(r) + \\lambda U_{\\mathrm{WCA}}(r)$。\n\n虽然 TI 公式是一个有效的定义，但对于这个特定问题，存在一种更直接且计算效率更高的方法。亥姆霍兹自由能 $A$ 通过基本关系 $A = -k_{\\mathrm{B}}T \\ln Z$ 与正则配分函数 $Z$ 相关联。在指定的约化单位中，这变为 $A = -T \\ln Z$。因此，自由能差为：\n$$\n\\Delta A = A(U=U_{\\mathrm{WCA}}) - A(U=U_{\\mathrm{LJ}}) = -T \\ln Z_{1} - (-T \\ln Z_{0}) = -T \\ln\\left(\\frac{Z_{1}}{Z_{0}}\\right)\n$$\n此处，$Z_{0}$ 和 $Z_{1}$ 分别是势为 $U_{\\mathrm{LJ}}$ 和 $U_{\\mathrm{WCA}}$ 的系统的构型积分。质心运动是可分离的，其对配分函数的贡献在比值中被抵消，因此我们只考虑关于间距 $r$ 的相对构型积分：\n$$\nZ = \\int_{0}^{R} e^{-U(r)/T} 4\\pi r^2 \\,dr\n$$\n因此，我们必须计算：\n$$\nZ_{0} = \\int_{0}^{R} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr\n$$\n$$\nZ_{1} = \\int_{0}^{R} e^{-U_{\\mathrm{WCA}}(r)/T} 4\\pi r^2 \\,dr\n$$\n在约化单位中，势函数为：\n$$\nU_{\\mathrm{LJ}}(r) = 4\\left(r^{-12} - r^{-6}\\right)\n$$\n$$\nU_{\\mathrm{WCA}}(r) = \n\\begin{cases}\nU_{\\mathrm{LJ}}(r) + 1, & r \\le r_{\\mathrm{c}} \\\\\n0, & r > r_{\\mathrm{c}}\n\\end{cases}\n$$\n其中截断半径位于 LJ 势的最小值处，$r_{\\mathrm{c}} = 2^{1/6}$。\n\n计算策略取决于限制半径 $R$ 和 WCA 截断半径 $r_{\\mathrm{c}}$ 之间的关系。\n\n首先，我们分析 $R \\le r_{\\mathrm{c}}$ 的情况。此条件适用于测试用例 5。在此范围内，间距 $r$ 始终小于或等于 $r_{\\mathrm{c}}$。因此，对于所有可及的构型，WCA 势为 $U_{\\mathrm{WCA}}(r) = U_{\\mathrm{LJ}}(r) + 1$。配分函数 $Z_{1}$ 变为：\n$$\nZ_{1} = \\int_{0}^{R} e^{-(U_{\\mathrm{LJ}}(r)+1)/T} 4\\pi r^2 \\,dr = e^{-1/T} \\int_{0}^{R} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr = e^{-1/T}Z_{0}\n$$\n于是自由能差可以解析地确定：\n$$\n\\Delta A = -T \\ln\\left(\\frac{Z_{1}}{Z_{0}}\\right) = -T \\ln\\left(\\frac{e^{-1/T}Z_{0}}{Z_{0}}\\right) = -T \\ln(e^{-1/T}) = -T \\left(-\\frac{1}{T}\\right) = 1\n$$\n对于任何满足 $R \\le r_{\\mathrm{c}}$ 的测试用例，$\\Delta A = 1$（以 $\\varepsilon$ 为单位）。\n\n其次，我们分析 $R > r_{\\mathrm{c}}$ 的情况。此条件适用于测试用例 1、2、3 和 4。$Z_{0}$ 和 $Z_{1}$ 的积分必须在 $r=r_{\\mathrm{c}}$ 处分开。\n对于 $Z_{0}$，积分为：\n$$\nZ_{0} = \\int_{0}^{r_{\\mathrm{c}}} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr + \\int_{r_{\\mathrm{c}}}^{R} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr\n$$\n让我们将这两个数值积分分别定义为 $I_{\\mathrm{LJ},1}$ 和 $I_{\\mathrm{LJ},2}$。因此，$Z_{0} = I_{\\mathrm{LJ},1} + I_{\\mathrm{LJ},2}$。\n\n对于 $Z_{1}$，势函数在 $r_{\\mathrm{c}}$ 处形式发生变化：\n$$\nZ_{1} = \\int_{0}^{r_{\\mathrm{c}}} e^{-(U_{\\mathrm{LJ}}(r)+1)/T} 4\\pi r^2 \\,dr + \\int_{r_{\\mathrm{c}}}^{R} e^{-0/T} 4\\pi r^2 \\,dr\n$$\n第一个积分与 $I_{\\mathrm{LJ},1}$ 相关：\n$$\n\\int_{0}^{r_{\\mathrm{c}}} e^{-(U_{\\mathrm{LJ}}(r)+1)/T} 4\\pi r^2 \\,dr = e^{-1/T} \\int_{0}^{r_{\\mathrm{c}}} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr = e^{-1/T} I_{\\mathrm{LJ},1}\n$$\n第二个积分是解析的，表示一个无相互作用粒子可及的球壳体积：\n$$\n\\int_{r_{\\mathrm{c}}}^{R} 4\\pi r^2 \\,dr = 4\\pi \\left[\\frac{r^3}{3}\\right]_{r_{\\mathrm{c}}}^{R} = \\frac{4\\pi}{3}(R^3 - r_{\\mathrm{c}}^3)\n$$\n让我们将此体积项记为 $V_{\\text{shell}}$。\n因此，对于 $R > r_{\\mathrm{c}}$：\n$$\nZ_{1} = e^{-1/T} I_{\\mathrm{LJ},1} + V_{\\text{shell}}\n$$\n自由能差为：\n$$\n\\Delta A = -T \\ln\\left(\\frac{e^{-1/T} I_{\\mathrm{LJ},1} + \\frac{4\\pi}{3}(R^3 - r_{\\mathrm{c}}^3)}{I_{\\mathrm{LJ},1} + I_{\\mathrm{LJ},2}}\\right)\n$$\n积分 $I_{\\mathrm{LJ},1}$ 和 $I_{\\mathrm{LJ},2}$ 没有解析解，必须进行数值计算。被积函数 $f(r,T) = 4\\pi r^2 \\exp(-U_{\\mathrm{LJ}}(r)/T)$ 是良态的，当 $r \\to 0$ 时，由于势函数中占主导地位的 $r^{-12}$ 项的极强排斥作用，使得玻尔兹曼因子消失，函数值趋近于 0。标准的数值积分方法足以进行高精度评估。\n\n计算步骤如下：\n对于每对参数 $(T, R)$:\n1.  检查是否 $R \\le r_{\\mathrm{c}}$。如果是，则结果为 $\\Delta A = 1.0$。\n2.  如果 $R > r_{\\mathrm{c}}$，则数值计算积分 $I_{\\mathrm{LJ},1} = \\int_{0}^{r_{\\mathrm{c}}} f(r,T) \\,dr$ 和 $I_{\\mathrm{LJ},2} = \\int_{r_{\\mathrm{c}}}^{R} f(r,T) \\,dr$。\n3.  使用上面推导的表达式计算 $Z_0$ 和 $Z_1$。\n4.  计算 $\\Delta A = -T \\ln(Z_1/Z_0)$。\n5.  将最终结果四舍五入到小数点后 6 位。\n将实施此步骤来解决所有指定的测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import integrate\n\ndef solve():\n    \"\"\"\n    Computes the free energy difference Delta A for the transformation\n    from a Lennard-Jones to a Weeks-Chandler-Andersen potential.\n    \"\"\"\n\n    # Define constants in reduced units\n    SIGMA = 1.0\n    EPSILON = 1.0\n    KB = 1.0\n    PI = np.pi\n    \n    # WCA cutoff radius (minimum of LJ potential)\n    R_C = 2**(1/6) * SIGMA\n\n    # Define the test cases (T_star, R)\n    test_cases = [\n        (1.0, 4.0),                      # Case 1\n        (0.5, 4.0),                      # Case 2\n        (2.0, 4.0),                      # Case 3\n        (1.0, 1.05 * R_C),               # Case 4\n        (1.0, 0.95 * R_C),               # Case 5\n    ]\n\n    results = []\n    for T_star, R in test_cases:\n        \n        # Case where R <= r_c, result is analytical\n        if R <= R_C:\n            delta_A = 1.0\n            results.append(delta_A)\n            continue\n\n        # Case where R > r_c, requires numerical integration\n\n        # Define the integrand for the LJ partition function integrals\n        def lj_integrand(r, T):\n            \"\"\"\n            Integrand for the configurational integral with LJ potential.\n            f(r, T) = 4 * pi * r^2 * exp(-U_LJ(r)/T)\n            \"\"\"\n            # Handle r=0 case to avoid division by zero\n            if r == 0:\n                return 0.0\n            \n            # Using r_inv to avoid repeated power calculations\n            r_inv = 1.0 / r\n            r_inv6 = r_inv**6\n            r_inv12 = r_inv6**2\n            \n            # Lennard-Jones potential in reduced units\n            u_lj = 4.0 * (r_inv12 - r_inv6)\n            \n            boltzmann_factor = np.exp(-u_lj / T)\n            \n            return 4.0 * PI * r**2 * boltzmann_factor\n\n        # Numerically compute the two parts of the Z_0 integral\n        # I_LJ_1 = integral from 0 to r_c\n        # I_LJ_2 = integral from r_c to R\n        try:\n            I_LJ_1, _ = integrate.quad(lj_integrand, 0, R_C, args=(T_star,))\n            I_LJ_2, _ = integrate.quad(lj_integrand, R_C, R, args=(T_star,))\n        except Exception as e:\n            # In case of integration failure which is not expected for these parameters\n            # Append a placeholder and print an error.\n            print(f\"Integration failed for case (T={T_star}, R={R}): {e}\")\n            results.append(np.nan)\n            continue\n\n        # Calculate Z_0 = I_LJ_1 + I_LJ_2\n        Z_0 = I_LJ_1 + I_LJ_2\n\n        # Calculate Z_1\n        # Part 1: Integral from 0 to r_c\n        z1_part1 = np.exp(-1.0 / T_star) * I_LJ_1\n        \n        # Part 2: Integral from r_c to R (analytical for U_WCA = 0)\n        # Volume of the spherical shell\n        V_shell = (4.0 * PI / 3.0) * (R**3 - R_C**3)\n        \n        Z_1 = z1_part1 + V_shell\n        \n        # Check for non-positive arguments to log which might arise from numerical error\n        if Z_0 <= 0 or Z_1 <= 0:\n            delta_A = np.nan # Or handle as an error\n        else:\n            delta_A = -T_star * np.log(Z_1 / Z_0)\n        \n        results.append(delta_A)\n\n    # Format output as a string with 6 decimal places per result\n    formatted_results = [\"{:.6f}\".format(r) for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2466007"}, {"introduction": "任何数值计算的最终目标都是获得可靠和准确的结果。最后一个练习将带你深入了解热力学积分计算中的误差分析，这是一个在科研实践中至关重要的话题。你将探索在计算资源有限的情况下，如何在积分点数量$N$（影响离散化导致的系统偏差）和每个点的模拟时长$t$（影响统计涨落导致的方差）之间做出权衡。通过分析均方根误差 (RMSE)，你将学会如何设计高效且精确的热力学积分计算方案，这是从学术新手成长为计算专家的关键一步。[@problem_id:2465970]", "problem": "您正在研究计算化学中的热力学积分 (Thermodynamic Integration, TI)。由一个无量纲的炼金术参数耦合的两个状态之间的自由能差由以下基本定义给出\n$$\n\\Delta A \\;=\\; \\int_{0}^{1} g(\\lambda)\\, d\\lambda,\n$$\n其中 $g(\\lambda) = \\langle \\partial U / \\partial \\lambda \\rangle_{\\lambda}$ 是势能相对于耦合参数 $\\lambda$ 的导数的平衡系综平均值。在一个数值实验中，您使用复合梯形法则在一个包含 $N$ 个点的均匀网格上近似该积分，网格间距为 $h = 1/(N-1)$，权重为 $w_0 = w_{N-1} = h/2$，对于 $i=1,\\dots,N-2$，权重为 $w_i = h$。在每个网格点 $\\lambda_i = i/(N-1)$，您运行一个时长为 $t$ 的独立分子动力学模拟，通过时间平均来估计 $g(\\lambda_i)$。假设以下理想化但标准的统计不确定性模型：在每个 $\\lambda_i$ 处的时间平均估计量对于真实的 $g(\\lambda_i)$ 是无偏的，并且其方差为\n$$\n\\mathrm{Var}\\big(\\widehat{g}(\\lambda_i)\\big) \\;=\\; \\frac{\\alpha(\\lambda_i)}{t},\n$$\n由于模拟是独立的，因此不同 $\\lambda$ 点之间具有独立性。这种函数形式源于平稳相关过程的中心极限定理，以及被吸收到函数 $\\alpha(\\lambda)$ 中的积分自相关时间的概念。\n\n对于此问题，考虑一个平滑且物理上合理的观测量\n$$\ng(\\lambda) \\;=\\; a \\;+\\; b\\,\\lambda \\;+\\; c\\,\\sin(\\pi \\lambda),\n$$\n其中正弦函数的参数以弧度为单位，常数 $a$、$b$ 和 $c$ 的单位为 $\\mathrm{kJ/mol}$。与模拟时间相关的方差前因子为\n$$\n\\alpha(\\lambda) \\;=\\; \\alpha_0\\left(1 + p \\,\\sin^2(\\pi \\lambda)\\right),\n$$\n其中 $\\alpha_0$ 的单位为 $(\\mathrm{kJ/mol})^2\\cdot \\mathrm{ns}$，$p$ 是无量纲的。您将使用复合梯形法则估计量\n$$\n\\widehat{\\Delta A} \\;=\\; \\sum_{i=0}^{N-1} w_i\\,\\widehat{g}(\\lambda_i).\n$$\n将偏差定义为应用于精确 $g(\\lambda)$ 的数值求积的期望值与真实积分之间的差值，\n$$\n\\mathrm{bias} \\;=\\; \\left(\\sum_{i=0}^{N-1} w_i\\, g(\\lambda_i)\\right) - \\int_{0}^{1} g(\\lambda)\\, d\\lambda,\n$$\n并根据 $\\lambda$ 之间的独立性，通过加权和的方差传播来定义估计量的方差，\n$$\n\\mathrm{Var}(\\widehat{\\Delta A}) \\;=\\; \\sum_{i=0}^{N-1} w_i^2\\, \\mathrm{Var}\\big(\\widehat{g}(\\lambda_i)\\big).\n$$\n则均方误差为\n$$\n\\mathrm{MSE} \\;=\\; \\mathrm{bias}^2 \\;+\\; \\mathrm{Var}(\\widehat{\\Delta A}),\n$$\n均方根误差 (RMSE) 为 $\\mathrm{RMSE} = \\sqrt{\\mathrm{MSE}}$。\n\n使用固定的模型参数\n$$\na = 3.0,\\quad b = 2.0,\\quad c = 4.0\\quad \\text{单位为 }\\mathrm{kJ/mol},\\qquad \\alpha_0 = 1.0\\ \\text{单位为 }(\\mathrm{kJ/mol})^2\\cdot \\mathrm{ns},\\quad p = 4.0.\n$$\n所有模拟时间必须以 $\\mathrm{ns}$ (纳秒) 为单位处理，最终的 RMSE 必须以 $\\mathrm{kJ/mol}$ 表示。\n\n实现一个程序，对于下面的每个测试用例 $(N, t)$，通过以下步骤计算预期的 $\\mathrm{RMSE}$：\n- 精确计算真实积分 $\\int_{0}^{1} g(\\lambda)\\, d\\lambda$，\n- 将复合梯形法则应用于均匀网格上的精确 $g(\\lambda)$，以获得预期估计量，从而得到偏差，\n- 使用权重和 $\\lambda$ 之间独立的方差模型计算方差，\n- 将这些组合起来以获得 $\\mathrm{RMSE}$。\n\n测试套件 (网格大小 $N$ 和每个 $\\lambda$ 的模拟时长 $t$，单位 $\\mathrm{ns}$)：\n- 用例 1: $N=5$, $t=5.0$。\n- 用例 2: $N=11$, $t=2.0$。\n- 用例 3: $N=3$, $t=20.0$。\n- 用例 4: $N=2$, $t=50.0$。\n- 用例 5: $N=21$, $t=0.5$。\n\n角度单位：正弦函数使用弧度。\n\n您的程序应产生单行输出，其中包含 $\\mathrm{RMSE}$ 结果，单位为 $\\mathrm{kJ/mol}$，四舍五入到 $6$ 位小数，格式为逗号分隔的列表，并用方括号括起来，例如 $[x_1,x_2,x_3,x_4,x_5]$。", "solution": "这个问题提取得当且科学上合理，代表了热力学积分计算中误差分析的标准练习。其目标是计算通过数值程序估算的自由能差 $\\Delta A$ 的预期均方根误差 ($\\mathrm{RMSE}$)。$\\mathrm{RMSE}$ 是衡量估计量质量的综合指标，定义为均方误差 ($\\mathrm{MSE}$) 的平方根，而均方误差是偏差的平方和方差的相加组合：\n$$\n\\mathrm{RMSE} \\;=\\; \\sqrt{\\mathrm{MSE}} \\;=\\; \\sqrt{\\mathrm{bias}^2 \\;+\\; \\mathrm{Var}(\\widehat{\\Delta A})}\n$$\n这里，$\\widehat{\\Delta A}$ 是自由能差的估计量，$\\mathrm{bias}$ 是其系统误差，$\\mathrm{Var}(\\widehat{\\Delta A})$ 是其统计方差。必须为几个测试用例进行计算，每个用例由网格点数 $N$ 和每个网格点的模拟时间 $t$ 定义。模型系统由固定参数定义：$a = 3.0\\,\\mathrm{kJ/mol}$，$b = 2.0\\,\\mathrm{kJ/mol}$，$c = 4.0\\,\\mathrm{kJ/mol}$，$\\alpha_0 = 1.0\\,(\\mathrm{kJ/mol})^2\\cdot \\mathrm{ns}$，以及 $p = 4.0$。我的分析分为两个主要步骤：计算偏差和计算方差。\n\n首先，确定估计量的偏差。它被定义为估计量的期望值与被估量真值之间的差异：\n$$\n\\mathrm{bias} \\;=\\; E[\\widehat{\\Delta A}] \\;-\\; \\Delta A_{\\text{true}}\n$$\n真实的自由能差 $\\Delta A_{\\text{true}}$ 是通过对给定函数 $g(\\lambda) = a + b\\lambda + c\\sin(\\pi\\lambda)$ 在区间 $\\lambda \\in [0, 1]$ 上进行解析积分得到的：\n$$\n\\Delta A_{\\text{true}} \\;=\\; \\int_{0}^{1} g(\\lambda)\\, d\\lambda \\;=\\; \\int_{0}^{1} \\left(a + b\\lambda + c\\sin(\\pi \\lambda)\\right)\\, d\\lambda\n$$\n该积分的计算结果为：\n$$\n\\Delta A_{\\text{true}} \\;=\\; \\left[a\\lambda + \\frac{b\\lambda^2}{2} - \\frac{c}{\\pi}\\cos(\\pi\\lambda)\\right]_0^1 \\;=\\; \\left(a + \\frac{b}{2} - \\frac{c}{\\pi}\\cos(\\pi)\\right) - \\left(0 + 0 - \\frac{c}{\\pi}\\cos(0)\\right)\n$$\n$$\n\\Delta A_{\\text{true}} \\;=\\; a + \\frac{b}{2} - \\frac{c}{\\pi}(-1) + \\frac{c}{\\pi}(1) \\;=\\; a + \\frac{b}{2} + \\frac{2c}{\\pi}\n$$\n估计量的期望值 $E[\\widehat{\\Delta A}]$ 对应于使用复合梯形法则对精确函数 $g(\\lambda)$ 进行的积分数值近似。这是因为局部估计量 $\\widehat{g}(\\lambda_i)$ 是无偏的，意味着 $E[\\widehat{g}(\\lambda_i)] = g(\\lambda_i)$。因此：\n$$\nE[\\widehat{\\Delta A}] \\;=\\; E\\left[\\sum_{i=0}^{N-1} w_i \\widehat{g}(\\lambda_i)\\right] \\;=\\; \\sum_{i=0}^{N-1} w_i E[\\widehat{g}(\\lambda_i)] \\;=\\; \\sum_{i=0}^{N-1} w_i g(\\lambda_i)\n$$\n这个求和是在一个包含 $N$ 个点的均匀网格上计算的，$\\lambda_i = i/(N-1)$，其中 $i \\in \\{0, 1, \\dots, N-1\\}$。网格间距为 $h = 1/(N-1)$，梯形权重对于内部点 ($i \\in \\{1, \\dots, N-2\\}$) 为 $w_i = h$，对于端点为 $w_0 = w_{N-1} = h/2$。因此，偏差完全是由梯形法则对函数 $g(\\lambda)$ 的离散化误差造成的。\n\n其次，确定估计量的方差 $\\mathrm{Var}(\\widehat{\\Delta A})$。由于在不同 $\\lambda_i$ 点的模拟被指定为独立的，加权和的方差就是各个方差的加权和：\n$$\n\\mathrm{Var}(\\widehat{\\Delta A}) \\;=\\; \\mathrm{Var}\\left(\\sum_{i=0}^{N-1} w_i \\widehat{g}(\\lambda_i)\\right) \\;=\\; \\sum_{i=0}^{N-1} w_i^2 \\mathrm{Var}(\\widehat{g}(\\lambda_i))\n$$\n问题为局部估计量 $\\widehat{g}(\\lambda_i)$ 的方差指定了一个物理上合理的模型：\n$$\n\\mathrm{Var}(\\widehat{g}(\\lambda_i)) \\;=\\; \\frac{\\alpha(\\lambda_i)}{t}\n$$\n其中 $t$ 是模拟时间，方差前因子为 $\\alpha(\\lambda) = \\alpha_0(1 + p\\sin^2(\\pi\\lambda))$。将此代入 $\\mathrm{Var}(\\widehat{\\Delta A})$ 的表达式中得到：\n$$\n\\mathrm{Var}(\\widehat{\\Delta A}) \\;=\\; \\sum_{i=0}^{N-1} w_i^2 \\frac{\\alpha_0(1 + p\\sin^2(\\pi\\lambda_i))}{t} \\;=\\; \\frac{\\alpha_0}{t} \\sum_{i=0}^{N-1} w_i^2 \\left(1 + p\\sin^2(\\pi\\lambda_i)\\right)\n$$\n这个求和是在相同的均匀 $\\lambda_i$ 点网格上进行评估的。\n\n最后，在数学上表达了偏差和方差项之后，对于给定的测试用例 $(N, t)$，$\\mathrm{RMSE}$ 可组合为：\n$$\n\\mathrm{RMSE}(N, t) \\;=\\; \\sqrt{\\left(\\left(\\sum_{i=0}^{N-1} w_i g(\\lambda_i)\\right) - \\left(a + \\frac{b}{2} + \\frac{2c}{\\pi}\\right)\\right)^2 + \\frac{\\alpha_0}{t} \\sum_{i=0}^{N-1} w_i^2 \\left(1 + p\\sin^2(\\pi\\lambda_i)\\right)}\n$$\n提供的代码实现了这个公式。它遍历每个测试用例，计算真实积分、数值积分、偏差和总方差，并将它们组合起来得到最终的 $\\mathrm{RMSE}$。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the expected Root-Mean-Squared Error (RMSE) for a set of\n    Thermodynamic Integration (TI) test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Number of grid points N, simulation time t in ns)\n        (5, 5.0),\n        (11, 2.0),\n        (3, 20.0),\n        (2, 50.0),\n        (21, 0.5)\n    ]\n    \n    # Fixed model parameters\n    a = 3.0        # kJ/mol\n    b = 2.0        # kJ/mol\n    c = 4.0        # kJ/mol\n    alpha_0 = 1.0  # (kJ/mol)^2 * ns\n    p = 4.0        # dimensionless\n\n    results = []\n    \n    for N, t in test_cases:\n        # Step 1: Compute the true integral (analytical solution)\n        # delta_F_true = integral from 0 to 1 of (a + b*lambda + c*sin(pi*lambda)) d(lambda)\n        # = a + b/2 + 2*c/pi\n        delta_F_true = a + b / 2.0 + (2.0 * c) / np.pi\n\n        # Step 2: Compute the numerical integral and the resulting bias\n        # The problem statement implies N >= 2, which is true for all test cases.\n        # h = 1/(N-1) is therefore well-defined.\n        h = 1.0 / (N - 1)\n        lambdas = np.linspace(0.0, 1.0, N)\n\n        # Evaluate g(lambda) on the grid\n        g_vals = a + b * lambdas + c * np.sin(np.pi * lambdas)\n\n        # Define composite trapezoidal rule weights\n        weights = np.full(N, h)\n        if N > 1:\n            weights[0] = h / 2.0\n            weights[-1] = h / 2.0\n        # This handles the N=2 case correctly as weights[0] and weights[-1] are distinct indices.\n        \n        # Calculate the numerical integral using the trapezoidal rule\n        delta_F_num = np.sum(weights * g_vals)\n        \n        # Bias is the difference between the numerical and true integrals\n        bias = delta_F_num - delta_F_true\n\n        # Step 3: Compute the variance of the TI estimator\n        # Evaluate alpha(lambda) on the grid\n        alpha_vals = alpha_0 * (1.0 + p * np.sin(np.pi * lambdas)**2)\n\n        # Variance of the point estimator g_hat at each lambda\n        var_g_hat = alpha_vals / t\n\n        # Total variance of the TI estimator by propagation of errors\n        var_delta_F = np.sum(weights**2 * var_g_hat)\n\n        # Step 4: Combine bias and variance to get MSE and RMSE\n        mse = bias**2 + var_delta_F\n        rmse = np.sqrt(mse)\n        \n        results.append(rmse)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2465970"}]}