{"hands_on_practices": [{"introduction": "平均力势（PMF）的计算与所选反应坐标的定义密切相关。在分析或比较不同研究时，我们可能需要在不同坐标系之间进行转换（例如，从距离 $r$ 转换到其倒数 $1/r$）。[@problem_id:2460689] 这个练习将引导你推导这种坐标变换所必需的雅可比校正项，让你亲手实践概率密度如何转换，并理解为何平均力势并非在所有坐标下都具有相同的形式。掌握这一概念对于避免在自由能计算中引入系统性偏差至关重要。", "problem": "在绝对温度 $T$ 下，一个粒子对在三维空间中被模拟。令 $r$ 表示两个粒子之间的笛卡尔距离，且 $r>0$。沿着反应坐标 $r$ 的平均力势 (PMF) $W_{r}(r)$ 定义为 $W_{r}(r) = -k_{B} T \\ln P_{r}(r) + C$，其中 $P_{r}(r)$ 是 $r$ 的边缘概率密度，$k_{B}$ 是玻尔兹曼常数，$C$ 是一个任意的加性常数。\n\n定义一个新的反应坐标 $u = 1/r$，且 $u>0$，并令 $W_{u}(u)$ 表示与 $u$ 的边缘概率密度 $P_{u}(u)$ 相关的 PMF，其类似地定义为 $W_{u}(u) = -k_{B} T \\ln P_{u}(u) + C'$，其中 $C'$ 是一个任意的加性常数。令 $\\Delta W(u)$ 为加性雅可比校正项，使得\n$$\nW_{u}(u) = W_{r}(r(u)) + \\Delta W(u).\n$$\n\n确定 $\\Delta W(u)$ 作为 $u$，$k_{B}$ 和 $T$ 的函数的显式闭式表达式。将您的最终结果表示为包含 $u$，$k_{B}$ 和 $T$ 的代数表达式；答案中不要包含任何显式单位符号。", "solution": "对问题陈述进行验证。\n\n第一步：提取已知条件\n- 系统：在绝对温度 $T$ 下，三维空间中的一对粒子。\n- 反应坐标 1：$r$，粒子间的笛卡尔距离，且 $r > 0$。\n- 关于 $r$ 的平均力势 (PMF)：$W_{r}(r) = -k_{B} T \\ln P_{r}(r) + C$，其中 $P_{r}(r)$ 是 $r$ 的边缘概率密度，$k_{B}$ 是玻尔兹曼常数，$C$ 是一个任意的加性常数。\n- 反应坐标 2：$u = 1/r$，且 $u > 0$。\n- 关于 $u$ 的 PMF：$W_{u}(u) = -k_{B} T \\ln P_{u}(u) + C'$，其中 $P_{u}(u)$ 是 $u$ 的边缘概率密度，$C'$ 是一个任意的加性常数。\n- PMF 之间的关系：$W_{u}(u) = W_{r}(r(u)) + \\Delta W(u)$，其中 $\\Delta W(u)$ 是加性雅可比校正项。\n\n第二步：使用提取的已知条件进行验证\n- **科学合理性**：该问题基于统计力学和计算化学的原理。平均力势的定义和反应坐标的变换方法都是标准的。该设定在物理上是现实的。\n- **适定性**：该问题是适定的。它为所有量提供了清晰的定义，并通过关联概率密度 $P_{r}(r)$ 和 $P_{u}(u)$，为找到所需项 $\\Delta W(u)$ 提供了一条直接的路径。变换 $u=1/r$ 在给定的定义域上是良定义的。\n- **客观性**：语言客观且数学上精确。\n\n该问题不违反任何无效性标准。任意常数 $C$ 和 $C'$ 的存在可能暗示有歧义，但术语“雅可比校正”在此上下文中具有约定俗成的含义，指的是变换中依赖于坐标的部分，这使得问题有一个唯一的解。关于系统处于“三维空间”的信息提供了物理背景，证实了 $r$ 是一个从更高维空间导出的坐标，这与 PMF 计算的框架是一致的。\n\n第三步：结论与行动\n该问题有效。将提供一个完整的、有理有据的解答。\n\n问题的核心在于关联两个不同反应坐标 $r$ 和 $u$ 的概率密度函数 $P_{r}(r)$ 和 $P_{u}(u)$。由于在变量变换下概率必须守恒，因此概率元必须是不变的。对于一维随机变量 $r$ 和 $u$，这意味着：\n$$\nP_{u}(u) |du| = P_{r}(r) |dr|\n$$\n这给出了概率密度函数的变换法则：\n$$\nP_{u}(u) = P_{r}(r) \\left| \\frac{dr}{du} \\right|\n$$\n坐标之间的关系为 $u = 1/r$，这意味着 $r(u) = 1/u$。我们必须计算这个变换的雅可比行列式。\n$$\n\\frac{dr}{du} = \\frac{d}{du}(u^{-1}) = -1 \\cdot u^{-2} = -u^{-2}\n$$\n雅可比行列式的绝对值为：\n$$\n\\left| \\frac{dr}{du} \\right| = \\left| -u^{-2} \\right| = u^{-2}\n$$\n这是有效的，因为题目说明了 $u > 0$。\n将此代入概率密度的变换法则，并用 $u$ 表示所有项：\n$$\nP_{u}(u) = P_{r}(r(u)) u^{-2}\n$$\n现在，我们使用问题中提供的平均力势的定义。坐标 $u$ 的 PMF 为：\n$$\nW_{u}(u) = -k_{B} T \\ln P_{u}(u) + C'\n$$\n代入 $P_{u}(u)$ 的表达式：\n$$\nW_{u}(u) = -k_{B} T \\ln \\left( P_{r}(r(u)) u^{-2} \\right) + C'\n$$\n利用对数的性质，我们可以分离这些项：\n$$\nW_{u}(u) = -k_{B} T \\left( \\ln P_{r}(r(u)) + \\ln(u^{-2}) \\right) + C'\n$$\n$$\nW_{u}(u) = -k_{B} T \\ln P_{r}(r(u)) - k_{B} T (-2 \\ln u) + C'\n$$\n$$\nW_{u}(u) = -k_{B} T \\ln P_{r}(r(u)) + 2k_{B} T \\ln u + C'\n$$\n坐标 $r$ 的 PMF 定义为 $W_{r}(r) = -k_{B} T \\ln P_{r}(r) + C$。我们可以重新整理这个式子来表示对数项：\n$$\n-k_{B} T \\ln P_{r}(r) = W_{r}(r) - C\n$$\n该关系对任何 $r$ 值都成立，包括 $r = r(u)$。将此代入我们关于 $W_{u}(u)$ 的表达式中：\n$$\nW_{u}(u) = (W_{r}(r(u)) - C) + 2k_{B} T \\ln u + C'\n$$\n重新整理这些项，我们得到：\n$$\nW_{u}(u) = W_{r}(r(u)) + 2k_{B} T \\ln u + (C' - C)\n$$\n问题陈述指出两个 PMF 之间的关系是 $W_{u}(u) = W_{r}(r(u)) + \\Delta W(u)$。通过将我们推导的表达式与问题中给出的表达式进行比较，我们可以确定 $\\Delta W(u)$：\n$$\n\\Delta W(u) = 2k_{B} T \\ln u + (C' - C)\n$$\n问题要求的是“加性雅可比校正项” $\\Delta W(u)$ 的显式闭式表达式。项 $C' - C$ 是一个常数，代表两个任意常数之差。在统计力学的背景下，“雅可比校正”特指校正中依赖于坐标变换的函数部分，它源于积分测度（雅可比行列式）的变化。常数偏移通常被吸收到新的任意常数 $C'$ 中，因为势能的零点是任意的。因此，通常的解释是将雅可比校正项确定为 $\\Delta W(u)$ 表达式中与坐标相关的部分。\n遵循这个惯例，我们有：\n$$\n\\Delta W(u) = 2k_{B} T \\ln u\n$$\n这个结果与粒子所在空间的维度无关，因为在一维变量变换下概率密度之间的一般关系是普适的。", "answer": "$$\n\\boxed{2k_{B} T \\ln(u)}\n$$", "id": "2460689"}, {"introduction": "丁烷的 gauche-trans 异构化是理解构象能量学的经典模型。通过计算沿二面角这一反应坐标的平均力势（PMF），我们可以量化不同构象的相对稳定性以及它们之间的能垒。[@problem_id:2460692] 在这个实践中，你将为一个简化的丁烷模型在气相和水溶液中计算PMF，从而直接观察溶剂化效应对自由能曲线的影响。此练习旨在揭示一维系统中PMF与势能之间的重要关系，并让你思考温度在其中的作用。", "problem": "给定一个丁烷中心碳-碳二面角的一维扭转模型。集体变量是二面角 $\\phi \\in [-\\pi,\\pi]$，单位为弧度。在绝对温度 T 的正则系综中，沿 $\\phi$ 的平均力势 (PMF) $W(\\phi)$ 由 Boltzmann 概率密度 $P(\\phi)$ 通过以下关系定义（最多相差一个加性常数）：\n$$\nW(\\phi) = -k_{\\mathrm{B}} T \\ln P(\\phi) + C,\n$$\n其中 $k_{\\mathrm{B}}$ 是 Boltzmann 常数，$C$ 是一个任意常数。对于此一维模型，气相的有效势能规定为\n$$\nU_{\\mathrm{gas}}(\\phi) = \\frac{A}{2}\\left(1+\\cos(3\\phi)\\right) + \\frac{B}{2}\\left(1-\\cos\\phi\\right),\n$$\n而对于显式水模型，其势能由下式给出\n$$\nU_{\\mathrm{water}}(\\phi) = U_{\\mathrm{gas}}(\\phi) + \\frac{S}{2}\\left(1-\\cos\\phi\\right).\n$$\n所有能量参数 $A$、$B$ 和 $S$ 的单位均为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，角度单位为弧度。使用参数值 $A = 12.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$、$B = -2.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 和 $S = 1.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。以摩尔为单位时，使用理想气体常数 $R = 0.008314462618\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ 作为 $k_{\\mathrm{B}}$。PMF $W(\\phi)$ 的定义最多只相差一个加性常数，因此只有 $W(\\phi)$ 的差值具有物理意义。\n\n定义以下二面角构象：\n- 反式 (Trans): $\\phi_{\\mathrm{t}} = \\pi$，\n- 旁式 (Gauche): $\\phi_{\\mathrm{g}} = \\pi/3$，\n- 重叠式 (Eclipsed)（势垒参考）: $\\phi_{\\mathrm{e}} = 0$。\n\n对于每个指定的温度 $T$ 和每种环境 $\\mathrm{env} \\in \\{\\mathrm{gas}, \\mathrm{water}\\}$，计算以下物理量（单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$）：\n1. 旁式和反式之间的 PMF 差，$\\Delta W_{\\mathrm{g-t}}^{\\mathrm{env}} = W^{\\mathrm{env}}(\\phi_{\\mathrm{g}}) - W^{\\mathrm{env}}(\\phi_{\\mathrm{t}})$。\n2. 相对于反式的势垒高度，$\\Delta W_{\\mathrm{e-t}}^{\\mathrm{env}} = W^{\\mathrm{env}}(\\phi_{\\mathrm{e}}) - W^{\\mathrm{env}}(\\phi_{\\mathrm{t}})$。\n\n同时，对于每个温度 $T$，计算由环境引起的改变量：\n- $\\Delta\\Delta W_{\\mathrm{g-t}} = \\Delta W_{\\mathrm{g-t}}^{\\mathrm{water}} - \\Delta W_{\\mathrm{g-t}}^{\\mathrm{gas}}$，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，\n- $\\Delta\\Delta W_{\\mathrm{e-t}} = \\Delta W_{\\mathrm{e-t}}^{\\mathrm{water}} - \\Delta W_{\\mathrm{e-t}}^{\\mathrm{gas}}$，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n答案以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 为单位，四舍五入到三位小数。角度单位是弧度。\n\n测试组（温度）：\n- 情况 1：$T = 298.15\\,\\mathrm{K}$，\n- 情况 2：$T = 150.0\\,\\mathrm{K}$，\n- 情况 3：$T = 1000.0\\,\\mathrm{K}$。\n\n最终输出格式：\n你的程序应生成单行输出，包含一个结果列表，每个温度情况对应一个结果。每个结果由一个包含六个浮点数的列表表示，顺序如下：\n$[\\Delta W_{\\mathrm{g-t}}^{\\mathrm{gas}}, \\Delta W_{\\mathrm{g-t}}^{\\mathrm{water}}, \\Delta\\Delta W_{\\mathrm{g-t}}, \\Delta W_{\\mathrm{e-t}}^{\\mathrm{gas}}, \\Delta W_{\\mathrm{e-t}}^{\\mathrm{water}}, \\Delta\\Delta W_{\\mathrm{e-t}}]$.\n将这三个情况的结果聚合为一个列表的列表，并将其作为单行打印，所有数字四舍五入到三位小数，例如：\n$$\n[[x_{11},x_{12},x_{13},x_{14},x_{15},x_{16}],[x_{21},x_{22},x_{23},x_{24},x_{25},x_{26}],[x_{31},x_{32},x_{33},x_{34},x_{35},x_{36}]].\n$$", "solution": "问题陈述已经过分析，并被确定为有效。这是一个计算化学中定义良好的问题，基于统计力学的既定原理。所有必要的参数和定义都已提供，没有内部矛盾或科学不准确之处。该问题旨在检验对一个简单一维系统中势能与平均力势 (PMF) 之间关系的基本理解。\n\n问题的核心在于正则系综中 PMF $W(\\phi)$ 的定义：\n$$W(\\phi) = -k_{\\mathrm{B}} T \\ln P(\\phi) + C$$\n其中 $P(\\phi)$ 是 Boltzmann 概率密度，$k_{\\mathrm{B}}$ 是 Boltzmann 常数（以摩尔为单位时，即为气体常数 $R$），$T$ 是绝对温度，$C$ 是一个任意常数。\n\n对于一个势能为 $U(\\phi)$ 的一维系统，其概率密度 $P(\\phi)$ 由下式给出：\n$$P(\\phi) = \\frac{e^{-U(\\phi) / (RT)}}{Z}$$\n其中配分函数 $Z$ 是对所有可能状态的积分：\n$$Z = \\int_{-\\pi}^{\\pi} e^{-U(\\phi') / (RT)} d\\phi'$$\n将 $P(\\phi)$ 的表达式代入 $W(\\phi)$ 的定义中，得到：\n$$W(\\phi) = -RT \\ln \\left( \\frac{e^{-U(\\phi) / (RT)}}{Z} \\right) + C$$\n利用对数的性质，上式可展开为：\n$$W(\\phi) = -RT \\left( -\\frac{U(\\phi)}{RT} - \\ln Z \\right) + C$$\n$$W(\\phi) = U(\\phi) + RT \\ln Z + C$$\n项 $RT \\ln Z + C$ 是一个相对于坐标 $\\phi$ 的常数。我们将其定义为一个新的常数 $C'$。因此，我们找到了该系统的关键关系：\n$$W(\\phi) = U(\\phi) + C'$$\n这表明，对于一个势能仅依赖于单个坐标的一维系统，平均力势在相差一个加性常数的情况下等同于势能剖面。因此，任何 PMF 差值 $\\Delta W$ 都与势能差值 $\\Delta U$ 完全相同：\n$$\\Delta W = W(\\phi_2) - W(\\phi_1) = (U(\\phi_2) + C') - (U(\\phi_1) + C') = U(\\phi_2) - U(\\phi_1) = \\Delta U$$\n这个结果与温度 $T$ 无关。问题陈述中明确包含 $T$ 是为了检验这种基本理解；对于所有指定的温度，最终的数值结果将是相同的。\n\n气相和水相环境下的势能函数分别给出如下：\n$$U_{\\mathrm{gas}}(\\phi) = \\frac{A}{2}\\left(1+\\cos(3\\phi)\\right) + \\frac{B}{2}\\left(1-\\cos\\phi\\right)$$\n$$U_{\\mathrm{water}}(\\phi) = U_{\\mathrm{gas}}(\\phi) + \\frac{S}{2}\\left(1-\\cos\\phi\\right) = \\frac{A}{2}\\left(1+\\cos(3phi)\\right) + \\frac{B+S}{2}\\left(1-\\cos\\phi\\right)$$\n指定的角度为反式 (trans, $\\phi_{\\mathrm{t}} = \\pi$)、旁式 (gauche, $\\phi_{\\mathrm{g}} = \\pi/3$) 和重叠式 (eclipsed, $\\phi_{\\mathrm{e}} = 0$)。我们计算在这些点的势能。\n\n首先，我们计算三角函数分量：\n- 对于 $\\phi_{\\mathrm{t}} = \\pi$：$\\cos(\\phi_{\\mathrm{t}}) = -1$，$\\cos(3\\phi_{\\mathrm{t}}) = -1$。\n- 对于 $\\phi_{\\mathrm{g}} = \\pi/3$：$\\cos(\\phi_{\\mathrm{g}}) = 1/2$，$\\cos(3\\phi_{\\mathrm{g}}) = -1$。\n- 对于 $\\phi_{\\mathrm{e}} = 0$：$\\cos(\\phi_{\\mathrm{e}}) = 1$，$\\cos(3\\phi_{\\mathrm{e}}) = 1$。\n\n现在，我们计算势能：\n\n**气相：**\n- $U_{\\mathrm{gas}}(\\phi_{\\mathrm{t}}) = \\frac{A}{2}(1 + (-1)) + \\frac{B}{2}(1 - (-1)) = 0 + \\frac{B}{2}(2) = B$\n- $U_{\\mathrm{gas}}(\\phi_{\\mathrm{g}}) = \\frac{A}{2}(1 + (-1)) + \\frac{B}{2}(1 - 1/2) = 0 + \\frac{B}{2}(1/2) = \\frac{B}{4}$\n- $U_{\\mathrm{gas}}(\\phi_{\\mathrm{e}}) = \\frac{A}{2}(1 + 1) + \\frac{B}{2}(1 - 1) = \\frac{A}{2}(2) + 0 = A$\n\n**水相：** 计算过程相同，只需将 $B$ 替换为 $(B+S)$。\n- $U_{\\mathrm{water}}(\\phi_{\\mathrm{t}}) = B+S$\n- $U_{\\mathrm{water}}(\\phi_{\\mathrm{g}}) = (B+S)/4$\n- $U_{\\mathrm{water}}(\\phi_{\\mathrm{e}}) = A$\n\n利用这些能量值，我们计算所需的差值。\n\n1.  **$\\Delta W_{\\mathrm{g-t}}^{\\mathrm{gas}}$ （气相中旁式与反式之差）：**\n    $$\\Delta W_{\\mathrm{g-t}}^{\\mathrm{gas}} = U_{\\mathrm{gas}}(\\phi_{\\mathrm{g}}) - U_{\\mathrm{gas}}(\\phi_{\\mathrm{t}}) = \\frac{B}{4} - B = -\\frac{3B}{4}$$\n2.  **$\\Delta W_{\\mathrm{g-t}}^{\\mathrm{water}}$ （水相中旁式与反式之差）：**\n    $$\\Delta W_{\\mathrm{g-t}}^{\\mathrm{water}} = U_{\\mathrm{water}}(\\phi_{\\mathrm{g}}) - U_{\\mathrm{water}}(\\phi_{\\mathrm{t}}) = \\frac{B+S}{4} - (B+S) = -\\frac{3(B+S)}{4}$$\n3.  **$\\Delta\\Delta W_{\\mathrm{g-t}}$ （旁式-反式差值的环境改变量）：**\n    $$\\Delta\\Delta W_{\\mathrm{g-t}} = \\Delta W_{\\mathrm{g-t}}^{\\mathrm{water}} - \\Delta W_{\\mathrm{g-t}}^{\\mathrm{gas}} = -\\frac{3(B+S)}{4} - \\left(-\\frac{3B}{4}\\right) = -\\frac{3S}{4}$$\n4.  **$\\Delta W_{\\mathrm{e-t}}^{\\mathrm{gas}}$ （气相中重叠式与反式之差）：**\n    $$\\Delta W_{\\mathrm{e-t}}^{\\mathrm{gas}} = U_{\\mathrm{gas}}(\\phi_{\\mathrm{e}}) - U_{\\mathrm{gas}}(\\phi_{\\mathrm{t}}) = A - B$$\n5.  **$\\Delta W_{\\mathrm{e-t}}^{\\mathrm{water}}$ （水相中重叠式与反式之差）：**\n    $$\\Delta W_{\\mathrm{e-t}}^{\\mathrm{water}} = U_{\\mathrm{water}}(\\phi_{\\mathrm{e}}) - U_{\\mathrm{water}}(\\phi_{\\mathrm{t}}) = A - (B+S) = A - B - S$$\n6.  **$\\Delta\\Delta W_{\\mathrm{e-t}}$ （重叠式-反式差值的环境改变量）：**\n    $$\\Delta\\Delta W_{\\mathrm{e-t}} = \\Delta W_{\\mathrm{e-t}}^{\\mathrm{water}} - \\Delta W_{\\mathrm{e-t}}^{\\mathrm{gas}} = (A - B - S) - (A - B) = -S$$\n\n最后，我们代入给定的参数值：$A = 12.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$、$B = -2.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 和 $S = 1.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n- $\\Delta W_{\\mathrm{g-t}}^{\\mathrm{gas}} = -\\frac{3(-2.0)}{4} = \\frac{6.0}{4} = 1.5\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta W_{\\mathrm{g-t}}^{\\mathrm{water}} = -\\frac{3(-2.0+1.0)}{4} = -\\frac{3(-1.0)}{4} = \\frac{3.0}{4} = 0.75\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta\\Delta W_{\\mathrm{g-t}} = -\\frac{3(1.0)}{4} = -0.75\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta W_{\\mathrm{e-t}}^{\\mathrm{gas}} = 12.0 - (-2.0) = 14.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta W_{\\mathrm{e-t}}^{\\mathrm{water}} = 12.0 - (-2.0+1.0) = 12.0 - (-1.0) = 13.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta\\Delta W_{\\mathrm{e-t}} = -1.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\n这些结果对所有测试用例都是恒定的，因为它们不依赖于温度 $T$。每个温度情况都将产生以下结果列表，四舍五入到三位小数：$[1.500, 0.750, -0.750, 14.000, 13.000, -1.000]$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the butane dihedral PMF problem.\n    For a 1D system, the PMF difference is equal to the potential energy difference,\n    making the result independent of temperature.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        298.15,  # Case 1: T in K\n        150.0,   # Case 2: T in K\n        1000.0,  # Case 3: T in K\n    ]\n\n    # Parameters in kJ/mol\n    A = 12.0\n    B = -2.0\n    S = 1.0\n\n    all_results = []\n\n    # The calculations are independent of temperature T, so the result for each case is identical.\n    # The loop is maintained to produce the required output structure for three cases.\n    for _ in test_cases:\n        # We proceed using the analytical formulas derived from the potential energy functions.\n        # This is more robust and computationally efficient than re-evaluating trigonometric functions.\n        # W(phi) = U(phi) + C', so Delta_W = Delta_U.\n\n        # Delta W (gauche-trans) in gas\n        dw_gt_gas = -3.0 * B / 4.0\n\n        # Delta W (gauche-trans) in water\n        dw_gt_water = -3.0 * (B + S) / 4.0\n\n        # Delta Delta W (gauche-trans)\n        ddw_gt = -3.0 * S / 4.0\n\n        # Delta W (eclipsed-trans) in gas\n        dw_et_gas = A - B\n\n        # Delta W (eclipsed-trans) in water\n        dw_et_water = A - (B + S)\n\n        # Delta Delta W (eclipsed-trans)\n        ddw_et = -S\n\n        # Assemble the results for one case\n        case_results = [\n            dw_gt_gas,\n            dw_gt_water,\n            ddw_gt,\n            dw_et_gas,\n            dw_et_water,\n            ddw_et,\n        ]\n        all_results.append(case_results)\n\n    # Format the final output string precisely as required.\n    # It must be a string representation of a list of lists of floats,\n    # with each float formatted to 3 decimal places and no spaces.\n    outer_list_str = []\n    for case in all_results:\n        inner_list_str = f\"[{','.join([f'{val:.3f}' for val in case])}]\"\n        outer_list_str.append(inner_list_str)\n\n    final_output_str = f\"[{','.join(outer_list_str)}]\"\n\n    # Final print statement in the exact required format.\n    print(final_output_str)\n\nsolve()\n```", "id": "2460692"}, {"introduction": "在实际的分子模拟中，我们通常使用如伞形采样等增强采样方法来计算平均力势（PMF）。这些方法的成功与否在很大程度上取决于模拟参数的精心选择。[@problem_id:2460733] 本练习将通过一个解析模型，让你探索伞形采样中一个关键参数——偏置势的“弹簧常数” $k$——是如何影响相邻采样窗口之间的统计重叠以及计算效率的。通过这项实践，你将量化评估参数选择的后果，从而为设计高效、准确的自由能计算任务打下坚实的基础。", "problem": "您需要编写一个完整的程序，来定量地检验在伞形采样中改变谐波弹簧常数 $k$ 如何影响 (i) 相邻窗口之间的统计重叠，以及 (ii) 一个计算效率的简单代理指标，该指标定义为确保达到指定目标重叠所需的最小等间距窗口数。该系统是一个一维反应坐标 $x$，其具有已知的平均力势（PMF），在绝对温度 $T$ 下使用谐波伞形势进行采样。\n\n系统定义：\n- 基础 PMF：$U_{0}(x) = \\tfrac{1}{2}\\,k_{0}\\,(x - x_{c})^{2}$，单位为 kJ/mol，其中 $k_{0} = 25$ kJ/(mol·nm$^{2}$) 且 $x_{c} = 0.5$ nm。\n- 窗口 $i$ 中的伞形势：$U_{b}^{(i)}(x) = \\tfrac{1}{2}\\,k\\,(x - x_{0}^{(i)})^{2}$，单位为 kJ/mol，其中 $k$ 是弹簧常数（待变量），单位为 kJ/(mol·nm$^{2}$)。\n- 在温度 $T = 300$ K 下的正则系综，玻尔兹曼常数 $k_{\\mathrm{B}} = 0.008314462618$ kJ/(mol·K)，因此 $\\beta = 1/(k_{\\mathrm{B}} T)$，单位为 (mol/kJ)。\n- 窗口放置的反应坐标域：区间 $[0, L]$，其中 $L = 1.0$ nm。\n\n统计重叠度量：\n- 对于每个伞形窗口 $i$，定义在温度 $T$ 下偏置势 $U_{0}(x) + U_{b}^{(i)}(x)$ 的归一化正则分布：\n$$\np_{i}(x) = \\frac{\\exp\\!\\left(-\\beta\\,[U_{0}(x) + U_{b}^{(i)}(x)]\\right)}{\\int_{-\\infty}^{\\infty}\\exp\\!\\left(-\\beta\\,[U_{0}(x) + U_{b}^{(i)}(x)]\\right)\\,dx}.\n$$\n- 相邻窗口 $i$ 和 $i+1$ 之间的统计重叠通过 Bhattacharyya 系数定义\n$$\nB_{i,i+1} = \\int_{-\\infty}^{\\infty} \\sqrt{\\,p_{i}(x)\\,p_{i+1}(x)\\,}\\;dx,\n$$\n这是一个在 $[0,1]$ 区间内的无量纲量。值越高表示重叠越大。\n\n效率代理指标：\n- 对于给定的目标最小重叠 $B_{\\min}$（无量纲），将 $N_{\\mathrm{req}}(k)$ 定义为在 $[0, L]$ 上分布的最小等间距窗口整数数量，这些窗口的任意相邻窗口对的重叠都至少为 $B_{\\min}$。\n\n程序任务及要求输出：\n1) 固定 $N_{\\mathrm{fix}} = 5$ 个在 $[0,L]$ 上等间距分布的伞形窗口中心 $x_{0}^{(i)}$，对于每个给定的 $k$，计算平均相邻窗口重叠\n$$\n\\overline{B}(k) = \\frac{1}{N_{\\mathrm{fix}}-1}\\sum_{i=1}^{N_{\\mathrm{fix}}-1} B_{i,i+1}.\n$$\n报告 $\\overline{B}(k)$ 的值，四舍五入到六位小数（无量纲）。\n2) 对于每个给定的 $k$，使用相同的系统参数，计算所需的最小窗口数 $N_{\\mathrm{req}}(k)$，以使 $[0,L]$ 上的每个相邻对都达到至少为 $B_{\\min} = 0.3$ 的目标重叠（无量纲）。报告 $N_{\\mathrm{req}}(k)$ 为一个整数。\n\n测试套件：\n- 使用以下三个弹簧常数 $k$ (单位: kJ/(mol·nm$^{2}$))：$k \\in \\{1.0, 10.0, 200.0\\}$。\n- 如上所述，使用 $k_{0} = 25.0$ kJ/(mol·nm$^{2}$), $x_{c} = 0.5$ nm, $L = 1.0$ nm, $T = 300.0$ K, $k_{\\mathrm{B}} = 0.008314462618$ kJ/(mol·K), $N_{\\mathrm{fix}} = 5$ 以及 $B_{\\min} = 0.3$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。对于按上述顺序给出的每个 $k$，输出一个双元素列表 $[\\overline{B}(k), N_{\\mathrm{req}}(k)]$，其中 $\\overline{B}(k)$ 四舍五入到六位小数，$N_{\\mathrm{req}}(k)$ 是一个整数。例如，一个包含三个案例的输出必须如下所示\n$[[\\overline{B}(k_{1}),N_{\\mathrm{req}}(k_{1})],[\\overline{B}(k_{2}),N_{\\mathrm{req}}(k_{2})],[\\overline{B}(k_{3}),N_{\\mathrm{req}}(k_{3})]]$\n仅占一行。", "solution": "该问题已经过验证，被认为是有效的。它具有科学依据，问题设定良好，是客观的，并包含获得唯一且有意义解所需的所有必要信息。分析过程如下。\n\n问题的核心是计算由相邻伞形采样窗口产生的概率分布之间的统计重叠。在窗口 $i$ (中心为 $x_{0}^{(i)}$) 中的总势能，是基础平均力势 (PMF) $U_{0}(x)$ 和谐波偏置势 $U_{b}^{(i)}(x)$ 的总和：\n$$\nU_{i}(x) = U_{0}(x) + U_{b}^{(i)}(x) = \\frac{1}{2} k_{0} (x - x_{c})^{2} + \\frac{1}{2} k (x - x_{0}^{(i)})^{2}\n$$\n这是反应坐标 $x$ 的二次函数。在正则系综中，$x$的概率分布由 $p_{i}(x) \\propto \\exp(-\\beta U_{i}(x))$ 给出，其中 $\\beta = 1/(k_{\\mathrm{B}} T)$。由于 $U_{i}(x)$ 是 $x$ 的二次函数，因此得到的分布 $p_{i}(x)$ 是一个高斯（正态）分布。\n\n为了确定此高斯分布的参数，我们对 $U_{i}(x)$ 进行配方：\n$$\n\\begin{aligned}\nU_{i}(x) &= \\frac{1}{2} [k_{0}(x^2 - 2xx_{c} + x_{c}^2) + k(x^2 - 2xx_{0}^{(i)} + (x_{0}^{(i)})^2)] \\\\\n&= \\frac{1}{2} [(k_{0}+k)x^2 - 2(k_{0}x_{c} + kx_{0}^{(i)})x + (k_{0}x_{c}^2 + k(x_{0}^{(i)})^2)]\n\\end{aligned}\n$$\n这可以写成标准形式 $\\frac{1}{2}K(x-\\mu)^2 + C$。通过比较系数，我们确定有效弹簧常数 $K = k_{0} + k$ 和分布的均值 $\\mu_{i}$：\n$$\n\\mu_{i} = \\frac{k_{0}x_{c} + kx_{0}^{(i)}}{k_{0} + k}\n$$\n窗口 $i$ 的概率分布为 $p_{i}(x) \\propto \\exp(-\\beta \\frac{1}{2}(k_{0}+k)(x-\\mu_{i})^2)$。将指数与高斯分布的标准形式 $-\\frac{(x-\\mu)^2}{2\\sigma^2}$ 进行比较，我们得到方差 $\\sigma_{i}^2$：\n$$\n\\frac{1}{2\\sigma_{i}^2} = \\frac{\\beta(k_{0}+k)}{2} \\implies \\sigma_{i}^2 = \\frac{1}{\\beta(k_{0}+k)}\n$$\n注意，方差（我们称之为 $\\sigma^2$）与窗口索引 $i$ 无关；对于给定的弹簧常数 $k$，它对所有窗口都是相同的。因此，$p_{i}(x)$ 是一个正态分布 $\\mathcal{N}(x; \\mu_{i}, \\sigma^2)$。\n\n相邻窗口 $i$ 和 $i+1$ 之间的统计重叠由 Bhattacharyya 系数 $B_{i,i+1} = \\int_{-\\infty}^{\\infty} \\sqrt{p_{i}(x)p_{i+1}(x)} dx$ 给出。对于两个均值分别为 $\\mu_{i}$、$\\mu_{i+1}$ 且共同方差为 $\\sigma^2$ 的高斯分布，该积分有一个已知的解析解：\n$$\nB_{i,i+1} = \\exp\\left(-\\frac{(\\mu_{i} - \\mu_{i+1})^2}{8\\sigma^2}\\right)\n$$\n我们需要评估相邻窗口均值之间的差异。设 $\\Delta x_{0} = x_{0}^{(i+1)} - x_{0}^{(i)}$ 为相邻窗口中心之间的间距。\n$$\n\\mu_{i} - \\mu_{i+1} = \\frac{k_{0}x_{c} + kx_{0}^{(i)}}{k_{0} + k} - \\frac{k_{0}x_{c} + kx_{0}^{(i+1)}}{k_{0} + k} = \\frac{k(x_{0}^{(i)} - x_{0}^{(i+1)})}{k_{0} + k} = -\\frac{k\\,\\Delta x_{0}}{k_{0} + k}\n$$\n将此结果和 $\\sigma^2$ 的表达式代入 $B_{i,i+1}$ 的公式中：\n$$\nB_{i,i+1} = \\exp\\left(-\\frac{\\left(-\\frac{k\\,\\Delta x_{0}}{k_{0} + k}\\right)^2}{8 \\left(\\frac{1}{\\beta(k_{0}+k)}\\right)}\\right) = \\exp\\left(-\\frac{k^2 (\\Delta x_{0})^2}{(k_{0} + k)^2} \\frac{\\beta(k_{0}+k)}{8}\\right)\n$$\n这简化为重叠的最终表达式，该表达式取决于 $k$ 和 $\\Delta x_{0}$：\n$$\nB_{i,i+1} = \\exp\\left(- \\frac{\\beta k^2 (\\Delta x_{0})^2}{8(k_{0} + k)}\\right)\n$$\n由于窗口中心是等间距的，所以对于所有相邻对 $i, i+1$，$\\Delta x_{0}$ 是恒定的，因此对于给定的 $k$ 和窗口数，$B_{i,i+1}$ 也是恒定的。\n\n**任务1：计算平均重叠 $\\overline{B}(k)$**\n对于在区间 $[0, L]$ 上的固定窗口数 $N_{\\mathrm{fix}}=5$，窗口中心为 $x_0^{(i)} = \\frac{i-1}{N_{\\mathrm{fix}}-1}L$，其中 $i=1, \\dots, 5$。间距是恒定的：$\\Delta x_{0} = L/(N_{\\mathrm{fix}}-1)$。由于所有相邻对的重叠 $B_{i,i+1}$ 都相等，因此平均重叠 $\\overline{B}(k)$ 就等于这个共同的值。\n$$\n\\overline{B}(k) = B_{i,i+1} = \\exp\\left(- \\frac{\\beta k^2 (L/(N_{\\mathrm{fix}}-1))^2}{8(k_{0} + k)}\\right)\n$$\n\n**任务2：计算所需的窗口数 $N_{\\mathrm{req}}(k)$**\n我们需要找到最小整数 $N \\geq 2$，使得相邻窗口的重叠至少为 $B_{\\min}=0.3$。对于 $N$ 个等间距窗口，间距为 $\\Delta x_{0} = L/(N-1)$。条件是：\n$$\n\\exp\\left(- \\frac{\\beta k^2 (L/(N-1))^2}{8(k_{0} + k)}\\right) \\geq B_{\\min}\n$$\n求解 $N$：\n$$\n- \\frac{\\beta k^2 L^2}{8(k_{0} + k)(N-1)^2} \\geq \\ln(B_{\\min})\n$$\n由于 $B_{\\min} < 1$，$\\ln(B_{\\min})$ 是负数。两边乘以 $-1$ 会反转不等号：\n$$\n\\frac{\\beta k^2 L^2}{8(k_{0} + k)(N-1)^2} \\leq -\\ln(B_{\\min})\n$$\n分离出 $(N-1)^2$：\n$$\n(N-1)^2 \\geq \\frac{\\beta k^2 L^2}{8(k_{0} + k) [-\\ln(B_{\\min})]}\n$$\n由于 $N \\geq 2$，$N-1$ 是正数，所以我们可以取平方根：\n$$\nN-1 \\geq \\sqrt{\\frac{\\beta k^2 L^2}{8(k_{0} + k) [-\\ln(B_{\\min})]}} = \\frac{kL\\sqrt{\\beta}}{\\sqrt{8(k_{0} + k) [-\\ln(B_{\\min})]}}\n$$\n$$\nN \\geq 1 + \\frac{kL\\sqrt{\\beta}}{\\sqrt{8(k_{0} + k) [-\\ln(B_{\\min})]}}\n$$\n由于 $N$ 必须是整数，$N_{\\mathrm{req}}(k)$ 是等式右侧值的向上取整（ceiling）。\n$$\nN_{\\mathrm{req}}(k) = \\left\\lceil 1 + \\frac{kL\\sqrt{\\beta}}{\\sqrt{8(k_{0} + k) [-\\ln(B_{\\min})]}} \\right\\rceil\n$$\n这些推导出的解析表达式在所提供的程序中实现，用于计算给定测试套件（弹簧常数 $k \\in \\{1.0, 10.0, 200.0\\}$ kJ/(mol·nm$^2$)）所需的值，并使用 $k_0 = 25.0$ kJ/(mol·nm$^2$), $L=1.0$ nm, $T=300.0$ K, $k_{\\mathrm{B}} = 0.008314462618$ kJ/(mol·K), $N_{\\mathrm{fix}}=5$, 以及 $B_{\\min} = 0.3$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes overlap metrics for umbrella sampling based on an analytical model.\n    \"\"\"\n    \n    # Define constants from the problem statement.\n    k0 = 25.0  # kJ/(mol·nm^2)\n    L = 1.0  # nm\n    T = 300.0  # K\n    kB = 0.008314462618  # kJ/(mol·K)\n    beta = 1.0 / (kB * T)  # mol/kJ\n    N_fix = 5  # Fixed number of windows for task 1\n    B_min = 0.3  # Target minimum overlap for task 2\n\n    # Test cases for the harmonic spring constant k in kJ/(mol·nm^2)\n    test_cases_k = [1.0, 10.0, 200.0]\n\n    def calculate_average_overlap(k):\n        \"\"\"\n        Task 1: Computes the average adjacent-window overlap for N_fix=5 windows.\n        \n        Args:\n            k (float): The umbrella spring constant in kJ/(mol·nm^2).\n        \n        Returns:\n            float: The average Bhattacharyya coefficient.\n        \"\"\"\n        if N_fix < 2:\n            # Overlap is not defined for less than 2 windows.\n            return 0.0\n            \n        delta_x0 = L / (N_fix - 1)\n        \n        # Argument of the exponential function for the Bhattacharyya coefficient\n        exponent_arg = -(beta * k**2 * delta_x0**2) / (8 * (k0 + k))\n        \n        # For evenly spaced windows, the average overlap is equal to any single\n        # adjacent-pair overlap.\n        b_avg = np.exp(exponent_arg)\n        \n        return b_avg\n\n    def calculate_required_windows(k):\n        \"\"\"\n        Task 2: Computes the minimum number of windows to ensure overlap >= B_min.\n\n        Args:\n            k (float): The umbrella spring constant in kJ/(mol·nm^2).\n\n        Returns:\n            int: The minimum required number of windows.\n        \"\"\"\n        if B_min <= 0 or B_min > 1:\n            raise ValueError(\"B_min must be in (0, 1].\")\n        \n        # If the overlap condition is trivially met (B_min=1), it would require\n        # infinite windows unless k=0, which is not a tested case. Return based on formula.\n        # But here B_min=0.3 so -log(B_min) is well-defined and positive.\n\n        # Term under the square root in the derived formula for N\n        radicand = (beta * k**2 * L**2) / (8 * (k0 + k) * (-np.log(B_min)))\n        \n        # The minimum (non-integer) number of windows required\n        n_float = 1.0 + np.sqrt(radicand)\n        \n        # The number of windows must be an integer, so we take the ceiling.\n        # The formula inherently ensures N>=2 since k>0 and sqrt term is positive.\n        n_req = int(np.ceil(n_float))\n        \n        return n_req\n\n    results = []\n    for k in test_cases_k:\n        b_bar = calculate_average_overlap(k)\n        n_req = calculate_required_windows(k)\n        results.append((b_bar, n_req))\n\n    # Format the output as specified: [[B(k1),N_req(k1)],[B(k2),N_req(k2)],...]\n    # Using f-string formatting to control decimal places and structure.\n    output_parts = [f\"[{res[0]:.6f},{res[1]}]\" for res in results]\n    final_output = f\"[{','.join(output_parts)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output)\n\nsolve()\n```", "id": "2460733"}]}