{"hands_on_practices": [{"introduction": "在任何粗粒化模拟中，第一步也是最基本的一步就是定义映射方案。这个练习要求你像一个模型开发者一样思考：给定一个复杂的分子（三磷酸腺苷，ATP）和一组明确的科学目标（保留其主要化学基团的独特性），你将如何创建一个最简洁的表征？通过这个实践 [@problem_id:2452314]，你将巩固对粗粒化模型如何在保留细节和提高计算效率之间取得平衡的理解。", "problem": "在粗粒度 (CG) 分子建模中，一个映射函数 $M$ 将分子的每个原子分配给一个珠子，其目标是在降低的分辨率下保留选定的结构特性。您被要求为单个核苷酸，如三磷酸腺苷 (ATP)，设计最简化的CG表示。建模要求是：保留核碱基、糖和磷酸基团作为不同部分的特性。在本问题中，“保留特性”应解释为这些化学部分中的每一个都必须由至少$1$个不同的珠子来表示，但每个部分内部的结构不必被解析，并且三磷酸链中的单个磷酸基不必相互区分。\n\n在保留各部分之间正确连接性（碱基-糖-磷酸）的同时，满足此要求所需的最少珠子数量是多少？\n\nA. $2$\n\nB. $3$\n\nC. $4$\n\nD. $5$", "solution": "首先将对问题陈述进行严格验证。\n\n**步骤1：提取已知条件**\n\n已知条件逐字从问题陈述中提取：\n- **系统：** 单个核苷酸，三磷酸腺苷 (ATP)。\n- **建模方法：** 粗粒度 (CG) 分子建模。\n- **映射函数：** 一个函数 $M$ 将每个原子分配给一个珠子。\n- **目标：** 在降低的分辨率下保留选定的结构特性。\n- **主要要求：** “保留核碱基、糖和磷酸基团作为不同部分的特性。”\n- **要求解释：**\n    1.  “这些化学部分中的每一个都必须由至少$1$个不同的珠子来表示”\n    2.  “每个部分内部的结构不必被解析”\n    3.  “三磷酸链中的单个磷酸基不必相互区分”\n- **连接性约束：** 表示必须保留“各部分之间的正确连接性（碱基-糖-磷酸）”。\n- **问题：** “满足此要求所需的最少珠子数量是多少……？”\n\n**步骤2：使用提取的已知条件进行验证**\n\n根据既定的验证标准对问题进行评估。\n\n- **科学依据：** 该问题牢固地植根于计算化学，特别是在粗粒度模拟领域。三磷酸腺苷 (ATP) 是一种基本的生物分子，其组成部分——腺嘌呤（一种核碱基）、核糖（一种糖）和三磷酸链——都得到了正确识别。将原子映射到珠子以创建较低分辨率模型的概念是一种标准且科学上有效的技术。\n- **适定性：** 这个问题是适定的。它要求在满足一组清晰、无矛盾的约束条件下，求一个最小值 ($N_{beads}$)。约束条件明确了哪些化学基团必须是可区分的，以及可以忽略哪些细节层次。这种结构允许一个唯一的、逻辑的解决方案。\n- **客观性：** 问题以精确、客观的语言陈述。至关重要的是，对可能含糊的短语“保留特性”进行了明确定义，从而消除了主观解释，并确保问题是可形式化的。\n\n**步骤3：结论与行动**\n\n问题陈述在科学上是合理的、适定的、客观的且自洽的。因此，它是**有效的**。现在将推导解决方案。\n\n问题要求对三磷酸腺苷 (ATP) 分子进行最简化的粗粒度表示。ATP的基本结构由三个按特定顺序连接的不同化学部分组成：\n1.  一个腺嘌呤核碱基。\n2.  一个核糖。\n3.  一个三磷酸基团（磷酸部分）。\n\n连接性为：碱基—糖—磷酸链。\n\n问题为构建模型设定了一套规则：\n\n1.  **不同部分：** 核碱基、糖和磷酸基团必须被视为“不同部分”。问题澄清了这意味着“这些化学部分中的每一个都必须由至少$1$个不同的珠子来表示”。\n    - 设 $N_{base}$ 为核碱基的珠子数量。约束条件是 $N_{base} \\ge 1$。\n    - 设 $N_{sugar}$ 为糖的珠子数量。约束条件是 $N_{sugar} \\ge 1$。\n    - 设 $N_{phosphate}$ 为磷酸基团的珠子数量。约束条件是 $N_{phosphate} \\ge 1$。\n\n    因此，珠子的总数 $N_{total}$ 必须至少是每个部分最小数量的总和：\n    $$N_{total} = N_{base} + N_{sugar} + N_{phosphate} \\ge 1 + 1 + 1 = 3$$\n    这就确定了最少的珠子数量至少是$3$。\n\n2.  **最简化表示：** 问题要求*最少*的珠子数量。因此，我们必须为 $N_{base}$、$N_{sugar}$ 和 $N_{phosphate}$ 使用满足约束条件的最小整数。满足 $N_{part} \\ge 1$ 的最简单方法是设置 $N_{part} = 1$。\n    - 我们可以选择 $N_{base} = 1$。这是允许的，因为“每个部分内部的结构不必被解析”。\n    - 我们可以选择 $N_{sugar} = 1$。这也是允许的。\n    - 我们可以选择 $N_{phosphate} = 1$。这是明确允许的，因为“三磷酸链中的单个磷酸基不必相互区分”。这允许将整个三磷酸链映射到单个珠子上。\n\n3.  **连接性：** 一个拥有 $N_{total} = 3$ 个珠子（一个用于碱基，一个用于糖，一个用于磷酸基团）的模型必须能够保留ATP的自然连接性，即碱基—糖—磷酸。一个$3$-珠子模型通过在碱基珠子和糖珠子之间以及糖珠子和磷酸珠子之间定义相互作用（即力场中的键）来完美地实现这一点。\n\n综合这些点，一个恰好有$3$个珠子的模型是满足问题所有条件的最简化表示。一个珠子代表腺嘌呤碱基，一个珠子代表核糖，一个珠子代表整个三磷酸基团。\n\n现在，我们评估给定的选项。\n\n**选项 A: $2$**\n这是**不正确的**。仅用$2$个珠子，不可能将所需的三个部分——核碱基、糖和磷酸——表示为不同的实体。这三个部分中至少有两个必须合并成一个珠子，这违反了它们必须是“不同部分”且每个部分由至少$1$个珠子表示的主要要求。\n\n**选项 B: $3$**\n这是**正确的**。如上所述，一个$3$-珠子模型是可能的最小表示。一个珠子代表核碱基，第二个珠子代表糖，第三个珠子代表整个磷酸基团。这种表示满足所有陈述的要求：三个部分中的每一个都是不同的，内部结构被忽略，单个磷酸基未被解析，并且保留了碱基-糖-磷酸的连接性。\n\n**选项 C: $4$**\n这是**不正确的**。虽然一个$4$-珠子表示是一个有效的粗粒度模型（例如，碱基$1$个珠子，糖$1$个，磷酸链$2$个），但它不是所需的*最少*数量。问题明确允许整个磷酸基团由单个珠子表示。因此，最小值是$3$，而不是$4$。问题问的是可能的最小值，而不是任何有效的可能性。\n\n**选项 D: $5$**\n这是**不正确的**。一个$5$-珠子模型（例如，碱基$1$个珠子，糖$1$个，三个磷酸基各$1$个）是一种常见且更详细的粗粒度表示。然而，根据问题的宽松约束，这不是*最少*数量，问题明确指出“三磷酸链中的单个磷酸基不必相互区分”。这使得任何超过$3$个珠子的表示对于本特定问题的目的而言都不是最简化的。", "answer": "$$\\boxed{B}$$", "id": "2452314"}, {"introduction": "一个有效的映射方案并不仅仅是减少原子数量，更关键的是要保留决定分子行为的基本物理特性。这个思想实验 [@problem_id:2452369] 挑战你评估几种不同的苯分子建模方式，苯的相互作用高度依赖于其特定的形状和电子结构。通过辨别“最差”的映射方案，你将学会识别哪些分子特征（例如各向异性）是构建一个具有物理意义的模拟所必须保留的。", "problem": "在粗粒化 (CG) 建模中，一个映射函数通过用较少的 CG 位点取代原子团，来减少自由度的数量。考虑构建一个苯的 CG 模型。苯分子近似为刚性平面结构，由 6 个碳原子以六边形排列组成，并表现出方向依赖的 $\\pi$-$\\pi$ 相互作用和一个环四极矩。下列哪种映射选择及其隐含的相互作用表示，在捕捉凝聚相中苯的相关物理特性方面是最差的？为什么？\n\nA. 将整个苯分子映射到位于其质心的单个球形 CG 珠上，并使用纯各向同性的、仅为匹配宏观密度而拟合的珠间对势。\n\nB. 将苯环映射到两个具有明确相对取向的融合 CG 珠上（例如，一个单轴平面二聚体），并在这些二聚体之间使用取向依赖的相互作用势。\n\nC. 将苯环映射到位于碳原子位置的 6 个 CG 珠上，通过谐振键和角连接以维持平面六边形结构，并在这些珠之间使用标准的键合项和非键合项。\n\nD. 将整个苯分子映射到赋予了内部取向（例如，一个嵌入轴）的单个 CG 位点上，并使用依赖于位点相对取向的各向异性相互作用（例如，Gay–Berne 型势或嵌入多极矩）。\n\n选择最能代表“最差”映射的选项，并说明其未能捕捉与苯的结构和相互作用相关的物理特性的主要原因。", "solution": "从根本上说，粗粒化定义了一个从原子坐标 $\\Gamma$ 到一个简化的 CG 变量集 $\\mathbf{R} = M(\\Gamma)$ 的映射。这些 CG 变量之间对应的精确有效相互作用由平均力势 (PMF) 给出，其定义为 $U_{\\mathrm{CG}}(\\mathbf{R}) = -k_{\\mathrm{B}} T \\ln \\int \\exp\\!\\left[-\\beta U(\\Gamma)\\right] \\, \\delta\\!\\left(M(\\Gamma) - \\mathbf{R}\\right) \\, \\mathrm{d}\\Gamma + C$，其中 $k_{\\mathrm{B}}$ 是玻尔兹曼常数，$T$ 是温度，$\\beta = 1/(k_{\\mathrm{B}} T)$，$C$ 是一个无关常数。PMF 取决于映射 $M(\\Gamma)$ 保留了哪些信息。如果 $M$ 丢弃了物理上相关的慢变量，那么任何对相互作用、状态无关、低阶的相互作用选择通常都无法恢复依赖于那些被丢弃变量的可观测量。\n\n对苯而言，关键的慢集体变量不仅包括质心位置，还包括分子取向，因为由于平面 $\\pi$ 体系和环四极矩的存在，相互作用是高度各向异性的。相对取向区分了 T 形、滑移平行和共面堆积基序；这些基序导致了取向分辨相关函数中的显著特征以及不同的缔合自由能。一个完全移除取向信息的映射无法表示这些区别，因此，此类位点之间的各向同性对势无法再现取向依赖的结构、热力学或动力学。\n\n逐项分析：\n\nA. 单个球形珠，具有纯各向同性的、仅为匹配宏观密度而拟合的对相互作用。该映射 $M(\\Gamma)$ 将分子简化为一个没有任何取向的点。因此，构建为球对称对势的 $U_{\\mathrm{CG}}(\\mathbf{R})$ 缺乏编码方向性所需的自由度。这抹去了苯的各向异性四极矩相互作用和 $\\pi$-$\\pi$ 堆积偏好，导致无法再现取向依赖的对分布函数、T 形与平行排列之间的正确平衡、第二维里系数的各向异性以及凝聚相结构。仅拟合单一热力学目标（例如密度）会进一步加剧可移植性问题。这是所有选项中最差的选择，因为它同时移除了取向信息并将相互作用限制为各向同性，从而排除了表示芳香族化合物核心物理特性的可能性。结论 — 正确。\n\nB. 两个融合的 CG 珠，具有取向依赖的相互作用。这种映射保留了单轴形状，并使得可以使用取向依赖的势，从而能够捕捉各向异性以及 $\\pi$-$\\pi$ 相互作用的某些方面。虽然这仍然是一种简化，但它保留了关键的慢变量。结论 — 错误。\n\nC. 具有维持平面性的键合项的六珠环。尽管相对于单个珠子而言，这是一种细粒度的 CG，但它保留了几何形状，并能够实现更详细的相互作用模式。它能捕捉刚性，并且通过合适的非键合项，可以捕捉各向异性的某些方面。它不是“最差”的；实际上它相当具有表现力。结论 — 错误。\n\nD. 具有内部取向和各向异性相互作用的单个位点。尽管是单一位点映射，但包含取向和各向异性势（例如，Gay–Berne 型势或嵌入多极矩）使得模型能够编码与苯的堆积和四极矩效应相关的方向性偏好。这正是为了保留关键的各向异性而设计的。结论 — 错误。\n\n因此，所列选项中最差的映射是将苯压缩成一个各向同性的球体，并将相互作用限制为纯各向同性，因为它丢弃了表示苯的各向异性 $\\pi$-$\\pi$ 和四极矩物理特性所需的取向自由度；对于这样的映射，没有任何各向同性对势能够恢复 PMF 中缺失的取向依赖性。", "answer": "$$\\boxed{A}$$", "id": "2452369"}, {"introduction": "粗粒化模拟的威力在于它能够高效地对大尺度构象变化进行采样，并用于计算宏观属性。这个动手实践 [@problem_id:2452350] 提供了一个处理模拟数据的绝佳机会，让你从中提取一个关键的热力学量：高分子两种状态之间的自由能差（$\\Delta G$）。通过将统计力学原理应用于模拟中观察到的状态布居，这个练习将展示构建并运行粗粒化模型的最终目的之一，即连接微观模拟与宏观热力学。", "problem": "在温度 $T$ 下，使用无偏力场在正则系综中模拟一个粗粒化 (CG) 聚合物。该构象由回旋半径 $R_g$ 表征，并通过一个阈值 $R_g^\\ast$ 定义宏观态：坍塌球状宏观态为 $R_g < R_g^\\ast$，伸展线团宏观态为 $R_g \\ge R_g^\\ast$。对于每个独立的测试用例，您将获得一个关于 $R_g$ 的一维直方图，该直方图由区间边界和在足够长的轨迹上累积的相应原始计数组成。直方图计数是未归一化的，对应于在温度 $T$ 下对正则系综（粒子数恒定、体积恒定、温度恒定）进行采样的无偏各态遍历模拟。阈值 $R_g^\\ast$ 与所提供的某个区间边界精确重合，因此没有区间会横跨该阈值。\n\n在温度 $T$ 下，一个宏观态的每摩尔 Helmholtz 自由能 $G$ 定义为 $G = - R T \\ln Z_{\\mathrm{macro}}$，其中 $R$ 是普适气体常数，$Z_{\\mathrm{macro}}$ 是该宏观态的受限配分函数。在无偏各态遍历正则模拟中，属于某个宏观态的构象的长时间分数等于其平衡概率。使用这些定义，计算自由能差\n$$\n\\Delta G_{\\mathrm{coil \\to globule}} = G_{\\mathrm{globule}} - G_{\\mathrm{coil}}\n$$\n对于每个测试用例，以千焦每摩尔（单位 $\\mathrm{kJ\\,mol^{-1}}$）表示，并四舍五入到六位小数。使用普适气体常数 $R = 0.008314462618\\,\\mathrm{kJ\\,mol^{-1}\\,K^{-1}}$。\n\n每个测试用例提供：\n- 一个严格递增的区间边界列表 $\\{e_0, e_1, \\dots, e_n\\}$（单位为纳米），定义了 $n$ 个区间 $[e_0,e_1), [e_1,e_2), \\dots, [e_{n-1},e_n)$。\n- 一个包含 $n$ 个非负整数计数的列表 $\\{c_0, c_1, \\dots, c_{n-1}\\}$，其中 $c_i$ 对应于区间 $[e_i, e_{i+1})$。\n- 一个阈值 $R_g^\\ast$（单位为纳米），它恰好是某个边界 $e_k$。\n- 一个温度 $T$（单位为开尔文）。\n\n解释规则：所有上边界 $e_{i+1} \\le R_g^\\ast$ 的区间内的计数都属于球状宏观态，所有下边界 $e_i \\ge R_g^\\ast$ 的区间内的计数都属于线团宏观态。\n\n您的程序必须仅使用所提供的信息计算每个测试用例的 $\\Delta G_{\\mathrm{coil \\to globule}}$，并将结果以单行形式输出，格式为逗号分隔的列表，并用方括号括起来，每个值四舍五入到六位小数（例如，$[x_1,x_2,x_3]$）。\n\n测试套件（三个独立案例）：\n- 案例 1（布居均衡，对区间边界上的 $R_g^\\ast$ 进行边界检查）：边界 $[0.5, 1.0, 1.5, 2.0, 2.5]$，计数 $[50, 50, 50, 50]$，$R_g^\\ast = 1.5\\,\\mathrm{nm}$，$T = 298.15\\,\\mathrm{K}$。\n- 案例 2（球状态占绝对优势，比例恰好为 10）：边界 $[0.5, 1.0, 1.5, 2.0, 2.5]$，计数 $[600, 400, 60, 40]$，$R_g^\\ast = 1.5\\,\\mathrm{nm}$，$T = 300.0\\,\\mathrm{K}$。\n- 案例 3（球状态罕见，极端比例 $10^{-3}$ 且存在零计数区间）：边界 $[0.5, 1.0, 1.5, 2.0, 2.5]$，计数 $[1, 0, 500, 500]$，$R_g^\\ast = 1.5\\,\\mathrm{nm}$，$T = 350.0\\,\\mathrm{K}$。\n\n您的程序应生成单行输出，其中包含一个逗号分隔的列表形式的结果，并用方括号括起来（例如，$[r_1,r_2,r_3]$），其中每个 $r_i$ 是计算出的 $\\Delta G_{\\mathrm{coil \\to globule}}$，单位为 $\\mathrm{kJ\\,mol^{-1}}$，并四舍五入到六位小数。", "solution": "问题陈述已经过验证，被认定为有效。它在科学上基于统计力学原理，提法恰当，提供了所有必要信息，并且表述客观。不存在不一致、矛盾或模糊之处。\n\n核心任务是计算聚合物两个宏观态之间的 Helmholtz 自由能差 $\\Delta G_{\\mathrm{coil \\to globule}}$：坍塌球状态 ($R_g < R_g^\\ast$) 和伸展线团态 ($R_g \\ge R_g^\\ast$)。这些宏观态由回旋半径的一个阈值 $R_g^\\ast$ 定义。\n\n在温度 $T$ 下，一个宏观态的每摩尔 Helmholtz 自由能 $G$ 通过其与该宏观态的受限配分函数 $Z_{\\mathrm{macro}}$ 的关系给出：\n$$ G = - R T \\ln Z_{\\mathrm{macro}} $$\n这里，$R$ 是普适气体常数。因此，球状态和线团态之间的自由能差为：\n$$ \\Delta G_{\\mathrm{coil \\to globule}} = G_{\\mathrm{globule}} - G_{\\mathrm{coil}} = (-R T \\ln Z_{\\mathrm{globule}}) - (-R T \\ln Z_{\\mathrm{coil}}) $$\n根据对数的基本性质，上式可简化为：\n$$ \\Delta G_{\\mathrm{coil \\to globule}} = R T (\\ln Z_{\\mathrm{coil}} - \\ln Z_{\\mathrm{globule}}) = RT \\ln \\left( \\frac{Z_{\\mathrm{coil}}}{Z_{\\mathrm{globule}}} \\right) $$\n在正则系综中，观察到系统处于某一宏观态的平衡概率 $P_{\\mathrm{macro}}$ 与其受限配分函数成正比：\n$$ P_{\\mathrm{macro}} = \\frac{Z_{\\mathrm{macro}}}{Z_{\\mathrm{total}}} $$\n其中 $Z_{\\mathrm{total}}$ 是系统的总配分函数。我们感兴趣的两个宏观态的概率之比为：\n$$ \\frac{P_{\\mathrm{globule}}}{P_{\\mathrm{coil}}} = \\frac{Z_{\\mathrm{globule}}/Z_{\\mathrm{total}}}{Z_{\\mathrm{coil}}/Z_{\\mathrm{total}}} = \\frac{Z_{\\mathrm{globule}}}{Z_{\\mathrm{coil}}} $$\n将此关系代入自由能差方程，得到我们分析的核心方程：\n$$ \\Delta G_{\\mathrm{coil \\to globule}} = RT \\ln \\left( \\left( \\frac{P_{\\mathrm{globule}}}{P_{\\mathrm{coil}}} \\right)^{-1} \\right) = -RT \\ln \\left( \\frac{P_{\\mathrm{globule}}}{P_{\\mathrm{coil}}} \\right) $$\n问题陈述指出，该模拟是各态遍历的，并且在正则系综中进行采样。统计力学的这一基本性质允许我们从观测到的构象的长时间分数来估计平衡概率。所提供的直方图数据代表了这些观测结果。设 $N_{\\mathrm{globule}}$ 为球状态构象的总计数，$N_{\\mathrm{coil}}$ 为线团态构象的总计数。那么，概率之比可直接通过这些计数的比率来估计：\n$$ \\frac{P_{\\mathrm{globule}}}{P_{\\mathrm{coil}}} \\approx \\frac{N_{\\mathrm{globule}}}{N_{\\mathrm{coil}}} $$\n因此，最终的工作方程是：\n$$ \\Delta G_{\\mathrm{coil \\to globule}} = -RT \\ln \\left( \\frac{N_{\\mathrm{globule}}}{N_{\\mathrm{coil}}} \\right) $$\n计数 $N_{\\mathrm{globule}}$ 和 $N_{\\mathrm{coil}}$ 根据所提供的解释规则对直方图计数 $\\{c_i\\}$ 进行求和来确定。阈值 $R_g^\\ast$ 是某个索引 $k$ 对应的边界 $e_k$。\n- 球状态 ($R_g < R_g^\\ast$) 对应于所有满足 $e_{i+1} \\le R_g^\\ast$ 的区间 $[e_i, e_{i+1})$。由于 $R_g^\\ast = e_k$，这些是索引 $i < k$ 的区间。\n- 线团态 ($R_g \\ge R_g^\\ast$) 对应于所有满足 $e_i \\ge R_g^\\ast$ 的区间 $[e_i, e_{i+1})$。由于 $R_g^\\ast = e_k$，这些是索引 $i \\ge k$ 的区间。\n\n因此，我们可以通过对适当的索引求和原始计数 $c_i$ 来计算每个状态的总计数。如果区间边界为 $\\{e_0, e_1, \\dots, e_n\\}$ 且 $R_g^\\ast = e_k$：\n$$ N_{\\mathrm{globule}} = \\sum_{i=0}^{k-1} c_i $$\n$$ N_{\\mathrm{coil}} = \\sum_{i=k}^{n-1} c_i $$\n实现过程包括找到使 $e_k = R_g^\\ast$ 的索引 $k$，将索引从 $0$ 到 $k-1$ 的计数相加得到 $N_{\\mathrm{globule}}$，并将索引从 $k$ 到列表末尾的计数相加得到 $N_{\\mathrm{coil}}$。\n\n普适气体常数的值取为 $R = 0.008314462618\\,\\mathrm{kJ\\,mol^{-1}\\,K^{-1}}$。\n\n对于每个测试用例，步骤如下：\n1.  从边界列表中确定与 $R_g^\\ast$ 对应的区间边界索引 $k$。\n2.  将索引为 $0$ 到 $k-1$ 的区间的计数相加，得到 $N_{\\mathrm{globule}}$。\n3.  将索引为 $k$ 到计数列表末尾的区间的计数相加，得到 $N_{\\mathrm{coil}}$。\n4.  计算 $\\Delta G_{\\mathrm{coil \\to globule}} = -R \\times T \\times \\ln(N_{\\mathrm{globule}} / N_{\\mathrm{coil}})$。\n5.  按规定将最终结果四舍五入到六位小数。\n\n将此逻辑系统地应用于所有提供的测试用例，以获得最终结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the free energy difference between coil and globule macrostates\n    based on histogram data from a simulation.\n    \"\"\"\n\n    # Universal gas constant in kJ mol^-1 K^-1\n    R = 0.008314462618\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: (edges, counts, Rg_star, T)\n        ([0.5, 1.0, 1.5, 2.0, 2.5], [50, 50, 50, 50], 1.5, 298.15),\n        # Case 2\n        ([0.5, 1.0, 1.5, 2.0, 2.5], [600, 400, 60, 40], 1.5, 300.0),\n        # Case 3\n        ([0.5, 1.0, 1.5, 2.0, 2.5], [1, 0, 500, 500], 1.5, 350.0)\n    ]\n\n    results = []\n    for case in test_cases:\n        edges, counts, Rg_star, T = case\n\n        # Find the index k where the threshold Rg_star is located in the edges list.\n        # This index partitions the bins.\n        # According to the problem, Rg_star is exactly one of the edges.\n        try:\n            k = edges.index(Rg_star)\n        except ValueError:\n            # This case should not be reached based on the problem statement.\n            # It is included for robustness in a general context.\n            results.append(float('nan')) # Or handle error appropriately.\n            continue\n        \n        # Partition counts based on the index k.\n        # An edge at index k separates the count array at index k.\n        # Globule state corresponds to bins [e_i, e_{i+1}) where e_{i+1} <= Rg_star.\n        # If Rg_star = e_k, this includes bins 0, 1, ..., k-1.\n        # Coil state corresponds to bins [e_i, e_{i+1}) where e_i >= Rg_star.\n        # If Rg_star = e_k, this includes bins k, k+1, ...\n        globule_counts = counts[:k]\n        coil_counts = counts[k:]\n\n        # Sum the counts for each macrostate\n        N_globule = sum(globule_counts)\n        N_coil = sum(coil_counts)\n\n        # The problem cases avoid states with zero population, which would lead\n        # to infinite free energy differences.\n        if N_globule == 0 or N_coil == 0:\n            if N_globule == 0:\n                delta_g = float('inf') # ln(0) -> -inf\n            else: # N_coil == 0\n                delta_g = float('-inf') # ln(inf) -> +inf\n            # Rounding is not well-defined for infinity.\n            # However, problem constraints ensure this path is not taken.\n            results.append(delta_g)\n            continue\n        \n        # Calculate the ratio of populations\n        population_ratio = N_globule / N_coil\n\n        # Calculate the free energy difference using the fundamental formula\n        # delta_G = -R * T * ln(P_globule / P_coil)\n        delta_g = -R * T * np.log(population_ratio)\n\n        # Append the rounded result to the list of results\n        results.append(round(delta_g, 6))\n\n    # Format the results into the required single-line string format.\n    # The str() function for floats is used for standard formatting.\n    # The problem specifies rounding which implies standard float representation, not scientific notation.\n    output_str = f\"[{','.join(f'{res:.6f}' for res in results)}]\"\n\n    print(output_str)\n\nsolve()\n```", "id": "2452350"}]}