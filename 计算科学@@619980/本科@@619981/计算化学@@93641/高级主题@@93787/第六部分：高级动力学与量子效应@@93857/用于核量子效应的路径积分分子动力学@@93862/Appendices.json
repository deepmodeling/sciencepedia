{"hands_on_practices": [{"introduction": "理解路径积分形式论的最佳方式之一是将其核心概念——代表量子粒子的“环状聚合物”——具象化。第一个练习将聚焦于最基础的自由粒子系统，通过计算其回旋半径 $R_g^2$，我们可以直观地理解量子离域效应，并探索它如何受质量和温度等物理参数的影响。这项实践为我们掌握路径积分分子动力学中更复杂的应用奠定了坚实的基础 [@problem_id:2459892]。", "problem": "一个质量为 $m$ 的单量子粒子在 $d$ 维空间中，绝对温度为 $T$，可以由一个 $P$ 珠环状聚合物表示。该聚合物源于量子正则配分函数的虚时间（路径积分）离散化。对于自由粒子，珠子位置 $\\{\\mathbf{x}_i\\}_{i=1}^P$（具有周期性索引 $\\mathbf{x}_{P+1} \\equiv \\mathbf{x}_1$）根据与以下成正比的高斯密度分布：\n$$\n\\exp\\!\\left(-\\sum_{i=1}^{P} \\frac{m P}{2 \\beta \\hbar^2}\\,\\lVert \\mathbf{x}_i - \\mathbf{x}_{i+1} \\rVert^2\\right),\n$$\n其中 $\\beta = 1/(k_B T)$ 是逆热能，$k_B$ 是玻尔兹曼常数，$\\hbar$ 是约化普朗克常数。定义质心 $\\mathbf{x}_c = \\frac{1}{P} \\sum_{i=1}^{P} \\mathbf{x}_i$ 和回旋半径的平方\n$$\nR_g^2(d;m,T,P) = \\frac{1}{P}\\sum_{i=1}^{P} \\left\\langle \\lVert \\mathbf{x}_i - \\mathbf{x}_c \\rVert^2 \\right\\rangle,\n$$\n其中 $\\langle \\cdot \\rangle$ 表示对上述高斯密度的期望值。同时定义最近邻键长的均方值\n$$\nb^2(d;m,T,P) = \\left\\langle \\lVert \\mathbf{x}_i - \\mathbf{x}_{i+1} \\rVert^2 \\right\\rangle,\n$$\n由于对称性，该值与 $i$ 无关。最后，定义每个空间维度的无量纲标度化尺寸\n$$\ns(d;m,T,P) = \\frac{m k_B T}{\\hbar^2}\\,\\frac{R_g^2(d;m,T,P)}{d}.\n$$\n您的任务是编写一个程序，为下面的测试套件中的每组参数，计算并返回三元组 $[R_g^2, b^2, s]$。\n\n请精确使用以下给出的物理常数（国际单位制）：\n- $k_B = 1.380649\\times 10^{-23}\\ \\mathrm{J/K}$，\n- $\\hbar = 1.054571817\\times 10^{-34}\\ \\mathrm{J\\cdot s}$。\n\n所有输入均使用国际单位制：$m$ 单位为千克 ($\\mathrm{kg}$)，$T$ 单位为开尔文 ($\\mathrm{K}$)。您必须以平方米 ($\\mathrm{m}^2$) 表示 $R_g^2$ 和 $b^2$，以纯数（无量纲）表示 $s$。除了标准的浮点数表示外，不要进行任何舍入。\n\n测试套件（每个测试用例是一个元组 $(d,m,T,P)$）：\n- 用例 1（典型情况）：$(d,m,T,P) = (\\,1,\\ 1.67262192369\\times 10^{-27},\\ 300.0,\\ 4\\,)$。\n- 用例 2（较低温度，更多珠子）：$(d,m,T,P) = (\\,1,\\ 1.67262192369\\times 10^{-27},\\ 10.0,\\ 32\\,)$。\n- 用例 3（三维，更重的粒子）：$(d,m,T,P) = (\\,3,\\ 3.3435837724\\times 10^{-27},\\ 50.0,\\ 64\\,)$。\n- 用例 4（极低温度，重得多的粒子）：$(d,m,T,P) = (\\,3,\\ 2.6566962\\times 10^{-26},\\ 1.0,\\ 128\\,)$。\n- 用例 5（边界情况，单珠子）：$(d,m,T,P) = (\\,1,\\ 1.67262192369\\times 10^{-27},\\ 5.0,\\ 1\\,)$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表。对于每个测试用例，按测试套件的相同顺序输出列表 $[R_g^2,b^2,s]$。例如，您的输出必须看起来像\n\"[ [R_g^2_case1,b^2_case1,s_case1], [R_g^2_case2,b^2_case2,s_case2], ... ]\"\n并用数值代替符号。\n\n评估重点说明：\n- 您的结果必须从给定的高斯分布所蕴含的第一性原理计算得出，而非查表所得。\n- 输出是唯一确定的实数。\n- 测试套件包括一个“理想路径”（中等 $T$，小 $P$）、低温和较大 $P$ 的场景、一个三维用例、一个极低温度搭配大质量的用例，以及一个边界情况 $P=1$。", "solution": "所述问题具有科学依据、提法明确且客观。它基于统计力学和量子力学路径积分表述的基本原理。所有术语都有明确的定义，并且提供了必要的物理常数和参数。因此，该问题被认为是有效的，可以从第一性原理推导出形式解。\n\n任务是为一个由 $P$ 珠环状聚合物描述的自由量子粒子计算平方回旋半径 $R_g^2$、均方键长 $b^2$ 和无量纲尺寸参数 $s$。推导过程主要分为三个步骤。\n\n首先，我们利用问题的可分离性。高斯概率密度是 $d$ 个空间维度上每个维度相同分布的乘积。设 $\\mathbf{x}_i = (x_{i,1}, \\dots, x_{i,d})$ 为第 $i$ 个珠子的坐标向量。分布中的指数是关于空间维度 $k$ 的总和：\n$$\n\\sum_{i=1}^{P} \\frac{m P}{2 \\beta \\hbar^2}\\,\\lVert \\mathbf{x}_i - \\mathbf{x}_{i+1} \\rVert^2 = \\sum_{k=1}^{d} \\left( \\sum_{i=1}^{P} \\frac{m P}{2 \\beta \\hbar^2}\\,(x_{i,k} - x_{i+1,k})^2 \\right)\n$$\n这意味着，对于那些是空间维度上求和的量（如范数的平方），其期望值可以通过求解一个一维问题然后将结果乘以 $d$ 来计算。根据对称性，每个笛卡尔分量的期望值是相同的。\n对于平方回旋半径和均方键长，我们有：\n$$\nR_g^2(d;m,T,P) = \\sum_{k=1}^{d} \\frac{1}{P}\\sum_{i=1}^{P} \\left\\langle (x_{i,k} - x_{c,k})^2 \\right\\rangle = d \\cdot R_{g,1D}^2\n$$\n$$\nb^2(d;m,T,P) = \\sum_{k=1}^{d} \\left\\langle (x_{i,k} - x_{i+1,k})^2 \\right\\rangle = d \\cdot b_{1D}^2\n$$\n其中 $R_{g,1D}^2$ 和 $b_{1D}^2$ 是一维系统（$d=1$）对应的量。无量纲参数 $s$ 的定义中包含因子 $1/d$，因此它将与维度无关。我们的主要任务因此简化为求解一维问题。\n\n其次，我们通过变换到简正模来分析一维问题。一维珠子位置 $\\{x_i\\}_{i=1}^P$ 的概率分布为：\n$$\np(x_1, \\dots, x_P) \\propto \\exp\\left(-\\frac{\\alpha}{2} \\sum_{i=1}^{P} (x_i - x_{i+1})^2\\right)\n$$\n其中 $\\alpha = \\frac{mP}{\\beta\\hbar^2}$ 且 $\\beta = 1/(k_B T)$。指数中的二次型可以通过离散傅里叶变换进行对角化。我们定义简正模坐标 $q_k$ 为：\n$$\nq_k = \\frac{1}{\\sqrt{P}} \\sum_{j=1}^P x_j e^{-i 2\\pi k(j-1)/P}, \\quad k=0, 1, \\dots, P-1\n$$\n用这些模表示，总和变为：\n$$\n\\sum_{j=1}^P (x_j - x_{j+1})^2 = \\sum_{k=0}^{P-1} \\lambda_k |q_k|^2\n$$\n其中 $\\lambda_k = 4\\sin^2(\\pi k/P)$ 是环形连接矩阵的特征值。\n模 $q_0 = \\frac{1}{\\sqrt{P}}\\sum_j x_j = \\sqrt{P} x_c$ 对应于质心运动。其特征值为 $\\lambda_0=0$，因此概率分布与 $q_0$ 无关。这反映了自由粒子系统的平移不变性，这在整个坐标空间上导致了不可归一化的分布。然而，量 $R_g^2$ 和 $b^2$ 是平移不变的。我们可以通过固定质心（例如在 $x_c=0$ 处），这等效于设置 $q_0=0$，来计算它们的期望值。\n对于其他模（$k=1, \\dots, P-1$），分布是独立高斯分布的乘积。一维中每个模的平均振幅平方被发现为：\n$$\n\\left\\langle |q_k|^2 \\right\\rangle = \\frac{1}{\\alpha \\lambda_k} \\quad \\text{for } k=1, \\dots, P-1\n$$\n\n第三，我们计算所求的量。在质心固定于 $x_c=0$ 的情况下，一维的平方回旋半径为 $R_{g,1D}^2 = \\frac{1}{P} \\sum_j \\langle x_j^2 \\rangle$。根据对称性，$\\langle x_j^2 \\rangle$ 对所有 $j$ 都是相同的。我们可以通过用简正模表示 $x_1$（$x_1 = \\frac{1}{\\sqrt{P}}\\sum_{k=0}^{P-1} q_k$）并利用模的正交性（$\\langle q_k q_l^* \\rangle = \\delta_{kl} \\langle |q_k|^2 \\rangle$）来计算 $\\langle x_1^2 \\rangle$：\n$$\nR_{g,1D}^2 = \\langle x_1^2 \\rangle = \\left\\langle \\left( \\frac{1}{\\sqrt{P}} \\sum_{k=1}^{P-1} q_k \\right) \\left( \\frac{1}{\\sqrt{P}} \\sum_{l=1}^{P-1} q_l^* \\right) \\right\\rangle = \\frac{1}{P} \\sum_{k=1}^{P-1} \\langle |q_k|^2 \\rangle\n$$\n代入 $\\langle |q_k|^2 \\rangle$ 的表达式：\n$$\nR_{g,1D}^2 = \\frac{1}{P} \\sum_{k=1}^{P-1} \\frac{1}{\\alpha \\lambda_k} = \\frac{1}{P \\alpha} \\sum_{k=1}^{P-1} \\frac{1}{4\\sin^2(\\pi k/P)}\n$$\n使用标准求和恒等式 $\\sum_{k=1}^{N-1} \\csc^2(\\pi k/N) = \\frac{N^2-1}{3}$，我们得到：\n$$\nR_{g,1D}^2 = \\frac{1}{4P\\alpha} \\frac{P^2-1}{3} = \\frac{P^2-1}{12 P \\alpha} = \\frac{P^2-1}{12 P} \\frac{\\beta\\hbar^2}{mP} = \\frac{\\beta\\hbar^2}{m} \\frac{P^2-1}{12P^2}\n$$\n对于一维的均方键长，我们计算 $b_{1D}^2 = \\langle(x_1-x_2)^2\\rangle$。用简正模表示这个差值：\n$$\nx_1 - x_2 = \\frac{1}{\\sqrt{P}} \\sum_{k=1}^{P-1} q_k (1 - e^{-i2\\pi k/P})\n$$\n期望值为：\n$$\nb_{1D}^2 = \\frac{1}{P} \\sum_{k=1}^{P-1} \\langle |q_k|^2 \\rangle |1 - e^{-i2\\pi k/P}|^2 = \\frac{1}{P} \\sum_{k=1}^{P-1} \\frac{1}{\\alpha \\lambda_k} (2 - 2\\cos(2\\pi k/P))\n$$\n由于 $2 - 2\\cos(2\\pi k/P) = \\lambda_k$，各项相消：\n$$\nb_{1D}^2 = \\frac{1}{P} \\sum_{k=1}^{P-1} \\frac{1}{\\alpha} = \\frac{P-1}{P\\alpha} = \\frac{P-1}{P} \\frac{\\beta\\hbar^2}{mP} = \\frac{\\beta\\hbar^2}{m} \\frac{P-1}{P^2}\n$$\n最后，我们可以写出 $d$ 维情况的表达式：\n$$\nR_g^2(d,m,T,P) = d \\frac{\\hbar^2}{m k_B T} \\frac{P^2-1}{12P^2}\n$$\n$$\nb^2(d,m,T,P) = d \\frac{\\hbar^2}{m k_B T} \\frac{P-1}{P^2}\n$$\n无量纲尺寸 $s$ 于是为：\n$$\ns(d,m,T,P) = \\frac{m k_B T}{\\hbar^2}\\,\\frac{R_g^2}{d} = \\frac{m k_B T}{\\hbar^2d} \\left( d \\frac{\\hbar^2}{m k_B T} \\frac{P^2-1}{12P^2} \\right) = \\frac{P^2-1}{12P^2}\n$$\n这些公式为问题提供了精确的解析解。$P=1$ 的特殊情况正确地得出 $R_g^2=0$、$b^2=0$ 和 $s=0$，这对应于点粒子的经典极限。提供的程序将实现这些最终表达式。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes path integral properties for a free quantum particle.\n    \"\"\"\n    \n    # Physical constants in SI units, given in the problem statement.\n    KB = 1.380649e-23  # Boltzmann constant (J/K)\n    HBAR = 1.054571817e-34  # Reduced Planck constant (J*s)\n\n    # Test suite of parameters (d, m, T, P)\n    # d: spatial dimensions (dimensionless)\n    # m: mass (kg)\n    # T: temperature (K)\n    # P: number of path integral beads (dimensionless)\n    test_cases = [\n        # Case 1 (typical): (d, m, T, P)\n        (1, 1.67262192369e-27, 300.0, 4),\n        # Case 2 (lower temperature, more beads):\n        (1, 1.67262192369e-27, 10.0, 32),\n        # Case 3 (three dimensions, heavier particle):\n        (3, 3.3435837724e-27, 50.0, 64),\n        # Case 4 (very low temperature, much heavier particle):\n        (3, 2.6566962e-26, 1.0, 128),\n        # Case 5 (boundary, single bead):\n        (1, 1.67262192369e-27, 5.0, 1),\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        d, m, T, P = case\n        \n        # The case P=1 is a special limit handled correctly by the general formulas.\n        # If P is 1, P-1=0 and P^2-1=0, so Rg2 and b2 will be zero.\n        P = float(P) # Use floating point for calculations to avoid integer division issues.\n\n        # Common pre-factor for Rg2 and b2, with units of m^2\n        # C = hbar^2 / (m * k_B * T)\n        common_factor = (HBAR**2) / (m * KB * T)\n\n        # Squared radius of gyration (m^2)\n        # Rg^2 = d * C * (P^2 - 1) / (12 * P^2)\n        if P == 0: # Avoid division by zero, although not in test cases\n            rg2 = 0.0\n        else:\n            rg2 = d * common_factor * (P**2 - 1.0) / (12.0 * P**2)\n\n        # Mean-squared nearest-neighbor bond length (m^2)\n        # b^2 = d * C * (P - 1) / P^2\n        if P == 0:\n            b2 = 0.0\n        else:\n             b2 = d * common_factor * (P - 1.0) / P**2\n\n        # Dimensionless scaled size per spatial dimension\n        # s = (P^2 - 1) / (12 * P^2)\n        if P == 0:\n            s_val = 0.0\n        else:\n             s_val = (P**2 - 1.0) / (12.0 * P**2)\n            \n        results.append([rg2, b2, s_val])\n\n    # Format the output string exactly as required.\n    # e.g., \"[[r1_1,r1_2,r1_3],[r2_1,r2_2,r2_3]]\"\n    formatted_results = [f\"[{r[0]},{r[1]},{r[2]}]\" for r in results]\n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    \n    print(final_output_string)\n\nsolve()\n```", "id": "2459892"}, {"introduction": "在建立了环状聚合物的基本概念后，下一个实践将深入探讨其一个关键特征：闭环结构。我们将对谐振子中的粒子进行一次计算思想实验，通过比较标准的“闭合”聚合物链与人为“切断”的开链，我们可以直接量化虚时周期性边界条件对粒子性质的影响。这个练习揭示了环状拓扑结构在正确捕捉量子统计效应中的核心作用 [@problem_id:2459908]。", "problem": "考虑两个质量为 $m$ 的可区分、无相互作用的一维量子粒子，被约束在相同的谐振子势 $V(x)=\\tfrac{1}{2} m \\omega^2 x^2$ 中，体系的逆温度为 $\\beta$。在具有 $P$ 个时间切片（珠子）的路径积分表示中，每个粒子被映射为一个由 $P$ 个珠子组成的经典环状聚合物，珠子之间通过最近邻谐波弹簧连接。在无量纲单位制下进行计算，其中约化普朗克常数 $\\hbar$ 等于 $1$，玻尔兹曼常数 $k_B$ 等于 $1$。\n\n对于单个粒子，定义闭环聚合物的构型势能为\n$$\nU_{\\mathrm{closed}}(x_1,\\dots,x_P) \\;=\\; \\sum_{j=1}^{P} \\frac{1}{2} m \\omega^2 x_j^2 \\;+\\; \\frac{1}{2} m \\omega_P^2 \\sum_{j=1}^{P} (x_j - x_{j+1})^2,\n$$\n其中使用循环索引 $x_{P+1}\\equiv x_1$，角频率为\n$$\n\\omega_P \\;=\\; \\frac{P}{\\beta}.\n$$\n定义“切开”（开链）的聚合物构型势能，即移除珠子 $P$ 和珠子 $1$ 之间的弹簧：\n$$\nU_{\\mathrm{cut}}(x_1,\\dots,x_P) \\;=\\; \\sum_{j=1}^{P} \\frac{1}{2} m \\omega^2 x_j^2 \\;+\\; \\frac{1}{2} m \\omega_P^2 \\sum_{j=1}^{P-1} (x_j - x_{j+1})^2.\n$$\n珠子坐标的构型概率密度正比于\n$$\n\\exp\\!\\Big( - \\beta_P \\, U(\\mathbf{x}) \\Big), \\quad \\text{with} \\quad \\beta_P \\;=\\; \\frac{\\beta}{P},\n$$\n其中 $U$ 为 $U_{\\mathrm{closed}}$ 或 $U_{\\mathrm{cut}}$。\n\n令环状聚合物的质心为 $x_c = \\tfrac{1}{P}\\sum_{j=1}^{P} x_j$，并定义环状聚合物的回旋半径平方为\n$$\nR_g^2 \\;=\\; \\frac{1}{P}\\sum_{j=1}^{P} (x_j - x_c)^2.\n$$\n在一个双粒子模拟中，这两个粒子彼此不相互作用，其他方面均相同。假设粒子 2 保持为闭环聚合物，而粒子 1 的一个弹簧被人为切开，如上所述。由于粒子不相互作用，构型分布可以因子分解，粒子 1 的 $R_g^2$ 仅由其自身的聚合物决定。\n\n任务：对于下面测试套件中的每一组参数，计算由于切开一个弹簧而导致的粒子 1 期望回旋半径平方的变化量，\n$$\n\\Delta \\;=\\; \\mathbb{E}_{\\mathrm{cut}}[R_g^2] \\;-\\; \\mathbb{E}_{\\mathrm{closed}}[R_g^2],\n$$\n其中期望值是根据相应的构型分布计算的。将 $\\Delta$ 报告为一个无量纲的实数。\n\n使用以下测试套件，其中每个元组指定 $(m,\\;\\omega,\\;\\beta,\\;P)$：\n- $(1.0,\\;1.0,\\;5.0,\\;16)$\n- $(1.0,\\;0.5,\\;10.0,\\;32)$\n- $(1.5,\\;2.0,\\;4.0,\\;8)$\n- $(2.0,\\;1.0,\\;7.0,\\;2)$\n- $(1.0,\\;3.0,\\;5.0,\\;24)$\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，列表顺序与测试套件相同，例如 $[r_1,r_2,r_3,r_4,r_5]$。每个 $r_i$ 必须等于第 $i$ 组参数对应的 $\\Delta$。输出是无量纲的，应以浮点数形式给出。", "solution": "用户的问题具有科学依据，提法明确，客观，并包含得出唯一解所需的所有必要信息。因此，该问题被视为**有效**。我们将进行完整的推导和计算求解。\n\n问题要求计算回旋半径平方期望值的变化量 $\\Delta = \\mathbb{E}_{\\mathrm{cut}}[R_g^2] - \\mathbb{E}_{\\mathrm{closed}}[R_g^2]$。期望值 $\\mathbb{E}[\\cdot]$ 是对概率分布 $p(\\mathbf{x}) \\propto \\exp(-\\beta_P U(\\mathbf{x}))$ 求的，其中 $\\mathbf{x} = (x_1, \\dots, x_P)$ 是珠子坐标的矢量，有效逆温度为 $\\beta_P = \\beta/P$。在“闭环”和“切开”两种情况下，势能 $U(\\mathbf{x})$ 都是二次型。这种结构最好使用简正模分解进行分析。\n\n势能可以写成矩阵形式：\n$$\nU(\\mathbf{x}) = \\frac{1}{2}m\\omega^2 \\sum_{j=1}^{P} x_j^2 + \\text{spring term} = \\frac{1}{2} \\mathbf{x}^T (m\\omega^2 \\mathbf{I} + m\\omega_P^2 \\mathbf{K}) \\mathbf{x}\n$$\n其中 $\\mathbf{I}$ 是 $P \\times P$ 单位矩阵，$\\mathbf{K}$ 是表示谐波弹簧耦合的矩阵，该矩阵在闭链和开链情况下是不同的。玻尔兹曼因子为 $\\exp(-\\beta_P U(\\mathbf{x})) = \\exp(-\\frac{1}{2}\\mathbf{x}^T (\\frac{\\beta}{P} (m\\omega^2 \\mathbf{I} + m\\omega_P^2 \\mathbf{K})) \\mathbf{x})$。这定义了一个均值为零的多元正态分布 $\\mathbf{x}$。\n\n为了简化计算，我们变换到简正模坐标 $\\mathbf{q}$，该坐标可以对角化矩阵 $\\mathbf{A} = m\\omega^2 \\mathbf{I} + m\\omega_P^2 \\mathbf{K}$。由于单位矩阵 $\\mathbf{I}$ 已经是对角的，这等价于对角化 $\\mathbf{K}$。设 $\\mathbf{T}$ 为一个正交矩阵，其列是 $\\mathbf{K}$ 的归一化特征向量，使得 $\\mathbf{K} = \\mathbf{T} \\mathbf{\\Lambda} \\mathbf{T}^T$，其中 $\\mathbf{\\Lambda}$ 是由特征值 $\\lambda_k$ 构成的对角矩阵。通过变换 $\\mathbf{x} = \\mathbf{Tq}$，势能解耦为：\n$$\nU(\\mathbf{q}) = \\frac{1}{2} \\mathbf{q}^T \\mathbf{T}^T (m\\omega^2 \\mathbf{I} + m\\omega_P^2 \\mathbf{K}) \\mathbf{Tq} = \\frac{1}{2} \\mathbf{q}^T (m\\omega^2 \\mathbf{I} + m\\omega_P^2 \\mathbf{\\Lambda}) \\mathbf{q} = \\frac{1}{2} \\sum_{k=0}^{P-1} (m\\omega^2 + m\\omega_P^2 \\lambda_k) q_k^2\n$$\n简正模 $q_k$ 在统计上是独立的。每个模式的概率分布是一个简单的高斯分布，通过对每个二次自由度应用能量均分定理，我们得到每个简正模的方差：\n$$\n\\mathbb{E}[q_k^2] = \\langle q_k^2 \\rangle = \\frac{1}{\\beta_P(m\\omega^2 + m\\omega_P^2 \\lambda_k)} = \\frac{P}{\\beta m (\\omega^2 + \\omega_P^2 \\lambda_k)}\n$$\n\n接下来，我们将回旋半径平方 $R_g^2 = \\frac{1}{P}\\sum_{j=1}^{P} (x_j - x_c)^2$ 用简正模表示。利用正交变换的性质 $\\sum_{j=1}^P x_j^2 = \\sum_{k=0}^{P-1} q_k^2$（帕塞瓦尔定理），并注意到质心 $x_c = \\frac{1}{P}\\sum_j x_j$ 对应于 $k=0$ 的简正模（“零频”或“质心”模），我们继续推导。对于“闭环”和“切开”的链，矩阵 $\\mathbf{K}$ 都有一个特征值 $\\lambda_0 = 0$，其对应的特征向量与 $(1,1,\\dots,1)^T$ 成正比。相关的简正模是 $q_0 = \\frac{1}{\\sqrt{P}}\\sum_j x_j = \\sqrt{P}x_c$，这意味着 $x_c^2 = q_0^2/P$。代入 $R_g^2$ 的定义：\n$$\nR_g^2 = \\frac{1}{P} \\left(\\sum_{j=1}^P x_j^2\\right) - x_c^2 = \\frac{1}{P} \\left(\\sum_{k=0}^{P-1} q_k^2\\right) - \\frac{q_0^2}{P} = \\frac{1}{P} \\sum_{k=1}^{P-1} q_k^2\n$$\n因此，期望值是对非质心模（$k=1, \\dots, P-1$）的求和：\n$$\n\\mathbb{E}[R_g^2] = \\frac{1}{P} \\sum_{k=1}^{P-1} \\mathbb{E}[q_k^2] = \\frac{1}{P} \\sum_{k=1}^{P-1} \\frac{P}{\\beta m (\\omega^2 + \\omega_P^2 \\lambda_k)} = \\frac{1}{\\beta m} \\sum_{k=1}^{P-1} \\frac{1}{\\omega^2 + \\omega_P^2 \\lambda_k}\n$$\n最后一步是代入闭环和开链情况下的具体特征值 $\\lambda_k$。\n\n**情况1：闭环聚合物 ($U_{\\mathrm{closed}}$)**\n耦合矩阵 $\\mathbf{K}_{\\mathrm{closed}}$ 是一个表示环上相互作用的循环矩阵。其特征值通过离散傅里叶分析给出：\n$$\n\\lambda_k^{\\mathrm{closed}} = 2 - 2\\cos\\left(\\frac{2\\pi k}{P}\\right) = 4\\sin^2\\left(\\frac{\\pi k}{P}\\right), \\quad k \\in \\{0, 1, \\dots, P-1\\}\n$$\n期望值为：\n$$\n\\mathbb{E}_{\\mathrm{closed}}[R_g^2] = \\frac{1}{\\beta m} \\sum_{k=1}^{P-1} \\frac{1}{\\omega^2 + 4\\omega_P^2 \\sin^2(\\frac{\\pi k}{P})}\n$$\n\n**情况2：切开（开链）的聚合物链 ($U_{\\mathrm{cut}}$)**\n耦合矩阵 $\\mathbf{K}_{\\mathrm{cut}}$ 是一个包含 $P$ 个顶点的路径图的图拉普拉斯矩阵。其特征值为：\n$$\n\\lambda_k^{\\mathrm{cut}} = 2 - 2\\cos\\left(\\frac{\\pi k}{P}\\right) = 4\\sin^2\\left(\\frac{\\pi k}{2P}\\right), \\quad k \\in \\{0, 1, \\dots, P-1\\}\n$$\n因此，期望值为：\n$$\n\\mathbb{E}_{\\mathrm{cut}}[R_g^2] = \\frac{1}{\\beta m} \\sum_{k=1}^{P-1} \\frac{1}{\\omega^2 + 4\\omega_P^2 \\sin^2(\\frac{\\pi k}{2P})}\n$$\n\n**$\\Delta$ 的最终计算**\n综合结果，期望回旋半径平方的变化量为：\n$$\n\\Delta = \\mathbb{E}_{\\mathrm{cut}}[R_g^2] - \\mathbb{E}_{\\mathrm{closed}}[R_g^2] = \\frac{1}{\\beta m} \\sum_{k=1}^{P-1} \\left( \\frac{1}{\\omega^2 + 4\\omega_P^2 \\sin^2(\\frac{\\pi k}{2P})} - \\frac{1}{\\omega^2 + 4\\omega_P^2 \\sin^2(\\frac{\\pi k}{P})} \\right)\n$$\n使用定义 $\\omega_P = P/\\beta$，我们得到用于数值计算的最终公式：\n$$\n\\Delta = \\frac{1}{\\beta m} \\sum_{k=1}^{P-1} \\left( \\frac{1}{\\omega^2 + 4(P/\\beta)^2 \\sin^2(\\frac{\\pi k}{2P})} - \\frac{1}{\\omega^2 + 4(P/\\beta)^2 \\sin^2(\\frac{\\pi k}{P})} \\right)\n$$\n实现此表达式以求解给定参数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for the given test suite by calculating the change\n    in the expected radius of gyration squared.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (m, omega, beta, P)\n        (1.0, 1.0, 5.0, 16),\n        (1.0, 0.5, 10.0, 32),\n        (1.5, 2.0, 4.0, 8),\n        (2.0, 1.0, 7.0, 2),\n        (1.0, 3.0, 5.0, 24)\n    ]\n\n    results = []\n    for m, omega, beta, P in test_cases:\n        delta = calculate_delta(m, omega, beta, P)\n        results.append(delta)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef calculate_delta(m, omega, beta, P):\n    \"\"\"\n    Calculates the change in the expected radius of gyration squared, Delta.\n\n    The formula derived from normal mode analysis is:\n    Delta = (1 / (beta * m)) * sum_{k=1}^{P-1} [\n        1 / (omega^2 + 4 * omega_P^2 * sin^2(pi*k/(2*P))) -\n        1 / (omega^2 + 4 * omega_P^2 * sin^2(pi*k/P))\n    ]\n    where omega_P = P / beta.\n\n    Args:\n        m (float): Mass of the particle.\n        omega (float): Angular frequency of the harmonic potential.\n        beta (float): Inverse temperature.\n        P (int): Number of path integral beads.\n\n    Returns:\n        float: The calculated value of Delta.\n    \"\"\"\n    \n    # Path integral frequency\n    omega_P = P / beta\n    \n    # The sum is over non-centroid modes, k from 1 to P-1\n    k_range = np.arange(1, P)\n    \n    # Arguments for the sine functions\n    arg_cut = k_range * np.pi / (2 * P)\n    arg_closed = k_range * np.pi / P\n    \n    # sin^2 terms, corresponding to the eigenvalues of the spring matrix\n    sin2_cut = np.sin(arg_cut)**2\n    sin2_closed = np.sin(arg_closed)**2\n    \n    # Denominators for the cut and closed chain expectation values\n    # Each denominator corresponds to the variance of a normal mode\n    omega2 = omega**2\n    const_spring = 4 * omega_P**2\n    \n    den_cut = omega2 + const_spring * sin2_cut\n    den_closed = omega2 + const_spring * sin2_closed\n    \n    # Terms inside the summation\n    terms = 1.0 / den_cut - 1.0 / den_closed\n    \n    # Complete summation over all non-centroid modes\n    total_sum = np.sum(terms)\n    \n    # Apply the prefactor to get the final Delta\n    delta = total_sum / (beta * m)\n    \n    return delta\n\n# Execute the main function\nsolve()\n```", "id": "2459908"}, {"introduction": "在探索了环状聚合物的根本性质之后，我们现在转向一个更实际的问题：如何应用PIMD来模拟像量子隧穿这样的复杂现象。本练习使用双阱势（一个研究隧穿效应的经典模型系统）来确定获得数值收敛的模拟结果所需的最少珠子数量 $P$。这项实践展示了如何将系统的物理特性（如势能面的形状）与精确PIMD计算所需的数值参数联系起来，这对于设计可靠的模拟至关重要 [@problem_id:2459887]。", "problem": "一个质量为 $m$ 的孤立量子原子核在一维空间 $x$ 中运动，其所处双势阱的势能由四次形式 $V(x) = a \\left(x^{2} - b^{2}\\right)^{2} + c x$ 描述，其中 $a$、$b$ 和 $c$ 是实数参数，$c$ 控制势阱的非对称性。考虑在温度 $T$ 下的正则配分函数，它由虚时 Feynman 路径积分表示，并离散化为 $P$ 个时间片（也称为珠子），正如在路径积分分子动力学 (PIMD) 中所使用的那样。在约化单位制下进行计算，其中约化普朗克常数 $\\hbar$、玻尔兹曼常数 $k_{\\mathrm{B}}$ 和质量 $m$ 均等于 $1$（即 $\\hbar = 1$，$k_{\\mathrm{B}} = 1$，$m = 1$），因此逆温度为 $\\beta = 1/T$，虚时间片为 $\\Delta \\tau = \\beta / P$。\n\n定义以下控制隧穿相关涨落分辨率的绝对曲率频率：\n- 从具有负曲率 $V''(x_{b}) < 0$ 的驻点 $x_{b}$ 获得的势垒顶点频率大小 $|\\omega_{b}|$，通过 $|\\omega_{b}| = \\sqrt{\\left|V''(x_{b})\\right|/m}$ 计算。\n- 从具有正曲率 $V''(x_{L}) > 0$ 和 $V''(x_{R}) > 0$ 的两个极小值点 $x_{L}$ 和 $x_{R}$ 获得的势阱频率 $\\omega_{L}$ 和 $\\omega_{R}$，通过 $\\omega_{L} = \\sqrt{V''(x_{L})/m}$ 和 $\\omega_{R} = \\sqrt{V''(x_{R})/m}$ 计算。\n\n对于给定的势能，其曲率为 $V''(x) = 12 a x^{2} - 4 a b^{2}$。驻点是 $V'(x) = 4 a x \\left(x^{2} - b^{2}\\right) + c = 0$ 的实数解。对于双势阱形状，必须恰好有三个实数驻点：两个极小值点和一个极大值点。\n\n为解析隧穿性质，对虚时离散化采用以下收敛判据：如果不等式\n$$\n\\Delta \\tau \\, \\max\\!\\left(\\omega_{L}, \\, \\omega_{R}, \\, |\\omega_{b}|\\right) \\le \\varepsilon\n$$\n成立，则认为最小正整数 $P$ 已足够，其中 $\\varepsilon > 0$ 是一个预设的无量纲容差。在约化单位制下，这等价于 $P \\ge \\beta \\, \\max\\!\\left(\\omega_{L}, \\, \\omega_{R}, \\, |\\omega_{b}|\\right) / \\varepsilon$。\n\n你的任务是编写一个完整的程序，对下方测试套件中的每一组参数，确定满足上述不等式的最小整数 $P$。所有量都应在指定的约化单位制下解释。每个测试用例的输出必须是单个整数。你的程序必须将所有测试用例的结果汇总到单行输出中，结果应为逗号分隔的列表，并用方括号括起来，不含空格。\n\n测试套件（每个元组为约化单位制下的 $(a, b, c, T, \\varepsilon)$）：\n- 案例1（对称，低温）：$(1.0, \\, 1.0, \\, 0.0, \\, 0.2, \\, 0.05)$\n- 案例2（非对称，小偏置）：$(1.0, \\, 1.0, \\, 0.5, \\, 0.2, \\, 0.05)$\n- 案例3（对称，高温）：$(1.0, \\, 1.0, \\, 0.0, \\, 100.0, \\, 0.1)$\n- 案例4（非对称，接近合并阈值）：$(1.0, \\, 1.0, \\, 1.5, \\, 1.0, \\, 0.1)$\n\n您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表，例如 $[P_{1},P_{2},P_{3},P_{4}]$。", "solution": "问题陈述已经过严格验证，并被确定为科学上合理、适定且客观。它在计算化学的背景下，特别是在路径积分分子动力学（PIMD）模拟的数值参数方面，提出了一个明确的任务。所有提供的数据和条件都是一致且足以推导出唯一、有意义的解。\n\n该问题要求确定质量为 $m=1$ 的量子粒子在一维势 $V(x) = a \\left(x^{2} - b^{2}\\right)^{2} + c x$ 中所需的路径积分珠子最小数量 $P$。这是非对称双势阱系统的典型模型。解决方案基于PIMD中常用的启发式收敛判据，该判据将虚时间步长 $\\Delta \\tau = \\beta / P$ 与势能面的特征频率联系起来。其中，$\\beta = 1/(k_{\\mathrm{B}}T)$ 是逆温度，我们在 $\\hbar=1$、$k_{\\mathrm{B}}=1$ 和 $m=1$ 的约化单位制下进行计算。\n\n所需的珠子数量 $P$ 必须是满足以下不等式的最小正整数：\n$$\n\\Delta \\tau \\, \\max\\!\\left(\\omega_{L}, \\, \\omega_{R}, \\, |\\omega_{b}|\\right) \\le \\varepsilon\n$$\n其中 $\\varepsilon$ 是给定的容差，$\\omega_{L}$、$\\omega_{R}$ 和 $|\\omega_{b}|$ 是与势能驻点相关的简谐频率。\n\n计算每组参数 $(a, b, c, T, \\varepsilon)$ 对应的 $P$ 的程序步骤如下：\n\n1.  **确定系统参数**：逆温度计算为 $\\beta = 1/T$。给定质量为 $m=1$。\n\n2.  **寻找驻点**：势能的驻点，对应于两个极小值点（$x_{L}$、$x_{R}$）和其间的势垒极大值点（$x_{b}$）的位置，是势能一阶导数 $V'(x) = 0$ 的实根。\n    $$\n    V'(x) = \\frac{d}{dx} \\left[ a \\left(x^{2} - b^{2}\\right)^{2} + c x \\right] = 4a x \\left(x^{2} - b^{2}\\right) + c = 0\n    $$\n    这可简化为三次多项式方程：\n    $$\n    4ax^3 - 4ab^2x + c = 0\n    $$\n    要存在双势阱，此方程必须有三个不同的实根。其条件是 $64a^2b^6 > 27c^2$，所有给定的测试用例均满足此条件。这些根将通过数值方法确定。\n\n3.  **计算曲率**：每个驻点 $x_s$ 的性质由该点势能二阶导数（曲率）的符号决定。\n    $$\n    V''(x) = \\frac{d^2}{dx^2} V(x) = 12ax^2 - 4ab^2\n    $$\n    -   极小值点（$x_L, x_R$）：$V''(x) > 0$。\n    -   极大值点（$x_b$）：$V''(x) < 0$。\n\n4.  **计算特征频率**：频率由这些曲率导出。当质量 $m=1$ 时，公式简化。\n    -   势阱频率为 $\\omega_{L} = \\sqrt{V''(x_L)}$ 和 $\\omega_{R} = \\sqrt{V''(x_R)}$。\n    -   势垒顶点的虚频率大小为 $|\\omega_b| = \\sqrt{|V''(x_b)|} = \\sqrt{-V''(x_b)}$。\n    这些频率定义了给定势能中量子动力学的基本时间尺度。\n\n5.  **确定最小珠子数（$P$）**：收敛判据可以重新整理，给出 $P$ 的下界：\n    $$\n    \\frac{\\beta}{P} \\max\\!\\left(\\omega_{L}, \\, \\omega_{R}, \\, |\\omega_{b}|\\right) \\le \\varepsilon \\implies P \\ge \\frac{\\beta}{\\varepsilon} \\max\\!\\left(\\omega_{L}, \\, \\omega_{R}, \\, |\\omega_{b}|\\right)\n    $$\n    设 $\\omega_{\\max} = \\max\\!\\left(\\omega_{L}, \\, \\omega_{R}, \\, |\\omega_{b}|\\right)$。满足此条件的最小正整数 $P$ 可通过上取整函数找到：\n    $$\n    P_{\\min} = \\left\\lceil \\frac{\\beta \\, \\omega_{\\max}}{\\varepsilon} \\right\\rceil\n    $$\n    对每个测试用例执行此计算，得出最终结果。\n\n这个系统性步骤将解析公式与数值求根相结合，以解决所述问题。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the minimum number of PIMD beads 'P' required to satisfy a\n    convergence criterion for a particle in a quartic double-well potential.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each tuple is (a, b, c, T, epsilon) in reduced units.\n    test_cases = [\n        (1.0, 1.0, 0.0, 0.2, 0.05),    # Case 1 (symmetric, low temperature)\n        (1.0, 1.0, 0.5, 0.2, 0.05),    # Case 2 (asymmetric, small bias)\n        (1.0, 1.0, 0.0, 100.0, 0.1),   # Case 3 (symmetric, high temperature)\n        (1.0, 1.0, 1.5, 1.0, 0.1),     # Case 4 (asymmetric, near coalescence)\n    ]\n\n    results = []\n    for case in test_cases:\n        a, b, c, T, epsilon = case\n\n        # Step 1: Calculate inverse temperature beta (k_B = 1)\n        beta = 1.0 / T\n\n        # Step 2: Find stationary points by solving V'(x) = 0.\n        # V'(x) = 4*a*x^3 - 4*a*b^2*x + c\n        # Coefficients for the cubic polynomial: p[0]x^3 + p[1]x^2 + p[2]x + p[3]\n        coeffs = [4.0 * a, 0.0, -4.0 * a * b**2, c]\n        stationary_points = np.roots(coeffs)\n\n        # The problem setup ensures three real roots. We take the real part to handle\n        # potential floating point inaccuracies from the numerical solver.\n        real_stationary_points = stationary_points.real\n\n        # Step 3 & 4: Calculate curvatures and characteristic frequencies.\n        # V''(x) = 12*a*x^2 - 4*a*b^2. Mass m=1.\n        curvatures = 12.0 * a * real_stationary_points**2 - 4.0 * a * b**2\n        \n        frequencies = []\n        for curvature in curvatures:\n            # For minima, curvature > 0.\n            if curvature > 0:\n                frequencies.append(np.sqrt(curvature))\n            # For the barrier top, curvature < 0.\n            else:\n                frequencies.append(np.sqrt(np.abs(curvature)))\n\n        # Find the maximum frequency among all stationary points.\n        omega_max = np.max(frequencies)\n\n        # Step 5: Determine the minimal integer P.\n        # P must be a positive integer.\n        P_min_float = (beta * omega_max) / epsilon\n        P_min = int(np.ceil(P_min_float))\n        \n        # In the edge case where the result is 0, the problem asks for the\n        # smallest *positive* integer, which would be 1. However, for the given\n        # test cases, all parameters are positive, guaranteeing P_min >= 1.\n        \n        results.append(P_min)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2459887"}]}