{"hands_on_practices": [{"introduction": "在计算材料科学中，准确计算晶体的总能量是预测其结构和稳定性的基石。然而，当我们使用有限的原子中心基组进行计算时，一个被称为“基组重叠误差”（Basis Set Superposition Error, BSSE）的计算假象常常会出现，它会导致对分子间相互作用能的高估。这个练习将带你亲手实践由Boys和Bernardi提出的“对位法校正”（Counterpoise correction），这是一种消除BSSE、获得更可靠的弱相互作用（如范德华力）能量的关键技术 [@problem_id:2452947]。", "problem": "您的任务是使用Counterpoise (CP) 校正法，计算面心立方氙晶体中每个原子的晶格能的基组重叠误差 (BSSE) 校正值。BSSE是量子化学中单电子基组不完备性的一个后果，当分子片段受益于彼此的基函数时，会导致对结合能的高估。对于作为周期性或团簇体系处理的晶体，可以通过比较在自身基组中计算的孤立原子能量与在模拟局部晶体环境的鬼基函数存在下计算的同一原子能量，来定义每个原子的BSSE。将每个原子的晶格能定义为 $U_{\\mathrm{latt}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{mono})}$，其中 $E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})}$ 是计算出的晶体中每个原子的总能量，$E_{\\mathrm{atom}}^{(\\mathrm{mono})}$ 是在相同单体基组中孤立原子的能量。将每个原子的BSSE定义为 $\\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})}$，其中 $E_{\\mathrm{atom}}^{(\\mathrm{ghost})}$ 是在位于邻近原子位置的鬼基函数存在下计算的孤立原子的能量。经Counterpoise校正的每个原子的晶格能为 $U_{\\mathrm{CP}} = U_{\\mathrm{latt}} + \\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})}$。所有能量都按每个原子计算。\n\n请针对以下每个测试用例，计算每个原子的BSSE $\\Delta_{\\mathrm{BSSE}}$ 和经Counterpoise校正的每个原子的晶格能 $U_{\\mathrm{CP}}$。所有答案以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位，并四舍五入到三位小数。\n\n测试用例（所有值均为每个原子的能量，单位为 $\\mathrm{kJ\\,mol^{-1}}$）：\n- 用例 A（粗糙基组）：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -15.0$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -2.5$。\n- 用例 B（改进的基组）：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -13.2$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -0.6$。\n- 用例 C（近完备基组）：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -12.8$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.0$。\n- 用例 D（数值边界情况）：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -12.0$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.05$。\n\n您的程序应生成单行输出，其中包含一个逗号分隔的数对列表形式的结果，每个数对的格式为 $[\\Delta_{\\mathrm{BSSE}},U_{\\mathrm{CP}}]$，且整个列表用方括号括起来。例如，输出格式必须类似于 $[[x_1,y_1],[x_2,y_2],[x_3,y_3],[x_4,y_4]]$，其中每个 $x_i$ 和 $y_i$ 均以 $\\mathrm{kJ\\,mol^{-1}}$ 为单位，并四舍五入到三位小数，输出中不出现单位或其他附加文本。", "solution": "该问题是关于在基组重叠误差（BSSE）计算中直接应用对位法（Counterpoise, CP）校正，这是计算量子化学中的一个明确定义的标准程序。问题的前提合理，所有需要的数据均已提供，我们将着手进行分析。\n\n目标是计算在不同计算条件下（即不同基组），氙晶体中每个原子的BSSE（记为 $\\Delta_{\\mathrm{BSSE}}$）和经过对位法校正的晶格能（记为 $U_{\\mathrm{CP}}$）。\n\n提供的基本定义如下：\n每个原子的未校正晶格能 $U_{\\mathrm{latt}}$ 定义为周期性晶体计算得到的每个原子的总能量 $E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})}$ 与在自身基组中计算的孤立原子能量（单体计算）$E_{\\mathrm{atom}}^{(\\mathrm{mono})}$ 之差。\n$$U_{\\mathrm{latt}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{mono})}$$\n按照惯例，孤立单体的能量通常被设为参考能量，因此 $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0$。\n\nBSSE源于使用不完备（有限）的单电子基组。在晶体或二聚体计算中，一个原子可以“借用”相邻原子的基函数来降低其能量，这是一种人为效应，会产生非物理性的稳定化，从而导致对结合能的高估。此误差的大小即为BSSE。\n\n每个原子的BSSE $\\Delta_{\\mathrm{BSSE}}$ 是通过计算单个原子在“鬼”基函数（即基函数中心位于相邻原子位置，但没有相应的原子核或电子）存在时的能量来量化的。该能量记为 $E_{\\mathrm{atom}}^{(\\mathrm{ghost})}$。BSSE即为能量差：\n$$\\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})}$$\n由于鬼基函数计算提供了更大的变分灵活性，通常有 $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} \\le E_{\\mathrm{atom}}^{(\\mathrm{mono})}$，这使得 $\\Delta_{\\mathrm{BSSE}} \\ge 0$。正值表示人为稳定化的程度。$\\Delta_{\\mathrm{BSSE}} \\approx 0$ 的值表示基组接近完备，误差可以忽略不计。负的 $\\Delta_{\\mathrm{BSSE}}$ 在物理上是不合理的，但可能由数值噪音或计算方案中的不一致性引起。\n\n经对位法校正的晶格能 $U_{\\mathrm{CP}}$ 是通过将BSSE加到未校正的晶格能上得到的：\n$$U_{\\mathrm{CP}} = U_{\\mathrm{latt}} + \\Delta_{\\mathrm{BSSE}}$$\n代入 $U_{\\mathrm{latt}}$ 和 $\\Delta_{\\mathrm{BSSE}}$ 的定义，得到一个更直接的公式：\n$$U_{\\mathrm{CP}} = (E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{mono})}) + (E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})}) = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})}$$\n这个校正后的能量通过抵消晶体计算和鬼基函数计算中同时存在的人为稳定化，代表了更具物理意义的晶格能。\n\n现在我们将这些公式应用于所提供的四个用例。所有能量单位均为 $\\mathrm{kJ\\,mol^{-1}}$。\n\n**用例 A（粗糙基组）：**\n给定：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -15.0$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -2.5$。\n1. 计算 $\\Delta_{\\mathrm{BSSE}}$:\n$$\\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.0 - (-2.5) = 2.5 \\, \\mathrm{kJ\\,mol^{-1}}$$\n2. 计算 $U_{\\mathrm{CP}}$:\n$$U_{\\mathrm{CP}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -15.0 - (-2.5) = -12.5 \\, \\mathrm{kJ\\,mol^{-1}}$$\n结果对为 $[2.500, -12.500]$。\n\n**用例 B（改进的基组）：**\n给定：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -13.2$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -0.6$。\n1. 计算 $\\Delta_{\\mathrm{BSSE}}$:\n$$\\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.0 - (-0.6) = 0.6 \\, \\mathrm{kJ\\,mol^{-1}}$$\n2. 计算 $U_{\\mathrm{CP}}$:\n$$U_{\\mathrm{CP}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -13.2 - (-0.6) = -12.6 \\, \\mathrm{kJ\\,mol^{-1}}$$\n结果对为 $[0.600, -12.600]$。\n\n**用例 C（近完备基组）：**\n给定：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -12.8$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.0$。\n1. 计算 $\\Delta_{\\mathrm{BSSE}}$:\n$$\\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.0 - 0.0 = 0.0 \\, \\mathrm{kJ\\,mol^{-1}}$$\n2. 计算 $U_{\\mathrm{CP}}$:\n$$U_{\\mathrm{CP}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -12.8 - 0.0 = -12.8 \\, \\mathrm{kJ\\,mol^{-1}}$$\n结果对为 $[0.000, -12.800]$。\n\n**用例 D（数值边界情况）：**\n给定：$E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} = -12.0$, $E_{\\mathrm{atom}}^{(\\mathrm{mono})} = 0.0$, $E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.05$。\n1. 计算 $\\Delta_{\\mathrm{BSSE}}$:\n$$\\Delta_{\\mathrm{BSSE}} = E_{\\mathrm{atom}}^{(\\mathrm{mono})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = 0.0 - 0.05 = -0.05 \\, \\mathrm{kJ\\,mol^{-1}}$$\n2. 计算 $U_{\\mathrm{CP}}$:\n$$U_{\\mathrm{CP}} = E_{\\mathrm{cryst}}^{(\\mathrm{per\\,atom})} - E_{\\mathrm{atom}}^{(\\mathrm{ghost})} = -12.0 - 0.05 = -12.05 \\, \\mathrm{kJ\\,mol^{-1}}$$\n结果对为 $[-0.050, -12.050]$。\n\n计算已完成。结果展示了预期的趋势：随着基组质量从粗糙（用例 A）提高到近完备（用例 C），BSSE的大小显著减小，校正后的晶格能趋于收敛。用例 D 代表了一种情景，其中数值噪音或计算设置中的轻微不一致性导致鬼基函数计算出现一个小的、非物理的正能量，从而产生负的BSSE。这是在实际计算中可能遇到的一个实际伪影。以下程序将把此分析编写为代码。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the Basis Set Superposition Error (BSSE) per atom and the\n    Counterpoise-corrected lattice energy per atom for given test cases.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each tuple contains (E_cryst_per_atom, E_atom_mono, E_atom_ghost) in kJ/mol.\n    test_cases = [\n        # Case A (coarse basis)\n        (-15.0, 0.0, -2.5),\n        # Case B (improved basis)\n        (-13.2, 0.0, -0.6),\n        # Case C (near-complete basis)\n        (-12.8, 0.0, 0.0),\n        # Case D (numerical edge)\n        (-12.0, 0.0, 0.05),\n    ]\n\n    results = []\n    for case in test_cases:\n        e_cryst_per_atom, e_atom_mono, e_atom_ghost = case\n\n        # Calculate BSSE per atom (delta_BSSE).\n        # delta_BSSE = E_atom^(mono) - E_atom^(ghost)\n        delta_bsse = e_atom_mono - e_atom_ghost\n\n        # Calculate Counterpoise-corrected lattice energy per atom (U_CP).\n        # U_CP = E_cryst^(per atom) - E_atom^(ghost)\n        u_cp = e_cryst_per_atom - e_atom_ghost\n\n        # Round results to three decimal places.\n        # Note: The problem requires a specific string format for the final output, not a list of floats.\n        # Storing the pair of floats for later formatting.\n        results.append((delta_bsse, u_cp))\n\n    # Format the final output string as required: [[x1,y1],[x2,y2],...]\n    # Each number must be formatted to three decimal places.\n    output_pairs = []\n    for delta, u in results:\n        # Format each pair as a string \"[delta_val,u_val]\"\n        pair_str = f\"[{delta:.3f},{u:.3f}]\"\n        output_pairs.append(pair_str)\n\n    # Join the pairs with commas and enclose in brackets.\n    final_output_str = f\"[{','.join(output_pairs)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output_str)\n\nsolve()\n```", "id": "2452947"}, {"introduction": "掌握了精确的能量计算方法后，我们便可以应对晶体结构预测中的一个核心问题：多晶型现象（polymorphism）。同一种分子可以形成多种不同的晶体结构，它们能量相近但性质迥异，而环境因素（如溶剂）往往是决定哪种晶型更稳定的关键。通过这个练习，你将构建一个包含库仑和Lennard-Jones相互作用的简化能量模型，来定量探究溶剂效应对甘氨酸多晶型相对稳定性的影响 [@problem_id:2452959]。", "problem": "您将模拟一个显式的水分子壳层如何相对于使用简单的、成对相加的分子间势进行的气相计算，改变了预测的甘氨酸稳定晶型。目标是，在一小组测试条件下，确定当包含一个显式的、固定的水分子壳层时，哪种甘氨酸晶型被预测为最稳定。您的程序必须计算每个晶型中每个甘氨酸分子的总能量，该总能量是一个给定的气相晶格能和一个显式溶剂相互作用能之和，然后选择总能量最低的晶型。\n\n假设和物理模型：\n- 从对相互作用的叠加原理和两种经过充分测试的对势出发：\n  1. 用于部分电荷的 Coulomb 定律：在相对介电常数为 $\\varepsilon_r$ 的介质中，相距 $r$ 的两个电荷量分别为 $q_i$ 和 $q_j$ 的位点之间的对能量为\n  $$E_{\\mathrm{C}}(r) = k_{\\mathrm{e}} \\frac{q_i q_j}{\\varepsilon_r r},$$\n  其中 $k_{\\mathrm{e}} = 138.935456$，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}\\,e^{-2}$，电荷单位为基本电荷 $e$，距离单位为 $\\mathrm{nm}$。\n  2. 用于甘氨酸位点和水氧位点之间 van der Waals 相互作用的 Lennard–Jones (LJ) $12$–$6$ 势：\n  $$E_{\\mathrm{LJ}}(r) = 4 \\varepsilon_{ij} \\left[\\left(\\frac{\\sigma_{ij}}{r}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{r}\\right)^6\\right],$$\n  混合规则采用 Lorentz–Berthelot 规则 $\\sigma_{ij} = \\frac{\\sigma_i + \\sigma_j}{2}$ 和 $\\varepsilon_{ij} = \\sqrt{\\varepsilon_i \\varepsilon_j}$。只包括甘氨酸-水氧的 LJ 相互作用；氢原子不携带 Lennard–Jones 参数。\n\n- 每个甘氨酸分子由三个相互作用位点表示：铵基（$\\mathrm{NH_3^+}$）、亚甲基（$\\mathrm{CH_2}$）和羧酸根（$\\mathrm{COO^-}$）。甘氨酸位点的部分电荷和 Lennard–Jones 参数如下：\n  - 电荷：$q_{\\mathrm{NH3}} = +0.4$，$q_{\\mathrm{CH2}} = 0.0$，$q_{\\mathrm{COO}} = -0.4$ (单位为 $e$)。\n  - Lennard–Jones 参数（按位点）：$\\sigma_{\\mathrm{NH3}} = 0.325$，$\\sigma_{\\mathrm{CH2}} = 0.340$，$\\sigma_{\\mathrm{COO}} = 0.300$ (单位均为 $\\mathrm{nm}$)，以及 $\\varepsilon_{\\mathrm{NH3}} = 0.1$，$\\varepsilon_{\\mathrm{CH2}} = 0.1$，$\\varepsilon_{\\mathrm{COO}} = 0.1$ (单位均为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$)。\n\n- 水分子被建模为刚性的三位点粒子，其氧原子和两个氢原子上带有部分电荷。使用以下水分子位点参数：\n  - 电荷：$q_{\\mathrm{O}} = -0.834$，$q_{\\mathrm{H}} = +0.417$ (单位为 $e$)。\n  - 仅氧原子的 Lennard–Jones 参数：$\\sigma_{\\mathrm{O}} = 0.315075$ 和 $\\varepsilon_{\\mathrm{O}} = 0.636386$ (单位为 $\\mathrm{nm}$ 和 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$)。氢原子不携带 Lennard–Jones 参数。\n  - 包括所有甘氨酸-水位点对（甘氨酸位点与水氧原子和氢原子）的 Coulomb 相互作用。仅包括甘氨酸位点与水氧原子之间的 Lennard–Jones 相互作用。\n\n- 晶型 $P$ 中每个甘氨酸分子的总能量为\n  $$E_{\\mathrm{tot}}^{(P)} = E_{\\mathrm{latt}}^{(P)} + \\sum_{w=1}^{N_{\\mathrm{w}}}\\left[\\sum_{i \\in \\{\\mathrm{NH3, CH2, COO}\\}} \\left(E_{\\mathrm{C}}(r_{i,\\mathrm{O}}^{(P,w)}) + E_{\\mathrm{LJ}}(r_{i,\\mathrm{O}}^{(P,w)}) + E_{\\mathrm{C}}(r_{i,\\mathrm{H1}}^{(P,w)}) + E_{\\mathrm{C}}(r_{i,\\mathrm{H2}}^{(P,w)})\\right)\\right],$$\n  其中 $E_{\\mathrm{latt}}^{(P)}$ 是为晶型 $P$ 提供的每个分子的气相晶格能，$N_{\\mathrm{w}}$ 是水分子数，$r_{i,s}^{(P,w)}$ 是为晶型 $P$ 中水分子 $w$ 提供的从甘氨酸位点 $i$ 到水位点 $s \\in \\{\\mathrm{O}, \\mathrm{H1}, \\mathrm{H2}\\}$ 的固定距离，单位为 $\\mathrm{nm}$。角度没有出现，也不需要。所有能量均以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 表示。\n\n提供的数据：\n- 晶型标签及与索引的映射：$\\mathrm{alpha} \\rightarrow 0$，$\\mathrm{beta} \\rightarrow 1$，$\\mathrm{gamma} \\rightarrow 2$。\n\n- 每个甘氨酸分子的气相晶格能：\n  - $E_{\\mathrm{latt}}^{(\\mathrm{alpha})} = -95.0$,\n  - $E_{\\mathrm{latt}}^{(\\mathrm{beta})} = -92.0$,\n  - $E_{\\mathrm{latt}}^{(\\mathrm{gamma})} = -97.0$ (单位均为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$)。\n\n- 每个晶型中从甘氨酸位点到水位点的距离。距离是针对单个水分子的，并且对于壳层中的每个水分子都是相同的。距离按 $[\\mathrm{NH3}, \\mathrm{CH2}, \\mathrm{COO}]$ 的顺序列出。\n  - 对于 $\\mathrm{alpha}$：\n    - $r_{\\mathrm{O}}^{(\\mathrm{alpha})} = [0.30, 0.45, 0.50]$,\n    - $r_{\\mathrm{H1}}^{(\\mathrm{alpha})} = [0.60, 0.60, 0.31]$,\n    - $r_{\\mathrm{H2}}^{(\\mathrm{alpha})} = [0.60, 0.60, 0.33]$.\n  - 对于 $\\mathrm{beta}$：\n    - $r_{\\mathrm{O}}^{(\\mathrm{beta})} = [0.34, 0.45, 0.50]$,\n    - $r_{\\mathrm{H1}}^{(\\mathrm{beta})} = [0.60, 0.60, 0.36]$,\n    - $r_{\\mathrm{H2}}^{(\\mathrm{beta})} = [0.60, 0.60, 0.38]$.\n  - 对于 $\\mathrm{gamma}$：\n    - $r_{\\mathrm{O}}^{(\\mathrm{gamma})} = [0.33, 0.45, 0.50]$,\n    - $r_{\\mathrm{H1}}^{(\\mathrm{gamma})} = [0.60, 0.60, 0.35]$,\n    - $r_{\\mathrm{H2}}^{(\\mathrm{gamma})} = [0.60, 0.60, 0.37]$.\n\n- 相对介电常数 $\\varepsilon_r$ 是一个参数，它统一缩放 Coulomb 相互作用以测试屏蔽效应。Lennard–Jones 相互作用不受 $\\varepsilon_r$ 缩放。\n\n任务：\n- 实现一个程序，对于以下每个测试用例，使用上述定义计算 $P \\in \\{\\mathrm{alpha}, \\mathrm{beta}, \\mathrm{gamma}\\}$ 的 $E_{\\mathrm{tot}}^{(P)}$，然后返回具有最低能量的晶型的索引。\n\n测试套件：\n- 用例 $1$：$N_{\\mathrm{w}} = 0$，$\\varepsilon_r = 1.0$。\n- 用例 $2$：$N_{\\mathrm{w}} = 2$，$\\varepsilon_r = 20.0$。\n- 用例 $3$：$N_{\\mathrm{w}} = 4$，$\\varepsilon_r = 20.0$。\n- 用例 $4$：$N_{\\mathrm{w}} = 4$，$\\varepsilon_r = 80.0$。\n\n答案规格：\n- 最终输出必须为单行，按顺序包含用例 $1$ 到 $4$ 的预测稳定晶型索引，使用映射 $\\mathrm{alpha} \\rightarrow 0$，$\\mathrm{beta} \\rightarrow 1$，$\\mathrm{gamma} \\rightarrow 2$ 编码为整数。\n- 最终输出格式：单行，用方括号括起的逗号分隔列表，例如 $[x_1,x_2,x_3,x_4]$，其中每个 $x_i$ 都是整数。\n- 不得打印任何其他文本。\n\n所有距离必须以 $\\mathrm{nm}$ 为单位处理，所有能量以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 为单位，不使用角度。程序必须是自包含的，且不得读取任何输入。", "solution": "本问题要求通过计算确定在特定条件下甘氨酸的最稳定晶型。该问题设定清晰，物理模型（库仑和伦纳德-琼斯势）和所有参数均已明确给出。我们将根据这些定义来推导解决方案。\n\n**解题逻辑**\n\n问题的核心是为每种晶型 $P \\in \\{\\text{alpha}, \\text{beta}, \\text{gamma}\\}$ 计算其总能量 $E_{\\mathrm{tot}}^{(P)}$，然后找出能量最低的晶型。\n\n总能量由两部分组成：气相晶格能 $E_{\\mathrm{latt}}^{(P)}$ 和溶剂化能 $E_{\\mathrm{solv}}^{(P)}$。\n$$E_{\\mathrm{tot}}^{(P)} = E_{\\mathrm{latt}}^{(P)} + E_{\\mathrm{solv}}^{(P)}$$\n\n溶剂化能是甘氨酸分子与 $N_{\\mathrm{w}}$ 个水分子相互作用的总能量。由于每个水分子的相互作用被假定为相同的，因此溶剂化能等于单个水分子的相互作用能 $E_{\\mathrm{int},1w}^{(P)}$ 乘以水分子数 $N_{\\mathrm{w}}$。\n$$E_{\\mathrm{solv}}^{(P)} = N_{\\mathrm{w}} \\times E_{\\mathrm{int},1w}^{(P)}$$\n如果 $N_{\\mathrm{w}}=0$，则溶剂化能为零。\n\n单个水分子的相互作用能 $E_{\\mathrm{int},1w}^{(P)}$ 是甘氨酸的三个位点与水分子三个位点之间所有成对相互作用的总和。这些相互作用包括库仑作用和伦纳德-琼斯（LJ）作用。根据问题描述，完整的表达式为：\n$$E_{\\mathrm{int},1w}^{(P)} = \\sum_{i \\in \\text{甘氨酸位点}} \\left[ \\left( E_{\\mathrm{C}}(r_{i,\\mathrm{O}}^{(P)}) + E_{\\mathrm{LJ}}(r_{i,\\mathrm{O}}^{(P)}) \\right) + E_{\\mathrm{C}}(r_{i,\\mathrm{H1}}^{(P)}) + E_{\\mathrm{C}}(r_{i,\\mathrm{H2}}^{(P)}) \\right]$$\n其中，LJ相互作用仅存在于甘氨酸位点和水分子氧原子之间。\n\n**计算步骤**\n\n对于每个测试用例（给定的 $N_{\\mathrm{w}}$ 和 $\\varepsilon_r$）：\n1.  对每一种晶型 $P \\in \\{\\text{alpha}, \\text{beta}, \\text{gamma}\\}$ 执行以下计算：\n    a.  获取该晶型的气相晶格能 $E_{\\mathrm{latt}}^{(P)}$。\n    b.  如果 $N_{\\mathrm{w}} > 0$，计算单个水分子的相互作用能 $E_{\\mathrm{int},1w}^{(P)}$。这需要：\n        i.   对甘氨酸的每个位点 $i$ 和水的每个位点 $s$，使用给定的距离 $r_{i,s}^{(P)}$、电荷 $q_i, q_s$ 和介电常数 $\\varepsilon_r$ 计算库仑能。\n        ii.  对甘氨酸的每个位点 $i$ 和水的氧原子，使用混合后的LJ参数 $\\sigma_{ij}, \\varepsilon_{ij}$ 和距离 $r_{i,\\mathrm{O}}^{(P)}$ 计算LJ能量。\n        iii. 将所有这些能量项相加得到 $E_{\\mathrm{int},1w}^{(P)}$。\n    c.  计算总能量 $E_{\\mathrm{tot}}^{(P)} = E_{\\mathrm{latt}}^{(P)} + N_{\\mathrm{w}} \\times E_{\\mathrm{int},1w}^{(P)}$。\n2.  比较三种晶型的总能量 $E_{\\mathrm{tot}}^{(\\text{alpha})}, E_{\\mathrm{tot}}^{(\\text{beta})}, E_{\\mathrm{tot}}^{(\\text{gamma})}$。\n3.  找出能量最低的晶型，并记录其对应的索引（alpha: 0, beta: 1, gamma: 2）。\n\n**特殊情况分析：用例 1**\n在用例1中，$N_{\\mathrm{w}} = 0$，因此溶剂化能为零，$E_{\\mathrm{tot}}^{(P)} = E_{\\mathrm{latt}}^{(P)}$。我们只需比较气相晶格能：\n-   $E_{\\mathrm{latt}}^{(\\mathrm{alpha})} = -95.0 \\ \\mathrm{kJ/mol}$\n-   $E_{\\mathrm{latt}}^{(\\mathrm{beta})} = -92.0 \\ \\mathrm{kJ/mol}$\n-   $E_{\\mathrm{latt}}^{(\\mathrm{gamma})} = -97.0 \\ \\mathrm{kJ/mol}$\n能量最低的是gamma晶型（$-97.0$），其索引为 2。因此，用例1的结果是 2。\n\n对于其他用例，溶剂化能的贡献会改变晶型的相对稳定性，必须通过完整的计算来确定。提供的Python代码将精确执行上述计算步骤。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the stable polymorph of glycine under different solvation conditions.\n    \"\"\"\n\n    # --- Givens from the problem statement ---\n\n    # Physical constants\n    K_E = 138.935456  # kJ/mol * nm / e^2\n\n    # Glycine parameters\n    GLYCINE_SITES = ['NH3', 'CH2', 'COO']\n    GLYCINE_CHARGES = {'NH3': 0.4, 'CH2': 0.0, 'COO': -0.4}  # in e\n    GLYCINE_SIGMA = {'NH3': 0.325, 'CH2': 0.340, 'COO': 0.300} # in nm\n    GLYCINE_EPSILON = {'NH3': 0.1, 'CH2': 0.1, 'COO': 0.1}   # in kJ/mol\n\n    # Water parameters\n    WATER_SITES = ['O', 'H1', 'H2']\n    WATER_CHARGES = {'O': -0.834, 'H1': 0.417, 'H2': 0.417} # in e\n    WATER_SIGMA = {'O': 0.315075}   # in nm\n    WATER_EPSILON = {'O': 0.636386} # in kJ/mol\n\n    # Polymorph-specific data\n    POLYMORPHS = ['alpha', 'beta', 'gamma']\n    POLYMORPH_INDICES = {name: i for i, name in enumerate(POLYMORPHS)}\n    \n    LATTICE_ENERGIES = { # in kJ/mol\n        'alpha': -95.0,\n        'beta': -92.0,\n        'gamma': -97.0,\n    }\n\n    DISTANCES = { # in nm\n        'alpha': {\n            'O':  np.array([0.30, 0.45, 0.50]), # NH3, CH2, COO\n            'H1': np.array([0.60, 0.60, 0.31]),\n            'H2': np.array([0.60, 0.60, 0.33]),\n        },\n        'beta': {\n            'O':  np.array([0.34, 0.45, 0.50]),\n            'H1': np.array([0.60, 0.60, 0.36]),\n            'H2': np.array([0.60, 0.60, 0.38]),\n        },\n        'gamma': {\n            'O':  np.array([0.33, 0.45, 0.50]),\n            'H1': np.array([0.60, 0.60, 0.35]),\n            'H2': np.array([0.60, 0.60, 0.37]),\n        },\n    }\n\n    # Test suite\n    test_cases = [\n        (0, 1.0),   # Case 1: N_w, epsilon_r\n        (2, 20.0),  # Case 2\n        (4, 20.0),  # Case 3\n        (4, 80.0),  # Case 4\n    ]\n\n    # --- Energy calculation functions ---\n\n    def coulomb_energy(q_i, q_j, r, epsilon_r):\n        return K_E * q_i * q_j / (epsilon_r * r)\n\n    def lj_energy(sigma_ij, epsilon_ij, r):\n        if r == 0:\n            return np.inf\n        s_over_r = sigma_ij / r\n        s_over_r_6 = s_over_r ** 6\n        s_over_r_12 = s_over_r_6 ** 2\n        return 4 * epsilon_ij * (s_over_r_12 - s_over_r_6)\n\n    # --- Pre-calculate mixed LJ parameters ---\n    \n    mixed_lj_params = {}\n    for gly_site in GLYCINE_SITES:\n        sigma_i = GLYCINE_SIGMA[gly_site]\n        epsilon_i = GLYCINE_EPSILON[gly_site]\n        \n        sigma_j = WATER_SIGMA['O']\n        epsilon_j = WATER_EPSILON['O']\n\n        # Lorentz-Berthelot mixing rules\n        sigma_ij = (sigma_i + sigma_j) / 2\n        epsilon_ij = np.sqrt(epsilon_i * epsilon_j)\n        \n        mixed_lj_params[gly_site] = {'sigma': sigma_ij, 'epsilon': epsilon_ij}\n\n    # --- Main calculation loop ---\n\n    results = []\n    for n_w, epsilon_r in test_cases:\n        total_energies = []\n        for poly in POLYMORPHS:\n            \n            # Start with gas-phase lattice energy\n            e_total = LATTICE_ENERGIES[poly]\n            \n            if n_w > 0:\n                e_solv_1w = 0.0 # Interaction energy for one water molecule\n                \n                # Iterate over 3 glycine sites\n                for i, gly_site in enumerate(GLYCINE_SITES):\n                    q_gly = GLYCINE_CHARGES[gly_site]\n                    \n                    # Interaction with water Oxygen\n                    r_o = DISTANCES[poly]['O'][i]\n                    e_solv_1w += coulomb_energy(q_gly, WATER_CHARGES['O'], r_o, epsilon_r)\n                    lj_params = mixed_lj_params[gly_site]\n                    e_solv_1w += lj_energy(lj_params['sigma'], lj_params['epsilon'], r_o)\n                    \n                    # Interaction with water H1\n                    r_h1 = DISTANCES[poly]['H1'][i]\n                    e_solv_1w += coulomb_energy(q_gly, WATER_CHARGES['H1'], r_h1, epsilon_r)\n                    \n                    # Interaction with water H2\n                    r_h2 = DISTANCES[poly]['H2'][i]\n                    e_solv_1w += coulomb_energy(q_gly, WATER_CHARGES['H2'], r_h2, epsilon_r)\n\n                # Total energy is lattice + N_w * single water interaction\n                e_total += n_w * e_solv_1w\n            \n            total_energies.append(e_total)\n            \n        # Find the index of the polymorph with the lowest energy\n        stable_polymorph_index = np.argmin(total_energies)\n        results.append(stable_polymorph_index)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2452959"}, {"introduction": "成功预测出一种稳定的晶体结构仅仅是研究的开始，更深层次的理解来自于揭示其内部的化学成键奥秘。电子局域函数（Electron Localization Function, ELF）是一种强大的计算分析工具，它能将复杂的电子密度分布转化为直观的化学图像，如共价键和孤对电子。在此实践中，你将扮演一位计算科学家的角色，学习如何解读ELF数据，以阐明在高压下预测出的新型氮聚合物链中的成键模式 [@problem_id:2452998]。", "problem": "一项第一性原理密度泛函理论计算预测，在 $80 \\ \\text{GPa}$ 压力下，元素氮存在一个由无限聚合物链构成的高压相。在弛豫结构中，每个氮原子在同一链内有 $3$ 个最近邻，N-N 距离分别为 $1.38 \\ \\text{\\AA}$、$1.41 \\ \\text{\\AA}$ 和 $1.44 \\ \\text{\\AA}$，而最短的链间 N-N 距离为 $2.50 \\ \\text{\\AA}$。电子局域函数 ($\\mathrm{ELF}$) 是在稠密的实空间网格上计算得到的，其定义域为 $[0,1]$，接近 $1$ 的值表示强的同自旋电子对局域化，接近 $0.5$ 的值是均匀电子气的特征。观察到以下特征：\n- 沿着每个链内最近邻 N-N 连接，$\\mathrm{ELF}$ 在中点附近呈现一个双突触极大值，峰值范围在 $0.78$–$0.82$。\n- 在每个氮核周围，有一个显著的非成键局域化盆，其 $\\mathrm{ELF} \\approx 0.88$，大致朝向链的局部三配位环境的外部。\n- 在沿链的次近邻位置之间以及链间空隙中，$\\mathrm{ELF}$ 保持在 $0.50$ 以下，并且没有显示出连接超过 $2$ 个核的连续高 $\\mathrm{ELF}$ 丝状结构。\n\n哪种成键描述与这些观察结果最一致？\n\nA. 每个链内形成共价单键网络，其中每个氮原子与其链内近邻形成 $3$ 个局域化的双中心 $\\sigma$ 键，并保留 $1$ 个孤对电子。\n\nB. 链上多重键交替（单键-三键模式），孤对电子局域化受到抑制，且以键为中心的 $\\mathrm{ELF}$ 峰值显著增强，超过 $0.95$。\n\nC. 一种金属性链，电子沿着主链离域，在整个链内区域产生接近均匀的 $\\mathrm{ELF} \\approx 0.50$ 和连续的高 $\\mathrm{ELF}$ 丝状结构。\n\nD. 交替的氮位点之间主要为离子键，电荷转移导致以阴离子为中心的高 $\\mathrm{ELF}$ 盆和以阳离子为中心的耗尽区，且以键为中心的 $\\mathrm{ELF}$ 可以忽略不计。", "solution": "要确定最符合观察结果的成键描述，我们需要系统地分析所提供的电子局域函数（ELF）数据，并将其与各种化学成键模型的特征进行比较。一个氮原子有5个价电子。\n\n**成键模型推导**\n\n1.  **共价键的证据：** 问题描述指出，在每个链内最近邻 N-N 对之间，存在一个“双突触极大值”，其 ELF 值在 0.78–0.82 之间。在ELF的拓扑分析中，连接两个原子核的区域（盆）被称为双突触盆，这是共价键的明确标志。每个氮原子有三个这样的近邻，意味着每个氮原子参与形成三个共价键。\n\n2.  **孤对电子的证据：** 在“每个氮核周围”都有一个“显著的非成键局域化盆”，其 ELF 值高达 0.88。仅与一个原子核关联的盆被称为单突触盆或非成键盆，这是孤对电子的典型特征。其高 ELF 值表明电子对高度局域。\n\n3.  **价电子计数：** 根据以上两点，每个氮原子形成 3 个共价键（每个键贡献1个电子，共3个电子）并拥有 1 个孤对电子（2个电子）。每个氮原子参与成键的总价电子数为 $3 + 2 = 5$，这与氮原子的价电子数完全吻合。这构成了一个自洽的类路易斯结构。\n\n4.  **键级分析：** 链内的 N-N 距离（$1.38 \\ \\text{\\AA}$、$1.41 \\ \\text{\\AA}$、$1.44 \\ \\text{\\AA}$）彼此非常接近，并且都略短于典型的 N-N 单键键长（约 $1.47 \\ \\text{\\AA}$）。在高压下键长被压缩是预料之中的。这些相似的键长不支持存在显著的键级交替（例如单键和三键）。因此，成键模式应为三个单键。\n\n5.  **排除其他模型：**\n    *   **金属性：** 链间区域和次近邻原子之间的 ELF 值低于 0.5，且没有观察到离域电子气的特征（即大片区域的 ELF 接近 0.5），这排除了金属性成键。\n    *   **离子性：** 这是一个同核元素的体系，不太可能形成主导的离子键。此外，ELF 数据显示每个氮原子都有相似的电子环境（三个键和一个孤对电子），而不是交替的阳离子和阴离子位点。\n\n**结论：** 所有证据都指向一个成键模型：聚合物链中的每个氮原子都通过三个共价单键与其邻居连接，并且每个氮原子上还有一个孤对电子。\n\n**选项分析**\n\n*   **A. 每个链内形成共价单键网络，其中每个氮原子与其链内近邻形成 $3$ 个局域化的双中心 $\\sigma$ 键，并保留 $1$ 个孤对电子。**\n    这个描述与我们的推导完全一致。“3个局域化的双中心 $\\sigma$ 键”对应于观察到的三个双突触ELF盆，“保留1个孤对电子”对应于非成键ELF盆。价电子计数和键长分析也支持该模型。**因此，这是正确的选项。**\n\n*   **B. 链上多重键交替（单键-三键模式），孤对电子局域化受到抑制，且以键为中心的 $\\mathrm{ELF}$ 峰值显著增强，超过 $0.95$。**\n    这个描述与观察结果有多处矛盾。首先，键长数据不支持单键-三键交替。其次，观察到了显著的孤对电子盆，与“受到抑制”相反。最后，观察到的键中心ELF峰值（0.78–0.82）远低于0.95。\n\n*   **C. 一种金属性链，电子沿着主链离域，在整个链内区域产生接近均匀的 $\\mathrm{ELF} \\approx 0.50$ 和连续的高 $\\mathrm{ELF}$ 丝状结构。**\n    这与观察结果直接冲突。数据显示了高度局域化的区域（ELF 高达 0.88），并且明确指出不存在“连续的高ELF丝状结构”。\n\n*   **D. 交替的氮位点之间主要为离子键，电荷转移导致以阴离子为中心的高 $\\mathrm{ELF}$ 盆和以阳离子为中心的耗尽区，且以键为中心的 $\\mathrm{ELF}$ 可以忽略不计。**\n    这与观察结果不符。在氮这样的同核体系中，离子键不是主要模式。此外，数据显示了显著的以键为中心的ELF极大值，这与共价键而非离子键的特征相符。", "answer": "$$\\boxed{A}$$", "id": "2452998"}]}