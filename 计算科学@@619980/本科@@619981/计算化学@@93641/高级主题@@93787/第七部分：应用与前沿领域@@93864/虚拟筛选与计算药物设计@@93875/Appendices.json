{"hands_on_practices": [{"introduction": "虚拟筛选的核心是打分函数，它是一个用于估算结合亲和力的计算模型。本次实践将引导你从物理化学基本原理出发，亲手构建一个包含范德华力、氢键和熵罚分项的简化打分函数 [@problem_id:2467051]。这个练习旨在揭开打分函数如何将复杂的分子相互作用转化为可量化分数的神秘面纱，为你提供坚实的基础。", "problem": "你的任务是实现一个完整、可运行的程序，该程序用于计算在虚拟筛选和计算药物设计中使用的几个预定义受体-配体测试用例的基本分子对接分数。一个配体构象的总分数定义为\n$$\nE_{\\text{total}} = \\sum_{\\substack{i \\in \\text{receptor} \\\\ j \\in \\text{ligand}}} E_{\\text{vdw}}(i,j) + \\sum_{\\substack{i \\in \\text{receptor} \\\\ j \\in \\text{ligand}}} E_{\\text{hbond}}(i,j) - N_{\\text{rot}} \\cdot C,\n$$\n其中，$E_{\\text{vdw}}$ 是逐对范德华相互作用能，$E_{\\text{hbond}}$ 计算氢键贡献，$N_{\\text{rot}}$ 是配体中可旋转键的数量，而 $C$ 是一个给定的常数。所有能量必须以千卡/摩尔（即 $\\text{kcal} \\cdot \\text{mol}^{-1}$）为单位表示。\n\n定义和参数：\n- 每个原子都有一个类型 $t \\in \\{\\text{C}, \\text{N}, \\text{O}\\}$，一个在三维笛卡尔空间中的位置（坐标单位为埃，Å），以及布尔标志 donor $D \\in \\{0,1\\}$ 和 acceptor $A \\in \\{0,1\\}$，用以指示该重原子的氢键供体或受体能力。\n- 距离为 $r_{ij}$（单位为 Å）的受体原子 $i$ 和配体原子 $j$ 之间的范德华相互作用使用 Lennard–Jones $12$–$6$ 势\n$$\nE_{\\text{vdw}}(i,j) = 4 \\, \\varepsilon_{ij} \\left[\\left(\\frac{\\sigma_{ij}}{r_{ij}}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{r_{ij}}\\right)^{6}\\right],\n$$\n并使用 Lorentz–Berthelot 组合规则\n$$\n\\sigma_{ij} = \\frac{\\sigma_{t_i} + \\sigma_{t_j}}{2}, \\quad \\varepsilon_{ij} = \\sqrt{\\varepsilon_{t_i}\\,\\varepsilon_{t_j}}.\n$$\n只有 $r_{ij} \\le r_{\\text{vdw}}^{\\max}$ 的原子对才有贡献，其中 $r_{\\text{vdw}}^{\\max} = 8.0$ Å。\n- 氢键能量按每个合格的供体-受体对分配如下\n$$\nE_{\\text{hbond}}(i,j) =\n\\begin{cases}\n- E_{\\text{HB}}, & \\text{if } r_{ij} \\le d_{\\text{HB}}^{\\max} \\text{ and } \\big( (D_i = 1 \\land A_j = 1) \\lor (A_i = 1 \\land D_j = 1) \\big), \\\\\n0, & \\text{otherwise,}\n\\end{cases}\n$$\n其中 $d_{\\text{HB}}^{\\max} = 3.5$ Å 且 $E_{\\text{HB}} = 1.5$ $\\text{kcal} \\cdot \\text{mol}^{-1}$。即使两个原子都被标记为既是供体又是受体，一个供体-受体对也最多只贡献一次。\n- 原子 Lennard-Jones 参数（所有 $\\varepsilon$ 的单位为 $\\text{kcal} \\cdot \\text{mol}^{-1}$，所有 $\\sigma$ 的单位为 Å）：\n  - 碳 $\\text{C}$：$\\varepsilon_{\\text{C}} = 0.12$，$\\sigma_{\\text{C}} = 3.40$。\n  - 氮 $\\text{N}$：$\\varepsilon_{\\text{N}} = 0.17$，$\\sigma_{\\text{N}} = 3.30$。\n  - 氧 $\\text{O}$：$\\varepsilon_{\\text{O}} = 0.20$，$\\sigma_{\\text{O}} = 3.00$。\n\n测试套件：\n实现您的程序，为以下三个独立的测试用例分别计算 $E_{\\text{total}}$。对每个案例，使用所提供的受体和配体原子。每个原子由一个元组 (类型, $D$, $A$, $x$, $y$, $z$) 指定，其中类型 $\\in \\{\\text{C},\\text{N},\\text{O}\\}$，供体标志 $D \\in \\{0,1\\}$，受体标志 $A \\in \\{0,1\\}$，坐标 $(x,y,z)$ 的单位为 Å。同时，使用为惩罚项提供的 $N_{\\text{rot}}$ 和 $C$ (单位为 $\\text{kcal} \\cdot \\text{mol}^{-1}$)。\n\n- 案例 1：\n  - 受体原子：\n    - $(\\text{O}, 0, 1, 0.0, 0.0, 0.0)$\n    - $(\\text{N}, 1, 0, 6.0, 0.0, 0.0)$\n    - $(\\text{C}, 0, 0, 0.0, 4.0, 0.0)$\n  - 配体原子：\n    - $(\\text{N}, 1, 0, 2.9, 0.0, 0.0)$\n    - $(\\text{O}, 0, 1, 6.0, 2.9, 0.0)$\n    - $(\\text{C}, 0, 0, 2.8, 4.0, 0.0)$\n  - $N_{\\text{rot}} = 3$, $C = -0.3$。\n- 案例 2（氢键距离边界）：\n  - 受体原子：\n    - $(\\text{N}, 1, 0, 0.0, 0.0, 0.0)$\n  - 配体原子：\n    - $(\\text{O}, 0, 1, 3.5, 0.0, 0.0)$\n  - $N_{\\text{rot}} = 0$, $C = -0.3$。\n- 案例 3（截断距离内无接触）：\n  - 受体原子：\n    - $(\\text{O}, 0, 1, 0.0, 0.0, 0.0)$\n  - 配体原子：\n    - $(\\text{N}, 1, 0, 20.0, 0.0, 0.0)$\n  - $N_{\\text{rot}} = 10$, $C = -0.3$。\n\n要求：\n- 使用上述定义，为每个案例计算 $E_{\\text{total}}$（单位为 $\\text{kcal} \\cdot \\text{mol}^{-1}$）。\n- 按规定使用 $r_{\\text{vdw}}^{\\max} = 8.0$ Å, $d_{\\text{HB}}^{\\max} = 3.5$ Å, 和 $E_{\\text{HB}} = 1.5$ $\\text{kcal} \\cdot \\text{mol}^{-1}$。\n- 最终的程序输出必须是一行，其中包含一个逗号分隔的列表，按案例1、2、3的顺序列出三个数值结果，并用方括号括起来。每个值都必须四舍五入到恰好6位小数，例如 $[x_1,x_2,x_3]$，其中每个 $x_k$ 是一个小数点后恰好有6位数字的十进制浮点数。", "solution": "问题陈述已经过严格评估，并被确定是有效的。它以分子力学原理为科学基础，提法得当，具有一套完整且一致的定义和参数，并以客观、无歧义的语言表述。任务是实现一个指定的分子对接打分函数，这是计算化学中的一个标准问题。我们将着手推导解决方案。\n\n总分 $E_{\\text{total}}$ 是由三个不同能量项之和计算得出的：范德华相互作用能 $E_{\\text{vdw}}$、氢键能量 $E_{\\text{hbond}}$ 和一个针对可旋转键的惩罚项。总公式由下式给出：\n$$\nE_{\\text{total}} = \\sum_{\\substack{i \\in \\text{receptor} \\\\ j \\in \\text{ligand}}} E_{\\text{vdw}}(i,j) + \\sum_{\\substack{i \\in \\text{receptor} \\\\ j \\in \\text{ligand}}} E_{\\text{hbond}}(i,j) - N_{\\text{rot}} \\cdot C\n$$\n这里，求和是针对所有原子对，其中原子 $i$ 来自受体，原子 $j$ 来自配体。所有能量都以 kcal $\\cdot$ mol$^{-1}$ 为单位表示。\n\n为每个测试用例计算 $E_{\\text{total}}$ 的算法步骤如下：\n\n首先，我们定义必要的物理和原子参数。\n原子类型 $t \\in \\{\\text{C}, \\text{N}, \\text{O}\\}$ 的 Lennard-Jones 参数如下：\n- 碳 ($\\text{C}$): $\\varepsilon_{\\text{C}} = 0.12$ kcal $\\cdot$ mol$^{-1}$, $\\sigma_{\\text{C}} = 3.40$ Å.\n- 氮 ($\\text{N}$): $\\varepsilon_{\\text{N}} = 0.17$ kcal $\\cdot$ mol$^{-1}$, $\\sigma_{\\text{N}} = 3.30$ Å.\n- 氧 ($\\text{O}$): $\\varepsilon_{\\text{O}} = 0.20$ kcal $\\cdot$ mol$^{-1}$, $\\sigma_{\\text{O}} = 3.00$ Å.\n用于相互作用截断距离和强度的全局常数如下：\n- 范德华截断距离: $r_{\\text{vdw}}^{\\max} = 8.0$ Å.\n- 氢键截断距离: $d_{\\text{HB}}^{\\max} = 3.5$ Å.\n- 基础氢键能量: $E_{\\text{HB}} = 1.5$ kcal $\\cdot$ mol$^{-1}$.\n\n每个案例的计算都涉及遍历一个受体原子 $i$ 和一个配体原子 $j$ 的所有可能组合。对每一对原子，我们执行以下步骤：\n\n1.  **距离计算**：计算位于位置 $(x_i, y_i, z_i)$ 的原子 $i$ 和位于位置 $(x_j, y_j, z_j)$ 的原子 $j$ 之间的欧几里得距离 $r_{ij}$。\n    $$\n    r_{ij} = \\sqrt{(x_i - x_j)^2 + (y_i - y_j)^2 + (z_i - z_j)^2}\n    $$\n2.  **范德华能量计算**：\n    只有当 $r_{ij} \\le r_{\\text{vdw}}^{\\max}$ 时，范德华相互作用的贡献才非零。如果满足此条件，则使用 Lennard-Jones $12$-$6$ 势计算逐对能量 $E_{\\text{vdw}}(i,j)$。混合原子对的参数 $\\sigma_{ij}$ 和 $\\varepsilon_{ij}$ 是通过 Lorentz-Berthelot 组合规则从单个原子的参数推导出来的：\n    $$\n    \\sigma_{ij} = \\frac{\\sigma_{t_i} + \\sigma_{t_j}}{2}, \\quad \\varepsilon_{ij} = \\sqrt{\\varepsilon_{t_i}\\,\\varepsilon_{t_j}}\n    $$\n    能量为：\n    $$\n    E_{\\text{vdw}}(i,j) = 4 \\, \\varepsilon_{ij} \\left[\\left(\\frac{\\sigma_{ij}}{r_{ij}}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{r_{ij}}\\right)^{6}\\right]\n    $$\n    总范德华能量 $\\sum E_{\\text{vdw}}(i,j)$ 是所有满足距离截断条件的受体-配体对的这些逐对能量的总和。\n\n3.  **氢键能量计算**：\n    当两个条件同时满足时，认为形成氢键：距离 $r_{ij}$ 必须小于或等于截断距离 $d_{\\text{HB}}^{\\max}$，并且原子必须具有兼容的供体/受体角色。设 $D_k$ 和 $A_k$ 分别是原子 $k$ 作为氢键供体或受体的布尔标志（$1$ 为真，$0$ 为假）。原子 $i$ 和 $j$ 之间形成氢键的条件是 $(D_i = 1 \\land A_j = 1) \\lor (A_i = 1 \\land D_j = 1)$。\n    如果距离和供体/受体条件都满足，则该对的贡献是一个恒定的有利能量，即 $-E_{\\text{HB}} = -1.5$ kcal $\\cdot$ mol$^{-1}$。\n    $$\n    E_{\\text{hbond}}(i,j) =\n    \\begin{cases}\n    -1.5, & \\text{if } r_{ij} \\le 3.5 \\text{ and } \\big( (D_i=1 \\land A_j=1) \\lor (A_i=1 \\land D_j=1) \\big) \\\\\n    0, & \\text{otherwise}\n    \\end{cases}\n    $$\n    总氢键能量 $\\sum E_{\\text{hbond}}(i,j)$ 是所有原子对的这些贡献的总和。\n\n4.  **旋转惩罚计算**：\n    该项解释了配体在结合时固定其构象所带来的熵成本。它被计算为 $-N_{\\text{rot}} \\cdot C$，其中 $N_{\\text{rot}}$ 是可旋转键的数量，$C$ 是一个缩放常数，这两者都为每个特定的测试用例提供。\n\n5.  **总分**：\n    最终得分 $E_{\\text{total}}$ 是通过将总范德华能量、总氢键能量和旋转惩罚项相加得到的。对所提供的三个测试用例中的每一个都执行此计算。实现将利用 `numpy` 库来进行高效的向量和矩阵运算，特别是用于计算所有坐标对之间的距离。每个案例的最终数值结果将按要求四舍五入到6位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport math\n\ndef solve():\n    \"\"\"\n    Computes a rudimentary molecular docking score for several predefined \n    receptor-ligand test cases.\n    \"\"\"\n    \n    # Define physical constants and parameters from the problem statement.\n    lj_params = {\n        'C': {'eps': 0.12, 'sig': 3.40},\n        'N': {'eps': 0.17, 'sig': 3.30},\n        'O': {'eps': 0.20, 'sig': 3.00},\n    }\n    R_vdw_max = 8.0\n    D_hb_max = 3.5\n    E_hb = 1.5\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"receptor\": [('O', 0, 1, 0.0, 0.0, 0.0), ('N', 1, 0, 6.0, 0.0, 0.0), ('C', 0, 0, 0.0, 4.0, 0.0)],\n            \"ligand\": [('N', 1, 0, 2.9, 0.0, 0.0), ('O', 0, 1, 6.0, 2.9, 0.0), ('C', 0, 0, 2.8, 4.0, 0.0)],\n            \"n_rot\": 3, \"C\": -0.3\n        },\n        {\n            \"receptor\": [('N', 1, 0, 0.0, 0.0, 0.0)],\n            \"ligand\": [('O', 0, 1, 3.5, 0.0, 0.0)],\n            \"n_rot\": 0, \"C\": -0.3\n        },\n        {\n            \"receptor\": [('O', 0, 1, 0.0, 0.0, 0.0)],\n            \"ligand\": [('N', 1, 0, 20.0, 0.0, 0.0)],\n            \"n_rot\": 10, \"C\": -0.3\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        receptor_atoms = case[\"receptor\"]\n        ligand_atoms = case[\"ligand\"]\n        n_rot = case[\"n_rot\"]\n        C = case[\"C\"]\n\n        # Prepare atom data for calculation\n        rec_types = [atom[0] for atom in receptor_atoms]\n        rec_coords = np.array([atom[3:] for atom in receptor_atoms])\n        rec_is_donor = np.array([atom[1] for atom in receptor_atoms])\n        rec_is_acceptor = np.array([atom[2] for atom in receptor_atoms])\n\n        lig_types = [atom[0] for atom in ligand_atoms]\n        lig_coords = np.array([atom[3:] for atom in ligand_atoms])\n        lig_is_donor = np.array([atom[1] for atom in ligand_atoms])\n        lig_is_acceptor = np.array([atom[2] for atom in ligand_atoms])\n\n        total_vdw_energy = 0.0\n        total_hbond_energy = 0.0\n\n        # Iterate over all receptor-ligand atom pairs\n        for i in range(len(receptor_atoms)):\n            for j in range(len(ligand_atoms)):\n                dist = np.linalg.norm(rec_coords[i] - lig_coords[j])\n                \n                # Van der Waals interaction calculation\n                # A small tolerance (1e-9) is used to avoid division by zero for overlapping atoms\n                if dist <= R_vdw_max and dist > 1e-9:\n                    eps_i = lj_params[rec_types[i]]['eps']\n                    sig_i = lj_params[rec_types[i]]['sig']\n                    eps_j = lj_params[lig_types[j]]['eps']\n                    sig_j = lj_params[lig_types[j]]['sig']\n                    \n                    eps_ij = math.sqrt(eps_i * eps_j)\n                    sig_ij = (sig_i + sig_j) / 2.0\n                    \n                    ratio = sig_ij / dist\n                    vdw_energy = 4.0 * eps_ij * (ratio**12 - ratio**6)\n                    total_vdw_energy += vdw_energy\n\n                # Hydrogen bond interaction calculation\n                if dist <= D_hb_max:\n                    is_donor_rec = rec_is_donor[i] == 1\n                    is_acceptor_rec = rec_is_acceptor[i] == 1\n                    is_donor_lig = lig_is_donor[j] == 1\n                    is_acceptor_lig = lig_is_acceptor[j] == 1\n                    \n                    if (is_donor_rec and is_acceptor_lig) or (is_acceptor_rec and is_donor_lig):\n                        total_hbond_energy -= E_hb\n\n        # Rotational penalty term\n        rot_penalty = -n_rot * C\n        \n        # Sum all energy terms to get the total score\n        total_energy = total_vdw_energy + total_hbond_energy + rot_penalty\n        results.append(f\"{total_energy:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2467051"}, {"introduction": "在构建了打分模型后，理解其局限性至關重要。本次实践将通过一个思想实验，展示一个简化的加和性打分函数为何会被“欺骗”，从而错误地偏好一个存在严重空间位阻的构象 [@problem_id:2467080]。这个练习能够培养你的批判性思维，让你认识到计算模型中启发式方法的内在权衡和潜在缺陷。", "problem": "要求您形式化、分析并实现一个在虚拟筛选中常见但有设计缺陷的配体-蛋白质相互作用的加性评分函数。您的任务是设计一个最小化的配体-蛋白质对，使其在存在空间位阻碰撞的情况下，仍能获得一个虚假的高分。该设计将有意保持最小化，以专注于第一性原理和逻辑结构。\n\n从以下基本原理出发：\n- 库仑静电学：根据库仑定律，相距为 $r$ 的两个点电荷 $q_i$ 和 $q_j$ 之间的成对相互作用与 $q_i q_j / r$ 成正比，并通过一个小的正常数来软化奇点，以避免在极短距离上发生发散。\n- 范德华半径：两个原子间空间位阻碰撞的起始，根据经验定义为原子间距 $r$ 小于它们的范德华半径之和 $R_{\\mathrm{vdW},i} + R_{\\mathrm{vdW},j}$。\n- 疏水接触奖励：一个简化的、有距离截断的线性奖励 $C(r)$，当原子在截断距离内相互靠近时，该奖励会增加，旨在作为去溶剂化/接触效应的代理。\n\n为单个配体原子和单个蛋白质原子定义一个玩具评分函数 $S(r)$，两者中心间距为 $r$：\n- 静电项：$E(r) = - w_{\\mathrm{elec}} \\dfrac{q^2}{r^2 + \\delta^2}$，其中 $q$ 是每个原子上所带相反符号的部分电荷的绝对值，$w_{\\mathrm{elec}} \\ge 0$ 是一个权重，$\\delta > 0$ 是一个软化参数。\n- 疏水接触项：$H(r) = w_{\\mathrm{hp}} \\max\\!\\left(0, 1 - \\dfrac{r}{d_{\\mathrm{hp}}}\\right)$，其中 $w_{\\mathrm{hp}} \\ge 0$ 是一个权重，$d_{\\mathrm{hp}} > 0$ 是一个截断距离。\n- 空间位阻碰撞罚分项：$P(r) = w_{\\mathrm{clash}} \\max\\!\\left(0, R_{\\Sigma} - r\\right)$，其中 $w_{\\mathrm{clash}} \\ge 0$ 是一个权重，$R_{\\Sigma} = R_{\\mathrm{L}} + R_{\\mathrm{P}}$ 是配体和蛋白质原子的范德华半径之和。\n\n总分是各项之和\n$$\nS(r) \\;=\\; E(r) + H(r) + P(r) \\, .\n$$\n$S(r)$ 的值越低表示越有利。当 $r < R_{\\Sigma}$ 时，存在空间位阻碰撞。\n\n您将考虑一个固定的“参考”无碰撞距离 $r_{\\mathrm{ref}} = R_{\\Sigma}$ 和一个“病态的”碰撞距离 $r_{\\mathrm{clash}} = \\alpha R_{\\Sigma}$，其中 $0 < \\alpha < 1$。“欺骗”事件定义为 $S(r_{\\mathrm{clash}}) < S(r_{\\mathrm{ref}})$；也就是说，尽管碰撞构象违反了空间位阻约束，有缺陷的评分函数却更偏好它。\n\n您的程序必须：\n- 构建一个最小系统，包含一个配体原子和一个蛋白质原子，它们带有等量相反的部分电荷 $q$，并且都被视为疏水原子。\n- 使用上述 $S(r)$ 计算 $S(r_{\\mathrm{clash}})$ 和 $S(r_{\\mathrm{ref}})$。\n- 报告是否存在空间位阻碰撞（布尔值）以及评分函数是否被“欺骗”（布尔值），其中“欺骗”意味着 $S(r_{\\mathrm{clash}}) < S(r_{\\mathrm{ref}})$（严格不等式）。为了防止浮点数计算的误差，将容差 $\\tau = 10^{-9}$ 内的值视为相等；也就是说，仅当 $S(r_{\\mathrm{clash}}) + \\tau < S(r_{\\mathrm{ref}})$ 时，才认为“被欺骗”为真。\n\n所有量都是任意单位下的无量纲量；不需要物理单位。\n\n测试套件和参数：\n- 所有测试中使用的全局常量：\n  - 大小为 $q=1$ 的相反电荷。\n  - 软化参数 $\\delta = 0.5$。\n  - 配体范德华半径 $R_{\\mathrm{L}} = 1.7$ 和蛋白质范德华半径 $R_{\\mathrm{P}} = 1.9$，因此 $R_{\\Sigma} = 3.6$。\n  - 碰撞缩放因子 $\\alpha = 0.7$，因此 $r_{\\mathrm{clash}} = \\alpha R_{\\Sigma} = 2.52$ 且 $r_{\\mathrm{ref}} = R_{\\Sigma} = 3.6$。\n  - 疏水截断距离 $d_{\\mathrm{hp}} = 5$。\n  - 疏水权重 $w_{\\mathrm{hp}} = 2$。\n- 三个改变静电和碰撞权重的测试：\n  - 测试 A（明显被欺骗）：$w_{\\mathrm{elec}} = 10$, $w_{\\mathrm{clash}} = 0.05$。\n  - 测试 B（因罚分更强而未被欺骗）：$w_{\\mathrm{elec}} = 10$, $w_{\\mathrm{clash}} = 0.4$。\n  - 测试 C（等式成立的边界情况）：$w_{\\mathrm{elec}} = 10$，且 $w_{\\mathrm{clash}}$ 设置为恰好使 $S(r_{\\mathrm{clash}}) = S(r_{\\mathrm{ref}})$ 的阈值。通过设置 $S(r_{\\mathrm{clash}}) - S(r_{\\mathrm{ref}}) = 0$ 来推导该阈值，可得\n    $$\n    w_{\\mathrm{clash}}^{\\star} \\;=\\; -\\dfrac{\\left[E(r_{\\mathrm{clash}}) - E(r_{\\mathrm{ref}})\\right] + \\left[H(r_{\\mathrm{clash}}) - H(r_{\\mathrm{ref}})\\right]}{R_{\\Sigma} - r_{\\mathrm{clash}}} \\, .\n    $$\n    在您的程序中，使用根据上述常量计算出的 $w_{\\mathrm{clash}}^{\\star}$ 进行测试 C。\n\n您的程序必须输出：\n- 对于每个测试，计算 $S(r_{\\mathrm{clash}})$（浮点数）、空间位阻碰撞布尔值和如上定义的“被欺骗”布尔值。\n- 将所有测试的结果按以下顺序汇总到一个扁平列表中：\n  $[S_{\\mathrm{A}}, \\mathrm{clash}_{\\mathrm{A}}, \\mathrm{fooled}_{\\mathrm{A}}, S_{\\mathrm{B}}, \\mathrm{clash}_{\\mathrm{B}}, \\mathrm{fooled}_{\\mathrm{B}}, S_{\\mathrm{C}}, \\mathrm{clash}_{\\mathrm{C}}, \\mathrm{fooled}_{\\mathrm{C}}]$。\n- 您的程序应生成单行输出，其中包含此列表，格式为用方括号括起来的逗号分隔序列，例如 $[x_1, x_2, \\ldots]$。\n\n科学真实性和推导期望：\n- 仅使用上述定义和公式。不要引入任何额外的势能项或隐藏约束。\n- 推理应从所述的基本原理（库仑相互作用行为、范德华碰撞定义和一个简单的接触奖励）开始，并根据权重和距离逻辑地推导出“欺骗”条件。\n- 确保您实现中的所有数值评估都与此处提供的参数相匹配。代码不得提示输入或读取外部文件。", "solution": "所提出的问题是有效的。这是一个定义明确的计算化学练习，旨在说明简化加性评分函数中的一个基本缺陷。该问题科学地基于既定原则，在数学和逻辑上是一致的，并且为获得唯一解提供了所有必要的参数。我们将进行形式化分析和实现。\n\n目标是分析虚拟筛选中使用的玩具评分函数 $S(r)$，并演示一个“欺骗”事件，即该函数错误地为一个有空间位阻碰撞的构象分配了比一个有效的、无碰撞的构象更有利的分数。\n\n相距为 $r$ 的相互作用原子对的总分 $S(r)$ 以加性函数形式给出：\n$$\nS(r) = E(r) + H(r) + P(r)\n$$\n其中分数越低表示相互作用越有利。各分量定义如下：\n1.  一个静电相互作用项 $E(r)$，它是一个软化的库仑势：\n    $$\n    E(r) = - w_{\\mathrm{elec}} \\frac{q^2}{r^2 + \\delta^2}\n    $$\n    对于给定的相反电荷系统，该项是吸引的（有利的，负值）。$w_{\\mathrm{elec}} \\ge 0$ 是一个权重，$q$ 是电荷大小，$\\delta > 0$ 是一个软化参数，以防止在 $r=0$ 处发散。\n\n2.  一个疏水接触项 $H(r)$：\n    $$\n    H(r) = w_{\\mathrm{hp}} \\max\\left(0, 1 - \\frac{r}{d_{\\mathrm{hp}}}\\right)\n    $$\n    此处，$w_{\\mathrm{hp}} \\ge 0$ 是一个权重，$d_{\\mathrm{hp}}$ 是一个截断距离。我们必须注意到一个术语上的模糊性：尽管此项名为“奖励”，但其数学形式对总分 $S(r)$ 的贡献是一个非负值。由于分数越低越有利，此项实际上起到了能量惩罚的作用，随着原子间距 $r$ 的减小而增加。我们的分析将严格遵守所提供的公式。\n\n3.  一个空间位阻碰撞罚分项 $P(r)$：\n    $$\n    P(r) = w_{\\mathrm{clash}} \\max\\left(0, R_{\\Sigma} - r\\right)\n    $$\n    当原子间距 $r$ 小于范德华半径之和 $R_{\\Sigma} = R_{\\mathrm{L}} + R_{\\mathrm{P}}$ 时，此项施加一个线性罚分。$w_{\\mathrm{clash}} \\ge 0$ 是罚分权重。\n\n我们分析两种特定的构象：\n- 一个“参考”构象，距离为 $r_{\\mathrm{ref}} = R_{\\Sigma}$。这代表了理想的范德华接触距离，根据定义，其空间位阻罚分为零：$P(r_{\\mathrm{ref}}) = w_{\\mathrm{clash}} \\max(0, R_{\\Sigma} - R_{\\Sigma}) = 0$。\n- 一个“碰撞”构象，距离为 $r_{\\mathrm{clash}} = \\alpha R_{\\Sigma}$，其中 $0 < \\alpha < 1$。这代表了一个不符合物理实际的空间位阻重叠。\n\n如果评分函数偏好碰撞状态，即 $S(r_{\\mathrm{clash}}) < S(r_{\\mathrm{ref}})$，则认为它被“欺骗”了。\n我们来展开这个不等式：\n$$\nE(r_{\\mathrm{clash}}) + H(r_{\\mathrm{clash}}) + P(r_{\\mathrm{clash}}) < E(r_{\\mathrm{ref}}) + H(r_{\\mathrm{ref}}) + P(r_{\\mathrm{ref}})\n$$\n代入罚分项的表达式：\n$$\nE(r_{\\mathrm{clash}}) + H(r_{\\mathrm{clash}}) + w_{\\mathrm{clash}}(R_{\\Sigma} - r_{\\mathrm{clash}}) < E(r_{\\mathrm{ref}}) + H(r_{\\mathrm{ref}}) + 0\n$$\n这个不等式揭示了内在的竞争关系。如果将原子拉近所带来的有利变化（主要是增强的静电吸引力）之和超过了对空间位阻碰撞的明确罚分，那么评分函数就会被欺骗。\n能量变化 $\\Delta S = S(r_{\\mathrm{clash}}) - S(r_{\\mathrm{ref}})$ 由下式给出：\n$$\n\\Delta S = [E(r_{\\mathrm{clash}}) - E(r_{\\mathrm{ref}})] + [H(r_{\\mathrm{clash}}) - H(r_{\\mathrm{ref}})] + w_{\\mathrm{clash}}(R_{\\Sigma} - r_{\\mathrm{clash}})\n$$\n由于 $r_{\\mathrm{clash}} < r_{\\mathrm{ref}}$，我们有：\n- $E(r_{\\mathrm{clash}}) < E(r_{\\mathrm{ref}})$，因此 $\\Delta E = E(r_{\\mathrm{clash}}) - E(r_{\\mathrm{ref}})$ 是负值（有利的）。\n- $H(r_{\\mathrm{clash}}) > H(r_{\\mathrm{ref}})$（对于 $r < d_{\\mathrm{hp}}$），因此 $\\Delta H = H(r_{\\mathrm{clash}}) - H(r_{\\mathrm{ref}})$ 是正值（不利的）。\n- 项 $w_{\\mathrm{clash}}(R_{\\Sigma} - r_{\\mathrm{clash}})$ 是正值的空间位阻罚分。\n\n当罚分权重 $w_{\\mathrm{clash}}$ 不足以抵消其他项时，满足“欺骗”条件 $\\Delta S < 0$。具体来说，当以下条件成立时会发生欺骗：\n$$\nw_{\\mathrm{clash}} < - \\frac{[E(r_{\\mathrm{clash}}) - E(r_{\\mathrm{ref}})] + [H(r_{\\mathrm{clash}}) - H(r_{\\mathrm{ref}})]}{R_{\\Sigma} - r_{\\mathrm{clash}}}\n$$\n此不等式的右侧定义了临界阈值罚分权重 $w_{\\mathrm{clash}}^{\\star}$，在该值下 $S(r_{\\mathrm{clash}}) = S(r_{\\mathrm{ref}})$。这与为测试 C 提供的公式相符。\n\n在实现方面，我们将首先定义与 $E(r)$、$H(r)$ 和 $P(r)$ 对应的 Python 函数。然后，我们将计算常数值 $r_{\\mathrm{ref}}$、$r_{\\mathrm{clash}}$ 以及用于测试 C 的阈值权重 $w_{\\mathrm{clash}}^{\\star}$。随后，对于三个测试用例（A、B 和 C）中的每一个，我们计算 $S(r_{\\mathrm{clash}})$ 和 $S(r_{\\mathrm{ref}})$。根据定义，在 $r_{\\mathrm{clash}}$ 处存在空间位阻碰撞，因此相应的布尔值始终为真。“被欺骗”布尔值通过评估条件 $S(r_{\\mathrm{clash}}) + \\tau < S(r_{\\mathrm{ref}})$ 来确定，其中 $\\tau=10^{-9}$ 是指定的容差。最终输出将把这些结果汇总到一个列表中。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Analyzes a flawed scoring function in computational chemistry.\n    \"\"\"\n    \n    # Global constants as defined in the problem statement\n    Q = 1.0\n    DELTA = 0.5\n    R_L = 1.7\n    R_P = 1.9\n    R_SIGMA = R_L + R_P\n    ALPHA = 0.7\n    D_HP = 5.0\n    W_HP = 2.0\n    TOLERANCE = 1e-9\n\n    # Derived distances\n    r_clash = ALPHA * R_SIGMA\n    r_ref = R_SIGMA\n\n    # Define the scoring function components\n    def E(r, w_elec):\n        \"\"\"Electrostatic term.\"\"\"\n        return -w_elec * np.square(Q) / (np.square(r) + np.square(DELTA))\n\n    def H(r):\n        \"\"\"Hydrophobic term.\"\"\"\n        return W_HP * np.maximum(0, 1 - r / D_HP)\n\n    def P(r, w_clash):\n        \"\"\"Steric penalty term.\"\"\"\n        return w_clash * np.maximum(0, R_SIGMA - r)\n\n    def S(r, w_elec, w_clash):\n        \"\"\"Total score.\"\"\"\n        return E(r, w_elec) + H(r) + P(r, w_clash)\n\n    # Test suite parameters\n    # Test A: w_elec = 10, w_clash = 0.05\n    # Test B: w_elec = 10, w_clash = 0.4\n    # Test C: w_elec = 10, w_clash = w_clash_star\n    \n    w_elec_base = 10.0\n\n    # Calculate w_clash_star for Test C\n    e_clash_base = E(r_clash, w_elec_base)\n    e_ref_base = E(r_ref, w_elec_base)\n    h_clash = H(r_clash)\n    h_ref = H(r_ref)\n    \n    numerator = (e_clash_base - e_ref_base) + (h_clash - h_ref)\n    denominator = R_SIGMA - r_clash\n    w_clash_star = -numerator / denominator\n\n    test_cases = [\n        {'name': 'A', 'w_elec': w_elec_base, 'w_clash': 0.05},\n        {'name': 'B', 'w_elec': w_elec_base, 'w_clash': 0.4},\n        {'name': 'C', 'w_elec': w_elec_base, 'w_clash': w_clash_star},\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        w_elec = case['w_elec']\n        w_clash = case['w_clash']\n        \n        # Calculate scores for clashing and reference configurations\n        s_clash = S(r_clash, w_elec, w_clash)\n        s_ref = S(r_ref, w_elec, w_clash)\n\n        # A steric clash is present by definition at r_clash\n        clash_present = r_clash < R_SIGMA\n        \n        # The scoring function is \"fooled\" if it prefers the clashing state,\n        # considering the floating-point tolerance.\n        is_fooled = (s_clash + TOLERANCE) < s_ref\n        \n        results.extend([s_clash, clash_present, is_fooled])\n\n    # Format the final output as a single comma-separated list in brackets\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2467080"}, {"introduction": "真实的药物设计必须考虑分子所处的化学环境。本次实践将探讨溶液的 $pH$ 值如何通过改变配体的质子化状态，进而显著影响其表观结合亲和力 $\\Delta G_{\\mathrm{app}}^{\\circ}$ [@problem_id:2467125]。理解这种热力学关联对于设计在特定生理 $pH$ 条件下有效的药物至关重要，它将静态的对接模型与动态的生物化学现实联系起来。", "problem": "给定一个类组胺配体的热力学模型，该配体带有一个咪唑环，在溶液中可以以两种微观状态存在：表示为 $\\mathrm{BH^+}$ 的质子化碱和表示为 $\\mathrm{B}$ 的中性碱。该配体以每种微观状态单一构象与蛋白质结合，其特征由标准结合自由能 $\\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})$ 和 $\\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})$ 描述，单位为 $\\mathrm{kcal}\\cdot\\mathrm{mol}^{-1}$。系统处于绝对温度 $T$（单位为 $\\mathrm{K}$），普适气体常数为 $R = 1.987204258 \\times 10^{-3}\\ \\mathrm{kcal}\\cdot\\mathrm{mol}^{-1}\\cdot\\mathrm{K}^{-1}$。共轭酸的水溶液酸碱平衡 $\\mathrm{BH^+} \\rightleftharpoons \\mathrm{B} + \\mathrm{H^+}$ 由酸解离常数 $K_a$ 及其负十进制对数 $\\mathrm{p}K_a$ 表征，其中 $\\mathrm{p}K_a = -\\log_{10} K_a$。氢离子活度由 $\\mathrm{pH} = -\\log_{10} a_{\\mathrm{H^+}}$ 给出，在本问题中，您应将活度视为浓度。\n\n定义微观状态特异性标准结合常数为 $K_{\\mathrm{bind}}^{\\circ}(i) = \\exp\\!\\left(-\\Delta G_{\\mathrm{bind}}^{\\circ}(i)/(R T)\\right)$，其中 $i \\in \\{\\mathrm{BH^+}, \\mathrm{B}\\}$。将溶液中的质子化视为相对于结合的快速预平衡，因此总表观标准结合自由能 $\\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH})$ 由在指定 $\\mathrm{pH}$ 下本体溶液中存在的微观状态的平衡加权贡献决定。对于下方的每组参数，计算在 $\\mathrm{pH} = 5.0$ 和 $\\mathrm{pH} = 7.4$ 之间的表观标准结合自由能之差，其定义为\n$$\n\\Delta\\Delta G_{\\mathrm{app}}^{\\circ} = \\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}=5.0) - \\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}=7.4),\n$$\n并以 $\\mathrm{kcal}\\cdot\\mathrm{mol}^{-1}$ 为单位报告每个结果，四舍五入至 $6$ 位小数。\n\n使用以下测试套件，其中每组参数是一个有序元组 $\\big(\\mathrm{p}K_a,\\ \\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+}),\\ \\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{B}),\\ T,\\ \\mathrm{pH}_{\\mathrm{low}},\\ \\mathrm{pH}_{\\mathrm{high}}\\big)$，能量单位为 $\\mathrm{kcal}\\cdot\\mathrm{mol}^{-1}$，温度单位为 $\\mathrm{K}$：\n- $\\left(6.0,\\ -9.0,\\ -6.0,\\ 298.15,\\ 5.0,\\ 7.4\\right)$\n- $\\left(6.0,\\ -8.0,\\ -8.0,\\ 298.15,\\ 5.0,\\ 7.4\\right)$\n- $\\left(6.0,\\ -6.0,\\ -9.5,\\ 298.15,\\ 5.0,\\ 7.4\\right)$\n- $\\left(9.0,\\ -8.5,\\ -7.0,\\ 298.15,\\ 5.0,\\ 7.4\\right)$\n- $\\left(3.0,\\ -7.5,\\ -10.0,\\ 298.15,\\ 5.0,\\ 7.4\\right)$\n\n您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表（例如 $\\left[\\text{result}_1,\\text{result}_2,\\dots\\right]$），其中每个 $\\text{result}_i$ 是对应的 $\\Delta\\Delta G_{\\mathrm{app}}^{\\circ}$ 值（单位为 $\\mathrm{kcal}\\cdot\\mathrm{mol}^{-1}$，四舍五入至 $6$ 位小数），并与上述参数集的顺序完全一致。", "solution": "问题陈述已经过评估，被确定为有效。它在科学上基于物理化学的标准原理，问题设置合理，提供了所有必要信息，并且表述客观。我们可以着手求解。\n\n该问题要求计算一个配体在两个不同 $\\mathrm{pH}$ 值下的表观标准结合自由能之差 $\\Delta\\Delta G_{\\mathrm{app}}^{\\circ}$。这是计算生物物理学中的一个经典问题，可以通过应用热力学耦合分析来解决。\n\n该系统涉及三个耦合平衡：\n$1$. 配体在水溶液中的酸碱平衡：\n$$\n\\mathrm{BH^+} \\rightleftharpoons \\mathrm{B} + \\mathrm{H^+}\n$$\n该平衡由酸解离常数 $K_a$ 表征，其公式为：\n$$\nK_a = \\frac{[\\mathrm{B}] a_{\\mathrm{H^+}}}{[\\mathrm{BH^+}]}\n$$\n其中 $[\\mathrm{X}]$ 表示物种 $\\mathrm{X}$ 的摩尔浓度， $a_{\\mathrm{H^+}}$ 是氢离子的活度。问题允许用浓度近似活度，所以我们使用 $[\\mathrm{H^+}]$。问题给出了 $\\mathrm{p}K_a = -\\log_{10} K_a$ 和 $\\mathrm{pH} = -\\log_{10} [\\mathrm{H^+}]$。根据这些定义，可以得出 $K_a = 10^{-\\mathrm{p}K_a}$ 和 $[\\mathrm{H^+}] = 10^{-\\mathrm{pH}}$。\n\n$2$. 中性配体微观状态 $\\mathrm{B}$ 与蛋白质 $\\mathrm{P}$ 的结合：\n$$\n\\mathrm{P} + \\mathrm{B} \\rightleftharpoons \\mathrm{PB}\n$$\n该过程由标准结合常数 $K_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})$ 控制。\n\n$3$. 质子化配体微观状态 $\\mathrm{BH^+}$ 与蛋白质 $\\mathrm{P}$ 的结合：\n$$\n\\mathrm{P} + \\mathrm{BH^+} \\rightleftharpoons \\mathrm{PBH^+}\n$$\n该过程由标准结合常数 $K_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})$ 控制。\n\n总的或表观的结合过程考虑的是总配体群体 $\\mathrm{L_{tot}} = \\mathrm{B} + \\mathrm{BH^+}$ 与蛋白质的结合。表观标准结合常数 $K_{\\mathrm{app}}^{\\circ}$ 是为平衡 $\\mathrm{P} + \\mathrm{L_{tot}} \\rightleftharpoons \\mathrm{PL_{tot}}$ 定义的：\n$$\nK_{\\mathrm{app}}^{\\circ} = \\frac{[\\mathrm{PL_{tot}}]}{[\\mathrm{P}][\\mathrm{L_{tot}}]} = \\frac{[\\mathrm{PB}] + [\\mathrm{PBH^+}]}{[\\mathrm{P}]([\\mathrm{B}] + [\\mathrm{BH^+}])}\n$$\n代入各个结合平衡的表达式 $K_{\\mathrm{bind}}^{\\circ}(\\mathrm{B}) = \\frac{[\\mathrm{PB}]}{[\\mathrm{P}][\\mathrm{B}]}$ 和 $K_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+}) = \\frac{[\\mathrm{PBH^+}]}{[\\mathrm{P}][\\mathrm{BH^+}]}$，我们得到：\n$$\nK_{\\mathrm{app}}^{\\circ} = \\frac{K_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})[\\mathrm{P}][\\mathrm{B}] + K_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})[\\mathrm{P}][\\mathrm{BH^+}]}{[\\mathrm{P}]([\\mathrm{B}] + [\\mathrm{BH^+}])} = \\frac{K_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})[\\mathrm{B}] + K_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})[\\mathrm{BH^+}]}{[\\mathrm{B}] + [\\mathrm{BH^+}]}\n$$\n这表明 $K_{\\mathrm{app}}^{\\circ}$ 是微观状态特异性结合常数的加权平均值。权重是溶液中配体微观状态的摩尔分数 $x_{\\mathrm{B}}$ 和 $x_{\\mathrm{BH^+}}$：\n$$\nK_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}) = x_{\\mathrm{B}}(\\mathrm{pH}) K_{\\mathrm{bind}}^{\\circ}(\\mathrm{B}) + x_{\\mathrm{BH^+}}(\\mathrm{pH}) K_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})\n$$\n摩尔分数是 $\\mathrm{pH}$ 的函数。根据 $K_a$ 的定义，我们推导出比率 $[\\mathrm{BH^+}]/[\\mathrm{B}] = [\\mathrm{H^+}]/K_a = 10^{\\mathrm{p}K_a - \\mathrm{pH}}$。因此摩尔分数为：\n$$\nx_{\\mathrm{B}}(\\mathrm{pH}) = \\frac{[\\mathrm{B}]}{[\\mathrm{B}] + [\\mathrm{BH^+}]} = \\frac{1}{1 + [\\mathrm{BH^+}]/[\\mathrm{B}]} = \\frac{1}{1 + 10^{\\mathrm{p}K_a - \\mathrm{pH}}}\n$$\n$$\nx_{\\mathrm{BH^+}}(\\mathrm{pH}) = \\frac{[\\mathrm{BH^+}]}{[\\mathrm{B}] + [\\mathrm{BH^+}]} = \\frac{[\\mathrm{BH^+}]/[\\mathrm{B}]}{1 + [\\mathrm{BH^+}]/[\\mathrm{B}]} = \\frac{10^{\\mathrm{p}K_a - \\mathrm{pH}}}{1 + 10^{\\mathrm{p}K_a - \\mathrm{pH}}}\n$$\n问题将标准自由能和结合常数之间的关系定义为 $\\Delta G_{\\mathrm{bind}}^{\\circ}(i) = -RT \\ln K_{\\mathrm{bind}}^{\\circ}(i)$，由此可得 $K_{\\mathrm{bind}}^{\\circ}(i) = \\exp(-\\Delta G_{\\mathrm{bind}}^{\\circ}(i)/(RT))$。这里，$R$ 是普适气体常数，$1.987204258 \\times 10^{-3}\\ \\mathrm{kcal}\\cdot\\mathrm{mol}^{-1}\\cdot\\mathrm{K}^{-1}$，$T$ 是以开尔文为单位的绝对温度。\n\n表观标准结合自由能 $\\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH})$ 与表观结合常数的关系为：\n$$\n\\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}) = -RT \\ln K_{\\mathrm{app}}^{\\circ}(\\mathrm{pH})\n$$\n结合这些表达式，得到用于计算的最终公式：\n$$\n\\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}) = -RT \\ln \\left( \\frac{\\exp\\left(-\\frac{\\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})}{RT}\\right) + \\exp\\left(-\\frac{\\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})}{RT}\\right) \\cdot 10^{\\mathrm{p}K_a - \\mathrm{pH}}}{1 + 10^{\\mathrm{p}K_a - \\mathrm{pH}}} \\right)\n$$\n目标是为每组给定的参数 $(\\mathrm{p}K_a, \\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+}), \\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{B}), T, \\mathrm{pH}_{\\mathrm{low}}, \\mathrm{pH}_{\\mathrm{high}})$ 计算 $\\Delta\\Delta G_{\\mathrm{app}}^{\\circ} = \\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}_{\\mathrm{low}}) - \\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}_{\\mathrm{high}})$，其中 $\\mathrm{pH}_{\\mathrm{low}} = 5.0$ 且 $\\mathrm{pH}_{\\mathrm{high}} = 7.4$。\n\n计算步骤如下：\n$1$. 对于每组参数，计算乘积 $RT$。\n$2$. 对于两个 $\\mathrm{pH}$ 值（$\\mathrm{pH}_{\\mathrm{low}}$ 和 $\\mathrm{pH}_{\\mathrm{high}}$）中的每一个：\n    a. 计算项 $10^{\\mathrm{p}K_a - \\mathrm{pH}}$。\n    b. 根据各自的自由能 $\\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})$ 和 $\\Delta G_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})$ 计算微观状态特异性标准结合常数 $K_{\\mathrm{bind}}^{\\circ}(\\mathrm{B})$ 和 $K_{\\mathrm{bind}}^{\\circ}(\\mathrm{BH^+})$。\n    c. 使用加权平均公式计算表观标准结合常数 $K_{\\mathrm{app}}^{\\circ}(\\mathrm{pH})$。\n    d. 从 $K_{\\mathrm{app}}^{\\circ}(\\mathrm{pH})$ 计算表观标准结合自由能 $\\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH})$。\n$3$. 计算差值 $\\Delta\\Delta G_{\\mathrm{app}}^{\\circ} = \\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}_{\\mathrm{low}}) - \\Delta G_{\\mathrm{app}}^{\\circ}(\\mathrm{pH}_{\\mathrm{high}})$。\n$4$. 将最终结果四舍五入到 $6$ 位小数。\n\n该过程在提供的 Python 代码中实现。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the difference in apparent standard binding free energy\n    between two pH values for several parameter sets.\n    \"\"\"\n    # Define physical constant R in kcal.mol^-1.K^-1\n    R = 1.987204258e-3\n\n    # Define the test suite of parameters.\n    # Each tuple is (pKa, dG_BH_plus, dG_B, T, pH_low, pH_high)\n    # Energies are in kcal.mol^-1, T in K.\n    test_cases = [\n        (6.0, -9.0, -6.0, 298.15, 5.0, 7.4),\n        (6.0, -8.0, -8.0, 298.15, 5.0, 7.4),\n        (6.0, -6.0, -9.5, 298.15, 5.0, 7.4),\n        (9.0, -8.5, -7.0, 298.15, 5.0, 7.4),\n        (3.0, -7.5, -10.0, 298.15, 5.0, 7.4),\n    ]\n\n    results = []\n\n    def calculate_apparent_dG(pKa, dG_BH_plus, dG_B, T, pH):\n        \"\"\"\n        Calculates the apparent standard binding free energy at a given pH\n        based on a thermodynamic linkage model.\n\n        Args:\n            pKa (float): The pKa of the ligand's conjugate acid.\n            dG_BH_plus (float): Standard binding free energy of the protonated form.\n            dG_B (float): Standard binding free energy of the neutral form.\n            T (float): Absolute temperature in Kelvin.\n            pH (float): The pH of the solution.\n\n        Returns:\n            float: The apparent standard binding free energy in kcal/mol.\n        \"\"\"\n        # Calculate the thermal energy term RT\n        RT = R * T\n\n        # Calculate microstate-specific standard association constants\n        K_bind_BH_plus = np.exp(-dG_BH_plus / RT)\n        K_bind_B = np.exp(-dG_B / RT)\n\n        # Calculate the ratio term for pH-dependence\n        ratio_H_over_Ka = 10**(pKa - pH)\n\n        # Calculate the apparent standard association constant K_app, which\n        # is the weighted average of the microstate association constants.\n        # The weights are the mole fractions of the microstates in solution.\n        K_app = (K_bind_B + K_bind_BH_plus * ratio_H_over_Ka) / (1 + ratio_H_over_Ka)\n        \n        # Calculate the apparent standard binding free energy from K_app.\n        # Handle the case where K_app might be non-positive to avoid log errors.\n        if K_app <= 0:\n            dG_app = np.inf\n        else:\n            dG_app = -RT * np.log(K_app)\n            \n        return dG_app\n\n    for case in test_cases:\n        pKa, dG_BH_plus, dG_B, T, pH_low, pH_high = case\n\n        # Calculate apparent dG at pH_low and pH_high\n        dG_app_low = calculate_apparent_dG(pKa, dG_BH_plus, dG_B, T, pH_low)\n        dG_app_high = calculate_apparent_dG(pKa, dG_BH_plus, dG_B, T, pH_high)\n\n        # Calculate the difference d(dG_app)\n        ddG_app = dG_app_low - dG_app_high\n\n        # Round the result to 6 decimal places and store it\n        results.append(round(ddG_app, 6))\n\n    # Format the final output string as a comma-separated list in brackets\n    output_string = \"[\" + \",\".join(map(str, results)) + \"]\"\n    print(output_string)\n\nsolve()\n```", "id": "2467125"}]}