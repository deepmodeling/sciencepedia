{"hands_on_practices": [{"introduction": "任何平面波计算的准确性都关键地取决于两个核心数值参数：动能截断 $E_{\\text{cut}}$ 和用于采样布里渊区的k点网格密度。本练习提供了一个动手实践的机会，以探索这一基本的收敛行为。通过为一个简化的硅模型编程，你将计算其带隙，并系统地研究它如何随着 $E_{\\text{cut}}$ 和k点密度的增加而变化，从而掌握进行任何可靠的固态模拟所必需的首要步骤 [@problem_id:2460283]。", "problem": "要求您研究晶体硅的间接带隙相对于平面波动能截断和晶体动量采样网格密度的收敛性。为了在保持平面波基和布拉格散射关键物理特性的同时确保计算易行性，请使用一个简化的三维近自由电子模型。该模型在简单立方布拉维晶格上施加余弦周期性势，通过布里渊区边界处的耦合来形成间接带隙。任务是实现一个完整的程序，该程序在每个晶体动量点上构建平面波基下的单电子哈密顿量，对其进行对角化以获得最低的两个能带，并将在所有采样的晶体动量点上第二能带的最小值与第一能带的最大值之差作为间接带隙的估计值。所有能量必须以电子伏特为单位报告，所有长度必须以埃为单位报告。\n\n定义和模型：\n- 设晶格常数为 $a = 5.43\\,\\text{\\AA}$。倒易晶格基矢为 $\\mathbf{b}_1 = \\frac{2\\pi}{a}\\hat{\\mathbf{x}}$，$\\mathbf{b}_2 = \\frac{2\\pi}{a}\\hat{\\mathbf{y}}$ 和 $\\mathbf{b}_3 = \\frac{2\\pi}{a}\\hat{\\mathbf{z}}$。第一布里渊区是立方体 $k_i \\in [-\\pi/a,\\pi/a)$，其中 $i \\in \\{x,y,z\\}$。\n- 电子动能为 $T(\\mathbf{q}) = \\frac{\\hbar^2 |\\mathbf{q}|^2}{2 m_e}$，其中 $\\frac{\\hbar^2}{2m_e} = 3.8099819442818976\\,\\text{eV}\\cdot\\text{\\AA}^2$。\n- 周期性势为 $V(\\mathbf{r}) = 2 V_c \\left[\\cos\\left(\\mathbf{b}_1 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_2 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_3 \\cdot \\mathbf{r}\\right)\\right]$，其傅里叶系数为 $V_{\\pm \\mathbf{b}_1} = V_{\\pm \\mathbf{b}_2} = V_{\\pm \\mathbf{b}_3} = V_c$，所有其他傅里叶系数均为零。使用 $V_c = -1.25\\,\\text{eV}$。$V(\\mathbf{r})$ 的晶胞平均值为零。\n- 对于每个晶体动量 $\\mathbf{k}$，平面波基由一组状态构成，这些状态由整数三元组 $\\mathbf{n} = (n_x,n_y,n_z)$ 索引，其波矢 $\\mathbf{q}_{\\mathbf{n}}(\\mathbf{k}) = \\mathbf{k} + n_x \\mathbf{b}_1 + n_y \\mathbf{b}_2 + n_z \\mathbf{b}_3$ 满足动能截断条件 $T\\left(\\mathbf{q}_{\\mathbf{n}}(\\mathbf{k})\\right) \\le E_{\\text{cut}}$，其中 $E_{\\text{cut}}$ 是一个以电子伏特为单位的正参数。在此基下，哈密顿量的矩阵元为\n$$\nH_{\\mathbf{n},\\mathbf{m}}(\\mathbf{k}) =\n\\begin{cases}\nT\\left(\\mathbf{q}_{\\mathbf{n}}(\\mathbf{k})\\right), & \\text{若 } \\mathbf{n} = \\mathbf{m},\\\\\nV_c, & \\text{若 } \\mathbf{n} - \\mathbf{m} \\in \\{\\pm(1,0,0), \\pm(0,1,0), \\pm(0,0,1)\\},\\\\\n0, & \\text{其他情况。}\n\\end{cases}\n$$\n\n晶体动量采样：\n- 对于整数 $N_k \\ge 1$，在第一布里渊区中以每个笛卡尔方向 $N_k$ 个点的均匀网格上进行采样，采样点位于\n$$\nk_i(j) = -\\frac{\\pi}{a} + \\frac{2\\pi}{a}\\,\\frac{j}{N_k}, \\quad j \\in \\{0,1,\\dots,N_k-1\\}, \\quad i \\in \\{x,y,z\\}.\n$$\n这将产生 $N_k^3$ 个需要计算的 $\\mathbf{k}$ 点。对于每一个这样的 $\\mathbf{k}$，使用由截断定义的基来构建 $H(\\mathbf{k})$。\n\n能带边和带隙：\n- 对于每个基中包含至少一个平面波的 $\\mathbf{k}$，设 $E_1(\\mathbf{k}) \\le E_2(\\mathbf{k}) \\le \\dots$ 为 $H(\\mathbf{k})$ 的升序排列的本征值。在至少存在一个本征值的所有 $\\mathbf{k}$ 点集合中，将价带顶定义为 $E_v = \\max_{\\mathbf{k}} E_1(\\mathbf{k})$。在至少存在两个本征值的所有 $\\mathbf{k}$ 点集合中，将导带底定义为 $E_c = \\min_{\\mathbf{k}} E_2(\\mathbf{k})$。估算的间接带隙为 $E_g = E_c - E_v$，单位为电子伏特。如果没有任何 $\\mathbf{k}$ 点具有至少两个本征值，则 $E_g$ 未定义。\n\n测试组：\n为以下参数对 $(E_{\\text{cut}}, N_k)$ 计算 $E_g$（以电子伏特为单位）：\n- 情况 1：$(6.0, 1)$。\n- 情况 2：$(6.0, 4)$。\n- 情况 3：$(8.0, 4)$。\n- 情况 4：$(12.0, 10)$。\n- 情况 5：$(20.0, 12)$。\n\n输出要求：\n- 您的程序必须生成单行输出，其中包含五个结果，以逗号分隔，并用方括号括起来，例如 `[x_1,x_2,x_3,x_4,x_5]`，其中每个 $x_i$ 是对应情况下 $E_g$ 的浮点数值（单位为电子伏特），四舍五入到 6 位小数。如果由于基组大小不足导致某个 $E_g$ 未定义，则针对该情况输出编程语言给出的非数值（not-a-number）的字符串表示形式，但不要更改列表的格式。", "solution": "该问题陈述已经过严格验证，并被认为是有效的。它具有科学依据、问题适定、客观，并包含了得出唯一可验证解所需的所有必要信息。它代表了计算凝聚态物理学中一个标准的、尽管是简化了的问题，适合用来说明使用平面波基组计算电子能带结构的原理。我们现在开始解答。\n\n基本任务是求解周期性势中单电子的定态薛定谔方程 $\\hat{H}\\psi(\\mathbf{r}) = E\\psi(\\mathbf{r})$，其中哈密顿量为 $\\hat{H} = \\hat{T} + \\hat{V} = -\\frac{\\hbar^2}{2m_e}\\nabla^2 + V(\\mathbf{r})$。势的周期性 $V(\\mathbf{r}) = V(\\mathbf{r}+\\mathbf{R})$ (对于任意正格矢 $\\mathbf{R}$) 对本征态施加了特定的结构。根据 Bloch 定理，解可以写成 $\\psi_{\\mathbf{k}}(\\mathbf{r}) = e^{i\\mathbf{k}\\cdot\\mathbf{r}}u_{\\mathbf{k}}(\\mathbf{r})$ 的形式，其中 $\\mathbf{k}$ 是第一布里渊区中的晶体动量矢量，而 $u_{\\mathbf{k}}(\\mathbf{r})$ 是一个晶胞周期函数，满足 $u_{\\mathbf{k}}(\\mathbf{r}) = u_{\\mathbf{k}}(\\mathbf{r}+\\mathbf{R})$。\n\n鉴于 $u_{\\mathbf{k}}(\\mathbf{r})$ 是周期性的，它可以展开为关于倒易晶格矢量 $\\mathbf{G}$ 的傅里叶级数：$u_{\\mathbf{k}}(\\mathbf{r}) = \\sum_{\\mathbf{G}} c_{\\mathbf{k}}(\\mathbf{G}) e^{i\\mathbf{G}\\cdot\\mathbf{r}}$。将此代入波函数的 Bloch 形式，得到平面波展开式：\n$$\n\\psi_{\\mathbf{k}}(\\mathbf{r}) = \\sum_{\\mathbf{G}} c_{\\mathbf{k}}(\\mathbf{G}) e^{i(\\mathbf{k}+\\mathbf{G})\\cdot\\mathbf{r}}\n$$\n将此展开式代入薛定谔方程，会将其转换为对于每个 $\\mathbf{k}$ 的系数 $c_{\\mathbf{k}}(\\mathbf{G})$ 的无限维矩阵本征值问题。在此平面波基 $|\\mathbf{k}+\\mathbf{G}\\rangle$ 下，哈密顿量的矩阵元由 $H_{\\mathbf{G},\\mathbf{G}'}(\\mathbf{k}) = \\langle \\mathbf{k}+\\mathbf{G} | \\hat{H} | \\mathbf{k}+\\mathbf{G}' \\rangle$ 给出。\n\n动能算符 $\\hat{T}$ 在此基下是对角的：\n$$\n\\langle \\mathbf{k}+\\mathbf{G} | \\hat{T} | \\mathbf{k}+\\mathbf{G}' \\rangle = \\frac{\\hbar^2 |\\mathbf{k}+\\mathbf{G}|^2}{2m_e} \\delta_{\\mathbf{G},\\mathbf{G}'}\n$$\n势能算符 $\\hat{V}$ 的矩阵元由势的傅里叶系数 $V(\\mathbf{r}) = \\sum_{\\mathbf{G}} V_{\\mathbf{G}} e^{i\\mathbf{G}\\cdot\\mathbf{r}}$ 决定：\n$$\n\\langle \\mathbf{k}+\\mathbf{G} | \\hat{V} | \\mathbf{k}+\\mathbf{G}' \\rangle = V_{\\mathbf{G}-\\mathbf{G}'}\n$$\n将这些结合起来，完整的哈密顿量矩阵元为：\n$$\nH_{\\mathbf{G},\\mathbf{G}'}(\\mathbf{k}) = \\frac{\\hbar^2 |\\mathbf{k}+\\mathbf{G}|^2}{2m_e} \\delta_{\\mathbf{G},\\mathbf{G}'} + V_{\\mathbf{G}-\\mathbf{G}'}\n$$\n问题指定了一个简单立方布拉维晶格，晶格常数 $a = 5.43\\,\\text{\\AA}$。倒易晶格也是简单立方的，其基矢为 $\\mathbf{b}_1 = \\frac{2\\pi}{a}\\hat{\\mathbf{x}}$，$\\mathbf{b}_2 = \\frac{2\\pi}{a}\\hat{\\mathbf{y}}$ 和 $\\mathbf{b}_3 = \\frac{2\\pi}{a}\\hat{\\mathbf{z}}$。一个通用的倒易晶格矢量是 $\\mathbf{G}_{\\mathbf{n}} = n_x \\mathbf{b}_1 + n_y \\mathbf{b}_2 + n_z \\mathbf{b}_3$，其中整数矢量为 $\\mathbf{n} = (n_x, n_y, n_z)$。\n\n周期性势为 $V(\\mathbf{r}) = 2 V_c \\left[\\cos\\left(\\mathbf{b}_1 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_2 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_3 \\cdot \\mathbf{r}\\right)\\right]$。使用 Euler 公式 $\\cos(x) = (e^{ix}+e^{-ix})/2$，我们确定其非零傅里叶系数为 $V_{\\mathbf{G}} = V_c$，其中 $\\mathbf{G} \\in \\{\\pm\\mathbf{b}_1, \\pm\\mathbf{b}_2, \\pm\\mathbf{b}_3\\}$，而对于所有其他的 $\\mathbf{G} \\ne 0$，$V_{\\mathbf{G}} = 0$。平均势 $V_{\\mathbf{G}=0}$ 为零。这意味着势仅将一个平面波 $|\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}\\rangle$ 与平面波 $|\\mathbf{k}+\\mathbf{G}_{\\mathbf{m}}\\rangle$ 耦合，其中差值 $\\mathbf{G}_{\\mathbf{n}}-\\mathbf{G}_{\\mathbf{m}}$ 是六个最短的非零倒易晶格矢量之一。这对应于条件 $\\mathbf{n}-\\mathbf{m}$ 是 $\\pm(1,0,0)$、$\\pm(0,1,0)$ 或 $\\pm(0,0,1)$ 之一。\n\n在实际计算中，无限基必须被截断。这是通过动能截断 $E_{\\text{cut}}$ 来实现的。对于每个晶体动量 $\\mathbf{k}$，我们只将那些动能低于截断值的平面波 $|\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}\\rangle$ 包含在我们的基中：\n$$\nT(\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}) = \\frac{\\hbar^2 |\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}|^2}{2m_e} \\le E_{\\text{cut}}\n$$\n这会产生一个有限维的、依赖于 $\\mathbf{k}$ 的哈密顿矩阵 $H(\\mathbf{k})$，其矩阵元正是问题陈述中指定的那些。这个矩阵的本征值 $E_1(\\mathbf{k}) \\le E_2(\\mathbf{k}) \\le \\dots$ 构成了电子能带结构。\n\n计算算法如下：\n1.  对于每组给定的参数 $(E_{\\text{cut}}, N_k)$，初始化计算。所需的物理常数为 $a = 5.43\\,\\text{\\AA}$，$\\frac{\\hbar^2}{2m_e} = 3.8099819442818976\\,\\text{eV}\\cdot\\text{\\AA}^2$ 和 $V_c = -1.25\\,\\text{eV}$。\n2.  根据规则 $k_i(j) = -\\frac{\\pi}{a} + \\frac{2\\pi}{a}\\,\\frac{j}{N_k}$（其中 $j=0, \\dots, N_k-1$），生成采样第一布里渊区的 $N_k^3$ 个晶体动量矢量 $\\mathbf{k}$ 的均匀网格。\n3.  对于网格中的每个 $\\mathbf{k}$ 矢量：\n    a. 确定满足动能截断条件的整数矢量 $\\mathbf{n} = (n_x, n_y, n_z)$ 的有限集合。这通过在足够大的整数 $\\mathbf{n}$ 的立方范围内搜索并保留满足 $T(\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}) \\le E_{\\text{cut}}$ 的那些矢量来完成。\n    b. 如果基组为空，则无法计算该 $\\mathbf{k}$ 的本征值。继续处理下一个 $\\mathbf{k}$。\n    c. 如果基非空，则构建大小为 $N_{basis} \\times N_{basis}$ 的哈密顿矩阵 $H(\\mathbf{k})$。对角元为 $H_{\\mathbf{n},\\mathbf{n}}(\\mathbf{k}) = T(\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}})$。如果 $\\mathbf{n}-\\mathbf{m}$ 是六个笛卡尔方向之一的单位矢量，则非对角元 $H_{\\mathbf{n},\\mathbf{m}}(\\mathbf{k})$ 为 $V_c$，否则为 0。\n    d. 得到的矩阵是厄米矩阵。对其进行对角化以找到其实数本征值。本征值按升序排序：$E_1(\\mathbf{k}) \\le E_2(\\mathbf{k}) \\le \\dots \\le E_{N_{basis}}(\\mathbf{k})$。\n    e. 收集第一个本征值 $E_1(\\mathbf{k})$ 以及（如果存在）第二个本征值 $E_2(\\mathbf{k})$。\n4.  在遍历所有 $\\mathbf{k}$ 点之后，确定价带顶 $E_v = \\max_{\\mathbf{k}} E_1(\\mathbf{k})$，其中最大值取自所有产生至少一个本征值的 $\\mathbf{k}$ 点。\n5.  类似地，确定导带底 $E_c = \\min_{\\mathbf{k}} E_2(\\mathbf{k})$，其中最小值取自所有产生至少两个本征值的 $\\mathbf{k}$ 点。\n6.  如果 $E_c$ 无法确定（即，没有 $\\mathbf{k}$ 点产生大小为 2 或更大的基），则带隙 $E_g$ 未定义。否则，计算间接带隙为 $E_g = E_c - E_v$。\n7.  对所有五个测试用例重复此过程，并以指定格式报告结果。这个系统化的过程确保了对所述问题有一个正确且可复现的数值解。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the indirect band gap of a model crystal using a plane-wave basis.\n    \"\"\"\n    # Physical constants and model parameters\n    A_LATTICE = 5.43  # Lattice parameter in Angstroms\n    HBAR_SQ_2ME = 3.8099819442818976  # h-bar^2 / (2*m_e) in eV * Angstrom^2\n    V_C = -1.25  # Potential strength in eV\n\n    # Reciprocal lattice vector magnitude\n    B_SCALAR = 2 * np.pi / A_LATTICE\n\n    # Test cases: (E_cut in eV, N_k)\n    test_cases = [\n        (6.0, 1),\n        (6.0, 4),\n        (8.0, 4),\n        (12.0, 10),\n        (20.0, 12),\n    ]\n\n    results = []\n    for E_cut, N_k in test_cases:\n        e1_all_k = []\n        e2_all_k = []\n\n        # Generate k-point mesh\n        k_coords_1d = -np.pi / A_LATTICE + (2 * np.pi / A_LATTICE) * np.arange(N_k) / N_k\n        kx_grid, ky_grid, kz_grid = np.meshgrid(k_coords_1d, k_coords_1d, k_coords_1d, indexing='ij')\n        k_points = np.stack([kx_grid.ravel(), ky_grid.ravel(), kz_grid.ravel()], axis=-1)\n\n        # Determine search range for integer vectors n = (nx, ny, nz)\n        # Bounding box must account for k-vector shift.\n        # |k_i| <= pi/a. We need C * (k_i + n_i*B)^2 <= E_cut.\n        # |n_i*B| <= sqrt(E_cut/C) + |k_i| <= sqrt(E_cut/C) + pi/a\n        # |n_i| <= (sqrt(E_cut/C) + pi/a) / B = a/(2pi) * sqrt(E_cut/C) + 1/2\n        n_lim = int(np.ceil((np.sqrt(E_cut / HBAR_SQ_2ME) + np.pi / A_LATTICE) / B_SCALAR))\n        n_range = np.arange(-n_lim, n_lim + 1)\n        nx_v, ny_v, nz_v = np.meshgrid(n_range, n_range, n_range, indexing='ij')\n        n_candidates = np.stack([nx_v.ravel(), ny_v.ravel(), nz_v.ravel()], axis=-1)\n\n        for k_vec in k_points:\n            # Generate basis set for the current k-point\n            G_vectors = n_candidates * B_SCALAR\n            q_vectors = k_vec + G_vectors\n            \n            kinetic_energies = HBAR_SQ_2ME * np.sum(q_vectors**2, axis=-1)\n            \n            basis_indices = np.where(kinetic_energies <= E_cut)[0]\n            \n            if basis_indices.size == 0:\n                continue\n            \n            basis_n_vectors = n_candidates[basis_indices]\n            basis_ke = kinetic_energies[basis_indices]\n            N_basis = len(basis_n_vectors)\n            \n            # Construct Hamiltonian\n            H = np.diag(basis_ke)\n            \n            # Map n-vectors to matrix indices for efficient lookup\n            n_to_idx = {tuple(n): i for i, n in enumerate(basis_n_vectors)}\n            \n            # Off-diagonal elements\n            deltas = np.array([[1,0,0], [-1,0,0], [0,1,0], [0,-1,0], [0,0,1], [0,0,-1]])\n            for i, n_i in enumerate(basis_n_vectors):\n                for delta in deltas:\n                    n_j_tuple = tuple(n_i + delta)\n                    if n_j_tuple in n_to_idx:\n                        j = n_to_idx[n_j_tuple]\n                        # Only fill upper triangle for eigh\n                        if i < j:\n                            H[i, j] = V_C\n                            H[j, i] = V_C\n\n            # Diagonalize and collect eigenvalues\n            if N_basis > 0:\n                # eigvalsh is efficient for Hermitian matrices and returns sorted eigenvalues\n                eigenvalues = np.linalg.eigvalsh(H)\n                e1_all_k.append(eigenvalues[0])\n                if N_basis >= 2:\n                    e2_all_k.append(eigenvalues[1])\n\n        # Calculate band gap for the current (E_cut, N_k) pair\n        if not e2_all_k:\n            Eg = np.nan\n        else:\n            E_v = np.max(e1_all_k)\n            E_c = np.min(e2_all_k)\n            Eg = E_c - E_v\n            \n        results.append(Eg)\n\n    # Format output as specified\n    formatted_results = []\n    for r in results:\n        if np.isnan(r):\n            formatted_results.append(\"nan\")\n        else:\n            formatted_results.append(f\"{r:.6f}\")\n\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2460283"}, {"introduction": "虽然平面波方法天然适用于完美周期性晶体，但大多数真实材料都包含杂质或空位等缺陷。本实践将介绍超胞方法，这是一种在周期性框架内模拟这类局部、非周期性特征的强大技术。你将模拟一维晶体中的单个杂质，并研究由杂质引起的能量位移如何随着超胞尺寸的增加而收敛。这个过程将帮助你理解在模拟缺陷时，如何在计算成本和减小周期性镜像间伪相互作用所需的精度之间做出权衡 [@problem_id:2460291]。", "problem": "考虑一个使用周期性边界条件和平面波基组建模的一维晶体。一个原胞晶体的晶格常数为 $a$，宿主势为 $V_{\\text{host}}(x)=V_c \\cos\\left(\\frac{2\\pi x}{a}\\right)$。通过在一个长度为 $L=Na$ 的超胞中，添加一个以 $x=0$ 为中心的局域杂质势 $V_{\\text{imp}}(x)$ 来模拟单个替代杂质，该杂质势因边界条件而以周期 $L$ 重复。该杂质势由一个振幅为 $A$、宽度为 $\\sigma$ 的高斯函数给出，即 $V_{\\text{imp}}(x) = A \\sum_{m\\in\\mathbb{Z}} \\exp\\!\\left(-\\frac{(x-mL)^2}{\\sigma^2}\\right)$。因此，超胞中的总势为 $V(x)=V_{\\text{host}}(x)+V_{\\text{imp}}(x)$。\n\n在 Hartree 原子单位制（长度单位为 bohr，能量单位为 Hartree）下，考虑一个受超胞中周期性边界条件的定态 Schrödinger 方程支配的单个无相互作用电子，\n$$\n\\hat{H} \\psi(x) = E \\psi(x), \\quad \\hat{H} = -\\frac{1}{2}\\frac{\\mathrm{d}^2}{\\mathrm{d}x^2} + V(x), \\quad \\psi(x+L)=\\psi(x).\n$$\n将 Hilbert 空间限制在 Gamma 点（晶体动量为零）的平面波上，并由动能截断 $E_{\\text{cut}}$ 进行截断。也就是说，使用基函数 $\\phi_G(x) = \\frac{1}{\\sqrt{L}} e^{i G x}$，其中倒格矢 $G=\\frac{2\\pi n}{L}$，$n$ 为整数且满足 $\\frac{1}{2}G^2 \\le E_{\\text{cut}}$。\n\n对于下方的每一组参数，计算总势为 $V(x)$ 时 $\\hat{H}$ 的最低本征值 $E_{\\text{defect}}(N,E_{\\text{cut}})$，以及仅有宿主势 $V_{\\text{host}}(x)$ 时（即 $A=0$）$\\hat{H}$ 的最低本征值 $E_{\\text{host}}(N,E_{\\text{cut}})$。报告由杂质引起的能量位移\n$$\n\\Delta E(N,E_{\\text{cut}}) = E_{\\text{defect}}(N,E_{\\text{cut}}) - E_{\\text{host}}(N,E_{\\text{cut}}),\n$$\n单位为 Hartree。研究 $\\Delta E$ 随超胞尺寸 $N$ 的收敛性。\n\n所有量都必须在 Hartree 原子单位制下处理，所有报告的能量都必须以 Hartree 为单位，并表示为十进制浮点数。\n\n使用以下参数值的测试集，其中每个元组为 $(N,E_{\\text{cut}},a,V_c,A,\\sigma)$：\n\n- 情况 1：$(4, 20.0, 1.0, 0.5, -0.4, 0.15)$\n- 情况 2：$(8, 20.0, 1.0, 0.5, -0.4, 0.15)$\n- 情况 3：$(16, 20.0, 1.0, 0.5, -0.4, 0.15)$\n- 情况 4：$(6, 20.0, 1.0, 0.5, 0.0, 0.15)$\n\n您的程序应生成单行输出，其中包含按上述情况顺序排列的结果，结果为逗号分隔的列表，并用方括号括起来。例如，格式必须与 `[dE_1,dE_2,dE_3,dE_4]` 完全一样，其中每个 `dE_i` 是一个以 Hartree 为单位的浮点数。不得打印任何其他文本。", "solution": "所提出的问题是计算固态物理中的一个标准练习，具体来说是应用平面波基组求解带有一个杂质的一维周期性系统的定态 Schrödinger 方程。该问题具有科学依据，提法明确，且所有必要的参数均已提供。因此，可以构建一个解。\n\n控制方程是 Hartree 原子单位制下的一维单电子 Schrödinger 方程（$\\hbar = 1, m_e = 1, e=1, 4\\pi\\epsilon_0=1$）：\n$$\n\\hat{H} \\psi(x) = \\left( -\\frac{1}{2}\\frac{\\mathrm{d}^2}{\\mathrm{d}x^2} + V(x) \\right) \\psi(x) = E \\psi(x)\n$$\n计算在长度为 $L = N a$ 的超胞内进行，并施加周期性边界条件 $\\psi(x+L)=\\psi(x)$。总势为 $V(x) = V_{\\text{host}}(x) + V_{\\text{imp}}(x)$。\n\n我们将波函数 $\\psi(x)$ 在平面波基组中展开。由于问题指定在 Gamma 点（晶体动量 $k=0$）进行计算，基函数是超胞的倒格矢：\n$$\n\\phi_G(x) = \\frac{1}{\\sqrt{L}} e^{i G x}, \\quad \\text{其中} \\quad G = \\frac{2\\pi n}{L} \\quad \\text{对于 } n \\in \\mathbb{Z}\n$$\n展开式为 $\\psi(x) = \\sum_{G} c_G \\phi_G(x)$。这将微分形式的 Schrödinger 方程转换为在平面波系数 $\\{c_G\\}$ 基下的矩阵本征值问题。哈密顿矩阵元为 $H_{G', G} = \\langle \\phi_{G'} | \\hat{H} | \\phi_G \\rangle$。\n\nHilbert 空间由动能截断 $E_{\\text{cut}}$ 进行截断，这将基函数集限制为动能满足 $\\frac{1}{2}G^2 \\le E_{\\text{cut}}$ 的那些函数。这意味着：\n$$\n\\frac{1}{2} \\left(\\frac{2\\pi n}{L}\\right)^2 \\le E_{\\text{cut}} \\implies |n| \\le \\frac{L}{\\pi}\\sqrt{\\frac{E_{\\text{cut}}}{2}}\n$$\n令 $n_{\\text{max}} = \\lfloor \\frac{L}{\\pi}\\sqrt{\\frac{E_{\\text{cut}}}{2}} \\rfloor$。基组将由整数指标 $n$ 从 $-n_{\\text{max}}$ 到 $n_{\\text{max}}$ 的平面波组成，从而得到一个大小为 $N_b = 2n_{\\text{max}}+1$ 的基组。\n\n哈密顿矩阵元 $H_{G', G}$ 是动能和势能矩阵元的和：\n$$\nH_{G', G} = \\langle \\phi_{G'} | -\\frac{1}{2}\\frac{\\mathrm{d}^2}{\\mathrm{d}x^2} | \\phi_G \\rangle + \\langle \\phi_{G'} | V(x) | \\phi_G \\rangle\n$$\n\n动能算符在平面波基中是对角的：\n$$\nT_{G', G} = \\langle \\phi_{G'} | \\frac{1}{2}G^2 | \\phi_G \\rangle = \\frac{1}{2}G^2 \\delta_{G',G}\n$$\n在我们的整数指标网格上，这变为 $T_{n', n} = \\frac{1}{2}\\left(\\frac{2\\pi n}{L}\\right)^2 \\delta_{n',n}$。\n\n势能矩阵元由势的傅里叶变换给出：\n$$\nV_{G', G} = \\frac{1}{L} \\int_0^L e^{-iG'x} V(x) e^{iGx} dx = \\frac{1}{L} \\int_0^L V(x) e^{i(G-G')x} dx = V_{G'-G}\n$$\n其中 $V_{K}$ 是 $V(x)$ 对于波矢 $K = G'-G$ 的傅里叶系数。由于总势是一个和，其傅里叶系数是其各部分系数的和：$V_{G'-G} = V_{\\text{host}, G'-G} + V_{\\text{imp}, G'-G}$。\n\n对于宿主势 $V_{\\text{host}}(x)=V_c \\cos\\left(\\frac{2\\pi x}{a}\\right) = \\frac{V_c}{2}\\left( e^{i\\frac{2\\pi x}{a}} + e^{-i\\frac{2\\pi x}{a}} \\right)$，其傅里叶系数仅在波矢 $K = \\pm \\frac{2\\pi}{a}$ 时非零。矩阵元 $V_{\\text{host}, G'-G}$ 在 $G'-G = \\pm \\frac{2\\pi}{a}$ 时非零。用整数指标表示：\n$$\n\\frac{2\\pi n'}{L} - \\frac{2\\pi n}{L} = \\pm \\frac{2\\pi}{a} \\implies \\frac{n'-n}{Na} = \\pm \\frac{1}{a} \\implies n'-n = \\pm N\n$$\n因此，如果 $n'-n = \\pm N$，则 $V_{\\text{host}, n', n} = \\frac{V_c}{2}$，否则为 $0$。\n\n对于杂质势 $V_{\\text{imp}}(x) = A \\sum_{m\\in\\mathbb{Z}} \\exp\\!\\left(-\\frac{(x-mL)^2}{\\sigma^2}\\right)$，其对于波矢 $K$ 的傅里叶系数可以通过在一个周期内积分得到：\n$$\nV_{\\text{imp}, K} = \\frac{1}{L} \\int_{-\\infty}^{\\infty} A \\exp\\left(-\\frac{x^2}{\\sigma^2}\\right) e^{-iKx} dx = \\frac{A}{L} \\left( \\sigma\\sqrt{\\pi} \\exp\\left(-\\frac{K^2\\sigma^2}{4}\\right) \\right)\n$$\n这是通过认识到平移高斯函数之和是一个周期函数，且其在一个周期内的傅里叶系数积分等于单个高斯函数的傅里叶变换而推导出来的。代入 $K=G'-G=\\frac{2\\pi(n'-n)}{L}$，杂质势矩阵元为：\n$$\nV_{\\text{imp}, n', n} = \\frac{A \\sigma\\sqrt{\\pi}}{L} \\exp\\left(-\\frac{1}{4}\\left(\\frac{2\\pi(n'-n)}{L}\\right)^2 \\sigma^2 \\right)\n$$\n由于势 $V_{\\text{host}}(x)$ 和 $V_{\\text{imp}}(x)$ 都是实偶函数，因此得到的哈密顿矩阵是实对称的。\n\n对于每个测试用例，算法流程如下：\n1. 通过计算 $n_{\\text{max}}$ 来定义基组。\n2. 构建大小为 $(2n_{\\text{max}}+1) \\times (2n_{\\text{max}}+1)$ 的宿主哈密顿矩阵 $H_{\\text{host}}$。其矩阵元为 $H_{\\text{host}, n', n} = T_{n', n} + V_{\\text{host}, n', n}$。\n3. 通过将杂质势矩阵加到宿主哈密顿矩阵上，构建缺陷哈密顿矩阵 $H_{\\text{defect}}$：$H_{\\text{defect}, n', n} = H_{\\text{host}, n', n} + V_{\\text{imp}, n', n}$。\n4. 对两个实对称矩阵进行数值对角化以求得其本征值。每个系统的最低本征值 $E_{\\text{host}}$ 和 $E_{\\text{defect}}$ 即为基态能量。\n5. 杂质引起的能量位移为 $\\Delta E = E_{\\text{defect}} - E_{\\text{host}}$。对于情况4，$A=0$，因此 $V_{\\text{imp}}=0$，从而 $\\Delta E$ 必须为 $0$。这可以作为对该方法的验证。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function to process test cases and print results.\n    \"\"\"\n    test_cases = [\n        (4, 20.0, 1.0, 0.5, -0.4, 0.15),\n        (8, 20.0, 1.0, 0.5, -0.4, 0.15),\n        (16, 20.0, 1.0, 0.5, -0.4, 0.15),\n        (6, 20.0, 1.0, 0.5, 0.0, 0.15),\n    ]\n\n    results = []\n    for case in test_cases:\n        N, E_cut, a, V_c, A, sigma = case\n        \n        # Calculate lowest eigenvalues for the defect and host systems.\n        E_defect = calculate_lowest_eigenvalue(N, E_cut, a, V_c, A, sigma)\n        E_host = calculate_lowest_eigenvalue(N, E_cut, a, V_c, 0.0, sigma)\n        \n        # Calculate the impurity-induced energy shift.\n        delta_E = E_defect - E_host\n        results.append(delta_E)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.12f}' for r in results)}]\")\n\ndef calculate_lowest_eigenvalue(N, E_cut, a, V_c, A, sigma):\n    \"\"\"\n    Calculates the lowest eigenvalue of the Hamiltonian for a given set of parameters.\n    The parameter A (impurity amplitude) determines whether it is a defect (A != 0)\n    or host (A = 0) calculation.\n    \"\"\"\n    # 1. Define the supercell and basis set parameters\n    L = N * a\n    \n    # Determine the range of integer indices n for the plane-wave basis\n    # based on the kinetic energy cutoff E_cut.\n    n_max = int(np.floor((L / np.pi) * np.sqrt(E_cut / 2.0)))\n    basis_size = 2 * n_max + 1\n    \n    # Array of integer indices for G vectors: n = -n_max, ..., n_max\n    n_indices = np.arange(-n_max, n_max + 1)\n\n    # 2. Construct the Hamiltonian matrix\n    H = np.zeros((basis_size, basis_size), dtype=float)\n\n    # 2a. Kinetic Energy Term (diagonal)\n    # G_n = 2*pi*n/L. T = 0.5 * G_n^2\n    G_vals = 2.0 * np.pi * n_indices / L\n    T_matrix_diag = 0.5 * G_vals**2\n    H += np.diag(T_matrix_diag)\n\n    # 2b. Host Potential Term (off-diagonal)\n    # V_host couples states n and n' where |n - n'| = N.\n    # In matrix indices (i,j), this means |i-j| = N.\n    if V_c != 0.0:\n        for i in range(basis_size):\n            if i + N < basis_size:\n                H[i, i + N] += V_c / 2.0\n                H[i + N, i] += V_c / 2.0\n\n    # 2c. Impurity Potential Term (dense matrix)\n    # This term is added only if the impurity amplitude A is non-zero.\n    if A != 0.0:\n        # Create a matrix of index differences (j - i) using broadcasting\n        # This corresponds to n' - n for matrix element H[j, i]\n        matrix_indices = np.arange(basis_size)\n        diff_n_matrix = matrix_indices[:, None] - matrix_indices[None, :]\n        \n        # K = G' - G = 2*pi*(n'-n)/L\n        K_matrix = 2.0 * np.pi * diff_n_matrix / L\n        \n        # V_imp(K) = (A * sigma * sqrt(pi) / L) * exp(-K^2 * sigma^2 / 4)\n        V_imp_matrix = (A * sigma * np.sqrt(np.pi) / L) * \\\n                       np.exp(-K_matrix**2 * sigma**2 / 4.0)\n        \n        H += V_imp_matrix\n\n    # 3. Diagonalize the Hamiltonian\n    # Since H is a real symmetric matrix, np.linalg.eigh is efficient\n    # and returns sorted eigenvalues.\n    eigenvalues = np.linalg.eigh(H)[0]\n    \n    # The lowest eigenvalue is the first element.\n    return eigenvalues[0]\n\nsolve()\n```", "id": "2460291"}, {"introduction": "平面波方法不仅限于固体；通过将分子放置在一个施加周期性边界条件的大模拟盒子中，它也广泛用于研究孤立体系。然而，这种方法会引入分子与其周期性镜像之间的伪相互作用，对于极性分子尤其如此。本练习应用一个简单而有效的模型来量化这种伪静电相互作用能，并展示它如何随着盒子尺寸 $L$ 的增加而减小，为校正这些有限尺寸效应提供了关键的洞见 [@problem_id:2460290]。", "problem": "要求您对一个中性极性分子在总能量中的有限尺寸误差进行建模。该分子在平面波基组中表示，采用三维周期性边界条件（PBC）和导电外部边界条件，这在许多密度泛函理论（DFT）计算中被使用。考虑一个单一水分子，其气相永久偶极矩大小为 $\\mu = 1.8546$ Debye，在空间中任意取向。该分子被放置在边长为 $L$ 的立方模拟晶胞的中心，并通过PBC进行周期性复制。假设系统整体呈电中性，且偶极子以外的高阶多极矩可以忽略不计。重点关注渐近区域，在该区域中，周期性镜像之间的领头阶相互作用主导了能量的伪影贡献。\n\n您的任务是，对于每个指定的盒子尺寸 $L$，计算相对于孤立分子极限，领头阶的伪影偶极-偶极镜像相互作用对总能量的贡献。以电子伏特为单位，作为非负实数报告这些能量。您必须以电子伏特表示所有最终能量，并四舍五入到八位小数。\n\n使用以下以埃为单位的立方盒子尺寸测试套件：\n- $6.0$\n- $10.0$\n- $12.0$\n- $20.0$\n- $100.0$\n\n输出规格：\n- 您的程序必须生成单行输出，其中包含一个Python风格的列表，内含按上述顺序排列的五个能量值，每个值都四舍五入到八位小数，并用逗号分隔，不含空格。例如：`[E_1,E_2,E_3,E_4,E_5]`，其中每个 `E_i` 是一个十进制格式的浮点数，单位为电子伏特。\n- 程序打印的唯一一行必须是此列表。\n\n物理单位要求：\n- 边长 $L$ 以埃为单位给出。\n- 能量必须以电子伏特为单位输出，并四舍五入到八位小数。\n- 不涉及角度。\n\n模型中使用的假设：\n- 水分子是中性的，其永久偶极矩大小为 $\\mu = 1.8546$ Debye。\n- 模拟晶胞是一个体积为 $\\Omega = L^3$ 的立方体，具有三维PBC和导电外部边界。\n- 仅考虑与净偶极矩相关的领头阶周期性镜像相互作用项；所有高阶项均被忽略。\n- 能量应报告为由于周期性镜像而超出孤立分子极限的过剩能量，这是一个取决于 $L$ 的非负标量。\n\n您的程序应生成一行输出，其中包含一个用方括号括起来的逗号分隔列表的结果（例如，`[result_1,result_2,result_3,result_4,result_5]`）。", "solution": "问题陈述已经过严格评估，并被认为是有效的。它具有科学依据、问题明确、客观，并包含得出唯一且有意义解所需的所有信息。该问题涉及计算材料科学中一个标准且重要的主题：修正采用周期性边界条件（PBC）的模拟中的有限尺寸误差。我们现在将进行正式求解。\n\n该问题要求计算一个具有永久偶极矩 $\\vec{\\mu}$ 的中性分子，在三维PBC和导电外部边界条件下，被置于边长为 $L$ 的立方模拟晶胞中时，其领头阶的伪影静电能量贡献。这种伪影能量源于中心偶极子与其周期性镜像之间的人为相互作用。\n\n在偶极子晶格的Ewald求和框架下，长程静电相互作用是条件收敛的。其值取决于所模拟晶体的宏观形状和周围介质的介电性质。问题指明了“导电外部边界条件”，这对应于将宏观样本嵌入一个介电常数无限大（$\\epsilon \\to \\infty$）的介质中。对于具有净偶极矩密度的系统，这种特定的边界条件会产生一个非零的退极化场。在这些条件下，偶极子与此场及其所有镜像的相互作用能由以下公认的公式给出：\n\n$$\nU = -\\frac{2\\pi}{3\\Omega} |\\vec{\\mu}|^2\n$$\n\n在这里，$\\Omega = L^3$ 是立方模拟晶胞的体积，而 $|\\vec{\\mu}|$ 是偶极矩的大小。这个能量 $U$ 代表了由于在导电背景中与周期性镜像的伪影吸引相互作用而导致的系统总能量的降低。所要求的量是“超出孤立分子极限的过剩能量”，也就是必须加到计算出的PBC能量上以近似孤立分子能量的校正项 $\\Delta E$。因此，该校正项是非负的：\n\n$$\n\\Delta E = -U = \\frac{2\\pi \\mu^2}{3 L^3}\n$$\n\n计算必须使用一套一致的单位。给定的数据是混合单位：偶极矩 $\\mu$ 以德拜（D）为单位，盒长 $L$ 以埃（$\\text{Å}$）为单位，最终能量必须以电子伏特（eV）为单位。这需要进行系统的单位转换。最直接的方法是将所有量转换为哈特里原子单位（a.u.），在该单位制下公式最简单，然后将最终能量从哈特里转换为电子伏特。\n\n使用的基本常数和转换因子如下：\n- 偶极矩大小：$\\mu = 1.8546$ D\n-\n- 从德拜到原子单位偶极矩（$e \\cdot a_0$）的转换：$1$ D $\\approx 0.393430307$ a.u.\n- 从埃到原子单位长度（玻尔半径, $a_0$）的转换：$1$ $\\text{Å}$ $\\approx 1.8897261246$ a.u.\n- 从哈特里（$E_h$）到电子伏特（eV）的转换：$1$ $E_h \\approx 27.211386246$ eV\n\n首先，我们将给定的偶极矩大小转换为原子单位：\n$$\n\\mu_{\\text{a.u.}} = 1.8546 \\text{ D} \\times 0.393430307 \\frac{\\text{a.u.}}{\\text{D}} \\approx 0.7297926 \\text{ a.u.}\n$$\n\n接下来，我们用原子单位表示盒长 $L$。对于给定的以埃为单位的值 $L_{\\text{Å}}$：\n$$\nL_{\\text{a.u.}} = L_{\\text{Å}} \\times 1.8897261246 \\frac{\\text{a.u.}}{\\text{Å}}\n$$\n\n将这些代入能量公式，得到以哈特里为单位的能量校正：\n$$\n\\Delta E_{E_h} = \\frac{2\\pi \\mu_{\\text{a.u.}}^2}{3 L_{\\text{a.u.}}^3} = \\frac{2\\pi (0.7297926)^2}{3 (L_{\\text{Å}} \\times 1.8897261246)^3}\n$$\n\n最后，我们将此能量转换为电子伏特：\n$$\n\\Delta E_{\\text{eV}} = \\Delta E_{E_h} \\times 27.211386246 \\frac{\\text{eV}}{E_h}\n$$\n\n结合这些步骤，我们可以定义一个单一的数值常数 $C$，使得 $\\Delta E_{\\text{eV}} = C / L_{\\text{Å}}^3$：\n$$\nC = \\frac{2\\pi \\mu^2_{\\text{a.u.}}}{3} \\times \\frac{1}{\\left(1.8897261246 \\frac{\\text{a.u.}}{\\text{Å}}\\right)^3} \\times 27.211386246 \\frac{\\text{eV}}{E_h}\n$$\n$$\nC = \\frac{2\\pi (0.7297926)^2}{3} \\times \\frac{27.211386246}{(1.8897261246)^3} \\text{ eV} \\cdot \\text{Å}^3 \\approx 4.5003362 \\text{ eV} \\cdot \\text{Å}^3\n$$\n\n因此，每个盒长 $L_{\\text{Å}}$ 的能量校正计算如下：\n$$\n\\Delta E(L_{\\text{Å}}) = \\frac{4.5003362}{L_{\\text{Å}}^3} \\text{ eV}\n$$\n\n我们现在将此公式应用于指定的测试案例，并将最终结果四舍五入到八位小数。\n\n1. 对于 $L = 6.0$ $\\text{Å}$:\n    $\\Delta E = \\frac{4.5003362}{(6.0)^3} = \\frac{4.5003362}{216.0} \\approx 0.0208348898$ eV $\\to 0.02083489$ eV\n\n2. 对于 $L = 10.0$ $\\text{Å}$:\n    $\\Delta E = \\frac{4.5003362}{(10.0)^3} = \\frac{4.5003362}{1000.0} \\approx 0.0045003362$ eV $\\to 0.00450034$ eV\n\n3. 对于 $L = 12.0$ $\\text{Å}$:\n    $\\Delta E = \\frac{4.5003362}{(12.0)^3} = \\frac{4.5003362}{1728.0} \\approx 0.0026043612$ eV $\\to 0.00260436$ eV\n\n4. 对于 $L = 20.0$ $\\text{Å}$:\n    $\\Delta E = \\frac{4.5003362}{(20.0)^3} = \\frac{4.5003362}{8000.0} \\approx 0.0005625420$ eV $\\to 0.00056254$ eV\n\n5. 对于 $L = 100.0$ $\\text{Å}$:\n    $\\Delta E = \\frac{4.5003362}{(100.0)^3} = \\frac{4.5003362}{1000000.0} \\approx 0.0000045003$ eV $\\to 0.00000450$ eV\n\n这些计算出的值将被格式化为指定的输出列表。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the leading-order spurious dipole-dipole interaction energy\n    for a polar molecule in a cubic box with periodic boundary conditions.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Box edge lengths L in angstroms.\n    test_cases = [6.0, 10.0, 12.0, 20.0, 100.0]\n\n    # --- Givens and Constants ---\n    # Dipole moment of water molecule in Debye.\n    mu_D = 1.8546\n\n    # --- Conversion Factors (CODATA 2018 recommendations where applicable) ---\n    # 1 Debye to a.u. of dipole moment (e*a0).\n    # Based on 1 D = 3.33564095e-30 C*m and e*a0 = 1.602176634e-19 C * 0.529177210903e-10 m.\n    DEBYE_TO_AU_DIPOLE = 0.393430307\n\n    # 1 Angstrom to a.u. of length (Bohr, a0).\n    # Based on 1 Angstrom = 1e-10 m and a0 = 0.529177210903e-10 m.\n    ANGSTROM_TO_AU_LENGTH = 1.8897261246\n\n    # 1 Hartree to electronvolts (eV).\n    HARTREE_TO_EV = 27.211386245988\n\n    # --- Calculation ---\n    # Convert dipole moment to atomic units.\n    mu_au = mu_D * DEBYE_TO_AU_DIPOLE\n\n    results = []\n    for L_A in test_cases:\n        # Convert box length L from angstroms to atomic units.\n        L_au = L_A * ANGSTROM_TO_AU_LENGTH\n\n        # The formula for the leading-order energy correction in atomic units (Hartrees) is:\n        # E = (2 * pi * mu^2) / (3 * L^3)\n        # This is the correction to be added to the PBC total energy to get the isolated molecule energy.\n        energy_hartree = (2 * np.pi * mu_au**2) / (3 * L_au**3)\n\n        # Convert energy from Hartrees to electronvolts.\n        energy_ev = energy_hartree * HARTREE_TO_EV\n\n        # The problem requires non-negative energies rounded to 8 decimal places.\n        results.append(round(energy_ev, 8))\n\n    # Format the results into the required string format \"[E1,E2,E3,E4,E5]\".\n    # Using 'f-string' with a format specifier for floating point numbers.\n    # The '.8f' ensures 8 digits after the decimal point.\n    result_str = \",\".join([f\"{res:.8f}\" for res in results])\n    \n    # Final print statement in the exact required format.\n    print(f\"[{result_str}]\")\n\nsolve()\n\n```", "id": "2460290"}]}