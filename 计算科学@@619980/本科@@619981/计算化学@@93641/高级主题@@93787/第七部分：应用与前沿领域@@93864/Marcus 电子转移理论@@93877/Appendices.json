{"hands_on_practices": [{"introduction": "马库斯理论的核心在于其对电子转移活化能的简洁而深刻的描述。这个练习将让你直接应用经典的马库斯方程来计算一个具体反应的活化吉布斯自由能（$ \\Delta G^\\ddagger $）。通过这个计算，你将亲身体验重组能（$ \\lambda $）和反应驱动力（$ \\Delta G^\\circ $）是如何共同决定电子转移反应能垒高度的，这是理解和预测反应速率的第一步。[@problem_id:1496932]", "problem": "在一个简化的生物电子传递链模型中，一个关键步骤涉及到在嵌入蛋白质基质中的两个固定的氧化还原中心 A 和 B 之间转移一个电子。对于反应 $\\text{A}_{\\text{red}} + \\text{B}_{\\text{ox}} \\rightarrow \\text{A}_{\\text{ox}} + \\text{B}_{\\text{red}}$，其标准吉布斯自由能变为 $\\Delta G^\\circ = -25.0$ kJ/mol。由于蛋白质和周围溶剂分子为适应电荷重新分布而进行必要的结构重排，该过程的重组能估计为 $\\lambda = 115.0$ kJ/mol。使用经典马库斯理论 (Marcus theory) 中关于外层电子转移活化自由能的表达式，计算此正向电子转移步骤的活化自由能 $\\Delta G^\\ddagger$。\n\n以 kJ/mol 为单位表示您的答案，保留三位有效数字。", "solution": "对于经典的外层电子转移，马库斯理论给出的活化自由能为\n$$\n\\Delta G^{\\ddagger}=\\frac{\\lambda}{4}\\left(1+\\frac{\\Delta G^{\\circ}}{\\lambda}\\right)^{2}=\\frac{(\\lambda+\\Delta G^{\\circ})^{2}}{4\\lambda}.\n$$\n当 $\\Delta G^{\\circ}=-25.0\\,\\text{kJ/mol}$ 且 $\\lambda=115.0\\,\\text{kJ/mol}$ 时，计算无量纲项：\n$$\n1+\\frac{\\Delta G^{\\circ}}{\\lambda}=1-\\frac{25.0}{115.0}=1-\\frac{5}{23}=\\frac{18}{23}.\n$$\n代入马库斯表达式：\n$$\n\\Delta G^{\\ddagger}=\\frac{\\lambda}{4}\\left(\\frac{18}{23}\\right)^{2}=\\frac{115.0}{4}\\cdot\\frac{324}{529}=115.0\\cdot\\frac{81}{529}=\\frac{5\\cdot 23\\cdot 81}{23^{2}}=\\frac{405}{23}\\,\\text{kJ/mol}.\n$$\n数值上，$\\frac{405}{23}=17.608695652\\ldots$，保留三位有效数字为 $17.6$ kJ/mol。", "answer": "$$\\boxed{17.6}$$", "id": "1496932"}, {"introduction": "在掌握了如何计算单个反应的活化能之后，下一步是理解不同反应在动力学上的分类。马库斯理论预言了三种独特的动力学区域：正常区、无垒区和反转区，这取决于驱动力（$ \\Delta G^\\circ $）和重组能（$ \\lambda $）之间的相对大小。这个练习将挑战你根据给定的热力学参数，将一系列反应归入这些区域，从而加深你对马库斯理论非直观预测（尤其是奇特的“反转区”）的理解。[@problem_id:1496869]", "problem": "Marcus电子转移理论为理解外层电子转移反应的速率提供了一个框架，这些反应是化学和生物学中的基本过程。该理论将反应的活化能 $\\Delta G^\\ddagger$ 与两个关键参数联系起来：反应的标准吉布斯自由能 $\\Delta G^\\circ$ 和重组能 $\\lambda$。重组能代表了在电子尚未实际转移的情况下，将反应物和周围溶剂的结构扭曲到产物构型所需的能量代价。\n\n根据 $\\Delta G^\\circ$ 和 $\\lambda$ 的相对大小，电子转移反应可以分为三个不同的动力学区域：正常区、无垒区和倒置区。\n\n考虑在恒温恒压下以下四个独立的放能电子转移反应。它们的反应标准吉布斯自由能和重组能的值如下所示。\n\n- **反应 I**: $\\Delta G^\\circ = -50$ kJ/mol, $\\lambda = 120$ kJ/mol\n- **反应 II**: $\\Delta G^\\circ = -150$ kJ/mol, $\\lambda = 80$ kJ/mol\n- **反应 III**: $\\Delta G^\\circ = -100$ kJ/mol, $\\lambda = 100$ kJ/mol\n- **反应 IV**: $\\Delta G^\\circ = -90$ kJ/mol, $\\lambda = 95$ kJ/mol\n\n根据Marcus理论，将这四个反应分别归类为正常区、无垒区或倒置区。下列哪个选项正确表示了所有四个反应的分类？\n\nA. 反应 I: 正常区, 反应 II: 倒置区, 反应 III: 无垒区, 反应 IV: 倒置区\n\nB. 反应 I: 倒置区, 反应 II: 正常区, 反应 III: 无垒区, 反应 IV: 正常区\n\nC. 反应 I: 正常区, 反应 II: 倒置区, 反应 III: 无垒区, 反应 IV: 正常区\n\nD. 反应 I: 正常区, 反应 II: 正常区, 反应 III: 倒置区, 反应 IV: 无垒区\n\nE. 反应 I: 无垒区, 反应 II: 正常区, 反应 III: 倒置区, 反应 IV: 倒置区", "solution": "Marcus理论给出的外层电子转移活化自由能为\n$$\n\\Delta G^{\\ddagger}=\\frac{(\\lambda+\\Delta G^{\\circ})^{2}}{4\\lambda}.\n$$\n由此，通过设置 $\\Delta G^{\\ddagger}=0$ 可得到无垒条件，这意味着 $\\lambda+\\Delta G^{\\circ}=0$，因此 $\\Delta G^{\\circ}=-\\lambda$。对于放能反应（$\\Delta G^{\\circ}<0$），动力学区域因此为：\n- 正常区：$-\\lambda<\\Delta G^{\\circ}<0$（放能程度增加会降低能垒）。\n- 无垒区：$\\Delta G^{\\circ}=-\\lambda$。\n- 倒置区：$\\Delta G^{\\circ}<-\\lambda$（放能程度进一步增加会增高能垒）。\n\n通过比较 $\\Delta G^{\\circ}$ 与 $-\\lambda$，将这些不等式应用于每个反应：\n反应 I：$\\Delta G^{\\circ}=-50$ 且 $-\\lambda=-120$，因此 $-\\lambda<\\Delta G^{\\circ}<0$；正常区。\n反应 II：$\\Delta G^{\\circ}=-150$ 且 $-\\lambda=-80$，因此 $\\Delta G^{\\circ}<-\\lambda$；倒置区。\n反应 III：$\\Delta G^{\\circ}=-100$ 且 $-\\lambda=-100$，因此 $\\Delta G^{\\circ}=-\\lambda$；无垒区。\n反应 IV：$\\Delta G^{\\circ}=-90$ 且 $-\\lambda=-95$，因此 $-\\lambda<\\Delta G^{\\circ}<0$；正常区。\n\n这与选项C相符。", "answer": "$$\\boxed{C}$$", "id": "1496869"}, {"introduction": "理论的最终检验在于实践，而对于计算化学而言，这种实践通常意味着编写代码来进行数值模拟。这个高阶练习将引导你通过编程来系统地计算在一系列不同驱动力（$ \\Delta G^\\circ $）下电子转移的速率常数。你将不仅仅是接受马库斯反转区的概念，而是通过计算亲自“发现”它，直观地看到反应速率如何随驱动力的增加先上升后下降，这正是马库斯理论最具标志性的成果之一。[@problem_id:2457516]", "problem": "一个给体-受体电子转移过程通过两个谐振自由能面进行建模，这两个能面沿着一个单一的无量纲溶剂坐标 $q$ 展开，且具有相同的曲率 $\\kappa$，其中给体能面由 $G_{\\mathrm{D}}(q)=\\tfrac{1}{2}\\kappa(q-q_{\\mathrm{D}})^{2}$ 给出，受体能面由 $G_{\\mathrm{A}}(q)=\\tfrac{1}{2}\\kappa(q-q_{\\mathrm{A}})^{2}+\\Delta G^\\circ$ 给出。重组能为 $\\lambda=\\tfrac{1}{2}\\kappa(q_{\\mathrm{A}}-q_{\\mathrm{D}})^{2}$。考虑一个固定的给体-受体对，在恒定的电子耦合 $V$ 和温度 $T$ 下，其电子转移处于非绝热、高温和经典极限下。根据需要使用约化普朗克常数 $\\hbar$ 和玻尔兹曼常数 $k_{\\mathrm{B}}$。所有能量都必须以电子伏特为单位处理。\n\n给定给体-受体对的以下固定参数值：\n- 重组能 $\\lambda = 0.6\\,\\mathrm{eV}$。\n- 电子耦合 $V = 0.01\\,\\mathrm{eV}$。\n- 温度 $T = 298.15\\,\\mathrm{K}$。\n- 谐振曲率 $\\kappa = 1.0\\,\\mathrm{eV}$ 每平方无量纲坐标单位 (您可以假设 $q_{\\mathrm{D}}=0$，这通过 $\\lambda$ 和 $\\kappa$ 固定了 $q_{\\mathrm{A}}$)。\n- 常数：$k_{\\mathrm{B}} = 8.617333262145\\times 10^{-5}\\,\\mathrm{eV\\,K^{-1}}$，$\\hbar = 6.582119569\\times 10^{-16}\\,\\mathrm{eV\\,s}$。\n\n对于这个固定的给体-受体对，扫描以下测试集中的驱动力值 $\\Delta G^\\circ$ (单位为电子伏特)：$\\left[-1.8,-1.2,-0.6,0.0,0.6,1.2\\right]$。对于此集合中的每个 $\\Delta G^\\circ$，在所述假设下，仅使用所提供的物理定义和基本原理，计算以秒的倒数为单位的非绝热电子转移速率常数。将每个速率四舍五入至 $6$ 位有效数字，并以 $\\mathrm{s^{-1}}$ 为单位表示。\n\n设计您的程序，使其生成单行输出，包含一个无空格、由逗号分隔、并用方括号括起来的列表，该列表按上述顺序列出了整个测试集的所有结果，其后跟着两个附加项：\n- 在 $6$ 个四舍五入的速率常数之后，附加一个整数，该整数等于列表中最大速率出现的从0开始的索引。\n- 在该整数之后，附加一个布尔值，如果 $\\Delta G^\\circ=-1.2\\,\\mathrm{eV}$ 时的速率严格小于 $\\Delta G^\\circ=-0.6\\,\\mathrm{eV}$ 时的速率，则为 $\\mathrm{True}$，否则为 $\\mathrm{False}$。\n\n因此，如果速率按照给定测试集的顺序为 $k_{0},k_{1},k_{2},k_{3},k_{4},k_{5}$，则输出格式必须是单行\n[$k_{0},k_{1},k_{2},k_{3},k_{4},k_{5},i_{\\max},\\mathrm{flag}$]\n其中每个 $k_{i}$ 四舍五入到 $6$ 位有效数字，单位为 $\\mathrm{s^{-1}}$，$i_{\\max}$ 是最大 $k_{i}$ 的从0开始的索引，$\\mathrm{flag}$ 是上面定义的布尔值。输出必须不含空格，并以指定单位表示。", "solution": "问题陈述为基于经典马库斯理论计算电子转移速率提供了一个明确定义的场景。该问题在化学和物理上是合理的，内容自洽，并且所有参数都以一致的单位给出。因此，该问题是有效的。\n\n电子转移过程涉及从给体态 $\\mathrm{D}$ 到受体态 $\\mathrm{A}$ 的跃迁。这些状态的自由能被建模为集体溶剂坐标 $q$ 的谐振函数：\n$$ G_{\\mathrm{D}}(q) = \\frac{1}{2}\\kappa(q-q_{\\mathrm{D}})^{2} $$\n$$ G_{\\mathrm{A}}(q) = \\frac{1}{2}\\kappa(q-q_{\\mathrm{A}})^{2} + \\Delta G^\\circ $$\n其中 $G_{\\mathrm{D}}(q)$ 和 $G_{\\mathrm{A}}(q)$ 是初态和末态的自由能，$\\kappa$ 是谐振曲率，$q_{\\mathrm{D}}$ 和 $q_{\\mathrm{A}}$ 是平衡溶剂坐标，$\\Delta G^\\circ$ 是反应的标准自由能变，或称驱动力。\n\n在非绝热、高温和经典极限下，电子转移速率常数 $k_{\\mathrm{ET}}$ 由马库斯方程给出，该方程源自费米黄金定则 (Fermi's Golden Rule)：\n$$ k_{\\mathrm{ET}} = \\frac{2\\pi}{\\hbar} |V|^2 \\frac{1}{\\sqrt{4\\pi \\lambda k_{\\mathrm{B}} T}} \\exp\\left( -\\frac{(\\Delta G^\\circ + \\lambda)^2}{4 \\lambda k_{\\mathrm{B}} T} \\right) $$\n此基本方程中的各项为：\n- $\\hbar$：约化普朗克常数。\n- $V$：给体和受体电子态之间的电子耦合。\n- $\\lambda$：重组能，定义为 $\\lambda = \\frac{1}{2}\\kappa(q_{\\mathrm{A}}-q_{\\mathrm{D}})^{2}$。它是在电子未转移的情况下，将溶剂和分子内几何构型从给体的平衡构型重组到受体的平衡构型所需的能量。\n- $k_{\\mathrm{B}}$：玻尔兹曼常数。\n- $T$：绝对温度。\n\n指数的自变量代表活化自由能 $\\Delta G^\\ddagger$ 与热能 $k_{\\mathrm{B}}T$ 的比值。经典活化能垒由下式给出：\n$$ \\Delta G^\\ddagger = \\frac{(\\Delta G^\\circ + \\lambda)^2}{4 \\lambda} $$\n该能垒出现在 $G_{\\mathrm{D}}(q)$ 和 $G_{\\mathrm{A}}(q)$ 能面的交点处。\n\n计算需要将给定参数直接代入速率方程。恒定的参数值为：\n- $\\lambda = 0.6\\,\\mathrm{eV}$\n- $V = 0.01\\,\\mathrm{eV}$\n- $T = 298.15\\,\\mathrm{K}$\n- $k_{\\mathrm{B}} = 8.617333262145 \\times 10^{-5}\\,\\mathrm{eV\\,K^{-1}}$\n- $\\hbar = 6.582119569 \\times 10^{-16}\\,\\mathrm{eV\\,s}$\n\n将对测试集 $\\{-1.8, -1.2, -0.6, 0.0, 0.6, 1.2\\}\\,\\mathrm{eV}$ 中的每个驱动力 $\\Delta G^\\circ$ 求解 $k_{\\mathrm{ET}}$ 方程。\n\n$k_{\\mathrm{ET}}$ 与 $\\Delta G^\\circ$ 之间的关系至关重要。当活化能 $\\Delta G^\\ddagger$ 达到最小值时，速率最大。这个最小值 $\\Delta G^\\ddagger = 0$ 发生在 $\\Delta G^\\circ = -\\lambda$ 时。这是无垒电子转移的条件。对于给定的 $\\lambda = 0.6\\,\\mathrm{eV}$，最大速率将出现在 $\\Delta G^\\circ = -0.6\\,\\mathrm{eV}$ 处。这对应于测试集中的第三个值，因此最大速率的从0开始的索引 $i_{\\max}$ 必须为 $2$。\n\n当 $\\Delta G^\\circ > -\\lambda$ 时，反应处于“正常”马库斯区，在此区域增加驱动力（使 $\\Delta G^\\circ$ 更负）会使速率增加。当 $\\Delta G^\\circ < -\\lambda$ 时，反应处于“倒转”区，在此区域增加驱动力会*降低*速率。布尔标志检查在 $\\Delta G^\\circ = -1.2\\,\\mathrm{eV}$ 时的速率是否严格小于在 $\\Delta G^\\circ = -0.6\\,\\mathrm{eV}$ 时的速率。由于 $\\Delta G^\\circ = -0.6\\,\\mathrm{eV}$ 产生最大速率，因此在任何其他点（包括 $\\Delta G^\\circ = -1.2\\,\\mathrm{eV}$）的速率都必须更低。因此，该布尔标志的求值结果必须为 $\\mathrm{True}$。\n\n计算任务是为每个指定的 $\\Delta G^\\circ$ 值计算速率常数 $k_{\\mathrm{ET}}$，将结果四舍五入到 $6$ 位有效数字，并将它们与最大速率的索引和指定的布尔标志一起组装成最终的输出结构。这是对所推导公式的直接数值实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes electron transfer rates using classical Marcus theory for a given set of parameters.\n    \"\"\"\n\n    # Define fixed physical constants and parameters.\n    # All energies are in electron-volts (eV).\n    LAMBDA = 0.6  # Reorganization energy in eV\n    V = 0.01  # Electronic coupling in eV\n    T = 298.15  # Temperature in Kelvin\n    \n    # Fundamental constants\n    K_B = 8.617333262145e-5  # Boltzmann constant in eV/K\n    HBAR = 6.582119569e-16   # Reduced Planck constant in eV*s\n\n    # The test set of driving force values in eV.\n    delta_g0_values = [\n        -1.8,\n        -1.2,\n        -0.6,\n        0.0,\n        0.6,\n        1.2\n    ]\n\n    def calculate_marcus_rate(delta_g0, lambda_val, v_val, temp, k_b_val, hbar_val):\n        \"\"\"\n        Calculates the rate constant k_ET based on the Marcus equation.\n        \n        k_ET = (2*pi/hbar) * |V|^2 * (1 / sqrt(4*pi*lambda*k_B*T)) * exp(-(delta_G0 + lambda)^2 / (4*lambda*k_B*T))\n        \"\"\"\n        \n        # Thermal energy\n        kBT = k_b_val * temp\n        \n        # Argument of the exponential function\n        exponent_arg = -(delta_g0 + lambda_val)**2 / (4 * lambda_val * kBT)\n        \n        # Prefactor term from Fermi's Golden Rule\n        prefactor = (2 * np.pi / hbar_val) * (v_val**2)\n        \n        # Franck-Condon density of states factor in classical limit\n        fc_factor = 1.0 / np.sqrt(4 * np.pi * lambda_val * kBT)\n        \n        # Combine terms to calculate the rate in s^-1\n        rate = prefactor * fc_factor * np.exp(exponent_arg)\n        \n        return rate\n\n    # Calculate rates for all driving forces in the test set.\n    rates = [calculate_marcus_rate(dg0, LAMBDA, V, T, K_B, HBAR) for dg0 in delta_g0_values]\n\n    # --- Post-processing to match the required output format ---\n\n    # 1. Round each rate to 6 significant figures and format as string.\n    #    The 'g' format specifier handles significant figures correctly.\n    rounded_rates_str = [f\"{rate:.6g}\" for rate in rates]\n    \n    # 2. Find the 0-based index of the maximum rate.\n    #    The comparison is performed on the original, unrounded floating-point values.\n    max_rate_index = int(np.argmax(rates))\n\n    # 3. Determine the boolean flag by comparing the rates at specified driving forces.\n    #    Condition: rate at delta_G0 = -1.2 eV (index 1) < rate at delta_G0 = -0.6 eV (index 2).\n    is_rate_less = rates[1] < rates[2]\n    \n    # 4. Construct the final output string as a bracketed, comma-separated list with no spaces.\n    final_output_string = f\"[{','.join(rounded_rates_str)},{max_rate_index},{is_rate_less}]\"\n\n    print(final_output_string)\n\nsolve()\n```", "id": "2457516"}]}