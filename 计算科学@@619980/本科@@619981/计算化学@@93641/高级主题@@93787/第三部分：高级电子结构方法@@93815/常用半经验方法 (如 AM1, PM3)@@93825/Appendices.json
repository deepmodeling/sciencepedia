{"hands_on_practices": [{"introduction": "计算像生成焓（$ \\Delta H_f^\\circ $）这样的热力学性质是半经验方法的主要应用之一。本练习将指导您完成从半经验能量计算 $ \\Delta H_f^\\circ $ 的标准流程。通过比较 PM3 和 PM7 对六氟化硫（$ \\mathrm{SF}_6 $）的计算结果，您将直接观察到参数化差异如何导致准确性的巨大不同，特别是对于具有挑战性电子结构（如超价化合物）的分子。这个练习为理解为特定问题选择合适方法的重要性提供了关键的一课。[@problem_id:2452543]", "problem": "我们提供了两种半经验量子化学模型——参数化方法3 (PM3) 和参数化方法7 (PM7)——各自特定方法的能量参考数据。在忽略双原子微分重叠 (NDDO) 半经验方法族中，一个组成为 $\\{n_i\\}$ 的分子在温度 $298\\,\\mathrm{K}$ 和压力 $1\\,\\mathrm{bar}$ 下的标准生成焓是相对于孤立的气相原子定义的。您的任务是计算六氟化硫的标准生成焓（单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$），并使用相同的定义来验证原子极限和可加性极限。所有答案必须以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 为单位，并四舍五入到一位小数。\n\n输入数据：\n- 气相原子在 $298\\,\\mathrm{K}$ 下的生成焓：氟原子 $79.3$，硫原子 $277.0$（单位均为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$）。\n- PM3 半经验总能量（气相，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$）：硫原子 $-250.0$，氟原子 $-75.0$，六氟化硫分子 $-300.0$。\n- PM7 半经验总能量（气相，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$）：硫原子 $-300.0$，氟原子 $-90.0$，六氟化硫分子 $-2793.0$。\n\n待评估的测试组：\n1. 使用 PM3 计算六氟化硫的标准生成焓。请使用六氟化硫的总能量 $-300.0$、组成 $\\{\\mathrm{S}:1,\\mathrm{F}:6\\}$、PM3 的原子总能量以及给定的原子生成焓。报告一个单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$、四舍五入到一位小数的浮点数。\n2. 使用 PM7 计算六氟化硫的标准生成焓。请使用六氟化硫的总能量 $-2793.0$、组成 $\\{\\mathrm{S}:1,\\mathrm{F}:6\\}$、PM7 的原子总能量以及给定的原子生成焓。报告一个单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$、四舍五入到一位小数的浮点数。\n3. 边界情况（单个原子）：使用 PM3 计算单个氟原子的标准生成焓。请使用氟的总能量 $-75.0$、组成 $\\{\\mathrm{F}:1\\}$、PM3 的原子总能量以及给定的原子生成焓。报告一个单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$、四舍五入到一位小数的浮点数。\n4. 边缘情况（非键合可加性）：考虑一个在 PM7 中的非键合原子簇 $\\{\\mathrm{S}:1,\\mathrm{F}:6\\}$，其总能量等于 PM7 原子总能量之和，即 $-840.0$。请使用 PM7 的原子总能量和给定的原子生成焓计算其标准生成焓。报告一个单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$、四舍五入到一位小数的浮点数。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含测试组的四个结果，按顺序排列，形式为方括号内的逗号分隔列表，例如 $[x_1,x_2,x_3,x_4]$，其中每个 $x_i$ 均以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 为单位，四舍五入到一位小数，并包含小数点。", "solution": "所述问题具有科学依据、提法恰当，并包含了完整求解所需的所有信息。它描述了计算化学中的一个标准计算。我们将进行推导。\n\n在诸如 PM3 和 PM7 的半经验忽略双原子微分重叠 (NDDO) 方法中，用于计算组成为 $\\{n_i\\}$ 的分子 M 的标准生成焓 $\\Delta H_f^\\circ$ 的基本方程如下：\n\n$$ \\Delta H_f^\\circ(\\text{M}) = E_{\\text{elec}}^{\\text{SE}}(\\text{M}) - \\sum_{i \\in \\text{atoms}} n_i E_{\\text{elec}}^{\\text{SE}}(\\text{Atom}_i) + \\sum_{i \\in \\text{atoms}} n_i \\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{Atom}_i) $$\n\n此处，$E_{\\text{elec}}^{\\text{SE}}(\\text{M})$ 是分子的半经验总能量，$n_i$ 是元素 $i$ 的原子数，$E_{\\text{elec}}^{\\text{SE}}(\\text{Atom}_i)$ 是孤立气相原子 $i$ 的半经验总能量，而 $\\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{Atom}_i)$ 是原子 $i$ 的实验测定气相生成焓。项 $(E_{\\text{elec}}^{\\text{SE}}(\\text{M}) - \\sum_i n_i E_{\\text{elec}}^{\\text{SE}}(\\text{Atom}_i))$ 代表理论计算的原子化能。所有能量均以 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 为单位。\n\n我们已知以下实验测定的原子生成焓：\n- $\\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{F}) = 79.3\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{S}) = 277.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\n六氟化硫 ($\\mathrm{SF}_6$) 的组成为一个硫原子 ($n_\\text{S} = 1$) 和六个氟原子 ($n_\\text{F} = 6$)。该组成的实验原子生成焓之和为：\n$$ \\sum_{i} n_i \\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{Atom}_i) = (1 \\times 277.0) + (6 \\times 79.3) = 277.0 + 475.8 = 752.8\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n\n我们现在评估四个测试用例中的每一个。\n\n**测试用例1：使用 PM3 计算 $\\mathrm{SF}_6$ 的标准生成焓**\nPM3 的特定数据如下：\n- $E_{\\text{elec}}^{\\text{PM3}}(\\mathrm{SF}_6) = -300.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{S}) = -250.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\n首先，我们计算构成原子的 PM3 原子能量之和：\n$$ \\sum_{i} n_i E_{\\text{elec}}^{\\text{PM3}}(\\text{Atom}_i) = (1 \\times E_{\\text{elec}}^{\\text{PM3}}(\\text{S})) + (6 \\times E_{\\text{elec}}^{\\text{PM3}}(\\text{F})) = (1 \\times -250.0) + (6 \\times -75.0) = -250.0 - 450.0 = -700.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n现在，我们应用 $\\Delta H_f^\\circ(\\mathrm{SF}_6)$ 的公式：\n$$ \\Delta H_f^\\circ(\\mathrm{SF}_6)_{\\text{PM3}} = -300.0 - (-700.0) + 752.8 = -300.0 + 700.0 + 752.8 = 1152.8\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n\n**测试用例2：使用 PM7 计算 $\\mathrm{SF}_6$ 的标准生成焓**\nPM7 的特定数据如下：\n- $E_{\\text{elec}}^{\\text{PM7}}(\\mathrm{SF}_6) = -2793.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM7}}(\\text{S}) = -300.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM7}}(\\text{F}) = -90.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\n构成原子的 PM7 原子能量之和为：\n$$ \\sum_{i} n_i E_{\\text{elec}}^{\\text{PM7}}(\\text{Atom}_i) = (1 \\times E_{\\text{elec}}^{\\text{PM7}}(\\text{S})) + (6 \\times E_{\\text{elec}}^{\\text{PM7}}(\\text{F})) = (1 \\times -300.0) + (6 \\times -90.0) = -300.0 - 540.0 = -840.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n应用 $\\Delta H_f^\\circ(\\mathrm{SF}_6)$ 的公式：\n$$ \\Delta H_f^\\circ(\\mathrm{SF}_6)_{\\text{PM7}} = -2793.0 - (-840.0) + 752.8 = -2793.0 + 840.0 + 752.8 = -1953.0 + 752.8 = -1200.2\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n\n**测试用例3：边界情况（单个氟原子 F）使用 PM3**\n该用例验证了公式能为单个原子正确地复现实验数据。我们计算单个氟原子的生成焓，其中 $n_\\text{F} = 1$ 且所有其他 $n_i = 0$。\n数据如下：\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ (这既是分子能量也是原子能量)\n\n原子能量之和即为 $1 \\times E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n实验生成焓之和为 $1 \\times \\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{F}) = 79.3\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n应用公式：\n$$ \\Delta H_f^\\circ(\\text{F})_{\\text{PM3}} = -75.0 - (-75.0) + 79.3 = -75.0 + 75.0 + 79.3 = 79.3\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n结果正确地恢复了实验原子生成焓，与定义相符。\n\n**测试用例4：边缘情况（非键合可加性）使用 PM7**\n该用例检验了一个非键合原子簇 $\\{\\mathrm{S}:1, \\mathrm{F}:6\\}$，其总能量定义为各个原子能量之和。这验证了可加性极限。\n数据如下：\n- $E_{\\text{elec}}^{\\text{PM7}}(\\text{cluster}) = -840.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- PM7 原子能量之和：如测试用例2中所计算，此值也为 $-840.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n根据定义，这个非键合原子簇的原子化能为零：\n$$ E_{\\text{elec}}^{\\text{PM7}}(\\text{cluster}) - \\sum_{i} n_i E_{\\text{elec}}^{\\text{PM7}}(\\text{Atom}_i) = -840.0 - (-840.0) = 0 $$\n应用生成焓公式：\n$$ \\Delta H_f^\\circ(\\text{cluster})_{\\text{PM7}} = -840.0 - (-840.0) + 752.8 = 0 + 752.8 = 752.8\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n结果是实验原子生成焓之和。对于结合能为零的体系，这是正确的结果。\n\n四舍五入到一位小数的最终结果是：$1152.8$, $-1200.2$, $79.3$ 和 $752.8$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes standard heats of formation for SF6 and related systems\n    using PM3 and PM7 semi-empirical methods.\n    \"\"\"\n\n    # --- GIVEN DATA ---\n    # Experimental atomic heats of formation (kJ/mol) at 298 K, 1 bar\n    hf_exp_atoms = {\n        'F': 79.3,\n        'S': 277.0\n    }\n\n    # PM3 semi-empirical total energies (kJ/mol)\n    E_elec_pm3 = {\n        'S': -250.0,\n        'F': -75.0,\n        'SF6': -300.0,\n    }\n\n    # PM7 semi-empirical total energies (kJ/mol)\n    E_elec_pm7 = {\n        'S': -300.0,\n        'F': -90.0,\n        'SF6': -2793.0,\n        'cluster': -840.0, # nonbonded S + 6F\n    }\n    \n    # Define compositions for the systems\n    composition_sf6 = {'S': 1, 'F': 6}\n    composition_f = {'F': 1}\n\n    def calculate_heat_of_formation(\n        mol_energy: float,\n        composition: dict,\n        atomic_energies: dict,\n        atomic_exp_hf: dict\n    ) -> float:\n        \"\"\"\n        Calculates the standard heat of formation using the standard semi-empirical formula.\n\n        Args:\n            mol_energy (float): Semi-empirical total energy of the molecule/system.\n            composition (dict): Dictionary of atom counts, e.g., {'S': 1, 'F': 6}.\n            atomic_energies (dict): Dictionary of semi-empirical atomic energies.\n            atomic_exp_hf (dict): Dictionary of experimental atomic heats of formation.\n\n        Returns:\n            float: Calculated standard heat of formation in kJ/mol.\n        \"\"\"\n        sum_atomic_energies = sum(\n            count * atomic_energies[element]\n            for element, count in composition.items()\n        )\n        \n        sum_exp_atomic_hf = sum(\n            count * atomic_exp_hf[element]\n            for element, count in composition.items()\n        )\n        \n        heat_of_formation = (\n            mol_energy - sum_atomic_energies + sum_exp_atomic_hf\n        )\n        \n        return heat_of_formation\n\n    # --- Test Suite Evaluation ---\n    test_cases = [\n        # 1. PM3 SF6\n        (E_elec_pm3['SF6'], composition_sf6, {'S': E_elec_pm3['S'], 'F': E_elec_pm3['F']}, hf_exp_atoms),\n        # 2. PM7 SF6\n        (E_elec_pm7['SF6'], composition_sf6, {'S': E_elec_pm7['S'], 'F': E_elec_pm7['F']}, hf_exp_atoms),\n        # 3. PM3 Fluorine Atom\n        (E_elec_pm3['F'], composition_f, {'S': E_elec_pm3['S'], 'F': E_elec_pm3['F']}, hf_exp_atoms),\n        # 4. PM7 Nonbonded Cluster\n        (E_elec_pm7['cluster'], composition_sf6, {'S': E_elec_pm7['S'], 'F': E_elec_pm7['F']}, hf_exp_atoms)\n    ]\n    \n    results = []\n    for case in test_cases:\n        mol_E, comp, atom_E, atom_hf = case\n        result = calculate_heat_of_formation(mol_E, comp, atom_E, atom_hf)\n        results.append(result)\n\n    # Format the final output as a comma-separated list of floats with one decimal place.\n    # The f-string format '{:.1f}' ensures one decimal place is always shown.\n    formatted_results = [f\"{res:.1f}\" for res in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2452543"}, {"introduction": "除了静态的热力学性质，计算方法还必须准确描述分子的能量如何随其几何结构而变化。本练习使用简化的傅里叶级数来模拟二苯基二硫醚中键旋转的势能面，其中级数的系数是针对不同半经验方法而特定的。通过使用代表 AM1、PM3 和 PM7 的模型计算旋转能垒，您将获得关于方法参数化如何直接影响构象能景和动态性质预测的实践经验。[@problem_id:2452507]", "problem": "要求您确定二苯基二硫醚中硫-硫键的旋转势垒，使用简化的扭转能剖面来近似三种常见的半经验方法：奥斯汀模型1 (AM1)、参数化模型3 (PM3) 和参数化方法7 (PM7)。对于给定方法，相对电子能量作为硫-硫键二面角 $\\phi$ 的函数，由以下截断傅里叶级数建模\n$$\nE_{\\text{method}}(\\phi) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - \\cos(n \\,\\phi_{\\text{rad}})\\bigr),\n$$\n其中 $\\phi_{\\text{rad}}$ 是对应于以度表示的二面角 $\\phi$ 的弧度角，通过 $\\phi_{\\text{rad}} = \\phi \\,\\pi/180$ 转换，而 $k_{n,\\text{method}}$ 是特定于方法的非负系数。旋转势垒 $\\Delta E_{\\text{method}}$ 定义为\n$$\n\\Delta E_{\\text{method}} \\;=\\; \\max_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi) \\;-\\; \\min_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi).\n$$\n所有能量必须以千焦/摩尔 (kJ/mol) 为单位报告。所有角度均以度为单位，三角函数使用弧度。\n\n在测试套件中使用以下系数集 (单位为 kJ/mol)：\n- AM1 (奥斯汀模型1): $k_{1,\\text{AM1}} = 8.0$, $k_{2,\\text{AM1}} = 16.0$, $k_{3,\\text{AM1}} = 4.0$。\n- PM3 (参数化模型3): $k_{1,\\text{PM3}} = 9.0$, $k_{2,\\text{PM3}} = 17.0$, $k_{3,\\text{PM3}} = 0.0$。\n- PM7 (参数化方法7): $k_{1,\\text{PM7}} = 11.0$, $k_{2,\\text{PM7}} = 20.0$, $k_{3,\\text{PM7}} = 6.0$。\n\n任务:\n1. 对测试套件中的每种方法，计算上述定义的旋转势垒 $\\Delta E_{\\text{method}}$。将每个势垒以 kJ/mol 表示，并四舍五入到一位小数。\n2. 按 AM1、PM3、PM7 的顺序提供结果。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表的结果（例如，“[result1,result2,result3]”），每个结果都是以 kJ/mol 为单位并四舍五入到一位小数的浮点数。\n\n角度单位要求：\n- 对 $\\phi$ 使用度，并在计算余弦时转换为弧度。\n\n注意：\n- 提供的测试套件涵盖了三种不同的参数化方案。$k_{3,\\text{PM3}} = 0.0$ 的情况探讨了缺少第三傅里叶分量的边界情况。", "solution": "问题陈述已经过验证，被认为是具有科学依据、适定且客观的。它为计算指定半经验方法的旋转势垒提供了清晰的数学模型和所有必要参数。我们将着手进行求解。\n\n该问题要求计算二苯基二硫醚的旋转势垒 $\\Delta E_{\\text{method}}$，该势垒是根据 AM1、PM3 和 PM7 三种不同半经验方法的简化扭转能剖面建模的。相对电子能量 $E_{\\text{method}}(\\phi)$ 作为二面角 $\\phi$ (以度为单位) 的函数，由以下截断傅里叶级数给出：\n$$\nE_{\\text{method}}(\\phi) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - \\cos(n \\,\\phi_{\\text{rad}})\\bigr)\n$$\n其中 $\\phi_{\\text{rad}} = \\phi \\cdot \\pi/180$ 是以弧度为单位的角度，而 $k_{n,\\text{method}}$ 是给定的非负系数，单位为 kJ/mol。\n\n旋转势垒定义为在二面角的全范围内，能量最大值与最小值之差：\n$$\n\\Delta E_{\\text{method}} \\;=\\; \\max_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi) \\;-\\; \\min_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi).\n$$\n\n我们的第一步是确定 $E_{\\text{method}}(\\phi)$ 的最小值。该函数是形如 $k_n(1 - \\cos(n\\phi_{\\text{rad}}))$ 的项之和。由于系数 $k_n$ 被指定为非负 ($k_n \\ge 0$)，且余弦函数的范围为 $-1$ 到 $1$，因此每一项 $(1 - \\cos(n\\phi_{\\text{rad}}))$ 都必须是非负的，范围从 $0$ 到 $2$。因此，总能量 $E_{\\text{method}}(\\phi)$ 始终为非负。\n当所有项同时为零时，达到最小值。这发生在 $n=1, 2, 3$ 时 $\\cos(n\\phi_{\\text{rad}}) = 1$ 的情况下。当 $\\phi_{\\text{rad}} = 0$ 时满足此条件，对应于 $\\phi = 0^\\circ$。在此角度下，\n$$\nE_{\\text{method}}(0) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - \\cos(0)\\bigr) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - 1\\bigr) \\;=\\; 0.\n$$\n因此，对于所有三种方法，最小能量为 $\\min_{\\phi} E_{\\text{method}}(\\phi) = 0$ kJ/mol。\n\n寻找旋转势垒的问题简化为寻找能量函数的全局最大值：\n$$\n\\Delta E_{\\text{method}} \\;=\\; \\max_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi).\n$$\n这是一个标准的优化问题。为了找到最大值，我们必须通过将能量函数对角度的一阶导数设为零来确定临界点。令 $\\theta = \\phi_{\\text{rad}}$：\n$$\n\\frac{dE}{d\\theta} \\;=\\; k_1 \\sin(\\theta) + 2k_2 \\sin(2\\theta) + 3k_3 \\sin(3\\theta) \\;=\\; 0.\n$$\n虽然这个三角方程的解析解是可能的，但它会导出一个关于 $\\cos(\\theta)$ 的复杂多项式，且计算量很大。一种在科学计算中更稳健和实用的标准方法是使用数值优化。我们可以通过在区间 $\\phi \\in [0, 360]$ 上找到其负值 $-E(\\phi)$ 的最小值来求得 $E(\\phi)$ 的最大值。我们将为此任务采用数值最小化算法。\n\n对每组系数的计算过程如下：\n\n1.  **奥斯汀模型1 (AM1):**\n    系数为 $k_{1,\\text{AM1}} = 8.0$, $k_{2,\\text{AM1}} = 16.0$, 和 $k_{3,\\text{AM1}} = 4.0$ kJ/mol。\n    能量函数为：\n    $$E_{\\text{AM1}}(\\phi) \\;=\\; 8.0 \\,(1 - \\cos(\\phi_{\\text{rad}})) + 16.0 \\,(1 - \\cos(2\\phi_{\\text{rad}})) + 4.0 \\,(1 - \\cos(3\\phi_{\\text{rad}})).$$\n    在 $\\phi \\in [0, 360)$ 上对此函数进行数值最大化，得到最大能量值。\n    $\\max E_{\\text{AM1}}(\\phi) \\approx 44.1206$ kJ/mol。\n    势垒为 $\\Delta E_{\\text{AM1}} = 44.1206 - 0 = 44.1206$ kJ/mol。四舍五入到一位小数，即为 $44.1$ kJ/mol。\n\n2.  **参数化模型3 (PM3):**\n    系数为 $k_{1,\\text{PM3}} = 9.0$, $k_{2,\\text{PM3}} = 17.0$, 和 $k_{3,\\text{PM3}} = 0.0$ kJ/mol。\n    能量函数简化为 $k_3$ 项为零：\n    $$E_{\\text{PM3}}(\\phi) \\;=\\; 9.0 \\,(1 - \\cos(\\phi_{\\text{rad}})) + 17.0 \\,(1 - \\cos(2\\phi_{\\text{rad}})).$$\n    在 $\\phi \\in [0, 360)$ 上对此函数进行数值最大化，得到最大能量值。\n    $\\max E_{\\text{PM3}}(\\phi) \\approx 43.5955$ kJ/mol。\n    势垒为 $\\Delta E_{\\text{PM3}} = 43.5955 - 0 = 43.5955$ kJ/mol。四舍五入到一位小数，即为 $43.6$ kJ/mol。\n\n3.  **参数化方法7 (PM7):**\n    系数为 $k_{1,\\text{PM7}} = 11.0$, $k_{2,\\text{PM7}} = 20.0$, 和 $k_{3,\\text{PM7}} = 6.0$ kJ/mol。\n    能量函数为：\n    $$E_{\\text{PM7}}(\\phi) \\;=\\; 11.0 \\,(1 - \\cos(\\phi_{\\text{rad}})) + 20.0 \\,(1 - \\cos(2\\phi_{\\text{rad}})) + 6.0 \\,(1 - \\cos(3\\phi_{\\text{rad}})).$$\n    在 $\\phi \\in [0, 360)$ 上对此函数进行数值最大化，得到最大能量值。\n    $\\max E_{\\text{PM7}}(\\phi) \\approx 57.2919$ kJ/mol。\n    势垒为 $\\Delta E_{\\text{PM7}} = 57.2919 - 0 = 57.2919$ kJ/mol。四舍五入到一位小数，即为 $57.3$ kJ/mol。\n\n总结来说，计算出的旋转势垒四舍五入到一位小数后，AM1 为 $44.1$ kJ/mol，PM3 为 $43.6$ kJ/mol，PM7 为 $57.3$ kJ/mol。以下程序实现了这一数值优化过程以生成最终结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import minimize_scalar\n\ndef solve():\n    \"\"\"\n    Computes the rotational barrier for diphenyl disulfide using simplified\n    torsional energy profiles for AM1, PM3, and PM7 semi-empirical methods.\n    \"\"\"\n    \n    # Define the test cases with parameter sets (k1, k2, k3) in kJ/mol\n    # for AM1, PM3, and PM7, respectively.\n    test_cases = [\n        (8.0, 16.0, 4.0),   # AM1: Austin Model 1\n        (9.0, 17.0, 0.0),   # PM3: Parameterized Model 3\n        (11.0, 20.0, 6.0),  # PM7: Parameterized Method 7\n    ]\n\n    results = []\n\n    def energy(phi, k1, k2, k3):\n        \"\"\"\n        Calculates the relative electronic energy for a given dihedral angle.\n        \n        Args:\n            phi (float): The dihedral angle in degrees.\n            k1, k2, k3 (float): The method-specific coefficients for the Fourier series.\n        \n        Returns:\n            float: The calculated energy in kJ/mol.\n        \"\"\"\n        # Convert angle from degrees to radians for trigonometric functions.\n        phi_rad = np.deg2rad(phi)\n        \n        # Calculate energy using the provided truncated Fourier series.\n        e = (k1 * (1.0 - np.cos(phi_rad)) +\n             k2 * (1.0 - np.cos(2.0 * phi_rad)) +\n             k3 * (1.0 - np.cos(3.0 * phi_rad)))\n        return e\n\n    # Iterate through each parameter set to calculate the rotational barrier.\n    for k_coeffs in test_cases:\n        # The problem is to find max(E) - min(E).\n        # As established in the reasoning, min(E) = 0 for phi=0 because all k_n >= 0.\n        # Therefore, the barrier is simply max(E).\n        # To find max(E), we can minimize -E(phi).\n        \n        # Define the function to be minimized (negative of the energy function).\n        neg_energy_func = lambda phi: -energy(phi, *k_coeffs)\n\n        # Use a numerical optimization routine to find the minimum of -E(phi)\n        # over the interval [0, 360) degrees. This is equivalent to finding the\n        # maximum of E(phi). The 'bounded' method is suitable for this simple\n        # one-dimensional optimization.\n        opt_result = minimize_scalar(\n            neg_energy_func,\n            bounds=(0.0, 360.0),\n            method='bounded'\n        )\n        \n        # The maximum energy is the negative of the found minimum value of the\n        # negative energy function.\n        max_energy = -opt_result.fun\n        \n        # The rotational barrier is the maximum energy, as the minimum is zero.\n        barrier = max_energy\n        \n        # Round the result to one decimal place as specified.\n        results.append(round(barrier, 1))\n        \n    # Final print statement in the exact required format: [result1,result2,result3]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2452507"}, {"introduction": "许多分子的行为，尤其是在生物学中，取决于其内在性质与环境之间的精妙平衡。本练习要求您为甘氨酸两性离子的稳定性建立一个多组分模型，将依赖于方法的内禀能量成本与经典的静电和溶剂化模型相结合。这个练习展示了如何将半经验计算整合到更广泛的物理模型中，以探索像溶剂化这样的复杂现象。您将确定不同方法稳定两性离子所需的临界介电常数（$ \\varepsilon_c $），从而揭示它们对气相状态的隐含假设。[@problem_id:2452540]", "problem": "氨基酸可以以中性形式或两性离子的形式存在。请将甘氨酸建模为一个沿着有效质子转移坐标的双态系统。假设两性离子相对于中性形式的相对电子能量，可以近似为三个具有物理动机的贡献之和：一个取决于所选半经验方法的分子内去质子化成本、形式电荷之间的内库仑相互作用，以及离子对的连续介质溶剂化稳定化作用。这些半经验方法是 Austin Model 1 (AM1)、Parametric Method 3 (PM3) 和 Parametric Method 7 (PM7)。\n\n设两性离子相对于中性形式的总能量差为\n$$\n\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) \\;=\\; \\Delta E_{\\text{intra}}(\\text{method}) \\;+\\; \\Delta E_{\\text{Coul}}(\\varepsilon) \\;+\\; \\Delta G_{\\text{solv}}(\\varepsilon),\n$$\n其中适用以下基于物理的模型。\n\n1. 分子内去质子化成本取决于方法，单位为千卡/摩尔：\n$$\n\\Delta E_{\\text{intra}}(\\text{AM1}) = 210.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM3}) = 200.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM7}) = 185.0.\n$$\n\n2. 铵基和羧酸根形式电荷之间的内库仑相互作用，通过带有介电标度的库仑定律建模：\n$$\n\\Delta E_{\\text{Coul}}(\\varepsilon) \\;=\\; - \\frac{k_e q^2}{\\varepsilon\\, r_{\\text{int}}},\n$$\n其中 $k_e = 332.06371 \\, \\text{kcal}\\cdot\\text{Å}\\cdot\\text{mol}^{-1}\\cdot e^{-2}$，$q = 1.0$ 电子电荷，$r_{\\text{int}} = 3.0$ 埃，$\\varepsilon$ 是无量纲的介电常数。\n\n3. 离子对的连续介质溶剂化稳定化作用，通过应用于两个离子的 Born 表达式建模：\n$$\n\\Delta G_{\\text{solv}}(\\varepsilon) \\;=\\; -\\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr)\\, k_e q^2\\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right),\n$$\n其中 $R_+ = 1.5$ 埃且 $R_- = 1.5$ 埃。\n\n假设中性参考态的能量为零。在此双态模型中，当且仅当两性离子的能量严格低于中性分子的能量时，即当且仅当 $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) < 0$ 时，该两性离子被视为一个稳定的最小值。所有能量均以千卡/摩尔表示。\n\n您的任务是编写一个程序，对于一个包含方法和介电常数对的指定测试套件，每个测试返回一个布尔值，以指示根据上述模型，两性离子是否为一个稳定的最小值。使用以下有序测试套件，其中每个测试用例是一个对 $(\\text{method},\\varepsilon)$：\n\n- 测试 $1$：$(\\text{PM7}, 1.0)$，\n- 测试 $2$：$(\\text{PM7}, 78.4)$，\n- 测试 $3$：$(\\text{PM7}, \\varepsilon_c(\\text{PM7}))$ 其中 $\\varepsilon_c(\\text{method})$ 是临界介电常数，在该常数下 $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon)$ 等于 $0$，由模型解析计算得出，\n- 测试 $4$：$(\\text{AM1}, 1.0)$，\n- 测试 $5$：$(\\text{PM3}, 1.0)$，\n- 测试 $6$：$(\\text{AM1}, 10.0)$，\n- 测试 $7$：$(\\text{PM3}, \\varepsilon_c(\\text{PM3}))$，\n- 测试 $8$：$(\\text{PM7}, 2.0)$。\n\n临界介电常数的解析表达式可以通过求解 $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) = 0$ 关于 $\\varepsilon$ 的方程得出，并且必须用于测试 $3$ 和测试 $7$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的布尔值列表（例如，“[True,False,...]”），并遵循上述测试的确切顺序。不应打印任何其他文本。如果 $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) < 0$，则结果为 True，否则为 False。", "solution": "我们将甘氨酸的两性离子-中性分子能量差建模为三个项的总和，这些项基于静电学和一个依赖于方法的分子内成本，所有能量单位均为千卡/摩尔。总能量差为\n$$\n\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) \\;=\\; \\Delta E_{\\text{intra}}(\\text{method}) \\;-\\; \\frac{k_e q^2}{\\varepsilon\\, r_{\\text{int}}}\n\\;-\\; \\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr) k_e q^2 \\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right).\n$$\n第一项 $\\Delta E_{\\text{intra}}(\\text{method})$ 代表由于质子转移和电子重组，从中性分子形成离子对的内在能量惩罚。在半经验水平上，不同的参数化会产生不同的值；这里我们对 Austin Model 1 (AM1)、Parametric Method 3 (PM3) 和 Parametric Method 7 (PM7) 使用固定值：\n$$\n\\Delta E_{\\text{intra}}(\\text{AM1}) = 210.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM3}) = 200.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM7}) = 185.0.\n$$\n第二项是相距为 $r_{\\text{int}}$、电荷为 $+q$ 和 $-q$ 的粒子之间的内库仑引力，受介电常数 $\\varepsilon$ 的屏蔽：\n$$\n\\Delta E_{\\text{Coul}}(\\varepsilon) \\;=\\; - \\frac{k_e q^2}{\\varepsilon\\, r_{\\text{int}}}.\n$$\n第三项是在介电常数为 $\\varepsilon$ 的介质中，两个半径分别为 $R_+$ 和 $R_-$ 的离子的 Born 溶剂化稳定化能：\n$$\n\\Delta G_{\\text{solv}}(\\varepsilon) \\;=\\; - \\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr) k_e q^2 \\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right).\n$$\n我们使用 $k_e = 332.06371 \\, \\text{kcal}\\cdot\\text{Å}\\cdot\\text{mol}^{-1}\\cdot e^{-2}$，$q = 1.0$，$r_{\\text{int}} = 3.0$，$R_+ = 1.5$ 和 $R_- = 1.5$（所有距离单位均为埃）。\n\n为方便起见，定义\n$$\nA(\\text{method}) \\equiv \\Delta E_{\\text{intra}}(\\text{method}),\n\\quad\nB \\equiv \\frac{k_e q^2}{r_{\\text{int}}},\n\\quad\nC \\equiv k_e q^2 \\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right).\n$$\n由此，总能量简化为\n$$\n\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon)\n= A - \\frac{B}{\\varepsilon} - \\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr) C\n= (A - C) + \\left(C - B\\right)\\frac{1}{\\varepsilon}.\n$$\n这种对 $1/\\varepsilon$ 的线性依赖性，允许我们通过求解 $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) = 0$ 得到一个解析表达式，用于计算两性离子和中性分子等能量时的临界介电常数 $\\varepsilon_c(\\text{method})$：\n$$\n0 \\;=\\; (A - C) + \\left(C - B\\right)\\frac{1}{\\varepsilon_c}\n\\;\\;\\Rightarrow\\;\\;\n\\varepsilon_c(\\text{method}) \\;=\\; \\frac{C - B}{C - A(\\text{method})}.\n$$\n对于我们的常数，我们计算\n$$\nB = \\frac{332.06371}{3.0} \\approx 110.6879033,\\quad\n\\frac{1}{2 R_+} + \\frac{1}{2 R_-} = \\frac{1}{3.0} + \\frac{1}{3.0} = \\frac{2}{3},\n$$\n因此\n$$\nC = 332.06371 \\times \\frac{2}{3} \\approx 221.3758067.\n$$\n所以，\n- 对于 PM7，$A = 185.0$，得出\n$$\n\\varepsilon_c(\\text{PM7}) = \\frac{221.3758067 - 110.6879033}{221.3758067 - 185.0} \\approx \\frac{110.6879034}{36.3758067} \\approx 3.043.\n$$\n- 对于 PM3，$A = 200.0$，得出\n$$\n\\varepsilon_c(\\text{PM3}) \\approx \\frac{110.6879034}{21.3758067} \\approx 5.177.\n$$\n- 对于 AM1，$A = 210.0$，得出\n$$\n\\varepsilon_c(\\text{AM1}) \\approx \\frac{110.6879034}{11.3758067} \\approx 9.729.\n$$\n判定标准：在此双态模型中，当且仅当 $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) < 0$ 时，两性离子是一个稳定的最小值。当恰好 $\\varepsilon = \\varepsilon_c$ 时，$\\Delta E_{\\text{tot}} = 0$，因此根据严格不等式，判定为 False。\n\n每个测试用例 $(\\text{method},\\varepsilon)$ 的算法步骤：\n1. 根据方法计算 $A$，常数 $B$ 和 $C$ 只计算一次。\n2. 计算 $\\Delta E_{\\text{tot}} = (A - C) + (C - B)/\\varepsilon$。\n3. 如果 $\\Delta E_{\\text{tot}} < 0$ 返回 True，否则返回 False。\n\n应用此方法：\n- 测试 $1$ $(\\text{PM7}, 1.0)$: $\\Delta E_{\\text{tot}} \\approx 185.0 - 110.6879 - 0 \\approx 74.3 > 0 \\Rightarrow$ False。\n- 测试 $2$ $(\\text{PM7}, 78.4)$: 强稳定化作用，$\\Delta E_{\\text{tot}} < 0 \\Rightarrow$ True。\n- 测试 $3$ $(\\text{PM7}, \\varepsilon_c(\\text{PM7}))$: 根据定义 $\\Delta E_{\\text{tot}} = 0 \\Rightarrow$ False。\n- 测试 $4$ $(\\text{AM1}, 1.0)$: $\\Delta E_{\\text{tot}} \\approx 210.0 - 110.6879 \\approx 99.3 > 0 \\Rightarrow$ False。\n- 测试 $5$ $(\\text{PM3}, 1.0)$: $\\Delta E_{\\text{tot}} \\approx 200.0 - 110.6879 \\approx 89.3 > 0 \\Rightarrow$ False。\n- 测试 $6$ $(\\text{AM1}, 10.0)$: $\\varepsilon = 10.0 > \\varepsilon_c(\\text{AM1}) \\approx 9.729 \\Rightarrow \\Delta E_{\\text{tot}} < 0 \\Rightarrow$ True。\n- 测试 $7$ $(\\text{PM3}, \\varepsilon_c(\\text{PM3}))$: $\\Delta E_{\\text{tot}} = 0 \\Rightarrow$ False。\n- 测试 $8$ $(\\text{PM7}, 2.0)$: $\\varepsilon = 2.0 < \\varepsilon_c(\\text{PM7}) \\approx 3.043 \\Rightarrow \\Delta E_{\\text{tot}} > 0 \\Rightarrow$ False。\n\n关于该方法对溶剂化的内在处理的解释：在气相中（$\\varepsilon = 1.0$），PM7 得出 $\\Delta E_{\\text{tot}} > 0$（稳定性为 False），这表明在没有外部电介质的情况下，两性离子不被预测为稳定的最小值。这意味着 PM7，像 AM1 和 PM3 一样，本身不包含体相溶剂化稳定化作用；必须调用显式或隐式溶剂化来稳定两性离子，这反映在当 $\\varepsilon$ 足够大时，结果转变为 True。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\n# No external input; prints a single line result list as specified.\ndef solve():\n    # Physical constants and parameters (kcal/mol, Angstrom, unitless)\n    k_e = 332.06371  # kcal mol^-1 Å e^-2\n    q = 1.0          # e\n    r_int = 3.0      # Å\n    R_plus = 1.5     # Å\n    R_minus = 1.5    # Å\n\n    # Method-dependent intramolecular deprotonation energies (kcal/mol)\n    A_map = {\n        \"AM1\": 210.0,\n        \"PM3\": 200.0,\n        \"PM7\": 185.0,\n    }\n\n    # Precompute constants B and C for efficiency\n    B = k_e * (q ** 2) / r_int\n    C = k_e * (q ** 2) * (1.0 / (2.0 * R_plus) + 1.0 / (2.0 * R_minus))\n\n    def delta_E(method: str, eps: float) -> float:\n        \"\"\"Total zwitterion-relative energy (kcal/mol) per the model.\"\"\"\n        A = A_map[method]\n        return (A - C) + (C - B) / eps\n\n    def eps_crit(method: str) -> float:\n        \"\"\"Critical dielectric at which delta_E == 0 (analytic).\"\"\"\n        A = A_map[method]\n        denom = (C - A)\n        # In the unlikely case denom <= 0, return a very large epsilon\n        if denom <= 0:\n            return float('inf')\n        return (C - B) / denom\n\n    # Define the ordered test suite: (method, epsilon)\n    test_cases = [\n        (\"PM7\", 1.0),                 # Test 1\n        (\"PM7\", 78.4),                # Test 2\n        (\"PM7\", eps_crit(\"PM7\")),     # Test 3\n        (\"AM1\", 1.0),                 # Test 4\n        (\"PM3\", 1.0),                 # Test 5\n        (\"AM1\", 10.0),                # Test 6\n        (\"PM3\", eps_crit(\"PM3\")),     # Test 7\n        (\"PM7\", 2.0),                 # Test 8\n    ]\n\n    results = []\n    for method, eps in test_cases:\n        dE = delta_E(method, eps)\n        # Zwitterion is a stable minimum if total energy difference is strictly negative\n        is_stable = dE < 0.0\n        results.append(is_stable)\n\n    # Final print statement in the exact required format (no spaces).\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2452540"}]}