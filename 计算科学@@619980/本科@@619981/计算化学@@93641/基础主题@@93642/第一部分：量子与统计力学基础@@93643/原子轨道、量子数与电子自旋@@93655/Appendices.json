{"hands_on_practices": [{"introduction": "本练习将带领我们探索量子力学的一个核心特征：隧穿效应。通过计算一个类氢原子模型中 $1s$ 电子出现在其经典转折点之外的概率，我们将量化电子波动性的非经典行为。这个实践旨在加深对波函数概率诠释的理解，并揭示为何电子并不局限于经典物理所预测的边界之内。[@problem_id:2449737]", "problem": "考虑一个单电子、非相对论性中心场模型，用于处理在类氢近似下的氦 $1s$ 电子，其有效核电荷为 $Z_{\\mathrm{eff}}$。在原子单位制下进行计算，其中约化普朗克常数 $\\hbar$、电子质量 $m_{\\mathrm{e}}$ 和库仑常数 $e^{2}/(4\\pi\\varepsilon_{0})$ 均设为 $1$。在此模型中，库仑势为 $V(r)=-Z_{\\mathrm{eff}}/r$，主量子数为 $n=1$，角量子数为 $\\ell=0$。类氢 $1s$ 轨道的束缚态能量为 $E_{1}=-Z_{\\mathrm{eff}}^{2}/2$。经典转折点 $r_{\\mathrm{c}}$ 由条件 $V(r_{\\mathrm{c}})=E_{1}$ 隐式定义。归一化的 $1s$ 轨道波函数是球对称的，由下式给出：\n$$\n\\psi_{1s}(r)=\\left(\\frac{Z_{\\mathrm{eff}}^{3}}{\\pi}\\right)^{1/2} e^{-Z_{\\mathrm{eff}} r}.\n$$\n该电子的径向概率密度由下式给出：\n$$\np(r) = 4\\pi r^{2}\\left|\\psi_{1s}(r)\\right|^{2}.\n$$\n你的任务是，对于每一个给定的 $Z_{\\mathrm{eff}}$ 值，计算其概率\n$$\nP=\\int_{r_{\\mathrm{c}}}^{\\infty} p(r)\\,dr,\n$$\n即，在大于其经典转折点的半径处找到该电子的概率。输出结果无单位，且必须以小数（而非百分比）形式表示。本问题不涉及角度。\n\n测试组：\n- 情况 1：$Z_{\\mathrm{eff}}=1.70$ (使用 Slater 定则的屏蔽氦 $1s$ 轨道)。\n- 情况 2：$Z_{\\mathrm{eff}}=1.6875$ (一个基于变分法得到的氦 $1s$ 轨道值)。\n- 情况 3：$Z_{\\mathrm{eff}}=2.0$ (类氢氦离子 $\\mathrm{He}^{+}$)。\n- 情况 4：$Z_{\\mathrm{eff}}=1.0$ (氢 $1s$ 轨道，作为参考)。\n- 情况 5：$Z_{\\mathrm{eff}}=10.0$ (一个高 $Z_{\\mathrm{eff}}$ 极限检查)。\n- 情况 6：$Z_{\\mathrm{eff}}=10^{-6}$ (一个极端低 $Z_{\\mathrm{eff}}$ 稳定性检查)。\n\n最终输出格式：\n- 你的程序必须生成一行包含案例 1 到 6 的概率的逗号分隔列表，按顺序排列，并用方括号括起来。每个概率必须四舍五入到 8 位小数。例如，格式必须如下：\n$$\n[\\text{result}_{1},\\text{result}_{2},\\text{result}_{3},\\text{result}_{4},\\text{result}_{5},\\text{result}_{6}],\n$$\n其中每个 $\\text{result}_{k}$ 是一个四舍五入到 8 位的十进制数。", "solution": "问题陈述已经过严格审查，并被确定为有效。它具有科学依据，问题定义明确且客观。这是一个量子力学入门中的标准问题，没有任何科学或逻辑上的缺陷。因此，我们可以着手求解。\n\n任务是计算在类氢模型中，在大于经典转折点 $r_{\\mathrm{c}}$ 的半径 $r$ 处找到一个 $1\\textit{s}$ 电子的概率 $P$。该概率由径向概率密度 $p(r)$ 从 $r_{\\mathrm{c}}$ 到无穷大的积分给出。\n\n首先，我们确定经典转折点 $r_{\\mathrm{c}}$。这是势能 $V(r)$ 等于总能量 $E_1$ 时的半径。根据问题陈述，我们有：\n$$\nV(r) = -\\frac{Z_{\\mathrm{eff}}}{r}\n$$\n和\n$$\nE_1 = -\\frac{Z_{\\mathrm{eff}}^2}{2}\n$$\n令二者相等即可定义 $r_{\\mathrm{c}}$：\n$$\nV(r_{\\mathrm{c}}) = E_1 \\implies -\\frac{Z_{\\mathrm{eff}}}{r_{\\mathrm{c}}} = -\\frac{Z_{\\mathrm{eff}}^2}{2}\n$$\n对于任何非零的有效核电荷 $Z_{\\mathrm{eff}} > 0$，我们可以解出 $r_{\\mathrm{c}}$：\n$$\nr_{\\mathrm{c}} = \\frac{2}{Z_{\\mathrm{eff}}}\n$$\n\n接下来，我们构建概率 $P$ 的积分。径向概率密度 $p(r)$ 由 $p(r) = 4\\pi r^2 |\\psi_{1s}(r)|^2$ 给出。已知的归一化波函数为：\n$$\n\\psi_{1s}(r) = \\left(\\frac{Z_{\\mathrm{eff}}^3}{\\pi}\\right)^{1/2} e^{-Z_{\\mathrm{eff}} r}\n$$\n由于 $\\psi_{1s}(r)$ 是实数，其模的平方就是其自身的平方：\n$$\n|\\psi_{1s}(r)|^2 = \\psi_{1s}(r)^2 = \\left(\\frac{Z_{\\mathrm{eff}}^3}{\\pi}\\right) e^{-2Z_{\\mathrm{eff}} r}\n$$\n将此代入 $p(r)$ 的表达式中：\n$$\np(r) = 4\\pi r^2 \\left(\\frac{Z_{\\mathrm{eff}}^3}{\\pi}\\right) e^{-2Z_{\\mathrm{eff}} r} = 4 Z_{\\mathrm{eff}}^3 r^2 e^{-2Z_{\\mathrm{eff}} r}\n$$\n概率 $P$ 是该密度在经典禁区（从 $r_{\\mathrm{c}}$ 到 $\\infty$）上的积分：\n$$\nP = \\int_{r_{\\mathrm{c}}}^{\\infty} p(r) dr = \\int_{2/Z_{\\mathrm{eff}}}^{\\infty} 4 Z_{\\mathrm{eff}}^3 r^2 e^{-2Z_{\\mathrm{eff}} r} dr\n$$\n\n为求解此积分，我们引入变量替换以简化表达式。设无量纲变量 $u$ 定义为 $u = 2Z_{\\mathrm{eff}} r$。由此代换可得 $r = \\frac{u}{2Z_{\\mathrm{eff}}}$ 及 $dr = \\frac{du}{2Z_{\\mathrm{eff}}}$。我们还必须变换积分的上下限：\n- 下限 $r = r_{\\mathrm{c}} = \\frac{2}{Z_{\\mathrm{eff}}}$ 变为 $u = 2Z_{\\mathrm{eff}} \\left(\\frac{2}{Z_{\\mathrm{eff}}}\\right) = 4$。\n- 上限 $r \\to \\infty$ 变为 $u \\to \\infty$。\n\n将这些代入 $P$ 的积分中：\n$$\nP = \\int_{4}^{\\infty} 4 Z_{\\mathrm{eff}}^3 \\left(\\frac{u}{2Z_{\\mathrm{eff}}}\\right)^2 e^{-u} \\left(\\frac{du}{2Z_{\\mathrm{eff}}}\\right)\n$$\n$$\nP = \\int_{4}^{\\infty} 4 Z_{\\mathrm{eff}}^3 \\left(\\frac{u^2}{4Z_{\\mathrm{eff}}^2}\\right) e^{-u} \\left(\\frac{du}{2Z_{\\mathrm{eff}}}\\right)\n$$\n$$\nP = \\int_{4}^{\\infty} \\frac{4 Z_{\\mathrm{eff}}^3}{8 Z_{\\mathrm{eff}}^3} u^2 e^{-u} du\n$$\n因子 $Z_{\\mathrm{eff}}$ 完全消掉了，这是一个关键的观察。\n$$\nP = \\frac{1}{2} \\int_{4}^{\\infty} u^2 e^{-u} du\n$$\n此结果表明，在经典禁区中找到电子的概率对于所有类氢 $1s$ 轨道都是一个普适常数，与有效核电荷 $Z_{\\mathrm{eff}}$ 无关。因此，对于所有指定的测试用例，结果都将是相同的。\n\n剩下的任务是计算这个定积分。我们可以通过两次分部积分来求解不定积分 $\\int u^2 e^{-u} du$。结果是：\n$$\n\\int u^2 e^{-u} du = -(u^2 + 2u + 2)e^{-u} + C\n$$\n现在，我们计算从 $4$ 到 $\\infty$ 的定积分：\n$$\n\\int_{4}^{\\infty} u^2 e^{-u} du = \\left[ -(u^2 + 2u + 2)e^{-u} \\right]_{4}^{\\infty}\n$$\n在上限处，当 $u \\to \\infty$ 时，指数项 $e^{-u}$ 趋于零的速度比多项式 $u^2+2u+2$ 增长的速度快。因此，该表达式的值为 $0$。\n在下限处，$u = 4$：\n$$\n-(4^2 + 2(4) + 2)e^{-4} = -(16 + 8 + 2)e^{-4} = -26e^{-4}\n$$\n定积分的值是上限值减去下限值：$0 - (-26e^{-4}) = 26e^{-4}$。\n\n最后，我们计算概率 $P$：\n$$\nP = \\frac{1}{2} (26e^{-4}) = 13e^{-4}\n$$\n按要求四舍五入到 8 位小数的数值为：\n$$\nP \\approx 13 \\times 0.0183156388... \\approx 0.23810331\n$$\n这就是问题陈述中指定的每种情况的概率。测试组中使用 $Z_{\\mathrm{eff}}$ 的极值是为了确认这种标度行为的稳健性，一个正确的解析或数值方法必须能重现这一点。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import gammaincc\n\ndef solve():\n    \"\"\"\n    Calculates the probability of finding a 1s electron beyond its classical\n    turning point in a hydrogenic model.\n    \"\"\"\n\n    # The problem statement defines the test cases for Z_eff.\n    test_cases = [\n        1.70,        # Case 1: Screened helium 1s using Slater’s rules.\n        1.6875,      # Case 2: A variationally motivated value for helium 1s.\n        2.0,         # Case 3: Hydrogenic helium cation He+.\n        1.0,         # Case 4: Hydrogen 1s, as a reference.\n        10.0,        # Case 5: A high-Z_eff limit check.\n        1.0e-6,      # Case 6: An extreme low-Z_eff stability check.\n    ]\n\n    # As derived in the analytical solution, the probability P is independent of Z_eff.\n    # The integral for the probability P is:\n    # P = integral from r_c to infinity of (4 * Z_eff^3 * r^2 * exp(-2 * Z_eff * r)) dr\n    # where r_c = 2 / Z_eff.\n    # Using the substitution u = 2 * Z_eff * r, this simplifies to:\n    # P = (1/2) * integral from 4 to infinity of (u^2 * exp(-u)) du.\n\n    # This integral can be expressed using the upper incomplete gamma function,\n    # which is implemented in SciPy.\n    # The upper incomplete gamma function is Gamma(s, x) = integral from x to inf of (t^(s-1) * exp(-t)) dt.\n    # Our integral corresponds to s-1=2 (so s=3) and x=4.\n    # The SciPy function `gammaincc(s, x)` computes Gamma(s, x) / Gamma(s).\n    # integral_part = Gamma(3) * gammaincc(3, 4)\n    # Since Gamma(3) = (3-1)! = 2, the integral value is 2 * gammaincc(3, 4).\n    # P = (1/2) * (2 * gammaincc(3, 4)) = gammaincc(3, 4).\n    \n    # Analytically, P = 13 * exp(-4). Both methods yield the same constant value.\n    probability = gammaincc(3, 4)\n\n    # Since the probability is constant, the result is the same for all test cases.\n    results = [f\"{probability:.8f}\" for _ in test_cases]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2449737"}, {"introduction": "当系统中存在多个电子时，它们的行为不再是独立的，而是由于泡利不相容原理而相互关联。本练习通过计算一个简单双电子体系的对关联函数 $g(r_1, r_2)$，直观地展示了电子的自旋状态（单重态或三重态）如何决定它们的空间分布。你将亲手揭示“费米穴”和“费米堆”的形成，这是理解化学键和电子结构理论的关键一步。[@problem_id:2449707]", "problem": "构建一个程序，使用原子单位，为一个由两个不同的类氢轨道构成的双电子体系计算对关联函数。考虑一个固定的原子核，其核电荷为 $Z$，以及两个实的、归一化的、球对称的类氢空间轨道：$1s$ 轨道 $\\phi_{1s}(r)$ 和 $2s$ 轨道 $\\phi_{2s}(r)$，其中 $r$ 是以玻尔（Bohr）为单位表示的电子-原子核距离。使用以下轨道的显式定义，所有量均以原子单位表示：\n$$\n\\phi_{1s}(r) = \\frac{Z^{3/2}}{\\sqrt{\\pi}} e^{-Z r}, \\quad \\phi_{2s}(r) = \\frac{Z^{3/2}}{4\\sqrt{2\\pi}} \\left(2 - Z r\\right) e^{-Z r/2}.\n$$\n使用空间轨道 $\\phi_{a} \\equiv \\phi_{1s}$ 和 $\\phi_{b} \\equiv \\phi_{2s}$ 定义单重态和三重态自旋态的归一化双电子空间波函数：\n$$\n\\Psi_{\\mathrm{S}}(\\mathbf{r}_1,\\mathbf{r}_2) = \\frac{1}{\\sqrt{2}} \\left[\\phi_{a}(r_1)\\phi_{b}(r_2) + \\phi_{b}(r_1)\\phi_{a}(r_2)\\right],\n$$\n$$\n\\Psi_{\\mathrm{T}}(\\mathbf{r}_1,\\mathbf{r}_2) = \\frac{1}{\\sqrt{2}} \\left[\\phi_{a}(r_1)\\phi_{b}(r_2) - \\phi_{b}(r_1)\\phi_{a}(r_2)\\right],\n$$\n其中，对于 $i \\in \\{1,2\\}$，$r_i = \\lvert \\mathbf{r}_i \\rvert$。自旋变量已被隐式积分掉，因此对密度是空间波函数的模平方。将单电子密度定义为\n$$\n\\rho(r) = \\lvert \\phi_{a}(r) \\rvert^2 + \\lvert \\phi_{b}(r) \\rvert^2,\n$$\n并将单重态和三重态空间态的对密度定义为\n$$\nP_2^{\\mathrm{S}}(r_1,r_2) = \\left\\lvert \\Psi_{\\mathrm{S}}(\\mathbf{r}_1,\\mathbf{r}_2) \\right\\rvert^2, \\quad P_2^{\\mathrm{T}}(r_1,r_2) = \\left\\lvert \\Psi_{\\mathrm{T}}(\\mathbf{r}_1,\\mathbf{r}_2) \\right\\rvert^2.\n$$\n对关联函数定义为\n$$\ng^{X}(r_1,r_2) = \\frac{P_2^{X}(r_1,r_2)}{\\rho(r_1)\\,\\rho(r_2)}, \\quad X \\in \\{\\mathrm{S}, \\mathrm{T}\\}.\n$$\n所有距离 $r_1$ 和 $r_2$ 必须以玻尔（Bohr）为单位提供，$Z$ 是无量纲的。对于每个指定的测试用例，您的程序必须计算 $g^{\\mathrm{S}}(r_1,r_2)$、$g^{\\mathrm{T}}(r_1,r_2)$ 以及差值 $g^{\\mathrm{S}}(r_1,r_2) - g^{\\mathrm{T}}(r_1,r_2)$，每个值都四舍五入到六位小数。\n\n使用以下参数三元组 $(Z, r_1, r_2)$ 的测试套件，其中 $Z$ 是核电荷，$r_1, r_2$ 是以玻尔（Bohr）为单位的电子-原子核距离：\n- $(1, 0.5, 1.0)$,\n- $(1, 0.0, 0.0)$,\n- $(1, 2.0, 2.0)$,\n- $(2, 0.25, 1.0)$,\n- $(2, 5.0, 5.0)$.\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果。每个测试用例对应一个包含三个浮点数的子列表，顺序为 $\\left[g^{\\mathrm{S}}(r_1,r_2), g^{\\mathrm{T}}(r_1,r_2), g^{\\mathrm{S}}(r_1,r_2) - g^{\\mathrm{T}}(r_1,r_2)\\right]$。例如，整体结构应如下所示：\n$$\n\\left[\\left[x_{11},x_{12},x_{13}\\right],\\left[x_{21},x_{22},x_{23}\\right],\\ldots\\right],\n$$\n其中每个 $x_{ij}$ 都是一个四舍五入到六位小数的浮点数，并且该行中任何地方都没有空格。", "solution": "问题陈述已经过严格验证，并被认定为有效。它在科学上基于量子力学原理，问题定义清晰且提供了所有必要信息，并以客观、明确的语言表述。类氢轨道、双电子波函数及派生出的密度的定义在量子化学领域是标准的。因此，我将给出一个完整的解法。\n\n目标是计算一个双电子体系在单重态 ($X = \\mathrm{S}$) 和三重态 ($X = \\mathrm{T}$) 自旋构型下的对关联函数 $g^X(r_1, r_2)$。该体系由两个不同的、实的、归一化的且正交的类氢空间轨道 $\\phi_{1s}$ 和 $\\phi_{2s}$ 描述。所有量均以原子单位表示。\n\n我们将轨道表示为 $\\phi_a(r) \\equiv \\phi_{1s}(r)$ 和 $\\phi_b(r) \\equiv \\phi_{2s}(r)$。其显式形式如下：\n$$\n\\phi_a(r) = \\phi_{1s}(r) = \\frac{Z^{3/2}}{\\sqrt{\\pi}} e^{-Z r}\n$$\n$$\n\\phi_b(r) = \\phi_{2s}(r) = \\frac{Z^{3/2}}{4\\sqrt{2\\pi}} \\left(2 - Z r\\right) e^{-Z r/2}\n$$\n其中 $Z$ 是核电荷，$r$ 是以玻尔（Bohr）为单位的电子-原子核距离。\n\n该体系的单电子密度 $\\rho(r)$ 定义为单个轨道概率密度的总和。对于距离原子核为 $r$ 的单个电子，其概率密度为：\n$$\n\\rho(r) = \\lvert \\phi_a(r) \\rvert^2 + \\lvert \\phi_b(r) \\rvert^2\n$$\n由于轨道是实函数，这可以简化为：\n$$\n\\rho(r) = \\phi_a(r)^2 + \\phi_b(r)^2 = \\frac{Z^3}{\\pi} e^{-2Zr} + \\frac{Z^3}{32\\pi} (2 - Zr)^2 e^{-Zr}\n$$\n\n接下来，我们考虑由 $\\phi_a$ 和 $\\phi_b$ 构建的单重态空间波函数 $\\Psi_{\\mathrm{S}}$ 和三重态空间波函数 $\\Psi_{\\mathrm{T}}$：\n$$\n\\Psi_{\\mathrm{S}}(\\mathbf{r}_1,\\mathbf{r}_2) = \\frac{1}{\\sqrt{2}} \\left[\\phi_{a}(r_1)\\phi_{b}(r_2) + \\phi_{b}(r_1)\\phi_{a}(r_2)\\right]\n$$\n$$\n\\Psi_{\\mathrm{T}}(\\mathbf{r}_1,\\mathbf{r}_2) = \\frac{1}{\\sqrt{2}} \\left[\\phi_{a}(r_1)\\phi_{b}(r_2) - \\phi_{b}(r_1)\\phi_{a}(r_2)\\right]\n$$\n相应的对密度 $P_2^X(r_1, r_2)$ 是这些波函数的模平方。鉴于轨道是实函数：\n$$\nP_2^{\\mathrm{S}}(r_1,r_2) = \\lvert \\Psi_{\\mathrm{S}} \\rvert^2 = \\frac{1}{2} \\left[\\phi_a(r_1)\\phi_b(r_2) + \\phi_b(r_1)\\phi_a(r_2)\\right]^2\n$$\n$$\nP_2^{\\mathrm{T}}(r_1,r_2) = \\lvert \\Psi_{\\mathrm{T}} \\rvert^2 = \\frac{1}{2} \\left[\\phi_a(r_1)\\phi_b(r_2) - \\phi_b(r_1)\\phi_a(r_2)\\right]^2\n$$\n对关联函数 $g^X(r_1, r_2)$ 通过将对密度除以相应位置上单电子密度的乘积来进行归一化。这个函数衡量了在 $\\mathbf{r}_1$ 处找到一个电子同时在 $\\mathbf{r}_2$ 处找到另一个电子的相对概率，并与电子不相关情况下的期望概率进行比较。\n$$\ng^{X}(r_1,r_2) = \\frac{P_2^{X}(r_1,r_2)}{\\rho(r_1)\\,\\rho(r_2)}\n$$\n\n一个值得注意的特例发生在 $r_1 = r_2 = r$ 时。此时三重态的对密度变为：\n$$\nP_2^{\\mathrm{T}}(r,r) = \\frac{1}{2} \\left[\\phi_a(r)\\phi_b(r) - \\phi_b(r)\\phi_a(r)\\right]^2 = 0\n$$\n因此，$g^{\\mathrm{T}}(r, r) = 0$。这阐释了泡利不相容原理，表现为一个“费米穴”：两个自旋相同的电子（三重态的一个分量）在同一位置被发现的概率为零。单重态没有这个限制。\n\n为每个测试用例 $(Z, r_1, r_2)$ 计算所需值的算法如下：\n1.  对于给定的参数集 ($Z$, $r_1$, $r_2$)，首先计算两个轨道在距离 $r_1$ 和 $r_2$ 处的值：$\\phi_a(r_1)$, $\\phi_b(r_1)$, $\\phi_a(r_2)$ 和 $\\phi_b(r_2)$。这些是简单的函数求值。\n2.  使用公式 $\\rho(r) = \\phi_a(r)^2 + \\phi_b(r)^2$ 计算单电子密度 $\\rho(r_1)$ 和 $\\rho(r_2)$。对关联函数的分母是乘积 $\\rho(r_1)\\rho(r_2)$。对于任何有限的 $r \\ge 0$，这个分母都是严格为正的，因为 $\\phi_a(r)$ 在有限的 $r$ 处永不为零。\n3.  使用其定义计算对密度 $P_2^{\\mathrm{S}}(r_1, r_2)$ 和 $P_2^{\\mathrm{T}}(r_1, r_2)$。\n4.  通过将对密度除以步骤2中得到的分母，计算对关联函数 $g^{\\mathrm{S}}(r_1, r_2)$ 和 $g^{\\mathrm{T}}(r_1, r_2)$。\n5.  计算差值 $g^{\\mathrm{S}}(r_1, r_2) - g^{\\mathrm{T}}(r_1, r_2)$。\n6.  将得到的三个值（$g^{\\mathrm{S}}$、$g^{\\mathrm{T}}$及其差值）四舍五入到六位小数。\n7.  对问题陈述中提供的所有测试用例重复此过程。结果将被收集并按规定格式化为单个字符串。\n\n该实现将利用 `numpy` 库来获取数学常数（例如 $\\pi$）和基本函数（例如 `sqrt`、`exp`）。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the pair correlation function for a two-electron system\n    for specified singlet and triplet states.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Z, r1, r2)\n        (1, 0.5, 1.0),\n        (1, 0.0, 0.0),\n        (1, 2.0, 2.0),\n        (2, 0.25, 1.0),\n        (2, 5.0, 5.0),\n    ]\n\n    all_results = []\n\n    for Z, r1, r2 in test_cases:\n        # Define the hydrogen-like orbitals phi_1s (phi_a) and phi_2s (phi_b).\n        # These functions are defined inside the loop to capture Z,\n        # though they could be defined outside taking Z as an argument.\n        def phi_a(r, Z_charge):\n            \"\"\"1s orbital\"\"\"\n            # \\phi_{1s}(r) = (Z^{3/2} / \\sqrt{\\pi}) * e^{-Z r}\n            return (Z_charge**(1.5) / np.sqrt(np.pi)) * np.exp(-Z_charge * r)\n\n        def phi_b(r, Z_charge):\n            \"\"\"2s orbital\"\"\"\n            # \\phi_{2s}(r) = (Z^{3/2} / (4\\sqrt{2\\pi})) * (2 - Z r) * e^{-Z r/2}\n            return (Z_charge**(1.5) / (4.0 * np.sqrt(2.0 * np.pi))) * \\\n                   (2.0 - Z_charge * r) * np.exp(-Z_charge * r / 2.0)\n\n        # Step 1: Calculate orbital values at r1 and r2\n        a1 = phi_a(r1, Z)\n        b1 = phi_b(r1, Z)\n        a2 = phi_a(r2, Z)\n        b2 = phi_b(r2, Z)\n\n        # Step 2: Calculate one-electron densities\n        rho1 = a1**2 + b1**2\n        rho2 = a2**2 + b2**2\n        \n        # Denominator for g(r1, r2)\n        denominator = rho1 * rho2\n\n        # Step 3: Compute pair densities\n        # P_2^S = 0.5 * (a1*b2 + b1*a2)^2\n        # P_2^T = 0.5 * (a1*b2 - b1*a2)^2\n        cross_term_ab = a1 * b2\n        cross_term_ba = b1 * a2\n        \n        P2_S = 0.5 * (cross_term_ab + cross_term_ba)**2\n        P2_T = 0.5 * (cross_term_ab - cross_term_ba)**2\n\n        # Step 4: Calculate pair correlation functions\n        # Handle the case where the denominator might be zero, although\n        # for finite r, rho(r) > 0.\n        if denominator == 0:\n            # This situation implies r1 or r2 is at a location where both\n            # orbitals are zero, or at infinity. Not expected for this problem.\n            # If P2 is also zero, the result could be a limit. For this problem,\n            # this would yield 0 if P2 is 0.\n            g_S = 0.0 if P2_S == 0 else np.nan\n            g_T = 0.0 if P2_T == 0 else np.nan\n        else:\n            g_S = P2_S / denominator\n            g_T = P2_T / denominator\n\n        # Step 5: Compute the difference\n        g_diff = g_S - g_T\n        \n        # Step 6: Store the rounded results for the current case\n        all_results.append([g_S, g_T, g_diff])\n\n    # Final formatting: create the output string as per problem specification.\n    # The format is [[x11,x12,x13],[x21,x22,x23],...] with no spaces and\n    # six decimal places for each float.\n    \n    sublist_strings = []\n    for case_result in all_results:\n        # Format numbers to .6f, join with comma, add brackets\n        formatted_numbers = [f\"{n:.6f}\" for n in case_result]\n        sublist_str = f\"[{','.join(formatted_numbers)}]\"\n        sublist_strings.append(sublist_str)\n    \n    # Join sublists with comma, add outer brackets\n    output_str = f\"[{','.join(sublist_strings)}]\"\n    \n    print(output_str)\n\nsolve()\n```", "id": "2449707"}, {"introduction": "从简单的模型走向真实的量子化学计算，我们需要一套系统性的规则来处理多电子体系的哈密顿量矩阵元。本练习将指导你从第一性原理出发，通过编程实现著名的斯莱特-康顿规则（Slater-Condon rules）。通过这个实践，你将掌握连接抽象的量子力学算符与具体的多电子波函数（斯莱特行列式）之间相互作用计算的核心技术。[@problem_id:2449768]", "problem": "考虑一个锂原子的非相对论、固定原子核（玻恩–奥本海默）的电子哈密顿量，该模型建立在一组正交归一的最小空间原子轨道基和相关的自旋函数上。该哈密顿量是一个单电子算符和一个双电子库仑算符的和，作用于由自旋轨道构建的斯莱特行列式（Slater determinant）上。您将编写的程序必须使用斯莱特–康登规则（Slater–Condon rules），从基本算符定义和费米子波函数的反对称性出发，计算斯莱特行列式之间的特定哈密顿矩阵元。\n\n给定一组由三个空间轨道构成的正交归一基，它们由主量子数和角动量量子数标记：$1s$，$2s$和$2p$（为明确起见，对$2p$使用$m=0$分量），每个空间轨道与两个自旋函数$\\alpha$和$\\beta$配对。这产生了六个自旋轨道，索引如下：\n- 索引 0: $(1s,\\alpha)$，\n- 索引 1: $(1s,\\beta)$，\n- 索引 2: $(2s,\\alpha)$，\n- 索引 3: $(2s,\\beta)$，\n- 索引 4: $(2p,\\alpha)$，\n- 索引 5: $(2p,\\beta)$。\n\n设一个斯莱特行列式由一个包含三个不同自旋轨道索引的严格递增列表指定（因为锂原子有三个电子）。对于$p,q \\in \\{1s,2s,2p\\}$，单电子空间积分$h_{pq}$（单位为 Hartree）由以下对称矩阵给出\n$$\n\\mathbf{h} =\n\\begin{pmatrix}\n-7.432 & -0.050 & -0.020 \\\\\n-0.050 & -0.850 & -0.030 \\\\\n-0.020 & -0.030 & -0.600\n\\end{pmatrix},\n$$\n其行/列顺序为$(1s,2s,2p)$。相应的单电子自旋轨道积分为\n$$\nh_{p\\sigma,q\\sigma'} = \\delta_{\\sigma,\\sigma'}\\, h_{pq},\n$$\n其中$\\delta_{\\sigma,\\sigma'}$是克罗内克（Kronecker）$\\delta$函数。\n\n对于任意$p,q,r,s \\in \\{1s,2s,2p\\}$，双电子空间库仑积分由一个对称的正定形式给出\n$$\ng(p,q,r,s) \\equiv \\frac{1}{1+|p-r|}\\cdot\\frac{1}{1+|q-s|} \\;+\\; \\frac{1}{2}\\,\\frac{1}{1+|p-s|}\\cdot\\frac{1}{1+|q-r|},\n$$\n其中空间轨道映射为整数：$1s \\mapsto 1$，$2s \\mapsto 2$，$2p \\mapsto 3$。该定义确保了所需的索引对称性\n$$\ng(p,q,r,s) = g(q,p,s,r) = g(r,s,p,q),\n$$\n并且所有能量单位均为 Hartree。相应的自旋轨道双电子积分为\n$$\n(p\\sigma, q\\sigma' \\mid r\\tau, s\\tau') \\;=\\; \\delta_{\\sigma,\\tau}\\,\\delta_{\\sigma',\\tau'}\\; g(p,q,r,s).\n$$\n\n仅从上述算符级定义和斯莱特行列式的反对称性出发，实现斯莱特–康登规则，以计算由六个自旋轨道构建的两个三电子斯莱特行列式$\\vert D_I \\rangle$和$\\vert D_J \\rangle$之间的哈密顿矩阵元$\\langle D_I \\vert \\hat{H} \\vert D_J \\rangle$。假定每个行列式均以自旋轨道索引的规范升序表示，并采用规范相约定，因此除了斯莱特–康登表达式中固有的反对称化之外，不会出现额外的置换相因子。使用上述的克罗内克$\\delta$自旋选择定则。\n\n您的程序必须实现一般情况，然后评估以下测试集。每个测试用例是一对行列式$(D_I, D_J)$，每个行列式均以三个自旋轨道索引的排序列表形式给出：\n- 测试 1（对角元“参考”）：$D_I = D_J = [0,1,2]$。\n- 测试 2（单激发，自旋守恒）：$D_I = [0,1,2]$，$D_J = [0,2,3]$。\n- 测试 3（单激发，自旋翻转）：$D_I = [0,1,2]$，$D_J = [0,1,3]$。\n- 测试 4（双激发，仅交换项存在）：$D_I = [0,1,2]$，$D_J = [2,3,4]$。\n- 测试 5（双激发，仅库仑项存在）：$D_I = [0,1,2]$，$D_J = [2,4,5]$。\n- 测试 6（相差三个轨道）：$D_I = [0,1,2]$，$D_J = [3,4,5]$。\n\n要求：\n- 所有哈密顿矩阵元必须以 Hartree 为单位计算，并以浮点数形式报告。\n- 仅在出现角度时使用弧度或度；此处不出现角度。\n- 对于每个测试用例，结果必须是单个浮点数（以 Hartree 为单位的哈密顿矩阵元）。\n- 您的程序应生成单行输出，包含一个用方括号括起来的逗号分隔列表，列表内无空格（例如，“[x1,x2,x3,x4,x5,x6]”）。每个浮点数必须四舍五入到小数点后恰好六位。\n\n您的解决方案必须从所提供的算符定义和费米子反对称原理推导并实现其逻辑。除从这些基础推导出的公式外，不要使用或假设任何其他公式。确保所有数值均以 Hartree 为单位表示，并在最终输出行中四舍五入到小数点后六位。", "solution": "我们从 Born–Oppenheimer 近似下的非相对论电子哈密顿量开始，其形式为\n$$\n\\hat{H} = \\sum_{i=1}^{N_e} \\hat{h}(i) \\;+\\; \\frac{1}{2} \\sum_{\\substack{i,j=1 \\\\ i\\neq j}}^{N_e} \\frac{1}{r_{ij}},\n$$\n其中 $N_e$ 是电子数，$\\hat{h}(i)$ 是单电子算符（动能加电子-原子核吸引能），$r_{ij}$ 是电子间距离。斯莱特行列式通过自旋轨道的反对称乘积来强制实现费米子反对称性。对于正交归一的自旋轨道基以及由单体和双体算符构成的哈密顿量，斯莱特行列式之间的矩阵元可以表示为由反对称性和正交归一性决定的封闭解析形式（即斯莱特–康登规则）。这些规则直接来自于将 $\\langle D_I | \\hat{H} | D_J \\rangle$ 展开为积分之和，并观察到只有具有适当索引重合的项才能因正交归一性而存在，并且相对符号由反对称（楔积）结构确定。\n\n我们使用以下基本事实：\n- 单电子自旋轨道积分满足 $h_{p\\sigma,q\\sigma'} = \\delta_{\\sigma,\\sigma'} h_{pq}$，其中 $h_{pq}$ 已给出，$\\delta$ 是克罗内克 $\\delta$ 函数。这是由于在所选的正交归一基中空间部分和自旋部分是可分的。\n- 双电子自旋轨道积分满足 $(p\\sigma, q\\sigma' \\mid r\\tau, s\\tau') = \\delta_{\\sigma,\\tau}\\,\\delta_{\\sigma',\\tau'}\\, g(p,q,r,s)$，这与自旋积分产生克罗内克 $\\delta$ 函数以及由 $g$ 编码的空间库仑核函数相一致。\n\n从算符级的结构来看，一个斯莱特行列式矩阵元为零，除非两个行列式相同或最多相差两个自旋轨道。这个选择定则的出现是因为单体算符最多能连接相差一个自旋轨道的行列式，而双体算符最多能连接相差两个自旋轨道的行列式。结合正交归一性，可得：\n- 如果两个行列式相同，对角元包含所有占据自旋轨道 $i$ 的单电子贡献 $h_{ii}$ 以及每对占据轨道的电子-电子贡献，后者由库仑项减去交换项组成。根据自旋克罗内克 $\\delta$ 函数的强制要求，只有当两个自旋相同时，交换项才存在。\n- 如果两个行列式相差单个自旋轨道 $i \\to a$，只有单电子耦合项和混合的单-双电子项存在。电子-电子部分涉及激发自旋轨道与每个共同占据的自旋轨道 $j$ 的相互作用，并表现为库仑项减去交换项。如果自旋标记与克罗内克 $\\delta$ 函数不兼容，自旋选择定则会抑制这些项。因为我们使用严格排序的行列式和固定的规范相约定，这里不会出现额外的置换相。\n- 如果两个行列式相差一个双激发 $i,j \\to a,b$，唯一存在的双电子耦合是反对称化的双电子积分。同样，自旋选择定则强制要求库仑项 $(ab\\mid ij)$ 和交换项 $(ab\\mid ji)$ 只有在它们的自旋克罗内克 $\\delta$ 函数被满足时才存在。\n- 如果两个行列式相差超过两个自旋轨道，矩阵元为零，因为单体和双体算符都不能提供必要的激发。\n\n对于一个具有占据自旋轨道 $O = \\{i,j,k\\}$ 的三电子行列式 $\\vert D \\rangle$，对角矩阵元为\n$$\n\\langle D \\vert \\hat{H} \\vert D \\rangle \\;=\\; \\sum_{p \\in O} h_{pp} \\;+\\; \\frac{1}{2}\\sum_{p \\in O}\\sum_{q \\in O} \\left[ (p,q\\mid p,q) - (p,q\\mid q,p) \\right],\n$$\n需要理解的是，由于自旋克罗内克 $\\delta$ 函数，$(p,q\\mid q,p)$ 项为零，除非 $p$ 和 $q$ 的自旋匹配。\n\n对于具有共同占据集 $C$ 的行列式之间发生的单激发 $i \\to a$，非对角矩阵元为\n$$\n\\langle D_I \\vert \\hat{H} \\vert D_J \\rangle \\;=\\; h_{ai} \\;+\\; \\sum_{j \\in C} \\left[ (a,j\\mid i,j) - (a,j\\mid j,i) \\right],\n$$\n同样受自旋 $\\delta$ 函数的限制。\n\n对于双激发 $i,j \\to a,b$，非对角矩阵元为\n$$\n\\langle D_I \\vert \\hat{H} \\vert D_J \\rangle \\;=\\; (a,b\\mid i,j) - (a,b\\mid j,i),\n$$\n由自旋 $\\delta$ 函数强制决定哪些项存在。\n\n算法设计：\n- 将每个自旋轨道用其空间索引 $p \\in \\{1,2,3\\}$ 和自旋 $\\sigma \\in \\{\\alpha,\\beta\\}$ 表示，按给定方式从 $\\{0,\\dots,5\\}$ 映射而来。\n- 使用提供的矩阵 $\\mathbf{h}$ 实现单电子积分函数 $h_{p\\sigma,q\\sigma'} = \\delta_{\\sigma,\\sigma'} h_{pq}$。\n- 使用以下公式实现双电子积分函数 $(p\\sigma,q\\sigma'\\mid r\\tau,s\\tau') = \\delta_{\\sigma,\\tau}\\delta_{\\sigma',\\tau'} g(p,q,r,s)$：\n$$\ng(p,q,r,s) = \\frac{1}{1+|p-r|}\\cdot\\frac{1}{1+|q-s|} \\;+\\; \\frac{1}{2}\\,\\frac{1}{1+|p-s|}\\cdot\\frac{1}{1+|q-r|}.\n$$\n- 给定两个行列式 $D_I$ 和 $D_J$，计算空穴集 $H = D_I \\setminus D_J$ 和粒子集 $P = D_J \\setminus D_I$。令 $m = |H| = |P|$。然后：\n  - 如果 $m \\ge 3$，返回 $0$。\n  - 如果 $m = 0$，评估上面的对角元表达式。\n  - 如果 $m = 1$，使用共同占据集 $C$ 评估上面的单激发表达式。\n  - 如果 $m = 2$，评估上面的双激发表达式。\n- 因为行列式是规范排序的，并且我们采用固定的相约定，所以除了反对称化积分中编码的符号外，不会出现额外的符号。\n\n自旋选择和测试用例分析：\n- 测试 1: $[0,1,2]$ 对角元。单电子部分求和为 $h_{00}+h_{11}+h_{22} = -7.432 + (-7.432) + (-0.850) = -15.714$。对所有电子对求和的双电子部分包含库仑项减去交换项，其中交换项仅对自旋相同的电子对存在。最终的双电子贡献总和为 $3.000000$，因此总能量为 $-12.714000$ Hartree。\n- 测试 2: 单激发 $1\\beta \\to 2\\beta$；单电子项 $h_{3,1}$ 和与共同占据轨道 $\\{(1s,\\alpha),(2s,\\alpha)\\}$ 的库仑相互作用项均存在，而交换项因自旋选择定则而消失。这产生一个正的非对角耦合（单位 Hartree）。\n- 测试 3: 单激发 $2\\alpha \\to 2\\beta$ 是一个自旋翻转，所有项都因自旋克罗内克 $\\delta$ 函数而消失；矩阵元为 $0$。\n- 测试 4: 双激发 $1\\alpha,1\\beta \\to 2\\beta,2p\\alpha$。根据自旋选择定则，库仑项 $(ab\\mid ij)$ 消失，而交换项 $(ab\\mid ji)$ 存在，产生一个负值（非零交换项的相反数）。\n- 测试 5: 双激发 $1\\alpha,1\\beta \\to 2p\\alpha,2p\\beta$。根据自旋选择定则，只有库仑项存在，得到一个正值。\n- 测试 6: 行列式相差三个轨道；根据算符秩的限制，矩阵元为 $0$。\n\n实现细节：\n- 对行列式使用严格递增的索引列表。\n- 将精确算术实现为浮点数，并将输出四舍五入到小数点后六位。\n- 所有能量均以 Hartree 为单位报告。\n- 输出格式必须是单行，包含一个用方括号括起来的逗号分隔列表，列表内无空格。\n\n程序计算所有六个指定用例，并以要求的格式和精度打印结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# Mapping of spin-orbital index to (spatial_label, spin)\n# Spatial labels use integers: 1->1s, 2->2s, 3->2p\n# Spin is represented as +1 for alpha and -1 for beta for convenience\nspin_orbitals = {\n    0: (1, +1),  # (1s, alpha)\n    1: (1, -1),  # (1s, beta)\n    2: (2, +1),  # (2s, alpha)\n    3: (2, -1),  # (2s, beta)\n    4: (3, +1),  # (2p, alpha)\n    5: (3, -1),  # (2p, beta)\n}\n\n# One-electron spatial integrals h_{pq} in Hartree with order (1s,2s,2p)\nh_spatial = np.array([\n    [-7.432, -0.050, -0.020],\n    [-0.050, -0.850, -0.030],\n    [-0.020, -0.030, -0.600],\n], dtype=float)\n\ndef delta_spin(s1: int, s2: int) -> int:\n    \"\"\"Kronecker delta for spin labels (+1 for alpha, -1 for beta).\"\"\"\n    return 1 if s1 == s2 else 0\n\ndef s_decay(p: int, q: int) -> float:\n    \"\"\"s(p,q) = 1/(1+|p-q|) using spatial labels 1,2,3.\"\"\"\n    return 1.0 / (1 + abs(p - q))\n\ndef g_eri(p: int, q: int, r: int, s: int) -> float:\n    \"\"\"\n    Spatial two-electron integral g(p,q,r,s) in Hartree:\n    g = s(p,r)*s(q,s) + 0.5*s(p,s)*s(q,r)\n    \"\"\"\n    return s_decay(p, r) * s_decay(q, s) + 0.5 * s_decay(p, s) * s_decay(q, r)\n\ndef h_so(a: int, b: int) -> float:\n    \"\"\"One-electron spin-orbital integral h_{a,b} with spin selection.\"\"\"\n    pa, sa = spin_orbitals[a]\n    pb, sb = spin_orbitals[b]\n    if sa != sb:\n        return 0.0\n    # Convert spatial labels 1..3 to indices 0..2\n    ia = pa - 1\n    ib = pb - 1\n    return float(h_spatial[ia, ib])\n\ndef eri_so(p: int, q: int, r: int, s: int) -> float:\n    \"\"\"\n    Two-electron spin-orbital integral (p q | r s) with spin selection.\n    p,q,r,s are spin-orbital indices.\n    \"\"\"\n    pp, sp = spin_orbitals[p]\n    qq, sq = spin_orbitals[q]\n    rr, sr = spin_orbitals[r]\n    ss, ssn = spin_orbitals[s]\n    if (sp == sr) and (sq == ssn):\n        return g_eri(pp, qq, rr, ss)\n    return 0.0\n\ndef h_matrix_element(det_I: list, det_J: list) -> float:\n    \"\"\"\n    Compute <D_I | H | D_J> using Slater-Condon rules:\n    - If determinants identical: diagonal element.\n    - If single excitation: one-electron + Coulomb - exchange with common occs.\n    - If double excitation: antisymmetrized two-electron integral.\n    - Else (>= triple excitation): 0.\n    Assumes determinants are sorted ascending and canonical phase convention.\n    \"\"\"\n    set_I = set(det_I)\n    set_J = set(det_J)\n    holes = sorted([i for i in det_I if i not in set_J])\n    parts = sorted([a for a in det_J if a not in set_I])\n    m = len(holes)\n    if m != len(parts):\n        # Should not occur for valid determinants; return 0 defensively.\n        return 0.0\n\n    if m >= 3:\n        return 0.0\n\n    if m == 0:\n        # Diagonal element\n        # One-electron part\n        one_e = sum(h_so(i, i) for i in det_I)\n        # Two-electron part: 0.5 * sum_{i,j in occ} [ (ij|ij) - (ij|ji) ]\n        two_e = 0.0\n        for i in det_I:\n            for j in det_I:\n                two_e += (eri_so(i, j, i, j) - eri_so(i, j, j, i))\n        two_e *= 0.5\n        return one_e + two_e\n\n    if m == 1:\n        # Single excitation i -> a\n        i = holes[0]\n        a = parts[0]\n        common = sorted(set_I.intersection(set_J))\n        val = h_so(a, i)\n        for j in common:\n            val += (eri_so(a, j, i, j) - eri_so(a, j, j, i))\n        return val\n\n    # m == 2\n    # Double excitation i,j -> a,b\n    i, j = holes\n    a, b = parts\n    return eri_so(a, b, i, j) - eri_so(a, b, j, i)\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        ([0, 1, 2], [0, 1, 2]),  # Test 1: diagonal\n        ([0, 1, 2], [0, 2, 3]),  # Test 2: single, spin-conserving\n        ([0, 1, 2], [0, 1, 3]),  # Test 3: single, spin-flip\n        ([0, 1, 2], [2, 3, 4]),  # Test 4: double, exchange-only\n        ([0, 1, 2], [2, 4, 5]),  # Test 5: double, Coulomb-only\n        ([0, 1, 2], [3, 4, 5]),  # Test 6: differ by three, zero\n    ]\n\n    results = []\n    for det_I, det_J in test_cases:\n        val = h_matrix_element(det_I, det_J)\n        results.append(f\"{val:.6f}\")\n\n    # Final print statement in the exact required format: no spaces.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2449768"}]}