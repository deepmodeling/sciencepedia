{"hands_on_practices": [{"introduction": "本练习探讨了应用UMAP时一个至关重要的方面：确保所选的距离度量与数据的内在拓扑结构相匹配。我们将研究UMAP如何处理周期性数据（例如角度），并观察朴素的欧几里得距离如何破坏流形结构。通过实现一个正确的循环距离度量，您将获得根据数据几何特性定制算法的实践经验，这是流形学习中的一项基本技能[@problem_id:3190448]。", "problem": "您的任务是研究均匀流形逼近与投影 (UMAP) 如何处理具有循环内在几何结构的周期性数据，例如角度。UMAP 首先在原始空间中构建一个加权的 $k$-近邻图，然后通过优化该图上的一个目标函数来学习一个低维表示。像角度这样的周期性变量天然存在于一个圆上，其真实的邻域结构必须考虑到 $0$ 和 $2\\pi$ 之间的循环环绕效应。如果对角度值使用标准的欧几里得距离，那么接近 $0$ 的角度和接近 $2\\pi$ 的角度之间的环绕邻域关系会被人为地切断，从而在学习到的流形表示中导致不合理的切口。\n\n从度量空间和邻域图的核心原理出发，请完成以下任务：\n\n- 构建一个由代表角度的单个周期性变量组成的合成数据集，这些角度在圆上均匀分布。每个数据集的大小为 $n$，角度以弧度为单位，范围在 $[0,2\\pi)$ 区间内。一些测试用例会在基础角度上添加标准差为 $\\sigma$ 的小范围中心化高斯噪声，然后进行模 $2\\pi$ 环绕处理；任何角度都必须保持在 $[0,2\\pi)$ 范围内。\n\n- 对每个数据集，使用以下两种关于角度变量的距离选择来构建一个 $k$-近邻列表：\n  1. 作用于角度值的朴素欧几里得距离。\n  2. 尊重圆上周期性的圆形距离。\n\n- 按如下方式定义并计算循环连续性分数 $S$：对于每个角度 $\\theta_i$，使用圆形距离确定其在圆上的两个最近邻居。然后，检查这两个最近的圆形邻居是否都包含在根据所选度量构建的 $\\theta_i$ 的 $k$-近邻列表中。分数 $S$ 是满足此条件的点的比例，表示为介于 $0$ 和 $1$ 之间的小数。\n\n- 将 $S$ 解释为一个代理指标，用于判断 UMAP 的初始邻域图是否保留了循环性。解释为什么使用圆形距离度量是一种基于原理的方法，可以防止在环绕边界处出现不合理的切口，并说明这与 UMAP 对高维邻域图的依赖有何关系。\n\n您的程序必须实现以上步骤，并为下面的测试套件中的每个数据集计算 $S$。角度必须以弧度为单位。最终结果必须四舍五入到三位小数。\n\n需要覆盖的测试套件参数集：\n- 情况 A（理想路径，朴素度量显示边界切口）：$n=100$, $k=2$, $\\sigma=0.0$, 度量 = 角度上的欧几里得距离。\n- 情况 B（理想路径，圆形度量修复环绕问题）：$n=100$, $k=2$, $\\sigma=0.0$, 度量 = 圆形距离。\n- 情况 C（边缘情况，邻域大小不足）：$n=50$, $k=1$, $\\sigma=0.0$, 度量 = 圆形距离。\n- 情况 D（带噪声的角度，朴素度量）：$n=80$, $k=3$, $\\sigma=0.01$, 度量 = 角度上的欧几里得距离，使用固定的随机种子以保证可复现性。\n- 情况 E（带噪声的角度，圆形度量）：$n=80$, $k=3$, $\\sigma=0.01$, 度量 = 圆形距离，使用与情况 D 相同的固定随机种子。\n\n您的程序应产生单行输出，其中包含结果 $[S_A,S_B,S_C,S_D,S_E]$，形式为方括号内由逗号分隔的列表，每个 $S$ 值四舍五入到三位小数（例如，$[0.980,1.000,0.000,0.975,1.000]$）。", "solution": "该问题要求分析均匀流形逼近与投影 (UMAP) 如何处理周期性数据，具体方法是研究其初始高维邻域图的构建过程。UMAP 低维表示的保真度在很大程度上取决于这个初始图，而这个图又是由用于定义邻域的距离度量的选择所决定的。\n\n代表角度 $\\theta$ 的变量本质上是周期性的，存在于一个圆上，可表示为流形 $\\mathbb{S}^1$。角度集合通常由一个区间内的值表示，例如 $[0, 2\\pi)$。一个关键的挑战出现在这个区间的边界：对于一个小的 $\\epsilon > 0$，角度 $2\\pi - \\epsilon$ 在圆上与角度 $\\epsilon$ 非常接近。将这些值视为直线上数值的朴素距离度量将无法捕捉到这种邻近性，从而导致不正确的拓扑表示。\n\n让我们考虑一个包含 $n$ 个角度的数据集 $\\{\\theta_i\\}_{i=1}^n$，其中每个 $\\theta_i \\in [0, 2\\pi)$。\n\n首先，我们定义所考虑的两种距离度量。\n1. **朴素欧几里得距离** $d_E$ 在区间 $[0, 2\\pi)$ 上定义为：\n$$ d_E(\\theta_i, \\theta_j) = |\\theta_i - \\theta_j| $$\n这种度量会错误地为那些周期性相邻但位于 $0/2\\pi$ 边界两侧的点分配一个很大的距离。例如，$d_E(0.1, 2\\pi - 0.1) = 2\\pi - 0.2$，这接近于可能的最大距离，而在圆上，这些点之间的弧长仅为 $0.2$。\n\n2. **圆形距离** $d_C$ 正确地测量了周长为 $2\\pi$ 的圆上两点之间的最短弧长。它定义为：\n$$ d_C(\\theta_i, \\theta_j) = \\min(|\\theta_i - \\theta_j|, 2\\pi - |\\theta_i - \\theta_j|) $$\n使用此度量，$d_C(0.1, 2\\pi - 0.1) = \\min(2\\pi - 0.2, 2\\pi - (2\\pi - 0.2)) = \\min(2\\pi - 0.2, 0.2) = 0.2$。这正确地反映了圆上两点的邻近性。\n\nUMAP 的第一步是构建一个加权的 $k$-近邻（$k$-NN）图。对于每个点 $\\theta_i$，它会找到一个集合 $N_k(\\theta_i)$，其中包含 $k$ 个与 $\\theta_i$ 距离 $d(\\theta_i, \\theta_j)$ 最小的点 $\\{\\theta_j | j \\neq i\\}$。因此，度量（$d_E$ 或 $d_C$）的选择至关重要。如果使用 $d_E$，一个靠近 $0$ 的点 $\\theta_i$ 的邻居将从其他靠近 $0$ 的点中选择，而其靠近 $2\\pi$ 的真实邻居将被认为是遥远的。这在边界处人为地“切断”了圆，创建了一个拓扑上等价于线段而非圆的图。由于 UMAP 的目标是在低维嵌入中保留这个高维图的拓扑结构，一个被切断的图将不可避免地导致一个被切断的嵌入。\n\n使用圆形距离 $d_C$ 是防止这种情况的一种基于原理的方法。它并非一个随意的“技巧”，而是将关于数据拓扑的先验知识融入分析中。通过以尊重数据周期性的方式定义距离，我们确保 $k$-NN 图能正确表示各处的局部结构，包括环绕边界。因此，UMAP 将被引导去学习一个保留圆形拓扑的低维嵌入。\n\n为了量化这种循环结构的保留程度，我们定义了循环连续性分数 $S$。对于每个点 $\\theta_i$，其在圆上的两个“真实”邻居是当所有点按角度排序后，紧邻其前后的点。设这两个真实邻居为 $\\theta_{p(i)}$ 和 $\\theta_{s(i)}$。分数 $S$ 是满足以下条件的点的比例：该点的两个真实邻居都被包含在使用所选度量计算的 $k$-NN 列表中。\n$$ S = \\frac{1}{n} \\sum_{i=1}^n \\mathbb{I}(\\{\\theta_{p(i)}, \\theta_{s(i)}\\} \\subseteq N_k(\\theta_i)) $$\n其中 $\\mathbb{I}(\\cdot)$ 是指示函数，当条件为真时值为 $1$，否则为 $0$。\n\n分数 $S=1.0$ 表示局部循环结构被完美保留，而 $S < 1.0$ 则表示 $k$-NN 图存在断开的连接。\n\n测试用例分析：\n- **情况 A ($n=100, k=2, \\sigma=0.0$, 欧几里得距离):** 对于均匀分布的点，位于 $\\theta=0$ 的点，其真实邻居位于 $2\\pi/100$ 和 $2\\pi(99/100)$。欧几里得度量会找到它的 2 个最近邻居是 $2\\pi/100$ 和 $4\\pi/100$，从而错过了位于 $2\\pi(99/100)$ 的邻居。类似的错误也发生在位于 $2\\pi(99/100)$ 的点上。所有其他 98 个点将能正确识别其局部邻居。因此，我们预期 $S = 98/100 = 0.98$。\n- **情况 B ($n=100, k=2, \\sigma=0.0$, 圆形距离):** 圆形度量能为所有点（包括边界上的点）正确识别其真实邻居。由于 $k=2$，每个点的 2-NN 列表将恰好包含其两个真实邻居。因此，我们预期 $S = 100/100 = 1.0$。\n- **情况 C ($n=50, k=1$, 圆形距离):** 分数的计算条件要求*两个*真实邻居都在 $k$-NN 列表中。当 $k=1$ 时，该列表只能包含一个邻居。因此，无论使用何种度量，任何点都无法满足此条件。我们预期 $S = 0/50 = 0.0$。\n- **情况 D ($n=80, k=3, \\sigma=0.01$, 欧几里得距离):** 添加噪声后，情况与情况 A 类似。微小的噪声 $\\sigma=0.01$ 不太可能改变欧几里得度量在边界处的根本缺陷。具有最小和最大角度的点很可能会测试失败。对于 $n=80$，2 个点的失败将得到分数 $S = 78/80 = 0.975$。\n- **情况 E ($n=80, k=3, \\sigma=0.01$, 圆形距离):** 圆形度量与 $k=3$ 的组合应该对小噪声具有鲁棒性。两个真实邻居几乎肯定会是两个最近的点。由于 $k=3$（大于所要求的 2），每个点的 3-NN 列表都将包含其两个真实邻居。我们预期 $S=1.0$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by calculating the cyclic continuity score for a suite of test cases.\n    \"\"\"\n\n    test_cases = [\n        # Case A: n=100, k=2, sigma=0.0, metric=Euclidean\n        {'n': 100, 'k': 2, 'sigma': 0.0, 'metric': 'euclidean', 'seed': None},\n        # Case B: n=100, k=2, sigma=0.0, metric=circular\n        {'n': 100, 'k': 2, 'sigma': 0.0, 'metric': 'circular', 'seed': None},\n        # Case C: n=50, k=1, sigma=0.0, metric=circular\n        {'n': 50, 'k': 1, 'sigma': 0.0, 'metric': 'circular', 'seed': None},\n        # Case D: n=80, k=3, sigma=0.01, metric=Euclidean, seed=42\n        {'n': 80, 'k': 3, 'sigma': 0.01, 'metric': 'euclidean', 'seed': 42},\n        # Case E: n=80, k=3, sigma=0.01, metric=circular, seed=42\n        {'n': 80, 'k': 3, 'sigma': 0.01, 'metric': 'circular', 'seed': 42},\n    ]\n\n    results = []\n    for params in test_cases:\n        score = calculate_cyclic_continuity_score(\n            n=params['n'],\n            k=params['k'],\n            sigma=params['sigma'],\n            metric=params['metric'],\n            seed=params['seed']\n        )\n        results.append(f\"{score:.3f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef calculate_cyclic_continuity_score(n, k, sigma, metric, seed):\n    \"\"\"\n    Calculates the cyclic continuity score S for a given set of parameters.\n\n    Args:\n        n (int): Number of points.\n        k (int): Number of nearest neighbors.\n        sigma (float): Standard deviation of Gaussian noise.\n        metric (str): The distance metric to use ('euclidean' or 'circular').\n        seed (int or None): Random seed for reproducibility.\n\n    Returns:\n        float: The calculated cyclic continuity score S.\n    \"\"\"\n    if seed is not None:\n        np.random.seed(seed)\n\n    # 1. Generate synthetic data\n    base_angles = np.linspace(0, 2 * np.pi, n, endpoint=False)\n    if sigma > 0:\n        noise = np.random.normal(loc=0.0, scale=sigma, size=n)\n        angles = (base_angles + noise) % (2 * np.pi)\n    else:\n        angles = base_angles\n\n    # 2. Determine the two true circular neighbors for each point\n    # These are the adjacent points on the sorted circle.\n    sorted_indices = np.argsort(angles)\n    ranks = np.empty_like(sorted_indices)\n    ranks[sorted_indices] = np.arange(n)\n    \n    true_neighbors = {}\n    for i in range(n):\n        rank_i = ranks[i]\n        # Find ranks of predecessor and successor with wrap-around\n        pred_rank = (rank_i - 1 + n) % n\n        succ_rank = (rank_i + 1) % n\n        # Get original indices of these neighbors\n        pred_idx = sorted_indices[pred_rank]\n        succ_idx = sorted_indices[succ_rank]\n        true_neighbors[i] = {pred_idx, succ_idx}\n\n    # 3. Build k-nearest neighbor list using the chosen metric\n    # Reshape for broadcasting\n    points_col = angles[:, np.newaxis]\n    \n    if metric == 'euclidean':\n        # Naive Euclidean distance on angle values\n        dist_matrix = np.abs(points_col - points_col.T)\n    elif metric == 'circular':\n        # Distance on the circle\n        diff = np.abs(points_col - points_col.T)\n        dist_matrix = np.minimum(diff, 2 * np.pi - diff)\n    else:\n        raise ValueError(\"Invalid metric specified\")\n\n    # Exclude self from being a neighbor\n    np.fill_diagonal(dist_matrix, np.inf)\n\n    # Get indices of the k nearest neighbors for each point\n    knn_indices = np.argsort(dist_matrix, axis=1)[:, :k]\n\n    # 4. Compute the cyclic continuity score S\n    successful_points = 0\n    for i in range(n):\n        # The k-NN list for point i\n        point_knn_set = set(knn_indices[i])\n        # The set of two true neighbors for point i\n        point_true_neighbors = true_neighbors[i]\n        \n        # Check if both true neighbors are in the k-NN list\n        if point_true_neighbors.issubset(point_knn_set):\n            successful_points += 1\n            \n    score = successful_points / n\n    return score\n\nsolve()\n```", "id": "3190448"}, {"introduction": "除了显式的拓扑结构外，数据的统计属性（如噪声相关性）也会显著影响UMAP的性能。本练习深入探讨了预处理的理论基础，特别是数据白化及其对UMAP所用邻域距离的影响[@problem_id:3190525]。通过推导白化有助于使嵌入与真实流形结构对齐的条件，您将对统计变换与几何解释之间的相互作用有更深刻的理解。", "problem": "考虑由一维潜在坐标 $s \\in \\mathbb{R}$ 生成的高维观测值，该坐标通过平滑映射 $m(s) \\in \\mathbb{R}^{2}$ 嵌入到二维环境空间中，并带有加性零均值高斯噪声 $\\epsilon$，其协方差矩阵为 $\\Sigma \\in \\mathbb{R}^{2 \\times 2}$。观测点为 $x(s) = m(s) + \\epsilon$。均匀流形近似与投影（Uniform Manifold Approximation and Projection, UMAP）使用所选特征度量中的成对距离来构建邻域图。特征预白化是指应用一个线性变换 $W \\in \\mathbb{R}^{2 \\times 2}$，使得变换后的特征具有单位协方差。\n\n假设局部邻域足够小，以至于流形差异可以被线性化。您的任务是：\n\n$1.$ 从协方差、线性化以及线性变换对距离影响的基本定义出发，推导预白化后具有潜在坐标 $s$ 和 $s + \\Delta s$ 的点之间的平方无穷小距离的表达式，用流形切线 $t(s) = \\frac{dm}{ds}$ 和协方差矩阵 $\\Sigma$ 表示。\n\n$2.$ 从第一性原理出发，推导一个充要条件，在该条件下，预白化产生的邻域距离与沿流形的潜在坐标距离 $|\\Delta s|$ 成均匀比例，从而使UMAP使用的邻域几何与底层流形几何对齐。\n\n$3.$ 使用合成相关数据进行验证：设流形为 $m(s) = \\begin{pmatrix} s \\\\ 2s \\end{pmatrix}$，噪声协方差为 $\\Sigma = \\begin{pmatrix} 3  2 \\\\ 2  5 \\end{pmatrix}$。在您推导的条件下，计算白化后平方邻域距离中乘以 $\\Delta s^{2}$ 的比例常数 $c$。给出 $c$ 的最终数值，并将答案四舍五入到四位有效数字。", "solution": "问题陈述已经过严格审查，并被确定为有效。它在科学上基于统计学习和微分几何的原理，问题提出得当，目标明确，并提供了一套完整且一致的已知条件。因此，我们可以着手进行完整解答。\n\n该问题要求进行三个相关的推导，涉及预白化对从噪声流形中采样的数据的邻域距离的影响，这是理解诸如均匀流形近似与投影（Uniform Manifold Approximation and Projection, UMAP）等算法的核心概念。\n\n**1. 预白化后平方无穷小距离的推导**\n\n我们已知观测数据点为 $x(s) = m(s) + \\epsilon$，其中 $s \\in \\mathbb{R}$ 是一个潜在坐标，$m(s) \\in \\mathbb{R}^2$ 是一个平滑流形嵌入，$\\epsilon$ 是零均值高斯噪声，其协方差为 $\\Sigma \\in \\mathbb{R}^{2 \\times 2}$。\n\n预白化是一个线性变换 $x \\mapsto Wx$，其中选择 $W \\in \\mathbb{R}^{2 \\times 2}$ 使得变换后的噪声 $W\\epsilon$ 的协方差为单位矩阵 $I$。$W\\epsilon$ 的协方差由 $E[(W\\epsilon)(W\\epsilon)^T] = W E[\\epsilon \\epsilon^T] W^T = W \\Sigma W^T$ 给出。因此，白化条件是 $W \\Sigma W^T = I$。假设 $\\Sigma$ 是正定的，一个有效的选择是 $W = \\Sigma^{-1/2}$，其中 $\\Sigma^{-1/2}$ 是 $\\Sigma$ 的矩阵平方根的逆。由于 $\\Sigma$ 是一个对称协方差矩阵，其平方根 $\\Sigma^{1/2}$ 及其逆 $\\Sigma^{-1/2}$ 也是对称的。该条件得到满足：$\\Sigma^{-1/2} \\Sigma (\\Sigma^{-1/2})^T = \\Sigma^{-1/2} \\Sigma \\Sigma^{-1/2} = \\Sigma^{-1/2} (\\Sigma^{1/2}\\Sigma^{1/2}) \\Sigma^{-1/2} = (\\Sigma^{-1/2}\\Sigma^{1/2})(\\Sigma^{1/2}\\Sigma^{-1/2}) = I \\cdot I = I$。\n由此，我们还可以推断出 $W^T W = (\\Sigma^{-1/2})^T \\Sigma^{-1/2} = \\Sigma^{-1/2} \\Sigma^{-1/2} = \\Sigma^{-1}$。\n\n邻域几何由点之间的距离定义。对于理解流形结构，相关的距离是数据点平均位置之间的距离，这些平均位置就是流形上无噪声的点本身。让我们考虑对应于潜在坐标 $s$ 和 $s + \\Delta s$ 的两个这样的点。它们在流形上的位置是 $m(s)$ 和 $m(s + \\Delta s)$。\n\n应用白化变换 $W$ 后，这些点被映射到 $W m(s)$ 和 $W m(s+\\Delta s)$。这些变换后点之间的平方欧几里得距离就是 UMAP 在其邻域构建中实际使用的距离。设这个平方距离为 $d^2$。\n$$d^2(s, s+\\Delta s) = ||W m(s+\\Delta s) - W m(s)||^2 = ||W (m(s+\\Delta s) - m(s))||^2$$\n我们被要求计算无穷小距离，这意味着 $\\Delta s$ 很小。我们使用指定的线性化假设：流形差异可以用切向量来近似。\n$$m(s+\\Delta s) - m(s) \\approx \\frac{dm}{ds} \\Delta s = t(s) \\Delta s$$\n这里，$t(s) = \\frac{dm}{ds}$ 是流形上对应于 $s$ 的点的切向量。\n\n将此近似代入 $d^2$ 的表达式中：\n$$d^2 \\approx ||W (t(s) \\Delta s)||^2$$\n由于 $\\Delta s$ 是一个标量，我们可以将其提出来：\n$$d^2 \\approx (\\Delta s)^2 ||W t(s)||^2$$\n平方范数由向量与自身的点积给出：\n$$||W t(s)||^2 = (W t(s))^T (W t(s)) = t(s)^T W^T W t(s)$$\n如前所述，$W^T W = \\Sigma^{-1}$。将此代入表达式，得到平方无穷小距离的最终结果：\n$$d^2(s, s+\\Delta s) = (\\Delta s)^2 \\left( t(s)^T \\Sigma^{-1} t(s) \\right)$$\n\n**2. 均匀比例性的条件**\n\n第二个任务是找到一个充要条件，使得白化后的邻域距离 $d$ 与潜在坐标距离 $|\\Delta s|$ 成均匀比例。这意味着 $d = k |\\Delta s|$，对于某个不依赖于流形上位置 $s$ 的常数 $k > 0$。\n\n将此关系平方，我们得到 $d^2 = k^2 (\\Delta s)^2$。\n令 $c = k^2$，条件是 $d^2(s, s+\\Delta s) = c (\\Delta s)^2$，对于一个不依赖于 $s$ 的常数 $c > 0$。\n\n从第1部分，我们推导了平方距离的表达式：\n$$d^2(s, s+\\Delta s) = (\\Delta s)^2 \\left( t(s)^T \\Sigma^{-1} t(s) \\right)$$\n将此与期望的形式 $d^2 = c (\\Delta s)^2$ 进行比较，我们可以立即看出，两者等价当且仅当括号中的项等于常数 $c$。\n\n因此，充要条件是：\n$$t(s)^T \\Sigma^{-1} t(s) = c$$\n对于某个不依赖于 $s$ 的常数 $c > 0$。\n\n这个条件有一个清晰的几何解释。对于一个向量 $v$ 和一个正定矩阵 $M$，表达式 $v^T M v$ 定义了由度量 $M$ 导出的平方范数。在这里，$\\Sigma^{-1}$ 定义了环境空间 $\\mathbb{R}^2$ 上的一个度量。该条件要求，当使用由逆协方差矩阵 $\\Sigma^{-1}$ 定义的度量来测量时，流形切向量 $t(s)$ 的长度在流形上处处恒定。这确保了沿潜在坐标 $s$ 的移动对应于环境空间中均匀数量的“统计距离”（马氏距离），而这正是预白化所要校正的。\n\n**3. 验证与计算**\n\n我们已知具体的流形 $m(s) = \\begin{pmatrix} s \\\\ 2s \\end{pmatrix}$ 和噪声协方差 $\\Sigma = \\begin{pmatrix} 3  2 \\\\ 2  5 \\end{pmatrix}$。\n\n首先，我们计算切向量 $t(s)$：\n$$t(s) = \\frac{dm}{ds} = \\frac{d}{ds} \\begin{pmatrix} s \\\\ 2s \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$$\n我们观察到切向量 $t(s)$ 是一个常数向量 $t = \\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$，不依赖于 $s$。\n\n接下来，我们计算协方差矩阵的逆 $\\Sigma^{-1}$。对于一个 $2 \\times 2$ 矩阵 $\\begin{pmatrix} a  b \\\\ c  d \\end{pmatrix}$，其逆是 $\\frac{1}{ad-bc} \\begin{pmatrix} d  -b \\\\ -c  a \\end{pmatrix}$。\n$\\Sigma$ 的行列式是 $\\det(\\Sigma) = (3)(5) - (2)(2) = 15 - 4 = 11$。\n$$\\Sigma^{-1} = \\frac{1}{11} \\begin{pmatrix} 5  -2 \\\\ -2  3 \\end{pmatrix}$$\n现在，我们检验第2部分的条件并计算比例常数 $c$。\n$$c = t(s)^T \\Sigma^{-1} t(s)$$\n由于 $t(s)$ 是常数， $c$ 也将是一个常数，因此对于这个流形，均匀比例性的条件是满足的。我们继续计算 $c$：\n$$c = \\begin{pmatrix} 1  2 \\end{pmatrix} \\left( \\frac{1}{11} \\begin{pmatrix} 5  -2 \\\\ -2  3 \\end{pmatrix} \\right) \\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$$\n我们可以将标量 $\\frac{1}{11}$ 提出来：\n$$c = \\frac{1}{11} \\begin{pmatrix} 1  2 \\end{pmatrix} \\begin{pmatrix} 5  -2 \\\\ -2  3 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix}$$\n首先，我们计算前两个矩阵的乘积：\n$$\\begin{pmatrix} 1  2 \\end{pmatrix} \\begin{pmatrix} 5  -2 \\\\ -2  3 \\end{pmatrix} = \\begin{pmatrix} (1)(5) + (2)(-2)  (1)(-2) + (2)(3) \\end{pmatrix} = \\begin{pmatrix} 5 - 4  -2 + 6 \\end{pmatrix} = \\begin{pmatrix} 1  4 \\end{pmatrix}$$\n现在，我们完成计算：\n$$c = \\frac{1}{11} \\begin{pmatrix} 1  4 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 2 \\end{pmatrix} = \\frac{1}{11} ((1)(1) + (4)(2)) = \\frac{1}{11} (1 + 8) = \\frac{9}{11}$$\n问题要求最终数值四舍五入到四位有效数字。\n$$c = \\frac{9}{11} \\approx 0.81818181...$$\n四舍五入到四位有效数字，我们得到 $c = 0.8182$。", "answer": "$$\\boxed{0.8182}$$", "id": "3190525"}, {"introduction": "在计算距离之后，UMAP会构建一个加权图，这个步骤涉及到关键的归一化选择。本练习侧重于算法的内部机制，要求您比较图权重的不同归一化方案[@problem_id:3190499]。通过具体的计算，您将分析这些选择如何影响簇内连通性与簇间连通性之间的平衡，从而洞察UMAP的图构建过程最终如何定义可视化结果。", "problem": "考虑均匀流形近似与投影 (Uniform Manifold Approximation and Projection, UMAP)，该方法通过非负边权重 $w_{ij}$ 构建一个加权有向图来捕捉局部流形结构，其中权重 $w_{ij}$ 反映了在模糊单纯复形中从 $i$ 到 $j$ 的局部隶属强度。归一化方案的选择会影响这些权重作为条件隶属度的表现。两种常见的方案是：行归一化，即缩放每个节点的出向权重使其总和为1；以及列归一化，即缩放每个节点的入向权重使其总和为1。\n\n设有4个点，被划分为两个簇 $C_{1}=\\{1,2\\}$ 和 $C_{2}=\\{3,4\\}$。假设原始有向权重 $w_{ij}$（其中 $w_{ii}=0$）由以下矩阵给出\n$$\nW \\;=\\;\n\\begin{pmatrix}\n0  6  2  1 \\\\\n5  0  1  1 \\\\\n1  1  0  5 \\\\\n3  1  6  0\n\\end{pmatrix}.\n$$\n将行归一化权重 $p_{ij}$ 定义为 $p_{ij} = \\dfrac{w_{ij}}{\\sum_{k \\neq i} w_{ik}}$（当 $i \\neq j$）。将列归一化权重 $q_{ij}$ 定义为 $q_{ij} = \\dfrac{w_{ij}}{\\sum_{k \\neq j} w_{kj}}$（当 $i \\neq j$）。\n\n对于一个归一化权重矩阵 $A=\\{a_{ij}\\}$，将其簇内连通性定义为\n$$\nI(A) \\;=\\; \\sum_{\\substack{i \\in C_{1},\\, j \\in C_{1} \\\\ i \\neq j}} a_{ij} \\;+\\; \\sum_{\\substack{i \\in C_{2},\\, j \\in C_{2} \\\\ i \\neq j}} a_{ij},\n$$\n并将其簇间连通性定义为\n$$\nE(A) \\;=\\; \\sum_{i \\in C_{1},\\, j \\in C_{2}} a_{ij} \\;+\\; \\sum_{i \\in C_{2},\\, j \\in C_{1}} a_{ij}.\n$$\n令簇划分得分为 $S(A) = \\dfrac{I(A)}{E(A)}$。计算精确差值\n$$\n\\Delta \\;=\\; S(P) \\;-\\; S(Q),\n$$\n其中 $P=\\{p_{ij}\\}$ 且 $Q=\\{q_{ij}\\}$。将最终答案表示为一个最简有理数。无需四舍五入。", "solution": "该问题要求计算差值 $\\Delta = S(P) - S(Q)$，其中 $S(P)$ 和 $S(Q)$ 分别是行归一化和列归一化权重矩阵的簇划分得分。我们首先逐步计算所需的量。\n\n给定的原始权重矩阵为：\n$$\nW \\;=\\;\n\\begin{pmatrix}\n0  6  2  1 \\\\\n5  0  1  1 \\\\\n1  1  0  5 \\\\\n3  1  6  0\n\\end{pmatrix}\n$$\n簇为 $C_{1}=\\{1,2\\}$ 和 $C_{2}=\\{3,4\\}$。\n\n首先，我们计算行归一化矩阵 $P = \\{p_{ij}\\}$，其中 $p_{ij} = \\frac{w_{ij}}{\\sum_{k \\neq i} w_{ik}}$。\n我们计算每行的非对角元素之和：\n第1行: $\\sum_{k \\neq 1} w_{1k} = 6 + 2 + 1 = 9$\n第2行: $\\sum_{k \\neq 2} w_{2k} = 5 + 1 + 1 = 7$\n第3行: $\\sum_{k \\neq 3} w_{3k} = 1 + 1 + 5 = 7$\n第4行: $\\sum_{k \\neq 4} w_{4k} = 3 + 1 + 6 = 10$\n\n使用这些和，我们得到矩阵 $P$：\n$$\nP \\;=\\;\n\\begin{pmatrix}\n0  \\frac{6}{9}  \\frac{2}{9}  \\frac{1}{9} \\\\\n\\frac{5}{7}  0  \\frac{1}{7}  \\frac{1}{7} \\\\\n\\frac{1}{7}  \\frac{1}{7}  0  \\frac{5}{7} \\\\\n\\frac{3}{10}  \\frac{1}{10}  \\frac{6}{10}  0\n\\end{pmatrix}\n\\;=\\;\n\\begin{pmatrix}\n0  \\frac{2}{3}  \\frac{2}{9}  \\frac{1}{9} \\\\\n\\frac{5}{7}  0  \\frac{1}{7}  \\frac{1}{7} \\\\\n\\frac{1}{7}  \\frac{1}{7}  0  \\frac{5}{7} \\\\\n\\frac{3}{10}  \\frac{1}{10}  \\frac{3}{5}  0\n\\end{pmatrix}\n$$\n接下来，我们计算簇内连通性 $I(P)$ 和簇间连通性 $E(P)$。\n$I(P)$ 是簇内权重之和：\n$$\nI(P) = (p_{12} + p_{21}) + (p_{34} + p_{43}) = \\left(\\frac{2}{3} + \\frac{5}{7}\\right) + \\left(\\frac{5}{7} + \\frac{3}{5}\\right) = \\frac{14+15}{21} + \\frac{25+21}{35} = \\frac{29}{21} + \\frac{46}{35}\n$$\n$21$ 和 $35$ 的最小公倍数是 $105$。\n$$\nI(P) = \\frac{29 \\times 5}{105} + \\frac{46 \\times 3}{105} = \\frac{145}{105} + \\frac{138}{105} = \\frac{283}{105}\n$$\n$E(P)$ 是簇间权重之和：\n$$\nE(P) = (p_{13} + p_{14} + p_{23} + p_{24}) + (p_{31} + p_{32} + p_{41} + p_{42})\n$$\n$$\nE(P) = \\left(\\frac{2}{9} + \\frac{1}{9}\\right) + \\left(\\frac{1}{7} + \\frac{1}{7}\\right) + \\left(\\frac{1}{7} + \\frac{1}{7}\\right) + \\left(\\frac{3}{10} + \\frac{1}{10}\\right) = \\frac{3}{9} + \\frac{2}{7} + \\frac{2}{7} + \\frac{4}{10} = \\frac{1}{3} + \\frac{4}{7} + \\frac{2}{5}\n$$\n$3$、$7$ 和 $5$ 的最小公倍数是 $105$。\n$$\nE(P) = \\frac{35}{105} + \\frac{60}{105} + \\frac{42}{105} = \\frac{137}{105}\n$$\n作为检验，由于 $P$ 是行归一化的，其所有元素的总和等于点的数量，即 $4$。同时，$I(P) + E(P)$ 必须等于 $4$。确实，$I(P) + E(P) = \\frac{283}{105} + \\frac{137}{105} = \\frac{420}{105} = 4$。\n$P$ 的簇划分得分为：\n$$\nS(P) = \\frac{I(P)}{E(P)} = \\frac{283/105}{137/105} = \\frac{283}{137}\n$$\n其次，我们计算列归一化矩阵 $Q = \\{q_{ij}\\}$，其中 $q_{ij} = \\frac{w_{ij}}{\\sum_{k \\neq j} w_{kj}}$。\n我们计算每列的非对角元素之和：\n第1列: $\\sum_{k \\neq 1} w_{k1} = 5 + 1 + 3 = 9$\n第2列: $\\sum_{k \\neq 2} w_{k2} = 6 + 1 + 1 = 8$\n第3列: $\\sum_{k \\neq 3} w_{k3} = 2 + 1 + 6 = 9$\n第4列: $\\sum_{k \\neq 4} w_{k4} = 1 + 1 + 5 = 7$\n\n使用这些和，我们得到矩阵 $Q$：\n$$\nQ \\;=\\;\n\\begin{pmatrix}\n0  \\frac{6}{8}  \\frac{2}{9}  \\frac{1}{7} \\\\\n\\frac{5}{9}  0  \\frac{1}{9}  \\frac{1}{7} \\\\\n\\frac{1}{9}  \\frac{1}{8}  0  \\frac{5}{7} \\\\\n\\frac{3}{9}  \\frac{1}{8}  \\frac{6}{9}  0\n\\end{pmatrix}\n\\;=\\;\n\\begin{pmatrix}\n0  \\frac{3}{4}  \\frac{2}{9}  \\frac{1}{7} \\\\\n\\frac{5}{9}  0  \\frac{1}{9}  \\frac{1}{7} \\\\\n\\frac{1}{9}  \\frac{1}{8}  0  \\frac{5}{7} \\\\\n\\frac{1}{3}  \\frac{1}{8}  \\frac{2}{3}  0\n\\end{pmatrix}\n$$\n接下来，我们计算 $I(Q)$ 和 $E(Q)$。\n$$\nI(Q) = (q_{12} + q_{21}) + (q_{34} + q_{43}) = \\left(\\frac{3}{4} + \\frac{5}{9}\\right) + \\left(\\frac{5}{7} + \\frac{2}{3}\\right) = \\frac{27+20}{36} + \\frac{15+14}{21} = \\frac{47}{36} + \\frac{29}{21}\n$$\n$36$ 和 $21$ 的最小公倍数是 $252$。\n$$\nI(Q) = \\frac{47 \\times 7}{252} + \\frac{29 \\times 12}{252} = \\frac{329}{252} + \\frac{348}{252} = \\frac{677}{252}\n$$\n$$\nE(Q) = (q_{13} + q_{14} + q_{23} + q_{24}) + (q_{31} + q_{32} + q_{41} + q_{42})\n$$\n为了避免复杂的加法，我们可以使用总和为4的属性。\n$I(Q) + E(Q) = \\sum_{i \\neq j} q_{ij}$。由于 $Q$ 是列归一化的，每列的和是1，所以总和是4。\n$E(Q) = 4 - I(Q) = 4 - \\frac{677}{252} = \\frac{1008 - 677}{252} = \\frac{331}{252}$\n$Q$ 的簇划分得分为：\n$$\nS(Q) = \\frac{I(Q)}{E(Q)} = \\frac{677/252}{331/252} = \\frac{677}{331}\n$$\n最后，我们计算差值 $\\Delta$：\n$$\n\\Delta = S(P) - S(Q) = \\frac{283}{137} - \\frac{677}{331}\n$$\n公分母是 $137 \\times 331 = 45347$。注意 $137$ 和 $331$ 都是质数。\n$$\n\\Delta = \\frac{283 \\times 331 - 677 \\times 137}{45347}\n$$\n我们计算分子中的乘积：\n$283 \\times 331 = 93673$\n$677 \\times 137 = 92749$\n$$\n\\Delta = \\frac{93673 - 92749}{45347} = \\frac{924}{45347}\n$$\n为确保分数已化简，我们检查 $924$ 是否有因子 $137$ 或 $331$。$924 = 2^2 \\times 3 \\times 7 \\times 11$。由于 $137$ 和 $331$ 不在这些质因子中，该分数已为最简形式。", "answer": "$$\n\\boxed{\\frac{924}{45347}}\n$$", "id": "3190499"}]}