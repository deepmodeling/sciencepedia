{"hands_on_practices": [{"introduction": "在处理类别不平衡的数据集时，准确率（Accuracy）往往会产生误导。本练习将通过一个类别比例严重失衡的假设场景，引导您从基本定义出发，计算并比较准确率、平衡准确率（Balanced Accuracy）和 $F_1$ 分数，从而深刻理解在不平衡数据下选择合适评估指标的重要性 [@problem_id:3118882]。", "problem": "给定一个存在严重类别不平衡的二元分类场景。真实标签由 $y \\in \\{0,1\\}$ 表示，其固定的基准率为 $\\mathbb{P}(y=1)=p=0.01$。一个分类器将每个实例映射到一个类别标签 $\\hat{y} \\in \\{0,1\\}$。一个概率模型将每个实例映射为一个分数 $s \\in [0,1]$，该分数被解释为校准概率，意味着对于分数 $s$ 范围内的任何值 $v$，条件概率满足 $\\mathbb{P}(y=1 \\mid s=v) = v$。为了将分数转换为硬标签，使用一种形式为“当且仅当 $s \\ge \\theta$ 时，预测 $\\hat{y}=1$”的阈值规则，并规定了平局处理约定，即将相等情况归入正类。您的任务是仅使用核心定义和全概率定律，推导并计算几种情况下的评估指标。\n\n从基本基础开始：由真阳性 (TP)、假阳性 (FP)、真阴性 (TN) 和假阴性 (FN) 事件定义的混淆结果。使用总体比例而非有限样本计数进行计算。利用全概率定律，从校准概率层和阈值决策中得出每个混淆矩阵的组成部分。然后，使用准确率、平衡准确率（真阳性率和真阴性率的平均值）和一阶 F-score (F1) 的标准定义，计算下面所要求的量。如果某个比率的分母为零，则采用该比率为零的约定。特别地，如果没有对正类做出任何预测，则将精确率定义为零，因此 F1 值也为零。所有值必须表示为小数，而非百分比。\n\n合成校准双箱模型。考虑一个仅输出两个值的评分模型：在实例的一个子集 $S_h$（其质量为 $w \\in (0,1)$）上输出“高”分 $p_h$，在其余子集 $S_\\ell$（其质量为 $1-w$）上输出“低”分 $p_\\ell$。该模型是校准的，因此在 $S_h$ 上的条件正类率为 $p_h$，在 $S_\\ell$ 上的条件正类率为 $p_\\ell$。总体的正类基准率必须等于 $p$，因此 $p = w \\, p_h + (1-w)\\, p_\\ell$。当 $p_\\ell$ 未明确给出时，您必须使用此恒等式从指定参数中设定 $p_\\ell$。对于一个阈值 $\\theta$，决策区域为：对分数至少为 $\\theta$ 的任何层预测为正类，否则预测为负类。\n\n测试套件。对于以下每种情况，根据上述定义计算准确率、平衡准确率和 F1 分数。将每个指标的输出四舍五入到小数点后六位。\n\n- 情况A（始终为负分类器）：一个简单的分类器，对所有实例都预测 $\\hat{y}=0$，与输入无关。\n- 情况B（已校准，阈值设为高分）：双箱校准模型，其中 $w=0.02$，$p_h=0.50$，而 $p_\\ell$ 由基准率 $p=0.01$ 决定。使用阈值 $\\theta=0.50$。\n- 情况C（已校准，阈值过高）：双箱校准模型，其中 $w=0.05$，$p_h=0.20$，而 $p_\\ell$ 由 $p=0.01$ 决定。使用阈值 $\\theta=0.50$。\n- 情况D（已校准，在离散策略中 F1 最优）：参数与情况C相同。选择在由阈值引发的三种不同硬标签方案中使 F1 最大化的预测策略：不预测任何实例为正类（等价于 $\\theta > p_h$），仅预测高分箱为正类（等价于 $p_\\ell  \\theta \\le p_h$），或预测两个箱均为正类（等价于 $\\theta \\le p_\\ell$）。在 F1 值相同的情况下，选择预测为正类数量最少的方案。\n\n最终输出格式。您的程序应生成一行输出，包含 12 个值，顺序完全如下：\n$[\\text{Acc}_A,\\text{BalAcc}_A,\\text{F1}_A,\\text{Acc}_B,\\text{BalAcc}_B,\\text{F1}_B,\\text{Acc}_C,\\text{BalAcc}_C,\\text{F1}_C,\\text{Acc}_D,\\text{BalAcc}_D,\\text{F1}_D]$,\n四舍五入到小数点后六位，并以逗号分隔的列表形式打印，并用方括号括起来（例如，$[0.000000,0.000000,\\dots]$）。不允许有其他输出。", "solution": "该问题要求在几种情况下计算二元分类器的三个评估指标——准确率、平衡准确率和 F1 分数。这是一个总体层面的分析，而非有限样本，其特征是正类实例的基准率 $\\mathbb{P}(y=1) = p = 0.01$。\n\n首先，我们基于四个混淆矩阵结果的总体比例来建立指标的定义：真阳性 ($TP$)、假阳性 ($FP$)、真阴性 ($TN$) 和假阴性 ($FN$)。这些比例之和为 $1$：$TP+FP+TN+FN=1$。\n\n总的正类和负类总体由以下公式给出：\n$$TP + FN = \\mathbb{P}(y=1) = p$$\n$$TN + FP = \\mathbb{P}(y=0) = 1-p$$\n\n这些指标定义如下：\n1.  **准确率 ($Acc$)**: 正确预测的比例。\n    $$Acc = TP + TN$$\n2.  **真阳性率 ($TPR$)** 或 **召回率 ($Rec$)**: 被正确识别的实际正类的比例。\n    $$TPR = Rec = \\frac{TP}{TP+FN} = \\frac{TP}{p}$$\n3.  **真阴性率 ($TNR$)**: 被正确识别的实际负类的比例。\n    $$TNR = \\frac{TN}{TN+FP} = \\frac{TN}{1-p}$$\n4.  **平衡准确率 ($BalAcc$)**: $TPR$ 和 $TNR$ 的算术平均值。\n    $$BalAcc = \\frac{1}{2}(TPR + TNR)$$\n5.  **精确率 ($Prec$)**: 正确的正类预测所占的比例。\n    $$Prec = \\frac{TP}{TP+FP}$$\n    分母 $TP+FP = \\mathbb{P}(\\hat{y}=1)$ 是被预测为正类的实例的总比例。如果 $\\mathbb{P}(\\hat{y}=1)=0$，则按约定 $Prec=0$。\n6.  **F1 分数 ($F1$)**: 精确率和召回率的调和平均值。\n    $$F1 = 2 \\cdot \\frac{Prec \\cdot Rec}{Prec + Rec}$$\n    如果 $Prec+Rec=0$（当 $TP=0$ 时发生），则 $F1=0$。\n\n问题介绍了一个校准双箱分数模型。该模型在数据的一个比例为 $w$ 的子集上输出“高”分 $s=p_h$，在剩余比例为 $1-w$ 的子集上输出“低”分 $s=p_\\ell$。校准意味着 $\\mathbb{P}(y=1|s=p_h)=p_h$ 和 $\\mathbb{P}(y=1|s=p_\\ell)=p_\\ell$。总体的基准率 $p$ 受全概率定律约束：$p = w \\cdot p_h + (1-w) \\cdot p_\\ell$。由此，我们可以确定 $p_\\ell$ 为 $p_\\ell = \\frac{p - w p_h}{1-w}$。\n\n混淆矩阵的各组成部分可以通过考虑分类器的决策规则“如果 $s \\ge \\theta$，则预测 $\\hat{y}=1$”以及分数和真实标签的联合概率来推导。\n$$TP = \\mathbb{P}(\\hat{y}=1, y=1) \\qquad FP = \\mathbb{P}(\\hat{y}=1, y=0)$$\n$$TN = \\mathbb{P}(\\hat{y}=0, y=0) \\qquad FN = \\mathbb{P}(\\hat{y}=0, y=1)$$\n\n我们来分析一个双箱模型可能的三种不同预测策略，假设 $p_h > p_\\ell$。\n\n**策略1：始终预测为负类 ($\\hat{y}=0$)**。当阈值 $\\theta > p_h$ 时发生。\n- $\\mathbb{P}(\\hat{y}=1)=0$，所以 $TP=0, FP=0$。\n- 所有实例都被预测为负类，所以 $FN = \\mathbb{P}(y=1) = p$ 且 $TN = \\mathbb{P}(y=0) = 1-p$。\n- 指标：\n    - $Acc = TP+TN = 1-p$。\n    - $TPR = 0/p = 0$。$TNR = (1-p)/(1-p) = 1$。\n    - $BalAcc = \\frac{1}{2}(0+1) = 0.5$。\n    - $Prec=0$（按约定），$Rec=0$。\n    - $F1 = 0$。\n\n**策略2：预测高分箱为正类，低分箱为负类**。当 $p_\\ell  \\theta \\le p_h$ 时发生。\n- 仅对 $S_h$ 层（质量为 $w$）预测 $\\hat{y}=1$。\n- $TP = \\mathbb{P}(s=p_h, y=1) = \\mathbb{P}(y=1|s=p_h)\\mathbb{P}(s=p_h) = p_h w$。\n- $FP = \\mathbb{P}(s=p_h, y=0) = (1-p_h)w$。\n- $TN = \\mathbb{P}(s=p_\\ell, y=0) = (1-p_\\ell)(1-w)$。\n- $FN = \\mathbb{P}(s=p_\\ell, y=1) = p_\\ell(1-w)$。\n- 指标：\n    - $Acc = p_h w + (1-p_\\ell)(1-w)$。\n    - $TPR = \\frac{p_h w}{p}$。$TNR = \\frac{(1-p_\\ell)(1-w)}{1-p}$。\n    - $BalAcc = \\frac{1}{2} \\left( \\frac{p_h w}{p} + \\frac{(1-p_\\ell)(1-w)}{1-p} \\right)$。\n    - $Prec = \\frac{p_h w}{p_h w + (1-p_h)w} = \\frac{p_h w}{w} = p_h$。\n    - $Rec = TPR = \\frac{p_h w}{p}$。\n    - $F1 = 2 \\frac{p_h \\cdot (p_h w/p)}{p_h + p_h w/p} = \\frac{2 p_h^2 w}{p_h(p+w)} = \\frac{2 p_h w}{p+w}$。\n\n**策略3：始终预测为正类 ($\\hat{y}=1$)**。当 $\\theta \\le p_\\ell$ 时发生。\n- $\\mathbb{P}(\\hat{y}=0)=0$，所以 $TN=0, FN=0$。\n- 所有实例都被预测为正类，所以 $TP = \\mathbb{P}(y=1) = p$ 且 $FP = \\mathbb{P}(y=0) = 1-p$。\n- 指标：\n    - $Acc = TP+TN = p$。\n    - $TPR = p/p = 1$。$TNR = 0/(1-p) = 0$。\n    - $BalAcc = \\frac{1}{2}(1+0) = 0.5$。\n    - $Prec = \\frac{p}{p+(1-p)} = p$。$Rec=1$。\n    - $F1 = 2 \\frac{p \\cdot 1}{p+1} = \\frac{2p}{p+1}$。\n\n有了这些通用公式，我们就可以计算每种情况的值。基准率是 $p=0.01$。\n\n**情况A：始终为负分类器**\n这是策略1。\n- $Acc_A = 1-p = 1-0.01 = 0.99$。\n- $BalAcc_A = 0.5$。\n- $F1_A = 0$。\n值：$0.990000, 0.500000, 0.000000$。\n\n**情况B：已校准，阈值设为高分**\n参数：$w=0.02$, $p_h=0.50$，阈值 $\\theta=0.50$。\n首先，我们计算 $p_\\ell$：$p_\\ell = \\frac{0.01 - 0.02 \\cdot 0.50}{1-0.02} = \\frac{0.01 - 0.01}{0.98} = 0$。\n分数为 $p_h=0.50$ 和 $p_\\ell=0$。由于 $0  \\theta=0.50 \\le 0.50$，这是策略2。\n- $Acc_B = p_h w + (1-p_\\ell)(1-w) = 0.50 \\cdot 0.02 + (1-0)(1-0.02) = 0.01 + 0.98 = 0.99$。\n- $TPR_B = \\frac{p_h w}{p} = \\frac{0.50 \\cdot 0.02}{0.01} = 1$。\n- $TNR_B = \\frac{(1-p_\\ell)(1-w)}{1-p} = \\frac{(1-0)(1-0.02)}{1-0.01} = \\frac{0.98}{0.99}$。\n- $BalAcc_B = \\frac{1}{2}(1 + \\frac{0.98}{0.99}) = \\frac{1.97}{1.98} \\approx 0.994949$。\n- $F1_B = \\frac{2 p_h w}{p+w} = \\frac{2 \\cdot 0.50 \\cdot 0.02}{0.01+0.02} = \\frac{0.02}{0.03} = \\frac{2}{3} \\approx 0.666667$。\n值：$0.990000, 0.994949, 0.666667$。\n\n**情况C：已校准，阈值过高**\n参数：$w=0.05$, $p_h=0.20$，阈值 $\\theta=0.50$。\n首先，我们计算 $p_\\ell$：$p_\\ell = \\frac{0.01 - 0.05 \\cdot 0.20}{1-0.05} = \\frac{0.01 - 0.01}{0.95} = 0$。\n分数为 $p_h=0.20$ 和 $p_\\ell=0$。由于 $\\theta=0.50 > p_h=0.20$，这是策略1。\n结果与情况A相同。\n- $Acc_C = 0.99$。\n- $BalAcc_C = 0.5$。\n- $F1_C = 0$。\n值：$0.990000, 0.500000, 0.000000$。\n\n**情况D：已校准，F1最优策略**\n参数与情况C相同：$w=0.05, p_h=0.20, p_\\ell=0$。我们必须选择使 $F1$ 最大化的策略。\n- **策略1 ($F1_1$)**：$F1_1=0$。\n- **策略2 ($F1_2$)**：$F1_2 = \\frac{2 p_h w}{p+w} = \\frac{2 \\cdot 0.20 \\cdot 0.05}{0.01+0.05} = \\frac{0.02}{0.06} = \\frac{1}{3} \\approx 0.333333$。\n- **策略3 ($F1_3$)**：$F1_3 = \\frac{2p}{p+1} = \\frac{2 \\cdot 0.01}{1.01} = \\frac{0.02}{1.01} \\approx 0.019802$。\n比较 F1 分数，$F1_2$ 是最大的。因此，最优策略是策略2。我们现在计算其指标。\n- $Acc_D = p_h w + (1-p_\\ell)(1-w) = 0.20 \\cdot 0.05 + (1-0)(1-0.05) = 0.01 + 0.95 = 0.96$。\n- $TPR_D = \\frac{p_h w}{p} = \\frac{0.20 \\cdot 0.05}{0.01} = 1$。\n- $TNR_D = \\frac{(1-p_\\ell)(1-w)}{1-p} = \\frac{(1-0)(1-0.05)}{1-0.01} = \\frac{0.95}{0.99}$。\n- $BalAcc_D = \\frac{1}{2}(1 + \\frac{0.95}{0.99}) = \\frac{1.94}{1.98} \\approx 0.979798$。\n- $F1_D = 1/3 \\approx 0.333333$。\n值：$0.960000, 0.979798, 0.333333$。\n\n合并所有结果以得到最终输出：\n- Acc_A, BalAcc_A, F1_A: $0.990000, 0.500000, 0.000000$\n- Acc_B, BalAcc_B, F1_B: $0.990000, 0.994949, 0.666667$\n- Acc_C, BalAcc_C, F1_C: $0.990000, 0.500000, 0.000000$\n- Acc_D, BalAcc_D, F1_D: $0.960000, 0.979798, 0.333333$", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes Accuracy, Balanced Accuracy, and F1-score for four\n    binary classification scenarios as defined in the problem.\n    \"\"\"\n\n    def calculate_metrics(p_rate, TP, FP, TN, FN):\n        \"\"\"\n        Calculates evaluation metrics from confusion matrix components.\n        \n        Args:\n            p_rate (float): The base rate P(y=1).\n            TP, FP, TN, FN (float): Population fractions for confusion matrix.\n\n        Returns:\n            tuple: A tuple containing (Accuracy, Balanced Accuracy, F1-score).\n        \"\"\"\n        # Denominators for rates\n        # real_pos = p_rate\n        # real_neg = 1 - p_rate\n        real_pos = TP + FN\n        real_neg = TN + FP\n        pred_pos = TP + FP\n        \n        # Accuracy\n        acc = TP + TN\n\n        # True Positive Rate (Recall) and True Negative Rate\n        tpr = TP / real_pos if real_pos > 0 else 0.0\n        tnr = TN / real_neg if real_neg > 0 else 0.0\n\n        # Balanced Accuracy\n        bal_acc = 0.5 * (tpr + tnr)\n\n        # Precision and Recall\n        prec = TP / pred_pos if pred_pos > 0 else 0.0\n        recall = tpr # Recall is the same as TPR\n\n        # F1 Score\n        f1 = 2 * (prec * recall) / (prec + recall) if (prec + recall) > 0 else 0.0\n\n        return acc, bal_acc, f1\n\n    results = []\n    p = 0.01\n\n    # Case A: Always-negative classifier (Policy 1)\n    TP_A, FP_A, TN_A, FN_A = 0.0, 0.0, 1 - p, p\n    acc_A, bal_acc_A, f1_A = calculate_metrics(p, TP_A, FP_A, TN_A, FN_A)\n    results.extend([acc_A, bal_acc_A, f1_A])\n\n    # Case B: Calibrated, threshold at high score\n    w_B, p_h_B = 0.02, 0.50\n    p_l_B = (p - w_B * p_h_B) / (1 - w_B)\n    # Threshold theta = 0.50, which is = p_h_B. This is Policy 2.\n    TP_B = p_h_B * w_B\n    FP_B = (1 - p_h_B) * w_B\n    TN_B = (1 - p_l_B) * (1 - w_B)\n    FN_B = p_l_B * (1 - w_B)\n    acc_B, bal_acc_B, f1_B = calculate_metrics(p, TP_B, FP_B, TN_B, FN_B)\n    results.extend([acc_B, bal_acc_B, f1_B])\n\n    # Case C: Calibrated, threshold too high\n    w_C, p_h_C = 0.05, 0.20\n    p_l_C = (p - w_C * p_h_C) / (1 - w_C)\n    # Threshold theta = 0.50, which is > p_h_C. This is Policy 1.\n    TP_C, FP_C, TN_C, FN_C = 0.0, 0.0, 1 - p, p\n    acc_C, bal_acc_C, f1_C = calculate_metrics(p, TP_C, FP_C, TN_C, FN_C)\n    results.extend([acc_C, bal_acc_C, f1_C])\n    \n    # Case D: Calibrated, F1-optimal among discrete policies\n    w_D, p_h_D = w_C, p_h_C\n    p_l_D = p_l_C\n\n    # Evaluate F1 for the three possible policies\n    \n    # Policy 1: Predict none positive\n    # F1 is 0, as calculated in Case A.\n    f1_1 = f1_A\n    metrics_1 = (acc_A, bal_acc_A, f1_1)\n    pred_pos_1 = 0.0\n\n    # Policy 2: Predict high-score bin as positive\n    TP_2 = p_h_D * w_D\n    FP_2 = (1 - p_h_D) * w_D\n    TN_2 = (1 - p_l_D) * (1 - w_D)\n    FN_2 = p_l_D * (1 - w_D)\n    metrics_2 = calculate_metrics(p, TP_2, FP_2, TN_2, FN_2)\n    f1_2 = metrics_2[2]\n    pred_pos_2 = w_D\n\n    # Policy 3: Predict all positive\n    TP_3, FP_3, TN_3, FN_3 = p, 1 - p, 0.0, 0.0\n    metrics_3 = calculate_metrics(p, TP_3, FP_3, TN_3, FN_3)\n    f1_3 = metrics_3[2]\n    pred_pos_3 = 1.0\n\n    # Find the optimal policy: maximize F1, with tie-breaking by fewest predicted positives\n    policies = [\n        (f1_1, pred_pos_1, metrics_1),\n        (f1_2, pred_pos_2, metrics_2),\n        (f1_3, pred_pos_3, metrics_3)\n    ]\n    \n    # Sort by F1 descending (-f1), then by predicted positives ascending (pred_pos)\n    # The best policy is the first element after sorting.\n    best_policy = sorted(policies, key=lambda x: (-x[0], x[1]))[0]\n    acc_D, bal_acc_D, f1_D = best_policy[2]\n    results.extend([acc_D, bal_acc_D, f1_D])\n\n    # Format the final output string with rounding to 6 decimal places\n    output_str = f\"[{','.join(f'{x:.6f}' for x in results)}]\"\n    print(output_str)\n\nsolve()\n```", "id": "3118882"}, {"introduction": "一个分类器的内在性能（如灵敏度和特异性）与其在特定应用场景中的预测价值（如阴性预测值）是两个不同的概念。本练习将通过一个罕见病的诊断案例，展示疾病的流行率（prevalence）如何显著影响分类器的阴性预测值（NPV），即使分类器本身的性能保持不变 [@problem_id:3118938]。这揭示了在不同人群中应用同一模型时，评估其预测能力必须考虑上下文环境。", "problem": "一个二元诊断分类器被用来检测一种罕见疾病。同一个分类器被部署在两种仅疾病患病率不同的临床环境中。该分类器的灵敏度（真阳性率）$TPR$ 等于 $0.85$，特异度（真阴性率）$TNR$ 等于 $0.98$。环境 $\\mathcal{A}$ 是一个群体筛查诊所，其疾病患病率为 $\\pi_{\\mathcal{A}} = 0.01$。环境 $\\mathcal{B}$ 是一个专科转诊诊所，其疾病患病率为 $\\pi_{\\mathcal{B}} = 0.30$。请仅使用灵敏度、特异度和阴性预测值（NPV）的定义，结合概率法则，计算每种环境下的阴性预测值（NPV），从而证明同样的高特异度如何仅因患病率不同而产生不同的 $NPV$。\n\n令 $\\Delta$ 表示阴性预测值之差，定义为\n$$\n\\Delta \\;=\\; \\mathrm{NPV}_{\\mathcal{A}} \\;-\\; \\mathrm{NPV}_{\\mathcal{B}}.\n$$\n计算 $\\Delta$ 并以小数形式报告。将您的最终答案四舍五入到四位有效数字。不要使用百分号。", "solution": "用户想要解决该问题，并提供了所有必要的信息。该问题经验证是合理且定义明确的。\n\n### 第1步：术语和概率的定义\n\n首先，我们定义事件，并将给定信息转化为概率论的语言。\n设 $D$ 为个体患病的事件，$D^c$ 为个体未患病的事件。\n设 $T$ 为分类器给出阳性测试结果的事件，$T^c$ 为给出阴性测试结果的事件。\n\n问题提供了以下量：\n-   疾病患病率，$\\pi = P(D)$。这在两种环境中有所不同。\n-   灵敏度，或真阳性率：$TPR = P(T | D) = 0.85$。这是在个体患病的情况下，测试结果为阳性的概率。\n-   特异度，或真阴性率：$TNR = P(T^c | D^c) = 0.98$。这是在个体未患病的情况下，测试结果为阴性的概率。\n\n由此，我们可以推导出假阴性率（$FNR$），即在个体患病的情况下，测试结果为阴性的概率：\n$$FNR = P(T^c | D) = 1 - TPR = 1 - 0.85 = 0.15$$\n\n阴性预测值（$NPV$）定义为在个体收到阴性测试结果的情况下，其确实未患病的概率：\n$$NPV = P(D^c | T^c)$$\n\n### 第2步：NPV 通用公式的推导\n\n为了计算 $NPV$，我们应用贝叶斯定理：\n$$NPV = P(D^c | T^c) = \\frac{P(T^c | D^c) P(D^c)}{P(T^c)}$$\n\n该公式的组成部分是：\n-   $P(T^c | D^c) = TNR$，给定值为 $0.98$。\n-   $P(D^c) = 1 - P(D) = 1 - \\pi$。\n-   $P(T^c)$，阴性测试结果的全概率。\n\n我们可以使用全概率法则，通过对两种疾病状态（患病或未患病）求和来找到 $P(T^c)$：\n$$P(T^c) = P(T^c | D)P(D) + P(T^c | D^c)P(D^c)$$\n代入已定义的术语：\n$$P(T^c) = (FNR \\cdot \\pi) + (TNR \\cdot (1 - \\pi))$$\n$$P(T^c) = ((1 - TPR) \\cdot \\pi) + (TNR \\cdot (1 - \\pi))$$\n\n将这个分母代回到 $NPV$ 的贝叶斯定理表达式中，我们得到一个以患病率 $\\pi$ 为函数的 $NPV$ 通用公式：\n$$NPV(\\pi) = \\frac{TNR \\cdot (1 - \\pi)}{(1 - TPR) \\cdot \\pi + TNR \\cdot (1 - \\pi)}$$\n\n### 第3步：计算每种环境下的 NPV\n\n现在，我们将此公式应用于两种临床环境。\n\n**环境 $\\mathcal{A}$ （群体筛查）：**\n疾病患病率为 $\\pi_{\\mathcal{A}} = 0.01$。\n$$NPV_{\\mathcal{A}} = \\frac{0.98 \\cdot (1 - 0.01)}{(1 - 0.85) \\cdot 0.01 + 0.98 \\cdot (1 - 0.01)}$$\n$$NPV_{\\mathcal{A}} = \\frac{0.98 \\cdot 0.99}{0.15 \\cdot 0.01 + 0.98 \\cdot 0.99}$$\n$$NPV_{\\mathcal{A}} = \\frac{0.9702}{0.0015 + 0.9702}$$\n$$NPV_{\\mathcal{A}} = \\frac{0.9702}{0.9717} \\approx 0.9984563$$\n\n**环境 $\\mathcal{B}$ （专科转诊诊所）：**\n疾病患病率为 $\\pi_{\\mathcal{B}} = 0.30$。\n$$NPV_{\\mathcal{B}} = \\frac{0.98 \\cdot (1 - 0.30)}{(1 - 0.85) \\cdot 0.30 + 0.98 \\cdot (1 - 0.30)}$$\n$$NPV_{\\mathcal{B}} = \\frac{0.98 \\cdot 0.70}{0.15 \\cdot 0.30 + 0.98 \\cdot 0.70}$$\n$$NPV_{\\mathcal{B}} = \\frac{0.686}{0.045 + 0.686}$$\n$$NPV_{\\mathcal{B}} = \\frac{0.686}{0.731} \\approx 0.9384405$$\n\n如上所示，尽管分类器的内在属性（$TPR$ 和 $TNR$）保持不变，但在低患病率环境（$\\approx 0.998$）中的 $NPV$ 显著高于高患病率环境（$\\approx 0.938$）。\n\n### 第4步：计算差值 $\\Delta$\n\n问题要求计算差值 $\\Delta = NPV_{\\mathcal{A}} - NPV_{\\mathcal{B}}$。\n使用计算出的值：\n$$\\Delta = \\frac{0.9702}{0.9717} - \\frac{0.686}{0.731}$$\n$$\\Delta \\approx 0.9984563 - 0.9384405$$\n$$\\Delta \\approx 0.0600158$$\n\n问题要求将最终答案四舍五入到四位有效数字。这个数字是 $0.0600158...$。前四位有效数字是 $6$、$0$、$0$ 和 $1$。下一位数字是 $5$，因此需要将最后一位有效数字向上取整。\n$$\\Delta \\approx 0.06002$$", "answer": "$$\\boxed{0.06002}$$", "id": "3118938"}, {"introduction": "评估指标的最终目的是指导我们做出最优决策，而不仅仅是衡量模型的抽象性能。当不同类型的错误分类带来不对称的代价时，盲目地优化像 $F_1$ 分数这样的标准指标可能并非最佳策略。本练习通过一个具体的案例，让您动手比较基于成本最小化和基于 $F_1$ 分数最大化所选择的决策阈值，并量化因选择次优目标而产生的“遗憾”（regret） [@problem_id:3118850]。", "problem": "一个二元分类器对每个输入实例产生一个校准分数 $s \\in [0,1]$，该分数被解释为正类的条件概率 $s = \\mathbb{P}(Y=1 \\mid X)$。决策规则是，对于某个阈值 $t$，如果 $s \\geq t$，则将实例分类为正类。考虑以下包含12个实例的数据集，每个实例为一对 $(s_i, y_i)$，其中 $y_i \\in \\{0,1\\}$ 是真实标签（1为正类，0为负类）：\n$(0.95, 1)$; $(0.85, 1)$; $(0.70, 0)$; $(0.65, 1)$; $(0.60, 0)$; $(0.55, 1)$; $(0.50, 0)$; $(0.40, 1)$; $(0.35, 0)$; $(0.20, 0)$; $(0.10, 0)$; $(0.05, 1)$。\n\n假设错分成本是不对称的，假负例成本为 $C_{\\mathrm{FN}} = 20$，假正例成本为 $C_{\\mathrm{FP}} = 1$。对于一个校准分数为 $s$ 的实例，其确定性决策的期望成本定义如下：如果分类为正类，期望成本为 $C_{\\mathrm{FP}} \\cdot (1 - s)$；如果分类为负类，期望成本为 $C_{\\mathrm{FN}} \\cdot s$。\n\n你需要：\n- 从第一性原理出发，使用风险最小化来确定最小化期望错分成本的阈值 $t_{\\mathrm{cost}}$，并通过对所有实例的期望成本求和，计算在该阈值下数据集的总期望成本。\n- 仅使用混淆矩阵计数（真正例、假正例、真负例、假负例）、精确率、召回率和调和平均数的基本定义，确定能使该数据集上 $F_1$ 分数最大化的阈值 $t_{F1}$（从数据集中的唯一分数集合中选择）。然后，通过对所有实例的期望成本求和，计算在 $t_{F1}$ 阈值下数据集的总期望成本。\n- 将优化 $F_1$ 分数而非期望成本的遗憾量化为 $t_{F1}$ 下的总期望成本与 $t_{\\mathrm{cost}}$ 下的总期望成本之差。\n\n将你最终的遗憾数值答案四舍五入到四位有效数字。你的最终答案应表示为一个无单位的实数。", "solution": "首先根据既定标准对问题进行验证。\n\n### 步骤1：提取已知条件\n- 一个包含12个实例的数据集，每个实例为一对 $(s_i, y_i)$，其中 $s_i$ 是校准分数，$y_i$ 是真实标签：\n  $(0.95, 1)$, $(0.85, 1)$, $(0.70, 0)$, $(0.65, 1)$, $(0.60, 0)$, $(0.55, 1)$, $(0.50, 0)$, $(0.40, 1)$, $(0.35, 0)$, $(0.20, 0)$, $(0.10, 0)$, $(0.05, 1)$。\n- 真实标签 $y_i \\in \\{0,1\\}$，其中1为正类，0为负类。\n- 分数 $s$ 被解释为条件概率 $\\mathbb{P}(Y=1 \\mid X)$。\n- 决策规则是，对于某个阈值 $t$，如果 $s \\geq t$，则分类为正类。\n- 假负例的成本是 $C_{\\mathrm{FN}} = 20$。\n- 假正例的成本是 $C_{\\mathrm{FP}} = 1$。\n- 对于一个分数为 $s$ 的实例，如果分类为正类，其期望成本是 $C_{\\mathrm{FP}} \\cdot (1 - s)$。\n- 对于一个分数为 $s$ 的实例，如果分类为负类，其期望成本是 $C_{\\mathrm{FN}} \\cdot s$。\n- 任务是：\n  1. 确定成本最小化阈值 $t_{\\mathrm{cost}}$ 并计算在该阈值下数据集的总期望成本。\n  2. 从数据集的唯一分数集合中确定 $F_1$ 最大化阈值 $t_{F1}$，并计算在该阈值下的总期望成本。\n  3. 计算遗憾，定义为总期望成本的差值。\n\n### 步骤2：使用提取的已知条件进行验证\n- **科学依据：** 该问题植根于统计决策理论和二元分类器评估，这些是机器学习和统计学的核心概念。使用期望成本最小化和 $F_1$ 分数是标准做法。\n- **适定性：** 提供了所有必要组成部分：一个完整的数据集、明确的成本值以及对任务和指标的清晰定义。该问题是自洽的，能够得出一个唯一、稳定且有意义的解。\n- **客观性：** 语言精确且无偏见。所用术语（例如“校准分数”、“期望成本”、“$F_1$ 分数”）在该领域具有标准的、无歧义的定义。\n\n### 步骤3：结论与行动\n问题有效。有必要给出完整解法。\n\n### 第1部分：风险最小化与最优成本阈值\n我们寻求最小化期望错分成本的阈值 $t_{\\mathrm{cost}}$。对于一个分数为 $s = \\mathbb{P}(Y=1 \\mid X)$ 的单个实例，其为负类的概率是 $\\mathbb{P}(Y=0 \\mid X) = 1 - s$。\n\n将该实例分类为正类（行动 $a=1$）的期望成本是：\n$$E[\\text{Cost} \\mid s, a=1] = C_{\\mathrm{FP}} \\cdot \\mathbb{P}(Y=0 \\mid X) = C_{\\mathrm{FP}}(1-s)$$\n将该实例分类为负类（行动 $a=0$）的期望成本是：\n$$E[\\text{Cost} \\mid s, a=0] = C_{\\mathrm{FN}} \\cdot \\mathbb{P}(Y=1 \\mid X) = C_{\\mathrm{FN}} s$$\n\n风险最小化原则指示我们应选择期望成本较低的行动。我们应在以下情况下将其分类为正类：\n$$E[\\text{Cost} \\mid s, a=1] \\leq E[\\text{Cost} \\mid s, a=0]$$\n$$C_{\\mathrm{FP}}(1-s) \\leq C_{\\mathrm{FN}} s$$\n代入给定的成本值 $C_{\\mathrm{FP}} = 1$ 和 $C_{\\mathrm{FN}} = 20$：\n$$1(1-s) \\leq 20 s$$\n$$1 - s \\leq 20 s$$\n$$1 \\leq 21 s$$\n$$s \\geq \\frac{1}{21}$$\n决策规则是，如果分数 $s$ 大于或等于阈值 $t_{\\mathrm{cost}} = \\frac{1}{21}$，则分类为正类。\n数值上，$t_{\\mathrm{cost}} \\approx 0.0476$。\n数据集中最小的分数是 $s=0.05$。因为 $0.05 = \\frac{1}{20}$ 并且 $\\frac{1}{20} > \\frac{1}{21}$，所以数据集中每个实例的分数 $s_i$ 都大于 $t_{\\mathrm{cost}}$。\n因此，在这个最优阈值下，每个实例都被分类为正类。\n\n在给定决策规则的情况下，数据集上的总期望成本 $C_{\\mathrm{total}}(t_{\\mathrm{cost}})$ 是每个实例的期望成本之和。由于所有实例都被分类为正类，每个实例的成本是 $C_{\\mathrm{FP}}(1-s_i) = 1(1-s_i)$。\n$$C_{\\mathrm{total}}(t_{\\mathrm{cost}}) = \\sum_{i=1}^{12} (1-s_i) = 12 - \\sum_{i=1}^{12} s_i$$\n我们来对分数求和：\n$$\\sum s_i = 0.95+0.85+0.70+0.65+0.60+0.55+0.50+0.40+0.35+0.20+0.10+0.05 = 5.90$$\n总期望成本是：\n$$C_{\\mathrm{total}}(t_{\\mathrm{cost}}) = 12 - 5.90 = 6.10$$\n\n### 第2部分：$F_1$ 分数最大化及其相关成本\n$F_1$ 分数是精确率（$P$）和召回率（$R$）的调和平均数：\n$$F_1 = 2 \\cdot \\frac{P \\cdot R}{P+R}$$\n其中 $P = \\frac{\\mathrm{TP}}{\\mathrm{TP}+\\mathrm{FP}}$ 且 $R = \\frac{\\mathrm{TP}}{\\mathrm{TP}+\\mathrm{FN}}$。这里，$\\mathrm{TP}$、$\\mathrm{FP}$ 和 $\\mathrm{FN}$ 分别是真正例、假正例和假负例的计数。数据集中正实例的总数为 $P_{true} = 6$，负实例的总数为 $N_{true} = 6$。\n\n我们对数据集中每个唯一的分数值作为潜在阈值 $t$ 来评估 $F_1$ 分数。决策规则是：如果 $s_i \\geq t$，则预测为正类。\n\n- $t = 0.95$: $\\mathrm{TP}=1, \\mathrm{FP}=0$。 $P=\\frac{1}{1}=1, R=\\frac{1}{6}$。 $F_1 = \\frac{2 \\cdot 1 \\cdot \\frac{1}{6}}{1+\\frac{1}{6}} = \\frac{1/3}{7/6} = \\frac{2}{7}$。\n- $t = 0.85$: $\\mathrm{TP}=2, \\mathrm{FP}=0$。 $P=\\frac{2}{2}=1, R=\\frac{2}{6}=\\frac{1}{3}$。 $F_1 = \\frac{2 \\cdot 1 \\cdot \\frac{1}{3}}{1+\\frac{1}{3}} = \\frac{2/3}{4/3} = \\frac{1}{2}$。\n- $t = 0.70$: $\\mathrm{TP}=2, \\mathrm{FP}=1$。 $P=\\frac{2}{3}, R=\\frac{2}{6}=\\frac{1}{3}$。 $F_1 = \\frac{2 \\cdot \\frac{2}{3} \\cdot \\frac{1}{3}}{\\frac{2}{3}+\\frac{1}{3}} = \\frac{4/9}{1} = \\frac{4}{9}$。\n- $t = 0.65$: $\\mathrm{TP}=3, \\mathrm{FP}=1$。 $P=\\frac{3}{4}, R=\\frac{3}{6}=\\frac{1}{2}$。 $F_1 = \\frac{2 \\cdot \\frac{3}{4} \\cdot \\frac{1}{2}}{\\frac{3}{4}+\\frac{1}{2}} = \\frac{3/4}{5/4} = \\frac{3}{5}$。\n- $t = 0.55$: $\\mathrm{TP}=4, \\mathrm{FP}=2$。 $P=\\frac{4}{6}=\\frac{2}{3}, R=\\frac{4}{6}=\\frac{2}{3}$。 $F_1 = \\frac{2 \\cdot \\frac{2}{3} \\cdot \\frac{2}{3}}{\\frac{2}{3}+\\frac{2}{3}} = \\frac{8/9}{4/3} = \\frac{2}{3}$。\n- $t = 0.50$: $\\mathrm{TP}=4, \\mathrm{FP}=3$。 $P=\\frac{4}{7}, R=\\frac{4}{6}=\\frac{2}{3}$。 $F_1 = \\frac{2 \\cdot \\frac{4}{7} \\cdot \\frac{2}{3}}{\\frac{4}{7}+\\frac{2}{3}} = \\frac{16/21}{26/21} = \\frac{8}{13}$。\n- $t = 0.40$: $\\mathrm{TP}=5, \\mathrm{FP}=3$。 $P=\\frac{5}{8}, R=\\frac{5}{6}$。 $F_1 = \\frac{2 \\cdot \\frac{5}{8} \\cdot \\frac{5}{6}}{\\frac{5}{8}+\\frac{5}{6}} = \\frac{50/48}{35/24} = \\frac{25/24}{35/24} = \\frac{25}{35} = \\frac{5}{7}$。\n- $t = 0.35$: $\\mathrm{TP}=5, \\mathrm{FP}=4$。 $P=\\frac{5}{9}, R=\\frac{5}{6}$。 $F_1 = \\frac{2 \\cdot \\frac{5}{9} \\cdot \\frac{5}{6}}{\\frac{5}{9}+\\frac{5}{6}} = \\frac{50/54}{25/18} = \\frac{25/27}{25/18} = \\frac{18}{27} = \\frac{2}{3}$。\n- $t = 0.20$: $\\mathrm{TP}=5, \\mathrm{FP}=5$。 $P=\\frac{5}{10}=\\frac{1}{2}, R=\\frac{5}{6}$。 $F_1 = \\frac{2 \\cdot \\frac{1}{2} \\cdot \\frac{5}{6}}{\\frac{1}{2}+\\frac{5}{6}} = \\frac{5/6}{8/6} = \\frac{5}{8}$。\n- $t = 0.10$: $\\mathrm{TP}=5, \\mathrm{FP}=6$。 $P=\\frac{5}{11}, R=\\frac{5}{6}$。 $F_1 = \\frac{2 \\cdot \\frac{5}{11} \\cdot \\frac{5}{6}}{\\frac{5}{11}+\\frac{5}{6}} = \\frac{50/66}{85/66} = \\frac{50}{85} = \\frac{10}{17}$。\n- $t = 0.05$: $\\mathrm{TP}=6, \\mathrm{FP}=6$。 $P=\\frac{6}{12}=\\frac{1}{2}, R=\\frac{6}{6}=1$。 $F_1 = \\frac{2 \\cdot \\frac{1}{2} \\cdot 1}{\\frac{1}{2}+1} = \\frac{1}{3/2} = \\frac{2}{3}$。\n\n比较 $F_1$ 分数： $\\frac{2}{7} \\approx 0.286$, $\\frac{1}{2}=0.5$, $\\frac{4}{9}\\approx 0.444$, $\\frac{3}{5}=0.6$, $\\frac{2}{3}\\approx 0.667$, $\\frac{8}{13}\\approx 0.615$, $\\frac{5}{7}\\approx 0.714$, $\\frac{5}{8}=0.625$, $\\frac{10}{17}\\approx 0.588$。\n最大的 $F_1$ 分数是 $\\frac{5}{7}$，出现在阈值 $t_{F1} = 0.40$ 处。\n\n现在，我们计算 $t_{F1} = 0.40$ 时的总期望成本。\n- 对于 $s_i \\geq 0.40$ 的实例，我们分类为正类，成本为 $1(1-s_i)$。这些分数是： $0.95, 0.85, 0.70, 0.65, 0.60, 0.55, 0.50, 0.40$。\n- 对于 $s_i  0.40$ 的实例，我们分类为负类，成本为 $20 s_i$。这些分数是： $0.35, 0.20, 0.10, 0.05$。\n\n总期望成本 $C_{\\mathrm{total}}(t_{F1})$ 是：\n$$C_{\\mathrm{total}}(t_{F1}) = \\sum_{s_i \\geq 0.40} (1-s_i) + \\sum_{s_i  0.40} 20 s_i$$\n第一组的和：\n$$ (1-0.95) + (1-0.85) + (1-0.70) + (1-0.65) + (1-0.60) + (1-0.55) + (1-0.50) + (1-0.40) $$\n$$ = 0.05 + 0.15 + 0.30 + 0.35 + 0.40 + 0.45 + 0.50 + 0.60 = 2.80 $$\n第二组的和：\n$$ 20(0.35) + 20(0.20) + 20(0.10) + 20(0.05) $$\n$$ = 7 + 4 + 2 + 1 = 14.0 $$\n总期望成本：\n$$ C_{\\mathrm{total}}(t_{F1}) = 2.80 + 14.0 = 16.80 $$\n\n### 第3部分：遗憾计算\n优化 $F_1$ 分数而非期望成本的遗憾是 $t_{F1}$ 下的总成本与可能的最小总成本（用 $t_{\\mathrm{cost}}$ 实现）之间的差值。\n$$ \\text{Regret} = C_{\\mathrm{total}}(t_{F1}) - C_{\\mathrm{total}}(t_{\\mathrm{cost}}) $$\n$$ \\text{Regret} = 16.80 - 6.10 = 10.70 $$\n问题要求答案四舍五入到四位有效数字。计算出的值 $10.70$ 已经是这个形式。", "answer": "$$\n\\boxed{10.70}\n$$", "id": "3118850"}]}