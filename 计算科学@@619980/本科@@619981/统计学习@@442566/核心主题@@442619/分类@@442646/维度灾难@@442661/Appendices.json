{"hands_on_practices": [{"introduction": "我们在三维世界中形成的几何直觉，在高维空间中往往会失效。本练习将通过一个引人注目的定量计算，揭示高维空间最基本、也最违反直觉的后果之一：体积集中现象。通过比较二维圆和一百维超球体的体积分布，你将发现为什么高维空间常被描述为“几乎是空的”，其绝大部分体积都集中在表层附近。[@problem_id:2439725]", "problem": "在用于计算经济学和金融学中数值方法的高维状态空间中，考虑以下与体积集中现象相关的几何比较。\n\n在二维空间中，一个单位半径的圆内接于一个边长为 $2$ 的正方形；在一个一百维空间中，一个单位半径的欧几里得超球体内接于一个边长为 $2$ 的超立方体。对于每个球体，定义“外壳”为所有到中心的距离在半径 $1 - \\varepsilon$ 和 $1$ 之间的点的集合，其中 $\\varepsilon = 0.05$。\n\n令 $f_{n}(\\varepsilon)$ 表示 $n$ 维球体体积中位于此外壳内的部分所占的比例。计算比率\n$$\nc \\equiv \\frac{f_{100}(0.05)}{f_{2}(0.05)}。\n$$\n以单个实数的形式提供您的答案，并将其四舍五入到四位有效数字。", "solution": "必须首先验证问题陈述的科学性和逻辑完整性。\n\n**步骤 1：提取已知条件**\n- 在 $n$ 维空间中考虑一个单位半径的欧几里得超球面。\n- 该超球体内接于一个边长为 $2$ 的超立方体。此信息是一致的，但对核心计算是辅助性的。\n- 超球体的“外壳”被定义为所有与中心的径向距离 $r$ 满足 $1 - \\varepsilon \\le r \\le 1$ 的点的集合。\n- 壳层厚度参数的具体值为 $\\varepsilon = 0.05$。\n- $f_{n}(\\varepsilon)$ 被定义为 $n$ 维球体体积中位于此外壳内的部分所占的比例。\n- 待计算的量是比率 $c \\equiv \\frac{f_{100}(0.05)}{f_{2}(0.05)}$。\n- 最终答案必须是一个四舍五入到四位有效数字的单个实数。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题有科学依据，是良定的，并且是客观的。它提出了一个高维几何学中的标准问题，这是数学中的一个基本课题，并对计算科学、统计学和金融学等领域有直接影响，特别是关于被称为“维度灾难”的现象。定义是精确的，参数已给出，并且不存在矛盾或含糊之处。该问题是一个可形式化的计算，并且不违反任何科学原理。\n\n**步骤 3：结论与行动**\n该问题是有效的。将提供完整的解答。\n\n半径为 $R$ 的 $n$ 维球体（超球面）的体积由以下公式给出：\n$$\nV_n(R) = C_n R^n\n$$\n其中 $C_n = \\frac{\\pi^{n/2}}{\\Gamma(\\frac{n}{2} + 1)}$ 是一个仅取决于维度 $n$ 的常数。$\\Gamma$ 表示伽马函数。\n\n问题将 $f_n(\\varepsilon)$ 定义为单位半径（$R=1$）的 $n$ 维球体中，包含在厚度为 $\\varepsilon$ 的外壳内的体积所占的比例。单位 $n$ 维球体的总体积是 $V_n(1)$。不属于外壳的内部核心的体积，是半径为 $1 - \\varepsilon$ 的 $n$ 维球体的体积。该体积为 $V_n(1 - \\varepsilon)$。\n\n外壳的体积 $V_{\\text{shell}}$ 是总体积与内部核心体积之差：\n$$\nV_{\\text{shell}} = V_n(1) - V_n(1 - \\varepsilon)\n$$\n比例 $f_n(\\varepsilon)$ 是外壳体积与总体积的比率：\n$$\nf_n(\\varepsilon) = \\frac{V_{\\text{shell}}}{V_n(1)} = \\frac{V_n(1) - V_n(1 - \\varepsilon)}{V_n(1)}\n$$\n代入体积公式，我们得到：\n$$\nf_n(\\varepsilon) = \\frac{C_n (1)^n - C_n (1 - \\varepsilon)^n}{C_n (1)^n}\n$$\n常数 $C_n$ 从分子和分母中约去，这极大地简化了表达式：\n$$\nf_n(\\varepsilon) = \\frac{1 - (1 - \\varepsilon)^n}{1} = 1 - (1 - \\varepsilon)^n\n$$\n这个结果表明，外壳中的体积比例与体积常数 $C_n$ 无关，仅取决于维度 $n$ 和相对厚度 $\\varepsilon$。这是高维空间的一个关键特征：体积集中在表面附近。\n\n我们被要求计算在 $n=100$ 和 $n=2$ 且 $\\varepsilon = 0.05$ 的特定情况下的比率 $c$。\n\n首先，我们计算二维情况（圆）下的 $f_2(0.05)$：\n$$\nf_2(0.05) = 1 - (1 - 0.05)^2 = 1 - (0.95)^2 = 1 - 0.9025 = 0.0975\n$$\n这表明单位圆 $9.75\\%$ 的面积位于其边界 $0.05$ 的范围内。\n\n接下来，我们计算一百维情况（超球面）下的 $f_{100}(0.05)$：\n$$\nf_{100}(0.05) = 1 - (1 - 0.05)^{100} = 1 - (0.95)^{100}\n$$\n现在，我们必须对其进行数值计算。\n$$\n(0.95)^{100} \\approx 0.00592052922\n$$\n因此，\n$$\nf_{100}(0.05) \\approx 1 - 0.00592052922 = 0.99407947078\n$$\n这个惊人的结果表明，一个 100 维超球体超过 $99.4\\%$ 的体积都集中在一个仅占其半径最外层 $5\\%$ 的壳层中。\n\n最后，我们计算所要求的比率 $c$：\n$$\nc = \\frac{f_{100}(0.05)}{f_{2}(0.05)} = \\frac{1 - (0.95)^{100}}{1 - (0.95)^2}\n$$\n代入我们计算出的数值：\n$$\nc \\approx \\frac{0.99407947078}{0.0975} \\approx 10.19568688\n$$\n问题要求答案四舍五入到四位有效数字。\n该值为 $10.19568688...$。前四位有效数字是 $1$、$0$、$1$、$9$。第五位有效数字是 $5$，这要求将第四位有效数字向上舍入。\n$$\nc \\approx 10.20\n$$\n这个结果定量地说明了“维度灾难”：随着维度的增加，超球体的绝大部分体积都移向其表面，使得中心区域变得“空空如也”。这对依赖于对高维空间进行采样或离散化的数值方法产生了深远的影响。", "answer": "$$\n\\boxed{10.20}\n$$", "id": "2439725"}, {"introduction": "高维空间的几何特性在计算建模中会带来非常实际的后果。本练习将从抽象的几何学转向一个具体的金融建模问题：动态资产配置。你将计算当可选资产数量增加时，模型的可能状态和决策空间是如何爆炸式增长的，从而理解“维度灾难”如何让许多问题即便在现代计算能力下也变得难以处理。[@problem_id:2439660]", "problem": "考虑一个包含 $d$ 种风险资产且无无风险资产的有限期资产配置问题。时间是离散的，周期为 $t \\in \\{0,1,\\dots,T-1\\}$，终止日期为 $T$。投资者在每个周期 $t$ 开始时拥有财富 $W_t$，并从一个均匀网格上选择投资组合权重 $w_t = (w_{t,1},\\dots,w_{t,d})$，其中对所有 $i$ 都有 $w_{t,i} \\ge 0$，$\\sum_{i=1}^d w_{t,i} = 1$，且每个 $w_{t,i}$ 仅限于 $1/M$ 的倍数。财富动态为\n$$\nW_{t+1} = W_t \\sum_{i=1}^d w_{t,i} \\, R_i(s_{t,i}),\n$$\n其中 $s_{t,i} \\in \\{0,1\\}$ 是资产 $i$ 在时间 $t$ 的外生状态，而 $R_i(s)$ 是资产 $i$ 在其状态条件下的单周期总回报率。具体来说，每种资产的总回报率为\n$$\nR_i(s) = \n\\begin{cases}\nr_H  \\text{if } s=1,\\\\\nr_L  \\text{if } s=0,\n\\end{cases}\n$$\n其中 $r_H > 0$ 且 $r_L > 0$。$d$ 维外生状态向量为 $s_t = (s_{t,1},\\dots,s_{t,d}) \\in \\{0,1\\}^d$，且每个分量 $s_{t,i}$ 遵循一个独立的双状态时间齐次马尔可夫链，其转移矩阵为\n$$\n\\begin{pmatrix}\n\\mathbb{P}(s_{t+1,i}=0 \\mid s_{t,i}=0)  \\mathbb{P}(s_{t+1,i}=1 \\mid s_{t,i}=0) \\\\\n\\mathbb{P}(s_{t+1,i}=0 \\mid s_{t,i}=1)  \\mathbb{P}(s_{t+1,i}=1 \\mid s_{t,i}=1)\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1-p_{LH}  p_{LH} \\\\\n1-p_{HH}  p_{HH}\n\\end{pmatrix},\n$$\n其中 $p_{HH} \\in [0,1]$ 且 $p_{LH} \\in [0,1]$。投资者的目标是最大化预期终端财富 $\\mathbb{E}[W_T]$。\n\n对于任意给定的 $d$ 和 $M$，定义外生状态空间 $\\mathcal{S}_d = \\{0,1\\}^d$，其基数为 $|\\mathcal{S}_d| = 2^d$；以及可行行动集 $\\mathcal{A}_{d,M} = \\{ w \\in (\\{0,1/M,2/M,\\dots,1\\})^d : \\sum_{i=1}^d w_i = 1 \\}$，其基数等于满足 $\\sum_{i=1}^d n_i = M$ 的非负整数 $d$ 元组 $(n_1,\\dots,n_d)$ 的数量，即：\n$$\n|\\mathcal{A}_{d,M}| = \\binom{M + d - 1}{d - 1}.\n$$\n\n任务：\n- 对于下方的每个测试用例，计算以下三个输出：\n  1. 外生状态空间的大小 $|\\mathcal{S}_d| = 2^d$。\n  2. 可行行动集的大小 $|\\mathcal{A}_{d,M}| = \\binom{M + d - 1}{d - 1}$。\n  3. 在给定当前外生状态 $s_0$ 的情况下，在时间 $t=0$ 时的最优单周期投资组合 $w^\\star \\in \\mathcal{A}_{d,M}$，其定义为在 $w \\in \\mathcal{A}_{d,M}$ 上 $\\sum_{i=1}^d w_i \\, R_i(s_{0,i})$ 的任意最大化者。如果存在多个最大化者，选择将全部权重 $1$ 分配给最大化者中索引最小的资产的唯一投资组合（即，$w^\\star$ 等于一个 $d$ 维向量，该向量在达到最大值 $R_i(s_{0,i})$ 的最小索引 $i$ 处为 $1$，在其他位置为 $0$）。\n\n- 此外，计算比率 $\\rho = \\dfrac{|\\mathcal{S}_{10}|}{|\\mathcal{S}_{2}|}$。\n\n测试套件（独立计算；每个项目定义一个测试用例）：\n- 用例 A（正常路径）：$T=3$，$d=2$，$M=4$，$r_H=1.04$，$r_L=0.98$，$p_{HH}=0.8$，$p_{LH}=0.3$，$s_0=(1,0)$。\n- 用例 B（在 $t=0$ 时所有资产出现平局的边缘情况）：$T=3$，$d=10$，$M=2$，$r_H=1.02$，$r_L=0.99$，$p_{HH}=0.7$，$p_{LH}=0.4$，$s_0=(0,0,0,0,0,0,0,0,0,0)$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表的结果：\n  - 该列表应为 $[|\\mathcal{S}_2|, |\\mathcal{A}_{2,4}|, w^\\star_{\\text{A}}, |\\mathcal{S}_{10}|, |\\mathcal{A}_{10,2}|, w^\\star_{\\text{B}}, \\rho]$，\n  - 其中 $w^\\star_{\\text{A}}$ 是用例 A 的最优单周期投资组合，表示为包含 $d$ 个浮点数的 Python 风格列表，而 $w^\\star_{\\text{B}}$ 是用例 B 的类似列表，\n  - 且 $\\rho$ 是一个正整数或浮点数。例如，输出形状应类似于 $[4,5,[1.0,0.0],1024,55,[1.0,0.0,0.0,\\dots],256]$，其中的确切数值由上述计算确定。不需要单位。", "solution": "问题陈述已通过验证并被认为是有效的。它在科学上基于金融经济学和动态规划的原理，问题设定良好，包含所有必要信息和清晰、客观的定义，并且没有矛盾或含糊之处。这些任务可以直接根据给定的信息计算出来。时间范围 $T$ 和马尔可夫链转移概率 $p_{HH}$ 和 $p_{LH}$ 等参数是完整动态规划问题背景的一部分，但与所要求的特定单周期计算无关。包含这些参数并不会使问题无效。\n\n该问题要求计算两种不同情况下的状态空间大小、行动空间大小和最优单周期投资组合，以及状态空间大小的比率。这些计算旨在说明计算模型中的‘维度灾难’，即状态和行动空间的大小随着问题维度（此处由资产数量 $d$ 表示）的增加而爆炸性增长。\n\n所需的计算过程如下。\n\n1.  **外生状态空间的大小, $|\\mathcal{S}_d|$**\n\n    系统的外生状态是一个 $d$ 维向量 $s_t = (s_{t,1}, \\dots, s_{t,d})$，其中每个分量 $s_{t,i}$ 可以取两个值之一，$0$ 或 $1$。状态空间为 $\\mathcal{S}_d = \\{0,1\\}^d$。该空间的基数由基本计数原理给出。\n    $$\n    |\\mathcal{S}_d| = 2^d\n    $$\n    对于用例 A，当 $d=2$ 时：\n    $$\n    |\\mathcal{S}_2| = 2^2 = 4\n    $$\n    对于用例 B，当 $d=10$ 时：\n    $$\n    |\\mathcal{S}_{10}| = 2^{10} = 1024\n    $$\n\n2.  **可行行动集的大小, $|\\mathcal{A}_{d,M}|$**\n\n    投资组合权重 $w = (w_1, \\dots, w_d)$ 被限制为 $1/M$ 的倍数。令 $w_i = n_i/M$，其中 $n_i$ 为非负整数。约束条件 $\\sum_{i=1}^d w_i = 1$ 变为 $\\sum_{i=1}^d (n_i/M) = 1$，可简化为 $\\sum_{i=1}^d n_i = M$。该方程的非负整数解的数量是一个经典的组合问题，可用隔板法解决。问题陈述中正确地提供了该公式。\n    $$\n    |\\mathcal{A}_{d,M}| = \\binom{M + d - 1}{d - 1}\n    $$\n    对于用例 A，当 $d=2$ 且 $M=4$ 时：\n    $$\n    |\\mathcal{A}_{2,4}| = \\binom{4 + 2 - 1}{2 - 1} = \\binom{5}{1} = \\frac{5!}{1!(5-1)!} = 5\n    $$\n    对于用例 B，当 $d=10$ 且 $M=2$ 时：\n    $$\n    |\\mathcal{A}_{10,2}| = \\binom{2 + 10 - 1}{10 - 1} = \\binom{11}{9} = \\frac{11!}{9!(11-9)!} = \\frac{11 \\times 10}{2 \\times 1} = 55\n    $$\n\n3.  **最优单周期投资组合, $w^\\star$**\n\n    目标是最大化单周期预期财富。由于初始财富 $W_0 > 0$ 是一个常数乘数，最大化 $\\mathbb{E}[W_1] = \\mathbb{E}[W_0 \\sum_{i=1}^d w_i R_i(s_{0,i})]$ 等价于在已知当前状态 $s_0$ 的情况下最大化投资组合的总回报 $G(w) = \\sum_{i=1}^d w_i R_i(s_{0,i})$。优化问题为：\n    $$\n    \\underset{w \\in \\mathcal{A}_{d,M}}{\\text{maximize}} \\quad \\sum_{i=1}^d w_i R_i(s_{0,i})\n    $$\n    这是一个线性目标函数。对于此类问题，最优策略是将整个投资组合分配给提供最高系数（即回报率 $R_i(s_{0,i})$）的资产 $i$。这对应于一个投资组合 $w$，其中 $w_i=1$ 且对于所有 $j \\neq i$ 都有 $w_j=0$。对于任何整数 $M \\ge 1$，这样的投资组合始终是离散行动集 $\\mathcal{A}_{d,M}$ 的一个元素，因为 $1$ 和 $0$ 总是可以表示为 $1/M$ 的倍数。\n\n    **对于用例 A：**\n    - 参数：$d=2$，$s_0=(1,0)$，$r_H=1.04$，$r_L=0.98$。\n    - 资产的回报率为：\n      - 资产 1：$R_1(s_{0,1}) = R_1(1) = r_H = 1.04$。\n      - 资产 2：$R_2(s_{0,2}) = R_2(0) = r_L = 0.98$。\n    - 由于 $R_1(s_{0,1}) > R_2(s_{0,2})$，最优策略是将全部权重分配给资产 1。\n    - $w^\\star_{\\text{A}} = (1.0, 0.0)$。不存在平局。\n\n    **对于用例 B：**\n    - 参数：$d=10$，$s_0=(0,0,0,0,0,0,0,0,0,0)$，$r_H=1.02$，$r_L=0.99$。\n    - 每个资产 $i \\in \\{1, \\dots, 10\\}$ 的回报率是相同的：\n      - $R_i(s_{0,i}) = R_i(0) = r_L = 0.99$。\n    - 所有资产都是个体回报率 $R_i(s_{0,i})$ 的潜在最大化者。对于任何有效投资组合，目标函数值均为 $0.99$。这构成了平局。\n    - 问题提供了一个特定的平局打破规则：选择将权重 $1$ 分配给达到最大回报的*最小索引* $i$ 的资产。\n    - 达到最大回报的索引集合是 $\\{1, 2, \\dots, 10\\}$。最小的索引是 $1$。\n    - 因此，根据规则，最优投资组合为 $w^\\star_{\\text{B}} = (1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)$。\n\n4.  **状态空间大小的比率, $\\rho$**\n\n    该比率使用步骤 1 的结果计算。\n    $$\n    \\rho = \\frac{|\\mathcal{S}_{10}|}{|\\mathcal{S}_2|} = \\frac{1024}{4} = 256\n    $$\n    当从 $d=2$ 移至 $d=10$ 时，状态空间大小（$|\\mathcal{S}_{10}| = 256 \\times |\\mathcal{S}_2|$）和行动空间大小（$|\\mathcal{A}_{10,2}| = 11 \\times |\\mathcal{A}_{2,4}|$）的显著增加，展示了复杂度的快速增长，即所谓的维度灾难，这是解决此类模型的核心挑战。\n\n最终计算值为：$|\\mathcal{S}_2|=4$，$|\\mathcal{A}_{2,4}|=5$，$w^\\star_{\\text{A}}=[1.0, 0.0]$，$|\\mathcal{S}_{10}|=1024$，$|\\mathcal{A}_{10,2}|=55$，$w^\\star_{\\text{B}}=[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]$，以及 $\\rho=256$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import comb\n\ndef solve():\n    \"\"\"\n    Computes the state space size, action space size, and optimal one-period\n    portfolio for two test cases of an asset allocation problem.\n    \"\"\"\n\n    # Case A: Happy path\n    # Parameters\n    d_A = 2\n    M_A = 4\n    s0_A = (1, 0)\n    rH_A = 1.04\n    rL_A = 0.98\n\n    # Calculations for Case A\n    # 1. Size of the exogenous state space |S_d| = 2^d\n    S_size_A = 2**d_A\n\n    # 2. Size of the feasible action set |A_{d,M}| = C(M + d - 1, d - 1)\n    A_size_A = comb(M_A + d_A - 1, d_A - 1, exact=True)\n\n    # 3. Optimal one-period portfolio w_star\n    # The goal is to maximize sum(w_i * R_i(s_0,i)). This is a linear program whose\n    # solution is to put all weight on the asset with the highest return.\n    returns_A = np.array([rH_A if s == 1 else rL_A for s in s0_A])\n    # np.argmax returns the index of the first occurrence of the maximum value,\n    # which satisfies the specified tie-breaking rule.\n    max_return_idx_A = np.argmax(returns_A)\n    w_star_A = np.zeros(d_A)\n    w_star_A[max_return_idx_A] = 1.0\n    w_star_A_list = w_star_A.tolist()\n\n\n    # Case B: Edge case with ties\n    # Parameters\n    d_B = 10\n    M_B = 2\n    s0_B = (0,) * 10 # Tuple of 10 zeros\n    rH_B = 1.02\n    rL_B = 0.99\n\n    # Calculations for Case B\n    # 1. Size of state space\n    S_size_B = 2**d_B\n\n    # 2. Size of action set\n    A_size_B = comb(M_B + d_B - 1, d_B - 1, exact=True)\n\n    # 3. Optimal one-period portfolio\n    returns_B = np.array([rH_B if s == 1 else rL_B for s in s0_B])\n    # All returns are equal (rL_B). The tie-breaking rule requires selecting\n    # the smallest index, which np.argmax does by default.\n    max_return_idx_B = np.argmax(returns_B)\n    w_star_B = np.zeros(d_B)\n    w_star_B[max_return_idx_B] = 1.0\n    w_star_B_list = w_star_B.tolist()\n\n\n    # Ratio calculation\n    # rho = |S_10| / |S_2|\n    rho = S_size_B / S_size_A\n\n    # Assemble the final list of results\n    results = [\n        int(S_size_A),\n        int(A_size_A),\n        w_star_A_list,\n        int(S_size_B),\n        int(A_size_B),\n        w_star_B_list,\n        int(rho)\n    ]\n\n    # Final print statement in the exact required format.\n    # The str() function correctly formats lists into the '[...]' string representation.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2439660"}, {"introduction": "现在，我们将几何和计算方面的挑战与统计学习的核心任务——从数据中进行预测——联系起来。本练习将探讨为何许多直观的局部方法，例如在“最近邻”上取平均，会在高维空间中失效。通过分析一个非参数回归问题，你将亲眼看到，随着维度增加，数据点变得异常稀疏，以至于找到一个真正的“局部”邻域变得不再可能，这迫使我们在偏差和方差之间做出艰难权衡，并常常导致预测性能不佳的模型。[@problem_id:2439720]", "problem": "你正在观测一个来自数据生成过程（DGP）的大小为 $n=100000$ 的样本，该过程由 $y=f(x_1,\\ldots,x_{100})$ 定义，其中 $f$ 未知但连续，并且对于欧几里得范数而言，其全局利普希茨常数为 $L>0$。协变量满足 $x_j \\sim \\text{Uniform}[0,1]$，对于所有 $j \\in \\{1,\\ldots,100\\}$ 均独立。你感兴趣的是根据 $x$ 对 $y$ 进行样本外预测。\n\n考虑一个非参数局部常数回归规则，对于一个查询点 $x_0$，该规则对训练点中所有坐标都位于以 $x_0$ 为中心、边长为 $h$ 的超立方体内的点的 $y$ 值进行平均（即，$x$ 的每个坐标都位于 $x_0$ 相应坐标的 $h/2$ 范围内；忽略边界效应）。为了控制方差，你要求邻域内训练观测值的期望数量至少为 $m=30$。\n\n令 $d$ 表示预测器使用的协变量数量。在完整模型中，$d=100$。在一个只使用前两个协变量的简化模型中，$d=2$，因此对于某个在二维空间中使用相同局部常数规则的预测器 $g$，有 $y \\approx g(x_1,x_2)$。\n\n仅使用关于独立均匀变量和 $\\mathbb{R}^d$ 中体积的基本事实，判断哪个陈述最能解释为什么简化模型 $y \\approx g(x_1,x_2)$ 在预测方面可能比在样本量 $n$ 相同的情况下，尝试在 $d=100$ 维空间中非参数地学习 $f$ 更有用，尽管真实的数据生成过程依赖于所有100个变量。\n\n选择一个选项。\n\n- A. 在 $d=100$ 时，要在 $n=100000$ 的情况下达到 $m=30$ 的期望邻域大小，需要一个接近 1 的边长 $h$，因此邻域实际上是全局的，并对利普希茨函数 $f$ 产生很大的偏差。在 $d=2$ 时，所需的 $h$ 非常小，允许在方差相当的情况下进行真正的局部平均，偏差很小。因此，低维预测器可以更好地进行样本外泛化。\n\n- B. 因为只要保留的协变量 $x_1,x_2$ 与省略的协变量相关，省略 $x_3,\\ldots,x_{100}$ 就能消除偏差，所以双变量模型总是更适合预测。\n\n- C. 随着维度的增加，$[0,1]^d$ 中任意两点之间的欧几里得距离变为零，因此使用许多变量会使所有邻域都坍缩，从而破坏预测能力。\n\n- D. 高维度会机械地降低估计量的方差，而不管样本量 $n$ 如何，因此只有在 $n$ 极小的情况下，使用较少的协变量才有帮助，而这里情况并非如此。", "solution": "必须首先验证问题陈述的科学性和逻辑完整性。\n\n### 步骤 1：提取已知条件\n- 样本量：$n=100000$。\n- 数据生成过程 (DGP)：$y=f(x_1,\\ldots,x_{100})$，其中 $f$ 是一个未知函数。\n- $f$ 的性质：对于欧几里得范数，函数是连续的且全局利普希茨连续，常数为 $L>0$。\n- 协变量：$x_j \\sim \\text{Uniform}[0,1]$，对于所有 $j \\in \\{1,\\ldots,100\\}$ 均独立。因此，向量 $x$ 在单位超立方体 $[0,1]^{100}$ 中均匀分布。\n- 估计量：一个局部常数回归规则。对于一个查询点 $x_0$，预测值是邻域内训练点 $x$ 的 $y$ 值的平均值，该邻域由以 $x_0$ 为中心、边长为 $h$ 的超立方体定义。\n- 边界效应将被忽略。\n- 方差控制约束：邻域内训练观测值的期望数量必须至少为 $m=30$。\n- 完整模型维度：$d=100$。\n- 简化模型维度：$d=2$，仅使用协变量 $x_1, x_2$。\n- 目标：解释为什么维度为 $d=2$ 的模型在预测方面可能比维度为 $d=100$ 的模型更有用。\n\n### 步骤 2：使用提取的已知条件进行验证\n该问题具有科学依据。它描述了一个用于说明非参数回归背景下“维度灾难”的典型场景，这是统计学和机器学习中的一个基石概念。该设定是适定的；它提供了足够的信息（$n, m$，协变量的分布，$f$ 的函数类别，以及估计量的结构）来对所涉及的权衡进行正式分析。语言客观而精确。问题是自洽的，没有内部矛盾或事实错误。这是统计理论中的一个有效练习。\n\n### 步骤 3：结论和行动\n问题陈述是有效的。将推导出一个完整的解决方案。\n\n这个问题的核心在于理解高维空间的几何特性如何影响非参数估计中的偏差-方差权衡。该估计量是一个局部平均值。其性能取决于局部邻域的大小，该大小由超立方体边长 $h$ 来表征。\n\n数据点从单位超立方体 $[0,1]^d$ 上的均匀分布中抽样。查询点 $x_0$ 的邻域是一个边长为 $h$ 的超立方体。该邻域的体积为 $V = h^d$。由于数据是均匀分布的，且我们忽略边界效应，单个数据点落入此邻域的概率为 $p = V = h^d$。\n\n对于给定大小为 $n$ 的样本，邻域中的点数 $K$ 服从二项分布 $B(n, p)$。点的期望数量为 $E[K] = np = nh^d$。问题施加了约束，即为了控制估计量的方差，该期望值必须至少为 $m=30$。我们将目标设为 $E[K]=m$ 以满足此条件。\n$$nh^d = m$$\n我们可以求解所需的边长 $h$：\n$$h = \\left(\\frac{m}{n}\\right)^{1/d}$$\n给定 $n = 100000$ 和 $m = 30$，我们有：\n$$\\frac{m}{n} = \\frac{30}{100000} = 3 \\times 10^{-4}$$\n所以，边长 $h$ 是维度 $d$ 的函数：\n$$h(d) = (3 \\times 10^{-4})^{1/d}$$\n\n现在，我们分析问题中提出的两种情况。\n\n情况 1：完整模型 ($d=100$)\n对于使用所有 100 个协变量的模型，所需的边长 $h$ 为：\n$$h(100) = (3 \\times 10^{-4})^{1/100}$$\n为了计算这个值，我们使用对数：\n$$\\ln(h(100)) = \\frac{1}{100} \\ln(3 \\times 10^{-4}) \\approx \\frac{1}{100} (\\ln(3) - 4\\ln(10)) \\approx \\frac{1}{100}(1.0986 - 4 \\times 2.3026) = \\frac{1}{100}(1.0986 - 9.2104) = -0.0811$$\n$$h(100) = e^{-0.0811} \\approx 0.922$$\n对于 100 个维度中的每一个，边长 $h \\approx 0.92$ 意味着“局部”邻域跨越了每个变量整个范围的大约 $92\\%$。这绝不是一个“局部”区域；它几乎是全局的。在任何点 $x_0$ 的预测都是对可能离 $x_0$ 很远的点进行的平均。由于真实函数 $f$ 是利普希茨的，局部常数估计量的偏差由一个与邻域大小成正比的项所界定。对于大的 $h$，邻域中的点 $x_i$ 的函数值 $f(x_i)$ 可能与 $f(x_0)$ 非常不同，导致显著的平均偏差。\n\n情况 2：简化模型 ($d=2$)\n对于仅使用 2 个协变量的模型，所需的边长 $h$ 为：\n$$h(2) = (3 \\times 10^{-4})^{1/2} = \\sqrt{3 \\times 10^{-4}} = \\sqrt{3} \\times 10^{-2} \\approx 1.732 \\times 10^{-2} = 0.01732$$\n边长 $h \\approx 0.017$ 相对于单位区间 $[0,1]$ 来说很小。这个邻域是真正局部的。在这样一个小的区域上进行平均可以确保所有用于预测的点 $x_i$ 都接近查询点 $x_0$。因为 $f$ 是连续的，所以在这个小邻域中的所有点都有 $f(x_i) \\approx f(x_0)$，从而导致小的平均偏差。\n\n根据构造，两种估计量都被设计为具有可比的方差，因为它们都使用期望样本量为 $m=30$ 进行局部平均。它们在样本外预测误差（均方误差，MSE）——即偏差平方和方差之和——中的主要差异将来自偏差项。\n\n$d=100$ 的模型有巨大的偏差。$d=2$ 的模型偏差很小。因此，即使 $d=2$ 的模型是设定错误的（它忽略了变量 $x_3, \\ldots, x_{100}$），其显著更低的估计偏差也可能导致其总体 MSE 远小于 $d=100$ 的模型，后者灾难性地遭受维度灾难的影响。简化模型很可能提供更优的样本外预测。\n\n现在，我们评估每个选项。\n\n- **A. 在 $d=100$ 时，要在 $n=100000$ 的情况下达到 $m=30$ 的期望邻域大小，需要一个接近 1 的边长 $h$，因此邻域实际上是全局的，并对利普希茨函数 $f$ 产生很大的偏差。在 $d=2$ 时，所需的 $h$ 非常小，允许在方差相当的情况下进行真正的局部平均，偏差很小。因此，低维预测器可以更好地进行样本外泛化。**\n这个陈述完美地总结了我们的推导。它正确地指出，对于 $d=100$，$h$ 很大，而对于 $d=2$，$h$ 很小。它正确地将大的 $h$ 与大的偏差联系起来，将小的 $h$ 与小的偏差联系起来。它注意到方差是可比的。低维预测器可以更好地泛化这一结论是该分析的正确结果。**正确**。\n\n- **B. 因为只要保留的协变量 $x_1,x_2$ 与省略的协变量相关，省略 $x_3,\\ldots,x_{100}$ 就能消除偏差，所以双变量模型总是更适合预测。**\n这个陈述存在根本性缺陷。从模型中省略相关变量（$x_3, \\ldots, x_{100}$ 是真实数据生成过程的一部分）是设定偏差的来源。它并不能消除偏差。这一说法与事实恰恰相反。该陈述表明对模型设定有深刻的误解。**错误**。\n\n- **C. 随着维度的增加，$[0,1]^d$ 中任意两点之间的欧几里得距离变为零，因此使用许多变量会使所有邻域都坍缩，从而破坏预测能力。**\n这个陈述在事实上是不正确的。从 $[0,1]^d$ 中均匀抽取的两个随机点 $X, Y$ 之间的期望欧几里得距离的平方是 $E[\\|X-Y\\|^2] = d \\cdot E[(X_1-Y_1)^2] = d/6$。因此，期望距离随 $\\sqrt{d}$ 增长。距离不会收敛到零；它们会集中在更大的值上。这个前提是错误的。**错误**。\n\n- **D. 高维度会机械地降低估计量的方差，而不管样本量 $n$ 如何，因此只有在 $n$ 极小的情况下，使用较少的协变量才有帮助，而这里情况并非如此。**\n这个陈述是不正确的。对于固定的样本量 $n$ 和固定的邻域体积（即固定的 $h$），增加维度 $d$ 会导致数据更稀疏。任何固定邻域中的点数都会减少，这会*增加*估计量的方差。维度灾难迫使我们在大偏差（增加 $h$）和大方差（保持 $h$ 小）之间做出选择。高维度机械地降低方差的说法是错误的。**错误**。", "answer": "$$\\boxed{A}$$", "id": "2439720"}]}