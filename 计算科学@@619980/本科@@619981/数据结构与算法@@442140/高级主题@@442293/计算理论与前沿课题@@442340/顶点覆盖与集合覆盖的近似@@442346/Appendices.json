{"hands_on_practices": [{"introduction": "顶点覆盖是一个经典的 NP-难问题，但在实际应用中我们又需要高效地求解它。基于最大匹配的 2-近似算法为我们提供了一个可靠的工具，它保证找到的解的大小不会超过最优解的两倍。这个练习将带你逐步执行该算法，通过在一个具体图例上的操作，你将亲身体验算法的流程，并计算其在特定情况下的近似比，从而加深对近似算法性能评估的理解。[@problem_id:1481691]", "problem": "在计算复杂性理论领域，顶点覆盖问题是NP难问题的一个经典例子。给定一个图，目标是找到一个规模最小的顶点子集，使得图中的每条边都至少与该子集中的一个顶点相连。这样的子集被称为最小（或最优）顶点覆盖，其对于图 $G$ 的大小记为 $\\tau(G)$。\n\n由于对于大型图来说，找到最优解在计算上是困难的，因此常常使用近似算法。其中一种算法是基于极大匹配的2-近似算法。它保证得到的解的大小不超过最优解的两倍。该算法流程如下：\n1.  从一个空的匹配集合 $M = \\emptyset$ 开始。匹配是指一个边的集合，其中任意两条边都不共享公共顶点。\n2.  构建一个**极大匹配**。如果一个匹配无法通过从图中添加任何其他边来扩展，则称该匹配是极大的。对于本问题，你将使用一个特定的贪心过程来构建极大匹配：遍历一个预定义的边列表，对于每一条边，当且仅当它不与 $M$ 中已有的任何边共享端点时，才将其添加到 $M$ 中。\n3.  得到的顶点覆盖（我们称之为 $C_{approx}$）由极大匹配 $M$ 中所有边的所有端点构成。\n\n考虑一个无向图 $G = (V, E)$，其顶点集为 $V = \\{A, B, C, D, E, F, G, H\\}$，边集为 $E = \\{(A,B), (A,C), (B,C), (C,D), (D,E), (D,F), (E,F), (F,G), (G,H)\\}$。\n\n为了构建极大匹配，请按照以下特定顺序处理集合 $E$ 中的边：\n$(G,H), (F,G), (E,F), (D,F), (D,E), (C,D), (B,C), (A,C), (A,B)$。\n\n你的任务是计算这次特定执行的近似比。近似比定义为生成的顶点覆盖的大小与最优顶点覆盖的大小的比值，即 $\\frac{|C_{approx}|}{\\tau(G)}$。\n\n计算这个近似比。最终答案以小数形式表示，并保留两位有效数字。", "solution": "我们遵循指定的贪心方法构建极大匹配。初始化 $M=\\emptyset$ 并按给定顺序处理边，如果某条边不与 $M$ 中已有的任何边共享端点，则将其加入 $M$。\n\n- 处理 $(G,H)$：添加，因此 $M=\\{(G,H)\\}$，已用端点为 $\\{G,H\\}$。\n- $(F,G)$ 共享端点 $G$，跳过。\n- $(E,F)$ 不与 $\\{G,H\\}$ 共享端点，添加：$M=\\{(G,H),(E,F)\\}$，已用端点为 $\\{E,F,G,H\\}$。\n- $(D,F)$ 共享端点 $F$，跳过。\n- $(D,E)$ 共享端点 $E$，跳过。\n- $(C,D)$ 不与 $\\{E,F,G,H\\}$ 共享端点，添加：$M=\\{(G,H),(E,F),(C,D)\\}$，已用端点为 $\\{C,D,E,F,G,H\\}$。\n- $(B,C)$ 共享端点 $C$，跳过。\n- $(A,C)$ 共享端点 $C$，跳过。\n- $(A,B)$ 不与当前 $M$ 中的边共享端点，添加：$M=\\{(G,H),(E,F),(C,D),(A,B)\\}$，已用端点为 $\\{A,B,C,D,E,F,G,H\\}$。\n\n因此，极大匹配的大小为 $|M|=4$，2-近似算法输出的顶点覆盖 $C_{approx}$ 由 $M$ 中所有边的端点组成，因此 $C_{approx}=V$ 并且\n$$\n|C_{approx}|=8.\n$$\n\n接下来，计算最优顶点覆盖的大小 $\\tau(G)$。一个普遍的下界由最大匹配 $\\nu(G)$ 的大小给出：\n$$\n\\tau(G)\\geq \\nu(G).\n$$\n因为我们找到了一个大小为4的匹配，所以 $\\nu(G)\\geq 4$，因此 $\\tau(G)\\geq 4$。\n\n我们证明 $\\tau(G)\\geq 5$。在 $\\{A,B,C\\}$ 上的子图是一个三角形，因此任何顶点覆盖都必须包含至少2个来自 $\\{A,B,C\\}$ 的顶点。类似地，在 $\\{D,E,F\\}$ 上的子图也是一个三角形，所以必须包含至少2个来自 $\\{D,E,F\\}$ 的顶点。如果 $\\tau(G)=4$，那么该覆盖将恰好由 $\\{A,B,C\\}$ 中的2个顶点和 $\\{D,E,F\\}$ 中的2个顶点组成，而不包含 $\\{G,H\\}$ 中的任何顶点。这将导致边 $(G,H)$ 未被覆盖，这是一个矛盾。因此\n$$\n\\tau(G)\\geq 5.\n$$\n\n我们现在给出一个大小为5的顶点覆盖来证明其最优性。取\n$$\nS=\\{A,C,D,E,G\\}.\n$$\n这个集合覆盖了：\n- 通过 $A$ 和 $C$ 覆盖 $\\{A,B,C\\}$ 上的三角形；\n- 通过 $C$ 或 $D$ 覆盖边 $(C,D)$；\n- 通过 $D$ 和 $E$ 覆盖 $\\{D,E,F\\}$ 上的三角形；\n- 通过 $G$ 覆盖路径边 $(F,G)$ 和 $(G,H)$。\n\n因此 $S$ 是一个大小为5的顶点覆盖，所以\n$$\n\\tau(G)=5.\n$$\n\n因此，近似比为\n$$\n\\frac{|C_{approx}|}{\\tau(G)}=\\frac{8}{5}=1.6,\n$$\n其保留两位有效数字的小数形式为 $1.6$。", "answer": "$$\\boxed{1.6}$$", "id": "1481691"}, {"introduction": "理解一个近似算法不仅要知道它的近似比，还要了解这个界限是否“紧致”——即是否存在能让算法达到最差性能的实例。这个练习旨在通过一个精心设计的图例来揭示最大匹配算法的性能极限。你将为一个由多个星形图组成的特殊网络构建顶点覆盖，并分析其结果，从而证明该算法的 2-近似比在某些情况下是无法被改进的。[@problem_id:1412471]", "problem": "一位系统架构师正在为分布式计算网络设计一种监控策略。该网络被建模为一个图 $G=(V, E)$，其中顶点集合 $V$ 代表服务器，边集合 $E$ 代表直接的通信链路。一个“监控集”是服务器的一个子集 $C \\subseteq V$，使得 $E$ 中的每条通信链路都至少连接到 $C$ 中的一个服务器。这在形式上被称为顶点覆盖（Vertex Cover）。\n\n找到最小可能规模的监控集是一个NP-难问题。因此，该架构师采用了一种近似算法。该算法的工作方式如下：\n1. 从一个空的监控集 $C = \\emptyset$ 开始。\n2. 当网络中仍有未被覆盖的链路时，任取一条未被覆盖的链路 $(u, v)$。\n3. 将服务器 $u$ 和 $v$ 都添加到监控集 $C$ 中。\n4. 所有连接到 $u$ 或 $v$ 的链路现在都被视为已覆盖。\n5. 重复此过程，直到所有链路都被覆盖。\n\n这个过程等价于在图中找到一个极大匹配 $M$，然后由 $M$ 中所有边的端点构成顶点覆盖 $C$。\n\n为了对该算法进行压力测试，该架构师构建了一个特殊的测试用例图。这个图 $G$ 由 $k=50$ 个独立不相交的连通分量组成。每个连通分量都是一个 $K_{1,n}$ 类型的“星形图”，其中 $n=10$。一个 $K_{1,n}$ 图由一个中心服务器和 $n$ 个外围服务器组成，中心服务器通过链路与每个外围服务器相连。因此，整个图 $G$ 由50个独立的星形服务器集群组成。\n\n对于本次测试，通过从50个星形图连通分量中各选取一条链路来生成一个特定的极大匹配 $M$。\n\n对于这个特定的图和选定的极大匹配，由所述算法生成的监控集中的服务器总数是多少？", "solution": "该算法从一个极大匹配的端点构建其监控集。如果 $M$ 是选定的极大匹配，那么监控集为\n$$\nC=\\bigcup_{(u,v)\\in M}\\{u,v\\},\n$$\n因此其基数满足\n$$\n|C|=\\sum_{(u,v)\\in M}2=2|M|.\n$$\n图 $G$ 是 $k=50$ 个星形图 $K_{1,n}$（其中 $n=10$）的不交并。在星形图 $K_{1,n}$ 中，每条边都与唯一的中心顶点邻接，因此一个匹配最多只能包含一条边；因此，在每个星形图中选取一条边所产生的匹配在每个连通分量中恰好有一条边，并且是极大的。因此，根据指定的构造方法——从50个连通分量中各选取一条边——我们得到\n$$\n|M|=k=50.\n$$\n应用监控集大小和匹配大小之间的关系可得\n$$\n|C|=2|M|=2k=2\\cdot 50=100.\n$$\n因此，该算法生成的监控集包含100个服务器。", "answer": "$$\\boxed{100}$$", "id": "1412471"}, {"introduction": "在算法理论中，“归约”是一种强大的思想，它能帮助我们在不同问题之间建立联系。顶点覆盖问题可以被看作是更普适的集合覆盖问题的一个特例。本练习将引导你探索这种关系，通过将顶点覆盖实例转化为集合覆盖实例，并应用后者的近似算法来求解，你将分析整个两步流程的最终近似性能，从而理解近似保证在问题归约过程中如何传递。[@problem_id:1412458]", "problem": "在计算复杂性理论中，问题之间通常通过归约来建立联系。考虑以下一个两步过程，用于在无向图 $G=(V, E)$ 上寻找 VERTEX-COVER 问题的近似解，其中 $n=|V|$ 且 $m=|E|$。\n\n首先，将 VERTEX-COVER 实例转换为一个 SET-COVER 实例。SET-COVER 问题的全集是通过取所有边的集合来构建的，即 $U = E$。对于每个顶点 $v \\in V$，创建一个集合 $S_v$，定义为 $E$ 中所有与 $v$ 相关联的边的集合。所有这些集合的集合，$S = \\{S_v \\mid v \\in V\\}$，构成了 SET-COVER 实例的集合族。\n\n其次，将标准的对数因子贪心算法应用于这个生成的 SET-COVER 实例 $(U, S)$。该贪心算法的工作方式是，迭代地从 $S$ 中选择能覆盖当前 $U$ 中未覆盖元素数量最多的集合，直到 $U$ 中所有元素都被覆盖为止。此算法的输出是集合的一个子集族 $C_{greedy} \\subseteq S$。最终的近似顶点覆盖即为与 $C_{greedy}$ 中集合相对应的顶点集。\n\n假设贪心 SET-COVER 算法的性能有界，即它找到的解的大小最多是最优集合覆盖大小的 $(\\ln|U| + 1)$ 倍，请确定这整个两步过程作为解决 VERTEX-COVER 问题的方法的最坏情况近似因子。用包含 $n$ 和/或 $m$ 的符号表达式表示你的答案。", "solution": "将 VERTEX-COVER 实例定义为一个无向图 $G=(V,E)$，其中 $n=|V|$ 且 $m=|E|$。按如下方式构造相应的 SET-COVER 实例：全集为 $U=E$，对于每个 $v\\in V$，定义一个集合 $S_{v}\\subseteq U$，由所有与 $v$ 相关联的边组成。集合族为 $S=\\{S_{v}\\mid v\\in V\\}$。\n\n我们首先证明 $G$ 的顶点覆盖与 $(U,S)$ 的集合覆盖之间存在一一对应关系，并且大小保持不变。\n\n1) 如果 $X\\subseteq V$ 是 $G$ 中的一个顶点覆盖，那么对于每一条边 $e=\\{u,w\\}\\in E$，至少 $u$ 或 $w$ 中的一个在 $X$ 中。因此 $e\\in S_{u}$ 或 $e\\in S_{w}$，其中 $u\\in X$ 或 $w\\in X$。所以，子集族 $\\{S_{v}\\mid v\\in X\\}$ 覆盖了 $U$ 的所有元素，因此它是一个集合覆盖。此外， $|\\{S_{v}\\mid v\\in X\\}|=|X|$。\n\n2) 反之，如果 $C\\subseteq S$ 是 $U$ 的一个集合覆盖，令 $X=\\{v\\in V\\mid S_{v}\\in C\\}$。由于 $C$ 覆盖了 $U=E$，对于任意边 $e=\\{u,w\\}$，它必须被 $C$ 中的某个集合 $S_v$ 覆盖。根据 $S_v$ 的定义，$v$ 必须是 $u$ 或 $w$。因此 $u\\in X$ 或 $w\\in X$。所以 $X$ 是一个顶点覆盖。此外， $|X|=|C|$。\n\n因此，最优解的大小是相等的：\n$$\n\\mathrm{OPT}_{\\mathrm{SC}}=\\mathrm{OPT}_{\\mathrm{VC}}.\n$$\n\n将贪心 SET-COVER 算法应用于 $(U,S)$，根据假设，该算法返回一个集合覆盖 $C_{\\mathrm{greedy}}$，满足\n$$\n|C_{\\mathrm{greedy}}|\\leq \\left(\\ln|U|+1\\right)\\,\\mathrm{OPT}_{\\mathrm{SC}}.\n$$\n由于 $|U|=m$ 且 $\\mathrm{OPT}_{\\mathrm{SC}}=\\mathrm{OPT}_{\\mathrm{VC}}$，我们得到\n$$\n|C_{\\mathrm{greedy}}|\\leq \\left(\\ln m+1\\right)\\,\\mathrm{OPT}_{\\mathrm{VC}}.\n$$\n该两步过程返回的最终顶点覆盖是与 $C_{\\mathrm{greedy}}$ 对应的顶点集，因此其基数与 $|C_{\\mathrm{greedy}}|$ 相同。因此，整个过程对于 VERTEX-COVER 的近似因子最多为\n$$\n\\ln m+1.\n$$\n这是以 $m=|E|$ 表示的最坏情况近似保证。", "answer": "$$\\boxed{\\ln m + 1}$$", "id": "1412458"}]}