{"hands_on_practices": [{"introduction": "要想真正理解一个算法，没有什么比一步步地执行它更有效了。第一个练习将邀请你在一个给定的图上，从一个特定的顶点开始，手动追踪Prim算法的执行过程。通过这种方式，你将对最小生成树是如何一次一条边地生长有一个具体的理解 [@problem_id:1528055]。", "problem": "一个研究机构联合体正在建立一个通信网络，以连接七个偏远的南极科考站。在任意两个科考站之间铺设高速光纤电缆的成本与距离和地形难度成正比。您的任务是确定将所有科考站连接成一个单一网络的最具成本效益的方法。可用的直接连接及其相关成本（以任意单位计）如下：\n\n*   Alpha Base 到 Bravo Point: 4\n*   Alpha Base 到 Charlie Lab: 5\n*   Alpha Base 到 Foxtrot Camp: 9\n*   Bravo Point 到 Charlie Lab: 3\n*   Bravo Point 到 Delta Hub: 8\n*   Charlie Lab 到 Delta Hub: 10\n*   Charlie Lab 到 Echo Site: 6\n*   Charlie Lab 到 Foxtrot Camp: 2\n*   Delta Hub 到 Echo Site: 1\n*   Echo Site 到 Gamma Station: 7\n*   Foxtrot Camp 到 Gamma Station: 11\n\n为了规划网络建设，您将使用Prim算法来寻找一个最小生成树（MST）。如果从 Alpha Base 开始算法，其他科考站按什么顺序被添加到网络中？\n\n从以下选项中选择正确的顺序。该顺序首先包括起始站，然后是按添加顺序排列的其余站点。\n\nA. Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub, Gamma Station\n\nB. Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Gamma Station, Echo Site, Delta Hub\n\nC. Alpha Base, Charlie Lab, Foxtrot Camp, Bravo Point, Echo Site, Delta Hub, Gamma Station\n\nD. Alpha Base, Bravo Point, Charlie Lab, Echo Site, Delta Hub, Foxtrot Camp, Gamma Station\n\nE. Alpha Base, Delta Hub, Echo Site, Charlie Lab, Foxtrot Camp, Bravo Point, Gamma Station", "solution": "我们将网络建模为一个无向加权图，其顶点集为 $\\{\\text{Alpha Base}, \\text{Bravo Point}, \\text{Charlie Lab}, \\text{Delta Hub}, \\text{Echo Site}, \\text{Foxtrot Camp}, \\text{Gamma Station}\\}$，边权重由 $w(u,v)$ 给出：\n$$\n\\begin{aligned}\nw(\\text{Alpha Base},\\text{Bravo Point})=4,\\quad w(\\text{Alpha Base},\\text{Charlie Lab})=5,\\quad w(\\text{Alpha Base},\\text{Foxtrot Camp})=9,\\\\\nw(\\text{Bravo Point},\\text{Charlie Lab})=3,\\quad w(\\text{Bravo Point},\\text{Delta Hub})=8,\\\\\nw(\\text{Charlie Lab},\\text{Delta Hub})=10,\\quad w(\\text{Charlie Lab},\\text{Echo Site})=6,\\quad w(\\text{Charlie Lab},\\text{Foxtrot Camp})=2,\\\\\nw(\\text{Delta Hub},\\text{Echo Site})=1,\\quad w(\\text{Echo Site},\\text{Gamma Station})=7,\\quad w(\\text{Foxtrot Camp},\\text{Gamma Station})=11.\n\\end{aligned}\n$$\nPrim算法用起始顶点初始化树，并迭代地添加从当前树连接到其外部任意顶点的最小权重边。\n\n用 $T_{0}=\\{\\text{Alpha Base}\\}$ 初始化。从 $T_{0}$ 出发的候选边是：\n$$\n(\\text{Alpha Base},\\text{Bravo Point},4),\\;(\\text{Alpha Base},\\text{Charlie Lab},5),\\;(\\text{Alpha Base},\\text{Foxtrot Camp},9).\n$$\n最小值为 $4$，因此添加 Bravo Point。目前的顺序是：Alpha Base, Bravo Point。现在 $T_{1}=\\{\\text{Alpha Base},\\text{Bravo Point}\\}$。\n\n从 $T_{1}$ 到外部的候选边是：\n$$\n(\\text{Alpha Base},\\text{Charlie Lab},5),\\;(\\text{Alpha Base},\\text{Foxtrot Camp},9),\\;(\\text{Bravo Point},\\text{Charlie Lab},3),\\;(\\text{Bravo Point},\\text{Delta Hub},8).\n$$\n最小值为 $3$，因此添加 Charlie Lab。顺序是：Alpha Base, Bravo Point, Charlie Lab。现在 $T_{2}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab}\\}$。\n\n从 $T_{2}$ 到外部的候选边是：\n$$\n(\\text{Alpha Base},\\text{Foxtrot Camp},9),\\;(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Charlie Lab},\\text{Echo Site},6),\\;(\\text{Charlie Lab},\\text{Foxtrot Camp},2).\n$$\n最小值为 $2$，因此添加 Foxtrot Camp。顺序是：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp。现在 $T_{3}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp}\\}$。\n\n从 $T_{3}$ 到外部的候选边是：\n$$\n(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Charlie Lab},\\text{Echo Site},6),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\n最小值为 $6$，因此添加 Echo Site。顺序是：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site。现在 $T_{4}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp},\\text{Echo Site}\\}$。\n\n从 $T_{4}$ 到外部的候选边是：\n$$\n(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Echo Site},\\text{Delta Hub},1),\\;(\\text{Echo Site},\\text{Gamma Station},7),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\n最小值为 $1$，因此添加 Delta Hub。顺序是：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub。现在 $T_{5}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp},\\text{Echo Site},\\text{Delta Hub}\\}$。\n\n从 $T_{5}$ 到外部的候选边是：\n$$\n(\\text{Echo Site},\\text{Gamma Station},7),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\n最小值为 $7$，因此添加 Gamma Station。最终顺序：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub, Gamma Station。\n\n这与选项 A 匹配。", "answer": "$$\\boxed{A}$$", "id": "1528055"}, {"introduction": "Prim算法在每一步都做出一个非常明确的“贪心”选择。但是，如果我们采用一个略有不同、看似直观的贪心策略，结果会怎样呢？这个练习提出了一个有缺陷的算法变体，通过分析它的结果，你将能深刻理解为什么Prim算法的特定选择规则——从*整个*已访问顶点集合中选择最小权重边——对于保证找到最小生成树至关重要 [@problem_id:1528057]。", "problem": "一名计算机科学专业的学生 Alex 正在研究图算法，并提出了一种在连通无向加权图中寻找生成树的修改程序。Alex 相信这个算法总能找到最小生成树（MST）。\n\n**Alex的算法：**\n1.  用一个任意的起始顶点 $v_0$ 初始化一棵树 $T$。\n2.  令 $v_{last}$ 为最近添加到 $T$ 中的顶点。\n3.  在所有连接 $v_{last}$ 到一个尚未在 $T$ 中的顶点 $u$ 的边中，找到权重最小的边 $(v_{last}, u)$。\n4.  将这条边和顶点 $u$ 添加到树 $T$ 中。\n5.  重复步骤2-4，直到图中的所有顶点都包含在 $T$ 中。\n\n你的任务是分析 Alex 的算法在特定图上的性能。\n\n考虑一个无向加权图 $G$，其顶点集为 $V = \\{A, B, C, D\\}$，边集 $E$ 的权重如下：\n- $w(A,B) = 1$\n- $w(A,C) = 2$\n- $w(C,D) = 3$\n- $w(B,D) = 4$\n- $w(A,D) = 5$\n\n假设 Alex 的算法和标准的Prim算法（用于寻找真正的MST）都从顶点 A 开始，计算由 Alex 的算法产生的生成树的总权重以及真正的最小生成树的总权重。\n\n以一对数字（Alex算法的权重，MST的权重）的形式，使用 LaTeX `pmatrix` 环境表示为一个行矩阵来呈现你的答案。", "solution": "我们首先分析Alex的算法。用顶点 $A$ 初始化树，因此 $T=\\{A\\}$ 且 $v_{\\text{last}}=A$。在与 $A$ 相邻且连接到尚未在 $T$ 中的顶点的边中，候选边是权重为 $1$ 的 $(A,B)$、权重为 $2$ 的 $(A,C)$ 和权重为 $5$ 的 $(A,D)$。权重最小的是 $(A,B)$，所以我们添加边 $(A,B)$ 和顶点 $B$。现在 $T=\\{A,B\\}$ 且 $v_{\\text{last}}=B$。从 $B$ 到尚未在 $T$ 中的顶点，唯一的候选边是权重为 $4$ 的 $(B,D)$（因为 $(B,A)$ 连接到一个已经包含的顶点，且没有边 $(B,C)$）。我们添加 $(B,D)$ 和 $D$，因此 $T=\\{A,B,D\\}$ 且 $v_{\\text{last}}=D$。从 $D$ 到尚未在 $T$ 中的顶点，候选边是权重为 $3$ 的 $(D,C)$、权重为 $5$ 的 $(D,A)$ 和权重为 $4$ 的 $(D,B)$，但只有 $(D,C)$ 到达一个新顶点。我们添加 $(D,C)$ 和 $C$。现在所有顶点都已包含在内。因此，Alex的树的总权重为\n$$\nw_{\\text{Alex}}=w(A,B)+w(B,D)+w(D,C)=1+4+3=8.\n$$\n\n现在应用从 $A$ 开始的Prim算法。初始化 $T=\\{A\\}$。在所有从 $T$ 到 $V\\setminus T$ 的跨越边中，候选边是权重为 $1$ 的 $(A,B)$、权重为 $2$ 的 $(A,C)$ 和权重为 $5$ 的 $(A,D)$。权重最小的是 $(A,B)$，其权重为 $1$，所以添加 $B$ 和边 $(A,B)$。现在 $T=\\{A,B\\}$。从 $T$ 到 $V\\setminus T=\\{C,D\\}$ 的跨越边是权重为 $2$ 的 $(A,C)$、权重为 $5$ 的 $(A,D)$ 和权重为 $4$ 的 $(B,D)$。权重最小的是 $(A,C)$，其权重为 $2$，所以添加 $C$ 和边 $(A,C)$。现在 $T=\\{A,B,C\\}$。到 $V\\setminus T=\\{D\\}$ 的跨越边是权重为 $3$ 的 $(C,D)$、权重为 $4$ 的 $(B,D)$ 和权重为 $5$ 的 $(A,D)$。权重最小的是 $(C,D)$，其权重为 $3$，所以添加 $D$ 和边 $(C,D)$。由Prim算法找到的MST的总权重为\n$$\nw_{\\text{MST}}=w(A,B)+w(A,C)+w(C,D)=1+2+3=6.\n$$\n\n因此，总权重对是 $\\left(8,6\\right)$，使用 $\\mathrm{pmatrix}$ 环境以行矩阵的形式报告。", "answer": "$$\\boxed{\\begin{pmatrix}8  6\\end{pmatrix}}$$", "id": "1528057"}, {"introduction": "一个常见的误解是，最小生成树（MST）也包含了所有顶点对之间的最短路径。最后一个练习旨在直接澄清这一点。通过比较MST中两点之间的路径成本与原始图中真正的最短路径成本，你将亲眼看到这两个概念是截然不同的 [@problem_id:1392177]。", "problem": "一个市政府正计划安装一个光纤网络，以连接六个关键的行政大楼，分别标记为 A、B、C、D、E 和 F。在任意两座大楼之间铺设直连光缆的成本（以万美元为单位）已经计算出来。为确保所有大楼以最低的安装成本连接起来，该市将建立一个与潜在连接的最小生成树 (MST) 相对应的网络。\n\n所有可能连接的图 $G$ 包含顶点 $V = \\{A, B, C, D, E, F\\}$，其带权无向边如下所示：\n- (A, B)，权重为 3\n- (A, E)，权重为 10\n- (A, F)，权重为 14\n- (B, C)，权重为 2\n- (B, D)，权重为 5\n- (C, D)，权重为 8\n- (C, E)，权重为 4\n- (E, F)，权重为 6\n\n一旦 MST 网络建成，我们关心的是大楼 A 和大楼 F 之间的通信路径。\n设 $W_{MST}$ 为 *仅使用已建成的 MST 网络内的路径* 时，A 和 F 之间路径的总成本。\n设 $W_{SP}$ 为在原始图 $G$ 中（考虑所有可用边），A 和 F 之间绝对最短路径的成本。\n\n计算 $W_{MST}$ 和 $W_{SP}$ 的值。请以有序对 $(W_{MST}, W_{SP})$ 的形式提供您的答案。", "solution": "问题要求计算两个量：给定图 $G$ 的最小生成树 (MST) 中顶点 A 和 F 之间路径的权重，记为 $W_{MST}$；以及原始图 $G$ 中 A 和 F 之间最短路径的权重，记为 $W_{SP}$。\n\n**第一部分：寻找最小生成树 (MST)**\n\n我们可以使用Prim算法来找到图 $G$ 的最小生成树。让我们从顶点 A 开始该算法。我们将维护一个已在 MST 中的顶点集合 $S$。初始时，$S = \\emptyset$。我们还将记录 MST 中的边。\n\n1.  **初始化**：从一个任意顶点开始。我们选择 A。设已访问的顶点集合为 $S = \\{A\\}$。MST 中的边集合为空。\n\n2.  **迭代 1**：找到连接 $S$ 中顶点与 $S$ 外顶点的最便宜的边。从 A 出发的边有 (A, B) 权重为 3，(A, E) 权重为 10，以及 (A, F) 权重为 14。权重最小的边是 (A, B)，权重为 3。\n    - 将边 (A, B) 添加到 MST 中。\n    - 将顶点 B 添加到 $S$ 中。现在 $S = \\{A, B\\}$。\n    - MST 边集： `{(A, B)}`\n\n3.  **迭代 2**：找到连接 $\\{A, B\\}$ 中顶点与 $\\{C, D, E, F\\}$ 中顶点的最便宜的边。候选边是：\n    - 从 A 出发：(A, E) 权重 10，(A, F) 权重 14。\n    - 从 B 出发：(B, C) 权重 2，(B, D) 权重 5。\n    权重最小的边是 (B, C)，权重为 2。\n    - 将边 (B, C) 添加到 MST 中。\n    - 将顶点 C 添加到 $S$ 中。现在 $S = \\{A, B, C\\}$。\n    - MST 边集： `{(A, B), (B, C)}`\n\n4.  **迭代 3**：找到从 $\\{A, B, C\\}$ 到 $\\{D, E, F\\}$ 的最便宜的边。候选边是：\n    - 从 A 出发：(A, E) 权重 10，(A, F) 权重 14。\n    - 从 B 出发：(B, D) 权重 5。\n    - 从 C 出发：(C, D) 权重 8，(C, E) 权重 4。\n    权重最小的边是 (C, E)，权重为 4。\n    - 将边 (C, E) 添加到 MST 中。\n    - 将顶点 E 添加到 $S$ 中。现在 $S = \\{A, B, C, E\\}$。\n    - MST 边集： `{(A, B), (B, C), (C, E)}`\n\n5.  **迭代 4**：找到从 $\\{A, B, C, E\\}$ 到 $\\{D, F\\}$ 的最便宜的边。候选边是：\n    - 从 A 出发：(A, F) 权重 14。\n    - 从 B 出发：(B, D) 权重 5。\n    - 从 C 出发：(C, D) 权重 8。\n    - 从 E 出发：(E, F) 权重 6。\n    权重最小的边是 (B, D)，权重为 5。\n    - 将边 (B, D) 添加到 MST 中。\n    - 将顶点 D 添加到 $S$ 中。现在 $S = \\{A, B, C, E, D\\}$。\n    - MST 边集： `{(A, B), (B, C), (C, E), (B, D)}`\n\n6.  **迭代 5**：找到从 $\\{A, B, C, E, D\\}$ 到 $\\{F\\}$ 的最便宜的边。候选边是：\n    - 从 A 出发：(A, F) 权重 14。\n    - 从 E 出发：(E, F) 权重 6。\n    权重最小的边是 (E, F)，权重为 6。\n    - 将边 (E, F) 添加到 MST 中。\n    - 将顶点 F 添加到 $S$ 中。现在 $S = \\{A, B, C, D, E, F\\}$。所有顶点都已在集合中。\n    - MST 边集： `{(A, B), (B, C), (C, E), (B, D), (E, F)}`\n\n算法终止。MST 中的边是 (A, B)、(B, C)、(C, E)、(B, D) 和 (E, F)。\n\n**第二部分：计算 $W_{MST}$**\n\n现在我们仅使用 MST 的边来找到 A 和 F 之间的路径。通过检查 MST 的边，从 A 到 F 的唯一路径是 A $\\rightarrow$ B $\\rightarrow$ C $\\rightarrow$ E $\\rightarrow$ F。\n该路径的总权重是其各边权重之和：\n$W_{MST} = \\text{weight}(A, B) + \\text{weight}(B, C) + \\text{weight}(C, E) + \\text{weight}(E, F)$\n$W_{MST} = 3 + 2 + 4 + 6 = 15$。\n\n**第三部分：计算 $W_{SP}$**\n\n接下来，我们在原始图 $G$ 中找到 A 和 F 之间的最短路径。我们可以使用 Dijkstra 算法或通过检查可能的路径。\n\n让我们列出从 A 到 F 的相关路径及其权重：\n-   **路径 1**：直连边 (A, F)。权重 = 14。\n-   **路径 2**：在 MST 中找到的路径： A $\\rightarrow$ B $\\rightarrow$ C $\\rightarrow$ E $\\rightarrow$ F。权重 = 15。\n-   **路径 3**：另一条经过顶点 E 的路径：A $\\rightarrow$ E $\\rightarrow$ F。权重 = weight(A, E) + weight(E, F) = 10 + 6 = 16。\n\n比较这些路径的权重（14、15、16），最小权重为 14。任何其他路径，例如涉及顶点 D 的路径，都会更长。例如，A $\\rightarrow$ B $\\rightarrow$ D $\\rightarrow$ C $\\rightarrow$ E $\\rightarrow$ F 的权重为 $3+5+8+4+6 = 26$。\n因此，原始图中的最短路径是直连边 (A, F)。\n最短路径的权重是 $W_{SP} = 14$。\n\n**结论**\n\n我们已经计算出两个值：\n-   MST 中路径的成本是 $W_{MST} = 15$。\n-   原始图中最短路径的成本是 $W_{SP} = 14$。\n\n最终答案是有序对 $(15, 14)$。", "answer": "$$\\boxed{\\begin{pmatrix}15  14\\end{pmatrix}}$$", "id": "1392177"}]}