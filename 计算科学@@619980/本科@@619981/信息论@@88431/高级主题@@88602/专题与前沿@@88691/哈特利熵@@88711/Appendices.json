{"hands_on_practices": [{"introduction": "这项实践是哈特利熵的一个基本应用。通过计算一个简化安全密钥系统中的熵，我们将学习如何首先识别所有可能结果的集合，然后量化选择其中一个结果所关联的不确定性。这是从信息论角度分析任何系统的第一步。[@problem_id:1629232]", "id": "1629232", "problem": "一位研究人员正在为环境传感器网络设计一个基础安全协议。该协议名为“伽马协议”（Protocol Gamma），为每次数据传输生成一个临时访问密钥。该密钥是从一个特定的允许值集合中均匀随机选出的单个整数。根据伽马协议的设计规范，该整数密钥必须从1到20（含两端）的范围内选择。此外，一项硬件约束要求所选整数必须是4的倍数。\n\n作为系统分析的一部分，您需要量化与单个密钥选择相关的信息量。请计算在伽马协议下生成单个密钥过程的哈特利熵（也称为最大熵）。哈特利熵是一组可能结果的不确定性的度量，对于本问题，应使用以2为底的对数来确定，并以比特为单位表示。请以闭式解析表达式的形式给出最终答案。", "solution": "问题要求计算一组可能的安全密钥的哈特利熵。对于一组共 $N$ 个等可能结果，其哈特利熵 $H_0$ 由以下公式给出：\n$$H_0 = \\log_{b}(N)$$\n问题指明熵应以比特为单位表示，这意味着使用以2为底的对数（$b=2$）。因此，我们将使用的公式是：\n$$H_0 = \\log_{2}(N)$$\n其中 $N$ 是可能密钥的总数。\n\n我们的第一步是确定所有可能密钥的集合，并找出其大小 $N$。问题陈述了一个密钥是满足两个条件的整数：\n1. 它必须在 [1, 20] 的范围内（含两端）。\n2. 它必须是4的倍数。\n\n我们来列出从1到20范围内所有4的倍数。如果对于某个整数 $m$ 有 $k = 4m$，那么数字 $k$ 就是4的倍数。\n我们需要找到满足 $1 \\le k \\le 20$ 和 $k=4m$ 的整数 $k$。\n\n- 当 $m=1$ 时，$k = 4 \\times 1 = 4$。这在范围内。\n- 当 $m=2$ 时，$k = 4 \\times 2 = 8$。这在范围内。\n- 当 $m=3$ 时，$k = 4 \\times 3 = 12$。这在范围内。\n- 当 $m=4$ 时，$k = 4 \\times 4 = 16$。这在范围内。\n- 当 $m=5$ 时，$k = 4 \\times 5 = 20$。这在范围内。\n- 当 $m=6$ 时，$k = 4 \\times 6 = 24$。这超出了范围 $[1, 20]$。\n\n因此，所有可能密钥的集合 $S$ 是：\n$$S = \\{4, 8, 12, 16, 20\\}$$\n\n可能结果的数量 $N$ 是集合 $S$ 中元素的个数。通过计数元素，我们得到：\n$$N = |S| = 5$$\n\n现在我们可以将 $N=5$ 代入公式来计算哈特利熵：\n$$H_0 = \\log_{2}(5)$$\n\n问题要求一个闭式解析表达式。表达式 $\\log_{2}(5)$ 是哈特利熵（以比特为单位）的完整且精确的解析表示。", "answer": "$$\\boxed{\\log_{2}(5)}$$"}, {"introduction": "这项练习通过比较两种不同的访问码生成方法，将我们的理解推向更深层次。我们将看到，规则上的一个简单改变——允许重复与要求唯一——如何显著改变可能结果的数量，并因此改变系统的熵。这突显了约束条件如何影响信息内容。[@problem_id:1629258]", "id": "1629258", "problem": "一个密码学家团队正在评估两种用于生成3字符长访问码的算法。这些访问码的字符池由8个不同的非字母数字符号组成。\n\n第一个算法，“方法R”，生成一个3字符长的有序序列，其中符号可以重复。这类似于有放回抽样。\n\n第二个算法，“方法U”，生成一个3字符长的有序序列，其中序列中的每个符号都必须是唯一的。这类似于无放回抽样。\n\n与一组可能结果相关的不确定性由其Hartley熵来衡量，定义为 $H_0 = \\log_2(N)$，其中 $N$ 是不同结果的总数。该熵的单位是比特。\n\n计算由方法R生成的所有可能码的集合与由方法U生成的所有可能码的集合之间的Hartley熵的绝对差值（以比特为单位）。请以单一、简化的闭合形式解析表达式给出你的答案。", "solution": "设 $H_R$ 为方法R生成的码集合的Hartley熵， $H_U$ 为方法U生成的码集合的Hartley熵。我们需要求出绝对差值 $|\\Delta H| = |H_R - H_U|$。\n\nHartley熵由公式 $H_0 = \\log_2(N)$ 给出，其中 $N$ 是可能结果的数量。\n\n**步骤1：计算方法R的结果数量。**\n方法R从一个包含8个符号的池中生成一个3字符长的有序码，允许重复（有放回抽样）。对于码中的3个位置，每个位置都有8种可能的选择。\n不同码的总数 $N_R$ 是每个位置选择数的乘积：\n$$N_R = 8 \\times 8 \\times 8 = 8^3 = 512$$\n\n**步骤2：计算方法R的Hartley熵。**\n使用Hartley熵的公式：\n$$H_R = \\log_2(N_R) = \\log_2(512) = \\log_2(2^9)$$\n使用对数性质 $\\log_a(b^c) = c \\log_a(b)$：\n$$H_R = 9 \\log_2(2) = 9 \\times 1 = 9 \\text{ 比特}$$\n\n**步骤3：计算方法U的结果数量。**\n方法U从一个包含8个符号的池中生成一个3字符长的有序码，不允许重复（无放回抽样）。这是一个排列问题。从一个包含 $n=8$ 个项目的集合中无放回地选择一个长度为 $k=3$ 的有序序列的方法数，由排列公式 $P(n, k) = \\frac{n!}{(n-k)!}$ 给出。\n$$N_U = P(8, 3) = \\frac{8!}{(8-3)!} = \\frac{8!}{5!} = 8 \\times 7 \\times 6$$\n$$N_U = 336$$\n\n**步骤4：计算方法U的Hartley熵。**\n使用Hartley熵的公式：\n$$H_U = \\log_2(N_U) = \\log_2(336)$$\n\n**步骤5：计算熵的绝对差值。**\n绝对差值为 $|\\Delta H| = |H_R - H_U|$。因为 $N_R = 512 > N_U = 336$，所以 $H_R > H_U$。因此，绝对差值就是 $H_R - H_U$。\n$$\\Delta H = H_R - H_U = 9 - \\log_2(336)$$\n为了将其表示为单个项，我们可以使用对数性质 $\\log_a(b) - \\log_a(c) = \\log_a\\left(\\frac{b}{c}\\right)$。我们首先将 $9$ 写成以2为底的对数：$9 = 9 \\log_2(2) = \\log_2(2^9) = \\log_2(512)$。\n$$\\Delta H = \\log_2(512) - \\log_2(336) = \\log_2\\left(\\frac{512}{336}\\right)$$\n现在，我们化简这个分数：\n$$\\frac{512}{336} = \\frac{256}{168} = \\frac{128}{84} = \\frac{64}{42} = \\frac{32}{21}$$\n因此，熵的绝对差值为：\n$$\\Delta H = \\log_2\\left(\\frac{32}{21}\\right)$$\n这就是最终的、简化的、闭合形式的解析表达式。", "answer": "$$\\boxed{\\log_{2}\\left(\\frac{32}{21}\\right)}$$"}, {"introduction": "在我们的最后一个练习中，我们将通过分析人工智能在棋盘上的决策过程来探索信息增益的概念。通过计算当人工智能的选择受到限制时熵的减少量，我们可以精确地衡量新规则带来了多少“信息”。这是一个强大的概念，其应用范围从机器学习到科学探究。[@problem_id:1629265]", "id": "1629265", "problem": "在开发国际象棋人工智能（AI）时，我们使用信息论来分析其在棋盘上选择格子的过程。本次分析使用了哈特利熵，它用于量化从一个包含 $N$ 个等可能结果的集合中指定某个结果所需的信息量。\n\n考虑一个标准的 $8 \\times 8$ 国际象棋棋盘。\n首先，分析AI的初始版本，该版本可以以相等的概率选择棋盘上的任意一个格子。\n接下来，分析一个经过改进的版本，其中AI的选择受到限制。在这个版本中，AI只能选择不在棋盘边界上的格子（也就是说，它不能选择第一行或最后一行，也不能选择第一列或最后一列的格子）。\n\n计算由于此改进导致的哈特利熵的减少量（单位为比特）。将答案表示为单个闭式解析表达式。", "solution": "哈特利熵量化了从一个包含 $N$ 个等可能结果的集合中指定一个结果所需的信息。当以比特为单位度量时，哈特利熵由下式给出：\n$$\nH = \\log_{2}(N).\n$$\n对于一个标准的 $8 \\times 8$ 国际象棋棋盘，格子的总数为：\n$$\nN_{1} = 8 \\times 8 = 64,\n$$\n所以初始AI的熵为\n$$\nH_{1} = \\log_{2}(64).\n$$\n在改进版本中，AI不能选择边界上的格子。内部的格子形成了一个 $(8-2) \\times (8-2)$ 的网格，所以\n$$\nN_{2} = 6 \\times 6 = 36,\n$$\n改进后的熵为\n$$\nH_{2} = \\log_{2}(36).\n$$\n哈特利熵的减少量是两者之差：\n$$\n\\Delta H = H_{1} - H_{2} = \\log_{2}(64) - \\log_{2}(36) = \\log_{2}\\!\\left(\\frac{64}{36}\\right) = \\log_{2}\\!\\left(\\frac{16}{9}\\right).\n$$\n这是一个以比特为单位的单个闭式解析表达式。", "answer": "$$\\boxed{\\log_{2}\\!\\left(\\frac{16}{9}\\right)}$$"}]}