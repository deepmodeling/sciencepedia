{"hands_on_practices": [{"introduction": "我们从最简单的情形入手：一个二元信息源。对于此类信源，任何最优前缀码（如霍夫曼码）的平均码长都是固定的。这种简化使我们能清晰地观察到编码冗余度——即平均码长 $G$ 与信源熵 $H$ 之间的差值——是如何完全由信源的概率分布决定的。这个练习旨在让你通过计算，深入理解概率如何影响编码效率，并找出在何种概率下编码的冗余度达到其最大值的一半。[@problem_id:1653958]", "problem": "考虑一个二进制信息源，其产生的符号来自集合 $\\{S_1, S_2\\}$。发出符号 $S_1$ 的概率为 $p$，发出符号 $S_2$ 的概率为 $1-p$，其中 $0 < p < 1$。\n\n该信源数据压缩的基本极限由其 Shannon 熵 $H$ 给出，定义为：\n$$H(p) = -p \\log_2(p) - (1-p) \\log_2(1-p)$$\n熵的单位是比特/符号。\n\n该信源的一个最优前缀码（例如 Huffman 码）的平均码长，记为 $G$，单位为比特/符号。该编码的低效率性由其冗余度 $\\rho$ 来表征，定义为平均码长与熵之间的差值：\n$$\\rho(p) = G(p) - H(p)$$\n\n您的任务是分析该二进制信源最优码的冗余度。确定在 $p \\leq 0.5$ 的约束下，使冗余度 $\\rho(p)$ 正好是其在定义域 $0 < p < 1$ 上的最大可能值的一半的概率 $p$ 的值。\n\n下列哪个值最接近正确的 $p$ 值？\n\nA. 0.028\n\nB. 0.081\n\nC. 0.110\n\nD. 0.250\n\nE. 0.395", "solution": "求解过程包括四个主要步骤：确定平均码长 $G(p)$，求出最大冗余度 $\\rho_{max}$，为所需条件建立方程，以及检验给定选项以找到答案。\n\n步骤1：确定平均码长 $G(p)$。\n对于一个有两个符号 $S_1$ 和 $S_2$ 的二进制信源，一个最优前缀码（如 Huffman 码）会为每个符号分配一个比特。例如，编码可以是 $\\{S_1 \\to 0, S_2 \\to 1\\}$。符号 $S_1$ 的码长为 $l_1=1$，符号 $S_2$ 的码长为 $l_2=1$。平均码长 $G(p)$ 是这些码长根据其概率的加权平均值：\n$$G(p) = p \\cdot l_1 + (1-p) \\cdot l_2 = p \\cdot 1 + (1-p) \\cdot 1 = p + 1 - p = 1$$\n因此，对于此二进制信源的最优码，其平均码长是一个常数，对于任何 $p \\in (0, 1)$ 都等于 1 比特/符号。\n\n步骤2：确定最大可能冗余度 $\\rho_{max}$。\n冗余度由 $\\rho(p) = G(p) - H(p)$ 给出。代入 $G(p)=1$ 的值，我们得到：\n$$\\rho(p) = 1 - H(p) = 1 - [-p \\log_2(p) - (1-p) \\log_2(1-p)]$$\n为了最大化冗余度 $\\rho(p)$，我们必须最小化熵 $H(p)$。二进制熵函数 $H(p)$ 的定义域为 $p \\in (0, 1)$。它是一个凹函数，在 $p=0.5$ 处取得最大值 1，并在其定义域的边界处取得最小值。我们来考察当 $p$ 趋近于 0 时的极限：\n$$\\lim_{p \\to 0^+} H(p) = \\lim_{p \\to 0^+} [-p \\log_2(p) - (1-p) \\log_2(1-p)]$$\n我们使用标准极限 $\\lim_{x \\to 0^+} x \\log_b(x) = 0$。第二项变为 $\\lim_{p \\to 0^+} -(1-p) \\log_2(1-p) = -(1) \\log_2(1) = 0$。\n因此，$\\lim_{p \\to 0^+} H(p) = 0$。根据对称性，$\\lim_{p \\to 1^-} H(p) = 0$。\n熵的最小值为 0。因此，最大冗余度为：\n$$\\rho_{max} = G - H_{min} = 1 - 0 = 1 \\text{ bit per symbol}$$\n\n步骤3：建立方程。\n问题要求的是使冗余度为其最大值一半的 $p$ 值（在 $p \\le 0.5$ 的条件下）。\n$$\\rho(p) = \\frac{1}{2} \\rho_{max} = \\frac{1}{2} \\cdot 1 = 0.5$$\n代入 $\\rho(p) = 1 - H(p)$，我们得到：\n$$1 - H(p) = 0.5$$\n$$H(p) = 0.5$$\n这导出一个超越方程：\n$$-p \\log_2(p) - (1-p) \\log_2(1-p) = 0.5$$\n\n步骤4：检验给定选项。\n我们必须找出哪个给定的 $p$ 值所产生的熵 $H(p)$ 最接近 0.5。\n\nA. 对于 $p = 0.028$：\n$H(0.028) = -0.028 \\log_2(0.028) - 0.972 \\log_2(0.972) \\approx -0.028(-5.159) - 0.972(-0.041) \\approx 0.1444 + 0.0398 \\approx 0.184$\n\nB. 对于 $p = 0.081$：\n$H(0.081) = -0.081 \\log_2(0.081) - 0.919 \\log_2(0.919) \\approx -0.081(-3.626) - 0.919(-0.122) \\approx 0.2937 + 0.1121 \\approx 0.406$\n\nC. 对于 $p = 0.110$：\n$H(0.110) = -0.110 \\log_2(0.110) - 0.890 \\log_2(0.890) \\approx -0.110(-3.185) - 0.890(-0.167) \\approx 0.3504 + 0.1486 \\approx 0.499$\n\nD. 对于 $p = 0.250$：\n$H(0.250) = -0.250 \\log_2(0.250) - 0.750 \\log_2(0.750) = -0.25(-2) - 0.75(\\log_2(3)-2) \\approx 0.5 - 0.75(1.585 - 2) \\approx 0.5 - 0.75(-0.415) \\approx 0.5 + 0.3113 \\approx 0.811$\n\nE. 对于 $p = 0.395$：\n$H(0.395) = -0.395 \\log_2(0.395) - 0.605 \\log_2(0.605) \\approx -0.395(-1.340) - 0.605(-0.724) \\approx 0.5293 + 0.4380 \\approx 0.967$\n\n将计算出的熵值与目标值 0.5 进行比较：\n- 对于 $p=0.028$，$H \\approx 0.184$\n- 对于 $p=0.081$，$H \\approx 0.406$\n- 对于 $p=0.110$，$H \\approx 0.499$\n- 对于 $p=0.250$，$H \\approx 0.811$\n- 对于 $p=0.395$，$H \\approx 0.967$\n\n$H(0.110)$ 的值最接近 0.5。因此，$p=0.110$ 是最佳选择。", "answer": "$$\\boxed{C}$$", "id": "1653958"}, {"introduction": "在理解了二元信源中冗余度的基本概念后，我们来挑战一个更复杂的场景。这个练习涉及一个包含四个符号的信源，其概率分布并非随意给定，而是遵循一个特定的等差数列规律。你需要首先运用代数技巧确定每个符号的确切概率，然后执行霍夫曼编码算法来计算平均码长 $L$。通过将这个实际码长与信源熵 $H$ 进行比较，你将对一个非平凡（non-trivial）信源的编码冗余度 $R = L - H$ 进行一次完整的分析。[@problem_id:1653976]", "problem": "一个离散无记忆信源有一个四符号字母表 $S = \\{s_1, s_2, s_3, s_4\\}$，其对应的出现概率为 $p_1, p_2, p_3, p_4$。这些概率的排序为 $p_1 > p_2 > p_3 > p_4 > 0$，且它们构成一个等差数列。设序列 $(p_4, p_3, p_2, p_1)$ 的公差为 $\\delta > 0$，使得 $p_3 = p_4+\\delta$，$p_2=p_3+\\delta$ 且 $p_1=p_2+\\delta$。最小概率与该公差之间的关系由 $\\delta = p_4/2$ 给出。\n\n对于一个最优二进制前缀码（霍夫曼码），其编码冗余定义为差值 $R = L - H$，其中 $L$ 是平均码长，$H$ 是信源的香农熵。$L$ 和 $H$ 的单位均为比特/符号。\n\n计算编码冗余 $R$ 的精确值。你的最终答案应为一个仅包含有理数和以2为底的素数对数（$\\ln(x)$ 不可接受，请使用 $\\log_2(x)$）的解析表达式。", "solution": "设 $p_{4}=x$，公差为 $\\delta=x/2$。然后，根据等差数列，\n$$p_{3}=x+\\frac{x}{2}=\\frac{3x}{2},\\quad p_{2}=p_{3}+\\frac{x}{2}=2x,\\quad p_{1}=p_{2}+\\frac{x}{2}=\\frac{5x}{2}.$$\n归一化条件 $\\sum_{i=1}^{4}p_{i}=1$ 可得\n$$x+\\frac{3x}{2}+2x+\\frac{5x}{2}=7x=1\\quad\\Rightarrow\\quad x=\\frac{1}{7}.$$\n因此\n$$p_{1}=\\frac{5}{14},\\quad p_{2}=\\frac{2}{7},\\quad p_{3}=\\frac{3}{14},\\quad p_{4}=\\frac{1}{7}.$$\n\n对于最优二进制霍夫曼码，合并两个最小的概率 $p_{4}$ 和 $p_{3}$，得到一个权重为 $5/14$ 的节点，然后通过每一步合并两个最小节点的方式，合并剩下的三个权重分别为 $5/14$、$5/14$ 和 $4/14$ 的节点。无论如何处理等权重情况，对应于 $(p_{1},p_{2},p_{3},p_{4})$ 的码长都可取为 $(1,2,3,3)$，从而得到相同的平均码长\n$$L=\\frac{5}{14}\\cdot 1+\\frac{2}{7}\\cdot 2+\\frac{3}{14}\\cdot 3+\\frac{1}{7}\\cdot 3=2.$$\n\n以比特为单位的熵为\n$$H=-\\sum_{i=1}^{4}p_{i}\\log_{2}p_{i}=-\\frac{5}{14}\\log_{2}\\frac{5}{14}-\\frac{2}{7}\\log_{2}\\frac{2}{7}-\\frac{3}{14}\\log_{2}\\frac{3}{14}-\\frac{1}{7}\\log_{2}\\frac{1}{7}.$$\n使用 $\\log_{2}(a/b)=\\log_{2}a-\\log_{2}b$、$\\log_{2}(14)=1+\\log_{2}7$ 和 $\\log_{2}2=1$，上式变为\n\\begin{align*}\nH&= -\\frac{5}{14}\\log_{2}5+\\frac{5}{14}\\log_{2}14-\\frac{2}{7}\\log_{2}2+\\frac{2}{7}\\log_{2}7-\\frac{3}{14}\\log_{2}3+\\frac{3}{14}\\log_{2}14+\\frac{1}{7}\\log_{2}7\\\\\n&=\\frac{4}{7}\\log_{2}14-\\frac{2}{7}\\log_{2}2+\\frac{3}{7}\\log_{2}7-\\frac{5}{14}\\log_{2}5-\\frac{3}{14}\\log_{2}3\\\\\n&=\\frac{4}{7}(1+\\log_{2}7)-\\frac{2}{7}+\\frac{3}{7}\\log_{2}7-\\frac{5}{14}\\log_{2}5-\\frac{3}{14}\\log_{2}3\\\\\n&=\\frac{2}{7}+\\log_{2}7-\\frac{5}{14}\\log_{2}5-\\frac{3}{14}\\log_{2}3.\n\\end{align*}\n因此，编码冗余为\n$$R=L-H=2-\\left(\\frac{2}{7}+\\log_{2}7-\\frac{5}{14}\\log_{2}5-\\frac{3}{14}\\log_{2}3\\right)\n=\\frac{12}{7}-\\log_{2}7+\\frac{5}{14}\\log_{2}5+\\frac{3}{14}\\log_{2}3.$$\n这是一个仅包含有理数和以2为底的素数对数的精确表达式。", "answer": "$$\\boxed{\\frac{12}{7}-\\log_{2}7+\\frac{5}{14}\\log_{2}5+\\frac{3}{14}\\log_{2}3}$$", "id": "1653976"}, {"introduction": "到目前为止，我们的讨论都集中在对单个信源的编码上。然而，当存在多个相互关联的信源时，我们应该如何处理呢？这个压轴练习将引导你探索联合编码（joint encoding）的强大概念。你将为一个由两个相关联的二元信源组成的联合信源设计编码方案，并通过计算分别编码与联合编码两种策略下的总平均码长，来量化联合编码带来的效率增益 $\\Delta G$。这个过程将揭示统计相关性与压缩效率之间的直接联系，即互信息 $I(X;Y)$ 如何体现为编码冗余度的减少。[@problem_id:1654016]", "problem": "在一个数据压缩系统中，我们分析两个相关的二进制信源，$X$ 和 $Y$，它们从字母表 $\\{0, 1\\}$ 中产生符号。这些信源的联合行为由联合概率质量函数 $p(x, y) = P(X=x, Y=y)$ 描述。具体的概率如下：\n$p(0, 0) = \\frac{1}{8}$\n$p(0, 1) = \\frac{3}{8}$\n$p(1, 0) = \\frac{3}{8}$\n$p(1, 1) = \\frac{1}{8}$\n\n在此背景下，信源 $S$ 的二进制码的理论最小平均长度是其香non熵，我们记作 $G(S)$。这个理想码长以比特为单位，并使用公式 $G(S) = H(S) = -\\sum_{i} p_i \\log_2(p_i)$ 计算，其中 $\\{p_i\\}$ 是信源 $S$ 中符号的概率分布。\n\n我们可以分别对信源 $X$ 和 $Y$ 进行编码，得到的总理想平均码长为 $G(X) + G(Y)$。或者，我们可以为联合信源 $(X, Y)$ 设计一个单一的码，其理想平均长度为 $G(X,Y)$。差值 $\\Delta G = (G(X) + G(Y)) - G(X,Y)$ 代表了通过使用联合编码方案所消除的冗余度。它量化了考虑信源间统计相关性所带来的好处。\n\n计算这个冗余度 $\\Delta G$ 的值。以比特为单位表示你的答案，并四舍五入到四位有效数字。", "solution": "给定一个二元对 $(X,Y)$，其联合概率质量函数为 $p(0,0)=\\frac{1}{8}$，$p(0,1)=\\frac{3}{8}$，$p(1,0)=\\frac{3}{8}$，$p(1,1)=\\frac{1}{8}$。冗余度为 $\\Delta G = G(X)+G(Y)-G(X,Y)$，其中 $G(\\cdot)=H(\\cdot)$ 以比特为单位，并且 $\\Delta G$ 等于互信息 $I(X;Y)$。\n\n首先，计算边缘概率：\n$$\nP(X=0)=p(0,0)+p(0,1)=\\frac{1}{8}+\\frac{3}{8}=\\frac{1}{2},\\quad P(X=1)=\\frac{1}{2},\n$$\n$$\nP(Y=0)=p(0,0)+p(1,0)=\\frac{1}{8}+\\frac{3}{8}=\\frac{1}{2},\\quad P(Y=1)=\\frac{1}{2}.\n$$\n因此，$X$ 和 $Y$ 都是参数为 $\\frac{1}{2}$ 的伯努利分布，所以\n$$\nH(X)=H(Y)=-\\sum_{x\\in\\{0,1\\}} P(X=x)\\log_{2} P(X=x) = -2\\cdot \\frac{1}{2}\\log_{2}\\!\\left(\\frac{1}{2}\\right)=1.\n$$\n\n接下来，计算联合熵：\n$$\nH(X,Y)=-\\sum_{x,y\\in\\{0,1\\}} p(x,y)\\log_{2} p(x,y)\n= -\\Bigg[2\\cdot \\frac{1}{8}\\log_{2}\\!\\left(\\frac{1}{8}\\right) + 2\\cdot \\frac{3}{8}\\log_{2}\\!\\left(\\frac{3}{8}\\right)\\Bigg].\n$$\n使用 $\\log_{2}\\!\\left(\\frac{1}{8}\\right)=-3$ 和 $\\log_{2}\\!\\left(\\frac{3}{8}\\right)=\\log_{2}(3)-3$ 进行简化：\n$$\nH(X,Y) = -2\\left[\\frac{1}{8}(-3) + \\frac{3}{8}\\left(\\log_{2} 3 - 3\\right)\\right]\n= -2\\left[-\\frac{3}{8} + \\frac{3}{8}\\log_{2} 3 - \\frac{9}{8}\\right]\n= -2\\left[\\frac{3}{8}\\log_{2} 3 - \\frac{12}{8}\\right].\n$$\n因此，\n$$\nH(X,Y) = 3 - \\frac{3}{4}\\log_{2} 3.\n$$\n\n所以，\n$$\n\\Delta G = H(X)+H(Y)-H(X,Y) = 2 - \\left(3 - \\frac{3}{4}\\log_{2} 3\\right) = \\frac{3}{4}\\log_{2} 3 - 1.\n$$\n数值上，使用 $\\log_{2} 3 \\approx 1.5849625007$，我们得到\n$$\n\\Delta G \\approx \\frac{3}{4}\\cdot 1.5849625007 - 1 \\approx 0.1887218755 \\text{ bits}.\n$$\n四舍五入到四位有效数字，结果是 $0.1887$ 比特。", "answer": "$$\\boxed{0.1887}$$", "id": "1654016"}]}