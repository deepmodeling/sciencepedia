{"hands_on_practices": [{"introduction": "线性分组码的一个关键优势在于其结构化的生成矩阵。在众多表示形式中，系统码形式 $G = [I_k|P]$ 尤为实用，因为它直接将原始信息位嵌入码字的前 $k$ 位。这个练习将指导你通过基本的行变换（在伽罗瓦域 $GF(2)$ 上的高斯消元法），将一个非系统生成矩阵转换为等效的系统形式，这是理解码的结构并简化编解码实现的一项基本技能。[@problem_id:1637124]", "problem": "在数字通信中，线性分组码通过添加冗余比特来对消息进行编码，从而允许接收端进行检错和纠错。一个线性分组码由其生成矩阵 $G$ 定义。一个 $(n, k)$ 码将一个 $k$ 比特的消息向量转换为一个 $n$ 比特的码字。这种码的生成矩阵 $G$ 是一个 $k \\times n$ 矩阵。\n\n任何生成矩阵都可以转换成等价的系统形式 $G_{sys} = [I_k | P]$，其中 $I_k$ 是 $k \\times k$ 的单位矩阵，而 $P$ 是一个 $k \\times (n-k)$ 的矩阵，称为校验部分。在这种形式下，码字的前 $k$ 个比特与原始消息比特相同。所有的算术运算都在二元域 GF(2) 上进行，其中的加法对应于异或运算 ($1+1=0$)。\n\n考虑一个特定的 $(4, 2)$ 线性分组码，其由以下非系统生成矩阵描述：\n$$\nG = \\begin{pmatrix} 0 & 1 & 1 & 0 \\\\ 1 & 1 & 0 & 1 \\end{pmatrix}\n$$\n确定该码的等价系统生成矩阵的校验矩阵 $P$。请以矩阵形式给出答案。", "solution": "目标是将给定的生成矩阵 $G$ 转换为其系统形式 $G_{sys} = [I_k | P]$，对于此 $(4,2)$ 码，$k=2$。这意味着我们要使用在 GF(2) 上的初等行变换，在 $G$ 的前两列中得到 $2 \\times 2$ 的单位矩阵 $I_2 = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$。\n\n给定的非系统生成矩阵是：\n$$\nG = \\begin{pmatrix} 0 & 1 & 1 & 0 \\\\ 1 & 1 & 0 & 1 \\end{pmatrix}\n$$\n我们将这两行表示为 $R_1$ 和 $R_2$。\n\n我们在前两列的目标形式是 $\\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$。\n\n步骤 1：在左上角位置（第 1 行，第 1 列的元素）获得一个“1”。\n当前 (1,1) 位置的元素是 0。(2,1) 位置的元素是 1。我们可以交换第 1 行 ($R_1$) 和第 2 行 ($R_2$)，将“1”移到所需位置。\n$$\nR_1 \\leftrightarrow R_2\n$$\n这个操作产生一个新矩阵，我们称之为 $G'$：\n$$\nG' = \\begin{pmatrix} 1 & 1 & 0 & 1 \\\\ 0 & 1 & 1 & 0 \\end{pmatrix}\n$$\n现在第一列是正确的了。接下来我们需要将第二列变换为 $\\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$。\n\n步骤 2：在 (1,2) 位置获得一个“0”。\n当前 (1,2) 位置的元素是 1。要使其变为 0，我们可以使用模 2 算术将第二行 ($R_2'$) 加到第一行 ($R_1'$) 上。设新的第一行为 $R_1''$。\n$$\nR_1'' \\leftarrow R_1' + R_2'\n$$\n新第一行的计算如下：\n$R_1'' = (1+0, 1+1, 0+1, 1+0) = (1, 0, 1, 1)$\n第二行保持不变：$R_2'' = R_2' = (0, 1, 1, 0)$。\n\n将这些行排列起来，得到系统生成矩阵 $G_{sys}$：\n$$\nG_{sys} = \\begin{pmatrix} 1 & 0 & 1 & 1 \\\\ 0 & 1 & 1 & 0 \\end{pmatrix}\n$$\n这个矩阵现在是 $[I_2 | P]$ 的形式。前两列构成了单位矩阵 $I_2$，后两列构成了校验矩阵 $P$。\n\n通过将我们的结果与标准形式进行比较，我们可以确定矩阵 $P$：\n$$\nP = \\begin{pmatrix} 1 & 1 \\\\ 1 & 0 \\end{pmatrix}\n$$\n这是该系统码的 $2 \\times (4-2) = 2 \\times 2$ 校验矩阵。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n1 & 1 \\\\\n1 & 0\n\\end{pmatrix}\n}\n$$", "id": "1637124"}, {"introduction": "掌握了生成矩阵的结构后，下一步便是将信息进行编码。这个练习将带你实践最核心的编码操作：通过矩阵乘法 $c = uG$ 将信息向量转换为码字。此处的计算在一个三元域 $GF(3)$ 上进行，这有助于强调线性码的代数原理普遍适用于任何有限域，而不仅限于二进制情况，从而加深你对基本概念的理解。[@problem_id:1637129]", "problem": "考虑一个定义在三元域 $GF(3)$ 上的线性分组码，该域由元素集合 $\\{0, 1, 2\\}$ 构成。该域内的所有算术运算，包括加法和乘法，均在模 3 下进行。该码用于将一个 2 符号的消息向量编码为一个 4 符号的码字向量，使用如下的 $2 \\times 4$ 生成矩阵 $G$：\n$$\nG = \\begin{pmatrix} 1 & 1 & 2 & 0 \\\\ 0 & 2 & 1 & 2 \\end{pmatrix}\n$$\n确定对消息向量 $u = (2, 1)$ 进行编码后得到的具体码字向量 $c$。将你的答案表示为一个 4 元素行向量。", "solution": "在域 $GF(3)$ 上，使用生成矩阵 $G$ 对消息向量 $u$ 进行编码是通过矩阵乘积 $c = uG$ 来完成的，其中所有运算均在模 3 下进行。\n\n给定 $u = \\begin{pmatrix} 2 & 1 \\end{pmatrix}$ 以及\n$$\nG = \\begin{pmatrix} 1 & 1 & 2 & 0 \\\\ 0 & 2 & 1 & 2 \\end{pmatrix},\n$$\n将 $c$ 作为 $G$ 的行的线性组合进行计算：\n$$\nc = 2 \\cdot \\begin{pmatrix} 1 & 1 & 2 & 0 \\end{pmatrix} + 1 \\cdot \\begin{pmatrix} 0 & 2 & 1 & 2 \\end{pmatrix} \\pmod{3}.\n$$\n首先进行数乘并模 3 化简：\n$$\n2 \\cdot \\begin{pmatrix} 1 & 1 & 2 & 0 \\end{pmatrix} = \\begin{pmatrix} 2 & 2 & 4 & 0 \\end{pmatrix} \\equiv \\begin{pmatrix} 2 & 2 & 1 & 0 \\end{pmatrix} \\pmod{3}.\n$$\n加上第二行并模 3 化简：\n$$\n\\begin{pmatrix} 2 & 2 & 1 & 0 \\end{pmatrix} + \\begin{pmatrix} 0 & 2 & 1 & 2 \\end{pmatrix} = \\begin{pmatrix} 2 & 4 & 2 & 2 \\end{pmatrix} \\equiv \\begin{pmatrix} 2 & 1 & 2 & 2 \\end{pmatrix} \\pmod{3}.\n$$\n因此编码后的码字为\n$$\nc = \\begin{pmatrix} 2 & 1 & 2 & 2 \\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix} 2 & 1 & 2 & 2 \\end{pmatrix}}$$", "id": "1637129"}, {"introduction": "编码的最终目的是在充满噪声的信道中可靠地恢复信息。这个练习模拟了译码过程中的关键一步：错误校正。假设接收端已经通过计算伴随式（syndrome）确定了最可能发生的错误模式（陪集首，coset leader），你的任务是利用这个信息从接收到的错误向量 $r$ 中恢复出原始码字 $c$。这个思想实验清晰地揭示了译码的核心逻辑，即在二进制码中 $c = r + e$。[@problem_id:1637140]", "problem": "在一个为深空探测器设计的数字通信系统中，纠错由一个 $(5, 2)$ 线性分组码来管理。该码将2比特长的消息转换为5比特长的码字进行传输。接收机采用标准阵列译码方案来识别和纠正错误。对于这个特定的码，工程团队已经预先计算出，由向量 $e = (0, 0, 1, 0, 0)$ 表示的错误图样是与伴随式 $s = (1, 0, 1)$ 对应的陪集首。\n\n在一次传输过程中，地面站接收到了二进制向量 $r = (1, 1, 1, 1, 1)$。初步检查确认，这个接收向量 $r$ 的伴随式确实是 $s = (1, 0, 1)$。\n\n假设错误图样 $e$ 是发生的最可能错误，请确定最可能被发送的原始码字 $c$。请将您的答案表示为一个5元二进制向量。", "solution": "在域 $\\mathbb{F}_{2}$ 上的一个二进制线性分组码中，接收向量满足 $r = c + e$，其中 $c$ 是发送的码字，$e$ 是错误图样。标准阵列译码选择与计算出的伴随式相对应的陪集首作为最可能的错误。\n\n已知：\n- $r$ 的伴随式是 $s = (1, 0, 1)$。\n- 该伴随式的陪集首是 $e = (0, 0, 1, 0, 0)$。\n- 接收向量是 $r = (1, 1, 1, 1, 1)$。\n\n假设最可能的错误是 $e$，则发送码字的估计为\n$$\nc = r + e \\quad \\text{over } \\mathbb{F}_{2}.\n$$\n将向量明确写为\n$$\nr = \\begin{pmatrix} 1 & 1 & 1 & 1 & 1 \\end{pmatrix}, \\quad e = \\begin{pmatrix} 0 & 0 & 1 & 0 & 0 \\end{pmatrix},\n$$\n我们进行逐元素模 $2$ 加法计算：\n$$\nc = \\begin{pmatrix} 1+0 & 1+0 & 1+1 & 1+0 & 1+0 \\end{pmatrix} \\bmod 2\n= \\begin{pmatrix} 1 & 1 & 0 & 1 & 1 \\end{pmatrix}.\n$$\n因此，最可能发送的码字是 $\\begin{pmatrix} 1 & 1 & 0 & 1 & 1 \\end{pmatrix}$。", "answer": "$$\\boxed{\\begin{pmatrix}1 & 1 & 0 & 1 & 1\\end{pmatrix}}$$", "id": "1637140"}]}