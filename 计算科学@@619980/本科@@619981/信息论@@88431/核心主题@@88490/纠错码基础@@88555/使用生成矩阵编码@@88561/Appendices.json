{"hands_on_practices": [{"introduction": "线性分组码中的基本操作是使用生成矩阵将消息向量转换为码字。此练习旨在巩固这项核心技能，通过在二元域 $GF(2)$ 上执行矩阵乘法 $v = uG$，您将加深对编码过程的理解，这是学习所有后续线性码概念的基础。[@problem_id:1620232]", "problem": "在一个简化的深空通信系统模型中，数据被编码以防止宇宙辐射引起的错误。为此，使用了一个由生成矩阵 $G$ 定义的线性分组码。该矩阵将一个 $k$ 比特的消息向量 $u$ 变换为一个 $n$ 比特的码字 $v$。所有算术运算均在模2下进行。\n\n考虑一个 $(7,4)$ 线性分组码，其非系统生成矩阵 $G$ 如下：\n$$\nG = \\begin{pmatrix}\n1 & 0 & 1 & 0 & 1 & 1 & 0 \\\\\n0 & 1 & 1 & 0 & 0 & 1 & 1 \\\\\n1 & 1 & 0 & 1 & 1 & 0 & 1 \\\\\n0 & 0 & 1 & 1 & 1 & 0 & 0\n\\end{pmatrix}\n$$\n一个4比特的消息向量 $u = [1 \\ 1 \\ 0 \\ 1]$ 将被发送。确定相应的7比特码字 $v$。将得到的码字表示为一个7位二进制数字串（例如，1010101）。", "solution": "在一个二进制线性分组码中，与消息向量 $u$ 对应的码字是通过矩阵乘积 $v = uG$ 计算得出的，所有运算都在 $\\mathbb{F}_{2}$ 中进行，即模2运算。设 $G$ 的行向量为 $r_{1}, r_{2}, r_{3}, r_{4}$。对于 $u = [1 \\ 1 \\ 0 \\ 1]$，我们有\n$$\nv = uG \\pmod 2 = 1\\cdot r_{1} + 1\\cdot r_{2} + 0\\cdot r_{3} + 1\\cdot r_{4} \\pmod 2 = r_{1} + r_{2} + r_{4} \\pmod 2.\n$$\n给定\n$$\nr_{1} = [1 \\ 0 \\ 1 \\ 0 \\ 1 \\ 1 \\ 0], \\quad r_{2} = [0 \\ 1 \\ 1 \\ 0 \\ 0 \\ 1 \\ 1], \\quad r_{4} = [0 \\ 0 \\ 1 \\ 1 \\ 1 \\ 0 \\ 0],\n$$\n首先计算\n$$\nr_{1} + r_{2} = [1+0,\\ 0+1,\\ 1+1,\\ 0+0,\\ 1+0,\\ 1+1,\\ 0+1] \\pmod 2 = [1,\\ 1,\\ 0,\\ 0,\\ 1,\\ 0,\\ 1].\n$$\n然后加上 $r_{4}$：\n$$\n(r_{1} + r_{2}) + r_{4} = [1+0,\\ 1+0,\\ 0+1,\\ 0+1,\\ 1+1,\\ 0+0,\\ 1+0] \\pmod 2 = [1,\\ 1,\\ 1,\\ 1,\\ 0,\\ 0,\\ 1].\n$$\n因此，这个7比特的码字是 $v = [1 \\ 1 \\ 1 \\ 1 \\ 0 \\ 0 \\ 1]$，即二进制串 1111001。", "answer": "$$\\boxed{1111001}$$", "id": "1620232"}, {"introduction": "生成矩阵不只创建一个码字，它定义了整个码本——即所有可能码字的集合。这个练习将引导您从单一的计算，转向探索编码的完整结构。通过为每个可能的消息向量生成对应的码字，您将具体地理解编码是生成矩阵行向量张成的向量子空间，从而直观地认识到由该编码定义的有限传输信号集。[@problem_id:1620230]", "problem": "在一个数字通信系统中，使用一种线性分组码进行检错。消息表示为长度为 $k=2$ 的二进制向量，然后被编码成长度为 $n=4$ 的更长的二进制向量（码字）。该编码过程由伽罗瓦域 $GF(2)$ 上的一个生成矩阵 $G$ 定义。所有的算术运算都是在模2下进行的（即 $1+1=0$）。\n\n该特定码的生成矩阵由下式给出：\n$$\nG = \\begin{pmatrix} 1 & 1 & 0 & 1 \\\\ 0 & 1 & 1 & 1 \\end{pmatrix}\n$$\n\n确定由该矩阵生成的所有可能码字的完整集合。将您的最终答案表示为一个矩阵，其中每一行对应一个不同的码字。行的顺序无关紧要。", "solution": "一个生成矩阵为 $G \\in GF(2)^{2 \\times 4}$ 的二进制线性分组码将每个消息 $u = (u_{1},u_{2}) \\in GF(2)^{2}$ 编码为码字 $c = uG$。将 $G$ 的行向量记为 $g_{1}$ 和 $g_{2}$，\n$$\nG = \\begin{pmatrix}\n1 & 1 & 0 & 1 \\\\\n0 & 1 & 1 & 1\n\\end{pmatrix}, \\quad\ng_{1} = (1,1,0,1), \\quad g_{2} = (0,1,1,1).\n$$\n在 $GF(2)$ 上，所有算术运算都是模2运算，因此 $1+1=0$。所有消息的集合是 $\\{(0,0),(0,1),(1,0),(1,1)\\}$，其对应的码字如下：\n- 对于 $u=(0,0)$：$c = 0\\cdot g_{1} + 0\\cdot g_{2} = (0,0,0,0)$。\n- 对于 $u=(0,1)$：$c = 0\\cdot g_{1} + 1\\cdot g_{2} = (0,1,1,1)$。\n- 对于 $u=(1,0)$：$c = 1\\cdot g_{1} + 0\\cdot g_{2} = (1,1,0,1)$。\n- 对于 $u=(1,1)$：$c = g_{1} + g_{2} = (1+0,\\,1+1,\\,0+1,\\,1+1) = (1,0,1,0)$（在 $GF(2)$ 中）。\n\n因此，所有码字的完整集合是 $\\{(0,0,0,0), (0,1,1,1), (1,1,0,1), (1,0,1,0)\\}$。将它们按行排列，得到所求的矩阵。", "answer": "$$\\boxed{\\begin{pmatrix}\n0 & 0 & 0 & 0 \\\\\n0 & 1 & 1 & 1 \\\\\n1 & 1 & 0 & 1 \\\\\n1 & 0 & 1 & 0\n\\end{pmatrix}}$$", "id": "1620230"}, {"introduction": "一个编码是否由其生成矩阵唯一确定？本练习提出了一个情景：两个不同的矩阵被提议用来编码，您需要判断它们是否生成相同的码，这引出了编码等价性的关键概念。通过这个实践，您将学会分析生成矩阵背后的数学结构，并理解一个编码是由其生成矩阵的行空间所定义，而非特定的矩阵本身。[@problem_id:1620249]", "problem": "在纠错码的研究中，一个二元线性码被定义为生成矩阵 $G$ 在域 $\\mathbb{F}_2 = \\{0, 1\\}$ 上的行空间。所有的算术运算（加法和乘法）都在模2下进行。如果两个生成矩阵生成相同的码字集合，则它们被认为是等价的，这当且仅当它们具有相同的行空间时才会发生。\n\n两位工程师，Alice和Bob，的任务是根据长度为2的信息设计一个长度为4的二元线性码。Alice提议使用生成矩阵 $G_A$，Bob提议使用生成矩阵 $G_B$，定义如下：\n\n$$\nG_A = \\begin{pmatrix} 1 & 0 & 1 & 1 \\\\ 1 & 1 & 0 & 1 \\end{pmatrix}\n$$\n\n$$\nG_B = \\begin{pmatrix} 0 & 1 & 1 & 0 \\\\ 1 & 1 & 0 & 1 \\end{pmatrix}\n$$\n\n比较这些码的一个标准方法是找到其生成矩阵的系统形式。一个 $k \\times n$ 生成矩阵的系统形式是一个形如 $[I_k | P]$ 的矩阵，其中 $I_k$ 是 $k \\times k$ 的单位矩阵，而 $P$ 是一个 $k \\times (n-k)$ 的矩阵。对于任何给定的码，这种形式是唯一的，并且可以通过应用初等行变换将生成矩阵转换为其简化行阶梯形（RREF）来找到。\n\n下列哪个陈述正确地评估了由 Alice 和 Bob 的矩阵生成的码之间的关系？\n\nA. $G_A$ 和 $G_B$ 生成相同的码。该码的生成矩阵的系统形式是 $\\begin{pmatrix} 1 & 0 & 1 & 0 \\\\ 0 & 1 & 1 & 1 \\end{pmatrix}$。\n\nB. $G_A$ 和 $G_B$ 生成相同的码。该码的生成矩阵的系统形式是 $\\begin{pmatrix} 1 & 0 & 1 & 1 \\\\ 0 & 1 & 1 & 0 \\end{pmatrix}$。\n\nC. $G_A$ 和 $G_B$ 不生成相同的码，因为它们的行不完全相同。\n\nD. $G_A$ 和 $G_B$ 不生成相同的码，因为它们的简化行阶梯形不同。\n\nE. $G_A$ 和 $G_B$ 不生成相同的码，因为它们对信息向量 $(1, 1)$ 产生不同的码字。", "solution": "我们在域 $\\mathbb{F}_{2}$ 上进行运算，因此所有的加法和乘法都是模$2$的。两个生成矩阵生成相同的二元线性码，当且仅当它们的行空间相等，这等价于它们通过在 $\\mathbb{F}_{2}$ 上的初等行变换得到的简化行阶梯形（RREF）相同。系统形式 $[I_{k}\\,|\\,P]$ 是作为RREF出现的，其主元列构成了单位块。\n\n计算 $G_{A}$ 的RREF：\n$$\nG_{A}=\\begin{pmatrix}1&0&1&1\\\\ 1&1&0&1\\end{pmatrix}.\n$$\n使用位置 $(1,1)$ 的主元 $1$，通过 $R_{2}\\leftarrow R_{2}+R_{1}$ (模$2$) 消去第$2$行第$1$列的元素：\n$$\n\\begin{pmatrix}1&0&1&1\\\\ 1&1&0&1\\end{pmatrix}\\xrightarrow{R_{2}\\leftarrow R_{2}+R_{1}}\\begin{pmatrix}1&0&1&1\\\\ 0&1&1&0\\end{pmatrix}.\n$$\n这个矩阵在第1列和第2列有主元，主元列中除了主元外都是零，并且已经处于系统形式 $[I_{2}\\,|\\,P]$，其中\n$$\nP=\\begin{pmatrix}1&1\\\\ 1&0\\end{pmatrix}.\n$$\n\n计算 $G_{B}$ 的RREF：\n$$\nG_{B}=\\begin{pmatrix}0&1&1&0\\\\ 1&1&0&1\\end{pmatrix}.\n$$\n首先交换行以将主元置于第1列：$R_{1}\\leftrightarrow R_{2}$，\n$$\n\\begin{pmatrix}1&1&0&1\\\\ 0&1&1&0\\end{pmatrix}.\n$$\n通过 $R_{1}\\leftarrow R_{1}+R_{2}$ 消去第$1$行第$2$列的元素：\n$$\n\\begin{pmatrix}1&0&1&1\\\\ 0&1&1&0\\end{pmatrix}.\n$$\n这与为 $G_{A}$ 得到的RREF完全相同：\n$$\n\\begin{pmatrix}1&0&1&1\\\\ 0&1&1&0\\end{pmatrix}=[I_{2}\\,|\\,P],\\quad P=\\begin{pmatrix}1&1\\\\ 1&0\\end{pmatrix}.\n$$\n因此 $G_{A}$ 和 $G_{B}$ 生成相同的码，并且系统形式为 $\\begin{pmatrix}1&0&1&1\\\\ 0&1&1&0\\end{pmatrix}$，这与选项B匹配。\n\n为完整起见，注意选项C是错误的，因为两个矩阵生成相同的码并不要求行完全相同；只有行空间相等才重要。选项D是错误的，因为它们的RREF是相同的，而不是不同的。选项E的推理是错误的：即使 $(1,1)G_{A}\\neq(1,1)G_{B}$，这并不意味着码不同，因为在可逆行变换下信息坐标会改变；RREF的相等已经确立了码的等价性。选项A给出了一个不同的系统形式，它与不进行列置换计算出的RREF不匹配，所以它是不正确的。", "answer": "$$\\boxed{B}$$", "id": "1620249"}]}