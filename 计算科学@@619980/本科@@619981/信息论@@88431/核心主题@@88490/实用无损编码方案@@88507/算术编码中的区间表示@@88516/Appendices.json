{"hands_on_practices": [{"introduction": "首先，让我们掌握算术编码的核心机制。这第一个练习将直接应用编码算法，您将根据给定序列中符号的概率，迭代地缩小初始区间 $[0, 1)$。完成这个练习将为您理解信息如何被映射到其唯一的区间表示打下坚实的基础。[@problem_id:1619687]", "problem": "考虑一个无记忆信源，其生成的符号来自字母表 $\\mathcal{S} = \\{A, B, C\\}$。每个符号出现的概率由 $P(A) = 0.6$，$P(B) = 0.3$ 和 $P(C) = 0.1$ 给出。您的任务是使用算术编码算法对符号序列“BCA”进行编码。初始编码区间为 $[0, 1)$。确定代表整个序列的最终区间 $[L_{\\text{final}}, H_{\\text{final}})$。将最终下界 $L_{\\text{final}}$ 和最终上界 $H_{\\text{final}}$ 表示为分数。", "solution": "该问题要求在给定具有特定概率的信源的情况下，对序列“BCA”应用算术编码后的最终区间。我们从初始区间 $[L_0, H_0) = [0, 1)$ 开始。\n\n首先，我们需要确定字母表 $\\mathcal{S} = \\{A, B, C\\}$ 中符号的累积概率分布。我们将字母表排序为 (A, B, C)。每个符号的概率为 $P(A) = 0.6$，$P(B) = 0.3$ 和 $P(C) = 0.1$。\n\n累积概率函数，我们记为 $F(s)$，它给出在规定顺序中所有位于 $s$ 之前的符号的概率之和。每个符号的范围将是 $[0, 1)$ 的一个子区间，其宽度等于其概率。\n-   符号 A：范围对应于 $[F(A), F(A)+P(A)) = [0, 0.6)$。因此，$F(A)=0$。\n-   符号 B：范围对应于 $[F(B), F(B)+P(B)) = [0.6, 0.6+0.3) = [0.6, 0.9)$。因此，$F(B)=0.6$。\n-   符号 C：范围对应于 $[F(C), F(C)+P(C)) = [0.9, 0.9+0.1) = [0.9, 1.0)$。因此，$F(C)=0.9$。\n\n让我们将这些概率和累积概率表示为分数：\n$P(A) = \\frac{6}{10}$，$P(B) = \\frac{3}{10}$，$P(C) = \\frac{1}{10}$。\n$F(A) = 0$，$F(B) = \\frac{6}{10}$，$F(C) = \\frac{9}{10}$。\n\n算术编码算法对序列中的每个符号迭代地更新区间 $[L, H)$。更新规则如下：\n$L_{k+1} = L_k + (H_k - L_k) \\times F(s_{k+1})$\n$H_{k+1} = L_k + (H_k - L_k) \\times (F(s_{k+1}) + P(s_{k+1}))$\n其中 $s_{k+1}$ 是正在被编码的第 $(k+1)$ 个符号。\n\n**步骤 1：编码第一个符号 ‘B’**\n初始区间为 $[L_0, H_0) = [0, 1)$。该区间的宽度为 $W_0 = H_0 - L_0 = 1$。\n要编码的符号是 ‘B’。我们使用 $F(B) = \\frac{6}{10}$ 和 $P(B) = \\frac{3}{10}$。\n\n$L_1 = L_0 + W_0 \\times F(B) = 0 + 1 \\times \\frac{6}{10} = \\frac{6}{10}$。\n$H_1 = L_0 + W_0 \\times (F(B) + P(B)) = 0 + 1 \\times \\left(\\frac{6}{10} + \\frac{3}{10}\\right) = \\frac{9}{10}$。\n\n编码 ‘B’ 后，新区间为 $[L_1, H_1) = \\left[\\frac{6}{10}, \\frac{9}{10}\\right)$。\n\n**步骤 2：编码第二个符号 ‘C’**\n当前区间为 $[L_1, H_1) = \\left[\\frac{6}{10}, \\frac{9}{10}\\right)$。宽度为 $W_1 = H_1 - L_1 = \\frac{9}{10} - \\frac{6}{10} = \\frac{3}{10}$。\n要编码的符号是 ‘C’。我们使用 $F(C) = \\frac{9}{10}$ 和 $P(C) = \\frac{1}{10}$。\n\n$L_2 = L_1 + W_1 \\times F(C) = \\frac{6}{10} + \\frac{3}{10} \\times \\frac{9}{10} = \\frac{6}{10} + \\frac{27}{100} = \\frac{60}{100} + \\frac{27}{100} = \\frac{87}{100}$。\n$H_2 = L_1 + W_1 \\times (F(C) + P(C)) = \\frac{6}{10} + \\frac{3}{10} \\times \\left(\\frac{9}{10} + \\frac{1}{10}\\right) = \\frac{6}{10} + \\frac{3}{10} \\times 1 = \\frac{9}{10}$。\n\n编码 ‘C’ 后，新区间为 $[L_2, H_2) = \\left[\\frac{87}{100}, \\frac{9}{10}\\right) = \\left[\\frac{87}{100}, \\frac{90}{100}\\right)$。\n\n**步骤 3：编码第三个符号 ‘A’**\n当前区间为 $[L_2, H_2) = \\left[\\frac{87}{100}, \\frac{90}{100}\\right)$。宽度为 $W_2 = H_2 - L_2 = \\frac{90}{100} - \\frac{87}{100} = \\frac{3}{100}$。\n要编码的符号是 ‘A’。我们使用 $F(A) = 0$ 和 $P(A) = \\frac{6}{10}$。\n\n$L_{\\text{final}} = L_2 + W_2 \\times F(A) = \\frac{87}{100} + \\frac{3}{100} \\times 0 = \\frac{87}{100}$。\n$H_{\\text{final}} = L_2 + W_2 \\times (F(A) + P(A)) = \\frac{87}{100} + \\frac{3}{100} \\times \\left(0 + \\frac{6}{10}\\right) = \\frac{87}{100} + \\frac{18}{1000} = \\frac{870}{1000} + \\frac{18}{1000} = \\frac{888}{1000}$。\n\n编码序列“BCA”后的最终区间为 $\\left[\\frac{87}{100}, \\frac{888}{1000}\\right)$。\n\n题目要求将边界表示为分数。我们可以化简上界：\n$L_{\\text{final}} = \\frac{87}{100}$。这是不可约分的，因为 87 = 3 * 29 且 100 = 2^2 * 5^2。\n$H_{\\text{final}} = \\frac{888}{1000} = \\frac{444}{500} = \\frac{222}{250} = \\frac{111}{125}$。\n\n因此，最终区间为 $\\left[\\frac{87}{100}, \\frac{111}{125}\\right)$。", "answer": "$$\\boxed{\\begin{pmatrix} \\frac{87}{100} & \\frac{111}{125} \\end{pmatrix}}$$", "id": "1619687"}, {"introduction": "在掌握了基本计算之后，这个练习鼓励我们对编码过程进行更深层次的概念性理解。通过比较同一组符号的两种不同排列的编码结果，您将发现一个基本原理：符号的概率及其在序列中的顺序如何影响最终编码区间在数轴上的位置。这种洞察力对于领会算术编码映射的结构化（而非随机）特性至关重要。[@problem_id:1633340]", "problem": "在算术编码中，一个符号序列被映射到区间 $[0, 1)$ 的一个子区间上。本问题探讨一个序列中符号的顺序如何影响其结果区间的位置。\n\n考虑一个字母表 $\\mathcal{A} = \\{X, Y, Z\\}$，其对应符号的出现概率分别为 $P(X)$、$P(Y)$ 和 $P(Z)$，且均为正数。给定关系 $P(X) > P(Y) > P(Z)$，并且满足 $P(X) + P(Y) + P(Z) = 1$。\n\n编码过程定义如下：\n1.  初始区间为 $[0, 1)$。\n2.  该区间根据固定的字母顺序（X、Y、Z）为每个符号划分出子区间。\n    - 符号X的子区间是 $[0, P(X))$。\n    - 符号Y的子区间是 $[P(X), P(X)+P(Y))$。\n    - 符号Z的子区间是 $[P(X)+P(Y), 1)$。\n3.  对于输入序列中的每个符号，当前区间会被更新为其对应的子区间（经过适当的缩放和平移）。具体来说，如果当前区间为 $[L, U)$，宽度为 $W = U-L$，处理符号 $s$ 会将区间更新为 $[L', U')$，其中：\n    - $L' = L + W \\cdot C(s)$\n    - $U' = L + W \\cdot (C(s) + P(s))$\n    而 $C(s)$ 是在固定的字母顺序中，所有排在 $s$ 之前的符号的累积概率（即，$C(X)=0$, $C(Y)=P(X)$, $C(Z)=P(X)+P(Y)$）。\n\n考虑两个包含三个符号的序列：'XYZ' 和 'ZYX'。通过应用上述的算术编码算法，每个序列都会被映射到一个最终区间。这两个序列中，哪一个得到的最终区间的下界更大？\n\nA. 序列 'XYZ'\nB. 序列 'ZYX'\nC. 两个下界相等。\nD. 关系取决于概率 $P(X)$、$P(Y)$ 和 $P(Z)$ 的具体数值。", "solution": "设 $p_{X}=P(X)$，$p_{Y}=P(Y)$，$p_{Z}=P(Z)$，满足 $p_{X}>p_{Y}>p_{Z}>0$ 且 $p_{X}+p_{Y}+p_{Z}=1$。根据固定的字母顺序（X、Y、Z），累积概率为 $C(X)=0$，$C(Y)=p_{X}$，$C(Z)=p_{X}+p_{Y}$。\n\n我们分别计算两个序列的最终区间下界。\n\n**对于序列 'XYZ'**：\n1.  初始区间 $[L_0, H_0) = [0, 1)$。\n2.  处理 'X'：新区间是 $[L_0+W_0 C(X), L_0+W_0(C(X)+p_X)) = [0, p_X)$。我们得到 $[L_1, H_1) = [0, p_X)$，宽度 $W_1 = p_X$。\n3.  处理 'Y'：新下界 $L_2 = L_1 + W_1 C(Y) = 0 + p_X \\cdot p_X = p_X^2$。新区间宽度 $W_2 = W_1 p_Y = p_X p_Y$。\n4.  处理 'Z'：新下界 $L_3 = L_2 + W_2 C(Z) = p_X^2 + (p_X p_Y)(p_X+p_Y) = p_X^2 + p_X^2 p_Y + p_X p_Y^2$。\n因此，$L_{\\mathrm{XYZ}} = p_X^2 + p_X^2 p_Y + p_X p_Y^2$。\n\n**对于序列 'ZYX'**：\n1.  初始区间 $[L_0, H_0) = [0, 1)$。\n2.  处理 'Z'：新区间是 $[C(Z), C(Z)+p_Z) = [p_X+p_Y, p_X+p_Y+p_Z) = [p_X+p_Y, 1)$。我们得到 $[L_1, H_1) = [p_X+p_Y, 1)$，宽度 $W_1=p_Z$。\n3.  处理 'Y'：新下界 $L_2 = L_1 + W_1 C(Y) = (p_X+p_Y) + p_Z p_X = p_X+p_Y+p_X p_Z$。新区间宽度 $W_2 = W_1 p_Y = p_Z p_Y$。\n4.  处理 'X'：新下界 $L_3 = L_2 + W_2 C(X) = L_2 + W_2 \\cdot 0 = L_2$。\n因此，$L_{\\mathrm{ZYX}} = p_X+p_Y+p_X p_Z$。\n\n**比较两个下界**：\n从直觉上，第一个符号对区间的位置影响最大。根据字母顺序(X, Y, Z)，X对应最低的数值范围，Y居中，Z最高。\n-   序列 'XYZ' 以 'X' 开头，它将初始区间 $[0, 1)$ 映射到最左侧的子区间 $[0, p_X)$。所有后续编码都在这个子区间内进行。\n-   序列 'ZYX' 以 'Z' 开头，它将初始区间 $[0, 1)$ 映射到最右侧的子区间 $[p_X+p_Y, 1)$。\n由于 $p_Y > 0$，我们有 $p_X  p_X+p_Y$。这意味着 'XYZ' 的整个最终区间都位于 'ZYX' 的最终区间的左侧。因此，$L_{\\mathrm{ZYX}}$ 必定大于 $L_{\\mathrm{XYZ}}$。\n\n**代数验证**：\n我们计算差值 $D = L_{\\mathrm{ZYX}} - L_{\\mathrm{XYZ}}$：\n$D = (p_X+p_Y+p_X p_Z) - (p_X^2 + p_X^2 p_Y + p_X p_Y^2)$\n利用 $1 = p_X+p_Y+p_Z$ 的关系，我们可以将 $D$ 重写为：\n$D = p_X(1-p_X) + p_Y(1-p_X) + p_X p_Z + p_X p_Y p_Z$\n$D = (p_X+p_Y)(1-p_X) + p_X p_Z + p_X p_Y p_Z$\n用 $1-p_X = p_Y+p_Z$ 替换：\n$D = (p_X+p_Y)(p_Y+p_Z) + p_X p_Z + p_X p_Y p_Z$\n展开第一项：\n$D = (p_X p_Y + p_X p_Z + p_Y^2 + p_Y p_Z) + p_X p_Z + p_X p_Y p_Z$\n$D = p_X p_Y + p_Y^2 + 2 p_X p_Z + p_Y p_Z + p_X p_Y p_Z$\n由于所有概率 $p_X, p_Y, p_Z$ 都为正数，所以 $D$ 是各项正数之和，必然 $D>0$。\n这意味着 $L_{\\mathrm{ZYX}} > L_{\\mathrm{XYZ}}$。\n因此，序列 'ZYX' 的最终下界更大。", "answer": "$$\\boxed{B}$$", "id": "1633340"}, {"introduction": "这最后一个练习旨在连接理论概念与实际应用，弥合了实数区间与数据传输现实之间的鸿沟。算术编码的结果是一个数学上的区间，但最终的输出必须是一个有限长度的二进制字符串。这个问题要求您找出能够唯一标识最终区间的最短二进制分数，这是生成压缩比特流并理解前缀码约束的关键一步。[@problem_id:1602898]", "problem": "一个遥远行星的简单天气模型每天会生成两种状态之一：“晴天”(C) 或“风暴”(S)。根据长期数据，“晴天”的概率为 $P(C) = 2/3$，“风暴”的概率为 $P(S) = 1/3$。为了节省带宽，一个天气状态序列通过一种编码方案被压缩成一个单一的二进制数。\n\n该方案的工作方式如下：\n1.  从实数区间 $[0, 1)$ 开始。\n2.  对于序列中的第一个观测值，将当前区间根据可能的状态（按字母顺序“Clear”、“Storm”排列）划分为多个子区间。每个子区间的大小与该状态的概率成正比。\n3.  选择与观测到的状态相对应的子区间。它将成为新的当前区间。\n4.  对序列中随后的每个观测值重复步骤2和3。\n\n最终的编码信息必须是一个用作前缀码的二进制小数。这意味着，该二进制小数所对应的二进区间（例如，小数 $0.101$ 对应于区间 $[0.101_2, 0.110_2) = [5/8, 6/8)$）必须完全包含在通过编码方案计算出的最终区间内。\n\n对于一个观测到的为期两天的序列“晴天”然后“风暴”，确定可以用作编码信息的最短二进制小数（例如，0.1、0.01、0.110）。", "solution": "问题要求找出能够唯一编码序列“晴天”-“风暴”（CS）的最短二进制小数。我们首先需要使用所述的算术编码过程，确定与此序列对应的最终区间。\n\n设字母表按字母顺序排列为：(C, S)。给定概率为 $P(C) = 2/3$ 和 $P(S) = 1/3$。\n\n**步骤1：处理第一个符号 'C'。**\n初始区间为 $[L_0, H_0) = [0, 1)$。该区间的宽度为 $W_0 = H_0 - L_0 = 1$。\n我们根据 C 和 S 的概率来划分这个区间。\n'C' 的子区间为 $[L_0, L_0 + P(C) \\times W_0)$，即 $[0, 0 + (2/3) \\times 1) = [0, 2/3)$。\n'S' 的子区间为 $[L_0 + P(C) \\times W_0, H_0)$，即 $[2/3, 1)$。\n由于第一个符号是 'C'，所以新的区间是 $[L_1, H_1) = [0, 2/3)$。\n\n**步骤2：处理第二个符号 'S'。**\n当前区间为 $[L_1, H_1) = [0, 2/3)$。该区间的宽度为 $W_1 = H_1 - L_1 = 2/3$。\n我们为第二个符号划分这个新区间。\n'C' 的子区间为 $[L_1, L_1 + P(C) \\times W_1) = [0, 0 + (2/3) \\times (2/3)) = [0, 4/9)$。\n'S' 的子区间为 $[L_1 + P(C) \\times W_1, H_1) = [0 + (2/3) \\times (2/3), 2/3) = [4/9, 2/3)$。\n由于第二个符号是 'S'，序列 'CS' 的最终区间是 $[L_{final}, H_{final}) = [4/9, 2/3)$。\n\n**步骤3：为前缀码寻找最短的二进制小数。**\n最终区间是 $[4/9, 2/3)$。用十进制表示，这大约是 $[0.444..., 0.666...)$。\n我们需要找到最短的二进制小数，记为 $T = (0.b_1b_2...b_k)_2$，使得它所代表的二进区间 $[T, T + 2^{-k})$ 完全包含在 $[4/9, 2/3)$ 内。\n\n让我们测试递增的长度 $k$。\n\n当 $k=1$ 时：\n可能的二进区间有 $[0, 1/2)$ 和 $[1/2, 1)$。\n两者都没有完全包含在 $[4/9, 2/3) \\approx [0.444, 0.667)$ 内。例如，$[1/2, 1)$ 的上界为 1，大于 $2/3$。\n\n当 $k=2$ 时：\n二进区间的宽度为 $2^{-2} = 1/4$。它们是 $[0, 1/4)$、$[1/4, 1/2)$、$[1/2, 3/4)$ 和 $[3/4, 1)$。\n让我们检查区间 $[1/2, 3/4) = [0.5, 0.75)$。\n下界 $1/2 = 0.5$ 大于 $4/9 \\approx 0.444$。所以 $1/2$ 在最终区间内。\n上界 $3/4 = 0.75$ 大于 $2/3 \\approx 0.667$。所以这个二进区间没有完全包含在最终区间内。没有其他2位二进区间是候选。\n\n当 $k=3$ 时：\n二进区间的宽度为 $2^{-3} = 1/8 = 0.125$。\n让我们检查目标范围 $[0.444..., 0.667...)$ 附近的二进区间。\n从 0.5 开始的区间是一个很好的候选者。这对应于二进制前缀 '100'，所以该小数为 $T = (0.100)_2 = 1/2 = 4/8$。\n该二进区间为 $[(0.100)_2, (0.100)_2 + 2^{-3}) = [1/2, 1/2 + 1/8) = [4/8, 5/8) = [0.5, 0.625)$。\n让我们检查这个区间是否包含在 $[4/9, 2/3)$ 中：\n- 检查下界：$4/9 \\le 1/2$ 吗？是的，因为 $8 \\le 9$。\n- 检查上界：$5/8  2/3$ 吗？是的，因为 $15  16$。\n两个条件都满足。二进区间 $[1/2, 5/8)$ 完全包含在 $[4/9, 2/3)$ 内。\n\n因为我们找到了一个长度为3的有效前缀码，并且我们证明了不存在长度为1或2的码，所以最短可能的前缀码长度必须为3。具体的前缀是 '100'。\n与这个最短前缀对应的二进制小数是 $(0.100)_2$。\n\n因此，满足前缀码条件的最短二进制小数是 $0.100$。请注意，虽然其值为 0.5，但表示上必须给出三位，以表明它是一个3位前缀码，从而与不充分的1位前缀 '1'（代表 $0.1_2$）或2位前缀 '10'（代表 $0.10_2$）区分开来。", "answer": "$$\\boxed{0.100}$$", "id": "1602898"}]}