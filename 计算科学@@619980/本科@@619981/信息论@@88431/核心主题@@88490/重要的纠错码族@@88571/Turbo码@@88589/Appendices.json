{"hands_on_practices": [{"introduction": "Turbo 解码的威力源于它处理“软信息”而非硬判决（0或1）的能力。这个练习将带你完成将原始接收信号转化为这种初始软信息的关键第一步——计算对数似然比（Log-Likelihood Ratio, LLR）。这一步将物理信道的观测值翻译成解码器可以理解和处理的“置信度”，为后续的迭代解码奠定基础。[@problem_id:1665637]", "problem": "在一个简化的深空通信系统模型中，一个探测器向地球上的接收机发送一个由四个数据比特 $u_k \\in \\{0, 1\\}$ 组成的短序列。使用的调制方案是二进制相移键控 (BPSK)，其中比特'0'被映射为发送信号电平 $+A$，比特'1'被映射为 $-A$。传输通过一个加性高斯白噪声 (AWGN) 信道，该信道会在每个发送信号电平 $x_k$ 上增加一个噪声分量 $n_k$。噪声 $n_k$ 服从均值为零、方差为 $\\sigma^2$ 的高斯分布。因此，接收到的信号为 $y_k = x_k + n_k$。\n\n接收机采用涡轮译码器，该译码器需要为每个比特提供一个初始“软”输入。这个初始软信息是一个可靠性度量，定义为在给定观测到的接收信号值 $y_k$ 的条件下，发送比特为'0'的概率与发送比特为'1'的概率之比的自然对数。\n\n假设系统参数如下：\n- 信号幅度，$A = 1.0$ 伏特。\n- 噪声方差，$\\sigma^2 = 0.5$ 伏特$^2$。\n- 先验地，发送比特'0'和'1'是等可能的。\n- 四个接收信号值组成的序列为 $y = [0.85, -1.10, 0.40, -0.25]$，单位为伏特。\n\n计算与这四个接收值中的每一个相对应的初始可靠性度量序列。将最终答案表示为一组四个数值，并四舍五入到三位有效数字。", "solution": "问题要求计算每个接收比特的初始可靠性度量，其定义为在给定接收信号值的条件下，比特为'0'与为'1'的后验概率之比的自然对数。设第 $k$ 个比特的该度量为 $L_k$。\n$$L_k = \\ln\\left(\\frac{P(u_k=0 | y_k)}{P(u_k=1 | y_k)}\\right)$$\n其中 $u_k$ 是发送的比特，$y_k$ 是对应的接收信号值。\n\n使用贝叶斯定理，后验概率 $P(u_k | y_k)$ 可以表示为：\n$$P(u_k | y_k) = \\frac{p(y_k | u_k) P(u_k)}{p(y_k)}$$\n此处，$p(y_k | u_k)$ 是在发送了比特 $u_k$ 的条件下接收到 $y_k$ 的条件概率密度函数 (PDF)。$P(u_k)$ 是比特 $u_k$ 的先验概率，$p(y_k)$ 是接收信号的概率密度函数，它作为一个归一化常数。\n\n将此代入 $L_k$ 的表达式中：\n$$L_k = \\ln\\left(\\frac{\\frac{p(y_k | u_k=0) P(u_k=0)}{p(y_k)}}{\\frac{p(y_k | u_k=1) P(u_k=1)}{p(y_k)}}\\right)$$\n分子和分母中的项 $p(y_k)$ 被消去。问题陈述发送的比特是等可能的，因此 $P(u_k=0) = P(u_k=1) = 0.5$。这些项也被消去。\n$L_k$ 的表达式简化为信道观测值的对数似然比：\n$$L_k = \\ln\\left(\\frac{p(y_k | u_k=0)}{p(y_k | u_k=1)}\\right)$$\n\n接下来，我们根据 BPSK 调制和 AWGN 信道模型来定义条件概率密度函数。\n如果发送比特 $u_k=0$，则信号电平为 $x_k = +A$。接收到的信号为 $y_k = A + n_k$。由于 $n_k$ 是均值为0、方差为 $\\sigma^2$ 的高斯噪声，所以 $y_k$ 服从均值为 $A$、方差为 $\\sigma^2$ 的高斯分布。其条件概率密度函数为：\n$$p(y_k | u_k=0) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(y_k - A)^2}{2\\sigma^2}\\right)$$\n如果发送比特 $u_k=1$，则信号电平为 $x_k = -A$。接收到的信号为 $y_k = -A + n_k$。因此，$y_k$ 服从均值为 $-A$、方差为 $\\sigma^2$ 的高斯分布。其条件概率密度函数为：\n$$p(y_k | u_k=1) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(y_k - (-A))^2}{2\\sigma^2}\\right) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(y_k + A)^2}{2\\sigma^2}\\right)$$\n\n现在，将这些概率密度函数代回 $L_k$ 的表达式中：\n$$L_k = \\ln\\left( \\frac{\\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(y_k - A)^2}{2\\sigma^2}\\right)}{\\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(y_k + A)^2}{2\\sigma^2}\\right)} \\right)$$\n常数项 $\\frac{1}{\\sqrt{2\\pi\\sigma^2}}$ 被消去。\n$$L_k = \\ln\\left( \\exp\\left(-\\frac{(y_k - A)^2}{2\\sigma^2} + \\frac{(y_k + A)^2}{2\\sigma^2}\\right) \\right)$$\n自然对数和指数函数互为逆运算，因此它们相互抵消：\n$$L_k = -\\frac{(y_k - A)^2}{2\\sigma^2} + \\frac{(y_k + A)^2}{2\\sigma^2}$$\n$$L_k = \\frac{1}{2\\sigma^2} \\left[ -(y_k^2 - 2Ay_k + A^2) + (y_k^2 + 2Ay_k + A^2) \\right]$$\n$$L_k = \\frac{1}{2\\sigma^2} \\left[ -y_k^2 + 2Ay_k - A^2 + y_k^2 + 2Ay_k + A^2 \\right]$$\n$$L_k = \\frac{1}{2\\sigma^2} [4Ay_k] = \\frac{2Ay_k}{\\sigma^2}$$\n这就是对于通过 AWGN 信道的 BPSK 信号，其初始可靠性度量的通用表达式。\n\n现在我们代入给定的数值：$A = 1.0$ 和 $\\sigma^2 = 0.5$。\n$$L_k = \\frac{2 \\times (1.0) \\times y_k}{0.5} = 4y_k$$\n我们现在可以为接收序列 $y = [0.85, -1.10, 0.40, -0.25]$ 中的每个值计算可靠性度量。\n\n对于 $y_1 = 0.85$：\n$L_1 = 4 \\times 0.85 = 3.40$\n\n对于 $y_2 = -1.10$：\n$L_2 = 4 \\times (-1.10) = -4.40$\n\n对于 $y_3 = 0.40$：\n$L_3 = 4 \\times 0.40 = 1.60$\n\n对于 $y_4 = -0.25$：\n$L_4 = 4 \\times (-0.25) = -1.00$\n\n问题要求结果保留三位有效数字。计算出的值已经满足或可以表示为三位有效数字。\n可靠性度量序列为 $[3.40, -4.40, 1.60, -1.00]$。", "answer": "$$\\boxed{\\begin{pmatrix} 3.40 & -4.40 & 1.60 & -1.00 \\end{pmatrix}}$$", "id": "1665637"}, {"introduction": "获得初始 LLR 之后，真正的解码工作在解码器内部展开。这个练习将带你深入 Turbo 解码的核心引擎——由 Bahl, Cocke, Jelinek, 和 Raviv 提出的 BCJR 算法。你将执行一个递归步骤来更新“前向状态度量”（$\\alpha_k$），亲身体验解码器如何根据接收到的信息和码的结构，在网格图上传播和更新置信度。[@problem_id:1665643]", "problem": "在一个为深空探测器设计的通信系统中，使用码率为1/2的Turbo码进行纠错。解码过程依赖于Bahl-Cocke-Jelinek-Raviv (BCJR)算法，该算法通过一个表示分量编码器的网格图迭代地计算状态度量。\n\n考虑该系统中使用的其中一个递归系统卷积（RSC）编码器。它有四个状态（$m \\in \\{0, 1, 2, 3\\}$）。状态$m$由一个二进制元组$(s_1, s_0)$表示，对应两个存储单元的内容，使得$m = 2s_1 + s_0$。状态转移动态如下：给定在时间$k-1$的状态$S_{k-1}=(s_{k-1,1}, s_{k-1,0})$和一个信息比特$u_k \\in \\{0,1\\}$，计算出一个新值$a_k = u_k \\oplus s_{k-1,1}$，其中$\\oplus$表示模2加法。在时间$k$的新状态变为$S_k = (s_{k,1}, s_{k,0}) = (a_k, s_{k-1,1})$，相应的校验比特为$p_k = a_k \\oplus s_{k-1,0}$。\n\n信息比特（$u_k$）和校验比特（$p_k$）使用双极性相移键控（BPSK）进行调制，其中比特$b \\in \\{0,1\\}$被映射为符号$x = 1 - 2b$。这些符号通过一个噪声方差为$\\sigma^2$的加性白高斯噪声（AWGN）信道进行传输。\n\n在解码过程中的特定时间步$k$，有以下可用信息：\n- 来自前一时间步$k-1$的归一化前向状态度量为：\n  $\\alpha_{k-1}(m=0) = 0.40$\n  $\\alpha_{k-1}(m=1) = 0.10$\n  $\\alpha_{k-1}(m=2) = 0.30$\n  $\\alpha_{k-1}(m=3) = 0.20$\n- 在时间$k$接收到的带噪BPSK符号为，系统比特$y_k^s = -0.50$，校验比特$y_k^p = +0.80$。\n- 信息比特$u_k$的先验概率为$\\Pr(u_k=0) = 0.60$和$\\Pr(u_k=1) = 0.40$。\n- 信道噪声方差为$\\sigma^2 = 0.50$。\n\n未归一化前向状态度量$\\tilde{\\alpha}_k(m)$，使用和积法则递归计算：$\\tilde{\\alpha}_k(m) = \\sum_{m'} \\alpha_{k-1}(m') \\tilde{\\gamma}_k(m', m)$。对于本分析，您必须使用定义的简化、未归一化分支度量$\\tilde{\\gamma}_k(m', m)$：\n$$\n\\tilde{\\gamma}_k(m', m) = \\Pr(u_k) \\exp\\left(\\frac{y_k^s x_k^s + y_k^p x_k^p}{\\sigma^2}\\right)\n$$\n其中$u_k$是引起从状态$m'$到$m$转移的信息比特，$x_k^s$和$x_k^p$分别是对应的系统比特和校验比特的BPSK符号。\n\n计算在时间步$k$时，状态$m=2$的未归一化前向状态度量$\\tilde{\\alpha}_k(m)$的值。将您的最终答案四舍五入到四位有效数字。", "solution": "我们首先确定在时间$k$时哪些转移会导致状态$m=2$。由于状态表示为$S_{k}=(s_{k,1},s_{k,0})$，且$m=2s_{1}+s_{0}$，目标状态$m=2$对应于$S_{k}=(1,0)$。根据给定的状态演化，\n$$\nS_{k}=(a_{k},s_{k-1,1}), \\quad a_{k}=u_{k}\\oplus s_{k-1,1}.\n$$\n因此，要得到$S_{k}=(1,0)$，我们需要$s_{k-1,1}=0$且$a_{k}=1$。由于$a_{k}=u_{k}\\oplus s_{k-1,1}$且$s_{k-1,1}=0$，可得$u_{k}=1$。因此，前一个状态必须满足$s_{k-1,1}=0$，即$m'\\in\\{0,1\\}$：\n- 对于$m'=0$：$S_{k-1}=(0,0)$，因此$u_{k}=1$，$a_{k}=1$，校验比特为$p_{k}=a_{k}\\oplus s_{k-1,0}=1\\oplus 0=1$。\n- 对于$m'=1$：$S_{k-1}=(0,1)$，因此$u_{k}=1$，$a_{k}=1$，校验比特为$p_{k}=1\\oplus 1=0$。\n\nBPSK映射为$x=1-2b$。因此，对于这些转移：\n- 对于$m'=0$：$u_{k}=1\\Rightarrow x_{k}^{s}=-1$，$p_{k}=1\\Rightarrow x_{k}^{p}=-1$。\n- 对于$m'=1$：$u_{k}=1\\Rightarrow x_{k}^{s}=-1$，$p_{k}=0\\Rightarrow x_{k}^{p}=+1$。\n\n未归一化分支度量为\n$$\n\\tilde{\\gamma}_{k}(m',m)=\\Pr(u_{k})\\exp\\left(\\frac{y_{k}^{s}x_{k}^{s}+y_{k}^{p}x_{k}^{p}}{\\sigma^{2}}\\right),\n$$\n其中$\\Pr(u_{k}=1)=0.40$，$y_{k}^{s}=-0.50$，$y_{k}^{p}=+0.80$，以及$\\sigma^{2}=0.50$。因此，\n- 对于$m'=0$：\n$$\ny_{k}^{s}x_{k}^{s}+y_{k}^{p}x_{k}^{p}=(-0.50)(-1)+(+0.80)(-1)=0.50-0.80=-0.30,\n$$\n$$\n\\tilde{\\gamma}_{k}(0,2)=0.40\\exp\\left(\\frac{-0.30}{0.50}\\right)=0.40\\exp(-0.6).\n$$\n- 对于$m'=1$：\n$$\ny_{k}^{s}x_{k}^{s}+y_{k}^{p}x_{k}^{p}=(-0.50)(-1)+(+0.80)(+1)=0.50+0.80=1.30,\n$$\n$$\n\\tilde{\\gamma}_{k}(1,2)=0.40\\exp\\left(\\frac{1.30}{0.50}\\right)=0.40\\exp(2.6).\n$$\n\n未归一化前向度量为\n$$\n\\tilde{\\alpha}_{k}(2)=\\sum_{m'}\\alpha_{k-1}(m')\\tilde{\\gamma}_{k}(m',2)=\\alpha_{k-1}(0)\\tilde{\\gamma}_{k}(0,2)+\\alpha_{k-1}(1)\\tilde{\\gamma}_{k}(1,2).\n$$\n代入$\\alpha_{k-1}(0)=0.40$和$\\alpha_{k-1}(1)=0.10$可得\n$$\n\\tilde{\\alpha}_{k}(2)=0.40\\cdot\\left[0.40\\exp(-0.6)\\right]+0.10\\cdot\\left[0.40\\exp(2.6)\\right]\n=0.16\\exp(-0.6)+0.04\\exp(2.6).\n$$\n进行数值计算，\n$$\n\\exp(-0.6)\\approx 0.5488116361,\\quad \\exp(2.6)\\approx 13.463738035,\n$$\n$$\n\\tilde{\\alpha}_{k}(2)\\approx 0.16\\cdot 0.5488116361+0.04\\cdot 13.463738035\\approx 0.0878098618+0.5385495214\\approx 0.6263593832.\n$$\n四舍五入到四位有效数字，结果为$0.6264$。", "answer": "$$\\boxed{0.6264}$$", "id": "1665643"}, {"introduction": "Turbo 码的卓越性能并非魔法，而是来自于其内部组件——递归系统卷积码（RSC）编码器和交织器——之间精妙的相互作用。这个高级练习将挑战你像一名编码设计师（或破解者）一样思考，去寻找一个能利用特定交织器结构弱点的输入信息，从而产生一个低重量码字。通过这个实践，你将揭示为何交织器的设计对避免性能“错误平层”（error floor）现象至关重要。[@problem_id:1665620]", "problem": "一个简化的速率为 1/3 的 Turbo 码由两个相同的递归系统卷积 (RSC) 编码器和一个分组交织器构成。输入是一个长度为 $K=16$ 比特的消息块 $u$，其索引范围从 $k=0$ 到 $k=15$。一个二进制序列的汉明权重定义为该序列中非零元素的数量。\n\n分量 RSC 编码器由生成矩阵 $G(D) = [1, \\frac{g_1(D)}{g_0(D)}]$ 定义，其中 $D$ 是延迟算子。反馈多项式为 $g_0(D) = 1+D+D^2$，前馈多项式为 $g_1(D) = 1+D$。所有多项式运算都在二进制域 GF(2) 上进行。\n\n交织器是一个 $4 \\times 4$ 的分组交织器。输入数据被逐行（从左到右，从上到下）写入一个 $4 \\times 4$ 矩阵，然后逐列（从上到下，从左到右）读出以产生交织序列 $u'$。对于一个原始索引为 $k$ 的输入比特，其中 $k = 4 \\times (\\text{行}) + (\\text{列})$，行和列的索引均从 $0$ 开始，其在交织序列中的新索引为 $\\pi(k) = 4 \\times (\\text{列}) + (\\text{行})$。\n\nTurbo 编码过程如下：\n1. 原始消息 $u$ 是码字的系统部分。\n2. 消息 $u$ 由第一个 RSC 编码器处理，生成一个 16 比特的校验序列 $p_1$。\n3. 消息 $u$ 被交织成 $u'$。\n4. 交织后的消息 $u'$ 由第二个 RSC 编码器处理，生成一个 16 比特的校验序列 $p_2$。\n最终输出的码字 $c$ 是 $(u, p_1, p_2)$ 的级联，总长度为 $3K=48$ 比特。对于本问题，假设两个编码器都从全零状态开始，并且你可以忽略网格终止的影响（即，仅考虑由 16 个消息比特生成的 16 个校验比特）。\n\n你的任务是找到一个汉明权重为 2 的输入消息 $u$，该消息通过利用此特定交织器的结构特性，能够生成一个权重特别低的输出码字。对于你所确定的消息，计算最终 48 比特码字 $c$ 的总汉明权重。", "solution": "分量 RSC 编码器由 $G(D) = \\left[1, \\frac{g_{1}(D)}{g_{0}(D)}\\right]$ 定义，其中 $g_{0}(D) = 1 + D + D^{2}$ 且 $g_{1}(D) = 1 + D$，运算在 $\\mathrm{GF}(2)$ 上进行。校验传输函数为\n$$\nG_{p}(D) = \\frac{g_{1}(D)}{g_{0}(D)} = \\frac{1 + D}{1 + D + D^{2}}.\n$$\n令 $h(n)$ 为 $G_{p}(D)$ 的冲激响应，即 $(1 + D + D^{2}) h(D) = 1 + D$。在时域系数上，对于 $n \\geq 0$ 这给出：\n$$\nh(n) + h(n-1) + h(n-2) = r(n),\n$$\n其中 $r(0) = 1, r(1) = 1$，且对于 $n \\geq 2$ 有 $r(n) = 0$，并设 $h(-1) = h(-2) = 0$。递归求解可得：\n$$\nh(0) = 1,\\quad h(1) = 0,\\quad h(2) = 1,\\quad h(3) = 1,\\quad h(4) = 0,\\quad h(5) = 1,\\ \\ldots\n$$\n因此，对于 $n \\geq 1$，$h(n)$ 是周期为 $3$ 的序列，且\n$$\nh(3q) = 1,\\quad h(3q+1) = 0,\\quad h(3q+2) = 1\\quad \\text{for all } q \\geq 0,\n$$\n并有特殊值 $h(0) = 1$。\n\n考虑一个权重为 2 的输入 $u$，其“1”在位置 $i<j$ 处，并定义 $d = j - i$。通过 $h(n)$，RSC 的校验输出相对于 $u$ 是线性时不变的。因此，如果 $p(k)$ 表示校验序列，那么当 $n = k-i$ 时，我们有\n$$\np(k) =\n\\begin{cases}\n0, & k < i,\\\\\nh(n), & i \\leq k < j\\ (0 \\leq n < d),\\\\\nh(n) + h(n - d), & k \\geq j\\ (n \\geq d),\n\\end{cases}\n$$\n其中加法在 $\\mathrm{GF}(2)$ 上进行。如果 $d \\equiv 0 \\pmod{3}$，那么对于 $n \\geq d+1$， $n$ 和 $n-d$ 都至少为 $1$，由周期性可得 $h(n) = h(n-d)$，因此\n$$\np(k) = h(n) + h(n-d) = 0 \\quad \\text{for all } n \\geq d+1.\n$$\n在 $n=d$ 处， $p$ 是 $h(d) + h(0) = 1 + 1 = 0$，因为 $d \\geq 1$ 且 $d \\equiv 0 \\pmod{3}$ 意味着 $h(d) = 1$。因此，当 $d \\equiv 0 \\pmod{3}$ 时，整个校验序列被限制在区间 $n \\in \\{0,1,\\ldots,d-1\\}$ 内，并且在该区间上等于 $h(n)$。在一个编码器的有限窗口 $k \\in \\{0,\\ldots,15\\}$ 内，校验汉明权重为\n$$\nw_{p} = \\sum_{n=0}^{\\min(d-1,\\,15-i)} h(n).\n$$\n为最小化 $w_p$，我们选择满足条件的最小正整数 $d \\equiv 0 \\pmod{3}$，即 $d = 3$。那么\n$$\n(h(0),h(1),h(2)) = (1,0,1)\\quad \\Rightarrow\\quad w_{p} = 2\n$$\n对于任何满足 $j=i+3 \\leq 15$ 的 $i$。\n\n接下来，考虑 $4 \\times 4$ 的分组交织器。索引 $k$ 通过 $k = 4r + c$ 映射到 $(r,c)$，其中 $r,c \\in \\{0,1,2,3\\}$，交织器为 $\\pi(k) = 4c + r$。对于两个位置 $(r_{1},c_{1})$ 和 $(r_{2},c_{2})$，位置差为\n$$\nd = k_{2} - k_{1} = 4(r_{2} - r_{1}) + (c_{2} - c_{1}),\\qquad d' = \\pi(k_{2}) - \\pi(k_{1}) = 4(c_{2} - c_{1}) + (r_{2} - r_{1}).\n$$\n模 $3$ 运算，由于 $4 \\equiv 1 \\pmod{3}$，\n$$\nd \\equiv (r_{2} - r_{1}) + (c_{2} - c_{1}) \\pmod{3},\\qquad d' \\equiv (c_{2} - c_{1}) + (r_{2} - r_{1}) \\pmod{3}.\n$$\n因此 $d \\equiv d' \\pmod{3}$。所以，任何使 $d \\equiv 0 \\pmod{3}$ 的选择也会得到 $d' \\equiv 0 \\pmod{3}$，从而确保两个编码器都产生低权重的校验序列。\n\n为了使两个位置间隔都尽可能小，选择 $\\Delta r = r_{2} - r_{1} = 1$ 和 $\\Delta c = c_{2} - c_{1} = -1$。那么\n$$\nd = 4\\Delta r + \\Delta c = 4\\cdot 1 + (-1) = 3,\\qquad d' = 4\\Delta c + \\Delta r = 4\\cdot (-1) + 1 = -3,\n$$\n所以 $|d'| = 3$。一个具体的选择是 $(r_{1},c_{1}) = (0,1)$ 和 $(r_{2},c_{2}) = (1,0)$，即 $k_{1} = 1$ 和 $k_{2} = 4$。那么\n$$\n\\pi(1) = 4\\cdot 1 + 0 = 4,\\qquad \\pi(4) = 4\\cdot 0 + 1 = 1,\n$$\n因此交织后的索引间隔为 $|\\pi(4)-\\pi(1)| = 3$。\n\n对于每个编码器，当间隔为 $3$ 时，如上所示，其校验汉明权重等于 $2$。系统部分的汉明权重为 2，因为 $u$ 的权重为 2。因此，对于在 $k=1$ 和 $k=4$ 位置为 1 的输入 $u$：\n$$\nw(c) = w(u) + w(p_{1}) + w(p_{2}) = 2 + 2 + 2 = 6.\n$$\n这利用了 $4 \\times 4$ 交织器所保持的 $d \\equiv 0 \\pmod{3}$ 结构，从而同时最小化了两个校验序列的权重。", "answer": "$$\\boxed{6}$$", "id": "1665620"}]}