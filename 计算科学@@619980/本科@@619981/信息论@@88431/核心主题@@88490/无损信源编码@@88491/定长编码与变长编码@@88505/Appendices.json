{"hands_on_practices": [{"introduction": "在我们深入研究如何构建高效的变长编码之前，首先必须理解为什么某些编码方案是不可行的。一个编码方案最基本的要求是能够被唯一地解码。这个练习将通过一个实际的解码挑战，让你亲手体验非前缀码（non-prefix code）所带来的歧义性，从而深刻理解为什么前缀属性是确保即时且无歧义解码的关键所在 [@problem_id:1625290]。", "problem": "一位数字档案管理员正致力于保存一份新发现的古代文本，该文本使用一种非常简单的字母表，仅由三个符号组成：Aleph ($\\alpha$)、Bet ($\\beta$) 和 Gamal ($\\gamma$)。这位档案管理员提出了一种可变长度二进制编码方案，用以表示这些符号以便进行数字存储。所提出的码本如下：\n- 符号 $\\alpha$ 被编码为二进制字符串 `0`。\n- 符号 $\\beta$ 被编码为二进制字符串 `1`。\n- 符号 $\\gamma$ 被编码为二进制字符串 `01`。\n\n在从一个受损的存储介质中恢复数据时，档案管理员成功检索到了一个不间断的二进制序列：`010110`。然而，由于该编码的特性，无法确定原始的符号序列是什么。\n\n来自集合 $\\{\\alpha, \\beta, \\gamma\\}$ 的符号序列，有多少种不同的序列可以产生这个确切的二进制序列 `010110`？\n\n从以下选项中选择正确的数量。\n\nA. 1\n\nB. 2\n\nC. 3\n\nD. 4\n\nE. 5", "solution": "码本分配为 $\\alpha \\mapsto 0$，$\\beta \\mapsto 1$，和 $\\gamma \\mapsto 01$。该编码不满足前缀码特性，因为 $0$ 是 $01$ 的前缀，所以对二进制字符串的解码可能存在歧义。我们必须计算字符串 $010110$ 有多少种方式可以被解析成来自集合 $\\{0,1,01\\}$ 的码字。\n\n设二进制字符串为 $w$，其长度 $n=6$，位置索引从 1 到 6。定义 $f(i)$ 为解析从位置 $i$ 开始的后缀的方法数。使用基本条件 $f(n+1)=f(7)=1$，表示一旦到达字符串末尾，就只有一种完成方式（即什么都不做）。\n\n在位置 $i$，递推关系为\n$$\nf(i)=\\begin{cases}\n\\mathbf{1}_{\\{w_{i}=0\\}}\\,f(i+1)+\\mathbf{1}_{\\{w_{i}=1\\}}\\,f(i+1)+\\mathbf{1}_{\\{i\\leq n-1,\\,w_{i}=0,\\,w_{i+1}=1\\}}\\,f(i+2), & 1\\leq i\\leq n,\\\\\n1, & i=n+1,\n\\end{cases}\n$$\n这分别对应于在当前比特允许的情况下，选择码字 $0$、$1$ 或 $01$。\n\n对于 $w=010110$，我们从后向前计算：\n- $f(7)=1$。\n- 在 $i=6$ 处，$w_{6}=0$：$f(6)=f(7)=1$。\n- 在 $i=5$ 处，$w_{5}=1$：$f(5)=f(6)=1$。\n- 在 $i=4$ 处，$w_{4}=1$：$f(4)=f(5)=1$。\n- 在 $i=3$ 处，$w_{3}=0$ 且 $w_{4}=1$：$f(3)=f(4)+f(5)=1+1=2$。\n- 在 $i=2$ 处，$w_{2}=1$：$f(2)=f(3)=2$。\n- 在 $i=1$ 处，$w_{1}=0$ 且 $w_{2}=1$：$f(1)=f(2)+f(3)=2+2=4$。\n\n因此，解码的总数为 $f(1)=4$。具体来说，这些序列是 $\\,\\alpha\\beta\\alpha\\beta\\beta\\alpha$、$\\,\\alpha\\beta\\gamma\\beta\\alpha$、$\\,\\gamma\\alpha\\beta\\beta\\alpha$ 和 $\\,\\gamma\\gamma\\beta\\alpha$，它们都映射到 $010110$。\n\n因此，正确选项是 D。", "answer": "$$\\boxed{D}$$", "id": "1625290"}, {"introduction": "理解了前缀码的重要性后，一个自然而然的问题是：给定一组码长，我们如何判断是否存在一个对应的前缀码？Kraft-McMillan 不等式为我们提供了强有力的数学工具来回答这个问题。这个练习将挑战你应用该定理，但场景超出了常见的二进制编码，扩展到了三元字母表，这有助于你更深入地理解编码存在性的基本条件，而不仅仅是记忆算法 [@problem_id:1625225]。", "problem": "一个工程团队正在为一艘深空探测器设计通信协议。该探测器监测五种不同类别的环境数据。为节省带宽，数据类别标识符将使用变长码进行编码。通信硬件设计用于传输来自三元字母表的信号，该字母表由三个不同符号组成（例如，$\\{0, 1, 2\\}$）。\n\n为使系统正常工作，编码必须是前缀码。如果没有任何码字是其他任何码字的前缀（初始部分），则该编码是前缀码。这一特性对于连续数据流的无歧义瞬时解码至关重要。\n\n一位工程师为这五个数据类别提出了一组码字长度：$\\{1, 1, 2, 2, 2\\}$。你的任务是确定在数学上是否可能用这组特定的长度构造一个三元前缀码。\n\n下列哪个陈述是正确的？\n\nA. 使用指定的码字长度构造一个三元前缀码是可能的。\n\nB. 使用指定的码字长度构造一个三元前缀码是不可能的。\n\nC. 如果字母表是二元的，则可以构造具有这些长度的前缀码，但对于三元字母表则不可能。\n\nD. 在不知道这五个数据类别的具体概率的情况下，不可能确定是否可以构造前缀码。", "solution": "我们旨在确定是否存在一个基于三元字母表（字母表大小 $D=3$）的前缀码，其码字长度的多重集为 $\\{1,1,2,2,2\\}$。相关的原理是针对 $D$ 元前缀码的 Kraft–McMillan 不等式：一组长度 $\\{l_{i}\\}_{i=1}^{n}$ 可以通过一个 $D$ 元字母表上的前缀码实现，当且仅当\n$$\n\\sum_{i=1}^{n} D^{-l_{i}} \\leq 1.\n$$\n在这里，$D=3$ 且 $n=5$。代入给定的长度 $l_{1}=1$, $l_{2}=1$, $l_{3}=2$, $l_{4}=2$, $l_{5}=2$，我们计算\n$$\n\\sum_{i=1}^{5} 3^{-l_{i}} = 3^{-1} + 3^{-1} + 3^{-2} + 3^{-2} + 3^{-2}.\n$$\n合并同类项：\n$$\n3^{-1} + 3^{-1} = 2 \\cdot 3^{-1} = \\frac{2}{3}, \\quad 3^{-2} + 3^{-2} + 3^{-2} = 3 \\cdot 3^{-2} = \\frac{3}{9} = \\frac{1}{3}.\n$$\n因此，\n$$\n\\sum_{i=1}^{5} 3^{-l_{i}} = \\frac{2}{3} + \\frac{1}{3} = 1.\n$$\n由于 Kraft 和等于 $1$，Kraft–McMillan 不等式以等号成立，这足以保证存在具有这些长度的三元前缀码。\n\n使用三元码树的构造性解释证实了可行性：两个长度为 $1$ 的码字占据了根节点的三个子节点中的两个；剩下的子节点在深度为 $2$ 处恰好产生三个可用节点，可以分配给三个长度为 $2$ 的码字，同时保持前缀属性。\n\n因此，可以构造一个长度为 $\\{1,1,2,2,2\\}$ 的三元前缀码。断言不可能或依赖于符号概率的陈述是不正确的，因为可行性仅取决于 Kraft–McMillan 不等式，而与概率无关。", "answer": "$$\\boxed{A}$$", "id": "1625225"}, {"introduction": "理论联系实际是掌握信息论概念的关键。在了解了前缀码的必要性（[@problem_id:1625290]）和其存在的数学条件（[@problem_id:1625225]）之后，本练习将带你进入一个真实的工程场景。你将扮演一名数据工程师，任务是为一组非均匀分布的数据设计最优的二进制编码方案，并通过量化分析，计算出相比于简单的定长编码，霍夫曼编码到底能够节省多少存储空间。这个综合性的问题将帮助你巩固从理论到应用的完整知识链条。", "problem": "某大学的计算机科学系正在执行一项任务，旨在优化一个庞大的历史数据集的期末课程成绩存储，该数据集包含 $N = 2,500,000$ 条学生记录。可能的成绩等级为 A、B、C、D 和 F。经过对数据集的统计分析，发现各个成绩等级的频率分布不均匀。观察到的每个成绩等级的概率如下：\n- 成绩 A：$p_A = 0.25$\n- 成绩 B：$p_B = 0.35$\n- 成绩 C：$p_C = 0.20$\n- 成绩 D：$p_D = 0.15$\n- 成绩 F：$p_F = 0.05$\n\n该系正在比较两种无损压缩策略：\n1.  **定长编码：** 每个成绩都用一个相同且尽可能短的二进制字符串表示。\n2.  **变长编码：** 根据成绩概率构建一个最优前缀码（Huffman 码），其中频率较高的成绩被赋予较短的二进制字符串。\n\n您的任务是量化存储空间的提升。请计算，与使用最短定长编码相比，使用最优 Huffman 码在整个包含 $N$ 条记录的数据集上总共节省了多少比特。请以整数形式提供您的答案。", "solution": "我们有一个大小为 $M=5$ 的字母表和 $N=2{,}500{,}000$ 条记录。对于最短定长编码，每个符号的长度是满足 $2^{L_{\\text{fix}}} \\geq M$ 的最小整数 $L_{\\text{fix}}$，即，\n$$\nL_{\\text{fix}}=\\lceil \\log_{2}(M) \\rceil=\\lceil \\log_{2}(5) \\rceil=3.\n$$\n因此，使用定长编码的总比特数为\n$$\nB_{\\text{fix}}=N \\cdot L_{\\text{fix}}=N \\cdot 3.\n$$\n\n对于最优 Huffman 码，我们通过反复合并两个概率最小的符号/节点来构建编码树。按升序排列的概率为 $0.05,\\,0.15,\\,0.20,\\,0.25,\\,0.35$。合并 $0.05$ 和 $0.15$ 得到 $0.20$；多重集变为 $0.20,\\,0.20,\\,0.25,\\,0.35$。合并两个 $0.20$ 得到 $0.40$；多重集变为 $0.25,\\,0.35,\\,0.40$。合并 $0.25$ 和 $0.35$ 得到 $0.60$；多重集变为 $0.40,\\,0.60$。合并 $0.40$ 和 $0.60$ 得到根节点。由此得到的码长为 $l_{A}=2$，$l_{B}=2$，$l_{C}=2$，$l_{D}=3$，$l_{F}=3$。\n\n每个符号的期望码长为\n$$\nL_{\\text{huff}}=\\sum_{i} p_{i} l_{i}=2\\left(p_{A}+p_{B}+p_{C}\\right)+3\\left(p_{D}+p_{F}\\right).\n$$\n代入给定的概率，\n$$\nL_{\\text{huff}}=2\\left(0.25+0.35+0.20\\right)+3\\left(0.15+0.05\\right)=2\\cdot 0.80+3\\cdot 0.20=1.60+0.60=2.20.\n$$\n因此，使用 Huffman 码的总比特数为\n$$\nB_{\\text{huff}}=N \\cdot L_{\\text{huff}}=N \\cdot 2.20.\n$$\n\n总共节省的比特数为\n$$\n\\Delta B=B_{\\text{fix}}-B_{\\text{huff}}=N\\left(L_{\\text{fix}}-L_{\\text{huff}}\\right)=N\\left(3-2.20\\right)=N \\cdot 0.80.\n$$\n当 $N=2{,}500{,}000$ 时，\n$$\n\\Delta B=2{,}500{,}000 \\times 0.80=2{,}000{,}000.\n$$", "answer": "$$\\boxed{2000000}$$", "id": "1625230"}]}