{"hands_on_practices": [{"introduction": "这个练习揭示了编码中的一个关键问题：模糊性。一个码可以是非奇异的——即每个信源符号都有唯一的码字——但如果一个由码字拼接而成的字符串可以有多种解释方式，那么这个码仍然存在问题。本练习 [@problem_id:1610380] 要求你为给定码找到最短的模糊序列，通过一个具体的例子，让你亲身体会为什么唯一可译性是比简单的非奇异性更强、更重要的属性。", "problem": "在为一个环境传感器网络设计一个简单的通信协议时，必须将一组四个不同的事件 {Alert, Normal, Low_Battery, Reset} 编码成二进制字符串以进行传输。一位初级工程师提出了以下可变长度编码 $C$：\n- `Alert` $\\rightarrow$ `1`\n- `Normal` $\\rightarrow$ `10`\n- `Low_Battery` $\\rightarrow$ `00`\n- `Reset` $\\rightarrow$ `101`\n\n虽然此编码是非奇异的（即每个事件都映射到一个唯一的二进制字符串），但有人怀疑它不是唯一可解码的。当这些二进制码字在没有分隔符的情况下连接在一起时，所得到的序列可能会以多种方式被解析成有效的事件序列。为了向设计团队证明这一缺陷，你必须找到能证明这种歧义的最短的连接二进制序列。\n\n可以被正确地解释为来自集合 {Alert, Normal, Low_Battery, Reset} 的两个或更多个不同事件序列的最短二进制序列是什么？", "solution": "设该编码为二进制码字的集合\n$$C=\\{1,10,00,101\\}.$$\n如果一个连接的二进制序列可以被解析为来自 $C$ 的两个不同的码字序列，且这两个序列产生相同的总比特串，那么这个序列就是有歧义的。为了找到最短的此类序列，我们按总长度递增的顺序进行比较。\n\n- 长度为 $1$：唯一可解码的字符串是 $1$，它有唯一的解析 $[1]$。没有歧义。\n\n- 长度为 $2$：可解码的字符串是 $00$ 和 $10$。\n  - $00$ 只能解析为 $[00]$，因为 $0$ 不是一个码字。\n  - $10$ 只能解析为 $[10]$，因为将其解析为 $[1][0]$ 是无效的，因为 $0$ 不是码字。\n  字符串 $11$ 只能解码为 $[1][1]$，并且它不等于任何单个码字或任何其他分段方式。在长度为 $2$ 时没有歧义。\n\n- 长度为 $3$：考虑所有总长度为 $3$ 的可解码连接：\n  - $1+00=100$ 只能得到 $[1][00]$。\n  - $1+10=110$ 只能得到 $[1][10]$。\n  - $1+1+1=111$ 只能得到 $[1][1][1]$。\n  - 单个码字 $101$ 也可以通过连接 $10+1=101$ 形成，因为 $10$ 和 $1$ 都在 $C$ 中。\n  因此\n  $$101=[101] \\quad \\text{and} \\quad 101=[10][1],$$\n  提供了两种不同的有效解析。\n\n由于长度为 $1$ 或 $2$ 时不存在歧义，而当长度为 $3$ 时字符串 $101$ 出现了歧义，所以最短的有歧义的连接二进制序列是 $101$。", "answer": "$$\\boxed{101}$$", "id": "1610380"}, {"introduction": "为了避免前面练习中遇到的模糊性问题，我们通常使用前缀码。但是，我们如何知道一组期望的码长是否能够构成一个前缀码呢？克拉夫特不等式 (Kraft inequality) 在此就成了一个强大的预测工具。本练习 [@problem_id:1610387] 挑战你将这个基本定理应用于一个实际的设计约束中，判断一个三元（$D=3$）码的可行性，并在此基础上进行长度优化。", "problem": "一位系统工程师正在为一个自主环境传感器网络设计通信协议。中央集线器接收来自五种不同类型传感器的状态更新，这些传感器分别标记为 A、B、C、D 和 E。每个状态更新被编码成一个由三进制位（“trit”，即 0、1 或 2）组成的码字。为了让集线器能够无歧义地处理传入的数据流，并且无需等待特殊的终止符号，这组码字必须构成一个即时码。\n\n根据传感器类型的频率和优先级，前三种类型的码字长度已经确定：\n- 传感器类型 A 的码字长度为 $l_A = 1$ 个三进制位。\n- 传感器类型 B 和 C 的码字长度均为 $l_B = l_C = 2$ 个三进制位。\n\n剩下的两种传感器类型 D 和 E，用于非关键的周期性签到。它们的码字长度 $l_D$ 和 $l_E$ 是需要确定的整数。为了最小化集线器中使用的简单解码器的计算资源，设计规范要求最小化这两个未确定码字长度的和 $S = l_D + l_E$。\n\n假设 $l_D$ 和 $l_E$ 必须是正整数，那么和 $S$ 的最小可能值是多少？", "solution": "一个在 $D$元字母表上的即时码（无前缀码）必须满足 Kraft 不等式。对于三进制位，有 $D=3$，所以任何一组码字长度 $\\{l_{i}\\}$ 必须满足\n$$\n\\sum_{i} 3^{-l_{i}} \\leq 1.\n$$\n对于给定的长度 $l_{A}=1$、$l_{B}=l_{C}=2$ 以及未知的正整数 $l_{D}$、$l_{E}$，该不等式变为\n$$\n3^{-1}+3^{-2}+3^{-2}+3^{-l_{D}}+3^{-l_{E}} \\leq 1,\n$$\n化简为\n$$\n3^{-l_{D}}+3^{-l_{E}} \\leq 1-\\frac{1}{3}-\\frac{2}{9}=\\frac{4}{9}.\n$$\n我们要在 $l_{D},l_{E}\\in \\mathbb{Z}_{\\geq 1}$ 和上述约束条件下，最小化 $S=l_{D}+l_{E}$。由于 $3^{-l}$ 是关于 $l$ 的严格递减函数，因此使长度尽可能小会使不等式左边的值增大。最小的数对是 $(1,1)$，它得出的结果是\n$$\n3^{-1}+3^{-1}=\\frac{1}{3}+\\frac{1}{3}=\\frac{2}{3}>\\frac{4}{9},\n$$\n所以它违反了约束条件。次小的和是 $S=3$，对应的数对为 $(1,2)$ 或 $(2,1)$，此时\n$$\n3^{-1}+3^{-2}=\\frac{1}{3}+\\frac{1}{9}=\\frac{4}{9},\n$$\n这恰好满足约束条件（取等号）。根据 Kraft–McMillan 定理，这保证了存在一个具有这些长度的三进制即时码，因此这样的编码是可行的。任何更大的长度都会使得 $S \\geq 4$，而不是最小值。\n\n因此，最小可能和为 $S_{\\min}=3$。", "answer": "$$\\boxed{3}$$", "id": "1610387"}, {"introduction": "知道一组码长是有效的，和实际创建出对应的码是两回事。这个练习将带你从理论验证走向实践构建，完成从“可能性”到“现实”的转变。本练习 [@problem_id:1610365] 将指导你遵循一个系统性的算法流程，为一组满足克拉夫特不等式的码长分配具体的二进制序列，从而将抽象的理论转化为具体、可用的前缀码。", "problem": "在数字通信中，前缀码用于无损数据压缩。如果在一个指定的码字集合中，没有任何码字是其他码字的前缀，那么这个码就定义为前缀码（或即时码）。这个特性使得无歧义解码成为可能。\n\n考虑一个信源字母表 $\\mathcal{S} = \\{A, B, C\\}$。我们希望根据一组给定的期望码字长度：$l_A=2$、$l_B=3$ 和 $l_C=3$，为每个符号分配一个唯一的二进制码字。\n\n分配过程必须遵循下面概述的一个特定的规范构造过程：\n1.  将符号排列成一个列表，首先根据其所需的码字长度按非递减顺序排序。如果长度相同，则按字母顺序（例如，A 在 B 之前）排序。\n2.  这个排序列表中的第一个码字 $c_1$（长度为 $l_1$）是一个长度为 $l_1$ 的全零字符串。\n3.  列表中的每个后续码字 $c_i$（长度为 $l_i$）是根据列表中的前一个码字 $c_{i-1}$（长度为 $l_{i-1}$）生成的。设 $v_{i-1}$ 是二进制字符串 $c_{i-1}$ 所表示的整数。当前码字的整数值 $v_i$ 由公式 $v_i = (v_{i-1} + 1) \\times 2^{(l_i - l_{i-1})}$ 给出。然后，码字 $c_i$ 是整数 $v_i$ 的二进制表示，如有必要，用前导零填充以确保其长度为 $l_i$。\n\n下列哪个选项正确表示了通过此特定过程生成的码字分配集合 $\\{C(A), C(B), C(C)\\}$？\n\nA. $C(A)=00, C(B)=010, C(C)=011$\n\nB. $C(A)=00, C(B)=001, C(C)=010$\n\nC. $C(A)=11, C(B)=101, C(C)=100$\n\nD. $C(A)=0, C(B)=10, C(C)=11$", "solution": "我们被给予了期望的码字长度 $l_{A}=2$、$l_{B}=3$ 和 $l_{C}=3$，以及规范构造过程。\n\n首先，根据码字长度按非递减顺序对符号进行排序，长度相同时按字母顺序排序。这得到有序列表 $(A, B, C)$，其长度为 $(2, 3, 3)$。\n\n对于第一个码字，应用规则 $c_{1}$ 是长度为 $l_{1}$ 的全零字符串。因此，\n$$\nc_{A} = 00,\\quad v_{A} = 0.\n$$\n\n对于下一个符号 $B$（长度 $l_{B}=3$），使用递推公式\n$$\nv_{B} = (v_{A} + 1)\\times 2^{(l_{B} - l_{A})} = (0 + 1)\\times 2^{(3 - 2)} = 1\\times 2 = 2.\n$$\n码字 $c_{B}$ 是 $v_{B}$ 的二进制表示，并填充到长度为3：\n$$\nc_{B} = 010.\n$$\n\n对于下一个符号 $C$（长度 $l_{C}=3$），再次应用递推公式：\n$$\nv_{C} = (v_{B} + 1)\\times 2^{(l_{C} - l_{B})} = (2 + 1)\\times 2^{(3 - 3)} = 3\\times 1 = 3.\n$$\n码字 $c_{C}$ 是 $v_{C}$ 的二进制表示，并填充到长度为3：\n$$\nc_{C} = 011.\n$$\n\n因此，规范分配为 $C(A)=00$，$C(B)=010$ 和 $C(C)=011$，这对应于选项A。", "answer": "$$\\boxed{A}$$", "id": "1610365"}]}