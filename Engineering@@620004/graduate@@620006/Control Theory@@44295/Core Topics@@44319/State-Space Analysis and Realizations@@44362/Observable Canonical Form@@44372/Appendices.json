{"hands_on_practices": [{"introduction": "A foundational skill in modern control theory is the ability to translate a system's description from the frequency domain (transfer function) to the time domain (state-space representation). This first exercise provides practice in this essential conversion. You will construct an observable canonical realization for a given transfer function, a process that directly links the coefficients of the denominator polynomial to the state matrix $A_o$ and requires you to solve for the input matrix $B$ by matching numerator coefficients from first principles [@problem_id:2729169]. This practice solidifies the fundamental algorithm and reinforces your understanding of the relationship between these two critical system representations.", "problem": "Consider the Single-Input Single-Output (SISO) Linear Time-Invariant (LTI) transfer function\n$$\nG(s) \\;=\\; \\frac{2s^{2}+3s+5}{s^{3}+4s^{2}+6s+3}.\n$$\nUsing the observable canonical form associated with the denominator polynomial, construct a minimal state-space realization with matrices $(A_{o},B,C,D)$ that realizes $G(s)$, where $A_{o}$ is in observable companion form and $D=0$ for strict properness. Starting from the fundamental state-space to transfer function identity\n$$\nG(s) \\;=\\; C\\,(sI - A)^{-1} B \\;+\\; D,\n$$\ndetermine $A_{o}$ from the denominator polynomial and then compute the input vector $B$ explicitly by matching the numerator polynomial via $C\\operatorname{adj}(sI-A_{o})B$. Finally, verify your $B$ by a direct computation of $G(s)$ from the realized $(A_{o},B,C,D)$.\n\nReport as your final answer only the entries of the vector $B$ in a single row matrix $(b_{1}\\;\\;b_{2}\\;\\;b_{3})$ with exact integers. No rounding is required and no physical units are involved.", "solution": "We begin from the state-space to transfer function identity for a Single-Input Single-Output (SISO) Linear Time-Invariant (LTI) system,\n$$\nG(s) \\;=\\; C\\,(sI - A)^{-1} B \\;+\\; D,\n$$\nwhich follows from eliminating the state $x(t)$ in the state-space description $\\dot{x}(t)=A x(t) + B u(t)$, $y(t)=C x(t) + D u(t)$ and taking the Laplace transform under zero initial conditions. For a strictly proper transfer function, we have $D=0$.\n\nThe denominator polynomial is\n$$\nD(s) \\;=\\; s^{3} + 4 s^{2} + 6 s + 3 \\;=\\; s^{3} + a_{2} s^{2} + a_{1} s + a_{0},\n$$\nwith coefficients $a_{2}=4$, $a_{1}=6$, $a_{0}=3$. The observable canonical (companion) form has\n$$\nA_{o} \\;=\\;\n\\begin{bmatrix}\n0 & 0 & -a_{0} \\\\\n1 & 0 & -a_{1} \\\\\n0 & 1 & -a_{2}\n\\end{bmatrix}\n\\;=\\;\n\\begin{bmatrix}\n0 & 0 & -3 \\\\\n1 & 0 & -6 \\\\\n0 & 1 & -4\n\\end{bmatrix},\n\\qquad\nC \\;=\\; \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix},\n\\qquad\nD \\;=\\; 0,\n$$\nand an unknown $B \\in \\mathbb{R}^{3}$ to be determined by numerator matching.\n\nBy the adjugate identity,\n$$\n(sI - A_{o})^{-1} \\;=\\; \\frac{\\operatorname{adj}(sI - A_{o})}{\\det(sI - A_{o})},\n$$\nand therefore\n$$\nG(s) \\;=\\; \\frac{C\\,\\operatorname{adj}(sI - A_{o})\\,B}{\\det(sI - A_{o})}.\n$$\nFirst, we verify that $\\det(sI - A_{o})$ equals the given denominator. Compute\n$$\nsI - A_{o} \\;=\\;\n\\begin{bmatrix}\ns & 0 & 3 \\\\\n-1 & s & 6 \\\\\n0 & -1 & s+4\n\\end{bmatrix}.\n$$\nIts determinant is\n\\begin{align*}\n\\det(sI - A_{o})\n&= s\\,\\det\\!\\begin{bmatrix} s & 6 \\\\ -1 & s+4 \\end{bmatrix}\n\\;+\\; 3\\,\\det\\!\\begin{bmatrix} -1 & s \\\\ 0 & -1 \\end{bmatrix} \\\\\n&= s\\,(s(s+4) - 6(-1)) \\;+\\; 3\\,((-1)(-1) - 0\\cdot s) \\\\\n&= s\\,(s^{2} + 4s + 6) \\;+\\; 3 \\\\\n&= s^{3} + 4 s^{2} + 6 s + 3 \\;=\\; D(s),\n\\end{align*}\nas required.\n\nHence the numerator of $G(s)$ must equal $C\\,\\operatorname{adj}(sI - A_{o})\\,B$. Since $C=\\begin{bmatrix}0 & 0 & 1\\end{bmatrix}$, only the third row of $\\operatorname{adj}(sI - A_{o})$ contributes. Because $\\operatorname{adj}(M)$ is the transpose of the cofactor matrix of $M$, the third row of $\\operatorname{adj}(sI - A_{o})$ is given by the third column of cofactors of $sI - A_{o}$. Denote $M = sI - A_{o}$ for compactness. The relevant cofactors are:\n\\begin{align*}\nC_{1,3} &= (-1)^{1+3}\\,\\det\\!\\begin{bmatrix} -1 & s \\\\ 0 & -1 \\end{bmatrix}\n= (+1)\\,( (-1)(-1) - s\\cdot 0 ) \\;=\\; 1, \\\\\nC_{2,3} &= (-1)^{2+3}\\,\\det\\!\\begin{bmatrix} s & 0 \\\\ 0 & -1 \\end{bmatrix}\n= (-1)\\,( s(-1) - 0\\cdot 0 ) \\;=\\; s, \\\\\nC_{3,3} &= (-1)^{3+3}\\,\\det\\!\\begin{bmatrix} s & 0 \\\\ -1 & s \\end{bmatrix}\n= (+1)\\,( s\\cdot s - 0\\cdot (-1) ) \\;=\\; s^{2}.\n\\end{align*}\nTherefore,\n$$\nC\\,\\operatorname{adj}(sI - A_{o}) \\;=\\; \\begin{bmatrix} C_{1,3} & C_{2,3} & C_{3,3} \\end{bmatrix}\n\\;=\\; \\begin{bmatrix} 1 & s & s^{2} \\end{bmatrix}.\n$$\nLet $B = \\begin{bmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{bmatrix}$. Then the numerator polynomial is\n$$\nC\\,\\operatorname{adj}(sI - A_{o})\\,B \\;=\\; \\begin{bmatrix} 1 & s & s^{2} \\end{bmatrix}\n\\begin{bmatrix} b_{1} \\\\ b_{2} \\\\ b_{3} \\end{bmatrix} \\;=\\; b_{1} + b_{2}\\,s + b_{3}\\,s^{2}.\n$$\nMatching to the given numerator $2 s^{2} + 3 s + 5$ yields\n$$\nb_{3} \\;=\\; 2, \\qquad b_{2} \\;=\\; 3, \\qquad b_{1} \\;=\\; 5,\n$$\nso that\n$$\nB \\;=\\; \\begin{bmatrix} 5 \\\\ 3 \\\\ 2 \\end{bmatrix}.\n$$\n\nVerification by direct computation: with\n$$\nA_{o} \\;=\\;\n\\begin{bmatrix}\n0 & 0 & -3 \\\\\n1 & 0 & -6 \\\\\n0 & 1 & -4\n\\end{bmatrix},\\quad\nB \\;=\\; \\begin{bmatrix} 5 \\\\ 3 \\\\ 2 \\end{bmatrix},\\quad\nC \\;=\\; \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix},\\quad\nD \\;=\\; 0,\n$$\nwe have\n\\begin{align*}\nG(s) &= \\frac{C\\,\\operatorname{adj}(sI - A_{o})\\,B}{\\det(sI - A_{o})}\n= \\frac{\\begin{bmatrix} 1 & s & s^{2} \\end{bmatrix} \\begin{bmatrix} 5 \\\\ 3 \\\\ 2 \\end{bmatrix}}{s^{3} + 4 s^{2} + 6 s + 3} \\\\\n&= \\frac{5 + 3 s + 2 s^{2}}{s^{3} + 4 s^{2} + 6 s + 3}\n= \\frac{2 s^{2} + 3 s + 5}{s^{3} + 4 s^{2} + 6 s + 3},\n\\end{align*}\nwhich matches the given $G(s)$. This confirms the correctness of $B$ and the realization.", "answer": "$$\\boxed{\\begin{pmatrix}5 & 3 & 2\\end{pmatrix}}$$", "id": "2729169"}, {"introduction": "While textbook examples often feature minimal systems, real-world models can exhibit pole-zero cancellations that hide certain system dynamics. This exercise delves into such a scenario, where a non-minimal transfer function with a pole-zero cancellation on the imaginary axis is used to construct a state-space model [@problem_id:2729221]. This hands-on analysis will illuminate the crucial distinctions between full system observability and the weaker, yet practical, condition of detectability, demonstrating how internal system properties may not be fully apparent from the reduced input-output behavior alone.", "problem": "Consider a Single-Input Single-Output (SISO) linear time-invariant (LTI) system described by a strictly proper transfer function. Start from the fundamental definition that any state-space realization with matrices $A$, $B$, $C$, and $D$ induces the transfer function $G(s) = C\\,(sI - A)^{-1} B + D$. Construct and analyze an example in which a finite transmission zero cancels an open-loop pole on the imaginary axis.\n\n1) Construct a transfer function\n$$\nG(s) \\;=\\; \\frac{N(s)}{D(s)}\n$$\nwith $D(s) = s\\,(s+1)\\,(s+3)$ and $N(s) = s\\,(s+2)$, and verify explicitly that a zero cancels a pole on the imaginary axis. Reduce the rational function to its minimal form.\n\n2) Using first principles and the resolvent identity for the state-space-to-transfer mapping, derive an observable canonical (observer canonical) realization $(A,B,C,D)$ of the unreduced $G(s)$ in the following structured form:\n- $A$ is the transpose of the controllable companion matrix associated with the monic denominator $D(s) = s^{3} + a_{2} s^{2} + a_{1} s + a_{0}$,\n- $C$ selects the last state, and\n- $B$ is to be solved so that $C\\,(sI - A)^{-1} B$ matches the given numerator $N(s)$.\n\nConcretely, determine the entries of $B$ by equating coefficients after deriving $C\\,(sI - A)^{-1} B$ symbolically.\n\n3) Using the definition that a pair $(C,A)$ is observable if its observability matrix has full row rank, compute the observability matrix for your derived $(C,A)$ and determine whether the realization is fully observable. Then, using the definition that a system is detectable if all unobservable modes (if any) have strictly negative real parts, discuss detectability versus full observability in this case, making clear which property holds and why.\n\n4) Finally, report the real part (a single scalar) of the pole that is canceled by the zero in your example. This final answer must be a single real number. No rounding is needed, and no units are required.", "solution": "**Part 1: Transfer Function Analysis**\nThe specified transfer function is $G(s) = \\frac{N(s)}{D(s)}$.\nThe denominator polynomial is $D(s) = s(s+1)(s+3) = s(s^2+4s+3) = s^3+4s^2+3s$. The roots of $D(s)=0$ give the poles of the system, which are $p_1 = 0$, $p_2 = -1$, and $p_3 = -3$.\nThe numerator polynomial is $N(s) = s(s+2) = s^2+2s$. The roots of $N(s)=0$ give the finite transmission zeros of the system, which are $z_1 = 0$ and $z_2 = -2$.\n\nThe transfer function is:\n$$\nG(s) = \\frac{s(s+2)}{s(s+1)(s+3)}\n$$\nA zero at $s=0$ cancels a pole at $s=0$. The canceled pole lies on the imaginary axis. To obtain the minimal form of the transfer function, we cancel this common factor:\n$$\nG_{red}(s) = \\frac{s+2}{(s+1)(s+3)} = \\frac{s+2}{s^2+4s+3}\n$$\nThis minimal transfer function describes the input-output behavior of the controllable and observable subsystem.\n\n**Part 2: Observable Canonical Realization**\nWe construct a state-space realization $(A,B,C,D)$ for the unreduced third-order transfer function $G(s) = \\frac{s^2+2s}{s^3+4s^2+3s}$. Since the transfer function is strictly proper, $D=0$.\n\nThe denominator is $D(s) = s^3 + 4s^2 + 3s + 0$. Comparing this to the monic form $D(s) = s^3 + a_2 s^2 + a_1 s + a_0$, we identify the coefficients: $a_2=4$, $a_1=3$, and $a_0=0$.\n\nThe problem specifies the observable canonical form where $A$ is the transpose of the controllable companion matrix.\n$$\nA = \\begin{pmatrix} 0 & 0 & -a_0 \\\\ 1 & 0 & -a_1 \\\\ 0 & 1 & -a_2 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 & 0 \\\\ 1 & 0 & -3 \\\\ 0 & 1 & -4 \\end{pmatrix}\n$$\nThe output matrix $C$ selects the last state:\n$$\nC = \\begin{pmatrix} 0 & 0 & 1 \\end{pmatrix}\n$$\nFor this canonical form, the transfer function numerator is given by $b_2 s^2 + b_1 s + b_0$ when the input matrix is $B = \\begin{pmatrix} b_0 \\\\ b_1 \\\\ b_2 \\end{pmatrix}$. The given numerator is $N(s) = s^2+2s = 1 \\cdot s^2 + 2 \\cdot s + 0$. By comparing coefficients, we find:\n$b_2 = 1$, $b_1 = 2$, $b_0 = 0$.\nTherefore, the input matrix is:\n$$\nB = \\begin{pmatrix} 0 \\\\ 2 \\\\ 1 \\end{pmatrix}\n$$\n\n**Part 3: Observability and Detectability**\nA system realization $(C,A)$ is observable if its observability matrix $\\mathcal{O}$ has full rank. For this third-order system, the observability matrix is:\n$$\n\\mathcal{O} = \\begin{pmatrix} C \\\\ CA \\\\ CA^2 \\end{pmatrix}\n$$\nWe compute the necessary components:\n$C = \\begin{pmatrix} 0 & 0 & 1 \\end{pmatrix}$\n$CA = \\begin{pmatrix} 0 & 0 & 1 \\end{pmatrix} \\begin{pmatrix} 0 & 0 & 0 \\\\ 1 & 0 & -3 \\\\ 0 & 1 & -4 \\end{pmatrix} = \\begin{pmatrix} 0 & 1 & -4 \\end{pmatrix}$\n$CA^2 = (CA)A = \\begin{pmatrix} 0 & 1 & -4 \\end{pmatrix} \\begin{pmatrix} 0 & 0 & 0 \\\\ 1 & 0 & -3 \\\\ 0 & 1 & -4 \\end{pmatrix} = \\begin{pmatrix} 1 & -4 & 13 \\end{pmatrix}$\n\nThe observability matrix is:\n$$\n\\mathcal{O} = \\begin{pmatrix} 0 & 0 & 1 \\\\ 0 & 1 & -4 \\\\ 1 & -4 & 13 \\end{pmatrix}\n$$\nTo check for full rank, we compute its determinant:\n$$\n\\det(\\mathcal{O}) = 1 \\cdot \\det\\begin{pmatrix} 0 & 1 \\\\ 1 & -4 \\end{pmatrix} = 1 \\cdot (0 - 1) = -1\n$$\nSince $\\det(\\mathcal{O}) = -1 \\neq 0$, the matrix has full rank ($3$). Therefore, the realization $(C,A)$ is fully observable.\n\nA system is detectable if all of its unobservable modes have strictly negative real parts. Since our realization is fully observable, there are no unobservable modes. The condition for detectability is therefore trivially satisfied. Full observability is a stronger condition than detectability; in this case, both properties hold. The pole-zero cancellation at $s=0$ indicates that the realization must be non-minimal. Since it is observable, it must be uncontrollable. The mode at $\\lambda=0$, corresponding to the canceled pole, is an uncontrollable mode in this realization.\n\n**Part 4: Report the Canceled Pole's Real Part**\nFrom Part 1, the pole that is canceled by a zero is the one at $s=0$. The complex number $s=0$ can be written as $0 + j0$. The real part of this pole is $0$.", "answer": "$$\n\\boxed{0}\n$$", "id": "2729221"}, {"introduction": "A given transfer function can be represented by infinitely many state-space realizations, all related by a change of coordinates (a similarity transformation). This final practice moves from analytical derivation to computational synthesis, challenging you to construct both the observable canonical form and its dual, the controllable canonical form [@problem_id:2729219]. The core of the exercise is to computationally verify their equivalence by deriving the unique, non-singular similarity transformation matrix $T$ that links them. This task bridges abstract algebraic theory with numerical implementation, a vital skill for applying control concepts using modern software tools.", "problem": "You are given single-input single-output linear time-invariant systems specified by the strictly proper transfer function $G(s) = \\dfrac{N(s)}{D(s)}$, where $D(s)$ is monic of degree $n$ and $N(s)$ has degree at most $n-1$. Let $D(s) = s^n + a_{n-1} s^{n-1} + \\cdots + a_1 s + a_0$ and $N(s) = b_0 + b_1 s + \\cdots + b_{n-1} s^{n-1}$. The coefficients are provided in ascending powers in arrays $[a_0, a_1, \\ldots, a_{n-1}]$ and $[b_0, b_1, \\ldots, b_{n-1}]$.\n\nStarting from the fundamental definition of transfer function in state-space, $G(s) = C (s I - A)^{-1} B + D$, and the core definitions of controllability and observability for state-space models, you must:\n\n- Construct the controllable canonical realization $(A_c, B_c, C_c, D_c)$ and the observable canonical realization $(A_o, B_o, C_o, D_o)$ that realize the same $G(s)$ for each provided test case. The canonical realizations must be consistent with the given polynomials and the standard companion-form structures implied by the denominator polynomial $D(s)$ (monic) and numerator polynomial $N(s)$, with $D_c = 0$ and $D_o = 0$.\n- Compute a similarity transform matrix $T \\in \\mathbb{R}^{n \\times n}$ that satisfies the three defining equations for equivalence between minimal realizations:\n  1. $A_o \\, T = T \\, A_c$,\n  2. $B_o = T \\, B_c$,\n  3. $C_o = C_c \\, T^{-1}$.\n- Numerically verify the equivalence by checking whether the residuals of the three equations have Frobenius norm strictly less than a tolerance $\\tau = 10^{-9}$.\n- Your program must output, for each test case, a Boolean indicating whether all three conditions are simultaneously satisfied within the tolerance $\\tau$.\n\nTest suite and formatting requirements:\n\n- Use the following test suite, where each item is a pair of arrays specifying $[a_0, a_1, \\ldots, a_{n-1}]$ and $[b_0, b_1, \\ldots, b_{n-1}]$:\n  - Case $1$ (happy path, degree $4$): $a = [4.0, 3.0, 5.0, 2.0]$, $b = [1.0, 0.0, 2.0, 3.0]$.\n  - Case $2$ (relative degree greater than $1$, degree $4$): $a = [2.0, 1.0, 0.25, 0.5]$, $b = [1.0, 1.0, 0.0, 0.0]$.\n  - Case $3$ (zero coefficient in $a_2$, degree $3$): $a = [0.5, 2.0, 0.0]$, $b = [0.75, 0.0, 1.25]$.\n  - Case $4$ (higher order, degree $5$): $a = [1.0, 0.0, 3.0, 0.0, 1.0]$, $b = [0.0, 1.0, 0.0, 2.0, 1.0]$.\n  - Case $5$ (zero constant term $a_0$, degree $3$): $a = [0.0, 0.5, 2.0]$, $b = [1.0, -0.5, 0.25]$.\n- All computations are dimensionless; there are no physical units.\n- The final output format must be a single line containing the results for all cases as a comma-separated list enclosed in square brackets, for example $[{\\tt True},{\\tt False},\\ldots]$.\n\nYour program must produce exactly one line with the Boolean results for the cases in the specified order. No other output is permitted.", "solution": "The problem demands the validation of the equivalence between two canonical state-space realizations of a linear time-invariant (LTI) system: the controllable canonical form and the observable canonical form. The system is defined by a strictly proper single-input single-output (SISO) transfer function $G(s) = \\dfrac{N(s)}{D(s)}$.\n\nThe analysis must begin from first principles. Given the denominator polynomial $D(s) = s^n + \\sum_{k=0}^{n-1} a_k s^k$ and the numerator polynomial $N(s) = \\sum_{k=0}^{n-1} b_k s^k$, we construct the state-space realizations. The coefficients are provided in arrays $[a_0, a_1, \\ldots, a_{n-1}]$ and $[b_0, b_1, \\ldots, b_{n-1}]$.\n\nThe controllable canonical realization $(A_c, B_c, C_c, D_c)$ is defined as follows. The dimension of the state-space is $n$, which is the degree of $D(s)$. The matrices are:\n$$\nA_c = \\begin{pmatrix}\n0 & 1 & 0 & \\cdots & 0 \\\\\n0 & 0 & 1 & \\cdots & 0 \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n0 & 0 & 0 & \\cdots & 1 \\\\\n-a_0 & -a_1 & -a_2 & \\cdots & -a_{n-1}\n\\end{pmatrix} \\in \\mathbb{R}^{n \\times n}\n$$\n$$\nB_c = \\begin{pmatrix} 0 \\\\ 0 \\\\ \\vdots \\\\ 0 \\\\ 1 \\end{pmatrix} \\in \\mathbb{R}^{n \\times 1}\n$$\n$$\nC_c = \\begin{pmatrix} b_0 & b_1 & \\cdots & b_{n-1} \\end{pmatrix} \\in \\mathbb{R}^{1 \\times n}\n$$\nSince the transfer function is strictly proper, the direct feedthrough term is zero, so $D_c = 0$. This realization is constructed to be always controllable, as its name implies.\n\nThe observable canonical realization $(A_o, B_o, C_o, D_o)$ is the dual of the controllable form. Its matrices are:\n$$\nA_o = A_c^T = \\begin{pmatrix}\n0 & 0 & \\cdots & 0 & -a_0 \\\\\n1 & 0 & \\cdots & 0 & -a_1 \\\\\n0 & 1 & \\cdots & 0 & -a_2 \\\\\n\\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n0 & 0 & \\cdots & 1 & -a_{n-1}\n\\end{pmatrix} \\in \\mathbb{R}^{n \\times n}\n$$\n$$\nB_o = C_c^T = \\begin{pmatrix} b_0 \\\\ b_1 \\\\ \\vdots \\\\ b_{n-1} \\end{pmatrix} \\in \\mathbb{R}^{n \\times 1}\n$$\n$$\nC_o = B_c^T = \\begin{pmatrix} 0 & 0 & \\cdots & 0 & 1 \\end{pmatrix} \\in \\mathbb{R}^{1 \\times n}\n$$\nSimilarly, $D_o = 0$. This realization is constructed to be always observable.\n\nTwo state-space realizations $(A_1, B_1, C_1)$ and $(A_2, B_2, C_2)$ are equivalent if there exists a non-singular similarity transformation matrix $T$ such that:\n$1. A_2 = T A_1 T^{-1} \\iff A_2 T = T A_1$\n$2. B_2 = T B_1$\n$3. C_2 = C_1 T^{-1} \\iff C_2 T = C_1$\n\nThe problem requires us to find such a $T$ that transforms $(A_c, B_c, C_c)$ into $(A_o, B_o, C_o)$ and verify these three relations numerically.\n\nThe matrix $T$ can be determined from the controllability matrices of the two systems. The controllability matrix for a pair $(A, B)$ is given by $\\mathcal{C}(A,B) = [B, AB, A^2B, \\ldots, A^{n-1}B]$. From the equivalence relations, we can derive a relationship for the controllability matrices:\n$A_o T = T A_c$\n$B_o = T B_c$\nFrom these, it follows that $A_o B_o = A_o T B_c = T A_c B_c$, and in general, $A_o^k B_o = T A_c^k B_c$ for any integer $k \\ge 0$.\nConstructing the controllability matrices $\\mathcal{C}_c = \\mathcal{C}(A_c, B_c)$ and $\\mathcal{C}_o = \\mathcal{C}(A_o, B_o)$ yields the matrix equation:\n$$\n\\mathcal{C}_o = [B_o, A_o B_o, \\ldots, A_o^{n-1} B_o] = [T B_c, T A_c B_c, \\ldots, T A_c^{n-1} B_c] = T [B_c, A_c B_c, \\ldots, A_c^{n-1} B_c] = T \\mathcal{C}_c\n$$\nThus, we have $\\mathcal{C}_o = T \\mathcal{C}_c$.\n\nThe matrix $\\mathcal{C}_c$ is always non-singular for the controllable canonical form. Therefore, we can solve for $T$:\n$$\nT = \\mathcal{C}_o (\\mathcal{C}_c)^{-1}\n$$\nThis construction guarantees that the first two equivalence conditions, $A_o T = T A_c$ and $B_o = T B_c$, are satisfied algebraically. The third condition, $C_o = C_c T^{-1}$, and the non-singularity of $T$ itself, are only guaranteed if both realizations are minimal. A realization is minimal if it is both controllable and observable. Non-minimality arises if there are pole-zero cancellations in the transfer function $G(s)$, which means the polynomials $N(s)$ and $D(s)$ are not coprime.\nIf the system is not minimal, the controllability matrix of the observable realization, $\\mathcal{C}_o$, becomes singular. Consequently, $T = \\mathcal{C}_o (\\mathcal{C}_c)^{-1}$ will also be singular. In this case, $T^{-1}$ does not exist, and the third equivalence condition is not satisfied.\n\nThe computational procedure is as follows:\n$1$. For a given case $([a_k], [b_k])$, construct the matrices $A_c, B_c, C_c, A_o, B_o, C_o$ of size $n = \\text{length}([a_k])$.\n$2$. Compute the controllability matrices $\\mathcal{C}_c$ and $\\mathcal{C}_o$ by iterating matrix-vector products.\n$3$. Compute $T = \\mathcal{C}_o (\\mathcal{C}_c)^{-1}$.\n$4$. A critical step is to check for the non-singularity of $T$. A numerically robust method is to examine its condition number, $\\text{cond}(T)$. If $\\text{cond}(T)$ is excessively large, the matrix is numerically singular, implying non-minimality. In this scenario, the equivalence transformation does not exist, and the verification must fail.\n$5$. If $T$ is non-singular, compute its inverse $T^{-1}$.\n$6$. Verify the three equivalence conditions by computing the Frobenius norm of the residuals. A result is deemed valid if all three norms are below the specified tolerance $\\tau = 10^{-9}$.\n- Residual $R_1$: $\\| A_o T - T A_c \\|_F < \\tau$\n- Residual $R_2$: $\\| B_o - T B_c \\|_F < \\tau$\n- Residual $R_3$: $\\| C_o - C_c T^{-1} \\|_F < \\tau$\nThe final output for each case is a Boolean value indicating the simultaneous satisfaction of these three conditions. Given that the theoretical framework establishes that these equations hold if and only if the system is minimal, and the test cases provided do not appear to have pole-zero cancellations, we expect the verification to pass for all cases. The numerical check serves to confirm this and account for the limits of floating-point arithmetic.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    \"\"\"\n    \n    # Test cases as specified in the problem statement\n    test_cases = [\n        # Case 1: happy path, degree 4\n        {'a': np.array([4.0, 3.0, 5.0, 2.0]), 'b': np.array([1.0, 0.0, 2.0, 3.0])},\n        # Case 2: relative degree > 1, degree 4\n        {'a': np.array([2.0, 1.0, 0.25, 0.5]), 'b': np.array([1.0, 1.0, 0.0, 0.0])},\n        # Case 3: zero coefficient in a_2, degree 3\n        {'a': np.array([0.5, 2.0, 0.0]), 'b': np.array([0.75, 0.0, 1.25])},\n        # Case 4: higher order, degree 5\n        {'a': np.array([1.0, 0.0, 3.0, 0.0, 1.0]), 'b': np.array([0.0, 1.0, 0.0, 2.0, 1.0])},\n        # Case 5: zero constant term a_0, degree 3\n        {'a': np.array([0.0, 0.5, 2.0]), 'b': np.array([1.0, -0.5, 0.25])},\n    ]\n\n    results = []\n    for case in test_cases:\n        a_coeffs = case['a']\n        b_coeffs = case['b']\n        result = verify_equivalence(a_coeffs, b_coeffs)\n        results.append(result)\n\n    # Format the final output as a comma-separated list in brackets.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef verify_equivalence(a, b, tol=1e-9):\n    \"\"\"\n    Constructs canonical forms, computes similarity transform T, and verifies equivalence.\n\n    Args:\n        a (np.ndarray): Coefficients [a_0, a_1, ..., a_{n-1}] of the denominator polynomial.\n        b (np.ndarray): Coefficients [b_0, b_1, ..., b_{n-1}] of the numerator polynomial.\n        tol (float): Tolerance for numerical checks.\n\n    Returns:\n        bool: True if the three equivalence conditions are met, False otherwise.\n    \"\"\"\n    n = len(a)\n    if n == 0:\n        return True # Trivial case\n\n    # 1. Construct Controllable Canonical Form (Ac, Bc, Cc)\n    Ac = np.diag(np.ones(n - 1), k=1)\n    Ac[-1, :] = -a\n    \n    Bc = np.zeros((n, 1))\n    Bc[-1, 0] = 1.0\n    \n    Cc = b.reshape(1, n)\n\n    # 2. Construct Observable Canonical Form (Ao, Bo, Co)\n    Ao = Ac.T\n    Bo = b.reshape(n, 1)\n    Co = Bc.T\n\n    # 3. Compute Controllability Matrices Cc_matrix and Co_matrix\n    Cc_matrix = np.zeros((n, n))\n    Co_matrix = np.zeros((n, n))\n    \n    # Initial columns\n    Cc_matrix[:, 0] = Bc.flatten()\n    Co_matrix[:, 0] = Bo.flatten()\n\n    for i in range(1, n):\n        Cc_matrix[:, i] = (Ac @ Cc_matrix[:, i-1]).flatten()\n        Co_matrix[:, i] = (Ao @ Co_matrix[:, i-1]).flatten()\n\n    # 4. Compute Transformation Matrix T\n    try:\n        Cc_inv = np.linalg.inv(Cc_matrix)\n        T = Co_matrix @ Cc_inv\n    except np.linalg.LinAlgError:\n        # Cc_matrix is always invertible for this form, so this is unlikely.\n        return False\n\n    # 5. Verify non-singularity of T\n    # A large condition number indicates numerical singularity.\n    if np.linalg.cond(T) > 1 / tol:\n        return False\n\n    # 6. Compute T_inv and verify the three conditions\n    try:\n        T_inv = np.linalg.inv(T)\n    except np.linalg.LinAlgError:\n        return False\n\n    # Condition 1: Ao*T - T*Ac = 0\n    res1 = np.linalg.norm(Ao @ T - T @ Ac, 'fro')\n    \n    # Condition 2: Bo - T*Bc = 0\n    res2 = np.linalg.norm(Bo - T @ Bc, 'fro')\n    \n    # Condition 3: Co - Cc*T_inv = 0\n    res3 = np.linalg.norm(Co - Cc @ T_inv, 'fro')\n    \n    cond1_ok = res1  tol\n    cond2_ok = res2  tol\n    cond3_ok = res3  tol\n\n    return cond1_ok and cond2_ok and cond3_ok\n\n# Execute the main function\nsolve()\n```", "id": "2729219"}]}