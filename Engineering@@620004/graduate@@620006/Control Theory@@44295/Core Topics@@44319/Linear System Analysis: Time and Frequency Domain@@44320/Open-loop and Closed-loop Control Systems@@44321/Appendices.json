{"hands_on_practices": [{"introduction": "This first practice provides a foundational comparison between open-loop and closed-loop control philosophies. You will design a simple open-loop feedforward controller to meet a steady-state objective and contrast it with a closed-loop state-feedback controller designed via the powerful Linear Quadratic Regulator (LQR) method. By analyzing the poles of the resulting systems [@problem_id:2730005], you will gain a concrete understanding of how feedback uniquely empowers a designer to actively reshape a system's dynamic behavior, a feat unattainable with open-loop strategies.", "problem": "Consider the continuous-time linear time-invariant (LTI) plant with state vector $x \\in \\mathbb{R}^{2}$, input $u \\in \\mathbb{R}$, and output $y \\in \\mathbb{R}$ given by\n$$\n\\dot{x}(t) = A x(t) + B u(t), \\quad y(t) = C x(t),\n$$\nwith\n$$\nA = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}, \\quad B = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}, \\quad C = \\begin{bmatrix} 1 & 0 \\end{bmatrix}.\n$$\nYou will design a state-feedback controller using the Linear Quadratic Regulator (LQR) methodology and compare it to a purely open-loop feedforward input designed for reference tracking without state feedback.\n\nClosed-loop design task: Let the performance index be the standard infinite-horizon quadratic cost\n$$\nJ(u) = \\int_{0}^{\\infty} \\left( x(t)^{\\top} Q \\, x(t) + u(t)^{\\top} R \\, u(t) \\right) \\, dt,\n$$\nwhere $Q = I_{2}$ and $R = 1$. Using the fundamental optimal control framework (Pontryagin’s Minimum Principle and the continuous-time algebraic Riccati equation), determine the optimal state-feedback gain $K \\in \\mathbb{R}^{1 \\times 2}$ for the control law $u(t) = -K x(t)$, and compute the two closed-loop pole locations of $A - B K$.\n\nOpen-loop feedforward comparison: Consider tracking a constant reference $r \\in \\mathbb{R}$ with no state feedback by choosing a constant feedforward input $u(t) = N r$ that enforces zero steady-state error for a constant reference under ideal plant knowledge and zero disturbances. Determine the static feedforward gain $N \\in \\mathbb{R}$ from first principles (steady-state equations), and then determine the two poles governing the tracking error dynamics $e(t) = y(t) - r$ for a unit-step reference $r(t) = 1 \\cdot \\mathbf{1}_{\\{t \\ge 0\\}}$ under zero initial condition $x(0) = 0$.\n\nAnswer specification:\n- Provide your final answer as a single row matrix whose entries are, in order: $k_{1}$, $k_{2}$, $s_{\\mathrm{cl},1}$, $s_{\\mathrm{cl},2}$, $N$, $s_{\\mathrm{ol},1}$, $s_{\\mathrm{ol},2}$.\n- Do not round; provide exact analytic expressions.\n- No physical units are required.", "solution": "We begin with the closed-loop design using the Linear Quadratic Regulator (LQR). The infinite-horizon continuous-time LQR problem with dynamics $\\dot{x} = A x + B u$ and cost $J(u) = \\int_{0}^{\\infty} (x^{\\top} Q x + u^{\\top} R u) \\, dt$ admits an optimal state-feedback control $u = -K x$ where the gain $K$ is given by\n$$\nK = R^{-1} B^{\\top} P,\n$$\nand $P = P^{\\top} \\succeq 0$ is the unique stabilizing solution to the continuous-time algebraic Riccati equation (ARE):\n$$\nA^{\\top} P + P A - P B R^{-1} B^{\\top} P + Q = 0.\n$$\nThese relations arise from Pontryagin’s Minimum Principle and the Hamilton–Jacobi–Bellman framework, which ensure that the optimal co-state is linear in the state, $\\lambda = P x$, and that the stationarity condition yields $u = -R^{-1} B^{\\top} \\lambda = -R^{-1} B^{\\top} P x$.\n\nWith $A = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}$, $B = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$, $Q = I_{2}$, and $R = 1$, let\n$$\nP = \\begin{bmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{bmatrix}.\n$$\nCompute the terms in the algebraic Riccati equation:\n- First, $A^{\\top} = \\begin{bmatrix} 0 & -2 \\\\ 1 & -3 \\end{bmatrix}$.\n- Next,\n$$\nA^{\\top} P = \\begin{bmatrix} -2 p_{12} & -2 p_{22} \\\\ p_{11} - 3 p_{12} & p_{12} - 3 p_{22} \\end{bmatrix},\n\\quad\nP A = \\begin{bmatrix} -2 p_{12} & p_{11} - 3 p_{12} \\\\ -2 p_{22} & p_{12} - 3 p_{22} \\end{bmatrix}.\n$$\nThus,\n$$\nA^{\\top} P + P A = \\begin{bmatrix} -4 p_{12} & p_{11} - 3 p_{12} - 2 p_{22} \\\\ p_{11} - 3 p_{12} - 2 p_{22} & 2 p_{12} - 6 p_{22} \\end{bmatrix}.\n$$\n- Since $R = 1$ and $B B^{\\top} = \\begin{bmatrix} 0 & 0 \\\\ 0 & 1 \\end{bmatrix}$, we have\n$$\nP B R^{-1} B^{\\top} P = P B B^{\\top} P = (P B) (B^{\\top} P) = \\begin{bmatrix} p_{12} \\\\ p_{22} \\end{bmatrix} \\begin{bmatrix} p_{12} & p_{22} \\end{bmatrix} = \\begin{bmatrix} p_{12}^{2} & p_{12} p_{22} \\\\ p_{12} p_{22} & p_{22}^{2} \\end{bmatrix}.\n$$\nThe algebraic Riccati equation $A^{\\top} P + P A - P B B^{\\top} P + Q = 0$ yields the elementwise system\n$$\n\\begin{aligned}\n& (1,1): && -4 p_{12} - p_{12}^{2} + 1 = 0, \\\\\n& (1,2): && p_{11} - 3 p_{12} - 2 p_{22} - p_{12} p_{22} = 0, \\\\\n& (2,2): && 2 p_{12} - 6 p_{22} - p_{22}^{2} + 1 = 0.\n\\end{aligned}\n$$\nFrom $(1,1)$ we obtain a scalar quadratic in $p_{12}$:\n$$\np_{12}^{2} + 4 p_{12} - 1 = 0 \\quad \\Rightarrow \\quad p_{12} = -2 \\pm \\sqrt{5}.\n$$\nThe stabilizing solution $P \\succeq 0$ requires selecting $p_{12} = -2 + \\sqrt{5}$ (the alternative $p_{12} = -2 - \\sqrt{5}$ produces a nonpositive $p_{22}$ below). Using $(2,2)$,\n$$\n2 p_{12} - 6 p_{22} - p_{22}^{2} + 1 = 0 \\;\\; \\Rightarrow \\;\\; p_{22}^{2} + 6 p_{22} - (2 p_{12} + 1) = 0,\n$$\nso\n$$\np_{22} = -3 \\pm \\sqrt{9 + 2 p_{12} + 1} = -3 \\pm \\sqrt{10 + 2 p_{12}}.\n$$\nWith $p_{12} = -2 + \\sqrt{5}$,\n$$\n10 + 2 p_{12} = 10 + 2(-2 + \\sqrt{5}) = 6 + 2 \\sqrt{5} = (\\sqrt{5} + 1)^{2},\n$$\nhence\n$$\np_{22} = -3 \\pm (\\sqrt{5} + 1).\n$$\nThe positive choice is $p_{22} = -3 + (\\sqrt{5} + 1) = -2 + \\sqrt{5}$, which equals $p_{12}$. Finally, from $(1,2)$,\n$$\np_{11} = 3 p_{12} + 2 p_{22} + p_{12} p_{22} = 5 p_{12} + p_{12}^{2}.\n$$\nWith $p_{12} = -2 + \\sqrt{5}$, we compute\n$$\np_{12}^{2} = (-2 + \\sqrt{5})^{2} = 9 - 4 \\sqrt{5},\n$$\nso\n$$\np_{11} = 5(-2 + \\sqrt{5}) + (9 - 4 \\sqrt{5}) = -1 + \\sqrt{5}.\n$$\nTherefore,\n$$\nP = \\begin{bmatrix} -1 + \\sqrt{5} & -2 + \\sqrt{5} \\\\ -2 + \\sqrt{5} & -2 + \\sqrt{5} \\end{bmatrix}, \\quad\nK = R^{-1} B^{\\top} P = \\begin{bmatrix} -2 + \\sqrt{5} & -2 + \\sqrt{5} \\end{bmatrix}.\n$$\n\nWe now compute the closed-loop poles. The closed-loop matrix is\n$$\nA_{\\mathrm{cl}} = A - B K = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix} - \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} \\begin{bmatrix} -2 + \\sqrt{5} & -2 + \\sqrt{5} \\end{bmatrix} = \\begin{bmatrix} 0 & 1 \\\\ -2 - a & -3 - a \\end{bmatrix},\n$$\nwhere $a = -2 + \\sqrt{5}$. The characteristic polynomial is\n$$\n\\chi_{\\mathrm{cl}}(s) = s^{2} - \\operatorname{tr}(A_{\\mathrm{cl}}) s + \\det(A_{\\mathrm{cl}}) = s^{2} + (3 + a) s + (2 + a).\n$$\nSince $a = -2 + \\sqrt{5}$, we have $3 + a = 1 + \\sqrt{5}$ and $2 + a = \\sqrt{5}$. Hence\n$$\n\\chi_{\\mathrm{cl}}(s) = s^{2} + (1 + \\sqrt{5}) s + \\sqrt{5}.\n$$\nThe roots are\n$$\ns_{\\mathrm{cl},1,2} = \\frac{-(1 + \\sqrt{5}) \\pm \\sqrt{(1 + \\sqrt{5})^{2} - 4 \\sqrt{5}}}{2} = \\frac{-(1 + \\sqrt{5}) \\pm (\\sqrt{5} - 1)}{2},\n$$\nwhich evaluate to\n$$\ns_{\\mathrm{cl},1} = -1, \\quad s_{\\mathrm{cl},2} = -\\sqrt{5}.\n$$\n\nNext, we design the open-loop feedforward $u(t) = N r$ for a constant reference $r \\in \\mathbb{R}$ so as to achieve zero steady-state error without state feedback. For constant steady state $(\\dot{x} = 0)$,\n$$\n0 = A x_{\\mathrm{ss}} + B u_{\\mathrm{ss}}, \\quad y_{\\mathrm{ss}} = C x_{\\mathrm{ss}}.\n$$\nSolving $x_{\\mathrm{ss}} = -A^{-1} B u_{\\mathrm{ss}}$ (since $A$ is nonsingular) gives\n$$\ny_{\\mathrm{ss}} = C x_{\\mathrm{ss}} = - C A^{-1} B \\, u_{\\mathrm{ss}}.\n$$\nTo enforce $y_{\\mathrm{ss}} = r$ for arbitrary constant $r$, choose $u_{\\mathrm{ss}} = N r$ with\n$$\nN = \\left( - C A^{-1} B \\right)^{-1}.\n$$\nWe compute $A^{-1} B$ by solving $A v = B$:\n$$\n\\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix} \\begin{bmatrix} v_{1} \\\\ v_{2} \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}\n\\;\\; \\Rightarrow \\;\\; v_{2} = 0, \\; -2 v_{1} = 1 \\;\\; \\Rightarrow \\;\\; v_{1} = -\\frac{1}{2}.\n$$\nThus $A^{-1} B = \\begin{bmatrix} -\\frac{1}{2} \\\\ 0 \\end{bmatrix}$ and\n$$\n- C A^{-1} B = - \\begin{bmatrix} 1 & 0 \\end{bmatrix} \\begin{bmatrix} -\\frac{1}{2} \\\\ 0 \\end{bmatrix} = \\frac{1}{2},\n$$\nso\n$$\nN = \\left( \\frac{1}{2} \\right)^{-1} = 2.\n$$\n\nTo compare dynamical behavior, consider the tracking error $e(t) = y(t) - r(t)$ under the open-loop feedforward $u(t) = N r(t)$ for the unit step $r(t) = 1 \\cdot \\mathbf{1}_{\\{t \\ge 0\\}}$ and zero initial state $x(0) = 0$. For $t \\ge 0$, $u(t) = N$. The state obeys $\\dot{x} = A x + B N$ with constant input, and the steady state satisfies $x_{\\mathrm{ss}} = -A^{-1} B N$ and $y_{\\mathrm{ss}} = C x_{\\mathrm{ss}} = r = 1$. The error dynamics are given by\n$$\n\\dot{e}(t) = \\frac{d}{dt} \\left( C x(t) - r \\right) = C \\dot{x}(t) = C A x(t) + C B N = C A \\left( x(t) - x_{\\mathrm{ss}} \\right),\n$$\nsince $C B N = - C A x_{\\mathrm{ss}}$. Therefore $e(t)$ evolves under the homogeneous dynamics governed by $A$, and its poles are the eigenvalues of $A$, which are the roots of $s^{2} + 3 s + 2 = 0$, namely\n$$\ns_{\\mathrm{ol},1} = -1, \\quad s_{\\mathrm{ol},2} = -2.\n$$\n\nCollecting the requested quantities in the prescribed order:\n- $k_{1} = -2 + \\sqrt{5}$,\n- $k_{2} = -2 + \\sqrt{5}$,\n- $s_{\\mathrm{cl},1} = -1$,\n- $s_{\\mathrm{cl},2} = -\\sqrt{5}$,\n- $N = 2$,\n- $s_{\\mathrm{ol},1} = -1$,\n- $s_{\\mathrm{ol},2} = -2$.\n\nThis shows that the state-feedback LQR shifts one pole from $-2$ to $-\\sqrt{5}$ while leaving the other at $-1$, whereas the purely open-loop feedforward error dynamics retain the plant’s open-loop poles $-1$ and $-2$.", "answer": "$$\\boxed{\\begin{pmatrix}-2+\\sqrt{5} & -2+\\sqrt{5} & -1 & -\\sqrt{5} & 2 & -1 & -2\\end{pmatrix}}$$", "id": "2730005"}, {"introduction": "While feedback is powerful, its misapplication can lead to subtle but catastrophic failures. This exercise explores the critical concept of internal stability by examining a system with an unstable pole-zero cancellation [@problem_id:2729938]. You will discover that even if a system appears stable from the reference input to the measured output, it can be internally unstable, with hidden states that can be driven to infinity by bounded disturbances. This practice highlights the necessity of a holistic analysis to ensure true system robustness.", "problem": "Consider a Single-Input Single-Output (SISO) unity-feedback interconnection with plant and controller given by\n$$\nP(s)=\\frac{1}{s-2},\\qquad C(s)=\\frac{s-2}{s+4}.\n$$\nAssume all initial conditions are zero. The exogenous signals are the reference input $r(t)$ entering at the summing junction ($+$) and an additive disturbance $d(t)$ injected at the plant input so that the plant experiences the input $u(t)+d(t)$, where $u(t)$ is the control signal. The measured output equals the plant output $y(t)$ and the error is $e(t)=r(t)-y(t)$. The controller law is $u(t)$ generated by the operator $C(s)$ acting on $e(t)$.\n\nUsing only the definitions of unity-feedback interconnections and the unilateral Laplace transform, do the following.\n\n1. Determine whether the closed-loop interconnection is internally stable in the sense that every internal signal generated by bounded exogenous inputs remains bounded. Your reasoning must start from the algebraic interconnection implied by unity feedback, without assuming any closed-loop formula a priori.\n\n2. Now set $r(t)\\equiv 0$ and apply the bounded disturbance\n$$\nd(t)=\\exp(-t)\\quad\\text{for }t\\ge 0.\n$$\nLet $x_{p}(t)$ denote the plant state in the minimal realization of $P(s)$, which for this first-order plant coincides with the plant output $y(t)$.\nCompute the exact time-domain expression of $x_{p}(t)$ for $t\\ge 0$. Express your final answer as a closed-form analytic expression in $t$. No rounding is required, and no units are to be included.", "solution": "We address the question of internal stability based on first principles, starting from the defining algebraic equations of the feedback loop. The system is described by the following equations in the Laplace domain, assuming zero initial conditions:\n$$\nY(s) = P(s)[U(s) + D(s)]\n$$\n$$\nU(s) = C(s)E(s)\n$$\n$$\nE(s) = R(s) - Y(s)\n$$\nHere, $Y(s)$ is the plant output, $U(s)$ is the control signal, $E(s)$ is the error signal, $R(s)$ is the reference input, and $D(s)$ is the disturbance input. The plant and controller transfer functions are given as $P(s) = \\frac{1}{s-2}$ and $C(s) = \\frac{s-2}{s+4}$.\n\nInternal stability requires that every transfer function from any exogenous input ($R(s)$, $D(s)$) to any internal signal ($Y(s)$, $E(s)$, $U(s)$) be stable. That is, all poles of these transfer functions must lie in the open left-half of the complex plane.\n\nWe derive the transfer functions for the internal signals $Y(s)$ and $U(s)$ in terms of the external inputs $R(s)$ and $D(s)$. First, we solve for the output $Y(s)$ by substituting the expressions for $U(s)$ and $E(s)$:\n$$\nY(s) = P(s)[C(s)(R(s) - Y(s)) + D(s)]\n$$\n$$\nY(s) = P(s)C(s)R(s) - P(s)C(s)Y(s) + P(s)D(s)\n$$\nCollecting terms with $Y(s)$:\n$$\nY(s)(1 + P(s)C(s)) = P(s)C(s)R(s) + P(s)D(s)\n$$\nThus, the output is:\n$$\nY(s) = \\frac{P(s)C(s)}{1 + P(s)C(s)} R(s) + \\frac{P(s)}{1 + P(s)C(s)} D(s)\n$$\nNext, we solve for the control signal $U(s)$. We start from $U(s) = C(s)E(s) = C(s)(R(s) - Y(s))$ and substitute the expression for $Y(s)$:\n$$\nU(s) = C(s) \\left( R(s) - \\left[ \\frac{P(s)C(s)}{1 + P(s)C(s)} R(s) + \\frac{P(s)}{1 + P(s)C(s)} D(s) \\right] \\right)\n$$\n$$\nU(s) = C(s) \\left( \\frac{1 + P(s)C(s) - P(s)C(s)}{1 + P(s)C(s)} R(s) - \\frac{P(s)}{1 + P(s)C(s)} D(s) \\right)\n$$\n$$\nU(s) = \\frac{C(s)}{1 + P(s)C(s)} R(s) - \\frac{P(s)C(s)}{1 + P(s)C(s)} D(s)\n$$\nNow we compute the term $1 + P(s)C(s)$. Note the pole-zero cancellation in the loop gain $L(s) = P(s)C(s)$:\n$$\nL(s) = P(s)C(s) = \\left(\\frac{1}{s-2}\\right) \\left(\\frac{s-2}{s+4}\\right) = \\frac{1}{s+4}\n$$\nThe sensitivity function denominator is:\n$$\n1 + P(s)C(s) = 1 + \\frac{1}{s+4} = \\frac{s+4+1}{s+4} = \\frac{s+5}{s+4}\n$$\nWe now substitute this into the expressions for the four key transfer functions:\n1.  From reference $R(s)$ to output $Y(s)$:\n    $$T_{YR}(s) = \\frac{P(s)C(s)}{1 + P(s)C(s)} = \\frac{1/(s+4)}{(s+5)/(s+4)} = \\frac{1}{s+5}$$\n    This transfer function is stable, with a pole at $s=-5$.\n\n2.  From disturbance $D(s)$ to output $Y(s)$:\n    $$T_{YD}(s) = \\frac{P(s)}{1 + P(s)C(s)} = \\frac{1/(s-2)}{(s+5)/(s+4)} = \\frac{s+4}{(s-2)(s+5)}$$\n    This transfer function is **unstable** due to the pole at $s=2$, which originates from the unstable plant pole that was cancelled in the loop gain calculation.\n\n3.  From reference $R(s)$ to control $U(s)$:\n    $$T_{UR}(s) = \\frac{C(s)}{1 + P(s)C(s)} = \\frac{(s-2)/(s+4)}{(s+5)/(s+4)} = \\frac{s-2}{s+5}$$\n    This transfer function is stable, with a pole at $s=-5$.\n\n4.  From disturbance $D(s)$ to control $U(s)$:\n    $$T_{UD}(s) = -\\frac{P(s)C(s)}{1 + P(s)C(s)} = -\\frac{1/(s+4)}{(s+5)/(s+4)} = -\\frac{1}{s+5}$$\n    This transfer function is stable, with a pole at $s=-5$.\n\nSince the transfer function $T_{YD}(s)$ possesses a pole in the right-half plane (at $s=2$), the system is **not internally stable**. A bounded disturbance $d(t)$ can lead to an unbounded output $y(t)$. The unstable pole of the plant $P(s)$ is unobservable from the reference input $r(t)$ but is observable from the disturbance input $d(t)$.\n\nFor the second part of the problem, we must compute the time-domain expression for the plant state $x_p(t)$, which is given to be equal to the plant output $y(t)$. The conditions are $r(t) = 0$ (so $R(s)=0$) and $d(t) = \\exp(-t)$ for $t \\ge 0$. The Laplace transform of the disturbance is $D(s) = \\mathcal{L}\\{\\exp(-t)\\} = \\frac{1}{s+1}$.\n\nSince $R(s)=0$, the output $Y(s)$ is given by:\n$$\nY(s) = T_{YD}(s) D(s) = \\left( \\frac{s+4}{(s-2)(s+5)} \\right) \\left( \\frac{1}{s+1} \\right) = \\frac{s+4}{(s-2)(s+1)(s+5)}\n$$\nTo find the inverse Laplace transform $y(t)$, we perform a partial fraction expansion of $Y(s)$:\n$$\nY(s) = \\frac{A}{s-2} + \\frac{B}{s+1} + \\frac{C}{s+5}\n$$\nWe compute the residues $A$, $B$, and $C$:\n$$\nA = \\lim_{s \\to 2} (s-2)Y(s) = \\left. \\frac{s+4}{(s+1)(s+5)} \\right|_{s=2} = \\frac{2+4}{(2+1)(2+5)} = \\frac{6}{3 \\cdot 7} = \\frac{2}{7}\n$$\n$$\nB = \\lim_{s \\to -1} (s+1)Y(s) = \\left. \\frac{s+4}{(s-2)(s+5)} \\right|_{s=-1} = \\frac{-1+4}{(-1-2)(-1+5)} = \\frac{3}{(-3)(4)} = -\\frac{1}{4}\n$$\n$$\nC = \\lim_{s \\to -5} (s+5)Y(s) = \\left. \\frac{s+4}{(s-2)(s+1)} \\right|_{s=-5} = \\frac{-5+4}{(-5-2)(-5+1)} = \\frac{-1}{(-7)(-4)} = -\\frac{1}{28}\n$$\nSo, the expanded form of $Y(s)$ is:\n$$\nY(s) = \\frac{2/7}{s-2} - \\frac{1/4}{s+1} - \\frac{1/28}{s+5}\n$$\nTaking the inverse Laplace transform term by term gives $y(t)$ for $t \\ge 0$:\n$$\ny(t) = \\frac{2}{7}\\mathcal{L}^{-1}\\left\\{\\frac{1}{s-2}\\right\\} - \\frac{1}{4}\\mathcal{L}^{-1}\\left\\{\\frac{1}{s+1}\\right\\} - \\frac{1}{28}\\mathcal{L}^{-1}\\left\\{\\frac{1}{s+5}\\right\\}\n$$\n$$\ny(t) = \\frac{2}{7}\\exp(2t) - \\frac{1}{4}\\exp(-t) - \\frac{1}{28}\\exp(-5t)\n$$\nThe problem states that the plant state $x_p(t)$ is equal to the plant output $y(t)$. Therefore, the expression for $x_p(t)$ is identical. The presence of the $\\exp(2t)$ term, which grows without bound, confirms our prior conclusion of internal instability.", "answer": "$$\n\\boxed{\\frac{2}{7}\\exp(2t) - \\frac{1}{4}\\exp(-t) - \\frac{1}{28}\\exp(-5t)}\n$$", "id": "2729938"}, {"introduction": "Effective control design rarely involves a single objective; it is an art of balancing competing requirements such as performance, noise rejection, and control effort. This hands-on computational problem introduces you to the mixed-sensitivity $\\mathcal{H}_{\\infty}$ synthesis framework, a cornerstone of modern robust control for managing these trade-offs explicitly [@problem_id:2729891]. By implementing a numerical search for an optimal controller, you will gain practical experience in shaping the closed-loop response across different frequency bands to achieve a well-rounded and robust design.", "problem": "Design and implement a program that approximates a mixed-sensitivity $\\mathcal{H}_{\\infty}$ control design for single-input single-output (SISO) linear time-invariant systems by minimizing the worst-case peak of three weighted closed-loop transfer functions. The design should minimize the value of $\\gamma$ defined by\n$$\n\\gamma = \\max\\left\\{ \\left\\| W_1 S \\right\\|_{\\infty}, \\ \\left\\| W_2 T \\right\\|_{\\infty}, \\ \\left\\| W_3 C S \\right\\|_{\\infty} \\right\\},\n$$\nwhere $S$ is the sensitivity function, $T$ is the complementary sensitivity function, $C$ is the controller, and $W_1, W_2, W_3$ are stable, proper weighting transfer functions. The program must compute an approximate minimizer over a parametric controller family using frequency-domain evaluation, and report the minimized $\\gamma$ along with the controller parameters. All computations must be performed in consistent, unitless mathematical terms, and no physical units are involved. All angles are interpreted as radian frequencies.\n\nStart from the fundamental closed-loop relations for a SISO unity-feedback loop with plant $G(s)$ and controller $C(s)$, defining\n$$\nL(s) = C(s) G(s), \\quad S(s) = \\frac{1}{1 + L(s)}, \\quad T(s) = \\frac{L(s)}{1 + L(s)}, \\quad C S(s) = C(s) S(s).\n$$\nThe weighting functions $W_1(s)$, $W_2(s)$, and $W_3(s)$ are used to shape, respectively, low-frequency tracking and disturbance rejection, high-frequency noise sensitivity, and the control effort. The mixed-sensitivity $\\mathcal{H}_{\\infty}$ problem seeks to keep the peak gains (in the sense of the $\\mathcal{L}_2$-induced norm) of $W_1 S$, $W_2 T$, and $W_3 C S$ below a common bound.\n\nYour program must:\n- Restrict $C(s)$ to the first-order lead-lag family\n$$\nC(s) = k \\, \\frac{\\frac{s}{z} + 1}{\\frac{s}{p} + 1},\n$$\nwith parameters $k > 0$, $z > 0$, $p > 0$.\n- Approximate $\\left\\|\\cdot\\right\\|_{\\infty}$ on a logarithmically spaced frequency grid of $300$ points $\\omega \\in \\left[10^{-2}, 10^{3}\\right]$ by the supremum of the magnitude over this grid.\n- Enforce closed-loop internal stability by checking that the roots of the characteristic polynomial of the closed-loop denominator are strictly in the open left half-plane. Use the exact polynomial condition derived from the identity\n$$\n1 + L(s) = \\frac{D_G(s)\\left(\\frac{s}{p}+1\\right) + k \\, N_G(s)\\left(\\frac{s}{z}+1\\right)}{D_G(s)\\left(\\frac{s}{p}+1\\right)},\n$$\nwhere $G(s) = \\frac{N_G(s)}{D_G(s)}$ with real-coefficient polynomials $N_G$ and $D_G$. The closed-loop characteristic polynomial is the numerator\n$$\nD_{\\text{cl}}(s) = D_G(s)\\left(\\frac{s}{p}+1\\right) + k \\, N_G(s)\\left(\\frac{s}{z}+1\\right).\n$$\nDeclare a candidate controller admissible only if all roots of $D_{\\text{cl}}(s)$ have strictly negative real parts.\n- Minimize $\\gamma$ over a discrete parameter grid:\n  - $k \\in \\{10^{-1}, \\dots, 10^{2}\\}$ sampled at $15$ logarithmically spaced points.\n  - $z \\in \\{10^{-2}, \\dots, 10^{2}\\}$ sampled at $10$ logarithmically spaced points.\n  - $p \\in \\{10^{-2}, \\dots, 10^{2}\\}$ sampled at $10$ logarithmically spaced points.\n- For each admissible controller, compute\n$$\n\\gamma_1 = \\max_{\\omega} \\left| W_1(j\\omega) S(j\\omega) \\right|, \\quad\n\\gamma_2 = \\max_{\\omega} \\left| W_2(j\\omega) T(j\\omega) \\right|, \\quad\n\\gamma_3 = \\max_{\\omega} \\left| W_3(j\\omega) C(j\\omega) S(j\\omega) \\right|,\n$$\nand set $\\gamma = \\max\\{\\gamma_1,\\gamma_2,\\gamma_3\\}$. Select the controller that minimizes $\\gamma$.\n\nTest Suite:\nImplement the above for the following three test cases. Each test case specifies the plant $G(s)$ and the three weights $W_1(s)$, $W_2(s)$, and $W_3(s)$ as rational transfer functions given by real-coefficient polynomials.\n\n- Case A (balanced shaping, happy path):\n  - Plant: $G_1(s) = \\dfrac{5}{s^2 + s + 5}$.\n  - Weights:\n    - $W_{1,A}(s) = \\dfrac{\\frac{s}{1} + 1}{\\frac{s}{0.01} + 0.001}$,\n    - $W_{2,A}(s) = \\dfrac{\\frac{s}{10} + 0.001}{\\frac{s}{1000} + 1}$,\n    - $W_{3,A}(s) = \\dfrac{\\frac{s}{50} + 1}{\\frac{s}{5} + 0.2}$.\n\n- Case B (aggressive low-frequency tracking demand):\n  - Plant: $G_1(s) = \\dfrac{5}{s^2 + s + 5}$.\n  - Weights:\n    - $W_{1,B}(s) = \\dfrac{\\frac{s}{1} + 1}{\\frac{s}{0.01} + 0.0002}$,\n    - $W_{2,B}(s) = \\dfrac{\\frac{s}{10} + 0.001}{\\frac{s}{1000} + 1}$,\n    - $W_{3,B}(s) = \\dfrac{\\frac{s}{50} + 1}{\\frac{s}{5} + 0.2}$.\n\n- Case C (stringent high-frequency roll-off for noise):\n  - Plant: $G_2(s) = \\dfrac{3}{s^2 + 0.3 s + 9}$.\n  - Weights:\n    - $W_{1,C}(s) = \\dfrac{\\frac{s}{1} + 1}{\\frac{s}{0.02} + 0.002}$,\n    - $W_{2,C}(s) = \\dfrac{\\frac{s}{3} + 0.001}{\\frac{s}{3000} + 1}$,\n    - $W_{3,C}(s) = \\dfrac{\\frac{s}{30} + 1}{\\frac{s}{3} + 0.2}$.\n\nFor each case, your program must:\n- Search over the specified controller grid.\n- Enforce closed-loop stability by the polynomial root condition for $D_{\\text{cl}}(s)$.\n- Compute the minimizing $\\gamma$ and the corresponding $(k, z, p)$.\n\nFinal Output Format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element corresponds to one test case and is itself a bracketed list in the form $[\\gamma^\\star, k^\\star, z^\\star, p^\\star]$. Report $\\gamma^\\star$ rounded to $6$ decimal places and controller parameters rounded to $3$ decimal places. The output must be of the exact form\n$$\n\\big[ [\\gamma^\\star_A, k^\\star_A, z^\\star_A, p^\\star_A], [\\gamma^\\star_B, k^\\star_B, z^\\star_B, p^\\star_B], [\\gamma^\\star_C, k^\\star_C, z^\\star_C, p^\\star_C] \\big].\n$$\nNo additional text may be printed.", "solution": "The task is to design a first-order lead-lag controller $C(s)$ for a single-input single-output (SISO) plant $G(s)$ in a unity feedback configuration. The controller must minimize a performance index $\\gamma$, which represents the worst-case gain across three frequency-weighted closed-loop transfer functions. This is a standard formulation for balancing competing objectives in control design: performance (tracking and disturbance rejection), robustness to noise, and limitation of control effort.\n\nThe fundamental relationships governing the closed-loop system are:\nThe loop transfer function is $L(s) = C(s)G(s)$.\nThe sensitivity function, which relates output to disturbances, is $S(s) = \\frac{1}{1 + L(s)}$.\nThe complementary sensitivity function, which relates output to reference signals and sensor noise, is $T(s) = \\frac{L(s)}{1 + L(s)} = 1 - S(s)$.\nThe control effort transfer function, relating control signal to disturbances, is $C(s)S(s)$.\n\nThe controller to be designed belongs to the parametric family:\n$$\nC(s) = k \\frac{\\frac{s}{z} + 1}{\\frac{s}{p} + 1}\n$$\nwhere the parameters to be optimized are the gain $k > 0$, the zero location $z > 0$, and the pole location $p > 0$.\n\nThe objective is to minimize the performance index $\\gamma$, defined as the maximum of the $\\mathcal{H}_{\\infty}$ norms of three weighted functions:\n$$\n\\gamma = \\min_{k, z, p} \\max\\left\\{ \\left\\| W_1 S \\right\\|_{\\infty}, \\ \\left\\| W_2 T \\right\\|_{\\infty}, \\ \\left\\| W_3 C S \\right\\|_{\\infty} \\right\\}\n$$\nThe weighting functions $W_1(s)$, $W_2(s)$, and $W_3(s)$ are given and serve to penalize deviations from desired behavior in specific frequency ranges. For instance, a large-magnitude $W_1(s)$ at low frequencies enforces good tracking performance.\n\nA critical constraint is the internal stability of the closed-loop system. A candidate controller is admissible only if all roots of the closed-loop characteristic polynomial lie strictly in the open left half of the complex plane. Writing the plant as $G(s) = N_G(s)/D_G(s)$, the characteristic polynomial is the numerator of $1+L(s)$, given by:\n$$\nD_{\\text{cl}}(s) = D_G(s)\\left(\\frac{s}{p}+1\\right) + k N_G(s)\\left(\\frac{s}{z}+1\\right)\n$$\nThe roots of this polynomial must all have negative real parts.\n\nThe problem specifies a numerical approach to this optimization problem. The continuous parameter space $(k, z, p)$ is discretized into a finite grid. The $\\mathcal{H}_{\\infty}$ norm, formally defined as the supremum of the magnitude of a transfer function over the imaginary axis ($\\|H\\|_{\\infty} = \\sup_{\\omega \\in \\mathbb{R}} |H(j\\omega)|$), is approximated by taking the maximum magnitude over a discrete, logarithmically spaced frequency grid $\\omega \\in [10^{-2}, 10^{3}]$.\n\nThe solution algorithm proceeds as follows:\n1.  Define the discrete search grids for the controller parameters $k$, $z$, and $p$ as specified.\n2.  Define the frequency vector $\\omega$ for numerical evaluation.\n3.  For each test case, represent the plant $G(s)$ and weighting functions $W_1(s)$, $W_2(s)$, $W_3(s)$ as rational functions defined by their numerator and denominator polynomials.\n4.  Iterate through every triplet $(k, z, p)$ in the parameter grid.\n5.  For each triplet, construct the closed-loop characteristic polynomial $D_{\\text{cl}}(s)$. Compute its roots using a numerical algorithm. If any root has a non-negative real part, the controller is discarded as it leads to an unstable system.\n6.  If the controller is admissible (i.e., guarantees stability), evaluate the frequency responses $G(j\\omega)$, $C(j\\omega)$, $W_1(j\\omega)$, $W_2(j\\omega)$, and $W_3(j\\omega)$ over the frequency grid.\n7.  From these, compute the frequency responses of the sensitivity functions $S(j\\omega)$ and $T(j\\omega)$.\n8.  Calculate the magnitudes $|W_1(j\\omega)S(j\\omega)|$, $|W_2(j\\omega)T(j\\omega)|$, and $|W_3(j\\omega)C(j\\omega)S(j\\omega)|$ for all frequencies in the grid.\n9.  Find the maximum value of each of these three magnitude vectors, yielding the approximate norms $\\gamma_1$, $\\gamma_2$, and $\\gamma_3$. The performance index for the current controller is $\\gamma = \\max\\{\\gamma_1, \\gamma_2, \\gamma_3\\}$.\n10. Compare this $\\gamma$ with the minimum $\\gamma$ found so far. If it is lower, update the minimum $\\gamma$ and store the current $(k, z, p)$ as the best parameters found.\n11. After searching the entire grid, the resulting parameters $(k^\\star, z^\\star, p^\\star)$ and the minimum cost $\\gamma^\\star$ constitute the solution for the given test case.\n\nThis systematic search guarantees finding the optimal controller within the confines of the specified discrete grid and frequency-domain approximation. The implementation will use the `numpy` library for polynomial arithmetic, root finding, and array operations.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Performs a grid search to find an approximate mixed-sensitivity H-infinity\n    controller for three different test cases.\n    \"\"\"\n    # Define the frequency grid for evaluation\n    omega = np.logspace(-2, 3, 300)\n    s = 1j * omega\n\n    # Define the parameter grids for the controller C(s) = k * (s/z + 1) / (s/p + 1)\n    k_grid = np.logspace(-1, 2, 15)\n    z_grid = np.logspace(-2, 2, 10)\n    p_grid = np.logspace(-2, 2, 10)\n\n    # Define the test cases with plant and weight transfer functions\n    # Transfer functions are represented by numerator and denominator polynomial objects\n    test_cases = [\n        # Case A\n        {\n            \"G_num\": np.poly1d([5]),\n            \"G_den\": np.poly1d([1, 1, 5]),\n            \"W1_num\": np.poly1d([1, 1]),\n            \"W1_den\": np.poly1d([1/0.01, 0.001]),\n            \"W2_num\": np.poly1d([1/10, 0.001]),\n            \"W2_den\": np.poly1d([1/1000, 1]),\n            \"W3_num\": np.poly1d([1/50, 1]),\n            \"W3_den\": np.poly1d([1/5, 0.2]),\n        },\n        # Case B\n        {\n            \"G_num\": np.poly1d([5]),\n            \"G_den\": np.poly1d([1, 1, 5]),\n            \"W1_num\": np.poly1d([1, 1]),\n            \"W1_den\": np.poly1d([1/0.01, 0.0002]),\n            \"W2_num\": np.poly1d([1/10, 0.001]),\n            \"W2_den\": np.poly1d([1/1000, 1]),\n            \"W3_num\": np.poly1d([1/50, 1]),\n            \"W3_den\": np.poly1d([1/5, 0.2]),\n        },\n        # Case C\n        {\n            \"G_num\": np.poly1d([3]),\n            \"G_den\": np.poly1d([1, 0.3, 9]),\n            \"W1_num\": np.poly1d([1, 1]),\n            \"W1_den\": np.poly1d([1/0.02, 0.002]),\n            \"W2_num\": np.poly1d([1/3, 0.001]),\n            \"W2_den\": np.poly1d([1/3000, 1]),\n            \"W3_num\": np.poly1d([1/30, 1]),\n            \"W3_den\": np.poly1d([1/3, 0.2]),\n        },\n    ]\n\n    all_results = []\n\n    for case in test_cases:\n        G_num, G_den = case[\"G_num\"], case[\"G_den\"]\n        W1_num, W1_den = case[\"W1_num\"], case[\"W1_den\"]\n        W2_num, W2_den = case[\"W2_num\"], case[\"W2_den\"]\n        W3_num, W3_den = case[\"W3_num\"], case[\"W3_den\"]\n\n        # Pre-evaluate frequency responses of G and weights\n        G_jw = G_num(s) / G_den(s)\n        W1_jw = W1_num(s) / W1_den(s)\n        W2_jw = W2_num(s) / W2_den(s)\n        W3_jw = W3_num(s) / W3_den(s)\n\n        min_gamma = float('inf')\n        best_params = None\n\n        for k in k_grid:\n            for z in z_grid:\n                for p in p_grid:\n                    # Construct characteristic polynomial for stability check\n                    # D_cl(s) = D_G(s)*(s/p+1) + k * N_G(s)*(s/z+1)\n                    controller_pole_term = np.poly1d([1/p, 1])\n                    controller_zero_term = np.poly1d([1/z, 1])\n                    D_cl_poly = G_den * controller_pole_term + k * G_num * controller_zero_term\n\n                    # Check for stability\n                    roots = np.roots(D_cl_poly.coeffs)\n                    if np.any(np.real(roots) >= -1e-9):  # Strict check, with tolerance for numerics\n                        continue  # Skip if unstable or marginally stable\n\n                    # Controller is admissible, evaluate performance\n                    C_num_jw = k * (s/z + 1)\n                    C_den_jw = s/p + 1\n                    C_jw = C_num_jw / C_den_jw\n                    \n                    L_jw = C_jw * G_jw\n                    S_jw = 1 / (1 + L_jw)\n                    T_jw = 1 - S_jw\n\n                    # Approximate H-infinity norms\n                    gamma1 = np.max(np.abs(W1_jw * S_jw))\n                    gamma2 = np.max(np.abs(W2_jw * T_jw))\n                    gamma3 = np.max(np.abs(W3_jw * C_jw * S_jw))\n                    \n                    gamma = max(gamma1, gamma2, gamma3)\n\n                    # Update best result\n                    if gamma < min_gamma:\n                        min_gamma = gamma\n                        best_params = (k, z, p)\n        \n        if best_params:\n            k_star, z_star, p_star = best_params\n            result = [\n                round(min_gamma, 6),\n                round(k_star, 3),\n                round(z_star, 3),\n                round(p_star, 3)\n            ]\n            all_results.append(result)\n\n    # Format output string without spaces for precision.\n    output_str = f\"[{','.join([f'[{r[0]},{r[1]},{r[2]},{r[3]}]' for r in all_results])}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2729891"}]}