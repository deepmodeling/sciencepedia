{"hands_on_practices": [{"introduction": "Mastering observer design begins with a solid grasp of the fundamentals. This first exercise provides a foundational walkthrough of the pole placement technique for a Luenberger observer. By working through this problem, you will derive the observer error dynamics and calculate the gain matrix $L$ that places the eigenvalues of the error system at desired locations, ensuring the estimation error converges as specified [@problem_id:2699826].", "problem": "Consider the continuous-time, finite-dimensional Linear Time-Invariant (LTI) system described by the state-space model\n$$\n\\dot{x}(t) = A x(t), \\quad y(t) = C x(t),\n$$\nwhere $A = \\begin{bmatrix} 1 & 2 \\\\ 0 & 1 \\end{bmatrix}$ and $C = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$. A full-order Luenberger observer is defined as\n$$\n\\dot{\\hat{x}}(t) = A \\hat{x}(t) + L \\big(y(t) - C \\hat{x}(t)\\big),\n$$\nwith observer gain $L \\in \\mathbb{R}^{2 \\times 1}$. Starting from the definitions of the observer and the estimation error $e(t) \\triangleq x(t) - \\hat{x}(t)$, derive the error dynamics and use them to determine the observer gain $L$ that places the observer error dynamics eigenvalues at the real locations $\\{-2,-3\\}$. Then, verify by explicit computation that the resulting matrix $A - L C$ has the desired characteristic polynomial.\n\nProvide the entries of $L$ as a single row matrix. No rounding is required. The final answer must be given as a single analytical expression. Do not include any units in your final answer.", "solution": "**Step 1: Extracted Givens**\n- System model: $\\dot{x}(t) = A x(t)$, $y(t) = C x(t)$.\n- System matrix: $A = \\begin{bmatrix} 1 & 2 \\\\ 0 & 1 \\end{bmatrix}$.\n- Output matrix: $C = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$.\n- Full-order Luenberger observer: $\\dot{\\hat{x}}(t) = A \\hat{x}(t) + L \\big(y(t) - C \\hat{x}(t)\\big)$.\n- Observer gain: $L \\in \\mathbb{R}^{2 \\times 1}$.\n- Estimation error definition: $e(t) \\triangleq x(t) - \\hat{x}(t)$.\n- Desired eigenvalues for error dynamics: $\\{-2, -3\\}$.\n\n**Step 2: Validation**\nThe problem is a standard exercise in linear control theory. The core task is to design an observer by pole placement. A necessary and sufficient condition for the arbitrary placement of observer error eigenvalues is that the system must be completely observable. The observability of the pair $(A, C)$ is determined by the rank of the observability matrix $\\mathcal{O}$.\nThe observability matrix is constructed as $\\mathcal{O} = \\begin{bmatrix} C \\\\ CA \\end{bmatrix}$.\nWe compute the product $CA$:\n$$\nCA = \\begin{bmatrix} 1 & 0 \\end{bmatrix} \\begin{bmatrix} 1 & 2 \\\\ 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 1 & 2 \\end{bmatrix}\n$$\nThe observability matrix is therefore:\n$$\n\\mathcal{O} = \\begin{bmatrix} 1 & 0 \\\\ 1 & 2 \\end{bmatrix}\n$$\nThe determinant of $\\mathcal{O}$ is $\\det(\\mathcal{O}) = (1)(2) - (0)(1) = 2$. Since $\\det(\\mathcal{O}) \\neq 0$, the matrix has full rank, which is $2$. The system state dimension is $n=2$, so the system is completely observable. This guarantees that a gain matrix $L$ exists that can place the eigenvalues of the error dynamics at any desired location. The problem is thus scientifically grounded, well-posed, and complete.\n\n**Verdict:** The problem is valid. A solution will be constructed.\n\n**Solution Derivation**\nFirst, we derive the dynamics of the estimation error $e(t) = x(t) - \\hat{x}(t)$. We differentiate $e(t)$ with respect to time $t$:\n$$\n\\dot{e}(t) = \\dot{x}(t) - \\dot{\\hat{x}}(t)\n$$\nSubstitute the given state and observer dynamics:\n$$\n\\dot{e}(t) = A x(t) - \\left[ A \\hat{x}(t) + L \\big(y(t) - C \\hat{x}(t)\\big) \\right]\n$$\nSubstitute the output equation $y(t) = C x(t)$:\n$$\n\\dot{e}(t) = A x(t) - A \\hat{x}(t) - L \\big(C x(t) - C \\hat{x}(t)\\big)\n$$\nFactor out common terms:\n$$\n\\dot{e}(t) = A \\big(x(t) - \\hat{x}(t)\\big) - L C \\big(x(t) - \\hat{x}(t)\\big)\n$$\nUsing the definition of the error $e(t)$, we obtain the error dynamics:\n$$\n\\dot{e}(t) = (A - LC)e(t)\n$$\nThe stability and response of the observer error are determined by the eigenvalues of the matrix $A - LC$. The problem requires placing these eigenvalues at $\\{-2, -3\\}$.\n\nThe desired characteristic polynomial $p_{des}(\\lambda)$ for the error dynamics matrix is:\n$$\np_{des}(\\lambda) = (\\lambda - (-2))(\\lambda - (-3)) = (\\lambda + 2)(\\lambda + 3) = \\lambda^2 + 5\\lambda + 6\n$$\nNow, we compute the actual characteristic polynomial $p_{act}(\\lambda)$ of $A - LC$ in terms of the components of $L$. Let $L$ be a column vector with entries $l_1$ and $l_2$:\n$$\nL = \\begin{bmatrix} l_1 \\\\ l_2 \\end{bmatrix}\n$$\nThe product $LC$ is:\n$$\nLC = \\begin{bmatrix} l_1 \\\\ l_2 \\end{bmatrix} \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} l_1 & 0 \\\\ l_2 & 0 \\end{bmatrix}\n$$\nThe error dynamics matrix $A - LC$ is:\n$$\nA - LC = \\begin{bmatrix} 1 & 2 \\\\ 0 & 1 \\end{bmatrix} - \\begin{bmatrix} l_1 & 0 \\\\ l_2 & 0 \\end{bmatrix} = \\begin{bmatrix} 1 - l_1 & 2 \\\\ -l_2 & 1 \\end{bmatrix}\n$$\nThe characteristic polynomial $p_{act}(\\lambda)$ is $\\det(\\lambda I - (A - LC))$:\n$$\n\\begin{aligned}\np_{act}(\\lambda) &= \\det \\left( \\begin{bmatrix} \\lambda & 0 \\\\ 0 & \\lambda \\end{bmatrix} - \\begin{bmatrix} 1 - l_1 & 2 \\\\ -l_2 & 1 \\end{bmatrix} \\right) \\\\\n&= \\det \\begin{bmatrix} \\lambda - (1 - l_1) & -2 \\\\ l_2 & \\lambda - 1 \\end{bmatrix} \\\\\n&= (\\lambda - 1 + l_1)(\\lambda - 1) - (-2)(l_2) \\\\\n&= \\lambda^2 - \\lambda + l_1\\lambda - \\lambda + 1 - l_1 + 2l_2 \\\\\n&= \\lambda^2 + (l_1 - 2)\\lambda + (1 - l_1 + 2l_2)\n\\end{aligned}\n$$\nTo achieve the desired eigenvalue placement, we equate the coefficients of $p_{act}(\\lambda)$ and $p_{des}(\\lambda)$:\n$$\n\\lambda^2 + (l_1 - 2)\\lambda + (1 - l_1 + 2l_2) = \\lambda^2 + 5\\lambda + 6\n$$\nComparing the coefficients for the powers of $\\lambda$:\n1.  Coefficient of $\\lambda^1$: $l_1 - 2 = 5 \\implies l_1 = 7$.\n2.  Coefficient of $\\lambda^0$: $1 - l_1 + 2l_2 = 6$.\n\nSubstitute $l_1 = 7$ into the second equation:\n$$\n1 - 7 + 2l_2 = 6 \\implies -6 + 2l_2 = 6 \\implies 2l_2 = 12 \\implies l_2 = 6\n$$\nThus, the observer gain matrix is:\n$$\nL = \\begin{bmatrix} 7 \\\\ 6 \\end{bmatrix}\n$$\nFinally, we verify by explicit computation that the resulting matrix $A - LC$ has the desired characteristic polynomial. With $l_1=7$ and $l_2=6$, the matrix is:\n$$\nA - LC = \\begin{bmatrix} 1 - 7 & 2 \\\\ -6 & 1 \\end{bmatrix} = \\begin{bmatrix} -6 & 2 \\\\ -6 & 1 \\end{bmatrix}\n$$\nThe characteristic polynomial of this matrix is:\n$$\n\\det(\\lambda I - (A-LC)) = \\det \\begin{bmatrix} \\lambda + 6 & -2 \\\\ 6 & \\lambda - 1 \\end{bmatrix} = (\\lambda + 6)(\\lambda - 1) - (-2)(6) = \\lambda^2 - \\lambda + 6\\lambda - 6 + 12 = \\lambda^2 + 5\\lambda + 6\n$$\nThis polynomial is identical to the desired polynomial $p_{des}(\\lambda)$. The roots of $\\lambda^2 + 5\\lambda + 6 = 0$ are $\\lambda = -2$ and $\\lambda = -3$. The verification is complete and successful. The observer gain L has been correctly determined. The problem requests the entries of $L$ as a single row matrix. These are the values $7$ and $6$.", "answer": "$$\n\\boxed{\\begin{bmatrix} 7 & 6 \\end{bmatrix}}\n$$", "id": "2699826"}, {"introduction": "A successful observer design hinges on key system properties, and not all systems allow for arbitrary pole placement. This exercise explores the crucial distinction between observability and detectability, demonstrating that a stable observer can be designed even if the system is not fully observable. You will analyze a system with an unobservable but stable mode and then design a gain $L$ to place the remaining, 'movable' poles, solidifying your understanding of why detectability is the sufficient condition for observer stabilization [@problem_id:2699844].", "problem": "Consider the continuous-time Linear Time-Invariant (LTI) system with state matrix $A \\in \\mathbb{R}^{3 \\times 3}$ and output matrix $C \\in \\mathbb{R}^{1 \\times 3}$ given by\n$$\nA = \\begin{bmatrix}\n0 & 1 & 0 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & -1\n\\end{bmatrix}, \n\\quad\nC = \\begin{bmatrix}\n1 & 0 & 0\n\\end{bmatrix}.\n$$\nYou are told nothing about the input matrix or the input signal because the full-order Luenberger observer error dynamics do not depend on them.\n\nUsing only foundational definitions from linear systems theory, complete the following tasks.\n\n1. Using the definition of observability based on the classical observability matrix, determine whether the pair $(C,A)$ is observable. Then, using the definition of detectability (that all unobservable modes must be asymptotically stable), determine whether $(C,A)$ is detectable.\n\n2. Consider a full-order Luenberger observer of the form\n$$\n\\dot{\\hat{x}} = A \\hat{x} + L\\,(y - C \\hat{x}),\n$$\nwhere $\\hat{x} \\in \\mathbb{R}^{3}$ is the state estimate, $y \\in \\mathbb{R}$ is the measured output, and $L \\in \\mathbb{R}^{3 \\times 1}$ is the observer gain to be designed. Derive the error dynamics for $e := x - \\hat{x}$ and show how the eigenvalues of the error system depend on $L$.\n\n3. Design an observer gain $L = \\begin{bmatrix} \\ell_{1} \\\\ \\ell_{2} \\\\ \\ell_{3} \\end{bmatrix}$ such that the error dynamics are asymptotically stable and the two movable observer error eigenvalues (associated with the observable subspace) are placed at $-2$ and $-3$. Among all such $L$, choose $\\ell_{3}$ to minimize the Euclidean norm of $L$.\n\nReport the value of $\\ell_{1} + \\ell_{2}$ as a pure number. No rounding is required, and no units are associated with this quantity. Your final answer must be a single real number.", "solution": "The problem as stated is scientifically grounded, well-posed, objective, and contains all necessary information for a unique solution. It is a standard problem in linear control theory. Thus, the problem is valid and a solution will be provided.\n\nThe analysis is partitioned into the three tasks specified in the problem statement.\n\nTask $1$: Observability and Detectability Analysis\n\nFirst, we determine if the pair $(C,A)$ is observable. A system is completely observable if and only if the observability matrix $\\mathcal{O}$ has full column rank, which is $n=3$ in this case. The observability matrix for a system of dimension $n$ is given by\n$$\n\\mathcal{O} = \\begin{bmatrix} C \\\\ CA \\\\ \\vdots \\\\ CA^{n-1} \\end{bmatrix}\n$$\nFor this system, $n=3$, so we need to compute $C$, $CA$, and $CA^2$. The given matrices are:\n$$\nA = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix}, \\quad C = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix}\n$$\nWe compute the products:\n$$\nCA = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix} = \\begin{bmatrix} 0 & 1 & 0 \\end{bmatrix}\n$$\n$$\nA^2 = A \\cdot A = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix} \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix} = \\begin{bmatrix} 0 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\n$$\nCA^2 = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} \\begin{bmatrix} 0 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 0 & 0 & 0 \\end{bmatrix}\n$$\nThe observability matrix is therefore\n$$\n\\mathcal{O} = \\begin{bmatrix} C \\\\ CA \\\\ CA^2 \\end{bmatrix} = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 0 \\end{bmatrix}\n$$\nThe rank of $\\mathcal{O}$ is $\\text{rank}(\\mathcal{O}) = 2$, which is less than the state dimension $n=3$. Therefore, the system is **not observable**.\n\nNext, we determine if the pair $(C,A)$ is detectable. A system is detectable if all of its unobservable modes are asymptotically stable. We can identify the unobservable modes using the Popov-Hautus-Belevitch (PHB) test. An eigenvalue $\\lambda$ of $A$ corresponds to an unobservable mode if and only if $\\text{rank} \\begin{bmatrix} A - \\lambda I \\\\ C \\end{bmatrix} < n$.\n\nThe eigenvalues of $A$ are its diagonal entries, as $A$ is an upper triangular matrix: $\\lambda_1 = 0$ (with algebraic multiplicity $2$) and $\\lambda_2 = -1$.\n\nLet's test each eigenvalue:\nFor $\\lambda = 0$:\n$$\n\\begin{bmatrix} A - 0I \\\\ C \\end{bmatrix} = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\\\ \\hline 1 & 0 & 0 \\end{bmatrix}\n$$\nThis matrix has rank $3$, as can be seen from the non-zero determinant of the submatrix formed by rows $1$, $3$, and $4$: $\\det \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & -1 \\\\ 1 & 0 & 0 \\end{bmatrix} = -1 \\neq 0$. Thus, the modes associated with $\\lambda=0$ are observable.\n\nFor $\\lambda = -1$:\n$$\n\\begin{bmatrix} A - (-1)I \\\\ C \\end{bmatrix} = \\begin{bmatrix} 1 & 1 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ \\hline 1 & 0 & 0 \\end{bmatrix}\n$$\nThe third row is all zeros, so the rank of this $4 \\times 3$ matrix is at most $2$. For instance, the first two rows are linearly independent, so the rank is exactly $2$. Since $\\text{rank}\\begin{bmatrix} A - (-1)I \\\\ C \\end{bmatrix} = 2 < 3$, the mode corresponding to the eigenvalue $\\lambda = -1$ is unobservable.\n\nThe only unobservable mode is $\\lambda = -1$. According to the definition of detectability, we check if this mode is asymptotically stable. A mode $\\lambda$ is asymptotically stable if $\\text{Re}(\\lambda) < 0$. Here, $\\text{Re}(-1) = -1 < 0$. Since the only unobservable mode is asymptotically stable, the system is **detectable**.\n\nTask $2$: Observer Error Dynamics\n\nThe system and observer dynamics are given by:\n$$\n\\dot{x} = Ax + Bu \\quad (\\text{general system})\n$$\n$$\ny = Cx\n$$\n$$\n\\dot{\\hat{x}} = A \\hat{x} + L(y - C \\hat{x})\n$$\nThe problem statement correctly indicates that the term $Bu$ from the plant dynamics is handled in the full observer equation $\\dot{\\hat{x}} = A\\hat{x} + Bu + L(y - C\\hat{x})$, which simplifies the error dynamics derivation. The estimation error is defined as $e(t) = x(t) - \\hat{x}(t)$. Its derivative is $\\dot{e} = \\dot{x} - \\dot{\\hat{x}}$. Substituting the system and observer equations (with the $Bu$ term included for completeness):\n$$\n\\dot{e} = (Ax + Bu) - (A\\hat{x} + Bu + L(y - C\\hat{x}))\n$$\n$$\n\\dot{e} = Ax - A\\hat{x} - L(Cx - C\\hat{x})\n$$\n$$\n\\dot{e} = A(x - \\hat{x}) - LC(x - \\hat{x})\n$$\n$$\n\\dot{e} = (A - LC)e\n$$\nThis is the linear time-invariant differential equation governing the error dynamics. The stability of the observer is determined by the eigenvalues of the matrix $A_{obs} = A - LC$. Let $L = \\begin{bmatrix} \\ell_1 \\\\ \\ell_2 \\\\ \\ell_3 \\end{bmatrix}$. We compute $A - LC$:\n$$\nA - LC = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix} - \\begin{bmatrix} \\ell_1 \\\\ \\ell_2 \\\\ \\ell_3 \\end{bmatrix} \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix}\n$$\n$$\nA - LC = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix} - \\begin{bmatrix} \\ell_1 & 0 & 0 \\\\ \\ell_2 & 0 & 0 \\\\ \\ell_3 & 0 & 0 \\end{bmatrix} = \\begin{bmatrix} -\\ell_1 & 1 & 0 \\\\ -\\ell_2 & 0 & 0 \\\\ -\\ell_3 & 0 & -1 \\end{bmatrix}\n$$\nThe eigenvalues of the error system are the roots of the characteristic polynomial $\\det(\\lambda I - (A - LC)) = 0$.\n$$\n\\det \\begin{bmatrix} \\lambda + \\ell_1 & -1 & 0 \\\\ \\ell_2 & \\lambda & 0 \\\\ \\ell_3 & 0 & \\lambda + 1 \\end{bmatrix} = (\\lambda + 1) \\det \\begin{bmatrix} \\lambda + \\ell_1 & -1 \\\\ \\ell_2 & \\lambda \\end{bmatrix}\n$$\n$$\n= (\\lambda + 1) [(\\lambda + \\ell_1)\\lambda - (-1)\\ell_2] = (\\lambda + 1) (\\lambda^2 + \\ell_1 \\lambda + \\ell_2)\n$$\nThe eigenvalues of the error dynamics are $\\lambda = -1$ and the two roots of the quadratic equation $\\lambda^2 + \\ell_1 \\lambda + \\ell_2 = 0$. The eigenvalue at $-1$ is fixed and corresponds to the unobservable mode of the system. The other two eigenvalues can be placed arbitrarily by choosing $\\ell_1$ and $\\ell_2$, since the pair $(C,A)$ is detectable. The gain component $\\ell_3$ does not influence the eigenvalues.\n\nTask $3$: Observer Gain Design\n\nWe are required to place the two movable observer error eigenvalues at $-2$ and $-3$. The desired characteristic polynomial for these two eigenvalues is:\n$$\n(\\lambda - (-2))(\\lambda - (-3)) = (\\lambda + 2)(\\lambda + 3) = \\lambda^2 + 5\\lambda + 6\n$$\nBy comparing the coefficients of this polynomial with the movable part of the observer's characteristic polynomial, $\\lambda^2 + \\ell_1 \\lambda + \\ell_2$, we find the values for $\\ell_1$ and $\\ell_2$:\n$$\n\\ell_1 = 5\n$$\n$$\n\\ell_2 = 6\n$$\nThe total set of eigenvalues for the error dynamics is $\\{-1, -2, -3\\}$. Since all eigenvalues have negative real parts, the error dynamics are asymptotically stable, i.e., $e(t) \\to 0$ as $t \\to \\infty$.\n\nThe observer gain vector is $L = \\begin{bmatrix} 5 \\\\ 6 \\\\ \\ell_3 \\end{bmatrix}$. We must choose $\\ell_3$ to minimize the Euclidean norm of $L$, denoted $\\|L\\|_2$. The squared norm is:\n$$\n\\|L\\|_2^2 = \\ell_1^2 + \\ell_2^2 + \\ell_3^2 = 5^2 + 6^2 + \\ell_3^2 = 25 + 36 + \\ell_3^2 = 61 + \\ell_3^2\n$$\nTo minimize $\\|L\\|_2$, we must minimize $\\|L\\|_2^2$. The expression $61 + \\ell_3^2$ is a simple quadratic in $\\ell_3$, which achieves its minimum value when $\\ell_3^2$ is minimal. As $\\ell_3$ is a real number, the minimum value of $\\ell_3^2$ is $0$, which occurs at $\\ell_3 = 0$.\nThus, the gain vector that satisfies all conditions is $L = \\begin{bmatrix} 5 \\\\ 6 \\\\ 0 \\end{bmatrix}$.\n\nThe problem asks for the value of $\\ell_1 + \\ell_2$.\n$$\n\\ell_1 + \\ell_2 = 5 + 6 = 11\n$$\nThis is the final numerical result.", "answer": "$$\\boxed{11}$$", "id": "2699844"}, {"introduction": "Real-world systems are invariably affected by noise, prompting a shift from purely deterministic design to methods that account for stochastic effects. This practice challenges you to compare two powerful observer design philosophies: deterministic pole placement and optimal estimation in the presence of noise, which is central to the Kalman filter. By implementing both designs and evaluating their performance through metrics like stability margins and noise sensitivity, you will gain practical insight into the fundamental trade-offs between transient response and noise rejection in modern control engineering [@problem_id:2699797].", "problem": "Design and compare two full-order Luenberger observer gains for continuous-time linear time-invariant systems using two approaches: pole placement and an optimization grounded in a Linear Matrix Inequality (LMI) objective. Work from first principles of linear systems and stochastic processes, avoiding any shortcut formulas in the problem statement. The observer is to be designed for a plant with state equation $\\dot{x}(t) = A x(t) + w(t)$ and measurement equation $y(t) = C x(t) + v(t)$, where $x(t) \\in \\mathbb{R}^n$, $y(t) \\in \\mathbb{R}^p$, and $w(t)$ and $v(t)$ are mutually independent zero-mean white noises with covariance matrices $W \\succeq 0$ and $R \\succ 0$, respectively. A full-order Luenberger observer has the form $\\dot{\\hat{x}}(t) = A \\hat{x}(t) + L(y(t) - C \\hat{x}(t))$, where $L \\in \\mathbb{R}^{n \\times p}$ is the observer gain to be designed. The estimation error $e(t) = x(t) - \\hat{x}(t)$ then follows deterministic error dynamics perturbed by noise inputs, and its stability and noise sensitivity must be assessed.\n\nYou must, for each test case, compute two gains:\n- A gain $L_{\\mathrm{pp}}$ obtained by pole placement so that the eigenvalues of $A - L_{\\mathrm{pp}} C$ are equal to a given set of stable target locations.\n- A gain $L_{\\mathrm{lmi}}$ obtained by solving the standard estimation problem that minimizes the steady-state estimation error covariance induced by the white noises with covariances $W$ and $R$; this is the classical Linear Quadratic Gaussian (LQG) estimator design framed as an optimization with a Linear Matrix Inequality (LMI) objective. The solution must be stabilizing.\n\nFor each gain, evaluate:\n- The spectral Lyapunov decay rate $\\alpha_{\\mathrm{spec}}$, defined as the largest nonnegative real number such that $\\mathrm{Re}(\\lambda_i(A - L C)) \\le -\\alpha_{\\mathrm{spec}}$ for all eigenvalues $\\lambda_i$ of $A - L C$. Equivalently, $\\alpha_{\\mathrm{spec}} = -\\max_i \\mathrm{Re}(\\lambda_i(A - L C))$.\n- The squared noise-to-error gains $g_w^2$ and $g_v^2$, defined as the squared $\\mathcal{H}_2$ norms from $w$ to $e$ and from $v$ to $e$, respectively, for the stable linear time-invariant error system $\\dot{e}(t) = (A - L C) e(t) + w(t) - L v(t)$ with output equal to $e(t)$. These are well-defined for stable $(A - L C)$ and may be computed from the stationary covariance solutions induced by each noise channel.\n\nBase your derivations on the following fundamental principles:\n- The solution of linear time-invariant systems and the relation of eigenvalues to exponential stability.\n- The definition of observability and the fact that an observable pair $(A, C)$ permits arbitrary assignment of the eigenvalues of $A - L C$ by appropriate choice of $L$.\n- The definition of the steady-state covariance of a stable linear system driven by white noise and its characterization via the continuous-time Lyapunov equation.\n\nYour program must implement these computations numerically for the following test suite. Each test case consists of matrices $A$, $C$, covariances $W$, $R$, and a desired pole set for the pole placement design. All numbers are real and dimensionally consistent.\n\nTest case $1$:\n- $A = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ -3 & -3 & -1 \\end{bmatrix}$,\n- $C = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\end{bmatrix}$,\n- $W = 0.1 \\, I_3$,\n- $R = 0.05 \\, I_2$,\n- desired poles for $A - L_{\\mathrm{pp}} C$: $\\{-2, -3, -4\\}$.\n\nTest case $2$:\n- $A = \\begin{bmatrix} 0 & 1 & 0 \\\\ -2 & -0.2 & 0 \\\\ 0 & 0 & -0.5 \\end{bmatrix}$,\n- $C = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$,\n- $W = \\mathrm{diag}(0.5, 0.1, 0.2)$,\n- $R = \\mathrm{diag}(0.2, 0.05)$,\n- desired poles for $A - L_{\\mathrm{pp}} C$: $\\{-1, -2, -3\\}$.\n\nTest case $3$:\n- $A = \\begin{bmatrix} 0 & 1 \\\\ -4 & -1 \\end{bmatrix}$,\n- $C = \\begin{bmatrix} 1 & 1 \\end{bmatrix}$,\n- $W = \\begin{bmatrix} 0.1 & 0 \\\\ 0 & 0.3 \\end{bmatrix}$,\n- $R = \\begin{bmatrix} 0.1 \\end{bmatrix}$,\n- desired poles for $A - L_{\\mathrm{pp}} C$: $\\{-2.5, -3.0\\}$.\n\nFor each test case, compute:\n- For $L_{\\mathrm{pp}}$: the triple $(\\alpha_{\\mathrm{spec}}, g_w^2, g_v^2)$.\n- For $L_{\\mathrm{lmi}}$: the triple $(\\alpha_{\\mathrm{spec}}, g_w^2, g_v^2)$.\n\nNumerical details and definitions to be used for evaluation:\n- The spectral Lyapunov decay rate is $\\alpha_{\\mathrm{spec}} = -\\max_i \\mathrm{Re}(\\lambda_i(A - L C))$.\n- For the squared noise gains, define $A_L = A - L C$. For the $w$-channel, define $g_w^2 = \\mathrm{trace}(P_w)$, where $P_w$ is the unique symmetric solution to $A_L P_w + P_w A_L^\\top + W = 0$. For the $v$-channel, define $g_v^2 = \\mathrm{trace}(P_v)$, where $P_v$ solves $A_L P_v + P_v A_L^\\top + L R L^\\top = 0$.\n\nFinal output format for the program:\n- The program should produce a single line of output containing a list with $3$ entries, one per test case. Each test case entry is itself a list of $6$ floating-point numbers in the following order: $[\\alpha_{\\mathrm{spec}}(L_{\\mathrm{pp}}), g_w^2(L_{\\mathrm{pp}}), g_v^2(L_{\\mathrm{pp}}), \\alpha_{\\mathrm{spec}}(L_{\\mathrm{lmi}}), g_w^2(L_{\\mathrm{lmi}}), g_v^2(L_{\\mathrm{lmi}})]$.\n- All floating-point numbers must be rounded to $6$ decimal places.\n- The output must have no spaces, for example, an admissible structure is $[[a_1,a_2,a_3,a_4,a_5,a_6],[b_1,b_2,b_3,b_4,b_5,b_6],[c_1,c_2,c_3,c_4,c_5,c_6]]$.\n\nNo physical units or angles are involved; all quantities are dimensionless real numbers. Your program must be entirely self-contained and must not require any user input.", "solution": "The problem presented requires the design and comparative evaluation of two full-order Luenberger observer gains for continuous-time linear time-invariant (LTI) systems. This is a fundamental problem in control theory and signal processing. The analysis will proceed from first principles as demanded.\n\nThe system under consideration is described by the state-space model:\n$$ \\dot{x}(t) = A x(t) + w(t) $$\n$$ y(t) = C x(t) + v(t) $$\nwhere $x(t) \\in \\mathbb{R}^n$ is the state vector, $y(t) \\in \\mathbb{R}^p$ is the measurement vector, and $A$ and $C$ are system matrices of appropriate dimensions. The terms $w(t)$ and $v(t)$ represent mutually independent, zero-mean, Gaussian white noise processes with covariance matrices $W \\succeq 0$ and $R \\succ 0$, respectively.\n\nA full-order Luenberger observer aims to estimate the state $x(t)$ using the available measurements $y(t)$. The observer has the structure:\n$$ \\dot{\\hat{x}}(t) = A \\hat{x}(t) + L(y(t) - C \\hat{x}(t)) $$\nwhere $\\hat{x}(t)$ is the state estimate and $L \\in \\mathbb{R}^{n \\times p}$ is the observer gain matrix, which must be designed.\n\nThe estimation error is defined as $e(t) = x(t) - \\hat{x}(t)$. The dynamics of this error are derived by subtracting the observer equation from the state equation:\n$$ \\dot{e}(t) = \\dot{x}(t) - \\dot{\\hat{x}}(t) = (A x(t) + w(t)) - (A \\hat{x}(t) + L(C x(t) + v(t) - C \\hat{x}(t))) $$\n$$ \\dot{e}(t) = A(x(t) - \\hat{x}(t)) - L(C(x(t) - \\hat{x}(t)) + v(t)) + w(t) $$\n$$ \\dot{e}(t) = (A - L C) e(t) + w(t) - L v(t) $$\nThe stability of the observer is determined by the stability of the error dynamics. The error is guaranteed to converge to zero in the deterministic case (i.e., $w(t)=0, v(t)=0$) if and only if the matrix $A_L = A - L C$ is Hurwitz, meaning all its eigenvalues have negative real parts.\n\nTwo methods for designing the gain matrix $L$ are to be compared.\n\n1.  **Observer Gain by Pole Placement ($L_{\\mathrm{pp}}$)**\n\nThis method involves selecting the observer gain $L$ to place the eigenvalues of the error dynamics matrix $A_L = A - L C$ at pre-specified stable locations in the complex plane. The ability to arbitrarily assign the eigenvalues of $A - L C$ is contingent upon the observability of the pair $(A, C)$. A pair $(A, C)$ is observable if the observability matrix $\\mathcal{O} = [C^\\top, A^\\top C^\\top, \\ldots, (A^\\top)^{n-1} C^\\top]^\\top$ has full column rank, i.e., $\\mathrm{rank}(\\mathcal{O}) = n$.\n\nThe pole placement problem for observers is typically solved by exploiting the principle of duality with the state-feedback control problem. The eigenvalues of $A - L C$ are identical to the eigenvalues of its transpose, $(A - L C)^\\top = A^\\top - C^\\top L^\\top$. If we let $K = L^\\top$, the problem becomes finding a state-feedback gain $K$ such that the eigenvalues of the closed-loop system matrix $A^\\top - C^\\top K$ for the dual system defined by matrices $(A^\\top, C^\\top)$ are placed at the desired locations. This is a standard state-feedback pole placement problem, which is solvable if the pair $(A^\\top, C^\\top)$ is controllable. The controllability of $(A^\\top, C^\\top)$ is equivalent to the observability of $(A, C)$. Once the dual feedback gain $K$ is found, the observer gain is recovered as $L_{\\mathrm{pp}} = K^\\top$.\n\n2.  **Optimal LQG Observer Gain ($L_{\\mathrm{lmi}}$)**\n\nThis approach seeks to find an observer gain $L$ that is optimal with respect to the influence of the process and measurement noises, $w(t)$ and $v(t)$. The objective is to minimize the steady-state estimation error covariance, $P_e = \\lim_{t \\to \\infty} \\mathbb{E}[e(t)e(t)^\\top]$. For a stable matrix $A_L = A - L C$, the steady-state covariance $P_e$ is the unique symmetric positive semi-definite solution to the continuous-time Lyapunov equation:\n$$ (A - L C) P_e + P_e (A - L C)^\\top + W + L R L^\\top = 0 $$\nThe problem is to find the gain $L$ that minimizes the trace of $P_e$, i.e., $\\min_L \\mathrm{trace}(P_e)$. This is the standard Linear-Quadratic-Gaussian (LQG) estimation problem, which is solved by the Kalman-Bucy filter. The problem statement refers to this as an \"LMI objective,\" which positions the problem within the framework of modern convex optimization-based control, though its solution is classically obtained by solving an Algebraic Riccati Equation (ARE).\n\nThe optimal gain $L_{\\mathrm{lmi}}$ that minimizes $\\mathrm{trace}(P_e)$ is given by:\n$$ L_{\\mathrm{lmi}} = P C^\\top R^{-1} $$\nwhere $P$ is the unique symmetric positive semi-definite stabilizing solution to the Continuous-time Algebraic Riccati Equation (ARE):\n$$ A P + P A^\\top - P C^\\top R^{-1} C P + W = 0 $$\nThis equation is solved numerically. A unique stabilizing solution $P \\succeq 0$ exists if the pair $(A, C)$ is detectable (which is weaker than observable) and the pair $(A, \\sqrt{W})$ is stabilizable.\n\n**Performance Metrics**\n\nFor each designed gain $L$, we evaluate its performance using three metrics:\n\n-   **Spectral Lyapunov Decay Rate ($\\alpha_{\\mathrm{spec}}$)**: This metric quantifies the stability of the error dynamics. It is the fastest guaranteed exponential decay rate for the error in the absence of noise, defined as $\\alpha_{\\mathrm{spec}} = -\\max_i \\mathrm{Re}(\\lambda_i(A - L C))$. A larger positive value indicates a more stable observer with faster error convergence.\n\n-   **Squared Noise-to-Error Gains ($g_w^2$ and $g_v^2$)**: These metrics quantify the sensitivity of the estimation error to the process and measurement noises. They are the squared $\\mathcal{H}_2$ norms from the respective noise inputs to the error. Because $w(t)$ and $v(t)$ are uncorrelated, their contributions to the total error covariance can be analyzed separately.\n    -   The gain from $w(t)$ to $e(t)$ is $g_w^2 = \\mathrm{trace}(P_w)$, where $P_w$ is the steady-state error covariance contribution from $w(t)$, obtained by solving the Lyapunov equation:\n        $$ (A - L C) P_w + P_w (A - L C)^\\top + W = 0 $$\n    -   The gain from $v(t)$ to $e(t)$ is $g_v^2 = \\mathrm{trace}(P_v)$. The input to the error dynamics from $v(t)$ is $-L v(t)$, which has a covariance of $L R L^\\top$. Thus, $P_v$ is the solution to the Lyapunov equation:\n        $$ (A - L C) P_v + P_v (A - L C)^\\top + L R L^\\top = 0 $$\n\nThe LQG design, by its nature, minimizes the total error variance, which is $\\mathrm{trace}(P_e) = \\mathrm{trace}(P_w + P_v) = g_w^2 + g_v^2$. In contrast, the pole placement design offers direct control over the transient response (stability and speed) but provides no inherent guarantee of optimality with respect to noise rejection. The comparison of these metrics for both designs will illustrate this fundamental trade-off.\n\nThe numerical solution for each test case will proceed by implementing these design principles using established numerical linear algebra routines.", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import solve_continuous_are, solve_continuous_lyapunov, eigvals, inv\nfrom scipy.signal import place_poles\nimport sys\n\n# Suppress potential RuntimeWarning from place_poles for nearly uncontrollable systems\n# which is not the case here, but good practice for production code.\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=RuntimeWarning)\n\ndef calculate_metrics(L, A, C, W, R):\n    \"\"\"\n    Calculates the performance metrics for a given observer gain L.\n    \"\"\"\n    n, p = L.shape\n    A_L = A - L @ C\n\n    # 1. Spectral Lyapunov decay rate (alpha_spec)\n    try:\n        eigs = eigvals(A_L)\n        alpha_spec = -np.max(np.real(eigs))\n    except np.linalg.LinAlgError:\n        return [np.nan, np.nan, np.nan]\n\n    # 2. Squared noise-to-error gain from w (g_w^2)\n    try:\n        # Solve Lyapunov equation: A_L @ P_w + P_w @ A_L.T + W = 0\n        P_w = solve_continuous_lyapunov(A_L, -W)\n        g_w_sq = np.trace(P_w)\n    except np.linalg.LinAlgError:\n        g_w_sq = np.nan\n\n    # 3. Squared noise-to-error gain from v (g_v^2)\n    try:\n        # Solve Lyapunov equation: A_L @ P_v + P_v @ A_L.T + L @ R @ L.T = 0\n        Q_v = -L @ R @ L.T\n        P_v = solve_continuous_lyapunov(A_L, Q_v)\n        g_v_sq = np.trace(P_v)\n    except np.linalg.LinAlgError:\n        g_v_sq = np.nan\n\n    return [alpha_spec, g_w_sq, g_v_sq]\n\ndef solve_case(A, C, W, R, poles_pp):\n    \"\"\"\n    Solves one test case for both L_pp and L_lmi designs.\n    \"\"\"\n    # 1. Pole Placement Design (L_pp)\n    # We solve the dual problem: place poles of A.T - C.T @ K\n    # K is the gain for the dual system. L_pp = K.T\n    try:\n        res = place_poles(A.T, C.T, poles_pp)\n        K_pp = res.gain_matrix\n        L_pp = K_pp.T\n        metrics_pp = calculate_metrics(L_pp, A, C, W, R)\n    except Exception:\n        metrics_pp = [np.nan, np.nan, np.nan]\n\n    # 2. LMI/LQG Design (L_lmi)\n    # We solve the continuous-time Algebraic Riccati Equation (ARE) for the filter.\n    # The filter ARE is: A*P + P*A' - P*C'*inv(R)*C*P + W = 0\n    # SciPy's solve_continuous_are(a,b,q,r) solves: a'*X + X*a - X*b*inv(r)*b'*X + q = 0\n    # To match, we use the dual LQR formulation, setting a=A.T, b=C.T, q=W, r=R.\n    # SciPy then solves: (A.T)'*P + P*A.T - P*C.T*inv(R)*(C.T)'*P + W = 0\n    # which simplifies to: A*P + P*A.T - P*C.T*inv(R)*C*P + W = 0.\n    # This is the desired filter ARE. The solution is the error covariance P.\n    try:\n        P_are = solve_continuous_are(A.T, C.T, W, R)\n        L_lmi = P_are @ C.T @ inv(R)\n        metrics_lmi = calculate_metrics(L_lmi, A, C, W, R)\n    except np.linalg.LinAlgError:\n        metrics_lmi = [np.nan, np.nan, np.nan]\n\n    # Combine results and round\n    full_results = metrics_pp + metrics_lmi\n    return [round(val, 6) for val in full_results]\n\ndef solve():\n    \"\"\"\n    Main function to define test cases and compute results.\n    \"\"\"\n    test_cases = [\n        {\n            \"A\": np.array([[0, 1, 0], [0, 0, 1], [-3, -3, -1]]),\n            \"C\": np.array([[1, 0, 0], [0, 1, 0]]),\n            \"W\": 0.1 * np.identity(3),\n            \"R\": 0.05 * np.identity(2),\n            \"poles_pp\": np.array([-2, -3, -4]),\n        },\n        {\n            \"A\": np.array([[0, 1, 0], [-2, -0.2, 0], [0, 0, -0.5]]),\n            \"C\": np.array([[1, 0, 0], [0, 0, 1]]),\n            \"W\": np.diag([0.5, 0.1, 0.2]),\n            \"R\": np.diag([0.2, 0.05]),\n            \"poles_pp\": np.array([-1, -2, -3]),\n        },\n        {\n            \"A\": np.array([[0, 1], [-4, -1]]),\n            \"C\": np.array([[1, 1]]),\n            \"W\": np.array([[0.1, 0], [0, 0.3]]),\n            \"R\": np.array([[0.1]]),\n            \"poles_pp\": np.array([-2.5, -3.0]),\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        case_result = solve_case(case[\"A\"], case[\"C\"], case[\"W\"], case[\"R\"], case[\"poles_pp\"])\n        results.append(case_result)\n\n    # Format output as a string, removing all spaces.\n    output_str = str(results).replace(' ', '')\n    print(output_str)\n\nsolve()\n```", "id": "2699797"}]}