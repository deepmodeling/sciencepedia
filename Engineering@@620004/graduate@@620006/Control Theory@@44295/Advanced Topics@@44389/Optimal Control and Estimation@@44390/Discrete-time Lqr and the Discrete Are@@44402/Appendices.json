{"hands_on_practices": [{"introduction": "Before diving into the complex algebra of the Discrete Algebraic Riccati Equation (DARE), a control engineer must first answer a critical question: does a stabilizing solution even exist? This practice focuses on this essential preliminary step. By analyzing the structural properties of the system, specifically stabilizability and detectability, you will learn to determine a priori whether the LQR framework can successfully stabilize an unstable system.", "problem": "Consider the discrete-time linear time-invariant system and quadratic performance index defined by\n$$\nx_{k+1} = A x_{k} + B u_{k}, \\quad \\ell(x_{k},u_{k}) = x_{k}^{\\top} Q x_{k} + 2 x_{k}^{\\top} N u_{k} + u_{k}^{\\top} R u_{k},\n$$\nwith\n$$\nA=\\begin{bmatrix}1 & 0\\\\ 0 & 1.2\\end{bmatrix}, \\quad B=\\begin{bmatrix}1\\\\ 0\\end{bmatrix}, \\quad Q=I, \\quad R=1, \\quad N=0,\n$$\nand the infinite-horizon cost\n$$\nJ(x_{0}, \\{u_{k}\\}) = \\sum_{k=0}^{\\infty} \\ell(x_{k},u_{k}).\n$$\nA symmetric matrix $P$ is called a stabilizing solution of the discrete-time Algebraic Riccati Equation (DARE) for this problem if it is the value function Hessian for the infinite-horizon Linear Quadratic Regulator (LQR) problem and the corresponding optimal closed-loop matrix has spectral radius strictly less than $1$. Using only core definitions and well-tested facts about stabilizability and detectability for discrete-time LQR, determine whether such a stabilizing solution exists for the given data. Justify your conclusion by analyzing the controllability of eigenvalues of $A$ with modulus at least $1$ and the detectability of the pair $(A,Q^{1/2})$.\n\nTo provide a concrete numerical deliverable, define\n$$\ns := \\max\\left\\{\\,|\\lambda| \\;:\\; \\lambda \\in \\sigma(A),\\ \\mathrm{rank}\\!\\begin{bmatrix}\\lambda I - A & B\\end{bmatrix} < 2 \\,\\right\\},\n$$\nwith the convention that the maximum of the empty set equals $0$. Report the value of $s$ as your final answer. No rounding is required, and the answer is unitless.", "solution": "The existence of a unique positive semi-definite stabilizing solution $P$ to the Discrete Algebraic Riccati Equation (DARE) is contingent upon two fundamental properties of the system matrices: stabilizability of the pair $(A, B)$ and detectability of the pair $(A, C)$, where the state weighting matrix $Q$ is factored as $Q=C^{\\top}C$.\n\nLet us analyze these two conditions for the given system. The system matrices are:\n$$ A=\\begin{bmatrix}1 & 0\\\\ 0 & 1.2\\end{bmatrix}, \\quad B=\\begin{bmatrix}1\\\\ 0\\end{bmatrix}, \\quad Q=I = \\begin{bmatrix}1 & 0\\\\ 0 & 1\\end{bmatrix} $$\n\nFirst, we address the stabilizability of the pair $(A, B)$. A discrete-time system is stabilizable if and only if all of its unstable modes are controllable. A mode is considered unstable if its corresponding eigenvalue $\\lambda$ of the matrix $A$ has a modulus $|\\lambda| \\ge 1$. The controllability of a specific mode can be checked using the Popov-Hautus-Belevitch (PBH) test. An eigenvalue $\\lambda$ is controllable if and only if the matrix $[\\lambda I - A \\quad B]$ has full row rank, which is $n$ for an $n$-dimensional state space. In this problem, the state dimension is $n=2$.\n\nThe eigenvalues of the matrix $A$ are its diagonal elements, as $A$ is a diagonal matrix. The eigenvalues are $\\lambda_1 = 1$ and $\\lambda_2 = 1.2$. We must check their controllability since both satisfy the condition $|\\lambda| \\ge 1$.\n\nFor the eigenvalue $\\lambda_1 = 1$:\nWe form the PBH test matrix:\n$$ \\begin{bmatrix} \\lambda_1 I - A & B \\end{bmatrix} = \\begin{bmatrix} 1 \\cdot I - A & B \\end{bmatrix} = \\begin{bmatrix} 1\\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} - \\begin{bmatrix}1 & 0\\\\ 0 & 1.2\\end{bmatrix} & \\begin{bmatrix}1\\\\ 0\\end{bmatrix} \\end{bmatrix} $$\n$$ = \\begin{bmatrix} 0 & 0 & 1 \\\\ 0 & -0.2 & 0 \\end{bmatrix} $$\nThe rank of this $2 \\times 3$ matrix is $2$, as the second and third columns are linearly independent. Thus, the rank is equal to the state dimension $n=2$. This means the mode corresponding to the eigenvalue $\\lambda_1 = 1$ is controllable.\n\nFor the eigenvalue $\\lambda_2 = 1.2$:\nWe form the PBH test matrix:\n$$ \\begin{bmatrix} \\lambda_2 I - A & B \\end{bmatrix} = \\begin{bmatrix} 1.2 \\cdot I - A & B \\end{bmatrix} = \\begin{bmatrix} 1.2\\begin{bmatrix}1&0\\\\0&1\\end{bmatrix} - \\begin{bmatrix}1 & 0\\\\ 0 & 1.2\\end{bmatrix} & \\begin{bmatrix}1\\\\ 0\\end{bmatrix} \\end{bmatrix} $$\n$$ = \\begin{bmatrix} 0.2 & 0 & 1 \\\\ 0 & 0 & 0 \\end{bmatrix} $$\nThe rank of this $2 \\times 3$ matrix is $1$, because the second row is composed entirely of zeros. The rank is less than the state dimension $n=2$. This implies that the mode corresponding to the eigenvalue $\\lambda_2 = 1.2$ is uncontrollable.\n\nSince the system has an unstable eigenvalue, $\\lambda_2 = 1.2$, that is uncontrollable, the pair $(A, B)$ is not stabilizable. The failure of this condition is sufficient to conclude that a stabilizing solution to the DARE does not exist.\n\nFor completeness, we also verify the detectability condition. A system is detectable if all its unobservable modes are stable (i.e., correspond to eigenvalues $\\lambda$ with $|\\lambda| < 1$). The pair $(A, C)$ is detectable if and only if the pair $(A^\\top, C^\\top)$ is stabilizable. Equivalently, by the dual of the PBH test, detectability requires that for every eigenvalue $\\lambda$ with $|\\lambda| \\ge 1$, the matrix $\\begin{bmatrix} A - \\lambda I \\\\ C \\end{bmatrix}$ has full column rank ($n=2$).\nWe are given $Q=I$. We can choose $C = Q^{1/2} = I^{1/2} = I$. So we test the detectability of the pair $(A, I)$.\nFor any complex number $\\lambda$, the test matrix is:\n$$ \\begin{bmatrix} A - \\lambda I \\\\ I \\end{bmatrix} = \\begin{bmatrix} 1-\\lambda & 0 \\\\ 0 & 1.2-\\lambda \\\\ 1 & 0 \\\\ 0 & 1 \\end{bmatrix} $$\nThis is a $4 \\times 2$ matrix. The rank of this matrix is determined by the linear independence of its two columns. The bottom two rows, which constitute the identity matrix $I$, guarantee that the two columns are always linearly independent for any value of $\\lambda$. Therefore, the rank is always $2$. This means no eigenvalue is unobservable. The system is observable, which is a stronger condition than detectability. The detectability condition is satisfied.\n\nHowever, the existence of a stabilizing DARE solution requires both stabilizability and detectability. Since the stabilizability condition failed, we conclude that no such stabilizing solution exists for the given problem.\n\nThe final part of the problem asks for the computation of the value $s$:\n$$ s := \\max\\left\\{\\,|\\lambda| \\;:\\; \\lambda \\in \\sigma(A),\\ \\mathrm{rank}\\!\\begin{bmatrix}\\lambda I - A & B\\end{bmatrix} < 2 \\,\\right\\} $$\nThis quantity $s$ is the maximum modulus of all uncontrollable eigenvalues of $A$. Based on our PBH tests:\n- For $\\lambda_1 = 1$, $\\mathrm{rank}\\!\\begin{bmatrix}\\lambda_1 I - A & B\\end{bmatrix} = 2$. This eigenvalue is not in the set.\n- For $\\lambda_2 = 1.2$, $\\mathrm{rank}\\!\\begin{bmatrix}\\lambda_2 I - A & B\\end{bmatrix} = 1 < 2$. This eigenvalue is in the set.\n\nThe set of eigenvalues $\\lambda$ for which the rank condition holds is $\\{1.2\\}$. The corresponding set of moduli is $\\{|1.2|\\} = \\{1.2\\}$. The maximum element of this set is $1.2$.\nTherefore, $s = 1.2$.", "answer": "$$\n\\boxed{1.2}\n$$", "id": "2701007"}, {"introduction": "Having confirmed that a stabilizing controller is possible, we now turn to the central task of finding it. This exercise provides a hands-on walkthrough of solving the DARE analytically for a canonical system: the discrete-time double integrator. You will translate the abstract matrix Riccati equation into a system of scalar algebraic equations, solve for the unique stabilizing cost matrix $P$, and compute the corresponding optimal feedback gain $K$ that guarantees closed-loop stability.", "problem": "Consider the discrete-time, time-invariant linear system with state update equation $x_{k+1} = A x_{k} + B u_{k}$, where $A = \\begin{bmatrix} 1 & 1 \\\\ 0 & 1 \\end{bmatrix}$ and $B = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$. The infinite-horizon quadratic performance index is\n$$\nJ(x_{0}, \\{u_{k}\\}) = \\sum_{k=0}^{\\infty} \\left( x_{k}^{\\top} Q x_{k} + u_{k}^{\\top} R u_{k} \\right),\n$$\nwith $Q = I_{2}$, $R = 1$, and cross-weight $N = 0$. Assume that $(A,B)$ is stabilizable and $(Q^{1/2}, A)$ is detectable.\n\nStarting from the Bellman optimality principle and the quadratic value function ansatz $V(x) = x^{\\top} P x$ with $P = P^{\\top} \\succeq 0$, derive the Discrete Algebraic Riccati Equation (DARE) that characterizes the optimal cost-to-go matrix $P$ and the corresponding optimal state feedback law $u_{k} = -K x_{k}$. Then use this equation to compute the stabilizing solution $P$ and the associated optimal gain $K$. Finally, verify from first principles (without appealing to external results beyond those derived and standard properties of second-order polynomials) that the closed-loop matrix $A - B K$ is Schur (all eigenvalues strictly inside the unit disk).\n\nAnswer specification:\n- Provide the final result as a single row matrix containing, in order, the two components of the optimal gain vector $K = \\begin{bmatrix} k_{1} & k_{2} \\end{bmatrix}$ followed by the three independent entries of $P = \\begin{bmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{bmatrix}$, i.e., $[\\,k_{1},\\, k_{2},\\, p_{11},\\, p_{12},\\, p_{22}\\,]$.\n- Express each entry in exact closed form. Do not approximate or round.\n- No units are required.", "solution": "The Bellman equation for the infinite-horizon, time-invariant optimal control problem is given by the principle of optimality. The optimal cost-to-go, or value function, $V(x)$, must satisfy:\n$$V(x) = \\min_{u} \\{ x^{\\top} Q x + u^{\\top} R u + V(x_{k+1}) \\}$$\nwhere $x_{k+1} = Ax+Bu$. We are given the quadratic ansatz for the value function, $V(x) = x^{\\top} P x$, where $P$ is a symmetric positive semi-definite matrix ($P = P^{\\top} \\succeq 0$). Substituting this into the Bellman equation yields:\n$$x^{\\top} P x = \\min_{u} \\{ x^{\\top} Q x + u^{\\top} R u + (Ax+Bu)^{\\top} P (Ax+Bu) \\}$$\nThe right-hand side is a quadratic function of the control input $u$. To find the minimum, we differentiate with respect to $u$ and set the result to zero. The term to be minimized is:\n$$J(u) = x^{\\top} Q x + u^{\\top} R u + x^{\\top} A^{\\top} P A x + 2u^{\\top} B^{\\top} P A x + u^{\\top} B^{\\top} P B u$$\nThe gradient with respect to $u$ is:\n$$\\nabla_{u} J(u) = 2R u + 2B^{\\top} P A x + 2B^{\\top} P B u = 0$$\nSolving for the optimal control $u_{k}^*$:\n$$(R + B^{\\top} P B)u_{k}^* = -B^{\\top} P A x_{k}$$\n$$u_{k}^* = -(R + B^{\\top} P B)^{-1} B^{\\top} P A x_{k}$$\nThis implies the optimal control law is a linear state feedback $u_{k} = -K x_{k}$ with the gain matrix:\n$$K = (R + B^{\\top} P B)^{-1} B^{\\top} P A$$\nSubstituting $u_{k}^* = -Kx_k$ back into the Bellman equation:\n$$x^{\\top} P x = x^{\\top} Q x + (-Kx)^{\\top} R (-Kx) + (A-BK)x^{\\top} P (A-BK)x$$\nSince this must hold for any state $x$, we obtain the matrix equation:\n$$P = Q + K^{\\top} R K + (A-BK)^{\\top} P (A-BK)$$\nSubstituting the expression for $K$ into this equation gives the Discrete Algebraic Riccati Equation (DARE):\n$$P = A^{\\top} P A + Q - (A^{\\top} P B)(R + B^{\\top} P B)^{-1}(B^{\\top} P A)$$\nThis equation characterizes the optimal cost matrix $P$.\n\nNow, we solve this equation for the given system parameters:\n$A = \\begin{bmatrix} 1 & 1 \\\\ 0 & 1 \\end{bmatrix}$, $B = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$, $Q = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $R=1$. Let $P = \\begin{bmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{bmatrix}$.\n\nWe compute the required terms:\n$A^{\\top}PA = \\begin{bmatrix} p_{11} & p_{11}+p_{12} \\\\ p_{11}+p_{12} & p_{11}+2p_{12}+p_{22} \\end{bmatrix}$\n$A^{\\top}PB = \\begin{bmatrix} p_{12} \\\\ p_{12}+p_{22} \\end{bmatrix}$\n$B^{\\top}PA = \\begin{bmatrix} p_{12} & p_{12}+p_{22} \\end{bmatrix}$\n$R+B^{\\top}PB = 1+p_{22}$\n$(A^{\\top} P B)(R + B^{\\top} P B)^{-1}(B^{\\top} P A) = \\frac{1}{1+p_{22}}\\begin{bmatrix} p_{12}^{2} & p_{12}(p_{12}+p_{22}) \\\\ p_{12}(p_{12}+p_{22}) & (p_{12}+p_{22})^2 \\end{bmatrix}$\n\nSubstituting these into the DARE leads to a system of scalar equations:\n(1,1): $p_{11} = p_{11} + 1 - \\frac{p_{12}^2}{1+p_{22}} \\implies p_{12}^2 = 1+p_{22}$\n(1,2): $p_{12} = p_{11}+p_{12} - \\frac{p_{12}(p_{12}+p_{22})}{1+p_{22}} \\implies p_{11} = \\frac{p_{12}(p_{12}+p_{22})}{1+p_{22}}$\n(2,2): $p_{22} = p_{11}+2p_{12}+p_{22}+1 - \\frac{(p_{12}+p_{22})^2}{1+p_{22}} \\implies 0 = p_{11}+2p_{12}+1 - \\frac{(p_{12}+p_{22})^2}{1+p_{22}}$\n\nFrom (1), $p_{22} = p_{12}^2 - 1$. For $P \\succeq 0$, we require $p_{22} \\ge 0$, so $|p_{12}| \\ge 1$.\nSubstitute $p_{22}$ into (2): $p_{11} = \\frac{p_{12}(p_{12}+p_{12}^2-1)}{1+p_{12}^2-1} = \\frac{p_{12}(p_{12}^2+p_{12}-1)}{p_{12}^2} = p_{12}+1-\\frac{1}{p_{12}}$.\nSubstitute $p_{11}$ and $p_{22}$ into (3):\n$0 = (p_{12}+1-\\frac{1}{p_{12}}) + 2p_{12} + 1 - \\frac{(p_{12}+p_{12}^2-1)^2}{p_{12}^2}$\nMultiplying by $p_{12}^2$ yields:\n$0 = 3p_{12}^3+2p_{12}^2-p_{12} - (p_{12}^2+p_{12}-1)^2$\n$0 = 3p_{12}^3+2p_{12}^2-p_{12} - (p_{12}^4+2p_{12}^3-p_{12}^2-2p_{12}+1)$\n$0 = -p_{12}^4 + p_{12}^3 + 3p_{12}^2 + p_{12} - 1$\nThis is equivalent to the reciprocal equation $p_{12}^4 - p_{12}^3 - 3p_{12}^2 - p_{12} + 1 = 0$.\nDividing by $p_{12}^2$ and letting $y = p_{12}+\\frac{1}{p_{12}}$, we get:\n$(p_{12}^2+\\frac{1}{p_{12}^2}) - (p_{12}+\\frac{1}{p_{12}}) - 3 = 0 \\implies (y^2-2) - y - 3 = 0 \\implies y^2-y-5=0$.\nThe solutions are $y = \\frac{1 \\pm \\sqrt{1 - 4(-5)}}{2} = \\frac{1 \\pm \\sqrt{21}}{2}$.\n\nNext, we verify stability. The closed-loop matrix is $A_{cl} = A-BK$. The gain is $K = (1+p_{22})^{-1} B^{\\top} P A = (p_{12}^2)^{-1} [p_{12} \\quad p_{12}+p_{22}] = [1/p_{12} \\quad 1/p_{12}+1-1/p_{12}^2]$.\n$A_{cl} = \\begin{bmatrix} 1 & 1 \\\\ -k_1 & 1-k_2 \\end{bmatrix}$. The characteristic polynomial is $\\lambda^2 - \\text{tr}(A_{cl})\\lambda + \\det(A_{cl}) = 0$.\n$\\text{tr}(A_{cl}) = 2-k_2 = 2-(1/p_{12}+1-1/p_{12}^2) = 1-1/p_{12}+1/p_{12}^2$.\n$\\det(A_{cl}) = 1-k_2+k_1 = 1-(1/p_{12}+1-1/p_{12}^2) + 1/p_{12} = 1/p_{12}^2$.\nThe characteristic polynomial is $\\lambda^2 - (1-1/p_{12}+1/p_{12}^2)\\lambda + 1/p_{12}^2 = 0$.\nFor the system to be Schur stable, the roots must lie inside the unit disk. For a second-order polynomial $\\lambda^2+a_1\\lambda+a_0=0$, the Jury stability conditions are: (i) $|a_0|<1$, (ii) $1+a_1+a_0>0$, (iii) $1-a_1+a_0>0$.\n(i) $|1/p_{12}^2| < 1 \\implies p_{12}^2 > 1$, which aligns with $p_{22} \\ge 0$.\n(ii) $1 - (1-1/p_{12}+1/p_{12}^2) + 1/p_{12}^2 = 1/p_{12} > 0 \\implies p_{12}>0$.\n(iii) $1 + (1-1/p_{12}+1/p_{12}^2) + 1/p_{12}^2 = 2-1/p_{12}+2/p_{12}^2 > 0$. Multiplying by $p_{12}^2>0$ gives $2p_{12}^2-p_{12}+2>0$. The discriminant of this quadratic is $(-1)^2-4(2)(2)=-15<0$, so it is always positive.\nThus, stability requires $p_{12}>1$. This implies $y = p_{12}+1/p_{12} > 2$.\nWe must select $y = \\frac{1+\\sqrt{21}}{2} \\approx 2.79 > 2$.\nThe values of $p_{12}$ are the roots of $p_{12}^2-yp_{12}+1=0$. To satisfy $p_{12}>1$, we must choose the larger root:\n$p_{12} = \\frac{y+\\sqrt{y^2-4}}{2}$.\n\nWith $y = \\frac{1+\\sqrt{21}}{2}$, we have $y^2-4 = (\\frac{1+\\sqrt{21}}{2})^2-4 = \\frac{1+21+2\\sqrt{21}}{4}-4 = \\frac{11+\\sqrt{21}}{2}-4 = \\frac{3+\\sqrt{21}}{2}$.\nLet $\\Delta = \\sqrt{y^2-4} = \\sqrt{\\frac{3+\\sqrt{21}}{2}}$.\nThe required quantities are:\n$p_{12} = \\frac{y+\\Delta}{2} = \\frac{1}{2}\\left(\\frac{1+\\sqrt{21}}{2} + \\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right)$\n$p_{11} = 1+\\Delta = 1+\\sqrt{\\frac{3+\\sqrt{21}}{2}}$.\n$p_{22} = \\frac{1}{2}\\left(\\frac{3+\\sqrt{21}}{2} + \\frac{1+\\sqrt{21}}{2}\\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right)$.\n$k_1 = \\frac{y-\\Delta}{2} = \\frac{1}{2}\\left(\\frac{1+\\sqrt{21}}{2} - \\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right)$.\n$k_2 = \\frac{1}{2}\\left(-1 + \\frac{\\sqrt{21}-1}{2}\\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right)$.\n\nThe final results are collected as specified.", "answer": "$$\n\\boxed{\n\\begin{pmatrix} \\frac{1}{2}\\left(\\frac{1+\\sqrt{21}}{2} - \\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right) & \\frac{1}{2}\\left(-1 + \\frac{\\sqrt{21}-1}{2}\\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right) & 1+\\sqrt{\\frac{3+\\sqrt{21}}{2}} & \\frac{1}{2}\\left(\\frac{1+\\sqrt{21}}{2} + \\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right) & \\frac{1}{2}\\left(\\frac{3+\\sqrt{21}}{2} + \\frac{1+\\sqrt{21}}{2}\\sqrt{\\frac{3+\\sqrt{21}}{2}}\\right) \\end{pmatrix}\n}\n$$", "id": "2700994"}, {"introduction": "Theory is powerful, but verification is essential. This final practice bridges the gap between analytical derivations and computational reality by guiding you through the simulation of an LQR-controlled system. You will implement the full design process in code—from solving the DARE to simulating the closed-loop trajectory—and verify key theoretical guarantees, such as the decay of the state norm and the monotonic nature of the Lyapunov function $V(x) = x^{\\top} P x$.", "problem": "Consider the discrete-time Linear Time-Invariant (LTI) system with state update $x_{k+1} = A x_k + B u_k$ and the infinite-horizon quadratic performance index $J = \\sum_{k=0}^{\\infty} \\left( x_k^{\\top} Q x_k + 2 x_k^{\\top} N u_k + u_k^{\\top} R u_k \\right)$, where $A \\in \\mathbb{R}^{n \\times n}$, $B \\in \\mathbb{R}^{n \\times m}$, $Q \\in \\mathbb{R}^{n \\times n}$ is positive semidefinite, $R \\in \\mathbb{R}^{m \\times m}$ is positive definite, and $N \\in \\mathbb{R}^{n \\times m}$. The Linear Quadratic Regulator (LQR) problem seeks a static state-feedback control law $u_k = -K x_k$ that minimizes $J$. The closed-loop matrix is $A_{\\text{cl}} = A - B K$. The optimal feedback gain $K$ is constructed from the symmetric solution $P \\succeq 0$ of the discrete-time Algebraic Riccati Equation (DARE). Your task is to design a simulation experiment that verifies decay properties of the state and a Lyapunov function under the optimal gain.\n\nYour program must, for each specified test case $(A,B,Q,R,N,x_0)$, do the following, starting from first principles and standard definitions of optimal control:\n- Compute the optimal state-feedback gain $K$ by solving the discrete-time Algebraic Riccati Equation (DARE) associated with the given $(A,B,Q,R,N)$.\n- Form the closed-loop matrix $A_{\\text{cl}} = A - B K$ and evaluate its spectral radius (the maximum absolute value of its eigenvalues).\n- Simulate the closed-loop trajectory $x_{k+1} = A_{\\text{cl}} x_k$ for $k = 0,1,\\dots,T-1$ from the given initial condition $x_0$, with $T$ fixed and specified below.\n- Compute the Euclidean norms $\\lVert x_k \\rVert_2$ and the quadratic Lyapunov sequence $V_k = x_k^{\\top} P x_k$ along the trajectory.\n- For each test case, report:\n  1) A boolean indicating whether the spectral radius of $A_{\\text{cl}}$ is strictly less than $1$.\n  2) A boolean indicating whether the sequence $V_k$ is monotonically nonincreasing up to machine tolerance, that is, $V_{k+1} \\le V_k + \\varepsilon$ for all $k$ with a fixed $\\varepsilon$ specified below.\n  3) A float equal to the ratio $\\lVert x_T \\rVert_2 / \\lVert x_0 \\rVert_2$, rounded to six decimal places.\n\nUse the following fixed horizon and tolerance: $T = 200$ and $\\varepsilon = 10^{-10}$.\n\nTest suite. Implement exactly the following four test cases. Each case specifies $(A,B,Q,R,N,x_0)$.\n\nCase $1$ (baseline, single-input, strictly unstable-open-loop but stabilizable):\n$$\nA_1 = \\begin{bmatrix} 1.2 & 0.1 \\\\ 0.0 & 0.95 \\end{bmatrix},\\quad\nB_1 = \\begin{bmatrix} 1.0 \\\\ 0.5 \\end{bmatrix},\\quad\nQ_1 = \\begin{bmatrix} 1.0 & 0.0 \\\\ 0.0 & 1.0 \\end{bmatrix},\\quad\nR_1 = \\begin{bmatrix} 1.0 \\end{bmatrix},\\quad\nN_1 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\end{bmatrix},\\quad\nx_{0,1} = \\begin{bmatrix} 3.0 \\\\ -1.0 \\end{bmatrix}.\n$$\n\nCase $2$ (near-boundary with a marginal open-loop mode, single-input):\n$$\nA_2 = \\begin{bmatrix} 1.0 & 0.2 \\\\ 0.0 & 0.9 \\end{bmatrix},\\quad\nB_2 = \\begin{bmatrix} 1.0 \\\\ 0.1 \\end{bmatrix},\\quad\nQ_2 = \\begin{bmatrix} 1.0 & 0.0 \\\\ 0.0 & 1.0 \\end{bmatrix},\\quad\nR_2 = \\begin{bmatrix} 0.1 \\end{bmatrix},\\quad\nN_2 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\end{bmatrix},\\quad\nx_{0,2} = \\begin{bmatrix} 1.0 \\\\ 2.0 \\end{bmatrix}.\n$$\n\nCase $3$ (multi-input with nonzero cross-weight, strictly unstable-open-loop but fully actuated):\n$$\nA_3 = \\begin{bmatrix} 1.1 & 0.3 \\\\ 0.0 & 0.8 \\end{bmatrix},\\quad\nB_3 = \\begin{bmatrix} 1.0 & 0.0 \\\\ 0.0 & 1.0 \\end{bmatrix},\\quad\nQ_3 = \\begin{bmatrix} 2.0 & 0.5 \\\\ 0.5 & 1.0 \\end{bmatrix},\\quad\nR_3 = \\begin{bmatrix} 0.5 & 0.1 \\\\ 0.1 & 0.3 \\end{bmatrix},\\quad\nN_3 = \\begin{bmatrix} 0.1 & -0.05 \\\\ 0.0 & 0.02 \\end{bmatrix},\\quad\nx_{0,3} = \\begin{bmatrix} 2.0 \\\\ -2.0 \\end{bmatrix}.\n$$\n\nCase $4$ (single-input with small control penalty $R$, two unstable modes but stabilizable):\n$$\nA_4 = \\begin{bmatrix} 1.05 & 0.5 \\\\ 0.0 & 1.02 \\end{bmatrix},\\quad\nB_4 = \\begin{bmatrix} 0.0 \\\\ 1.0 \\end{bmatrix},\\quad\nQ_4 = \\begin{bmatrix} 1.0 & 0.0 \\\\ 0.0 & 1.0 \\end{bmatrix},\\quad\nR_4 = \\begin{bmatrix} 0.01 \\end{bmatrix},\\quad\nN_4 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\end{bmatrix},\\quad\nx_{0,4} = \\begin{bmatrix} 1.0 \\\\ 1.0 \\end{bmatrix}.\n$$\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each test case contributes a sublist of three elements $[b_1, b_2, r]$ with $b_1$ and $b_2$ booleans and $r$ the rounded float. For example, the output should look like:\n$[\\,[\\text{True},\\text{True},0.000001],[\\text{True},\\text{True},0.123456],\\dots\\,]$.\nNo additional text should be printed.", "solution": "The dynamics of the system are described by the discrete-time, linear time-invariant (LTI) state equation:\n$$\nx_{k+1} = A x_k + B u_k\n$$\nwhere $x_k \\in \\mathbb{R}^n$ is the state vector and $u_k \\in \\mathbb{R}^m$ is the control input vector at time step $k$. The objective is to find a state-feedback control law $u_k = -K x_k$ that minimizes the infinite-horizon quadratic cost function:\n$$\nJ = \\sum_{k=0}^{\\infty} \\left( x_k^{\\top} Q x_k + 2 x_k^{\\top} N u_k + u_k^{\\top} R u_k \\right)\n$$\nHere, $Q \\succeq 0$ and $R \\succ 0$ are weighting matrices for the state and control input, respectively, and $N$ is a cross-weighting matrix. The term $2x_k^\\top N u_k$ complicates the standard LQR formulation. One can handle this by a change of variables. The term inside the summation can be written as a quadratic form:\n$$\n\\begin{bmatrix} x_k \\\\ u_k \\end{bmatrix}^{\\top}\n\\begin{bmatrix} Q & N \\\\ N^{\\top} & R \\end{bmatrix}\n\\begin{bmatrix} x_k \\\\ u_k \\end{bmatrix}\n$$\nFor the cost to be bounded below for any trajectory, this block matrix must be positive semidefinite. All test cases provided satisfy this condition.\n\nThe solution to this LQR problem is found via dynamic programming. The optimal cost-to-go, or value function, from state $x$ is given by $V(x) = x^{\\top} P x$, where $P$ is the unique symmetric positive semidefinite solution to the discrete-time Algebraic Riccati Equation (DARE):\n$$\nP = A^{\\top} P A - (A^{\\top} P B + N)(R + B^{\\top} P B)^{-1}(B^{\\top} P A + N^{\\top}) + Q\n$$\nThe existence of such a stabilizing solution $P$ is guaranteed if the pair $(A, B)$ is stabilizable and the pair $(Q_{eff}, A_{eff})$ is detectable, where $A_{eff}$ and $Q_{eff}$ are effective system matrices after a change of variables to eliminate the cross-term $N$. In the given cases, since the more straightforward conditions of stabilizability of $(A,B)$ and detectability corresponding to the cost function are met, a unique stabilizing solution exists and can be computed numerically.\n\nOnce the Riccati solution $P$ is found, the optimal state-feedback gain matrix $K$ is given by:\n$$\nK = (R + B^{\\top} P B)^{-1}(B^{\\top} P A + N^{\\top})\n$$\nThe control law is then $u_k = -K x_k$. This results in the closed-loop system:\n$$\nx_{k+1} = (A - B K) x_k = A_{\\text{cl}} x_k\n$$\nThe stability of this closed-loop system is determined by the eigenvalues of the matrix $A_{\\text{cl}}$. The system is asymptotically stable if and only if the spectral radius of $A_{\\text{cl}}$, denoted $\\rho(A_{\\text{cl}})$, is strictly less than $1$. The spectral radius is the maximum magnitude of the eigenvalues of $A_{\\text{cl}}$.\n\nFurthermore, the quadratic form $V_k = x_k^{\\top} P x_k$ serves as a discrete-time Lyapunov function for the closed-loop system. The change in this function along a system trajectory is given by the Bellman equation at optimality:\n$$\n\\Delta V_k = V_{k+1} - V_k = - (x_k^{\\top} Q x_k + 2 x_k^{\\top} N u_k + u_k^{\\top} R u_k)\n$$\nSubstituting $u_k = -Kx_k$:\n$$\n\\Delta V_k = -x_k^{\\top} (Q - N K - K^{\\top} N^{\\top} + K^{\\top} R K) x_k\n$$\nThe matrix $Q - N K - K^{\\top} N^{\\top} + K^{\\top} R K$ is the effective stage cost under the optimal policy, and it is guaranteed to be positive semidefinite. Thus, $\\Delta V_k \\le 0$, which implies that the sequence $V_k$ is monotonically nonincreasing. This property confirms the stability of the closed-loop system, as the state is driven towards the origin where $V(x)=0$.\n\nThe following procedure implements these principles to solve the problem for each test case:\n1.  Define the system matrices $(A, B)$ and cost matrices $(Q, R, N)$ for each case.\n2.  Numerically solve the DARE for the symmetric positive semidefinite matrix $P$ using a standard numerical library function, which can handle the cross-term $N$.\n3.  Compute the optimal feedback gain $K$ using its definition in terms of $P$.\n4.  Construct the closed-loop matrix $A_{\\text{cl}} = A - B K$.\n5.  Calculate the eigenvalues of $A_{\\text{cl}}$ and determine its spectral radius $\\rho(A_{\\text{cl}})$. The first required output is the boolean result of $\\rho(A_{\\text{cl}}) < 1$.\n6.  Simulate the closed-loop system for $T=200$ steps, starting from the given initial state $x_0$, to generate the state trajectory $x_0, x_1, \\dots, x_T$.\n7.  Compute the Lyapunov sequence $V_k = x_k^{\\top} P x_k$ for $k=0, \\dots, T$.\n8.  Verify that $V_{k+1} \\le V_k + \\varepsilon$ for all $k = 0, \\dots, T-1$ with the given tolerance $\\varepsilon=10^{-10}$. The second required output is the boolean result of this check.\n9.  Calculate the Euclidean norms $\\lVert x_T \\rVert_2$ and $\\lVert x_0 \\rVert_2$. The third required output is the ratio $\\lVert x_T \\rVert_2 / \\lVert x_0 \\rVert_2$, rounded to six decimal places.\n10. Collate and format the results as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import solve_discrete_are\n\ndef solve():\n    \"\"\"\n    Solves the LQR problem for the given test cases and performs the required analysis.\n    \"\"\"\n    \n    # Simulation parameters\n    T = 200\n    epsilon = 1e-10\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"A\": np.array([[1.2, 0.1], [0.0, 0.95]]),\n            \"B\": np.array([[1.0], [0.5]]),\n            \"Q\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"R\": np.array([[1.0]]),\n            \"N\": np.array([[0.0], [0.0]]),\n            \"x0\": np.array([[3.0], [-1.0]]),\n        },\n        {\n            \"A\": np.array([[1.0, 0.2], [0.0, 0.9]]),\n            \"B\": np.array([[1.0], [0.1]]),\n            \"Q\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"R\": np.array([[0.1]]),\n            \"N\": np.array([[0.0], [0.0]]),\n            \"x0\": np.array([[1.0], [2.0]]),\n        },\n        {\n            \"A\": np.array([[1.1, 0.3], [0.0, 0.8]]),\n            \"B\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"Q\": np.array([[2.0, 0.5], [0.5, 1.0]]),\n            \"R\": np.array([[0.5, 0.1], [0.1, 0.3]]),\n            \"N\": np.array([[0.1, -0.05], [0.0, 0.02]]),\n            \"x0\": np.array([[2.0], [-2.0]]),\n        },\n        {\n            \"A\": np.array([[1.05, 0.5], [0.0, 1.02]]),\n            \"B\": np.array([[0.0], [1.0]]),\n            \"Q\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"R\": np.array([[0.01]]),\n            \"N\": np.array([[0.0], [0.0]]),\n            \"x0\": np.array([[1.0], [1.0]]),\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        A, B, Q, R, N, x0 = case[\"A\"], case[\"B\"], case[\"Q\"], case[\"R\"], case[\"N\"], case[\"x0\"]\n\n        # 1. Solve the Discrete-time Algebraic Riccati Equation (DARE)\n        # SciPy's s parameter corresponds to the cross-term N\n        P = solve_discrete_are(A, B, Q, R, s=N)\n\n        # 2. Compute the optimal feedback gain K\n        K_inv_term = R + B.T @ P @ B\n        K_mult_term = B.T @ P @ A + N.T\n        K = np.linalg.inv(K_inv_term) @ K_mult_term\n\n        # 3. Form the closed-loop matrix A_cl and check its stability\n        A_cl = A - B @ K\n        eigenvalues = np.linalg.eigvals(A_cl)\n        spectral_radius = np.max(np.abs(eigenvalues))\n        is_stable = bool(spectral_radius < 1.0)\n\n        # 4. Simulate the closed-loop trajectory and compute Lyapunov sequence\n        x_k = x0\n        V_seq = [x_k.T @ P @ x_k]\n        \n        x_traj = [x0]\n        for _ in range(T):\n            x_k = A_cl @ x_k\n            x_traj.append(x_k)\n            V_seq.append(x_k.T @ P @ x_k)\n        \n        # 5. Check if the Lyapunov sequence is monotonically nonincreasing\n        is_monotonic = True\n        # V_seq are 1x1 matrices, so use .item()\n        for k in range(T):\n            if V_seq[k+1].item() > V_seq[k].item() + epsilon:\n                is_monotonic = False\n                break\n        \n        # 6. Compute the ratio of final to initial state norms\n        norm_x0 = np.linalg.norm(x0)\n        norm_xT = np.linalg.norm(x_traj[T])\n        \n        if norm_x0 == 0:\n            ratio = 0.0\n        else:\n            ratio = norm_xT / norm_x0\n            \n        ratio_rounded = round(ratio, 6)\n\n        results.append([is_stable, is_monotonic, ratio_rounded])\n\n    # Final print statement in the exact required format.\n    # The default str() representation of a list includes spaces, which is acceptable.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2701019"}]}