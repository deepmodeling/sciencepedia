{"hands_on_practices": [{"introduction": "This first practice problem lays the theoretical groundwork for output Loop Transfer Recovery by focusing on the design of the Kalman filter loop. The core principle you will explore is how the frequency response of the Kalman filter can be deliberately shaped by choosing the process and measurement noise covariances. This exercise [@problem_id:2721063] provides clear, analytical insight by having you derive the exact relationship needed to match a desired target loop, offering a foundational understanding of the LTR mechanism before tackling more complex numerical implementations.", "problem": "Consider the single-input single-output continuous-time plant with state-space realization\n$$\n\\dot{x}(t) = 0 \\cdot x(t) + u(t) + w(t), \\quad y(t) = 1 \\cdot x(t) + v(t),\n$$\nwhere $x(t) \\in \\mathbb{R}$, $u(t) \\in \\mathbb{R}$, and $y(t) \\in \\mathbb{R}$. The disturbance $w(t)$ and the measurement noise $v(t)$ are mutually independent, zero-mean, white Gaussian processes with constant spectral densities (covariances per unit time) $W_0 > 0$ and $V_0 > 0$, respectively. For the steady-state Kalman-Bucy filter (KBF), denote the steady-state error covariance by $P$ and the steady-state Kalman gain by $K_f$. The algebraic Riccati equation for $P$ is\n$$\n0 \\cdot P + P \\cdot 0 - P \\cdot 1 \\cdot V_0^{-1} \\cdot 1 \\cdot P + W_0 = 0,\n$$\nand the steady-state Kalman gain is\n$$\nK_f = P \\cdot 1 \\cdot V_0^{-1}.\n$$\nIn the context of Linear Quadratic Gaussian (LQG) loop transfer recovery (LTR) at the plant output, the Kalman filter loop is defined as\n$$\nL_f(s) = 1 \\cdot (s I - 0)^{-1} K_f = \\frac{K_f}{s}.\n$$\nSuppose that a rational target loop with relative degree one and $-20$ dB/decade roll-off is specified as\n$$\nL_d(s) = \\frac{\\omega_c}{s},\n$$\nwith desired crossover frequency $\\omega_c > 0$, so that $|L_d(\\mathrm{j}\\,\\omega_c)| = 1$ and $\\arg L_d(\\mathrm{j}\\,\\omega_c) = -\\frac{\\pi}{2}$. Using only first principles (the algebraic Riccati equation and the definition of the Kalman-Bucy gain), choose $W_0$ and $V_0$ so that $L_f(s)$ matches $L_d(s)$. Derive a closed-form expression for the minimal design parameter\n$$\nr \\equiv \\frac{W_0}{V_0}\n$$\nthat achieves this matching. Express your final answer as a symbolic function of $\\omega_c$ (dimensionless). No numerical rounding is required and no physical units should be included in the final expression.", "solution": "The problem as stated is scientifically sound, self-contained, and well-posed within the framework of linear control theory. It constitutes a standard exercise in designing an observer for Loop Transfer Recovery (LTR). All provided definitions and equations are consistent with established theory. Therefore, we proceed to the solution.\n\nThe system is a single-input single-output (SISO) continuous-time plant described by the state-space equations:\n$$\n\\dot{x}(t) = A x(t) + B u(t) + G w(t)\n$$\n$$\ny(t) = C x(t) + v(t)\n$$\nFrom the problem statement, the system matrices are scalar and given by $A=0$, the process noise input matrix is $G=1$, and the output matrix is $C=1$. The state $x(t)$, input $u(t)$, and output $y(t)$ are all in $\\mathbb{R}$. The process noise $w(t)$ and measurement noise $v(t)$ are white Gaussian processes with spectral densities $W_0 > 0$ and $V_0 > 0$, respectively.\n\nThe objective is to find the ratio $r \\equiv \\frac{W_0}{V_0}$ that makes the Kalman filter loop transfer function, $L_f(s)$, match a desired target loop transfer function, $L_d(s)$.\n\nFirst, we solve the algebraic Riccati equation (ARE) for the steady-state error covariance $P$. For this scalar system, the ARE is given as:\n$$\nA P + P A^T - P C^T V_0^{-1} C P + G W_0 G^T = 0\n$$\nSubstituting the given scalar values $A=0$, $C=1$, and $G=1$:\n$$\n0 \\cdot P + P \\cdot 0 - P \\cdot 1 \\cdot V_0^{-1} \\cdot 1 \\cdot P + 1 \\cdot W_0 \\cdot 1 = 0\n$$\nThis simplifies to a scalar algebraic equation for $P$:\n$$\nW_0 - \\frac{P^2}{V_0} = 0\n$$\n$$\nP^2 = W_0 V_0\n$$\nSince the error covariance $P$ must be non-negative, we take the positive root:\n$$\nP = \\sqrt{W_0 V_0}\n$$\nNext, we determine the steady-state Kalman gain, $K_f$. The formula is:\n$$\nK_f = P C^T V_0^{-1}\n$$\nSubstituting $P = \\sqrt{W_0 V_0}$ and $C=1$:\n$$\nK_f = (\\sqrt{W_0 V_0}) \\cdot 1 \\cdot V_0^{-1} = \\frac{\\sqrt{W_0 V_0}}{V_0}\n$$\nThis can be simplified by bringing $V_0$ inside the square root:\n$$\nK_f = \\sqrt{\\frac{W_0 V_0}{V_0^2}} = \\sqrt{\\frac{W_0}{V_0}}\n$$\nUsing the definition of the design parameter $r \\equiv \\frac{W_0}{V_0}$, the Kalman gain is expressed as:\n$$\nK_f = \\sqrt{r}\n$$\nThe Kalman filter loop transfer function, broken at the plant output, is given by $L_f(s) = C(sI - A)^{-1} K_f$. For this scalar system, $I=1$.\n$$\nL_f(s) = 1 \\cdot (s \\cdot 1 - 0)^{-1} K_f = \\frac{K_f}{s}\n$$\nSubstituting the expression for $K_f$:\n$$\nL_f(s) = \\frac{\\sqrt{r}}{s}\n$$\nThe target loop is specified as $L_d(s) = \\frac{\\omega_c}{s}$. The problem requires matching $L_f(s)$ and $L_d(s)$. Equating the two transfer functions gives:\n$$\n\\frac{\\sqrt{r}}{s} = \\frac{\\omega_c}{s}\n$$\nThis implies that we must have:\n$$\n\\sqrt{r} = \\omega_c\n$$\nSince $\\omega_c > 0$, we can square both sides without ambiguity:\n$$\nr = \\omega_c^2\n$$\nThis is the closed-form expression for the design parameter $r$ that achieves the specified loop transfer recovery objective.", "answer": "$$\n\\boxed{\\omega_c^{2}}\n$$", "id": "2721063"}, {"introduction": "Building on the analytical foundation, this practice moves to a complete numerical implementation of the input-side Loop Transfer Recovery procedure. Here, the objective is to make an LQG controller's loop transfer function recover the desirable properties of a target LQR state-feedback design. This hands-on coding exercise [@problem_id:2751321] is invaluable for developing practical skills, as it requires you to implement the entire computational workflow from solving Riccati equations to analyzing frequency domain results to verify the LTR process.", "problem": "You are given a continuous-time, single-input single-output, linear time-invariant state-space model with real coefficients. Your task is to implement a numerical study of Loop Transfer Recovery (LTR) for a Linear Quadratic Gaussian (LQG) regulator, and to verify the symmetry property of the root locus for real systems. Your program must compute the Linear Quadratic Regulator (LQR), the Kalman filter for several Linear Quadratic Gaussian (LQG) noise intensity values, and frequency-domain loop transfer magnitudes to demonstrate that the LQG input-loop transfer approaches the state-feedback LQR loop as the Loop Transfer Recovery (LTR) tuning parameter increases. Additionally, your program must check the symmetric root locus property by evaluating the eigenvalues of the closed-loop state matrix under scalar gain variation.\n\nUse the following fixed plant and design data:\n- State matrix: \n$$\nA = \\begin{bmatrix}\n0 & 1 & 0 \\\\\n0 & 0 & 1 \\\\\n-3 & -3 & -1\n\\end{bmatrix}\n$$\n- Input matrix:\n$$\nB = \\begin{bmatrix}\n0 \\\\\n0 \\\\\n1\n\\end{bmatrix}\n$$\n- Output matrix:\n$$\nC = \\begin{bmatrix}\n1 & 0 & 0\n\\end{bmatrix}\n$$\n- Direct feedthrough:\n$$\nD = \\begin{bmatrix}\n0\n\\end{bmatrix}\n$$\n\nDesign an Linear Quadratic Regulator (LQR) state-feedback gain using the standard algebraic Riccati equation with:\n- State weighting:\n$$\nQ = \\mathrm{diag}(10,\\,1,\\,1)\n$$\n- Control weighting:\n$$\nR = \\begin{bmatrix}\n1\n\\end{bmatrix}\n$$\n\nDesign a continuous-time steady-state Kalman filter (the estimator of a Linear Quadratic Gaussian (LQG) regulator) using the estimator algebraic Riccati equation with measurement noise covariance and process noise covariance defined as:\n- Measurement noise covariance:\n$$\nV = \\begin{bmatrix}\n1\n\\end{bmatrix}\n$$\n- Process noise covariance for Loop Transfer Recovery (LTR):\n$$\nW(\\alpha) = \\alpha \\, I_3\n$$\nfor the tuning parameter values\n$$\n\\alpha \\in \\{10^{-3},\\,10^{-1},\\,10^{1},\\,10^{3}\\}.\n$$\n\nDefine the following transfer functions in the complex frequency domain $s = j \\omega$ for $\\omega > 0$:\n1. The state-feedback LQR loop element (a scalar transfer function) at the plant input:\n$$\nL_{\\mathrm{LQR}}(s) \\triangleq K \\, (s I - A)^{-1} B,\n$$\nwhere $K$ is the LQR gain.\n2. The Linear Quadratic Gaussian (LQG) input-loop transfer element formed by the plant, the estimator, and the LQR gain:\n$$\nL_{\\mathrm{LQG}}(s;\\alpha) \\triangleq K \\left(s I - (A - B K - L(\\alpha) C)\\right)^{-1} L(\\alpha) \\, C \\, (s I - A)^{-1} B,\n$$\nwhere $L(\\alpha)$ is the Kalman filter gain obtained from solving the estimator Riccati equation with $W(\\alpha)$ and $V$.\n\nYour program must:\n- Compute the LQR gain $K$ and, for each specified $\\alpha$, compute the Kalman gain $L(\\alpha)$.\n- Evaluate the magnitudes $\\lvert L_{\\mathrm{LQR}}(j \\omega)\\rvert$ and $\\lvert L_{\\mathrm{LQG}}(j \\omega;\\alpha)\\rvert$ on a logarithmically spaced grid of frequencies\n$$\n\\omega \\in \\left[10^{-2},\\,10^{2}\\right] \\ \\text{radians/second}\n$$\nwith at least $100$ points.\n- For each $\\alpha$, compute the mean relative magnitude error over the frequency grid:\n$$\nE(\\alpha) \\triangleq \\frac{1}{N} \\sum_{i=1}^{N} \\frac{\\left|\\,\\lvert L_{\\mathrm{LQG}}(j \\omega_i;\\alpha)\\rvert - \\lvert L_{\\mathrm{LQR}}(j \\omega_i)\\rvert\\,\\right|}{\\lvert L_{\\mathrm{LQR}}(j \\omega_i)\\rvert + \\varepsilon},\n$$\nwith $N$ the number of frequency points and $\\varepsilon = 10^{-9}$ a small positive number to avoid division by zero.\n\nAdditionally, verify numerically the symmetric root locus property as follows. For a real closed-loop state matrix of the form\n$$\nA_{\\gamma} \\triangleq A - \\gamma \\, B K,\n$$\nwith scalar gain $\\gamma > 0$, the eigenvalues should be symmetric with respect to the real axis; that is, if $\\lambda$ is an eigenvalue with nonzero imaginary part, then its complex conjugate $\\overline{\\lambda}$ must also be an eigenvalue. Test this property for\n$$\n\\gamma \\in \\{10^{-1},\\, 1,\\, 10\\}.\n$$\nDefine a numerical tolerance $\\tau = 10^{-7}$ on the imaginary parts and pairwise matching.\n\nTest suite to implement and evaluate:\n- LTR tuning parameters:\n$$\n\\alpha \\in \\{10^{-3},\\,10^{-1},\\,10^{1},\\,10^{3}\\}.\n$$\n- Root locus gain values:\n$$\n\\gamma \\in \\{10^{-1},\\, 1,\\, 10\\}.\n$$\n- Frequency grid:\n$$\n\\omega \\in \\left[10^{-2},\\,10^{2}\\right] \\ \\text{radians/second}\n$$\nwith $N = 150$ logarithmically spaced points.\n\nOutput specification:\n- Your program must output a single line containing a list with five entries:\n    - Four floating-point values corresponding to $E(10^{-3})$, $E(10^{-1})$, $E(10^{1})$, and $E(10^{3})$ in that order.\n    - One boolean value indicating whether the symmetric root locus property holds for all tested $\\gamma$ values within tolerance $\\tau$.\n- The output must be printed exactly as a comma-separated list enclosed in square brackets, for example:\n$$\n[\\text{E1},\\text{E2},\\text{E3},\\text{E4},\\text{bool}]\n$$\nNo additional text should be printed.\n\nAll numerical values are dimensionless, and no physical units are required. Angles (frequencies) are in radians per second by definition of $s = j \\omega$ and must be treated as such. The final answers for the error metrics must be floating-point numbers, and the symmetry verification must be a boolean. Your solution must be computationally self-contained and not require any user input.", "solution": "The problem statement has been rigorously validated and is deemed valid. It is scientifically grounded in the principles of modern control theory, specifically concerning the design and analysis of Linear Quadratic Regulator (LQR), Linear Quadratic Gaussian (LQG) controllers, and the associated Loop Transfer Recovery (LTR) methodology. The problem is well-posed, with all necessary parameters and definitions provided to ensure a unique, computable solution. All terms are objective and precisely defined. We will now proceed with a systematic, principle-based solution.\n\nThe solution is structured into four main parts:\n1.  Synthesis of the LQR state-feedback gain $K$.\n2.  Synthesis of the Kalman filter gain $L(\\alpha)$ for each specified noise intensity parameter $\\alpha$.\n3.  Numerical evaluation of Loop Transfer Recovery by comparing the frequency responses of the LQR and LQG loop transfer functions.\n4.  Numerical verification of the symmetric root locus property for a real linear system.\n\n**1. LQR Controller Synthesis**\n\nThe objective of the LQR design is to find the optimal state-feedback gain matrix $K$ for the control law $u = -Kx$ that minimizes the quadratic cost function:\n$$\nJ = \\int_{0}^{\\infty} (x^T Q x + u^T R u) \\, dt\n$$\nFor a continuous-time linear time-invariant (LTI) system $\\dot{x} = Ax + Bu$, the optimal gain $K$ is found by first solving the continuous-time Algebraic Riccati Equation (CARE) for the unique, symmetric, positive semi-definite matrix $P$:\n$$\nA^T P + P A - P B R^{-1} B^T P + Q = 0\n$$\nGiven the system matrices $A$ and $B$, and the weighting matrices $Q = \\mathrm{diag}(10, 1, 1)$ and $R = [1]$, we solve this equation for $P$. The system pair $(A, B)$ is controllable, and the pair $(A, Q^{1/2})$ is observable, which guarantees the existence of a unique positive definite solution $P$ that stabilizes the closed-loop system $A-BK$.\n\nThe optimal LQR gain is then calculated as:\n$$\nK = R^{-1} B^T P\n$$\nThis gain matrix $K$ will be used both for the state-feedback loop transfer function and in the construction of the LQG controller.\n\n**2. Kalman Filter Synthesis**\n\nThe LQG controller uses a state estimator, which in this case is a continuous-time steady-state Kalman filter. The filter estimates the system state $x$ based on the measured output $y = Cx + v$, where $v$ is measurement noise. The dynamics are driven by process noise $w$, such that $\\dot{x} = Ax + Bu + w$. The filter design requires solving a dual version of the CARE. The filter error covariance matrix $X$ is the symmetric, positive semi-definite solution to the estimator ARE:\n$$\nA X + X A^T - X C^T V^{-1} C X + W = 0\n$$\nHere, $W$ and $V$ are the process and measurement noise covariance matrices, respectively. We are given $V = [1]$ and a tunable process noise covariance $W(\\alpha) = \\alpha I_3$, where $\\alpha$ is the LTR tuning parameter taking values in $\\{10^{-3}, 10^{-1}, 10^{1}, 10^{3}\\}$. The system pair $(A, C)$ is observable, and for $\\alpha > 0$, the pair $(A, W(\\alpha)^{1/2})$ is controllable, ensuring a unique, positive definite, stabilizing solution $X$ exists for each $\\alpha$.\n\nThe Kalman filter gain $L(\\alpha)$ is then computed as:\n$$\nL(\\alpha) = X C^T V^{-1}\n$$\nThis procedure is repeated for each value of $\\alpha$.\n\n**3. Loop Transfer Recovery (LTR) Analysis**\n\nLTR is a procedure to shape the loop transfer function of an LQG system to recover the desirable properties (e.g., robustness) of a target LQR loop. We will numerically verify the convergence of the LQG loop transfer function to the LQR loop transfer function as the parameter $\\alpha$ increases.\n\nFirst, we define the LQR loop transfer function (breaking the loop at the plant input):\n$$\nL_{\\mathrm{LQR}}(s) = K (s I - A)^{-1} B\n$$\nNext, we use the problem-defined LQG input-loop transfer function, which combines the plant $G_p(s) = C(sI-A)^{-1}B$ and the LQG compensator:\n$$\nL_{\\mathrm{LQG}}(s;\\alpha) = K \\left(s I - (A - B K - L(\\alpha) C)\\right)^{-1} L(\\alpha) \\, C \\, (s I - A)^{-1} B\n$$\nThe LTR theorem suggests that, under certain conditions, as the intensity of the process noise is increased relative to the measurement noise (i.e., as $\\alpha \\to \\infty$), the magnitude of the LQG loop transfer function should approach that of the LQR loop. We will evaluate the magnitudes $|L_{\\mathrm{LQR}}(j\\omega)|$ and $|L_{\\mathrm{LQG}}(j\\omega; \\alpha)|$ over a logarithmic grid of frequencies $\\omega \\in [10^{-2}, 10^{2}]$ with $N=150$ points.\n\nFor each $\\alpha$, we quantify the recovery error using the mean relative magnitude error:\n$$\nE(\\alpha) = \\frac{1}{N} \\sum_{i=1}^{N} \\frac{\\left|\\,|L_{\\mathrm{LQG}}(j \\omega_i;\\alpha)| - |L_{\\mathrm{LQR}}(j \\omega_i)|\\,\\right|}{|L_{\\mathrm{LQR}}(j \\omega_i)| + \\varepsilon}\n$$\nwhere $\\varepsilon = 10^{-9}$ is a regularization constant. We expect $E(\\alpha)$ to decrease as $\\alpha$ increases.\n\n**4. Symmetric Root Locus Verification**\n\nA fundamental property of any LTI system described by real-valued matrices is that the characteristic polynomial has real coefficients. Consequently, the roots of this polynomial—the system's eigenvalues—must appear in complex conjugate pairs. If $\\lambda$ is an eigenvalue, then its complex conjugate $\\overline{\\lambda}$ must also be an eigenvalue.\n\nWe will verify this property for the closed-loop system matrix:\n$$\nA_{\\gamma} = A - \\gamma B K\n$$\nfor a varying scalar gain $\\gamma > 0$. The eigenvalues of $A_{\\gamma}$ for $\\gamma \\in \\{10^{-1}, 1, 10\\}$ will be computed. For each set of eigenvalues, we will implement a numerical check. The set of complex eigenvalues (those with an imaginary part exceeding a tolerance $\\tau = 10^{-7}$) will be partitioned. We then verify that for each complex eigenvalue $\\lambda = a + jb$ in the set, its conjugate $\\overline{\\lambda} = a - jb$ is also present, within the specified tolerance. The property is considered to hold if all complex eigenvalues for all tested values of $\\gamma$ can be successfully paired.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import solve_continuous_are\n\ndef solve():\n    \"\"\"\n    Performs a numerical study of Loop Transfer Recovery (LTR) for an LQG regulator\n    and verifies the symmetric root locus property for a given LTI system.\n    \"\"\"\n    # Define constants and system matrices from the problem statement.\n    A = np.array([[0., 1., 0.], [0., 0., 1.], [-3., -3., -1.]])\n    B = np.array([[0.], [0.], [1.]])\n    C = np.array([[1., 0., 0.]])\n    # D is zero and not explicitly needed for the requested calculations.\n\n    # LQR design parameters\n    Q = np.diag([10., 1., 1.])\n    R = np.array([[1.]])\n\n    # LTR and Kalman filter parameters\n    alphas = [1e-3, 1e-1, 1e1, 1e3]\n    V = np.array([[1.]])\n\n    # Symmetric root locus parameters\n    gammas = [1e-1, 1., 10.]\n\n    # Numerical parameters\n    N_omega = 150\n    omega = np.logspace(-2, 2, N_omega)\n    epsilon = 1e-9\n    tau = 1e-7\n\n    # --- Part 1: LQR Controller Synthesis ---\n    # Solve the continuous-time Algebraic Riccati Equation (CARE) for P\n    # A'P + PA - PBR^-1B'P + Q = 0\n    try:\n        P = solve_continuous_are(A, B, Q, R)\n    except np.linalg.LinAlgError:\n        print(\"[Error: LQR Riccati solver failed]\")\n        return\n        \n    # Calculate the LQR gain K = R^-1 B' P\n    K = np.linalg.inv(R) @ B.T @ P\n\n    # --- Part 2  3: LTR Analysis ---\n    #\n    # 2.1: Evaluate the LQR loop transfer magnitude |L_LQR(jw)|\n    s_grid = 1j * omega\n    mag_lqr = np.zeros(N_omega, dtype=float)\n    inv_sI_A_grid = np.array([np.linalg.inv(s * np.identity(3) - A) for s in s_grid])\n    for i in range(N_omega):\n        # L_LQR(s) = K * (sI - A)^-1 * B\n        L_lqr_s = K @ inv_sI_A_grid[i] @ B\n        mag_lqr[i] = np.abs(L_lqr_s[0, 0])\n\n    errors = []\n    for alpha in alphas:\n        # 2.2: Design Kalman filter for the current alpha\n        # Process noise covariance W(alpha) = alpha * I_3\n        W = alpha * np.identity(3)\n        \n        # Solve the dual CARE for the filter error covariance X\n        # AX + XA' - XC'V^-1CX + W = 0\n        # Use solver with substitutions: A->A.T, B->C.T, R->V, Q->W\n        try:\n            X = solve_continuous_are(A.T, C.T, W, V)\n        except np.linalg.LinAlgError:\n            print(f\"[Error: Kalman Riccati solver failed for alpha={alpha}]\")\n            return\n\n        # Calculate the Kalman gain L = X C' V^-1\n        L_gain = X @ C.T @ np.linalg.inv(V)\n\n        # 2.3: Evaluate the LQG loop transfer magnitude |L_LQG(jw; alpha)|\n        mag_lqg = np.zeros(N_omega, dtype=float)\n        # LQG closed-loop system matrix for the controller state\n        A_lqg_controller = A - B @ K - L_gain @ C\n        \n        for i in range(N_omega):\n            s = s_grid[i]\n            # L_LQG(s) = K * (sI - (A-BK-LC))^-1 * L * C * (sI-A)^-1 * B\n            inv_sI_A_lqg_ctrl = np.linalg.inv(s * np.identity(3) - A_lqg_controller)\n            inv_sI_A = inv_sI_A_grid[i]\n            \n            L_lqg_s = K @ inv_sI_A_lqg_ctrl @ L_gain @ C @ inv_sI_A @ B\n            mag_lqg[i] = np.abs(L_lqg_s[0, 0])\n\n        # 2.4: Compute the mean relative magnitude error E(alpha)\n        relative_error = np.abs(mag_lqg - mag_lqr) / (mag_lqr + epsilon)\n        mean_error = np.mean(relative_error)\n        errors.append(mean_error)\n\n    # --- Part 4: Symmetric Root Locus Verification ---\n    symmetry_holds_all = True\n    for gamma in gammas:\n        A_gamma = A - gamma * B @ K\n        eigenvalues = np.linalg.eigvals(A_gamma)\n        \n        # Create a list of eigenvalues not yet paired.\n        unpaired_evs = list(eigenvalues)\n        has_unpaired_complex = False\n\n        while unpaired_evs:\n            ev = unpaired_evs.pop(0)\n            \n            # If eigenvalue is effectively real, it needs no conjugate pair.\n            if np.abs(ev.imag) = tau:\n                continue\n            \n            # If it's a complex eigenvalue, find its conjugate in the remaining list.\n            found_conjugate = False\n            conjugate_idx = -1\n            for idx, other_ev in enumerate(unpaired_evs):\n                if np.abs(ev.real - other_ev.real)  tau and \\\n                   np.abs(ev.imag + other_ev.imag)  tau:\n                    conjugate_idx = idx\n                    found_conjugate = True\n                    break\n            \n            if found_conjugate:\n                # Remove the found conjugate from the list.\n                unpaired_evs.pop(conjugate_idx)\n            else:\n                # A complex eigenvalue was found without a conjugate pair.\n                has_unpaired_complex = True\n                break\n        \n        if has_unpaired_complex:\n            symmetry_holds_all = False\n            break\n\n    # Assemble and print the final results in the specified format.\n    final_output = errors + [symmetry_holds_all]\n    print(f\"[{','.join(map(str, final_output))}]\")\n\nsolve()\n```", "id": "2751321"}, {"introduction": "Our final practice problem serves as an essential lesson on the practical limits and potential fragility of Loop Transfer Recovery. It demonstrates that while LTR is powerful, its reliance on high-gain feedback can make the closed-loop system sensitive to unmodeled high-frequency dynamics, a common issue in real-world applications. By analyzing a specific counterexample [@problem_id:2721122], you will calculate the undesirable peaking in the system's closed-loop response, reinforcing the critical importance of considering model uncertainty in robust control design.", "problem": "Consider a single-input single-output plant used in an output loop transfer recovery (LTR) design within a linear quadratic Gaussian (LQG) framework. The nominal plant model is \n$$\nP_{\\mathrm{nom}}(s) \\;=\\; \\frac{1}{s(s+1)},\n$$\nbut the true plant has an unmodeled high-frequency pole at frequency $\\omega_{h}$, so that\n$$\nP_{\\mathrm{true}}(s) \\;=\\; \\frac{1}{s(s+1)\\left(1+\\frac{s}{\\omega_{h}}\\right)} \\;=\\; \\frac{1}{s(s+1)} \\cdot \\frac{1}{1+\\frac{s}{\\omega_{h}}}.\n$$\nIn output loop transfer recovery (LTR), with a fixed process noise intensity matrix and a measurement noise covariance scaled as $R=\\rho R_{0}$, it is widely observed that the recovered nominal loop around the plant output behaves like a first-order integrator with a crossover frequency that scales inversely with the square root of the measurement noise scale, namely\n$$\nL_{\\mathrm{nom}}(s;\\rho) \\;\\approx\\; \\frac{\\omega_{c}(\\rho)}{s}, \n\\quad \\text{with} \\quad \\omega_{c}(\\rho) \\;=\\; \\frac{k}{\\sqrt{\\rho}},\n$$\nfor some constant $k0$ determined by the fixed process noise intensity and the nominal design. Assume the effective recovered return ratio implemented by the LQG/LTR controller (as seen by the nominal plant) is achieved by the shaping\n$$\nL_{\\mathrm{nom}}(s;\\rho) \\;=\\; K_{\\mathrm{eff}}(s;\\rho)\\,P_{\\mathrm{nom}}(s), \n\\quad \\text{with} \\quad K_{\\mathrm{eff}}(s;\\rho) \\;=\\; \\omega_{c}(\\rho)\\,(s+1).\n$$\nConsequently, when applied to the true plant (which contains the unmodeled high-frequency pole at $\\omega_{h}$), the actual loop transfer becomes\n$$\nL_{\\mathrm{true}}(s;\\rho) \\;=\\; K_{\\mathrm{eff}}(s;\\rho)\\,P_{\\mathrm{true}}(s) \\;=\\; \\frac{\\omega_{c}(\\rho)}{s}\\cdot \\frac{1}{1+\\frac{s}{\\omega_{h}}}\n\\;=\\; \\frac{\\omega_{c}(\\rho)\\,\\omega_{h}}{s\\,(s+\\omega_{h})}.\n$$\nLet the complementary sensitivity function be defined by\n$$\nT_{\\mathrm{true}}(s;\\rho) \\;=\\; \\frac{L_{\\mathrm{true}}(s;\\rho)}{1 + L_{\\mathrm{true}}(s;\\rho)}.\n$$\nA designer starts from a benign nominal operating point with $\\rho=1$ and $k=100$, and then naively reduces $\\rho$ while keeping the nominal shaping paradigm unchanged, in an attempt to “improve” loop transfer recovery. Suppose the true plant’s unmodeled pole is at $\\omega_{h}=1000$ rad/s, and the designer reduces the measurement noise scale to $\\rho = 0.0025$.\n\nUsing only fundamental definitions and well-tested facts, derive $T_{\\mathrm{true}}(s;\\rho)$ for the true plant, compute its frequency response magnitude, and determine the exact peak magnitude of $\\left|T_{\\mathrm{true}}(\\mathrm{j}\\omega;\\rho)\\right|$ for $\\rho = 0.0025$ with the given parameters. Your answer must be a single unitless number corresponding to the peak magnitude rounded to four significant figures.", "solution": "The problem will first be validated for scientific soundness, self-consistency, and well-posedness.\n\nStep 1: Extract Givens.\nThe explicit givens are:\n- Nominal plant model: $P_{\\mathrm{nom}}(s) = \\frac{1}{s(s+1)}$\n- True plant model: $P_{\\mathrm{true}}(s) = \\frac{1}{s(s+1)\\left(1+\\frac{s}{\\omega_{h}}\\right)}$\n- Nominal loop transfer approximation: $L_{\\mathrm{nom}}(s;\\rho) \\approx \\frac{\\omega_{c}(\\rho)}{s}$\n- Crossover frequency scaling: $\\omega_{c}(\\rho) = \\frac{k}{\\sqrt{\\rho}}$\n- Effective controller for LTR shaping: $K_{\\mathrm{eff}}(s;\\rho) = \\omega_{c}(\\rho)\\,(s+1)$\n- True loop transfer function: $L_{\\mathrm{true}}(s;\\rho) = \\frac{\\omega_{c}(\\rho)\\,\\omega_{h}}{s\\,(s+\\omega_{h})}$\n- Complementary sensitivity function definition: $T_{\\mathrm{true}}(s;\\rho) = \\frac{L_{\\mathrm{true}}(s;\\rho)}{1 + L_{\\mathrm{true}}(s;\\rho)}$\n- Constant $k$: $k=100$\n- Unmodeled pole frequency: $\\omega_{h}=1000$ rad/s\n- Measurement noise scale: $\\rho = 0.0025$\n- Task: Determine the peak magnitude of $\\left|T_{\\mathrm{true}}(\\mathrm{j}\\omega;\\rho)\\right|$ for the given parameters, rounded to four significant figures.\n\nStep 2: Validate Using Extracted Givens.\nThe problem statement describes a standard scenario in robust control theory, specifically the fragility of Loop Transfer Recovery (LTR) for non-minimum phase systems or systems with unmodeled high-frequency dynamics. The transfer functions, definitions, and relationships are all standard in the field of linear control systems. The values provided are numerically consistent and do not violate any physical or mathematical principles. The problem is well-posed, asking for a specific, calculable quantity (the peak magnitude of a frequency response) for a well-defined system. All necessary data is provided. The problem is scientifically grounded, objective, and complete.\n\nStep 3: Verdict and Action.\nThe problem is deemed valid. A solution will be derived.\n\nThe objective is to compute the peak magnitude of the frequency response of the true complementary sensitivity function, $M_p = \\max_{\\omega} |T_{\\mathrm{true}}(\\mathrm{j}\\omega;\\rho)|$, for the specified parameters.\n\nFirst, we calculate the crossover frequency $\\omega_{c}(\\rho)$ using the provided values $k=100$ and $\\rho=0.0025$.\n$$\n\\omega_{c}(\\rho) = \\frac{k}{\\sqrt{\\rho}} = \\frac{100}{\\sqrt{0.0025}} = \\frac{100}{0.05} = 2000 \\text{ rad/s}\n$$\nNext, we formulate the true complementary sensitivity function, $T_{\\mathrm{true}}(s;\\rho)$. The true loop transfer function $L_{\\mathrm{true}}(s;\\rho)$ is given as:\n$$\nL_{\\mathrm{true}}(s;\\rho) = \\frac{\\omega_{c}(\\rho)\\,\\omega_{h}}{s\\,(s+\\omega_{h})}\n$$\nSubstituting the values $\\omega_c = 2000$ and $\\omega_h = 1000$:\n$$\nL_{\\mathrm{true}}(s) = \\frac{2000 \\cdot 1000}{s(s+1000)} = \\frac{2 \\times 10^{6}}{s^{2} + 1000s}\n$$\nThe complementary sensitivity function is defined as $T_{\\mathrm{true}}(s) = \\frac{L_{\\mathrm{true}}(s)}{1 + L_{\\mathrm{true}}(s)}$. Substituting the expression for $L_{\\mathrm{true}}(s)$:\n$$\nT_{\\mathrm{true}}(s) = \\frac{\\frac{\\omega_{c}\\omega_{h}}{s(s+\\omega_{h})}}{1 + \\frac{\\omega_{c}\\omega_{h}}{s(s+\\omega_{h})}} = \\frac{\\omega_{c}\\omega_{h}}{s(s+\\omega_{h}) + \\omega_{c}\\omega_{h}} = \\frac{\\omega_{c}\\omega_{h}}{s^2 + \\omega_{h}s + \\omega_{c}\\omega_{h}}\n$$\nThis is a standard second-order low-pass system of the form:\n$$\nT(s) = \\frac{\\omega_{n}^2}{s^2 + 2\\zeta\\omega_{n}s + \\omega_{n}^2}\n$$\nBy comparing the coefficients of $T_{\\mathrm{true}}(s)$ with the standard form, we identify the natural frequency $\\omega_n$ and the damping ratio $\\zeta$.\nThe squared natural frequency is:\n$$\n\\omega_{n}^2 = \\omega_{c}\\omega_{h} = (2000)(1000) = 2 \\times 10^{6} \\; (\\text{rad/s})^2\n$$\nThus, the natural frequency is:\n$$\n\\omega_n = \\sqrt{2 \\times 10^{6}} = 1000\\sqrt{2} \\text{ rad/s}\n$$\nThe term with the damping ratio is:\n$$\n2\\zeta\\omega_{n} = \\omega_{h}\n$$\nSolving for $\\zeta$:\n$$\n\\zeta = \\frac{\\omega_{h}}{2\\omega_{n}} = \\frac{1000}{2(1000\\sqrt{2})} = \\frac{1}{2\\sqrt{2}}\n$$\nThe peak magnitude, $M_p$, of the frequency response for a second-order system is a well-tested fact, given by the formula:\n$$\nM_p = \\frac{1}{2\\zeta\\sqrt{1-\\zeta^2}}\n$$\nThis formula is valid for $0  \\zeta  \\frac{1}{\\sqrt{2}}$. We check if our value of $\\zeta$ falls in this range.\n$$\n\\zeta = \\frac{1}{2\\sqrt{2}} \\approx 0.3536\n$$\nThe upper limit is $\\frac{1}{\\sqrt{2}} \\approx 0.7071$. Since $0  0.3536  0.7071$, the condition is satisfied, and a resonant peak exists.\n\nWe now compute $M_p$ using the exact value of $\\zeta$. First, we compute $\\zeta^2$:\n$$\n\\zeta^2 = \\left(\\frac{1}{2\\sqrt{2}}\\right)^2 = \\frac{1}{8}\n$$\nNow substitute this into the formula for $M_p$:\n$$\nM_p = \\frac{1}{2\\left(\\frac{1}{2\\sqrt{2}}\\right)\\sqrt{1 - \\frac{1}{8}}} = \\frac{1}{\\frac{1}{\\sqrt{2}}\\sqrt{\\frac{7}{8}}} = \\frac{1}{\\frac{1}{\\sqrt{2}}\\frac{\\sqrt{7}}{\\sqrt{8}}} = \\frac{1}{\\frac{\\sqrt{7}}{\\sqrt{16}}} = \\frac{1}{\\frac{\\sqrt{7}}{4}} = \\frac{4}{\\sqrt{7}}\n$$\nTo provide the numerical answer, we compute the value of this expression and round to four significant figures as required.\n$$\nM_p = \\frac{4}{\\sqrt{7}} \\approx \\frac{4}{2.6457513...} \\approx 1.51185789...\n$$\nRounding to four significant figures gives:\n$$\nM_p \\approx 1.512\n$$\nThis result demonstrates the danger of naive LTR; the aggressive recovery attempt (low $\\rho$) leads to a significant peak in the closed-loop frequency response, indicating poor robustness and a tendency toward oscillatory behavior or instability due to unmodeled dynamics.", "answer": "$$\n\\boxed{1.512}\n$$", "id": "2721122"}]}