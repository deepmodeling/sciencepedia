{"hands_on_practices": [{"introduction": "Mastering $\\mathcal{H}_{\\infty}$ control begins with a firm grasp of the fundamental relationships within a feedback system. This exercise challenges you to derive the key closed-loop transfer functions from scratch, expressing them in terms of the sensitivity ($S$) and complementary sensitivity ($T$) functions. By then applying these formulas to a concrete numerical example [@problem_id:2710882], you will solidify your understanding of how exogenous signals like references, disturbances, and noise propagate through the system.", "problem": "Consider a standard single-input single-output negative-feedback configuration used in mixed-sensitivity $\\mathcal{H}_{\\infty}$ control synthesis. The continuous-time plant is $P(s)$ and the controller is $K(s)$. The reference $r$ is compared to the measured output $y$ corrupted by measurement noise $n$ to form the error $e$, the control signal is $u = K(s)\\,e$, and an additive input disturbance $d$ enters at the plant input. Thus the interconnection is described by the relations\n- $e = r - (y + n)$,\n- $u = K(s)\\,e$,\n- $y = P(s)\\,(u + d)$.\n\nStarting only from these relations and the definitions of the sensitivity $S(s)$ and complementary sensitivity $T(s)$, derive the six closed-loop transfer functions from the exogenous inputs $r$, $d$, $n$ to the regulated outputs $y$ and $u$, and express your answers in terms of $S(s)$ and $T(s)$. Then, for the specific plant and controller\n$$\nP(s) = \\frac{s + 4}{(s + 2)(s + 3)}, \n\\qquad\nK(s) = 6\\,\\frac{s + 1}{s + 0.5},\n$$\ncompute the scalar quantity\n$$\nJ \\equiv \\left|S(\\mathrm{i}\\,1)\\right|^{2} + \\left|T(\\mathrm{i}\\,1)\\right|^{2} + \\left|K(\\mathrm{i}\\,1)\\,S(\\mathrm{i}\\,1)\\right|^{2},\n$$\nwhere $\\mathrm{i} = \\sqrt{-1}$ and the frequency is $1$ rad/s. Round your final numerical answer for $J$ to four significant figures. Express the final answer as a pure number (unitless).", "solution": "We begin with the fundamental closed-loop relations for a standard negative-feedback interconnection with an additive input disturbance and measurement noise:\n$$\ne = r - (y + n), \\qquad u = K(s)\\,e, \\qquad y = P(s)\\,(u + d).\n$$\nWe eliminate $e$ and $u$ to express $y$ in terms of $r$, $d$, and $n$. Substituting $u = K(s)\\,(r - y - n)$ into $y = P(s)\\,(u + d)$ yields\n$$\ny = P(s)\\,\\big(K(s)\\,(r - y - n) + d\\big) = P(s)K(s)\\,(r - y - n) + P(s)\\,d.\n$$\nCollecting the terms in $y$ gives\n$$\n\\big(1 + P(s)K(s)\\big)\\,y = P(s)K(s)\\,(r - n) + P(s)\\,d.\n$$\nIntroduce the sensitivity $S(s)$ and complementary sensitivity $T(s)$ for single-input single-output systems:\n$$\nS(s) \\equiv \\frac{1}{1 + P(s)K(s)}, \n\\qquad\nT(s) \\equiv \\frac{P(s)K(s)}{1 + P(s)K(s)}.\n$$\nSolving for $y$ gives\n$$\ny = T(s)\\,(r - n) + S(s)\\,P(s)\\,d,\n$$\nwhich immediately produces the three transfer functions to the output $y$:\n$$\nG_{y r}(s) = T(s), \n\\qquad\nG_{y d}(s) = S(s)\\,P(s), \n\\qquad\nG_{y n}(s) = -\\,T(s).\n$$\nNext, we express $u$ in terms of $r$, $d$, and $n$. Using $u = K(s)\\,(r - y - n)$ and the expression for $y$ above,\n\n$$\nu \\;=\\; K(s)\\,r \\;-\\; K(s)\\,\\big(T(s)\\,(r - n) + S(s)\\,P(s)\\,d\\big) \\;-\\; K(s)\\,n.\n$$\n\nGrouping like terms yields\n\n$$\nu \\;=\\; \\big(K(s) - K(s)\\,T(s)\\big)\\,r \\;-\\; K(s)\\,S(s)\\,P(s)\\,d \\;+\\; \\big(K(s)\\,T(s) - K(s)\\big)\\,n.\n$$\n\nUsing the identity $S(s) + T(s) = 1$ and the relation $K(s)\\,S(s)\\,P(s) = \\dfrac{K(s)P(s)}{1 + K(s)P(s)} = T(s)$, we simplify to\n\n$$\nu \\;=\\; K(s)\\,S(s)\\,r \\;-\\; T(s)\\,d \\;-\\; K(s)\\,S(s)\\,n.\n$$\n\nTherefore, the three transfer functions to the control input $u$ are\n\n$$\nG_{u r}(s) = K(s)\\,S(s), \n\\qquad\nG_{u d}(s) = -\\,T(s), \n\\qquad\nG_{u n}(s) = -\\,K(s)\\,S(s).\n$$\n\nThese six mappings complete the first part, all expressed in terms of $S(s)$ and $T(s)$.\n\nNow specialize to the given plant and controller:\n\n$$\nP(s) = \\frac{s + 4}{(s + 2)(s + 3)}, \n\\qquad\nK(s) = 6\\,\\frac{s + 1}{s + 0.5}.\n$$\n\nDefine the loop transfer function\n\n$$\nL(s) \\equiv P(s)K(s) = 6\\,\\frac{(s + 4)(s + 1)}{(s + 2)(s + 3)(s + 0.5)}.\n$$\n\nThen\n\n$$\nS(s) = \\frac{1}{1 + L(s)}, \n\\qquad\nT(s) = \\frac{L(s)}{1 + L(s)}.\n$$\n\nWe now evaluate at $s = \\mathrm{i}\\,1$. First compute $P(\\mathrm{i})$ and $K(\\mathrm{i})$ by substituting $s = \\mathrm{i}$:\n\n$$\nP(\\mathrm{i}) = \\frac{\\mathrm{i} + 4}{(\\mathrm{i} + 2)(\\mathrm{i} + 3)}.\n$$\n\nThe denominator is\n\n$$\n(\\mathrm{i} + 2)(\\mathrm{i} + 3) = (2 + \\mathrm{i})(3 + \\mathrm{i}) = (5 + 5\\,\\mathrm{i}),\n$$\n\nso\n\n$$\nP(\\mathrm{i}) = \\frac{4 + \\mathrm{i}}{5 + 5\\,\\mathrm{i}} = \\frac{4 + \\mathrm{i}}{5(1 + \\mathrm{i})}\n= \\frac{0.8 + 0.2\\,\\mathrm{i}}{1 + \\mathrm{i}} \n= \\frac{(0.8 + 0.2\\,\\mathrm{i})(1 - \\mathrm{i})}{2} \n= 0.5 - 0.3\\,\\mathrm{i}.\n$$\n\nNext,\n\n$$\nK(\\mathrm{i}) = 6\\,\\frac{1 + \\mathrm{i}}{0.5 + \\mathrm{i}}.\n$$\n\nCompute the fraction:\n\n$$\n\\frac{1 + \\mathrm{i}}{0.5 + \\mathrm{i}} = \\frac{(1 + \\mathrm{i})(0.5 - \\mathrm{i})}{(0.5 + \\mathrm{i})(0.5 - \\mathrm{i})}\n= \\frac{1.5 - 0.5\\,\\mathrm{i}}{1.25} = 1.2 - 0.4\\,\\mathrm{i},\n$$\n\nhence\n\n$$\nK(\\mathrm{i}) = 6\\,(1.2 - 0.4\\,\\mathrm{i}) = 7.2 - 2.4\\,\\mathrm{i}.\n$$\n\nTherefore the loop transfer at $\\mathrm{i}$ is\n\n$$\nL(\\mathrm{i}) = P(\\mathrm{i})K(\\mathrm{i}) = (0.5 - 0.3\\,\\mathrm{i})(7.2 - 2.4\\,\\mathrm{i}) = 2.88 - 3.36\\,\\mathrm{i}.\n$$\n\nThus\n\n$$\n1 + L(\\mathrm{i}) = 3.88 - 3.36\\,\\mathrm{i}.\n$$\n\nThe sensitivity at $\\mathrm{i}$ is\n\n$$\nS(\\mathrm{i}) = \\frac{1}{1 + L(\\mathrm{i})} = \\frac{1}{3.88 - 3.36\\,\\mathrm{i}} \n= \\frac{3.88 + 3.36\\,\\mathrm{i}}{3.88^{2} + 3.36^{2}} \n= \\frac{3.88 + 3.36\\,\\mathrm{i}}{26.344}.\n$$\n\nA useful byproduct is the exact squared magnitude\n\n$$\n\\big|S(\\mathrm{i})\\big|^{2} = \\frac{3.88^{2} + 3.36^{2}}{(3.88^{2} + 3.36^{2})^{2}} = \\frac{1}{26.344}.\n$$\n\nThe complementary sensitivity obeys $T(\\mathrm{i}) = L(\\mathrm{i})\\,S(\\mathrm{i})$, so its squared magnitude is\n\n$$\n\\big|T(\\mathrm{i})\\big|^{2} = \\big|L(\\mathrm{i})\\big|^{2}\\,\\big|S(\\mathrm{i})\\big|^{2}.\n$$\n\nCompute the needed magnitudes:\n\n$$\n\\big|L(\\mathrm{i})\\big|^{2} = 2.88^{2} + 3.36^{2} = 8.2944 + 11.2896 = 19.584,\n$$\n\n\n$$\n\\big|K(\\mathrm{i})\\big|^{2} = 7.2^{2} + 2.4^{2} = 51.84 + 5.76 = 57.6.\n$$\n\nTherefore\n\n$$\n\\big|S(\\mathrm{i})\\big|^{2} = \\frac{1}{26.344}, \n\\qquad\n\\big|T(\\mathrm{i})\\big|^{2} = \\frac{19.584}{26.344}, \n\\qquad\n\\big|K(\\mathrm{i})\\,S(\\mathrm{i})\\big|^{2} = \\frac{57.6}{26.344}.\n$$\n\nThe requested scalar is\n\n$$\nJ \\equiv \\big|S(\\mathrm{i})\\big|^{2} + \\big|T(\\mathrm{i})\\big|^{2} + \\big|K(\\mathrm{i})\\,S(\\mathrm{i})\\big|^{2} \n= \\frac{1 + 19.584 + 57.6}{26.344} = \\frac{78.184}{26.344}.\n$$\n\nCarrying out the division,\n\n$$\nJ \\approx 2.9678075\\ldots\n$$\n\nRounded to four significant figures,\n\n$$\nJ \\approx 2.968\n$$", "answer": "$$\\boxed{2.968}$$", "id": "2710882"}, {"introduction": "While transfer functions provide great intuition, modern $\\mathcal{H}_{\\infty}$ synthesis relies on a state-space formulation known as the 'generalized plant'. This practice guides you through the essential process of augmenting a core plant model with performance weighting filters to construct this generalized plant [@problem_id:2710896]. Successfully assembling the state-space matrices ($C_{1}, D_{11}, D_{12}$) is a critical skill for framing any mixed-sensitivity problem for computational solvers.", "problem": "Consider a continuous-time Linear Time-Invariant (LTI) generalized plant formulated for the mixed-sensitivity $\\mathcal{H}_{\\infty}$ control problem. The interconnection consists of a plant with state $x \\in \\mathbb{R}^{2}$, control input $u \\in \\mathbb{R}$, measured output $y \\in \\mathbb{R}$, and exogenous input $w = \\begin{bmatrix} r & d & n \\end{bmatrix}^{\\top} \\in \\mathbb{R}^{3}$ collecting the reference $r$, input disturbance $d$, and measurement noise $n$. The plant is given by\n\n$$\n\\dot{x} = A x + B_{1} w + B_{2} u, \\quad y = C_{2} x + D_{21} w + D_{22} u,\n$$\n\nwith\n\n$$\nA = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}, \\quad\nB_{1} = \\begin{bmatrix} 0 & 0 & 0 \\\\ 0 & 1 & 0 \\end{bmatrix}, \\quad\nB_{2} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix},\n$$\n\n\n$$\nC_{2} = \\begin{bmatrix} 1 & 0 \\end{bmatrix}, \\quad\nD_{21} = \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix}, \\quad\nD_{22} = 0.\n$$\n\nLet the mixed-sensitivity shaping filters be first-order systems\n\n$$\nW_{1}(s) = k_{1}\\,\\frac{s + z_{1}}{s + p_{1}}, \\quad\nW_{2}(s) = k_{2}\\,\\frac{s + z_{2}}{s + p_{2}}, \\quad\nW_{3}(s) = k_{3}\\,\\frac{s + z_{3}}{s + p_{3}},\n$$\n\nwith numerical parameters\n\n$$\nk_{1} = 2,\\ z_{1} = 1,\\ p_{1} = 0.1; \\quad\nk_{2} = 0.5,\\ z_{2} = 10,\\ p_{2} = 50; \\quad\nk_{3} = 0.3,\\ z_{3} = 100,\\ p_{3} = 5.\n$$\n\nEach $W_{i}$ is realized in state-space with the canonical choice\n\n$$\nA_{w_{i}} = -p_{i}, \\quad B_{w_{i}} = 1, \\quad C_{w_{i}} = k_{i}(z_{i} - p_{i}), \\quad D_{w_{i}} = k_{i},\n$$\n\nso that the weighted performance outputs are\n\n$$\nz_{1} = W_{1}(s)\\,e, \\quad e := r - y; \\qquad\nz_{2} = W_{2}(s)\\,u; \\qquad\nz_{3} = W_{3}(s)\\,y.\n$$\n\nForm the augmented generalized plant with state vector $x_{a} = \\begin{bmatrix} x^{\\top} & x_{1} & x_{2} & x_{3} \\end{bmatrix}^{\\top}$, where $x_{i}$ is the state of $W_{i}$. In the standard mixed-sensitivity formulation, the performance output stacks as $z = \\begin{bmatrix} z_{1} \\\\ z_{2} \\\\ z_{3} \\end{bmatrix}$ and satisfies\n\n$$\nz = C_{1} x_{a} + D_{11} w + D_{12} u,\n$$\n\nwhile the measurement equation retains the plantâ€™s form\n\n$$\ny = C_{2}^{a} x_{a} + D_{21} w + D_{22} u,\n$$\n\nwith $C_{2}^{a}$ being the augmented measurement matrix.\n\nTasks:\n- Using only first principles of interconnections and state-space realization, derive the shaped matrices $C_{1}$, $D_{11}$, and $D_{12}$ explicitly in terms of the given numerical data. State clearly the ordering of the state components in $x_{a}$.\n- Then compute the Frobenius norm squared of the shaped matrix $C_{1}$, that is, compute $\\|C_{1}\\|_{F}^{2} = \\operatorname{trace}(C_{1}^{\\top} C_{1})$.\n\nProvide the final scalar $\\|C_{1}\\|_{F}^{2}$ as your answer. Give the exact value; do not round. Do not include units.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. There are no contradictions or missing information. The request is to construct the output matrices of an augmented state-space system for a mixed-sensitivity $H_{\\infty}$ control problem and compute a specific matrix norm. This is a standard procedure in robust control theory. We shall proceed with the derivation from first principles.\n\nThe augmented state vector is defined as $x_{a} = \\begin{bmatrix} x^{\\top} & x_1 & x_2 & x_3 \\end{bmatrix}^{\\top}$, where $x \\in \\mathbb{R}^{2}$ is the state of the plant and $x_i \\in \\mathbb{R}$ is the state of the weighting filter $W_i(s)$ for $i \\in \\{1, 2, 3\\}$. The total dimension of the augmented state is $2+1+1+1 = 5$.\n\nThe performance outputs $z_1, z_2, z_3$ are defined by passing certain signals through the weighting filters $W_1, W_2, W_3$. The state-space realization of each filter $W_i(s)$ with input $u_{w_i}$ and output $y_{w_i}$ is given by:\n$$\n\\dot{x}_i = A_{w_i} x_i + B_{w_i} u_{w_i}\n$$\n$$\ny_{w_i} = C_{w_i} x_i + D_{w_i} u_{w_i}\n$$\nThe problem specifies $z_1 = y_{w_1}$, $z_2 = y_{w_2}$, and $z_3 = y_{w_3}$. The inputs to these filters are:\n\\begin{enumerate}\n    \\item $u_{w_1} = e = r-y$. The reference $r$ is the first component of the exogenous input vector $w$, which can be written as $r = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} w$.\n    \\item $u_{w_2} = u$.\n    \\item $u_{w_3} = y$.\n\\end{enumerate}\nThe measured output $y$ is given by the plant equation:\n$$\ny = C_{2} x + D_{21} w + D_{22} u\n$$\nSubstituting the given matrices, and noting $D_{22}=0$:\n$$\ny = C_{2} x + D_{21} w\n$$\nNow, we express the filter inputs in terms of the plant state $x$, exogenous input $w$, and control input $u$:\n\\begin{itemize}\n    \\item $u_{w_1} = r - y = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} w - (C_{2} x + D_{21} w) = -C_{2} x + (\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) w$.\n    \\item $u_{w_2} = u$.\n    \\item $u_{w_3} = y = C_{2} x + D_{21} w$.\n\\end{itemize}\nNext, we write the expressions for the performance outputs $z_1, z_2, z_3$ by substituting the filter inputs into their output equations.\n\\begin{itemize}\n    \\item $z_1 = C_{w_1} x_1 + D_{w_1} u_{w_1} = C_{w_1} x_1 + D_{w_1} \\left( -C_{2} x + (\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) w \\right)$\n    $$z_1 = -D_{w_1} C_{2} x + C_{w_1} x_1 + D_{w_1} (\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) w$$\n    \\item $z_2 = C_{w_2} x_2 + D_{w_2} u_{w_2} = C_{w_2} x_2 + D_{w_2} u$\n    \\item $z_3 = C_{w_3} x_3 + D_{w_3} u_{w_3} = C_{w_3} x_3 + D_{w_3} (C_{2} x + D_{21} w)$\n    $$z_3 = D_{w_3} C_{2} x + C_{w_3} x_3 + D_{w_3} D_{21} w$$\n\\end{itemize}\nWe assemble these into the augmented system output equation $z = C_{1} x_{a} + D_{11} w + D_{12} u$, where $z = \\begin{bmatrix} z_1 \\\\ z_2 \\\\ z_3 \\end{bmatrix}$ and $x_a = \\begin{bmatrix} x^{\\top} & x_1 & x_2 & x_3 \\end{bmatrix}^{\\top}$.\n$$\n\\begin{bmatrix} z_1 \\\\ z_2 \\\\ z_3 \\end{bmatrix} =\n\\begin{bmatrix}\n-D_{w_1} C_2 & C_{w_1} & 0 & 0 \\\\\n\\mathbf{0}_{1 \\times 2} & 0 & C_{w_2} & 0 \\\\\nD_{w_3} C_2 & 0 & 0 & C_{w_3}\n\\end{bmatrix}\n\\begin{bmatrix} x \\\\ x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix}\n+\n\\begin{bmatrix}\nD_{w_1}(\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) \\\\\n\\mathbf{0}_{1 \\times 3} \\\\\nD_{w_3} D_{21}\n\\end{bmatrix} w\n+\n\\begin{bmatrix}\n0 \\\\\nD_{w_2} \\\\\n0\n\\end{bmatrix} u\n$$\nFrom this, we identify the matrices $C_1$, $D_{11}$, and $D_{12}$:\n$$\nC_1 = \\begin{bmatrix}\n-D_{w_1} C_2 & C_{w_1} & 0 & 0 \\\\\n\\mathbf{0}_{1 \\times 2} & 0 & C_{w_2} & 0 \\\\\nD_{w_3} C_2 & 0 & 0 & C_{w_3}\n\\end{bmatrix}, \\quad\nD_{11} = \\begin{bmatrix}\nD_{w_1}(\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) \\\\\n\\mathbf{0}_{1 \\times 3} \\\\\nD_{w_3} D_{21}\n\\end{bmatrix}, \\quad\nD_{12} = \\begin{bmatrix}\n0 \\\\\nD_{w_2} \\\\\n0\n\\end{bmatrix}\n$$\nNow, we compute the numerical values of the components.\nThe given plant matrices are $C_2 = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$ and $D_{21} = \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix}$.\nThe filter parameters are:\n\\begin{itemize}\n    \\item $W_1$: $k_1 = 2$, $z_1 = 1$, $p_1 = 0.1$.\n    $C_{w_1} = k_1(z_1 - p_1) = 2(1 - 0.1) = 1.8$.\n    $D_{w_1} = k_1 = 2$.\n    \\item $W_2$: $k_2 = 0.5$, $z_2 = 10$, $p_2 = 50$.\n    $C_{w_2} = k_2(z_2 - p_2) = 0.5(10 - 50) = -20$.\n    $D_{w_2} = k_2 = 0.5$.\n    \\item $W_3$: $k_3 = 0.3$, $z_3 = 100$, $p_3 = 5$.\n    $C_{w_3} = k_3(z_3 - p_3) = 0.3(100 - 5) = 28.5$.\n    $D_{w_3} = k_3 = 0.3$.\n\\end{itemize}\nWe compute the blocks of $C_1$, $D_{11}$, and $D_{12}$:\n\\begin{itemize}\n    \\item For $C_1$:\n    $-D_{w_1} C_2 = -2 \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} -2 & 0 \\end{bmatrix}$.\n    $D_{w_3} C_2 = 0.3 \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} 0.3 & 0 \\end{bmatrix}$.\n    \\item For $D_{11}$:\n    $\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21} = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 1 & 0 & -1 \\end{bmatrix}$.\n    $D_{w_1}(\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) = 2\\begin{bmatrix} 1 & 0 & -1 \\end{bmatrix} = \\begin{bmatrix} 2 & 0 & -2 \\end{bmatrix}$.\n    $D_{w_3} D_{21} = 0.3\\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 0 & 0 & 0.3 \\end{bmatrix}$.\n\\end{itemize}\nSubstituting these values, the explicit matrices are:\n$$\nC_1 = \\begin{bmatrix}\n-2 & 0 & 1.8 & 0 & 0 \\\\\n0 & 0 & 0 & -20 & 0 \\\\\n0.3 & 0 & 0 & 0 & 28.5\n\\end{bmatrix}, \\quad\nD_{11} = \\begin{bmatrix}\n2 & 0 & -2 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0.3\n\\end{bmatrix}, \\quad\nD_{12} = \\begin{bmatrix}\n0 \\\\\n0.5 \\\\\n0\n\\end{bmatrix}\n$$\nThe problem requires the computation of the squared Frobenius norm of $C_1$, which is the sum of the squares of its elements, $\\|C_{1}\\|_{F}^{2} = \\operatorname{trace}(C_{1}^{\\top} C_{1}) = \\sum_{i,j} |(C_1)_{ij}|^2$.\n$$\n\\|C_{1}\\|_{F}^{2} = (-2)^2 + (0)^2 + (1.8)^2 + (0)^2 + (0)^2 + (0)^2 + (0)^2 + (0)^2 + (-20)^2 + (0)^2 + (0.3)^2 + (0)^2 + (0)^2 + (0)^2 + (28.5)^2\n$$\n$$\n\\|C_{1}\\|_{F}^{2} = (-2)^2 + (1.8)^2 + (-20)^2 + (0.3)^2 + (28.5)^2\n$$\n$$\n\\|C_{1}\\|_{F}^{2} = 4 + 3.24 + 400 + 0.09 + 812.25\n$$\n$$\n\\|C_{1}\\|_{F}^{2} = 1219.58\n$$\nThis is the exact final value.", "answer": "$$\\boxed{1219.58}$$", "id": "2710896"}, {"introduction": "The ultimate test of an $\\mathcal{H}_{\\infty}$ design is whether it satisfies the specified performance bounds, which are expressed as $\\mathcal{H}_{\\infty}$ norms. This computational exercise tasks you with verifying these bounds by numerically computing the norms for a multiple-input, multiple-output (MIMO) system [@problem_id:2710934]. By programming the calculation of singular value frequency responses, you will implement the very definition of the $\\mathcal{H}_{\\infty}$ norm and gain practical experience in the analysis phase of a control design workflow.", "problem": "Consider a continuous-time, stable, linear time-invariant, strictly proper, multiple-input multiple-output plant with transfer matrix $G(s) \\in \\mathbb{C}^{2 \\times 2}$ whose entries are first-order real-rational functions defined by\n$$\nG_{11}(s) = \\frac{1}{s + 1},\\quad\nG_{12}(s) = \\frac{0.2}{s + 3},\\quad\nG_{21}(s) = \\frac{-0.1}{s + 5},\\quad\nG_{22}(s) = \\frac{2}{s + 2},\n$$\nso that\n$$\nG(s) =\n\\begin{bmatrix}\n\\frac{1}{s+1} & \\frac{0.2}{s+3} \\\\\n\\frac{-0.1}{s+5} & \\frac{2}{s+2}\n\\end{bmatrix}.\n$$\nA diagonal, strictly proper controller $K(s) \\in \\mathbb{C}^{2 \\times 2}$ is to be evaluated, parameterized by a scalar gain $k \\in \\mathbb{R}_{>0}$ and fixed corner frequencies, with diagonal elements\n$$\nK_{11}(s) = \\frac{k}{\\frac{s}{20} + 1},\\qquad\nK_{22}(s) = \\frac{k}{\\frac{s}{15} + 1},\n$$\nand off-diagonal elements equal to zero.\n\nDefine the standard mixed-sensitivity closed-loop maps for the unity-feedback interconnection:\n- the sensitivity function $S(s) = \\left(I + G(s)K(s)\\right)^{-1}$,\n- the complementary sensitivity function $T(s) = I - S(s)$,\n- the control sensitivity product $K(s)S(s)$.\n\nWeighting functions are chosen as follows:\n- the sensitivity weight $W_{1}(s)$ is a scalar, minimum-phase, first-order shape\n$$\nW_{1}(s) = \\frac{0.01\\,s + 5}{s + 1},\n$$\n- the control effort weight is a constant scalar $W_{2} \\in \\mathbb{R}_{>0}$ (so that $W_{2} I_{2}$ is the matrix weight acting on $K(s)S(s)$),\n- the complementary sensitivity weight $W_{3}(s)$ is a scalar, minimum-phase, first-order shape\n$$\nW_{3}(s) = \\frac{s + 30}{0.03\\,s + 30}.\n$$\n\nFor each angular frequency $\\omega \\in \\mathbb{R}_{\\ge 0}$, define $G(\\mathrm{j}\\omega)$, $K(\\mathrm{j}\\omega)$, $S(\\mathrm{j}\\omega)$, $T(\\mathrm{j}\\omega)$, and $K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$ by pointwise evaluation. The mixed-sensitivity verification reduces to checking the three frequency-domain inequalities\n$$\n\\overline{\\sigma}\\!\\left(W_{1}(\\mathrm{j}\\omega)\\,S(\\mathrm{j}\\omega)\\right) \\le 1,\\qquad\n\\overline{\\sigma}\\!\\left(W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right) \\le 1,\\qquad\n\\overline{\\sigma}\\!\\left(W_{3}(\\mathrm{j}\\omega)\\,T(\\mathrm{j}\\omega)\\right) \\le 1,\n$$\nfor all $\\omega \\ge 0$, where $\\overline{\\sigma}(\\cdot)$ denotes the largest singular value of a complex matrix. The induced $\\mathcal{H}_{\\infty}$ (Hardy space infinity) norm of a stable, proper, matrix-valued transfer function $F(s)$ is defined as\n$$\n\\lVert F \\rVert_{\\infty} = \\sup_{\\omega \\in \\mathbb{R}} \\overline{\\sigma}\\!\\left(F(\\mathrm{j}\\omega)\\right).\n$$\nIn the context above, verifying the inequalities is equivalent to showing\n$$\n\\left\\lVert W_{1}S \\right\\rVert_{\\infty} \\le 1,\\quad\n\\left\\lVert W_{2}\\,K S \\right\\rVert_{\\infty} \\le 1,\\quad\n\\left\\lVert W_{3}T \\right\\rVert_{\\infty} \\le 1.\n$$\n\nYour task is to write a program that, for a prescribed frequency grid and a small test suite of controller and weight parameters, numerically approximates the three norms by evaluating the largest singular value over a dense logarithmic grid and taking the maximum. Use the following specifications.\n\n- Frequency grid:\n  - Use $N = 2000$ logarithmically spaced angular frequency points between $\\omega_{\\min} = 10^{-3}$ and $\\omega_{\\max} = 10^{3}$, in radians per second. Do not include $\\omega = 0$ exactly.\n  - At each $\\omega$, define $s = \\mathrm{j}\\omega$ and evaluate the transfer matrices.\n\n- Numerical approximation of each norm:\n  - For each frequency grid point, compute the matrices $S(\\mathrm{j}\\omega)$, $T(\\mathrm{j}\\omega)$, $K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$.\n  - Form the weighted matrices $W_{1}(\\mathrm{j}\\omega) S(\\mathrm{j}\\omega)$, $W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$, and $W_{3}(\\mathrm{j}\\omega) T(\\mathrm{j}\\omega)$, where $W_{1}(\\mathrm{j}\\omega)$ and $W_{3}(\\mathrm{j}\\omega)$ are scalars and $W_{2}$ is a scalar.\n  - For each weighted matrix, compute the largest singular value $\\overline{\\sigma}$ and track the maximum across the frequency grid. This maximum is the numerical approximation of the corresponding $\\mathcal{H}_{\\infty}$ norm.\n\n- Test suite:\n  - Test $1$: $k = 12$, $W_{2} = 0.2$.\n  - Test $2$: $k = 4$, $W_{2} = 0.2$.\n  - Test $3$: $k = 50$, $W_{2} = 1.5$.\n\n- Required program output:\n  - For each test, output the triple $\\left[\\gamma_{S}, \\gamma_{K S}, \\gamma_{T}\\right]$, where\n    $$\n    \\gamma_{S} = \\max_{\\omega} \\overline{\\sigma}\\!\\left(W_{1}(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right),\\quad\n    \\gamma_{K S} = \\max_{\\omega} \\overline{\\sigma}\\!\\left(W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right),\\quad\n    \\gamma_{T} = \\max_{\\omega} \\overline{\\sigma}\\!\\left(W_{3}(\\mathrm{j}\\omega)T(\\mathrm{j}\\omega)\\right).\n    $$\n  - Your program should produce a single line of output containing the results as a comma-separated list of lists, with each inner list containing the three floating-point values rounded to six decimal places, in the order of the tests above. For example, the output format must be exactly like\n    $$\n    \\left[ [\\gamma_{S}^{(1)}, \\gamma_{K S}^{(1)}, \\gamma_{T}^{(1)}], [\\gamma_{S}^{(2)}, \\gamma_{K S}^{(2)}, \\gamma_{T}^{(2)}], [\\gamma_{S}^{(3)}, \\gamma_{K S}^{(3)}, \\gamma_{T}^{(3)}] \\right],\n    $$\n    printed as a single Python list literal on one line (no spaces are required beyond those automatically produced by standard string conversion of lists).", "solution": "The problem presented is a standard numerical evaluation task in the field of modern control theory, specifically concerning the $\\mathcal{H}_{\\infty}$ analysis of a linear time-invariant (LTI) multiple-input multiple-output (MIMO) system. The problem is well-posed and contains all necessary information for its resolution. We will proceed with the analytical formulation and the design of the numerical algorithm.\n\nThe objective is to compute the approximate $\\mathcal{H}_{\\infty}$ norms of three specific closed-loop transfer functions for a given plant $G(s)$, a parameterized controller $K(s)$, and a set of weighting functions $W_1(s)$, $W_2$, and $W_3(s)$. The norms are defined as:\n$$\n\\gamma_{S} = \\left\\lVert W_{1}S \\right\\rVert_{\\infty} = \\sup_{\\omega \\ge 0} \\overline{\\sigma}\\!\\left(W_{1}(\\mathrm{j}\\omega)\\,S(\\mathrm{j}\\omega)\\right)\n$$\n$$\n\\gamma_{K S} = \\left\\lVert W_{2}KS \\right\\rVert_{\\infty} = \\sup_{\\omega \\ge 0} \\overline{\\sigma}\\!\\left(W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right)\n$$\n$$\n\\gamma_{T} = \\left\\lVert W_{3}T \\right\\rVert_{\\infty} = \\sup_{\\omega \\ge 0} \\overline{\\sigma}\\!\\left(W_{3}(\\mathrm{j}\\omega)\\,T(\\mathrm{j}\\omega)\\right)\n$$\nwhere $\\overline{\\sigma}(\\cdot)$ denotes the largest singular value of a matrix. The numerical solution requires evaluating the largest singular value of the relevant matrices over a specified frequency grid and finding the maximum value.\n\nThe system components are given as:\nThe plant transfer matrix $G(s) \\in \\mathbb{C}^{2 \\times 2}$:\n$$\nG(s) =\n\\begin{bmatrix}\n\\frac{1}{s+1} & \\frac{0.2}{s+3} \\\\\n\\frac{-0.1}{s+5} & \\frac{2}{s+2}\n\\end{bmatrix}\n$$\nThe diagonal controller $K(s) \\in \\mathbb{C}^{2 \\times 2}$, parameterized by gain $k > 0$:\n$$\nK(s) =\n\\begin{bmatrix}\n\\frac{20k}{s+20} & 0 \\\\\n0 & \\frac{15k}{s+15}\n\\end{bmatrix}\n$$\nThe scalar weighting functions are:\n$$\nW_{1}(s) = \\frac{0.01\\,s + 5}{s + 1}, \\quad W_{2} \\in \\mathbb{R}_{>0}, \\quad W_{3}(s) = \\frac{s + 30}{0.03\\,s + 30}\n$$\nThe core closed-loop transfer functions are the sensitivity function $S(s) = (I + G(s)K(s))^{-1}$ and the complementary sensitivity function $T(s) = I - S(s)$.\n\nThe computational procedure is as follows:\n\nFirst, we must establish the frequency grid. The problem specifies a grid of $N=2000$ points, logarithmically spaced between $\\omega_{\\min} = 10^{-3} \\, \\text{rad/s}$ and $\\omega_{\\max} = 10^{3} \\, \\text{rad/s}$. For each angular frequency $\\omega$ in this grid, we set the complex frequency variable $s = \\mathrm{j}\\omega$, where $\\mathrm{j} = \\sqrt{-1}$.\n\nSecond, for each value of $s = \\mathrm{j}\\omega$ in the grid and for each test case defined by a pair $(k, W_2)$, we perform a sequence of matrix calculations:\n$1$. Evaluate the complex-valued matrices $G(\\mathrm{j}\\omega)$ and $K(\\mathrm{j}\\omega, k)$.\n$2$. Compute the loop transfer matrix $L(\\mathrm{j}\\omega) = G(\\mathrm{j}\\omega) K(\\mathrm{j}\\omega, k)$. This is a standard matrix multiplication.\n$3$. Calculate the sensitivity matrix $S(\\mathrm{j}\\omega) = (I_2 + L(\\mathrm{j}\\omega))^{-1}$, where $I_2$ is the $2 \\times 2$ identity matrix. This requires a $2 \\times 2$ complex matrix inversion.\n$4$. Calculate the complementary sensitivity matrix $T(\\mathrm{j}\\omega)$. While it is defined as $T(\\mathrm{j}\\omega) = I_2 - S(\\mathrm{j}\\omega)$, for superior numerical stability, we use the identity $T(s) = L(s)S(s)$. Thus, we compute $T(\\mathrm{j}\\omega) = L(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$.\n$5$. Calculate the control sensitivity product $K(\\mathrm{j}\\omega, k)S(\\mathrm{j}\\omega)$.\n\nThird, we evaluate the scalar weighting functions $W_1(\\mathrm{j}\\omega)$ and $W_3(\\mathrm{j}\\omega)$ at each frequency point. The weight $W_2$ is a constant real scalar.\n\nFourth, we form the weighted performance matrices:\n- $M_S(\\mathrm{j}\\omega) = W_1(\\mathrm{j}\\omega) S(\\mathrm{j}\\omega)$\n- $M_{KS}(\\mathrm{j}\\omega) = W_2 K(\\mathrm{j}\\omega, k) S(\\mathrm{j}\\omega)$\n- $M_T(\\mathrm{j}\\omega) = W_3(\\mathrm{j}\\omega) T(\\mathrm{j}\\omega)$\nSince $W_1$ and $W_3$ are scalar functions of frequency, this step involves scalar multiplication of the respective matrices.\n\nFifth, for each of the three weighted matrices at each frequency point $\\omega$, we compute the largest singular value, $\\overline{\\sigma}$. The singular values of a matrix $A$ are the square roots of the eigenvalues of the positive-semidefinite matrix $A^*A$, where $A^*$ is the conjugate transpose of $A$. Computationally, this is efficiently handled by a Singular Value Decomposition (SVD) algorithm.\n\nFinally, the $\\mathcal{H}_{\\infty}$ norms are approximated by taking the maximum of these largest singular values over the entire frequency grid:\n$$\n\\gamma_S \\approx \\max_{\\omega \\in \\text{grid}} \\overline{\\sigma}(M_S(\\mathrm{j}\\omega))\n$$\n$$\n\\gamma_{KS} \\approx \\max_{\\omega \\in \\text{grid}} \\overline{\\sigma}(M_{KS}(\\mathrm{j}\\omega))\n$$\n$$\n\\gamma_T \\approx \\max_{\\omega \\in \\text{grid}} \\overline{\\sigma}(M_T(\\mathrm{j}\\omega))\n$$\nThis process is repeated for each pair of $(k, W_2)$ parameters specified in the test suite.\n\nFor implementation, a vectorized approach is superior for efficiency. The entire set of frequency-dependent calculations can be performed using array operations. The frequency grid $\\omega$ becomes a vector of length $N = 2000$. The matrix-valued functions $G$, $K$, $L$, $S$, and $T$ are represented as three-dimensional arrays of shape $(N, 2, 2)$. Matrix inversion and multiplication can be applied to this stack of matrices directly. The scalar weights $W_1$ and $W_3$ become vectors of length $N$. The SVD function also operates on the stack of weighted matrices, yielding the singular values at each frequency, from which the maximums can be readily extracted. This avoids explicit loops over the frequency grid, leading to a more compact and performant program.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the H-infinity norm evaluation problem for a given MIMO control system.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (12.0, 0.2),  # Test 1: k, W2\n        (4.0, 0.2),   # Test 2: k, W2\n        (50.0, 1.5),  # Test 3: k, W2\n    ]\n\n    # Frequency grid specifications\n    N = 2000\n    omega_min = 1e-3\n    omega_max = 1e3\n    omega_grid = np.logspace(np.log10(omega_min), np.log10(omega_max), N)\n    s = 1j * omega_grid\n\n    # Define transfer functions using vectorized operations\n    def G_func(s_vec):\n        \"\"\"Plant transfer matrix G(s)\"\"\"\n        G11 = 1.0 / (s_vec + 1.0)\n        G12 = 0.2 / (s_vec + 3.0)\n        G21 = -0.1 / (s_vec + 5.0)\n        G22 = 2.0 / (s_vec + 2.0)\n        \n        # Stack to form (N, 2, 2) array\n        G = np.zeros((len(s_vec), 2, 2), dtype=np.complex128)\n        G[:, 0, 0] = G11\n        G[:, 0, 1] = G12\n        G[:, 1, 0] = G21\n        G[:, 1, 1] = G22\n        return G\n\n    def K_func(s_vec, k):\n        \"\"\"Controller transfer matrix K(s)\"\"\"\n        K11 = (20.0 * k) / (s_vec + 20.0)\n        K22 = (15.0 * k) / (s_vec + 15.0)\n        \n        # Stack to form (N, 2, 2) array\n        K = np.zeros((len(s_vec), 2, 2), dtype=np.complex128)\n        K[:, 0, 0] = K11\n        K[:, 1, 1] = K22\n        return K\n\n    def W1_func(s_vec):\n        \"\"\"Weighting function W1(s)\"\"\"\n        return (0.01 * s_vec + 5.0) / (s_vec + 1.0)\n\n    def W3_func(s_vec):\n        \"\"\"Weighting function W3(s)\"\"\"\n        return (s_vec + 30.0) / (0.03 * s_vec + 30.0)\n\n    # Evaluate constant plant matrix over the grid\n    G_vals = G_func(s)\n\n    results = []\n    I = np.eye(2)\n\n    for k, W2 in test_cases:\n        # Evaluate controller matrix for the current k\n        K_vals = K_func(s, k)\n\n        # Compute loop transfer function L = G*K\n        # np.matmul performs batched matrix multiplication for (N,2,2) arrays\n        L_vals = np.matmul(G_vals, K_vals)\n\n        # Compute sensitivity S = (I + L)^-1\n        # np.linalg.inv can handle a stack of matrices\n        S_vals = np.linalg.inv(I + L_vals)\n        \n        # Compute T = L*S for better numerical stability\n        T_vals = np.matmul(L_vals, S_vals)\n        \n        # Compute K*S\n        KS_vals = np.matmul(K_vals, S_vals)\n        \n        # Evaluate scalar weighting functions over the grid\n        W1_vals = W1_func(s)\n        W3_vals = W3_func(s)\n\n        # Form the weighted matrices for analysis\n        # Reshape weights to (N, 1, 1) for broadcasting with (N, 2, 2) matrices\n        W1S_vals = W1_vals[:, np.newaxis, np.newaxis] * S_vals\n        W2KS_vals = W2 * KS_vals\n        W3T_vals = W3_vals[:, np.newaxis, np.newaxis] * T_vals\n        \n        # Compute singular values for the stack of matrices\n        # svd returns singular values in descending order. We need the first one (largest).\n        sigma_bar_W1S = np.linalg.svd(W1S_vals, compute_uv=False)[:, 0]\n        sigma_bar_W2KS = np.linalg.svd(W2KS_vals, compute_uv=False)[:, 0]\n        sigma_bar_W3T = np.linalg.svd(W3T_vals, compute_uv=False)[:, 0]\n        \n        # Approximate H-infinity norm by taking the maximum over the frequency grid\n        gamma_S = np.max(sigma_bar_W1S)\n        gamma_KS = np.max(sigma_bar_W2KS)\n        gamma_T = np.max(sigma_bar_W3T)\n\n        # Round results to six decimal places and store them\n        results.append([round(gamma_S, 6), round(gamma_KS, 6), round(gamma_T, 6)])\n\n    # Final print statement in the exact required format.\n    print(str(results))\n\nsolve()\n```", "id": "2710934"}]}