{"hands_on_practices": [{"introduction": "In many physical systems governed by PDEs, control is applied at the spatial boundary. A common and powerful technique for analyzing such systems is the \"lifting method,\" which transforms the inhomogeneous boundary condition into a homogeneous one at the cost of introducing an equivalent source term inside the domain. This exercise [@problem_id:2695909] provides concrete practice with this transformation for the fundamental 1D transport equation, building intuition for how boundary actions propagate into the system's state space.", "problem": "Consider the one-dimensional linear transport partial differential equation (PDE)\n$$\nu_{t}(x,t)+u_{x}(x,t)=0,\\quad x\\in(0,1),\\ t>0,\n$$\nwith inflow boundary condition at the left endpoint and an initial condition,\n$$\nu(0,t)=g(t),\\quad t>0,\\qquad u(x,0)=u_{0}(x),\\quad x\\in(0,1),\n$$\nwhere $u_{0}\\in L^2(0,1)$ and $g\\in H^1_{\\mathrm{loc}}([0,\\infty))$. Model the system as an abstract Cauchy problem on the Hilbert space $X=L^2(0,1)$ by taking the generator $A$ of a strongly continuous (also called $C_{0}$) semigroup to be $Af=-f'$, with domain $D(A)=\\{f\\in H^1(0,1): f(0)=0\\}$.  \n\nYour tasks are:\n- Using only fundamental principles (the method of characteristics and the definition of a strongly continuous semigroup), construct the explicit semigroup solution of the PDE, i.e., provide a closed-form expression for $u(x,t)$ in terms of $u_{0}$ and $g$.\n- Using the lifting method, find an explicit spatial profile $\\ell(x)$ such that the transformation $z(x,t)=u(x,t)-\\ell(x)g(t)$ yields a PDE with homogeneous boundary condition $z(0,t)=0$ and an equivalent in-domain source $q(x,t)$ depending on $g$ and its time derivative. Express $q(x,t)$ explicitly.\n\nDefine the indicator of a set $E\\subset\\mathbb{R}$ by $\\mathbf{1}_{E}(x)=1$ if $x\\in E$ and $\\mathbf{1}_{E}(x)=0$ if $x\\notin E$. Your final answer must be given as a row matrix with three entries: the first entry is the explicit expression for $u(x,t)$, the second entry is the lifting profile $\\ell(x)$, and the third entry is the equivalent in-domain source $q(x,t)$. No rounding is required, and no physical units are involved. The final answer must be a single analytic expression as specified.", "solution": "The problem presented is a standard one in the theory of partial differential equations and their control. It is scientifically grounded, well-posed, and contains all necessary information for its resolution. I will proceed with the solution.\n\nThe problem requires the completion of two tasks. First, the construction of the explicit solution to the given transport equation. Second, the application of the lifting method to transform the problem with an inhomogeneous boundary condition into one with a homogeneous boundary condition and an in-domain source.\n\n**Task 1: Explicit Solution via Method of Characteristics**\n\nThe governing partial differential equation is the one-dimensional linear transport equation:\n$$\nu_{t}(x,t) + u_{x}(x,t) = 0, \\quad x \\in (0,1), t>0.\n$$\nThis equation states that the directional derivative of the solution $u(x,t)$ along the vector $(1,1)$ in the $(t,x)$-plane is zero. This implies that the solution $u$ is constant along the characteristic curves defined by $\\frac{dx}{dt} = 1$. The solutions to this ordinary differential equation are the family of parallel lines $x-t = C$, where $C$ is a constant.\n\nConsequently, the general solution of the PDE is of the form $u(x,t) = F(x-t)$ for some function $F$. The specific form of $F$ is determined by the initial and boundary conditions. To find the value of $u$ at a point $(x,t)$ in the domain $x \\in (0,1), t>0$, we must trace the characteristic line $x'-t' = x-t$ back to where it intersects the boundary of the domain, which consists of the initial line $\\{ (x',0) | x' \\in (0,1) \\}$ and the inflow boundary $\\{ (0,t') | t' > 0 \\}$.\n\nCase 1: The characteristic intersects the initial line.\nThis occurs if the point $(x-t, 0)$ lies on the initial line segment, which requires $0 < x-t < 1$. Given $x \\in (0,1)$ and $t>0$, this corresponds to the region defined by $t < x < 1$. In this region, the solution value is determined by the initial condition $u_0(x)$:\n$$\nu(x,t) = u(x-t, 0) = u_0(x-t).\n$$\n\nCase 2: The characteristic intersects the inflow boundary.\nThis occurs if the point $(0, t-x)$ lies on the inflow boundary, which requires $t-x > 0$, or $x < t$. Given $x \\in (0,1)$ and $t>0$, this corresponds to the region $0 < x < t$. In this region, the solution value is determined by the boundary condition $g(t)$:\n$$\nu(x,t) = u(0, t-x) = g(t-x).\n$$\n\nWe can combine these two cases using the indicator function $\\mathbf{1}_{E}(y)$, which is $1$ if $y \\in E$ and $0$ otherwise. For any point $(x,t)$ with $x \\in (0,1)$ and $t>0$, one of two conditions, $x>t$ or $x<t$, will hold (we neglect the line $x=t$ of measure zero).\nThe condition $t < x < 1$ is equivalent to $x \\in (t,1)$.\nThe condition $0 < x < t$ is equivalent to $x \\in (0,t)$.\nNote that if $t \\ge 1$, the interval $(t,1)$ is empty, so $\\mathbf{1}_{(t,1)}(x) = 0$ for all $x \\in (0,1)$. In this scenario, $x < t$ for all $x \\in (0,1)$, and the solution is determined entirely by the boundary data $g$. The expression remains correct.\n\nTherefore, the explicit closed-form solution is:\n$$\nu(x,t) = u_0(x-t) \\mathbf{1}_{(t,1)}(x) + g(t-x) \\mathbf{1}_{(0,t)}(x).\n$$\nThis expression is the complete solution in terms of the initial data $u_0$ and boundary data $g$. The problem refers to this as the \"semigroup solution,\" which is appropriate as this form can be derived from the Duhamel's principle applied to the abstract evolution equation with boundary control, although the method of characteristics provides the most direct path to this explicit formula.\n\n**Task 2: Lifting Method**\n\nThe second task is to find a lifting profile $\\ell(x)$ and a source term $q(x,t)$ for the transformed variable $z(x,t) = u(x,t) - \\ell(x)g(t)$. The purpose of this transformation is to obtain an equivalent system for $z(x,t)$ that has a homogeneous boundary condition at $x=0$.\n\nFirst, we impose the condition $z(0,t)=0$. Substituting the definition of $z(x,t)$ and the given boundary condition $u(0,t)=g(t)$:\n$$\nz(0,t) = u(0,t) - \\ell(0)g(t) = g(t) - \\ell(0)g(t) = (1 - \\ell(0))g(t).\n$$\nFor $z(0,t)$ to be zero for any locally absolutely continuous function $g(t)$, we must enforce the condition on the profile $\\ell(x)$:\n$$\n\\ell(0) = 1.\n$$\nNext, we derive the PDE for $z(x,t)$. We compute the partial derivatives of $u(x,t) = z(x,t) + \\ell(x)g(t)$:\n$$\nu_t(x,t) = z_t(x,t) + \\ell(x)g'(t),\n$$\n$$\nu_x(x,t) = z_x(x,t) + \\ell'(x)g(t).\n$$\nSubstituting these into the original PDE $u_t+u_x=0$:\n$$\n(z_t(x,t) + \\ell(x)g'(t)) + (z_x(x,t) + \\ell'(x)g(t)) = 0.\n$$\nRearranging the terms, we obtain the PDE for $z(x,t)$:\n$$\nz_t(x,t) + z_x(x,t) = -\\ell'(x)g(t) - \\ell(x)g'(t).\n$$\nThe right-hand side is the equivalent in-domain source term, which the problem denotes as $q(x,t)$:\n$$\nq(x,t) = -\\ell'(x)g(t) - \\ell(x)g'(t).\n$$\nThe problem asks for an explicit spatial profile $\\ell(x)$. We have the condition $\\ell(0)=1$. There are infinitely many functions in $H^1(0,1)$ that satisfy this. A guiding principle in such problems is to select the simplest possible function that satisfies the requirements, so as not to introduce unnecessary complexity into the resulting equation.\n\nThe simplest non-trivial choice is a constant function. Let us set $\\ell(x) = 1$ for all $x \\in (0,1)$.\nThis function clearly satisfies $\\ell(0)=1$ and is in $H^1(0,1)$ (in fact, it is in $C^\\infty[0,1]$). Its derivative is $\\ell'(x) = 0$.\n\nWith this choice, the source term $q(x,t)$ simplifies significantly:\n$$\nq(x,t) = -(0)g(t) - (1)g'(t) = -g'(t).\n$$\nThe existence of $g'(t)$ as a locally square-integrable function is guaranteed by the given condition $g \\in H^1_{\\mathrm{loc}}([0,\\infty))$. This choice of $\\ell(x)=1$ results in a source term that is spatially uniform, which is a considerable simplification for further analysis. This is the canonical choice for this type of problem.\n\nIn summary:\n1. The explicit solution is $u(x,t) = u_0(x-t) \\mathbf{1}_{(t,1)}(x) + g(t-x) \\mathbf{1}_{(0,t)}(x)$.\n2. The lifting profile is $\\ell(x) = 1$.\n3. The equivalent in-domain source is $q(x,t) = -g'(t)$.", "answer": "$$\n\\boxed{\\pmatrix{ u_0(x-t) \\mathbf{1}_{(t,1)}(x) + g(t-x) \\mathbf{1}_{(0,t)}(x) & 1 & -g'(t) }}\n$$", "id": "2695909"}, {"introduction": "A primary question in control theory is whether a system is controllableâ€”can we steer the state from an initial condition to a desired target? For infinite-dimensional systems, we often study approximate controllability. This practice [@problem_id:2695916] introduces the Fattorini-Hautus test, a powerful frequency-domain criterion that connects controllability to the system's eigenvalues and the spatial profile of the control actuator. By applying this test to the heat equation, you will see how the choice of actuator determines which modes of the system can be influenced.", "problem": "Consider the linear control system on the Hilbert space $L^2(0,1)$ induced by the one-dimensional heat Partial Differential Equation (PDE) with Dirichlet boundary conditions,\n$$\n\\frac{\\partial z}{\\partial t}(x,t)=\\frac{\\partial^{2} z}{\\partial x^{2}}(x,t)+g(x) u(t),\\quad x\\in(0,1),\\ t>0,\n$$\nwith $z(0,t)=z(1,t)=0$ and initial condition $z(x,0)=z_0(x) \\in L^2(0,1)$. Here $u(t) \\in \\mathbb{R}$ is a scalar control, and $g \\in L^2(0,1)$ is a fixed actuator profile. In the abstract form $\\dot{z}(t)=A z(t)+B u(t)$, the state operator is $A=\\frac{d^2}{dx^2}$ on the domain $D(A)=H^2(0,1) \\cap H^1_0(0,1)$ and the input operator $B: \\mathbb{R} \\to L^2(0,1)$ is bounded and given by $(B u)(x)=g(x) u$.\n\nStarting from the definitions of approximate controllability for infinite-dimensional linear systems and the Fattoriniâ€“Hautus test (a necessary condition for approximate controllability), deduce the form that this necessary condition takes for the above system in terms of the Fourier sine coefficients of $g$. Then, for the specific actuator profile $g(x)=x(1-x)$, compute the resulting coefficient\n$$\nc_n=\\int_0^1 g(x) \\sqrt{2} \\sin(n\\pi x) \\,dx,\\quad n\\in\\mathbb{N},\n$$\nas a closed-form analytic expression in $n$. Express your final answer as a single simplified analytic expression for $c_n$ that is valid for every positive integer $n$. No numerical approximation is required and no units are involved.", "solution": "We work in the Hilbert space $L^2(0,1)$ with the standard inner product $\\langle f,h \\rangle = \\int_0^1 f(x) h(x) \\,dx$. The operator $A=\\frac{d^2}{dx^2}$ with Dirichlet boundary conditions generates an analytic contraction semigroup on $L^2(0,1)$ and is self-adjoint with a compact resolvent. Its eigenpairs are well known: the eigenvalues are $\\lambda_n = -n^2\\pi^2$ and the corresponding normalized eigenfunctions are\n$$\n\\varphi_n(x)=\\sqrt{2}\\sin(n\\pi x),\\quad n\\in\\mathbb{N}.\n$$\n\nThe input operator $B: \\mathbb{R} \\to L^2(0,1)$ is bounded and defined by $(B u)(x)=g(x) u$. Its adjoint $B^*: L^2(0,1) \\to \\mathbb{R}$ is given by\n$$\nB^* y=\\langle g,y \\rangle = \\int_0^1 g(x) y(x) \\,dx.\n$$\n\nApproximate controllability means that the closure of the reachable set from the origin equals the whole state space $L^2(0,1)$. A necessary condition for approximate controllability for linear systems on Hilbert spaces with bounded input operator is provided by the Fattoriniâ€“Hautus test: for every $\\lambda$ in the spectrum of $A^*$,\n$$\n\\ker(\\lambda I-A^*) \\cap \\ker(B^*)=\\{0\\}.\n$$\nBecause $A$ is self-adjoint, we have $A^*=A$, and $\\ker(\\lambda_n I - A) = \\mathrm{span}\\{\\varphi_n\\}$. Therefore, the Fattoriniâ€“Hautus necessary condition reduces to the requirement that no eigenfunction lies in the kernel of $B^*$, i.e.,\n$$\n\\langle g,\\varphi_n \\rangle \\neq 0\\quad \\text{for all } n\\in \\mathbb{N}.\n$$\nEquivalently, in terms of the sine coefficients of $g$,\n$$\nc_n := \\int_0^1 g(x) \\sqrt{2} \\sin(n\\pi x) \\,dx \\neq 0\\quad \\text{for all } n\\in\\mathbb{N}.\n$$\n\nWe now specialize to $g(x)=x(1-x)$ and compute $c_n$ in closed form. Define\n$$\nc_n=\\sqrt{2}\\int_0^1 x(1-x) \\sin(n\\pi x) \\,dx.\n$$\nLet $a=n\\pi$. We compute\n$$\nI_n := \\int_0^1 x(1-x) \\sin(ax) \\,dx = \\int_0^1 x \\sin(ax) \\,dx - \\int_0^1 x^2 \\sin(ax) \\,dx =: J_1 - J_2.\n$$\n\nFirst, compute $J_1$:\n$$\nJ_1=\\int_0^1 x \\sin(ax) \\,dx=\\left[-\\frac{x\\cos(ax)}{a}\\right]_0^1+\\int_0^1 \\frac{\\cos(ax)}{a} \\,dx\n=-\\frac{\\cos(a)}{a}+\\left[\\frac{\\sin(ax)}{a^2}\\right]_0^1=-\\frac{\\cos(a)}{a}+\\frac{\\sin(a)}{a^2}.\n$$\nFor $a=n\\pi$, we have $\\sin(a)=0$ and $\\cos(a)=(-1)^n$, hence\n$$\nJ_1=-\\frac{(-1)^n}{a}.\n$$\n\nNext, compute $J_2$ by parts:\n$$\nJ_2=\\int_0^1 x^2 \\sin(ax) \\,dx\n=\\left[-\\frac{x^2\\cos(ax)}{a}\\right]_0^1+\\int_0^1\\frac{2x\\cos(ax)}{a} \\,dx\n=-\\frac{\\cos(a)}{a}+\\frac{2}{a}\\int_0^1 x\\cos(ax) \\,dx.\n$$\nNow,\n$$\n\\int_0^1 x\\cos(ax) \\,dx=\\left[\\frac{x\\sin(ax)}{a}\\right]_0^1-\\int_0^1\\frac{\\sin(ax)}{a} \\,dx\n=\\frac{\\sin(a)}{a}-\\left[-\\frac{\\cos(ax)}{a^2}\\right]_0^1\n=\\frac{\\sin(a)}{a}+\\frac{\\cos(a)-1}{a^2}.\n$$\nThus, with $\\sin(a)=0$ and $\\cos(a)=(-1)^n$,\n$$\n\\int_0^1 x\\cos(ax) \\,dx=\\frac{(-1)^n-1}{a^2},\n$$\nand hence\n$$\nJ_2=-\\frac{(-1)^n}{a}+\\frac{2}{a}\\cdot \\frac{(-1)^n-1}{a^2}=-\\frac{(-1)^n}{a}+\\frac{2((-1)^n-1)}{a^3}.\n$$\n\nTherefore,\n$$\nI_n=J_1-J_2=-\\frac{(-1)^n}{a}-\\left(-\\frac{(-1)^n}{a}+\\frac{2((-1)^n-1)}{a^3}\\right)\n=-\\frac{2((-1)^n-1)}{a^3}=\\frac{2(1-(-1)^n)}{a^3}.\n$$\nSubstituting $a=n\\pi$ and recalling $c_n=\\sqrt{2} I_n$, we obtain the closed-form expression\n$$\nc_n=\\sqrt{2} \\frac{2(1-(-1)^n)}{(n\\pi)^3}=\\frac{2\\sqrt{2}(1-(-1)^n)}{n^3\\pi^3}.\n$$\n\nThis expression encodes the Fattoriniâ€“Hautus necessary condition for the chosen actuator: the necessary condition requires $c_n \\neq 0$ for all $n\\in\\mathbb{N}$, but the formula shows that $c_n=0$ for every even $n$, and $c_n=\\frac{4\\sqrt{2}}{n^3\\pi^3}$ for odd $n$. The requested final analytic expression valid for all $n$ is\n$$\nc_n=\\frac{2\\sqrt{2}(1-(-1)^n)}{n^3\\pi^3}.\n$$", "answer": "$$\\boxed{\\frac{2\\sqrt{2}\\left(1-(-1)^{n}\\right)}{n^{3}\\pi^{3}}}$$", "id": "2695916"}, {"introduction": "Once controllability is established, the next step is to design a feedback law that stabilizes the system and optimizes performance. The Linear-Quadratic Regulator (LQR) framework provides a systematic method for this synthesis. This hands-on computational exercise [@problem_id:2695944] guides you through the design of an LQR controller for the heat equation by leveraging modal decomposition to solve the infinite-dimensional Algebraic Riccati Equation (ARE) and numerically assessing the resulting closed-loop system's stability.", "problem": "Consider the one-dimensional heat equation on the spatial interval $[0,1]$ with homogeneous Dirichlet boundary conditions and distributed actuation throughout the domain. The state variable is $x(x,t)$, where $x \\in (0,1)$ and $t \\ge 0$. The Partial Differential Equation (PDE) is\n$$\n\\frac{\\partial x}{\\partial t}(x,t) = \\alpha \\frac{\\partial^2 x}{\\partial x^2}(x,t) + u(x,t),\n$$\nwith boundary conditions $x(0,t)=0$ and $x(1,t)=0$, and initial condition $x(x,0)=x_0(x)$ in $L^2(0,1)$. The control input $u(x,t)$ is distributed over the entire domain. The performance index for the Linear Quadratic Regulator (LQR) problem is\n$$\nJ(u) = \\int_{0}^{\\infty} \\Big( q \\|x(\\cdot,t)\\|_{L^2(0,1)}^2 + r \\|u(\\cdot,t)\\|_{L^2(0,1)}^2 \\Big) dt,\n$$\nwhere $\\alpha>0$, $q \\ge 0$, and $r>0$ are parameters. Denote by $A$ the Dirichlet Laplacian operator on $L^2(0,1)$ and by $B$ the identity control operator (full distributed actuation). Let $P$ be the unique nonnegative self-adjoint solution (when it exists) of the infinite-dimensional Algebraic Riccati Equation (ARE) associated with this LQR problem. In the orthonormal eigenbasis of the Dirichlet Laplacian, $P$ is diagonal with entries $\\{p_k\\}_{k\\ge 1}$.\n\nTasks:\n1) Using only foundational facts about the Dirichlet Laplacian on $[0,1]$ (eigenfunctions are the sine basis and eigenvalues are strictly positive) and the definition of the Algebraic Riccati Equation for a Linear Quadratic Regulator (LQR), reduce the ARE to scalar equations per mode and compute numerically the first three diagonal entries $p_1$, $p_2$, and $p_3$ of $P$ for the first $N$ modes. You must compute these values for each parameter set in the test suite below, using the modal reduction implied by the eigenbasis of the Dirichlet Laplacian. Report $p_1$, $p_2$, and $p_3$ rounded to six decimal places.\n\n2) Let $K$ be the optimal feedback operator obtained from the solution $P$ and let $T_K(t)$ be the closed-loop semigroup generated by the closed-loop operator. For a truncation to the first $K_{\\max}$ modes, treat the truncated closed-loop generator as diagonal in the Laplacian eigenbasis and define the operator norm of the corresponding finite-dimensional semigroup as\n$$\n\\|T_K(t)\\| = \\max_{1 \\le k \\le K_{\\max}} \\exp\\big( a_{k}^{\\mathrm{cl}} t \\big),\n$$\nwhere $a_{k}^{\\mathrm{cl}}$ are the truncated closed-loop modal generators. For each parameter set, compute $\\|T_K(t_j)\\|$ at a specified list of times $\\{t_j\\}$, form the data $\\{(t_j, \\log \\|T_K(t_j)\\|)\\}$, and estimate the decay rate $\\delta$ as the negative of the best-fit slope from a least-squares linear regression of $\\log \\|T_K(t_j)\\|$ against $t_j$. Report the estimated decay rate $\\delta$ rounded to six decimal places.\n\nAssumptions to use:\n- Use the standard Dirichlet Laplacian eigenbasis on $(0,1)$.\n- Use the standard LQR Algebraic Riccati Equation on Hilbert spaces under distributed actuation, and modal truncation to decouple the modes.\n- Treat the distributed control operator as identity in the eigenbasis after expansion in the Laplacian eigenfunctions.\n- When forming the truncated semigroup, use only the first $K_{\\max}$ modes, and compute the operator norm as the maximum of modal exponentials as specified above.\n- No physical units are required; all quantities are dimensionless.\n\nYour program must implement the above computations and produce numerical results for the following test suite of parameter sets. Each test case specifies $(\\alpha, q, r, N, K_{\\max}, \\{t_j\\})$:\n- Test case $1$: $\\alpha=1.0$, $q=1.0$, $r=0.5$, $N=6$, $K_{\\max}=80$, $\\{t_j\\} = \\{0.2,\\,0.4,\\,0.6,\\,0.8,\\,1.0\\}$.\n- Test case $2$: $\\alpha=0.7$, $q=2.0$, $r=1.0$, $N=8$, $K_{\\max}=80$, $\\{t_j\\} = \\{0.1,\\,0.3,\\,0.5,\\,0.7,\\,0.9\\}$.\n- Test case $3$: $\\alpha=1.0$, $q=0.0$, $r=1.0$, $N=10$, $K_{\\max}=80$, $\\{t_j\\} = \\{0.5,\\,1.0,\\,1.5,\\,2.0\\}$.\n\nFinal output format:\n- For each test case, output a list of four floats $[p_1, p_2, p_3, \\delta]$, where $p_1$, $p_2$, $p_3$ are the first three diagonal entries of $P$ and $\\delta$ is the estimated decay rate from the least-squares fit, all rounded to six decimal places.\n- Your program should produce a single line of output containing the results for all test cases as a comma-separated list of these lists, enclosed in square brackets. For example, your program should print a single line of the form $[[p_1,p_2,p_3,\\delta],\\,[p_1,p_2,p_3,\\delta],\\,[p_1,p_2,p_3,\\delta]]$, where each $p_k$ and $\\delta$ is a decimal numeral rounded to six places.", "solution": "The problem requires the analysis of a Linear Quadratic Regulator (LQR) for a one-dimensional heat equation with distributed control. The first step, as always, is a rigorous verification of the problem statement.\n\n### Step 1: Extract Givens\n\n- **PDE system**: $\\frac{\\partial x}{\\partial t}(x,t) = \\alpha \\frac{\\partial^2 x}{\\partial x^2}(x,t) + u(x,t)$ for $x \\in (0,1)$ and $t \\ge 0$.\n- **Boundary Conditions**: $x(0,t)=0$, $x(1,t)=0$.\n- **Initial Condition**: $x(x,0)=x_0(x) \\in L^2(0,1)$.\n- **Control**: $u(x,t)$ is a distributed control input.\n- **Cost Functional**: $J(u) = \\int_{0}^{\\infty} \\Big( q \\|x(\\cdot,t)\\|_{L^2(0,1)}^2 + r \\|u(\\cdot,t)\\|_{L^2(0,1)}^2 \\Big) dt$.\n- **Parameters**: $\\alpha>0$, $q \\ge 0$, $r>0$.\n- **Operators**: $A$ is the Dirichlet Laplacian operator, $B$ is the identity operator.\n- **Riccati Solution**: $P$ is the non-negative self-adjoint solution to the Algebraic Riccati Equation (ARE), which is diagonal in the eigenbasis of $A$ with entries $\\{p_k\\}_{k\\ge 1}$.\n- **Task 1**: Compute the first three diagonal entries $p_1, p_2, p_3$ of $P$.\n- **Task 2**: Estimate the closed-loop decay rate $\\delta$ via linear regression on $\\log \\|T_K(t_j)\\|$ versus $t_j$, where $\\|T_K(t)\\| = \\max_{1 \\le k \\le K_{\\max}} \\exp(a_{k}^{\\mathrm{cl}} t)$.\n- **Test Suites**:\n    1. $(\\alpha, q, r, N, K_{\\max}, \\{t_j\\}) = (1.0, 1.0, 0.5, 6, 80, \\{0.2, 0.4, 0.6, 0.8, 1.0\\})$.\n    2. $(\\alpha, q, r, N, K_{\\max}, \\{t_j\\}) = (0.7, 2.0, 1.0, 8, 80, \\{0.1, 0.3, 0.5, 0.7, 0.9\\})$.\n    3. $(\\alpha, q, r, N, K_{\\max}, \\{t_j\\}) = (1.0, 0.0, 1.0, 10, 80, \\{0.5, 1.0, 1.5, 2.0\\})$.\n\n### Step 2: Validate Using Extracted Givens\n\nThe problem is scientifically grounded, well-posed, and objective. It concerns the standard LQR control problem for a parabolic PDE, a fundamental topic in infinite-dimensional control theory. All terms are defined with mathematical precision. The use of modal decomposition for the heat equation is a standard and valid analytical technique. The parameter $N$ appears in the test case definitions but is not referenced in the formulation of the tasks; its presence is superfluous but does not introduce a contradiction or ambiguity that would invalidate the problem. The tasks are clearly defined and computationally tractable. The problem is therefore deemed **valid**.\n\n### Step 3: Derivation of the Solution\n\nThe problem will be solved by projecting the infinite-dimensional system onto the eigenbasis of the Laplacian operator, which diagonalizes the system dynamics and decouples the problem into an infinite set of scalar LQR problems.\n\nThe abstract evolution equation in the Hilbert space $H = L^2(0,1)$ is\n$$\n\\dot{z}(t) = Az(t) + Bu(t)\n$$\nwhere $z(t) = x(\\cdot,t)$, $A = \\alpha \\frac{d^2}{dx^2}$ with homogeneous Dirichlet boundary conditions, and $B=I$ is the identity operator representing distributed control. The cost functional involves the operators $Q=qI$ and $R=rI$.\n\nThe eigenfunctions of the operator $\\frac{d^2}{dx^2}$ on $(0,1)$ with Dirichlet boundary conditions are $\\phi_k(x) = \\sqrt{2}\\sin(k\\pi x)$ for $k=1, 2, \\dots$. These form an orthonormal basis for $L^2(0,1)$. The corresponding eigenvalues are $\\lambda_k^{\\text{Lap}} = -k^2\\pi^2$.\nThe operator $A = \\alpha \\frac{d^2}{dx^2}$ acts on these eigenfunctions as $A\\phi_k = \\alpha(-k^2\\pi^2)\\phi_k$. Thus, the eigenvalues of $A$ are $a_k = -\\alpha k^2\\pi^2$.\n\nExpanding the state $x(x,t)$ and control $u(x,t)$ in this basis,\n$$\nx(x,t) = \\sum_{k=1}^{\\infty} x_k(t) \\phi_k(x), \\quad u(x,t) = \\sum_{k=1}^{\\infty} u_k(t) \\phi_k(x)\n$$\ntransforms the PDE into an infinite set of decoupled ordinary differential equations for the modal coefficients $x_k(t)$:\n$$\n\\dot{x}_k(t) = a_k x_k(t) + u_k(t)\n$$\nwhere $a_k = -\\alpha k^2\\pi^2$, and the modal control input is $u_k(t)$ (with coefficient $b_k=1$).\n\nUsing Parseval's identity, the cost functional becomes a sum of decoupled costs for each mode:\n$$\nJ(u) = \\sum_{k=1}^{\\infty} \\int_{0}^{\\infty} (q |x_k(t)|^2 + r |u_k(t)|^2) dt\n$$\n\n**Task 1: Calculation of Riccati Diagonal Entries $p_k$**\n\nThe infinite-dimensional Algebraic Riccati Equation (ARE) is $A^*P + PA - PBR^{-1}B^*P + Q = 0$. Since the operators $A, B, Q, R$ are all diagonal in the chosen eigenbasis (with $B=I, Q=qI, R=rI$), the solution $P$ is also diagonal, with entries $p_k$. Applying the ARE to each mode $k$ yields a scalar ARE:\n$$\n2a_k p_k - \\frac{1}{r}p_k^2 + q = 0\n$$\nThis is a quadratic equation for $p_k$:\n$$\np_k^2 - 2ra_k p_k - qr = 0\n$$\nSubstituting $a_k = -\\alpha k^2\\pi^2$, we obtain:\n$$\np_k^2 + 2r\\alpha k^2\\pi^2 p_k - qr = 0\n$$\nThe solution for $p_k$ is given by the quadratic formula. Since $P$ must be a non-negative operator, its eigenvalues $p_k$ must be non-negative. We thus select the positive root:\n$$\np_k = \\frac{-2r\\alpha k^2\\pi^2 + \\sqrt{(2r\\alpha k^2\\pi^2)^2 - 4(1)(-qr)}}{2} = -r\\alpha k^2\\pi^2 + \\sqrt{(r\\alpha k^2\\pi^2)^2 + qr}\n$$\nThis formula is used to compute $p_1, p_2, p_3$ for each parameter set.\n\n**Task 2: Estimation of the Decay Rate $\\delta$**\n\nThe optimal LQR feedback law is $u = -Kx = -R^{-1}B^*Px$. In modal coordinates, this becomes $u_k = - (1/r) p_k x_k$. The closed-loop dynamics for each mode are:\n$$\n\\dot{x}_k(t) = a_k x_k(t) + u_k(t) = (a_k - \\frac{1}{r}p_k)x_k(t)\n$$\nThe closed-loop eigenvalues are $a_k^{\\mathrm{cl}} = a_k - \\frac{1}{r}p_k$. Substituting the expression for $p_k$:\n$$\na_k^{\\mathrm{cl}} = -\\alpha k^2\\pi^2 - \\frac{1}{r}\\left(-r\\alpha k^2\\pi^2 + \\sqrt{(r\\alpha k^2\\pi^2)^2 + qr}\\right)\n$$\n$$\na_k^{\\mathrm{cl}} = -\\alpha k^2\\pi^2 + \\alpha k^2\\pi^2 - \\frac{1}{r}\\sqrt{(r\\alpha k^2\\pi^2)^2 + qr} = -\\sqrt{\\alpha^2 k^4\\pi^4 + \\frac{q}{r}}\n$$\nThis expression is correct. The closed-loop eigenvalues $a_k^{\\mathrm{cl}}$ are all real and negative, and $|a_k^{\\mathrm{cl}}|$ is a strictly increasing function of $k$.\nThe norm of the truncated semigroup is defined as $\\|T_K(t)\\| = \\max_{1 \\le k \\le K_{\\max}} \\exp(a_k^{\\mathrm{cl}} t)$. Since $a_k^{\\mathrm{cl}}$ are negative and $t \\ge 0$, the exponential term is maximized when the exponent is least negative. This occurs for the smallest value of $k$, i.e., $k=1$.\nTherefore, for any $K_{\\max} \\ge 1$:\n$$\n\\|T_K(t)\\| = \\exp(a_1^{\\mathrm{cl}} t)\n$$\nTaking the natural logarithm:\n$$\n\\log\\|T_K(t_j)\\| = a_1^{\\mathrm{cl}} t_j\n$$\nThis shows that the data points $(t_j, \\log\\|T_K(t_j)\\|)$ lie perfectly on a line through the origin with slope $m = a_1^{\\mathrm{cl}}$.\nThe problem mandates estimating the decay rate $\\delta$ as the negative of the best-fit slope from a least-squares linear regression. The slope will be exactly $a_1^{\\mathrm{cl}}$, so the decay rate is $\\delta = -m = -a_1^{\\mathrm{cl}}$.\n$$\n\\delta = -a_1^{\\mathrm{cl}} = \\sqrt{\\alpha^2 (1)^4\\pi^4 + \\frac{q}{r}} = \\sqrt{\\alpha^2 \\pi^4 + \\frac{q}{r}}\n$$\nThe implementation will perform the linear regression explicitly as instructed, using the formula for the slope $m$ of a best-fit line $y=mx+c$:\n$$\nm = \\frac{n \\sum(t_j y_j) - (\\sum t_j)(\\sum y_j)}{n \\sum(t_j^2) - (\\sum t_j)^2}\n$$\nwhere $n$ is the number of time points and $y_j = \\log\\|T_K(t_j)\\|$. The decay rate is then $\\delta = -m$.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the LQR problem for the 1D heat equation for specified test cases.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (alpha, q, r, N, K_max, t_j_list)\n    test_cases = [\n        (1.0, 1.0, 0.5, 6, 80, [0.2, 0.4, 0.6, 0.8, 1.0]),\n        (0.7, 2.0, 1.0, 8, 80, [0.1, 0.3, 0.5, 0.7, 0.9]),\n        (1.0, 0.0, 1.0, 10, 80, [0.5, 1.0, 1.5, 2.0]),\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        alpha, q, r, N, K_max, t_j = case\n        \n        # --- Task 1: Compute p_1, p_2, p_3 ---\n        # The diagonal entries of the Riccati solution P are given by:\n        # p_k = -r*alpha*k^2*pi^2 + sqrt((r*alpha*k^2*pi^2)^2 + q*r)\n        \n        p_values = []\n        for k in range(1, 4):  # for k=1, 2, 3\n            term1 = r * alpha * (k * np.pi)**2\n            p_k = -term1 + np.sqrt(term1**2 + q * r)\n            p_values.append(p_k)\n            \n        p1, p2, p3 = [round(p, 6) for p in p_values]\n\n        # --- Task 2: Estimate the decay rate delta ---\n        # The closed-loop eigenvalues are a_k^cl = -sqrt(alpha^2 * k^4 * pi^4 + q/r)\n        # The semigroup norm is dominated by the slowest mode (k=1).\n        # ||T_K(t)|| = exp(a_1^cl * t)\n        \n        a1_cl = -np.sqrt(alpha**2 * np.pi**4 + q / r)\n        \n        # We must perform a least-squares fit as per the instructions.\n        # The data points are (t_j, log(||T_K(t_j)||)).\n        # y_j = log(exp(a_1^cl * t_j)) = a_1^cl * t_j\n        t_array = np.array(t_j)\n        y_array = a1_cl * t_array\n        \n        n = len(t_array)\n        sum_t = np.sum(t_array)\n        sum_y = np.sum(y_array)\n        sum_t_sq = np.sum(t_array**2)\n        sum_ty = np.sum(t_array * y_array)\n        \n        # Standard formula for the slope of a linear regression line y = m*x + c\n        # m = (n * sum(xy) - sum(x)*sum(y)) / (n * sum(x^2) - (sum(x))^2)\n        # We expect the calculated slope 'm' to be equal to a1_cl.\n        numerator = n * sum_ty - sum_t * sum_y\n        denominator = n * sum_t_sq - sum_t**2\n        \n        # denominator can be zero if all t_j are the same; handle this improbable case.\n        if denominator == 0:\n            # If all time points are the same but there is more than one point,\n            # the slope is undefined. If there is only one point,\n            # slope is taken as 0. This case should not occur with given inputs.\n            slope = 0\n        else:\n            slope = numerator / denominator\n\n        # The decay rate delta is the negative of the best-fit slope.\n        delta = -slope\n        \n        delta_rounded = round(delta, 6)\n        \n        all_results.append([p1, p2, p3, delta_rounded])\n\n    # Format the final output string as specified: [[...], [...], ...]\n    result_str = \"[\" + ','.join([f\"[{r[0]},{r[1]},{r[2]},{r[3]}]\" for r in all_results]) + \"]\"\n    print(result_str)\n\nsolve()\n```", "id": "2695944"}]}