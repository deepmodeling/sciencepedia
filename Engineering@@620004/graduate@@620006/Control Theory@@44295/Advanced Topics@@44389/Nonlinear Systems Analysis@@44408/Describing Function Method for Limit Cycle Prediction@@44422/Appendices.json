{"hands_on_practices": [{"introduction": "We begin our hands-on practice by deriving the describing function for one of the most fundamental nonlinear elements: the ideal symmetric relay. This exercise will ground your understanding in the first principles of the method, requiring the direct application of Fourier analysis to determine the fundamental harmonic of the resulting square-wave output [@problem_id:2699639]. By completing this calculation, you will see how a nonlinear element can be approximated by a gain $N(A)$ that is dependent on the input amplitude, a cornerstone concept of the describing function technique.", "problem": "Consider a unity-feedback loop where the forward path consists of an ideal symmetric relay nonlinearity followed by a Linear Time-Invariant (LTI) system whose dynamics are not needed for this calculation. The ideal symmetric relay has output amplitude $M$ and no hysteresis: for an input $x(t)$, the output $y(t)$ satisfies $y(t)=M$ when $x(t)>0$ and $y(t)=-M$ when $x(t)<0$. Suppose the relay is driven by a sinusoidal signal $x(t)=A\\sin(\\omega t)$ of amplitude $A>0$ and angular frequency $\\omega>0$. Using only the fundamental definition of the describing function as the complex ratio between the fundamental harmonic of the output and the sinusoidal input, and the Fourier series definitions of harmonic coefficients, derive the describing function $N(A)$ of this relay. In your derivation, justify whether the phase of the fundamental harmonic of the relay output relative to the input is zero or nonzero, and state the reasoning in radians. Express your final answer as a single analytic expression for $N(A)$ with no units.", "solution": "The problem as stated is well-posed, scientifically grounded, and contains all necessary information for its resolution. We may therefore proceed directly to the derivation.\n\nThe describing function, denoted $N(A)$, provides a quasi-linear approximation for a nonlinear element when its input is a sinusoidal signal. By definition, it is the complex ratio of the fundamental harmonic of the periodic output signal to the sinusoidal input signal.\n\nThe input to the ideal symmetric relay is given as $x(t) = A\\sin(\\omega t)$, where $A > 0$ and $\\omega > 0$. The relay has an output amplitude $M$ and no hysteresis. Its static characteristic is defined as:\n$$\ny(t) = \n\\begin{cases} \nM & \\text{if } x(t) > 0 \\\\\n-M & \\text{if } x(t) < 0 \n\\end{cases}\n$$\nGiven the input $x(t)$, the output $y(t)$ becomes a periodic square wave. Since $x(t) > 0$ for $t \\in (0, \\pi/\\omega)$ and $x(t) < 0$ for $t \\in (\\pi/\\omega, 2\\pi/\\omega)$ within one period $T=2\\pi/\\omega$, the output is:\n$$\ny(t) = \n\\begin{cases} \nM & \\text{for } 0 < t < \\frac{\\pi}{\\omega} \\\\\n-M & \\text{for } \\frac{\\pi}{\\omega} < t < \\frac{2\\pi}{\\omega}\n\\end{cases}\n$$\nThe fundamental component of the output, $y_1(t)$, can be found from its Fourier series representation. For a periodic function $y(t)$ with period $T$, the series is given by:\n$$ y(t) = \\frac{a_0}{2} + \\sum_{n=1}^{\\infty} \\left( a_n \\cos(n\\omega t) + b_n \\sin(n\\omega t) \\right) $$\nThe fundamental component corresponds to $n=1$:\n$$ y_1(t) = a_1 \\cos(\\omega t) + b_1 \\sin(\\omega t) $$\nFor a sinusoidal input $x(t) = A \\sin(\\omega t)$, the describing function is defined as $N(A) = \\frac{b_1 + j a_1}{A}$.\n\nWe first analyze the symmetry of the output signal $y(t)$. The input signal $x(t)=A\\sin(\\omega t)$ is an odd function, meaning $x(-t) = -x(t)$. The relay is a static, symmetric nonlinearity, also an odd function, as $y(-x) = -y(x)$. Consequently, the output $y(t)$ must also be an odd function: $y(-t) = -y(t)$. For an odd function, all cosine coefficients $a_n$ in its Fourier series must be zero. Therefore, it is established by symmetry that $a_1=0$.\n\nThe phase of the fundamental harmonic of the output relative to the input is given by $\\phi_1 = \\arctan(a_1/b_1)$. Since $a_1=0$ and we will show $b_1 \\neq 0$, the phase is $\\phi_1 = \\arctan(0) = 0$ radians. This means the fundamental component of the output signal is perfectly in phase with the sinusoidal input signal. This is expected for any memoryless (non-hysteretic) symmetric nonlinearity.\n\nNow, we must compute the coefficient $b_1$. By definition:\n$$ b_1 = \\frac{2}{T} \\int_0^T y(t) \\sin(\\omega t) dt = \\frac{2}{2\\pi/\\omega} \\int_0^{2\\pi/\\omega} y(t) \\sin(\\omega t) dt $$\n$$ b_1 = \\frac{\\omega}{\\pi} \\int_0^{2\\pi/\\omega} y(t) \\sin(\\omega t) dt $$\nSubstituting the expression for $y(t)$:\n$$ b_1 = \\frac{\\omega}{\\pi} \\left[ \\int_0^{\\pi/\\omega} M \\sin(\\omega t) dt + \\int_{\\pi/\\omega}^{2\\pi/\\omega} (-M) \\sin(\\omega t) dt \\right] $$\nWe perform the integration:\n$$ b_1 = \\frac{M\\omega}{\\pi} \\left[ \\left[-\\frac{\\cos(\\omega t)}{\\omega}\\right]_0^{\\pi/\\omega} - \\left[-\\frac{\\cos(\\omega t)}{\\omega}\\right]_{\\pi/\\omega}^{2\\pi/\\omega} \\right] $$\n$$ b_1 = \\frac{M}{\\pi} \\left[ [-\\cos(\\omega t)]_0^{\\pi/\\omega} - [-\\cos(\\omega t)]_{\\pi/\\omega}^{2\\pi/\\omega} \\right] $$\nEvaluating the limits:\n$$ b_1 = \\frac{M}{\\pi} \\left[ (-\\cos(\\pi) - (-\\cos(0))) - (-\\cos(2\\pi) - (-\\cos(\\pi))) \\right] $$\n$$ b_1 = \\frac{M}{\\pi} \\left[ (-(-1) - (-1)) - (-1 - (-(-1))) \\right] $$\n$$ b_1 = \\frac{M}{\\pi} \\left[ (1 + 1) - (-1 - 1) \\right] $$\n$$ b_1 = \\frac{M}{\\pi} [2 - (-2)] = \\frac{4M}{\\pi} $$\nWith $a_1=0$ and $b_1 = \\frac{4M}{\\pi}$, we can now construct the describing function $N(A)$:\n$$ N(A) = \\frac{b_1 + j a_1}{A} = \\frac{4M/\\pi}{A} + j \\frac{0}{A} $$\n$$ N(A) = \\frac{4M}{\\pi A} $$\nThis result is a real positive number, confirming that the phase shift is zero, and its magnitude is inversely proportional to the input amplitude $A$.", "answer": "$$\n\\boxed{\\frac{4M}{\\pi A}}\n$$", "id": "2699639"}, {"introduction": "This practice advances from pure derivation to the primary application of the describing function method: predicting self-sustained oscillations, or limit cycles. We will analyze a relay with hysteresis, a common feature in physical systems that introduces memory into the nonlinearity [@problem_id:2699605]. This exercise is pivotal as it not only demonstrates how memory leads to a complex-valued describing function with a phase lag but also guides you through solving the harmonic balance condition $1+G(j\\omega)N(A)=0$ to find the expected amplitude and frequency of a limit cycle.", "problem": "A sinusoidal signal is applied to a symmetric relay nonlinearity with hysteresis in a unity negative-feedback loop containing a Linear Time-Invariant (LTI) plant. The relay has output levels $\\pm M$ and symmetric switching thresholds at $\\pm h$ with the following rule: the output switches to $+M$ when the input crosses $+h$ with positive slope, and to $-M$ when the input crosses $-h$ with negative slope. Assume the relay is excited by an input $x(t)=A\\sin(\\omega t)$ with amplitude $A>h$ so that one switching event of each type occurs per cycle and higher harmonics are neglected in the loop analysis.\n\nStarting from the Fourier series definition of the fundamental harmonic of a $2\\pi$-periodic signal, and the definition of the describing function as the complex ratio between the fundamental component of the relay output and the sinusoidal input amplitude, do the following:\n\n1) Derive the complex describing function $N(A)$ of the hysteresis relay as an explicit function of $A$, $h$, and $M$. Your derivation must begin from the fundamental harmonic integrals of the relay output and express the describing function in rectangular form and in polar form, clearly identifying its amplitude and phase.\n\n2) Consider the unity-feedback loop with the LTI plant\n$$\nG(s)=\\frac{1}{s\\left(1+s\\right)}.\n$$\nUsing the describing function method and the harmonic balance condition, determine the predicted limit cycle amplitude $A^{\\star}$ and angular frequency $\\omega^{\\star}$ that satisfy the oscillation condition $1+G(j\\omega)N(A)=0$.\n\nUse the parameter values $h=0.50$ V and $M=\\frac{\\pi}{4}$ V. Express the final numerical values of the amplitude in volts and the angular frequency in radians per second. Round both numbers to four significant figures.\n\nIn your reasoning, interpret physically why the describing function has a phase lag and how this lag depends on the ratio $h/A$.", "solution": "The problem statement is subjected to validation prior to any attempt at a solution.\n\nGivens are extracted verbatim:\n- A sinusoidal signal is applied to a symmetric relay nonlinearity with hysteresis.\n- The system is a unity negative-feedback loop.\n- The plant is a Linear Time-Invariant (LTI) system.\n- The relay has output levels $\\pm M$.\n- The relay has symmetric switching thresholds at $\\pm h$.\n- Switching rule: output switches to $+M$ when input crosses $+h$ with positive slope, and to $-M$ when input crosses $-h$ with negative slope.\n- Relay input is $x(t)=A\\sin(\\omega t)$.\n- An assumption is made that $A>h$.\n- An assumption is made that one switching event of each type occurs per cycle.\n- An assumption is made that higher harmonics are neglected.\n- The describing function $N(A)$ is the complex ratio between the fundamental component of the relay output and the sinusoidal input.\n- Task 1: Derive the complex describing function $N(A)$ in rectangular and polar form.\n- LTI plant is $G(s)=\\frac{1}{s\\left(1+s\\right)}$.\n- Task 2: Use the describing function method and the harmonic balance condition $1+G(j\\omega)N(A)=0$ to determine the predicted limit cycle amplitude $A^{\\star}$ and angular frequency $\\omega^{\\star}$.\n- Parameter values are $h=0.50$ V and $M=\\frac{\\pi}{4}$ V.\n- Task 3: Interpret physically the phase lag of the describing function.\n- Final answer requires numerical values for $A^{\\star}$ and $\\omega^{\\star}$ rounded to four significant figures.\n\nValidation verdict:\nThe problem is scientifically grounded, well-posed, and objective. It is a standard problem in nonlinear control theory concerning the application of the describing function method to predict limit cycles. All necessary information is provided, and the problem is free of contradictions, ambiguities, or factual unsoundness. The problem is deemed valid.\n\nThe solution proceeds.\n\n1) Derivation of the Describing Function $N(A)$\n\nLet the input to the relay be $x(t) = A \\sin(\\omega t)$. The output $y(t)$ switches based on the thresholds $\\pm h$.\nThe output switches from $-M$ to $+M$ when $x(t)$ crosses $+h$ with a positive slope. This occurs at a time $t_1$ such that $A \\sin(\\omega t_1) = h$. We define the angle $\\alpha = \\omega t_1 = \\arcsin(h/A)$. Since $A > h$, a real angle $\\alpha \\in (0, \\pi/2)$ exists.\nThe output switches from $+M$ to $-M$ when $x(t)$ crosses $-h$ with a negative slope. This occurs at a time $t_2$ such that $A \\sin(\\omega t_2) = -h$ and the slope is negative. This corresponds to the angle $\\omega t_2 = \\pi - \\arcsin(-h/A) = \\pi + \\arcsin(h/A) = \\pi + \\alpha$.\n\nTherefore, the output waveform $y(t)$ over one period from $\\theta = \\omega t = \\alpha$ is:\n$$\ny(\\theta) = \n\\begin{cases} \n+M & \\text{for } \\alpha \\le \\theta < \\pi+\\alpha \\\\\n-M & \\text{for } \\pi+\\alpha \\le \\theta < 2\\pi+\\alpha \n\\end{cases}\n$$\nThe describing function $N(A)$ is the complex ratio of the fundamental component of the output to the input. The fundamental component of the output is $y_1(t) = a_1 \\cos(\\omega t) + b_1 \\sin(\\omega t)$. The Fourier coefficients are given by:\n$$\na_1 = \\frac{1}{\\pi} \\int_{0}^{2\\pi} y(\\theta) \\cos(\\theta) \\,d\\theta\n$$\n$$\nb_1 = \\frac{1}{\\pi} \\int_{0}^{2\\pi} y(\\theta) \\sin(\\theta) \\,d\\theta\n$$\nWe integrate over the period from $\\alpha$ to $2\\pi+\\alpha$:\n$$\nb_1 = \\frac{1}{\\pi} \\left[ \\int_{\\alpha}^{\\pi+\\alpha} M \\sin(\\theta) \\,d\\theta + \\int_{\\pi+\\alpha}^{2\\pi+\\alpha} (-M) \\sin(\\theta) \\,d\\theta \\right]\n$$\n$$\nb_1 = \\frac{M}{\\pi} \\left[ [-\\cos(\\theta)]_{\\alpha}^{\\pi+\\alpha} - [-\\cos(\\theta)]_{\\pi+\\alpha}^{2\\pi+\\alpha} \\right] = \\frac{M}{\\pi} [-\\cos(\\pi+\\alpha) + \\cos(\\alpha) + \\cos(2\\pi+\\alpha) - \\cos(\\pi+\\alpha)]\n$$\nUsing $\\cos(\\pi+\\alpha) = -\\cos(\\alpha)$ and $\\cos(2\\pi+\\alpha) = \\cos(\\alpha)$, we get:\n$$\nb_1 = \\frac{M}{\\pi} [\\cos(\\alpha) + \\cos(\\alpha) + \\cos(\\alpha) + \\cos(\\alpha)] = \\frac{4M}{\\pi} \\cos(\\alpha)\n$$\nSimilarly for $a_1$:\n$$\na_1 = \\frac{1}{\\pi} \\left[ \\int_{\\alpha}^{\\pi+\\alpha} M \\cos(\\theta) \\,d\\theta + \\int_{\\pi+\\alpha}^{2\\pi+\\alpha} (-M) \\cos(\\theta) \\,d\\theta \\right]\n$$\n$$\na_1 = \\frac{M}{\\pi} \\left[ [\\sin(\\theta)]_{\\alpha}^{\\pi+\\alpha} - [\\sin(\\theta)]_{\\pi+\\alpha}^{2\\pi+\\alpha} \\right] = \\frac{M}{\\pi} [\\sin(\\pi+\\alpha) - \\sin(\\alpha) - \\sin(2\\pi+\\alpha) + \\sin(\\pi+\\alpha)]\n$$\nUsing $\\sin(\\pi+\\alpha) = -\\sin(\\alpha)$ and $\\sin(2\\pi+\\alpha) = \\sin(\\alpha)$, we get:\n$$\na_1 = \\frac{M}{\\pi} [-\\sin(\\alpha) - \\sin(\\alpha) - \\sin(\\alpha) - (-\\sin(\\alpha))] = -\\frac{4M}{\\pi} \\sin(\\alpha)\n$$\nFor an input $x(t) = A \\sin(\\omega t)$, the describing function is defined as $N(A) = \\frac{b_1 + j a_1}{A}$. Substituting the expressions for $a_1$ and $b_1$:\n$$\nN(A) = \\frac{1}{A} \\left( \\frac{4M}{\\pi} \\cos(\\alpha) + j \\left(-\\frac{4M}{\\pi} \\sin(\\alpha)\\right) \\right) = \\frac{4M}{\\pi A} (\\cos(\\alpha) - j \\sin(\\alpha))\n$$\nWe know $\\alpha = \\arcsin(h/A)$, so $\\sin(\\alpha) = h/A$. Also, $\\cos(\\alpha) = \\sqrt{1 - \\sin^2(\\alpha)} = \\sqrt{1 - (h/A)^2} = \\frac{\\sqrt{A^2-h^2}}{A}$.\n\nRectangular Form:\nSubstituting for $\\sin(\\alpha)$ and $\\cos(\\alpha)$:\n$$\nN(A) = \\frac{4M}{\\pi A} \\left( \\frac{\\sqrt{A^2-h^2}}{A} - j \\frac{h}{A} \\right) = \\frac{4M}{\\pi A^2} (\\sqrt{A^2-h^2} - jh)\n$$\n\nPolar Form:\nFrom the expression $N(A) = \\frac{4M}{\\pi A} (\\cos(\\alpha) - j \\sin(\\alpha))$, which is $\\frac{4M}{\\pi A} e^{-j\\alpha}$:\n$$\nN(A) = \\frac{4M}{\\pi A} e^{-j \\arcsin(h/A)}\n$$\nThe amplitude is $|N(A)| = \\frac{4M}{\\pi A}$ and the phase is $\\angle N(A) = -\\arcsin(h/A)$.\n\nPhysical Interpretation of the Phase Lag:\nThe phase lag $\\angle N(A) = -\\arcsin(h/A)$ is a direct consequence of the hysteresis. For a simple relay without hysteresis ($h=0$), the switching occurs at the zero-crossings of the input, and the phase lag is zero. With hysteresis, the relay output does not change until the input magnitude has reached the threshold $h$. This introduces a time delay in the output waveform relative to the input waveform. In the frequency domain, this time delay manifests as a phase lag. The amount of lag, $\\alpha = \\arcsin(h/A)$, depends on the ratio of the threshold to the input amplitude. When the amplitude $A$ is much larger than the threshold $h$, the ratio $h/A$ is small, and the phase lag $\\alpha$ is small; the relay behaves almost like an ideal one. Conversely, when $A$ is only slightly larger than $h$, the ratio $h/A$ approaches $1$, and the phase lag $\\alpha$ approaches $\\pi/2$ radians (or $90$ degrees). This means the input must almost reach its peak value before a switch is triggered, causing a significant delay.\n\n2) Limit Cycle Prediction\n\nThe condition for oscillation is $1+G(j\\omega)N(A)=0$, or $G(j\\omega) = -1/N(A)$.\nFirst, find the frequency response of the plant $G(s)=\\frac{1}{s(1+s)}$:\n$$\nG(j\\omega) = \\frac{1}{j\\omega(1+j\\omega)} = \\frac{1}{-\\omega^2 + j\\omega}\n$$\nPutting the expression in rectangular form:\n$$\nG(j\\omega) = \\frac{-\\omega^2 - j\\omega}{(-\\omega^2)^2 + \\omega^2} = \\frac{-\\omega^2 - j\\omega}{\\omega^4 + \\omega^2} = -\\frac{1}{\\omega^2+1} - j\\frac{1}{\\omega(\\omega^2+1)}\n$$\nNext, find the expression for $-1/N(A)$. Using the rectangular form of $N(A)$:\n$$\nN(A) = \\frac{4M}{\\pi A^2}(\\sqrt{A^2-h^2} - jh)\n$$\n$$\n-\\frac{1}{N(A)} = -\\frac{\\pi A^2}{4M(\\sqrt{A^2-h^2} - jh)} = -\\frac{\\pi A^2 (\\sqrt{A^2-h^2} + jh)}{4M((\\sqrt{A^2-h^2})^2 + h^2)}\n$$\n$$\n-\\frac{1}{N(A)} = -\\frac{\\pi A^2 (\\sqrt{A^2-h^2} + jh)}{4M(A^2 - h^2 + h^2)} = -\\frac{\\pi A^2 (\\sqrt{A^2-h^2} + jh)}{4M A^2}\n$$\n$$\n-\\frac{1}{N(A)} = -\\frac{\\pi}{4M}\\sqrt{A^2-h^2} - j\\frac{\\pi h}{4M}\n$$\nNow, we equate the real and imaginary parts of $G(j\\omega)$ and $-1/N(A)$:\nReal part:\n$$\n-\\frac{1}{\\omega^2+1} = -\\frac{\\pi}{4M}\\sqrt{A^2-h^2} \\quad (1)\n$$\nImaginary part:\n$$\n-\\frac{1}{\\omega(\\omega^2+1)} = -\\frac{\\pi h}{4M} \\quad (2)\n$$\nWe are given $h=0.50$ V and $M=\\frac{\\pi}{4}$ V. We can solve for $\\omega$ using equation (2):\n$$\n\\frac{1}{\\omega(\\omega^2+1)} = \\frac{\\pi h}{4M} = \\frac{\\pi (0.50)}{4(\\pi/4)} = \\frac{0.50\\pi}{\\pi} = 0.50\n$$\n$$\n\\omega(\\omega^2+1) = 2 \\implies \\omega^3 + \\omega - 2 = 0\n$$\nBy inspection, $\\omega=1$ is a solution: $1^3 + 1 - 2 = 0$. To check for other positive real roots, we factor the polynomial:\n$$\n(\\omega-1)(\\omega^2 + \\omega + 2) = 0\n$$\nThe quadratic term $\\omega^2 + \\omega + 2$ has a discriminant $\\Delta = 1^2 - 4(1)(2) = -7 < 0$, so it has no real roots. Thus, the only positive real solution for the frequency is $\\omega^{\\star}=1$ rad/s.\n\nNow, we use equation (1) to find the amplitude $A$. Substitute $\\omega^{\\star}=1$:\n$$\n\\frac{1}{1^2+1} = \\frac{\\pi}{4M}\\sqrt{A^2-h^2}\n$$\n$$\n\\frac{1}{2} = \\frac{\\pi}{4(\\pi/4)}\\sqrt{A^2-h^2} = \\sqrt{A^2-h^2}\n$$\nSquaring both sides:\n$$\n\\left(\\frac{1}{2}\\right)^2 = A^2-h^2 \\implies \\frac{1}{4} = A^2-h^2\n$$\nSubstitute $h=0.50$:\n$$\n0.25 = A^2 - (0.50)^2 = A^2 - 0.25\n$$\n$$\nA^2 = 0.25 + 0.25 = 0.5\n$$\nThe limit cycle amplitude is $A^{\\star} = \\sqrt{0.5}$ V.\n\nThe predicted limit cycle parameters are $\\omega^{\\star} = 1$ rad/s and $A^{\\star} = \\sqrt{0.5}$ V.\nWe are required to round the numerical values to four significant figures.\n$A^{\\star} = \\sqrt{0.5} \\approx 0.7071067...$ V. Rounded to four significant figures, $A^{\\star} = 0.7071$ V.\n$\\omega^{\\star} = 1$ rad/s. To four significant figures, this is $\\omega^{\\star} = 1.000$ rad/s.\nThe final answers are $A^{\\star} = 0.7071$ V and $\\omega^{\\star} = 1.000$ rad/s.", "answer": "$$\n\\boxed{\\begin{pmatrix} 0.7071 & 1.000 \\end{pmatrix}}\n$$", "id": "2699605"}, {"introduction": "This computational exercise empowers you to find the describing function for any nonlinearity, even those without a simple analytical solution. By implementing the fundamental integral definitions and validating your code against known closed-form results, you will build a practical and general-purpose tool for nonlinear analysis [@problem_id:2699611]. This practice reinforces the theoretical foundations while developing valuable computational skills.", "problem": "Consider a single-input, single-output feedback system whose nonlinearity is memoryless and static, represented by a mapping $\\phi(\\cdot)$. In the describing function approach, one assumes a sinusoidal input $x(t)=A\\sin(\\omega t)$ and studies the periodic steady-state response $y(t)=\\phi\\big(A\\sin(\\omega t)\\big)$. The describing function $N(A)$ is defined as the complex gain that maps the sinusoidal input at the fundamental frequency to the fundamental component of the output, neglecting higher harmonics. Starting from the Fourier series definition of the fundamental harmonic of a $2\\pi$-periodic function $f(\\theta)$,\n- the in-phase coefficient with $\\sin\\theta$ is $b_1=\\frac{1}{\\pi}\\int_{0}^{2\\pi} f(\\theta)\\sin\\theta\\,d\\theta$,\n- the in-quadrature coefficient with $\\cos\\theta$ is $a_1=\\frac{1}{\\pi}\\int_{0}^{2\\pi} f(\\theta)\\cos\\theta\\,d\\theta$,\nand by defining $\\theta=\\omega t$ (angles in radians), the describing function is the complex number\n$$\nN(A)=\\frac{b_1+ja_1}{A},\n$$\nwhich depends only on the amplitude $A$ for a memoryless nonlinearity. Your task is to compute $N(A)$ numerically from these definitions for several nonlinearities and amplitudes, and validate the numerical result against independent closed-form expressions derived from first principles.\n\nImplement a program that:\n- For each test case, numerically evaluates the two integrals for $b_1$ and $a_1$ using the definition above with $f(\\theta)=\\phi(A\\sin\\theta)$ over $\\theta\\in[0,2\\pi]$ (angles in radians), and forms $N(A)=\\frac{b_1+ja_1}{A}$.\n- Compares the numerical $N(A)$ against a closed-form expression $N_{\\text{cf}}(A)$ derived independently from the same foundational definitions for each chosen $\\phi(\\cdot)$.\n- Reports, for each test case, a boolean indicating whether both the real and imaginary parts agree within a specified tolerance $\\varepsilon=10^{-8}$. Use the rule: the real part passes if $\\big| \\operatorname{Re}(N)-\\operatorname{Re}(N_{\\text{cf}})\\big| \\le \\varepsilon\\cdot\\max\\{1,|\\operatorname{Re}(N_{\\text{cf}})|\\}$; the imaginary part passes if $\\big| \\operatorname{Im}(N)-\\operatorname{Im}(N_{\\text{cf}})\\big| \\le \\varepsilon\\cdot\\max\\{1,|\\operatorname{Im}(N_{\\text{cf}})|\\}$.\n\nUse the following test suite. Each test case consists of a specific nonlinearity $\\phi(\\cdot)$ with parameters and an amplitude $A>0$:\n\n1) Ideal relay (on-off, memoryless):\n- Definition: $\\phi(x)=M\\operatorname{sign}(x)$ with $M=2$.\n- Closed form: $N_{\\text{cf}}(A)=\\dfrac{4M}{\\pi A}$, purely real.\n- Amplitudes: $A\\in\\{0.1,1.0,5.0\\}$.\n\n2) Symmetric saturation:\n- Definition: $\\phi(x)=\\begin{cases}\nKx, & |x|\\le \\dfrac{E}{K},\\\\\nE\\,\\operatorname{sign}(x), & |x|>\\dfrac{E}{K},\n\\end{cases}$ with $K=2$, $E=1$.\n- Closed form (angles in radians). Let $\\beta=\\dfrac{E}{KA}$ and $\\theta_1=\\arcsin(\\min\\{1,\\max\\{0,\\beta\\}\\})$. Then\n  - If $A\\le \\dfrac{E}{K}$, $N_{\\text{cf}}(A)=K$ (purely real).\n  - If $A> \\dfrac{E}{K}$, \n  $$\n  N_{\\text{cf}}(A)=\\frac{2K}{\\pi}\\,\\theta_1-\\frac{K}{\\pi}\\,\\sin(2\\theta_1)+\\frac{4E}{\\pi A}\\cos(\\theta_1),\n  $$\n  which is purely real due to odd symmetry.\n- Amplitudes: $A\\in\\{0.3,0.5,2.0\\}$.\n\n3) Cubic polynomial:\n- Definition: $\\phi(x)=k_1 x+k_3 x^3$ with $k_1=1.5$ and $k_3=-0.4$.\n- Closed form: Using orthogonality of sines, $N_{\\text{cf}}(A)=k_1+\\dfrac{3}{4}k_3 A^2$, purely real.\n- Amplitudes: $A\\in\\{0.2,1.0,3.0\\}$.\n\nAngle unit: radians.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list of booleans enclosed in square brackets, ordered as follows:\n  - First the three booleans for the ideal relay at $A=0.1$, $A=1.0$, $A=5.0$,\n  - then the three booleans for the symmetric saturation at $A=0.3$, $A=0.5$, $A=2.0$,\n  - then the three booleans for the cubic polynomial at $A=0.2$, $A=1.0$, $A=3.0$.\nFor example: \"[True,True,False,True, ...]\".", "solution": "The problem statement has been rigorously validated and is confirmed to be scientifically sound, well-posed, and objective. It presents a standard computational exercise in nonlinear control theory: the numerical verification of analytical expressions for the describing function $N(A)$ for several common memoryless nonlinearities.\n\nThe describing function $N(A)$ for a sinusoidal input $x(t) = A\\sin(\\omega t)$ to a static nonlinearity $\\phi(\\cdot)$ is given by the complex gain $N(A) = \\frac{b_1 + j a_1}{A}$. The coefficients $a_1$ and $b_1$ are the fundamental components of the Fourier series of the periodic output $y(t) = \\phi(A\\sin(\\omega t))$. With the change of variable $\\theta = \\omega t$, the definitions are:\n$$\nb_1 = \\frac{1}{\\pi}\\int_{0}^{2\\pi} \\phi(A\\sin\\theta)\\sin\\theta\\,d\\theta\n$$\n$$\na_1 = \\frac{1}{\\pi}\\int_{0}^{2\\pi} \\phi(A\\sin\\theta)\\cos\\theta\\,d\\theta\n$$\nOur procedure is to compute these integrals numerically for each specified nonlinearity and amplitude $A$, construct the numerical value of $N(A)$, and compare it against the provided closed-form expression $N_{\\text{cf}}(A)$.\n\nAn important property of the selected nonlinearities—ideal relay, symmetric saturation, and cubic polynomial—is that they are all odd functions, meaning $\\phi(-x) = -\\phi(x)$. For an odd nonlinearity, the output $y(t)$ resulting from a sinusoidal input is an odd periodic function. Consequently, its Fourier series expansion consists only of sine terms. This implies that all cosine coefficients, including $a_1$, must be identically zero. Therefore, for all test cases, the describing function $N(A)$ is expected to be a purely real quantity. Our numerical evaluation of $a_1$ should yield a value approaching zero, limited by the precision of the numerical quadrature algorithm. The provided closed-form expressions are all purely real, which is consistent with this principle.\n\nThe numerical solution is implemented as follows for each test case:\n1.  **Define Integrands**: The functions $f_b(\\theta) = \\phi(A\\sin\\theta)\\sin\\theta$ and $f_a(\\theta) = \\phi(A\\sin\\theta)\\cos\\theta$ are constructed.\n2.  **Numerical Quadrature**: The definite integrals for $b_1$ and $a_1$ are computed over the interval $[0, 2\\pi]$ using the `scipy.integrate.quad` function. For the ideal relay nonlinearity, which has a step discontinuity, the location of the discontinuity at $\\theta=\\pi$ is specified to the integrator to ensure high accuracy.\n3.  **Construct Numerical $N(A)$**: The numerical describing function $N_{\\text{num}}(A)$ is assembled from the computed $b_1$ and $a_1$.\n4.  **Evaluate Closed-Form $N_{\\text{cf}}(A)$**: The corresponding analytical formula is evaluated for the given parameters. The mathematical consistency of the provided formula for symmetric saturation with standard textbook expressions has been verified.\n5.  **Validation**: The numerical result $N_{\\text{num}}(A)$ is compared to the closed-form result $N_{\\text{cf}}(A)$. A test case is considered passed (boolean `True`) if both the real and imaginary parts satisfy the specified tolerance condition:\n    - Real part: $|\\operatorname{Re}(N_{\\text{num}}) - \\operatorname{Re}(N_{\\text{cf}})| \\le \\varepsilon \\cdot \\max\\{1, |\\operatorname{Re}(N_{\\text{cf}})|\\}$\n    - Imaginary part: $|\\operatorname{Im}(N_{\\text{num}}) - \\operatorname{Im}(N_{\\text{cf}})| \\le \\varepsilon \\cdot \\max\\{1, |\\operatorname{Im}(N_{\\text{cf}})|\\}$\n    with a tolerance of $\\varepsilon = 10^{-8}$. Since $\\operatorname{Im}(N_{\\text{cf}})$ is always $0$, the condition for the imaginary part simplifies to $|\\operatorname{Im}(N_{\\text{num}})| \\le \\varepsilon$.\n\nThis procedure is systematically applied to the nine specified test cases, and the boolean results are compiled into the final output format.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve():\n    \"\"\"\n    Computes and validates describing functions for several nonlinearities.\n    \"\"\"\n\n    # --- Nonlinearity Definitions ---\n    def phi_relay(x, M):\n        \"\"\"Ideal relay nonlinearity.\"\"\"\n        return M * np.sign(x)\n\n    def phi_saturation(x, E, K):\n        \"\"\"Symmetric saturation nonlinearity.\"\"\"\n        delta = E / K\n        # Use np.piecewise for vectorized evaluation, robust for arrays.\n        return np.piecewise(x, [x < -delta, np.abs(x) <= delta, x > delta],\n                            [-E, lambda v: K * v, E])\n\n    def phi_cubic(x, k1, k3):\n        \"\"\"Cubic polynomial nonlinearity.\"\"\"\n        return k1 * x + k3 * x**3\n\n    # --- Closed-Form Describing Function Definitions ---\n    def N_cf_relay(A, M):\n        \"\"\"Closed-form N(A) for ideal relay.\"\"\"\n        return (4 * M / (np.pi * A)) + 0j\n\n    def N_cf_saturation(A, E, K):\n        \"\"\"Closed-form N(A) for symmetric saturation.\"\"\"\n        delta = E / K\n        if A <= delta:\n            return float(K) + 0j\n        else:\n            beta = E / (K * A)\n            theta1 = np.arcsin(beta)\n            # This formula is equivalent to the standard textbook expression.\n            val = (2 * K / np.pi) * theta1 - (K / np.pi) * np.sin(2 * theta1) + (4 * E / (np.pi * A)) * np.cos(theta1)\n            return val + 0j\n\n    def N_cf_cubic(A, k1, k3):\n        \"\"\"Closed-form N(A) for cubic polynomial.\"\"\"\n        return (k1 + 0.75 * k3 * A**2) + 0j\n\n    # --- Test Suite Definition ---\n    # The order of test cases strictly follows the problem description.\n    test_cases = [\n        # 1) Ideal relay (M=2.0)\n        {'phi': phi_relay, 'N_cf': N_cf_relay, 'params': {'M': 2.0}, 'A': 0.1, 'discontinuities': [np.pi]},\n        {'phi': phi_relay, 'N_cf': N_cf_relay, 'params': {'M': 2.0}, 'A': 1.0, 'discontinuities': [np.pi]},\n        {'phi': phi_relay, 'N_cf': N_cf_relay, 'params': {'M': 2.0}, 'A': 5.0, 'discontinuities': [np.pi]},\n        # 2) Symmetric saturation (K=2.0, E=1.0)\n        {'phi': phi_saturation, 'N_cf': N_cf_saturation, 'params': {'E': 1.0, 'K': 2.0}, 'A': 0.3},\n        {'phi': phi_saturation, 'N_cf': N_cf_saturation, 'params': {'E': 1.0, 'K': 2.0}, 'A': 0.5},\n        {'phi': phi_saturation, 'N_cf': N_cf_saturation, 'params': {'E': 1.0, 'K': 2.0}, 'A': 2.0},\n        # 3) Cubic polynomial (k1=1.5, k3=-0.4)\n        {'phi': phi_cubic, 'N_cf': N_cf_cubic, 'params': {'k1': 1.5, 'k3': -0.4}, 'A': 0.2},\n        {'phi': phi_cubic, 'N_cf': N_cf_cubic, 'params': {'k1': 1.5, 'k3': -0.4}, 'A': 1.0},\n        {'phi': phi_cubic, 'N_cf': N_cf_cubic, 'params': {'k1': 1.5, 'k3': -0.4}, 'A': 3.0},\n    ]\n\n    results = []\n    TOLERANCE = 1e-8\n\n    for case in test_cases:\n        A = case['A']\n        params = case['params']\n        phi_func = case['phi']\n        \n        # Define integrands for Fourier coefficients b1 and a1\n        integrand_b1 = lambda theta: phi_func(A * np.sin(theta), **params) * np.sin(theta)\n        integrand_a1 = lambda theta: phi_func(A * np.sin(theta), **params) * np.cos(theta)\n        \n        # Perform numerical integration using scipy.integrate.quad\n        discontinuity_points = case.get('discontinuities')\n        \n        integral_b1, _ = quad(integrand_b1, 0, 2 * np.pi, points=discontinuity_points)\n        integral_a1, _ = quad(integrand_a1, 0, 2 * np.pi, points=discontinuity_points)\n        \n        b1 = integral_b1 / np.pi\n        a1 = integral_a1 / np.pi\n        \n        # Calculate numerical describing function N(A)\n        N_numerical = (b1 + 1j * a1) / A\n        \n        # Calculate closed-form describing function N_cf(A)\n        N_closed_form = case['N_cf'](A, **params)\n        \n        # Compare numerical and closed-form results based on the specified tolerance\n        real_part_ok = np.abs(N_numerical.real - N_closed_form.real) <= TOLERANCE * np.max([1, np.abs(N_closed_form.real)])\n        imag_part_ok = np.abs(N_numerical.imag - N_closed_form.imag) <= TOLERANCE * np.max([1, np.abs(N_closed_form.imag)])\n        \n        results.append(real_part_ok and imag_part_ok)\n\n    # Format the final output as a comma-separated list of booleans in brackets\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2699611"}]}