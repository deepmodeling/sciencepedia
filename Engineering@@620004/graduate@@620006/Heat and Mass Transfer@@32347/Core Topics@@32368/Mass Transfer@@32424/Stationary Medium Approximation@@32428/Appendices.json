{"hands_on_practices": [{"introduction": "Understanding thermal transport begins with mastering the transient heat conduction equation, the mathematical embodiment of the stationary medium approximation. This foundational practice guides you through deriving this equation from first principles and solving it for a classic slab geometry. By completing this exercise [@problem_id:2525399], you will not only sharpen your analytical skills with partial differential equations but also gain a deep, physical intuition for the characteristic diffusion time, $t_c \\sim L^2/\\alpha$, a cornerstone concept in thermal analysis.", "problem": "A homogeneous solid slab of thickness $L$ occupies the region $0 \\le x \\le L$. The slab is a stationary medium, meaning the solid does not move, there is no convection, and material properties are constant. There is no volumetric heat generation. At time $t=0$, the slab is at a uniform temperature $T_i$. For all $t>0$, the two plane faces at $x=0$ and $x=L$ are maintained at fixed temperatures $T_1$ and $T_2$, respectively. Assume one-dimensional heat conduction in the $x$-direction. \n\nStarting from conservation of energy written over a fixed control volume and Fourierâ€™s law of heat conduction, derive the governing partial differential equation (PDE) and the boundary and initial conditions for the temperature field $T(x,t)$. Then, solve for the analytical temperature field $T(x,t)$ for $t>0$ subject to the stated conditions using only the stationary medium approximation and fundamental principles. Your derivation should include any intermediate changes of variables you find necessary to isolate the transient component and obtain a complete eigenfunction expansion with coefficients determined from the initial condition.\n\nDefine the thermal diffusivity $\\alpha$ by $\\alpha = k/(\\rho c)$, where $k$ is the thermal conductivity, $\\rho$ is the mass density, and $c$ is the specific heat at constant pressure. Using your solution, identify the slowest-decaying time constant associated with the fundamental mode and explain the scaling that motivates the characteristic diffusion time $t_c \\sim L^2/\\alpha$.\n\nFinally, for a slab with $L = 1.00 \\times 10^{-2}\\ \\mathrm{m}$ and $\\alpha = 1.50 \\times 10^{-7}\\ \\mathrm{m^2/s}$, compute the characteristic time scale $t_c = L^2/\\alpha$. Round your final numerical answer for $t_c$ to $3$ significant figures. Express $t_c$ in seconds.", "solution": "The problem proposed is a standard, well-posed problem in transient heat conduction and is therefore valid. We shall proceed with the derivation and solution.\n\nFirst, we derive the governing partial differential equation (PDE) from the principle of conservation of energy. Consider a one-dimensional homogeneous solid slab of thickness $L$ occupying the domain $0 \\le x \\le L$. Let $A$ be the cross-sectional area perpendicular to the $x$-axis. We apply the conservation of energy to a fixed differential control volume of thickness $\\Delta x$ located between $x$ and $x + \\Delta x$. The energy balance states that the rate of change of internal energy within the control volume is equal to the net rate of heat conducted into the control volume, as there is no volumetric heat generation.\n\nThe rate of change of internal energy is given by:\n$$ \\frac{\\partial E}{\\partial t} = \\frac{\\partial}{\\partial t} (\\rho V c T) = \\rho (A \\Delta x) c \\frac{\\partial T}{\\partial t} $$\nwhere $\\rho$ is the mass density, $c$ is the specific heat capacity, $V = A \\Delta x$ is the volume, and $T(x,t)$ is the temperature. We have assumed material properties $\\rho$ and $c$ are constant.\n\nThe net rate of heat conduction is the rate of heat entering at $x$ minus the rate of heat leaving at $x + \\Delta x$. The heat flux $q_x$ is given by Fourier's law of heat conduction:\n$$ q_x = -k \\frac{\\partial T}{\\partial x} $$\nwhere $k$ is the thermal conductivity, also assumed constant. The rate of heat transfer is $q_x A$.\nThus, the net rate of heat conduction is:\n$$ \\dot{Q}_{net} = (q_x A)|_x - (q_x A)|_{x+\\Delta x} = A \\left[ \\left(-k \\frac{\\partial T}{\\partial x}\\right)\\bigg|_x - \\left(-k \\frac{\\partial T}{\\partial x}\\right)\\bigg|_{x+\\Delta x} \\right] $$\nEquating the rate of change of energy and the net heat rate:\n$$ \\rho A \\Delta x c \\frac{\\partial T}{\\partial t} = k A \\left[ \\left(\\frac{\\partial T}{\\partial x}\\right)\\bigg|_{x+\\Delta x} - \\left(\\frac{\\partial T}{\\partial x}\\right)\\bigg|_x \\right] $$\nDividing by $A \\Delta x$ and taking the limit as $\\Delta x \\to 0$:\n$$ \\rho c \\frac{\\partial T}{\\partial t} = k \\lim_{\\Delta x \\to 0} \\frac{\\left(\\frac{\\partial T}{\\partial x}\\right)\\bigg|_{x+\\Delta x} - \\left(\\frac{\\partial T}{\\partial x}\\right)\\bigg|_x}{\\Delta x} $$\nThe limit on the right-hand side is the definition of the second partial derivative of $T$ with respect to $x$. This yields the one-dimensional heat equation:\n$$ \\rho c \\frac{\\partial T}{\\partial t} = k \\frac{\\partial^2 T}{\\partial x^2} \\implies \\frac{\\partial T}{\\partial t} = \\frac{k}{\\rho c} \\frac{\\partial^2 T}{\\partial x^2} $$\nDefining the thermal diffusivity as $\\alpha = k/(\\rho c)$, the governing PDE is:\n$$ \\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2} \\quad \\text{for } 0 < x < L, t > 0 $$\nThe initial and boundary conditions provided in the problem statement are:\nInitial Condition (IC): $T(x, 0) = T_i$ for $0 \\le x \\le L$.\nBoundary Conditions (BCs): $T(0, t) = T_1$ and $T(L, t) = T_2$ for $t > 0$.\n\nTo solve this problem with non-homogeneous boundary conditions, we decompose the temperature field $T(x,t)$ into a steady-state solution $T_{ss}(x)$ and a transient solution $\\theta(x,t)$:\n$$ T(x,t) = T_{ss}(x) + \\theta(x,t) $$\nThe steady-state solution $T_{ss}(x)$ is the temperature distribution as $t \\to \\infty$. In this limit, $\\partial T / \\partial t = 0$, and the heat equation reduces to:\n$$ \\frac{d^2 T_{ss}}{dx^2} = 0 $$\nwith the boundary conditions $T_{ss}(0) = T_1$ and $T_{ss}(L) = T_2$. Integrating twice gives $T_{ss}(x) = C_1 x + C_2$. Applying the boundary conditions:\n$T_{ss}(0) = C_2 = T_1$\n$T_{ss}(L) = C_1 L + T_1 = T_2 \\implies C_1 = \\frac{T_2 - T_1}{L}$\nTherefore, the steady-state solution is a linear temperature profile:\n$$ T_{ss}(x) = (T_2 - T_1)\\frac{x}{L} + T_1 $$\nNow we find the governing equation and conditions for the transient part $\\theta(x,t)$. Substituting $T(x,t) = T_{ss}(x) + \\theta(x,t)$ into the original PDE:\n$$ \\frac{\\partial}{\\partial t}(T_{ss}(x) + \\theta(x,t)) = \\alpha \\frac{\\partial^2}{\\partial x^2}(T_{ss}(x) + \\theta(x,t)) $$\n$$ \\frac{\\partial \\theta}{\\partial t} = \\alpha \\frac{\\partial^2 T_{ss}}{\\partial x^2} + \\alpha \\frac{\\partial^2 \\theta}{\\partial x^2} $$\nSince $\\frac{d^2 T_{ss}}{dx^2} = 0$, the PDE for $\\theta(x,t)$ is the homogeneous heat equation:\n$$ \\frac{\\partial \\theta}{\\partial t} = \\alpha \\frac{\\partial^2 \\theta}{\\partial x^2} $$\nThe boundary conditions for $\\theta(x,t)$ become homogeneous:\n$T(0,t) = T_{ss}(0) + \\theta(0,t) = T_1 \\implies \\theta(0,t) = 0$\n$T(L,t) = T_{ss}(L) + \\theta(L,t) = T_2 \\implies \\theta(L,t) = 0$\nThe initial condition for $\\theta(x,t)$ is:\n$T(x,0) = T_{ss}(x) + \\theta(x,0) = T_i \\implies \\theta(x,0) = T_i - T_{ss}(x) = T_i - \\left((T_2 - T_1)\\frac{x}{L} + T_1\\right)$\n\nWe solve for $\\theta(x,t)$ using the method of separation of variables. Let $\\theta(x,t) = X(x)\\mathcal{T}(t)$. Substituting into the PDE for $\\theta$:\n$$ X(x)\\frac{d\\mathcal{T}}{dt} = \\alpha \\mathcal{T}(t) \\frac{d^2X}{dx^2} \\implies \\frac{1}{\\alpha \\mathcal{T}} \\frac{d\\mathcal{T}}{dt} = \\frac{1}{X} \\frac{d^2X}{dx^2} = -\\lambda^2 $$\nwhere $-\\lambda^2$ is the separation constant. This results in two ordinary differential equations:\nTime ODE: $\\frac{d\\mathcal{T}}{dt} + \\alpha \\lambda^2 \\mathcal{T} = 0 \\implies \\mathcal{T}(t) = C \\exp(-\\alpha \\lambda^2 t)$\nSpace ODE: $\\frac{d^2X}{dx^2} + \\lambda^2 X = 0 \\implies X(x) = A \\sin(\\lambda x) + B \\cos(\\lambda x)$\n\nApplying the homogeneous boundary conditions for $\\theta$ to $X(x)$:\n$X(0) = 0 \\implies A \\sin(0) + B \\cos(0) = B = 0$. So, $X(x) = A \\sin(\\lambda x)$.\n$X(L) = 0 \\implies A \\sin(\\lambda L) = 0$. For a non-trivial solution ($A \\ne 0$), we must have $\\sin(\\lambda L) = 0$.\nThis condition determines the eigenvalues $\\lambda_n$:\n$\\lambda_n L = n\\pi \\implies \\lambda_n = \\frac{n\\pi}{L}$, for $n = 1, 2, 3, \\ldots$\nThe corresponding eigenfunctions are $X_n(x) = \\sin(\\frac{n\\pi x}{L})$.\nThe solution for $\\theta(x,t)$ is a superposition of all possible modes:\n$$ \\theta(x,t) = \\sum_{n=1}^{\\infty} C_n \\exp\\left(-\\alpha \\lambda_n^2 t\\right) X_n(x) = \\sum_{n=1}^{\\infty} C_n \\exp\\left(-\\alpha \\left(\\frac{n\\pi}{L}\\right)^2 t\\right) \\sin\\left(\\frac{n\\pi x}{L}\\right) $$\nThe coefficients $C_n$ are determined from the initial condition $\\theta(x,0)$. At $t=0$:\n$$ \\theta(x,0) = \\sum_{n=1}^{\\infty} C_n \\sin\\left(\\frac{n\\pi x}{L}\\right) = T_i - T_{ss}(x) $$\nThis is the Fourier sine series expansion of $\\theta(x,0)$. The coefficients $C_n$ are given by:\n$$ C_n = \\frac{2}{L} \\int_0^L \\theta(x,0) \\sin\\left(\\frac{n\\pi x}{L}\\right) dx = \\frac{2}{L} \\int_0^L \\left(T_i - T_1 - (T_2-T_1)\\frac{x}{L}\\right) \\sin\\left(\\frac{n\\pi x}{L}\\right) dx $$\nWe evaluate the integral in two parts:\n$$ C_n = \\frac{2}{L} \\int_0^L (T_i-T_1)\\sin\\left(\\frac{n\\pi x}{L}\\right)dx - \\frac{2(T_2-T_1)}{L^2}\\int_0^L x\\sin\\left(\\frac{n\\pi x}{L}\\right)dx $$\nThe first integral is:\n$$ \\frac{2(T_i-T_1)}{L} \\left[-\\frac{L}{n\\pi}\\cos\\left(\\frac{n\\pi x}{L}\\right)\\right]_0^L = \\frac{2(T_i-T_1)}{n\\pi}(1-\\cos(n\\pi)) = \\frac{2(T_i-T_1)}{n\\pi}(1-(-1)^n) $$\nThe second integral, using integration by parts, is:\n$$ \\int_0^L x\\sin\\left(\\frac{n\\pi x}{L}\\right)dx = \\left[-\\frac{Lx}{n\\pi}\\cos\\left(\\frac{n\\pi x}{L}\\right) + \\left(\\frac{L}{n\\pi}\\right)^2\\sin\\left(\\frac{n\\pi x}{L}\\right)\\right]_0^L = -\\frac{L^2}{n\\pi}\\cos(n\\pi) = -\\frac{L^2}{n\\pi}(-1)^n $$\nSubstituting this back into the expression for $C_n$:\n$$ C_n = \\frac{2(T_i-T_1)}{n\\pi}(1-(-1)^n) - \\frac{2(T_2-T_1)}{L^2}\\left(-\\frac{L^2}{n\\pi}(-1)^n\\right) = \\frac{2}{n\\pi}[(T_i-T_1)(1-(-1)^n)+(T_2-T_1)(-1)^n] $$\n$$ C_n = \\frac{2}{n\\pi}[T_i-T_1 - (T_i-T_1)(-1)^n + (T_2-T_1)(-1)^n] = \\frac{2}{n\\pi}[T_i-T_1 + (T_2-T_i)(-1)^n] $$\nCombining the steady-state and transient solutions, the complete analytical solution for the temperature field is:\n$$ T(x,t) = (T_2 - T_1)\\frac{x}{L} + T_1 + \\sum_{n=1}^{\\infty} \\left( \\frac{2}{n\\pi}[T_i-T_1 + (T_2-T_i)(-1)^n] \\right) \\exp\\left(-\\frac{\\alpha n^2 \\pi^2 t}{L^2}\\right) \\sin\\left(\\frac{n\\pi x}{L}\\right) $$\n\nNext, we identify the time constant. Each term in the series solution decays exponentially with time, governed by the factor $\\exp(-\\alpha \\lambda_n^2 t) = \\exp(-t/\\tau_n)$. The time constant for the $n$-th mode is thus:\n$$ \\tau_n = \\frac{1}{\\alpha \\lambda_n^2} = \\frac{L^2}{\\alpha n^2 \\pi^2} $$\nThe overall rate of decay is controlled by the slowest-decaying mode, which corresponds to the largest time constant. This occurs for the fundamental mode, $n=1$. The slowest-decaying time constant is:\n$$ \\tau_1 = \\frac{L^2}{\\alpha \\pi^2} $$\nThis result explains the scaling for the characteristic diffusion time, $t_c \\sim L^2/\\alpha$. The time scale of thermal diffusion is dominated by $\\tau_1$. The factor $\\pi^2$ is a numerical constant of order $10$. The fundamental physical relationship is that the time required for heat to diffuse over a distance $L$ scales with the square of the distance and is inversely proportional to the thermal diffusivity. Therefore, it is conventional to define a characteristic diffusion time $t_c = L^2/\\alpha$, which captures this essential scaling.\n\nFinally, we compute the characteristic time scale $t_c$ for the given parameters:\n$L = 1.00 \\times 10^{-2}\\ \\mathrm{m}$\n$\\alpha = 1.50 \\times 10^{-7}\\ \\mathrm{m^2/s}$\nThe characteristic time is calculated as:\n$$ t_c = \\frac{L^2}{\\alpha} = \\frac{(1.00 \\times 10^{-2}\\ \\mathrm{m})^2}{1.50 \\times 10^{-7}\\ \\mathrm{m^2/s}} = \\frac{1.00 \\times 10^{-4}\\ \\mathrm{m}^2}{1.50 \\times 10^{-7}\\ \\mathrm{m}^2/s} $$\n$$ t_c = \\frac{1.00}{1.50} \\times 10^{3}\\ \\mathrm{s} = 0.6666... \\times 10^{3}\\ \\mathrm{s} \\approx 667\\ \\mathrm{s} $$\nRounding to $3$ significant figures, the characteristic time scale is $667$ seconds.", "answer": "$$\\boxed{667}$$", "id": "2525399"}, {"introduction": "The stationary medium approximation simplifies many problems, but when is it truly valid? This exercise [@problem_id:2525447] moves into the realm of mass transfer to critically examine the limits of this assumption in the context of evaporation. You will derive the mass flux using both a simplified Fickian model and the more accurate Stefan flow model, which accounts for diffusion-induced bulk motion, allowing you to quantify the approximation's error and develop the crucial engineering judgment needed to select an appropriate model.", "problem": "A pure liquid species $A$ evaporates into a quiescent layer of a noncondensable carrier gas $B$ (nitrogen) at constant temperature and pressure. Consider a one-dimensional, isothermal, isobaric gas film of thickness $L$ adjacent to a flat liquid surface, with coordinate $z$ measured from the interface ($z=0$) into the gas ($z=L$). The total pressure is $P = 1.01325 \\times 10^{5}\\ \\mathrm{Pa}$, the temperature is $T = 298\\ \\mathrm{K}$, and the binary diffusivity is $D_{AB} = 7.0 \\times 10^{-6}\\ \\mathrm{m^2/s}$. Treat the gas as ideal so that the total molar concentration is $c = P/(R T)$, where $R$ is the universal gas constant. The mole fraction of $A$ at the interface is $y_{A,s}$ and lies within the range $0.30 \\le y_{A,s} \\le 0.50$ due to mild thermal nonuniformity along the surface. The bulk gas far from the interface is dry with $y_{A,\\infty} = 0$. The carrier gas $B$ does not cross the interface and has zero net molar flux across the film on a molar basis.\n\nStarting only from the steady one-dimensional species molar balance and the definition of Fickâ€™s law for binary diffusion at constant temperature and pressure, perform the following:\n\n1. Derive the steady molar flux of $A$, $N_{A}^{\\mathrm{Stefan}}$, accounting for Stefan flow caused by evaporation, under the condition that the net molar flux of $B$ is zero across the film.\n\n2. Derive the steady molar flux of $A$, $N_{A}^{\\mathrm{Fick}}$, under the stationary medium approximation (molar-average velocity zero, i.e., no bulk flow), for the same boundary conditions.\n\n3. Define the absolute relative error of the stationary medium approximation with respect to the Stefan-corrected flux as\n$$\n\\varepsilon(y_{A,s}) \\equiv \\frac{\\left|N_{A}^{\\mathrm{Fick}} - N_{A}^{\\mathrm{Stefan}}\\right|}{N_{A}^{\\mathrm{Stefan}}}.\n$$\nFor the composition range $y_{A,s} \\in [0.30, 0.50]$ and film thickness $L = 4.0 \\times 10^{-3}\\ \\mathrm{m}$, determine the maximum value of $\\varepsilon(y_{A,s})$ over this range.\n\nExpress your final result as a decimal fraction without units and round your answer to four significant figures.", "solution": "The problem stated is scientifically grounded, well-posed, objective, and contains sufficient information for a unique solution. It is a standard problem in mass transfer theory concerning Stefan diffusion and the validity of the stationary medium approximation. The validation is passed, and I will proceed with the solution.\n\nThe analysis begins with the general expression for the total molar flux of species $A$ in a one-dimensional binary system at steady state, which is the sum of the diffusive flux ($J_A$) and the convective bulk flow flux:\n$$\nN_A = J_A + y_A (N_A + N_B)\n$$\nwhere $y_A$ is the mole fraction of species $A$, and $N_A$ and $N_B$ are the molar fluxes of species $A$ and $B$, respectively. Fick's law defines the diffusive flux relative to the molar average velocity as:\n$$\nJ_A = -c D_{AB} \\frac{dy_A}{dz}\n$$\nHere, $c$ is the total molar concentration, $D_{AB}$ is the binary diffusion coefficient, and $z$ is the spatial coordinate. Combining these gives the governing equation for the flux of species $A$:\n$$\nN_A = -c D_{AB} \\frac{dy_A}{dz} + y_A (N_A + N_B)\n$$\nAt steady state, the species molar balance dictates that the flux $N_A$ must be constant along the diffusion path, i.e., $\\frac{dN_A}{dz} = 0$.\n\n1. Derivation of the Stefan Flux, $N_{A}^{\\mathrm{Stefan}}$\n\nThis case models the evaporation of species $A$ into a stagnant, noncondensable gas $B$. The defining physical condition is that species $B$ is insoluble in liquid $A$ and thus cannot cross the interface at $z=0$. This implies that the net molar flux of $B$ is zero everywhere in the film.\n$$\nN_B = 0\n$$\nSubstituting this condition into the general flux equation yields:\n$$\nN_A = -c D_{AB} \\frac{dy_A}{dz} + y_A N_A\n$$\nThis equation can be rearranged to separate variables for integration:\n$$\nN_A (1 - y_A) = -c D_{AB} \\frac{dy_A}{dz}\n$$\n$$\n\\frac{N_A}{c D_{AB}} dz = -\\frac{dy_A}{1 - y_A}\n$$\nWe integrate this expression across the gas film, from the interface at $z=0$ (where $y_A = y_{A,s}$) to the edge of the film at $z=L$ (where the problem specifies a dry bulk gas, so $y_A = y_{A,L} = 0$). Since $N_A$, $c$, and $D_{AB}$ are constant, we have:\n$$\n\\int_{0}^{L} \\frac{N_A}{c D_{AB}} dz = \\int_{y_{A,s}}^{y_{A,L}=0} -\\frac{dy_A}{1 - y_A}\n$$\n$$\n\\frac{N_A L}{c D_{AB}} = \\left[ \\ln(1 - y_A) \\right]_{y_{A,s}}^{0}\n$$\n$$\n\\frac{N_A L}{c D_{AB}} = \\ln(1 - 0) - \\ln(1 - y_{A,s}) = -\\ln(1 - y_{A,s})\n$$\nSolving for the molar flux $N_A$, which we denote as $N_{A}^{\\mathrm{Stefan}}$, gives the result for Stefan flow:\n$$\nN_{A}^{\\mathrm{Stefan}} = -\\frac{c D_{AB}}{L} \\ln(1 - y_{A,s})\n$$\n\n2. Derivation of the Flux under the Stationary Medium Approximation, $N_{A}^{\\mathrm{Fick}}$\n\nThe stationary medium approximation is explicitly defined in the problem as the case where the molar-average velocity is zero. The molar-average velocity, $v^*$, is given by $v^* = (N_A + N_B)/c$. Thus, the approximation implies:\n$$\nv^* = 0 \\implies N_A + N_B = 0\n$$\nThis condition describes equimolar counter-diffusion. Substituting $N_A + N_B = 0$ into the general flux equation gives:\n$$\nN_A = -c D_{AB} \\frac{dy_A}{dz} + y_A(0)\n$$\n$$\nN_A = -c D_{AB} \\frac{dy_A}{dz}\n$$\nThis is the simplified Fickian diffusion equation for a stationary medium. We again separate variables and integrate across the film with the same boundary conditions ($y_A(0)=y_{A,s}$, $y_A(L)=0$):\n$$\n\\int_{0}^{L} N_A dz = \\int_{y_{A,s}}^{0} -c D_{AB} dy_A\n$$\n$$\nN_A L = -c D_{AB} [y_A]_{y_{A,s}}^{0} = -c D_{AB} (0 - y_{A,s}) = c D_{AB} y_{A,s}\n$$\nSolving for the flux, which we denote $N_{A}^{\\mathrm{Fick}}$, yields:\n$$\nN_{A}^{\\mathrm{Fick}} = \\frac{c D_{AB}}{L} y_{A,s}\n$$\n\n3. Determination of the Maximum Relative Error\n\nThe absolute relative error, $\\varepsilon$, is defined as:\n$$\n\\varepsilon(y_{A,s}) = \\frac{\\left|N_{A}^{\\mathrm{Fick}} - N_{A}^{\\mathrm{Stefan}}\\right|}{N_{A}^{\\mathrm{Stefan}}}\n$$\nSubstituting the derived expressions for the fluxes:\n$$\n\\varepsilon(y_{A,s}) = \\frac{\\left|\\frac{c D_{AB}}{L} y_{A,s} - \\left(-\\frac{c D_{AB}}{L} \\ln(1 - y_{A,s})\\right)\\right|}{-\\frac{c D_{AB}}{L} \\ln(1 - y_{A,s})}\n$$\nThe common term $\\frac{c D_{AB}}{L}$ cancels. We also note that for $y_{A,s} \\in (0, 1)$, the Taylor series expansion $-\\ln(1 - y_{A,s}) = y_{A,s} + \\frac{y_{A,s}^2}{2} + \\dots$ shows that $-\\ln(1 - y_{A,s}) > y_{A,s}$. Therefore, $N_{A}^{\\mathrm{Stefan}} > N_{A}^{\\mathrm{Fick}} > 0$. The term inside the absolute value, $N_{A}^{\\mathrm{Fick}} - N_{A}^{\\mathrm{Stefan}}$, is negative.\n$$\n\\varepsilon(y_{A,s}) = \\frac{N_{A}^{\\mathrm{Stefan}} - N_{A}^{\\mathrm{Fick}}}{N_{A}^{\\mathrm{Stefan}}} = 1 - \\frac{N_{A}^{\\mathrm{Fick}}}{N_{A}^{\\mathrm{Stefan}}}\n$$\n$$\n\\varepsilon(y_{A,s}) = 1 - \\frac{\\frac{c D_{AB}}{L} y_{A,s}}{-\\frac{c D_{AB}}{L} \\ln(1 - y_{A,s})} = 1 + \\frac{y_{A,s}}{\\ln(1 - y_{A,s})}\n$$\nTo find the maximum value of $\\varepsilon(y_{A,s})$ over the range $y_{A,s} \\in [0.30, 0.50]$, we examine its derivative with respect to $y_{A,s}$. Let $x = y_{A,s}$.\n$$\n\\frac{d\\varepsilon}{dx} = \\frac{d}{dx} \\left(1 + \\frac{x}{\\ln(1-x)}\\right) = \\frac{1 \\cdot \\ln(1-x) - x \\cdot \\frac{-1}{1-x}}{(\\ln(1-x))^2} = \\frac{\\ln(1-x) + \\frac{x}{1-x}}{(\\ln(1-x))^2}\n$$\nTo determine the sign of the derivative, we analyze the numerator, $g(x) = \\ln(1-x) + \\frac{x}{1-x}$. Its derivative is $g'(x) = -\\frac{1}{1-x} + \\frac{(1)(1-x) - x(-1)}{(1-x)^2} = \\frac{-(1-x)+1}{(1-x)^2} = \\frac{x}{(1-x)^2}$. For $x \\in (0,1)$, $g'(x) > 0$, so $g(x)$ is a strictly increasing function. Since $g(0) = \\ln(1) + 0 = 0$, it follows that $g(x) > 0$ for all $x \\in (0,1)$.\nThe numerator of $\\frac{d\\varepsilon}{dx}$ is positive for $x \\in [0.30, 0.50]$, and the denominator is also always positive. Thus, $\\frac{d\\varepsilon}{dx} > 0$, and $\\varepsilon(y_{A,s})$ is a monotonically increasing function of $y_{A,s}$ in the specified range.\nThe maximum error will therefore occur at the maximum value of $y_{A,s}$, which is $y_{A,s} = 0.50$.\n$$\n\\varepsilon_{\\max} = \\varepsilon(0.50) = 1 + \\frac{0.50}{\\ln(1 - 0.50)} = 1 + \\frac{0.50}{\\ln(0.50)}\n$$\n$$\n\\varepsilon_{\\max} = 1 + \\frac{0.50}{-0.693147...} = 1 - 0.721347... = 0.278652...\n$$\nRounding to four significant figures, the maximum absolute relative error is $0.2787$.", "answer": "$$\n\\boxed{0.2787}\n$$", "id": "2525447"}, {"introduction": "In modern engineering, most complex diffusion problems are solved numerically, making the verification of our computational tools paramount. This practice [@problem_id:2525432] provides hands-on experience in this essential skill through the method of manufactured solutions. By implementing a numerical solver for the heat equation and performing a grid refinement study, you will verify that your code converges at the theoretically expected rate, thereby building trust in the tools used to apply the stationary medium model to problems far beyond the reach of analytical methods.", "problem": "Design and implement a verification study for the stationary medium approximation in transient diffusion by demonstrating second-order convergence of a numerical solver under grid refinement. Begin from a fundamental base (conservation of energy and Fourierâ€™s law) to state the governing equation and verify the order of accuracy against a smooth manufactured solution with compatible boundary data. The study is strictly one-dimensional, on a fixed domain, and fully non-dimensionalized so that no physical units are required.\n\nThe governing Partial Differential Equation (PDE) for temperature $T(x,t)$ in a stationary medium (no material motion) with constant thermal diffusivity $\\alpha$ on the spatial interval $x \\in [0,1]$ and time $t \\ge 0$ is\n$$\n\\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2}.\n$$\nUse the smooth manufactured solution\n$$\nT_{\\text{exact}}(x,t) = \\cos(\\pi x)\\, \\exp\\!\\left(-\\alpha \\pi^2 t\\right),\n$$\nwhich implies the initial condition $T(x,0) = \\cos(\\pi x)$ and time-varying Dirichlet boundary conditions $T(0,t) = \\exp(-\\alpha \\pi^2 t)$ and $T(1,t) = -\\exp(-\\alpha \\pi^2 t)$, both of which are smooth in space and time.\n\nNumerically solve the PDE with any consistent second-order accurate method in both space and time on a sequence of uniform grids. To isolate the spatial truncation error at second-order, enforce the constraint that the time step $\\Delta t$ scales as $\\Delta t \\propto \\Delta x^2$ so that the dimensionless diffusion number $r = \\alpha \\Delta t / \\Delta x^2$ remains constant as the grid is refined. For each grid, ensure the final simulation time is exactly $t_{\\text{end}}$ by choosing an integer number of time steps $N_t$ and adjusting $\\Delta t = t_{\\text{end}}/N_t$ accordingly; this will keep $r$ nearly constant across refinements.\n\nFor a grid with $N$ interior points, let $\\Delta x = 1/(N+1)$, define interior nodes $x_i = i\\,\\Delta x$ for $i = 1,2,\\dots,N$, and carry out time stepping from $t=0$ to $t=t_{\\text{end}}$, enforcing Dirichlet boundary values from $T_{\\text{exact}}(x,t)$ at each time level. At the final time, compute the discrete $L^2$ error\n$$\nE_{N} = \\left( \\Delta x \\sum_{i=1}^{N} \\left[T_{\\text{num}}(x_i,t_{\\text{end}}) - T_{\\text{exact}}(x_i,t_{\\text{end}})\\right]^2 \\right)^{1/2}.\n$$\n\nTo verify second-order convergence, for a base grid size $N_0$ and its successive refinements $2N_0$ and $4N_0$, compute the observed orders\n$$\np_1 = \\frac{\\log\\!\\left(E_{N_0}/E_{2N_0}\\right)}{\\log(2)}, \\quad\np_2 = \\frac{\\log\\!\\left(E_{2N_0}/E_{4N_0}\\right)}{\\log(2)}.\n$$\nReport, for each test case, the single float $p_{\\min} = \\min(p_1,p_2)$.\n\nTest suite. Your program must run the following three test cases and aggregate their $p_{\\min}$ values in the prescribed output format:\n- Case A (happy path): $\\alpha = 1.0$, $t_{\\text{end}} = 0.1$, $r = 0.5$, $N_0 = 32$.\n- Case B (short time, boundary sensitivity): $\\alpha = 1.0$, $t_{\\text{end}} = 0.001$, $r = 0.5$, $N_0 = 32$.\n- Case C (different diffusivity): $\\alpha = 0.05$, $t_{\\text{end}} = 0.1$, $r = 0.5$, $N_0 = 32$.\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order [Case A, Case B, Case C], where each entry is the corresponding $p_{\\min}$ rounded to $6$ decimal places, for example, $[2.000000,1.998765,2.001234]$.", "solution": "The problem proposed is a standard verification study for a numerical solver of the one-dimensional transient heat diffusion equation. Before proceeding, we must validate the problem statement.\n\nFirst, we extract the given information verbatim.\nGoverning Equation: $\\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2}$ on $x \\in [0,1]$, $t \\ge 0$.\nManufactured Solution: $T_{\\text{exact}}(x,t) = \\cos(\\pi x)\\, \\exp(-\\alpha \\pi^2 t)$.\nInitial Condition: $T(x,0) = \\cos(\\pi x)$.\nBoundary Conditions: $T(0,t) = \\exp(-\\alpha \\pi^2 t)$, $T(1,t) = -\\exp(-\\alpha \\pi^2 t)$.\nNumerical Method: Second-order accurate in space and time.\nGrid Refinement: $\\Delta t \\propto \\Delta x^2$ with $r = \\alpha \\Delta t / \\Delta x^2$ held nearly constant.\nSpatial Discretization: $\\Delta x = 1/(N+1)$ for $N$ interior points $x_i = i\\,\\Delta x$ for $i = 1, \\dots, N$.\nTemporal Discretization: Final time $t_{\\text{end}}$ is reached with an integer number of steps $N_t$, so $\\Delta t = t_{\\text{end}}/N_t$.\nError Metric: $L^2$ error $E_{N} = \\left( \\Delta x \\sum_{i=1}^{N} \\left[T_{\\text{num}}(x_i,t_{\\text{end}}) - T_{\\text{exact}}(x_i,t_{\\text{end}})\\right]^2 \\right)^{1/2}$.\nConvergence Order Calculation: $p_1 = \\frac{\\log(E_{N_0}/E_{2N_0})}{\\log(2)}$, $p_2 = \\frac{\\log(E_{2N_0}/E_{4N_0})}{\\log(2)}$, with $p_{\\min} = \\min(p_1,p_2)$ being the reported value.\nTest Cases:\nCase A: $\\alpha = 1.0$, $t_{\\text{end}} = 0.1$, $r = 0.5$, $N_0 = 32$.\nCase B: $\\alpha = 1.0$, $t_{\\text{end}} = 0.001$, $r = 0.5$, $N_0 = 32$.\nCase C: $\\alpha = 0.05$, $t_{\\text{end}} = 0.1$, $r = 0.5$, $N_0 = 32$.\n\nNext, we validate the problem. The problem is scientifically grounded, based on the fundamental heat equation, which arises from the conservation of energy combined with Fourier's law of heat conduction in a stationary medium. The method of manufactured solutions is a rigorous and standard technique in the field of numerical analysis for verifying the implementation correctness and convergence order of a numerical code. The provided manufactured solution $T_{\\text{exact}}(x,t)$ is verified to be an exact solution to the governing partial differential equation and its associated initial and boundary conditions. All parameters and procedures are defined with mathematical precision. The problem contains no scientific flaws, ambiguities, or contradictions. It is a well-posed, objective, and non-trivial task in computational science.\n\nThe verdict is that the problem is valid. We proceed with the solution.\n\nThe governing equation, $\\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2}$, describes heat diffusion in a stationary medium. The task is to implement a numerical solver and verify that its convergence rate matches its theoretical design accuracy. The problem requires a method that is second-order accurate in both space and time. The Crank-Nicolson scheme is a suitable choice that satisfies this requirement.\n\nSpatial discretization of the term $\\frac{\\partial^2 T}{\\partial x^2}$ is achieved using a second-order central difference formula at each spatial node $x_i$:\n$$\n\\left. \\frac{\\partial^2 T}{\\partial x^2} \\right|_{x_i} \\approx \\frac{T_{i-1} - 2T_i + T_{i+1}}{\\Delta x^2} + \\mathcal{O}(\\Delta x^2)\n$$\nwhere $T_i$ denotes the temperature at node $x_i$.\n\nThe Crank-Nicolson method advances the solution from time $t^n$ to $t^{n+1}$ by centering the spatial finite difference approximation halfway between these two time levels. This time-averaging approach yields second-order accuracy in time. The discretized equation is:\n$$\n\\frac{T_i^{n+1} - T_i^n}{\\Delta t} = \\frac{\\alpha}{2} \\left( \\frac{T_{i-1}^{n+1} - 2T_i^{n+1} + T_{i+1}^{n+1}}{\\Delta x^2} + \\frac{T_{i-1}^n - 2T_i^n + T_{i+1}^n}{\\Delta x^2} \\right)\n$$\nwhere $T_i^n$ is the numerical approximation of $T(x_i, t^n)$. Let $r = \\alpha \\Delta t / \\Delta x^2$ be the dimensionless diffusion number. We rearrange the equation to group the unknown terms at time level $n+1$ on the left-hand side and the known terms at time level $n$ on the right-hand side:\n$$\n-\\frac{r}{2} T_{i-1}^{n+1} + (1+r) T_i^{n+1} - \\frac{r}{2} T_{i+1}^{n+1} = \\frac{r}{2} T_{i-1}^n + (1-r) T_i^n + \\frac{r}{2} T_{i+1}^n\n$$\nThis equation holds for all interior spatial nodes, $i=1, 2, \\dots, N$. This forms a system of $N$ linear equations for the $N$ unknown temperatures at the interior nodes, $\\mathbf{T}^{n+1} = [T_1^{n+1}, T_2^{n+1}, \\dots, T_N^{n+1}]^T$. The system can be written in matrix form as $A \\mathbf{T}^{n+1} = \\mathbf{d}^n$, where $A$ is a tridiagonal matrix defined by the coefficients on the left-hand side. The matrix $A$ has entries:\n$$\nA_{i,i} = 1+r, \\quad A_{i, i-1} = -\\frac{r}{2}, \\quad A_{i, i+1} = -\\frac{r}{2}\n$$\nThe right-hand side vector $\\mathbf{d}^n$ depends on the solution at the previous time step, $\\mathbf{T}^n$, and the boundary conditions. The boundary temperatures $T_0$ (at $x=0$) and $T_{N+1}$ (at $x=1$) are given by the exact solution at each time step. For the first equation ($i=1$) and the last equation ($i=N$), the known boundary values are moved to the right-hand side. The components of the vector $\\mathbf{d}^n$ are:\n$$\nd_1^n = \\frac{r}{2} (T_0^n + T_0^{n+1}) + (1-r)T_1^n + \\frac{r}{2}T_2^n\n$$\n$$\nd_i^n = \\frac{r}{2} T_{i-1}^n + (1-r)T_i^n + \\frac{r}{2}T_{i+1}^n \\quad \\text{for } 1 < i < N\n$$\n$$\nd_N^n = \\frac{r}{2} T_{N-1}^n + (1-r)T_N^n + \\frac{r}{2} (T_{N+1}^n + T_{N+1}^{n+1})\n$$\nThe procedure for the verification study is as follows. For each test case, we perform simulations on a sequence of three grids with $N_0$, $2N_0$, and $4N_0$ interior points. For each grid:\n1.  Calculate grid spacing $\\Delta x = 1/(N+1)$.\n2.  Determine the number of time steps $N_t$ such that the final time $t_{\\text{end}}$ is met exactly, while keeping the diffusion number $r$ close to the target value. The time step is $\\Delta t = t_{\\text{end}}/N_t$, where $N_t = \\lceil t_{\\text{end}} / (r_{\\text{target}} \\Delta x^2/\\alpha) \\rceil$.\n3.  Initialize the temperature field at $t=0$ using $T_i^0 = \\cos(\\pi x_i)$.\n4.  Iteratively solve the tridiagonal system $A \\mathbf{T}^{n+1} = \\mathbf{d}^n$ for $n = 0, \\dots, N_t-1$ to obtain the final numerical solution at $t_{\\text{end}}$. A specialized algorithm for tridiagonal systems, such as the Thomas algorithm, or a banded matrix solver is used for efficiency.\n5.  Compute the discrete $L^2$ error $E_N$ by comparing the numerical solution with the exact solution at $t_{\\text{end}}$.\nAfter computing the errors $E_{N_0}$, $E_{2N_0}$, and $E_{4N_0}$, the observed orders of convergence $p_1$ and $p_2$ are calculated. A result of $p \\approx 2$ would verify that the implementation is indeed second-order accurate. The minimum of these two values, $p_{\\min}$, is reported. This entire procedure is then repeated for all specified test cases.```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import solve_banded\n\ndef T_exact(x, t, alpha):\n    \"\"\"\n    Calculates the exact manufactured solution for the heat equation.\n\n    Args:\n        x (np.ndarray or float): Spatial coordinate(s).\n        t (float): Time.\n        alpha (float): Thermal diffusivity.\n\n    Returns:\n        np.ndarray or float: The exact temperature(s).\n    \"\"\"\n    return np.cos(np.pi * x) * np.exp(-alpha * (np.pi**2) * t)\n\ndef run_simulation_and_get_error(N, alpha, t_end, r_target):\n    \"\"\"\n    Runs a single simulation on a grid with N points and computes the L2 error.\n\n    Args:\n        N (int): Number of interior grid points.\n        alpha (float): Thermal diffusivity.\n        t_end (float): Final simulation time.\n        r_target (float): Target diffusion number.\n\n    Returns:\n        float: The discrete L2 norm of the error at t_end.\n    \"\"\"\n    # 1. Spatial grid setup\n    dx = 1.0 / (N + 1)\n    # Interior nodes\n    x = np.linspace(dx, 1.0 - dx, N)\n\n    # 2. Temporal grid setup\n    # Provisional dt to estimate Nt, based on the target r\n    dt_provisional = r_target * dx**2 / alpha\n    # Number of time steps must be an integer to reach t_end exactly\n    Nt = int(np.ceil(t_end / dt_provisional))\n    # Final, adjusted dt and r\n    dt = t_end / Nt\n    r = alpha * dt / dx**2\n\n    # 3. Initial condition\n    T_num = T_exact(x, 0.0, alpha)\n\n    # 4. Setup Crank-Nicolson linear system\n    # The LHS matrix A is constant. We represent it in banded form for solve_banded.\n    # The shape is (3, N) for a tridiagonal matrix of size N x N.\n    # (1, 1) means 1 lower diagonal and 1 upper diagonal.\n    # Row 0: super-diagonal (u), Row 1: main diagonal, Row 2: sub-diagonal (l)\n    A_banded = np.zeros((3, N))\n    A_banded[0, 1:] = -r / 2.0\n    A_banded[1, :] = 1.0 + r\n    A_banded[2, :-1] = -r / 2.0\n\n    # 5. Time-stepping loop\n    for n in range(Nt):\n        t_n = n * dt\n        t_n1 = (n + 1) * dt\n\n        # Boundary conditions from exact solution\n        T0_n = T_exact(0.0, t_n, alpha)\n        T_L_n = T_exact(1.0, t_n, alpha)\n        T0_n1 = T_exact(0.0, t_n1, alpha)\n        T_L_n1 = T_exact(1.0, t_n1, alpha)\n\n        # Construct the RHS vector `d`\n        d = np.zeros(N)\n        \n        # Vectorized calculation for interior points (i=2 to N-1)\n        if N > 2:\n            d[1:-1] = (r / 2.0) * T_num[:-2] + (1.0 - r) * T_num[1:-1] + (r / 2.0) * T_num[2:]\n        \n        # First point (i=1) includes boundary term from T0\n        # Check for N=1 case which has no T_num[1]\n        if N == 1:\n            d[0] = (1.0 - r) * T_num[0] + (r / 2.0) * (T0_n + T0_n1 + T_L_n + T_L_n1)\n        else:\n            d[0] = (1.0 - r) * T_num[0] + (r / 2.0) * T_num[1] + (r / 2.0) * (T0_n + T0_n1)\n            # Last point (i=N) includes boundary term from T_L\n            d[-1] = (r / 2.0) * T_num[-2] + (1.0 - r) * T_num[-1] + (r / 2.0) * (T_L_n + T_L_n1)\n        \n        # Solve the tridiagonal system A*T_num_new = d\n        T_num = solve_banded((1, 1), A_banded, d)\n\n    # 6. Compute L2 error at the end\n    T_e = T_exact(x, t_end, alpha)\n    error = np.sqrt(dx * np.sum((T_num - T_e)**2))\n    return error\n\ndef compute_p_min(alpha, t_end, r_target, N0):\n    \"\"\"\n    Performs grid refinement study and computes the minimum order of convergence.\n\n    Args:\n        alpha (float): Thermal diffusivity.\n        t_end (float): Final simulation time.\n        r_target (float): Target diffusion number.\n        N0 (int): Base number of grid points.\n\n    Returns:\n        float: The minimum observed order of convergence, p_min.\n    \"\"\"\n    grid_sizes = [N0, 2 * N0, 4 * N0]\n    errors = []\n    \n    for N in grid_sizes:\n        error = run_simulation_and_get_error(N, alpha, t_end, r_target)\n        errors.append(error)\n        \n    E_N0, E_2N0, E_4N0 = errors\n    \n    # Calculate observed orders of convergence\n    p1 = np.log(E_N0 / E_2N0) / np.log(2)\n    p2 = np.log(E_2N0 / E_4N0) / np.log(2)\n    \n    return min(p1, p2)\n\ndef solve():\n    \"\"\"\n    Main function to run the specified test cases and print the results.\n    \"\"\"\n    test_cases = [\n        # (alpha, t_end, r_target, N0)\n        (1.0, 0.1, 0.5, 32),    # Case A\n        (1.0, 0.001, 0.5, 32),  # Case B\n        (0.05, 0.1, 0.5, 32),   # Case C\n    ]\n\n    results = []\n    for case in test_cases:\n        alpha, t_end, r_target, N0 = case\n        p_min = compute_p_min(alpha, t_end, r_target, N0)\n        results.append(f\"{p_min:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "answer": "$$\\boxed{[2.000109,2.000115,2.000109]}$$", "id": "2525432"}]}