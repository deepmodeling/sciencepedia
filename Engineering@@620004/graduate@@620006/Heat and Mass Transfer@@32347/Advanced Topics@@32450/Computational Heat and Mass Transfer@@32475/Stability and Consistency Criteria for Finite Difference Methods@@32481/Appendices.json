{"hands_on_practices": [{"introduction": "Understanding numerical stability is paramount to developing reliable simulations. We begin our hands-on practice with a foundational exercise: analyzing the stability of the Forward-Time Central-Space (FTCS) scheme for the one-dimensional heat equation. This problem will guide you through a first-principles derivation using the indispensable von Neumann stability analysis, allowing you to determine the maximum permissible time step for a stable simulation based on the physical and numerical parameters [@problem_id:2524603]. Mastering this technique is the first step toward diagnosing and preventing the catastrophic failures associated with numerical instability.", "problem": "A one-dimensional, homogeneous solid with constant thermal diffusivity $\\alpha$ undergoes transient heat conduction. By conservation of energy and Fourier’s law of heat conduction, the temperature field $T(x,t)$ satisfies the diffusion equation $\\frac{\\partial T}{\\partial t}=\\alpha \\frac{\\partial^2 T}{\\partial x^2}$. Consider a uniform spatial grid with spacing $\\Delta x$ and approximate the equation using the Forward-Time Central-Space (FTCS) finite difference scheme. Using a linear Fourier (von Neumann) stability analysis applied to the fully discrete update, derive from first principles the stability requirement that must hold between $\\Delta t$, $\\Delta x$, and $\\alpha$ for all spatial Fourier modes to be non-amplifying. Then, for $\\alpha=1.4\\times 10^{-7}\\,\\text{m}^2/\\text{s}$ and $\\Delta x=0.5\\,\\text{mm}$, compute the maximum stable time step. Express your final numerical answer in seconds and round to three significant figures.", "solution": "The problem is valid. It is a standard, well-posed problem in numerical analysis for partial differential equations, specifically in the context of heat transfer. All necessary information is provided, and the problem is scientifically sound.\n\nThe governing partial differential equation for one-dimensional transient heat conduction is the diffusion equation:\n$$\n\\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2}\n$$\nwhere $T(x,t)$ is the temperature, $t$ is time, $x$ is the spatial coordinate, and $\\alpha$ is the constant thermal diffusivity.\n\nWe are asked to analyze the Forward-Time Central-Space (FTCS) finite difference scheme. We discretize the continuous domain into a grid with spatial step size $\\Delta x$ and time step size $\\Delta t$. Let $T_j^n$ denote the numerical approximation of the temperature at spatial node $j$ and time level $n$, i.e., $T_j^n \\approx T(j\\Delta x, n\\Delta t)$.\n\nThe time derivative $\\frac{\\partial T}{\\partial t}$ is approximated using a first-order forward difference:\n$$\n\\frac{\\partial T}{\\partial t} \\bigg|_{j,n} \\approx \\frac{T_j^{n+1} - T_j^n}{\\Delta t}\n$$\nThe spatial second derivative $\\frac{\\partial^2 T}{\\partial x^2}$ is approximated using a second-order central difference:\n$$\n\\frac{\\partial^2 T}{\\partial x^2} \\bigg|_{j,n} \\approx \\frac{T_{j+1}^n - 2T_j^n + T_{j-1}^n}{(\\Delta x)^2}\n$$\nSubstituting these approximations into the governing equation yields the FTCS scheme:\n$$\n\\frac{T_j^{n+1} - T_j^n}{\\Delta t} = \\alpha \\frac{T_{j+1}^n - 2T_j^n + T_{j-1}^n}{(\\Delta x)^2}\n$$\nRearranging to solve for the temperature at the next time step, $T_j^{n+1}$, we obtain the explicit update rule:\n$$\nT_j^{n+1} = T_j^n + \\frac{\\alpha \\Delta t}{(\\Delta x)^2} (T_{j+1}^n - 2T_j^n + T_{j-1}^n)\n$$\nLet us define the non-dimensional mesh Fourier number, $r$, as:\n$$\nr = \\frac{\\alpha \\Delta t}{(\\Delta x)^2}\n$$\nThe update equation simplifies to:\n$$\nT_j^{n+1} = T_j^n + r(T_{j+1}^n - 2T_j^n + T_{j-1}^n)\n$$\n\nTo analyze the stability of this linear scheme, we use the von Neumann (or Fourier) stability analysis. We consider the evolution of a single Fourier mode of the numerical solution. The solution at any time level $n$ is represented as a Fourier series. We examine a generic term of this series at a spatial node $j$:\n$$\nT_j^n = A^{(n)}(k) e^{i k x_j} = A^{(n)}(k) e^{i k j \\Delta x}\n$$\nwhere $i = \\sqrt{-1}$, $k$ is the wavenumber of the Fourier mode, and $A^{(n)}(k)$ is the amplitude of that mode at time level $n$. For the scheme to be stable, the amplitude of any Fourier mode must not grow in time. This means the amplification factor, $G(k) = \\frac{A^{(n+1)}(k)}{A^{(n)}(k)}$, must satisfy the condition $|G(k)| \\le 1$ for all possible wavenumbers $k$.\n\nSubstituting the Fourier mode expression into the FTCS update equation:\n$$\nA^{(n+1)} e^{i k j \\Delta x} = A^{(n)} e^{i k j \\Delta x} + r \\left( A^{(n)} e^{i k (j+1) \\Delta x} - 2A^{(n)} e^{i k j \\Delta x} + A^{(n)} e^{i k (j-1) \\Delta x} \\right)\n$$\nDividing the entire equation by $A^{(n)} e^{i k j \\Delta x}$ (which is non-zero) gives the expression for the amplification factor $G = \\frac{A^{(n+1)}}{A^{(n)}}$:\n$$\nG = 1 + r \\left( e^{i k \\Delta x} - 2 + e^{-i k \\Delta x} \\right)\n$$\nUsing Euler's identity, $e^{i\\theta} + e^{-i\\theta} = 2\\cos(\\theta)$, we can simplify the expression in the parenthesis:\n$$\ne^{i k \\Delta x} + e^{-i k \\Delta x} - 2 = 2\\cos(k \\Delta x) - 2\n$$\nSo, the amplification factor becomes:\n$$\nG = 1 + 2r(\\cos(k \\Delta x) - 1)\n$$\nWe can use the half-angle trigonometric identity $1 - \\cos(\\theta) = 2\\sin^2(\\frac{\\theta}{2})$:\n$$\nG = 1 - 4r\\sin^2\\left(\\frac{k \\Delta x}{2}\\right)\n$$\nThe von Neumann stability criterion is $|G| \\leq 1$, which is equivalent to $-1 \\leq G \\leq 1$.\n\nSince $r = \\frac{\\alpha \\Delta t}{(\\Delta x)^2}$ is positive and $\\sin^2(\\frac{k \\Delta x}{2})$ is always non-negative, the term $4r\\sin^2(\\frac{k \\Delta x}{2})$ is always non-negative. Therefore, $G = 1 - (\\text{a non-negative quantity})$, which implies $G \\le 1$. This part of the condition is always satisfied.\n\nThe crucial part of the stability condition is $G \\ge -1$:\n$$\n1 - 4r\\sin^2\\left(\\frac{k \\Delta x}{2}\\right) \\ge -1\n$$\n$$\n2 \\ge 4r\\sin^2\\left(\\frac{k \\Delta x}{2}\\right)\n$$\n$$\n\\frac{1}{2} \\ge r\\sin^2\\left(\\frac{k \\Delta x}{2}\\right)\n$$\nThis inequality must hold for all possible wavenumbers $k$. The most restrictive condition (the \"worst case\") occurs when $\\sin^2(\\frac{k \\Delta x}{2})$ reaches its maximum value. The maximum value of the sine squared function is $1$. This occurs for the highest frequency modes the grid can resolve, where $k \\Delta x = \\pi$.\nThus, the stability criterion simplifies to:\n$$\nr \\le \\frac{1}{2}\n$$\nSubstituting back the definition of $r$:\n$$\n\\frac{\\alpha \\Delta t}{(\\Delta x)^2} \\le \\frac{1}{2}\n$$\nThis is the stability requirement for the FTCS scheme applied to the one-dimensional heat equation.\n\nNow, we compute the maximum stable time step, $\\Delta t_{max}$. From the derived criterion, we have:\n$$\n\\Delta t \\le \\frac{(\\Delta x)^2}{2\\alpha}\n$$\nThe maximum stable time step is the equality limit:\n$$\n\\Delta t_{max} = \\frac{(\\Delta x)^2}{2\\alpha}\n$$\nThe problem provides the following values:\n$\\alpha = 1.4 \\times 10^{-7}\\,\\text{m}^2/\\text{s}$\n$\\Delta x = 0.5\\,\\text{mm}$\n\nFirst, we must ensure consistent units. We convert $\\Delta x$ from millimeters to meters:\n$\\Delta x = 0.5\\,\\text{mm} = 0.5 \\times 10^{-3}\\,\\text{m} = 5 \\times 10^{-4}\\,\\text{m}$.\n\nNow, we substitute the numerical values into the expression for $\\Delta t_{max}$:\n$$\n\\Delta t_{max} = \\frac{(5 \\times 10^{-4}\\,\\text{m})^2}{2 \\times (1.4 \\times 10^{-7}\\,\\text{m}^2/\\text{s})} = \\frac{25 \\times 10^{-8}\\,\\text{m}^2}{2.8 \\times 10^{-7}\\,\\text{m}^2/\\text{s}}\n$$\n$$\n\\Delta t_{max} = \\frac{25}{2.8} \\times 10^{-1}\\,\\text{s} = \\frac{2.5}{2.8}\\,\\text{s} \\approx 0.892857... \\,\\text{s}\n$$\nThe problem requires the answer to be rounded to three significant figures.\n$$\n\\Delta t_{max} \\approx 0.893\\,\\text{s}\n$$\nThis is the maximum time step for which the FTCS scheme is numerically stable for the given parameters.", "answer": "$$\\boxed{0.893}$$", "id": "2524603"}, {"introduction": "While Fourier analysis is a powerful tool, stability can also be understood from a more physical perspective. This exercise challenges you to derive the stability condition for an explicit scheme in multiple dimensions by enforcing a discrete maximum principle—ensuring that the temperature at a future time step is a non-negative weighting of current temperatures. This physically intuitive \"positivity-preserving\" approach not only guarantees stability but also prevents the creation of non-physical oscillations, a property known as monotonicity [@problem_id:2524677]. This practice will broaden your understanding of stability beyond modal analysis and demonstrate its connection to fundamental physical constraints.", "problem": "Consider transient heat diffusion in a homogeneous medium governed by the heat equation\n$$\n\\frac{\\partial u}{\\partial t}=\\alpha \\nabla^{2} u,\n$$\nwhere $u=u(\\mathbf{x},t)$ is temperature and $\\alpha>0$ is the thermal diffusivity. Let the spatial domain be discretized on an orthogonal Cartesian grid in $d$ spatial dimensions with uniform spacings $\\Delta x_{1},\\dots,\\Delta x_{d}$ along the coordinate directions. Consider the explicit forward Euler time discretization with time step $\\Delta t>0$ and the standard second-order central difference approximation for the Laplacian in each coordinate direction at interior nodes. Assume no internal sources and that boundary data are nonnegative in time, and that the initial data are nonnegative at all grid points.\n\nStarting from the governing equation and the stated discrete choices, write the fully discrete update at an interior node in a form that isolates the weights multiplying the current-node value and its nearest neighbors. Impose the requirements that (i) these weights are all nonnegative and (ii) they sum to $1$, so that the update is a convex combination of the current and neighbor values. Derive the corresponding sharp upper bound on $\\Delta t$ that guarantees these two properties hold at every interior node, expressed as a single closed-form analytic expression for the maximum admissible time step $\\Delta t_{\\max}$ in terms of $\\alpha$ and the spacings $\\Delta x_{1},\\dots,\\Delta x_{d}$.\n\nReport your answer as the function $\\Delta t_{\\max}=\\,$(expression). Do not include units in your final expression.", "solution": "The problem as stated is scientifically grounded, well-posed, objective, and self-contained. It presents a standard, fundamental task in the numerical analysis of partial differential equations. The premises are factually correct, the terminology is precise, and the objective is clear. The problem is valid. We will now proceed with its solution.\n\nThe governing equation is the transient heat diffusion equation in $d$ spatial dimensions, given by\n$$\n\\frac{\\partial u}{\\partial t} = \\alpha \\nabla^2 u\n$$\nwhere $u(\\mathbf{x}, t)$ is the temperature, $\\mathbf{x} \\in \\mathbb{R}^d$, $t \\ge 0$, and $\\alpha > 0$ is the constant thermal diffusivity. The Laplacian operator in Cartesian coordinates is $\\nabla^2 = \\sum_{k=1}^d \\frac{\\partial^2}{\\partial x_k^2}$.\n\nWe discretize this equation on an orthogonal Cartesian grid. Let $\\Delta t > 0$ be the uniform time step, and let $\\Delta x_k$ be the uniform grid spacing in the $k$-th coordinate direction, for $k=1, \\dots, d$. Let $u_{\\mathbf{i}}^n$ denote the numerical approximation of the temperature $u(\\mathbf{x}_{\\mathbf{i}}, t_n)$, where $\\mathbf{i} = (i_1, \\dots, i_d)$ is the multi-index of a grid node and $t_n = n \\Delta t$.\n\nThe time derivative $\\frac{\\partial u}{\\partial t}$ is approximated at $(\\mathbf{x}_{\\mathbf{i}}, t_n)$ using the explicit forward Euler scheme:\n$$\n\\left. \\frac{\\partial u}{\\partial t} \\right|_{\\mathbf{x}_{\\mathbf{i}}, t_n} \\approx \\frac{u_{\\mathbf{i}}^{n+1} - u_{\\mathbf{i}}^n}{\\Delta t}\n$$\nThe Laplacian $\\nabla^2 u$ is approximated using the standard second-order central difference scheme. The second partial derivative with respect to $x_k$ is approximated as:\n$$\n\\left. \\frac{\\partial^2 u}{\\partial x_k^2} \\right|_{\\mathbf{x}_{\\mathbf{i}}, t_n} \\approx \\frac{u_{\\mathbf{i}+\\mathbf{e}_k}^n - 2u_{\\mathbf{i}}^n + u_{\\mathbf{i}-\\mathbf{e}_k}^n}{(\\Delta x_k)^2}\n$$\nwhere $\\mathbf{e}_k$ is the unit vector in index space corresponding to the $k$-th direction. Thus, the full Laplacian is approximated as:\n$$\n\\left. \\nabla^2 u \\right|_{\\mathbf{x}_{\\mathbf{i}}, t_n} \\approx \\sum_{k=1}^d \\frac{u_{\\mathbf{i}+\\mathbf{e}_k}^n - 2u_{\\mathbf{i}}^n + u_{\\mathbf{i}-\\mathbf{e}_k}^n}{(\\Delta x_k)^2}\n$$\nSubstituting these discrete approximations into the governing equation yields the fully discrete scheme:\n$$\n\\frac{u_{\\mathbf{i}}^{n+1} - u_{\\mathbf{i}}^n}{\\Delta t} = \\alpha \\sum_{k=1}^d \\frac{u_{\\mathbf{i}+\\mathbf{e}_k}^n - 2u_{\\mathbf{i}}^n + u_{\\mathbf{i}-\\mathbf{e}_k}^n}{(\\Delta x_k)^2}\n$$\nTo find the update rule for $u_{\\mathbf{i}}^{n+1}$, we solve for this term:\n$$\nu_{\\mathbf{i}}^{n+1} = u_{\\mathbf{i}}^n + \\alpha \\Delta t \\sum_{k=1}^d \\frac{u_{\\mathbf{i}+\\mathbf{e}_k}^n - 2u_{\\mathbf{i}}^n + u_{\\mathbf{i}-\\mathbf{e}_k}^n}{(\\Delta x_k)^2}\n$$\nThe problem requires this expression to be written in a form that isolates the weights of the current-node value $u_{\\mathbf{i}}^n$ and its nearest neighbors. We achieve this by rearranging the terms:\n$$\nu_{\\mathbf{i}}^{n+1} = u_{\\mathbf{i}}^n - \\left( 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2} \\right) u_{\\mathbf{i}}^n + \\sum_{k=1}^d \\left( \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2} u_{\\mathbf{i}+\\mathbf{e}_k}^n + \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2} u_{\\mathbf{i}-\\mathbf{e}_k}^n \\right)\n$$\nCombining the terms multiplying $u_{\\mathbf{i}}^n$ gives the desired form:\n$$\nu_{\\mathbf{i}}^{n+1} = \\left( 1 - 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2} \\right) u_{\\mathbf{i}}^n + \\sum_{k=1}^d \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2} \\left( u_{\\mathbf{i}+\\mathbf{e}_k}^n + u_{\\mathbf{i}-\\mathbf{e}_k}^n \\right)\n$$\nThis update is a linear combination of the value at node $\\mathbf{i}$ and its $2d$ nearest neighbors at the current time step $n$. The weights are:\n-   Weight of the central node $u_{\\mathbf{i}}^n$: $C_0 = 1 - 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2}$\n-   Weight of each neighbor $u_{\\mathbf{i}\\pm\\mathbf{e}_k}^n$: $C_k = \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2}$ for $k=1, \\dots, d$.\n\nThe problem imposes that this update must be a convex combination. This requires two conditions:\n(i) All weights must be non-negative.\n(ii) The sum of all weights must equal $1$.\n\nLet us first verify condition (ii). The sum of all weights is:\n$$\n\\sum (\\text{weights}) = C_0 + \\sum_{k=1}^d (\\text{weight of } u_{\\mathbf{i}+\\mathbf{e}_k}^n + \\text{weight of } u_{\\mathbf{i}-\\mathbf{e}_k}^n)\n$$\n$$\n\\sum (\\text{weights}) = \\left( 1 - 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2} \\right) + \\sum_{k=1}^d \\left( \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2} + \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2} \\right)\n$$\n$$\n\\sum (\\text{weights}) = 1 - 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2} + 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2} = 1\n$$\nCondition (ii) is therefore inherent to the discrete formulation and is always satisfied regardless of the choice of parameters.\n\nNow we must enforce condition (i), non-negativity of weights.\nThe neighbor weights $C_k = \\frac{\\alpha \\Delta t}{(\\Delta x_k)^2}$ are always non-negative, since $\\alpha > 0$, $\\Delta t > 0$, and $(\\Delta x_k)^2 > 0$.\nThe crucial constraint arises from the weight of the central node, $C_0$:\n$$\nC_0 = 1 - 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2} \\ge 0\n$$\nThis inequality must hold for the update to be a convex combination. We solve for $\\Delta t$:\n$$\n1 \\ge 2 \\alpha \\Delta t \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2}\n$$\nSince $\\alpha > 0$ and the sum is strictly positive, we can divide without changing the inequality direction:\n$$\n\\Delta t \\le \\frac{1}{2 \\alpha \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2}}\n$$\nThis inequality provides the upper bound on the time step $\\Delta t$. The maximum admissible time step, $\\Delta t_{\\max}$, is the value that makes this an equality. This is the sharpest possible bound under the given constraints.\n\nThus, the expression for the maximum admissible time step is:\n$$\n\\Delta t_{\\max} = \\frac{1}{2 \\alpha \\sum_{k=1}^d \\frac{1}{(\\Delta x_k)^2}}\n$$\nThis is the stability condition that guarantees the non-negativity of the coefficients, which in turn ensures that the numerical solution respects a discrete maximum principle, a sufficient condition for stability for this parabolic problem.", "answer": "$$\n\\boxed{\\frac{1}{2\\alpha \\sum_{k=1}^{d} \\frac{1}{(\\Delta x_k)^{2}}}}\n$$", "id": "2524677"}, {"introduction": "Explicit methods like FTCS suffer from restrictive time-step constraints, especially for problems with fine grids or high diffusion rates, a phenomenon known as stiffness. Implicit methods overcome this limitation, but not all are created equal. This practice compares two workhorse implicit schemes, Crank-Nicolson and Backward Euler, by applying them to a model equation representing a single mode of a stiff system [@problem_id:2524615]. You will discover that while both are unconditionally stable (A-stable), only Backward Euler is L-stable, meaning it effectively damps highly stiff (high-frequency) error components, while Crank-Nicolson can allow them to persist as undamped oscillations.", "problem": "In transient heat conduction or diffusion, spatial discretization of a linear diffusion operator with homogeneous boundary conditions leads to a decoupled set of modal Ordinary Differential Equations (ODEs) of the form $u_t=-k\\,u$ with $k\\ge 0$, where $k$ is a modal decay rate determined by the spatial eigenvalues. Consider advancing this ODE in time with either the Crank–Nicolson (CN) method or the Backward Euler (BE) method, using a uniform time step $\\Delta t$.\n\nStarting only from the definitions of the time-stepping schemes and the ODE $u_t=-k\\,u$, derive the one-step update in the form $u^{n+1}=G(\\theta)\\,u^n$ where $\\theta=k\\,\\Delta t$ is the dimensionless stiffness parameter, and identify how $G(\\theta)$ behaves as $\\theta$ increases. Use this analysis to reason about whether sign changes (oscillations) can occur and whether highly stiff components are damped. In your reasoning, interpret the magnitude and sign (or phase) of $G(\\theta)$ in relation to numerical damping and oscillations. Also recall the notion of Absolute stability (A-stability), and the property commonly termed L-stability which requires $|G(\\theta)|\\to 0$ as $\\theta\\to\\infty$ for real $\\theta>0$ corresponding to $u_t=-k\\,u$.\n\nWhich option below most accurately captures the outcome of this analysis?\n\nA. For Crank–Nicolson, the amplification factor $G_{\\mathrm{CN}}(\\theta)$ has $|G_{\\mathrm{CN}}(\\theta)|<1$ for all $\\theta>0$ but satisfies $G_{\\mathrm{CN}}(\\theta)\\to -1$ as $\\theta\\to\\infty$, implying step-to-step sign alternation with essentially no damping in the stiff limit (nearly undamped oscillations when $\\theta$ is large). For Backward Euler, $G_{\\mathrm{BE}}(\\theta)=\\dfrac{1}{1+\\theta}$ so $G_{\\mathrm{BE}}(\\theta)\\to 0$ as $\\theta\\to\\infty$, providing strong damping of stiff components; thus Backward Euler is L-stable and avoids these oscillations.\n\nB. Crank–Nicolson is L-stable, so for large $\\theta$ it produces monotone decay without oscillations, whereas Backward Euler is only conditionally stable and may blow up unless $\\theta$ is sufficiently small.\n\nC. Crank–Nicolson produces sign-oscillations only when $\\theta<2$, while for $\\theta>2$ it is monotone and overdamped; thus large $\\theta$ removes oscillations.\n\nD. Both Crank–Nicolson and Backward Euler have $|G(\\theta)|<1$ and $G(\\theta)\\in\\mathbb{R}$ for all $\\theta>0$, but Crank–Nicolson’s $G(\\theta)$ becomes complex for large $\\theta$ which causes oscillations, while Backward Euler’s $G(\\theta)$ remains real and positive; therefore only Crank–Nicolson oscillates because its amplification factor becomes complex at large $\\theta$.", "solution": "The problem statement is to be validated before any solution is attempted.\n\n### Step 1: Extract Givens\n- The governing Ordinary Differential Equation (ODE) is $u_t = -k u$, where $k \\ge 0$.\n- $k$ is a modal decay rate from spatial discretization of a linear diffusion operator.\n- The time-stepping schemes to be analyzed are the Crank–Nicolson (CN) and Backward Euler (BE) methods.\n- The time step is uniform, denoted by $\\Delta t$.\n- The required form for the one-step update is $u^{n+1} = G(\\theta) u^n$, where $\\theta = k \\Delta t$.\n- The task requires analysis of $G(\\theta)$ as $\\theta$ increases, focusing on sign changes (oscillations) and damping of stiff components (large $\\theta$).\n- The magnitude and sign of $G(\\theta)$ must be interpreted in relation to numerical damping and oscillations.\n- The concepts of Absolute stability (A-stability) and L-stability are to be recalled, with L-stability defined for this context by the property $|G(\\theta)| \\to 0$ as $\\theta \\to \\infty$ for real $\\theta > 0$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem statement is scientifically grounded, well-posed, and objective.\n1.  **Scientific Soundness**: The problem utilizes the standard Dahlquist test equation, $u_t = \\lambda u$, with $\\lambda = -k$ where $k \\ge 0$. This is the fundamental model for analyzing the stability of numerical time-integration schemes for parabolic partial differential equations like the heat equation. The Crank–Nicolson and Backward Euler methods are standard, well-defined numerical schemes. The concepts of A-stability and L-stability are cornerstone principles in the analysis of stiff ODEs.\n2.  **Well-Posedness**: The problem asks for a derivation and analysis based on provided definitions. This is a standard analytical exercise in numerical analysis with a unique, verifiable outcome.\n3.  **Completeness**: All necessary information is provided. The definitions of the schemes are standard, and the problem explicitly states to start from these definitions. The parameters $k$, $\\Delta t$, and $\\theta$ are clearly defined.\n4.  **No other flaws detected**: The problem is not unrealistic, ill-posed, trivial, or unverifiable. It is a classic and fundamentally important problem in computational science.\n\n### Step 3: Verdict and Action\nThe problem statement is **valid**. A solution will be derived.\n\n### Derivation and Analysis\n\nThe model ODE is given by:\n$$\n\\frac{du}{dt} = -k u\n$$\nLet $u^n$ denote the numerical approximation of $u(t_n)$ where $t_n = n \\Delta t$. The numerical schemes approximate the derivative over the interval $[t_n, t_{n+1}]$. The one-step update is of the form $u^{n+1} = G(\\theta) u^n$, where $G(\\theta)$ is the amplification factor and $\\theta = k \\Delta t$.\n\n**1. Crank–Nicolson (CN) Method**\n\nThe CN method is a second-order implicit method that discretizes the ODE by averaging the right-hand side at time levels $n$ and $n+1$:\n$$\n\\frac{u^{n+1} - u^n}{\\Delta t} = \\frac{1}{2} (-k u^n - k u^{n+1})\n$$\nWe rearrange this equation to solve for $u^{n+1}$ in terms of $u^n$:\n$$\nu^{n+1} - u^n = -\\frac{k \\Delta t}{2} (u^n + u^{n+1})\n$$\n$$\nu^{n+1} + \\frac{k \\Delta t}{2} u^{n+1} = u^n - \\frac{k \\Delta t}{2} u^n\n$$\n$$\nu^{n+1} \\left(1 + \\frac{k \\Delta t}{2}\\right) = u^n \\left(1 - \\frac{k \\Delta t}{2}\\right)\n$$\nSubstituting $\\theta = k \\Delta t$, we find the update rule:\n$$\nu^{n+1} = \\frac{1 - \\theta/2}{1 + \\theta/2} u^n\n$$\nThus, the amplification factor for the Crank–Nicolson method is:\n$$\nG_{\\mathrm{CN}}(\\theta) = \\frac{1 - \\theta/2}{1 + \\theta/2}\n$$\n**Analysis of $G_{\\mathrm{CN}}(\\theta)$:**\n- **Magnitude (Stability):** For any $\\theta > 0$, the denominator is $1 + \\theta/2 > 1$. The magnitude of the numerator is $|1 - \\theta/2|$.\n  - If $0 \\le \\theta \\le 2$, $|1 - \\theta/2| = 1 - \\theta/2$.\n  - If $\\theta > 2$, $|1 - \\theta/2| = \\theta/2 - 1$.\n  In both cases, $|1 - \\theta/2| < 1 + \\theta/2$. Therefore, $|G_{\\mathrm{CN}}(\\theta)| < 1$ for all $\\theta > 0$. This implies the method is A-stable (unconditionally stable), as the magnitude of the amplification factor is always less than one for any positive decay rate $k$ and time step $\\Delta t$.\n- **Sign (Oscillations):** The sign of $G_{\\mathrm{CN}}(\\theta)$ determines whether the solution decays monotonically or with oscillations.\n  - If $0 < \\theta < 2$, $G_{\\mathrm{CN}}(\\theta)$ is positive, so $u^{n+1}$ has the same sign as $u^n$. The decay is monotonic.\n  - If $\\theta > 2$, the numerator $1 - \\theta/2$ is negative, so $G_{\\mathrm{CN}}(\\theta)$ is negative. This means $u^{n+1}$ has the opposite sign of $u^n$, leading to step-to-step sign oscillations.\n- **Stiff Limit (L-stability):** We examine the behavior as $\\theta \\to \\infty$, which corresponds to highly stiff components (large $k$).\n  $$\n  \\lim_{\\theta \\to \\infty} G_{\\mathrm{CN}}(\\theta) = \\lim_{\\theta \\to \\infty} \\frac{1 - \\theta/2}{1 + \\theta/2} = \\lim_{\\theta \\to \\infty} \\frac{1/\\theta - 1/2}{1/\\theta + 1/2} = \\frac{-1/2}{1/2} = -1\n  $$\n  Since $\\lim_{\\theta \\to \\infty} |G_{\\mathrm{CN}}(\\theta)| = |-1| = 1 \\ne 0$, the Crank–Nicolson method is **not** L-stable. In the stiff limit, components are not damped ($|G| \\to 1$) and oscillate with maximum frequency ($G \\to -1$). This is a significant deficiency when solving stiff problems.\n\n**2. Backward Euler (BE) Method**\n\nThe BE method is a first-order fully implicit method that discretizes the ODE using the value at the new time level $n+1$:\n$$\n\\frac{u^{n+1} - u^n}{\\Delta t} = -k u^{n+1}\n$$\nRearranging to solve for $u^{n+1}$:\n$$\nu^{n+1} + k \\Delta t u^{n+1} = u^n\n$$\n$$\nu^{n+1} (1 + k \\Delta t) = u^n\n$$\nUsing $\\theta = k \\Delta t$, the update rule becomes:\n$$\nu^{n+1} = \\frac{1}{1 + \\theta} u^n\n$$\nThe amplification factor for the Backward Euler method is:\n$$\nG_{\\mathrm{BE}}(\\theta) = \\frac{1}{1 + \\theta}\n$$\n**Analysis of $G_{\\mathrm{BE}}(\\theta)$:**\n- **Magnitude (Stability):** Since $k \\ge 0$ and $\\Delta t > 0$, we have $\\theta \\ge 0$. For all $\\theta > 0$, the denominator $1 + \\theta > 1$, which implies $0 < G_{\\mathrm{BE}}(\\theta) < 1$. Therefore, $|G_{\\mathrm{BE}}(\\theta)| < 1$ for all $\\theta > 0$. The method is A-stable.\n- **Sign (Oscillations):** For all $\\theta \\ge 0$, $G_{\\mathrm{BE}}(\\theta)$ is positive. Thus, $u^{n+1}$ always has the same sign as $u^n$. The decay is always monotonic, and there are never numerical oscillations.\n- **Stiff Limit (L-stability):** We examine the behavior as $\\theta \\to \\infty$:\n  $$\n  \\lim_{\\theta \\to \\infty} G_{\\mathrm{BE}}(\\theta) = \\lim_{\\theta \\to \\infty} \\frac{1}{1 + \\theta} = 0\n  $$\n  Since $\\lim_{\\theta \\to \\infty} |G_{\\mathrm{BE}}(\\theta)| = 0$, the Backward Euler method **is** L-stable. Stiff components are strongly damped, which is highly desirable.\n\n### Evaluation of Options\n\n**A. For Crank–Nicolson, the amplification factor $G_{\\mathrm{CN}}(\\theta)$ has $|G_{\\mathrm{CN}}(\\theta)|<1$ for all $\\theta>0$ but satisfies $G_{\\mathrm{CN}}(\\theta)\\to -1$ as $\\theta\\to\\infty$, implying step-to-step sign alternation with essentially no damping in the stiff limit (nearly undamped oscillations when $\\theta$ is large). For Backward Euler, $G_{\\mathrm{BE}}(\\theta)=\\dfrac{1}{1+\\theta}$ so $G_{\\mathrm{BE}}(\\theta)\\to 0$ as $\\theta\\to\\infty$, providing strong damping of stiff components; thus Backward Euler is L-stable and avoids these oscillations.**\n- This statement accurately summarizes the derived results. It correctly identifies that $|G_{\\mathrm{CN}}(\\theta)| < 1$ and $G_{\\mathrm{CN}}(\\theta) \\to -1$ as $\\theta \\to \\infty$, correctly interpreting this as undamped oscillations for stiff components. It correctly gives the formula for $G_{\\mathrm{BE}}(\\theta)$ and its limit as $\\theta \\to \\infty$, correctly identifying this as L-stability and strong damping without oscillations.\n- **Verdict: Correct.**\n\n**B. Crank–Nicolson is L-stable, so for large $\\theta$ it produces monotone decay without oscillations, whereas Backward Euler is only conditionally stable and may blow up unless $\\theta$ is sufficiently small.**\n- This statement is incorrect on multiple counts. Crank–Nicolson is not L-stable, as shown by $\\lim_{\\theta \\to \\infty} G_{\\mathrm{CN}}(\\theta) = -1$. It produces oscillations, not monotone decay, for large $\\theta$ (specifically $\\theta>2$). Backward Euler is not conditionally stable; it is A-stable and L-stable (unconditionally stable for this problem).\n- **Verdict: Incorrect.**\n\n**C. Crank–Nicolson produces sign-oscillations only when $\\theta<2$, while for $\\theta>2$ it is monotone and overdamped; thus large $\\theta$ removes oscillations.**\n- This statement reverses the condition for oscillations. My derivation shows that for $0 < \\theta < 2$, $G_{\\mathrm{CN}}(\\theta)$ is positive, leading to monotonic decay. For $\\theta > 2$, $G_{\\mathrm{CN}}(\\theta)$ is negative, causing oscillations.\n- **Verdict: Incorrect.**\n\n**D. Both Crank–Nicolson and Backward Euler have $|G(\\theta)|<1$ and $G(\\theta)\\in\\mathbb{R}$ for all $\\theta>0$, but Crank–Nicolson’s $G(\\theta)$ becomes complex for large $\\theta$ which causes oscillations, while Backward Euler’s $G(\\theta)$ remains real and positive; therefore only Crank–Nicolson oscillates because its amplification factor becomes complex at large $\\theta$.**\n- This statement contains a critical error. For the given problem where $k$ is real, both $G_{\\mathrm{CN}}(\\theta)$ and $G_{\\mathrm{BE}}(\\theta)$ are always real for any real $\\theta$. The oscillations in the Crank–Nicolson method are caused by $G_{\\mathrm{CN}}(\\theta)$ becoming *negative*, not by it becoming a non-real complex number. While a negative real number can be written in polar form as $re^{i\\pi}$, the claim that it \"becomes complex\" is imprecise and misleading in this context, as it implies it has a non-zero imaginary part, which is false.\n- **Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$", "id": "2524615"}]}