{"hands_on_practices": [{"introduction": "Understanding the structure of crystalline surfaces is the first step toward predicting their properties. This practice establishes the fundamental geometric relationship between a macroscopic parameter, the miscut angle $\\theta$, and a microscopic feature, the terrace width $L$ [@problem_id:2790786]. Mastering this simple model is essential for quantitatively describing vicinal surfaces, which are ubiquitous in both experimental studies and technological applications.", "problem": "A vicinal face-centered cubic surface with Miller indices $(111)$ is prepared by miscutting the crystal by a small angle $\\theta$ toward the in-plane crystallographic direction $[\\bar{1}10]$. The resulting surface consists of a periodic train of monoatomic steps separated by flat terraces of width $L$, with step edges straight and parallel to a direction perpendicular to $[\\bar{1}10]$. Assume that each step height equals the interplanar spacing between adjacent $(111)$ planes. For a face-centered cubic lattice with lattice constant $a$, the $(111)$ interplanar spacing is $d_{111}=a/\\sqrt{3}$.\n\nStarting from geometric first principles relating surface slope to the ratio of vertical rise to horizontal run across one step-and-terrace period, and using only the crystallographic spacing fact given above, derive a closed-form expression for the terrace width $L$ as a function of the miscut angle $\\theta$ and the lattice constant $a$.\n\nExpress your final answer as a single analytic expression for $L(\\theta,a)$ in terms of $a$ and $\\theta$. Take $\\theta$ in radians and $a$ in meters. Do not include units in your final expression.", "solution": "The user has provided a problem statement that requires validation before a solution is attempted.\n\n**Step 1: Extract Givens**\n- The crystal lattice is face-centered cubic (FCC) with lattice constant $a$.\n- The surface is a vicinal $(111)$ face.\n- The crystal is miscut by a small angle $\\theta$ toward the in-plane direction $[\\bar{1}10]$.\n- The surface consists of a periodic train of monoatomic steps and flat terraces of width $L$.\n- The step height is equal to the interplanar spacing of $(111)$ planes, $d_{111}$.\n- It is given that $d_{111} = a/\\sqrt{3}$.\n- The objective is to derive an expression for $L$ as a function of $\\theta$ and $a$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is subjected to a critical review for validity.\n\n- **Scientific Grounding:** The problem is based on the standard and well-established model of vicinal surfaces in crystallography and surface science. The concept of a miscut crystal forming a regular array of steps and terraces is fundamental to the field. The formula for the interplanar spacing $d_{111} = a/\\sqrt{3}$ for an FCC lattice is factually correct and derived from basic X-ray diffraction theory. All concepts are firmly grounded in solid-state physics.\n- **Well-Posedness:** The problem provides all necessary information to establish a geometric relationship between the macroscopic miscut angle $\\theta$ and the microscopic dimensions of the step-terrace structure (step height $h$ and terrace width $L$). The relationship is unique and leads to a single, stable solution for $L$.\n- **Objectivity:** The problem is stated in precise, objective language. All terms like 'face-centered cubic', 'Miller indices', 'interplanar spacing', 'lattice constant', and 'miscut angle' have unambiguous definitions in science.\n\n**Step 3: Verdict and Action**\nThe problem statement is scientifically sound, well-posed, and free of contradictions or ambiguities. It represents a a standard, fundamental exercise in surface crystallography. Therefore, the problem is deemed **valid**, and a solution will be provided.\n\nThe derivation proceeds from geometric first principles. A vicinal surface can be visualized in cross-section as a series of repeating right-angled triangles. The macroscopic slope of the surface is defined by the miscut angle $\\theta$. This angle relates the average 'rise' to the average 'run' of the surface topography.\n\nFor a single step-and-terrace unit, the 'rise' is the step height, which we denote by $h$. The 'run' is the width of the terrace, $L$. The relationship between the miscut angle $\\theta$, the step height $h$, and the terrace width $L$ is given by the definition of the tangent function:\n$$\n\\tan(\\theta) = \\frac{\\text{rise}}{\\text{run}} = \\frac{h}{L}\n$$\nThe problem states that the steps are monoatomic. For a $(111)$ surface, a monoatomic step height corresponds to the spacing between adjacent $(111)$ crystal planes. This interplanar spacing is given as $d_{111}$. Therefore, the step height $h$ is:\n$$\nh = d_{111}\n$$\nThe problem also provides the formula for this interplanar spacing in an FCC lattice with lattice constant $a$:\n$$\nd_{111} = \\frac{a}{\\sqrt{3}}\n$$\nBy combining these facts, we can set the step height $h$ to this value:\n$$\nh = \\frac{a}{\\sqrt{3}}\n$$\nNow, we substitute this expression for the step height $h$ into our trigonometric relation:\n$$\n\\tan(\\theta) = \\frac{h}{L} = \\frac{\\frac{a}{\\sqrt{3}}}{L}\n$$\nThe task is to solve for the terrace width $L$. We can rearrange this equation algebraically:\n$$\nL \\cdot \\tan(\\theta) = \\frac{a}{\\sqrt{3}}\n$$\nIsolating $L$ on one side of the equation yields the final expression for the terrace width as a function of the lattice constant $a$ and the miscut angle $\\theta$:\n$$\nL(\\theta, a) = \\frac{a}{\\sqrt{3} \\tan(\\theta)}\n$$\nThis is the required closed-form expression. The information regarding the miscut direction $[\\bar{1}10]$ confirms that the geometry is consistent with standard crystallographic conventions for FCC $(111)$ surfaces but is not required for the calculation itself, which depends only on the vertical step height and horizontal terrace width.", "answer": "$$\\boxed{\\frac{a}{\\sqrt{3} \\tan(\\theta)}}$$", "id": "2790786"}, {"introduction": "With the surface geometry defined, we can explore the kinetics of adatoms, which are the building blocks of crystal growth. This exercise uses a set of potential energy values, typical of those obtained from Density Functional Theory (DFT) calculations, to map out a diffusion pathway [@problem_id:2790766]. By analyzing these energies, you will determine the effective activation barrier for diffusion, gaining hands-on insight into how atomistic transition state theory is applied to real surface processes.", "problem": "A single adatom diffuses on a face-centered cubic (fcc) $(111)$ terrace between adjacent threefold hollow sites. Density Functional Theory (DFT) calculations provide the potential energies of the relevant local extrema on the potential energy surface as follows (referenced to the energy of the fcc hollow site minimum):\n- fcc hollow site minimum: $E_{\\mathrm{fcc}} = 0.000~\\mathrm{eV}$,\n- hexagonal close-packed (hcp) hollow site local minimum: $E_{\\mathrm{hcp}} = 0.032~\\mathrm{eV}$,\n- bridge site first-order saddle connecting fcc and hcp: $E_{\\mathrm{b}}^{\\ddagger} = 0.218~\\mathrm{eV}$.\n\nAssume harmonic Transition State Theory (TST), in which the elementary hop rate from a minimum at energy $E_{\\min}$ across a unique saddle at energy $E^{\\ddagger}$ is governed by an Arrhenius factor with activation energy $\\Delta E = E^{\\ddagger} - E_{\\min}$, and neglect vibrational free-energy differences between minima and saddles. The adatom can move between adjacent fcc hollow sites either by a direct single hop over the bridge saddle if such a saddle directly connects the two fcc minima, or by a two-step sequence $ \\mathrm{fcc} \\rightarrow \\mathrm{hcp} \\rightarrow \\mathrm{fcc}$ where each hop crosses a bridge saddle connecting the corresponding initial and final minima.\n\nStarting from these principles and the provided DFT energies, determine the minimum activation energy $E_{m}$ for net diffusion from an initial fcc hollow site to a neighboring fcc hollow site, optimizing over all sequences composed only of the given sites (fcc and hcp) and their connecting bridge saddles. In your reasoning, assess whether any multi-step pathway using the given intermediate hcp site can produce a lower effective activation barrier than the single-hop pathway.\n\nExpress your final answer as a single number in $\\mathrm{eV}$. No rounding is necessary; use the values as given.", "solution": "The problem statement is first subjected to validation.\n\n**Step 1: Extract Givens**\n- System: Single adatom diffusion on an fcc $(111)$ terrace between adjacent threefold hollow sites.\n- Potential Energies (referenced to $E_{\\mathrm{fcc}}$):\n  - fcc hollow site minimum: $E_{\\mathrm{fcc}} = 0.000~\\mathrm{eV}$\n  - hcp hollow site local minimum: $E_{\\mathrm{hcp}} = 0.032~\\mathrm{eV}$\n  - bridge site first-order saddle: $E_{\\mathrm{b}}^{\\ddagger} = 0.218~\\mathrm{eV}$\n- Theoretical Framework: Harmonic Transition State Theory (TST).\n- Hop Rate Model: Arrhenius factor with activation energy $\\Delta E = E^{\\ddagger} - E_{\\min}$.\n- Assumption: Vibrational free-energy differences are neglected.\n- Diffusion Pathways:\n  - Direct single hop $\\mathrm{fcc} \\rightarrow \\mathrm{fcc}$ (if it exists).\n  - Two-step sequence $\\mathrm{fcc} \\rightarrow \\mathrm{hcp} \\rightarrow \\mathrm{fcc}$.\n- Objective: Determine the minimum activation energy $E_{m}$ for net diffusion from an initial $\\mathrm{fcc}$ site to a neighboring $\\mathrm{fcc}$ site.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The problem is scientifically sound. It describes a standard scenario in surface science, employing correct terminology (fcc(111), hollow sites, saddle points) and established theories (TST, DFT-derived energies).\n- **Well-Posedness**: The problem is well-posed. It provides sufficient data and a clear objective to allow for a unique, meaningful solution.\n- **Objectivity**: The problem is stated objectively using precise, quantitative language.\n\n**Step 3: Verdict and Action**\nThe problem is valid. It is a standard exercise in applying the concepts of transition state theory to a multi-step reaction coordinate on a crystal surface. A solution will be provided.\n\nThe problem requires a determination of the minimum activation energy, $E_m$, for an adatom to diffuse from one face-centered cubic ($\\mathrm{fcc}$) hollow site to a neighboring $\\mathrm{fcc}$ hollow site on an $\\mathrm{fcc}(111)$ surface. The crystallographic structure of the $\\mathrm{fcc}(111)$ surface dictates the connectivity of the high-symmetry sites. An $\\mathrm{fcc}$ hollow site is surrounded by three hexagonal close-packed ($\\mathrm{hcp}$) hollow sites, which are in turn surrounded by $\\mathrm{fcc}$ sites. A direct hop between two adjacent $\\mathrm{fcc}$ sites over a single bridge-type saddle point is topologically impossible. The low-energy pathway for diffusion between adjacent $\\mathrm{fcc}$ sites must proceed via an intermediate $\\mathrm{hcp}$ site. Thus, the relevant diffusion pathway is the two-step sequence: $\\mathrm{fcc} \\rightarrow \\mathrm{hcp} \\rightarrow \\mathrm{fcc}$. The conditional clause in the problem, \"if such a saddle directly connects the two fcc minima,\" correctly implies that this path may not exist, forcing a rigorous analysis of the given site network.\n\nThe potential energy profile for this two-step process is constructed from the provided energies. The energy of the initial $\\mathrm{fcc}$ site is the reference energy, $E_{\\mathrm{fcc}} = 0.000~\\mathrm{eV}$.\n\nThe process involves two elementary hops:\n$1.$ The first hop is $\\mathrm{fcc} \\rightarrow \\mathrm{hcp}$. The adatom transitions from an $\\mathrm{fcc}$ minimum (energy $E_{\\mathrm{fcc}}$) to an adjacent $\\mathrm{hcp}$ minimum (energy $E_{\\mathrm{hcp}}$) by passing over a bridge saddle point (energy $E_{\\mathrm{b}}^{\\ddagger}$). The activation energy for this individual step, $\\Delta E_{1}$, is:\n$$ \\Delta E_{1} = E_{\\mathrm{b}}^{\\ddagger} - E_{\\mathrm{fcc}} = 0.218~\\mathrm{eV} - 0.000~\\mathrm{eV} = 0.218~\\mathrm{eV} $$\nAfter this hop, the adatom is in the $\\mathrm{hcp}$ local minimum, which is an intermediate state for the overall process.\n\n$2.$ The second hop is $\\mathrm{hcp} \\rightarrow \\mathrm{fcc}$. The adatom moves from the $\\mathrm{hcp}$ intermediate state to the final $\\mathrm{fcc}$ site, again crossing a bridge saddle point. The activation energy for this step, $\\Delta E_{2}$, is calculated relative to the energy of the intermediate state:\n$$ \\Delta E_{2} = E_{\\mathrm{b}}^{\\ddagger} - E_{\\mathrm{hcp}} = 0.218~\\mathrm{eV} - 0.032~\\mathrm{eV} = 0.186~\\mathrm{eV} $$\n\nFor a multi-step process, the overall effective activation energy, $E_m$, is defined by the highest energy barrier that must be overcome along the entire reaction coordinate, measured from the energy of the initial stable state. We must identify the global maximum of the potential energy along the minimum energy path for the $\\mathrm{fcc} \\rightarrow \\mathrm{hcp} \\rightarrow \\mathrm{fcc}$ sequence. The relevant energy levels are:\n- Initial state ($E_{\\mathrm{initial}}$): $E_{\\mathrm{fcc}} = 0.000~\\mathrm{eV}$\n- Intermediate state ($E_{\\mathrm{inter}}$): $E_{\\mathrm{hcp}} = 0.032~\\mathrm{eV}$\n- Transition state ($E^{\\ddagger}$): $E_{\\mathrm{b}}^{\\ddagger} = 0.218~\\mathrm{eV}$\n\nThe energy profile starts at $E=0.000~\\mathrm{eV}$, rises to a saddle point at $E=0.218~\\mathrm{eV}$, descends to an intermediate minimum at $E=0.032~\\mathrm{eV}$, rises again to a second saddle point at $E=0.218~\\mathrm{eV}$, and finally descends to the final state at $E=0.000~\\mathrm{eV}$. The highest energy point along this entire pathway is the energy of the bridge saddle, $E_{\\mathrm{b}}^{\\ddagger}$.\n\nTherefore, the effective activation energy $E_m$ for the net diffusion from an initial $\\mathrm{fcc}$ site to a neighboring one is the difference between this maximum energy and the initial energy:\n$$ E_m = E_{\\mathrm{b}}^{\\ddagger} - E_{\\mathrm{fcc}} $$\nSubstituting the given numerical values:\n$$ E_m = 0.218~\\mathrm{eV} - 0.000~\\mathrm{eV} = 0.218~\\mathrm{eV} $$\nThe assessment of whether a multi-step pathway can offer a lower barrier is answered by this analysis. Since the direct single-hop pathway between adjacent $\\mathrm{fcc}$ sites is geometrically forbidden, the two-step pathway is the only viable route composed of the given sites. Its activation energy is determined by the highest barrier along its path, which is the hop out of the initial $\\mathrm{fcc}$ well. The minimum activation energy for diffusion is thus dictated by this rate-limiting step.", "answer": "$$\\boxed{0.218}$$", "id": "2790766"}, {"introduction": "Advanced surface science often involves bridging atomistic-scale data with continuum-level physical models. This final practice challenges you to perform such a link by analyzing a set of synthetic DFT data for step-edge formation energies [@problem_id:2790696]. You will fit a continuum line-tension model to the data and, crucially, propagate the computational uncertainties to derive error bars for the physically significant parameters of step tension $\\beta(\\theta)$ and stiffness $\\tilde{\\beta}(\\theta)$.", "problem": "You are given synthetic Density Functional Theory (DFT)-calculated formation energies for straight step-edge segments on a crystalline surface with fourfold symmetry. The energies carry known one-sigma uncertainties due to computational approximations. Assume a continuum line-tension description where the step free energy per unit length, denoted by $\\beta(\\theta)$, depends on the step orientation angle $\\theta$ relative to a fixed crystalline axis. For a straight segment of length $L$ at orientation $\\theta$, the formation energy is modeled as\n$$\nE \\approx \\beta(\\theta)\\,L,\n$$\nwith independent Gaussian measurement errors of known standard deviation $\\sigma$ on $E$.\n\nStart from the fundamental definition that $\\beta(\\theta)$ is the line free energy per unit length of a straight step and recall that for an anisotropic interface, the capillarity governing normal forces and curvature stability involves the anisotropic stiffness $\\tilde{\\beta}(\\theta)$, defined by\n$$\n\\tilde{\\beta}(\\theta) \\equiv \\beta(\\theta) + \\frac{d^2 \\beta(\\theta)}{d\\theta^2}.\n$$\nThe second derivative arises from the angular dependence of the line-tension under infinitesimal rotations that couple to curvature in the free energy density of an anisotropic line.\n\nAssume a fourfold-symmetric parameterization of the line tension,\n$$\n\\beta(\\theta) = b_0 + b_4 \\cos(4\\theta),\n$$\nwith unknown coefficients $b_0$ and $b_4$ to be inferred from the data by maximum likelihood under Gaussian errors, which is equivalent to weighted linear least squares with weights $w_i = 1/\\sigma_i^2$ for independent observations. The parameter covariance should be computed from the inverse of the normal matrix in the weighted least-squares estimator. Propagate this parameter uncertainty linearly to obtain standard deviations (one-sigma error bars) for both $\\beta(\\theta)$ and $\\tilde{\\beta}(\\theta)$ at specified evaluation angles. Angles are in radians. All lengths must be treated in nanometers (nm), energies in electronvolts (eV), and report $\\beta$ and $\\tilde{\\beta}$ in $\\mathrm{eV/nm}$.\n\nImplement a program that uses the following datasets (each dataset is a test case) and performs the tasks described below.\n\nData format for each observation: $(\\theta, L, E, \\sigma)$ with $\\theta$ in radians, $L$ in $\\mathrm{nm}$, $E$ in $\\mathrm{eV}$, and $\\sigma$ in $\\mathrm{eV}$.\n\nTest Suite:\n- Case 1 (well-conditioned, moderate anisotropy):\n  - $(0.0000000000,\\; 5.0,\\; 1.1000000000,\\; 0.020)$\n  - $(0.3926990817,\\; 4.0,\\; 0.8400000000,\\; 0.015)$\n  - $(0.7853981634,\\; 6.0,\\; 1.2000000000,\\; 0.020)$\n  - $(0.1963495408,\\; 3.0,\\; 0.6512132034,\\; 0.010)$\n  - $(0.5890486225,\\; 7.0,\\; 1.4205025254,\\; 0.025)$\n- Case 2 (isotropic limit):\n  - $(0.0000000000,\\; 10.0,\\; 1.8000000000,\\; 0.050)$\n  - $(0.2617993878,\\; 8.0,\\; 1.4400000000,\\; 0.040)$\n  - $(0.5235987756,\\; 12.0,\\; 2.1600000000,\\; 0.060)$\n  - $(0.7853981634,\\; 7.0,\\; 1.2600000000,\\; 0.030)$\n- Case 3 (small anisotropy, heterogeneous uncertainties):\n  - $(0.1963495408,\\; 6.0,\\; 1.8424264068,\\; 0.030)$\n  - $(0.0000000000,\\; 9.0,\\; 2.7900000000,\\; 0.020)$\n  - $(0.5890486225,\\; 5.5,\\; 1.6111091271,\\; 0.040)$\n  - $(0.3926990817,\\; 7.5,\\; 2.2500000000,\\; 0.050)$\n\nTasks:\n1. For each case, estimate $(b_0,b_4)$ by minimizing\n   $$\n   \\chi^2(b_0,b_4) = \\sum_{i} \\frac{\\left[E_i - L_i \\beta(\\theta_i)\\right]^2}{\\sigma_i^2},\n   $$\n   where $\\beta(\\theta)=b_0 + b_4\\cos(4\\theta)$. Use the maximum-likelihood (weighted least squares) estimator and compute the $2\\times 2$ parameter covariance matrix from the inverse of the weighted normal matrix.\n2. For each case, evaluate $\\beta(\\theta)$ and $\\tilde{\\beta}(\\theta)$ at the angles $\\theta \\in \\{0,\\; \\pi/8,\\; \\pi/4\\}$ and compute their one-sigma standard deviations by linear error propagation from the parameter covariance. Use the relation\n   $$\n   \\tilde{\\beta}(\\theta) = \\beta(\\theta) + \\frac{d^2\\beta(\\theta)}{d\\theta^2}.\n   $$\n   For the given parameterization, $\\frac{d^2\\beta}{d\\theta^2}$ must be computed exactly and combined with $\\beta(\\theta)$ to obtain $\\tilde{\\beta}(\\theta)$ at each evaluation angle.\n3. Report all values of $\\beta$ and $\\tilde{\\beta}$ and their standard deviations in $\\mathrm{eV/nm}$. Angles are in radians. Output numerical values as decimal floats rounded to six digits after the decimal point.\n\nFinal Output Format:\n- Your program should produce a single line of output containing all results for the three cases, aggregated and flattened into one comma-separated list enclosed in square brackets.\n- For each case, append the following twelve values in order:\n  - $\\beta(0)$, $\\mathrm{std}[\\beta(0)]$, $\\beta(\\pi/8)$, $\\mathrm{std}[\\beta(\\pi/8)]$, $\\beta(\\pi/4)$, $\\mathrm{std}[\\beta(\\pi/4)]$, $\\tilde{\\beta}(0)$, $\\mathrm{std}[\\tilde{\\beta}(0)]$, $\\tilde{\\beta}(\\pi/8)$, $\\mathrm{std}[\\tilde{\\beta}(\\pi/8)]$, $\\tilde{\\beta}(\\pi/4)$, $\\mathrm{std}[\\tilde{\\beta}(\\pi/4)]$.\n- Concatenate the results of Case 1, then Case 2, then Case 3 in this order.\n- Example schema (not actual numbers): \n  $$\n  [\\beta_1(0),s\\beta_1(0),\\beta_1(\\pi/8),s\\beta_1(\\pi/8),\\beta_1(\\pi/4),s\\beta_1(\\pi/4),\\tilde{\\beta}_1(0),s\\tilde{\\beta}_1(0),\\tilde{\\beta}_1(\\pi/8),s\\tilde{\\beta}_1(\\pi/8),\\tilde{\\beta}_1(\\pi/4),s\\tilde{\\beta}_1(\\pi/4),\\;\\beta_2(0),\\dots,\\;\\beta_3(0),\\dots].\n  $$\nAll outputs must be in $\\mathrm{eV/nm}$, rounded to six digits after the decimal point. Angles are in radians.", "solution": "We begin from the fundamental definition that the line tension $\\beta(\\theta)$ is the free energy per unit length of a straight step segment oriented at angle $\\theta$. For a straight segment of length $L$, the excess free energy is $E = \\beta(\\theta) L$ in the continuum approximation when end effects and kink excitations are neglected. Density Functional Theory (DFT) provides calculated formation energies $E_i$ at specified $(\\theta_i,L_i)$ with uncertainties $\\sigma_i$ that we treat as the one-sigma standard deviation of independent Gaussian errors.\n\nAnisotropic capillarity for a line implies that the response to curvature depends not only on $\\beta(\\theta)$ but also on how $\\beta$ changes with orientation. Consider a small rotation $\\theta \\to \\theta + \\delta \\theta$; the free energy density variation is $\\delta \\beta = \\beta'(\\theta)\\delta\\theta + \\tfrac{1}{2}\\beta''(\\theta)\\delta\\theta^2 + \\dots$ and the force balance at a curved line involves terms proportional to curvature and the derivative of the tangential chemical potential with respect to orientation. Integrating out the rotation degrees to quadratic order yields the well-known Herring relation for anisotropic stiffness of an interface line,\n$$\n\\tilde{\\beta}(\\theta) \\equiv \\beta(\\theta) + \\frac{d^2 \\beta(\\theta)}{d\\theta^2},\n$$\nwhich multiplies the curvature in the capillarity-driven normal force. Stability requires $\\tilde{\\beta}(\\theta) > 0$ for all $\\theta$ supporting smooth equilibrium shapes.\n\nParameterization and linear model. On a crystalline surface with fourfold symmetry (e.g., face-centered cubic (100)), the lowest-order Fourier representation consistent with symmetry is\n$$\n\\beta(\\theta) = b_0 + b_4 \\cos(4\\theta),\n$$\nwith unknown coefficients $b_0$ and $b_4$ in units of $\\mathrm{eV/nm}$. The measured energies follow\n$$\nE_i = L_i \\beta(\\theta_i) + \\varepsilon_i = L_i \\left( b_0 + b_4 \\cos(4\\theta_i) \\right) + \\varepsilon_i,\n$$\nwith independent Gaussian errors $\\varepsilon_i \\sim \\mathcal{N}(0,\\sigma_i^2)$. This is a linear regression in the parameters. Define the design matrix $\\mathbf{X}\\in\\mathbb{R}^{N\\times 2}$ and data vector $\\mathbf{y}\\in\\mathbb{R}^N$ by\n$$\n\\mathbf{X}_i = \\begin{bmatrix} L_i & L_i \\cos(4\\theta_i) \\end{bmatrix}, \\quad \\mathbf{y}_i = E_i,\n$$\nand weights $w_i = \\sigma_i^{-2}$ so that $\\mathbf{W} = \\mathrm{diag}(w_1,\\dots,w_N)$. The maximum-likelihood (weighted least squares) estimator solves\n$$\n\\hat{\\mathbf{b}} = \\arg\\min_{\\mathbf{b}} (\\mathbf{y}-\\mathbf{X}\\mathbf{b})^\\top \\mathbf{W} (\\mathbf{y}-\\mathbf{X}\\mathbf{b}),\n$$\nwith closed-form solution\n$$\n\\hat{\\mathbf{b}} = (\\mathbf{X}^\\top \\mathbf{W} \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{W} \\mathbf{y},\n$$\nand parameter covariance\n$$\n\\mathrm{Cov}(\\hat{\\mathbf{b}}) = (\\mathbf{X}^\\top \\mathbf{W} \\mathbf{X})^{-1}.\n$$\nThe latter follows from the Cramér–Rao bound for a linear Gaussian model with known noise variances and is exact for the weighted least squares maximum-likelihood estimator.\n\nUncertainty propagation to $\\beta(\\theta)$ and $\\tilde{\\beta}(\\theta)$. For any evaluation angle $\\theta$, $\\beta(\\theta)$ is a linear function of the parameters:\n$$\n\\beta(\\theta) = \\begin{bmatrix} 1 & \\cos(4\\theta) \\end{bmatrix} \\mathbf{b}.\n$$\nTherefore, if we define the row vector $\\mathbf{a}(\\theta) = \\begin{bmatrix} 1 & \\cos(4\\theta)\\end{bmatrix}$, the variance of the estimator $\\hat{\\beta}(\\theta)$ is\n$$\n\\mathrm{Var}[\\hat{\\beta}(\\theta)] = \\mathbf{a}(\\theta) \\, \\mathrm{Cov}(\\hat{\\mathbf{b}})\\, \\mathbf{a}(\\theta)^\\top,\n$$\nand the one-sigma error bar is its square root.\n\nFor the stiffness, compute the exact second derivative for the parameterization:\n$$\n\\frac{d^2 \\beta(\\theta)}{d\\theta^2} = -16\\, b_4 \\cos(4\\theta),\n$$\nso that\n$$\n\\tilde{\\beta}(\\theta) = \\beta(\\theta) + \\frac{d^2\\beta}{d\\theta^2} = b_0 - 15\\, b_4 \\cos(4\\theta).\n$$\nThis is also linear in $\\mathbf{b}$ with row vector $\\tilde{\\mathbf{a}}(\\theta) = \\begin{bmatrix} 1 & -15\\cos(4\\theta) \\end{bmatrix}$. Hence\n$$\n\\mathrm{Var}[\\hat{\\tilde{\\beta}}(\\theta)] = \\tilde{\\mathbf{a}}(\\theta)\\, \\mathrm{Cov}(\\hat{\\mathbf{b}})\\, \\tilde{\\mathbf{a}}(\\theta)^\\top.\n$$\n\nAlgorithm:\n1. For each dataset, build $\\mathbf{X}$ from $(\\theta_i,L_i)$ using $\\cos(4\\theta_i)$, assemble $\\mathbf{y}$ from $E_i$, and construct $\\mathbf{W}$ from $\\sigma_i$.\n2. Compute $\\hat{\\mathbf{b}}$ and $\\mathrm{Cov}(\\hat{\\mathbf{b}})$ using the formulas above.\n3. For evaluation angles $\\theta \\in \\{0,\\pi/8,\\pi/4\\}$, compute $\\hat{\\beta}(\\theta)$ and $\\hat{\\tilde{\\beta}}(\\theta)$ and their one-sigma standard deviations via the linear propagation formulas.\n4. Report all values in $\\mathrm{eV/nm}$. Round each value to six digits after the decimal point to produce stable, unambiguous floats.\n5. Aggregate the results for Case 1, then Case 2, then Case 3 into a single flattened list in the prescribed order:\n   $\\beta(0)$, $\\mathrm{std}[\\beta(0)]$, $\\beta(\\pi/8)$, $\\mathrm{std}[\\beta(\\pi/8)]$, $\\beta(\\pi/4)$, $\\mathrm{std}[\\beta(\\pi/4)]$, $\\tilde{\\beta}(0)$, $\\mathrm{std}[\\tilde{\\beta}(0)]$, $\\tilde{\\beta}(\\pi/8)$, $\\mathrm{std}[\\tilde{\\beta}(\\pi/8)]$, $\\tilde{\\beta}(\\pi/4)$, $\\mathrm{std}[\\tilde{\\beta}(\\pi/4)]$.\n   \nScientific realism and interpretation. The positivity of $\\tilde{\\beta}(\\theta)$ is a consistency requirement for capillarity-driven stability of orientations; it can be checked a posteriori using the fitted parameters and propagated uncertainties. The DFT uncertainties enter only through $\\mathbf{W}$, and the resulting parameter covariance cleanly quantifies how computational uncertainty propagates to error bars on $\\beta$ and $\\tilde{\\beta}$.\n\nThe implementation uses only linear algebra with standard numerical conditioning precautions (full-rank design matrices ensured by the test suite). All angles are in radians, and all energies, lengths, and resulting line tensions use the specified physical units, guaranteeing that outputs for $\\beta$ and $\\tilde{\\beta}$ are in $\\mathrm{eV/nm}$ as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef weighted_least_squares(X, y, sigma):\n    \"\"\"\n    Solve for b in y = X b with weights w_i = 1/sigma_i^2.\n    Returns (b_hat, Cov_b).\n    \"\"\"\n    w = 1.0 / (sigma ** 2)\n    W = np.diag(w)\n    XtW = X.T @ W\n    XtWX = XtW @ X\n    XtWy = XtW @ y\n    # Solve normal equations\n    try:\n        XtWX_inv = np.linalg.inv(XtWX)\n    except np.linalg.LinAlgError:\n        # Fallback using pseudo-inverse for numerical safety\n        XtWX_inv = np.linalg.pinv(XtWX)\n    b_hat = XtWX_inv @ XtWy\n    Cov_b = XtWX_inv\n    return b_hat, Cov_b\n\ndef evaluate_with_uncertainty(b_hat, Cov_b, thetas):\n    \"\"\"\n    For each theta in thetas, compute:\n    - beta(theta) and its std\n    - tilde_beta(theta) and its std\n    Returns arrays beta_vals, beta_stds, tbeta_vals, tbeta_stds.\n    \"\"\"\n    beta_vals = []\n    beta_stds = []\n    tbeta_vals = []\n    tbeta_stds = []\n    for th in thetas:\n        c4 = np.cos(4.0 * th)\n        a = np.array([1.0, c4])             # for beta(theta)\n        at = np.array([1.0, -15.0 * c4])    # for tilde_beta(theta) = b0 - 15 b4 cos(4 theta)\n        beta_th = a @ b_hat\n        var_beta = a @ Cov_b @ a\n        tbeta_th = at @ b_hat\n        var_tbeta = at @ Cov_b @ at\n        beta_vals.append(beta_th)\n        beta_stds.append(np.sqrt(max(var_beta, 0.0)))\n        tbeta_vals.append(tbeta_th)\n        tbeta_stds.append(np.sqrt(max(var_tbeta, 0.0)))\n    return np.array(beta_vals), np.array(beta_stds), np.array(tbeta_vals), np.array(tbeta_stds)\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case is a list of tuples: (theta [rad], L [nm], E [eV], sigma [eV])\n    case1 = [\n        (0.0000000000, 5.0, 1.1000000000, 0.020),\n        (0.3926990817, 4.0, 0.8400000000, 0.015),\n        (0.7853981634, 6.0, 1.2000000000, 0.020),\n        (0.1963495408, 3.0, 0.6512132034, 0.010),\n        (0.5890486225, 7.0, 1.4205025254, 0.025),\n    ]\n    case2 = [\n        (0.0000000000, 10.0, 1.8000000000, 0.050),\n        (0.2617993878, 8.0, 1.4400000000, 0.040),\n        (0.5235987756, 12.0, 2.1600000000, 0.060),\n        (0.7853981634, 7.0, 1.2600000000, 0.030),\n    ]\n    case3 = [\n        (0.1963495408, 6.0, 1.8424264068, 0.030),\n        (0.0000000000, 9.0, 2.7900000000, 0.020),\n        (0.5890486225, 5.5, 1.6111091271, 0.040),\n        (0.3926990817, 7.5, 2.2500000000, 0.050),\n    ]\n\n    test_cases = [case1, case2, case3]\n\n    eval_thetas = np.array([0.0, np.pi/8.0, np.pi/4.0], dtype=float)\n\n    results = []\n    for case in test_cases:\n        data = np.array(case, dtype=float)\n        theta = data[:, 0]\n        L = data[:, 1]\n        E = data[:, 2]\n        sigma = data[:, 3]\n\n        # Build design matrix X with columns [L, L*cos(4*theta)]\n        c4 = np.cos(4.0 * theta)\n        X = np.column_stack([L, L * c4])\n        y = E\n\n        b_hat, Cov_b = weighted_least_squares(X, y, sigma)\n\n        beta_vals, beta_stds, tbeta_vals, tbeta_stds = evaluate_with_uncertainty(b_hat, Cov_b, eval_thetas)\n\n        # Append in the required order for this case:\n        # beta(0), std beta(0), beta(pi/8), std, beta(pi/4), std,\n        # tilde_beta(0), std, tilde_beta(pi/8), std, tilde_beta(pi/4), std\n        # Round to 6 decimals as required.\n        ordered = [\n            beta_vals[0], beta_stds[0],\n            beta_vals[1], beta_stds[1],\n            beta_vals[2], beta_stds[2],\n            tbeta_vals[0], tbeta_stds[0],\n            tbeta_vals[1], tbeta_stds[1],\n            tbeta_vals[2], tbeta_stds[2],\n        ]\n        results.extend([f\"{val:.6f}\" for val in ordered])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2790696"}]}