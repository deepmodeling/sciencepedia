{"hands_on_practices": [{"introduction": "The Gibbs dividing surface is a powerful, yet abstract, tool for defining interfacial properties. Since its exact position is a matter of convention, a crucial question arises: how does this choice affect the calculated surface excess quantities? This practice [@problem_id:2772282] guides you through a first-principles derivation to show precisely how surface excess, $\\Gamma_i$, transforms when the dividing surface is shifted, underscoring its convention-dependent nature while revealing the invariant relationships that govern it.", "problem": "A planar interface separates two macroscopically homogeneous bulk phases, labeled $\\alpha$ and $\\beta$. The coordinate $z$ is chosen orthogonal to the interface, increasing from phase $\\alpha$ toward phase $\\beta$. For a chemical species $i$, the surface excess per unit area at a chosen Gibbs dividing surface located at $z=z_S$ is defined from first principles as the integral across the interfacial region of the deviation of the true number density from a piecewise-constant reference formed by the bulk densities. Specifically, using the Heaviside step function (HSF) $\\Theta(\\cdot)$, the definition is\n$$\n\\Gamma_i(z_S) \\equiv \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha}\\,\\Theta\\!\\big(z_S-z\\big) - n_i^{\\beta}\\,\\Theta\\!\\big(z-z_S\\big)\\Big]\\,\\mathrm{d}z.\n$$\nYou measure the following surface excesses at the dividing surface $z=z_0$:\n- $\\Gamma_1(z_0) = 0.85 \\times 10^{-6}$ mol m$^{-2}$,\n- $\\Gamma_2(z_0) = -1.40 \\times 10^{-6}$ mol m$^{-2}$.\n\nFar from the interface, the bulk number densities (assumed constant in each homogeneous phase) are:\n- $n_1^{\\alpha} = 5.20 \\times 10^{3}$ mol m$^{-3}$, $n_1^{\\beta} = 1.48 \\times 10^{4}$ mol m$^{-3}$,\n- $n_2^{\\alpha} = 2.75 \\times 10^{3}$ mol m$^{-3}$, $n_2^{\\beta} = 3.10 \\times 10^{3}$ mol m$^{-3}$.\n\nYou now redefine the Gibbs dividing surface by shifting it by $\\Delta z = +0.35$ nm along $+z$ (from $\\alpha$ toward $\\beta$), to the new location $z=z_0+\\Delta z$.\n\nStarting only from the above fundamental definition of $\\Gamma_i(z_S)$, derive a general expression for how $\\Gamma_i$ transforms under an arbitrary finite shift $\\Delta z$ of the dividing surface, taking care with signs and using only properties of the Heaviside step function. Then use your derived expression and the provided data to compute the new surface excesses $\\Gamma_1(z_0+\\Delta z)$ and $\\Gamma_2(z_0+\\Delta z)$.\n\nExpress both final answers in mol m$^{-2}$, and round each to three significant figures. Provide your final pair of values as a single row vector in the order $(\\Gamma_1(z_0+\\Delta z),\\ \\Gamma_2(z_0+\\Delta z))$.", "solution": "The problem as stated is scientifically grounded, well-posed, and self-contained. It is a valid exercise in interfacial thermodynamics. I will proceed with its solution.\n\nThe task is to derive the transformation rule for the surface excess, $\\Gamma_i$, upon a shift of the Gibbs dividing surface, and then to apply this rule to the provided numerical data. The derivation must start from the fundamental definition given.\n\nThe surface excess of species $i$ at a dividing surface located at $z=z_S$ is defined as:\n$$\n\\Gamma_i(z_S) \\equiv \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha}\\,\\Theta\\!\\big(z_S-z\\big) - n_i^{\\beta}\\,\\Theta\\!\\big(z-z_S\\big)\\Big]\\,\\mathrm{d}z\n$$\nHere, $n_i(z)$ is the actual number density profile of species $i$ across the interface, while $n_i^{\\alpha}$ and $n_i^{\\beta}$ are the constant bulk number densities in phases $\\alpha$ and $\\beta$, respectively. The function $\\Theta(\\cdot)$ is the Heaviside step function. The reference density profile is a piecewise-constant function that jumps from $n_i^{\\alpha}$ to $n_i^{\\beta}$ at $z=z_S$.\n\nThe sum of the two Heaviside functions in the definition is $\\Theta(z_S-z) + \\Theta(z-z_S) = 1$ for all $z \\neq z_S$. Since the value at a single point does not affect the integral, we can write $\\Theta(z_S-z) = 1 - \\Theta(z-z_S)$. Substituting this into the definition yields a more convenient form:\n$$\n\\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha}\\big(1 - \\Theta(z-z_S)\\big) - n_i^{\\beta}\\,\\Theta(z-z_S)\\Big]\\,\\mathrm{d}z\n$$\n$$\n\\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha} - \\big(n_i^{\\beta} - n_i^{\\alpha}\\big)\\Theta(z-z_S)\\Big]\\,\\mathrm{d}z\n$$\nNow, consider a new dividing surface at position $z_S' = z_S + \\Delta z$. The surface excess at this new location is given by the same expression, with $z_S$ replaced by $z_S'$:\n$$\n\\Gamma_i(z_S + \\Delta z) = \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha} - \\big(n_i^{\\beta} - n_i^{\\alpha}\\big)\\Theta(z - (z_S + \\Delta z))\\Big]\\,\\mathrm{d}z\n$$\nTo find the relationship between $\\Gamma_i(z_S + \\Delta z)$ and $\\Gamma_i(z_S)$, we compute their difference:\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty} \\! \\Bigg( \\Big[n_i(z) - n_i^{\\alpha} - (n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S')\\Big] - \\Big[n_i(z) - n_i^{\\alpha} - (n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S)\\Big] \\Bigg) \\mathrm{d}z\n$$\nThe terms $n_i(z)$ and $n_i^{\\alpha}$ cancel, leaving:\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty} \\! \\Big[ -(n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S') + (n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S) \\Big] \\mathrm{d}z\n$$\nFactoring out the constant density difference $(n_i^{\\beta} - n_i^{\\alpha})$ gives:\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = (n_i^{\\beta} - n_i^{\\alpha}) \\int_{-\\infty}^{\\infty} \\! \\Big[\\Theta(z - z_S) - \\Theta(z - z_S')\\Big] \\mathrm{d}z\n$$\nThe integrand, $\\Theta(z - z_S) - \\Theta(z - z_S')$, is a box-shaped function. Let $z_S' = z_S + \\Delta z$.\nIf $\\Delta z > 0$, then $z_S' > z_S$. The integrand is $1$ for $z \\in (z_S, z_S')$ and $0$ otherwise.\nIf $\\Delta z  0$, then $z_S'  z_S$. The integrand is $-1$ for $z \\in (z_S', z_S)$ and $0$ otherwise.\nThe integral can be evaluated for both cases:\n- For $\\Delta z > 0$: $\\int_{z_S}^{z_S'} 1\\,\\mathrm{d}z = z_S' - z_S = \\Delta z$.\n- For $\\Delta z  0$: $\\int_{z_S'}^{z_S} (-1)\\,\\mathrm{d}z = -(z_S - z_S') = z_S' - z_S = \\Delta z$.\nIn both cases, the integral evaluates to $\\Delta z$. Therefore, the change in surface excess is:\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = (n_i^{\\beta} - n_i^{\\alpha})\\Delta z\n$$\nThis leads to the general transformation rule:\n$$\n\\Gamma_i(z_S + \\Delta z) = \\Gamma_i(z_S) + (n_i^{\\beta} - n_i^{\\alpha})\\Delta z\n$$\nThis expression is the derived formula required by the problem.\n\nNow, we apply this formula to the given data. The initial dividing surface is at $z_0$, and it is shifted by $\\Delta z = +0.35$ nm $= 0.35 \\times 10^{-9}$ m.\n\nFor species $i=1$:\nThe initial surface excess is $\\Gamma_1(z_0) = 0.85 \\times 10^{-6}$ mol m$^{-2}$.\nThe bulk number densities are $n_1^{\\alpha} = 5.20 \\times 10^{3}$ mol m$^{-3}$ and $n_1^{\\beta} = 1.48 \\times 10^{4}$ mol m$^{-3}$.\nThe difference in bulk densities is:\n$$\nn_1^{\\beta} - n_1^{\\alpha} = (1.48 \\times 10^{4} - 0.520 \\times 10^{4}) \\text{ mol m}^{-3} = 0.960 \\times 10^{4} \\text{ mol m}^{-3} = 9.60 \\times 10^{3} \\text{ mol m}^{-3}\n$$\nThe new surface excess, $\\Gamma_1(z_0 + \\Delta z)$, is calculated as:\n$$\n\\Gamma_1(z_0 + \\Delta z) = \\Gamma_1(z_0) + (n_1^{\\beta} - n_1^{\\alpha})\\Delta z\n$$\n$$\n\\Gamma_1(z_0 + \\Delta z) = (0.85 \\times 10^{-6}) + (9.60 \\times 10^{3}) \\times (0.35 \\times 10^{-9})\n$$\n$$\n\\Gamma_1(z_0 + \\Delta z) = (0.85 \\times 10^{-6}) + (3.36 \\times 10^{-6}) = 4.21 \\times 10^{-6} \\text{ mol m}^{-2}\n$$\nRounding to three significant figures, the result is $4.21 \\times 10^{-6}$ mol m$^{-2}$.\n\nFor species $i=2$:\nThe initial surface excess is $\\Gamma_2(z_0) = -1.40 \\times 10^{-6}$ mol m$^{-2}$.\nThe bulk number densities are $n_2^{\\alpha} = 2.75 \\times 10^{3}$ mol m$^{-3}$ and $n_2^{\\beta} = 3.10 \\times 10^{3}$ mol m$^{-3}$.\nThe difference in bulk densities is:\n$$\nn_2^{\\beta} - n_2^{\\alpha} = (3.10 \\times 10^{3} - 2.75 \\times 10^{3}) \\text{ mol m}^{-3} = 0.35 \\times 10^{3} \\text{ mol m}^{-3}\n$$\nThe new surface excess, $\\Gamma_2(z_0 + \\Delta z)$, is calculated as:\n$$\n\\Gamma_2(z_0 + \\Delta z) = \\Gamma_2(z_0) + (n_2^{\\beta} - n_2^{\\alpha})\\Delta z\n$$\n$$\n\\Gamma_2(z_0 + \\Delta z) = (-1.40 \\times 10^{-6}) + (0.35 \\times 10^{3}) \\times (0.35 \\times 10^{-9})\n$$\n$$\n\\Gamma_2(z_0 + \\Delta z) = (-1.40 \\times 10^{-6}) + (0.1225 \\times 10^{-6}) = -1.2775 \\times 10^{-6} \\text{ mol m}^{-2}\n$$\nRounding to three significant figures, the result is $-1.28 \\times 10^{-6}$ mol m$^{-2}$.\n\nThe final pair of values $(\\Gamma_1(z_0+\\Delta z), \\Gamma_2(z_0+\\Delta z))$ is $(4.21 \\times 10^{-6}, -1.28 \\times 10^{-6})$ mol m$^{-2}$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n4.21 \\times 10^{-6}  -1.28 \\times 10^{-6}\n\\end{pmatrix}\n}\n$$", "id": "2772282"}, {"introduction": "A cornerstone of surface science is the ability to connect macroscopic measurements to molecular-level phenomena at an interface. The Gibbs adsorption isotherm provides just such a link, relating changes in surface tension, $\\gamma$, to the amount of substance adsorbed at the surface. In this exercise [@problem_id:2772276], you will apply this powerful principle to a set of hypothetical experimental data to determine the surface excess of a surfactant and calculate the standard free energy of its adsorption, $\\Delta G^{\\circ}_{\\mathrm{ads}}$.", "problem": "A nonionic surfactant $B$ is dissolved in a molecular solvent $A$ and adsorbs at the gasâ€“liquid interface at temperature $T = 298\\,\\mathrm{K}$. Choose the Gibbs dividing surface (GDS) such that the surface excess of the solvent is zero, i.e., $\\Gamma_{A} = 0$. The surface tension is $\\gamma$, and the surfactant bulk mole fraction is $x_{B}$. Assume the solution is ideal over the reported concentration range so that the chemical potential satisfies $\\mu_{B} = \\mu_{B}^{\\circ} + RT \\ln x_{B}$, where $R$ is the ideal gas constant. Also assume monolayer, non-interacting adsorption of $B$ at the interface consistent with the Langmuir adsorption model.\n\nA high-precision tensiometry experiment provides the following local slopes of the surface tension with respect to the logarithm of the surfactant mole fraction, extracted from the $\\gamma$â€“$x_{B}$ dataset:\n- At $x_{B} = 1.0 \\times 10^{-6}$, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -1.457395 \\times 10^{-4}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$.\n- At $x_{B} = 1.0 \\times 10^{-5}$, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -1.238786 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$.\n- At $x_{B} = 5.0 \\times 10^{-5}$, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -3.716358 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$.\n- At $x_{B} = 1.0 \\times 10^{-4}$, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -4.955144 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$.\n- At $x_{B} = 2.0 \\times 10^{-4}$, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -5.946173 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$.\n- At $x_{B} = 1.0 \\times 10^{-3}$, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -7.086396 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$.\n\nStarting from fundamental relations, first invert the thermodynamic relation between $\\gamma$ and $\\mu_{B}$ to obtain the surfactant surface excess $\\Gamma_{B}(x_{B})$ at each reported $x_{B}$. Then, using the monolayer, non-interacting adsorption assumption, determine the equilibrium constant $K$ characterizing the adsorption and finally compute the standard free energy of adsorption $\\Delta G^{\\circ}_{\\mathrm{ads}}$.\n\nUse $R = 8.314\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$. Report only the value of $\\Delta G^{\\circ}_{\\mathrm{ads}}$ in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, rounded to three significant figures. The final answer must be a single number.", "solution": "The problem posed is scientifically sound, self-contained, and well-posed. It requires the application of fundamental principles of surface thermodynamics, specifically the Gibbs adsorption isotherm, in conjunction with the Langmuir model for monolayer adsorption. All necessary data and conditions for a unique solution are provided. The problem is therefore valid and a rigorous solution will be presented.\n\nThe starting point for this analysis is the Gibbs adsorption isotherm, which relates the change in surface tension, $d\\gamma$, to the surface excess concentrations, $\\Gamma_{i}$, and the chemical potentials, $\\mu_{i}$, of the components in the system. For a two-component system of solvent $A$ and surfactant $B$ at a constant temperature $T$ and pressure $p$, the isotherm is given by:\n$$d\\gamma = -\\Gamma_{A} d\\mu_{A} - \\Gamma_{B} d\\mu_{B}$$\nThe problem specifies the selection of the Gibbs dividing surface (GDS) such that the surface excess of the solvent, $\\Gamma_{A}$, is zero. This is a common and convenient convention. With this condition, $\\Gamma_{A} = 0$, the equation simplifies to:\n$$d\\gamma = -\\Gamma_{B} d\\mu_{B}$$\nThis equation directly links the surface tension to the surface excess and chemical potential of the surfactant, which is the species of interest.\n\nThe problem states that the solution can be treated as ideal. For an ideal solution, the chemical potential of the surfactant $B$ is given by:\n$$\\mu_{B} = \\mu_{B}^{\\circ} + RT \\ln x_{B}$$\nwhere $\\mu_{B}^{\\circ}$ is the standard chemical potential of the surfactant, $R$ is the ideal gas constant, $T$ is the absolute temperature, and $x_{B}$ is the bulk mole fraction of the surfactant. Taking the differential of this expression at constant temperature gives:\n$$d\\mu_{B} = RT \\, d(\\ln x_{B})$$\nSubstituting this expression for $d\\mu_{B}$ into the simplified Gibbs adsorption isotherm yields:\n$$d\\gamma = - \\Gamma_{B} (RT \\, d\\ln x_{B})$$\nThis equation can be rearranged to express the surface excess of the surfactant, $\\Gamma_{B}$, as a function of the experimentally accessible quantity $\\frac{d\\gamma}{d\\ln x_{B}}$:\n$$\\Gamma_{B} = -\\frac{1}{RT} \\frac{d\\gamma}{d\\ln x_{B}}$$\nThe problem provides the value of $R = 8.314\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ and $T = 298\\,\\mathrm{K}$. The product $RT$ is:\n$$RT = (8.314\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}) \\times (298\\,\\mathrm{K}) = 2477.572\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}$$\nUsing this value, we can calculate the surface excess $\\Gamma_{B}$ for each given mole fraction $x_{B}$ from the provided slopes. The units of $\\frac{d\\gamma}{d\\ln x_{B}}$ are $\\mathrm{N}\\,\\mathrm{m}^{-1}$, which is equivalent to $\\mathrm{J}\\,\\mathrm{m}^{-2}$. The resulting units for $\\Gamma_{B}$ will be $\\mathrm{mol}\\,\\mathrm{m}^{-2}$.\n\nThe calculated values of $\\Gamma_{B}$ are as follows:\n- At $x_{B} = 1.0 \\times 10^{-6}$: $\\Gamma_{B} = -\\frac{-1.457395 \\times 10^{-4}}{2477.572} = 5.88235 \\times 10^{-8}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- At $x_{B} = 1.0 \\times 10^{-5}$: $\\Gamma_{B} = -\\frac{-1.238786 \\times 10^{-3}}{2477.572} = 5.00000 \\times 10^{-7}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- At $x_{B} = 5.0 \\times 10^{-5}$: $\\Gamma_{B} = -\\frac{-3.716358 \\times 10^{-3}}{2477.572} = 1.50000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- At $x_{B} = 1.0 \\times 10^{-4}$: $\\Gamma_{B} = -\\frac{-4.955144 \\times 10^{-3}}{2477.572} = 2.00000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- At $x_{B} = 2.0 \\times 10^{-4}$: $\\Gamma_{B} = -\\frac{-5.946173 \\times 10^{-3}}{2477.572} = 2.40000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- At $x_{B} = 1.0 \\times 10^{-3}$: $\\Gamma_{B} = -\\frac{-7.086396 \\times 10^{-3}}{2477.572} = 2.86000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n\nThe next step is to use the Langmuir adsorption model, which is stated to be a valid assumption. The Langmuir isotherm relates the surface excess $\\Gamma_{B}$ to the bulk mole fraction $x_{B}$ via the maximum surface excess $\\Gamma_{B, \\max}$ (at saturation) and the equilibrium constant for adsorption, $K$:\n$$\\Gamma_{B} = \\Gamma_{B, \\max} \\frac{K x_{B}}{1 + K x_{B}}$$\nTo determine the constants $\\Gamma_{B, \\max}$ and $K$ from the data, we linearize this equation. A common and robust linearization is obtained by rearranging the equation into the form:\n$$\\frac{x_{B}}{\\Gamma_{B}} = \\frac{1}{\\Gamma_{B, \\max}} x_{B} + \\frac{1}{\\Gamma_{B, \\max} K}$$\nThis equation is of the linear form $y = m x + c$, where $y = x_{B}/\\Gamma_{B}$, the independent variable is $x = x_{B}$, the slope is $m = 1/\\Gamma_{B, \\max}$, and the y-intercept is $c = 1/(\\Gamma_{B, \\max} K)$.\n\nWe compute the values of $x_{B}/\\Gamma_{B}$ for each data point:\n- $x_{B,1} = 1.0 \\times 10^{-6}$, $y_1 = \\frac{1.0 \\times 10^{-6}}{5.88235 \\times 10^{-8}} = 17.0000\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,2} = 1.0 \\times 10^{-5}$, $y_2 = \\frac{1.0 \\times 10^{-5}}{5.00000 \\times 10^{-7}} = 20.0000\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,3} = 5.0 \\times 10^{-5}$, $y_3 = \\frac{5.0 \\times 10^{-5}}{1.50000 \\times 10^{-6}} = 33.3333\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,4} = 1.0 \\times 10^{-4}$, $y_4 = \\frac{1.0 \\times 10^{-4}}{2.00000 \\times 10^{-6}} = 50.0000\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,5} = 2.0 \\times 10^{-4}$, $y_5 = \\frac{2.0 \\times 10^{-4}}{2.40000 \\times 10^{-6}} = 83.3333\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,6} = 1.0 \\times 10^{-3}$, $y_6 = \\frac{1.0 \\times 10^{-3}}{2.86000 \\times 10^{-6}} = 349.650\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n\nA linear regression of $y_i$ versus $x_{B,i}$ for all six data points yields the following parameters for the best-fit line:\n- Slope: $m = 3.3301 \\times 10^{5}\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- Intercept: $c = 16.684\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n\nFrom these regression parameters, we can determine the physical constants. The maximum surface excess is:\n$$\\Gamma_{B, \\max} = \\frac{1}{m} = \\frac{1}{3.3301 \\times 10^{5}\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}} = 3.0029 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$$\nThe equilibrium constant for adsorption, $K$, is found from the slope and intercept. Since $m = 1/\\Gamma_{B, \\max}$ and $c = 1/(\\Gamma_{B, \\max} K)$, it follows that $K = m/c$:\n$$K = \\frac{m}{c} = \\frac{3.3301 \\times 10^{5}\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}}{16.684\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}} = 19959.9$$\nThe analysis of the data reveals that the integer value $K=20000$ is highly probable as the intended theoretical value. Use of this value does not alter the final result within the required precision. We proceed with the value derived from the regression for maximum rigor.\n\nThe final step is to calculate the standard free energy of adsorption, $\\Delta G^{\\circ}_{\\mathrm{ads}}$, using the thermodynamic relation:\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -RT \\ln K$$\nSubstituting the values for $R$, $T$, and the calculated $K$:\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -(2477.572\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}) \\times \\ln(19959.9)$$\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -(2477.572\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}) \\times 9.90147$$\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -24531.8\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}$$\nConverting this value to kilojoules per mole:\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -24.5318\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$$\nThe problem requires the answer to be rounded to three significant figures.\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} \\approx -24.5\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$$\nThe negative sign indicates that the adsorption of the surfactant at the interface is a spontaneous process.", "answer": "$$\\boxed{-24.5}$$", "id": "2772276"}, {"introduction": "Translating the continuous formalism of thermodynamics into the discrete world of computer simulation is a fundamental skill in modern materials science. This practice [@problem_id:2772248] challenges you to develop a computational protocol for calculating solute surface excess from molecular density profiles. By working from first principles, you will implement the logic for locating the Gibbs dividing surface and computing $\\Gamma_{\\mathrm{A}}$ from binned data, gaining insight into how theoretical concepts are operationalized in research.", "problem": "You are given the task of computing the surface excess of a solute number density, denoted by $\\Gamma_{\\mathrm{A}}$, at a planar liquid-vapor interface from molecular dynamics-like one-dimensional number density profiles. The computation must be carried out relative to a chosen Gibbs dividing surface for the solvent, constructed so that the surface excess of the solvent is zero. Your program must implement the following, starting only from fundamental definitions and mass balance arguments, and must not use any closed-form shortcut formulas not derived explicitly in your solution.\n\nYou will work with a synthetic, yet physically plausible, one-dimensional system along coordinate $z$ with a single planar interface centered near $z = 0$. The system domain is $z \\in [-L/2, L/2]$ with $L$ in nanometers. The densities are in units of $\\mathrm{nm}^{-3}$ and the final surface excess must be expressed in units of $\\mathrm{nm}^{-2}$.\n\nFundamental starting points and modeling assumptions:\n- The Gibbs dividing surface for the solvent is defined such that the solvent surface excess is zero when integrating the number density profile relative to piecewise-constant bulk reference densities on each side of the interface.\n- The surface excess $\\Gamma_{\\mathrm{A}}$ for the solute is defined as the integral of the deviation of the solute number density from the piecewise-constant bulk reference densities on each side of the chosen dividing surface, over the entire $z$-axis.\n- Molecular dynamics yields a discretized number density profile via binning into slabs of uniform width $\\Delta z$ along $z$; the computed surface excess must therefore be approximated using numerical quadrature over these bins.\n- Capillary wave fluctuations broaden the instantaneous interface location, which, at the level of number density profiles, can be idealized as a convolution of the intrinsic (sharp) profile with a Gaussian of standard deviation $\\sigma_{\\mathrm{cw}}$.\n\nYour program must:\n1. Construct continuous intrinsic profiles for the solvent number density $\\rho_{\\mathrm{B}}(z)$ and the solute number density $\\rho_{\\mathrm{A}}(z)$ using physically reasonable parameters:\n   - The solvent exhibits a smooth transition from a liquid density to a vapor density across the interface near $z=0$ with an interfacial width set by a parameter $w$.\n   - The solute exhibits different bulk densities on each side, smoothly transitioning across the interface, and may have an additional localized interfacial adsorption modeled by a Gaussian with amplitude $A_{\\mathrm{ads}}$ and width $\\sigma_{\\mathrm{ads}}$ centered at $z=0$.\n2. Incorporate capillary wave broadening by convolving each intrinsic continuous profile with a normalized Gaussian of standard deviation $\\sigma_{\\mathrm{cw}}$ along $z$.\n3. Emulate molecular dynamics binning by sampling the convolved profiles onto a uniform grid of bin centers spanning the domain with bin width $\\Delta z$, obtaining discrete arrays $\\{\\rho_{\\mathrm{B}}(z_k)\\}$ and $\\{\\rho_{\\mathrm{A}}(z_k)\\}$.\n4. Estimate the bulk reference densities for each species by averaging the first and last $M$ bins at each end, where $M$ is the integer part of $0.1 N$ and $N$ is the number of bins.\n5. Determine the location $z_0$ of the solvent Gibbs dividing surface (the interface plane) solely from the discretized solvent profile and the bulk references by imposing the zero surface excess condition for the solvent using only first principles and mass conservation.\n6. Compute the solute surface excess $\\Gamma_{\\mathrm{A}}$ by numerically integrating the deviation of $\\rho_{\\mathrm{A}}(z)$ from the appropriate bulk reference density on each side of $z_0$, using the discretized binned profile. Your numerical integration must handle the bin that is split by $z_0$ exactly at the resolution of the bins, by partitioning that bin into left and right lengths relative to $z_0$.\n7. Report $\\Gamma_{\\mathrm{A}}$ in $\\mathrm{nm}^{-2}$.\n\nPhysical and numerical constants to use in your model:\n- Domain length: $L = 10.0$ nanometers.\n- Intrinsic solvent liquid and vapor number densities: $\\rho_{\\mathrm{B}}^{\\ell} = 33.0$ $\\mathrm{nm}^{-3}$ and $\\rho_{\\mathrm{B}}^{v} = 0.0$ $\\mathrm{nm}^{-3}$.\n- Intrinsic solute liquid and vapor number densities: $\\rho_{\\mathrm{A}}^{\\ell} = 0.0020$ $\\mathrm{nm}^{-3}$ and $\\rho_{\\mathrm{A}}^{v} = 0.0003$ $\\mathrm{nm}^{-3}$.\n- Intrinsic interfacial width parameter (common to both species for the smooth transition): $w = 0.3$ nanometers.\n- Interfacial adsorption Gaussian width: $\\sigma_{\\mathrm{ads}} = 0.2$ nanometers.\n- For the intrinsic-to-observed convolution, use a normalized Gaussian with standard deviation $\\sigma_{\\mathrm{cw}}$ (in nanometers).\n\nTest suite:\nYour program must compute $\\Gamma_{\\mathrm{A}}$ for each of the following parameter triples $(\\Delta z, \\sigma_{\\mathrm{cw}}, A_{\\mathrm{ads}})$, where $\\Delta z$ and $\\sigma_{\\mathrm{cw}}$ are in nanometers and $A_{\\mathrm{ads}}$ is in $\\mathrm{nm}^{-3}$:\n- Test $1$: $(\\Delta z = 0.02, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.05)$.\n- Test $2$: $(\\Delta z = 0.005, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.05)$.\n- Test $3$: $(\\Delta z = 0.10, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.05)$.\n- Test $4$: $(\\Delta z = 0.02, \\sigma_{\\mathrm{cw}} = 0.30, A_{\\mathrm{ads}} = 0.05)$.\n- Test $5$: $(\\Delta z = 0.02, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.00)$.\n\nNumerical requirements:\n- Use a sufficiently fine internal grid (distinct from $\\Delta z$) to construct and convolve the continuous profiles before binning, such that the convolution is numerically accurate and stable for all given $\\sigma_{\\mathrm{cw}}$.\n- The Gaussian convolution must be normalized and must preserve constant regions away from the interface. Handle domain edges so that plateau regions remain approximately unchanged by the convolution.\n- Use the binned profiles to determine bulk references and to compute $z_0$ by imposing the solvent zero surface excess condition.\n\nFinal output format and units:\n- Your program must print a single line containing a Python-style list of floating-point numbers $[\\Gamma_1, \\Gamma_2, \\Gamma_3, \\Gamma_4, \\Gamma_5]$ corresponding to the tests $1$ through $5$, in this order.\n- Each $\\Gamma_i$ must be expressed in $\\mathrm{nm}^{-2}$ and printed as a decimal with at least six digits after the decimal point.\n- No other text must be printed.\n\nAngle units: not applicable.\n\nPercentages: not applicable.\n\nYour algorithm will be evaluated on correctness, robustness to binning changes, and the sensitivity of $\\Gamma_{\\mathrm{A}}$ to capillary wave broadening and bin sizes as revealed by the numerical values across the test suite. The problem is entirely self-contained and requires no external data.", "solution": "The problem as stated is scientifically sound, self-contained, and well-posed. It presents a standard computational task in the physical chemistry of interfaces, requiring the calculation of surface excess quantities from model one-dimensional density profiles. The parameters and methodology are physically plausible and computationally tractable. I shall therefore proceed with a complete solution derived from fundamental principles as required.\n\nThe core of the problem is to compute the surface excess of a solute, denoted $\\Gamma_{\\mathrm{A}}$, at a planar liquid-vapor interface. This is done with respect to a Gibbs dividing surface, $z_0$, which is defined by the condition that the surface excess of the solvent, $\\Gamma_{\\mathrm{B}}$, is zero. The calculation procedure involves several steps: constructing continuous intrinsic density profiles, applying broadening effects, discretizing the profiles into bins as in a molecular simulation, estimating bulk properties, locating the dividing surface, and finally, computing the solute surface excess via numerical integration.\n\n**Step 1: Intrinsic Density Profile Construction**\n\nWe begin by defining the intrinsic number density profiles for the solvent (species B) and the solute (species A) along the $z$-coordinate. A smooth transition between the liquid ($\\ell$) and vapor ($v$) phases is modeled using a hyperbolic tangent function, which is a standard choice for describing interfacial profiles. The intrinsic width of the interface is governed by the parameter $w$.\n\nThe intrinsic density profile for the solvent, $\\rho_{\\mathrm{B,int}}(z)$, is given by:\n$$ \\rho_{\\mathrm{B,int}}(z) = \\frac{\\rho_{\\mathrm{B}}^{\\ell} + \\rho_{\\mathrm{B}}^{v}}{2} - \\frac{\\rho_{\\mathrm{B}}^{\\ell} - \\rho_{\\mathrm{B}}^{v}}{2} \\tanh\\left(\\frac{z}{2w}\\right) $$\nHere, $\\rho_{\\mathrm{B}}^{\\ell}$ and $\\rho_{\\mathrm{B}}^{v}$ are the bulk number densities of the solvent in the liquid and vapor phases, respectively. The coordinate system is set such that $z \\to -\\infty$ corresponds to the liquid phase and $z \\to +\\infty$ to the vapor phase.\n\nThe intrinsic density profile for the solute, $\\rho_{\\mathrm{A,int}}(z)$, consists of a similar transitional profile plus a term representing localized adsorption at the interface. This adsorption is modeled as a Gaussian function centered at $z=0$ with amplitude $A_{\\mathrm{ads}}$ and width $\\sigma_{\\mathrm{ads}}$.\n$$ \\rho_{\\mathrm{A,int}}(z) = \\left(\\frac{\\rho_{\\mathrm{A}}^{\\ell} + \\rho_{\\mathrm{A}}^{v}}{2} - \\frac{\\rho_{\\mathrm{A}}^{\\ell} - \\rho_{\\mathrm{A}}^{v}}{2} \\tanh\\left(\\frac{z}{2w}\\right)\\right) + A_{\\mathrm{ads}} \\exp\\left(-\\frac{z^2}{2\\sigma_{\\mathrm{ads}}^2}\\right) $$\nwhere $\\rho_{\\mathrm{A}}^{\\ell}$ and $\\rho_{\\mathrm{A}}^{v}$ are the bulk solute densities.\n\n**Step 2: Capillary Wave Broadening**\n\nThe time-averaged density profiles observed in simulations are broadened by thermal fluctuations of the interface, known as capillary waves. This effect is modeled by convolving the intrinsic profiles with a normalized Gaussian kernel, $K(z)$, of standard deviation $\\sigma_{\\mathrm{cw}}$:\n$$ K(z) = \\frac{1}{\\sqrt{2\\pi}\\sigma_{\\mathrm{cw}}} \\exp\\left(-\\frac{z^2}{2\\sigma_{\\mathrm{cw}}^2}\\right) $$\nThe observable, convolved profile for each species $S \\in \\{A, B\\}$ is then:\n$$ \\rho_{S,\\mathrm{conv}}(z) = \\int_{-\\infty}^{\\infty} \\rho_{S,\\mathrm{int}}(z') K(z-z') dz' $$\nThis convolution is performed numerically on a fine grid that extends beyond the primary domain $[-L/2, L/2]$ to mitigate boundary artifacts.\n\n**Step 3: Discretization via Binning**\n\nTo emulate data from a molecular dynamics simulation, the continuous, convolved profiles are discretized. The domain $z \\in [-L/2, L/2]$ is divided into $N$ bins of uniform width $\\Delta z$, where $N$ is the integer part of $L/\\Delta z$. The density in each bin $k$ (centered at $z_k$) is the average of the convolved profile over the bin's extent:\n$$ \\rho_{S}(z_k) = \\frac{1}{\\Delta z} \\int_{z_k - \\Delta z/2}^{z_k + \\Delta z/2} \\rho_{S,\\mathrm{conv}}(z) dz $$\nThis yields two discrete arrays, $\\{\\rho_{\\mathrm{A}}(z_k)\\}$ and $\\{\\rho_{\\mathrm{B}}(z_k)\\}$, which form the basis for all subsequent calculations.\n\n**Step 4: Estimation of Bulk Reference Densities**\n\nThe bulk reference densities for each phase are estimated from the plateaus of the binned profiles. We average the densities of the first $M$ bins for the liquid phase and the last $M$ bins for the vapor phase, where $M = \\lfloor 0.1 N \\rfloor$.\nFor each species $S \\in \\{A, B\\}$:\n$$ \\hat{\\rho}_S^\\ell = \\frac{1}{M} \\sum_{k=0}^{M-1} \\rho_S(z_k) $$\n$$ \\hat{\\rho}_S^v = \\frac{1}{M} \\sum_{k=N-M}^{N-1} \\rho_S(z_k) $$\nThese estimated values, $\\hat{\\rho}_S^\\ell$ and $\\hat{\\rho}_S^v$, serve as the reference densities for the Gibbs surface calculation.\n\n**Step 5: Locating the Gibbs Dividing Surface, $z_0$**\n\nThe position of the Gibbs dividing surface, $z_0$, is determined by the condition that the surface excess of the solvent (B) is zero. The surface excess, $\\Gamma_{\\mathrm{B}}$, is the integral of the difference between the actual density profile and a piecewise-constant reference profile:\n$$ \\Gamma_{\\mathrm{B}} = \\int_{-L/2}^{L/2} [\\rho_{\\mathrm{B}}(z) - \\rho_{\\mathrm{B}}^{\\text{ref}}(z; z_0)] dz = 0 $$\nThe reference profile $\\rho_{\\mathrm{B}}^{\\text{ref}}(z; z_0)$ is a step function defined by the estimated bulk densities:\n$$ \\rho_{\\mathrm{B}}^{\\text{ref}}(z; z_0) = \\begin{cases} \\hat{\\rho}_{\\mathrm{B}}^\\ell  \\text{if } z  z_0 \\\\ \\hat{\\rho}_{\\mathrm{B}}^v  \\text{if } z \\ge z_0 \\end{cases} $$\nSubstituting this into the integral condition and solving for $z_0$:\n$$ \\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz = \\int_{-L/2}^{z_0} \\hat{\\rho}_{\\mathrm{B}}^\\ell dz + \\int_{z_0}^{L/2} \\hat{\\rho}_{\\mathrm{B}}^v dz $$\n$$ \\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz = \\hat{\\rho}_{\\mathrm{B}}^\\ell (z_0 + L/2) + \\hat{\\rho}_{\\mathrm{B}}^v (L/2 - z_0) $$\nRearranging to solve for $z_0$ gives:\n$$ z_0 = \\frac{\\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz - \\frac{L}{2}(\\hat{\\rho}_{\\mathrm{B}}^\\ell + \\hat{\\rho}_{\\mathrm{B}}^v)}{\\hat{\\rho}_{\\mathrm{B}}^\\ell - \\hat{\\rho}_{\\mathrm{B}}^v} $$\nThe integral is approximated using the binned data: $\\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz \\approx \\sum_{k=0}^{N-1} \\rho_{\\mathrm{B}}(z_k) \\Delta z$.\n\n**Step 6: Computing the Solute Surface Excess, $\\Gamma_{\\mathrm{A}}$**\n\nWith $z_0$ determined, the solute surface excess $\\Gamma_{\\mathrm{A}}$ is calculated using the same principle. $\\Gamma_{\\mathrm{A}}$ is the integral of the deviation of the solute density profile from its corresponding reference profile, which also switches at $z_0$.\n$$ \\Gamma_{\\mathrm{A}} = \\int_{-L/2}^{L/2} [\\rho_{\\mathrm{A}}(z) - \\rho_{\\mathrm{A}}^{\\text{ref}}(z; z_0)] dz $$\nwith $\\rho_{\\mathrm{A}}^{\\text{ref}}(z; z_0)$ defined analogously to that of the solvent. The computation must be performed using the discretized profile $\\{\\rho_{\\mathrm{A}}(z_k)\\}$ and must meticulously handle the bin that is partitioned by $z_0$.\n\nLet bin $j$ be the bin that contains $z_0$, such that its boundaries are $z_j^{\\text{start}} \\le z_0  z_j^{\\text{end}}$. The total excess $\\Gamma_{\\mathrm{A}}$ is the sum of contributions from all bins.\nFor bins $k  j$ (entirely in the liquid region), the contribution is $(\\rho_{\\mathrm{A}}(z_k) - \\hat{\\rho}_{\\mathrm{A}}^\\ell) \\Delta z$.\nFor bins $k  j$ (entirely in the vapor region), the contribution is $(\\rho_{\\mathrm{A}}(z_k) - \\hat{\\rho}_{\\mathrm{A}}^v) \\Delta z$.\nFor the split bin $j$, we partition the integral:\n$$ \\text{Contribution}_j = \\int_{z_j^{\\text{start}}}^{z_0} (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^\\ell) dz + \\int_{z_0}^{z_j^{\\text{end}}} (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^v) dz $$\n$$ \\text{Contribution}_j = (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^\\ell)(z_0 - z_j^{\\text{start}}) + (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^v)(z_j^{\\text{end}} - z_0) $$\nThe total surface excess $\\Gamma_{\\mathrm{A}}$ is the sum of these contributions over all $N$ bins. This procedure correctly implements numerical quadrature over the binned data as required.\n\nThe algorithm as described is implemented for each test case to yield the final results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.ndimage import gaussian_filter1d\n\ndef solve():\n    \"\"\"\n    Main function to solve for solute surface excess for all test cases.\n    \"\"\"\n    \n    # Define physical and numerical constants\n    L = 10.0  # Domain length in nm\n    rho_B_l, rho_B_v = 33.0, 0.0  # Solvent densities in nm^-3\n    rho_A_l, rho_A_v = 0.0020, 0.0003  # Solute densities in nm^-3\n    w = 0.3  # Intrinsic interfacial width in nm\n    sigma_ads = 0.2  # Adsorption Gaussian width in nm\n    \n    # Define the test cases\n    test_cases = [\n        # (dz, sigma_cw, A_ads)\n        (0.02, 0.10, 0.05),   # Test 1\n        (0.005, 0.10, 0.05),  # Test 2\n        (0.10, 0.10, 0.05),   # Test 3\n        (0.02, 0.30, 0.05),   # Test 4\n        (0.02, 0.10, 0.00),   # Test 5\n    ]\n\n    def solve_single_case(dz, sigma_cw, A_ads):\n        \"\"\"\n        Computes the solute surface excess for a single set of parameters.\n        \"\"\"\n        # 1. Construct continuous intrinsic profiles on a fine grid\n        dz_fine = 0.001\n        # Extend the grid to handle convolution accurately at the boundaries\n        padding = 8 * max(w, sigma_cw, sigma_ads)\n        fine_domain_size = L + 2 * padding\n        z_fine = np.arange(-fine_domain_size / 2, fine_domain_size / 2, dz_fine)\n\n        tanh_term = np.tanh(z_fine / (2 * w))\n        rho_B_int = (rho_B_l + rho_B_v) / 2 - (rho_B_l - rho_B_v) / 2 * tanh_term\n        rho_A_int_base = (rho_A_l + rho_A_v) / 2 - (rho_A_l - rho_A_v) / 2 * tanh_term\n        \n        adsorption_term = A_ads * np.exp(-z_fine**2 / (2 * sigma_ads**2))\n        rho_A_int = rho_A_int_base + adsorption_term\n\n        # 2. Incorporate capillary wave broadening (Convolution)\n        sigma_pixels = sigma_cw / dz_fine\n        rho_B_conv = gaussian_filter1d(rho_B_int, sigma_pixels, mode='nearest')\n        rho_A_conv = gaussian_filter1d(rho_A_int, sigma_pixels, mode='nearest')\n\n        # 3. Emulate MD binning\n        N = int(round(L / dz))\n        bin_edges = np.linspace(-L / 2, L / 2, N + 1)\n        \n        rho_B_binned = np.zeros(N)\n        rho_A_binned = np.zeros(N)\n        \n        fine_coords_map = np.floor((z_fine - bin_edges[0]) / dz).astype(int)\n        \n        for i in range(N):\n            mask = (fine_coords_map == i)\n            if np.any(mask):\n                rho_B_binned[i] = np.mean(rho_B_conv[mask])\n                rho_A_binned[i] = np.mean(rho_A_conv[mask])\n            else: # Fallback for very coarse bins, though not expected here\n                z_center = (bin_edges[i] + bin_edges[i+1]) / 2\n                rho_B_binned[i] = np.interp(z_center, z_fine, rho_B_conv)\n                rho_A_binned[i] = np.interp(z_center, z_fine, rho_A_conv)\n\n\n        # 4. Estimate bulk reference densities\n        M = int(0.1 * N)\n        if M  1: M = 1\n        \n        hat_rho_B_l = np.mean(rho_B_binned[:M])\n        hat_rho_B_v = np.mean(rho_B_binned[-M:])\n        hat_rho_A_l = np.mean(rho_A_binned[:M])\n        hat_rho_A_v = np.mean(rho_A_binned[-M:])\n\n        # 5. Determine Gibbs surface location z0\n        integral_rho_B = np.sum(rho_B_binned) * dz\n        denominator = hat_rho_B_l - hat_rho_B_v\n        if abs(denominator)  1e-9:\n            z0 = 0.0\n        else:\n            numerator = integral_rho_B - (L / 2) * (hat_rho_B_l + hat_rho_B_v)\n            z0 = numerator / denominator\n\n        # 6. Compute solute surface excess Gamma_A\n        gamma_A = 0.0\n        \n        # Find index j of the bin containing z0\n        # searchsorted returns the index where z0 would be inserted to maintain order\n        # If z0 is in bin j, bin_edges[j] = z0  bin_edges[j+1]\n        j = np.searchsorted(bin_edges, z0, side='right') - 1\n        j = np.clip(j, 0, N - 1)\n        \n        # Sum contributions from bins fully to the left of the split bin\n        if j > 0:\n            gamma_A += np.sum(rho_A_binned[:j] - hat_rho_A_l) * dz\n\n        # Sum contributions from bins fully to the right of the split bin\n        if j  N - 1:\n            gamma_A += np.sum(rho_A_binned[j+1:] - hat_rho_A_v) * dz\n            \n        # Add contribution from the split bin j\n        bin_start, bin_end = bin_edges[j], bin_edges[j+1]\n        gamma_A += (rho_A_binned[j] - hat_rho_A_l) * (z0 - bin_start)\n        gamma_A += (rho_A_binned[j] - hat_rho_A_v) * (bin_end - z0)\n\n        return gamma_A\n\n    results = []\n    for case in test_cases:\n        dz, sigma_cw, A_ads = case\n        result = solve_single_case(dz, sigma_cw, A_ads)\n        results.append(result)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join([f'{r:.8f}' for r in results])}]\")\n\nsolve()\n```", "id": "2772248"}]}