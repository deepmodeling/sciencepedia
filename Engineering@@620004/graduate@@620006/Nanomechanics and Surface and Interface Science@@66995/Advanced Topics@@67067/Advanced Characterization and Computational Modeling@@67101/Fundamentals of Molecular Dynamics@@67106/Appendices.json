{"hands_on_practices": [{"introduction": "In large-scale simulations, calculating all pairwise interactions is computationally prohibitive, so intermolecular potentials are typically truncated at a cutoff distance $r_c$. This practical shortcut introduces a systematic error in the calculated energy and pressure. This practice [@problem_id:2771807] guides you through the fundamental derivation of 'tail corrections,' which analytically account for the neglected long-range interactions, thereby bridging the gap between the truncated model and the full physical system.", "problem": "Consider a homogeneous, isotropic fluid of number density $\\rho$ whose atoms interact via the Lennard–Jones pair potential $u(r)=4\\epsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{12}-\\left(\\frac{\\sigma}{r}\\right)^{6}\\right]$. In a Molecular Dynamics (MD) simulation, suppose the potential is truncated (but not shifted) at a finite cutoff $r_c$, that is, interactions for $r>r_c$ are neglected. Assume that for separations beyond the cutoff the radial distribution function satisfies $g(r)=1$ for $r \\ge r_c$. \n\nStarting from first principles appropriate to classical statistical mechanics and nanomechanics—namely, (i) the definition of the configurational potential energy as a sum over pair interactions and its continuum representation for a homogeneous fluid, and (ii) the mechanical (Clausius) virial expression for the pressure—derive closed-form expressions for the long-range tail corrections that must be added to the truncated system to estimate the full, untruncated values:\n- the missing configurational potential energy per particle $\\Delta U/N$ due to neglecting $r>r_c$,\n- the missing configurational (virial) contribution to the pressure $\\Delta p$ due to neglecting $r>r_c$.\n\nExpress your final answers symbolically in terms of $\\rho$, $\\epsilon$, $\\sigma$, and $r_c$ only. Provide both results as a single row vector $\\left[\\Delta U/N, \\Delta p\\right]$. Do not include units in your final boxed answer.", "solution": "The problem as stated is subjected to validation.\n\nGivens are extracted verbatim:\n- A homogeneous, isotropic fluid.\n- Number density: $\\rho$.\n- Pair potential: $u(r)=4\\epsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{12}-\\left(\\frac{\\sigma}{r}\\right)^{6}\\right]$.\n- Potential is truncated at a cutoff $r_{c}$.\n- Radial distribution function $g(r)=1$ for $r\\ge r_{c}$.\n- Task: derive long-range tail corrections for potential energy per particle ($\\Delta U/N$) and pressure ($\\Delta p$).\n- Required method: derivation from first principles, specifically the continuum representation of configurational potential energy and the Clausius virial expression for pressure.\n- Final answer dependency: must be in terms of $\\rho$, $\\epsilon$, $\\sigma$, and $r_{c}$.\n\nValidation verdict:\nThe problem is scientifically grounded, well-posed, and objective. It is a standard derivation in statistical mechanics and molecular simulation, resting on fundamental principles (Lennard-Jones potential, radial distribution function, virial theorem). The assumptions, such as $g(r)=1$ for $r \\ge r_{c}$, are physically reasonable approximations used for this specific purpose. The problem is self-contained, consistent, and requires a non-trivial but standard application of established theory. It does not violate any of the specified invalidity criteria. Therefore, the problem is valid and a solution will be provided.\n\nThe derivation proceeds from the fundamental principles of classical statistical mechanics as requested.\n\nFirst, we derive the tail correction for the configurational potential energy per particle, $\\Delta U/N$.\nThe total configurational potential energy $U$ for a system of $N$ particles in a volume $V$ with number density $\\rho = N/V$ can be expressed as an integral over the pair potential $u(r)$ weighted by the radial distribution function $g(r)$:\n$$U = \\frac{N}{2} \\int_{V} \\rho g(r) u(r) d\\mathbf{r} = \\frac{N\\rho}{2} \\int_0^\\infty u(r) g(r) 4\\pi r^2 dr$$\nThe potential energy per particle is therefore:\n$$\\frac{U}{N} = 2\\pi\\rho \\int_0^\\infty u(r) g(r) r^2 dr$$\nIn a simulation with a potential cutoff at $r_c$, the calculated energy $U_{trunc}$ only includes interactions for $r \\le r_c$. The tail correction, $\\Delta U$, is the contribution from interactions for $r > r_c$:\n$$\\frac{\\Delta U}{N} = 2\\pi\\rho \\int_{r_c}^\\infty u(r) g(r) r^2 dr$$\nUsing the provided assumption that $g(r)=1$ for $r \\ge r_c$, this simplifies to:\n$$\\frac{\\Delta U}{N} = 2\\pi\\rho \\int_{r_c}^\\infty u(r) r^2 dr$$\nWe now substitute the Lennard-Jones potential, $u(r)=4\\epsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{12}-\\left(\\frac{\\sigma}{r}\\right)^{6}\\right]$:\n$$\\frac{\\Delta U}{N} = 2\\pi\\rho \\int_{r_c}^\\infty 4\\epsilon\\left[\\sigma^{12}r^{-12} - \\sigma^6 r^{-6}\\right] r^2 dr$$\n$$\\frac{\\Delta U}{N} = 8\\pi\\rho\\epsilon \\int_{r_c}^\\infty \\left( \\sigma^{12}r^{-10} - \\sigma^6 r^{-4} \\right) dr$$\nPerforming the integration:\n$$\\frac{\\Delta U}{N} = 8\\pi\\rho\\epsilon \\left[ \\sigma^{12}\\frac{r^{-9}}{-9} - \\sigma^6 \\frac{r^{-3}}{-3} \\right]_{r_c}^\\infty$$\n$$\\frac{\\Delta U}{N} = 8\\pi\\rho\\epsilon \\left[ \\left( \\lim_{r\\to\\infty} \\left( -\\frac{\\sigma^{12}}{9r^9} + \\frac{\\sigma^6}{3r^3} \\right) \\right) - \\left( -\\frac{\\sigma^{12}}{9r_c^9} + \\frac{\\sigma^6}{3r_c^3} \\right) \\right]$$\n$$\\frac{\\Delta U}{N} = 8\\pi\\rho\\epsilon \\left[ 0 - \\left( -\\frac{\\sigma^{12}}{9r_c^9} + \\frac{\\sigma^6}{3r_c^3} \\right) \\right]$$\n$$\\frac{\\Delta U}{N} = 8\\pi\\rho\\epsilon \\left( \\frac{\\sigma^{12}}{9r_c^9} - \\frac{\\sigma^6}{3r_c^3} \\right)$$\nFor clarity, we can factor this expression:\n$$\\frac{\\Delta U}{N} = \\frac{8\\pi\\rho\\epsilon\\sigma^3}{3} \\left[ \\frac{1}{3}\\left(\\frac{\\sigma}{r_c}\\right)^9 - \\left(\\frac{\\sigma}{r_c}\\right)^3 \\right]$$\n\nSecond, we derive the tail correction for the pressure, $\\Delta p$.\nThe pressure $p$ is given by the virial theorem: $p = \\rho k_B T + p_{conf}$, where $k_B T$ is the kinetic contribution and $p_{conf}$ is the configurational contribution from intermolecular forces. The configurational term is derived from the Clausius virial, $W = -\\frac{1}{2} \\sum_{i \\neq j} r_{ij} \\frac{du(r_{ij})}{dr_{ij}}$:\n$$p_{conf} = \\frac{\\langle W \\rangle}{3V} = -\\frac{1}{6V} \\left\\langle \\sum_{i \\neq j} r_{ij} \\frac{du(r_{ij})}{dr_{ij}} \\right\\rangle$$\nIn the continuum limit for a homogeneous fluid, this becomes:\n$$p_{conf} = -\\frac{\\rho^2}{6} \\int_0^\\infty r \\frac{du(r)}{dr} g(r) 4\\pi r^2 dr = -\\frac{2\\pi\\rho^2}{3} \\int_0^\\infty r^3 \\frac{du(r)}{dr} g(r) dr$$\nThe tail correction $\\Delta p$ is the contribution to this integral from distances $r > r_c$. Using again the assumption $g(r)=1$ for $r \\ge r_c$:\n$$\\Delta p = -\\frac{2\\pi\\rho^2}{3} \\int_{r_c}^\\infty r^3 \\frac{du(r)}{dr} dr$$\nWe must first find the derivative of the Lennard-Jones potential:\n$$\\frac{du(r)}{dr} = 4\\epsilon \\frac{d}{dr} \\left( \\sigma^{12}r^{-12} - \\sigma^6 r^{-6} \\right) = 4\\epsilon \\left( -12\\sigma^{12}r^{-13} + 6\\sigma^6 r^{-7} \\right)$$\nSubstituting this into the integral for $\\Delta p$:\n$$\\Delta p = -\\frac{2\\pi\\rho^2}{3} \\int_{r_c}^\\infty r^3 \\cdot 4\\epsilon \\left( -12\\sigma^{12}r^{-13} + 6\\sigma^6 r^{-7} \\right) dr$$\n$$\\Delta p = -\\frac{8\\pi\\rho^2\\epsilon}{3} \\int_{r_c}^\\infty \\left( -12\\sigma^{12}r^{-10} + 6\\sigma^6 r^{-4} \\right) dr$$\nWe perform the integration:\n$$\\Delta p = -\\frac{8\\pi\\rho^2\\epsilon}{3} \\left[ -12\\sigma^{12}\\frac{r^{-9}}{-9} + 6\\sigma^6 \\frac{r^{-3}}{-3} \\right]_{r_c}^\\infty$$\n$$\\Delta p = -\\frac{8\\pi\\rho^2\\epsilon}{3} \\left[ \\frac{4}{3}\\sigma^{12}r^{-9} - 2\\sigma^6 r^{-3} \\right]_{r_c}^\\infty$$\n$$\\Delta p = -\\frac{8\\pi\\rho^2\\epsilon}{3} \\left[ \\left( \\lim_{r\\to\\infty} \\left( \\frac{4\\sigma^{12}}{3r^9} - \\frac{2\\sigma^6}{r^3} \\right) \\right) - \\left( \\frac{4\\sigma^{12}}{3r_c^9} - \\frac{2\\sigma^6}{r_c^3} \\right) \\right]$$\n$$\\Delta p = -\\frac{8\\pi\\rho^2\\epsilon}{3} \\left[ 0 - \\left( \\frac{4\\sigma^{12}}{3r_c^9} - \\frac{2\\sigma^6}{r_c^3} \\right) \\right]$$\n$$\\Delta p = \\frac{8\\pi\\rho^2\\epsilon}{3} \\left( \\frac{4\\sigma^{12}}{3r_c^9} - \\frac{2\\sigma^6}{r_c^3} \\right)$$\nFactoring the expression for clarity:\n$$\\Delta p = \\frac{16\\pi\\rho^2\\epsilon\\sigma^3}{3} \\left[ \\frac{2}{3}\\left(\\frac{\\sigma}{r_c}\\right)^9 - \\left(\\frac{\\sigma}{r_c}\\right)^3 \\right]$$\nThe derived expressions for $\\Delta U/N$ and $\\Delta p$ are the required closed-form tail corrections.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{8\\pi\\rho\\epsilon\\sigma^3}{3} \\left[ \\frac{1}{3}\\left(\\frac{\\sigma}{r_c}\\right)^9 - \\left(\\frac{\\sigma}{r_c}\\right)^3 \\right] & \\frac{16\\pi\\rho^2\\epsilon\\sigma^3}{3} \\left[ \\frac{2}{3}\\left(\\frac{\\sigma}{r_c}\\right)^9 - \\left(\\frac{\\sigma}{r_c}\\right)^3 \\right]\n\\end{pmatrix}\n}\n$$", "id": "2771807"}, {"introduction": "To increase computational efficiency, molecular dynamics simulations often remove the fastest motions, such as bond vibrations, by treating bonds as rigid constraints. The SHAKE algorithm is a cornerstone method for enforcing these geometric constraints, derived from Gauss's principle of least constraint. This exercise [@problem_id:2771888] offers a deep dive into the mathematical formulation of SHAKE, exploring its iterative nature, convergence criteria, and computational scaling, which are essential for understanding and implementing robust simulation protocols.", "problem": "Consider a system of $N$ point particles with positions $\\mathbf{r} \\in \\mathbb{R}^{3N}$, masses collected in a diagonal mass matrix $\\mathbf{M} = \\mathrm{diag}(m_1 \\mathbf{I}_3, \\dots, m_N \\mathbf{I}_3)$, and forces $\\mathbf{F}(\\mathbf{r})$ arising from a differentiable potential. The equations of motion are Newton’s equations, $\\mathbf{M} \\ddot{\\mathbf{r}} = \\mathbf{F}(\\mathbf{r})$. A set of $C$ holonomic, time-independent bond-length constraints is imposed between selected pairs $\\{(i_\\alpha, j_\\alpha)\\}_{\\alpha=1}^C$, with constraint functions\n$g_\\alpha(\\mathbf{r}) = \\|\\mathbf{r}_{i_\\alpha} - \\mathbf{r}_{j_\\alpha}\\|^2 - d_\\alpha^2 = 0$, for $\\alpha = 1, \\dots, C$, where $d_\\alpha > 0$ are prescribed bond lengths. Let $\\mathbf{g}(\\mathbf{r}) = (g_1(\\mathbf{r}), \\dots, g_C(\\mathbf{r}))^\\top$ and let $\\mathbf{J}(\\mathbf{r}) = \\partial \\mathbf{g}(\\mathbf{r}) / \\partial \\mathbf{r}$ denote the constraint Jacobian. The system is integrated using the velocity Verlet method with time step $\\Delta t > 0$, producing an unconstrained position update $\\mathbf{r}'$ that typically violates the constraints. The classical SHAKE algorithm is then used to correct $\\mathbf{r}'$ to a constrained position $\\mathbf{r}^{n+1}$ satisfying $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$.\n\nWhich option most accurately states the SHAKE position-correction formulation in terms of Lagrange multipliers, and correctly characterizes both the convergence properties of the standard iterative SHAKE procedure for coupled constraints and its computational scaling with respect to the number of constraints $C$ in large systems typical of nanomechanics and surface science?\n\nA. The SHAKE position correction can be written as a mass-weighted projection of $\\mathbf{r}'$ onto the constraint manifold: there exists $\\boldsymbol{\\lambda} \\in \\mathbb{R}^C$ such that $\\mathbf{r}^{n+1} = \\mathbf{r}' + \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}$, with $\\boldsymbol{\\lambda}$ chosen so that $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$. Linearizing the constraints about $\\mathbf{r}'$ yields the linear system $\\big(\\mathbf{J}(\\mathbf{r}') \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top\\big)\\boldsymbol{\\lambda} = -\\mathbf{g}(\\mathbf{r}')$ up to higher-order terms, which can be solved either directly or by Gauss–Seidel-type sequential updates per constraint. For sufficiently small $\\Delta t$ and well-conditioned, locally coupled constraints (e.g., fixed bond lengths in molecules), the standard SHAKE iterations converge linearly, with a rate governed by the spectral radius of the iteration matrix; if constraints are strongly coupled or $\\Delta t$ is too large relative to the constrained vibrational time scales, convergence degrades or may fail. A direct dense solve costs $\\mathcal{O}(C^3)$ per step, whereas the usual sequential SHAKE iterations cost $\\mathcal{O}(C)$ per sweep, and for fixed iteration counts weakly dependent on system size, the overall scaling is approximately $\\mathcal{O}(C)$.\n\nB. SHAKE operates only on velocities, leaving positions unchanged; the constraint enforcement is equivalent to applying Newton’s method to the constraint equations, thus exhibiting quadratic convergence independently of $\\Delta t$. Because each constraint update is independent, the overall per-step complexity is $\\mathcal{O}(\\log C)$ via a tree reduction.\n\nC. The Lagrange multipliers satisfy $\\big(\\mathbf{J}(\\mathbf{r}') \\mathbf{M} \\mathbf{J}(\\mathbf{r}')^\\top\\big)\\boldsymbol{\\lambda} = \\mathbf{g}(\\mathbf{r}')$ and the corrected positions are $\\mathbf{r}^{n+1} = \\mathbf{r}' - \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}$. Since constraints are holonomic, SHAKE converges unconditionally for any $\\Delta t$, and its cost is always $\\mathcal{O}(C^2)$ due to pairwise couplings.\n\nD. SHAKE enforces all constraints exactly in a single sweep regardless of coupling by updating all constrained pairs in parallel without iteration. Using a Fast Fourier Transform-based solver for the multipliers, the per-step cost is $\\mathcal{O}(1)$, independent of $C$, and the method is unconditionally stable with respect to $\\Delta t$.\n\nSelect the single best option.", "solution": "The problem statement will now be subjected to rigorous validation.\n\n## Problem Validation\n\n### Step 1: Extract Givens\nThe problem provides the following information:\n- A system of $N$ point particles.\n- Particle positions $\\mathbf{r} \\in \\mathbb{R}^{3N}$.\n- A diagonal mass matrix $\\mathbf{M} = \\mathrm{diag}(m_1 \\mathbf{I}_3, \\dots, m_N \\mathbf{I}_3)$.\n- Forces $\\mathbf{F}(\\mathbf{r})$ derived from a differentiable potential.\n- Equations of motion: $\\mathbf{M} \\ddot{\\mathbf{r}} = \\mathbf{F}(\\mathbf{r})$.\n- A set of $C$ holonomic, time-independent bond-length constraints.\n- The constraint pairs are identified as $\\{(i_\\alpha, j_\\alpha)\\}_{\\alpha=1}^C$.\n- The constraint functions are given by $g_\\alpha(\\mathbf{r}) = \\|\\mathbf{r}_{i_\\alpha} - \\mathbf{r}_{j_\\alpha}\\|^2 - d_\\alpha^2 = 0$, where $d_\\alpha > 0$ are prescribed constants.\n- The vector of constraint functions is $\\mathbf{g}(\\mathbf{r}) = (g_1(\\mathbf{r}), \\dots, g_C(\\mathbf{r}))^\\top$.\n- The constraint Jacobian is defined as $\\mathbf{J}(\\mathbf{r}) = \\partial \\mathbf{g}(\\mathbf{r}) / \\partial \\mathbf{r}$.\n- The system is integrated with the velocity Verlet method using a time step $\\Delta t > 0$.\n- An unconstrained position update $\\mathbf{r}'$ is produced, which does not satisfy the constraints.\n- The SHAKE algorithm corrects $\\mathbf{r}'$ to a new position $\\mathbf{r}^{n+1}$ such that $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$.\n- The question asks for the most accurate statement regarding the SHAKE position-correction formulation, convergence properties, and computational scaling.\n\n### Step 2: Validate Using Extracted Givens\nThe problem statement is analyzed against the validation criteria:\n- **Scientifically Grounded**: The problem is set within the standard framework of classical molecular dynamics simulations. The use of Newton's equations, holonomic constraints, Lagrange multipliers, the velocity Verlet integrator, and the SHAKE algorithm are all fundamental and well-established concepts in computational physics and chemistry. The formulation is correct.\n- **Well-Posed**: The problem is structured as a multiple-choice question requiring the identification of the correct theoretical and practical description of the SHAKE algorithm. It is a question of fact and established theory, not of open research. A unique and correct answer can be determined.\n- **Objective**: The language used is precise, technical, and devoid of subjectivity or ambiguity.\n- **Flaws**:\n    1.  **Scientific or Factual Unsoundness**: None. The physical and mathematical setup is sound.\n    2.  **Non-Formalizable or Irrelevant**: None. The problem is directly relevant to the fundamentals of molecular dynamics simulation techniques.\n    3.  **Incomplete or Contradictory Setup**: None. Sufficient information is provided to evaluate the options. The phrasing \"the SHAKE algorithm\" in the context of velocity Verlet is understood to refer to the corresponding constraint correction procedure, often called RATTLE, which consists of a SHAKE-like position correction and a subsequent velocity correction. The question focuses only on the position part.\n    4.  **Unrealistic or Infeasible**: None. The scenario is a standard computational task.\n    5.  **Ill-Posed or Poorly Structured**: None. The question is unambiguous.\n    6.  **Pseudo-Profound, Trivial, Tautological**: None. The question requires a nuanced understanding of the algorithm's derivation, iterative nature, convergence behavior, and computational complexity.\n    7.  **Outside Scientific Verifiability**: None. The statements in the options are verifiable against standard textbooks and scientific literature on molecular simulation.\n\n### Step 3: Verdict and Action\nThe problem is **valid**. A solution will be derived.\n\n## Solution Derivation\n\nThe SHAKE algorithm is designed to satisfy holonomic constraints after a dynamics step that ignores them. Given an unconstrained position update $\\mathbf{r}'$, we seek a corrected position $\\mathbf{r}^{n+1}$ that satisfies $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$. The correction $\\delta\\mathbf{r} = \\mathbf{r}^{n+1} - \\mathbf{r}'$ should be minimal. The \"minimal\" correction principle (a form of Gauss's principle of least constraint) is to minimize the mass-weighted squared displacement, $\\frac{1}{2}\\sum_i m_i \\|\\delta\\mathbf{r}_i\\|^2 = \\frac{1}{2}(\\delta\\mathbf{r})^\\top \\mathbf{M} (\\delta\\mathbf{r})$.\n\nWe must solve the constrained optimization problem:\n$$\n\\text{minimize } \\frac{1}{2} (\\mathbf{r} - \\mathbf{r}')^\\top \\mathbf{M} (\\mathbf{r} - \\mathbf{r}') \\quad \\text{subject to} \\quad \\mathbf{g}(\\mathbf{r}) = \\mathbf{0}\n$$\nThe Lagrangian for this problem is $\\mathcal{L}(\\mathbf{r}, \\boldsymbol{\\lambda}) = \\frac{1}{2}(\\mathbf{r} - \\mathbf{r}')^\\top \\mathbf{M} (\\mathbf{r} - \\mathbf{r}') - \\boldsymbol{\\lambda}^\\top \\mathbf{g}(\\mathbf{r})$, where $\\boldsymbol{\\lambda} \\in \\mathbb{R}^C$ is a vector of Lagrange multipliers. The optimality condition is $\\nabla_\\mathbf{r} \\mathcal{L} = \\mathbf{0}$:\n$$\n\\mathbf{M}(\\mathbf{r} - \\mathbf{r}') - \\left(\\frac{\\partial \\mathbf{g}(\\mathbf{r})}{\\partial \\mathbf{r}}\\right)^\\top \\boldsymbol{\\lambda} = \\mathbf{0}\n$$\nUsing the definition of the Jacobian $\\mathbf{J}(\\mathbf{r}) = \\partial \\mathbf{g}(\\mathbf{r}) / \\partial \\mathbf{r}$, we have:\n$$\n\\mathbf{M}(\\mathbf{r}^{n+1} - \\mathbf{r}') - \\mathbf{J}(\\mathbf{r}^{n+1})^\\top \\boldsymbol{\\lambda} = \\mathbf{0}\n$$\nThis gives the position correction:\n$$\n\\mathbf{r}^{n+1} = \\mathbf{r}' + \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}^{n+1})^\\top \\boldsymbol{\\lambda}\n$$\nThis equation, along with the constraint condition $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$, forms a system of nonlinear equations for $\\mathbf{r}^{n+1}$ and $\\boldsymbol{\\lambda}$.\n\nA standard approach to solve this system is to make a linearizing approximation. We approximate $\\mathbf{J}(\\mathbf{r}^{n+1}) \\approx \\mathbf{J}(\\mathbf{r}')$ and linearize the constraint equation $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$ around $\\mathbf{r}'$:\n$$\n\\mathbf{g}(\\mathbf{r}^{n+1}) \\approx \\mathbf{g}(\\mathbf{r}') + \\mathbf{J}(\\mathbf{r}') (\\mathbf{r}^{n+1} - \\mathbf{r}') = \\mathbf{0}\n$$\nSubstituting the expression for the correction $\\mathbf{r}^{n+1} - \\mathbf{r}' = \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}$ into the linearized constraint equation yields:\n$$\n\\mathbf{g}(\\mathbf{r}') + \\mathbf{J}(\\mathbf{r}') (\\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}) = \\mathbf{0}\n$$\nThis can be rearranged into a linear system for the Lagrange multipliers $\\boldsymbol{\\lambda}$:\n$$\n\\big(\\mathbf{J}(\\mathbf{r}') \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top\\big) \\boldsymbol{\\lambda} = -\\mathbf{g}(\\mathbf{r}')\n$$\nOnce $\\boldsymbol{\\lambda}$ is found, the positions are updated as $\\mathbf{r}^{n+1} = \\mathbf{r}' + \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}$.\nNote that because we linearized, the resulting $\\mathbf{r}^{n+1}$ will not satisfy $\\mathbf{g}(\\mathbf{r}^{n+1})=\\mathbf{0}$ exactly. This entire process must be iterated. The standard SHAKE algorithm is an iterative component-wise version of this. It processes each constraint $\\alpha=1, \\dots, C$ sequentially, updating the positions of the involved particles to satisfy $g_\\alpha = 0$, and repeats this process over all constraints (a \"sweep\") until all constraints are satisfied to a specified tolerance. This is a nonlinear Gauss-Seidel-type iterative method.\n\n**Convergence**: Such iterative methods are not guaranteed to converge. Convergence depends on the spectral radius of the iteration matrix being less than $1$. In physical terms, convergence depends on the time step $\\Delta t$ being sufficiently small and the constraints not being pathologically coupled or under excessive strain. The convergence is linear, not quadratic.\n\n**Computational Scaling**:\n1.  **Direct Solve**: One could form the $C \\times C$ matrix $\\mathbf{A} = \\mathbf{J} \\mathbf{M}^{-1} \\mathbf{J}^\\top$ and solve the linear system $\\mathbf{A}\\boldsymbol{\\lambda} = -\\mathbf{g}$ directly. Forming this dense matrix and solving it (e.g., with LU decomposition) scales as $\\mathcal{O}(C^3)$.\n2.  **Iterative Solve (Standard SHAKE)**: The matrix $\\mathbf{A}$ is typically sparse for bond constraints in large molecules. The standard SHAKE algorithm exploits this by not forming $\\mathbf{A}$ at all. It iterates constraint by constraint. Each update for a single constraint is an $\\mathcal{O}(1)$ operation. A full sweep over all $C$ constraints costs $\\mathcal{O}(C)$. If the number of sweeps for convergence, $k_{iter}$, is small and does not strongly depend on $C$ (a common observation for polymers and biomolecules), the total cost is approximately $\\mathcal{O}(C)$.\n\n## Option-by-Option Analysis\n\n**A. The SHAKE position correction can be written as a mass-weighted projection of $\\mathbf{r}'$ onto the constraint manifold: there exists $\\boldsymbol{\\lambda} \\in \\mathbb{R}^C$ such that $\\mathbf{r}^{n+1} = \\mathbf{r}' + \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}$, with $\\boldsymbol{\\lambda}$ chosen so that $\\mathbf{g}(\\mathbf{r}^{n+1}) = \\mathbf{0}$. Linearizing the constraints about $\\mathbf{r}'$ yields the linear system $\\big(\\mathbf{J}(\\mathbf{r}') \\mathbf{M}^{-1} \\mathbf{J}(\\mathbf{r}')^\\top\\big)\\boldsymbol{\\lambda} = -\\mathbf{g}(\\mathbf{r}')$ up to higher-order terms, which can be solved either directly or by Gauss–Seidel-type sequential updates per constraint. For sufficiently small $\\Delta t$ and well-conditioned, locally coupled constraints (e.g., fixed bond lengths in molecules), the standard SHAKE iterations converge linearly, with a rate governed by the spectral radius of the iteration matrix; if constraints are strongly coupled or $\\Delta t$ is too large relative to the constrained vibrational time scales, convergence degrades or may fail. A direct dense solve costs $\\mathcal{O}(C^3)$ per step, whereas the usual sequential SHAKE iterations cost $\\mathcal{O}(C)$ per sweep, and for fixed iteration counts weakly dependent on system size, the overall scaling is approximately $\\mathcal{O}(C)$.**\n- The formulation of the correction and the linearized system for $\\boldsymbol{\\lambda}$ are correct, as derived above.\n- The characterization of the standard iterative SHAKE as a Gauss-Seidel-type method is appropriate.\n- The description of linear convergence, a rate dependent on the spectral radius, and failure conditions ($\\Delta t$ too large, strong coupling) is accurate.\n- The analysis of computational scaling, contrasting an $\\mathcal{O}(C^3)$ direct solve with the typical $\\mathcal{O}(C)$ iterative approach, is correct.\n- **Verdict: Correct.**\n\n**B. SHAKE operates only on velocities, leaving positions unchanged; the constraint enforcement is equivalent to applying Newton’s method to the constraint equations, thus exhibiting quadratic convergence independently of $\\Delta t$. Because each constraint update is independent, the overall per-step complexity is $\\mathcal{O}(\\log C)$ via a tree reduction.**\n- \"SHAKE operates only on velocities\" is false. The problem explicitly asks about position correction. RATTLE, the velocity-Verlet version, corrects both positions and velocities. The position correction is fundamental.\n- The standard iterative method is not Newton's method and does not exhibit quadratic convergence. It is linearly convergent.\n- Convergence is not independent of $\\Delta t$.\n- Constraint updates are generally not independent; correcting one can violate another.\n- The $\\mathcal{O}(\\log C)$ complexity claim is incorrect and without a valid basis in this context.\n- **Verdict: Incorrect.**\n\n**C. The Lagrange multipliers satisfy $\\big(\\mathbf{J}(\\mathbf{r}') \\mathbf{M} \\mathbf{J}(\\mathbf{r}')^\\top\\big)\\boldsymbol{\\lambda} = \\mathbf{g}(\\mathbf{r}')$ and the corrected positions are $\\mathbf{r}^{n+1} = \\mathbf{r}' - \\mathbf{J}(\\mathbf{r}')^\\top \\boldsymbol{\\lambda}$. Since constraints are holonomic, SHAKE converges unconditionally for any $\\Delta t$, and its cost is always $\\mathcal{O}(C^2)$ due to pairwise couplings.**\n- The linear system for $\\boldsymbol{\\lambda}$ is incorrect. It should contain $\\mathbf{M}^{-1}$, not $\\mathbf{M}$. The right-hand side should be $-\\mathbf{g}(\\mathbf{r}')$.\n- The position update is incorrect. It is missing the mass-weighting factor $\\mathbf{M}^{-1}$.\n- The claim of \"unconditional convergence for any $\\Delta t$\" is false. Convergence is highly conditional on $\\Delta t$.\n- The cost is not \"always $\\mathcal{O}(C^2)$\". The standard iterative method is approximately $\\mathcal{O}(C)$.\n- **Verdict: Incorrect.**\n\n**D. SHAKE enforces all constraints exactly in a single sweep regardless of coupling by updating all constrained pairs in parallel without iteration. Using a Fast Fourier Transform-based solver for the multipliers, the per-step cost is $\\mathcal{O}(1)$, independent of $C$, and the method is unconditionally stable with respect to $\\Delta t$.**\n- \"Enforces all constraints exactly in a single sweep regardless of coupling... without iteration\" is false. This is precisely what SHAKE does *not* do. Iteration is necessary due to constraint coupling.\n- Using an \"FFT-based solver\" is irrelevant and incorrect for this type of problem. FFT solvers apply to different structures (e.g., uniform grids).\n- The \"per-step cost is $\\mathcal{O}(1)$\" is physically and algorithmically impossible. The cost must scale with the number of constraints, $C$.\n- The claim of unconditional stability with respect to $\\Delta t$ is false.\n- **Verdict: Incorrect.**\n\nBased on this detailed analysis, Option A is the only one that presents a correct and comprehensive description of the SHAKE position-correction algorithm.", "answer": "$$\\boxed{A}$$", "id": "2771888"}, {"introduction": "The introduction of constraints, while computationally advantageous, fundamentally alters the system's dynamics by reducing its number of degrees of freedom. This has a direct impact on the calculation of thermodynamic properties, most notably the temperature, which is related to the average kinetic energy per degree of freedom by the equipartition theorem. This problem [@problem_id:2771930] provides crucial hands-on experience in correctly determining the number of active degrees of freedom and calculating the instantaneous temperature in a realistic, constrained molecular system.", "problem": "A classical Molecular Dynamics (MD) simulation is performed for a fluid of rigid triatomic molecules confined in a cubic simulation cell with periodic boundary conditions. The system evolves under Newton’s equations subject to holonomic constraints that rigidify each molecule, enforced via Lagrange multipliers. The kinetic temperature is monitored using a kinetic-energy-based instantaneous estimator. Starting from the fundamental definitions of kinetic energy, holonomic constraints, and the equilibrium equipartition theorem, explain how constraints reduce the number of independent quadratic velocity modes that contribute to the kinetic temperature. Then, derive a general expression for the instantaneous kinetic temperature estimator $T$ in terms of the instantaneous total kinetic energy $K$, the Boltzmann constant $k_{B}$, and the number of dynamically accessible independent velocity degrees of freedom after accounting for all constraints and any removed integrals of motion.\n\nNext, apply your result to the following physically realistic case relevant to nanomechanics and surface and interface science: there are $N_{\\mathrm{mol}} = 512$ rigid triatomic molecules (each with $3$ atoms) modeled with three independent holonomic constraints per molecule to enforce rigidity. The total linear momentum of the entire system is constrained to zero. At a particular instant, the total kinetic energy computed from the atomistic velocities is $K = 3.800 \\times 10^{-18}$ J. Use $k_{B} = 1.380649 \\times 10^{-23}$ J/K. Compute the instantaneous kinetic temperature $T$ that correctly accounts for the removed degrees of freedom due to both molecular rigidity and the zero–total–linear–momentum condition. Round your answer to four significant figures and express it in Kelvin.", "solution": "The problem is valid as it is scientifically sound, self-contained, and well-posed within the framework of classical statistical mechanics and molecular dynamics. We proceed with the solution.\n\nThe problem requires an explanation of how constraints affect the calculation of kinetic temperature, a derivation of the general temperature estimator, and its application to a specific system.\n\nFirst, we address the conceptual foundation. The total instantaneous kinetic energy $K$ of a system composed of $N$ atoms, each with mass $m_i$ and velocity $\\mathbf{v}_i$, is defined as the sum of the kinetic energies of all atoms:\n$$K = \\sum_{i=1}^{N} \\frac{1}{2} m_i |\\mathbf{v}_i|^2 = \\sum_{i=1}^{N} \\sum_{\\alpha \\in \\{x,y,z\\}} \\frac{1}{2} m_i v_{i\\alpha}^2$$\nThis expression is a sum over $3N$ quadratic terms in the Cartesian velocity components. In the absence of constraints, these $3N$ velocity components would be independent.\n\nHolonomic constraints are equations that restrict the spatial coordinates of the particles, of the form $f_k(\\mathbf{r}_1, \\mathbf{r}_2, \\ldots, \\mathbf{r}_N) = 0$. For these constraints to be maintained throughout the dynamics, their time derivatives must be zero. For time-independent constraints, as is the case for molecular rigidity, this implies:\n$$\\frac{df_k}{dt} = \\sum_{i=1}^{N} \\frac{\\partial f_k}{\\partial \\mathbf{r}_i} \\cdot \\mathbf{v}_i = 0$$\nEach such equation imposes a linear dependency among the atomic velocities, meaning they are no longer independent. Each independent holonomic constraint effectively removes one degree of freedom from the system. The number of independent coordinates needed to specify the system's configuration is thus reduced.\n\nThe equipartition theorem of classical statistical mechanics states that, for a system in thermal equilibrium at an absolute temperature $T$, the average energy associated with each independent quadratic term in the Hamiltonian is equal to $\\frac{1}{2} k_B T$, where $k_B$ is the Boltzmann constant. The kinetic energy is composed of such terms. Because constraints reduce the number of independent velocity components, they also reduce the number of independent quadratic terms that contribute to the total kinetic energy. The total number of these independent kinetic degrees of freedom, denoted $N_{dof}$, is the count of all possible velocity components minus the number of independent constraints acting on them.\n\nThe average total kinetic energy $\\langle K \\rangle$ is therefore related to the temperature by:\n$$\\langle K \\rangle = \\frac{1}{2} N_{dof} k_B T$$\nIn molecular dynamics simulations, an instantaneous kinetic temperature is defined by assuming this relationship holds for the instantaneous kinetic energy $K$:\n$$K = \\frac{1}{2} N_{dof} k_B T$$\nRearranging this equation provides the general expression for the instantaneous kinetic temperature estimator $T$ in terms of the total kinetic energy $K$, the Boltzmann constant $k_B$, and the number of dynamically accessible independent velocity degrees of freedom, $N_{dof}$:\n$$T = \\frac{2K}{N_{dof} k_B}$$\nThe critical step is to correctly determine $N_{dof}$ by accounting for all constraints.\n\nNow, we apply this formula to the specified case. The system consists of $N_{\\mathrm{mol}} = 512$ rigid triatomic molecules.\nThe total number of atoms in the system is $N = N_{\\mathrm{mol}} \\times 3 = 512 \\times 3 = 1536$.\nWithout any constraints, the system would have $3N = 3 \\times 1536 = 4608$ total degrees of freedom, corresponding to the $3$ Cartesian coordinates of each atom.\n\nWe must subtract the degrees of freedom removed by constraints.\n$1$. **Molecular Rigidity Constraints:** Each triatomic molecule is made rigid by $3$ holonomic constraints. A single non-linear triatomic molecule possesses $3$ translational and $3$ rotational degrees of freedom, for a total of $6$. The unconstrained system of $3$ atoms has $3 \\times 3 = 9$ degrees of freedom. Thus, enforcing rigidity removes $9 - 6 = 3$ internal vibrational degrees of freedom per molecule. This matches the problem statement. The total number of degrees of freedom removed by these rigidity constraints is $N_{c, \\text{rigid}} = N_{\\mathrm{mol}} \\times 3 = 512 \\times 3 = 1536$.\n\n$2$. **Total Linear Momentum Constraint:** The total linear momentum of the system is constrained to be zero: $\\mathbf{P} = \\sum_{i=1}^{N} m_i \\mathbf{v}_i = \\mathbf{0}$. This single vector equation corresponds to three independent scalar constraints, one for each Cartesian direction ($P_x=0$, $P_y=0$, $P_z=0$). These constraints remove the $3$ degrees of freedom associated with the translational motion of the entire system's center of mass. So, $N_{c, \\text{momentum}} = 3$.\n\nThe total number of independent velocity degrees of freedom, $N_{dof}$, is calculated by subtracting all constrained degrees of freedom from the initial total:\n$$N_{dof} = 3N - N_{c, \\text{rigid}} - N_{c, \\text{momentum}} = 4608 - 1536 - 3 = 3069$$\n\nNow, we can compute the instantaneous temperature using the given values:\nTotal kinetic energy $K = 3.800 \\times 10^{-18} \\, \\text{J}$.\nBoltzmann constant $k_{B} = 1.380649 \\times 10^{-23} \\, \\text{J/K}$.\n\n$$T = \\frac{2K}{N_{dof} k_B} = \\frac{2 \\times (3.800 \\times 10^{-18})}{(3069) \\times (1.380649 \\times 10^{-23})}$$\n$$T = \\frac{7.600 \\times 10^{-18}}{4.237303181 \\times 10^{-20}} \\, \\text{K}$$\n$$T \\approx 179.3616 \\, \\text{K}$$\nRounding the result to four significant figures as requested gives $T = 179.4 \\, \\text{K}$.", "answer": "$$\\boxed{179.4}$$", "id": "2771930"}]}