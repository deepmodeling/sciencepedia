{"hands_on_practices": [{"introduction": "The cornerstone of quantitative mechanochemistry is understanding how an external force alters a reaction's energy landscape. This practice provides a direct application of the Bell model, the simplest and most fundamental framework for describing force-activated kinetics. By calculating the force required to achieve a specific rate enhancement for a spiropyran mechanophore, you will solidify your understanding of how mechanical work can catalytically lower an activation barrier [@problem_id:2778944].", "problem": "A spiropyran mechanophore is covalently embedded in a polymer backbone and subjected to a constant tensile force along the chain axis during single-molecule pulling. Ab initio constrained calculations provide the scalar projection of the distance from the reactant basin to the transition state along the pulling coordinate as $x^{\\ddagger} = 0.18\\,\\text{nm}$. Assume that under a constant external force the activation free energy for the ring-opening reaction is lowered by the mechanical work performed along the reaction coordinate, and that the pre-exponential factor in transition state theory is not altered by the force. Using transition state theory (TST) and the assumption that the applied force couples linearly to the reaction coordinate, determine the magnitude of the tensile force required to achieve a $10$-fold increase in the ring-opening rate at temperature $T=298\\,\\text{K}$. \n\nExpress your final answer as a single number in nanonewtons (nN). Round your answer to four significant figures.\n\nUse the Boltzmann constant $k_{B} = 1.380649 \\times 10^{-23}\\,\\text{J}\\,\\text{K}^{-1}$. You may assume perfect alignment between the force direction and the reaction coordinate.", "solution": "This problem requires a direct application of the Bell model. The problem statement is validated as scientifically sound; it presents a canonical mechanochemistry problem using a standard theoretical framework with physically realistic parameters. The solution is derived as follows.\n\nThe rate of a chemical reaction, according to Transition State Theory (TST), is described by the Eyring equation. The rate constant, $k$, is given by:\n$$k = A \\exp\\left(-\\frac{\\Delta G^{\\ddagger}}{k_B T}\\right)$$\nwhere $A$ is the pre-exponential factor (which includes terms like $\\frac{k_B T}{h}$ and vibrational partition functions), $\\Delta G^{\\ddagger}$ is the Gibbs free energy of activation, $k_B$ is the Boltzmann constant, and $T$ is the absolute temperature. The problem states that $A$ is constant and not affected by the applied force.\n\nIn the absence of an external force, the rate constant is denoted as $k(0)$:\n$$k(0) = A \\exp\\left(-\\frac{\\Delta G^{\\ddagger}(0)}{k_B T}\\right)$$\nwhere $\\Delta G^{\\ddagger}(0)$ is the activation free energy at zero force.\n\nWhen a constant tensile force $F$ is applied, the problem states that the activation barrier is lowered by the mechanical work done. Assuming a linear coupling between the force and the reaction coordinate, as specified, the force-dependent activation energy $\\Delta G^{\\ddagger}(F)$ is given by the Bell model:\n$$\\Delta G^{\\ddagger}(F) = \\Delta G^{\\ddagger}(0) - F x^{\\ddagger}$$\nHere, $x^{\\ddagger}$ is the distance to the transition state along the reaction coordinate. The work term $F x^{\\ddagger}$ reduces the height of the energy barrier.\n\nThe rate constant in the presence of force, $k(F)$, is therefore:\n$$k(F) = A \\exp\\left(-\\frac{\\Delta G^{\\ddagger}(F)}{k_B T}\\right) = A \\exp\\left(-\\frac{\\Delta G^{\\ddagger}(0) - F x^{\\ddagger}}{k_B T}\\right)$$\nThis can be rewritten as:\n$$k(F) = A \\exp\\left(-\\frac{\\Delta G^{\\ddagger}(0)}{k_B T}\\right) \\exp\\left(\\frac{F x^{\\ddagger}}{k_B T}\\right)$$\nRecognizing that the first part of the expression is $k(0)$, we have:\n$$k(F) = k(0) \\exp\\left(\\frac{F x^{\\ddagger}}{k_B T}\\right)$$\nThe problem requires finding the force $F$ that leads to a $10$-fold increase in the reaction rate. This corresponds to the condition:\n$$\\frac{k(F)}{k(0)} = 10$$\nSubstituting our derived expression for the rate ratio:\n$$10 = \\exp\\left(\\frac{F x^{\\ddagger}}{k_B T}\\right)$$\nTo solve for $F$, we take the natural logarithm of both sides of the equation:\n$$\\ln(10) = \\frac{F x^{\\ddagger}}{k_B T}$$\nIsolating $F$ gives the symbolic expression for the required force:\n$$F = \\frac{k_B T \\ln(10)}{x^{\\ddagger}}$$\nNow, we substitute the given numerical values into this expression. The units must be consistent (SI units).\nGiven:\n- $k_B = 1.380649 \\times 10^{-23}\\,\\text{J}\\,\\text{K}^{-1}$\n- $T = 298\\,\\text{K}$\n- $x^{\\ddagger} = 0.18\\,\\text{nm} = 0.18 \\times 10^{-9}\\,\\text{m}$\n\nFirst, we calculate the thermal energy $k_B T$:\n$$k_B T = (1.380649 \\times 10^{-23}\\,\\text{J}\\,\\text{K}^{-1}) \\times (298\\,\\text{K}) \\approx 4.114334 \\times 10^{-21}\\,\\text{J}$$\nNow, we compute the force $F$:\n$$F = \\frac{(4.114334 \\times 10^{-21}\\,\\text{J}) \\times \\ln(10)}{0.18 \\times 10^{-9}\\,\\text{m}}$$\nUsing the value $\\ln(10) \\approx 2.302585$:\n$$F \\approx \\frac{(4.114334 \\times 10^{-21}) \\times 2.302585}{0.18 \\times 10^{-9}}\\,\\text{N}$$\n$$F \\approx \\frac{9.47346 \\times 10^{-21}}{1.8 \\times 10^{-10}}\\,\\text{N}$$\n$$F \\approx 5.26303 \\times 10^{-11}\\,\\text{N}$$\nThe problem requires the answer to be in units of nanonewtons (nN). We perform the conversion:\n$$1\\,\\text{nN} = 10^{-9}\\,\\text{N}, \\text{so } 1\\,\\text{N} = 10^9\\,\\text{nN}$$\n$$F \\approx (5.26303 \\times 10^{-11}\\,\\text{N}) \\times (10^9\\,\\text{nN}/\\text{N})$$\n$$F \\approx 5.26303 \\times 10^{-2}\\,\\text{nN}$$\n$$F \\approx 0.0526303\\,\\text{nN}$$\nRounding the result to four significant figures gives $0.05263\\,\\text{nN}$.", "answer": "$$\\boxed{0.05263}$$", "id": "2778944"}, {"introduction": "Real-world mechanochemical processes, particularly in polymers and biomolecules, often involve multiple sequential steps rather than a single activation event. This exercise explores such a scenario, combining an entropic loop opening with an energetic bond scission step [@problem_id:2778947]. You will learn to derive the effective transition state distance, $x_{\\text{eff}}^{\\ddagger}(f)$, which emerges as a weighted average of the individual steps' contributions, providing a powerful tool for dissecting complex kinetic data.", "problem": "A single polymer loop must open before a covalent mechanophore bond can undergo scission under tension in a Dynamic Force Spectroscopy (DFS) experiment. The DFS measurement is performed in the constant-force ensemble at absolute temperature $T$. The kinetics consist of two irreversible, sequential steps with a short-lived intermediate and negligible backward rates: (1) entropic loop opening and (2) bond scission. The observed rate is limited by the total mean first-passage time. The applied force is $f$.\n\nModel the entropic loop opening as the release of a contour length $\\Delta L$ from a worm-like chain (WLC) held at force $f$. In the high-force WLC regime (i.e., $f \\ell_p \\gg k_B T$) the extension per unit contour length at fixed force $f$ is approximated by\n$$\n\\xi(f) \\approx 1 - \\frac{1}{2} \\left(\\frac{k_B T}{f \\,\\ell_p}\\right)^{1/2},\n$$\nwhere $\\ell_p$ is the persistence length and $k_B$ is the Boltzmann constant. Treat the distance to the transition state for the entropic opening step as the mechanical extension gained by releasing $\\Delta L$ at force $f$, namely $x_e(f) = \\xi(f)\\,\\Delta L$. Treat the bond scission step as an energetic barrier with a force-independent distance to transition state $x_b$.\n\nAdopt transition state theory with Kramers-Bell force activation for each forward step: for step $i$ with activation free energy $\\Delta G_i^{\\ddagger}(f)$, $k_i(f) \\propto \\exp\\!\\left[-\\beta \\Delta G_i^{\\ddagger}(f)\\right]$ and $\\frac{d}{df}\\ln k_i(f) = \\beta\\,x_i^{\\ddagger}(f)$, where $\\beta = 1/(k_B T)$ and $x_i^{\\ddagger}(f) = -\\frac{\\partial \\Delta G_i^{\\ddagger}}{\\partial f}$ is the mechanical projection distance to the transition state. Let the zero-force forward rates be $k_1(0) = k_1^0$ and $k_2(0) = k_2^0$.\n\nUsing only these foundations, derive an expression for the effective distance to the transition state $x_{\\text{eff}}^{\\ddagger}(f)$ that would be inferred from the slope of $\\ln k_{\\text{eff}}(f)$ with respect to $f$ in DFS, where $k_{\\text{eff}}(f)$ is the observed overall forward rate for the two-step sequence. Then evaluate $x_{\\text{eff}}^{\\ddagger}(f)$ numerically at the specified conditions:\n- $T = 298\\,\\text{K}$,\n- $\\ell_p = 0.80\\,\\text{nm}$,\n- $\\Delta L = 1.00\\,\\text{nm}$,\n- $x_b = 0.25\\,\\text{nm}$,\n- $f = 20.0\\,\\text{pN}$,\n- $k_1^0 = 1.0\\,\\text{s}^{-1}$,\n- $k_2^0 = 1.0\\,\\text{s}^{-1}$.\n\nExpress the final answer for $x_{\\text{eff}}^{\\ddagger}$ in nanometers and round your answer to three significant figures.", "solution": "The problem requires the derivation of an effective distance to the transition state, $x_{\\text{eff}}^{\\ddagger}(f)$, for a two-step sequential chemical reaction under an applied force $f$. The overall process is described by the scheme $A \\xrightarrow{k_1(f)} I \\xrightarrow{k_2(f)} P$, where both steps are irreversible. The overall rate, $k_{\\text{eff}}(f)$, is determined by the total mean first-passage time.\n\nFor a sequence of two irreversible first-order steps, the total mean time $\\tau_{\\text{eff}}$ is the sum of the mean times for each step, $\\tau_1$ and $\\tau_2$. The mean time for a single irreversible step with rate constant $k$ is $\\tau = 1/k$. Therefore,\n$$\n\\tau_{\\text{eff}}(f) = \\tau_1(f) + \\tau_2(f) = \\frac{1}{k_1(f)} + \\frac{1}{k_2(f)}\n$$\nThe effective rate constant $k_{\\text{eff}}(f)$ is the reciprocal of the total mean time:\n$$\nk_{\\text{eff}}(f) = \\frac{1}{\\tau_{\\text{eff}}(f)} = \\left(\\frac{1}{k_1(f)} + \\frac{1}{k_2(f)}\\right)^{-1} = \\frac{k_1(f) k_2(f)}{k_1(f) + k_2(f)}\n$$\nThe effective distance to the transition state, $x_{\\text{eff}}^{\\ddagger}(f)$, is defined by the force sensitivity of the effective rate constant, analogous to the Bell model:\n$$\nx_{\\text{eff}}^{\\ddagger}(f) = \\frac{1}{\\beta} \\frac{d}{df} \\ln k_{\\text{eff}}(f)\n$$\nwhere $\\beta = 1/(k_B T)$. We first find the expression for $\\frac{d}{df} \\ln k_{\\text{eff}}(f)$. Taking the natural logarithm of $k_{\\text{eff}}(f)$:\n$$\n\\ln k_{\\text{eff}}(f) = \\ln(k_1(f)) + \\ln(k_2(f)) - \\ln(k_1(f) + k_2(f))\n$$\nDifferentiating with respect to force $f$:\n$$\n\\frac{d}{df} \\ln k_{\\text{eff}} = \\frac{d}{df} \\ln k_1 + \\frac{d}{df} \\ln k_2 - \\frac{1}{k_1 + k_2} \\left( \\frac{dk_1}{df} + \\frac{dk_2}{df} \\right)\n$$\nUsing the identity $\\frac{dk_i}{df} = k_i \\frac{d}{df} \\ln k_i$:\n$$\n\\frac{d}{df} \\ln k_{\\text{eff}} = \\frac{d}{df} \\ln k_1 + \\frac{d}{df} \\ln k_2 - \\frac{1}{k_1 + k_2} \\left( k_1 \\frac{d}{df} \\ln k_1 + k_2 \\frac{d}{df} \\ln k_2 \\right)\n$$\nGrouping terms:\n$$\n\\frac{d}{df} \\ln k_{\\text{eff}} = \\left(1 - \\frac{k_1}{k_1 + k_2}\\right) \\frac{d}{df} \\ln k_1 + \\left(1 - \\frac{k_2}{k_1 + k_2}\\right) \\frac{d}{df} \\ln k_2\n$$\n$$\n\\frac{d}{df} \\ln k_{\\text{eff}} = \\left(\\frac{k_2}{k_1 + k_2}\\right) \\frac{d}{df} \\ln k_1 + \\left(\\frac{k_1}{k_1 + k_2}\\right) \\frac{d}{df} \\ln k_2\n$$\nThe problem defines the individual transition state distances as $x_i^{\\ddagger}(f) = \\frac{1}{\\beta} \\frac{d}{df} \\ln k_i(f)$. Substituting this into the expression for $\\frac{d}{df} \\ln k_{\\text{eff}}$ gives:\n$$\n\\beta x_{\\text{eff}}^{\\ddagger}(f) = \\left(\\frac{k_2(f)}{k_1(f) + k_2(f)}\\right) \\beta x_1^{\\ddagger}(f) + \\left(\\frac{k_1(f)}{k_1(f) + k_2(f)}\\right) \\beta x_2^{\\ddagger}(f)\n$$\nCanceling $\\beta$, we arrive at the general expression for the effective transition state distance:\n$$\nx_{\\text{eff}}^{\\ddagger}(f) = \\frac{k_2(f)}{k_1(f) + k_2(f)} x_1^{\\ddagger}(f) + \\frac{k_1(f)}{k_1(f) + k_2(f)} x_2^{\\ddagger}(f)\n$$\nThis shows that $x_{\\text{eff}}^{\\ddagger}(f)$ is a weighted average of the individual distances $x_1^{\\ddagger}(f)$ and $x_2^{\\ddagger}(f)$, where the weights depend on the relative magnitudes of the rate constants at force $f$.\n\nTo evaluate this expression numerically, we must first find $k_1(f)$, $k_2(f)$, and $x_1^{\\ddagger}(f)$ at the specified conditions.\nThe transition state distance for step 1 (entropic loop opening) is force-dependent:\n$$\nx_1^{\\ddagger}(f) = x_e(f) = \\xi(f)\\,\\Delta L = \\left(1 - \\frac{1}{2} \\left(\\frac{k_B T}{f \\,\\ell_p}\\right)^{1/2}\\right) \\Delta L\n$$\nThe transition state distance for step 2 (bond scission) is constant:\n$$\nx_2^{\\ddagger}(f) = x_b\n$$\nThe rate constants are found by integrating their force-dependence from $f=0$:\n$k_i(f) = k_i^0 \\exp\\left(\\beta \\int_0^f x_i^{\\ddagger}(f') df'\\right)$.\nFor step 2: $\\int_0^f x_b df' = x_b f$. Thus, $k_2(f) = k_2^0 \\exp(\\beta f x_b)$.\nFor step 1: $\\int_0^f x_1^{\\ddagger}(f') df' = \\int_0^f \\Delta L \\left(1 - \\frac{1}{2} \\sqrt{\\frac{k_B T}{\\ell_p}} (f')^{-1/2} \\right) df' = \\left[ \\Delta L f' - \\Delta L \\sqrt{\\frac{k_B T}{\\ell_p}} (f')^{1/2} \\right]_0^f = \\Delta L f - \\Delta L \\sqrt{\\frac{k_B T f}{\\ell_p}}$.\nSo, $k_1(f) = k_1^0 \\exp\\left(\\beta \\left( \\Delta L f - \\Delta L \\sqrt{\\frac{k_B T f}{\\ell_p}} \\right)\\right)$.\n\nNow, we perform the numerical calculation using the provided values:\n$T = 298\\,\\text{K}$, $\\ell_p = 0.80\\,\\text{nm} = 0.80 \\times 10^{-9}\\,\\text{m}$, $\\Delta L = 1.00\\,\\text{nm} = 1.00 \\times 10^{-9}\\,\\text{m}$, $x_b = 0.25\\,\\text{nm} = 0.25 \\times 10^{-9}\\,\\text{m}$, $f = 20.0\\,\\text{pN} = 20.0 \\times 10^{-12}\\,\\text{N}$, $k_1^0 = 1.0\\,\\text{s}^{-1}$, $k_2^0 = 1.0\\,\\text{s}^{-1}$.\nLet $k_B = 1.3806 \\times 10^{-23}\\,\\text{J/K}$.\nThe thermal energy is $k_B T = (1.3806 \\times 10^{-23}\\,\\text{J/K})(298\\,\\text{K}) \\approx 4.114 \\times 10^{-21}\\,\\text{J}$.\nThe inverse thermal energy is $\\beta = 1/(k_B T) \\approx 2.4307 \\times 10^{20}\\,\\text{J}^{-1}$.\n\nFirst, calculate $x_1^{\\ddagger}(f)$:\nThe term $f \\ell_p = (20.0 \\times 10^{-12}\\,\\text{N})(0.80 \\times 10^{-9}\\,\\text{m}) = 1.6 \\times 10^{-20}\\,\\text{J}$.\n$$\nx_1^{\\ddagger}(f) = \\left(1 - \\frac{1}{2} \\sqrt{\\frac{4.114 \\times 10^{-21}\\,\\text{J}}{1.6 \\times 10^{-20}\\,\\text{J}}}\\right) (1.00\\,\\text{nm}) = \\left(1 - \\frac{1}{2} \\sqrt{0.2571}\\right) (1.00\\,\\text{nm}) \\approx (1 - 0.2535) (1.00\\,\\text{nm}) = 0.7465\\,\\text{nm}\n$$\nNext, calculate $k_2(f)$:\nThe exponent is $\\beta f x_b = (2.4307 \\times 10^{20}\\,\\text{J}^{-1})(20.0 \\times 10^{-12}\\,\\text{N})(0.25 \\times 10^{-9}\\,\\text{m}) \\approx 1.215$.\n$$\nk_2(f) = (1.0\\,\\text{s}^{-1}) \\exp(1.215) \\approx 3.370\\,\\text{s}^{-1}\n$$\nNext, calculate $k_1(f)$:\nThe exponent is $\\beta \\left( \\Delta L f - \\Delta L \\sqrt{\\frac{k_B T f}{\\ell_p}} \\right) = \\beta \\Delta L f \\left(1 - \\sqrt{\\frac{k_B T}{f \\ell_p}}\\right)$.\nThe term $\\beta \\Delta L f = (2.4307 \\times 10^{20}\\,\\text{J}^{-1})(1.00 \\times 10^{-9}\\,\\text{m})(20.0 \\times 10^{-12}\\,\\text{N}) \\approx 4.861$.\nThe term $\\sqrt{k_B T/(f \\ell_p)} \\approx \\sqrt{0.2571} \\approx 0.5071$.\nThe exponent is $4.861(1 - 0.5071) \\approx 4.861 \\times 0.4929 \\approx 2.396$.\n$$\nk_1(f) = (1.0\\,\\text{s}^{-1}) \\exp(2.396) \\approx 10.98\\,\\text{s}^{-1}\n$$\nFinally, substitute these values into the expression for $x_{\\text{eff}}^{\\ddagger}(f)$:\n$$\nx_{\\text{eff}}^{\\ddagger}(f) = \\frac{3.370\\,\\text{s}^{-1}}{10.98\\,\\text{s}^{-1} + 3.370\\,\\text{s}^{-1}} (0.7465\\,\\text{nm}) + \\frac{10.98\\,\\text{s}^{-1}}{10.98\\,\\text{s}^{-1} + 3.370\\,\\text{s}^{-1}} (0.25\\,\\text{nm})\n$$\n$$\nx_{\\text{eff}}^{\\ddagger}(f) = \\frac{3.370}{14.35} (0.7465\\,\\text{nm}) + \\frac{10.98}{14.35} (0.25\\,\\text{nm})\n$$\n$$\nx_{\\text{eff}}^{\\ddagger}(f) \\approx (0.2348)(0.7465\\,\\text{nm}) + (0.7652)(0.25\\,\\text{nm})\n$$\n$$\nx_{\\text{eff}}^{\\ddagger}(f) \\approx 0.1753\\,\\text{nm} + 0.1913\\,\\text{nm} \\approx 0.3666\\,\\text{nm}\n$$\nRounding to three significant figures, the effective distance to the transition state is $0.367\\,\\text{nm}$.", "answer": "$$\\boxed{0.367}$$", "id": "2778947"}, {"introduction": "While simplified models like the Bell model are invaluable, a deeper understanding requires analyzing the full potential energy landscape, often obtained from quantum chemistry simulations. This computational practice challenges you to work with a model energy surface to extract the force-dependent activation barrier from first principles [@problem_id:2778981]. By comparing your results to standard theoretical models, you will learn to diagnose force-induced changes in the barrier shape, bridging the gap between detailed simulations and phenomenological descriptions of mechanochemical reactions.", "problem": "Consider a single-coordinate mechanochemical model of a cyclobutane mechanophore undergoing ring opening under an externally applied tensile force. The internal reaction coordinate is the dihedral angle $\\theta$ (in radians), and the externally coupled molecular extension along the pulling axis is $x(\\theta)$ (in nanometers). The unforced potential energy profile $U_0(\\theta)$ (in kilojoules per mole) emulates a constrained Density Functional Theory (DFT) scan; under a constant external force $F$ (in nanonewtons), the total potential is\n$$\nU_F(\\theta) = U_0(\\theta) - F\\,x(\\theta)\\,C,\n$$\nwhere $C$ converts nanonewton-nanometer to kilojoules per mole. Using the identity $1\\,\\mathrm{nN}\\cdot\\mathrm{nm} = 10^{-18}\\,\\mathrm{J}$ and Avogadro's number $N_\\mathrm{A} = 6.02214076\\times 10^{23}\\,\\mathrm{mol}^{-1}$, we have\n$$\nC = \\frac{N_\\mathrm{A}\\times 10^{-18}\\,\\mathrm{J}}{10^{3}\\,\\mathrm{J/kJ}} \\approx 6.02214076 \\times 10^{2}\\,\\mathrm{kJ/mol}.\n$$\n\nYour task is to algorithmically extract the force-dependent barrier height $\\Delta G(F)$ from $U_F(\\theta)$, and compare it with two canonical models of force-activated barrier reduction to diagnose barrier shape changes:\n\n- Bell model: The barrier is reduced linearly with force according to\n$$\n\\Delta G_{\\mathrm{Bell}}(F) = \\Delta G_0 - F\\,\\Delta x_0\\,C,\n$$\nwhere $\\Delta G_0$ is the zero-force barrier and $\\Delta x_0$ is the zero-force projection distance between the reactant minimum and the transition state along $x(\\theta)$.\n\n- Dudko–Hummer–Szabo (DHS) model: For a shape parameter $\\nu \\in \\{1/2,\\,2/3\\}$ corresponding, respectively, to a cusp-like and a linear-cubic barrier, the predicted force-dependent barrier is\n$$\n\\Delta G_{\\mathrm{DHS}}(F;\\nu) = \\Delta G_0\\left[1 - \\left(1 - \\nu\\,\\frac{F\\,\\Delta x_0\\,C}{\\Delta G_0}\\right)^{1/\\nu}\\right],\n$$\nvalid for $0 \\le F < \\frac{\\Delta G_0}{\\nu\\,\\Delta x_0\\,C}$ and taken as $0$ when the expression inside the parentheses is not positive.\n\nBase your derivation on the following principles:\n- The total potential under a constant force is $U_F(\\theta)=U_0(\\theta)-F\\,x(\\theta)\\,C$.\n- The barrier height $\\Delta G(F)$ is the difference between the value of $U_F(\\theta)$ at the first transition state (local maximum) that follows the reactant basin minimum, and the value at that minimum, along increasing $\\theta$.\n- The reactant basin minimum is the local minimum near a reference angle $\\theta_m$ that characterizes the constrained DFT scan alignment.\n\nYou are provided with parametric forms for $U_0(\\theta)$ and $x(\\theta)$ to emulate constrained DFT scans for three distinct cases. For each case, the unforced energy profile and extension mapping are defined by\n$$\nU_0(\\theta) = A_1\\big(1-\\cos(\\theta-\\theta_m)\\big) + A_2\\big(1-\\cos(2(\\theta-\\theta_m))\\big) + A_3\\big(1-\\cos(3(\\theta-\\theta_m))\\big),\n$$\n$$\nx(\\theta) = r_0\\big(1-\\cos(\\theta-\\theta_m)\\big) + r_1\\sin^2(\\theta-\\theta_m),\n$$\nfor $\\theta \\in [0,\\pi]$ in radians.\n\nYou must:\n1. For each case and for each specified force $F$, compute $\\Delta G(F)$ by:\n   - Identifying the reactant minimum $\\theta_\\mathrm{min}(F)$ as the local minimum of $U_F(\\theta)$ that is nearest to $\\theta_m$.\n   - Identifying the first transition state $\\theta^\\ddagger(F)$ as the first local maximum of $U_F(\\theta)$ with $\\theta^\\ddagger(F) > \\theta_\\mathrm{min}(F)$.\n   - Setting $\\Delta G(F) = \\max\\{U_F(\\theta^\\ddagger(F)) - U_F(\\theta_\\mathrm{min}(F)),\\,0\\}$, and $\\Delta x^\\ddagger(F) = x(\\theta^\\ddagger(F)) - x(\\theta_\\mathrm{min}(F))$ when the barrier exists; otherwise take $\\Delta x^\\ddagger(F)=0$.\n2. Compute $\\Delta G_0$ and $\\Delta x_0$ at $F=0$ for each case.\n3. For each case, compute the Bell and DHS predictions over the same set of $F$ values using $\\Delta G_0$ and $\\Delta x_0$ extracted from step $2$.\n4. Quantify model agreement by the root-mean-square error (RMSE) between the computed $\\Delta G(F)$ and each model’s prediction over the nonzero forces:\n$$\n\\mathrm{RMSE} = \\sqrt{\\frac{1}{N}\\sum_{i=1}^{N}\\left(\\Delta G(F_i) - \\Delta G_{\\mathrm{model}}(F_i)\\right)^2},\n$$\nwhere $F_1,\\dots,F_N$ are the nonzero forces in the test suite.\n5. Identify a barrier shape change for a case if both conditions hold:\n   - The best-fitting model (smallest RMSE) among the set $\\{\\mathrm{Bell},\\,\\mathrm{DHS}(\\nu=1/2),\\,\\mathrm{DHS}(\\nu=2/3)\\}$ is not the Bell model, and the Bell model’s RMSE exceeds the best RMSE by a factor of at least $1.5$.\n   - The effective projection distance varies significantly with force: let $\\mathcal{S}=\\{\\Delta x^\\ddagger(F_i) : \\Delta G(F_i)>0 \\text{ and } F_i>0\\}$, then if $\\mathcal{S}$ is nonempty, require\n$$\n\\frac{\\max(\\mathcal{S}) - \\min(\\mathcal{S})}{\\max(\\Delta x_0,\\,\\varepsilon)} \\ge 0.1,\n$$\nwith $\\varepsilon = 10^{-9}$ in nanometers for numerical stability; if $\\mathcal{S}$ is empty, do not flag a shape change.\n\nAngle unit requirement: All angles must be handled in radians. Force must be in nanonewtons. Energy differences must be reported internally and compared in kilojoules per mole. Distances must be in nanometers.\n\nTest suite (three cases; use the common force set $F \\in \\{0.00, 0.05, 0.15, 0.30, 0.45\\}$ in nanonewtons):\n- Case 1 (moderately anharmonic, weak coupling): $A_1=30$, $A_2=40$, $A_3=5$ (all in kilojoules per mole); $r_0=0.12$, $r_1=0.02$ (both in nanometers); $\\theta_m=0.60$ (radians).\n- Case 2 (asymmetric, stronger coupling): $A_1=40$, $A_2=60$, $A_3=20$; $r_0=0.18$, $r_1=0.06$; $\\theta_m=0.50$.\n- Case 3 (shallower barrier, near-force-induced barrier extinction): $A_1=10$, $A_2=15$, $A_3=5$; $r_0=0.15$, $r_1=0.03$; $\\theta_m=0.70$.\n\nFinal output format:\n- For each case, output a sublist with two integers $[m, s]$:\n  - $m$ is the index of the best model according to RMSE over the nonzero forces: $m=0$ for Bell, $m=1$ for DHS with $\\nu=1/2$, and $m=2$ for DHS with $\\nu=2/3$.\n  - $s$ is $1$ if a barrier shape change is identified by the criteria above, otherwise $0$.\n- Your program should produce a single line of output containing the results as a comma-separated list of these sublists enclosed in square brackets, for example $[[2,1],[0,0],[1,1]]$.\n\nConstraints and implementation details:\n- Use a sufficiently fine uniform grid over $\\theta \\in [0,\\pi]$ to robustly detect local minima and maxima.\n- Identify local minima and maxima by sign changes in the numerical derivative $dU_F/d\\theta$.\n- Always select the reactant minimum as the local minimum nearest to $\\theta_m$.\n- When no local maximum exists to the right of the reactant minimum, take the barrier as $0$ for that force.\n- All numerical calculations must be self-contained, with no external input.\n\nYour program must be a complete, runnable implementation that performs these steps for the provided test suite and prints the final list in the exact format specified.", "solution": "The problem statement has been subjected to rigorous validation and is deemed valid. It presents a well-posed computational exercise in the domain of theoretical mechanochemistry, grounded in established physical principles. It is self-contained, objective, and scientifically sound, with all parameters and procedures specified unambiguously. The objective is to analyze a parametric model of a force-activated chemical reaction and diagnose its behavior in relation to canonical theories. The solution is implemented by following the computational procedure detailed below.\n\nThe core of the problem is to analyze the potential energy surface $U_F(\\theta) = U_0(\\theta) - F\\,x(\\theta)\\,C$ for a single reaction coordinate $\\theta$. The analysis involves locating the reactant state minimum and the subsequent transition state to determine the activation energy barrier $\\Delta G(F)$ as a function of the applied force $F$.\n\nThe computational procedure is implemented as follows:\n\n1.  **Discretization and Potential Energy Surface Mapping**: The continuous reaction coordinate $\\theta$ is discretized into a fine, uniform grid over its domain $\\theta \\in [0, \\pi]$. This allows the functions $U_0(\\theta)$, $x(\\theta)$, and consequently $U_F(\\theta)$ to be represented as arrays of numerical values. A sufficiently high number of grid points is chosen to ensure that all relevant features of the potential energy surface are resolved.\n\n2.  **Locating Stationary Points**: The local minima and maxima of the potential energy surface $U_F(\\theta)$ are identified by analyzing its numerical derivative, $\\frac{dU_F}{d\\theta}$. Specifically, we compute the first-order finite differences of the potential energy array. A change in the sign of the derivative from negative to positive indicates a local minimum, while a change from positive to negative indicates a local maximum. This method robustly identifies all stationary points on the discretized grid.\n\n3.  **Extraction of Barrier Parameters**: For each value of force $F$ in the provided set, we perform the following steps:\n    - The reactant state minimum, $\\theta_{\\mathrm{min}}(F)$, is identified as the local minimum on the $U_F(\\theta)$ surface whose coordinate $\\theta$ is nearest to the reference angle $\\theta_m$ given for each case.\n    - The relevant transition state, $\\theta^\\ddagger(F)$, is identified as the first local maximum that occurs at an angle $\\theta > \\theta_{\\mathrm{min}}(F)$.\n    - If such a transition state exists, the force-dependent activation barrier is calculated as $\\Delta G(F) = U_F(\\theta^\\ddagger(F)) - U_F(\\theta_{\\mathrm{min}}(F))$. The corresponding projection distance is $\\Delta x^\\ddagger(F) = x(\\theta^\\ddagger(F)) - x(\\theta_{\\mathrm{min}}(F))$.\n    - If no transition state is found after the reactant minimum (indicating the barrier has been obliterated by the force), the barrier height $\\Delta G(F)$ is taken to be $0$, and consequently $\\Delta x^\\ddagger(F)$ is also set to $0$. To ensure physical consistency, the barrier height is always taken as non-negative, i.e., $\\Delta G(F) = \\max\\{U_F(\\theta^\\ddagger(F)) - U_F(\\theta_{\\mathrm{min}}(F)), 0\\}$.\n\n4.  **Model Fitting and Comparison**: The procedure in the previous step is first applied at zero force ($F=0$) to determine the intrinsic barrier height $\\Delta G_0$ and transition state projection $\\Delta x_0$. These two parameters are then used to generate theoretical predictions for the force-dependent barrier height using two models:\n    - The Bell model: $\\Delta G_{\\mathrm{Bell}}(F) = \\max\\{0, \\Delta G_0 - F\\,\\Delta x_0\\,C\\}$.\n    - The Dudko–Hummer–Szabo (DHS) model: $\\Delta G_{\\mathrm{DHS}}(F;\\nu) = \\Delta G_0\\left[1 - \\left(1 - \\nu\\,\\frac{F\\,\\Delta x_0\\,C}{\\Delta G_0}\\right)^{1/\\nu}\\right]$ for barrier shape parameters $\\nu \\in \\{1/2, 2/3\\}$. The predicted barrier is set to $0$ if $F \\ge \\frac{\\Delta G_0}{\\nu\\,\\Delta x_0\\,C}$.\n    \n    The accuracy of each model is assessed by calculating the root-mean-square error (RMSE) between its predictions and the numerically computed $\\Delta G(F)$ values over all non-zero forces. The model yielding the minimum RMSE is identified as the best-fitting model for that case.\n\n5.  **Diagnosis of Barrier Shape Change**: A significant change in the shape of the activation barrier under load is diagnosed based on two specific criteria:\n    - **Model Disparity**: The best-fitting model must be one of the DHS models ($\\nu=1/2$ or $\\nu=2/3$), and its RMSE must be substantially better than that of the Bell model. The condition is that the RMSE of the Bell model is at least $1.5$ times the RMSE of the best model.\n    - **Transition State Shift**: The position of the transition state along the pulling coordinate, captured by $\\Delta x^\\ddagger(F)$, must exhibit significant variation with force. This is quantified by the condition $\\frac{\\max(\\mathcal{S}) - \\min(\\mathcal{S})}{\\max(\\Delta x_0,\\,\\varepsilon)} \\ge 0.1$, where $\\mathcal{S}$ is the set of $\\Delta x^\\ddagger(F_i)$ values for non-zero forces where a barrier still exists, and $\\varepsilon=10^{-9}\\,\\mathrm{nm}$ is a small constant for numerical stability.\n\n    A shape change is flagged (output $s=1$) only if both conditions are met. Otherwise, no significant shape change is reported (output $s=0$). This entire methodology is systematically applied to the three test cases provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the mechanochemistry problem for three test cases.\n    \"\"\"\n    # Define constants\n    N_A = 6.02214076e23  # Avogadro's number, mol^-1\n    C = N_A * 1e-18 / 1e3  # Conversion factor, nN*nm -> kJ/mol\n\n    # Common parameters\n    F_set = np.array([0.00, 0.05, 0.15, 0.30, 0.45])  # Forces in nN\n    theta_grid = np.linspace(0, np.pi, 20000)  # Reaction coordinate grid\n\n    # Test cases: (A1, A2, A3, r0, r1, theta_m)\n    test_cases = [\n        {'params': {'A1': 30, 'A2': 40, 'A3': 5, 'r0': 0.12, 'r1': 0.02, 'theta_m': 0.60}},\n        {'params': {'A1': 40, 'A2': 60, 'A3': 20, 'r0': 0.18, 'r1': 0.06, 'theta_m': 0.50}},\n        {'params': {'A1': 10, 'A2': 15, 'A3': 5, 'r0': 0.15, 'r1': 0.03, 'theta_m': 0.70}}\n    ]\n\n    # Helper functions\n    def U0(theta, p):\n        tm = p['theta_m']\n        return p['A1'] * (1 - np.cos(theta - tm)) + \\\n               p['A2'] * (1 - np.cos(2 * (theta - tm))) + \\\n               p['A3'] * (1 - np.cos(3 * (theta - tm)))\n\n    def x_ext(theta, p):\n        tm = p['theta_m']\n        return p['r0'] * (1 - np.cos(theta - tm)) + p['r1'] * np.sin(theta - tm)**2\n\n    def get_extrema(potential_curve):\n        diffs = np.diff(potential_curve)\n        signs = np.sign(diffs)\n        sign_changes = np.diff(signs)\n        min_indices = np.where(sign_changes == 2)[0] + 1\n        max_indices = np.where(sign_changes == -2)[0] + 1\n        return min_indices, max_indices\n\n    def bell_model(F, dG0, dx0):\n        pred = dG0 - F * dx0 * C\n        return max(0, pred)\n\n    def dhs_model(F, dG0, dx0, nu):\n        if dG0 <= 0 or F * dx0 <= 0:\n            return 0.0\n        \n        term = 1 - nu * F * dx0 * C / dG0\n        if term <= 0:\n            return 0.0\n        else:\n            return dG0 * (1 - term**(1 / nu))\n    \n    final_results = []\n\n    for case in test_cases:\n        p = case['params']\n        theta_m = p['theta_m']\n\n        computed_dG = []\n        computed_dx = []\n\n        U0_curve = U0(theta_grid, p)\n        x_curve = x_ext(theta_grid, p)\n\n        for F in F_set:\n            UF_curve = U0_curve - F * x_curve * C\n            min_indices, max_indices = get_extrema(UF_curve)\n\n            if min_indices.size == 0:\n                # This should not happen for the given potentials near theta_m\n                final_results.append([0, 0])\n                continue\n\n            # Find reactant minimum (closest to theta_m)\n            min_thetas = theta_grid[min_indices]\n            reactant_min_idx_in_mins = np.argmin(np.abs(min_thetas - theta_m))\n            reactant_min_idx = min_indices[reactant_min_idx_in_mins]\n\n            # Find first transition state after reactant minimum\n            ts_indices = max_indices[max_indices > reactant_min_idx]\n            \n            if ts_indices.size > 0:\n                ts_idx = ts_indices[0]\n                dG_F = UF_curve[ts_idx] - UF_curve[reactant_min_idx]\n                dG_F = max(0, dG_F)\n                \n                if dG_F > 0:\n                    dx_F = x_curve[ts_idx] - x_curve[reactant_min_idx]\n                else:\n                    dx_F = 0.0\n            else:\n                dG_F = 0.0\n                dx_F = 0.0\n\n            computed_dG.append(dG_F)\n            computed_dx.append(dx_F)\n        \n        # Extract zero-force parameters\n        dG0 = computed_dG[0]\n        dx0 = computed_dx[0]\n\n        # Analyze for non-zero forces\n        F_nonzero = F_set[1:]\n        dG_nonzero = np.array(computed_dG[1:])\n        dx_nonzero = np.array(computed_dx[1:])\n        \n        if F_nonzero.size == 0:\n            final_results.append([0, 0])\n            continue\n            \n        # Model predictions\n        pred_bell = np.array([bell_model(F, dG0, dx0) for F in F_nonzero])\n        pred_dhs12 = np.array([dhs_model(F, dG0, dx0, 1/2) for F in F_nonzero])\n        pred_dhs23 = np.array([dhs_model(F, dG0, dx0, 2/3) for F in F_nonzero])\n\n        # RMSE calculations\n        rmse_bell = np.sqrt(np.mean((dG_nonzero - pred_bell)**2))\n        rmse_dhs12 = np.sqrt(np.mean((dG_nonzero - pred_dhs12)**2))\n        rmse_dhs23 = np.sqrt(np.mean((dG_nonzero - pred_dhs23)**2))\n\n        rmses = [rmse_bell, rmse_dhs12, rmse_dhs23]\n        m = np.argmin(rmses) # 0=Bell, 1=DHS(1/2), 2=DHS(2/3)\n\n        # Shape change criteria\n        s = 0\n        cond1 = (m != 0) and (rmses[0] / rmses[m] >= 1.5)\n\n        S_set = dx_nonzero[dG_nonzero > 0]\n        cond2 = False\n        if S_set.size > 0:\n            epsilon = 1e-9\n            dx_spread = (np.max(S_set) - np.min(S_set)) / max(dx0, epsilon)\n            if dx_spread >= 0.1:\n                cond2 = True\n        \n        if cond1 and cond2:\n            s = 1\n        \n        final_results.append([m, s])\n\n    # Format the final output string\n    formatted_results = [f'[{r[0]},{r[1]}]' for r in final_results]\n    print(f'[{\",\".join(formatted_results)}]')\n\nsolve()\n```", "id": "2778981"}]}