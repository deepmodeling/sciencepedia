{"hands_on_practices": [{"introduction": "Understanding atomic-scale friction begins with the elegant Prandtl-Tomlinson model, which distills the complex interactions between a scanning probe tip and a crystalline surface into a manageable framework. This foundational exercise guides you through an analysis of the model in its simplest form to uncover the origin of stick-slip motion. By deriving the slip distance in the quasi-static, low-stiffness limit [@problem_id:2764824], you will gain a first-principles insight into how the periodicity of the atomic lattice gives rise to the characteristic 'jerky' motion observed in nanotribology.", "problem": "Consider the Prandtl–Tomlinson (PT) model of atomic-scale friction for a single asperity: a point-like tip of mass $m$ connected to a linear spring of stiffness $k$ is driven at constant velocity $v$ over a crystalline substrate of lattice spacing $a$ and sinusoidal corrugation amplitude $U_{0}$. The tip coordinate is $x(t)$ and the driver coordinate is $X(t)=vt$. The total potential energy is\n$$\nV_{\\mathrm{tot}}(x;X) \\;=\\; \\tfrac{1}{2}\\,k\\,(x-X)^{2} \\;-\\; U_{0}\\,\\cos\\!\\left(\\tfrac{2\\pi}{a}\\,x\\right).\n$$\nAssume the overdamped, adiabatic, zero-temperature limit: the equation of motion is dominated by viscous dissipation with coefficient $\\gamma>0$ so that inertia is negligible and $v\\to 0^{+}$ (quasi-static loading). Work in the commensurate case (one tip per lattice period) and assume the system is in the stick–slip regime, that is, the stiffness is below the critical value $k<k_{c}$, where $k_{c}$ is the threshold for the disappearance of stick–slip.\n\nDefine a single slip event as the rapid transition of $x(t)$ from one metastable minimum of $V_{\\mathrm{tot}}(x;X)$ to the next minimum as the driver $X$ is slowly advanced. The slip distance $\\Delta x$ is the net change in $x$ between the positions immediately before and immediately after a slip event at fixed $X$ (the change in $X$ during the fast slip is negligible in the adiabatic limit). Consider many successive slip events in the steady state, and let $p(\\Delta x)$ denote the normalized probability density (with respect to $\\Delta x$) of the slip distance.\n\nStarting only from Newton’s second law and the given potential energy, and using the overdamped, adiabatic, $T=0$ limit, derive the steady-state $p(\\Delta x)$ in the small-stiffness limit $k/k_{c}\\to 0^{+}$ for commensurate sliding. Express your final result as a closed-form analytic expression in terms of the Dirac delta distribution and the lattice spacing $a$. Then, based on your derivation, explain physically why slip events predominantly displace the tip by approximately one lattice spacing $a$.\n\nYour final answer must be the explicit analytic expression for $p(\\Delta x)$. No numerical rounding is required, and no units are to be included in the final expression.", "solution": "The problem statement is scientifically grounded, well-posed, and contains sufficient information for a unique solution. It is a standard problem in the field of nanomechanics. Therefore, we proceed to derive the solution.\n\nThe system dynamics are described by the total potential energy $V_{\\mathrm{tot}}(x;X) = \\frac{1}{2} k (x-X)^2 - U_0 \\cos(\\frac{2\\pi}{a}x)$. The conditions of the problem—overdamped, adiabatic, zero-temperature—mean that the tip is always in a stable mechanical equilibrium, located at a local minimum of $V_{\\text{tot}}(x;X)$.\n\nThe problem asks for the slip distance in the small-stiffness limit, $k/k_c \\to 0^+$. In this limit, the spring is extremely compliant. The total potential landscape felt by the tip, $V_{\\text{tot}}$, is dominated by the periodic substrate potential, $U_{\\text{sub}}(x) = -U_0 \\cos(\\frac{2\\pi}{a}x)$, which has stable minima at positions $x = na$ for integer $n$. The weak spring term, $\\frac{1}{2}k(x-X)^2$, acts as a gentle, large-scale parabolic tilt on this landscape.\n\nThe process of stick-slip unfolds as follows:\n1.  **Stick:** The tip is trapped in a potential well, for example, the one centered at $x=0$. As the driver at position $X$ is pulled away, the spring stretches. The tip remains \"stuck\" near $x=0$.\n2.  **Slip onset:** The spring force, $F_{\\text{spr}} = k(X-x)$, opposes the restoring force from the substrate potential, $F_{\\text{sub}} = -\\frac{dU_{\\text{sub}}}{dx} = -U_0 \\frac{2\\pi}{a} \\sin(\\frac{2\\pi}{a}x)$. A slip occurs when the spring is stretched just enough to overcome the maximum possible restoring force (the static friction force), which is $F_s = \\max|F_{\\text{sub}}| = \\frac{2\\pi U_0}{a}$.\n3.  **Slip dynamics:** Once this threshold is reached, the tip's equilibrium position vanishes. It becomes unstable and rapidly slides \"downhill\" in the total potential landscape to find the next available stable minimum.\n\nIn the $k \\to 0$ limit, the spring is too weak to significantly distort the shape or position of the substrate's potential wells. The stable minima of the total potential $V_{\\text{tot}}$ remain almost exactly at the minima of the substrate potential, i.e., at $x = 0, a, 2a, \\ldots$.\n\nTherefore, a slip event corresponds to the tip jumping from being trapped in one potential well (e.g., at $x \\approx na$) to the next adjacent well in the direction of sliding (at $x \\approx (n+1)a$). The distance of this jump is the slip distance, $\\Delta x$.\n$$\n\\Delta x = x_{\\text{after}} - x_{\\text{before}} \\approx (n+1)a - na = a\n$$\nIn this limit, the slip distance is precisely the lattice spacing, $a$.\n\nSince the system is in the zero-temperature, adiabatic limit, it is perfectly deterministic. Every slip event is identical to the one before it, occurring under precisely the same conditions. Consequently, the slip distance $\\Delta x$ does not fluctuate; it takes on a single, well-defined value. In the specified limit of $k/k_c \\to 0^+$, this value is exactly $a$.\n\nThe probability density function, $p(\\Delta x)$, for a variable that takes on a single constant value, $c$, is the Dirac delta distribution centered at that value, $\\delta(\\Delta x - c)$.\nTherefore, the normalized probability density for the slip distance $\\Delta x$ in this limit is:\n$$\np(\\Delta x) \\;=\\; \\delta(\\Delta x - a).\n$$", "answer": "$$\n\\boxed{\\delta(\\Delta x - a)}\n$$", "id": "2764824"}, {"introduction": "While theoretical models provide a framework for understanding friction, quantitative experimental validation hinges on the precise calibration of measurement tools like the Atomic Force Microscope (AFM). This practice connects the abstract concepts of nanotribology to the concrete realities of experimental mechanics by focusing on the cantilever—the force-sensing element of the AFM. You will apply principles of linear elasticity to derive the torsional spring constant $k_{\\phi}$ of a cantilever and, critically, perform an uncertainty analysis to appreciate how dimensional and material tolerances impact the accuracy of nanoscale force measurements [@problem_id:2764830].", "problem": "An Atomic Force Microscope (AFM) operated in Lateral Force Microscopy (LFM) mode measures the torsional deflection of a rectangular silicon cantilever to infer interfacial friction forces and assess the validity of Amontons’ laws at the nanoscale. Consider a uniform prismatic cantilever of length $L$, width $b$, and thickness $t$ (with $t \\ll b$), made of nominally isotropic, linear elastic single-crystal silicon. Assume small strains and Saint-Venant torsion apply, and neglect higher-order warping corrections beyond the thin-section limit. The torsional spring constant $k_{\\phi}$ is defined as the torque per unit twist angle at the free end under quasi-static loading.\n\nThe cantilever has nominal dimensions $L = 200\\ \\mu\\mathrm{m}$, $b = 30\\ \\mu\\mathrm{m}$, and $t = 3.0\\ \\mu\\mathrm{m}$. The material properties at room temperature are modeled as isotropic with Young’s modulus $E = 169\\ \\mathrm{GPa}$ and Poisson’s ratio $\\nu = 0.27$, and the shear modulus is related by $G = E/[2(1+\\nu)]$. The shear modulus is treated as derived from $E$ and $\\nu$; do not introduce any additional constitutive parameters.\n\nDimensional tolerances and property uncertainties (one-standard-deviation, independent, Gaussian) are:\n- $u(L) = 2\\ \\mu\\mathrm{m}$,\n- $u(b) = 0.5\\ \\mu\\mathrm{m}$,\n- $u(t) = 0.15\\ \\mu\\mathrm{m}$,\n- $u(E) = 5\\ \\mathrm{GPa}$,\n- $u(\\nu) = 0.02$.\n\nUsing only fundamental linear elasticity and torsion of prismatic bars, derive an expression for $k_{\\phi}$ for a thin rectangular cross-section and compute its nominal value. Then perform a first-order law-of-propagation-of-uncertainty analysis to obtain the combined relative standard uncertainty $u_{\\mathrm{rel}}(k_{\\phi})$ due to the given independent tolerances in $L$, $b$, $t$, $E$, and $\\nu$.\n\nReport:\n- The nominal $k_{\\phi}$ in $\\mathrm{N}\\,\\mathrm{m}/\\mathrm{rad}$ (not as the final boxed answer).\n- As the final answer, report only the combined relative standard uncertainty $u_{\\mathrm{rel}}(k_{\\phi})$ as a decimal. Round your final reported value to two significant figures.", "solution": "The problem statement has been analyzed and is determined to be valid. It is a well-posed problem in applied mechanics and metrology, grounded in the principles of linear elasticity and the standardized law of propagation of uncertainty. All provided data are consistent and physically reasonable for the given context. We shall proceed with the derivation and calculation.\n\nThe torsional spring constant, $k_{\\phi}$, of a prismatic bar is defined as the applied torque, $T$, per unit angle of twist, $\\phi$, at the point of application. For a cantilever of length $L$ subjected to a torque $T$ at its free end, the total angle of twist is given by the integral of the twist rate along its length:\n$$ \\phi = \\int_0^L \\frac{T}{GJ(x)} dx $$\nwhere $G$ is the shear modulus and $J(x)$ is the torsional constant of the cross-section. As the cantilever is prismatic, $G$ and $J$ are constant along the length $L$. The integral simplifies to:\n$$ \\phi = \\frac{TL}{GJ} $$\nFrom this, the torsional spring constant is:\n$$ k_{\\phi} = \\frac{T}{\\phi} = \\frac{GJ}{L} $$\nFor a rectangular cross-section of width $b$ and thickness $t$, the torsional constant $J$ is given by $J = \\beta b t^3$, where $\\beta$ is a shape factor dependent on the ratio $b/t$. The problem specifies to use the thin-section limit ($t \\ll b$), for which the shape factor $\\beta$ approaches $\\frac{1}{3}$. Thus, we have:\n$$ J \\approx \\frac{1}{3} b t^3 $$\nSubstituting this into the expression for $k_{\\phi}$ yields:\n$$ k_{\\phi} = \\frac{G}{L} \\left( \\frac{1}{3} b t^3 \\right) = \\frac{G b t^3}{3L} $$\nThe shear modulus $G$ for an isotropic linear elastic material is related to Young's modulus $E$ and Poisson's ratio $\\nu$ by the equation $G = \\frac{E}{2(1+\\nu)}$. Inserting this gives the final expression for $k_{\\phi}$ in terms of the given independent parameters:\n$$ k_{\\phi} = \\frac{E b t^3}{6L(1+\\nu)} $$\nWe now compute the nominal value of $k_{\\phi}$ using the provided mean values: $L = 200 \\times 10^{-6}\\ \\mathrm{m}$, $b = 30 \\times 10^{-6}\\ \\mathrm{m}$, $t = 3.0 \\times 10^{-6}\\ \\mathrm{m}$, $E = 169 \\times 10^9\\ \\mathrm{N/m^2}$, and $\\nu = 0.27$.\n$$ k_{\\phi} = \\frac{(169 \\times 10^9\\ \\mathrm{N/m^2})(30 \\times 10^{-6}\\ \\mathrm{m})(3.0 \\times 10^{-6}\\ \\mathrm{m})^3}{6(200 \\times 10^{-6}\\ \\mathrm{m})(1+0.27)} $$\n$$ k_{\\phi} = \\frac{169 \\times 30 \\times 27 \\times 10^{9-6-18}}{6 \\times 200 \\times 1.27 \\times 10^{-6}}\\ \\mathrm{N \\cdot m} = \\frac{136890 \\times 10^{-15}}{1524 \\times 10^{-6}}\\ \\mathrm{N \\cdot m} $$\n$$ k_{\\phi} \\approx 89.8228 \\times 10^{-9}\\ \\mathrm{N \\cdot m} $$\nThe nominal torsional spring constant is approximately $8.98 \\times 10^{-8}\\ \\mathrm{N \\cdot m/rad}$.\n\nNext, we perform a first-order uncertainty analysis. The combined standard uncertainty $u_c(k_{\\phi})$ is found using the law of propagation of uncertainty for independent input variables $x_i \\in \\{L, b, t, E, \\nu\\}$:\n$$ u_c^2(k_{\\phi}) = \\sum_i \\left( \\frac{\\partial k_{\\phi}}{\\partial x_i} \\right)^2 u^2(x_i) $$\nIt is more convenient to work with relative uncertainties. Dividing by $k_{\\phi}^2$, we get the combined relative variance:\n$$ u_{\\mathrm{rel}}^2(k_{\\phi}) = \\left(\\frac{u_c(k_{\\phi})}{k_{\\phi}}\\right)^2 = \\sum_i \\left( \\frac{1}{k_{\\phi}}\\frac{\\partial k_{\\phi}}{\\partial x_i} \\right)^2 u^2(x_i) = \\sum_i \\left( \\frac{x_i}{k_{\\phi}}\\frac{\\partial k_{\\phi}}{\\partial x_i} \\right)^2 \\left( \\frac{u(x_i)}{x_i} \\right)^2 $$\nThe sensitivity coefficients $\\frac{x_i}{k_{\\phi}}\\frac{\\partial k_{\\phi}}{\\partial x_i}$ are determined from the model equation. A direct method is to take the natural logarithm of $k_{\\phi}$:\n$$ \\ln(k_{\\phi}) = \\ln(E) + \\ln(b) + 3\\ln(t) - \\ln(6) - \\ln(L) - \\ln(1+\\nu) $$\nThe partial derivatives give the required coefficients for the power-law terms:\n$\\frac{\\partial \\ln(k_{\\phi})}{\\partial E} = \\frac{1}{E}$, so the coefficient is $1$.\n$\\frac{\\partial \\ln(k_{\\phi})}{\\partial b} = \\frac{1}{b}$, so the coefficient is $1$.\n$\\frac{\\partial \\ln(k_{\\phi})}{\\partial t} = \\frac{3}{t}$, so the coefficient is $3$.\n$\\frac{\\partial \\ln(k_{\\phi})}{\\partial L} = -\\frac{1}{L}$, so the coefficient is $-1$.\nFor the term involving $\\nu$, we compute the partial derivative directly:\n$$ \\frac{\\partial k_{\\phi}}{\\partial \\nu} = \\frac{E b t^3}{6L} \\frac{\\partial}{\\partial \\nu}(1+\\nu)^{-1} = \\frac{E b t^3}{6L} \\frac{-1}{(1+\\nu)^2} = - \\frac{k_{\\phi}}{1+\\nu} $$\nThe contribution to the relative variance from $\\nu$ is therefore:\n$$ \\frac{1}{k_{\\phi}^2} \\left( \\frac{\\partial k_{\\phi}}{\\partial \\nu} \\right)^2 u^2(\\nu) = \\frac{1}{k_{\\phi}^2} \\left( - \\frac{k_{\\phi}}{1+\\nu} \\right)^2 u^2(\\nu) = \\left( \\frac{u(\\nu)}{1+\\nu} \\right)^2 $$\nCombining all terms, the squared combined relative uncertainty is:\n$$ u_{\\mathrm{rel}}^2(k_{\\phi}) = \\left(\\frac{u(E)}{E}\\right)^2 + \\left(\\frac{u(b)}{b}\\right)^2 + \\left(\\frac{3u(t)}{t}\\right)^2 + \\left(\\frac{u(L)}{L}\\right)^2 + \\left(\\frac{u(\\nu)}{1+\\nu}\\right)^2 $$\nWe now substitute the numerical values for the relative uncertainties and other terms:\n$u_{\\mathrm{rel}}(L) = \\frac{u(L)}{L} = \\frac{2\\ \\mu\\mathrm{m}}{200\\ \\mu\\mathrm{m}} = 0.01$\n$u_{\\mathrm{rel}}(b) = \\frac{u(b)}{b} = \\frac{0.5\\ \\mu\\mathrm{m}}{30\\ \\mu\\mathrm{m}} \\approx 0.01667$\n$u_{\\mathrm{rel}}(t) = \\frac{u(t)}{t} = \\frac{0.15\\ \\mu\\mathrm{m}}{3.0\\ \\mu\\mathrm{m}} = 0.05$\n$u_{\\mathrm{rel}}(E) = \\frac{u(E)}{E} = \\frac{5\\ \\mathrm{GPa}}{169\\ \\mathrm{GPa}} \\approx 0.02959$\nThe term for $\\nu$ is $\\frac{u(\\nu)}{1+\\nu} = \\frac{0.02}{1+0.27} = \\frac{0.02}{1.27} \\approx 0.01575$\nNow we sum the squared contributions:\n$$ u_{\\mathrm{rel}}^2(k_{\\phi}) \\approx (0.02959)^2 + (0.01667)^2 + (3 \\times 0.05)^2 + (0.01)^2 + (0.01575)^2 $$\n$$ u_{\\mathrm{rel}}^2(k_{\\phi}) \\approx (0.02959)^2 + (0.01667)^2 + (0.15)^2 + (0.01)^2 + (0.01575)^2 $$\n$$ u_{\\mathrm{rel}}^2(k_{\\phi}) \\approx 0.0008753 + 0.0002778 + 0.0225 + 0.0001 + 0.0002481 $$\n$$ u_{\\mathrm{rel}}^2(k_{\\phi}) \\approx 0.0240012 $$\nThe dominant contribution is clearly from the cantilever thickness $t$, as its uncertainty is magnified by a factor of $3$.\nFinally, the combined relative standard uncertainty is the square root of this sum:\n$$ u_{\\mathrm{rel}}(k_{\\phi}) = \\sqrt{0.0240012} \\approx 0.154923 $$\nRounding to two significant figures as required, we obtain $0.15$.", "answer": "$$\n\\boxed{0.15}\n$$", "id": "2764830"}, {"introduction": "The single-asperity Prandtl-Tomlinson model provides invaluable insight, but real interfaces involve the collective behavior of many atoms. This practice challenges you to bridge the gap between simple analytical models and powerful computational methods by building your own simulation of a multi-atom chain sliding on a substrate. By implementing the equations of motion and analyzing the results [@problem_id:2764842], you will gain hands-on experience in computational physics, exploring concepts such as finite-size effects and phonon dynamics that are crucial for modeling realistic nanoscale systems.", "problem": "You will write a complete, runnable program that models atomic-scale friction in a one-dimensional periodic chain driven over a periodic substrate, and that quantifies finite-size effects by comparing both the steady friction and the convergence of the phonon spectrum as the lateral system size increases. The scientific base must be Newton’s Second Law and standard harmonic lattice theory. Angles used inside trigonometric functions are in radians. All physical quantities must be in the International System of Units (SI).\n\nModel and definitions:\n- Consider a one-dimensional chain of $N$ identical atoms of mass $m$ at positions $x_i(t)$ with $i\\in \\{0,1,\\dots,N-1\\}$ and periodic indexing modulo $N$ (that is, $x_{i+N}\\equiv x_i$).\n- Atoms interact with nearest neighbors via identical harmonic springs of stiffness $k_{\\mathrm{nn}}$, yielding a linear internal force on atom $i$ proportional to $2x_i - x_{i-1} - x_{i+1}$.\n- The chain is driven in the $x$ direction by a single external driving spring of stiffness $k_{\\mathrm{d}}$ attached to the center of mass $x_{\\mathrm{cm}}(t) = \\frac{1}{N}\\sum_{i=0}^{N-1} x_i(t)$ and pulled by a stage at position $x_{\\mathrm{s}}(t)= v t$. The total spring force is $F_{\\mathrm{spr}}(t) = k_{\\mathrm{d}}\\left(x_{\\mathrm{s}}(t) - x_{\\mathrm{cm}}(t)\\right)$ and is distributed equally among atoms, so the driving force on atom $i$ is $F_{\\mathrm{spr}}(t)/N$.\n- The substrate exerts a periodic potential $U_{\\mathrm{sub}}(x) = U_0 \\sin\\!\\left(\\frac{2\\pi}{a}x\\right)$ with lattice constant $a$, so the substrate force on atom $i$ is $F_{\\mathrm{sub},i}(t) = -\\frac{d}{dx}U_{\\mathrm{sub}}(x_i) = -\\frac{2\\pi U_0}{a}\\cos\\!\\left(\\frac{2\\pi}{a}x_i(t)\\right)$.\n- Linear viscous damping with coefficient $\\gamma$ acts on each atom: $F_{\\mathrm{damp},i}(t) = -\\gamma \\,\\dot x_i(t)$.\n- The equations of motion for each atom are given by Newton’s Second Law,\n$$\nm \\ddot x_i(t) = -k_{\\mathrm{nn}}\\left(2x_i(t) - x_{i-1}(t) - x_{i+1}(t)\\right) + F_{\\mathrm{sub},i}(t) + \\frac{F_{\\mathrm{spr}}(t)}{N} - \\gamma \\,\\dot x_i(t),\n$$\nwith periodic indexing for $i\\pm 1$.\n- Initialization: set $x_i(0)= i\\,a$ and $\\dot x_i(0)=0$.\n\nYou must:\n1) Integrate the equations of motion over a specified time window using a numerically stable scheme for second-order ordinary differential equations with linear damping. Use parameters given below. Compute the time-averaged driving spring force magnitude per atom after discarding an initial transient, which operationally defines the steady kinetic friction per atom:\n$$\n\\bar f_N = \\frac{1}{N}\\left|\\frac{1}{T_{\\mathrm{avg}}}\\int_{t_{\\mathrm{skip}}}^{t_{\\mathrm{end}}} F_{\\mathrm{spr}}(t)\\,dt\\right|.\n$$\nReport this as a float in newtons (N).\n\n2) Assess phonon spectrum convergence with system size by comparing the empirical cumulative distribution function (CDF) of normal mode frequencies of the $N$-atom periodic harmonic chain (same $m$ and $k_{\\mathrm{nn}}$, but without substrate, driving, or damping) to a reference CDF computed on a much finer $k$-point grid that approximates the continuum limit. For the one-dimensional nearest-neighbor harmonic chain with lattice spacing $a$ and periodic boundary conditions, the normal mode frequencies arise from plane-wave solutions and depend on the wave number $k$. The allowed wave numbers for the finite chain are discretized by $N$, while the reference CDF uses a very dense sampling. Using these, compute the supremum norm (maximum absolute deviation) between the two CDFs over a uniform frequency grid spanning from the minimum to the maximum band edge, and report this scalar as a float (dimensionless).\n\nParameters to use:\n- Mass: $m = 1.0\\times 10^{-21}\\,\\mathrm{kg}$.\n- Nearest-neighbor spring constant: $k_{\\mathrm{nn}} = 1.0\\,\\mathrm{N/m}$.\n- Substrate potential amplitude: $U_0 = 2.0\\times 10^{-20}\\,\\mathrm{J}$.\n- Lattice constant: $a = 0.5\\times 10^{-9}\\,\\mathrm{m}$.\n- Driving spring constant: $k_{\\mathrm{d}} = 0.5\\,\\mathrm{N/m}$.\n- Damping: $\\gamma = 1.0\\times 10^{-10}\\,\\mathrm{kg/s}$.\n- Stage velocity: $v = 5.0\\,\\mathrm{m/s}$.\n- Time step: $\\Delta t = 1.0\\times 10^{-12}\\,\\mathrm{s}$.\n- Total integration time: $T_{\\mathrm{end}}=1.0\\times 10^{-8}\\,\\mathrm{s}$.\n- Transient to discard: $t_{\\mathrm{skip}} = 0.2\\,T_{\\mathrm{end}}$.\n\nNumerical requirements:\n- Use a time-reversible, second-order accurate integration scheme adapted to include linear damping in a stable manner. Justify the update formula from the governing equations.\n- Use periodic boundary conditions for the internal springs exactly (no edge artifacts).\n- For the phonon CDF comparison, use a fine reference grid with at least $N_{\\mathrm{ref}} = 32768$ points sampling the Brillouin zone to approximate the continuum, and compare CDFs on a uniform frequency grid with at least $M = 2048$ points spanning the band $[0,\\omega_{\\max}]$, where $\\omega_{\\max}$ is the upper band edge for the chosen $m$ and $k_{\\mathrm{nn}}$.\n- All trigonometric arguments are in radians.\n\nTest suite:\n- Use three system sizes corresponding to $N \\in \\{4,16,64\\}$.\n- For each $N$ in the test suite, compute:\n  - The steady kinetic friction magnitude per atom $\\bar f_N$ in newtons, as a float.\n  - The CDF supremum error for the phonon frequencies, as a float.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element is a two-element list for one test case in the order $N=4$, $N=16$, $N=64$. The inner list must be $[\\bar f_N, \\mathrm{err}_N]$.\n- Example of the exact required format (structure only): $[[f_1,e_1],[f_2,e_2],[f_3,e_3]]$.", "solution": "The user requires a program to model one-dimensional atomic-scale friction and analyze finite-size effects on the system's vibrational spectrum. The problem is scientifically grounded, well-posed, and all necessary parameters and definitions are provided. It is a valid computational physics problem.\n\nThe solution is partitioned into two main components as requested: a numerical simulation of the chain dynamics to compute friction, and a separate analysis of the phonon spectrum convergence.\n\n**Part 1: Simulation of Atomic Chain Dynamics and Friction Calculation**\n\nThe core of the first task is to solve the system of $N$ coupled second-order ordinary differential equations (ODEs) for the atom positions $x_i(t)$. The equation of motion for atom $i$ is:\n$$\nm \\ddot x_i(t) = F_i^{\\text{cons}}(t) - \\gamma \\dot x_i(t)\n$$\nwhere $F_i^{\\text{cons}}(t)$ is the total conservative force on atom $i$:\n$$\nF_i^{\\text{cons}}(t) = -k_{\\mathrm{nn}}\\left(2x_i(t) - x_{i-1}(t) - x_{i+1}(t)\\right) -\\frac{2\\pi U_0}{a}\\cos\\left(\\frac{2\\pi}{a}x_i(t)\\right) + \\frac{k_{\\mathrm{d}}}{N}\\left(v t - x_{\\mathrm{cm}}(t)\\right)\n$$\nTo solve this system numerically, a suitable integration algorithm must be chosen. The problem specifies a second-order accurate scheme that is stable for linear damping. A robust and appropriate choice is a variation of the Störmer-Verlet method. This method is derived by discretizing the time derivatives using central differences, which are second-order accurate:\n$$\n\\ddot x_i(t_n) \\approx \\frac{x_i(t_{n+1}) - 2x_i(t_n) + x_i(t_{n-1})}{(\\Delta t)^2}\n$$\n$$\n\\dot x_i(t_n) \\approx \\frac{x_i(t_{n+1}) - x_i(t_{n-1})}{2\\Delta t}\n$$\nSubstituting these approximations into the equation of motion at time $t_n$ yields:\n$$\nm \\frac{x_{i,n+1} - 2x_{i,n} + x_{i,n-1}}{(\\Delta t)^2} + \\gamma \\frac{x_{i,n+1} - x_{i,n-1}}{2\\Delta t} = F_{i,n}^{\\text{cons}}\n$$\nwhere $x_{i,n} \\equiv x_i(n\\Delta t)$. Rearranging this equation to solve for the position at the next time step, $x_{i,n+1}$, gives the update formula:\n$$\nx_{i,n+1} = \\frac{1}{m + \\gamma \\Delta t/2} \\left[ 2m x_{i,n} - (m - \\gamma \\Delta t/2) x_{i,n-1} + F_{i,n}^{\\text{cons}} (\\Delta t)^2 \\right]\n$$\nThis is an explicit, two-step method, requiring positions from the two previous time steps ($t_n$ and $t_{n-1}$) to compute the next ($t_{n+1}$). To initiate the simulation, we need $x_i(0)$ and $x_i(-\\Delta t)$. The initial positions $x_i(0) = i a$ are given. The positions at $t=-\\Delta t$ can be found via a Taylor expansion around $t=0$, using the given initial velocities $\\dot{x}_i(0)=0$:\n$$\nx_i(-\\Delta t) \\approx x_i(0) - \\dot x_i(0)\\Delta t + \\frac{1}{2}\\ddot x_i(0)(\\Delta t)^2 = x_i(0) + \\frac{1}{2m} F_i^{\\text{cons}}(t=0) (\\Delta t)^2\n$$\nThe forces are implemented using vectorized NumPy operations for efficiency. Periodic boundary conditions for the internal spring forces are handled exactly using `numpy.roll`. The simulation proceeds for a total time $T_{\\mathrm{end}}$. The driving spring force $F_{\\mathrm{spr}}(t)$ is recorded for $t \\ge t_{\\mathrm{skip}}$. The steady kinetic friction per atom $\\bar f_N$ is then calculated by taking the time average of these recorded values and dividing by $N$.\n\n**Part 2: Phonon Spectrum Convergence Analysis**\n\nThe second task is to quantify the convergence of the discrete phonon spectrum of the finite $N$-atom chain to its continuous-limit counterpart. The model for this part is a simplified harmonic chain (no substrate, driving, or damping). The normal mode frequencies (dispersion relation) for a 1D chain with nearest-neighbor interactions are given by:\n$$\n\\omega(k) = \\sqrt{\\frac{4k_{\\mathrm{nn}}}{m}} \\left|\\sin\\left(\\frac{ka}{2}\\right)\\right|\n$$\nDue to periodic boundary conditions over a chain of length $L=Na$, the allowed wavevectors $k$ are quantized: $k_j = \\frac{2\\pi j}{Na}$ for $j=0, 1, \\dots, N-1$. This gives a discrete set of $N$ frequencies $\\{\\omega_j\\}_{j=0}^{N-1}$.\n\nThe empirical cumulative distribution function (CDF) for this finite system is defined as:\n$$\nCDF_N(\\omega) = \\frac{1}{N} \\times (\\text{number of modes with frequency } \\le \\omega)\n$$\nA reference CDF, approximating the thermodynamic limit ($N\\to\\infty$), is calculated numerically by using a very large number of atoms, $N_{\\mathrm{ref}}=32768$. The convergence is measured by the supremum norm (or Kolmogorov-Smirnov distance) between the two CDFs:\n$$\n\\mathrm{err}_N = \\sup_{\\omega \\in [0, \\omega_{\\max}]} |CDF_N(\\omega) - CDF_{N_{\\mathrm{ref}}}(\\omega)|\n$$\nwhere $\\omega_{\\max} = \\sqrt{4k_{\\mathrm{nn}}/m}$ is the maximum possible frequency. This supremum is computed numerically by evaluating the absolute difference of the CDFs on a fine, uniform grid of $M=2048$ frequency points spanning the band $[0, \\omega_{\\max}]$ and finding the maximum value. The `numpy.searchsorted` function is used to efficiently calculate the CDF values on this grid.\n\nThe final program implements these two parts, iterates through the specified system sizes $N \\in \\{4,16,64\\}$, computes the pair of values $(\\bar f_N, \\mathrm{err}_N)$ for each, and prints the results in the required format.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test suite.\n    It calculates steady friction and phonon spectrum error for different system sizes.\n    \"\"\"\n    # Define the physical and numerical parameters from the problem statement.\n    # All units are in SI.\n    M_ATOM = 1.0e-21      # Mass of each atom in kg\n    K_NN = 1.0           # Nearest-neighbor spring constant in N/m\n    U0 = 2.0e-20         # Substrate potential amplitude in J\n    A = 0.5e-9           # Lattice constant in m\n    K_D = 0.5            # Driving spring constant in N/m\n    GAMMA = 1.0e-10      # Damping coefficient in kg/s\n    V_STAGE = 5.0        # Stage velocity in m/s\n    DT = 1.0e-12         # Time step in s\n    T_END = 1.0e-8       # Total integration time in s\n    T_SKIP_FRAC = 0.2    # Fraction of time to discard as transient\n    \n    # Numerical parameters for phonon analysis\n    N_REF = 32768        # Number of points for reference CDF\n    M_GRID = 2048        # Number of points on frequency grid for CDF comparison\n\n    # Test cases for the number of atoms\n    test_cases_N = [4, 16, 64]\n    \n    results = []\n    for N in test_cases_N:\n        # 1. Compute steady kinetic friction\n        f_N = run_simulation(N, M_ATOM, K_NN, U0, A, K_D, GAMMA, V_STAGE, DT, T_END, T_SKIP_FRAC)\n        \n        # 2. Compute phonon spectrum CDF error\n        err_N = calculate_cdf_error(N, K_NN, M_ATOM, A, N_REF, M_GRID)\n        \n        results.append([f_N, err_N])\n\n    # Final print statement in the exact required format: [[f1,e1],[f2,e2],...]\n    # String formatting is used to ensure no extra spaces are present.\n    print(f\"[{','.join(f'[{r[0]},{r[1]}]' for r in results)}]\")\n\ndef run_simulation(N, m, k_nn, U0, a, k_d, gamma, v_stage, dt, t_end, t_skip_frac):\n    \"\"\"\n    Integrates the equations of motion for a chain of N atoms to find the steady friction.\n\n    This function uses a second-order Störmer-Verlet integrator adapted for linear\n    damping, as justified in the solution text. The update rule is derived from\n    central difference approximations of the velocity and acceleration.\n    \"\"\"\n    # Derived parameters for the simulation\n    n_steps = int(t_end / dt)\n    t_skip = t_skip_frac * t_end\n    n_skip_step = int(t_skip / dt)\n\n    # Integrator coefficients\n    c1 = 1.0 / (m + gamma * dt / 2.0)\n    c2 = m - gamma * dt / 2.0\n\n    # Initial conditions: x_curr is x at step n, x_prev is x at step n-1\n    x_curr = np.arange(N, dtype=float) * a\n    \n    # Bootstrap the first step by calculating x at t=-dt.\n    # Using Taylor series: x(-dt) approx x(0) - v(0)*dt + 0.5*a(0)*dt^2.\n    # With v(0)=0, this simplifies to x(-dt) = x(0) + 0.5*a(0)*dt^2.\n    # The initial acceleration a(0) is calculated from initial forces.\n    x_cm_0 = np.mean(x_curr)\n    f_spr_0 = k_d * (0.0 - x_cm_0)\n    f_int_0 = -k_nn * (2 * x_curr - np.roll(x_curr, 1) - np.roll(x_curr, -1))\n    f_sub_0 = -(2 * np.pi * U0 / a) * np.cos(2 * np.pi * x_curr / a)\n    f_cons_0 = f_int_0 + f_sub_0 + f_spr_0 / N\n    a_0 = f_cons_0 / m\n    x_prev = x_curr + 0.5 * a_0 * dt**2\n\n    stored_f_spr = []\n\n    # Main integration loop\n    for i in range(n_steps):\n        t_current = i * dt\n\n        # Calculate conservative forces at time t_current using positions x_curr\n        x_cm = np.mean(x_curr)\n        f_spr = k_d * (v_stage * t_current - x_cm)\n        \n        # Store driving force for averaging after the initial transient\n        if i >= n_skip_step:\n            stored_f_spr.append(f_spr)\n\n        f_int = -k_nn * (2 * x_curr - np.roll(x_curr, 1) - np.roll(x_curr, -1))\n        f_sub = -(2 * np.pi * U0 / a) * np.cos(2 * np.pi * x_curr / a)\n        f_cons = f_int + f_sub + (f_spr / N)\n        \n        # Update positions from t_current to t_current+dt\n        x_next = c1 * (2.0 * m * x_curr - c2 * x_prev + f_cons * dt**2)\n        \n        # Advance the positions for the next time step\n        x_prev = x_curr\n        x_curr = x_next\n        \n    # Calculate steady kinetic friction per atom\n    avg_f_spr = np.mean(stored_f_spr)\n    f_bar_N = np.abs(avg_f_spr) / N\n    \n    return f_bar_N\n\ndef calculate_cdf_error(N, k_nn, m, a, n_ref, m_grid):\n    \"\"\"\n    Calculates the supremum norm error between the N-atom phonon CDF\n    and a high-resolution reference CDF.\n    \"\"\"\n    # Maximum frequency (upper band edge)\n    w_max = np.sqrt(4 * k_nn / m)\n    \n    # Phonon frequencies for the N-atom periodic chain\n    k_vals_N = (2 * np.pi / (N * a)) * np.arange(N)\n    w_N = w_max * np.abs(np.sin(k_vals_N * a / 2.0))\n    w_N.sort()\n\n    # Phonon frequencies for the reference chain (approximating continuum)\n    k_vals_ref = (2 * np.pi / (n_ref * a)) * np.arange(n_ref)\n    w_ref = w_max * np.abs(np.sin(k_vals_ref * a / 2.0))\n    w_ref.sort()\n\n    # Uniform frequency grid for CDF comparison\n    omega_grid = np.linspace(0, w_max, m_grid)\n    \n    # Calculate CDFs on the grid. CDF(w) = count(freq = w) / count_total.\n    # np.searchsorted provides an efficient way to find the counts.\n    cdf_N = np.searchsorted(w_N, omega_grid, side='right') / N\n    cdf_ref = np.searchsorted(w_ref, omega_grid, side='right') / n_ref\n    \n    # Supremum norm error (Kolmogorov-Smirnov distance to the reference)\n    err_N = np.max(np.abs(cdf_N - cdf_ref))\n    \n    return err_N\n\nif __name__ == '__main__':\n    solve()\n\n```", "id": "2764842"}]}