{"hands_on_practices": [{"introduction": "The first step in practical filter design is to translate a set of performance requirements into a concrete filter structure. This exercise guides you through this core process using the versatile Kaiser window method, which provides an excellent trade-off between performance and design complexity. You will practice converting standard frequency specifications into the normalized parameters required for design and apply established formulas to determine the minimum filter length that meets the desired attenuation and transition width [@problem_id:2871821].", "problem": "You are given specifications, in hertz, for several lowpass filter design tasks. Your goal is to convert the edge frequencies to normalized angular frequency in radians per sample and then determine the minimum odd-length linear-phase Finite Impulse Response (FIR) lowpass filter that satisfies given ripple constraints using a window method. Use the Kaiser window method to make the design determinate.\n\nFundamental basis to use:\n- The definition of discrete-time angular frequency mapping from hertz to normalized radians per sample: $$\\omega = 2\\pi \\frac{f}{f_{\\mathrm{s}}}.$$\n- The ideal lowpass frequency response and its time-domain impulse response as the inverse discrete-time Fourier transform of a rectangular frequency response.\n- Well-tested facts for Kaiser-window-based design that relate allowable ripple and transition width to the minimum filter order.\n\nDesign requirements:\n- For each test case, convert the passband edge frequency and the stopband edge frequency from hertz to normalized angular frequency in radians per sample using $\\omega = 2\\pi \\frac{f}{f_{\\mathrm{s}}}.$ Denote the passband edge by $\\omega_{\\mathrm{p}}$ and the stopband edge by $\\omega_{\\mathrm{s}}.$ Report these in radians per sample.\n- Design a real, causal, linear-phase lowpass FIR (Finite Impulse Response) filter using the Kaiser window method. The filter length $L$ is the number of taps, and the filter order is $L-1.$\n- The passband ripple tolerance is given as a linear absolute deviation $\\delta_{\\mathrm{p}}$, and the stopband ripple tolerance is given as a linear absolute deviation $\\delta_{\\mathrm{s}}$. To guarantee both constraints, use the stricter tolerance $\\delta = \\min(\\delta_{\\mathrm{p}}, \\delta_{\\mathrm{s}}).$\n- Let the transition width be $\\Delta \\omega = \\omega_{\\mathrm{s}} - \\omega_{\\mathrm{p}}$ and the ideal cutoff be the midpoint $\\omega_{\\mathrm{c}} = \\frac{\\omega_{\\mathrm{p}} + \\omega_{\\mathrm{s}}}{2}.$ Determine the minimum odd length $L$ such that a Kaiser-windowed design meets the ripple tolerance $\\delta$ with transition width $\\Delta \\omega$.\n- Enforce that $L$ must be odd (so that the group delay $\\frac{L-1}{2}$ is an integer); if the computed minimum is even, increase it by 1.\n\nUnits and numerical specification:\n- Report $\\omega_{\\mathrm{p}}$ and $\\omega_{\\mathrm{s}}$ in radians per sample, rounded to exactly 12 decimal places.\n- Report $L$ as an integer.\n- Angles must be in radians per sample.\n\nTest suite (each item is [$f_{\\mathrm{s}}$ in Hz, $f_{\\text{pass}}$ in Hz, $f_{\\text{stop}}$ in Hz, $\\delta_{\\mathrm{p}}$, $\\delta_{\\mathrm{s}}$]):\n- $[48000, 5000, 7000, 0.01, 0.001]$\n- $[48000, 18000, 19000, 0.005, 0.005]$\n- $[44100, 4000, 8000, 0.001, 10^{-5}]$\n- $[96000, 20000, 47500, 0.01, 0.01]$\n\nOutput format:\n- Your program should produce a single line of output that aggregates the results for all test cases as a list of lists, with no spaces anywhere.\n- For each test case, output a list containing $\\omega_{\\mathrm{p}}$ (rounded to 12 decimal places), $\\omega_{\\mathrm{s}}$ (rounded to 12 decimal places), and $L$ (an integer).\n- The final output must therefore be a single line of the form\n  $[[\\omega_{\\mathrm{p},1},\\omega_{\\mathrm{s},1},L_{1}],[\\omega_{\\mathrm{p},2},\\omega_{\\mathrm{s},2},L_{2}],\\ldots]$\n  where each $\\omega_{\\mathrm{p},k}$ and $\\omega_{\\mathrm{s},k}$ are decimal numbers with exactly 12 digits after the decimal point, and each $L_k$ is an integer, and there are no spaces anywhere in the line.", "solution": "The problem statement presented is a standard task in the field of digital signal processing: the design of a finite impulse response (FIR) lowpass filter to meet specific frequency-domain specifications using the Kaiser window method. The problem is scientifically grounded, well-posed, and all provided parameters are consistent and sufficient for a unique solution. Therefore, the problem is valid, and we shall proceed with its solution.\n\nThe design of a linear-phase FIR filter using the window method involves truncating the ideal impulse response of the desired filter with a suitable window function. The Kaiser window is chosen because it offers an excellent trade-off between the main-lobe width of its Fourier transform, which controls the filter's transition width, and its side-lobe level, which controls the passband and stopband ripple. The design process is deterministic, relying on established empirical formulas that connect the filter specifications to the required window parameters.\n\nThe steps for determining the minimum odd filter length, $L$, are as follows:\n\n1.  **Normalize Frequencies**: The given analog frequency specifications must be converted to normalized discrete-time angular frequencies, denoted by $\\omega$, in units of radians per sample. The conversion formula is:\n    $$ \\omega = 2\\pi \\frac{f}{f_s} $$\n    where $f$ is the frequency in Hertz (Hz) and $f_s$ is the sampling frequency in Hz. We calculate the normalized passband edge frequency, $\\omega_p$, and the stopband edge frequency, $\\omega_s$.\n\n2.  **Determine Design Specifications**: The filter's performance is characterized by its transition width, $\\Delta\\omega$, and the maximum allowable ripple, $\\delta$.\n    - The transition width is the difference between the stopband and passband edge frequencies: $\\Delta\\omega = \\omega_s - \\omega_p$.\n    - The ripple specification must satisfy both passband ($\\delta_p$) and stopband ($\\delta_s$) constraints. We therefore choose the more restrictive of the two: $\\delta = \\min(\\delta_p, \\delta_s)$.\n\n3.  **Calculate Required Attenuation**: The ripple, $\\delta$, is typically expressed in decibels (dB) as the minimum stopband attenuation, $A$:\n    $$ A = -20 \\log_{10}(\\delta) $$\n\n4.  **Estimate Minimum Filter Order**: An empirical formula established by Kaiser relates the attenuation $A$ and the transition width $\\Delta\\omega$ to the minimum required filter order, $N = L-1$:\n    $$ N \\ge \\frac{A - 8}{2.285 \\Delta\\omega} $$\n    Since the order $N$ must be an integer, we take the ceiling of the result from this formula to find the minimum required integer order.\n    $$ N_{\\text{min}} = \\left\\lceil \\frac{A - 8}{2.285 \\Delta\\omega} \\right\\rceil $$\n\n5.  **Determine Filter Length and Enforce Odd-Length Constraint**: The filter length $L$ is given by $L = N_{\\text{min}} + 1$. The problem specifies that the filter length must be odd, which ensures a type-I linear-phase filter with an integer group delay of $(L-1)/2$ samples. If the calculated length $L$ is even, it must be incremented by $1$ to meet this constraint.\n\nWe now apply this procedure to each test case.\n\n**Test Case 1:**\n- Specifications: $f_s = 48000$ Hz, $f_{\\text{pass}} = 5000$ Hz, $f_{\\text{stop}} = 7000$ Hz, $\\delta_p = 0.01$, $\\delta_s = 0.001$.\n- Normalized frequencies:\n  - $\\omega_p = 2\\pi \\frac{5000}{48000} = \\frac{5\\pi}{24} \\approx 0.654498469498$ rad/sample.\n  - $\\omega_s = 2\\pi \\frac{7000}{48000} = \\frac{7\\pi}{24} \\approx 0.916297857297$ rad/sample.\n- Design parameters:\n  - $\\Delta\\omega = \\omega_s - \\omega_p = \\frac{2\\pi}{24} = \\frac{\\pi}{12}$ rad/sample.\n  - $\\delta = \\min(0.01, 0.001) = 0.001$.\n  - $A = -20 \\log_{10}(0.001) = 60$ dB.\n- Filter order and length:\n  - $N_{\\text{min}} = \\lceil \\frac{60 - 8}{2.285 \\cdot (\\pi/12)} \\rceil = \\lceil 86.924 \\rceil = 87$.\n  - $L = 87 + 1 = 88$.\n  - $L$ is even, so we must set $L = 88 + 1 = 89$.\n- Result: $\\omega_p = 0.654498469498$, $\\omega_s = 0.916297857297$, $L = 89$.\n\n**Test Case 2:**\n- Specifications: $f_s = 48000$ Hz, $f_{\\text{pass}} = 18000$ Hz, $f_{\\text{stop}} = 19000$ Hz, $\\delta_p = 0.005$, $\\delta_s = 0.005$.\n- Normalized frequencies:\n  - $\\omega_p = 2\\pi \\frac{18000}{48000} = \\frac{3\\pi}{4} \\approx 2.356194490192$ rad/sample.\n  - $\\omega_s = 2\\pi \\frac{19000}{48000} = \\frac{19\\pi}{24} \\approx 2.487094336173$ rad/sample.\n- Design parameters:\n  - $\\Delta\\omega = \\omega_s - \\omega_p = \\frac{\\pi}{24}$ rad/sample.\n  - $\\delta = \\min(0.005, 0.005) = 0.005$.\n  - $A = -20 \\log_{10}(0.005) \\approx 46.0206$ dB.\n- Filter order and length:\n  - $N_{\\text{min}} = \\lceil \\frac{46.0206 - 8}{2.285 \\cdot (\\pi/24)} \\rceil = \\lceil \\frac{38.0206}{0.29911} \\rceil = \\lceil 127.108 \\rceil = 128$.\n  - $L = 128 + 1 = 129$.\n  - $L$ is odd, so the length is correct.\n- Result: $\\omega_p = 2.356194490192$, $\\omega_s = 2.487094336173$, $L = 129$.\n\n**Test Case 3:**\n- Specifications: $f_s = 44100$ Hz, $f_{\\text{pass}} = 4000$ Hz, $f_{\\text{stop}} = 8000$ Hz, $\\delta_p = 0.001$, $\\delta_s = 10^{-5}$.\n- Normalized frequencies:\n  - $\\omega_p = 2\\pi \\frac{4000}{44100} = \\frac{80\\pi}{441} \\approx 0.569865615700$ rad/sample.\n  - $\\omega_s = 2\\pi \\frac{8000}{44100} = \\frac{160\\pi}{441} \\approx 1.139731231400$ rad/sample.\n- Design parameters:\n  - $\\Delta\\omega = \\omega_s - \\omega_p = \\frac{80\\pi}{441}$ rad/sample.\n  - $\\delta = \\min(0.001, 10^{-5}) = 10^{-5}$.\n  - $A = -20 \\log_{10}(10^{-5}) = 100$ dB.\n- Filter order and length:\n  - $N_{\\text{min}} = \\lceil \\frac{100 - 8}{2.285 \\cdot (80\\pi/441)} \\rceil = \\lceil \\frac{92}{1.30214} \\rceil = \\lceil 70.653 \\rceil = 71$.\n  - $L = 71 + 1 = 72$.\n  - $L$ is even, so we must set $L = 72 + 1 = 73$.\n- Result: $\\omega_p = 0.569865615700$, $\\omega_s = 1.139731231400$, $L = 73$.\n\n**Test Case 4:**\n- Specifications: $f_s = 96000$ Hz, $f_{\\text{pass}} = 20000$ Hz, $f_{\\text{stop}} = 47500$ Hz, $\\delta_p = 0.01$, $\\delta_s = 0.01$.\n- Normalized frequencies:\n  - $\\omega_p = 2\\pi \\frac{20000}{96000} = \\frac{5\\pi}{12} \\approx 1.308996938996$ rad/sample.\n  - $\\omega_s = 2\\pi \\frac{47500}{96000} = \\frac{95\\pi}{96} \\approx 3.108643110252$ rad/sample.\n- Design parameters:\n  - $\\Delta\\omega = \\omega_s - \\omega_p = \\frac{95\\pi}{96} - \\frac{40\\pi}{96} = \\frac{55\\pi}{96}$ rad/sample.\n  - $\\delta = \\min(0.01, 0.01) = 0.01$.\n  - $A = -20 \\log_{10}(0.01) = 40$ dB.\n- Filter order and length:\n  - $N_{\\text{min}} = \\lceil \\frac{40 - 8}{2.285 \\cdot (55\\pi/96)} \\rceil = \\lceil \\frac{32}{4.11218} \\rceil = \\lceil 7.782 \\rceil = 8$.\n  - $L = 8 + 1 = 9$.\n  - $L$ is odd, so the length is correct.\n- Result: $\\omega_p = 1.308996938996$, $\\omega_s = 3.108643110252$, $L = 9$.\n\nAll calculations are now complete. The following code will implement this logic to produce the required output.", "answer": "```python\nimport numpy as np\n\n# This problem requires libraries numpy versions 1.23.5 and scipy versions 1.11.4.\n# The calculation can be completed with numpy alone.\n\ndef solve():\n    \"\"\"\n    Calculates the minimum odd-length FIR filter for given lowpass specifications\n    using the Kaiser window design method.\n    \"\"\"\n    \n    # Test cases: [f_s, f_pass, f_stop, delta_p, delta_s]\n    # f_s:         Sampling frequency in Hz\n    # f_pass:      Passband edge frequency in Hz\n    # f_stop:      Stopband edge frequency in Hz\n    # delta_p:     Passband ripple (linear)\n    # delta_s:     Stopband ripple (linear)\n    test_cases = [\n        [48000, 5000, 7000, 0.01, 0.001],\n        [48000, 18000, 19000, 0.005, 0.005],\n        [44100, 4000, 8000, 0.001, 1e-5],\n        [96000, 20000, 47500, 0.01, 0.01],\n    ]\n\n    results = []\n    for case in test_cases:\n        f_s, f_pass, f_stop, delta_p, delta_s = case\n\n        # Step 1: Convert frequencies to normalized angular frequency (rad/sample)\n        omega_p = 2 * np.pi * f_pass / f_s\n        omega_s = 2 * np.pi * f_stop / f_s\n\n        # Step 2: Determine design parameters\n        # Transition width in rad/sample\n        delta_omega = omega_s - omega_p\n        \n        # Use the stricter ripple constraint\n        delta = min(delta_p, delta_s)\n\n        # Step 3: Calculate required attenuation in dB\n        A = -20 * np.log10(delta)\n\n        # Step 4: Estimate minimum filter order N using Kaiser's formula\n        # N >= (A - 8) / (2.285 * delta_omega)\n        # Note: Using 8.0 as per Oppenheim & Schafer, for consistency with the derivation.\n        # This is a well-established approximation.\n        if delta_omega == 0:\n            # Avoid division by zero, although not expected in these test cases\n            N_min_float = float('inf')\n        else:\n            N_min_float = (A - 8.0) / (2.285 * delta_omega)\n        \n        N = np.ceil(N_min_float)\n        \n        # Step 5: Determine filter length L and enforce the odd-length constraint\n        L = int(N + 1)\n        if L % 2 == 0:\n            L += 1\n            \n        # Store results with required rounding\n        results.append([omega_p, omega_s, L])\n\n    # Format the final output string exactly as specified in the problem\n    formatted_cases = []\n    for case in results:\n        # Format omega_p and omega_s to exactly 12 decimal places\n        # L is an integer\n        formatted_case = f\"[{case[0]:.12f},{case[1]:.12f},{case[2]}]\"\n        formatted_cases.append(formatted_case)\n    \n    # Final output is a single line, a list of lists, with no spaces.\n    final_output = f\"[{','.join(formatted_cases)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2871821"}, {"introduction": "Beyond designing a filter's frequency response shape, it is crucial to control its absolute gain and understand its noise performance. This practice delves into the concepts of passband gain and Equivalent Noise Bandwidth ($B_{e}$), analyzing how simple scaling and normalization schemes affect these metrics. By working through the properties of the Hann window, you will gain a deeper understanding of how to calibrate a filter for specific applications, such as ensuring unity gain at DC or characterizing its total noise power passthrough [@problem_id:2871841].", "problem": "A finite-duration, real-valued impulse response $h[n]$, $0 \\leq n \\leq N-1$, has discrete-time frequency response $H(\\omega) = \\sum_{n=0}^{N-1} h[n] \\exp(-j \\omega n)$, where $\\omega$ is angular frequency in radians per sample. The passband gain at direct-current (DC) equals $H(0)=\\sum_{n=0}^{N-1} h[n]$. The Equivalent Noise Bandwidth (ENBW) is defined as\n$$B_{e} \\triangleq \\frac{\\frac{1}{2\\pi}\\int_{-\\pi}^{\\pi} |H(\\omega)|^{2} \\, d\\omega}{|H(0)|^{2}}.$$\nConsider an $N$-tap zero-phase lowpass smoother implemented as a scaled window $h[n] = \\alpha \\, w[n]$ with the unnormalized $N$-point Hann window\n$$w[n] = \\frac{1}{2} - \\frac{1}{2}\\cos\\!\\left(\\frac{2\\pi n}{N-1}\\right), \\quad 0 \\leq n \\leq N-1.$$\nStarting from first principles and the definitions above, do the following:\n- Derive how a change of the scalar $\\alpha$ affects $H(0)$ and $B_{e}$. Explain why normalizing $w[n]$ to unit area versus unit energy modifies the passband gain and ENBW in fundamentally different ways.\n- Compute the closed-form expressions for $\\sum_{n=0}^{N-1} w[n]$ and $\\sum_{n=0}^{N-1} w^{2}[n]$ in terms of $N$.\n- Using these results, determine the scaling factor $\\alpha$ required to achieve a specified DC passband gain target $G_{0} = 1$ when starting from a unit-energy normalization of the Hann window, for the specific case $N=51$. Round your answer to six significant figures. Express the final answer as a dimensionless scalar.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- Impulse response: $h[n]$, real-valued, for $0 \\leq n \\leq N-1$.\n- Discrete-time frequency response (DTFT): $H(\\omega) = \\sum_{n=0}^{N-1} h[n] \\exp(-j \\omega n)$.\n- DC gain: $H(0)=\\sum_{n=0}^{N-1} h[n]$.\n- Equivalent Noise Bandwidth (ENBW): $B_{e} \\triangleq \\frac{\\frac{1}{2\\pi}\\int_{-\\pi}^{\\pi} |H(\\omega)|^{2} \\, d\\omega}{|H(0)|^{2}}$.\n- Filter implementation: $h[n] = \\alpha \\, w[n]$, where $\\alpha$ is a scalar.\n- Unnormalized Hann window: $w[n] = \\frac{1}{2} - \\frac{1}{2}\\cos(\\frac{2\\pi n}{N-1})$, for $0 \\leq n \\leq N-1$.\n- Tasks:\n    1. Derive the effect of $\\alpha$ on $H(0)$ and $B_{e}$.\n    2. Explain the different effects of unit area versus unit energy normalization on passband gain and ENBW.\n    3. Compute closed-form expressions for $\\sum_{n=0}^{N-1} w[n]$ and $\\sum_{n=0}^{N-1} w^{2}[n]$.\n    4. For $N=51$, determine $\\alpha$ to achieve a DC gain target $G_{0} = 1$ when starting from a unit-energy normalized Hann window. The answer should be rounded to six significant figures.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientifically Grounded**: The problem is standard in the field of digital signal processing. All definitions, including the DTFT, ENBW, and the Hann window, are correct and fundamental concepts. The problem is scientifically sound.\n- **Well-Posed**: The problem is clearly stated with all necessary information to perform the requested derivations and calculations. A unique solution exists.\n- **Objective**: The language is technical, precise, and free of subjective or ambiguous terminology.\n- **Verdict**: The problem is deemed valid. The term \"zero-phase\" is a common convention for symmetric, linear-phase filters and does not impede a rigorous solution, as the ENBW calculation depends only on the magnitude response $|H(\\omega)|$.\n\n**Step 3: Proceed to Solution**\n\n**Part 1: Effect of the scaling factor $\\alpha$**\n\nThe impulse response is given by $h[n] = \\alpha \\, w[n]$.\nThe DC gain is $H(0)$, defined as:\n$$H(0) = \\sum_{n=0}^{N-1} h[n] = \\sum_{n=0}^{N-1} \\alpha \\, w[n] = \\alpha \\sum_{n=0}^{N-1} w[n]$$\nThe DC gain $H(0)$ is directly proportional to the scaling factor $\\alpha$.\n\nThe Equivalent Noise Bandwidth $B_e$ is defined as:\n$$B_{e} = \\frac{\\frac{1}{2\\pi}\\int_{-\\pi}^{\\pi} |H(\\omega)|^{2} \\, d\\omega}{|H(0)|^{2}}$$\nAccording to Parseval's theorem for discrete-time signals, the energy in the frequency domain is equal to the energy in the time domain:\n$$\\frac{1}{2\\pi}\\int_{-\\pi}^{\\pi} |H(\\omega)|^{2} \\, d\\omega = \\sum_{n=0}^{N-1} |h[n]|^2$$\nSince $h[n]$ is real-valued, $|h[n]|^2 = h[n]^2$. Substituting $h[n] = \\alpha \\, w[n]$:\n$$\\sum_{n=0}^{N-1} h[n]^2 = \\sum_{n=0}^{N-1} (\\alpha \\, w[n])^2 = \\alpha^2 \\sum_{n=0}^{N-1} w[n]^2$$\nThe denominator of the $B_e$ expression is $|H(0)|^2$:\n$$|H(0)|^2 = \\left( \\alpha \\sum_{n=0}^{N-1} w[n] \\right)^2 = \\alpha^2 \\left( \\sum_{n=0}^{N-1} w[n] \\right)^2$$\nSubstituting these expressions back into the definition of $B_e$:\n$$B_{e} = \\frac{\\alpha^2 \\sum_{n=0}^{N-1} w[n]^2}{\\alpha^2 \\left( \\sum_{n=0}^{N-1} w[n] \\right)^2} = \\frac{\\sum_{n=0}^{N-1} w[n]^2}{\\left( \\sum_{n=0}^{N-1} w[n] \\right)^2}$$\nThe scaling factor $\\alpha$ cancels out completely. Therefore, the Equivalent Noise Bandwidth $B_e$ is independent of $\\alpha$.\n\n**Part 2: Comparison of Normalization Schemes**\n\nThe ENBW is a property of the window's shape, not its scale, as demonstrated above. Any scaling, including normalization to unit area or unit energy, leaves the ENBW unchanged. The fundamental difference between the normalization schemes lies in their effect on the passband gain at DC, $H(0)$.\n\nLet $S_1 = \\sum_{n=0}^{N-1} w[n]$ and $S_2 = \\sum_{n=0}^{N-1} w[n]^2$ be the sum and sum of squares of the unnormalized window, respectively. The ENBW of the unnormalized window shape is $B_e = S_2 / S_1^2$.\n\n1.  **Unit Area Normalization**: This scheme creates a new window $w_A[n]$ such that its coefficients sum to $1$.\n    $$w_A[n] = \\frac{w[n]}{S_1} \\implies \\sum_{n=0}^{N-1} w_A[n] = 1$$\n    If we construct a filter $h[n] = w_A[n]$, its DC gain is by definition $H(0) = \\sum h[n] = 1$. This normalization directly sets the DC gain to unity. A subsequent scaling $h[n] = \\alpha w_A[n]$ results in a DC gain of exactly $\\alpha$. The ENBW remains $B_e = \\frac{\\sum w_A[n]^2}{(\\sum w_A[n])^2} = \\frac{S_2/S_1^2}{1^2} = S_2/S_1^2$.\n\n2.  **Unit Energy Normalization**: This scheme creates a new window $w_E[n]$ such that the sum of the squares of its coefficients is $1$.\n    $$w_E[n] = \\frac{w[n]}{\\sqrt{S_2}} \\implies \\sum_{n=0}^{N-1} w_E[n]^2 = 1$$\n    If we construct a filter $h[n] = w_E[n]$, its DC gain is a derived property:\n    $$H(0) = \\sum_{n=0}^{N-1} w_E[n] = \\frac{1}{\\sqrt{S_2}} \\sum_{n=0}^{N-1} w[n] = \\frac{S_1}{\\sqrt{S_2}}$$\n    This gain is not unity in general; it depends on the window's shape. A subsequent scaling $h[n] = \\alpha w_E[n]$ results in a DC gain of $\\alpha S_1 / \\sqrt{S_2}$. The ENBW remains $B_e = \\frac{\\sum w_E[n]^2}{(\\sum w_E[n])^2} = \\frac{1}{(S_1/\\sqrt{S_2})^2} = S_2/S_1^2$.\n\nIn conclusion, the claim that normalization modifies ENBW is incorrect; ENBW is invariant to scaling. The fundamental difference lies in the treatment of passband gain. Unit area normalization inherently sets the DC gain to $1$, making gain control trivial. Unit energy normalization sets the filter's total energy, from which the DC gain emerges as a property dependent on the window's shape factor $S_1/\\sqrt{S_2}$.\n\n**Part 3: Closed-Form Expressions for Sums**\n\nFirst, we compute $S_1 = \\sum_{n=0}^{N-1} w[n]$:\n$$S_1 = \\sum_{n=0}^{N-1} \\left( \\frac{1}{2} - \\frac{1}{2}\\cos\\left(\\frac{2\\pi n}{N-1}\\right) \\right) = \\frac{N}{2} - \\frac{1}{2} \\sum_{n=0}^{N-1} \\cos\\left(\\frac{2\\pi n}{N-1}\\right)$$\nWe evaluate the cosine sum by considering the sum of complex exponentials. Let $M=N-1$. For $N>2$, $M>1$.\n$$\\sum_{n=0}^{N-1} \\cos\\left(\\frac{2\\pi n}{N-1}\\right) = \\text{Re}\\left\\{ \\sum_{n=0}^{M} \\left(\\exp\\left(j\\frac{2\\pi}{M}\\right)\\right)^n \\right\\}$$\nThis is a geometric series. Let $r = \\exp(j\\frac{2\\pi}{M})$. Since $M>1$, $r \\neq 1$. The sum of $M+1=N$ terms is $\\frac{1-r^{N}}{1-r}$.\n$$r^N = r^{M+1} = \\exp\\left(j\\frac{2\\pi(M+1)}{M}\\right) = \\exp\\left(j\\left(2\\pi + \\frac{2\\pi}{M}\\right)\\right) = \\exp\\left(j\\frac{2\\pi}{M}\\right) = r$$\nThus, the sum is $\\frac{1-r}{1-r}=1$. The real part is $1$. This holds for $N>2$. For $N=2$, the sum is $\\cos(0)+\\cos(2\\pi)=2$. The case of interest is $N=51$, so we proceed with the result for $N>2$.\n$$S_1 = \\frac{N}{2} - \\frac{1}{2}(1) = \\frac{N-1}{2}$$\nNext, we compute $S_2 = \\sum_{n=0}^{N-1} w^2[n]$:\n$$w^2[n] = \\left( \\frac{1}{2}\\left(1 - \\cos\\left(\\frac{2\\pi n}{N-1}\\right)\\right) \\right)^2 = \\frac{1}{4}\\left(1 - 2\\cos\\left(\\frac{2\\pi n}{N-1}\\right) + \\cos^2\\left(\\frac{2\\pi n}{N-1}\\right)\\right)$$\nUsing the identity $\\cos^2(\\theta) = \\frac{1}{2}(1 + \\cos(2\\theta))$:\n$$w^2[n] = \\frac{1}{4}\\left(1 - 2\\cos\\left(\\frac{2\\pi n}{N-1}\\right) + \\frac{1}{2} + \\frac{1}{2}\\cos\\left(\\frac{4\\pi n}{N-1}\\right)\\right) = \\frac{1}{4}\\left(\\frac{3}{2} - 2\\cos\\left(\\frac{2\\pi n}{N-1}\\right) + \\frac{1}{2}\\cos\\left(\\frac{4\\pi n}{N-1}\\right)\\right)$$\nSumming from $n=0$ to $N-1$:\n$$S_2 = \\frac{1}{4}\\left(\\frac{3N}{2} - 2\\sum_{n=0}^{N-1}\\cos\\left(\\frac{2\\pi n}{N-1}\\right) + \\frac{1}{2}\\sum_{n=0}^{N-1}\\cos\\left(\\frac{4\\pi n}{N-1}\\right)\\right)$$\nFor $N>3$, both cosine sums evaluate to $1$ using the same geometric series logic as before.\n$$S_2 = \\frac{1}{4}\\left(\\frac{3N}{2} - 2(1) + \\frac{1}{2}(1)\\right) = \\frac{1}{4}\\left(\\frac{3N}{2} - \\frac{3}{2}\\right) = \\frac{3}{8}(N-1)$$\n\n**Part 4: Calculation of the scaling factor $\\alpha$**\n\nWe start with a unit-energy normalized Hann window, $w_E[n]$.\n$$w_E[n] = \\frac{w[n]}{\\sqrt{\\sum_{k=0}^{N-1} w^2[k]}} = \\frac{w[n]}{\\sqrt{S_2}}$$\nThe filter is $h[n] = \\alpha \\, w_E[n]$. The DC gain is required to be $G_0 = H(0) = 1$.\n$$H(0) = \\sum_{n=0}^{N-1} h[n] = \\alpha \\sum_{n=0}^{N-1} w_E[n] = \\frac{\\alpha}{\\sqrt{S_2}} \\sum_{n=0}^{N-1} w[n] = \\frac{\\alpha S_1}{\\sqrt{S_2}} = 1$$\nSolving for $\\alpha$:\n$$\\alpha = \\frac{\\sqrt{S_2}}{S_1}$$\nSubstituting the expressions for $S_1$ and $S_2$ for $N>3$:\n$$\\alpha = \\frac{\\sqrt{\\frac{3}{8}(N-1)}}{\\frac{N-1}{2}} = \\frac{\\sqrt{3(N-1)}}{\\sqrt{8}} \\cdot \\frac{2}{N-1} = \\frac{2\\sqrt{3(N-1)}}{2\\sqrt{2}(N-1)} = \\frac{\\sqrt{3}}{\\sqrt{2(N-1)}} = \\sqrt{\\frac{3}{2(N-1)}}$$\nFor the specific case $N=51$:\n$$\\alpha = \\sqrt{\\frac{3}{2(51-1)}} = \\sqrt{\\frac{3}{2(50)}} = \\sqrt{\\frac{3}{100}} = \\frac{\\sqrt{3}}{10}$$\nThe numerical value is $\\sqrt{3} / 10 \\approx 0.17320508...$. Rounding to six significant figures gives $0.173205$.", "answer": "$$\n\\boxed{0.173205}\n$$", "id": "2871841"}, {"introduction": "A theoretically correct formula is not always a numerically robust one, a vital lesson in computational signal processing. This exercise explores the practical challenge of implementing the ideal impulse response for a narrowband bandpass filter, where direct computation can lead to catastrophic cancellation errors. You will derive a numerically stable form of the impulse response, gaining insight into the mathematical techniques used to ensure accurate filter implementation in demanding scenarios [@problem_id:2871850].", "problem": "You are designing a linear-phase finite impulse response filter using the window method. Let the ideal frequency response be an even, real-valued, unit-gain bandpass defined by $H_{d}(e^{j\\omega})=1$ for $\\omega \\in [\\omega_{1},\\omega_{2}]\\cup[-\\omega_{2},-\\omega_{1}]$ and $H_{d}(e^{j\\omega})=0$ elsewhere, where $0<\\omega_{1}<\\omega_{2}<\\pi$. Let the filter length $N$ be odd and denote the symmetry center by $M=(N-1)/2$. The centered ideal impulse response $h_{d}[n]$ to be windowed is defined as the inverse Discrete-Time Fourier Transform (DTFT) of $H_{d}(e^{j\\omega})$ with respect to the time index shift $m=n-M$, so that the desired impulse response is even about $m=0$. Suppose the band is parametrized as $\\omega_{1}=\\omega_{0}-\\Delta/2$ and $\\omega_{2}=\\omega_{0}+\\Delta/2$ with $0<\\Delta\\ll 1$ and $0<\\omega_{0}<\\pi-\\Delta/2$ (a narrowband centered at $\\omega_{0}$). All angles are in radians.\n\nStarting only from the DTFT inversion formula and the stated $H_{d}(e^{j\\omega})$, perform the following:\n\n1. Derive a closed-form expression for $h_{d}[n]$ in terms of $m=n-M$, $\\omega_{0}$, and $\\Delta$. Carefully analyze the behavior for $m=0$ and for small $|m|$ when $\\Delta$ is small, and explain the source of numerical cancellation if one evaluates the expression by directly subtracting two nearly equal $\\sin(\\cdot)$ terms. Then, use trigonometric identities and L’Hospital’s rule to rewrite $h_{d}[n]$ in a numerically stable form that is valid for all integer $m$, including $m=0$. Define $\\operatorname{sinc}(x)$ as $\\sin(x)/x$, and present $h_{d}[n]$ using $\\operatorname{sinc}(\\cdot)$ so that the formula does not suffer from catastrophic cancellation for small $\\Delta|m|$.\n\n2. Using your stabilized expression, compute the limit\n$$\nR(\\omega_{0})=\\lim_{\\Delta\\to 0^{+}}\\frac{h_{d}[M+1]}{h_{d}[M]}.\n$$\nProvide your final answer as a single, exact, closed-form expression in terms of $\\omega_{0}$ only. No numerical approximation or rounding is required. Express angles in radians.", "solution": "The problem as stated is scientifically grounded, well-posed, objective, and internally consistent. It presents a standard task in the theory of digital signal processing: the derivation of the ideal impulse response for a bandpass filter and analysis of its properties. The problem is valid and admits a direct, rigorous solution.\n\nWe begin the analysis from first principles. The desired impulse response $h_d[n]$ is specified to be even about the symmetry center $M=(N-1)/2$. This implies we are designing a zero-phase filter whose impulse response is a function of the index $m=n-M$, and then applying a linear phase shift corresponding to a delay of $M$ samples to ensure causality. Let us denote this zero-phase impulse response by $h_{d,c}[m]$. According to the definition of the inverse Discrete-Time Fourier Transform (DTFT), $h_{d,c}[m]$ is given by:\n$$\nh_{d,c}[m] = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} H_d(\\exp(j\\omega)) \\exp(j\\omega m) \\, d\\omega\n$$\nwhere $m = n-M$. The problem states that the ideal frequency response $H_d(\\exp(j\\omega))$ is a unit-gain bandpass filter, equal to $1$ for $\\omega \\in [\\omega_1, \\omega_2] \\cup [-\\omega_2, -\\omega_1]$ and $0$ elsewhere. Substituting this into the integral, we get:\n$$\nh_{d,c}[m] = \\frac{1}{2\\pi} \\left( \\int_{-\\omega_2}^{-\\omega_1} \\exp(j\\omega m) \\, d\\omega + \\int_{\\omega_1}^{\\omega_2} \\exp(j\\omega m) \\, d\\omega \\right)\n$$\nWe must evaluate this integral. The solution depends on whether $m$ is zero or non-zero.\n\nCase 1: $m \\neq 0$.\nThe integral of the exponential is straightforward:\n$$\nh_{d,c}[m] = \\frac{1}{2\\pi} \\left( \\left[ \\frac{\\exp(j\\omega m)}{jm} \\right]_{-\\omega_2}^{-\\omega_1} + \\left[ \\frac{\\exp(j\\omega m)}{jm} \\right]_{\\omega_1}^{\\omega_2} \\right)\n$$\n$$\nh_{d,c}[m] = \\frac{1}{2\\pi jm} \\left( (\\exp(-j\\omega_1 m) - \\exp(-j\\omega_2 m)) + (\\exp(j\\omega_2 m) - \\exp(j\\omega_1 m)) \\right)\n$$\nRearranging terms to group complex exponentials:\n$$\nh_{d,c}[m] = \\frac{1}{2\\pi jm} \\left( (\\exp(j\\omega_2 m) - \\exp(-j\\omega_2 m)) - (\\exp(j\\omega_1 m) - \\exp(-j\\omega_1 m)) \\right)\n$$\nUsing Euler's identity, $\\sin(x) = \\frac{\\exp(jx) - \\exp(-jx)}{2j}$, we simplify the expression:\n$$\nh_{d,c}[m] = \\frac{1}{2\\pi jm} \\left( 2j\\sin(\\omega_2 m) - 2j\\sin(\\omega_1 m) \\right)\n$$\n$$\nh_{d,c}[m] = \\frac{1}{\\pi m} (\\sin(\\omega_2 m) - \\sin(\\omega_1 m))\n$$\n\nCase 2: $m = 0$.\nIn this case, the integrand $\\exp(j\\omega m)$ becomes $\\exp(0)=1$. The integral becomes:\n$$\nh_{d,c}[0] = \\frac{1}{2\\pi} \\left( \\int_{-\\omega_2}^{-\\omega_1} 1 \\, d\\omega + \\int_{\\omega_1}^{\\omega_2} 1 \\, d\\omega \\right)\n$$\n$$\nh_{d,c}[0] = \\frac{1}{2\\pi} \\left( (-\\omega_1 - (-\\omega_2)) + (\\omega_2 - \\omega_1) \\right) = \\frac{1}{2\\pi} (\\omega_2 - \\omega_1 + \\omega_2 - \\omega_1)\n$$\n$$\nh_{d,c}[0] = \\frac{2(\\omega_2 - \\omega_1)}{2\\pi} = \\frac{\\omega_2 - \\omega_1}{\\pi}\n$$\nNow, we substitute the given parametrization $\\omega_1 = \\omega_0 - \\Delta/2$ and $\\omega_2 = \\omega_0 + \\Delta/2$. The bandwidth $\\omega_2 - \\omega_1$ is simply $\\Delta$.\nSo for $m=0$, we have $h_{d,c}[0] = \\Delta/\\pi$.\nFor $m \\neq 0$, substituting the parametrizations yields:\n$$\nh_{d,c}[m] = \\frac{1}{\\pi m} \\left( \\sin\\left(\\left(\\omega_0 + \\frac{\\Delta}{2}\\right)m\\right) - \\sin\\left(\\left(\\omega_0 - \\frac{\\Delta}{2}\\right)m\\right) \\right)\n$$\nThis expression, valid for $m \\neq 0$, along with $h_{d,c}[0]=\\Delta/\\pi$, constitutes the closed-form expression for the ideal impulse response.\n\nWe are asked to analyze the source of numerical cancellation. When the bandwidth $\\Delta$ is very small ($\\Delta \\ll 1$), the frequencies $\\omega_1$ and $\\omega_2$ are very close. Consequently, for any given $m$, the arguments of the two sine functions, $(\\omega_0 + \\Delta/2)m$ and $(\\omega_0 - \\Delta/2)m$, are very close to each other. The direct computation of the difference of two nearly equal numbers, $\\sin((\\omega_0 + \\Delta/2)m)$ and $\\sin((\\omega_0 - \\Delta/2)m)$, in finite-precision arithmetic leads to a loss of significant figures. This phenomenon is known as catastrophic cancellation and severely degrades the numerical accuracy of the result.\n\nTo obtain a numerically stable form, we apply the trigonometric product-to-sum identity: $\\sin(A) - \\sin(B) = 2\\cos\\left(\\frac{A+B}{2}\\right)\\sin\\left(\\frac{A-B}{2}\\right)$.\nLet $A = (\\omega_0 + \\Delta/2)m$ and $B = (\\omega_0 - \\Delta/2)m$. Then:\n$$\n\\frac{A+B}{2} = \\frac{(\\omega_0 + \\Delta/2)m + (\\omega_0 - \\Delta/2)m}{2} = \\omega_0 m\n$$\n$$\n\\frac{A-B}{2} = \\frac{(\\omega_0 + \\Delta/2)m - (\\omega_0 - \\Delta/2)m}{2} = \\frac{\\Delta m}{2}\n$$\nSubstituting these into the expression for $h_{d,c}[m]$ for $m \\neq 0$:\n$$\nh_{d,c}[m] = \\frac{1}{\\pi m} \\left( 2\\cos(\\omega_0 m) \\sin\\left(\\frac{\\Delta m}{2}\\right) \\right)\n$$\n$$\nh_{d,c}[m] = \\frac{2}{\\pi} \\cos(\\omega_0 m) \\frac{\\sin(\\Delta m/2)}{m}\n$$\nThis form replaces subtraction with multiplication, which is numerically stable. To express this using the sinc function, $\\operatorname{sinc}(x) = \\sin(x)/x$, we rearrange the terms:\n$$\nh_{d,c}[m] = \\frac{2}{\\pi} \\cos(\\omega_0 m) \\left(\\frac{\\Delta}{2}\\right) \\frac{\\sin(\\Delta m/2)}{\\Delta m/2}\n$$\n$$\nh_{d,c}[m] = \\frac{\\Delta}{\\pi} \\cos(\\omega_0 m) \\operatorname{sinc}\\left(\\frac{\\Delta m}{2}\\right)\n$$\nThis is the stabilized expression. To verify it is valid for all integer $m$, including $m=0$, we can take the limit as $m \\to 0$. As the problem notes, this involves L'Hospital's rule, which is embedded in the definition of the sinc function at its origin. Using the fact that $\\lim_{x\\to 0} \\operatorname{sinc}(x) = 1$:\n$$\n\\lim_{m\\to 0} h_{d,c}[m] = \\lim_{m\\to 0} \\frac{\\Delta}{\\pi} \\cos(\\omega_0 m) \\operatorname{sinc}\\left(\\frac{\\Delta m}{2}\\right) = \\frac{\\Delta}{\\pi} \\cos(0) \\cdot 1 = \\frac{\\Delta}{\\pi}\n$$\nThis limit matches the value we computed directly for $h_{d,c}[0]$. Therefore, the expression $h_d[n] = \\frac{\\Delta}{\\pi} \\cos(\\omega_0 (n-M)) \\operatorname{sinc}\\left(\\frac{\\Delta (n-M)}{2}\\right)$ is numerically stable and correct for all integer $n$. This concludes the first part of the problem.\n\nFor the second part, we must compute the limit $R(\\omega_0) = \\lim_{\\Delta \\to 0^+} \\frac{h_d[M+1]}{h_d[M]}$.\nUsing our stabilized expression for $h_{d,c}[m]$, we evaluate the numerator and denominator.\nThe denominator is $h_d[M] = h_{d,c}[0]$:\n$$\nh_d[M] = \\frac{\\Delta}{\\pi}\n$$\nThe numerator is $h_d[M+1] = h_{d,c}[1]$ (since $m=n-M=(M+1)-M=1$):\n$$\nh_d[M+1] = \\frac{\\Delta}{\\pi} \\cos(\\omega_0 \\cdot 1) \\operatorname{sinc}\\left(\\frac{\\Delta \\cdot 1}{2}\\right) = \\frac{\\Delta}{\\pi} \\cos(\\omega_0) \\operatorname{sinc}\\left(\\frac{\\Delta}{2}\\right)\n$$\nNow, we form the ratio and take the limit:\n$$\nR(\\omega_0) = \\lim_{\\Delta \\to 0^+} \\frac{\\frac{\\Delta}{\\pi} \\cos(\\omega_0) \\operatorname{sinc}(\\frac{\\Delta}{2})}{\\frac{\\Delta}{\\pi}}\n$$\nWe cancel the term $\\Delta/\\pi$:\n$$\nR(\\omega_0) = \\lim_{\\Delta \\to 0^+} \\cos(\\omega_0) \\operatorname{sinc}\\left(\\frac{\\Delta}{2}\\right)\n$$\nSince $\\cos(\\omega_0)$ is independent of $\\Delta$, we can move it outside the limit:\n$$\nR(\\omega_0) = \\cos(\\omega_0) \\lim_{\\Delta \\to 0^+} \\operatorname{sinc}\\left(\\frac{\\Delta}{2}\\right)\n$$\nAs $\\Delta \\to 0^+$, the argument of the sinc function $\\Delta/2 \\to 0$. By definition, $\\lim_{x \\to 0} \\operatorname{sinc}(x) = 1$. Therefore:\n$$\nR(\\omega_0) = \\cos(\\omega_0) \\cdot 1 = \\cos(\\omega_0)\n$$\nThis is the final exact expression for the limit.", "answer": "$$\n\\boxed{\\cos(\\omega_{0})}\n$$", "id": "2871850"}]}