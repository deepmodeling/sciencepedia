{"hands_on_practices": [{"introduction": "A foundational property of any differentiator is its response to a constant, or Direct Current (DC), signal. Since the derivative of a constant is zero, a well-designed FIR differentiator must produce an output of zero for a constant input sequence. This exercise [@problem_id:2864215] guides you through deriving the fundamental condition on the impulse response coefficients $\\{h[n]\\}$ that enforces this behavior. By examining this from both the time domain (via convolution) and frequency domain (via the DTFT), you will solidify your understanding of DC gain and see how structural choices, such as filter antisymmetry, elegantly satisfy this critical design requirement from the outset.", "problem": "Consider a real-coefficient, length-$N$ Finite Impulse Response (FIR) differentiator implemented as a Linear Time-Invariant (LTI) system with impulse response $\\{h[n]\\}_{n=0}^{N-1}$, where $N \\in \\mathbb{N}$ and $h[n] \\in \\mathbb{R}$ for all $n \\in \\{0,1,\\ldots,N-1\\}$. Let the input be a constant sequence $x[n] = C$ for all integers $n$, where $C \\in \\mathbb{R}$ is arbitrary but fixed. Starting from the fundamental definitions of LTI convolution and the Discrete-Time Fourier Transform (DTFT), derive the condition under which the output $y[n]$ is identically zero for all $n$ when $x[n]$ is constant. Establish necessity and sufficiency of this condition. Then, verify this condition for FIR coefficient sets that are antisymmetric about their midpoint, that is, satisfy $h[n] = -h[N-1-n]$ for all $n \\in \\{0,1,\\ldots,N-1\\}$. Your verification must explicitly address both the case of even $N$ and the case of odd $N$ (including the value of the central tap when $N$ is odd). You may invoke the fact that the DTFT at angular frequency $\\omega$ (in radians per sample) of $h[n]$ is $H(\\exp(j\\omega)) = \\sum_{n=0}^{N-1} h[n] \\exp(-j\\omega n)$, but you must justify how this relates to the response to constant inputs from first principles.\n\nProvide, as your final answer, the single simplest analytic expression (in terms of $\\{h[n]\\}$) whose value must vanish to guarantee exact zero output for constant inputs. Do not present the final answer as an equation or inequality; provide only the expression itself. No numerical rounding is required.", "solution": "The problem as stated is scientifically grounded, well-posed, and complete. It concerns fundamental properties of Linear Time-Invariant (LTI) systems, specifically Finite Impulse Response (FIR) filters, a core topic in signal processing. The problem is formalizable and requires a rigorous derivation from first principles. Therefore, it is valid and we proceed with the solution.\n\nLet the system be an LTI system characterized by its finite-length impulse response $\\{h[n]\\}_{n=0}^{N-1}$, where $h[n] \\in \\mathbb{R}$ for all $n \\in \\{0, 1, \\ldots, N-1\\}$. The output $y[n]$ of this system for an input $x[n]$ is given by the discrete-time convolution sum:\n$$y[n] = \\sum_{k=-\\infty}^{\\infty} h[k] x[n-k]$$\nGiven that the impulse response is of finite length $N$, it is non-zero only for $k \\in \\{0, 1, \\ldots, N-1\\}$. The convolution sum simplifies to:\n$$y[n] = \\sum_{k=0}^{N-1} h[k] x[n-k]$$\nThe input is specified as a constant sequence, $x[n] = C$ for all integers $n$, where $C \\in \\mathbb{R}$ is an arbitrary, fixed constant. Substituting this into the convolution equation, we have $x[n-k] = C$ for any value of $n$ and $k$. This yields:\n$$y[n] = \\sum_{k=0}^{N-1} h[k] C$$\nSince the constant $C$ does not depend on the summation index $k$, it can be factored out of the sum:\n$$y[n] = C \\left( \\sum_{k=0}^{N-1} h[k] \\right)$$\nThe problem requires the output $y[n]$ to be identically zero for all $n$. This means $y[n] = 0$. The equation becomes:\n$$C \\left( \\sum_{k=0}^{N-1} h[k] \\right) = 0$$\nThis equation must hold for any arbitrary choice of the constant $C$. If we choose any $C \\neq 0$, the only way for the product to be zero is if the other term is zero. Therefore, the condition that must be satisfied by the impulse response coefficients is:\n$$\\sum_{k=0}^{N-1} h[k] = 0$$\n\nWe must establish the necessity and sufficiency of this condition.\nSufficiency: Assume that $\\sum_{k=0}^{N-1} h[k] = 0$. Then, for any input $x[n] = C$, the output is $y[n] = C \\left( \\sum_{k=0}^{N-1} h[k] \\right) = C \\cdot 0 = 0$ for all $n$. Thus, the condition is sufficient to guarantee zero output for any constant input.\nNecessity: Assume that for any constant input $x[n] = C$, the output $y[n]$ is identically zero. This implies that the relation $C \\left( \\sum_{k=0}^{N-1} h[k] \\right) = 0$ must hold for any $C \\in \\mathbb{R}$. Let us choose a specific non-zero constant, for example $C=1$. For this case, the equation becomes $1 \\cdot \\left( \\sum_{k=0}^{N-1} h[k] \\right) = 0$, which directly implies $\\sum_{k=0}^{N-1} h[k] = 0$. Thus, the condition is necessary.\n\nNow, we relate this condition to the Discrete-Time Fourier Transform (DTFT). The DTFT of the impulse response $h[n]$ defines the system's frequency response, $H(\\exp(j\\omega)) = \\sum_{n=0}^{N-1} h[n] \\exp(-j\\omega n)$. Complex exponentials of the form $\\exp(j\\omega n)$ are eigenfunctions of LTI systems. For an input $x[n] = A \\exp(j\\omega_{0} n)$, the output is $y[n] = A H(\\exp(j\\omega_{0})) \\exp(j\\omega_{0} n)$.\nThe constant input $x[n] = C$ can be viewed as a complex exponential with zero frequency ($\\omega=0$) and amplitude $C$, i.e., $x[n] = C \\cdot \\exp(j \\cdot 0 \\cdot n)$. Based on the eigenfunction property, the output is:\n$$y[n] = C \\cdot H(\\exp(j \\cdot 0)) \\cdot \\exp(j \\cdot 0 \\cdot n) = C \\cdot H(\\exp(j0))$$\nThe term $H(\\exp(j0))$ is the system's frequency response evaluated at $\\omega=0$, which is the DC gain. From the DTFT definition:\n$$H(\\exp(j0)) = \\sum_{n=0}^{N-1} h[n] \\exp(-j \\cdot 0 \\cdot n) = \\sum_{n=0}^{N-1} h[n] \\cdot 1 = \\sum_{n=0}^{N-1} h[n]$$\nTherefore, the output is $y[n] = C \\sum_{n=0}^{N-1} h[n]$, which is identical to the result obtained from direct convolution. The condition for $y[n]$ to be identically zero for any $C \\neq 0$ is that the DC gain must be zero: $H(\\exp(j0)) = 0$, which is precisely the condition $\\sum_{n=0}^{N-1} h[n] = 0$. An ideal differentiator must have a frequency response proportional to $j\\omega$, which is zero at $\\omega=0$. Our derived condition enforces this requirement for a practical FIR differentiator.\n\nFinally, we must verify this condition for an FIR filter with antisymmetric coefficients, i.e., $h[n] = -h[N-1-n]$ for $n \\in \\{0, 1, \\ldots, N-1\\}$. We must evaluate the sum $S = \\sum_{n=0}^{N-1} h[n]$ and show it is zero. We consider two cases for the filter length $N$.\n\nCase 1: $N$ is even. Let $N=2M$ for some integer $M \\ge 1$. The sum is $S = \\sum_{n=0}^{2M-1} h[n]$. We can partition the sum into two halves:\n$$S = \\sum_{n=0}^{M-1} h[n] + \\sum_{n=M}^{2M-1} h[n]$$\nUsing the antisymmetry property $h[n] = -h[N-1-n] = -h[2M-1-n]$, we rewrite the second summation:\n$$\\sum_{n=M}^{2M-1} h[n] = \\sum_{n=M}^{2M-1} (-h[2M-1-n])$$\nLet's perform a change of index $k = 2M-1-n$. As $n$ ranges from $M$ to $2M-1$, the index $k$ ranges from $M-1$ down to $0$. The summation becomes:\n$$\\sum_{k=0}^{M-1} (-h[k]) = -\\sum_{k=0}^{M-1} h[k]$$\nSubstituting this back into the expression for $S$:\n$$S = \\left(\\sum_{n=0}^{M-1} h[n]\\right) + \\left(-\\sum_{n=0}^{M-1} h[n]\\right) = 0$$\nThe condition is satisfied for any even length $N$.\n\nCase 2: $N$ is odd. Let $N=2M+1$ for some integer $M \\ge 0$. The summation index $n$ runs from $0$ to $2M$. The center of symmetry is at $n=M$. Let us first examine the value of the central coefficient, $h[M]$. Using the antisymmetry condition $h[n] = -h[N-1-n]$ at $n=M$:\n$$h[M] = -h[(2M+1)-1-M] = -h[M]$$\nThis implies $2h[M] = 0$, which means $h[M]=0$. The central tap of an odd-length antisymmetric FIR filter must be zero. Now we evaluate the sum $S = \\sum_{n=0}^{2M} h[n]$:\n$$S = \\left(\\sum_{n=0}^{M-1} h[n]\\right) + h[M] + \\left(\\sum_{n=M+1}^{2M} h[n]\\right)$$\nSince $h[M]=0$, this simplifies to:\n$$S = \\sum_{n=0}^{M-1} h[n] + \\sum_{n=M+1}^{2M} h[n]$$\nApplying the antisymmetry property $h[n] = -h[N-1-n] = -h[2M-n]$ to the second sum:\n$$\\sum_{n=M+1}^{2M} h[n] = \\sum_{n=M+1}^{2M} (-h[2M-n])$$\nLet's perform a change of index $k=2M-n$. As $n$ ranges from $M+1$ to $2M$, the index $k$ ranges from $M-1$ down to $0$. The summation becomes:\n$$\\sum_{k=0}^{M-1} (-h[k]) = -\\sum_{k=0}^{M-1} h[k]$$\nSubstituting this back into the expression for $S$:\n$$S = \\left(\\sum_{n=0}^{M-1} h[n]\\right) + \\left(-\\sum_{n=0}^{M-1} h[n]\\right) = 0$$\nThe condition is also satisfied for any odd length $N$.\n\nIn both cases, even and odd $N$, the antisymmetry property robustly guarantees that the sum of the impulse response coefficients is zero. Therefore, any FIR filter with antisymmetric coefficients will produce a zero output for a constant input. The simplest analytic expression whose value must be zero is the sum of the filter coefficients.", "answer": "$$\\boxed{\\sum_{n=0}^{N-1} h[n]}$$", "id": "2864215"}, {"introduction": "While a zero DC gain ensures our filter does not respond to constant inputs, it does not guarantee that it acts as a proper differentiator for low-frequency signals. The ideal differentiator's frequency response, $H_d(\\omega) = j\\omega$, has a specific slope at $\\omega=0$. This practice [@problem_id:2864240] challenges you to derive the precise scaling factor required to normalize a filter prototype so that its frequency response matches this ideal behavior in the vicinity of DC. This derivation reveals the crucial link between the first moment of the impulse response and the filter's low-frequency slope, providing a powerful tool for calibrating any differentiator design.", "problem": "Consider a real-coefficient finite impulse response (FIR; Finite Impulse Response) filter prototype with taps $\\{g[n]\\}_{n=0}^{N-1}$ designed to approximate a discrete-time differentiator near zero frequency, where $N \\in \\mathbb{N}$ and $N \\geq 2$. Assume the prototype has zero direct-current (DC) gain, that is $\\sum_{n=0}^{N-1} g[n] = 0$, and that its discrete-time Fourier transform (DTFT; Discrete-Time Fourier Transform) exhibits an odd-symmetric low-frequency response so that it admits a linear term in its small-angle expansion. Define a scaled filter $h[n] = \\alpha\\, g[n]$ with real scalar $\\alpha \\in \\mathbb{R}$, and denote its DTFT by\n$$\nH(\\omega) \\triangleq \\sum_{n=0}^{N-1} h[n] \\exp(-j \\omega n), \\quad \\omega \\in \\mathbb{R},\n$$\nwith $\\omega$ measured in radians.\n\nStarting only from the DTFT definition above and the Taylor expansion of the complex exponential for small $\\omega$, derive an analytic expression for the real scalar $\\alpha$ that normalizes the differentiator so that, in the limit $\\omega \\to 0$, the complex frequency response satisfies $H(\\omega) \\sim j \\omega$ (that is, the unit-slope ideal differentiator behavior around zero frequency). Provide your final answer as a single closed-form expression in terms of the prototype taps $\\{g[n]\\}$ and $N$. No numerical evaluation is required, and no rounding should be performed. Express angles in radians throughout.", "solution": "The problem requires the derivation of a scaling factor $\\alpha$ for a finite impulse response (FIR) filter prototype $\\{g[n]\\}_{n=0}^{N-1}$ such that the scaled filter $h[n] = \\alpha g[n]$ approximates an ideal differentiator for frequencies $\\omega$ near $0$. The target behavior is specified by the asymptotic relationship $H(\\omega) \\sim j \\omega$ as $\\omega \\to 0$, where $H(\\omega)$ is the discrete-time Fourier transform (DTFT) of $h[n]$.\n\nThe analysis begins with the definition of the DTFT of the scaled filter's impulse response, $h[n]$:\n$$\nH(\\omega) = \\sum_{n=0}^{N-1} h[n] \\exp(-j \\omega n)\n$$\nSubstituting the relationship $h[n] = \\alpha g[n]$, where $\\alpha \\in \\mathbb{R}$ is the real scaling factor we seek, yields:\n$$\nH(\\omega) = \\sum_{n=0}^{N-1} (\\alpha g[n]) \\exp(-j \\omega n) = \\alpha \\sum_{n=0}^{N-1} g[n] \\exp(-j \\omega n)\n$$\nThe condition $H(\\omega) \\sim j \\omega$ for $\\omega \\to 0$ concerns the behavior of $H(\\omega)$ in the immediate vicinity of $\\omega = 0$. This suggests analyzing the function using its Taylor series expansion around $\\omega = 0$. We expand the complex exponential term, $\\exp(-j \\omega n)$, for small $\\omega$:\n$$\n\\exp(-j \\omega n) = 1 - j\\omega n + \\frac{(-j\\omega n)^2}{2!} + \\frac{(-j\\omega n)^3}{3!} + \\dots = 1 - j\\omega n - \\frac{\\omega^2 n^2}{2} + j\\frac{\\omega^3 n^3}{6} + O(\\omega^4)\n$$\nSubstituting this expansion into the expression for $H(\\omega)$:\n$$\nH(\\omega) = \\alpha \\sum_{n=0}^{N-1} g[n] \\left( 1 - j\\omega n - \\frac{\\omega^2 n^2}{2} + \\dots \\right)\n$$\nWe can distribute the summation over the terms of the series:\n$$\nH(\\omega) = \\alpha \\left( \\sum_{n=0}^{N-1} g[n] - j\\omega \\sum_{n=0}^{N-1} n g[n] - \\frac{\\omega^2}{2} \\sum_{n=0}^{N-1} n^2 g[n] + \\dots \\right)\n$$\nThe problem statement provides a critical condition for the prototype filter: it has zero direct-current (DC) gain. Mathematically, this is stated as:\n$$\n\\sum_{n=0}^{N-1} g[n] = 0\n$$\nThis condition means that the first term in the expansion of $H(\\omega)$ is zero. Thus, the expression simplifies to:\n$$\nH(\\omega) = \\alpha \\left( -j\\omega \\sum_{n=0}^{N-1} n g[n] - \\frac{\\omega^2}{2} \\sum_{n=0}^{N-1} n^2 g[n] + \\dots \\right)\n$$\nFor small $\\omega$ (i.e., as $\\omega \\to 0$), the dominant term in the expansion is the one with the lowest power of $\\omega$. Provided that the coefficient of the linear term is non-zero (which is implied by the problem's premise that the filter admits a linear term), we have the following asymptotic behavior:\n$$\nH(\\omega) \\sim -j \\alpha \\omega \\sum_{n=0}^{N-1} n g[n]\n$$\nThe problem requires that this behavior matches that of an ideal differentiator near zero frequency, which is $H(\\omega) \\sim j \\omega$. We equate the two asymptotic expressions:\n$$\n-j \\alpha \\omega \\sum_{n=0}^{N-1} n g[n] \\sim j \\omega\n$$\nFor this equivalence to hold for all small, non-zero $\\omega$, the coefficients of the $j\\omega$ term on both sides must be equal. This gives the equation:\n$$\n- \\alpha \\sum_{n=0}^{N-1} n g[n] = 1\n$$\nSolving this equation for the scaling factor $\\alpha$ yields the desired expression. The sum $\\sum_{n=0}^{N-1} n g[n]$ must be non-zero for $\\alpha$ to be well-defined, a condition that holds for any practical differentiator design. The solution for $\\alpha$ is:\n$$\n\\alpha = - \\frac{1}{\\sum_{n=0}^{N-1} n g[n]}\n$$\nThis expression provides the normalization constant $\\alpha$ purely in terms of the prototype filter tap values $\\{g[n]\\}$ and the filter length $N$ (as the sum's upper limit is $N-1$).", "answer": "$$\n\\boxed{- \\frac{1}{\\sum_{n=0}^{N-1} n g[n]}}\n$$", "id": "2864240"}, {"introduction": "Theoretical properties at zero frequency are essential, but practical filter design is governed by performance specifications across entire frequency bands. In this comprehensive exercise [@problem_id:2864252], you will move from local analysis to a global design problem: estimating the required filter length $N$ to meet simultaneous constraints on passband accuracy and stopband attenuation. You will develop a procedure that translates these diverse specifications into the two key parameters that govern FIR filter complexity—transition width and controlling ripple—and use a standard empirical formula to estimate the necessary filter order. This practice bridges the gap between abstract requirements and concrete implementation, demonstrating an essential first step in any systematic filter design process.", "problem": "You are tasked with designing a principled, algorithmic procedure to compute an initial estimate of the filter length for a finite impulse response (FIR) differentiator that meets joint passband relative error and stopband magnitude constraints. Consider a real-coefficient, linear-phase, antisymmetric finite impulse response (FIR) differentiator (Type III) with ideal frequency response magnitude proportional to frequency. The desired magnitude response is defined by $\\lvert H_d(\\omega) \\rvert = \\omega$ over a passband interval and $\\lvert H_d(\\omega) \\rvert = 0$ over a stopband interval. All angular frequencies are in radians per sample, and any reference to angles in your derivation and implementation must be in radians.\n\nStarting from fundamental definitions of discrete-time Fourier transform behavior and standard windowed approximation principles for finite impulse response filters (in particular, how transition width and attenuation jointly control the required length), derive a computable procedure that transforms joint specifications of the following form into an initial length estimate:\n- A passband relative error bound over $\\omega \\in [\\omega_\\ell,\\omega_p]$: \n  $$\\max_{\\omega \\in [\\omega_\\ell,\\omega_p]} \\frac{\\lvert H(\\omega) - j\\omega \\rvert}{\\omega} \\le \\delta_p,$$\n  where $\\omega_\\ell > 0$ is a lower bound strictly greater than zero to avoid ill-conditioning of the relative error at zero.\n- A stopband magnitude bound over $\\omega \\in [\\omega_s,\\pi]$:\n  $$\\max_{\\omega \\in [\\omega_s,\\pi]} \\lvert H(\\omega) \\rvert \\le \\delta_s.$$\n\nYour derivation must:\n- Begin from the fundamental relationship between transition width and realizable finite impulse response filter length, and the connection between side-lobe attenuation and allowable ripple, both of which emerge from windowed approximation theory and equiripple optimization arguments. Specifically, you must reason from the facts that narrower transition bands require longer filters and that tighter amplitude constraints increase the length required, formalized through well-tested and widely accepted approximations in the window-design literature.\n- Convert the relative passband specification into an absolute-amplitude constraint that can be compared directly to the stopband magnitude bound, then determine which constraint dominates the initial order estimate.\n- Produce an explicit analytic expression for an initial length estimate $N_0$ in terms of the attenuation measure and transition width, and then impose the structural requirement for a Type III antisymmetric differentiator by mapping $N_0$ to the nearest odd integer not smaller than $N_0$.\n\nImplement the resulting procedure as a program that, for each test case below, computes a single integer $N$ equal to the smallest odd integer greater than or equal to the derived real-valued initial length estimate. If the real-valued estimate is already an odd integer, return it unchanged; if it is an even integer, increase it by $1$; if it is non-integer, round up to the next integer and, if that is even, increase by $1$.\n\nAngle unit requirement: all angles must be in radians. There are no physical units other than radians in this problem.\n\nTest suite (each case is a $5$-tuple $(\\omega_\\ell,\\omega_p,\\omega_s,\\delta_p,\\delta_s)$, with $0 < \\omega_\\ell < \\omega_p < \\omega_s \\le \\pi$, and $0 < \\delta_p < 1$, $0 < \\delta_s < 1$):\n- Case $1$: $(0.05\\pi,\\;0.6\\pi,\\;0.7\\pi,\\;0.01,\\;0.001)$\n- Case $2$: $(0.1\\pi,\\;0.8\\pi,\\;0.9\\pi,\\;0.001,\\;0.01)$\n- Case $3$: $(0.05\\pi,\\;0.5\\pi,\\;0.8\\pi,\\;0.00191,\\;0.002)$\n- Case $4$: $(0.05\\pi,\\;0.4\\pi,\\;0.405\\pi,\\;0.005,\\;0.0003)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the cases appear above (e.g., $[n_1,n_2,n_3,n_4]$). Each $n_k$ must be an integer. No other output is permitted.", "solution": "The problem presented is a valid and well-posed exercise in the design of finite impulse response (FIR) digital filters, specifically a Type III differentiator. It requires the derivation and implementation of an algorithmic procedure to provide an initial estimate for the filter length, $N$, based on standard frequency-domain specifications. The problem is scientifically grounded in established principles of digital signal processing and contains all necessary information for a unique solution. We shall proceed with a rigorous derivation.\n\nThe objective is to design a real-coefficient, linear-phase, antisymmetric FIR differentiator. The ideal frequency response of such a differentiator is $H_d(\\omega) = j\\omega$, where $\\omega$ is the angular frequency in radians per sample. The magnitude response is $|H_d(\\omega)| = \\omega$, and the phase is a constant $\\pi/2$. The impulse response corresponding to this ideal is non-causal and of infinite duration, given by $h_d(n) = \\frac{\\cos(\\pi n)}{n}$ for $n \\neq 0$ and $h_d(0) = 0$.\n\nA practical FIR filter must have a finite length, $N$. To preserve linear phase and approximate the ideal differentiator's antisymmetry, the impulse response $h(n)$ must satisfy $h(n) = -h(N-1-n)$ for $n \\in [0, N-1]$. This constraint implies that for the center tap, $h((N-1)/2) = 0$. This is naturally satisfied if $N$ is an odd integer (a Type III filter), as the impulse response is defined only at integer indices. The problem correctly mandates an odd length for this reason.\n\nThe design of an FIR filter from frequency-domain specifications involves a trade-off between the filter length $N$, the sharpness of the transition between bands (transition width), and the accuracy of the approximation within the specified bands (ripple). Well-established empirical formulas, derived from extensive studies of window-based and optimal equiripple design methods, quantify this relationship. Our task is to adapt these general principles to the specific constraints of the given differentiator problem.\n\nThe specifications provided are:\n$1$. A passband relative error bound:\n$$ \\max_{\\omega \\in [\\omega_\\ell,\\omega_p]} \\frac{| H(\\omega) - j\\omega |}{\\omega} \\le \\delta_p $$\n$2$. A stopband magnitude bound:\n$$ \\max_{\\omega \\in [\\omega_s,\\pi]} | H(\\omega) | \\le \\delta_s $$\n\nLet us analyze these constraints to extract the parameters required for a length estimation formula. The fundamental parameters are the transition width, $\\Delta\\omega$, and a single, controlling ripple value, $\\delta$.\n\nThe transition band lies between the passband edge $\\omega_p$ and the stopband edge $\\omega_s$. The width of this band is therefore:\n$$ \\Delta\\omega = \\omega_s - \\omega_p $$\nA smaller $\\Delta\\omega$ signifies a sharper transition and necessitates a longer filter.\n\nNext, we must unify the two ripple specifications into a single controlling parameter. The stopband constraint gives an absolute ripple magnitude, $\\delta_s$. The passband constraint is a relative error. We convert it to an equivalent absolute error constraint:\n$$ | H(\\omega) - j\\omega | \\le \\delta_p \\omega, \\quad \\text{for } \\omega \\in [\\omega_\\ell, \\omega_p] $$\nThis establishes an absolute error bound that varies linearly with frequency. For the purpose of estimating the overall required filter length, it is conventional to consider the point of maximum absolute deviation within the passband, which occurs at the upper band edge, $\\omega_p$. The effective absolute passband ripple, $\\delta'_p$, is thus defined as:\n$$ \\delta'_p = \\delta_p \\omega_p $$\nThe filter design must satisfy both the effective passband constraint $\\delta'_p$ and the stopband constraint $\\delta_s$. An optimal design method, such as the Parks-McClellan algorithm, will be limited by whichever of these two constraints is more stringent. Therefore, we define the controlling ripple $\\delta$ as the minimum of these two values:\n$$ \\delta = \\min(\\delta'_p, \\delta_s) = \\min(\\delta_p \\omega_p, \\delta_s) $$\n\nFrom this controlling ripple $\\delta$, we compute the required minimum attenuation, $A_s$, in decibels ($dB$):\n$$ A_s = -20 \\log_{10}(\\delta) $$\nThe attenuation $A_s$ and the transition width $\\Delta\\omega$ are the two key parameters that determine the filter length.\n\nNumerous empirical formulas exist to estimate FIR filter length. We select the widely cited formula by Kaiser, which provides a reliable initial estimate for filters designed using both windowing and optimal methods. It robustly links filter length to attenuation and transition width:\n$$ N_0 \\approx \\frac{A_s - C_1}{C_2 \\Delta\\omega} $$\nThe constants $C_1$ and $C_2$ are derived empirically. A common and well-validated form of this formula is:\n$$ N_0 = \\frac{A_s - 8}{2.285 \\Delta\\omega} $$\nHere, $N_0$ is the real-valued initial length estimate. This formula is derived from the properties of the Kaiser window, which itself is an approximation to the discrete prolate spheroidal sequence, the optimal solution to the time-frequency concentration problem. It serves as an excellent, principled starting point for length estimation.\n\nFinally, we must enforce the structural requirement that the filter be of Type III, meaning its length $N$ must be a positive odd integer. The derived estimate $N_0$ is a real number. The required length $N$ is the smallest odd integer that is greater than or equal to $N_0$. This is determined by the following procedure:\n$1$. Calculate the ceiling of $N_0$: $N_{ceil} = \\lceil N_0 \\rceil$.\n$2$. If $N_{ceil}$ is odd, the final length is $N = N_{ceil}$.\n$3. $If $N_{ceil}$ is even, the final length is $N = N_{ceil} + 1$.\n\nIn summary, the complete algorithmic procedure is as follows:\n$1$. Given the input parameters $(\\omega_\\ell, \\omega_p, \\omega_s, \\delta_p, \\delta_s)$.\n$2$. Calculate the transition width: $\\Delta\\omega = \\omega_s - \\omega_p$.\n$3$. Calculate the effective absolute passband ripple: $\\delta'_p = \\delta_p \\omega_p$.\n$4$. Determine the controlling ripple: $\\delta = \\min(\\delta'_p, \\delta_s)$.\n$5$. Compute the required attenuation in decibels: $A_s = -20 \\log_{10}(\\delta)$.\n$6$. Calculate the initial real-valued length estimate using Kaiser's formula: $N_0 = \\frac{A_s - 8}{2.285 \\Delta\\omega}$.\n$7$. Compute the final integer length $N$ by finding the smallest odd integer greater than or equal to $N_0$.\n\nThis procedure is scientifically sound, directly derived from fundamental principles of FIR filter design, and provides a computable method to obtain the required length estimate.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes an initial estimate for the length of a Type III FIR differentiator\n    based on frequency-domain specifications.\n    \"\"\"\n\n    # Test suite:\n    # Each case is a 5-tuple (omega_l, omega_p, omega_s, delta_p, delta_s)\n    test_cases = [\n        (0.05 * np.pi, 0.6 * np.pi, 0.7 * np.pi, 0.01, 0.001),\n        (0.1 * np.pi, 0.8 * np.pi, 0.9 * np.pi, 0.001, 0.01),\n        (0.05 * np.pi, 0.5 * np.pi, 0.8 * np.pi, 0.00191, 0.002),\n        (0.05 * np.pi, 0.4 * np.pi, 0.405 * np.pi, 0.005, 0.0003),\n    ]\n\n    results = []\n    for case in test_cases:\n        omega_l, omega_p, omega_s, delta_p, delta_s = case\n\n        # Step 1: Calculate the transition width (rad/sample).\n        # Frequency specifications are already in radians.\n        delta_omega = omega_s - omega_p\n\n        # Step 2: Convert relative passband error to an effective absolute error.\n        # The maximum absolute deviation is used for estimation, occurring at omega_p.\n        delta_p_abs = delta_p * omega_p\n\n        # Step 3: Determine the controlling ripple.\n        # The design is limited by the more stringent of the two ripple specifications.\n        delta = np.min([delta_p_abs, delta_s])\n\n        # Step 4: Calculate the required stopband attenuation in decibels (dB).\n        # A_s = -20 * log10(delta)\n        A_s = -20.0 * np.log10(delta)\n\n        # Step 5: Calculate the initial real-valued length estimate using Kaiser's formula.\n        # N0 ~ (A_s - 8) / (2.285 * delta_omega)\n        # This formula is widely used for initial estimates in FIR filter design.\n        N0 = (A_s - 8.0) / (2.285 * delta_omega)\n\n        # Step 6: Determine the final filter length N.\n        # N must be the smallest odd integer greater than or equal to the estimate N0,\n        # as required for a Type III FIR filter.\n        n_ceil = int(np.ceil(N0))\n        if n_ceil % 2 == 0:\n            N = n_ceil + 1\n        else:\n            N = n_ceil\n        results.append(N)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2864252"}]}