{"hands_on_practices": [{"introduction": "The first step in any practical filter design is to determine the filter's necessary complexity based on performance requirements. The filter order, $N$, is the primary parameter that controls the steepness of the transition band between the passband and stopband. This exercise provides foundational practice in translating system-level specifications, such as maximum passband attenuation and minimum stopband attenuation, into the minimal integer order required for a Butterworth filter, a crucial skill for balancing performance against implementation cost [@problem_id:2856532].", "problem": "A continuous-time Butterworth lowpass filter is to be used in a measurement front-end. The passband edge is specified at angular frequency $\\Omega_{p} = 1$ krad/s with maximum allowable passband attenuation $A_{p} = 1$ decibel (dB), and the stopband specification requires at least $A_{s} = 40$ dB attenuation at angular frequency $\\Omega_{s} = 3$ krad/s. Using the defining property that the squared magnitude response of an $N$th-order Butterworth lowpass with cutoff frequency $\\Omega_{c}$ is given by $|H(\\mathrm{j}\\Omega)|^{2} = \\dfrac{1}{1 + \\left(\\dfrac{\\Omega}{\\Omega_{c}}\\right)^{2N}}$ and the definition of attenuation $A(\\Omega)$ in decibels as $A(\\Omega) = -20 \\log_{10}|H(\\mathrm{j}\\Omega)|$, determine the minimal integer order $N$ for which there exists some $\\Omega_{c}$ such that both the passband and stopband specifications are simultaneously satisfied. Express your final answer as a single integer with no units.", "solution": "The problem is first subjected to a rigorous validation process.\n\nThe givens extracted verbatim from the problem statement are:\n- Passband edge angular frequency: $\\Omega_{p} = 1$ krad/s\n- Maximum allowable passband attenuation: $A_{p} = 1$ dB\n- Stopband edge angular frequency: $\\Omega_{s} = 3$ krad/s\n- Minimum required stopband attenuation: $A_{s} = 40$ dB\n- Squared magnitude response of an $N$th-order Butterworth filter: $|H(\\mathrm{j}\\Omega)|^{2} = \\dfrac{1}{1 + \\left(\\dfrac{\\Omega}{\\Omega_{c}}\\right)^{2N}}$\n- Definition of attenuation in decibels: $A(\\Omega) = -20 \\log_{10}|H(\\mathrm{j}\\Omega)|$\n\nThe problem is scientifically grounded, well-posed, and objective. It is a standard problem in analog filter design, based on established formulas and principles. All necessary data are provided, the constraints are consistent, and the terminology is precise. The problem is therefore deemed valid and a solution will be derived.\n\nThe objective is to find the minimal integer filter order $N$ such that there exists a cutoff frequency $\\Omega_c$ satisfying the given passband and stopband specifications.\n\nFirst, we express the attenuation $A(\\Omega)$ directly in terms of the squared magnitude response:\n$A(\\Omega) = -20 \\log_{10}|H(\\mathrm{j}\\Omega)| = -10 \\log_{10}(|H(\\mathrm{j}\\Omega)|^2)$.\nSubstituting the given expression for the Butterworth filter's squared magnitude response:\n$A(\\Omega) = -10 \\log_{10}\\left(\\dfrac{1}{1 + \\left(\\frac{\\Omega}{\\Omega_{c}}\\right)^{2N}}\\right) = 10 \\log_{10}\\left(1 + \\left(\\frac{\\Omega}{\\Omega_{c}}\\right)^{2N}\\right)$.\n\nNow, we translate the two specifications into inequalities.\n\nThe passband specification is $A(\\Omega_p) \\leq A_p$:\n$$10 \\log_{10}\\left(1 + \\left(\\frac{\\Omega_p}{\\Omega_c}\\right)^{2N}\\right) \\leq A_p$$\n$$\\log_{10}\\left(1 + \\left(\\frac{\\Omega_p}{\\Omega_c}\\right)^{2N}\\right) \\leq \\frac{A_p}{10}$$\n$$1 + \\left(\\frac{\\Omega_p}{\\Omega_c}\\right)^{2N} \\leq 10^{A_p/10}$$\n$$\\left(\\frac{\\Omega_p}{\\Omega_c}\\right)^{2N} \\leq 10^{A_p/10} - 1 \\quad (1)$$\n\nThe stopband specification is $A(\\Omega_s) \\geq A_s$:\n$$10 \\log_{10}\\left(1 + \\left(\\frac{\\Omega_s}{\\Omega_c}\\right)^{2N}\\right) \\geq A_s$$\n$$\\log_{10}\\left(1 + \\left(\\frac{\\Omega_s}{\\Omega_c}\\right)^{2N}\\right) \\geq \\frac{A_s}{10}$$\n$$1 + \\left(\\frac{\\Omega_s}{\\Omega_c}\\right)^{2N} \\geq 10^{A_s/10}$$\n$$\\left(\\frac{\\Omega_s}{\\Omega_c}\\right)^{2N} \\geq 10^{A_s/10} - 1 \\quad (2)$$\n\nFor a solution to exist, there must be a value of $\\Omega_c$ that simultaneously satisfies inequalities $(1)$ and $(2)$. We can isolate the term involving $\\Omega_c$ from both inequalities.\nFrom $(1)$:\n$$\\frac{1}{\\Omega_c^{2N}} \\leq \\frac{10^{A_p/10} - 1}{\\Omega_p^{2N}}$$\nFrom $(2)$:\n$$\\frac{1}{\\Omega_c^{2N}} \\geq \\frac{10^{A_s/10} - 1}{\\Omega_s^{2N}}$$\n\nCombining these two bounds on $\\frac{1}{\\Omega_c^{2N}}$ yields the condition:\n$$\\frac{10^{A_s/10} - 1}{\\Omega_s^{2N}} \\leq \\frac{1}{\\Omega_c^{2N}} \\leq \\frac{10^{A_p/10} - 1}{\\Omega_p^{2N}}$$\nThis implies that the lower bound must be less than or equal to the upper bound:\n$$\\frac{10^{A_s/10} - 1}{\\Omega_s^{2N}} \\leq \\frac{10^{A_p/10} - 1}{\\Omega_p^{2N}}$$\nWe can rearrange this inequality to solve for $N$:\n$$\\frac{10^{A_s/10} - 1}{10^{A_p/10} - 1} \\leq \\left(\\frac{\\Omega_s}{\\Omega_p}\\right)^{2N}$$\nTo isolate $N$, we take the base-$10$ logarithm of both sides. Since $\\frac{\\Omega_s}{\\Omega_p} > 1$, the logarithm is positive, and the inequality direction is preserved.\n$$\\log_{10}\\left(\\frac{10^{A_s/10} - 1}{10^{A_p/10} - 1}\\right) \\leq \\log_{10}\\left(\\left(\\frac{\\Omega_s}{\\Omega_p}\\right)^{2N}\\right)$$\n$$\\log_{10}\\left(\\frac{10^{A_s/10} - 1}{10^{A_p/10} - 1}\\right) \\leq 2N \\log_{10}\\left(\\frac{\\Omega_s}{\\Omega_p}\\right)$$\nFinally, we obtain the inequality for the filter order $N$:\n$$N \\geq \\frac{\\log_{10}\\left(\\frac{10^{A_s/10} - 1}{10^{A_p/10} - 1}\\right)}{2 \\log_{10}\\left(\\frac{\\Omega_s}{\\Omega_p}\\right)}$$\nWe now substitute the given numerical values: $A_p = 1$ dB, $A_s = 40$ dB, $\\Omega_p = 1$ krad/s, and $\\Omega_s = 3$ krad/s.\n$$N \\geq \\frac{\\log_{10}\\left(\\frac{10^{40/10} - 1}{10^{1/10} - 1}\\right)}{2 \\log_{10}\\left(\\frac{3}{1}\\right)}$$\n$$N \\geq \\frac{\\log_{10}\\left(\\frac{10^4 - 1}{10^{0.1} - 1}\\right)}{2 \\log_{10}(3)}$$\nLet us evaluate the terms. The numerator of the fraction inside the logarithm is $10^4 - 1 = 9999$. The denominator is $10^{0.1} - 1$.\n$$N \\geq \\frac{\\log_{10}\\left(\\frac{9999}{10^{0.1} - 1}\\right)}{2 \\log_{10}(3)}$$\nNumerically, $10^{0.1} \\approx 1.258925$, so $10^{0.1} - 1 \\approx 0.258925$.\nThe fraction inside the logarithm is approximately $\\frac{9999}{0.258925} \\approx 38618.3$.\nThe logarithm of this value is $\\log_{10}(38618.3) \\approx 4.58678$.\nThe denominator of the main expression is $2 \\log_{10}(3) \\approx 2 \\times 0.47712 = 0.95424$.\n$$N \\geq \\frac{4.58678}{0.95424} \\approx 4.8066$$\nSince the filter order $N$ must be an integer, we must choose the smallest integer that is greater than or equal to $4.8066$.\nTherefore, the minimal integer order required is $N = 5$.", "answer": "$$\\boxed{5}$$", "id": "2856532"}, {"introduction": "Filter design is often streamlined by starting with a normalized \"prototype\" filter, which has a standard cutoff frequency (e.g., $\\Omega_c = 1$ rad/s). This exercise demonstrates the powerful technique of frequency scaling, which transforms the prototype into a filter with any desired cutoff frequency. By working from first principles, you will derive this transformation and verify that the key characteristics of the filter, like its $-3$ dB point and stability, are correctly mapped to the new frequency scale, solidifying your understanding of how theoretical models are adapted for specific applications [@problem_id:2856497].", "problem": "An analog low-pass Butterworth prototype filter of order $n \\ge 1$ has transfer function $H_{p}(s)$ and is normalized so that its $-3$ dB cutoff angular frequency is $\\Omega_{c} = 1$ (in radians per second). The Butterworth prototype is minimum-phase, stable, and proper. You are asked to realize a physical filter with a desired $-3$ dB cutoff angular frequency $\\Omega_{c}^{\\star} = 2\\pi \\cdot 2 \\times 10^{3}$ by constructing a transfer function $H(s)$ from $H_{p}(s)$, using only principles of continuous-time linear time-invariant system scaling and the Laplace transform, without relying on any prepackaged design formulae.\n\nTasks:\n- Starting from the definition of the Butterworth magnitude response as a monotonic low-pass with magnitude squared that is constant in the passband and equals one at zero frequency, and that equals one half at the cutoff, derive from first principles the continuous-time scaling transformation that maps the normalized prototype $H_{p}(s)$ with $\\Omega_{c} = 1$ to the desired $H(s)$ with cutoff $\\Omega_{c}^{\\star}$. Construct the exact $H(s)$ in terms of $H_{p}(s)$ and $\\Omega_{c}^{\\star}$, and justify that the resulting filter remains proper, stable, and minimum-phase.\n- Using your constructed $H(s)$, verify directly that $|H(j\\,\\Omega_{c}^{\\star})| = 1/\\sqrt{2}$ for any order $n \\ge 1$, making explicit use of the normalized prototype property at $\\Omega = 1$.\n\nAnswer specification:\n- Report as your final answer only the required frequency scaling factor $a$ (in radians per second) that must be applied to the complex frequency variable $s$ in the mapping from $H_{p}(s)$ to $H(s)$. Express this value as an exact expression; do not round. State your answer in rad/s, but do not include units in the final boxed answer.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It is a standard problem in analog filter design based on established principles of linear time-invariant systems. All necessary information is provided, and the premises are factually correct. Therefore, the problem is valid and a solution will be provided.\n\nThe primary task is to derive a frequency scaling transformation that maps a normalized low-pass Butterworth prototype filter to a filter with a desired cutoff frequency.\n\nLet the normalized prototype filter have a transfer function $H_p(s)$. It is an $n$-th order filter where $n \\ge 1$. The magnitude-squared response of a Butterworth filter is maximally flat in the passband and monotonically decreasing. The general form is given by:\n$$ |H(j\\Omega)|^2 = \\frac{A_0^2}{1 + \\epsilon^2 \\left(\\frac{\\Omega}{\\Omega_c}\\right)^{2n}} $$\nwhere $A_0$ is the DC gain, $\\Omega_c$ is the cutoff frequency, and $\\epsilon$ determines the passband ripple. For a Butterworth filter to have a $-3$ dB cutoff at $\\Omega_c$, we must have $\\epsilon=1$.\nThe problem states the prototype is normalized to have a $-3$ dB cutoff at $\\Omega_c = 1$ rad/s and unity gain at DC ($|H_p(0)| = 1$, which implies $A_0 = 1$). Thus, the magnitude-squared response of the prototype is:\n$$ |H_p(j\\Omega)|^2 = \\frac{1}{1 + \\Omega^{2n}} $$\nAt the cutoff frequency $\\Omega=1$, we have $|H_p(j1)|^2 = \\frac{1}{1+1^{2n}} = \\frac{1}{2}$, which corresponds to a magnitude of $|H_p(j1)| = \\frac{1}{\\sqrt{2}}$, confirming the $-3$ dB specification.\n\nWe seek to construct a new filter with transfer function $H(s)$ that has the same Butterworth characteristic but with a different cutoff frequency, $\\Omega_c^\\star = 2\\pi \\cdot 2 \\times 10^3$ rad/s. This is achieved by frequency scaling. We propose a transformation of the complex frequency variable $s$. Let the new transfer function be related to the prototype by:\n$$ H(s) = H_p\\left(\\frac{s}{a}\\right) $$\nwhere $a$ is a real, positive scaling factor. We assume no additional gain factor is applied, preserving the unity DC gain, since $H(0) = H_p(0/a) = H_p(0) = 1$.\n\nThe frequency response of the new filter is found by substituting $s=j\\Omega$:\n$$ H(j\\Omega) = H_p\\left(\\frac{j\\Omega}{a}\\right) $$\nThe magnitude-squared response of $H(s)$ is therefore:\n$$ |H(j\\Omega)|^2 = \\left|H_p\\left(\\frac{j\\Omega}{a}\\right)\\right|^2 $$\nUsing the expression for $|H_p(j\\Omega)|^2$ and replacing its frequency variable $\\Omega$ with the new effective frequency $\\Omega/a$, we get:\n$$ |H(j\\Omega)|^2 = \\frac{1}{1 + \\left(\\frac{\\Omega}{a}\\right)^{2n}} $$\nThe desired cutoff frequency for this new filter is $\\Omega_c^\\star$. At this frequency, the magnitude-squared response must be $\\frac{1}{2}$.\n$$ |H(j\\Omega_c^\\star)|^2 = \\frac{1}{1 + \\left(\\frac{\\Omega_c^\\star}{a}\\right)^{2n}} = \\frac{1}{2} $$\nSolving for $a$, we find:\n$$ 1 + \\left(\\frac{\\Omega_c^\\star}{a}\\right)^{2n} = 2 $$\n$$ \\left(\\frac{\\Omega_c^\\star}{a}\\right)^{2n} = 1 $$\nSince $\\Omega_c^\\star > 0$ and we require $a > 0$, we can take the positive real $2n$-th root of both sides:\n$$ \\frac{\\Omega_c^\\star}{a} = 1 \\implies a = \\Omega_c^\\star $$\nSo, the required scaling factor is the desired cutoff frequency itself. The transformation is:\n$$ H(s) = H_p\\left(\\frac{s}{\\Omega_c^\\star}\\right) $$\nThe scaling factor is $a = \\Omega_c^\\star = 2\\pi \\cdot 2 \\times 10^3 = 4000\\pi$ rad/s.\n\nNext, we must justify that $H(s)$ remains proper, stable, and minimum-phase, given that $H_p(s)$ has these properties.\nLet $\\{p_k\\}$ be the poles of $H_p(s)$ and $\\{z_m\\}$ be the zeros of $H_p(s)$.\n- **Properness**: The prototype $H_p(s)$ is proper, meaning the degree of its numerator is not greater than the degree of its denominator. The transformation $s \\to s/\\Omega_c^\\star$ scales the variable but does not alter the degrees of the numerator and denominator polynomials. Hence, if $H_p(s)$ is proper, $H(s)=H_p(s/\\Omega_c^\\star)$ is also proper.\n- **Stability**: The prototype $H_p(s)$ is stable, so all its poles $\\{p_k\\}$ are in the left half of the complex plane, i.e., $\\text{Re}\\{p_k\\} < 0$. The poles of $H(s)$, denoted $\\{s_k\\}$, satisfy $s_k/\\Omega_c^\\star = p_k$, which means $s_k = p_k \\Omega_c^\\star$. Since $\\Omega_c^\\star$ is a positive real number, $\\text{Re}\\{s_k\\} = \\text{Re}\\{p_k \\Omega_c^\\star\\} = \\Omega_c^\\star \\text{Re}\\{p_k\\} < 0$. All poles of $H(s)$ are also in the left half-plane, so $H(s)$ is stable.\n- **Minimum-Phase**: The prototype $H_p(s)$ is minimum-phase, so all its zeros $\\{z_m\\}$ are in the left half of the complex plane, i.e., $\\text{Re}\\{z_m\\} \\le 0$. The zeros of $H(s)$, denoted $\\{s'_m\\}$, satisfy $s'_m/\\Omega_c^\\star = z_m$, which means $s'_m = z_m \\Omega_c^\\star$. The real part is $\\text{Re}\\{s'_m\\} = \\Omega_c^\\star \\text{Re}\\{z_m\\} \\le 0$. All zeros of $H(s)$ are also in the left half-plane. A standard Butterworth prototype is an all-pole filter, having no finite zeros, which is a minimum-phase condition. The transformed filter $H(s)$ also has no finite zeros, so it remains minimum-phase.\n\nFinally, we perform the verification task. We must verify that $|H(j\\Omega_c^\\star)| = 1/\\sqrt{2}$.\nUsing our constructed filter $H(s) = H_p(s/\\Omega_c^\\star)$, we evaluate its frequency response at $s=j\\Omega_c^\\star$:\n$$ H(j\\Omega_c^\\star) = H_p\\left(\\frac{j\\Omega_c^\\star}{\\Omega_c^\\star}\\right) = H_p(j1) $$\nTaking the magnitude:\n$$ |H(j\\Omega_c^\\star)| = |H_p(j1)| $$\nAccording to the problem statement, the prototype $H_p(s)$ has its $-3$ dB cutoff frequency at $\\Omega_c=1$. By definition, this means the magnitude at that frequency is $1/\\sqrt{2}$ times the DC gain. Given the unity DC gain, we have:\n$$ |H_p(j1)| = \\frac{1}{\\sqrt{2}} $$\nTherefore:\n$$ |H(j\\Omega_c^\\star)| = \\frac{1}{\\sqrt{2}} $$\nThis completes the verification, showing that the constructed filter $H(s)$ has the desired property at its new cutoff frequency $\\Omega_c^\\star$.\n\nThe question asks for the scaling factor $a$ that must be applied to the complex frequency variable $s$. We have found this to be $a = \\Omega_c^\\star$. Numerically, this is:\n$$ a = 2\\pi \\cdot 2 \\times 10^3 = 4000\\pi $$", "answer": "$$\\boxed{4000\\pi}$$", "id": "2856497"}, {"introduction": "Moving from analog theory to digital implementation is a critical step in modern signal processing. This advanced practice guides you through the process of converting a continuous-time Butterworth filter into a discrete-time Infinite Impulse Response (IIR) filter using the bilinear transform. You will tackle the crucial details of frequency prewarping to ensure accurate cutoff frequency mapping and use symbolic, exact rational arithmetic to derive the digital filter's coefficients, bridging the gap between an abstract transfer function and a concrete, implementable difference equation [@problem_id:2856543].", "problem": "Design a program that, for a low-pass Infinite Impulse Response (IIR) Butterworth filter, implements frequency prewarping and the bilinear transform in a symbolic, exact manner to derive the digital transfer function coefficients as rational expressions before performing any numerical evaluation. Your program must work purely from first principles, starting from the following foundational facts and definitions.\n\nA continuous-time Butterworth low-pass prototype of order $N$ has an analog transfer function of the form\n$$\nH_{a}(s) \\;=\\; \\frac{K}{B_{N}(s)},\n$$\nwhere $B_{N}(s)$ is a real-coefficient, monic, stable polynomial whose roots are the left-half plane Butterworth poles. For normalized cutoff at $|\\Omega|=1$, the denominators for $N \\in \\{1,3\\}$ are\n$$\nB_{1}(s) = s + 1, \\quad B_{3}(s) = s^{3} + 2 s^{2} + 2 s + 1.\n$$\nFor a desired analog cutoff frequency $\\Omega_{c}$, the frequency-scaled analog denominator is\n$$\nD(s) \\;=\\; \\sum_{k=0}^{N} b_{k}\\,\\Omega_{c}^{\\,N-k}\\,s^{k}, \\quad \\text{where} \\quad B_{N}(s)=\\sum_{k=0}^{N} b_{k}\\,s^{k}.\n$$\nThe bilinear transform maps the Laplace variable $s$ to the $z$-domain via\n$$\ns \\;=\\; \\frac{2}{T}\\,\\frac{1 - z^{-1}}{1 + z^{-1}},\n$$\nwhere $T$ is the sampling period in seconds. To ensure that a specified digital cutoff frequency $\\omega_{c}$ (in radians/sample) maps exactly to the analog cutoff $\\Omega_{c}$ prior to the bilinear transform, use frequency prewarping:\n$$\n\\Omega_{c} \\;=\\; \\frac{2}{T}\\,\\tan\\!\\left(\\frac{\\omega_{c}}{2}\\right).\n$$\nIn order to avoid any numerical approximation during derivation, you must implement the following steps using exact rational arithmetic:\n- Represent the rational value $\\tan\\!\\left(\\frac{\\omega_{c}}{2}\\right)$ as a reduced fraction $\\frac{p}{q}$ with integers $p$ and $q$.\n- Compute $\\Omega_{c} = \\frac{2}{T}\\,\\frac{p}{q}$ exactly as a rational number.\n- Form $D(s) = \\sum_{k=0}^{N} c_{k}\\,s^{k}$ with $c_{k} = b_{k}\\,\\Omega_{c}^{\\,N-k}$ in exact rational arithmetic.\n- Substitute the bilinear map $s = \\frac{2}{T}\\,\\frac{1 - r}{1 + r}$ where $r = z^{-1}$, and expand symbolically using the binomial theorem. Define $A=\\frac{2}{T}$ and note that\n$$\n\\left(\\frac{2}{T}\\,\\frac{1 - r}{1 + r}\\right)^{k} \\;=\\; A^{k}\\,(1 - r)^{k}\\,(1 + r)^{-k}.\n$$\n- Combine terms over the common denominator $(1 + r)^{N}$ to obtain the digital denominator polynomial\n$$\nS(r) \\;=\\; \\sum_{k=0}^{N} c_{k}\\,A^{k}\\,(1 - r)^{k}\\,(1 + r)^{N-k},\n$$\nso that\n$$\nH_{d}(r) \\;=\\; H_{a}\\!\\left(\\tfrac{2}{T}\\,\\tfrac{1 - r}{1 + r}\\right) \\;=\\; \\frac{K\\,(1 + r)^{N}}{S(r)}.\n$$\n- Choose the gain $K$ so that the digital filter has unity gain at zero frequency, that is $H_{d}(r=1)=1$. Show that this implies $K=c_{0}=\\Omega_{c}^{N}$.\n- Normalize the digital denominator polynomial so that the coefficient of $r^{0}$ equals $1$, yielding the standard IIR difference equation form with denominator leading coefficient equal to $1$.\n\nYour program must:\n- Use exact rational arithmetic for all symbolic steps, expansions, and coefficient derivations up to the final numeric conversion. Do not use floating-point arithmetic prior to the final rounding step.\n- For $N \\in \\{1,3\\}$, use the normalized Butterworth denominators $B_{1}(s)=s+1$ and $B_{3}(s)=s^{3}+2 s^{2}+2 s+1$ as the only permitted base cases.\n- After deriving exact rational expressions for the digital numerator and denominator coefficient vectors, convert them to floating-point numbers and round each coefficient to $12$ decimal places.\n\nAngle units are radians. No other physical units appear in the output.\n\nTest Suite:\nFor each test case, you are given the triple $(N, T, p/q)$, where $N$ is the Butterworth order, $T$ is the sampling period in seconds, and $p/q$ is the reduced rational for $\\tan(\\omega_{c}/2)$.\n\n- Case A (happy path, nontrivial IIR): $(N, T, p/q) = (3, 1, 1/2)$.\n- Case B (boundary case where the bilinear image of the pole aligns to yield an FIR-like denominator after normalization): $(N, T, p/q) = (1, 1, 1/1)$.\n- Case C (scaled sampling period with small cutoff): $(N, T, p/q) = (3, 3, 1/3)$.\n\nFor each case, your program must output a flat list containing first the numerator coefficients followed by the denominator coefficients, both ordered by nonincreasing power of $z^{-1}$ (that is, from $r^{0}$ to $r^{N}$). The denominator must be normalized so that its $r^{0}$ coefficient equals $1$. Concretely, for order $N$ your list must be\n$$\n[b_{0}, b_{1}, \\dots, b_{N}, a_{0}, a_{1}, \\dots, a_{N}],\n$$\nwith $a_{0}=1$.\n\nFinal Output Format:\nYour program should produce a single line of output containing the results for the three cases as a comma-separated list of these flat lists, enclosed in a single pair of square brackets. For example,\n\"[[b0,b1,...,a0,a1,...],[...],[...]]\"\nbut with the actual numeric values (rounded to $12$ decimal places). Ensure there are exactly $3$ case-results in the outer list, corresponding to the three specified cases, in the same order as listed above.", "solution": "The problem as stated is subjected to validation against established principles of science and engineering.\n\n**Step 1: Extract Givens**\n-   **Analog Butterworth Prototype:** $H_{a}(s) = K / B_{N}(s)$, where $B_{N}(s)$ is a monic, stable Butterworth polynomial.\n-   **Specific Prototypes:** For a normalized cutoff $|\\Omega|=1$, the denominators for $N=1$ and $N=3$ are given as $B_{1}(s) = s + 1$ and $B_{3}(s) = s^{3} + 2 s^{2} + 2 s + 1$.\n-   **Frequency Scaling:** For a desired analog cutoff $\\Omega_{c}$, the denominator is related to $D(s) = \\sum_{k=0}^{N} b_{k}\\,\\Omega_{c}^{\\,N-k}\\,s^{k}$, where $B_{N}(s)=\\sum_{k=0}^{N} b_{k}\\,s^{k}$.\n-   **Bilinear Transform:** The mapping from the $s$-plane to the $z$-plane is $s = \\frac{2}{T}\\,\\frac{1 - z^{-1}}{1 + z^{-1}}$, with $T$ as the sampling period.\n-   **Frequency Prewarping:** The analog cutoff $\\Omega_c$ must be set to $\\Omega_{c} = \\frac{2}{T}\\,\\tan(\\frac{\\omega_{c}}{2})$ to map a digital cutoff $\\omega_c$ correctly.\n-   **Symbolic Procedure:** All intermediate calculations must use exact rational arithmetic. This includes representing $\\tan(\\frac{\\omega_{c}}{2})$ as a fraction $p/q$, computing $\\Omega_c$, forming analog coefficients, and expanding the transformed polynomials.\n-   **Digital Transfer Function Structure:** The digital transfer function is derived as $H_{d}(r) = \\frac{K\\,(1 + r)^{N}}{S(r)}$, where $r = z^{-1}$ and $S(r) = \\sum_{k=0}^{N} c_{k}\\,A^{k}\\,(1 - r)^{k}\\,(1 + r)^{N-k}$ with $A=2/T$ and $c_k = b_k \\Omega_c^{N-k}$.\n-   **Normalization Conditions:**\n    1.  The DC gain must be unity: $H_{d}(r=1)=1$, which implies the gain factor is $K=\\Omega_c^N$.\n    2.  The resulting digital denominator polynomial must be normalized such that its constant term (coefficient of $r^0$) is $1$.\n-   **Test Data:** Three cases are provided: $(N, T, p/q) = (3, 1, 1/2)$, $(1, 1, 1/1)$, and $(3, 3, 1/3)$.\n-   **Output Format:** A flat list of rounded floating-point coefficients $[b_0, ..., b_N, a_0, ..., a_N]$ for each case, with $a_0 = 1$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is assessed for validity:\n-   **Scientifically Grounded:** The problem describes the canonical procedure for designing IIR digital filters from analog prototypes using the bilinear transform. All equations and concepts—Butterworth polynomials, frequency scaling, prewarping, and the transform itself—are fundamental and correct principles of digital signal processing. The problem is firmly grounded in established theory.\n-   **Well-Posed:** The problem is specified with mathematical precision. It provides all necessary inputs, defines the exact sequence of transformations, and specifies the required output format. The constraints, including the use of exact rational arithmetic, are unambiguous and lead to a unique solution for each test case.\n-   **Objective:** The language is formal and mathematical, devoid of subjective or opinion-based statements.\n\nThe problem exhibits no flaws such as scientific unsoundness, incompleteness, contradiction, or ambiguity. It is a rigorous and well-defined exercise in systems engineering.\n\n**Step 3: Verdict and Action**\nThe problem is **valid**. A solution will be provided.\n\n**Derivation of the Digital Transfer Function**\n\nThe objective is to derive the coefficients of a digital filter $H_d(z)$ from a continuous-time low-pass Butterworth prototype $H_a(s)$. The derivation must be performed symbolically using exact rational arithmetic.\n\nLet the normalized analog prototype transfer function of order $N$ be\n$$\nH_{a,norm}(s') = \\frac{1}{B_N(s')} \\quad , \\quad B_N(s') = \\sum_{k=0}^{N} b_k (s')^k\n$$\nwhere $s'$ is the frequency-normalized Laplace variable and $b_N=1$. The coefficients $b_k$ are given for $N=1$ and $N=3$. For the specified cases, $b_0=1$.\n\n**1. Frequency Prewarping and Scaling**\nTo achieve a desired digital cutoff frequency $\\omega_c$, we apply frequency prewarping. The analog cutoff frequency $\\Omega_c$ is determined by\n$$\n\\Omega_c = \\frac{2}{T} \\tan\\left(\\frac{\\omega_c}{2}\\right)\n$$\nwhere $T$ is the sampling period. The problem provides $\\tan(\\frac{\\omega_c}{2})$ as an exact rational number $p/q$. Thus, $\\Omega_c = \\frac{2}{T}\\frac{p}{q}$ is computed exactly.\n\nThe frequency-scaled analog transfer function is obtained by the substitution $s' = s/\\Omega_c$:\n$$\nH_a(s) = H_{a,norm}(s/\\Omega_c) = \\frac{1}{B_N(s/\\Omega_c)} = \\frac{1}{\\sum_{k=0}^{N} b_k (s/\\Omega_c)^k} = \\frac{\\Omega_c^N}{\\sum_{k=0}^{N} b_k \\Omega_c^{N-k} s^k}\n$$\nLet us define the scaled analog denominator polynomial as $D(s) = \\sum_{k=0}^{N} c_k s^k$, where the coefficients are $c_k = b_k \\Omega_c^{N-k}$. The transfer function is $H_a(s) = \\frac{\\Omega_c^N}{D(s)}$, where we have absorbed an initial gain $K$ into the scaling, to be determined later.\n\n**2. Bilinear Transformation**\nThe bilinear transform maps the $s$-plane to the $z$-plane. Using the substitution $r = z^{-1}$ and defining the constant $A = 2/T$, the transform is written as:\n$$\ns = A \\frac{1-r}{1+r}\n$$\nApplying this transformation to $H_a(s)$ yields the digital transfer function $H_d(r)$:\n$$\nH_d(r) = H_a\\left(A \\frac{1-r}{1+r}\\right) = \\frac{\\Omega_c^N}{D\\left(A \\frac{1-r}{1+r}\\right)} = \\frac{\\Omega_c^N}{\\sum_{k=0}^{N} c_k \\left(A \\frac{1-r}{1+r}\\right)^k}\n$$\nTo eliminate the complex fraction, we multiply the numerator and denominator by $(1+r)^N$:\n$$\nH_d(r) = \\frac{\\Omega_c^N (1+r)^N}{\\sum_{k=0}^{N} c_k A^k (1-r)^k (1+r)^{N-k}}\n$$\nLet the numerator polynomial be $N_{poly}(r) = K_{num} (1+r)^N$ and the denominator polynomial be $S(r) = \\sum_{k=0}^{N} c_k A^k (1-r)^k (1+r)^{N-k}$. The problem statement specifies the gain should be chosen to ensure unity gain at DC. DC corresponds to $z=1$, or $r=1$.\n$$\nH_d(r=1) = \\frac{K_{num} (1+1)^N}{S(1)} = 1\n$$\nThe term $(1-r)^k$ in $S(r)$ evaluates to zero for $r=1$ if $k>0$. Thus, only the $k=0$ term survives in the sum:\n$$\nS(1) = c_0 A^0 (1-1)^0 (1+1)^{N-0} = c_0 \\cdot 1 \\cdot 1 \\cdot 2^N = c_0 2^N\n$$\nThe gain condition becomes:\n$$\n\\frac{K_{num} 2^N}{c_0 2^N} = \\frac{K_{num}}{c_0} = 1 \\implies K_{num} = c_0\n$$\nFrom the definition of $c_k$, we have $c_0 = b_0 \\Omega_c^{N-0}$. For the given Butterworth polynomials, $b_0=1$, so $c_0 = \\Omega_c^N$. This confirms the problem statement's finding.\nThe unnormalized digital transfer function is therefore:\n$$\nH_d(r) = \\frac{\\Omega_c^N (1+r)^N}{S(r)}\n$$\nThe numerator polynomial is $N(r) = \\Omega_c^N (1+r)^N = \\Omega_c^N \\sum_{j=0}^{N} \\binom{N}{j} r^j$.\nThe denominator polynomial is $S(r) = \\sum_{k=0}^{N} c_k A^k (1-r)^k (1+r)^{N-k}$.\n\n**3. Normalization**\nThe standard form for an IIR filter requires the constant term of the denominator polynomial (the coefficient of $z^0$, or $r^0$) to be $1$. Let $S(r) = \\sum_{j=0}^N S_j r^j$. The coefficient of $r^0$ is $S_0$. To find $S_0$, we can evaluate $S(r)$ at $r=0$:\n$$\nS_0 = S(0) = \\sum_{k=0}^{N} c_k A^k (1-0)^k (1+0)^{N-k} = \\sum_{k=0}^{N} c_k A^k\n$$\nThis value $S_0$ is the normalization factor. We divide both the numerator and denominator polynomials by $S_0$.\nThe final, normalized transfer function is $H_d(r) = \\frac{B(r)}{A(r)}$, where:\n-   $B(r) = \\frac{N(r)}{S_0} = \\sum_{j=0}^N \\beta_j r^j$\n-   $A(r) = \\frac{S(r)}{S_0} = \\sum_{j=0}^N \\alpha_j r^j$\n\nThe coefficients to be computed for the output are:\n-   Numerator: $\\beta_j = \\frac{\\Omega_c^N \\binom{N}{j}}{S_0}$ for $j=0, \\dots, N$.\n-   Denominator: $\\alpha_j = \\frac{S_j}{S_0}$ for $j=0, \\dots, N$.\n\nBy construction, $\\alpha_0 = S_0/S_0 = 1$.\n\n**4. Algorithmic Procedure**\nAn algorithm implementing this derivation with exact rational arithmetic proceeds as follows:\n1.  Initialize all numerical values as exact fractions using Python's `fractions.Fraction`.\n2.  For a given test case $(N, T, p/q)$:\n    a.  Select the coefficients $b_k$ for the prototype polynomial $B_N(s')$.\n    b.  Compute $\\Omega_c = \\frac{2}{T} \\frac{p}{q}$ and $A = \\frac{2}{T}$.\n    c.  Compute the scaled analog coefficients $c_k = b_k \\Omega_c^{N-k}$ for $k=0, \\dots, N$.\n    d.  Compute the denominator normalization factor $S_0 = \\sum_{k=0}^N c_k A^k$.\n    e.  Compute the normalized numerator coefficients $\\beta_j = \\frac{\\Omega_c^N \\binom{N}{j}}{S_0}$ for $j=0, \\dots, N$.\n    f.  To find the denominator coefficients $\\alpha_j$, first compute the unnormalized polynomial $S(r)$. This requires polynomial algebra. Represent a polynomial as a list of its rational coefficients. Implement helper functions for polynomial addition and multiplication.\n        -   Initialize $S(r)$ as a zero polynomial of degree $N$.\n        -   For each $k \\in [0, N]$, compute the term $P_k(r) = c_k A^k (1-r)^k (1+r)^{N-k}$ by performing polynomial multiplication.\n        -   Add $P_k(r)$ to the total sum $S(r)$.\n    g.  The coefficients of the resulting polynomial $S(r)$ are $S_j$.\n    h.  Compute the normalized denominator coefficients $\\alpha_j = S_j/S_0$.\n3.  Combine the coefficients into a flat list $[\\beta_0, \\dots, \\beta_N, \\alpha_0, \\dots, \\alpha_N]$.\n4.  Convert the exact rational coefficients to floating-point numbers and round to $12$ decimal places.\n5.  Repeat for all test cases and format the final output as specified.", "answer": "```\n[[0.047619047619,0.142857142857,0.142857142857,0.047619047619,1.0,-1.190476190476,0.714285714286,-0.142857142857],[0.5,0.5,1.0,0.0],[0.003759398496,0.011278195489,0.011278195489,0.003759398496,1.0,-2.36992481203,1.929323308271,-0.545864661654]]\n```", "id": "2856543"}]}