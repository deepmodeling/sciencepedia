{"hands_on_practices": [{"introduction": "To ground our understanding of overflow prevention, we begin with the most fundamental scenario. This practice focuses on determining the optimal, static scaling factor for a signal with a known deterministic maximum amplitude. By mapping this maximum value precisely to the full-scale range of a fixed-point quantizer, we can maximize the signal-to-noise ratio without risking overflow, establishing a foundational principle for all subsequent scaling strategies [@problem_id:2903048].", "problem": "A real-valued, discrete-time signal $x[n]$ is known to satisfy the bound $|x[n]| \\leq X_{\\max}$, where $X_{\\max} > 0$ is given. Before quantization, the signal is scaled by a positive scalar $s$ to produce $y[n] = s \\, x[n]$. The signal $y[n]$ is then quantized to a signed two’s-complement fixed-point format with total word length $W$ bits, where $W \\geq 2$, consisting of one sign (integer) bit and $W-1$ fractional bits (commonly denoted $Q1.(W-1)$). In this format, the representable range is $[-1, \\, 1 - 2^{-(W-1)}]$, and the largest representable magnitude is $1 - 2^{-(W-1)}$.\n\nUsing only foundational facts about fixed-point representation, uniform rounding quantization, and the definition that maximizing signal-to-quantization-noise ratio (SNR) under a no-overflow constraint is achieved by maximizing the admissible signal amplitude without exceeding the representable range, do the following:\n\n- Derive an analytic expression for the scaling factor $s$ that maximizes SNR while guaranteeing no overflow for all $n$ under the given bound on $x[n]$.\n- Suppose the bound $X_{\\max}$ was conservative by a factor $k > 1$, meaning the true maximum magnitude of $x[n]$ is $X_{\\max}/k$. Define the headroom as the amplitude margin between full-scale and the actual scaled peak, expressed in decibels (dB) using $20 \\log_{10}(\\cdot)$. Derive a closed-form expression for this headroom in terms of $k$ and $W$.\n\nExpress your final answers for $s$ and the headroom as closed-form symbolic expressions in terms of $W$, $X_{\\max}$, and $k$. Provide the headroom in decibels. Do not perform any numerical evaluation or rounding.", "solution": "The problem is well-posed and scientifically sound, permitting a direct analytical solution based on the principles of fixed-point digital signal processing. We shall proceed with the derivation in two parts as requested.\n\nFirst, we derive the scaling factor $s$.\nThe system utilizes a signed two's-complement fixed-point format with a word length of $W$ bits, comprising one sign bit and $W-1$ fractional bits. The problem specifies that the representable numerical range for a value $y$ is $[-1, 1 - 2^{-(W-1)}]$. It further defines the largest representable magnitude as $1 - 2^{-(W-1)}$. A no-overflow condition requires that the magnitude of the scaled signal, $|y[n]|$, must not exceed this value for any time index $n$.\nThe scaled signal is given by $y[n] = s \\, x[n]$, where $s$ is a positive scaling factor ($s > 0$). The no-overflow constraint is thus:\n$$|y[n]| = |s \\, x[n]| = s |x[n]| \\le 1 - 2^{-(W-1)}$$\nThis inequality must hold for all possible values of the input signal $x[n]$. The input signal is known to be bounded by $|x[n]| \\le X_{\\max}$. To guarantee the no-overflow condition under all circumstances, we must consider the worst-case scenario where the input signal reaches its maximum possible magnitude, $|x[n]| = X_{\\max}$. Substituting this into the inequality gives the constraint on the scaling factor $s$:\n$$s \\, X_{\\max} \\le 1 - 2^{-(W-1)}$$\nThe problem states that maximizing the signal-to-quantization-noise ratio (SNR) is achieved by maximizing the admissible signal amplitude. This corresponds to choosing the largest possible value for the scaling factor $s$ that still satisfies the no-overflow constraint. Therefore, we select $s$ such that the equality holds:\n$$s \\, X_{\\max} = 1 - 2^{-(W-1)}$$\nSolving for $s$ yields the expression for the optimal scaling factor:\n$$s = \\frac{1 - 2^{-(W-1)}}{X_{\\max}}$$\n\nSecond, we derive the expression for headroom.\nThe scaling factor $s$ was determined based on the conservative assumption that the maximum magnitude of the input signal is $X_{\\max}$. It is now revealed that this bound was conservative and the true maximum magnitude of the signal is $|x[n]|_{\\text{true\\_max}} = X_{\\max}/k$, where $k > 1$.\nThe actual peak magnitude of the scaled signal, which we denote $|y|_{\\text{peak}}$, is found by applying the scaling factor $s$ to the true peak of the input signal:\n$$|y|_{\\text{peak}} = s \\cdot |x[n]|_{\\text{true\\_max}} = s \\cdot \\frac{X_{\\max}}{k}$$\nSubstituting the expression for $s$ that we derived:\n$$|y|_{\\text{peak}} = \\left( \\frac{1 - 2^{-(W-1)}}{X_{\\max}} \\right) \\cdot \\frac{X_{\\max}}{k} = \\frac{1 - 2^{-(W-1)}}{k}$$\nHeadroom is defined as the amplitude margin between the full-scale value and the actual scaled peak value, expressed in decibels. The full-scale value, $FS$, is the maximum representable magnitude, which is $FS = 1 - 2^{-(W-1)}$. The headroom, denoted $H_{\\text{dB}}$, is calculated as $20 \\log_{10}$ of the ratio of the full-scale value to the actual peak signal magnitude.\n$$H_{\\text{dB}} = 20 \\log_{10}\\left(\\frac{FS}{|y|_{\\text{peak}}}\\right)$$\nSubstituting the expressions for $FS$ and $|y|_{\\text{peak}}$:\n$$H_{\\text{dB}} = 20 \\log_{10}\\left(\\frac{1 - 2^{-(W-1)}}{\\frac{1 - 2^{-(W-1)}}{k}}\\right)$$\nThe term $(1 - 2^{-(W-1)})$ cancels from the numerator and denominator, leaving a simple expression for the ratio:\n$$H_{\\text{dB}} = 20 \\log_{10}(k)$$\nThis result shows that the headroom in decibels depends only on the factor $k$ by which the initial bound $X_{\\max}$ was conservative. The dependence on the word length $W$ is cancelled out in the ratio, which is a logical consequence of the scaling methodology.\nThe two required expressions are thus determined.", "answer": "$$\\boxed{\\begin{pmatrix} \\frac{1 - 2^{-(W-1)}}{X_{\\max}} & 20 \\log_{10}(k) \\end{pmatrix}}$$", "id": "2903048"}, {"introduction": "While scaling to prevent output overflow is essential, it is not always sufficient for complex systems. This exercise reveals a critical subtlety in implementing recursive (IIR) filters, where internal states can exhibit larger dynamic ranges than the final output. You will construct a counterexample to demonstrate how a naive scaling approach based solely on the system's overall impulse response norm, $\\|h\\|_{1}$, can fail, leading to internal overflow and catastrophic failure, thereby underscoring the necessity of analyzing the entire signal datapath [@problem_id:2903073].", "problem": "Consider the causal, linear time-invariant, single-input single-output discrete-time system with transfer function $H(z) = \\dfrac{1 - r z^{-1}}{1 - p z^{-1}}$, realized in a canonical direct-form I structure. The input is $x[n]$, the internal feedforward adder node is $v[n]$, and the output is $y[n]$. The feedforward and feedback parts are connected as $v[n] = b_{0} x[n] + b_{1} x[n-1]$ with $b_{0} = 1$ and $b_{1} = -r$, and $y[n] - p\\,y[n-1] = v[n]$. Assume bounded-input bounded-output stability, that the input is bounded by $|x[n]| \\leq 1$ for all $n$, and that all internal signals must lie within the representable range $[-1,1]$.\n\nA common “naive” global input scaling method uses the $\\ell_{1}$-norm of the impulse response, namely scaling the input by a positive scalar $s$ so that $|s\\,y[n]| \\leq 1$ for all admissible inputs by imposing $s \\leq 1/\\|h\\|_{1}$, where $\\|h\\|_{1} = \\sum_{n=-\\infty}^{\\infty} |h[n]|$. In this problem, you will demonstrate that this naive choice can underestimate internal node ranges in direct-form I infinite-impulse-response (IIR) realizations, and then update the scaling method accordingly.\n\nWork with the specific parameter choice $p = \\dfrac{99}{100}$ and $r = \\dfrac{999}{1000}$. Starting only from the fundamental definitions of linear time-invariant convolution and induced norms between sequence spaces, do the following:\n\n1. Derive the impulse response $h[n]$ of $H(z)$ for general real $p$ and $r$ with $|p| < 1$, and then compute $\\|h\\|_{1}$ for the given $p$ and $r$.\n2. Using only the definition of the induced $\\ell_{\\infty} \\to \\ell_{\\infty}$ norm of a linear time-invariant operator and the linearity of the internal node $v[n]$ with respect to $x[n]$, derive a bound of the form $\\sup_{n} |v[n]| \\leq \\gamma \\sup_{n} |x[n]|$, and compute $\\gamma$ explicitly for the given $p$ and $r$.\n3. Explain why the naive choice $s = 1/\\|h\\|_{1}$ can fail to prevent overflow at the internal node $v[n]$ for the given $p$ and $r$ by comparing the two bounds you obtained.\n4. Update the global input scaling rule to ensure that both $|s\\,y[n]| \\leq 1$ and $|s\\,v[n]| \\leq 1$ for all $n$, and compute the minimal such $s$ for the given $p$ and $r$.\n\nProvide your final answer as the exact value of the minimal global input scaling factor $s$ that guarantees no overflow at both $y[n]$ and $v[n]$. No rounding is required, and no units are needed. The final answer must be a single number or a single closed-form analytic expression.", "solution": "The provided problem is rigorously analyzed for validity. The problem is scientifically grounded in the principles of discrete-time signal processing, specifically linear time-invariant (LTI) systems, their realization, and the practical issue of scaling to prevent overflow in fixed-point arithmetic. The givens are self-contained and consistent. The transfer function $H(z)$ corresponds to the given difference equations: from $v[n] = x[n] - r x[n-1]$ and $y[n] = p y[n-1] + v[n]$, we have $V(z) = (1 - r z^{-1})X(z)$ and $Y(z)(1 - p z^{-1}) = V(z)$, which yields $H(z) = Y(z)/X(z) = \\dfrac{1 - r z^{-1}}{1 - p z^{-1}}$. The problem is well-posed and objective.\n\nHowever, a critical linguistic flaw exists in the final part of the problem statement: \"compute the minimal such $s$\". A scaling factor $s$ must be positive to preserve signal orientation. The set of valid scaling factors $s$ that prevent overflow is an interval of the form $(0, s_{\\text{max}}]$. This set does not have a minimum element; its infimum is $0$, which corresponds to zeroing out the signal and is a trivial, uninformative solution. In the context of fixed-point implementation and signal processing, the objective is always to find the *maximal* scaling factor $s_{\\text{max}}$ that utilizes the full dynamic range without causing overflow. A strict interpretation would render the problem invalid due to ambiguity. I will proceed by correcting this flawed phrasing and solving for the physically and algorithmically meaningful quantity: the maximal permissible scaling factor.\n\nThe solution will be structured according to the four tasks specified.\n\n1. Derivation of the impulse response $h[n]$ and its $\\ell_{1}$-norm.\nThe transfer function of the system is $H(z) = \\dfrac{1 - r z^{-1}}{1 - p z^{-1}}$. For a causal system, which is specified, we can perform a partial fraction expansion or algebraic manipulation.\n$$ H(z) = \\frac{1}{1 - p z^{-1}} - \\frac{r z^{-1}}{1 - p z^{-1}} $$\nThe inverse Z-transform of $\\frac{1}{1 - a z^{-1}}$ for a causal system is $a^n u[n]$, where $u[n]$ is the Heaviside step function. The time-shifting property states that $z^{-k} G(z)$ corresponds to $g[n-k]$ in the time domain. Applying these principles:\n$$ h[n] = p^n u[n] - r p^{n-1} u[n-1] $$\nWe can write this impulse response piecewise. For $n=0$, $h[0] = p^0 u[0] - r p^{-1} u[-1] = 1 \\cdot 1 - r p^{-1} \\cdot 0 = 1$. For $n \\ge 1$, $h[n] = p^n - r p^{n-1} = p^{n-1}(p-r)$.\nSo, the impulse response can be expressed as:\n$$ h[n] = \\delta[n] + (p-r)p^{n-1}u[n-1] $$\nwhere $\\delta[n]$ is the Kronecker delta function. The problem requires the system to be BIBO stable, which means all poles must be inside the unit circle. The single pole is at $z=p$, so we require $|p|<1$. This is given. The $\\ell_{1}$-norm of the impulse response is defined as $\\|h\\|_{1} = \\sum_{n=-\\infty}^{\\infty} |h[n]|$.\n$$ \\|h\\|_{1} = |h[0]| + \\sum_{n=1}^{\\infty} |h[n]| = |1| + \\sum_{n=1}^{\\infty} |(p-r)p^{n-1}| $$\n$$ \\|h\\|_{1} = 1 + |p-r| \\sum_{n=1}^{\\infty} |p|^{n-1} $$\nThe summation is a geometric series $\\sum_{k=0}^{\\infty} |p|^k = \\frac{1}{1-|p|}$, since $|p|<1$.\n$$ \\|h\\|_{1} = 1 + \\frac{|p-r|}{1-|p|} $$\nFor the given parameters $p = \\frac{99}{100}$ and $r = \\frac{999}{1000}$, we have $|p|=p$ as $p>0$.\n$$ p-r = \\frac{99}{100} - \\frac{999}{1000} = \\frac{990 - 999}{1000} = -\\frac{9}{1000} $$\n$$ |p-r| = \\frac{9}{1000} $$\n$$ 1-|p| = 1 - \\frac{99}{100} = \\frac{1}{100} $$\nSubstituting these values into the expression for $\\|h\\|_{1}$:\n$$ \\|h\\|_{1} = 1 + \\frac{\\frac{9}{1000}}{\\frac{1}{100}} = 1 + \\frac{9}{10} = \\frac{19}{10} $$\n\n2. Derivation of the bound for the internal node $v[n]$.\nThe internal node signal $v[n]$ is related to the input $x[n]$ by the difference equation $v[n] = x[n] - r x[n-1]$. This is an LTI system. Let its impulse response be $h_v[n]$, which is the output $v[n]$ for an input $x[n]=\\delta[n]$.\n$$ h_v[n] = \\delta[n] - r \\delta[n-1] $$\nThe impulse response has only two non-zero values: $h_v[0] = 1$ and $h_v[1] = -r$.\nThe problem asks for a bound $\\sup_{n} |v[n]| \\leq \\gamma \\sup_{n} |x[n]|$. The constant $\\gamma$ is the induced $\\ell_{\\infty} \\to \\ell_{\\infty}$ norm of the LTI operator that maps $x[n]$ to $v[n]$. For an LTI system with impulse response $h_v[n]$, this norm is given by $\\|h_v\\|_{1}$.\nLet us prove this fundamental result. The output is given by convolution: $v[n] = \\sum_{k=-\\infty}^{\\infty} h_v[k] x[n-k]$.\nTaking the absolute value:\n$$ |v[n]| = \\left|\\sum_{k=-\\infty}^{\\infty} h_v[k] x[n-k]\\right| \\leq \\sum_{k=-\\infty}^{\\infty} |h_v[k]| |x[n-k]| $$\nSince $|x[j]| \\leq \\sup_j |x[j]| = \\|x\\|_{\\infty}$ for all $j$:\n$$ |v[n]| \\leq \\sum_{k=-\\infty}^{\\infty} |h_v[k]| \\|x\\|_{\\infty} = \\|h_v\\|_{1} \\|x\\|_{\\infty} $$\nThis inequality must hold for all $n$, so $\\sup_n |v[n]| = \\|v\\|_{\\infty} \\leq \\|h_v\\|_{1} \\|x\\|_{\\infty}$. This shows that the induced norm $\\gamma$ is at most $\\|h_v\\|_{1}$. To show equality, one must construct an input $x[n]$ with $\\|x\\|_{\\infty}=1$ for which the bound is achieved. Let $x_k = \\operatorname{sgn}(h_v[-k])$. The output at $n=0$ is $v[0]=\\sum_k h_v[k]x[-k] = \\sum_k h_v[k]\\operatorname{sgn}(h_v[k]) = \\sum_k |h_v[k]| = \\|h_v\\|_1$. Thus, the bound is tight and $\\gamma = \\|h_v\\|_{1}$.\nWe compute $\\|h_v\\|_{1}$ for our system:\n$$ \\gamma = \\|h_v\\|_{1} = \\sum_{n=-\\infty}^{\\infty} |h_v[n]| = |h_v[0]| + |h_v[1]| = |1| + |-r| = 1 + |r| $$\nFor the given parameter $r = \\frac{999}{1000}$:\n$$ \\gamma = 1 + \\left|\\frac{999}{1000}\\right| = 1 + \\frac{999}{1000} = \\frac{1999}{1000} $$\n\n3. Failure of the naive scaling method.\nThe naive scaling method ensures that for a scaled input $s\\,x[n]$, the output $s\\,y[n]$ does not overflow. With $|x[n]|\\leq 1$, the output is bounded by $|y[n]| \\leq \\|h\\|_{1}\\|x\\|_{\\infty} \\leq \\|h\\|_{1}$. To guarantee $|s\\,y[n]| \\leq 1$, one must have $s \\|h\\|_{1} \\leq 1$, so $s \\leq 1/\\|h\\|_{1}$. The naive choice is $s = 1/\\|h\\|_{1}$.\nFor our parameters, this scaling factor is $s_{\\text{naive}} = \\frac{1}{19/10} = \\frac{10}{19}$.\nNow we check the internal node $v[n]$ under this scaling. The scaled internal node signal is $v'[n] = s_{\\text{naive}} v[n]$. Its magnitude is bounded by:\n$$ |v'[n]| = |s_{\\text{naive}} v[n]| \\leq s_{\\text{naive}} \\|v\\|_{\\infty} \\leq s_{\\text{naive}} \\gamma \\|x\\|_{\\infty} $$\nWith $\\|x\\|_{\\infty} \\leq 1$, the maximum possible value for $|v'[n]|$ is $s_{\\text{naive}}\\gamma$. To prevent overflow at this node, we must have $s_{\\text{naive}}\\gamma \\leq 1$. Let us check this condition:\n$$ s_{\\text{naive}}\\gamma = \\left(\\frac{10}{19}\\right) \\left(\\frac{1999}{1000}\\right) = \\frac{19990}{19000} = \\frac{1999}{1900} $$\nSince $1999 > 1900$, we have $\\frac{1999}{1900} > 1$. Therefore, the condition $s_{\\text{naive}}\\gamma \\leq 1$ is violated. This demonstrates that the naive scaling choice, based only on the overall system impulse response, is insufficient to guarantee that internal nodes do not overflow. There exists an input with $|x[n]|\\le1$ (specifically, $x[0]=-1, x[1]=1$ and $x[n]=0$ otherwise, to align with $h_v[n]$ for $r>0$) for which the internal node value $|v'[-1]|$ will be $s_{\\text{naive}}(1+r) > 1$.\n\n4. Updated global scaling rule.\nTo ensure no overflow occurs at any point, the scaling factor $s$ must be chosen to protect all signals. Let the scaled input be $s\\,x[n]$, with $|x[n]|\\leq 1$.\nThe bound on the scaled output is $|s\\,y[n]| \\leq s \\|h\\|_{1}$. We require $s \\|h\\|_{1} \\leq 1$, which implies $s \\leq \\frac{1}{\\|h\\|_{1}}$.\nThe bound on the scaled internal node is $|s\\,v[n]| \\leq s \\gamma$. We require $s \\gamma \\leq 1$, which implies $s \\leq \\frac{1}{\\gamma}$.\nTo satisfy both constraints simultaneously, $s$ must satisfy:\n$$ s \\leq \\min\\left(\\frac{1}{\\|h\\|_{1}}, \\frac{1}{\\gamma}\\right) $$\nAs established, the goal is to choose the largest possible $s$ that satisfies this, to maximize the signal-to-quantization-noise ratio. This maximal value is:\n$$ s_{\\text{max}} = \\min\\left(\\frac{1}{\\|h\\|_{1}}, \\frac{1}{\\gamma}\\right) $$\nUsing the values computed previously:\n$$ \\frac{1}{\\|h\\|_{1}} = \\frac{1}{19/10} = \\frac{10}{19} $$\n$$ \\frac{1}{\\gamma} = \\frac{1}{1999/1000} = \\frac{1000}{1999} $$\nWe must compare these two values.\n$$ \\frac{10}{19} \\text{ vs } \\frac{1000}{1999} $$\nCross-multiplying gives $10 \\times 1999 = 19990$ and $19 \\times 1000 = 19000$.\nSince $19000 < 19990$, we have $\\frac{19000}{19 \\times 1999} < \\frac{19990}{19 \\times 1999}$, which implies $\\frac{1000}{1999} < \\frac{10}{19}$.\nThe most restrictive constraint comes from the internal node $v[n]$. The maximal scaling factor is therefore:\n$$ s = \\frac{1000}{1999} $$\nThis is the value mistakenly referred to as \"minimal\" in the problem statement. It represents the upper bound on the scaling factor for safe operation. Any $s$ in $(0, 1000/1999]$ is a valid scaling factor. The optimal choice is the maximum value in this interval.", "answer": "$$\\boxed{\\frac{1000}{1999}}$$", "id": "2903073"}, {"introduction": "We now synthesize these principles into a practical hardware design and optimization problem. Instead of applying a single global scaling factor, this practice guides you through a more granular analysis of an FIR filter's internal datapath. Your task is to determine the minimum required integer wordlength at each internal node—from multipliers to accumulators—to prevent overflow while minimizing total hardware area, a common and critical objective in resource-constrained digital system design [@problem_id:2903068].", "problem": "A finite impulse response (FIR) filter in direct-form I with a strictly serial cascade of adders is implemented in fixed-point arithmetic. The sampled input signal is denoted by $x[n]$, and the filter output is $y[n]$. The filter has $4$ taps with real coefficients $h_0, h_1, h_2, h_3$ and is realized as the sum-of-products\n$$\ny[n] \\;=\\; h_0\\,x[n] \\;+\\; h_1\\,x[n-1] \\;+\\; h_2\\,x[n-2] \\;+\\; h_3\\,x[n-3].\n$$\nThe internal datapath is organized as a cascade of multipliers and adders as follows. Define the product nodes\n$$\np_k[n] \\;=\\; h_k\\,x[n-k], \\quad k\\in\\{0,1,2,3\\},\n$$\nand the intermediate sums\n$$\ns_1[n] \\;=\\; p_0[n] + p_1[n], \\qquad s_2[n] \\;=\\; s_1[n] + p_2[n], \\qquad y[n] \\;=\\; s_2[n] + p_3[n].\n$$\nAssume the following facts:\n- The input is bounded in magnitude by $|x[n]| \\leq 0.6$ for all $n$.\n- The coefficients are $h_0 = 1.25$, $h_1 = -0.9$, $h_2 = 0.55$, $h_3 = 0.2$.\n- All signals are represented in signed two’s complement fixed-point with one sign bit, $I$ integer-magnitude bits, and $F$ fractional bits. The fractional precision $F$ is the same at every node.\n- Overflow must be prevented at every node for all admissible inputs; quantization error is irrelevant for this question so long as overflow is prevented.\n- The final output wordlength is constrained to $W_{\\mathrm{out}} = 14$ bits (including the sign and fractional bits). No saturation arithmetic is used; hence sign/integer bits must be sufficient to contain worst-case magnitudes.\n\nThe total hardware area cost is modeled as proportional to the sum of the implemented wordlengths at all nontrivial internal nodes and the output, that is,\n$$\nA \\;\\propto\\; W_{p_0} + W_{p_1} + W_{p_2} + W_{p_3} + W_{s_1} + W_{s_2} + W_{y},\n$$\nwhere $W_{\\cdot}$ denotes the implemented wordlength at the respective node. You may assume that the proportionality constant is positive and identical for all bits, and that coefficient multipliers are realized as constant-coefficient units whose area is dominated by the datapath wordlength at their outputs (so the above proxy is appropriate for comparing designs). No rescaling or reordering of operations is permitted; only wordlength selection is allowed subject to the uniform $F$ constraint and the final wordlength constraint $W_{y} = W_{\\mathrm{out}}$.\n\nStarting from first principles of worst-case bounding for linear time-invariant systems and fixed-point dynamic range, determine the per-node wordlengths $W_{p_0}, W_{p_1}, W_{p_2}, W_{p_3}, W_{s_1}, W_{s_2}, W_{y}$ (each an integer number of bits) that prevent overflow at every node and minimize the total hardware area under the stated constraint. Express your final answer as a single row vector in the order $\\bigl(W_{p_0}, W_{p_1}, W_{p_2}, W_{p_3}, W_{s_1}, W_{s_2}, W_{y}\\bigr)$.\n\nNo rounding is needed because the answer consists of integers. Units are bits. Angles are not involved.", "solution": "The user has submitted a problem for validation and solution.\n\n**Problem Validation**\n\n**Step 1: Extract Givens**\n-   Filter structure: A $4$-tap finite impulse response (FIR) filter in direct-form I with a strictly serial cascade of adders.\n-   Filter equation: $y[n] = h_0\\,x[n] + h_1\\,x[n-1] + h_2\\,x[n-2] + h_3\\,x[n-3]$.\n-   Intermediate nodes:\n    -   Product nodes: $p_k[n] = h_k\\,x[n-k]$ for $k\\in\\{0,1,2,3\\}$.\n    -   Summation nodes: $s_1[n] = p_0[n] + p_1[n]$, $s_2[n] = s_1[n] + p_2[n]$, and $y[n] = s_2[n] + p_3[n]$.\n-   Input signal bound: $|x[n]| \\leq 0.6$ for all $n$. Let this bound be $X_{\\max} = 0.6$.\n-   Filter coefficients: $h_0 = 1.25$, $h_1 = -0.9$, $h_2 = 0.55$, $h_3 = 0.2$.\n-   Number representation: Signed two’s complement fixed-point with $1$ sign bit, $I$ integer-magnitude bits, and $F$ fractional bits. The total wordlength is $W = 1 + I + F$.\n-   Constraints:\n    1.  Overflow must be prevented at every node ($p_0, p_1, p_2, p_3, s_1, s_2, y$).\n    2.  The number of fractional bits, $F$, is uniform across all nodes.\n    3.  The final output wordlength is fixed: $W_y = 14$.\n-   Optimization Objective: Minimize the total hardware area cost proxy, $A \\propto \\sum W_k$, where the sum is over all specified internal and output nodes: $W_{p_0} + W_{p_1} + W_{p_2} + W_{p_3} + W_{s_1} + W_{s_2} + W_{y}$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, being a standard task in the design of fixed-point digital signal processing systems. It is well-posed, with a clear objective function and a complete set of non-contradictory constraints. The language is objective and precise. The problem is therefore deemed valid.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A solution will be provided.\n\n**Problem Solution**\n\nThe objective is to determine the integer-valued wordlengths $W_k$ for each node $k$ that prevent overflow and minimize the cost function $A' = W_{p_0} + W_{p_1} + W_{p_2} + W_{p_3} + W_{s_1} + W_{s_2} + W_{y}$.\n\nA signed two's complement number with $I$ integer-magnitude bits can represent values in the range $[-2^I, 2^I - 2^{-F}]$. To prevent overflow for a signal $v[n]$ with a maximum absolute value of $M = \\max_n |v[n]|$, the number of integer bits $I$ must be chosen such that $M < 2^I$. To minimize hardware cost, we must select the smallest integer $I_k$ for each node $k$ that satisfies this condition. This minimal value, $I_{k, \\min}$, determines the integer part of the wordlength.\n\nThe process is as follows:\n1.  Determine the worst-case maximum absolute value, $M_k$, for each node $k$.\n2.  Calculate the minimum required integer bits, $I_{k, \\min}$, for each node from its $M_k$.\n3.  Use the constraint on the output wordlength, $W_y = 14$, to determine the uniform number of fractional bits, $F$.\n4.  Calculate the wordlength $W_k$ for all nodes using the determined $F$ and $I_{k, \\min}$.\n\n**1. Worst-Case Magnitude Analysis**\nThe input is bounded by $|x[n]| \\leq X_{\\max} = 0.6$. The worst-case magnitude at each node is found by applying the triangle inequality.\n\nFor the product nodes $p_k[n] = h_k x[n-k]$:\n$M_{p_k} = \\max_n |p_k[n]| = |h_k| \\cdot \\max_n |x[n-k]| = |h_k| X_{\\max}$.\n-   $M_{p_0} = |1.25| \\times 0.6 = 1.25 \\times 0.6 = 0.75$.\n-   $M_{p_1} = |-0.9| \\times 0.6 = 0.9 \\times 0.6 = 0.54$.\n-   $M_{p_2} = |0.55| \\times 0.6 = 0.55 \\times 0.6 = 0.33$.\n-   $M_{p_3} = |0.2| \\times 0.6 = 0.2 \\times 0.6 = 0.12$.\n\nFor the summation nodes, the worst-case magnitudes are found by summing the magnitudes of their inputs, as the individual delayed inputs $x[n-k]$ can be chosen to cause the terms to add constructively.\n-   $s_1[n] = p_0[n] + p_1[n]$.\n    $M_{s_1} = \\max_n |s_1[n]| \\leq \\max_n |p_0[n]| + \\max_n |p_1[n]| = M_{p_0} + M_{p_1} = 0.75 + 0.54 = 1.29$.\n-   $s_2[n] = s_1[n] + p_2[n]$.\n    $M_{s_2} = \\max_n |s_2[n]| \\leq \\max_n |s_1[n]| + \\max_n |p_2[n]| = M_{s_1} + M_{p_2} = 1.29 + 0.33 = 1.62$.\n-   $y[n] = s_2[n] + p_3[n]$.\n    $M_y = \\max_n |y[n]| \\leq \\max_n |s_2[n]| + \\max_n |p_3[n]| = M_{s_2} + M_{p_3} = 1.62 + 0.12 = 1.74$.\n\n**2. Minimum Integer Bits Calculation**\nWe now find $I_{k, \\min}$ for each node by finding the smallest integer $I_k$ that satisfies $M_k  2^{I_k}$.\n-   $M_{p_0} = 0.75$: Since $0.75  2^0 = 1$, $I_{p_0, \\min} = 0$.\n-   $M_{p_1} = 0.54$: Since $0.54  2^0 = 1$, $I_{p_1, \\min} = 0$.\n-   $M_{p_2} = 0.33$: Since $0.33  2^0 = 1$, $I_{p_2, \\min} = 0$.\n-   $M_{p_3} = 0.12$: Since $0.12  2^0 = 1$, $I_{p_3, \\min} = 0$.\n-   $M_{s_1} = 1.29$: Since $2^0=1 \\le 1.29$, we need more range. $1.29  2^1=2$, so $I_{s_1, \\min} = 1$.\n-   $M_{s_2} = 1.62$: Since $2^0=1 \\le 1.62$, we need more range. $1.62  2^1=2$, so $I_{s_2, \\min} = 1$.\n-   $M_y = 1.74$: Since $2^0=1 \\le 1.74$, we need more range. $1.74  2^1=2$, so $I_{y, \\min} = 1$.\n\nTo minimize cost, we select these minimum values: $I_{p_0} = 0$, $I_{p_1} = 0$, $I_{p_2} = 0$, $I_{p_3} = 0$, $I_{s_1} = 1$, $I_{s_2} = 1$, and $I_y = 1$.\n\n**3. Determine Fractional Precision F**\nThe output wordlength is constrained to $W_y = 14$. We have $W_y = 1 + I_y + F$. Using our minimal choice for $I_y$, we get:\n$14 = 1 + I_{y, \\min} + F = 1 + 1 + F = 2 + F$.\nSolving for $F$, we find $F = 14 - 2 = 12$. This uniform fractional precision applies to all nodes.\n\n**4. Calculate All Node Wordlengths**\nNow we compute the wordlength $W_k = 1 + I_{k, \\min} + F$ for each node, using $F=12$ and the values of $I_{k, \\min}$ found previously.\n-   $W_{p_0} = 1 + I_{p_0, \\min} + F = 1 + 0 + 12 = 13$.\n-   $W_{p_1} = 1 + I_{p_1, \\min} + F = 1 + 0 + 12 = 13$.\n-   $W_{p_2} = 1 + I_{p_2, \\min} + F = 1 + 0 + 12 = 13$.\n-   $W_{p_3} = 1 + I_{p_3, \\min} + F = 1 + 0 + 12 = 13$.\n-   $W_{s_1} = 1 + I_{s_1, \\min} + F = 1 + 1 + 12 = 14$.\n-   $W_{s_2} = 1 + I_{s_2, \\min} + F = 1 + 1 + 12 = 14$.\n-   $W_y = 1 + I_{y, \\min} + F = 1 + 1 + 12 = 14$. This is consistent with the problem constraint.\n\nThe set of wordlengths that prevent overflow and minimize the cost function is $(W_{p_0}, W_{p_1}, W_{p_2}, W_{p_3}, W_{s_1}, W_{s_2}, W_y) = (13, 13, 13, 13, 14, 14, 14)$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n13  13  13  13  14  14  14\n\\end{pmatrix}\n}\n$$", "id": "2903068"}]}