{"hands_on_practices": [{"introduction": "The infinite-horizon Linear Quadratic Regulator problem for a system $\\dot{x} = Ax + Bu$ is solved by finding a symmetric, positive-definite matrix $P$ that satisfies the Continuous-time Algebraic Riccati Equation (CARE). This practice provides a direct, hands-on opportunity to work with the CARE by verifying if a given candidate matrix is a valid solution for a specific system [@problem_id:1589484]. Mastering this fundamental check is the first step toward understanding and solving LQR problems from first principles.", "problem": "In the design of a Linear Quadratic Regulator (LQR), the central task is to find an optimal state-feedback control law $u = -Kx$ that minimizes a quadratic cost function for a linear time-invariant system $\\dot{x} = Ax + Bu$. For an infinite-horizon problem, the cost function is given by $J = \\int_0^\\infty (x^T Q x + u^T R u) dt$, where $Q$ is a positive semi-definite matrix and $R$ is a positive definite matrix. The optimal feedback gain matrix is found using $K = R^{-1}B^T P$, where $P$ is a symmetric, positive-definite matrix that is the solution to the continuous-time Algebraic Riccati Equation (CARE):\n$$A^T P + P A - P B R^{-1} B^T P + Q = 0$$\n\nConsider a simplified model of a robotic arm joint, represented as a single-degree-of-freedom system governed by the state-space equation $\\dot{x} = Ax + Bu$. The state vector is $x = [\\theta, \\dot{\\theta}]^T$, where $\\theta$ is the angular position and $\\dot{\\theta}$ is the angular velocity. The control input $u$ is the torque applied to the joint. The system dynamics and LQR weighting matrices are given as follows:\n\n- State matrix: $A = \\begin{pmatrix} 0 & 1 \\\\ -3 & -4 \\end{pmatrix}$\n- Input matrix: $B = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$\n- State weighting matrix: $Q = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$\n- Input weighting matrix: $R = [1]$\n\nA control engineer has proposed the following matrix as a potential solution for $P$:\n$$P_{candidate} = \\begin{pmatrix} \\sqrt{10}-2 & \\sqrt{10}-3 \\\\ \\sqrt{10}-3 & \\sqrt{10}-3 \\end{pmatrix}$$\nIs this proposed matrix a valid solution to the CARE for this system?\n\nA. Yes, the candidate matrix is a valid solution.\n\nB. No, the candidate matrix is not a valid solution because the (1,1) element of the CARE residual is non-zero.\n\nC. No, the candidate matrix is not a valid solution because the (2,2) element of the CARE residual is non-zero.\n\nD. No, the candidate matrix is not a valid solution because the candidate matrix is not symmetric.\n\nE. No, the candidate matrix is not a valid solution because it is not positive definite.", "solution": "The continuous-time Algebraic Riccati Equation (CARE) for the given system is\n$$A^{T}P + P A - P B R^{-1} B^{T} P + Q = 0,$$\nwith\n$$A = \\begin{pmatrix} 0 & 1 \\\\ -3 & -4 \\end{pmatrix},\\quad B = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix},\\quad Q = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix},\\quad R = [1].$$\nLet $P_{candidate} = \\begin{pmatrix} \\sqrt{10}-2 & \\sqrt{10}-3 \\\\ \\sqrt{10}-3 & \\sqrt{10}-3 \\end{pmatrix}$. Define $s = \\sqrt{10}$ and $t = s - 3$. Then\n$$P = \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix} = \\begin{pmatrix} t+1 & t \\\\ t & t \\end{pmatrix}.$$\nWe compute each term in the CARE.\n\nFirst, compute $A^{T}P$ and $P A$:\n$$A^{T} = \\begin{pmatrix} 0 & -3 \\\\ 1 & -4 \\end{pmatrix},$$\n$$A^{T}P = \\begin{pmatrix} -3 p_{12} & -3 p_{22} \\\\ p_{11} - 4 p_{12} & p_{12} - 4 p_{22} \\end{pmatrix},\\quad\nP A = \\begin{pmatrix} -3 p_{12} & p_{11} - 4 p_{12} \\\\ -3 p_{22} & p_{12} - 4 p_{22} \\end{pmatrix}.$$\nHence,\n$$A^{T}P + P A = \\begin{pmatrix} -6 p_{12} & p_{11} - 4 p_{12} - 3 p_{22} \\\\ p_{11} - 4 p_{12} - 3 p_{22} & 2 p_{12} - 8 p_{22} \\end{pmatrix}.$$\n\nNext, compute $P B R^{-1} B^{T} P = P B B^{T} P$. Since $B B^{T} = \\begin{pmatrix} 0 & 0 \\\\ 0 & 1 \\end{pmatrix}$, we get\n$$P B B^{T} = P \\begin{pmatrix} 0 & 0 \\\\ 0 & 1 \\end{pmatrix} = \\begin{pmatrix} 0 & p_{12} \\\\ 0 & p_{22} \\end{pmatrix},$$\n$$P B B^{T} P = \\begin{pmatrix} p_{12}^{2} & p_{12} p_{22} \\\\ p_{12} p_{22} & p_{22}^{2} \\end{pmatrix}.$$\n\nTherefore, the CARE residual is\n$$R_{care} = A^{T}P + P A - P B B^{T} P + Q,$$\nwith entries\n$$R_{11} = -6 p_{12} - p_{12}^{2} + 1,\\quad R_{12} = p_{11} - 4 p_{12} - 3 p_{22} - p_{12} p_{22},\\quad R_{22} = 2 p_{12} - 8 p_{22} - p_{22}^{2} + 1.$$\n\nSubstitute $p_{11} = t + 1$, $p_{12} = t$, $p_{22} = t$:\n$$R_{11} = 1 - 6 t - t^{2},\\quad R_{12} = (t + 1) - 4 t - 3 t - t^{2} = 1 - 6 t - t^{2},\\quad R_{22} = 1 - 6 t - t^{2}.$$\n\nNow use $t = s - 3$ with $s^{2} = 10$:\n$$(s - 3)^{2} = s^{2} - 6 s + 9 = 10 - 6 s + 9 = 19 - 6 s,$$\n$$1 - 6(s - 3) - (s - 3)^{2} = 1 - 6 s + 18 - (19 - 6 s) = 0.$$\nThus $R_{11} = R_{12} = R_{22} = 0$, so $R_{care} = 0$ and $P$ satisfies the CARE exactly.\n\nFinally, verify symmetry and positive definiteness of $P$. The matrix $P$ is symmetric by construction. Its leading principal minor $p_{11} = s - 2 > 0$ since $s = \\sqrt{10} > 3$, and its determinant is\n$$\\det P = p_{11} p_{22} - p_{12}^{2} = (t + 1)t - t^{2} = t = s - 3 > 0.$$\nTherefore $P$ is positive definite.\n\nSince the candidate matrix is symmetric, positive definite, and satisfies the CARE, it is a valid solution. The correct choice is A.", "answer": "$$\\boxed{A}$$", "id": "1589484"}, {"introduction": "While the Algebraic Riccati Equation provides the key to the LQR solution, its existence and ability to yield a stabilizing controller depend on fundamental properties of the system itself. This exercise uses a powerful comparative approach to explore the crucial difference between controllability and the less strict condition of stabilizability [@problem_id:2913486]. By analyzing a system that is stabilizable but not controllable alongside one that is not stabilizable, you will gain a deep, an intuitive understanding of why stabilizability is the necessary and sufficient condition for finding a finite-cost LQR solution.", "problem": "Consider two continuous-time linear time-invariant state-space models with state vector $x \\in \\mathbb{R}^{2}$ and input $u \\in \\mathbb{R}$, together with the Linear Quadratic Regulator (LQR) performance index\n$$\nJ(x_{0},u) \\triangleq \\int_{0}^{\\infty} \\big( x(t)^{\\top} Q x(t) + u(t)^{\\top} R u(t) \\big) \\, dt,\n$$\nwhere $Q \\succeq 0$ and $R \\succ 0$. The models are as follows:\n\nModel A:\n$$\n\\dot{x}(t) = A_{A} x(t) + B_{A} u(t), \\quad A_{A} \\triangleq \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix}, \\quad B_{A} \\triangleq \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}, \\quad Q = I_{2}, \\quad R = 1.\n$$\n\nModel B:\n$$\n\\dot{x}(t) = A_{B} x(t) + B_{B} u(t), \\quad A_{B} \\triangleq \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}, \\quad B_{B} \\triangleq \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}, \\quad Q = I_{2}, \\quad R = 1.\n$$\n\nTasks:\n1. Using only the definitions of controllability and stabilizability for linear time-invariant systems, determine for each model whether the pair $(A,B)$ is controllable and whether it is stabilizable. Justify your answers from first principles.\n2. Starting from the Hamilton–Jacobi–Bellman (HJB) principle and the definition of the value function $V(x) \\triangleq \\inf_{u} J(x,u)$, derive the conditions that the optimal state-feedback control must satisfy for Model A. Infer the corresponding quadratic value function $V(x) = x^{\\top} P x$ by solving for the symmetric matrix $P$ that is consistent with these conditions.\n3. For Model A, evaluate the optimal infinite-horizon cost $J^{\\star}(x_{0})$ for the initial state $x_{0} = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$.\n\nAdditionally, explain why Model B fails to admit a finite optimal cost $J^{\\star}(x_{0})$ for generic nonzero initial conditions $x_{0}$, and relate this to stabilizability. Your explanation must proceed from the system trajectories implied by $\\dot{x} = A x + B u$ and the integral definition of $J(x_{0},u)$, without invoking any pre-stated optimal control formulae.\n\nProvide your final numerical result for Task 3 as a single closed-form expression. No units are required. No rounding is required.", "solution": "A linear time-invariant system described by the pair $(A, B)$ is controllable if the Kalman controllability matrix $\\mathcal{C} \\triangleq \\begin{pmatrix} B & AB & \\cdots & A^{n-1}B \\end{pmatrix}$ has full rank, which is $n$, the dimension of the state space. The system is stabilizable if all unstable modes (eigenvalues $\\lambda$ of $A$ with $\\text{Re}(\\lambda) \\geq 0$) are controllable. This can be verified using the Popov-Belevitch-Hautus (PBH) test, which states that the pair $(A, B)$ is stabilizable if and only if the matrix $\\begin{pmatrix} A - \\lambda I & B \\end{pmatrix}$ has full row rank for all eigenvalues $\\lambda$ of $A$ such that $\\text{Re}(\\lambda) \\geq 0$.\n\nFor Model A:\nThe state and input matrices are $A_{A} = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix}$ and $B_{A} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$. The state dimension is $n=2$. The eigenvalues of $A_A$ are $\\lambda_1 = -1$ (stable) and $\\lambda_2 = 1$ (unstable).\nTo check controllability, we form the controllability matrix $\\mathcal{C}_A = \\begin{pmatrix} B_A & A_A B_A \\end{pmatrix}$.\nThe product $A_A B_A$ is calculated as:\n$$\nA_A B_A = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}\n$$\nThus, the controllability matrix is:\n$$\n\\mathcal{C}_A = \\begin{pmatrix} 0 & 0 \\\\ 1 & 1 \\end{pmatrix}\n$$\nThe determinant of $\\mathcal{C}_A$ is $0 \\cdot 1 - 0 \\cdot 1 = 0$. The rank of $\\mathcal{C}_A$ is $1$, which is less than $n=2$. Therefore, the pair $(A_A, B_A)$ is **not controllable**.\nTo check stabilizability, we must examine the unstable eigenvalue $\\lambda_2 = 1$. According to the PBH test, we must check the rank of $\\begin{pmatrix} A_A - 1 \\cdot I & B_A \\end{pmatrix}$:\n$$\n\\begin{pmatrix} A_A - I & B_A \\end{pmatrix} = \\begin{pmatrix} -1-1 & 0 & 0 \\\\ 0 & 1-1 & 1 \\end{pmatrix} = \\begin{pmatrix} -2 & 0 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}\n$$\nThis matrix clearly has rank $2$, which is the full row rank. Therefore, the pair $(A_A, B_A)$ is **stabilizable**.\n\nFor Model B:\nThe state and input matrices are $A_{B} = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}$ and $B_{B} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$. The eigenvalues of $A_B$ are $\\lambda_1 = 1$ (unstable) and $\\lambda_2 = -1$ (stable).\nTo check controllability, we form the controllability matrix $\\mathcal{C}_B = \\begin{pmatrix} B_B & A_B B_B \\end{pmatrix}$.\n$$\nA_B B_B = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ -1 \\end{pmatrix}\n$$\n$$\n\\mathcal{C}_B = \\begin{pmatrix} 0 & 0 \\\\ 1 & -1 \\end{pmatrix}\n$$\nThe determinant of $\\mathcal{C}_B$ is $0$. The rank is $1$, which is less than $n=2$. Therefore, the pair $(A_B, B_B)$ is **not controllable**.\nTo check stabilizability, we examine the unstable eigenvalue $\\lambda_1 = 1$. We apply the PBH test:\n$$\n\\begin{pmatrix} A_B - I & B_B \\end{pmatrix} = \\begin{pmatrix} 1-1 & 0 & 0 \\\\ 0 & -1-1 & 1 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 & 0 \\\\ 0 & -2 & 1 \\end{pmatrix}\n$$\nThis matrix has rank $1$, which is less than the full row rank of $2$. Therefore, the pair $(A_B, B_B)$ is **not stabilizable**.\n\nThe Hamilton-Jacobi-Bellman (HJB) equation for the infinite-horizon LQR problem is:\n$$\n\\inf_{u} \\left\\{ \\nabla V(x)^{\\top} (A x + B u) + x^{\\top} Q x + u^{\\top} R u \\right\\} = 0\n$$\nWe postulate a quadratic value function $V(x) = x^{\\top} P x$, where $P$ is a symmetric positive definite matrix. Its gradient is $\\nabla V(x) = 2 P x$. Substituting this into the HJB equation for Model A gives:\n$$\n\\inf_{u(t)} \\left\\{ (2 P x)^{\\top} (A_A x + B_A u) + x^{\\top} Q x + u^{\\top} R u \\right\\} = 0\n$$\nExpanding the terms and using $R=1$:\n$$\n\\inf_{u(t)} \\left\\{ 2 x^{\\top} P A_A x + 2 x^{\\top} P B_A u + x^{\\top} I_2 x + u^2 \\right\\} = 0\n$$\nTo find the infimum, we differentiate the expression in the braces with respect to the scalar control $u$ and set the result to zero:\n$$\n\\frac{\\partial}{\\partial u} \\left( 2 x^{\\top} P B_A u + u^2 \\right) = 2 x^{\\top} P B_A + 2u = 0\n$$\nThis yields the optimal state-feedback control law:\n$$\nu^{\\star}(t) = - B_A^{\\top} P x(t)\n$$\nSubstituting $u^\\star$ back into the HJB equation results in the Algebraic Riccati Equation (ARE):\n$$\nx^{\\top} (A_A^{\\top} P + P A_A - P B_A R^{-1} B_A^{\\top} P + Q) x = 0\n$$\nSince this must hold for all $x$, the matrix expression must be zero:\n$$\nA_A^{\\top} P + P A_A - P B_A B_A^{\\top} P + Q = 0\n$$\nWe substitute the matrices for Model A: $A_A = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix}$, $B_A = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$, $Q = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$. Let $P = \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix}$.\nThe term $P B_A B_A^{\\top} P$ becomes:\n$$\nP \\begin{pmatrix} 0 & 0 \\\\ 0 & 1 \\end{pmatrix} P = \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix} \\begin{pmatrix} 0 & 0 \\\\ 0 & 1 \\end{pmatrix} \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix} = \\begin{pmatrix} 0 & p_{12} \\\\ 0 & p_{22} \\end{pmatrix} \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix} = \\begin{pmatrix} p_{12}^2 & p_{12}p_{22} \\\\ p_{12}p_{22} & p_{22}^2 \\end{pmatrix}\n$$\nThe term $A_A^{\\top} P + P A_A$ (with $A_A$ being symmetric) is:\n$$\nA_A P + P A_A = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix} + \\begin{pmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{pmatrix} \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} = \\begin{pmatrix} -2p_{11} & 0 \\\\ 0 & 2p_{22} \\end{pmatrix}\n$$\nThe ARE thus becomes the matrix equation:\n$$\n\\begin{pmatrix} -2p_{11} & 0 \\\\ 0 & 2p_{22} \\end{pmatrix} - \\begin{pmatrix} p_{12}^2 & p_{12}p_{22} \\\\ p_{12}p_{22} & p_{22}^2 \\end{pmatrix} + \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 \\\\ 0 & 0 \\end{pmatrix}\n$$\nThis gives a system of scalar equations:\n1. (1,1): $-2p_{11} - p_{12}^2 + 1 = 0$\n2. (1,2): $-p_{12}p_{22} = 0$\n3. (2,2): $2p_{22} - p_{22}^2 + 1 = 0 \\implies p_{22}^2 - 2p_{22} - 1 = 0$\nFrom equation (3), $p_{22} = \\frac{2 \\pm \\sqrt{4-4(-1)}}{2} = 1 \\pm \\sqrt{2}$. Since $P$ must be positive definite for a finite cost and a stable closed-loop system, its diagonal elements must be positive. Thus, we must choose the positive root: $p_{22} = 1 + \\sqrt{2}$.\nFrom equation (2), since $p_{22} \\neq 0$, we must have $p_{12} = 0$.\nFrom equation (1), $-2p_{11} - 0^2 + 1 = 0 \\implies p_{11} = \\frac{1}{2}$.\nThe unique symmetric positive definite solution is:\n$$\nP = \\begin{pmatrix} \\frac{1}{2} & 0 \\\\ 0 & 1+\\sqrt{2} \\end{pmatrix}\n$$\nThe quadratic value function is $V(x) = x^{\\top} P x = \\frac{1}{2}x_1^2 + (1+\\sqrt{2})x_2^2$.\n\nThe optimal cost $J^{\\star}(x_0)$ is given by the value function evaluated at the initial state, $J^{\\star}(x_0) = V(x_0) = x_0^{\\top} P x_0$. For $x_0 = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$:\n$$\nJ^{\\star}(x_0) = \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} \\frac{1}{2} & 0 \\\\ 0 & 1+\\sqrt{2} \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} \\frac{1}{2} \\\\ 1+\\sqrt{2} \\end{pmatrix} = \\frac{1}{2} + 1 + \\sqrt{2} = \\frac{3}{2} + \\sqrt{2}\n$$\n\nFor Model B, the dynamics are given by $\\dot{x}(t) = A_B x(t) + B_B u(t)$. In component form, with $x(t) = \\begin{pmatrix} x_1(t) \\\\ x_2(t) \\end{pmatrix}$:\n$$\n\\dot{x}_1(t) = x_1(t)\n$$\n$$\n\\dot{x}_2(t) = -x_2(t) + u(t)\n$$\nThe crucial observation is that the dynamics of the first state, $x_1(t)$, are completely independent of the control input $u(t)$. The equation $\\dot{x}_1(t) = x_1(t)$ is an unstable first-order system. Its solution is $x_1(t) = x_1(0) e^t$.\nThis corresponds to the fact that the system is not stabilizable, as the unstable mode associated with the eigenvalue $\\lambda=1$ is uncontrollable.\nThe performance index to be minimized is:\n$$\nJ(x_{0},u) = \\int_{0}^{\\infty} \\left( x_1(t)^2 + x_2(t)^2 + u(t)^2 \\right) dt\n$$\nConsider any initial condition $x_0$ with a non-zero first component, $x_1(0) \\neq 0$. The state trajectory for $x_1(t)$ is fixed as $x_1(t) = x_1(0)e^t$, regardless of the control effort $u(t)$. The cost integral therefore contains the term:\n$$\n\\int_{0}^{\\infty} x_1(t)^2 dt = \\int_{0}^{\\infty} (x_1(0)e^t)^2 dt = x_1(0)^2 \\int_{0}^{\\infty} e^{2t} dt\n$$\nThis integral diverges:\n$$\n\\int_{0}^{\\infty} e^{2t} dt = \\lim_{T \\to \\infty} \\left[ \\frac{1}{2}e^{2t} \\right]_{0}^{T} = \\lim_{T \\to \\infty} \\frac{1}{2}(e^{2T} - 1) = \\infty\n$$\nSince the integrand of $J(x_0, u)$ is a sum of non-negative terms, and one of these terms integrates to infinity, the total cost $J(x_0, u)$ must be infinite for any choice of control function $u(t)$, provided $x_1(0) \\neq 0$.\nThe optimal cost, being the infimum over all control inputs, $J^{\\star}(x_0) = \\inf_u J(x_0, u)$, must also be infinite. This failure to achieve a finite cost is a direct consequence of the system's non-stabilizability: the presence of an uncontrollable unstable mode makes it impossible to prevent the state from diverging, which in turn causes the integral cost to diverge.", "answer": "$$\\boxed{\\frac{3}{2} + \\sqrt{2}}$$", "id": "2913486"}, {"introduction": "The elegant theory of continuous-time LQR must ultimately meet the reality of digital implementation. This practice bridges that gap by exploring the process of designing controllers for sampled-data systems [@problem_id:2913488]. Through a computational exercise, you will discretize a continuous system, compare the stability of a naively sampled continuous LQR gain against a properly designed discrete-time LQR gain, and quantify the results using stability margins. This is an essential task that highlights potential pitfalls and best practices in modern digital control design.", "problem": "Consider the continuous-time, linear time-invariant state-space model given by the differential equation $\\,\\dot{x}(t) = A x(t) + B u(t)\\,$ with state $\\,x(t) \\in \\mathbb{R}^{2}\\,$ and control input $\\,u(t) \\in \\mathbb{R}\\,$, where\n$$\nA = \\begin{bmatrix} 0 & 1 \\\\ 0 & 0 \\end{bmatrix}, \\quad B = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}.\n$$\nYou are asked to design Linear Quadratic Regulator (LQR) state-feedback laws in both continuous time and discrete time and compare their closed-loop stability margins across different sampling periods. The performance weights are specified by the quadratic cost with matrices\n$$\nQ = \\begin{bmatrix} 10 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad R = \\begin{bmatrix} 1 \\end{bmatrix}.\n$$\nThe continuous-time performance index is given by\n$$\nJ = \\int_{0}^{\\infty} \\left( x(t)^{\\top} Q x(t) + u(t)^{\\top} R u(t) \\right)\\, dt.\n$$\nProceed using only fundamental definitions and well-tested results as follows. First, compute the optimal continuous-time LQR gain $\\,K_{c}\\,$ by solving the continuous-time algebraic Riccati equation that arises from the Hamilton–Jacobi–Bellman optimality conditions for the above $\\,A, B, Q, R\\,$. Then, for each specified sampling period, form the exact zero-order hold discrete-time model and compute the optimal discrete-time LQR gain $\\,K_{d}\\,$ by solving the discrete-time algebraic Riccati equation for the corresponding sampled model.\n\nDefine the following closed-loop stability margin measures.\n1. For the continuous-time closed loop $\\,\\dot{x}(t) = (A - B K_{c}) x(t)\\,$, define the margin\n$$\nm_{c} \\triangleq - \\max \\left\\{ \\operatorname{Re}(\\lambda) : \\lambda \\in \\sigma(A - B K_{c}) \\right\\}.\n$$\nThis $\\,m_{c}\\,$ is positive if and only if the continuous-time closed loop is asymptotically stable, and it measures how far the rightmost closed-loop eigenvalue lies inside the open left-half complex plane.\n\n2. For a given sampling period $\\,T > 0\\,$, let $\\,A_{d}(T)\\,$ and $\\,B_{d}(T)\\,$ denote the exact zero-order hold discretization of $\\,A\\,$ and $\\,B\\,$ at sampling period $\\,T\\,$, so that\n$$\nA_{d}(T) = e^{A T}, \\quad B_{d}(T) = \\int_{0}^{T} e^{A \\tau} B \\, d\\tau.\n$$\nFor the sampled-data closed-loop implementation using the continuous-time gain $\\,K_{c}\\,$, define\n$$\nm_{d}^{(c)}(T) \\triangleq 1 - \\rho\\!\\left( A_{d}(T) - B_{d}(T) K_{c} \\right),\n$$\nand for the discrete-time LQR gain $\\,K_{d}\\,$ designed directly on $\\,\\big(A_{d}(T), B_{d}(T)\\big)\\,$ with stage weights $\\,Q\\,$ and $\\,R\\,$, define\n$$\nm_{d}^{(d)}(T) \\triangleq 1 - \\rho\\!\\left( A_{d}(T) - B_{d}(T) K_{d} \\right),\n$$\nwhere $\\,\\rho(\\cdot)\\,$ denotes the spectral radius. Each discrete-time margin $\\,m_{d}^{(\\cdot)}(T)\\,$ is positive if and only if the corresponding discrete-time closed loop is asymptotically stable, and it measures how far the dominant closed-loop eigenvalue modulus lies inside the open unit disk of the complex plane.\n\nConstruct a program that performs the following for each sampling period in the test suite\n$$\n\\mathcal{T} = \\{\\, 0.01, \\; 0.1, \\; 0.5, \\; 1.0, \\; 2.0 \\,\\},\n$$\nusing exact zero-order hold discretization:\n1. Compute $\\,A_{d}(T)\\,$ and $\\,B_{d}(T)\\,$ for $\\,T \\in \\mathcal{T}\\,$ using the matrix exponential and the integral definition.\n2. Compute the continuous-time LQR gain $\\,K_{c}\\,$ from $\\,A, B, Q, R\\,$ and the discrete-time LQR gain $\\,K_{d}\\,$ for each pair $\\,\\big(A_{d}(T), B_{d}(T)\\big)\\,$ with the same $\\,Q, R\\,$.\n3. Compute the stability margins $\\,m_{c}\\,$, $\\,m_{d}^{(c)}(T)\\,$, and $\\,m_{d}^{(d)}(T)\\,$ as defined above. Also report the corresponding discrete-time closed-loop stability booleans\n$$\ns_{d}^{(c)}(T) \\triangleq \\big( m_{d}^{(c)}(T) > 0 \\big), \\quad s_{d}^{(d)}(T) \\triangleq \\big( m_{d}^{(d)}(T) > 0 \\big).\n$$\n\nYour program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets. For each $\\,T \\in \\mathcal{T}\\,$, output a list\n$$\n[\\, T, \\; m_{c}, \\; m_{d}^{(c)}(T), \\; m_{d}^{(d)}(T), \\; s_{d}^{(c)}(T), \\; s_{d}^{(d)}(T) \\,],\n$$\nso that the final output is a list of such lists in the same order as $\\,\\mathcal{T}\\,$, for example\n$$\n\\big[ [\\, \\cdot \\,], [\\, \\cdot \\,], \\ldots, [\\, \\cdot \\,] \\big].\n$$\nAll numerical values must be computed by your program. No physical units are involved, and angles are not used. The final output must be precisely one line containing this list, with floating-point numbers in standard decimal notation and booleans given as logical constants. The solution should be fully general and not rely on any external input.", "solution": "The problem requires a systematic procedure involving continuous-time LQR design, system discretization, discrete-time LQR design, and stability analysis.\n\n**1. Continuous-Time LQR Design**\n\nThe optimal continuous-time state-feedback control law is given by $u(t) = -K_c x(t)$, where the gain matrix $K_c$ is computed as $K_c = R^{-1} B^\\top P_c$. The matrix $P_c$ is the unique symmetric positive-definite solution to the Continuous-time Algebraic Riccati Equation (CARE):\n$$\nA^\\top P_c + P_c A - P_c B R^{-1} B^\\top P_c + Q = 0\n$$\nGiven the system matrices $A = \\begin{bmatrix} 0 & 1 \\\\ 0 & 0 \\end{bmatrix}$, $B = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$ and cost matrices $Q = \\begin{bmatrix} 10 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $R = [1]$. Let $P_c = \\begin{bmatrix} p_{11} & p_{12} \\\\ p_{12} & p_{22} \\end{bmatrix}$. The CARE expands into the following system of algebraic equations:\n\\begin{enumerate}\n    \\item $-p_{12}^2 + 10 = 0$\n    \\item $p_{11} - p_{12} p_{22} = 0$\n    \\item $2 p_{12} - p_{22}^2 + 1 = 0$\n\\end{enumerate}\nFrom (1), we select the positive root $p_{12} = \\sqrt{10}$ for consistency with the theory of optimal regulators for such systems. From (3), we find $p_{22}^2 = 1 + 2\\sqrt{10}$, so $p_{22} = \\sqrt{1 + 2\\sqrt{10}}$ (since $P_c$ must be positive-definite). From (2), we get $p_{11} = p_{12} p_{22} = \\sqrt{10}\\sqrt{1 + 2\\sqrt{10}}$.\nThe solution is thus:\n$$\nP_c = \\begin{bmatrix} \\sqrt{10}\\sqrt{1+2\\sqrt{10}} & \\sqrt{10} \\\\ \\sqrt{10} & \\sqrt{1+2\\sqrt{10}} \\end{bmatrix}\n$$\nThe optimal continuous-time gain is:\n$$\nK_c = R^{-1} B^\\top P_c = [1] \\begin{bmatrix} 0 & 1 \\end{bmatrix} P_c = \\begin{bmatrix} p_{12} & p_{22} \\end{bmatrix} = \\left[ \\sqrt{10}, \\; \\sqrt{1 + 2\\sqrt{10}} \\right]\n$$\nThe continuous-time closed-loop system matrix is $A_{cl,c} = A - B K_c$:\n$$\nA_{cl,c} = \\begin{bmatrix} 0 & 1 \\\\ -\\sqrt{10} & -\\sqrt{1 + 2\\sqrt{10}} \\end{bmatrix}\n$$\nThe eigenvalues $\\lambda$ of $A_{cl,c}$ are the roots of its characteristic polynomial $\\lambda^2 + \\sqrt{1 + 2\\sqrt{10}} \\lambda + \\sqrt{10} = 0$. The real part of these eigenvalues is $\\operatorname{Re}(\\lambda) = -\\frac{\\sqrt{1 + 2\\sqrt{10}}}{2}$.\nThe continuous-time stability margin $m_c$ is therefore:\n$$\nm_c = - \\max \\left\\{ \\operatorname{Re}(\\lambda) \\right\\} = \\frac{\\sqrt{1 + 2\\sqrt{10}}}{2}\n$$\n\n**2. System Discretization**\n\nFor a given sampling period $T > 0$, the exact zero-order hold discretization of the continuous-time system is given by the pair $(A_d(T), B_d(T))$, where:\n$$\nA_d(T) = e^{AT}, \\quad B_d(T) = \\left( \\int_0^T e^{A\\tau} d\\tau \\right) B\n$$\nThe matrix $A$ is nilpotent, with $A^2=0$. This simplifies the matrix exponential:\n$$\nA_d(T) = e^{AT} = I + AT = \\begin{bmatrix} 1 & T \\\\ 0 & 1 \\end{bmatrix}\n$$\nThe integral for $B_d(T)$ becomes:\n$$\nB_d(T) = \\left( \\int_0^T (I + A\\tau) d\\tau \\right) B = \\left( IT + A\\frac{T^2}{2} \\right) B = \\begin{bmatrix} T & T^2/2 \\\\ 0 & T \\end{bmatrix} \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} T^2/2 \\\\ T \\end{bmatrix}\n$$\nThese matrices will be computed for each $T$ in the test suite $\\mathcal{T}$.\n\n**3. Discrete-Time LQR Design**\n\nFor each discrete-time system $(A_d(T), B_d(T))$, we design a discrete-time LQR with the same cost matrices $Q$ and $R$. The optimal control law is $u_k = -K_d x_k$, where the gain $K_d(T)$ is found by solving the Discrete-time Algebraic Riccati Equation (DARE):\n$$\nP_d = A_d^\\top P_d A_d - (A_d^\\top P_d B_d)(R + B_d^\\top P_d B_d)^{-1}(B_d^\\top P_d A_d) + Q\n$$\nThe optimal discrete-time gain is then:\n$$\nK_d(T) = (R + B_d^\\top P_d B_d)^{-1} (B_d^\\top P_d A_d)\n$$\nwhere $P_d$ is the unique symmetric positive-definite solution to the DARE. Since the pair $(A_d(T), B_d(T))$ is controllable for any $T > 0$ and the pair $(A_d(T), \\sqrt{Q})$ is detectable, a unique stabilizing solution exists.\n\n**4. Stability Margin Computation**\n\nThe program will compute three stability margins for each $T \\in \\mathcal{T}$:\n\\begin{enumerate}\n    \\item $m_c$: The constant continuous-time margin, derived above.\n    \\item $m_d^{(c)}(T)$: The margin for the sampled-data system using the continuous-time gain $K_c$. The closed-loop matrix is $A_{cl,d}^{(c)} = A_d(T) - B_d(T) K_c$. The margin is $m_d^{(c)}(T) = 1 - \\rho(A_{cl,d}^{(c)})$, where $\\rho(\\cdot)$ denotes the spectral radius (maximum absolute value of eigenvalues). This margin may be negative for larger $T$, indicating instability.\n    \\item $m_d^{(d)}(T)$: The margin for the discrete-time LQR design. The closed-loop matrix is $A_{cl,d}^{(d)} = A_d(T) - B_d(T) K_d(T)$. The margin is $m_d^{(d)}(T) = 1 - \\rho(A_{cl,d}^{(d)})$. By construction, the discrete-time LQR provides a stable closed-loop system, so we expect $m_d^{(d)}(T) > 0$ for all $T$.\n\\end{enumerate}\nThe corresponding stability booleans $s_d^{(c)}(T)$ and $s_d^{(d)}(T)$ are evaluated based on the sign of these margins.\n\nThe following program implements this entire procedure. It uses established numerical linear algebra routines from `numpy` and `scipy` to solve the Riccati equations and compute eigenvalues, ensuring accuracy and robustness.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import linalg\n\ndef solve():\n    \"\"\"\n    Solves the LQR design problem for continuous and discrete-time systems.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [0.01, 0.1, 0.5, 1.0, 2.0]\n\n    # System and cost matrices\n    A = np.array([[0.0, 1.0], [0.0, 0.0]])\n    B = np.array([[0.0], [1.0]])\n    Q = np.array([[10.0, 0.0], [0.0, 1.0]])\n    R = np.array([[1.0]])\n    n = A.shape[0]\n    m = B.shape[1]\n\n    # --- Continuous-Time LQR Design ---\n    # Solve the Continuous-time Algebraic Riccati Equation (CARE)\n    Pc = linalg.solve_continuous_are(A, B, Q, R)\n    # Compute the continuous-time LQR gain Kc\n    Kc = np.linalg.inv(R) @ B.T @ Pc\n    # Compute the continuous-time closed-loop system matrix\n    A_cl_c = A - B @ Kc\n    # Compute the eigenvalues and the stability margin mc\n    eigvals_c = linalg.eigvals(A_cl_c)\n    mc = -np.max(np.real(eigvals_c))\n\n    results = []\n    for T in test_cases:\n        # --- System Discretization (Zero-Order Hold) ---\n        # The analytical solution is simple for this nilpotent system.\n        Ad = np.array([[1.0, T], [0.0, 1.0]])\n        Bd = np.array([[T**2 / 2.0], [T]])\n\n        # An alternative, more general numerical method using matrix exponential:\n        # M = np.zeros((n + m, n + m))\n        # M[:n, :n] = A\n        # M[:n, n:] = B\n        # M_exp = linalg.expm(M * T)\n        # Ad_num = M_exp[:n, :n]\n        # Bd_num = M_exp[:n, n:]\n        # np.allclose(Ad, Ad_num) and np.allclose(Bd, Bd_num) would be True\n\n        # --- Discrete-Time LQR Design ---\n        # Solve the Discrete-time Algebraic Riccati Equation (DARE)\n        Pd = linalg.solve_discrete_are(Ad, Bd, Q, R)\n        # Compute the discrete-time LQR gain Kd\n        Kd = np.linalg.inv(R + Bd.T @ Pd @ Bd) @ (Bd.T @ Pd @ Ad)\n\n        # --- Stability Margin Calculations ---\n        # 1. Sampled-data system with continuous gain Kc\n        A_cl_dc = Ad - Bd @ Kc\n        eigvals_dc = linalg.eigvals(A_cl_dc)\n        rho_c = np.max(np.abs(eigvals_dc))\n        md_c = 1.0 - rho_c\n        sd_c = md_c > 0\n\n        # 2. Discrete-time system with discrete gain Kd\n        A_cl_dd = Ad - Bd @ Kd\n        eigvals_dd = linalg.eigvals(A_cl_dd)\n        rho_d = np.max(np.abs(eigvals_dd))\n        md_d = 1.0 - rho_d\n        sd_d = md_d > 0\n        \n        # Assemble the results for the current sampling period T\n        # The output format requires a list of lists.\n        # Python's default str() for list items is used.\n        current_result = [T, mc, md_c, md_d, bool(sd_c), bool(sd_d)]\n        results.append(current_result)\n\n    # Final print statement in the exact required format.\n    # The map(str, ...) converts each inner list to its string representation.\n    # The ','.join(...) concatenates them with commas.\n    # The outer f-string adds the final brackets.\n    # Example: '[[...],[...]]'\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2913488"}]}