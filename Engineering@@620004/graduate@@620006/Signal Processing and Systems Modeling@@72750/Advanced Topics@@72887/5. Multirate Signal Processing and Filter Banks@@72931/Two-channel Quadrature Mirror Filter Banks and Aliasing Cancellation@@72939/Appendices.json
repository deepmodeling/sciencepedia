{"hands_on_practices": [{"introduction": "The power of a Quadrature Mirror Filter (QMF) bank lies in its elegant solution to the problem of aliasing. This exercise is a foundational deep dive into the mathematics that makes this possible. By deriving the system's input-output relationship from first principles, you will prove how the specific quadrature-mirror relationship between analysis and synthesis filters achieves perfect cancellation of the aliasing terms introduced by downsampling. [@problem_id:2915690]", "id": "2915690", "problem": "Consider the design of a two-channel Quadrature Mirror Filter (QMF) bank for signals in discrete time. Let the analysis lowpass be a real, linear-phase, symmetric halfband Finite Impulse Response (FIR) filter $H_{0}(\\exp(j\\omega))$ obtained by the window method from the ideal halfband lowpass. Specifically, start from the ideal halfband frequency response that equals unity for $|\\omega| \\leq \\omega_{c}$ and zero for $|\\omega| \\geq \\pi - \\omega_{c}$ with transition centered at $\\omega_{c} = \\pi/2$, whose ideal impulse response is\n$$\nh_{\\mathrm{ideal}}[n] \\;=\\; \\frac{\\sin\\!\\big(\\frac{\\pi}{2}(n - (N-1)/2)\\big)}{\\pi (n - (N-1)/2)} \\quad \\text{for} \\; n \\neq (N-1)/2,\\quad\nh_{\\mathrm{ideal}}[(N-1)/2] \\;=\\; \\frac{1}{2},\n$$\nwhere $N$ is an odd positive integer. Choose any even-symmetric window $w[n]$ supported on $n = 0,\\dots,N-1$ with $w[n] = w[N-1-n]$, and define the designed filter coefficients as $h_{0}[n] = h_{\\mathrm{ideal}}[n]\\,w[n]$ so that $H_{0}(\\exp(j\\omega))$ is real, even, and halfband. Define the corresponding analysis highpass by the quadrature-mirror relation $H_{1}(\\exp(j\\omega)) = H_{0}(\\exp(j(\\omega - \\pi)))$. Consider a classical two-channel QMF analysis-synthesis system with decimation by $2$ after analysis and interpolation by $2$ before synthesis, and synthesis filters chosen as $F_{0}(\\exp(j\\omega)) = H_{0}(\\exp(j\\omega))$ and $F_{1}(\\exp(j\\omega)) = -\\,H_{1}(\\exp(j\\omega))$.\n\nStarting only from the definitions of the Discrete-Time Fourier Transform (DTFT), linear time-invariant filtering, and the frequency-domain relations for downsampling by $2$ and upsampling by $2$, derive the input-output relation that separates the desired (non-aliased) component and the alias component at the system output. From this, obtain the aliasing transfer function $A(\\exp(j\\omega))$ that multiplies the modulated input $X(\\exp(j(\\omega-\\pi)))$ at the output. Then, using only the stated QMF relations among $H_{0}$, $H_{1}$, $F_{0}$, and $F_{1}$, compute the exact closed-form expression for $A(\\exp(j\\omega))$.\n\nYour final answer must be a single closed-form analytic expression. No numerical approximation is required.", "solution": "The problem statement is a valid, well-posed problem in the field of digital signal processing. It is scientifically grounded and contains all necessary information to derive a unique solution. We shall proceed with the derivation.\n\nThe structure is a two-channel analysis-synthesis filter bank. Let the input signal be $x[n]$ with Discrete-Time Fourier Transform (DTFT) $X(\\exp(j\\omega))$.\n\nFirst, we describe the analysis stage. The input signal $x[n]$ is passed through a lowpass filter $h_{0}[n]$ and a highpass filter $h_{1}[n]$. The outputs are $y_{0}[n]$ and $y_{1}[n]$ respectively. In the frequency domain, their DTFTs are given by:\n$$Y_{0}(\\exp(j\\omega)) = H_{0}(\\exp(j\\omega)) X(\\exp(j\\omega))$$\n$$Y_{1}(\\exp(j\\omega)) = H_{1}(\\exp(j\\omega)) X(\\exp(j\\omega))$$\n\nNext, these signals are downsampled by a factor of $2$. Let the downsampled signals be $v_{0}[n] = y_{0}[2n]$ and $v_{1}[n] = y_{1}[2n]$. The DTFT of a signal downsampled by $2$ is related to the DTFT of the original signal by the following fundamental relation:\n$$V_{k}(\\exp(j\\omega)) = \\frac{1}{2} \\left[ Y_{k}(\\exp(j\\omega/2)) + Y_{k}(\\exp(j(\\omega/2 - \\pi))) \\right]$$\nfor $k = 0, 1$. Substituting the expressions for $Y_{0}(\\exp(j\\omega))$ and $Y_{1}(\\exp(j\\omega))$, we obtain:\n$$V_{0}(\\exp(j\\omega)) = \\frac{1}{2} \\left[ H_{0}(\\exp(j\\omega/2)) X(\\exp(j\\omega/2)) + H_{0}(\\exp(j(\\omega/2 - \\pi))) X(\\exp(j(\\omega/2 - \\pi))) \\right]$$\n$$V_{1}(\\exp(j\\omega)) = \\frac{1}{2} \\left[ H_{1}(\\exp(j\\omega/2)) X(\\exp(j\\omega/2)) + H_{1}(\\exp(j(\\omega/2 - \\pi))) X(\\exp(j(\\omega/2 - \\pi))) \\right]$$\n\nThese decimated signals are transmitted and then upsampled by a factor of $2$ at the receiver before the synthesis stage. Let the upsampled signals be $u_{0}[n]$ and $u_{1}[n]$. The DTFT of an upsampled signal is given by $U(\\exp(j\\omega)) = V(\\exp(j2\\omega))$. Applying this to $v_{0}[n]$ and $v_{1}[n]$ yields:\n$$U_{0}(\\exp(j\\omega)) = V_{0}(\\exp(j2\\omega)) = \\frac{1}{2} \\left[ H_{0}(\\exp(j\\omega)) X(\\exp(j\\omega)) + H_{0}(\\exp(j(\\omega - \\pi))) X(\\exp(j(\\omega - \\pi))) \\right]$$\n$$U_{1}(\\exp(j\\omega)) = V_{1}(\\exp(j2\\omega)) = \\frac{1}{2} \\left[ H_{1}(\\exp(j\\omega)) X(\\exp(j\\omega)) + H_{1}(\\exp(j(\\omega - \\pi))) X(\\exp(j(\\omega - \\pi))) \\right]$$\n\nFinally, the synthesis stage reconstructs the signal. The upsampled signals are filtered by synthesis filters $F_{0}(\\exp(j\\omega))$ and $F_{1}(\\exp(j\\omega))$, and their outputs are summed. The DTFT of the final output signal, $\\hat{x}[n]$, is:\n$$\\hat{X}(\\exp(j\\omega)) = F_{0}(\\exp(j\\omega)) U_{0}(\\exp(j\\omega)) + F_{1}(\\exp(j\\omega)) U_{1}(\\exp(j\\omega))$$\nSubstituting the expressions for $U_{0}(\\exp(j\\omega))$ and $U_{1}(\\exp(j\\omega))$:\n\\begin{align*}\n\\hat{X}(\\exp(j\\omega)) &= \\frac{1}{2} F_{0}(\\exp(j\\omega)) \\left[ H_{0}(\\exp(j\\omega)) X(\\exp(j\\omega)) + H_{0}(\\exp(j(\\omega - \\pi))) X(\\exp(j(\\omega - \\pi))) \\right] \\\\\n&+ \\frac{1}{2} F_{1}(\\exp(j\\omega)) \\left[ H_{1}(\\exp(j\\omega)) X(\\exp(j\\omega)) + H_{1}(\\exp(j(\\omega - \\pi))) X(\\exp(j(\\omega - \\pi))) \\right]\n\\end{align*}\nWe now separate the terms containing the original input spectrum $X(\\exp(j\\omega))$ from those containing the aliased spectrum $X(\\exp(j(\\omega - \\pi)))$.\n\\begin{align*}\n\\hat{X}(\\exp(j\\omega)) &= \\frac{1}{2} \\left[ F_{0}(\\exp(j\\omega)) H_{0}(\\exp(j\\omega)) + F_{1}(\\exp(j\\omega)) H_{1}(\\exp(j\\omega)) \\right] X(\\exp(j\\omega)) \\\\\n&+ \\frac{1}{2} \\left[ F_{0}(\\exp(j\\omega)) H_{0}(\\exp(j(\\omega - \\pi))) + F_{1}(\\exp(j\\omega)) H_{1}(\\exp(j(\\omega - \\pi))) \\right] X(\\exp(j(\\omega - \\pi)))\n\\end{align*}\nThis is the general input-output relation for a two-channel filter bank, of the form $\\hat{X}(\\exp(j\\omega)) = T(\\exp(j\\omega)) X(\\exp(j\\omega)) + A(\\exp(j\\omega)) X(\\exp(j(\\omega - \\pi)))$.\nThe term $A(\\exp(j\\omega))$ is the aliasing transfer function, given by:\n$$A(\\exp(j\\omega)) = \\frac{1}{2} \\left[ F_{0}(\\exp(j\\omega)) H_{0}(\\exp(j(\\omega - \\pi))) + F_{1}(\\exp(j\\omega)) H_{1}(\\exp(j(\\omega - \\pi))) \\right]$$\nThe problem requires us to compute the exact closed-form expression for $A(\\exp(j\\omega))$ using the specified relations among the filters:\n1.  $H_{1}(\\exp(j\\omega)) = H_{0}(\\exp(j(\\omega - \\pi)))$\n2.  $F_{0}(\\exp(j\\omega)) = H_{0}(\\exp(j\\omega))$\n3.  $F_{1}(\\exp(j\\omega)) = -H_{1}(\\exp(j\\omega))$\n\nWe substitute relations (2) and (3) into the expression for $A(\\exp(j\\omega))$:\n$$A(\\exp(j\\omega)) = \\frac{1}{2} \\left[ H_{0}(\\exp(j\\omega)) H_{0}(\\exp(j(\\omega - \\pi))) + (-H_{1}(\\exp(j\\omega))) H_{1}(\\exp(j(\\omega - \\pi))) \\right]$$\n$$A(\\exp(j\\omega)) = \\frac{1}{2} \\left[ H_{0}(\\exp(j\\omega)) H_{0}(\\exp(j(\\omega - \\pi))) - H_{1}(\\exp(j\\omega)) H_{1}(\\exp(j(\\omega - \\pi))) \\right]$$\nNow, we use relation (1) to express the terms involving $H_{1}$ in terms of $H_{0}$. The first term we need is $H_{1}(\\exp(j\\omega))$, which is given directly by relation (1):\n$$H_{1}(\\exp(j\\omega)) = H_{0}(\\exp(j(\\omega - \\pi)))$$\nThe second term we need is $H_{1}(\\exp(j(\\omega - \\pi)))$. We obtain this by substituting $\\omega \\to (\\omega - \\pi)$ into relation (1):\n$$H_{1}(\\exp(j(\\omega - \\pi))) = H_{0}(\\exp(j((\\omega - \\pi) - \\pi))) = H_{0}(\\exp(j(\\omega - 2\\pi)))$$\nSince the DTFT is periodic with period $2\\pi$, $H_{0}(\\exp(j(\\omega - 2\\pi))) = H_{0}(\\exp(j\\omega))$. Therefore:\n$$H_{1}(\\exp(j(\\omega - \\pi))) = H_{0}(\\exp(j\\omega))$$\nNow we substitute these two identities back into our expression for $A(\\exp(j\\omega))$:\n$$A(\\exp(j\\omega)) = \\frac{1}{2} \\left[ H_{0}(\\exp(j\\omega)) H_{0}(\\exp(j(\\omega - \\pi))) - (H_{0}(\\exp(j(\\omega - \\pi)))) (H_{0}(\\exp(j\\omega))) \\right]$$\nThe two terms inside the brackets are identical and are subtracted from one another.\n$$A(\\exp(j\\omega)) = \\frac{1}{2} \\left[ 0 \\right]$$\nThus, the aliasing transfer function is identically zero.\n$$A(\\exp(j\\omega)) = 0$$\nThis demonstrates that the specific choice of synthesis filters prescribed in the problem, in conjunction with the quadrature-mirror relationship between the analysis filters, results in perfect cancellation of the aliasing component at the output of the QMF bank. The extensive details about the design of $H_{0}(\\exp(j\\omega))$ are contextual and confirm that such a filter can be realized, but are not required for the final algebraic simplification.", "answer": "$$\\boxed{0}$$"}, {"introduction": "While ideal systems provide a clean theoretical framework, real-world implementations are subject to imperfections. This thought experiment explores the practical consequences of such deviations, investigating how a small error in a single filter coefficient can disrupt the perfect reconstruction property. By analyzing the resulting system, you will learn to identify and distinguish between the three primary forms of signal degradation: aliasing, amplitude, and phase distortion. [@problem_id:1746334]", "id": "1746334", "problem": "A two-channel Quadrature Mirror Filter (QMF) bank is used for signal analysis and synthesis. In an ideal scenario, this bank is designed for perfect reconstruction, meaning the output signal is a delayed and possibly scaled version of the input signal. This problem explores the effects of a small imperfection in one of the filters.\n\nConsider a QMF bank where the relationship between the filters is defined as follows:\n- The analysis high-pass filter is $H_1(z) = H_0(-z)$.\n- The synthesis low-pass filter is $G_0(z) = H_0(z)$.\n- The synthesis high-pass filter is $G_1(z) = -H_1(z)$.\n\nInitially, the bank is designed for perfect reconstruction using an analysis low-pass filter $H_{0,ideal}(z)$ given by the Haar scaling function coefficients:\n$$H_{0,ideal}(z) = \\frac{1}{\\sqrt{2}} \\left(1 + z^{-1}\\right)$$\n\nNow, suppose due to a manufacturing defect, the first coefficient of the analysis low-pass filter is slightly perturbed. The actual analysis low-pass filter in operation is:\n$$\\tilde{H}_0(z) = \\left(\\frac{1}{\\sqrt{2}} + \\epsilon\\right) + \\frac{1}{\\sqrt{2}} z^{-1}$$\nwhere $\\epsilon$ is a small, non-zero real constant. The other three filters ($H_1(z)$, $G_0(z)$, and $G_1(z)$) are not updated and remain defined by the original, ideal filter $H_{0,ideal}(z)$.\n\nThe three primary types of distortion that can occur in a non-ideal filter bank are:\n1.  **Aliasing Distortion**: The output signal contains frequency components that were not present in the input, caused by imperfect cancellation of aliased signal components from the downsampling/upsampling process.\n2.  **Amplitude Distortion**: The frequency components of the original signal are attenuated or amplified non-uniformly, altering the overall frequency spectrum magnitude.\n3.  **Phase Distortion**: The phase relationships between the frequency components of the original signal are altered in a non-linear way, leading to signal waveform deformation.\n\nWhich of the following statements accurately describes the distortions introduced into the QMF bank system as a result of this specific perturbation?\n\nA. Only aliasing distortion is introduced.\nB. Only amplitude and phase distortion are introduced.\nC. Aliasing, amplitude, and phase distortion are all introduced.\nD. Only amplitude distortion is introduced.\nE. No distortion is introduced; the system still achieves perfect reconstruction.\nF. Only aliasing and phase distortion are introduced.\n\n", "solution": "We analyze the two-channel QMF bank using the standard input-output relation for decimate-by-2 analysis/synthesis with analysis filters $H_{0}(z)$, $H_{1}(z)$ and synthesis filters $G_{0}(z)$, $G_{1}(z)$:\n$$\nY(z)=D(z)X(z)+A(z)X(-z),\n$$\nwhere\n$$\nD(z)=\\frac{1}{2}\\left[G_{0}(z)H_{0}(z)+G_{1}(z)H_{1}(z)\\right],\\quad\nA(z)=\\frac{1}{2}\\left[G_{0}(z)H_{0}(-z)+G_{1}(z)H_{1}(-z)\\right].\n$$\nPerfect reconstruction (no aliasing, and only a delay/scale) requires $A(z)=0$ and $D(z)=c\\,z^{-k}$.\n\nIn the given system, the intended ideal relations are\n$$\nH_{1}(z)=H_{0,\\text{ideal}}(-z),\\quad G_{0}(z)=H_{0,\\text{ideal}}(z),\\quad G_{1}(z)=-H_{1}(z)=-H_{0,\\text{ideal}}(-z),\n$$\nwith $H_{0,\\text{ideal}}(z)=\\frac{1}{\\sqrt{2}}\\left(1+z^{-1}\\right)$. Due to the defect, the actual analysis low-pass is\n$$\n\\tilde{H}_{0}(z)=\\left(\\frac{1}{\\sqrt{2}}+\\epsilon\\right)+\\frac{1}{\\sqrt{2}}\\,z^{-1},\n$$\nwhile $H_{1}(z)$, $G_{0}(z)$, and $G_{1}(z)$ remain those induced by $H_{0,\\text{ideal}}$.\n\nFirst, evaluate the aliasing transfer function. Since $H_{0}(z)$ in the analysis path is now $\\tilde{H}_{0}(z)$ but $H_{1}(z)=H_{0,\\text{ideal}}(-z)$, we have\n$$\nA(z)=\\frac{1}{2}\\Big[G_{0}(z)\\tilde{H}_{0}(-z)+G_{1}(z)H_{1}(-z)\\Big]\n=\\frac{1}{2}\\Big[H_{0,\\text{ideal}}(z)\\tilde{H}_{0}(-z)-H_{0,\\text{ideal}}(-z)H_{1}(-z)\\Big].\n$$\nUsing $H_{1}(-z)=H_{0,\\text{ideal}}(z)$ and $H_{0,\\text{ideal}}(-z)=\\frac{1}{\\sqrt{2}}(1-z^{-1})$, $\\tilde{H}_{0}(-z)=\\left(\\frac{1}{\\sqrt{2}}+\\epsilon\\right)-\\frac{1}{\\sqrt{2}}z^{-1}$, we find\n$$\n\\tilde{H}_{0}(-z)-H_{0,\\text{ideal}}(-z)=\\epsilon,\n$$\nhence\n$$\nA(z)=\\frac{1}{2}H_{0,\\text{ideal}}(z)\\Big[\\tilde{H}_{0}(-z)-H_{0,\\text{ideal}}(-z)\\Big]\n=\\frac{\\epsilon}{2}\\,H_{0,\\text{ideal}}(z).\n$$\nTherefore $A(z)\\neq 0$ for $\\epsilon\\neq 0$, so aliasing distortion is introduced.\n\nNext, evaluate the distortion transfer function:\n$$\nD(z)=\\frac{1}{2}\\Big[H_{0,\\text{ideal}}(z)\\tilde{H}_{0}(z)-\\big(H_{0,\\text{ideal}}(-z)\\big)^{2}\\Big].\n$$\nSubstitute $H_{0,\\text{ideal}}(z)=\\frac{1}{\\sqrt{2}}(1+z^{-1})$, $\\tilde{H}_{0}(z)=\\left(\\frac{1}{\\sqrt{2}}+\\epsilon\\right)+\\frac{1}{\\sqrt{2}}z^{-1}$, and $H_{0,\\text{ideal}}(-z)=\\frac{1}{\\sqrt{2}}(1-z^{-1})$:\n$$\nH_{0,\\text{ideal}}(z)\\tilde{H}_{0}(z)\n=\\frac{1}{\\sqrt{2}}(1+z^{-1})\\left(\\frac{1}{\\sqrt{2}}+\\epsilon+\\frac{1}{\\sqrt{2}}z^{-1}\\right)\n=\\frac{\\epsilon}{\\sqrt{2}}+\\left(2+\\frac{\\epsilon}{\\sqrt{2}}\\right)z^{-1}+z^{-2},\n$$\n$$\n\\big(H_{0,\\text{ideal}}(-z)\\big)^{2}=\\frac{1}{2}(1-2z^{-1}+z^{-2}).\n$$\nThus\n$$\nD(z)=\\frac{1}{2}\\left[\\left(\\frac{\\epsilon}{\\sqrt{2}}+\\left(2+\\frac{\\epsilon}{\\sqrt{2}}\\right)z^{-1}+z^{-2}\\right)-\\left(\\frac{1}{2}-z^{-1}+\\frac{1}{2}z^{-2}\\right)\\right]\n=\\frac{\\epsilon}{2\\sqrt{2}}+\\left(1+\\frac{\\epsilon}{2\\sqrt{2}}\\right)z^{-1}.\n$$\nWhen $\\epsilon=0$, $D(z)=z^{-1}$, yielding perfect reconstruction with a unit delay. For $\\epsilon\\neq 0$, $D(z)$ is not of the form $c\\,z^{-k}$; instead it is a two-tap FIR with unequal taps. Consequently:\n- The magnitude response $|D(\\exp(j\\omega))|$ is not constant in $\\omega$, so amplitude distortion is introduced.\n- The phase response of $D(\\exp(j\\omega))$ is not linear in $\\omega$ (the impulse response is neither symmetric nor antisymmetric), so phase distortion is introduced.\n\nCombining these results: aliasing distortion is present because $A(z)\\neq 0$, and both amplitude and phase distortion are present because $D(z)\\neq c\\,z^{-k}$. Therefore, the correct choice is that all three distortions are introduced.", "answer": "$$\\boxed{C}$$"}, {"introduction": "Bridging the gap between mathematical theory and computational practice is a crucial skill. This exercise guides you through implementing a perfect reconstruction filter bank using the lifting scheme, a modern and computationally efficient architecture. You will write code to build a complete analysis-synthesis system and use it to numerically verify the aliasing cancellation property, confirming the theoretical principles in a practical, hands-on context. [@problem_id:2915687]", "id": "2915687", "problem": "You are to implement a two-channel conjugate quadrature filter (CQF) bank using a two-stage lifting scheme and verify numerical aliasing cancellation by estimating the alias transfer function $T_1(e^{j\\omega})$ for a set of test sinusoids. The goal is to reason from the fundamental polyphase and modulation framework for critically sampled two-channel filter banks and to verify that aliasing cancels, i.e., $T_1(e^{j\\omega}) = 0$, for a properly designed CQF.\n\nStart from the following foundational facts:\n\n1. In a critically sampled two-channel analysis-synthesis system, the overall input-output relationship in the frequency domain can be written as\n$$\nY\\left(e^{j\\omega}\\right) = \\frac{1}{2}\\left[T_0\\left(e^{j\\omega}\\right) X\\left(e^{j\\omega}\\right) + T_1\\left(e^{j\\omega}\\right) X\\left(e^{j(\\omega+\\pi)}\\right)\\right],\n$$\nwhere $X\\left(e^{j\\omega}\\right)$ and $Y\\left(e^{j\\omega}\\right)$ are the discrete-time Fourier transforms of the input and reconstructed output signals, respectively. The function $T_0\\left(e^{j\\omega}\\right)$ is the distortion transfer function and $T_1\\left(e^{j\\omega}\\right)$ is the alias transfer function.\n\n2. For a conjugate quadrature filter (CQF) pair with perfect reconstruction, $T_1\\left(e^{j\\omega}\\right) = 0$ for all $\\omega$, and $T_0\\left(e^{j\\omega}\\right)$ equals a pure delay (possibly with a constant gain). A sufficient CQF condition is $G_0(z) = H_0(z)$, $G_1(z) = -H_1(z)$, and $H_1(z) = z^{-k} H_0(-z)$ for some integer delay $k$.\n\n3. In the lifting framework for two-channel filter banks, one prediction step followed by one update step constitutes a two-stage lifting scheme. With even-odd splitting of the input $x[n]$ into $s[k] = x[2k]$ (even samples) and $d[k] = x[2k+1]$ (odd samples), a predict coefficient $p$ and an update coefficient $u$ define the analysis via\n$$\nd \\leftarrow d - p \\, s, \\quad s \\leftarrow s + u \\, d,\n$$\noptionally followed by a diagonal scaling (you must set the scale to unity in this problem). The synthesis inverts these two steps exactly:\n$$\ns \\leftarrow s - u \\, d, \\quad d \\leftarrow d + p \\, s,\n$$\nand then interleaves $s$ and $d$ to reconstruct the output.\n\nYour specific tasks are:\n\n1. Implement the two-stage lifting scheme that realizes the Haar CQF filter bank by choosing the predictor coefficient $p = 1$ and the updater coefficient $u = \\tfrac{1}{2}$, with unity scaling $\\kappa = 1$. Perform analysis by even-odd splitting, a predict step, and an update step; perform synthesis by inverse update and inverse predict, followed by interleaving of even and odd parts to obtain the reconstructed output.\n\n2. Use this analysis-synthesis chain to process complex-valued sinusoidal test signals of the form $x[n] = e^{j \\omega n}$, for fixed angular frequencies $\\omega$ expressed in radians. Because critically sampled two-channel systems are linear periodically time-varying with period $2$, you may assume that the output has the form\n$$\ny[n] = \\frac{1}{2}\\left(T_0\\left(e^{j\\omega}\\right) e^{j\\omega n} + T_1\\left(e^{j\\omega}\\right) (-1)^n e^{j\\omega n}\\right).\n$$\n\n3. Estimate the alias transfer function $T_1\\left(e^{j\\omega}\\right)$ numerically for a given $\\omega$ by projecting $y[n]$ onto $e^{j\\omega n}$ and $(-1)^n e^{j\\omega n}$. Specifically, define\n$$\nc_1(\\omega) \\triangleq \\frac{1}{N} \\sum_{n=0}^{N-1} y[n] \\, e^{-j \\omega n} \\, (-1)^n,\n$$\nfor an even-length signal of length $N$. For even $N$, $\\frac{1}{N}\\sum_{n=0}^{N-1} (-1)^n = 0$, from which it follows that $c_1(\\omega) = \\tfrac{1}{2} T_1\\left(e^{j\\omega}\\right)$. Therefore, you can estimate\n$$\n\\widehat{T}_1\\left(e^{j\\omega}\\right) = 2 \\, c_1(\\omega).\n$$\nUse this estimator for each test frequency.\n\n4. Verify numerically that $T_1\\left(e^{j\\omega}\\right) = 0$ by checking that $\\left|\\widehat{T}_1\\left(e^{j\\omega}\\right)\\right|$ is below a specified tolerance $\\epsilon$.\n\nImplementation requirements:\n\n- Use periodic complex exponentials $x[n] = e^{j \\omega n}$ as test signals, with $\\omega$ in radians. No physical units are involved, but you must treat angles in radians.\n- Use even signal length $N = 4096$.\n- Use predictor coefficient $p = 1$, updater coefficient $u = \\tfrac{1}{2}$, and scaling $\\kappa = 1$.\n- Use numerical tolerance $\\epsilon = 10^{-10}$.\n\nTest suite:\n\n- Use the following angular frequencies, all in radians: $\\omega_1 = 0$, $\\omega_2 = \\tfrac{\\pi}{2}$, and $\\omega_3 = \\pi - 10^{-2}$.\n- For each $\\omega_i$, compute $\\widehat{T}_1\\left(e^{j\\omega_i}\\right)$ and test whether $\\left|\\widehat{T}_1\\left(e^{j\\omega_i}\\right)\\right| < \\epsilon$.\n\nFinal output format:\n\n- Your program should produce a single line of output containing the three boolean results (in the order of $\\omega_1$, $\\omega_2$, $\\omega_3$) as a comma-separated list enclosed in square brackets. For example, an acceptable format is $[\\text{True},\\text{False},\\text{True}]$.\n- No other output should be produced.", "solution": "The problem posed is to validate the aliasing cancellation property of a specific two-channel conjugate quadrature filter (CQF) bank, namely the Haar filter bank, implemented via a two-stage lifting scheme. This task is scientifically sound, well-posed, and grounded in the fundamental principles of multirate signal processing. The provided parameters and methodology are complete and consistent. We shall proceed with a formal solution.\n\nThe core of the problem lies in the analysis-synthesis structure of a critically sampled two-channel filter bank. The lifting scheme offers an efficient implementation of such a filter bank by operating on the polyphase components of the input signal.\n\nFirst, we formalize the lifting operations. Let the input signal be $x[n]$. Its polyphase representation consists of the even-indexed component $s_0[k] = x[2k]$ and the odd-indexed component $d_0[k] = x[2k+1]$.\n\nThe analysis stage, which transforms the polyphase components $(s_0, d_0)$ into the subband components $(s_1, d_1)$, is described by a sequence of predict and update steps.\n1.  **Predict Step**: A prediction of the odd component $d_0[k]$ is formed from the even component $s_0[k]$. The prediction error constitutes the high-pass subband signal $d_1[k]$. Using the given predictor coefficient $p=1$, this operation is:\n    $$\n    d_1[k] = d_0[k] - p \\cdot s_0[k] = d_0[k] - s_0[k]\n    $$\n2.  **Update Step**: The even component $s_0[k]$ is updated using the newly computed high-pass signal $d_1[k]$ to generate the low-pass subband signal $s_1[k]$. This step is designed to preserve certain signal properties, like the local mean, in the low-pass channel. With the updater coefficient $u = \\frac{1}{2}$, we have:\n    $$\n    s_1[k] = s_0[k] + u \\cdot d_1[k] = s_0[k] + \\frac{1}{2} d_1[k]\n    $$\nThe problem specifies a unity scaling factor, $\\kappa=1$, so no further operation is needed on $s_1[k]$ and $d_1[k]$.\n\nThe synthesis stage reverses these operations to perfectly reconstruct the original signal.\n1.  **Inverse Update**: The original even component $s_0[k]$ is recovered from the subband signals $(s_1, d_1)$:\n    $$\n    s_{0}^{\\text{rec}}[k] = s_1[k] - u \\cdot d_1[k] = s_1[k] - \\frac{1}{2} d_1[k]\n    $$\n    Verification shows this step is truly inverse: $(s_0[k] + \\frac{1}{2} d_1[k]) - \\frac{1}{2} d_1[k] = s_0[k]$.\n2.  **Inverse Predict**: The original odd component $d_0[k]$ is recovered using the high-pass signal $d_1[k]$ and the recovered even component $s_{0}^{\\text{rec}}[k]$:\n    $$\n    d_{0}^{\\text{rec}}[k] = d_1[k] + p \\cdot s_{0}^{\\text{rec}}[k] = d_1[k] + s_{0}^{\\text{rec}}[k]\n    $$\n    Verification confirms this: $(d_0[k] - s_0[k]) + s_0[k] = d_0[k]$.\n\nThe reconstructed signal, $y[n]$, is formed by interleaving the recovered polyphase components: $y[2k] = s_{0}^{\\text{rec}}[k]$ and $y[2k+1] = d_{0}^{\\text{rec}}[k]$. Since all steps are perfectly invertible, we expect $y[n] = x[n]$ in the absence of numerical errors.\n\nThe problem requires us to verify that the alias transfer function, $T_1(e^{j\\omega})$, is zero. For a sinusoidal input $x[n] = e^{j\\omega n}$, the output of a general two-channel system is given as:\n$$\ny[n] = \\frac{1}{2}\\left(T_0\\left(e^{j\\omega}\\right) e^{j\\omega n} + T_1\\left(e^{j\\omega}\\right) (-1)^n e^{j\\omega n}\\right)\n$$\nTo estimate $T_1(e^{j\\omega})$, we use the provided estimator, derived from the orthogonality of complex exponentials over an even-length interval $N$:\n$$\n\\widehat{T}_1(e^{j\\omega}) = \\frac{2}{N} \\sum_{n=0}^{N-1} y[n] e^{-j\\omega n} (-1)^n\n$$\nThe aliasing cancellation is numerically verified if $|\\widehat{T}_1(e^{j\\omega})| < \\epsilon$ for a small tolerance $\\epsilon = 10^{-10}$.\n\nThe procedure for each test frequency $\\omega_i$ is as follows:\n1.  Generate the complex sinusoidal input signal vector $x$ of length $N=4096$, where $x[n] = e^{j\\omega_i n}$.\n2.  Perform the analysis stage by splitting $x$ into even and odd parts, then applying the predict and update steps with $p=1$ and $u=0.5$.\n3.  Perform the synthesis stage by applying the inverse update and inverse predict steps, then interleaving the results to obtain the output signal $y$.\n4.  Compute the estimate $\\widehat{T}_1(e^{j\\omega_i})$ using the signal $y$ and the formula provided.\n5.  Compare the absolute value of the estimate against the tolerance $\\epsilon$ to determine the boolean outcome.\n\nThis entire process will be implemented for the three specified angular frequencies: $\\omega_1 = 0$, $\\omega_2 = \\frac{\\pi}{2}$, and $\\omega_3 = \\pi - 10^{-2}$. The theoretical expectation is that aliasing is cancelled perfectly, so any computed value for $\\widehat{T}_1$ will be solely due to floating-point arithmetic errors and should be well below the tolerance.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements a two-channel CQF bank via a two-stage lifting scheme\n    to verify numerical aliasing cancellation.\n    \"\"\"\n    \n    # Define problem parameters\n    N = 4096  # Signal length (must be even)\n    p = 1.0   # Predictor coefficient\n    u = 0.5   # Updater coefficient\n    epsilon = 1e-10  # Numerical tolerance for aliasing cancellation\n\n    # Define the test suite of angular frequencies in radians\n    test_omegas = [\n        0.0,\n        np.pi / 2.0,\n        np.pi - 1e-2\n    ]\n\n    results = []\n\n    for omega in test_omegas:\n        # 1. Generate the complex sinusoidal input signal\n        n = np.arange(N)\n        x = np.exp(1j * omega * n)\n\n        # 2. Analysis stage (Lifting)\n        # Even-odd split (polyphase decomposition)\n        s0 = x[0::2]\n        d0 = x[1::2]\n\n        # Predict step\n        d1 = d0 - p * s0\n        \n        # Update step\n        s1 = s0 + u * d1\n\n        # The subband signals are s1 (low-pass) and d1 (high-pass).\n\n        # 3. Synthesis stage (Inverse Lifting)\n        # Inverse update step\n        s0_rec = s1 - u * d1\n        \n        # Inverse predict step\n        d0_rec = d1 + p * s0_rec\n\n        # Interleave to reconstruct the output signal\n        y = np.empty_like(x, dtype=np.complex128)\n        y[0::2] = s0_rec\n        y[1::2] = d0_rec\n        \n        # 4. Estimate the alias transfer function T1(e^jω)\n        # The estimator is T1_hat = 2 * c1(ω), where\n        # c1(ω) = (1/N) * sum_{n=0}^{N-1} y[n] * e^{-jωn} * (-1)^n\n        \n        # Create the modulation term (-1)^n\n        mod_signal = np.power(-1.0, n)\n        \n        # Create the analysis sinusoid e^{-jωn}\n        analysis_signal = np.exp(-1j * omega * n) # or np.conj(x)\n        \n        # Compute c1(ω)\n        c1 = (1.0 / N) * np.sum(y * analysis_signal * mod_signal)\n        \n        # Compute the estimate of T1\n        T1_est = 2.0 * c1\n        \n        # 5. Verify aliasing cancellation\n        # Check if the magnitude of the estimated alias transfer function\n        # is below the specified tolerance.\n        is_cancelled = np.abs(T1_est) < epsilon\n        results.append(is_cancelled)\n\n    # Format the final output as a comma-separated list of booleans\n    # enclosed in square brackets.\n    output_str = f\"[{','.join(map(str, results))}]\"\n    print(output_str.replace(\"True\", \"True\").replace(\"False\", \"False\"))\n\nsolve()\n```"}]}