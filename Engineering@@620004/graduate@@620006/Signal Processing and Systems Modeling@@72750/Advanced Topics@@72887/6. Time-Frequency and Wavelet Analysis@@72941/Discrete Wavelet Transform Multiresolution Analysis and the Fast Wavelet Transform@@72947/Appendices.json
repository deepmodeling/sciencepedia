{"hands_on_practices": [{"introduction": "The theoretical elegance of Multiresolution Analysis is realized in practice through the Fast Wavelet Transform (FWT), which is structured as a multi-stage filter bank. To build a solid intuition for this process, we will begin with a foundational, by-the-numbers exercise using the simplest wavelet system: the Haar basis. This practice will guide you through the manual computation of a multi-level decomposition and, crucially, the subsequent reconstruction, allowing you to verify the perfect reconstruction property firsthand. [@problem_id:2866836]", "problem": "Consider the Discrete Wavelet Transform (DWT) implemented as a critically sampled two-channel filter bank using the orthonormal Haar system. The orthonormal Haar analysis filters are the low-pass scaling filter $h[0]=\\frac{1}{\\sqrt{2}}$, $h[1]=\\frac{1}{\\sqrt{2}}$ and the high-pass wavelet filter $g[0]=\\frac{1}{\\sqrt{2}}$, $g[1]=-\\frac{1}{\\sqrt{2}}$. Use the standard critically sampled tree with decimation by $2$ at each level and no boundary extension (i.e., pairwise blocking valid for lengths divisible by $2^{L}$), and the corresponding orthonormal synthesis filters to invert. Let the input sequence be $x[n]=[3,1,0,4,8,6,2,0]$, indexed for $n=0,1,\\dots,7$.\n\nTasks:\n- Compute by hand the $3$-level Haar DWT of $x[n]$ to obtain the approximation coefficients at level $3$ and the detail coefficients at levels $1,2,3$.\n- Reconstruct $\\hat{x}[n]$ from these coefficients using the inverse two-channel orthonormal Haar filter bank.\n- Define the scalar error energy\n$$E=\\sum_{n=0}^{7}\\left|x[n]-\\hat{x}[n]\\right|^{2}.$$\nReport the value of $E$.\n\nProvide the exact value of $E$ (no rounding). No units are required. Define all acronyms on first use: Discrete Wavelet Transform (DWT), Fast Wavelet Transform (FWT), Perfect Reconstruction (PR).", "solution": "The problem requires the computation of the reconstruction error energy for a signal processed by a $3$-level Discrete Wavelet Transform (DWT) and its inverse, using the orthonormal Haar wavelet basis. A critically sampled two-channel filter bank is specified, which is the standard structure for the Fast Wavelet Transform (FWT). The key property being tested is that of Perfect Reconstruction (PR), which is a fundamental characteristic of orthonormal filter banks in the absence of any information loss, such as quantization. We will proceed by explicitly calculating the forward and inverse transforms and then the error energy.\n\nThe input signal is $x[n] = [3, 1, 0, 4, 8, 6, 2, 0]$ for $n \\in \\{0, 1, \\dots, 7\\}$. The length is $N=8$.\nThe orthonormal Haar analysis filters are the low-pass scaling filter $h[n]$ and the high-pass wavelet filter $g[n]$:\n$$h[n] = \\frac{1}{\\sqrt{2}}\\delta[n] + \\frac{1}{\\sqrt{2}}\\delta[n-1]$$\n$$g[n] = \\frac{1}{\\sqrt{2}}\\delta[n] - \\frac{1}{\\sqrt{2}}\\delta[n-1]$$\nThe DWT is implemented by convolving the signal with these filters and then decimating by a factor of $2$. For the Haar system, this simplifies to pairwise averaging and differencing. We denote the approximation coefficients at level $j$ as $c_j$ and the detail coefficients as $d_j$. The input signal is $c_0[n] = x[n]$.\n\n**Part 1: Forward DWT (Analysis)**\n\n**Level 1 Decomposition:**\nThe input is $c_0 = [3, 1, 0, 4, 8, 6, 2, 0]$. We process pairs of samples.\nThe approximation coefficients $c_1[k]$ are computed as:\n$c_1[0] = \\frac{c_0[0] + c_0[1]}{\\sqrt{2}} = \\frac{3+1}{\\sqrt{2}} = \\frac{4}{\\sqrt{2}} = 2\\sqrt{2}$\n$c_1[1] = \\frac{c_0[2] + c_0[3]}{\\sqrt{2}} = \\frac{0+4}{\\sqrt{2}} = \\frac{4}{\\sqrt{2}} = 2\\sqrt{2}$\n$c_1[2] = \\frac{c_0[4] + c_0[5]}{\\sqrt{2}} = \\frac{8+6}{\\sqrt{2}} = \\frac{14}{\\sqrt{2}} = 7\\sqrt{2}$\n$c_1[3] = \\frac{c_0[6] + c_0[7]}{\\sqrt{2}} = \\frac{2+0}{\\sqrt{2}} = \\frac{2}{\\sqrt{2}} = \\sqrt{2}$\nSo, $c_1 = [2\\sqrt{2}, 2\\sqrt{2}, 7\\sqrt{2}, \\sqrt{2}]$.\n\nThe detail coefficients $d_1[k]$ are computed as:\n$d_1[0] = \\frac{c_0[0] - c_0[1]}{\\sqrt{2}} = \\frac{3-1}{\\sqrt{2}} = \\frac{2}{\\sqrt{2}} = \\sqrt{2}$\n$d_1[1] = \\frac{c_0[2] - c_0[3]}{\\sqrt{2}} = \\frac{0-4}{\\sqrt{2}} = -\\frac{4}{\\sqrt{2}} = -2\\sqrt{2}$\n$d_1[2] = \\frac{c_0[4] - c_0[5]}{\\sqrt{2}} = \\frac{8-6}{\\sqrt{2}} = \\frac{2}{\\sqrt{2}} = \\sqrt{2}$\n$d_1[3] = \\frac{c_0[6] - c_0[7]}{\\sqrt{2}} = \\frac{2-0}{\\sqrt{2}} = \\frac{2}{\\sqrt{2}} = \\sqrt{2}$\nSo, $d_1 = [\\sqrt{2}, -2\\sqrt{2}, \\sqrt{2}, \\sqrt{2}]$.\n\n**Level 2 Decomposition:**\nThe input is the approximation from the previous level, $c_1 = [2\\sqrt{2}, 2\\sqrt{2}, 7\\sqrt{2}, \\sqrt{2}]$.\n$c_2[0] = \\frac{c_1[0] + c_1[1]}{\\sqrt{2}} = \\frac{2\\sqrt{2} + 2\\sqrt{2}}{\\sqrt{2}} = \\frac{4\\sqrt{2}}{\\sqrt{2}} = 4$\n$c_2[1] = \\frac{c_1[2] + c_1[3]}{\\sqrt{2}} = \\frac{7\\sqrt{2} + \\sqrt{2}}{\\sqrt{2}} = \\frac{8\\sqrt{2}}{\\sqrt{2}} = 8$\nSo, $c_2 = [4, 8]$.\n\n$d_2[0] = \\frac{c_1[0] - c_1[1]}{\\sqrt{2}} = \\frac{2\\sqrt{2} - 2\\sqrt{2}}{\\sqrt{2}} = 0$\n$d_2[1] = \\frac{c_1[2] - c_1[3]}{\\sqrt{2}} = \\frac{7\\sqrt{2} - \\sqrt{2}}{\\sqrt{2}} = \\frac{6\\sqrt{2}}{\\sqrt{2}} = 6$\nSo, $d_2 = [0, 6]$.\n\n**Level 3 Decomposition:**\nThe input is $c_2 = [4, 8]$.\n$c_3[0] = \\frac{c_2[0] + c_2[1]}{\\sqrt{2}} = \\frac{4+8}{\\sqrt{2}} = \\frac{12}{\\sqrt{2}} = 6\\sqrt{2}$\nSo, $c_3 = [6\\sqrt{2}]$.\n\n$d_3[0] = \\frac{c_2[0] - c_2[1]}{\\sqrt{2}} = \\frac{4-8}{\\sqrt{2}} = -\\frac{4}{\\sqrt{2}} = -2\\sqrt{2}$\nSo, $d_3 = [-2\\sqrt{2}]$.\n\nThe $3$-level DWT of $x[n]$ consists of $\\{c_3, d_3, d_2, d_1\\}$.\n\n**Part 2: Inverse DWT (Synthesis)**\n\nThe inverse transform reconstructs the signal level by level. For an orthonormal filter bank, the synthesis operation is the adjoint of the analysis operation. For the Haar basis, this leads to the simple reconstruction formulas:\n$c_{j-1}[2k] = \\frac{c_j[k] + d_j[k]}{\\sqrt{2}}$\n$c_{j-1}[2k+1] = \\frac{c_j[k] - d_j[k]}{\\sqrt{2}}$\nWe denote the reconstructed approximation coefficients as $\\hat{c}_j$.\n\n**Level 3 to Level 2 Synthesis:**\nWe reconstruct $\\hat{c}_2$ from $c_3=[6\\sqrt{2}]$ and $d_3=[-2\\sqrt{2}]$.\n$\\hat{c}_2[0] = \\frac{c_3[0] + d_3[0]}{\\sqrt{2}} = \\frac{6\\sqrt{2} + (-2\\sqrt{2})}{\\sqrt{2}} = \\frac{4\\sqrt{2}}{\\sqrt{2}} = 4$\n$\\hat{c}_2[1] = \\frac{c_3[0] - d_3[0]}{\\sqrt{2}} = \\frac{6\\sqrt{2} - (-2\\sqrt{2})}{\\sqrt{2}} = \\frac{8\\sqrt{2}}{\\sqrt{2}} = 8$\nSo, $\\hat{c}_2 = [4, 8]$, which is identical to the original $c_2$.\n\n**Level 2 to Level 1 Synthesis:**\nWe reconstruct $\\hat{c}_1$ from $\\hat{c}_2=[4, 8]$ and $d_2=[0, 6]$.\nFor $k=0$:\n$\\hat{c}_1[0] = \\frac{\\hat{c}_2[0] + d_2[0]}{\\sqrt{2}} = \\frac{4+0}{\\sqrt{2}} = \\frac{4}{\\sqrt{2}} = 2\\sqrt{2}$\n$\\hat{c}_1[1] = \\frac{\\hat{c}_2[0] - d_2[0]}{\\sqrt{2}} = \\frac{4-0}{\\sqrt{2}} = \\frac{4}{\\sqrt{2}} = 2\\sqrt{2}$\nFor $k=1$:\n$\\hat{c}_1[2] = \\frac{\\hat{c}_2[1] + d_2[1]}{\\sqrt{2}} = \\frac{8+6}{\\sqrt{2}} = \\frac{14}{\\sqrt{2}} = 7\\sqrt{2}$\n$\\hat{c}_1[3] = \\frac{\\hat{c}_2[1] - d_2[1]}{\\sqrt{2}} = \\frac{8-6}{\\sqrt{2}} = \\frac{2}{\\sqrt{2}} = \\sqrt{2}$\nSo, $\\hat{c}_1 = [2\\sqrt{2}, 2\\sqrt{2}, 7\\sqrt{2}, \\sqrt{2}]$, identical to the original $c_1$.\n\n**Level 1 to Level 0 Synthesis:**\nWe reconstruct the final signal $\\hat{x}[n] = \\hat{c}_0[n]$ from $\\hat{c}_1$ and $d_1=[\\sqrt{2}, -2\\sqrt{2}, \\sqrt{2}, \\sqrt{2}]$.\nFor $k=0$:\n$\\hat{x}[0] = \\frac{\\hat{c}_1[0] + d_1[0]}{\\sqrt{2}} = \\frac{2\\sqrt{2} + \\sqrt{2}}{\\sqrt{2}} = \\frac{3\\sqrt{2}}{\\sqrt{2}} = 3$\n$\\hat{x}[1] = \\frac{\\hat{c}_1[0] - d_1[0]}{\\sqrt{2}} = \\frac{2\\sqrt{2} - \\sqrt{2}}{\\sqrt{2}} = \\frac{\\sqrt{2}}{\\sqrt{2}} = 1$\nFor $k=1$:\n$\\hat{x}[2] = \\frac{\\hat{c}_1[1] + d_1[1]}{\\sqrt{2}} = \\frac{2\\sqrt{2} + (-2\\sqrt{2})}{\\sqrt{2}} = 0$\n$\\hat{x}[3] = \\frac{\\hat{c}_1[1] - d_1[1]}{\\sqrt{2}} = \\frac{2\\sqrt{2} - (-2\\sqrt{2})}{\\sqrt{2}} = \\frac{4\\sqrt{2}}{\\sqrt{2}} = 4$\nFor $k=2$:\n$\\hat{x}[4] = \\frac{\\hat{c}_1[2] + d_1[2]}{\\sqrt{2}} = \\frac{7\\sqrt{2} + \\sqrt{2}}{\\sqrt{2}} = \\frac{8\\sqrt{2}}{\\sqrt{2}} = 8$\n$\\hat{x}[5] = \\frac{\\hat{c}_1[2] - d_1[2]}{\\sqrt{2}} = \\frac{7\\sqrt{2} - \\sqrt{2}}{\\sqrt{2}} = \\frac{6\\sqrt{2}}{\\sqrt{2}} = 6$\nFor $k=3$:\n$\\hat{x}[6] = \\frac{\\hat{c}_1[3] + d_1[3]}{\\sqrt{2}} = \\frac{\\sqrt{2} + \\sqrt{2}}{\\sqrt{2}} = \\frac{2\\sqrt{2}}{\\sqrt{2}} = 2$\n$\\hat{x}[7] = \\frac{\\hat{c}_1[3] - d_1[3]}{\\sqrt{2}} = \\frac{\\sqrt{2} - \\sqrt{2}}{\\sqrt{2}} = 0$\nThe reconstructed signal is $\\hat{x}[n]=[3, 1, 0, 4, 8, 6, 2, 0]$.\n\n**Part 3: Error Energy Calculation**\nThe original signal is $x[n]=[3, 1, 0, 4, 8, 6, 2, 0]$.\nThe reconstructed signal is $\\hat{x}[n]=[3, 1, 0, 4, 8, 6, 2, 0]$.\nClearly, $\\hat{x}[n] = x[n]$ for all $n \\in \\{0, 1, \\dots, 7\\}$.\nThe error signal is $e[n] = x[n] - \\hat{x}[n] = [0, 0, 0, 0, 0, 0, 0, 0]$.\nThe scalar error energy $E$ is defined as:\n$$E = \\sum_{n=0}^{7} |x[n] - \\hat{x}[n]|^2 = \\sum_{n=0}^{7} |e[n]|^2$$\nSubstituting the error signal:\n$$E = \\sum_{n=0}^{7} |0|^2 = 0$$\nThe result $E=0$ is expected. The problem setup describes an orthonormal filter bank with no modifications to the coefficients (e.g., quantization, thresholding) between the analysis and synthesis stages. Such systems possess the Perfect Reconstruction property, meaning the output is identical to the input, and thus the reconstruction error is zero. The calculation confirms this fundamental principle.", "answer": "$$\\boxed{0}$$", "id": "2866836"}, {"introduction": "While the theory of the DWT is often developed for infinitely long signals, all practical applications involve signals of finite length. This introduces the non-trivial problem of how to handle the signal's boundaries during filtering operations. This hands-on exercise directly confronts this challenge by comparing the effects of two common boundary extension methods, demonstrating how these implementation choices impact the resulting wavelet coefficients. [@problem_id:2866820]", "problem": "Consider a finite-length discrete-time signal $x[n]$ of length $N=10$ defined by $x[n]=n$ for $n\\in\\{0,1,\\dots,9\\}$. The first-level analysis stage of the Discrete Wavelet Transform (DWT), implemented via the Fast Wavelet Transform (FWT) within the framework of Multiresolution Analysis (MRA), uses analysis low-pass and high-pass finite impulse response filters followed by downsampling by a factor of $2$. Let the analysis low-pass filter be the Daubechies wavelet with four vanishing moments (db4), which has length $L=8$ and tap values (low-pass analysis filter) \n$$\nh[0]=-0.010597401785069032,\\quad h[1]=0.0328830116668852,\\quad h[2]=0.030841381835560763,\\quad h[3]=-0.18703481171888114,\n$$\n$$\nh[4]=-0.027983769416859854,\\quad h[5]=0.6308807679298587,\\quad h[6]=0.7148465705529154,\\quad h[7]=0.23037781330885523.\n$$\nThe corresponding high-pass analysis filter is defined by the quadrature mirror relation $g[n]=(-1)^{n}h[L-1-n]$, but you will not need $g[n]$ in this task.\n\nDefine the level-$1$ approximation (low-pass) coefficients $\\{a_{1}[k]\\}$ by the downsampled correlation\n$$\na_{1}[k]=\\sum_{n=0}^{L-1}h[n]\\;x_{\\mathrm{ext}}[\\,2k+n\\,],\n$$\nwhere $x_{\\mathrm{ext}}[\\cdot]$ is an extension of $x[\\cdot]$ outside its support according to a specified boundary rule. Let the output indices be $k\\in\\{0,1,2,3,4\\}$.\n\nTwo boundary extension rules are to be compared:\n- Zero extension: $x_{\\mathrm{Z}}[n]=x[n]$ for $0\\leq n\\leq N-1$ and $x_{\\mathrm{Z}}[n]=0$ otherwise.\n- Symmetric extension about the end samples (with edge reflection): for all integers $r\\geq 1$, define $x_{\\mathrm{S}}[-r]=x[r-1]$ and $x_{\\mathrm{S}}[N-1+r]=x[N-1-r]$.\n\nStarting only from the core definitions above and the given data, derive the formula for the difference between the last approximation coefficient under symmetric extension and under zero extension, namely\n$$\n\\Delta \\triangleq a_{1,\\mathrm{S}}[4]-a_{1,\\mathrm{Z}}[4],\n$$\nand evaluate it numerically. Round your final answer to eight significant figures. No units are required.", "solution": "The objective is to calculate the difference $\\Delta \\triangleq a_{1,\\mathrm{S}}[4] - a_{1,\\mathrm{Z}}[4]$, where $a_{1,\\mathrm{S}}[k]$ and $a_{1,\\mathrm{Z}}[k]$ are the level-$1$ approximation coefficients computed using symmetric and zero boundary extension, respectively.\n\nThe definition for the approximation coefficients is given by:\n$$a_{1}[k] = \\sum_{n=0}^{L-1} h[n] x_{\\mathrm{ext}}[2k+n]$$\nFor the specific coefficient index $k=4$ and filter length $L=8$, the expressions are:\n$$a_{1,\\mathrm{S}}[4] = \\sum_{n=0}^{7} h[n] x_{\\mathrm{S}}[8+n]$$\n$$a_{1,\\mathrm{Z}}[4] = \\sum_{n=0}^{7} h[n] x_{\\mathrm{Z}}[8+n]$$\nThe difference is therefore:\n$$\\Delta = a_{1,\\mathrm{S}}[4] - a_{1,\\mathrm{Z}}[4] = \\sum_{n=0}^{7} h[n] \\left( x_{\\mathrm{S}}[8+n] - x_{\\mathrm{Z}}[8+n] \\right)$$\nTo evaluate this expression, we must first determine the values of the extended signals $x_{\\mathrm{S}}[m]$ and $x_{\\mathrm{Z}}[m]$ for the required index range $m = 8+n$, where $n \\in \\{0, \\dots, 7\\}$. This corresponds to indices $m \\in \\{8, 9, \\dots, 15\\}$.\n\nThe original signal is $x[n]=n$ for $n \\in \\{0, 1, \\dots, 9\\}$, with length $N=10$.\n\nFirst, consider the zero extension rule, $x_{\\mathrm{Z}}[n]$. For indices within the original signal's support, $x_{\\mathrm{Z}}[n] = x[n]$. For indices outside this support, $x_{\\mathrm{Z}}[n] = 0$.\n- $x_{\\mathrm{Z}}[8] = x[8] = 8$\n- $x_{\\mathrm{Z}}[9] = x[9] = 9$\n- $x_{\\mathrm{Z}}[10] = 0$\n- $x_{\\mathrm{Z}}[11] = 0$\n- $x_{\\mathrm{Z}}[12] = 0$\n- $x_{\\mathrm{Z}}[13] = 0$\n- $x_{\\mathrm{Z}}[14] = 0$\n- $x_{\\mathrm{Z}}[15] = 0$\n\nNext, consider the symmetric extension rule, $x_{\\mathrm{S}}[n]$. The problem provides the formula for extending beyond the right boundary ($n > N-1$) as $x_{\\mathrm{S}}[N-1+r] = x[N-1-r]$ for $r \\geq 1$. With $N=10$, we have $N-1=9$.\n- $x_{\\mathrm{S}}[8] = x[8] = 8$ (index is within support)\n- $x_{\\mathrm{S}}[9] = x[9] = 9$ (index is within support)\n- For $m=10$, we have $10=9+1$, so $r=1$. $x_{\\mathrm{S}}[10] = x[9-1] = x[8] = 8$.\n- For $m=11$, we have $11=9+2$, so $r=2$. $x_{\\mathrm{S}}[11] = x[9-2] = x[7] = 7$.\n- For $m=12$, we have $12=9+3$, so $r=3$. $x_{\\mathrm{S}}[12] = x[9-3] = x[6] = 6$.\n- For $m=13$, we have $13=9+4$, so $r=4$. $x_{\\mathrm{S}}[13] = x[9-4] = x[5] = 5$.\n- For $m=14$, we have $14=9+5$, so $r=5$. $x_{\\mathrm{S}}[14] = x[9-5] = x[4] = 4$.\n- For $m=15$, we have $15=9+6$, so $r=6$. $x_{\\mathrm{S}}[15] = x[9-6] = x[3] = 3$.\n\nNow we can compute the differences $(x_{\\mathrm{S}}[8+n] - x_{\\mathrm{Z}}[8+n])$ for $n=0, \\dots, 7$:\n- $n=0$: $x_{\\mathrm{S}}[8] - x_{\\mathrm{Z}}[8] = 8 - 8 = 0$\n- $n=1$: $x_{\\mathrm{S}}[9] - x_{\\mathrm{Z}}[9] = 9 - 9 = 0$\n- $n=2$: $x_{\\mathrm{S}}[10] - x_{\\mathrm{Z}}[10] = 8 - 0 = 8$\n- $n=3$: $x_{\\mathrm{S}}[11] - x_{\\mathrm{Z}}[11] = 7 - 0 = 7$\n- $n=4$: $x_{\\mathrm{S}}[12] - x_{\\mathrm{Z}}[12] = 6 - 0 = 6$\n- $n=5$: $x_{\\mathrm{S}}[13] - x_{\\mathrm{Z}}[13] = 5 - 0 = 5$\n- $n=6$: $x_{\\mathrm{S}}[14] - x_{\\mathrm{Z}}[14] = 4 - 0 = 4$\n- $n=7$: $x_{\\mathrm{S}}[15] - x_{\\mathrm{Z}}[15] = 3 - 0 = 3$\n\nThe summation for $\\Delta$ has non-zero terms only for $n \\in \\{2, 3, 4, 5, 6, 7\\}$:\n$$\\Delta = h[2] \\cdot 8 + h[3] \\cdot 7 + h[4] \\cdot 6 + h[5] \\cdot 5 + h[6] \\cdot 4 + h[7] \\cdot 3$$\nSubstitute the given numerical values for the filter coefficients:\n$$\n\\begin{aligned}\n\\Delta = &(0.030841381835560763 \\times 8) + (-0.18703481171888114 \\times 7) + \\\\\n&(-0.027983769416859854 \\times 6) + (0.6308807679298587 \\times 5) + \\\\\n&(0.7148465705529154 \\times 4) + (0.23037781330885523 \\times 3)\n\\end{aligned}\n$$\nPerforming the arithmetic operations:\n$$\n\\begin{aligned}\n\\Delta = &0.2467310546844861 - 1.3092436820321680 + \\\\\n&-0.1679026165011591 + 3.1544038396492935 + \\\\\n&2.8593862822116616 + 0.6911334399265657\n\\end{aligned}\n$$\nSumming these terms yields:\n$$\\Delta \\approx 5.4745083179386798$$\nThe problem requires the final answer to be rounded to eight significant figures. The first eight significant figures are $5.4745083$. The ninth significant figure is $1$, so we do not round up.\n$$\\Delta \\approx 5.4745083$$", "answer": "$$\\boxed{5.4745083}$$", "id": "2866820"}, {"introduction": "Beyond the classic filter bank implementation, the lifting scheme offers a powerful and computationally efficient framework for the DWT, factorizing the transform into a sequence of simple prediction and update steps. This advanced practice delves into the lifting implementation of the celebrated Cohen-Daubechies-Feauveau (CDF) wavelet, starting from first principles to derive the lifting coefficients. You will then apply these to construct a reversible integer-to-integer transform, a technique fundamental to lossless compression and other modern applications. [@problem_id:2866808]", "problem": "Consider the biorthogonal two-channel perfect-reconstruction filter bank associated with the Cohen-Daubechies-Feauveau (CDF) family, operating on a discrete-time real-valued finite-energy signal $x[n]$. Work in the lifting framework and use the following fundamental bases:\n\n- The polyphase representation of two-channel filter banks and the factorization of any invertible polyphase matrix into a sequence of elementary upper- and lower-triangular lifting steps with determinant equal to $1$.\n- The definition of a vanishing moment for the analysis high-pass: the output of the high-pass branch is identically zero on any input that is a polynomial of degree less than the vanishing-moment order.\n- The perfect-reconstruction condition for lifting factorizations: each elementary lifting step is invertible, so their composition yields a globally invertible transform.\n\nYou are told that the CDF $5/3$ biorthogonal wavelet transform can be realized by a nearest-neighbor predict followed by a nearest-neighbor update lifting step with rational lifting coefficients. Let the polyphase split be the even-odd decomposition $s_{\\mathrm{e}}[i] = x[2i]$ and $s_{\\mathrm{o}}[i] = x[2i+1]$, $i \\in \\mathbb{Z}$. Assume a single predict step\n$$\nd[i] \\leftarrow s_{\\mathrm{o}}[i] + \\alpha\\big(s_{\\mathrm{e}}[i] + s_{\\mathrm{e}}[i+1]\\big),\n$$\nfollowed by a single update step\n$$\ns[i] \\leftarrow s_{\\mathrm{e}}[i] + \\beta\\big(d[i-1] + d[i]\\big),\n$$\nwith unknown rational $\\alpha$ and $\\beta$. Assume half-sample symmetry of the effective analysis filters and minimal finite support consistent with the CDF $5/3$ designation.\n\nTasks:\n\n1) Starting from the above first-principles bases, determine the unique rational pair $\\alpha$ and $\\beta$ that realizes the CDF $5/3$ factorization, under the constraints that the analysis high-pass has at least one vanishing moment, the analysis low-pass is symmetric with $5$ taps, and the analysis high-pass is symmetric with $3$ taps.\n\n2) Using these lifting coefficients, implement one round of the integer-to-integer version of the transform by specifying and applying the rounding required for reversibility. Use symmetric boundary extension at the level of the split sequences $s_{\\mathrm{e}}[i]$ and $s_{\\mathrm{o}}[i]$:\n- In the predict step, when $s_{\\mathrm{e}}[i+1]$ is out of range, replace it by $s_{\\mathrm{e}}[i]$.\n- In the update step, when $d[i-1]$ is out of range, replace it by $d[i]$, and when $d[i]$ is out of range, replace it by $d[i-1]$.\n\nFor the integer-to-integer mapping, use the following rounding operators applied componentwise to integers:\n- In the predict step, realize division by $2$ using the floor of the exact average: for any integers $a$ and $b$,\n$$\n\\left\\lfloor \\frac{a+b}{2} \\right\\rfloor.\n$$\n- In the update step, realize division by $4$ using rounding to nearest implemented as\n$$\n\\left\\lfloor \\frac{u+2}{4} \\right\\rfloor\n$$\nfor any integer $u$.\n\nApply this to the length-$12$ sequence $x[n]$ given by\n$$\nx[0..11] = \\big(7,\\;5,\\;3,\\;9,\\;4,\\;8,\\;10,\\;6,\\;1,\\;0,\\;-2,\\;3\\big).\n$$\n\nReport as your final answer the $12$-tuple obtained by concatenating first all coarse-scale approximation coefficients $s[i]$ in increasing $i$, followed by all detail coefficients $d[i]$ in increasing $i$. Express the final answer as a single row vector. No rounding to significant figures is required since the result is integral. No physical units are involved.", "solution": "**Part 1: Determination of Lifting Coefficients $\\alpha$ and $\\beta$**\n\nWe must first determine the impulse responses of the analysis filters, $h_0[n]$ (low-pass) and $h_1[n]$ (high-pass), from the given lifting steps. The outputs of these filters, after downsampling by a factor of $2$, are the approximation coefficients $s[i]$ and detail coefficients $d[i]$.\n\nThe detail coefficient $d[i]$ is the decimated output of the high-pass filter $h_1[n]$ acting on the input signal $x[n]$. The predict step is given as:\n$$d[i] = s_{\\mathrm{o}}[i] + \\alpha\\big(s_{\\mathrm{e}}[i] + s_{\\mathrm{e}}[i+1]\\big) = x[2i+1] + \\alpha\\big(x[2i] + x[2i+2]\\big)$$\nThis expression represents the output of a filter $h_1[n]$ convolved with $x[n]$ and evaluated at time $n=2i+1$. Let $y_1[n] = (x * h_1)[n] = \\sum_k h_1[k] x[n-k]$. Then $d[i]=y_1[2i+1]$.\n$$d[i] = \\sum_k h_1[k] x[2i+1-k]$$\nBy comparing the two expressions for $d[i]$, we identify the non-zero coefficients of $h_1[k]$:\n- For $k=0$, we have $h_1[0]x[2i+1]$, so $h_1[0]=1$.\n- For $k=1$, we have $h_1[1]x[2i]$, so $h_1[1]=\\alpha$.\n- For $k=-1$, we have $h_1[-1]x[2i+2]$, so $h_1[-1]=\\alpha$.\nThe analysis high-pass filter is thus $h_1[n] = \\alpha \\delta[n+1] + \\delta[n] + \\alpha \\delta[n-1]$. The filter has coefficients $(\\alpha, 1, \\alpha)$ and is a $3$-tap symmetric filter, which satisfies one of the given constraints.\n\nThe $Z$-transform of this filter is $H_1(z) = \\alpha z + 1 + \\alpha z^{-1}$.\nThe constraint that the analysis high-pass filter has at least one vanishing moment means its transfer function must have a zero at $z=1$ (i.e., it annihilates DC signals).\n$$H_1(1) = \\alpha(1) + 1 + \\alpha(1)^{-1} = 2\\alpha + 1 = 0$$\nSolving for $\\alpha$ yields the unique rational value:\n$$\\alpha = -\\frac{1}{2}$$\n\nNext, we determine the analysis low-pass filter $h_0[n]$. The approximation coefficient $s[i]$ is given by the update step:\n$$s[i] = s_{\\mathrm{e}}[i] + \\beta\\big(d[i-1] + d[i]\\big) = x[2i] + \\beta\\big(d[i-1] + d[i]\\big)$$\nSubstitute the expression for $d[i]$ into the equation for $s[i]$:\n$$s[i] = x[2i] + \\beta \\Big( \\big(x[2(i-1)+1] + \\alpha(x[2(i-1)] + x[2(i-1)+2])\\big) + \\big(x[2i+1] + \\alpha(x[2i] + x[2i+2])\\big) \\Big)$$\n$$s[i] = x[2i] + \\beta \\Big( x[2i-1] + \\alpha x[2i-2] + \\alpha x[2i] + x[2i+1] + \\alpha x[2i] + \\alpha x[2i+2] \\Big)$$\nGrouping terms by $x[n]$:\n$$s[i] = \\alpha\\beta x[2i+2] + \\beta x[2i+1] + (1+2\\alpha\\beta)x[2i] + \\beta x[2i-1] + \\alpha\\beta x[2i-2]$$\nThis expression represents the output of a filter $h_0[n]$ convolved with $x[n]$ and evaluated at time $n=2i$. Let $y_0[n] = (x * h_0)[n] = \\sum_k h_0[k] x[n-k]$. Then $s[i]=y_0[2i]$.\n$$s[i] = \\sum_k h_0[k] x[2i-k]$$\nBy comparing the two expressions for $s[i]$, we identify the non-zero coefficients of $h_0[k]$:\n- $k=-2$: $h_0[-2] = \\alpha\\beta$\n- $k=-1$: $h_0[-1] = \\beta$\n- $k=0$: $h_0[0] = 1+2\\alpha\\beta$\n- $k=1$: $h_0[1] = \\beta$\n- $k=2$: $h_0[2] = \\alpha\\beta$\nThe filter $h_0[n]$ has coefficients $(\\alpha\\beta, \\beta, 1+2\\alpha\\beta, \\beta, \\alpha\\beta)$ and is a $5$-tap symmetric filter, which satisfies another of the given constraints.\n\nTo determine $\\beta$, we must invoke an implicit property of low-pass filters in a multiresolution decomposition. A low-pass filter should not only pass low frequencies but also suppress high frequencies. The highest digital frequency corresponds to $z=-1$. Thus, we impose the condition that $H_0(z)$ has a zero at $z=-1$.\nThe $Z$-transform of $h_0[n]$ is $H_0(z) = \\alpha\\beta z^2 + \\beta z + (1+2\\alpha\\beta) + \\beta z^{-1} + \\alpha\\beta z^{-2}$.\nSetting $H_0(-1)=0$:\n$$H_0(-1) = \\alpha\\beta(-1)^2 + \\beta(-1) + (1+2\\alpha\\beta) + \\beta(-1)^{-1} + \\alpha\\beta(-1)^{-2} = 0$$\n$$\\alpha\\beta - \\beta + 1 + 2\\alpha\\beta - \\beta + \\alpha\\beta = 0$$\n$$4\\alpha\\beta - 2\\beta + 1 = 0$$\nSubstitute the value $\\alpha = -1/2$:\n$$4\\left(-\\frac{1}{2}\\right)\\beta - 2\\beta + 1 = 0$$\n$$-2\\beta - 2\\beta + 1 = 0$$\n$$-4\\beta + 1 = 0$$\nSolving for $\\beta$ yields the unique rational value:\n$$\\beta = \\frac{1}{4}$$\nThe unique rational pair is $(\\alpha, \\beta) = (-1/2, 1/4)$.\n\n**Part 2: Application of the Integer-to-Integer Transform**\n\nThe input signal is $x = \\big(7, 5, 3, 9, 4, 8, 10, 6, 1, 0, -2, 3\\big)$. The length is $N=12$.\nFirst, we perform the even-odd split:\n$s_{\\mathrm{e}} = (x[0], x[2], x[4], x[6], x[8], x[10]) = \\big(7, 3, 4, 10, 1, -2\\big)$.\n$s_{\\mathrm{o}} = (x[1], x[3], x[5], x[7], x[9], x[11]) = \\big(5, 9, 8, 6, 0, 3\\big)$.\n\nNext, we apply the lifting steps with the derived coefficients and specified integer arithmetic.\nThe lifting equations become:\nPredict: $d[i] = s_{\\mathrm{o}}[i] - \\left\\lfloor \\frac{s_{\\mathrm{e}}[i] + s_{\\mathrm{e}}[i+1]}{2} \\right\\rfloor$\nUpdate: $s[i] = s_{\\mathrm{e}}[i] + \\left\\lfloor \\frac{d[i-1] + d[i] + 2}{4} \\right\\rfloor$\n\n**Calculation of Detail Coefficients $d[i]$ for $i=0, \\dots, 5$:**\n- $i=0$: $d[0] = s_{\\mathrm{o}}[0] - \\lfloor \\frac{s_{\\mathrm{e}}[0] + s_{\\mathrm{e}}[1]}{2} \\rfloor = 5 - \\lfloor \\frac{7+3}{2} \\rfloor = 5 - 5 = 0$.\n- $i=1$: $d[1] = s_{\\mathrm{o}}[1] - \\lfloor \\frac{s_{\\mathrm{e}}[1] + s_{\\mathrm{e}}[2]}{2} \\rfloor = 9 - \\lfloor \\frac{3+4}{2} \\rfloor = 9 - \\lfloor 3.5 \\rfloor = 9 - 3 = 6$.\n- $i=2$: $d[2] = s_{\\mathrm{o}}[2] - \\lfloor \\frac{s_{\\mathrm{e}}[2] + s_{\\mathrm{e}}[3]}{2} \\rfloor = 8 - \\lfloor \\frac{4+10}{2} \\rfloor = 8 - 7 = 1$.\n- $i=3$: $d[3] = s_{\\mathrm{o}}[3] - \\lfloor \\frac{s_{\\mathrm{e}}[3] + s_{\\mathrm{e}}[4]}{2} \\rfloor = 6 - \\lfloor \\frac{10+1}{2} \\rfloor = 6 - \\lfloor 5.5 \\rfloor = 6 - 5 = 1$.\n- $i=4$: $d[4] = s_{\\mathrm{o}}[4] - \\lfloor \\frac{s_{\\mathrm{e}}[4] + s_{\\mathrm{e}}[5]}{2} \\rfloor = 0 - \\lfloor \\frac{1+(-2)}{2} \\rfloor = 0 - \\lfloor -0.5 \\rfloor = 0 - (-1) = 1$.\n- $i=5$: Index $i+1=6$ is out of bounds for $s_{\\mathrm{e}}$. Per the boundary rule, $s_{\\mathrm{e}}[6]$ is replaced by $s_{\\mathrm{e}}[5]$.\n$d[5] = s_{\\mathrm{o}}[5] - \\lfloor \\frac{s_{\\mathrm{e}}[5] + s_{\\mathrm{e}}[5]}{2} \\rfloor = 3 - \\lfloor \\frac{-2+(-2)}{2} \\rfloor = 3 - (-2) = 5$.\nThe detail coefficients are $d = \\big(0, 6, 1, 1, 1, 5\\big)$.\n\n**Calculation of Approximation Coefficients $s[i]$ for $i=0, \\dots, 5$:**\n- $i=0$: Index $i-1=-1$ is out of bounds for $d$. Per the boundary rule, $d[-1]$ is replaced by $d[0]$.\n$s[0] = s_{\\mathrm{e}}[0] + \\lfloor \\frac{d[0] + d[0] + 2}{4} \\rfloor = 7 + \\lfloor \\frac{0+0+2}{4} \\rfloor = 7 + \\lfloor 0.5 \\rfloor = 7 + 0 = 7$.\n- $i=1$: $s[1] = s_{\\mathrm{e}}[1] + \\lfloor \\frac{d[0] + d[1] + 2}{4} \\rfloor = 3 + \\lfloor \\frac{0+6+2}{4} \\rfloor = 3 + \\lfloor 2 \\rfloor = 3 + 2 = 5$.\n- $i=2$: $s[2] = s_{\\mathrm{e}}[2] + \\lfloor \\frac{d[1] + d[2] + 2}{4} \\rfloor = 4 + \\lfloor \\frac{6+1+2}{4} \\rfloor = 4 + \\lfloor 2.25 \\rfloor = 4 + 2 = 6$.\n- $i=3$: $s[3] = s_{\\mathrm{e}}[3] + \\lfloor \\frac{d[2] + d[3] + 2}{4} \\rfloor = 10 + \\lfloor \\frac{1+1+2}{4} \\rfloor = 10 + \\lfloor 1 \\rfloor = 10 + 1 = 11$.\n- $i=4$: $s[4] = s_{\\mathrm{e}}[4] + \\lfloor \\frac{d[3] + d[4] + 2}{4} \\rfloor = 1 + \\lfloor \\frac{1+1+2}{4} \\rfloor = 1 + \\lfloor 1 \\rfloor = 1 + 1 = 2$.\n- $i=5$: $s[5] = s_{\\mathrm{e}}[5] + \\lfloor \\frac{d[4] + d[5] + 2}{4} \\rfloor = -2 + \\lfloor \\frac{1+5+2}{4} \\rfloor = -2 + \\lfloor 2 \\rfloor = -2 + 2 = 0$.\nThe approximation coefficients are $s = \\big(7, 5, 6, 11, 2, 0\\big)$.\n\nFinally, the output of the transform is the concatenation of the approximation coefficients $s[i]$ followed by the detail coefficients $d[i]$.\nResult: a $12$-tuple $\\big(s[0..5], d[0..5]\\big)$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n7 & 5 & 6 & 11 & 2 & 0 & 0 & 6 & 1 & 1 & 1 & 5\n\\end{pmatrix}\n}\n$$", "id": "2866808"}]}