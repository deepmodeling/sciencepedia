{"hands_on_practices": [{"introduction": "The foundational property of any material is its electronic structure, which is most concisely captured by the density of states (DOS), $\\rho(E)$. For a Dirac semimetal, the linear energy-momentum dispersion $E \\propto |\\mathbf{k}|$ near the Dirac points leads to a DOS profile strikingly different from that of conventional metals or insulators. This practice [@problem_id:1122786] will guide you through a first-principles calculation to derive this fundamental relationship, revealing why the DOS vanishes quadratically as $E \\to 0$.", "problem": "A three-dimensional (3D) Dirac semimetal is a material where the conduction and valence bands touch at discrete points in the Brillouin zone, known as Dirac points. Near these points, the energy dispersion relation for electrons is linear in momentum, analogous to that of relativistic, massless Dirac fermions.\n\nConsider an idealized model of an intrinsic 3D Dirac semimetal. The low-energy electronic excitations are described by two branches: a conduction band with energy dispersion $E_c(\\mathbf{k}) = +\\hbar v_F |\\mathbf{k}|$ and a valence band with $E_v(\\mathbf{k}) = -\\hbar v_F |\\mathbf{k}|$. Here, $\\mathbf{k}$ is the electron wavevector measured from a Dirac point, $\\hbar$ is the reduced Planck constant, and $v_F$ is the constant Fermi velocity, which is assumed to be isotropic.\n\nThe system possesses a total degeneracy factor $g$ for each band (conduction and valence). This factor accounts for degeneracies such as electron spin and the presence of multiple Dirac points in the material.\n\nCalculate the total low-energy density of states per unit volume, $\\rho(E)$, as a function of energy $E$. Your result should be a single analytical expression valid for both positive and negative energies near the Dirac point ($E=0$).", "solution": "The density of states per unit volume, $\\rho(E)$, is derived for the conduction and valence bands separately, then combined. The energy dispersions are $E_c(\\mathbf{k}) = \\hbar v_F |\\mathbf{k}|$ for the conduction band and $E_v(\\mathbf{k}) = -\\hbar v_F |\\mathbf{k}|$ for the valence band. The degeneracy factor $g$ applies to each band.\n\nThe general formula for the density of states per unit volume for an isotropic band is:\n\n$$\n\\rho(E) = \\frac{g}{(2\\pi)^3} \\int \\delta(E - E(\\mathbf{k}))  d\\mathbf{k}\n$$\n\nUsing spherical coordinates, $d\\mathbf{k} = 4\\pi k^2  dk$, since the dispersion depends only on $|\\mathbf{k}|$.\n\n**For the conduction band ($E > 0$):**\n\n$$\n\\rho_c(E) = \\frac{g}{(2\\pi)^3} \\int_0^\\infty 4\\pi k^2  \\delta(E - \\hbar v_F k)  dk\n$$\n\nChange variables with $\\varepsilon = \\hbar v_F k$, so $k = \\varepsilon / (\\hbar v_F)$, $dk = d\\varepsilon / (\\hbar v_F)$, and $k^2 = \\varepsilon^2 / (\\hbar v_F)^2$:\n\n$$\n\\rho_c(E) = \\frac{g}{(2\\pi)^3} \\cdot 4\\pi \\int_0^\\infty \\frac{\\varepsilon^2}{(\\hbar v_F)^2} \\delta(E - \\varepsilon) \\frac{d\\varepsilon}{\\hbar v_F} = \\frac{g \\cdot 4\\pi}{(2\\pi)^3 (\\hbar v_F)^3} \\int_0^\\infty \\varepsilon^2 \\delta(E - \\varepsilon)  d\\varepsilon\n$$\n\nThe delta function $\\delta(E - \\varepsilon)$ yields $\\varepsilon^2$ evaluated at $\\varepsilon = E$ (for $E > 0$):\n\n$$\n\\int_0^\\infty \\varepsilon^2 \\delta(E - \\varepsilon)  d\\varepsilon = E^2\n$$\n\nThus,\n\n$$\n\\rho_c(E) = \\frac{g \\cdot 4\\pi}{8\\pi^3 (\\hbar v_F)^3} E^2 = \\frac{g}{2\\pi^2} \\frac{E^2}{(\\hbar v_F)^3}\n$$\n\n\n**For the valence band ($E  0$):**\n\n$$\n\\rho_v(E) = \\frac{g}{(2\\pi)^3} \\int_0^\\infty 4\\pi k^2  \\delta(E + \\hbar v_F k)  dk\n$$\n\nWith $\\varepsilon = \\hbar v_F k$, so $k = \\varepsilon / (\\hbar v_F)$, $dk = d\\varepsilon / (\\hbar v_F)$, and $k^2 = \\varepsilon^2 / (\\hbar v_F)^2$:\n\n$$\n\\rho_v(E) = \\frac{g}{(2\\pi)^3} \\cdot 4\\pi \\int_0^\\infty \\frac{\\varepsilon^2}{(\\hbar v_F)^2} \\delta(E + \\varepsilon) \\frac{d\\varepsilon}{\\hbar v_F} = \\frac{g \\cdot 4\\pi}{(2\\pi)^3 (\\hbar v_F)^3} \\int_0^\\infty \\varepsilon^2 \\delta(E + \\varepsilon)  d\\varepsilon\n$$\n\nFor $E  0$, $\\delta(E + \\varepsilon) = \\delta(\\varepsilon - |E|)$ since $E = -|E|$:\n\n$$\n\\int_0^\\infty \\varepsilon^2 \\delta(\\varepsilon - |E|)  d\\varepsilon = |E|^2 = E^2 \\quad (\\text{as } E^2 = (-|E|)^2 = |E|^2)\n$$\n\nThus,\n\n$$\n\\rho_v(E) = \\frac{g \\cdot 4\\pi}{8\\pi^3 (\\hbar v_F)^3} E^2 = \\frac{g}{2\\pi^2} \\frac{E^2}{(\\hbar v_F)^3}\n$$\n\n\n**Total density of states:**\nFor $E > 0$, only the conduction band contributes: $\\rho(E) = \\rho_c(E)$.  \nFor $E  0$, only the valence band contributes: $\\rho(E) = \\rho_v(E)$.  \nBoth expressions are identical: $\\rho_c(E) = \\rho_v(E) = \\frac{g}{2\\pi^2} \\frac{E^2}{(\\hbar v_F)^3}$.  \nAt $E = 0$, $\\rho(0) = 0$, consistent with the expression.  \nTherefore, for all $E$ (positive or negative),\n\n$$\n\\rho(E) = \\frac{g}{2\\pi^2} \\frac{E^2}{(\\hbar v_F)^3}\n$$", "answer": "$$ \\boxed{\\dfrac{g E^{2}}{2\\pi^{2} (\\hbar v_{F})^{3}}} $$", "id": "1122786"}, {"introduction": "Moving beyond the basic band structure, the defining feature of a Weyl semimetal is the topological nature of its Weyl nodes. Each node acts as a source or sink of Berry curvature in momentum space and carries a quantized topological charge known as chirality, $\\chi = \\pm 1$. This exercise [@problem_id:3024295] demystifies this abstract concept by asking you to derive and apply a powerful tool: a method to calculate the chirality directly from the linearized Hamiltonian near a Weyl node. This provides a concrete link between the system's electronic properties and its underlying topology.", "problem": "Consider a generic two-band Weyl Hamiltonian of the form $H(\\boldsymbol{k})=\\boldsymbol{d}(\\boldsymbol{k})\\cdot\\boldsymbol{\\sigma}$, where $\\boldsymbol{\\sigma}=(\\sigma_{x},\\sigma_{y},\\sigma_{z})$ are the Pauli matrices and $\\boldsymbol{d}(\\boldsymbol{k})\\in\\mathbb{R}^{3}$. A Weyl node occurs at a point $\\boldsymbol{k}_{0}$ where $\\boldsymbol{d}(\\boldsymbol{k}_{0})=\\boldsymbol{0}$ and the band dispersion is linear, so that near $\\boldsymbol{k}_{0}$ one may write $\\boldsymbol{d}(\\boldsymbol{k}_{0}+\\boldsymbol{q})\\approx V\\,\\boldsymbol{q}$ with an invertible real $3\\times 3$ matrix $V$ and small $\\boldsymbol{q}=\\boldsymbol{k}-\\boldsymbol{k}_{0}$. Define the chirality $\\chi$ of the Weyl node to be the topological charge (Chern number) of the positive-energy band over a small sphere $S$ in $\\boldsymbol{k}$-space enclosing $\\boldsymbol{k}_{0}$:\n$$\n\\chi=\\frac{1}{2\\pi}\\oint_{S}\\boldsymbol{\\Omega}_{+}(\\boldsymbol{k})\\cdot d\\boldsymbol{S},\n$$\nwhere $\\boldsymbol{\\Omega}_{+}(\\boldsymbol{k})$ is the Berry curvature of the positive-energy band, and the surface orientation is the outward normal of $S$.\n\nStarting only from this definition, the linearization $\\boldsymbol{d}(\\boldsymbol{k}_{0}+\\boldsymbol{q})\\approx V\\,\\boldsymbol{q}$, and the standard expression for the Berry curvature of a two-level system in terms of the unit vector $\\hat{\\boldsymbol{d}}=\\boldsymbol{d}/|\\boldsymbol{d}|$, derive an expression for $\\chi$ in terms of the orientation of the linear map $V$ at the node. Then apply your result to the following two Hamiltonians, each with a single Weyl node at $\\boldsymbol{k}_{0}=\\boldsymbol{0}$ and a positive velocity parameter $v0$:\n- $H_{1}(\\boldsymbol{k})=\\hbar v\\,(k_{x}\\sigma_{x}+k_{y}\\sigma_{y}+k_{z}\\sigma_{z})$,\n- $H_{2}(\\boldsymbol{k})=\\hbar v\\,(k_{x}\\sigma_{x}+k_{y}\\sigma_{y}-k_{z}\\sigma_{z})$.\n\nCompute the chirality for each node by evaluating the orientation of the corresponding linear map $V$ at the crossing. Express your final answer as a row matrix containing, in order, the chirality of $H_{1}$ and $H_{2}$. Provide exact integers, with no units.", "solution": "The problem asks for the derivation of an expression for the chirality $\\chi$ of a Weyl node and its subsequent calculation for two specific Hamiltonians.\n\n**Part 1: General Derivation of Chirality**\n\nThe energy eigenvalues of the Hamiltonian $H(\\boldsymbol{k})=\\boldsymbol{d}(\\boldsymbol{k})\\cdot\\boldsymbol{\\sigma}$ are $E_{\\pm}(\\boldsymbol{k})=\\pm|\\boldsymbol{d}(\\boldsymbol{k})|$. The positive-energy band corresponds to $E_{+}(\\boldsymbol{k})=|\\boldsymbol{d}(\\boldsymbol{k})|$. The physics of the band structure is encoded in the direction of the vector $\\boldsymbol{d}(\\boldsymbol{k})$, represented by the unit vector $\\hat{\\boldsymbol{d}}(\\boldsymbol{k}) = \\boldsymbol{d}(\\boldsymbol{k})/|\\boldsymbol{d}(\\boldsymbol{k})|$.\n\nThe chirality $\\chi$ is defined by the flux of the Berry curvature $\\boldsymbol{\\Omega}_{+}$ of the positive-energy band through a closed sphere $S$ surrounding the Weyl node. For a two-level system, this flux is equal to the winding number of the map from the momentum-space sphere $S$ to the unit sphere of directions of $\\boldsymbol{d}(\\boldsymbol{k})$.\n$$\n\\chi = \\text{degree}(\\hat{\\boldsymbol{d}}: S \\to S^2)\n$$\nNear the Weyl node at $\\boldsymbol{k}_{0}$, the vector $\\boldsymbol{d}(\\boldsymbol{k})$ is given by the linear approximation $\\boldsymbol{d}(\\boldsymbol{k}_{0}+\\boldsymbol{q}) \\approx V\\boldsymbol{q}$, where $\\boldsymbol{q} = \\boldsymbol{k}-\\boldsymbol{k}_{0}$. The surface $S$ is a small sphere in $\\boldsymbol{k}$-space centered at $\\boldsymbol{k}_{0}$, so vectors $\\boldsymbol{q}$ on this surface form a sphere.\nThe map $\\hat{\\boldsymbol{d}}$ is then given by:\n$$\n\\hat{\\boldsymbol{d}}(\\boldsymbol{q}) = \\frac{V\\boldsymbol{q}}{|V\\boldsymbol{q}|}\n$$\nThis defines a map from the unit sphere of momentum directions $\\hat{\\boldsymbol{q}}$ to the unit sphere of Hamiltonian directions $\\hat{\\boldsymbol{d}}$. Since $V$ is an invertible linear transformation on $\\mathbb{R}^3$, the map $f(\\hat{\\boldsymbol{q}}) = V\\hat{\\boldsymbol{q}}/|V\\hat{\\boldsymbol{q}}|$ is a diffeomorphism from the sphere $S^2$ to itself. The degree of such a map is a well-known result in topology: it is equal to the sign of the determinant of the linear transformation $V$. An orientation-preserving map ($\\det(V) > 0$) has degree $+1$, while an orientation-reversing map ($\\det(V)  0$) has degree $-1$.\n\nTherefore, the chirality of the Weyl node is given by the orientation of the linear map $V$:\n$$\n\\chi = \\text{sign}(\\det(V))\n$$\n\n**Part 2: Application to Specific Hamiltonians**\n\nWe now apply this result to the two given Hamiltonians. In both cases, the Weyl node is at $\\boldsymbol{k}_{0}=\\boldsymbol{0}$, so $\\boldsymbol{q}=\\boldsymbol{k}$.\n\n**Case 1: $H_{1}(\\boldsymbol{k})=\\hbar v\\,(k_{x}\\sigma_{x}+k_{y}\\sigma_{y}+k_{z}\\sigma_{z})$**\n\nBy comparing with $H(\\boldsymbol{k})=\\boldsymbol{d}(\\boldsymbol{k})\\cdot\\boldsymbol{\\sigma}$, we identify the vector $\\boldsymbol{d}_{1}(\\boldsymbol{k})$:\n$$\n\\boldsymbol{d}_{1}(\\boldsymbol{k}) = \\begin{pmatrix} \\hbar v k_x \\\\ \\hbar v k_y \\\\ \\hbar v k_z \\end{pmatrix}\n$$\nThis is already in the linear form $\\boldsymbol{d}_{1}(\\boldsymbol{k}) = V_{1}\\boldsymbol{k}$. The matrix $V_{1}$ is:\n$$\nV_{1} = \\begin{pmatrix} \\hbar v  0  0 \\\\ 0  \\hbar v  0 \\\\ 0  0  \\hbar v \\end{pmatrix} = \\hbar v \\boldsymbol{I}_3\n$$\nwhere $\\boldsymbol{I}_3$ is the $3\\times3$ identity matrix. The determinant of $V_1$ is:\n$$\n\\det(V_{1}) = (\\hbar v)^3\n$$\nSince $\\hbar > 0$ and the problem states $v > 0$, we have $\\det(V_{1}) > 0$. The chirality $\\chi_1$ is:\n$$\n\\chi_{1} = \\text{sign}(\\det(V_{1})) = \\text{sign}((\\hbar v)^3) = +1\n$$\n\n**Case 2: $H_{2}(\\boldsymbol{k})=\\hbar v\\,(k_{x}\\sigma_{x}+k_{y}\\sigma_{y}-k_{z}\\sigma_{z})$**\n\nSimilarly, we identify the vector $\\boldsymbol{d}_{2}(\\boldsymbol{k})$:\n$$\n\\boldsymbol{d}_{2}(\\boldsymbol{k}) = \\begin{pmatrix} \\hbar v k_x \\\\ \\hbar v k_y \\\\ -\\hbar v k_z \\end{pmatrix}\n$$\nThis is in the linear form $\\boldsymbol{d}_{2}(\\boldsymbol{k}) = V_{2}\\boldsymbol{k}$. The matrix $V_{2}$ is:\n$$\nV_{2} = \\begin{pmatrix} \\hbar v  0  0 \\\\ 0  \\hbar v  0 \\\\ 0  0  -\\hbar v \\end{pmatrix}\n$$\nThe determinant of $V_2$ is:\n$$\n\\det(V_{2}) = (\\hbar v)(\\hbar v)(-\\hbar v) = -(\\hbar v)^3\n$$\nSince $\\hbar > 0$ and $v > 0$, we have $\\det(V_{2})  0$. The chirality $\\chi_2$ is:\n$$\n\\chi_{2} = \\text{sign}(\\det(V_{2})) = \\text{sign}(-(\\hbar v)^3) = -1\n$$\n\nThe final answer requires the chiralities of $H_1$ and $H_2$ in order, presented as a row matrix. The values are $\\chi_1 = 1$ and $\\chi_2 = -1$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n1  -1\n\\end{pmatrix}\n}\n$$", "id": "3024295"}, {"introduction": "A profound consequence of bulk topological properties is the guaranteed existence of exotic states at the system's boundaries—a principle known as the bulk-boundary correspondence. In Weyl semimetals, this principle manifests as the celebrated Fermi arcs, which are open-ended segments of a Fermi surface that exist only on the material's surface. This final, computational practice [@problem_id:3024292] equips you with a powerful numerical technique, the iterative Green's function method, to discover these Fermi arcs for yourself in a lattice model, turning an abstract theoretical prediction into a tangible, observable result.", "problem": "You are given a two-band lattice Hamiltonian that realizes a Weyl semimetal phase on a simple cubic lattice with lattice spacing set to unity. The Bloch Hamiltonian is\n$$\nH(\\mathbf{k}) \\;=\\; \\sin k_x \\,\\sigma_x \\;+\\; \\sin k_y \\,\\sigma_y \\;+\\; \\big(\\cos k_x + \\cos k_y + \\cos k_z - m\\big)\\,\\sigma_z,\n$$\nwhere $\\sigma_x$, $\\sigma_y$, $\\sigma_z$ are the Pauli matrices, $\\mathbf{k} = (k_x,k_y,k_z)$ with $k_x,k_y,k_z \\in [-\\pi,\\pi]$, and $m$ is a real control parameter. Consider a semi-infinite geometry with an open boundary along the $+\\hat{y}$ direction (that is, a surface normal to the $y$ axis) and translational invariance conserved along $x$ and $z$. Use the following fundamental definitions and steps to compute the surface spectral function and locate Fermi arcs:\n\n1. Use the retarded Green’s function definition for a noninteracting system at energy $E$, \n$$\nG^R(E) \\;=\\; \\big[E + i\\,\\eta - H\\big]^{-1},\n$$\nwith a small positive broadening $\\eta  0$. The surface spectral function at energy $E$ for a fixed conserved momentum $\\mathbf{k}_\\parallel = (k_x,k_z)$ is\n$$\nA(\\mathbf{k}_\\parallel,E) \\;=\\; -\\frac{1}{\\pi}\\,\\mathrm{Im}\\,\\mathrm{Tr}\\,G^R_{\\text{surf}}(\\mathbf{k}_\\parallel,E),\n$$\nwhere $G^R_{\\text{surf}}$ is the retarded Green’s function projected onto the outermost surface layer.\n\n2. Implement an iterative Green’s function method for a semi-infinite stack of identical principal layers along $\\hat{y}$, such that the Hamiltonian along $y$ is represented in block form as\n$$\nH(k_x,k_z;k_y)\\;=\\; H_0(k_x,k_z) \\;+\\; V\\,e^{i k_y} \\;+\\; V^\\dagger e^{-i k_y},\n$$\nwith $H_0$ the on-layer Hamiltonian and $V$ the nearest-layer hopping (both are $2\\times 2$ matrices per layer). These are determined by matching to the given $H(\\mathbf{k})$:\n- Take\n$$\nH_0(k_x,k_z) \\;=\\; \\sin k_x \\,\\sigma_x \\;+\\; \\big(\\cos k_x + \\cos k_z - m\\big)\\,\\sigma_z,\n$$\n- and\n$$\nV \\;=\\; \\tfrac{1}{2}\\,\\sigma_z \\;+\\; \\tfrac{1}{2i}\\,\\sigma_y.\n$$\nBy construction, this reproduces $\\sin k_y\\,\\sigma_y + \\cos k_y\\,\\sigma_z$ via $V e^{i k_y} + V^\\dagger e^{-i k_y}$.\n\n3. For a semi-infinite stack, the surface Green’s function at fixed $(k_x,k_z)$ and energy $E$ can be computed via the surface self-energy $\\Sigma$ that satisfies the nonlinear matrix equation\n$$\n\\Sigma \\;=\\; V^\\dagger \\,\\big[E + i\\,\\eta - H_0 - \\Sigma\\big]^{-1}\\,V.\n$$\nOnce $\\Sigma$ is obtained, the surface Green’s function is\n$$\nG^R_{\\text{surf}}(\\mathbf{k}_\\parallel,E) \\;=\\; \\big[E + i\\,\\eta - H_0(\\mathbf{k}_\\parallel) - \\Sigma(\\mathbf{k}_\\parallel,E)\\big]^{-1}.\n$$\nSolve this equation iteratively at $E=0$ with a small $\\eta0$.\n\n4. To locate Fermi arcs on the $y$-surface at the Fermi level, evaluate $A(\\mathbf{k}_\\parallel,E=0)$ on the line $k_x = 0$ for a uniform grid of $k_z \\in [-\\pi,\\pi]$. For a given threshold $A_{\\mathrm{thr}}  0$, define the estimated Fermi arc length along this line to be the difference between the largest and smallest $k_z$ values on the grid for which $A( (0,k_z), 0 ) \\ge A_{\\mathrm{thr}}$. If no point exceeds threshold, define the arc length to be zero. Report the arc length in radians.\n\n5. Numerical and physical requirements:\n- All angles must be in radians.\n- Use $E=0$ and the retarded prescription with a small broadening $\\eta  0$.\n- Use a uniform grid of $N_{k_z}$ points in $k_z \\in [-\\pi,\\pi]$ inclusive.\n- Implement a numerically stable fixed-point iteration for $\\Sigma$ with a sensible convergence check and damping if needed.\n- For each test case, output a single floating-point number equal to the estimated Fermi arc length in radians.\n\nTest Suite:\nYou must run the program on the following parameter sets. Each test case is a tuple $(m,\\eta,N_{k_z},A_{\\mathrm{thr}})$:\n\n- Test $1$: $(2.0,\\,10^{-3},\\,721,\\,50.0)$\n- Test $2$: $(2.5,\\,10^{-3},\\,721,\\,50.0)$\n- Test $3$: $(0.5,\\,10^{-3},\\,721,\\,50.0)$\n- Test $4$: $(3.0,\\,10^{-3},\\,721,\\,50.0)$\n\nFinal Output Format:\nYour program should produce a single line of output containing the results as a comma-separated list of floating-point arc lengths (in radians) enclosed in square brackets, in the order of the test suite. For example, an output should look like\n$$\n[\\ell_1,\\ell_2,\\ell_3,\\ell_4]\n$$\nwhere each $\\ell_j$ is a floating-point number. You may round each $\\ell_j$ to six decimal places before printing.", "solution": "To find the Fermi arcs, we must calculate the electronic states that are localized at the surface of the material. This is done by computing the surface spectral function $A(\\mathbf{k}_\\parallel, E)$ at the Fermi energy ($E=0$), which measures the density of states at the surface for a given in-plane momentum $\\mathbf{k}_\\parallel = (k_x, k_z)$. A high value of $A$ indicates the presence of a surface state. The overall strategy involves three key steps:\n1.  **Model Discretization:** The semi-infinite crystal is modeled as a stack of 2D layers along the $y$-direction. The full Hamiltonian $H(\\mathbf{k})$ is decomposed into an on-layer part, $H_0(k_x, k_z)$, and hopping terms, $V$, connecting adjacent layers. This allows us to treat the problem as a 1D chain of layers, where each \"site\" has internal matrix structure.\n2.  **Surface Green's Function:** The effect of the entire semi-infinite bulk on the surface layer is captured by a surface self-energy, $\\Sigma$. This self-energy is found by solving a recursive equation which states that the self-energy for a stack of $N$ layers is related to that of $N-1$ layers. For an infinite stack, this becomes the non-linear matrix equation given in the problem statement. This equation is solved numerically using a fixed-point iteration, starting with an initial guess (e.g., $\\Sigma=0$) and iterating until convergence.\n3.  **Spectral Function Calculation:** Once the converged self-energy $\\Sigma$ is known, the full Green's function for the surface layer, $G^R_{\\text{surf}}$, is calculated. The trace of the imaginary part of this matrix gives the desired surface spectral function, $A(\\mathbf{k}_\\parallel, E=0)$.\nBy performing this calculation for a grid of points along the line $k_x=0$ in the surface Brillouin zone, we can map out where the surface states exist. A continuous line of such states forms the Fermi arc, and its length can be estimated by finding the range of $k_z$ values where the spectral function exceeds a certain threshold.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Weyl semimetal problem by calculating Fermi arc lengths for given parameters.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (2.0, 1e-3, 721, 50.0), # Test 1\n        (2.5, 1e-3, 721, 50.0), # Test 2\n        (0.5, 1e-3, 721, 50.0), # Test 3\n        (3.0, 1e-3, 721, 50.0), # Test 4\n    ]\n\n    # Define Pauli matrices as complex-valued NumPy arrays.\n    sigma_y = np.array([[0, -1j], [1j, 0]], dtype=complex)\n    sigma_z = np.array([[1, 0], [0, -1]], dtype=complex)\n    identity = np.eye(2, dtype=complex)\n\n    # Define the nearest-layer hopping matrices V and V_dagger.\n    # V = 1/2*sigma_z + 1/(2i)*sigma_y\n    V = 0.5 * sigma_z + 0.5 / 1j * sigma_y\n    V_dag = V.conj().T\n\n    # Parameters for the iterative self-energy solver.\n    max_iter = 1000\n    tolerance = 1e-8\n    damping = 0.5  # Mixing parameter to aid convergence\n\n    results = []\n    for m, eta, N_kz, A_thr in test_cases:\n        # Create a uniform grid for k_z from -pi to pi.\n        kz_grid = np.linspace(-np.pi, np.pi, N_kz)\n        \n        A_values = []\n\n        for kz in kz_grid:\n            # On-layer Hamiltonian H0 at k_x = 0.\n            # H0 = (cos(k_x) + cos(k_z) - m)*sigma_z + sin(k_x)*sigma_x\n            # At k_x=0: H0 = (1 + cos(k_z) - m)*sigma_z\n            h0_factor = 1.0 + np.cos(kz) - m\n            H0 = h0_factor * sigma_z\n            \n            # Energy term E + i*eta, with E=0.\n            E_complex = 1j * eta * identity\n\n            # Iteratively solve for the surface self-energy Sigma.\n            Sigma = np.zeros((2, 2), dtype=complex)\n            for _ in range(max_iter):\n                Sigma_old = Sigma\n                \n                # Matrix to be inverted in the self-consistent equation.\n                mat_to_inv = E_complex - H0 - Sigma_old\n                \n                try:\n                    inv_mat = np.linalg.inv(mat_to_inv)\n                except np.linalg.LinAlgError:\n                    # Fallback to pseudo-inverse if matrix is singular,\n                    # though this is unlikely with finite eta.\n                    inv_mat = np.linalg.pinv(mat_to_inv)\n\n                # Update step for Sigma.\n                Sigma_new = V_dag @ inv_mat @ V\n                \n                # Apply damping to stabilize the iteration.\n                Sigma = damping * Sigma_new + (1.0 - damping) * Sigma_old\n\n                # Check for convergence.\n                if np.linalg.norm(Sigma - Sigma_old)  tolerance:\n                    break\n            \n            # Calculate the surface Green's function with the converged Sigma.\n            G_surf = np.linalg.inv(E_complex - H0 - Sigma)\n            \n            # Calculate the surface spectral function A(k_z).\n            A = -1.0 / np.pi * np.imag(np.trace(G_surf))\n            A_values.append(A)\n            \n        # Determine the Fermi arc length from the spectral function array.\n        A_array = np.array(A_values)\n        indices = np.where(A_array >= A_thr)[0]\n        \n        if len(indices) == 0:\n            arc_length = 0.0\n        else:\n            min_kz_idx = indices[0]\n            max_kz_idx = indices[-1]\n            arc_length = kz_grid[max_kz_idx] - kz_grid[min_kz_idx]\n\n        results.append(f\"{arc_length:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "3024292"}]}