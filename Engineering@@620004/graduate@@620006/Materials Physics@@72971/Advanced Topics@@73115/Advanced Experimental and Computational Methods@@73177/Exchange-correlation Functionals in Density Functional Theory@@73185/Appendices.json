{"hands_on_practices": [{"introduction": "Hybrid exchange-correlation functionals are a cornerstone of modern DFT, but the rationale for mixing a specific fraction of exact exchange can seem opaque. This foundational exercise guides you through the elegant theoretical argument for the PBE0 hybrid functional. Starting from the adiabatic connection formalism, you will derive the widely used $1/4$ mixing parameter from a minimal set of physically motivated mathematical constraints, revealing the deep theoretical justification behind this powerful class of functionals [@problem_id:2821028]. This practice bridges the gap between abstract theory and practical functional design.", "problem": "In the adiabatic connection formalism of Kohn–Sham density functional theory, for a fixed ground-state electron density $n(\\mathbf{r})$, one defines a family of Hamiltonians $\\hat{H}_{\\lambda}$ parametrized by the coupling constant $\\lambda \\in [0,1]$ that scales the electron–electron interaction $\\hat{V}_{\\mathrm{ee}} \\to \\lambda \\hat{V}_{\\mathrm{ee}}$ while an external potential $\\hat{V}_{\\lambda}$ is adjusted to keep $n(\\mathbf{r})$ fixed. The exchange–correlation energy is then given exactly by the adiabatic connection integral\n$$\nE_{\\mathrm{xc}}[n] \\;=\\; \\int_{0}^{1} \\! W_{\\lambda}[n] \\, d\\lambda,\n$$\nwhere the coupling-constant integrand is\n$$\nW_{\\lambda}[n] \\;=\\; \\langle \\Psi_{\\lambda}[n] \\vert \\hat{V}_{\\mathrm{ee}} \\vert \\Psi_{\\lambda}[n] \\rangle \\;-\\; U[n],\n$$\nand $U[n]$ is the classical Hartree energy. At $\\lambda=0$, the interacting state reduces to the Kohn–Sham determinant, so that $W_{0}[n] = E_{x}[n]$ is the exact exchange energy.\n\nConsider a generalized gradient approximation of Perdew–Burke–Ernzerhof type, which supplies an approximate integrand $W_{\\lambda}^{\\mathrm{PBE}}[n]$ and thus an approximate $E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n] = \\int_{0}^{1} W_{\\lambda}^{\\mathrm{PBE}}[n] \\, d\\lambda$. You are asked to construct a hybrid adiabatic-connection integrand by adding to $W_{\\lambda}^{\\mathrm{PBE}}[n]$ a correction that enforces the exact $\\lambda=0$ limit while minimally perturbing the fully interacting end ($\\lambda \\to 1$) in a smooth manner consistent with basic constraints. Proceed as follows:\n\n1) Assume an ansatz of the form\n$$\nW_{\\lambda}^{\\mathrm{hyb}}[n] \\;=\\; W_{\\lambda}^{\\mathrm{PBE}}[n] \\;+\\; \\big(E_{x}^{\\mathrm{HF}}[n] \\;-\\; E_{x}^{\\mathrm{PBE}}[n]\\big)\\, f(\\lambda),\n$$\nwith a scalar weight $f(\\lambda)$ chosen to satisfy $f(0)=1$ so that $W_{0}^{\\mathrm{hyb}}[n] = E_{x}^{\\mathrm{HF}}[n]$ and $f(1)=0$ so that the correction smoothly vanishes at full coupling. Impose in addition the minimal smoothness constraints $f'(1)=0$ and $f''(1)=0$ so that the correction does not alter the first two derivatives of the integrand at $\\lambda=1$.\n\n2) Among polynomials, determine the unique cubic $f(\\lambda)$ that satisfies these four endpoint constraints. Then perform the adiabatic-connection integration to show that the corresponding hybrid exchange–correlation energy has the form\n$$\nE_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] \\;=\\; E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n] \\;+\\; a \\,\\big(E_{x}^{\\mathrm{HF}}[n] \\;-\\; E_{x}^{\\mathrm{PBE}}[n]\\big),\n$$\nand express the mixing coefficient $a$ in terms of $f(\\lambda)$.\n\n3) Evaluate $a$ explicitly for the cubic $f(\\lambda)$ you found in step 2. This $a$ is the Perdew–Ernzerhof hybrid mixing implied by the adiabatic connection and provides the rationale for the PBE0 choice. Report the final value of $a$ as an exact number. No units are required. Do not round.\n\nYour final answer must be a single number.", "solution": "The problem presented is a an exercise in the construction of hybrid exchange-correlation functionals within the framework of Kohn-Sham density functional theory. We are tasked with deriving the mixing coefficient for a specific hybrid functional based on the Perdew-Burke-Ernzerhof (PBE) generalized gradient approximation. The derivation must follow principles of the adiabatic connection.\n\nFirst, we must validate the problem statement.\nThe givens are as follows:\n1. The exact exchange-correlation energy from the adiabatic connection integral: $E_{\\mathrm{xc}}[n] = \\int_{0}^{1} W_{\\lambda}[n] \\, d\\lambda$.\n2. The definition of the coupling-constant integrand: $W_{\\lambda}[n] = \\langle \\Psi_{\\lambda}[n] \\vert \\hat{V}_{\\mathrm{ee}} \\vert \\Psi_{\\lambda}[n] \\rangle - U[n]$.\n3. The $\\lambda=0$ limit of the exact integrand: $W_{0}[n] = E_{x}[n]$.\n4. The PBE approximation for the energy: $E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n] = \\int_{0}^{1} W_{\\lambda}^{\\mathrm{PBE}}[n] \\, d\\lambda$.\n5. A proposed ansatz for a hybrid integrand: $W_{\\lambda}^{\\mathrm{hyb}}[n] = W_{\\lambda}^{\\mathrm{PBE}}[n] + \\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big)\\, f(\\lambda)$. Here, the exact exchange energy $E_{x}[n]$ is approximated by the Hartree-Fock exchange energy $E_{x}^{\\mathrm{HF}}[n]$, a common and necessary step in practical hybrid functional construction.\n6. Four constraints on the weighting function $f(\\lambda)$: $f(0)=1$, $f(1)=0$, $f'(1)=0$, and $f''(1)=0$.\n7. The required form for the resulting hybrid energy: $E_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] = E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n] + a \\,\\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big)$.\n\nThe problem is scientifically grounded, rooted in the established principles of density functional theory. It is well-posed, providing a sufficient number of constraints to uniquely determine the parameters of a cubic polynomial. The language is objective and the setup is consistent. Therefore, the problem is valid, and we may proceed with the solution.\n\nThe first step is to determine the unique cubic polynomial $f(\\lambda)$ that satisfies the given constraints. Let the general form of a cubic polynomial be\n$$\nf(\\lambda) = c_3 \\lambda^3 + c_2 \\lambda^2 + c_1 \\lambda + c_0.\n$$\nIts first and second derivatives with respect to $\\lambda$ are\n$$\nf'(\\lambda) = 3 c_3 \\lambda^2 + 2 c_2 \\lambda + c_1,\n$$\n$$\nf''(\\lambda) = 6 c_3 \\lambda + 2 c_2.\n$$\nWe apply the four constraints to determine the coefficients $c_0, c_1, c_2, c_3$.\n1.  From $f(0)=1$:\n    $c_3 (0)^3 + c_2 (0)^2 + c_1 (0) + c_0 = 1 \\implies c_0 = 1$.\n2.  From $f(1)=0$:\n    $c_3 (1)^3 + c_2 (1)^2 + c_1 (1) + c_0 = 0 \\implies c_3 + c_2 + c_1 + 1 = 0$.\n3.  From $f'(1)=0$:\n    $3 c_3 (1)^2 + 2 c_2 (1) + c_1 = 0 \\implies 3 c_3 + 2 c_2 + c_1 = 0$.\n4.  From $f''(1)=0$:\n    $6 c_3 (1) + 2 c_2 = 0 \\implies 6 c_3 + 2 c_2 = 0 \\implies c_2 = -3 c_3$.\n\nWe have a system of linear equations. Substituting $c_2 = -3 c_3$ into the equation from constraint $3$:\n$3 c_3 + 2(-3 c_3) + c_1 = 0 \\implies 3 c_3 - 6 c_3 + c_1 = 0 \\implies -3 c_3 + c_1 = 0 \\implies c_1 = 3 c_3$.\n\nNow, substitute the expressions for $c_1$ and $c_2$ in terms of $c_3$ into the equation from constraint $2$:\n$c_3 + (-3 c_3) + (3 c_3) + 1 = 0 \\implies c_3 + 1 = 0 \\implies c_3 = -1$.\n\nWith $c_3 = -1$, we find the other coefficients:\n$c_2 = -3 c_3 = -3(-1) = 3$.\n$c_1 = 3 c_3 = 3(-1) = -3$.\n$c_0 = 1$.\n\nThe unique cubic polynomial is thus\n$$\nf(\\lambda) = - \\lambda^3 + 3 \\lambda^2 - 3 \\lambda + 1.\n$$\nThis expression is recognizable as the binomial expansion of $(1-\\lambda)^3$. So, we can write $f(\\lambda)$ in the more compact form\n$$\nf(\\lambda) = (1-\\lambda)^3.\n$$\n\nThe second step is to perform the adiabatic-connection integration for the hybrid functional. The hybrid exchange-correlation energy is defined as\n$$\nE_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] = \\int_{0}^{1} W_{\\lambda}^{\\mathrm{hyb}}[n] \\, d\\lambda.\n$$\nSubstituting the given ansatz for $W_{\\lambda}^{\\mathrm{hyb}}[n]$:\n$$\nE_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] = \\int_{0}^{1} \\left[ W_{\\lambda}^{\\mathrm{PBE}}[n] + \\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big)\\, f(\\lambda) \\right] d\\lambda.\n$$\nThe integral is linear. We can separate it into two parts:\n$$\nE_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] = \\int_{0}^{1} W_{\\lambda}^{\\mathrm{PBE}}[n] \\,d\\lambda + \\int_{0}^{1} \\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big)\\, f(\\lambda) \\,d\\lambda.\n$$\nThe first term is, by definition, the PBE exchange-correlation energy, $E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n]$. The energy difference $\\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big)$ is a functional of the density $n(\\mathbf{r})$ but does not depend on the integration variable $\\lambda$. Therefore, it can be factored out of the integral:\n$$\nE_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] = E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n] + \\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big) \\int_{0}^{1} f(\\lambda) \\,d\\lambda.\n$$\nComparing this result with the required form $E_{\\mathrm{xc}}^{\\mathrm{hyb}}[n] = E_{\\mathrm{xc}}^{\\mathrm{PBE}}[n] + a \\,\\big(E_{x}^{\\mathrm{HF}}[n] - E_{x}^{\\mathrm{PBE}}[n]\\big)$, we identify the mixing coefficient $a$ as the definite integral of the weighting function $f(\\lambda)$:\n$$\na = \\int_{0}^{1} f(\\lambda) \\,d\\lambda.\n$$\n\nThe third and final step is to evaluate this integral for the specific cubic polynomial $f(\\lambda) = (1-\\lambda)^3$ that we found.\n$$\na = \\int_{0}^{1} (1-\\lambda)^3 \\, d\\lambda.\n$$\nThis is a standard integral. We can perform a substitution $u = 1-\\lambda$, which implies $du = -d\\lambda$. The limits of integration change accordingly: when $\\lambda=0$, $u=1$; when $\\lambda=1$, $u=0$.\n$$\na = \\int_{1}^{0} u^3 (-du) = \\int_{0}^{1} u^3 \\, du.\n$$\nThe integral evaluates to:\n$$\na = \\left[ \\frac{u^4}{4} \\right]_{0}^{1} = \\frac{1^4}{4} - \\frac{0^4}{4} = \\frac{1}{4}.\n$$\nThis mixing parameter $a = 1/4$ (or $25\\%$) is precisely the fraction of Hartree-Fock exchange included in the well-known PBE0 hybrid functional. The derivation shows how this specific value arises from a minimal set of physically motivated constraints on the adiabatic connection integrand.", "answer": "$$\n\\boxed{\\frac{1}{4}}\n$$", "id": "2821028"}, {"introduction": "A critical challenge for semilocal functionals like LDA and PBE is the self-interaction error, which manifests as a delocalization error that can lead to qualitatively incorrect predictions for charge transfer and band gaps. This computational exercise provides a direct, hands-on experience with this fundamental limitation. By modeling a stretched one-electron system, you will quantify the deviation from exact piecewise linearity for different functionals and see firsthand how the inclusion of exact exchange in a hybrid functional [@problem_id:2821091] provides a systematic correction for this ubiquitous error.", "problem": "Consider a stretched one-electron diatomic system modeled on the hydrogen molecular cation, where the nuclear separation is large enough that the electronic density can be approximated as a non-overlapping sum of fragment densities. Let the total electron number be fixed at $N=1$, and let a fraction $\\lambda \\in [0,1]$ of the electron be localized on the left fragment (center $A$) and the remainder $1-\\lambda$ on the right fragment (center $B$). Each fragment is described by a normalized hydrogenic $1s$ density in atomic units (bohr for length and Hartree for energy), centered at $\\pm R/2$ along the $z$-axis:\n$$\n\\rho_{1s}(r) = \\frac{1}{\\pi} e^{-2 r}, \\quad \\int \\rho_{1s}(\\mathbf{r}) \\, d^3 r = 1.\n$$\nUnder the negligible overlap assumption at large $R$, take the total spin density to be fully spin-polarized in the spin-up channel,\n$$\nn_{\\uparrow}(\\mathbf{r}; \\lambda) = \\lambda \\, \\rho_{1s}(|\\mathbf{r}-\\mathbf{R}_A|) + (1-\\lambda) \\, \\rho_{1s}(|\\mathbf{r}-\\mathbf{R}_B|), \\quad n_{\\downarrow}(\\mathbf{r}; \\lambda) = 0,\n$$\nand approximate all integrals that are nonlinear in the density by a sum of independent contributions from the two centers.\n\nThe exact total Kohn–Sham exchange energy for a one-electron density equals the negative of the Hartree energy, and the exact correlation is zero. Approximate exchange-correlation functionals generally violate this cancellation, introducing delocalization error. In this problem, you will quantify this delocalization error for three exchange-only approximations: the Local Density Approximation (LDA), the Perdew–Burke–Ernzerhof Generalized Gradient Approximation (PBE), and a global hybrid that mixes a fraction $\\alpha$ of exact exchange (Hartree–Fock-like) with PBE exchange. Throughout, ignore correlation (set it to zero), so that any deviation from exact piecewise linearity arises from the self-interaction and delocalization behavior of the exchange approximations.\n\nUse the following foundational definitions and facts as your starting point:\n\n- Hartree energy for a given density $n(\\mathbf{r})$ is\n$$\nE_{\\mathrm{H}}[n] = \\frac{1}{2} \\iint \\frac{n(\\mathbf{r}) \\, n(\\mathbf{r'})}{|\\mathbf{r}-\\mathbf{r'}|} \\, d^3 r \\, d^3 r'.\n$$\nFor the model density $n_{\\uparrow}(\\mathbf{r}; \\lambda)$ and large $R$, approximate\n$$\nE_{\\mathrm{H}}(\\lambda;R) \\approx \\frac{1}{2} J \\left[\\lambda^2 + (1-\\lambda)^2 \\right] + \\lambda (1-\\lambda) \\, J_{AB}(R),\n$$\nwhere $J$ is the Coulomb self-interaction of a unit-normalized hydrogenic $1s$ density, and $J_{AB}(R)$ is the Coulomb interaction between two unit-normalized $1s$ charge distributions on different centers separated by $R$. Use the well-tested results $J = 5/8$ (in Hartree) and $J_{AB}(R) \\approx 1/R$ for large $R$.\n\n- Spin scaling of exchange for a Generalized Gradient Approximation (GGA), including the LDA as a special case, is\n$$\nE_{x}^{\\mathrm{GGA}}[n_{\\uparrow}, n_{\\downarrow}] = \\frac{1}{2} E_{x}^{\\mathrm{GGA,unpol}}[2 n_{\\uparrow}] + \\frac{1}{2} E_{x}^{\\mathrm{GGA,unpol}}[2 n_{\\downarrow}],\n$$\nwith $E_{x}^{\\mathrm{GGA,unpol}}[n]$ defined for an unpolarized density $n(\\mathbf{r})$.\n\n- Local Density Approximation (exchange-only, unpolarized):\n$$\nE_{x}^{\\mathrm{LDA,unpol}}[n] = - C_{x} \\int n(\\mathbf{r})^{4/3} \\, d^3 r, \\quad C_{x} = \\frac{3}{4} \\left(\\frac{3}{\\pi}\\right)^{1/3}.\n$$\n\n- Perdew–Burke–Ernzerhof (exchange-only, unpolarized): use the standard PBE exchange enhancement factor over LDA,\n$$\nE_{x}^{\\mathrm{PBE,unpol}}[n] = - C_{x} \\int n(\\mathbf{r})^{4/3} \\, F_{x}(s(\\mathbf{r})) \\, d^3 r,\n$$\nwith reduced gradient\n$$\ns(\\mathbf{r}) = \\frac{|\\nabla n(\\mathbf{r})|}{2 k_{F}(\\mathbf{r}) \\, n(\\mathbf{r})}, \\quad k_{F}(\\mathbf{r}) = \\left(3 \\pi^{2} n(\\mathbf{r}) \\right)^{1/3},\n$$\nand the exchange enhancement factor\n$$\nF_{x}(s) = 1 + \\kappa - \\frac{\\kappa}{1 + \\mu \\, s^{2}/\\kappa}, \\quad \\kappa = 0.804, \\quad \\mu = 0.21951.\n$$\n\n- For the hydrogenic $1s$ density, $|\\nabla \\rho_{1s}(r)| = 2 \\rho_{1s}(r)$, and for an unpolarized density $n(\\mathbf{r}) = 2 q \\, \\rho_{1s}(r)$ (with $q \\in [0,1]$), the reduced gradient simplifies to $s(\\mathbf{r}) = \\left(3 \\pi^{2} n(\\mathbf{r})\\right)^{-1/3}$.\n\n- Define a global hybrid exchange-only functional\n$$\nE_{x}^{\\mathrm{hyb}} = \\alpha \\, E_{x}^{\\mathrm{EXX}} + (1-\\alpha) \\, E_{x}^{\\mathrm{PBE}},\n$$\nwhere for a one-electron density $E_{x}^{\\mathrm{EXX}} = -E_{\\mathrm{H}}$ exactly. With correlation set to zero, the exchange-plus-Hartree contribution to the total energy is\n$$\nE_{\\mathrm{H}x}^{\\mathrm{hyb}}(\\lambda;R,\\alpha) = E_{\\mathrm{H}}(\\lambda;R) + E_{x}^{\\mathrm{hyb}}(\\lambda;R,\\alpha).\n$$\n\nYou must implement a program that, for each specified functional and separation, computes a scalar delocalization error metric defined as the curvature of $E_{\\mathrm{H}x}$ at half partition:\n$$\n\\Delta(R;\\mathrm{func}) = E_{\\mathrm{H}x}(\\lambda=\\tfrac{1}{2};R) - \\frac{1}{2} \\left[ E_{\\mathrm{H}x}(\\lambda=0;R) + E_{\\mathrm{H}x}(\\lambda=1;R) \\right].\n$$\nIn the exact case (self-interaction-free and piecewise linear), $\\Delta = 0$ for all $R$. Negative values indicate convexity (delocalization error).\n\nYour task is to:\n- Use the assumptions above to derive computable expressions for $E_{\\mathrm{H}}(\\lambda;R)$, $E_{x}^{\\mathrm{LDA}}(\\lambda)$, $E_{x}^{\\mathrm{PBE}}(\\lambda)$, and $E_{x}^{\\mathrm{hyb}}(\\lambda; \\alpha)$ as functions of $\\lambda$ in the negligible-overlap limit. For LDA, you may analytically reduce the required integral over $\\rho_{1s}^{4/3}$. For PBE, evaluate the radial integral numerically in spherical coordinates for unpolarized densities of the form $n(r)=2 q \\, \\rho_{1s}(r)$ with $q \\in \\{1, \\tfrac{1}{2}\\}$ and use spin-scaling and negligible-overlap to assemble $E_{x}^{\\mathrm{PBE}}(\\lambda)$.\n- Set the correlation energy to zero for all functionals.\n- Compute $\\Delta(R;\\mathrm{func})$ for the test suite below.\n\nAll energies must be expressed in Hartree. Angles are not needed. No percentages are used.\n\nTest suite (each test case is a tuple indicating the functional, the separation, and, for the hybrid, the mixing fraction $\\alpha$):\n1. `(\"LDA\", R=6.0, alpha=N/A)`\n2. `(\"PBE\", R=6.0, alpha=N/A)`\n3. `(\"HYB\", R=6.0, alpha=0.25)`\n4. `(\"LDA\", R=12.0, alpha=N/A)`\n5. `(\"PBE\", R=12.0, alpha=N/A)`\n6. `(\"HYB\", R=12.0, alpha=0.25)`\n7. `(\"HYB\", R=8.0, alpha=1.0)`\n\nFinal output format:\n- Your program should produce a single line of output containing the seven curvature values, in Hartree, each rounded to eight decimal places, as a comma-separated list enclosed in square brackets. For example, a syntactically correct output would look like\n$\n[\\delta_1, \\delta_2, \\delta_3, \\delta_4, \\delta_5, \\delta_6, \\delta_7]\n$,\nwith each $\\delta_i$ a floating-point number rounded to eight decimal places.\n\nYour program must be a complete, runnable script that requires no user input and no external files. It must implement the definitions above, perform the necessary integrations, and output the list in the exact format specified.", "solution": "The problem is valid as it is scientifically grounded, self-contained, and well-posed. It describes a standard model in density functional theory for analyzing delocalization error. All necessary physical quantities, constants, and functional forms are provided explicitly and are consistent with the established literature. I will now proceed with the derivation of the solution.\n\nThe objective is to compute the delocalization error metric, defined as the curvature of the Hartree-exchange energy $E_{\\mathrm{H}x}$ with respect to the electron partition fraction $\\lambda$:\n$$\n\\Delta(R;\\mathrm{func}) = E_{\\mathrm{H}x}(\\lambda=\\tfrac{1}{2};R) - \\frac{1}{2} \\left[ E_{\\mathrm{H}x}(\\lambda=0;R) + E_{\\mathrm{H}x}(\\lambda=1;R) \\right]\n$$\nThe system consists of a single electron partitioned between two identical, non-overlapping fragments. By symmetry, the energy for the electron fully on the left fragment ($\\lambda=1$) is identical to the energy for the electron fully on the right fragment ($\\lambda=0$). Hence, $E_{\\mathrm{H}x}(\\lambda=0;R) = E_{\\mathrm{H}x}(\\lambda=1;R)$. The curvature simplifies to:\n$$\n\\Delta(R;\\mathrm{func}) = E_{\\mathrm{H}x}(\\lambda=\\tfrac{1}{2};R) - E_{\\mathrm{H}x}(\\lambda=1;R)\n$$\nThe total energy is $E_{\\mathrm{H}x} = E_{\\mathrm{H}} + E_x$, as correlation is set to zero. The curvature can be decomposed into contributions from the Hartree energy and the exchange energy:\n$$\n\\Delta(R;\\mathrm{func}) = \\Delta_{\\mathrm{H}}(R) + \\Delta_{x}(\\mathrm{func})\n$$\nwhere $\\Delta_{\\mathrm{H}}(R) = E_{\\mathrm{H}}(\\lambda=\\tfrac{1}{2};R) - E_{\\mathrm{H}}(\\lambda=1;R)$ and $\\Delta_{x}(\\mathrm{func}) = E_{x}(\\lambda=\\tfrac{1}{2}) - E_{x}(\\lambda=1)$. Note that for the exchange-only functionals considered, the exchange energy in this model does not depend on the separation $R$ due to the negligible overlap approximation.\n\nFirst, we derive the Hartree contribution, $\\Delta_{\\mathrm{H}}(R)$, using the provided expression for $E_{\\mathrm{H}}(\\lambda;R)$:\n$$\nE_{\\mathrm{H}}(\\lambda;R) \\approx \\frac{1}{2} J \\left[\\lambda^2 + (1-\\lambda)^2 \\right] + \\lambda (1-\\lambda) \\, \\frac{1}{R}\n$$\nWith $J = 5/8$.\nFor $\\lambda=1$: $E_{\\mathrm{H}}(1;R) = \\frac{1}{2} J [1^2 + 0^2] + 0 = \\frac{1}{2} J$.\nFor $\\lambda=\\tfrac{1}{2}$: $E_{\\mathrm{H}}(\\tfrac{1}{2};R) = \\frac{1}{2} J [(\\tfrac{1}{2})^2 + (\\tfrac{1}{2})^2] + \\tfrac{1}{2}\\tfrac{1}{2} \\frac{1}{R} = \\frac{1}{4} J + \\frac{1}{4R}$.\nThus, the Hartree contribution to the curvature is:\n$$\n\\Delta_{\\mathrm{H}}(R) = \\left(\\frac{1}{4} J + \\frac{1}{4R}\\right) - \\frac{1}{2} J = \\frac{1}{4R} - \\frac{1}{4} J\n$$\nFor the exact functional, $E_x = -E_{\\mathrm{H}}$, which implies $E_{\\mathrm{H}x}=0$ and $\\Delta^{\\mathrm{exact}}=0$. This requires the exchange curvature $\\Delta_x^{\\mathrm{exact}}$ to be $-\\Delta_{\\mathrm{H}}(R) = \\frac{1}{4} J - \\frac{1}{4R}$. Any deviation from this value in an approximate functional leads to a non-zero total curvature, signifying delocalization error.\n\nNext, we derive the exchange contribution, $\\Delta_x$, for each functional. The system is fully spin-polarized, with spin-up density $n_{\\uparrow}(\\mathbf{r}; \\lambda) = \\lambda \\rho_A(\\mathbf{r}) + (1-\\lambda) \\rho_B(\\mathbf{r})$ and $n_{\\downarrow}(\\mathbf{r})=0$. The spin-scaling for a GGA (which includes LDA) is given by:\n$$\nE_{x}^{\\mathrm{GGA}}[n_{\\uparrow}, n_{\\downarrow}] = \\frac{1}{2} E_{x}^{\\mathrm{GGA,unpol}}[2 n_{\\uparrow}] + \\frac{1}{2} E_{x}^{\\mathrm{GGA,unpol}}[2 n_{\\downarrow}]\n$$\nSince $n_{\\downarrow}=0$, this simplifies to $E_{x}^{\\mathrm{GGA}}(\\lambda) = \\frac{1}{2} E_{x}^{\\mathrm{GGA,unpol}}[2n_{\\uparrow}(\\lambda)]$. The density $2n_{\\uparrow}(\\lambda) = 2\\lambda\\rho_A + 2(1-\\lambda)\\rho_B$ is a sum of two non-overlapping terms. As integrals nonlinear in density are approximated by sums of contributions, we get:\n$$\nE_{x}^{\\mathrm{GGA}}(\\lambda) \\approx \\frac{1}{2} \\left( E_{x}^{\\mathrm{GGA,unpol}}[2\\lambda\\rho_{1s}] + E_{x}^{\\mathrm{GGA,unpol}}[2(1-\\lambda)\\rho_{1s}] \\right)\n$$\nLet's define $\\mathcal{E}_x^{\\mathrm{unpol}}(q) = E_{x}^{\\mathrm{unpol}}[2q\\rho_{1s}]$. The exchange energy is then $E_{x}^{\\mathrm{GGA}}(\\lambda) = \\frac{1}{2} [\\mathcal{E}_x^{\\mathrm{unpol}}(\\lambda) + \\mathcal{E}_x^{\\mathrm{unpol}}(1-\\lambda)]$.\nThe energy for a single localized electron ($\\lambda=1$) is $E_{x}^{\\mathrm{GGA}}(1) = \\frac{1}{2}[\\mathcal{E}_x^{\\mathrm{unpol}}(1) + \\mathcal{E}_x^{\\mathrm{unpol}}(0)] = \\frac{1}{2}\\mathcal{E}_x^{\\mathrm{unpol}}(1)$. Let's denote this quantity by $E_{x,H}^{\\mathrm{GGA}}$, the exchange energy of one hydrogen-like fragment.\nThe energy at half-partition ($\\lambda=\\tfrac{1}{2}$) is $E_{x}^{\\mathrm{GGA}}(\\tfrac{1}{2}) = \\frac{1}{2}[\\mathcal{E}_x^{\\mathrm{unpol}}(\\tfrac{1}{2}) + \\mathcal{E}_x^{\\mathrm{unpol}}(\\tfrac{1}{2})] = \\mathcal{E}_x^{\\mathrm{unpol}}(\\tfrac{1}{2})$.\nThe exchange curvature is $\\Delta_x^{\\mathrm{GGA}} = E_{x}^{\\mathrm{GGA}}(\\tfrac{1}{2}) - E_{x}^{\\mathrm{GGA}}(1) = \\mathcal{E}_x^{\\mathrm{unpol}}(\\tfrac{1}{2}) - \\frac{1}{2}\\mathcal{E}_x^{\\mathrm{unpol}}(1)$.\n\n**Local Density Approximation (LDA)**\nFor LDA, $\\mathcal{E}_x^{\\mathrm{LDA,unpol}}(q) = -C_x \\int (2q\\rho_{1s})^{4/3} d^3 r = q^{4/3} (-C_x 2^{4/3} \\int \\rho_{1s}^{4/3} d^3 r)$. This shows $\\mathcal{E}_x^{\\mathrm{LDA,unpol}}(q) = q^{4/3} \\mathcal{E}_x^{\\mathrm{LDA,unpol}}(1)$.\nSo, $E_{x,H}^{\\mathrm{LDA}} = \\frac{1}{2}\\mathcal{E}_x^{\\mathrm{LDA,unpol}}(1)$ and $E_{x}^{\\mathrm{LDA}}(\\tfrac{1}{2}) = (\\tfrac{1}{2})^{4/3} \\mathcal{E}_x^{\\mathrm{LDA,unpol}}(1) = (\\tfrac{1}{2})^{4/3} (2 E_{x,H}^{\\mathrm{LDA}}) = 2^{-1/3} E_{x,H}^{\\mathrm{LDA}}$.\nThe exchange curvature is $\\Delta_x^{\\mathrm{LDA}} = (2^{-1/3} - 1)E_{x,H}^{\\mathrm{LDA}}$. The value of $E_{x,H}^{\\mathrm{LDA}}$ can be computed from the analytical integral $\\int \\rho_{1s}^{4/3} d^3r = \\frac{27}{64\\pi^{1/3}}$.\n$E_{x,H}^{\\mathrm{LDA}} = \\frac{1}{2} \\left(-C_x 2^{4/3} \\frac{27}{64\\pi^{1/3}}\\right) = -C_x 2^{1/3} \\frac{27}{64\\pi^{1/3}}$.\nThe total curvature for LDA is $\\Delta^{\\mathrm{LDA}}(R) = \\frac{1}{4R} - \\frac{J}{4} + (2^{-1/3}-1)E_{x,H}^{\\mathrm{LDA}}$.\n\n**Perdew–Burke–Ernzerhof (PBE) GGA**\nFor PBE, the same logic applies, but the integrals for $\\mathcal{E}_x^{\\mathrm{PBE,unpol}}(q)$ must be evaluated numerically for $q=1$ and $q=\\frac{1}{2}$.\n$\\mathcal{E}_x^{\\mathrm{PBE,unpol}}(q) = -C_x \\int (2q\\rho_{1s})^{4/3} F_x(s) d^3r$, where $s(\\mathbf{r}) = (3\\pi^2 n(\\mathbf{r}))^{-1/3}$ with $n=2q\\rho_{1s}$.\nWe compute $E_{x,H}^{\\mathrm{PBE}} = \\frac{1}{2}\\mathcal{E}_x^{\\mathrm{PBE,unpol}}(1)$ and $E_{x}^{\\mathrm{PBE}}(\\tfrac{1}{2}) = \\mathcal{E}_x^{\\mathrm{PBE,unpol}}(\\tfrac{1}{2})$ via numerical integration. The exchange curvature is then $\\Delta_x^{\\mathrm{PBE}} = E_{x}^{\\mathrm{PBE}}(\\tfrac{1}{2}) - E_{x,H}^{\\mathrm{PBE}}$.\nThe total curvature is $\\Delta^{\\mathrm{PBE}}(R) = \\frac{1}{4R} - \\frac{J}{4} + \\Delta_x^{\\mathrm{PBE}}$.\n\n**Hybrid Functional (HYB)**\nThe hybrid functional energy is $E_{x}^{\\mathrm{hyb}} = \\alpha E_x^{\\mathrm{EXX}} + (1-\\alpha)E_x^{\\mathrm{PBE}}$. For a one-electron system, $E_x^{\\mathrm{EXX}} = -E_{\\mathrm{H}}$.\nThe total Hartree-exchange energy is:\n$E_{\\mathrm{H}x}^{\\mathrm{hyb}}(\\lambda) = E_{\\mathrm{H}}(\\lambda) + \\alpha(-E_{\\mathrm{H}}(\\lambda)) + (1-\\alpha)E_x^{\\mathrm{PBE}}(\\lambda) = (1-\\alpha)(E_{\\mathrm{H}}(\\lambda) + E_x^{\\mathrm{PBE}}(\\lambda))$.\nThis means $E_{\\mathrm{H}x}^{\\mathrm{hyb}}(\\lambda) = (1-\\alpha)E_{\\mathrm{H}x}^{\\mathrm{PBE}}(\\lambda)$.\nThe curvature is therefore linearly scaled:\n$$\n\\Delta^{\\mathrm{hyb}}(R;\\alpha) = (1-\\alpha)\\Delta^{\\mathrm{PBE}}(R)\n$$\nFor $\\alpha=1$, the functional is exact for this one-electron problem, and the curvature is $\\Delta = 0$.\n\nThe following program implements these derived expressions to compute the required values.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve():\n    \"\"\"\n    Solves the DFT delocalization error problem for a stretched H2+ model.\n    \"\"\"\n    \n    # Define physical and functional constants in atomic units (Hartree)\n    J_HARTREE = 5.0 / 8.0  # Coulomb self-interaction of a 1s density\n    C_X = 0.75 * (3.0 / np.pi)**(1.0 / 3.0)  # LDA exchange constant\n    KAPPA_PBE = 0.804  # PBE exchange parameter\n    MU_PBE = 0.21951   # PBE exchange parameter\n\n    # Cache for computationally expensive and reusable results\n    calculation_cache = {}\n\n    def get_delta_lda(R):\n        \"\"\"Calculates the delocalization error for LDA at separation R.\"\"\"\n        # The calculation is analytic, so we compute constants once and cache them.\n        if \"delta_x_lda\" in calculation_cache:\n            delta_x_lda = calculation_cache[\"delta_x_lda\"]\n        else:\n            # Exchange energy for a single H atom within LDA:\n            # E_x,H^LDA = -C_x * 2^(1/3) * integral(rho_1s^(4/3) dV)\n            # The integral is analytically known to be 27 / (64 * pi^(1/3))\n            integral_rho43 = 27.0 / (64.0 * np.pi**(1.0 / 3.0))\n            e_xh_lda = -C_X * 2.0**(1.0 / 3.0) * integral_rho43\n            \n            # Curvature of the exchange energy component\n            delta_x_lda = (2.0**(-1.0 / 3.0) - 1.0) * e_xh_lda\n            calculation_cache[\"delta_x_lda\"] = delta_x_lda\n\n        # Curvature of the Hartree energy component\n        delta_h = 1.0 / (4.0 * R) - J_HARTREE / 4.0\n        return delta_h + delta_x_lda\n\n    def pbe_enhancement_factor(s):\n        \"\"\"Standard PBE exchange enhancement factor F_x(s).\"\"\"\n        return 1.0 + KAPPA_PBE - KAPPA_PBE / (1.0 + MU_PBE * s**2 / KAPPA_PBE)\n\n    def pbe_unpol_integrand(r, q):\n        \"\"\"\n        Integrand for the PBE unpolarized exchange energy for a scaled density n=2*q*rho_1s.\n        The integral is over r from 0 to infinity.\n        \"\"\"\n        # Hydrogenic 1s density\n        rho_1s = (1.0 / np.pi) * np.exp(-2.0 * r)\n        # Unpolarized density for the integral\n        n_unpol = 2.0 * q * rho_1s\n\n        # For very large r, density is numerically zero, so integrand is zero.\n        if n_unpol  1e-150:\n            return 0.0\n\n        # Reduced gradient s(r) = (3*pi^2*n(r))^(-1/3) as per problem statement\n        s_val = (3.0 * np.pi**2 * n_unpol)**(-1.0 / 3.0)\n        \n        # PBE enhancement factor F_x(s)\n        fx = pbe_enhancement_factor(s_val)\n        \n        # Full integrand: e_x,unpol(n) * 4*pi*r^2 = -C_x * n^(4/3) * F_x(s) * (4*pi*r^2)\n        return -C_X * n_unpol**(4.0 / 3.0) * fx * 4.0 * np.pi * r**2\n\n    def get_epbe_unpol(q):\n        \"\"\"\n        Computes the PBE unpolarized exchange energy, E_x,unpol[2*q*rho_1s],\n        by numerical integration.\n        \"\"\"\n        if q in calculation_cache:\n            return calculation_cache[q]\n        \n        # Use SciPy's quad for numerical integration from r=0 to infinity\n        result, _ = quad(pbe_unpol_integrand, 0, np.inf, args=(q,))\n        calculation_cache[q] = result\n        return result\n\n    def get_delta_pbe(R):\n        \"\"\"Calculates the delocalization error for PBE at separation R.\"\"\"\n        if \"delta_x_pbe\" in calculation_cache:\n            delta_x_pbe = calculation_cache[\"delta_x_pbe\"]\n        else:\n            # E_x for H atom: E_x,H^PBE = (1/2) * E_x,unpol^PBE[2*rho_1s]\n            # This corresponds to q=1 for the unpolarized density 2*q*rho_1s\n            e_xh_pbe = 0.5 * get_epbe_unpol(1.0)\n\n            # E_x at lambda=1/2: E_x^PBE(1/2) = E_x,unpol^PBE[rho_1s]\n            # This corresponds to q=1/2 for the unpolarized density 2*q*rho_1s\n            e_x_half_pbe = get_epbe_unpol(0.5)\n            \n            delta_x_pbe = e_x_half_pbe - e_xh_pbe\n            calculation_cache[\"delta_x_pbe\"] = delta_x_pbe\n\n        # Curvature of the Hartree component\n        delta_h = 1.0 / (4.0 * R) - J_HARTREE / 4.0\n        return delta_h + delta_x_pbe\n\n    def get_delta_hyb(R, alpha):\n        \"\"\"Calculates the delocalization error for a global hybrid functional.\"\"\"\n        # For alpha=1 (exact exchange), error is zero for this 1-electron system.\n        if alpha == 1.0:\n            return 0.0\n        # Otherwise, the error scales linearly with (1-alpha)\n        delta_pbe = get_delta_pbe(R)\n        return (1.0 - alpha) * delta_pbe\n\n    # Test suite from the problem description\n    test_cases = [\n        (\"LDA\", 6.0, None),\n        (\"PBE\", 6.0, None),\n        (\"HYB\", 6.0, 0.25),\n        (\"LDA\", 12.0, None),\n        (\"PBE\", 12.0, None),\n        (\"HYB\", 12.0, 0.25),\n        (\"HYB\", 8.0, 1.0),\n    ]\n\n    results = []\n    for func, R, alpha in test_cases:\n        if func == \"LDA\":\n            delta = get_delta_lda(R)\n        elif func == \"PBE\":\n            delta = get_delta_pbe(R)\n        elif func == \"HYB\":\n            delta = get_delta_hyb(R, alpha)\n        results.append(round(delta, 8))\n    \n    # Format the final output as a comma-separated list in brackets\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2821091"}, {"introduction": "When a DFT calculation deviates from experimental results, is the fault in the approximate functional itself, or in the self-consistent density it generates? This advanced practice introduces a powerful diagnostic technique to disentangle these two sources of error. By analyzing a set of hypothetical but realistic energy data for the chloride anion's electron affinity across multiple rungs of \"Jacob's Ladder\" (LDA, PBE, SCAN), you will learn to partition the total error into its functional-driven ($\\Delta \\mathrm{EA}_{\\mathrm{func}}$) and density-driven ($\\Delta \\mathrm{EA}_{\\mathrm{den}}$) components, gaining crucial insights into the performance and behavior of different exchange-correlation approximations [@problem_id:2821151].", "problem": "Compute and analyze electron affinities across multiple exchange-correlation approximations in density functional theory for a fixed atomic system using first-principles definitions. Start from the following foundational bases: (i) the Hohenberg–Kohn theorem asserts a one-to-one correspondence between the ground-state electron density and all ground-state observables; (ii) in Kohn–Sham density functional theory (Kohn–Sham DFT), the total ground-state energy is a functional of the electron density, denoted by $E[n]$; (iii) the electron affinity is defined as the difference in ground-state energies between the neutral system and its anion. Denote the neutral chloride atom by $\\mathrm{Cl}$ with $N$ electrons and the chloride anion by $\\mathrm{Cl}^{-}$ with $N+1$ electrons. The exact electron affinity is given by\n$$\n\\mathrm{EA}_{\\mathrm{ref}} \\equiv E_{\\mathrm{ref}}(N) - E_{\\mathrm{ref}}(N+1),\n$$\nwhere $E_{\\mathrm{ref}}$ denotes the reference total energy (e.g., from a highly accurate method) for the corresponding electron number.\n\nIn an approximate exchange-correlation functional setting, denote an approximate energy functional by $E_{\\mathrm{approx}}[n]$. The self-consistent (variational) density $n_{\\mathrm{scf}}$ for this functional minimizes $E_{\\mathrm{approx}}[n]$, leading to the self-consistent energies $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}(N)]$ and $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}(N+1)]$. The non-self-consistent energy evaluation $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}]$ uses a fixed, high-quality reference density $n_{\\mathrm{ref}}$ rather than the variational density. Define the corresponding electron affinities\n$$\n\\mathrm{EA}_{\\mathrm{scf}} \\equiv E_{\\mathrm{approx}}[n_{\\mathrm{scf}}(N)] - E_{\\mathrm{approx}}[n_{\\mathrm{scf}}(N+1)],\n\\quad\n\\mathrm{EA}_{\\mathrm{nscf}} \\equiv E_{\\mathrm{approx}}[n_{\\mathrm{ref}}(N)] - E_{\\mathrm{approx}}[n_{\\mathrm{ref}}(N+1)].\n$$\n\nDefine the total electron affinity error, the functional-driven component, and the density-driven component as\n$$\n\\Delta \\mathrm{EA}_{\\mathrm{total}} \\equiv \\mathrm{EA}_{\\mathrm{scf}} - \\mathrm{EA}_{\\mathrm{ref}},\n\\quad\n\\Delta \\mathrm{EA}_{\\mathrm{func}} \\equiv \\mathrm{EA}_{\\mathrm{nscf}} - \\mathrm{EA}_{\\mathrm{ref}},\n\\quad\n\\Delta \\mathrm{EA}_{\\mathrm{den}} \\equiv \\Delta \\mathrm{EA}_{\\mathrm{total}} - \\Delta \\mathrm{EA}_{\\mathrm{func}} = \\mathrm{EA}_{\\mathrm{scf}} - \\mathrm{EA}_{\\mathrm{nscf}}.\n$$\nUse the criterion that the electron affinity error is density-driven if and only if $|\\Delta \\mathrm{EA}_{\\mathrm{den}}|  |\\Delta \\mathrm{EA}_{\\mathrm{func}}|$.\n\nImplement a program that, given self-consistent and non-self-consistent total energies for the neutral and anion states under three exchange-correlation approximations—Local Density Approximation (LDA), Perdew–Burke–Ernzerhof Generalized Gradient Approximation (PBE), and Strongly Constrained and Appropriately Normed Meta-Generalized Gradient Approximation (SCAN)—computes the above quantities for the chloride anion and classifies the dominant error source.\n\nAll energies are provided in electronvolts (eV). Express all outputs in electronvolts (eV), rounded to three decimal places. Angles are not involved. Your program must not read any input. It must use the fixed test suite below.\n\nTest suite data (all energies in electronvolts):\n- Reference energies: $E_{\\mathrm{ref}}(N) = -1250.000$, $E_{\\mathrm{ref}}(N+1) = -1253.613$, so $\\mathrm{EA}_{\\mathrm{ref}} = 3.613$.\n- LDA:\n  - Self-consistent energies: $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}](N) = -1248.600$, $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}](N+1) = -1251.000$.\n  - Non-self-consistent (reference-density) energies: $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}](N) = -1248.700$, $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}](N+1) = -1252.200$.\n- PBE:\n  - Self-consistent energies: $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}](N) = -1249.500$, $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}](N+1) = -1252.500$.\n  - Non-self-consistent (reference-density) energies: $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}](N) = -1249.600$, $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}](N+1) = -1252.880$.\n- SCAN:\n  - Self-consistent energies: $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}](N) = -1249.800$, $E_{\\mathrm{approx}}[n_{\\mathrm{scf}}](N+1) = -1253.390$.\n  - Non-self-consistent (reference-density) energies: $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}](N) = -1249.820$, $E_{\\mathrm{approx}}[n_{\\mathrm{ref}}](N+1) = -1253.420$.\n\nTasks to implement:\n1. For each functional (LDA, PBE, SCAN), compute $\\mathrm{EA}_{\\mathrm{scf}}$, $\\mathrm{EA}_{\\mathrm{nscf}}$, $\\Delta \\mathrm{EA}_{\\mathrm{total}}$, $\\Delta \\mathrm{EA}_{\\mathrm{func}}$, and $\\Delta \\mathrm{EA}_{\\mathrm{den}}$ in eV, each rounded to three decimals.\n2. Classify whether the electron affinity error is density-driven using the strict inequality $|\\Delta \\mathrm{EA}_{\\mathrm{den}}|  |\\Delta \\mathrm{EA}_{\\mathrm{func}}|$; output a boolean for this classification.\n\nFinal output format:\nProduce a single line containing a list of three sublists in the order $[\\mathrm{LDA}, \\mathrm{PBE}, \\mathrm{SCAN}]$. Each sublist must be\n`[EA_scf, EA_nscf, Delta_EA_total, Delta_EA_func, Delta_EA_den, density_driven]`,\nwhere the first five entries are floats in eV rounded to three decimals, and the last entry is a boolean as defined above. For example, an output might look like\n`[[x_1, x_2, x_3, x_4, x_5, True], [...], [...]]`.", "solution": "The problem requires the computation and analysis of electron affinities for the chloride atom using three different exchange-correlation functionals within the framework of density functional theory. The analysis involves decomposing the total error in the electron affinity into components attributable to the functional approximation and the resulting electron density.\n\nThe foundational definitions provided are as follows. The reference electron affinity is\n$$\n\\mathrm{EA}_{\\mathrm{ref}} = E_{\\mathrm{ref}}(N) - E_{\\mathrm{ref}}(N+1)\n$$\nwhere $E_{\\mathrm{ref}}(M)$ is the exact total ground-state energy for a system with $M$ electrons. The number of electrons for the neutral chloride atom $\\mathrm{Cl}$ is $N$.\n\nFor an approximate functional, two affinities are defined:\n1.  The self-consistent electron affinity, $\\mathrm{EA}_{\\mathrm{scf}}$, is computed from total energies that are minimized variationally with respect to the density for the given approximate functional:\n    $$\n    \\mathrm{EA}_{\\mathrm{scf}} = E_{\\mathrm{approx}}[n_{\\mathrm{scf}}(N)] - E_{\\mathrm{approx}}[n_{\\mathrm{scf}}(N+1)]\n    $$\n2.  The non-self-consistent electron affinity, $\\mathrm{EA}_{\\mathrm{nscf}}$, is computed by evaluating the approximate energy functional on a fixed, high-quality reference density, $n_{\\mathrm{ref}}$:\n    $$\n    \\mathrm{EA}_{\\mathrm{nscf}} = E_{\\mathrm{approx}}[n_{\\mathrm{ref}}(N)] - E_{\\mathrm{approx}}[n_{\\mathrm{ref}}(N+1)]\n    $$\n\nThe error components are defined as:\n-   Total error: $\\Delta \\mathrm{EA}_{\\mathrm{total}} = \\mathrm{EA}_{\\mathrm{scf}} - \\mathrm{EA}_{\\mathrm{ref}}$\n-   Functional-driven error: $\\Delta \\mathrm{EA}_{\\mathrm{func}} = \\mathrm{EA}_{\\mathrm{nscf}} - \\mathrm{EA}_{\\mathrm{ref}}$\n-   Density-driven error: $\\Delta \\mathrm{EA}_{\\mathrm{den}} = \\mathrm{EA}_{\\mathrm{scf}} - \\mathrm{EA}_{\\mathrm{nscf}}$\n\nIt follows from these definitions that $\\Delta \\mathrm{EA}_{\\mathrm{total}} = \\Delta \\mathrm{EA}_{\\mathrm{func}} + \\Delta \\mathrm{EA}_{\\mathrm{den}}$. The error is classified as density-driven if the magnitude of the density-driven error exceeds the magnitude of the functional-driven error, i.e., $|\\Delta \\mathrm{EA}_{\\mathrm{den}}|  |\\Delta \\mathrm{EA}_{\\mathrm{func}}|$.\n\nWe are given the following energy values in units of electronvolts ($\\mathrm{eV}$):\n-   Reference energies: $E_{\\mathrm{ref}}(N) = -1250.000\\ \\mathrm{eV}$, $E_{\\mathrm{ref}}(N+1) = -1253.613\\ \\mathrm{eV}$.\n-   LDA energies: $E_{\\mathrm{scf}}(N) = -1248.600$, $E_{\\mathrm{scf}}(N+1) = -1251.000$; $E_{\\mathrm{nscf}}(N) = -1248.700$, $E_{\\mathrm{nscf}}(N+1) = -1252.200$.\n-   PBE energies: $E_{\\mathrm{scf}}(N) = -1249.500$, $E_{\\mathrm{scf}}(N+1) = -1252.500$; $E_{\\mathrm{nscf}}(N) = -1249.600$, $E_{\\mathrm{nscf}}(N+1) = -1252.880$.\n-   SCAN energies: $E_{\\mathrm{scf}}(N) = -1249.800$, $E_{\\mathrm{scf}}(N+1) = -1253.390$; $E_{\\mathrm{nscf}}(N) = -1249.820$, $E_{\\mathrm{nscf}}(N+1) = -1253.420$.\n\nFirst, we compute the reference electron affinity:\n$$\n\\mathrm{EA}_{\\mathrm{ref}} = (-1250.000\\ \\mathrm{eV}) - (-1253.613\\ \\mathrm{eV}) = 3.613\\ \\mathrm{eV}\n$$\n\nNow, we proceed with the analysis for each functional.\n\n**1. Local Density Approximation (LDA)**\n-   Self-consistent electron affinity:\n    $$\n    \\mathrm{EA}_{\\mathrm{scf, LDA}} = (-1248.600\\ \\mathrm{eV}) - (-1251.000\\ \\mathrm{eV}) = 2.400\\ \\mathrm{eV}\n    $$\n-   Non-self-consistent electron affinity:\n    $$\n    \\mathrm{EA}_{\\mathrm{nscf, LDA}} = (-1248.700\\ \\mathrm{eV}) - (-1252.200\\ \\mathrm{eV}) = 3.500\\ \\mathrm{eV}\n    $$\n-   Error components:\n    $$\n    \\Delta \\mathrm{EA}_{\\mathrm{total, LDA}} = 2.400 - 3.613 = -1.213\\ \\mathrm{eV} \\\\\n    \\Delta \\mathrm{EA}_{\\mathrm{func, LDA}} = 3.500 - 3.613 = -0.113\\ \\mathrm{eV} \\\\\n    \\Delta \\mathrm{EA}_{\\mathrm{den, LDA}} = 2.400 - 3.500 = -1.100\\ \\mathrm{eV}\n    $$\n-   Classification: We compare $|\\Delta \\mathrm{EA}_{\\mathrm{den, LDA}}| = |-1.100| = 1.100$ with $|\\Delta \\mathrm{EA}_{\\mathrm{func, LDA}}| = |-0.113| = 0.113$. Since $1.100  0.113$, the error for LDA is **density-driven**.\n\n**2. Perdew–Burke–Ernzerhof (PBE) Generalized Gradient Approximation (GGA)**\n-   Self-consistent electron affinity:\n    $$\n    \\mathrm{EA}_{\\mathrm{scf, PBE}} = (-1249.500\\ \\mathrm{eV}) - (-1252.500\\ \\mathrm{eV}) = 3.000\\ \\mathrm{eV}\n    $$\n-   Non-self-consistent electron affinity:\n    $$\n    \\mathrm{EA}_{\\mathrm{nscf, PBE}} = (-1249.600\\ \\mathrm{eV}) - (-1252.880\\ \\mathrm{eV}) = 3.280\\ \\mathrm{eV}\n    $$\n-   Error components:\n    $$\n    \\Delta \\mathrm{EA}_{\\mathrm{total, PBE}} = 3.000 - 3.613 = -0.613\\ \\mathrm{eV} \\\\\n    \\Delta \\mathrm{EA}_{\\mathrm{func, PBE}} = 3.280 - 3.613 = -0.333\\ \\mathrm{eV} \\\\\n    \\Delta \\mathrm{EA}_{\\mathrm{den, PBE}} = 3.000 - 3.280 = -0.280\\ \\mathrm{eV}\n    $$\n-   Classification: We compare $|\\Delta \\mathrm{EA}_{\\mathrm{den, PBE}}| = |-0.280| = 0.280$ with $|\\Delta \\mathrm{EA}_{\\mathrm{func, PBE}}| = |-0.333| = 0.333$. Since $0.280 \\ngtr 0.333$, the error for PBE is **not** density-driven; it is functional-driven.\n\n**3. Strongly Constrained and Appropriately Normed (SCAN) Meta-GGA**\n-   Self-consistent electron affinity:\n    $$\n    \\mathrm{EA}_{\\mathrm{scf, SCAN}} = (-1249.800\\ \\mathrm{eV}) - (-1253.390\\ \\mathrm{eV}) = 3.590\\ \\mathrm{eV}\n    $$\n-   Non-self-consistent electron affinity:\n    $$\n    \\mathrm{EA}_{\\mathrm{nscf, SCAN}} = (-1249.820\\ \\mathrm{eV}) - (-1253.420\\ \\mathrm{eV}) = 3.600\\ \\mathrm{eV}\n    $$\n-   Error components:\n    $$\n    \\Delta \\mathrm{EA}_{\\mathrm{total, SCAN}} = 3.590 - 3.613 = -0.023\\ \\mathrm{eV} \\\\\n    \\Delta \\mathrm{EA}_{\\mathrm{func, SCAN}} = 3.600 - 3.613 = -0.013\\ \\mathrm{eV} \\\\\n    \\Delta \\mathrm{EA}_{\\mathrm{den, SCAN}} = 3.590 - 3.600 = -0.010\\ \\mathrm{eV}\n    $$\n-   Classification: We compare $|\\Delta \\mathrm{EA}_{\\mathrm{den, SCAN}}| = |-0.010| = 0.010$ with $|\\Delta \\mathrm{EA}_{\\mathrm{func, SCAN}}| = |-0.013| = 0.013$. Since $0.010 \\ngtr 0.013$, the error for SCAN is **not** density-driven; it is functional-driven.\n\nThe following program implements these calculations and provides the output in the specified format. The results must be rounded to three decimal places.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes electron affinities and error components for different DFT functionals.\n    \"\"\"\n    # Reference energies in eV.\n    E_ref_N = -1250.000\n    E_ref_N1 = -1253.613\n\n    # Test suite data: (name, E_scf(N), E_scf(N+1), E_nscf(N), E_nscf(N+1))\n    test_cases = [\n        (\"LDA\", -1248.600, -1251.000, -1248.700, -1252.200),\n        (\"PBE\", -1249.500, -1252.500, -1249.600, -1252.880),\n        (\"SCAN\", -1249.800, -1253.390, -1249.820, -1253.420),\n    ]\n\n    # Calculate the reference electron affinity.\n    EA_ref = E_ref_N - E_ref_N1\n\n    all_results = []\n    for name, e_scf_n, e_scf_n1, e_nscf_n, e_nscf_n1 in test_cases:\n        # Calculate self-consistent and non-self-consistent electron affinities.\n        EA_scf = e_scf_n - e_scf_n1\n        EA_nscf = e_nscf_n - e_nscf_n1\n\n        # Calculate the error components.\n        Delta_EA_total = EA_scf - EA_ref\n        Delta_EA_func = EA_nscf - EA_ref\n        Delta_EA_den = EA_scf - EA_nscf\n\n        # Classify the error source.\n        is_density_driven = abs(Delta_EA_den) > abs(Delta_EA_func)\n\n        # Store the results for this functional.\n        sublist = [\n            EA_scf,\n            EA_nscf,\n            Delta_EA_total,\n            Delta_EA_func,\n            Delta_EA_den,\n            is_density_driven\n        ]\n        all_results.append(sublist)\n\n    # Format the final output string to match the problem specification exactly.\n    # The format is a list of lists, with no spaces and floats formatted to 3 decimal places.\n    sublist_strs = []\n    for sublist in all_results:\n        item_strs = []\n        # First 5 elements are floats and must be formatted to 3 decimal places.\n        for i in range(5):\n            item_strs.append(f\"{sublist[i]:.3f}\")\n        # The last element is a boolean.\n        item_strs.append(str(sublist[5]))\n        \n        sublist_strs.append(f\"[{','.join(item_strs)}]\")\n    \n    final_output_str = f\"[{','.join(sublist_strs)}]\"\n\n    # Final print statement in the exact required format.\n    print(final_output_str)\n\nsolve()\n```", "id": "2821151"}]}