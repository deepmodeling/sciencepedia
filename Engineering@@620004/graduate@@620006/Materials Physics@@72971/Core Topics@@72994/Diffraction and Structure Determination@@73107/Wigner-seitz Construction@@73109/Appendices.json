{"hands_on_practices": [{"introduction": "This first practice provides a foundational exercise in constructing a Wigner-Seitz cell from first principles. By focusing on a two-dimensional triangular lattice, you can directly apply the geometric definition of the cell in a visually intuitive setting. This hands-on calculation is invaluable for solidifying your understanding of how the cell is formed by the perpendicular bisectors of lattice vectors and for confirming its fundamental property as a primitive cell of the lattice [@problem_id:2870601].", "problem": "Consider a two-dimensional triangular Bravais lattice in the plane with lattice constant $a$, defined as the nearest-neighbor spacing between lattice points. Let the primitive vectors be $\\mathbf{a}_{1} = a\\,(1,0)$ and $\\mathbf{a}_{2} = a\\,\\left(\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right)$, and place a lattice point at the origin. Using only the definition of the Wigner–Seitz construction (the set of points in the plane that are closer to the origin than to any other lattice point), construct the Wigner–Seitz cell around the origin and determine its polygonal shape. Then, compute the area of this Wigner–Seitz cell and the length of each of its sides in terms of $a$.\n\nYou must justify why the area of the Wigner–Seitz cell equals the area per lattice point of the Bravais lattice and why the cell is a regular polygon. Express your final result as the ordered pair $\\left(A,\\,s\\right)$ where $A$ is the area and $s$ is the side length, both written symbolically in terms of $a$. No numerical rounding is required. Do not include physical units; express the area and the side length directly as analytic expressions in $a$.", "solution": "The problem asks for the construction and properties of the Wigner–Seitz cell for a two-dimensional triangular Bravais lattice. I will first validate the problem statement.\n\n### Step 1: Extract Givens\n- Lattice type: Two-dimensional triangular Bravais lattice.\n- Lattice constant: $a$, defined as the nearest-neighbor spacing.\n- Primitive vectors: $\\mathbf{a}_{1} = a(1,0)$ and $\\mathbf{a}_{2} = a\\left(\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right)$.\n- A lattice point is placed at the origin $(0,0)$.\n- Task: Construct the Wigner–Seitz cell around the origin.\n- Task: Determine its polygonal shape.\n- Task: Compute its area $A$ and the length of its sides $s$.\n- Task: Justify why the area of the Wigner–Seitz cell equals the area per lattice point.\n- Task: Justify why the cell is a regular polygon.\n- Final Result Format: Ordered pair $(A, s)$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is scientifically grounded, well-posed, and objective. It uses standard definitions from solid-state physics for a triangular lattice and the Wigner–Seitz construction. The given primitive vectors, $|\\mathbf{a}_{1}| = a$ and $|\\mathbf{a}_{2}| = a$, are consistent with the definition of the lattice constant $a$ as the nearest-neighbor distance. The problem is self-contained and free of contradictions or ambiguities. No flaws are identified.\n\n### Step 3: Verdict and Action\nThe problem is valid. I will proceed with a full solution.\n\n### Solution\nThe Wigner–Seitz cell around a lattice point (here, the origin) is defined as the locus of points in space that are closer to this lattice point than to any other lattice point. The boundaries of this cell are formed by the perpendicular bisectors of the vectors connecting the central lattice point to all other lattice points. The cell itself is the smallest area enclosed by these bisectors.\n\nFirst, we must identify the nearest-neighbor lattice points to the origin. A general lattice point is given by a vector $\\mathbf{R} = n_{1}\\mathbf{a}_{1} + n_{2}\\mathbf{a}_{2}$, where $n_{1}$ and $n_{2}$ are integers. The nearest neighbors are the set of points with the smallest non-zero magnitude $|\\mathbf{R}|$.\nThe primitive vectors given are $\\mathbf{a}_{1} = a(1,0)$ and $\\mathbf{a}_{2} = a\\left(\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right)$. Both have magnitude $a$.\nLet us identify the vectors pointing from the origin to its six nearest neighbors. These are:\n$$\n\\begin{aligned}\n\\mathbf{R}_{1} &= \\mathbf{a}_{1} = a(1, 0) \\\\\n\\mathbf{R}_{2} &= \\mathbf{a}_{2} = a\\left(\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right) \\\\\n\\mathbf{R}_{3} &= -\\mathbf{a}_{1} + \\mathbf{a}_{2} = a\\left(-\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right) \\\\\n\\mathbf{R}_{4} &= -\\mathbf{a}_{1} = a(-1, 0) \\\\\n\\mathbf{R}_{5} &= -\\mathbf{a}_{2} = a\\left(-\\frac{1}{2}, -\\frac{\\sqrt{3}}{2}\\right) \\\\\n\\mathbf{R}_{6} &= \\mathbf{a}_{1} - \\mathbf{a}_{2} = a\\left(\\frac{1}{2}, -\\frac{\\sqrt{3}}{2}\\right)\n\\end{aligned}\n$$\nAll six of these vectors have a magnitude of $a$. There are no other lattice points closer to the origin. These six vectors are separated by angles of $\\frac{\\pi}{3}$ radians or $60^{\\circ}$, forming a regular hexagon. The Wigner–Seitz cell is bounded by the perpendicular bisectors of these six vectors.\n\nLet us find the equations of the lines corresponding to these perpendicular bisectors.\n$1$. For $\\mathbf{R}_{1} = a(1, 0)$: The midpoint is $\\left(\\frac{a}{2}, 0\\right)$. The bisector is a vertical line: $x = \\frac{a}{2}$.\n$2$. For $\\mathbf{R}_{4} = a(-1, 0)$: The midpoint is $\\left(-\\frac{a}{2}, 0\\right)$. The bisector is a vertical line: $x = -\\frac{a}{2}$.\n$3$. For $\\mathbf{R}_{2} = a\\left(\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right)$: The midpoint is $\\left(\\frac{a}{4}, \\frac{a\\sqrt{3}}{4}\\right)$. The line equation is given by $\\mathbf{R}_{2} \\cdot \\left(\\mathbf{r} - \\frac{\\mathbf{R}_{2}}{2}\\right) = 0$, where $\\mathbf{r}=(x,y)$. This simplifies to $\\mathbf{R}_{2} \\cdot \\mathbf{r} = \\frac{|\\mathbf{R}_{2}|^2}{2}$.\n$$\na\\left(\\frac{1}{2}\\right)x + a\\left(\\frac{\\sqrt{3}}{2}\\right)y = \\frac{a^2}{2} \\implies x + \\sqrt{3}y = a\n$$\n$4$. For $\\mathbf{R}_{3} = a\\left(-\\frac{1}{2}, \\frac{\\sqrt{3}}{2}\\right)$: Similarly, $-\\frac{1}{2}x + \\frac{\\sqrt{3}}{2}y = \\frac{a}{2} \\implies -x + \\sqrt{3}y = a$.\n$5$. For $\\mathbf{R}_{5} = a\\left(-\\frac{1}{2}, -\\frac{\\sqrt{3}}{2}\\right)$: Similarly, $-\\frac{1}{2}x - \\frac{\\sqrt{3}}{2}y = \\frac{a}{2} \\implies -x - \\sqrt{3}y = a$.\n$6$. For $\\mathbf{R}_{6} = a\\left(\\frac{1}{2}, -\\frac{\\sqrt{3}}{2}\\right)$: Similarly, $\\frac{1}{2}x - \\frac{\\sqrt{3}}{2}y = \\frac{a}{2} \\implies x - \\sqrt{3}y = a$.\n\nThe Wigner–Seitz cell is the region enclosed by these six lines. The shape is a hexagon. To determine if it is a regular hexagon, we find its vertices and calculate the side length.\nThe vertices are the intersection points of adjacent lines. Let's find one vertex by intersecting $x = \\frac{a}{2}$ and $x + \\sqrt{3}y = a$:\n$$\n\\frac{a}{2} + \\sqrt{3}y = a \\implies \\sqrt{3}y = \\frac{a}{2} \\implies y = \\frac{a}{2\\sqrt{3}}\n$$\nSo, one vertex is $V_{1} = \\left(\\frac{a}{2}, \\frac{a}{2\\sqrt{3}}\\right)$.\nLet's find the next vertex by intersecting $x + \\sqrt{3}y = a$ and $-x + \\sqrt{3}y = a$:\nAdding the two equations gives $2\\sqrt{3}y = 2a \\implies y = \\frac{a}{\\sqrt{3}}$. Substituting this back gives $x + \\sqrt{3}\\left(\\frac{a}{\\sqrt{3}}\\right) = a \\implies x+a=a \\implies x=0$.\nSo, the second vertex is $V_{2} = \\left(0, \\frac{a}{\\sqrt{3}}\\right)$.\n\nThe length $s$ of the side connecting $V_{1}$ and $V_{2}$ is:\n$$\ns = \\sqrt{\\left(\\frac{a}{2}-0\\right)^2 + \\left(\\frac{a}{2\\sqrt{3}} - \\frac{a}{\\sqrt{3}}\\right)^2} = \\sqrt{\\left(\\frac{a}{2}\\right)^2 + \\left(-\\frac{a}{2\\sqrt{3}}\\right)^2} = \\sqrt{\\frac{a^2}{4} + \\frac{a^2}{12}} = \\sqrt{\\frac{3a^2+a^2}{12}} = \\sqrt{\\frac{4a^2}{12}} = \\sqrt{\\frac{a^2}{3}}\n$$\nThus, the side length is $s = \\frac{a}{\\sqrt{3}} = \\frac{a\\sqrt{3}}{3}$.\n\nThe triangular lattice possesses a six-fold rotational symmetry ($C_6$) about any lattice point. The set of nearest-neighbor vectors also exhibits this symmetry. The Wigner–Seitz construction, being based on these vectors, must also preserve this symmetry. Therefore, the resulting hexagon must be regular: all six sides have the same length $s = a/\\sqrt{3}$, and all internal angles are equal to $120^\\circ$.\n\nNext, we compute the area $A$ of this regular hexagon. A regular hexagon with side length $s$ can be decomposed into $6$ equilateral triangles with side length $s$. The area of one such equilateral triangle is $\\frac{\\sqrt{3}}{4}s^2$.\nThe total area $A$ is:\n$$\nA = 6 \\times \\frac{\\sqrt{3}}{4}s^2 = \\frac{3\\sqrt{3}}{2}s^2\n$$\nSubstituting $s = \\frac{a}{\\sqrt{3}}$:\n$$\nA = \\frac{3\\sqrt{3}}{2}\\left(\\frac{a}{\\sqrt{3}}\\right)^2 = \\frac{3\\sqrt{3}}{2} \\frac{a^2}{3} = \\frac{\\sqrt{3}}{2}a^2\n$$\n\nFinally, we must justify why this area is equal to the area per lattice point. The Wigner–Seitz cell is a primitive cell of the Bravais lattice. A primitive cell is a minimum-volume (or area, in 2D) cell that, when translated by all lattice vectors, tiles all of space without overlap or gaps. By this definition, a primitive cell contains exactly one lattice point. The area per lattice point is therefore the area of any primitive cell.\nWe can verify this by calculating the area of the primitive cell defined by the parallelogram spanned by the primitive vectors $\\mathbf{a}_{1}$ and $\\mathbf{a}_{2}$. This area is given by the magnitude of the determinant of the matrix formed by these vectors:\n$$\nA_{\\text{primitive}} = \\left| \\det \\begin{pmatrix} a & \\frac{a}{2} \\\\ 0 & \\frac{a\\sqrt{3}}{2} \\end{pmatrix} \\right| = \\left| a \\cdot \\frac{a\\sqrt{3}}{2} - 0 \\cdot \\frac{a}{2} \\right| = \\frac{\\sqrt{3}}{2}a^2\n$$\nThis area is identical to the area $A$ of the Wigner–Seitz cell we calculated. This confirms the validity of our calculation and demonstrates that the Wigner–Seitz cell is indeed a primitive cell for the triangular lattice.\n\nThe problem asks for the ordered pair $(A, s)$.\n$$\nA = \\frac{\\sqrt{3}}{2}a^2\n$$\n$$\ns = \\frac{a}{\\sqrt{3}}\n$$\nThe final result is $\\left(\\frac{\\sqrt{3}}{2}a^2, \\frac{a}{\\sqrt{3}}\\right)$.", "answer": "$$\n\\boxed{\n\\left(\\frac{\\sqrt{3}}{2}a^2, \\frac{a}{\\sqrt{3}}\\right)\n}\n$$", "id": "2870601"}, {"introduction": "Moving from a static lattice to a parameterized family, this exercise explores the subtle relationship between crystal geometry and the Wigner-Seitz cell's topology. You will analyze the three-dimensional body-centered tetragonal (BCT) lattice, where the cell's shape depends on the tetragonality ratio $t = c/a$. This challenging problem will deepen your analytical skills by having you determine the specific conditions under which the BCT cell's structure becomes identical to that of the high-symmetry BCC and FCC lattices [@problem_id:2870593].", "problem": "A Body-Centered Tetragonal (BCT) Bravais lattice is defined by a conventional tetragonal cell with edge lengths $a$, $a$, and $c$ and centering vector $(a/2, a/2, c/2)$. The Wigner–Seitz (WS) cell is defined as the set of points in real space that are closer to the origin lattice point than to any other lattice point.\n\nUsing only the definition of the WS construction and Euclidean geometry, consider the family of BCT lattices parameterized by the ratio $t = c/a > 0$. Let $\\{\\mathbf{R}\\}$ denote the set of all nonzero lattice vectors emanating from the origin. The WS cell is the intersection of the half-spaces bounded by the perpendicular bisector planes to the vectors in $\\{\\mathbf{R}\\}$.\n\n1. Identify the shortest lattice vectors whose perpendicular bisectors can form bounding faces of the WS cell, and express their lengths in terms of $a$ and $c$.\n2. By comparing these distances, determine the values of the tetragonality $t = c/a$ at which the real-space WS cell of the BCT lattice is combinatorially identical (i.e., has the same face-count and adjacency graph) to the WS cell of:\n   - the Body-Centered Cubic (BCC) lattice, and\n   - the Face-Centered Cubic (FCC) lattice.\n3. Report your final result as the ordered pair $(t_{\\mathrm{BCC}}, t_{\\mathrm{FCC}})$, where $t_{\\mathrm{BCC}}$ and $t_{\\mathrm{FCC}}$ are the values of $c/a$ at which the BCT WS cell shares topology with the BCC and FCC WS cells, respectively.\n\nExpress the final answer as a row matrix containing $t_{\\mathrm{BCC}}$ and $t_{\\mathrm{FCC}}$. No rounding is required. The answer is dimensionless.", "solution": "The problem requires the determination of the specific values of the tetragonality parameter $t = c/a$ for a Body-Centered Tetragonal (BCT) lattice at which its Wigner-Seitz (WS) cell becomes combinatorially identical to the WS cells of Body-Centered Cubic (BCC) and Face-Centered Cubic (FCC) lattices.\n\nFirst, we must identify the lattice vectors of the BCT lattice. A BCT lattice with conventional cell side lengths $a$, $a$, and $c$ has lattice points at positions $\\mathbf{R}$ whose coordinates $(x,y,z)$ satisfy the condition that $x/a$, $y/a$, and $z/c$ are either all integers or all half-integers. The WS cell is constructed from the set of planes that are the perpendicular bisectors of the lattice vectors $\\mathbf{R}$ emanating from the origin. The faces of the WS cell are determined by the subset of these planes that are not made redundant by others. This means we must identify the shortest lattice vectors.\n\nLet us find the squared lengths $|\\mathbf{R}|^2$ of the shortest non-zero lattice vectors. A vector $\\mathbf{R}$ can be written as $(ia, ja, kc)$, where $(i,j,k)$ are either all integers (not all zero) or all half-integers. The squared length is $|\\mathbf{R}|^2 = a^2(i^2+j^2) + c^2k^2 = a^2(i^2+j^2+t^2k^2)$, where $t=c/a$.\n\nWe identify three families of short lattice vectors by considering small values for $i,j,k$:\n1.  Family A: Two vectors $(0, 0, \\pm c)$, corresponding to $(i,j,k)=(0,0,\\pm 1)$. Their squared length is $d_A^2 = c^2 = a^2 t^2$.\n2.  Family B: Four vectors $(\\pm a, 0, 0)$ and $(0, \\pm a, 0)$, corresponding to $(i,j,k)=(\\pm 1, 0, 0)$ and $(0, \\pm 1, 0)$. Their squared length is $d_B^2 = a^2$.\n3.  Family C: Eight vectors $(\\pm a/2, \\pm a/2, \\pm c/2)$, corresponding to $(i,j,k)=(\\pm 1/2, \\pm 1/2, \\pm 1/2)$. Their squared length is $d_C^2 = (a/2)^2 + (a/2)^2 + (c/2)^2 = a^2/2 + c^2/4 = a^2(1/2 + t^2/4)$.\n\nOther vectors, such as $(\\pm a, \\pm a, 0)$ with length squared $2a^2$, are demonstrably longer and will not typically define the primary faces of the WS cell. The shape of the WS cell is determined by the interplay of the bisecting planes of these three families of vectors.\n\nThe bisecting plane for a vector $\\mathbf{R}$ is given by the equation $\\mathbf{x} \\cdot \\mathbf{R} = |\\mathbf{R}|^2/2$. The number of faces of the WS cell, and thus its combinatorial type, changes when the set of vectors that define the faces changes. A vector $\\mathbf{R}$ contributes a face to the WS cell if its bisecting plane is not cut off by the intersections of other planes. A detailed analysis shows that a face associated with vector $\\mathbf{R}_k$ vanishes when the point $\\mathbf{R}_k/2$ ceases to be a point on the WS cell's boundary, which happens when it comes to lie on the bisecting plane of another vector $\\mathbf{R}_j$.\n\nLet us analyze the conditions under which faces from each family exist.\n-   Faces from Family B (e.g., plane $x=a/2$ from $\\mathbf{R}=(a,0,0)$) and Family C are found to be present for all values of $t>0$. This provides a minimum of $4+8=12$ faces.\n-   For Family A, consider the vector $\\mathbf{R}_A=(0,0,c)$. Its bisecting plane is $z=c/2$. This plane generates a face if the point $\\mathbf{R}_A/2 = (0,0,c/2)$ is not cut off. The nearest competing planes are those from Family C. For a vector $\\mathbf{R}_C = (a/2,a/2,c/2)$, the point $\\mathbf{R}_A/2$ lies on its bisecting plane if $2(\\mathbf{R}_A/2) \\cdot \\mathbf{R}_C = |\\mathbf{R}_C|^2$.\n    $2(0,0,c/2) \\cdot (a/2,a/2,c/2) = c^2/2$.\n    $|\\mathbf{R}_C|^2 = a^2/2 + c^2/4$.\n    The face from $\\mathbf{R}_A$ exists if $2(\\mathbf{R}_A/2) \\cdot \\mathbf{R}_C < |\\mathbf{R}_C|^2$ for all competing $\\mathbf{R}_C$, and here we check the most restrictive case. A face exists if $c^2/2 < a^2/2 + c^2/4$. This simplifies to $c^2/4 < a^2/2$, which is $c^2 < 2a^2$, or $t^2 < 2$.\n\nTherefore, the combinatorial structure of the WS cell depends on $t$ as follows:\n-   If $t < \\sqrt{2}$, the WS cell is bounded by planes from all three families, resulting in $2 (\\text{A}) + 4 (\\text{B}) + 8 (\\text{C}) = 14$ faces. This polyhedron is a tetragonally distorted truncated octahedron.\n-   If $t = \\sqrt{2}$, the condition becomes an equality. The two faces from Family A shrink to become vertices on the WS cell. The resulting cell has $12$ faces.\n-   If $t > \\sqrt{2}$, the faces from Family A are completely cut off. The cell has $12$ faces and is a tetragonally distorted rhombic dodecahedron.\n\nNow we match these structures to the BCC and FCC WS cells.\n1.  **BCC Lattice:** The WS cell of a BCC lattice is a regular truncated octahedron, which has $14$ faces (6 squares from second-nearest neighbors and 8 hexagons from nearest neighbors). This combinatorial type corresponds to the BCT case for $t < \\sqrt{2}$. The problem asks for a specific value of $t$. The BCT lattice becomes a BCC lattice when its conventional cell is cubic, i.e., $c=a$, which means $t=c/a=1$. At $t=1$, the BCT WS cell is a regular truncated octahedron. Thus, $t_{\\mathrm{BCC}} = 1$.\n\n2.  **FCC Lattice:** The WS cell of an FCC lattice is a regular rhombic dodecahedron, which has $12$ faces. This combinatorial type corresponds to the BCT case for $t \\ge \\sqrt{2}$. The BCT lattice is structurally equivalent to an FCC lattice under a specific condition. By rotating the coordinate system by $45^\\circ$ about the $z$-axis, it can be shown that a BCT lattice with $c/a = \\sqrt{2}$ is identical to an FCC lattice. At $t = \\sqrt{2}$, our analysis shows the BCT WS cell transitions to a $12$-faced polyhedron which is a regular rhombic dodecahedron. For $t>\\sqrt{2}$, it is distorted but combinatorially identical. The specific value at which the BCT lattice itself *is* an FCC lattice is $t=\\sqrt{2}$. Thus, $t_{\\mathrm{FCC}} = \\sqrt{2}$.\n\nThe final result is the ordered pair $(t_{\\mathrm{BCC}}, t_{\\mathrm{FCC}})$.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & \\sqrt{2} \\end{pmatrix}}$$", "id": "2870593"}, {"introduction": "This final practice bridges the gap between theoretical concepts and modern computational materials science. You will develop an algorithm to construct the Wigner-Seitz cell for a general orthorhombic lattice, not by assuming its final shape, but by computationally intersecting the half-spaces defined by neighboring lattice points. This exercise demonstrates how the abstract definition of the Wigner-Seitz cell is implemented in practice, equipping you with a powerful and generalizable method for analyzing any Bravais lattice [@problem_id:2870633].", "problem": "You are given a primitive orthorhombic Bravais lattice in three-dimensional Euclidean space. The lattice is generated by three mutually orthogonal primitive vectors aligned with the coordinate axes, with magnitudes denoted by $a$, $b$, and $c$. The lattice points are at positions $\\mathbf{R}(u,v,w) = u\\,a\\,\\hat{\\mathbf{x}} + v\\,b\\,\\hat{\\mathbf{y}} + w\\,c\\,\\hat{\\mathbf{z}}$ for integers $u$, $v$, and $w$. The Wigner–Seitz cell is the set of all points in space that are closer (or equidistant) to the origin than to any other lattice point.\n\nStarting from the fundamental definition of the Wigner–Seitz cell as a Voronoi region in Euclidean space, use only the Euclidean metric and the lattice structure to derive the mathematical form of the half-space inequalities that define the Wigner–Seitz cell centered at the origin. Use only the following fundamental base:\n- The definition of distance in Euclidean space, $d(\\mathbf{x},\\mathbf{y}) = \\|\\mathbf{x}-\\mathbf{y}\\|_{2}$.\n- The definition of a Bravais lattice generated by primitive vectors.\n- The linear algebraic characterization of a hyperplane in terms of a normal vector and offset.\n\nFrom your derivation, construct an algorithm that:\n- Enumerates a candidate set of planes given by the perpendicular bisectors between the origin and a finite set of the shortest nonzero lattice vectors $\\{\\mathbf{R}_i\\}$ (you must not assume a priori which planes are ultimately bounding).\n- Forms the intersection of the associated half-spaces to produce a convex polyhedron that equals the Wigner–Seitz cell when the candidate set is sufficiently rich.\n- Algorithmically prunes redundant planes by checking which candidate planes are active, meaning that at least one vertex of the polyhedron lies on that plane within a numerical tolerance.\n\nYour program must implement the above algorithm to compute the Wigner–Seitz polyhedron for an orthorhombic lattice specified by $(a,b,c)$ using only the lattice definition. The candidate plane set must be built from the shortest shells of nonzero lattice vectors, selected automatically by increasing length until at least the first three distinct length shells are included. To make the problem universal and purely algorithmic, you must not hard-code the final shape of the cell; instead, you must compute it from first principles via half-space intersection.\n\nFor each test case specified below, compute the list of vertices of the Wigner–Seitz cell as the unique extreme points of the intersection polyhedron, sorted lexicographically by $(x,y,z)$, with each coordinate rounded to exactly six decimal places. The output for each test case must be a list of triples $[x,y,z]$. Your program should aggregate the results for all test cases into a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[result_1,result_2,result_3]$), where each $result_i$ is itself a list of vertex triples for the $i$-th test case.\n\nTest suite:\n- Case $1$: $(a,b,c) = (2.3,1.7,3.1)$.\n- Case $2$: $(a,b,c) = (1.0,1.0,1.0)$.\n- Case $3$: $(a,b,c) = (0.5,2.0,3.0)$.\n\nYour program must produce the final single-line output in the format described above, with no additional text. No physical units are involved. All angles, if any appear in your derivation, are measured in radians by convention, but the program should not output angles.", "solution": "The problem as stated is valid. It is a well-posed problem in computational materials physics, based on established scientific principles and expressed in unambiguous mathematical terms. It requires the construction of a Wigner-Seitz cell for a primitive orthorhombic lattice from first principles.\n\nThe solution proceeds in two stages. First, the mathematical formulation is derived from the fundamental definition of a Wigner-Seitz cell. Second, a computational algorithm is constructed based on this formulation to determine the vertices of the cell for the given lattice parameters.\n\nA Wigner-Seitz cell centered at the origin, a lattice point, is defined as the locus of points $\\mathbf{x}$ in space that are closer to the origin than to any other lattice point $\\mathbf{R}$. This is expressed by the set of inequalities:\n$$\nd(\\mathbf{x}, \\mathbf{0}) \\le d(\\mathbf{x}, \\mathbf{R}) \\quad \\forall \\mathbf{R} \\in \\text{Lattice}, \\mathbf{R} \\neq \\mathbf{0}\n$$\nwhere $d(\\mathbf{x}, \\mathbf{y})$ is the Euclidean distance $\\|\\mathbf{x} - \\mathbf{y}\\|$. Squaring both sides, which is a monotonic operation for non-negative distances, yields:\n$$\n\\|\\mathbf{x}\\|^2 \\le \\|\\mathbf{x} - \\mathbf{R}\\|^2\n$$\nExpanding the right-hand side using the dot product, $\\|\\mathbf{v}\\|^2 = \\mathbf{v} \\cdot \\mathbf{v}$:\n$$\n\\mathbf{x} \\cdot \\mathbf{x} \\le (\\mathbf{x} - \\mathbf{R}) \\cdot (\\mathbf{x} - \\mathbf{R}) = \\mathbf{x} \\cdot \\mathbf{x} - 2\\mathbf{x} \\cdot \\mathbf{R} + \\mathbf{R} \\cdot \\mathbf{R}\n$$\nCancellation of the $\\mathbf{x} \\cdot \\mathbf{x}$ term and rearrangement gives the inequality for a single half-space defined by the lattice vector $\\mathbf{R}$:\n$$\n2\\mathbf{x} \\cdot \\mathbf{R} \\le \\mathbf{R} \\cdot \\mathbf{R} = \\|\\mathbf{R}\\|^2\n$$\n$$\n\\mathbf{x} \\cdot \\mathbf{R} \\le \\frac{1}{2}\\|\\mathbf{R}\\|^2\n$$\nThis inequality describes a closed half-space bounded by the plane $\\mathbf{x} \\cdot \\mathbf{R} = \\frac{1}{2}\\|\\mathbf{R}\\|^2$. This plane is the perpendicular bisector of the line segment connecting the origin to the lattice point $\\mathbf{R}$. The Wigner-Seitz cell is the intersection of all such half-spaces for all non-zero lattice vectors $\\mathbf{R}$.\n\nFor the specified primitive orthorhombic lattice, the lattice vectors are given by $\\mathbf{R}(u,v,w) = u\\,a\\,\\hat{\\mathbf{x}} + v\\,b\\,\\hat{\\mathbf{y}} + w\\,c\\,\\hat{\\mathbf{z}}$ for integers $u,v,w$. The half-space inequality for such a vector is:\n$$\nx(ua) + y(vb) + z(wc) \\le \\frac{1}{2} \\left( (ua)^2 + (vb)^2 + (wc)^2 \\right)\n$$\nWhile there are infinitely many such inequalities, only those corresponding to the nearest neighbor lattice points are typically required to define the cell. The problem requires a general algorithm that does not presuppose which vectors are relevant. The algorithm is as follows:\n\n1.  **Generate a Candidate Set of Planes**: A finite set of candidate lattice vectors is generated by considering integer combinations $(u,v,w)$ within a limited range, for example $u,v,w \\in \\{-2, -1, 0, 1, 2\\}$, excluding $(0,0,0)$. For each vector $\\mathbf{R}$, its squared length $\\|\\mathbf{R}\\|^2 = (ua)^2 + (vb)^2 + (wc)^2$ is computed. These squared lengths are sorted to identify the distinct length shells. As per the problem specification, all lattice vectors corresponding to at least the three shortest distinct length shells are selected. For each selected vector $\\mathbf{R}_i$, we form the half-space inequality $\\mathbf{R}_i \\cdot \\mathbf{x} - \\frac{1}{2}\\|\\mathbf{R}_i\\|^2 \\le 0$. Note that for every vector $\\mathbf{R}_i$ in the set, its negative $-\\mathbf{R}_i$ is also present, which defines a bounding half-space on the opposite side, ensuring the resulting polyhedron is closed.\n\n2.  **Compute the Polyhedron by Half-Space Intersection**: The Wigner-Seitz cell is the convex polyhedron formed by the intersection of all candidate half-spaces. This is a standard problem in computational geometry. Given a set of $N$ half-spaces in the form $\\mathbf{n}_i \\cdot \\mathbf{x} + k_i \\le 0$, the task is to find the vertices of the intersection. We will use the `scipy.spatial.HalfspaceIntersection` library function, which is an interface to the robust Qhull library. This function requires the set of half-spaces and a point known to be in the interior of the intersection. For the Wigner-Seitz cell, the origin $\\mathbf{x} = (0,0,0)$ is always an interior point. The function computes the vertices of the intersection polyhedron, automatically handling redundant planes (those not forming a face of the final polyhedron).\n\n3.  **Process and Format Vertices**: The computed vertices are unique extreme points of the polyhedron. For a deterministic output, these vertices must be sorted. The problem specifies lexicographical sorting based on $(x,y,z)$ coordinates. Finally, each coordinate of each vertex is formatted to exactly six decimal places as a floating-point number.\n\nFor a primitive orthorhombic lattice, the shortest non-zero lattice vectors are always $(\\pm a, 0, 0)$, $(0, \\pm b, 0)$, and $(0, 0, \\pm c)$, provided $a, b, c$ are not related in a way that makes a vector like $(a, b, 0)$ shorter than, for instance, $(0,0,c)$. The half-spaces corresponding to these six vectors are $x \\le a/2$, $-x \\le a/2$, $y \\le b/2$, $-y \\le b/2$, $z \\le c/2$, and $-z \\le c/2$. The intersection of these is the rectangular prism (cuboid) defined by $|x| \\le a/2$, $|y| \\le b/2$, $|z| \\le c/2$. The vertices of this prism are the $8$ points $(\\pm a/2, \\pm b/2, \\pm c/2)$. Any other planes derived from longer lattice vectors will be correctly identified as redundant by the intersection algorithm as they do not further constrain this volume. Our general algorithm will systematically arrive at this result for each test case.", "answer": "```python\nimport numpy as np\nfrom scipy.spatial import HalfspaceIntersection\n\ndef solve_case(a, b, c):\n    \"\"\"\n    Computes the vertices of the Wigner-Seitz cell for a primitive orthorhombic lattice.\n\n    Args:\n        a, b, c (float): Magnitudes of the orthogonal primitive lattice vectors.\n\n    Returns:\n        list: A list of vertex coordinate tuples, sorted lexicographically.\n    \"\"\"\n    # Step 1: Generate a candidate set of lattice vectors.\n    # A search range of u,v,w in {-2, ..., 2} is sufficient to capture the\n    # first few shells of nearest neighbors for typical lattices.\n    vectors = []\n    # Use integer indices to generate lattice vectors R = u*a*x_hat + v*b*y_hat + w*c*z_hat\n    for u in range(-2, 3):\n        for v in range(-2, 3):\n            for w in range(-2, 3):\n                if u == 0 and v == 0 and w == 0:\n                    continue\n                vectors.append(np.array([u * a, v * b, w * c]))\n\n    # Step 2: Identify vectors from the first three distinct length shells.\n    tol = 1e-9\n    \n    # Use a dictionary to group vectors by their squared length.\n    length_map = {}\n    for vec in vectors:\n        sq_len = np.dot(vec, vec)\n        found_key = False\n        for key in length_map:\n            if abs(key - sq_len) < tol:\n                length_map[key].append(vec)\n                found_key = True\n                break\n        if not found_key:\n            length_map[sq_len] = [vec]\n\n    # Get the unique squared lengths and sort them.\n    unique_sorted_sq_lengths = sorted(length_map.keys())\n\n    # Select vectors from at least the first three shells.\n    num_shells = min(len(unique_sorted_sq_lengths), 3)\n    shortest_sq_lengths = unique_sorted_sq_lengths[:num_shells]\n    \n    candidate_vectors = []\n    for sq_len in shortest_sq_lengths:\n        candidate_vectors.extend(length_map[sq_len])\n\n    # Step 3: Form half-space inequalities for scipy.\n    # The required inequality format is n.x + d <= 0.\n    # Our derived inequality is R.x - 0.5*|R|^2 <= 0.\n    # So, for each vector R, the normal n is R and the offset d is -0.5*|R|^2.\n    halfspaces = []\n    for R in candidate_vectors:\n        sq_norm = np.dot(R, R)\n        # Each row is [nx, ny, nz, d]\n        halfspaces.append([R[0], R[1], R[2], -0.5 * sq_norm])\n    \n    halfspaces = np.array(halfspaces)\n\n    # Step 4: Compute the intersection of half-spaces.\n    # The origin is always an interior point for the Wigner-Seitz cell.\n    interior_point = np.array([0.0, 0.0, 0.0])\n    \n    try:\n        # This function computes the vertices of the convex polyhedron.\n        hs_intersection = HalfspaceIntersection(halfspaces, interior_point)\n    except Exception:\n        # Qhull can error on degenerate inputs, though it's designed to be robust.\n        # This case should not be reached with the symmetric set of vectors generated.\n        return []\n\n    # Step 5: Extract and sort vertices.\n    vertices = hs_intersection.intersections\n\n    # Sort the vertices lexicographically for a canonical representation.\n    # Convert to a list of tuples for robust sorting.\n    vertices_tuples = [tuple(v) for v in vertices]\n    sorted_vertices = sorted(vertices_tuples, key=lambda k: (k[0], k[1], k[2]))\n\n    return sorted_vertices\n\ndef solve():\n    \"\"\"\n    Main function to run test cases and print the final output.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (2.3, 1.7, 3.1),\n        (1.0, 1.0, 1.0),\n        (0.5, 2.0, 3.0),\n    ]\n\n    all_results_str = []\n    for case in test_cases:\n        a, b, c = case\n        vertices = solve_case(a, b, c)\n\n        # Format the result for the current test case into a string.\n        # Each coordinate must be rounded to exactly six decimal places.\n        case_str_parts = []\n        for v in vertices:\n            v_str = f\"[{v[0]:.6f},{v[1]:.6f},{v[2]:.6f}]\"\n            case_str_parts.append(v_str)\n        # Join vertices into a string list: \"[v1,v2,...]\"\n        all_results_str.append(f\"[{','.join(case_str_parts)}]\")\n\n    # Final print statement must produce a single line in the exact required format.\n    # Join all case results: \"[result1,result2,...]\"\n    print(f\"[{','.join(all_results_str)}]\")\n\nsolve()\n```", "id": "2870633"}]}