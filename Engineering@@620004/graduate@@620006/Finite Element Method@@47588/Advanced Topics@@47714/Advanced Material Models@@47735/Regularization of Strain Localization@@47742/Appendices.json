{"hands_on_practices": [{"introduction": "To begin our hands-on exploration, we first delve into the mathematical underpinnings of gradient-enhanced damage models. This practice focuses on the one-dimensional Helmholtz equation, a cornerstone of implicit gradient regularization, and establishes the fundamental link between the differential operator and the resulting nonlocal averaging kernel. By deriving the Green's function, you will see precisely how a local field is \"smeared\" into a regularized, smoother field through spatial convolution [@problem_id:2593442].", "problem": "In the context of implicit gradient regularization for strain localization in the Finite Element Method (FEM), consider the one-dimensional nonlocal equivalent strain field $\\bar{\\varepsilon}(x)$ defined by the linear Helmholtz-type equation on the infinite line:\n$$\n\\left(1-\\ell^{2}\\frac{d^{2}}{dx^{2}}\\right)\\bar{\\varepsilon}(x)=\\varepsilon_{\\mathrm{eq}}(x),\n$$\nwhere $\\ell>0$ is a material-internal length scale and $\\varepsilon_{\\mathrm{eq}}(x)$ is a localized, square-integrable source that vanishes as $|x|\\to\\infty$. Assume the physically relevant solution $\\bar{\\varepsilon}(x)$ is bounded and decays sufficiently fast as $|x|\\to\\infty$.\n\nStarting from the definitions of linear operators and Green’s functions for linear, translation-invariant ordinary differential equations, and using only fundamental properties of the Dirac distribution and integration by parts, perform the following:\n\n- Derive the Green’s function $G_{\\ell}(x)$ for the operator $1-\\ell^{2}d^{2}/dx^{2}$ on $\\mathbb{R}$ with decay at infinity, and show that the nonlocal field is the spatial convolution\n$$\n\\bar{\\varepsilon}(x)=\\int_{-\\infty}^{\\infty} G_{\\ell}(x-\\xi)\\,\\varepsilon_{\\mathrm{eq}}(\\xi)\\,d\\xi.\n$$\n\n- Then, for the specific, localized loading\n$$\n\\varepsilon_{\\mathrm{eq}}(x)=\\begin{cases}\n\\varepsilon_{0}, & |x|\\le a,\\\\\n0, & |x|>a,\n\\end{cases}\n$$\nwith $\\varepsilon_{0}>0$ and $a>0$, compute the closed-form value of the regularized strain at the center,\n$$\n\\bar{\\varepsilon}(0).\n$$\n\nYour final answer must be a single closed-form analytic expression in terms of $\\varepsilon_{0}$, $a$, and $\\ell$. No numerical approximation is required, and no units should be reported because strain is dimensionless.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- The governing differential equation is $\\left(1-\\ell^{2}\\frac{d^{2}}{dx^{2}}\\right)\\bar{\\varepsilon}(x)=\\varepsilon_{\\mathrm{eq}}(x)$.\n- The domain is the infinite line, $x \\in \\mathbb{R}$.\n- The parameter $\\ell > 0$ is a material-internal length scale.\n- The function $\\varepsilon_{\\mathrm{eq}}(x)$ is a localized, square-integrable source term that vanishes as $|x|\\to\\infty$.\n- The solution $\\bar{\\varepsilon}(x)$ is bounded and decays sufficiently fast as $|x|\\to\\infty$.\n- The task is to derive the Green’s function $G_{\\ell}(x)$ for the operator $1-\\ell^{2}d^{2}/dx^{2}$ and show that the solution is a convolution.\n- For a specific source term $\\varepsilon_{\\mathrm{eq}}(x)=\\begin{cases} \\varepsilon_{0}, & |x|\\le a, \\\\ 0, & |x|>a, \\end{cases}$ with constants $\\varepsilon_{0}>0$ and $a>0$, the value of $\\bar{\\varepsilon}(0)$ must be computed.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Groundedness**: The problem is scientifically sound. The Helmholtz equation is a standard and well-established model for a simple nonlocal continuum, used for regularization of strain localization in solid mechanics and the finite element method.\n- **Well-Posedness**: The problem is well-posed. It consists of a linear, second-order ordinary differential equation with constant coefficients and specified boundary conditions at infinity. For a square-integrable source term, a unique, stable, and decaying solution is expected and can be constructed using a Green's function.\n- **Objectivity**: The problem is formulated using precise mathematical language, free from any subjective or ambiguous statements.\n- **Completeness**: All necessary information, including the differential operator, domain, boundary conditions, and the specific source term for the final calculation, is provided.\n\n**Step 3: Verdict and Action**\nThe problem is deemed valid. It is a standard, self-contained, and well-posed problem in mathematical physics and engineering science. A solution will be provided.\n\nThe Green's function, $G_{\\ell}(x)$, for the linear, translation-invariant operator $L = 1 - \\ell^2 \\frac{d^2}{dx^2}$ is defined by the distributional differential equation:\n$$L G_{\\ell}(x) = \\left(1-\\ell^{2}\\frac{d^{2}}{dx^{2}}\\right)G_{\\ell}(x)=\\delta(x)$$\nwhere $\\delta(x)$ is the Dirac delta distribution. The boundary conditions require that $G_{\\ell}(x) \\to 0$ as $|x| \\to \\infty$.\n\nFor $x \\neq 0$, the equation is homogeneous:\n$$G_{\\ell}(x) - \\ell^2 \\frac{d^2G_{\\ell}}{dx^2}(x) = 0$$\nThe characteristic equation is $1 - \\ell^2 r^2 = 0$, which has roots $r = \\pm \\frac{1}{\\ell}$. The general solution for $x \\neq 0$ is a linear combination of exponential functions:\n$$G_{\\ell}(x) = c_1 \\exp\\left(\\frac{x}{\\ell}\\right) + c_2 \\exp\\left(-\\frac{x}{\\ell}\\right)$$\nApplying the boundary condition $G_{\\ell}(x) \\to 0$ as $|x| \\to \\infty$ restricts the solution.\nFor $x>0$, we must have $c_1=0$ to ensure decay as $x \\to \\infty$. Thus, $G_{\\ell}(x) = A \\exp\\left(-\\frac{x}{\\ell}\\right)$ for some constant $A$.\nFor $x<0$, we must have $c_2=0$ to ensure decay as $x \\to -\\infty$. Thus, $G_{\\ell}(x) = B \\exp\\left(\\frac{x}{\\ell}\\right)$ for some constant $B$.\nThis can be written compactly using the absolute value as $G_{\\ell}(x) = C \\exp\\left(-\\frac{|x|}{\\ell}\\right)$ for some constant $C$. Continuity of the Green's function at $x=0$ is satisfied by this form.\n\nTo determine the constant $C$, we integrate the defining equation for $G_{\\ell}(x)$ over an infinitesimal interval $[-\\eta, \\eta]$ around $x=0$:\n$$\\int_{-\\eta}^{\\eta} \\left(G_{\\ell}(x) - \\ell^2 \\frac{d^2G_{\\ell}}{dx^2}(x)\\right) dx = \\int_{-\\eta}^{\\eta} \\delta(x) dx = 1$$\nIn the limit as $\\eta \\to 0$, the integral of the continuous function $G_{\\ell}(x)$ vanishes: $\\lim_{\\eta\\to 0} \\int_{-\\eta}^{\\eta} G_{\\ell}(x) dx = 0$.\nThe integral of the second derivative term yields a jump in the first derivative:\n$$-\\ell^2 \\int_{-\\eta}^{\\eta} \\frac{d^2G_{\\ell}}{dx^2}(x) dx = -\\ell^2 \\left[ \\frac{dG_{\\ell}}{dx} \\right]_{-\\eta}^{\\eta} = -\\ell^2 \\left( \\frac{dG_{\\ell}}{dx}(0^+) - \\frac{dG_{\\ell}}{dx}(0^-) \\right)$$\nThus, we obtain the jump condition:\n$$-\\ell^2 \\left( \\frac{dG_{\\ell}}{dx}(0^+) - \\frac{dG_{\\ell}}{dx}(0^-) \\right) = 1$$\nThe derivatives of $G_{\\ell}(x) = C \\exp\\left(-\\frac{|x|}{\\ell}\\right)$ are:\nFor $x>0$: $\\frac{dG_{\\ell}}{dx} = -\\frac{C}{\\ell} \\exp\\left(-\\frac{x}{\\ell}\\right) \\implies \\frac{dG_{\\ell}}{dx}(0^+) = -\\frac{C}{\\ell}$.\nFor $x<0$: $\\frac{dG_{\\ell}}{dx} = \\frac{C}{\\ell} \\exp\\left(\\frac{x}{\\ell}\\right) \\implies \\frac{dG_{\\ell}}{dx}(0^-) = \\frac{C}{\\ell}$.\nSubstituting these into the jump condition:\n$$-\\ell^2 \\left( -\\frac{C}{\\ell} - \\frac{C}{\\ell} \\right) = -\\ell^2 \\left( -\\frac{2C}{\\ell} \\right) = 2C\\ell = 1$$\nThis gives $C = \\frac{1}{2\\ell}$. The Green's function is therefore:\n$$G_{\\ell}(x) = \\frac{1}{2\\ell} \\exp\\left(-\\frac{|x|}{\\ell}\\right)$$\nSince the operator $L$ is linear and translation-invariant, the solution to $L\\bar{\\varepsilon}(x) = \\varepsilon_{\\mathrm{eq}}(x)$ is given by the convolution of the source term with the Green's function. Let $u(x) = \\int_{-\\infty}^{\\infty} G_{\\ell}(x-\\xi) \\varepsilon_{\\mathrm{eq}}(\\xi) d\\xi$. Applying $L$ to $u(x)$:\n$$L u(x) = L \\int_{-\\infty}^{\\infty} G_{\\ell}(x-\\xi) \\varepsilon_{\\mathrm{eq}}(\\xi) d\\xi = \\int_{-\\infty}^{\\infty} L G_{\\ell}(x-\\xi) \\varepsilon_{\\mathrm{eq}}(\\xi) d\\xi$$\nBy the property of the Green's function and translational invariance, $L G_{\\ell}(x-\\xi) = \\delta(x-\\xi)$.\n$$L u(x) = \\int_{-\\infty}^{\\infty} \\delta(x-\\xi) \\varepsilon_{\\mathrm{eq}}(\\xi) d\\xi = \\varepsilon_{\\mathrm{eq}}(x)$$\nThus, $u(x)$ satisfies the governing differential equation. Given that it also satisfies the decay conditions at infinity (since $G_{\\ell}$ decays and $\\varepsilon_{\\mathrm{eq}}$ is localized), by uniqueness, $u(x)=\\bar{\\varepsilon}(x)$. This establishes the required convolution form:\n$$\\bar{\\varepsilon}(x)=\\int_{-\\infty}^{\\infty} G_{\\ell}(x-\\xi)\\,\\varepsilon_{\\mathrm{eq}}(\\xi)\\,d\\xi$$\nNow, we compute $\\bar{\\varepsilon}(0)$ for the specified rectangular source term $\\varepsilon_{\\mathrm{eq}}(x)$.\n$$\\bar{\\varepsilon}(0) = \\int_{-\\infty}^{\\infty} G_{\\ell}(0-\\xi) \\varepsilon_{\\mathrm{eq}}(\\xi) d\\xi = \\int_{-\\infty}^{\\infty} G_{\\ell}(-\\xi) \\varepsilon_{\\mathrm{eq}}(\\xi) d\\xi$$\nThe Green's function is an even function, $G_{\\ell}(-\\xi) = G_{\\ell}(\\xi)$. The source term is non-zero only for $|\\xi| \\le a$.\n$$\\bar{\\varepsilon}(0) = \\int_{-a}^{a} G_{\\ell}(\\xi) \\varepsilon_{0} d\\xi = \\varepsilon_{0} \\int_{-a}^{a} \\frac{1}{2\\ell} \\exp\\left(-\\frac{|\\xi|}{\\ell}\\right) d\\xi$$\nThe integrand is an even function of $\\xi$, so the integral from $-a$ to $a$ is twice the integral from $0$ to $a$.\n$$\\bar{\\varepsilon}(0) = \\varepsilon_{0} \\cdot 2 \\int_{0}^{a} \\frac{1}{2\\ell} \\exp\\left(-\\frac{\\xi}{\\ell}\\right) d\\xi = \\frac{\\varepsilon_{0}}{\\ell} \\int_{0}^{a} \\exp\\left(-\\frac{\\xi}{\\ell}\\right) d\\xi$$\nPerforming the elementary integration:\n$$\\bar{\\varepsilon}(0) = \\frac{\\varepsilon_{0}}{\\ell} \\left[ -\\ell \\exp\\left(-\\frac{\\xi}{\\ell}\\right) \\right]_{0}^{a}$$\n$$\\bar{\\varepsilon}(0) = \\frac{\\varepsilon_{0}}{\\ell} \\left( -\\ell \\exp\\left(-\\frac{a}{\\ell}\\right) - \\left(-\\ell \\exp\\left(-0\\right)\\right) \\right)$$\n$$\\bar{\\varepsilon}(0) = \\frac{\\varepsilon_{0}}{\\ell} \\left( -\\ell \\exp\\left(-\\frac{a}{\\ell}\\right) + \\ell \\right) = \\varepsilon_{0} \\left( 1 - \\exp\\left(-\\frac{a}{\\ell}\\right) \\right)$$\nThis is the closed-form expression for the regularized strain at the center of the localized load.", "answer": "$$\\boxed{\\varepsilon_{0} \\left(1 - \\exp\\left(-\\frac{a}{\\ell}\\right)\\right)}$$", "id": "2593442"}, {"introduction": "Building upon the analytical foundation, we now transition to a computational implementation to witness regularization in action. This exercise guides you through developing a one-dimensional Finite Element Method (FEM) code for an explicit gradient damage model, from the weak form to the final algebraic system. The primary goal is to numerically demonstrate the core benefit of introducing an internal length scale $\\ell$: ensuring the computed width of the damage zone is a material property, robust and independent of the chosen mesh size [@problem_id:2593449].", "problem": "Consider a one-dimensional bar occupying the domain $\\Omega = [-L,L]$ undergoing uniaxial tension. After the onset of material softening, strain localization must be regularized to prevent pathological mesh dependence. In an explicit gradient damage regularization, the nonlocal history field $\\kappa(x)$ is obtained as the minimizer of the quadratic functional\n$$\n\\mathcal{J}[\\kappa] \\;=\\; \\frac{1}{2} \\int_{-L}^{L} \\left(\\kappa(x) - \\kappa_{\\mathrm{loc}}(x)\\right)^2 \\,\\mathrm{d}x \\;+\\; \\frac{1}{2}\\ell^2 \\int_{-L}^{L} \\left(\\kappa'(x)\\right)^2 \\,\\mathrm{d}x,\n$$\nwhere $\\kappa_{\\mathrm{loc}}(x)$ is a given local history driver and $\\ell &gt; 0$ is an internal length. This choice is representative of Helmholtz-type explicit gradient regularization widely used to control strain localization in rate-independent damage models. The boundary condition is taken as homogeneous Neumann, $\\kappa'(x)\\,\\nu = 0$ at $x=\\pm L$, where $\\nu$ is the outward unit normal.\n\nAfter localization has formed under uniform tension, assume a narrow damaged core around $x=0$ such that the local driver is\n$$\n\\kappa_{\\mathrm{loc}}(x) \\;=\\; \\begin{cases}\n\\kappa_0, & |x|\\le a,\\\\\n0, & |x|&gt;a,\n\\end{cases}\n$$\nwith constants $\\kappa_0 &gt; 0$ and $a \\ll \\ell$. You are to work entirely in dimensionless form by taking $\\kappa_0 = 1$ so that all reported quantities are nondimensional.\n\nTasks:\n1) Starting from the functional $\\mathcal{J}[\\kappa]$ and the fundamental theorem of the calculus of variations, derive the Euler–Lagrange equation and the natural boundary conditions satisfied by $\\kappa(x)$.\n\n2) Derive the weak form suitable for Galerkin discretization: find $\\kappa \\in H^1(\\Omega)$ such that the bilinear and linear forms are well-posed under homogeneous Neumann boundary conditions. Your derivation must be consistent with the explicit gradient regularization in the sense described above.\n\n3) Using the Finite Element Method (FEM) with linear shape functions on a uniform mesh of $N$ elements, construct the discrete linear system for $\\kappa_h(x)$ on $\\Omega=[-L,L]$. Use the consistent element-wise mass and stiffness matrices resulting from the weak form. Explicitly state how the right-hand side is assembled from $\\kappa_{\\mathrm{loc}}(x)$ evaluated at nodes.\n\n4) Implement a one-dimensional solver that assembles and solves the resulting linear system for $\\kappa_h(x)$ for each of the test cases given below. Adopt homogeneous Neumann boundary conditions implicitly through the weak form.\n\n5) Define the damage zone width as the full width at half maximum (FWHM) of $\\kappa_h(x)$, i.e., the distance between the two points where $\\kappa_h(x)$ equals $\\frac{1}{2}$ of its maximum value. Compute the FWHM from the discrete $\\kappa_h(x)$ by locating the two crossings of the level $\\frac{1}{2}\\max_x \\kappa_h(x)$ and linearly interpolating between nodal values to estimate crossing locations. If the level $\\frac{1}{2}\\max_x \\kappa_h(x)$ is not crossed before reaching a boundary, define the FWHM to be $2L$ for that case.\n\n6) To demonstrate regularization, for each test case compute the ratio $\\mathrm{FWHM}/\\ell$ and report it. For sufficiently large $L/\\ell$ and small $a/\\ell$, theory predicts that this ratio tends to a constant independent of $L$ and $a$, thereby showing that the damage zone width scales with $\\ell$.\n\nMathematical and algorithmic base you must use:\n- The Euler–Lagrange equation arises from setting the first variation $\\delta \\mathcal{J}$ to zero for arbitrary admissible perturbations.\n- The weak form is obtained by multiplying the strong form by a test function, integrating over $\\Omega$, and applying integration by parts to the term involving the second derivative.\n- For linear finite elements on a uniform mesh with element size $h = 2L/N$, use the standard consistent element mass matrix $M_e = \\frac{h}{6}\\begin{bmatrix}2 & 1\\\\ 1 & 2\\end{bmatrix}$ and stiffness matrix $K_e = \\frac{1}{h}\\begin{bmatrix}1 & -1\\\\ -1 & 1\\end{bmatrix}$. The global system has the generic structure $(M + \\ell^2 K)\\boldsymbol{\\kappa} = M\\boldsymbol{g}$, where $\\boldsymbol{g}$ is the nodal sampling of $\\kappa_{\\mathrm{loc}}(x)$.\n\nTest suite:\n- Case A: $L=1.0$, $\\ell=0.05$, $a=0.002$, $N=2000$.\n- Case B: $L=1.0$, $\\ell=0.10$, $a=0.002$, $N=2000$.\n- Case C: $L=1.0$, $\\ell=0.02$, $a=0.002$, $N=2000$.\n- Case D (boundary-influenced): $L=0.03$, $\\ell=0.05$, $a=0.002$, $N=600$.\n\nAll quantities are dimensionless. No physical units are required. Angles do not appear. The outputs must be floating-point numbers.\n\nRequired final output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order [Case A, Case B, Case C, Case D], where each entry is the ratio $\\mathrm{FWHM}/\\ell$ rounded to exactly six digits after the decimal point. For example, a valid output format is like \"[1.386200,1.385900,1.386300,1.210000]\".", "solution": "The supplied problem is subjected to validation prior to any attempt at a solution.\n\nGivens are extracted verbatim:\n- The domain is $\\Omega = [-L,L]$.\n- The functional is $\\mathcal{J}[\\kappa] = \\frac{1}{2} \\int_{-L}^{L} \\left(\\kappa(x) - \\kappa_{\\mathrm{loc}}(x)\\right)^2 \\,\\mathrm{d}x + \\frac{1}{2}\\ell^2 \\int_{-L}^{L} \\left(\\kappa'(x)\\right)^2 \\,\\mathrm{d}x$.\n- The local history driver is $\\kappa_{\\mathrm{loc}}(x) = \\begin{cases} \\kappa_0, & |x|\\le a,\\\\ 0, & |x|>a, \\end{cases}$ with $\\kappa_0=1$.\n- Boundary conditions are homogeneous Neumann: $\\kappa'(x)\\,\\nu = 0$ at $x=\\pm L$.\n- The finite element approximation uses linear shape functions on a uniform mesh of $N$ elements.\n- Element matrices are specified as $M_e = \\frac{h}{6}\\begin{bmatrix}2 & 1\\\\ 1 & 2\\end{bmatrix}$ and $K_e = \\frac{1}{h}\\begin{bmatrix}1 & -1\\\\ -1 & 1\\end{bmatrix}$.\n- The global system structure is $(M + \\ell^2 K)\\boldsymbol{\\kappa} = M\\boldsymbol{g}$.\n- The damage zone width is defined as the Full Width at Half Maximum (FWHM) of $\\kappa_h(x)$. If the half-maximum level is not crossed, FWHM is defined as $2L$.\n\nValidation verdict: The problem is scientifically grounded, well-posed, and objective. It describes a standard Helmholtz-type regularization for strain localization, a valid topic in continuum mechanics. The mathematical formulation is complete and consistent. All necessary parameters for a numerical solution are provided. The problem is deemed valid. We proceed to the solution.\n\nThe solution is constructed by addressing the tasks in the specified sequence.\n\n1) Derivation of the Euler–Lagrange Equation and Natural Boundary Conditions.\n\nThe minimizer $\\kappa(x)$ of the functional $\\mathcal{J}[\\kappa]$ must satisfy the condition that the first variation $\\delta \\mathcal{J}$ vanishes for any admissible perturbation $\\delta\\kappa(x)$. The functional is given by\n$$\n\\mathcal{J}[\\kappa] = \\int_{-L}^{L} F(x, \\kappa, \\kappa') \\,\\mathrm{d}x\n$$\nwhere the integrand is $F(x, \\kappa, \\kappa') = \\frac{1}{2}(\\kappa - \\kappa_{\\mathrm{loc}})^2 + \\frac{1}{2}\\ell^2(\\kappa')^2$.\n\nThe first variation is computed as\n$$\n\\delta \\mathcal{J} = \\int_{-L}^{L} \\left( \\frac{\\partial F}{\\partial \\kappa}\\delta\\kappa + \\frac{\\partial F}{\\partial \\kappa'}\\delta\\kappa' \\right) \\,\\mathrm{d}x = 0\n$$\nThe partial derivatives of $F$ are:\n$$\n\\frac{\\partial F}{\\partial \\kappa} = \\kappa - \\kappa_{\\mathrm{loc}}\n$$\n$$\n\\frac{\\partial F}{\\partial \\kappa'} = \\ell^2 \\kappa'\n$$\nSubstituting these into the expression for $\\delta\\mathcal{J}$:\n$$\n\\delta \\mathcal{J} = \\int_{-L}^{L} \\left( (\\kappa - \\kappa_{\\mathrm{loc}})\\delta\\kappa + \\ell^2\\kappa'\\delta\\kappa' \\right) \\,\\mathrm{d}x = 0\n$$\nApplying integration by parts to the second term:\n$$\n\\int_{-L}^{L} \\ell^2\\kappa'\\delta\\kappa' \\,\\mathrm{d}x = \\left[ \\ell^2\\kappa'\\delta\\kappa \\right]_{-L}^{L} - \\int_{-L}^{L} (\\ell^2\\kappa'')\\delta\\kappa \\,\\mathrm{d}x\n$$\nSubstituting this back into the variation equation:\n$$\n\\delta \\mathcal{J} = \\int_{-L}^{L} \\left( \\kappa - \\kappa_{\\mathrm{loc}} - \\ell^2\\kappa'' \\right) \\delta\\kappa \\,\\mathrm{d}x + \\left[ \\ell^2\\kappa'\\delta\\kappa \\right]_{-L}^{L} = 0\n$$\nFor this equation to hold for any arbitrary admissible perturbation $\\delta\\kappa$, both the integral and the boundary terms must vanish independently. From the integral term, by the fundamental lemma of calculus of variations, we obtain the Euler–Lagrange equation:\n$$\n\\kappa(x) - \\ell^2\\kappa''(x) = \\kappa_{\\mathrm{loc}}(x) \\quad \\text{for } x \\in (-L, L)\n$$\nThe boundary term provides the natural boundary conditions. As no essential (Dirichlet) conditions are imposed on $\\kappa$, the perturbations $\\delta\\kappa(\\pm L)$ are arbitrary. Thus, their coefficients must be zero:\n$$\n\\ell^2 \\kappa'(L) = 0 \\quad \\text{and} \\quad -\\ell^2 \\kappa'(-L) = 0\n$$\nSince $\\ell > 0$, this implies $\\kappa'(L)=0$ and $\\kappa'(-L)=0$. The outward unit normal is $\\nu=1$ at $x=L$ and $\\nu=-1$ at $x=-L$. The condition $\\kappa'(x)\\nu = 0$ is thus satisfied at both boundaries.\n\n2) Derivation of the Weak Form.\n\nThe weak form is derived from the strong form (the Euler-Lagrange equation) by multiplying with a test function $v(x)$ from a suitable space, here $H^1(\\Omega)$, and integrating over the domain $\\Omega = [-L, L]$.\nStarting with the strong form, $-\\ell^2\\kappa'' + \\kappa = \\kappa_{\\mathrm{loc}}$:\n$$\n\\int_{-L}^{L} (-\\ell^2\\kappa'' + \\kappa) v \\,\\mathrm{d}x = \\int_{-L}^{L} \\kappa_{\\mathrm{loc}} v \\,\\mathrm{d}x\n$$\nWe apply integration by parts to the second-derivative term to reduce the order of differentiation:\n$$\n\\int_{-L}^{L} (-\\ell^2\\kappa'')v \\,\\mathrm{d}x = \\left[ -\\ell^2\\kappa'v \\right]_{-L}^{L} + \\int_{-L}^{L} \\ell^2\\kappa'v' \\,\\mathrm{d}x\n$$\nThe boundary term $\\left[ -\\ell^2\\kappa'v \\right]_{-L}^{L} = -\\ell^2\\kappa'(L)v(L) + \\ell^2\\kappa'(-L)v(-L)$ is identically zero due to the homogeneous Neumann boundary conditions $\\kappa'(\\pm L)=0$. This is how the natural boundary conditions are incorporated implicitly in the weak formulation.\n\nThe resulting weak form is: find $\\kappa \\in H^1(\\Omega)$ such that for all $v \\in H^1(\\Omega)$,\n$$\n\\int_{-L}^{L} \\left(\\ell^2\\kappa'(x)v'(x) + \\kappa(x)v(x)\\right) \\,\\mathrm{d}x = \\int_{-L}^{L} \\kappa_{\\mathrm{loc}}(x)v(x) \\,\\mathrm{d}x\n$$\nThis defines a bilinear form $a(\\kappa, v) = \\int_{-L}^{L} (\\ell^2\\kappa'v' + \\kappa v)\\,\\mathrm{d}x$ and a linear functional $l(v) = \\int_{-L}^{L} \\kappa_{\\mathrm{loc}}v\\,\\mathrm{d}x$. The problem $a(\\kappa, v) = l(v)$ is well-posed by the Lax-Milgram theorem, as the bilinear form is continuous and coercive on $H^1(\\Omega)$.\n\n3) Construction of the Discrete Linear System.\n\nWe discretize the domain $\\Omega = [-L, L]$ into $N$ linear finite elements of uniform size $h = 2L/N$. The solution $\\kappa(x)$ is approximated by a piecewise linear function $\\kappa_h(x) = \\sum_{j=1}^{N+1} \\kappa_j N_j(x)$, where $\\kappa_j$ are the nodal values and $N_j(x)$ are the linear \"hat\" shape functions.\nUsing the Galerkin method, we choose the test functions $v(x)$ from the same discrete space, i.e., $v(x) = N_i(x)$ for $i=1, \\dots, N+1$. Substituting the approximation for $\\kappa_h$ into the weak form gives a system of linear equations:\n$$\n\\sum_{j=1}^{N+1} \\kappa_j \\left( \\ell^2 \\int_{-L}^{L} N_i' N_j' \\,\\mathrm{d}x + \\int_{-L}^{L} N_i N_j \\,\\mathrm{d}x \\right) = \\int_{-L}^{L} \\kappa_{\\mathrm{loc}} N_i \\,\\mathrm{d}x\n$$\nThis is a linear system $A\\boldsymbol{\\kappa} = \\boldsymbol{f}$, where $\\boldsymbol{\\kappa}$ is the vector of nodal unknowns $[\\kappa_1, \\dots, \\kappa_{N+1}]^T$. The system matrix $A$ is given by $A_{ij} = \\ell^2 K_{ij} + M_{ij}$, where\n- $K_{ij} = \\int_{-L}^{L} N_i'(x) N_j'(x) \\,\\mathrm{d}x$ are the entries of the global stiffness matrix $K$.\n- $M_{ij} = \\int_{-L}^{L} N_i(x) N_j(x) \\,\\mathrm{d}x$ are the entries of the global mass matrix $M$.\n\nThe matrices $K$ and $M$ are assembled by summing the contributions from each element's stiffness matrix $K_e$ and mass matrix $M_e$. For a linear element of length $h$, these are given as $K_e = \\frac{1}{h}\\begin{bmatrix}1 & -1\\\\ -1 & 1\\end{bmatrix}$ and $M_e = \\frac{h}{6}\\begin{bmatrix}2 & 1\\\\ 1 & 2\\end{bmatrix}$.\n\nThe right-hand side vector $\\boldsymbol{f}$ has components $f_i = \\int_{-L}^{L} \\kappa_{\\mathrm{loc}}(x) N_i(x) \\,\\mathrm{d}x$. As suggested, we approximate this using a consistent formulation. We approximate $\\kappa_{\\mathrm{loc}}(x)$ by its nodal interpolant, $\\kappa_{\\mathrm{loc}}(x) \\approx \\sum_{j=1}^{N+1} g_j N_j(x)$, where $g_j = \\kappa_{\\mathrm{loc}}(x_j)$ are the nodal values of the local driver. The integral becomes:\n$$\nf_i = \\int_{-L}^{L} \\left(\\sum_{j=1}^{N+1} g_j N_j(x)\\right) N_i(x) \\,\\mathrm{d}x = \\sum_{j=1}^{N+1} M_{ij} g_j = (M\\boldsymbol{g})_i\n$$\nThus, the right-hand side vector is $\\boldsymbol{f} = M\\boldsymbol{g}$. The final discrete system is:\n$$\n(M + \\ell^2 K)\\boldsymbol{\\kappa} = M\\boldsymbol{g}\n$$\nThis system is symmetric and positive-definite, and can be solved for the nodal values $\\boldsymbol{\\kappa}$.\n\n4-6) Implementation, FWHM Calculation, and Reporting.\n\nThe logic described in steps 1-3 is implemented in Python. The solver performs the following sequence for each test case:\n- Defines the mesh nodes and element size.\n- Assembles the global mass ($M$) and stiffness ($K$) matrices from the provided element matrices.\n- Constructs the nodal vector $\\boldsymbol{g}$ by sampling $\\kappa_{\\mathrm{loc}}(x)$ at the nodes.\n- Forms the system matrix $A = M + \\ell^2 K$ and the right-hand side vector $\\boldsymbol{f} = M\\boldsymbol{g}$.\n- Solves the linear system $A\\boldsymbol{\\kappa} = \\boldsymbol{f}$ to find the nodal solution $\\boldsymbol{\\kappa}$.\n- Computes the maximum value of the solution, $\\kappa_{\\max} = \\max(\\boldsymbol{\\kappa})$, and the half-maximum level $\\kappa_{hm} = 0.5 \\kappa_{\\max}$.\n- Checks if the solution at the boundary, $\\kappa_h(L)$, is greater than $\\kappa_{hm}$. If so, the FWHM is set to $2L$.\n- Otherwise, it searches from the center of the domain outwards to find the element where the solution crosses the $\\kappa_{hm}$ level. Linear interpolation within this element is used to find the precise crossing coordinate $x_{cross}$. The FWHM is then $2x_{cross}$.\n- Finally, the ratio $\\mathrm{FWHM}/\\ell$ is computed and reported.\n\nThe theoretical analysis for the infinite domain case, valid for $a \\ll \\ell$ and $L \\gg \\ell$, predicts that $\\mathrm{FWHM} / \\ell = 2\\ln(2) \\approx 1.386294$. The results for Cases A, B, and C are expected to be close to this value, demonstrating the regularizing property of the length scale $\\ell$. Case D involves a boundary-dominated scenario where a different result is expected. The provided code implements this procedure to obtain the required numerical values.", "answer": "```python\nimport numpy as np\n\ndef solve_fem_1d(L, ell, a, N):\n    \"\"\"\n    Solves the 1D Helmholtz-type equation using the Finite Element Method.\n\n    Args:\n        L (float): Half-length of the domain [-L, L].\n        ell (float): Internal length scale.\n        a (float): Half-width of the local driver pulse.\n        N (int): Number of elements.\n\n    Returns:\n        tuple: A tuple containing:\n            - np.ndarray: Nodal coordinates.\n            - np.ndarray: Solution vector kappa at nodes.\n    \"\"\"\n    num_nodes = N + 1\n    h = 2.0 * L / N\n\n    # Element matrices\n    M_e = (h / 6.0) * np.array([[2, 1], [1, 2]])\n    K_e = (1.0 / h) * np.array([[1, -1], [-1, 1]])\n\n    # Global matrices\n    M = np.zeros((num_nodes, num_nodes))\n    K = np.zeros((num_nodes, num_nodes))\n\n    for i in range(N):\n        # Assembly of global matrices from element matrices\n        M[i:i+2, i:i+2] += M_e\n        K[i:i+2, i:i+2] += K_e\n\n    # Nodal coordinates\n    nodes = np.linspace(-L, L, num_nodes)\n\n    # Local history driver vector g\n    g = np.zeros(num_nodes)\n    g[np.abs(nodes) <= a] = 1.0\n\n    # System matrix and right-hand side vector\n    A = M + ell**2 * K\n    b = M @ g\n\n    # Solve the linear system\n    kappa = np.linalg.solve(A, b)\n\n    return nodes, kappa\n\ndef calculate_fwhm(nodes, kappa, L):\n    \"\"\"\n    Calculates the Full Width at Half Maximum (FWHM) of the solution kappa.\n\n    Args:\n        nodes (np.ndarray): Nodal coordinates.\n        kappa (np.ndarray): Solution vector.\n        L (float): Half-length of the domain.\n\n    Returns:\n        float: The calculated FWHM.\n    \"\"\"\n    kappa_max = np.max(kappa)\n    if kappa_max == 0:\n        return 0.0\n        \n    kappa_hm = 0.5 * kappa_max\n\n    # Check if the value at the boundary is above half-maximum\n    if kappa[-1] > kappa_hm:\n        return 2.0 * L\n\n    # Find the crossing point on the positive side (x > 0)\n    # The solution is symmetric, peaking at x=0\n    # The center node index is N//2 where N is the number of elements\n    center_idx = len(nodes) // 2\n    x_cross = None\n\n    for i in range(center_idx, len(nodes) - 1):\n        if kappa[i] >= kappa_hm and kappa[i+1] <= kappa_hm:\n            # Linear interpolation to find the crossing coordinate\n            x_i = nodes[i]\n            x_i1 = nodes[i+1]\n            kappa_i = kappa[i]\n            kappa_i1 = kappa[i+1]\n            \n            # Interpolation formula: x = x1 + (x2-x1)*(y-y1)/(y2-y1)\n            x_cross = x_i + (x_i1 - x_i) * (kappa_hm - kappa_i) / (kappa_i1 - kappa_i)\n            break\n    \n    if x_cross is None:\n        # This case should be prevented by the boundary value check,\n        # but as a fallback, return 2L\n        return 2.0 * L\n\n    # FWHM is twice the distance from the center to the crossing point\n    return 2.0 * x_cross\n\ndef solve():\n    \"\"\"\n    Main function to run test cases and print results.\n    \"\"\"\n    test_cases = [\n        # (L, ell, a, N)\n        (1.0, 0.05, 0.002, 2000),  # Case A\n        (1.0, 0.10, 0.002, 2000),  # Case B\n        (1.0, 0.02, 0.002, 2000),  # Case C\n        (0.03, 0.05, 0.002, 600),   # Case D\n    ]\n\n    results = []\n    for L, ell, a, N in test_cases:\n        nodes, kappa = solve_fem_1d(L, ell, a, N)\n        fwhm = calculate_fwhm(nodes, kappa, L)\n        fwhm_ratio = fwhm / ell\n        results.append(fwhm_ratio)\n\n    # Format the output string as required\n    output_str = f\"[{','.join(f'{r:.6f}' for r in results)}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2593449"}, {"introduction": "Having established the theory and witnessed the benefits of regularization, we must address a critical question for practical implementation: how fine must the mesh be to accurately capture the physics? This exercise explores the subtle interaction between the physical internal length $\\ell$ and the mesh size $h$, quantifying the \"numerical diffusion\" introduced by the discretization itself. By analyzing the effective broadening of the averaging kernel, you will derive a crucial guideline for the ratio $\\ell/h$ needed to ensure numerical fidelity in your simulations [@problem_id:2593483].", "problem": "Consider an integral-type nonlocal averaging used to regularize strain localization in the Finite Element Method (FEM). In one-dimensional ($1$D) infinite domain, the nonlocal average of a scalar field $q(x)$ is defined as\n$$\\bar{q}(x) = \\int_{-\\infty}^{\\infty} w(|x-\\xi|)\\, q(\\xi)\\, d\\xi,$$\nwhere $w(r)$ is a normalized, symmetric kernel with characteristic internal length $\\ell$, for example the exponential kernel $w(r)=\\dfrac{1}{2\\ell}\\exp(-r/\\ell)$, which is the Green’s function of the Helmholtz operator in $1$D. The field is discretized on a uniform mesh of size $h$ using continuous, piecewise-linear ($P1$) shape functions $N_i(x)$. Define the nodal representation of the nonlocal average by lumped $L^2$ projection\n$$\\bar{q}_i := \\frac{1}{m_i}\\int_{\\mathbb{R}} N_i(x)\\, \\bar{q}(x)\\, dx,\\qquad m_i := \\int_{\\mathbb{R}} N_i(x)\\, dx,$$\non the uniform mesh so that $m_i = h$ for all $i$. For this nodal projector, the effective kernel that maps the continuous field $q$ to nodal averages $\\bar{q}_i$ is the convolution of the physical kernel $w$ with the normalized hat shape $p(x):=N_0(x)/h$ centered at the node, i.e., $w_{\\text{eff}} = w * p$. Let $\\mu_2[k] := \\int_{\\mathbb{R}} r^2 k(r)\\, dr$ denote the second central moment of any symmetric, normalized kernel $k$; recall that for symmetric, normalized kernels, the second central moment of a convolution equals the sum of second central moments, i.e., $\\mu_2[k_1 * k_2] = \\mu_2[k_1] + \\mu_2[k_2]$.\n\nUsing only these fundamentals and standard properties of $P1$ shape functions on a uniform mesh, reason about the influence of the ratio $\\ell/h$ on the effective nonlocal averaging produced by the nodal projector. In particular, identify how the squared effective internal length $\\ell_{\\text{eff}}^2$ differs from $\\ell^2$ at low wavenumbers, and propose a quantitative guideline on $\\ell/h$ that limits the added numerical diffusion (broadening) introduced by the mesh to at most $5\\%$ relative to the target continuum kernel.\n\nWhich option is correct?\n\nA. The normalized hat shape $p$ has second moment $\\mu_2[p]=h^2/6$, hence $\\mu_2[w_{\\text{eff}}]=\\mu_2[w]+\\mu_2[p]=2\\ell^2 + h^2/6$, which implies $\\ell_{\\text{eff}}^2 = \\ell^2 + h^2/12$. The relative diffusion increase is $(h/\\ell)^2/12$. To keep it $\\le 5\\%$, require $\\ell/h \\ge \\sqrt{1/0.6} \\approx 1.29$ (practically, $\\ell/h \\gtrsim 1.3$).\n\nB. The normalized hat shape $p$ has second moment $\\mu_2[p]=h^2/3$, hence $\\mu_2[w_{\\text{eff}}]=2\\ell^2 + h^2/3$, which implies $\\ell_{\\text{eff}}^2 = \\ell^2 + h^2/6$. The relative diffusion increase is $(h/\\ell)^2/6$. To keep it $\\le 5\\%$, require $\\ell/h \\ge \\sqrt{1/0.3} \\approx 1.83$.\n\nC. The mesh introduces no broadening because the Galerkin projection is exact on the finite element space, so $\\ell_{\\text{eff}}^2=\\ell^2$ for all $h$. Therefore, no constraint on $\\ell/h$ is needed to control numerical diffusion.\n\nD. The mesh reduces diffusion due to under-integration, giving $\\ell_{\\text{eff}}^2=\\ell^2 - h^2/12$. Thus to avoid excessive diffusion one should take $\\ell/h \\le 1$ so that the reduction in diffusion is compensated by the physical kernel.", "solution": "The problem statement is subjected to validation before proceeding to a solution.\n\n### Step 1: Extract Givens\n- Definition of nonlocal average in a $1$D infinite domain: $\\bar{q}(x) = \\int_{-\\infty}^{\\infty} w(|x-\\xi|)\\, q(\\xi)\\, d\\xi$.\n- Kernel $w(r)$: normalized, symmetric, with characteristic internal length $\\ell$.\n- Example kernel: exponential kernel $w(r)=\\dfrac{1}{2\\ell}\\exp(-r/\\ell)$, which is the Green’s function of the Helmholtz operator in $1$D.\n- Discretization: uniform mesh of size $h$, using continuous, piecewise-linear ($P1$) shape functions $N_i(x)$.\n- Nodal representation (lumped $L^2$ projection): $\\bar{q}_i := \\frac{1}{m_i}\\int_{\\mathbb{R}} N_i(x)\\, \\bar{q}(x)\\, dx$.\n- Mass integral: $m_i := \\int_{\\mathbb{R}} N_i(x)\\, dx$. For a uniform mesh, $m_i = h$.\n- Effective kernel definition: $w_{\\text{eff}} = w * p$, where $p(x):=N_0(x)/h$.\n- Second central moment definition: for a symmetric, normalized kernel $k$, $\\mu_2[k] := \\int_{\\mathbb{R}} r^2 k(r)\\, dr$.\n- Second moment of a convolution: for symmetric, normalized kernels $k_1$ and $k_2$, $\\mu_2[k_1 * k_2] = \\mu_2[k_1] + \\mu_2[k_2]$.\n\n### Step 2: Validate Using Extracted Givens\n- **Scientific Grounding**: The problem is well-grounded in the theory of nonlocal continuum mechanics and its numerical implementation using the Finite Element Method. The concepts presented—nonlocal averaging, kernels, lumped projection, second moments as a measure of dispersion, and the properties of convolution—are standard in computational mechanics for regularization of strain localization phenomena.\n- **Well-Posedness**: The problem is clearly stated. It provides a set of definitions and relations and asks for a quantitative analysis based on these premises. The question is specific and leads to a unique answer through logical deduction and calculation.\n- **Objectivity**: The problem is formulated in precise, objective mathematical and physical language, free from ambiguity or subjective content.\n\n### Step 3: Verdict and Action\nThe problem statement is valid. It is self-contained, scientifically sound, and well-posed. A solution will be derived.\n\n### Derivation\nThe objective is to quantify the numerical broadening introduced by the nodal projection operator and establish a guideline for the mesh size $h$ relative to the physical internal length $\\ell$. The problem suggests this broadening can be analyzed by examining the second moment of the effective kernel.\n\nThe squared characteristic length $\\ell^2$ is related to the second central moment $\\mu_2[w]$ of the physical kernel $w(r)$. The problem mentions that the exponential kernel is the Green's function for the $1$D Helmholtz operator $(1 - \\ell^2 \\frac{d^2}{dx^2})$. In Fourier space, the symbol of this operator is $(1 + \\ell^2 k^2)$, where $k$ is the wavenumber. The Fourier transform of the kernel, $\\hat{w}(k)$, is the reciprocal of this symbol, $\\hat{w}(k) = (1 + \\ell^2 k^2)^{-1}$. For small wavenumbers ($k \\to 0$), we may expand this as a Taylor series:\n$$ \\hat{w}(k) = 1 - \\ell^2 k^2 + O(k^4) $$\nAlternatively, the Fourier transform of any symmetric, normalized kernel $w(r)$ can be expanded in terms of its moments:\n$$ \\hat{w}(k) = \\int_{-\\infty}^\\infty w(r) e^{-ikr} dr = \\int_{-\\infty}^\\infty w(r) \\left(1 - ikr - \\frac{k^2r^2}{2} + \\dots\\right) dr $$\nSince $w(r)$ is normalized ($\\int w(r) dr = 1$) and symmetric ($\\int r w(r) dr = 0$), this simplifies to:\n$$ \\hat{w}(k) = 1 - \\frac{k^2}{2} \\int_{-\\infty}^\\infty r^2 w(r) dr + O(k^4) = 1 - \\frac{k^2}{2}\\mu_2[w] + O(k^4) $$\nComparing the two expansions for $\\hat{w}(k)$ at low wavenumbers, we establish the fundamental relationship:\n$$ \\ell^2 = \\frac{1}{2}\\mu_2[w] \\implies \\mu_2[w] = 2\\ell^2 $$\nThis confirms the relationship for the exponential kernel, as a direct calculation of its second moment yields $\\mu_2[w] = \\int_{-\\infty}^\\infty r^2 \\frac{1}{2\\ell}e^{-|r|/\\ell} dr = 2\\ell^2$.\n\nNext, we analyze the contribution from the mesh discretization. This is encapsulated in the normalized hat shape $p(x) = N_0(x)/h$. The standard $P1$ hat function $N_0(x)$ on a uniform mesh is defined as $N_0(x) = \\max(0, 1 - |x/h|)$. It is non-zero only for $x \\in [-h, h]$. The function $p(x)$ is a symmetric probability density function, as $\\int_{-\\infty}^\\infty p(x) dx = \\frac{1}{h} \\int_{-h}^h N_0(x) dx = \\frac{1}{h} \\times h = 1$. We calculate its second central moment, $\\mu_2[p]$:\n$$ \\mu_2[p] = \\int_{-\\infty}^\\infty r^2 p(r) dr = \\frac{1}{h} \\int_{-h}^h r^2 N_0(r) dr $$\nDue to symmetry of the integrand $r^2 N_0(r)$, we can write:\n$$ \\mu_2[p] = \\frac{2}{h} \\int_0^h r^2 (1 - r/h) dr = \\frac{2}{h} \\int_0^h (r^2 - r^3/h) dr $$\n$$ \\mu_2[p] = \\frac{2}{h} \\left[ \\frac{r^3}{3} - \\frac{r^4}{4h} \\right]_0^h = \\frac{2}{h} \\left( \\frac{h^3}{3} - \\frac{h^4}{4h} \\right) = \\frac{2}{h} \\left( \\frac{h^3}{3} - \\frac{h^3}{4} \\right) = \\frac{2}{h} \\left( \\frac{h^3}{12} \\right) = \\frac{h^2}{6} $$\nSo, the second moment of the normalized hat shape is $\\mu_2[p] = h^2/6$.\n\nThe effective kernel is given as $w_{\\text{eff}} = w * p$. Using the provided property for the second moment of a convolution:\n$$ \\mu_2[w_{\\text{eff}}] = \\mu_2[w] + \\mu_2[p] $$\nSubstituting the computed moments:\n$$ \\mu_2[w_{\\text{eff}}] = 2\\ell^2 + \\frac{h^2}{6} $$\nWe define the squared effective internal length, $\\ell_{\\text{eff}}^2$, using the same relationship as for the physical kernel: $\\ell_{\\text{eff}}^2 = \\frac{1}{2}\\mu_2[w_{\\text{eff}}]$.\n$$ \\ell_{\\text{eff}}^2 = \\frac{1}{2} \\left( 2\\ell^2 + \\frac{h^2}{6} \\right) = \\ell^2 + \\frac{h^2}{12} $$\nThis equation shows that the squared effective length is the sum of the physical squared length and a numerical term $h^2/12$, which represents the added numerical diffusion or broadening.\n\nThe relative increase in this diffusion measure is:\n$$ \\text{Relative Increase} = \\frac{\\ell_{\\text{eff}}^2 - \\ell^2}{\\ell^2} = \\frac{(\\ell^2 + h^2/12) - \\ell^2}{\\ell^2} = \\frac{h^2/12}{\\ell^2} = \\frac{1}{12}\\left(\\frac{h}{\\ell}\\right)^2 $$\nWe are asked to limit this relative increase to at most $5\\%$, or $0.05$:\n$$ \\frac{1}{12}\\left(\\frac{h}{\\ell}\\right)^2 \\le 0.05 $$\n$$ \\left(\\frac{h}{\\ell}\\right)^2 \\le 12 \\times 0.05 = 0.6 $$\nTaking the square root and inverting the fraction to solve for $\\ell/h$:\n$$ \\frac{h}{\\ell} \\le \\sqrt{0.6} \\implies \\frac{\\ell}{h} \\ge \\frac{1}{\\sqrt{0.6}} $$\n$$ \\frac{\\ell}{h} \\ge \\sqrt{\\frac{1}{0.6}} = \\sqrt{\\frac{10}{6}} = \\sqrt{\\frac{5}{3}} \\approx 1.29099... $$\nThus, to keep the numerical broadening below $5\\%$, one must satisfy the condition $\\ell/h \\gtrsim 1.29$.\n\n### Option-by-Option Analysis\n\n**A. The normalized hat shape $p$ has second moment $\\mu_2[p]=h^2/6$, hence $\\mu_2[w_{\\text{eff}}]=\\mu_2[w]+\\mu_2[p]=2\\ell^2 + h^2/6$, which implies $\\ell_{\\text{eff}}^2 = \\ell^2 + h^2/12$. The relative diffusion increase is $(h/\\ell)^2/12$. To keep it $\\le 5\\%$, require $\\ell/h \\ge \\sqrt{1/0.6} \\approx 1.29$ (practically, $\\ell/h \\gtrsim 1.3$).**\nThis option correctly states that $\\mu_2[p]=h^2/6$. It correctly uses the property of convolution and the definition relating the internal length to the second moment to derive $\\ell_{\\text{eff}}^2 = \\ell^2 + h^2/12$. The calculation of the relative diffusion increase and the resulting condition $\\ell/h \\ge \\sqrt{1/0.6} \\approx 1.29$ are also correct. Every step in this option's reasoning is consistent with our derivation.\n**Verdict: Correct.**\n\n**B. The normalized hat shape $p$ has second moment $\\mu_2[p]=h^2/3$, hence $\\mu_2[w_{\\text{eff}}]=2\\ell^2 + h^2/3$, which implies $\\ell_{\\text{eff}}^2 = \\ell^2 + h^2/6$. The relative diffusion increase is $(h/\\ell)^2/6$. To keep it $\\le 5\\%$, require $\\ell/h \\ge \\sqrt{1/0.3} \\approx 1.83$.**\nThis option begins with an incorrect premise. The second moment of the normalized hat shape is $\\mu_2[p] = h^2/6$, not $h^2/3$. This error propagates through the entire calculation, leading to an incorrect final recommendation.\n**Verdict: Incorrect.**\n\n**C. The mesh introduces no broadening because the Galerkin projection is exact on the finite element space, so $\\ell_{\\text{eff}}^2=\\ell^2$ for all $h$. Therefore, no constraint on $\\ell/h$ is needed to control numerical diffusion.**\nThis statement is fundamentally incorrect. First, the problem specifies a *lumped $L^2$ projection*, not a Galerkin projection. Second, even a Galerkin projection is not \"exact\" in the sense of introducing no error. The function being projected, $\\bar{q}(x) = (w*q)(x)$, is the convolution of the physical kernel with the field $q(x)$. This resulting function is generally smooth and not a member of the finite-dimensional space of piecewise-linear functions. Therefore, any projection onto this space will introduce an error. Our derivation explicitly shows a broadening term $h^2/12$, which contradicts the claim that $\\ell_{\\text{eff}}^2 = \\ell^2$.\n**Verdict: Incorrect.**\n\n**D. The mesh reduces diffusion due to under-integration, giving $\\ell_{\\text{eff}}^2=\\ell^2 - h^2/12$. Thus to avoid excessive diffusion one should take $\\ell/h \\le 1$ so that the reduction in diffusion is compensated by the physical kernel.**\nThis option incorrectly claims that the mesh *reduces* diffusion, leading to a negative sign in the correction term. Our derivation shows that the projection operator, involving convolution with the hat function, *adds* to the overall dispersion, resulting in $\\ell_{\\text{eff}}^2 = \\ell^2 + h^2/12$. The effect is numerical broadening (diffusion), not sharpening.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$", "id": "2593483"}]}