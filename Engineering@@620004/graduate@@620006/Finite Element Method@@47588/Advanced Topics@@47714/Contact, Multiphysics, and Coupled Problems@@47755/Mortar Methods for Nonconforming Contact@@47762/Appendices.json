{"hands_on_practices": [{"introduction": "At the heart of any nonlinear finite element analysis, such as problems involving contact, lies a system of equations that must be solved iteratively. This first practice drills down to the fundamental building blocks of this system: the residual vector, which represents the out-of-balance forces, and the tangent matrix, which represents the system's stiffness. By working through the derivation for a simplified penalty formulation [@problem_id:2581208], you will gain direct insight into how a physical contact constraint is translated into the algebraic quantities that a Newton-Raphson solver operates on.", "problem": "Consider a small-deformation, frictionless, normal contact interaction between a single slave node and a single two-node master line element in two dimensions. Assume that only the normal components of displacement are active for contact and are collected in the ordered vector of unknowns $\\{u\\} = \\big(u_{s}^{n},\\,u_{A}^{n},\\,u_{B}^{n}\\big)^{\\mathsf{T}}$, where $u_{s}^{n}$ is the slave-node normal displacement and $u_{A}^{n}$, $u_{B}^{n}$ are the master nodesâ€™ normal displacements. The master line element uses standard isoparametric shape functions $N_{A}(\\xi) = \\frac{1-\\xi}{2}$ and $N_{B}(\\xi) = \\frac{1+\\xi}{2}$ with a parametric coordinate $\\xi \\in [-1,1]$. The (known) contact point on the master lies at $\\xi=\\xi_{c} \\in [-1,1]$.\n\nUse a mortar penalty formulation for normal contact with penalty parameter $k_{n}>0$. Assume a single-point mortar quadrature located at the slave node with weight $w>0$ and a unit-valued dual shape function at that point so that the slave-side test function evaluates to one at the quadrature point. Let the signed normal gap be defined as\n$$\ng(u) \\equiv u_{s}^{n} - N_{A}(\\xi_{c})\\,u_{A}^{n} - N_{B}(\\xi_{c})\\,u_{B}^{n} + g_{0},\n$$\nwhere $g_{0}$ is the initial geometric gap in the normal direction (which may be nonzero but is known). Assume that contact is active at the current iterate so that the penalty contribution is a smooth in a neighborhood of $g(u)$.\n\nStarting from the principle of virtual work for the penalty contact contribution, derive the local mortar residual vector contribution $\\{r_{c}\\}$ and the consistent tangent matrix contribution $[K_{c}]$ to the global system corresponding to $\\{u\\}$, expressed in terms of $w$, $k_{n}$, and the master shape functions evaluated at $\\xi_{c}$. Then, using your assembled expressions, determine the single scalar entry of the tangent matrix that couples the master nodes $A$ and $B$ in the normal direction, namely the $(A,B)$ component of $[K_{c}]$, as a closed-form symbolic expression in $w$, $k_{n}$, and $\\xi_{c}$.\n\nYour final answer must be a single analytic expression for this scalar entry. Do not include units in the final boxed answer.", "solution": "The problem as stated is scientifically grounded, well-posed, and contains all necessary information for a rigorous derivation. It represents a standard exercise in the field of computational contact mechanics. Therefore, I will proceed with the solution.\n\nThe starting point for this derivation is the potential energy contribution from the penalty contact term, denoted $\\Pi_c$. For an active contact state, as assumed in the problem, the potential is a function of the squared normal gap, $g$.\n$$ \\Pi_c = \\frac{1}{2} k_{n} \\int_{\\Gamma_c} g^{2} \\, d\\Gamma $$\nHere, $k_{n} > 0$ is the penalty parameter and $\\Gamma_c$ represents the contact interface. The problem specifies a mortar formulation with a single-point quadrature rule located at the slave node, with an associated weight $w > 0$ and a unit-valued dual shape function. This discretization simplifies the integral to an algebraic expression:\n$$ \\Pi_c \\approx \\frac{1}{2} w k_{n} g^{2} $$\nThe signed normal gap $g$ is defined as a function of the nodal normal displacements $\\{u\\} = (u_{s}^{n}, u_{A}^{n}, u_{B}^{n})^{\\mathsf{T}}$:\n$$ g(\\{u\\}) \\equiv u_{s}^{n} - N_{A}(\\xi_{c}) u_{A}^{n} - N_{B}(\\xi_{c}) u_{B}^{n} + g_{0} $$\nwhere $N_{A}(\\xi_{c})$ and $N_{B}(\\xi_{c})$ are the master element shape functions evaluated at the contact point $\\xi_c$, and $g_0$ is the known initial gap. This relation can be expressed in matrix form:\n$$ g = \\{c\\}^{\\mathsf{T}}\\{u\\} + g_{0} $$\nwhere the constant vector $\\{c\\}$ is defined as:\n$$ \\{c\\}^{\\mathsf{T}} = \\begin{pmatrix} 1 & -N_{A}(\\xi_{c}) & -N_{B}(\\xi_{c}) \\end{pmatrix} $$\n\nThe contribution to the residual vector, $\\{r_c\\}$, is derived from the principle of virtual work, which is equivalent to finding the negative gradient of the potential energy with respect to the displacement vector $\\{u\\}$.\n$$ \\{r_c\\} = -\\frac{\\partial\\Pi_c}{\\partial\\{u\\}} = -\\frac{\\partial}{\\partial\\{u\\}} \\left( \\frac{1}{2} w k_{n} g^{2} \\right) $$\nApplying the chain rule, we obtain:\n$$ \\{r_c\\} = -w k_{n} g \\frac{\\partial g}{\\partial\\{u\\}} $$\nThe gradient of the gap function $g$ with respect to $\\{u\\}$ is simply the constant vector $\\{c\\}$:\n$$ \\frac{\\partial g}{\\partial\\{u\\}} = \\{c\\} $$\nThus, the residual vector contribution is:\n$$ \\{r_c\\} = -w k_{n} g \\{c\\} = -w k_{n} \\left( \\{c\\}^{\\mathsf{T}}\\{u\\} + g_{0} \\right) \\{c\\} $$\n\nNext, the consistent tangent matrix contribution, $[K_c]$, is derived by taking the negative partial derivative of the residual vector contribution $\\{r_c\\}$ with respect to the displacement vector transpose $\\{u\\}^{\\mathsf{T}}$.\n$$ [K_c] = -\\frac{\\partial\\{r_c\\}}{\\partial\\{u\\}^{\\mathsf{T}}} = -\\frac{\\partial}{\\partial\\{u\\}^{\\mathsf{T}}} \\left( -w k_{n} g \\{c\\} \\right) = w k_{n} \\frac{\\partial}{\\partial\\{u\\}^{\\mathsf{T}}} \\left( g \\{c\\} \\right) $$\nUsing the product rule for differentiation:\n$$ [K_c] = w k_{n} \\left( \\{c\\}\\frac{\\partial g}{\\partial\\{u\\}^{\\mathsf{T}}} + g \\frac{\\partial\\{c\\}}{\\partial\\{u\\}^{\\mathsf{T}}} \\right) $$\nThe derivative of the scalar gap $g$ with respect to the row vector $\\{u\\}^{\\mathsf{T}}$ is the row vector $\\{c\\}^{\\mathsf{T}}$:\n$$ \\frac{\\partial g}{\\partial\\{u\\}^{\\mathsf{T}}} = \\{c\\}^{\\mathsf{T}} $$\nThe vector $\\{c\\}$ is composed of shape functions evaluated at a fixed parametric coordinate $\\xi_c$, and is therefore constant with respect to the displacements $\\{u\\}$. Its derivative is a zero matrix:\n$$ \\frac{\\partial\\{c\\}}{\\partial\\{u\\}^{\\mathsf{T}}} = [0] $$\nSubstituting these results yields the expression for the tangent matrix:\n$$ [K_c] = w k_{n} ( \\{c\\} \\{c\\}^{\\mathsf{T}} + [0] ) = w k_{n} \\{c\\} \\{c\\}^{\\mathsf{T}} $$\nWriting this outer product explicitly:\n$$ [K_c] = w k_{n} \\begin{pmatrix} 1 \\\\ -N_{A}(\\xi_{c}) \\\\ -N_{B}(\\xi_{c}) \\end{pmatrix} \\begin{pmatrix} 1 & -N_{A}(\\xi_{c}) & -N_{B}(\\xi_{c}) \\end{pmatrix} $$\n$$ [K_c] = w k_{n} \\begin{pmatrix} 1 & -N_A(\\xi_c) & -N_B(\\xi_c) \\\\ -N_A(\\xi_c) & N_A(\\xi_c)^2 & N_A(\\xi_c)N_B(\\xi_c) \\\\ -N_B(\\xi_c) & N_A(\\xi_c)N_B(\\xi_c) & N_B(\\xi_c)^2 \\end{pmatrix} $$\nThe rows and columns of this $3 \\times 3$ matrix correspond to the ordered degrees of freedom $(u_{s}^{n}, u_{A}^{n}, u_{B}^{n})$. The problem asks for the single scalar entry that couples the master nodes $A$ and $B$, which is the component $[K_c]_{AB}$. This corresponds to the entry in the second row and third column of the matrix derived above.\n$$ [K_c]_{AB} = w k_{n} N_{A}(\\xi_{c}) N_{B}(\\xi_{c}) $$\nWe now substitute the given expressions for the isoparametric shape functions:\n$$ N_{A}(\\xi_c) = \\frac{1-\\xi_c}{2} $$\n$$ N_{B}(\\xi_c) = \\frac{1+\\xi_c}{2} $$\nThis gives the final expression for the requested component:\n$$ [K_c]_{AB} = w k_{n} \\left( \\frac{1-\\xi_c}{2} \\right) \\left( \\frac{1+\\xi_c}{2} \\right) = w k_{n} \\frac{1 - \\xi_c^2}{4} $$\nThis expression represents the coupling stiffness between the normal displacements of the two master nodes, arising from the penalty enforcement of contact with a single slave node.", "answer": "$$\n\\boxed{w k_{n} \\frac{1 - \\xi_{c}^{2}}{4}}\n$$", "id": "2581208"}, {"introduction": "The previous exercise showed how to formulate the contact contribution for a single point. Real-world interfaces are continuous and geometrically complex, often involving non-matching mesh discretizations where element boundaries do not align. Mortar methods elegantly handle this challenge by systematically decomposing the contact interface into smaller, geometrically simpler segments, each with a dedicated numerical integration rule. This hands-on calculation [@problem_id:2581175] will guide you through these essential geometric steps of interface segmentation and quadrature setup, revealing the precise mechanism for accurately computing the coupling integrals that define the contact behavior.", "problem": "In the context of the finite element method for nonconforming contact using mortar methods, consider a planar interface where the master side is a polyline composed of two linear edges sharing a common vertex and the slave side is a single straight linear edge that overlaps both master edges in the sense of closest-point orthogonal projection.\n\nLet the master edges be $\\Gamma_{M,1}$ from $\\mathbf{A}=(0,0)$ to $\\mathbf{B}=(1,0)$ and $\\Gamma_{M,2}$ from $\\mathbf{B}=(1,0)$ to $\\mathbf{C}=(1,1)$. Let the slave edge be $\\Gamma_{S}$ from $\\mathbf{P}_0=(0.4,-0.2)$ to $\\mathbf{P}_1=(1.1,0.9)$. Parameterize the slave edge by the standard affine map from the biunit interval $s\\in[-1,1]$ to the segment, $\\mathbf{x}_{S}(s)=\\mathbf{x}_{m}+s\\,\\mathbf{x}_{d}$, where $\\mathbf{x}_{m}=(\\mathbf{P}_0+\\mathbf{P}_1)/2$ and $\\mathbf{x}_{d}=(\\mathbf{P}_1-\\mathbf{P}_0)/2$. Adopt the closest-point orthogonal projection onto the master polyline with edge selection determined by comparing distances $d_1(s)=|y_{S}(s)|$ to $\\Gamma_{M,1}$ and $d_2(s)=|x_{S}(s)-1|$ to $\\Gamma_{M,2}$, and require that the orthogonal foot lies within the corresponding edge (for this geometry, this requirement is satisfied on the active portions). Define the active contact interface as the portion of $\\Gamma_{S}$ whose projections lie on $\\Gamma_{M,1}\\cup\\Gamma_{M,2}$.\n\nTasks:\n- Compute the slave-parameter partition point $s^{\\star}$ at which the active master edge changes, i.e., the unique point where $d_1(s)=d_2(s)$ with $x_{S}(s)\\le 1$ and $y_{S}(s)\\ge 0$. Use this to identify the two slave subsegments $I_1=[-1,s^{\\star}]$ paired with $\\Gamma_{M,1}$ and $I_2=[s^{\\star},1]$ paired with $\\Gamma_{M,2}$.\n- For each subsegment $I_j=[a_j,b_j]$, construct the $2$-point Gaussâ€“Legendre quadrature on $I_j$ in the slave parameter $s$ with nodes $s_{j}^{\\pm}=\\frac{a_j+b_j}{2}\\pm\\frac{b_j-a_j}{2}\\,\\frac{1}{\\sqrt{3}}$ and parametric weights $w_{j}^{\\pm}=\\frac{b_j-a_j}{2}$. Provide the corresponding physical line-integration weights $\\widehat{w}_{j}^{\\pm}=J_{S}\\,w_{j}^{\\pm}$, where $J_{S}=\\|\\mathbf{x}_{d}\\|$ is the constant line Jacobian on $\\Gamma_{S}$. For each quadrature node $s_{j}^{\\pm}$, also give the associated master-edge local coordinate $t\\in[-1,1]$: for $\\Gamma_{M,1}$, use $\\mathbf{x}_{M,1}(t)=\\big(\\frac{1+t}{2},0\\big)$ so that $t_{1}(s)=2\\,x_{S}(s)-1$; for $\\Gamma_{M,2}$, use $\\mathbf{x}_{M,2}(t)=\\big(1,\\frac{1+t}{2}\\big)$ so that $t_{2}(s)=2\\,y_{S}(s)-1$.\n- Using the above composite quadrature on $I_1\\cup I_2$, evaluate the mortar line integral\n$$\nI=\\int_{\\Gamma_{S}^{\\text{act}}}\\big(x+2y\\big)\\,\\mathrm{d}\\ell,\n$$\nwhere $(x,y)$ are the coordinates on $\\Gamma_{S}$ and $\\mathrm{d}\\ell$ is the line element. Express the final value of $I$ as an exact analytic expression with no units. Do not round.", "solution": "The problem statement is subjected to validation prior to any attempt at a solution.\n\nGivens are extracted verbatim:\n- Master edges: $\\Gamma_{M,1}$ from $\\mathbf{A}=(0,0)$ to $\\mathbf{B}=(1,0)$; $\\Gamma_{M,2}$ from $\\mathbf{B}=(1,0)$ to $\\mathbf{C}=(1,1)$.\n- Slave edge: $\\Gamma_{S}$ from $\\mathbf{P}_0=(0.4,-0.2)$ to $\\mathbf{P}_1=(1.1,0.9)$.\n- Slave parametrization: $\\mathbf{x}_{S}(s)=\\mathbf{x}_{m}+s\\,\\mathbf{x}_{d}$ for $s\\in[-1,1]$, with $\\mathbf{x}_{m}=(\\mathbf{P}_0+\\mathbf{P}_1)/2$ and $\\mathbf{x}_{d}=(\\mathbf{P}_1-\\mathbf{P}_0)/2$.\n- Projection rule: Closest-point orthogonal projection onto master polyline. Edge selection determined by comparing distances $d_1(s)=|y_{S}(s)|$ to $\\Gamma_{M,1}$ and $d_2(s)=|x_{S}(s)-1|$ to $\\Gamma_{M,2}$.\n- Active interface condition: Orthogonal foot lies within the corresponding master edge.\n- Task 1: Find the partition point $s^{\\star}$ where $d_1(s)=d_2(s)$ with $x_{S}(s)\\le 1$ and $y_{S}(s)\\ge 0$. This defines subsegments $I_1=[-1,s^{\\star}]$ and $I_2=[s^{\\star},1]$.\n- Task 2: For each subsegment $I_j$, construct a $2$-point Gaussâ€“Legendre quadrature with nodes $s_{j}^{\\pm}$, parametric weights $w_{j}^{\\pm}$, physical weights $\\widehat{w}_{j}^{\\pm}$, and associated master-edge local coordinates $t(s)$.\n- Task 3: Evaluate the integral $I=\\int_{\\Gamma_{S}^{\\text{act}}}\\big(x+2y\\big)\\,\\mathrm{d}\\ell$ using this quadrature.\n\nThe problem is scientifically grounded, well-posed, and objective. It is a standard exercise in computational mechanics involving numerical integration over a segmented domain. The data are complete, consistent, and computationally feasible. The problem does not violate any fundamental principles and is structured to admit a unique, verifiable solution. Therefore, the problem is deemed valid and a solution will be provided.\n\nFirst, we determine the slave edge parametrization. The midpoint $\\mathbf{x}_m$ and direction vector $\\mathbf{x}_d$ are:\n$$\n\\mathbf{x}_{m} = \\frac{\\mathbf{P}_0+\\mathbf{P}_1}{2} = \\frac{1}{2}\\big((0.4,-0.2) + (1.1,0.9)\\big) = (0.75, 0.35) = \\left(\\frac{3}{4}, \\frac{7}{20}\\right)\n$$\n$$\n\\mathbf{x}_{d} = \\frac{\\mathbf{P}_1-\\mathbf{P}_0}{2} = \\frac{1}{2}\\big((1.1,0.9) - (0.4,-0.2)\\big) = (0.35, 0.55) = \\left(\\frac{7}{20}, \\frac{11}{20}\\right)\n$$\nThe parametrization of the slave edge $\\Gamma_S$ is $\\mathbf{x}_S(s) = (x_S(s), y_S(s))$:\n$$\nx_S(s) = \\frac{3}{4} + \\frac{7}{20}s\n$$\n$$\ny_S(s) = \\frac{7}{20} + \\frac{11}{20}s\n$$\n\nNext, we find the slave-parameter partition point $s^{\\star}$. This is the point where the projection switches from $\\Gamma_{M,1}$ to $\\Gamma_{M,2}$, defined by $d_1(s)=d_2(s)$ under the conditions $x_S(s)\\le 1$ and $y_S(s)\\ge 0$. The distances are $d_1(s)=|y_S(s)|$ and $d_2(s)=|x_S(s)-1|$. The conditions imply we can write the equality as $y_S(s) = 1 - x_S(s)$.\n$$\n\\frac{7}{20} + \\frac{11}{20}s = 1 - \\left(\\frac{3}{4} + \\frac{7}{20}s\\right) = \\frac{1}{4} - \\frac{7}{20}s\n$$\n$$\n\\left(\\frac{11}{20} + \\frac{7}{20}\\right)s = \\frac{1}{4} - \\frac{7}{20} = \\frac{5-7}{20}\n$$\n$$\n\\frac{18}{20}s = -\\frac{2}{20} \\implies \\frac{9}{10}s = -\\frac{1}{10} \\implies s^{\\star} = -\\frac{1}{9}\n$$\nThe slave subsegments are $I_1=[-1, -1/9]$ and $I_2=[-1/9, 1]$.\n\nWe now construct the composite $2$-point Gauss-Legendre quadrature. The line Jacobian $J_S$ is constant:\n$$\nJ_{S} = \\|\\mathbf{x}_{d}\\| = \\sqrt{\\left(\\frac{7}{20}\\right)^2 + \\left(\\frac{11}{20}\\right)^2} = \\sqrt{\\frac{49+121}{400}} = \\frac{\\sqrt{170}}{20}\n$$\n\nFor subsegment $I_1 = [-1, -1/9]$:\n- Midpoint: $\\frac{a_1+b_1}{2} = -\\frac{5}{9}$. Half-length: $\\frac{b_1-a_1}{2} = \\frac{4}{9}$.\n- Nodes: $s_{1}^{\\pm} = -\\frac{5}{9} \\pm \\frac{4}{9\\sqrt{3}}$.\n- Parametric weights: $w_{1}^{\\pm} = \\frac{4}{9}$.\n- Physical weights: $\\widehat{w}_{1}^{\\pm} = J_S w_{1}^{\\pm} = \\frac{\\sqrt{170}}{20} \\cdot \\frac{4}{9} = \\frac{\\sqrt{170}}{45}$.\n- Master coordinate mapping for $\\Gamma_{M,1}$: $t_1(s) = 2x_S(s)-1 = 2(\\frac{3}{4}+\\frac{7}{20}s)-1 = \\frac{1}{2}+\\frac{7}{10}s$.\n- Master coordinates at nodes: $t_1(s_{1}^{\\pm}) = \\frac{1}{2} + \\frac{7}{10}\\left(-\\frac{5}{9} \\pm \\frac{4}{9\\sqrt{3}}\\right) = -\\frac{1}{18} \\pm \\frac{14}{90\\sqrt{3}} = -\\frac{1}{18} \\pm \\frac{7\\sqrt{3}}{135}$.\n\nFor subsegment $I_2 = [-1/9, 1]$:\n- Midpoint: $\\frac{a_2+b_2}{2} = \\frac{4}{9}$. Half-length: $\\frac{b_2-a_2}{2} = \\frac{5}{9}$.\n- Nodes: $s_{2}^{\\pm} = \\frac{4}{9} \\pm \\frac{5}{9\\sqrt{3}}$.\n- Parametric weights: $w_{2}^{\\pm} = \\frac{5}{9}$.\n- Physical weights: $\\widehat{w}_{2}^{\\pm} = J_S w_{2}^{\\pm} = \\frac{\\sqrt{170}}{20} \\cdot \\frac{5}{9} = \\frac{\\sqrt{170}}{36}$.\n- Master coordinate mapping for $\\Gamma_{M,2}$: $t_2(s) = 2y_S(s)-1 = 2(\\frac{7}{20}+\\frac{11}{20}s)-1 = -\\frac{3}{10}+\\frac{11}{10}s$.\n- Master coordinates at nodes: $t_2(s_{2}^{\\pm}) = -\\frac{3}{10} + \\frac{11}{10}\\left(\\frac{4}{9} \\pm \\frac{5}{9\\sqrt{3}}\\right) = \\frac{17}{90} \\pm \\frac{11\\sqrt{3}}{54}$.\n\nFinally, we evaluate the integral $I=\\int_{\\Gamma_{S}^{\\text{act}}}\\big(x+2y\\big)\\,\\mathrm{d}\\ell$. The integrand on $\\Gamma_S$ is:\n$$\nf(s) = x_S(s)+2y_S(s) = \\left(\\frac{3}{4}+\\frac{7}{20}s\\right) + 2\\left(\\frac{7}{20}+\\frac{11}{20}s\\right) = \\frac{29}{20} + \\frac{29}{20}s = \\frac{29}{20}(1+s)\n$$\nThe integral is approximated by the sum: $I \\approx \\sum_{k \\in \\{-,+\\}} f(s_{1}^{k}) \\widehat{w}_{1}^{k} + \\sum_{k \\in \\{-,+\\}} f(s_{2}^{k}) \\widehat{w}_{2}^{k}$.\nContribution from $I_1$:\n$$\nI_1 = \\widehat{w}_{1}^{\\pm} \\left( f(s_1^-) + f(s_1^+) \\right) = \\frac{\\sqrt{170}}{45} \\left( \\frac{29}{20}(1+s_1^-) + \\frac{29}{20}(1+s_1^+) \\right)\n$$\n$$\nI_1 = \\frac{29\\sqrt{170}}{900} \\left( (1 - \\frac{5}{9} - \\frac{4}{9\\sqrt{3}}) + (1 - \\frac{5}{9} + \\frac{4}{9\\sqrt{3}}) \\right) = \\frac{29\\sqrt{170}}{900} \\left(2 \\cdot \\frac{4}{9}\\right) = \\frac{29\\sqrt{170}}{900} \\cdot \\frac{8}{9} = \\frac{58\\sqrt{170}}{2025}\n$$\nContribution from $I_2$:\n$$\nI_2 = \\widehat{w}_{2}^{\\pm} \\left( f(s_2^-) + f(s_2^+) \\right) = \\frac{\\sqrt{170}}{36} \\left( \\frac{29}{20}(1+s_2^-) + \\frac{29}{20}(1+s_2^+) \\right)\n$$\n$$\nI_2 = \\frac{29\\sqrt{170}}{720} \\left( (1 + \\frac{4}{9} - \\frac{5}{9\\sqrt{3}}) + (1 + \\frac{4}{9} + \\frac{5}{9\\sqrt{3}}) \\right) = \\frac{29\\sqrt{170}}{720} \\left(2 \\cdot \\frac{13}{9}\\right) = \\frac{29\\sqrt{170}}{720} \\cdot \\frac{26}{9} = \\frac{377\\sqrt{170}}{3240}\n$$\nTotal integral:\n$$\nI = I_1 + I_2 = \\frac{58\\sqrt{170}}{2025} + \\frac{377\\sqrt{170}}{3240}\n$$\nThe least common multiple of $2025=3^4 \\cdot 5^2$ and $3240=2^3 \\cdot 3^4 \\cdot 5$ is $16200$.\n$$\nI = \\frac{58 \\cdot 8}{16200}\\sqrt{170} + \\frac{377 \\cdot 5}{16200}\\sqrt{170} = \\frac{464 + 1885}{16200}\\sqrt{170} = \\frac{2349\\sqrt{170}}{16200}\n$$\nSimplifying the fraction, since $2349 = 29 \\cdot 81 = 29 \\cdot 3^4$ and $16200 = 200 \\cdot 81 = 200 \\cdot 3^4$:\n$$\nI = \\frac{29 \\cdot 3^4}{200 \\cdot 3^4}\\sqrt{170} = \\frac{29\\sqrt{170}}{200}\n$$\nAs the integrand is a linear polynomial in $s$, the $2$-point Gauss quadrature provides the exact value of the integral over each subinterval, and thus the composite quadrature is exact for the total integral.", "answer": "$$\n\\boxed{\\frac{29\\sqrt{170}}{200}}\n$$", "id": "2581175"}, {"introduction": "Having understood the core algebraic formulation and the geometric details of integration, the final step is to combine these concepts into a robust and efficient computer algorithm. This capstone practice provides a complete blueprint for a one-dimensional mortar assembly pipeline, guiding you from an efficient search for contacting element pairs to the final scatter-add assembly of the global coupling matrix. By following the detailed implementation logic and utilizing the built-in verification checks [@problem_id:2581187], you will develop a practical, code-level understanding of how the abstract principles of mortar methods are translated into a functional and verifiable program.", "problem": "You are asked to implement a minimal but complete mortar segment assembly for one-dimensional nonconforming contact in the Finite Element Method (FEM). The goal is to algorithmically construct mortar segments from two nonmatching meshes that share a potential contact interface on the real line, and to assemble the interface coupling integrals between slave and master basis functions. Your implementation must demonstrate the following steps, using only first principles and standard definitions of one-dimensional linear finite elements and numerical quadrature.\n\nGiven:\n- A one-dimensional master mesh with strictly increasing node coordinates $\\{x^{m}_0,\\dots,x^{m}_{n_m-1}\\}$ on the real line, and a one-dimensional slave mesh with strictly increasing node coordinates $\\{x^{s}_0,\\dots,x^{s}_{n_s-1}\\}$ on the real line. Both meshes are composed of linear elements that are open intervals between consecutive nodes.\n- A quadrature order $p \\in \\mathbb{N}$ specifying the use of $p$-point Gaussâ€“Legendre quadrature on each mortar segment.\n- A positive tolerance $\\varepsilon > 0$ to decide whether an intersection length is nonzero.\n- The convention that the slave side defines the mortar side, and the master side defines the nonmortar side.\n- Degrees of Freedom (DOF) are associated with the mesh nodes.\n\nImplement the following steps:\n\n1) Contact pair search:\n- For each slave element interval $[x^{s}_i,x^{s}_{i+1}]$, find all master element intervals $[x^{m}_j,x^{m}_{j+1}]$ whose intersection length with the slave interval exceeds $\\varepsilon$. Use a linear-time two-pointer sweep exploiting the sorted node coordinates to ensure an $\\mathcal{O}(n_s + n_m)$ traversal in the average case.\n\n2) Segment construction:\n- For any overlapping pair of elements $(i,j)$, construct the mortar segment as the closed interval $[a,b]$ with $a=\\max(x^{s}_i,x^{m}_j)$ and $b=\\min(x^{s}_{i+1},x^{m}_{j+1})$. Discard the segment if $b-a \\le \\varepsilon$. For each accepted segment, record:\n  - The indices $(i,i+1)$ of the slave element nodes and $(j,j+1)$ of the master element nodes for local-to-global mapping.\n  - The segment endpoints $a$ and $b$.\n\n3) Quadrature assignment:\n- On each segment $[a,b]$, place $p$ Gaussâ€“Legendre abscissae $\\{\\xi_k\\}_{k=1}^p$ and weights $\\{\\omega_k\\}_{k=1}^p$ on the reference interval $[-1,1]$, and map them to physical points $\\{x_k\\}_{k=1}^p$ and physical weights $\\{w_k\\}_{k=1}^p$ by $x_k=\\tfrac{a+b}{2}+\\tfrac{b-a}{2}\\xi_k$ and $w_k=\\tfrac{b-a}{2}\\omega_k$.\n\n4) Evaluation of linear shape functions:\n- For any element with endpoints $[\\alpha,\\beta]$ and any physical point $x \\in [\\alpha,\\beta]$, compute the local coordinate $\\hat{x}=2\\dfrac{x-\\alpha}{\\beta-\\alpha}-1$, and evaluate the two linear shape functions $N_1(x)=\\dfrac{1-\\hat{x}}{2}$ and $N_2(x)=\\dfrac{1+\\hat{x}}{2}$.\n\n5) Assembly of the mortar coupling matrix:\n- Define the coupling matrix $C \\in \\mathbb{R}^{n_s \\times n_m}$ by\n  $$C_{IJ} \\approx \\sum_{\\text{segments}} \\sum_{k=1}^p w_k \\, N^s_I(x_k)\\, N^m_J(x_k),$$\n  where $I \\in \\{0,\\dots,n_s-1\\}$ and $J \\in \\{0,\\dots,n_m-1\\}$ index slave and master global nodes, respectively. The contribution to $C_{IJ}$ from a segment whose overlapping elements have slave local nodes $(i,i+1)$ and master local nodes $(j,j+1)$ is nonzero only for $(I,J) \\in \\{i,i+1\\} \\times \\{j,j+1\\}$. Use the local-to-global node mappings to scatter-add each segmentâ€™s $2\\times 2$ contributions into $C$.\n\n6) Output diagnostics to validate algorithmic correctness:\n- Let $L$ denote the total overlap length, i.e., the sum of lengths $b-a$ over all accepted segments. Due to the partition-of-unity property of the linear basis on each mesh, one expects\n  $$\\sum_{I=0}^{n_s-1}\\sum_{J=0}^{n_m-1} C_{IJ} \\approx L.$$\n- For each test case, compute and report the following quantities:\n  - The number of accepted segments $n_{\\mathrm{seg}}$.\n  - The number of entries of $C$ with magnitude strictly larger than a threshold $\\tau$ (treated as numerically nonzero), denoted $\\mathrm{nnz}$.\n  - The scalar $S=\\sum_{I,J} C_{IJ}$.\n  - The Frobenius norm $F=\\sqrt{\\sum_{I,J} C_{IJ}^2}$.\n  - The absolute balance error $E=|S-L|$.\n\nYour program must implement the full pipeline above and compute the five diagnostics per test case. All floating-point diagnostics must be rounded to $6$ decimal places in the final output.\n\nTest Suite:\n- Case $1$ (general nonmatching overlap):\n  - Master nodes: $[0.0,\\,0.5,\\,1.0]$.\n  - Slave nodes: $[0.2,\\,0.4,\\,0.6,\\,0.8,\\,1.0]$.\n  - Quadrature order: $p=2$.\n  - Intersection tolerance: $\\varepsilon = 10^{-12}$.\n  - Nonzero threshold: $\\tau = 10^{-12}$.\n- Case $2$ (partial overlap with a gap and split across master elements):\n  - Master nodes: $[0.0,\\,0.4,\\,1.0]$.\n  - Slave nodes: $[-0.2,\\,0.3,\\,0.7]$.\n  - Quadrature order: $p=3$.\n  - Intersection tolerance: $\\varepsilon = 10^{-12}$.\n  - Nonzero threshold: $\\tau = 10^{-12}$.\n- Case $3$ (edge touch only, zero-measure overlap):\n  - Master nodes: $[0.0,\\,1.0]$.\n  - Slave nodes: $[1.0,\\,2.0]$.\n  - Quadrature order: $p=2$.\n  - Intersection tolerance: $\\varepsilon = 10^{-12}$.\n  - Nonzero threshold: $\\tau = 10^{-12}$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each test case result must itself be a list of five entries in the order $[n_{\\mathrm{seg}},\\mathrm{nnz},S,F,E]$. The entire output therefore has the form\n  $$\\big[[n_{\\mathrm{seg}}^{(1)},\\mathrm{nnz}^{(1)},S^{(1)},F^{(1)},E^{(1)}],\\,[n_{\\mathrm{seg}}^{(2)},\\mathrm{nnz}^{(2)},S^{(2)},F^{(2)},E^{(2)}],\\,[n_{\\mathrm{seg}}^{(3)},\\mathrm{nnz}^{(3)},S^{(3)},F^{(3)},E^{(3)}]\\big].$$\nAll floating-point entries in the output must be rounded to exactly $6$ decimal places, and all integers must be printed as integers.", "solution": "The problem statement is valid. It specifies a well-defined computational procedure for assembling the coupling matrix for one-dimensional nonconforming contact using a mortar method formulation in the context of the Finite Element Method. All parameters, equations, and boundary conditions are provided, and the implementation steps are logically sound and consistent with established principles of numerical analysis and computational mechanics. We proceed with the solution.\n\nThe objective is to implement an algorithm that constructs mortar segments from two non-matching one-dimensional meshes and assembles the corresponding coupling integrals. The algorithm proceeds through a sequence of discrete, well-defined steps.\n\nFirst, a contact pair search is conducted. Given a slave mesh with node coordinates $\\{x^{s}_i\\}_{i=0}^{n_s-1}$ and a master mesh with nodes $\\{x^{m}_j\\}_{j=0}^{n_m-1}$, we must identify all pairs of slave elements $[x^s_i, x^s_{i+1}]$ and master elements $[x^m_j, x^m_{j+1}]$ that overlap. Since the nodal coordinates for both meshes are strictly increasing, this search can be performed efficiently in $\\mathcal{O}(n_s + n_m)$ time using a two-pointer sweep algorithm. We initialize pointers to the first slave and master elements, and advance the pointer corresponding to the element that ends at a smaller coordinate.\n\nFor each identified overlapping pair of elements, a mortar segment is constructed. The segment is defined as the closed interval $[a, b]$, where $a = \\max(x^s_i, x^m_j)$ and $b = \\min(x^s_{i+1}, x^m_{j+1})$. A segment is considered for further processing only if its length, $b - a$, exceeds a given positive tolerance $\\varepsilon$. For each valid segment, the indices of the parent slave nodes $(i, i+1)$ and master nodes $(j, j+1)$ are recorded for subsequent assembly.\n\nNext, numerical quadrature is set up for each mortar segment $[a, b]$. We use a $p$-point Gauss-Legendre quadrature rule, defined by abscissae $\\{\\xi_k\\}_{k=1}^p$ and weights $\\{\\omega_k\\}_{k=1}^p$ on the canonical interval $[-1, 1]$. These are mapped to the physical segment $[a, b]$ to obtain the physical quadrature points $\\{x_k\\}_{k=1}^p$ and weights $\\{w_k\\}_{k=1}^p$ using the affine transformation:\n$$\nx_k = \\frac{a+b}{2} + \\frac{b-a}{2}\\xi_k, \\quad w_k = \\frac{b-a}{2}\\omega_k\n$$\n\nThe evaluation of the one-dimensional linear finite element basis functions, or shape functions, is required at each physical quadrature point $x_k$. For a generic element defined on the interval $[\\alpha, \\beta]$, any point $x \\in [\\alpha, \\beta]$ is first mapped to a local coordinate $\\hat{x} \\in [-1, 1]$ via the transformation $\\hat{x} = 2\\frac{x-\\alpha}{\\beta-\\alpha} - 1$. The two linear shape functions associated with the element's nodes are then given by:\n$$\nN_1(\\hat{x}) = \\frac{1-\\hat{x}}{2}, \\quad N_2(\\hat{x}) = \\frac{1+\\hat{x}}{2}\n$$\n$N_1$ corresponds to the node at $\\alpha$ (where $\\hat{x}=-1$), and $N_2$ corresponds to the node at $\\beta$ (where $\\hat{x}=1$).\n\nWith these components, the mortar coupling matrix $C \\in \\mathbb{R}^{n_s \\times n_m}$ is assembled. Its entries $C_{IJ}$ represent the coupling between the $I$-th global slave Degree of Freedom (DOF) and the $J$-th global master DOF. The matrix is computed by summing contributions from all mortar segments. For each segment, we integrate the product of slave and master basis functions, approximated using the prepared quadrature rule:\n$$\nC_{IJ} \\approx \\sum_{\\text{segments}} \\sum_{k=1}^p w_k \\, N^s_I(x_k)\\, N^m_J(x_k)\n$$\nIn practice, for a segment derived from slave element $(i, i+1)$ and master element $(j, j+1)$, contributions are only made to a local $2 \\times 2$ block of the global matrix $C$. The local matrix contribution is computed as:\n$$\nC^{\\text{local}}_{\\alpha\\beta} = \\sum_{k=1}^p w_k \\, N^s_\\alpha(x_k) \\, N^m_\\beta(x_k)\n$$\nwhere $\\alpha, \\beta \\in \\{1, 2\\}$ index the local nodes of the slave and master elements, respectively. These local contributions are then scattered into the global matrix $C$ at the positions corresponding to the global node indices, i.e., $C_{i,j}, C_{i, j+1}, C_{i+1, j}, C_{i+1, j+1}$.\n\nFinally, to validate the implementation, several diagnostic quantities are computed. The total overlap length $L$ is the sum of the lengths of all accepted mortar segments. Due to the partition of unity property of the basis functions, $\\sum_I N^s_I(x) = 1$ and $\\sum_J N^m_J(x) = 1$ for any $x$ within their respective domains. This implies that the sum of all entries in the coupling matrix, $S = \\sum_{I,J} C_{IJ}$, must approximate the total integrated length:\n$$\nS = \\sum_{I,J} \\sum_{\\text{segments}} \\int_{\\text{segment}} N^s_I(x) N^m_J(x) dx = \\sum_{\\text{segments}} \\int_{\\text{segment}} \\left(\\sum_I N^s_I(x)\\right) \\left(\\sum_J N^m_J(x)\\right) dx = \\sum_{\\text{segments}} \\int_{\\text{segment}} 1 \\cdot 1 \\, dx = L\n$$\nThe absolute balance error, $E = |S-L|$, quantifies the accuracy of the numerical integration. If the quadrature order $p$ is sufficiently high, this error should be close to machine precision. Additional diagnostics include the number of segments $n_{\\mathrm{seg}}$, the number of non-zero entries in $C$ above a threshold $\\tau$, denoted $\\mathrm{nnz}$, and the Frobenius norm of the matrix, $F = \\sqrt{\\sum_{I,J} C_{IJ}^2}$. These quantities provide a comprehensive verification of the implemented algorithm.", "answer": "[[5,10,0.800000,0.170587,0.000000],[3,8,0.700000,0.203308,0.000000],[0,0,0.000000,0.000000,0.000000]]", "id": "2581187"}]}