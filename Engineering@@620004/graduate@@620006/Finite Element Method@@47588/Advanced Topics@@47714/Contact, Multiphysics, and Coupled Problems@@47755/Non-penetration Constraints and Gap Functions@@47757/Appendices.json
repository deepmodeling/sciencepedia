{"hands_on_practices": [{"introduction": "Before deploying a numerical method for complex simulations, we must ensure it passes basic consistency checks. The patch test is a fundamental benchmark in finite element analysis, designed to verify if a formulation can exactly reproduce a simple state, such as constant stress or, in this case, constant contact pressure. This exercise provides a direct, hands-on opportunity to apply the traction patch test to three common contact interface discretizations and rigorously compare their performance in this ideal scenario [@problem_id:2584061].", "problem": "A straight, planar contact interface is modeled as a one-dimensional segment $\\Gamma = [0,1]$ along the $x$-axis, with outward unit normal $\\boldsymbol{n}$ fixed and constant. Two linearly elastic bodies are pressed together along $\\Gamma$ such that the exact normal contact traction (contact pressure) is uniform: $p(x) \\equiv p_{0}$ with $p_{0} > 0$. The exact kinematic gap function in the normal direction is $g(x) \\equiv 0$ everywhere on $\\Gamma$, and the non-penetration complementarity reduces to the consistent state $g(x)=0$, $p(x)=p_{0}$.\n\nConsider the traction patch test: the weak contact equilibrium statement on $\\Gamma$ is that for all admissible virtual normal gaps $w(x)$,\n$$\n\\int_{\\Gamma} p(x)\\,w(x)\\,\\mathrm{d}x \\;=\\; \\int_{0}^{1} p_{0}\\,w(x)\\,\\mathrm{d}x.\n$$\nLet the master side be discretized by a single linear finite element with nodal shape functions $N_{1}(x)=1-x$ and $N_{2}(x)=x$ over $[0,1]$. Let the slave side be discretized by two linear elements with slave nodes located at $x^{s}=\\{0,\\,0.3,\\,1\\}$, producing element subintervals $[0,0.3]$ and $[0.3,1]$.\n\nApproximate the contact traction using three different interface discretizations, each defining a discrete traction field $p_{h}(x)$ on $\\Gamma$ through the fundamental weak form above:\n\n1) Node-to-segment method: take the slave-side nodal shape functions $\\{\\psi_{i}\\}_{i=1}^{3}$ as test functions for the contact interaction and employ nodal mass-lumped quadrature on the slave mesh so that $\\int_{0}^{1} q(x)\\,\\psi_{i}(x)\\,\\mathrm{d}x \\approx w_{i}\\,q(x_{i}^{s})$, where the nodal weights are the standard patch lengths $w_{1}=\\tfrac{1}{2}(0.3-0)$, $w_{2}=\\tfrac{1}{2}[(0.3-0)+(1-0.3)]$, and $w_{3}=\\tfrac{1}{2}(1-0.3)$. Derive the discrete traction field $p_{h}^{\\mathrm{N2S}}(x)$ implied by this discretization and compute its normalized $L^{2}$ error with respect to $p_{0}$.\n\n2) Segment-to-segment method: approximate the traction as piecewise constant per slave segment, $p_{h}^{\\mathrm{S2S}}(x)=t_{1}$ for $x\\in[0,0.3]$ and $p_{h}^{\\mathrm{S2S}}(x)=t_{2}$ for $x\\in[0.3,1]$. Enforce the weak equilibrium with the master test functions $N_{1}(x)$ and $N_{2}(x)$ using exact integration on each subinterval to determine $t_{1}$ and $t_{2}$. Compute the normalized $L^{2}$ error of $p_{h}^{\\mathrm{S2S}}(x)$ with respect to $p_{0}$.\n\n3) Mortar method: assume a dual (biorthogonal) mortar discretization that preserves constants, i.e., the discrete interface bilinear form exactly reproduces integrals of constant tractions against the master test space spanned by $\\{N_{1},N_{2}\\}$. Derive the discrete traction field $p_{h}^{\\mathrm{M}}(x)$ and compute its normalized $L^{2}$ error with respect to $p_{0}$.\n\nUse the normalized $L^{2}$ error on $\\Gamma$,\n$$\nE\\big(p_{h}\\big) \\;=\\; \\frac{\\big\\|p_{h}-p_{0}\\big\\|_{L^{2}(0,1)}}{\\big\\|p_{0}\\big\\|_{L^{2}(0,1)}}\n\\;=\\; \\frac{\\left(\\int_{0}^{1}\\big(p_{h}(x)-p_{0}\\big)^{2}\\,\\mathrm{d}x\\right)^{1/2}}{\\left(\\int_{0}^{1}p_{0}^{2}\\,\\mathrm{d}x\\right)^{1/2}}.\n$$\nFinally, compute the single scalar\n$$\nE_{\\max} \\;=\\; \\max\\!\\big\\{\\,E\\!\\big(p_{h}^{\\mathrm{N2S}}\\big),\\;E\\!\\big(p_{h}^{\\mathrm{S2S}}\\big),\\;E\\!\\big(p_{h}^{\\mathrm{M}}\\big)\\big\\}.\n$$\nExpress your final answer as a pure number (no units). No rounding is required.", "solution": "The problem statement constitutes a well-posed traction patch test for three different one-dimensional contact interface discretizations. The task is to determine the discrete traction field $p_h(x)$ for each method and calculate its normalized $L^2$ error with respect to the exact uniform traction $p(x) = p_0$. The problem is scientifically grounded and all necessary data and definitions are provided. I will proceed with the solution.\n\nFor simplicity and without loss of generality, we can set the constant traction $p_0=1$. The final error is a normalized quantity and is independent of the value of $p_0$. The weak contact equilibrium statement for a discrete traction field $p_h(x)$ and a test function $w(x)$ is\n$$\n\\int_{0}^{1} p_h(x)\\,w(x)\\,\\mathrm{d}x = \\int_{0}^{1} 1 \\cdot w(x)\\,\\mathrm{d}x\n$$\nThe normalized $L^2$ error is given by\n$$\nE(p_h) = \\frac{\\left(\\int_{0}^{1}(p_h(x)-1)^{2}\\,\\mathrm{d}x\\right)^{1/2}}{\\left(\\int_{0}^{1}1^{2}\\,\\mathrm{d}x\\right)^{1/2}} = \\left(\\int_{0}^{1}(p_h(x)-1)^{2}\\,\\mathrm{d}x\\right)^{1/2}\n$$\n\n**1) Node-to-Segment (N2S) Method**\n\nFor the node-to-segment method, the test functions are the slave-side nodal shape functions, $w(x) = \\psi_i(x)$ for $i=1,2,3$. The discrete weak form for each test function is\n$$\n\\int_{0}^{1} p_h^{\\mathrm{N2S}}(x)\\,\\psi_{i}(x)\\,\\mathrm{d}x = \\int_{0}^{1} 1 \\cdot \\psi_i(x)\\,\\mathrm{d}x\n$$\nThe problem specifies using nodal mass-lumped quadrature for the left-hand side integral, which is defined as $\\int_{0}^{1} q(x)\\,\\psi_{i}(x)\\,\\mathrm{d}x \\approx w_{i}\\,q(x_{i}^{s})$. The slave nodes are located at $x^s_1=0$, $x^s_2=0.3$, and $x^s_3=1$. Applying this rule, the weak form becomes:\n$$\nw_i\\,p_h^{\\mathrm{N2S}}(x_i^s) = \\int_{0}^{1} \\psi_i(x)\\,\\mathrm{d}x\n$$\nThe integral of a linear finite element shape function over the domain is the area under the \"hat\", which is precisely the standard definition of the nodal lumping weight $w_i$. The problem provides these weights: $w_1 = 0.15$, $w_2 = 0.5$, and $w_3 = 0.35$. Let us verify this:\n$$\n\\int_0^1 \\psi_1(x)dx = \\int_0^{0.3} \\frac{0.3-x}{0.3} dx = \\frac{1}{2} \\times 0.3 \\times 1 = 0.15 = w_1\n$$\n$$\n\\int_0^1 \\psi_2(x)dx = \\int_0^{0.3} \\frac{x}{0.3} dx + \\int_{0.3}^1 \\frac{1-x}{0.7} dx = \\frac{1}{2}(0.3) + \\frac{1}{2}(0.7) = 0.5 = w_2\n$$\n$$\n\\int_0^1 \\psi_3(x)dx = \\int_{0.3}^1 \\frac{x-0.3}{0.7} dx = \\frac{1}{2}(0.7) = 0.35 = w_3\n$$\nThe equations for the nodal values of traction thus simplify to:\n$$\nw_i\\,p_h^{\\mathrm{N2S}}(x_i^s) = w_i \\implies p_h^{\\mathrm{N2S}}(x_i^s) = 1 \\quad \\text{for } i=1,2,3.\n$$\nSo, we have the traction values $p_h^{\\mathrm{N2S}}(0)=1$, $p_h^{\\mathrm{N2S}}(0.3)=1$, and $p_h^{\\mathrm{N2S}}(1)=1$.\nThe discrete traction field $p_h(x)$ is a field on the master side, which is discretized by a single linear element. Therefore, it is natural to represent $p_h(x)$ using the master-side shape functions $N_1(x)=1-x$ and $N_2(x)=x$:\n$$\np_h^{\\mathrm{N2S}}(x) = c_1 N_1(x) + c_2 N_2(x)\n$$\nwhere $c_1$ and $c_2$ are the nodal traction values at the master nodes ($x=0$ and $x=1$).\nUsing the results from the slave node evaluation:\nAt $x=0$: $p_h^{\\mathrm{N2S}}(0) = c_1 N_1(0) + c_2 N_2(0) = c_1$. Since $p_h^{\\mathrm{N2S}}(0)=1$, we have $c_1=1$.\nAt $x=1$: $p_h^{\\mathrm{N2S}}(1) = c_1 N_1(1) + c_2 N_2(1) = c_2$. Since $p_h^{\\mathrm{N2S}}(1)=1$, we have $c_2=1$.\nThus, the traction field is:\n$$\np_h^{\\mathrm{N2S}}(x) = 1 \\cdot (1-x) + 1 \\cdot x = 1\n$$\nThis also satisfies the condition at the intermediate slave node $x=0.3$: $p_h^{\\mathrm{N2S}}(0.3) = 1 \\cdot (1-0.3) + 1 \\cdot 0.3 = 0.7 + 0.3 = 1$.\nThe discrete traction field is identical to the exact field, $p_h^{\\mathrm{N2S}}(x)=1$. The error is:\n$$\nE(p_h^{\\mathrm{N2S}}) = \\left(\\int_{0}^{1}(1-1)^{2}\\,\\mathrm{d}x\\right)^{1/2} = 0\n$$\n\n**2) Segment-to-Segment (S2S) Method**\n\nThe traction field is approximated as piecewise constant: $p_h^{\\mathrm{S2S}}(x) = t_1$ for $x \\in [0,0.3]$ and $p_h^{\\mathrm{S2S}}(x) = t_2$ for $x \\in [0.3,1]$. The test functions are the master shape functions $N_1(x)=1-x$ and $N_2(x)=x$. We form a $2 \\times 2$ system of equations for $t_1$ and $t_2$.\n\nFor the test function $w(x)=N_1(x)$:\n$$\n\\int_0^{0.3} t_1(1-x)dx + \\int_{0.3}^1 t_2(1-x)dx = \\int_0^1 (1-x)dx\n$$\n$$\nt_1 \\left[x-\\frac{x^2}{2}\\right]_0^{0.3} + t_2 \\left[x-\\frac{x^2}{2}\\right]_{0.3}^1 = \\left[x-\\frac{x^2}{2}\\right]_0^1\n$$\n$$\nt_1 (0.3 - \\frac{0.09}{2}) + t_2 \\left((1-\\frac{1}{2}) - (0.3 - \\frac{0.09}{2})\\right) = \\frac{1}{2}\n$$\n$$\n0.255\\,t_1 + 0.245\\,t_2 = 0.5\n$$\nFor the test function $w(x)=N_2(x)$:\n$$\n\\int_0^{0.3} t_1 x dx + \\int_{0.3}^1 t_2 x dx = \\int_0^1 x dx\n$$\n$$\nt_1 \\left[\\frac{x^2}{2}\\right]_0^{0.3} + t_2 \\left[\\frac{x^2}{2}\\right]_{0.3}^1 = \\left[\\frac{x^2}{2}\\right]_0^1\n$$\n$$\nt_1 (\\frac{0.09}{2}) + t_2 (\\frac{1}{2} - \\frac{0.09}{2}) = \\frac{1}{2}\n$$\n$$\n0.045\\,t_1 + 0.455\\,t_2 = 0.5\n$$\nWe have a system of two linear equations:\n1) $0.255\\,t_1 + 0.245\\,t_2 = 0.5$\n2) $0.045\\,t_1 + 0.455\\,t_2 = 0.5$\nSubtracting the second equation from the first gives:\n$$\n(0.255 - 0.045)t_1 + (0.245 - 0.455)t_2 = 0 \\implies 0.21 t_1 - 0.21 t_2 = 0 \\implies t_1 = t_2\n$$\nSubstituting $t_1=t_2$ into the first equation:\n$$\n0.255\\,t_1 + 0.245\\,t_1 = 0.5 \\implies 0.5\\,t_1 = 0.5 \\implies t_1 = 1\n$$\nTherefore, $t_1 = t_2 = 1$. The discrete traction field is $p_h^{\\mathrm{S2S}}(x)=1$ for all $x \\in [0,1]$. This is because the space of trial functions (piecewise constants) contains the exact solution (a constant). The projection of the exact solution onto this space is the solution itself. The error is:\n$$\nE(p_h^{\\mathrm{S2S}}) = \\left(\\int_{0}^{1}(1-1)^{2}\\,\\mathrm{d}x\\right)^{1/2} = 0\n$$\n\n**3) Mortar Method**\n\nThe problem states that the mortar discretization \"preserves constants\". This is a fundamental property of well-formulated mortar methods, ensuring they pass the patch test for constant fields. Formally, it means that for a constant traction field $p(x) = p_0$, the corresponding discrete traction field $p_h^{\\mathrm{M}}(x)$ is exactly $p_0$.\nLet's confirm why this must be the case. The method seeks $p_h^{\\mathrm{M}}$ in a space of multiplier functions $M_h$ such that for all test functions $w_h$ in the master space $W_h = \\text{span}\\{N_1, N_2\\}$, the following holds:\n$$\n\\int_0^1 p_h^{\\mathrm{M}}(x) w_h(x) dx = \\int_0^1 p_0 w_h(x) dx\n$$\nA constant-preserving method requires that the constant function itself is an element of the multiplier space $M_h$. If $p_0 \\in M_h$, then setting $p_h^{\\mathrm{M}}(x) = p_0$ trivially satisfies the weak form:\n$$\n\\int_0^1 p_0 w_h(x) dx = \\int_0^1 p_0 w_h(x) dx\n$$\nAssuming the method is well-posed (i.e., the solution is unique), this must be the solution. Hence, $p_h^{\\mathrm{M}}(x) = p_0$ (or $1$ in our case).\nTherefore, the discrete traction field is $p_h^{\\mathrm{M}}(x) = 1$. The error is:\n$$\nE(p_h^{\\mathrm{M}}) = \\left(\\int_{0}^{1}(1-1)^{2}\\,\\mathrm{d}x\\right)^{1/2} = 0\n$$\n\n**Conclusion**\n\nAll three specified contact discretizations pass the traction patch test for a constant pressure field, meaning they reproduce the exact constant solution perfectly. The normalized $L^2$ error for each method is zero.\n$$\nE(p_{h}^{\\mathrm{N2S}}) = 0\n$$\n$$\nE(p_{h}^{\\mathrm{S2S}}) = 0\n$$\n$$\nE(p_{h}^{\\mathrm{M}}) = 0\n$$\nThe maximum of these errors is therefore also zero.\n$$\nE_{\\max} = \\max\\{0, 0, 0\\} = 0\n$$", "answer": "$$\\boxed{0}$$", "id": "2584061"}, {"introduction": "While many theoretical examples assume smooth surfaces, real-world engineering problems often involve contact with polyhedral objects possessing sharp edges and corners. This geometric non-smoothness poses a major challenge, as the contact normal becomes non-unique at these features, potentially causing standard algorithms to fail. This practice challenges you to dissect these failure mechanisms and identify the essential components of a robust algorithm, from the geometric search for the closest point to the variationally consistent formulation of the contact constraint [@problem_id:2572507].", "problem": "Consider frictionless unilateral contact between an elastic body and a rigid polyhedral obstacle in a three-dimensional ($3$D) setting. Let a single slave node at position $\\mathbf{x}_s \\in \\mathbb{R}^3$ potentially contact a rigid polyhedral master surface $\\Gamma_M$ represented by a watertight triangulated mesh whose facets are exactly planar. Contact is enforced via a Lagrange multiplier $\\lambda \\in \\mathbb{R}$ in the normal direction. The nonpenetration constraint is represented variationally by the Karush–Kuhn–Tucker (KKT) conditions\n$$\ng(\\mathbf{x}_s) \\ge 0,\\quad \\lambda \\ge 0,\\quad \\lambda\\, g(\\mathbf{x}_s) = 0,\n$$\nwhere $g(\\mathbf{x}_s)$ is a normal gap function defined using a closest-point mapping of $\\mathbf{x}_s$ onto $\\Gamma_M$. Assume small deformations of the slave side and that the master is perfectly rigid, so only $\\mathbf{x}_s$ changes during the solution.\n\nA common implementation computes a closest-point mapping by projecting $\\mathbf{x}_s$ onto a single smooth parametric patch of the master and uses the unique unit normal $\\mathbf{n}(\\mathbf{y})$ at the closest point $\\mathbf{y} \\in \\Gamma_M$ to define $g(\\mathbf{x}_s) = \\mathbf{n}(\\mathbf{y}) \\cdot (\\mathbf{x}_s - \\mathbf{y})$. However, near edges and corners of $\\Gamma_M$, the smooth-patch assumption fails: the projection may lie on an edge shared by multiple facets or at a vertex, and the normal direction becomes non-unique, which can lead to non-physical jumps, loss of convergence, or incorrect active-set decisions when solving the KKT system with Newton-type methods.\n\nStarting from first principles, use the definition of the closest point as a minimizer of Euclidean distance,\n$$\n\\mathbf{y}^\\star(\\mathbf{x}_s) \\in \\arg\\min_{\\mathbf{y} \\in \\Gamma_M} \\|\\mathbf{x}_s - \\mathbf{y}\\|,\n$$\nand the fact that for a polyhedral $\\Gamma_M$ the normal is uniquely defined on the relative interior of a facet but is set-valued on edges and vertices (normal cone), to analyze failure cases of the closest-point mapping near edges/corners and to propose a robust, variationally consistent, and Newton-friendly procedure based on facet-wise search with fallback projections.\n\nWhich of the following statements correctly identify failure mechanisms and specify a robust procedure that preserves the inequality constraint in the sense of variational inequalities and allows a consistent linearization for Newton or semismooth Newton methods?\n\nA. Perform a facet-wise orthogonal projection: for each candidate triangular facet, compute the orthogonal projection of $\\mathbf{x}_s$ onto the facet’s plane and its barycentric coordinates; accept the projected point if the barycentric coordinates are all nonnegative (interior). If not, orthogonally project onto each of the facet’s edges; if the edge projection lies outside the segment, take the nearest endpoint (vertex). Build a set of candidate points across all neighboring facets, edges, and vertices discovered by a broad-phase search, and select $\\mathbf{y}^\\star$ as the candidate with minimal Euclidean distance to $\\mathbf{x}_s$. This eliminates reliance on a single smooth parameterization and resolves edge/corner projection without ambiguity in the location of $\\mathbf{y}^\\star$.\n\nB. To avoid normal non-uniqueness at edges, freeze the normal to that of the previously active facet and disallow facet switching; i.e., always project onto the last-contacted facet even if the closest point migrates to an adjacent facet. This ensures continuity of the normal and guarantees variational consistency of the nonpenetration constraint.\n\nC. When $\\mathbf{y}^\\star$ lies on an edge or a vertex, define the admissible set of contact normals by the normal cone $N_{\\Gamma_M}(\\mathbf{y}^\\star)$, equivalently the convex cone spanned by the adjacent facet normals $\\{\\mathbf{n}_i\\}$. Enforce the unilateral contact either as a single inequality in an unknown normal $\\mathbf{n} \\in N_{\\Gamma_M}(\\mathbf{y}^\\star)$ or, equivalently, as multiple facet-wise inequalities $g_i(\\mathbf{x}_s)=\\mathbf{n}_i \\cdot (\\mathbf{x}_s-\\mathbf{y}^\\star) \\ge 0$ with one Lagrange multiplier $\\lambda_i \\ge 0$ per adjacent facet and complementarity $\\lambda_i g_i(\\mathbf{x}_s)=0$, together with a consistent semismooth Newton linearization using a Clarke generalized derivative. This yields a well-posed direction of constraint at edges/corners consistent with variational inequalities.\n\nD. Replace the polyhedral surface by a globally smoothed signed distance field obtained by fitting a $C^2$ spline through the mesh, and always use the gradient of this field as the contact normal. This guarantees a unique normal at edges/corners and preserves the exact nonpenetration constraint for the original polyhedral geometry.\n\nE. For robustness in Newton iterations, hold the contact classification (interior-to-facet, on-edge, at-vertex) and the associated active set fixed within an inner Newton linearization and update them only between outer iterations, switching classification only if a trial step violates the current classification beyond a small trust-region threshold. This produces a consistent tangent operator across iterations and prevents oscillations due to instantaneous switching near edges/corners.\n\nSelect all that apply.", "solution": "The user requires an analysis of procedures for handling frictionless unilateral contact with a rigid polyhedral body in the context of the finite element method. The core of the problem lies in the non-smooth nature of the master surface $\\Gamma_M$, which leads to a non-unique contact normal at edges and vertices. This invalidates simple contact formulations that assume a smooth surface and causes numerical difficulties for Newton-type solvers. A robust procedure must correctly identify the closest point of contact, formulate the non-penetration constraint in a variationally consistent manner, and be amenable to a robust numerical solver.\n\nThe problem statement has been validated and is found to be scientifically sound, well-posed, and free of any invalidating flaws. It presents a standard, yet advanced, topic in computational contact mechanics. We will proceed with a solution based on first principles.\n\nThe state of the system is governed by the principle of minimum potential energy, subject to the non-penetration constraint $g(\\mathbf{x}_s) \\ge 0$. The constraint is enforced using a Lagrange multiplier $\\lambda$, which represents the magnitude of the contact normal force. The Karush-Kuhn-Tucker (KKT) conditions provide the complete formulation:\n$$ g(\\mathbf{x}_s) \\ge 0, \\quad \\lambda \\ge 0, \\quad \\lambda\\, g(\\mathbf{x}_s) = 0 $$\nHere, $g(\\mathbf{x}_s)$ is the gap function. For a general point $\\mathbf{x}_s$, the closest point $\\mathbf{y}^\\star$ on the master surface $\\Gamma_M$ is the solution to a minimization problem:\n$$ \\mathbf{y}^\\star(\\mathbf{x}_s) \\in \\arg\\min_{\\mathbf{y} \\in \\Gamma_M} \\|\\mathbf{x}_s - \\mathbf{y}\\| $$\nThe gap vector is then $\\mathbf{g} = \\mathbf{x}_s - \\mathbf{y}^\\star$. From the theory of projection onto convex sets (or, in this case, the boundary of a convex set), the gap vector must lie in the normal cone to $\\Gamma_M$ at $\\mathbf{y}^\\star$, i.e., $\\mathbf{x}_s - \\mathbf{y}^\\star \\in N_{\\Gamma_M}(\\mathbf{y}^\\star)$. The contact force vector, which acts in the opposite direction, must therefore be in the negative of the normal cone, which is the standard direction for a repulsive contact force. The gap function $g(\\mathbf{x}_s)$ is the signed distance, typically defined as $g(\\mathbf{x}_s) = \\mathbf{n} \\cdot (\\mathbf{x}_s - \\mathbf{y}^\\star)$, where $\\mathbf{n}$ is the contact normal. The core difficulty is that the normal cone, and thus the direction $\\mathbf{n}$, is not a single vector at edges and vertices.\n\nA robust method must therefore consist of three main components:\n$1$. A robust geometric algorithm to find the unique closest point $\\mathbf{y}^\\star$.\n$2$. A variationally consistent formulation of the contact constraint and force at $\\mathbf{y}^\\star$, especially when it lies on a non-smooth feature.\n$3$. A stable numerical scheme (e.g., a modified Newton method) to solve the resulting non-smooth, nonlinear system of equations.\n\nWe now evaluate each option against these principles.\n\n**Option A Analysis**\nThis option describes a detailed geometric algorithm for finding the closest point $\\mathbf{y}^\\star$ on a triangulated surface. The procedure involves:\n$1$. Projecting $\\mathbf{x}_s$ orthogonally onto the plane of a triangle.\n$2$. Checking if the projection lies inside the triangle using barycentric coordinates.\n$3$. If not, projecting onto the triangle's edges (which are line segments).\n$4$. If the projection is outside an edge segment, selecting the closest vertex.\n$5$. Repeating for all candidate facets and choosing the point that gives the absolute minimum distance.\n\nThis hierarchical projection method (plane $\\to$ edge $\\to$ vertex) is a standard and mathematically sound way to implement the $\\arg\\min$ operator for a polyhedral mesh. It correctly finds the unique location of $\\mathbf{y}^\\star$ without ambiguity, thus resolving the geometric part of the problem that arises from naive smooth-patch assumptions. It correctly identifies a failure mechanism (reliance on single smooth parameterization) and provides a robust procedure for the geometric search. This is an essential first step in any robust contact algorithm for polyhedral bodies.\nVerdict: **Correct**.\n\n**Option B Analysis**\nThis option suggests \"freezing\" the contact normal, using the normal of the previously active facet when the closest point moves to an edge or a new facet. The stated goal is to ensure continuity of the normal vector. While this does make the normal vector continuous in time or across iterations, it is fundamentally inconsistent with the physics and variational principles of contact. The contact force must be normal to the constraint surface at the *current* point of contact. By using an \"old\" normal, the resulting contact force vector $\\mathbf{F}_c = -\\lambda \\mathbf{n}_{\\text{old}}$ may not be in the admissible set of directions (the normal cone) at the current contact point $\\mathbf{y}^\\star$. This can lead to the force vector having a component that pulls the node *into* the rigid body along an adjacent facet, violating the non-penetration constraint it is supposed to enforce. This is a non-physical, ad-hoc fix that sacrifices accuracy and variational consistency for numerical convenience.\nVerdict: **Incorrect**.\n\n**Option C Analysis**\nThis option addresses the central issue of the non-unique normal at edges and vertices. It correctly identifies the normal cone, $N_{\\Gamma_M}(\\mathbf{y}^\\star)$, as the set of all possible directions for the vector $(\\mathbf{x}_s - \\mathbf{y}^\\star)$. At an edge, this cone is spanned by the normals of the two adjacent facets, $\\{\\mathbf{n}_1, \\mathbf{n}_2\\}$. At a vertex, it is spanned by the normals of all facets meeting there, $\\{\\mathbf{n}_i\\}$. The option proposes enforcing the contact constraint as a set of multiple inequalities, one for each facet $i$ defining the feature:\n$$ g_i(\\mathbf{x}_s) = \\mathbf{n}_i \\cdot (\\mathbf{x}_s - \\mathbf{y}^\\star) \\ge 0 $$\nEach inequality is paired with its own non-negative Lagrange multiplier $\\lambda_i \\ge 0$ and a complementarity condition $\\lambda_i g_i = 0$. The total contact force is then effectively a positive linear combination of the facet normals, which is precisely a vector in the normal cone. This is the correct, variationally consistent way to formulate the problem. Furthermore, it correctly points to the use of a semismooth Newton method with a Clarke generalized derivative to solve the resulting non-smooth KKT system. This approach transforms the non-differentiable problem into one that can be solved with robust, rapidly converging numerical methods.\nVerdict: **Correct**.\n\n**Option D Analysis**\nThis option suggests replacing the exact polyhedral geometry with a globally smooth $C^2$ approximation, such as a spline-based signed distance field. The benefit is that the gradient of this field provides a unique, continuously varying normal everywhere. However, the critical flaw in this option is the claim that it \"preserves the exact nonpenetration constraint for the original polyhedral geometry.\" This is a contradiction. A smooth surface cannot be identical to a polyhedral surface containing sharp edges and corners. Smoothing an edge either \"rounds it off\", which would permit penetration of the original sharp corner, or \"pads it out\", which would create an artificial gap and prevent contact where it should occur on the original surface. Therefore, this method does not solve the stated problem but rather replaces it with a different, approximated problem.\nVerdict: **Incorrect**.\n\n**Option E Analysis**\nThis option addresses the numerical solution of the KKT system, which is a key part of a \"Newton-friendly\" procedure. When a slave node's position is near an edge or vertex, a small change in its position during a Newton iteration can cause the closest point classification to \"flicker\" between adjacent facets or between a facet and an edge. This leads to drastic changes in the system's tangent stiffness matrix, which can cause oscillations (zig-zagging) and failure of the Newton-Raphson method to converge. The proposed strategy is to \"[hold] the contact classification... fixed within an inner Newton linearization and update them only between outer iterations.\" This is a description of a robust active-set strategy. By freezing the set of active constraints for a series of \"inner\" Newton iterations, the solver works on a locally smooth problem and can converge robustly. The \"outer\" loop then updates the contact state (the active set) based on the result, and a new inner loop begins. This prevents the solver from getting stuck in oscillations and is a standard technique for improving the robustness and convergence of contact algorithms.\nVerdict: **Correct**.\n\nIn summary, Options A, C, and E describe correct and complementary components of a complete, robust, and modern algorithm for handling polyhedral contact. Option A covers the geometric search, Option C covers the variationally consistent formulation, and Option E covers the robust numerical solution strategy.", "answer": "$$\\boxed{ACE}$$", "id": "2572507"}, {"introduction": "The Karush-Kuhn-Tucker (KKT) conditions that govern unilateral contact form a system of non-smooth equations, requiring specialized numerical solvers. This exercise delves into the elegant framework of Semi-Smooth Newton (SSN) methods, which efficiently solve these problems by linearizing a carefully chosen complementarity function. By deriving the semi-smooth derivative, you will uncover the direct and powerful link between the SSN method and the logic of Primal-Dual Active Set (PDAS) strategies, gaining insight into how these advanced algorithms make an 'active' or 'inactive' decision at each step [@problem_id:2584012].", "problem": "Consider a frictionless unilateral contact condition at a single potential contact node in small-strain elasticity with normal gap function $g_{n}$ and normal Lagrange multiplier $\\lambda$. The classical complementarity conditions for non-penetration are $g_{n} \\ge 0$, $\\lambda \\ge 0$, and $g_{n}\\,\\lambda = 0$. One way to encode these conditions within a finite element discretization is to enforce the scalar equation $\\phi(g_{n},\\lambda) = 0$, where the complementarity function is defined by $\\phi(g_{n},\\lambda) = \\min(\\lambda + \\rho\\, g_{n}, 0)$ for a fixed penalty-like parameter $\\rho > 0$. A Primal-Dual Active Set (PDAS) method uses the sign of $\\lambda + \\rho\\, g_{n}$ to identify active and inactive sets, while a Semi-Smooth Newton (SSN) method applies a generalized linearization of the non-differentiable map $\\phi$ with respect to $(g_{n},\\lambda)$ at the current iterate $(g_{n}^{k},\\lambda^{k})$.\n\nStarting from the fundamental complementarity structure and the definition of the $\\min$ operator as a piecewise linear Lipschitz function, derive a Newton derivative (in the sense of semi-smooth analysis) of the mapping $(g_{n},\\lambda) \\mapsto \\phi(g_{n},\\lambda)$ at a generic point $(g_{n},\\lambda)$, expressed as a $1 \\times 2$ row vector acting on the increment $(\\delta g_{n}, \\delta \\lambda)$. Show how the selection of this derivative recovers the PDAS active/inactive decision rule in terms of the sign of the scalar $s := \\lambda + \\rho\\, g_{n}$.\n\nThen, for a specific numerical iterate characterized by $\\rho = 1.0 \\times 10^{5}$, $g_{n}^{k} = -2.0 \\times 10^{-3}$, and $\\lambda^{k} = 1.0 \\times 10^{2}$, compute the semi-smooth Newton derivative row vector at $(g_{n}^{k},\\lambda^{k})$. Express the final row vector numerically and do not include units.", "solution": "The problem requires the derivation of a semi-smooth Newton derivative for a specified complementarity function and its application to a numerical example. The function is given by $\\phi(g_{n},\\lambda) = \\min(\\lambda + \\rho\\, g_{n}, 0)$.\n\nLet us define the argument of the $\\min$ operator as $s(g_n, \\lambda) = \\lambda + \\rho\\, g_{n}$. The function is then $\\phi(s) = \\min(s, 0)$. This function is not differentiable in the classical sense at the point $s=0$. However, it is a Lipschitz continuous function and thus is semi-smooth. This allows the application of a generalized Newton method, known as a Semi-Smooth Newton (SSN) method. The core of an SSN method is the use of a Newton derivative, which is an element of the generalized or Clarke subdifferential of the function.\n\nThe Clarke subdifferential of the function $f(x) = \\min(x,0)$ with respect to $x$ is given by:\n$$\n\\partial_C \\min(x, 0) =\n\\begin{cases}\n    \\{1\\}      & \\text{if } x < 0 \\\\\n    \\{0\\}      & \\text{if } x > 0 \\\\\n    [0, 1]   & \\text{if } x = 0\n\\end{cases}\n$$\nA semi-smooth Newton derivative, which we denote $D_N \\phi$, is any selection from this set-valued map. For SSN methods, a common and effective choice is to select one of the limiting values at the non-differentiable point. For example, we may define the selection operator $V(s) \\in \\partial_C \\min(s, 0)$ as:\n$$\nV(s) =\n\\begin{cases}\n    1 & \\text{if } s < 0 \\\\\n    0 & \\text{if } s \\ge 0\n\\end{cases}\n$$\nThis corresponds to a Heaviside-like selection from the subdifferential. Other choices are possible for $s=0$, but they do not alter the core logic.\n\nUsing the chain rule for generalized derivatives, the Newton derivative of the composite function $\\phi(g_n, \\lambda) = \\min(s(g_n, \\lambda), 0)$ with respect to the vector $(g_n, \\lambda)$ is found by multiplying the selected derivative of $\\min$ with the gradient of its argument $s$. The gradient of $s(g_n, \\lambda)$ is a row vector:\n$$\n\\nabla s = \\begin{pmatrix} \\frac{\\partial s}{\\partial g_n} & \\frac{\\partial s}{\\partial \\lambda} \\end{pmatrix} = \\begin{pmatrix} \\rho & 1 \\end{pmatrix}\n$$\nThe Newton derivative of $\\phi$ with respect to $(g_n, \\lambda)$ is thus given by the $1 \\times 2$ row vector:\n$$\nD_N \\phi(g_n, \\lambda) = V(s(g_n, \\lambda)) \\cdot \\nabla s = V(\\lambda + \\rho g_n) \\begin{pmatrix} \\rho & 1 \\end{pmatrix}\n$$\nThis gives a piecewise definition for the derivative based on the sign of $s = \\lambda + \\rho g_n$:\n1.  If $s < 0$ (i.e., $\\lambda + \\rho g_n < 0$), then $V(s) = 1$. The derivative is $D_N \\phi = 1 \\cdot \\begin{pmatrix} \\rho & 1 \\end{pmatrix} = \\begin{pmatrix} \\rho & 1 \\end{pmatrix}$.\n2.  If $s \\ge 0$ (i.e., $\\lambda + \\rho g_n \\ge 0$), then $V(s) = 0$. The derivative is $D_N \\phi = 0 \\cdot \\begin{pmatrix} \\rho & 1 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 \\end{pmatrix}$.\n\nThis completes the first part of the problem.\n\nNext, we establish the connection to the Primal-Dual Active Set (PDAS) method. A PDAS method for contact problems iteratively partitions the potential contact nodes into an *active set* $\\mathcal{A}$ and an *inactive set* $\\mathcal{I}$ at each iteration $k$.\n- For a node in the inactive set $\\mathcal{I}^k$, the contact force is prescribed to be zero: $\\lambda^{k+1} = 0$. The gap $g_n^{k+1}$ is computed and should be non-negative.\n- For a node in the active set $\\mathcal{A}^k$, the penetration is prescribed to be zero: $g_n^{k+1} = 0$. The reaction force $\\lambda^{k+1}$ is computed and should be non-negative.\n\nA standard decision rule for updating these sets from iterate $k$ to $k+1$ is based on the sign of the same scalar quantity $s^k = \\lambda^k + \\rho g_n^k$:\n- If $\\lambda^k + \\rho g_n^k \\ge 0$, the node is placed in the inactive set $\\mathcal{I}^{k+1}$. This condition indicates that the current state is consistent with separation ($g_n \\ge 0, \\lambda = 0$).\n- If $\\lambda^k + \\rho g_n^k < 0$, the node is placed in the active set $\\mathcal{A}^{k+1}$. This condition indicates a violation of the KKT conditions, pointing towards active contact ($g_n=0, \\lambda \\ge 0$).\n\nThe direct relationship is now evident. The criterion used to partition the problem domain in the PDAS method (the sign of $s = \\lambda + \\rho g_n$) is precisely the same criterion that determines which piecewise branch of the semi-smooth Newton derivative $D_N \\phi$ is selected.\n- The PDAS \"inactive\" case ($\\lambda + \\rho g_n \\ge 0$) corresponds to the SSN case where the derivative is the zero vector $\\begin{pmatrix} 0 & 0 \\end{pmatrix}$.\n- The PDAS \"active\" case ($\\lambda + \\rho g_n < 0$) corresponds to the SSN case where the derivative is the non-zero vector $\\begin{pmatrix} \\rho & 1 \\end{pmatrix}$.\nThus, the SSN method based on this complementarity function implicitly performs the same active/inactive set partitioning as a standard PDAS algorithm.\n\nFinally, we compute the semi-smooth Newton derivative for the given numerical iterate:\n- $\\rho = 1.0 \\times 10^{5}$\n- $g_{n}^{k} = -2.0 \\times 10^{-3}$\n- $\\lambda^{k} = 1.0 \\times 10^{2}$\n\nWe first compute the scalar decision variable $s^k = \\lambda^k + \\rho g_n^k$:\n$$\ns^k = (1.0 \\times 10^{2}) + (1.0 \\times 10^{5}) \\times (-2.0 \\times 10^{-3})\n$$\n$$\ns^k = 100 + 100000 \\times (-0.002) = 100 - 200 = -100\n$$\nSince $s^k = -100 < 0$, we are in the \"active\" case. According to our derived rule, the semi-smooth Newton derivative is:\n$$\nD_N \\phi(g_n^k, \\lambda^k) = \\begin{pmatrix} \\rho & 1 \\end{pmatrix}\n$$\nSubstituting the given value of $\\rho$:\n$$\nD_N \\phi(g_n^k, \\lambda^k) = \\begin{pmatrix} 1.0 \\times 10^{5} & 1.0 \\end{pmatrix}\n$$\nThe value $1.0$ is used for the second component to maintain consistency with the floating-point representation of the input data.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n1.0 \\times 10^{5} & 1.0\n\\end{pmatrix}\n}\n$$", "id": "2584012"}]}