{"hands_on_practices": [{"introduction": "A fundamental benchmark for any finite element is the patch test, a necessary condition for ensuring convergence. This test verifies that an element can exactly reproduce a constant stress state, which is the simplest non-trivial solution in solid mechanics. This practice [@problem_id:2566178] challenges you to determine the minimum complexity required for the assumed boundary tractions in a hybrid stress element to pass this crucial test, even on a geometrically distorted element. The solution reveals a key property of isoparametric mappings and underscores the principle that an effective formulation must be able to represent the exact physical behavior in simple cases.", "problem": "Consider a two-dimensional patch in plane stress composed of two four-node isoparametric quadrilateral elements sharing a common edge. Element $\\mathrm{E}_{1}$ is a unit square with nodes at $\\left(0,0\\right)$, $\\left(1,0\\right)$, $\\left(1,1\\right)$, and $\\left(0,1\\right)$ in the $\\left(x,y\\right)$-plane. Element $\\mathrm{E}_{2}$ is a convex but distorted quadrilateral attached to the right of $\\mathrm{E}_{1}$, with nodes at $\\left(1,0\\right)$, $\\left(2,-0.2\\right)$, $\\left(2.4,1.1\\right)$, and $\\left(1,1\\right)$. The elements share the vertical edge from $\\left(1,0\\right)$ to $\\left(1,1\\right)$. Each element is mapped from the bi-unit parent square $\\left(\\xi,\\eta\\right)\\in[-1,1]\\times[-1,1]$ by a bilinear isoparametric transformation.\n\nAssume the patch is subjected to a constant physical stress state\n$$\n\\boldsymbol{\\sigma}^{0}=\\begin{bmatrix}\\sigma_{xx}^{0} & \\tau_{xy}^{0}\\\\ \\tau_{xy}^{0} & \\sigma_{yy}^{0}\\end{bmatrix},\n$$\nwith $\\sigma_{xx}^{0}$, $\\sigma_{yy}^{0}$, and $\\tau_{xy}^{0}$ being arbitrary constants. No body forces are present. Adopt a mixed hybrid formulation in which interelement equilibrium is enforced by an independently interpolated boundary traction field on each element edge. Along any edge, let the boundary traction interpolation be a polynomial of degree $p$ in the corresponding one-dimensional natural edge coordinate $s\\in[-1,1]$.\n\nUsing only fundamental principles of continuum mechanics and the geometry of the bilinear isoparametric mapping, determine the minimal integer degree $p$ required for the boundary traction interpolation on the edges of the distorted element $\\mathrm{E}_{2}$ so that the two-element patch exactly passes the constant stress patch test (i.e., it can represent the exact constant stress state $\\boldsymbol{\\sigma}^{0}$ with elementwise equilibrium and compatible interface tractions). Express your final answer as the single integer $p$.", "solution": "The problem requires the determination of the minimal integer degree $p$ of a polynomial interpolation for boundary tractions on a distorted four-node isoparametric element, such that the element can pass the constant stress patch test within a mixed hybrid formulation.\n\nThe core principle of the constant stress patch test is that the finite element formulation must be able to exactly reproduce the behavior of a continuum subjected to a constant stress state, with zero error. In a mixed hybrid formulation where boundary tractions $\\mathbf{t}_h$ are interpolated independently, this requires that the space of the assumed tractions must be rich enough to contain the exact traction field that arises on the element boundary from the constant stress state.\n\nLet the constant stress state be denoted by the tensor $\\boldsymbol{\\sigma}^0$. According to Cauchy's fundamental formula of continuum mechanics, the traction vector $\\mathbf{t}$ on a surface with an outward unit normal vector $\\mathbf{n}$ is given by:\n$$\n\\mathbf{t} = \\boldsymbol{\\sigma}^0 \\cdot \\mathbf{n}\n$$\nSince $\\boldsymbol{\\sigma}^0$ is a constant tensor, the variation of the traction vector $\\mathbf{t}$ along an element edge is governed solely by the variation of the unit normal vector $\\mathbf{n}$ along that same edge.\n\nThe problem specifies that the elements are four-node isoparametric quadrilaterals. The geometric mapping from the parent coordinates $(\\xi, \\eta)$ to the physical coordinates $(x,y)$ is bilinear:\n$$\n\\mathbf{x}(\\xi, \\eta) = \\begin{pmatrix} x(\\xi, \\eta) \\\\ y(\\xi, \\eta) \\end{pmatrix} = \\sum_{i=1}^{4} N_i(\\xi, \\eta) \\mathbf{x}_i\n$$\nwhere $\\mathbf{x}_i$ are the nodal coordinates and $N_i(\\xi, \\eta)$ are the bilinear shape functions:\n$$\nN_i(\\xi, \\eta) = \\frac{1}{4}(1 + \\xi_i \\xi)(1 + \\eta_i \\eta)\n$$\nwith $(\\xi_i, \\eta_i)$ being the coordinates of the $i$-th node in the parent domain, e.g., $(-1,-1)$, $(1,-1)$, $(1,1)$, $(-1,1)$.\n\nA fundamental property of this bilinear mapping is that it maps the straight edges of the parent square (where one of the coordinates is constant, e.g., $\\xi=1$) to straight line segments in the physical $(x,y)$ domain. To demonstrate this, consider an edge where $\\xi = \\xi_0$ (with $\\xi_0 = \\pm 1$) and $\\eta$ varies. The mapping becomes:\n$$\n\\mathbf{x}(\\xi_0, \\eta) = \\sum_{i=1}^{4} N_i(\\xi_0, \\eta) \\mathbf{x}_i = \\sum_{i=1}^{4} \\frac{1}{4}(1 + \\xi_i \\xi_0)(1 + \\eta_i \\eta) \\mathbf{x}_i\n$$\nThis expression is a linear function of $\\eta$. We can write it in the form $\\mathbf{x}(\\eta) = \\mathbf{A} + \\mathbf{B}\\eta$, where $\\mathbf{A}$ and $\\mathbf{B}$ are constant vectors. This is the parametric equation of a straight line. The same holds for edges where $\\eta = \\eta_0 = \\pm 1$.\n\nSince each edge of the distorted element $\\mathrm{E}_2$ is a straight line, the tangent vector to any given edge is constant along its length. Consequently, the unit normal vector $\\mathbf{n}$ to each edge is also constant along that edge.\n\nWith both the stress tensor $\\boldsymbol{\\sigma}^0$ and the normal vector $\\mathbf{n}$ being constant along any given edge of element $\\mathrm{E}_2$, the physical traction vector $\\mathbf{t} = \\boldsymbol{\\sigma}^0 \\cdot \\mathbf{n}$ must also be constant along each edge.\n\nThe assumed boundary traction field $\\mathbf{t}_h$ is interpolated along each edge as a polynomial of degree $p$ in the natural coordinate $s \\in [-1,1]$. For the patch test to be passed exactly, the interpolation must be able to represent the true traction field. Since the true traction field is a constant vector on each edge, the polynomial interpolation must be able to represent a constant function.\n\nA general polynomial of degree $p$ is of the form $f(s) = c_0 + c_1 s + c_2 s^2 + \\dots + c_p s^p$. To represent a constant function, we need to be able to set $c_0$ to the desired constant value and all other coefficients $c_i$ ($i > 0$) to zero. This is possible if and only if the polynomial basis contains a constant term. A polynomial of degree $p=0$ is a constant function, $f(s) = c_0$. This is the minimal degree that can exactly represent any constant value.\n\nTherefore, the minimal integer degree required for the boundary traction interpolation is $p=0$. The distorted geometry of $\\mathrm{E}_2$ is a crucial detail, as it is known to cause failure for many element formulations, but it does not alter the fact that its boundaries under a bilinear isoparametric mapping are straight lines. This geometric fact is the key to the solution.", "answer": "$$\\boxed{0}$$", "id": "2566178"}, {"introduction": "Moving from convergence to stability, we encounter the cornerstone of mixed finite element methods: the Babuška–Brezzi (inf-sup) condition. This condition ensures a stable and unique solution by properly balancing the richness of the independently approximated fields, such as stress and displacement. This computational exercise [@problem_id:2566183] provides a powerful, hands-on demonstration of this principle by contrasting a stable element with an unstable one that produces non-physical, zero-energy \"hourglass\" modes. By performing an eigenvalue analysis, you will directly visualize the consequences of violating the inf-sup condition and appreciate its role in designing robust hybrid elements.", "problem": "Consider the two-field Hellinger–Reissner functional for linear elasticity in two dimensions with displacement field $u \\in \\mathcal{V}_h$ and stress field $\\sigma \\in \\Sigma_h$ given by\n$$\n\\Pi(u,\\sigma) \\;=\\; \\int_{\\Omega_e} \\sigma : \\varepsilon(u) \\,\\mathrm{d}\\Omega \\;-\\; \\tfrac{1}{2}\\int_{\\Omega_e} \\sigma : \\mathbb{C}^{-1} : \\sigma \\,\\mathrm{d}\\Omega \\;-\\; \\int_{\\Gamma_t\\cap \\partial\\Omega_e} t \\cdot u \\,\\mathrm{d}\\Gamma,\n$$\nwhere $\\varepsilon(u)$ is the symmetric gradient of $u$, $\\mathbb{C}$ is the fourth-order elasticity tensor for plane strain, and $\\Omega_e$ is a single quadrilateral element. In a hybrid stress formulation, the stress is interpolated inside the element by an assumed stress mode, while only the displacements live on the boundary (nodal values). Let the displacement field be interpolated by the standard bilinear four-node quadrilateral shape functions, and the stress field be represented in Voigt notation as $\\sigma = [\\sigma_{xx},\\sigma_{yy},\\tau_{xy}]^\\top$ via an assumed stress matrix $P(\\xi,\\eta)$ such that $\\sigma(\\xi,\\eta) = P(\\xi,\\eta)\\,\\beta$, with $\\beta$ a vector of stress parameters.\n\nBy stationarity of $\\Pi(u,\\sigma)$, the element system can be written in block form\n$$\n\\begin{bmatrix}\n0 & G^\\top \\\\\nG & -H\n\\end{bmatrix}\n\\begin{bmatrix}\nu_e \\\\ \\beta\n\\end{bmatrix}\n\\;=\\;\n\\begin{bmatrix}\nf_e \\\\ 0\n\\end{bmatrix},\n$$\nwith\n$$\nG \\;=\\; \\int_{\\Omega_e} P(\\xi,\\eta)^\\top\\,B(\\xi,\\eta)\\,\\mathrm{d}\\Omega, \n\\qquad\nH \\;=\\; \\int_{\\Omega_e} P(\\xi,\\eta)^\\top\\,\\mathbb{C}^{-1}\\,P(\\xi,\\eta)\\,\\mathrm{d}\\Omega,\n$$\nwhere $B(\\xi,\\eta)$ is the standard $3\\times 8$ strain–displacement matrix for the four-node bilinear element. Static condensation of $\\beta$ yields the condensed element stiffness\n$$\nK_e \\;=\\; G^\\top H^{-1} G.\n$$\nThe Babuška–Brezzi (inf–sup) condition for stability of the mixed formulation on the element requires\n$$\n\\inf_{\\sigma \\in \\Sigma_h} \\sup_{u \\in \\mathcal{V}_h} \\frac{\\int_{\\Omega_e} \\sigma : \\varepsilon(u)\\,\\mathrm{d}\\Omega}{\\|\\sigma\\|_{0,\\Omega_e}\\,\\|u\\|_{1,\\Omega_e}} \\;\\ge\\; \\beta_0 \\;>\\; 0,\n$$\nfor some mesh-independent constant $\\beta_0$. If the condition is violated, $G$ loses rank, so $K_e$ becomes singular beyond the rigid body modes and exhibits zero-energy (hourglass-like) spurious modes.\n\nYour task is to construct and analyze two hybrid stress elements on a single quadrilateral using the above framework:\n\n- An unstable element that violates the inf–sup condition by taking a too-poor stress space $\\Sigma_h$ consisting of constant stresses, namely\n$$\nP_{\\text{const}}(\\xi,\\eta) \\;=\\; \n\\begin{bmatrix}\n1 & 0 & 0\\\\\n0 & 1 & 0\\\\\n0 & 0 & 1\n\\end{bmatrix},\n$$\nso that $\\beta \\in \\mathbb{R}^3$.\n\n- A more expressive element that satisfies the inf–sup condition on the same displacement space by taking a five-parameter stress mode with weak linear variation,\n$$\nP_{\\text{lin5}}(\\xi,\\eta) \\;=\\;\n\\begin{bmatrix}\n1 & 0 & 0 & \\xi & 0\\\\\n0 & 1 & 0 & 0 & \\eta\\\\\n0 & 0 & 1 & 0 & 0\n\\end{bmatrix},\n$$\nso that $\\beta \\in \\mathbb{R}^5$.\n\nUse the standard isoparametric bilinear displacement interpolation on a quadrilateral with nodes $\\{(X_i,Y_i)\\}_{i=1}^4$ in physical space and natural coordinates $(\\xi,\\eta)\\in[-1,1]^2$. Let the elasticity be isotropic, plane strain, with Young’s modulus $E$ and Poisson’s ratio $\\nu$, so that\n$$\n\\lambda \\;=\\; \\frac{\\nu E}{(1+\\nu)(1-2\\nu)}, \n\\qquad\n\\mu \\;=\\; \\frac{E}{2(1+\\nu)},\n$$\nand the constitutive matrix in Voigt notation with engineering shear strain $\\gamma_{xy}$ is\n$$\n\\mathbb{C} \\;=\\;\n\\begin{bmatrix}\n\\lambda + 2\\mu & \\lambda & 0 \\\\\n\\lambda & \\lambda + 2\\mu & 0 \\\\\n0 & 0 & \\mu\n\\end{bmatrix}.\n$$\nForm $H$ using $\\mathbb{C}^{-1}$. Assemble $K_e = G^\\top H^{-1} G$ by exact numerical quadrature (use tensor-product Gauss with $2\\times 2$ points). Perform an eigenvalue analysis of $K_e$, identify the dimension of its nullspace, and subtract the rigid body modes to count hourglass-like zero-energy modes. Take the rigid body space spanned by two translations and one in-plane rotation about the element centroid.\n\nImplement a program that constructs $K_e$, computes its eigenpairs, and identifies the number of hourglass modes for each of the following four test cases (with coordinates given in meters, but the final answers are dimensionless counts):\n\n- Test case $1$ (unstable, square): $E=210\\times 10^9$, $\\nu=0.3$, nodes $(-1,-1)$, $(1,-1)$, $(1,1)$, $(-1,1)$, stress mode $P_{\\text{const}}$.\n- Test case $2$ (stable, square): same as test case $1$ but with stress mode $P_{\\text{lin5}}$.\n- Test case $3$ (unstable, mildly distorted): $E=210\\times 10^9$, $\\nu=0.3$, nodes $(-1.0,-1.0)$, $(1.2,-0.8)$, $(1.1,1.1)$, $(-1.1,0.9)$, stress mode $P_{\\text{const}}$.\n- Test case $4$ (stable, mildly distorted): same as test case $3$ but with stress mode $P_{\\text{lin5}}$.\n\nFor each test case, compute the eigenvalues of $K_e$ and declare an eigenvalue to be zero if it is less than a tolerance $\\varepsilon = 10^{-8}\\,\\lambda_{\\max}$, where $\\lambda_{\\max}$ is the largest eigenvalue of $K_e$ in that test. Let $n_0$ be the number of zero eigenvalues and let $n_{\\text{rbm}}$ be the dimension of the intersection of the nullspace with the rigid body mode space; define the hourglass mode count as $n_{\\text{hg}} = n_0 - n_{\\text{rbm}}$. Your program must output, in a single line, a Python-style list of the four integers $[n_{\\text{hg},1}, n_{\\text{hg},2}, n_{\\text{hg},3}, n_{\\text{hg},4}]$ corresponding to the four test cases, with no additional text.\n\nAll mathematical derivations must start from the Hellinger–Reissner functional and the definitions of $\\mathbb{C}$, $\\lambda$, $\\mu$, $B(\\xi,\\eta)$, $P(\\xi,\\eta)$, $G$, and $H$. Do not use any shortcut formulas beyond these definitions, and ensure all numerical integrations are performed by exact Gauss quadrature as specified. The final answers are dimensionless integers, and no physical units should appear in the output.", "solution": "We begin from the Hellinger–Reissner functional in two dimensions,\n$$\n\\Pi(u,\\sigma) \\;=\\; \\int_{\\Omega_e} \\sigma : \\varepsilon(u)\\,\\mathrm{d}\\Omega \\;-\\; \\tfrac{1}{2}\\int_{\\Omega_e}\\sigma:\\mathbb{C}^{-1}:\\sigma\\,\\mathrm{d}\\Omega \\;-\\; \\int_{\\Gamma_t \\cap \\partial\\Omega_e} t \\cdot u\\,\\mathrm{d}\\Gamma,\n$$\nwhere $u$ is interpolated by bilinear shape functions of the four-node quadrilateral and $\\sigma$ is interpolated independently in $\\Sigma_h$ as $\\sigma(\\xi,\\eta) = P(\\xi,\\eta)\\,\\beta$ with parameter vector $\\beta$. In Voigt notation with engineering shear strain, we write $\\varepsilon(u) = B(\\xi,\\eta)\\,u_e$, where $B(\\xi,\\eta)$ is the standard $3\\times 8$ strain–displacement matrix for the isoparametric bilinear mapping, constructed via the derivatives of the shape functions with respect to physical coordinates, i.e.,\n$$\nB(\\xi,\\eta) \\;=\\;\n\\begin{bmatrix}\n\\frac{\\partial N_1}{\\partial x} & 0 & \\cdots & \\frac{\\partial N_4}{\\partial x} & 0 \\\\\n0 & \\frac{\\partial N_1}{\\partial y} & \\cdots & 0 & \\frac{\\partial N_4}{\\partial y} \\\\\n\\frac{\\partial N_1}{\\partial y} & \\frac{\\partial N_1}{\\partial x} & \\cdots & \\frac{\\partial N_4}{\\partial y} & \\frac{\\partial N_4}{\\partial x}\n\\end{bmatrix}.\n$$\nStationarity of $\\Pi$ with respect to $u_e$ and $\\beta$ yields the element system\n$$\n\\frac{\\partial \\Pi}{\\partial u_e} \\;=\\; \\int_{\\Omega_e} B(\\xi,\\eta)^\\top \\sigma(\\xi,\\eta)\\,\\mathrm{d}\\Omega \\;-\\; f_e \\;=\\; 0,\n\\qquad\n\\frac{\\partial \\Pi}{\\partial \\beta} \\;=\\; \\int_{\\Omega_e} P(\\xi,\\eta)^\\top \\varepsilon(u)\\,\\mathrm{d}\\Omega \\;-\\; \\int_{\\Omega_e} P(\\xi,\\eta)^\\top \\mathbb{C}^{-1} P(\\xi,\\eta)\\,\\beta\\,\\mathrm{d}\\Omega \\;=\\; 0.\n$$\nIntroducing\n$$\nG \\;=\\; \\int_{\\Omega_e} P(\\xi,\\eta)^\\top B(\\xi,\\eta)\\,\\mathrm{d}\\Omega,\n\\qquad\nH \\;=\\; \\int_{\\Omega_e} P(\\xi,\\eta)^\\top \\mathbb{C}^{-1} P(\\xi,\\eta)\\,\\mathrm{d}\\Omega,\n$$\nand noting that $\\sigma(\\xi,\\eta) = P(\\xi,\\eta)\\,\\beta$, we write the saddle-point linear system\n$$\n\\begin{bmatrix}\n0 & G^\\top \\\\\nG & -H\n\\end{bmatrix}\n\\begin{bmatrix}\nu_e \\\\ \\beta\n\\end{bmatrix}\n\\;=\\;\n\\begin{bmatrix}\nf_e \\\\ 0\n\\end{bmatrix}.\n$$\nStatic condensation eliminates $\\beta$ by solving $G u_e - H \\beta = 0 \\Rightarrow \\beta = H^{-1} G u_e$, which, substituted into the first block, yields the condensed element stiffness\n$$\nK_e \\;=\\; G^\\top H^{-1} G.\n$$\nThe Babuška–Brezzi inf–sup condition\n$$\n\\inf_{\\sigma \\in \\Sigma_h} \\sup_{u \\in \\mathcal{V}_h} \\frac{\\int_{\\Omega_e} \\sigma : \\varepsilon(u)\\,\\mathrm{d}\\Omega}{\\|\\sigma\\|_{0,\\Omega_e}\\,\\|u\\|_{1,\\Omega_e}} \\;\\ge\\; \\beta_0 \\;>\\; 0\n$$\nensures the stability of the mixed finite element. Algebraically, it demands that $G$ has full column rank over $\\Sigma_h$ when paired with $\\mathcal{V}_h$, so that $G$ is injective on $\\Sigma_h^\\top$ and the Schur complement $K_e = G^\\top H^{-1} G$ is positive semidefinite with a nullspace consisting exactly of the rigid body modes. If the condition is violated, there exists nonzero $u_e$ such that $G u_e = 0$, implying $K_e u_e = 0$ and producing spurious zero-energy (hourglass-like) modes.\n\nTo make this concrete, we consider two choices of $P(\\xi,\\eta)$:\n\n1. An unstable, under-enriched stress space with constant stress,\n$$\nP_{\\text{const}}(\\xi,\\eta) \\;=\\;\n\\begin{bmatrix}\n1 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{bmatrix},\n$$\nso $\\beta \\in \\mathbb{R}^3$. In this case, $G$ integrates $B$ against constants, hence its rank cannot exceed $3$. For the four-node bilinear quadrilateral with eight displacement degrees of freedom, the condensed stiffness $K_e$ has rank at most $3$, implying that the dimension of its nullspace is at least $8-3=5$. Of these five, exactly three correspond to rigid body motions (two translations and one in-plane rotation), leaving at least two spurious zero-energy modes. These are the well-known hourglass modes: displacement patterns that cause zero average strains in the three Voigt components over the element, thus producing zero internal virtual work against any constant stress field. This directly exhibits a violation of the inf–sup condition, since the numerator $\\int_{\\Omega_e} \\sigma : \\varepsilon(u)\\,\\mathrm{d}\\Omega$ can be made zero for nontrivial $u$ and any $\\sigma$ in the stress space, resulting in $\\beta_0 = 0$.\n\n2. A more expressive, five-parameter stress space with weak linear variation,\n$$\nP_{\\text{lin5}}(\\xi,\\eta) \\;=\\;\n\\begin{bmatrix}\n1 & 0 & 0 & \\xi & 0 \\\\\n0 & 1 & 0 & 0 & \\eta \\\\\n0 & 0 & 1 & 0 & 0\n\\end{bmatrix},\n$$\nso $\\beta \\in \\mathbb{R}^5$. Here, the rank of $G$ increases to at most $5$, and for a nondegenerate quadrilateral the five columns of $P_{\\text{lin5}}$ couple nontrivially with the bilinear $B$ so that $G$ typically achieves rank $5$. Consequently, $K_e$ has rank $5$, so its nullspace has dimension $8-5=3$, which matches exactly the rigid body modes, leaving no spurious modes. This satisfies the inf–sup condition on the element, with $\\beta_0 > 0$.\n\nNumerical construction proceeds as follows:\n\n- Build the isoparametric mapping from $(\\xi,\\eta)\\in[-1,1]^2$ to physical coordinates using the bilinear shape functions $N_i(\\xi,\\eta) = \\tfrac{1}{4}(1+\\xi\\xi_i)(1+\\eta\\eta_i)$ with $(\\xi_i,\\eta_i)\\in\\{(-1,-1),(1,-1),(1,1),(-1,1)\\}$. Compute the Jacobian matrix $J(\\xi,\\eta)$ and its determinant. Compute $\\partial N_i/\\partial x$ and $\\partial N_i/\\partial y$ from $\\partial N_i/\\partial \\xi$ and $\\partial N_i/\\partial \\eta$ via $J^{-1}$.\n\n- Form $B(\\xi,\\eta)$ from the physical derivatives and integrate $G = \\int P^\\top B\\,\\mathrm{d}\\Omega$ and $H = \\int P^\\top \\mathbb{C}^{-1} P\\,\\mathrm{d}\\Omega$ using $2\\times 2$ Gauss quadrature, which is exact for the polynomial degrees that arise here (at most quadratic in the integrands).\n\n- Compute the condensed stiffness $K_e = G^\\top H^{-1} G$.\n\n- Solve the eigenproblem $K_e \\phi_i = \\lambda_i \\phi_i$ and declare eigenvalues $\\lambda_i$ as zero if $\\lambda_i < \\varepsilon = 10^{-8} \\lambda_{\\max}$, where $\\lambda_{\\max} = \\max_i \\lambda_i$. Let $n_0$ be the number of such zero eigenvalues. Construct the rigid body mode basis on the element as three vectors in $\\mathbb{R}^8$: two translations in $x$ and $y$ with unit displacements at all nodes, and one in-plane rotation about the centroid $(\\bar X,\\bar Y)$ given by $u_x = -(Y_i-\\bar Y)$ and $u_y = (X_i-\\bar X)$ at node $i$. Let $N_0$ be the matrix of eigenvectors spanning the nullspace (those with zero eigenvalues). The effective dimension $n_{\\text{rbm}}$ of the intersection of the nullspace with the rigid body mode space is the numerical rank of $N_0^\\top R$, where $R$ is the $8\\times 3$ rigid body basis. The hourglass count is $n_{\\text{hg}} = n_0 - n_{\\text{rbm}}$.\n\nApplying this to the four specified tests:\n\n- Test case $1$ (unstable, square) with $P_{\\text{const}}$: We expect $\\operatorname{rank}(G)=3$, hence $n_0=5$ and $n_{\\text{hg}}=5-3=2$ hourglass modes.\n\n- Test case $2$ (stable, square) with $P_{\\text{lin5}}$: We expect $\\operatorname{rank}(G)=5$, hence $n_0=3$ and $n_{\\text{hg}}=0$.\n\n- Test case $3$ (unstable, distorted) with $P_{\\text{const}}$: Geometry distortion changes $B$ but does not increase the maximum rank of $G$ beyond $3$, so $n_0=5$ and $n_{\\text{hg}}=2$ remain.\n\n- Test case $4$ (stable, distorted) with $P_{\\text{lin5}}$: The coupling remains sufficient to achieve $\\operatorname{rank}(G)=5$, so $n_0=3$ and $n_{\\text{hg}}=0$.\n\nThe algorithm therefore computes, per test case, the hourglass mode count as an integer. The final program outputs a single line containing the four integers in a Python-style list, i.e., $[n_{\\text{hg},1},n_{\\text{hg},2},n_{\\text{hg},3},n_{\\text{hg},4}]$.", "answer": "```python\nimport numpy as np\n\ndef plane_strain_C(E, nu):\n    lam = nu * E / ((1 + nu) * (1 - 2 * nu))\n    mu = E / (2 * (1 + nu))\n    C = np.array([\n        [lam + 2 * mu, lam, 0.0],\n        [lam, lam + 2 * mu, 0.0],\n        [0.0, 0.0, mu]\n    ], dtype=float)\n    return C\n\ndef shape_functions_Q4(ksi, eta):\n    N = np.array([\n        0.25 * (1 - ksi) * (1 - eta),\n        0.25 * (1 + ksi) * (1 - eta),\n        0.25 * (1 + ksi) * (1 + eta),\n        0.25 * (1 - ksi) * (1 + eta)\n    ], dtype=float)\n    dN_dksi = np.array([\n        -0.25 * (1 - eta),\n         0.25 * (1 - eta),\n         0.25 * (1 + eta),\n        -0.25 * (1 + eta)\n    ], dtype=float)\n    dN_deta = np.array([\n        -0.25 * (1 - ksi),\n        -0.25 * (1 + ksi),\n         0.25 * (1 + ksi),\n         0.25 * (1 - ksi)\n    ], dtype=float)\n    return N, dN_dksi, dN_deta\n\ndef jacobian_Q4(dN_dksi, dN_deta, x, y):\n    # x, y are arrays of nodal coordinates length 4\n    J = np.zeros((2, 2), dtype=float)\n    # J = [dx/dksi, dx/deta; dy/dksi, dy/deta]\n    J[0, 0] = np.dot(dN_dksi, x)\n    J[0, 1] = np.dot(dN_deta, x)\n    J[1, 0] = np.dot(dN_dksi, y)\n    J[1, 1] = np.dot(dN_deta, y)\n    return J\n\ndef B_matrix_Q4(ksi, eta, coords):\n    # coords: 4x2 array of nodal coords\n    x = coords[:, 0]\n    y = coords[:, 1]\n    N, dN_dksi, dN_deta = shape_functions_Q4(ksi, eta)\n    J = jacobian_Q4(dN_dksi, dN_deta, x, y)\n    detJ = np.linalg.det(J)\n    invJ = np.linalg.inv(J)\n    # gradients in physical coordinates\n    dN = np.vstack((dN_dksi, dN_deta))  # 2x4\n    dN_dxy = invJ @ dN  # 2x4\n    dN_dx = dN_dxy[0, :]\n    dN_dy = dN_dxy[1, :]\n    # Build B (3x8)\n    B = np.zeros((3, 8), dtype=float)\n    for i in range(4):\n        B[0, 2 * i]     = dN_dx[i]\n        B[1, 2 * i + 1] = dN_dy[i]\n        B[2, 2 * i]     = dN_dy[i]\n        B[2, 2 * i + 1] = dN_dx[i]\n    return B, detJ\n\ndef P_const(ksi, eta):\n    # 3x3\n    return np.array([\n        [1.0, 0.0, 0.0],\n        [0.0, 1.0, 0.0],\n        [0.0, 0.0, 1.0]\n    ], dtype=float)\n\ndef P_lin5(ksi, eta):\n    # 3x5 with weak linear terms\n    return np.array([\n        [1.0, 0.0, 0.0, ksi, 0.0],\n        [0.0, 1.0, 0.0, 0.0, eta],\n        [0.0, 0.0, 1.0, 0.0, 0.0]\n    ], dtype=float)\n\ndef gauss_points_2x2():\n    a = 1.0 / np.sqrt(3.0)\n    pts = [(-a, -a), (a, -a), (a, a), (-a, a)]\n    w = [1.0, 1.0, 1.0, 1.0]\n    return pts, w\n\ndef assemble_G_H(coords, Cinv, P_mode):\n    pts, wts = gauss_points_2x2()\n    # determine size of beta from P at first point\n    p0 = P_mode(0.0, 0.0)\n    m = p0.shape[1]  # number of stress parameters\n    G = np.zeros((m, 8), dtype=float)\n    H = np.zeros((m, m), dtype=float)\n    for (ksi, eta), w in zip(pts, wts):\n        P = P_mode(ksi, eta)  # 3 x m\n        B, detJ = B_matrix_Q4(ksi, eta, coords)\n        weight = w * detJ\n        G += (P.T @ B) * weight\n        H += (P.T @ Cinv @ P) * weight\n    return G, H\n\ndef condensed_stiffness(coords, E, nu, mode):\n    C = plane_strain_C(E, nu)\n    Cinv = np.linalg.inv(C)\n    if mode == \"const\":\n        P_mode = P_const\n    elif mode == \"lin5\":\n        P_mode = P_lin5\n    else:\n        raise ValueError(\"Unknown mode\")\n    G, H = assemble_G_H(coords, Cinv, P_mode)\n    # Regularize potential tiny asymmetry due to quadrature/numerics\n    Hsym = 0.5 * (H + H.T)\n    # Invert H\n    Hinv = np.linalg.inv(Hsym)\n    Ke = G.T @ Hinv @ G\n    # Symmetrize Ke\n    Ke = 0.5 * (Ke + Ke.T)\n    return Ke\n\ndef rigid_body_basis(coords):\n    # Returns 8x3 matrix: [tx, ty, rot]\n    n = 4\n    R = np.zeros((2 * n, 3), dtype=float)\n    # Translations\n    for i in range(n):\n        R[2 * i, 0] = 1.0  # x translation\n        R[2 * i + 1, 1] = 1.0  # y translation\n    # Rotation about centroid\n    Xc = np.mean(coords[:, 0])\n    Yc = np.mean(coords[:, 1])\n    for i in range(n):\n        xi = coords[i, 0] - Xc\n        yi = coords[i, 1] - Yc\n        R[2 * i, 2] = -yi\n        R[2 * i + 1, 2] = xi\n    # Orthonormalize via QR to improve numerical conditioning\n    Q, _ = np.linalg.qr(R)\n    return Q[:, :3]\n\ndef hourglass_count(Ke, coords):\n    # Eigen-decomposition\n    w, V = np.linalg.eigh(Ke)\n    lam_max = np.max(w) if np.max(w) > 0 else 1.0\n    tol = 1e-8 * lam_max\n    zero_idx = np.where(w < tol)[0]\n    N_null = V[:, zero_idx] if zero_idx.size > 0 else np.zeros((Ke.shape[0], 0))\n    n0 = N_null.shape[1]\n    # Project rigid body modes into nullspace\n    R = rigid_body_basis(coords)  # 8x3\n    # Compute numerical rank of N_null^T R\n    M = N_null.T @ R  # k x 3\n    if M.size == 0:\n        n_rbm = 0\n    else:\n        s = np.linalg.svd(M, compute_uv=False)\n        # Rank tolerance relative to largest singular value\n        tol_s = 1e-8 * (s[0] if s.size > 0 else 1.0)\n        n_rbm = int(np.sum(s > tol_s))\n    n_hourglass = max(n0 - n_rbm, 0)\n    return n_hourglass\n\ndef solve():\n    # Define material\n    E = 210e9\n    nu = 0.3\n    # Test cases: (coords, mode)\n    coords_square = np.array([[-1.0, -1.0],\n                              [ 1.0, -1.0],\n                              [ 1.0,  1.0],\n                              [-1.0,  1.0]], dtype=float)\n    coords_distorted = np.array([[-1.0, -1.0],\n                                 [ 1.2, -0.8],\n                                 [ 1.1,  1.1],\n                                 [-1.1,  0.9]], dtype=float)\n    test_cases = [\n        (coords_square, \"const\"),\n        (coords_square, \"lin5\"),\n        (coords_distorted, \"const\"),\n        (coords_distorted, \"lin5\"),\n    ]\n    results = []\n    for coords, mode in test_cases:\n        Ke = condensed_stiffness(coords, E, nu, mode)\n        n_hg = hourglass_count(Ke, coords)\n        results.append(int(n_hg))\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2566183"}, {"introduction": "Even an element formulation that is stable on an ideal shape can fail when subjected to geometric distortion. This analytical practice [@problem_id:2566157] provides a focused investigation into how element geometry can induce numerical instability. You will derive the matrices for a hybrid stress element and analyze how the rank of a key matrix, which connects the assumed stress parameters $\\boldsymbol{\\beta}$ to nodal forces, degrades as the element becomes severely distorted. This exercise offers a concrete look at the mathematical origin of such pathologies and highlights the critical interplay between element geometry and the stability of the formulation.", "problem": "Consider a single three-node linear triangular hybrid stress finite element in plane stress with no body forces. The triangle has nodes at coordinates $(0,0)$, $(1,0)$, and $(0,\\alpha)$, where $\\alpha>0$ is a distortion parameter (height). In the hybrid stress formulation, an independent, self-equilibrated stress field is assumed inside the element, and interelement continuity is enforced weakly via boundary virtual work. Adopt the constant stress (self-equilibrated) mode\n$$\n\\widehat{\\boldsymbol{\\sigma}}(\\boldsymbol{\\beta}) \\equiv \n\\begin{bmatrix}\n\\sigma_{x} \\\\\n\\sigma_{y} \\\\\n\\tau_{xy}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\beta_{1} \\\\\n\\beta_{2} \\\\\n\\beta_{3}\n\\end{bmatrix},\n$$\nwhere $\\beta_{1}$, $\\beta_{2}$, and $\\beta_{3}$ are the stress parameters. Let $\\mathbf{t} = \\widehat{\\boldsymbol{\\sigma}}\\,\\mathbf{n}$ be the traction vector on the element boundary, with $\\mathbf{n}$ the outward unit normal, and let $\\mathbf{N}$ be the standard linear shape-function matrix that interpolates nodal displacements along each edge. The generalized nodal force vector associated with the element boundary is defined by the boundary virtual work identity\n$$\n\\mathbf{f}(\\boldsymbol{\\beta}) \\equiv \\int_{\\partial\\Omega_{e}} \\mathbf{N}^{\\mathsf{T}} \\mathbf{t} \\, \\mathrm{d}\\Gamma,\n$$\nso that $\\mathbf{f}(\\boldsymbol{\\beta}) = \\mathbf{H}(\\alpha)\\,\\boldsymbol{\\beta}$ for some matrix $\\mathbf{H}(\\alpha)$ that depends on the element geometry.\n\nSelect the three independent nodal displacement degrees of freedom to be the $x$-displacement at node $2$, the $y$-displacement at node $3$, and the $x$-displacement at node $1$. Assemble the corresponding $3\\times 3$ matrix $\\mathbf{H}(\\alpha)$ that maps $\\boldsymbol{\\beta}$ to the generalized nodal forces conjugate to these three degrees of freedom by evaluating the boundary integral exactly in terms of the edge lengths and outward normals.\n\nThen, analyze the invertibility of $\\mathbf{H}(\\alpha)$ by computing its rank for the specific distorted element with $\\alpha=\\tfrac{1}{3}$. In your reasoning, start from the definitions of traction, shape functions on a linear edge, and the boundary virtual work statement for a hybrid stress element, and explain why and how element distortion (as $\\alpha \\to 0$) can cause a loss of rank.\n\nReport only the rank of $\\mathbf{H}(\\tfrac{1}{3})$ as your final numerical answer. No units are required. No rounding is needed.", "solution": "The problem requires the formulation of a matrix $\\mathbf{H}(\\alpha)$ that relates assumed stress parameters to generalized nodal forces for a three-node triangular hybrid stress element, and an analysis of its rank.\n\nThe solution proceeds by first defining the element geometry and the properties of its boundary. The element has three edges:\n1.  Edge 1-2: from node $1$ $(0,0)$ to node $2$ $(1,0)$. The length is $L_{12} = 1$. The outward unit normal vector is $\\mathbf{n}_{12} = [0, -1]^{\\mathsf{T}}$.\n2.  Edge 2-3: from node $2$ $(1,0)$ to node $3$ $(0,\\alpha)$. The length is $L_{23} = \\sqrt{(0-1)^2 + (\\alpha-0)^2} = \\sqrt{1+\\alpha^2}$. The outward unit normal vector is $\\mathbf{n}_{23} = \\frac{1}{\\sqrt{1+\\alpha^2}}[\\alpha, 1]^{\\mathsf{T}}$.\n3.  Edge 3-1: from node $3$ $(0,\\alpha)$ to node $1$ $(0,0)$. The length is $L_{31} = \\sqrt{(0-0)^2 + (0-\\alpha)^2} = \\alpha$. The outward unit normal vector is $\\mathbf{n}_{31} = [-1, 0]^{\\mathsf{T}}$.\n\nThe traction vector $\\mathbf{t}$ on a boundary with outward normal $\\mathbf{n}=[n_x, n_y]^{\\mathsf{T}}$ is given by $\\mathbf{t} = \\boldsymbol{\\sigma} \\mathbf{n}$. Using the problem's Voigt notation for stress, $\\boldsymbol{\\sigma} = \\begin{bmatrix} \\sigma_x & \\tau_{xy} \\\\ \\tau_{xy} & \\sigma_y \\end{bmatrix}$, this is:\n$$\n\\mathbf{t} = \\begin{bmatrix} t_x \\\\ t_y \\end{bmatrix} = \\begin{bmatrix} \\sigma_x n_x + \\tau_{xy} n_y \\\\ \\tau_{xy} n_x + \\sigma_y n_y \\end{bmatrix} = \\begin{bmatrix} n_x & 0 & n_y \\\\ 0 & n_y & n_x \\end{bmatrix} \\begin{bmatrix} \\beta_1 \\\\ \\beta_2 \\\\ \\beta_3 \\end{bmatrix}\n$$\nThe traction vector is constant along each edge because the stress field is constant. The traction vectors on the three edges are:\n$$\n\\mathbf{t}_{12} = \\begin{bmatrix} 0 & 0 & -1 \\\\ 0 & -1 & 0 \\end{bmatrix} \\boldsymbol{\\beta} = \\begin{bmatrix} -\\beta_3 \\\\ -\\beta_2 \\end{bmatrix}\n$$\n$$\n\\mathbf{t}_{23} = \\frac{1}{L_{23}} \\begin{bmatrix} \\alpha & 0 & 1 \\\\ 0 & 1 & \\alpha \\end{bmatrix} \\boldsymbol{\\beta}\n$$\n$$\n\\mathbf{t}_{31} = \\begin{bmatrix} -1 & 0 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix} \\boldsymbol{\\beta} = \\begin{bmatrix} -\\beta_1 \\\\ -\\beta_3 \\end{bmatrix}\n$$\nThe generalized nodal force vector $\\mathbf{f}$ is obtained by integrating the work of the tractions against the virtual displacements interpolated by the shape function matrix $\\mathbf{N}$. For a linear element edge between nodes $i$ and $j$, the nodal forces due to a constant traction $\\mathbf{t}$ along the edge of length $L$ are found by distributing the total force $L\\mathbf{t}$ equally to both nodes:\n$$\n\\int_{\\text{edge } ij} \\mathbf{N}^{\\mathsf{T}} \\mathbf{t} \\, \\mathrm{d}\\Gamma = \\frac{L}{2} \\begin{bmatrix} \\mathbf{t} \\\\ \\mathbf{t} \\end{bmatrix}\n$$\nwhere the resulting force vector is partitioned for node $i$ and node $j$.\n\nThe force contributions from each edge are:\n-   Edge 1-2: Force on node $1$ is $\\frac{L_{12}}{2}\\mathbf{t}_{12} = \\frac{1}{2}[-\\beta_3, -\\beta_2]^{\\mathsf{T}}$. Force on node $2$ is also $\\frac{1}{2}[-\\beta_3, -\\beta_2]^{\\mathsf{T}}$.\n-   Edge 2-3: Force on node $2$ is $\\frac{L_{23}}{2}\\mathbf{t}_{23} = \\frac{1}{2}[\\alpha\\beta_1 + \\beta_3, \\beta_2 + \\alpha\\beta_3]^{\\mathsf{T}}$. Force on node $3$ is the same.\n-   Edge 3-1: Force on node $3$ is $\\frac{L_{31}}{2}\\mathbf{t}_{31} = \\frac{\\alpha}{2}[-\\beta_1, -\\beta_3]^{\\mathsf{T}}$. Force on node $1$ is the same.\n\nThe total nodal forces are found by summing the contributions at each node:\n$$\n\\mathbf{f}_1 = \\begin{bmatrix} f_{1x} \\\\ f_{1y} \\end{bmatrix} = \\frac{1}{2}\\begin{bmatrix} -\\beta_3 \\\\ -\\beta_2 \\end{bmatrix} + \\frac{\\alpha}{2}\\begin{bmatrix} -\\beta_1 \\\\ -\\beta_3 \\end{bmatrix} = \\frac{1}{2}\\begin{bmatrix} -\\alpha\\beta_1 - \\beta_3 \\\\ -\\beta_2 - \\alpha\\beta_3 \\end{bmatrix}\n$$\n$$\n\\mathbf{f}_2 = \\begin{bmatrix} f_{2x} \\\\ f_{2y} \\end{bmatrix} = \\frac{1}{2}\\begin{bmatrix} -\\beta_3 \\\\ -\\beta_2 \\end{bmatrix} + \\frac{1}{2}\\begin{bmatrix} \\alpha\\beta_1 + \\beta_3 \\\\ \\beta_2 + \\alpha\\beta_3 \\end{bmatrix} = \\frac{1}{2}\\begin{bmatrix} \\alpha\\beta_1 \\\\ \\alpha\\beta_3 \\end{bmatrix}\n$$\n$$\n\\mathbf{f}_3 = \\begin{bmatrix} f_{3x} \\\\ f_{3y} \\end{bmatrix} = \\frac{1}{2}\\begin{bmatrix} \\alpha\\beta_1 + \\beta_3 \\\\ \\beta_2 + \\alpha\\beta_3 \\end{bmatrix} + \\frac{\\alpha}{2}\\begin{bmatrix} -\\beta_1 \\\\ -\\beta_3 \\end{bmatrix} = \\frac{1}{2}\\begin{bmatrix} \\beta_3 \\\\ \\beta_2 \\end{bmatrix}\n$$\nThe sum of nodal forces $\\mathbf{f}_1+\\mathbf{f}_2+\\mathbf{f}_3 = \\mathbf{0}$, which confirms equilibrium.\n\nThe problem specifies the degrees of freedom corresponding to the $x$-displacement at node $2$ ($u_2$), the $y$-displacement at node $3$ ($v_3$), and the $x$-displacement at node $1$ ($u_1$). The corresponding generalized forces are $f_{2x}$, $f_{3y}$, and $f_{1x}$. We assemble the vector of these forces:\n$$\n\\mathbf{f}_{\\text{selected}} = \\begin{pmatrix} f_{2x} \\\\ f_{3y} \\\\ f_{1x} \\end{pmatrix} = \\frac{1}{2} \\begin{pmatrix} \\alpha\\beta_1 \\\\ \\beta_2 \\\\ -\\alpha\\beta_1 - \\beta_3 \\end{pmatrix}\n$$\nThis relationship is expressed in matrix form as $\\mathbf{f}_{\\text{selected}} = \\mathbf{H}(\\alpha)\\boldsymbol{\\beta}$:\n$$\n\\begin{pmatrix} f_{2x} \\\\ f_{3y} \\\\ f_{1x} \\end{pmatrix} = \\frac{1}{2} \\begin{bmatrix} \\alpha & 0 & 0 \\\\ 0 & 1 & 0 \\\\ -\\alpha & 0 & -1 \\end{bmatrix} \\begin{pmatrix} \\beta_1 \\\\ \\beta_2 \\\\ \\beta_3 \\end{pmatrix}\n$$\nTherefore, the matrix $\\mathbf{H}(\\alpha)$ is:\n$$\n\\mathbf{H}(\\alpha) = \\frac{1}{2} \\begin{bmatrix} \\alpha & 0 & 0 \\\\ 0 & 1 & 0 \\\\ -\\alpha & 0 & -1 \\end{bmatrix}\n$$\nTo find the rank of $\\mathbf{H}(\\alpha)$ for $\\alpha = \\frac{1}{3}$, we first substitute this value:\n$$\n\\mathbf{H}(\\tfrac{1}{3}) = \\frac{1}{2} \\begin{bmatrix} 1/3 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ -1/3 & 0 & -1 \\end{bmatrix}\n$$\nThe rank of a square matrix is its dimension if and only if its determinant is non-zero. The determinant is:\n$$\n\\det(\\mathbf{H}(\\tfrac{1}{3})) = \\left(\\frac{1}{2}\\right)^3 \\det \\begin{bmatrix} 1/3 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ -1/3 & 0 & -1 \\end{bmatrix} = \\frac{1}{8} \\left( \\frac{1}{3} \\cdot (1 \\cdot (-1) - 0 \\cdot 0) \\right) = \\frac{1}{8} \\left( -\\frac{1}{3} \\right) = -\\frac{1}{24}\n$$\nSince $\\det(\\mathbf{H}(\\tfrac{1}{3})) \\neq 0$, the matrix is invertible and has full rank. As it is a $3 \\times 3$ matrix, its rank is $3$.\n\nFinally, we analyze the effect of element distortion as $\\alpha \\to 0$. The determinant of $\\mathbf{H}(\\alpha)$ is $\\det(\\mathbf{H}(\\alpha)) = -\\frac{\\alpha}{8}$. As the element distorts and flattens, $\\alpha \\to 0$, causing $\\det(\\mathbf{H}(\\alpha)) \\to 0$. The matrix becomes singular, which signifies a loss of rank.\nIn the limit $\\alpha=0$, the matrix is:\n$$\n\\mathbf{H}(0) = \\frac{1}{2} \\begin{bmatrix} 0 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & -1 \\end{bmatrix}\n$$\nThe first row is a zero vector, and the second and third rows are linearly independent. Thus, the rank of $\\mathbf{H}(0)$ is $2$, a drop from the full rank of $3$.\nThis rank deficiency implies the existence of a non-trivial null space for $\\mathbf{H}(0)$. Solving $\\mathbf{H}(0)\\boldsymbol{\\beta} = \\mathbf{0}$ yields $\\beta_2=0$ and $\\beta_3=0$, with $\\beta_1$ being unconstrained. This means a stress state $\\boldsymbol{\\beta} = [c, 0, 0]^{\\mathsf{T}}$ for any non-zero constant $c$ produces zero nodal forces for the selected degrees of freedom. This corresponds to a pure uniaxial stress $\\sigma_x = \\beta_1$ which, in the degenerate geometry, creates no work against the nodal displacements. This is a spurious \"zero-energy mode\" or \"kinematic mode,\" an artifact that destabilizes the element stiffness matrix $\\mathbf{K}_e = \\mathbf{H} \\mathbf{S}^{-1} \\mathbf{H}^{\\mathsf{T}}$, which also loses rank. The loss of rank in $\\mathbf{H}$ due to geometric distortion is the mathematical indicator of this critical numerical instability.", "answer": "$$\n\\boxed{3}\n$$", "id": "2566157"}]}