{"hands_on_practices": [{"introduction": "This exercise serves as a foundational check of your understanding of the core kinematic quantities in the Total Lagrangian formulation. By starting with a simple, homogeneous deformation map, you will derive the deformation gradient ($F$), the right Cauchy-Green tensor ($C$), and the Jacobian ($J$), reinforcing the direct link between the mapping and these crucial measures of deformation and volume change. This practice is essential for building an intuitive feel for what these tensors represent before tackling more complex, non-homogeneous deformations. [@problem_id:2607122]", "problem": "Consider a body in a reference configuration in $\\mathbb{R}^{3}$ with material point position $X \\in \\Omega_{0} \\subset \\mathbb{R}^{3}$. A homogeneous deformation is prescribed by the mapping $\\varphi:\\Omega_{0}\\to\\mathbb{R}^{3}$ given by $\\varphi(X)=\\mathrm{diag}(\\lambda_{1},\\lambda_{2},\\lambda_{3})\\,X$, where $\\lambda_{1},\\lambda_{2},\\lambda_{3}\\in\\mathbb{R}$ are constants. Using the kinematics of the Total Lagrangian (TL) formulation for finite deformation, derive from first principles the deformation gradient $F$, the right Cauchy–Green tensor $C$, and the Jacobian $J$ of the deformation. Then, based on the fundamental physical and mathematical admissibility requirements in TL finite element analysis (including orientation preservation, non-interpenetration, and invertibility of the deformation), identify the set of triplets $\\{\\lambda_{i}\\}_{i=1}^{3}$ that produce admissible deformations and justify your answer.\n\nProvide all steps of your derivation starting from the core definitions of $F$, $C$, and $J$ in the reference configuration. For grading purposes, report as your final answer only the closed-form analytic expression you obtain for $J$ in terms of $\\lambda_{1}$, $\\lambda_{2}$, and $\\lambda_{3}$. No rounding is required and no units are involved in the final reported quantity.", "solution": "The problem statement is subjected to validation and is found to be valid. It is scientifically grounded in the principles of continuum mechanics, well-posed, objective, and contains all necessary information for a unique solution. We shall proceed with the derivation.\n\nThe problem describes a homogeneous deformation of a body from a reference configuration $\\Omega_{0}$ to a current configuration. A material point with position vector $X \\in \\Omega_{0}$ is mapped to a spatial position $x \\in \\Omega$ by the function $\\varphi$. The components of $X$ are $(X_{1}, X_{2}, X_{3})$ and the components of $x$ are $(x_{1}, x_{2}, x_{3})$. The prescribed deformation mapping is given by:\n$$\nx = \\varphi(X) = \\mathbf{A} X\n$$\nwhere $\\mathbf{A}$ is a constant matrix given as $\\mathrm{diag}(\\lambda_{1}, \\lambda_{2}, \\lambda_{3})$. In component form, this is:\n$$\n\\begin{pmatrix} x_{1} \\\\ x_{2} \\\\ x_{3} \\end{pmatrix} = \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix} \\begin{pmatrix} X_{1} \\\\ X_{2} \\\\ X_{3} \\end{pmatrix}\n$$\nwhich expands to $x_{1} = \\lambda_{1} X_{1}$, $x_{2} = \\lambda_{2} X_{2}$, and $x_{3} = \\lambda_{3} X_{3}$, with $\\lambda_{1}, \\lambda_{2}, \\lambda_{3}$ being constant real numbers.\n\nFirst, we derive the deformation gradient tensor, $F$. By definition, $F$ is the material gradient of the deformation map $\\varphi$ with respect to the reference coordinates $X$. Its components are given by $F_{ij} = \\frac{\\partial \\varphi_{i}}{\\partial X_{j}} = \\frac{\\partial x_{i}}{\\partial X_{j}}$. We compute each component:\n$$\nF_{11} = \\frac{\\partial x_{1}}{\\partial X_{1}} = \\frac{\\partial (\\lambda_{1} X_{1})}{\\partial X_{1}} = \\lambda_{1}\n$$\n$$\nF_{22} = \\frac{\\partial x_{2}}{\\partial X_{2}} = \\frac{\\partial (\\lambda_{2} X_{2})}{\\partial X_{2}} = \\lambda_{2}\n$$\n$$\nF_{33} = \\frac{\\partial x_{3}}{\\partial X_{3}} = \\frac{\\partial (\\lambda_{3} X_{3})}{\\partial X_{3}} = \\lambda_{3}\n$$\nAll off-diagonal components are zero. For instance, for $i \\neq j$:\n$$\nF_{ij} = \\frac{\\partial x_{i}}{\\partial X_{j}} = \\frac{\\partial (\\lambda_{i} X_{i})}{\\partial X_{j}} = 0\n$$\nThus, the deformation gradient tensor is a diagonal matrix:\n$$\nF = \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix}\n$$\n\nSecond, we derive the right Cauchy–Green tensor, $C$. This tensor measures the deformation in the reference configuration and is defined as $C = F^{T}F$, where $F^{T}$ is the transpose of $F$. Since $F$ is a diagonal matrix, its transpose is identical to itself, i.e., $F^{T} = F$. Therefore:\n$$\nC = F^{T}F = F F = F^{2}\n$$\nThe product of two diagonal matrices is a diagonal matrix whose elements are the products of the corresponding diagonal elements of the original matrices.\n$$\nC = \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix} \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix} = \\begin{pmatrix} \\lambda_{1}^{2} & 0 & 0 \\\\ 0 & \\lambda_{2}^{2} & 0 \\\\ 0 & 0 & \\lambda_{3}^{2} \\end{pmatrix}\n$$\n\nThird, we derive the Jacobian of the deformation, $J$. The Jacobian is defined as the determinant of the deformation gradient tensor, $J = \\det(F)$. It represents the local ratio of volume change from the reference to the current configuration, i.e., $J = \\frac{dV}{dV_{0}}$. For the derived $F$:\n$$\nJ = \\det \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix}\n$$\nThe determinant of a diagonal matrix is the product of its diagonal elements. Therefore:\n$$\nJ = \\lambda_{1} \\lambda_{2} \\lambda_{3}\n$$\n\nFinally, we must identify the set of triplets $\\{\\lambda_{i}\\}_{i=1}^{3}$ that produce admissible deformations. A deformation is physically and mathematically admissible if it satisfies several fundamental requirements:\n1.  **Invertibility of the deformation mapping**: The map $\\varphi$ must be one-to-one, ensuring that each spatial point $x$ corresponds to a unique material point $X$. This requires the deformation gradient $F$ to be an invertible matrix, which is true if and only if its determinant is non-zero. Thus, we must have $J \\neq 0$. This condition prevents the collapse of a finite volume into a surface, line, or point (where $J=0$), or the creation of finite volume from a lower-dimensional object (where $J$ would be infinite).\n2.  **Non-interpenetration of matter**: This physical axiom states that it is impossible for two distinct material particles to occupy the same spatial position simultaneously. This is guaranteed if the mapping is invertible, i.e., $J \\neq 0$.\n3.  **Preservation of orientation**: This requirement dictates that the \"handedness\" of a local material basis must be preserved. A right-handed basis in the reference configuration must map to a right-handed basis in the current configuration. This is satisfied if and only if the Jacobian is strictly positive: $J > 0$. A deformation with $J  0$ corresponds to a local eversion or reflection of the material, which is considered physically impossible for a real body undergoing a continuous deformation process starting from an undeformed state (where $J=1$).\n\nCombining these, the necessary condition for an admissible final state is $J = \\lambda_{1} \\lambda_{2} \\lambda_{3} > 0$. This implies that either all three $\\lambda_{i}$ are positive, or one is positive and two are negative.\n\nHowever, we must consider the entire deformation process. In the Total Lagrangian formulation, the deformation is typically viewed as a continuous process starting from a reference, undeformed state where $X=x$, so $F = I$ (the identity matrix) and $\\lambda_{1} = \\lambda_{2} = \\lambda_{3} = 1$. The Jacobian is initially $J=1$. For a continuous and physically plausible deformation path, the Jacobian $J(t)$ must remain positive for all time $t$ during the process. It cannot pass through zero to become negative. This imposes a stricter constraint. The principal stretches $\\lambda_{i}$ themselves must vary continuously from their initial value of $1$. For any $\\lambda_{i}$ to become negative, it must pass through the value $0$. At the instant a single $\\lambda_{i}$ becomes $0$, the Jacobian $J = \\lambda_{1} \\lambda_{2} \\lambda_{3}$ becomes $0$, which corresponds to a singular, physically impermissible state.\n\nTherefore, for a deformation to be reachable via a continuous physical path from the reference state, each principal stretch must remain positive throughout the process. This leads to the final admissibility condition:\n$$\n\\lambda_{1} > 0, \\quad \\lambda_{2} > 0, \\quad \\lambda_{3} > 0\n$$\nThe set of admissible triplets is thus $\\{\\lambda_{1}, \\lambda_{2}, \\lambda_{3}\\} \\in \\mathbb{R}^{3}$ such that $\\lambda_{i} > 0$ for $i \\in \\{1, 2, 3\\}$. This stricter condition automatically satisfies the necessary mathematical condition $J > 0$.", "answer": "$$\\boxed{\\lambda_{1} \\lambda_{2} \\lambda_{3}}$$", "id": "2607122"}, {"introduction": "The principle of virtual work requires integrating quantities over the element's volume, a task performed numerically using Gaussian quadrature. This exercise challenges you to determine the minimum integration order needed to compute the internal virtual work exactly under specific, yet insightful, hypothetical conditions. Performing this analysis will force you to think critically about the polynomial nature of the integrand, connecting the choice of element interpolation, the definitions of strain and stress, and the rules of numerical integration—a vital skill for writing efficient and accurate finite element code. [@problem_id:2607106]", "problem": "A three-dimensional $8$-node isoparametric hexahedral element ($Q_1$) is used in a total Lagrangian finite element formulation for a homogeneous hyperelastic solid. The element is undistorted in the reference configuration, so the isoparametric mapping from the parent domain $[-1,1]^3$ to the reference domain is affine with a constant Jacobian determinant. The trial and virtual displacement fields are interpolated with the same trilinear shape functions and are such that the displacement field within the element is linear in the reference coordinates.\n\nUsing only fundamental definitions (the total Lagrangian principle of virtual work, the definitions of the deformation gradient, Green–Lagrange strain, and Second Piola–Kirchhoff stress) and well-tested facts about Gaussian quadrature, determine the minimal Gauss–Legendre quadrature order per parametric direction, denoted by $n$, required to exactly integrate the internal virtual work over the element. Report your answer as the integer $n$.", "solution": "The problem statement is subjected to validation and is found to be valid. It is scientifically grounded in the principles of continuum mechanics and the finite element method, and it is well-posed, objective, and self-contained. There are no contradictions or ambiguities that prevent a rigorous, unique solution. The core of the problem lies in determining the polynomial degree of the integrand for the internal virtual work under specific, stated constraints.\n\nThe internal virtual work, $\\delta W_{int}$, in a total Lagrangian formulation is given by the integral of the contraction of the Second Piola-Kirchhoff stress tensor, $\\mathbf{S}$, and the variation of the Green-Lagrange strain tensor, $\\delta\\mathbf{E}$, over the reference volume $V_0$:\n$$\n\\delta W_{int} = \\int_{V_0} \\mathbf{S} : \\delta\\mathbf{E} \\, dV_0\n$$\nFor a finite element implementation, this integral is transformed to the parent domain $\\Omega_e = [-1,1]^3$ using the isoparametric mapping $\\mathbf{X}(\\boldsymbol{\\xi})$, where $\\mathbf{X}$ are the reference coordinates and $\\boldsymbol{\\xi} = (\\xi, \\eta, \\zeta)$ are the parent coordinates. The expression becomes:\n$$\n\\delta W_{int} = \\int_{-1}^1 \\int_{-1}^1 \\int_{-1}^1 (\\mathbf{S} : \\delta\\mathbf{E}) \\det(\\mathbf{J}) \\, d\\xi \\, d\\eta \\, d\\zeta\n$$\nHere, $\\mathbf{J}$ is the Jacobian matrix of the mapping $\\mathbf{X}(\\boldsymbol{\\xi})$. The problem states that the element is undistorted in the reference configuration, so the mapping is affine. Consequently, the Jacobian matrix $\\mathbf{J}$ is a constant matrix, and its determinant, $\\det(\\mathbf{J})$, is a constant. Therefore, $\\det(\\mathbf{J})$ does not influence the polynomial degree of the integrand. Our task reduces to finding the polynomial degree of the term $\\mathbf{S} : \\delta\\mathbf{E}$ as a function of the parent coordinates $(\\xi, \\eta, \\zeta)$.\n\nWe analyze each component of the integrand based on the provided information.\n\n1.  **Deformation Gradient ($\\mathbf{F}$):** The deformation gradient is defined as $F_{iJ} = \\frac{\\partial x_i}{\\partial X_J} = \\delta_{iJ} + \\frac{\\partial u_i}{\\partial X_J}$, where $\\mathbf{u}$ is the displacement field. The problem explicitly states that \"the displacement field within the element is linear in the reference coordinates.\" This means $\\mathbf{u}(\\mathbf{X}) = \\mathbf{H}\\mathbf{X} + \\mathbf{c}$, where $\\mathbf{H}$ is a constant matrix representing the displacement gradient, and $\\mathbf{c}$ is a constant vector. Thus, the gradient $\\frac{\\partial u_i}{\\partial X_J} = H_{iJ}$ is constant. It follows that the deformation gradient $\\mathbf{F}$ is a constant tensor throughout the element.\n\n2.  **Green-Lagrange Strain ($\\mathbf{E}$):** The Green-Lagrange strain tensor is defined as $\\mathbf{E} = \\frac{1}{2}(\\mathbf{F}^T\\mathbf{F} - \\mathbf{I})$. Since $\\mathbf{F}$ is a constant tensor, $\\mathbf{F}^T\\mathbf{F}$ is also constant. Therefore, the strain tensor $\\mathbf{E}$ is constant throughout the element.\n\n3.  **Second Piola-Kirchhoff Stress ($\\mathbf{S}$):** The solid is specified as hyperelastic and homogeneous. This implies the existence of a strain energy density function $W(\\mathbf{E})$ such that $\\mathbf{S} = \\frac{\\partial W}{\\partial \\mathbf{E}}$. Since the material is homogeneous, $W$ does not depend explicitly on position $\\mathbf{X}$. As $\\mathbf{E}$ is constant throughout the element, the stress tensor $\\mathbf{S}$, which is a function of $\\mathbf{E}$, must also be constant throughout the element.\n\n4.  **Variation of Green-Lagrange Strain ($\\delta\\mathbf{E}$):** The variation of the strain is $\\delta\\mathbf{E} = \\frac{1}{2}(\\delta\\mathbf{F}^T \\mathbf{F} + \\mathbf{F}^T \\delta\\mathbf{F})$. To determine the nature of $\\delta\\mathbf{E}$, we must first analyze the variation of the deformation gradient, $\\delta\\mathbf{F}$. The virtual displacement field, $\\delta\\mathbf{u}$, is interpolated using the same trilinear shape functions $N_I(\\xi, \\eta, \\zeta)$ as the trial field. Thus, $\\delta\\mathbf{u}(\\boldsymbol{\\xi}) = \\sum_{I=1}^8 N_I(\\boldsymbol{\\xi}) \\delta\\mathbf{u}_I$, where $\\delta\\mathbf{u}_I$ are the nodal virtual displacements. The variation of the deformation gradient is $\\delta\\mathbf{F} = \\nabla_{\\mathbf{X}}(\\delta\\mathbf{u})$. Using the chain rule, we relate the gradient with respect to $\\mathbf{X}$ to the gradient with respect to $\\boldsymbol{\\xi}$:\n$$\n\\delta\\mathbf{F} = (\\nabla_{\\boldsymbol{\\xi}}(\\delta\\mathbf{u})) \\mathbf{J}^{-1}\n$$\nSince $\\mathbf{J}$ is a constant matrix, the polynomial character of $\\delta\\mathbf{F}$ is determined by that of $\\nabla_{\\boldsymbol{\\xi}}(\\delta\\mathbf{u})$. The components of $\\delta\\mathbf{u}$ are trilinear functions of $(\\xi, \\eta, \\zeta)$. The derivative of a trilinear function with respect to one parent coordinate (e.g., $\\xi$) results in a bilinear function of the other two coordinates (e.g., $\\eta, \\zeta$). For example, $\\frac{\\partial}{\\partial\\xi}(c_1 + c_2\\xi + c_3\\eta + c_4\\zeta + c_5\\xi\\eta + c_6\\eta\\zeta + c_7\\xi\\zeta + c_8\\xi\\eta\\zeta) = c_2 + c_5\\eta + c_7\\zeta + c_8\\eta\\zeta$. This resulting polynomial is of degree $1$ in $\\eta$ and degree $1$ in $\\zeta$.\nTherefore, a component of $\\nabla_{\\boldsymbol{\\xi}}(\\delta\\mathbf{u})$ such as $\\frac{\\partial(\\delta u_i)}{\\partial \\xi_k}$ is a polynomial of degree at most $1$ in each of the parent coordinates. Consequently, the components of $\\delta\\mathbf{F}$ are polynomials in $(\\xi, \\eta, \\zeta)$ where the maximum degree in any single variable is $1$.\nNow we return to $\\delta\\mathbf{E}$. Since $\\mathbf{F}$ is constant and $\\delta\\mathbf{F}$ is a polynomial of degree at most $1$ in each of $(\\xi, \\eta, \\zeta)$, the product terms $\\delta\\mathbf{F}^T \\mathbf{F}$ and $\\mathbf{F}^T \\delta\\mathbf{F}$ are also polynomials of degree at most $1$ in each parent coordinate. Thus, $\\delta\\mathbf{E}$ is a tensor whose components are polynomials of maximum degree $1$ in each of $\\xi, \\eta, \\zeta$.\n\n5.  **Integrand and Quadrature Rule:** The integrand is $(\\mathbf{S} : \\delta\\mathbf{E})\\det(\\mathbf{J})$. We have established that $\\mathbf{S}$ and $\\det(\\mathbf{J})$ are constants, and $\\delta\\mathbf{E}$ is a polynomial of maximum degree $1$ in each integration variable. Therefore, the integrand is a polynomial of maximum degree $P_{max} = 1$ in each of the variables $\\xi$, $\\eta$, and $\\zeta$.\n\nA Gauss-Legendre quadrature with $n$ points per direction can exactly integrate a univariate polynomial of degree up to $2n - 1$. To exactly integrate our integrand, the quadrature rule must be exact for polynomials of degree $P_{max} = 1$. This requires:\n$$\n2n - 1 \\ge 1\n$$\nSolving for $n$:\n$$\n2n \\ge 2\n$$\n$$\nn \\ge 1\n$$\nSince $n$ must be an integer representing the number of quadrature points, the minimal value for $n$ is $1$.", "answer": "$$\\boxed{1}$$", "id": "2607106"}, {"introduction": "A correct numerical implementation must not only be mathematically sound but also respect fundamental physical laws, such as objectivity or frame indifference. This practice guides you through a classic verification test: ensuring that a rigid body rotation of an element induces no stress and, therefore, no internal nodal forces for a frame-indifferent material model. By implementing the internal force vector for a hyperelastic material model, you will confirm that your formulation correctly distinguishes between rigid motion and true deformation, a critical sanity check for any nonlinear solid mechanics code. [@problem_id:2607108]", "problem": "You are asked to implement, in the Total Lagrangian formulation, the internal force vector for a single two-dimensional linear triangular finite element (three-node triangle) and to verify numerically that a rigid-body rotation produces a zero internal force vector for a frame-indifferent compressible hyperelastic constitutive model. Your program must compute the internal nodal forces using the reference configuration and the second Piola–Kirchhoff stress, and test that these forces vanish (within a numerical tolerance) under rigid rotations.\n\nFoundational base:\n- Start from the principle of virtual work in the reference configuration: the internal virtual work is $\\delta W_{\\mathrm{int}} = \\int_{\\Omega_0} \\mathbf{P} : \\nabla_0 \\delta \\mathbf{u} \\, \\mathrm{d}\\Omega_0$, where $\\mathbf{P}$ is the first Piola–Kirchhoff stress, $\\nabla_0$ denotes the gradient with respect to the reference coordinates, and $\\delta \\mathbf{u}$ is the virtual displacement.\n- The finite deformation gradient is $\\mathbf{F} = \\partial \\mathbf{x} / \\partial \\mathbf{X}$ with $\\mathbf{x}$ the current position and $\\mathbf{X}$ the reference position.\n- For a hyperelastic material with stored energy density depending only on the right Cauchy–Green tensor $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$ (i.e., frame-indifferent), the second Piola–Kirchhoff stress is $\\mathbf{S} = 2 \\, \\partial W / \\partial \\mathbf{C}$ and $\\mathbf{P} = \\mathbf{F} \\, \\mathbf{S}$.\n- For a compressible Neo–Hookean hyperelastic model in two dimensions, use the constitutive choice\n  $$\n  W(\\mathbf{F}) = \\frac{\\mu}{2} \\left( \\mathrm{tr}(\\mathbf{C}) - 2 \\right) - \\mu \\ln J + \\frac{\\lambda}{2} \\left( \\ln J \\right)^2,\n  $$\n  where $\\mu$ and $\\lambda$ are the Lamé parameters, $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$, and $J = \\det \\mathbf{F}$. The associated second Piola–Kirchhoff stress is\n  $$\n  \\mathbf{S} = \\mu \\left( \\mathbf{I} - \\mathbf{C}^{-1} \\right) + \\lambda \\, \\ln J \\, \\mathbf{C}^{-1}.\n  $$\n- For a rigid rotation, $\\mathbf{F} = \\mathbf{R}$ with $\\mathbf{R}^{\\mathsf{T}}\\mathbf{R} = \\mathbf{I}$ and $\\det \\mathbf{R} = 1$, hence $\\mathbf{C} = \\mathbf{I}$, $J = 1$, $\\mathbf{S} = \\mathbf{0}$, $\\mathbf{P} = \\mathbf{0}$, and the internal force vector vanishes.\n\nElement and numerical implementation details to be followed:\n- Use a single two-dimensional linear triangle (three-node element). The reference nodal coordinates $\\mathbf{X}_a$ are given in meters. The shape functions are linear and satisfy partition of unity and linear completeness, so that a homogeneous deformation is represented exactly.\n- Let the current nodal coordinates be $\\mathbf{x}_a = \\mathbf{A} \\, \\mathbf{X}_a$, where $\\mathbf{A}$ is a constant $2 \\times 2$ deformation mapping. For a pure rigid rotation, $\\mathbf{A} = \\mathbf{R}(\\theta)$ with $\\theta$ in radians. For a non-rigid test, use a stretch composed with the rotation, $\\mathbf{A} = \\mathbf{R}(\\theta) \\, \\mathrm{diag}(s, 1/s)$ with $s > 1$.\n- In the Total Lagrangian formulation, compute the constant reference gradients of the shape functions, $\\nabla_0 N_a$, from the reference triangle geometry. Then assemble the deformation gradient as\n  $$\n  \\mathbf{F} = \\sum_{a=1}^{3} \\mathbf{x}_a \\otimes \\left( \\nabla_0 N_a \\right)^{\\mathsf{T}},\n  $$\n  which is constant for a linear triangle under a homogeneous deformation. Compute $\\mathbf{C}$, $J$, $\\mathbf{S}$, and $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$.\n- The internal nodal force for node $a$ is\n  $$\n  \\mathbf{r}_a = \\int_{\\Omega_0} \\mathbf{P} \\, \\nabla_0 N_a \\, \\mathrm{d}\\Omega_0,\n  $$\n  which reduces to $\\mathbf{r}_a = \\mathbf{P} \\, \\nabla_0 N_a \\, A_0$ for a linear triangle, where $A_0$ is the reference area. Use unit thickness and no body forces. All material parameters $\\mu$ and $\\lambda$ are in pascals, and coordinates are in meters.\n\nVerification target:\n- For a rigid rotation mapping, the result should be a numerically zero internal force vector (all components equal to $0$ within a specified tolerance). You must compute the maximum absolute component of the internal nodal force vector over all nodes and components, and declare success if this maximum does not exceed a tolerance $\\varepsilon$.\n- Use the tolerance $\\varepsilon = 10^{-10}$.\n\nTest suite:\n- Use the following single reference element with nodal coordinates (in meters):\n  - $\\mathbf{X}_1 = (0, 0)$, $\\mathbf{X}_2 = (1.2, 0.1)$, $\\mathbf{X}_3 = (0.2, 0.9)$.\n- Define five test cases, each producing a Boolean result indicating whether the internal force vector is (numerically) zero for that case:\n  1. Pure rigid rotation with angle $\\theta = \\pi/3$, material parameters $\\mu = 8.0 \\times 10^{4}$ and $\\lambda = 1.2 \\times 10^{5}$.\n  2. Pure rigid rotation with angle $\\theta = 0$, material parameters $\\mu = 1.0 \\times 10^{5}$ and $\\lambda = 2.0 \\times 10^{5}$.\n  3. Pure rigid rotation with angle $\\theta = \\pi/2$, material parameters $\\mu = 5.0 \\times 10^{4}$ and $\\lambda = 1.0 \\times 10^{5}$.\n  4. Pure rigid rotation with angle $\\theta = \\pi$, material parameters $\\mu = 3.3 \\times 10^{4}$ and $\\lambda = 7.7 \\times 10^{4}$.\n  5. Non-rigid homogeneous deformation with $\\theta = \\pi/6$ and a stretch $s = 1.05$ applied as $\\mathbf{A} = \\mathbf{R}(\\theta) \\, \\mathrm{diag}(s, 1/s)$, material parameters $\\mu = 8.0 \\times 10^{4}$ and $\\lambda = 1.2 \\times 10^{5}$. This case should produce a nonzero internal force and thus a Boolean value of false.\n- Angles are in radians, material parameters in pascals, and coordinates in meters. Express the Boolean results as Python-style literals.\n\nYour program must:\n- Implement the described Total Lagrangian residual computation for the single triangle.\n- For each test case, construct the current nodal positions from the specified mapping, assemble the internal force vector, compute the maximum absolute component, and compare it to $\\varepsilon = 10^{-10}$ to produce a Boolean.\n- Produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[true,false,true,true,true]\" but with Python Boolean capitalization and exact list formatting: \"[True,False,True,...]\").\n\nThe final output must be exactly one line with the list of Booleans in the specified format. No additional text is allowed.", "solution": "The problem statement is subjected to rigorous validation and is found to be valid. It is scientifically grounded in the principles of continuum mechanics and the finite element method, is well-posed with all necessary data and definitions provided, and is expressed in objective, formal language. There are no identifiable flaws, contradictions, or ambiguities. The task is a standard verification procedure in computational solid mechanics. We may therefore proceed with the solution.\n\nThe objective is to compute the internal nodal force vector for a single two-dimensional, three-node linear triangular element within a Total Lagrangian framework and to verify numerically that a rigid-body rotation yields zero internal forces for a specified frame-indifferent compressible hyperelastic material model.\n\nThe foundation of the formulation is the principle of virtual work, expressed in the reference configuration $\\Omega_0$. The internal virtual work $\\delta W_{\\mathrm{int}}$ is given by:\n$$\n\\delta W_{\\mathrm{int}} = \\int_{\\Omega_0} \\mathbf{P} : \\delta(\\nabla_0 \\mathbf{u}) \\, \\mathrm{d}\\Omega_0\n$$\nwhere $\\mathbf{P}$ is the first Piola-Kirchhoff stress tensor, $\\mathbf{u}$ is the displacement field ($\\mathbf{u} = \\mathbf{x} - \\mathbf{X}$), and $\\nabla_0$ is the gradient operator with respect to the reference coordinates $\\mathbf{X}$. For a finite element discretization, this integral leads to the definition of the internal nodal force vector.\n\nThe deformation is characterized by the deformation gradient $\\mathbf{F} = \\partial \\mathbf{x} / \\partial \\mathbf{X}$, where $\\mathbf{x}$ are the current coordinates. From this, we define the right Cauchy-Green deformation tensor $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$ and the volumetric deformation Jacobian $J = \\det \\mathbf{F}$.\n\nThe problem specifies a compressible Neo-Hookean hyperelastic model, for which the stored energy density function $W$ is given by:\n$$\nW(\\mathbf{C}, J) = \\frac{\\mu}{2} \\left( \\mathrm{tr}(\\mathbf{C}) - 2 \\right) - \\mu \\ln J + \\frac{\\lambda}{2} \\left( \\ln J \\right)^2\n$$\nHere, $\\mu$ and $\\lambda$ are the Lamé material parameters. This material model is frame-indifferent as $W$ depends on the deformation only through $\\mathbf{C}$ and $J$. The second Piola-Kirchhoff stress tensor $\\mathbf{S}$ is derived from $W$ as $\\mathbf{S} = 2 \\frac{\\partial W}{\\partial \\mathbf{C}}$. For the given $W$, this yields:\n$$\n\\mathbf{S} = \\mu \\left( \\mathbf{I} - \\mathbf{C}^{-1} \\right) + \\lambda (\\ln J) \\mathbf{C}^{-1}\n$$\nThe first and second Piola-Kirchhoff stress tensors are related by the push-forward operation $\\mathbf{P} = \\mathbf{F} \\mathbf{S}$.\n\nFor a linear triangular element, the position at any point within the element is interpolated from the nodal positions using linear shape functions $N_a$:\n$$\n\\mathbf{X} = \\sum_{a=1}^{3} N_a \\mathbf{X}_a \\quad \\text{and} \\quad \\mathbf{x} = \\sum_{a=1}^{3} N_a \\mathbf{x}_a\n$$\nThe gradients of the shape functions with respect to the reference coordinates, $\\nabla_0 N_a$, are constant within the element. The deformation gradient $\\mathbf{F}$ is also constant and is computed as:\n$$\n\\mathbf{F} = \\frac{\\partial \\mathbf{x}}{\\partial \\mathbf{X}} = \\frac{\\partial}{\\partial \\mathbf{X}} \\left( \\sum_{a=1}^{3} N_a \\mathbf{x}_a \\right) = \\sum_{a=1}^{3} \\mathbf{x}_a \\otimes (\\nabla_0 N_a)^{\\mathsf{T}}\n$$\nWe are given that the nodal deformations follow a homogeneous mapping $\\mathbf{x}_a = \\mathbf{A} \\mathbf{X}_a$ for some constant $2 \\times 2$ matrix $\\mathbf{A}$. Substituting this into the expression for $\\mathbf{F}$ yields a critical simplification:\n$$\n\\mathbf{F} = \\sum_{a=1}^{3} (\\mathbf{A} \\mathbf{X}_a) \\otimes (\\nabla_0 N_a)^{\\mathsf{T}} = \\mathbf{A} \\left( \\sum_{a=1}^{3} \\mathbf{X}_a \\otimes (\\nabla_0 N_a)^{\\mathsf{T}} \\right)\n$$\nThe term in the parenthesis is the gradient of the identity mapping $\\mathbf{X} = \\sum N_a \\mathbf{X}_a$ with respect to itself, which is the identity tensor $\\mathbf{I}$:\n$$\n\\sum_{a=1}^{3} \\mathbf{X}_a \\otimes (\\nabla_0 N_a)^{\\mathsf{T}} = \\frac{\\partial}{\\partial \\mathbf{X}} \\left( \\sum_{a=1}^{3} N_a \\mathbf{X}_a \\right) = \\frac{\\partial \\mathbf{X}}{\\partial \\mathbf{X}} = \\mathbf{I}\n$$\nThus, for a linear element subjected to a homogeneous deformation, the deformation gradient is simply $\\mathbf{F} = \\mathbf{A}$.\n\nThe internal force vector $\\mathbf{r}$ is assembled from nodal contributions $\\mathbf{r}_a$. For node $a$, the force is given by:\n$$\n\\mathbf{r}_a = \\int_{\\Omega_0} (\\nabla_0 N_a)^{\\mathsf{T}} \\mathbf{P}^{\\mathsf{T}} \\, \\mathrm{d}\\Omega_0 = \\left( \\int_{\\Omega_0} \\mathrm{d}\\Omega_0 \\right) \\mathbf{P} (\\nabla_0 N_a) = A_0 \\mathbf{P} (\\nabla_0 N_a)\n$$\nwhere $A_0$ is the area of the element in the reference configuration, and we have used the fact that $\\mathbf{P}$ and $\\nabla_0 N_a$ are constant. We assume unit thickness.\n\nThe theoretical verification rests on the behavior under a rigid-body rotation. In this case, the deformation mapping $\\mathbf{A}$ is a proper orthogonal rotation matrix $\\mathbf{R}$, so $\\mathbf{F} = \\mathbf{R}$. By definition, $\\mathbf{R}^{\\mathsf{T}}\\mathbf{R} = \\mathbf{I}$ and $\\det(\\mathbf{R}) = 1$. This implies $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F} = \\mathbf{I}$ and $J = \\det \\mathbf{F} = 1$. Substituting these into the constitutive law for $\\mathbf{S}$:\n$$\n\\mathbf{S} = \\mu \\left( \\mathbf{I} - \\mathbf{I}^{-1} \\right) + \\lambda (\\ln 1) \\mathbf{I}^{-1} = \\mu(\\mathbf{I} - \\mathbf{I}) + \\mathbf{0} = \\mathbf{0}\n$$\nWith $\\mathbf{S} = \\mathbf{0}$, it follows immediately that $\\mathbf{P} = \\mathbf{F}\\mathbf{S} = \\mathbf{R}\\mathbf{0} = \\mathbf{0}$. Consequently, the nodal internal forces $\\mathbf{r}_a = A_0 \\mathbf{P} (\\nabla_0 N_a)$ must be zero. For any non-rigid deformation, $\\mathbf{C} \\neq \\mathbf{I}$ in general, leading to $\\mathbf{S} \\neq \\mathbf{0}$ and non-zero internal forces.\n\nThe computational procedure is as follows:\n1.  For the given reference nodal coordinates $\\mathbf{X}_1, \\mathbf{X}_2, \\mathbf{X}_3$, compute the constant element properties: the reference area $A_0$ and the matrix of shape function gradients $\\mathbf{B}_0 = [\\nabla_0 N_1 | \\nabla_0 N_2 | \\nabla_0 N_3]$.\n2.  For each test case:\n    a. Construct the deformation mapping matrix $\\mathbf{A}$ based on the specified rotation angle $\\theta$ and stretch $s$. For rigid rotation, $\\mathbf{A} = \\mathbf{R}(\\theta)$. For the non-rigid case, $\\mathbf{A} = \\mathbf{R}(\\theta) \\mathrm{diag}(s, 1/s)$.\n    b. Set the deformation gradient $\\mathbf{F} = \\mathbf{A}$.\n    c. Compute $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$, $J = \\det \\mathbf{F}$, and $\\mathbf{C}^{-1}$.\n    d. Compute the second Piola-Kirchhoff stress $\\mathbf{S} = \\mu(\\mathbf{I} - \\mathbf{C}^{-1}) + \\lambda(\\ln J)\\mathbf{C}^{-1}$.\n    e. Compute the first Piola-Kirchhoff stress $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$.\n    f. Compute the matrix of nodal internal forces $\\mathbf{R}_{\\text{forces}} = A_0 \\mathbf{P} \\mathbf{B}_0$. This is a $2 \\times 3$ matrix where column $a$ corresponds to $\\mathbf{r}_a$.\n    g. Find the maximum absolute value of all components in $\\mathbf{R}_{\\text{forces}}$.\n    h. Compare this maximum value against the tolerance $\\varepsilon = 10^{-10}$. If it is less than or equal to $\\varepsilon$, the result is True; otherwise, it is False.\n3.  Collect the Boolean results from all test cases into a list for the final output.\nThis procedure will be implemented to produce the required verification.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements the Total Lagrangian internal force calculation for a 2D linear\n    triangular element and verifies that rigid body rotations produce zero\n    internal forces for a compressible Neo-Hookean material.\n    \"\"\"\n\n    # --- Element and Material Properties ---\n    # Reference nodal coordinates (m)\n    X_coords = np.array([\n        [0.0, 0.0],  # Node 1\n        [1.2, 0.1],  # Node 2\n        [0.2, 0.9]   # Node 3\n    ]).T  # Transpose to get a 2x3 matrix [X; Y]\n\n    # Tolerance for numerical zero\n    epsilon = 1e-10\n\n    # --- Pre-computation of Constant Element Properties ---\n    X1, Y1 = X_coords[:, 0]\n    X2, Y2 = X_coords[:, 1]\n    X3, Y3 = X_coords[:, 2]\n\n    # Reference area of the triangle\n    A0 = 0.5 * ((X2 - X1) * (Y3 - Y1) - (X3 - X1) * (Y2 - Y1))\n    \n    # Check for degenerate element\n    if abs(A0)  1e-12:\n        raise ValueError(\"Reference element is degenerate (zero area).\")\n\n    # Matrix of reference shape function gradients (B0-matrix)\n    # B0 = [dN1/dX, dN2/dX, dN3/dX]\n    #      [dN1/dY, dN2/dY, dN3/dY]\n    B0_matrix = (1.0 / (2.0 * A0)) * np.array([\n        [Y2 - Y3, Y3 - Y1, Y1 - Y2],\n        [X3 - X2, X1 - X3, X2 - X1]\n    ])\n\n    # --- Test Cases ---\n    test_cases = [\n        {'theta': np.pi / 3, 's': 1.0, 'mu': 8.0e4, 'lambda': 1.2e5}, # Case 1: Rigid rotation\n        {'theta': 0.0, 's': 1.0, 'mu': 1.0e5, 'lambda': 2.0e5},       # Case 2: Identity (zero rotation)\n        {'theta': np.pi / 2, 's': 1.0, 'mu': 5.0e4, 'lambda': 1.0e5}, # Case 3: Rigid rotation\n        {'theta': np.pi, 's': 1.0, 'mu': 3.3e4, 'lambda': 7.7e4},     # Case 4: Rigid rotation\n        {'theta': np.pi / 6, 's': 1.05, 'mu': 8.0e4, 'lambda': 1.2e5} # Case 5: Non-rigid deformation\n    ]\n\n    results = []\n\n    # --- Main Calculation Loop ---\n    for case in test_cases:\n        theta = case['theta']\n        s = case['s']\n        mu = case['mu']\n        lmbda = case['lambda'] # 'lambda' is a keyword in Python\n\n        # 1. Construct the deformation mapping matrix A\n        # Rotation matrix\n        R = np.array([\n            [np.cos(theta), -np.sin(theta)],\n            [np.sin(theta),  np.cos(theta)]\n        ])\n        # Stretch matrix\n        U = np.diag([s, 1.0 / s])\n        # Deformation mapping\n        A = R @ U\n\n        # 2. For a linear element under homogeneous deformation, F = A\n        F = A\n        \n        # 3. Compute kinematic quantities\n        C = F.T @ F  # Right Cauchy-Green tensor\n        J = np.linalg.det(F) # Jacobian of deformation\n\n        # Check for unphysical deformation\n        if J = 0:\n            raise ValueError(f\"Unphysical deformation with J = {J} = 0.\")\n            \n        C_inv = np.linalg.inv(C)\n        I = np.identity(2)\n        \n        # 4. Compute Second Piola-Kirchhoff stress S\n        S = mu * (I - C_inv) + lmbda * np.log(J) * C_inv\n        \n        # 5. Compute First Piola-Kirchhoff stress P\n        P = F @ S\n        \n        # 6. Compute internal nodal forces\n        # r_a = A0 * P * (nabla_0 N_a)\n        # We can compute all nodal forces at once:\n        # R_forces is a 2x3 matrix where column 'a' is the force vector for node 'a'\n        R_forces = A0 * P @ B0_matrix\n        \n        # 7. Verification\n        # Find the maximum absolute component of the internal force vector\n        max_force_component = np.max(np.abs(R_forces))\n        \n        # Compare with tolerance\n        is_zero = (max_force_component = epsilon)\n        results.append(is_zero)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2607108"}]}