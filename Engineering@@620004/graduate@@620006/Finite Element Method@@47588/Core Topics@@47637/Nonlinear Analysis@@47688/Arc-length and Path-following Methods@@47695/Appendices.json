{"hands_on_practices": [{"introduction": "Before diving into the complex machinery of arc-length methods, it is crucial to understand the problem they are designed to solve. This exercise guides you to analyze a simple nonlinear spring system to identify a \"limit point,\" a critical state where conventional load-controlled solution methods fail [@problem_id:2541468]. By deriving the condition for this point from first principles, you will gain a fundamental insight into why the tangent stiffness becomes singular and why a more robust path-following strategy is necessary for tracking the full equilibrium path.", "problem": "Consider a scalar, single-degree-of-freedom nonlinear spring within the Finite Element Method (FEM) framework, with internal force law given by $f_{\\mathrm{int}}(u)=k\\,u+\\beta\\,u^{3}$, where $k>0$ and $\\beta<0$, subjected to a dead load of constant shape and magnitude scale $p>0$ so that the external force is $f_{\\mathrm{ext}}(\\lambda)=\\lambda\\,p$. In the Riks (arc-length) path-following setting, introduce the load factor $\\lambda$ and the displacement $u$ as the unknowns.\n\nStarting from the governing principle of static equilibrium $f_{\\mathrm{int}}(u)=f_{\\mathrm{ext}}(\\lambda)$ and treating the equilibrium path as an implicitly defined curve in the $(u,\\lambda)$-plane, do the following: express the residual $r(u,\\lambda)$ explicitly, state the equilibrium condition in terms of $r(u,\\lambda)$, and, by analyzing the turning points of the equilibrium path, determine the positive critical load factor $\\lambda_{\\mathrm{cr}}$ at the first limit point (i.e., the first extremum of $\\lambda(u)$). Your derivation must proceed from the static equilibrium statement and the definition of the tangent stiffness, without assuming any pre-derived path-following formula.\n\nProvide your final answer as a single closed-form algebraic expression for $\\lambda_{\\mathrm{cr}}$ in terms of $k$, $\\beta$, and $p$. Do not include units in the final answer. No numerical rounding is required.", "solution": "The problem is subjected to validation. The givens are: internal force $f_{\\mathrm{int}}(u) = k\\,u + \\beta\\,u^{3}$ with $k>0$, $\\beta<0$; external force $f_{\\mathrm{ext}}(\\lambda) = \\lambda\\,p$ with $p>0$; and the static equilibrium condition $f_{\\mathrm{int}}(u) = f_{\\mathrm{ext}}(\\lambda)$. The task is to find the critical load factor $\\lambda_{\\mathrm{cr}}$ at the first limit point. The problem is scientifically grounded, well-posed, objective, and contains sufficient information for a unique solution. It is a canonical problem in nonlinear mechanics. The problem is deemed valid.\n\nThe solution proceeds from the fundamental principle of static equilibrium.\n\nThe governing equation for static equilibrium is given by the balance of internal and external forces:\n$$f_{\\mathrm{int}}(u) = f_{\\mathrm{ext}}(\\lambda)$$\nSubstituting the specified force laws, we have:\n$$k\\,u + \\beta\\,u^{3} = \\lambda\\,p$$\nThis equation defines the equilibrium path as an implicit curve in the $(u, \\lambda)$ plane.\n\nAs requested, we define the residual function $r(u, \\lambda)$ as the difference between internal and external forces:\n$$r(u, \\lambda) = f_{\\mathrm{int}}(u) - f_{\\mathrm{ext}}(\\lambda) = k\\,u + \\beta\\,u^{3} - \\lambda\\,p$$\nThe equilibrium condition is thus stated as the vanishing of the residual for all points on the equilibrium path:\n$$r(u, \\lambda) = 0$$\n\nA turning point, or limit point, on the equilibrium path is a point where the load factor $\\lambda$ reaches a local extremum with respect to the displacement $u$. At such a point, the tangent to the path in the $(u, \\lambda)$-plane is vertical, which means the derivative of the load factor with respect to displacement is zero, i.e., $\\frac{d\\lambda}{du}=0$.\n\nTo find this derivative, we can consider the total differential of the residual $r(u, \\lambda)$ along the equilibrium path. Since $r(u, \\lambda) = 0$ for any point $(u, \\lambda)$ on the path, its total differential $dr$ must also be zero:\n$$dr = \\frac{\\partial r}{\\partial u} du + \\frac{\\partial r}{\\partial \\lambda} d\\lambda = 0$$\nThe partial derivative $\\frac{\\partial r}{\\partial u}$ is the tangent stiffness of the system, denoted as $K_T(u)$:\n$$K_T(u) = \\frac{\\partial}{\\partial u} (k\\,u + \\beta\\,u^{3} - \\lambda\\,p) = k + 3\\beta u^2$$\nThe partial derivative with respect to the load factor $\\lambda$ is:\n$$\\frac{\\partial r}{\\partial \\lambda} = \\frac{\\partial}{\\partial \\lambda} (k\\,u + \\beta\\,u^{3} - \\lambda\\,p) = -p$$\nSubstituting these into the expression for $dr$ gives:\n$$(k + 3\\beta u^2) du - p\\,d\\lambda = 0$$\nFrom this, we can express the slope of the equilibrium path, $\\frac{d\\lambda}{du}$:\n$$\\frac{d\\lambda}{du} = \\frac{k + 3\\beta u^2}{p} = \\frac{K_T(u)}{p}$$\nThe condition for a limit point, $\\frac{d\\lambda}{du}=0$, requires the numerator to be zero, as it is given that $p>0$:\n$$K_T(u) = k + 3\\beta u^2 = 0$$\nThis result demonstrates that a limit point is characterized by the singularity (in this scalar case, vanishing) of the tangent stiffness.\n\nWe now solve for the displacement $u$ at the limit point, which we denote as $u_{\\mathrm{cr}}$:\n$$3\\beta u_{\\mathrm{cr}}^2 = -k$$\n$$u_{\\mathrm{cr}}^2 = -\\frac{k}{3\\beta}$$\nSince it is given that $k>0$ and $\\beta<0$, the term $-\\frac{k}{3\\beta}$ is positive, and real solutions for $u_{\\mathrm{cr}}$ exist:\n$$u_{\\mathrm{cr}} = \\pm \\sqrt{-\\frac{k}{3\\beta}}$$\nThe problem asks for the positive critical load factor at the first limit point. Starting from the undeformed state $(u, \\lambda) = (0, 0)$ and applying a positive load ($p>0, \\lambda>0$), the displacement $u$ will initially be positive. The first limit point will therefore occur at the positive critical displacement:\n$$u_{\\mathrm{cr}} = \\sqrt{-\\frac{k}{3\\beta}}$$\nTo find the critical load factor $\\lambda_{\\mathrm{cr}}$, we substitute this value of $u_{\\mathrm{cr}}$ back into the equilibrium equation $k\\,u + \\beta\\,u^{3} = \\lambda\\,p$:\n$$\\lambda_{\\mathrm{cr}} = \\frac{k\\,u_{\\mathrm{cr}} + \\beta\\,u_{\\mathrm{cr}}^{3}}{p} = \\frac{u_{\\mathrm{cr}} (k + \\beta\\,u_{\\mathrm{cr}}^2)}{p}$$\nSubstituting the expressions for $u_{\\mathrm{cr}}$ and $u_{\\mathrm{cr}}^2$:\n$$\\lambda_{\\mathrm{cr}} = \\frac{1}{p} \\left(\\sqrt{-\\frac{k}{3\\beta}}\\right) \\left(k + \\beta \\left(-\\frac{k}{3\\beta}\\right)\\right)$$\nSimplifying the term in the second parenthesis:\n$$k + \\beta \\left(-\\frac{k}{3\\beta}\\right) = k - \\frac{k}{3} = \\frac{2k}{3}$$\nSubstituting this back into the expression for $\\lambda_{\\mathrm{cr}}$:\n$$\\lambda_{\\mathrm{cr}} = \\frac{1}{p} \\left(\\sqrt{-\\frac{k}{3\\beta}}\\right) \\left(\\frac{2k}{3}\\right)$$\nThis gives the final closed-form expression for the critical load factor:\n$$\\lambda_{\\mathrm{cr}} = \\frac{2k}{3p} \\sqrt{-\\frac{k}{3\\beta}}$$\nThis value is positive since $k>0$, $p>0$, and $\\beta<0$. This is the correct value for the first limit point encountered in a snap-through scenario for the given system.", "answer": "$$\\boxed{\\frac{2k}{3p}\\sqrt{-\\frac{k}{3\\beta}}}$$", "id": "2541468"}, {"introduction": "Having established that the tangent stiffness matrix can become singular at limit points, we now examine the core mechanics of the arc-length method's solution procedure. This practice focuses on a single corrective step within a Newton-Raphson iteration, where the equilibrium equation is augmented by a path-following constraint [@problem_id:2541431]. By assembling and solving the resulting \"bordered\" linear system for a small-scale problem, you will develop a concrete understanding of the algebraic structure that enables the calculation of a unique solution increment even in the vicinity of a singular point.", "problem": "Consider a nonlinear quasi-static equilibrium problem in the Finite Element Method (FEM) with proportional loading, where the equilibrium residual is defined as $r(u,\\lambda) = f_{\\mathrm{int}}(u) - \\lambda f_{\\mathrm{ext}}$. A Newton-Raphson linearization about the current iterate $(u^{(i)},\\lambda^{(i)})$ yields the linearized equilibrium equation $K_{\\mathrm{T}} \\,\\delta u - f_{\\mathrm{ext}} \\,\\delta \\lambda = -R$, where $K_{\\mathrm{T}} = \\partial f_{\\mathrm{int}}/\\partial u$ is the tangent stiffness and $R = r(u^{(i)},\\lambda^{(i)})$ is the current residual. In the Riks/Crisfield arc-length framework, enforce a linearized constraint of the form $a^{\\mathsf{T}} \\delta u + c\\, \\delta \\lambda = \\Delta s_{\\mathrm{t}}$, where $a \\in \\mathbb{R}^{n}$, $c \\in \\mathbb{R}$, and $\\Delta s_{\\mathrm{t}} \\in \\mathbb{R}$ are known at the current iteration from the chosen path-following strategy. \n\nFor a two-degree-of-freedom system ($n = 2$), suppose the following data are known at the current iteration (all quantities are non-dimensional):\n- Tangent stiffness $K_{\\mathrm{T}} \\in \\mathbb{R}^{2 \\times 2}$ is \n$$\nK_{\\mathrm{T}} = \\begin{bmatrix} 4 & -1 \\\\ -1 & 2 \\end{bmatrix}.\n$$\n- Proportional load vector $f_{\\mathrm{ext}} \\in \\mathbb{R}^{2}$ is \n$$\nf_{\\mathrm{ext}} = \\begin{bmatrix} 3 \\\\ 1 \\end{bmatrix}.\n$$\n- Residual vector $R \\in \\mathbb{R}^{2}$ is \n$$\nR = \\begin{bmatrix} 2 \\\\ -1 \\end{bmatrix}.\n$$\n- Linearized arc-length row is given by $a^{\\mathsf{T}} \\delta u + c\\, \\delta \\lambda = \\Delta s_{\\mathrm{t}}$ with \n$$\na = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}, \\quad c = 1, \\quad \\Delta s_{\\mathrm{t}} = 1.\n$$\n\nAssemble the bordered linear system for the unknowns $(\\delta u,\\delta \\lambda)$ and carry out one bordered solve to obtain the explicit increment $(\\delta u_{1},\\delta u_{2},\\delta \\lambda)$ in exact form. Report the ordered triple $(\\delta u_{1},\\delta u_{2},\\delta \\lambda)$ as exact rational numbers. No rounding is required. Express the final answer as a row matrix in exact form with no units.", "solution": "The problem as stated is subjected to validation.\n\n**Step 1: Extract Givens**\n- Linearized equilibrium equation: $K_{\\mathrm{T}} \\,\\delta u - f_{\\mathrm{ext}} \\,\\delta \\lambda = -R$.\n- Linearized arc-length constraint: $a^{\\mathsf{T}} \\delta u + c\\, \\delta \\lambda = \\Delta s_{\\mathrm{t}}$.\n- Number of degrees of freedom: $n = 2$.\n- Tangent stiffness matrix: $K_{\\mathrm{T}} = \\begin{bmatrix} 4 & -1 \\\\ -1 & 2 \\end{bmatrix}$.\n- Proportional load vector: $f_{\\mathrm{ext}} = \\begin{bmatrix} 3 \\\\ 1 \\end{bmatrix}$.\n- Residual vector: $R = \\begin{bmatrix} 2 \\\\ -1 \\end{bmatrix}$.\n- Arc-length constraint vector: $a = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}$.\n- Arc-length constraint scalar: $c = 1$.\n- Arc-length increment: $\\Delta s_{\\mathrm{t}} = 1$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, describing a standard procedure in nonlinear computational mechanics known as the Riks/Crisfield arc-length method. The equations are the correct linearized form used in a Newton-Raphson iteration with a path-following constraint. The problem is well-posed; all data required to form a linear system of equations for the increments $(\\delta u, \\delta \\lambda)$ are provided. The dimensions of all matrices and vectors are consistent. The language is objective and unambiguous. It does not violate any criteria for scientific soundness, completeness, or objectivity.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A solution will be furnished.\n\nThe solution requires assembling and solving a bordered linear system that combines the linearized equilibrium equation and the arc-length constraint. The general form of this system is:\n$$\n\\begin{bmatrix}\nK_{\\mathrm{T}} & -f_{\\mathrm{ext}} \\\\\na^{\\mathsf{T}} & c\n\\end{bmatrix}\n\\begin{bmatrix}\n\\delta u \\\\\n\\delta \\lambda\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-R \\\\\n\\Delta s_{\\mathrm{t}}\n\\end{bmatrix}\n$$\nThe unknown increment vector is $\\begin{pmatrix} \\delta u_1 & \\delta u_2 & \\delta \\lambda \\end{pmatrix}^{\\mathsf{T}}$, where $\\delta u = \\begin{pmatrix} \\delta u_1 & \\delta u_2 \\end{pmatrix}^{\\mathsf{T}}$.\n\nSubstituting the given data into this structure:\n- $K_{\\mathrm{T}} = \\begin{bmatrix} 4 & -1 \\\\ -1 & 2 \\end{bmatrix}$\n- $-f_{\\mathrm{ext}} = \\begin{bmatrix} -3 \\\\ -1 \\end{bmatrix}$\n- $a^{\\mathsf{T}} = \\begin{bmatrix} 2 & 1 \\end{bmatrix}$\n- $c = 1$\n- $-R = \\begin{bmatrix} -2 \\\\ 1 \\end{bmatrix}$\n- $\\Delta s_{\\mathrm{t}} = 1$\n\nThis assembles into the following $3 \\times 3$ linear system:\n$$\n\\begin{bmatrix}\n4 & -1 & -3 \\\\\n-1 & 2 & -1 \\\\\n2 & 1 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n\\delta u_1 \\\\\n\\delta u_2 \\\\\n\\delta \\lambda\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-2 \\\\\n1 \\\\\n1\n\\end{bmatrix}\n$$\nLet the system matrix be denoted by $A_{\\mathrm{bordered}}$. For a unique solution to exist, this matrix must be non-singular. We compute its determinant:\n$$\n\\det(A_{\\mathrm{bordered}}) = 4(2 \\cdot 1 - (-1) \\cdot 1) - (-1)((-1) \\cdot 1 - (-1) \\cdot 2) + (-3)((-1) \\cdot 1 - 2 \\cdot 2)\n$$\n$$\n\\det(A_{\\mathrm{bordered}}) = 4(2 + 1) + 1(-1 + 2) - 3(-1 - 4) = 4(3) + 1(1) - 3(-5) = 12 + 1 + 15 = 28\n$$\nSince $\\det(A_{\\mathrm{bordered}}) = 28 \\neq 0$, the system has a unique solution. We can solve this system using any standard method, such as Cramer's rule.\n\nThe solution for each variable is given by $\\delta x_i = \\frac{\\det(A_i)}{\\det(A)}$, where $A_i$ is the matrix formed by replacing the $i$-th column of $A$ with the right-hand side vector.\n\nFor $\\delta u_1$:\n$$\n\\det(A_1) = \\det \\begin{pmatrix} -2 & -1 & -3 \\\\ 1 & 2 & -1 \\\\ 1 & 1 & 1 \\end{pmatrix} = -2(2+1) - (-1)(1+1) - 3(1-2) = -6 + 2 + 3 = -1\n$$\n$$\n\\delta u_1 = \\frac{-1}{28}\n$$\n\nFor $\\delta u_2$:\n$$\n\\det(A_2) = \\det \\begin{pmatrix} 4 & -2 & -3 \\\\ -1 & 1 & -1 \\\\ 2 & 1 & 1 \\end{pmatrix} = 4(1+1) - (-2)(-1+2) - 3(-1-2) = 8 + 2 + 9 = 19\n$$\n$$\n\\delta u_2 = \\frac{19}{28}\n$$\n\nFor $\\delta \\lambda$:\n$$\n\\det(A_3) = \\det \\begin{pmatrix} 4 & -1 & -2 \\\\ -1 & 2 & 1 \\\\ 2 & 1 & 1 \\end{pmatrix} = 4(2-1) - (-1)(-1-2) - 2(-1-4) = 4 - 3 + 10 = 11\n$$\n$$\n\\delta \\lambda = \\frac{11}{28}\n$$\nThe solution for the increment is the ordered triple $(\\delta u_1, \\delta u_2, \\delta \\lambda) = \\left(-\\frac{1}{28}, \\frac{19}{28}, \\frac{11}{28}\\right)$. These are the exact rational numbers required.", "answer": "$$\n\\boxed{\\begin{pmatrix} -\\frac{1}{28} & \\frac{19}{28} & \\frac{11}{28} \\end{pmatrix}}\n$$", "id": "2541431"}, {"introduction": "This final practice integrates the concepts from the previous exercises into a complete, programmatic implementation of a single arc-length step. You will implement a full predictor-corrector algorithm to trace the equilibrium path of a nonlinear system, specifically navigating a step that moves past a limit point [@problem_id:2541443]. This hands-on coding challenge solidifies the entire procedure, from predicting the next solution point along the tangent to iteratively correcting it back to the equilibrium path using the augmented Newton system, demonstrating the power of arc-length methods in capturing complex structural phenomena like snap-through.", "problem": "Consider a reduced one-degree-of-freedom model of the classical von Mises two-bar truss that captures snap-through via a cubic internal force law. Let the scalar displacement be $u$ (nondimensional) and the load factor be $\\lambda$ (nondimensional). The reference load is $P_0$ (nondimensional). The equilibrium equation is posed as the root of the residual\n$$\nR(u,\\lambda) \\equiv F_{\\text{int}}(u) - \\lambda P_0 = 0,\n$$\nwhere the internal force is modeled by a cubic law\n$$\nF_{\\text{int}}(u) = k\\,u - \\gamma\\,u^3,\n$$\nwith $k &gt; 0$ and $\\gamma &gt; 0$ real constants. This normal-form surrogate captures the fold (limit point) structure of a shallow von Mises truss near snap-through. Define the tangent quantities\n$$\n\\frac{\\partial R}{\\partial u}(u,\\lambda) = k - 3\\gamma u^2, \\qquad \\frac{\\partial R}{\\partial \\lambda}(u,\\lambda) = -P_0.\n$$\nYou will perform one load-displacement step from a given equilibrium state $(u_0,\\lambda_0)$ using the Arc-Length method with the Riks spherical constraint. The unknown step increments are $(\\Delta u, \\Delta \\lambda)$, and the trial state at the end of the step is $(u,\\lambda) = (u_0 + \\Delta u, \\lambda_0 + \\Delta \\lambda)$. The Riks constraint is\n$$\ng(\\Delta u,\\Delta \\lambda) \\equiv (\\Delta u)^2 + \\alpha\\,(\\Delta \\lambda)^2 - \\Delta s^2 = 0,\n$$\nwith $\\alpha &gt; 0$ the load scaling parameter and $\\Delta s &gt; 0$ the arc-length radius.\n\nImplement the following algorithm to compute $(\\Delta u,\\Delta \\lambda)$ for a single step that moves past the limit point from the given starting equilibrium:\n\n- Predictor direction: Solve the homogeneous linearized equilibrium at $(u_0,\\lambda_0)$ for a direction $(\\hat{\\Delta u},\\hat{\\Delta \\lambda})$ satisfying\n$$\n\\left(k - 3\\gamma u_0^2\\right)\\,\\hat{\\Delta u} - P_0\\,\\hat{\\Delta \\lambda} = 0,\n$$\nand select the sign of $(\\hat{\\Delta u},\\hat{\\Delta \\lambda})$ so that the load-factor increment is opposite to the local slope, i.e., choose the sign so that $\\operatorname{sign}(\\hat{\\Delta \\lambda}) = -\\operatorname{sign}(k - 3\\gamma u_0^2)$. Then normalize this direction to satisfy the Riks constraint with radius $\\Delta s$:\n$$\n\\Delta u^{(0)} = c\\,\\hat{\\Delta u}, \\quad \\Delta \\lambda^{(0)} = c\\,\\hat{\\Delta \\lambda}, \\quad c = \\frac{\\Delta s}{\\sqrt{(\\hat{\\Delta u})^2 + \\alpha(\\hat{\\Delta \\lambda})^2}}.\n$$\n\n- Newton corrector on the augmented system:\n$$\n\\begin{bmatrix}\n\\frac{\\partial R}{\\partial u}(u,\\lambda) & \\frac{\\partial R}{\\partial \\lambda}(u,\\lambda) \\\\\n2\\Delta u & 2\\alpha \\Delta \\lambda\n\\end{bmatrix}\n\\begin{bmatrix}\n\\delta u \\\\ \\delta \\lambda\n\\end{bmatrix}\n= -\n\\begin{bmatrix}\nR(u,\\lambda) \\\\ g(\\Delta u,\\Delta \\lambda)\n\\end{bmatrix},\n$$\nwith $(u,\\lambda) = (u_0 + \\Delta u, \\lambda_0 + \\Delta \\lambda)$ and $(\\Delta u,\\Delta \\lambda)$ updated as $(\\Delta u,\\Delta \\lambda) \\leftarrow (\\Delta u,\\Delta \\lambda) + (\\delta u,\\delta \\lambda)$ until convergence to the specified tolerance. A small positive convergence tolerance must be enforced on both $|R|$ and $|g|$. You may assume the given $(u_0,\\lambda_0)$ satisfies the equilibrium equation exactly.\n\nAll quantities are nondimensional; no physical units are involved. Angles do not appear. Percentages are not used.\n\nTest Suite and Required Output:\n- Use three parameter sets $(k,\\gamma,P_0,u_0,\\alpha,\\Delta s)$ as follows. In each case, compute $\\lambda_0$ from equilibrium as $\\lambda_0 = \\big(k\\,u_0 - \\gamma\\,u_0^3\\big)/P_0$, then perform exactly one arc-length step using the procedure above and report only the converged $(\\Delta u,\\Delta \\lambda)$.\n\n  1. Case A: $k=10.0$, $\\gamma=10.0$, $P_0=1.0$, $u_0=0.55$, $\\alpha=0.01$, $\\Delta s=0.10$.\n  2. Case B: $k=10.0$, $\\gamma=10.0$, $P_0=1.0$, $u_0=0.575$, $\\alpha=0.001$, $\\Delta s=0.05$.\n  3. Case C: $k=5.0$, $\\gamma=2.0$, $P_0=2.0$, $u_0=0.90$, $\\alpha=0.02$, $\\Delta s=0.12$.\n\n- Numerical Answer Format: Your program should produce a single line of output containing the results for the three cases as a comma-separated list of pairs, each pair in the order $(\\Delta u,\\Delta \\lambda)$ and each value rounded to six decimal places. The exact format must be\n$$\n[[\\Delta u_A,\\Delta \\lambda_A],[\\Delta u_B,\\Delta \\lambda_B],[\\Delta u_C,\\Delta \\lambda_C]],\n$$\nfor example, $[[0.123456,-0.012345],[\\dots],[\\dots]]$.\n\nYour program must be self-contained, take no input, and compute these three outputs deterministically.", "solution": "The problem presented is a well-posed application of a standard numerical continuation method in computational mechanics. It is scientifically sound, contains all necessary information for its own resolution, and is free of ambiguity. The task is to compute a single solution step for a nonlinear equilibrium path using the Riks arc-length method. We shall proceed with the derivation and implementation of the specified algorithm.\n\nThe state of the system is defined by the displacement $u$ and the load factor $\\lambda$. The system is in equilibrium when the residual $R(u,\\lambda)$ is zero, and a step from an initial equilibrium point $(u_0, \\lambda_0)$ is constrained by the arc-length equation $g(\\Delta u, \\Delta \\lambda)=0$. The problem is thus to find the increments $(\\Delta u, \\Delta \\lambda)$ that solve the augmented system of nonlinear equations:\n$$\n\\begin{cases}\nR(u_0 + \\Delta u, \\lambda_0 + \\Delta \\lambda) = k(u_0 + \\Delta u) - \\gamma(u_0 + \\Delta u)^3 - (\\lambda_0 + \\Delta \\lambda)P_0 = 0 \\\\\ng(\\Delta u, \\Delta \\lambda) = (\\Delta u)^2 + \\alpha(\\Delta \\lambda)^2 - \\Delta s^2 = 0\n\\end{cases}\n$$\nThe solution is found using a predictor-corrector scheme.\n\nFirst, for each test case, the initial load factor $\\lambda_0$ must be computed to ensure the starting state $(u_0, \\lambda_0)$ is an equilibrium point. From the condition $R(u_0, \\lambda_0) = 0$, we have:\n$$\n\\lambda_0 = \\frac{F_{\\text{int}}(u_0)}{P_0} = \\frac{k u_0 - \\gamma u_0^3}{P_0}\n$$\n\nNext, the predictor step provides an initial guess for the increments $(\\Delta u, \\Delta \\lambda)$. The predictor direction $(\\hat{\\Delta u}, \\hat{\\Delta \\lambda})$ is tangent to the equilibrium path at $(u_0, \\lambda_0)$. This tangent is found by solving the linearized equilibrium equation:\n$$\n\\frac{\\partial R}{\\partial u}\\bigg|_{(u_0, \\lambda_0)} \\hat{\\Delta u} + \\frac{\\partial R}{\\partial \\lambda}\\bigg|_{(u_0, \\lambda_0)} \\hat{\\Delta \\lambda} = 0\n$$\nSubstituting the given derivatives, we obtain:\n$$\n(k - 3\\gamma u_0^2)\\hat{\\Delta u} - P_0 \\hat{\\Delta \\lambda} = 0\n$$\nLet $K_T = k - 3\\gamma u_0^2$ be the tangent stiffness at the initial point. The equation becomes $K_T \\hat{\\Delta u} - P_0 \\hat{\\Delta \\lambda} = 0$. The slope of the equilibrium path is $\\frac{d\\lambda}{du} = \\frac{K_T}{P_0}$. The problem specifies a sign convention for the predictor direction to ensure progress along the path, particularly around limit points: $\\operatorname{sign}(\\hat{\\Delta \\lambda}) = -\\operatorname{sign}(K_T/P_0)$. Since $P_0$ is given as positive, this simplifies to $\\operatorname{sign}(\\hat{\\Delta \\lambda}) = -\\operatorname{sign}(K_T)$.\n\nTo satisfy this, we can set $\\hat{\\Delta \\lambda} = -\\operatorname{sign}(K_T)$ and solve for $\\hat{\\Delta u}$:\n$$\n\\hat{\\Delta u} = \\frac{P_0 \\hat{\\Delta \\lambda}}{K_T} = \\frac{P_0 (-\\operatorname{sign}(K_T))}{K_T} = -\\frac{P_0}{|K_T|}\n$$\nThe initial guess for the increments, $(\\Delta u^{(0)}, \\Delta \\lambda^{(0)})$, is obtained by scaling the predictor direction to lie on the constraint surface, i.e., satisfy $g(\\Delta u^{(0)}, \\Delta \\lambda^{(0)}) = 0$:\n$$\n\\Delta u^{(0)} = c\\,\\hat{\\Delta u}, \\quad \\Delta \\lambda^{(0)} = c\\,\\hat{\\Delta \\lambda}, \\quad \\text{where} \\quad c = \\frac{\\Delta s}{\\sqrt{(\\hat{\\Delta u})^2 + \\alpha(\\hat{\\Delta \\lambda})^2}}\n$$\n\nFinally, the corrector step refines this initial guess iteratively using a Newton-Raphson procedure on the full nonlinear augmented system. Let $(\\Delta u^{(k)}, \\Delta \\lambda^{(k)})$ be the increments at iteration $k$. We seek corrections $(\\delta u, \\delta \\lambda)$ such that $(\\Delta u^{(k+1)}, \\Delta \\lambda^{(k+1)}) = (\\Delta u^{(k)} + \\delta u, \\Delta \\lambda^{(k)} + \\delta \\lambda)$ is a better approximation of the solution. The linearized system for the corrections is:\n$$\n\\mathbf{J}^{(k)} \\begin{bmatrix} \\delta u \\\\ \\delta \\lambda \\end{bmatrix} = - \\begin{bmatrix} R(u^{(k)}, \\lambda^{(k)}) \\\\ g(\\Delta u^{(k)}, \\Delta \\lambda^{(k)}) \\end{bmatrix}\n$$\nwhere $(u^{(k)}, \\lambda^{(k)}) = (u_0 + \\Delta u^{(k)}, \\lambda_0 + \\Delta \\lambda^{(k)})$. The Jacobian matrix $\\mathbf{J}^{(k)}$ is given by:\n$$\n\\mathbf{J}^{(k)} = \\begin{bmatrix} \\frac{\\partial R}{\\partial u} & \\frac{\\partial R}{\\partial \\lambda} \\\\ \\frac{\\partial g}{\\partial (\\Delta u)} & \\frac{\\partial g}{\\partial (\\Delta \\lambda)} \\end{bmatrix}_{\\text{at } (u^{(k)}, \\Delta u^{(k)}, \\Delta \\lambda^{(k)})} = \\begin{bmatrix} k - 3\\gamma (u^{(k)})^2 & -P_0 \\\\ 2\\Delta u^{(k)} & 2\\alpha \\Delta \\lambda^{(k)} \\end{bmatrix}\n$$\nThis $2 \\times 2$ linear system is solved for $(\\delta u, \\delta \\lambda)$, and the increments are updated. The process is repeated until the magnitudes of the residuals, $|R|$ and $|g|$, are below a specified small tolerance $\\epsilon$. For the implementation, a tolerance of $\\epsilon=10^{-12}$ is sufficient. The converged values $(\\Delta u, \\Delta \\lambda)$ are the result of the arc-length step.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the arc-length step increments (delta_u, delta_lambda)\n    for three test cases of a 1-DOF nonlinear system.\n    \"\"\"\n    # Test cases parameters: (k, gamma, P0, u0, alpha, ds)\n    test_cases = [\n        (10.0, 10.0, 1.0, 0.55, 0.01, 0.10),\n        (10.0, 10.0, 1.0, 0.575, 0.001, 0.05),\n        (5.0, 2.0, 2.0, 0.90, 0.02, 0.12),\n    ]\n\n    results = []\n    # Convergence tolerance and maximum iterations for Newton's method\n    tol = 1e-12\n    max_iter = 20\n\n    for case in test_cases:\n        k, gamma, P0, u0, alpha, ds = case\n        \n        # 1. Calculate the initial load factor for equilibrium\n        lambda0 = (k * u0 - gamma * u0**3) / P0\n        \n        # 2. Predictor Step\n        # Calculate the tangent stiffness at the initial point\n        KT = k - 3 * gamma * u0**2\n        \n        # Determine the predictor direction (d_u_hat, d_lambda_hat)\n        # The sign convention requires sign(d_lambda_hat) = -sign(KT)\n        # We set d_lambda_hat and solve for d_u_hat from the linearized equilibrium.\n        d_lambda_hat = -np.sign(KT)\n        d_u_hat = P0 * d_lambda_hat / KT\n        \n        # Normalize the direction vector to satisfy the Riks constraint\n        c = ds / np.sqrt(d_u_hat**2 + alpha * d_lambda_hat**2)\n        \n        # Initial guess for the increments (delta_u, delta_lambda)\n        delta_u = c * d_u_hat\n        delta_lambda = c * d_lambda_hat\n        \n        # 3. Corrector Step (Newton-Raphson iteration)\n        for _ in range(max_iter):\n            # Current state (u, lambda) based on the current increments\n            u = u0 + delta_u\n            lambda_ = lambda0 + delta_lambda\n            \n            # Calculate the residuals of the augmented system\n            R = k * u - gamma * u**3 - lambda_ * P0\n            g = delta_u**2 + alpha * delta_lambda**2 - ds**2\n            \n            # Check for convergence against the tolerance\n            if np.abs(R) < tol and np.abs(g) < tol:\n                break\n            \n            # Assemble the Jacobian matrix for the augmented system\n            dR_du = k - 3 * gamma * u**2\n            dR_dlambda = -P0\n            dg_du = 2 * delta_u\n            dg_dlambda = 2 * alpha * delta_lambda\n            \n            J = np.array([\n                [dR_du, dR_dlambda],\n                [dg_du, dg_dlambda]\n            ])\n            \n            # Define the right-hand side vector (negative residuals)\n            F = -np.array([R, g])\n            \n            # Solve the linear system J * corrections = F for the corrections\n            corrections = np.linalg.solve(J, F)\n            du_corr, dlambda_corr = corrections\n            \n            # Update the increments with the calculated corrections\n            delta_u += du_corr\n            delta_lambda += dlambda_corr\n            \n        # Append the converged and rounded results for the case\n        results.append([round(delta_u, 6), round(delta_lambda, 6)])\n\n    # Print the final result in the specified format: [[du_A,dl_A],[du_B,dl_B],[du_C,dl_C]]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2541443"}]}