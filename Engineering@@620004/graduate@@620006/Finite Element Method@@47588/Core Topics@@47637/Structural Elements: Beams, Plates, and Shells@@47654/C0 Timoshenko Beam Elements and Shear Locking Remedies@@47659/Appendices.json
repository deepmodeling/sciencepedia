{"hands_on_practices": [{"introduction": "Before solving any finite element problem, we must first establish the algebraic system by identifying its size and constraints. This fundamental exercise [@problem_id:2543386] challenges you to count the active degrees of freedom for a Timoshenko beam discretized with multiple elements under various common boundary conditions. Mastering this practice solidifies your understanding of how physical supports are translated into mathematical constraints, a crucial first step in any computational structural analysis.", "problem": "A straight, prismatic Timoshenko beam of length $L$ is discretized by a mesh of $n$ identical linear $C^0$ finite elements, each having $2$ nodes. The primary kinematic fields of the Timoshenko theory are the transverse displacement $w(x)$ and the cross-sectional rotation $\\theta(x)$, with the engineering shear strain $\\gamma(x)=w'(x)-\\theta(x)$ and the curvature $\\kappa_b(x)=\\theta'(x)$. In a standard $C^0$ finite element formulation, both $w(x)$ and $\\theta(x)$ are interpolated by globally $C^0$ shape functions and are represented by nodal values at the mesh nodes.\n\nFrom the viewpoint of the weak (variational) form of the Timoshenko beam, the essential (Dirichlet) boundary data are the displacement-type quantities $w$ and $\\theta$, while the natural (Neumann) boundary data are the shear force $V$ and bending moment $M$. A clamped end prescribes $w=0$ and $\\theta=0$; a free end prescribes no essential conditions; a simply supported end prescribes $w=0$ while $M$ is free (hence natural).\n\nAssume no multi-point constraints and no interior constraints beyond the inter-element $C^0$ continuity for $w$ and $\\theta$. Let $n\\in\\mathbb{N}$ with $n\\ge 1$.\n\nStarting from these fundamental definitions and the weak-form classification of boundary conditions, determine, after imposing the essential boundary conditions, the dimension of the global vector of unknowns for each of the following support configurations applied over the entire beam span:\n- clamped–free (cantilever),\n- simply supported at both ends,\n- clamped–clamped.\n\nDerive your count by identifying the total unconstrained nodal unknowns implied by the $C^0$ Timoshenko discretization and subtracting the number of independent essential constraints for each case. Briefly justify which constraints are imposed in each support case.\n\nExpress your final answer as a single row matrix listing, in the above order, the number of global unknowns as closed-form expressions in terms of $n$. No units are required (dimensionless). No rounding is required.", "solution": "The problem statement poses a valid and well-defined question within the framework of the finite element method applied to structural mechanics. It is scientifically grounded, self-contained, and devoid of any ambiguity or contradiction. It asks for the determination of the number of active degrees of freedom in a discretized Timoshenko beam system under various support conditions. This is a fundamental calculation in computational mechanics.\n\nThe problem states that a Timoshenko beam is discretized using $n$ linear finite elements. A mesh composed of $n$ linear elements arranged sequentially has a total of $n+1$ nodes. Let us denote these nodes by an index $i$, where $i=1, 2, \\dots, n+1$.\n\nFor a $C^0$ Timoshenko beam element formulation, the nodal degrees of freedom (DOFs) at each node $i$ are the transverse displacement, $w_i$, and the cross-sectional rotation, $\\theta_i$. Therefore, each node possesses $2$ DOFs.\n\nThe total number of DOFs for the unconstrained system, which is the dimension of the global vector of unknowns before applying any boundary conditions, is the product of the number of nodes and the number of DOFs per node.\nTotal unconstrained DOFs = (Number of nodes) $\\times$ (DOFs per node) $= (n+1) \\times 2 = 2(n+1)$.\n\nThe dimension of the final global system of equations to be solved is found by subtracting the number of imposed essential (Dirichlet) boundary conditions from this total. Natural (Neumann) boundary conditions do not constrain the nodal variables directly; they are incorporated into the global force vector and are automatically satisfied by the solution of the weak form. We analyze each support configuration as specified.\n\nCase 1: Clamped–free (cantilever) beam.\nLet the beam be clamped at the node $i=1$ and free at the node $i=n+1$.\n- At the clamped end ($i=1$), the beam cannot translate or rotate. The problem defines a clamped end by the essential conditions $w=0$ and $\\theta=0$. Thus, at node $1$, we impose $w_1=0$ and $\\theta_1=0$. This constitutes $2$ independent essential constraints.\n- At the free end ($i=n+1$), there are no essential conditions. The conditions of zero shear force, $V=0$, and zero bending moment, $M=0$, are natural boundary conditions and do not reduce the size of the unknown vector.\nThe total number of constraints is $2$.\nThe dimension of the global vector of unknowns is the total unconstrained DOFs minus the number of essential constraints:\nDimension = $2(n+1) - 2 = 2n + 2 - 2 = 2n$.\n\nCase 2: Beam simply supported at both ends.\nLet the beam be simply supported at nodes $i=1$ and $i=n+1$.\n- A simply supported end is defined by the essential condition $w=0$. The condition of zero bending moment, $M=0$, is natural.\n- At the support at node $i=1$, we impose the essential condition $w_1=0$. This is $1$ constraint. The rotation $\\theta_1$ remains an unknown.\n- At the support at node $i=n+1$, we impose the essential condition $w_{n+1}=0$. This is a second constraint. The rotation $\\theta_{n+1}$ remains an unknown.\nThe total number of essential constraints across both ends is $1 + 1 = 2$.\nThe dimension of the global vector of unknowns is:\nDimension = $2(n+1) - 2 = 2n + 2 - 2 = 2n$.\n\nCase 3: Clamped–clamped beam.\nThe beam is clamped at both ends, i.e., at nodes $i=1$ and $i=n+1$.\n- At the clamped end at node $i=1$, the essential boundary conditions are $w_1=0$ and $\\theta_1=0$. This imposes $2$ constraints.\n- At the clamped end at node $i=n+1$, the essential boundary conditions are $w_{n+1}=0$ and $\\theta_{n+1}=0$. This imposes an additional $2$ constraints.\nThe total number of essential constraints is $2 + 2 = 4$.\nThe dimension of the global vector of unknowns is:\nDimension = $2(n+1) - 4 = 2n + 2 - 4 = 2n - 2$.\n\nIn summary, the dimensions of the global vector of unknowns for the three cases are $2n$, $2n$, and $2n-2$, respectively. These results are compiled into a single row matrix as requested.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n2n & 2n & 2n-2\n\\end{pmatrix}\n}\n$$", "id": "2543386"}, {"introduction": "The patch test is a powerful diagnostic tool used to verify the consistency and convergence properties of a finite element formulation. This exercise [@problem_id:2543362] guides you through a patch test designed to expose a critical flaw in the standard $C^0$ Timoshenko element: its inability to represent a state of pure bending without generating spurious shear strain. By comparing the element's performance under full versus reduced integration, you will gain direct, hands-on insight into the origin of shear locking and the mechanism by which reduced integration provides a remedy.", "problem": "Consider a homogeneous, prismatic Timoshenko beam of length $L$, bending rigidity $E I$, and shear rigidity $\\kappa G A$, discretized by a single $C^0$ two-node Timoshenko beam finite element with nodal degrees of freedom $\\{w_{1}, \\theta_{1}, w_{2}, \\theta_{2}\\}$. The element employs linear shape functions $N_{1}(x)=1-x/L$ and $N_{2}(x)=x/L$ so that $w_{h}(x)=N_{1}(x) w_{1}+N_{2}(x) w_{2}$ and $\\theta_{h}(x)=N_{1}(x) \\theta_{1}+N_{2}(x) \\theta_{2}$. The kinematics of the Timoshenko beam are given by the transverse shear strain $\\gamma(x)=w'(x)-\\theta(x)$ and the bending curvature $\\kappa_{b}(x)=\\theta'(x)$. The strain energy of a Timoshenko beam is\n$$\n\\Pi=\\frac{1}{2}\\int_{0}^{L}\\left(E I\\,\\kappa_{b}(x)^{2}+\\kappa G A\\,\\gamma(x)^{2}\\right)\\,\\mathrm{d}x.\n$$\nFormulate the single-element patch test corresponding to constant bending curvature and zero shear by prescribing the exact fields\n$$\n\\theta^{\\star}(x)=\\theta_{0}-\\kappa_{0}\\,x,\\qquad \\gamma^{\\star}(x)=0,\\qquad w^{\\star}(x)=w_{0}+\\theta_{0}\\,x-\\frac{1}{2}\\kappa_{0}\\,x^{2},\n$$\nwith given constants $\\kappa_{0}\\neq 0$, $\\theta_{0}$, and $w_{0}$. Apply this patch test to the single element by setting the element’s nodal values equal to the exact fields at $x=0$ and $x=L$, that is\n$$\nw_{1}=w^{\\star}(0),\\quad \\theta_{1}=\\theta^{\\star}(0),\\quad w_{2}=w^{\\star}(L),\\quad \\theta_{2}=\\theta^{\\star}(L).\n$$\nDefine the element to “pass” the patch test if, in the absence of external loads, the element’s computed shear contribution to the strain energy is exactly zero under the imposed nodal values. Compute the shear strain energy contributed by this element using (i) $2$-point Gauss quadrature on $[-1,1]$ (mapped to $[0,L]$) and (ii) $1$-point Gauss quadrature on $[-1,1]$ (mapped to $[0,L]$). Then define the pass indicators\n$$\nP_{\\mathrm{full}}=\\begin{cases}1,  \\text{if } U_{s}^{\\mathrm{full}}=0 \\\\ 0,  \\text{if } U_{s}^{\\mathrm{full}}\\neq 0 \\end{cases} \\qquad P_{\\mathrm{red}}=\\begin{cases}1,  \\text{if } U_{s}^{\\mathrm{red}}=0 \\\\ 0,  \\text{if } U_{s}^{\\mathrm{red}}\\neq 0 \\end{cases}\n$$\nwhere $U_{s}$ denotes the shear part of the element energy, i.e., $U_{s}=\\frac{1}{2}\\int_{0}^{L}\\kappa G A\\,\\gamma_{h}(x)^{2}\\,\\mathrm{d}x$, evaluated with the respective quadrature rule. Express your final answer as the row matrix $\\big(P_{\\mathrm{full}}\\;\\;P_{\\mathrm{red}}\\big)$. No rounding is required, and no units are to be attached to the indicators.", "solution": "The problem requires the execution of a patch test for a single two-node $C^0$ Timoshenko beam finite element. The test corresponds to a state of constant bending curvature and zero shear strain. The outcome of the test is determined by whether the computed shear strain energy is zero or non-zero when evaluated using two different numerical integration schemes: $2$-point (full) and $1$-point (reduced) Gauss quadrature.\n\nFirst, we determine the nodal degrees of freedom $\\{w_1, \\theta_1, w_2, \\theta_2\\}$ by evaluating the prescribed exact fields at the element nodes, $x=0$ and $x=L$.\n\nThe exact fields are given as:\n$$\nw^{\\star}(x) = w_0 + \\theta_0 x - \\frac{1}{2} \\kappa_0 x^2\n$$\n$$\n\\theta^{\\star}(x) = \\theta_0 - \\kappa_0 x\n$$\n\nAt the first node ($x=0$):\n$$\nw_1 = w^{\\star}(0) = w_0 + \\theta_0(0) - \\frac{1}{2}\\kappa_0(0)^2 = w_0\n$$\n$$\n\\theta_1 = \\theta^{\\star}(0) = \\theta_0 - \\kappa_0(0) = \\theta_0\n$$\n\nAt the second node ($x=L$):\n$$\nw_2 = w^{\\star}(L) = w_0 + \\theta_0 L - \\frac{1}{2}\\kappa_0 L^2\n$$\n$$\n\\theta_2 = \\theta^{\\star}(L) = \\theta_0 - \\kappa_0 L\n$$\n\nNext, we construct the interpolated fields $w_h(x)$ and $\\theta_h(x)$ using the linear shape functions $N_1(x) = 1 - x/L$ and $N_2(x) = x/L$ and the computed nodal values.\n\nThe interpolated transverse displacement is:\n$$\nw_h(x) = N_1(x)w_1 + N_2(x)w_2 = \\left(1 - \\frac{x}{L}\\right)w_0 + \\frac{x}{L}\\left(w_0 + \\theta_0 L - \\frac{1}{2}\\kappa_0 L^2\\right)\n$$\n$$\nw_h(x) = w_0 - \\frac{x}{L}w_0 + \\frac{x}{L}w_0 + \\theta_0 x - \\frac{1}{2}\\kappa_0 L x = w_0 + \\theta_0 x - \\frac{1}{2}\\kappa_0 L x\n$$\n\nThe interpolated rotation is:\n$$\n\\theta_h(x) = N_1(x)\\theta_1 + N_2(x)\\theta_2 = \\left(1 - \\frac{x}{L}\\right)\\theta_0 + \\frac{x}{L}\\left(\\theta_0 - \\kappa_0 L\\right)\n$$\n$$\n\\theta_h(x) = \\theta_0 - \\frac{x}{L}\\theta_0 + \\frac{x}{L}\\theta_0 - \\kappa_0 x = \\theta_0 - \\kappa_0 x\n$$\nObserve that the linear interpolation recovers the exact rotation field, $\\theta_h(x) = \\theta^{\\star}(x)$, but fails to recover the quadratic exact displacement field $w^{\\star}(x)$.\n\nThe finite element approximation of the shear strain is $\\gamma_h(x) = w_h'(x) - \\theta_h(x)$. We first compute the derivative of the interpolated displacement:\n$$\nw_h'(x) = \\frac{d}{dx}\\left(w_0 + \\theta_0 x - \\frac{1}{2}\\kappa_0 L x\\right) = \\theta_0 - \\frac{1}{2}\\kappa_0 L\n$$\nNow, we find the shear strain:\n$$\n\\gamma_h(x) = \\left(\\theta_0 - \\frac{1}{2}\\kappa_0 L\\right) - \\left(\\theta_0 - \\kappa_0 x\\right) = \\kappa_0 \\left(x - \\frac{L}{2}\\right)\n$$\nThis non-zero strain, $\\gamma_h(x)$, is known as parasitic shear, as it arises in the finite element approximation even though the exact field has zero shear strain, $\\gamma^{\\star}(x)=0$.\n\nThe shear strain energy of the element is given by $U_s = \\frac{1}{2}\\int_{0}^{L}\\kappa G A\\,\\gamma_h(x)^2\\,\\mathrm{d}x$. Substituting the expression for $\\gamma_h(x)$:\n$$\nU_s = \\frac{1}{2} \\kappa G A \\int_{0}^{L} \\left[\\kappa_0 \\left(x - \\frac{L}{2}\\right)\\right]^2 \\mathrm{d}x = \\frac{1}{2} \\kappa G A \\kappa_0^2 \\int_{0}^{L} \\left(x - \\frac{L}{2}\\right)^2 \\mathrm{d}x\n$$\nTo perform Gauss quadrature, we map the integration domain from $x \\in [0, L]$ to the natural coordinate $\\xi \\in [-1, 1]$ using the transformation $x(\\xi) = \\frac{L}{2}(1+\\xi)$. The Jacobian of this transformation is $J = \\frac{dx}{d\\xi} = \\frac{L}{2}$. The term $(x - L/2)$ becomes:\n$$\nx - \\frac{L}{2} = \\frac{L}{2}(1+\\xi) - \\frac{L}{2} = \\frac{L}{2}\\xi\n$$\nThe integral for the shear energy is transformed as:\n$$\nU_s = \\frac{1}{2} \\kappa G A \\kappa_0^2 \\int_{-1}^{1} \\left(\\frac{L}{2}\\xi\\right)^2 \\left(\\frac{L}{2}\\right) \\mathrm{d}\\xi = \\frac{\\kappa G A \\kappa_0^2 L^3}{16} \\int_{-1}^{1} \\xi^2 \\mathrm{d}\\xi\n$$\n\nWe now evaluate this integral using the two specified quadrature rules.\n\n(i) Full integration using $2$-point Gauss quadrature:\nThe quadrature points are $\\xi_{1,2} = \\mp 1/\\sqrt{3}$ and weights are $w_{1,2} = 1$.\nThe integral is approximated as:\n$$\n\\int_{-1}^{1} \\xi^2 \\mathrm{d}\\xi \\approx \\sum_{i=1}^2 w_i \\xi_i^2 = (1)\\left(-\\frac{1}{\\sqrt{3}}\\right)^2 + (1)\\left(\\frac{1}{\\sqrt{3}}\\right)^2 = \\frac{1}{3} + \\frac{1}{3} = \\frac{2}{3}\n$$\nThis result is exact because $2$-point Gauss quadrature is exact for polynomials up to degree $2(2)-1=3$.\nThe shear energy is:\n$$\nU_s^{\\mathrm{full}} = \\frac{\\kappa G A \\kappa_0^2 L^3}{16} \\left(\\frac{2}{3}\\right) = \\frac{\\kappa G A \\kappa_0^2 L^3}{24}\n$$\nSince $\\kappa_0 \\neq 0$ and the material and geometric properties are positive, $U_s^{\\mathrm{full}} \\neq 0$. The element fails the patch test under full integration. Thus, the pass indicator is $P_{\\mathrm{full}}=0$.\n\n(ii) Reduced integration using $1$-point Gauss quadrature:\nThe quadrature point is $\\xi_1 = 0$ and the weight is $w_1 = 2$.\nThe integral is approximated as:\n$$\n\\int_{-1}^{1} \\xi^2 \\mathrm{d}\\xi \\approx \\sum_{i=1}^1 w_i \\xi_i^2 = (2)(0)^2 = 0\n$$\nThe shear energy is:\n$$\nU_s^{\\mathrm{red}} = \\frac{\\kappa G A \\kappa_0^2 L^3}{16} (0) = 0\n$$\nSince $U_s^{\\mathrm{red}} = 0$, the element passes the patch test under reduced integration. This is because the single integration point at $\\xi=0$ (which corresponds to $x=L/2$) is precisely where the parasitic shear strain $\\gamma_h(x)$ is zero. Thus, the pass indicator is $P_{\\mathrm{red}}=1$.\n\nThe final answer is the row matrix of the pass indicators $(P_{\\mathrm{full}}\\;\\;P_{\\mathrm{red}})$.\n$$\n\\big(P_{\\mathrm{full}}\\;\\;P_{\\mathrm{red}}\\big) = \\big(0\\;\\;1\\big)\n$$", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0  1\n\\end{pmatrix}\n}\n$$", "id": "2543362"}, {"introduction": "The ultimate test of an engineering concept lies in its practical application and verification. This comprehensive coding practice [@problem_id:2543367] brings together theory and implementation, tasking you with building and comparing two element formulations for a classic cantilever beam problem: one that suffers from shear locking and another that uses a selective integration remedy. By running your code for beams of varying slenderness and comparing your numerical results to the exact analytical solution, you will viscerally observe and quantify the debilitating effects of shear locking and the remarkable effectiveness of the fix.", "problem": "A cantilever beam of uniform rectangular cross-section is modeled using the Timoshenko beam theory. The beam has axial coordinate $x \\in [0,L]$, transverse displacement field $w(x)$, and cross-sectional rotation field $\\theta(x)$. The constitutive relations are $M(x) = E I \\, \\theta'(x)$ and $Q(x) = \\kappa G A \\, \\big(w'(x) - \\theta(x)\\big)$, where $M$ is the bending moment, $Q$ is the shear force, $E$ is the Young's modulus, $G$ is the shear modulus, $I$ is the second moment of area, $A$ is the cross-sectional area, and $\\kappa$ is the shear correction factor. The beam is clamped at $x=0$ with $w(0) = 0$ and $\\theta(0) = 0$, and subjected to a concentrated end load of magnitude $P$ (transverse shear force) at $x=L$ with no applied end moment. Use the weak form of the Timoshenko beam to derive a $C^0$ two-node finite element with nodal degrees of freedom $\\{w_i,\\theta_i\\}$ per node, linear interpolation for both $w$ and $\\theta$, and compute the global response for a uniform mesh of $N_e$ elements.\n\nTwo element variants must be implemented:\n- A standard element in which the shear energy term is integrated with full Gauss integration on each element, and the bending energy term is integrated with full Gauss integration.\n- A locking-free element using selective reduced integration, in which the shear energy term is integrated with a single Gauss point per element, while the bending energy term is fully integrated.\n\nFrom first principles, begin with the virtual work statement and show how the element stiffness contributions arise from the bending and shear energy terms, paying careful attention to the shape functions, their derivatives, and the mapping from the parent element to the physical coordinate. Then, for a cantilever beam under a tip load as specified above, derive the exact Timoshenko solution for the tip rotation and tip deflection in terms of $(E,G,A,I,\\kappa,L,P)$.\n\nYour program must:\n- Assemble the global stiffness matrix for the cantilever using each of the two element variants described above.\n- Impose clamped boundary conditions at $x=0$ on both $w$ and $\\theta$.\n- Apply the nodal end load $P$ at $x=L$ to the transverse displacement degree of freedom of the last node.\n- Solve the resulting linear systems to obtain the tip deflection $w(L)$ in meters and the tip rotation $\\theta(L)$ in radians.\n- Compute the exact Timoshenko tip deflection and rotation in closed form and evaluate the absolute relative errors of both the finite element predictions with respect to the exact solution.\n\nAll physical quantities must be expressed in the International System of Units (SI). Report deflection in meters and rotation in radians.\n\nTest suite:\n- Use $E = 210 \\times 10^{9}$ Pa, Poisson’s ratio $\\nu = 0.3$ so that $G = \\dfrac{E}{2(1+\\nu)}$, shear factor $\\kappa = \\dfrac{5}{6}$, beam width $b = 1$ m, beam length $L = 1$ m, uniform mesh with $N_e = 4$ elements, and tip load $P = 1$ N. For a rectangular section of thickness $t$, use $A = b t$ and $I = \\dfrac{b t^{3}}{12}$.\n- Evaluate four cases of slenderness ratio $L/t \\in \\{5, 10, 50, 100\\}$. For each case, determine $t = L/(L/t)$ and then compute $A$ and $I$ accordingly.\n- For each case, compute four floats: the absolute relative error in tip deflection using the standard element, the absolute relative error in tip rotation using the standard element, the absolute relative error in tip deflection using the locking-free element, and the absolute relative error in tip rotation using the locking-free element.\n\nAngle unit requirement: all angles must be in radians. Physical unit requirement: all deflections must be in meters.\n\nFinal output format:\n- Your program should produce a single line of output containing a comma-separated list of four-element lists, one per test case, enclosed in square brackets. Each inner list must be ordered as $[L/t, \\varepsilon_{w}^{\\mathrm{std}}, \\varepsilon_{\\theta}^{\\mathrm{std}}, \\varepsilon_{w}^{\\mathrm{lf}}, \\varepsilon_{\\theta}^{\\mathrm{lf}}]$, where each $\\varepsilon$ is an absolute relative error expressed as a decimal (not a percentage). For example: $[[5,0.001,0.002,0.0001,0.0002],[10, \\dots ],\\dots]$.", "solution": "The problem requires the finite element analysis of a cantilever beam using the Timoshenko beam theory. We must formulate two types of $C^0$ two-node elements: a standard, fully integrated element that exhibits shear locking, and a locking-free element employing selective reduced integration. The results are to be compared with the exact analytical solution for a cantilever under a tip load.\n\nWe begin with the fundamental principles. The strain energy, $U$, of a Timoshenko beam is composed of bending and shear contributions:\n$$ U = \\frac{1}{2} \\int_{0}^{L} \\left( E I \\left(\\frac{d\\theta}{dx}\\right)^2 + \\kappa G A \\left(\\frac{dw}{dx} - \\theta\\right)^2 \\right) dx $$\nHere, $w(x)$ is the transverse displacement, $\\theta(x)$ is the rotation of the cross-section, $E$ is Young's modulus, $G$ is the shear modulus, $I$ is the second moment of area, $A$ is the cross-sectional area, $\\kappa$ is the shear correction factor, and $L$ is the beam length.\n\nThe principle of virtual work states that for a system in equilibrium, the virtual work of the internal forces is equal to the virtual work of the external forces. For this problem, with an applied tip load $P$ at $x=L$, the weak form is given by $\\delta U = \\delta W_{\\text{ext}}$, which is:\n$$ \\int_{0}^{L} E I \\frac{d\\theta}{dx} \\frac{d(\\delta\\theta)}{dx} dx + \\int_{0}^{L} \\kappa G A \\left(\\frac{dw}{dx} - \\theta\\right) \\left(\\frac{d(\\delta w)}{dx} - \\delta\\theta\\right) dx = P \\delta w(L) $$\nThis equation holds for all kinematically admissible virtual displacements $\\delta w$ and virtual rotations $\\delta\\theta$. The first integral represents the contribution of bending energy, and the second represents the shear energy.\n\nWe now discretize the domain into $N_e$ finite elements. For a single two-node element of length $h_e$, we introduce a local coordinate $\\xi \\in [-1, 1]$. The physical coordinate $x$ is mapped by $x(\\xi) = x_c + \\frac{h_e}{2}\\xi$, where $x_c$ is the element's center. The Jacobian of this transformation is $J = \\frac{dx}{d\\xi} = \\frac{h_e}{2}$.\n\nThe displacement field $w(x)$ and rotation field $\\theta(x)$ within the element are interpolated from the nodal degrees of freedom $\\mathbf{d}^e = \\{w_1, \\theta_1, w_2, \\theta_2\\}^T$ using linear Lagrange shape functions $N_1$ and $N_2$:\n$$ N_1(\\xi) = \\frac{1}{2}(1-\\xi), \\quad N_2(\\xi) = \\frac{1}{2}(1+\\xi) $$\n$$ w(\\xi) = N_1(\\xi)w_1 + N_2(\\xi)w_2 $$\n$$ \\theta(\\xi) = N_1(\\xi)\\theta_1 + N_2(\\xi)\\theta_2 $$\n\nThe derivatives with respect to $x$ are $\\frac{d(\\cdot)}{dx} = \\frac{d\\xi}{dx}\\frac{d(\\cdot)}{d\\xi} = \\frac{2}{h_e}\\frac{d(\\cdot)}{d\\xi}$. We define the strain-displacement matrices.\nThe curvature is $\\frac{d\\theta}{dx} = \\mathbf{B}_b \\mathbf{d}^e$, and the shear strain is $\\gamma = \\frac{dw}{dx} - \\theta = \\mathbf{B}_s \\mathbf{d}^e$.\nThe matrix $\\mathbf{B}_b$ for bending is derived from the derivative of $\\theta$:\n$$ \\frac{d\\theta}{dx} = \\frac{2}{h_e} \\left( \\frac{dN_1}{d\\xi}\\theta_1 + \\frac{dN_2}{d\\xi}\\theta_2 \\right) = \\frac{2}{h_e} \\left( -\\frac{1}{2}\\theta_1 + \\frac{1}{2}\\theta_2 \\right) = \\frac{1}{h_e}(-\\theta_1 + \\theta_2) $$\n$$ \\mathbf{B}_b = \\frac{1}{h_e} \\begin{bmatrix} 0  -1  0  1 \\end{bmatrix} $$\nThe matrix $\\mathbf{B}_s$ for shear is derived from $\\frac{dw}{dx} - \\theta$:\n$$ \\frac{dw}{dx} = \\frac{1}{h_e}(-w_1 + w_2) $$\n$$ \\gamma = \\frac{1}{h_e}(-w_1 + w_2) - (N_1(\\xi)\\theta_1 + N_2(\\xi)\\theta_2) $$\n$$ \\mathbf{B}_s(\\xi) = \\begin{bmatrix} -\\frac{1}{h_e}  -N_1(\\xi)  \\frac{1}{h_e}  -N_2(\\xi) \\end{bmatrix} = \\begin{bmatrix} -\\frac{1}{h_e}  -\\frac{1}{2}(1-\\xi)  \\frac{1}{h_e}  -\\frac{1}{2}(1+\\xi) \\end{bmatrix} $$\nThe element stiffness matrix $\\mathbf{k}^e = \\mathbf{k}_b^e + \\mathbf{k}_s^e$ is obtained by substituting these discrete forms into the weak form and integrating over the element domain:\n$$ \\mathbf{k}_b^e = \\int_{-1}^{1} \\mathbf{B}_b^T E I \\mathbf{B}_b \\, J \\, d\\xi $$\n$$ \\mathbf{k}_s^e = \\int_{-1}^{1} \\mathbf{B}_s(\\xi)^T \\kappa G A \\mathbf{B}_s(\\xi) \\, J \\, d\\xi $$\n\nFor the bending stiffness $\\mathbf{k}_b^e$, the integrand is constant since $\\mathbf{B}_b$ is constant. The integral is trivial:\n$$ \\mathbf{k}_b^e = E I \\mathbf{B}_b^T \\mathbf{B}_b h_e = \\frac{E I}{h_e} \\begin{bmatrix} 0  0  0  0 \\\\ 0  1  0  -1 \\\\ 0  0  0  0 \\\\ 0  -1  0  1 \\end{bmatrix} $$\nThis result is exact and can be obtained with a single Gauss point.\n\nFor the shear stiffness $\\mathbf{k}_s^e$, the integrand $\\mathbf{B}_s^T \\mathbf{B}_s$ is a $4 \\times 4$ matrix containing polynomials in $\\xi$ up to degree $2$. Full, exact integration requires a $2$-point Gauss quadrature rule ($n$ points integrate polynomials of degree $2n-1$ exactly; for degree $2$, we need $n=2$ points).\nThe standard element uses this $2$-point rule. For thin beams, where shear deformation is negligible, the term $\\kappa G A$ becomes very large. The numerical integration enforces the condition $\\frac{dw}{dx} - \\theta \\approx 0$ at two points, which over-constrains the element with linear shape functions, leading to an artificially stiff response known as shear locking.\n\nThe locking-free element uses selective reduced integration. We integrate the shear term with a $1$-point Gauss quadrature rule ($\\xi=0$, weight $w\n=2$). This imposes the constraint $\\frac{dw}{dx} - \\theta = 0$ only at the element center, relaxing the artificial stiffness. At $\\xi=0$, $\\mathbf{B}_s(0) = [-\\frac{1}{h_e}, -\\frac{1}{2}, \\frac{1}{h_e}, -\\frac{1}{2}]$.\n$$ \\mathbf{k}_s^e(\\text{reduced}) = \\kappa G A (\\mathbf{B}_s(0)^T \\mathbf{B}_s(0)) \\frac{h_e}{2} (2) = \\frac{\\kappa G A}{h_e} \\begin{bmatrix} 1  h_e/2  -1  h_e/2 \\\\ h_e/2  h_e^2/4  -h_e/2  h_e^2/4 \\\\ -1  -h_e/2  1  -h_e/2 \\\\ h_e/2  h_e^2/4  -h_e/2  h_e^2/4 \\end{bmatrix} $$\n\nNext, we derive the exact analytical solution. The governing differential equations are obtained from the first variation of the potential energy, leading to the strong form. Using the sign convention that agrees with our weak form leads to:\n$$ \\frac{dM}{dx} = -Q, \\quad \\frac{dQ}{dx} = 0 $$\nwhere $M = EI \\frac{d\\theta}{dx}$ is the bending moment and $Q = \\kappa G A (\\frac{dw}{dx} - \\theta)$ is the shear force.\nFor a cantilever with a tip load $P$ at $x=L$, the boundary conditions are $w(0)=0, \\theta(0)=0, M(L)=0, Q(L)=P$.\nFrom $Q'=0$ and $Q(L)=P$, we get $Q(x)=P$ for all $x$.\nFrom $M' = -Q = -P$, we integrate to get $M(x) = -Px + C_1$. Using $M(L)=0$, we find $-PL+C_1=0 \\Rightarrow C_1=PL$. So, $M(x)=P(L-x)$.\nNow we solve for $\\theta(x)$ and $w(x)$:\n$$ \\frac{d\\theta}{dx} = \\frac{M(x)}{EI} = \\frac{P(L-x)}{EI} $$\nIntegrating and using $\\theta(0)=0$:\n$$ \\theta(x) = \\frac{P}{EI}\\left(Lx - \\frac{x^2}{2}\\right) $$\nNext, from the shear constitutive relation:\n$$ \\frac{dw}{dx} = \\theta(x) + \\frac{Q(x)}{\\kappa G A} = \\frac{P}{EI}\\left(Lx - \\frac{x^2}{2}\\right) + \\frac{P}{\\kappa G A} $$\nIntegrating and using $w(0)=0$:\n$$ w(x) = \\frac{P}{EI}\\left(\\frac{Lx^2}{2} - \\frac{x^3}{6}\\right) + \\frac{Px}{\\kappa G A} $$\nEvaluating at the tip $x=L$, we obtain the exact tip deflection and rotation:\n$$ w_{\\text{ex}}(L) = \\frac{P}{EI}\\left(\\frac{L^3}{2} - \\frac{L^3}{6}\\right) + \\frac{PL}{\\kappa G A} = \\frac{PL^3}{3EI} + \\frac{PL}{\\kappa G A} $$\n$$ \\theta_{\\text{ex}}(L) = \\frac{P}{EI}\\left(L^2 - \\frac{L^2}{2}\\right) = \\frac{PL^2}{2EI} $$\nThese formulae provide the benchmark against which the finite element solutions will be validated. The terms represent the bending and shear contributions to deflection, and the pure bending contribution to rotation.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Timoshenko beam problem using two different finite element formulations\n    and compares the results to the exact analytical solution.\n    \"\"\"\n\n    # --- Problem Parameters ---\n    E = 210e9  # Young's modulus in Pa\n    nu = 0.3    # Poisson's ratio\n    G = E / (2 * (1 + nu))  # Shear modulus in Pa\n    kappa_s = 5.0 / 6.0  # Shear correction factor\n    b = 1.0     # Beam width in m\n    L = 1.0     # Beam length in m\n    P = 1.0     # Tip load in N\n    Ne = 4      # Number of elements\n    h = L / Ne  # Element length\n\n    # --- Test Cases ---\n    slenderness_ratios = [5, 10, 50, 100]\n    test_cases = []\n    for s_ratio in slenderness_ratios:\n        t = L / s_ratio\n        A = b * t\n        I = (b * t**3) / 12\n        test_cases.append({\n            \"slenderness\": s_ratio,\n            \"A\": A,\n            \"I\": I\n        })\n    \n    # Gauss quadrature points and weights\n    # 2-point rule for full integration of shear term\n    gauss_points_2 = [-1.0 / np.sqrt(3.0), 1.0 / np.sqrt(3.0)]\n    gauss_weights_2 = [1.0, 1.0]\n\n    all_results = []\n\n    def get_element_stiffness(A, I, integration_type):\n        \"\"\"Calculates the 4x4 element stiffness matrix.\"\"\"\n        # Bending stiffness matrix (k_b)\n        # This is constant and integration is exact with one point.\n        k_b = (E * I / h) * np.array([\n            [0, 0, 0, 0],\n            [0, 1, 0, -1],\n            [0, 0, 0, 0],\n            [0, -1, 0, 1]\n        ])\n\n        # Shear stiffness matrix (k_s)\n        k_s = np.zeros((4, 4))\n        if integration_type == 'full':\n            # Full integration (2-point Gauss quadrature)\n            for xi, w in zip(gauss_points_2, gauss_weights_2):\n                N1 = 0.5 * (1 - xi)\n                N2 = 0.5 * (1 + xi)\n                # Shear strain-displacement matrix B_s\n                B_s = np.array([-1.0/h, -N1, 1.0/h, -N2])\n                k_s += w * np.outer(B_s, B_s)\n            k_s *= kappa_s * G * A * h / 2.0\n        \n        elif integration_type == 'reduced':\n            # Reduced integration (1-point Gauss quadrature at xi=0)\n            # Analytically derived formula for efficiency\n            factor = kappa_s * G * A / h\n            k_s = factor * np.array([\n                [1,         h/2,       -1,      h/2],\n                [h/2,   h**2/4,  -h/2,   h**2/4],\n                [-1,     -h/2,        1,     -h/2],\n                [h/2,   h**2/4,  -h/2,   h**2/4]\n            ])\n        \n        return k_b + k_s\n\n    def run_fem(A, I, integration_type):\n        \"\"\"Assembles and solves the global finite element system.\"\"\"\n        num_dofs = 2 * (Ne + 1)\n        K_global = np.zeros((num_dofs, num_dofs))\n        F_global = np.zeros(num_dofs)\n\n        # Get element stiffness matrix\n        k_e = get_element_stiffness(A, I, integration_type)\n\n        # Assemble global stiffness matrix\n        for i in range(Ne):\n            dof_indices = np.array([2*i, 2*i + 1, 2*i + 2, 2*i + 3])\n            K_global[np.ix_(dof_indices, dof_indices)] += k_e\n\n        # Apply force boundary condition\n        # A positive force P is applied to the transverse displacement DOF of the last node.\n        F_global[2 * Ne] = P\n\n        # Apply displacement boundary conditions (clamped at x=0)\n        # w(0) = 0 and theta(0) = 0\n        K_global[0, :] = 0\n        K_global[:, 0] = 0\n        K_global[0, 0] = 1.0\n        F_global[0] = 0\n\n        K_global[1, :] = 0\n        K_global[:, 1] = 0\n        K_global[1, 1] = 1.0\n        F_global[1] = 0\n\n        # Solve the system\n        d = np.linalg.solve(K_global, F_global)\n\n        # Extract tip deflection and rotation\n        tip_deflection = d[2 * Ne]\n        tip_rotation = d[2 * Ne + 1]\n        \n        return tip_deflection, tip_rotation\n\n    for case in test_cases:\n        s_ratio = case['slenderness']\n        A = case['A']\n        I = case['I']\n\n        # --- Exact Solution ---\n        w_exact = (P * L**3) / (3 * E * I) + (P * L) / (kappa_s * G * A)\n        theta_exact = (P * L**2) / (2 * E * I)\n\n        # --- FEM Solutions ---\n        # Standard Element (Full Integration)\n        w_std, theta_std = run_fem(A, I, 'full')\n\n        # Locking-Free Element (Reduced Integration)\n        w_lf, theta_lf = run_fem(A, I, 'reduced')\n\n        # --- Calculate Relative Errors ---\n        err_w_std = abs((w_std - w_exact) / w_exact)\n        err_theta_std = abs((theta_std - theta_exact) / theta_exact)\n        err_w_lf = abs((w_lf - w_exact) / w_exact)\n        err_theta_lf = abs((theta_lf - theta_exact) / theta_exact)\n        \n        all_results.append([s_ratio, err_w_std, err_theta_std, err_w_lf, err_theta_lf])\n\n    # Final print statement in the exact required format.\n    print(str(all_results).replace(\" \", \"\"))\n\nsolve()\n```", "id": "2543367"}]}