{"hands_on_practices": [{"introduction": "The cornerstone of the finite element method for structural analysis is the element stiffness matrix, $\\mathbf{K}_e$, which relates nodal forces to nodal displacements. This first practice guides you through the fundamental derivation of the stiffness matrix for an Euler-Bernoulli beam element from first principles. By starting with the beam's bending strain energy and applying the principle of stationary potential energy with appropriate Hermite shape functions, you will build this essential matrix from the ground up, solidifying your understanding of how continuum mechanics principles are discretized into a powerful computational tool [@problem_id:2599805].", "problem": "A straight, prismatic Euler-Bernoulli beam element of length $L$ and constant flexural rigidity $E I$ is modeled for planar bending about a principal axis. The element has two nodes located at $x=0$ and $x=L$. The nodal degrees of freedom (DOF) are the transverse deflections $w_1$, $w_2$ and the rotations $\\theta_1$, $\\theta_2$, assembled in the vector $\\mathbf{d} = [w_1, \\theta_1, w_2, \\theta_2]^{\\mathsf{T}}$. Assume the Euler-Bernoulli kinematics so that the curvature is $\\kappa(x) = w''(x)$ and shear deformation is neglected.\n\nStarting from the bending strain energy\n$$\nU = \\frac{1}{2} \\int_{0}^{L} E I \\big(w''(x)\\big)^{2} \\, dx,\n$$\nand the principle of stationary total potential, derive the consistent element bending stiffness matrix $\\mathbf{K}_e$ such that $\\mathbf{K}_e \\, \\mathbf{d}$ gives the nodal bending forces and moments for this element. Use a $C^1$-continuous cubic interpolation for $w(x)$ that exactly interpolates the nodal deflections and rotations, i.e., the Hermite-type interpolation defined by the conditions $w(0)=w_1$, $w'(0)=\\theta_1$, $w(L)=w_2$, $w'(L)=\\theta_2$.\n\nCompute the closed-form $4 \\times 4$ bending stiffness matrix for constant $E I$ and length $L$. Express your final answer as a single symbolic matrix in terms of $E$, $I$, and $L$, factoring out the scalar $\\dfrac{E I}{L^3}$. No numerical evaluation is required, and no units should be included in the final expression.", "solution": "The objective is to derive the element stiffness matrix $\\mathbf{K}_e$ for a planar Euler-Bernoulli beam element. The strain energy $U$ is given as\n$$\nU = \\frac{1}{2} \\int_{0}^{L} E I \\big(w''(x)\\big)^{2} \\, dx\n$$\nwhere $w(x)$ is the transverse displacement field, $E I$ is the constant flexural rigidity, and $L$ is the element length. The stiffness matrix relates the nodal degrees of freedom (DOFs) $\\mathbf{d}$ to the strain energy by the quadratic form\n$$\nU = \\frac{1}{2} \\mathbf{d}^{\\mathsf{T}} \\mathbf{K}_e \\mathbf{d}\n$$\nThe nodal DOF vector is defined as $\\mathbf{d} = [w_1, \\theta_1, w_2, \\theta_2]^{\\mathsf{T}}$, where $w_1$, $\\theta_1$ are the deflection and rotation at the node at $x=0$, and $w_2$, $\\theta_2$ are the deflection and rotation at the node at $x=L$.\n\nThe displacement field $w(x)$ is interpolated from the nodal DOFs using $C^1$-continuous cubic Hermite shape functions $N_i(x)$:\n$$\nw(x) = N_1(x) w_1 + N_2(x) \\theta_1 + N_3(x) w_2 + N_4(x) \\theta_2 = \\mathbf{N}(x) \\mathbf{d}\n$$\nwhere $\\mathbf{N}(x) = [N_1(x), N_2(x), N_3(x), N_4(x)]$ is the row vector of shape functions. These functions are derived by enforcing the conditions $w(0)=w_1$, $w'(0)=\\theta_1$, $w(L)=w_2$, and $w'(L)=\\theta_2$. The resulting shape functions are:\n$$\n\\begin{aligned}\nN_1(x) = 1 - 3\\left(\\frac{x}{L}\\right)^2 + 2\\left(\\frac{x}{L}\\right)^3 \\\\\nN_2(x) = x\\left(1 - \\frac{x}{L}\\right)^2 \\\\\nN_3(x) = 3\\left(\\frac{x}{L}\\right)^2 - 2\\left(\\frac{x}{L}\\right)^3 \\\\\nN_4(x) = \\frac{x^2}{L}\\left(\\frac{x}{L} - 1\\right)\n\\end{aligned}\n$$\nThe curvature is the second derivative of the displacement, $\\kappa(x) = w''(x)$. Differentiating the expression for $w(x)$ twice gives:\n$$\nw''(x) = N_1''(x) w_1 + N_2''(x) \\theta_1 + N_3''(x) w_2 + N_4''(x) \\theta_2 = \\mathbf{B}(x) \\mathbf{d}\n$$\nwhere $\\mathbf{B}(x) = \\mathbf{N}''(x) = [N_1''(x), N_2''(x), N_3''(x), N_4''(x)]$ is the strain-displacement matrix. The second derivatives of the shape functions are:\n$$\n\\begin{aligned}\nN_1''(x) = -\\frac{6}{L^2} + \\frac{12x}{L^3} = \\frac{6}{L^2}\\left(\\frac{2x}{L} - 1\\right) \\\\\nN_2''(x) = -\\frac{4}{L} + \\frac{6x}{L^2} = \\frac{2}{L}\\left(\\frac{3x}{L} - 2\\right) \\\\\nN_3''(x) = \\frac{6}{L^2} - \\frac{12x}{L^3} = \\frac{6}{L^2}\\left(1 - \\frac{2x}{L}\\right) \\\\\nN_4''(x) = -\\frac{2}{L} + \\frac{6x}{L^2} = \\frac{2}{L}\\left(\\frac{3x}{L} - 1\\right)\n\\end{aligned}\n$$\nSubstituting $w''(x) = \\mathbf{B}(x) \\mathbf{d}$ into the strain energy integral yields:\n$$\nU = \\frac{1}{2} \\int_{0}^{L} E I \\big(\\mathbf{B}(x) \\mathbf{d}\\big)^2 \\, dx = \\frac{1}{2} \\int_{0}^{L} E I \\left(\\mathbf{d}^{\\mathsf{T}} \\mathbf{B}(x)^{\\mathsf{T}} \\mathbf{B}(x) \\mathbf{d}\\right) \\, dx\n$$\nSince $\\mathbf{d}$ is constant with respect to $x$, we can write:\n$$\nU = \\frac{1}{2} \\mathbf{d}^{\\mathsf{T}} \\left( \\int_{0}^{L} E I \\, \\mathbf{B}(x)^{\\mathsf{T}} \\mathbf{B}(x) \\, dx \\right) \\mathbf{d}\n$$\nBy comparison with $U = \\frac{1}{2} \\mathbf{d}^{\\mathsf{T}} \\mathbf{K}_e \\mathbf{d}$, the stiffness matrix $\\mathbf{K}_e$ is identified as:\n$$\n\\mathbf{K}_e = \\int_{0}^{L} E I \\, \\mathbf{B}(x)^{\\mathsf{T}} \\mathbf{B}(x) \\, dx\n$$\nThe components of the stiffness matrix, $K_{ij}$, are given by the integrals:\n$$\nK_{ij} = E I \\int_{0}^{L} N_i''(x) N_j''(x) \\, dx\n$$\nWe now compute the components of the symmetric $4 \\times 4$ matrix $\\mathbf{K}_e$.\n\nFor $K_{11}$:\n$K_{11} = E I \\int_{0}^{L} \\left(N_1''(x)\\right)^2 dx = E I \\int_{0}^{L} \\left(\\frac{6}{L^2}\\left(\\frac{2x}{L} - 1\\right)\\right)^2 dx = \\frac{36 E I}{L^4} \\int_{0}^{L} \\left(\\frac{4x^2}{L^2} - \\frac{4x}{L} + 1\\right) dx = \\frac{12 E I}{L^3}$.\n\nFor $K_{12} = K_{21}$:\n$K_{12} = E I \\int_{0}^{L} N_1''(x) N_2''(x) \\, dx = E I \\int_{0}^{L} \\frac{6}{L^2}\\left(\\frac{2x}{L} - 1\\right) \\frac{2}{L}\\left(\\frac{3x}{L} - 2\\right) dx = \\frac{12 E I}{L^3} \\int_{0}^{L} \\left(\\frac{6x^2}{L^2} - \\frac{7x}{L} + 2\\right) dx = \\frac{6 E I}{L^2}$.\n\nFor $K_{13} = K_{31}$:\nSince $N_3''(x) = -N_1''(x)$, we have $K_{13} = E I \\int_{0}^{L} N_1''(x) (-N_1''(x)) \\, dx = -K_{11} = -\\frac{12 E I}{L^3}$.\n\nFor $K_{14} = K_{41}$:\n$K_{14} = E I \\int_{0}^{L} N_1''(x) N_4''(x) \\, dx = E I \\int_{0}^{L} \\frac{6}{L^2}\\left(\\frac{2x}{L} - 1\\right) \\frac{2}{L}\\left(\\frac{3x}{L} - 1\\right) dx = \\frac{12 E I}{L^3} \\int_{0}^{L} \\left(\\frac{6x^2}{L^2} - \\frac{5x}{L} + 1\\right) dx = \\frac{6 E I}{L^2}$.\n\nFor $K_{22}$:\n$K_{22} = E I \\int_{0}^{L} \\left(N_2''(x)\\right)^2 dx = E I \\int_{0}^{L} \\left(\\frac{2}{L}\\left(\\frac{3x}{L} - 2\\right)\\right)^2 dx = \\frac{4 E I}{L^2} \\int_{0}^{L} \\left(\\frac{9x^2}{L^2} - \\frac{12x}{L} + 4\\right) dx = \\frac{4 E I}{L}$.\n\nFor $K_{23} = K_{32}$:\n$K_{23} = E I \\int_{0}^{L} N_2''(x) N_3''(x) \\, dx = E I \\int_{0}^{L} N_2''(x) (-N_1''(x)) \\, dx = -K_{12} = -\\frac{6 E I}{L^2}$.\n\nFor $K_{24} = K_{42}$:\n$K_{24} = E I \\int_{0}^{L} N_2''(x) N_4''(x) \\, dx = E I \\int_{0}^{L} \\frac{2}{L}\\left(\\frac{3x}{L} - 2\\right) \\frac{2}{L}\\left(\\frac{3x}{L} - 1\\right) dx = \\frac{4 E I}{L^2} \\int_{0}^{L} \\left(\\frac{9x^2}{L^2} - \\frac{9x}{L} + 2\\right) dx = \\frac{2 E I}{L}$.\n\nFor $K_{33}$:\n$K_{33} = E I \\int_{0}^{L} \\left(N_3''(x)\\right)^2 dx = E I \\int_{0}^{L} \\left(-N_1''(x)\\right)^2 dx = K_{11} = \\frac{12 E I}{L^3}$.\n\nFor $K_{34} = K_{43}$:\n$K_{34} = E I \\int_{0}^{L} N_3''(x) N_4''(x) \\, dx = E I \\int_{0}^{L} (-N_1''(x)) N_4''(x) \\, dx = -K_{14} = -\\frac{6 E I}{L^2}$.\n\nFor $K_{44}$:\n$K_{44} = E I \\int_{0}^{L} \\left(N_4''(x)\\right)^2 dx = E I \\int_{0}^{L} \\left(\\frac{2}{L}\\left(\\frac{3x}{L} - 1\\right)\\right)^2 dx = \\frac{4 E I}{L^2} \\int_{0}^{L} \\left(\\frac{9x^2}{L^2} - \\frac{6x}{L} + 1\\right) dx = \\frac{4 E I}{L}$.\n\nAssembling these components into the matrix $\\mathbf{K}_e$:\n$$\n\\mathbf{K}_e = \\begin{pmatrix}\n\\frac{12 E I}{L^3}  \\frac{6 E I}{L^2}  -\\frac{12 E I}{L^3}  \\frac{6 E I}{L^2} \\\\\n\\frac{6 E I}{L^2}  \\frac{4 E I}{L}  -\\frac{6 E I}{L^2}  \\frac{2 E I}{L} \\\\\n-\\frac{12 E I}{L^3}  -\\frac{6 E I}{L^2}  \\frac{12 E I}{L^3}  -\\frac{6 E I}{L^2} \\\\\n\\frac{6 E I}{L^2}  \\frac2 E I}{L}  -\\frac{6 E I}{L^2}  \\frac{4 E I}{L}\n\\end{pmatrix}\n$$\nFactoring out the scalar term $\\dfrac{E I}{L^3}$ as requested:\n$$\n\\mathbf{K}_e = \\frac{E I}{L^3} \\begin{pmatrix}\n12  6L  -12  6L \\\\\n6L  4L^2  -6L  2L^2 \\\\\n-12  -6L  12  -6L \\\\\n6L  2L^2  -6L  4L^2\n\\end{pmatrix}\n$$\nThis is the final expression for the consistent bending stiffness matrix of an Euler-Bernoulli beam element.", "answer": "$$\n\\boxed{\\frac{E I}{L^3} \\begin{pmatrix} 12  6L  -12  6L \\\\ 6L  4L^2  -6L  2L^2 \\\\ -12  -6L  12  -6L \\\\ 6L  2L^2  -6L  4L^2 \\end{pmatrix}}\n$$", "id": "2599805"}, {"introduction": "Having established the stiffness matrix, we now turn our attention to the right-hand side of the finite element equation: the load vector. This practice explores how to represent distributed loads, a common scenario in structural engineering, within the discrete FEA framework. You will derive and compare the results from a mathematically 'consistent' load vector against a more intuitive 'lumped' approximation, and critically, you'll benchmark both against the exact analytical solution to quantify the error introduced by these modeling choices [@problem_id:2599801].", "problem": "An Euler-Bernoulli beam of length $L$, constant flexural rigidity $E I$, is clamped at $x=0$ and free at $x=L$. A uniform transverse load of constant intensity $q$ acts along the span in the positive transverse displacement direction. Using the Finite Element Method (FEM) with a single, two-node Euler-Bernoulli beam element employing cubic Hermite interpolation for the transverse displacement field, proceed as follows.\n\n- Starting from the weak form of the Euler-Bernoulli beam,\n$$\\int_{0}^{L} E I\\, w''(x)\\, \\delta w''(x)\\, dx=\\int_{0}^{L} q\\, \\delta w(x)\\, dx,$$\nderive the element stiffness matrix entries $k_{ij}=\\int_{0}^{L} E I\\, N_i''(x)\\, N_j''(x)\\, dx$ and the consistent element load vector entries $f_i^{\\mathrm{(cons)}}=\\int_{0}^{L} q\\, N_i(x)\\, dx$, where $N_i(x)$ are the cubic Hermite shape functions associated with the nodal degrees of freedom $\\{w_1,\\theta_1,w_2,\\theta_2\\}$.\n\n- Define a lumped load vector $f_i^{\\mathrm{(lump)}}$ by concentrating the total resultant of the distributed load equally as nodal transverse forces at the two nodes and assigning zero nodal moments; that is, the nodal transverse forces are each equal to $q L/2$ and the nodal moments are zero.\n\n- Impose the clamped boundary conditions $w_1=0$ and $\\theta_1=0$, and form the reduced $2\\times 2$ linear systems for the unknown tip degrees of freedom $\\{w_2,\\theta_2\\}$ under each of the two loadings $f^{\\mathrm{(cons)}}$ and $f^{\\mathrm{(lump)}}$. Solve these systems to obtain the finite element predictions of the tip deflection $w_2^{\\mathrm{(cons)}}$ and $w_2^{\\mathrm{(lump)}}$.\n\n- Independently, derive the exact tip deflection $w_{\\mathrm{exact}}(L)$ by solving the Euler-Bernoulli beam differential equation $E I\\, w^{(4)}(x)=q$ with the boundary conditions $w(0)=0$, $w'(0)=0$, $w''(L)=0$, and $w'''(L)=0$.\n\nFinally, quantify the relative error in the tip deflection incurred by the lumped loading with one element, defined as\n$$\\varepsilon=\\frac{w_2^{\\mathrm{(lump)}}-w_{\\mathrm{exact}}(L)}{w_{\\mathrm{exact}}(L)},$$\nand report the value of $\\varepsilon$ as a single simplified fraction or decimal (dimensionless). Do not include units. No rounding is required.", "solution": "The solution proceeds in several steps: derivation of element matrices, solution of the finite element systems, derivation of the exact analytical solution, and finally, computation of the required relative error.\n\nFirst, we define the cubic Hermite shape functions $N_i(x)$ for an element of length $L$. The transverse displacement is interpolated as $w(x) = N_1(x)w_1 + N_2(x)\\theta_1 + N_3(x)w_2 + N_4(x)\\theta_2$, where $\\theta \\equiv w'$. Using a non-dimensional coordinate $\\xi = x/L$ where $\\xi \\in [0, 1]$, the shape functions are:\n$N_1(\\xi) = 1 - 3\\xi^2 + 2\\xi^3$\n$N_2(\\xi) = L(\\xi - 2\\xi^2 + \\xi^3)$\n$N_3(\\xi) = 3\\xi^2 - 2\\xi^3$\n$N_4(\\xi) = L(-\\xi^2 + \\xi^3)$\n\nTo compute the element stiffness matrix $K$, where $k_{ij}=\\int_{0}^{L} E I\\, N_i''(x)\\, N_j''(x)\\, dx$, we can use the standard result:\n$$K = \\frac{EI}{L^3} \\begin{pmatrix} 12  6L  -12  6L \\\\ 6L  4L^2  -6L  2L^2 \\\\ -12  -6L  12  -6L \\\\ 6L  2L^2  -6L  4L^2 \\end{pmatrix}$$\n\nNext, we derive the consistent nodal load vector $f^{\\mathrm{(cons)}}$ with entries $f_i^{\\mathrm{(cons)}} = \\int_0^L q N_i(x) dx$.\n$f_1^{\\mathrm{(cons)}} = qL \\int_0^1 (1 - 3\\xi^2 + 2\\xi^3) d\\xi = \\frac{qL}{2}$\n$f_2^{\\mathrm{(cons)}} = qL \\int_0^1 L(\\xi - 2\\xi^2 + \\xi^3) d\\xi = \\frac{qL^2}{12}$\n$f_3^{\\mathrm{(cons)}} = qL \\int_0^1 (3\\xi^2 - 2\\xi^3) d\\xi = \\frac{qL}{2}$\n$f_4^{\\mathrm{(cons)}} = qL \\int_0^1 L(-\\xi^2 + \\xi^3) d\\xi = -\\frac{qL^2}{12}$\nThus, the consistent load vector is:\n$$f^{\\mathrm{(cons)}} = \\begin{pmatrix} qL/2 \\\\ qL^2/12 \\\\ qL/2 \\\\ -qL^2/12 \\end{pmatrix}$$\nThe lumped load vector is given by the problem statement as:\n$$f^{\\mathrm{(lump)}} = \\begin{pmatrix} qL/2 \\\\ 0 \\\\ qL/2 \\\\ 0 \\end{pmatrix}$$\n\nThe finite element system of equations is $K \\mathbf{d} = \\mathbf{f}$, where $\\mathbf{d} = [w_1, \\theta_1, w_2, \\theta_2]^\\mathsf{T}$. We impose the clamped boundary conditions at $x=0$, which are $w_1=0$ and $\\theta_1=0$. This reduces the $4 \\times 4$ system to a $2 \\times 2$ system for the unknown DOFs $\\{w_2, \\theta_2\\}$. The reduced system is obtained by extracting the submatrix and subvectors corresponding to the free DOFs:\n$$\n\\frac{EI}{L^3} \\begin{pmatrix} 12  -6L \\\\ -6L  4L^2 \\end{pmatrix} \\begin{pmatrix} w_2 \\\\ \\theta_2 \\end{pmatrix} = \\begin{pmatrix} f_3 \\\\ f_4 \\end{pmatrix}\n$$\nFor the consistent load case:\n$$\n\\frac{EI}{L^3} \\begin{pmatrix} 12  -6L \\\\ -6L  4L^2 \\end{pmatrix} \\begin{pmatrix} w_2^{\\mathrm{(cons)}} \\\\ \\theta_2^{\\mathrm{(cons)}} \\end{pmatrix} = \\begin{pmatrix} qL/2 \\\\ -qL^2/12 \\end{pmatrix}\n$$\nSolving this system yields the tip deflection $w_2^{\\mathrm{(cons)}} = \\frac{qL^4}{8EI}$. This result matches the exact analytical solution, so the consistent load vector provides an exact result for the nodal displacement in this case.\n\nFor the lumped load case:\n$$\n\\frac{EI}{L^3} \\begin{pmatrix} 12  -6L \\\\ -6L  4L^2 \\end{pmatrix} \\begin{pmatrix} w_2^{\\mathrm{(lump)}} \\\\ \\theta_2^{\\mathrm{(lump)}} \\end{pmatrix} = \\begin{pmatrix} qL/2 \\\\ 0 \\end{pmatrix}\n$$\nThe second equation gives $-6L w_2^{\\mathrm{(lump)}} + 4L^2 \\theta_2^{\\mathrm{(lump)}} = 0$, so $\\theta_2^{\\mathrm{(lump)}} = \\frac{3}{2L} w_2^{\\mathrm{(lump)}}$. Substituting into the first equation:\n$12 w_2^{\\mathrm{(lump)}} - 6L \\left( \\frac{3}{2L} w_2^{\\mathrm{(lump)}} \\right) = \\frac{qL^4}{2EI}$\n$12 w_2^{\\mathrm{(lump)}} - 9 w_2^{\\mathrm{(lump)}} = \\frac{qL^4}{2EI}$\n$3 w_2^{\\mathrm{(lump)}} = \\frac{qL^4}{2EI}$\n$w_2^{\\mathrm{(lump)}} = \\frac{qL^4}{6EI}$\n\nNext, we find the exact tip deflection by solving the governing differential equation $EI w^{(4)}(x) = q$. Integrating four times:\n$EI w'''(x) = qx + C_1$\n$EI w''(x) = \\frac{q}{2}x^2 + C_1 x + C_2$\n$EI w'(x) = \\frac{q}{6}x^3 + \\frac{C_1}{2}x^2 + C_2 x + C_3$\n$EI w(x) = \\frac{q}{24}x^4 + \\frac{C_1}{6}x^3 + \\frac{C_2}{2}x^2 + C_3 x + C_4$\nApplying the boundary conditions:\n- $w(0)=0 \\implies C_4=0$\n- $w'(0)=0 \\implies C_3=0$\n- $w'''(L)=0$ (zero shear force at free end): $qL + C_1 = 0 \\implies C_1 = -qL$\n- $w''(L)=0$ (zero bending moment at free end): $\\frac{qL^2}{2} + C_1 L + C_2 = 0 \\implies \\frac{qL^2}{2} - qL^2 + C_2 = 0 \\implies C_2 = \\frac{qL^2}{2}$\nThe exact deflection is:\n$w_{\\mathrm{exact}}(x) = \\frac{1}{EI} (\\frac{q}{24}x^4 - \\frac{qL}{6}x^3 + \\frac{qL^2}{4}x^2)$\nEvaluating at the tip $x=L$:\n$w_{\\mathrm{exact}}(L) = \\frac{qL^4}{EI} (\\frac{1}{24} - \\frac{1}{6} + \\frac{1}{4}) = \\frac{qL^4}{EI} (\\frac{1-4+6}{24}) = \\frac{3qL^4}{24EI} = \\frac{qL^4}{8EI}$\n\nFinally, we compute the relative error $\\varepsilon$ of the lumped load solution.\n$$\\varepsilon = \\frac{w_2^{\\mathrm{(lump)}}-w_{\\mathrm{exact}}(L)}{w_{\\mathrm{exact}}(L)} = \\frac{\\frac{qL^4}{6EI} - \\frac{qL^4}{8EI}}{\\frac{qL^4}{8EI}}$$\nThe term $\\frac{qL^4}{EI}$ cancels from the numerator and denominator:\n$$\\varepsilon = \\frac{\\frac{1}{6} - \\frac{1}{8}}{\\frac{1}{8}} = \\frac{\\frac{4-3}{24}}{\\frac{1}{8}} = \\frac{\\frac{1}{24}}{\\frac{1}{8}} = \\frac{1}{24} \\cdot 8 = \\frac{8}{24} = \\frac{1}{3}$$\nThe relative error is positive, indicating that the lumped load model overestimates the tip deflection compared to the exact solution.", "answer": "$$\\boxed{\\frac{1}{3}}$$", "id": "2599801"}, {"introduction": "In practice, the integrals required to form the stiffness matrix are often evaluated numerically. This final exercise delves into the crucial topic of numerical quadrature and its effect on the stability and accuracy of the finite element model. By intentionally 'under-integrating' the stiffness matrix, you will discover how a seemingly minor computational shortcut can introduce non-physical, 'spurious' zero-energy modes, rendering the model unstable. This hands-on coding problem provides a vital lesson on the importance of choosing appropriate numerical methods to ensure the physical integrity of your simulation [@problem_id:2599733].", "problem": "You will analyze numerical integration effects on the element stiffness in the Euler-Bernoulli beam within the Finite Element Method (FEM). Start from the principle of virtual work and kinematics of the Euler-Bernoulli hypothesis to construct the bending stiffness matrix for a two-node, cubic Hermite beam element. Use the following fundamental base only: (i) the Euler-Bernoulli kinematics that the cross-section remains plane and normal to the neutral axis so that the curvature is given by $\\kappa(x)=d^{2}w/dx^{2}$, (ii) the elastic bending energy $U=\\tfrac{1}{2}\\int_{0}^{L} E I \\,\\kappa(x)^{2}\\,dx$, and (iii) the standard Galerkin finite element discretization with $C^{1}$-continuous cubic Hermite interpolation for the transverse displacement $w(x)$ and rotation $\\theta(x)=dw/dx$. Do not use or assume any pre-assembled closed-form stiffness matrix; instead, construct the integrand from the second derivatives of the Hermite shape functions and perform numerical quadrature to assemble the element stiffness. Discuss and demonstrate how under-integration modifies the numerical rank of the stiffness and can introduce spurious zero-energy modes.\n\nPrecisely, the two-node element has nodal degrees of freedom $\\{w_{1},\\theta_{1},w_{2},\\theta_{2}\\}$ and uses cubic Hermite interpolation on the parent coordinate $\\xi\\in[-1,1]$ mapped to the physical coordinate $x\\in[0,L]$. The element bending stiffness is\n$$\n\\mathbf{K}_{e}=\\int_{0}^{L} (E I)\\,\\mathbf{B}(x)^{\\mathsf{T}}\\mathbf{B}(x)\\,dx,\n$$\nwhere $\\mathbf{B}(x)$ collects the second derivatives of the Hermite shape functions with respect to $x$ so that $\\kappa(x)=\\mathbf{B}(x)\\,\\mathbf{q}_{e}$ with $\\mathbf{q}_{e}=[w_{1},\\theta_{1},w_{2},\\theta_{2}]^{\\mathsf{T}}$. Evaluate this integral numerically by Gauss–Legendre quadrature with $n_{g}$ points on $\\xi\\in[-1,1]$, using the mapping $x(\\xi)=\\tfrac{L}{2}(1+\\xi)$ and $dx=(L/2)\\,d\\xi$.\n\nYour program must:\n- Implement the element stiffness assembly via Gauss–Legendre quadrature with a user-specified number of points $n_{g}\\in\\{1,2,3\\}$.\n- For an unconstrained single element, compute the number of numerically zero eigenvalues of $\\mathbf{K}_{e}$, counted as the number of eigenvalues $\\lambda$ such that $|\\lambda|\\le \\varepsilon\\cdot \\max_{i}|\\lambda_{i}|$ with $\\varepsilon=10^{-10}$.\n- For a clamped-free cantilever modeled by a single element (node $1$ clamped so that $w_{1}=0$ and $\\theta_{1}=0$), assemble the reduced stiffness for node $2$ and solve the static response under a nodal load vector at node $2$. Consider two distinct loadings: (i) a transverse tip force $P$ so that the reduced load is $[P,\\,0]^{\\mathsf{T}}$ acting on $\\{w_{2},\\theta_{2}\\}$, and (ii) a pure tip moment $M$ so that the reduced load is $[0,\\,M]^{\\mathsf{T}}$.\n\nUse the following parameter set (all constant across tests, in International System of Units):\n- Length $L=2.0$ m,\n- Young’s modulus $E=210\\times 10^{9}$ Pa,\n- Second moment of area $I=1.0\\times 10^{-6}$ m$^{4}$,\n- Transverse tip force $P=1000$ N,\n- Tip moment $M=1.0$ N·m.\n\nTest suite. Implement and compute the following four test cases:\n1) Unconstrained element with exact integration using $n_{g}=2$. Output the integer equal to the count of numerically zero eigenvalues of $\\mathbf{K}_{e}$.\n2) Unconstrained element with under-integration using $n_{g}=1$. Output the integer equal to the count of numerically zero eigenvalues of $\\mathbf{K}_{e}$.\n3) Cantilever (node $1$ clamped) with $n_{g}=2$ and tip force $P$ at node $2$. Solve the reduced $2\\times 2$ system for $\\{w_{2},\\theta_{2}\\}$ and output the float equal to $w_{2}$ in meters. Express the result in meters as a plain decimal number.\n4) Cantilever (node $1$ clamped) with $n_{g}=1$ and tip force $P$ at node $2$. Determine whether the reduced $2\\times 2$ stiffness for $\\{w_{2},\\theta_{2}\\}$ is singular (rank-deficient). Output a boolean equal to $\\mathtt{True}$ if singular and $\\mathtt{False}$ otherwise.\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, specifically in the order of the above tests: $[\\text{test1},\\text{test2},\\text{test3},\\text{test4}]$.", "solution": "The central task is to construct the stiffness matrix $\\mathbf{K}_{e}$ for a two-node Euler-Bernoulli beam element and to investigate the effects of numerical integration on its properties. The principle of virtual work dictates that the element stiffness matrix for bending is derived from the strain energy. The bending strain energy $U$ for a beam of length $L$ with bending rigidity $EI$ is given by\n$$\nU = \\frac{1}{2} \\int_{0}^{L} EI \\, \\kappa(x)^2 \\, dx\n$$\nwhere $\\kappa(x)$ is the curvature. Under the Euler-Bernoulli hypothesis, the curvature is the second derivative of the transverse displacement $w(x)$, i.e., $\\kappa(x) = \\frac{d^2w}{dx^2}$.\n\nWe discretize the displacement field $w(x)$ using $C^1$-continuous cubic Hermite shape functions. For a two-node element located at $x=0$ and $x=L$, the nodal degrees of freedom (DOFs) are the transverse displacements and rotations at each node, collected in the vector $\\mathbf{q}_{e} = [w_1, \\theta_1, w_2, \\theta_2]^\\mathsf{T}$. The displacement is interpolated as\n$$\nw(x) = \\mathbf{N}(x) \\mathbf{q}_{e} = \\sum_{i=1}^{4} N_i(x) q_i\n$$\nwhere $\\mathbf{N}(x)$ is the row vector of shape functions. The curvature is then\n$$\n\\kappa(x) = \\frac{d^2w}{dx^2} = \\frac{d^2\\mathbf{N}(x)}{dx^2} \\mathbf{q}_{e} = \\mathbf{B}(x) \\mathbf{q}_{e}\n$$\nThe matrix $\\mathbf{B}(x)$, a $1 \\times 4$ row vector, contains the second derivatives of the shape functions. Substituting this into the energy expression yields the quadratic form $U = \\frac{1}{2} \\mathbf{q}_{e}^\\mathsf{T} \\mathbf{K}_{e} \\mathbf{q}_{e}$, from which the element stiffness matrix is identified as\n$$\n\\mathbf{K}_{e} = \\int_{0}^{L} EI \\, \\mathbf{B}(x)^\\mathsf{T} \\mathbf{B}(x) \\, dx\n$$\nTo perform the integration, we map the physical domain $x \\in [0, L]$ to a parent domain $\\xi \\in [-1, 1]$ using the linear mapping $x(\\xi) = \\frac{L}{2}(1+\\xi)$. The differential relations are $dx = \\frac{L}{2} d\\xi$ and $\\frac{d}{dx} = \\frac{2}{L}\\frac{d}{d\\xi}$, which implies $\\frac{d^2}{dx^2} = \\left(\\frac{2}{L}\\right)^2 \\frac{d^2}{d\\xi^2}$.\n\nThe standard cubic Hermite basis functions in the parent domain $\\xi$ are:\n$h_1(\\xi) = \\frac{1}{4}(2 - 3\\xi + \\xi^3)$\n$h_2(\\xi) = \\frac{1}{4}(1 - \\xi - \\xi^2 + \\xi^3)$\n$h_3(\\xi) = \\frac{1}{4}(2 + 3\\xi - \\xi^3)$\n$h_4(\\xi) = \\frac{1}{4}(-1 - \\xi + \\xi^2 + \\xi^3)$\n\nThe displacement field $w(\\xi)$ is constructed to interpolate the nodal values $w_1, \\theta_1$ at $\\xi=-1$ and $w_2, \\theta_2$ at $\\xi=1$. Note that $\\theta = \\frac{dw}{dx} = \\frac{2}{L}\\frac{dw}{d\\xi}$. The interpolation is thus $w(\\xi) = h_1(\\xi)w_1 + h_2(\\xi)(\\frac{L}{2}\\theta_1) + h_3(\\xi)w_2 + h_4(\\xi)(\\frac{L}{2}\\theta_2)$. This defines the shape functions $N_i(\\xi)$ as:\n$N_1(\\xi) = h_1(\\xi)$\n$N_2(\\xi) = \\frac{L}{2}h_2(\\xi)$\n$N_3(\\xi) = h_3(\\xi)$\n$N_4(\\xi) = \\frac{L}{2}h_4(\\xi)$\n\nThe components of the $\\mathbf{B}$-matrix are $B_i(\\xi) = \\frac{d^2 N_i}{dx^2} = (\\frac{4}{L^2}) \\frac{d^2 N_i}{d\\xi^2}$. We compute the second derivatives:\n$\\frac{d^2 N_1}{d\\xi^2} = \\frac{3}{2}\\xi$\n$\\frac{d^2 N_2}{d\\xi^2} = \\frac{L}{2} \\frac{d^2 h_2}{d\\xi^2} = \\frac{L}{2} \\frac{1}{4}(-2+6\\xi) = \\frac{L}{4}(3\\xi-1)$\n$\\frac{d^2 N_3}{d\\xi^2} = -\\frac{3}{2}\\xi$\n$\\frac{d^2 N_4}{d\\xi^2} = \\frac{L}{2} \\frac{d^2 h_4}{d\\xi^2} = \\frac{L}{2} \\frac{1}{4}(2+6\\xi) = \\frac{L}{4}(3\\xi+1)$\n\nThis yields the $\\mathbf{B}$-matrix in the parent coordinate system:\n$$\n\\mathbf{B}(\\xi) = \\left[ \\frac{6\\xi}{L^2}, \\quad \\frac{3\\xi-1}{L}, \\quad -\\frac{6\\xi}{L^2}, \\quad \\frac{3\\xi+1}{L} \\right]\n$$\nThe stiffness matrix integral is transformed to the parent domain:\n$$\n\\mathbf{K}_{e} = \\int_{-1}^{1} EI \\, \\mathbf{B}(\\xi)^\\mathsf{T} \\mathbf{B}(\\xi) \\, \\frac{L}{2} \\, d\\xi\n$$\nThe integrand $\\mathbf{B}(\\xi)^\\mathsf{T} \\mathbf{B}(\\xi)$ contains terms with polynomials in $\\xi$ up to degree $2$. Gauss-Legendre quadrature with $n_g$ points is exact for polynomials of degree up to $2n_g-1$. To integrate a quadratic polynomial exactly, we require $2n_g-1 \\ge 2$, which implies $n_g \\ge 1.5$. Thus, $n_g=2$ points are necessary and sufficient for exact integration. Using $n_g=1$ constitutes under-integration.\n\nFor $n_g=2$ points (exact integration), the resulting stiffness matrix must have two zero eigenvalues corresponding to the two rigid-body modes of the unconstrained beam: a pure translation ($w(x)=\\text{const}$) and a pure rotation ($w(x)=ax+b$). These modes induce no curvature and hence no strain energy. The rank of the exact $\\mathbf{K}_e$ must be $4-2=2$. This is the subject of Test 1.\n\nFor $n_g=1$ (under-integration), we use a single Gauss point at $\\xi_1=0$ with weight $w_1=2$. At this point, the $\\mathbf{B}$-matrix evaluates to:\n$$\n\\mathbf{B}(\\xi=0) = \\left[ 0, \\quad -1/L, \\quad 0, \\quad 1/L \\right]\n$$\nThe stiffness matrix is approximated as $\\mathbf{K}_{e} \\approx EI \\frac{L}{2} w_1 \\mathbf{B}(0)^\\mathsf{T}\\mathbf{B}(0) = EIL \\cdot \\mathbf{B}(0)^\\mathsf{T}\\mathbf{B}(0)$. Since $\\mathbf{B}(0)$ is a non-zero row vector, the resulting matrix $\\mathbf{B}(0)^\\mathsf{T}\\mathbf{B}(0)$ has a rank of $1$. The full $4 \\times 4$ stiffness matrix $\\mathbf{K}_e$ will therefore also have rank $1$. By the rank-nullity theorem, its nullity is $4-1=3$. This means the under-integrated stiffness matrix will have three zero eigenvalues. The additional zero-energy mode, beyond the two physical rigid-body modes, is a spurious (non-physical) mode that causes numerical instability. This mode corresponds to any deformation that has zero curvature at the integration point $\\xi=0$, but non-zero curvature elsewhere. This is the subject of Test 2.\n\nFor the cantilever beam analysis (Tests 3 and 4), the element is clamped at node $1$, imposing the boundary conditions $w_1=0$ and $\\theta_1=0$. The governing system $\\mathbf{K}_e \\mathbf{q}_e = \\mathbf{F}_e$ is reduced to the unknown DOFs $\\{w_2, \\theta_2\\}$. We partition the matrices and vectors:\n$$\n\\begin{bmatrix} \\mathbf{K}_{11}  \\mathbf{K}_{12} \\\\ \\mathbf{K}_{21}  \\mathbf{K}_{22} \\end{bmatrix} \\begin{Bmatrix} \\mathbf{q}_1 \\\\ \\mathbf{q}_2 \\end{Bmatrix} = \\begin{Bmatrix} \\mathbf{F}_1 \\\\ \\mathbf{F}_2 \\end{Bmatrix}\n$$\nwhere $\\mathbf{q}_1 = [w_1, \\theta_1]^\\mathsf{T}$ and $\\mathbf{q}_2 = [w_2, \\theta_2]^\\mathsf{T}$. With $\\mathbf{q}_1 = \\mathbf{0}$, the system reduces to $\\mathbf{K}_{22} \\mathbf{q}_2 = \\mathbf{F}_2$. The reduced $2 \\times 2$ stiffness matrix is $\\mathbf{K}_{red} = \\mathbf{K}_{22}$, which is the lower-right $2 \\times 2$ sub-block of $\\mathbf{K}_e$.\n\nIn Test 3, with exact integration ($n_g=2$), $\\mathbf{K}_{red}$ is non-singular, and we solve for the tip displacement $w_2$ under a tip force $P=1000$ N. The load vector is $\\mathbf{F}_2 = [P, 0]^\\mathsf{T}$. The solution should match the analytical result $w_2 = \\frac{PL^3}{3EI}$.\n\nIn Test 4, with under-integration ($n_g=1$), we must examine the singularity of the reduced stiffness matrix $\\mathbf{K}_{red}$. The full under-integrated matrix is approximately $\\mathbf{K}_e \\approx \\frac{EI}{L} \\begin{bmatrix} 0  0  0  0 \\\\ 0  1  0  -1 \\\\ 0  0  0  0 \\\\ 0  -1  0  1 \\end{bmatrix}$. The reduced matrix is the sub-block corresponding to DOFs $\\{w_2, \\theta_2\\}$ (indices 3 and 4):\n$$\n\\mathbf{K}_{red} = \\begin{bmatrix} K_{33}  K_{34} \\\\ K_{43}  K_{44} \\end{bmatrix} \\approx \\frac{EI}{L} \\begin{bmatrix} 0  0 \\\\ 0  1 \\end{bmatrix}\n$$\nThis matrix is clearly singular as its determinant is $0$. It has a rank of $1$, which is less than its dimension of $2$. This singularity indicates that the clamped, under-integrated element cannot resist a transverse tip force, as it corresponds to a zero-energy deformation mode that has not been suppressed by the boundary conditions.\nThe program below implements these computations to provide the specific numerical answers required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Analyzes an Euler-Bernoulli beam element using the Finite Element Method,\n    focusing on the effects of numerical integration on the stiffness matrix.\n    \"\"\"\n\n    # --- Problem Parameters (SI units) ---\n    L = 2.0  # Length (m)\n    E = 210.0e9  # Young's modulus (Pa)\n    I = 1.0e-6  # Second moment of area (m^4)\n    P = 1000.0  # Transverse tip force (N)\n    M = 1.0  # Tip moment (N*m)\n\n    # --- Helper Functions ---\n\n    def get_gauss_quadrature(ng):\n        \"\"\"Returns Gauss-Legendre quadrature points and weights for xi in [-1, 1].\"\"\"\n        if ng == 1:\n            return [(0.0, 2.0)]\n        elif ng == 2:\n            p = 1.0 / np.sqrt(3.0)\n            return [(-p, 1.0), (p, 1.0)]\n        elif ng == 3:\n            p = np.sqrt(3.0 / 5.0)\n            return [(-p, 5.0 / 9.0), (0.0, 8.0 / 9.0), (p, 5.0 / 9.0)]\n        else:\n            raise ValueError(\"Number of Gauss points (ng) must be 1, 2, or 3.\")\n\n    def get_B_matrix_at_xi(xi, L_val):\n        \"\"\"\n        Computes the B-matrix (1x4) at a given point xi in the parent domain.\n        B(xi) = [d^2N1/dx^2, d^2N2/dx^2, d^2N3/dx^2, d^2N4/dx^2]\n        \"\"\"\n        L2 = L_val * L_val\n        B_vec = np.array([\n            6.0 * xi / L2,\n            (3.0 * xi - 1.0) / L_val,\n            -6.0 * xi / L2,\n            (3.0 * xi + 1.0) / L_val\n        ])\n        return B_vec.reshape(1, 4)\n\n    def assemble_stiffness_matrix(ng, L_val, E_val, I_val):\n        \"\"\"\n        Assembles the 4x4 element stiffness matrix using Gauss quadrature.\n        \"\"\"\n        Ke = np.zeros((4, 4))\n        gauss_points = get_gauss_quadrature(ng)\n        jacobian_det = L_val / 2.0\n        \n        for xi, weight in gauss_points:\n            B = get_B_matrix_at_xi(xi, L_val)\n            Ke += weight * (B.T @ B)\n        \n        Ke *= E_val * I_val * jacobian_det\n        return Ke\n\n    # --- Test Case Execution ---\n    results = []\n\n    # Test 1: Unconstrained element, ng=2 (exact integration)\n    ng_1 = 2\n    Ke_1 = assemble_stiffness_matrix(ng_1, L, E, I)\n    eigenvalues_1 = np.linalg.eigvalsh(Ke_1)\n    # Numerical tolerance for zero eigenvalue check\n    tol_1 = 1e-10 * np.max(np.abs(eigenvalues_1))\n    zero_eigenvalues_1 = np.sum(np.abs(eigenvalues_1) = tol_1)\n    results.append(zero_eigenvalues_1)\n\n    # Test 2: Unconstrained element, ng=1 (under-integration)\n    ng_2 = 1\n    Ke_2 = assemble_stiffness_matrix(ng_2, L, E, I)\n    eigenvalues_2 = np.linalg.eigvalsh(Ke_2)\n    # Check for non-zero max eigenvalue to avoid tol=0\n    max_eig_2 = np.max(np.abs(eigenvalues_2))\n    tol_2 = 1e-10 * max_eig_2 if max_eig_2 > 0 else 1e-10\n    zero_eigenvalues_2 = np.sum(np.abs(eigenvalues_2) = tol_2)\n    results.append(zero_eigenvalues_2)\n\n    # Test 3: Cantilever, ng=2, tip force P\n    ng_3 = 2\n    Ke_3 = assemble_stiffness_matrix(ng_3, L, E, I)\n    # Reduced system for DOFs {w2, theta2} (indices 2, 3)\n    K_red_3 = Ke_3[2:4, 2:4]\n    F_red_3 = np.array([P, 0.0])\n    u_red_3 = np.linalg.solve(K_red_3, F_red_3)\n    w2 = u_red_3[0]\n    results.append(w2)\n\n    # Test 4: Cantilever, ng=1, check for singularity\n    ng_4 = 1\n    Ke_4 = assemble_stiffness_matrix(ng_4, L, E, I)\n    K_red_4 = Ke_4[2:4, 2:4]\n    # A matrix is singular if its rank is less than its dimension\n    rank_4 = np.linalg.matrix_rank(K_red_4)\n    is_singular = (rank_4  2)\n    results.append(is_singular)\n\n    # --- Final Output ---\n    # Convert all results to string format for printing\n    # Ensure boolean is 'True'/'False' as per standard string conversion\n    formatted_results = [\n        str(results[0]),\n        str(results[1]),\n        f\"{results[2]:.10f}\".rstrip('0').rstrip('.'), # Format float nicely\n        str(results[3])\n    ]\n    # Required output: [2,3,0.0126984127,True]\n    # The code produces this, so this formatting is correct.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2599733"}]}