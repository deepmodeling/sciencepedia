{"hands_on_practices": [{"introduction": "The elimination method is the most direct approach for enforcing essential boundary conditions in the finite element method. This practice provides a foundational exercise where you will apply this technique to a one-dimensional Poisson problem. By deriving the reduced system of equations and solving it analytically, you will gain a concrete understanding of how known boundary values are incorporated and gain proficiency in manipulating the resulting algebraic system [@problem_id:2555754]. This problem is particularly insightful as the resulting finite difference scheme possesses a closed-form solution, allowing a direct comparison with the exact solution of the continuous problem.", "problem": "Consider the boundary value problem on the interval $[0,1]$ given by $-u''(x)=1$ with essential (Dirichlet) boundary conditions $u(0)=0$ and $u(1)=1$. Use the Finite Element Method (FEM) with piecewise linear ($\\mathbb{P}_1$) basis functions on a uniform mesh of $N$ elements of size $h=1/N$, with nodes $x_i=i h$ for $i=0,1,\\dots,N$.\n\na) Starting from the weak form and using the standard element matrices and consistent load vector for $\\mathbb{P}_1$ elements, assemble the global linear system before the enforcement of essential boundary conditions. Then, enforce the essential boundary conditions by the elimination method to derive the reduced tridiagonal linear system for the interior nodal unknowns $u_1,\\dots,u_{N-1}$. Write this reduced system explicitly in terms of $h$.\n\nb) Solve the reduced tridiagonal system analytically to obtain a closed-form expression for each interior nodal value $u_i$ as a function of $i$ and $N$.\n\nc) To connect with the penalty method, describe how the essential boundary conditions would be enforced by adding large penalty terms at the boundary nodes, and explain (no computation required) why the solution of the penalized system converges to the same interior nodal values obtained by elimination as the penalty parameter tends to $+\\infty$.\n\nProvide your final answer as a single closed-form analytic expression for $u_i$ in terms of $i$ and $N$ for any interior node index $i\\in\\{1,2,\\dots,N-1\\}$. No rounding is required and no units are involved.", "solution": "The provided problem statement is a standard exercise in the Finite Element Method (FEM) for a one-dimensional boundary value problem. It is mathematically well-posed, scientifically sound, and contains all necessary information for a unique solution. Therefore, the problem is deemed valid.\n\nThe problem is to solve the boundary value problem (BVP):\n$$ -u''(x) = 1, \\quad x \\in [0, 1] $$\nwith Dirichlet boundary conditions $u(0)=0$ and $u(1)=1$. We employ a finite element discretization with piecewise linear ($\\mathbb{P}_1$) basis functions on a uniform mesh of $N$ elements of size $h = 1/N$.\n\nFirst, we derive the weak formulation. We multiply the differential equation by a test function $v(x)$ from the space of functions that vanish at the essential boundaries, i.e., $v \\in H_0^1(0,1)$, and integrate over the domain $[0,1]$:\n$$ -\\int_{0}^{1} u''(x) v(x) dx = \\int_{0}^{1} 1 \\cdot v(x) dx $$\nApplying integration by parts to the left-hand side yields:\n$$ \\int_{0}^{1} u'(x) v'(x) dx - [u'(x)v(x)]_{0}^{1} = \\int_{0}^{1} v(x) dx $$\nSince the test function $v(x)$ must satisfy the homogeneous form of the essential boundary conditions, we have $v(0)=0$ and $v(1)=0$. The boundary term $[u'(x)v(x)]_{0}^{1}$ thus vanishes. The weak formulation is to find $u \\in H^1(0,1)$ such that $u(0)=0$, $u(1)=1$, and for all $v \\in H_0^1(0,1)$:\n$$ \\int_{0}^{1} u'(x) v'(x) dx = \\int_{0}^{1} v(x) dx $$\nThe bilinear form is $a(u,v) = \\int_{0}^{1} u'(x) v'(x) dx$ and the linear functional is $L(v) = \\int_{0}^{1} v(x) dx$.\n\nWe discretize the problem by approximating the solution $u(x)$ as a linear combination of nodal basis functions $\\phi_j(x)$: $u_h(x) = \\sum_{j=0}^{N} u_j \\phi_j(x)$, where $u_j$ are the unknown nodal values $u_j \\approx u(x_j)$. The Galerkin method sets the test functions to be the basis functions, $v(x) = \\phi_i(x)$, for all free nodes $i=1, 2, \\dots, N-1$. Substituting into the weak form gives the system of linear equations:\n$$ \\sum_{j=0}^{N} u_j \\left( \\int_{0}^{1} \\phi_j'(x) \\phi_i'(x) dx \\right) = \\int_{0}^{1} \\phi_i(x) dx, \\quad \\text{for } i=1, \\dots, N-1 $$\nThis is the system $K U = F$, where $K_{ij} = a(\\phi_j, \\phi_i)$ is the stiffness matrix and $F_i = L(\\phi_i)$ is the load vector.\n\nFor a generic element $e = [x_k, x_{k+1}]$ of length $h$, the standard element stiffness matrix $K^e$ and consistent element load vector $F^e$ for a $\\mathbb{P}_1$ approximation of $-u''=1$ are:\n$$ K^e = \\frac{1}{h} \\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix}, \\quad F^e = \\int_{x_k}^{x_{k+1}} 1 \\cdot \\begin{pmatrix} \\phi_k(x) \\\\ \\phi_{k+1}(x) \\end{pmatrix} dx = \\frac{h}{2} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} $$\nAssembling these element-level contributions for all $N$ elements results in the global $(N+1) \\times (N+1)$ system $K U = F$, where $U = [u_0, u_1, \\dots, u_N]^T$:\n$$ \\frac{1}{h} \\begin{pmatrix} 1 & -1 & 0 & \\dots & 0 \\\\ -1 & 2 & -1 & \\dots & 0 \\\\ 0 & -1 & 2 & \\ddots & \\vdots \\\\ \\vdots & & \\ddots & \\ddots & -1 \\\\ 0 & \\dots & \\dots & -1 & 1 \\end{pmatrix} \\begin{pmatrix} u_0 \\\\ u_1 \\\\ u_2 \\\\ \\vdots \\\\ u_N \\end{pmatrix} = \\begin{pmatrix} h/2 \\\\ h \\\\ h \\\\ \\vdots \\\\ h/2 \\end{pmatrix} $$\nThis is the global system *before* enforcement of boundary conditions.\n\na) Enforcement of essential boundary conditions by elimination:\nWe are given $u(0)=0$ and $u(1)=1$, which correspond to the nodal values $u_0=0$ and $u_N=1$. The unknowns are the interior nodal values $u_1, u_2, \\dots, u_{N-1}$. We consider the equations for the interior nodes, $i=1, \\dots, N-1$.\nThe $i$-th equation of the global system is:\n$$ \\frac{1}{h}(-u_{i-1} + 2u_i - u_{i+1}) = h $$\nFor $i=1$:\n$$ \\frac{1}{h}(-u_0 + 2u_1 - u_2) = h $$\nSubstituting the known value $u_0=0$:\n$$ \\frac{1}{h}(2u_1 - u_2) = h $$\nFor $i=2, \\dots, N-2$, the equation remains unchanged:\n$$ \\frac{1}{h}(-u_{i-1} + 2u_i - u_{i+1}) = h $$\nFor $i=N-1$:\n$$ \\frac{1}{h}(-u_{N-2} + 2u_{N-1} - u_N) = h $$\nSubstituting the known value $u_N=1$ and rearranging:\n$$ \\frac{1}{h}(-u_{N-2} + 2u_{N-1}) = h + \\frac{1}{h} u_N = h + \\frac{1}{h} $$\nThe resulting reduced system for the vector of unknowns $\\hat{U} = [u_1, \\dots, u_{N-1}]^T$ is an $(N-1) \\times (N-1)$ tridiagonal system $\\hat{K}\\hat{U}=\\hat{F}$:\n$$ \\frac{1}{h} \\begin{pmatrix} 2 & -1 & 0 & \\dots & 0 \\\\ -1 & 2 & -1 & & \\vdots \\\\ 0 & -1 & 2 & \\ddots & 0 \\\\ \\vdots & & \\ddots & \\ddots & -1 \\\\ 0 & \\dots & 0 & -1 & 2 \\end{pmatrix} \\begin{pmatrix} u_1 \\\\ u_2 \\\\ u_3 \\\\ \\vdots \\\\ u_{N-1} \\end{pmatrix} = \\begin{pmatrix} h \\\\ h \\\\ h \\\\ \\vdots \\\\ h + \\frac{1}{h} \\end{pmatrix} $$\n\nb) Analytical solution of the reduced system:\nMultiplying by $h$, the system of equations can be written as a second-order linear finite difference equation for the nodal values $u_i$:\n$$ -u_{i-1} + 2u_i - u_{i+1} = h^2, \\quad \\text{for } i=1, \\dots, N-2 $$\nwith a special equation for $i=N-1$:\n$$ -u_{N-2} + 2u_{N-1} = h^2(1) + h(\\frac{1}{h}) = h^2+1 $$\nThe general solution to the recurrence $-u_{i-1} + 2u_i - u_{i+1} = h^2$ is the sum of a homogeneous solution ($u_i^h$) and a particular solution ($u_i^p$).\nThe homogeneous equation is $-u_{i-1}^h + 2u_i^h - u_{i+1}^h = 0$. The characteristic equation is $-1+2r-r^2=-(r-1)^2=0$, which has a repeated root $r=1$. The homogeneous solution is thus $u_i^h = A \\cdot 1^i + B \\cdot i \\cdot 1^i = A + Bi$.\nFor the particular solution, we try a polynomial in $i$. Given the form of the central difference operator, we assume $u_i^p = Ci^2$. Substituting this into the equation yields $-C(i-1)^2 + 2Ci^2 - C(i+1)^2 = h^2$, which simplifies to $-2C = h^2$, so $C = -h^2/2$.\nThe general solution is $u_i = A + Bi - \\frac{h^2}{2}i^2$.\nThe constants $A$ and $B$ are determined by the boundary conditions on the full sequence of nodes, $u_0=0$ and $u_N=1$.\nUsing $u_0=0$:\n$$ u_0 = A + B(0) - \\frac{h^2}{2}(0)^2 = A = 0 $$\nSo, $u_i = Bi - \\frac{h^2}{2}i^2$.\nUsing $u_N=1$:\n$$ u_N = BN - \\frac{h^2}{2}N^2 = 1 $$\nSince $h=1/N$, we have $N=1/h$. Substituting this gives:\n$$ B(1/h) - \\frac{h^2}{2}(1/h)^2 = 1 \\implies \\frac{B}{h} - \\frac{1}{2} = 1 \\implies B = \\frac{3}{2}h $$\nThus, the analytical solution for the nodal values is:\n$$ u_i = \\frac{3}{2}hi - \\frac{h^2}{2}i^2 $$\nWe must verify that this solution satisfies the special equation at $i=N-1$. The general recurrence $-u_{i-1}+2u_i-u_{i+1}=h^2$ is satisfied by construction. The $u_0=0$ condition is satisfied. The $u_N=1$ condition was used to find $B$ and is satisfied. Thus, all equations in the system are satisfied. The solution is correct.\nExpressing the solution in terms of $i$ and $N$ by substituting $h=1/N$:\n$$ u_i = \\frac{3}{2N}i - \\frac{1}{2N^2}i^2 = \\frac{3Ni - i^2}{2N^2} = \\frac{i(3N-i)}{2N^2} $$\nThis expression is the exact solution of the continuous BVP, $u(x) = -\\frac{1}{2}x^2 + \\frac{3}{2}x$, evaluated at the nodes $x_i = i/N$. This nodal exactness is a known property for the $\\mathbb{P}_1$ FEM solution of this specific problem.\n\nc) Enforcement by the penalty method:\nThe penalty method enforces essential boundary conditions by adding large terms to the diagonal of the stiffness matrix and corresponding terms to the load vector, without changing the size of the system. For a generic condition $u_k=g$, we modify the $k$-th equation of the global system $KU=F$ as follows:\n$$ K_{kk} \\to K_{kk} + \\alpha $$\n$$ F_k \\to F_k + \\alpha g $$\nwhere $\\alpha$ is a large penalty parameter. This forces the solution to satisfy $u_k \\approx g$.\nFor the present problem, with $u_0=0$ and $u_N=1$, we modify the first ($i=0$) and last ($i=N$) rows of the global system:\n$$ K_{00} \\to K_{00} + \\alpha = \\frac{1}{h} + \\alpha; \\quad F_0 \\to F_0 + \\alpha \\cdot 0 = \\frac{h}{2} $$\n$$ K_{NN} \\to K_{NN} + \\alpha = \\frac{1}{h} + \\alpha; \\quad F_N \\to F_N + \\alpha \\cdot 1 = \\frac{h}{2} + \\alpha $$\nThe resulting penalized system remains $(N+1) \\times (N+1)$. As $\\alpha \\to +\\infty$, the solution $U_\\alpha$ of the penalized system converges to the solution where the boundary conditions are met exactly. The first equation $(\\frac{1}{h}+\\alpha)u_0 - \\frac{1}{h}u_1 = \\frac{h}{2}$ implies $u_0 \\to 0$ as $\\alpha \\to \\infty$. Similarly, the last equation $-\\frac{1}{h}u_{N-1} + (\\frac{1}{h}+\\alpha)u_N = \\frac{h}{2} + \\alpha$ implies $u_N \\to 1$. In this limit, the boundary values of the penalty solution match those used in the elimination method. The equations for the interior nodes ($i=1, \\dots, N-1$) are identical in form to those in the original global system and are coupled to boundary values that converge to the correct prescribed values. Therefore, the interior nodal values $u_1, \\dots, u_{N-1}$ obtained from the penalty method must converge to the same values obtained from the elimination method.", "answer": "$$ \\boxed{\\frac{i(3N-i)}{2N^{2}}} $$", "id": "2555754"}, {"introduction": "As an alternative to elimination, the penalty method offers a powerful and flexible technique that avoids re-structuring the linear system. This exercise guides you through the application of the penalty method on a simple two-element mesh, making the algebraic manipulations transparent [@problem_id:2555746]. You will explicitly calculate the nodal solution as a function of the penalty parameter $\\alpha$ and explore the limiting behavior as $\\alpha \\to \\infty$, confirming that the method converges to the exact solution obtained via elimination. This provides a clear, hands-on demonstration of the theoretical underpinnings of the penalty approximation.", "problem": "Consider the one-dimensional model problem on the domain $\\Omega=[0,1]$: find a scalar field $u$ satisfying the strong form $-\\dfrac{d^{2}u}{dx^{2}}=0$ on $(0,1)$ with essential boundary conditions $u(0)=0$ and $u(1)=1$. Use a conforming finite element discretization with continuous, piecewise-linear trial and test spaces over a uniform mesh with nodes at $x_{1}=0$, $x_{2}=\\tfrac{1}{2}$, and $x_{3}=1$ (i.e., $2$ linear elements of equal length). Assume no body force and no natural boundary conditions, and take the diffusion coefficient to be $1$.\n\nRather than imposing the essential boundary conditions directly, enforce them via the penalty method at the boundary nodes $x=0$ and $x=1$ with a penalty parameter $\\alpha>0$, added at the algebraic level to the assembled system. Specifically, assemble the discrete bilinear form induced by the weak form and add the penalty contributions at the first and last global degrees of freedom to obtain a modified linear system depending on $\\alpha$. Solve the penalized system to obtain the global nodal solution vector $u(\\alpha)=[u_{1}(\\alpha),u_{2}(\\alpha),u_{3}(\\alpha)]$, then compute the limit of $u(\\alpha)$ as $\\alpha\\to\\infty$ and compare it to the solution obtained by the elimination method, which exactly enforces $u_{1}=0$ and $u_{3}=1$ and solves only for the interior node.\n\nAll quantities are nondimensional. Provide, as your final answer, the vector limit $\\lim_{\\alpha\\to\\infty}u(\\alpha)$ as a single row vector. Express the final answer in exact form (no rounding).", "solution": "The problem statement is subjected to validation before any attempt at a solution is made.\n\n**Step 1: Extract Givens**\n-   Differential Equation (Strong Form): $-\\dfrac{d^{2}u}{dx^{2}}=0$ on the interval $(0,1)$.\n-   Domain: $\\Omega=[0,1]$.\n-   Essential Boundary Conditions: $u(0)=0$ and $u(1)=1$.\n-   Finite Element Discretization: A conforming mesh with three nodes at $x_{1}=0$, $x_{2}=\\tfrac{1}{2}$, and $x_{3}=1$. This corresponds to two linear elements of equal length $h=\\tfrac{1}{2}$. The trial and test spaces are continuous and piecewise-linear.\n-   Model Parameters: Diffusion coefficient is $1$. Body force is zero. No natural boundary conditions are specified on the boundaries where essential conditions are applied.\n-   Task: Enforce the essential boundary conditions using the penalty method with a parameter $\\alpha > 0$. Solve the resulting algebraic system for the nodal solution vector $u(\\alpha)=[u_{1}(\\alpha), u_{2}(\\alpha), u_{3}(\\alpha)]$. Compute the limit $\\lim_{\\alpha\\to\\infty}u(\\alpha)$ and compare it to the solution obtained via the elimination method.\n\n**Step 2: Validate Using Extracted Givens**\n-   **Scientifically Grounded**: The problem is a standard one-dimensional Poisson equation, a fundamental model in physics and engineering. The Finite Element Method (FEM), penalty method, and elimination method are all standard, well-established numerical techniques. The problem is scientifically sound.\n-   **Well-Posed**: The boundary value problem is well-posed and has a unique analytical solution. The corresponding FEM problem is also well-posed.\n-   **Objective**: The problem is stated using precise, objective mathematical language.\n-   **Completeness**: All necessary information (governing equation, domain, boundary conditions, discretization details) is provided. The problem is self-contained.\n-   **Consistency**: There are no contradictions in the provided data or requirements.\n\n**Step 3: Verdict and Action**\nThe problem is deemed valid. A complete, reasoned solution will be provided.\n\n**Derivation of the Weak Form**\nThe strong form of the problem is given by $-\\dfrac{d^{2}u}{dx^{2}} = 0$ for $x \\in (0,1)$.\nTo derive the weak form, we multiply the equation by a test function $v(x)$ from an appropriate test space and integrate over the domain $\\Omega=[0,1]$:\n$$-\\int_{0}^{1} \\frac{d^{2}u}{dx^{2}} v(x) dx = 0$$\nApplying integration by parts to the left-hand side yields:\n$$\\int_{0}^{1} \\frac{du}{dx} \\frac{dv}{dx} dx - \\left[ \\frac{du}{dx} v(x) \\right]_{0}^{1} = 0$$\nThe boundary term $\\left[ \\frac{du}{dx} v(x) \\right]_{0}^{1}$ is zero because we will eventually enforce essential boundary conditions at $x=0$ and $x=1$.\nThe weak form is to find $u \\in V$ such that for all $v \\in V$:\n$$a(u,v) = \\int_{0}^{1} \\frac{du}{dx} \\frac{dv}{dx} dx = 0$$\nHere, since the body force is zero, the right-hand-side linear functional is zero.\n\n**Finite Element Discretization**\nWe discretize the domain into two linear elements of length $h=\\frac{1}{2}$. The unknown field $u(x)$ is approximated as $u_h(x) = \\sum_{j=1}^{3} u_j N_j(x)$, where $u_j$ are the nodal values $u(x_j)$ and $N_j(x)$ are the piecewise-linear (hat) basis functions. This leads to the algebraic system $\\mathbf{K}\\mathbf{u} = \\mathbf{F}$.\n\nThe stiffness matrix for a single linear element of length $h_e$ with a unit diffusion coefficient is:\n$$\\mathbf{k}^e = \\frac{1}{h_e} \\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix}$$\nFor our problem, $h_e = \\frac{1}{2}$, so the element stiffness matrices for element 1 (nodes 1, 2) and element 2 (nodes 2, 3) are identical:\n$$\\mathbf{k}^{(1)} = \\mathbf{k}^{(2)} = \\frac{1}{1/2} \\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix} = \\begin{pmatrix} 2 & -2 \\\\ -2 & 2 \\end{pmatrix}$$\nAssembling these into the $3 \\times 3$ global stiffness matrix $\\mathbf{K}$ yields:\n$$\\mathbf{K} = \\begin{pmatrix} 2 & -2 & 0 \\\\ -2 & 2+2 & -2 \\\\ 0 & -2 & 2 \\end{pmatrix} = \\begin{pmatrix} 2 & -2 & 0 \\\\ -2 & 4 & -2 \\\\ 0 & -2 & 2 \\end{pmatrix}$$\nSince there are no body forces or natural boundary conditions, the global force vector $\\mathbf{F}$ is the zero vector, $\\mathbf{F}=[0, 0, 0]^T$. The unconstrained system is $\\mathbf{K}\\mathbf{u}=\\mathbf{0}$.\n\n**Penalty Method**\nWe enforce the essential boundary conditions $u_1=0$ and $u_3=1$ using the penalty method. This involves modifying the diagonal entries of the stiffness matrix and the corresponding entries of the force vector.\nFor the condition $u_1 = 0$, we modify the first equation: $K_{11}$ becomes $K_{11}+\\alpha$ and $F_1$ becomes $F_1 + \\alpha \\cdot 0$.\nFor the condition $u_3 = 1$, we modify the third equation: $K_{33}$ becomes $K_{33}+\\alpha$ and $F_3$ becomes $F_3 + \\alpha \\cdot 1$.\n\nThe penalized system of equations, $\\mathbf{K}_\\alpha \\mathbf{u}(\\alpha) = \\mathbf{F}_\\alpha$, is:\n$$\\begin{pmatrix} 2+\\alpha & -2 & 0 \\\\ -2 & 4 & -2 \\\\ 0 & -2 & 2+\\alpha \\end{pmatrix} \\begin{pmatrix} u_1(\\alpha) \\\\ u_2(\\alpha) \\\\ u_3(\\alpha) \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\\\ \\alpha \\end{pmatrix}$$\nTo solve for the vector $\\mathbf{u}(\\alpha)$, we find the inverse of $\\mathbf{K}_\\alpha$. The determinant is:\n$$\\det(\\mathbf{K}_\\alpha) = (2+\\alpha)[4(2+\\alpha)-4] - (-2)[-2(2+\\alpha)] = (2+\\alpha)(4\\alpha+4) - 4(2+\\alpha) = (2+\\alpha)(4\\alpha) = 4\\alpha(\\alpha+2)$$\nThe solution is $\\mathbf{u}(\\alpha) = \\mathbf{K}_\\alpha^{-1} \\mathbf{F}_\\alpha = \\frac{1}{\\det(\\mathbf{K}_\\alpha)} \\text{adj}(\\mathbf{K}_\\alpha) \\mathbf{F}_\\alpha$. The adjugate matrix is:\n$$\\text{adj}(\\mathbf{K}_\\alpha) = \\begin{pmatrix} 4\\alpha+4 & 2\\alpha+4 & 4 \\\\ 2\\alpha+4 & (2+\\alpha)^2 & 2\\alpha+4 \\\\ 4 & 2\\alpha+4 & 4\\alpha+4 \\end{pmatrix}$$\nMultiplying by the force vector $\\mathbf{F}_\\alpha$:\n$$\\mathbf{u}(\\alpha) = \\frac{1}{4\\alpha(\\alpha+2)} \\begin{pmatrix} 4\\alpha+4 & 2\\alpha+4 & 4 \\\\ 2\\alpha+4 & \\alpha^2+4\\alpha+4 & 2\\alpha+4 \\\\ 4 & 2\\alpha+4 & 4\\alpha+4 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 0 \\\\ \\alpha \\end{pmatrix} = \\frac{1}{4\\alpha(\\alpha+2)} \\begin{pmatrix} 4\\alpha \\\\ \\alpha(2\\alpha+4) \\\\ \\alpha(4\\alpha+4) \\end{pmatrix}$$\nSimplifying the expression for each component:\n$$u_1(\\alpha) = \\frac{4\\alpha}{4\\alpha(\\alpha+2)} = \\frac{1}{\\alpha+2}$$\n$$u_2(\\alpha) = \\frac{\\alpha(2\\alpha+4)}{4\\alpha(\\alpha+2)} = \\frac{2\\alpha(\\alpha+2)}{4\\alpha(\\alpha+2)} = \\frac{1}{2}$$\n$$u_3(\\alpha) = \\frac{\\alpha(4\\alpha+4)}{4\\alpha(\\alpha+2)} = \\frac{4\\alpha(\\alpha+1)}{4\\alpha(\\alpha+2)} = \\frac{\\alpha+1}{\\alpha+2}$$\nThe solution vector as a function of $\\alpha$ is $\\mathbf{u}(\\alpha) = \\begin{pmatrix} \\frac{1}{\\alpha+2} & \\frac{1}{2} & \\frac{\\alpha+1}{\\alpha+2} \\end{pmatrix}^T$.\n\n**Limit as $\\alpha \\to \\infty$**\nWe now compute the limit of the solution as the penalty parameter $\\alpha$ approaches infinity:\n$$\\lim_{\\alpha\\to\\infty} u_1(\\alpha) = \\lim_{\\alpha\\to\\infty} \\frac{1}{\\alpha+2} = 0$$\n$$\\lim_{\\alpha\\to\\infty} u_2(\\alpha) = \\lim_{\\alpha\\to\\infty} \\frac{1}{2} = \\frac{1}{2}$$\n$$\\lim_{\\alpha\\to\\infty} u_3(\\alpha) = \\lim_{\\alpha\\to\\infty} \\frac{\\alpha+1}{\\alpha+2} = \\lim_{\\alpha\\to\\infty} \\frac{1+1/\\alpha}{1+2/\\alpha} = 1$$\nThe limiting solution vector is $\\lim_{\\alpha\\to\\infty} \\mathbf{u}(\\alpha) = \\begin{pmatrix} 0 & \\frac{1}{2} & 1 \\end{pmatrix}^T$.\n\n**Comparison with Elimination Method**\nThe elimination method enforces the boundary conditions exactly. We start with the unconstrained system $\\mathbf{K}\\mathbf{u}=\\mathbf{F}$:\n$$\\begin{pmatrix} 2 & -2 & 0 \\\\ -2 & 4 & -2 \\\\ 0 & -2 & 2 \\end{pmatrix} \\begin{pmatrix} u_1 \\\\ u_2 \\\\ u_3 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\end{pmatrix}$$\nThe boundary conditions are $u_1=0$ and $u_3=1$. The second equation of the system involves the only unknown, $u_2$:\n$$-2u_1 + 4u_2 - 2u_3 = 0$$\nSubstituting the known values of $u_1$ and $u_3$:\n$$-2(0) + 4u_2 - 2(1) = 0$$\n$$4u_2 - 2 = 0$$\n$$4u_2 = 2 \\implies u_2 = \\frac{1}{2}$$\nThe solution obtained via elimination is $\\mathbf{u} = \\begin{pmatrix} 0 & \\frac{1}{2} & 1 \\end{pmatrix}^T$. This result is identical to the limit of the penalty method solution. This is expected, as the penalty method is theoretically consistent and converges to the exact solution of the constrained system as $\\alpha \\to \\infty$. The analytical solution to the differential equation is $u(x)=x$, which gives $u(\\frac{1}{2}) = \\frac{1}{2}$, confirming the exactness of the nodal solution.\nThe final answer is the row vector representing the limit of the penalty solution.", "answer": "$$ \\boxed{\\begin{pmatrix} 0  \\frac{1}{2}  1 \\end{pmatrix}} $$", "id": "2555746"}, {"introduction": "Bridging the gap between theory and robust software implementation requires a solid verification strategy. This practice challenges you to think like a software developer and design unit tests that correctly validate the enforcement of boundary conditions for both the elimination and penalty methods [@problem_id:2555769]. You will analyze the distinct numerical behaviors of each approach: the 'exact' enforcement by elimination should hold to machine precision, while the penalty method's boundary mismatch is expected to decrease at a specific rate, proportional to $\\alpha^{-1}$. This exercise develops the critical skill of designing mathematically justified tests to ensure code correctness and reliability.", "problem": "Consider the scalar model problem of the Poisson equation on the interval $\\Omega = [0,1]$ with prescribed Dirichlet boundary data: find $u$ such that $-u'' = f$ in $\\Omega$ with $u = g$ on $\\partial \\Omega$. Let $u_h$ be the conforming piecewise-linear finite element approximation obtained by the Finite Element Method (FEM), and let $g_h$ denote the nodal interpolant of $g$ at the constrained nodes indexed by $\\mathcal{I}_c$. Two standard strategies are used to enforce the essential boundary condition $u = g$:\n\n(1) Elimination: Partition the degrees of freedom into free and constrained sets indexed by $\\mathcal{I}_f$ and $\\mathcal{I}_c$, respectively. Set $(u_h)_i = (g_h)_i$ for all $i \\in \\mathcal{I}_c$, and eliminate these unknowns from the linear system by modifying the right-hand side and, if desired, the stiffness matrix.\n\n(2) Penalty: Leave all degrees of freedom in the system, and enforce $u = g$ weakly by augmenting the bilinear form with a symmetric penalty term proportional to a positive parameter $\\alpha$, resulting in a linear system of the form\n$$\n(K + \\alpha B^\\top B) \\, u_h = f_h + \\alpha B^\\top g_h,\n$$\nwhere $K$ is the standard stiffness matrix assembled on the full space without elimination, $B$ is a Boolean selector mapping the global vector to the constrained components, and $f_h$ is the load vector. Assume $K$ is Symmetric Positive Definite (SPD) on the free subspace and $\\alpha  0$.\n\nA robust unit test suite should verify, at minimum, that boundary enforcement is correct to machine precision under elimination and that, under the penalty approach, the boundary mismatch decreases at the theoretically expected rate with respect to $\\alpha$. Let $\\epsilon_{\\text{mach}}$ denote machine precision, and define the boundary mismatch metric\n$$\ne_{\\infty}^{\\text{bc}}(\\alpha) \\coloneqq \\max_{i \\in \\mathcal{I}_c} \\left| (u_h)_i - (g_h)_i \\right|.\n$$\n\nWhich of the following test designs are mathematically justified and well-scaled for implementation-level unit tests that are stable under mesh refinement and independent of problem-specific units?\n\nA. Elimination: After solving with elimination, assert\n$$\ne_{\\infty}^{\\text{bc}} \\le c \\, \\epsilon_{\\text{mach}} \\, \\max \\!\\left( 1, \\|g_h\\|_{\\infty} \\right),\n$$\nwith a modest constant $c$ (for example $c = 10^3$) to allow for accumulated roundoff, where $\\|g_h\\|_{\\infty} \\coloneqq \\max_{i \\in \\mathcal{I}_c} |(g_h)_i|$. Penalty: For a fixed mesh, solve for three increasing penalty parameters $\\alpha \\in \\{10^2, 10^4, 10^6\\}$, compute $e_{\\infty}^{\\text{bc}}(\\alpha)$, and assert both monotonicity\n$$\ne_{\\infty}^{\\text{bc}}(10^6) \\le e_{\\infty}^{\\text{bc}}(10^4) \\le e_{\\infty}^{\\text{bc}}(10^2),\n$$\nand $\\mathcal{O}(\\alpha^{-1})$ scaling by requiring the scaled products to be approximately constant within a fixed factor $q$ (for example $q = 5$):\n$$\n\\frac{\\max_{\\alpha \\in \\{10^2,10^4,10^6\\}} \\alpha \\, e_{\\infty}^{\\text{bc}}(\\alpha)}{\\min_{\\alpha \\in \\{10^2,10^4,10^6\\}} \\alpha \\, e_{\\infty}^{\\text{bc}}(\\alpha)} \\le q.\n$$\n\nB. Penalty: Accept the solution as correct if $e_{\\infty}^{\\text{bc}}(\\alpha) \\le c$ with a fixed tolerance $c$ independent of $\\alpha$ and the mesh size, without comparing different $\\alpha$ values.\n\nC. Elimination: Because discretization error is present, allow a boundary mismatch tolerance $e_{\\infty}^{\\text{bc}} \\le C h$ proportional to the mesh size $h$ (with some constant $C$), instead of a machine-precision-scaled tolerance.\n\nD. Penalty: Because increasing $\\alpha$ penalizes deviations more strongly, require a tolerance that grows proportionally with $\\alpha$, i.e., $e_{\\infty}^{\\text{bc}}(\\alpha) \\le C \\alpha$, and do not check behavior across multiple $\\alpha$ values.\n\nSelect all options that are correct. Justify your choice from first principles, beginning with the algebraic structure of the discretized systems for elimination and for the penalty method, and derive the expected boundary mismatch scaling in each case to support or refute each proposed unit test. Assume standard floating-point arithmetic and that any norms and constants are computed in a dimensionally consistent way.", "solution": "The user has provided a problem statement concerning the design of unit tests for enforcing essential (Dirichlet) boundary conditions in the Finite Element Method (FEM). This requires a critical validation of the problem statement before proceeding to a solution.\n\n### Step 1: Extract Givens\n- **Problem:** Scalar Poisson equation, $-u'' = f$, on the domain $\\Omega = [0,1]$.\n- **Boundary Conditions:** Dirichlet type, $u = g$ on $\\partial \\Omega$.\n- **Approximation:** $u_h$ is a conforming piecewise-linear finite element approximation.\n- **Discrete Boundary Data:** $g_h$ is the nodal interpolant of $g$ at constrained nodes.\n- **Index Sets:** $\\mathcal{I}_f$ for free degrees of freedom (DOFs), $\\mathcal{I}_c$ for constrained DOFs.\n- **Method 1 (Elimination):** Set $(u_h)_i = (g_h)_i$ for all $i \\in \\mathcal{I}_c$ and solve for the remaining DOFs.\n- **Method 2 (Penalty):** Solve the augmented system $(K + \\alpha B^\\top B) \\, u_h = f_h + \\alpha B^\\top g_h$.\n- **Assumptions:** $K$ is the standard stiffness matrix. $K$ is Symmetric Positive Definite (SPD) on the free subspace. $\\alpha  0$ is the penalty parameter. $B$ is a Boolean selector for constrained components. $f_h$ is the load vector.\n- **Metric:** The boundary mismatch is defined as $e_{\\infty}^{\\text{bc}}(\\alpha) \\coloneqq \\max_{i \\in \\mathcal{I}_c} \\left| (u_h)_i - (g_h)_i \\right|$.\n- **Machine Precision:** $\\epsilon_{\\text{mach}}$.\n- **Question:** Evaluate which of the four proposed test designs (A, B, C, D) are mathematically justified and well-scaled for robust unit testing.\n\n### Step 2: Validate Using Extracted Givens\nThe problem statement is examined for validity.\n1.  **Scientific or Factual Unsoundness:** The problem describes a standard model problem (1D Poisson equation) and two canonical, widely-used methods for enforcing Dirichlet boundary conditions in FEM: elimination and penalty. The algebraic representation of the penalty method is correct. The concepts of machine precision, roundoff error, and convergence rate testing are fundamental to numerical analysis and scientific computing. The problem is scientifically sound.\n2.  **Non-Formalizable or Irrelevant:** The problem is highly formal and directly relevant to the topic of numerical implementation and verification of finite element methods.\n3.  **Incomplete or Contradictory Setup:** The problem is self-contained. It provides all necessary definitions and context to analyze the proposed test designs. There are no contradictions.\n4.  **Unrealistic or Infeasible:** The setup is a classic, realistic scenario in computational engineering and science.\n5.  **Ill-Posed or Poorly Structured:** The question is precise and admits a definite answer based on the mathematical properties of the described numerical methods.\n6.  **Pseudo-Profound, Trivial, Tautological:** The problem is not trivial. It requires a correct understanding of the algebraic structure of the resulting linear systems and the expected behavior of numerical error (both roundoff and method-inherent error) for both the elimination and penalty approaches.\n7.  **Outside Scientific Verifiability:** The claims can be rigorously verified through mathematical derivation.\n\n### Step 3: Verdict and Action\nThe problem statement is valid. A rigorous derivation of the solution and evaluation of the options may proceed.\n\n### Derivation and Option-by-Option Analysis\n\nThe core of the problem is to determine the expected behavior of the boundary mismatch metric, $e_{\\infty}^{\\text{bc}}$, for both the elimination and penalty methods.\n\n**Analysis of the Elimination Method**\n\nIn the elimination method, the solution vector $u_h$ is partitioned into free components $(u_h)_f$ and constrained components $(u_h)_c$, corresponding to indices in $\\mathcal{I}_f$ and $\\mathcal{I}_c$. The global linear system $K u_h = f_h$ is algebraically manipulated. The values of the constrained components are set by definition: $(u_h)_c = (g_h)_c$. In a computer implementation, this corresponds to a direct assignment.\n$$\n(u_h)_i \\leftarrow (g_h)_i \\quad \\forall i \\in \\mathcal{I}_c\n$$\nThe system is then solved for the free components $(u_h)_f$:\n$$\nK_{ff} (u_h)_f = (f_h)_f - K_{fc} (g_h)_c\n$$\nwhere $K$ has been partitioned into blocks corresponding to free and constrained DOFs. After solving for $(u_h)_f$, the full vector $u_h$ is assembled. By the very definition of the method, the equality $(u_h)_i = (g_h)_i$ holds for all $i \\in \\mathcal{I}_c$ in exact arithmetic. Therefore, $e_{\\infty}^{\\text{bc}} = 0$.\n\nIn finite-precision floating-point arithmetic, the computed value of $(u_h)_i$ after assignment should be identical to the stored value of $(g_h)_i$. The calculated difference $|(u_h)_i - (g_h)_i|$ should be exactly $0$. However, a robust unit test accounts for potential roundoff errors accumulated during the computation of $(g_h)_c$ or in other parts of the code that might (incorrectly) alter the boundary values. A standard practice for comparing floating-point numbers $a$ and $b$ for equality is to use a mixed relative-absolute tolerance, such as $|a-b| \\le \\text{tol}_{\\text{abs}} + \\text{tol}_{\\text{rel}} |b|$. The test proposed in option A, $e_{\\infty}^{\\text{bc}} \\le c \\, \\epsilon_{\\text{mach}} \\, \\max(1, \\|g_h\\|_{\\infty})$, is a form of this check, where the tolerance is scaled by machine precision and the magnitude of the data. This is a mathematically sound and practical approach for a unit test.\n\n**Analysis of the Penalty Method**\n\nThe penalty method enforces the boundary condition weakly through the augmented system:\n$$\n(K + \\alpha B^\\top B) u_h = f_h + \\alpha B^\\top g_h\n$$\nLet's partition the system into free and constrained blocks. The matrix $B^\\top B$ is a diagonal matrix with ones at entries corresponding to indices in $\\mathcal{I}_c$ and zeros elsewhere. Let's denote this matrix by $D_c$. The system is:\n$$\n\\begin{pmatrix} K_{ff}  K_{fc} \\\\ K_{cf}  K_{cc} + \\alpha I \\end{pmatrix}\n\\begin{pmatrix} (u_h)_f \\\\ (u_h)_c \\end{pmatrix}\n=\n\\begin{pmatrix} (f_h)_f \\\\ (f_h)_c + \\alpha (g_h)_c \\end{pmatrix}\n$$\nFrom the second block of equations, we have:\n$$\nK_{cf} (u_h)_f + (K_{cc} + \\alpha I) (u_h)_c = (f_h)_c + \\alpha (g_h)_c\n$$\nRearranging to isolate the boundary mismatch term, $(u_h)_c - (g_h)_c$:\n$$\n\\alpha \\left( (u_h)_c - (g_h)_c \\right) = (f_h)_c - K_{cf} (u_h)_f - K_{cc} (u_h)_c\n$$\n$$\n(u_h)_c - (g_h)_c = \\frac{1}{\\alpha} \\left( (f_h)_c - K_{cf} (u_h)_f - K_{cc} (u_h)_c \\right)\n$$\nFor large $\\alpha$, the solution $u_h$ of the penalty system converges to the solution $u_h^*$ obtained via the elimination method. Thus, $(u_h)_f \\to (u_h^*)_f$ and $(u_h)_c \\to (g_h)_c$. The term in the parenthesis on the right-hand side approaches a finite value dependent on the problem data and mesh, but not on $\\alpha$:\n$$\nR_c = (f_h)_c - K_{cf} (u_h^*)_f - K_{cc} (g_h)_c\n$$\nThis vector $R_c$ represents the residual forces at the boundary nodes required for equilibrium.\nTherefore, for large $\\alpha$, the boundary mismatch scales as:\n$$\n(u_h)_c - (g_h)_c \\approx \\frac{1}{\\alpha} R_c\n$$\nTaking the infinity norm, we find the theoretically expected rate of convergence for the boundary mismatch:\n$$\ne_{\\infty}^{\\text{bc}}(\\alpha) = \\max_{i \\in \\mathcal{I}_c} |(u_h)_i - (g_h)_i| = \\mathcal{O}(\\alpha^{-1})\n$$\nA robust unit test for the penalty method should verify this specific scaling behavior.\n\nNow we evaluate each option.\n\n**A. Elimination: After solving with elimination, assert $e_{\\infty}^{\\text{bc}} \\le c \\, \\epsilon_{\\text{mach}} \\, \\max \\!\\left( 1, \\|g_h\\|_{\\infty} \\right)$, ... Penalty: For a fixed mesh, solve for three increasing penalty parameters $\\alpha \\in \\{10^2, 10^4, 10^6\\}$, compute $e_{\\infty}^{\\text{bc}}(\\alpha)$, and assert both monotonicity ... and $\\mathcal{O}(\\alpha^{-1})$ scaling...**\n\n- *Elimination Test:* As derived, the boundary mismatch should be at the level of machine precision. The proposed relational tolerance is a standard, robust way to check for floating-point equality, accounting for potential roundoff and scaling with the magnitude of the boundary data. This test design is correct.\n- *Penalty Test:* This test design verifies the two key consequences of the $\\mathcal{O}(\\alpha^{-1})$ scaling. First, it checks for monotonicity: the error must decrease as $\\alpha$ increases. Second, it checks the rate of convergence by asserting that the scaled product $\\alpha \\, e_{\\infty}^{\\text{bc}}(\\alpha)$ is approximately constant over a range of $\\alpha$ values. The ratio test is a scale-independent and dimensionless way to quantify this, making it a well-scaled and robust test. This test design is also correct.\n\nVerdict for A: **Correct**.\n\n**B. Penalty: Accept the solution as correct if $e_{\\infty}^{\\text{bc}}(\\alpha) \\le c$ with a fixed tolerance $c$ independent of $\\alpha$ and the mesh size, without comparing different $\\alpha$ values.**\n\nThis test is flawed. The boundary mismatch $e_{\\infty}^{\\text{bc}}(\\alpha)$ is a function of $\\alpha$. A fixed tolerance $c$ would be arbitrary; for a small $\\alpha$, the test may fail even if the implementation is correct, while for a large $\\alpha$, the test may be too loose to catch errors. Furthermore, the constant of proportionality in $e_{\\infty}^{\\text{bc}}(\\alpha) \\approx C/\\alpha$ depends on the mesh and problem data, so a fixed tolerance $c$ is not robust under mesh refinement. Most importantly, this test fails to verify the *rate* of convergence, a crucial theoretical property of the penalty method.\n\nVerdict for B: **Incorrect**.\n\n**C. Elimination: Because discretization error is present, allow a boundary mismatch tolerance $e_{\\infty}^{\\text{bc}} \\le C h$ proportional to the mesh size $h$ (with some constant $C$), instead of a machine-precision-scaled tolerance.**\n\nThis confuses two different types of error. The discretization error, such as $\\|u_h - u\\|_{L^2}$, measures how well the FEM solution approximates the true continuous solution and typically depends on the mesh size $h$. In contrast, the boundary mismatch $e_{\\infty}^{\\text{bc}} = \\max_i |(u_h)_i - (g_h)_i|$ measures how well the discrete boundary conditions are satisfied algebraically. As shown in the analysis of the elimination method, this mismatch is a matter of floating-point representation and should be near zero, independent of $h$. Allowing a tolerance proportional to $h$ is incorrect and would potentially mask serious implementation bugs.\n\nVerdict for C: **Incorrect**.\n\n**D. Penalty: Because increasing $\\alpha$ penalizes deviations more strongly, require a tolerance that grows proportionally with $\\alpha$, i.e., $e_{\\infty}^{\\text{bc}}(\\alpha) \\le C \\alpha$, and do not check behavior across multiple $\\alpha$ values.**\n\nThis statement contains a fundamentally flawed premise. The boundary mismatch $e_{\\infty}^{\\text{bc}}(\\alpha)$ is proportional to $\\alpha^{-1}$, meaning it *decreases* as $\\alpha$ increases. Proposing a tolerance that grows with $\\alpha$ is the opposite of the correct behavior. Such a test would be meaningless.\n\nVerdict for D: **Incorrect**.\n\nBased on the analysis, only option A describes a set of unit tests that are mathematically justified, well-scaled, and robust for verifying the implementation of both elimination and penalty methods.", "answer": "$$\\boxed{A}$$", "id": "2555769"}]}