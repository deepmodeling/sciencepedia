{"hands_on_practices": [{"introduction": "Assembling the finite element system requires integrating products of basis functions or their derivatives over each element. Except for the simplest cases, these integrals are computed numerically using quadrature rules. This practice explores a fundamental question for ensuring accuracy: what is the minimum quadrature order needed to integrate the element stiffness matrix exactly? [@problem_id:2558061] This exercise is crucial for understanding how the choice of polynomial degree for the basis functions dictates the necessary precision of the numerical integration, preventing errors that could compromise the convergence of the method.", "problem": "Consider the scalar diffusion model problem posed on a bounded Lipschitz domain $\\Omega \\subset \\mathbb{R}^{d}$ with $d \\geq 1$, discretized by the standard Galerkin finite element method (FEM). Let $\\mathcal{T}_{h}$ be a shape-regular simplicial mesh of $\\Omega$ with affine element maps $F_{K} : \\hat{K} \\to K$ from a fixed reference simplex $\\hat{K}$ to each physical element $K \\in \\mathcal{T}_{h}$. On each element $K$, approximate the solution using the continuous Lagrange space of total degree $k \\geq 1$, denoted $P_{k}(K)$. Consider the classical symmetric bilinear form associated with the Poisson operator with constant isotropic diffusivity $\\kappa > 0$, namely\n$$\na(u,v) \\,=\\, \\int_{\\Omega} \\kappa \\,\\nabla u \\cdot \\nabla v \\, \\mathrm{d}x.\n$$\nElement stiffness matrix entries are given by\n$$\nK_{ij}^{K} \\,=\\, \\int_{K} \\kappa \\,\\nabla \\varphi_{i} \\cdot \\nabla \\varphi_{j} \\,\\mathrm{d}x,\n$$\nwhere $\\{\\varphi_{i}\\}$ are the local $P_{k}$ Lagrange basis functions on $K$. Suppose each integral $K_{ij}^{K}$ is evaluated by pulling back to $\\hat{K}$ and applying a quadrature rule on $\\hat{K}$ that is exact for all polynomials up to total degree $q$.\n\nStarting only from the definitions of the Lagrange polynomial space, the affine transformation of gradients under $F_{K}$, and the form of the bilinear functional $a(\\cdot,\\cdot)$, determine the minimal polynomial exactness degree $q_{\\min}(k)$ required of the reference-simplex quadrature rule so that $K_{ij}^{K}$ is computed exactly for all elements $K \\in \\mathcal{T}_{h}$ and all basis-function index pairs $\\{i,j\\}$.\n\nProvide your final answer as a closed-form expression in $k$. No numerical approximation is required, and no units are involved.", "solution": "We proceed from first principles concerning polynomial degrees, affine mappings, and the structure of the bilinear form.\n\nOn each element $K$, the local trial and test functions are drawn from the Lagrange space $P_{k}(K)$, meaning each basis function $\\varphi_{i}$ is a polynomial of total degree at most $k$ when restricted to $K$. The stiffness entry is\n$$\nK_{ij}^{K} \\,=\\, \\int_{K} \\kappa \\,\\nabla \\varphi_{i} \\cdot \\nabla \\varphi_{j} \\,\\mathrm{d}x,\n$$\nwith $\\kappa$ constant. Because $\\varphi_{i} \\in P_{k}(K)$, the gradient $\\nabla \\varphi_{i}$ is a vector of polynomials, each component having total degree at most $k-1$. The dot product $\\nabla \\varphi_{i} \\cdot \\nabla \\varphi_{j}$ is a sum of products of component polynomials, each product having total degree at most $(k-1) + (k-1) = 2k - 2$. Therefore, as a function on $K$, the integrand $\\kappa \\,\\nabla \\varphi_{i} \\cdot \\nabla \\varphi_{j}$ is a polynomial of total degree at most $2k - 2$.\n\nWe next account for the mapping to the reference simplex. Let $F_{K} : \\hat{K} \\to K$ be affine with Jacobian matrix $J_{K}$ and determinant $\\det(J_{K}) \\neq 0$. Under this map, for $\\hat{x} \\in \\hat{K}$ and $x = F_{K}(\\hat{x})$, the chain rule gives\n$$\n\\nabla \\varphi_{i}(x) \\,=\\, J_{K}^{-T} \\,\\nabla_{\\hat{x}} \\hat{\\varphi}_{i}(\\hat{x}),\n$$\nwhere $\\hat{\\varphi}_{i} = \\varphi_{i} \\circ F_{K}$ is the pulled-back basis function on $\\hat{K}$. Since $F_{K}$ is affine, $J_{K}$ and $J_{K}^{-T}$ are constant on $K$. The element integral transforms as\n$$\nK_{ij}^{K} \\,=\\, \\int_{\\hat{K}} \\kappa \\,\\big(J_{K}^{-T}\\nabla_{\\hat{x}} \\hat{\\varphi}_{i}(\\hat{x})\\big) \\cdot \\big(J_{K}^{-T}\\nabla_{\\hat{x}} \\hat{\\varphi}_{j}(\\hat{x})\\big)\\, |\\det(J_{K})| \\, \\mathrm{d}\\hat{x}.\n$$\nDefine the constant symmetric positive definite matrix $G_{K} = |\\det(J_{K})|\\, J_{K}^{-1} J_{K}^{-T}$. Then\n$$\nK_{ij}^{K} \\,=\\, \\int_{\\hat{K}} \\kappa \\, \\nabla_{\\hat{x}} \\hat{\\varphi}_{i}(\\hat{x})^{T} \\, G_{K} \\, \\nabla_{\\hat{x}} \\hat{\\varphi}_{j}(\\hat{x}) \\,\\mathrm{d}\\hat{x}.\n$$\nSince $G_{K}$ and $\\kappa$ are constant with respect to $\\hat{x}$, they do not change the polynomial degree of the integrand on $\\hat{K}$. The pulled-back basis $\\hat{\\varphi}_{i}$ is a polynomial of total degree at most $k$ on $\\hat{K}$; thus $\\nabla_{\\hat{x}} \\hat{\\varphi}_{i}$ has total degree at most $k-1$ in each component, and the scalar quantity $\\nabla_{\\hat{x}} \\hat{\\varphi}_{i}^{T} \\, G_{K} \\, \\nabla_{\\hat{x}} \\hat{\\varphi}_{j}$ remains a polynomial of total degree at most $2k - 2$ on $\\hat{K}$.\n\nTo identify the minimal exactness requirement, we must also check that this upper bound $2k - 2$ is attained for some pair of basis functions. Consider $\\hat{\\varphi}(\\hat{x}) = \\hat{x}_{1}^{k}$ restricted to $\\hat{K}$, which lies in $P_{k}(\\hat{K})$. Then\n$$\n\\nabla_{\\hat{x}} \\hat{\\varphi}(\\hat{x}) \\,=\\, \\big(k \\,\\hat{x}_{1}^{k-1},\\, 0,\\, \\dots,\\, 0\\big)^{T},\n$$\nso the scalar product $\\nabla_{\\hat{x}} \\hat{\\varphi} \\cdot \\nabla_{\\hat{x}} \\hat{\\varphi}$ equals $k^{2} \\hat{x}_{1}^{2k-2}$, a polynomial of total degree exactly $2k - 2$. Consequently, there exist entries $K_{ij}^{K}$ whose integrands achieve degree $2k - 2$. Any quadrature rule that is not exact for all polynomials up to total degree $2k - 2$ will fail to integrate such entries exactly for some mesh elements and basis-function pairs.\n\nTherefore, a quadrature rule on the reference simplex that is exact for all polynomials of total degree up to\n$$\nq_{\\min}(k) \\,=\\, 2k - 2\n$$\nis necessary and sufficient to guarantee exact computation of every element stiffness entry $K_{ij}^{K}$ for any affine simplex $K$, any Lagrange space $P_{k}(K)$ with $k \\geq 1$, and constant $\\kappa > 0$ in spatial dimension $d \\geq 1$.", "answer": "$$\\boxed{2k-2}$$", "id": "2558061"}, {"introduction": "Once the global stiffness matrix $K$ and load vector $f$ are assembled, the system $Ku=f$ is not yet ready to be solved. We must first incorporate the essential (Dirichlet) boundary conditions, where the values of the solution are prescribed at certain nodes. This quintessential step in the FEM workflow involves modifying the algebraic system to isolate the unknown degrees of freedom. [@problem_id:2558097] This practice walks you through the standard method of symmetric elimination, a hands-on procedure that is fundamental to practically implementing finite element methods.", "problem": "Consider the steady, one-dimensional diffusion problem on a bar with no source term, where the strong form reduces (after nondimensionalization) to $-u''(x)=0$ with Dirichlet boundary conditions. Using the standard Galerkin finite element method with linear elements on a uniform mesh of three elements (four nodes), the assembled global linear system has the form $K u = f$, where $K \\in \\mathbb{R}^{4 \\times 4}$ is symmetric positive definite, $u \\in \\mathbb{R}^{4}$ is the global vector of nodal unknowns (degrees of freedom), and $f \\in \\mathbb{R}^{4}$ is the global load vector. For this mesh and normalization, the assembled stiffness matrix and load vector are\n$$\nK=\\begin{pmatrix}\n2 & -1 & 0 & 0\\\\\n-1 & 2 & -1 & 0\\\\\n0 & -1 & 2 & -1\\\\\n0 & 0 & -1 & 2\n\\end{pmatrix},\\qquad\nf=\\begin{pmatrix}\n0\\\\\n0\\\\\n0\\\\\n0\n\\end{pmatrix}.\n$$\nYou are to impose Dirichlet essential boundary conditions by elimination of the rows and columns that correspond to prescribed degrees of freedom (DOFs), while preserving symmetry of the reduced system by appropriately adjusting the right-hand side. Specifically, the prescribed values are $u_1=0$ and $u_4=1$, and the free DOFs are $u_2$ and $u_3$.\n\nStarting from the algebraic system $K u = f$ obtained from the Galerkin weak form, derive (by partitioning and algebraic manipulation) the symmetric elimination procedure that removes the prescribed DOFs and modifies the right-hand side for the remaining free DOFs. Then apply your result to the data above to compute the exact value of $u_2$.\n\nProvide your final answer as a single exact number. Do not use penalty methods or Lagrange multipliers; use elimination with symmetry preservation only. No rounding is required, and no units are needed.", "solution": "The problem is subjected to validation before a solution is attempted.\n\n**Step 1: Extract Givens**\n-   **Governing Equation:** $-u''(x)=0$ (steady, one-dimensional diffusion, no source, nondimensionalized).\n-   **Method:** Standard Galerkin finite element method with linear elements.\n-   **Mesh:** Uniform with three elements and four nodes.\n-   **Global System:** $K u = f$.\n-   **Stiffness Matrix:**\n    $$\n    K=\\begin{pmatrix}\n    2 & -1 & 0 & 0\\\\\n    -1 & 2 & -1 & 0\\\\\n    0 & -1 & 2 & -1\\\\\n    0 & 0 & -1 & 2\n    \\end{pmatrix}\n    $$\n-   **Load Vector:**\n    $$\n    f=\\begin{pmatrix}\n    0\\\\\n    0\\\\\n    0\\\\\n    0\n    \\end{pmatrix}\n    $$\n-   **Boundary Conditions (Essential/Dirichlet):** $u_1 = 0$ and $u_4 = 1$.\n-   **Unknowns (Free Degrees of Freedom, DOFs):** $u_2$ and $u_3$.\n-   **Task:** Derive the symmetric elimination procedure via partitioning and apply it to find the exact value of $u_2$.\n-   **Constraint:** Use only the method of elimination, preserving symmetry. Do not use penalty methods or Lagrange multipliers.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is assessed for validity.\n-   **Scientific Grounding:** The problem describes the application of the finite element method to a simple second-order boundary value problem. This is a standard and fundamental topic in computational mechanics and applied mathematics. The given stiffness matrix $K$ is a well-known symmetric positive definite matrix (the discrete Laplacian), and the zero load vector $f$ is consistent with a zero source term. The method of elimination is a standard procedure for enforcing Dirichlet boundary conditions. The problem is scientifically and mathematically sound.\n-   **Well-Posedness:** The problem is well-posed. It provides a complete algebraic system and a clear set of boundary conditions. The task is to solve for a subset of the unknowns, for which a unique solution is expected and can be found. The underlying differential equation with the given boundary values also has a unique solution, providing a physical basis for the well-posedness of the discrete system.\n-   **Objectivity:** The problem is stated in precise, objective mathematical language.\n-   **Conclusion:** The problem is free of scientific flaws, contradictions, or ambiguities. It is a valid, well-posed problem.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A complete solution will be provided.\n\n**Derivation of the Symmetric Elimination Procedure**\n\nThe global linear system obtained from the finite element discretization is given by $K u = f$. We partition the vector of nodal unknowns $u$ into a vector of free (unknown) degrees of freedom, $u_F$, and a vector of prescribed (known) degrees of freedom, $u_P$. The system can be reordered and partitioned according to this distinction:\n$$\n\\begin{pmatrix} K_{FF} & K_{FP} \\\\ K_{PF} & K_{PP} \\end{pmatrix}\n\\begin{pmatrix} u_F \\\\ u_P \\end{pmatrix}\n=\n\\begin{pmatrix} f_F \\\\ f_P \\end{pmatrix}\n$$\nHere, $K_{FF}$ is the submatrix of $K$ connecting free DOFs to free DOFs, $K_{FP}$ connects free DOFs to prescribed DOFs, $K_{PF} = K_{FP}^T$ connects prescribed DOFs to free DOFs, and $K_{PP}$ connects prescribed DOFs to prescribed DOFs. The vectors $f_F$ and $f_P$ are the corresponding partitions of the global load vector $f$.\n\nThis block matrix equation expands into two sets of equations:\n$1.$ $K_{FF} u_F + K_{FP} u_P = f_F$\n$2.$ $K_{PF} u_F + K_{PP} u_P = f_P$\n\nThe first equation governs the behavior of the unknown DOFs $u_F$. Since the values in $u_P$ are known, we can rearrange this equation to solve for $u_F$:\n$$\nK_{FF} u_F = f_F - K_{FP} u_P\n$$\nThis is the reduced linear system for the free degrees of freedom. The matrix $K_{FF}$ is obtained by eliminating the rows and columns of $K$ corresponding to the prescribed DOFs. The right-hand side is modified to account for the influence of the prescribed values, creating a new effective load vector $\\hat{f}_F = f_F - K_{FP} u_P$. Since the original matrix $K$ is symmetric, the principal submatrix $K_{FF}$ is also symmetric, thus preserving the symmetry of the reduced system. If $K$ is positive definite, so is $K_{FF}$, which guarantees a unique solution for $u_F$. The second block equation is not needed to find $u_F$, but can be used subsequently to calculate the reaction forces corresponding to the prescribed DOFs.\n\n**Application to the Specific Problem**\n\nWe are given the global system with a $4 \\times 4$ matrix $K$ and a vector $f$. The degrees of freedom are partitioned as follows:\n-   Free DOFs: $u_F = \\begin{pmatrix} u_2 \\\\ u_3 \\end{pmatrix}$\n-   Prescribed DOFs: $u_P = \\begin{pmatrix} u_1 \\\\ u_4 \\end{pmatrix}$ with known values $u_1=0$ and $u_4=1$.\n\nWe extract the submatrices and subvectors from the given global system according to this partitioning. The indices for $u_F$ are $2$ and $3$, and for $u_P$ are $1$ and $4$.\n\nThe submatrix $K_{FF}$ consists of rows $2$ and $3$, and columns $2$ and $3$ of $K$:\n$$\nK_{FF} = \\begin{pmatrix} 2 & -1 \\\\ -1 & 2 \\end{pmatrix}\n$$\nThe submatrix $K_{FP}$ consists of rows $2$ and $3$, and columns $1$ and $4$ of $K$:\n$$\nK_{FP} = \\begin{pmatrix} -1 & 0 \\\\ 0 & -1 \\end{pmatrix}\n$$\nThe corresponding part of the load vector, $f_F$, consists of rows $2$ and $3$ of $f$:\n$$\nf_F = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}\n$$\nThe vector of prescribed values is:\n$$\nu_P = \\begin{pmatrix} u_1 \\\\ u_4 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}\n$$\nNow, we construct the modified right-hand side vector $\\hat{f}_F = f_F - K_{FP} u_P$:\n$$\n\\hat{f}_F = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} - \\begin{pmatrix} -1 & 0 \\\\ 0 & -1 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} - \\begin{pmatrix} (-1)(0) + (0)(1) \\\\ (0)(0) + (-1)(1) \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} - \\begin{pmatrix} 0 \\\\ -1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}\n$$\nThe reduced system to be solved is $K_{FF} u_F = \\hat{f}_F$:\n$$\n\\begin{pmatrix} 2 & -1 \\\\ -1 & 2 \\end{pmatrix} \\begin{pmatrix} u_2 \\\\ u_3 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}\n$$\nThis represents the system of two linear equations:\n$1.$ $2u_2 - u_3 = 0$\n$2.$ $-u_2 + 2u_3 = 1$\n\nFrom equation ($1$), we express $u_3$ in terms of $u_2$:\n$$\nu_3 = 2u_2\n$$\nSubstitute this expression into equation ($2$):\n$$\n-u_2 + 2(2u_2) = 1\n$$\n$$\n-u_2 + 4u_2 = 1\n$$\n$$\n3u_2 = 1\n$$\nSolving for $u_2$, we find:\n$$\nu_2 = \\frac{1}{3}\n$$\nFor completeness, we can also find $u_3 = 2(\\frac{1}{3}) = \\frac{2}{3}$. The solution for the free degrees of freedom is $u_F = \\begin{pmatrix} 1/3 \\\\ 2/3 \\end{pmatrix}$. The problem asks only for the value of $u_2$. This result is consistent with the exact analytical solution $u(x)=x$ for the problem $-u''(x)=0$ on the domain $[0,1]$ with boundary conditions $u(0)=0$ and $u(1)=1$, evaluated at the nodal position $x_2=1/3$. The finite element method with linear elements provides the exact solution at the nodes for this particular problem.", "answer": "$$\\boxed{\\frac{1}{3}}$$", "id": "2558097"}, {"introduction": "After implementing a finite element solver, a critical question arises: is the code correct? The Method of Manufactured Solutions (MMS) is a rigorous verification technique used to answer this question by checking if the implementation achieves the convergence rates predicted by theory. This requires carefully constructing a problem with a known analytical solution. [@problem_id:2558001] This exercise challenges you to identify the correct workflow for MMS, reinforcing the logical steps required to design a valid verification test and avoid common pitfalls that would render the results meaningless.", "problem": "Consider the second-order linear elliptic partial differential equation (PDE)\n$$\n-\\nabla \\cdot \\big(\\kappa(x,y)\\,\\nabla u(x,y)\\big) + u(x,y) = f(x,y)\\quad \\text{in } \\Omega=(0,1)^2,\n$$\nwith Dirichlet boundary condition\n$$\nu(x,y) = g(x,y)\\quad \\text{on } \\partial\\Omega,\n$$\nwhere $\\kappa(x,y)=1+x+y$ is uniformly positive and smooth. Let a conforming Galerkin Finite Element Method (FEM) with continuous Lagrange elements of polynomial degree $k\\in\\{1,2,3\\}$ be used on a family of shape-regular, quasi-uniform meshes with mesh-size $h\\to 0$. The goal is to verify an implementation via the Method of Manufactured Solutions (MMS), by choosing a manufactured exact solution $u_{ex}$, deriving the corresponding forcing $f$, prescribing consistent boundary data $g$, and then empirically confirming the expected convergence rates in the $H^1(\\Omega)$- and $L^2(\\Omega)$-norms.\n\nWhich of the following options correctly outlines a scientifically sound MMS workflow that, under standard regularity assumptions, will yield the theoretically expected asymptotic convergence rates in the $H^1(\\Omega)$- and $L^2(\\Omega)$-norms for polynomial degree $k$?\n\nA. Choose $u_{ex}(x,y)=\\sin(\\pi x)\\sin(\\pi y)$, define $g=u_{ex}|_{\\partial\\Omega}$, and set\n$$\nf(x,y)=-\\nabla\\cdot\\big(\\kappa(x,y)\\,\\nabla u_{ex}(x,y)\\big)+u_{ex}(x,y).\n$$\nAssemble the conforming Galerkin FEM with exact integration (or numerical quadrature of sufficiently high order so that quadrature error is asymptotically negligible), solve for $u_h\\in V_h$, and measure the errors $\\|u_{ex}-u_h\\|_{H^1(\\Omega)}$ and $\\|u_{ex}-u_h\\|_{L^2(\\Omega)}$ over a sequence of refinements $h\\to 0$. Under the assumptions $u_{ex}\\in H^{k+1}(\\Omega)$ and sufficient elliptic regularity, verify that the slopes in $\\log$–$\\log$ plots are $k$ in the $H^1(\\Omega)$-norm and $k+1$ in the $L^2(\\Omega)$-norm.\n\nB. Choose $u_{ex}(x,y)=\\sin(\\pi x)\\sin(\\pi y)$, impose homogeneous boundary data $g\\equiv 0$ for convenience, and set\n$$\nf(x,y)=-\\Delta u_{ex}(x,y)+u_{ex}(x,y),\n$$\nignoring the spatially varying coefficient $\\kappa$. Assemble with a low-order quadrature to reduce cost, refine $h\\to 0$, and verify that the $H^1(\\Omega)$- and $L^2(\\Omega)$-errors both converge with slope $k+1$.\n\nC. Choose a less regular manufactured solution $u_{ex}(x,y)=\\sqrt{x}\\,\\sin(\\pi y)$ to test robustness, define $g=u_{ex}|_{\\partial\\Omega}$ and $f=-\\nabla\\cdot(\\kappa\\nabla u_{ex})+u_{ex}$, use exact assembly, and verify that the $H^1(\\Omega)$- and $L^2(\\Omega)$-errors still converge with slopes exactly $k$ and $k+1$, respectively, independent of the reduced regularity of $u_{ex}$.\n\nD. Choose $u_{ex}(x,y)=\\sin(\\pi x)\\sin(\\pi y)$, set $g=u_{ex}|_{\\partial\\Omega}$, and compute $f=-\\nabla\\cdot(\\kappa\\nabla u_{ex})+u_{ex}$. For simplicity, replace the Dirichlet boundary condition by homogeneous Neumann boundary conditions during the solve, then verify correctness by monitoring the maximum nodal error $\\max_i|u_{ex}(x_i)-u_h(x_i)|$, expecting slope $k+1$ for all $k$.\n\nSelect the correct option(s).", "solution": "The great task of science is to distinguish truth from falsehood. We begin by validating the problem statement.\n\n### Step 1: Extract Givens\n-   **Partial Differential Equation (PDE)**: $-\\nabla \\cdot \\big(\\kappa(x,y)\\,\\nabla u(x,y)\\big) + u(x,y) = f(x,y)$ in the domain $\\Omega=(0,1)^2$.\n-   **Coefficient**: $\\kappa(x,y)=1+x+y$. This is a smooth function, and for $(x,y) \\in \\bar{\\Omega} = [0,1]^2$, we have $1 \\leq \\kappa(x,y) \\leq 3$. The uniform positivity ensures the operator is elliptic.\n-   **Boundary Condition**: $u(x,y) = g(x,y)$ on the boundary $\\partial\\Omega$ (Dirichlet type).\n-   **Numerical Method**: Conforming Galerkin Finite Element Method (FEM).\n-   **Finite Element Space**: Continuous Lagrange elements of polynomial degree $k \\in \\{1,2,3\\}$.\n-   **Mesh Properties**: A family of shape-regular, quasi-uniform meshes with mesh size $h$ approaching zero.\n-   **Objective**: To identify the correct workflow for the Method of Manufactured Solutions (MMS) to verify an implementation by confirming theoretical convergence rates in the $H^1(\\Omega)$ and $L^2(\\Omega)$ norms.\n\n### Step 2: Validate Using Extracted Givens\nThe problem presented is a canonical example of a linear second-order elliptic PDE, which is a cornerstone of study in numerical analysis. The Method of Manufactured Solutions is the standard, rigorous technique for code verification in scientific computing. It tests whether a numerical implementation correctly solves the specified differential equation to the expected order of accuracy. The problem is scientifically grounded in established mathematical and computational principles. The terminology used is precise and unambiguous. The problem is self-contained and well-posed. It does not suffer from any of the flaws listed in the validation protocol.\n\n### Step 3: Verdict and Action\nThe problem statement is valid. It presents a clear and standard task in the verification of numerical software. We shall proceed to analyze the proposed options.\n\n### Solution Derivation\nThe theoretical foundation for the convergence of the Finite Element Method for this class of elliptic problems is well-established. Let $u$ be the exact solution and $u_h$ be the FEM solution from a finite element space $V_h$ generated by continuous Lagrange polynomials of degree $k$ on a quasi-uniform mesh of size $h$.\n\nThe core results from approximation theory are as follows:\n\n1.  **$H^1(\\Omega)$-Norm Error**: Céa's Lemma bounds the error in the energy norm (which is equivalent to the $H^1(\\Omega)$-norm for this problem) by the best approximation error from the space $V_h$. If the exact solution $u$ possesses sufficient regularity, specifically $u \\in H^{k+1}(\\Omega)$, then the error in the $H^1(\\Omega)$-norm is bounded as:\n    $$\n    \\|u - u_h\\|_{H^1(\\Omega)} \\leq C h^k \\|u\\|_{H^{k+1}(\\Omega)}\n    $$\n    This predicts a convergence rate of order $k$, which corresponds to a slope of $k$ on a log-log plot of error versus $h$.\n\n2.  **$L^2(\\Omega)$-Norm Error**: Through the Aubin-Nitsche duality argument, which relies on the elliptic regularity of the PDE (a property that holds for this problem on the convex domain $\\Omega=(0,1)^2$ with smooth coefficient $\\kappa$), a higher-order convergence rate can be established for the error in the $L^2(\\Omega)$-norm. Again, assuming $u \\in H^{k+1}(\\Omega)$, the error is bounded as:\n    $$\n    \\|u - u_h\\|_{L^2(\\Omega)} \\leq C' h^{k+1} \\|u\\|_{H^{k+1}(\\Omega)}\n    $$\n    This predicts a convergence rate of order $k+1$, corresponding to a slope of $k+1$ on a log-log plot.\n\nThe Method of Manufactured Solutions (MMS) must be structured to create a test case where these theoretical predictions can be observed empirically. The key steps are:\n1.  Choose a sufficiently smooth function $u_{ex}$ to serve as the exact solution. \"Sufficiently smooth\" means $u_{ex} \\in H^{k+1}(\\Omega)$ to allow for the observation of optimal rates.\n2.  Insert $u_{ex}$ into the differential operator to generate the corresponding source term $f$. For the operator $\\mathcal{L}u = -\\nabla \\cdot (\\kappa \\nabla u) + u$, this means $f = \\mathcal{L}u_{ex}$.\n3.  Set the Dirichlet boundary data $g$ to be the trace of the manufactured solution on the boundary, i.e., $g = u_{ex}|_{\\partial\\Omega}$.\n4.  Solve the PDE $\\mathcal{L}u_h=f$ with boundary condition $u_h=g$ on $\\partial\\Omega$ using the FEM code.\n5.  Compute the error by comparing the numerical solution $u_h$ to the known exact solution $u_{ex}$ in the desired norms.\n6.  Perform a mesh refinement study, decreasing $h$ and verifying that the computed errors decrease at the rates predicted by theory.\n\nAny deviation from this logical sequence invalidates the verification test.\n\n### Option-by-Option Analysis\n\n**Option A:** This option follows the correct MMS procedure precisely.\n-   It selects a manufactured solution $u_{ex}(x,y)=\\sin(\\pi x)\\sin(\\pi y)$ which is of class $C^\\infty$, thus having more than sufficient regularity ($u_{ex} \\in H^{s}(\\Omega)$ for all $s > 0$).\n-   It correctly defines the forcing term $f$ by applying the full differential operator, including the spatially varying coefficient $\\kappa(x,y)$, to $u_{ex}$.\n-   It correctly prescribes the boundary data $g$ as the trace of $u_{ex}$ on $\\partial\\Omega$.\n-   It correctly emphasizes that any numerical quadrature must be of sufficiently high order to not pollute the discretization error, which is a crucial practical detail.\n-   It correctly states the expected asymptotic convergence rates: order $k$ in the $H^1(\\Omega)$-norm and order $k+1$ in the $L^2(\\Omega)$-norm.\n\nThis workflow is scientifically sound and rigorous.\n**Verdict: Correct**\n\n**Option B:** This option contains multiple fundamental errors.\n-   It proposes to calculate the source term $f$ by \"ignoring the spatially varying coefficient $\\kappa$\". This means one would calculate $f = -\\Delta u_{ex} + u_{ex}$ instead of the correct $f = -\\nabla \\cdot (\\kappa \\nabla u_{ex}) + u_{ex}$. The code would then solve a problem for which $u_{ex}$ is not the solution. The error $\\|u_{ex} - u_h\\|$ would not test the code's correctness for the intended PDE.\n-   It suggests using \"low-order quadrature to reduce cost\". Low-order quadrature introduces its own error, which can easily dominate the discretization error and obscure the true convergence rate of the method. This contradicts the goal of verification.\n-   It incorrectly states that both the $H^1(\\Omega)$ and $L^2(\\Omega)$ errors converge with slope $k+1$. The theoretical rate for the $H^1(\\Omega)$-norm is $k$.\n\nThis workflow is deeply flawed.\n**Verdict: Incorrect**\n\n**Option C:** This option demonstrates a misunderstanding of the role of solution regularity.\n-   It proposes choosing $u_{ex}(x,y)=\\sqrt{x}\\,\\sin(\\pi y)$. Let us check its regularity. The partial derivative with respect to $x$ is $\\frac{\\partial u_{ex}}{\\partial x} = \\frac{1}{2\\sqrt{x}}\\sin(\\pi y)$. The $L^2$-norm of this derivative involves the integral $\\int_0^1 \\frac{1}{x} dx$, which diverges. Therefore, $u_{ex} \\not\\in H^1(\\Omega)$. A conforming FEM is based on a weak formulation over a subspace of $H^1(\\Omega)$. Choosing a manufactured solution that is not even in $H^1(\\Omega)$ makes the entire theoretical basis of the method, and thus the verification test, inapplicable.\n-   It makes the false claim that convergence rates are \"independent of the reduced regularity\". This is a grave theoretical error. The rates of convergence $k$ and $k+1$ are *predicated* on the solution having at least $H^{k+1}(\\Omega)$ regularity. For less regular solutions, the observed rates are limited by that regularity.\n\nThis workflow is based on a fallacious premise.\n**Verdict: Incorrect**\n\n**Option D:** This option commits a critical error by mismatching boundary conditions.\n-   It correctly states the initial steps of creating $f$ and $g$ from $u_{ex}$.\n-   However, it then proposes to solve the problem with \"homogeneous Neumann boundary conditions\" instead of the Dirichlet conditions $u=g$ for which the problem was constructed. This means the code is solving a completely different boundary-value problem. The numerical solution $u_h$ will converge to the solution of the Neumann problem, which is not $u_{ex}$. The measured error $\\|u_{ex} - u_h\\|$ will not converge to zero, and the test is entirely meaningless. One cannot verify an implementation for a Dirichlet problem by solving a Neumann problem.\n-   Monitoring the maximum nodal error is a valid way to measure convergence in the $L^\\infty$-norm, but it is irrelevant here as the entire test setup is invalid.\n\nThis workflow is logically inconsistent.\n**Verdict: Incorrect**", "answer": "$$\\boxed{A}$$", "id": "2558001"}]}