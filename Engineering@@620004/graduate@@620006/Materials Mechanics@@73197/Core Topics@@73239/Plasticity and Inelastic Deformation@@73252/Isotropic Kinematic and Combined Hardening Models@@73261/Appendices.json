{"hands_on_practices": [{"introduction": "The von Mises yield criterion is the gateway to plasticity analysis. This exercise provides a direct application of this criterion for a material with isotropic hardening, where the yield surface has expanded uniformly due to prior deformation [@problem_id:2895999]. By calculating the yield function $f = \\sigma_{\\text{eq}} - \\sigma_y$, you will make the fundamental determination of whether a given stress state is elastic or plastic.", "problem": "A homogeneous, isotropic metal is subjected to the Cauchy stress tensor $\\boldsymbol{\\sigma}=\\mathrm{diag}(200,\\,100,\\,0)\\,\\text{MPa}$. The elastic moduli are $E=210\\,\\text{GPa}$ and $\\nu=0.3$. The material follows an isotropic hardening von Mises plasticity model with initial yield stress $\\sigma_{y0}=150\\,\\text{MPa}$ and linear hardening law $\\sigma_{y}(\\kappa)=\\sigma_{y0}+H\\,\\kappa$, where $H=1\\,\\text{GPa}$ and the accumulated plastic strain is $\\kappa=0.02$. Starting from the definitions of the hydrostatic-deviatoric decomposition and the second invariant of the deviatoric stress, evaluate the von Mises equivalent stress $\\sigma_{\\text{eq}}$ for the given $\\boldsymbol{\\sigma}$, then compute the yield function value $f=\\sigma_{\\text{eq}}-\\sigma_{y}(\\kappa)$ and deduce whether the state is elastic, on the yield surface, or plastic based on the sign of $f$. Report $f$ in $\\text{MPa}$ as your final numerical answer, rounded to four significant figures. Use radians for any angular quantities if they arise.", "solution": "The principal stresses are $\\sigma_1 = 200\\,\\text{MPa}$, $\\sigma_2 = 100\\,\\text{MPa}$, and $\\sigma_3 = 0\\,\\text{MPa}$. The von Mises equivalent stress, $\\sigma_{\\text{eq}}$, is calculated directly from the principal stresses:\n$$\n\\sigma_{\\text{eq}} = \\sqrt{\\frac{1}{2}\\left[(\\sigma_1 - \\sigma_2)^2 + (\\sigma_2 - \\sigma_3)^2 + (\\sigma_3 - \\sigma_1)^2\\right]}\n$$\nSubstituting the given values:\n$$\n\\sigma_{\\text{eq}} = \\sqrt{\\frac{1}{2}\\left[(200 - 100)^2 + (100 - 0)^2 + (0 - 200)^2\\right]}\n$$\n$$\n\\sigma_{\\text{eq}} = \\sqrt{\\frac{1}{2}\\left[100^2 + 100^2 + (-200)^2\\right]} = \\sqrt{\\frac{1}{2}\\left[10000 + 10000 + 40000\\right]}\n$$\n$$\n\\sigma_{\\text{eq}} = \\sqrt{\\frac{60000}{2}} = \\sqrt{30000}\\,\\text{MPa} = 100\\sqrt{3}\\,\\text{MPa}\n$$\nNumerically, this is $\\sigma_{\\text{eq}} \\approx 173.205\\,\\text{MPa}$.\n\nNext, the current yield stress, $\\sigma_y(\\kappa)$, is calculated using the linear isotropic hardening rule $\\sigma_y(\\kappa) = \\sigma_{y0} + H\\kappa$. The given parameters are $\\sigma_{y0} = 150\\,\\text{MPa}$, $H = 1\\,\\text{GPa} = 1000\\,\\text{MPa}$, and $\\kappa = 0.02$.\n$$\n\\sigma_y(\\kappa) = 150\\,\\text{MPa} + (1000\\,\\text{MPa}) \\times 0.02\n$$\n$$\n\\sigma_y(\\kappa) = 150\\,\\text{MPa} + 20\\,\\text{MPa} = 170\\,\\text{MPa}\n$$\nThis is the size of the yield surface after the material has undergone plastic deformation corresponding to an accumulated plastic strain of $\\kappa=0.02$.\n\nFinally, the value of the yield function, $f = \\sigma_{\\text{eq}} - \\sigma_y(\\kappa)$, is computed.\n$$\nf = 100\\sqrt{3}\\,\\text{MPa} - 170\\,\\text{MPa}\n$$\n$$\nf \\approx (173.20508\\dots - 170)\\,\\text{MPa} = 3.20508\\dots\\,\\text{MPa}\n$$\nThe sign of $f$ determines the state of the material.\n- If $f < 0$, the stress state is inside the yield surface (elastic).\n- If $f = 0$, the stress state is on the yield surface (yielding).\n- If $f > 0$, the stress state is outside the yield surface (plastic loading).\n\nIn this case, $f \\approx 3.205\\,\\text{MPa} > 0$. This indicates that the given stress state lies outside the current yield surface. In the context of rate-independent plasticity theory, this signifies an inadmissible state. However, in numerical algorithms, this represents a \"trial\" stress state that must be projected back onto the yield surface. The positive value of $f$ confirms that the material is in a plastic state and undergoing further plastic deformation.\n\nThe problem requires the value of $f$ in $\\text{MPa}$ rounded to four significant figures.\n$$\nf \\approx 3.205\\,\\text{MPa}\n$$", "answer": "$$\n\\boxed{3.205}\n$$", "id": "2895999"}, {"introduction": "While isotropic hardening describes an increase in the size of the yield surface, it cannot capture directional effects like the Bauschinger effect. This practice introduces kinematic hardening, where the yield surface translates in stress space, to model this important phenomenon [@problem_id:2895995]. You will analytically derive the change in yield stress under load reversal using the classic Prager model, gaining a fundamental understanding of how backstress evolution works.", "problem": "A metallic specimen obeys small-strain von Mises (second invariant of deviatoric stress, $J_{2}$) plasticity with linear kinematic hardening governed by Prager’s law. The initial uniaxial yield stress is $\\sigma_{y0}$. The yield function in terms of the Cauchy stress tensor $\\boldsymbol{\\sigma}$ and the deviatoric backstress tensor $\\boldsymbol{\\alpha}$ is\n$$\nf = \\sqrt{\\frac{3}{2}}\\,\\|\\mathbf{s}-\\boldsymbol{\\alpha}\\| - \\sigma_{y0},\n$$\nwhere $\\mathbf{s}$ is the deviatoric part of $\\boldsymbol{\\sigma}$. The plastic flow is associated, and the backstress evolves according to Prager’s law\n$$\n\\mathrm{d}\\boldsymbol{\\alpha} = \\frac{2}{3}\\,C\\,\\mathrm{d}\\boldsymbol{\\varepsilon}^{p},\n$$\nwhere $C$ is the (constant) kinematic hardening modulus and $\\mathrm{d}\\boldsymbol{\\varepsilon}^{p}$ is the plastic strain increment tensor.\n\nThe specimen is loaded uniaxially in tension beyond first yield and reaches a monotonic axial plastic prestrain of magnitude $\\varepsilon^{p}$ (take $\\varepsilon^{p}$ to denote the axial plastic strain component). The specimen is then unloaded elastically to zero stress and reloaded in compression until yielding re-initiates (stress reversal).\n\nStarting from the definitions above, and specializing carefully to the uniaxial, coaxial case, derive the analytical expression for the shift in the compressive yield stress upon reversal, defined as\n$$\n\\Delta \\sigma_{\\mathrm{rev}} \\equiv \\sigma_{\\mathrm{rev}} - (-\\sigma_{y0}),\n$$\nwhere $\\sigma_{\\mathrm{rev}}$ is the compressive Cauchy stress at which yielding re-initiates after reversal. Then evaluate this shift for the data\n$$\nC = 8{,}600\\ \\text{MPa}, \\quad \\varepsilon^{p} = 0.01234, \\quad \\sigma_{y0} = 300\\ \\text{MPa}.\n$$\n\nExpress the final shift $\\Delta \\sigma_{\\mathrm{rev}}$ in MPa and round your answer to four significant figures.", "solution": "The derivation proceeds by specializing the general three-dimensional constitutive equations to the case of uniaxial stress. Let the uniaxial stress be applied along the $x_1$-axis, so the stress tensor is $\\boldsymbol{\\sigma} = \\mathrm{diag}(\\sigma, 0, 0)$. The deviatoric stress tensor $\\mathbf{s}$ and backstress tensor $\\boldsymbol{\\alpha}$ are also coaxial. The von Mises yield condition $f = \\sqrt{\\frac{3}{2}}\\|\\mathbf{s}-\\boldsymbol{\\alpha}\\| - \\sigma_{y0}=0$ can be shown to reduce to the following form for uniaxial stress:\n$$\n|\\sigma - a| = \\sigma_{y0}\n$$\nHere, $a$ is the uniaxial backstress component. The Prager evolution law for the backstress tensor, $\\mathrm{d}\\boldsymbol{\\alpha} = \\frac{2}{3}C\\mathrm{d}\\boldsymbol{\\varepsilon}^p$, also reduces to a simple evolution law for the uniaxial backstress component:\n$$\nda = C d\\varepsilon_p\n$$\nwhere $\\varepsilon_p$ is the uniaxial plastic strain. Integrating from an initial virgin state ($a=0$, $\\varepsilon_p=0$), we get:\n$$\na = C \\varepsilon_p\n$$\nSubstituting this into the uniaxial yield condition gives:\n$$\n|\\sigma - C\\varepsilon_p| = \\sigma_{y0}\n$$\nThis equation describes the evolution of the yield surface in uniaxial stress space. Now we analyze the loading history.\n\nPhase 1: Uniaxial tension.\nThe material is loaded in tension ($\\sigma > 0$) beyond the initial yield stress $\\sigma_{y0}$. The yield condition becomes $\\sigma - C\\varepsilon_p = \\sigma_{y0}$, so the flow stress is $\\sigma = \\sigma_{y0} + C\\varepsilon_p$. Loading continues until the axial plastic strain is $\\varepsilon^{p}$. At this point, the uniaxial backstress is $a = C\\varepsilon^p$.\n\nPhase 2: Unloading.\nThe specimen is unloaded to zero stress. Unloading is elastic, so $d\\varepsilon_p = 0$, which means $da = 0$. Thus, the backstress remains \"frozen\" at the value it attained at the end of the tensile loading phase, $a = C\\varepsilon^p$.\n\nPhase 3: Compressive reloading.\nThe specimen is reloaded in compression, so the stress $\\sigma$ is now negative. Yielding re-initiates when the stress $\\sigma = \\sigma_{\\mathrm{rev}}$ satisfies the yield condition $|\\sigma_{\\mathrm{rev}} - a| = \\sigma_{y0}$, with the backstress $a = C\\varepsilon^p$ from the tensile prestrain. Since $\\sigma_{\\mathrm{rev}}$ is negative and $a = C\\varepsilon^p$ is positive, the term inside the absolute value, $\\sigma_{\\mathrm{rev}} - C\\varepsilon^p$, is negative. Therefore, we must write:\n$$\n-(\\sigma_{\\mathrm{rev}} - C\\varepsilon^p) = \\sigma_{y0}\n$$\nSolving for the reverse yield stress $\\sigma_{\\mathrm{rev}}$:\n$$\nC\\varepsilon^p - \\sigma_{\\mathrm{rev}} = \\sigma_{y0} \\implies \\sigma_{\\mathrm{rev}} = C\\varepsilon^p - \\sigma_{y0}\n$$\nThe problem asks for the shift in the compressive yield stress, $\\Delta \\sigma_{\\mathrm{rev}}$, defined relative to the initial compressive yield stress $-\\sigma_{y0}$:\n$$\n\\Delta \\sigma_{\\mathrm{rev}} \\equiv \\sigma_{\\mathrm{rev}} - (-\\sigma_{y0}) = \\sigma_{\\mathrm{rev}} + \\sigma_{y0}\n$$\nSubstituting our derived expression for $\\sigma_{\\mathrm{rev}}$:\n$$\n\\Delta \\sigma_{\\mathrm{rev}} = (C\\varepsilon^p - \\sigma_{y0}) + \\sigma_{y0} = C\\varepsilon^p\n$$\nThis is the analytical expression for the shift. This reduction in the magnitude of the compressive yield stress following tensile plastic deformation is known as the Bauschinger effect.\n\nFinally, we substitute the given numerical values to calculate the shift:\n$C = 8600\\ \\text{MPa}$\n$\\varepsilon^p = 0.01234$\n$$\n\\Delta \\sigma_{\\mathrm{rev}} = (8600\\ \\text{MPa}) \\times 0.01234 = 106.124\\ \\text{MPa}\n$$\nRounding the result to four significant figures gives:\n$$\n\\Delta \\sigma_{\\mathrm{rev}} = 106.1\\ \\text{MPa}\n$$", "answer": "$$\\boxed{106.1}$$", "id": "2895995"}, {"introduction": "Real materials often exhibit both a change in size and position of their yield surface, requiring combined hardening models for accurate predictions. This final practice bridges theory and computational mechanics, a crucial skill in modern engineering [@problem_id:2895944]. You will implement a numerical simulator for a sophisticated model combining nonlinear kinematic and isotropic hardening, mirroring the logic used in finite element software to predict complex cyclic material behavior.", "problem": "You are asked to implement a small-strain, uniaxial, elasto-plastic simulator with combined isotropic and nonlinear kinematic hardening, and to use it to compute the stabilized stress response under a prescribed, fully reversed, strain-controlled cyclic loading. Your program must simulate repeated cycles until the hysteresis loop becomes stabilized, and then compute the stress amplitude and mean stress of that stabilized cycle.\n\nThe simulator shall be based on the following fundamental and widely accepted modeling assumptions and laws.\n\n1) Strain kinematics and elasticity. In small strain, the total strain is additively decomposed as $\\,\\varepsilon = \\varepsilon_{\\mathrm{e}} + \\varepsilon_{\\mathrm{p}}\\,$, with linear elasticity $\\,\\sigma = E\\,\\varepsilon_{\\mathrm{e}} = E\\,(\\varepsilon - \\varepsilon_{\\mathrm{p}})\\,$, where $\\,E\\,$ is the Young’s modulus and $\\,\\sigma\\,$ is the Cauchy stress.\n\n2) Yield function and flow rule. Use the uniaxial reduction of the von Mises (J2) plasticity with combined hardening. Introduce the backstress $\\,\\alpha\\,$ and the accumulated equivalent plastic strain $\\,p\\,$. The yield function is\n$$\nf(\\sigma,\\alpha,p) = \\lvert \\sigma - \\alpha \\rvert - \\sigma_{y}(p) \\le 0,\n$$\nwith associated flow so that the plastic strain increment is colinear with the gradient of the yield function. In one dimension this implies\n$$\nd\\varepsilon_{\\mathrm{p}} = d\\lambda\\,\\mathrm{sign}(\\sigma - \\alpha), \\quad dp = d\\lambda, \\quad d\\lambda \\ge 0.\n$$\nThe Kuhn–Tucker conditions hold: $\\,f \\le 0,\\; d\\lambda \\ge 0,\\; f\\,d\\lambda = 0\\,$.\n\n3) Isotropic hardening by the Voce law. The size of the elastic domain evolves according to\n$$\n\\sigma_{y}(p) = \\sigma_{s} - \\big(\\sigma_{s} - \\sigma_{y0}\\big)\\,\\mathrm{e}^{-b\\,p},\n$$\nwhere $\\,\\sigma_{y0}\\,$ is the initial yield stress, $\\,\\sigma_{s}\\,$ is the saturation yield stress, and $\\,b\\,$ is a positive parameter.\n\n4) Nonlinear kinematic hardening by the Armstrong–Frederick law. Represent the total backstress as a sum of $\\,N\\,$ components $\\,\\alpha = \\sum_{i=1}^{N}\\alpha_{i}\\,$, with each component evolving as\n$$\nd\\alpha_{i} = C_{i}\\,d\\varepsilon_{\\mathrm{p}} - \\gamma_{i}\\,\\alpha_{i}\\,dp,\n$$\nwhere $\\,C_{i} > 0\\,$ and $\\,\\gamma_{i} > 0\\,$.\n\n5) Time discretization and return-mapping. For a strain increment from step $\\,n\\,$ to $\\,n{+}1\\,$, use an elastic predictor–plastic corrector algorithm. Denote $\\,\\varepsilon_{n+1}\\,$ the imposed total strain, and known internal variables $\\,\\varepsilon_{\\mathrm{p},n},\\,p_{n},\\,\\alpha_{i,n}\\,$. The elastic predictor is $\\,\\sigma_{\\mathrm{tr}} = E\\big(\\varepsilon_{n+1} - \\varepsilon_{\\mathrm{p},n}\\big)\\,$ and $\\,\\xi_{\\mathrm{tr}} = \\sigma_{\\mathrm{tr}} - \\alpha_{n}\\,$ with $\\,\\alpha_{n}=\\sum_{i}\\alpha_{i,n}\\,$. If $\\,\\lvert \\xi_{\\mathrm{tr}}\\rvert \\le \\sigma_{y}(p_{n})\\,$ then the step is elastic. Otherwise, enforce plastic consistency $\\,\\lvert \\sigma_{n+1} - \\alpha_{n+1}\\rvert = \\sigma_{y}(p_{n+1})\\,$ with a backward-Euler update. Let $\\,s = \\mathrm{sign}(\\xi_{\\mathrm{tr}})\\,$ and plastic multiplier $\\,\\Delta\\gamma \\ge 0\\,$. The discrete update reads\n$$\n\\varepsilon_{\\mathrm{p},n+1} = \\varepsilon_{\\mathrm{p},n} + \\Delta\\gamma\\,s,\\quad\np_{n+1} = p_{n} + \\Delta\\gamma,\\quad\n\\sigma_{n+1} = E\\left(\\varepsilon_{n+1} - \\varepsilon_{\\mathrm{p},n} - \\Delta\\gamma\\,s\\right),\n$$\n$$\n\\alpha_{i,n+1} = \\frac{\\alpha_{i,n} + C_{i}\\,\\Delta\\gamma\\,s}{1 + \\gamma_{i}\\,\\Delta\\gamma},\\quad \\alpha_{n+1} = \\sum_{i=1}^{N}\\alpha_{i,n+1}.\n$$\nThe plastic consistency equation is the scalar nonlinear equation for $\\,\\Delta\\gamma\\,$:\n$$\ng(\\Delta\\gamma) := s\\left(\\sigma_{n+1} - \\alpha_{n+1}\\right) - \\sigma_{y}(p_{n} + \\Delta\\gamma) = 0.\n$$\nSolve $\\,g(\\Delta\\gamma)=0\\,$ by a robust Newton method with line search. The derivative needed for Newton’s method is\n$$\n\\frac{dg}{d\\Delta\\gamma} = -E - \\sum_{i=1}^{N}\\frac{C_{i} - s\\,\\gamma_{i}\\,\\alpha_{i,n}}{\\left(1 + \\gamma_{i}\\,\\Delta\\gamma\\right)^{2}} - b\\left(\\sigma_{s} - \\sigma_{y0}\\right)\\,\\mathrm{e}^{-b\\,(p_{n} + \\Delta\\gamma)}.\n$$\n\nCyclic loading protocol and stabilization goal.\n\n- Consider a symmetric, fully reversed, triangular strain history with amplitude $\\,\\varepsilon_{a}\\,$ and zero mean strain. One cycle is defined as a sequence of $\\,2N_{\\text{seg}}\\,$ equal strain increments that linearly ramp from $\\,{-}\\varepsilon_{a}\\,$ to $\\,{+}\\varepsilon_{a}\\,$ in $\\,N_{\\text{seg}}\\,$ steps and back to $\\,{-}\\varepsilon_{a}\\,$ in $\\,N_{\\text{seg}}\\,$ steps.\n- Start from zero internal variables $\\,\\varepsilon_{\\mathrm{p}}=0,\\;p=0,\\;\\alpha_{i}=0\\,$ and an initial strain of $\\,{-}\\varepsilon_{a}\\,$, then integrate one cycle. Repeat cycles until stabilization, defined as the maximum absolute difference between stress values at corresponding step indices in two consecutive cycles being below a tolerance $\\,\\tau\\,$. Use $\\,\\tau = 10^{-3}\\,$ megapascals.\n\nQuantities to report.\n\n- For the stabilized cycle, compute the stress amplitude\n$$\n\\sigma_{\\mathrm{amp}} = \\tfrac{1}{2}\\left(\\max_{k}\\sigma_{k} - \\min_{k}\\sigma_{k}\\right)\n$$\nand the mean stress\n$$\n\\sigma_{\\mathrm{mean}} = \\frac{1}{M}\\sum_{k=1}^{M}\\sigma_{k},\n$$\nwhere $\\,M = 2N_{\\text{seg}}\\,$ is the number of steps in one cycle. Express both $\\,\\sigma_{\\mathrm{amp}}\\,$ and $\\,\\sigma_{\\mathrm{mean}}\\,$ in megapascals (MPa), rounded to three decimal places.\n\nInput to your program is fixed by the test suite below; your program must hard-code these cases and produce outputs accordingly. No external input is allowed.\n\nTest suite. For each case, you are given $\\,E\\,$ (MPa), $\\,\\sigma_{y0}\\,$ (MPa), Voce parameters $\\,(\\sigma_{s}, b)\\,$ with $\\,\\sigma_{s}\\,$ in MPa and $\\,b\\,$ dimensionless, the Armstrong–Frederick kinematic hardening set $\\,\\{(C_{i},\\gamma_{i})\\}\\,$ (with $\\,C_{i}\\,$ in MPa and $\\,\\gamma_{i}\\,$ dimensionless), the strain amplitude $\\,\\varepsilon_{a}\\,$ (dimensionless), the number of equal strain segments per half cycle $\\,N_{\\text{seg}}\\,$, the stabilization tolerance $\\,\\tau\\,$ (MPa), and the maximum number of cycles $\\,N_{\\max}\\,$.\n- Case $\\,1\\,$ (mixed hardening, plastic cycling): $\\,E=210000\\,$, $\\,\\sigma_{y0}=250\\,$, $\\,\\sigma_{s}=450\\,$, $\\,b=10\\,$, $\\,\\{(C_{1},\\gamma_{1})=(120000,80),\\; (C_{2},\\gamma_{2})=(10000,8)\\}\\,$, $\\,\\varepsilon_{a}=0.01\\,$, $\\,N_{\\text{seg}}=400\\,$, $\\,\\tau=10^{-3}\\,$, $\\,N_{\\max}=80\\,$.\n- Case $\\,2\\,$ (nominally elastic cycling): $\\,E=70000\\,$, $\\,\\sigma_{y0}=300\\,$, $\\,\\sigma_{s}=400\\,$, $\\,b=5\\,$, $\\,\\{(C_{1},\\gamma_{1})=(5000,50)\\}\\,$, $\\,\\varepsilon_{a}=0.0005\\,$, $\\,N_{\\text{seg}}=200\\,$, $\\,\\tau=10^{-3}\\,$, $\\,N_{\\max}=20\\,$.\n- Case $\\,3\\,$ (purely kinematic hardening, $\\,b=0\\,$): $\\,E=200000\\,$, $\\,\\sigma_{y0}=200\\,$, $\\,\\sigma_{s}=200\\,$, $\\,b=0\\,$, $\\,\\{(C_{1},\\gamma_{1})=(50000,50)\\}\\,$, $\\,\\varepsilon_{a}=0.005\\,$, $\\,N_{\\text{seg}}=300\\,$, $\\,\\tau=10^{-3}\\,$, $\\,N_{\\max}=40\\,$.\n- Case $\\,4\\,$ (purely isotropic hardening, no kinematic backstress): $\\,E=210000\\,$, $\\,\\sigma_{y0}=250\\,$, $\\,\\sigma_{s}=450\\,$, $\\,b=20\\,$, empty kinematic set $\\,\\{\\}\\,$, $\\,\\varepsilon_{a}=0.01\\,$, $\\,N_{\\text{seg}}=400\\,$, $\\,\\tau=10^{-3}\\,$, $\\,N_{\\max}=80\\,$.\n\nYour program should produce a single line of output containing the results for the four test cases as a comma-separated list enclosed in square brackets, where each element is itself a two-element list $[\\sigma_{\\mathrm{amp}},\\sigma_{\\mathrm{mean}}]$ of floats rounded to three decimals, in the order of the cases above. For example, a valid output format is\n\"[ [a1,b1],[a2,b2],[a3,b3],[a4,b4] ]\" but without any spaces. Therefore, your program must print something like \"[[a1,b1],[a2,b2],[a3,b3],[a4,b4]]\", with all numbers in MPa and rounded to three decimals.", "solution": "The solution implements a numerical simulator for a uniaxial, small-strain, elasto-plastic material model with combined isotropic and kinematic hardening. The simulation follows the prescribed fully reversed, strain-controlled cyclic loading protocol to determine the stabilized hysteresis loop and associated stress characteristics.\n\nThe core of the implementation is a rate-independent, backward-Euler integration scheme, commonly known as a return-mapping algorithm. This is an elastic-predictor, plastic-corrector method. For each discrete strain increment $\\Delta\\varepsilon$ over a time step from $t_n$ to $t_{n+1}$, the algorithm proceeds as follows:\n\n1.  **State Variables**: The material state at the beginning of a step $n$ is defined by the plastic strain $\\varepsilon_{\\mathrm{p},n}$, the accumulated plastic strain $p_n$, and a set of $N$ internal backstress variables $\\alpha_{i,n}$.\n\n2.  **Elastic Predictor**: A trial stress, $\\sigma_{\\mathrm{tr}}$, is first computed assuming the entire strain increment is elastic:\n    $$\n    \\sigma_{\\mathrm{tr}} = E(\\varepsilon_{n+1} - \\varepsilon_{\\mathrm{p},n})\n    $$\n    where $E$ is the Young's modulus and $\\varepsilon_{n+1}$ is the total strain at the end of the step. The trial effective stress is $\\xi_{\\mathrm{tr}} = \\sigma_{\\mathrm{tr}} - \\alpha_n$, where $\\alpha_n = \\sum_i \\alpha_{i,n}$.\n\n3.  **Yield Criterion Check**: The trial state is checked against the yield condition. The yield surface size at step $n$ is $\\sigma_y(p_n)$. The yield function is $f_{\\mathrm{tr}} = |\\xi_{\\mathrm{tr}}| - \\sigma_y(p_n)$.\n    - If $f_{\\mathrm{tr}} \\le 0$, the step is elastic. The state variables are updated trivially: $\\sigma_{n+1} = \\sigma_{\\mathrm{tr}}$, and all internal variables remain unchanged ($\\varepsilon_{\\mathrm{p},n+1} = \\varepsilon_{\\mathrm{p},n}$, $p_{n+1}=p_n$, $\\alpha_{i,n+1}=\\alpha_{i,n}$).\n    - If $f_{\\mathrm{tr}} > 0$, plastic flow occurs. The state must be returned to the yield surface. This requires solving for the plastic multiplier increment, $\\Delta\\gamma \\ge 0$.\n\n4.  **Plastic Corrector**: For a plastic step, the state variables at step $n+1$ are functions of the unknown plastic multiplier $\\Delta\\gamma$:\n    $$\n    p_{n+1} = p_{n} + \\Delta\\gamma\n    $$\n    $$\n    \\varepsilon_{\\mathrm{p},n+1} = \\varepsilon_{\\mathrm{p},n} + \\Delta\\gamma\\,s\n    $$\n    where $s = \\mathrm{sign}(\\xi_{\\mathrm{tr}})$ defines the direction of plastic flow.\n    The hardening laws are integrated using a backward-Euler scheme:\n    $$\n    \\sigma_{y}(p_{n+1}) = \\sigma_{s} - (\\sigma_{s} - \\sigma_{y0})\\,\\mathrm{e}^{-b\\,p_{n+1}}\n    $$\n    $$\n    \\alpha_{i,n+1} = \\frac{\\alpha_{i,n} + C_{i}\\,\\Delta\\gamma\\,s}{1 + \\gamma_{i}\\,\\Delta\\gamma}\n    $$\n    The stress is updated consistent with the new plastic strain:\n    $$\n    \\sigma_{n+1} = E(\\varepsilon_{n+1} - \\varepsilon_{\\mathrm{p},n+1})\n    $$\n    The unknown $\\Delta\\gamma$ is found by enforcing the plastic consistency condition at the end of the step, $f_{n+1} = |\\sigma_{n+1} - \\alpha_{n+1}| - \\sigma_y(p_{n+1}) = 0$. This leads to the scalar nonlinear residual equation $g(\\Delta\\gamma)=0$:\n    $$\n    g(\\Delta\\gamma) := s(\\sigma_{n+1} - \\alpha_{n+1}) - \\sigma_{y}(p_{n+1}) = 0\n    $$\n    This equation is solved numerically for $\\Delta\\gamma$ using a robust Newton-Raphson method with a backtracking line search to ensure convergence and physical admissibility ($\\Delta\\gamma \\ge 0$). The derivative $\\frac{dg}{d\\Delta\\gamma}$, required for the Newton iteration, is provided in the problem statement and implemented accordingly.\n\nThe simulation proceeds by generating a triangular strain history for one cycle, starting from an initial state of zero for all internal variables at strain $-\\varepsilon_{a}$. This cycle is repeated, with the state at the end of one cycle serving as the initial state for the next. The simulation terminates when the maximum absolute difference in stress values between two consecutive cycles at corresponding points in time falls below a specified tolerance $\\tau$, indicating a stabilized hysteresis loop.\n\nUpon stabilization, the stress amplitude $\\sigma_{\\mathrm{amp}} = \\frac{1}{2}(\\max(\\sigma) - \\min(\\sigma))$ and mean stress $\\sigma_{\\mathrm{mean}} = \\frac{1}{M}\\sum_{k=1}^{M}\\sigma_{k}$ are computed from the stress history of the final cycle. The code is structured to handle the specified test cases, including pure isotropic ($N=0$) and pure kinematic ($b=0$) hardening as special cases of the general combined model.", "answer": "```python\nimport numpy as np\n\ndef run_simulation(E, sig_y0, sig_s, b, C_gamma_pairs, eps_a, N_seg, tau, N_max):\n    \"\"\"\n    Runs a single elasto-plastic cyclic simulation case.\n    \"\"\"\n    C = np.array([p[0] for p in C_gamma_pairs], dtype=float)\n    gamma = np.array([p[1] for p in C_gamma_pairs], dtype=float)\n    num_alpha = len(C_gamma_pairs)\n\n    # State variables\n    eps_p = 0.0\n    p = 0.0\n    alpha = np.zeros(num_alpha, dtype=float)\n\n    # Generate strain history for one full cycle\n    loading_path = np.linspace(-eps_a, eps_a, N_seg + 1)\n    unloading_path = np.linspace(eps_a, -eps_a, N_seg + 1)[1:]\n    strain_history = np.concatenate((loading_path, unloading_path))\n    \n    sigma_prev_cycle = np.zeros_like(strain_history)\n    sigma_current_cycle = np.zeros_like(strain_history)\n\n    # --- Newton solver's functions ---\n    def _g_func(delta_gamma, s, eps_total_n1, eps_p_n, p_n, alpha_n):\n        # Temporary updated values\n        sigma_n1 = E * (eps_total_n1 - eps_p_n - delta_gamma * s)\n        alpha_i_n1 = (alpha_n + C * delta_gamma * s) / (1 + gamma * delta_gamma)\n        alpha_n1_sum = np.sum(alpha_i_n1)\n\n        p_n1 = p_n + delta_gamma\n        if b != 0:\n            sigma_y_n1 = sig_s - (sig_s - sig_y0) * np.exp(-b * p_n1)\n        else:\n            sigma_y_n1 = sig_y0\n\n        return s * (sigma_n1 - alpha_n1_sum) - sigma_y_n1\n\n    def _g_prime_func(delta_gamma, s, p_n, alpha_n):\n        term1 = -E\n        \n        term2_num = C - s * gamma * alpha_n\n        term2_den = (1 + gamma * delta_gamma)**2\n        term2_sum = np.sum(term2_num / term2_den)\n\n        if b != 0:\n            term3 = b * (sig_s - sig_y0) * np.exp(-b * (p_n + delta_gamma))\n        else:\n            term3 = 0.0\n            \n        return term1 - term2_sum - term3\n\n    # Main cyclic loading loop\n    for cycle_num in range(N_max):\n        \n        # We don't reset state here; it carries over from the previous cycle.\n        \n        for k, eps_total_n1 in enumerate(strain_history):\n            # Store state at beginning of step\n            eps_p_n, p_n, alpha_n = eps_p, p, alpha\n\n            # --- Elastic Predictor ---\n            sigma_tr = E * (eps_total_n1 - eps_p_n)\n            alpha_sum_n = np.sum(alpha_n)\n            xi_tr = sigma_tr - alpha_sum_n\n            \n            if b != 0:\n                sigma_y_n = sig_s - (sig_s - sig_y0) * np.exp(-b * p_n)\n            else:\n                sigma_y_n = sig_y0\n            \n            f_tr = abs(xi_tr) - sigma_y_n\n\n            # --- Yield Check and Corrector ---\n            if f_tr <= 1e-9: # Elastic step (with tolerance)\n                sigma_n1 = sigma_tr\n                # State remains eps_p_n, p_n, alpha_n\n            else: # Plastic step\n                s = np.sign(xi_tr)\n                delta_gamma = 0.0\n                \n                # Newton-Raphson with line search\n                newton_tol = 1e-8\n                for _ in range(20):\n                    g_val = _g_func(delta_gamma, s, eps_total_n1, eps_p_n, p_n, alpha_n)\n                    if abs(g_val) < newton_tol:\n                        break\n                    \n                    g_prime_val = _g_prime_func(delta_gamma, s, p_n, alpha_n)\n                    if abs(g_prime_val) < 1e-9: # Avoid division by zero\n                        break \n                    \n                    inc = -g_val / g_prime_val\n                    \n                    # Backtracking line search\n                    step = 1.0\n                    for _ in range(10):\n                        delta_gamma_new = delta_gamma + step * inc\n                        if delta_gamma_new < 0:\n                            step /= 2.0\n                            continue\n                        g_new = _g_func(delta_gamma_new, s, eps_total_n1, eps_p_n, p_n, alpha_n)\n                        if abs(g_new) < abs(g_val):\n                            delta_gamma = delta_gamma_new\n                            break\n                        step /= 2.0\n                    else: # if line search fails\n                         delta_gamma += inc # take full step\n                \n                # Update state variables\n                eps_p = eps_p_n + delta_gamma * s\n                p = p_n + delta_gamma\n                alpha = (alpha_n + C * delta_gamma * s) / (1 + gamma * delta_gamma)\n                sigma_n1 = E * (eps_total_n1 - eps_p)\n            \n            sigma_current_cycle[k] = sigma_n1\n\n        # Check for stabilization\n        if cycle_num > 0:\n            diff = np.max(np.abs(sigma_current_cycle - sigma_prev_cycle))\n            if diff < tau:\n                break\n        \n        sigma_prev_cycle = sigma_current_cycle.copy()\n    \n    # Calculate final quantities\n    stabilized_stresses = sigma_current_cycle\n    sigma_amp = 0.5 * (np.max(stabilized_stresses) - np.min(stabilized_stresses))\n    sigma_mean = np.mean(stabilized_stresses[1:]) # Mean over M=2*N_seg steps\n\n    return [round(sigma_amp, 3), round(sigma_mean, 3)]\n\ndef solve():\n    test_cases = [\n        # Case 1 (mixed hardening, plastic cycling)\n        {'E': 210000, 'sig_y0': 250, 'sig_s': 450, 'b': 10, 'C_gamma_pairs': [(120000, 80), (10000, 8)], 'eps_a': 0.01, 'N_seg': 400, 'tau': 1e-3, 'N_max': 80},\n        # Case 2 (nominally elastic cycling)\n        {'E': 70000, 'sig_y0': 300, 'sig_s': 400, 'b': 5, 'C_gamma_pairs': [(5000, 50)], 'eps_a': 0.0005, 'N_seg': 200, 'tau': 1e-3, 'N_max': 20},\n        # Case 3 (purely kinematic hardening, b=0)\n        {'E': 200000, 'sig_y0': 200, 'sig_s': 200, 'b': 0, 'C_gamma_pairs': [(50000, 50)], 'eps_a': 0.005, 'N_seg': 300, 'tau': 1e-3, 'N_max': 40},\n        # Case 4 (purely isotropic hardening, no kinematic backstress)\n        {'E': 210000, 'sig_y0': 250, 'sig_s': 450, 'b': 20, 'C_gamma_pairs': [], 'eps_a': 0.01, 'N_seg': 400, 'tau': 1e-3, 'N_max': 80}\n    ]\n\n    results = []\n    for params in test_cases:\n        result = run_simulation(**params)\n        results.append(result)\n\n    # Format the final output string exactly as required\n    print(str(results).replace(' ', ''))\n\nsolve()\n```", "id": "2895944"}]}