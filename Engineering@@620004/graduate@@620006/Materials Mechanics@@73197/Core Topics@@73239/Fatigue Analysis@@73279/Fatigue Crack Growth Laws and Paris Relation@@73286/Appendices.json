{"hands_on_practices": [{"introduction": "A deep understanding of any physical law begins with its dimensional integrity. The Paris-Erdogan law, $da/dN = C(\\Delta K)^m$, provides the framework for our analysis, but its empirical constants must have consistent units. This foundational practice [@problem_id:2885911] will have you apply dimensional analysis to determine the physical units of the Paris constant $C$, a critical skill for correctly interpreting and using material data from different sources.", "problem": "A metallic structural specimen undergoes fatigue under cyclic loading in a regime where the crack growth rate per cycle is governed by a power-law dependence on the mode I stress intensity factor range. Let $a$ denote the crack length measured in meters, and let the mode I stress intensity factor range $\\Delta K$ be reported in megapascal-square-root meters, that is, $\\Delta K$ has units of $\\text{MPa}\\sqrt{\\text{m}}$, where megapascal (MPa) is $10^{6}$ pascals (Pa). The crack growth rate per cycle $da/d(\\text{cycle})$ is proportional to $(\\Delta K)^{m}$, with an unknown proportionality constant $C$ that depends on material and environment. Assume the International System of Units (SI) base units kilogram (kg), meter (m), and second (s), and take “cycle” to be a dimensionless count (you may track “per cycle” explicitly for clarity, but it does not introduce an SI base dimension).\n\nUsing dimensional analysis and starting from the fundamental fact that stress has units of pressure (pascal) with $1\\,\\text{Pa} = 1\\,\\text{kg}\\,\\text{m}^{-1}\\,\\text{s}^{-2}$ and the definition of the mode I stress intensity factor dimension $[\\Delta K] = [\\text{stress}]\\,[\\text{length}]^{1/2}$, determine the physical units that the proportionality constant $C$ must have so that the relation is dimensionally consistent for arbitrary real exponent $m$.\n\nReport your final answer as the row vector of exponents of the SI base units $(\\text{kg}, \\text{m}, \\text{s})$ for $C$ as a function of $m$, in that order. For example, an answer of the form $\\text{kg}^{\\alpha}\\,\\text{m}^{\\beta}\\,\\text{s}^{\\gamma}$ should be reported as the single row vector $(\\alpha, \\beta, \\gamma)$ using the specified order. No numerical evaluation is required.", "solution": "The task is to determine the units of the proportionality constant $C$ from the requirement of dimensional consistency. The crack growth law under consideration states that the crack growth rate per cycle is proportional to a power of the mode I stress intensity factor range. Denote the proportionality constant by $C$ and the exponent by $m$. The rate per cycle is $da/d(\\text{cycle})$, where $a$ has units of length.\n\nWe proceed by dimensional analysis using the International System of Units (SI) base units kilogram (kg), meter (m), and second (s), and we use the fundamental facts:\n- Stress is pressure, with units $[\\text{stress}] = [\\text{Pa}] = \\text{kg}\\,\\text{m}^{-1}\\,\\text{s}^{-2}$.\n- The mode I stress intensity factor $K$ has dimension $[\\text{stress}]\\,[\\text{length}]^{1/2}$, so $[K] = \\text{kg}\\,\\text{m}^{-1}\\,\\text{s}^{-2}\\cdot \\text{m}^{1/2} = \\text{kg}\\,\\text{m}^{-1/2}\\,\\text{s}^{-2}$.\n- The range $\\Delta K$ has the same dimensions as $K$, so $[\\Delta K] = \\text{kg}\\,\\text{m}^{-1/2}\\,\\text{s}^{-2}$. Reporting $K$ or $\\Delta K$ in megapascal-square-root meters, $\\text{MPa}\\sqrt{\\text{m}}$, does not change its dimensions relative to pascals, because the factor $10^{6}$ relating MPa to Pa is dimensionless; it only changes numerical magnitudes.\n\nThe crack growth rate per cycle $da/d(\\text{cycle})$ has units of length per cycle. Since “cycle” is a dimensionless count in SI, the SI base dimensions of $da/d(\\text{cycle})$ reduce to those of length:\n$$\n\\left[\\frac{da}{d(\\text{cycle})}\\right] = \\text{m}.\n$$\n\nThe proportionality relation implies that\n$$\n\\left[\\frac{da}{d(\\text{cycle})}\\right] = [C]\\,[\\Delta K]^{m}.\n$$\nSolving for the units of $C$ yields\n$$\n[C] = \\frac{\\left[\\dfrac{da}{d(\\text{cycle})}\\right]}{[\\Delta K]^{m}} = \\frac{\\text{m}}{\\left(\\text{kg}\\,\\text{m}^{-1/2}\\,\\text{s}^{-2}\\right)^{m}}.\n$$\nCarrying out the exponentiation in the denominator,\n$$\n[\\Delta K]^{m} = \\text{kg}^{m}\\,\\text{m}^{-m/2}\\,\\text{s}^{-2m}.\n$$\nTherefore,\n$$\n[C] = \\text{kg}^{-m}\\,\\text{m}^{1 + \\frac{m}{2}}\\,\\text{s}^{2m}.\n$$\n\nIf one prefers to keep track of the “per cycle” as a bookkeeping label, then one can also write the explicit engineering units in terms of megapascal (MPa) and meter (m) as\n$$\n[C] = \\text{MPa}^{-m}\\,\\text{m}^{\\,1 - \\frac{m}{2}}\\,\\text{cycle}^{-1},\n$$\nwhich is equivalent because $\\text{MPa}$ has the same dimensions as $\\text{Pa}$, and the factor $10^{6}$ is dimensionless. Expanding $\\text{MPa}^{-m}$ into SI base units recovers the expression\n$$\n[C] = \\text{kg}^{-m}\\,\\text{m}^{\\,1 + \\frac{m}{2}}\\,\\text{s}^{2m},\n$$\nwith “cycle” being dimensionless in SI.\n\nThe problem requests the final answer as the row vector of exponents of $(\\text{kg}, \\text{m}, \\text{s})$ in that order. Reading off the exponents from the SI base unit expression gives:\n- exponent of $\\text{kg}$: $-m$,\n- exponent of $\\text{m}$: $1 + \\dfrac{m}{2}$,\n- exponent of $\\text{s}$: $2m$.\n\nThus the requested row vector is $( -m,\\ 1 + \\dfrac{m}{2},\\ 2m )$.", "answer": "$$\\boxed{\\begin{pmatrix}-m & 1 + \\dfrac{m}{2} & 2m\\end{pmatrix}}$$", "id": "2885911"}, {"introduction": "Moving from theory to application, the central task in fatigue analysis is to predict the operational life of a cracked component. This is accomplished by integrating the Paris law over the crack growth interval, a process that rarely has a simple analytical solution for real geometries. This practical exercise [@problem_id:2885969] challenges you to implement a numerical quadrature to compute fatigue life, directly translating the differential crack growth equation into a tangible life prediction for an engineering structure.", "problem": "A structural plate contains a single edge crack subjected to cyclic remote tension. You are to compute the number of load cycles required for the crack to grow from an initial length $a_i$ to a final length $a_f$ under constant-amplitude cyclic stress. Your derivation and algorithm must start from the following fundamental base, without assuming any closed-form integration result:\n- The stress intensity factor range for Mode I loading is defined by $\\Delta K(a) = Y(a/W)\\,\\Delta \\sigma \\,\\sqrt{\\pi a}$, where $Y(a/W)$ is a dimensionless geometry correction function, $W$ is the plate width, $a$ is the crack length, and $\\Delta \\sigma$ is the applied far-field stress range.\n- The fatigue crack growth rate in the Paris regime follows an empirically well-tested power-law dependence on stress intensity factor range, characterized by material constants $C$ and $m$.\n- The number of cycles $N$ required to grow from $a_i$ to $a_f$ is determined by integrating the reciprocal of the crack growth rate over $a$.\n\nUse numerical quadrature to evaluate the definite integral that gives $N$. No closed-form anti-derivative is permitted; you must carry out the integration numerically with sufficient accuracy. Adopt the following scientifically accepted polynomial approximation for the single-edge-cracked plate geometry factor (valid for $0 \\le a/W \\lesssim 0.6$):\n$$\nY(\\alpha) \\equiv Y\\!\\left(\\frac{a}{W}\\right) = 1.12 - 0.231\\,\\alpha + 10.55\\,\\alpha^2 - 21.72\\,\\alpha^3 + 30.39\\,\\alpha^4,\n$$\nwhere $\\alpha = a/W$.\n\nPhysical and numerical units:\n- Use the International System of Units (SI). Crack lengths $a$, $a_i$, $a_f$, and width $W$ must be expressed in meters. Stresses $\\Delta \\sigma$ must be expressed in megapascals (MPa). The stress intensity factor range $\\Delta K$ is then in $\\text{MPa}\\sqrt{\\text{m}}$.\n- The material constant $C$ must be in units of $\\text{m/cycle} \\cdot (\\text{MPa}\\sqrt{\\text{m}})^{-m}$ so that the crack growth rate is in $\\text{m/cycle}$.\n- Output the number of cycles in cycles (dimensionless), rounded to six decimal places.\n\nTest suite:\nCompute the number of cycles $N$ for crack growth from $a_i = 1\\,\\text{mm}$ to $a_f = 10\\,\\text{mm}$ for each of the following parameter sets. Convert millimeters to meters inside your computation: $1\\,\\text{mm} = 1.0\\times 10^{-3}\\,\\text{m}$ and $10\\,\\text{mm} = 1.0\\times 10^{-2}\\,\\text{m}$. Ensure all $a/W$ values in the integration domain remain within the stated validity range of $Y(\\alpha)$.\n- Case $1$ (happy path): $W = 50\\,\\text{mm}$, $\\Delta \\sigma = 100\\,\\text{MPa}$, $C = 1.0\\times 10^{-12}$, $m = 3.0$.\n- Case $2$ (reduced stress range): $W = 50\\,\\text{mm}$, $\\Delta \\sigma = 50\\,\\text{MPa}$, $C = 1.0\\times 10^{-12}$, $m = 3.0$.\n- Case $3$ (increased exponent): $W = 50\\,\\text{mm}$, $\\Delta \\sigma = 100\\,\\text{MPa}$, $C = 1.0\\times 10^{-12}$, $m = 4.0$.\n- Case $4$ (narrower plate, boundary of geometry validity): $W = 25\\,\\text{mm}$, $\\Delta \\sigma = 100\\,\\text{MPa}$, $C = 1.0\\times 10^{-12}$, $m = 3.0$.\n- Case $5$ (different material constants): $W = 40\\,\\text{mm}$, $\\Delta \\sigma = 80\\,\\text{MPa}$, $C = 5.0\\times 10^{-13}$, $m = 3.2$.\n\nAlgorithmic requirements:\n- Your program must, for each case, numerically evaluate the integral defining $N$ over $a \\in [a_i,a_f]$ using a robust quadrature method with absolute and relative tolerances sufficiently small to ensure at least six correct digits in the result.\n- Treat $Y(a/W)$ exactly as given above, with $a$ and $W$ consistently in meters.\n- Verify that $a/W \\le 0.6$ throughout the integration interval for each case; if this condition is violated for any test case, the computation would be invalid (however, the provided test suite is constructed to satisfy this condition).\n\nFinal output format:\n- Your program should produce a single line of output containing the results for the five cases as a comma-separated list enclosed in square brackets, with each value rounded to six decimal places in cycles (e.g., $[n_1,n_2,n_3,n_4,n_5]$).", "solution": "The problem statement is subjected to validation before a solution is attempted.\n\n**Step 1: Extracted Givens**\n- Fatigue crack growth rate law: Implicitly given as the Paris-Erdogan law, $da/dN = f(\\Delta K)$.\n- Explicit form of the law: $da/dN = C(\\Delta K)^m$.\n- Stress intensity factor range for Mode I: $\\Delta K(a) = Y(a/W)\\,\\Delta \\sigma \\,\\sqrt{\\pi a}$.\n- Geometry correction function for a single-edge-cracked plate: $Y(\\alpha) = 1.12 - 0.231\\,\\alpha + 10.55\\,\\alpha^2 - 21.72\\,\\alpha^3 + 30.39\\,\\alpha^4$, where $\\alpha = a/W$.\n- Validity range for $Y(\\alpha)$: $0 \\le a/W \\lesssim 0.6$.\n- Number of cycles $N$ for crack growth from $a_i$ to $a_f$: $N = \\int_{a_i}^{a_f} \\frac{1}{da/dN} \\, da$.\n- Numerical evaluation requirement: The integral for $N$ must be computed using numerical quadrature, not a closed-form anti-derivative.\n- Units: Crack lengths ($a, a_i, a_f, W$) in meters (m), stress range $\\Delta \\sigma$ in megapascals (MPa), $\\Delta K$ in $\\text{MPa}\\sqrt{\\text{m}}$, and the material constant $C$ in $\\text{m/cycle} \\cdot (\\text{MPa}\\sqrt{\\text{m}})^{-m}$.\n- Initial and final crack lengths: $a_i = 1\\,\\text{mm} = 1.0 \\times 10^{-3}\\,\\text{m}$, $a_f = 10\\,\\text{mm} = 1.0 \\times 10^{-2}\\,\\text{m}$.\n- Test Cases:\n  - Case $1$: $W = 50\\,\\text{mm} = 5.0 \\times 10^{-2}\\,\\text{m}$, $\\Delta \\sigma = 100\\,\\text{MPa}$, $C = 1.0 \\times 10^{-12}$, $m = 3.0$.\n  - Case $2$: $W = 50\\,\\text{mm} = 5.0 \\times 10^{-2}\\,\\text{m}$, $\\Delta \\sigma = 50\\,\\text{MPa}$, $C = 1.0 \\times 10^{-12}$, $m = 3.0$.\n  - Case $3$: $W = 50\\,\\text{mm} = 5.0 \\times 10^{-2}\\,\\text{m}$, $\\Delta \\sigma = 100\\,\\text{MPa}$, $C = 1.0 \\times 10^{-12}$, $m = 4.0$.\n  - Case $4$: $W = 25\\,\\text{mm} = 2.5 \\times 10^{-2}\\,\\text{m}$, $\\Delta \\sigma = 100\\,\\text{MPa}$, $C = 1.0 \\times 10^{-12}$, $m = 3.0$.\n  - Case $5$: $W = 40\\,\\text{mm} = 4.0 \\times 10^{-2}\\,\\text{m}$, $\\Delta \\sigma = 80\\,\\text{MPa}$, $C = 5.0 \\times 10^{-13}$, $m = 3.2$.\n- Algorithmic requirement: Verify that $a/W \\le 0.6$ for the integration interval $[a_i, a_f]$.\n\n**Step 2: Validation Using Extracted Givens**\n- **Scientifically Grounded and Objective**: The problem is based on the well-established principles of linear elastic fracture mechanics, specifically the Paris-Erdogan law for fatigue crack growth. This is a standard and fundamental concept in materials science and mechanical engineering. The formulation is objective and uses precise, standard terminology.\n- **Well-Posed**: The problem is well-posed. It requires the computation of a definite integral of a function that is continuous and well-behaved over the specified integration interval, $[a_i, a_f]$, since $a_i > 0$. A unique, stable solution for the number of cycles $N$ exists.\n- **Incomplete or Contradictory Setup**: The problem is self-contained. All necessary material constants, geometric parameters, and loading conditions are provided for each test case. The units are internally consistent. The validity condition for the geometry function, $a/W \\le 0.6$, must be checked. For all cases, the maximum crack length is $a_f = 1.0 \\times 10^{-2}\\,\\text{m}$.\n  - Case $1$: $a_f/W = (1.0 \\times 10^{-2}) / (5.0 \\times 10^{-2}) = 0.2 \\le 0.6$. Valid.\n  - Case $2$: $a_f/W = (1.0 \\times 10^{-2}) / (5.0 \\times 10^{-2}) = 0.2 \\le 0.6$. Valid.\n  - Case $3$: $a_f/W = (1.0 \\times 10^{-2}) / (5.0 \\times 10^{-2}) = 0.2 \\le 0.6$. Valid.\n  - Case $4$: $a_f/W = (1.0 \\times 10^{-2}) / (2.5 \\times 10^{-2}) = 0.4 \\le 0.6$. Valid.\n  - Case $5$: $a_f/W = (1.0 \\times 10^{-2}) / (4.0 \\times 10^{-2}) = 0.25 \\le 0.6$. Valid.\nThe validity condition is satisfied for all test cases over the entire integration domain.\n- **Unrealistic or Infeasible**: The provided material parameters and stress levels are realistic for common engineering alloys, such as steel or aluminum, under cyclic loading conditions.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically sound, well-posed, and complete. It is **valid**. A solution will be provided.\n\n**Solution Derivation**\nThe fundamental relationship between the crack growth rate, $da/dN$, and the number of load cycles, $N$, is given by separating variables from the differential form:\n$$ dN = \\frac{da}{da/dN} $$\nTo find the total number of cycles, $N$, required for a crack to grow from an initial length $a_i$ to a final length $a_f$, we must integrate this expression over the crack length interval:\n$$ N = \\int_{a_i}^{a_f} \\frac{1}{da/dN} \\, da $$\nThe rate of fatigue crack growth, $da/dN$, is governed by the Paris-Erdogan law, which relates the growth rate to the range of the stress intensity factor, $\\Delta K$:\n$$ \\frac{da}{dN} = C (\\Delta K)^m $$\nwhere $C$ and $m$ are empirical material constants.\n\nSubstituting the Paris law into the integral for $N$ yields:\n$$ N = \\int_{a_i}^{a_f} \\frac{1}{C (\\Delta K)^m} \\, da $$\nThe stress intensity factor range, $\\Delta K$, is a function of the applied stress range $\\Delta \\sigma$, the crack length $a$, and the geometry of the component. For the specified single-edge-cracked plate, it is given by:\n$$ \\Delta K(a) = Y(\\alpha) \\Delta \\sigma \\sqrt{\\pi a} $$\nwhere $\\alpha = a/W$ and $Y(\\alpha)$ is the dimensionless geometry correction factor, provided as a polynomial:\n$$ Y(\\alpha) = 1.12 - 0.231\\,\\alpha + 10.55\\,\\alpha^2 - 21.72\\,\\alpha^3 + 30.39\\,\\alpha^4 $$\nBy substituting the expression for $\\Delta K(a)$ into the integral for $N$, we obtain the complete integrand:\n$$ N = \\int_{a_i}^{a_f} \\frac{1}{C \\left( Y(a/W) \\Delta \\sigma \\sqrt{\\pi a} \\right)^m} \\, da $$\nThis can be rewritten to isolate the constant terms from the integral:\n$$ N = \\frac{1}{C (\\Delta \\sigma)^m (\\pi)^{m/2}} \\int_{a_i}^{a_f} \\frac{1}{\\left( Y(a/W) \\sqrt{a} \\right)^m} \\, da $$\nDue to the polynomial form of $Y(a/W)$, this integral does not have a general closed-form analytical solution. Therefore, as mandated by the problem, numerical quadrature is the correct and necessary method for its evaluation. We define the integrand function $f(a)$:\n$$ f(a) = \\frac{1}{C \\left( Y(a/W) \\Delta \\sigma \\sqrt{\\pi a} \\right)^m} $$\nThe number of cycles is then $N = \\int_{a_i}^{a_f} f(a) \\, da$. This definite integral will be computed for each test case using a robust numerical quadrature algorithm, ensuring consistent use of SI units for all physical quantities. The crack lengths $a$, $a_i$, $a_f$, and plate width $W$ are in meters ($m$). The stress range $\\Delta \\sigma$ is in megapascals ($MPa$). The Paris constant $C$ is in $\\text{m/cycle} \\cdot (\\text{MPa}\\sqrt{\\text{m}})^{-m}$. The resulting value for $N$ will be a dimensionless quantity representing the number of cycles.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import integrate\n\ndef solve():\n    \"\"\"\n    Computes the number of fatigue cycles for crack growth using numerical integration\n    of the Paris law.\n    \"\"\"\n    \n    # Define the initial and final crack lengths in meters.\n    a_i = 1.0e-3  # m\n    a_f = 1.0e-2  # m\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (W_m, delta_sigma_MPa, C, m)\n    # W_m is the plate width in meters.\n    # delta_sigma_MPa is the stress range in MPa.\n    # C is the Paris law constant in m/cycle * (MPa*sqrt(m))^-m.\n    # m is the Paris law exponent (dimensionless).\n    test_cases = [\n        # Case 1: Happy path\n        (50.0e-3, 100.0, 1.0e-12, 3.0),\n        # Case 2: Reduced stress range\n        (50.0e-3, 50.0, 1.0e-12, 3.0),\n        # Case 3: Increased exponent\n        (50.0e-3, 100.0, 1.0e-12, 4.0),\n        # Case 4: Narrower plate\n        (25.0e-3, 100.0, 1.0e-12, 3.0),\n        # Case 5: Different material constants\n        (40.0e-3, 80.0, 5.0e-13, 3.2),\n    ]\n\n    results = []\n    \n    # Polynomial coefficients for the geometry function Y(alpha), where alpha = a/W.\n    # Y(alpha) = c0 + c1*alpha + c2*alpha^2 + c3*alpha^3 + c4*alpha^4\n    Y_coeffs = np.array([30.39, -21.72, 10.55, -0.231, 1.12])\n\n    def Y(alpha):\n        \"\"\"\n        Computes the geometry correction factor Y for a given alpha = a/W.\n        \"\"\"\n        return np.polyval(Y_coeffs, alpha)\n\n    for case in test_cases:\n        W_m, delta_sigma_MPa, C, m = case\n\n        def integrand(a):\n            \"\"\"\n            Defines the function 1 / (da/dN) to be integrated with respect to crack length 'a'.\n            All units must be consistent (SI/MPa based).\n            \n            Args:\n                a (float): Crack length in meters.\n\n            Returns:\n                float: The value of 1 / (da/dN) in units of cycles/m.\n            \"\"\"\n            # Calculate dimensionless crack length ratio\n            alpha = a / W_m\n\n            # Check if a/W is within the valid range for the geometry function Y.\n            # The problem statement guarantees this, but it is good practice.\n            if not (0 <= alpha <= 0.6):\n                # This should not be reached with the given test cases.\n                # Return infinity to signal an error if quad explores outside the domain.\n                return np.inf\n            \n            # Calculate geometry factor\n            Y_val = Y(alpha)\n            \n            # Calculate stress intensity factor range (MPa*sqrt(m))\n            delta_K = Y_val * delta_sigma_MPa * np.sqrt(np.pi * a)\n            \n            # Calculate crack growth rate (m/cycle) using Paris law\n            da_dN = C * (delta_K ** m)\n            \n            # The function to integrate is the reciprocal of the growth rate\n            return 1.0 / da_dN\n\n        # Perform numerical integration from a_i to a_f\n        # quad returns a tuple (result, error_estimate)\n        N_cycles, _ = integrate.quad(\n            integrand, \n            a_i, \n            a_f,\n            epsabs=1e-9, # Absolute tolerance for high accuracy\n            epsrel=1e-9  # Relative tolerance for high accuracy\n        )\n        \n        results.append(N_cycles)\n\n    # Final print statement must be in the exact required format.\n    # Each value is formatted to six decimal places.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2885969"}, {"introduction": "Simple, constant-amplitude loading is a useful idealization, but real-world components experience complex load histories that profoundly alter fatigue crack growth. Phenomena such as crack closure and retardation from overloads can significantly extend component life and must be accounted for. This advanced simulation exercise [@problem_id:2885943] requires you to build a cycle-by-cycle model that incorporates these critical load-interaction effects, offering a deep dive into the sophisticated methods used for accurate life prediction under variable-amplitude service loading.", "problem": "You are asked to implement a simulation of fatigue crack growth for a single-edge cracked finite-width plate under a prescribed block spectrum of cyclic loading. The crack growth per cycle is governed by a power-law relation in terms of the effective stress-intensity range, corrected by a crack-closure function and a retardation factor. The simulation must explicitly iterate cycle-by-cycle to accumulate crack advance. All physical quantities must be treated in the International System of Units (SI) where applicable, with stress in megapascals, length in meters, and the stress-intensity factor in megapascals times the square root of meters.\n\nStart from the following foundational facts and definitions.\n\n1) Stress-intensity factor under Mode I loading for a finite-width single-edge cracked plate: the range is constructed from the maximum and minimum levels per cycle. For each cycle at a crack length $a$ and plate width $W$, treat\n$$\nY\\left(\\frac{a}{W}\\right) = 1.12 - 0.231\\left(\\frac{a}{W}\\right) + 10.55\\left(\\frac{a}{W}\\right)^2 - 21.72\\left(\\frac{a}{W}\\right)^3 + 30.39\\left(\\frac{a}{W}\\right)^4,\n$$\nand define the maximum and minimum Mode I stress-intensity factors as\n$$\nK_{\\max} = Y\\left(\\frac{a}{W}\\right)\\,\\sigma_{\\max}\\,\\sqrt{\\pi a},\\quad\nK_{\\min} = Y\\left(\\frac{a}{W}\\right)\\,\\sigma_{\\min}\\,\\sqrt{\\pi a},\n$$\nwhere $\\sigma_{\\max}$ and $\\sigma_{\\min}$ are the maximum and minimum applied nominal stresses within the cycle, respectively. The stress ratio is $R=\\sigma_{\\min}/\\sigma_{\\max}$, and the range is $\\Delta K = K_{\\max}-K_{\\min} = (1-R)\\,K_{\\max}$.\n\n2) Effective range via crack closure based on Newman's empirical crack-opening estimate for plane stress: define\n$$\n\\phi(R) = 0.825 - 0.34\\,R + 0.05\\,R^2,\n$$\nclipped to the interval $[0,1]$. The crack opening ratio is $K_{\\mathrm{op}}/K_{\\max}=\\phi(R)$ for $-1 \\le R \\le 1$, with clipping applied for any $R$ outside that range. The crack-opening function is\n$$\nU(R) = \\frac{K_{\\max} - K_{\\mathrm{op}}}{\\Delta K} = \\frac{1 - \\phi(R)}{1 - R},\n$$\nclipped to the interval $[0,1]$, and interpreted in the limit as $U(R)=1$ when $R\\to 1$ such that $\\Delta K \\to 0$. The effective range is $\\Delta K_{\\mathrm{eff}} = U(R)\\,\\Delta K$.\n\n3) Retardation through a Wheeler-type plastic-zone model: suppose the yield strength is $\\sigma_{y}$. For the cycle designated as an overload event, compute the plane-stress monotonic plastic-zone size at the overload tip:\n$$\nr_{p,\\mathrm{ol}} = \\frac{1}{2\\pi}\\left(\\frac{K_{\\max,\\mathrm{ol}}}{\\sigma_{y}}\\right)^2,\n$$\nand record the crack length at overload as $a_{\\mathrm{ol}}$. For subsequent cycles, until the crack tip has reached $a \\ge a_{\\mathrm{ol}} + r_{p,\\mathrm{ol}}$, apply a retardation factor\n$$\nf_{\\mathrm{ret}} = \\left(\\max\\left\\{0,\\frac{a_{\\mathrm{ol}} + r_{p,\\mathrm{ol}} - a}{r_{p,\\mathrm{ol}}}\\right\\}\\right)^{\\gamma_{w}},\n$$\nwith a given Wheeler exponent $\\gamma_{w}$. When $a \\ge a_{\\mathrm{ol}} + r_{p,\\mathrm{ol}}$, set $f_{\\mathrm{ret}}=1$ until the next overload. If a new overload occurs before the prior overload plastic zone is exhausted, overwrite $a_{\\mathrm{ol}}$ and $r_{p,\\mathrm{ol}}$ using the new overload cycle’s $K_{\\max}$.\n\nYour program must:\n- For each cycle, compute $Y$, $K_{\\max}$, $K_{\\min}$, $\\Delta K$, $U(R)$, $\\Delta K_{\\mathrm{eff}}$, and $f_{\\mathrm{ret}}$.\n- Advance the crack length by a per-cycle increment that scales as a power-law in the effective range using provided material constants $C$ and $m$.\n- Accumulate total crack growth across the entire block spectrum.\n- Output the total crack advance $\\Delta a = a_{\\mathrm{final}} - a_{0}$ for each test case.\n\nScientific realism constraints:\n- Use the units consistently: $\\sigma$ and $\\sigma_{y}$ in megapascals, $a$ and $W$ in meters, $K$ in $\\mathrm{MPa}\\sqrt{\\mathrm{m}}$, and the material coefficient $C$ in $\\mathrm{m}/\\mathrm{cycle}/(\\mathrm{MPa}\\sqrt{\\mathrm{m}})^{m}$.\n- Use plane-stress plastic-zone scaling factor $1/(2\\pi)$ as shown above.\n- Use the stress-intensity factor geometry function $Y(a/W)$ as given above without modification.\n- Use $\\gamma_{w} = 1.0$.\n\nNumerical instructions:\n- For each test case, produce a single floating-point number equal to the total crack advance $\\Delta a$ in meters, rounded to $10^{-12}$ meters.\n- Angles do not appear, so no angle units are required.\n\nTest suite:\nImplement the following three test cases. For each case, you are given the plate width $W$, initial crack length $a_{0}$, yield strength $\\sigma_{y}$, material constants $C$ and $m$, and a block spectrum consisting of load segments. Each load segment is a tuple $\\left(N_{i}, \\sigma_{\\max,i}, R_{i}, \\mathrm{OL}_{i}\\right)$ meaning $N_{i}$ consecutive cycles at that level, where $R_{i}=\\sigma_{\\min,i}/\\sigma_{\\max,i}$ and $\\mathrm{OL}_{i}$ is a boolean indicating whether the first cycle of that segment is an overload event for the retardation model. The overload event, if present, must update $a_{\\mathrm{ol}}$ and $r_{p,\\mathrm{ol}}$ after the increment of that overload cycle is applied.\n\n- Test case $1$:\n  - $W = 0.10$ meters, $a_{0} = 0.005$ meters, $\\sigma_{y} = 350$ megapascals, $C = 2.0\\times 10^{-12}$, $m = 3.2$.\n  - Block spectrum:\n    - $\\left(1000, 120, 0.10, \\mathrm{false}\\right)$\n    - $\\left(1, 220, 0.10, \\mathrm{true}\\right)$\n    - $\\left(2000, 120, 0.10, \\mathrm{false}\\right)$\n    - $\\left(1000, 140, 0.30, \\mathrm{false}\\right)$\n\n- Test case $2$:\n  - $W = 0.08$ meters, $a_{0} = 0.004$ meters, $\\sigma_{y} = 400$ megapascals, $C = 1.5\\times 10^{-12}$, $m = 3.0$.\n  - Block spectrum:\n    - $\\left(3000, 100, -0.30, \\mathrm{false}\\right)$\n    - $\\left(1000, 140, 0.00, \\mathrm{false}\\right)$\n\n- Test case $3$:\n  - $W = 0.06$ meters, $a_{0} = 0.020$ meters, $\\sigma_{y} = 500$ megapascals, $C = 5.0\\times 10^{-13}$, $m = 3.5$.\n  - Block spectrum:\n    - $\\left(800, 160, 0.40, \\mathrm{false}\\right)$\n    - $\\left(1, 260, 0.40, \\mathrm{true}\\right)$\n    - $\\left(1500, 160, 0.40, \\mathrm{false}\\right)$\n    - $\\left(1, 300, 0.40, \\mathrm{true}\\right)$\n    - $\\left(1000, 170, 0.40, \\mathrm{false}\\right)$\n\nAlgorithmic and implementation requirements:\n- Iterate cycle-by-cycle in the order provided. Within each segment, treat the very first cycle as an overload if and only if $\\mathrm{OL}_{i}=\\mathrm{true}$; otherwise it is a regular cycle.\n- Use the clipping rules for $\\phi(R)$ and $U(R)$ as described.\n- For numerical robustness, if $R$ is so close to $1$ that $1-R &lt; 10^{-9}$, set $U(R)=1$ for that cycle.\n- If during the simulation $a/W$ exceeds $0.6$, continue to use the same $Y(a/W)$ relation for this problem.\n- The required final output format is a single line containing a Python-style list with the three results in order, with each result rounded to $10^{-12}$ meters. For example, the printed line must look like\n  $$\n  [x_{1},x_{2},x_{3}]\n  $$\n  where $x_{i}$ are decimal numbers in meters.\n\nYour program must be a complete, runnable script that produces exactly this one-line output and nothing else.", "solution": "The problem statement has been rigorously validated. It is scientifically grounded, well-posed, objective, and internally consistent. It presents a standard, albeit complex, problem in computational fracture mechanics, requiring the numerical integration of a fatigue crack growth law under variable amplitude loading. The provided models—the polynomial geometry function for the stress-intensity factor, Newman's crack closure model, and the Wheeler retardation model—are established components in the field. All necessary parameters, boundary conditions, and material constants are provided for each test case. The instructions for the numerical algorithm, including specific handling of overload events and numerical stability considerations, are explicit and sufficient for developing an unambiguous implementation. The problem is deemed valid and a solution will be provided.\n\nThe task is to simulate the cycle-by-cycle growth of a fatigue crack in a single-edge cracked plate subjected to a block loading spectrum. The total crack extension, $\\Delta a$, is the required output for each of three test cases.\n\nThe core of the simulation is the crack growth law, which integrates the effects of the applied stress range, crack closure, and overload-induced retardation. The crack growth increment per cycle, $\\Delta a_{\\text{cycle}}$, is given by a modified Paris law:\n$$\n\\frac{da}{dN} \\approx \\Delta a_{\\text{cycle}} = f_{\\text{ret}} \\cdot C \\cdot (\\Delta K_{\\text{eff}})^m\n$$\nwhere $C$ and $m$ are material constants, $\\Delta K_{\\text{eff}}$ is the effective stress-intensity factor range, and $f_{\\text{ret}}$ is the retardation factor. The simulation proceeds by accumulating these increments over the total number of cycles specified in the loading spectrum.\n\nThe calculation for each cycle with a current crack length $a$ proceeds as follows:\n\nFirst, the geometry correction factor for a finite-width plate, $Y(a/W)$, is computed using the given polynomial:\n$$\nY\\left(\\frac{a}{W}\\right) = 1.12 - 0.231\\left(\\frac{a}{W}\\right) + 10.55\\left(\\frac{a}{W}\\right)^2 - 21.72\\left(\\frac{a}{W}\\right)^3 + 30.39\\left(\\frac{a}{W}\\right)^4\n$$\nwhere $W$ is the plate width.\n\nSecond, the maximum and minimum stress-intensity factors, $K_{\\max}$ and $K_{\\min}$, for the current cycle with stresses $\\sigma_{\\max}$ and $\\sigma_{\\min}$ are calculated:\n$$\nK_{\\max} = Y\\left(\\frac{a}{W}\\right)\\,\\sigma_{\\max}\\,\\sqrt{\\pi a}\n$$\n$$\nK_{\\min} = Y\\left(\\frac{a}{W}\\right)\\,\\sigma_{\\min}\\,\\sqrt{\\pi a}\n$$\nThe stress-intensity factor range is $\\Delta K = K_{\\max} - K_{\\min}$.\n\nThird, the effect of crack closure is incorporated to determine the effective stress-intensity factor range, $\\Delta K_{\\text{eff}}$. This is based on Newman's empirical model. The stress ratio for the cycle is $R = \\sigma_{\\min}/\\sigma_{\\max}$. The crack opening function $\\phi(R)$ is first calculated. The input $R$ is clipped to the interval $[-1, 1]$ before being used in the formula, and the output is clipped to $[0, 1]$:\n$$\nR_{\\text{clipped}} = \\max(-1, \\min(1, R))\n$$\n$$\n\\phi(R) = \\text{clip}_{[0,1]}\\left(0.825 - 0.34\\,R_{\\text{clipped}} + 0.05\\,R_{\\text{clipped}}^2\\right)\n$$\nThe crack closure parameter $U(R)$ is then determined. For numerical stability when $R \\to 1$, if $1-R < 10^{-9}$, $U(R)$ is set to $1$. Otherwise, it is calculated as:\n$$\nU(R) = \\frac{1 - \\phi(R)}{1 - R}\n$$\nThis result is also clipped to the interval $[0, 1]$. The effective range is then:\n$$\n\\Delta K_{\\text{eff}} = U(R)\\,\\Delta K\n$$\n\nFourth, the retardation factor, $f_{\\text{ret}}$, is calculated based on the Wheeler model. This model accounts for the compressive residual stresses within the plastic zone created by a prior overload. An overload is defined by its maximum stress-intensity factor, $K_{\\max,\\text{ol}}$, and the crack length at which it occurred, $a_{\\text{ol}}$. The associated plastic zone size is:\n$$\nr_{p,\\text{ol}} = \\frac{1}{2\\pi}\\left(\\frac{K_{\\max,\\text{ol}}}{\\sigma_{y}}\\right)^2\n$$\nwhere $\\sigma_y$ is the material's yield strength. For subsequent cycles, as long as the current crack tip at length $a$ is within this overload plastic zone (i.e., $a < a_{\\text{ol}} + r_{p,\\text{ol}}$), the retardation factor is applied:\n$$\nf_{\\text{ret}} = \\left(\\frac{a_{\\text{ol}} + r_{p,\\text{ol}} - a}{r_{p,\\text{ol}}}\\right)^{\\gamma_{w}}\n$$\nwhere the Wheeler exponent is given as $\\gamma_w = 1.0$. If the crack has grown beyond the overload plastic zone ($a \\ge a_{\\text{ol}} + r_{p,\\text{ol}}$), no retardation occurs, and $f_{\\text{ret}} = 1$. Initially, no overload is active. If a new overload occurs, its corresponding $a_{\\text{ol}}$ and $r_{p,\\text{ol}}$ overwrite any previous values.\n\nThe computational procedure is a direct implementation of these steps in a cycle-by-cycle loop.\n\n1.  Initialize state variables for each test case: current crack length $a \\leftarrow a_0$, and overload parameters $a_{\\text{ol}}$ and $r_{p,\\text{ol}}$ to indicate no active retardation.\n2.  Iterate through the specified loading blocks. For each block, iterate for the specified number of cycles, $N_i$.\n3.  In each cycle, calculate the crack growth increment $\\Delta a_{\\text{cycle}}$ using the current value of $a$ and the cycle's loading parameters ($\\sigma_{\\max}$, $R$).\n4.  Update the crack length: $a \\leftarrow a + \\Delta a_{\\text{cycle}}$.\n5.  If the current cycle is designated as an overload, its $K_{\\max}$ is recorded as $K_{\\max,\\text{ol}}$. The new overload plastic zone size $r_{p,\\text{ol}}$ is computed. The overload crack length $a_{\\text{ol}}$ is set to the *newly updated* crack length $a$, as per the problem's explicit instruction.\n6.  After all cycles in all blocks are completed, the total crack advance is computed as $\\Delta a = a_{\\text{final}} - a_0$.\n\nThis algorithm is applied to each of the three test cases using their respective parameters and loading spectra. The final results are rounded to the specified precision of $10^{-12}$ meters.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the fatigue crack growth simulation for all test cases.\n    \"\"\"\n\n    # Test cases defined in the problem statement\n    test_cases = [\n        {\n            \"W\": 0.10, \"a0\": 0.005, \"sigma_y\": 350,\n            \"C\": 2.0e-12, \"m\": 3.2,\n            \"spectrum\": [\n                (1000, 120, 0.10, False),\n                (1, 220, 0.10, True),\n                (2000, 120, 0.10, False),\n                (1000, 140, 0.30, False),\n            ]\n        },\n        {\n            \"W\": 0.08, \"a0\": 0.004, \"sigma_y\": 400,\n            \"C\": 1.5e-12, \"m\": 3.0,\n            \"spectrum\": [\n                (3000, 100, -0.30, False),\n                (1000, 140, 0.00, False),\n            ]\n        },\n        {\n            \"W\": 0.06, \"a0\": 0.020, \"sigma_y\": 500,\n            \"C\": 5.0e-13, \"m\": 3.5,\n            \"spectrum\": [\n                (800, 160, 0.40, False),\n                (1, 260, 0.40, True),\n                (1500, 160, 0.40, False),\n                (1, 300, 0.40, True),\n                (1000, 170, 0.40, False),\n            ]\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        delta_a = run_simulation(case)\n        results.append(round(delta_a, 12))\n\n    print(f\"[{','.join(map(str, results))}]\")\n\n\ndef run_simulation(params):\n    \"\"\"\n    Performs the cycle-by-cycle fatigue crack growth simulation for a single test case.\n    \"\"\"\n    W = params[\"W\"]\n    a = params[\"a0\"]\n    a0 = params[\"a0\"]\n    sigma_y = params[\"sigma_y\"]\n    C = params[\"C\"]\n    m = params[\"m\"]\n    spectrum = params[\"spectrum\"]\n    gamma_w = 1.0\n\n    # Retardation state variables\n    a_ol = -1.0  # Crack length at last overload, initialized to indicate no overload\n    r_p_ol = 0.0   # Plastic zone size of last overload\n\n    for (N_cycles, sigma_max, R, is_ol_segment) in spectrum:\n        sigma_min = R * sigma_max\n        \n        for cycle in range(1, N_cycles + 1):\n            # 1. Geometry Factor Y(a/W)\n            x = a / W\n            Y = 1.12 - 0.231*x + 10.55*x**2 - 21.72*x**3 + 30.39*x**4\n            \n            # 2. Stress-Intensity Factor (SIF) calculations\n            K_max = Y * sigma_max * np.sqrt(np.pi * a)\n            delta_K = K_max * (1 - R)\n\n            # 3. Effective SIF range (Crack Closure)\n            R_clipped = np.clip(R, -1.0, 1.0)\n            phi_val = 0.825 - 0.34*R_clipped + 0.05*R_clipped**2\n            phi = np.clip(phi_val, 0.0, 1.0)\n            \n            if (1.0 - R) < 1e-9:\n                U = 1.0\n            else:\n                U = (1.0 - phi) / (1.0 - R)\n            U = np.clip(U, 0.0, 1.0)\n            \n            delta_K_eff = U * delta_K\n\n            # 4. Retardation Factor (Wheeler Model)\n            if a < a_ol + r_p_ol:\n                f_ret = ((a_ol + r_p_ol - a) / r_p_ol)**gamma_w\n                f_ret = max(0.0, f_ret)\n            else:\n                f_ret = 1.0\n\n            # 5. Crack growth increment\n            da = f_ret * C * (delta_K_eff**m)\n\n            # 6. Update crack length\n            a += da\n\n            # 7. Overload update logic\n            is_overload_cycle = (cycle == 1 and is_ol_segment)\n            if is_overload_cycle:\n                # Update retardation parameters based on this overload cycle\n                # Note: K_max_ol is the K_max calculated in this very cycle\n                K_max_ol = K_max\n                # Plane-stress monotonic plastic zone size\n                r_p_ol_new = (1.0 / (2.0 * np.pi)) * (K_max_ol / sigma_y)**2\n                # Overwrite old values\n                r_p_ol = r_p_ol_new\n                a_ol = a  # Use the *new* crack length as specified\n    \n    return a - a0\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2885943"}]}