{"hands_on_practices": [{"introduction": "The cornerstone of simulating coupled plasticity and damage lies in the numerical integration of the constitutive equations at each material point. This practice focuses on developing the essential stress update algorithm for a general three-dimensional solid using the von Mises (J2) plasticity theory combined with isotropic damage under the strain equivalence hypothesis [@problem_id:2626285]. Mastering this fully implicit return-mapping procedure is the foundational step for any finite element implementation, as it teaches how to correctly evolve the material state variables (stress, plastic strain, and damage) over a discrete time step.", "problem": "A small-strain, isotropic, damage-coupled von Mises (J2) elastoplastic solid follows the strain-equivalence hypothesis. Let $d \\in [0,1)$ denote the scalar damage variable. The undamaged (effective) stress is defined by $\\tilde{\\boldsymbol{\\sigma}} = \\mathbb{C} : \\boldsymbol{\\varepsilon}^{e}$ with $\\boldsymbol{\\varepsilon}^{e} = \\boldsymbol{\\varepsilon} - \\boldsymbol{\\varepsilon}^{p}$ and the isotropic linear-elastic stiffness $\\mathbb{C}$ determined by Youngâ€™s modulus $E$ and Poisson's ratio $\\nu$. The Cauchy stress obeys strain equivalence as $\\boldsymbol{\\sigma} = (1-d)\\,\\tilde{\\boldsymbol{\\sigma}}$. Plasticity is governed by a von Mises yield condition expressed in effective stress and linear isotropic hardening,\n$$\nf(\\tilde{\\boldsymbol{\\sigma}},\\bar{\\varepsilon}^{p}) = \\left\\| \\tilde{\\boldsymbol{s}} \\right\\| - \\sqrt{\\frac{2}{3}}\\left(\\sigma_{y0} + H\\,\\bar{\\varepsilon}^{p}\\right) \\le 0,\n$$\nwhere $\\tilde{\\boldsymbol{s}} = \\tilde{\\boldsymbol{\\sigma}} - \\tfrac{1}{3}(\\operatorname{tr}\\tilde{\\boldsymbol{\\sigma}})\\boldsymbol{I}$ is the deviatoric part, $\\|\\cdot\\|$ is the Frobenius norm, $\\sigma_{y0}$ is the initial yield stress, $H$ is the isotropic hardening modulus, and $\\bar{\\varepsilon}^{p}$ is the accumulated equivalent plastic strain. The associative flow rule and hardening are\n$$\n\\dot{\\boldsymbol{\\varepsilon}}^{p} = \\dot{\\gamma}\\,\\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}, \n\\qquad\n\\dot{\\bar{\\varepsilon}}^{p} = \\sqrt{\\frac{2}{3}}\\,\\dot{\\gamma},\n\\qquad\n\\dot{\\gamma} \\ge 0,\n\\qquad\n\\dot{\\gamma}\\, f = 0.\n$$\nDamage evolves according to a linear softening law driven by the accumulated equivalent plastic strain,\n$$\nd = a\\,\\bar{\\varepsilon}^{p},\n$$\nwith a known constant $a>0$ and $d<1$ in the loading history considered.\n\nConsider a single implicit time step from state $n$ to state $n+1$ with given total strain increment and known previous internal variables. Assume the following data are given at the start of the step:\n- $E = 210{,}000$ $\\mathrm{MPa}$, $\\nu = 0.3$, $\\sigma_{y0} = 250$ $\\mathrm{MPa}$, $H = 1{,}000$ $\\mathrm{MPa}$, $a = 0.2$.\n- $\\boldsymbol{\\varepsilon}^{p}_{n} = \\boldsymbol{0}$, $\\bar{\\varepsilon}^{p}_{n} = 0$, $d_{n} = 0$.\n- The imposed small-strain tensor at $n+1$ is purely deviatoric,\n$$\n\\boldsymbol{\\varepsilon}_{n+1} = \n\\begin{pmatrix}\n1.5 \\times 10^{-3} & 0 & 0 \\\\\n0 & -7.5 \\times 10^{-4} & 0 \\\\\n0 & 0 & -7.5 \\times 10^{-4}\n\\end{pmatrix}.\n$$\n\nTasks:\n1) Starting from the principle of strain equivalence, linear elasticity, and the von Mises (J2) framework above, derive a fully implicit, return-mapping stress update in effective stress space that includes: construction of the trial effective state, yield check, and the plastic correction (if needed). Clearly state the equations that define the plastic multiplier increment $\\Delta \\gamma$, the updated effective stress, the updated accumulated equivalent plastic strain, and the updated damage at $n+1$.\n\n2) Using your derived update, compute the plastic multiplier increment $\\Delta \\gamma$ for the given step. Express your final numerical answer for $\\Delta \\gamma$ as a pure number (dimensionless), rounded to four significant figures. No other outputs are required. Use the given material constants in $\\mathrm{MPa}$, and note that strain is dimensionless.", "solution": "The problem statement is first subjected to rigorous validation.\n\n**Step 1: Extract Givens**\n\n- **Constitutive Relations**:\n    - Strain equivalence: $\\boldsymbol{\\sigma} = (1-d)\\,\\tilde{\\boldsymbol{\\sigma}}$\n    - Effective stress-strain (Hooke's Law): $\\tilde{\\boldsymbol{\\sigma}} = \\mathbb{C} : \\boldsymbol{\\varepsilon}^{e}$\n    - Strain decomposition: $\\boldsymbol{\\varepsilon}^{e} = \\boldsymbol{\\varepsilon} - \\boldsymbol{\\varepsilon}^{p}$\n    - Isotropic elastic stiffness $\\mathbb{C}$ defined by Young's modulus $E$ and Poisson's ratio $\\nu$.\n    - Damage variable: $d \\in [0,1)$\n- **Plasticity Model**:\n    - Yield function: $f(\\tilde{\\boldsymbol{\\sigma}},\\bar{\\varepsilon}^{p}) = \\left\\| \\tilde{\\boldsymbol{s}} \\right\\| - \\sqrt{\\frac{2}{3}}\\left(\\sigma_{y0} + H\\,\\bar{\\varepsilon}^{p}\\right) \\le 0$, where $\\tilde{\\boldsymbol{s}} = \\operatorname{dev}(\\tilde{\\boldsymbol{\\sigma}})$.\n    - Associative flow rule: $\\dot{\\boldsymbol{\\varepsilon}}^{p} = \\dot{\\gamma}\\,\\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}$\n    - Hardening law: $\\dot{\\bar{\\varepsilon}}^{p} = \\sqrt{\\frac{2}{3}}\\,\\dot{\\gamma}$\n    - Kuhn-Tucker conditions: $\\dot{\\gamma} \\ge 0, \\quad \\dot{\\gamma}\\, f = 0$\n- **Damage Evolution**:\n    - $d = a\\,\\bar{\\varepsilon}^{p}$ with constant $a>0$.\n- **Material Constants**:\n    - $E = 210,000$ $\\mathrm{MPa}$\n    - $\\nu = 0.3$\n    - $\\sigma_{y0} = 250$ $\\mathrm{MPa}$\n    - $H = 1,000$ $\\mathrm{MPa}$\n    - $a = 0.2$\n- **Initial Conditions (State $n$)**:\n    - $\\boldsymbol{\\varepsilon}^{p}_{n} = \\boldsymbol{0}$\n    - $\\bar{\\varepsilon}^{p}_{n} = 0$\n    - $d_{n} = 0$\n- **Imposed Strain (State $n+1$)**:\n    - $\\boldsymbol{\\varepsilon}_{n+1} = \\begin{pmatrix} 1.5 \\times 10^{-3} & 0 & 0 \\\\ 0 & -7.5 \\times 10^{-4} & 0 \\\\ 0 & 0 & -7.5 \\times 10^{-4} \\end{pmatrix}$\n\n**Step 2: Validate Using Extracted Givens**\n\nThe problem is assessed for validity.\n- **Scientific Soundness**: The problem describes a standard, widely-used model in computational solid mechanics, specifically a J2 elastoplastic model coupled with isotropic damage through the principle of strain equivalence. The governing equations are based on fundamental principles of continuum mechanics. All aspects are scientifically grounded.\n- **Well-Posedness and Completeness**: The problem is structured as a standard implicit time integration step. It provides all necessary constitutive laws, material parameters, and initial/boundary conditions (in the form of a prescribed total strain) to compute the state variables at the next step. The objective is clearly defined. The problem is self-contained and well-posed.\n- **Objectivity**: The language is precise and uses standard mathematical and engineering terminology. There are no subjective or ambiguous statements.\n\n**Step 3: Verdict and Action**\n\nThe problem is valid. A rigorous solution will be developed.\n\n---\n\n**Part 1: Derivation of the Implicit Stress Update Algorithm**\n\nThe update procedure follows the standard elastic-predictor, plastic-corrector methodology for a single implicit time step from state $n$ to $n+1$. All quantities at $n+1$ are unknown unless specified. We use $\\Delta(\\cdot) = (\\cdot)_{n+1} - (\\cdot)_{n}$.\n\nFirst, it is critical to observe the structure of the model. The plasticity evolution (yield function, flow rule, hardening) is formulated entirely in the effective stress space and is independent of the damage variable $d$. Damage evolution is driven by plastic strain, but it does not feed back into the determination of the plastic state. This represents a one-way coupling from plasticity to damage, which simplifies the algorithm: the plastic return mapping can be performed first, and the damage variable updated subsequently.\n\n**1. Elastic Predictor (Trial State)**\nAssume the step is purely elastic, so $\\Delta\\boldsymbol{\\varepsilon}^{p} = \\boldsymbol{0}$ and $\\Delta\\bar{\\varepsilon}^{p} = 0$. The internal variables at step $n+1$ are frozen at their values from step $n$:\n$\\boldsymbol{\\varepsilon}^{p,\\text{trial}} = \\boldsymbol{\\varepsilon}^{p}_{n}$ and $\\bar{\\varepsilon}^{p,\\text{trial}} = \\bar{\\varepsilon}^{p}_{n}$.\n\nThe trial elastic strain is $\\boldsymbol{\\varepsilon}^{e,\\text{trial}} = \\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n}$.\nThe trial effective stress is computed using Hooke's law:\n$$\n\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} = \\mathbb{C} : \\boldsymbol{\\varepsilon}^{e,\\text{trial}} = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n})\n$$\nThe deviatoric part is $\\tilde{\\boldsymbol{s}}^{\\text{trial}} = \\operatorname{dev}(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}})$.\n\n**2. Yield Check**\nThe trial state is checked against the yield condition:\n$$\nf^{\\text{trial}} = f(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}, \\bar{\\varepsilon}^{p}_{n}) = \\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - \\sqrt{\\frac{2}{3}} (\\sigma_{y0} + H \\bar{\\varepsilon}^{p}_{n})\n$$\nIf $f^{\\text{trial}} \\le 0$, the elastic assumption is correct. The step is elastic, $\\Delta\\gamma = 0$. The final state is the trial state: $\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}$, $\\boldsymbol{\\varepsilon}^{p}_{n+1} = \\boldsymbol{\\varepsilon}^{p}_{n}$, $\\bar{\\varepsilon}^{p}_{n+1} = \\bar{\\varepsilon}^{p}_{n}$, $d_{n+1} = d_{n}$.\nIf $f^{\\text{trial}} > 0$, plastic flow occurs. A plastic correction is necessary.\n\n**3. Plastic Corrector (Return Mapping)**\nIf plasticity occurs, the state at $n+1$ must satisfy the integrated evolution equations and the consistency condition $f(\\tilde{\\boldsymbol{\\sigma}}_{n+1}, \\bar{\\varepsilon}^{p}_{n+1}) = 0$. We use a backward Euler integration scheme.\n\nThe plastic strain increment is $\\Delta\\boldsymbol{\\varepsilon}^{p} = \\Delta\\gamma \\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}\\Big|_{n+1}$. The normal to the von Mises yield surface is $\\boldsymbol{N}_{n+1} = \\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}\\Big|_{n+1} = \\frac{\\tilde{\\boldsymbol{s}}_{n+1}}{\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|}$. Thus, $\\Delta\\boldsymbol{\\varepsilon}^{p} = \\Delta\\gamma \\frac{\\tilde{\\boldsymbol{s}}_{n+1}}{\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|}$.\nThe stress at $n+1$ is related to the trial stress:\n$$\n\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n+1}) = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n} - \\Delta\\boldsymbol{\\varepsilon}^{p}) = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} - \\mathbb{C} : \\Delta\\boldsymbol{\\varepsilon}^{p}\n$$\nFor isotropic elasticity, $\\mathbb{C}:\\Delta\\boldsymbol{\\varepsilon}^{p} = 2G \\Delta\\boldsymbol{\\varepsilon}^{p} + \\lambda \\operatorname{tr}(\\Delta\\boldsymbol{\\varepsilon}^{p})\\boldsymbol{I}$. Since $\\boldsymbol{N}_{n+1}$ is deviatoric, $\\operatorname{tr}(\\Delta\\boldsymbol{\\varepsilon}^{p}) = 0$, so $\\mathbb{C}:\\Delta\\boldsymbol{\\varepsilon}^{p} = 2G \\Delta\\boldsymbol{\\varepsilon}^{p}$, where $G = \\frac{E}{2(1+\\nu)}$ is the shear modulus.\n$$\n\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} - 2G \\Delta\\boldsymbol{\\varepsilon}^{p}\n$$\nThe deviatoric part of this equation is $\\tilde{\\boldsymbol{s}}_{n+1} = \\tilde{\\boldsymbol{s}}^{\\text{trial}} - 2G \\Delta\\boldsymbol{\\varepsilon}^{p} = \\tilde{\\boldsymbol{s}}^{\\text{trial}} - 2G \\Delta\\gamma \\frac{\\tilde{\\boldsymbol{s}}_{n+1}}{\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|}$.\nThis equation shows that $\\tilde{\\boldsymbol{s}}_{n+1}$ and $\\tilde{\\boldsymbol{s}}^{\\text{trial}}$ are coaxial. Taking the Frobenius norm yields the standard radial return mapping for the deviatoric stress magnitude:\n$$\n\\|\\tilde{\\boldsymbol{s}}_{n+1}\\| = \\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - 2G \\Delta\\gamma\n$$\nThe accumulated plastic strain is updated as $\\bar{\\varepsilon}^{p}_{n+1} = \\bar{\\varepsilon}^{p}_{n} + \\Delta\\bar{\\varepsilon}^{p} = \\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma$.\nSubstituting $\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|$ and $\\bar{\\varepsilon}^{p}_{n+1}$ into the consistency condition $f_{n+1} = 0$:\n$$\n\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - 2G \\Delta\\gamma - \\sqrt{\\frac{2}{3}}[\\sigma_{y0} + H(\\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma)] = 0\n$$\nSolving this linear equation for $\\Delta\\gamma$:\n$$\n\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - \\sqrt{\\frac{2}{3}}(\\sigma_{y0} + H\\bar{\\varepsilon}^{p}_{n}) = \\Delta\\gamma (2G + \\frac{2}{3}H)\n$$\nThe left side is exactly the trial yield function value, $f^{\\text{trial}}$. Therefore, the plastic multiplier increment is:\n$$\n\\Delta\\gamma = \\frac{f^{\\text{trial}}}{2G + \\frac{2}{3}H}\n$$\nOnce $\\Delta\\gamma$ is known, the internal variables at $n+1$ are updated:\n- Accumulated equivalent plastic strain: $\\bar{\\varepsilon}^{p}_{n+1} = \\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma$\n- Effective stress: $\\tilde{\\boldsymbol{s}}_{n+1} = (1 - \\frac{2G\\Delta\\gamma}{\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\|})\\tilde{\\boldsymbol{s}}^{\\text{trial}}$. The hydrostatic part is unchanged, $\\operatorname{tr}(\\tilde{\\boldsymbol{\\sigma}}_{n+1})=\\operatorname{tr}(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}})$, so $\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\tilde{\\boldsymbol{s}}_{n+1} + \\frac{1}{3}\\operatorname{tr}(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}})\\boldsymbol{I}$.\n- Damage: $d_{n+1} = a\\,\\bar{\\varepsilon}^{p}_{n+1} = a(\\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma)$\n\nThis completes the derivation of the update algorithm.\n\n**Part 2: Numerical Computation for the Given Step**\n\nWe apply the derived formulas to the given data.\n\n**1. Elastic Constants**\n$E = 210000$ $\\mathrm{MPa}$, $\\nu = 0.3$.\nShear modulus: $G = \\frac{E}{2(1+\\nu)} = \\frac{210000}{2(1+0.3)} = \\frac{210000}{2.6} \\approx 80769.23$ $\\mathrm{MPa}$.\n\n**2. Trial State Calculation**\nInitial conditions: $\\boldsymbol{\\varepsilon}^{p}_{n} = \\boldsymbol{0}$ and $\\bar{\\varepsilon}^{p}_{n}=0$.\nThe imposed strain $\\boldsymbol{\\varepsilon}_{n+1}$ has $\\operatorname{tr}(\\boldsymbol{\\varepsilon}_{n+1}) = 1.5 \\times 10^{-3} - 7.5 \\times 10^{-4} - 7.5 \\times 10^{-4} = 0$, so it is purely deviatoric.\nThe trial elastic strain is $\\boldsymbol{\\varepsilon}^{e,\\text{trial}} = \\boldsymbol{\\varepsilon}_{n+1}$.\nThe trial effective stress is $\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} = 2G \\boldsymbol{\\varepsilon}_{n+1} + \\lambda \\operatorname{tr}(\\boldsymbol{\\varepsilon}_{n+1})\\boldsymbol{I} = 2G \\boldsymbol{\\varepsilon}_{n+1}$.\nSince $\\boldsymbol{\\varepsilon}_{n+1}$ is deviatoric, $\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}$ is also deviatoric, so $\\tilde{\\boldsymbol{s}}^{\\text{trial}} = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}$.\n\nThe Frobenius norm of the trial deviatoric stress is $\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| = 2G \\|\\boldsymbol{\\varepsilon}_{n+1}\\|$.\n$\\|\\boldsymbol{\\varepsilon}_{n+1}\\| = \\sqrt{(1.5 \\times 10^{-3})^2 + (-7.5 \\times 10^{-4})^2 + (-7.5 \\times 10^{-4})^2}$\n$\\|\\boldsymbol{\\varepsilon}_{n+1}\\| = \\sqrt{2.25 \\times 10^{-6} + 0.5625 \\times 10^{-6} + 0.5625 \\times 10^{-6}} = \\sqrt{3.375 \\times 10^{-6}}$.\n\n$\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| = 2 \\left(\\frac{210000}{2.6}\\right) \\sqrt{3.375 \\times 10^{-6}} = \\frac{420000}{2.6} \\times \\sqrt{3.375} \\times 10^{-3} \\approx 296.730349$ $\\mathrm{MPa}$.\n\n**3. Yield Check**\nWith $\\bar{\\varepsilon}^{p}_{n}=0$, the trial yield function is:\n$f^{\\text{trial}} = \\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - \\sqrt{\\frac{2}{3}}\\sigma_{y0}$\n$f^{\\text{trial}} \\approx 296.730349 - \\sqrt{\\frac{2}{3}}(250) \\approx 296.730349 - 204.124145 = 92.606204$ $\\mathrm{MPa}$.\nSince $f^{\\text{trial}} > 0$, the step is elastoplastic.\n\n**4. Plastic Multiplier Increment $\\Delta\\gamma$**\nThe plastic multiplier increment is computed as:\n$$\n\\Delta\\gamma = \\frac{f^{\\text{trial}}}{2G + \\frac{2}{3}H}\n$$\nThe denominator is:\n$2G + \\frac{2}{3}H = 2\\left(\\frac{210000}{2.6}\\right) + \\frac{2}{3}(1000) = \\frac{420000}{2.6} + \\frac{2000}{3} \\approx 161538.4615 + 666.6667 = 162205.1282$ $\\mathrm{MPa}$.\n\nNow, we compute $\\Delta\\gamma$:\n$$\n\\Delta\\gamma = \\frac{92.606204}{162205.1282} \\approx 0.0005709218\n$$\nThe plastic multiplier increment is dimensionless. Rounding to four significant figures, we obtain $\\Delta\\gamma = 0.0005709$.", "answer": "$$\\boxed{0.0005709}$$", "id": "2626285"}, {"introduction": "Moving from a single incremental update to a robust simulation of a full loading path introduces new challenges related to numerical stability and path-dependency. This exercise guides you through implementing a one-dimensional coupled model with adaptive sub-stepping, a crucial technique for handling the complex interactions between plastic flow and damage accumulation [@problem_id:2874214]. By checking for thermodynamic consistencyâ€”ensuring non-negative dissipationâ€”and enforcing admissibility criteria at each step, you will build a resilient solver that can navigate the stiff and rapidly evolving response typical of softening materials.", "problem": "Consider a small-strain, one-dimensional, rate-independent, coupled elastoplasticity-with-damage solid subjected to a prescribed monotonic tensile strain history. The material has scalar isotropic damage and linear isotropic hardening plasticity. Assume the following fundamental and widely accepted bases:\n\n- The Cauchy stress $\\sigma$ is derived from a scalar Helmholtz free energy density $\\psi$ via thermodynamic conjugacy, with the Clausius-Duhem inequality for isothermal processes requiring non-negative mechanical dissipation.\n- The elastic strain is $\\epsilon_{\\mathrm{e}} = \\epsilon - \\epsilon_{\\mathrm{p}}$, where $\\epsilon$ is the total strain and $\\epsilon_{\\mathrm{p}}$ is the plastic strain.\n- Small-strain kinematics and uniaxial stress state apply.\n- The damage variable $D$ is a scalar in $[0,1)$, degrading the elastic stiffness multiplicatively and not healing, i.e., $\\dot{D} \\ge 0$.\n\nModel definitions to be used:\n\n- Free energy density $\\,\\psi\\,$ per unit reference volume:\n$$\n\\psi(\\epsilon,\\epsilon_{\\mathrm{p}},\\kappa,D) = (1 - D)\\,\\frac{1}{2}\\,E\\,(\\epsilon - \\epsilon_{\\mathrm{p}})^2 + \\frac{1}{2}\\,H\\,\\kappa^2,\n$$\nwhere $E$ is Youngâ€™s modulus, $H$ is the linear isotropic hardening modulus, and $\\kappa$ is the accumulated plastic strain with $\\dot{\\kappa} = |\\dot{\\epsilon}_{\\mathrm{p}}|$.\n\n- Effective stress (strain-equivalence hypothesis): \n$$\n\\tilde{\\sigma} = E\\,(\\epsilon - \\epsilon_{\\mathrm{p}}).\n$$\n\n- Observable stress:\n$$\n\\sigma = (1 - D)\\,\\tilde{\\sigma}.\n$$\n\n- Yield function with isotropic hardening (no direct damage softening of the yield stress):\n$$\nf(\\tilde{\\sigma},\\kappa) = \\tilde{\\sigma} - \\left(\\sigma_{y0} + H\\,\\kappa\\right) \\le 0,\n$$\nwhere $\\sigma_{y0}$ is the initial yield stress.\n\n- Associated flow rule and Kuhn-Tucker conditions for rate-independent plasticity in monotonic tension:\n$$\n\\dot{\\epsilon}_{\\mathrm{p}} = \\dot{\\lambda},\\quad \\dot{\\kappa} = \\dot{\\lambda},\\quad \\dot{\\lambda} \\ge 0,\\quad f \\le 0,\\quad \\dot{\\lambda}\\,f = 0.\n$$\n\n- Energy release rate driving damage:\n$$\nY = -\\frac{\\partial \\psi}{\\partial D} = \\frac{1}{2} E\\,(\\epsilon - \\epsilon_{\\mathrm{p}})^2 = \\frac{1}{2}\\,\\tilde{\\sigma}\\,(\\epsilon - \\epsilon_{\\mathrm{p}}).\n$$\n\n- Coupled damage evolution law activated by plastic flow (monotonic tension so $\\dot{\\epsilon}_{\\mathrm{p}} \\ge 0$):\n$$\n\\dot{D} = \\left(\\frac{Y}{S}\\right)\\,\\dot{\\lambda},\\quad D \\in [0,D_{\\max}),\n$$\nwhere $S$ is a positive damage resistance parameter and $D_{\\max} \\in (0,1)$ is a prescribed admissible upper bound to avoid loss of ellipticity.\n\nDiscretization requirement:\n\n- The total strain history is a monotonic linear ramp from $0$ to a prescribed final value $\\epsilon_{\\mathrm{final}}$ over a fixed number of macro-increments $M$. Within each macro-increment, use implicit backward Euler time integration and a standard return-mapping algorithm for plasticity. Evaluate the damage increment using the fully implicit value of the driving force at the end of the increment. If an attempted substep violates admissibility or stability as defined below, subdivide that macro-increment adaptively (bisection) until the substep is accepted.\n\nNumerical stability and acceptance criteria per substep from $\\epsilon_n$ to $\\epsilon_{n+1}$:\n\n- Admissibility: the updated damage $D_{n+1}$ must satisfy $D_{n+1} \\le D_{\\max}$ and $D_{n+1} \\ge 0$.\n- Energy consistency: define the incremental external work by the trapezoidal rule\n$$\nW_{n\\to n+1} = \\frac{1}{2}\\,(\\sigma_n + \\sigma_{n+1})\\,(\\epsilon_{n+1}-\\epsilon_n),\n$$\nand let the stored energy increment be $\\Delta \\psi = \\psi_{n+1} - \\psi_n$. The incremental dissipation is\n$$\n\\mathcal{D}_{n\\to n+1} = W_{n\\to n+1} - \\Delta \\psi.\n$$\nRequire $\\mathcal{D}_{n\\to n+1} \\ge -\\text{tol}$ for a small specified tolerance $\\text{tol} > 0$. If this is not satisfied, halve the substep and retry. The total dissipation over the full loading path is\n$$\n\\mathcal{D}_{\\mathrm{tot}} = \\sum \\mathcal{D}_{n\\to n+1} = W_{\\mathrm{tot}} - (\\psi_{\\mathrm{final}} - \\psi_0),\n$$\nwith $\\psi_0 = 0$ at zero strain and zero internal variables.\n\nImplementation constraints:\n\n- Use implicit backward Euler for all internal variable updates.\n- In the plastic regime, enforce the yield consistency condition at the end of the substep.\n- Use adaptive substepping within each macro-increment to satisfy the acceptance criteria.\n- Assume monotonic tension so $\\dot{\\epsilon}_{\\mathrm{p}} \\ge 0$ and $\\dot{\\kappa} \\ge 0$.\n- Start from the stress-free and damage-free state: $\\epsilon_{\\mathrm{p}}(0)=0$, $\\kappa(0)=0$, $D(0)=0$, $\\sigma(0)=0$, $\\psi(0)=0$.\n\nUnits:\n\n- Use megapascals for stress-like quantities and energy density (since $1\\,\\text{MPa} = 1\\,\\text{MJ}/\\text{m}^3$).\n- Strain is dimensionless.\n- Express the final reported stress in $\\text{MPa}$ and strains as dimensionless numbers.\n\nRequired outputs per test case:\n\n- The final stress $\\sigma_{\\mathrm{final}}$ in $\\text{MPa}$ as a floating-point number.\n- The final plastic strain $\\epsilon_{\\mathrm{p,final}}$ as a floating-point number.\n- The final damage $D_{\\mathrm{final}}$ as a floating-point number.\n- A boolean indicating whether the total dissipation satisfies $\\mathcal{D}_{\\mathrm{tot}} \\ge -\\text{tol}$.\n- The total number of accepted substeps used over the entire loading path as an integer.\n\nTest suite:\n\nFor each test case, the parameters are given as the tuple $(E, H, \\sigma_{y0}, S, D_{\\max}, \\epsilon_{\\mathrm{final}}, M, \\text{tol})$ with $E$, $H$, $\\sigma_{y0}$, $S$ in $\\text{MPa}$, $D_{\\max}$ dimensionless, $\\epsilon_{\\mathrm{final}}$ dimensionless, $M$ an integer number of macro-increments, and $\\text{tol}$ in $\\text{MPa}$.\n\n- Case 1 (purely elastic target): $(210000, 10000, 250, 500, 0.95, 0.0005, 10, 1\\times 10^{-8})$.\n- Case 2 (moderate plasticity and mild damage): $(210000, 10000, 250, 500, 0.95, 0.003, 20, 1\\times 10^{-8})$.\n- Case 3 (large step, strong coupling, adaptive refinement expected): $(210000, 5000, 200, 200, 0.90, 0.02, 5, 1\\times 10^{-8})$.\n- Case 4 (very strong hardening, plasticity suppressed): $(70000, 1000000, 300, 800, 0.95, 0.005, 10, 1\\times 10^{-8})$.\n\nTask:\n\n- Implement a program that performs the described integration with adaptive substepping and stability checks for each test case, and outputs the results.\n\nFinal output format:\n\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element corresponds to one test case and is itself a list in the order $[\\sigma_{\\mathrm{final}}, \\epsilon_{\\mathrm{p,final}}, D_{\\mathrm{final}}, \\text{dissipation\\_ok}, \\text{substeps}]$. For example: $[[\\dots],[\\dots],[\\dots],[\\dots]]$.", "solution": "The problem is valid as it presents a well-posed, scientifically grounded task in computational continuum mechanics. It is complete, objective, and non-trivial. I will proceed with the derivation and implementation of the numerical solution.\n\nThe core of the problem is to solve the evolution of internal state variablesâ€”plastic strain $\\epsilon_{\\mathrm{p}}$, accumulated plastic strain $\\kappa$, and damage $D$â€”for a prescribed monotonic tensile strain history $\\epsilon(t)$. The numerical solution is formulated using a backward Euler implicit integration scheme for a time increment from $t_n$ to $t_{n+1}$. The state at time $t_n$, denoted with subscript $n$, is known: $(\\epsilon_n, \\sigma_n, \\epsilon_{\\mathrm{p},n}, \\kappa_n, D_n)$. The total strain at the end of the increment, $\\epsilon_{n+1}$, is given. We must find the state at $t_{n+1}$.\n\nThe solution procedure for a single strain increment $\\Delta\\epsilon = \\epsilon_{n+1} - \\epsilon_n$ follows a standard return-mapping algorithm, where we first predict an elastic response and then, if necessary, correct for plastic flow.\n\n**1. Elastic Trial Step**\n\nWe begin by assuming the step is purely elastic. This means the internal variables do not change. The trial state, denoted by the superscript `trial`, at $t_{n+1}$ is:\n$$ \\epsilon_{\\mathrm{p},n+1}^{\\text{trial}} = \\epsilon_{\\mathrm{p},n} $$\n$$ \\kappa_{n+1}^{\\text{trial}} = \\kappa_n $$\n$$ D_{n+1}^{\\text{trial}} = D_n $$\n\nThe trial effective stress, $\\tilde{\\sigma}_{n+1}^{\\text{trial}}$, is computed based on the total strain $\\epsilon_{n+1}$ and the frozen plastic strain $\\epsilon_{\\mathrm{p},n}$:\n$$ \\tilde{\\sigma}_{n+1}^{\\text{trial}} = E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n}) $$\nwhere $E$ is Young's modulus.\n\nWe then check if this trial state violates the yield condition. The yield function $f$ is evaluated using the trial effective stress and the known hardening state from the previous step, $\\kappa_n$:\n$$ f_{n+1}^{\\text{trial}} = \\tilde{\\sigma}_{n+1}^{\\text{trial}} - (\\sigma_{y0} + H \\kappa_n) $$\nwhere $\\sigma_{y0}$ is the initial yield stress and $H$ is the hardening modulus.\n\nIf $f_{n+1}^{\\text{trial}} \\le 0$, the elastic assumption is correct. Plastic flow does not occur in this increment. The state at $t_{n+1}$ is finalized as:\n$$ \\epsilon_{\\mathrm{p},n+1} = \\epsilon_{\\mathrm{p},n} $$\n$$ \\kappa_{n+1} = \\kappa_n $$\n$$ D_{n+1} = D_n $$\nThe observable Cauchy stress $\\sigma_{n+1}$ is then:\n$$ \\sigma_{n+1} = (1 - D_{n+1}) \\tilde{\\sigma}_{n+1}^{\\text{trial}} = (1 - D_n) E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n}) $$\n\n**2. Plastic Corrector Step (Return Mapping)**\n\nIf $f_{n+1}^{\\text{trial}} > 0$, plastic deformation occurs. The state at $t_{n+1}$ must lie on the yield surface, satisfying the consistency condition $f_{n+1} = 0$. The evolution equations for the internal variables are integrated using the implicit backward Euler method. For monotonic tension, the increments in plastic strain, $\\Delta\\epsilon_{\\mathrm{p}}$, and accumulated plastic strain, $\\Delta\\kappa$, are equal to the plastic multiplier increment, $\\Delta\\lambda \\ge 0$.\n$$ \\epsilon_{\\mathrm{p},n+1} = \\epsilon_{\\mathrm{p},n} + \\Delta\\lambda $$\n$$ \\kappa_{n+1} = \\kappa_n + \\Delta\\lambda $$\n\nThe effective stress at $t_{n+1}$ can be expressed in terms of the trial stress and $\\Delta\\lambda$:\n$$ \\tilde{\\sigma}_{n+1} = E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n+1}) = E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n} - \\Delta\\lambda) = \\tilde{\\sigma}_{n+1}^{\\text{trial}} - E \\Delta\\lambda $$\n\nWe use these updated variables in the consistency condition $f_{n+1} = 0$:\n$$ \\tilde{\\sigma}_{n+1} - (\\sigma_{y0} + H \\kappa_{n+1}) = 0 $$\n$$ (\\tilde{\\sigma}_{n+1}^{\\text{trial}} - E \\Delta\\lambda) - (\\sigma_{y0} + H (\\kappa_n + \\Delta\\lambda)) = 0 $$\nRearranging to solve for $\\Delta\\lambda$:\n$$ \\tilde{\\sigma}_{n+1}^{\\text{trial}} - (\\sigma_{y0} + H \\kappa_n) = (E + H) \\Delta\\lambda $$\nThe left side is precisely the trial yield function value, $f_{n+1}^{\\text{trial}}$. Thus, the plastic multiplier increment is:\n$$ \\Delta\\lambda = \\frac{f_{n+1}^{\\text{trial}}}{E + H} $$\nSince $f_{n+1}^{\\text{trial}} > 0$ and $E+H > 0$, we have $\\Delta\\lambda > 0$, consistent with the occurrence of plasticity.\n\nWith $\\Delta\\lambda$ determined, the internal variables $\\epsilon_{\\mathrm{p},n+1}$ and $\\kappa_{n+1}$ are updated. The model specifies a coupled damage evolution law, $\\dot{D} = (Y/S)\\dot{\\lambda}$, to be integrated implicitly. This means we use the damage driving force $Y$ at the end of the step, $Y_{n+1}$.\n$$ D_{n+1} = D_n + \\frac{Y_{n+1}}{S} \\Delta\\lambda $$\nThe energy release rate $Y_{n+1}$ is:\n$$ Y_{n+1} = \\frac{1}{2} E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n+1})^2 = \\frac{1}{2E} \\tilde{\\sigma}_{n+1}^2 $$\nThe effective stress at the end of the step, $\\tilde{\\sigma}_{n+1}$, is calculated using the now known $\\Delta\\lambda$:\n$$ \\tilde{\\sigma}_{n+1} = \\tilde{\\sigma}_{n+1}^{\\text{trial}} - E \\Delta\\lambda $$\nThis allows us to compute $Y_{n+1}$ and subsequently update the damage to $D_{n+1}$. This corresponds to a staggered, or operator-split, approach where the plasticity problem is solved first, followed by the damage update using the resulting plastic increment.\n\nFinally, the observable stress $\\sigma_{n+1}$ is computed with the updated damage:\n$$ \\sigma_{n+1} = (1 - D_{n+1}) \\tilde{\\sigma}_{n+1} $$\n\n**3. Adaptive Substepping and Acceptance Criteria**\n\nThe total strain path from $0$ to $\\epsilon_{\\mathrm{final}}$ is divided into $M$ macro-increments. Each macro-increment is traversed using one or more adaptive substeps. For each attempted substep, two acceptance criteria must be met:\n1.  **Admissibility:** The updated damage $D_{n+1}$ must stay within the valid range, $D_{n+1} < D_{\\max}$. Given $D(0)=0$ and $\\dot{D}\\ge 0$, we only need to check the upper bound.\n2.  **Energy Consistency:** The incremental dissipation $\\mathcal{D}_{n\\to n+1}$ must be non-negative, within a small numerical tolerance $\\text{tol}$. The dissipation is computed from the first law of thermodynamics: external work minus change in stored energy.\n    $$ \\mathcal{D}_{n\\to n+1} = W_{n\\to n+1} - \\Delta\\psi_{n\\to n+1} \\ge -\\text{tol} $$\n    where the incremental work $W_{n\\to n+1}$ is computed by the trapezoidal rule:\n    $$ W_{n\\to n+1} = \\frac{1}{2}(\\sigma_n + \\sigma_{n+1})(\\epsilon_{n+1}-\\epsilon_n) $$\n    and the change in Helmholtz free energy $\\Delta\\psi$ is:\n    $$ \\Delta\\psi_{n\\to n+1} = \\psi_{n+1} - \\psi_n $$\n    with the free energy density $\\psi$ defined as:\n    $$ \\psi = (1 - D)\\frac{1}{2}E(\\epsilon - \\epsilon_{\\mathrm{p}})^2 + \\frac{1}{2}H\\kappa^2 $$\n\nIf either criterion is violated for an attempted substep size, the substep is rejected, its size is halved (bisection), and the calculation is retried. This continues until a small enough substep is found that satisfies both criteria. The state is then updated, and the process repeats until the end of the macro-increment is reached.\n\n**4. Overall Algorithm**\n\nThe complete algorithm for a given test case proceeds as follows:\n- Initialize state variables to zero: $\\epsilon_0=0, \\sigma_0=0, \\epsilon_{\\mathrm{p},0}=0, \\kappa_0=0, D_0=0, \\psi_0=0$.\n- Initialize accumulators: total accepted substeps, total work, and total dissipation.\n- Loop through $M$ macro-increments.\n    - Within each macro-increment, use an inner loop for adaptive substepping.\n        - Attempt a substep covering the remaining strain in the macro-increment.\n        - Enter a bisection loop:\n            - Compute the tentative state at the end of the current substep using the return-mapping logic.\n            - Check admissibility and energy consistency.\n            - If accepted, break the bisection loop.\n            - If rejected, halve the substep size and continue the bisection loop.\n        - Upon a successful substep, update the global state variables and accumulators.\n- After all macro-increments are completed, compute the boolean for total dissipation, $\\mathcal{D}_{\\mathrm{tot}} \\ge -\\text{tol}$.\n- Collate the final required outputs: $\\sigma_{\\mathrm{final}}$, $\\epsilon_{\\mathrm{p,final}}$, $D_{\\mathrm{final}}$, the dissipation boolean, and the total number of accepted substeps.\n\nThis numerical procedure is implemented in the following Python code.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function that runs simulations for all test cases and prints the results.\n    \"\"\"\n    test_cases = [\n        # Case 1 (purely elastic target)\n        (210000., 10000., 250., 500., 0.95, 0.0005, 10, 1e-8),\n        # Case 2 (moderate plasticity and mild damage)\n        (210000., 10000., 250., 500., 0.95, 0.003, 20, 1e-8),\n        # Case 3 (large step, strong coupling, adaptive refinement expected)\n        (210000., 5000., 200., 200., 0.90, 0.02, 5, 1e-8),\n        # Case 4 (very strong hardening, plasticity suppressed)\n        (70000., 1000000., 300., 800., 0.95, 0.005, 10, 1e-8),\n    ]\n\n    results = []\n    for params in test_cases:\n        result = _run_simulation(*params)\n        results.append(result)\n\n    # Format the output as a list of lists string\n    inner_parts = [f\"[{','.join(map(str, res))}]\" for res in results]\n    final_output = f\"[{','.join(inner_parts)}]\"\n    print(final_output)\n\ndef _run_simulation(E, H, sigma_y0, S, D_max, epsilon_final, M, tol):\n    \"\"\"\n    Performs the coupled damage-plasticity simulation for a single test case.\n    \"\"\"\n    # Initial state\n    strain = 0.0\n    stress = 0.0\n    ep = 0.0  # Plastic strain\n    kappa = 0.0  # Accumulated plastic strain\n    D = 0.0  # Damage\n    \n    # Calculate initial free energy\n    psi = (1 - D) * 0.5 * E * (strain - ep)**2 + 0.5 * H * kappa**2\n\n    total_substeps = 0\n    total_dissipation = 0.0\n    max_bisections = 20  # Safeguard against infinite loops\n\n    # Strain-controlled loading\n    macro_strain_increment = epsilon_final / M\n\n    for i in range(M):\n        macro_strain_end = (i + 1) * macro_strain_increment\n        substep_strain_start = strain\n\n        while substep_strain_start < macro_strain_end:\n            remaining_strain = macro_strain_end - substep_strain_start\n            delta_eps_try = remaining_strain\n            \n            accepted = False\n            for _ in range(max_bisections):\n                next_strain = substep_strain_start + delta_eps_try\n\n                # Store current state for potential rejection\n                current_strain = substep_strain_start\n                current_stress = stress\n                current_ep = ep\n                current_kappa = kappa\n                current_D = D\n                current_psi = psi\n\n                # 1. Elastic trial step\n                trial_eff_stress = E * (next_strain - current_ep)\n                yield_stress = sigma_y0 + H * current_kappa\n                trial_f = trial_eff_stress - yield_stress\n\n                # 2. State update (elastic or plastic)\n                if trial_f <= 0:  # Elastic step\n                    next_ep = current_ep\n                    next_kappa = current_kappa\n                    next_D = current_D\n                    next_eff_stress = trial_eff_stress\n                else:  # Plastic step\n                    delta_lambda = trial_f / (E + H)\n                    next_ep = current_ep + delta_lambda\n                    next_kappa = current_kappa + delta_lambda\n                    next_eff_stress = trial_eff_stress - E * delta_lambda\n                    \n                    Y_next = 0.5 * E * (next_strain - next_ep)**2\n                    next_D = current_D + (Y_next / S) * delta_lambda\n\n                next_stress = (1 - next_D) * next_eff_stress\n\n                # 3. Acceptance criteria check\n                admissible = (next_D < D_max)\n\n                next_psi = (1 - next_D) * 0.5 * E * (next_strain - next_ep)**2 + 0.5 * H * next_kappa**2\n                delta_psi = next_psi - current_psi\n                delta_work = 0.5 * (current_stress + next_stress) * delta_eps_try\n                delta_dissipation = delta_work - delta_psi\n                energy_ok = (delta_dissipation >= -tol)\n\n                if admissible and energy_ok:\n                    # Step accepted\n                    strain = next_strain\n                    stress = next_stress\n                    ep = next_ep\n                    kappa = next_kappa\n                    D = next_D\n                    psi = next_psi\n                    \n                    total_substeps += 1\n                    total_dissipation += delta_dissipation\n                    accepted = True\n                    break\n                else:\n                    # Step rejected, bisect\n                    delta_eps_try /= 2.0\n            \n            if not accepted:\n                raise RuntimeError(f\"Substep failed to converge after {max_bisections} bisections.\")\n            \n            substep_strain_start = strain\n\n    # Final results\n    dissipation_ok = total_dissipation >= -tol\n    \n    # Python's default str() for bool is 'True'/'False'\n    return [stress, ep, D, dissipation_ok, total_substeps]\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2874214"}, {"introduction": "A critical challenge arises when local constitutive models that exhibit strain-softening are used to solve boundary value problems: the numerical results become pathologically dependent on the mesh size. This practice delves into the fundamental reason for this failure, demonstrating that the predicted energy dissipation spuriously vanishes as the mesh is refined [@problem_id:2626375]. By analyzing both a local model and a gradient-regularized alternative, you will understand how introducing an intrinsic material length scale, $\\ell$, restores objectivity to the simulation, ensuring that the predicted failure energy is a true material property independent of the discretization.", "problem": "Consider a one-dimensional bar of length $L$ and constant cross-sectional area $A$, made of a rate-independent small-strain damageable elastoplastic solid. Let the axial strain be $\\varepsilon$, the plastic strain be $\\varepsilon_p$, and the scalar damage variable be $d \\in [0,1]$. The Cauchy stress is defined via an effective stress concept as $\\sigma = (1-d)\\,E\\,(\\varepsilon - \\varepsilon_p)$, where $E$ is the Young's modulus. Assume tension-only loading under displacement control, so that localization is admissible after the onset of softening. For plasticity, adopt a one-dimensional idealization in which the undamaged yield stress is $\\sigma_y$, degraded by damage as $(1-d)\\,\\sigma_y$. For damage, assume a rate-independent evolution driven by a monotonically increasing history variable, and that once damage initiates it produces a negative tangent in the local stressâ€“strain response (strain-softening). The bar is discretized by the Finite Element Method (FEM) into $N$ equal linear elements of size $h=L/N$.\n\nYour task is to formalize, from fundamental principles, why a purely local strain-softening damage law produces pathological mesh sensitivity in FEM and how adding a nonlocal regularization via a gradient damage term introduces an intrinsic length scale $\\ell$ that resolves this issue. Then, using the derived expressions, compute quantitative predictions for a prescribed set of parameters.\n\nUse the following foundational bases and modeling assumptions to derive the necessary expressions without invoking any unproven shortcuts:\n- Balance of linear momentum in one dimension, energy balance, and the principle of minimum potential energy.\n- Small-strain kinematics with $\\varepsilon = u'(x)$, where $u$ is displacement and $x$ the axial coordinate.\n- A local free energy density per unit volume of the form $\\psi_{\\text{loc}}(\\varepsilon,\\varepsilon_p,d) = (1-d)\\,\\tfrac{1}{2}E\\,(\\varepsilon - \\varepsilon_p)^2 + \\phi_p(\\varepsilon_p) + \\phi_d(d)$, with rate-independent dissipation enforcing irreversibility $\\dot d \\ge 0$ and standard thermodynamic forces.\n- Mesh localization after the onset of softening, where the inelastic deformation localizes in a single element of size $h$ under displacement control.\n- For the gradient regularization, augment the free energy with a quadratic damage-gradient contribution of the form $\\psi_{\\nabla d} = \\tfrac{1}{2}\\,c_d\\,\\ell^2\\,|\\nabla d|^2 + \\tfrac{1}{2}\\,k_d\\,d^2$, where $c_d$ and $k_d$ are positive material constants, to be calibrated to a prescribed fracture energy per unit area $G_c$, and $\\ell$ is the internal length. Show that the Eulerâ€“Lagrange equation implied by the damage stationarity condition necessarily involves $\\ell$ and thus enforces a finite damage-band width scaling with $\\ell$.\n\nProceed in three steps:\n1. Derive, for a purely local linear softening law in uniaxial tension in which the stress decreases linearly from $\\sigma_y$ at a threshold strain $\\varepsilon_0=\\sigma_y/E$ to $0$ at a final strain $\\varepsilon_f>\\varepsilon_0$, that the energy dissipated per unit volume at a material point upon complete failure equals the area under the softening branch, and express it as a function of $\\sigma_y$, $\\varepsilon_0$, and $\\varepsilon_f$. Use this to show that the total structural energy dissipated in the bar upon complete failure, when localization occurs in a single element of size $h$, scales as $A\\,h$ times the pointwise dissipation. Conclude from this scaling the mesh dependence of the computed dissipation and post-peak response in the local model.\n2. Derive, for the gradient damage model, starting from the augmented free energy density, the one-dimensional Eulerâ€“Lagrange equation for $d(x)$ in the damage process zone. Show that the characteristic width of non-uniform $d(x)$ necessarily scales with $\\ell$, and that when $c_d$ and $k_d$ are chosen to reproduce a target fracture energy per unit area $G_c$, the total dissipated energy at structural failure becomes $A\\,G_c$ independently of $h$ (provided the mesh resolves the damage band), thereby regularizing the problem.\n3. Using the expressions obtained in steps $1$ and $2$, compute, for the parameter set below, the structural dissipation to failure for both the local and the gradient-regularized models, and also compute the dimensionless resolution parameter $h/\\ell$ for each mesh. You must use the International System of Units (SI). Report energies in Joules and the resolution parameter as a dimensionless float.\n\nUse the following numerical parameter values:\n- $E = 210\\times 10^9\\,\\mathrm{Pa}$, $\\sigma_y = 400\\times 10^6\\,\\mathrm{Pa}$, $\\varepsilon_f - \\varepsilon_0 = 0.004$ with $\\varepsilon_0 = \\sigma_y/E$.\n- $A = 1.0\\times 10^{-4}\\,\\mathrm{m}^2$, $L = 1.0\\,\\mathrm{m}$.\n- $G_c = 1000\\,\\mathrm{J}/\\mathrm{m}^2$, $\\ell = 0.02\\,\\mathrm{m}$.\n\nTest suite (choose the three different uniform meshes below):\n- Case 1: $N=5$ (coarse mesh), $h=L/N$.\n- Case 2: $N=50$ (mesh size comparable to $\\ell$).\n- Case 3: $N=500$ (fine mesh relative to $\\ell$).\n\nFor each case $i\\in\\{1,2,3\\}$, compute:\n- $G^{\\text{loc}}_i$: predicted total structural dissipation to failure for the local model, in $\\mathrm{J}$.\n- $G^{\\text{grad}}_i$: predicted total structural dissipation to failure for the gradient model, in $\\mathrm{J}$.\n- $(h/\\ell)_i$: the dimensionless ratio $h/\\ell$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets of the form $[G^{\\text{loc}}_1,G^{\\text{grad}}_1,(h/\\ell)_1,G^{\\text{loc}}_2,G^{\\text{grad}}_2,(h/\\ell)_2,G^{\\text{loc}}_3,G^{\\text{grad}}_3,(h/\\ell)_3]$, with energies in $\\mathrm{J}$ and ratios dimensionless.", "solution": "The problem statement has been analyzed and is determined to be valid. It is scientifically grounded in continuum damage mechanics, well-posed, and provides a complete and consistent set of data and assumptions for a rigorous derivation and subsequent calculation. The problem addresses the fundamental issue of mesh sensitivity in computational models for material failure and its regularization, which is a classic and important topic.\n\nWe proceed with the derivation and solution in three steps as requested.\n\nStep 1: Analysis of the purely local softening model.\n\nIn a purely local continuum model, the material behavior at a point $x$ depends only on the state variables at that same point. The problem specifies a linear strain-softening law in uniaxial tension. Following an initial linear elastic response up to the yield stress $\\sigma_y$ at strain $\\varepsilon_0 = \\sigma_y / E$, the stress is assumed to decrease linearly to zero at a final strain $\\varepsilon_f$.\n\nThe energy dissipated per unit volume, $w_{\\text{loc}}$, during the complete failure of a material point is the work done during the inelastic softening process. This corresponds to the area under the stress-strain curve from the onset of softening at $(\\varepsilon_0, \\sigma_y)$ to complete failure at $(\\varepsilon_f, 0)$. The shape of this softening branch is a triangle with height $\\sigma_y$ and base $(\\varepsilon_f - \\varepsilon_0)$. The dissipated energy per unit volume is therefore:\n$$\nw_{\\text{loc}} = \\frac{1}{2} \\sigma_y (\\varepsilon_f - \\varepsilon_0)\n$$\nIn a Finite Element Method (FEM) simulation of a bar under uniform tension, once softening begins, the solution is no longer unique. A common numerical outcome is strain localization, where all further deformation concentrates in the element with the lowest strength (or the first to enter softening). The problem states we must assume that this localization occurs in a single element of size $h = L/N$. The volume of this element is $V_{\\text{elem}} = A h$. The rest of the bar, of length $L-h$, unloads elastically.\n\nThe total energy dissipated in the entire structure upon complete failure, $G^{\\text{loc}}$, is the energy dissipated within this single failing element. All other elements do not contribute to dissipation as they unload elastically. Therefore, the total structural dissipation is:\n$$\nG^{\\text{loc}} = w_{\\text{loc}} \\times V_{\\text{elem}} = \\left( \\frac{1}{2} \\sigma_y (\\varepsilon_f - \\varepsilon_0) \\right) A h\n$$\nThis equation reveals the fundamental flaw of a local softening model. The predicted structural energy dissipation $G^{\\text{loc}}$ is directly proportional to the element size $h$. As the mesh is refined ($h \\to 0$), the numerically predicted fracture energy $G^{\\text{loc}}$ spuriously converges to zero. This is a pathological mesh sensitivity, rendering the numerical results physically meaningless as they depend on the discretization rather than being a property of the material. The post-peak load-displacement curve of the structure would also exhibit a similarly pathological dependence on $h$.\n\nStep 2: Analysis of the gradient-regularized damage model.\n\nTo remedy the pathological mesh dependence, a nonlocal regularization is introduced. Here, this is achieved by adding a damage gradient term to the free energy density. The total free energy stored in the bar contains a contribution from the damage field $d(x)$ and its spatial gradient $d'(x) = \\nabla d$. Based on the problem statement, this energy for a static one-dimensional case is of the form:\n$$\n\\Pi_d[d(x)] = \\int_0^L A \\left( \\phi_d(d) + \\frac{1}{2} c_d \\ell^2 (d'(x))^2 \\right) dx\n$$\nwhere $\\phi_d(d)$ is the local part of the energy associated with damage (e.g., $\\frac{1}{2} k_d d^2$ as specified), $c_d$ is a material parameter, and $\\ell$ is an intrinsic length scale parameter. For the damage process to occur, this potential energy must be minimized with respect to the damage field $d(x)$, typically subject to a damage evolution criterion. The stationarity condition leads to the Euler-Lagrange equation. For the functional containing $F(d, d') = \\phi_d(d) + \\frac{1}{2} c_d \\ell^2 (d')^2$, the Euler-Lagrange equation is $\\frac{\\partial F}{\\partial d} - \\frac{d}{dx}\\left(\\frac{\\partial F}{\\partial d'}\\right) = Y_d$, where $Y_d$ represents the thermodynamic driving force for damage. This gives:\n$$\n\\frac{d\\phi_d}{dd} - c_d \\ell^2 d''(x) = Y_d\n$$\nRearranging the homogeneous part gives $d''(x) - \\frac{1}{c_d \\ell^2}\\frac{d\\phi_d}{dd} = 0$. For a simple form like $\\phi_d = \\frac{1}{2} k_d d^2$, this becomes $d''(x) - \\frac{k_d}{c_d \\ell^2} d(x) = 0$. The general solution to this differential equation involves exponential functions with a characteristic length that is proportional to $\\ell\\sqrt{c_d/k_d}$. By construction of such models, this characteristic length is identified with the material's internal length scale $\\ell$. Therefore, the damage profile $d(x)$ across a fracture process zone will have a finite width that scales with $\\ell$, irrespective of the mesh size $h$.\n\nThe fracture energy per unit area, $G_c$, is a fundamental material property representing the energy required to create a unit area of new fracture surface. In the context of continuum damage mechanics, it is the total energy dissipated per unit area of the cross-section as the damage band fully develops. The gradient model is calibrated such that the total dissipated energy integrated across the fracture process zone equals $G_c$:\n$$\nG_c = \\int_{-\\infty}^{\\infty} \\left( D_{\\text{loc}}(d(x)) + D_{\\text{nonloc}}(d(x), d'(x)) \\right) dx\n$$\nwhere the terms represent the local and nonlocal parts of the dissipation density. By construction, the model parameters (e.g., $c_d$, $k_d$ and the parameters governing the evolution of $d$) are chosen to satisfy this condition. Consequently, the total energy dissipated by the structure to achieve complete failure, $G^{\\text{grad}}$, is the product of this material property $G_c$ and the cross-sectional area $A$:\n$$\nG^{\\text{grad}} = G_c A\n$$\nThis result is independent of the mesh size $h$, provided that the mesh is sufficiently fine to resolve the damage profile, i.e., $h < \\ell$. This resolves the pathological mesh dependence of the local model.\n\nStep 3: Quantitative predictions.\n\nWe now compute the required quantities using the derived expressions and the given numerical parameters.\nGiven parameters:\n$E = 210 \\times 10^9\\,\\mathrm{Pa}$, $\\sigma_y = 400 \\times 10^6\\,\\mathrm{Pa}$, $\\varepsilon_f - \\varepsilon_0 = 0.004$, $A = 1.0 \\times 10^{-4}\\,\\mathrm{m}^2$, $L = 1.0\\,\\mathrm{m}$, $G_c = 1000\\,\\mathrm{J}/\\mathrm{m}^2$, $\\ell = 0.02\\,\\mathrm{m}$.\n\nThe local energy dissipation density is:\n$$\nw_{\\text{loc}} = \\frac{1}{2} \\sigma_y (\\varepsilon_f - \\varepsilon_0) = \\frac{1}{2} (400 \\times 10^6\\,\\mathrm{Pa}) (0.004) = 8.0 \\times 10^5\\,\\mathrm{J/m^3}\n$$\nThe structural dissipation for the gradient model is constant:\n$$\nG^{\\text{grad}} = G_c A = (1000\\,\\mathrm{J/m^2}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) = 0.1\\,\\mathrm{J}\n$$\nWe evaluate the quantities for the three mesh cases.\n\nCase 1: $N=5$\nElement size: $h_1 = L/N = 1.0\\,\\mathrm{m} / 5 = 0.2\\,\\mathrm{m}$.\nLocal model dissipation: $G^{\\text{loc}}_1 = w_{\\text{loc}} A h_1 = (8.0 \\times 10^5\\,\\mathrm{J/m^3}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) \\times (0.2\\,\\mathrm{m}) = 16.0\\,\\mathrm{J}$.\nGradient model dissipation: $G^{\\text{grad}}_1 = 0.1\\,\\mathrm{J}$.\nResolution parameter: $(h/\\ell)_1 = 0.2\\,\\mathrm{m} / 0.02\\,\\mathrm{m} = 10.0$.\n\nCase 2: $N=50$\nElement size: $h_2 = L/N = 1.0\\,\\mathrm{m} / 50 = 0.02\\,\\mathrm{m}$.\nLocal model dissipation: $G^{\\text{loc}}_2 = w_{\\text{loc}} A h_2 = (8.0 \\times 10^5\\,\\mathrm{J/m^3}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) \\times (0.02\\,\\mathrm{m}) = 1.6\\,\\mathrm{J}$.\nGradient model dissipation: $G^{\\text{grad}}_2 = 0.1\\,\\mathrm{J}$.\nResolution parameter: $(h/\\ell)_2 = 0.02\\,\\mathrm{m} / 0.02\\,\\mathrm{m} = 1.0$.\n\nCase 3: $N=500$\nElement size: $h_3 = L/N = 1.0\\,\\mathrm{m} / 500 = 0.002\\,\\mathrm{m}$.\nLocal model dissipation: $G^{\\text{loc}}_3 = w_{\\text{loc}} A h_3 = (8.0 \\times 10^5\\,\\mathrm{J/m^3}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) \\times (0.002\\,\\mathrm{m}) = 0.16\\,\\mathrm{J}$.\nGradient model dissipation: $G^{\\text{grad}}_3 = 0.1\\,\\mathrm{J}$.\nResolution parameter: $(h/\\ell)_3 = 0.002\\,\\mathrm{m} / 0.02\\,\\mathrm{m} = 0.1$.\n\nThe results clearly demonstrate that $G^{\\text{loc}}$ decreases linearly with $h$, confirming the pathological mesh sensitivity. In contrast, $G^{\\text{grad}}$ remains constant and physical. As the mesh is refined, the local model prediction spuriously approaches zero, while for the finest mesh, where $h < \\ell$, the local model's prediction happens to approach the regularized value, although this is coincidental for the given parameters and not a sign of convergence.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes structural dissipation for local and gradient-regularized damage models\n    to demonstrate the concept of mesh sensitivity and regularization.\n    \"\"\"\n    # Define physical and material constants from the problem statement (SI units).\n    # E is given but not needed for the dissipation calculation itself.\n    sigma_y = 400e6  # Yield stress in Pa\n    eps_f_minus_eps_0 = 0.004  # Strain difference for softening, dimensionless\n    A = 1.0e-4  # Cross-sectional area in m^2\n    L = 1.0  # Bar length in m\n    G_c = 1000.0  # Fracture energy per unit area in J/m^2\n    ell = 0.02  # Internal length scale in m\n\n    # Define the test cases by the number of elements N.\n    test_cases_N = [5, 50, 500]\n\n    # --- Calculation for the local model ---\n    # The energy dissipated per unit volume in the failing material point, w_loc,\n    # is the area of the softening triangle in the local stress-strain diagram.\n    w_loc = 0.5 * sigma_y * eps_f_minus_eps_0\n    \n    # --- Calculation for the gradient-regularized model ---\n    # The total structural energy dissipation, G_grad, is regularized to a \n    # mesh-independent value by construction of the model, which is calibrated \n    # using the material property G_c. G_grad = G_c * A.\n    G_grad = G_c * A\n    \n    # List to store the results for all test cases.\n    results = []\n    \n    # Iterate through the specified mesh configurations.\n    for N in test_cases_N:\n        # Calculate the element size h for the current uniform mesh.\n        h = L / N\n        \n        # 1. Compute G_loc_i: predicted total structural dissipation for the local model.\n        # Dissipation is assumed to localize in a single element of volume A*h.\n        G_loc_i = w_loc * A * h\n        \n        # 2. Assign G_grad_i: predicted total dissipation for the gradient model.\n        # This value is constant (mesh-independent) by design.\n        G_grad_i = G_grad\n        \n        # 3. Compute (h/l)_i: the dimensionless resolution parameter.\n        # This ratio indicates whether the mesh is fine enough to resolve the\n        # internal length scale of the material.\n        h_over_ell_i = h / ell\n        \n        # Append the three computed values for the current case to the results list.\n        results.extend([G_loc_i, G_grad_i, h_over_ell_i])\n\n    # Final print statement in the exact required format:\n    # [G_loc_1,G_grad_1,(h/l)_1,G_loc_2,G_grad_2,(h/l)_2,G_loc_3,G_grad_3,(h/l)_3]\n    print(f\"[{','.join(map(str, results))}]\")\n\n# Execute the solver function.\nsolve()\n```", "id": "2626375"}]}