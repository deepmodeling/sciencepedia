{"hands_on_practices": [{"introduction": "The choice of a thermodynamic potential is not merely a matter of convenience; it is a strategic decision dictated by the physics of the problem being solved. This exercise challenges you to explore the profound connection between a potential's natural variables and the boundary conditions of a thermoelastic problem. By analyzing the duality between the Helmholtz free energy, $\\psi(\\boldsymbol{\\varepsilon},T)$, and the Gibbs free energy, $g(\\boldsymbol{\\sigma},T)$, you will develop the intuition needed to formulate robust variational principles, which form the bedrock of modern computational mechanics [@problem_id:2925024].", "problem": "Consider a homogeneous, small-strain thermoelastic solid occupying a bounded domain $\\Omega \\subset \\mathbb{R}^3$ with boundary $\\partial\\Omega = \\Gamma_u \\cup \\Gamma_t$, where $\\Gamma_u \\cap \\Gamma_t = \\emptyset$. On $\\Gamma_u$ the displacement $\\boldsymbol{u}$ is prescribed, and on $\\Gamma_t$ the traction $\\boldsymbol{t}$ is prescribed. Assume quasistatic conditions and neglect body forces and inertia. The material is hyperelastic and anisotropic, with Helmholtz free energy per unit reference volume $\\psi(\\boldsymbol{\\varepsilon},T)$, where $\\boldsymbol{\\varepsilon}$ is the small strain tensor and $T$ is temperature. Define the Gibbs free energy per unit reference volume $g(\\boldsymbol{\\sigma},T)$ by the Legendre transform in the mechanical variables with respect to $\\boldsymbol{\\varepsilon}$ and $\\boldsymbol{\\sigma}$, where $\\boldsymbol{\\sigma}$ is the Cauchy stress tensor.\n\nBased only on fundamental laws (first and second laws of thermodynamics, balance of linear momentum) and the definition of Legendre transforms, consider the formulation of boundary value problems with mixed mechanical boundary conditions and isothermal processes (i.e., $T$ is known). Which of the following statements are valid?\n\nA. In a displacement-based formulation using $\\psi(\\boldsymbol{\\varepsilon},T)$, the total potential constructed from the internal free energy and the external mechanical work is stationary at the solution when varied over kinematically admissible displacement fields (respecting $\\boldsymbol{u}=\\bar{\\boldsymbol{u}}$ on $\\Gamma_u$). In this setting, $\\Gamma_u$ acts as an essential boundary condition, $\\Gamma_t$ arises as a natural boundary condition through the virtual work term, and no additional independent mechanical fields are required beyond $\\boldsymbol{u}$ for a hyperelastic solid with prescribed $T$.\n\nB. In a stress-based complementary formulation using $g(\\boldsymbol{\\sigma},T)$, one searches for a stationary point over statically admissible stress fields (satisfying $\\nabla\\cdot\\boldsymbol{\\sigma}=\\boldsymbol{0}$ in $\\Omega$ and $\\boldsymbol{n}\\cdot\\boldsymbol{\\sigma}=\\bar{\\boldsymbol{t}}$ on $\\Gamma_t$). Prescribed displacements on $\\Gamma_u$ enter the functional through boundary work terms involving $\\bar{\\boldsymbol{u}}$, interior compatibility is not imposed a priori but is attained at the stationary point for elastic materials when $g$ is convex in $\\boldsymbol{\\sigma}$, and convexity of $g$ in $\\boldsymbol{\\sigma}$ is required to obtain a true minimum principle.\n\nC. Provided that $\\psi(\\boldsymbol{\\varepsilon},T)$ is strictly convex in $\\boldsymbol{\\varepsilon}$ and $g(\\boldsymbol{\\sigma},T)$ is its Legendre transform, the $\\psi$-based and $g$-based formulations are equivalent for any mix of mechanical boundary conditions in the sense that they yield the same physical fields $\\boldsymbol{u}$ and $\\boldsymbol{\\sigma}$ at stationarity, although the functionals being extremized are different and have different natural/essential boundary roles.\n\nD. Since the process is isothermal and temperature is a scalar field, $g(\\boldsymbol{\\sigma},T)$ and $\\psi(\\boldsymbol{\\varepsilon},T)$ differ only by a constant at fixed $T$, so they lead to identical variational functionals and identical boundary classifications regardless of the boundary condition mix.\n\nE. For mixed boundary conditions, pure $\\psi$-based and pure $g$-based formulations cannot produce the correct solution; only mixed variational principles that treat both $\\boldsymbol{u}$ and $\\boldsymbol{\\sigma}$ as independent (such as the Hellinger–Reissner functional) are valid.\n\nSelect all that apply.", "solution": "The problem statement is subjected to validation prior to any attempt at a solution.\n\n### Step 1: Extract Givens\n- **System**: A homogeneous, small-strain thermoelastic solid.\n- **Domain**: A bounded domain $\\Omega \\subset \\mathbb{R}^3$.\n- **Boundary**: $\\partial\\Omega = \\Gamma_u \\cup \\Gamma_t$, with $\\Gamma_u \\cap \\Gamma_t = \\emptyset$.\n- **Boundary Conditions**: Prescribed displacement $\\boldsymbol{u} = \\bar{\\boldsymbol{u}}$ on $\\Gamma_u$. Prescribed traction $\\boldsymbol{t} = \\bar{\\boldsymbol{t}}$ on $\\Gamma_t$.\n- **Process Assumptions**: Quasistatic conditions, negligible body forces, and negligible inertia. Isothermal process, i.e., temperature $T$ is known and uniform.\n- **Constitutive Law**: The material is hyperelastic and anisotropic.\n- **Potentials**:\n    1.  Helmholtz free energy per unit reference volume: $\\psi(\\boldsymbol{\\varepsilon},T)$, where $\\boldsymbol{\\varepsilon}$ is the small strain tensor.\n    2.  Gibbs free energy per unit reference volume: $g(\\boldsymbol{\\sigma},T)$, where $\\boldsymbol{\\sigma}$ is the Cauchy stress tensor.\n- **Definition**: $g(\\boldsymbol{\\sigma},T)$ is the Legendre transform of $\\psi(\\boldsymbol{\\varepsilon},T)$ with respect to the conjugate pair $(\\boldsymbol{\\varepsilon}, \\boldsymbol{\\sigma})$.\n\n### Step 2: Validate Using Extracted Givens\n1.  **Scientific Grounding**: The problem is set in the standard framework of continuum thermo-mechanics for solids. The concepts of Helmholtz and Gibbs free energies, Legendre transformation, small-strain elasticity, quasistatic processes, and mixed boundary value problems are all fundamental and well-established in this field. The problem is scientifically sound.\n2.  **Well-Posedness**: The question asks for an evaluation of theoretical statements regarding variational formulations, not for the solution of a specific boundary value problem. The framework provided is sufficient to analyze these statements. The problem is well-posed.\n3.  **Objectivity**: The language is formal, precise, and uses standard technical terminology from mechanics and mathematics. It is free from ambiguity and subjective claims.\n4.  **Completeness & Consistency**: The problem statement provides all necessary information (domain, boundary conditions, material type, thermodynamic potentials) to rigorously evaluate the options. There are no contradictions.\n5.  **Feasibility**: The physical situation described—a solid under quasistatic, isothermal loading with mixed boundary conditions—is a common and realistic scenario in engineering analysis.\n\n### Step 3: Verdict and Action\nThe problem statement is valid. It is a well-formulated question concerning the foundational variational principles of solid mechanics. A full analysis of the options is warranted.\n\n### Analysis of the Statements\n\nThe governing equations for this problem are:\n1.  **Equilibrium**: $\\nabla \\cdot \\boldsymbol{\\sigma} = \\boldsymbol{0}$ in $\\Omega$ (since body forces are neglected).\n2.  **Kinematics (Compatibility)**: $\\boldsymbol{\\varepsilon} = \\frac{1}{2}(\\nabla\\boldsymbol{u} + (\\nabla\\boldsymbol{u})^T)$.\n3.  **Constitutive Relations**: Derived from the potentials. For a hyperelastic material under isothermal conditions:\n    $$ \\boldsymbol{\\sigma} = \\frac{\\partial \\psi(\\boldsymbol{\\varepsilon}, T)}{\\partial \\boldsymbol{\\varepsilon}} $$\n    This relationship is invertible if $\\psi$ is convex. The inverse relation is given by the Gibbs free energy $g(\\boldsymbol{\\sigma}, T) = \\boldsymbol{\\sigma}:\\boldsymbol{\\varepsilon} - \\psi(\\boldsymbol{\\varepsilon}, T)$, which yields:\n    $$ \\boldsymbol{\\varepsilon} = \\frac{\\partial g(\\boldsymbol{\\sigma}, T)}{\\partial \\boldsymbol{\\sigma}} $$\n4.  **Boundary Conditions**: $\\boldsymbol{u} = \\bar{\\boldsymbol{u}}$ on $\\Gamma_u$ and $\\boldsymbol{n} \\cdot \\boldsymbol{\\sigma} = \\bar{\\boldsymbol{t}}$ on $\\Gamma_t$.\n\nWe will now evaluate each statement based on these principles.\n\n**Statement A: Analysis**\n\nThis statement describes the **Principle of Stationary Potential Energy**. The total potential for the system, $\\Pi$, is the sum of the stored internal energy (Helmholtz free energy for an isothermal process) and the potential of the external forces.\n$$ \\Pi[\\boldsymbol{u}] = \\int_{\\Omega} \\psi(\\boldsymbol{\\varepsilon}(\\boldsymbol{u}), T) \\, dV - \\int_{\\Gamma_t} \\bar{\\boldsymbol{t}} \\cdot \\boldsymbol{u} \\, dS $$\nThe principle states that the true displacement field $\\boldsymbol{u}$ makes the functional $\\Pi$ stationary among all kinematically admissible displacement fields. A field is kinematically admissible if it is sufficiently smooth and satisfies the prescribed displacement boundary conditions, $\\boldsymbol{u} = \\bar{\\boldsymbol{u}}$ on $\\Gamma_u$. These conditions, imposed a priori on the trial space, are called **essential boundary conditions**.\n\nTaking the first variation $\\delta\\Pi$ with respect to $\\boldsymbol{u}$ (where the variation $\\delta\\boldsymbol{u}$ must be zero on $\\Gamma_u$) gives:\n$$ \\delta\\Pi = \\int_{\\Omega} \\frac{\\partial \\psi}{\\partial \\boldsymbol{\\varepsilon}} : \\delta\\boldsymbol{\\varepsilon} \\, dV - \\int_{\\Gamma_t} \\bar{\\boldsymbol{t}} \\cdot \\delta\\boldsymbol{u} \\, dS $$\nUsing $\\boldsymbol{\\sigma} = \\partial\\psi/\\partial\\boldsymbol{\\varepsilon}$ and $\\delta\\boldsymbol{\\varepsilon} = \\text{sym}(\\nabla(\\delta\\boldsymbol{u}))$, and applying the divergence theorem:\n$$ \\delta\\Pi = \\int_{\\Omega} \\boldsymbol{\\sigma} : \\nabla(\\delta\\boldsymbol{u}) \\, dV - \\int_{\\Gamma_t} \\bar{\\boldsymbol{t}} \\cdot \\delta\\boldsymbol{u} \\, dS = - \\int_{\\Omega} (\\nabla\\cdot\\boldsymbol{\\sigma}) \\cdot \\delta\\boldsymbol{u} \\, dV + \\int_{\\partial\\Omega} (\\boldsymbol{n}\\cdot\\boldsymbol{\\sigma}) \\cdot \\delta\\boldsymbol{u} \\, dS - \\int_{\\Gamma_t} \\bar{\\boldsymbol{t}} \\cdot \\delta\\boldsymbol{u} \\, dS $$\nSince $\\delta\\boldsymbol{u}=\\boldsymbol{0}$ on $\\Gamma_u$, the boundary integral is non-zero only on $\\Gamma_t$. The stationarity condition $\\delta\\Pi = 0$ for all admissible $\\delta\\boldsymbol{u}$ yields:\n1.  $\\nabla\\cdot\\boldsymbol{\\sigma} = \\boldsymbol{0}$ in $\\Omega$ (the equilibrium equation).\n2.  $\\boldsymbol{n}\\cdot\\boldsymbol{\\sigma} = \\bar{\\boldsymbol{t}}$ on $\\Gamma_t$ (the traction boundary condition).\nThese are **natural boundary conditions** as they are a consequence of the variational principle, not an a priori constraint. The formulation is based solely on the displacement field $\\boldsymbol{u}$.\nThe statement correctly describes all these aspects.\n\n**Verdict for A**: **Correct**.\n\n**Statement B: Analysis**\n\nThis statement describes the **Principle of Stationary Complementary Energy**. The complementary energy functional, $\\Pi_c$, is constructed using the Gibbs free energy $g(\\boldsymbol{\\sigma},T)$. For mixed boundary conditions, it is:\n$$ \\Pi_c[\\boldsymbol{\\sigma}] = \\int_{\\Omega} g(\\boldsymbol{\\sigma}, T) \\, dV - \\int_{\\Gamma_u} (\\boldsymbol{n} \\cdot \\boldsymbol{\\sigma}) \\cdot \\bar{\\boldsymbol{u}} \\, dS $$\nThe principle seeks a stationary point for $\\Pi_c$ over the space of **statically admissible** stress fields. A stress field $\\boldsymbol{\\sigma}$ is statically admissible if it is symmetric, satisfies equilibrium $\\nabla\\cdot\\boldsymbol{\\sigma}=\\boldsymbol{0}$ in $\\Omega$, and meets the prescribed traction condition $\\boldsymbol{n}\\cdot\\boldsymbol{\\sigma}=\\bar{\\boldsymbol{t}}$ on $\\Gamma_t$. These are effectively essential conditions for this formulation.\n\nThe first variation $\\delta\\Pi_c = 0$ must hold for all variations $\\delta\\boldsymbol{\\sigma}$ that preserve static admissibility (i.e., $\\nabla\\cdot(\\delta\\boldsymbol{\\sigma})=\\boldsymbol{0}$ and $\\boldsymbol{n}\\cdot\\delta\\boldsymbol{\\sigma}=\\boldsymbol{0}$ on $\\Gamma_t$).\n$$ \\delta\\Pi_c = \\int_{\\Omega} \\frac{\\partial g}{\\partial \\boldsymbol{\\sigma}} : \\delta\\boldsymbol{\\sigma} \\, dV - \\int_{\\Gamma_u} (\\boldsymbol{n} \\cdot \\delta\\boldsymbol{\\sigma}) \\cdot \\bar{\\boldsymbol{u}} \\, dS = 0 $$\nUsing $\\boldsymbol{\\varepsilon} = \\partial g/\\partial\\boldsymbol{\\sigma}$, this is the principle of complementary virtual work. The Euler-Lagrange equations that follow from this principle (through application of the divergence theorem and properties of the admissible stress variations) are the compatibility conditions for the strain field $\\boldsymbol{\\varepsilon}$ and the displacement boundary condition $\\boldsymbol{u}=\\bar{\\boldsymbol{u}}$ on $\\Gamma_u$. Thus, compatibility and displacement boundary conditions are natural outcomes. The statement that convexity of $g$ in $\\boldsymbol{\\sigma}$ is required for a true minimum principle is also correct; it ensures that the functional $\\Pi_c$ has a minimum, not just a saddle point.\n\n**Verdict for B**: **Correct**.\n\n**Statement C: Analysis**\n\nThis statement addresses the equivalence of the potential energy ($\\psi$-based) and complementary energy ($g$-based) formulations. The Legendre transformation connects the two potentials, creating a dual relationship between their corresponding variational principles. The potential energy principle enforces kinematic admissibility and derives equilibrium as a result. The complementary energy principle enforces static admissibility and derives kinematic compatibility as a result. Both principles, when correctly applied to the same boundary value problem (including mixed conditions), will identify the same unique solution fields $(\\boldsymbol{u}, \\boldsymbol{\\varepsilon}, \\boldsymbol{\\sigma})$, provided a unique solution exists (which is generally true for strictly convex potentials). The statement correctly notes that the functionals themselves are different, operating on different spaces of functions, and that the roles of essential versus natural boundary conditions are interchanged. This duality is a fundamental concept in variational mechanics.\n\n**Verdict for C**: **Correct**.\n\n**Statement D: Analysis**\n\nThis statement claims that $g(\\boldsymbol{\\sigma},T)$ and $\\psi(\\boldsymbol{\\varepsilon},T)$ differ only by a constant at fixed $T$. This is fundamentally incorrect. The relationship is the Legendre transform: $g(\\boldsymbol{\\sigma}, T) = \\boldsymbol{\\sigma}:\\boldsymbol{\\varepsilon} - \\psi(\\boldsymbol{\\varepsilon}, T)$. The term $\\boldsymbol{\\sigma}:\\boldsymbol{\\varepsilon}$ is the work-conjugate product, which is a field variable, not a constant. For linear elasticity, for example, $\\psi = \\frac{1}{2}\\boldsymbol{\\varepsilon}:\\mathbb{C}:\\boldsymbol{\\varepsilon}$ and $g = \\frac{1}{2}\\boldsymbol{\\sigma}:\\mathbb{C}^{-1}:\\boldsymbol{\\sigma}$. While related, they are distinct quadratic forms of different tensor variables. Because the energy densities are not trivially related, the functionals $\\Pi$ and $\\Pi_c$ are also fundamentally different, and a direct consequence is that their classifications of boundary conditions are different (dual to each other), not identical as the statement claims.\n\n**Verdict for D**: **Incorrect**.\n\n**Statement E: Analysis**\n\nThis statement makes the strong claim that pure $\\psi$-based (potential energy) and pure $g$-based (complementary energy) formulations are invalid for mixed boundary conditions, and that \"only\" mixed variational principles are valid. This is false. As demonstrated in the analysis of statements A and B, both pure principles are perfectly capable of handling mixed boundary conditions. The potential energy principle incorporates displacement BCs as essential and traction BCs as natural. The complementary energy principle incorporates traction BCs as essential (in the definition of the admissible space) and displacement BCs as natural. Mixed principles like Hellinger-Reissner are indeed valid and offer certain advantages (e.g., in computational mechanics), but they are not the exclusive method. The existence of one valid method does not invalidate another.\n\n**Verdict for E**: **Incorrect**.", "answer": "$$\\boxed{ABC}$$", "id": "2925024"}, {"introduction": "A powerful consequence of deriving constitutive laws from a single potential is the inherent thermodynamic consistency, elegantly captured by Maxwell relations. This computational practice moves from abstract theory to tangible verification by tasking you with implementing a standard thermoelastic model based on the Helmholtz free energy, $\\psi$. You will then use numerical differentiation to confirm that the mixed second derivatives of $\\psi$ are indeed equal, providing a concrete demonstration of the coupling between thermal and mechanical responses in a solid [@problem_id:2924996].", "problem": "You are to implement and verify a Maxwell-type identity in small-strain isotropic thermoelasticity using a thermodynamic potential. Work in three spatial dimensions, with all tensors treated as second-order tensors in the usual index notation. The fundamental base you must use consists of the definition of the Helmholtz free energy density per unit reference volume, the conjugate definitions of Cauchy stress and entropy, and the form of the linear isotropic elasticity tensor.\n\nModel specification:\n- Let the Helmholtz free energy density be\n$$\n\\psi(\\varepsilon,T)\n=\n\\frac{1}{2}\\,\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big):\\mathbb{C}:\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big)\n\\;+\\;\nc_v\\Big(T - T_0 - T\\ln\\frac{T}{T_0}\\Big),\n$$\nwhere $\\,\\varepsilon\\,$ is the small strain tensor, $\\,T\\,$ is the absolute temperature, $\\,T_0\\,$ is a fixed reference temperature, $\\,\\alpha\\,$ is the coefficient of linear thermal expansion, $\\,c_v\\,$ is the volumetric heat capacity at constant volume, $\\,\\mathbf{I}\\,$ is the second-order identity tensor, and $\\,\\mathbb{C}\\,$ is the fourth-order isotropic elasticity tensor characterized by Lamé parameters $\\,\\lambda\\,$ and $\\,\\mu\\,$ via\n$$\n\\mathbb{C}:\\mathbf{E} \\;=\\; 2\\mu\\,\\mathbf{E} \\;+\\; \\lambda\\,\\mathrm{tr}(\\mathbf{E})\\,\\mathbf{I}\n\\quad \\text{for any symmetric tensor } \\mathbf{E}.\n$$\n- Define the Cauchy stress $\\,\\sigma\\,$ and the entropy per unit reference volume $\\,s\\,$ by the conjugate relations\n$$\n\\sigma(\\varepsilon,T) \\;=\\; \\frac{\\partial \\psi}{\\partial \\varepsilon}(\\varepsilon,T),\n\\qquad\ns(\\varepsilon,T) \\;=\\; -\\,\\frac{\\partial \\psi}{\\partial T}(\\varepsilon,T).\n$$\n\nTask:\n- Using only the above fundamental definitions, numerically compute the two mixed partial derivatives\n$$\n\\left(\\frac{\\partial \\sigma_{ij}}{\\partial T}\\right)_{\\varepsilon}\n\\quad \\text{and} \\quad\n-\\,\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T}\n$$\nand verify the Maxwell relation\n$$\n\\left(\\frac{\\partial \\sigma_{ij}}{\\partial T}\\right)_{\\varepsilon}\n\\;=\\;\n-\\,\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T}\n$$\ncomponent-wise for each test case below.\n\nNumerical differentiation requirements:\n- Use centered finite differences for both derivatives.\n- For the temperature derivative at fixed strain, use a temperature increment $\\,\\Delta T = 10^{-6}\\,\\mathrm{K}\\,$:\n$$\n\\left(\\frac{\\partial \\sigma_{ij}}{\\partial T}\\right)_{\\varepsilon}\n\\;\\approx\\;\n\\frac{\\sigma_{ij}(\\varepsilon,T+\\Delta T) - \\sigma_{ij}(\\varepsilon,T-\\Delta T)}{2\\,\\Delta T}.\n$$\n- For the entropy derivative at fixed temperature, perturb one independent symmetric strain component at a time with a strain increment $\\,\\Delta \\varepsilon = 10^{-8}\\,$. For $\\,i=j\\,$, perturb only $\\,\\varepsilon_{ii}\\,$. For $\\,i\\neq j\\,$, perturb $\\,\\varepsilon_{ij}\\,$ and $\\,\\varepsilon_{ji}\\,$ simultaneously by the same amount to remain in the symmetric strain space. Use\n$$\n\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T}\n\\;\\approx\\;\n\\frac{s(\\varepsilon + \\Delta \\varepsilon\\,\\mathbf{E}^{(ij)}_{\\mathrm{sym}},T) - s(\\varepsilon - \\Delta \\varepsilon\\,\\mathbf{E}^{(ij)}_{\\mathrm{sym}},T)}{2\\,\\Delta \\varepsilon},\n$$\nwhere $\\,\\mathbf{E}^{(ij)}_{\\mathrm{sym}}\\,$ is the symmetric basis tensor with unit entries at $\\,\\{(i,j),(j,i)\\}\\,$ if $\\,i\\neq j\\,$ and at $\\,\\{(i,i)\\}\\,$ if $\\,i=j\\,$, and zeros elsewhere.\n\nVerification metric:\n- Let $\\,\\mathbf{A}\\in\\mathbb{R}^{3\\times 3}\\,$ be the matrix with entries $\\,A_{ij} = \\left(\\frac{\\partial \\sigma_{ij}}{\\partial T}\\right)_{\\varepsilon}\\,$ and $\\,\\mathbf{B}\\in\\mathbb{R}^{3\\times 3}\\,$ be the matrix with entries $\\,B_{ij} = -\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T}\\,$. Compute the Frobenius norm residual\n$$\nr \\;=\\; \\|\\mathbf{A} - \\mathbf{B}\\|_F.\n$$\nAccept the Maxwell relation if\n$$\nr \\;\\le\\; \\mathrm{atol} \\;+\\; \\mathrm{rtol}\\,\\max\\big(\\|\\mathbf{A}\\|_F,\\,\\|\\mathbf{B}\\|_F\\big),\n$$\nwith absolute tolerance $\\,\\mathrm{atol} = 10^{-4}\\,\\mathrm{Pa/K}\\,$ and relative tolerance $\\,\\mathrm{rtol} = 10^{-12}\\,$.\n\nPhysical units:\n- Use $\\,\\lambda\\,$ and $\\,\\mu\\,$ in $\\mathrm{Pa}$, $\\,\\alpha\\,$ in $\\mathrm{K}^{-1}$, $\\,c_v\\,$ in $\\mathrm{J}/(\\mathrm{m}^3\\,\\mathrm{K})$, $\\,T\\,$ and $\\,T_0\\,$ in $\\mathrm{K}$, and $\\,\\varepsilon\\,$ is dimensionless. The derivatives $\\,\\left(\\frac{\\partial \\sigma_{ij}}{\\partial T}\\right)_{\\varepsilon}\\,$ and $-\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T}\\,$ are in $\\mathrm{Pa/K}$.\n\nTest suite:\nProvide the following five parameter sets. Each case is a tuple $\\,(\\lambda,\\mu,\\alpha,c_v,T_0,T,\\varepsilon)\\,$ where $\\,\\varepsilon\\,$ is given by its matrix components:\n1. Case $\\,1\\,$ (general, non-hydrostatic, non-isothermal):\n   - $\\,\\lambda = 50\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\mu = 30\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\alpha = 1.2\\times 10^{-5}\\,\\mathrm{K}^{-1}$, $\\,c_v = 3.0\\times 10^{6}\\,\\mathrm{J}/(\\mathrm{m}^3\\,\\mathrm{K})$, $\\,T_0 = 293.15\\,\\mathrm{K}$, $\\,T = 350\\,\\mathrm{K}$,\n   - $\\,\\varepsilon = \\begin{bmatrix}\n   1.0\\times 10^{-3} & 0.5\\times 10^{-3} & -0.2\\times 10^{-3}\\\\\n   0.5\\times 10^{-3} & 2.0\\times 10^{-3} & 0.3\\times 10^{-3}\\\\\n   -0.2\\times 10^{-3} & 0.3\\times 10^{-3} & -1.5\\times 10^{-3}\n   \\end{bmatrix}$.\n2. Case $\\,2\\,$ (zero thermal expansion boundary):\n   - $\\,\\lambda = 80\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\mu = 40\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\alpha = 0$, $\\,c_v = 2.5\\times 10^{6}\\,\\mathrm{J}/(\\mathrm{m}^3\\,\\mathrm{K})$, $\\,T_0 = 300\\,\\mathrm{K}$, $\\,T = 1000\\,\\mathrm{K}$,\n   - $\\,\\varepsilon = \\begin{bmatrix}\n   1.5\\times 10^{-3} & -0.4\\times 10^{-3} & 0.7\\times 10^{-3}\\\\\n   -0.4\\times 10^{-3} & -0.8\\times 10^{-3} & 0.1\\times 10^{-3}\\\\\n   0.7\\times 10^{-3} & 0.1\\times 10^{-3} & 0.2\\times 10^{-3}\n   \\end{bmatrix}$.\n3. Case $\\,3\\,$ (isothermal at reference temperature, hydrostatic strain):\n   - $\\,\\lambda = 60\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\mu = 20\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\alpha = 9\\times 10^{-6}\\,\\mathrm{K}^{-1}$, $\\,c_v = 3.2\\times 10^{6}\\,\\mathrm{J}/(\\mathrm{m}^3\\,\\mathrm{K})$, $\\,T_0 = 300\\,\\mathrm{K}$, $\\,T = 300\\,\\mathrm{K}$,\n   - $\\,\\varepsilon = 1.0\\times 10^{-4}\\,\\mathbf{I}$.\n4. Case $\\,4\\,$ (negative thermal expansion):\n   - $\\,\\lambda = 10\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\mu = 5\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\alpha = -5.0\\times 10^{-6}\\,\\mathrm{K}^{-1}$, $\\,c_v = 1.5\\times 10^{6}\\,\\mathrm{J}/(\\mathrm{m}^3\\,\\mathrm{K})$, $\\,T_0 = 400\\,\\mathrm{K}$, $\\,T = 200\\,\\mathrm{K}$,\n   - $\\,\\varepsilon = \\begin{bmatrix}\n   -0.6\\times 10^{-3} & 0.2\\times 10^{-3} & 0.0\\\\\n   0.2\\times 10^{-3} & 0.9\\times 10^{-3} & -0.3\\times 10^{-3}\\\\\n   0.0 & -0.3\\times 10^{-3} & 0.4\\times 10^{-3}\n   \\end{bmatrix}$.\n5. Case $\\,5\\,$ (very stiff solid, wide temperature gap):\n   - $\\,\\lambda = 200\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\mu = 150\\times 10^{9}\\,\\mathrm{Pa}$, $\\,\\alpha = 1.0\\times 10^{-6}\\,\\mathrm{K}^{-1}$, $\\,c_v = 4.0\\times 10^{6}\\,\\mathrm{J}/(\\mathrm{m}^3\\,\\mathrm{K})$, $\\,T_0 = 100\\,\\mathrm{K}$, $\\,T = 600\\,\\mathrm{K}$,\n   - $\\,\\varepsilon = \\begin{bmatrix}\n   0.3\\times 10^{-3} & -0.1\\times 10^{-3} & 0.25\\times 10^{-3}\\\\\n   -0.1\\times 10^{-3} & -0.2\\times 10^{-3} & 0.15\\times 10^{-3}\\\\\n   0.25\\times 10^{-3} & 0.15\\times 10^{-3} & 0.05\\times 10^{-3}\n   \\end{bmatrix}$.\n\nComputational requirements:\n- Implement functions to compute $\\,\\psi(\\varepsilon,T)\\,$, $\\,\\sigma(\\varepsilon,T)\\,$, and $\\,s(\\varepsilon,T)\\,$ based on the model definition.\n- Implement the centered finite difference approximations as specified.\n- For each test case, compute the boolean indicating whether the Maxwell relation holds under the above tolerance criterion.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[true1,true2,true3,true4,true5]\" but using Python boolean literals). Each entry must be a boolean corresponding to the test cases $\\,1\\,$ through $\\,5\\,$ in order. No other output is permitted.", "solution": "The user requests a numerical verification of a Maxwell relation in the context of small-strain isotropic thermoelasticity. The problem is validated as scientifically sound, well-posed, and objective. It is based on standard principles of continuum thermodynamics and provides all necessary information for a unique solution.\n\nThe core of the problem is the verification of the equality that arises from the symmetry of mixed partial derivatives of the Helmholtz free energy density $\\,\\psi(\\varepsilon, T)\\,$:\n$$\n\\frac{\\partial^2 \\psi}{\\partial T \\partial \\varepsilon_{ij}} = \\frac{\\partial^2 \\psi}{\\partial \\varepsilon_{ij} \\partial T}\n$$\nGiven the conjugate definitions of Cauchy stress $\\,\\sigma_{ij} = \\frac{\\partial \\psi}{\\partial \\varepsilon_{ij}}\\,$ and entropy density $\\,s = -\\frac{\\partial \\psi}{\\partial T}\\,$, this equality translates directly into the Maxwell relation:\n$$\n\\frac{\\partial \\sigma_{ij}}{\\partial T} = -\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\n$$\nOur task is to compute both sides of this equation numerically and verify their equality within a specified tolerance.\n\nFirst, we must establish the explicit analytical forms for $\\,\\sigma\\,$ and $\\,s\\,$ by differentiating the given Helmholtz free energy density:\n$$\n\\psi(\\varepsilon,T)\n=\n\\frac{1}{2}\\,\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big):\\mathbb{C}:\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big)\n\\;+\\;\nc_v\\Big(T - T_0 - T\\ln\\frac{T}{T_0}\\Big)\n$$\nThe fourth-order isotropic elasticity tensor $\\,\\mathbb{C}\\,$ is defined by its action on a symmetric second-order tensor $\\,\\mathbf{E}\\,$ as $\\,\\mathbb{C}:\\mathbf{E} = 2\\mu\\,\\mathbf{E} + \\lambda\\,\\mathrm{tr}(\\mathbf{E})\\,\\mathbf{I}\\,$.\n\n**1. Derivation of the Cauchy Stress $\\,\\sigma$**\n\nThe Cauchy stress tensor is defined as $\\,\\sigma = \\frac{\\partial \\psi}{\\partial \\varepsilon}\\,$. Differentiating the mechanical part of $\\,\\psi\\,$ with respect to the strain tensor $\\,\\varepsilon\\,$ yields:\n$$\n\\sigma = \\frac{\\partial}{\\partial \\varepsilon} \\left[ \\frac{1}{2}\\,\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big):\\mathbb{C}:\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big) \\right]\n$$\nUsing the properties of the double-dot product and the symmetry of $\\,\\mathbb{C}\\,$ and $\\,\\varepsilon\\,$, this simplifies to:\n$$\n\\sigma(\\varepsilon, T) = \\mathbb{C}:\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big)\n$$\nSubstituting the expression for $\\,\\mathbb{C}\\,$:\n$$\n\\sigma = 2\\mu\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big) + \\lambda\\,\\mathrm{tr}\\big(\\varepsilon - \\alpha\\,(T-T_0)\\,\\mathbf{I}\\big)\\,\\mathbf{I}\n$$\nSince $\\,\\mathrm{tr}(\\mathbf{I})=3\\,$, we have $\\,\\mathrm{tr}\\big(\\alpha\\,(T-T_0)\\,\\mathbf{I}\\big) = 3\\alpha(T-T_0)\\,$. This leads to the final expression for stress, known as the Duhamel-Neumann constitutive law:\n$$\n\\sigma(\\varepsilon, T) = \\big(2\\mu\\varepsilon + \\lambda\\,\\mathrm{tr}(\\varepsilon)\\,\\mathbf{I}\\big) - (2\\mu+3\\lambda)\\alpha(T-T_0)\\,\\mathbf{I}\n$$\nThis analytical expression will be used to compute the stress tensor.\n\n**2. Derivation of the Entropy Density $\\,s$**\n\nThe entropy density is defined as $\\,s = -\\frac{\\partial \\psi}{\\partial T}\\,$. We differentiate $\\,\\psi\\,$ term by term with respect to temperature $\\,T\\,$, holding strain $\\,\\varepsilon\\,$ constant.\nLet $\\,\\varepsilon_{th}(T) = \\alpha(T-T_0)\\mathbf{I}\\,$. The mechanical part of $\\,\\psi\\,$ is a function of $\\,T\\,$ through $\\,\\varepsilon_{th}\\,$. Using the chain rule:\n$$\n\\frac{\\partial \\psi_{\\mathrm{mech}}}{\\partial T} = \\frac{\\partial \\psi_{\\mathrm{mech}}}{\\partial \\varepsilon_{th}} : \\frac{\\partial \\varepsilon_{th}}{\\partial T}\n$$\nFrom the structure of $\\,\\psi_{\\mathrm{mech}}\\,$, we can identify $\\,\\frac{\\partial \\psi_{\\mathrm{mech}}}{\\partial \\varepsilon_{th}} = -\\sigma\\,$. The derivative of the thermal strain is $\\,\\frac{\\partial \\varepsilon_{th}}{\\partial T} = \\alpha\\mathbf{I}\\,$. Therefore, $\\,\\frac{\\partial \\psi_{\\mathrm{mech}}}{\\partial T} = -\\sigma : (\\alpha\\mathbf{I}) = -\\alpha\\,\\mathrm{tr}(\\sigma)\\,$.\nSubstituting the expression for $\\,\\mathrm{tr}(\\sigma) = (2\\mu+3\\lambda)\\mathrm{tr}(\\varepsilon) - 3(2\\mu+3\\lambda)\\alpha(T-T_0)\\,$ gives:\n$$\n\\frac{\\partial \\psi_{\\mathrm{mech}}}{\\partial T} = -(2\\mu+3\\lambda)\\alpha \\big( \\mathrm{tr}(\\varepsilon) - 3\\alpha(T-T_0) \\big)\n$$\nThe derivative of the thermal part of $\\,\\psi\\,$ is:\n$$\n\\frac{\\partial \\psi_{\\mathrm{th}}}{\\partial T} = \\frac{\\partial}{\\partial T} \\left[ c_v\\Big(T - T_0 - T\\ln\\frac{T}{T_0}\\Big) \\right] = c_v\\left(1 - \\left(\\ln\\frac{T}{T_0} + T\\cdot\\frac{1}{T}\\right)\\right) = -c_v\\ln\\frac{T}{T_0}\n$$\nCombining the parts, $\\,\\frac{\\partial \\psi}{\\partial T} = \\frac{\\partial \\psi_{\\mathrm{mech}}}{\\partial T} + \\frac{\\partial \\psi_{\\mathrm{th}}}{\\partial T}\\,$. The entropy is thus:\n$$\ns(\\varepsilon, T) = -\\frac{\\partial \\psi}{\\partial T} = (2\\mu+3\\lambda)\\alpha \\big( \\mathrm{tr}(\\varepsilon) - 3\\alpha(T-T_0) \\big) + c_v\\ln\\frac{T}{T_0}\n$$\nThis analytical expression will be used to compute the entropy density.\n\n**3. Numerical Verification Procedure**\n\nThe verification requires the computation of two matrices, $\\,\\mathbf{A}\\,$ and $\\,\\mathbf{B}\\,$, whose components are defined as:\n$$\nA_{ij} = \\left(\\frac{\\partial \\sigma_{ij}}{\\partial T}\\right)_{\\varepsilon} \\qquad B_{ij} = -\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T}\n$$\nThese derivatives are approximated using centered finite differences as specified.\n\nFor matrix $\\,\\mathbf{A}\\,$, we use a temperature perturbation $\\,\\Delta T = 10^{-6}\\,\\mathrm{K}\\,$:\n$$\n\\mathbf{A} \\approx \\frac{\\sigma(\\varepsilon, T+\\Delta T) - \\sigma(\\varepsilon, T-\\Delta T)}{2\\,\\Delta T}\n$$\nThe entire matrix $\\,\\mathbf{A}\\,$ can be computed with two calls to the function implementing the analytical expression for $\\,\\sigma(\\varepsilon, T)\\,$.\n\nFor matrix $\\,\\mathbf{B}\\,$, we must compute the derivative of the scalar $\\,s\\,$ with respect to each component of the tensor $\\,\\varepsilon\\,$ using a strain perturbation $\\,\\Delta \\varepsilon = 10^{-8}\\,$. The perturbation must respect the symmetry of the strain tensor. A basis tensor $\\,\\mathbf{E}^{(ij)}_{\\mathrm{sym}}\\,$ is defined for this purpose:\n$$\n\\mathbf{E}^{(ii)}_{\\mathrm{sym}} \\text{ has entry } 1 \\text{ at } (i,i) \\text{ and } 0 \\text{ elsewhere.}\n$$\n$$\n\\mathbf{E}^{(ij)}_{\\mathrm{sym}} \\text{ for } i\\neq j \\text{ has entries } 1 \\text{ at } (i,j) \\text{ and } (j,i) \\text{ and } 0 \\text{ elsewhere.}\n$$\nThe derivative component $\\,(\\partial s / \\partial \\varepsilon_{ij})\\,$ is then approximated by:\n$$\n\\left(\\frac{\\partial s}{\\partial \\varepsilon_{ij}}\\right)_{T} \\approx \\frac{s(\\varepsilon + \\Delta\\varepsilon\\,\\mathbf{E}^{(ij)}_{\\mathrm{sym}}, T) - s(\\varepsilon - \\Delta\\varepsilon\\,\\mathbf{E}^{(ij)}_{\\mathrm{sym}}, T)}{2\\,\\Delta\\varepsilon}\n$$\nIt is critical to note that for the specific form of the entropy function $\\,s\\,$, which depends only on the trace of the strain tensor, $\\,\\mathrm{tr}(\\varepsilon)\\,$, this finite difference scheme correctly evaluates the component derivative $\\,\\partial s / \\partial \\varepsilon_{ij}\\,$. For an off-diagonal component ($i \\neq j$), $\\,\\mathrm{tr}(\\mathbf{E}^{(ij)}_{\\mathrm{sym}}) = 0\\,$, so the perturbation does not change $\\,\\mathrm{tr}(\\varepsilon)\\,$, resulting in a zero derivative, which is analytically correct. For a diagonal component ($i=j$), $\\,\\mathrm{tr}(\\mathbf{E}^{(ii)}_{\\mathrm{sym}}) = 1\\,$, and the formula correctly evaluates the derivative with respect to $\\,\\varepsilon_{ii}\\,$. The components of $\\,\\mathbf{B}\\,$ are given by $\\,B_{ij} = - (\\partial s / \\partial \\varepsilon_{ij})_T\\,$.\n\n**4. Verification Metric**\n\nFinally, the Maxwell relation is considered numerically verified if the Frobenius norm of the residual matrix, $\\,r = \\|\\mathbf{A} - \\mathbf{B}\\|_F\\,$, satisfies the mixed-tolerance criterion:\n$$\nr \\le \\mathrm{atol} + \\mathrm{rtol}\\,\\max\\big(\\|\\mathbf{A}\\|_F, \\|\\mathbf{B}\\|_F\\big)\n$$\nwith given tolerances $\\,\\mathrm{atol} = 10^{-4}\\,\\mathrm{Pa/K}\\,$ and $\\,\\mathrm{rtol} = 10^{-12}\\,$. This procedure is applied to each of the five test cases. The implementation will follow this logic to produce the final boolean results.", "answer": "```python\nimport numpy as np\n\ndef compute_sigma(eps, T, lam, mu, alpha, T0):\n    \"\"\"\n    Computes the Cauchy stress tensor sigma based on the Duhamel-Neumann law.\n    \n    Args:\n        eps (np.ndarray): Small strain tensor (3x3).\n        T (float): Absolute temperature in K.\n        lam (float): Lamé's first parameter in Pa.\n        mu (float): Lamé's second parameter (shear modulus) in Pa.\n        alpha (float): Coefficient of linear thermal expansion in 1/K.\n        T0 (float): Reference temperature in K.\n        \n    Returns:\n        np.ndarray: Cauchy stress tensor (3x3) in Pa.\n    \"\"\"\n    tr_eps = np.trace(eps)\n    I = np.identity(3)\n    K3 = 2 * mu + 3 * lam  # This is 3 * Bulk Modulus K\n    \n    sigma_mech = 2 * mu * eps + lam * tr_eps * I\n    sigma_th = K3 * alpha * (T - T0) * I\n    \n    return sigma_mech - sigma_th\n\ndef compute_s(eps, T, lam, mu, alpha, cv, T0):\n    \"\"\"\n    Computes the entropy density s.\n    \n    Args:\n        eps (np.ndarray): Small strain tensor (3x3).\n        T (float): Absolute temperature in K.\n        lam (float): Lamé's first parameter in Pa.\n        mu (float): Lamé's second parameter (shear modulus) in Pa.\n        alpha (float): Coefficient of linear thermal expansion in 1/K.\n        cv (float): Volumetric heat capacity at constant volume in J/(m^3*K).\n        T0 (float): Reference temperature in K.\n        \n    Returns:\n        float: Entropy density in J/(m^3*K) or Pa/K.\n    \"\"\"\n    if T = 0:\n        # The model assumes T > 0 Kelvin.\n        # This case is not expected based on the problem's test suite.\n        return np.nan\n\n    tr_eps = np.trace(eps)\n    K3 = 2 * mu + 3 * lam\n    \n    s_coupling = K3 * alpha * (tr_eps - 3 * alpha * (T - T0))\n    s_thermal = cv * np.log(T / T0) if T > 0 else -np.inf\n    \n    return s_coupling + s_thermal\n\ndef verify_case(case):\n    \"\"\"\n    Verifies the Maxwell relation for a single test case.\n    \"\"\"\n    lam, mu, alpha, cv, T0, T, eps = case\n    \n    # Numerical differentiation parameters\n    delta_T = 1e-6\n    delta_eps = 1e-8\n    \n    # Verification tolerance parameters\n    atol = 1e-4\n    rtol = 1e-12\n\n    # Compute Matrix A = (d(sigma)/dT)_eps\n    sigma_p = compute_sigma(eps, T + delta_T, lam, mu, alpha, T0)\n    sigma_m = compute_sigma(eps, T - delta_T, lam, mu, alpha, T0)\n    A = (sigma_p - sigma_m) / (2 * delta_T)\n\n    # Compute Matrix B = -(ds/deps)_T\n    B = np.zeros((3, 3))\n    for i in range(3):\n        for j in range(3):\n            E_ij_sym = np.zeros((3, 3))\n            if i == j:\n                E_ij_sym[i, i] = 1.0\n            else:\n                E_ij_sym[i, j] = 1.0\n                E_ij_sym[j, i] = 1.0\n            \n            eps_p = eps + delta_eps * E_ij_sym\n            eps_m = eps - delta_eps * E_ij_sym\n\n            s_p = compute_s(eps_p, T, lam, mu, alpha, cv, T0)\n            s_m = compute_s(eps_m, T, lam, mu, alpha, cv, T0)\n\n            ds_deps_ij = (s_p - s_m) / (2 * delta_eps)\n            B[i, j] = -ds_deps_ij\n    \n    # Verify the Maxwell relation using the specified tolerance criterion\n    norm_A = np.linalg.norm(A, 'fro')\n    norm_B = np.linalg.norm(B, 'fro')\n    residual = np.linalg.norm(A - B, 'fro')\n    tolerance = atol + rtol * max(norm_A, norm_B)\n    \n    return residual = tolerance\n\ndef solve():\n    \"\"\"\n    Main solver function to run all test cases and print results.\n    \"\"\"\n    test_cases = [\n        (50e9, 30e9, 1.2e-5, 3.0e6, 293.15, 350, \n         np.array([[1.0e-3, 0.5e-3, -0.2e-3], \n                   [0.5e-3, 2.0e-3, 0.3e-3], \n                   [-0.2e-3, 0.3e-3, -1.5e-3]])),\n        (80e9, 40e9, 0, 2.5e6, 300, 1000, \n         np.array([[1.5e-3, -0.4e-3, 0.7e-3], \n                   [-0.4e-3, -0.8e-3, 0.1e-3], \n                   [0.7e-3, 0.1e-3, 0.2e-3]])),\n        (60e9, 20e9, 9e-6, 3.2e6, 300, 300, \n         1.0e-4 * np.identity(3)),\n        (10e9, 5e9, -5.0e-6, 1.5e6, 400, 200, \n         np.array([[-0.6e-3, 0.2e-3, 0.0], \n                   [0.2e-3, 0.9e-3, -0.3e-3], \n                   [0.0, -0.3e-3, 0.4e-3]])),\n        (200e9, 150e9, 1.0e-6, 4.0e6, 100, 600, \n         np.array([[0.3e-3, -0.1e-3, 0.25e-3], \n                   [-0.1e-3, -0.2e-3, 0.15e-3], \n                   [0.25e-3, 0.15e-3, 0.05e-3]]))\n    ]\n\n    results = []\n    for case in test_cases:\n        result = verify_case(case)\n        results.append(str(result).lower())\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2924996"}, {"introduction": "This final practice bridges the scales from the atomistic world to macroscopic, observable properties, revealing where thermodynamic potentials ultimately originate. Starting from a fundamental Lennard-Jones interatomic potential and the Debye model for lattice vibrations, you will construct the Helmholtz free energy for a crystal. By minimizing this energy, you will simulate how the material's equilibrium volume responds to temperature changes and predict a key engineering parameter: the coefficient of thermal expansion, $\\alpha(T)$ [@problem_id:2924969].", "problem": "Consider an isotropic crystalline solid modeled as a face-centered cubic lattice with pairwise interactions given by a Lennard–Jones potential. The Helmholtz free energy per atom at temperature $T$ and per-atom volume $V$ is defined as $F(T,V)=U(V)+F_{\\mathrm{vib}}(T,V)$, where $U(V)$ is the static lattice energy per atom and $F_{\\mathrm{vib}}(T,V)$ is the vibrational Helmholtz free energy in the quasiharmonic Debye model. Work in units of electronvolts (energy), Angstrom to the third power (volume), and Kelvin (temperature). The task is to design and implement a program that, for specified parameter sets, numerically minimizes $F(T,V)$ with respect to $V$ at each specified temperature, computes the equilibrium volume $V^{\\star}(T)$, and then predicts the volumetric coefficient of thermal expansion $\\alpha(T)$ defined by $\\alpha(T)=\\frac{1}{V^{\\star}(T)}\\left.\\frac{\\partial V^{\\star}(T)}{\\partial T}\\right|_{P}$, using a finite-difference approximation in temperature. Express the final $\\alpha(T)$ values in $\\mathrm{K}^{-1}$, rounded to eight decimal places.\n\nUse the following fundamental base and modeling assumptions:\n\n- The pair potential is the Lennard–Jones $12$–$6$ potential $\\phi(r)=4\\varepsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{12}-\\left(\\frac{\\sigma}{r}\\right)^{6}\\right]$, with well depth $\\varepsilon$ (in $\\mathrm{eV}$) and length scale $\\sigma$ (in $\\mathrm{\\AA}$). For a face-centered cubic lattice, the per-atom static energy is\n$$\nU(V)=\\frac{1}{2}\\sum_{j}\\phi(r_j)=2\\varepsilon\\left[S_{12}\\left(\\frac{\\sigma}{r_{\\mathrm{nn}}(V)}\\right)^{12}-S_{6}\\left(\\frac{\\sigma}{r_{\\mathrm{nn}}(V)}\\right)^{6}\\right],\n$$\nwhere $S_{6}=14.45392$ and $S_{12}=12.13188$ are dimensionless lattice sums for the face-centered cubic structure, and $r_{\\mathrm{nn}}(V)$ is the nearest-neighbor distance as a function of $V$. For face-centered cubic, the lattice parameter is $a(V)=(4V)^{1/3}$ and the nearest-neighbor distance is $r_{\\mathrm{nn}}(V)=a(V)/\\sqrt{2}$.\n\n- The vibrational Helmholtz free energy per atom in the Debye model (including zero-point energy) is\n$$\nF_{\\mathrm{vib}}(T,V)=9k_{\\mathrm{B}}T\\left(\\frac{T}{\\Theta_{\\mathrm{D}}(V)}\\right)^{3}\\int_{0}^{\\Theta_{\\mathrm{D}}(V)/T}y^{2}\\ln\\left(1-e^{-y}\\right)\\,\\mathrm{d}y+\\frac{9}{8}k_{\\mathrm{B}}\\Theta_{\\mathrm{D}}(V),\n$$\nfor $T0$, and reduces to $F_{\\mathrm{vib}}(0,V)=\\frac{9}{8}k_{\\mathrm{B}}\\Theta_{\\mathrm{D}}(V)$ at $T=0$. Here $k_{\\mathrm{B}}$ is the Boltzmann constant in $\\mathrm{eV/K}$, and $\\Theta_{\\mathrm{D}}(V)$ is the Debye temperature. Assume a Grüneisen-type volume dependence,\n$$\n\\Theta_{\\mathrm{D}}(V)=\\Theta_{\\mathrm{D},0}\\left(\\frac{V}{V_{0}}\\right)^{-\\gamma},\n$$\nwhere $\\Theta_{\\mathrm{D},0}$ is the Debye temperature at the $T=0$ static-lattice equilibrium per-atom volume $V_{0}$, and $\\gamma$ is the (dimensionless) Grüneisen parameter.\n\n- The equilibrium volume at each temperature is obtained by the condition $\\frac{\\partial F(T,V)}{\\partial V}=0$ at fixed $T$ (zero external pressure), which you must implement by direct numerical minimization of $F(T,V)$ with respect to $V$ at each specified $T$.\n\n- The coefficient of thermal expansion must be computed from the definition $\\alpha(T)=\\frac{1}{V^{\\star}(T)}\\frac{\\mathrm{d}V^{\\star}(T)}{\\mathrm{d}T}$ using a finite-difference approximation in temperature. Use a small symmetric temperature increment $\\Delta T$ where possible. At a temperature grid point $T_i$, use the central difference $\\frac{V^{\\star}(T_i+\\Delta T)-V^{\\star}(T_i-\\Delta T)}{2\\Delta T}$ when both $T_i-\\Delta T$ and $T_i+\\Delta T$ are nonnegative; otherwise, use a one-sided difference with step $\\Delta T$.\n\nConstants and unit conventions:\n\n- Use $k_{\\mathrm{B}}=8.617333262\\times 10^{-5}\\ \\mathrm{eV/K}$.\n- All energies must be in $\\mathrm{eV}$, volumes in $\\mathrm{\\AA}^3$, and temperatures in $\\mathrm{K}$. The final $\\alpha(T)$ must be in $\\mathrm{K}^{-1}$.\n\nAlgorithmic requirements:\n\n- For each test case, first obtain $V_{0}$ by minimizing $U(V)$ with respect to $V$.\n- Then, for each listed temperature $T$, numerically minimize $F(T,V)$ with respect to $V$ using a bounded search over a physically sensible interval around $V_{0}$.\n- Compute $\\alpha(T)$ by finite differences using a temperature increment $\\Delta T$ chosen by you, but justified in the solution and implemented consistently across all test cases.\n- Round and report each $\\alpha(T)$ value to eight decimal places.\n\nTest suite:\n\nProvide results for the following three test cases. Each case is defined by $(\\varepsilon,\\sigma,\\Theta_{\\mathrm{D},0},\\gamma,\\{T\\ \\mathrm{grid}\\})$, with $\\varepsilon$ in $\\mathrm{eV}$, $\\sigma$ in $\\mathrm{\\AA}$, $\\Theta_{\\mathrm{D},0}$ in $\\mathrm{K}$, and $\\gamma$ dimensionless:\n\n- Case $1$: $(\\varepsilon, \\sigma, \\Theta_{\\mathrm{D},0}, \\gamma) = (0.0104, 3.405, 92, 2.0)$ and temperatures $\\{0, 50, 100, 200\\}$.\n- Case $2$: $(\\varepsilon, \\sigma, \\Theta_{\\mathrm{D},0}, \\gamma) = (0.0200, 2.800, 200, 1.5)$ and temperatures $\\{0, 300, 600, 900\\}$.\n- Case $3$: $(\\varepsilon, \\sigma, \\Theta_{\\mathrm{D},0}, \\gamma) = (0.0080, 3.000, 400, 0.5)$ and temperatures $\\{0, 100, 500, 1000\\}$.\n\nFinal output format:\n\nYour program should produce a single line of output containing a list of lists, where the $j$-th sublist contains the values of $\\alpha(T)$ for the $j$-th test case, in the same order as the temperatures specified for that case and rounded to eight decimal places. For example, the output must look like\n\"[ [a11,a12,...], [a21,a22,...], [a31,a32,...] ]\"\nwith no extra spaces beyond those shown and with each $a_{ij}$ a decimal float in $\\mathrm{K}^{-1}$.", "solution": "The problem as stated is a well-posed exercise in computational solid-state physics. It is scientifically sound, relying on standard and accepted models: the Lennard-Jones potential for pair interactions in a face-centered cubic lattice, and the quasiharmonic Debye model for vibrational thermodynamics. The problem is self-contained, providing all necessary physical parameters, constants, and mathematical formulations. It is objective and its requirements are algorithmically formalizable. Therefore, the problem is deemed valid and a complete solution will be constructed.\n\nThe methodological approach is as follows.\n\nFirst, we determine the static equilibrium volume per atom, $V_0$, which corresponds to the configuration of minimum energy for the static lattice at temperature $T=0\\,\\mathrm{K}$. This volume is found by minimizing the static lattice energy $U(V)$ with respect to $V$. The expression for $U(V)$ is given as:\n$$\nU(V) = 2\\varepsilon\\left[S_{12}\\left(\\frac{\\sigma}{r_{\\mathrm{nn}}(V)}\\right)^{12}-S_{6}\\left(\\frac{\\sigma}{r_{\\mathrm{nn}}(V)}\\right)^{6}\\right]\n$$\nFor a face-centered cubic lattice, the nearest-neighbor distance $r_{\\mathrm{nn}}(V)$ is related to the per-atom volume $V$ by $r_{\\mathrm{nn}}(V)^6 = 2V^2$. Substituting this into the energy expression gives:\n$$\nU(V) = 2\\varepsilon\\left[S_{12}\\frac{\\sigma^{12}}{4V^4} - S_{6}\\frac{\\sigma^{6}}{2V^2}\\right]\n$$\nThe condition for minimum energy is $\\frac{\\mathrm{d}U}{\\mathrm{d}V} = 0$. Differentiating and solving for $V$ gives an analytical expression for $V_0$:\n$$\n\\frac{\\mathrm{d}U}{\\mathrm{d}V} = 2\\varepsilon \\left[ -S_{12}\\frac{\\sigma^{12}}{V^5} + S_{6}\\frac{\\sigma^{6}}{V^3} \\right] = 0\n$$\nThis implies $S_{6}\\sigma^{6}V^{-3} = S_{12}\\sigma^{12}V^{-5}$, which yields:\n$$\nV_0^2 = \\frac{S_{12}}{S_6}\\sigma^6 \\implies V_0 = \\sigma^3 \\sqrt{\\frac{S_{12}}{S_6}}\n$$\nThis value $V_0$ serves as the reference volume for the Grüneisen model of the Debye temperature.\n\nSecond, we formulate the total Helmholtz free energy per atom, $F(T,V)$, as the sum of the static energy $U(V)$ and the vibrational free energy $F_{\\mathrm{vib}}(T,V)$:\n$$\nF(T,V) = U(V) + F_{\\mathrm{vib}}(T,V)\n$$\nThe vibrational contribution, within the Debye model, is given by:\n$$\nF_{\\mathrm{vib}}(T,V)=9k_{\\mathrm{B}}T\\left(\\frac{T}{\\Theta_{\\mathrm{D}}(V)}\\right)^{3}\\int_{0}^{\\Theta_{\\mathrm{D}}(V)/T}y^{2}\\ln\\left(1-e^{-y}\\right)\\,\\mathrm{d}y+\\frac{9}{8}k_{\\mathrm{B}}\\Theta_{\\mathrm{D}}(V)\n$$\nHere, $k_{\\mathrm{B}}=8.617333262\\times 10^{-5}\\ \\mathrm{eV/K}$ is the Boltzmann constant, and the Debye temperature $\\Theta_{\\mathrm{D}}(V)$ is given by the Grüneisen relation $\\Theta_{\\mathrm{D}}(V)=\\Theta_{\\mathrm{D},0}\\left(V/V_{0}\\right)^{-\\gamma}$. The integral, which is a standard form related to the Debye function, must be evaluated numerically. For the case $T=0\\,\\mathrm{K}$, the expression simplifies to the zero-point energy contribution, $F_{\\mathrm{vib}}(0,V) = \\frac{9}{8}k_{\\mathrm{B}}\\Theta_{\\mathrm{D}}(V)$.\n\nThird, for each specified temperature $T_i$ in the test suite, the corresponding equilibrium volume $V^{\\star}(T_i)$ is found by numerically minimizing the total Helmholtz free energy $F(T_i,V)$ with respect to $V$. This minimization represents the physical condition of zero external pressure. We employ a bounded scalar optimization algorithm (Brent's method) over a physically sensible interval, such as $[0.8V_0, 1.5V_0]$, to robustly find the minimum.\n\nFourth, the volumetric coefficient of thermal expansion, $\\alpha(T)$, is calculated using the finite-difference approximation specified in the problem statement:\n$$\n\\alpha(T) = \\frac{1}{V^{\\star}(T)}\\frac{\\mathrm{d}V^{\\star}(T)}{\\mathrm{d}T}\n$$\nThe derivative $\\frac{\\mathrm{d}V^{\\star}}{\\mathrm{d}T}$ at a temperature $T_i$ is approximated using a symmetric central difference, $\\frac{V^{\\star}(T_i+\\Delta T)-V^{\\star}(T_i-\\Delta T)}{2\\Delta T}$, for any $T_i$ where $T_i-\\Delta T$ is non-negative. For the specific case of $T_i=0\\,\\mathrm{K}$, a one-sided forward difference, $\\frac{V^{\\star}(T_i+\\Delta T)-V^{\\star}(T_i)}{\\Delta T}$, is used. For these computations, a temperature increment of $\\Delta T = 1.0\\,\\mathrm{K}$ is chosen. This value is sufficiently small relative to the temperature grids to provide an accurate approximation of the derivative, while being large enough to avoid significant floating-point cancellation errors.\n\nThe implementation encapsulates this logic in a program that iterates through each test case. To optimize computation, the calculated values of $V^{\\star}(T)$ are cached, as they may be required for derivative calculations at adjacent temperature points. The final computed values of $\\alpha(T)$ are rounded to eight decimal places as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import integrate, optimize\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    It computes the coefficient of thermal expansion for a solid modeled with\n    a Lennard-Jones potential and the quasiharmonic Debye model.\n    \"\"\"\n\n    # Physical and model constants\n    KB = 8.617333262e-5  # Boltzmann constant in eV/K\n    S6 = 14.45392          # Lattice sum for r^-6 term\n    S12 = 12.13188         # Lattice sum for r^-12 term\n\n    class ThermalExpansionCalculator:\n        \"\"\"\n        A class to encapsulate the calculations for a single set of material parameters.\n        \"\"\"\n        def __init__(self, epsilon, sigma, theta_d0, gamma):\n            self.epsilon = epsilon\n            self.sigma = sigma\n            self.theta_d0 = theta_d0\n            self.gamma = gamma\n\n            # Analytically calculate V0, the static equilibrium volume at T=0K\n            self.v0 = self.sigma**3 * np.sqrt(S12 / S6)\n            \n            # Memoization cache for storing computed equilibrium volumes V*(T)\n            self.v_star_cache = {}\n\n        def U(self, V):\n            \"\"\"Static lattice energy per atom U(V).\"\"\"\n            if V = 0:\n                return np.inf\n            # Expression derived from U(r_nn) and r_nn^6(V) = 2V^2\n            term_12 = S12 * (self.sigma**12) / (4 * V**4)\n            term_6 = S6 * (self.sigma**6) / (2 * V**2)\n            return 2 * self.epsilon * (term_12 - term_6)\n\n        def theta_d(self, V):\n            \"\"\"Debye temperature as a function of volume V.\"\"\"\n            return self.theta_d0 * (V / self.v0)**(-self.gamma)\n\n        @staticmethod\n        def _debye_integrand(y):\n            \"\"\"Integrand for the Debye model's thermal energy term.\"\"\"\n            if y == 0:\n                return 0.0\n            # Use approximation for large y to avoid overflow in exp(-y)\n            # and subsequent log(1), which is safe but can be slow.\n            if y > 700:\n                return -y**2 * np.exp(-y)\n            return y**2 * np.log(1 - np.exp(-y))\n\n        def F_vib(self, T, V):\n            \"\"\"Vibrational Helmholtz free energy per atom F_vib(T, V).\"\"\"\n            if V = 0:\n                return np.inf\n            \n            theta = self.theta_d(V)\n            # Zero-point energy (ZPE)\n            zpe = (9.0 / 8.0) * KB * theta\n\n            # For T=0, only ZPE contributes\n            if T  1e-9:\n                return zpe\n\n            integral_limit = theta / T\n            integral_val, _ = integrate.quad(self._debye_integrand, 0, integral_limit, epsabs=1e-12, epsrel=1e-12)\n            \n            thermal_term = 9 * KB * T * (T / theta)**3 * integral_val\n            \n            return thermal_term + zpe\n\n        def F_total(self, T, V):\n            \"\"\"Total Helmholtz free energy per atom F(T, V).\"\"\"\n            return self.U(V) + self.F_vib(T, V)\n\n        def get_V_star(self, T):\n            \"\"\"\n            Calculates and caches the equilibrium volume V*(T) by minimizing F(T, V).\n            \"\"\"\n            # Use a tuple for the key because floats can be tricky\n            temp_key = round(T, 6)\n            if temp_key in self.v_star_cache:\n                return self.v_star_cache[temp_key]\n\n            f_to_minimize = lambda v: self.F_total(T, v)\n\n            # Search for the minimum in a physically reasonable range around V0\n            bounds = (0.8 * self.v0, 1.5 * self.v0)\n            \n            result = optimize.minimize_scalar(f_to_minimize, bounds=bounds, method='bounded')\n            \n            v_eq = result.x\n            self.v_star_cache[temp_key] = v_eq\n            return v_eq\n\n        def calculate_alpha_for_grid(self, T_grid, delta_T=1.0):\n            \"\"\"\n            Calculates the thermal expansion coefficient alpha(T) for a grid of temperatures.\n            \"\"\"\n            alphas = []\n            for T in T_grid:\n                V_star_T = self.get_V_star(T)\n                \n                # Use a one-sided (forward) difference if T  delta_T (covers T=0)\n                if T  delta_T:\n                    V_star_plus_dT = self.get_V_star(T + delta_T)\n                    dV_dT = (V_star_plus_dT - V_star_T) / delta_T\n                else:  # Use a central difference for all other temperatures\n                    V_star_plus_dT = self.get_V_star(T + delta_T)\n                    V_star_minus_dT = self.get_V_star(T - delta_T)\n                    dV_dT = (V_star_plus_dT - V_star_minus_dT) / (2.0 * delta_T)\n                    \n                alpha = (1.0 / V_star_T) * dV_dT\n                alphas.append(alpha)\n            \n            return alphas\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\"params\": (0.0104, 3.405, 92, 2.0), \"T_grid\": [0.0, 50.0, 100.0, 200.0]},\n        {\"params\": (0.0200, 2.800, 200, 1.5), \"T_grid\": [0.0, 300.0, 600.0, 900.0]},\n        {\"params\": (0.0080, 3.000, 400, 0.5), \"T_grid\": [0.0, 100.0, 500.0, 1000.0]},\n    ]\n    \n    all_results = []\n    \n    for case in test_cases:\n        epsilon, sigma, theta_d0, gamma = case[\"params\"]\n        T_grid = case[\"T_grid\"]\n        \n        calculator = ThermalExpansionCalculator(epsilon, sigma, theta_d0, gamma)\n        alphas = calculator.calculate_alpha_for_grid(T_grid)\n        \n        all_results.append(alphas)\n\n    # Format the final output string exactly as specified.\n    sublist_strings = []\n    for sublist in all_results:\n        # Round each value to 8 decimal places and format to string\n        formatted_sublist = \"[\" + \",\".join([f\"{x:.8f}\" for x in sublist]) + \"]\"\n        sublist_strings.append(formatted_sublist)\n        \n    final_output = \"[\" + \", \".join(sublist_strings) + \"]\"\n    print(final_output)\n\nsolve()\n```", "id": "2924969"}]}