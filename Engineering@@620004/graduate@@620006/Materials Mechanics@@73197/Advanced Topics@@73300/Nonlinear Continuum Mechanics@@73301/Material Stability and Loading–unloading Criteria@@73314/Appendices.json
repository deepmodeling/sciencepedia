{"hands_on_practices": [{"introduction": "To build a robust understanding of material stability, we begin with the most fundamental case: a simple uniaxial system. This exercise grounds the abstract concept of Drucker's stability postulate in a tangible calculation [@problem_id:2899889]. By analyzing the second-order work, $\\delta^2 W$, you will derive the material's response to a small perturbation and link it directly to a measurable property, the consistent elastoplastic tangent modulus. This practice is essential for developing intuition about how material hardening contributes to stable behavior.", "problem": "A small-strain, rate-independent, uniaxial elastoplastic solid with linear isotropic hardening is subjected to a single load increment from time step $n$ to $n+1$. The elastic law is $ \\sigma = E \\left( \\varepsilon - \\varepsilon^{p} \\right)$ with Young’s modulus $E > 0$. The yield function is $ f(\\sigma,\\alpha) = |\\sigma| - \\left( \\sigma_{y0} + H \\alpha \\right)$, where $\\sigma_{y0} > 0$ is the initial yield stress, $H \\ge 0$ is the linear hardening modulus, and $\\alpha$ is the accumulated plastic strain. Assume monotonic tension so that $\\sigma \\ge 0$ and $|\\sigma| = \\sigma$, and adopt associated flow with normality and consistency: $d\\varepsilon^{p} = d\\lambda \\, \\partial f / \\partial \\sigma$ and $d\\alpha = d\\lambda$, with $d\\lambda \\ge 0$ the plastic multiplier. The return-mapping procedure is used: an elastic predictor $\\sigma_{\\mathrm{tr}} = E \\left( \\varepsilon_{n+1} - \\varepsilon^{p}_{n} \\right)$ is formed and, if $f(\\sigma_{\\mathrm{tr}},\\alpha_{n}) > 0$, a plastic corrector is performed so that the final state satisfies $f(\\sigma_{n+1},\\alpha_{n+1}) = 0$. Assume the trial state is overstressed and a plastic corrector occurs, with the sign of stress remaining nonnegative throughout the step. \n\nTasks:\n1) Starting only from the small-strain kinematics, the elastic law, the yield function, and the associated flow and consistency conditions, derive the consistent elastoplastic tangent $ C^{ep} = \\partial \\sigma_{n+1} / \\partial \\varepsilon_{n+1}$ at the end of the return-mapping step.\n2) Using the definition of the second-order work $\\delta^{2} W = \\delta \\sigma \\, \\delta \\varepsilon$ evaluated at the updated state for an arbitrary virtual strain increment $\\delta \\varepsilon$, express $\\delta^{2} W$ in terms of $C^{ep}$ and $\\delta \\varepsilon$. Then, determine the minimum possible value of $\\delta^{2} W$ over all virtual strain increments of unit norm, i.e., $|\\delta \\varepsilon| = 1$. State the condition under which the state is incrementally stable in the sense of Drucker’s postulate of stability of materials.\n\nProvide as your final answer the closed-form analytic expression for the minimum second-order work over all $|\\delta \\varepsilon| = 1$. Do not include units and do not approximate.", "solution": "The problem is subjected to a rigorous validation process. All givens are extracted and examined for scientific soundness, consistency, and completeness.\n\n**Extracted Givens:**\n-   **Model**: Small-strain, rate-independent, uniaxial elastoplastic solid with linear isotropic hardening.\n-   **Elastic Law**: $ \\sigma = E \\left( \\varepsilon - \\varepsilon^{p} \\right)$ with Young’s modulus $E > 0$.\n-   **Yield Function**: $ f(\\sigma,\\alpha) = |\\sigma| - \\left( \\sigma_{y0} + H \\alpha \\right)$, with initial yield stress $\\sigma_{y0} > 0$, hardening modulus $H \\ge 0$, and accumulated plastic strain $\\alpha$.\n-   **Assumptions**: Monotonic tension ($\\sigma \\ge 0$, so $|\\sigma| = \\sigma$), associated flow rule, plastic corrector step occurs.\n-   **Flow Rule**: $d\\varepsilon^{p} = d\\lambda \\, \\partial f / \\partial \\sigma$.\n-   **Hardening Law**: $d\\alpha = d\\lambda$, where $d\\lambda \\ge 0$.\n-   **Return-Mapping**: An elastic predictor $\\sigma_{\\mathrm{tr}} = E \\left( \\varepsilon_{n+1} - \\varepsilon^{p}_{n} \\right)$ is used, and plastic correction ensures $f(\\sigma_{n+1},\\alpha_{n+1}) = 0$.\n-   **Task 1**: Derive the consistent elastoplastic tangent $ C^{ep} = \\partial \\sigma_{n+1} / \\partial \\varepsilon_{n+1}$.\n-   **Task 2**: Analyze the second-order work $\\delta^{2} W = \\delta \\sigma \\, \\delta \\varepsilon$ to find its minimum value for $|\\delta \\varepsilon| = 1$ and state the material stability condition.\n\n**Validation Verdict:**\nThe problem is scientifically grounded, well-posed, and objective. It describes a standard model in plasticity theory and poses a standard, non-trivial task. The formulation is self-contained and free of contradictions or ambiguities. The problem is deemed **valid**. We proceed to the solution.\n\nThe solution is developed in two parts as requested.\n\n**Part 1: Derivation of the consistent elastoplastic tangent $C^{ep}$**\n\nFor a rate-independent material, the state variables evolve incrementally. We consider the rate (or incremental) form of the constitutive equations during a plastic loading event.\n\nThe total strain rate $d\\varepsilon$ is additively decomposed into an elastic part $d\\varepsilon^{e}$ and a plastic part $d\\varepsilon^{p}$:\n$$d\\varepsilon = d\\varepsilon^{e} + d\\varepsilon^{p}$$\nThe stress rate $d\\sigma$ is related to the elastic strain rate via the elastic modulus $E$:\n$$d\\sigma = E \\, d\\varepsilon^{e} = E(d\\varepsilon - d\\varepsilon^{p})$$\nThe yield function under the assumption of monotonic tension ($\\sigma \\ge 0$) is $f(\\sigma, \\alpha) = \\sigma - (\\sigma_{y0} + H\\alpha)$.\nThe associated flow rule dictates that the plastic strain rate is normal to the yield surface:\n$$d\\varepsilon^{p} = d\\lambda \\frac{\\partial f}{\\partial \\sigma}$$\nWith our yield function, $\\partial f / \\partial \\sigma = 1$. Thus,\n$$d\\varepsilon^{p} = d\\lambda$$\nThe hardening law is given as $d\\alpha = d\\lambda$. Since the material is plastically loading, the state must remain on the yield surface. This is enforced by the consistency condition, $df = 0$:\n$$df = \\frac{\\partial f}{\\partial \\sigma} d\\sigma + \\frac{\\partial f}{\\partial \\alpha} d\\alpha = 0$$\nThe partial derivatives are $\\partial f / \\partial \\sigma = 1$ and $\\partial f / \\partial \\alpha = -H$. Substituting these and $d\\alpha = d\\lambda$ into the consistency condition gives:\n$$(1) d\\sigma + (-H) d\\lambda = 0 \\implies d\\sigma = H \\, d\\lambda$$\nThis equation relates the stress increment to the plastic multiplier increment. For a hardening material ($H > 0$), an increase in stress is required for further plastic flow. For a perfectly plastic material ($H=0$), $d\\sigma = 0$.\n\nWe now have a system of equations. From $d\\sigma = H \\, d\\lambda$, we find $d\\lambda = d\\sigma / H$ for $H>0$.\nWe substitute $d\\varepsilon^p=d\\lambda=d\\sigma/H$ into the stress-strain rate equation:\n$$d\\sigma = E \\left(d\\varepsilon - \\frac{d\\sigma}{H}\\right)$$\n$$d\\sigma = E \\, d\\varepsilon - \\frac{E}{H} d\\sigma$$\nWe rearrange the equation to solve for the ratio $d\\sigma / d\\varepsilon$:\n$$d\\sigma \\left(1 + \\frac{E}{H}\\right) = E \\, d\\varepsilon$$\n$$d\\sigma \\left(\\frac{H+E}{H}\\right) = E \\, d\\varepsilon$$\n$$\\frac{d\\sigma}{d\\varepsilon} = \\frac{EH}{E+H}$$\nThis ratio is the elastoplastic tangent modulus. For the simple case of a backward-Euler integration scheme applied to a problem with linear hardening, the consistent tangent modulus $C^{ep}$ is identical to the continuum tangent modulus.\n$$C^{ep} = \\frac{\\partial \\sigma_{n+1}}{\\partial \\varepsilon_{n+1}} = \\frac{EH}{E+H}$$\nThis formula is also valid for the case of perfect plasticity ($H=0$), where it correctly yields $C^{ep} = 0$.\n\n**Part 2: Second-order work and stability analysis**\n\nThe second-order work $\\delta^{2} W$ is defined as the product of a virtual stress increment $\\delta \\sigma$ and a virtual strain increment $\\delta \\varepsilon$ at the state $(\\sigma_{n+1}, \\varepsilon_{n+1})$:\n$$\\delta^{2} W = \\delta \\sigma \\, \\delta \\varepsilon$$\nThe problem directs us to express $\\delta^{2} W$ in terms of $C^{ep}$. This implies we are to linearize the response to the virtual strain increment using the derived tangent modulus, which is appropriate for a perturbation that causes continued plastic loading.\n$$\\delta \\sigma = C^{ep} \\delta \\varepsilon$$\nSubstituting this into the definition of second-order work:\n$$\\delta^{2} W = (C^{ep} \\delta \\varepsilon) \\delta \\varepsilon = C^{ep} (\\delta \\varepsilon)^2$$\nWe are asked to find the minimum value of $\\delta^{2} W$ for all virtual strain increments of unit norm, $|\\delta \\varepsilon| = 1$. In this uniaxial problem, the strain $\\delta \\varepsilon$ is a scalar, so its norm is its absolute value. The condition $|\\delta \\varepsilon| = 1$ means that either $\\delta \\varepsilon = 1$ or $\\delta \\varepsilon = -1$. In both cases, $(\\delta \\varepsilon)^2 = 1$.\nTherefore, for any such virtual increment, the second-order work is:\n$$\\delta^{2} W = C^{ep} (1) = C^{ep}$$\nSince the value is constant for all admissible virtual increments, its minimum value is simply $C^{ep}$.\n$$\\min_{|\\delta \\varepsilon|=1} (\\delta^{2} W) = C^{ep} = \\frac{EH}{E+H}$$\nDrucker's postulate for material stability requires that the second-order work be positive for any process initiating from an equilibrium state. In rate form, $\\delta \\sigma \\, \\delta \\varepsilon > 0$.\nThe stability of the material is assessed by considering all possible virtual perturbations $\\delta\\varepsilon$ from the current plastic state.\n-   If the perturbation corresponds to continued loading (in this case, $\\delta\\varepsilon > 0$), the relevant tangent is $C^{ep}$. Stability requires $\\delta^{2} W = C^{ep}(\\delta\\varepsilon)^2 > 0$. Since $(\\delta\\varepsilon)^2>0$, this implies $C^{ep} > 0$.\n-   If the perturbation corresponds to elastic unloading (in this case, $\\delta\\varepsilon < 0$), the relevant tangent is the elastic modulus $E$. Stability requires $\\delta^{2} W = E(\\delta\\varepsilon)^2 > 0$. As $E>0$ is given, this condition is always met for unloading.\n\nThe overall stability of the material is governed by the \"weakest\" path. Since we know $0 \\le C^{ep} \\le E$ (because $E>0, H \\ge 0$), the critical condition is $C^{ep} > 0$. This leads to:\n$$\\frac{EH}{E+H} > 0$$\nGiven $E>0$, this inequality holds if and only if $H>0$. Thus, the material is stable if it exhibits hardening ($H>0$) and is neutrally stable if it is perfectly plastic ($H=0$, leading to $C^{ep}=0$ and $\\delta^2W=0$). Softening ($H<0$) would lead to instability ($C^{ep}<0$). The problem restricts $H \\ge 0$. The condition for strict stability is $H>0$.\n\nThe final required answer is the minimum second-order work for $|\\delta \\varepsilon| = 1$.", "answer": "$$\\boxed{\\frac{EH}{E+H}}$$", "id": "2899889"}, {"introduction": "Moving from continuous theory to computational practice, we now examine how stability principles govern the logic of numerical algorithms. Simulations in mechanics rely on predictor-corrector schemes that must accurately determine whether a material is loading plastically or responding elastically. This exercise demonstrates the critical importance of correctly identifying the active yield surface by showing the physical consequences of an algorithmic error [@problem_id:2899914]. By calculating the outcome of a deliberately flawed return-mapping step, you will see firsthand how it leads to negative plastic dissipation, a violation of thermodynamic principles, reinforcing why robust loading-unloading criteria are indispensable.", "problem": "A two-dimensional idealization of an associative, perfectly plastic material is considered in a generalized stress space with stress vector $\\boldsymbol{\\sigma} = (\\sigma_{1}, \\sigma_{2})$. The yield function is the piecewise linear map\n$$\nf(\\boldsymbol{\\sigma}) = \\max\\left(|\\sigma_{1}|,\\,|\\sigma_{2}|\\right) - k \\le 0,\n$$\nwith $k>0$ the yield stress. The elastic law is linear and diagonal in components,\n$$\n\\Delta \\boldsymbol{\\sigma} = \\mathbf{C}\\,(\\Delta \\boldsymbol{\\varepsilon} - \\Delta \\boldsymbol{\\varepsilon}^{p}), \\quad \\mathbf{C} = \\operatorname{diag}(K_{1}, K_{2}),\n$$\nand the plastic flow is associative with flow direction $\\boldsymbol{n} = \\partial f/\\partial \\boldsymbol{\\sigma}$ equal to the outward unit normal of the active face (for example, if the active face is $\\sigma_{1}=k$ with $\\sigma_{1}>0$, then $\\boldsymbol{n}=(1,0)$; if it is $\\sigma_{2}=k$ with $\\sigma_{2}>0$, then $\\boldsymbol{n}=(0,1)$). A backward Euler (BE) time-discrete update over a step from time $t^{n}$ to $t^{n+1}$ uses the trial stress $\\boldsymbol{\\sigma}^{\\text{tr}} = \\boldsymbol{\\sigma}^{n} + \\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon}$ and, if yielding occurs, a return mapping that enforces the active face consistency at $t^{n+1}$ together with $\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\gamma\\,\\boldsymbol{n}$, where $\\Delta \\gamma$ is the plastic multiplier increment.\n\nConsider the following data:\n- Yield stress $k = 200\\,\\text{MPa}$.\n- Elastic moduli $K_{1} = K_{2} = 200{,}000\\,\\text{MPa}$.\n- Previous-step stress $\\boldsymbol{\\sigma}^{n} = (200,\\,190)\\,\\text{MPa}$, which lies on the face $\\sigma_{1}=k$ with $\\sigma_{1}>0$.\n- Strain increment $\\Delta \\boldsymbol{\\varepsilon} = \\big(-1.5\\times 10^{-4},\\,1.0\\times 10^{-4}\\big)$.\n\nA time-discrete plastic dissipation measure used in the algorithm is defined as\n$$\nD^{n+1} := \\boldsymbol{\\sigma}^{n+1} : \\Delta \\boldsymbol{\\varepsilon}^{p}.\n$$\nFor an associative, stable material and a correctly identified active face, $D^{n+1}$ is expected to be nonnegative.\n\nUsing the data above, compute $D^{n+1}$ that would be obtained if, contrary to the correct physics, the algorithm mistakenly identifies the active face at $t^{n+1}$ as $\\sigma_{1}=k$ with $\\sigma_{1}>0$ (i.e., it retains the previous-step face), rather than the face that is actually activated by the trial stress. Use the backward Euler return mapping with this misidentified face to determine $\\Delta \\boldsymbol{\\varepsilon}^{p}$ and $\\boldsymbol{\\sigma}^{n+1}$, then evaluate $D^{n+1}$. Express your final answer in $\\text{MPa}$. Do not include units in your final answer and provide a single number. No rounding is required beyond exact arithmetic implied by the given numbers.", "solution": "The problem as stated is valid. It presents a well-defined exercise in computational plasticity, utilizing a standard backward Euler return mapping algorithm for a perfectly plastic material with a piecewise linear yield surface. The data provided are complete and scientifically consistent. The core of the problem is to compute the consequence of a deliberately incorrect algorithmic choice—specifically, the misidentification of the active yield face—which is a legitimate method for analyzing the properties and stability of the numerical scheme. We shall proceed with the calculation as requested.\n\nThe objective is to compute the plastic dissipation measure $D^{n+1} := \\boldsymbol{\\sigma}^{n+1} : \\Delta \\boldsymbol{\\varepsilon}^{p}$ under the hypothetical condition that the active yield face at time $t^{n+1}$ is incorrectly assumed to be $\\sigma_{1}=k$, the same face on which the stress state resided at time $t^{n}$.\n\nFirst, we compute the trial stress, $\\boldsymbol{\\sigma}^{\\text{tr}}$, which is the stress state that would be reached if the response over the increment were purely elastic.\n$$\n\\boldsymbol{\\sigma}^{\\text{tr}} = \\boldsymbol{\\sigma}^{n} + \\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon}\n$$\nThe givens are:\n- Previous-step stress: $\\boldsymbol{\\sigma}^{n} = (200, 190)\\,\\text{MPa}$.\n- Elasticity matrix: $\\mathbf{C} = \\operatorname{diag}(K_{1}, K_{2})$ with $K_{1} = K_{2} = 200{,}000\\,\\text{MPa}$.\n- Strain increment: $\\Delta \\boldsymbol{\\varepsilon} = (-1.5\\times 10^{-4}, 1.0\\times 10^{-4})$.\n\nThe elastic stress increment is:\n$$\n\\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon} = \\begin{pmatrix} 200000 & 0 \\\\ 0 & 200000 \\end{pmatrix} \\begin{pmatrix} -1.5\\times 10^{-4} \\\\ 1.0\\times 10^{-4} \\end{pmatrix} = \\begin{pmatrix} -30 \\\\ 20 \\end{pmatrix}\\,\\text{MPa}\n$$\nThus, the trial stress is:\n$$\n\\boldsymbol{\\sigma}^{\\text{tr}} = \\begin{pmatrix} 200 \\\\ 190 \\end{pmatrix} + \\begin{pmatrix} -30 \\\\ 20 \\end{pmatrix} = \\begin{pmatrix} 170 \\\\ 210 \\end{pmatrix}\\,\\text{MPa}\n$$\nNext, we check if this trial stress state violates the yield condition, $f(\\boldsymbol{\\sigma}) = \\max(|\\sigma_{1}|, |\\sigma_{2}|) - k \\le 0$, with $k = 200\\,\\text{MPa}$.\n$$\nf(\\boldsymbol{\\sigma}^{\\text{tr}}) = \\max(|170|, |210|) - 200 = 210 - 200 = 10\n$$\nSince $f(\\boldsymbol{\\sigma}^{\\text{tr}}) > 0$, plastic yielding occurs, and a return mapping is necessary to restore the stress state to the yield surface.\n\nThe problem requires us to proceed by assuming the active face is $\\sigma_{1}=k$. For this face, the outward unit normal is $\\boldsymbol{n} = (1, 0)$. According to the associative flow rule, the plastic strain increment is given by $\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\gamma\\,\\boldsymbol{n}$, where $\\Delta \\gamma$ is the plastic multiplier. The backward Euler update for the stress is:\n$$\n\\boldsymbol{\\sigma}^{n+1} = \\boldsymbol{\\sigma}^{\\text{tr}} - \\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon}^{p} = \\boldsymbol{\\sigma}^{\\text{tr}} - \\Delta \\gamma\\,\\mathbf{C}\\,\\boldsymbol{n}\n$$\nSubstituting the known quantities:\n$$\n\\boldsymbol{\\sigma}^{n+1} = \\begin{pmatrix} 170 \\\\ 210 \\end{pmatrix} - \\Delta \\gamma \\begin{pmatrix} 200000 & 0 \\\\ 0 & 200000 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 170 - 200000\\,\\Delta \\gamma \\\\ 210 \\end{pmatrix}\n$$\nThe consistency condition requires that the final stress $\\boldsymbol{\\sigma}^{n+1}$ lies on the assumed active face, i.e., its first component must be equal to $k$.\n$$\n\\sigma_{1}^{n+1} = 200\n$$\nEquating the components, we solve for the plastic multiplier $\\Delta \\gamma$:\n$$\n170 - 200000\\,\\Delta \\gamma = 200\n$$\n$$\n-200000\\,\\Delta \\gamma = 30\n$$\n$$\n\\Delta \\gamma = -\\frac{30}{200000} = -1.5 \\times 10^{-4}\n$$\nThe negativity of the plastic multiplier, $\\Delta \\gamma < 0$, indicates that the choice of the active face was incorrect. For a physically consistent process, we must have $\\Delta \\gamma \\ge 0$. However, the problem statement instructs us to proceed with this result.\n\nUsing this value of $\\Delta\\gamma$, we determine the plastic strain increment and the final stress state.\nThe plastic strain increment is:\n$$\n\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\gamma\\,\\boldsymbol{n} = (-1.5 \\times 10^{-4}) \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -1.5 \\times 10^{-4} \\\\ 0 \\end{pmatrix}\n$$\nThe final stress state is:\n$$\n\\boldsymbol{\\sigma}^{n+1} = \\begin{pmatrix} 170 - 200000(-1.5 \\times 10^{-4}) \\\\ 210 \\end{pmatrix} = \\begin{pmatrix} 170 + 30 \\\\ 210 \\end{pmatrix} = \\begin{pmatrix} 200 \\\\ 210 \\end{pmatrix}\\,\\text{MPa}\n$$\nWe note that this final stress state $\\boldsymbol{\\sigma}^{n+1}$ itself violates the yield condition, as $f(\\boldsymbol{\\sigma}^{n+1}) = \\max(|200|,|210|) - 200 = 10 > 0$. This confirms the failure of the algorithm with the incorrect face.\n\nFinally, we compute the plastic dissipation $D^{n+1}$:\n$$\nD^{n+1} = \\boldsymbol{\\sigma}^{n+1} : \\Delta \\boldsymbol{\\varepsilon}^{p} = \\sigma_{1}^{n+1}\\,\\Delta\\varepsilon_{1}^{p} + \\sigma_{2}^{n+1}\\,\\Delta\\varepsilon_{2}^{p}\n$$\nSubstituting the computed values:\n$$\nD^{n+1} = (200) \\times (-1.5 \\times 10^{-4}) + (210) \\times (0)\n$$\n$$\nD^{n+1} = -300 \\times 10^{-4} = -0.03\n$$\nThe result is in units of MPa. The negative value of dissipation violates the second law of thermodynamics as applied to plastic deformation (a corollary of Drucker's stability postulates), which demands non-negative dissipation for any plastic process. This is the expected outcome of forcing a return to a yield face that is not the one actually activated by the trial stress.", "answer": "$$\n\\boxed{-0.03}\n$$", "id": "2899914"}, {"introduction": "Having explored the foundational theory and the importance of correct numerical logic, the final step is to synthesize these concepts into a complete, working algorithm for a general three-dimensional stress state. This practice challenges you to implement a full predictor-corrector algorithm for the widely used Drucker-Prager yield criterion, a cornerstone of computational geomechanics and metal plasticity [@problem_id:2899915]. You will derive and implement the closed-form solution for the plastic multiplier increment, $\\Delta \\lambda$, translating the abstract principles of yield functions, associated flow, and consistency into a powerful and practical computational tool.", "problem": "Implement a small-strain, associated Drucker–Prager predictor–corrector step that computes the algorithmic plastic multiplier increment. Begin from the elastic trial stress and enforce the discrete consistency equation together with loading–unloading conditions implied by Drucker’s stability postulate. Your program must, for each test case, return the increment of the plastic multiplier $\\Delta \\lambda$ for that load step.\n\nDefinitions and assumptions:\n- Small strain linear isotropic elasticity with stiffness tensor $\\mathbb{C}$, bulk modulus $K$, and shear modulus $G$. The elastic predictor is defined by $\\boldsymbol{\\sigma}_{\\mathrm{tr}} = \\mathbb{C} : \\left(\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}_{n}^{p} \\right)$, and the corrector updates $\\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\mathbb{C} : \\Delta \\boldsymbol{\\varepsilon}^{p}$.\n- Associated flow rule and perfect plasticity with the Drucker–Prager yield function $f(\\boldsymbol{\\sigma}) = \\alpha I_{1}(\\boldsymbol{\\sigma}) + \\sqrt{J_{2}(\\boldsymbol{\\sigma})} - k$, where $I_{1}(\\boldsymbol{\\sigma}) = \\mathrm{tr}(\\boldsymbol{\\sigma})$, $\\boldsymbol{s} = \\boldsymbol{\\sigma} - \\frac{1}{3} I_{1}(\\boldsymbol{\\sigma}) \\boldsymbol{I}$ is the deviatoric stress, and $J_{2}(\\boldsymbol{\\sigma}) = \\frac{1}{2} \\boldsymbol{s}:\\boldsymbol{s}$. The scalar parameters are $\\alpha \\ge 0$ and $k \\ge 0$.\n- Thermodynamic consistency and Drucker’s stability postulate enforce the incremental non-negativity of plastic work, which in discrete form requires the complementarity conditions: $\\Delta \\lambda \\ge 0$, $f(\\boldsymbol{\\sigma}) \\le 0$, and $\\Delta \\lambda \\, f(\\boldsymbol{\\sigma}) = 0$ for the step.\n- The discrete normality (associated flow) is $\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\lambda \\, \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}}$ evaluated at the updated stress.\n\nComputational task:\n- Given the elastic trial stress $\\boldsymbol{\\sigma}_{\\mathrm{tr}}$ and parameters $K$, $G$, $\\alpha$, and $k$, compute the plastic multiplier increment $\\Delta \\lambda$ by enforcing the discrete consistency equation $f(\\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\mathbb{C} : \\Delta \\boldsymbol{\\varepsilon}^{p}) = 0$ when plastic loading occurs, and the loading–unloading criterion due to Drucker’s stability postulate (i.e., if the trial state is strictly elastic then $\\Delta \\lambda = 0$).\n- Use the invariants of the stress for your computation: $I_{1}(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$ and $J_{2}(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$. You may assume $K > 0$ and $G > 0$.\n- Input stress for each test case will be provided as the $6$ independent components of a symmetric tensor $(\\sigma_{11}, \\sigma_{22}, \\sigma_{33}, \\sigma_{12}, \\sigma_{23}, \\sigma_{13})$ in Pascals (Pa). Your program must reconstruct the $3 \\times 3$ tensor internally using $\\sigma_{ij} = \\sigma_{ji}$.\n- You must implement the predictor–corrector logic to decide between elastic and plastic response based on the trial state and compute $\\Delta \\lambda$ accordingly. The output for each case is the scalar $\\Delta \\lambda$ (dimensionless).\n\nAngle units do not apply. Express all inputs in Pascals (Pa). The output $\\Delta \\lambda$ is dimensionless. The final output must be a single line with the results for all test cases as a comma-separated list enclosed in square brackets.\n\nTest suite (provide results for all of the following cases):\n- Case $1$ (elastic, moderate hydrostatic tension with small shear): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, stress components $(50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 10 \\times 10^{6},\\, 0,\\, 0)$.\n- Case $2$ (plastic, deviatoric dominated): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, stress components $(50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 250 \\times 10^{6},\\, 0,\\, 0)$.\n- Case $3$ (plastic, hydrostatic tension): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, stress components $(400 \\times 10^{6},\\, 400 \\times 10^{6},\\, 400 \\times 10^{6},\\, 0,\\, 0,\\, 0)$.\n- Case $4$ (neutral, on the yield surface): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, stress components $\\left(\\frac{10^{9}}{3},\\, \\frac{10^{9}}{3},\\, \\frac{10^{9}}{3},\\, 0,\\, 0,\\, 0\\right)$.\n- Case $5$ (elastic, hydrostatic compression): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, stress components $(-400 \\times 10^{6},\\, -400 \\times 10^{6},\\, -400 \\times 10^{6},\\, 0,\\, 0,\\, 0)$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_{1},r_{2},r_{3},r_{4},r_{5}]$), where each $r_{i}$ is the computed $\\Delta \\lambda$ for Case $i$ in the order listed above.", "solution": "The problem statement has been subjected to rigorous validation and is found to be scientifically sound, well-posed, and complete. It describes a canonical problem in computational solid mechanics: the implementation of a return-mapping algorithm for a rate-independent, associated Drucker-Prager plasticity model. The provided data and definitions are consistent and sufficient for a unique and stable solution. We may therefore proceed with a formal derivation.\n\nThe core of the problem is to determine the plastic multiplier increment, $\\Delta \\lambda$, for a given load step. This is governed by the Karush-Kuhn-Tucker (KKT) complementarity conditions, which for this rate-independent model are:\n$$\n\\Delta \\lambda \\ge 0, \\quad f(\\boldsymbol{\\sigma}_{n+1}) \\le 0, \\quad \\Delta \\lambda \\, f(\\boldsymbol{\\sigma}_{n+1}) = 0\n$$\nHere, $f$ is the Drucker-Prager yield function, $f(\\boldsymbol{\\sigma}) = \\alpha I_{1}(\\boldsymbol{\\sigma}) + \\sqrt{J_{2}(\\boldsymbol{\\sigma})} - k$, and $\\boldsymbol{\\sigma}_{n+1}$ is the stress tensor at the end of the time step, $t_{n+1}$.\n\nThe predictor-corrector algorithm begins by computing a trial elastic stress, $\\boldsymbol{\\sigma}_{\\mathrm{tr}}$, assuming the entire strain increment is elastic.\n$$\n\\boldsymbol{\\sigma}_{\\mathrm{tr}} = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}_{n}^{p})\n$$\nThe loading-unloading criterion is evaluated using this trial stress. We compute the value of the yield function at the trial state, $f_{\\mathrm{tr}} = f(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$.\n\nCase 1: Elastic Step or Neutral Loading\nIf $f_{\\mathrm{tr}} \\le 0$, the trial stress state is within or on the boundary of the elastic domain. According to the KKT conditions, no plastic flow occurs. The guess was correct.\n$$\nf_{\\mathrm{tr}} \\le 0 \\implies \\Delta \\lambda = 0\n$$\nIn this case, the plastic strain increment $\\Delta \\boldsymbol{\\varepsilon}^{p}$ is zero, and the final stress is identical to the trial stress: $\\boldsymbol{\\sigma}_{n+1} = \\boldsymbol{\\sigma}_{\\mathrm{tr}}$.\n\nCase 2: Plastic Step (Return Mapping)\nIf $f_{\\mathrm{tr}} > 0$, the trial stress state lies outside the elastic domain, which is physically inadmissible. This signifies that plastic deformation must have occurred during the step. The KKT conditions dictate that $\\Delta \\lambda > 0$ and the final stress state $\\boldsymbol{\\sigma}_{n+1}$ must lie on the yield surface, satisfying the consistency condition $f(\\boldsymbol{\\sigma}_{n+1}) = 0$.\n\nThe stress is corrected back to the yield surface via the flow rule:\n$$\n\\boldsymbol{\\sigma}_{n+1} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\Delta \\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\mathbb{C} : \\Delta \\boldsymbol{\\varepsilon}^{p}\n$$\nFor an associated flow rule, the plastic strain increment is normal to the yield surface:\n$$\n\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\lambda \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} \\bigg|_{\\boldsymbol{\\sigma}_{n+1}}\n$$\nThe gradient of the yield function is:\n$$\n\\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} = \\alpha \\frac{\\partial I_{1}}{\\partial \\boldsymbol{\\sigma}} + \\frac{\\partial \\sqrt{J_{2}}}{\\partial \\boldsymbol{\\sigma}} = \\alpha \\boldsymbol{I} + \\frac{\\boldsymbol{s}}{2\\sqrt{J_{2}}}\n$$\nwhere $\\boldsymbol{I}$ is the second-order identity tensor and $\\boldsymbol{s}$ is the deviatoric stress tensor.\n\nFor a linear, isotropic elastic material, the fourth-order stiffness tensor $\\mathbb{C}$ operating on a second-order tensor is expressed in terms of the bulk modulus $K$ and shear modulus $G$ as:\n$$\n\\mathbb{C} : \\boldsymbol{A} = 3K \\left(\\frac{1}{3}\\mathrm{tr}(\\boldsymbol{A})\\right) \\boldsymbol{I} + 2G \\left(\\boldsymbol{A} - \\frac{1}{3}\\mathrm{tr}(\\boldsymbol{A})\\boldsymbol{I}\\right)\n$$\nWe apply this to the gradient tensor $\\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}}$:\n$$\n\\mathbb{C} : \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} = \\mathbb{C} : \\left(\\alpha \\boldsymbol{I} + \\frac{\\boldsymbol{s}_{n+1}}{2\\sqrt{J_{2,n+1}}}\\right)\n$$\nThe trace of $\\alpha\\boldsymbol{I}$ is $3\\alpha$, and the trace of the deviatoric part $\\frac{\\boldsymbol{s}_{n+1}}{2\\sqrt{J_{2,n+1}}}$ is zero.\n$$\n\\mathbb{C} : \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} = \\left(3K \\alpha\\right) \\boldsymbol{I} + 2G \\left(\\frac{\\boldsymbol{s}_{n+1}}{2\\sqrt{J_{2,n+1}}}\\right) = 3K\\alpha\\boldsymbol{I} + \\frac{G}{\\sqrt{J_{2,n+1}}} \\boldsymbol{s}_{n+1}\n$$\nSubstituting this into the stress-update equation yields:\n$$\n\\boldsymbol{\\sigma}_{n+1} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\Delta \\lambda \\left( 3K\\alpha\\boldsymbol{I} + \\frac{G}{\\sqrt{J_{2,n+1}}}\\boldsymbol{s}_{n+1} \\right)\n$$\nThis implicit equation for $\\boldsymbol{\\sigma}_{n+1}$ can be solved by decomposing it into volumetric and deviatoric parts.\n\nDecomposition:\nThe trace of $\\boldsymbol{\\sigma}_{n+1}$ gives the first invariant $I_{1,n+1}$:\n$$\nI_{1,n+1} = \\mathrm{tr}(\\boldsymbol{\\sigma}_{n+1}) = \\mathrm{tr}(\\boldsymbol{\\sigma}_{\\mathrm{tr}}) - \\Delta \\lambda \\left( 3K\\alpha \\cdot \\mathrm{tr}(\\boldsymbol{I}) \\right) = I_{1,\\mathrm{tr}} - 9K\\alpha \\Delta \\lambda\n$$\nThe deviatoric part is obtained by isolating the deviatoric tensors:\n$$\n\\boldsymbol{s}_{n+1} = \\boldsymbol{s}_{\\mathrm{tr}} - \\Delta \\lambda \\frac{G}{\\sqrt{J_{2,n+1}}}\\boldsymbol{s}_{n+1}\n$$\nRearranging for $\\boldsymbol{s}_{n+1}$:\n$$\n\\boldsymbol{s}_{n+1} \\left(1 + \\frac{G\\Delta\\lambda}{\\sqrt{J_{2,n+1}}}\\right) = \\boldsymbol{s}_{\\mathrm{tr}}\n$$\nThis equation shows that the updated deviatoric stress $\\boldsymbol{s}_{n+1}$ is co-linear with the trial deviatoric stress $\\boldsymbol{s}_{\\mathrm{tr}}$. We can take the von Mises equivalent norm ($\\sqrt{J_2}$) of both sides.\n$$\n\\sqrt{J_{2,n+1}} \\left(1 + \\frac{G\\Delta\\lambda}{\\sqrt{J_{2,n+1}}}\\right) = \\sqrt{J_{2,\\mathrm{tr}}}\n$$\n$$\n\\sqrt{J_{2,n+1}} + G\\Delta\\lambda = \\sqrt{J_{2,\\mathrm{tr}}} \\implies \\sqrt{J_{2,n+1}} = \\sqrt{J_{2,\\mathrm{tr}}} - G\\Delta\\lambda\n$$\nWe now have explicit expressions for the updated invariants $I_{1,n+1}$ and $\\sqrt{J_{2,n+1}}$ in terms of $\\Delta\\lambda$. We enforce the consistency condition $f(\\boldsymbol{\\sigma}_{n+1})=0$:\n$$\n\\alpha I_{1,n+1} + \\sqrt{J_{2,n+1}} - k = 0\n$$\nSubstituting our derived expressions:\n$$\n\\alpha \\left(I_{1,\\mathrm{tr}} - 9K\\alpha\\Delta\\lambda\\right) + \\left(\\sqrt{J_{2,\\mathrm{tr}}} - G\\Delta\\lambda\\right) - k = 0\n$$\nWe rearrange the terms to solve for $\\Delta\\lambda$:\n$$\n\\left(\\alpha I_{1,\\mathrm{tr}} + \\sqrt{J_{2,\\mathrm{tr}}} - k\\right) - 9K\\alpha^2\\Delta\\lambda - G\\Delta\\lambda = 0\n$$\nThe term in the parenthesis is precisely the yield function evaluated at the trial state, $f_{\\mathrm{tr}}$.\n$$\nf_{\\mathrm{tr}} - (9K\\alpha^2 + G)\\Delta\\lambda = 0\n$$\nThis gives the closed-form solution for the plastic multiplier increment:\n$$\n\\Delta\\lambda = \\frac{f_{\\mathrm{tr}}}{9K\\alpha^2 + G}\n$$\n\nSummary of the Computational Algorithm:\n1.  Given the trial stress components $(\\sigma_{11}, \\sigma_{22}, \\sigma_{33}, \\sigma_{12}, \\sigma_{23}, \\sigma_{13})$, construct the trial stress tensor $\\boldsymbol{\\sigma}_{\\mathrm{tr}}$.\n2.  Calculate the trial invariants: $I_{1,\\mathrm{tr}} = \\mathrm{tr}(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$ and $J_{2,\\mathrm{tr}} = \\frac{1}{2}\\boldsymbol{s}_{\\mathrm{tr}}:\\boldsymbol{s}_{\\mathrm{tr}}$.\n3.  Evaluate the trial yield function $f_{\\mathrm{tr}} = \\alpha I_{1,\\mathrm{tr}} + \\sqrt{J_{2,\\mathrm{tr}}} - k$.\n4.  If $f_{\\mathrm{tr}} \\le 0$, the step is elastic, and $\\Delta\\lambda = 0$.\n5.  If $f_{\\mathrm{tr}} > 0$, the step is plastic. Compute $\\Delta\\lambda$ using the derived formula:\n    $$\n    \\Delta\\lambda = \\frac{f_{\\mathrm{tr}}}{9K\\alpha^2 + G}\n    $$\nThis algorithm is implemented for the provided test cases. The denominator for plastic steps is constant for all cases: $9K\\alpha^2 + G_c = 9(166 \\times 10^9)(0.2)^2 + (80 \\times 10^9) = 1.3976 \\times 10^{11}$ Pa.\n\n- Case 1: $f_{\\mathrm{tr}} = 0.2(150 \\times 10^6) + \\sqrt{1 \\times 10^{14}} - 200 \\times 10^6 = -160 \\times 10^6 < 0 \\implies \\Delta\\lambda=0$.\n- Case 2: $f_{\\mathrm{tr}} = 0.2(150 \\times 10^6) + \\sqrt{6.25 \\times 10^{16}} - 200 \\times 10^6 = 80 \\times 10^6 > 0 \\implies \\Delta\\lambda = \\frac{80 \\times 10^6}{1.3976 \\times 10^{11}} \\approx 0.00057241$.\n- Case 3: $f_{\\mathrm{tr}} = 0.2(1200 \\times 10^6) + 0 - 200 \\times 10^6 = 40 \\times 10^6 > 0 \\implies \\Delta\\lambda = \\frac{40 \\times 10^6}{1.3976 \\times 10^{11}} \\approx 0.000286205$.\n- Case 4: $f_{\\mathrm{tr}} = 0.2(10^9) + 0 - 200 \\times 10^6 = 0 \\implies \\Delta\\lambda=0$.\n- Case 5: $f_{\\mathrm{tr}} = 0.2(-1200 \\times 10^6) + 0 - 200 \\times 10^6 = -440 \\times 10^6 < 0 \\implies \\Delta\\lambda=0$.\nThe final program will execute this logic.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_delta_lambda(K, G, alpha, k, sigma_vec):\n    \"\"\"\n    Computes the plastic multiplier increment for a Drucker-Prager material.\n\n    Args:\n        K (float): Bulk modulus in Pa.\n        G (float): Shear modulus in Pa.\n        alpha (float): Drucker-Prager material parameter (dimensionless).\n        k (float): Drucker-ager material parameter (cohesion) in Pa.\n        sigma_vec (list or tuple): 6 independent components of the trial stress\n                                    tensor (s11, s22, s33, s12, s23, s13) in Pa.\n\n    Returns:\n        float: The plastic multiplier increment, delta_lambda (dimensionless).\n    \"\"\"\n    s11, s22, s33, s12, s23, s13 = sigma_vec\n\n    # 1. Construct the 3x3 trial stress tensor\n    sigma_tr = np.array([\n        [s11, s12, s13],\n        [s12, s22, s23],\n        [s13, s23, s33]\n    ])\n\n    # 2. Calculate trial invariants I1_tr and J2_tr\n    I1_tr = np.trace(sigma_tr)\n    \n    # Deviatoric trial stress tensor\n    s_tr = sigma_tr - (I1_tr / 3.0) * np.eye(3)\n    \n    # Second invariant of the deviatoric stress tensor\n    # J2 = 0.5 * s_ij * s_ij\n    J2_tr = 0.5 * np.sum(s_tr * s_tr)\n\n    # 3. Evaluate the trial yield function f_tr\n    # A small epsilon is added to sqrt(J2_tr) for numerical stability in edge cases where J2_tr is near zero,\n    # though for the given test cases it's not strictly necessary.\n    sqrt_J2_tr = np.sqrt(J2_tr)\n    f_tr = alpha * I1_tr + sqrt_J2_tr - k\n\n    # 4. Apply loading-unloading criterion\n    # A small tolerance for floating point comparisons near zero.\n    if f_tr = 1e-9:\n        # Elastic or neutral loading step\n        delta_lambda = 0.0\n    else:\n        # Plastic step: Compute delta_lambda using the derived formula\n        denominator = 9.0 * K * alpha**2 + G\n        delta_lambda = f_tr / denominator\n        \n    return delta_lambda\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: (K, G, alpha, k, [s11, s22, s33, s12, s23, s13])\n        (166e9, 80e9, 0.2, 200e6, [50e6, 50e6, 50e6, 10e6, 0.0, 0.0]),\n        # Case 2\n        (166e9, 80e9, 0.2, 200e6, [50e6, 50e6, 50e6, 250e6, 0.0, 0.0]),\n        # Case 3\n        (166e9, 80e9, 0.2, 200e6, [400e6, 400e6, 400e6, 0.0, 0.0, 0.0]),\n        # Case 4\n        (166e9, 80e9, 0.2, 200e6, [1e9/3.0, 1e9/3.0, 1e9/3.0, 0.0, 0.0, 0.0]),\n        # Case 5\n        (166e9, 80e9, 0.2, 200e6, [-400e6, -400e6, -400e6, 0.0, 0.0, 0.0]),\n    ]\n\n    results = []\n    for case in test_cases:\n        K, G, alpha, k, sigma_vec = case\n        result = compute_delta_lambda(K, G, alpha, k, sigma_vec)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    # Using 'g' format specifier for clean representation of small numbers.\n    print(f\"[{','.join(f'{r:.6e}' for r in results)}]\")\n\nsolve()\n```", "id": "2899915"}]}