{"hands_on_practices": [{"introduction": "To build a solid intuition for Betti's reciprocal theorem, our first practice involves a direct, from-the-ground-up verification. By constructing the symmetric stiffness matrix $K$ for a simple linear elastic spring network, you will see how the reciprocity relation $(P^{(1)})^T u^{(2)} = (P^{(2)})^T u^{(1)}$ emerges naturally from the system's underlying conservative nature [@problem_id:2618449]. This exercise is fundamental to connecting the abstract mathematical statement of the theorem to the physical behavior of discrete structural systems.", "problem": "A linear elastic discrete structure has $3$ scalar translational degrees of freedom (DOF) at nodes labeled $1$, $2$, and $3$. Each pair of nodes is connected by a linear Hookean spring, and each node is additionally connected to ground by a linear Hookean spring. The spring network is conservative, and all springs obey Hooke’s law with constant stiffnesses. The springs and their stiffnesses are:\n- Between node $1$ and node $2$: stiffness $k_{12} = 2$.\n- Between node $2$ and node $3$: stiffness $k_{23} = 3$.\n- Between node $1$ and node $3$: stiffness $k_{13} = 1$.\n- Node $1$ to ground: stiffness $k_{1g} = 4$.\n- Node $2$ to ground: stiffness $k_{2g} = 5$.\n- Node $3$ to ground: stiffness $k_{3g} = 6$.\n\nTwo independent static load cases are applied as nodal force vectors:\n- Load case $1$: $P^{(1)} = \\begin{pmatrix} 1 \\\\ 0 \\\\ 2 \\end{pmatrix}$.\n- Load case $2$: $P^{(2)} = \\begin{pmatrix} 0 \\\\ 3 \\\\ 1 \\end{pmatrix}$.\n\nTasks:\n1. Using equilibrium, compatibility, and Hooke’s law, assemble the global stiffness matrix $K$ of the $3$-DOF system. Explain why $K$ is symmetric by appealing to an energy potential for linear springs.\n2. For each load case $i \\in \\{1,2\\}$, solve the linear system $K\\,u^{(i)} = P^{(i)}$ to obtain the displacement vectors $u^{(1)}$ and $u^{(2)}$.\n3. Compute the scalar products $P^{(1)} \\cdot u^{(2)}$ and $P^{(2)} \\cdot u^{(1)}$, and verify their equality on the basis of reciprocity arising from the symmetry of $K$.\n4. Using fundamental energy arguments for linear conservative systems, interpret the physical meaning of these scalar products in terms of work, and briefly connect this to the total strain energy and the form predicted by Clapeyron’s theorem.\n\nReport the common value of the two scalar products. Express this single number as an exact rational number. Do not round. If you choose to track units, express the result in Joules, but the final reported value should be unitless as a pure number.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It presents a standard problem in linear elastic structural analysis with all necessary data provided. It is a valid problem. We proceed with the solution.\n\nThe problem requires a four-part analysis of a linear elastic spring network. We address each task in sequence.\n\nFirst, we assemble the global stiffness matrix $K$ for the $3$-degree-of-freedom ($DOF$) system. The degrees of freedom are the scalar translational displacements $u_1$, $u_2$, and $u_3$ at nodes $1$, $2$, and $3$ respectively. The element $K_{ij}$ of the stiffness matrix is the force required at $DOF$ $i$ to maintain a unit displacement at $DOF$ $j$ ($u_j=1$) while all other displacements are zero ($u_k=0$ for $k \\ne j$).\n\nThe diagonal entries, $K_{ii}$, represent the total stiffness connected to node $i$. This is the sum of the stiffnesses of all springs attached to node $i$.\n$$K_{11} = k_{12} + k_{13} + k_{1g} = 2 + 1 + 4 = 7$$\n$$K_{22} = k_{12} + k_{23} + k_{2g} = 2 + 3 + 5 = 10$$\n$$K_{33} = k_{13} + k_{23} + k_{3g} = 1 + 3 + 6 = 10$$\n\nThe off-diagonal entries, $K_{ij}$ for $i \\ne j$, represent the force transmitted to node $i$ by a unit displacement at node $j$. This force is equal to the negative of the stiffness of the spring connecting the two nodes.\n$$K_{12} = K_{21} = -k_{12} = -2$$\n$$K_{13} = K_{31} = -k_{13} = -1$$\n$$K_{23} = K_{32} = -k_{23} = -3$$\n\nAssembling these components gives the global stiffness matrix $K$:\n$$K = \\begin{pmatrix} 7 & -2 & -1 \\\\ -2 & 10 & -3 \\\\ -1 & -3 & 10 \\end{pmatrix}$$\n\nThe symmetry of the stiffness matrix, $K = K^T$, is a fundamental property of linear conservative systems. The system of Hookean springs is conservative, meaning the work done by internal forces is path-independent and can be expressed as the change in a scalar potential energy function, the strain energy $U$. The total strain energy of this system is a quadratic function of the nodal displacements $u = \\begin{pmatrix} u_1 & u_2 & u_3 \\end{pmatrix}^T$:\n$$U(u) = \\frac{1}{2} k_{12} (u_1-u_2)^2 + \\frac{1}{2} k_{13} (u_1-u_3)^2 + \\frac{1}{2} k_{23} (u_2-u_3)^2 + \\frac{1}{2} k_{1g} u_1^2 + \\frac{1}{2} k_{2g} u_2^2 + \\frac{1}{2} k_{3g} u_3^2$$\nThis can be written in matrix form as $U(u) = \\frac{1}{2} u^T K u$. The vector of nodal forces $P$ is the gradient of the strain energy with respect to the displacements: $P = \\nabla_u U = K u$. The components of the stiffness matrix are the second partial derivatives of the strain energy potential: $K_{ij} = \\frac{\\partial^2 U}{\\partial u_i \\partial u_j}$. By the equality of mixed partial derivatives (Clairaut's theorem), if $U$ is twice continuously differentiable (which it is, being a quadratic polynomial), then $\\frac{\\partial^2 U}{\\partial u_i \\partial u_j} = \\frac{\\partial^2 U}{\\partial u_j \\partial u_i}$, which implies $K_{ij} = K_{ji}$. Thus, the existence of a scalar energy potential for a linear conservative system guarantees the symmetry of its stiffness matrix.\n\nSecond, we solve for the displacement vectors $u^{(1)}$ and $u^{(2)}$ for the two load cases $P^{(1)}$ and $P^{(2)}$. This requires solving the linear systems $K u^{(i)} = P^{(i)}$. We find the inverse of $K$. The determinant of $K$ is:\n$$\\det(K) = 7(10 \\cdot 10 - (-3)(-3)) - (-2)((-2)10 - (-3)(-1)) + (-1)((-2)(-3) - 10(-1))$$\n$$\\det(K) = 7(91) + 2(-23) -1(16) = 637 - 46 - 16 = 575$$\nThe adjugate matrix of $K$, $\\text{adj}(K)$, is the transpose of the cofactor matrix. For a symmetric matrix, the cofactor matrix is also symmetric, so $\\text{adj}(K)$ is:\n$$\\text{adj}(K) = \\begin{pmatrix} 100-9 & -(-20-3) & 6+10 \\\\ -(-20-3) & 70-1 & -(-21-2) \\\\ 6+10 & -(-21-2) & 70-4 \\end{pmatrix} = \\begin{pmatrix} 91 & 23 & 16 \\\\ 23 & 69 & 23 \\\\ 16 & 23 & 66 \\end{pmatrix}$$\nThe inverse stiffness matrix, or flexibility matrix, is $K^{-1} = \\frac{1}{\\det(K)} \\text{adj}(K)$:\n$$K^{-1} = \\frac{1}{575} \\begin{pmatrix} 91 & 23 & 16 \\\\ 23 & 69 & 23 \\\\ 16 & 23 & 66 \\end{pmatrix}$$\nWe now compute the displacement vectors:\n$$u^{(1)} = K^{-1} P^{(1)} = \\frac{1}{575} \\begin{pmatrix} 91 & 23 & 16 \\\\ 23 & 69 & 23 \\\\ 16 & 23 & 66 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\\\ 2 \\end{pmatrix} = \\frac{1}{575} \\begin{pmatrix} 91(1) + 16(2) \\\\ 23(1) + 23(2) \\\\ 16(1) + 66(2) \\end{pmatrix} = \\frac{1}{575} \\begin{pmatrix} 123 \\\\ 69 \\\\ 148 \\end{pmatrix}$$\n$$u^{(2)} = K^{-1} P^{(2)} = \\frac{1}{575} \\begin{pmatrix} 91 & 23 & 16 \\\\ 23 & 69 & 23 \\\\ 16 & 23 & 66 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 3 \\\\ 1 \\end{pmatrix} = \\frac{1}{575} \\begin{pmatrix} 23(3) + 16(1) \\\\ 69(3) + 23(1) \\\\ 23(3) + 66(1) \\end{pmatrix} = \\frac{1}{575} \\begin{pmatrix} 69+16 \\\\ 207+23 \\\\ 69+66 \\end{pmatrix} = \\frac{1}{575} \\begin{pmatrix} 85 \\\\ 230 \\\\ 135 \\end{pmatrix}$$\n\nThird, we compute the scalar products $P^{(1)} \\cdot u^{(2)}$ and $P^{(2)} \\cdot u^{(1)}$. In matrix notation these are $(P^{(1)})^T u^{(2)}$ and $(P^{(2)})^T u^{(1)}$.\n$$(P^{(1)})^T u^{(2)} = \\begin{pmatrix} 1 & 0 & 2 \\end{pmatrix} \\frac{1}{575} \\begin{pmatrix} 85 \\\\ 230 \\\\ 135 \\end{pmatrix} = \\frac{1}{575} (1 \\cdot 85 + 0 \\cdot 230 + 2 \\cdot 135) = \\frac{85 + 270}{575} = \\frac{355}{575}$$\n$$(P^{(2)})^T u^{(1)} = \\begin{pmatrix} 0 & 3 & 1 \\end{pmatrix} \\frac{1}{575} \\begin{pmatrix} 123 \\\\ 69 \\\\ 148 \\end{pmatrix} = \\frac{1}{575} (0 \\cdot 123 + 3 \\cdot 69 + 1 \\cdot 148) = \\frac{207 + 148}{575} = \\frac{355}{575}$$\nThe equality is confirmed. We simplify the rational number by dividing the numerator and denominator by their greatest common divisor. $355 = 5 \\times 71$ and $575 = 5 \\times 115 = 5 \\times 5 \\times 23$. The common factor is $5$.\n$$\\frac{355}{575} = \\frac{71}{115}$$\nThe equality of these scalar products is a direct manifestation of Betti's reciprocal theorem. The theorem states that for a linear elastic body subjected to two systems of forces, $\\{P^{(1)}, u^{(1)}\\}$ and $\\{P^{(2)}, u^{(2)}\\}$, the work done by the first force system acting through the displacements of the second system is equal to the work done by the second force system acting through the displacements of the first. Mathematically, $(P^{(1)})^T u^{(2)} = (P^{(2)})^T u^{(1)}$. This is proven as follows:\n$$(P^{(1)})^T u^{(2)} = (K u^{(1)})^T u^{(2)} = (u^{(1)})^T K^T u^{(2)}$$\n$$(P^{(2)})^T u^{(1)} = (u^{(1)})^T P^{(2)} = (u^{(1)})^T K u^{(2)}$$\nSince we have established that $K$ is symmetric ($K^T=K$), the two expressions are identical.\n\nFourth, we interpret the physical meaning. The scalar product $P \\cdot u$ represents the work done by the external forces $P$ on the system through the displacements $u$. The quantities $(P^{(1)})^T u^{(2)}$ and $(P^{(2)})^T u^{(1)}$ are therefore reciprocal work or \"interaction work\" terms.\n\nClapeyron's theorem states that for a linear elastic system subjected to a single set of forces $P$ that cause displacements $u$, the work done by the external forces is equal to the strain energy stored in the body, and both are equal to one half of the scalar product of the final forces and final displacements: $W_{ext} = U = \\frac{1}{2} P \\cdot u$. The factor of $\\frac{1}{2}$ arises because the forces are applied gradually, and the force-displacement relationship is linear.\nIf we consider a combined loading $P = P^{(1)} + P^{(2)}$, the total displacement is $u = u^{(1)} + u^{(2)}$ by superposition. The total strain energy is:\n$$U_{total} = \\frac{1}{2} (P^{(1)}+P^{(2)}) \\cdot (u^{(1)}+u^{(2)}) = \\frac{1}{2} P^{(1)}\\cdot u^{(1)} + \\frac{1}{2} P^{(2)}\\cdot u^{(2)} + \\frac{1}{2} (P^{(1)}\\cdot u^{(2)} + P^{(2)}\\cdot u^{(1)})$$\nUsing Clapeyron's theorem for the individual load cases, $U_1 = \\frac{1}{2} P^{(1)}\\cdot u^{(1)}$ and $U_2 = \\frac{1}{2} P^{(2)}\\cdot u^{(2)}$, we can write:\n$$U_{total} = U_1 + U_2 + P^{(1)} \\cdot u^{(2)}$$\nwhere we have used the reciprocity $P^{(1)} \\cdot u^{(2)} = P^{(2)} \\cdot u^{(1)}$. The term $P^{(1)} \\cdot u^{(2)}$ thus represents the interaction energy, which is the additional strain energy stored in the system due to the simultaneous application of both load sets, beyond the sum of the energies from applying them separately.\n\nThe common value of the two scalar products is the final answer requested.", "answer": "$$\\boxed{\\frac{71}{115}}$$", "id": "2618449"}, {"introduction": "Understanding a theorem's limitations is as crucial as understanding its applications. This exercise presents a counterexample to Betti's theorem by introducing non-conservative \"follower\" forces, a classic problem in structural stability [@problem_id:2618432]. You will derive the non-symmetric tangent stiffness matrix for this system and numerically demonstrate the failure of reciprocity, thereby clarifying the critical role that conservative loading plays as a prerequisite for the theorem to hold.", "problem": "Consider a two-degree-of-freedom planar discrete elastic system consisting of a single node connected to ground by two linear, orthogonal springs along the Cartesian axes. Let the generalized displacement vector be $\\mathbf{u} = \\begin{pmatrix} u_x \\\\ u_y \\end{pmatrix}$, and the internal elastic forces be given by $\\mathbf{f}_{\\text{int}}(\\mathbf{u}) = \\mathbf{K}_c \\mathbf{u}$ with $\\mathbf{K}_c = \\begin{pmatrix} k_x & 0 \\\\ 0 & k_y \\end{pmatrix}$, where $k_x > 0$ and $k_y > 0$. In addition to the springs, the node is subjected to a nonconservative follower force of constant magnitude $P$ defined by the constitutive law\n$$\n\\mathbf{f}_{\\text{fol}}(\\mathbf{u}) \\;=\\; P \\, \\frac{\\mathbf{R}\\,\\mathbf{u}}{\\|\\mathbf{u}\\|}, \\qquad \\mathbf{R} \\;=\\; \\begin{pmatrix} 0 & 1 \\\\ -1 & 0 \\end{pmatrix},\n$$\nso that $\\mathbf{f}_{\\text{fol}}(\\mathbf{u})$ is always orthogonal to $\\mathbf{u}$ and of constant norm $P$. Assume the system is held at a preloaded configuration $\\mathbf{u}_0 = \\begin{pmatrix} U \\\\ 0 \\end{pmatrix}$ with $U > 0$ by auxiliary dead loads (details of these auxiliary loads are irrelevant for the incremental analysis). Consider small, quasi-static increments about $\\mathbf{u}_0$ governed by the principle of virtual work.\n\nTasks:\n1) Starting from the principle of virtual work and the definition of the follower force, derive the linearized tangent operator at $\\mathbf{u}_0$, namely\n$$\n\\mathbf{K}_t \\;=\\; \\left.\\frac{\\partial \\mathbf{f}_{\\text{int}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0} \\;-\\; \\left.\\frac{\\partial \\mathbf{f}_{\\text{fol}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0},\n$$\nand show explicitly that $\\mathbf{K}_t$ is nonsymmetric when $P \\neq 0$.\n\n2) Using the derived $\\mathbf{K}_t$, compute the incremental displacements under two independent unit probe loads applied at $\\mathbf{u}_0$:\n- Case A: $\\mathbf{p}^{(1)} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$,\n- Case B: $\\mathbf{p}^{(2)} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$,\nby solving $\\mathbf{K}_t \\mathbf{u}^{(i)} = \\mathbf{p}^{(i)}$, $i = 1,2$.\n\n3) Using the results of part 2, numerically demonstrate the failure of Betti’s reciprocal theorem by evaluating the defect\n$$\n\\Delta \\;=\\; \\big(u_y^{(1)}\\big) \\;-\\; \\big(u_x^{(2)}\\big),\n$$\nwhich, for a conservative system with symmetric tangent, would vanish. Use the following parameter values:\n- $k_x = 1000$ N/m,\n- $k_y = 800$ N/m,\n- $P = 300$ N,\n- $U = 0.24$ m.\n\nExpress the final value of $\\Delta$ in $\\text{m}/\\text{N}$, and round your answer to four significant figures. Your final answer must be a single real number.", "solution": "The problem statement is first subjected to validation.\n\n**Step 1: Extract Givens**\n-   Generalized displacement vector: $\\mathbf{u} = \\begin{pmatrix} u_x \\\\ u_y \\end{pmatrix}$.\n-   Internal elastic forces: $\\mathbf{f}_{\\text{int}}(\\mathbf{u}) = \\mathbf{K}_c \\mathbf{u}$ with $\\mathbf{K}_c = \\begin{pmatrix} k_x & 0 \\\\ 0 & k_y \\end{pmatrix}$, where $k_x > 0$ and $k_y > 0$.\n-   Nonconservative follower force: $\\mathbf{f}_{\\text{fol}}(\\mathbf{u}) = P \\, \\frac{\\mathbf{R}\\,\\mathbf{u}}{\\|\\mathbf{u}\\|}$ with $\\mathbf{R} = \\begin{pmatrix} 0 & 1 \\\\ -1 & 0 \\end{pmatrix}$ and a constant magnitude $P > 0$.\n-   Preloaded configuration: $\\mathbf{u}_0 = \\begin{pmatrix} U \\\\ 0 \\end{pmatrix}$ with $U > 0$.\n-   Tangent operator definition: $\\mathbf{K}_t = \\left.\\frac{\\partial \\mathbf{f}_{\\text{int}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0} - \\left.\\frac{\\partial \\mathbf{f}_{\\text{fol}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0}$.\n-   Incremental problem: $\\mathbf{K}_t \\mathbf{u}^{(i)} = \\mathbf{p}^{(i)}$ for $i = 1,2$.\n-   Probe loads: $\\mathbf{p}^{(1)} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$, $\\mathbf{p}^{(2)} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$.\n-   Reciprocity defect: $\\Delta = u_y^{(1)} - u_x^{(2)}$.\n-   Numerical parameters: $k_x = 1000$ N/m, $k_y = 800$ N/m, $P = 300$ N, $U = 0.24$ m.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, describing a canonical model in the field of non-conservative structural mechanics used to study stability phenomena like flutter. The concept of a follower force is well-established. The mathematical formulation, involving linearization and matrix calculus, is standard. The problem is well-posed, providing all necessary definitions, data, and constraints for a unique solution to be determined. The given parameter values are physically realistic and dimensionally consistent. The problem statement is objective, precise, and free of any ambiguities or contradictions.\n\n**Step 3: Verdict and Action**\nThe problem is valid. We will now proceed with a complete solution.\n\nThe quasi-static equilibrium of the system under an applied load $\\mathbf{p}_{\\text{appl}}$ is given by the principle of virtual work, leading to the force balance equation $\\mathbf{f}_{\\text{int}}(\\mathbf{u}) - \\mathbf{f}_{\\text{fol}}(\\mathbf{u}) = \\mathbf{p}_{\\text{appl}}$. We consider an incremental change in load $\\mathbf{p}$ and displacement $\\Delta\\mathbf{u}$ about the equilibrium configuration $\\mathbf{u}_0$. Linearizing the equilibrium equation yields $\\mathbf{K}_t \\Delta\\mathbf{u} = \\mathbf{p}$, where $\\mathbf{K}_t$ is the tangent stiffness operator as defined in the problem. We now derive this operator.\n\n**Task 1: Derivation of the Tangent Operator $\\mathbf{K}_t$**\n\nThe tangent operator $\\mathbf{K}_t$ is composed of two parts: the contribution from the internal forces and the contribution from the follower force.\n\nFirst, we find the Jacobian of the internal force vector $\\mathbf{f}_{\\text{int}}(\\mathbf{u}) = \\begin{pmatrix} k_x u_x \\\\ k_y u_y \\end{pmatrix}$.\n$$\n\\frac{\\partial \\mathbf{f}_{\\text{int}}}{\\partial \\mathbf{u}} = \\begin{pmatrix} \\frac{\\partial}{\\partial u_x}(k_x u_x) & \\frac{\\partial}{\\partial u_y}(k_x u_x) \\\\ \\frac{\\partial}{\\partial u_x}(k_y u_y) & \\frac{\\partial}{\\partial u_y}(k_y u_y) \\end{pmatrix} = \\begin{pmatrix} k_x & 0 \\\\ 0 & k_y \\end{pmatrix} = \\mathbf{K}_c.\n$$\nThis matrix is constant, so its evaluation at $\\mathbf{u}_0$ is simply $\\mathbf{K}_c$.\n\nNext, we find the Jacobian of the follower force vector $\\mathbf{f}_{\\text{fol}}(\\mathbf{u})$. The force is given by:\n$$\n\\mathbf{f}_{\\text{fol}}(\\mathbf{u}) = P \\frac{\\mathbf{R} \\mathbf{u}}{\\|\\mathbf{u}\\|} = \\frac{P}{\\sqrt{u_x^2 + u_y^2}} \\begin{pmatrix} 0 & 1 \\\\ -1 & 0 \\end{pmatrix} \\begin{pmatrix} u_x \\\\ u_y \\end{pmatrix} = \\frac{P}{\\sqrt{u_x^2 + u_y^2}} \\begin{pmatrix} u_y \\\\ -u_x \\end{pmatrix}.\n$$\nLet the components be $f_{\\text{fol},x} = P u_y (u_x^2 + u_y^2)^{-1/2}$ and $f_{\\text{fol},y} = -P u_x (u_x^2 + u_y^2)^{-1/2}$. We compute the partial derivatives:\n$$\n\\frac{\\partial f_{\\text{fol},x}}{\\partial u_x} = P u_y \\left(-\\frac{1}{2}\\right) (u_x^2 + u_y^2)^{-3/2} (2u_x) = \\frac{-P u_x u_y}{(u_x^2 + u_y^2)^{3/2}}\n$$\n$$\n\\frac{\\partial f_{\\text{fol},x}}{\\partial u_y} = P (u_x^2 + u_y^2)^{-1/2} + P u_y \\left(-\\frac{1}{2}\\right) (u_x^2 + u_y^2)^{-3/2} (2u_y) = \\frac{P(u_x^2 + u_y^2) - P u_y^2}{(u_x^2 + u_y^2)^{3/2}} = \\frac{P u_x^2}{(u_x^2 + u_y^2)^{3/2}}\n$$\n$$\n\\frac{\\partial f_{\\text{fol},y}}{\\partial u_x} = -P (u_x^2 + u_y^2)^{-1/2} - P u_x \\left(-\\frac{1}{2}\\right) (u_x^2 + u_y^2)^{-3/2} (2u_x) = \\frac{-P(u_x^2 + u_y^2) + P u_x^2}{(u_x^2 + u_y^2)^{3/2}} = \\frac{-P u_y^2}{(u_x^2 + u_y^2)^{3/2}}\n$$\n$$\n\\frac{\\partial f_{\\text{fol},y}}{\\partial u_y} = -P u_x \\left(-\\frac{1}{2}\\right) (u_x^2 + u_y^2)^{-3/2} (2u_y) = \\frac{P u_x u_y}{(u_x^2 + u_y^2)^{3/2}}\n$$\nNow, we evaluate this Jacobian at the preloaded configuration $\\mathbf{u}_0 = \\begin{pmatrix} U \\\\ 0 \\end{pmatrix}$:\n$$\n\\left.\\frac{\\partial \\mathbf{f}_{\\text{fol}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0} = \\begin{pmatrix} \\frac{-P U (0)}{(U^2)^{3/2}} & \\frac{P U^2}{(U^2)^{3/2}} \\\\ \\frac{-P (0)^2}{(U^2)^{3/2}} & \\frac{P U (0)}{(U^2)^{3/2}} \\end{pmatrix} = \\begin{pmatrix} 0 & \\frac{P U^2}{U^3} \\\\ 0 & 0 \\end{pmatrix} = \\begin{pmatrix} 0 & P/U \\\\ 0 & 0 \\end{pmatrix}.\n$$\nThe tangent operator $\\mathbf{K}_t$ is therefore:\n$$\n\\mathbf{K}_t = \\left.\\frac{\\partial \\mathbf{f}_{\\text{int}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0} - \\left.\\frac{\\partial \\mathbf{f}_{\\text{fol}}}{\\partial \\mathbf{u}}\\right|_{\\mathbf{u}_0} = \\begin{pmatrix} k_x & 0 \\\\ 0 & k_y \\end{pmatrix} - \\begin{pmatrix} 0 & P/U \\\\ 0 & 0 \\end{pmatrix} = \\begin{pmatrix} k_x & -P/U \\\\ 0 & k_y \\end{pmatrix}.\n$$\nTo check for symmetry, we compute the transpose: $\\mathbf{K}_t^T = \\begin{pmatrix} k_x & 0 \\\\ -P/U & k_y \\end{pmatrix}$.\nThe operator $\\mathbf{K}_t$ is symmetric if and only if $\\mathbf{K}_t = \\mathbf{K}_t^T$, which requires $-P/U = 0$. As $U > 0$, this condition is met only if $P=0$. For any non-zero follower force $P \\neq 0$, the tangent operator $\\mathbf{K}_t$ is nonsymmetric.\n\n**Task 2: Computation of Incremental Displacements**\n\nWe must solve the linear system $\\mathbf{K}_t \\mathbf{u}^{(i)} = \\mathbf{p}^{(i)}$ for the two specified probe loads. The inverse of $\\mathbf{K}_t$ is required. The determinant is $\\det(\\mathbf{K}_t) = k_x k_y$. Since $k_x>0$ and $k_y>0$, the determinant is non-zero, and the inverse exists:\n$$\n\\mathbf{K}_t^{-1} = \\frac{1}{k_x k_y} \\begin{pmatrix} k_y & P/U \\\\ 0 & k_x \\end{pmatrix} = \\begin{pmatrix} 1/k_x & P/(U k_x k_y) \\\\ 0 & 1/k_y \\end{pmatrix}.\n$$\nFor Case A, the probe load is $\\mathbf{p}^{(1)} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$. The resulting displacement is:\n$$\n\\mathbf{u}^{(1)} = \\mathbf{K}_t^{-1} \\mathbf{p}^{(1)} = \\begin{pmatrix} 1/k_x & P/(U k_x k_y) \\\\ 0 & 1/k_y \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1/k_x \\\\ 0 \\end{pmatrix}.\n$$\nSo, $u_x^{(1)} = 1/k_x$ and $u_y^{(1)} = 0$.\n\nFor Case B, the probe load is $\\mathbf{p}^{(2)} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$. The resulting displacement is:\n$$\n\\mathbf{u}^{(2)} = \\mathbf{K}_t^{-1} \\mathbf{p}^{(2)} = \\begin{pmatrix} 1/k_x & P/(U k_x k_y) \\\\ 0 & 1/k_y \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} P/(U k_x k_y) \\\\ 1/k_y \\end{pmatrix}.\n$$\nSo, $u_x^{(2)} = P/(U k_x k_y)$ and $u_y^{(2)} = 1/k_y$.\n\n**Task 3: Demonstration of Betti's Reciprocal Theorem Failure**\n\nBetti's reciprocal theorem states that for a linear elastic system, the work done by the first set of forces acting through the displacements from the second set is equal to the work done by the second set of forces acting through the displacements from the first. For our choice of unit probe loads, this is expressed as $(\\mathbf{p}^{(1)})^T \\mathbf{u}^{(2)} = (\\mathbf{p}^{(2)})^T \\mathbf{u}^{(1)}$, which simplifies to $u_x^{(2)} = u_y^{(1)}$.\n\nThe reciprocity defect $\\Delta$ is defined as the difference between these two quantities:\n$$\n\\Delta = u_y^{(1)} - u_x^{(2)}.\n$$\nUsing the results from Task $2$:\n$$\n\\Delta = 0 - \\frac{P}{U k_x k_y} = -\\frac{P}{U k_x k_y}.\n$$\nThis analytical result shows that the defect $\\Delta$ is non-zero whenever $P \\neq 0$, which confirms the failure of Betti's theorem due to the nonsymmetric nature of the tangent operator for a non-conservative system.\n\nWe now substitute the given numerical values:\n- $k_x = 1000$ N/m\n- $k_y = 800$ N/m\n- $P = 300$ N\n- $U = 0.24$ m\n\n$$\n\\Delta = -\\frac{300}{(0.24) \\times (1000) \\times (800)} = -\\frac{300}{192000} = -\\frac{1}{640} \\text{ m/N}.\n$$\nConverting this to a decimal value:\n$$\n\\Delta = -0.0015625 \\text{ m/N}.\n$$\nRounding to four significant figures, we get:\n$$\n\\Delta \\approx -0.001563 \\text{ m/N}.\n$$\nIn standard scientific notation this is $-1.563 \\times 10^{-3}$ m/N.", "answer": "$$\n\\boxed{-1.563 \\times 10^{-3}}\n$$", "id": "2618432"}, {"introduction": "Beyond its theoretical elegance, Betti's theorem provides a powerful and efficient tool for computational mechanics. This practice reframes the theorem as an \"adjoint method\" to solve a common engineering problem: finding a specific displacement component without needing to compute the entire displacement vector [@problem_id:2868483]. Implementing this procedure highlights how reciprocity can be leveraged to dramatically reduce computational cost in the analysis of large-scale structures.", "problem": "You are given small, static, linear-elastic models represented at the algebraic level by a symmetric positive definite stiffness matrix and a load vector. The displacement vector is defined by the linear system $K u = f$, where $K$ is the stiffness matrix, $f$ is the load vector, and $u$ is the displacement vector. You wish to compute a single scalar displacement component at a target Degree of Freedom (DOF), indexed by $j$, without computing the full displacement solution under $f$. Use Betti’s reciprocal theorem, derived from the principle of virtual work and the symmetry of the elastic strain energy, to design a one-solve adjoint procedure that uses a single auxiliary solve with a unit load applied at the target DOF. The structure is linear, the material is homogeneous and isotropic within each test, and the algebraic system is already reduced to free DOFs (all essential boundary conditions are applied). The stiffness matrices are given in Newton per meter and the load vectors are given in Newton, so the requested displacements must be reported in meters.\n\nYour task is to implement a program that, for each test case, constructs the auxiliary right-hand side corresponding to a unit force at the target DOF, solves the associated auxiliary linear system using the given stiffness matrix, and then evaluates the scalar displacement at the target DOF implied by reciprocity using the given original load vector. Report the result in meters, rounded to six decimal places.\n\nUse the following Test Suite, with $0$-based indexing for the target DOF:\n- Test case $1$:\n  - $K = \\begin{bmatrix} 12 & -3 & 0 \\\\ -3 & 10 & -2 \\\\ 0 & -2 & 5 \\end{bmatrix}$ (Newton per meter)\n  - $f = \\begin{bmatrix} 0 \\\\ 100 \\\\ 50 \\end{bmatrix}$ (Newton)\n  - $j = 2$\n- Test case $2$:\n  - $K = \\begin{bmatrix} 8 & -2 \\\\ -2 & 4 \\end{bmatrix}$ (Newton per meter)\n  - $f = \\begin{bmatrix} 0 \\\\ 10 \\end{bmatrix}$ (Newton)\n  - $j = 0$\n- Test case $3$:\n  - $K = \\begin{bmatrix} 6 & -2 & 0 \\\\ -2 & 5 & -1 \\\\ 0 & -1 & 3 \\end{bmatrix}$ (Newton per meter)\n  - $f = \\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}$ (Newton)\n  - $j = 1$\n- Test case $4$:\n  - $K = \\begin{bmatrix} 20 & -5 & 0 & 0 \\\\ -5 & 15 & -3 & 0 \\\\ 0 & -3 & 12 & -4 \\\\ 0 & 0 & -4 & 9 \\end{bmatrix}$ (Newton per meter)\n  - $f = \\begin{bmatrix} 0 \\\\ 0 \\\\ 100 \\\\ 0 \\end{bmatrix}$ (Newton)\n  - $j = 2$\n\nAlgorithmic constraints:\n- Treat each test independently.\n- For each test, perform exactly one auxiliary linear solve with the given stiffness matrix and an auxiliary right-hand side that applies a unit force at DOF $j$ and zero elsewhere.\n- Use the auxiliary displacement field together with the given original load vector to extract the target displacement via reciprocity.\n- Express every final scalar displacement in meters, rounded to six decimal places.\n\nFinal Output Format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets and with no spaces, in the order of the test cases $1$ through $4$.\n- Each entry must be a floating-point number with exactly six digits after the decimal point (meters).\n- Example format (illustrative only): $[0.123456,1.000000,0.000000,2.500000]$.", "solution": "We consider a static, linear, small-strain elastic system in the Finite Element Method (FEM), reduced to free Degrees of Freedom (DOF) after application of essential boundary conditions. Let $K \\in \\mathbb{R}^{n \\times n}$ be the global symmetric positive definite stiffness matrix, $f \\in \\mathbb{R}^{n}$ the external load vector, and $u \\in \\mathbb{R}^{n}$ the displacement vector, related by the linear system\n$$\nK u = f.\n$$\nWe are interested in a single scalar displacement component $u_j$ at a target DOF index $j \\in \\{0,1,\\dots,n-1\\}$, expressed in meters. Direct computation by solving $K u = f$ is possible but may be more expensive than necessary if only one component is needed. Betti’s reciprocal theorem (also called the Maxwell–Betti reciprocity) provides a way to compute $u_j$ through a single auxiliary solve.\n\nFoundational base:\n- The principle of virtual work states that, for any kinematically admissible virtual displacement $\\delta u$, the internal virtual work equals the external virtual work:\n$$\n\\delta W_{\\text{int}} = \\delta W_{\\text{ext}}.\n$$\n- In linear elasticity, the internal virtual work is bilinear in the displacement field due to linear constitutive behavior and is associated with a symmetric strain energy density. For two equilibrated states $(u^{(a)}, f^{(a)})$ and $(u^{(b)}, f^{(b)})$, with the same $K$ and $K u^{(a)} = f^{(a)}$, $K u^{(b)} = f^{(b)}$, the symmetry of $K$ implies the reciprocity identity\n$$\n\\left(u^{(a)}\\right)^{\\!\\top} K u^{(b)} = \\left(u^{(b)}\\right)^{\\!\\top} K u^{(a)}.\n$$\n- Substituting equilibrium $K u^{(a)} = f^{(a)}$ and $K u^{(b)} = f^{(b)}$ yields the Maxwell–Betti relation\n$$\n\\left(f^{(a)}\\right)^{\\!\\top} u^{(b)} = \\left(f^{(b)}\\right)^{\\!\\top} u^{(a)}.\n$$\n\nAdjoint construction:\n- Choose state $(a)$ to be the original loading: $f^{(a)} = f$, with solution $u^{(a)} = u$.\n- Choose state $(b)$ to be an auxiliary (adjoint) loading that applies a unit force at the target DOF $j$ and zero elsewhere:\n$$\nf^{(b)} = e_j,\n$$\nwhere $e_j \\in \\mathbb{R}^{n}$ is the $j$-th canonical basis vector. The corresponding auxiliary displacement is $u^{(b)} = w$, obtained from the auxiliary system\n$$\nK w = e_j.\n$$\n- Apply Maxwell–Betti:\n$$\nf^{\\top} w = e_j^{\\top} u = u_j.\n$$\nThus the scalar of interest $u_j$ equals the work of the original load vector $f$ acting through the auxiliary displacement field $w$.\n\nUnits:\n- $K$ has units Newton per meter. The auxiliary right-hand side $e_j$ has the units of Newton with magnitude $1$. Therefore, $w$ has units meter per Newton, and $f^{\\top} w$ has units meter, matching the target displacement component.\n\nAlgorithm for each test case:\n- Form $e_j$ with a $1$ at index $j$ and $0$ elsewhere.\n- Solve the linear system $K w = e_j$ for $w$.\n- Compute the scalar $u_j = f^{\\top} w$.\n- Round $u_j$ to six decimal places and report in meters.\n\nNumerical implementation details:\n- The matrices $K$ in the test suite are small, symmetric, and strictly diagonally dominant, hence symmetric positive definite; a direct dense solver is adequate.\n- To ensure a clean representation of zero, if $|u_j| < \\varepsilon$ for a small tolerance $\\varepsilon$, we may set $u_j = 0$ before rounding to avoid signed zero artifacts.\n- The final output is a single line in the exact required bracketed, comma-separated format with no spaces, with each value shown to six digits after the decimal point.\n\nThis procedure uses only one auxiliary solve per test case and evaluates the desired scalar by a single inner product, achieving the requested one-solve adjoint computation mandated by Betti’s reciprocal theorem.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef adjoint_displacement(K: np.ndarray, f: np.ndarray, j: int) -> float:\n    \"\"\"\n    Compute the displacement at DOF j using a single auxiliary (adjoint) solve:\n    Solve K w = e_j, then return f^T w.\n    \"\"\"\n    n = K.shape[0]\n    e = np.zeros(n, dtype=float)\n    e[j] = 1.0  # unit load at target DOF\n    # Solve the auxiliary system\n    w = np.linalg.solve(K, e)\n    # Reciprocity: u_j = f^T w\n    uj = float(np.dot(f, w))\n    # Clean near-zero for formatting\n    if abs(uj) < 1e-12:\n        uj = 0.0\n    return uj\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each test case: (K, f, j)\n    test_cases = [\n        (\n            np.array([[12.0, -3.0,  0.0],\n                      [-3.0, 10.0, -2.0],\n                      [ 0.0, -2.0,  5.0]], dtype=float),\n            np.array([0.0, 100.0, 50.0], dtype=float),\n            2\n        ),\n        (\n            np.array([[ 8.0, -2.0],\n                      [-2.0,  4.0]], dtype=float),\n            np.array([0.0, 10.0], dtype=float),\n            0\n        ),\n        (\n            np.array([[ 6.0, -2.0,  0.0],\n                      [-2.0,  5.0, -1.0],\n                      [ 0.0, -1.0,  3.0]], dtype=float),\n            np.array([0.0, 0.0, 0.0], dtype=float),\n            1\n        ),\n        (\n            np.array([[20.0, -5.0,  0.0,  0.0],\n                      [-5.0, 15.0, -3.0,  0.0],\n                      [ 0.0, -3.0, 12.0, -4.0],\n                      [ 0.0,  0.0, -4.0,  9.0]], dtype=float),\n            np.array([0.0, 0.0, 100.0, 0.0], dtype=float),\n            2\n        ),\n    ]\n\n    results = []\n    for K, f, j in test_cases:\n        uj = adjoint_displacement(K, f, j)\n        results.append(f\"{uj:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2868483"}]}