{"hands_on_practices": [{"introduction": "The entire framework of linear elasticity is built upon the foundational assumption of small strains. This practice delves into the mathematical origin of the infinitesimal strain tensor, $\\boldsymbol{\\varepsilon}_{\\text{small}}$, by deriving it from the more general Green-Lagrange strain tensor, $\\mathbf{E}$. By quantifying the error introduced by this crucial approximation for a specific deformation field, you will develop a deeper, quantitative understanding of the validity and limitations of linear elasticity theory [@problem_id:2898269].", "problem": "A homogeneous, hyperelastic solid occupies a reference configuration described by material coordinates $\\mathbf{X} \\in \\mathbb{R}^{3}$. Its motion is given by the deformation map $\\boldsymbol{\\varphi}(\\mathbf{X}) = \\mathbf{X} + \\mathbf{u}(\\mathbf{X})$, where the displacement field is specified as $\\mathbf{u}(\\mathbf{X}) = \\varepsilon \\,\\mathbf{A}\\,\\mathbf{X}$ with a small, dimensionless parameter $\\varepsilon$ and the constant matrix\n$$\n\\mathbf{A} \\equiv \n\\begin{pmatrix}\n0 & \\gamma & 0 \\\\\n0 & 0 & \\kappa \\\\\n\\lambda & 0 & 0\n\\end{pmatrix},\n$$\nwhere $\\gamma$, $\\kappa$, and $\\lambda$ are fixed, dimensionless constants. Using the displacement gradient $u_{i,j}$ as the fundamental kinematic measure, start from the standard definitions of the deformation gradient and the exact Green–Lagrange strain, together with the engineering small-strain tensor, to justify the small-strain approximation for this motion by identifying which terms are neglected and why. Then, for this specific deformation, quantify the approximation error by computing the ratio\n$$\nr(\\varepsilon,\\gamma,\\kappa,\\lambda) \\equiv \\frac{\\|\\mathbf{E} - \\boldsymbol{\\varepsilon}_{\\text{small}}\\|_{F}}{\\|\\mathbf{E}\\|_{F}},\n$$\nwhere $\\mathbf{E}$ is the exact Green–Lagrange strain, $\\boldsymbol{\\varepsilon}_{\\text{small}}$ is the infinitesimal (engineering) strain constructed from $u_{i,j}$, and $\\|\\cdot\\|_{F}$ is the Frobenius norm defined by $\\|\\mathbf{T}\\|_{F} = \\sqrt{\\mathrm{tr}(\\mathbf{T}^{\\mathsf{T}}\\mathbf{T})}$. Express the final answer for $r(\\varepsilon,\\gamma,\\kappa,\\lambda)$ as a single closed-form analytic expression. No numerical evaluation is required. The final answer is dimensionless and must be given without units.", "solution": "The problem is subjected to validation and is found to be scientifically grounded, well-posed, and objective. It is a standard problem in continuum mechanics that is free of flaws. We proceed to the solution.\n\nThe motion of the solid is described by the displacement field $\\mathbf{u}(\\mathbf{X}) = \\varepsilon \\,\\mathbf{A}\\,\\mathbf{X}$. We begin by defining the fundamental kinematic quantities. The displacement gradient tensor, denoted by $\\mathbf{H}$, is defined as the gradient of the displacement field with respect to the material coordinates $\\mathbf{X}$:\n$$\n\\mathbf{H} = \\nabla_{\\mathbf{X}} \\mathbf{u}\n$$\nIn component form, its elements are $H_{ij} = u_{i,j} = \\frac{\\partial u_i}{\\partial X_j}$. For the given linear displacement field, we have $u_i = \\varepsilon A_{ik} X_k$. Thus, the displacement gradient is:\n$$\nH_{ij} = \\frac{\\partial}{\\partial X_j} (\\varepsilon A_{ik} X_k) = \\varepsilon A_{ik} \\frac{\\partial X_k}{\\partial X_j} = \\varepsilon A_{ik} \\delta_{jk} = \\varepsilon A_{ij}\n$$\nTherefore, the displacement gradient tensor is $\\mathbf{H} = \\varepsilon \\mathbf{A}$.\n$$\n\\mathbf{H} = \\varepsilon \n\\begin{pmatrix}\n0 & \\gamma & 0 \\\\\n0 & 0 & \\kappa \\\\\n\\lambda & 0 & 0\n\\end{pmatrix}\n$$\nThe deformation gradient tensor, $\\mathbf{F}$, relates line elements in the reference configuration to those in the deformed configuration and is defined as $\\mathbf{F} = \\mathbf{I} + \\mathbf{H}$, where $\\mathbf{I}$ is the second-order identity tensor.\n\nThe exact measure of strain for large deformations is the Green–Lagrange strain tensor, $\\mathbf{E}$, defined as:\n$$\n\\mathbf{E} = \\frac{1}{2}(\\mathbf{F}^{\\mathsf{T}}\\mathbf{F} - \\mathbf{I})\n$$\nSubstituting $\\mathbf{F} = \\mathbf{I} + \\mathbf{H}$ into the definition of $\\mathbf{E}$ yields:\n$$\n\\mathbf{E} = \\frac{1}{2}((\\mathbf{I} + \\mathbf{H})^{\\mathsf{T}}(\\mathbf{I} + \\mathbf{H}) - \\mathbf{I}) = \\frac{1}{2}(\\mathbf{I} + \\mathbf{H}^{\\mathsf{T}} + \\mathbf{H} + \\mathbf{H}^{\\mathsf{T}}\\mathbf{H} - \\mathbf{I}) = \\frac{1}{2}(\\mathbf{H} + \\mathbf{H}^{\\mathsf{T}}) + \\frac{1}{2}\\mathbf{H}^{\\mathsf{T}}\\mathbf{H}\n$$\nThe infinitesimal (or small, or engineering) strain tensor, $\\boldsymbol{\\varepsilon}_{\\text{small}}$, is defined as the symmetric part of the displacement gradient:\n$$\n\\boldsymbol{\\varepsilon}_{\\text{small}} = \\frac{1}{2}(\\mathbf{H} + \\mathbf{H}^{\\mathsf{T}})\n$$\nThus, the relationship between the exact Green–Lagrange strain and the infinitesimal strain is:\n$$\n\\mathbf{E} = \\boldsymbol{\\varepsilon}_{\\text{small}} + \\frac{1}{2}\\mathbf{H}^{\\mathsf{T}}\\mathbf{H}\n$$\nThe small-strain approximation consists in neglecting the higher-order term $\\frac{1}{2}\\mathbf{H}^{\\mathsf{T}}\\mathbf{H}$. The justification for this approximation is based on the magnitude of the displacement gradient $\\mathbf{H}$. Since $\\mathbf{H} = \\varepsilon \\mathbf{A}$, the components of $\\mathbf{H}$ are of order $\\mathcal{O}(\\varepsilon)$. Consequently, the components of $\\boldsymbol{\\varepsilon}_{\\text{small}}$ are also of order $\\mathcal{O}(\\varepsilon)$, while the components of the term $\\frac{1}{2}\\mathbf{H}^{\\mathsf{T}}\\mathbf{H}$ are of order $\\mathcal{O}(\\varepsilon^2)$. For a sufficiently small parameter $\\varepsilon \\ll 1$, we have $\\varepsilon^2 \\ll \\varepsilon$, which justifies neglecting the quadratic term in comparison to the linear term. The approximation is $\\mathbf{E} \\approx \\boldsymbol{\\varepsilon}_{\\text{small}}$.\n\nNow, we compute the specific tensors required for the problem.\nThe infinitesimal strain tensor is:\n$$\n\\boldsymbol{\\varepsilon}_{\\text{small}} = \\frac{1}{2}(\\varepsilon\\mathbf{A} + (\\varepsilon\\mathbf{A})^{\\mathsf{T}}) = \\frac{\\varepsilon}{2}(\\mathbf{A} + \\mathbf{A}^{\\mathsf{T}})\n$$\n$$\n\\mathbf{A} + \\mathbf{A}^{\\mathsf{T}} = \\begin{pmatrix} 0 & \\gamma & 0 \\\\ 0 & 0 & \\kappa \\\\ \\lambda & 0 & 0 \\end{pmatrix} + \\begin{pmatrix} 0 & 0 & \\lambda \\\\ \\gamma & 0 & 0 \\\\ 0 & \\kappa & 0 \\end{pmatrix} = \\begin{pmatrix} 0 & \\gamma & \\lambda \\\\ \\gamma & 0 & \\kappa \\\\ \\lambda & \\kappa & 0 \\end{pmatrix}\n$$\n$$\n\\boldsymbol{\\varepsilon}_{\\text{small}} = \\frac{\\varepsilon}{2} \\begin{pmatrix} 0 & \\gamma & \\lambda \\\\ \\gamma & 0 & \\kappa \\\\ \\lambda & \\kappa & 0 \\end{pmatrix}\n$$\nThe error term in the approximation is $\\mathbf{D} \\equiv \\mathbf{E} - \\boldsymbol{\\varepsilon}_{\\text{small}} = \\frac{1}{2}\\mathbf{H}^{\\mathsf{T}}\\mathbf{H} = \\frac{\\varepsilon^2}{2}\\mathbf{A}^{\\mathsf{T}}\\mathbf{A}$.\n$$\n\\mathbf{A}^{\\mathsf{T}}\\mathbf{A} = \\begin{pmatrix} 0 & 0 & \\lambda \\\\ \\gamma & 0 & 0 \\\\ 0 & \\kappa & 0 \\end{pmatrix} \\begin{pmatrix} 0 & \\gamma & 0 \\\\ 0 & 0 & \\kappa \\\\ \\lambda & 0 & 0 \\end{pmatrix} = \\begin{pmatrix} \\lambda^2 & 0 & 0 \\\\ 0 & \\gamma^2 & 0 \\\\ 0 & 0 & \\kappa^2 \\end{pmatrix}\n$$\n$$\n\\mathbf{D} = \\frac{\\varepsilon^2}{2} \\begin{pmatrix} \\lambda^2 & 0 & 0 \\\\ 0 & \\gamma^2 & 0 \\\\ 0 & 0 & \\kappa^2 \\end{pmatrix}\n$$\nThe problem requires computing the ratio $r = \\frac{\\|\\mathbf{E} - \\boldsymbol{\\varepsilon}_{\\text{small}}\\|_{F}}{\\|\\mathbf{E}\\|_{F}}$. We compute the Frobenius norms. The Frobenius norm of a matrix $\\mathbf{T}$ is $\\|\\mathbf{T}\\|_F = \\sqrt{\\sum_{i,j} T_{ij}^2}$.\n\nFirst, the norm of the error tensor $\\mathbf{D}$:\n$$\n\\|\\mathbf{D}\\|_{F}^2 = \\|\\mathbf{E} - \\boldsymbol{\\varepsilon}_{\\text{small}}\\|_{F}^2 = \\left(\\frac{\\varepsilon^2 \\lambda^2}{2}\\right)^2 + \\left(\\frac{\\varepsilon^2 \\gamma^2}{2}\\right)^2 + \\left(\\frac{\\varepsilon^2 \\kappa^2}{2}\\right)^2 = \\frac{\\varepsilon^4}{4}(\\lambda^4 + \\gamma^4 + \\kappa^4)\n$$\n$$\n\\|\\mathbf{E} - \\boldsymbol{\\varepsilon}_{\\text{small}}\\|_{F} = \\frac{\\varepsilon^2}{2}\\sqrt{\\gamma^4 + \\kappa^4 + \\lambda^4}\n$$\nNext, we compute the norm of the Green-Lagrange strain tensor $\\mathbf{E} = \\boldsymbol{\\varepsilon}_{\\text{small}} + \\mathbf{D}$.\n$$\n\\mathbf{E} = \\frac{1}{2} \\begin{pmatrix} \\varepsilon^2 \\lambda^2 & \\varepsilon \\gamma & \\varepsilon \\lambda \\\\ \\varepsilon \\gamma & \\varepsilon^2 \\gamma^2 & \\varepsilon \\kappa \\\\ \\varepsilon \\lambda & \\varepsilon \\kappa & \\varepsilon^2 \\kappa^2 \\end{pmatrix}\n$$\nThe squared Frobenius norm is the sum of the squares of its components:\n$$\n\\|\\mathbf{E}\\|_{F}^2 = \\sum_{i,j} E_{ij}^2 = \\left(E_{11}^2+E_{22}^2+E_{33}^2\\right) + 2\\left(E_{12}^2+E_{13}^2+E_{23}^2\\right)\n$$\n$$\n\\|\\mathbf{E}\\|_{F}^2 = \\left(\\left(\\frac{\\varepsilon^2 \\lambda^2}{2}\\right)^2 + \\left(\\frac{\\varepsilon^2 \\gamma^2}{2}\\right)^2 + \\left(\\frac{\\varepsilon^2 \\kappa^2}{2}\\right)^2\\right) + 2\\left(\\left(\\frac{\\varepsilon \\gamma}{2}\\right)^2 + \\left(\\frac{\\varepsilon \\lambda}{2}\\right)^2 + \\left(\\frac{\\varepsilon \\kappa}{2}\\right)^2\\right)\n$$\n$$\n\\|\\mathbf{E}\\|_{F}^2 = \\frac{\\varepsilon^4}{4}(\\gamma^4 + \\kappa^4 + \\lambda^4) + 2\\left(\\frac{\\varepsilon^2}{4}(\\gamma^2 + \\lambda^2 + \\kappa^2)\\right)\n$$\n$$\n\\|\\mathbf{E}\\|_{F}^2 = \\frac{\\varepsilon^4}{4}(\\gamma^4 + \\kappa^4 + \\lambda^4) + \\frac{\\varepsilon^2}{2}(\\gamma^2 + \\kappa^2 + \\lambda^2)\n$$\nTaking the square root gives the norm of $\\mathbf{E}$:\n$$\n\\|\\mathbf{E}\\|_{F} = \\sqrt{\\frac{\\varepsilon^2}{2}(\\gamma^2 + \\kappa^2 + \\lambda^2) + \\frac{\\varepsilon^4}{4}(\\gamma^4 + \\kappa^4 + \\lambda^4)}\n$$\n$$\n\\|\\mathbf{E}\\|_{F} = \\frac{\\varepsilon}{2}\\sqrt{2(\\gamma^2 + \\kappa^2 + \\lambda^2) + \\varepsilon^2(\\gamma^4 + \\kappa^4 + \\lambda^4)}\n$$\nFinally, we compute the ratio $r(\\varepsilon, \\gamma, \\kappa, \\lambda)$:\n$$\nr = \\frac{\\frac{\\varepsilon^2}{2}\\sqrt{\\gamma^4 + \\kappa^4 + \\lambda^4}}{\\frac{\\varepsilon}{2}\\sqrt{2(\\gamma^2 + \\kappa^2 + \\lambda^2) + \\varepsilon^2(\\gamma^4 + \\kappa^4 + \\lambda^4)}}\n$$\n$$\nr = \\varepsilon \\frac{\\sqrt{\\gamma^4 + \\kappa^4 + \\lambda^4}}{\\sqrt{2(\\gamma^2 + \\kappa^2 + \\lambda^2) + \\varepsilon^2(\\gamma^4 + \\kappa^4 + \\lambda^4)}}\n$$\nThis is the final closed-form expression for the relative error of the small-strain approximation for the given deformation. As expected, the relative error $r$ is of order $\\mathcal{O}(\\varepsilon)$.", "answer": "$$\\boxed{\\varepsilon \\frac{\\sqrt{\\gamma^{4} + \\kappa^{4} + \\lambda^{4}}}{\\sqrt{2(\\gamma^{2} + \\kappa^{2} + \\lambda^{2}) + \\varepsilon^{2}(\\gamma^{4} + \\kappa^{4} + \\lambda^{4})}}}$$", "id": "2898269"}, {"introduction": "The concept of stress is central to understanding how internal forces are distributed within a deformable body. This exercise guides you through the fundamental derivation of Cauchy's relation, $\\boldsymbol{t} = \\boldsymbol{\\sigma} \\boldsymbol{n}$, which elegantly connects the physical traction vector $\\boldsymbol{t}$ on any internal surface to the abstract Cauchy stress tensor $\\boldsymbol{\\sigma}$. You will then apply this principle to perform a complete analysis of a given stress state, determining its principal stresses and directions—a foundational skill for predicting material failure and designing resilient structures [@problem_id:2898298].", "problem": "A homogeneous, linearly elastic solid is in static equilibrium under a prescribed Cauchy stress field at a material point, represented in a fixed Cartesian basis by the symmetric tensor\n$$\n\\boldsymbol{\\sigma} = \n\\begin{pmatrix}\n5 & 2 & 0 \\\\\n2 & 1 & 0 \\\\\n0 & 0 & 3\n\\end{pmatrix}\n\\ \\text{GPa}.\n$$\nConsider the traction vector acting on an oriented plane through the point with unit normal $\\boldsymbol{n}$.\n\n1) Starting from the local balance of linear momentum and the definition of traction as the force per unit area transmitted across an internal surface with unit normal $\\boldsymbol{n}$, derive the linear mapping between the traction vector $\\boldsymbol{t}(\\boldsymbol{n})$ and the Cauchy stress tensor $\\boldsymbol{\\sigma}$. Clearly state the minimal assumptions from linear elasticity that you use to fix tensor symmetries.\n\n2) Using your result, evaluate the traction vector on the plane whose unit normal is\n$$\n\\boldsymbol{n}=\\frac{1}{\\sqrt{3}}\\,(1,\\,1,\\,1),\n$$\nand compute its magnitude. Express the traction components and its magnitude in exact form. Report stresses in gigapascals (GPa).\n\n3) Determine the principal stresses and the associated orthonormal principal directions by solving the eigenvalue problem for $\\boldsymbol{\\sigma}$. Provide the three principal stresses ordered from largest to smallest and give each principal direction as a unit vector of Cartesian components. Express all quantities in exact closed form; do not round. If you choose to parameterize any direction by an angle, it must be given in radians.\n\nYour final answer must be a single row of numbers and closed-form expressions, containing in order: the three traction components on the specified plane, the traction magnitude, the three ordered principal stresses, and then the nine Cartesian components of the three corresponding unit principal directions (in the same order as the principal stresses). Do not include units inside this row; interpret stresses as GPa as specified above.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It is a standard problem in continuum mechanics involving the application of Cauchy's stress theorem and the spectral analysis of a symmetric second-order tensor. All necessary data are provided, and there are no internal contradictions. Therefore, the problem is valid, and a solution will be provided.\n\nThe problem is addressed in three parts as requested.\n\n1) Derivation of the traction-stress relationship:\nWe begin with the integral form of the local balance of linear momentum for a body in static equilibrium and in the absence of body forces, which states that the net surface force on any arbitrary volume $V$ with boundary $\\partial V$ is zero:\n$$\n\\int_{\\partial V} \\boldsymbol{t}(\\boldsymbol{x}, \\boldsymbol{n}) \\, dA = \\boldsymbol{0}\n$$\nHere, $\\boldsymbol{t}$ is the traction vector, which depends on position $\\boldsymbol{x}$ and the outward unit normal $\\boldsymbol{n}$ of the surface element $dA$.\n\nTo find the relationship at a single point, we consider an infinitesimal tetrahedron with three faces orthogonal to the Cartesian basis vectors $\\boldsymbol{e}_1, \\boldsymbol{e}_2, \\boldsymbol{e}_3$, and a fourth slant face with an outward unit normal $\\boldsymbol{n}$. The vertices of this tetrahedron are at the origin $O$ and at points $(\\epsilon, 0, 0)$, $(0, \\epsilon, 0)$, and $(0, 0, \\epsilon)$ along the axes, in the limit as $\\epsilon \\to 0$. Let the area of the slant face be $A$. The areas of the faces on the coordinate planes are $A_i = A (\\boldsymbol{n} \\cdot \\boldsymbol{e}_i) = A n_i$, for $i=1, 2, 3$. The outward normals to these faces are $-\\boldsymbol{e}_i$.\n\nThe total force on the tetrahedron is the sum of forces on its four faces:\n$$\n\\boldsymbol{t}(\\boldsymbol{n}) A + \\boldsymbol{t}(-\\boldsymbol{e}_1) A_1 + \\boldsymbol{t}(-\\boldsymbol{e}_2) A_2 + \\boldsymbol{t}(-\\boldsymbol{e}_3) A_3 = \\boldsymbol{0}\n$$\nBy the action-reaction principle for surface tractions (an extension of Newton's third law sometimes called Cauchy's lemma), $\\boldsymbol{t}(-\\boldsymbol{n}) = -\\boldsymbol{t}(\\boldsymbol{n})$. Applying this to the coordinate faces, we have $\\boldsymbol{t}(-\\boldsymbol{e}_i) = -\\boldsymbol{t}(\\boldsymbol{e}_i)$. Substituting this and $A_i = A n_i$ into the force balance equation gives:\n$$\n\\boldsymbol{t}(\\boldsymbol{n}) A - \\boldsymbol{t}(\\boldsymbol{e}_1) A n_1 - \\boldsymbol{t}(\\boldsymbol{e}_2) A n_2 - \\boldsymbol{t}(\\boldsymbol{e}_3) A n_3 = \\boldsymbol{0}\n$$\nDividing by the non-zero area $A$, we obtain Cauchy's stress theorem:\n$$\n\\boldsymbol{t}(\\boldsymbol{n}) = n_1 \\boldsymbol{t}(\\boldsymbol{e}_1) + n_2 \\boldsymbol{t}(\\boldsymbol{e}_2) + n_3 \\boldsymbol{t}(\\boldsymbol{e}_3) = \\sum_{i=1}^3 n_i \\boldsymbol{t}(\\boldsymbol{e}_i)\n$$\nThis equation shows that the traction vector $\\boldsymbol{t}(\\boldsymbol{n})$ is a linear function of the normal vector $\\boldsymbol{n}$. We can therefore define a second-order tensor, the Cauchy stress tensor $\\boldsymbol{\\sigma}$, which maps $\\boldsymbol{n}$ to $\\boldsymbol{t}$. The components of this tensor are defined by the traction vectors acting on the coordinate planes, such that $[\\boldsymbol{\\sigma}]_{ij} = (\\boldsymbol{t}(\\boldsymbol{e}_j))_i$. With this definition, the previous sum can be written in matrix form as $\\boldsymbol{t} = \\boldsymbol{\\sigma}^T \\boldsymbol{n}$.\n\nA minimal assumption from linear elasticity is that the continuum is non-polar, meaning there are no body couples or couple stresses. In this case, the local balance of angular momentum requires the Cauchy stress tensor to be symmetric, i.e., $\\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}^T$. With this symmetry property, the relationship simplifies to what is known as Cauchy's relation:\n$$\n\\boldsymbol{t} = \\boldsymbol{\\sigma} \\boldsymbol{n}\n$$\nThis is the required linear mapping.\n\n2) Evaluation of the traction vector and its magnitude:\nWe are given the Cauchy stress tensor and the unit normal vector:\n$$\n\\boldsymbol{\\sigma} =\n\\begin{pmatrix}\n5 & 2 & 0 \\\\\n2 & 1 & 0 \\\\\n0 & 0 & 3\n\\end{pmatrix}\n\\ \\text{GPa}, \\quad\n\\boldsymbol{n} = \\frac{1}{\\sqrt{3}}\n\\begin{pmatrix}\n1 \\\\\n1 \\\\\n1\n\\end{pmatrix}\n$$\nUsing the derived relation $\\boldsymbol{t} = \\boldsymbol{\\sigma} \\boldsymbol{n}$, we compute the traction vector $\\boldsymbol{t}$:\n$$\n\\boldsymbol{t} = \\frac{1}{\\sqrt{3}}\n\\begin{pmatrix}\n5 & 2 & 0 \\\\\n2 & 1 & 0 \\\\\n0 & 0 & 3\n\\end{pmatrix}\n\\begin{pmatrix}\n1 \\\\\n1 \\\\\n1\n\\end{pmatrix}\n= \\frac{1}{\\sqrt{3}}\n\\begin{pmatrix}\n5 \\cdot 1 + 2 \\cdot 1 + 0 \\cdot 1 \\\\\n2 \\cdot 1 + 1 \\cdot 1 + 0 \\cdot 1 \\\\\n0 \\cdot 1 + 0 \\cdot 1 + 3 \\cdot 1\n\\end{pmatrix}\n= \\frac{1}{\\sqrt{3}}\n\\begin{pmatrix}\n7 \\\\\n3 \\\\\n3\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\frac{7}{\\sqrt{3}} \\\\\n\\sqrt{3} \\\\\n\\sqrt{3}\n\\end{pmatrix}\n\\ \\text{GPa}\n$$\nRationalizing the first component gives $\\boldsymbol{t} = (\\frac{7\\sqrt{3}}{3}, \\sqrt{3}, \\sqrt{3})^T$ GPa.\nThe magnitude of the traction vector, $|\\boldsymbol{t}|$, is calculated as:\n$$\n|\\boldsymbol{t}| = \\sqrt{t_1^2 + t_2^2 + t_3^2} = \\sqrt{\\left(\\frac{7}{\\sqrt{3}}\\right)^2 + (\\sqrt{3})^2 + (\\sqrt{3})^2} = \\sqrt{\\frac{49}{3} + 3 + 3} = \\sqrt{\\frac{49}{3} + \\frac{18}{3}} = \\sqrt{\\frac{67}{3}} \\ \\text{GPa}\n$$\n\n3) Determination of principal stresses and principal directions:\nThe principal stresses are the eigenvalues of the stress tensor $\\boldsymbol{\\sigma}$, and the principal directions are the corresponding unit eigenvectors. We solve the characteristic equation $\\det(\\boldsymbol{\\sigma} - \\lambda \\boldsymbol{I}) = 0$:\n$$\n\\det\n\\begin{pmatrix}\n5-\\lambda & 2 & 0 \\\\\n2 & 1-\\lambda & 0 \\\\\n0 & 0 & 3-\\lambda\n\\end{pmatrix}\n= 0\n$$\nExpanding the determinant along the third row yields:\n$$\n(3-\\lambda) \\left[ (5-\\lambda)(1-\\lambda) - (2)(2) \\right] = 0\n$$\n$$\n(3-\\lambda) (\\lambda^2 - 6\\lambda + 5 - 4) = 0\n$$\n$$\n(3-\\lambda) (\\lambda^2 - 6\\lambda + 1) = 0\n$$\nOne eigenvalue is immediately $\\lambda = 3$. The other two are found from the quadratic equation $\\lambda^2 - 6\\lambda + 1 = 0$:\n$$\n\\lambda = \\frac{-(-6) \\pm \\sqrt{(-6)^2 - 4(1)(1)}}{2} = \\frac{6 \\pm \\sqrt{32}}{2} = \\frac{6 \\pm 4\\sqrt{2}}{2} = 3 \\pm 2\\sqrt{2}\n$$\nThe three principal stresses are $\\{3, 3+2\\sqrt{2}, 3-2\\sqrt{2}\\}$. Ordering them from largest to smallest ($\\sigma_1 > \\sigma_2 > \\sigma_3$):\n$\\sigma_1 = 3 + 2\\sqrt{2}$\n$\\sigma_2 = 3$\n$\\sigma_3 = 3 - 2\\sqrt{2}$\n\nNow we find the corresponding principal directions (eigenvectors) by solving $(\\boldsymbol{\\sigma} - \\sigma_i \\boldsymbol{I}) \\boldsymbol{n}_i = \\boldsymbol{0}$ for each eigenvalue.\n\nFor $\\sigma_2 = 3$:\n$$\n\\begin{pmatrix}\n5-3 & 2 & 0 \\\\\n2 & 1-3 & 0 \\\\\n0 & 0 & 3-3\n\\end{pmatrix}\n\\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} =\n\\begin{pmatrix}\n2 & 2 & 0 \\\\\n2 & -2 & 0 \\\\\n0 & 0 & 0\n\\end{pmatrix}\n\\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} = \\boldsymbol{0}\n$$\nThe first two rows imply $2x + 2y = 0$ and $2x - 2y = 0$, which can only be satisfied if $x=0$ and $y=0$. The third row $0z=0$ is true for any $z$. Thus, the eigenvector is of the form $(0, 0, z)^T$. The unit eigenvector is $\\boldsymbol{n}_2 = (0, 0, 1)^T$.\n\nFor $\\sigma_1 = 3+2\\sqrt{2}$:\n$$\n\\begin{pmatrix}\n5-(3+2\\sqrt{2}) & 2 & 0 \\\\\n2 & 1-(3+2\\sqrt{2}) & 0 \\\\\n0 & 0 & 3-(3+2\\sqrt{2})\n\\end{pmatrix}\n\\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} = \\boldsymbol{0}\n\\implies\n\\begin{pmatrix}\n2-2\\sqrt{2} & 2 & 0 \\\\\n2 & -2-2\\sqrt{2} & 0 \\\\\n0 & 0 & -2\\sqrt{2}\n\\end{pmatrix}\n\\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} = \\boldsymbol{0}\n$$\nThe last row gives $z=0$. The first row gives $(2-2\\sqrt{2})x+2y=0$, or $y = (\\sqrt{2}-1)x$. The direction is $(1, \\sqrt{2}-1, 0)^T$. The squared norm is $1^2+(\\sqrt{2}-1)^2 = 1+2-2\\sqrt{2}+1=4-2\\sqrt{2}$. Normalizing gives the unit vector $\\boldsymbol{n}_1$:\n$$\n\\boldsymbol{n}_1 = \\frac{1}{\\sqrt{4-2\\sqrt{2}}}\\begin{pmatrix} 1 \\\\ \\sqrt{2}-1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} \\frac{\\sqrt{2+\\sqrt{2}}}{2} \\\\ \\frac{\\sqrt{2-\\sqrt{2}}}{2} \\\\ 0 \\end{pmatrix}\n$$\n\nFor $\\sigma_3 = 3-2\\sqrt{2}$:\n$$\n\\begin{pmatrix}\n5-(3-2\\sqrt{2}) & 2 & 0 \\\\\n2 & 1-(3-2\\sqrt{2}) & 0 \\\\\n0 & 0 & 3-(3-2\\sqrt{2})\n\\end{pmatrix}\n\\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} = \\boldsymbol{0}\n\\implies\n\\begin{pmatrix}\n2+2\\sqrt{2} & 2 & 0 \\\\\n2 & -2+2\\sqrt{2} & 0 \\\\\n0 & 0 & 2\\sqrt{2}\n\\end{pmatrix}\n\\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} = \\boldsymbol{0}\n$$\nThe last row gives $z=0$. The first row gives $(2+2\\sqrt{2})x + 2y = 0$, or $y=-(\\sqrt{2}+1)x$. The direction is $(1, -(\\sqrt{2}+1), 0)^T$. The squared norm is $1^2+(-(\\sqrt{2}+1))^2=1+2+2\\sqrt{2}+1 = 4+2\\sqrt{2}$. Normalizing gives the unit vector $\\boldsymbol{n}_3$:\n$$\n\\boldsymbol{n}_3 = \\frac{1}{\\sqrt{4+2\\sqrt{2}}}\\begin{pmatrix} 1 \\\\ -(\\sqrt{2}+1) \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} \\frac{\\sqrt{2-\\sqrt{2}}}{2} \\\\ -\\frac{\\sqrt{2+\\sqrt{2}}}{2} \\\\ 0 \\end{pmatrix}\n$$\nThe three principal directions form an orthonormal basis, as expected for a symmetric tensor.\n\nSummary of results:\nTraction components: $t_1 = \\frac{7\\sqrt{3}}{3}$, $t_2 = \\sqrt{3}$, $t_3 = \\sqrt{3}$.\nTraction magnitude: $|\\boldsymbol{t}| = \\sqrt{\\frac{67}{3}}$.\nPrincipal stresses: $\\sigma_1 = 3+2\\sqrt{2}$, $\\sigma_2 = 3$, $\\sigma_3 = 3-2\\sqrt{2}$.\nPrincipal directions:\n$\\boldsymbol{n}_1 = (\\frac{\\sqrt{2+\\sqrt{2}}}{2}, \\frac{\\sqrt{2-\\sqrt{2}}}{2}, 0)^T$.\n$\\boldsymbol{n}_2 = (0, 0, 1)^T$.\n$\\boldsymbol{n}_3 = (\\frac{\\sqrt{2-\\sqrt{2}}}{2}, -\\frac{\\sqrt{2+\\sqrt{2}}}{2}, 0)^T$.\nThese quantities will be provided in the final answer as a single row matrix.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{7\\sqrt{3}}{3} & \\sqrt{3} & \\sqrt{3} & \\sqrt{\\frac{67}{3}} & 3+2\\sqrt{2} & 3 & 3-2\\sqrt{2} & \\frac{\\sqrt{2+\\sqrt{2}}}{2} & \\frac{\\sqrt{2-\\sqrt{2}}}{2} & 0 & 0 & 0 & 1 & \\frac{\\sqrt{2-\\sqrt{2}}}{2} & -\\frac{\\sqrt{2+\\sqrt{2}}}{2} & 0 \\end{pmatrix}}\n$$", "id": "2898298"}, {"introduction": "While isotropic models are a useful simplification, most real-world engineering materials exhibit complex directional dependencies in their stiffness. This computational practice introduces a powerful technique, the Kelvin representation, to analyze the full fourth-order elasticity tensor $C_{ijkl}$ by mapping it onto an equivalent $6 \\times 6$ matrix. Performing a spectral decomposition on this matrix reveals the material's fundamental \"eigenmodes\" of deformation and their associated stiffnesses, providing profound insight into its mechanical character [@problem_id:2898295].", "problem": "Consider a fourth-order linear elastic stiffness tensor $C_{ijkl}$ acting on the vector space of symmetric second-order tensors $\\mathrm{Sym}(3)$ through the generalized Hooke’s law $\\sigma_{ij} = C_{ijkl}\\,\\varepsilon_{kl}$, where $\\sigma_{ij}$ is the Cauchy stress and $\\varepsilon_{kl}$ is the infinitesimal strain. Assume the standard Frobenius inner product on $\\mathrm{Sym}(3)$, namely $\\langle A, B \\rangle = A_{ij} B_{ij}$ with implied summation over repeated indices. Under the usual minor and major symmetries $C_{ijkl} = C_{jikl} = C_{ijlk} = C_{klij}$ and positive definiteness, $C$ defines a real, symmetric, positive definite linear operator on the six-dimensional Hilbert space $\\mathrm{Sym}(3)$.\n\nYou will implement, from first principles, a spectral decomposition of $C$ on $\\mathrm{Sym}(3)$ by passing to the orthonormal Kelvin representation. The Kelvin basis $\\{B_\\alpha\\}_{\\alpha=1}^6$ of $\\mathrm{Sym}(3)$ is defined by\n- $B_1 = e_1 \\otimes e_1$,\n- $B_2 = e_2 \\otimes e_2$,\n- $B_3 = e_3 \\otimes e_3$,\n- $B_4 = \\dfrac{1}{\\sqrt{2}}(e_2 \\otimes e_3 + e_3 \\otimes e_2)$,\n- $B_5 = \\dfrac{1}{\\sqrt{2}}(e_1 \\otimes e_3 + e_3 \\otimes e_1)$,\n- $B_6 = \\dfrac{1}{\\sqrt{2}}(e_1 \\otimes e_2 + e_2 \\otimes e_1)$,\nwhich is orthonormal with respect to the Frobenius inner product. In this basis, $C$ is represented by a symmetric $6\\times 6$ real matrix $\\mathbf{C}^{\\mathrm{Kelvin}}$ such that, for any $\\varepsilon \\in \\mathrm{Sym}(3)$ with Kelvin coordinates $\\mathbf{e} \\in \\mathbb{R}^6$, the Kelvin coordinates of $\\sigma = C:\\varepsilon$ are $\\mathbf{s} = \\mathbf{C}^{\\mathrm{Kelvin}} \\mathbf{e}$. The spectral theorem then guarantees the existence of an orthonormal eigenbasis $\\{\\mathbf{v}^{(a)}\\}_{a=1}^6$ of $\\mathbb{R}^6$ and real positive eigenvalues $\\{\\lambda_a\\}_{a=1}^6$ such that\n$$\n\\mathbf{C}^{\\mathrm{Kelvin}} = \\sum_{a=1}^6 \\lambda_a\\, \\mathbf{v}^{(a)} \\otimes \\mathbf{v}^{(a)}.\n$$\nEach mode $\\mathbf{v}^{(a)}$ corresponds to a symmetric mode tensor $N^{(a)} \\in \\mathrm{Sym}(3)$ via the inverse Kelvin map. Interpreting the physical content of each mode is facilitated by its volumetric content, quantified by the scalar\n$$\nf^{(a)} = \\frac{|\\operatorname{tr}(N^{(a)})|}{\\sqrt{3}\\,\\|N^{(a)}\\|_F},\n$$\nwhere $\\|N\\|_F = \\sqrt{N_{ij}N_{ij}}$ is the Frobenius norm and $\\operatorname{tr}(N) = N_{ii}$. The quantity $f^{(a)}$ lies in $[0,1]$, with $f^{(a)}=1$ indicating a purely spherical (volumetric) mode and $f^{(a)}=0$ indicating a purely deviatoric (shear) mode.\n\nTasks to implement:\n1. Construct the Kelvin representation $\\mathbf{C}^{\\mathrm{Kelvin}}$ for each test case given below. For isotropic cases, you must assemble $\\mathbf{C}^{\\mathrm{Kelvin}}$ from the Young’s modulus $E$ and Poisson’s ratio $\\nu$ using the Lamé parameters $\\lambda$ and $\\mu$, where $\\lambda = \\dfrac{E \\nu}{(1+\\nu)(1-2\\nu)}$ and $\\mu = \\dfrac{E}{2(1+\\nu)}$. In the Kelvin basis ordered as $(11,22,33,23,13,12)$, the isotropic $\\mathbf{C}^{\\mathrm{Kelvin}}$ has the structure\n$$\n\\mathbf{C}^{\\mathrm{Kelvin}} = \n\\begin{bmatrix}\n\\lambda+2\\mu & \\lambda & \\lambda & 0 & 0 & 0\\\\\n\\lambda & \\lambda+2\\mu & \\lambda & 0 & 0 & 0\\\\\n\\lambda & \\lambda & \\lambda+2\\mu & 0 & 0 & 0\\\\\n0 & 0 & 0 & 2\\mu & 0 & 0\\\\\n0 & 0 & 0 & 0 & 2\\mu & 0\\\\\n0 & 0 & 0 & 0 & 0 & 2\\mu\n\\end{bmatrix}.\n$$\nFor the anisotropic cases specified directly in Kelvin form below, use the supplied entries.\n\n2. Compute the eigenvalues and orthonormal eigenvectors $(\\lambda_a,\\mathbf{v}^{(a)})$ of $\\mathbf{C}^{\\mathrm{Kelvin}}$, sort them in ascending order by $\\lambda_a$, and map each eigenvector $\\mathbf{v}^{(a)} = (v_1,\\dots,v_6)$ back to a symmetric tensor $N^{(a)}$ using\n$$\nN^{(a)} = v_1\\,B_1 + v_2\\,B_2 + v_3\\,B_3 + v_4\\,B_4 + v_5\\,B_5 + v_6\\,B_6,\n$$\nwhich explicitly gives the $3\\times 3$ matrix\n$$\nN^{(a)} = \n\\begin{bmatrix}\nv_1 & \\dfrac{v_6}{\\sqrt{2}} & \\dfrac{v_5}{\\sqrt{2}} \\\\\n\\dfrac{v_6}{\\sqrt{2}} & v_2 & \\dfrac{v_4}{\\sqrt{2}} \\\\\n\\dfrac{v_5}{\\sqrt{2}} & \\dfrac{v_4}{\\sqrt{2}} & v_3\n\\end{bmatrix}.\n$$\n\n3. For each mode, compute the volumetric fraction $f^{(a)}$ defined above. Additionally, verify the spectral reconstruction by forming\n$$\n\\widehat{\\mathbf{C}}^{\\mathrm{Kelvin}} = \\sum_{a=1}^6 \\lambda_a\\, \\mathbf{v}^{(a)} \\mathbf{v}^{(a)T},\n$$\nand compute the relative Frobenius error\n$$\n\\varepsilon_{\\mathrm{rel}} = \\frac{\\|\\mathbf{C}^{\\mathrm{Kelvin}} - \\widehat{\\mathbf{C}}^{\\mathrm{Kelvin}}\\|_F}{\\|\\mathbf{C}^{\\mathrm{Kelvin}}\\|_F}.\n$$\n\nMeasurement and units:\n- Report all stiffness entries and eigenvalues in gigapascal $(\\mathrm{GPa})$.\n- Report volumetric fractions $f^{(a)}$ as decimals in $[0,1]$.\n- No angle units are involved.\n\nTest suite:\nImplement your program to compute results for the following four test cases.\n\n- Test case A (isotropic): $E = 210$ $\\mathrm{GPa}$, $\\nu = 0.3$.\n- Test case B (cubic crystal, Kelvin form): use\n$$\n\\mathbf{C}^{\\mathrm{Kelvin}} =\n\\begin{bmatrix}\n260 & 160 & 160 & 0 & 0 & 0\\\\\n160 & 260 & 160 & 0 & 0 & 0\\\\\n160 & 160 & 260 & 0 & 0 & 0\\\\\n0 & 0 & 0 & 160 & 0 & 0\\\\\n0 & 0 & 0 & 0 & 160 & 0\\\\\n0 & 0 & 0 & 0 & 0 & 160\n\\end{bmatrix}.\n$$\n- Test case C (transversely isotropic, Kelvin form): with $C_{11}=150$, $C_{33}=200$, $C_{12}=70$, $C_{13}=65$, $C_{44}=40$ $\\mathrm{GPa}$ and $C_{66} = \\dfrac{C_{11}-C_{12}}{2} = 40$, use\n$$\n\\mathbf{C}^{\\mathrm{Kelvin}} =\n\\begin{bmatrix}\n150 & 70 & 65 & 0 & 0 & 0\\\\\n70 & 150 & 65 & 0 & 0 & 0\\\\\n65 & 65 & 200 & 0 & 0 & 0\\\\\n0 & 0 & 0 & 80 & 0 & 0\\\\\n0 & 0 & 0 & 0 & 80 & 0\\\\\n0 & 0 & 0 & 0 & 0 & 80\n\\end{bmatrix}.\n$$\n- Test case D (nearly incompressible isotropic): $E = 1.0$ $\\mathrm{GPa}$, $\\nu = 0.499$.\n\nRequired final output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets.\n- For each test case, output a list of three items: \n  1. the list of six eigenvalues in ascending order, each rounded to six decimal places (in $\\mathrm{GPa}$),\n  2. the list of the six corresponding volumetric fractions $f^{(a)}$ rounded to six decimal places,\n  3. the relative reconstruction error $\\varepsilon_{\\mathrm{rel}}$ rounded to twelve decimal places.\n- Therefore, the final output should look like\n$[\\,[\\,[\\lambda_1,\\dots,\\lambda_6],[f^{(1)},\\dots,f^{(6)}],\\varepsilon_{\\mathrm{rel}}\\,],\\dots\\,]$\nwith four such entries corresponding to the four test cases, and no additional text.\n\nYour program must not read any input and must be fully self-contained. The numerical values used must be exactly those specified above. All eigenvalues must be reported in $\\mathrm{GPa}$, rounded to six decimals as specified. The volumetric fractions must be decimals rounded to six decimals. The reconstruction error must be reported as a decimal rounded to twelve decimals.", "solution": "The problem as stated is scientifically grounded, formally coherent, and well-posed. It constitutes a direct application of fundamental principles from linear algebra and continuum mechanics to the analysis of elastic materials. We may therefore proceed with the solution.\n\nThe objective is to perform a spectral decomposition of the fourth-order linear elastic stiffness tensor, $C_{ijkl}$, for several material models. This decomposition is fundamental to understanding the intrinsic mechanical response of a material, as it resolves the stiffness into a set of orthogonal modes, each associated with a distinct stiffness magnitude (eigenvalue). The analysis is conducted in the six-dimensional space of symmetric second-order tensors, $\\mathrm{Sym}(3)$, which is the domain of the infinitesimal strain tensor $\\varepsilon_{kl}$.\n\nThe generalized Hooke's law, $\\sigma_{ij} = C_{ijkl}\\,\\varepsilon_{kl}$, defines a linear map from strain $\\varepsilon$ to stress $\\sigma$. To facilitate a standard matrix eigenvalue analysis, we represent the tensor $C_{ijkl}$ as a $6 \\times 6$ matrix, $\\mathbf{C}^{\\mathrm{Kelvin}}$, by projecting it onto the orthonormal Kelvin basis $\\{B_\\alpha\\}_{\\alpha=1}^6$. This basis is orthonormal with respect to the Frobenius inner product, $\\langle A, B \\rangle = A_{ij} B_{ij}$. The transformation yields a real symmetric matrix $\\mathbf{C}^{\\mathrm{Kelvin}}$, for which the spectral theorem guarantees the existence of $6$ real eigenvalues $\\lambda_a$ and a corresponding orthonormal basis of eigenvectors $\\{\\mathbf{v}^{(a)}\\}_{a=1}^6 \\subset \\mathbb{R}^6$.\n\nThe procedural steps are as follows:\n\n1.  **Construction of the Stiffness Matrix $\\mathbf{C}^{\\mathrm{Kelvin}}$**:\n    For isotropic materials, defined by Young’s modulus $E$ and Poisson’s ratio $\\nu$, the stiffness matrix is constructed from the Lamé parameters $\\lambda$ and $\\mu$. These are given by:\n    $$ \\lambda = \\frac{E \\nu}{(1+\\nu)(1-2\\nu)} \\quad \\text{and} \\quad \\mu = \\frac{E}{2(1+\\nu)} $$\n    The resulting matrix $\\mathbf{C}^{\\mathrm{Kelvin}}$ is assembled according to the specified structure, where its components are functions of $\\lambda$ and $\\mu$. For the anisotropic cases, the matrix $\\mathbf{C}^{\\mathrm{Kelvin}}$ is provided directly. All stiffness values are in units of gigapascals ($\\mathrm{GPa}$).\n\n2.  **Spectral Decomposition**:\n    We solve the eigenvalue problem for the symmetric matrix $\\mathbf{C}^{\\mathrm{Kelvin}}$:\n    $$ \\mathbf{C}^{\\mathrm{Kelvin}} \\mathbf{v}^{(a)} = \\lambda_a \\mathbf{v}^{(a)} $$\n    This is accomplished using established numerical linear algebra algorithms, which yield the eigenvalues $\\lambda_a$ and the corresponding orthonormal eigenvectors $\\mathbf{v}^{(a)}$. Per the problem requirement, the resulting eigenvalue-eigenvector pairs $(\\lambda_a, \\mathbf{v}^{(a)})$ are sorted in ascending order of the eigenvalues $\\lambda_a$.\n\n3.  **Physical Interpretation of Eigenmodes**:\n    Each eigenvector $\\mathbf{v}^{(a)} = (v_1, v_2, v_3, v_4, v_5, v_6)^T$ corresponds to a characteristic strain mode, represented by a symmetric second-order tensor $N^{(a)} \\in \\mathrm{Sym}(3)$. The mapping from the vector $\\mathbf{v}^{(a)}$ to the tensor $N^{(a)}$ is defined by the inverse Kelvin map:\n    $$ N^{(a)} = \\sum_{\\alpha=1}^6 v_\\alpha^{(a)} B_\\alpha = \\begin{bmatrix} v_1^{(a)} & v_6^{(a)}/\\sqrt{2} & v_5^{(a)}/\\sqrt{2} \\\\ v_6^{(a)}/\\sqrt{2} & v_2^{(a)} & v_4^{(a)}/\\sqrt{2} \\\\ v_5^{(a)}/\\sqrt{2} & v_4^{(a)}/\\sqrt{2} & v_3^{(a)} \\end{bmatrix} $$\n    Since the eigenvectors $\\{\\mathbf{v}^{(a)}\\}$ form an orthonormal basis in $\\mathbb{R}^6$, and the Kelvin basis $\\{B_\\alpha\\}$ is orthonormal with respect to the Frobenius inner product, the resulting mode tensors $\\{N^{(a)}\\}$ are also orthonormal, i.e., $\\|N^{(a)}\\|_F = \\sqrt{\\langle N^{(a)}, N^{(a)} \\rangle} = \\|\\mathbf{v}^{(a)}\\|_2 = 1$.\n\n    The physical character of each mode is quantified by its volumetric content, $f^{(a)}$, which measures the degree to which a mode represents a change in volume versus a change in shape (shear). It is defined as:\n    $$ f^{(a)} = \\frac{|\\operatorname{tr}(N^{(a)})|}{\\sqrt{3}\\,\\|N^{(a)}\\|_F} $$\n    Given that $\\|N^{(a)}\\|_F = 1$, and $\\operatorname{tr}(N^{(a)}) = v_1^{(a)} + v_2^{(a)} + v_3^{(a)}$, the formula simplifies to:\n    $$ f^{(a)} = \\frac{|v_1^{(a)} + v_2^{(a)} + v_3^{(a)}|}{\\sqrt{3}} $$\n    A value of $f^{(a)} = 1$ indicates a purely volumetric mode (hydrostatic strain), while $f^{(a)} = 0$ indicates a purely deviatoric mode (shear strain).\n\n4.  **Numerical Verification**:\n    The accuracy of the numerical decomposition is verified by reconstructing the stiffness matrix from its spectral components:\n    $$ \\widehat{\\mathbf{C}}^{\\mathrm{Kelvin}} = \\sum_{a=1}^6 \\lambda_a \\mathbf{v}^{(a)} (\\mathbf{v}^{(a)})^T $$\n    The relative Frobenius error, $\\varepsilon_{\\mathrm{rel}}$, is then computed to quantify the deviation of the reconstructed matrix from the original:\n    $$ \\varepsilon_{\\mathrm{rel}} = \\frac{\\|\\mathbf{C}^{\\mathrm{Kelvin}} - \\widehat{\\mathbf{C}}^{\\mathrm{Kelvin}}\\|_F}{\\|\\mathbf{C}^{\\mathrm{Kelvin}}\\|_F} $$\n    This error is expected to be on the order of machine precision, confirming the correctness of the eigenvalue decomposition.\n\nThe implementation computes these quantities for each of the four specified test cases. The results—eigenvalues, volumetric fractions, and reconstruction error—are then formatted and presented according to the strict output requirements.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Performs spectral decomposition of the elastic stiffness tensor for given material test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        ('A', {'type': 'iso', 'E': 210.0, 'nu': 0.3}),\n        ('B', {'type': 'aniso', 'C': np.array([\n            [260, 160, 160, 0, 0, 0],\n            [160, 260, 160, 0, 0, 0],\n            [160, 160, 260, 0, 0, 0],\n            [0, 0, 0, 160, 0, 0],\n            [0, 0, 0, 0, 160, 0],\n            [0, 0, 0, 0, 0, 160]\n        ], dtype=float)}),\n        ('C', {'type': 'aniso', 'C': np.array([\n            [150, 70, 65, 0, 0, 0],\n            [70, 150, 65, 0, 0, 0],\n            [65, 65, 200, 0, 0, 0],\n            [0, 0, 0, 80, 0, 0],\n            [0, 0, 0, 0, 80, 0],\n            [0, 0, 0, 0, 0, 80]\n        ], dtype=float)}),\n        ('D', {'type': 'iso', 'E': 1.0, 'nu': 0.499}),\n    ]\n\n    final_results = []\n    for _, case_data in test_cases:\n        # Main logic to calculate the result for one case goes here.\n\n        # Step 1: Construct the Kelvin representation C_kelvin\n        if case_data['type'] == 'iso':\n            E = case_data['E']\n            nu = case_data['nu']\n            # Calculate Lamé parameters\n            lmbda = (E * nu) / ((1.0 + nu) * (1.0 - 2.0 * nu))\n            mu = E / (2.0 * (1.0 + nu))\n            \n            # Assemble the isotropic C_kelvin matrix\n            C_kelvin = np.zeros((6, 6), dtype=float)\n            C_kelvin[0, 0] = C_kelvin[1, 1] = C_kelvin[2, 2] = lmbda + 2.0 * mu\n            C_kelvin[0, 1] = C_kelvin[1, 0] = C_kelvin[0, 2] = C_kelvin[2, 0] = lmbda\n            C_kelvin[1, 2] = C_kelvin[2, 1] = lmbda\n            C_kelvin[3, 3] = C_kelvin[4, 4] = C_kelvin[5, 5] = 2.0 * mu\n        else:  # 'aniso'\n            C_kelvin = case_data['C']\n\n        # Step 2: Compute eigenvalues and eigenvectors\n        # np.linalg.eigh is for symmetric matrices and returns eigenvalues in ascending order\n        eigenvalues, eigenvectors = np.linalg.eigh(C_kelvin)\n\n        # Step 3: For each mode, compute the volumetric fraction f^(a)\n        volumetric_fractions = []\n        for i in range(6):\n            v = eigenvectors[:, i]\n            # tr(N) = v_1 + v_2 + v_3\n            trace_N = v[0] + v[1] + v[2]\n            # Since eigenvectors are normalized, the Frobenius norm of the mode tensor ||N||_F is 1.\n            # f = |tr(N)| / (sqrt(3) * ||N||_F)\n            f = np.abs(trace_N) / np.sqrt(3.0)\n            volumetric_fractions.append(f)\n            \n        # Additionally, verify the spectral reconstruction\n        C_reconstructed = eigenvectors @ np.diag(eigenvalues) @ eigenvectors.T\n        \n        # Compute the relative Frobenius error\n        norm_C = np.linalg.norm(C_kelvin, 'fro')\n        norm_diff = np.linalg.norm(C_kelvin - C_reconstructed, 'fro')\n        \n        # Avoid division by zero, although norm_C should be non-zero for these cases\n        relative_error = norm_diff / norm_C if norm_C > 0 else 0.0\n\n        # Format results for the current test case\n        eig_str = \"[\" + \",\".join([f\"{val:.6f}\" for val in eigenvalues]) + \"]\"\n        frac_str = \"[\" + \",\".join([f\"{val:.6f}\" for val in volumetric_fractions]) + \"]\"\n        err_str = f\"{relative_error:.12f}\"\n        \n        case_str = f\"[{eig_str},{frac_str},{err_str}]\"\n        final_results.append(case_str)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(final_results)}]\")\n\nsolve()\n```", "id": "2898295"}]}