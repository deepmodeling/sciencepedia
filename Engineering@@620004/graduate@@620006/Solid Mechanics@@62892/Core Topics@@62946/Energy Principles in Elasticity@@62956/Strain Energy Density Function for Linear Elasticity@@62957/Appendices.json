{"hands_on_practices": [{"introduction": "This first exercise grounds the theory in a practical calculation. You will begin from first principles—the linear isotropic stress-strain law and work conjugacy—to derive the classic form of the strain energy density function, $\\psi$. This problem [@problem_id:2687942] then provides a direct opportunity to apply this formula to a specified strain tensor and compute the stored energy, a foundational skill in solid mechanics.", "problem": "An isotropic, homogeneous, hyperelastic solid is subjected to small deformations. Let the small-strain tensor be the symmetric second-order tensor $\\varepsilon$ with Cartesian components $\\varepsilon_{ij}$, and let the Cauchy stress tensor be $\\sigma$. Assume the following fundamental bases:\n- Small-strain kinematics: $\\varepsilon$ is the symmetric part of the displacement gradient and is thus the work-conjugate strain measure to the Cauchy stress tensor.\n- Work-conjugacy and hyperelasticity: the incremental internal work per unit volume is $\\delta w = \\sigma : \\delta \\varepsilon$, and there exists a strain energy density $\\psi(\\varepsilon)$ such that $d\\psi = \\sigma : d\\varepsilon$ for all admissible increments $d\\varepsilon$.\n- Linear, isotropic, small-strain elasticity: the stress-strain relation is linear, isotropic, and frame indifferent, characterized by Lamé parameters $\\lambda$ and $\\mu$.\n\nStarting only from these bases, derive the form of the strain energy density $\\psi(\\varepsilon)$ up to an additive constant and fix the constant by requiring $\\psi(\\varepsilon=\\mathbf{0})=0$. Then evaluate $\\psi$ for the following data:\n- Lamé parameters: $\\lambda = 60$ GPa and $\\mu = 30$ GPa.\n- Strain tensor (in Cartesian components):\n$$\n\\varepsilon = \n\\begin{pmatrix}\n1.2\\times 10^{-3} & -0.8\\times 10^{-3} & 0.5\\times 10^{-3}\\\\\n-0.8\\times 10^{-3} & -0.4\\times 10^{-3} & 0.9\\times 10^{-3}\\\\\n0.5\\times 10^{-3} & 0.9\\times 10^{-3} & 0.2\\times 10^{-3}\n\\end{pmatrix}.\n$$\nExpress the final energy density in kJ/m$^{3}$ and round your answer to four significant figures.", "solution": "The problem as stated is scientifically sound, self-contained, and well-posed. It presents a standard task in the theory of linear elasticity, for which we shall now provide a rigorous derivation and solution.\n\nThe objective is to derive the strain energy density function $\\psi$ for a linear, isotropic, hyperelastic material under small strains and then evaluate it for a given strain state.\n\nWe begin with the fundamental constitutive relation for a linear isotropic elastic material, which connects the Cauchy stress tensor $\\sigma$ to the small-strain tensor $\\varepsilon$:\n$$\n\\sigma_{ij} = \\lambda \\varepsilon_{kk} \\delta_{ij} + 2\\mu \\varepsilon_{ij}\n$$\nHere, $\\sigma_{ij}$ and $\\varepsilon_{ij}$ are the Cartesian components of the stress and strain tensors, respectively. The parameters $\\lambda$ and $\\mu$ are the Lamé constants of the material. The term $\\varepsilon_{kk}$ represents the trace of the strain tensor, $\\text{tr}(\\varepsilon)$, and $\\delta_{ij}$ is the Kronecker delta. The Einstein summation convention over repeated indices is implied. This relation is the most general linear and isotropic mapping from a symmetric second-order tensor to another.\n\nThe material is stipulated to be hyperelastic, which implies the existence of a scalar potential function, the strain energy density $\\psi(\\varepsilon)$, such that the stress tensor is derivable from it. The incremental internal work per unit volume, $d\\psi$, is given by the contraction of the stress tensor with the increment of the strain tensor:\n$$\nd\\psi = \\sigma : d\\varepsilon = \\sigma_{ij} d\\varepsilon_{ij}\n$$\nSubstituting the constitutive relation for $\\sigma_{ij}$ into this expression for $d\\psi$ yields:\n$$\nd\\psi = (\\lambda \\varepsilon_{kk} \\delta_{ij} + 2\\mu \\varepsilon_{ij}) d\\varepsilon_{ij}\n$$\nWe distribute the terms:\n$$\nd\\psi = \\lambda \\varepsilon_{kk} (\\delta_{ij} d\\varepsilon_{ij}) + 2\\mu \\varepsilon_{ij} d\\varepsilon_{ij}\n$$\nThe first term simplifies, as $\\delta_{ij} d\\varepsilon_{ij} = d\\varepsilon_{ii} = d(\\text{tr}(\\varepsilon))$. Let the first invariant of strain be $I_1 = \\text{tr}(\\varepsilon) = \\varepsilon_{kk}$. The expression becomes:\n$$\nd\\psi = \\lambda I_1 dI_1 + 2\\mu \\varepsilon_{ij} d\\varepsilon_{ij}\n$$\nThis expression is an exact differential. We can integrate it to find $\\psi(\\varepsilon)$. For a hyperelastic material, the stored energy is independent of the strain path. We integrate from a state of zero strain, $\\varepsilon = \\mathbf{0}$, to a final state $\\varepsilon$:\n$$\n\\psi(\\varepsilon) - \\psi(\\mathbf{0}) = \\int_{\\mathbf{0}}^{\\varepsilon} d\\psi = \\int_{0}^{I_1} \\lambda I'_1 dI'_1 + \\int_{\\mathbf{0}}^{\\varepsilon} 2\\mu \\varepsilon'_{ij} d\\varepsilon'_{ij}\n$$\nThe integrals are straightforward:\n$$\n\\int_{0}^{I_1} \\lambda I'_1 dI'_1 = \\frac{1}{2} \\lambda I_1^2 = \\frac{1}{2} \\lambda (\\text{tr}(\\varepsilon))^2\n$$\n$$\n\\int_{\\mathbf{0}}^{\\varepsilon} 2\\mu \\varepsilon'_{ij} d\\varepsilon'_{ij} = \\mu \\varepsilon_{ij} \\varepsilon_{ij} = \\mu (\\varepsilon : \\varepsilon)\n$$\nThus, the strain energy density is:\n$$\n\\psi(\\varepsilon) = \\frac{1}{2} \\lambda (\\text{tr}(\\varepsilon))^2 + \\mu (\\varepsilon : \\varepsilon) + C\n$$\nwhere $C = \\psi(\\mathbf{0})$ is the strain energy density at the reference configuration. The problem specifies the condition $\\psi(\\varepsilon=\\mathbf{0})=0$, which sets the integration constant $C$ to zero. The final form for the strain energy density function is therefore:\n$$\n\\psi(\\varepsilon) = \\frac{1}{2} \\lambda (\\text{tr}(\\varepsilon))^2 + \\mu (\\varepsilon : \\varepsilon)\n$$\n\nWe now proceed to evaluate this function using the provided data:\n- Lamé parameters: $\\lambda = 60$ GPa, $\\mu = 30$ GPa.\n- Strain tensor:\n$$\n\\varepsilon = \n\\begin{pmatrix}\n1.2\\times 10^{-3} & -0.8\\times 10^{-3} & 0.5\\times 10^{-3}\\\\\n-0.8\\times 10^{-3} & -0.4\\times 10^{-3} & 0.9\\times 10^{-3}\\\\\n0.5\\times 10^{-3} & 0.9\\times 10^{-3} & 0.2\\times 10^{-3}\n\\end{pmatrix}\n$$\nFirst, we compute the trace of the strain tensor, $I_1 = \\text{tr}(\\varepsilon)$:\n$$\n\\text{tr}(\\varepsilon) = \\varepsilon_{11} + \\varepsilon_{22} + \\varepsilon_{33} = (1.2 - 0.4 + 0.2) \\times 10^{-3} = 1.0 \\times 10^{-3}\n$$\nThe square of the trace is then $(\\text{tr}(\\varepsilon))^2 = (1.0 \\times 10^{-3})^2 = 1.0 \\times 10^{-6}$.\n\nNext, we calculate the double-dot product, $\\varepsilon : \\varepsilon = \\varepsilon_{ij} \\varepsilon_{ij} = \\sum_{i,j=1}^{3} \\varepsilon_{ij}^2$. Due to the symmetry of the strain tensor ($\\varepsilon_{ij} = \\varepsilon_{ji}$), this sum is:\n$$\n\\varepsilon : \\varepsilon = \\varepsilon_{11}^2 + \\varepsilon_{22}^2 + \\varepsilon_{33}^2 + 2(\\varepsilon_{12}^2 + \\varepsilon_{13}^2 + \\varepsilon_{23}^2)\n$$\nSubstituting the component values:\n$$\n\\varepsilon : \\varepsilon = \\left[ (1.2)^2 + (-0.4)^2 + (0.2)^2 + 2 \\left( (-0.8)^2 + (0.5)^2 + (0.9)^2 \\right) \\right] \\times (10^{-3})^2\n$$\n$$\n\\varepsilon : \\varepsilon = \\left[ (1.44 + 0.16 + 0.04) + 2 \\left( 0.64 + 0.25 + 0.81 \\right) \\right] \\times 10^{-6}\n$$\n$$\n\\varepsilon : \\varepsilon = \\left[ 1.64 + 2(1.70) \\right] \\times 10^{-6} = (1.64 + 3.40) \\times 10^{-6} = 5.04 \\times 10^{-6}\n$$\nWe now substitute these quantities into the expression for $\\psi$. It is critical to maintain consistent units. The Lamé parameters are in GPa ($10^9$ Pa), and strain is dimensionless. The resulting unit for $\\psi$ will be GPa, which is equivalent to $10^9$ J/m$^3$.\n$$\n\\psi = \\frac{1}{2} (60 \\text{ GPa}) (1.0 \\times 10^{-6}) + (30 \\text{ GPa}) (5.04 \\times 10^{-6})\n$$\n$$\n\\psi = (30 \\times 10^{-6} + 151.2 \\times 10^{-6}) \\text{ GPa}\n$$\n$$\n\\psi = 181.2 \\times 10^{-6} \\text{ GPa}\n$$\nThe problem requires the answer in units of kJ/m$^3$. We use the conversion $1$ GPa $= 10^9$ J/m$^3 = 10^6$ kJ/m$^3$:\n$$\n\\psi = (181.2 \\times 10^{-6}) \\times (10^6 \\text{ kJ/m}^3) = 181.2 \\text{ kJ/m}^3\n$$\nThe value $181.2$ has four significant figures, which satisfies the rounding requirement.", "answer": "$$\\boxed{181.2}$$", "id": "2687942"}, {"introduction": "Building on the previous calculation, this practice delves into the physical meaning behind the mathematical form of $\\psi$. By comparing the energy stored in two distinct, hypothetical deformation states—one of pure volume change and one of pure shape change—you will develop an intuition for how materials separately resist these modes of deformation. This exercise [@problem_id:2687943] illuminates the crucial decomposition of strain energy into its volumetric and deviatoric components.", "problem": "Consider a homogeneous, isotropic, linearly elastic solid in the infinitesimal strain regime, characterized by Lamé parameters $\\lambda$ and $\\mu$. Let the small-strain tensor be denoted by $\\varepsilon$ and the Cauchy stress tensor by $\\sigma$. The strain energy density per unit reference volume is a scalar function $\\psi(\\varepsilon)$ consistent with work conjugacy between $\\sigma$ and $\\varepsilon$.\n\nTwo strain states in three dimensions are prescribed:\n- A purely hydrostatic state $\\varepsilon^{(1)} = a\\,\\mathbf{I}$ with $a>0$, where $\\mathbf{I}$ is the second-order identity tensor.\n- A traceless deviatoric state $\\varepsilon^{(2)} = \\operatorname{diag}\\!\\big(\\sqrt{3/2}\\,a,\\,-\\sqrt{3/2}\\,a,\\,0\\big)$.\n\nTasks:\n1. Starting only from the linear isotropic constitutive relation between $\\sigma$ and $\\varepsilon$ and the energetic work-conjugacy requirement defining $\\psi$, derive an explicit expression for $\\psi(\\varepsilon)$ in terms of $\\lambda$, $\\mu$, $\\varepsilon:\\varepsilon$, and $\\operatorname{tr}\\varepsilon$.\n2. Verify that $\\varepsilon^{(1)}:\\varepsilon^{(1)}=\\varepsilon^{(2)}:\\varepsilon^{(2)}$ while $\\operatorname{tr}\\varepsilon^{(1)}\\neq \\operatorname{tr}\\varepsilon^{(2)}$.\n3. Using your result from Task $1$, compute the strain energy densities $\\psi\\big(\\varepsilon^{(1)}\\big)$ and $\\psi\\big(\\varepsilon^{(2)}\\big)$, and then compute the ratio $R=\\dfrac{\\psi\\big(\\varepsilon^{(1)}\\big)}{\\psi\\big(\\varepsilon^{(2)}\\big)}$. Express $R$ as a closed-form analytic expression in terms of $\\lambda$ and $\\mu$ only (i.e., the amplitude $a$ must cancel).\n4. Briefly explain, in terms of volumetric and deviatoric contributions to $\\psi$, why these two states have different energy densities despite having the same value of $\\varepsilon:\\varepsilon$.\n\nYour final answer must be the single expression for $R$. No numerical rounding is required, and no units are needed since $R$ is dimensionless.", "solution": "The problem as stated is scientifically grounded, self-contained, and well-posed within the established framework of continuum mechanics and linear elasticity. All provided information is consistent and sufficient for a unique solution. We shall proceed directly to the required tasks.\n\nTask $1$: Derivation of the strain energy density function $\\psi(\\varepsilon)$.\nThe strain energy density $\\psi$ is a scalar potential for the Cauchy stress tensor $\\sigma$, such that the constitutive relation is given by the work conjugacy requirement $\\sigma = \\frac{\\partial\\psi}{\\partial\\varepsilon}$. In index notation, this is $\\sigma_{ij} = \\frac{\\partial\\psi}{\\partial\\varepsilon_{ij}}$. For a homogeneous, isotropic, linearly elastic material, the constitutive relation, also known as Hooke's Law, is:\n$$\n\\sigma_{ij} = \\lambda (\\operatorname{tr}\\varepsilon) \\delta_{ij} + 2\\mu\\varepsilon_{ij}\n$$\nwhere $\\operatorname{tr}(\\varepsilon) = \\varepsilon_{kk}$ is the trace of the strain tensor $\\varepsilon$, and $\\delta_{ij}$ is the Kronecker delta.\n\nFor an isotropic material, the scalar function $\\psi$ can only be a function of the scalar invariants of its argument, the tensor $\\varepsilon$. For a quadratic potential, as is appropriate for linear elasticity, $\\psi$ can be constructed from the first and second basic invariants of $\\varepsilon$, which we choose as $(\\operatorname{tr}\\varepsilon)$ and $(\\varepsilon:\\varepsilon) = \\varepsilon_{ij}\\varepsilon_{ij}$. The most general quadratic form for $\\psi$ is therefore:\n$$\n\\psi(\\varepsilon) = A (\\operatorname{tr}\\varepsilon)^2 + B (\\varepsilon:\\varepsilon)\n$$\nwhere $A$ and $B$ are material constants to be determined. We compute the derivative of this expression with respect to the components of the strain tensor, $\\varepsilon_{ij}$:\n$$\n\\frac{\\partial\\psi}{\\partial\\varepsilon_{ij}} = \\frac{\\partial}{\\partial\\varepsilon_{ij}} \\left( A (\\varepsilon_{kk})^2 + B (\\varepsilon_{kl}\\varepsilon_{kl}) \\right)\n$$\nUsing the identities for the derivatives of the invariants, $\\frac{\\partial\\varepsilon_{kk}}{\\partial\\varepsilon_{ij}} = \\delta_{ij}$ and $\\frac{\\partial(\\varepsilon_{kl}\\varepsilon_{kl})}{\\partial\\varepsilon_{ij}} = 2\\varepsilon_{ij}$, we obtain:\n$$\n\\frac{\\partial\\psi}{\\partial\\varepsilon_{ij}} = A \\cdot 2(\\varepsilon_{kk}) \\frac{\\partial\\varepsilon_{kk}}{\\partial\\varepsilon_{ij}} + B \\frac{\\partial(\\varepsilon_{kl}\\varepsilon_{kl})}{\\partial\\varepsilon_{ij}} = 2A (\\operatorname{tr}\\varepsilon) \\delta_{ij} + 2B \\varepsilon_{ij}\n$$\nBy equating this result with the known constitutive relation for $\\sigma_{ij}$, we have:\n$$\n2A (\\operatorname{tr}\\varepsilon) \\delta_{ij} + 2B \\varepsilon_{ij} = \\lambda (\\operatorname{tr}\\varepsilon) \\delta_{ij} + 2\\mu\\varepsilon_{ij}\n$$\nMatching the coefficients of the independent tensorial terms $(\\operatorname{tr}\\varepsilon)\\delta_{ij}$ and $\\varepsilon_{ij}$ yields the values of the constants $A$ and $B$:\n$$\n2A = \\lambda \\implies A = \\frac{\\lambda}{2}\n$$\n$$\n2B = 2\\mu \\implies B = \\mu\n$$\nSubstituting these constants into our expression for $\\psi$ provides the explicit form of the strain energy density function:\n$$\n\\psi(\\varepsilon) = \\frac{\\lambda}{2}(\\operatorname{tr}\\varepsilon)^2 + \\mu(\\varepsilon:\\varepsilon)\n$$\n\nTask $2$: Verification of properties for $\\varepsilon^{(1)}$ and $\\varepsilon^{(2)}$.\nFirst, consider the purely hydrostatic state $\\varepsilon^{(1)} = a\\,\\mathbf{I}$. In component form, this is $\\varepsilon^{(1)}_{ij} = a\\delta_{ij}$.\nThe trace of this tensor is:\n$$\n\\operatorname{tr}\\varepsilon^{(1)} = \\varepsilon^{(1)}_{kk} = a\\delta_{kk} = a(1+1+1) = 3a\n$$\nThe inner product of the tensor with itself is:\n$$\n\\varepsilon^{(1)}:\\varepsilon^{(1)} = \\varepsilon^{(1)}_{ij}\\varepsilon^{(1)}_{ij} = (a\\delta_{ij})(a\\delta_{ij}) = a^2\\delta_{ij}\\delta_{ij} = a^2\\delta_{ii} = a^2(1+1+1) = 3a^2\n$$\nSecond, consider the traceless deviatoric state $\\varepsilon^{(2)} = \\operatorname{diag}\\!\\big(\\sqrt{3/2}\\,a,\\,-\\sqrt{3/2}\\,a,\\,0\\big)$.\nThe trace of this tensor is:\n$$\n\\operatorname{tr}\\varepsilon^{(2)} = \\sqrt{\\frac{3}{2}}\\,a - \\sqrt{\\frac{3}{2}}\\,a + 0 = 0\n$$\nThe inner product of the tensor with itself is the sum of the squares of its components:\n$$\n\\varepsilon^{(2)}:\\varepsilon^{(2)} = \\sum_{i,j=1}^3 (\\varepsilon^{(2)}_{ij})^2 = \\left(\\sqrt{\\frac{3}{2}}\\,a\\right)^2 + \\left(-\\sqrt{\\frac{3}{2}}\\,a\\right)^2 + 0^2 = \\frac{3}{2}a^2 + \\frac{3}{2}a^2 = 3a^2\n$$\nBy direct comparison, we have verified that $\\varepsilon^{(1)}:\\varepsilon^{(1)} = 3a^2 = \\varepsilon^{(2)}:\\varepsilon^{(2)}$, and since $a>0$, we have also verified that $\\operatorname{tr}\\varepsilon^{(1)} = 3a \\neq 0 = \\operatorname{tr}\\varepsilon^{(2)}$.\n\nTask $3$: Computation of the energy ratio $R$.\nUsing the derived expression for $\\psi(\\varepsilon)$ from Task $1$ and the invariants computed in Task $2$, we now find the strain energy density for each state.\nFor state $\\varepsilon^{(1)}$:\n$$\n\\psi\\big(\\varepsilon^{(1)}\\big) = \\frac{\\lambda}{2}(\\operatorname{tr}\\varepsilon^{(1)})^2 + \\mu(\\varepsilon^{(1)}:\\varepsilon^{(1)}) = \\frac{\\lambda}{2}(3a)^2 + \\mu(3a^2) = \\frac{9\\lambda a^2}{2} + 3\\mu a^2 = a^2\\left(\\frac{9\\lambda}{2} + 3\\mu\\right)\n$$\nFor state $\\varepsilon^{(2)}$:\n$$\n\\psi\\big(\\varepsilon^{(2)}\\big) = \\frac{\\lambda}{2}(\\operatorname{tr}\\varepsilon^{(2)})^2 + \\mu(\\varepsilon^{(2)}:\\varepsilon^{(2)}) = \\frac{\\lambda}{2}(0)^2 + \\mu(3a^2) = 3\\mu a^2\n$$\nThe ratio $R$ is calculated as:\n$$\nR = \\frac{\\psi\\big(\\varepsilon^{(1)}\\big)}{\\psi\\big(\\varepsilon^{(2)}\\big)} = \\frac{a^2\\left(\\frac{9\\lambda}{2} + 3\\mu\\right)}{3\\mu a^2}\n$$\nThe amplitude factor $a^2$ cancels, as required, yielding a closed-form expression in terms of Lamé parameters only:\n$$\nR = \\frac{\\frac{9\\lambda}{2} + 3\\mu}{3\\mu} = \\frac{9\\lambda}{6\\mu} + \\frac{3\\mu}{3\\mu} = \\frac{3\\lambda}{2\\mu} + 1\n$$\n\nTask $4$: Physical explanation for the energy difference.\nThe strain energy density $\\psi$ can be additively decomposed into a part due to volume change (volumetric) and a part due to shape change (deviatoric or distortional). This corresponds to the decomposition of the strain tensor $\\varepsilon$ into its volumetric part $\\varepsilon_v = \\frac{1}{3}(\\operatorname{tr}\\varepsilon)\\mathbf{I}$ and its deviatoric part $\\varepsilon_d = \\varepsilon - \\varepsilon_v$. The strain energy density can then be expressed as:\n$$\n\\psi(\\varepsilon) = \\frac{1}{2}K(\\operatorname{tr}\\varepsilon)^2 + \\mu(\\varepsilon_d:\\varepsilon_d) = \\psi_v + \\psi_d\n$$\nHere, $K = \\lambda + \\frac{2}{3}\\mu$ is the bulk modulus, which quantifies resistance to volume change, and $\\mu$ is the shear modulus, which quantifies resistance to shape change.\n\nThe strain state $\\varepsilon^{(1)} = a\\,\\mathbf{I}$ is purely volumetric; its deviatoric part is zero, $\\varepsilon^{(1)}_d = a\\mathbf{I} - \\frac{1}{3}(3a)\\mathbf{I} = 0$. Consequently, its strain energy is purely volumetric: $\\psi\\big(\\varepsilon^{(1)}\\big) = \\psi_v = \\frac{1}{2}K(3a)^2$.\nConversely, the strain state $\\varepsilon^{(2)}$ is purely deviatoric; its trace is zero, which means its volumetric part is zero, $\\varepsilon^{(2)}_v=0$. Its strain energy is therefore purely deviatoric: $\\psi\\big(\\varepsilon^{(2)}\\big) = \\psi_d = \\mu(\\varepsilon^{(2)}_d:\\varepsilon^{(2)}_d) = \\mu(\\varepsilon^{(2)}:\\varepsilon^{(2)})$.\n\nAlthough both states have the same squared Frobenius norm, $\\varepsilon^{(1)}:\\varepsilon^{(1)} = \\varepsilon^{(2)}:\\varepsilon^{(2)} = 3a^2$, this quantity is partitioned differently. For $\\varepsilon^{(1)}$, the norm arises entirely from the volumetric part ($\\varepsilon^{(1)}:\\varepsilon^{(1)} = \\varepsilon^{(1)}_v:\\varepsilon^{(1)}_v$). For $\\varepsilon^{(2)}$, it arises entirely from the deviatoric part ($\\varepsilon^{(2)}:\\varepsilon^{(2)} = \\varepsilon^{(2)}_d:\\varepsilon^{(2)}_d$). The different energy densities reflect the fact that the material resists volume change and shape change with different stiffnesses, characterized by $K$ and $\\mu$, respectively. A purely volumetric deformation and a purely deviatoric deformation of the same \"magnitude\" (in the sense of the Frobenius norm) will store different amounts of energy because they engage different physical resistance mechanisms within the material, whose energetic costs are not generally equal.", "answer": "$$\n\\boxed{\\frac{3\\lambda}{2\\mu} + 1}\n$$", "id": "2687943"}, {"introduction": "This final, advanced practice bridges theory with modern computational materials science. You are tasked with acting as a virtual experimentalist to classify a material's symmetry (isotropic, transversely isotropic, or orthotropic) from a set of simulated energy measurements. This problem [@problem_id:2687993] requires translating the abstract principle of material symmetry—the invariance of $\\psi$ under certain rotations—into a concrete algorithm, demonstrating how fundamental concepts are used to interpret experimental or simulation data.", "problem": "You are given discrete measurements of the small-strain elastic strain energy density function for a linearly elastic solid. In the small-strain regime, the strain tensor is $ \\varepsilon \\in \\mathbb{R}^{3 \\times 3} $ with $ \\varepsilon = \\varepsilon^{\\mathsf{T}} $. The strain energy density function is a quadratic form $ \\psi(\\varepsilon) $ that, for a fixed material, can be written as $ \\psi(\\varepsilon) = \\tfrac{1}{2} \\, \\varepsilon : \\mathbb{C} : \\varepsilon $, where $ \\mathbb{C} $ is a fourth-order stiffness tensor with the standard minor symmetries. A material symmetry corresponds to a rotation $ \\mathbf{Q} \\in \\mathrm{SO}(3) $ under which $ \\psi(\\varepsilon) = \\psi(\\mathbf{Q} \\, \\varepsilon \\, \\mathbf{Q}^{\\mathsf{T}}) $ for all $ \\varepsilon $. Material classes and their symmetry groups are:\n- Isotropic: invariant under all $ \\mathbf{Q} \\in \\mathrm{SO}(3) $.\n- Transversely isotropic: invariant under all rotations about a single fixed axis (infinite subgroup of $ \\mathrm{SO}(3) $).\n- Orthotropic: invariant at least under rotations by angle $ \\pi $ about three mutually orthogonal axes.\n\nYour task is to implement a program that, given tabulated pairs $ \\{ (\\varepsilon^{(k)}, \\psi^{(k)}) \\}_{k=1}^N $ of strain states and corresponding measured energy densities, decides whether the material is isotropic, transversely isotropic, orthotropic, or cannot be determined from the given data. The decision must be made by directly testing the invariance property of $ \\psi $ against a finite set of diagnostic rotations and only where the rotated strain state also appears in the provided dataset. Specifically:\n- Isotropy test: require invariance under the set $ \\{ \\mathbf{R}_x(\\pi/2), \\mathbf{R}_y(\\pi/2), \\mathbf{R}_z(\\pi/2) \\} $. For each rotation $ \\mathbf{Q} $ in this set, for every $ \\varepsilon^{(k)} $ whose rotated counterpart $ \\mathbf{Q} \\, \\varepsilon^{(k)} \\, \\mathbf{Q}^{\\mathsf{T}} $ appears among the given strains and is not identical to $ \\varepsilon^{(k)} $, the corresponding measured energies must match within a prescribed tolerance. Additionally, there must be at least one such nontrivial matched pair for each of the three $ \\pi/2 $-rotations.\n- Transverse isotropy test: for each axis $ \\mathbf{e}_x, \\mathbf{e}_y, \\mathbf{e}_z $, require invariance under $ \\mathbf{R}_\\alpha(\\pi/2) $ about that axis (with $ \\alpha \\in \\{x,y,z\\} $) in the same sense as above, with at least two distinct nontrivial matched pairs for at least one axis. This test is applied only if the isotropy test fails.\n- Orthotropy test: require invariance under $ \\{ \\mathbf{R}_x(\\pi), \\mathbf{R}_y(\\pi), \\mathbf{R}_z(\\pi) \\} $ with at least one distinct nontrivial matched pair for each of the three axes. This test is applied only if both the isotropy and transverse isotropy tests fail.\n- If none of the above tests can be certified from the available data, return inconclusive.\n\nUse an absolute tolerance of $ \\delta = 10^{-9} $ for comparing the measured energies of matched pairs. A matched pair is “nontrivial” if $ \\mathbf{Q} \\, \\varepsilon^{(k)} \\, \\mathbf{Q}^{\\mathsf{T}} \\neq \\varepsilon^{(k)} $.\n\nThe program must implement these tests for the following four datasets. In each dataset, the strains are given explicitly as $ 3 \\times 3 $ symmetric matrices (with zeros omitted for brevity where clear) and the measured energy densities $ \\psi $ are given as real numbers. The datasets are constructed to be physically plausible for linear elasticity and to exercise the classification logic.\n\nDataset $ A $ (intended isotropic; Lamé parameters $ \\lambda = 2 $, $ \\mu = 3 $; energy $ \\psi(\\varepsilon) = \\tfrac{1}{2} \\lambda (\\mathrm{tr}\\,\\varepsilon)^2 + \\mu \\, \\varepsilon : \\varepsilon $):\n- $ \\varepsilon^{(1)} = \\mathrm{diag}(1,0,0) $, $ \\psi^{(1)} = 4 $.\n- $ \\varepsilon^{(2)} = \\mathrm{diag}(0,1,0) $, $ \\psi^{(2)} = 4 $.\n- $ \\varepsilon^{(3)} = \\mathrm{diag}(0,0,1) $, $ \\psi^{(3)} = 4 $.\n- $ \\varepsilon^{(4)} $ with $ \\varepsilon_{12} = \\varepsilon_{21} = 0.5 $, $ \\psi^{(4)} = 1.5 $.\n- $ \\varepsilon^{(5)} $ with $ \\varepsilon_{12} = \\varepsilon_{21} = -0.5 $, $ \\psi^{(5)} = 1.5 $.\n- $ \\varepsilon^{(6)} $ with $ \\varepsilon_{23} = \\varepsilon_{32} = 0.5 $, $ \\psi^{(6)} = 1.5 $.\n- $ \\varepsilon^{(7)} $ with $ \\varepsilon_{13} = \\varepsilon_{31} = 0.5 $, $ \\psi^{(7)} = 1.5 $.\n\nDataset $ B $ (intended transversely isotropic about the $ z $-axis; energy $ \\psi(\\varepsilon) = B (\\varepsilon_{11}^2 + \\varepsilon_{22}^2 + 2 \\varepsilon_{12}^2) + C \\varepsilon_{33}^2 + D (\\varepsilon_{13}^2 + \\varepsilon_{23}^2) + E (\\varepsilon_{11} + \\varepsilon_{22}) \\varepsilon_{33} $ with $ B = 3 $, $ C = 5 $, $ D = 2 $, $ E = 1 $):\n- $ \\varepsilon^{(1)} = \\mathrm{diag}(1,0,0) $, $ \\psi^{(1)} = 3 $.\n- $ \\varepsilon^{(2)} = \\mathrm{diag}(0,1,0) $, $ \\psi^{(2)} = 3 $.\n- $ \\varepsilon^{(3)} = \\mathrm{diag}(0,0,1) $, $ \\psi^{(3)} = 5 $.\n- $ \\varepsilon^{(4)} $ with $ \\varepsilon_{12} = \\varepsilon_{21} = 0.5 $, $ \\psi^{(4)} = 1.5 $.\n- $ \\varepsilon^{(5)} $ with $ \\varepsilon_{12} = \\varepsilon_{21} = -0.5 $, $ \\psi^{(5)} = 1.5 $.\n- $ \\varepsilon^{(6)} $ with $ \\varepsilon_{13} = \\varepsilon_{31} = 0.5 $, $ \\psi^{(6)} = 0.5 $.\n- $ \\varepsilon^{(7)} $ with $ \\varepsilon_{23} = \\varepsilon_{32} = 0.5 $, $ \\psi^{(7)} = 0.5 $.\n- $ \\varepsilon^{(8)} = \\mathrm{diag}(1,1,0) $, $ \\psi^{(8)} = 6 $.\n- $ \\varepsilon^{(9)} = \\mathrm{diag}(1,0,1) $, $ \\psi^{(9)} = 9 $.\n- $ \\varepsilon^{(10)} = \\mathrm{diag}(0,1,1) $, $ \\psi^{(10)} = 9 $.\n\nDataset $ C $ (intended orthotropic with principal axes aligned with $ x,y,z $; energy $ \\psi(\\varepsilon) = a \\varepsilon_{11}^2 + b \\varepsilon_{22}^2 + c \\varepsilon_{33}^2 + d \\varepsilon_{12}^2 + e \\varepsilon_{13}^2 + f \\varepsilon_{23}^2 + g \\varepsilon_{11} \\varepsilon_{22} + h \\varepsilon_{11} \\varepsilon_{33} + k \\varepsilon_{22} \\varepsilon_{33} $ with $ a = 2 $, $ b = 3 $, $ c = 4 $, $ d = 5 $, $ e = 6 $, $ f = 7 $, $ g = 1 $, $ h = 0.5 $, $ k = 0.25 $):\n- $ \\varepsilon^{(1)} = \\mathrm{diag}(1,0,0) $, $ \\psi^{(1)} = 2 $.\n- $ \\varepsilon^{(2)} = \\mathrm{diag}(0,1,0) $, $ \\psi^{(2)} = 3 $.\n- $ \\varepsilon^{(3)} = \\mathrm{diag}(0,0,1) $, $ \\psi^{(3)} = 4 $.\n- $ \\varepsilon^{(4)} $ with $ \\varepsilon_{12} = \\varepsilon_{21} = 0.5 $, $ \\psi^{(4)} = 1.25 $.\n- $ \\varepsilon^{(5)} $ with $ \\varepsilon_{12} = \\varepsilon_{21} = -0.5 $, $ \\psi^{(5)} = 1.25 $.\n- $ \\varepsilon^{(6)} $ with $ \\varepsilon_{13} = \\varepsilon_{31} = 0.5 $, $ \\psi^{(6)} = 1.5 $.\n- $ \\varepsilon^{(7)} $ with $ \\varepsilon_{13} = \\varepsilon_{31} = -0.5 $, $ \\psi^{(7)} = 1.5 $.\n- $ \\varepsilon^{(8)} $ with $ \\varepsilon_{23} = \\varepsilon_{32} = 0.5 $, $ \\psi^{(8)} = 1.75 $.\n- $ \\varepsilon^{(9)} $ with $ \\varepsilon_{23} = \\varepsilon_{32} = -0.5 $, $ \\psi^{(9)} = 1.75 $.\n- $ \\varepsilon^{(10)} = \\mathrm{diag}(1,1,0) $, $ \\psi^{(10)} = 6 $.\n- $ \\varepsilon^{(11)} = \\mathrm{diag}(1,0,1) $, $ \\psi^{(11)} = 6.5 $.\n- $ \\varepsilon^{(12)} = \\mathrm{diag}(0,1,1) $, $ \\psi^{(12)} = 7.25 $.\n\nDataset $ D $ (insufficient to classify):\n- $ \\varepsilon^{(1)} = \\mathrm{diag}(1,0,0) $, $ \\psi^{(1)} = 0.7 $.\n\nClassification codes:\n- Output $ 0 $ if isotropic.\n- Output $ 1 $ if transversely isotropic (but not isotropic).\n- Output $ 2 $ if orthotropic (but neither isotropic nor transversely isotropic).\n- Output $ 3 $ if inconclusive from the provided data.\n\nFinal output format: Your program should produce a single line of output containing the results for the four datasets as a comma-separated list of integers enclosed in square brackets (e.g., $ [r_1,r_2,r_3,r_4] $).\n\nAngle units are in radians. No physical units are required for the output since it is a dimensionless classification code. Use the absolute tolerance $ \\delta = 10^{-9} $ for comparing energies of matched pairs.", "solution": "The problem requires the classification of a linearly elastic material into one of four categories—isotropic, transversely isotropic, orthotropic, or inconclusive—based on a discrete set of measured strain energy densities. The classification is to be performed by testing the invariance of the strain energy density function, $ \\psi(\\varepsilon) $, under specific rotations, using only the provided data points.\n\nThe fundamental principle is that of material symmetry. A material possesses a symmetry described by a rotation $ \\mathbf{Q} \\in \\mathrm{SO}(3) $ if the strain energy density remains unchanged when the material is subjected to this rotation. For a strain tensor $ \\varepsilon $, the rotated strain tensor is given by $ \\varepsilon' = \\mathbf{Q} \\, \\varepsilon \\, \\mathbf{Q}^{\\mathsf{T}} $. The invariance condition is thus $ \\psi(\\varepsilon) = \\psi(\\varepsilon') $. The problem provides a discrete set of measurements $ \\{ (\\varepsilon^{(k)}, \\psi^{(k)}) \\}_{k=1}^N $ and asks to verify this invariance property for a finite set of diagnostic rotations.\n\nThe overall approach is to implement a hierarchical classification algorithm that sequentially tests for isotropy, then transverse isotropy, and finally orthotropy. If a test is passed, the corresponding classification is assigned. If all tests fail, the result is inconclusive.\n\nFirst, we define the necessary rotation matrices for the tests. The rotations are about the Cartesian axes $ \\mathbf{e}_x, \\mathbf{e}_y, \\mathbf{e}_z $.\nA rotation by an angle $ \\theta $ about the x-axis is $ \\mathbf{R}_x(\\theta) = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & \\cos\\theta & -\\sin\\theta \\\\ 0 & \\sin\\theta & \\cos\\theta \\end{pmatrix} $.\nSimilarly, for the y-axis, $ \\mathbf{R}_y(\\theta) = \\begin{pmatrix} \\cos\\theta & 0 & \\sin\\theta \\\\ 0 & 1 & 0 \\\\ -\\sin\\theta & 0 & \\cos\\theta \\end{pmatrix} $, and for the z-axis, $ \\mathbf{R}_z(\\theta) = \\begin{pmatrix} \\cos\\theta & -\\sin\\theta & 0 \\\\ \\sin\\theta & \\cos\\theta & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} $.\n\nFor the isotropy and transverse isotropy tests, we need rotations by $ \\theta = \\pi/2 $:\n$ \\mathbf{R}_x(\\pi/2) = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & -1 \\\\ 0 & 1 & 0 \\end{pmatrix} $, $ \\mathbf{R}_y(\\pi/2) = \\begin{pmatrix} 0 & 0 & 1 \\\\ 0 & 1 & 0 \\\\ -1 & 0 & 0 \\end{pmatrix} $, $ \\mathbf{R}_z(\\pi/2) = \\begin{pmatrix} 0 & -1 & 0 \\\\ 1 & 0 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} $.\n\nFor the orthotropy test, we need rotations by $ \\theta = \\pi $:\n$ \\mathbf{R}_x(\\pi) = \\mathrm{diag}(1, -1, -1) $, $ \\mathbf{R}_y(\\pi) = \\mathrm{diag}(-1, 1, -1) $, $ \\mathbf{R}_z(\\pi) = \\mathrm{diag}(-1, -1, 1) $.\n\nThe core of the algorithm is a function that, for a given rotation $ \\mathbf{Q} $, iterates through all available strain tensors $ \\varepsilon^{(k)} $ in the dataset. For each $ \\varepsilon^{(k)} $, it computes the rotated strain $ \\varepsilon' = \\mathbf{Q} \\, \\varepsilon^{(k)} \\, \\mathbf{Q}^{\\mathsf{T}} $. It then searches for $ \\varepsilon' $ within the dataset's list of strains. If $ \\varepsilon' $ is found at some index $ l $, a check is performed.\n1.  **Violation Check**: If $ \\varepsilon^{(l)} $ is found, the energies must match. A violation of symmetry occurs if $ |\\psi^{(l)} - \\psi^{(k)}| > \\delta $, where $ \\delta = 10^{-9} $ is the prescribed tolerance. The presence of even one such violation for a given symmetry group test means the material does not belong to that symmetry class.\n2.  **Nontrivial Pair Counting**: If the energies match and the rotated strain is not identical to the original ($ \\varepsilon' \\neq \\varepsilon^{(k)} $, or more precisely, $ l \\neq k $), this constitutes a \"nontrivial matched pair\". We count the number of such distinct pairs, represented by the set of indices $ \\{k, l\\} $, to avoid double-counting.\n\nThe classification logic proceeds as follows:\n\n**1. Isotropy Test (Code $0$):**\n-   Test rotations: $ \\{ \\mathbf{R}_x(\\pi/2), \\mathbf{R}_y(\\pi/2), \\mathbf{R}_z(\\pi/2) \\} $.\n-   Condition: The material is classified as isotropic if, for this set of rotations, there are no violations, and there is at least $1$ distinct nontrivial matched pair for **each** of the $3$ rotations.\n-   If these conditions are met, the classification is isotropic (code $0$) and the process terminates for this dataset.\n\n**2. Transverse Isotropy Test (Code $1$):**\n-   This test is performed only if the isotropy test fails.\n-   It checks for symmetry about each of the three axes $ \\mathbf{e}_x, \\mathbf{e}_y, \\mathbf{e}_z $ individually.\n-   For each axis, the test rotation is the corresponding rotation by $ \\pi/2 $. For example, for axis $ \\mathbf{e}_z $, the test rotation is $ \\mathbf{R}_z(\\pi/2) $.\n-   Condition: The material is classified as transversely isotropic if, for **at least one** of the three axes, there are no violations under the corresponding $ \\pi/2 $ rotation, and there are at least $2$ distinct nontrivial matched pairs.\n-   If this condition is met for any axis, the classification is transversely isotropic (code $1$) and the process terminates.\n\n**3. Orthotropy Test (Code $2$):**\n-   This test is performed only if both the isotropy and transverse isotropy tests fail.\n-   Test rotations: $ \\{ \\mathbf{R}_x(\\pi), \\mathbf{R}_y(\\pi), \\mathbf{R}_z(\\pi) \\} $.\n-   Condition: The material is classified as orthotropic if, for this set of rotations, there are no violations, and there is at least $1$ distinct nontrivial matched pair for **each** of the $3$ rotations.\n-   If these conditions are met, the classification is orthotropic (code $2$).\n\n**4. Inconclusive (Code $3$):**\n-   If none of the above tests pass, the given data is insufficient to make a classification according to the specified rules. The result is inconclusive (code $3$).\n\nThis sequential and hierarchical testing procedure is implemented for each of the four datasets provided. For data management, the strain tensors $ \\varepsilon^{(k)} $ are stored as NumPy arrays. Searching for a rotated strain in the list of existing strains is done by iterating through the list and using `numpy.allclose` for robust floating-point matrix comparison.\nThe expected results for the datasets are:\n-   **Dataset A**: Passes the isotropy test. Classification: $0$.\n-   **Dataset B**: Fails the isotropy test due to an energy mismatch but passes the transverse isotropy test for the $z$-axis. Classification: $1$.\n-   **Dataset C**: Fails both isotropy and transverse isotropy tests due to energy mismatches but passes the orthotropy test. Classification: $2$.\n-   **Dataset D**: Fails all tests because it contains only a single data point, making it impossible to form any nontrivial matched pairs. Classification: $3$.\n\nThe final program will output these classification codes as a list of integers.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to process all datasets and print the final results.\n    \"\"\"\n    \n    # Define rotation matrices\n    # Rotations by pi/2\n    R_x_90 = np.array([[1, 0, 0], [0, 0, -1], [0, 1, 0]])\n    R_y_90 = np.array([[0, 0, 1], [0, 1, 0], [-1, 0, 0]])\n    R_z_90 = np.array([[0, -1, 0], [1, 0, 0], [0, 0, 1]])\n    rots_90 = [R_x_90, R_y_90, R_z_90]\n\n    # Rotations by pi\n    R_x_180 = np.array([[1, 0, 0], [0, -1, 0], [0, 0, -1]])\n    R_y_180 = np.array([[ -1, 0, 0], [0, 1, 0], [0, 0, -1]])\n    R_z_180 = np.array([[ -1, 0, 0], [0, -1, 0], [0, 0, 1]])\n    rots_180 = [R_x_180, R_y_180, R_z_180]\n\n    # --- Datasets Definition ---\n\n    # Dataset A\n    strains_A = [\n        np.array([[1, 0, 0], [0, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0], [0, 1, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0], [0, 0, 0], [0, 0, 1]], dtype=float),\n        np.array([[0, 0.5, 0], [0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, -0.5, 0], [-0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0], [0, 0, 0.5], [0, 0.5, 0]], dtype=float),\n        np.array([[0, 0, 0.5], [0, 0, 0], [0.5, 0, 0]], dtype=float),\n    ]\n    energies_A = [4.0, 4.0, 4.0, 1.5, 1.5, 1.5, 1.5]\n    dataset_A = (strains_A, energies_A)\n    \n    # Dataset B\n    strains_B = [\n        np.diag([1, 0, 0]).astype(float),\n        np.diag([0, 1, 0]).astype(float),\n        np.diag([0, 0, 1]).astype(float),\n        np.array([[0, 0.5, 0], [0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, -0.5, 0], [-0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0.5], [0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0], [0, 0, 0.5], [0, 0.5, 0]], dtype=float),\n        np.diag([1, 1, 0]).astype(float),\n        np.diag([1, 0, 1]).astype(float),\n        np.diag([0, 1, 1]).astype(float),\n    ]\n    energies_B = [3.0, 3.0, 5.0, 1.5, 1.5, 0.5, 0.5, 6.0, 9.0, 9.0]\n    dataset_B = (strains_B, energies_B)\n\n    # Dataset C\n    strains_C = [\n        np.diag([1, 0, 0]).astype(float),\n        np.diag([0, 1, 0]).astype(float),\n        np.diag([0, 0, 1]).astype(float),\n        np.array([[0, 0.5, 0], [0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, -0.5, 0], [-0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0.5], [0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, -0.5], [-0.5, 0, 0], [0, 0, 0]], dtype=float),\n        np.array([[0, 0, 0], [0, 0, 0.5], [0, 0.5, 0]], dtype=float),\n        np.array([[0, 0, 0], [0, 0, -0.5], [0, -0.5, 0]], dtype=float),\n        np.diag([1, 1, 0]).astype(float),\n        np.diag([1, 0, 1]).astype(float),\n        np.diag([0, 1, 1]).astype(float),\n    ]\n    energies_C = [2.0, 3.0, 4.0, 1.25, 1.25, 1.5, 1.5, 1.75, 1.75, 6.0, 6.5, 7.25]\n    dataset_C = (strains_C, energies_C)\n\n    # Dataset D\n    strains_D = [np.diag([1, 0, 0]).astype(float)]\n    energies_D = [0.7]\n    dataset_D = (strains_D, energies_D)\n\n    all_datasets = [dataset_A, dataset_B, dataset_C, dataset_D]\n    \n    results = [classify_material(ds, rots_90, rots_180) for ds in all_datasets]\n    \n    print(f\"[{','.join(map(str, results))}]\")\n\ndef find_strain_index(strain_to_find, all_strains, abs_tol=1e-9):\n    \"\"\"\n    Finds the index of a strain tensor in a list of strains.\n    Returns the index or None if not found.\n    \"\"\"\n    for i, strain in enumerate(all_strains):\n        if np.allclose(strain_to_find, strain, atol=abs_tol):\n            return i\n    return None\n\ndef check_invariance(strains, energies, rotations, energy_tol=1e-9):\n    \"\"\"\n    Checks for symmetry violations and counts nontrivial pairs for a set of rotations.\n    Returns a tuple: (has_violation, list_of_pair_counts).\n    \"\"\"\n    num_violations = 0\n    pairs_per_rotation = [set() for _ in rotations]\n\n    for k, eps_k in enumerate(strains):\n        for rot_idx, Q in enumerate(rotations):\n            eps_prime = Q @ eps_k @ Q.T\n            l = find_strain_index(eps_prime, strains)\n            \n            if l is not None:\n                if abs(energies[l] - energies[k]) > energy_tol:\n                    num_violations += 1\n                elif k != l:\n                    # Found a nontrivial matched pair.\n                    # Use frozenset to count unique pairs {k, l}.\n                    pairs_per_rotation[rot_idx].add(frozenset([k, l]))\n\n    has_violation = num_violations > 0\n    pair_counts = [len(s) for s in pairs_per_rotation]\n    return has_violation, pair_counts\n\ndef classify_material(dataset, rots_90, rots_180):\n    \"\"\"\n    Classifies the material based on the provided dataset and rotation matrices.\n    \"\"\"\n    strains, energies = dataset\n\n    # 1. Isotropy Test\n    has_violation_iso, pairs_iso = check_invariance(strains, energies, rots_90)\n    if not has_violation_iso and all(p >= 1 for p in pairs_iso):\n        return 0  # Isotropic\n\n    # 2. Transverse Isotropy Test\n    is_ti = False\n    for i in range(3):\n        # Test each axis individually\n        has_violation_ti, pairs_ti = check_invariance(strains, energies, [rots_90[i]])\n        if not has_violation_ti and pairs_ti[0] >= 2:\n            is_ti = True\n            break\n    if is_ti:\n        return 1  # Transversely Isotropic\n\n    # 3. Orthotropy Test\n    has_violation_ortho, pairs_ortho = check_invariance(strains, energies, rots_180)\n    if not has_violation_ortho and all(p >= 1 for p in pairs_ortho):\n        return 2  # Orthotropic\n\n    # 4. Inconclusive\n    return 3\n\n# Execute the main function\nsolve()\n```", "id": "2687993"}]}