{"hands_on_practices": [{"introduction": "Understanding the response of an elastic half-space to surface loads is a cornerstone of solid mechanics. This practice builds upon the fundamental Boussinesq solution for a concentrated normal force. You will apply the principle of linear superposition, treating the point-load solution as a Green's function, to determine the response to a distributed pressure over a circular area. This exercise is invaluable for deriving the normal surface compliance [@problem_id:2620650], a critical parameter in contact mechanics, and for honing your skills in applying integral methods to solve elasticity problems.", "problem": "Consider an isotropic, homogeneous, linear elastic half-space occupying $z \\ge 0$ with Young’s modulus $E$ and Poisson’s ratio $\\nu$, whose surface $z=0$ is traction-free except over a circular patch $\\{(x,y): x^{2}+y^{2} \\le a^{2}\\}$ on which a uniform normal pressure $p$ is applied. There are no tangential tractions. Using the principle of superposition together with the classical half-space Green’s function for a normal point load (Boussinesq problem), derive from first principles an explicit, closed-form expression for the normal surface compliance $C(a)$ of this loaded patch, defined as the ratio of the vertical displacement at the center of the patch to the total resultant load, that is\n$$\nC(a) \\equiv \\frac{w(0)}{P}, \\quad P \\equiv \\int_{x^{2}+y^{2}\\le a^{2}} p \\, \\mathrm{d}A = \\pi a^{2} p.\n$$\nYour derivation must begin from the linear elastic field equations and the superposition principle and should make clear the logical connection between the Boussinesq point-load solution and the patch compliance. Express your final result as a single analytic expression in terms of $E$, $\\nu$, and $a$. Do not provide intermediate formulas as your final answer. The final answer must be a single closed-form expression. No numerical evaluation is required and no units are to be reported in the final answer.", "solution": "The problem statement is validated as scientifically grounded, well-posed, and objective. It presents a classical problem in the linear theory of elasticity, specifically concerning contact mechanics on an elastic half-space. The problem is self-contained and free of contradictions. We shall proceed with a rigorous derivation from first principles as directed.\n\nThe foundation of this analysis is the Boussinesq problem, which provides the solution for the stress and displacement fields in an isotropic, homogeneous, linear elastic half-space subjected to a concentrated normal point load on its surface. Let the half-space occupy the region $z \\ge 0$. A point load of magnitude $P_0$ is applied at the origin $(0,0,0)$ in the negative $z$-direction. The vertical displacement, $w(r)$, on the surface $z=0$ at a radial distance $r = \\sqrt{x^2 + y^2}$ from the point of application is given by the fundamental solution:\n$$\nw(r) = \\frac{P_0 (1 - \\nu^2)}{\\pi E r}\n$$\nwhere $E$ is the Young's modulus and $\\nu$ is the Poisson's ratio of the elastic material. This expression serves as the Green's function for the vertical surface displacement due to a normal point load.\n\nThe problem describes a uniform normal pressure $p$ distributed over a circular patch of radius $a$, centered at the origin. The principle of linear superposition, which is valid for linear elastic systems, allows us to determine the total displacement at any point by integrating the effects of infinitesimal point loads over the entire loaded area.\n\nConsider an infinitesimal area element $dA'$ located at a point $(\\xi, \\eta)$ within the circular patch $D = \\{(\\xi, \\eta) : \\xi^2 + \\eta^2 \\le a^2\\}$. This area element is subjected to an infinitesimal normal force $dP = p \\, dA'$. This force can be treated as a concentrated point load.\n\nWe are required to find the vertical displacement $w(0)$ at the center of the patch, i.e., at the point $(x=0, y=0)$. The distance from the source point $(\\xi, \\eta)$ to the field point $(0,0)$ is $r' = \\sqrt{\\xi^2 + \\eta^2}$. The contribution $dw(0)$ to the vertical displacement at the center from the infinitesimal load $dP$ at $(\\xi, \\eta)$ is obtained by applying the Boussinesq formula:\n$$\ndw(0) = \\frac{dP (1 - \\nu^2)}{\\pi E r'} = \\frac{p \\, dA' (1 - \\nu^2)}{\\pi E r'}\n$$\nTo find the total vertical displacement $w(0)$, we must integrate this expression over the entire circular domain $D$:\n$$\nw(0) = \\iint_D \\frac{p (1 - \\nu^2)}{\\pi E r'} \\, dA'\n$$\nThe integration is most conveniently performed using polar coordinates. Let the source point be described by $(\\rho', \\phi')$, where $\\xi = \\rho' \\cos \\phi'$ and $\\eta = \\rho' \\sin \\phi'$. In this coordinate system, the distance to the origin is $r' = \\rho'$, and the infinitesimal area element is $dA' = \\rho' \\, d\\rho' \\, d\\phi'$. The integration limits are $0 \\le \\rho' \\le a$ and $0 \\le \\phi' \\le 2\\pi$.\n\nSubstituting these into the integral for $w(0)$, we have:\n$$\nw(0) = \\int_{0}^{2\\pi} \\int_{0}^{a} \\frac{p (1 - \\nu^2)}{\\pi E \\rho'} (\\rho' \\, d\\rho' \\, d\\phi')\n$$\nA critical simplification occurs as the term $\\rho'$ from the area element cancels the term $\\rho'$ in the denominator of the Green's function. The integrand becomes constant with respect to the integration variables:\n$$\nw(0) = \\int_{0}^{2\\pi} \\int_{0}^{a} \\frac{p (1 - \\nu^2)}{\\pi E} \\, d\\rho' \\, d\\phi'\n$$\nWe can separate the integrals and evaluate them directly:\n$$\nw(0) = \\frac{p (1 - \\nu^2)}{\\pi E} \\left( \\int_{0}^{2\\pi} d\\phi' \\right) \\left( \\int_{0}^{a} d\\rho' \\right)\n$$\nThe evaluation of these elementary integrals yields:\n$$\n\\int_{0}^{2\\pi} d\\phi' = 2\\pi, \\quad \\int_{0}^{a} d\\rho' = a\n$$\nSubstituting these results back into the expression for $w(0)$:\n$$\nw(0) = \\frac{p (1 - \\nu^2)}{\\pi E} (2\\pi)(a) = \\frac{2pa(1 - \\nu^2)}{E}\n$$\nThis is the vertical displacement at the center of the loaded circular patch.\n\nThe problem defines the compliance $C(a)$ as the ratio of this central displacement to the total resultant load $P$. The total load $P$ is the uniform pressure $p$ integrated over the area of the circle, $\\pi a^2$:\n$$\nP = p (\\pi a^2)\n$$\nFrom this, we express the pressure $p$ in terms of the total load $P$:\n$$\np = \\frac{P}{\\pi a^2}\n$$\nNow, substitute this expression for $p$ into the formula for $w(0)$:\n$$\nw(0) = \\frac{2 \\left( \\frac{P}{\\pi a^2} \\right) a (1 - \\nu^2)}{E} = \\frac{2P(1 - \\nu^2)}{\\pi a E}\n$$\nFinally, we compute the compliance $C(a)$ according to its definition:\n$$\nC(a) \\equiv \\frac{w(0)}{P} = \\frac{1}{P} \\left( \\frac{2P(1 - \\nu^2)}{\\pi a E} \\right)\n$$\nThe total load $P$ cancels out, yielding the final expression for the normal surface compliance:\n$$\nC(a) = \\frac{2(1 - \\nu^2)}{\\pi a E}\n$$\nThis result is a function of the material properties $E$ and $\\nu$, and the radius of the loaded patch $a$, as required.", "answer": "$$\n\\boxed{\\frac{2(1 - \\nu^{2})}{\\pi a E}}\n$$", "id": "2620650"}, {"introduction": "While direct spatial integration is intuitive, spectral methods offer a powerful and computationally efficient alternative for solving contact problems. This comprehensive practice guides you from first principles of Fourier analysis to the numerical implementation of a solution for surface loading [@problem_id:2620658]. You will first derive the spectral Green's function and explore its connection to regularization, then apply these concepts to build and validate a Fast Fourier Transform (FFT) based solver, providing deep insight into the interplay between continuous theory and discrete computation in modern mechanics.", "problem": "Consider an isotropic, homogeneous, linearly elastic half-space occupying the region $z \\ge 0$, characterized by Young’s modulus $E$ and Poisson’s ratio $\\nu$. Let $\\mu$ and $\\lambda$ denote the Lamé parameters. The surface at $z=0$ is subjected to prescribed normal traction distributions $t_z(x,y)$ with no tangential traction. The goal is to compute the resulting vertical surface displacement $w(x,y) = u_z(x,y, z=0)$ using physically sound Green’s kernel representations and to address the computational aspects and regularization of the singular kernels.\n\nStarting from first principles, use the following base:\n- The Navier equations for static equilibrium in the absence of body forces: \n$$ \\mu \\nabla^2 \\mathbf{u} + (\\lambda + \\mu) \\nabla (\\nabla \\cdot \\mathbf{u}) = \\mathbf{0} $$\n, where $\\mathbf{u}$ is the displacement field.\n- Traction-displacement boundary conditions on $z=0$.\n- Translational invariance parallel to the surface, enabling a two-dimensional Fourier analysis on the plane $z=0$.\n- The convolution representation of the solution via Green’s kernels in the spatial domain and its equivalent multiplication in the spectral domain.\n- The concept of a mollifier as a regularizing device for singular kernels, specifically a normalized Gaussian function.\n\nYour tasks:\n1. Derive, from the above base, the spectral relation that maps the two-dimensional Fourier transform of the normal traction $t_z(x,y)$ to the two-dimensional Fourier transform of the resulting surface normal displacement $w(x,y)$. Express the relation in terms of the wavenumber magnitude $k = \\sqrt{k_x^2 + k_y^2}$ and the contact modulus $E^\\star = E/(1-\\nu^2)$. Justify the appearance of a nonlocal compliance proportional to $1/k$.\n2. Use the inverse transform to obtain the corresponding spatial-domain convolution law for $w(x,y)$ with a scalar kernel that depends solely on the in-plane distance $r = \\sqrt{x^2 + y^2}$. Explain the source of the $1/r$ singularity.\n3. Introduce a regularization by modeling a point load of total force $P$ as a normalized Gaussian mollifier $\\rho_\\varepsilon(x,y)$ of standard deviation $\\varepsilon$, so that $t_z(x,y) = P \\rho_\\varepsilon(x,y)$ and $\\int_{\\mathbb{R}^2} \\rho_\\varepsilon \\, \\mathrm{d}x \\mathrm{d}y = 1$. Derive the analytic expression of the regularized self-displacement at the load center $w(\\mathbf{0})$ as a function of $P$, $E^\\star$, and $\\varepsilon$. State the convergence behavior as $\\varepsilon \\to 0^+$.\n4. For a uniform pressure $p$ applied over a circular area of radius $a$ centered at the origin, derive the exact expression for the center displacement $w(\\mathbf{0})$ using the spatial convolution law from step 2.\n5. Design and implement a numerical algorithm using a two-dimensional Discrete Fourier Transform to compute $w(x,y)$ on a square, periodic computational cell of side length $L$, discretized on an $N \\times N$ grid with grid spacing $\\Delta x = L/N$. Use the spectral compliance from step 1 for normal loading, and set the zero-wavenumber term to zero to remove the non-physical rigid-body mode that arises from periodic continuation. Discuss the effects of periodic images and truncation on accuracy, and the role of regularization. Your implementation must:\n   - Construct the traction fields specified below on the grid, centered at $(x,y)=(0,0)$.\n   - For Gaussian loads, rescale the discrete traction so that the discrete total force equals the prescribed $P$ to high accuracy.\n   - Compute the numerical approximation of $w(\\mathbf{0})$.\n   - Compare to the corresponding analytic expression and report the relative error.\n\nPhysical units: All lengths must be in meters, tractions in Pascals, forces in Newtons, and displacements in meters. Angles need not be used. The outputs requested are dimensionless relative errors.\n\nTest suite and required outputs:\n- Use material parameters $E = 70 \\times 10^9$ Pa and $\\nu = 0.25$, so that $E^\\star = E/(1-\\nu^2)$.\n- Use a square computational cell of side $L = 1.0$ m with $N = 512$ grid points in each direction.\n- Define three test cases:\n  1. Gaussian-regularized point load with total force $P = 1000$ N and standard deviation $\\varepsilon = 0.020$ m. Compute the relative error between the numerical $w(\\mathbf{0})$ and the analytic expression derived in step 3.\n  2. Uniform pressure $p = 2.0 \\times 10^6$ Pa over a circular area of radius $a = 0.040$ m centered at the origin. Compute the relative error between the numerical $w(\\mathbf{0})$ and the analytic expression derived in step 4.\n  3. Gaussian-regularized point load with total force $P = 1000$ N and standard deviation $\\varepsilon = 0.005$ m. Compute the relative error between the numerical $w(\\mathbf{0})$ and the analytic expression derived in step 3.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the three test cases: $[\\text{err}_1,\\text{err}_2,\\text{err}_3]$, where each $\\text{err}_i$ is the relative error defined as $\\lvert w_{\\text{num}} - w_{\\text{an}} \\rvert / \\lvert w_{\\text{an}} \\rvert$ and is expressed as a float.", "solution": "The problem statement is a well-posed and scientifically sound exercise in linear elasticity and computational mechanics, specifically dealing with the Boussinesq problem for an elastic half-space. It is valid and can be solved as follows. The steps below correspond to the tasks outlined in the problem.\n\nFirst, we define the material parameters and constants that will be used. The elastic half-space is characterized by Young's modulus $E$ and Poisson's ratio $\\nu$. The Lamé parameters are related by $\\mu = E / (2(1+\\nu))$ and $\\lambda = E\\nu / ((1+\\nu)(1-2\\nu))$. The contact modulus, or plane strain modulus, is defined as $E^\\star = E / (1-\\nu^2)$.\n\n### 1. Derivation of the Spectral Relation\n\nWe begin with the Navier equations for static equilibrium. We apply a two-dimensional Fourier transform in the spatial coordinates $(x,y)$. The transform of a function $f(x,y)$ is denoted by $\\hat{f}(k_x, k_y)$:\n$$ \\hat{f}(\\mathbf{k}) = \\int_{\\mathbb{R}^2} f(\\mathbf{x}) e^{-i\\mathbf{k}\\cdot\\mathbf{x}} d^2\\mathbf{x} $$\nThis transforms the PDE system into a system of ordinary differential equations in the coordinate $z$ for the transformed displacement components $\\hat{\\mathbf{u}}(\\mathbf{k}, z)$. Solving this system with the boundary conditions that displacements vanish as $z \\to \\infty$ and that the surface at $z=0$ is free of shear tractions ($\\sigma_{xz}=\\sigma_{yz}=0$) relates all displacement components to the normal surface traction.\n\nThe relationship between the Fourier transform of the surface normal pressure $p(x,y)$ (defined as positive downwards, i.e., in the $-z$ direction) and the resulting downward normal surface displacement $w(x,y)$ is given by a spectral compliance function, $\\hat{G}(k)$:\n$$ \\hat{w}(\\mathbf{k}) = \\hat{G}(k) \\hat{p}(\\mathbf{k}) $$\nA detailed derivation from the transformed elasticity equations shows that for an isotropic elastic half-space, this compliance function depends only on the wavenumber magnitude $k = |\\mathbf{k}|$:\n$$ \\hat{G}(k) = \\frac{1-\\nu}{\\mu k} = \\frac{2(1-\\nu^2)}{Ek} = \\frac{2}{E^\\star k} $$\nThus, the final spectral relation is:\n$$ \\hat{w}(\\mathbf{k}) = \\frac{2}{E^\\star k} \\hat{p}(\\mathbf{k}) $$\nThis relation represents a linear filter in the frequency domain. The displacement response to a given traction component at wavenumber $k$ is proportional to the traction at that same wavenumber. The factor of proportionality, $\\hat{G}(k) = 2/(E^\\star k)$, is the spectral compliance or Green's function. The appearance of $1/k$ signifies that the problem is governed by an elliptic partial differential equation, whose Green's function is non-local. In the spatial domain, this corresponds to long-range interactions. The compliance is large for small $k$ (long wavelengths), indicating the half-space is compliant to large-scale loads, and small for large $k$ (short wavelengths), indicating stiffness against highly localized loads.\n\n### 2. Spatial Domain Convolution Law\n\nThe relationship $\\hat{w}(\\mathbf{k}) = \\hat{G}(\\mathbf{k}) \\hat{p}(\\mathbf{k})$ in the frequency domain corresponds to a convolution in the spatial domain, according to the convolution theorem:\n$$ w(\\mathbf{x}) = (G * p)(\\mathbf{x}) = \\int_{\\mathbb{R}^2} G(\\mathbf{x}-\\mathbf{x'}) p(\\mathbf{x'}) d^2\\mathbf{x'} $$\nThe spatial Green's function $G(\\mathbf{x})$ is the inverse Fourier transform of $\\hat{G}(\\mathbf{k})$:\n$$ G(\\mathbf{x}) = \\mathcal{F}^{-1}\\{\\hat{G}(\\mathbf{k})\\} = \\frac{1}{(2\\pi)^2} \\int_{\\mathbb{R}^2} \\frac{2}{E^\\star k} e^{i\\mathbf{k}\\cdot\\mathbf{x}} d^2\\mathbf{k} $$\nDue to rotational symmetry, $G$ depends only on the magnitude $r=|\\mathbf{x}|$. We convert the integral to polar coordinates in the k-plane ($k_x = k\\cos\\phi, k_y = k\\sin\\phi$) and align the x-axis with $\\mathbf{x}$ so that $\\mathbf{k}\\cdot\\mathbf{x} = kr\\cos\\phi$:\n$$ G(r) = \\frac{2}{(2\\pi)^2 E^\\star} \\int_0^\\infty \\int_0^{2\\pi} \\frac{1}{k} e^{ikr\\cos\\phi} k d\\phi dk = \\frac{2}{4\\pi^2 E^\\star} \\int_0^\\infty \\left( \\int_0^{2\\pi} e^{ikr\\cos\\phi} d\\phi \\right) dk $$\nThe inner integral is a standard representation of the zeroth-order Bessel function of the first kind: $\\int_0^{2\\pi} e^{iz\\cos\\phi} d\\phi = 2\\pi J_0(z)$.\n$$ G(r) = \\frac{2 \\cdot 2\\pi}{4\\pi^2 E^\\star} \\int_0^\\infty J_0(kr) dk = \\frac{1}{\\pi E^\\star} \\int_0^\\infty J_0(kr) dk $$\nUsing the identity $\\int_0^\\infty J_0(u)du=1$ and substituting $u=kr$, $du=r dk$:\n$$ G(r) = \\frac{1}{\\pi E^\\star r} \\int_0^\\infty J_0(u) du = \\frac{1}{\\pi E^\\star r} $$\nThis is the celebrated Boussinesq kernel. The convolution law is:\n$$ w(\\mathbf{x}) = \\frac{1}{\\pi E^\\star} \\int_{\\mathbb{R}^2} \\frac{p(\\mathbf{x'})}{|\\mathbf{x}-\\mathbf{x'}|} d^2\\mathbf{x'} $$\nThe $1/r$ singularity arises from the $1/k$ behavior of the kernel in the frequency domain. Physically, this corresponds to the response to a point load. A concentrated force $P$ at the origin corresponds to a delta function pressure $p(\\mathbf{x}) = P\\delta(\\mathbf{x})$, yielding an infinite displacement $w(0)$, which reflects the unphysical nature of infinite stress under a point load.\n\n### 3. Regularized Point Load Displacement\n\nWe model the point load $P$ with a regularized, normalized Gaussian pressure distribution:\n$$ p(x,y) = P \\rho_\\varepsilon(x,y) = \\frac{P}{2\\pi\\varepsilon^2} e^{-(x^2+y^2)/(2\\varepsilon^2)} $$\nwhere $\\varepsilon$ is the regularization length scale. We can compute the central displacement $w(\\mathbf{0})$ using either the spatial or spectral representation. The spectral method is more direct. First, we find the Fourier transform of the pressure:\n$$ \\hat{p}(\\mathbf{k}) = \\mathcal{F}\\left\\{ \\frac{P}{2\\pi\\varepsilon^2} e^{-r^2/(2\\varepsilon^2)} \\right\\} = P \\cdot \\mathcal{F}\\left\\{ \\frac{1}{2\\pi\\varepsilon^2} e^{-r^2/(2\\varepsilon^2)} \\right\\} = P e^{-k^2\\varepsilon^2/2} $$\nThe transform of the displacement is $\\hat{w}(\\mathbf{k}) = \\hat{G}(k) \\hat{p}(\\mathbf{k}) = \\frac{2 P}{E^\\star k} e^{-k^2\\varepsilon^2/2}$.\nTo find $w(\\mathbf{0})$, we compute the inverse Fourier transform at $\\mathbf{x}=\\mathbf{0}$:\n$$ w(\\mathbf{0}) = \\frac{1}{(2\\pi)^2} \\int_{\\mathbb{R}^2} \\hat{w}(\\mathbf{k}) d^2\\mathbf{k} = \\frac{1}{4\\pi^2} \\int_0^{2\\pi} \\int_0^\\infty \\left( \\frac{2P}{E^\\star k} e^{-k^2\\varepsilon^2/2} \\right) k dk d\\phi $$\n$$ w(\\mathbf{0}) = \\frac{2\\pi \\cdot 2P}{4\\pi^2 E^\\star} \\int_0^\\infty e^{-k^2\\varepsilon^2/2} dk = \\frac{P}{\\pi E^\\star} \\int_0^\\infty e^{-k^2\\varepsilon^2/2} dk $$\nThe integral is a standard Gaussian integral: $\\int_0^\\infty e^{-a u^2} du = \\frac{1}{2}\\sqrt{\\frac{\\pi}{a}}$. Here, $a = \\varepsilon^2/2$.\n$$ \\int_0^\\infty e^{-k^2\\varepsilon^2/2} dk = \\frac{1}{2} \\sqrt{\\frac{\\pi}{\\varepsilon^2/2}} = \\frac{\\sqrt{2\\pi}}{2\\varepsilon} $$\nSubstituting this result gives the central displacement:\n$$ w(\\mathbf{0}) = \\frac{P}{\\pi E^\\star} \\frac{\\sqrt{2\\pi}}{2\\varepsilon} = \\frac{P}{\\sqrt{2\\pi} E^\\star \\varepsilon} $$\nAs the regularization parameter $\\varepsilon \\to 0^+$, the term $1/\\varepsilon \\to \\infty$, so $w(\\mathbf{0}) \\to \\infty$. This correctly recovers the singular behavior of the ideal point load.\n\n### 4. Uniform Pressure on a Circular Area\n\nFor a uniform pressure $p$ applied over a circular area of radius $a$, the pressure distribution is $p(r) = p$ for $r \\le a$ and $p(r) = 0$ for $r > a$. We compute the central displacement $w(\\mathbf{0})$ using the spatial convolution law derived in step 2:\n$$ w(\\mathbf{0}) = \\int_{\\mathbb{R}^2} G(\\mathbf{0}-\\mathbf{x'})p(\\mathbf{x'}) d\\mathbf{x'} = \\int_{|\\mathbf{x'}| \\le a} \\frac{1}{\\pi E^\\star |\\mathbf{x'}|} p \\, d\\mathbf{x'} $$\nWe switch to polar coordinates for the integration variable $\\mathbf{x'} = (r', \\theta')$, with $d\\mathbf{x'} = r'dr'd\\theta'$:\n$$ w(\\mathbf{0}) = \\frac{p}{\\pi E^\\star} \\int_0^{2\\pi} \\int_0^a \\frac{1}{r'} r' dr' d\\theta' = \\frac{p}{\\pi E^\\star} \\int_0^{2\\pi} \\left( \\int_0^a dr' \\right) d\\theta' $$\n$$ w(\\mathbf{0}) = \\frac{p}{\\pi E^\\star} \\int_0^{2\\pi} a \\, d\\theta' = \\frac{p a}{\\pi E^\\star} [ \\theta' ]_0^{2\\pi} = \\frac{p a}{\\pi E^\\star} (2\\pi) $$\nThe exact expression for the center displacement is:\n$$ w(\\mathbf{0}) = \\frac{2pa}{E^\\star} $$\n\n### 5. Numerical Algorithm and Implementation\n\nThe numerical method uses the 2D Fast Fourier Transform (FFT) to implement the convolution via multiplication in the spectral domain.\n\n**Algorithm:**\n1.  **Discretize**: Define a square domain of side $L$ on an $N \\times N$ grid. The grid spacing is $\\Delta x = L/N$. We use centered coordinate grids $x_i, y_j \\in [-L/2, L/2)$.\n2.  **Frequency Grid**: Construct the corresponding 2D frequency grid $(k_x, k_y)$ using `np.fft.fftfreq`. The wavenumbers are $k_{m} = 2\\pi m/L$ for $m \\in \\{-N/2, \\dots, N/2-1\\}$. Compute the wavenumber magnitude $k = \\sqrt{k_x^2 + k_y^2}$.\n3.  **Spectral Kernel**: Construct the discrete spectral Green's function $\\hat{G}(k_x, k_y) = 2 / (E^\\star k)$. At the zero-wavenumber point $(k_x, k_y) = (0,0)$, $k=0$ and the kernel is singular. This corresponds to a rigid body translation of the half-space, which is physically arbitrary. We set $\\hat{G}(0,0) = 0$ to remove this mode, which is equivalent to constraining the average displacement to be zero.\n4.  **Traction Field**: For each test case, construct the pressure distribution $p(x_i, y_j)$ on the spatial grid. For Gaussian loads, ensure the total discrete force $\\sum p_{ij} \\Delta x^2$ equals the prescribed force $P$.\n5.  **FFT Convolution**:\n    a. Compute the 2D FFT of the pressure grid: $\\hat{p} = \\text{fft2}(p)$.\n    b. Multiply element-wise in the frequency domain: $\\hat{w} = \\hat{p} \\cdot \\hat{G}$.\n    c. Compute the inverse 2D FFT to get the displacement field: $w = \\text{ifft2}(\\hat{w})$. The result is complex due to numerical precision, so we take the real part.\n6.  **Comparison**: Extract the numerical displacement at the center of the grid, $w_{\\text{num}}(\\mathbf{0})$, and compare it to the analytical solution $w_{\\text{an}}(\\mathbf{0})$ derived in steps 3 and 4 to compute the relative error.\n\n**Discussion of Effects:**\n-   **Periodic Images**: The FFT assumes periodic boundary conditions. This means our computation models an infinite lattice of identical loads spaced by $L$. The calculated displacement at any point includes contributions from all these \"periodic images\". This leads to an overestimation of the displacement compared to the true isolated load problem. The error is of order $1/L$ and decreases as the domain size $L$ increases relative to the load size.\n-   **Truncation/Aliasing**: The finite grid ($N$) imposes a maximum representable wavenumber (the Nyquist frequency, $k_{Nyq} = \\pi/\\Delta x$). Frequencies in the true signal higher than this are \"aliased\" to lower frequencies, introducing error. This is significant if the pressure's Fourier transform $\\hat{p}(k)$ has substantial energy beyond $k_{Nyq}$. For the smooth Gaussian pressure, $\\hat{p}(k)$ decays very rapidly, so this error is small if $\\varepsilon > \\Delta x$. For the sharp-edged circular pressure, $\\hat{p}(k)$ decays slower ($k^{-3/2}$), so aliasing errors are generally larger.\n-   **Regularization**: The mollifier parameter $\\varepsilon$ in the Gaussian case ensures the load is smooth and its spectrum is band-limited, which is crucial for accuracy with FFT-based methods. For the numerical scheme to resolve the load accurately, $\\varepsilon$ should be larger than the grid spacing $\\Delta x$. As $\\varepsilon$ approaches $\\Delta x$, the discrete representation of the Gaussian becomes poor, increasing error.\n\nThe Python code implementing this algorithm is provided in the final answer.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Boussinesq problem for a half-space under different normal traction\n    distributions using a 2D FFT-based spectral method and compares the numerical\n    results to analytical solutions.\n    \"\"\"\n    # Physical and computational parameters\n    E = 70.0e9  # Young's modulus in Pa\n    nu = 0.25    # Poisson's ratio\n    L = 1.0      # Side length of the computational cell in m\n    N = 512      # Number of grid points in each direction\n\n    # Derived parameters\n    E_star = E / (1.0 - nu**2)\n    dx = L / N\n\n    # 1. Construct frequency grid\n    k_freq = 2 * np.pi * np.fft.fftfreq(N, d=dx)\n    kx, ky = np.meshgrid(k_freq, k_freq)\n    k_mag = np.sqrt(kx**2 + ky**2)\n\n    # 2. Construct spectral Green's function (compliance)\n    # G_hat(k) = 2 / (E_star * k)\n    G_hat = np.zeros_like(k_mag, dtype=float)\n    # Avoid division by zero at k=0\n    non_zero_k = k_mag != 0\n    G_hat[non_zero_k] = 2.0 / (E_star * k_mag[non_zero_k])\n    # The k=0 term (rigid body mode) is explicitly set to 0.\n\n    # 3. Construct spatial grid, centered at (0,0)\n    x_coords = np.arange(-N/2, N/2) * dx\n    xx, yy = np.meshgrid(x_coords, x_coords)\n    \n    test_cases = [\n        {'type': 'gaussian', 'P': 1000.0, 'eps': 0.020},\n        {'type': 'circular', 'p': 2.0e6, 'a': 0.040},\n        {'type': 'gaussian', 'P': 1000.0, 'eps': 0.005},\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        # 4. Construct traction field on the grid\n        if case['type'] == 'gaussian':\n            P = case['P']\n            eps = case['eps']\n            \n            # Analytic solution for centered displacement\n            w_an = P / (np.sqrt(2 * np.pi) * E_star * eps)\n            \n            # Define unscaled Gaussian traction\n            tz_unscaled = np.exp(-(xx**2 + yy**2) / (2 * eps**2))\n            \n            # Rescale to ensure discrete total force is P\n            # Discrete sum approximates integral: sum(f_i * dA)\n            discrete_total_force = np.sum(tz_unscaled) * dx**2\n            scaling_factor = P / discrete_total_force\n            tz_grid = tz_unscaled * scaling_factor\n            \n        elif case['type'] == 'circular':\n            p = case['p']\n            a = case['a']\n            \n            # Analytic solution for centered displacement\n            w_an = (2 * p * a) / E_star\n            \n            # Define uniform pressure over a circular area\n            r = np.sqrt(xx**2 + yy**2)\n            tz_grid = np.zeros_like(r)\n            tz_grid[r = a] = p\n        \n        # 5. Perform FFT-based convolution\n        # a. FFT of the traction field\n        Tz_hat = np.fft.fft2(tz_grid)\n        \n        # b. Multiply by spectral Green's function\n        W_hat = Tz_hat * G_hat\n        \n        # c. Inverse FFT to get displacement field\n        w_grid = np.fft.ifft2(W_hat)\n        \n        # The output from iFFT should be real, except for small numerical noise.\n        # For a centered input grid, the correct central displacement appears at\n        # index (N/2, N/2) due to properties of the discrete Fourier transform.\n        w_num_center = np.real(w_grid[N//2, N//2])\n        \n        # 6. Compute relative error\n        relative_error = np.abs(w_num_center - w_an) / np.abs(w_an)\n        results.append(relative_error)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2620658"}]}