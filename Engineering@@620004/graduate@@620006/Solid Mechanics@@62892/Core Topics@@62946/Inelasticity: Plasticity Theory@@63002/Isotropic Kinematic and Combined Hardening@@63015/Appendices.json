{"hands_on_practices": [{"introduction": "The first step in analyzing any potentially plastic deformation is to determine if the material has yielded. This practice provides a foundational exercise in applying the von Mises ($J_2$) yield criterion, a cornerstone of metal plasticity. By starting with a given multiaxial stress state, you will systematically calculate the deviatoric stress and its second invariant, $J_2$, to find the von Mises equivalent stress, $\\sigma_{eq}$. This essential skill allows you to condense a complex 3D stress state into a single scalar value to compare against the material's yield strength. [@problem_id:2652054]", "problem": "A homogeneous, isotropic metal at small strain obeys a rate-independent $J_2$ (second invariant of the deviatoric stress) plasticity model with combined hardening, but at the loading instant of interest the kinematic backstress is zero and the isotropic hardening radius equals the current yield stress. The Cauchy stress tensor is diagonal with principal stresses and all shear components zero, specifically $\\boldsymbol{\\sigma}=\\operatorname{diag}(300,150,0)\\,\\text{MPa}$. The current yield stress is $\\sigma_{y}=200\\,\\text{MPa}$. \n\nStarting from the fundamental definitions of mean stress, deviatoric stress, and the second invariant $J_2$ of the deviatoric stress, compute the von Mises equivalent stress $\\sigma_{eq}$ and use the $J_2$ yield criterion with isotropic hardening to decide whether the state is elastic or plastic. \n\nReport only the numerical value of $\\sigma_{eq}$, expressed in megapascal (MPa) and rounded to four significant figures, as your final answer. Any classification (elastic or plastic) should be justified in your working but not included in the final reported number.", "solution": "The problem statement is well-posed, internally consistent, and scientifically grounded in the principles of continuum mechanics. We may proceed with the solution.\n\nThe task is to compute the von Mises equivalent stress, $\\sigma_{eq}$, for the given stress state and determine if the material is yielding. The analysis will proceed from the fundamental definitions as demanded.\n\nThe given Cauchy stress tensor, $\\boldsymbol{\\sigma}$, is diagonal, meaning the coordinate axes align with the principal stress directions. The principal stresses are:\n$$ \\sigma_1 = 300\\,\\text{MPa} $$\n$$ \\sigma_2 = 150\\,\\text{MPa} $$\n$$ \\sigma_3 = 0\\,\\text{MPa} $$\nIn matrix form, the stress tensor is:\n$$ \\boldsymbol{\\sigma} = \\begin{pmatrix} 300 & 0 & 0 \\\\ 0 & 150 & 0 \\\\ 0 & 0 & 0 \\end{pmatrix} \\,\\text{MPa} $$\n\nFirst, we compute the mean stress (or hydrostatic stress), $\\sigma_m$, which is defined as one-third of the trace of the stress tensor, $\\operatorname{tr}(\\boldsymbol{\\sigma})$:\n$$ \\sigma_m = \\frac{1}{3} \\operatorname{tr}(\\boldsymbol{\\sigma}) = \\frac{1}{3} (\\sigma_1 + \\sigma_2 + \\sigma_3) $$\nSubstituting the given principal stress values:\n$$ \\sigma_m = \\frac{1}{3} (300 + 150 + 0) = \\frac{450}{3} = 150\\,\\text{MPa} $$\nThe mean stress represents the purely volumetric component of the stress state.\n\nSecond, we determine the deviatoric stress tensor, $\\boldsymbol{s}$, which causes shape change (distortion). It is obtained by subtracting the hydrostatic part from the total stress tensor:\n$$ \\boldsymbol{s} = \\boldsymbol{\\sigma} - \\sigma_m \\boldsymbol{I} $$\nwhere $\\boldsymbol{I}$ is the second-order identity tensor. The principal components of the deviatoric stress tensor are:\n$$ s_1 = \\sigma_1 - \\sigma_m = 300 - 150 = 150\\,\\text{MPa} $$\n$$ s_2 = \\sigma_2 - \\sigma_m = 150 - 150 = 0\\,\\text{MPa} $$\n$$ s_3 = \\sigma_3 - \\sigma_m = 0 - 150 = -150\\,\\text{MPa} $$\nThe deviatoric stress tensor in matrix form is:\n$$ \\boldsymbol{s} = \\begin{pmatrix} 150 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & -150 \\end{pmatrix} \\,\\text{MPa} $$\nBy definition, the deviatoric stress tensor is traceless: $\\operatorname{tr}(\\boldsymbol{s}) = 150 + 0 + (-150) = 0$.\n\nThird, we compute the second invariant of the deviatoric stress tensor, $J_2$. This scalar quantity is a measure of the magnitude of the deviatoric stress and is central to the von Mises yield criterion. It is defined as:\n$$ J_2 = \\frac{1}{2} s_{ij}s_{ji} = \\frac{1}{2} \\operatorname{tr}(\\boldsymbol{s}^2) $$\nUsing the principal deviatoric stresses, this becomes:\n$$ J_2 = \\frac{1}{2} (s_1^2 + s_2^2 + s_3^2) $$\nSubstituting the computed values:\n$$ J_2 = \\frac{1}{2} (150^2 + 0^2 + (-150)^2) = \\frac{1}{2} (22500 + 0 + 22500) = \\frac{45000}{2} = 22500\\,\\text{MPa}^2 $$\n\nThe von Mises equivalent stress, $\\sigma_{eq}$, is related to $J_2$ by the definition:\n$$ \\sigma_{eq} = \\sqrt{3 J_2} $$\nSubstituting the value of $J_2$:\n$$ \\sigma_{eq} = \\sqrt{3 \\times 22500} = \\sqrt{67500} = 150\\sqrt{3}\\,\\text{MPa} $$\n\nTo check for elastic or plastic behavior, we compare $\\sigma_{eq}$ with the current yield stress, $\\sigma_y$. The problem states that kinematic backstress is zero, and the isotropic hardening radius is equal to the current yield stress, $\\sigma_y = 200\\,\\text{MPa}$. The yield function for $J_2$ plasticity with isotropic hardening is:\n$$ f = \\sigma_{eq} - \\sigma_y $$\nThe state is elastic if $f < 0$, and plastic if $f \\ge 0$. We must first evaluate $\\sigma_{eq}$ numerically:\n$$ \\sigma_{eq} = 150\\sqrt{3} \\approx 150 \\times 1.7320508... \\approx 259.8076...\\,\\text{MPa} $$\nNow, we evaluate the yield function:\n$$ f \\approx 259.81\\,\\text{MPa} - 200\\,\\text{MPa} = 59.81\\,\\text{MPa} $$\nSince $f > 0$ (or, equivalently, $\\sigma_{eq} > \\sigma_y$), the material is currently in a plastic state.\n\nThe problem requests the final answer as the numerical value of $\\sigma_{eq}$ in megapascal, rounded to four significant figures.\n$$ \\sigma_{eq} \\approx 259.8\\,\\text{MPa} $$\nThis is the value to be reported.", "answer": "$$\\boxed{259.8}$$", "id": "2652054"}, {"introduction": "In computational mechanics, plasticity models are often implemented using a predictor-corrector scheme. This exercise focuses on the 'predictor' step, where we first assume the deformation is purely elastic and calculate a 'trial stress.' You will then learn how to evaluate the yield function for a combined hardening model, which involves calculating an 'effective stress' by accounting for the kinematic backstress, $\\boldsymbol{\\alpha}$. This check is the crucial decision point that determines whether the initial elastic assumption was correct or if a plastic 'corrector' step is necessary. [@problem_id:2652037]", "problem": "A metallic specimen is modeled by rate-independent plasticity based on the von Mises (Second invariant of deviatoric stress, $J_{2}$) yield criterion with combined isotropicâ€“kinematic hardening. At time step $n$, the internal variables are known. An elastic predictor produces a uniaxial trial Cauchy stress $ \\sigma^{tr} $ along the loading axis. The kinematic hardening state is represented by a backstress amplitude $ \\alpha^{n} $ aligned with the loading axis, and the isotropic hardening state is represented by the current yield stress $ \\sigma_{y}(\\kappa^{n}) $. You are to assess yielding at the trial state using the effective stress concept associated with $J_{2}$ plasticity and combined hardening.\n\nData:\n- Trial stress: $ \\sigma^{tr} = 512 \\,\\text{MPa} $.\n- Backstress amplitude: $ \\alpha^{n} = 68 \\,\\text{MPa} $.\n- Current yield stress: $ \\sigma_{y}(\\kappa^{n}) = 430 \\,\\text{MPa} $.\n\nTasks:\n1. Using first principles for $J_{2}$ plasticity and the role of backstress in combined hardening, compute the yield function value at the trial state, defined as the difference between the effective (von Mises) stress and the current yield stress, evaluated with the appropriate shift due to kinematic hardening.\n2. Determine, based on the sign of this yield function, whether a plastic correction (return-mapping) is required.\n\nExpress the final numerical value of the yield function in megapascals (MPa). No rounding is necessary. Your final answer must be a single real number.", "solution": "The problem statement has been evaluated and is deemed valid. It is scientifically grounded in the principles of continuum plasticity, is well-posed with all necessary information provided, and is formulated objectively. We may proceed to the solution.\n\nThe problem requires the evaluation of the yield condition at a trial stress state within the framework of $J_2$ plasticity with combined isotropic and kinematic hardening. The yield function, denoted by $f$, defines the boundary of the elastic domain in stress space. For combined hardening, this function is expressed in terms of the Cauchy stress tensor $\\boldsymbol{\\sigma}$, the backstress tensor $\\boldsymbol{\\alpha}$, and a scalar variable representing the size of the yield surface, $\\sigma_y$, which is a function of an internal hardening variable, for example, the equivalent plastic strain $\\kappa$.\n\nThe general form of the von Mises yield criterion with combined hardening is:\n$$f(\\boldsymbol{\\sigma}, \\boldsymbol{\\alpha}, \\kappa) = \\sigma_{eq}(\\boldsymbol{\\sigma} - \\boldsymbol{\\alpha}) - \\sigma_y(\\kappa) \\le 0$$\nwhere $\\sigma_{eq}$ denotes the von Mises equivalent stress. The tensor $\\boldsymbol{\\xi} = \\boldsymbol{\\sigma} - \\boldsymbol{\\alpha}$ is known as the effective stress tensor. A state is elastic or on the yield surface if $f \\le 0$. If $f > 0$, the state is inadmissible and plastic flow occurs.\n\nIn the context of computational plasticity, an elastic predictor step is first performed to obtain a trial stress state, $\\boldsymbol{\\sigma}^{tr}$. The yield function is then evaluated at this trial state, using the internal variables from the previous converged time step, $n$.\n$$f^{tr} = \\sigma_{eq}(\\boldsymbol{\\sigma}^{tr} - \\boldsymbol{\\alpha}^{n}) - \\sigma_y(\\kappa^{n})$$\nThe problem specifies a uniaxial stress state along a single loading axis. Let this be the $1$-axis. The trial stress tensor $\\boldsymbol{\\sigma}^{tr}$ has only one non-zero component, $\\sigma_{11} = \\sigma^{tr}$. Similarly, the backstress tensor $\\boldsymbol{\\alpha}^{n}$ is aligned with the loading axis, so its only non-zero component is $\\alpha_{11} = \\alpha^{n}$.\n\nThe effective stress tensor at the trial state, $\\boldsymbol{\\xi}^{tr} = \\boldsymbol{\\sigma}^{tr} - \\boldsymbol{\\alpha}^{n}$, is also uniaxial, with its only non-zero component being:\n$$\\xi_{11}^{tr} = \\sigma^{tr} - \\alpha^{n}$$\nFor any uniaxial stress tensor $\\mathbf{T}$ with a single non-zero component $T_{11}$, the von Mises equivalent stress $\\sigma_{eq}(\\mathbf{T})$ simplifies to the absolute value of that component, $|T_{11}|$. Therefore, the effective von Mises stress at the trial state is:\n$$\\sigma_{eq}^{tr} = |\\sigma^{tr} - \\alpha^{n}|$$\nNow, we can compute the value of the yield function at the trial state using the provided data.\n\nGiven data:\n- Trial stress: $\\sigma^{tr} = 512 \\, \\text{MPa}$.\n- Backstress amplitude at step $n$: $\\alpha^{n} = 68 \\, \\text{MPa}$.\n- Current yield stress at step $n$: $\\sigma_{y}(\\kappa^{n}) = 430 \\, \\text{MPa}$.\n\nFirst, we compute the effective stress component:\n$$\\sigma^{tr} - \\alpha^{n} = 512 - 68 = 444 \\, \\text{MPa}$$\nNext, we compute the effective von Mises stress:\n$$\\sigma_{eq}^{tr} = |444| = 444 \\, \\text{MPa}$$\nFinally, we evaluate the yield function at the trial state:\n$$f^{tr} = \\sigma_{eq}^{tr} - \\sigma_y(\\kappa^{n})$$\n$$f^{tr} = 444 - 430 = 14 \\, \\text{MPa}$$\nThe value of the yield function at the trial state is $14 \\, \\text{MPa}$.\n\nThe second task is to determine if a plastic correction is necessary. The decision is based on the sign of $f^{tr}$:\n- If $f^{tr} \\le 0$, the trial state is within or on the yield surface. The step is elastic, and no correction is needed. The stress state is updated as $\\boldsymbol{\\sigma}^{n+1} = \\boldsymbol{\\sigma}^{tr}$.\n- If $f^{tr} > 0$, the trial state lies outside the yield surface, which is physically inadmissible. Plastic deformation occurs, and a return-mapping algorithm must be employed to return the stress state to an updated yield surface.\n\nIn this case, we have found that $f^{tr} = 14 \\, \\text{MPa}$, which is greater than $0$.\n$$f^{tr} = 14 > 0$$\nTherefore, a plastic correction is required. The elastic predictor has overestimated the stress, and a return-mapping procedure is necessary to compute the correct stress and update the internal plastic variables for the current time step.", "answer": "$$\\boxed{14}$$", "id": "2652037"}, {"introduction": "Building directly on the predictor-step concept, this practice tackles the 'corrector' phase, which is the heart of computational plasticity algorithms. When the trial stress lies outside the yield surface, a return-mapping algorithm must be used to enforce plastic consistency and find the true stress state. This hands-on coding exercise guides you through implementing the classic radial return algorithm for a material with combined isotropic and kinematic hardening. By translating the constitutive equations into a functional algorithm, you will gain a profound understanding of how plastic flow is numerically integrated in finite element simulations. [@problem_id:2652024]", "problem": "Implement a small-strain uniaxial return-mapping algorithm (radial return) for an elastic-plastic material with linear isotropic hardening, linear kinematic hardening, and their combination. The problem is posed in purely mathematical terms with physically meaningful units: stress in megapascals (MPa) and strain dimensionless. Start from the additive strain decomposition, linear elasticity, and an associative rate-independent plasticity model with a uniaxial yield function. Do not use any pre-derived update shortcut formula; derive the update by enforcing consistency at the end of the increment.\n\nAssume the following constitutive structure in uniaxial small strain:\n- Additive decomposition: $\\varepsilon = \\varepsilon^{e} + \\varepsilon^{p}$.\n- Linear elasticity: $\\sigma = E\\,\\varepsilon^{e}$ with Youngâ€™s modulus $E$.\n- Yield function in uniaxial form: $f(\\sigma,\\alpha,\\kappa) = \\lvert \\sigma - \\alpha \\rvert - \\left(\\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa\\right)$, where $\\alpha$ is the uniaxial backstress for kinematic hardening, $\\kappa$ is the accumulated plastic strain, $\\sigma_{y}^{0}$ is the initial yield stress, and $H_{\\text{iso}}$ is the linear isotropic hardening modulus.\n- Associative flow rule and hardening evolution in uniaxial form: $\\dot{\\varepsilon}^{p} = \\dot{\\gamma}\\,\\operatorname{sign}(\\sigma-\\alpha)$, $\\dot{\\kappa} = \\dot{\\gamma}$, and $\\dot{\\alpha} = C\\,\\dot{\\varepsilon}^{p}$, where $C$ is the linear kinematic hardening modulus and $\\dot{\\gamma} \\ge 0$ is the plastic multiplier enforcing $f \\le 0$, $\\dot{\\gamma} f = 0$.\n\nGiven a strain increment $\\Delta \\varepsilon$ over a time step from state $n$ to $n+1$ with known state variables $(\\sigma^{n}, \\varepsilon^{p\\,n}, \\kappa^{n}, \\alpha^{n})$, implement the following algorithm to compute $(\\sigma^{n+1}, \\varepsilon^{p\\,n+1}, \\kappa^{n+1}, \\alpha^{n+1})$:\n\n1. Compute the elastic trial stress using $\\sigma_{\\text{tr}} = \\sigma^{n} + E\\,\\Delta \\varepsilon$.\n2. Evaluate the trial yield function $f_{\\text{tr}} = \\lvert \\sigma_{\\text{tr}} - \\alpha^{n} \\rvert - \\left(\\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n}\\right)$.\n3. If $f_{\\text{tr}} \\le 0$ (within a numerical tolerance you must define), accept an elastic step with $(\\sigma^{n+1}, \\varepsilon^{p\\,n+1}, \\kappa^{n+1}, \\alpha^{n+1}) = (\\sigma_{\\text{tr}}, \\varepsilon^{p\\,n}, \\kappa^{n}, \\alpha^{n})$.\n4. If $f_{\\text{tr}} > 0$, enforce plastic consistency at $n+1$ with associative flow and linear hardening to determine the plastic correction. Use a return-mapping that preserves the loading direction $\\operatorname{sign}(\\sigma_{\\text{tr}}-\\alpha^{n})$ during the increment, and update $(\\sigma, \\varepsilon^{p}, \\kappa, \\alpha)$ accordingly.\n\nDesign a program that applies this update for a fixed test suite of cases. All stresses (including the backstress $\\alpha$) must be expressed in $\\mathrm{MPa}$, and all strains (including $\\varepsilon^{p}$ and $\\kappa$) are dimensionless. The output for each test case must be a list of four floats rounded to six decimal places in the order $[\\sigma^{n+1}\\,(\\mathrm{MPa}), \\varepsilon^{p\\,n+1}, \\kappa^{n+1}, \\alpha^{n+1}\\,(\\mathrm{MPa})]$.\n\nTest Suite (use exactly these parameter values):\n- Case A (isotropic hardening only, plastic step): $E = 210000\\,\\mathrm{MPa}$, $\\sigma_{y}^{0} = 250\\,\\mathrm{MPa}$, $H_{\\text{iso}} = 1000\\,\\mathrm{MPa}$, $C = 0\\,\\mathrm{MPa}$, $\\sigma^{n} = 0\\,\\mathrm{MPa}$, $\\varepsilon^{p\\,n} = 0$, $\\kappa^{n} = 0$, $\\alpha^{n} = 0\\,\\mathrm{MPa}$, $\\Delta \\varepsilon = 0.003$.\n- Case B (isotropic hardening only, elastic step): $E = 210000\\,\\mathrm{MPa}$, $\\sigma_{y}^{0} = 250\\,\\mathrm{MPa}$, $H_{\\text{iso}} = 1000\\,\\mathrm{MPa}$, $C = 0\\,\\mathrm{MPa}$, $\\sigma^{n} = 0\\,\\mathrm{MPa}$, $\\varepsilon^{p\\,n} = 0$, $\\kappa^{n} = 0$, $\\alpha^{n} = 0\\,\\mathrm{MPa}$, $\\Delta \\varepsilon = 0.001$.\n- Case C (kinematic hardening only, plastic step): $E = 210000\\,\\mathrm{MPa}$, $\\sigma_{y}^{0} = 250\\,\\mathrm{MPa}$, $H_{\\text{iso}} = 0\\,\\mathrm{MPa}$, $C = 30000\\,\\mathrm{MPa}$, $\\sigma^{n} = 260\\,\\mathrm{MPa}$, $\\alpha^{n} = 50\\,\\mathrm{MPa}$, $\\varepsilon^{p\\,n} = 50/30000$, $\\kappa^{n} = 50/30000$, $\\Delta \\varepsilon = 0.002$.\n- Case D (combined hardening with reverse loading, plastic step): $E = 210000\\,\\mathrm{MPa}$, $\\sigma_{y}^{0} = 250\\,\\mathrm{MPa}$, $H_{\\text{iso}} = 2000\\,\\mathrm{MPa}$, $C = 40000\\,\\mathrm{MPa}$, $\\sigma^{n} = 376\\,\\mathrm{MPa}$, $\\alpha^{n} = 120\\,\\mathrm{MPa}$, $\\varepsilon^{p\\,n} = 120/40000$, $\\kappa^{n} = 120/40000$, $\\Delta \\varepsilon = -0.003$.\n- Case E (boundary case exactly at yield, elastic): $E = 210000\\,\\mathrm{MPa}$, $\\sigma_{y}^{0} = 300\\,\\mathrm{MPa}$, $H_{\\text{iso}} = 500\\,\\mathrm{MPa}$, $C = 0\\,\\mathrm{MPa}$, $\\sigma^{n} = 200\\,\\mathrm{MPa}$, $\\alpha^{n} = 0\\,\\mathrm{MPa}$, $\\kappa^{n} = 0.1$, $\\varepsilon^{p\\,n} = 0.1$, $\\Delta \\varepsilon = (350 - 200)/210000$.\n\nYour program should apply the same algorithm to all cases above. Use a strict but reasonable numerical tolerance when deciding $f_{\\text{tr}} \\le 0$ for elasticity. The final program output must be a single line containing a list of results for Cases Aâ€“E in order, formatted as a comma-separated Python-like list of lists with each float rounded to six decimal places; for example, in the form $[[\\cdot,\\cdot,\\cdot,\\cdot],[\\cdot,\\cdot,\\cdot,\\cdot],\\ldots]$.", "solution": "The problem requires the implementation of a uniaxial return-mapping algorithm for a generalized elastic-plastic material model incorporating both linear isotropic and linear kinematic hardening. The derivation must proceed from first principles, specifically the additive strain decomposition, linear elasticity, the given yield criterion, and the associative flow and hardening rules. A numerical tolerance for the elastic-plastic transition must be defined; a value of $10^{-7}$ is chosen, as it is sufficiently small relative to the stress magnitudes ($\\mathrm{MPa}$) to ensure accuracy.\n\nThe objective is to compute the state variables $(\\sigma^{n+1}, \\varepsilon^{p\\,n+1}, \\kappa^{n+1}, \\alpha^{n+1})$ at the end of an increment, given the state at the beginning of the increment $(\\sigma^{n}, \\varepsilon^{p\\,n}, \\kappa^{n}, \\alpha^{n})$ and the total strain increment $\\Delta \\varepsilon$.\n\nThe algorithm begins with an elastic trial step. The trial stress, $\\sigma_{\\text{tr}}$, is computed assuming the entire strain increment $\\Delta\\varepsilon$ is purely elastic:\n$$ \\sigma_{\\text{tr}} = \\sigma^{n} + E\\,\\Delta\\varepsilon $$\nThe trial state is then checked against the yield condition using the state variables from step $n$:\n$$ f_{\\text{tr}} = \\lvert \\sigma_{\\text{tr}} - \\alpha^{n} \\rvert - \\left(\\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n}\\right) $$\nIf $f_{\\text{tr}} \\le 0$, the assumption of a purely elastic step is correct. The material has not yielded, or is unloading elastically. The final state is the trial state:\n$$ \\sigma^{n+1} = \\sigma_{\\text{tr}}, \\quad \\varepsilon^{p\\,n+1} = \\varepsilon^{p\\,n}, \\quad \\kappa^{n+1} = \\kappa^{n}, \\quad \\alpha^{n+1} = \\alpha^{n} $$\nIf $f_{\\text{tr}} > 0$, the trial state lies outside the yield surface, which is physically inadmissible. A plastic correction is required. This correction, known as the return map, must bring the stress state back to an updated yield surface, satisfying the consistency condition $f(\\sigma^{n+1}, \\alpha^{n+1}, \\kappa^{n+1}) = 0$.\n\nThe plastic evolution is governed by the associative flow and hardening rules, which are integrated over the increment using a backward Euler scheme. This is a standard implicit method that ensures unconditional stability. The increments of the plastic state variables are:\n$$ \\Delta\\varepsilon^{p} = \\varepsilon^{p\\,n+1} - \\varepsilon^{p\\,n} = \\Delta\\gamma \\, \\operatorname{sign}(\\sigma^{n+1} - \\alpha^{n+1}) $$\n$$ \\Delta\\kappa = \\kappa^{n+1} - \\kappa^{n} = \\Delta\\gamma $$\n$$ \\Delta\\alpha = \\alpha^{n+1} - \\alpha^{n} = C\\,\\Delta\\varepsilon^{p} $$\nwhere $\\Delta\\gamma \\ge 0$ is the total consistency parameter over the increment.\n\nThe return-mapping algorithm assumes that the direction of plastic flow remains constant throughout the correction and is determined by the trial state. Let this direction be $R$:\n$$ R = \\operatorname{sign}(\\sigma_{\\text{tr}} - \\alpha^{n}) $$\nThis simplifies the evolution equations:\n$$ \\Delta\\varepsilon^{p} = \\Delta\\gamma \\, R \\quad \\implies \\quad \\varepsilon^{p\\,n+1} = \\varepsilon^{p\\,n} + \\Delta\\gamma \\, R $$\n$$ \\Delta\\kappa = \\Delta\\gamma \\quad \\implies \\quad \\kappa^{n+1} = \\kappa^{n} + \\Delta\\gamma $$\n$$ \\Delta\\alpha = C \\, \\Delta\\gamma \\, R \\quad \\implies \\quad \\alpha^{n+1} = \\alpha^{n} + C \\, \\Delta\\gamma \\, R $$\nThe stress at step $n+1$ is obtained by correcting the trial stress for the plastic strain that occurs during the increment:\n$$ \\sigma^{n+1} = E (\\varepsilon^{n+1} - \\varepsilon^{p\\,n+1}) = E(\\varepsilon^n + \\Delta\\varepsilon - \\varepsilon^{p,n} - \\Delta\\varepsilon^p) = \\sigma^n + E\\Delta\\varepsilon - E\\Delta\\varepsilon^p = \\sigma_{\\text{tr}} - E\\,\\Delta\\varepsilon^{p} $$\n$$ \\sigma^{n+1} = \\sigma_{\\text{tr}} - E\\,\\Delta\\gamma\\,R $$\nAll updated state variables are now expressed in terms of the single unknown scalar $\\Delta\\gamma$. To find $\\Delta\\gamma$, we enforce the plastic consistency condition $f^{n+1} = 0$:\n$$ f^{n+1} = \\lvert \\sigma^{n+1} - \\alpha^{n+1} \\rvert - \\left(\\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n+1}\\right) = 0 $$\nLet us substitute the expressions for the updated variables. First, the relative stress:\n$$ \\sigma^{n+1} - \\alpha^{n+1} = (\\sigma_{\\text{tr}} - E\\,\\Delta\\gamma\\,R) - (\\alpha^{n} + C\\,\\Delta\\gamma\\,R) = (\\sigma_{\\text{tr}} - \\alpha^{n}) - (E+C)\\,\\Delta\\gamma\\,R $$\nSince the plastic correction reduces the magnitude of the relative stress from the trial value, the term $(\\sigma^{n+1} - \\alpha^{n+1})$ maintains the same sign $R$ as $(\\sigma_{\\text{tr}} - \\alpha^{n})$. Thus, we can take the absolute value:\n$$ \\lvert \\sigma^{n+1} - \\alpha^{n+1} \\rvert = \\lvert \\sigma_{\\text{tr}} - \\alpha^{n} \\rvert - (E+C)\\,\\Delta\\gamma $$\nThe updated yield stress is:\n$$ \\sigma_{y}^{n+1} = \\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n+1} = \\sigma_{y}^{0} + H_{\\text{iso}}\\,(\\kappa^{n} + \\Delta\\gamma) $$\nEquating the two expressions as per the consistency condition:\n$$ \\lvert \\sigma_{\\text{tr}} - \\alpha^{n} \\rvert - (E+C)\\,\\Delta\\gamma = \\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n} + H_{\\text{iso}}\\,\\Delta\\gamma $$\nRearranging to solve for $\\Delta\\gamma$:\n$$ \\lvert \\sigma_{\\text{tr}} - \\alpha^{n} \\rvert - (\\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n}) = (E + C + H_{\\text{iso}})\\,\\Delta\\gamma $$\nThe left-hand side is precisely the trial yield function value, $f_{\\text{tr}}$. This yields the final expression for the plastic multiplier increment:\n$$ \\Delta\\gamma = \\frac{f_{\\text{tr}}}{E + C + H_{\\text{iso}}} $$\nSince $f_{\\text{tr}} > 0$ and the material moduli $E, C, H_{\\text{iso}}$ are non-negative ($E > 0$), it follows that $\\Delta\\gamma > 0$, as required.\n\nThe complete algorithm for one increment is as follows:\n1.  Compute trial stress: $\\sigma_{\\text{tr}} = \\sigma^{n} + E\\,\\Delta\\varepsilon$.\n2.  Compute trial yield function: $f_{\\text{tr}} = \\lvert \\sigma_{\\text{tr}} - \\alpha^{n} \\rvert - (\\sigma_{y}^{0} + H_{\\text{iso}}\\,\\kappa^{n})$.\n3.  If $f_{\\text{tr}} \\le 10^{-7}$, the step is elastic. The updated state is $(\\sigma_{\\text{tr}}, \\varepsilon^{p\\,n}, \\kappa^{n}, \\alpha^{n})$.\n4.  If $f_{\\text{tr}} > 10^{-7}$, the step is plastic.\n    a. Calculate $\\Delta\\gamma = \\frac{f_{\\text{tr}}}{E + C + H_{\\text{iso}}}$.\n    b. Determine flow direction $R = \\operatorname{sign}(\\sigma_{\\text{tr}} - \\alpha^{n})$.\n    c. Update stress: $\\sigma^{n+1} = \\sigma_{\\text{tr}} - E\\,\\Delta\\gamma\\,R$.\n    d. Update internal variables:\n       $\\varepsilon^{p\\,n+1} = \\varepsilon^{p\\,n} + \\Delta\\gamma\\,R$.\n       $\\kappa^{n+1} = \\kappa^{n} + \\Delta\\gamma$.\n       $\\alpha^{n+1} = \\alpha^{n} + C\\,\\Delta\\gamma\\,R$.\nThis procedure is directly implemented in the following program.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef update_state(E, sig_y0, H_iso, C, sig_n, ep_n, kap_n, alp_n, d_eps):\n    \"\"\"\n    Computes the updated state variables for a uniaxial elastic-plastic material\n    with combined linear isotropic and kinematic hardening using a return-mapping algorithm.\n\n    Args:\n        E (float): Young's modulus (MPa)\n        sig_y0 (float): Initial yield stress (MPa)\n        H_iso (float): Isotropic hardening modulus (MPa)\n        C (float): Kinematic hardening modulus (MPa)\n        sig_n (float): Stress at the beginning of the increment (MPa)\n        ep_n (float): Plastic strain at the beginning of the increment\n        kap_n (float): Accumulated plastic strain at the beginning of the increment\n        alp_n (float): Backstress at the beginning of the increment (MPa)\n        d_eps (float): Total strain increment\n\n    Returns:\n        tuple: Updated state variables (sig_np1, ep_np1, kap_np1, alp_np1)\n    \"\"\"\n    # Numerical tolerance for yield check\n    TOL = 1e-7\n\n    # 1. Compute elastic trial stress\n    sig_tr = sig_n + E * d_eps\n\n    # 2. Evaluate trial yield function\n    sig_y_n = sig_y0 + H_iso * kap_n\n    f_tr = np.abs(sig_tr - alp_n) - sig_y_n\n\n    # 3. Check for yielding\n    if f_tr <= TOL:\n        # Elastic step\n        sig_np1 = sig_tr\n        ep_np1 = ep_n\n        kap_np1 = kap_n\n        alp_np1 = alp_n\n        return sig_np1, ep_np1, kap_np1, alp_np1\n    else:\n        # 4. Plastic step: enforce consistency\n        # Calculate plastic multiplier increment\n        denominator = E + C + H_iso\n        d_gamma = f_tr / denominator\n\n        # Determine flow direction\n        R = np.sign(sig_tr - alp_n)\n\n        # Update state variables\n        kap_np1 = kap_n + d_gamma\n        ep_np1 = ep_n + d_gamma * R\n        alp_np1 = alp_n + C * d_gamma * R\n        sig_np1 = sig_tr - E * d_gamma * R\n\n        return sig_np1, ep_np1, kap_np1, alp_np1\n\ndef solve():\n    \"\"\"\n    Main solver function to run the test suite and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A: Isotropic hardening only, plastic step\n        {'E': 210000.0, 'sig_y0': 250.0, 'H_iso': 1000.0, 'C': 0.0, 'sig_n': 0.0, 'ep_n': 0.0, 'kap_n': 0.0, 'alp_n': 0.0, 'd_eps': 0.003},\n        # Case B: Isotropic hardening only, elastic step\n        {'E': 210000.0, 'sig_y0': 250.0, 'H_iso': 1000.0, 'C': 0.0, 'sig_n': 0.0, 'ep_n': 0.0, 'kap_n': 0.0, 'alp_n': 0.0, 'd_eps': 0.001},\n        # Case C: Kinematic hardening only, plastic step\n        {'E': 210000.0, 'sig_y0': 250.0, 'H_iso': 0.0, 'C': 30000.0, 'sig_n': 260.0, 'alp_n': 50.0, 'ep_n': 50.0/30000.0, 'kap_n': 50.0/30000.0, 'd_eps': 0.002},\n        # Case D: Combined hardening with reverse loading, plastic step\n        {'E': 210000.0, 'sig_y0': 250.0, 'H_iso': 2000.0, 'C': 40000.0, 'sig_n': 376.0, 'alp_n': 120.0, 'ep_n': 120.0/40000.0, 'kap_n': 120.0/40000.0, 'd_eps': -0.003},\n        # Case E: Boundary case exactly at yield, elastic\n        {'E': 210000.0, 'sig_y0': 300.0, 'H_iso': 500.0, 'C': 0.0, 'sig_n': 200.0, 'alp_n': 0.0, 'kap_n': 0.1, 'ep_n': 0.1, 'd_eps': (350.0 - 200.0)/210000.0},\n    ]\n\n    results = []\n    for case in test_cases:\n        # Unpack case parameters and call the update function\n        sig_np1, ep_np1, kap_np1, alp_np1 = update_state(\n            case['E'], case['sig_y0'], case['H_iso'], case['C'],\n            case['sig_n'], case['ep_n'], case['kap_n'], case['alp_n'],\n            case['d_eps']\n        )\n        \n        # Round results to six decimal places and store as a list\n        result = [\n            round(sig_np1, 6),\n            round(ep_np1, 6),\n            round(kap_np1, 6),\n            round(alp_np1, 6)\n        ]\n        results.append(result)\n\n    # Format the final output as a string representing a list of lists.\n    # e.g., [[1.0,2.0,...],[3.0,4.0,...]]\n    # map(str, results) converts each inner list to its string representation.\n    # ','.join() combines these strings with commas.\n    # The outer brackets are added manually.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2652024"}]}