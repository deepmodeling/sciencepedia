{"hands_on_practices": [{"introduction": "This first exercise is a foundational practice in applying Cauchy's stress theorem directly. By calculating the traction vector and its decomposition for a specific stress tensor and plane, you will translate abstract tensor concepts into concrete numerical results, a crucial skill for any stress analysis [@problem_id:2694348]. This practice reinforces the physical meaning of the traction vector $\\boldsymbol{t}$, the normal stress $\\sigma_{nn}$, and the shear stress vector $\\boldsymbol{\\tau}$.", "problem": "A homogeneous continuum at a point is characterized by the Cauchy stress tensor $\\boldsymbol{\\sigma}$ (symmetric second-order tensor with units of megapascals) and a plane through the point with unit normal $\\boldsymbol{n}$. Starting only from the balance of linear momentum (Cauchy’s stress principle that the traction depends linearly on the unit normal) and the balance of angular momentum (symmetry of the Cauchy stress tensor), derive the expression for the traction vector $\\boldsymbol{t}(\\boldsymbol{n})$ acting on the plane with normal $\\boldsymbol{n}$, and its orthogonal decomposition into a normal component and a shear component. Then, evaluate these quantities for\n$$\n\\boldsymbol{\\sigma}=\\begin{bmatrix}100  30  -20\\\\ 30  50  0\\\\ -20  0  80\\end{bmatrix}\\ \\text{(in MPa)},\\qquad \\boldsymbol{n}=\\tfrac{1}{\\sqrt{14}}(1,2,3).\n$$\nSpecifically compute:\n- the traction vector $\\boldsymbol{t}(\\boldsymbol{n})$,\n- the normal stress $\\sigma_{nn}$ on the plane,\n- the shear (tangential) traction vector $\\boldsymbol{\\tau}$ on the plane, and\n- the magnitude $\\|\\boldsymbol{\\tau}\\|$.\n\nExpress all stress quantities in megapascals (MPa). Provide exact values in simplest radical form; do not approximate. Report the final answer as an eight-entry row in the order $(t_1, t_2, t_3, \\sigma_{nn}, \\tau_1, \\tau_2, \\tau_3, \\|\\boldsymbol{\\tau}\\|)$, and omit units in the final boxed answer.", "solution": "The problem will be validated before any attempt at a solution.\n\nGivens are extracted verbatim from the problem statement:\n1.  A homogeneous continuum is characterized by the Cauchy stress tensor $\\boldsymbol{\\sigma}$, a symmetric second-order tensor.\n2.  A plane through a point is defined by its unit normal vector $\\boldsymbol{n}$.\n3.  The governing principles are the balance of linear momentum (Cauchy's stress principle: the traction vector $\\boldsymbol{t}$ depends linearly on $\\boldsymbol{n}$) and the balance of angular momentum (which implies the symmetry of $\\boldsymbol{\\sigma}$).\n4.  The specific stress tensor is given as $\\boldsymbol{\\sigma}=\\begin{bmatrix}100  30  -20\\\\ 30  50  0\\\\ -20  0  80\\end{bmatrix}$ with units of megapascals (MPa).\n5.  The specific unit normal vector is given as $\\boldsymbol{n}=\\tfrac{1}{\\sqrt{14}}(1,2,3)$.\n6.  The required calculations are: the traction vector $\\boldsymbol{t}(\\boldsymbol{n})$, the normal stress $\\sigma_{nn}$, the shear traction vector $\\boldsymbol{\\tau}$, and the magnitude of the shear traction $\\|\\boldsymbol{\\tau}\\|$.\n7.  The final answer must be in exact simplest radical form and presented as an eight-entry row matrix.\n\nThe problem is subjected to validation.\n-   **Scientific Grounding**: The problem is fundamentally sound. It is a standard application of Cauchy's stress theorem, a cornerstone of continuum mechanics. All concepts—stress tensor, traction vector, normal and shear components—are well-established.\n-   **Well-Posedness**: The problem is well-posed. A unique solution exists for the requested quantities, which are determined by the given stress tensor and normal vector.\n-   **Objectivity**: The language is precise and objective, free of any subjectivity.\n-   **Completeness and Consistency**: The problem is self-contained. The provided stress tensor $\\boldsymbol{\\sigma}$ is symmetric, consistent with the balance of angular momentum for a non-polar continuum. The provided vector $\\boldsymbol{n}$ is a valid unit vector, as $\\|\\boldsymbol{n}\\| = \\sqrt{(\\frac{1}{\\sqrt{14}})^2 + (\\frac{2}{\\sqrt{14}})^2 + (\\frac{3}{\\sqrt{14}})^2} = \\sqrt{\\frac{1}{14} + \\frac{4}{14} + \\frac{9}{14}} = \\sqrt{\\frac{14}{14}} = 1$. The data are consistent and sufficient.\n-   **Feasibility**: The stress values are physically realistic for engineering materials.\n\nThe verdict is that the problem is valid. A solution will be constructed.\n\nFirst, we establish the theoretical framework. The balance of linear momentum, when applied to an infinitesimal tetrahedron, yields the relationship between the traction vector $\\boldsymbol{t}$ acting on a surface with unit normal $\\boldsymbol{n}$ and the Cauchy stress tensor $\\boldsymbol{\\sigma}$ at that point. This is known as Cauchy's stress theorem:\n$$\n\\boldsymbol{t}(\\boldsymbol{n}) = \\boldsymbol{\\sigma} \\boldsymbol{n}\n$$\nThe balance of angular momentum further constrains the stress tensor to be symmetric, i.e., $\\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}^T$. The provided tensor adheres to this principle.\n\nThe traction vector $\\boldsymbol{t}$ can be decomposed into two orthogonal components: one normal to the plane, $\\boldsymbol{\\sigma}_{n}$, and one tangential (or shear) to the plane, $\\boldsymbol{\\tau}$.\n$$\n\\boldsymbol{t} = \\boldsymbol{\\sigma}_{n} + \\boldsymbol{\\tau}\n$$\nThe normal component $\\boldsymbol{\\sigma}_{n}$ is the vector projection of $\\boldsymbol{t}$ onto the direction of the unit normal vector $\\boldsymbol{n}$:\n$$\n\\boldsymbol{\\sigma}_{n} = (\\boldsymbol{t} \\cdot \\boldsymbol{n}) \\boldsymbol{n}\n$$\nThe scalar magnitude of this vector is the normal stress, denoted $\\sigma_{nn}$:\n$$\n\\sigma_{nn} = \\boldsymbol{t} \\cdot \\boldsymbol{n} = (\\boldsymbol{\\sigma}\\boldsymbol{n}) \\cdot \\boldsymbol{n} = \\boldsymbol{n}^T \\boldsymbol{\\sigma} \\boldsymbol{n}\n$$\nThe shear traction vector $\\boldsymbol{\\tau}$ is obtained by subtracting the normal component from the total traction vector:\n$$\n\\boldsymbol{\\tau} = \\boldsymbol{t} - \\boldsymbol{\\sigma}_{n} = \\boldsymbol{t} - \\sigma_{nn} \\boldsymbol{n}\n$$\nBy construction, $\\boldsymbol{\\tau}$ is orthogonal to $\\boldsymbol{n}$, as $\\boldsymbol{\\tau} \\cdot \\boldsymbol{n} = (\\boldsymbol{t} - \\sigma_{nn} \\boldsymbol{n}) \\cdot \\boldsymbol{n} = \\boldsymbol{t} \\cdot \\boldsymbol{n} - \\sigma_{nn} (\\boldsymbol{n} \\cdot \\boldsymbol{n}) = \\sigma_{nn} - \\sigma_{nn}(1) = 0$.\nThe magnitude of the shear traction, $\\|\\boldsymbol{\\tau}\\|$, can be found from the Pythagorean theorem, since $\\boldsymbol{\\sigma}_{n}$ and $\\boldsymbol{\\tau}$ are orthogonal:\n$$\n\\|\\boldsymbol{t}\\|^2 = \\|\\boldsymbol{\\sigma}_{n}\\|^2 + \\|\\boldsymbol{\\tau}\\|^2 = (\\sigma_{nn})^2 + \\|\\boldsymbol{\\tau}\\|^2\n$$\nThis gives $\\|\\boldsymbol{\\tau}\\| = \\sqrt{\\|\\boldsymbol{t}\\|^2 - (\\sigma_{nn})^2}$.\n\nNow, we evaluate these quantities for the given $\\boldsymbol{\\sigma}$ and $\\boldsymbol{n}$.\nThe stress tensor is $\\boldsymbol{\\sigma} = \\begin{bmatrix}100  30  -20\\\\ 30  50  0\\\\ -20  0  80\\end{bmatrix}$ MPa and the normal vector is $\\boldsymbol{n} = \\frac{1}{\\sqrt{14}}\\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix}$.\n\n1.  **Traction vector $\\boldsymbol{t}(\\boldsymbol{n})$**:\n$$\n\\boldsymbol{t} = \\boldsymbol{\\sigma}\\boldsymbol{n} = \\begin{bmatrix}100  30  -20\\\\ 30  50  0\\\\ -20  0  80\\end{bmatrix} \\left( \\frac{1}{\\sqrt{14}}\\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix} \\right) = \\frac{1}{\\sqrt{14}} \\begin{pmatrix} 100(1) + 30(2) - 20(3) \\\\ 30(1) + 50(2) + 0(3) \\\\ -20(1) + 0(2) + 80(3) \\end{pmatrix}\n$$\n$$\n\\boldsymbol{t} = \\frac{1}{\\sqrt{14}} \\begin{pmatrix} 100 + 60 - 60 \\\\ 30 + 100 \\\\ -20 + 240 \\end{pmatrix} = \\frac{1}{\\sqrt{14}} \\begin{pmatrix} 100 \\\\ 130 \\\\ 220 \\end{pmatrix}\n$$\nIn component form, rationalizing the denominator:\n$t_1 = \\frac{100}{\\sqrt{14}} = \\frac{100\\sqrt{14}}{14} = \\frac{50\\sqrt{14}}{7}$\n$t_2 = \\frac{130}{\\sqrt{14}} = \\frac{130\\sqrt{14}}{14} = \\frac{65\\sqrt{14}}{7}$\n$t_3 = \\frac{220}{\\sqrt{14}} = \\frac{220\\sqrt{14}}{14} = \\frac{110\\sqrt{14}}{7}$\n\n2.  **Normal stress $\\sigma_{nn}$**:\n$$\n\\sigma_{nn} = \\boldsymbol{t} \\cdot \\boldsymbol{n} = \\left(\\frac{1}{\\sqrt{14}} \\begin{pmatrix} 100 \\\\ 130 \\\\ 220 \\end{pmatrix}\\right) \\cdot \\left(\\frac{1}{\\sqrt{14}} \\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix}\\right) = \\frac{1}{14} (100(1) + 130(2) + 220(3))\n$$\n$$\n\\sigma_{nn} = \\frac{1}{14} (100 + 260 + 660) = \\frac{1020}{14} = \\frac{510}{7}\n$$\n\n3.  **Shear traction vector $\\boldsymbol{\\tau}$**:\n$$\n\\boldsymbol{\\tau} = \\boldsymbol{t} - \\sigma_{nn} \\boldsymbol{n} = \\frac{1}{\\sqrt{14}}\\begin{pmatrix} 100 \\\\ 130 \\\\ 220 \\end{pmatrix} - \\frac{510}{7} \\left(\\frac{1}{\\sqrt{14}}\\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix}\\right)\n$$\nWe factor out $\\frac{1}{7\\sqrt{14}}$:\n$$\n\\boldsymbol{\\tau} = \\frac{1}{7\\sqrt{14}} \\left( 7 \\begin{pmatrix} 100 \\\\ 130 \\\\ 220 \\end{pmatrix} - 510 \\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix} \\right) = \\frac{1}{7\\sqrt{14}} \\begin{pmatrix} 700 - 510 \\\\ 910 - 1020 \\\\ 1540 - 1530 \\end{pmatrix} = \\frac{1}{7\\sqrt{14}} \\begin{pmatrix} 190 \\\\ -110 \\\\ 10 \\end{pmatrix}\n$$\nIn component form, rationalizing the denominator:\n$\\tau_1 = \\frac{190}{7\\sqrt{14}} = \\frac{190\\sqrt{14}}{7 \\times 14} = \\frac{190\\sqrt{14}}{98} = \\frac{95\\sqrt{14}}{49}$\n$\\tau_2 = \\frac{-110}{7\\sqrt{14}} = \\frac{-110\\sqrt{14}}{98} = -\\frac{55\\sqrt{14}}{49}$\n$\\tau_3 = \\frac{10}{7\\sqrt{14}} = \\frac{10\\sqrt{14}}{98} = \\frac{5\\sqrt{14}}{49}$\n\n4.  **Magnitude of shear traction $\\|\\boldsymbol{\\tau}\\|$**:\nWe use $\\|\\boldsymbol{\\tau}\\|^2 = \\|\\boldsymbol{t}\\|^2 - (\\sigma_{nn})^2$.\n$$\n\\|\\boldsymbol{t}\\|^2 = \\left(\\frac{100}{\\sqrt{14}}\\right)^2 + \\left(\\frac{130}{\\sqrt{14}}\\right)^2 + \\left(\\frac{220}{\\sqrt{14}}\\right)^2 = \\frac{10000 + 16900 + 48400}{14} = \\frac{75300}{14} = \\frac{37650}{7}\n$$\n$$\n(\\sigma_{nn})^2 = \\left(\\frac{510}{7}\\right)^2 = \\frac{260100}{49}\n$$\n$$\n\\|\\boldsymbol{\\tau}\\|^2 = \\frac{37650}{7} - \\frac{260100}{49} = \\frac{7 \\times 37650}{49} - \\frac{260100}{49} = \\frac{263550 - 260100}{49} = \\frac{3450}{49}\n$$\n$$\n\\|\\boldsymbol{\\tau}\\| = \\sqrt{\\frac{3450}{49}} = \\frac{\\sqrt{3450}}{7}\n$$\nTo simplify the radical, we factorize $3450$: $3450 = 345 \\times 10 = (5 \\times 69) \\times (2 \\times 5) = 2 \\times 5^2 \\times (3 \\times 23) = 25 \\times 138$.\nThus, $\\sqrt{3450} = \\sqrt{25 \\times 138} = 5\\sqrt{138}$.\n$$\n\\|\\boldsymbol{\\tau}\\| = \\frac{5\\sqrt{138}}{7}\n$$\n\nThe final quantities, expressed in MPa, are:\n-   $\\boldsymbol{t} = \\begin{pmatrix} \\frac{50\\sqrt{14}}{7}  \\frac{65\\sqrt{14}}{7}  \\frac{110\\sqrt{14}}{7} \\end{pmatrix}^T$\n-   $\\sigma_{nn} = \\frac{510}{7}$\n-   $\\boldsymbol{\\tau} = \\begin{pmatrix} \\frac{95\\sqrt{14}}{49}  -\\frac{55\\sqrt{14}}{49}  \\frac{5\\sqrt{14}}{49} \\end{pmatrix}^T$\n-   $\\|\\boldsymbol{\\tau}\\| = \\frac{5\\sqrt{138}}{7}$\n\nThese results will be compiled into the required eight-entry row matrix.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{50\\sqrt{14}}{7}  \\frac{65\\sqrt{14}}{7}  \\frac{110\\sqrt{14}}{7}  \\frac{510}{7}  \\frac{95\\sqrt{14}}{49}  -\\frac{55\\sqrt{14}}{49}  \\frac{5\\sqrt{14}}{49}  \\frac{5\\sqrt{138}}{7}\n\\end{pmatrix}\n}\n$$", "id": "2694348"}, {"introduction": "Moving from numerical computation to analytical derivation, this practice challenges you to specialize the general 3D traction formulas to the important case of 2D plane stress. This derivation reveals the origin of the classic stress transformation equations that govern how stress components change with the orientation of the plane [@problem_id:2694308]. Mastering this process provides a foundational link between abstract tensor algebra and practical engineering tools like Mohr's circle.", "problem": "Consider a homogeneous, static, two-dimensional ($2$D) plane stress state in Cartesian coordinates $(x,y)$ with Cauchy stress tensor components $\\sigma_{xx}$, $\\sigma_{yy}$, and $\\sigma_{xy}$ (with $\\sigma_{xy}=\\sigma_{yx}$). Let a plane through a material point have unit normal $\\boldsymbol{n}$ that makes an angle $\\theta$ (measured in radians) with the positive $x$-axis. Starting only from Cauchy’s traction law and the definition of normal and shear tractions, perform the following:\n\n- Derive, from first principles, explicit expressions for the normal traction $\\sigma_{nn}$ and the in-plane shear traction $\\tau_{n}$ acting on that plane as functions of $\\sigma_{xx}$, $\\sigma_{yy}$, $\\sigma_{xy}$, and $\\theta$.\n\n- Using your derived expressions, determine a closed-form expression for the maximum possible magnitude of the shear traction over all orientations $\\theta$.\n\nThen evaluate this maximum shear traction for the specific stress state with $\\sigma_{xx}=120\\,\\text{MPa}$, $\\sigma_{yy}=-60\\,\\text{MPa}$, and $\\sigma_{xy}=45\\,\\text{MPa}$. Express the final numerical answer in $\\text{MPa}$ and round your answer to four significant figures. Angles are measured in radians. Your final answer must be a single number.", "solution": "The problem statement is validated as complete, consistent, and scientifically sound. We shall proceed with the derivation from first principles as stipulated.\n\nThe state of stress at a material point is described by the Cauchy stress tensor $\\boldsymbol{\\sigma}$. In a two-dimensional ($2$D) Cartesian coordinate system $(x,y)$, for a plane stress condition, this tensor is represented by the matrix:\n$$ \\boldsymbol{\\sigma} = \\begin{pmatrix} \\sigma_{xx}  \\sigma_{xy} \\\\ \\sigma_{yx}  \\sigma_{yy} \\end{pmatrix} $$\nConsistent with the principles of continuum mechanics for non-polar materials, the stress tensor is symmetric, so $\\sigma_{xy} = \\sigma_{yx}$.\n\nA plane passing through the point is defined by its unit normal vector $\\boldsymbol{n}$. If this vector forms an angle $\\theta$ with the positive $x$-axis, its components are:\n$$ \\boldsymbol{n} = \\begin{pmatrix} \\cos\\theta \\\\ \\sin\\theta \\end{pmatrix} $$\nCauchy’s traction law states that the traction vector $\\boldsymbol{t}$ acting on this plane is the result of the action of the stress tensor on the normal vector:\n$$ \\boldsymbol{t} = \\boldsymbol{\\sigma} \\boldsymbol{n} = \\begin{pmatrix} \\sigma_{xx}  \\sigma_{xy} \\\\ \\sigma_{xy}  \\sigma_{yy} \\end{pmatrix} \\begin{pmatrix} \\cos\\theta \\\\ \\sin\\theta \\end{pmatrix} = \\begin{pmatrix} \\sigma_{xx}\\cos\\theta + \\sigma_{xy}\\sin\\theta \\\\ \\sigma_{xy}\\cos\\theta + \\sigma_{yy}\\sin\\theta \\end{pmatrix} $$\nThe components of the traction vector are $t_x = \\sigma_{xx}\\cos\\theta + \\sigma_{xy}\\sin\\theta$ and $t_y = \\sigma_{xy}\\cos\\theta + \\sigma_{yy}\\sin\\theta$.\n\nThe normal traction, $\\sigma_{nn}$, is defined as the component of the traction vector $\\boldsymbol{t}$ along the direction of the unit normal $\\boldsymbol{n}$. This is computed via the scalar product $\\boldsymbol{t} \\cdot \\boldsymbol{n}$:\n$$ \\sigma_{nn} = \\boldsymbol{t} \\cdot \\boldsymbol{n} = (\\sigma_{xx}\\cos\\theta + \\sigma_{xy}\\sin\\theta)\\cos\\theta + (\\sigma_{xy}\\cos\\theta + \\sigma_{yy}\\sin\\theta)\\sin\\theta $$\nExpanding this expression yields the first required result, the normal traction as a function of the stress components and the angle $\\theta$:\n$$ \\sigma_{nn} = \\sigma_{xx}\\cos^2\\theta + \\sigma_{yy}\\sin^2\\theta + 2\\sigma_{xy}\\sin\\theta\\cos\\theta $$\nThe in-plane shear traction, $\\tau_n$, is the component of the traction vector $\\boldsymbol{t}$ acting parallel to the plane. To find it, we first define a unit vector $\\boldsymbol{s}$ that is tangent to the plane and orthogonal to $\\boldsymbol{n}$. In the $xy$-plane, we obtain $\\boldsymbol{s}$ by rotating $\\boldsymbol{n}$ by an angle of $+\\frac{\\pi}{2}$:\n$$ \\boldsymbol{s} = \\begin{pmatrix} \\cos(\\theta+\\frac{\\pi}{2}) \\\\ \\sin(\\theta+\\frac{\\pi}{2}) \\end{pmatrix} = \\begin{pmatrix} -\\sin\\theta \\\\ \\cos\\theta \\end{pmatrix} $$\nThe shear traction is then the scalar product $\\boldsymbol{t} \\cdot \\boldsymbol{s}$:\n$$ \\tau_n = \\boldsymbol{t} \\cdot \\boldsymbol{s} = (\\sigma_{xx}\\cos\\theta + \\sigma_{xy}\\sin\\theta)(-\\sin\\theta) + (\\sigma_{xy}\\cos\\theta + \\sigma_{yy}\\sin\\theta)(\\cos\\theta) $$\nExpanding and collecting terms gives the second required result:\n$$ \\tau_n = -\\sigma_{xx}\\sin\\theta\\cos\\theta + \\sigma_{yy}\\sin\\theta\\cos\\theta + \\sigma_{xy}(\\cos^2\\theta - \\sin^2\\theta) $$\n$$ \\tau_n = -(\\sigma_{xx} - \\sigma_{yy})\\sin\\theta\\cos\\theta + \\sigma_{xy}(\\cos^2\\theta - \\sin^2\\theta) $$\nFor analytical convenience, we apply the double-angle trigonometric identities $\\sin\\theta\\cos\\theta = \\frac{1}{2}\\sin(2\\theta)$ and $\\cos^2\\theta - \\sin^2\\theta = \\cos(2\\theta)$. The expression for $\\tau_n$ becomes:\n$$ \\tau_n(\\theta) = -\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\sin(2\\theta) + \\sigma_{xy}\\cos(2\\theta) $$\nThe next task is to find the maximum possible magnitude of this shear traction, $\\tau_{max} = \\max_{\\theta}|\\tau_n(\\theta)|$. To find the extrema of $\\tau_n$, we differentiate with respect to $\\theta$ and set the derivative to zero:\n$$ \\frac{d\\tau_n}{d\\theta} = \\frac{d}{d\\theta}\\left(-\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\sin(2\\theta) + \\sigma_{xy}\\cos(2\\theta)\\right) $$\n$$ \\frac{d\\tau_n}{d\\theta} = -2\\left(\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\right)\\cos(2\\theta) - 2\\sigma_{xy}\\sin(2\\theta) = -(\\sigma_{xx} - \\sigma_{yy})\\cos(2\\theta) - 2\\sigma_{xy}\\sin(2\\theta) $$\nSetting $\\frac{d\\tau_n}{d\\theta} = 0$ provides the condition for the orientation angle $\\theta_s$ that corresponds to an extreme shear traction:\n$$ -(\\sigma_{xx} - \\sigma_{yy})\\cos(2\\theta_s) - 2\\sigma_{xy}\\sin(2\\theta_s) = 0 $$\n$$ \\tan(2\\theta_s) = -\\frac{\\sigma_{xx} - \\sigma_{yy}}{2\\sigma_{xy}} $$\nLet the magnitude of the vector with components $\\left(\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\right)$ and $\\sigma_{xy}$ be $R = \\sqrt{\\left(\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\right)^2 + \\sigma_{xy}^2}$. From the condition on $\\tan(2\\theta_s)$, the values of $\\sin(2\\theta_s)$ and $\\cos(2\\theta_s)$ at the extrema are:\n$$ \\cos(2\\theta_s) = \\pm \\frac{\\sigma_{xy}}{R} \\quad \\text{and} \\quad \\sin(2\\theta_s) = \\mp \\frac{(\\sigma_{xx} - \\sigma_{yy})/2}{R} $$\nSubstituting these into the expression for $\\tau_n$:\n$$ \\tau_n(\\theta_s) = -\\left(\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\right)\\left(\\mp \\frac{(\\sigma_{xx} - \\sigma_{yy})/2}{R}\\right) + \\sigma_{xy}\\left(\\pm \\frac{\\sigma_{xy}}{R}\\right) $$\n$$ \\tau_n(\\theta_s) = \\pm \\frac{1}{R} \\left[ \\left(\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\right)^2 + \\sigma_{xy}^2 \\right] = \\pm \\frac{R^2}{R} = \\pm R $$\nThe extreme values of the shear traction are $\\pm R$. The maximum magnitude is therefore $| \\pm R | = R$. This yields the closed-form expression for the maximum shear traction:\n$$ \\tau_{max} = \\sqrt{\\left(\\frac{\\sigma_{xx} - \\sigma_{yy}}{2}\\right)^2 + \\sigma_{xy}^2} $$\nFinally, we evaluate this expression for the given stress state: $\\sigma_{xx}=120\\,\\text{MPa}$, $\\sigma_{yy}=-60\\,\\text{MPa}$, and $\\sigma_{xy}=45\\,\\text{MPa}$. The units are implicitly megapascals ($\\text{MPa}$).\nFirst, we compute the term representing the radius of Mohr's circle in the $\\sigma-\\tau$ plane:\n$$ \\frac{\\sigma_{xx} - \\sigma_{yy}}{2} = \\frac{120 - (-60)}{2} = \\frac{180}{2} = 90 $$\nSubstitute this and the value of $\\sigma_{xy}$ into the expression for $\\tau_{max}$:\n$$ \\tau_{max} = \\sqrt{(90)^2 + (45)^2} = \\sqrt{8100 + 2025} = \\sqrt{10125} $$\nThe numerical value is calculated as:\n$$ \\tau_{max} = \\sqrt{10125} \\approx 100.623059... $$\nRounding to four significant figures, as required by the problem statement, we obtain the final numerical answer.\n$$ \\tau_{max} \\approx 100.6 $$", "answer": "$$\\boxed{100.6}$$", "id": "2694308"}, {"introduction": "This final practice addresses a cornerstone principle of continuum mechanics: objectivity, also known as frame-indifference. You will first prove analytically that scalar measures derived from the stress tensor, such as the normal and shear stress magnitudes, are invariant under rigid-body rotations [@problem_id:2694315]. You will then translate this theoretical proof into a computational algorithm to verify the principle numerically, bridging the gap between abstract physical axioms and robust modern simulation.", "problem": "You are to verify the objectivity (frame-indifference) of computed tractions for three-dimensional Cauchy stress states under superposed rigid body rotations. The fundamental base you must use is Cauchy’s traction theorem: for a continuum with Cauchy stress tensor $\\boldsymbol{\\sigma}$ and a plane with unit normal $\\boldsymbol{n}$, the traction vector on that plane is $\\boldsymbol{t}(\\boldsymbol{n}) = \\boldsymbol{\\sigma}\\,\\boldsymbol{n}$. Under a proper orthogonal rotation $\\boldsymbol{Q}$, physical objectivity requires that if both the tensor and the normal are rotated consistently, that is, $\\boldsymbol{\\sigma}' = \\boldsymbol{Q}\\,\\boldsymbol{\\sigma}\\,\\boldsymbol{Q}^{\\mathsf{T}}$ and $\\boldsymbol{n}' = \\boldsymbol{Q}\\,\\boldsymbol{n}$, then the scalar normal traction and the scalar shear traction magnitude computed from $\\boldsymbol{\\sigma}$ on $\\boldsymbol{n}$ must equal those computed from $\\boldsymbol{\\sigma}'$ on $\\boldsymbol{n}'$.\n\nTasks:\n- Starting from Cauchy’s traction theorem and the decomposition of a vector into components parallel and perpendicular to a unit vector, derive explicit expressions for the scalar normal traction $\\,\\sigma_{nn}\\,$ and the scalar shear traction magnitude $\\,\\tau\\,$ on a plane with unit normal $\\boldsymbol{n}$, in terms of $\\boldsymbol{\\sigma}$ and $\\boldsymbol{n}$. Do not assume any specific form of $\\boldsymbol{\\sigma}$ beyond symmetry of the Cauchy stress tensor and do not use any pre-derived transformation laws other than the definition of a proper orthogonal rotation (orthogonality and unit determinant). Express all steps using linear algebra identities and the properties of dot products.\n- Using your derivation, design an algorithm that, for any given $\\boldsymbol{\\sigma}$, $\\boldsymbol{n}$, and proper orthogonal $\\boldsymbol{Q}$, computes $\\,\\sigma_{nn}\\,$ and $\\,\\tau\\,$ before and after rotation and returns a boolean indicating whether both quantities are invariant within a prescribed tolerance $\\,\\varepsilon\\,$.\n\nAll stress components are given in megapascals (MPa). Although your program will internally compute quantities in MPa, the program’s final outputs are booleans and therefore unitless. All rotation angles provided below are in radians.\n\nTest suite:\nFor each test case, normalize any provided $\\boldsymbol{n}$, construct the rotation matrix $\\boldsymbol{Q}$ as specified (use the axis–angle representation and the Rodrigues rotation formula for non-identity rotations), compute the invariance checks for $\\,\\sigma_{nn}\\,$ and $\\,\\tau\\,$, and return a single boolean that is true if and only if both checks pass with absolute error not exceeding $\\varepsilon = 10^{-10}$.\n\nUse the following five test cases. In each case, the Cauchy stress tensor $\\boldsymbol{\\sigma}$ is symmetric.\n\n- Case $1$ (general off-diagonal stress, arbitrary plane, generic rotation):\n  - $\\boldsymbol{\\sigma} = \\begin{bmatrix} 120  30  -15 \\\\ 30  80  25 \\\\ -15  25  50 \\end{bmatrix}$ (MPa)\n  - $\\boldsymbol{n} = [2,\\,-1,\\,3]$ (to be normalized)\n  - Rotation axis $\\boldsymbol{a} = [1,\\,1,\\,1]$ (to be normalized), angle $\\theta = \\pi/5$\n- Case $2$ (hydrostatic stress, arbitrary plane, rotation about $z$):\n  - $\\boldsymbol{\\sigma} = 70\\,\\boldsymbol{I} = \\begin{bmatrix} 70  0  0 \\\\ 0  70  0 \\\\ 0  0  70 \\end{bmatrix}$ (MPa)\n  - $\\boldsymbol{n} = [0.3,\\,0.4,\\,0.8660254037844386]$ (to be normalized)\n  - Rotation axis $\\boldsymbol{a} = [0,\\,0,\\,1]$, angle $\\theta = \\pi/3$\n- Case $3$ (pure shear, plane normal along a coordinate axis, rotation about $y$ by right angle):\n  - $\\boldsymbol{\\sigma} = \\begin{bmatrix} 0  40  0 \\\\ 40  0  0 \\\\ 0  0  0 \\end{bmatrix}$ (MPa)\n  - $\\boldsymbol{n} = [1,\\,0,\\,0]$ (already unit)\n  - Rotation axis $\\boldsymbol{a} = [0,\\,1,\\,0]$, angle $\\theta = \\pi/2$\n- Case $4$ (generic symmetric stress, identity rotation as boundary case):\n  - $\\boldsymbol{\\sigma} = \\begin{bmatrix} 35  -10  5 \\\\ -10  60  -20 \\\\ 5  -20  90 \\end{bmatrix}$ (MPa)\n  - $\\boldsymbol{n} = [-2,\\,1,\\,2]$ (to be normalized)\n  - $\\boldsymbol{Q} = \\boldsymbol{I}$ (identity rotation)\n- Case $5$ (diagonal stress with distinct principal values, $180$-degree rotation about $y$):\n  - $\\boldsymbol{\\sigma} = \\operatorname{diag}(200,\\,100,\\,50)$ (MPa)\n  - $\\boldsymbol{n} = [-0.5,\\,0.7,\\,-0.5]$ (to be normalized)\n  - Rotation axis $\\boldsymbol{a} = [0,\\,1,\\,0]$, angle $\\theta = \\pi$\n\nFinal output format:\n- Your program must produce a single line of output containing a Python-style list of booleans, one per test case in the order given above, with no spaces, for example, \"[True,False,True,True,False]\".", "solution": "The problem as stated is valid. It is scientifically grounded in the principles of continuum mechanics, well-posed with a unique and verifiable solution path, and formulated with objective, unambiguous terminology. It constitutes a standard exercise in demonstrating the principle of material frame-indifference for scalar quantities derived from the Cauchy stress tensor. I will proceed with the required derivation and algorithmic solution.\n\nThe task is to first derive analytical expressions for the scalar normal traction, $\\sigma_{nn}$, and the scalar shear traction magnitude, $\\tau$, and then to demonstrate their invariance under a rigid body rotation. This invariance is a manifestation of the principle of objectivity, which mandates that constitutive laws and derived physical quantities must be independent of the observer's reference frame.\n\nThe derivation begins with Cauchy's traction theorem, which relates the traction vector $\\boldsymbol{t}$ acting on a surface to the Cauchy stress tensor $\\boldsymbol{\\sigma}$ and the unit normal vector $\\boldsymbol{n}$ of the surface:\n$$ \\boldsymbol{t}(\\boldsymbol{n}) = \\boldsymbol{\\sigma}\\boldsymbol{n} $$\nHere, $\\boldsymbol{\\sigma}$ is a symmetric second-order tensor. The traction vector $\\boldsymbol{t}$ can be decomposed into two orthogonal components: a normal component $\\boldsymbol{t}_n$ parallel to $\\boldsymbol{n}$, and a shear component $\\boldsymbol{t}_s$ perpendicular to $\\boldsymbol{n}$.\n$$ \\boldsymbol{t} = \\boldsymbol{t}_n + \\boldsymbol{t}_s $$\n\nThe scalar normal traction, $\\sigma_{nn}$, is the component of the traction vector $\\boldsymbol{t}$ in the direction of the unit normal $\\boldsymbol{n}$. It is obtained by the scalar projection of $\\boldsymbol{t}$ onto $\\boldsymbol{n}$:\n$$ \\sigma_{nn} = \\boldsymbol{t} \\cdot \\boldsymbol{n} $$\nSubstituting the expression for $\\boldsymbol{t}$ from Cauchy's theorem gives the explicit formula for $\\sigma_{nn}$ in terms of $\\boldsymbol{\\sigma}$ and $\\boldsymbol{n}$:\n$$ \\sigma_{nn} = (\\boldsymbol{\\sigma}\\boldsymbol{n}) \\cdot \\boldsymbol{n} $$\nIn matrix notation, where vectors are columns, this dot product is equivalent to $\\boldsymbol{n}^{\\mathsf{T}}(\\boldsymbol{\\sigma}\\boldsymbol{n})$. Thus, we have:\n$$ \\sigma_{nn} = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{\\sigma}\\boldsymbol{n} $$\n\nThe shear traction vector is $\\boldsymbol{t}_s = \\boldsymbol{t} - \\boldsymbol{t}_n$. The normal traction vector is $\\boldsymbol{t}_n = \\sigma_{nn}\\boldsymbol{n}$. Because the decomposition is into orthogonal components, we can apply the Pythagorean theorem to the magnitudes of the vectors:\n$$ \\|\\boldsymbol{t}\\|^2 = \\|\\boldsymbol{t}_n\\|^2 + \\|\\boldsymbol{t}_s\\|^2 $$\nThe scalar shear traction magnitude, $\\tau$, is defined as the magnitude of the shear traction vector, $\\tau = \\|\\boldsymbol{t}_s\\|$. The squared magnitude of the normal component is $\\|\\boldsymbol{t}_n\\|^2 = (\\sigma_{nn}\\boldsymbol{n}) \\cdot (\\sigma_{nn}\\boldsymbol{n}) = \\sigma_{nn}^2 (\\boldsymbol{n} \\cdot \\boldsymbol{n}) = \\sigma_{nn}^2$, since $\\boldsymbol{n}$ is a unit vector.\nTherefore, the squared shear traction magnitude is:\n$$ \\tau^2 = \\|\\boldsymbol{t}\\|^2 - \\sigma_{nn}^2 $$\nThe squared magnitude of the total traction vector is $\\|\\boldsymbol{t}\\|^2 = \\boldsymbol{t} \\cdot \\boldsymbol{t} = (\\boldsymbol{\\sigma}\\boldsymbol{n}) \\cdot (\\boldsymbol{\\sigma}\\boldsymbol{n})$. In matrix notation, this is $(\\boldsymbol{\\sigma}\\boldsymbol{n})^{\\mathsf{T}}(\\boldsymbol{\\sigma}\\boldsymbol{n}) = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{\\sigma}^{\\mathsf{T}}\\boldsymbol{\\sigma}\\boldsymbol{n}$.\nSo, the final expression for the scalar shear traction magnitude is:\n$$ \\tau = \\sqrt{\\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{\\sigma}^{\\mathsf{T}}\\boldsymbol{\\sigma}\\boldsymbol{n} - \\left(\\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{\\sigma}\\boldsymbol{n}\\right)^2} $$\n\nNext, we must demonstrate the objectivity of these scalar quantities. Under a rigid body rotation described by a proper orthogonal matrix $\\boldsymbol{Q}$ (where $\\boldsymbol{Q}^{\\mathsf{T}}\\boldsymbol{Q} = \\boldsymbol{I}$ and $\\det(\\boldsymbol{Q}) = 1$), the stress tensor and normal vector transform as:\n$$ \\boldsymbol{\\sigma}' = \\boldsymbol{Q}\\boldsymbol{\\sigma}\\boldsymbol{Q}^{\\mathsf{T}} $$\n$$ \\boldsymbol{n}' = \\boldsymbol{Q}\\boldsymbol{n} $$\nWe must show that $\\sigma'_{nn} = \\sigma_{nn}$ and $\\tau' = \\tau$.\n\nFor the normal traction, $\\sigma'_{nn}$, we substitute the transformed quantities into its definition:\n$$ \\sigma'_{nn} = (\\boldsymbol{n}')^{\\mathsf{T}}\\boldsymbol{\\sigma}'\\boldsymbol{n}' = (\\boldsymbol{Q}\\boldsymbol{n})^{\\mathsf{T}} (\\boldsymbol{Q}\\boldsymbol{\\sigma}\\boldsymbol{Q}^{\\mathsf{T}}) (\\boldsymbol{Q}\\boldsymbol{n}) $$\nUsing the transpose property $(\\boldsymbol{A}\\boldsymbol{B})^{\\mathsf{T}} = \\boldsymbol{B}^{\\mathsf{T}}\\boldsymbol{A}^{\\mathsf{T}}$, we have $(\\boldsymbol{Q}\\boldsymbol{n})^{\\mathsf{T}} = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{Q}^{\\mathsf{T}}$. The expression becomes:\n$$ \\sigma'_{nn} = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{Q}^{\\mathsf{T}} \\boldsymbol{Q}\\boldsymbol{\\sigma}\\boldsymbol{Q}^{\\mathsf{T}} \\boldsymbol{Q}\\boldsymbol{n} $$\nSince $\\boldsymbol{Q}$ is orthogonal, $\\boldsymbol{Q}^{\\mathsf{T}}\\boldsymbol{Q} = \\boldsymbol{I}$, the identity matrix. This simplifies the expression to:\n$$ \\sigma'_{nn} = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{I}\\boldsymbol{\\sigma}\\boldsymbol{I}\\boldsymbol{n} = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{\\sigma}\\boldsymbol{n} = \\sigma_{nn} $$\nThis proves that the scalar normal traction is invariant under rigid body rotations.\n\nFor the shear traction magnitude, $\\tau'$, its squared value is $(\\tau')^2 = \\|\\boldsymbol{t}'\\|^2 - (\\sigma'_{nn})^2$. We have already proven that $\\sigma'_{nn} = \\sigma_{nn}$. We now need to show that the squared magnitude of the traction vector, $\\|\\boldsymbol{t}\\|^2$, is also invariant. The transformed traction vector $\\boldsymbol{t}'$ is:\n$$ \\boldsymbol{t}' = \\boldsymbol{\\sigma}'\\boldsymbol{n}' = (\\boldsymbol{Q}\\boldsymbol{\\sigma}\\boldsymbol{Q}^{\\mathsf{T}})(\\boldsymbol{Q}\\boldsymbol{n}) = \\boldsymbol{Q}\\boldsymbol{\\sigma}(\\boldsymbol{Q}^{\\mathsf{T}}\\boldsymbol{Q})\\boldsymbol{n} = \\boldsymbol{Q}\\boldsymbol{\\sigma}\\boldsymbol{I}\\boldsymbol{n} = \\boldsymbol{Q}(\\boldsymbol{\\sigma}\\boldsymbol{n}) = \\boldsymbol{Q}\\boldsymbol{t} $$\nThe transformed traction vector is simply the original traction vector rotated by $\\boldsymbol{Q}$. The magnitude of a vector is invariant under rotation. Formally:\n$$ \\|\\boldsymbol{t}'\\|^2 = \\boldsymbol{t}' \\cdot \\boldsymbol{t}' = (\\boldsymbol{Q}\\boldsymbol{t}) \\cdot (\\boldsymbol{Q}\\boldsymbol{t}) = (\\boldsymbol{Q}\\boldsymbol{t})^{\\mathsf{T}}(\\boldsymbol{Q}\\boldsymbol{t}) = \\boldsymbol{t}^{\\mathsf{T}}\\boldsymbol{Q}^{\\mathsf{T}}\\boldsymbol{Q}\\boldsymbol{t} = \\boldsymbol{t}^{\\mathsf{T}}\\boldsymbol{I}\\boldsymbol{t} = \\boldsymbol{t}^{\\mathsf{T}}\\boldsymbol{t} = \\|\\boldsymbol{t}\\|^2 $$\nSince both terms in the expression for $\\tau^2$ are invariant, $\\tau^2$ itself is invariant:\n$$ (\\tau')^2 = \\|\\boldsymbol{t}'\\|^2 - (\\sigma'_{nn})^2 = \\|\\boldsymbol{t}\\|^2 - \\sigma_{nn}^2 = \\tau^2 $$\nTherefore, $\\tau' = \\tau$, proving the invariance of the scalar shear traction magnitude.\n\nThe algorithm to verify this numerically for each test case is as follows:\n$1$. For a given stress tensor $\\boldsymbol{\\sigma}$, a raw normal vector $\\boldsymbol{n}_{raw}$, and rotation parameters (axis $\\boldsymbol{a}_{raw}$, angle $\\theta$), first normalize the vectors: $\\boldsymbol{n} = \\boldsymbol{n}_{raw} / \\|\\boldsymbol{n}_{raw}\\|$ and, if applicable, $\\boldsymbol{a} = \\boldsymbol{a}_{raw} / \\|\\boldsymbol{a}_{raw}\\|$.\n$2$. Calculate the pre-rotation quantities: $\\sigma_{nn} = \\boldsymbol{n}^{\\mathsf{T}}\\boldsymbol{\\sigma}\\boldsymbol{n}$ and $\\tau = \\sqrt{(\\boldsymbol{\\sigma}\\boldsymbol{n})^{\\mathsf{T}}(\\boldsymbol{\\sigma}\\boldsymbol{n}) - \\sigma_{nn}^2}$.\n$3$. Construct the rotation matrix $\\boldsymbol{Q}$. For a rotation about axis $\\boldsymbol{a}$ by angle $\\theta$, use the Rodrigues' rotation formula: $\\boldsymbol{Q} = \\boldsymbol{I} + \\sin(\\theta)\\boldsymbol{K} + (1 - \\cos(\\theta))\\boldsymbol{K}^2$, where $\\boldsymbol{K}$ is the cross-product matrix of $\\boldsymbol{a}$. For an identity rotation, $\\boldsymbol{Q} = \\boldsymbol{I}$.\n$4$. Compute the transformed quantities: $\\boldsymbol{\\sigma}' = \\boldsymbol{Q}\\boldsymbol{\\sigma}\\boldsymbol{Q}^{\\mathsf{T}}$ and $\\boldsymbol{n}' = \\boldsymbol{Q}\\boldsymbol{n}$.\n$5$. Calculate the post-rotation quantities: $\\sigma'_{nn} = (\\boldsymbol{n}')^{\\mathsf{T}}\\boldsymbol{\\sigma}'\\boldsymbol{n}'$ and $\\tau' = \\sqrt{(\\boldsymbol{\\sigma}'\\boldsymbol{n}')^{\\mathsf{T}}(\\boldsymbol{\\sigma}'\\boldsymbol{n}') - (\\sigma'_{nn})^2}$.\n$6$. Compare the pre- and post-rotation values. The invariance check passes if $|\\sigma_{nn} - \\sigma'_{nn}| \\le \\varepsilon$ and $|\\tau - \\tau'| \\le \\varepsilon$, where the tolerance $\\varepsilon = 10^{-10}$. A single boolean `True` is returned if both checks pass, otherwise `False`.\n\nThis procedure will be implemented for all provided test cases. Since the principle of objectivity is a fundamental axiom of continuum mechanics, we expect the invariance to hold true for all cases, and the program should return `True` for each.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Verifies the objectivity of scalar normal and shear tractions\n    for given Cauchy stress states under rigid body rotations.\n    \"\"\"\n\n    # Tolerance for floating-point comparisons\n    epsilon = 1e-10\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple of (sigma, n_raw, rotation_params).\n    # rotation_params is either (axis, angle) or None for identity.\n    test_cases = [\n        # Case 1\n        (\n            [[120, 30, -15], [30, 80, 25], [-15, 25, 50]],\n            [2, -1, 3],\n            ([1, 1, 1], np.pi / 5)\n        ),\n        # Case 2\n        (\n            [[70, 0, 0], [0, 70, 0], [0, 0, 70]],\n            [0.3, 0.4, 0.8660254037844386],\n            ([0, 0, 1], np.pi / 3)\n        ),\n        # Case 3\n        (\n            [[0, 40, 0], [40, 0, 0], [0, 0, 0]],\n            [1, 0, 0],\n            ([0, 1, 0], np.pi / 2)\n        ),\n        # Case 4\n        (\n            [[35, -10, 5], [-10, 60, -20], [5, -20, 90]],\n            [-2, 1, 2],\n            None  # Indicates identity rotation_params\n        ),\n        # Case 5\n        (\n            [[200, 0, 0], [0, 100, 0], [0, 0, 50]],\n            [-0.5, 0.7, -0.5],\n            ([0, 1, 0], np.pi)\n        ),\n    ]\n\n    def build_rodrigues_q(axis_raw, angle):\n        \"\"\"Builds a rotation matrix using Rodrigues' formula.\"\"\"\n        axis = np.asarray(axis_raw, dtype=float)\n        norm_axis = np.linalg.norm(axis)\n        if norm_axis  1e-12:  # Handle zero vector case\n            return np.eye(3)\n        axis = axis / norm_axis\n        \n        a_x, a_y, a_z = axis\n        \n        # Cross-product matrix K\n        K = np.array([\n            [0, -a_z, a_y],\n            [a_z, 0, -a_x],\n            [-a_y, a_x, 0]\n        ])\n        \n        I = np.eye(3)\n        # Rodrigues' formula: Q = I + sin(theta)*K + (1-cos(theta))*K^2\n        Q = I + np.sin(angle) * K + (1 - np.cos(angle)) * (K @ K)\n        return Q\n\n    def calculate_tractions(sigma, n):\n        \"\"\"Calculates scalar normal and shear tractions.\"\"\"\n        # Ensure n is a unit vector for correct calculations\n        # Normalization is expected to be done prior to calling this function.\n        t = sigma @ n\n        sigma_nn = n @ t\n        # tau^2 = ||t||^2 - sigma_nn^2\n        tau_squared = np.dot(t, t) - sigma_nn**2\n        # Handle potential small negative values from floating point error\n        tau = np.sqrt(max(0, tau_squared))\n        return sigma_nn, tau\n\n    results = []\n    for case in test_cases:\n        sigma_raw, n_raw, rotation_params = case\n        \n        sigma = np.array(sigma_raw, dtype=float)\n        n = np.array(n_raw, dtype=float)\n        # Normalize the normal vector n\n        n = n / np.linalg.norm(n)\n        \n        # --- Pre-rotation calculations ---\n        sigma_nn_pre, tau_pre = calculate_tractions(sigma, n)\n        \n        # --- Construct rotation matrix Q ---\n        if rotation_params is None: # Case 4: Q = I\n            Q = np.eye(3)\n        else:\n            axis_raw, angle = rotation_params\n            Q = build_rodrigues_q(axis_raw, angle)\n            \n        # --- Post-rotation calculations ---\n        # Transform stress tensor and normal vector\n        sigma_prime = Q @ sigma @ Q.T\n        n_prime = Q @ n\n        \n        # Calculate tractions for the rotated state\n        sigma_nn_post, tau_post = calculate_tractions(sigma_prime, n_prime)\n\n        # --- Invariance check ---\n        is_invariant_sigma_nn = np.abs(sigma_nn_pre - sigma_nn_post) = epsilon\n        is_invariant_tau = np.abs(tau_pre - tau_post) = epsilon\n        \n        results.append(is_invariant_sigma_nn and is_invariant_tau)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2694315"}]}