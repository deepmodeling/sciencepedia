{"hands_on_practices": [{"introduction": "To truly understand continuum mechanics, we must first build a solid intuition for how deformations are described mathematically. This practice focuses on the most fundamental concept: the push-forward of a material vector via the deformation gradient $\\mathbf{F}$. By working through a concrete example [@problem_id:2677197], you will compute $\\mathbf{F}$ directly from a given motion and see how it transforms, or \"pushes forward,\" a vector from the reference to the current configuration, providing a tangible sense of local stretching and distortion.", "problem": "In a three-dimensional deformation of a solid, the motion map from the reference configuration to the current configuration is given by the mapping $\\varphi:\\mathbb{R}^{3}\\to\\mathbb{R}^{3}$ defined by $\\varphi(X)=\\left(X_{1}^{2},\\,X_{2},\\,X_{3}\\right)$, where $X=\\left(X_{1},X_{2},X_{3}\\right)$ are material coordinates. Let $V_{X}=\\left(1,2,3\\right)$ be a material tangent vector anchored at the material point $X=\\left(1,0,0\\right)$. \n\nTasks:\n- Using only the fundamental definition of the deformation gradient as the material gradient of the motion map, compute the deformation gradient $\\mathbf{F}(X)$ and evaluate it at $X=\\left(1,0,0\\right)$.\n- Using only the definition of the push-forward as the action of the tangent map of $\\varphi$ at $X$ on the material vector, compute the pushed-forward spatial vector $v_{x}$ at the image point $x=\\varphi\\left(1,0,0\\right)$.\n- Interpret the geometric meaning of $\\mathbf{F}$ and the push-forward at $X=\\left(1,0,0\\right)$ in terms of local stretch, shear, and volume change.\n\nAs the final reported quantity, provide the scalar Jacobian $J\\left(1,0,0\\right)=\\det\\mathbf{F}\\left(1,0,0\\right)$ as an exact dimensionless number. No rounding is necessary. Your reasoning should begin from fundamental definitions and proceed step by step.", "solution": "The problem statement must first be rigorously validated for its scientific and logical integrity.\n\nStep 1: Extract Givens.\n- The motion map is given as $\\varphi: \\mathbb{R}^{3} \\to \\mathbb{R}^{3}$, defined by $\\varphi(X) = (X_{1}^{2}, X_{2}, X_{3})$.\n- The material coordinates are $X = (X_1, X_2, X_3)$.\n- A material tangent vector is given as $V_{X} = (1, 2, 3)$.\n- The point of interest in the reference configuration is $X = (1, 0, 0)$.\n\nStep 2: Validate Using Extracted Givens.\n- The problem is **scientifically grounded** as it pertains to fundamental concepts of continuum mechanics, namely the deformation gradient and the push-forward operation.\n- The problem is **well-posed** because all necessary data—the explicit form of the motion map and the specific material point and vector—are provided to compute the required quantities.\n- The problem is **objective** and free of subjective or ambiguous language.\n- The specific motion map $\\varphi(X)=(X_1^2, X_2, X_3)$ is globally non-invertible, as points with coordinates $(X_1, X_2, X_3)$ and $(-X_1, X_2, X_3)$ are mapped to the same spatial point. This would imply interpenetration of matter for a body occupying a domain symmetric about the $X_1=0$ plane. However, the problem poses a local analysis at the point $X=(1,0,0)$, where the map is locally invertible (as will be shown by the non-zero Jacobian). Therefore, the problem is a valid exercise in local deformation theory. The problem is not flawed.\n\nVerdict: The problem is valid. We proceed to the solution.\n\nThe solution will be constructed from first principles as required.\n\nFirst, we compute the deformation gradient $\\mathbf{F}(X)$. By its fundamental definition, the deformation gradient is the material gradient of the motion map $\\varphi(X)$. In component form, its entries are given by $F_{ij} = \\frac{\\partial \\varphi_i}{\\partial X_j}$, where $\\varphi_i$ are the components of the spatial position vector $x = \\varphi(X)$.\nLet $x = (x_1, x_2, x_3) = \\varphi(X)$. The components are:\n$x_1(X) = X_1^2$\n$x_2(X) = X_2$\n$x_3(X) = X_3$\n\nWe compute the partial derivatives with respect to the material coordinates $X_j$:\n$\\frac{\\partial x_1}{\\partial X_1} = 2X_1$, $\\frac{\\partial x_1}{\\partial X_2} = 0$, $\\frac{\\partial x_1}{\\partial X_3} = 0$\n$\\frac{\\partial x_2}{\\partial X_1} = 0$, $\\frac{\\partial x_2}{\\partial X_2} = 1$, $\\frac{\\partial x_2}{\\partial X_3} = 0$\n$\\frac{\\partial x_3}{\\partial X_1} = 0$, $\\frac{\\partial x_3}{\\partial X_2} = 0$, $\\frac{\\partial x_3}{\\partial X_3} = 1$\n\nAssembling these components into a matrix gives the deformation gradient $\\mathbf{F}(X)$:\n$$\n\\mathbf{F}(X) = \\nabla_{X} \\varphi(X) = \n\\begin{pmatrix}\n\\frac{\\partial x_1}{\\partial X_1} & \\frac{\\partial x_1}{\\partial X_2} & \\frac{\\partial x_1}{\\partial X_3} \\\\\n\\frac{\\partial x_2}{\\partial X_1} & \\frac{\\partial x_2}{\\partial X_2} & \\frac{\\partial x_2}{\\partial X_3} \\\\\n\\frac{\\partial x_3}{\\partial X_1} & \\frac{\\partial x_3}{\\partial X_2} & \\frac{\\partial x_3}{\\partial X_3}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n2X_1 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{pmatrix}\n$$\nWe must evaluate this tensor at the specified material point $X = (1, 0, 0)$.\n$$\n\\mathbf{F}(1,0,0) = \n\\begin{pmatrix}\n2(1) & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n2 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{pmatrix}\n$$\n\nSecond, we compute the pushed-forward spatial vector $v_x$. The push-forward operation maps a material vector $V_X$ in the tangent space of the reference configuration to a spatial vector $v_x$ in the tangent space of the current configuration. By definition, this is accomplished by the action of the tangent map, which is represented by the deformation gradient $\\mathbf{F}$.\nThe relation is $v_x = \\mathbf{F}(X) V_X$.\nThe material vector is given as $V_X = (1, 2, 3)$, which we represent as a column matrix for calculation. The point of evaluation is $X = (1,0,0)$, and its spatial image is $x = \\varphi(1,0,0) = (1^2, 0, 0) = (1,0,0)$.\n$$\nv_x = \\mathbf{F}(1,0,0) V_X = \n\\begin{pmatrix}\n2 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 \\\\\n2 \\\\\n3\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n(2)(1) + (0)(2) + (0)(3) \\\\\n(0)(1) + (1)(2) + (0)(3) \\\\\n(0)(1) + (0)(2) + (1)(3)\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n2 \\\\\n2 \\\\\n3\n\\end{pmatrix}\n$$\nThus, the pushed-forward vector at $x = (1,0,0)$ is $v_x = (2, 2, 3)$.\n\nThird, we provide a geometric interpretation. The deformation gradient $\\mathbf{F}$ maps an infinitesimal material line element $d\\mathbf{X}$ to an infinitesimal spatial line element $d\\mathbf{x}$ via $d\\mathbf{x} = \\mathbf{F} d\\mathbf{X}$. At $X = (1,0,0)$, $\\mathbf{F}$ is a diagonal matrix.\n- **Stretch**: The diagonal elements of $\\mathbf{F}$ represent the stretches along the corresponding coordinate axes, assuming these are the principal directions of stretch. At $X=(1,0,0)$, the principal stretches are $\\lambda_1 = 2$, $\\lambda_2 = 1$, and $\\lambda_3 = 1$. This means an infinitesimal line element aligned with the $X_1$ direction is stretched by a factor of $2$, while line elements along the $X_2$ and $X_3$ directions maintain their original length.\n- **Shear**: The off-diagonal terms of $\\mathbf{F}$ are all zero. This indicates that there is no shear deformation at this point with respect to the Cartesian basis.  The angles between infinitesimal line elements initially aligned with the coordinate axes are preserved during the deformation.\n- **Volume Change**: The local change in volume is quantified by the Jacobian determinant $J = \\det(\\mathbf{F})$, which represents the ratio of an infinitesimal volume element in the current configuration to its corresponding volume in the reference configuration. We compute the Jacobian at the point of interest.\n$$\nJ(1,0,0) = \\det \\mathbf{F}(1,0,0) = \\det\n\\begin{pmatrix}\n2 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{pmatrix}\n= (2)(1)(1) = 2\n$$\nA value of $J=2$ indicates that an infinitesimal volume of material at $X=(1,0,0)$ has its volume doubled upon deformation. The motion is locally volume-increasing.\n\nThe push-forward of $V_X=(1,2,3)$ to $v_x=(2,2,3)$ demonstrates this transformation on a specific vector. The component of $V_X$ along the $E_1$ axis is stretched by a factor of $2$, while its other components are unchanged, consistent with the principal stretches.\n\nThe problem asks for the scalar Jacobian $J(1,0,0)$ as the final reported quantity. Based on the preceding derivation, this value is $2$.", "answer": "$$\\boxed{2}$$", "id": "2677197"}, {"introduction": "While the push-forward tells us where material fibers go, the pull-back operation is key to measuring how their lengths and the angles between them have changed. This practice transitions from transforming vectors to quantifying strain by pulling back the geometry of the deformed space. Starting from first principles [@problem_id:2677207], you will derive the right Cauchy-Green tensor $\\mathbf{C}$ and the Green-Lagrange strain tensor $\\mathbf{E}$, revealing how these crucial measures of deformation arise naturally from comparing the metric of the spatial configuration with that of the reference configuration.", "problem": "A hyperelastic body undergoes a homogeneous triaxial stretch from a reference configuration $\\mathcal{B}_0$ to a current configuration $\\mathcal{B}$. The motion is given by a mapping $\\varphi:\\mathbb{R}^3 \\to \\mathbb{R}^3$ that is linear with a constant deformation gradient $\\mathbf{F}$ aligned with an orthonormal material basis. Assume both the reference and current configurations are endowed with the standard Euclidean metric so that inner products are computed with the identity tensor $\\mathbf{I}$. Suppose\n$$\n\\mathbf{F}=\\operatorname{diag}(\\lambda_1,\\lambda_2,\\lambda_3)\n$$\nwith $\\lambda_i>0$ for $i=1,2,3$.\n\nUsing only the following foundational definitions:\n- The push-forward of a referential line element $\\mathrm{d}\\mathbf{X}$ is the spatial line element $\\mathrm{d}\\mathbf{x}=\\mathbf{F}\\,\\mathrm{d}\\mathbf{X}$.\n- The pull-back induced quadratic form satisfies $|\\mathrm{d}\\mathbf{x}|^2=\\mathrm{d}\\mathbf{X}\\cdot(\\mathbf{C}\\,\\mathrm{d}\\mathbf{X})$, which defines the right Cauchy–Green tensor $\\mathbf{C}$.\n- The Green–Lagrange strain tensor $\\mathbf{E}$ is the Lagrangian strain that measures the quadratic change of length so that $|\\mathrm{d}\\mathbf{x}|^2-|\\mathrm{d}\\mathbf{X}|^2=2\\,\\mathrm{d}\\mathbf{X}\\cdot(\\mathbf{E}\\,\\mathrm{d}\\mathbf{X})$.\n\nPerform the following:\n1) Starting from the definitions of push-forward and pull-back given above, derive an explicit expression for the right Cauchy–Green tensor $\\mathbf{C}$ in terms of $\\mathbf{F}$.\n2) From the definition of the Green–Lagrange strain tensor $\\mathbf{E}$ as the Lagrangian measure of the change in squared length, derive $\\mathbf{E}$ in terms of $\\mathbf{C}$.\n3) Specialize to the given $\\mathbf{F}=\\operatorname{diag}(\\lambda_1,\\lambda_2,\\lambda_3)$ and compute $\\mathbf{C}$ and $\\mathbf{E}$ in the material principal basis. Interpret the principal stretches in this case, and express the principal Green–Lagrange strains $(E_1,E_2,E_3)$ as functions of $(\\lambda_1,\\lambda_2,\\lambda_3)$.\n\nReport your final answer as the ordered triple $(E_1,E_2,E_3)$ using a row matrix. No numerical substitution is required, and no rounding is needed. Units are not required because the strains are dimensionless.", "solution": "The problem presented is a standard exercise in the kinematics of continuum mechanics. It is well-posed, scientifically grounded, and contains all necessary information for a rigorous derivation. We shall proceed with the solution.\n\nThe analysis begins with the fundamental definitions provided. We are given the push-forward of a referential line element $\\mathrm{d}\\mathbf{X}$ into a spatial line element $\\mathrm{d}\\mathbf{x}$ as:\n$$\n\\mathrm{d}\\mathbf{x} = \\mathbf{F} \\, \\mathrm{d}\\mathbf{X}\n$$\nHere, $\\mathbf{F}$ is the deformation gradient tensor.\n\nThe first task is to derive the right Cauchy–Green tensor, $\\mathbf{C}$, from the given definitions. The squared length of the spatial line element, $|\\mathrm{d}\\mathbf{x}|^2$, can be expressed using the standard Euclidean inner product, which is assumed for the spatial configuration:\n$$\n|\\mathrm{d}\\mathbf{x}|^2 = \\mathrm{d}\\mathbf{x} \\cdot \\mathrm{d}\\mathbf{x}\n$$\nSubstituting the push-forward relation into this expression yields:\n$$\n|\\mathrm{d}\\mathbf{x}|^2 = (\\mathbf{F} \\, \\mathrm{d}\\mathbf{X}) \\cdot (\\mathbf{F} \\, \\mathrm{d}\\mathbf{X})\n$$\nBy the definition of the transpose of a second-order tensor, for any vectors $\\mathbf{u}$ and $\\mathbf{v}$, we have $(\\mathbf{A}\\mathbf{u}) \\cdot \\mathbf{v} = \\mathbf{u} \\cdot (\\mathbf{A}^T\\mathbf{v})$. Applying this property, we can write:\n$$\n(\\mathbf{F} \\, \\mathrm{d}\\mathbf{X}) \\cdot (\\mathbf{F} \\, \\mathrm{d}\\mathbf{X}) = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{F}^T (\\mathbf{F} \\, \\mathrm{d}\\mathbf{X})) = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{F}^T \\mathbf{F} \\, \\mathrm{d}\\mathbf{X})\n$$\nSo, we have established the relationship:\n$$\n|\\mathrm{d}\\mathbf{x}|^2 = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{F}^T \\mathbf{F} \\, \\mathrm{d}\\mathbf{X})\n$$\nThe problem states that the tensor $\\mathbf{C}$ is defined by the pull-back of the spatial metric, which gives the quadratic form:\n$$\n|\\mathrm{d}\\mathbf{x}|^2 = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{C} \\, \\mathrm{d}\\mathbf{X})\n$$\nBy comparing these two expressions for $|\\mathrm{d}\\mathbf{x}|^2$, we see that for any arbitrary line element $\\mathrm{d}\\mathbf{X}$, the equality $\\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{F}^T \\mathbf{F} \\, \\mathrm{d}\\mathbf{X}) = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{C} \\, \\mathrm{d}\\mathbf{X})$ must hold. This implies that the tensors within the quadratic forms must be identical. Thus, we derive the expression for the right Cauchy–Green tensor:\n$$\n\\mathbf{C} = \\mathbf{F}^T \\mathbf{F}\n$$\nThis completes the first task.\n\nThe second task is to derive the Green–Lagrange strain tensor, $\\mathbf{E}$, in terms of $\\mathbf{C}$. We are given its definition as the measure of the quadratic change in length:\n$$\n2 \\, \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{E} \\, \\mathrm{d}\\mathbf{X}) = |\\mathrm{d}\\mathbf{x}|^2 - |\\mathrm{d}\\mathbf{X}|^2\n$$\nThe squared length in the reference configuration, $|\\mathrm{d}\\mathbf{X}|^2$, is given by the Euclidean metric in that configuration, which corresponds to the identity tensor $\\mathbf{I}$:\n$$\n|\\mathrm{d}\\mathbf{X}|^2 = \\mathrm{d}\\mathbf{X} \\cdot \\mathrm{d}\\mathbf{X} = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{I} \\, \\mathrm{d}\\mathbf{X})\n$$\nWe substitute the expressions for $|\\mathrm{d}\\mathbf{x}|^2$ (in terms of $\\mathbf{C}$) and $|\\mathrm{d}\\mathbf{X}|^2$ into the definition of $\\mathbf{E}$:\n$$\n2 \\, \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{E} \\, \\mathrm{d}\\mathbf{X}) = \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{C} \\, \\mathrm{d}\\mathbf{X}) - \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{I} \\, \\mathrm{d}\\mathbf{X})\n$$\nUsing the linearity of the inner product, we combine the terms on the right-hand side:\n$$\n2 \\, \\mathrm{d}\\mathbf{X} \\cdot (\\mathbf{E} \\, \\mathrm{d}\\mathbf{X}) = \\mathrm{d}\\mathbf{X} \\cdot ((\\mathbf{C} - \\mathbf{I}) \\, \\mathrm{d}\\mathbf{X})\n$$\nThis equation must hold for any $\\mathrm{d}\\mathbf{X}$, which implies the equality of the symmetric parts of the tensors inside the quadratic forms. Since $\\mathbf{C}$ is symmetric by construction ($\\mathbf{C}^T = (\\mathbf{F}^T\\mathbf{F})^T = \\mathbf{F}^T(\\mathbf{F}^T)^T = \\mathbf{F}^T\\mathbf{F}=\\mathbf{C}$), and $\\mathbf{I}$ and $\\mathbf{E}$ are symmetric by definition, we can directly equate the tensors:\n$$\n2\\mathbf{E} = \\mathbf{C} - \\mathbf{I}\n$$\nFrom this, we obtain the expression for the Green–Lagrange strain tensor:\n$$\n\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I})\n$$\nThis completes the second task.\n\nThe third task is to apply these general results to the specific case where the deformation gradient is given in a principal basis as a diagonal matrix:\n$$\n\\mathbf{F} = \\operatorname{diag}(\\lambda_1, \\lambda_2, \\lambda_3) = \\begin{pmatrix} \\lambda_1 & 0 & 0 \\\\ 0 & \\lambda_2 & 0 \\\\ 0 & 0 & \\lambda_3 \\end{pmatrix}\n$$\nwhere $\\lambda_1, \\lambda_2, \\lambda_3 > 0$ are the principal stretches. These values represent the ratio of final length to initial length for line elements oriented along the principal axes of deformation. Since $\\mathbf{F}$ is a diagonal matrix, its transpose is equal to itself, $\\mathbf{F}^T = \\mathbf{F}$.\n\nWe first compute the right Cauchy–Green tensor $\\mathbf{C}$:\n$$\n\\mathbf{C} = \\mathbf{F}^T \\mathbf{F} = \\mathbf{F}^2 = \\begin{pmatrix} \\lambda_1 & 0 & 0 \\\\ 0 & \\lambda_2 & 0 \\\\ 0 & 0 & \\lambda_3 \\end{pmatrix} \\begin{pmatrix} \\lambda_1 & 0 & 0 \\\\ 0 & \\lambda_2 & 0 \\\\ 0 & 0 & \\lambda_3 \\end{pmatrix} = \\begin{pmatrix} \\lambda_1^2 & 0 & 0 \\\\ 0 & \\lambda_2^2 & 0 \\\\ 0 & 0 & \\lambda_3^2 \\end{pmatrix}\n$$\nThe components of $\\mathbf{C}$ are the squares of the principal stretches.\n\nNext, we compute the Green–Lagrange strain tensor $\\mathbf{E}$:\n$$\n\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I}) = \\frac{1}{2} \\left( \\begin{pmatrix} \\lambda_1^2 & 0 & 0 \\\\ 0 & \\lambda_2^2 & 0 \\\\ 0 & 0 & \\lambda_3^2 \\end{pmatrix} - \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} \\right)\n$$\n$$\n\\mathbf{E} = \\frac{1}{2} \\begin{pmatrix} \\lambda_1^2 - 1 & 0 & 0 \\\\ 0 & \\lambda_2^2 - 1 & 0 \\\\ 0 & 0 & \\lambda_3^2 - 1 \\end{pmatrix}\n$$\nSince the tensor $\\mathbf{E}$ is diagonal in this basis, its diagonal components are the principal Green–Lagrange strains, denoted $(E_1, E_2, E_3)$. By inspection, we identify them as:\n$$\nE_1 = \\frac{1}{2}(\\lambda_1^2 - 1)\n$$\n$$\nE_2 = \\frac{1}{2}(\\lambda_2^2 - 1)\n$$\n$$\nE_3 = \\frac{1}{2}(\\lambda_3^2 - 1)\n$$\nThese quantities measure the strain along the principal directions. For example, for a material fiber initially of length $L_0$ along the first principal axis, its deformed length is $L = \\lambda_1 L_0$. The strain $E_1$ is related to this squared length change: $L^2 - L_0^2 = (\\lambda_1^2 - 1)L_0^2 = 2E_1 L_0^2$. This confirms the physical interpretation of the Green–Lagrange strain. The final result is the ordered triple of these principal strains.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{1}{2} \\left( \\lambda_1^2 - 1 \\right) & \\frac{1}{2} \\left( \\lambda_2^2 - 1 \\right) & \\frac{1}{2} \\left( \\lambda_3^2 - 1 \\right) \\end{pmatrix}}\n$$", "id": "2677207"}, {"introduction": "The true power of the pull-back and push-forward formalism shines when we connect kinematics to kinetics and develop computational tools. This final practice elevates our understanding by applying these concepts to the core of nonlinear finite element analysis. By deriving the consistent linearization of the internal virtual work [@problem_id:2677195], you will engage with the sophisticated machinery that links hyperelastic constitutive laws to the robust Newton-Raphson solvers used in modern engineering software, seeing firsthand how abstract tensor operations enable cutting-edge simulations.", "problem": "Consider a body with reference configuration denoted by the set $\\mathcal{B}_0$ and a deformation mapping $\\varphi:\\mathcal{B}_0 \\to \\mathbb{R}^3$ with deformation gradient $\\mathbf{F}=\\nabla_X \\varphi$. Let $\\delta \\varphi$ denote a kinematically admissible virtual displacement, and let $\\delta \\mathbf{F}=\\nabla_X \\delta \\varphi$. The pulled-back internal virtual work functional is defined by\n$$\\delta \\mathcal{I}(\\varphi)[\\delta \\varphi]=\\int_{\\mathcal{B}_0} \\mathbf{P}(\\mathbf{F}):\\delta \\mathbf{F} \\, dV,$$\nwhere $\\mathbf{P}(\\mathbf{F})$ is the first Piola–Kirchhoff stress. The consistent linearization (the Gateaux derivative with respect to the deformation mapping) of $\\delta \\mathcal{I}$ in the direction $\\Delta \\varphi$ is defined as\n$$D\\big[\\delta \\mathcal{I}(\\varphi)\\big][\\Delta \\varphi;\\delta \\varphi]=\\left.\\frac{d}{d\\varepsilon}\\right|_{\\varepsilon=0}\\delta \\mathcal{I}(\\varphi+\\varepsilon \\Delta \\varphi)[\\delta \\varphi],$$\nwith the corresponding increment of the deformation gradient $\\Delta \\mathbf{F}=\\nabla_X \\Delta \\varphi$. Work in the Total Lagrangian setting, where the gradient operator $\\nabla_X$ acts on the reference coordinates and is independent of the current configuration.\n\nYour task is to:\n1) Starting from the fundamental definitions of the pull-back of virtual work, the chain rule, and the definition $\\mathbf{P}(\\mathbf{F})=\\partial W(\\mathbf{F})/\\partial \\mathbf{F}$ for a hyperelastic material with strain-energy density $W(\\mathbf{F})$, derive the consistent linearization $D[\\delta \\mathcal{I}(\\varphi)][\\Delta \\varphi;\\delta \\varphi]$ and explicitly identify how the result depends on $\\delta \\mathbf{F}$ and $\\Delta \\mathbf{F}$.\n2) Specialize to a compressible Neo–Hookean material with Lamé parameters $\\mu>0$ and $\\lambda>0$, with strain-energy density\n$$W(\\mathbf{F})=\\frac{\\mu}{2}\\big(I_1-3\\big)-\\mu \\ln J+\\frac{\\lambda}{2}\\big(\\ln J\\big)^2,$$\nwhere $I_1=\\mathrm{tr}(\\mathbf{C})$, $\\mathbf{C}=\\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$, and $J=\\det \\mathbf{F}$. Express $\\mathbf{P}(\\mathbf{F})$ and the action of the material tangent $\\mathbb{A}(\\mathbf{F})=\\partial \\mathbf{P}/\\partial \\mathbf{F}$ on a given increment $\\Delta \\mathbf{F}$, that is, the action of the fourth-order tangent tensor on the increment $\\Delta \\mathbf{F}$:\n$$\\big(\\mathbb{A}(\\mathbf{F}):\\Delta \\mathbf{F}\\big)_{iJ}=\\sum_{k,L}\\frac{\\partial P_{iJ}}{\\partial F_{kL}}\\,\\Delta F_{kL}.$$\n3) Translate your derivation into an algorithm that, at a single quadrature point with unit reference volume, evaluates the following two scalar quantities for given $\\mathbf{F}$, $\\Delta \\mathbf{F}$, and $\\delta \\mathbf{F}$:\n   a) The directional finite-difference approximation of the consistent linearization,\n   $$\\mathrm{FD}=\\frac{\\big(\\mathbf{P}(\\mathbf{F}+\\varepsilon \\Delta \\mathbf{F})-\\mathbf{P}(\\mathbf{F})\\big):\\delta \\mathbf{F}}{\\varepsilon},$$\n   where $\\varepsilon$ is a small positive scalar.\n   b) The analytical consistent linearization obtained from your derived expression,\n   $$\\mathrm{AN}=\\big(\\mathbb{A}(\\mathbf{F}):\\Delta \\mathbf{F}\\big):\\delta \\mathbf{F}.$$\n   Then compute the absolute error $|\\mathrm{FD}-\\mathrm{AN}|$.\n4) Implement a complete and runnable program that computes these absolute errors for the following test suite of cases, using $\\mu=80.0$ and $\\lambda=120.0$, and a perturbation size $\\varepsilon=10^{-7}$. Treat all computations as dimensionless, and evaluate all quantities at a single point with unit reference volume.\n   - Case $1$ (general, moderately distorted state): \n     - $\\mathbf{F}=\\begin{bmatrix}1.1 & 0.2 & 0.0\\\\ 0.1 & 0.9 & 0.05\\\\ 0.0 & -0.02 & 1.05\\end{bmatrix}$,\n     - $\\Delta \\mathbf{F}=\\begin{bmatrix}0.07 & -0.03 & 0.02\\\\ 0.01 & 0.04 & -0.05\\\\ -0.02 & 0.00 & 0.03\\end{bmatrix}$,\n     - $\\delta \\mathbf{F}=\\begin{bmatrix}-0.02 & 0.05 & -0.01\\\\ 0.03 & -0.04 & 0.02\\\\ 0.00 & 0.01 & -0.03\\end{bmatrix}$.\n   - Case $2$ (near-identity configuration):\n     - $\\mathbf{F}=\\begin{bmatrix}1.0 & 0.0 & 0.0\\\\ 0.0 & 1.0 & 0.0\\\\ 0.0 & 0.0 & 1.0\\end{bmatrix}$,\n     - $\\Delta \\mathbf{F}=\\begin{bmatrix}0.10 & 0.02 & -0.01\\\\ -0.03 & 0.05 & 0.04\\\\ 0.02 & -0.01 & 0.08\\end{bmatrix}$,\n     - $\\delta \\mathbf{F}=\\begin{bmatrix}0.01 & -0.02 & 0.03\\\\ 0.04 & 0.00 & -0.01\\\\ -0.02 & 0.05 & 0.02\\end{bmatrix}$.\n   - Case $3$ (zero increment $\\Delta \\mathbf{F}$):\n     - $\\mathbf{F}=\\begin{bmatrix}1.0 & 0.0 & 0.0\\\\ 0.0 & 1.0 & 0.0\\\\ 0.0 & 0.0 & 1.0\\end{bmatrix}$,\n     - $\\Delta \\mathbf{F}=\\begin{bmatrix}0.0 & 0.0 & 0.0\\\\ 0.0 & 0.0 & 0.0\\\\ 0.0 & 0.0 & 0.0\\end{bmatrix}$,\n     - $\\delta \\mathbf{F}=\\begin{bmatrix}0.03 & 0.01 & -0.02\\\\ -0.01 & 0.02 & 0.00\\\\ 0.04 & -0.03 & 0.01\\end{bmatrix}$.\n   - Case $4$ (pure virtual variation, zero $\\delta \\mathbf{F}$):\n     - $\\mathbf{F}=\\begin{bmatrix}1.0 & 0.5 & 0.0\\\\ 0.0 & 1.0 & 0.3\\\\ 0.0 & 0.0 & 1.0\\end{bmatrix}$,\n     - $\\Delta \\mathbf{F}=\\begin{bmatrix}-0.02 & 0.04 & 0.00\\\\ 0.03 & -0.01 & 0.05\\\\ 0.00 & -0.02 & 0.06\\end{bmatrix}$,\n     - $\\delta \\mathbf{F}=\\begin{bmatrix}0.0 & 0.0 & 0.0\\\\ 0.0 & 0.0 & 0.0\\\\ 0.0 & 0.0 & 0.0\\end{bmatrix}$.\n\nYour program should produce a single line of output containing the absolute errors for the cases $\\{1,2,3,4\\}$, in scientific notation with twelve digits after the decimal point, as a comma-separated list enclosed in square brackets (for example, `[1.234000000000e-12,5.670000000000e-13]`). Ensure that your implementation uses the definitions above and only the specified numerical values. No external input is required and no physical units are needed for the outputs. The angle unit is irrelevant in this setting and does not appear in any computation.", "solution": "The problem is valid as it is scientifically grounded in continuum mechanics, well-posed with a clear objective, and provides all necessary information for a unique solution. The steps involve theoretical derivation followed by numerical implementation, a standard practice for verification in computational mechanics.\n\nMy approach is as follows:\nFirst, I will derive the general expression for the consistent linearization of the internal virtual work. This is the Gateaux derivative of the virtual work functional.\nSecond, I will specialize this result for the given compressible Neo-Hookean material model. This requires deriving the first Piola-Kirchhoff stress, $P(F)$, and the action of the fourth-order material tangent tensor, $\\mathbb{A}(F)$, on an incremental deformation gradient, $\\Delta F$.\nThird, based on these derivations, I will outline the algorithm to compute the analytical linearization, $\\mathrm{AN}$, and its finite-difference approximation, $\\mathrm{FD}$, for the given test cases. The absolute error between these two quantities will then be calculated.\n\n**1. Derivation of the Consistent Linearization**\n\nThe internal virtual work is given in the reference configuration (Total Lagrangian setting) by the functional:\n$$\n\\delta \\mathcal{I}(\\varphi)[\\delta \\varphi] = \\int_{\\mathcal{B}_0} P(F):\\delta F \\, dV\n$$\nThe consistent linearization is its Gateaux derivative with respect to the deformation map $\\varphi$ in the direction of an incremental displacement $\\Delta \\varphi$. The deformation gradient corresponding to the perturbed deformation $\\varphi + \\varepsilon \\Delta \\varphi$ is $F(\\varphi + \\varepsilon \\Delta \\varphi) = \\nabla_X(\\varphi + \\varepsilon \\Delta \\varphi) = F + \\varepsilon \\Delta F$. The virtual deformation gradient, $\\delta F = \\nabla_X \\delta \\varphi$, is kinematically defined by the virtual displacement $\\delta \\varphi$ and is independent of $\\varphi$ and $\\Delta \\varphi$.\n\nThe definition of the linearization is:\n$$\nD\\big[\\delta \\mathcal{I}(\\varphi)\\big][\\Delta \\varphi;\\delta \\varphi] = \\left.\\frac{d}{d\\varepsilon}\\right|_{\\varepsilon=0} \\delta \\mathcal{I}(\\varphi+\\varepsilon \\Delta \\varphi)[\\delta \\varphi]\n$$\nSubstituting the integral form:\n$$\nD\\big[\\delta \\mathcal{I}(\\varphi)\\big][\\Delta \\varphi;\\delta \\varphi] = \\left.\\frac{d}{d\\varepsilon}\\right|_{\\varepsilon=0} \\int_{\\mathcal{B}_0} P(F + \\varepsilon \\Delta F):\\delta F \\, dV\n$$\nSince the domain of integration $\\mathcal{B}_0$ and the virtual deformation gradient $\\delta F$ are independent of $\\varepsilon$, we can interchange differentiation and integration:\n$$\nD\\big[\\delta \\mathcal{I}(\\varphi)\\big][\\Delta \\varphi;\\delta \\varphi] = \\int_{\\mathcal{B}_0} \\left( \\left.\\frac{d}{d\\varepsilon}\\right|_{\\varepsilon=0} P(F + \\varepsilon \\Delta F) \\right) : \\delta F \\, dV\n$$\nThe term in the parenthesis is the definition of the directional derivative of the first Piola-Kirchhoff stress tensor $P$ in the direction $\\Delta F$. This defines the action of the fourth-order material tangent tensor $\\mathbb{A}(F) = \\partial P / \\partial F$ on $\\Delta F$:\n$$\n\\left.\\frac{d}{d\\varepsilon}\\right|_{\\varepsilon=0} P(F + \\varepsilon \\Delta F) = D_F P[\\Delta F] = \\mathbb{A}(F) : \\Delta F\n$$\nThus, the linearization of the virtual work is:\n$$\nD\\big[\\delta \\mathcal{I}(\\varphi)\\big][\\Delta \\varphi;\\delta \\varphi] = \\int_{\\mathcal{B}_0} \\big( \\mathbb{A}(F) : \\Delta F \\big) : \\delta F \\, dV\n$$\nThe problem requires evaluating the scalar integrand at a single point with unit volume, which is the expression denoted by $\\mathrm{AN}$:\n$$\n\\mathrm{AN} = \\big( \\mathbb{A}(F) : \\Delta F \\big) : \\delta F\n$$\n\n**2. Specialization to a Compressible Neo-Hookean Material**\n\nThe strain-energy density function is $W(F)=\\frac{\\mu}{2}\\big(I_1-3\\big)-\\mu \\ln J+\\frac{\\lambda}{2}\\big(\\ln J\\big)^2$, where $I_1 = \\mathrm{tr}(F^T F) = F:F$ and $J=\\det F$.\n\nFirst Piola-Kirchhoff Stress $P(F)$:\nThe stress is derived from the strain energy, $P = \\partial W / \\partial F$. Using the chain rule:\n$$\nP(F) = \\frac{\\partial W}{\\partial I_1} \\frac{\\partial I_1}{\\partial F} + \\frac{\\partial W}{\\partial J} \\frac{\\partial J}{\\partial F}\n$$\nThe necessary derivatives are:\n$$\n\\frac{\\partial W}{\\partial I_1} = \\frac{\\mu}{2}, \\quad \\frac{\\partial W}{\\partial J} = \\frac{\\lambda \\ln J - \\mu}{J}\n$$\n$$\n\\frac{\\partial I_1}{\\partial F} = 2F, \\quad \\frac{\\partial J}{\\partial F} = J F^{-T}\n$$\nSubstituting these expressions yields:\n$$\nP(F) = \\left(\\frac{\\mu}{2}\\right)(2F) + \\left(\\frac{\\lambda \\ln J - \\mu}{J}\\right)(J F^{-T}) = \\mu F + (\\lambda \\ln J - \\mu) F^{-T}\n$$\n\nMaterial Tangent Action $\\mathbb{A}(F):\\Delta F$:\nWe compute the directional derivative of $P(F)$ in the direction $\\Delta F$:\n$$\n\\mathbb{A}(F):\\Delta F = D_F P[\\Delta F] = D_F\\left[\\mu F + (\\lambda \\ln J - \\mu) F^{-T}\\right][\\Delta F]\n$$\nUsing the linearity of the derivative and the product rule for the second term:\n$$\n\\mathbb{A}(F):\\Delta F = \\mu D_F[F][\\Delta F] + \\left(D_F[\\lambda \\ln J - \\mu][\\Delta F]\\right)F^{-T} + (\\lambda \\ln J - \\mu)D_F[F^{-T}][\\Delta F]\n$$\nThe required directional derivatives are:\n$$\nD_F[F][\\Delta F] = \\Delta F\n$$\n$$\nD_F[\\ln J][\\Delta F] = \\frac{1}{J} D_F[J][\\Delta F] = \\frac{1}{J} (J \\mathrm{tr}(F^{-1}\\Delta F)) = \\mathrm{tr}(F^{-1}\\Delta F) = F^{-T}:\\Delta F\n$$\n$$\nD_F[F^{-T}][\\Delta F] = -F^{-T}(\\Delta F)^T F^{-T}\n$$\nSubstituting these back into the expression for the tangent action:\n$$\n\\mathbb{A}(F):\\Delta F = \\mu \\Delta F + \\lambda \\big(\\mathrm{tr}(F^{-1}\\Delta F)\\big) F^{-T} + (\\lambda \\ln J - \\mu)\\big(-F^{-T}(\\Delta F)^T F^{-T}\\big)\n$$\nRe-arranging the terms gives the final expression used for computation:\n$$\n\\mathbb{A}(F):\\Delta F = \\mu \\Delta F + \\lambda \\mathrm{tr}(F^{-1}\\Delta F) F^{-T} + (\\mu - \\lambda \\ln J) F^{-T}(\\Delta F)^T F^{-T}\n$$\n\n**3. Algorithm for Numerical Evaluation**\n\nThe algorithm for each test case involves computing two scalar values at a point.\n\na) Analytical Linearization $(\\mathrm{AN})$:\nThis value is computed by first calculating the second-order tensor $T = \\mathbb{A}(F):\\Delta F$ using the expression derived above, and then taking its double dot product with $\\delta F$. The double dot product of two second-order tensors $A$ and $B$ is defined as $A:B = \\sum_{i,J} A_{iJ} B_{iJ}$.\n$$\n\\mathrm{AN} = \\left( \\mu \\Delta F + \\lambda \\mathrm{tr}(F^{-1}\\Delta F) F^{-T} + (\\mu - \\lambda \\ln J) F^{-T}(\\Delta F)^T F^{-T} \\right) : \\delta F\n$$\n\nb) Finite-Difference Approximation $(\\mathrm{FD})$:\nThis value is computed using a forward difference scheme on the stress tensor $P$.\n$$\n\\mathrm{FD}=\\frac{\\big(P(F+\\varepsilon \\Delta F)-P(F)\\big):\\delta F}{\\varepsilon}\n$$\nThe procedure is:\n1. Compute $P(F) = \\mu F + (\\lambda \\ln(\\det F) - \\mu) F^{-T}$.\n2. Compute the perturbed deformation gradient $F_{pert} = F + \\varepsilon \\Delta F$.\n3. Compute the perturbed stress $P(F_{pert}) = \\mu F_{pert} + (\\lambda \\ln(\\det F_{pert}) - \\mu) F_{pert}^{-T}$.\n4. Compute the scalar $\\mathrm{FD} = \\frac{(P(F_{pert}) - P(F)):\\delta F}{\\varepsilon}$.\n\nFinally, the absolute error is calculated as $|\\mathrm{FD} - \\mathrm{AN}|$. The logic is implemented in the provided Python code, which handles the matrix operations using the NumPy library.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the continuum mechanics problem by deriving and implementing\n    the consistent linearization of the internal virtual work for a\n    compressible Neo-Hookean material.\n    \"\"\"\n    \n    # Define material parameters and perturbation size\n    mu = 80.0\n    lambda_ = 120.0  # Use lambda_ to avoid conflict with Python keyword\n    epsilon = 1.0e-7\n    \n    # Define the test cases from the problem statement\n    test_cases = [\n        # Case 1 (general, moderately distorted state)\n        {\n            \"F\": np.array([[1.1, 0.2, 0.0],\n                           [0.1, 0.9, 0.05],\n                           [0.0, -0.02, 1.05]]),\n            \"dF\": np.array([[0.07, -0.03, 0.02],\n                            [0.01, 0.04, -0.05],\n                            [-0.02, 0.00, 0.03]]),\n            \"delta_F\": np.array([[-0.02, 0.05, -0.01],\n                                 [0.03, -0.04, 0.02],\n                                 [0.00, 0.01, -0.03]]),\n        },\n        # Case 2 (near-identity configuration)\n        {\n            \"F\": np.array([[1.0, 0.0, 0.0],\n                           [0.0, 1.0, 0.0],\n                           [0.0, 0.0, 1.0]]),\n            \"dF\": np.array([[0.10, 0.02, -0.01],\n                            [-0.03, 0.05, 0.04],\n                            [0.02, -0.01, 0.08]]),\n            \"delta_F\": np.array([[0.01, -0.02, 0.03],\n                                 [0.04, 0.00, -0.01],\n                                 [-0.02, 0.05, 0.02]]),\n        },\n        # Case 3 (zero increment dF)\n        {\n            \"F\": np.array([[1.0, 0.0, 0.0],\n                           [0.0, 1.0, 0.0],\n                           [0.0, 0.0, 1.0]]),\n            \"dF\": np.array([[0.0, 0.0, 0.0],\n                            [0.0, 0.0, 0.0],\n                            [0.0, 0.0, 0.0]]),\n            \"delta_F\": np.array([[0.03, 0.01, -0.02],\n                                 [-0.01, 0.02, 0.00],\n                                 [0.04, -0.03, 0.01]]),\n        },\n        # Case 4 (pure virtual variation, zero delta_F)\n        {\n            \"F\": np.array([[1.0, 0.5, 0.0],\n                           [0.0, 1.0, 0.3],\n                           [0.0, 0.0, 1.0]]),\n            \"dF\": np.array([[-0.02, 0.04, 0.00],\n                            [0.03, -0.01, 0.05],\n                            [0.00, -0.02, 0.06]]),\n            \"delta_F\": np.array([[0.0, 0.0, 0.0],\n                                 [0.0, 0.0, 0.0],\n                                 [0.0, 0.0, 0.0]]),\n        },\n    ]\n\n    def compute_P(F, mu_val, lambda_val):\n        \"\"\"Computes the first Piola-Kirchhoff stress tensor P.\"\"\"\n        J = np.linalg.det(F)\n        if J <= 0:\n            raise ValueError(\"Deformation gradient leads to non-positive Jacobian.\")\n        F_inv_T = np.linalg.inv(F).T\n        P = mu_val * F + (lambda_val * np.log(J) - mu_val) * F_inv_T\n        return P\n\n    def compute_A_action(F, dF, mu_val, lambda_val):\n        \"\"\"Computes the action of the material tangent A on an increment dF.\"\"\"\n        J = np.linalg.det(F)\n        if J <= 0:\n            raise ValueError(\"Deformation gradient leads to non-positive Jacobian.\")\n        F_inv = np.linalg.inv(F)\n        F_inv_T = F_inv.T\n        \n        # Term 1: mu * dF\n        term1 = mu_val * dF\n        \n        # Term 2: lambda * tr(F_inv * dF) * F_inv_T\n        tr_F_inv_dF = np.trace(F_inv @ dF)\n        term2 = lambda_val * tr_F_inv_dF * F_inv_T\n        \n        # Term 3: (mu - lambda * ln(J)) * F_inv_T * dF.T * F_inv_T\n        term3_scalar = mu_val - lambda_val * np.log(J)\n        term3 = term3_scalar * (F_inv_T @ dF.T @ F_inv_T)\n        \n        A_dF = term1 + term2 + term3\n        return A_dF\n\n    results = []\n    for case in test_cases:\n        F = case[\"F\"]\n        dF = case[\"dF\"]\n        delta_F = case[\"delta_F\"]\n\n        # --- Compute Analytical Linearization (AN) ---\n        # A_dF is the second-order tensor resulting from A(F):dF\n        A_dF = compute_A_action(F, dF, mu, lambda_)\n        # AN is the scalar (A_dF):delta_F\n        # The double dot product A:B is sum(A_ij * B_ij)\n        analytical_val = np.sum(A_dF * delta_F)\n\n        # --- Compute Finite Difference Approximation (FD) ---\n        P_F = compute_P(F, mu, lambda_)\n        F_eps = F + epsilon * dF\n        P_F_eps = compute_P(F_eps, mu, lambda_)\n        \n        # dP is the finite difference of the stress\n        dP = P_F_eps - P_F\n        \n        # FD is the scalar (dP:delta_F) / epsilon\n        finite_diff_val = np.sum(dP * delta_F) / epsilon\n        \n        # --- Compute Absolute Error ---\n        error = abs(finite_diff_val - analytical_val)\n        results.append(error)\n\n    # Format the output as specified\n    formatted_results = [f\"{res:.12e}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2677195"}]}