{"hands_on_practices": [{"introduction": "The cornerstone of a nonlinear finite element analysis for hyperelastic materials is the consistent tangent modulus, derived from the linearization of the virtual work. This first practice is a fundamental exercise that begins with a given stored-energy function and guides you through the complete derivation of both the material tangent modulus, $\\mathbb{A}$, and its spatial counterpart, $\\mathfrak{a}$ [@problem_id:2655396]. Mastering this process solidifies the connection between the abstract constitutive model and the concrete stiffness terms used in computations, while also providing essential practice with the push-forward operations that relate descriptions in the reference and current configurations.", "problem": "Consider a compressible hyperelastic solid with stored-energy density per reference volume given by the potential $\\Psi(\\mathbf{C}) = \\dfrac{\\mu}{2}\\left(\\operatorname{tr}\\mathbf{C} - 3\\right) - \\mu \\ln J + \\dfrac{\\kappa}{2}\\left(\\ln J\\right)^{2}$, where $\\mathbf{F}$ is the deformation gradient, $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$ is the Right Cauchy-Green (RCC) tensor, $J = \\det \\mathbf{F}$, $\\mu > 0$ is the shear modulus, and $\\kappa > 0$ is a volumetric modulus. Let $\\mathbf{E} = \\dfrac{1}{2}(\\mathbf{C} - \\mathbf{I})$ be the Green-Lagrange strain (GLS), $\\mathbf{S}$ the Second Piola-Kirchhoff (SPK) stress, $\\boldsymbol{\\tau}$ the Kirchhoff stress, and $\\mathbf{d}$ the rate of deformation (ROD).\nUsing the principle of virtual work and standard kinematics of finite deformation, proceed as follows:\n- Starting from the reference virtual work $\\delta W_{\\text{int}} = \\int_{\\Omega_{0}} \\mathbf{S} : \\delta \\mathbf{E}\\,\\mathrm{d}\\Omega_{0}$ and the spatial virtual work $\\delta W_{\\text{int}} = \\int_{\\Omega} \\boldsymbol{\\tau} : \\delta \\mathbf{d}\\,\\mathrm{d}v$, derive the material elasticity (tangent) tensor $\\mathbb{A} = \\dfrac{\\partial \\mathbf{S}}{\\partial \\mathbf{E}}$ associated with $\\Psi(\\mathbf{C})$.\n- By linearizing the virtual work and using objective kinematics, derive the spatial elasticity (tangent) tensor $\\mathfrak{a} = \\dfrac{\\partial \\boldsymbol{\\tau}}{\\partial \\mathbf{d}}$ and relate it to $\\mathbb{A}$ via push-forward through $\\mathbf{F}$ and $J$.\n- Specialize your result to a homogeneous isotropic dilation $\\mathbf{F} = \\lambda \\mathbf{I}$ with $\\lambda > 0$. In this state, evaluate the single component $a_{1111}$ of the spatial tangent $\\mathfrak{a}$ as a closed-form analytic expression in terms of $\\mu$, $\\kappa$, and $\\lambda$.\nYour final answer must be the single analytic expression for $a_{1111}$ in terms of $\\mu$, $\\kappa$, and $\\lambda$. Do not substitute numerical values and do not include units in your final answer.", "solution": "The problem as stated is subjected to rigorous validation.\n\n### Step 1: Extract Givens\n- Stored-energy density function: $\\Psi(\\mathbf{C}) = \\dfrac{\\mu}{2}\\left(\\operatorname{tr}\\mathbf{C} - 3\\right) - \\mu \\ln J + \\dfrac{\\kappa}{2}\\left(\\ln J\\right)^{2}$.\n- Kinematic variables: Deformation gradient $\\mathbf{F}$, Right Cauchy-Green tensor $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$, Jacobian $J = \\det \\mathbf{F}$, Green-Lagrange strain $\\mathbf{E} = \\dfrac{1}{2}(\\mathbf{C} - \\mathbf{I})$.\n- Material parameters: Shear modulus $\\mu > 0$, volumetric modulus $\\kappa > 0$.\n- Stress and stiffness measures: Second Piola-Kirchhoff (SPK) stress $\\mathbf{S}$, Kirchhoff stress $\\boldsymbol{\\tau}$, material elasticity tensor $\\mathbb{A} = \\dfrac{\\partial \\mathbf{S}}{\\partial \\mathbf{E}}$, spatial elasticity tensor $\\mathfrak{a}$.\n- Principle of virtual work: Reference form $\\delta W_{\\text{int}} = \\int_{\\Omega_{0}} \\mathbf{S} : \\delta \\mathbf{E}\\,\\mathrm{d}\\Omega_{0}$, spatial form $\\delta W_{\\text{int}} = \\int_{\\Omega} \\boldsymbol{\\tau} : \\delta \\mathbf{d}\\,\\mathrm{d}v$.\n- Specific deformation state: Homogeneous isotropic dilation $\\mathbf{F} = \\lambda \\mathbf{I}$ with $\\lambda > 0$.\n- Objective: Find the component $a_{1111}$ of the spatial tangent tensor $\\mathfrak{a}$ for the specified dilation.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is scientifically grounded in the established theory of nonlinear continuum mechanics and hyperelasticity. The provided stored energy function is a known and valid compressible model. All definitions, variables, and principles ($\\mathbf{F}$, $\\mathbf{C}$, $\\mathbf{S}$, $\\Psi$, virtual work) are standard in the field. The problem is well-posed, providing all necessary information to derive a unique solution through a logical sequence of steps. The language is objective and unambiguous. The tasks are directly related to the topic of linearizing virtual work in solid mechanics. Therefore, the problem is deemed valid.\n\n### Step 3: Derivation\nThe solution proceeds by first deriving the SPK stress tensor $\\mathbf{S}$ and the material tangent modulus $\\mathbb{A}$ from the given potential $\\Psi$. Then, the spatial tangent modulus $\\mathfrak{a}$ is obtained by a push-forward operation. Finally, these tensors are evaluated for the specific case of homogeneous dilation to find the component $\\mathfrak{a}_{1111}$.\n\nFirst, we express the stored energy function $\\Psi$ exclusively in terms of the Right Cauchy-Green tensor $\\mathbf{C}$. Using the identity $J = (\\det \\mathbf{C})^{1/2}$, we have:\n$$\n\\Psi(\\mathbf{C}) = \\dfrac{\\mu}{2}(\\operatorname{tr}\\mathbf{C} - 3) - \\mu \\ln((\\det \\mathbf{C})^{1/2}) + \\dfrac{\\kappa}{2}(\\ln((\\det \\mathbf{C})^{1/2}))^{2}\n$$\n$$\n\\Psi(\\mathbf{C}) = \\dfrac{\\mu}{2}(\\operatorname{tr}\\mathbf{C} - 3) - \\dfrac{\\mu}{2}\\ln(\\det \\mathbf{C}) + \\dfrac{\\kappa}{8}(\\ln(\\det \\mathbf{C}))^{2}\n$$\nThe Second Piola-Kirchhoff stress $\\mathbf{S}$ is derived from $\\Psi$ with respect to the Green-Lagrange strain $\\mathbf{E}$. Using the chain rule and $\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I})$, which implies $\\mathrm{d}\\mathbf{E} = \\frac{1}{2}\\mathrm{d}\\mathbf{C}$, we get:\n$$\n\\mathbf{S} = \\dfrac{\\partial \\Psi}{\\partial \\mathbf{E}} = 2\\dfrac{\\partial \\Psi}{\\partial \\mathbf{C}}\n$$\nWe use the standard tensor identities $\\frac{\\partial(\\operatorname{tr}\\mathbf{C})}{\\partial \\mathbf{C}} = \\mathbf{I}$ and $\\frac{\\partial(\\ln(\\det\\mathbf{C}))}{\\partial \\mathbf{C}} = \\mathbf{C}^{-1}$.\n$$\n\\mathbf{S} = 2\\left[ \\dfrac{\\mu}{2}\\mathbf{I} - \\dfrac{\\mu}{2}\\mathbf{C}^{-1} + \\dfrac{\\kappa}{8}(2\\ln(\\det\\mathbf{C}))\\mathbf{C}^{-1} \\right]\n$$\n$$\n\\mathbf{S} = \\mu\\mathbf{I} - \\mu\\mathbf{C}^{-1} + \\dfrac{\\kappa}{2}\\ln(\\det\\mathbf{C})\\mathbf{C}^{-1}\n$$\nRearranging and using $\\ln(\\det\\mathbf{C}) = 2\\ln J$:\n$$\n\\mathbf{S} = \\mu\\mathbf{I} + (\\kappa\\ln J - \\mu)\\mathbf{C}^{-1}\n$$\nNext, we derive the fourth-order material tangent modulus $\\mathbb{A} = \\frac{\\partial \\mathbf{S}}{\\partial \\mathbf{E}} = 2\\frac{\\partial \\mathbf{S}}{\\partial \\mathbf{C}}$. Applying the product rule for differentiation:\n$$\n\\mathbb{A}_{IJKL} = 2 \\frac{\\partial}{\\partial C_{KL}} \\left[ \\mu\\delta_{IJ} + \\left(\\frac{\\kappa}{2}\\ln(\\det\\mathbf{C}) - \\mu\\right)C_{IJ}^{-1} \\right]\n$$\n$$\n\\mathbb{A}_{IJKL} = 2 \\left[ \\left( \\frac{\\kappa}{2}C_{KL}^{-1} \\right) C_{IJ}^{-1} + \\left(\\frac{\\kappa}{2}\\ln(\\det\\mathbf{C}) - \\mu\\right) \\left(-\\frac{1}{2}(C_{IK}^{-1}C_{LJ}^{-1} + C_{IL}^{-1}C_{KJ}^{-1})\\right) \\right]\n$$\nSimplifying, using $\\ln(\\det\\mathbf{C}) = 2\\ln J$, and applying standard index symmetries yields:\n$$\n\\mathbb{A}_{IJKL} = \\kappa C_{IJ}^{-1}C_{KL}^{-1} + (\\mu - \\kappa\\ln J)(C_{IK}^{-1}C_{JL}^{-1} + C_{IL}^{-1}C_{JK}^{-1})\n$$\nThe spatial elasticity tensor $\\mathfrak{a}$ is related to the material tensor $\\mathbb{A}$ via a push-forward operation. Based on the problem's phrasing, we use the standard transformation for the material part of the tangent, which relates the Lie derivative of Kirchhoff stress to the rate of deformation:\n$$\n\\mathfrak{a}_{ijkl} = J^{-1} F_{iI}F_{jJ}F_{kK}F_{lL} A_{IJKL}\n$$\nNow we specialize to the case of homogeneous isotropic dilation, $\\mathbf{F} = \\lambda\\mathbf{I}$. This gives:\n$$\nJ = \\det(\\lambda\\mathbf{I}) = \\lambda^{3}\n$$\n$$\n\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F} = (\\lambda\\mathbf{I})^{\\mathsf{T}}(\\lambda\\mathbf{I}) = \\lambda^{2}\\mathbf{I}\n$$\n$$\n\\mathbf{C}^{-1} = \\lambda^{-2}\\mathbf{I} \\quad \\text{or} \\quad C_{IJ}^{-1} = \\lambda^{-2}\\delta_{IJ}\n$$\nSubstituting these into the expression for $\\mathbb{A}$:\n$$\nA_{IJKL} = \\kappa (\\lambda^{-2}\\delta_{IJ})(\\lambda^{-2}\\delta_{KL}) + (\\mu - \\kappa\\ln(\\lambda^{3}))(\\lambda^{-2}\\delta_{IK}\\lambda^{-2}\\delta_{JL} + \\lambda^{-2}\\delta_{IL}\\lambda^{-2}\\delta_{JK})\n$$\n$$\nA_{IJKL} = \\kappa\\lambda^{-4}\\delta_{IJ}\\delta_{KL} + \\lambda^{-4}(\\mu - 3\\kappa\\ln\\lambda)(\\delta_{IK}\\delta_{JL} + \\delta_{IL}\\delta_{JK})\n$$\nNow, we perform the push-forward to get $\\mathfrak{a}$. For $\\mathbf{F} = \\lambda\\mathbf{I}$, we have $F_{iI} = \\lambda\\delta_{iI}$.\n$$\n\\mathfrak{a}_{ijkl} = (\\lambda^{3})^{-1} (\\lambda\\delta_{iI})(\\lambda\\delta_{jJ})(\\lambda\\delta_{kK})(\\lambda\\delta_{lL}) A_{IJKL}\n$$\n$$\n\\mathfrak{a}_{ijkl} = \\lambda^{-3}\\lambda^{4} A_{ijkl} = \\lambda A_{ijkl}\n$$\nThe indices are directly substituted since $\\delta_{iI}$ contracts $I$ with $i$, $J$ with $j$, etc.\n$$\n\\mathfrak{a}_{ijkl} = \\lambda \\left[ \\kappa\\lambda^{-4}\\delta_{ij}\\delta_{kl} + \\lambda^{-4}(\\mu - 3\\kappa\\ln\\lambda)(\\delta_{ik}\\delta_{jl} + \\delta_{il}\\delta_{jk}) \\right]\n$$\n$$\n\\mathfrak{a}_{ijkl} = \\kappa\\lambda^{-3}\\delta_{ij}\\delta_{kl} + \\lambda^{-3}(\\mu - 3\\kappa\\ln\\lambda)(\\delta_{ik}\\delta_{jl} + \\delta_{il}\\delta_{jk})\n$$\nThis is the expression for the spatial tangent modulus. We are asked to find the component $\\mathfrak{a}_{1111}$. We set $i=1$, $j=1$, $k=1$, $l=1$:\n$$\n\\mathfrak{a}_{1111} = \\kappa\\lambda^{-3}\\delta_{11}\\delta_{11} + \\lambda^{-3}(\\mu - 3\\kappa\\ln\\lambda)(\\delta_{11}\\delta_{11} + \\delta_{11}\\delta_{11})\n$$\nSince $\\delta_{11} = 1$:\n$$\n\\mathfrak{a}_{1111} = \\kappa\\lambda^{-3}(1) + \\lambda^{-3}(\\mu - 3\\kappa\\ln\\lambda)(1 + 1)\n$$\n$$\n\\mathfrak{a}_{1111} = \\kappa\\lambda^{-3} + 2\\lambda^{-3}(\\mu - 3\\kappa\\ln\\lambda)\n$$\n$$\n\\mathfrak{a}_{1111} = \\lambda^{-3}[\\kappa + 2\\mu - 6\\kappa\\ln\\lambda]\n$$\n$$\n\\mathfrak{a}_{1111} = \\lambda^{-3}[2\\mu + \\kappa(1 - 6\\ln\\lambda)]\n$$\nThis is the final analytical expression.", "answer": "$$\n\\boxed{\\frac{2\\mu + \\kappa(1 - 6\\ln\\lambda)}{\\lambda^{3}}}\n$$", "id": "2655396"}, {"introduction": "While the internal virtual work for hyperelastic materials leads to a symmetric tangent stiffness, the same is not guaranteed for the linearization of external virtual work. Forces whose direction depends on the configuration, known as follower forces, are non-conservative and can lead to asymmetric tangent operators. This exercise explores this crucial exception by having you derive the tangent stiffness for a classic follower force problem [@problem_id:2655351]. By working through this example, you will develop a physical intuition for the origin of the asymmetry and its formal link to the non-existence of a work potential, a critical concept in the stability analysis of structures.", "problem": "A two-dimensional point-like end-effector located at position vector $\\boldsymbol{q} \\in \\mathbb{R}^{2}$ is subjected to a follower thrust of constant magnitude $P>0$ whose direction always coincides with the counterclockwise tangent to the circle centered at the origin passing through the current position $\\boldsymbol{q}$. The tangent unit vector is given by\n$$\n\\boldsymbol{t}(\\boldsymbol{q}) \\;=\\; \\frac{\\boldsymbol{R}\\,\\boldsymbol{q}}{\\|\\boldsymbol{q}\\|},\n$$\nwhere $\\|\\cdot\\|$ denotes the Euclidean norm and $\\boldsymbol{R}$ is the constant rotation-by-ninety-degrees operator in the plane,\n$$\n\\boldsymbol{R} \\;=\\; \\begin{bmatrix} 0 & -1 \\\\ 1 & 0 \\end{bmatrix}.\n$$\nAs a result, the external follower force is $\\boldsymbol{f}(\\boldsymbol{q}) = P\\,\\boldsymbol{t}(\\boldsymbol{q})$. The external virtual work is\n$$\n\\delta W_{\\mathrm{ext}}(\\boldsymbol{q};\\delta \\boldsymbol{q}) \\;=\\; \\boldsymbol{f}(\\boldsymbol{q}) \\cdot \\delta \\boldsymbol{q}.\n$$\nConsider the linearization of the nonlinear virtual work about the base configuration $\\boldsymbol{q}_{0} = \\begin{bmatrix} L \\\\ 0 \\end{bmatrix}$ with $L>0$, in the sense that for an increment $\\Delta \\boldsymbol{q}$ and a virtual displacement $\\delta \\boldsymbol{q}$,\n$$\n\\Delta\\big(\\delta W_{\\mathrm{ext}}\\big) \\;=\\; \\delta \\boldsymbol{q}^{\\mathsf{T}} \\,\\boldsymbol{K}\\, \\Delta \\boldsymbol{q} \\;+\\; \\text{higher-order terms},\n$$\nwhere $\\boldsymbol{K} = \\left.\\dfrac{\\partial \\boldsymbol{f}}{\\partial \\boldsymbol{q}}\\right|_{\\boldsymbol{q}_{0}}$ is the tangent operator. Starting only from the definition of the external virtual work and the given follower-force direction, and without invoking any pre-stated linearization formulas, do the following:\n\n- Derive $\\boldsymbol{K}$ explicitly at $\\boldsymbol{q}_{0}$.\n- Demonstrate that $\\boldsymbol{K}$ is not symmetric, thereby constructing a counterexample in which the linearization of nonlinear virtual work is not symmetric under a nonconservative follower load.\n- Explain the physical origin of the antisymmetry in terms of the dependence of the load direction on configuration and the associated non-existence of a potential.\n\nFinally, to quantify the lack of symmetry in the linearized virtual work, evaluate the mismatch\n$$\nM \\;=\\; \\Delta\\big(\\delta W_{\\mathrm{ext}}\\big)\\big|_{\\delta \\boldsymbol{q}=\\boldsymbol{e}_{1},\\,\\Delta \\boldsymbol{q}=\\boldsymbol{e}_{2}} \\;-\\; \\Delta\\big(\\delta W_{\\mathrm{ext}}\\big)\\big|_{\\delta \\boldsymbol{q}=\\boldsymbol{e}_{2},\\,\\Delta \\boldsymbol{q}=\\boldsymbol{e}_{1}},\n$$\nwhere $\\boldsymbol{e}_{1}=\\begin{bmatrix}1\\\\0\\end{bmatrix}$ and $\\boldsymbol{e}_{2}=\\begin{bmatrix}0\\\\1\\end{bmatrix}$ are the canonical basis vectors. Express your final answer symbolically as a closed-form analytic expression in terms of $P$ and $L$. Do not include units in your final answer.", "solution": "The problem statement is subjected to validation prior to any attempt at a solution.\n\n**Step 1: Extraction of Givens**\n- Position vector: $\\boldsymbol{q} \\in \\mathbb{R}^{2}$.\n- Thrust magnitude: $P > 0$, constant.\n- Force direction: Tangent unit vector $\\boldsymbol{t}(\\boldsymbol{q}) = \\frac{\\boldsymbol{R}\\,\\boldsymbol{q}}{\\|\\boldsymbol{q}\\|}$.\n- Rotation operator: $\\boldsymbol{R} = \\begin{bmatrix} 0 & -1 \\\\ 1 & 0 \\end{bmatrix}$.\n- External follower force: $\\boldsymbol{f}(\\boldsymbol{q}) = P\\,\\boldsymbol{t}(\\boldsymbol{q})$.\n- External virtual work: $\\delta W_{\\mathrm{ext}}(\\boldsymbol{q};\\delta \\boldsymbol{q}) = \\boldsymbol{f}(\\boldsymbol{q}) \\cdot \\delta \\boldsymbol{q}$.\n- Base configuration for linearization: $\\boldsymbol{q}_{0} = \\begin{bmatrix} L \\\\ 0 \\end{bmatrix}$ with $L>0$.\n- Linearization of virtual work: $\\Delta\\big(\\delta W_{\\mathrm{ext}}\\big) = \\delta \\boldsymbol{q}^{\\mathsf{T}} \\,\\boldsymbol{K}\\, \\Delta \\boldsymbol{q} + \\text{h.o.t.}$.\n- Tangent operator: $\\boldsymbol{K} = \\left.\\dfrac{\\partial \\boldsymbol{f}}{\\partial \\boldsymbol{q}}\\right|_{\\boldsymbol{q}_{0}}$.\n- Mismatch to evaluate: $M = \\Delta\\big(\\delta W_{\\mathrm{ext}}\\big)\\big|_{\\delta \\boldsymbol{q}=\\boldsymbol{e}_{1},\\,\\Delta \\boldsymbol{q}=\\boldsymbol{e}_{2}} - \\Delta\\big(\\delta W_{\\mathrm{ext}}\\big)\\big|_{\\delta \\boldsymbol{q}=\\boldsymbol{e}_{2},\\,\\Delta \\boldsymbol{q}=\\boldsymbol{e}_{1}}$.\n- Basis vectors: $\\boldsymbol{e}_{1}=\\begin{bmatrix}1\\\\0\\end{bmatrix}$ and $\\boldsymbol{e}_{2}=\\begin{bmatrix}0\\\\1\\end{bmatrix}$.\n\n**Step 2: Validation**\nThe problem is scientifically grounded, well-posed, and objective. It describes a standard non-conservative follower force problem in continuum mechanics. All terms are defined mathematically, and the provided data are self-contained and consistent. The problem does not violate any fundamental principles of physics or mathematics. It is a rigorous and formalizable problem central to the topic of nonlinear mechanics.\n\n**Step 3: Verdict**\nThe problem is valid. A solution will be derived.\n\nThe first task is to derive the tangent stiffness operator $\\boldsymbol{K}$. We begin by expressing the force vector $\\boldsymbol{f}(\\boldsymbol{q})$ in terms of the components of $\\boldsymbol{q} = \\begin{bmatrix} q_1 \\\\ q_2 \\end{bmatrix}$.\nThe norm is $\\|\\boldsymbol{q}\\| = \\sqrt{q_1^2 + q_2^2}$. The rotated vector is $\\boldsymbol{R}\\,\\boldsymbol{q} = \\begin{bmatrix} -q_2 \\\\ q_1 \\end{bmatrix}$.\nThus, the force vector is:\n$$\n\\boldsymbol{f}(\\boldsymbol{q}) = \\begin{bmatrix} f_1(q_1, q_2) \\\\ f_2(q_1, q_2) \\end{bmatrix} = \\frac{P}{\\sqrt{q_1^2 + q_2^2}} \\begin{bmatrix} -q_2 \\\\ q_1 \\end{bmatrix}\n$$\nThe tangent operator $\\boldsymbol{K}$ is the Jacobian matrix of $\\boldsymbol{f}$ with respect to $\\boldsymbol{q}$:\n$$\n\\boldsymbol{K} = \\frac{\\partial \\boldsymbol{f}}{\\partial \\boldsymbol{q}} = \\begin{bmatrix} \\frac{\\partial f_1}{\\partial q_1} & \\frac{\\partial f_1}{\\partial q_2} \\\\ \\frac{\\partial f_2}{\\partial q_1} & \\frac{\\partial f_2}{\\partial q_2} \\end{bmatrix}\n$$\nWe compute the partial derivatives of the components of $\\boldsymbol{f}$.\nFor $f_1 = -P q_2 (q_1^2 + q_2^2)^{-1/2}$:\n$$\n\\frac{\\partial f_1}{\\partial q_1} = -P q_2 \\left(-\\frac{1}{2}(q_1^2 + q_2^2)^{-3/2}(2q_1)\\right) = \\frac{P q_1 q_2}{(q_1^2 + q_2^2)^{3/2}}\n$$\n$$\n\\frac{\\partial f_1}{\\partial q_2} = P \\frac{\\partial}{\\partial q_2} \\left(\\frac{-q_2}{(q_1^2 + q_2^2)^{1/2}}\\right) = P \\left[ \\frac{-1 \\cdot (q_1^2+q_2^2)^{1/2} - (-q_2) \\cdot \\frac{1}{2}(q_1^2+q_2^2)^{-1/2}(2q_2)}{q_1^2+q_2^2} \\right] = P \\frac{-(q_1^2+q_2^2)+q_2^2}{(q_1^2+q_2^2)^{3/2}} = \\frac{-P q_1^2}{(q_1^2 + q_2^2)^{3/2}}\n$$\nFor $f_2 = P q_1 (q_1^2 + q_2^2)^{-1/2}$:\n$$\n\\frac{\\partial f_2}{\\partial q_1} = P \\frac{\\partial}{\\partial q_1} \\left(\\frac{q_1}{(q_1^2 + q_2^2)^{1/2}}\\right) = P \\left[ \\frac{1 \\cdot (q_1^2+q_2^2)^{1/2} - q_1 \\cdot \\frac{1}{2}(q_1^2+q_2^2)^{-1/2}(2q_1)}{q_1^2+q_2^2} \\right] = P \\frac{(q_1^2+q_2^2)-q_1^2}{(q_1^2+q_2^2)^{3/2}} = \\frac{P q_2^2}{(q_1^2 + q_2^2)^{3/2}}\n$$\n$$\n\\frac{\\partial f_2}{\\partial q_2} = P q_1 \\left(-\\frac{1}{2}(q_1^2 + q_2^2)^{-3/2}(2q_2)\\right) = \\frac{-P q_1 q_2}{(q_1^2 + q_2^2)^{3/2}}\n$$\nAssembling the Jacobian matrix $\\boldsymbol{K}(\\boldsymbol{q})$:\n$$\n\\boldsymbol{K}(\\boldsymbol{q}) = \\frac{P}{(q_1^2 + q_2^2)^{3/2}} \\begin{bmatrix} q_1 q_2 & -q_1^2 \\\\ q_2^2 & -q_1 q_2 \\end{bmatrix}\n$$\nNow, we evaluate this matrix at the specified base configuration $\\boldsymbol{q}_{0} = \\begin{bmatrix} L \\\\ 0 \\end{bmatrix}$. At this point, $q_1 = L$ and $q_2 = 0$. The denominator becomes $(L^2 + 0^2)^{3/2} = L^3$.\nSubstituting these values into the components of $\\boldsymbol{K}$:\n$$\nK_{11} = \\frac{P(L)(0)}{L^3} = 0\n$$\n$$\nK_{12} = \\frac{-P(L^2)}{L^3} = -\\frac{P}{L}\n$$\n$$\nK_{21} = \\frac{P(0^2)}{L^3} = 0\n$$\n$$\nK_{22} = \\frac{-P(L)(0)}{L^3} = 0\n$$\nSo, the tangent operator at $\\boldsymbol{q}_{0}$ is:\n$$\n\\boldsymbol{K} = \\begin{bmatrix} 0 & -\\frac{P}{L} \\\\ 0 & 0 \\end{bmatrix}\n$$\nTo demonstrate that $\\boldsymbol{K}$ is not symmetric, we compute its transpose:\n$$\n\\boldsymbol{K}^{\\mathsf{T}} = \\begin{bmatrix} 0 & 0 \\\\ -\\frac{P}{L} & 0 \\end{bmatrix}\n$$\nSince $P>0$ and $L>0$, the term $-P/L$ is non-zero. It is clear that $K_{12} = -P/L$ while $K_{21} = 0$, so $K_{12} \\neq K_{21}$. Therefore, $\\boldsymbol{K} \\neq \\boldsymbol{K}^{\\mathsf{T}}$, and the tangent stiffness matrix is not symmetric. This serves as the required counterexample.\n\nThe physical origin of this asymmetry lies in the non-conservative nature of the follower force. A force field $\\boldsymbol{f}$ is conservative if and only if it is the gradient of a scalar potential, $\\boldsymbol{f} = -\\nabla V$. A necessary condition for a force field to be conservative is that its Jacobian matrix be symmetric. This is a consequence of the equality of mixed partial derivatives (Clairaut's theorem), as $K_{ij} = \\frac{\\partial f_i}{\\partial q_j} = \\frac{\\partial}{\\partial q_j}(-\\frac{\\partial V}{\\partial q_i}) = -\\frac{\\partial^2 V}{\\partial q_j \\partial q_i}$, which must equal $K_{ji} = -\\frac{\\partial^2 V}{\\partial q_i \\partial q_j}$. Since we have shown that $\\boldsymbol{K}$ is asymmetric, no such potential $V(\\boldsymbol{q})$ exists for the force $\\boldsymbol{f}(\\boldsymbol{q})$. This can also be verified by computing the curl of the force field in two dimensions:\n$$\n(\\text{curl}\\,\\boldsymbol{f})_z = \\frac{\\partial f_2}{\\partial q_1} - \\frac{\\partial f_1}{\\partial q_2} = \\frac{P q_2^2}{(q_1^2 + q_2^2)^{3/2}} - \\left(\\frac{-P q_1^2}{(q_1^2 + q_2^2)^{3/2}}\\right) = \\frac{P(q_1^2 + q_2^2)}{(q_1^2 + q_2^2)^{3/2}} = \\frac{P}{\\sqrt{q_1^2 + q_2^2}} = \\frac{P}{\\|\\boldsymbol{q}\\|}\n$$\nThe curl is non-zero (for $\\|\\boldsymbol{q}\\| < \\infty$), which proves that the force field is rotational and therefore non-conservative. The work done by this force depends on the path taken. The asymmetry in the tangent stiffness matrix $\\boldsymbol{K}$ is the direct mathematical manifestation of the configuration-dependent direction of the follower load, which prevents the work from being expressed as a change in potential energy.\n\nFinally, we evaluate the mismatch $M$. The linearized virtual work is $\\Delta(\\delta W_{\\mathrm{ext}}) = \\delta \\boldsymbol{q}^{\\mathsf{T}} \\boldsymbol{K} \\Delta \\boldsymbol{q}$.\nThe mismatch is defined as:\n$$\nM = \\left(\\boldsymbol{e}_{1}^{\\mathsf{T}} \\boldsymbol{K} \\boldsymbol{e}_{2}\\right) - \\left(\\boldsymbol{e}_{2}^{\\mathsf{T}} \\boldsymbol{K} \\boldsymbol{e}_{1}\\right)\n$$\nThis expression is simply the difference between the off-diagonal components of $\\boldsymbol{K}$:\n$$\nM = K_{12} - K_{21}\n$$\nUsing the components of $\\boldsymbol{K}$ evaluated at $\\boldsymbol{q}_{0}$:\n$$\nK_{12} = -\\frac{P}{L}\n$$\n$$\nK_{21} = 0\n$$\nSubstituting these values gives the mismatch:\n$$\nM = -\\frac{P}{L} - 0 = -\\frac{P}{L}\n$$\nThis quantifies the lack of symmetry in the linearized virtual work for the given infinitesimal virtual and real displacements.", "answer": "$$\n\\boxed{-\\frac{P}{L}}\n$$", "id": "2655351"}, {"introduction": "The theoretical rigor of deriving the consistent tangent finds its ultimate justification in computational performance. This final practice bridges theory and application, demonstrating why the distinction between a \"discretize-then-linearize\" (DTL) and a \"linearize-then-discretize\" (LTL) approach is so critical [@problem_id:2664942]. You will implement a Newton-Raphson solver for a nonlinear bar and directly compare the convergence behavior when using the true consistent tangent versus an approximate, inconsistent one. This powerful demonstration makes the abstract concept of quadratic convergence tangible, showing firsthand how a correctly linearized system leads to the robust and efficient solvers required in modern engineering analysis.", "problem": "Consider a geometrically nonlinear axial deformation of a one-dimensional hyperelastic bar in the total Lagrangian setting. The reference configuration is the interval $[0,L]$ with constant cross-sectional area $A$, and the displacement field is $u(X)$ along the axial direction, where $X$ is the material coordinate. The deformation gradient is $F = 1 + \\dfrac{du}{dX}$, the Green-Lagrange strain is $E = \\dfrac{1}{2}\\left(F^2 - 1\\right)$, and the constitutive behavior is Saint-Venant–Kirchhoff with strain energy density $\\psi(E) = \\dfrac{1}{2} E_m E^2$, where $E_m$ is the material modulus. The second Piola–Kirchhoff stress is $S = \\dfrac{d\\psi}{dE} = E_m E$. The principle of virtual work (internal equals external) in the reference configuration reads\n$$ \\int_{0}^{L} A\\, S\\, \\delta E \\, dX \\;=\\; P\\, \\delta u(L), $$\nwith essential boundary condition $u(0) = 0$ and a single concentrated external load $P$ applied at $X = L$.\n\nDiscretize the bar with a single linear ($2$-node) finite element with nodal displacements $u_1$ and $u_2$, using the standard linear shape functions over the element in the reference domain. You will implement and compare two different Newton–Raphson linearization choices for solving the discrete equilibrium equation for the single unknown $u_2$ (since $u_1=0$):\n\n- Discretize-then-linearize (DTL): First derive the discrete residual exactly from the discrete virtual work, and then compute its exact Jacobian (the consistent tangent) with respect to the discrete unknown.\n- Linearize-then-discretize (LTL): First linearize the continuum virtual work density with respect to the Green–Lagrange strain using the material modulus (that is, use only the constitutive linearization $C = \\dfrac{dS}{dE}$) while treating the kinematic mapping from $u$ to $E$ as if it were fixed when forming the Jacobian, and then discretize. This produces a different discrete tangent because the dependence of the kinematic operator on the displacement is not included in the Jacobian.\n\nYour tasks:\n\n$1.$ Starting from the fundamental definitions above, construct the discrete residual for the single-element problem with $u_1=0$ and unknown $u_2$. Do not assume small strain. Express the discrete internal force at node $X=L$ and form the scalar equilibrium equation with the external load $P$.\n\n$2.$ For the DTL approach, compute the exact derivative (with respect to $u_2$) of the discrete residual you derived in task $1$.\n\n$3.$ For the LTL approach, compute the Jacobian by using only the constitutive linearization $C = \\dfrac{dS}{dE}$ at the continuum level and then discretizing with the current kinematic mapping held fixed in the Jacobian (that is, omit the derivative of the kinematic mapping with respect to the displacement in the Jacobian). Show explicitly that the two Jacobians differ and identify the additional term present in DTL.\n\n$4.$ Implement a Newton–Raphson solver for the scalar unknown $u_2$ using each Jacobian choice (DTL and LTL). Use the same residual from task $1$ in both solvers, but use the respective Jacobian in the Newton update.\n\n$5.$ Using the same initial guess $u_2^{(0)} = \\dfrac{P L}{A E_m}$, iterate until either the absolute residual magnitude falls below a tolerance $\\varepsilon_R = 10^{-10}\\,\\mathrm{N}$ or the absolute update magnitude falls below $\\varepsilon_U = 10^{-12}\\,\\mathrm{m}$, or a maximum of $N_{\\max} = 50$ iterations is reached. If the method reaches a tolerance before $N_{\\max}$, declare convergence; otherwise, declare non-convergence. Ensure that your implementation guards against division by zero in the Newton update.\n\nYou must evaluate the two schemes on the following test suite, which fixes the geometric and material parameters and varies the load:\n\n- Fixed parameters: $L = 1.0\\,\\mathrm{m}$, $A = 0.01\\,\\mathrm{m}^2$, $E_m = 2.10\\times 10^{11}\\,\\mathrm{Pa}$.\n- Loads:\n  - Case $1$: $P = 0\\,\\mathrm{N}$.\n  - Case $2$: $P = 0.02 \\times A E_m\\,\\mathrm{N}$.\n  - Case $3$: $P = 0.50 \\times A E_m\\,\\mathrm{N}$.\n  - Case $4$: $P = 0.90 \\times A E_m\\,\\mathrm{N}$.\n\nFor each case, your program must output the following, in order: the converged displacement using DTL in meters, the number of DTL iterations, a boolean indicating DTL convergence, the converged displacement using LTL in meters (use the special floating-point token NaN if non-convergent), the number of LTL iterations, and a boolean indicating LTL convergence.\n\nFinal output format: Your program should produce a single line of output containing a list of results, one per test case, where each test case result is itself a list of the six values described above, for example\n$$ [\\,[u_{2,\\mathrm{DTL}},\\, n_{\\mathrm{DTL}},\\, \\mathrm{True},\\, u_{2,\\mathrm{LTL}},\\, n_{\\mathrm{LTL}},\\, \\mathrm{False}],\\; \\ldots\\,] $$\nNumerical quantities involving length must be in meters and those involving force must be in newtons. The printed line must be a single valid Python list literal with comma-separated entries and square brackets, containing floats, integers, and booleans only, in the order specified above.", "solution": "The problem presented is a valid and well-posed exercise in computational solid mechanics, requiring the application of the Newton-Raphson method to a geometrically nonlinear problem discretized by the finite element method. It serves as a canonical example for comparing a quadratically convergent scheme based on the consistent tangent (Discretize-then-Linearize, DTL) with a scheme that uses an inconsistent tangent (Linearize-then-Discretize, LTL), thereby demonstrating fundamental concepts of nonlinear finite element analysis. All provided data are scientifically sound, consistent, and sufficient for deriving a unique solution. We shall proceed with the derivation and solution.\n\nThe analysis begins with the discretization of the continuum mechanics formulation for a single two-node finite element spanning the domain $X \\in [0,L]$.\n\n**1. Discretization and Residual Formulation**\n\nThe displacement field $u(X)$ is approximated using linear shape functions $N_1(X) = 1 - X/L$ and $N_2(X) = X/L$. With nodal displacements $u_1$ and $u_2$, the field is $u(X) = u_1 N_1(X) + u_2 N_2(X)$. Applying the essential boundary condition $u(0) = 0$ implies $u_1 = 0$, simplifying the displacement field to:\n$$ u(X) = u_2 N_2(X) = u_2 \\frac{X}{L} $$\nThe displacement gradient is constant throughout the element:\n$$ \\frac{du}{dX} = \\frac{d}{dX} \\left( u_2 \\frac{X}{L} \\right) = \\frac{u_2}{L} $$\nFrom this, we derive the deformation gradient $F$ and the Green-Lagrange strain $E$:\n$$ F = 1 + \\frac{du}{dX} = 1 + \\frac{u_2}{L} $$\n$$ E = \\frac{1}{2}(F^2 - 1) = \\frac{1}{2}\\left[\\left(1 + \\frac{u_2}{L}\\right)^2 - 1\\right] = \\frac{u_2}{L} + \\frac{1}{2}\\left(\\frac{u_2}{L}\\right)^2 $$\nThe material is of the Saint-Venant–Kirchhoff type, so the second Piola-Kirchhoff stress $S$ is linearly related to the Green-Lagrange strain via the modulus $E_m$:\n$$ S = E_m E = E_m \\left[ \\frac{u_2}{L} + \\frac{1}{2}\\left(\\frac{u_2}{L}\\right)^2 \\right] $$\nThe principle of virtual work, $\\int_{0}^{L} A S \\delta E \\, dX = P \\delta u(L)$, provides the governing equilibrium equation. The variation of strain $\\delta E$ is found by applying the variational operator $\\delta$:\n$$ \\delta E = \\frac{dE}{du_2} \\delta u_2 = \\left[ \\frac{1}{L} + \\frac{u_2}{L^2} \\right] \\delta u_2 = \\frac{1}{L} \\left( 1 + \\frac{u_2}{L} \\right) \\delta u_2 = \\frac{F}{L} \\delta u_2 $$\nThe virtual displacement at the loaded end is $\\delta u(L) = \\delta u_2$. Since all kinematic quantities ($F$, $E$, $S$, $\\delta E$) are constant over the single element domain, the integral in the virtual work statement becomes trivial:\n$$ \\text{Internal Virtual Work (IVW)} = \\int_{0}^{L} A S \\delta E \\, dX = A S (\\delta E) L = A S \\left( \\frac{F}{L} \\delta u_2 \\right) L = A S F \\delta u_2 $$\nThe discrete internal force at node $2$, $f_{\\text{int}}$, is the coefficient of $\\delta u_2$:\n$$ f_{\\text{int}}(u_2) = A S F = A (E_m E) F = A E_m \\left[ \\frac{u_2}{L} + \\frac{1}{2}\\left(\\frac{u_2}{L}\\right)^2 \\right] \\left( 1 + \\frac{u_2}{L} \\right) $$\nEquilibrium requires that the internal force equals the external force, $f_{\\text{int}} = P$. The residual function $R(u_2)$ for the Newton-Raphson procedure is defined as the imbalance between internal and external forces:\n$$ R(u_2) = f_{\\text{int}}(u_2) - P = A E_m \\left[ \\frac{u_2}{L} + \\frac{1}{2}\\left(\\frac{u_2}{L}\\right)^2 \\right] \\left( 1 + \\frac{u_2}{L} \\right) - P $$\n\n**2. Discretize-then-Linearize (DTL) Jacobian**\n\nThe DTL approach derives the tangent stiffness (Jacobian) by taking the exact derivative of the discrete residual $R(u_2)$ with respect to the unknown $u_2$. This yields the consistent tangent, which ensures quadratic convergence of the Newton-Raphson method near the solution.\n$$ K_{\\text{DTL}}(u_2) = \\frac{d R(u_2)}{d u_2} = \\frac{d f_{\\text{int}}(u_2)}{d u_2} $$\nUsing the expression $f_{\\text{int}} = A E_m E F$ and applying the product rule:\n$$ K_{\\text{DTL}} = A E_m \\frac{d}{du_2}(E F) = A E_m \\left[ \\left(\\frac{dE}{du_2}\\right) F + E \\left(\\frac{dF}{du_2}\\right) \\right] $$\nThe required derivatives are:\n$$ \\frac{dF}{du_2} = \\frac{d}{du_2}\\left(1 + \\frac{u_2}{L}\\right) = \\frac{1}{L} $$\n$$ \\frac{dE}{du_2} = \\frac{d}{du_2}\\left(\\frac{u_2}{L} + \\frac{1}{2}\\frac{u_2^2}{L^2}\\right) = \\frac{1}{L} + \\frac{u_2}{L^2} = \\frac{1}{L}\\left(1+\\frac{u_2}{L}\\right) = \\frac{F}{L} $$\nSubstituting these into the expression for $K_{\\text{DTL}}$:\n$$ K_{\\text{DTL}} = A E_m \\left[ \\left(\\frac{F}{L}\\right)F + E\\left(\\frac{1}{L}\\right) \\right] = \\frac{A E_m}{L} (F^2 + E) $$\nThis expression combines the material stiffness contribution ($\\propto F^2$) and the geometric stiffness contribution ($\\propto E$). Substituting for $F$ and $E$ in terms of $u_2$:\n$$ K_{\\text{DTL}} = \\frac{A E_m}{L} \\left[ \\left(1+\\frac{u_2}{L}\\right)^2 + \\left(\\frac{u_2}{L} + \\frac{1}{2}\\left(\\frac{u_2}{L}\\right)^2\\right) \\right] $$\n$$ K_{\\text{DTL}} = \\frac{A E_m}{L} \\left[ 1 + 3\\frac{u_2}{L} + \\frac{3}{2}\\left(\\frac{u_2}{L}\\right)^2 \\right] $$\n\n**3. Linearize-then-Discretize (LTL) Jacobian and Comparison**\n\nThe LTL approach follows a different procedure. The linearization is performed at the continuum level, but only partially. It considers only the material component of the linearization, $\\Delta S = C \\Delta E$ where $C = dS/dE = E_m$, and neglects the geometric part that arises from the variation of the strain operator itself. The tangent is formed by discretizing the approximate linearized virtual work:\n$$ \\delta(\\text{IVW})_{\\text{LTL}} = \\int_0^L A (C \\Delta E) \\delta E \\, dX $$\nWe now substitute the discrete forms of $\\Delta E$ and $\\delta E$:\n$$ \\Delta E = \\frac{dE}{du_2} \\Delta u_2 = \\frac{F}{L} \\Delta u_2 $$\n$$ \\delta E = \\frac{dE}{du_2} \\delta u_2 = \\frac{F}{L} \\delta u_2 $$\nSubstituting into the LTL integral:\n$$ \\delta(\\text{IVW})_{\\text{LTL}} = \\int_0^L A E_m \\left(\\frac{F}{L} \\Delta u_2\\right) \\left(\\frac{F}{L} \\delta u_2\\right) \\, dX $$\nSince all terms are constant over the element, this evaluates to:\n$$ \\delta(\\text{IVW})_{\\text{LTL}} = A E_m \\frac{F^2}{L^2} L \\, \\Delta u_2 \\, \\delta u_2 = \\left( \\frac{A E_m F^2}{L} \\right) \\Delta u_2 \\, \\delta u_2 $$\nThe LTL Jacobian is the term multiplying the displacement increments:\n$$ K_{\\text{LTL}} = \\frac{A E_m F^2}{L} = \\frac{A E_m}{L} \\left(1 + \\frac{u_2}{L}\\right)^2 = \\frac{A E_m}{L} \\left[ 1 + 2\\frac{u_2}{L} + \\left(\\frac{u_2}{L}\\right)^2 \\right] $$\nComparing the two Jacobians, we see they are not identical:\n$$ K_{\\text{DTL}} = K_{\\text{LTL}} + \\frac{A E_m}{L} E $$\nThe LTL Jacobian is missing the geometric stiffness term, $\\frac{A E_m}{L} E = \\frac{A S}{L}$. This term accounts for the effect of existing stress on the stiffness. Its omission means $K_{\\text{LTL}}$ is not the consistent tangent for the residual $R(u_2)$, and the Newton-Raphson method using it will not exhibit quadratic convergence. The convergence rate is expected to degrade to linear, or fail entirely, especially for large strains where $E$ is significant.\n\n**4. Newton-Raphson Implementation**\n\nFor the scalar unknown $u_2$, the Newton-Raphson update at iteration $k$ is:\n$$ u_2^{(k+1)} = u_2^{(k)} - \\frac{R(u_2^{(k)})}{K(u_2^{(k)})} $$\nWe implement this iterative scheme for both the DTL and LTL choices of the Jacobian, $K$. The initial guess is taken from linear elastic theory, $u_2^{(0)} = PL/(AE_m)$. The iteration proceeds until the absolute value of the residual falls below $\\varepsilon_R = 10^{-10}\\,\\mathrm{N}$, or the absolute value of the displacement update falls below $\\varepsilon_U = 10^{-12}\\,\\mathrm{m}$. A maximum of $N_{\\max} = 50$ iterations is allowed. If convergence is not achieved, the method is declared non-convergent. A check for a near-zero Jacobian is included to prevent division by zero, which would indicate a loss of stiffness. The following Python code implements this logic and evaluates the performance of both schemes on the specified test cases.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the nonlinear axial deformation of a hyperelastic bar using\n    two different Newton-Raphson schemes (DTL and LTL) and reports\n    the convergence behavior for a suite of test cases.\n    \"\"\"\n    \n    # Fixed parameters\n    L = 1.0  # m\n    A = 0.01  # m^2\n    E_m = 2.10e11  # Pa\n    \n    # Numerical parameters for the solver\n    TOL_R = 1e-10  # N, absolute residual tolerance\n    TOL_U = 1e-12  # m, absolute update tolerance\n    MAX_ITER = 50  # Maximum number of iterations\n    \n    # Reference force for defining loads\n    A_Em = A * E_m\n    \n    # Test cases: loads P\n    test_cases = [\n        0.0,\n        0.02 * A_Em,\n        0.50 * A_Em,\n        0.90 * A_Em,\n    ]\n\n    def run_newton_solver(P, jacobian_type):\n        \"\"\"\n        Performs the Newton-Raphson iteration for a given load and Jacobian type.\n        \n        Args:\n            P (float): External load in N.\n            jacobian_type (str): 'DTL' or 'LTL'.\n            \n        Returns:\n            tuple: (final_displacement, num_iterations, converged_status)\n        \"\"\"\n        # Initial guess from linear elasticity\n        u = (P * L) / A_Em\n        \n        # Check initial guess before iterating\n        u_L_ratio = u / L\n        F = 1.0 + u_L_ratio\n        E = u_L_ratio + 0.5 * u_L_ratio**2\n        S = E_m * E\n        R = A * S * F - P\n        \n        if abs(R) < TOL_R:\n            return u, 0, True\n\n        for n_iter in range(1, MAX_ITER + 1):\n            # Calculate Jacobian K\n            u_L_ratio = u / L\n            F = 1.0 + u_L_ratio\n            \n            if jacobian_type == 'DTL':\n                # Consistent tangent K_DTL = A*Em/L * (1 + 3*(u/L) + 1.5*(u/L)^2)\n                K = (A * E_m / L) * (1.0 + 3.0 * u_L_ratio + 1.5 * u_L_ratio**2)\n            elif jacobian_type == 'LTL':\n                # Inconsistent tangent K_LTL = A*Em/L * F^2\n                K = (A * E_m / L) * F**2\n            else:\n                raise ValueError(\"Unknown Jacobian type\")\n            \n            # Check for near-zero stiffness (singularity)\n            if abs(K) < 1e-20:\n                u_final = float('nan') if jacobian_type == 'LTL' else u\n                return u_final, n_iter - 1, False\n\n            # Calculate update and apply it\n            du = -R / K\n            u += du\n            \n            # Check update convergence\n            if abs(du) < TOL_U:\n                return u, n_iter, True\n            \n            # Recalculate residual for next iteration's residual check\n            u_L_ratio = u / L\n            F = 1.0 + u_L_ratio\n            E = u_L_ratio + 0.5 * u_L_ratio**2\n            S = E_m * E\n            R = A * S * F - P\n            \n            # Check residual convergence\n            if abs(R) < TOL_R:\n                return u, n_iter, True\n\n        # If loop completes, max iterations were reached without convergence\n        u_final = float('nan') if jacobian_type == 'LTL' else u\n        return u_final, MAX_ITER, False\n\n    results = []\n    for P in test_cases:\n        u_dtl, n_dtl, conv_dtl = run_newton_solver(P, 'DTL')\n        u_ltl, n_ltl, conv_ltl = run_newton_solver(P, 'LTL')\n        \n        # For LTL non-convergence, the displacement is NaN as per problem spec\n        if not conv_ltl:\n            u_ltl = float('nan')\n\n        results.append([u_dtl, n_dtl, conv_dtl, u_ltl, n_ltl, conv_ltl])\n\n    # Final print statement must produce a single valid Python list literal.\n    # The default print() for a list of lists matches the required format.\n    print(results)\n\nsolve()\n```", "id": "2664942"}]}