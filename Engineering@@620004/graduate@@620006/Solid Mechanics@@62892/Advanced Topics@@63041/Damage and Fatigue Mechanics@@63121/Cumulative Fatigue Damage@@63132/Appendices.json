{"hands_on_practices": [{"introduction": "Real-world components are seldom subjected to simple, constant-amplitude loading. To analyze fatigue damage under variable amplitude service histories, we must first decompose the complex stress signal into a series of discrete, countable events. This practice introduces the industry-standard rainflow counting algorithm, a robust method for identifying full and half cycles that correspond to closed material hysteresis loops, providing a sound physical basis for subsequent damage calculations [@problem_id:2628868].", "problem": "A uniaxial, proportional stress history in a smooth, nominally elastic metallic specimen is sampled densely enough that all turning points (local maxima and minima) have been extracted. The resulting ordered sequence of turning-point stresses in megapascals (MPa) is:\n$0, 90, -30, 130, 10, 170, -10, 150, 20, 80, -50, 60, -20, 100, -40$.\n  \nUsing only the definitions of turning points, closed hysteresis loops, and the standard rainflow cycle counting principle as codified in the Standard Practice for Cycle Counting in Fatigue Analysis (ASTM E1049-85), perform rainflow counting on this sequence to identify all full cycles and the residual half cycles. For each identified cycle, determine its stress amplitude and stress ratio, where stress amplitude is defined as half the range of the cycle and stress ratio is defined as the minimum stress divided by the maximum stress over that cycle. Report each cycle as a pair $(S_a, R)$ with $S_a$ in MPa. Then compute the total cycle count as an equivalent number of full cycles by aggregating full cycles with weight $1$ and half cycles with weight $1/2$.\n\nExpress the final answer as a pure number (no units). No rounding instruction is necessary; provide the exact value.", "solution": "The problem as stated is scientifically grounded, well-posed, and complete. It describes a standard procedure in fatigue analysis, rainflow cycle counting, as codified in ASTM E1049-85. All necessary data and definitions are provided. The problem is therefore valid and permits a unique solution.\n\nThe task is to perform rainflow cycle counting on a given sequence of stress turning points. We will employ the four-point algorithm, a direct implementation of the rainflow counting principle that correctly identifies both full cycles and residual half-cycles. Let the sequence of turning points be denoted by $S$. We will process the sequence by maintaining a residue stack, which we denote as $T$.\n\nThe given sequence of stress turning points is:\n$$ S = [0, 90, -30, 130, 10, 170, -10, 150, 20, 80, -50, 60, -20, 100, -40] $$\nAll stress values are in megapascals (MPa).\n\nThe algorithm proceeds as follows: We iterate through the points in $S$, adding each to the residue stack $T$. After each addition, we check if a full cycle has been formed by the last four points in $T$. Let the last four points be $s_1, s_2, s_3, s_4$. A full cycle corresponding to the stress range between $s_2$ and $s_3$ is counted if the range $|s_3 - s_2|$ is less than or equal to the range $|s_4 - s_1|$. If a cycle is identified, the points $s_2$ and $s_3$ are removed from $T$, and the check is repeated on the new residue stack. If no cycle is identified, we proceed to the next point in $S$.\n\nLet us trace the execution:\n\n1.  Initialize residue stack $T = []$.\n2.  Process points from $S$:\n    - Add $0, 90, -30$. $T = [0, 90, -30]$. Length is $3$, no check.\n    - Add $130$. $T = [0, 90, -30, 130]$. Check last four points: $s_1=0, s_2=90, s_3=-30, s_4=130$. The inner range $|-30 - 90| = 120$ is less than or equal to the outer range $|130 - 0| = 130$. A full cycle from $90$ to $-30$ is counted. Remove $90$ and $-30$. $T$ becomes $[0, 130]$.\n    - Add $10, 170$. $T = [0, 130, 10, 170]$. Check last four points: $s_1=0, s_2=130, s_3=10, s_4=170$. The inner range $|10 - 130| = 120$ is less than or equal to the outer range $|170 - 0| = 170$. A full cycle from $130$ to $10$ is counted. Remove $130$ and $10$. $T$ becomes $[0, 170]$.\n    - Add $-10, 150$. $T = [0, 170, -10, 150]$. Check: $|-10 - 170| = 180$ is not $\\le |150 - 0| = 150$. No cycle.\n    - Add $20$. $T = [0, 170, -10, 150, 20]$. Check last four $[170, -10, 150, 20]$: $|150 - (-10)| = 160$ is not $\\le |20 - 170| = 150$. No cycle.\n    - Add $80$. $T = [0, 170, -10, 150, 20, 80]$. Check last four $[-10, 150, 20, 80]$: $|20 - 150| = 130$ is not $\\le |80 - (-10)| = 90$. No cycle.\n    - Add $-50$. $T = [0, 170, -10, 150, 20, 80, -50]$. Check last four $[150, 20, 80, -50]$: $|80 - 20| = 60 \\le |-50 - 150| = 200$. A full cycle from $20$ to $80$ is counted. Remove $20$ and $80$. $T$ becomes $[0, 170, -10, 150, -50]$. We re-check the new last four points $[170, -10, 150, -50]$: $|150 - (-10)| = 160 \\le |-50 - 170| = 220$. A full cycle from $-10$ to $150$ is counted. Remove $-10$ and $150$. $T$ becomes $[0, 170, -50]$. Length is $3$, no further check.\n    - Add $60$. $T = [0, 170, -50, 60]$. Check: $|60 - (-50)| = 110$ is not $\\le |60 - 0| = 60$. No cycle.\n    - Add $-20$. $T = [0, 170, -50, 60, -20]$. Check last four $[170, -50, 60, -20]$: $|60 - (-50)| = 110 \\le |-20 - 170| = 190$. A full cycle from $-50$ to $60$ is counted. Remove $-50$ and $60$. $T$ becomes $[0, 170, -20]$.\n    - Add $100$. $T = [0, 170, -20, 100]$. Check: $|100 - (-20)| = 120$ is not $\\le |100 - 0| = 100$. No cycle.\n    - Add $-40$. $T = [0, 170, -20, 100, -40]$. Check last four $[170, -20, 100, -40]$: $|100 - (-20)| = 120 \\le |-40 - 170| = 210$. A full cycle from $-20$ to $100$ is counted. Remove $-20$ and $100$. $T$ becomes $[0, 170, -40]$.\n\n3.  The input sequence $S$ is now exhausted. The final residue stack is $T = [0, 170, -40]$.\n\nFor each identified cycle, we compute the stress amplitude, $S_a = \\frac{S_{max} - S_{min}}{2}$, and the stress ratio, $R = \\frac{S_{min}}{S_{max}}$.\n\nFull cycles ($N_{full} = 6$):\n1.  From $(90, -30)$: $S_{max}=90, S_{min}=-30$. $S_a = \\frac{90 - (-30)}{2} = 60$. $R = \\frac{-30}{90} = -\\frac{1}{3}$. Pair: $(60, -\\frac{1}{3})$.\n2.  From $(130, 10)$: $S_{max}=130, S_{min}=10$. $S_a = \\frac{130 - 10}{2} = 60$. $R = \\frac{10}{130} = \\frac{1}{13}$. Pair: $(60, \\frac{1}{13})$.\n3.  From $(80, 20)$: $S_{max}=80, S_{min}=20$. $S_a = \\frac{80 - 20}{2} = 30$. $R = \\frac{20}{80} = \\frac{1}{4}$. Pair: $(30, \\frac{1}{4})$.\n4.  From $(150, -10)$: $S_{max}=150, S_{min}=-10$. $S_a = \\frac{150 - (-10)}{2} = 80$. $R = \\frac{-10}{150} = -\\frac{1}{15}$. Pair: $(80, -\\frac{1}{15})$.\n5.  From $(60, -50)$: $S_{max}=60, S_{min}=-50$. $S_a = \\frac{60 - (-50)}{2} = 55$. $R = \\frac{-50}{60} = -\\frac{5}{6}$. Pair: $(55, -\\frac{5}{6})$.\n6.  From $(100, -20)$: $S_{max}=100, S_{min}=-20$. $S_a = \\frac{100 - (-20)}{2} = 60$. $R = \\frac{-20}{100} = -\\frac{1}{5}$. Pair: $(60, -\\frac{1}{5})$.\n\nResidual half-cycles ($N_{half} = 2$):\nThe residue $T = [0, 170, -40]$ yields two half-cycles by pairing adjacent points.\n1.  From $(0, 170)$: $S_{max}=170, S_{min}=0$. $S_a = \\frac{170 - 0}{2} = 85$. $R = \\frac{0}{170} = 0$. Pair: $(85, 0)$.\n2.  From $(170, -40)$: $S_{max}=170, S_{min}=-40$. $S_a = \\frac{170 - (-40)}{2} = 105$. $R = \\frac{-40}{170} = -\\frac{4}{17}$. Pair: $(105, -\\frac{4}{17})$.\n\nFinally, we compute the total equivalent number of full cycles. Each full cycle has a weight of $1$, and each half-cycle has a weight of $\\frac{1}{2}$.\n$$ N_{total} = N_{full} + \\frac{1}{2} N_{half} $$\nSubstituting the counts:\n$$ N_{total} = 6 + \\frac{1}{2}(2) = 6 + 1 = 7 $$\nThe total cycle count is $7$.", "answer": "$$\\boxed{7}$$", "id": "2628868"}, {"introduction": "The simplest approach to summing damage from various load cycles is the Palmgren-Miner linear damage rule. A critical, and often incorrect, assumption of this rule is that the order in which cycles are applied does not matter. This exercise directly challenges that assumption by examining a hypothetical scenario where a high-to-low load sequence produces a different outcome than a low-to-high sequence, introducing a nonlinear damage model motivated by the physical phenomenon of overload-induced crack retardation [@problem_id:2628854].", "problem": "A metallic alloy subjected to fully reversed cyclic loading is characterized by a stress–life (S–N) relation of Basquin type. The S–N curve is given in the form that the number of cycles to failure under constant stress amplitude $S$ is $N_{f}(S)=K\\,S^{-b}$, with material constants $K$ and $b$. Consider a two-block load history with stress amplitudes $S_{H}$ and $S_{L}$, applied for $n_{H}$ and $n_{L}$ cycles, respectively. Two sequences are considered: high-to-low ($H\\rightarrow L$) and low-to-high ($L\\rightarrow H$).\n\nFor the same material, crack growth in the long-crack regime under constant amplitude is well described by the Paris–Erdogan law $da/dN=C\\left(\\Delta K\\right)^{m}$, where $\\Delta K$ is the stress intensity factor range and $m$ is the Paris exponent. Assume a through-thickness crack with geometry factor $Y\\approx 1$ so that $\\Delta K=Y\\,S\\,\\sqrt{\\pi a}$. Following a high-amplitude block at $S_{H}$, the subsequent low-amplitude block at $S_{L}$ experiences overload-induced crack-closure that reduces the effective stress intensity factor range by an amount $\\Delta K_{\\mathrm{cl}}=\\eta\\,\\Delta K_{H}$, with a constant $0<\\eta<1$ and $\\Delta K_{H}=Y\\,S_{H}\\sqrt{\\pi a}$. Assume further that over the two blocks the crack length $a$ does not change appreciably, so that ratios of $\\Delta K$ are controlled by the ratios of the applied stress amplitudes.\n\nUsing these bases:\n- Use the Basquin S–N curve to determine $N_{f}(S_{H})$ and $N_{f}(S_{L})$.\n- Under the linear cumulative damage assumption, evaluate the accumulated damage $D$ after both blocks for both sequences $H\\rightarrow L$ and $L\\rightarrow H$.\n- For a nonlinear, sequence-sensitive model motivated by the crack-closure effect above, model the crack growth rate during a low-amplitude block that follows a high-amplitude block as proportional to $\\left(\\Delta K_{L}-\\Delta K_{\\mathrm{cl}}\\right)^{m}$, where $\\Delta K_{L}=Y\\,S_{L}\\sqrt{\\pi a}$. Map this to an equivalent damage fraction for the low-amplitude block by comparing to the constant-amplitude growth at $S_{L}$, and use this to compute the nonlinear accumulated damage $D^{\\mathrm{nl}}$ for both sequences. Assume that there is no acceleration or retardation for a high-amplitude block that follows a low-amplitude block.\n\nUse the following data:\n- Basquin constants: $K=1.0\\times 10^{18}\\,\\mathrm{MPa}^{b}\\,\\mathrm{cycles}$, $b=5$.\n- Stress amplitudes: $S_{H}=450\\,\\mathrm{MPa}$, $S_{L}=300\\,\\mathrm{MPa}$.\n- Block lengths: $n_{H}=1.0\\times 10^{4}\\,\\mathrm{cycles}$, $n_{L}=1.0\\times 10^{5}\\,\\mathrm{cycles}$.\n- Paris exponent and geometry: $m=3$, $Y=1$.\n- Closure parameter: $\\eta=0.4$.\n\nReport as your final result the single number\n$$\\Delta D^{\\ast}=D^{\\mathrm{nl}}_{H\\rightarrow L}-D^{\\mathrm{nl}}_{L\\rightarrow H},$$\nexpressed as a pure number (dimensionless). Round your answer to four significant figures.", "solution": "The problem presented is a valid exercise in continuum damage mechanics, specifically concerning the sequence effects in cumulative fatigue damage. It combines the S–N approach (Basquin's law) with concepts from linear elastic fracture mechanics (Paris's law and crack closure) to construct a nonlinear damage accumulation model. All necessary constants and assumptions are explicitly provided, rendering the problem well-posed and solvable. We shall proceed with the derivation.\n\nFirst, we define the parameters provided in the problem statement.\nThe Basquin stress–life relation is given as $N_{f}(S) = K\\,S^{-b}$.\nThe material constants are $K = 1.0 \\times 10^{18}\\,\\mathrm{MPa}^{b}\\,\\mathrm{cycles}$ and $b = 5$.\nThe loading consists of two blocks: a high-amplitude block with stress $S_{H} = 450\\,\\mathrm{MPa}$ for $n_{H} = 1.0 \\times 10^{4}$ cycles, and a low-amplitude block with stress $S_{L} = 300\\,\\mathrm{MPa}$ for $n_{L} = 1.0 \\times 10^{5}$ cycles.\n\nFor the nonlinear model, the Paris exponent is $m = 3$. The overload-induced crack closure effect modifies the effective stress intensity factor during the low-amplitude block following a high-amplitude block. The closure parameter is $\\eta = 0.4$.\n\nThe problem asks for the difference in accumulated damage $\\Delta D^{\\ast} = D^{\\mathrm{nl}}_{H\\rightarrow L}-D^{\\mathrm{nl}}_{L\\rightarrow H}$ between two loading sequences.\n\nWe begin by identifying the number of cycles to failure, $N_{f}$, for each stress level using the Basquin relation.\nFor the high-stress amplitude $S_{H}$:\n$$N_{f}(S_{H}) = K\\,S_{H}^{-b}$$\nFor the low-stress amplitude $S_{L}$:\n$$N_{f}(S_{L}) = K\\,S_{L}^{-b}$$\nUnder the linear cumulative damage assumption (Palmgren-Miner rule), damage is independent of the load sequence. The total damage $D$ after both blocks is the sum of the cycle ratios:\n$$D = \\frac{n_{H}}{N_{f}(S_{H})} + \\frac{n_{L}}{N_{f}(S_{L})}$$\nThis linear damage value is identical for both the high-to-low ($H \\rightarrow L$) and low-to-high ($L \\rightarrow H$) sequences.\n\nNow, we construct the nonlinear, sequence-sensitive damage model as specified.\nFor the low-to-high ($L \\rightarrow H$) sequence, the problem states that there is no acceleration or retardation effect. Therefore, the damage accumulated is identical to the linear Palmgren-Miner sum:\n$$D^{\\mathrm{nl}}_{L\\rightarrow H} = \\frac{n_{L}}{N_{f}(S_{L})} + \\frac{n_{H}}{N_{f}(S_{H})}$$\n\nFor the high-to-low ($H \\rightarrow L$) sequence, the initial high-load block induces a retardation effect on the subsequent low-load block. The damage from the first block (high stress) is standard:\n$$D_{H} = \\frac{n_{H}}{N_{f}(S_{H})}$$\nThe damage from the second block (low stress) is modified. The problem models this by modifying the crack growth rate. The standard crack growth rate at $S_{L}$ is given by Paris's law: $da/dN = C(\\Delta K_{L})^m$. The retarded rate is $(da/dN)_{\\text{ret}} = C(\\Delta K_{L} - \\Delta K_{\\mathrm{cl}})^m$.\nThe stress intensity factor ranges are $\\Delta K_{L} = Y S_{L} \\sqrt{\\pi a}$ and $\\Delta K_{H} = Y S_{H} \\sqrt{\\pi a}$. The closure term is $\\Delta K_{\\mathrm{cl}} = \\eta \\Delta K_{H}$.\nTo map this to damage, we find the ratio of the retarded growth rate to the standard growth rate. The assumption that crack length $a$ is approximately constant makes this ratio independent of $a$:\n$$\\phi = \\frac{(da/dN)_{\\text{ret}}}{(da/dN)} = \\frac{C(\\Delta K_{L} - \\eta \\Delta K_{H})^m}{C(\\Delta K_{L})^m} = \\left(\\frac{Y S_{L} \\sqrt{\\pi a} - \\eta Y S_{H} \\sqrt{\\pi a}}{Y S_{L} \\sqrt{\\pi a}}\\right)^{m} = \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m}$$\nThis factor $\\phi$ represents the reduction in the rate of damage accumulation. The damage contribution from the low-stress block in the $H \\rightarrow L$ sequence is thus modified:\n$$D_{L, \\text{ret}} = \\phi \\cdot \\frac{n_{L}}{N_{f}(S_{L})} = \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} \\frac{n_{L}}{N_{f}(S_{L})}$$\nThe total nonlinear damage for the $H \\rightarrow L$ sequence is the sum of the contributions:\n$$D^{\\mathrm{nl}}_{H\\rightarrow L} = D_{H} + D_{L, \\text{ret}} = \\frac{n_{H}}{N_{f}(S_{H})} + \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} \\frac{n_{L}}{N_{f}(S_{L})}$$\n\nFinally, we compute the required difference, $\\Delta D^{\\ast}$:\n$$\\Delta D^{\\ast} = D^{\\mathrm{nl}}_{H\\rightarrow L} - D^{\\mathrm{nl}}_{L\\rightarrow H}$$\n$$= \\left[ \\frac{n_{H}}{N_{f}(S_{H})} + \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} \\frac{n_{L}}{N_{f}(S_{L})} \\right] - \\left[ \\frac{n_{L}}{N_{f}(S_{L})} + \\frac{n_{H}}{N_{f}(S_{H})} \\right]$$\nThe terms associated with the high-stress block, $n_{H}/N_{f}(S_{H})$, cancel out:\n$$\\Delta D^{\\ast} = \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} \\frac{n_{L}}{N_{f}(S_{L})} - \\frac{n_{L}}{N_{f}(S_{L})} = \\frac{n_{L}}{N_{f}(S_{L})} \\left[ \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} - 1 \\right]$$\nSubstitute $N_{f}(S_L) = K\\,S_{L}^{-b}$:\n$$\\Delta D^{\\ast} = \\frac{n_{L} S_{L}^{b}}{K} \\left[ \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} - 1 \\right]$$\nNow we substitute the given numerical values:\n$n_{L} = 1.0 \\times 10^{5}$\n$S_{L} = 300\\,\\mathrm{MPa}$\n$K = 1.0 \\times 10^{18}$\n$b = 5$\n$\\eta = 0.4$\n$S_{H} = 450\\,\\mathrm{MPa}$\n$m = 3$\n\nFirst, we evaluate the term for the low-stress block damage fraction:\n$$\\frac{n_{L} S_{L}^{b}}{K} = \\frac{(1.0 \\times 10^{5}) \\times (300)^{5}}{1.0 \\times 10^{18}} = \\frac{10^{5} \\times (3 \\times 10^{2})^{5}}{10^{18}} = \\frac{10^{5} \\times 3^{5} \\times 10^{10}}{10^{18}} = \\frac{243 \\times 10^{15}}{10^{18}} = 0.243$$\nNext, we evaluate the retardation factor term in the brackets:\n$$ \\left(1 - \\eta \\frac{S_{H}}{S_{L}}\\right)^{m} - 1 = \\left(1 - 0.4 \\times \\frac{450}{300}\\right)^{3} - 1 = \\left(1 - 0.4 \\times 1.5\\right)^{3} - 1 = (1 - 0.6)^{3} - 1 = (0.4)^{3} - 1 $$\n$$ (0.4)^{3} - 1 = 0.064 - 1 = -0.936 $$\nFinally, we compute $\\Delta D^{\\ast}$:\n$$ \\Delta D^{\\ast} = (0.243) \\times (-0.936) = -0.227448 $$\nRounding the result to four significant figures as requested gives:\n$$ \\Delta D^{\\ast} \\approx -0.2274 $$\nThe negative sign indicates, as expected, that the high-to-low sequence is less damaging than the low-to-high sequence, due to the retardation effect of the overload.", "answer": "$$\\boxed{-0.2274}$$", "id": "2628854"}, {"introduction": "Moving from manual calculation to automated analysis is a crucial step in engineering practice. This capstone exercise guides you through building a complete computational pipeline for fatigue damage assessment, starting from a raw stress time-series. You will implement the full workflow, including cycle identification via rainflow counting, accounting for mean stress effects using the Goodman correction, and summing damage with Miner's rule, a process central to modern durability engineering [@problem_id:2875935].", "problem": "You must write a complete, runnable program that transforms a discrete stress time series into cumulative fatigue damage $D$ by implementing a principled pipeline consisting of: rainflow cycle counting on reversal points, linear mean-stress correction, and mapping to cycles-to-failure via an $S$-$N$ relation, followed by linear damage accumulation. The derivation should proceed from core definitions: cycle extraction by reversals and closure, amplitude and mean stress per cycle, a linear mean-stress correction referenced to ultimate tensile strength, an $S$-$N$ relation consistent with high-cycle fatigue, and linear cumulative damage. The program must produce numeric results only, as specified below.\n\nRequired conceptual pipeline:\n- Starting from a discrete stress series $s(t_i)$, first extract reversal points (local maxima and minima), preserving the first and last point of the series.\n- Perform rainflow counting on the reversals to produce cycles with range $\\Delta S$ and mean $S_m$, counting both closed cycles and residual half cycles at the ends.\n- For each cycle, compute stress amplitude $S_a$ and mean $S_m$; apply a linear mean stress correction (Goodman type) referenced to ultimate tensile strength $S_u$ to obtain an equivalent fully reversed amplitude.\n- Map the equivalent amplitudes to cycles-to-failure using a power-law $S$-$N$ relation with a defined endurance limit $S_e$ below which damage is taken as zero.\n- Accumulate damage by linear summation across cycles to obtain $D$.\n\nScientific and numerical requirements:\n- All stresses must be treated in megapascals (MPa).\n- Cumulative damage $D$ is unitless. Express $D$ as a decimal rounded to $6$ digits after the decimal point.\n- Treat cycles with equivalent amplitude less than or equal to the endurance limit $S_e$ as causing zero damage.\n- Treat residual half cycles consistently with the rainflow standard as contributing a weight of $0.5$ of a full cycle.\n- Use a linear mean-stress correction referenced to $S_u$.\n- Use a power-law $S$-$N$ relation characterized by constants $C$ and $m$.\n\nTest suite:\n- For all test cases, use the same material parameters:\n  - Ultimate tensile strength $S_u = 700$ MPa.\n  - Endurance limit $S_e = 160$ MPa.\n  - $S$-$N$ constants: $C = 4.9 \\times 10^{12}$, $m = 3.0$.\n- Time series are given as discrete stress values $s_i$ in MPa. Your implementation must first reduce each series to reversal points and then perform rainflow counting.\n\nTest cases to evaluate:\n- Case 1 (happy path, fully reversed cycles above $S_e$): `[0, 200, -200, 200, -200, 0]`.\n- Case 2 (boundary, fully reversed cycles below $S_e$): `[0, 80, -80, 80, -80, 0]`.\n- Case 3 (significant nonzero mean stress, above $S_e$ after correction): `[100, 280, -80, 280, -80, 100]`.\n- Case 4 (edge case with mixed small cycles and an unclosed large excursion producing half cycles): `[0, 50, 0, -50, 0, 220, 0]`.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets in the order of the cases, for example $[d_1,d_2,d_3,d_4]$, where each $d_i$ is the cumulative damage rounded to $6$ digits after the decimal point.\n\nDeliverables:\n- A single Python program that:\n  - Implements reversal extraction, rainflow counting, mean-stress correction (linear relative to $S_u$), and $S$-$N$ mapping with the provided $C$, $m$, $S_e$.\n  - Computes $D$ for each test case by linear accumulation.\n  - Prints exactly one line of the form $[d_1,d_2,d_3,d_4]$ with each $d_i$ rounded to $6$ digits after the decimal point.\n\nIn your written solution, clearly identify and justify each approximation or modeling choice involved in this pipeline, including but not limited to discretization of $s(t)$, reversal extraction, rainflow closure criteria, linear mean-stress correction, $S$-$N$ extrapolation and thresholding by $S_e$, and linear damage accumulation. The code output must remain purely numeric as specified above.", "solution": "The problem as stated is a well-defined exercise in computational materials mechanics, specifically pertaining to the estimation of cumulative fatigue damage. It is scientifically grounded, internally consistent, and contains all necessary parameters and data for a unique solution to be computed. It is therefore deemed a valid problem.\n\nThe solution requires the implementation of a standard fatigue analysis pipeline. Each step is based on established principles and models, which involve certain idealizations and approximations that must be clearly stated. The process begins with a stress-time history, $s(t)$, and concludes with a single dimensionless damage value, $D$.\n\n**Step 1: Reversal Point Extraction**\nFatigue damage is driven by stress reversals, not the entire time history. The first step is to distill the discrete stress series $s_i$ into a sequence of its local extrema (peaks and valleys). The provided series are already given in a form where intermediate points on monotonic segments have been removed, or require minimal filtering. A point $s_i$ is considered a reversal if it is a local maximum or minimum, which can be checked by the condition $(s_i - s_{i-1})(s_{i+1} - s_i) < 0$. As per the problem specification, the first and last points of the series are always retained in the reversal sequence.\n\n**Step 2: Rainflow Cycle Counting**\nFrom the sequence of reversal points, individual stress cycles must be identified. The rainflow counting algorithm is the standard method for this task, as it correctly pairs stress peaks and valleys to form cycles that correspond to closed hysteresis loops in the stress-strain behavior of the material. We will employ a stack-based, four-point algorithm compliant with the ASTM E1049-85 standard.\n\nThe algorithm proceeds as follows:\n1. Initialize an empty stack, $T$, to store reversal points being processed.\n2. Iterate through the sequence of reversal points, $P$. For each point $p_i \\in P$:\n   a. Push $p_i$ onto the stack $T$.\n   b. While the stack contains four or more points (let the last four be $s_1, s_2, s_3, s_4$ from bottom to top), check the closure condition: Let the inner range be $\\Delta S_{inner} = |s_3 - s_2|$ and the outer range be $\\Delta S_{outer} = |s_4 - s_1|$. If $\\Delta S_{inner} \\le \\Delta S_{outer}$, a closed cycle is identified.\n   c. This cycle is defined by the points $s_2$ and $s_3$. It is counted as one full cycle ($n_i = 1$). We extract it for damage calculation and remove points $s_2$ and $s_3$ from the stack. The check is then repeated with the new stack configuration.\n   d. If the condition is not met, the inner loop terminates.\n3. After iterating through all points in $P$, any points remaining on the stack $T$ form sequences of unclosed cycles, known as residuals. Each adjacent pair of points $(s_j, s_{j+1})$ in the final stack represents a half-cycle ($n_i = 0.5$).\n\nFor each identified cycle (full or half), we compute its stress amplitude $S_a$ and mean stress $S_m$:\n$$ S_a = \\frac{S_{\\text{max}} - S_{\\text{min}}}{2} $$\n$$ S_m = \\frac{S_{\\text{max}} + S_{\\text{min}}}{2} $$\n\nThis method is an algorithmic formalization of the \"pagoda roof\" analogy and correctly accounts for the interruption of smaller stress cycles by larger ones.\n\n**Step 3: Mean Stress Correction**\nThe damaging effect of a stress cycle depends on both its amplitude and its mean stress. A tensile mean stress ($S_m > 0$) typically reduces fatigue life. The problem specifies a linear mean-stress correction referenced to the ultimate tensile strength, $S_u$. This corresponds to the Goodman relation. We use it to calculate an equivalent, fully reversed stress amplitude, $S_{a,eq}$, which would theoretically produce the same fatigue life as the actual cycle with amplitude $S_a$ and mean $S_m$.\n\nThe Goodman relation is given by:\n$$ \\frac{S_a}{S_{a,eq}} + \\frac{S_m}{S_u} = 1 $$\nSolving for the equivalent amplitude $S_{a,eq}$:\n$$ S_{a,eq} = \\frac{S_a}{1 - \\frac{S_m}{S_u}} $$\nThis equation is applied for tensile mean stresses ($S_m > 0$). For compressive mean stresses ($S_m \\le 0$), a standard, conservative engineering practice is to assume no mean stress effect, thus we take $S_{a,eq} = S_a$. The Goodman relation is a simplified linear model, primarily used for high-cycle fatigue analysis, which provides a reasonable and often conservative estimate.\n\n**Step 4: Cycles-to-Failure ($S$-$N$ Relation)**\nThe relationship between a stress amplitude and the number of cycles to failure, $N_f$, is described by an $S$-$N$ curve. The problem specifies a power-law relationship, a form of the Basquin equation, defined by constants $C$ and $m$:\n$$ S_{a,eq}^m \\cdot N_f = C $$\nFrom this, we can calculate the number of cycles to failure for a given equivalent amplitude:\n$$ N_f = \\frac{C}{S_{a,eq}^m} $$\nA critical feature of this model is the endurance limit, $S_e$. It is assumed that any stress cycle with an equivalent amplitude $S_{a,eq}$ less than or equal to $S_e$ causes zero damage ($N_f \\to \\infty$). This is an idealization, as very-high-cycle fatigue damage can occur below the classical endurance limit, but it is a fundamental assumption in many design codes.\n\n**Step 5: Linear Damage Accumulation (Miner's Rule)**\nThe final step is to sum the damage contributions from all identified cycles using the Palmgren-Miner linear damage rule. The damage fraction for the $i$-th cycle is the ratio of its applied count, $n_i$ ($1$ for a full cycle, $0.5$ for a half-cycle), to its cycles-to-failure, $N_{f,i}$.\n\nThe total cumulative damage is:\n$$ D = \\sum_{i} \\frac{n_i}{N_{f,i}} $$\nThe sum is taken over all cycles for which $S_{a,eq,i} > S_e$. Miner's rule is the simplest damage accumulation model and is widely used despite its a-priori neglect of load sequence effects.\n\n**Calculation Summary**\nThe provided material parameters are: $S_u = 700$ MPa, $S_e = 160$ MPa, $C = 4.9 \\times 10^{12}$, and $m = 3.0$.\n\n- **Case 1**: `[0, 200, -200, 200, -200, 0]`. Rainflow counting on the reversals `[0, 200, -200, 200, -200, 0]` identifies two full cycles from `-200` to `200`. For each, $S_a=200$ MPa, $S_m=0$ MPa. $S_{a,eq} = 200 > S_e$.\n$N_f = (4.9 \\times 10^{12}) / 200^3 = 612500$.\n$D = 2 \\times (1 / 612500) \\approx 0.000003265$. Rounded: `0.000003`.\n\n- **Case 2**: `[0, 80, -80, 80, -80, 0]`. Rainflow identifies two full cycles from `-80` to `80`. For each, $S_a=80$ MPa, $S_m=0$ MPa. $S_{a,eq} = 80 \\le S_e$.\n$D = 0$.\n\n- **Case 3**: `[100, 280, -80, 280, -80, 100]`. Rainflow on the reversal series identifies one full cycle from `-80` to `280`, leaving a residue of `[100, 280, -80, 100]`. This residue yields three half-cycles: `(100, 280)`, `(280, -80)`, and `(-80, 100)`.\n  - Damaging cycles are the full cycle and the middle half-cycle, which both range from `-80` to `280`. For these, $S_a=180$ MPa, $S_m=100$ MPa.\n  - $S_{a,eq} = 180 / (1 - 100/700) = 210$ MPa. This is greater than $S_e=160$ MPa.\n  - $N_f = (4.9 \\times 10^{12}) / 210^3 \\approx 529099.45$.\n  - Total count for this cycle is $1.0$ (full) + $0.5$ (half) = $1.5$.\n  - $D = 1.5 / N_f \\approx 0.000002835$. Rounded: `0.000003`.\n  - The other two half-cycles produce equivalent stresses below the endurance limit and cause no damage.\n\n- **Case 4**: `[0, 50, 0, -50, 0, 220, 0]`. The reversal series is `[0, 50, -50, 220, 0]`. Rainflow identifies one full cycle from `50` to `-50`, leaving a residue of `[0, 220, 0]`.\n  - The full cycle has $S_a=50, S_m=0$. $S_{a,eq}=50 \\le S_e$, so it causes no damage.\n  - The residue yields two half-cycles: `(0, 220)` and `(220, 0)`. For these, $S_a=110, S_m=110$.\n  - $S_{a,eq} = 110 / (1 - 110/700) \\approx 130.5$ MPa. This is less than or equal to $S_e=160$ MPa.\n  - All cycles result in zero damage. $D=0$.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes cumulative fatigue damage for a set of stress time series\n    using a standard pipeline: reversal extraction, rainflow counting,\n    Goodman mean stress correction, and Miner's linear damage rule.\n    \"\"\"\n\n    # Material parameters (all stresses in MPa)\n    S_u = 700.0   # Ultimate tensile strength\n    S_e = 160.0   # Endurance limit\n    C = 4.9e12    # S-N constant\n    m = 3.0       # S-N exponent\n\n    test_cases = [\n        [0.0, 200.0, -200.0, 200.0, -200.0, 0.0],\n        [0.0, 80.0, -80.0, 80.0, -80.0, 0.0],\n        [100.0, 280.0, -80.0, 280.0, -80.0, 100.0],\n        [0.0, 50.0, 0.0, -50.0, 0.0, 220.0, 0.0],\n    ]\n\n    def extract_reversals(series):\n        \"\"\"\n        Extracts reversal points (peaks and valleys) from a time series.\n        Keeps the first and last points.\n        \"\"\"\n        if len(series)  3:\n            return series\n        \n        reversals = [series[0]]\n        for i in range(1, len(series) - 1):\n            p_prev, p_curr, p_next = series[i - 1], series[i], series[i + 1]\n            # A point is a reversal if the slope changes sign\n            if (p_curr - p_prev) * (p_next - p_curr)  0:\n                reversals.append(p_curr)\n        reversals.append(series[-1])\n        \n        # Ensure no consecutive duplicates which can happen if input isn't clean\n        if len(reversals) > 1:\n            clean_reversals = [reversals[0]]\n            for i in range(1, len(reversals)):\n                if reversals[i] != reversals[i-1]:\n                    clean_reversals.append(reversals[i])\n            return clean_reversals\n        return reversals\n\n\n    def rainflow_count(reversals):\n        \"\"\"\n        Performs rainflow cycle counting using a standard 4-point stack-based\n        algorithm (ASTM E1049-85). Returns a list of tuples (amplitude, mean, count).\n        \"\"\"\n        cycles = []\n        stack = []\n        \n        # Use a temporary copy of reversals to process\n        points_to_process = list(reversals)\n\n        while points_to_process:\n            point = points_to_process.pop(0)\n            stack.append(point)\n\n            while len(stack) >= 4:\n                s1, s2, s3, s4 = stack[-4], stack[-3], stack[-2], stack[-1]\n                range_inner = abs(s3 - s2)\n                range_outer = abs(s4 - s1)\n\n                if range_inner = range_outer:\n                    # A closed cycle is found from s2 and s3\n                    amplitude = range_inner / 2.0\n                    mean_stress = (s2 + s3) / 2.0\n                    cycles.append((amplitude, mean_stress, 1.0))\n                    \n                    # Pop the two middle points s2 and s3\n                    stack.pop(-2)\n                    stack.pop(-2)\n                else:\n                    break\n        \n        # Process residual half-cycles remaining in the stack by pairing adjacent points\n        for i in range(len(stack) - 1):\n            p1 = stack[i]\n            p2 = stack[i+1]\n            amplitude = abs(p2 - p1) / 2.0\n            mean_stress = (p1 + p2) / 2.0\n            cycles.append((amplitude, mean_stress, 0.5))\n\n        return cycles\n\n    results = []\n    for case_series in test_cases:\n        reversals = extract_reversals(case_series)\n        cycles = rainflow_count(reversals)\n\n        total_damage = 0.0\n        for Sa, Sm, count in cycles:\n            if Sa == 0:\n                continue\n\n            # Apply Goodman mean stress correction\n            # For compressive mean stress, conservatively assume no effect\n            Sa_eq = Sa\n            if Sm > 0:\n                # Avoid division by zero if Sm approaches Su, though not expected here\n                if Sm  S_u:\n                    Sa_eq = Sa / (1.0 - Sm / S_u)\n                else: # Tensile mean stress exceeds ultimate strength, instant failure\n                    Sa_eq = float('inf')\n\n            # Accumulate damage only if equivalent amplitude is above endurance limit\n            if Sa_eq > S_e:\n                # Calculate cycles to failure using S-N relation\n                Nf = C / (Sa_eq ** m)\n                total_damage += count / Nf\n\n        results.append(round(total_damage, 6))\n\n    # Print the final output in the exact required format\n    print(f\"[{','.join(map(lambda x: f'{x:.6f}', results))}]\")\n\nsolve()\n```", "id": "2875935"}]}