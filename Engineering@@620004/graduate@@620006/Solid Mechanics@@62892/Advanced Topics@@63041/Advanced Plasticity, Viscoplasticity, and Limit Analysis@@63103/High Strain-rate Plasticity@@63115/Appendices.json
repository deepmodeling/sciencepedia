{"hands_on_practices": [{"introduction": "Before applying any constitutive model, it is essential to work with the correct physical measures. This exercise [@problem_id:2646979] explores the crucial distinction between engineering and true stress-strain measures in the context of large deformations typical of high-rate experiments. By relating these measures and considering the principle of work conjugacy, you will understand why using true stress and true strain is non-negotiable for the thermodynamically consistent calibration of models like the Johnson-Cook law, especially when accounting for effects like adiabatic heating.", "problem": "A cylindrical specimen of hardened steel is tested in dynamic compression using a Split Hopkinson Pressure Bar (SHPB). The specimen has initial length $L_{0}$ and initial cross-sectional area $A_{0}$. After wave equilibration, the force transmitted through the specimen is uniform and the deformation is homogeneous. At a particular instant in the test, the engineering strain and engineering stress inferred from bar signals are $\\varepsilon_{\\mathrm{eng}}=-0.30$ and $\\sigma_{\\mathrm{eng}}=1.20\\ \\mathrm{GPa}$, respectively, at an average strain rate of $\\dot{\\varepsilon}\\approx 3\\times 10^{3}\\ \\mathrm{s^{-1}}$. Assume:\n- uniaxial stress in the specimen,\n- dynamic force equilibrium,\n- plastic incompressibility (isochoric plastic flow) and negligible barreling,\n- elastic strains are negligible compared to plastic strains at this stage,\n- the deformation is adiabatic so that plastic work contributes to temperature rise, with a Taylor–Quinney coefficient $\\beta\\approx 0.9$, mass density $\\rho\\approx 7.8\\times 10^{3}\\ \\mathrm{kg/m^{3}}$, and specific heat $c\\approx 460\\ \\mathrm{J/(kg\\cdot K)}$.\n\nStarting from the fundamental definitions of engineering strain as change in length normalized by the initial length, true (logarithmic) strain as the integral of the incremental length change relative to the current length, engineering stress as force divided by initial area, and true stress as force divided by instantaneous area, together with plastic incompressibility $A L=\\mathrm{const}$, determine the appropriate relations between engineering and true measures at this state and quantify the difference between the two stress and strain measures numerically. Then, use the work conjugacy of true stress and true plastic strain to explain whether the Johnson–Cook viscoplastic model should be calibrated using true stress–true strain data reduced from dynamic experiments.\n\nWhich of the following statements are correct? Select all that apply.\n\nA. For the given compression state, the consistent conversions under plastic incompressibility give $\\varepsilon_{\\mathrm{true}}\\approx \\ln(1+\\varepsilon_{\\mathrm{eng}})\\approx -0.357$ and $\\sigma_{\\mathrm{true}}\\approx \\sigma_{\\mathrm{eng}}\\,(1+\\varepsilon_{\\mathrm{eng}})\\approx 0.84\\ \\mathrm{GPa}$. Because plastic work $w_{p}=\\int \\sigma_{\\mathrm{true}}\\,\\mathrm{d}\\varepsilon_{p}$ governs adiabatic heating at high strain rates, the Johnson–Cook model should be calibrated to true stress–true plastic strain curves reduced from SHPB data and referenced to the evolving temperature.\n\nB. At high strain rates the time increments are small, so the difference between engineering and true measures is negligible even at large deformations; hence one can safely calibrate the Johnson–Cook model using engineering stress–engineering strain curves without thermal corrections.\n\nC. In compression with $\\varepsilon_{\\mathrm{eng}}=-0.30$, the conversion $\\sigma_{\\mathrm{true}}=\\sigma_{\\mathrm{eng}}/(1+\\varepsilon_{\\mathrm{eng}})$ applies, making $\\sigma_{\\mathrm{true}}\\approx 1.71\\ \\mathrm{GPa}$, and $\\varepsilon_{\\mathrm{true}}$ equals $\\varepsilon_{\\mathrm{eng}}$ in magnitude. Therefore, the Johnson–Cook model is naturally formulated in terms of engineering measures.\n\nD. The true strain at this state is $\\varepsilon_{\\mathrm{true}}=\\varepsilon_{\\mathrm{eng}}/(1+\\varepsilon_{\\mathrm{eng}})\\approx -0.429$ and the true stress is $\\sigma_{\\mathrm{true}}=\\sigma_{\\mathrm{eng}}\\,(1+\\varepsilon_{\\mathrm{eng}})\\approx 0.84\\ \\mathrm{GPa}$. Since the Johnson–Cook flow rule is logarithmic in stress but algebraic in strain, engineering stress–true strain data are the appropriate basis for calibration.\n\nE. A key reason to prefer true measures in calibration is that logarithmic strain increments are additive and work-conjugate to Cauchy (true) stress, ensuring that the plastic work density $w_{p}=\\int \\sigma:\\mathrm{d}\\varepsilon_{p}$ is represented consistently; this is essential when accounting for adiabatic heating and strain-rate effects in dynamic tests used to calibrate the Johnson–Cook model.", "solution": "The problem will first be validated for scientific and logical consistency.\n\n**Step 1: Extract Givens**\n- Specimen: Cylindrical, hardened steel.\n- Test: Dynamic compression via Split Hopkinson Pressure Bar (SHPB).\n- Initial geometry: Length $L_{0}$, cross-sectional area $A_{0}$.\n- State of interest:\n    - Engineering strain: $\\varepsilon_{\\mathrm{eng}} = -0.30$.\n    - Engineering stress: $\\sigma_{\\mathrm{eng}} = 1.20\\ \\mathrm{GPa}$.\n    - Average strain rate: $\\dot{\\varepsilon} \\approx 3\\times 10^{3}\\ \\mathrm{s^{-1}}$.\n- Assumptions:\n    - Uniaxial stress.\n    - Dynamic force equilibrium.\n    - Plastic incompressibility (isochoric flow): $A L = \\mathrm{const}$.\n    - Negligible barreling.\n    - Elastic strains are negligible compared to plastic strains.\n    - Adiabatic deformation.\n    - Taylor–Quinney coefficient: $\\beta \\approx 0.9$.\n    - Mass density: $\\rho \\approx 7.8\\times 10^{3}\\ \\mathrm{kg/m^{3}}$.\n    - Specific heat: $c \\approx 460\\ \\mathrm{J/(kg\\cdot K)}$.\n- Required definitions:\n    - Engineering strain: $\\varepsilon_{\\mathrm{eng}} = (L - L_{0}) / L_{0}$.\n    - True (logarithmic) strain: $\\varepsilon_{\\mathrm{true}} = \\int_{L_{0}}^{L} \\frac{\\mathrm{d}l}{l} = \\ln(L/L_{0})$.\n    - Engineering stress: $\\sigma_{\\mathrm{eng}} = F / A_{0}$.\n    - True stress: $\\sigma_{\\mathrm{true}} = F / A$.\n- Question: Determine the relationships between engineering and true measures, quantify their difference, and justify the choice of measures for calibrating the Johnson–Cook model based on work conjugacy.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem statement describes a standard scenario in experimental solid mechanics, specifically the high-strain-rate testing of metals.\n- **Scientific Grounding:** The concepts of engineering and true stress/strain, plastic incompressibility, adiabatic heating, and the Johnson–Cook model are fundamental principles in continuum mechanics and material science. The data provided ($\\varepsilon_{\\mathrm{eng}} = -0.30$, $\\sigma_{\\mathrm{eng}}=1.20\\ \\mathrm{GPa}$, $\\dot{\\varepsilon} \\approx 3\\times 10^{3}\\ \\mathrm{s^{-1}}$) are physically realistic for dynamic compression of hardened steel.\n- **Well-Posedness:** The problem is clearly defined. It provides all necessary definitions, assumptions, and data to perform the required calculations and to formulate a logical argument regarding the calibration of a constitutive model. A unique solution for the numerical conversions can be determined.\n- **Objectivity:** The language is technical, precise, and free of subjective or ambiguous terminology.\n\nThe problem is self-contained and consistent. It does not violate any physical laws, is not based on false premises, and the setup is formalizable and relevant to the stated topic.\n\n**Step 3: Verdict and Action**\nThe problem statement is **valid**. A full solution will be derived.\n\n**Derivation of Stress and Strain Relations**\n\nThe relationships between engineering and true measures are derived directly from the provided definitions and the assumption of plastic incompressibility.\n\n1.  **Strain Conversion**:\n    The definition of engineering strain is $\\varepsilon_{\\mathrm{eng}} = \\frac{L - L_{0}}{L_{0}}$. Rearranging gives the ratio of current length $L$ to initial length $L_{0}$:\n    $$ \\frac{L}{L_{0}} = 1 + \\varepsilon_{\\mathrm{eng}} $$\n    The definition of true strain is $\\varepsilon_{\\mathrm{true}} = \\ln\\left(\\frac{L}{L_{0}}\\right)$. Substituting the expression for $L/L_{0}$ yields the direct relationship:\n    $$ \\varepsilon_{\\mathrm{true}} = \\ln(1 + \\varepsilon_{\\mathrm{eng}}) $$\n\n2.  **Stress Conversion**:\n    The definitions of engineering stress and true stress are $\\sigma_{\\mathrm{eng}} = \\frac{F}{A_{0}}$ and $\\sigma_{\\mathrm{true}} = \\frac{F}{A}$, where $F$ is the compressive force, $A_{0}$ is the initial area, and $A$ is the current instantaneous area. The force $F$ is identical in both definitions at any given instant. Thus, we can write:\n    $$ F = \\sigma_{\\mathrm{eng}} A_{0} = \\sigma_{\\mathrm{true}} A $$\n    This gives the relationship $\\sigma_{\\mathrm{true}} = \\sigma_{\\mathrm{eng}} \\frac{A_{0}}{A}$.\n    The assumption of plastic incompressibility (isochoric flow) states that the volume of the specimen remains constant: $V = A L = A_{0} L_{0} = \\mathrm{const}$. From this, we have:\n    $$ \\frac{A_{0}}{A} = \\frac{L}{L_{0}} $$\n    Substituting this into the stress relation, and using the strain relation $\\frac{L}{L_{0}} = 1 + \\varepsilon_{\\mathrm{eng}}$, we obtain:\n    $$ \\sigma_{\\mathrm{true}} = \\sigma_{\\mathrm{eng}} \\left(\\frac{L}{L_{0}}\\right) = \\sigma_{\\mathrm{eng}} (1 + \\varepsilon_{\\mathrm{eng}}) $$\n\n**Numerical Quantification**\n\nUsing the given values $\\varepsilon_{\\mathrm{eng}} = -0.30$ and $\\sigma_{\\mathrm{eng}} = 1.20\\ \\mathrm{GPa}$:\n- The true strain is:\n  $$ \\varepsilon_{\\mathrm{true}} = \\ln(1 + (-0.30)) = \\ln(0.70) \\approx -0.35667 $$\n  To three significant figures, $\\varepsilon_{\\mathrm{true}} \\approx -0.357$.\n- The true stress is:\n  $$ \\sigma_{\\mathrm{true}} = (1.20\\ \\mathrm{GPa}) \\times (1 + (-0.30)) = (1.20\\ \\mathrm{GPa}) \\times 0.70 = 0.84\\ \\mathrm{GPa} $$\n\nThe numerical difference is significant. The true strain magnitude ($|-0.357|$) is larger than the engineering strain magnitude ($|-0.30|$). The true stress ($0.84\\ \\mathrm{GPa}$) is substantially lower than the engineering stress ($1.20\\ \\mathrm{GPa}$), which is expected in compression as the cross-sectional area increases ($A > A_{0}$).\n\n**Justification for Calibration Measures (Johnson-Cook Model)**\n\nConstitutive models like the Johnson-Cook model describe the physical response of a material. This response is governed by thermodynamic principles. The rate of plastic work per unit volume, $\\dot{w}_{p}$, is the source term for adiabatic heating. This work rate is given by the scalar product of the true (Cauchy) stress tensor $\\sigma$ and the plastic strain rate tensor $\\dot{\\varepsilon}_{p}$. For the uniaxial case, this simplifies to:\n$$ \\dot{w}_{p} = \\sigma_{\\mathrm{true}} \\dot{\\varepsilon}_{\\mathrm{true},p} $$\nThe total plastic work density is $w_{p} = \\int \\sigma_{\\mathrm{true}} \\mathrm{d}\\varepsilon_{\\mathrm{true},p}$. A fraction $\\beta$ of this work is converted to heat, causing a temperature rise $\\Delta T$ given by:\n$$ \\Delta T = \\frac{\\beta}{\\rho c} w_{p} = \\frac{\\beta}{\\rho c} \\int \\sigma_{\\mathrm{true}} \\mathrm{d}\\varepsilon_{\\mathrm{true},p} $$\nThe Johnson-Cook model explicitly includes a temperature softening term, $[1 - (T^*)^m]$, where temperature $T$ is a state variable. To correctly capture the material's behavior, the temperature must be calculated based on the physically correct, work-conjugate pair: true stress and true plastic strain. Using engineering measures would result in an incorrect calculation of plastic work, leading to an incorrect temperature evolution and, consequently, a flawed calibration of the model's parameters.\nFurthermore, true strain, being defined in terms of an incremental ratio $\\mathrm{d}L/L$, is additive over finite deformation steps. This property is essential for a consistent description of material state evolution in plasticity theory. Engineering strain lacks this additive property.\nTherefore, it is imperative that constitutive models for large deformation plasticity, such as the Johnson–Cook model, are formulated in and calibrated to true stress–true strain data.\n\n**Evaluation of Options**\n\n**A. For the given compression state, the consistent conversions under plastic incompressibility give $\\varepsilon_{\\mathrm{true}}\\approx \\ln(1+\\varepsilon_{\\mathrm{eng}})\\approx -0.357$ and $\\sigma_{\\mathrm{true}}\\approx \\sigma_{\\mathrm{eng}}\\,(1+\\varepsilon_{\\mathrm{eng}})\\approx 0.84\\ \\mathrm{GPa}$. Because plastic work $w_{p}=\\int \\sigma_{\\mathrm{true}}\\,\\mathrm{d}\\varepsilon_{p}$ governs adiabatic heating at high strain rates, the Johnson–Cook model should be calibrated to true stress–true plastic strain curves reduced from SHPB data and referenced to the evolving temperature.**\nThe conversion formulas are correct. The numerical results are correct. The rationale connecting work conjugacy ($\\int \\sigma_{\\mathrm{true}}\\,\\mathrm{d}\\varepsilon_{p}$), adiabatic heating, and the necessity of using true stress-true plastic strain data for Johnson-Cook model calibration is physically sound and accurately described. The assumption that total strain is approximately plastic strain is stated in the problem.\n**Verdict: Correct.**\n\n**B. At high strain rates the time increments are small, so the difference between engineering and true measures is negligible even at large deformations; hence one can safely calibrate the Johnson–Cook model using engineering stress–engineering strain curves without thermal corrections.**\nThis statement is fundamentally flawed. The magnitude of strain ($\\varepsilon_{\\mathrm{eng}} = -0.30$) is large, not infinitesimal. At such strains, the geometric differences between initial and current configurations are substantial, leading to significant differences between engineering and true measures, as calculated above. The rate of deformation has no bearing on this geometric distinction. The conclusion to use engineering measures without thermal correction is therefore incorrect and would lead to a physically invalid model.\n**Verdict: Incorrect.**\n\n**C. In compression with $\\varepsilon_{\\mathrm{eng}}=-0.30$, the conversion $\\sigma_{\\mathrm{true}}=\\sigma_{\\mathrm{eng}}/(1+\\varepsilon_{\\mathrm{eng}})$ applies, making $\\sigma_{\\mathrm{true}}\\approx 1.71\\ \\mathrm{GPa}$, and $\\varepsilon_{\\mathrm{true}}$ equals $\\varepsilon_{\\mathrm{eng}}$ in magnitude. Therefore, the Johnson–Cook model is naturally formulated in terms of engineering measures.**\nThe stress conversion formula $\\sigma_{\\mathrm{true}}=\\sigma_{\\mathrm{eng}}/(1+\\varepsilon_{\\mathrm{eng}})$ is incorrect; it is inconsistent with the provided definitions and the principle of plastic incompressibility. The resulting numerical value is incorrect and physically implausible for compression (it suggests true stress is higher than engineering stress). The claim that $|\\varepsilon_{\\mathrm{true}}| = |\\varepsilon_{\\mathrm{eng}}|$ is false for finite strains; we calculated $|-0.357| \\neq |-0.30|$. The conclusion is based on multiple false premises.\n**Verdict: Incorrect.**\n\n**D. The true strain at this state is $\\varepsilon_{\\mathrm{true}}=\\varepsilon_{\\mathrm{eng}}/(1+\\varepsilon_{\\mathrm{eng}})\\approx -0.429$ and the true stress is $\\sigma_{\\mathrm{true}}=\\sigma_{\\mathrm{eng}}\\,(1+\\varepsilon_{\\mathrm{eng}})\\approx 0.84\\ \\mathrm{GPa}$. Since the Johnson–Cook flow rule is logarithmic in stress but algebraic in strain, engineering stress–true strain data are the appropriate basis for calibration.**\nThe formula for true strain, $\\varepsilon_{\\mathrm{true}}=\\varepsilon_{\\mathrm{eng}}/(1+\\varepsilon_{\\mathrm{eng}})$, is incorrect; the correct definition is logarithmic. While the true stress calculation is correct, the statement contains multiple errors. The justification is nonsensical: the Johnson-Cook model is logarithmic in strain rate, not stress, and has a power-law dependence on strain. The proposal to use hybrid \"engineering stress–true strain\" data has no physical basis, as it violates the principle of work conjugacy.\n**Verdict: Incorrect.**\n\n**E. A key reason to prefer true measures in calibration is that logarithmic strain increments are additive and work-conjugate to Cauchy (true) stress, ensuring that the plastic work density $w_{p}=\\int \\sigma:\\mathrm{d}\\varepsilon_{p}$ is represented consistently; this is essential when accounting for adiabatic heating and strain-rate effects in dynamic tests used to calibrate the Johnson–Cook model.**\nThis statement provides a correct, fundamental justification for using true measures. It correctly identifies the additivity of logarithmic strain and the work conjugacy between true (Cauchy) stress and true strain as the primary reasons. It accurately links these principles to the practical necessity of consistent energy accounting for thermal effects (adiabatic heating) in dynamic plasticity models like Johnson-Cook. The use of general tensor notation $w_{p}=\\int \\sigma:\\mathrm{d}\\varepsilon_{p}$ is both appropriate and correct.\n**Verdict: Correct.**", "answer": "$$\\boxed{AE}$$", "id": "2646979"}, {"introduction": "Moving from data interpretation to predictive simulation requires robust numerical algorithms. This practice [@problem_id:2646978] guides you through the derivation and implementation of a return-mapping algorithm, the cornerstone of computational plasticity for integrating rate-dependent models. By developing the implicit update scheme for a single time step, you will gain hands-on experience with the elastic-predictor, plastic-corrector methodology used in modern finite element codes to solve for stress and plastic strain.", "problem": "A slender bar made of a rate- and temperature-dependent metal is loaded in uniaxial tension under small strains. The constitutive structure is additive decomposition of strain and linear elasticity for the elastic part. Plastic flow is associated with a von Mises yield function specialized to one dimension, so the equivalent stress is the absolute value of the Cauchy stress. The flow stress follows the Johnson–Cook (JC) model. Assume isothermal conditions at low temperature so that the JC thermal softening factor is unity.\n\nConsider a single time step from time $t^{n}$ to $t^{n+1}=t^{n}+\\Delta t$ with a prescribed total strain increment. Starting from the foundations of small-strain elastoplasticity (additive strain decomposition, linear elasticity, associative flow, and the consistency condition), derive the implicit return-mapping update for the uniaxial stress under a constant total strain increment and show explicitly how the strain-rate term from the Johnson–Cook model enters the scalar consistency condition. Then derive the Newton–Raphson iteration for the plastic multiplier increment.\n\nData for the step:\n- Young’s modulus $E = 210 \\times 10^{3}$ MPa.\n- Johnson–Cook parameters (isothermal factor $=1$): $A = 300$ MPa, $B = 400$ MPa, $n = 0.5$, $C = 0.02$, $\\dot{\\varepsilon}_{0} = 1$ s$^{-1}$.\n- Time step $\\Delta t = 1.0 \\times 10^{-4}$ s.\n- Previous plastic strain $\\varepsilon_{p}^{n} = 0$.\n- Total strain at the end of the step $\\varepsilon_{n+1} = 0.003$ (uniaxial tension).\n\nTasks:\n1) Starting from the additive decomposition $\\varepsilon = \\varepsilon_{e} + \\varepsilon_{p}$, linear elasticity $\\sigma = E \\varepsilon_{e}$, and the associative flow and consistency condition for one-dimensional von Mises plasticity, derive the scalar nonlinear equation for the plastic strain increment $\\Delta \\gamma = \\varepsilon_{p}^{n+1} - \\varepsilon_{p}^{n}$ that enforces consistency at $t^{n+1}$. Your derivation must make explicit the Johnson–Cook rate term and how the plastic strain rate is discretized.\n2) Derive the Newton–Raphson iteration $\\Delta \\gamma^{(k+1)} = \\Delta \\gamma^{(k)} - r(\\Delta \\gamma^{(k)}) / r'(\\Delta \\gamma^{(k)})$ by providing analytic expressions for the residual $r(\\Delta \\gamma)$ and its derivative $r'(\\Delta \\gamma)$.\n3) Solve the scalar equation numerically using the Newton iteration to obtain the converged $\\Delta \\gamma$ and then compute the updated stress $\\sigma_{n+1}$. Express the final stress in MPa and round your answer to four significant figures.\n\nAnswer form requirement: The final answer must be a single real-valued number (no units in the box). The unit for reporting in the problem statement is MPa, and the rounding is to four significant figures.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It is a standard problem in computational inelasticity, based on established principles of continuum mechanics and using a well-defined constitutive model (Johnson-Cook). The provided data are complete, consistent, and physically reasonable. Therefore, the problem is deemed valid and a full solution will be provided.\n\nThe analysis is based on the framework of one-dimensional, small-strain, rate-dependent elastoplasticity. The governing relations are:\n1.  Additive decomposition of total strain ($\\varepsilon$) into elastic ($\\varepsilon_e$) and plastic ($\\varepsilon_p$) parts:\n    $$ \\varepsilon = \\varepsilon_e + \\varepsilon_p $$\n2.  Linear elasticity (Hooke's law) relating the Cauchy stress ($\\sigma$) to the elastic strain:\n    $$ \\sigma = E \\varepsilon_e $$\n    where $E$ is the Young's modulus.\n3.  The Johnson-Cook (JC) model for the flow stress ($\\sigma_Y$), which defines the boundary of the elastic domain. Under the specified isothermal conditions, the model is:\n    $$ \\sigma_Y(\\varepsilon_p, \\dot{\\varepsilon}_p) = \\left( A + B (\\varepsilon_p)^n \\right) \\left( 1 + C \\ln\\left(\\frac{\\dot{\\varepsilon}_p}{\\dot{\\varepsilon}_0}\\right) \\right) $$\n    where $A$, $B$, $n$, $C$, and $\\dot{\\varepsilon}_0$ are material parameters, $\\varepsilon_p$ is the equivalent plastic strain, and $\\dot{\\varepsilon}_p$ is the equivalent plastic strain rate. For the present one-dimensional tension case, $|\\sigma| = \\sigma$, the equivalent plastic strain is equal to the accumulated plastic strain, and the equivalent plastic strain rate is $\\dot{\\varepsilon}_p$.\n\nThe time evolution of the system from time $t^n$ to $t^{n+1} = t^n + \\Delta t$ is solved using an implicit return-mapping algorithm. This is a predictor-corrector method.\n\nFirst, an elastic trial state is computed, assuming the entire strain increment is elastic:\n$$ \\sigma_{n+1}^{\\text{trial}} = E (\\varepsilon_{n+1} - \\varepsilon_p^n) $$\nThe yield condition is then checked at this trial state. Since this is the first load step from a virgin state, $\\varepsilon_p^n = 0$. The initial quasi-static yield strength is $\\sigma_Y(\\varepsilon_p=0, \\dot{\\varepsilon}_p \\rightarrow 0) = A$. Plastic flow occurs if the trial stress exceeds the initial yield strength.\nGiven data: $E = 210 \\times 10^3$ MPa, $\\varepsilon_{n+1} = 0.003$, $\\varepsilon_p^n = 0$.\n$$ \\sigma_{n+1}^{\\text{trial}} = (210 \\times 10^3 \\text{ MPa}) \\times (0.003 - 0) = 630 \\text{ MPa} $$\nThe initial JC yield stress is $A = 300$ MPa. Since $\\sigma_{n+1}^{\\text{trial}} = 630 \\text{ MPa} > A = 300 \\text{ MPa}$, plastic deformation occurs, and a plastic corrector step is required.\n\nThe plastic corrector step must enforce the consistency condition at $t^{n+1}$, which states that the final stress must lie on the updated yield surface:\n$$ |\\sigma_{n+1}| - \\sigma_Y(\\varepsilon_{p, n+1}, \\dot{\\varepsilon}_{p, n+1}) = 0 $$\nFor uniaxial tension, this simplifies to $\\sigma_{n+1} - \\sigma_Y(\\varepsilon_{p, n+1}, \\dot{\\varepsilon}_{p, n+1}) = 0$.\n\nThe state variables are updated as follows:\nThe plastic strain increment is denoted $\\Delta\\gamma = \\varepsilon_{p, n+1} - \\varepsilon_p^n$. Since we are in tension, $\\Delta\\gamma > 0$.\nThe plastic strain at $t^{n+1}$ is: $\\varepsilon_{p, n+1} = \\varepsilon_p^n + \\Delta\\gamma$.\nThe stress at $t^{n+1}$ is found by correcting the trial stress:\n$$ \\sigma_{n+1} = E (\\varepsilon_{e, n+1}) = E (\\varepsilon_{n+1} - \\varepsilon_{p, n+1}) = E (\\varepsilon_{n+1} - \\varepsilon_p^n - \\Delta\\gamma) = \\sigma_{n+1}^{\\text{trial}} - E \\Delta\\gamma $$\nThe plastic strain rate $\\dot{\\varepsilon}_{p, n+1}$ is approximated using a backward Euler discretization, which is standard for implicit schemes:\n$$ \\dot{\\varepsilon}_{p, n+1} = \\frac{\\Delta\\gamma}{\\Delta t} $$\n\n**Task 1: Derivation of the scalar nonlinear equation for $\\Delta \\gamma$**\n\nSubstituting the expressions for $\\sigma_{n+1}$, $\\varepsilon_{p, n+1}$, and $\\dot{\\varepsilon}_{p, n+1}$ into the consistency condition gives a single nonlinear scalar equation for the unknown $\\Delta\\gamma$:\n$$ (\\sigma_{n+1}^{\\text{trial}} - E \\Delta\\gamma) - \\left( A + B (\\varepsilon_p^n + \\Delta\\gamma)^n \\right) \\left( 1 + C \\ln\\left(\\frac{\\Delta\\gamma / \\Delta t}{\\dot{\\varepsilon}_0}\\right) \\right) = 0 $$\nThis equation is the residual function $r(\\Delta\\gamma)$ that must be solved for $\\Delta\\gamma$:\n$$ r(\\Delta\\gamma) = \\sigma_{n+1}^{\\text{trial}} - E \\Delta\\gamma - \\left( A + B (\\varepsilon_p^n + \\Delta\\gamma)^n \\right) \\left( 1 + C \\ln\\left(\\frac{\\Delta\\gamma}{\\Delta t \\dot{\\varepsilon}_0}\\right) \\right) = 0 $$\nThis derivation explicitly shows how the Johnson-Cook rate-dependent term, involving $\\ln(\\dot{\\varepsilon}_p/\\dot{\\varepsilon}_0)$, enters the scalar consistency condition through the discretization $\\dot{\\varepsilon}_{p, n+1} = \\Delta\\gamma / \\Delta t$.\n\n**Task 2: Derivation of the Newton-Raphson iteration**\n\nThe Newton-Raphson method is used to solve $r(\\Delta\\gamma)=0$. The iterative update is:\n$$ \\Delta\\gamma^{(k+1)} = \\Delta\\gamma^{(k)} - \\frac{r(\\Delta\\gamma^{(k)})}{r'(\\Delta\\gamma^{(k)})} $$\nwhere $r'(\\Delta\\gamma) = \\frac{dr}{d(\\Delta\\gamma)}$. We must find the analytical expression for this derivative.\nLet's differentiate $r(\\Delta\\gamma)$ with respect to $\\Delta\\gamma$:\n$$ r'(\\Delta\\gamma) = \\frac{d}{d(\\Delta\\gamma)} \\left( \\sigma_{n+1}^{\\text{trial}} - E \\Delta\\gamma \\right) - \\frac{d}{d(\\Delta\\gamma)} \\left[ \\left( A + B (\\varepsilon_p^n + \\Delta\\gamma)^n \\right) \\left( 1 + C \\ln\\left(\\frac{\\Delta\\gamma}{\\Delta t \\dot{\\varepsilon}_0}\\right) \\right) \\right] $$\nThe first term is simply $-E$. The second term requires the product rule. Let $u(\\Delta\\gamma) = A + B (\\varepsilon_p^n + \\Delta\\gamma)^n$ and $v(\\Delta\\gamma) = 1 + C \\ln(\\frac{\\Delta\\gamma}{\\Delta t \\dot{\\varepsilon}_0})$.\nThe derivatives are:\n$$ u'(\\Delta\\gamma) = B n (\\varepsilon_p^n + \\Delta\\gamma)^{n-1} $$\n$$ v'(\\Delta\\gamma) = C \\frac{1}{\\Delta\\gamma/(\\Delta t \\dot{\\varepsilon}_0)} \\frac{1}{\\Delta t \\dot{\\varepsilon}_0} = \\frac{C}{\\Delta\\gamma} $$\nApplying the product rule $(uv)' = u'v + uv'$:\n$$ \\frac{d}{d(\\Delta\\gamma)} (uv) = B n (\\varepsilon_p^n + \\Delta\\gamma)^{n-1} \\left( 1 + C \\ln\\left(\\frac{\\Delta\\gamma}{\\Delta t \\dot{\\varepsilon}_0}\\right) \\right) + \\left( A + B (\\varepsilon_p^n + \\Delta\\gamma)^n \\right) \\frac{C}{\\Delta\\gamma} $$\nCombining everything, the derivative of the residual is:\n$$ r'(\\Delta\\gamma) = -E - B n (\\varepsilon_p^n + \\Delta\\gamma)^{n-1} \\left( 1 + C \\ln\\left(\\frac{\\Delta\\gamma}{\\Delta t \\dot{\\varepsilon}_0}\\right) \\right) - \\frac{C}{\\Delta\\gamma} \\left( A + B (\\varepsilon_p^n + \\Delta\\gamma)^n \\right) $$\nThis provides the analytic expression for the derivative required for the Newton-Raphson iteration.\n\n**Task 3: Numerical Solution**\n\nWe now solve for $\\Delta\\gamma$ using the given data and then compute $\\sigma_{n+1}$.\nData: $E = 210 \\times 10^3$ MPa, $A = 300$ MPa, $B = 400$ MPa, $n = 0.5$, $C = 0.02$, $\\dot{\\varepsilon}_0 = 1$ s$^{-1}$, $\\Delta t = 10^{-4}$ s, $\\varepsilon_p^n = 0$, $\\varepsilon_{n+1} = 0.003$.\nWe found $\\sigma_{n+1}^{\\text{trial}} = 630$ MPa.\n\nThe residual equation with $\\varepsilon_p^n=0$:\n$$ r(\\Delta\\gamma) = 630 - 210000 \\Delta\\gamma - \\left( 300 + 400 (\\Delta\\gamma)^{0.5} \\right) \\left( 1 + 0.02 \\ln\\left(\\frac{\\Delta\\gamma}{10^{-4}}\\right) \\right) $$\nThe derivative:\n$$ r'(\\Delta\\gamma) = -210000 - 400(0.5)(\\Delta\\gamma)^{-0.5} \\left( 1 + 0.02 \\ln\\left(\\frac{\\Delta\\gamma}{10^{-4}}\\right) \\right) - \\frac{0.02}{\\Delta\\gamma} \\left( 300 + 400 (\\Delta\\gamma)^{0.5} \\right) $$\n\nWe initialize the Newton-Raphson iteration. An elastic-perfectly plastic estimate for $\\Delta\\gamma$ provides a good starting guess: $\\Delta\\gamma^{(0)} \\approx (\\sigma^{\\text{trial}} - A) / E = (630-300)/210000 \\approx 0.00157$. Let's start with a slightly simpler value, $\\Delta\\gamma^{(0)} = 0.0014$.\n\nIteration $k=0$: $\\Delta\\gamma^{(0)} = 0.0014$.\n$$ \\ln\\left(\\frac{0.0014}{10^{-4}}\\right) = \\ln(14) \\approx 2.63906 $$\n$$ r(0.0014) = 630 - 210000(0.0014) - (300 + 400\\sqrt{0.0014})(1 + 0.02 \\times 2.63906) $$\n$$ r(0.0014) = 630 - 294 - (300 + 14.9666)(1.05278) = 336 - 314.9666(1.05278) \\approx 336 - 331.583 = 4.417 $$\n$$ r'(0.0014) = -210000 - \\frac{200}{\\sqrt{0.0014}}(1.05278) - \\frac{0.02}{0.0014}(314.9666) $$\n$$ r'(0.0014) \\approx -210000 - 5345.2(1.05278) - 14.2857(314.9666) \\approx -210000 - 5627.5 - 4499.5 = -220127 $$\nCorrection: $\\Delta(\\Delta\\gamma)^{(0)} = - \\frac{r}{r'} = - \\frac{4.417}{-220127} \\approx 0.000020066$.\nNew guess: $\\Delta\\gamma^{(1)} = 0.0014 + 0.000020066 = 0.001420066$.\n\nIteration $k=1$: $\\Delta\\gamma^{(1)} = 0.001420066$.\n$$ \\ln\\left(\\frac{0.001420066}{10^{-4}}\\right) = \\ln(14.20066) \\approx 2.65329 $$\n$$ r(0.001420066) = 630 - 210000(0.001420066) - (300 + 400\\sqrt{0.001420066})(1 + 0.02 \\times 2.65329) $$\n$$ r(0.001420066) \\approx 630 - 298.214 - (300 + 15.0735)(1.05307) \\approx 331.786 - 315.0735(1.05307) \\approx 331.786 - 331.803 \\approx -0.017 $$\nThis residual is very close to zero, indicating convergence. The converged value for the plastic strain increment is $\\Delta\\gamma \\approx 0.001420$.\n\nFinally, compute the updated stress at $t^{n+1}$:\n$$ \\sigma_{n+1} = \\sigma_{n+1}^{\\text{trial}} - E \\Delta\\gamma = 630 \\text{ MPa} - (210 \\times 10^3 \\text{ MPa}) \\times 0.001420 $$\n$$ \\sigma_{n+1} = 630 - 298.2 = 331.8 \\text{ MPa} $$\nAs a check, we can evaluate the flow stress at the final state:\n$$ \\varepsilon_{p, n+1} = 0.001420 $$\n$$ \\dot{\\varepsilon}_{p, n+1} = \\frac{0.001420}{10^{-4}} = 14.2 \\text{ s}^{-1} $$\n$$ \\sigma_Y = (300 + 400(0.001420)^{0.5}) (1 + 0.02 \\ln(\\frac{14.2}{1})) \\approx (300 + 15.0665)(1 + 0.02 \\times 2.6532) $$\n$$ \\sigma_Y \\approx (315.0665)(1.05306) \\approx 331.80 \\text{ MPa} $$\nThe computed stress $\\sigma_{n+1} = 331.8$ MPa matches the flow stress, confirming the consistency is satisfied.\nRounding the final stress to four significant figures gives $331.8$ MPa.", "answer": "$$\\boxed{331.8}$$", "id": "2646978"}, {"introduction": "A complete material model must not only predict deformation but also failure. This final exercise [@problem_id:2646937] introduces the concept of continuum damage mechanics by asking you to implement and integrate the Johnson-Cook damage model to predict fracture initiation. By tracking the accumulation of a scalar damage variable based on the evolving plastic strain, stress triaxiality, and temperature, you will learn how to determine the time to fracture, a critical capability in assessing the structural integrity of components under severe loading conditions.", "problem": "You are to write a complete and runnable program that, given time-dependent fields for a notched tensile specimen subjected to large deformation, computes the Johnson–Cook (JC) type damage accumulation and determines the first fracture time when the scalar damage variable reaches unity. The damage variable is modeled as a time integral of an instantaneous accumulation rate that depends on the equivalent plastic strain rate, stress triaxiality, and homologous temperature. The program must be self-contained and compute the results for a provided test suite of continuous functions and material constants.\n\nFoundational basis:\n- Let the equivalent plastic strain be denoted by $\\epsilon_p(t)$ and its time derivative by $\\dot{\\epsilon}_p(t) = d\\epsilon_p/dt$.\n- Let the stress triaxiality be denoted by $\\eta(t)$, defined as the ratio of mean stress to von Mises equivalent stress, which is dimensionless and evolves with time under nonuniform fields, but for this problem it is treated as a given function of time.\n- Let the homologous temperature be denoted by $T^\\ast(t)$, defined as $T^\\ast = (T - T_{\\mathrm{room}})/(T_{\\mathrm{melt}} - T_{\\mathrm{room}})$, which is dimensionless and lies in $[0,1]$ under physically realistic conditions.\n- The damage variable $D(t)$ is modeled as an accumulated scalar according to an integral of the form\n$$\nD(t) \\equiv \\int_0^t \\frac{\\dot{\\epsilon}_p(\\tau)}{\\epsilon_f\\!\\big(\\eta(\\tau), \\dot{\\epsilon}(\\tau), T^\\ast(\\tau)\\big)} \\, d\\tau,\n$$\nwhere $\\dot{\\epsilon}(t)$ is a representative equivalent strain rate and, in high plasticity regimes, it is acceptable to take $\\dot{\\epsilon}(t) \\equiv \\dot{\\epsilon}_p(t)$.\n- Fracture is declared at the earliest time $t_f \\in (0, t_{\\max}]$ such that $D(t_f) = 1$. If $D(t)  1$ for all $t \\in [0, t_{\\max}]$, return a sentinel value.\n\nAssumptions to derive the failure strain function:\n- Assume the failure strain $\\epsilon_f(\\eta, \\dot{\\epsilon}, T^\\ast)$ admits multiplicative separability into the product of three monotone factors, one for each influence of stress triaxiality, strain rate, and homologous temperature, each scaled by a set of material constants. In particular, postulate:\n  - A triaxiality factor $g_1(\\eta)$ that decays approximately exponentially with increasing $\\eta$, with an offset to ensure a positive lower bound at high triaxiality.\n  - A rate factor $g_2(\\dot{\\epsilon}/\\dot{\\epsilon}_0)$ that varies approximately linearly with $\\ln(\\dot{\\epsilon}/\\dot{\\epsilon}_0)$ to respect dimensional invariance and observed rate sensitivity, where $\\dot{\\epsilon}_0$ is a reference strain rate with units of $1/\\mathrm{s}$.\n  - A temperature factor $g_3(T^\\ast)$ that varies approximately linearly in $T^\\ast$ to represent softening or hardening with temperature.\n- Let the material constants be denoted by $D_1, D_2, D_3, D_4, D_5 \\in \\mathbb{R}$ and $\\dot{\\epsilon}_0 \\gt 0$, to be specified in the test suite below.\n- Using the above separable structure and invariance under a change of reference rate encoded by $\\ln(\\cdot)$, derive a formula for $\\epsilon_f(\\eta, \\dot{\\epsilon}, T^\\ast)$ that is consistent with these assumptions. Your algorithm must use this $\\epsilon_f$ to evaluate the damage accumulation rate.\n\nMathematical and numerical task:\n- Implement the ordinary differential equation\n$$\n\\frac{dD}{dt} = \\frac{\\dot{\\epsilon}_p(t)}{\\epsilon_f\\!\\big(\\eta(t), \\dot{\\epsilon}_p(t), T^\\ast(t)\\big)}, \\quad D(0) = 0,\n$$\nand determine the first time $t_f$ such that $D(t_f) = 1$. Use robust numerical integration with event detection (or equivalent logic) to accurately isolate the first crossing of $D=1$.\n- If $\\epsilon_f(\\eta, \\dot{\\epsilon}, T^\\ast)$ becomes nonpositive due to extreme inputs, clip it to a small positive lower bound (e.g., replace it by a small positive constant) to ensure physical admissibility of the integrand.\n- Units and outputs:\n  - Time $t$ must be in seconds, $\\mathrm{s}$.\n  - Strain rates $\\dot{\\epsilon}$ and $\\dot{\\epsilon}_p$ must be in $1/\\mathrm{s}$.\n  - The final results must be the fracture times $t_f$ in seconds, rounded to six decimals. If no fracture occurs within the specified time horizon $[0, t_{\\max}]$, return $-1.0$ for that test case.\n\nTest suite:\nFor each test case, the program must use the provided functions and constants exactly as stated. In all cases below, the representative equivalent strain rate is to be taken as $\\dot{\\epsilon}(t) \\equiv \\dot{\\epsilon}_p(t)$.\n\n- Test case A (nominal notched, moderate rate, heating):\n  - Material constants: $D_1 = 0.05$, $D_2 = 0.30$, $D_3 = -0.5$, $D_4 = 0.02$, $D_5 = 1.0$, $\\dot{\\epsilon}_0 = 1.0 \\,\\mathrm{s}^{-1}$.\n  - Functions: $\\eta(t) = 0.45 + 0.05 \\sin(120\\, t)$, $\\dot{\\epsilon}_p(t) = 1500 + 500\\sin(800\\, t)$, $T^\\ast(t) = 0.2 + 0.6 \\left(1 - e^{-t/0.004}\\right)$.\n  - Time horizon: $t_{\\max} = 0.01\\,\\mathrm{s}$.\n\n- Test case B (high triaxiality and high rate, cold):\n  - Material constants: $D_1 = 0.05$, $D_2 = 0.30$, $D_3 = -0.5$, $D_4 = 0.02$, $D_5 = 1.0$, $\\dot{\\epsilon}_0 = 1.0 \\,\\mathrm{s}^{-1}$.\n  - Functions: $\\eta(t) = 0.6$, $\\dot{\\epsilon}_p(t) = 10000$, $T^\\ast(t) = 0.0$.\n  - Time horizon: $t_{\\max} = 0.002\\,\\mathrm{s}$.\n\n- Test case C (low triaxiality and very low rate, mild temperature, no fracture expected within horizon):\n  - Material constants: $D_1 = 0.05$, $D_2 = 0.30$, $D_3 = -0.5$, $D_4 = 0.02$, $D_5 = 1.0$, $\\dot{\\epsilon}_0 = 1.0 \\,\\mathrm{s}^{-1}$.\n  - Functions: $\\eta(t) = 0.1$, $\\dot{\\epsilon}_p(t) = 0.2 + 0.05 \\sin(10\\, t)$, $T^\\ast(t) = 0.1$.\n  - Time horizon: $t_{\\max} = 1.0\\,\\mathrm{s}$.\n\n- Test case D (decaying rate and triaxiality, temperature-independent failure strain, different reference rate):\n  - Material constants: $D_1 = 0.10$, $D_2 = 0.20$, $D_3 = -1.0$, $D_4 = 0.01$, $D_5 = 0.0$, $\\dot{\\epsilon}_0 = 10.0 \\,\\mathrm{s}^{-1}$.\n  - Functions: $\\eta(t) = 0.3 + 0.2 e^{-t/0.005}$, $\\dot{\\epsilon}_p(t) = 5000 e^{-t/0.003} + 200$, $T^\\ast(t) = 0.5$.\n  - Time horizon: $t_{\\max} = 0.02\\,\\mathrm{s}$.\n\nProgram output specification:\n- Your program must compute the fracture time $t_f$ for each test case as defined above.\n- If $D(t) \\lt 1$ for all $t \\in [0,t_{\\max}]$, report $-1.0$.\n- The program must produce a single line of output containing the fracture times for test cases A, B, C, and D, in that order, as a comma-separated list enclosed in square brackets, with each value rounded to exactly six decimals in seconds, for example: $[0.000123,0.000045,-1.000000,0.001234]$.", "solution": "The problem statement has been evaluated and is deemed valid. It is scientifically sound, mathematically well-posed, and contains all necessary components for a unique and meaningful solution. We will now proceed with the derivation and computation.\n\nThe problem requires the formulation of a Johnson-Cook (JC) type damage model to determine fracture time. The damage variable, $D(t)$, accumulates according to the differential equation:\n$$\n\\frac{dD}{dt} = \\frac{\\dot{\\epsilon}_p(t)}{\\epsilon_f(\\eta(t), \\dot{\\epsilon}_p(t), T^\\ast(t))}, \\quad D(0) = 0\n$$\nFracture occurs at the first time $t_f \\in (0, t_{\\max}]$ for which $D(t_f) = 1$. The central task is to first establish the analytical form of the failure strain, $\\epsilon_f$.\n\nThe problem postulates that $\\epsilon_f$ is a multiplicatively separable function of stress triaxiality $\\eta$, normalized plastic strain rate $\\dot{\\epsilon}_p/\\dot{\\epsilon}_0$, and homologous temperature $T^\\ast$. Based on the provided qualitative descriptions, we construct the function as follows: $\\epsilon_f(\\eta, \\dot{\\epsilon}_p, T^\\ast) = g_1(\\eta) \\cdot g_2(\\dot{\\epsilon}_p/\\dot{\\epsilon}_0) \\cdot g_3(T^\\ast)$.\n\n$1$. The triaxiality factor $g_1(\\eta)$ is described as \"decays approximately exponentially with increasing $\\eta$, with an offset\". This behavior is captured by the standard JC form using constants $D_1$, $D_2$, and $D_3$:\n$$\ng_1(\\eta) = D_1 + D_2 \\exp(D_3 \\eta)\n$$\nHere, $D_1$ represents the offset (a lower bound for strain to failure at high triaxiality), and the term $D_2 \\exp(D_3 \\eta)$ provides the exponential dependence. For ductile fracture, typically $D_3  0$, ensuring decay with increasing $\\eta$.\n\n$2$. The strain rate factor $g_2(\\dot{\\epsilon}_p/\\dot{\\epsilon}_0)$ is described to \"vary approximately linearly with $\\ln(\\dot{\\epsilon}_p/\\dot{\\epsilon}_0)$\". This is a direct statement of the standard rate dependency term, which includes the constant $D_4$:\n$$\ng_2(\\dot{\\epsilon}_p/\\dot{\\epsilon}_0) = 1 + D_4 \\ln\\left(\\frac{\\dot{\\epsilon}_p}{\\dot{\\epsilon}_0}\\right)\n$$\nThe dimensionless argument $\\dot{\\epsilon}_p/\\dot{\\epsilon}_0$ and the logarithmic form are characteristic of rate effects in many materials.\n\n$3$. The temperature factor $g_3(T^\\ast)$ is described to \"vary approximately linearly in $T^\\ast$\". This is modeled with the constant $D_5$:\n$$\ng_3(T^\\ast) = 1 + D_5 T^\\ast\n$$\nThis linear term accounts for thermal softening or hardening.\n\nCombining these factors yields the complete expression for the failure strain:\n$$\n\\epsilon_f(\\eta, \\dot{\\epsilon}_p, T^\\ast) = \\left[ D_1 + D_2 \\exp(D_3 \\eta) \\right] \\left[ 1 + D_4 \\ln\\left(\\frac{\\dot{\\epsilon}_p}{\\dot{\\epsilon}_0}\\right) \\right] \\left[ 1 + D_5 T^\\ast \\right]\n$$\nThis is the well-established JC failure model, which we will employ for the numerical solution. The problem requires that if this expression yields a non-positive value, it must be clipped to a small positive constant $\\epsilon_{\\min}$ to maintain physical admissibility of the damage rate. We will select $\\epsilon_{\\min} = 10^{-12}$.\n\nThe numerical solution involves integrating the ODE for $D(t)$ from $t=0$ to $t=t_{\\max}$. The fracture time $t_f$ is the specific time at which the integrated solution $D(t)$ reaches the value of $1$. This is a root-finding problem superimposed on an initial value problem. An efficient and robust method for this task is to use an ODE solver with event detection capabilities. We will use the `solve_ivp` function from the `scipy.integrate` library.\n\nThe procedure is as follows:\n$1$. For each test case, define the material constants ($D_1$ through $D_5$, $\\dot{\\epsilon}_0$) and the time-dependent functions for triaxiality $\\eta(t)$, plastic strain rate $\\dot{\\epsilon}_p(t)$, and homologous temperature $T^\\ast(t)$.\n$2$. Define the right-hand side of the ODE, $f(t, D) = dD/dt$. This function takes time $t$ as input, computes $\\eta(t)$, $\\dot{\\epsilon}_p(t)$, and $T^\\ast(t)$, evaluates $\\epsilon_f$ using the formula derived above, applies clipping if necessary, and returns the damage rate $\\dot{\\epsilon}_p(t)/\\epsilon_f$.\n$3$. Define an event function, `event(t, D) = D[0] - 1`, which returns zero when the fracture condition is met. We configure the solver to detect when this function crosses zero in the positive direction ($D(t)$ is monotonically increasing) and to terminate the integration upon the first such event.\n$4$. Call `solve_ivp` over the time span $[0, t_{\\max}]$ with initial condition $D(0)=0$.\n$5$. If the solver identifies an event, the time of this event is the fracture time $t_f$. If the integration completes to $t_{\\max}$ without any event, it signifies that $D(t)  1$ for all $t$ in the horizon, and the result for that case is reported as $-1.0$.\n$6$. The computed fracture times for all test cases are collected and reported in the specified format, rounded to six decimal places.\nThis systematic approach ensures an accurate and verifiable solution to the problem as stated.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Computes the Johnson-Cook damage accumulation and determines the fracture time\n    for a suite of test cases.\n    \"\"\"\n    \n    # Small positive constant for clipping the failure strain to ensure physical admissibility.\n    EPSILON_F_MIN = 1e-12\n\n    test_cases = [\n        {\n            \"name\": \"A\",\n            \"constants\": {\"D1\": 0.05, \"D2\": 0.30, \"D3\": -0.5, \"D4\": 0.02, \"D5\": 1.0, \"edot0\": 1.0},\n            \"functions\": {\n                \"eta\": lambda t: 0.45 + 0.05 * np.sin(120 * t),\n                \"edot_p\": lambda t: 1500 + 500 * np.sin(800 * t),\n                \"Tstar\": lambda t: 0.2 + 0.6 * (1 - np.exp(-t / 0.004)),\n            },\n            \"t_max\": 0.01,\n        },\n        {\n            \"name\": \"B\",\n            \"constants\": {\"D1\": 0.05, \"D2\": 0.30, \"D3\": -0.5, \"D4\": 0.02, \"D5\": 1.0, \"edot0\": 1.0},\n            \"functions\": {\n                \"eta\": lambda t: 0.6,\n                \"edot_p\": lambda t: 10000.0,\n                \"Tstar\": lambda t: 0.0,\n            },\n            \"t_max\": 0.002,\n        },\n        {\n            \"name\": \"C\",\n            \"constants\": {\"D1\": 0.05, \"D2\": 0.30, \"D3\": -0.5, \"D4\": 0.02, \"D5\": 1.0, \"edot0\": 1.0},\n            \"functions\": {\n                \"eta\": lambda t: 0.1,\n                \"edot_p\": lambda t: 0.2 + 0.05 * np.sin(10 * t),\n                \"Tstar\": lambda t: 0.1,\n            },\n            \"t_max\": 1.0,\n        },\n        {\n            \"name\": \"D\",\n            \"constants\": {\"D1\": 0.10, \"D2\": 0.20, \"D3\": -1.0, \"D4\": 0.01, \"D5\": 0.0, \"edot0\": 10.0},\n            \"functions\": {\n                \"eta\": lambda t: 0.3 + 0.2 * np.exp(-t / 0.005),\n                \"edot_p\": lambda t: 5000 * np.exp(-t / 0.003) + 200,\n                \"Tstar\": lambda t: 0.5,\n            },\n            \"t_max\": 0.02,\n        },\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        const = case[\"constants\"]\n        funcs = case[\"functions\"]\n        t_max = case[\"t_max\"]\n\n        def dD_dt(t, D):\n            \"\"\"\n            ODE function for damage accumulation rate dD/dt.\n            \"\"\"\n            eta_val = funcs[\"eta\"](t)\n            edot_p_val = funcs[\"edot_p\"](t)\n            Tstar_val = funcs[\"Tstar\"](t)\n\n            # Triaxiality term\n            g1 = const[\"D1\"] + const[\"D2\"] * np.exp(const[\"D3\"] * eta_val)\n            \n            # Strain rate term\n            # Ensure argument of log is positive (edot_p is positive for all cases)\n            edot_ratio = edot_p_val / const[\"edot0\"]\n            g2 = 1.0 + const[\"D4\"] * np.log(edot_ratio)\n            \n            # Temperature term\n            g3 = 1.0 + const[\"D5\"] * Tstar_val\n\n            # Failure strain\n            epsilon_f = g1 * g2 * g3\n\n            # Clip if non-positive\n            epsilon_f_clipped = max(epsilon_f, EPSILON_F_MIN)\n            \n            # Damage rate\n            return edot_p_val / epsilon_f_clipped\n\n        # Event function to detect fracture (D=1)\n        def fracture_event(t, D):\n            return D[0] - 1.0\n\n        fracture_event.terminal = True  # Stop integration at fracture\n        fracture_event.direction = 1     # Event only when D is increasing through 1\n\n        # Solve ODE\n        sol = solve_ivp(\n            fun=dD_dt,\n            t_span=(0, t_max),\n            y0=[0.0],\n            method='RK45',\n            events=fracture_event,\n            dense_output=True,\n            rtol=1e-8,\n            atol=1e-8\n        )\n\n        # Check for fracture event\n        if sol.t_events[0].size > 0:\n            fracture_time = sol.t_events[0][0]\n            results.append(fracture_time)\n        else:\n            results.append(-1.0)\n\n    # Format output as specified\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2646937"}]}