{"hands_on_practices": [{"introduction": "To begin our exploration of peridynamics, we must first master its unique way of describing deformation. Unlike classical theory, which relies on local strain gradients, peridynamics focuses on the \"stretch\" of nonlocal bonds connecting material points. This first practice [@problem_id:2667654] will guide you through calculating this bond stretch for a simple one-dimensional bar undergoing a uniform expansion, demonstrating a foundational property of homogeneous deformation in the peridynamic framework.", "problem": "Consider a one-dimensional peridynamic bar occupying the real line, with a fixed peridynamic horizon $\\,\\delta>0\\,$. For a material point at position $\\,x\\in\\mathbb{R}\\,$, the peridynamic family is the set of all points within the horizon. The bar undergoes a displacement field $\\,u(x)=\\alpha x\\,$, where $\\,\\alpha\\,$ is a constant scalar. Assume $\\,\\alpha>-1\\,$ so that bonds do not invert their orientation.\n\nUsing only the kinematic mapping $\\,y(x)=x+u(x)\\,$ and the interpretation of bond stretch as the fractional change in bond length between two material points $\\,x\\,$ and $\\,x'\\in H_{\\delta}(x)\\,$, proceed as follows:\n- Write the peridynamic family $\\,H_{\\delta}(x)\\,$ as a subset of $\\,\\mathbb{R}\\,$.\n- Starting from first principles, derive the bond stretch between $\\,x\\,$ and $\\,x'\\,$ in terms of $\\,\\alpha\\,$ and show explicitly that it is independent of the absolute position $\\,x\\,$ and of the specific choice of $\\,x'\\in H_{\\delta}(x)\\setminus\\{x\\}$.\n- Provide the resulting constant value of the bond stretch as a closed-form analytical expression.\n\nYour final answer must be a single closed-form expression (dimensionless scalar). No rounding is required.", "solution": "The problem statement is scientifically grounded, self-contained, and well-posed. It presents a fundamental case of homogeneous deformation within the framework of peridynamic theory. We will proceed with a rigorous derivation from first principles.\n\nFirst, we formalize the definition of the peridynamic family $H_{\\delta}(x)$ for a material point at position $x \\in \\mathbb{R}$ with a horizon of size $\\delta > 0$. In a one-dimensional continuum, this is the set of all points $x'$ whose distance from $x$ is less than $\\delta$. It is represented as the open interval:\n$$\nH_{\\delta}(x) = \\{ x' \\in \\mathbb{R} \\mid |x' - x| < \\delta \\}\n$$\n\nA bond connects the material point $x$ to another material point $x'$ within its family, where $x' \\in H_{\\delta}(x)$ and $x' \\neq x$. The bond vector in the reference (undeformed) configuration is given by $\\boldsymbol{\\xi}$:\n$$\n\\boldsymbol{\\xi} = x' - x\n$$\nThe length of this bond in the reference configuration is $L = |\\boldsymbol{\\xi}| = |x' - x|$.\n\nThe positions of these points in the deformed configuration are determined by the kinematic mapping $y(x) = x + u(x)$. Given the displacement field $u(x) = \\alpha x$, where $\\alpha$ is a constant, the deformed positions are:\n$$\ny(x) = x + \\alpha x = (1+\\alpha)x\n$$\n$$\ny(x') = x' + \\alpha x' = (1+\\alpha)x'\n$$\n\nThe bond vector in the deformed configuration connects the new positions $y(x)$ and $y(x')$:\n$$\ny(x') - y(x) = (1+\\alpha)x' - (1+\\alpha)x = (1+\\alpha)(x' - x)\n$$\nThe length of this deformed bond, $L'$, is the absolute value of this quantity:\n$$\nL' = |y(x') - y(x)| = |(1+\\alpha)(x' - x)| = |1+\\alpha| |x' - x|\n$$\nThe problem specifies the constraint $\\alpha > -1$, which means $1+\\alpha > 0$. Consequently, $|1+\\alpha| = 1+\\alpha$. The deformed length can thus be written as:\n$$\nL' = (1+\\alpha)|x' - x| = (1+\\alpha) L\n$$\n\nThe bond stretch, denoted by $s$, is defined as the fractional change in bond length. This is a fundamental definition:\n$$\ns = \\frac{\\text{deformed length} - \\text{reference length}}{\\text{reference length}} = \\frac{L' - L}{L}\n$$\nSubstituting the expressions for $L$ and $L'$ into this definition, we obtain:\n$$\ns = \\frac{(1+\\alpha)L - L}{L} = \\frac{(1+\\alpha-1)L}{L}\n$$\nSince $x \\neq x'$, the reference length $L = |x' - x|$ is strictly positive, allowing for cancellation:\n$$\ns = 1+\\alpha-1 = \\alpha\n$$\nThis result demonstrates that for the given homogeneous displacement field, the bond stretch $s$ is equal to the constant $\\alpha$. This value is independent of the absolute position $x$ and of the specific bond vector $\\boldsymbol{\\xi} = x' - x$, as long as $x'$ is a point in the family of $x$ distinct from $x$ itself. The derivation explicitly confirms the required properties.", "answer": "$$\\boxed{\\alpha}$$", "id": "2667654"}, {"introduction": "A new physical theory is most powerful when it can be related to established models, providing a bridge for validation and practical use. This exercise [@problem_id:2667613] builds that critical link between the microscopic parameters of peridynamics and the macroscopic properties of classical elasticity. By calculating the strain energy density in a uniformly strained bar, you will derive its effective Young's modulus, a process that is fundamental to calibrating peridynamic models for real-world engineering materials.", "problem": "A one-dimensional, infinite, bond-based, microelastic peridynamic bar is modeled with a constant micromodulus $c$ over a horizon of length $\\delta$, that is, bonds exist only for pairs of points separated by $\\xi$ with $|\\xi|<\\delta$, and the micromodulus is zero otherwise. Assume small deformations and a uniform axial strain field $u(x)=\\epsilon x$ so that the deformation is homogeneous. Consider a material point sufficiently far from any boundary so that its peridynamic family is complete.\n\nStarting only from the core definitions of bond-based peridynamics under small deformation kinematics, namely the definition of bond stretch, the linear microelastic pairwise force, and the microelastic pair potential, perform the following:\n\n- Compute the pairwise peridynamic force in the bar under the uniform strain $\\epsilon$ and determine the net internal peridynamic force density acting on an interior point.\n- Derive the peridynamic strain energy density at a material point by integrating the microelastic pair potential over the horizon.\n- By equating the peridynamic strain energy density to the classical one-dimensional elastic strain energy density for a homogeneous bar, identify the effective modulus that relates the classical Cauchy stress $\\sigma$ and the strain $\\epsilon$ in this setting, thereby verifying that $\\sigma$ is proportional to $\\epsilon$ with a modulus that depends on $\\delta$ and $c$.\n\nProvide only the analytic expression for the effective modulus as a function of $c$ and $\\delta$ in your final answer. Do not include units in the final answer.", "solution": "The problem statement is a standard exercise in connecting the nonlocal peridynamic model to classical local elasticity theory. It is scientifically grounded, well-posed, and objective. All necessary parameters and conditions are provided for a self-contained derivation. The problem is valid.\n\nWe begin from the fundamental definitions of bond-based peridynamics for a one-dimensional bar.\nLet two material points in the reference configuration be located at positions $x$ and $x' = x + \\xi$. The vector connecting them is the bond $\\boldsymbol{\\xi} = (x' - x)\\mathbf{e}_1 = \\xi \\mathbf{e}_1$.\nThe problem specifies a homogeneous deformation field given by the displacement $u(x) = \\epsilon x$, where $\\epsilon$ is a constant strain.\nThe positions of the points in the deformed configuration are $y(x) = x + u(x) = x + \\epsilon x = (1+\\epsilon)x$ and $y(x') = x' + u(x') = (1+\\epsilon)x' = (1+\\epsilon)(x+\\xi)$.\nThe deformed bond vector is $\\boldsymbol{\\eta} + \\boldsymbol{\\xi} = y(x') - y(x) = (1+\\epsilon)(x+\\xi) - (1+\\epsilon)x = (1+\\epsilon)\\xi \\mathbf{e}_1$. The relative displacement vector is $\\boldsymbol{\\eta} = \\boldsymbol{u}(x')-\\boldsymbol{u}(x) = u(x')-u(x) = \\epsilon x' - \\epsilon x = \\epsilon(x'-x) = \\epsilon\\xi\\mathbf{e}_1$.\n\nThe bond stretch, $s$, for small deformations is defined as the fractional change in bond length:\n$$s = \\frac{|y(x') - y(x)| - |x' - x|}{ |x' - x|} = \\frac{|(1+\\epsilon)\\xi| - |\\xi|}{|\\xi|}$$\nFor small $\\epsilon$, we can assume $1+\\epsilon > 0$. Thus, $|(1+\\epsilon)\\xi| = (1+\\epsilon)|\\xi|$.\n$$s = \\frac{(1+\\epsilon)|\\xi| - |\\xi|}{|\\xi|} = \\epsilon$$\nThe stretch is uniform for all bonds and is equal to the applied strain $\\epsilon$.\n\nThe problem specifies a linear microelastic pairwise force, which for a bond-based model is of the form $\\mathbf{f} = \\mathcal{F}(s) \\mathbf{n}$, where $\\mathcal{F}(s)$ is a scalar force-stretch function and $\\mathbf{n}$ is a unit vector along the deformed bond. For small deformations, $\\mathbf{n} \\approx \\boldsymbol{\\xi}/|\\boldsymbol{\\xi}|$. The problem states the micromodulus is $c$, which in this context means $\\mathcal{F}(s) = c s$.\nThe pairwise force density that the point $x'$ exerts on the point $x$ is therefore:\n$$\\mathbf{f}(\\boldsymbol{\\eta}, \\boldsymbol{\\xi}) \\approx c s \\frac{\\boldsymbol{\\xi}}{|\\boldsymbol{\\xi}|} = c \\epsilon \\frac{\\xi \\mathbf{e}_1}{|\\xi|} = c \\epsilon \\, \\mathrm{sgn}(\\xi) \\mathbf{e}_1$$\nThe scalar force density function in this one-dimensional case is $f(\\xi) = c \\epsilon \\, \\mathrm{sgn}(\\xi)$. This force function is defined for $\\xi$ within the horizon, i.e., $|\\xi|  \\delta$.\n\nFirst, we compute the net internal peridynamic force density, $L(x)$, acting on a material point $x$. This is the integral of all pairwise force densities acting on $x$ from all points $x'$ within its horizon $\\mathcal{H}_x$.\n$$L(x) = \\int_{\\mathcal{H}_x} f(x' - x) \\, dV_{x'}$$\nIn one dimension, $x' - x = \\xi$ and $dV_{x'} = dx'$. The horizon extends from $x-\\delta$ to $x+\\delta$.\n$$L(x) = \\int_{x-\\delta}^{x+\\delta} f(x'-x) \\, dx' = \\int_{-\\delta}^{\\delta} f(\\xi) \\, d\\xi = \\int_{-\\delta}^{\\delta} c \\epsilon \\, \\mathrm{sgn}(\\xi) \\, d\\xi$$\nWe split the integral:\n$$L(x) = c \\epsilon \\left( \\int_{-\\delta}^{0} (-1) \\, d\\xi + \\int_{0}^{\\delta} (1) \\, d\\xi \\right) = c \\epsilon \\left( [-\\xi]_{-\\delta}^{0} + [\\xi]_{0}^{\\delta} \\right)$$\n$$L(x) = c \\epsilon \\left( (0 - (-\\delta)) + (\\delta - 0) \\right) = c \\epsilon (-\\delta + \\delta) = 0$$\nThe net force density is zero, which is the peridynamic equivalent of $\\mathrm{div}(\\sigma) = 0$ for a body in equilibrium under homogeneous stress.\n\nNext, we derive the peridynamic strain energy density, $W_{PD}$, at a material point $x$. This is defined as half the total potential energy of all bonds connected to $x$, integrated over its family. The factor of $\\frac{1}{2}$ prevents double counting the energy of each bond.\n$$W_{PD}(x) = \\frac{1}{2} \\int_{\\mathcal{H}_x} \\omega(\\boldsymbol{\\eta}, \\boldsymbol{\\xi}) \\, dV_{x'}$$\nwhere $\\omega$ is the micro-potential or bond-strain energy. For a linear force-stretch relation $f=cs$, the corresponding potential is $\\omega = \\frac{1}{2}cs^2$. A more fundamental approach is to define $W_{PD}$ via the work done by the bonds:\n$$W_{PD}(x) = \\frac{1}{2} \\int_{\\mathcal{H}_x} (\\mathbf{u}' - \\mathbf{u}) \\cdot \\mathbf{f} \\, dV_{x'}$$\nIn our 1D case, this becomes:\n$$W_{PD} = \\frac{1}{2} \\int_{-\\delta}^{\\delta} (\\epsilon\\xi) (c \\epsilon \\, \\mathrm{sgn}(\\xi)) \\, d\\xi = \\frac{1}{2} c \\epsilon^2 \\int_{-\\delta}^{\\delta} \\xi \\, \\mathrm{sgn}(\\xi) \\, d\\xi$$\nSince $\\xi \\, \\mathrm{sgn}(\\xi) = |\\xi|$, the expression simplifies to:\n$$W_{PD} = \\frac{1}{2} c \\epsilon^2 \\int_{-\\delta}^{\\delta} |\\xi| \\, d\\xi$$\nThe integral is evaluated as:\n$$\\int_{-\\delta}^{\\delta} |\\xi| \\, d\\xi = \\int_{-\\delta}^{0} (-\\xi) \\, d\\xi + \\int_{0}^{\\delta} \\xi \\, d\\xi = \\left[ -\\frac{\\xi^2}{2} \\right]_{-\\delta}^{0} + \\left[ \\frac{\\xi^2}{2} \\right]_{0}^{\\delta} = \\left(0 - (-\\frac{(-\\delta)^2}{2}) \\right) + \\left(\\frac{\\delta^2}{2} - 0 \\right) = \\frac{\\delta^2}{2} + \\frac{\\delta^2}{2} = \\delta^2$$\nSubstituting this back, we find the peridynamic strain energy density:\n$$W_{PD} = \\frac{1}{2} c \\epsilon^2 (\\delta^2) = \\frac{1}{2} c \\delta^2 \\epsilon^2$$\n\nFinally, we equate this to the classical strain energy density for a one-dimensional linear elastic material, $W_{classical}$. For a homogeneous bar, this is given by:\n$$W_{classical} = \\frac{1}{2} \\sigma \\epsilon = \\frac{1}{2} E \\epsilon^2$$\nwhere $\\sigma$ is the Cauchy stress and $E$ is the effective Young's modulus.\nBy equating the peridynamic and classical expressions for strain energy density, we can identify the effective modulus:\n$$W_{PD} = W_{classical}$$\n$$\\frac{1}{2} c \\delta^2 \\epsilon^2 = \\frac{1}{2} E \\epsilon^2$$\nFor a non-trivial strain ($\\epsilon \\neq 0$), we can divide both sides by $\\frac{1}{2}\\epsilon^2$, which gives the expression for the effective modulus $E$:\n$$E = c \\delta^2$$\nThis result can be verified by deriving the peridynamic stress directly. For a homogeneous deformation, the Piola-Kirchhoff stress (which is identical to the Cauchy stress for small strains) is given by $\\boldsymbol{\\sigma} = \\int_{\\mathcal{H}_x} \\boldsymbol{\\xi} \\otimes \\mathbf{f} \\, dV_{x'}$. In 1D, this is:\n$$\\sigma = \\int_{-\\delta}^{\\delta} \\xi f(\\xi) \\, d\\xi = \\int_{-\\delta}^{\\delta} \\xi (c \\epsilon \\, \\mathrm{sgn}(\\xi)) \\, d\\xi = c \\epsilon \\int_{-\\delta}^{\\delta} |\\xi| \\, d\\xi$$\n$$\\sigma = c \\epsilon (\\delta^2) = (c \\delta^2) \\epsilon$$\nComparing this with Hooke's Law, $\\sigma = E \\epsilon$, we again find that the effective modulus is $E = c \\delta^2$. The consistency of the results from both the energy and stress approaches confirms the derivation.", "answer": "$$\n\\boxed{c \\delta^{2}}\n$$", "id": "2667613"}, {"introduction": "While analytical solutions provide deep insight, the true power of peridynamics is realized through numerical simulation, especially for complex problems like fracture. This final practice [@problem_id:2667634] is a capstone exercise that bridges theory and computation, challenging you to implement a discrete state-based peridynamic model. You will then apply the method of manufactured solutions to perform a grid convergence study, a critical skill for verifying the correctness and determining the accuracy of any scientific computing code.", "problem": "You will implement and test the grid convergence of an Ordinary State-Based Peridynamic (OSB-PD) discretization for a smooth, manufactured two-dimensional displacement field on a periodic square domain. The purpose is to quantify the observed order of accuracy of the discrete peridynamic internal force operator as the grid is refined while keeping the nonlocal interaction horizon fixed.\n\nThe mathematical setting is as follows. Consider the two-dimensional periodic unit torus, a square domain with periodic boundary conditions, denoted by the set of points $\\{(x,y): x \\in [0,1), y \\in [0,1)\\}$. Let the dimension be $d=2$ and the nonlocal horizon be a fixed scalar $\\delta \\in (0,1/2)$. The manufactured displacement field is prescribed as a smooth, periodic function\n$$\n\\mathbf{u}(x,y) = \\begin{bmatrix}\n\\sin(2\\pi x) + 0.25 \\cos(2\\pi y) \\\\\n0.5 \\sin(2\\pi y) - 0.3 \\cos(2\\pi x)\n\\end{bmatrix}.\n$$\nYou will implement the linearized Ordinary State-Based Peridynamic solid model with uniform influence function $\\omega(r)=1$ for $r \\le \\delta$ and $\\omega(r)=0$ otherwise, bulk modulus $\\kappa0$, shear modulus $\\mu0$, and the standard state variables:\n- The weighted volume moment is\n$$\nm = \\int_{B_\\delta(\\mathbf{x})} \\omega(\\lVert \\boldsymbol{\\xi} \\rVert)\\, \\lVert \\boldsymbol{\\xi} \\rVert^2 \\,\\mathrm{d}V' = \\frac{\\pi}{2}\\,\\delta^4,\n$$\nwhich is constant in the homogeneous periodic setting.\n- The dilatation at a point $\\mathbf{x}$ is\n$$\n\\theta(\\mathbf{x}) = \\frac{d}{m} \\int_{B_\\delta(\\mathbf{x})} \\omega(\\lVert \\boldsymbol{\\xi} \\rVert)\\, \\left(\\mathbf{u}(\\mathbf{x}+\\boldsymbol{\\xi}) - \\mathbf{u}(\\mathbf{x})\\right)\\cdot \\mathbf{e} \\, \\lVert \\boldsymbol{\\xi} \\rVert \\,\\mathrm{d}V',\n$$\nwhere $\\boldsymbol{\\xi}=\\mathbf{x}'-\\mathbf{x}$, $\\mathbf{e}=\\boldsymbol{\\xi}/\\lVert \\boldsymbol{\\xi} \\rVert$, and $d=2$.\n- The deviatoric extension state at $(\\mathbf{x},\\boldsymbol{\\xi})$ is\n$$\ne^d(\\mathbf{x},\\boldsymbol{\\xi}) = \\left(\\mathbf{u}(\\mathbf{x}+\\boldsymbol{\\xi}) - \\mathbf{u}(\\mathbf{x})\\right)\\cdot \\mathbf{e} - \\frac{\\theta(\\mathbf{x})}{d}\\,\\lVert \\boldsymbol{\\xi} \\rVert.\n$$\n- The symmetric pairwise force density along bond direction $\\mathbf{e}$ is modeled by\n$$\nt(\\mathbf{x},\\boldsymbol{\\xi}) = \\omega(\\lVert \\boldsymbol{\\xi} \\rVert)\\,\\left[\\frac{\\kappa}{m}\\,\\frac{\\theta(\\mathbf{x})+\\theta(\\mathbf{x}+\\boldsymbol{\\xi})}{2}\\,\\lVert \\boldsymbol{\\xi} \\rVert + \\frac{2\\mu}{m}\\,\\frac{e^d(\\mathbf{x},\\boldsymbol{\\xi}) + e^d(\\mathbf{x}+\\boldsymbol{\\xi},-\\boldsymbol{\\xi})}{2} \\right]\\, \\mathbf{e}.\n$$\n- The internal force density is the antisymmetric exchange over the horizon,\n$$\n\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x}) = \\int_{B_\\delta(\\mathbf{x})} \\left[t(\\mathbf{x},\\boldsymbol{\\xi}) - t(\\mathbf{x}+\\boldsymbol{\\xi},-\\boldsymbol{\\xi})\\right]\\,\\mathrm{d}V'.\n$$\n\nYou will discretize the periodic unit square with a uniform grid of $N \\times N$ nodes, grid spacing $h=1/N$, control volume $V=h^2$ per node, and approximate the horizon integrals by Riemann sums over neighbor nodes within distance $\\delta$ using periodic wrapping:\n- The discrete dilatation at node $\\mathbf{x}_{ij}$ is\n$$\n\\theta_{ij} = \\frac{d}{m}\\,\\sum_{(p,q)\\in \\mathcal{N}} \\left(\\mathbf{u}_{i+p,j+q}-\\mathbf{u}_{ij}\\right)\\cdot \\mathbf{e}_{pq}\\, r_{pq}\\, V,\n$$\nwhere $\\mathcal{N}=\\{(p,q): r_{pq}=\\lVert (ph,qh)\\rVert \\le \\delta,\\,(p,q)\\neq(0,0)\\}$, $\\mathbf{e}_{pq}=(ph,qh)/r_{pq}$, and periodic indexing is used for $\\mathbf{u}_{i+p,j+q}$.\n- The discrete internal force at node $\\mathbf{x}_{ij}$ is\n$$\n\\mathbf{f}_{\\mathrm{int},ij} = \\sum_{(p,q)\\in \\mathcal{N}} \\omega(r_{pq})\\left[\\frac{\\kappa}{m}\\left(\\theta_{ij}+\\theta_{i+p,j+q}\\right) r_{pq} + \\frac{2\\mu}{m}\\left(e^d_{ij,pq} + e^d_{i+p,j+q,-p,-q}\\right) \\right]\\mathbf{e}_{pq}\\, V,\n$$\nwith\n$$\ne^d_{ij,pq} = \\left(\\mathbf{u}_{i+p,j+q}-\\mathbf{u}_{ij}\\right)\\cdot \\mathbf{e}_{pq} - \\frac{\\theta_{ij}}{d}\\, r_{pq}.\n$$\n\nYou will perform a self-convergence (grid refinement) study for the discrete operator $\\mathbf{f}_{\\mathrm{int}}^N(\\cdot)$ applied to the same manufactured field $\\mathbf{u}(\\cdot)$. For two grids where the finer grid size is an integer multiple of the coarse grid size, compare the discrete internal forces at the common coarse grid nodes. Specifically, for successive grids with sizes $N_1$, $N_2=2N_1$, and $N_3=2N_2$, define the discrete $L^2$-norm of the difference between two discrete force fields restricted to the coarse nodes:\n$$\n\\Delta_{12} = \\left(\\sum_{i,j} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_1}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_1^2 \\right)^{1/2},\n\\quad\n\\Delta_{23} = \\left(\\sum_{i,j} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_3}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_2^2 \\right)^{1/2},\n$$\nwhere $h_k=1/N_k$ and the notation $\\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij})$ refers to the values on the fine grid restricted to the coarse nodes by selecting every second node in each direction. Assuming asymptotic consistency, the observed order of accuracy $p$ is estimated by\n$$\np = \\frac{\\log(\\Delta_{12}/\\Delta_{23})}{\\log(2)}.\n$$\n\nImplement a program that:\n- Builds the neighbor set $\\mathcal{N}$ once per grid using the fixed horizon $\\delta$,\n- Computes $\\theta$ and $\\mathbf{f}_{\\mathrm{int}}$ for the manufactured $\\mathbf{u}$ on each grid,\n- Computes $\\Delta_{12}$ and $\\Delta_{23}$ as above,\n- Returns the observed order $p$ for each of the test cases below.\n\nUse dimensionless quantities throughout; no physical units are required. Angles are in radians due to the trigonometric functions defined on the manufactured field.\n\nTest suite. For each of the following parameter sets $(\\kappa,\\mu,\\delta,[N_1,N_2,N_3])$, compute the observed order $p$ using the above definition. The parameters are:\n- Case $1$: $(\\kappa,\\mu,\\delta,[N_1,N_2,N_3]) = (2.0, 1.0, 0.2, [16, 32, 64])$.\n- Case $2$: $(\\kappa,\\mu,\\delta,[N_1,N_2,N_3]) = (2.0, 1.0, 0.2, [12, 24, 48])$.\n- Case $3$: $(\\kappa,\\mu,\\delta,[N_1,N_2,N_3]) = (5.0, 0.8, 0.15, [20, 40, 80])$.\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list of the three observed orders of accuracy, enclosed in square brackets, with each number printed in standard floating-point notation (for example, $[p_1,p_2,p_3]$).", "solution": "The problem requires the implementation of a grid convergence study for a two-dimensional Ordinary State-Based Peridynamic (OSB-PD) model on a periodic unit square. The goal is to numerically determine the order of accuracy of the discrete internal force operator.\n\n### 1. Problem Validation\nThe provided problem statement is subjected to rigorous validation.\n\n**Givens Extracted:**\n- **Domain**: Periodic unit square, $\\mathbf{x}=(x,y) \\in [0,1) \\times [0,1)$.\n- **Dimension**: $d=2$.\n- **Horizon**: $\\delta$, a fixed scalar.\n- **Displacement Field**: A smooth, periodic manufactured solution $\\mathbf{u}(x,y) = [\\sin(2\\pi x) + 0.25 \\cos(2\\pi y), 0.5 \\sin(2\\pi y) - 0.3 \\cos(2\\pi x)]^T$.\n- **Material Model**: Linearized OSB-PD with bulk modulus $\\kappa$ and shear modulus $\\mu$.\n- **Influence Function**: $\\omega(r)=1$ for $r \\le \\delta$ and $0$ otherwise.\n- **Key Definitions**:\n    - Weighted volume moment: $m = \\frac{\\pi}{2}\\delta^4$.\n    - Dilatation $\\theta(\\mathbf{x})$.\n    - Deviatoric extension state $e^d(\\mathbf{x}, \\boldsymbol{\\xi})$.\n    - Symmetrized pairwise force density $t(\\mathbf{x}, \\boldsymbol{\\xi})$.\n    - Internal force density $\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x})$.\n- **Discretization**: Uniform $N \\times N$ grid, spacing $h=1/N$, volume $V=h^2$. Integrals are approximated by Riemann sums over neighbors within $\\delta$, with periodic wrapping.\n- **Convergence Analysis**:\n    - Grid refinement sequence: $N_1, N_2=2N_1, N_3=2N_2$.\n    - Error metric: Discrete $L^2$-norm of the difference between force fields on successive grids, restricted to common nodes. $\\Delta_{12}$ and $\\Delta_{23}$ are defined for this purpose.\n    - Order of accuracy formula: $p = \\log(\\Delta_{12}/\\Delta_{23}) / \\log(2)$.\n- **Test Cases**: Three sets of $(\\kappa, \\mu, \\delta, [N_1, N_2, N_3])$ are provided.\n\n**Validation Verdict:**\nThe problem is **valid**.\n- It is **scientifically grounded** in the established theory of peridynamics and standard numerical analysis practices (manufactured solution, grid convergence).\n- The formulation is **well-posed**; it involves the direct evaluation of a discrete operator, which is a deterministic computation.\n- The description is **objective**, using precise mathematical language.\n- The provided equations, including the symmetrized OSB-PD model and discretization scheme, are **internally consistent**. The discrete formula for the internal force is a correct discretization of the corresponding continuum model, which exploits the symmetry of the pairwise force density, i.e., $t(\\mathbf{x}, \\boldsymbol{\\xi}) = t(\\mathbf{x}+\\boldsymbol{\\xi}, -\\boldsymbol{\\xi})$, leading to $\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x}) = \\int_{B_\\delta(\\mathbf{x})} 2t(\\mathbf{x},\\boldsymbol{\\xi})\\mathbf{e}\\,\\mathrm{d}V'$. The discrete formula is a Riemann sum approximation of this integral.\n- The problem is **self-contained** and provides all necessary information for implementation.\n- The required computations are **feasible** with the specified grid sizes.\n\nThe problem is a standard, non-trivial exercise in computational mechanics, requiring careful implementation of the peridynamic operator and numerical analysis procedures.\n\n### 2. Solution Methodology\n\nThe solution involves developing a program to compute the observed order of accuracy, $p$, for the given test cases. The overall process for each case is as follows:\n1.  For each grid resolution $N_k$ in the sequence $[N_1, N_2, N_3]$, compute the discrete internal force field $\\mathbf{f}_{\\mathrm{int}}^{N_k}$.\n2.  Use the computed force fields to calculate the error norms $\\Delta_{12}$ and $\\Delta_{23}$.\n3.  Compute the observed order of accuracy $p$.\n\n**A. Computing the Internal Force Field**\n\nFor a given grid of size $N \\times N$, the following steps are performed:\n\n1.  **Grid and Parameters**: The domain is discretized with $N \\times N$ nodes. The grid spacing is $h=1/N$ and the control volume per node is $V=h^2$. The material-dependent constant, the weighted volume moment, is $m = \\frac{\\pi}{2}\\delta^4$. The dimension is $d=2$.\n\n2.  **Neighbor Identification**: For a reference node at the origin, a neighbor list is constructed. It contains all nodes with integer grid indices $(p,q)$ such that their distance $r_{pq} = \\sqrt{(ph)^2 + (qh)^2}$ is less than or equal to the horizon $\\delta$, excluding the trivial neighbor $(0,0)$. For each neighbor, its relative indices $(p,q)$, distance $r_{pq}$, and unit direction vector $\\mathbf{e}_{pq} = (ph, qh)/r_{pq}$ are stored. This list is constant for all nodes on a given grid due to the uniform grid and periodic domain.\n\n3.  **Displacement Field Evaluation**: The manufactured displacement field $\\mathbf{u}(\\mathbf{x})$ is evaluated at each node $\\mathbf{x}_{ij}$ of the grid, yielding a discrete field $\\mathbf{u}_{ij}$.\n\n4.  **Dilatation Field Calculation**: The discrete dilatation field $\\theta_{ij}$ is computed. This requires iterating over all neighbors $(p,q)$ in the pre-computed list. For each neighbor, the displacement difference $(\\mathbf{u}_{i+p, j+q} - \\mathbf{u}_{ij})$ is computed using periodic wrapping of indices. The contribution to the dilatation sum is $(\\mathbf{u}_{i+p, j+q} - \\mathbf{u}_{ij}) \\cdot \\mathbf{e}_{pq} \\, r_{pq} \\, V$. After summing over all neighbors, the result is scaled by $d/m$.\n\n5.  **Internal Force Field Calculation**: The discrete internal force field $\\mathbf{f}_{\\mathrm{int},ij}$ is computed next. A simplified but equivalent expression for the force contribution from each neighbor bond is derived to improve computational efficiency. The force vector is given by\n    $$ \\mathbf{f}_{\\mathrm{int},ij} = \\sum_{(p,q)\\in \\mathcal{N}} \\frac{1}{m} \\left( (\\kappa - \\mu) r_{pq} (\\theta_{ij}+\\theta_{i+p,j+q}) + 4\\mu \\left[(\\mathbf{u}_{i+p,j+q}-\\mathbf{u}_{ij})\\cdot \\mathbf{e}_{pq}\\right] \\right) \\mathbf{e}_{pq} V $$\n    This formula is derived by substituting the definitions of $e^d_{ij,pq}$ and $e^d_{i+p,j+q,-p,-q}$ into the provided expression for $\\mathbf{f}_{\\mathrm{int},ij}$ and simplifying with $d=2$. This calculation iterates over all neighbors, computes the scalar force magnitude for each bond using the known fields $\\mathbf{u}_{ij}$ and $\\theta_{ij}$, and accumulates the vector contributions. All field operations like neighbor value lookups ($\\theta_{i+p,j+q}$) are handled with periodic wrapping.\n\n**B. Calculating the Order of Accuracy**\n\nOnce the force fields $\\mathbf{f}_{\\mathrm{int}}^{N_1}$, $\\mathbf{f}_{\\mathrm{int}}^{N_2}$, and $\\mathbf{f}_{\\mathrm{int}}^{N_3}$ are computed:\n\n1.  **Error Norm $\\Delta_{12}$**: The force field from the $N_2$ grid, $\\mathbf{f}_{\\mathrm{int}}^{N_2}$, is downsampled to the $N_1$ grid by selecting every second node in each direction. The difference between $\\mathbf{f}_{\\mathrm{int}}^{N_1}$ and this downsampled field is computed. The discrete $L^2$-norm of this difference vector field is then calculated:\n    $$ \\Delta_{12} = \\left(\\sum_{i,j=0}^{N_1-1} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_1}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_1^2 \\right)^{1/2} $$\n\n2.  **Error Norm $\\Delta_{23}$**: A similar procedure is applied to the $N_2$ and $N_3$ grids. The force field $\\mathbf{f}_{\\mathrm{int}}^{N_3}$ is downsampled to the $N_2$ grid. The $L^2$-norm of the difference between $\\mathbf{f}_{\\mathrm{int}}^{N_2}$ and the downsampled $\\mathbf{f}_{\\mathrm{int}}^{N_3}$ is calculated:\n    $$ \\Delta_{23} = \\left(\\sum_{i,j=0}^{N_2-1} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_3}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_2^2 \\right)^{1/2} $$\n\n3.  **Order of Accuracy $p$**: Finally, the observed order of accuracy is computed using the standard formula derived from Richardson extrapolation, assuming the error behaves as $E(h) \\approx C h^p$:\n    $$ p = \\frac{\\log(\\Delta_{12} / \\Delta_{23})}{\\log(2)} $$\n\nThis entire procedure is repeated for each of the three test cases specified in the problem statement. The expected theoretical order of convergence for this discretization on a smooth manufactured solution is $p=2$, which serves as a verification of the implementation's correctness.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_force_field(kappa, mu, delta, N):\n    \"\"\"\n    Computes the discrete OSB-PD internal force field for a given grid.\n    \"\"\"\n    d = 2.0\n    m = (np.pi / 2.0) * delta**4\n    h = 1.0 / N\n    V = h**2\n\n    # 1. Grid and Neighbors\n    # 'xy' indexing: x varies along axis 1, y varies along axis 0.\n    coords = np.linspace(0, 1, N, endpoint=False)\n    x, y = np.meshgrid(coords, coords)\n\n    neighbors = []\n    p_max = int(np.ceil(delta / h))\n    for p in range(-p_max, p_max + 1):\n        for q in range(-p_max, p_max + 1):\n            if p == 0 and q == 0:\n                continue\n            \n            r_sq = (p*h)**2 + (q*h)**2\n            if r_sq = delta**2:\n                r = np.sqrt(r_sq)\n                # Handle r=0 case to avoid division by zero, though p,q!=0 here.\n                e_vec = np.array([p*h, q*h]) / r if r  0 else np.zeros(2)\n                # (p,q) are grid index offsets for (x, y) respectively\n                neighbors.append({'p': p, 'q': q, 'r': r, 'e': e_vec})\n\n    # 2. Manufactured displacement field u(x,y)\n    u_x = np.sin(2 * np.pi * x) + 0.25 * np.cos(2 * np.pi * y)\n    u_y = 0.5 * np.sin(2 * np.pi * y) - 0.3 * np.cos(2 * np.pi * x)\n    u_grid = np.stack((u_x, u_y), axis=-1)\n\n    # 3. Dilatation field theta\n    theta_grid = np.zeros((N, N))\n    for neighbor in neighbors:\n        p, q, r, e = neighbor['p'], neighbor['q'], neighbor['r'], neighbor['e']\n        \n        # Roll axis is (0,1) for (y,x) from meshgrid convention\n        # A neighbor at relative grid index (p,q) corresponds to a shift of\n        # q in axis 0 (y) and p in axis 1 (x). We roll backwards.\n        u_neighbor = np.roll(u_grid, shift=(-q, -p), axis=(0, 1))\n        delta_u = u_neighbor - u_grid\n        extension = np.einsum('ijc,c-ij', delta_u, e)\n        theta_grid += extension * r\n    \n    theta_grid *= (d / m) * V\n\n    # 4. Internal force field f_int using simplified formula\n    f_int_grid = np.zeros((N, N, 2))\n    for neighbor in neighbors:\n        p, q, r, e = neighbor['p'], neighbor['q'], neighbor['r'], neighbor['e']\n\n        u_neighbor = np.roll(u_grid, shift=(-q, -p), axis=(0, 1))\n        theta_neighbor = np.roll(theta_grid, shift=(-q, -p), axis=(0, 1))\n        \n        delta_u = u_neighbor - u_grid\n        theta_sum = theta_grid + theta_neighbor\n        extension = np.einsum('ijc,c-ij', delta_u, e)\n\n        # scalar_part is the magnitude of the force term inside square brackets\n        # from the problem, simplified algebraically for d=2.\n        scalar_part = ((kappa - mu) * r * theta_sum + 4 * mu * extension) / m\n        \n        f_int_grid += scalar_part[:, :, np.newaxis] * e * V\n        \n    return f_int_grid\n\ndef calculate_order_of_accuracy(kappa, mu, delta, N_values):\n    \"\"\"\n    Calculates the observed order of accuracy for a single test case.\n    \"\"\"\n    force_fields = []\n    for N in N_values:\n        f_int = compute_force_field(kappa, mu, delta, N)\n        force_fields.append(f_int)\n    \n    f1, f2, f3 = force_fields\n    N1, N2, _ = N_values\n    h1, h2 = 1.0/N1, 1.0/N2\n\n    # Subsample finer grid forces to coarser grids\n    # f2 grid (N2xN2) is subsampled to f1 grid (N1xN1)\n    f2_sub = f2[::2, ::2, :]\n    # f3 grid (N3xN3) is subsampled to f2 grid (N2xN2)\n    f3_sub = f3[::2, ::2, :]\n    \n    # Calculate L2 norm of difference Delta_{12}\n    diff_12 = f1 - f2_sub\n    norm_sq_12 = np.sum(np.linalg.norm(diff_12, axis=2)**2)\n    Delta_12 = np.sqrt(norm_sq_12 * h1**2)\n\n    # Calculate L2 norm of difference Delta_{23}\n    diff_23 = f2 - f3_sub\n    norm_sq_23 = np.sum(np.linalg.norm(diff_23, axis=2)**2)\n    Delta_23 = np.sqrt(norm_sq_23 * h2**2)\n    \n    # Handle potential division by zero\n    if Delta_23 == 0 or Delta_12 == 0:\n        return np.nan\n\n    p = np.log(Delta_12 / Delta_23) / np.log(2)\n    return p\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (2.0, 1.0, 0.2, [16, 32, 64]),\n        (2.0, 1.0, 0.2, [12, 24, 48]),\n        (5.0, 0.8, 0.15, [20, 40, 80]),\n    ]\n\n    results = []\n    for case in test_cases:\n        kappa, mu, delta, N_values = case\n        p = calculate_order_of_accuracy(kappa, mu, delta, N_values)\n        results.append(p)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2667634"}]}