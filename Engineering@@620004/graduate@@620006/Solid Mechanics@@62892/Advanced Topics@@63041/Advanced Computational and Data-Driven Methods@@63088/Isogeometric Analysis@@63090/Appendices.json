{"hands_on_practices": [{"introduction": "The core principle of Isogeometric Analysis is the use of smooth, computer-aided design (CAD) basis functions, like NURBS, to represent both the geometry and the solution fields. This first practice exercise provides a direct, hands-on application of these fundamentals. By working from the ground up with control points, weights, and knot vectors, you will construct a NURBS surface and compute its essential geometric properties—tangents and normals—at a specific point [@problem_id:2651405]. Mastering these calculations is the foundational skill for analyzing any complex geometry within the IGA framework.", "problem": "Consider the construction of a Non-Uniform Rational B-Splines (NURBS) surface. Work in a right-handed Cartesian frame. Let the bi-degree be $p=q=1$ with open knot vectors $U=[0,0,1,1]$ and $V=[0,0,1,1]$. The $2 \\times 2$ control net is given by the control points $P_{00}=(0,0,0)$ m, $P_{10}=(2,0,1)$ m, $P_{01}=(0,3,1)$ m, and $P_{11}=(2,3,2)$ m, with the corresponding NURBS weights $w_{00}=1$, $w_{10}=2$, $w_{01}=1$, and $w_{11}=\\tfrac{3}{2}$. Define the surface $S(u,v)$ over $[0,1]\\times[0,1]$ using the standard tensor-product NURBS construction, with the scalar weight function $W(u,v)$ and the rational basis functions $R_{ij}(u,v)$ formed from the degree-$1$ B-spline bases in each direction.\n\nStarting from first principles, using the definitions of the degree-$1$ B-spline basis functions on the open knot vectors and the rational surface construction, perform the following at the parameter pair $(u_{0},v_{0})=\\left(\\tfrac{1}{3},\\tfrac{1}{2}\\right)$:\n1. Construct the NURBS surface point $S(u_{0},v_{0})$.\n2. Compute the tangent vectors $S_{u}(u_{0},v_{0})$ and $S_{v}(u_{0},v_{0})$ by differentiating the rational surface with respect to $u$ and $v$.\n3. Compute the surface normal vector $n(u_{0},v_{0})=S_{u}(u_{0},v_{0})\\times S_{v}(u_{0},v_{0})$ and the associated unit normal $\\hat{n}(u_{0},v_{0})=n/\\|n\\|$.\n\nAnswer specification: Report only the magnitude $\\|n(u_{0},v_{0})\\|$ in square meters. Round your answer to four significant figures. Express the final magnitude in $\\mathrm{m}^{2}$ (do not include units in the boxed final answer).", "solution": "The problem statement will first be subjected to rigorous validation.\n\nStep 1: Extract Givens\nThe givens are extracted verbatim from the problem statement:\n- Bi-degree: $p=1, q=1$.\n- Open knot vectors: $U=[0,0,1,1]$, $V=[0,0,1,1]$.\n- Control net ($2 \\times 2$): $P_{00}=(0,0,0)$ m, $P_{10}=(2,0,1)$ m, $P_{01}=(0,3,1)$ m, $P_{11}=(2,3,2)$ m.\n- NURBS weights: $w_{00}=1$, $w_{10}=2$, $w_{01}=1$, $w_{11}=\\tfrac{3}{2}$.\n- Surface definition: $S(u,v)$ over $[0,1]\\times[0,1]$ via standard tensor-product NURBS construction.\n- Evaluation point: $(u_{0},v_{0})=\\left(\\tfrac{1}{3},\\tfrac{1}{2}\\right)$.\n- Task: Compute $S(u_0,v_0)$, $S_{u}(u_0,v_0)$, $S_{v}(u_0,v_0)$, $n(u_0,v_0)=S_{u}\\times S_{v}$, and finally $\\|n(u_0,v_0)\\|$.\n- Final answer specification: Report $\\|n(u_0,v_0)\\|$ rounded to four significant figures.\n\nStep 2: Validate Using Extracted Givens\n- **Scientifically Grounded**: The problem is a standard exercise in computer-aided geometric design (CAGD) and is fundamental to isogeometric analysis. The formulation of a NURBS surface is based on established mathematical principles. The problem is scientifically sound.\n- **Well-Posed**: The problem is fully specified. The number of control points ($2 \\times 2$) is consistent with the degrees ($p=1, q=1$) and the length of the open knot vectors ($4$ knots for degree $1$ and $2$ control points). The evaluation point is within the parametric domain. A unique, stable solution exists.\n- **Objective**: The problem is stated using precise, unambiguous mathematical language and contains no subjective or opinion-based claims.\n\nAll other criteria for validity are also met. There are no contradictions, missing data, or unrealistic conditions.\n\nStep 3: Verdict and Action\nThe problem is valid. A complete, reasoned solution follows.\n\nThe NURBS surface $S(u,v)$ is defined by the rational formula:\n$$ S(u,v) = \\frac{\\sum_{i=0}^{1} \\sum_{j=0}^{1} N_{i,p}(u) N_{j,q}(v) w_{ij} P_{ij}}{\\sum_{i=0}^{1} \\sum_{j=0}^{1} N_{i,p}(u) N_{j,q}(v) w_{ij}} = \\frac{A(u,v)}{W(u,v)} $$\nwhere $p=1$ and $q=1$. For the open knot vector $U=[0,0,1,1]$, the degree $p=1$ B-spline basis functions over the domain $u \\in [0,1]$ are the linear Bernstein polynomials:\n$$ N_{0,1}(u) = 1-u $$\n$$ N_{1,1}(u) = u $$\nSimilarly, for the knot vector $V=[0,0,1,1]$, the degree $q=1$ basis functions are:\n$$ N_{0,1}(v) = 1-v $$\n$$ N_{1,1}(v) = v $$\n\nFirst, we evaluate the scalar weight function $W(u,v)$ and the vector-valued function $A(u,v)$ at the specified parameter point $(u_0, v_0) = (\\frac{1}{3}, \\frac{1}{2})$.\nThe basis functions evaluate to:\n$N_{0,1}(u_0) = 1 - \\frac{1}{3} = \\frac{2}{3}$, $N_{1,1}(u_0) = \\frac{1}{3}$.\n$N_{0,1}(v_0) = 1 - \\frac{1}{2} = \\frac{1}{2}$, $N_{1,1}(v_0) = \\frac{1}{2}$.\n\nThe weight function $W(u,v)$ is:\n$$ W(u,v) = (1-u)(1-v)w_{00} + u(1-v)w_{10} + (1-u)v w_{01} + uv w_{11} $$\nAt $(u_0, v_0)$:\n$$ W(\\tfrac{1}{3},\\tfrac{1}{2}) = (\\tfrac{2}{3})(\\tfrac{1}{2})(1) + (\\tfrac{1}{3})(\\tfrac{1}{2})(2) + (\\tfrac{2}{3})(\\tfrac{1}{2})(1) + (\\tfrac{1}{3})(\\tfrac{1}{2})(\\tfrac{3}{2}) = \\tfrac{1}{3} + \\tfrac{1}{3} + \\tfrac{1}{3} + \\tfrac{1}{4} = 1 + \\tfrac{1}{4} = \\tfrac{5}{4} $$\nThe vector-valued function $A(u,v)$ is:\n$$ A(u,v) = (1-u)(1-v)w_{00}P_{00} + u(1-v)w_{10}P_{10} + (1-u)v w_{01}P_{01} + uv w_{11}P_{11} $$\nAt $(u_0, v_0)$:\n$$ A(\\tfrac{1}{3},\\tfrac{1}{2}) = (\\tfrac{2}{3})(\\tfrac{1}{2})(1)P_{00} + (\\tfrac{1}{3})(\\tfrac{1}{2})(2)P_{10} + (\\tfrac{2}{3})(\\tfrac{1}{2})(1)P_{01} + (\\tfrac{1}{3})(\\tfrac{1}{2})(\\tfrac{3}{2})P_{11} $$\n$$ A(\\tfrac{1}{3},\\tfrac{1}{2}) = \\tfrac{1}{3}P_{00} + \\tfrac{1}{3}P_{10} + \\tfrac{1}{3}P_{01} + \\tfrac{1}{4}P_{11} $$\nSubstituting the control points $P_{ij}$:\n$$ A(\\tfrac{1}{3},\\tfrac{1}{2}) = \\tfrac{1}{3}(0,0,0) + \\tfrac{1}{3}(2,0,1) + \\tfrac{1}{3}(0,3,1) + \\tfrac{1}{4}(2,3,2) $$\n$$ A(\\tfrac{1}{3},\\tfrac{1}{2}) = (0,0,0) + (\\tfrac{2}{3},0,\\tfrac{1}{3}) + (0,1,\\tfrac{1}{3}) + (\\tfrac{1}{2},\\tfrac{3}{4},\\tfrac{1}{2}) = (\\tfrac{2}{3}+\\tfrac{1}{2}, 1+\\tfrac{3}{4}, \\tfrac{2}{3}+\\tfrac{1}{2}) = (\\tfrac{7}{6}, \\tfrac{7}{4}, \\tfrac{7}{6}) $$\nThe surface point is $S(u_0, v_0) = \\frac{A(u_0, v_0)}{W(u_0, v_0)} = \\frac{(\\tfrac{7}{6}, \\tfrac{7}{4}, \\tfrac{7}{6})}{\\tfrac{5}{4}} = \\tfrac{4}{5}(\\tfrac{7}{6}, \\tfrac{7}{4}, \\tfrac{7}{6}) = (\\tfrac{14}{15}, \\tfrac{7}{5}, \\tfrac{14}{15})$.\n\nNext, we compute the tangent vectors. The derivative of the rational surface is found using the quotient rule:\n$$ S_{u} = \\frac{A_u W - A W_u}{W^2} \\quad \\text{and} \\quad S_{v} = \\frac{A_v W - A W_v}{W^2} $$\nWe need the partial derivatives of $A(u,v)$ and $W(u,v)$.\nDerivatives of basis functions are $\\frac{d}{du}N_{0,1}(u) = -1$, $\\frac{d}{du}N_{1,1}(u) = 1$, and similarly for $v$.\n$$ W_u = \\frac{\\partial W}{\\partial u} = (1-v)(w_{10}-w_{00}) + v(w_{11}-w_{01}) $$\n$$ W_v = \\frac{\\partial W}{\\partial v} = (1-u)(w_{01}-w_{00}) + u(w_{11}-w_{10}) $$\n$$ A_u = \\frac{\\partial A}{\\partial u} = (1-v)(w_{10}P_{10}-w_{00}P_{00}) + v(w_{11}P_{11}-w_{01}P_{01}) $$\n$$ A_v = \\frac{\\partial A}{\\partial v} = (1-u)(w_{01}P_{01}-w_{00}P_{00}) + u(w_{11}P_{11}-w_{10}P_{10}) $$\nEvaluate these at $(u_0, v_0) = (\\frac{1}{3}, \\frac{1}{2})$:\n$$ W_u = \\tfrac{1}{2}(2-1) + \\tfrac{1}{2}(\\tfrac{3}{2}-1) = \\tfrac{1}{2} + \\tfrac{1}{4} = \\tfrac{3}{4} $$\n$$ W_v = \\tfrac{2}{3}(1-1) + \\tfrac{1}{3}(\\tfrac{3}{2}-2) = 0 + \\tfrac{1}{3}(-\\tfrac{1}{2}) = -\\tfrac{1}{6} $$\n$$ A_u = \\tfrac{1}{2}(2P_{10}-1P_{00}) + \\tfrac{1}{2}(\\tfrac{3}{2}P_{11}-1P_{01}) = \\tfrac{1}{2}(2(2,0,1)) + \\tfrac{1}{2}((\\tfrac{3}{2}(2,3,2))-(0,3,1)) = (2,0,1) + \\tfrac{1}{2}((3,\\tfrac{9}{2},3)-(0,3,1)) = (2,0,1) + \\tfrac{1}{2}(3,\\tfrac{3}{2},2) = (2+\\tfrac{3}{2}, \\tfrac{3}{4}, 1+1) = (\\tfrac{7}{2}, \\tfrac{3}{4}, 2) $$\n$$ A_v = \\tfrac{2}{3}(1P_{01}-1P_{00}) + \\tfrac{1}{3}(\\tfrac{3}{2}P_{11}-2P_{10}) = \\tfrac{2}{3}(0,3,1) + \\tfrac{1}{3}((\\tfrac{3}{2}(2,3,2))-(2(2,0,1))) = (0,2,\\tfrac{2}{3}) + \\tfrac{1}{3}((3,\\tfrac{9}{2},3)-(4,0,2)) = (0,2,\\tfrac{2}{3}) + \\tfrac{1}{3}(-1,\\tfrac{9}{2},1) = (-\\tfrac{1}{3}, 2+\\tfrac{3}{2}, \\tfrac{2}{3}+\\tfrac{1}{3}) = (-\\tfrac{1}{3}, \\tfrac{7}{2}, 1) $$\nNow, assemble the tangent vectors. We have $W=\\tfrac{5}{4}$, so $W^2=\\tfrac{25}{16}$.\nFor $S_u$:\n$$ A_u W - A W_u = (\\tfrac{7}{2}, \\tfrac{3}{4}, 2)(\\tfrac{5}{4}) - (\\tfrac{7}{6}, \\tfrac{7}{4}, \\tfrac{7}{6})(\\tfrac{3}{4}) = (\\tfrac{35}{8}, \\tfrac{15}{16}, \\tfrac{5}{2}) - (\\tfrac{7}{8}, \\tfrac{21}{16}, \\tfrac{7}{8}) = (\\tfrac{28}{8}, -\\tfrac{6}{16}, \\tfrac{13}{8}) = (\\tfrac{7}{2}, -\\tfrac{3}{8}, \\tfrac{13}{8}) $$\n$$ S_u(\\tfrac{1}{3},\\tfrac{1}{2}) = \\frac{(\\tfrac{7}{2}, -\\tfrac{3}{8}, \\tfrac{13}{8})}{\\tfrac{25}{16}} = \\tfrac{16}{25}(\\tfrac{7}{2}, -\\tfrac{3}{8}, \\tfrac{13}{8}) = (\\tfrac{56}{25}, -\\tfrac{6}{25}, \\tfrac{26}{25}) $$\nFor $S_v$:\n$$ A_v W - A W_v = (-\\tfrac{1}{3}, \\tfrac{7}{2}, 1)(\\tfrac{5}{4}) - (\\tfrac{7}{6}, \\tfrac{7}{4}, \\tfrac{7}{6})(-\\tfrac{1}{6}) = (-\\tfrac{5}{12}, \\tfrac{35}{8}, \\tfrac{5}{4}) - (-\\tfrac{7}{36}, -\\tfrac{7}{24}, -\\tfrac{7}{36}) = (-\\tfrac{8}{36}, \\tfrac{112}{24}, \\tfrac{52}{36}) = (-\\tfrac{2}{9}, \\tfrac{14}{3}, \\tfrac{13}{9}) $$\n$$ S_v(\\tfrac{1}{3},\\tfrac{1}{2}) = \\frac{(-\\tfrac{2}{9}, \\tfrac{14}{3}, \\tfrac{13}{9})}{\\tfrac{25}{16}} = \\tfrac{16}{25}(-\\tfrac{2}{9}, \\tfrac{14}{3}, \\tfrac{13}{9}) = (-\\tfrac{32}{225}, \\tfrac{224}{75}, \\tfrac{208}{225}) $$\nCompute the normal vector $n = S_u \\times S_v$:\n$$ n = (\\tfrac{56}{25}, -\\tfrac{6}{25}, \\tfrac{26}{25}) \\times (-\\tfrac{32}{225}, \\tfrac{224}{75}, \\tfrac{208}{225}) $$\n$$ n = \\frac{1}{25 \\cdot 225} (56, -6, 26) \\times (-32, 672, 208) $$\nThe cross product is:\n$$ \\begin{vmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\ 56 & -6 & 26 \\\\ -32 & 672 & 208 \\end{vmatrix} = ((-6)(208) - (26)(672))\\mathbf{i} - ((56)(208) - (26)(-32))\\mathbf{j} + ((56)(672) - (-6)(-32))\\mathbf{k} $$\n$$ = (-1248 - 17472)\\mathbf{i} - (11648 + 832)\\mathbf{j} + (37632 - 192)\\mathbf{k} = -18720\\mathbf{i} - 12480\\mathbf{j} + 37440\\mathbf{k} $$\nSo $n = \\frac{1}{5625}(-18720, -12480, 37440)$.\nWe simplify the common factor $6240$ from the vector components: $6240(-3, -2, 6)$.\n$$ n = \\frac{6240}{5625}(-3, -2, 6) = \\frac{416}{375}(-3, -2, 6) $$\nThe magnitude of the normal vector is:\n$$ \\|n\\| = |\\tfrac{416}{375}| \\cdot \\|(-3, -2, 6)\\| = \\tfrac{416}{375} \\sqrt{(-3)^2 + (-2)^2 + 6^2} = \\tfrac{416}{375} \\sqrt{9+4+36} = \\tfrac{416}{375} \\sqrt{49} $$\n$$ \\|n(\\tfrac{1}{3},\\tfrac{1}{2})\\| = \\tfrac{416 \\times 7}{375} = \\tfrac{2912}{375} $$\nAs a decimal, this is $\\tfrac{2912}{375} \\approx 7.765333...$\nRounding to four significant figures gives $7.765$.\nThe control points are in meters (m), so the tangent vectors have units of m, and the normal vector's magnitude has units of $\\mathrm{m}^2$.", "answer": "$$\n\\boxed{7.765}\n$$", "id": "2651405"}, {"introduction": "Once a domain is geometrically defined, the next step towards a physical simulation is setting up the integrals that form the system matrices. This exercise builds the bridge between the geometric representation and the analysis itself, focusing on the critical role of the Jacobian matrix [@problem_id:2651381]. You will practice mapping an integration point from a parent element to the physical domain and calculating the determinant of the geometric Jacobian, $\\det\\mathbf{J}$, which scales the area element for numerical quadrature. This procedure is central to accurately computing physical quantities like stiffness and mass in any IGA simulation.", "problem": "Consider a two-parameter Non-Uniform Rational B-Splines (NURBS) surface used in isogeometric analysis to map a parametric domain to a planar solid domain in two-dimensional solid mechanics. The surface is of bi-degree $(p,q)=(1,1)$ with open knot vectors in each parametric direction given by\n$$\\Xi = [\\,0,\\,0,\\,0.5,\\,1,\\,1\\,], \\qquad \\mathcal{H} = [\\,0,\\,0,\\,0.3,\\,1,\\,1\\,].$$\nThere are $n_{\\xi}=3$ basis functions in the $\\xi$-direction and $n_{\\eta}=3$ basis functions in the $\\eta$-direction. The $3\\times 3$ control net $\\{\\mathbf{P}_{ij}\\}_{i=1..3,\\,j=1..3}$ (with coordinates in meters) and the corresponding NURBS weights $\\{w_{ij}\\}$ are\n$$\\mathbf{P}_{11}=(0,0),\\;\\mathbf{P}_{21}=(2,0.2),\\;\\mathbf{P}_{31}=(4,0),$$\n$$\\mathbf{P}_{12}=(0.1,1),\\;\\mathbf{P}_{22}=(2.1,1.1),\\;\\mathbf{P}_{32}=(4.1,1),$$\n$$\\mathbf{P}_{13}=(0,2),\\;\\mathbf{P}_{23}=(2,2.1),\\;\\mathbf{P}_{33}=(4,2),$$\nand\n$$w_{ij}=1 \\quad \\text{for all } i,j.$$\n\nFocus on the tensor-product knot span (element) given by $[\\xi_{2},\\xi_{3}]\\times[\\eta_{2},\\eta_{3}] = [0.5,\\,1]\\times[0.3,\\,1]$. Consider standard two-point Gauss–Legendre quadrature on the parent square $[-1,1]\\times[-1,1]$, with points and weights\n$$r,s \\in \\left\\{-\\frac{1}{\\sqrt{3}},\\,+\\frac{1}{\\sqrt{3}}\\right\\}, \\qquad w_{r}=1,\\; w_{s}=1.$$\nAt the specific parent-space Gauss point $(r,s)=\\left(\\frac{1}{\\sqrt{3}},\\,-\\frac{1}{\\sqrt{3}}\\right)$:\n\n- Map $(r,s)$ to the parametric coordinates $(\\xi,\\eta)$ for the chosen element by the standard affine map from $[-1,1]$ to each knot subinterval.\n- Using the fundamental definitions of B-spline basis functions of degree $1$ on a single knot span, construct the nonzero tensor-product basis functions and their first derivatives with respect to $\\xi$ and $\\eta$ at $(\\xi,\\eta)$. Then, using the definition of NURBS basis functions, obtain the corresponding rational basis functions and their derivatives needed for geometric mapping.\n- Using the geometric map $\\mathbf{x}(\\xi,\\eta)=\\sum_{i=1}^{3}\\sum_{j=1}^{3} R_{ij}(\\xi,\\eta)\\,\\mathbf{P}_{ij}$, compute the mapped physical coordinates of the selected integration point and the Jacobian matrix $\\mathbf{J}=\\partial\\mathbf{x}/\\partial(\\xi,\\eta)$ at that point. Evaluate $\\det\\mathbf{J}$.\n- Using the change of variables for integration (push-forward of the area element) from parent space to physical space, assemble the quadrature weight $W$ at this Gauss point, which must include the parent-to-parametric scaling and $\\det\\mathbf{J}$.\n\nReport only the final quadrature weight $W$ for this Gauss point. Express your answer in square meters. Do not round; provide the exact value.", "solution": "The problem as stated is subjected to validation before proceeding.\n\n**Step 1: Extract Givens**\n- **Geometry Type**: Two-parameter Non-Uniform Rational B-Splines (NURBS) surface.\n- **Bi-degree**: $(p,q)=(1,1)$.\n- **Knot Vectors**: $\\Xi = [\\,0,\\,0,\\,0.5,\\,1,\\,1\\,]$ in the $\\xi$-direction and $\\mathcal{H} = [\\,0,\\,0,\\,0.3,\\,1,\\,1\\,]$ in the $\\eta$-direction.\n- **Basis Functions**: $n_{\\xi}=3$ functions in $\\xi$, $n_{\\eta}=3$ functions in $\\eta$.\n- **Control Net**: A $3\\times 3$ grid of points $\\{\\mathbf{P}_{ij}\\}$ with coordinates in meters:\n  $\\mathbf{P}_{11}=(0,0)$, $\\mathbf{P}_{21}=(2,0.2)$, $\\mathbf{P}_{31}=(4,0)$,\n  $\\mathbf{P}_{12}=(0.1,1)$, $\\mathbf{P}_{22}=(2.1,1.1)$, $\\mathbf{P}_{32}=(4.1,1)$,\n  $\\mathbf{P}_{13}=(0,2)$, $\\mathbf{P}_{23}=(2,2.1)$, $\\mathbf{P}_{33}=(4,2)$.\n- **Weights**: $w_{ij}=1$ for all $i,j$.\n- **Element of Interest**: The tensor-product knot span $[\\xi_{i},\\xi_{i+1}]\\times[\\eta_{j},\\eta_{j+1}] = [0.5,\\,1]\\times[0.3,\\,1]$. Using standard $0$-based knot indexing ($m+1=n+p+1=5$ knots, indexed $0$ to $4$), this corresponds to the element $[\\xi_2, \\xi_3] \\times [\\eta_2, \\eta_3]$.\n- **Quadrature Rule**: Two-point Gauss–Legendre on the parent square $[-1,1]\\times[-1,1]$.\n- **Quadrature Points/Weights**: $r,s \\in \\{-\\frac{1}{\\sqrt{3}},\\,+\\frac{1}{\\sqrt{3}}\\}$, with weights $w_{r}=1, w_{s}=1$.\n- **Specific Integration Point**: $(r,s)=\\left(\\frac{1}{\\sqrt{3}},\\,-\\frac{1}{\\sqrt{3}}\\right)$ in the parent domain.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, well-posed, and objective. It is a standard exercise in isogeometric analysis, a well-established discipline within computational solid mechanics. All data are provided, self-consistent, and sufficient for computing a unique solution. The language is precise, and the setup contains no logical contradictions or physically implausible conditions. The problem is therefore deemed **valid**.\n\n**Step 3: Solution**\nWe proceed with the calculation.\n\n**1. Mapping from Parent to Parametric Domain**\nThe affine map from a parent coordinate $\\hat{\\zeta} \\in [-1,1]$ to a parametric coordinate $\\zeta \\in [\\zeta_a, \\zeta_b]$ is given by\n$$ \\zeta(\\hat{\\zeta}) = \\frac{\\zeta_b - \\zeta_a}{2} \\hat{\\zeta} + \\frac{\\zeta_a + \\zeta_b}{2} $$\nFor the $\\xi$-direction, the element is $[0.5, 1]$. The map is:\n$$ \\xi(r) = \\frac{1 - 0.5}{2} r + \\frac{0.5 + 1}{2} = 0.25 r + 0.75 = \\frac{1}{4} r + \\frac{3}{4} $$\nFor the $\\eta$-direction, the element is $[0.3, 1]$. The map is:\n$$ \\eta(s) = \\frac{1 - 0.3}{2} s + \\frac{0.3 + 1}{2} = 0.35 s + 0.65 = \\frac{7}{20} s + \\frac{13}{20} $$\nAt the specified Gauss point $(r,s)=\\left(\\frac{1}{\\sqrt{3}},\\,-\\frac{1}{\\sqrt{3}}\\right)$, the parametric coordinates are:\n$$ \\xi = \\frac{1}{4}\\left(\\frac{1}{\\sqrt{3}}\\right) + \\frac{3}{4} = \\frac{1+3\\sqrt{3}}{4\\sqrt{3}} $$\n$$ \\eta = \\frac{7}{20}\\left(-\\frac{1}{\\sqrt{3}}\\right) + \\frac{13}{20} = \\frac{13\\sqrt{3}-7}{20\\sqrt{3}} $$\n\n**2. B-spline Basis Functions and Derivatives**\nFor a degree $p=1$ B-spline on a knot span $[\\xi_i, \\xi_{i+1}]$, the two non-zero basis functions are linear:\n$$ N_{i-1,1}(\\xi) = \\frac{\\xi_{i+1}-\\xi}{\\xi_{i+1}-\\xi_i}, \\qquad N_{i,1}(\\xi) = \\frac{\\xi-\\xi_i}{\\xi_{i+1}-\\xi_i} $$\nThe element of interest is $[\\xi_2, \\xi_3] \\times [\\eta_2, \\eta_3] = [0.5, 1] \\times [0.3, 1]$. With the problem's $1$-based indexing of basis functions, the non-zero functions on this element are $N_{2,1}(\\xi), N_{3,1}(\\xi)$ and $N_{2,1}(\\eta), N_{3,1}(\\eta)$.\n\nIn the $\\xi$-direction, on span $[\\xi_2, \\xi_3] = [0.5, 1]$:\n$$ N_{2,1}(\\xi) = \\frac{1-\\xi}{1-0.5} = 2(1-\\xi) \\implies \\frac{dN_{2,1}}{d\\xi} = -2 $$\n$$ N_{3,1}(\\xi) = \\frac{\\xi-0.5}{1-0.5} = 2(\\xi-0.5) \\implies \\frac{dN_{3,1}}{d\\xi} = 2 $$\n\nIn the $\\eta$-direction, on span $[\\eta_2, \\eta_3] = [0.3, 1]$:\n$$ N_{2,1}(\\eta) = \\frac{1-\\eta}{1-0.3} = \\frac{10}{7}(1-\\eta) \\implies \\frac{dN_{2,1}}{d\\eta} = -\\frac{10}{7} $$\n$$ N_{3,1}(\\eta) = \\frac{\\eta-0.3}{1-0.3} = \\frac{10}{7}(\\eta-0.3) \\implies \\frac{dN_{3,1}}{d\\eta} = \\frac{10}{7} $$\n\n**3. NURBS Basis Functions**\nThe NURBS basis functions $R_{ij}$ are defined as $R_{ij}(\\xi,\\eta) = \\frac{N_{i,p}(\\xi)N_{j,q}(\\eta)w_{ij}}{\\sum_{k,l} N_{k,p}(\\xi)N_{l,q}(\\eta)w_{kl}}$. Since all weights $w_{ij}=1$, the denominator, which is the sum of all weighted basis functions, becomes $\\sum_{k,l} N_{k,p}(\\xi)N_{l,q}(\\eta) = (\\sum_k N_{k,p}(\\xi))(\\sum_l N_{l,q}(\\eta)) = 1 \\cdot 1 = 1$ due to the partition of unity property of B-splines.\nTherefore, the NURBS formulation simplifies to a B-spline formulation: $R_{ij}(\\xi,\\eta) = N_{i,1}(\\xi)N_{j,1}(\\eta)$. The derivatives are also simplified, for example $\\frac{\\partial R_{ij}}{\\partial\\xi} = \\frac{dN_{i,1}}{d\\xi} N_{j,1}(\\eta)$.\n\n**4. Jacobian of the Geometric Map**\nThe geometric map is $\\mathbf{x}(\\xi,\\eta)=\\sum_{i=1}^{3}\\sum_{j=1}^{3} R_{ij}(\\xi,\\eta)\\,\\mathbf{P}_{ij}$. On the specified element, only control points $\\mathbf{P}_{22}, \\mathbf{P}_{23}, \\mathbf{P}_{32}, \\mathbf{P}_{33}$ are active. The Jacobian matrix is $\\mathbf{J} = \\frac{\\partial\\mathbf{x}}{\\partial(\\xi,\\eta)}$. Its columns are $\\frac{\\partial\\mathbf{x}}{\\partial\\xi}$ and $\\frac{\\partial\\mathbf{x}}{\\partial\\eta}$.\n$$ \\frac{\\partial\\mathbf{x}}{\\partial\\xi} = \\sum_{i=2,3}\\sum_{j=2,3} \\frac{dN_{i,1}}{d\\xi} N_{j,1}(\\eta) \\mathbf{P}_{ij} = \\frac{dN_{2,1}}{d\\xi} \\sum_{j=2,3} N_{j,1}(\\eta) \\mathbf{P}_{2j} + \\frac{dN_{3,1}}{d\\xi} \\sum_{j=2,3} N_{j,1}(\\eta) \\mathbf{P}_{3j} $$\nSince $\\sum_j N_{j,1}(\\eta) = 1$ (partition of unity), the expression simplifies. More directly, for a bilinear patch defined by four control points $\\mathbf{P}_{00}, \\mathbf{P}_{10}, \\mathbf{P}_{01}, \\mathbf{P}_{11}$ on a unit parent element, the tangent vectors are linear combinations of the edge vectors.\nHere, we can re-evaluate the specific derivatives. Because the knot spans are uniform within the patch definition (linear basis functions), the derivatives are constant.\n$$ \\frac{\\partial\\mathbf{x}}{\\partial\\xi} = \\frac{\\partial N_{2,1}}{\\partial\\xi} (N_{2,1}(\\eta) \\mathbf{P}_{22} + N_{3,1}(\\eta)\\mathbf{P}_{23}) + \\frac{\\partial N_{3,1}}{\\partial\\xi} (N_{2,1}(\\eta) \\mathbf{P}_{32} + N_{3,1}(\\eta)\\mathbf{P}_{33}) $$\n$$ = -2 (N_{2,1}(\\eta)\\mathbf{P}_{22} + N_{3,1}(\\eta)\\mathbf{P}_{23}) + 2 (N_{2,1}(\\eta)\\mathbf{P}_{32} + N_{3,1}(\\eta)\\mathbf{P}_{33}) = 2 (N_{2,1}(\\eta)(\\mathbf{P}_{32}-\\mathbf{P}_{22}) + N_{3,1}(\\eta)(\\mathbf{P}_{33}-\\mathbf{P}_{23})) $$\n$\\mathbf{P}_{32}-\\mathbf{P}_{22} = (4.1-2.1, 1-1.1) = (2, -0.1)$.\n$\\mathbf{P}_{33}-\\mathbf{P}_{23} = (4-2, 2-2.1) = (2, -0.1)$.\n$$ \\frac{\\partial\\mathbf{x}}{\\partial\\xi} = 2 (N_{2,1}(\\eta)(2, -0.1) + N_{3,1}(\\eta)(2, -0.1)) = 2 (N_{2,1}(\\eta)+N_{3,1}(\\eta))(2, -0.1) = 2(1)(2, -0.1) = (4,-0.2) $$\nSimilarly for the $\\eta$ direction:\n$$ \\frac{\\partial\\mathbf{x}}{\\partial\\eta} = N_{2,1}(\\xi)(\\frac{dN_{2,1}}{d\\eta}\\mathbf{P}_{22} + \\frac{dN_{3,1}}{d\\eta}\\mathbf{P}_{23}) + N_{3,1}(\\xi)(\\frac{dN_{2,1}}{d\\eta}\\mathbf{P}_{32} + \\frac{dN_{3,1}}{d\\eta}\\mathbf{P}_{33}) $$\n$\\mathbf{P}_{23}-\\mathbf{P}_{22} = (2-2.1, 2.1-1.1) = (-0.1, 1)$.\n$\\mathbf{P}_{33}-\\mathbf{P}_{32} = (4-4.1, 2-1) = (-0.1, 1)$.\nThe derivatives are $\\frac{dN_{2,1}}{d\\eta}=-\\frac{10}{7}, \\frac{dN_{3,1}}{d\\eta}=\\frac{10}{7}$.\n$$ \\frac{\\partial\\mathbf{x}}{\\partial\\eta} = \\frac{10}{7}[N_{2,1}(\\xi)(\\mathbf{P}_{23}-\\mathbf{P}_{22}) + N_{3,1}(\\xi)(\\mathbf{P}_{33}-\\mathbf{P}_{32})] = \\frac{10}{7}[N_{2,1}(\\xi)(-0.1, 1) + N_{3,1}(\\xi)(-0.1, 1)] $$\n$$ = \\frac{10}{7}(N_{2,1}(\\xi)+N_{3,1}(\\xi))(-0.1, 1) = \\frac{10}{7}(1)(-0.1, 1) = (-\\frac{1}{7}, \\frac{10}{7}) $$\nThe Jacobian matrix $\\mathbf{J}$ is constant over this element because the geometry is a bilinear patch:\n$$ \\mathbf{J} = \\begin{pmatrix} 4 & -\\frac{1}{7} \\\\ -0.2 & \\frac{10}{7} \\end{pmatrix} = \\begin{pmatrix} 4 & -\\frac{1}{7} \\\\ -\\frac{1}{5} & \\frac{10}{7} \\end{pmatrix} $$\nThe determinant of the Jacobian is:\n$$ \\det\\mathbf{J} = (4)\\left(\\frac{10}{7}\\right) - \\left(-\\frac{1}{7}\\right)\\left(-\\frac{1}{5}\\right) = \\frac{40}{7} - \\frac{1}{35} = \\frac{200-1}{35} = \\frac{199}{35} $$\n\n**5. Quadrature Weight Calculation**\nThe differential area element is transformed from parent to physical space as $d\\mathbf{x} = \\det\\mathbf{J} \\,d\\xi d\\eta$. We must also account for the map from the parent element $(r,s)$ to the parametric element $(\\xi,\\eta)$: $d\\xi d\\eta = \\det\\mathbf{J}_{\\text{param}} \\,dr ds$.\nThe Jacobian of the parent-to-parametric map is:\n$$ \\mathbf{J}_{\\text{param}} = \\begin{pmatrix} \\frac{\\partial\\xi}{\\partial r} & 0 \\\\ 0 & \\frac{\\partial\\eta}{\\partial s} \\end{pmatrix} = \\begin{pmatrix} \\frac{1-0.5}{2} & 0 \\\\ 0 & \\frac{1-0.3}{2} \\end{pmatrix} = \\begin{pmatrix} \\frac{1}{4} & 0 \\\\ 0 & \\frac{7}{20} \\end{pmatrix} $$\n$$ \\det\\mathbf{J}_{\\text{param}} = \\left(\\frac{1}{4}\\right)\\left(\\frac{7}{20}\\right) = \\frac{7}{80} $$\nThe total quadrature weight $W$ at a Gauss point is the product of the parent space weights and the total Jacobian determinant:\n$$ W = w_{r} w_{s} \\cdot \\det\\mathbf{J}_{\\text{param}} \\cdot \\det\\mathbf{J} $$\nGiven $w_{r}=1$ and $w_{s}=1$:\n$$ W = (1)(1) \\cdot \\left(\\frac{7}{80}\\right) \\cdot \\left(\\frac{199}{35}\\right) = \\frac{7 \\cdot 199}{80 \\cdot 35} = \\frac{199}{80 \\cdot 5} = \\frac{199}{400} $$\nThe units of the control points are meters, so the resulting quadrature weight, which represents an area element, is in square meters.", "answer": "$$\n\\boxed{\\frac{199}{400}}\n$$", "id": "2651381"}, {"introduction": "A key distinction of IGA lies in its basis functions, which are generally non-interpolatory except at the boundaries of an open knot vector. This property has profound implications for how constraints, such as Dirichlet boundary conditions, are applied. This problem challenges you to think critically about two powerful enforcement strategies: strong enforcement via control point elimination and weak enforcement using Nitsche’s method [@problem_id:2651372]. By analyzing the advantages and contexts for each, you will gain a deeper insight into the theoretical underpinnings and practical trade-offs of applying constraints in IGA.", "problem": "Consider a linear elastic bar whose centerline is described exactly by a Non-Uniform Rational B-Spline (NURBS) curve with parametric coordinate $\\xi \\in [0,1]$. The physical coordinate mapping is $x(\\xi)=\\sum_{i=1}^{N} R_i(\\xi) X_i$, where $R_i(\\xi)$ are the NURBS basis functions of degree $p$ built from an open knot vector and strictly positive weights, and $X_i$ are the control point coordinates. The axial displacement field is approximated by $u_h(\\xi)=\\sum_{i=1}^{N} R_i(\\xi) d_i$, with unknown control variables $d_i$. Assume a standard small-strain, linear, one-dimensional elastostatics model with Young’s modulus $E$, cross-sectional area $A$, body force $f(x)$, and boundary data $u=g$ to be applied either at the ends $\\xi=0$ and $\\xi=1$ or along an interior Dirichlet boundary at $\\xi=\\xi_0 \\in (0,1)$. Starting from the strong form $(EA\\,u'(x))' + f(x)=0$ and its weak form obtained by the principle of virtual work and integration by parts, analyze the consequences of the following two enforcement strategies: (i) control point elimination at open ends (where end basis functions are interpolatory), and (ii) weak imposition by Nitsche’s method along an interior Dirichlet boundary where the basis is not interpolatory. In particular, reason about exactness of the imposed data, symmetry and definiteness of the resulting linear system, conditioning, the need for additional unknowns, and the role of weights in the end-interpolatory property.\n\nSelect all statements that are correct.\n\nA. For an isogeometric discretization with an open knot vector on a NURBS curve, imposing Dirichlet data at both ends by control point elimination enforces the boundary values exactly at those ends, reduces the number of unknowns, and preserves the symmetry and typical conditioning of the stiffness matrix.\n\nB. Nitsche’s method for imposing Dirichlet data along an interior parametric location of the curve augments the bilinear form by symmetric consistency terms together with a stabilization term with coefficient $\\gamma$ that must scale like $c\\,EA/h$ (for some positive constant $c$ and a representative local size $h$) to ensure coercivity; it does not introduce additional unknowns.\n\nC. Control point elimination at the ends is equivalent to a penalty formulation with a very large penalty parameter, and therefore significantly deteriorates conditioning as the penalty increases.\n\nD. Nitsche’s method requires introducing Lagrange multipliers on the interior boundary, which increases the number of unknowns and makes the algebraic system indefinite.\n\nE. The end-interpolatory property of NURBS basis functions holds only if the weights associated to the end control points are unity; otherwise, control point elimination does not yield exact end values.\n\nF. Because NURBS basis functions are generally non-interpolatory away from open ends, one cannot in general enforce exact pointwise Dirichlet data at an interior parametric location by eliminating a single control point; a suitable projection or a weak enforcement such as Nitsche’s method is required to attain optimal convergence without overconstraining the system.", "solution": "The problem statement is analyzed and found to be valid. It describes a standard problem in one-dimensional isogeometric analysis for linear elastostatics and asks for a conceptual evaluation of two common methods for applying Dirichlet boundary conditions. The setup is scientifically sound, well-posed, and uses precise, objective terminology. We proceed to the solution.\n\nThe fundamental equation of one-dimensional elastostatics is given as $(EA u'(x))' + f(x) = 0$, where $u(x)$ is the axial displacement, $E$ is Young's modulus, $A$ is the cross-sectional area, and $f(x)$ is the distributed body force. The physical coordinate $x$ is parameterized by $\\xi \\in [0,1]$ via a NURBS mapping $x(\\xi) = \\sum_{i=1}^{N} R_i(\\xi) X_i$. The displacement field is approximated within the same NURBS space as $u_h(\\xi) = \\sum_{i=1}^{N} R_i(\\xi) d_i$, where $d_i$ are the unknown control variables. The NURBS basis functions are defined as $R_i(\\xi) = \\frac{N_i(\\xi) w_i}{W(\\xi)}$, with $N_i(\\xi)$ being the B-spline basis functions of degree $p$, $w_i > 0$ the weights, and $W(\\xi) = \\sum_{j=1}^{N} N_j(\\xi) w_j$ the weighting function.\n\nThe problem specifies an open knot vector. For a knot vector of the form $\\Xi = \\{\\underbrace{0, \\dots, 0}_{p+1}, \\xi_{p+2}, \\dots, \\xi_{m-p-1}, \\underbrace{1, \\dots, 1}_{p+1}\\}$, the B-spline basis functions are interpolatory at the ends of the parametric domain. Specifically, $N_1(0) = 1$ and $N_i(0) = 0$ for $i>1$. Similarly, $N_N(1) = 1$ and $N_i(1)=0$ for $i<N$. This property extends to the NURBS basis functions regardless of the weights. At $\\xi=0$, the weighting function is $W(0) = \\sum_{j=1}^{N} N_j(0) w_j = N_1(0) w_1 = w_1$. Thus, the first NURBS basis function is $R_1(0) = \\frac{N_1(0) w_1}{W(0)} = \\frac{1 \\cdot w_1}{w_1} = 1$. For any $i>1$, $R_i(0) = \\frac{N_i(0) w_i}{W(0)} = \\frac{0 \\cdot w_i}{w_1} = 0$. Consequently, the approximate displacement at the start of the domain is $u_h(0) = \\sum_{i=1}^{N} R_i(0) d_i = R_1(0) d_1 = d_1$. A similar argument shows $u_h(1) = d_N$. This is the end-interpolatory property. Away from the ends, for $\\xi \\in (0,1)$, the basis is generally not interpolatory.\n\nWe now evaluate each statement.\n\n**A. For an isogeometric discretization with an open knot vector on a NURBS curve, imposing Dirichlet data at both ends by control point elimination enforces the boundary values exactly at those ends, reduces the number of unknowns, and preserves the symmetry and typical conditioning of the stiffness matrix.**\n\nAs established above, for an open knot vector, $u_h(0) = d_1$ and $u_h(1) = d_N$. To enforce the Dirichlet conditions $u(0)=g_0$ and $u(1)=g_1$, one sets the control variables $d_1 = g_0$ and $d_N = g_1$. This directly enforces the condition on the discrete solution, so the boundary values are met exactly by the approximation $u_h$. The number of unknowns is reduced from $N$ to $N-2$, as $d_1$ and $d_N$ are now known. The standard procedure for this strong enforcement involves partitioning the matrix system and modifying the load vector, which preserves the symmetry and positive-definiteness of the remaining stiffness matrix. The conditioning of the reduced system is not pathologically affected and remains comparable to that of the original unconstrained system. This statement accurately describes the standard method of strong enforcement of Dirichlet boundary conditions at interpolatory nodes.\n\nVerdict: **Correct**.\n\n**B. Nitsche’s method for imposing Dirichlet data along an interior parametric location of the curve augments the bilinear form by symmetric consistency terms together with a stabilization term with coefficient $\\gamma$ that must scale like $c\\,EA/h$ (for some positive constant $c$ and a representative local size $h$) to ensure coercivity; it does not introduce additional unknowns.**\n\nNitsche's method is a weak enforcement technique. The standard weak form $a(u,v) = \\int EA u' v' dx$ is modified. For a constraint $u=g$ at an interior point $x_0$, the Nitsche's formulation adds terms to the weak form. A common symmetric formulation is: find $u_h$ such that for all $v_h$,\n$$a(u_h, v_h) - [EA u'_h v_h]_{x_0} - [EA v'_h u_h]_{x_0} + \\gamma [u_h v_h]_{x_0} = l(v_h) - [EA v'_h g]_{x_0} + \\gamma [g v_h]_{x_0}$$\nThe added terms on the left-hand side are: $-[EA u'_h v_h]_{x_0}$ (consistency), $-[EA v'_h u_h]_{x_0}$ (symmetrization), and $+\\gamma [u_h v_h]_{x_0}$ (stabilization). The phrasing \"symmetric consistency terms\" can be understood as referring to the pair of consistency and symmetry terms. The stabilization parameter $\\gamma$ must be sufficiently large to ensure coercivity of the resulting bilinear form. For a second-order elliptic operator like $(EA(\\cdot)')'$, analysis based on an inverse inequality shows that $\\gamma$ must scale with the problem parameters and the local mesh size $h$ as $\\gamma \\sim EA/h$. A key advantage of this method is that it operates on the original set of variables $\\{d_i\\}$ and does not introduce new unknowns.\n\nVerdict: **Correct**.\n\n**C. Control point elimination at the ends is equivalent to a penalty formulation with a very large penalty parameter, and therefore significantly deteriorates conditioning as the penalty increases.**\n\nThis statement is fundamentally incorrect. Control point elimination is a strong (or essential) enforcement method. It algebraically removes degrees of freedom from the system, resulting in a smaller system matrix. The penalty method is a weak enforcement technique that adds large diagonal entries to the stiffness matrix corresponding to the constrained degrees of freedom. The resulting matrix has a condition number that grows with the penalty parameter, leading to ill-conditioning. While the solution of the penalty method converges to the solution of the strongly enforced problem as the penalty parameter tends to infinity, the methods themselves are algebraically distinct and have opposing effects on matrix conditioning. Control point elimination is numerically stable and does not degrade conditioning in this manner.\n\nVerdict: **Incorrect**.\n\n**D. Nitsche’s method requires introducing Lagrange multipliers on the interior boundary, which increases the number of unknowns and makes the algebraic system indefinite.**\n\nThis statement incorrectly describes the Lagrange multiplier method and attributes its properties to Nitsche's method. It is the Lagrange multiplier method that introduces additional unknowns (the multipliers) to enforce constraints, leading to a larger system of equations. This system is of a saddle-point structure and is therefore indefinite. As explained in the analysis of option B, Nitsche's method is a penalty-like method that works with the primal variables only, does not increase the number of unknowns, and is formulated to yield a symmetric and positive-definite system matrix (given a sufficiently large stabilization parameter).\n\nVerdict: **Incorrect**.\n\n**E. The end-interpolatory property of NURBS basis functions holds only if the weights associated to the end control points are unity; otherwise, control point elimination does not yield exact end values.**\n\nThis statement is false. As demonstrated in the preliminary analysis, the end-interpolatory property of NURBS with an open knot vector is independent of the specific values of the weights, as long as they are strictly positive. The calculation for the first basis function at the start of the domain, $R_1(0) = \\frac{N_1(0) w_1}{\\sum_j N_j(0) w_j} = \\frac{1 \\cdot w_1}{w_1} = 1$, shows that the weight $w_1$ cancels out. Therefore, $u_h(0)=d_1$ for any positive weight $w_1$. The requirement that weights must be unity is only true if one wants the NURBS curve to become a B-spline curve, but it is not necessary for the end-interpolatory property itself.\n\nVerdict: **Incorrect**.\n\n**F. Because NURBS basis functions are generally non-interpolatory away from open ends, one cannot in general enforce exact pointwise Dirichlet data at an interior parametric location by eliminating a single control point; a suitable projection or a weak enforcement such as Nitsche’s method is required to attain optimal convergence without overconstraining the system.**\n\nThis statement accurately describes a central challenge and its solution in IGA. At an interior location $\\xi_0 \\in (0,1)$, multiple basis functions $R_i(\\xi_0)$ are non-zero. The constraint $u_h(\\xi_0)=g$ takes the form $\\sum_{i} R_i(\\xi_0)d_i = g$, which is a linear equation involving several control variables. Trying to enforce this by setting a single control variable $d_k$ to some value is incorrect and does not satisfy the constraint. This is because $R_k(\\xi_0)$ is generally not equal to $1$. Modifying the system to strongly enforce this multi-point constraint is possible but cumbersome and can destroy the desirable structure of the matrix. To avoid such issues and to maintain the optimal convergence properties of the method, one must use a more sophisticated approach. Weak enforcement methods, such as Nitsche's method or penalty methods, and projection-based techniques are the standard and correct procedures for applying such constraints on a non-interpolatory basis. These methods are designed to impose the constraint in a variationally consistent manner that does not lock the solution or degrade convergence.\n\nVerdict: **Correct**.", "answer": "$$\\boxed{ABF}$$", "id": "2651372"}]}