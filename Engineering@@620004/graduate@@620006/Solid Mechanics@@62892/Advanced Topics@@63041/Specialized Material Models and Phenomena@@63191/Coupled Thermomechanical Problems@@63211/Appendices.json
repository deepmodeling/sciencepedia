{"hands_on_practices": [{"introduction": "Discerning the dominant physics at play is the first step in modeling any coupled phenomenon. This exercise hones your intuition by using dimensional analysis to compare the characteristic time scales of mechanical loading and heat diffusion, leading to a criterion for when a process can be considered adiabatic. Understanding this transition from isothermal to adiabatic behavior is crucial for simplifying complex models and correctly interpreting the results of dynamic simulations. [@problem_id:2625916]", "problem": "A homogeneous, isotropic, linearly thermoelastic solid of characteristic length $L$ is subjected to a spatially uniform, time-harmonic uniaxial strain at angular frequency $\\omega$. The material properties are thermal conductivity $k$, mass density $\\rho$, and specific heat at constant configuration $c$. Assume small perturbations about a uniform reference temperature so that linearization applies.\n\nStart from the local conservation of energy written for a thermoelastic solid with Fourier heat conduction: the leading-order thermal balance between transient heat storage and conduction is governed by an equation of the form $\\rho c\\,\\dot{T} = k \\nabla^{2} T + \\text{(thermomechanical source)}$. The adiabatic assumption is defined here as the regime in which heat conduction is negligible over one mechanical oscillation, so that the local temperature change induced by the mechanical process does not significantly diffuse during that time.\n\nUsing only dimensional analysis and characteristic scales based on:\n- the mechanical time scale $t_{\\text{mech}} = 1/\\omega$,\n- the thermal diffusion time scale $t_{\\text{th}} = L^{2}\\rho c/k$,\n\nderive a criterion for the validity of the adiabatic assumption during dynamic loading, and define the critical angular frequency $\\omega_{c}$ that demarcates the boundary between adiabatic and non-adiabatic (diffusive) behavior by the condition $t_{\\text{mech}} = t_{\\text{th}}$.\n\nYour final answer must be the closed-form analytic expression for the critical angular frequency $\\omega_{c}$. Express the final answer in radians per second. Do not include units inside your final boxed expression.", "solution": "The goal is to find the critical angular frequency $\\omega_c$ where the behavior of a thermoelastic solid transitions from diffusive to adiabatic. This is achieved by comparing the characteristic time scales for the mechanical process and for thermal diffusion.\n\nThe mechanical time scale, $t_{\\text{mech}}$, represents the characteristic duration of one mechanical cycle. It is given as the inverse of the angular frequency:\n$$t_{\\text{mech}} = \\frac{1}{\\omega}$$\nThe thermal diffusion time scale, $t_{\\text{th}}$, represents the characteristic time required for heat to diffuse over the solid's characteristic length $L$. It is given by:\n$$t_{\\text{th}} = \\frac{L^{2}\\rho c}{k}$$\nThis expression is derived from a dimensional analysis of the transient heat conduction equation, where the quantity $k/(\\rho c)$ is the thermal diffusivity.\n\nThe adiabatic assumption is valid when the mechanical process is much faster than the thermal diffusion process. This means that heat generated by mechanical action does not have time to diffuse away during a single cycle. This condition is met when the thermal diffusion time is much longer than the mechanical time scale:\n$$t_{\\text{th}} \\gg t_{\\text{mech}} \\implies \\frac{L^{2}\\rho c}{k} \\gg \\frac{1}{\\omega}$$\nThis corresponds to high-frequency oscillations ($\\omega \\gg k/(L^2\\rho c)$).\n\nConversely, the non-adiabatic (or isothermal) regime occurs when the mechanical process is slow enough for significant heat diffusion to occur, allowing the system to remain near thermal equilibrium. This happens when:\n$$t_{\\text{th}} \\ll t_{\\text{mech}} \\implies \\frac{L^{2}\\rho c}{k} \\ll \\frac{1}{\\omega}$$\nThis corresponds to low-frequency oscillations ($\\omega \\ll k/(L^2\\rho c)$).\n\nThe boundary between these two regimes is marked by the critical angular frequency $\\omega_{c}$, which is defined by the condition where the two characteristic time scales are equal:\n$$t_{\\text{mech}} = t_{\\text{th}}$$\nSubstituting the expressions for the time scales at the critical frequency $\\omega = \\omega_c$:\n$$\\frac{1}{\\omega_{c}} = \\frac{L^{2}\\rho c}{k}$$\nSolving for the critical angular frequency $\\omega_{c}$ gives:\n$$\\omega_{c} = \\frac{k}{L^{2}\\rho c}$$\nThis expression represents the angular frequency at which the characteristic time of mechanical loading equals the characteristic time of thermal diffusion. It is a fundamental parameter that governs the transition from isothermal to adiabatic behavior in dynamic thermoelasticity. The units are inverse seconds ($\\text{s}^{-1}$), which is correct for angular frequency.", "answer": "$$\n\\boxed{\\frac{k}{L^{2} \\rho c}}\n$$", "id": "2625916"}, {"introduction": "With a grasp of the fundamental regimes, we now apply the governing principles to a classic boundary value problem. This practice guides you through the analytical solution for a heated, transversely isotropic rod under axial constraint, starting from first principles of continuum mechanics. Solving this problem reinforces the interplay between thermal expansion, mechanical constraints, and material anisotropy, demonstrating how thermal loads generate internal stresses in a statically determinate system. [@problem_id:2625954]", "problem": "A homogeneous, solid circular cylindrical rod of radius $R$ and length $L$ is made of a linearly thermoelastic, transversely isotropic solid whose axis of material symmetry coincides with the cylinder axis, taken as the $z$-axis. The material is characterized by Young’s modulus along the axis $E_{L}$, Young’s modulus in the transverse plane $E_{T}$, Poisson ratios $\\nu_{TL}$ (transverse strain induced by axial stress) and $\\nu_{TT}$ (transverse strain in one in-plane direction induced by stress in the orthogonal in-plane direction), and thermal expansion coefficients $\\alpha_{L}$ (axial) and $\\alpha_{T}$ (transverse). The reciprocity condition $\\nu_{TL}/E_{L}=\\nu_{LT}/E_{T}$ holds, where $\\nu_{LT}$ denotes the axial strain induced by transverse stress. The rod undergoes a uniform temperature increase $\\Delta T$ from a stress-free reference state. There are no body forces.\n\nThe lateral cylindrical surface at $r=R$ is traction-free. The rod is axially constrained so that end supports enforce zero macroscopic axial extension. The rod is sufficiently slender that end effects can be neglected, and the interior stress and strain fields may be taken as uniform in the axial direction and axisymmetric in the cross-section. Assume small strains, small rotations, and linear thermoelasticity.\n\nStarting only from the balance of linear momentum, kinematic relations for small strain, and the definition of linear anisotropic thermoelasticity for a transversely isotropic solid in compliance form, determine the axial stress $\\sigma_{z}$ in the interior and the radial stress $\\sigma_{r}(r)$ in the cross-section. Express your final result as an analytic expression in terms of the given material constants and the temperature rise. Report the axial and radial stresses as a two-entry row matrix $\\big[\\sigma_{z}\\ \\sigma_{r}\\big]$. Express stresses in Pascals in the International System of Units (SI). If any simplifications eliminate dependence on some of the given constants, reflect that in your final expression. The final answer must be a single analytic expression; do not provide an inequality or an equation.", "solution": "The problem asks for the stress state in a transversely isotropic rod subjected to a uniform temperature change $\\Delta T$, with axially constrained ends and a traction-free lateral surface. The solution proceeds by applying the principles of equilibrium, kinematic compatibility, and the given constitutive law under the problem's simplifying assumptions.\n\n**1. Simplification of Governing Equations:**\nThe assumptions of axisymmetry and axial uniformity of fields mean that all stress and strain components are functions of the radial coordinate $r$ only (or are constant). In cylindrical coordinates, the equilibrium equations in the absence of body forces reduce to a single non-trivial equation in the radial direction:\n$$ \\frac{d \\sigma_{rr}}{dr} + \\frac{\\sigma_{rr} - \\sigma_{\\theta\\theta}}{r} = 0 $$\nThe problem's symmetry and uniformity also imply that all shear stresses are zero.\n\n**2. Determination of Transverse Stresses ($\\sigma_{rr}, \\sigma_{\\theta\\theta}$):**\nThe general solution to the radial equilibrium equation for an axisymmetric body is the Lamé solution:\n$$ \\sigma_{rr}(r) = C_1 + \\frac{C_2}{r^2} $$\n$$ \\sigma_{\\theta\\theta}(r) = C_1 - \\frac{C_2}{r^2} $$\nwhere $C_1$ and $C_2$ are integration constants. For a solid cylinder, the stresses must remain finite at the center ($r=0$), which requires $C_2=0$. The boundary condition on the lateral surface ($r=R$) is that it is traction-free, meaning $\\sigma_{rr}(R) = 0$. This condition requires $C_1=0$. Therefore, we conclude that both transverse stresses are zero throughout the rod:\n$$ \\sigma_{rr}(r) = 0 \\quad \\text{and} \\quad \\sigma_{\\theta\\theta}(r) = 0 $$\n\n**3. Determination of Axial Stress ($\\sigma_{zz}$):**\nThe rod is axially constrained to have zero macroscopic extension. Since the problem is uniform along the length, this implies that the axial strain $\\epsilon_{zz}$ is zero everywhere. The constitutive law for the axial strain is given as:\n$$ \\epsilon_{zz} = \\frac{1}{E_L}\\sigma_{zz} - \\frac{\\nu_{TL}}{E_L}(\\sigma_{rr} + \\sigma_{\\theta\\theta}) + \\alpha_L \\Delta T $$\nSubstituting the known values $\\epsilon_{zz}=0$, $\\sigma_{rr}=0$, and $\\sigma_{\\theta\\theta}=0$ into this equation gives:\n$$ 0 = \\frac{1}{E_L}\\sigma_{zz} - \\frac{\\nu_{TL}}{E_L}(0 + 0) + \\alpha_L \\Delta T $$\nSolving for the axial stress $\\sigma_{zz}$ yields:\n$$ \\sigma_{zz} = -E_L \\alpha_L \\Delta T $$\nThis stress is uniform throughout the rod.\n\n**4. Final Result:**\nThe axial stress is $\\sigma_z = -E_L \\alpha_L \\Delta T$ and the radial stress $\\sigma_r(r)$ is 0. The transverse material properties ($E_T$, $\\nu_{TL}$, $\\nu_{TT}$, $\\alpha_T$) do not influence the stress state because the rod is free to deform in the transverse directions, unconstrained by any boundary conditions. The problem reduces to a simple one-dimensional stress state.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n-E_{L} \\alpha_{L} \\Delta T & 0\n\\end{pmatrix}\n}\n$$", "id": "2625954"}, {"introduction": "While analytical solutions provide invaluable insight, most real-world engineering problems demand numerical methods. This comprehensive exercise challenges you to translate the continuum-level theory of thermoelasticity into a working computational tool using the finite element method. By deriving and implementing the fully coupled residual and Jacobian for a monolithic solver, you will gain hands-on experience with the computational backbone of modern thermomechanical analysis. [@problem_id:2625915]", "problem": "You are asked to formulate and implement a monolithic time discretization and spatial discretization for a transient, small-strain, one-dimensional thermoelastic bar. The task is to derive, program, and verify the fully coupled discrete residual vector and its Jacobian matrix under the backward Euler time integration scheme, solved in a monolithic (fully coupled) manner for displacement and temperature fields.\n\nStart from the following fundamental base:\n- Balance of linear momentum (quasi-static): the divergence of stress plus body force is zero. In one dimension, this is expressed as $\\,\\partial_x \\sigma + b = 0\\,$.\n- Balance of energy (first law of thermodynamics) with Fourier heat conduction and thermoelastic coupling: the rate of change of internal energy equals the conduction power and heat sources. In one dimension, with a reversible thermoelastic constitutive choice consistent with the Clausius-Duhem inequality, this can be posed as $\\,\\rho c \\,\\dot{T} + \\mathcal{B}\\,\\dot{\\varepsilon} - \\partial_x\\!\\left(k\\,\\partial_x T\\right) - r = 0\\,$, where $\\,\\mathcal{B}\\,$ is the energetic thermoelastic coupling coefficient implied by your constitutive ansatz (to be made explicit in your derivation).\n- Kinematics for small strain: in one dimension $\\,\\varepsilon = \\partial_x u\\,$.\n- Linear thermoelastic constitutive response derived from a free energy density assumed quadratic in strain and temperature increment about a reference temperature. Ensure that your mechanical constitutive law and your coupling term in the energy equation are thermodynamically conjugate (i.e., they are derived from a single common free energy, guaranteeing Maxwell symmetry at the continuous level).\n\nYour spatial discretization must use standard two-node linear finite elements on a uniform mesh of a bar of length $\\,L\\,$ and constant cross-sectional area $\\,A\\,$. Use isoparametric shape functions $\\,N_1(x)\\,$ and $\\,N_2(x)\\,$ on each element, with $\\,\\partial_x N_a\\,$ constant within an element of length $\\,h\\,$. All element-level integrals must be evaluated exactly (you may use the fact that the relevant integrands are at most linear in $\\,x\\,$ for the chosen elements).\n\nYour time discretization must be backward Euler over a time step of size $\\,\\Delta t\\,$ from time level $\\,n\\,$ to $\\,n+1\\,$, applied monolithically to the coupled system. Denote nodal displacement and temperature vectors at time level $\\,n\\,$ and $\\,n+1\\,$ by $\\,\\mathbf{u}^n\\,$, $\\,\\mathbf{u}^{n+1}\\,$, $\\,\\mathbf{T}^n\\,$, and $\\,\\mathbf{T}^{n+1}\\,$. Adopt quasi-static mechanics (no inertia) and include the consistent thermoelastic coupling term in the energy balance.\n\nYour tasks are:\n1) Derive, from the stated fundamental base, a thermodynamically consistent one-dimensional linear thermoelastic free energy density $\\,\\psi(\\varepsilon, T)\\,$ about a reference temperature $\\,T_0\\,$ that leads to a mechanically linear constitutive law $\\,\\sigma(\\varepsilon, T)\\,$ and an energy equation with a coupling term $\\,\\mathcal{B}\\,\\dot{\\varepsilon}\\,$. Clearly state $\\,\\sigma(\\varepsilon, T)\\,$ and the coupling coefficient $\\,\\mathcal{B}\\,$ implied by your choice.\n2) Write the finite element weak form for the monolithic problem over a single time step and derive the assembled global discrete residual vector $\\,\\mathbf{R}(\\mathbf{y})\\,$ and its Jacobian matrix $\\,\\mathbf{J} = \\partial \\mathbf{R} / \\partial \\mathbf{y}\\,$ with respect to the stacked unknown vector $\\,\\mathbf{y} = \\begin{bmatrix}\\mathbf{u}^{n+1}\\\\ \\mathbf{T}^{n+1}\\end{bmatrix}\\,$. Your expressions must be in terms of standard element matrices and vectors that can be assembled additively. Enforce homogeneous mechanical body force $\\,b=0\\,$, heat source $\\,r=0\\,$, and insulating boundaries unless Dirichlet data are prescribed. Use essential (Dirichlet) boundary conditions on the displacement and temperature as specified in the test suite below.\n3) Implement a program that assembles the global residual and Jacobian for the following test cases, applies Dirichlet boundary conditions by elimination (i.e., form the reduced residual and Jacobian for the free degrees of freedom), evaluates the residual at a given trial $(\\mathbf{u}^{n+1}, \\mathbf{T}^{n+1})$ state, and numerically verifies the Jacobian by finite differences on the reduced system. For each test case, compute:\n   - The Euclidean norm (square root of sum of squares) of the reduced residual vector $\\,\\lVert \\mathbf{R}_\\text{red} \\rVert_2\\,$.\n   - The Frobenius norm of the difference between the analytical reduced Jacobian and the finite-difference approximation, $\\,\\lVert \\mathbf{J}_\\text{red} - \\mathbf{J}_\\text{FD} \\rVert_F\\,$, using a forward-difference step size of $\\,h = 10^{-8}\\,$ applied componentwise to the reduced unknown vector.\n   In one of the test cases, you must also report the Frobenius norm of the off-diagonal coupling blocks of the reduced Jacobian, $\\,\\lVert \\mathbf{J}_{uT} \\rVert_F\\,$ and $\\,\\lVert \\mathbf{J}_{Tu} \\rVert_F\\,$, and return their combined Euclidean norm $\\,\\sqrt{\\lVert \\mathbf{J}_{uT} \\rVert_F^2 + \\lVert \\mathbf{J}_{Tu} \\rVert_F^2}\\,$.\n\nUse the following test suite, each stated in the International System of Units (SI). All physical parameters are constants in space and time within each test case. The bar has uniform mesh and constant cross-section. The initial conditions at time $\\,n\\,$ are $\\,\\mathbf{u}^n = \\mathbf{0}\\,$ and $\\,\\mathbf{T}^n = T_0 \\,\\mathbf{1}\\,$. The trial state at time $\\,n+1\\,$ is $\\,\\mathbf{u}^{n+1} = \\mathbf{0}\\,$ and $\\,\\mathbf{T}^{n+1}\\,$ equal to the linear interpolation between the prescribed end temperatures. For all cases, impose displacement Dirichlet data $\\,u(0) = 0\\,\\mathrm{m}\\,$ and $\\,u(L) = 0\\,\\mathrm{m}\\,$ and temperature Dirichlet data $\\,T(0) = T_L\\,\\mathrm{K}\\,$ and $\\,T(L) = T_R\\,\\mathrm{K}\\,$.\n\n- Test case A (happy path): $\\,L = 1\\,\\mathrm{m}\\,$, $\\,A = 1\\,\\mathrm{m}^2\\,$, $\\,N = 3\\,$ nodes, $\\,E = 210\\times 10^9\\,\\mathrm{Pa}\\,$, $\\,\\alpha = 1.2\\times 10^{-5}\\,\\mathrm{K}^{-1}\\,$, $\\,\\rho = 7800\\,\\mathrm{kg/m^3}\\,$, $\\,c = 500\\,\\mathrm{J/(kg\\cdot K)}\\,$, $\\,k = 45\\,\\mathrm{W/(m\\cdot K)}\\,$, $\\,T_0 = 293\\,\\mathrm{K}\\,$, $\\,\\Delta t = 0.25\\,\\mathrm{s}\\,$, $\\,T_L = 300\\,\\mathrm{K}\\,$, $\\,T_R = 280\\,\\mathrm{K}\\,$.\n- Test case B (decoupling edge case): Same as Test case A but with $\\,\\alpha = 0\\,$. For this case, in addition to the two quantities above, you must also compute and return the combined Euclidean norm $\\,\\sqrt{\\lVert \\mathbf{J}_{uT} \\rVert_F^2 + \\lVert \\mathbf{J}_{Tu} \\rVert_F^2}\\,$ of the off-diagonal coupling blocks of the reduced Jacobian.\n- Test case C (conduction-limited and parameter variation): $\\,L = 1\\,\\mathrm{m}\\,$, $\\,A = 0.01\\,\\mathrm{m}^2\\,$, $\\,N = 4\\,$ nodes, $\\,E = 70\\times 10^9\\,\\mathrm{Pa}\\,$, $\\,\\alpha = 2.0\\times 10^{-5}\\,\\mathrm{K}^{-1}\\,$, $\\,\\rho = 2700\\,\\mathrm{kg/m^3}\\,$, $\\,c = 900\\,\\mathrm{J/(kg\\cdot K)}\\,$, $\\,k = 10^{-6}\\,\\mathrm{W/(m\\cdot K)}\\,$, $\\,T_0 = 300\\,\\mathrm{K}\\,$, $\\,\\Delta t = 10\\,\\mathrm{s}\\,$, $\\,T_L = 400\\,\\mathrm{K}\\,$, $\\,T_R = 350\\,\\mathrm{K}\\,$.\n\nAngle units are not involved. The numerical answers should be reported as real numbers without unit strings.\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the following order: for Test case A, first the residual norm and then the Jacobian difference norm; for Test case B, first the residual norm, then the Jacobian difference norm, then the combined off-diagonal norm; for Test case C, first the residual norm and then the Jacobian difference norm. For example, the output format must be exactly of the form $\\,\\left[\\text{A\\_res},\\text{A\\_jac},\\text{B\\_res},\\text{B\\_jac},\\text{B\\_off},\\text{C\\_res},\\text{C\\_jac}\\right]\\,$, where each placeholder is a floating-point number as defined above.", "solution": "The problem is valid. It constitutes a standard, well-posed problem in computational solid mechanics, specifically in the area of coupled thermoelasticity. All necessary data, boundary conditions, and material properties are provided, and the tasks are clearly defined and scientifically grounded. We shall proceed with a full derivation and solution.\n\nThe solution process involves four primary stages:\n1.  Derivation of thermodynamically consistent constitutive relations from a Helmholtz free energy potential.\n2.  Formulation of the weak form of the coupled governing partial differential equations.\n3.  Discretization of the weak form in space using the finite element method (FEM) with linear elements and in time using the backward Euler scheme.\n4.  Derivation of the discrete monolithic residual vector and its corresponding Jacobian matrix, which are required for a Newton-Raphson solution procedure.\n\n### Part 1: Thermodynamically Consistent Constitutive Model\n\nWe begin by postulating a Helmholtz free energy density $\\psi$ (per unit volume) that is quadratic in its state variables, the small strain $\\varepsilon$ and the temperature deviation from a reference temperature $T_0$, $\\Delta T = T - T_0$. A standard choice for linear thermoelasticity is:\n$$ \\psi(\\varepsilon, T) = \\psi_0 - s_0(T - T_0) + \\frac{1}{2}E\\varepsilon^2 - E\\alpha\\varepsilon(T-T_0) - \\frac{1}{2}\\frac{\\rho c}{T_0}(T-T_0)^2 $$\nwhere $E$ is the Young's modulus, $\\alpha$ is the coefficient of thermal expansion, $\\rho$ is the mass density, $c$ is the specific heat capacity at constant strain, and $\\psi_0, s_0$ are the free energy and entropy at the reference state $(\\varepsilon=0, T=T_0)$.\n\nThe constitutive relations for stress $\\sigma$ and entropy density $s$ are derived as thermodynamic conjugates to strain and temperature:\n$$ \\sigma = \\frac{\\partial \\psi}{\\partial \\varepsilon} \\quad , \\quad s = -\\frac{\\partial \\psi}{\\partial T} $$\nApplying these definitions to our chosen $\\psi$:\n$$ \\sigma(\\varepsilon, T) = E\\varepsilon - E\\alpha(T - T_0) = E(\\varepsilon - \\alpha(T-T_0)) $$\nThis is the Duhamel-Neumann form of the linear thermoelastic constitutive law.\n$$ s(\\varepsilon, T) = s_0 + E\\alpha\\varepsilon + \\frac{\\rho c}{T_0}(T-T_0) $$\nThe first law of thermodynamics, combined with the entropy balance $T\\dot{s} = -\\partial_x q + r$ (where $q$ is heat flux and $r$ is a heat source), gives the energy equation. By linearizing the term $T\\dot{s}$ about the reference temperature, $T\\dot{s} \\approx T_0\\dot{s}$, we obtain:\n$$ T_0 \\dot{s} = T_0 \\left( E\\alpha\\dot{\\varepsilon} + \\frac{\\rho c}{T_0}\\dot{T} \\right) = \\rho c \\dot{T} + T_0 E \\alpha \\dot{\\varepsilon} $$\nUsing Fourier's law for heat conduction, $q = -k\\,\\partial_x T$, the energy balance equation becomes:\n$$ \\rho c \\dot{T} + T_0 E \\alpha \\dot{\\varepsilon} - \\partial_x(k\\,\\partial_x T) - r = 0 $$\nComparing this to the problem statement's form, $\\rho c \\dot{T} + \\mathcal{B}\\dot{\\varepsilon} - \\partial_x(k\\,\\partial_x T) - r = 0$, we identify the thermodynamically consistent coupling coefficient as:\n$$ \\mathcal{B} = T_0 E \\alpha $$\n\n### Part 2 & 3: Weak Form and Discretization\n\nThe strong form of the coupled system in one dimension for a bar of cross-section $A$, with zero body force ($b=0$) and zero heat source ($r=0$), is:\n1.  **Momentum Balance:** $\\partial_x \\sigma = 0 \\quad \\forall x \\in (0, L)$\n2.  **Energy Balance:** $\\rho c \\dot{T} + T_0 E \\alpha \\dot{\\varepsilon} - \\partial_x(k\\,\\partial_x T) = 0 \\quad \\forall x \\in (0, L)$\n\nWe introduce test functions $w_u$ and $w_T$ for the respective equations and integrate over the domain, applying integration by parts to reduce the order of spatial derivatives. This yields the weak form:\n$$ \\int_0^L (\\partial_x w_u) \\sigma A \\, dx = \\left[ w_u \\sigma A \\right]_0^L $$\n$$ \\int_0^L w_T(\\rho c \\dot{T} + T_0 E \\alpha \\dot{\\varepsilon}) A \\, dx + \\int_0^L (\\partial_x w_T) k (\\partial_x T) A \\, dx = \\left[ -w_T q A \\right]_0^L $$\nThe boundary terms are satisfied by essential (Dirichlet) boundary conditions or correspond to natural boundary conditions (traction and heat flux).\n\nWe discretize in space using two-node linear finite elements. The displacement $u$ and temperature $T$ fields within an element $e$ are interpolated from nodal values $\\mathbf{u}^e$ and $\\mathbf{T}^e$ using shape functions $\\mathbf{N}(x)$:\n$$ u(x) = \\mathbf{N}(x) \\mathbf{u}^e \\quad , \\quad T(x) = \\mathbf{N}(x) \\mathbf{T}^e $$\nThe strain is $\\varepsilon = \\partial_x u = (\\partial_x \\mathbf{N}) \\mathbf{u}^e = \\mathbf{B}^e \\mathbf{u}^e$. For a linear element of length $h$, $\\mathbf{B}^e = \\frac{1}{h}[-1, 1]$.\n\nFor time discretization, we apply the backward Euler scheme. Time derivatives are approximated at time $t_{n+1}$ as $\\dot{f} \\approx (f^{n+1} - f^n)/\\Delta t$.\nThe fully discrete system of equations for the unknown state $(\\mathbf{u}^{n+1}, \\mathbf{T}^{n+1})$ is obtained by substituting the FEM approximations into the weak form, evaluated at time $t_{n+1}$.\n\n### Part 4: Discrete Residual and Jacobian\n\nThe monolithic system is solved for the stacked vector of unknowns $\\mathbf{y}^{n+1} = [\\mathbf{u}^{n+1}, \\mathbf{T}^{n+1}]^T$. We formulate the residual vector $\\mathbf{R}(\\mathbf{y}^{n+1})$, which must be zero for a solution. The global residual is assembled from element-level contributions.\n\n**Element-level contributions**: For an element $e$ with nodes $(1, 2)$, the residuals and matrices are:\n-   **Mechanical Residual** $\\mathbf{R}_u^e$: Comes from discretizing $\\int (\\partial_x w_u) [E(\\partial_x u - \\alpha(T-T_0))] A dx = 0$.\n    The contribution to the global residual from this element is $\\mathbf{R}_u^e = \\mathbf{K}_{uu}^e \\mathbf{u}^{n+1, e} + \\mathbf{K}_{uT}^e \\mathbf{T}^{n+1, e} + \\mathbf{f}_{u,th}^e$, where:\n    - $\\mathbf{K}_{uu}^e = \\frac{AE}{h}\\begin{bmatrix}1 & -1 \\\\ -1 & 1\\end{bmatrix}$ (element stiffness matrix).\n    - $\\mathbf{K}_{uT}^e = -\\frac{AE\\alpha}{2}\\begin{bmatrix}-1 & -1 \\\\ 1 & 1\\end{bmatrix}$ (mechanical-thermal coupling).\n    - $\\mathbf{f}_{u,th}^e = AE\\alpha T_0\\begin{bmatrix}-1\\\\1\\end{bmatrix}$ (constant thermal force vector).\n-   **Thermal Residual** $\\mathbf{R}_T^e$: Comes from discretizing $\\int w_T(\\rho c \\dot{T} + T_0 E \\alpha \\dot{\\varepsilon}) A dx + \\int (\\partial_x w_T) k (\\partial_x T) A dx = 0$.\n    The contribution is $\\mathbf{R}_T^e = \\left(\\frac{1}{\\Delta t}\\mathbf{C}_{TT}^e + \\mathbf{K}_{TT}^e\\right)\\mathbf{T}^{n+1, e} + \\frac{1}{\\Delta t}\\mathbf{K}_{Tu}^e \\mathbf{u}^{n+1, e} - \\frac{1}{\\Delta t}\\left(\\mathbf{C}_{TT}^e\\mathbf{T}^{n, e} + \\mathbf{K}_{Tu}^e\\mathbf{u}^{n, e}\\right)$, where:\n    - $\\mathbf{C}_{TT}^e = \\frac{A\\rho c h}{6}\\begin{bmatrix}2 & 1 \\\\ 1 & 2\\end{bmatrix}$ (heat capacity matrix).\n    - $\\mathbf{K}_{TT}^e = \\frac{Ak}{h}\\begin{bmatrix}1 & -1 \\\\ -1 & 1\\end{bmatrix}$ (thermal conductivity matrix).\n    - $\\mathbf{K}_{Tu}^e = \\frac{AT_0E\\alpha}{2}\\begin{bmatrix}-1 & 1 \\\\ -1 & 1\\end{bmatrix}$ (thermal-mechanical coupling).\n\nThe **Jacobian matrix**, $\\mathbf{J} = \\partial \\mathbf{R}/\\partial \\mathbf{y}^{n+1}$, is a $2 \\times 2$ block matrix assembled from element Jacobians:\n$$ \\mathbf{J} = \\begin{bmatrix} \\mathbf{J}_{uu} & \\mathbf{J}_{uT} \\\\ \\mathbf{J}_{Tu} & \\mathbf{J}_{TT} \\end{bmatrix} $$\nThe global block matrices are assembled from these element-level matrices:\n-   $\\mathbf{J}_{uu}^e = \\frac{\\partial \\mathbf{R}_u^e}{\\partial \\mathbf{u}^{n+1, e}} = \\mathbf{K}_{uu}^e$\n-   $\\mathbf{J}_{uT}^e = \\frac{\\partial \\mathbf{R}_u^e}{\\partial \\mathbf{T}^{n+1, e}} = \\mathbf{K}_{uT}^e$\n-   $\\mathbf{J}_{Tu}^e = \\frac{\\partial \\mathbf{R}_T^e}{\\partial \\mathbf{u}^{n+1, e}} = \\frac{1}{\\Delta t}\\mathbf{K}_{Tu}^e$\n-   $\\mathbf{J}_{TT}^e = \\frac{\\partial \\mathbf{R}_T^e}{\\partial \\mathbf{T}^{n+1, e}} = \\frac{1}{\\Delta t}\\mathbf{C}_{TT}^e + \\mathbf{K}_{TT}^e$\n\nNote the physical interpretation of the coupling matrices: $\\mathbf{K}_{uT}$ represents the generation of mechanical stress/force due to a temperature field, while $\\mathbf{K}_{Tu}$ represents the generation of heat due to the rate of mechanical deformation. The Jacobian is generally non-symmetric.\n\nThe implementation will perform these steps: assemble the global residual $\\mathbf{R}$ and Jacobian $\\mathbf{J}$ from element contributions for each test case, apply Dirichlet boundary conditions by partitioning the system into free and fixed degrees of freedom, and compute the required norms on the resulting reduced system.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function to run test cases for the coupled thermoelastic problem.\n    \"\"\"\n\n    test_cases = [\n        # Test Case A (happy path)\n        {\n            'L': 1.0, 'A': 1.0, 'N_nodes': 3, 'E': 210e9, 'alpha': 1.2e-5,\n            'rho': 7800.0, 'c': 500.0, 'k': 45.0, 'T0': 293.0, 'dt': 0.25,\n            'TL': 300.0, 'TR': 280.0, 'case_id': 'A'\n        },\n        # Test Case B (decoupling edge case)\n        {\n            'L': 1.0, 'A': 1.0, 'N_nodes': 3, 'E': 210e9, 'alpha': 0.0,\n            'rho': 7800.0, 'c': 500.0, 'k': 45.0, 'T0': 293.0, 'dt': 0.25,\n            'TL': 300.0, 'TR': 280.0, 'case_id': 'B'\n        },\n        # Test Case C (conduction-limited and parameter variation)\n        {\n            'L': 1.0, 'A': 0.01, 'N_nodes': 4, 'E': 70e9, 'alpha': 2.0e-5,\n            'rho': 2700.0, 'c': 900.0, 'k': 1e-6, 'T0': 300.0, 'dt': 10.0,\n            'TL': 400.0, 'TR': 350.0, 'case_id': 'C'\n        },\n    ]\n\n    results = []\n    for params in test_cases:\n        case_results = run_case(**params)\n        results.extend(case_results)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef run_case(L, A, N_nodes, E, alpha, rho, c, k, T0, dt, TL, TR, case_id):\n    \"\"\"\n    Assembles and evaluates the residual and Jacobian for a single test case.\n    \"\"\"\n    N_el = N_nodes - 1\n    h = L / N_el\n    total_dofs = 2 * N_nodes\n\n    # --- Initialize global matrices and vectors ---\n    K_uu = np.zeros((N_nodes, N_nodes))\n    K_uT = np.zeros((N_nodes, N_nodes))\n    K_Tu = np.zeros((N_nodes, N_nodes))\n    C_TT = np.zeros((N_nodes, N_nodes))\n    K_TT = np.zeros((N_nodes, N_nodes))\n    f_u_th = np.zeros(N_nodes)\n\n    # --- Assembly loop over elements ---\n    for i in range(N_el):\n        nodes = [i, i + 1]\n        \n        # Element matrices\n        K_uu_e = (A * E / h) * np.array([[1, -1], [-1, 1]])\n        K_uT_e = -(A * E * alpha / 2) * np.array([[-1, -1], [1, 1]])\n        f_u_th_e = A * E * alpha * T0 * np.array([-1, 1])\n        C_TT_e = (A * rho * c * h / 6) * np.array([[2, 1], [1, 2]])\n        K_TT_e = (A * k / h) * np.array([[1, -1], [-1, 1]])\n        K_Tu_e = (A * T0 * E * alpha / 2) * np.array([[-1, 1], [-1, 1]])\n\n        # Assemble into global matrices/vectors\n        for r_local, r_global in enumerate(nodes):\n            f_u_th[r_global] += f_u_th_e[r_local]\n            for c_local, c_global in enumerate(nodes):\n                K_uu[r_global, c_global] += K_uu_e[r_local, c_local]\n                K_uT[r_global, c_global] += K_uT_e[r_local, c_local]\n                K_Tu[r_global, c_global] += K_Tu_e[r_local, c_local]\n                C_TT[r_global, c_global] += C_TT_e[r_local, c_local]\n                K_TT[r_global, c_global] += K_TT_e[r_local, c_local]\n    \n    # --- Form global Jacobian matrix J ---\n    J = np.zeros((total_dofs, total_dofs))\n    J[0:N_nodes, 0:N_nodes] = K_uu\n    J[0:N_nodes, N_nodes:total_dofs] = K_uT\n    J[N_nodes:total_dofs, 0:N_nodes] = (1 / dt) * K_Tu\n    J[N_nodes:total_dofs, N_nodes:total_dofs] = (1 / dt) * C_TT + K_TT\n\n    # --- Define state vectors (initial and trial) ---\n    u_n = np.zeros(N_nodes)\n    T_n = np.full(N_nodes, T0)\n\n    u_n1_trial = np.zeros(N_nodes) # u(0)=0, u(L)=0\n    x_coords = np.linspace(0, L, N_nodes)\n    T_n1_trial = TL + (TR - TL) * x_coords / L\n    \n    # --- Calculate global residual vector R at trial state ---\n    R = np.zeros(total_dofs)\n    # Mechanical residual R_u\n    R[0:N_nodes] = K_uu @ u_n1_trial + K_uT @ T_n1_trial + f_u_th\n    # Thermal residual R_T\n    R[N_nodes:total_dofs] = ((1 / dt) * C_TT + K_TT) @ T_n1_trial \\\n                           + ((1 / dt) * K_Tu) @ u_n1_trial \\\n                           - ((1 / dt) * C_TT @ T_n + (1 / dt) * K_Tu @ u_n)\n\n    # --- Apply BCs by elimination to get reduced system ---\n    fixed_dofs = [0, N_nodes - 1, N_nodes, total_dofs - 1]\n    free_dofs = sorted(list(set(range(total_dofs)) - set(fixed_dofs)))\n    \n    R_red = R[free_dofs]\n    J_red = J[np.ix_(free_dofs, free_dofs)]\n\n    # --- Compute norm of the reduced residual ---\n    res_norm = np.linalg.norm(R_red)\n\n    # --- Numerically verify the reduced Jacobian using finite differences ---\n    h_fd = 1.0e-8\n    y_red_trial = np.concatenate([u_n1_trial[1:-1], T_n1_trial[1:-1]])\n    n_free = len(free_dofs)\n    J_fd = np.zeros((n_free, n_free))\n    \n    y_n1_full_trial = np.concatenate([u_n1_trial, T_n1_trial])\n    \n    def get_reduced_residual(y_f_trial):\n        y_full = np.copy(y_n1_full_trial)\n        y_full[free_dofs] = y_f_trial\n        u_f, T_f = y_full[:N_nodes], y_full[N_nodes:]\n        \n        R_full = np.zeros(total_dofs)\n        R_full[:N_nodes] = K_uu @ u_f + K_uT @ T_f + f_u_th\n        R_full[N_nodes:] = ((1 / dt) * C_TT + K_TT) @ T_f \\\n                           + ((1 / dt) * K_Tu) @ u_f \\\n                           - ((1 / dt) * C_TT @ T_n + (1 / dt) * K_Tu @ u_n)\n        return R_full[free_dofs]\n\n    for i in range(n_free):\n        y_red_pert = np.copy(y_red_trial)\n        y_red_pert[i] += h_fd\n        R_red_pert = get_reduced_residual(y_red_pert)\n        J_fd[:, i] = (R_red_pert - R_red) / h_fd\n\n    jac_diff_norm = np.linalg.norm(J_red - J_fd, 'fro')\n\n    # --- Handle case-specific outputs ---\n    output = [res_norm, jac_diff_norm]\n    if case_id == 'B':\n        n_u_free = N_nodes - 2\n        n_t_free = N_nodes - 2\n        \n        J_uT_red_block = J_red[0:n_u_free, n_u_free:(n_u_free + n_t_free)]\n        J_Tu_red_block = J_red[n_u_free:(n_u_free + n_t_free), 0:n_u_free]\n        \n        norm_J_uT_F = np.linalg.norm(J_uT_red_block, 'fro')\n        norm_J_Tu_F = np.linalg.norm(J_Tu_red_block, 'fro')\n        off_diag_norm = np.sqrt(norm_J_uT_F**2 + norm_J_Tu_F**2)\n        output.append(off_diag_norm)\n\n    return output\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2625915"}]}