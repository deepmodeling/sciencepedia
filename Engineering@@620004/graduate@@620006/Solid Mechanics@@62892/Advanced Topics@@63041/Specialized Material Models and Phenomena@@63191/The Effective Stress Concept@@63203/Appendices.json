{"hands_on_practices": [{"introduction": "This first practice provides a foundational application of the effective stress principle in a classic geotechnical context. Correctly determining the state of stress within a soil mass is the cornerstone of designing safe and stable foundations, slopes, and earth-retaining structures. This exercise will hone your ability to meticulously calculate the two key components—total stress and pore water pressure—to find the effective stress that governs the mechanical behavior of the soil skeleton [@problem_id:2888539].", "problem": "A horizontally layered soil profile consists of an upper sand layer of thickness $3\\,\\mathrm{m}$ overlying a clay layer that extends well beyond the depth of interest. The ground surface is at $z=0$, with $z$ increasing positively downward. The sand has bulk unit weight above the water table $\\gamma_{\\text{unsat}}=17\\,\\mathrm{kN/m^3}$ and saturated unit weight $\\gamma_{\\text{sat,s}}=20\\,\\mathrm{kN/m^3}$. The clay has saturated unit weight $\\gamma_{\\text{sat,c}}=18.5\\,\\mathrm{kN/m^3}$. The unit weight of water is $\\gamma_{w}=9.81\\,\\mathrm{kN/m^3}$. Initially the water table coincides with the sand–clay interface at $z=3\\,\\mathrm{m}$. After a prolonged rainfall and subsequent drainage, the water table rises to $z=1\\,\\mathrm{m}$ and hydrostatic conditions are re-established. Concurrently, a uniform flexible surcharge $q=40\\,\\mathrm{kPa}$ is applied at the ground surface and maintained long enough that drained conditions prevail.\n\nUsing only (i) the definition of total stress as the weight per unit area of overburden plus applied surface traction, (ii) static fluid equilibrium for pore pressure in the water phase, and (iii) the principle of effective stress for a fully saturated soil skeleton, determine the effective vertical stress $\\sigma_{v}'$ at depth $z=8\\,\\mathrm{m}$ under these final (drained, hydrostatic) conditions. Take compressive stresses as positive.\n\nExpress your final answer in $\\mathrm{kPa}$ and round your answer to four significant figures.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- Soil profile: Upper sand layer thickness, $h_s = 3\\,\\mathrm{m}$, overlying a deep clay layer.\n- Coordinate system: $z=0$ at the ground surface, positive downwards.\n- Sand properties: Unsaturated unit weight $\\gamma_{\\text{unsat}}=17\\,\\mathrm{kN/m^3}$; Saturated unit weight $\\gamma_{\\text{sat,s}}=20\\,\\mathrm{kN/m^3}$.\n- Clay properties: Saturated unit weight $\\gamma_{\\text{sat,c}}=18.5\\,\\mathrm{kN/m^3}$.\n- Water property: Unit weight of water $\\gamma_{w}=9.81\\,\\mathrm{kN/m^3}$.\n- Initial condition: Water table at $z=3\\,\\mathrm{m}$.\n- Final conditions:\n    - Water table rises to $z_{\\text{w,final}}=1\\,\\mathrm{m}$.\n    - Hydrostatic conditions are re-established.\n    - Uniform flexible surcharge $q=40\\,\\mathrm{kPa}$ is applied.\n    - Drained conditions prevail (long-term).\n- Objective: Determine the effective vertical stress $\\sigma_{v}'$ at depth $z=8\\,\\mathrm{m}$.\n- Constraints: Use only definitions of total stress, static fluid equilibrium, and the principle of effective stress.\n- Sign convention: Compressive stresses are positive.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The problem is founded on the principle of effective stress, a fundamental and well-established concept in soil mechanics. The physical scenario and material properties are realistic.\n- **Well-Posedness**: The problem provides all necessary parameters and clearly defines the final state for which the calculation is required. A unique solution is obtainable.\n- **Objectivity**: The language is precise and quantitative, free of subjective elements.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically grounded, well-posed, objective, and contains no discernible flaws. It is **valid**. Proceeding to the solution.\n\nThe solution requires the calculation of the effective vertical stress, $\\sigma_{v}'$, at a depth of $z=8\\,\\mathrm{m}$. The principle of effective stress, as stipulated, is the governing relation:\n$$\n\\sigma_{v}' = \\sigma_{v} - u\n$$\nwhere $\\sigma_{v}$ is the total vertical stress and $u$ is the pore water pressure. We must calculate $\\sigma_{v}$ and $u$ at $z=8\\,\\mathrm{m}$ for the final specified conditions.\n\n**1. Calculation of Total Vertical Stress ($\\sigma_{v}$)**\n\nThe total vertical stress at a certain depth is the sum of the weight of all overlying material (soil and water) per unit area, plus any surcharge applied at the surface. The final state includes a surcharge $q=40\\,\\mathrm{kPa}$ and a water table at $z=1\\,\\mathrm{m}$.\n\nThe soil column down to $z=8\\,\\mathrm{m}$ is composed of three distinct layers based on soil type and saturation state:\n- Layer 1: From $z=0$ to $z=1\\,\\mathrm{m}$. This is the sand layer above the final water table, so it is unsaturated. Its contribution to stress is its thickness multiplied by its unsaturated unit weight, $\\gamma_{\\text{unsat}}$.\n- Layer 2: From $z=1\\,\\mathrm{m}$ to $z=3\\,\\mathrm{m}$. This is the sand layer below the final water table, so it is saturated. Its contribution to stress is its thickness multiplied by its saturated unit weight, $\\gamma_{\\text{sat,s}}$.\n- Layer 3: From $z=3\\,\\mathrm{m}$ to $z=8\\,\\mathrm{m}$. This is the clay layer, which is below the final water table and is therefore saturated. Its contribution to stress is its thickness multiplied by its saturated unit weight, $\\gamma_{\\text{sat,c}}$.\n\nThe total vertical stress $\\sigma_{v}$ at $z=8\\,\\mathrm{m}$ is the sum of the surcharge and the stress contributions from these three layers:\n$$\n\\sigma_{v} = q + (1\\,\\mathrm{m} - 0\\,\\mathrm{m})\\gamma_{\\text{unsat}} + (3\\,\\mathrm{m} - 1\\,\\mathrm{m})\\gamma_{\\text{sat,s}} + (8\\,\\mathrm{m} - 3\\,\\mathrm{m})\\gamma_{\\text{sat,c}}\n$$\nSubstituting the given numerical values:\n$$\n\\sigma_{v} = 40\\,\\mathrm{kPa} + (1\\,\\mathrm{m})(17\\,\\mathrm{kN/m^3}) + (2\\,\\mathrm{m})(20\\,\\mathrm{kN/m^3}) + (5\\,\\mathrm{m})(18.5\\,\\mathrm{kN/m^3})\n$$\nSince $1\\,\\mathrm{kN/m^2} = 1\\,\\mathrm{kPa}$:\n$$\n\\sigma_{v} = 40\\,\\mathrm{kPa} + 17\\,\\mathrm{kPa} + 40\\,\\mathrm{kPa} + 92.5\\,\\mathrm{kPa}\n$$\n$$\n\\sigma_{v} = 189.5\\,\\mathrm{kPa}\n$$\n\n**2. Calculation of Pore Water Pressure ($u$)**\n\nThe problem states that hydrostatic conditions are re-established. Under hydrostatic conditions, the pore water pressure at any point below the water table is equal to the depth of that point below the free water surface multiplied by the unit weight of water, $\\gamma_{w}$. The free water surface is the water table, located at $z_{\\text{w,final}} = 1\\,\\mathrm{m}$.\n\nThe point of interest is at a depth $z=8\\,\\mathrm{m}$. The depth of this point below the water table is:\n$$\nh_{w} = z - z_{\\text{w,final}} = 8\\,\\mathrm{m} - 1\\,\\mathrm{m} = 7\\,\\mathrm{m}\n$$\nThe pore water pressure $u$ at this depth is:\n$$\nu = h_{w} \\cdot \\gamma_{w}\n$$\nSubstituting the values:\n$$\nu = (7\\,\\mathrm{m})(9.81\\,\\mathrm{kN/m^3}) = 68.67\\,\\mathrm{kPa}\n$$\n\n**3. Calculation of Effective Vertical Stress ($\\sigma_{v}'$)**\n\nNow, using the principle of effective stress, we can find $\\sigma_{v}'$:\n$$\n\\sigma_{v}' = \\sigma_{v} - u\n$$\nSubstituting the calculated values for $\\sigma_{v}$ and $u$:\n$$\n\\sigma_{v}' = 189.5\\,\\mathrm{kPa} - 68.67\\,\\mathrm{kPa}\n$$\n$$\n\\sigma_{v}' = 120.83\\,\\mathrm{kPa}\n$$\nThe problem requires the answer to be rounded to four significant figures.\n$$\n\\sigma_{v}' \\approx 120.8\\,\\mathrm{kPa}\n$$", "answer": "$$\n\\boxed{120.8}\n$$", "id": "2888539"}, {"introduction": "Moving from direct calculation to the realm of computational mechanics, this problem addresses a critical and often misunderstood aspect of modern poromechanics simulation. When implementing numerical models, such as the finite element method, one must correctly translate physically applied loads into the appropriate boundary conditions for the governing equations. This exercise tests your conceptual understanding of how to decompose a total traction boundary condition into the effective traction seen by the solid skeleton and the contribution from pore pressure, a vital step for accurate modeling [@problem_id:2695886].", "problem": "A saturated, linear poroelastic solid occupies a bounded domain with outward unit normal $\\mathbf{n}$ on its boundary. On a boundary segment $\\Gamma_{t}$, the body is loaded by a rigid, perfectly porous platen that (i) transmits a prescribed mechanical traction to the mixture and (ii) hydraulically connects the pore space to a reservoir that enforces a prescribed pore pressure. Assume standard small-strain kinematics, the Cauchy traction definition $\\mathbf{t}=\\boldsymbol{\\sigma}\\,\\mathbf{n}$, and that pore pressure is positive in compression. The Biot coefficient (dimensionless) is $\\alpha\\in(0,1]$. No body forces act.\n\nOn $\\Gamma_{t}$ the following boundary data are prescribed:\n- The total traction on the mixture $\\bar{\\mathbf{t}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}$, with $\\mathbf{n}=(0,\\,1)$.\n- The pore pressure $\\bar{p}=50\\,\\mathrm{kPa}$ enforced by the reservoir.\n- The Biot coefficient $\\alpha=0.8$.\n\nYou wish to implement the mechanical Neumann boundary condition in a formulation whose unknown field is the displacement of the solid skeleton and whose constitutive law is written in terms of the effective stress of the skeleton. Which of the following boundary conditions on $\\Gamma_{t}$ is admissible and correctly avoids over-constraining by distinguishing between total and effective tractions? Choose the single best option.\n\nA. Prescribe the effective traction equal to the given total traction, $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.\n\nB. Prescribe the effective traction as $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}+\\bar{p}\\,\\mathbf{n}$, i.e., $\\mathbf{t}_{\\mathrm{eff}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}+50\\,\\mathrm{kPa}\\,(0,\\,1)=\\left(10,\\,20\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.\n\nC. Prescribe the effective traction as $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}+\\alpha\\,\\bar{p}\\,\\mathbf{n}$, i.e., $\\mathbf{t}_{\\mathrm{eff}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}+0.8\\times 50\\,\\mathrm{kPa}\\,(0,\\,1)=\\left(10,\\,10\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.\n\nD. Prescribe both the total traction and the effective traction simultaneously, $\\mathbf{t}=\\bar{\\mathbf{t}}$ and $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$, because one is a mixture quantity and the other is a skeleton quantity.\n\nE. Prescribe the effective traction as $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}-\\alpha\\,\\bar{p}\\,\\mathbf{n}$, i.e., $\\mathbf{t}_{\\mathrm{eff}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}-0.8\\times 50\\,\\mathrm{kPa}\\,(0,\\,1)=\\left(10,\\,-70\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.", "solution": "The problem statement will be validated before a solution is attempted.\n\n### Step 1: Extract Givens\nThe following information is provided in the problem statement:\n- The medium is a saturated, linear poroelastic solid.\n- It occupies a bounded domain with an outward unit normal $\\mathbf{n}$ on its boundary.\n- A boundary segment $\\Gamma_{t}$ is loaded by a rigid, perfectly porous platen.\n- Kinematics are based on the small-strain assumption.\n- The Cauchy traction is defined as $\\mathbf{t}=\\boldsymbol{\\sigma}\\,\\mathbf{n}$, where $\\boldsymbol{\\sigma}$ is the total stress tensor.\n- Pore pressure $p$ is positive in compression.\n- The Biot coefficient is $\\alpha\\in(0,1]$.\n- No body forces are present.\n- On the boundary segment $\\Gamma_{t}$, the prescribed total traction is $\\bar{\\mathbf{t}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}$.\n- The outward unit normal on $\\Gamma_{t}$ is $\\mathbf{n}=(0,\\,1)$.\n- The prescribed pore pressure on $\\Gamma_{t}$ is $\\bar{p}=50\\,\\mathrm{kPa}$.\n- The Biot coefficient value is $\\alpha=0.8$.\n- The numerical formulation is based on the displacement of the solid skeleton as the unknown field.\n- The constitutive law for the solid skeleton relates a strain measure to the effective stress.\n- The question asks for the correct mechanical Neumann boundary condition on $\\Gamma_{t}$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is scientifically grounded within the established framework of linear poroelasticity, commonly known as Biot's theory. All terms used—total stress, effective stress, pore pressure, Biot coefficient, and traction boundary conditions—are standard in continuum mechanics and its application to porous media. The scenario of a porous platen applying both mechanical and hydraulic boundary conditions is a standard model in poromechanics analysis.\n\nThe problem is well-posed. It does not ask for the full solution of a boundary-value problem, but rather for the correct formulation of a boundary condition, which is a question of theoretical consistency. The provided data are sufficient and consistent. The value of the applied traction $\\bar{\\mathbf{t}}$ having a negative normal component is consistent with a compressive load under the standard tension-positive sign convention prevalent in continuum mechanics. The problem is stated objectively and precisely. It does not violate any physical laws, nor does it contain internal contradictions or ambiguities that would prevent a rigorous analysis.\n\n### Step 3: Verdict and Action\nThe problem is **valid**. A solution will be derived from first principles.\n\n### Derivation of the Correct Boundary Condition\n\nThe foundation of poroelasticity is the\neffective stress principle, which partitions the total stress acting on the medium into a part carried by the solid skeleton (the effective stress) and a part associated with the pore fluid pressure. In modern continuum poromechanics, using a tension-positive convention for stress and a compression-positive convention for pore pressure, the total stress tensor, $\\boldsymbol{\\sigma}$, is related to the effective stress tensor, $\\boldsymbol{\\sigma}_{\\mathrm{eff}}$, by:\n$$ \\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}_{\\mathrm{eff}} - \\alpha p \\mathbf{I} $$\nwhere $\\alpha$ is the Biot coefficient and $\\mathbf{I}$ is the second-order identity tensor. This equation can be rearranged to express the effective stress in terms of total stress and pore pressure:\n$$ \\boldsymbol{\\sigma}_{\\mathrm{eff}} = \\boldsymbol{\\sigma} + \\alpha p \\mathbf{I} $$\nThe problem specifies that the constitutive law of the formulation is written in terms of the effective stress. This means the mechanical behavior of the solid skeleton is governed by a law of the form $\\boldsymbol{\\sigma}_{\\mathrm{eff}} = \\mathbf{C} : \\boldsymbol{\\varepsilon}$, where $\\mathbf{C}$ is the tensor of elastic constants for the drained skeleton, and $\\boldsymbol{\\varepsilon}$ is the small-strain tensor derived from the displacement field $\\mathbf{u}$.\n\nThe equilibrium equation for the mixture, in the absence of body forces, is $\\nabla \\cdot \\boldsymbol{\\sigma} = \\mathbf{0}$. Substituting the effective stress relation gives the governing equation in a form suitable for a displacement-based formulation:\n$$ \\nabla \\cdot (\\boldsymbol{\\sigma}_{\\mathrm{eff}} - \\alpha p \\mathbf{I}) = \\mathbf{0} \\implies \\nabla \\cdot \\boldsymbol{\\sigma}_{\\mathrm{eff}} = \\alpha \\nabla p $$\nWhen deriving the weak (variational) form of this equation to be solved numerically (e.g., via the finite element method), integration by parts is applied to the divergence term. This procedure naturally gives rise to a boundary integral involving the term $\\boldsymbol{\\sigma}_{\\mathrm{eff}}\\mathbf{n}$. This term is defined as the effective traction, $\\mathbf{t}_{\\mathrm{eff}}$:\n$$ \\mathbf{t}_{\\mathrm{eff}} = \\boldsymbol{\\sigma}_{\\mathrm{eff}}\\mathbf{n} $$\nThis effective traction is the natural (or Neumann) boundary condition for the mechanical part of the problem when the formulation is based on effective stress.\n\nThe physically applied boundary condition is the total traction on the mixture, $\\bar{\\mathbf{t}}$. We must therefore relate the required mathematical boundary condition, $\\mathbf{t}_{\\mathrm{eff}}$, to the given physical data, $\\bar{\\mathbf{t}}$ and $\\bar{p}$. We start from the definition of total traction, $\\mathbf{t} = \\boldsymbol{\\sigma}\\mathbf{n}$, and substitute the effective stress relationship:\n$$ \\mathbf{t} = (\\boldsymbol{\\sigma}_{\\mathrm{eff}} - \\alpha p \\mathbf{I})\\mathbf{n} = \\boldsymbol{\\sigma}_{\\mathrm{eff}}\\mathbf{n} - \\alpha p(\\mathbf{I}\\mathbf{n}) = \\mathbf{t}_{\\mathrm{eff}} - \\alpha p \\mathbf{n} $$\nRearranging this equation to solve for the effective traction gives:\n$$ \\mathbf{t}_{\\mathrm{eff}} = \\mathbf{t} + \\alpha p \\mathbf{n} $$\nOn the boundary segment $\\Gamma_{t}$, the total traction is prescribed as $\\mathbf{t} = \\bar{\\mathbf{t}}$ and the pore pressure is prescribed as $p = \\bar{p}$. Therefore, the correct Neumann boundary condition to implement for the effective stress formulation is:\n$$ \\mathbf{t}_{\\mathrm{eff}} = \\bar{\\mathbf{t}} + \\alpha \\bar{p} \\mathbf{n} $$\nUsing the given numerical values:\n- $\\bar{\\mathbf{t}} = (10, -30)\\,\\mathrm{kPa}$\n- $\\alpha = 0.8$\n- $\\bar{p} = 50\\,\\mathrm{kPa}$\n- $\\mathbf{n} = (0, 1)$\n\nWe calculate the effective traction vector:\n$$ \\mathbf{t}_{\\mathrm{eff}} = (10, -30)\\,\\mathrm{kPa} + (0.8)(50\\,\\mathrm{kPa})(0, 1) $$\n$$ \\mathbf{t}_{\\mathrm{eff}} = (10, -30)\\,\\mathrm{kPa} + 40\\,\\mathrm{kPa}\\,(0, 1) $$\n$$ \\mathbf{t}_{\\mathrm{eff}} = (10, -30)\\,\\mathrm{kPa} + (0, 40)\\,\\mathrm{kPa} $$\n$$ \\mathbf{t}_{\\mathrm{eff}} = (10, -30 + 40)\\,\\mathrm{kPa} = (10, 10)\\,\\mathrm{kPa} $$\nThe correct mechanical Neumann boundary condition is the prescription of the effective traction as $\\mathbf{t}_{\\mathrm{eff}} = (10, 10)\\,\\mathrm{kPa}$. The hydraulic boundary condition is, separately, the prescription of pore pressure $\\bar{p}=50\\,\\mathrm{kPa}$.\n\n### Evaluation of Options\n\n**A. Prescribe the effective traction equal to the given total traction, $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.**\nThis is incorrect. It ignores the contribution of the pore pressure to the total stress, effectively assuming $\\alpha p \\mathbf{n} = \\mathbf{0}$, which contradicts the given data. This confuses total traction with effective traction. **Incorrect**.\n\n**B. Prescribe the effective traction as $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}+\\bar{p}\\,\\mathbf{n}$, i.e., $\\mathbf{t}_{\\mathrm{eff}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}+50\\,\\mathrm{kPa}\\,(0,\\,1)=\\left(10,\\,20\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.**\nThis is incorrect. This expression for effective traction corresponds to the special case where the Biot coefficient $\\alpha=1$ (Terzaghi's effective stress). The problem states that $\\alpha=0.8$. **Incorrect**.\n\n**C. Prescribe the effective traction as $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}+\\alpha\\,\\bar{p}\\,\\mathbf{n}$, i.e., $\\mathbf{t}_{\\mathrm{eff}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}+0.8\\times 50\\,\\mathrm{kPa}\\,(0,\\,1)=\\left(10,\\,10\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.**\nThis option correctly applies the derived relationship $\\mathbf{t}_{\\mathrm{eff}} = \\mathbf{t} + \\alpha p \\mathbf{n}$, which properly converts the given physical boundary data (total traction and pore pressure) into the consistent natural boundary condition for an effective stress-based formulation. The numerical calculation is also correct. **Correct**.\n\n**D. Prescribe both the total traction and the effective traction simultaneously, $\\mathbf{t}=\\bar{\\mathbf{t}}$ and $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$, because one is a mixture quantity and the other is a skeleton quantity.**\nThis is incorrect for two reasons. First, it falsely equates effective traction with total traction. Second, prescribing total traction, effective traction, and pore pressure simultaneously over-constrains the problem, as these three quantities are linked by a defining equation. On a Neumann boundary, only one type of traction condition (total or effective, depending on the formulation) can be prescribed. **Incorrect**.\n\n**E. Prescribe the effective traction as $\\mathbf{t}_{\\mathrm{eff}}=\\bar{\\mathbf{t}}-\\alpha\\,\\bar{p}\\,\\mathbf{n}$, i.e., $\\mathbf{t}_{\\mathrm{eff}}=\\left(10,\\,-30\\right)\\,\\mathrm{kPa}-0.8\\times 50\\,\\mathrm{kPa}\\,(0,\\,1)=\\left(10,\\,-70\\right)\\,\\mathrm{kPa}$, together with $\\bar{p}=50\\,\\mathrm{kPa}$.**\nThis is incorrect. The sign is wrong. This expression would result from an incorrect definition relating the stresses and pressure. **Incorrect**.", "answer": "$$\\boxed{C}$$", "id": "2695886"}, {"introduction": "This final, comprehensive practice synthesizes the preceding concepts into a task that mirrors real-world material characterization. The abstract parameters in our poroelastic models, such as the drained bulk modulus $K_b$ and the Biot coefficient $\\alpha$, must be determined from laboratory experiments. This exercise challenges you to implement an inverse analysis that uses idealized experimental data from a suite of standard tests to identify these crucial parameters, bridging the gap between theoretical models and practical engineering application [@problem_id:2695874].", "problem": "You are tasked with formulating and implementing an inverse analysis to estimate, from first principles, the triplet of poroelastic parameters $\\left(K_b,\\alpha,M\\right)$ for an isotropic, fully saturated, linear poroelastic solid. The parameters are the drained bulk modulus $K_b$ (in $\\mathrm{MPa}$), the Biot coefficient $\\alpha$ (dimensionless), and the Biot modulus $M$ (in $\\mathrm{MPa}$). The inverse analysis must use data from three idealized laboratory protocols: drained isotropic compression, undrained isotropic compression, and unjacketed isotropic compression. Your program must solve a weighted and regularized least-squares parameter estimation problem and output the estimated parameters for a small test suite.\n\nBegin from the following fundamental bases:\n- Effective stress concept (Biot-Terzaghi form): the Cauchy total stress tensor $\\boldsymbol{\\sigma}$ and effective stress tensor $\\boldsymbol{\\sigma}'$ satisfy $\\boldsymbol{\\sigma}'=\\boldsymbol{\\sigma}-\\alpha p\\,\\mathbf{I}$, where $p$ is the pore pressure and $\\mathbf{I}$ is the identity tensor.\n- Isotropic linear elasticity of the skeleton: the volumetric effective stress and volumetric strain satisfy $\\sigma_m' = K_b\\,\\varepsilon_v$, where $\\sigma_m'=(1/3)\\,\\mathrm{tr}(\\boldsymbol{\\sigma}')$ and $\\varepsilon_v=\\mathrm{tr}(\\boldsymbol{\\varepsilon})$.\n- Fluid content definition and storage (sign convention chosen to yield positive pore pressure in undrained compression): the increment of fluid content $\\zeta$ satisfies $\\zeta=\\alpha\\,\\varepsilon_v - p/M$. In undrained loading, there is no fluid mass exchange with the surroundings, so $\\zeta=0$.\n\nFrom these bases, deduce the forward models for the three tests in terms of $\\left(K_b,\\alpha,M\\right)$:\n- Drained isotropic compression: pore pressure is held constant, so $\\Delta p=0$. The measured pair $\\left(\\Delta\\sigma_m,\\varepsilon_v\\right)$ satisfies a linear relation whose slope is determined by $K_b$.\n- Undrained isotropic compression: no fluid mass exchange ($\\Delta\\zeta=0$). The measured pairs $\\left(\\Delta\\sigma_m,\\Delta p\\right)$ and $\\left(\\Delta\\sigma_m,\\varepsilon_v\\right)$ satisfy relations that depend on $K_b$, $\\alpha$, and $M$.\n- Unjacketed isotropic compression: equal increments of confining stress and pore pressure are applied, $\\Delta\\sigma_m=\\Delta p$. The measured pair $\\left(\\Delta p,\\varepsilon_v\\right)$ satisfies a linear relation involving $K_b$ and $\\alpha$.\n\nDesign the inverse problem as the minimization over $\\boldsymbol{\\theta}=\\left(K_b,\\alpha,M\\right)$ of the weighted, regularized quadratic objective\n$$\nJ(\\boldsymbol{\\theta})=\\sum_{i\\in\\mathcal{D}} \\left(\\frac{r_i(\\boldsymbol{\\theta})}{s_i}\\right)^2 \\;+\\; \\lambda\\,\\left\\| \\mathbf{L}\\,\\left(\\boldsymbol{\\theta}-\\boldsymbol{\\theta}_0\\right)\\right\\|_2^2,\n$$\nwhere $r_i(\\boldsymbol{\\theta})$ are residuals defined as model prediction minus measurement for each datum across all three tests, $s_i$ are the corresponding measurement standard deviations to nondimensionalize the residuals, $\\lambda$ is a nonnegative regularization weight, $\\mathbf{L}$ is a nonsingular scaling matrix, and $\\boldsymbol{\\theta}_0$ is a prior parameter vector. For physical admissibility, enforce bounds $K_b>0$, $M>0$, and $0<\\alpha<1$. Your residual definitions must reflect the measurement types:\n- Drained residuals use measured $\\varepsilon_v$ at specified $\\Delta\\sigma_m$.\n- Undrained residuals use both measured $\\Delta p$ and measured $\\varepsilon_v$ at specified $\\Delta\\sigma_m$.\n- Unjacketed residuals use measured $\\varepsilon_v$ at specified $\\Delta p$.\n\nUnits:\n- Stresses and moduli must be in $\\mathrm{MPa}$.\n- Strains are dimensionless.\n- Angles are not involved.\n- Your output must use $\\mathrm{MPa}$ for $K_b$ and $M$, and dimensionless units for $\\alpha$.\n\nTest suite:\nFor each case below, the data consist of triplets of datasets: drained, undrained, and unjacketed. Each dataset includes the loading array and the corresponding measurements, together with their standard deviations for weighting.\n\nUse the following three cases.\n\n- Case $\\mathrm{A}$ (happy path):\n  - Drained: loadings $\\Delta\\sigma_m=\\left[\\,10.0,\\,30.0,\\,50.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.005002,\\,0.014999,\\,0.025001\\,\\right]$; standard deviation $s_{\\varepsilon,\\mathrm{d}}=2\\times 10^{-6}$.\n  - Undrained: loadings $\\Delta\\sigma_m=\\left[\\,10.0,\\,30.0,\\,50.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\Delta p=\\left[\\,7.02754386,\\,21.03263158,\\,35.1027193\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.002190982456,\\,0.006579947368,\\,0.01096691228\\,\\right]$; standard deviations $s_{p,\\mathrm{u}}=5\\times 10^{-2}$ $\\mathrm{MPa}$ and $s_{\\varepsilon,\\mathrm{u}}=2\\times 10^{-6}$.\n  - Unjacketed: loadings $\\Delta p=\\left[\\,5.0,\\,15.0,\\,25.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.000501,\\,0.001498,\\,0.002501\\,\\right]$; standard deviation $s_{\\varepsilon,\\mathrm{uj}}=2\\times 10^{-6}$.\n\n- Case $\\mathrm{B}$ (near-boundary $\\alpha$):\n  - Drained: loadings $\\Delta\\sigma_m=\\left[\\,8.0,\\,24.0,\\,40.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.008001,\\,0.023998,\\,0.040003\\,\\right]$; standard deviation $s_{\\varepsilon,\\mathrm{d}}=2\\times 10^{-6}$.\n  - Undrained: loadings $\\Delta\\sigma_m=\\left[\\,8.0,\\,24.0,\\,40.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\Delta p=\\left[\\,7.38007244,\\,22.20121732,\\,36.9403622\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.000755476,\\,0.002262429,\\,0.003775381\\,\\right]$; standard deviations $s_{p,\\mathrm{u}}=5\\times 10^{-2}$ $\\mathrm{MPa}$ and $s_{\\varepsilon,\\mathrm{u}}=2\\times 10^{-6}$.\n  - Unjacketed: loadings $\\Delta p=\\left[\\,6.0,\\,18.0,\\,30.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.000119,\\,0.000361,\\,0.000599\\,\\right]$; standard deviation $s_{\\varepsilon,\\mathrm{uj}}=2\\times 10^{-6}$.\n\n- Case $\\mathrm{C}$ (small $\\alpha$, stiffer frame):\n  - Drained: loadings $\\Delta\\sigma_m=\\left[\\,12.0,\\,36.0,\\,60.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.002402,\\,0.007198,\\,0.012002\\,\\right]$; standard deviation $s_{\\varepsilon,\\mathrm{d}}=2\\times 10^{-6}$.\n  - Undrained: loadings $\\Delta\\sigma_m=\\left[\\,12.0,\\,36.0,\\,60.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\Delta p=\\left[\\,2.753091604,\\,8.234274812,\\,13.747459\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.002289076336,\\,0.006871229009,\\,0.01144838165\\,\\right]$; standard deviations $s_{p,\\mathrm{u}}=5\\times 10^{-2}$ $\\mathrm{MPa}$ and $s_{\\varepsilon,\\mathrm{u}}=2\\times 10^{-6}$.\n  - Unjacketed: loadings $\\Delta p=\\left[\\,7.0,\\,21.0,\\,35.0\\,\\right]$ $\\mathrm{MPa}$; measured $\\varepsilon_v=\\left[\\,0.001121,\\,0.003359,\\,0.005602\\,\\right]$; standard deviation $s_{\\varepsilon,\\mathrm{uj}}=2\\times 10^{-6}$.\n\nParameter priors and regularization:\n- Use the same prior for all cases, $\\boldsymbol{\\theta}_0=\\left(K_{b,0},\\alpha_0,M_0\\right)=\\left(2500.0,\\,0.85,\\,7000.0\\right)$ with units $\\mathrm{MPa}$ for $K_{b,0}$ and $M_0$ and dimensionless $\\alpha_0$.\n- Use a diagonal scaling $\\mathbf{L}=\\mathrm{diag}\\left(1/2500.0,\\,1/0.5,\\,1/7000.0\\right)$ to nondimensionalize the deviation.\n- Use a regularization weight $\\lambda=10^{-6}$.\n- Enforce bounds $K_b\\in\\left[100.0,\\,50000.0\\right]$ $\\mathrm{MPa}$, $\\alpha\\in\\left[0.01,\\,0.99\\right]$, and $M\\in\\left[100.0,\\,100000.0\\right]$ $\\mathrm{MPa}$.\n\nForward models to be used inside residuals (derived from the bases above):\n- Drained: $\\varepsilon_v^{\\mathrm{model}}=\\Delta\\sigma_m/K_b$.\n- Undrained pore pressure: $\\Delta p^{\\mathrm{model}}=B\\,\\Delta\\sigma_m$ with $B=\\dfrac{\\alpha\\,M}{K_b+\\alpha^2 M}$.\n- Undrained strain: $\\varepsilon_v^{\\mathrm{model}}=\\Delta\\sigma_m/\\left(K_b+\\alpha^2 M\\right)$.\n- Unjacketed: $\\varepsilon_v^{\\mathrm{model}}=\\left(1-\\alpha\\right)\\,\\Delta p/K_b$.\n\nYour program must assemble all residuals, weight them by the provided standard deviations, add the regularization residuals $\\sqrt{\\lambda}\\,\\mathbf{L}\\,\\left(\\boldsymbol{\\theta}-\\boldsymbol{\\theta}_0\\right)$, and solve the resulting nonlinear least squares problem for each case independently.\n\nFinal output format:\n- Produce a single line of output containing a Python-like list of the three estimated parameter triplets corresponding to cases $\\mathrm{A}$, $\\mathrm{B}$, and $\\mathrm{C}$, in that order: $\\left[\\left[K_b^{(\\mathrm{A})},\\alpha^{(\\mathrm{A})},M^{(\\mathrm{A})}\\right],\\left[K_b^{(\\mathrm{B})},\\alpha^{(\\mathrm{B})},M^{(\\mathrm{B})}\\right],\\left[K_b^{(\\mathrm{C})},\\alpha^{(\\mathrm{C})},M^{(\\mathrm{C})}\\right]\\right]$.\n- Report $K_b$ and $M$ in $\\mathrm{MPa}$ and $\\alpha$ dimensionless.\n- Round each reported number to exactly $6$ decimal places.\n- No extra text is permitted.\n\nYour task is to implement the above as a complete, runnable program that solves the three inverse problems and prints the aggregated results in the exact single-line format described.", "solution": "The problem statement is a well-posed inverse analysis task in the field of linear poroelasticity. It asks for the estimation of three material parameters, the drained bulk modulus $K_b$, the Biot coefficient $\\alpha$, and the Biot modulus $M$, from a given set of idealized experimental data. The problem is scientifically grounded, internally consistent, and provides all necessary information to proceed. The forward models, objective function, and regularization scheme are standard components of parameter estimation in computational mechanics. Therefore, the problem is deemed valid and a solution is provided below.\n\nThe core of the problem is to determine the parameter vector $\\boldsymbol{\\theta} = [K_b, \\alpha, M]^T$ that minimizes a weighted, regularized least-squares objective function $J(\\boldsymbol{\\theta})$:\n$$\nJ(\\boldsymbol{\\theta})=\\sum_{i\\in\\mathcal{D}} \\left(\\frac{r_i(\\boldsymbol{\\theta})}{s_i}\\right)^2 \\;+\\; \\lambda\\,\\left\\| \\mathbf{L}\\,\\left(\\boldsymbol{\\theta}-\\boldsymbol{\\theta}_0\\right)\\right\\|_2^2\n$$\nHere, $r_i(\\boldsymbol{\\theta}) = m_i^{\\mathrm{model}}(\\boldsymbol{\\theta}) - m_i^{\\mathrm{obs}}$ is the residual between a model prediction and a measurement, $s_i$ is the standard deviation of the measurement, and the second term is a Tikhonov regularization penalty. We must solve this minimization for three separate cases (A, B, C), each with its own dataset.\n\nFirst, we must confirm the forward models relating the experimental controls and measurements to the parameters $\\boldsymbol{\\theta}$. These are derived from the three fundamental relations provided:\n1.  Effective stress: $\\Delta\\sigma_m' = \\Delta\\sigma_m - \\alpha \\Delta p$ for isotropic loading.\n2.  Skeleton elasticity: $\\Delta\\sigma_m' = K_b \\varepsilon_v$.\n3.  Fluid storage: $\\Delta\\zeta = \\alpha \\varepsilon_v - \\Delta p / M$, where $\\Delta\\zeta=0$ for undrained conditions.\n\nFrom these, we derive the response for each test type:\n- **Drained Isotropic Compression ($\\Delta p = 0$):**\n  From (1), $\\Delta\\sigma_m' = \\Delta\\sigma_m$. Substituting into (2) gives $\\Delta\\sigma_m = K_b \\varepsilon_v$, which yields the model for volumetric strain:\n  $$\n  \\varepsilon_v^{\\mathrm{model}} = \\frac{\\Delta\\sigma_m}{K_b}\n  $$\n- **Undrained Isotropic Compression ($\\Delta\\zeta = 0$):**\n  From (3), $\\Delta p = M \\alpha \\varepsilon_v$. Substituting this into the combination of (1) and (2), $K_b \\varepsilon_v = \\Delta\\sigma_m - \\alpha(M \\alpha \\varepsilon_v)$, we get $\\left(K_b + \\alpha^2 M\\right)\\varepsilon_v = \\Delta\\sigma_m$. This gives the models for volumetric strain and pore pressure change:\n  $$\n  \\varepsilon_v^{\\mathrm{model}} = \\frac{\\Delta\\sigma_m}{K_b + \\alpha^2 M} \\quad \\text{and} \\quad \\Delta p^{\\mathrm{model}} = \\frac{\\alpha M}{K_b + \\alpha^2 M}\\Delta\\sigma_m = B \\Delta\\sigma_m\n  $$\n  The term $K_u = K_b + \\alpha^2 M$ is the undrained bulk modulus.\n- **Unjacketed Isotropic Compression ($\\Delta\\sigma_m = \\Delta p$):**\n  From (1), $\\Delta\\sigma_m' = \\Delta p - \\alpha \\Delta p = (1-\\alpha)\\Delta p$. Substituting into (2) gives $(1-\\alpha)\\Delta p = K_b \\varepsilon_v$. The model for volumetric strain is:\n  $$\n  \\varepsilon_v^{\\mathrm{model}} = \\frac{(1-\\alpha)\\Delta p}{K_b}\n  $$\nThese derived models match those provided in the problem statement.\n\nThe inverse problem is solved by minimizing $J(\\boldsymbol{\\theta})$, which is a nonlinear least-squares problem. This is equivalent to finding $\\boldsymbol{\\theta}$ that minimizes the $L_2$ norm of a composite residual vector $\\mathbf{F}(\\boldsymbol{\\theta})$. This vector is constructed by assembling all weighted data residuals and the regularization residuals. For each experimental data case, the total residual vector $\\mathbf{F}(\\boldsymbol{\\theta})$ comprises:\n1.  **Weighted Data Residuals**: For each measurement point $i$, a residual component is formed as $(m_i^{\\mathrm{model}}(\\boldsymbol{\\theta}) - m_i^{\\mathrm{obs}}) / s_i$. The datasets for each case (A, B, C) include measurements of $\\varepsilon_v$ for drained tests, $\\Delta p$ and $\\varepsilon_v$ for undrained tests, and $\\varepsilon_v$ for unjacketed tests.\n2.  **Regularization Residuals**: The regularization term is expressed as the squared norm of a vector $\\mathbf{r}_{\\mathrm{reg}}(\\boldsymbol{\\theta}) = \\sqrt{\\lambda}\\,\\mathbf{L}(\\boldsymbol{\\theta}-\\boldsymbol{\\theta}_0)$. The components of this vector are appended to the data residuals. For the given diagonal scaling matrix $\\mathbf{L}=\\mathrm{diag}(1/K_{b,0}, 1/0.5, 1/M_0)$ and prior $\\boldsymbol{\\theta}_0 = [K_{b,0}, \\alpha_0, M_0]^T$, the regularization residuals are:\n    $$\n    \\mathbf{r}_{\\mathrm{reg}} = \\sqrt{\\lambda} \\begin{bmatrix} (K_b - K_{b,0})/K_{b,0} \\\\ (\\alpha - \\alpha_0)/0.5 \\\\ (M - M_0)/M_0 \\end{bmatrix}\n    $$\n    with the values $K_{b,0}=2500$, $\\alpha_0=0.85$, $M_0=7000$, and $\\lambda=10^{-6}$.\n\nThe optimization is performed using the `scipy.optimize.least_squares` function, which is designed for such problems. The Trust Region Reflective ('trf') algorithm is used as it robustly handles the specified bounds on the parameters: $K_b \\in [100.0, 50000.0]$, $\\alpha \\in [0.01, 0.99]$, and $M \\in [100.0, 100000.0]$. The prior vector $\\boldsymbol{\\theta}_0$ serves as the initial guess for the iterative optimization process.\n\nThe overall algorithm is implemented as follows:\n- The experimental data and common parameters (priors, regularization settings, bounds) are defined.\n- A loop iterates through the three test cases (A, B, C).\n- Inside the loop, a residual function is defined. This function takes a trial parameter vector $\\boldsymbol{\\theta}$ and computes the full residual vector $\\mathbf{F}(\\boldsymbol{\\theta})$ using the data for the current case.\n- The `least_squares` optimizer is called with this residual function, the initial guess $\\boldsymbol{\\theta}_0$, and the parameter bounds.\n- The optimized parameter vector $\\boldsymbol{\\theta}^*$ is extracted from the result.\n- The estimated parameters for all three cases are collected, rounded to six decimal places, and printed in the specified list-of-lists format.", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import least_squares\n\ndef solve():\n    \"\"\"\n    Solves the poroelastic inverse problem for three test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = {\n        \"A\": {\n            \"drained\": {\n                \"load\": np.array([10.0, 30.0, 50.0]),\n                \"meas\": np.array([0.005002, 0.014999, 0.025001]),\n                \"std\": 2e-6\n            },\n            \"undrained\": {\n                \"load\": np.array([10.0, 30.0, 50.0]),\n                \"meas_p\": np.array([7.02754386, 21.03263158, 35.1027193]),\n                \"std_p\": 5e-2,\n                \"meas_eps\": np.array([0.002190982456, 0.006579947368, 0.01096691228]),\n                \"std_eps\": 2e-6\n            },\n            \"unjacketed\": {\n                \"load\": np.array([5.0, 15.0, 25.0]),\n                \"meas\": np.array([0.000501, 0.001498, 0.002501]),\n                \"std\": 2e-6\n            }\n        },\n        \"B\": {\n            \"drained\": {\n                \"load\": np.array([8.0, 24.0, 40.0]),\n                \"meas\": np.array([0.008001, 0.023998, 0.040003]),\n                \"std\": 2e-6\n            },\n            \"undrained\": {\n                \"load\": np.array([8.0, 24.0, 40.0]),\n                \"meas_p\": np.array([7.38007244, 22.20121732, 36.9403622]),\n                \"std_p\": 5e-2,\n                \"meas_eps\": np.array([0.000755476, 0.002262429, 0.003775381]),\n                \"std_eps\": 2e-6\n            },\n            \"unjacketed\": {\n                \"load\": np.array([6.0, 18.0, 30.0]),\n                \"meas\": np.array([0.000119, 0.000361, 0.000599]),\n                \"std\": 2e-6\n            }\n        },\n        \"C\": {\n            \"drained\": {\n                \"load\": np.array([12.0, 36.0, 60.0]),\n                \"meas\": np.array([0.002402, 0.007198, 0.012002]),\n                \"std\": 2e-6\n            },\n            \"undrained\": {\n                \"load\": np.array([12.0, 36.0, 60.0]),\n                \"meas_p\": np.array([2.753091604, 8.234274812, 13.747459]),\n                \"std_p\": 5e-2,\n                \"meas_eps\": np.array([0.002289076336, 0.006871229009, 0.01144838165]),\n                \"std_eps\": 2e-6\n            },\n            \"unjacketed\": {\n                \"load\": np.array([7.0, 21.0, 35.0]),\n                \"meas\": np.array([0.001121, 0.003359, 0.005602]),\n                \"std\": 2e-6\n            }\n        }\n    }\n\n    # Parameter priors, regularization, and bounds\n    theta_0 = np.array([2500.0, 0.85, 7000.0])\n    lambda_reg = 1e-6\n    L = np.diag([1/2500.0, 1/0.5, 1/7000.0])\n    sqrt_lambda_L = np.sqrt(lambda_reg) * L\n    bounds = ([100.0, 0.01, 100.0], [50000.0, 0.99, 100000.0])\n    \n    all_results = []\n\n    for case_name in [\"A\", \"B\", \"C\"]:\n        case_data = test_cases[case_name]\n\n        def residual_function(theta):\n            Kb, alpha, M = theta\n            \n            # --- Data Residuals ---\n            # Drained\n            d_data = case_data[\"drained\"]\n            eps_d_model = d_data[\"load\"] / Kb\n            res_d = (eps_d_model - d_data[\"meas\"]) / d_data[\"std\"]\n\n            # Undrained\n            u_data = case_data[\"undrained\"]\n            Ku = Kb + alpha**2 * M\n            p_u_model = (alpha * M / Ku) * u_data[\"load\"]\n            eps_u_model = u_data[\"load\"] / Ku\n            res_p_u = (p_u_model - u_data[\"meas_p\"]) / u_data[\"std_p\"]\n            res_eps_u = (eps_u_model - u_data[\"meas_eps\"]) / u_data[\"std_eps\"]\n\n            # Unjacketed\n            uj_data = case_data[\"unjacketed\"]\n            eps_uj_model = (1.0 - alpha) * uj_data[\"load\"] / Kb\n            res_uj = (eps_uj_model - uj_data[\"meas\"]) / uj_data[\"std\"]\n\n            # --- Regularization Residuals ---\n            res_reg = sqrt_lambda_L @ (theta - theta_0)\n            \n            return np.concatenate([res_d, res_p_u, res_eps_u, res_uj, res_reg])\n\n        # Solve the nonlinear least-squares problem\n        result = least_squares(\n            fun=residual_function,\n            x0=theta_0,\n            bounds=bounds,\n            method='trf'\n        )\n\n        estimated_params = [round(p, 6) for p in result.x]\n        all_results.append(estimated_params)\n\n    # Final print statement in the exact required format.\n    print(all_results)\n\nsolve()\n```", "id": "2695874"}]}