{"hands_on_practices": [{"introduction": "Before we can study how texture evolves, we must first have a robust mathematical language to describe it. This exercise establishes the fundamental concepts of the Orientation Distribution Function (ODF) and the pole figure, which are the cornerstones of quantitative texture analysis. By deriving the properties of the simplest case—a statistically isotropic or \"random\" texture—you will gain a deep understanding of the normalization and physical meaning of these descriptive functions. [@problem_id:2693607]", "problem": "Consider a statistically isotropic polycrystal. Let the special orthogonal group of three-dimensional rotations be denoted by $SO(3)$, and let $\\mu$ be the (left- and right-) invariant Haar probability measure on $SO(3)$ normalized so that $\\mu(SO(3))=1$. The orientation distribution function (ODF) $f(g)$ is defined as the probability density of crystal orientations $g \\in SO(3)$ with respect to $\\mu$, so that $\\int_{SO(3)} f(g)\\,\\mathrm{d}\\mu(g) = 1$. A random texture is defined as one in which the probability of any measurable subset $A \\subset SO(3)$ depends only on its Haar measure, that is, $\\mathbb{P}(A) = \\mu(A)$.\n\n1) Starting from these definitions, show that a random texture corresponds to an ODF that is constant on $SO(3)$, namely $f(g)=1$ for $\\mu$-almost every $g \\in SO(3)$. Briefly explain how crystal symmetry (for example, a finite point group acting on $SO(3)$) leads to an equivalent representation in a fundamental zone (FZ) with a symmetry-reduced constant value, and how that value is chosen so that the symmetrized extension back to $SO(3)$ equals $f(g)=1$.\n\n2) Fix a crystallographic unit direction $\\mathbf{h} \\in \\mathbb{S}^{2}$ in the crystal frame. Define the full-sphere pole figure density $p(\\mathbf{u})$ (ignoring antipodal identification) as the pushforward of the ODF under the mapping $g \\mapsto \\mathbf{u}=g\\,\\mathbf{h}$:\n$$\np(\\mathbf{u}) \\;=\\; \\int_{SO(3)} f(g)\\,\\delta\\!\\big(\\mathbf{u}-g\\,\\mathbf{h}\\big)\\,\\mathrm{d}\\mu(g),\n$$\nwhere $\\delta(\\cdot)$ is the Dirac delta distribution on the unit sphere $\\mathbb{S}^{2}$ with respect to the surface-area measure $\\sigma$ normalized so that $\\int_{\\mathbb{S}^{2}} \\delta(\\mathbf{u}-\\mathbf{v})\\,\\mathrm{d}\\sigma(\\mathbf{u})=1$ for any fixed $\\mathbf{v}\\in\\mathbb{S}^{2}$. Using only the invariance properties of $\\mu$ and the definition of pushforward of measures, compute the resulting pole figure density $p(\\mathbf{u})$ for a random texture and determine its constant value over $\\mathbb{S}^{2}$.\n\nExpress your final answer as a single exact constant for $p(\\mathbf{u})$ in units of $\\mathrm{sr}^{-1}$ (steradian to the power $-1$). Do not round your answer. Do not include units in your final boxed answer. State the value corresponding to the full-sphere definition above (that is, without antipodal identification).", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It is based on the standard mathematical framework of quantitative texture analysis in solid mechanics and materials science. All definitions and conditions are formally provided, enabling a rigorous derivation. The problem is therefore valid.\n\nThe problem consists of two parts. I shall address each in sequence.\n\nPart 1: The nature of the Orientation Distribution Function (ODF) for a random texture.\n\nAn ODF, $f(g)$, is the probability density function for crystal orientations $g \\in SO(3)$ with respect to the normalized Haar measure $\\mu$. The probability of finding an orientation within a measurable subset $A \\subset SO(3)$ is given by the integral\n$$ \\mathbb{P}(A) = \\int_{A} f(g)\\,\\mathrm{d}\\mu(g) $$\nThe problem defines a random texture as one for which this probability is equal to the Haar measure of the set, $\\mu(A)$.\n$$ \\mathbb{P}(A) = \\mu(A) $$\nThe Haar measure of a set $A$ can also be written in integral form as\n$$ \\mu(A) = \\int_{A} 1 \\cdot \\mathrm{d}\\mu(g) $$\nBy equating the two expressions for $\\mathbb{P}(A)$, we have\n$$ \\int_{A} f(g)\\,\\mathrm{d}\\mu(g) = \\int_{A} 1 \\cdot \\mathrm{d}\\mu(g) $$\nThis equality must hold for any measurable set $A \\subset SO(3)$. By the fundamental properties of measures (specifically, the uniqueness of the Radon-Nikodym derivative), if two absolutely continuous measures have the same value on all measurable sets, their densities with respect to the base measure must be equal almost everywhere. In this case, the density of the probability measure $\\mathbb{P}$ is $f(g)$, and the density of the measure $\\mu$ with respect to itself is the constant function $1$. Therefore, we must have\n$$ f(g) = 1 $$\nfor $\\mu$-almost every $g \\in SO(3)$. The total probability is conserved, as $\\int_{SO(3)} 1 \\cdot \\mathrm{d}\\mu(g) = \\mu(SO(3)) = 1$. This completes the first part of the proof.\n\nNext, we consider the effect of crystal symmetry. The crystal lattice is invariant under a finite set of rotations, which form a point group $G_c \\subset SO(3)$ of order $|G_c|$. This means orientations $g$ and $g_c g$ for any $g_c \\in G_c$ are physically indistinguishable. Consequently, the ODF must be invariant under the left action of the crystal symmetry group:\n$$ f(g_c g) = f(g) \\quad \\forall g_c \\in G_c, \\forall g \\in SO(3) $$\nThe set of all orientations is partitioned into equivalence classes. A fundamental zone (FZ) is a subset of $SO(3)$ containing exactly one representative from each equivalence class (ignoring boundaries). The group $SO(3)$ is tiled by $|G_c|$ copies of the FZ. Due to the invariance of the Haar measure, the measure of the fundamental zone is $\\mu(\\text{FZ}) = \\mu(SO(3)) / |G_c| = 1/|G_c|$.\n\nThe normalization condition for the symmetric ODF $f(g)$ over all of $SO(3)$ can be related to an integral over the FZ:\n$$ 1 = \\int_{SO(3)} f(g)\\,\\mathrm{d}\\mu(g) = \\sum_{g_c \\in G_c} \\int_{g_c\\text{FZ}} f(g)\\,\\mathrm{d}\\mu(g) $$\nUsing a change of variables $g' = g_c^{-1}g$ and the left-invariance of $\\mu$, followed by the symmetry property of $f$, we get:\n$$ 1 = \\sum_{g_c \\in G_c} \\int_{\\text{FZ}} f(g_c g')\\,\\mathrm{d}\\mu(g') = \\sum_{g_c \\in G_c} \\int_{\\text{FZ}} f(g')\\,\\mathrm{d}\\mu(g') = |G_c| \\int_{\\text{FZ}} f(g)\\,\\mathrm{d}\\mu(g) $$\nSo, $\\int_{\\text{FZ}} f(g)\\,\\mathrm{d}\\mu(g) = 1/|G_c|$. For a random texture, where $f(g)=1$ on $SO(3)$, its value is also $1$ within the FZ. The integral is $\\int_{\\text{FZ}} 1 \\cdot \\mathrm{d}\\mu(g) = \\mu(\\text{FZ}) = 1/|G_c|$, which is consistent.\n\nIn practice, it is common to define a \"symmetry-reduced\" ODF, let us call it $f_{\\text{FZ}}(g)$, which is defined only on the FZ and is normalized such that $\\int_{\\text{FZ}} f_{\\text{FZ}}(g)\\,\\mathrm{d}\\mu(g) = 1$. Comparing this with the previous integral relation, we see the relationship must be $f_{\\text{FZ}}(g) = |G_c|f(g)$ for $g \\in \\text{FZ}$. For a random texture where $f(g)=1$, the symmetry-reduced constant value is $f_{\\text{FZ}}(g) = |G_c|$. This value is often expressed in \"multiples of random distribution\" (MRD), where a value of $1$ MRD corresponds to $f(g)=1$.\n\nTo extend this representation back to $SO(3)$, we are given a function $f_{\\text{FZ}}$ on the FZ and must define $f(g)$ for all $g \\in SO(3)$. Any $g$ can be written as $g = g_c g_0$ for some $g_c \\in G_c$ and $g_0 \\in \\text{FZ}$. The extension is defined by $f(g) = \\frac{1}{|G_c|} f_{\\text{FZ}}(g_0)$. If we start with the constant value $f_{\\text{FZ}}(g) = |G_c|$ in the FZ, this construction gives $f(g) = \\frac{1}{|G_c|} |G_c| = 1$ for all $g \\in SO(3)$, which is the correct ODF for a random texture.\n\nPart 2: Computation of the pole figure for a random texture.\n\nThe pole figure density $p(\\mathbf{u})$ is defined as:\n$$ p(\\mathbf{u}) = \\int_{SO(3)} f(g)\\,\\delta(\\mathbf{u}-g\\,\\mathbf{h})\\,\\mathrm{d}\\mu(g) $$\nFor a random texture, we substitute $f(g) = 1$:\n$$ p(\\mathbf{u}) = \\int_{SO(3)} \\delta(\\mathbf{u}-g\\,\\mathbf{h})\\,\\mathrm{d}\\mu(g) $$\nFirst, we demonstrate that $p(\\mathbf{u})$ must be a constant function on the sphere $\\mathbb{S}^2$. Let $k \\in SO(3)$ be an arbitrary rotation. We evaluate $p(k\\mathbf{u})$:\n$$ p(k\\mathbf{u}) = \\int_{SO(3)} \\delta(k\\mathbf{u}-g\\,\\mathbf{h})\\,\\mathrm{d}\\mu(g) $$\nThe delta function has the property $\\delta(k\\mathbf{v}) = \\delta(\\mathbf{v})$ for any rotation $k$ since it is an isometry (Jacobian is $1$). A more formal way is to say $\\delta(k\\mathbf{u}-g\\mathbf{h}) = \\delta(k(\\mathbf{u}-k^{-1}g\\mathbf{h}))$ and use the property of delta distributions under diffeomorphisms. So,\n$$ p(k\\mathbf{u}) = \\int_{SO(3)} \\delta(\\mathbf{u}-k^{-1}g\\,\\mathbf{h})\\,\\mathrm{d}\\mu(g) $$\nWe perform a change of integration variable $g' = k^{-1}g$. This implies $g = kg'$. The Haar measure $\\mu$ is left-invariant, so $\\mathrm{d}\\mu(g) = \\mathrm{d}\\mu(kg') = \\mathrm{d}\\mu(g')$. The integration is over the entire group, so the domain is unchanged. The integral becomes:\n$$ p(k\\mathbf{u}) = \\int_{SO(3)} \\delta(\\mathbf{u}-g'\\mathbf{h})\\,\\mathrm{d}\\mu(g') $$\nThe right-hand side is precisely the definition of $p(\\mathbf{u})$. Thus, we have shown that $p(k\\mathbf{u}) = p(\\mathbf{u})$ for any rotation $k \\in SO(3)$ and any $\\mathbf{u} \\in \\mathbb{S}^2$. Since $SO(3)$ acts transitively on $\\mathbb{S}^2$, this implies $p(\\mathbf{u})$ must be constant for all $\\mathbf{u} \\in \\mathbb{S}^2$. Let us denote this constant value by $C$, so $p(\\mathbf{u}) = C$.\n\nTo find the value of $C$, we integrate $p(\\mathbf{u})$ over the entire sphere $\\mathbb{S}^2$. The pole figure is a probability distribution, so its integral must be $1$. We verify this from the definitions:\n$$ \\int_{\\mathbb{S}^2} p(\\mathbf{u})\\,\\mathrm{d}\\sigma(\\mathbf{u}) = \\int_{\\mathbb{S}^2} \\left[ \\int_{SO(3)} f(g)\\,\\delta(\\mathbf{u}-g\\,\\mathbf{h})\\,\\mathrm{d}\\mu(g) \\right] \\mathrm{d}\\sigma(\\mathbf{u}) $$\nSince the integrand is non-negative, we can apply Fubini's theorem to switch the order of integration:\n$$ = \\int_{SO(3)} f(g) \\left[ \\int_{\\mathbb{S}^2} \\delta(\\mathbf{u}-g\\,\\mathbf{h})\\,\\mathrm{d}\\sigma(\\mathbf{u}) \\right] \\mathrm{d}\\mu(g) $$\nThe inner integral is over $\\mathbb{S}^2$. For any fixed $g$, the vector $\\mathbf{v} = g\\mathbf{h}$ is a point on the sphere. The problem states that $\\int_{\\mathbb{S}^2} \\delta(\\mathbf{u}-\\mathbf{v})\\,\\mathrm{d}\\sigma(\\mathbf{u}) = 1$ for any fixed $\\mathbf{v}$. Thus, the inner integral evaluates to $1$ for all $g$.\nThe expression simplifies to:\n$$ = \\int_{SO(3)} f(g) \\cdot 1 \\,\\mathrm{d}\\mu(g) = \\int_{SO(3)} f(g)\\,\\mathrm{d}\\mu(g) $$\nThis is the normalization condition for the ODF, which is equal to $1$.\nSo, we have established that $\\int_{\\mathbb{S}^2} p(\\mathbf{u})\\,\\mathrm{d}\\sigma(\\mathbf{u}) = 1$.\nSubstituting $p(\\mathbf{u}) = C$, we obtain:\n$$ \\int_{\\mathbb{S}^2} C\\,\\mathrm{d}\\sigma(\\mathbf{u}) = C \\int_{\\mathbb{S}^2} \\mathrm{d}\\sigma(\\mathbf{u}) = 1 $$\nThe integral $\\int_{\\mathbb{S}^2} \\mathrm{d}\\sigma(\\mathbf{u})$ is the total surface area of the unit sphere, which is $4\\pi$.\n$$ C \\cdot (4\\pi) = 1 $$\nSolving for $C$ gives:\n$$ C = \\frac{1}{4\\pi} $$\nThe measure $\\sigma$ is the surface-area measure on the unit sphere, so its integral $\\int_{\\mathbb{S}^2} \\mathrm{d}\\sigma(\\mathbf{u})$ has units of solid angle (steradians, sr). Thus, $p(\\mathbf{u})$ has units of $\\mathrm{sr}^{-1}$. The constant value of the pole figure density for a random texture is $\\frac{1}{4\\pi} \\, \\mathrm{sr}^{-1}$.", "answer": "$$\\boxed{\\frac{1}{4\\pi}}$$", "id": "2693607"}, {"introduction": "The orientation of a crystal dictates which of its slip systems are most easily activated under a given stress, so the statistical distribution of orientations (the texture) governs the anisotropic plastic response of a polycrystal. This practice bridges the gap between microscopic slip and macroscopic behavior using the classic Taylor model of polycrystal plasticity. By computing the average Taylor factor, you will directly quantify how texture influences the material's yield strength, an essential skill in predicting mechanical performance. [@problem_id:2693559]", "problem": "A face-centered cubic (FCC) polycrystal undergoes plastic deformation by crystallographic slip on the $\\{111\\}\\langle 110 \\rangle$ family (twelve slip systems). Adopt the Taylor hypothesis of homogeneous deformation across all grains. For a given grain with lattice orientation $\\mathbf{R} \\in \\mathrm{SO}(3)$ (rotation from crystal to sample frame), the plastic strain-rate tensor in the sample frame is related to the slip rates $\\{\\dot{\\gamma}_s\\}_{s=1}^{12}$ by\n$$\n\\mathbf{D}^{p} \\;=\\; \\sum_{s=1}^{12} \\dot{\\gamma}_s \\, \\mathbf{m}_s(\\mathbf{R}),\n\\qquad \\mathbf{m}_s(\\mathbf{R}) \\;=\\; \\operatorname{sym}\\!\\left(\\mathbf{R}\\,\\mathbf{d}_s \\otimes \\mathbf{R}\\,\\mathbf{n}_s\\right),\n$$\nwhere $\\mathbf{d}_s$ and $\\mathbf{n}_s$ are, respectively, the slip direction and slip-plane normal (unit vectors) of slip system $s$ expressed in the crystal frame, and $\\operatorname{sym}(\\cdot)$ extracts the symmetric part.\n\nLet the macroscopic strain-rate tensor in the sample frame correspond to plastic incompressible uniaxial tension along the $z$-axis, namely\n$$\n\\mathbf{D} \\;=\\; \\begin{pmatrix}\n-\\tfrac{1}{2}\\,\\dot{\\varepsilon} & 0 & 0 \\\\\n0 & -\\tfrac{1}{2}\\,\\dot{\\varepsilon} & 0 \\\\\n0 & 0 & \\dot{\\varepsilon}\n\\end{pmatrix},\n$$\nwith von Mises equivalent strain-rate\n$$\n\\dot{\\varepsilon}_{\\mathrm{eq}} \\;=\\; \\sqrt{\\tfrac{2}{3}\\,\\mathbf{D}:\\mathbf{D}} \\;=\\; \\dot{\\varepsilon}.\n$$\n\nFor each orientation $\\mathbf{R}$, define the orientation-dependent Taylor factor $M(\\mathbf{R})$ as the optimal value of the following minimum-shear problem\n$$\nM(\\mathbf{R}) \\;=\\; \\frac{1}{\\dot{\\varepsilon}_{\\mathrm{eq}}}\\;\n\\min_{\\{\\dot{\\gamma}_s\\}} \\left\\{ \\sum_{s=1}^{12} \\left|\\dot{\\gamma}_s\\right| \\;:\\; \\sum_{s=1}^{12} \\dot{\\gamma}_s\\,\\mathbf{m}_s(\\mathbf{R}) \\;=\\; \\mathbf{D} \\right\\}.\n$$\n\nAssume a macroscopically random texture, i.e., a uniform orientation distribution function over $\\mathrm{SO}(3)$ with the usual Haar measure $d\\mu(\\mathbf{R})$. The polycrystal Taylor factor is then defined as the orientation average\n$$\n\\overline{M} \\;=\\; \\int_{\\mathrm{SO}(3)} M(\\mathbf{R})\\, d\\mu(\\mathbf{R}).\n$$\n\nStarting from the above definitions, and using only fundamental kinematics, rate-independent crystal plasticity with $\\{111\\}\\langle 110 \\rangle$ slip, plastic incompressibility, and Taylor’s minimum-shear principle, derive a computable formulation for $M(\\mathbf{R})$ and its orientation average $\\overline{M}$. Then evaluate $\\overline{M}$ numerically for FCC under uniaxial tension as specified. Round your final numerical answer for $\\overline{M}$ to three significant figures. The answer is dimensionless and must be reported without units.", "solution": "The problem statement will first be validated for scientific soundness, consistency, and completeness.\n\nProblem Validation\n\nStep 1: Extract Givens\n-   **Material and Deformation**: A face-centered cubic (FCC) polycrystal undergoing plastic deformation by slip on the $\\{111\\}\\langle 110 \\rangle$ family, which constitutes $12$ slip systems.\n-   **Kinematic Assumption**: The Taylor hypothesis of homogeneous deformation, implying the grain-level plastic strain-rate tensor $\\mathbf{D}^p$ equals the macroscopic strain-rate tensor $\\mathbf{D}$.\n-   **Grain Orientation**: A grain's lattice orientation is given by a rotation $\\mathbf{R} \\in \\mathrm{SO}(3)$ from the crystal frame to the sample frame.\n-   **Plastic Strain-Rate**: The plastic strain-rate tensor is given by the sum over slip systems: $\\mathbf{D}^{p} = \\sum_{s=1}^{12} \\dot{\\gamma}_s \\, \\mathbf{m}_s(\\mathbf{R})$.\n-   **Schmid Tensor**: The symmetric Schmid tensor for slip system $s$ in the sample frame is $\\mathbf{m}_s(\\mathbf{R}) = \\operatorname{sym}(\\mathbf{R}\\,\\mathbf{d}_s \\otimes \\mathbf{R}\\,\\mathbf{n}_s)$, where $\\mathbf{d}_s$ and $\\mathbf{n}_s$ are the slip direction and slip-plane normal in the crystal frame.\n-   **Macroscopic Loading**: The macroscopic strain-rate tensor corresponds to incompressible uniaxial tension along the $z$-axis: $\\mathbf{D} = \\begin{pmatrix} -\\tfrac{1}{2}\\,\\dot{\\varepsilon} & 0 & 0 \\\\ 0 & -\\tfrac{1}{2}\\,\\dot{\\varepsilon} & 0 \\\\ 0 & 0 & \\dot{\\varepsilon} \\end{pmatrix}$.\n-   **Equivalent Strain-Rate**: The von Mises equivalent strain-rate is $\\dot{\\varepsilon}_{\\mathrm{eq}} = \\sqrt{\\tfrac{2}{3}\\,\\mathbf{D}:\\mathbf{D}} = \\dot{\\varepsilon}$.\n-   **Orientation-Dependent Taylor Factor**: $M(\\mathbf{R})$ is defined by the optimization problem: $M(\\mathbf{R}) = \\frac{1}{\\dot{\\varepsilon}_{\\mathrm{eq}}}\\; \\min_{\\{\\dot{\\gamma}_s\\}} \\left\\{ \\sum_{s=1}^{12} |\\dot{\\gamma}_s| \\;:\\; \\sum_{s=1}^{12} \\dot{\\gamma}_s\\,\\mathbf{m}_s(\\mathbf{R}) = \\mathbf{D} \\right\\}$.\n-   **Texture**: The polycrystal has a macroscopically random texture, corresponding to a uniform orientation distribution function over $\\mathrm{SO}(3)$.\n-   **Polycrystal Taylor Factor**: The average Taylor factor is $\\overline{M} = \\int_{\\mathrm{SO}(3)} M(\\mathbf{R})\\, d\\mu(\\mathbf{R})$, where $d\\mu(\\mathbf{R})$ is the Haar measure.\n-   **Task**: Derive a computable formulation for $M(\\mathbf{R})$ and $\\overline{M}$, and evaluate $\\overline{M}$ numerically for the specified case. The result for $\\overline{M}$ should be rounded to three significant figures.\n\nStep 2: Validate Using Extracted Givens\nThe problem is firmly grounded in the classical theory of crystal plasticity, specifically the Taylor model of polycrystal deformation. All concepts, including the description of crystallographic slip, the Schmid tensor, the Taylor hypothesis, and the definition of the Taylor factor, are standard and well-established in solid mechanics and materials science. The problem is self-contained, providing all necessary definitions and constraints. The mathematical formulation is a well-posed linear programming problem for $M(\\mathbf{R})$ followed by a well-defined integration over the special orthogonal group $\\mathrm{SO}(3)$. There are no scientific or factual unsoundness, no contradictions, no ambiguities, and no reliance on subjective claims. The problem is a non-trivial, standard exercise in computational materials science.\n\nStep 3: Verdict and Action\nThe problem is valid. I will proceed with a complete solution.\n\nSolution\n\nThe task is to derive a computable formulation for the orientation-dependent Taylor factor $M(\\mathbf{R})$ and its polycrystal average $\\overline{M}$, and then to provide a numerical value for $\\overline{M}$ for an FCC polycrystal under uniaxial tension.\n\nThe Taylor factor $M(\\mathbf{R})$ is defined via a minimization problem, which is recognized as the primal form of a linear program. A more computationally convenient formulation is obtained by considering the dual problem, which connects to the principle of maximum plastic work.\n\nThe plastic work rate per unit volume is given by $W = \\mathbf{S} : \\mathbf{D}^p$, where $\\mathbf{S}$ is the deviatoric stress tensor. Under the Taylor hypothesis, $\\mathbf{D}^p = \\mathbf{D}$. The work rate can also be expressed as the sum of work dissipated on all slip systems: $W = \\sum_{s=1}^{12} \\tau_s \\dot{\\gamma}_s$, where $\\tau_s = \\mathbf{S} : \\mathbf{m}_s(\\mathbf{R})$ is the resolved shear stress on system $s$. For rate-independent plasticity, slip on system $s$ is active ($\\dot{\\gamma}_s \\neq 0$) only if the resolved shear stress reaches a critical value, $\\tau_c$. Thus, $\\tau_s = \\tau_c \\operatorname{sgn}(\\dot{\\gamma}_s)$ for active systems. Substituting this into the work expression yields $W = \\sum_{s=1}^{12} \\tau_c \\operatorname{sgn}(\\dot{\\gamma}_s) \\dot{\\gamma}_s = \\tau_c \\sum_{s=1}^{12} |\\dot{\\gamma}_s|$.\n\nEquating the two expressions for the work rate, we have $\\mathbf{S} : \\mathbf{D} = \\tau_c \\sum_{s=1}^{12} |\\dot{\\gamma}_s|$. We can rearrange this to find an expression for the total shear: $\\sum_{s=1}^{12} |\\dot{\\gamma}_s| = \\frac{\\mathbf{S} : \\mathbf{D}}{\\tau_c}$.\n\nSubstituting this into the definition of $M(\\mathbf{R})$:\n$$\nM(\\mathbf{R}) = \\frac{1}{\\dot{\\varepsilon}_{\\mathrm{eq}}} \\min_{\\{\\dot{\\gamma}_s\\}} \\left\\{ \\frac{\\mathbf{S} : \\mathbf{D}}{\\tau_c} \\right\\} \\quad \\text{s.t.} \\quad \\sum_{s=1}^{12} \\dot{\\gamma}_s \\mathbf{m}_s(\\mathbf{R}) = \\mathbf{D}.\n$$\nThe stress $\\mathbf{S}$ must satisfy the yield criterion for all slip systems. The Schmid law states that for any system $s$ (active or inactive), the magnitude of the resolved shear stress cannot exceed the critical value: $|\\tau_s| = |\\mathbf{S} : \\mathbf{m}_s(\\mathbf{R})| \\le \\tau_c$.\n\nLet us define a normalized deviatoric stress $\\mathbf{\\Sigma} = \\mathbf{S} / \\tau_c$ and a normalized strain-rate tensor $\\mathbf{U} = \\mathbf{D} / \\dot{\\varepsilon}_{\\mathrm{eq}}$. The Taylor factor becomes $M(\\mathbf{R}) = \\mathbf{\\Sigma} : \\mathbf{U}$. The yield condition becomes $|\\mathbf{\\Sigma} : \\mathbf{m}_s(\\mathbf{R})| \\le 1$ for all $s = 1, \\dots, 12$.\n\nAccording to the principle of maximum plastic work (as formulated by Bishop and Hill), for a given strain rate $\\mathbf{D}$, the operative stress state is the one that maximizes the plastic work rate, from all stress states that satisfy the yield criterion. This establishes the dual problem: $M(\\mathbf{R})$ is the maximum value of $\\mathbf{\\Sigma} : \\mathbf{U}$ over all allowable stress states $\\mathbf{\\Sigma}$.\n\nThus, the computable formulation for $M(\\mathbf{R})$ is given by the following linear program:\n$$\nM(\\mathbf{R}) = \\max_{\\mathbf{\\Sigma}} \\{ \\mathbf{\\Sigma} : \\mathbf{U} \\} \\quad \\text{subject to:} \\quad\n\\begin{cases}\n\\mathrm{tr}(\\mathbf{\\Sigma}) = 0 \\\\\n|\\mathbf{\\Sigma} : \\mathbf{m}_s(\\mathbf{R})| \\le 1 \\quad \\text{for } s = 1, \\dots, 12.\n\\end{cases}\n$$\nThe variables of this optimization problem are the $5$ independent components of the deviatoric stress tensor $\\mathbf{\\Sigma}$. The objective function is linear in these components, and there are $2 \\times 12 = 24$ linear inequality constraints.\n\nFor the given uniaxial tensile loading, $\\dot{\\varepsilon}_{\\mathrm{eq}} = \\dot{\\varepsilon}$, so the normalized strain-rate tensor is:\n$$\n\\mathbf{U} = \\frac{\\mathbf{D}}{\\dot{\\varepsilon}_{\\mathrm{eq}}} = \\begin{pmatrix} -1/2 & 0 & 0 \\\\ 0 & -1/2 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}.\n$$\n\nThe polycrystal Taylor factor $\\overline{M}$ is the statistical average of $M(\\mathbf{R})$ over all orientations, assuming a random texture. The formulation is the integral:\n$$\n\\overline{M} = \\int_{\\mathrm{SO}(3)} M(\\mathbf{R})\\, d\\mu(\\mathbf{R}).\n$$\nTo evaluate this integral, the orientation space $\\mathrm{SO}(3)$ is parameterized, for example, by Euler angles $(\\phi_1, \\Phi, \\phi_2)$. The invariant Haar measure is $d\\mu(\\mathbf{R}) = \\frac{1}{8\\pi^2} \\sin(\\Phi) d\\phi_1 d\\Phi d\\phi_2$. The integral becomes:\n$$\n\\overline{M} = \\frac{1}{8\\pi^2} \\int_0^{2\\pi} \\int_0^\\pi \\int_0^{2\\pi} M(\\phi_1, \\Phi, \\phi_2) \\sin(\\Phi) \\,d\\phi_1 \\,d\\Phi \\,d\\phi_2.\n$$\n\nThis integral is computed numerically. The procedure is as follows:\n$1$. The orientation space is discretized into a set of $N$ orientations $\\{\\mathbf{R}_k\\}_{k=1}^N$, with corresponding volume fractions or weights $w_k$.\n$2$. For each orientation $\\mathbf{R}_k$, the $12$ Schmid tensors $\\mathbf{m}_s(\\mathbf{R}_k)$ are computed. The FCC slip systems $\\{\\mathbf{d}_s, \\mathbf{n}_s\\}_{s=1}^{12}$ are standard crystallographic vectors.\n$3$. For each $\\mathbf{R}_k$, the linear programming problem for $M(\\mathbf{R}_k)$ is solved to find the orientation-dependent Taylor factor.\n$4$. The average Taylor factor is approximated by the weighted sum: $\\overline{M} \\approx \\sum_{k=1}^N w_k M(\\mathbf{R}_k)$.\n\nThis computational procedure is a cornerstone of quantitative texture analysis. For an FCC polycrystal deforming by $\\{111\\}\\langle 110 \\rangle$ slip under uniaxial tension with a random texture, this calculation has been performed historically and is a classic result in the field. The numerical evaluation of the integral, carried out with sufficient precision over a fine grid of orientations, yields a converged value.\n\nThe result of this established numerical calculation is $\\overline{M} \\approx 3.06$.", "answer": "$$\n\\boxed{3.06}\n$$", "id": "2693559"}, {"introduction": "The evolution of texture is governed by the rotation of the crystal lattice within each grain, driven by plastic deformation. This hands-on coding exercise challenges you to implement a modern, numerically robust algorithm for integrating this orientation evolution in time. By using a Lie group integrator based on the exponential map, you will ensure that your simulation correctly preserves the geometric structure of the space of rotations, a critical aspect for accuracy in long-term predictions of texture development. [@problem_id:2693556]", "problem": "Consider the kinematics of elastic lattice rotation in crystal plasticity for polycrystals, where the crystal orientation is represented by a proper orthogonal matrix $R \\in \\mathrm{SO}(3)$, the Special Orthogonal group in three dimensions. The evolution equation for a smooth orientation path $R(t)$ driven by a lattice spin is the first-order matrix ordinary differential equation $ \\dot{R}(t) R(t)^{T} = \\Omega(t) $, where $ \\Omega(t) \\in \\mathbb{R}^{3 \\times 3} $ is skew-symmetric for all $t$ and $ (\\cdot)^{T} $ denotes transpose. In the context of texture evolution in polycrystals, it is essential that any numerical time-stepping method preserves the invariants of $ \\mathrm{SO}(3) $, namely orthonormality and unit determinant.\n\nStarting from the fundamental base that: (i) $ \\Omega(t) $ is skew-symmetric, (ii) $ \\mathrm{SO}(3) $ is a Lie group generated by skew-symmetric matrices via the matrix exponential, and (iii) the kinematic relation $ \\dot{R} R^{T} = \\Omega $ implies invariance of $ R^{T} R $ when $ \\Omega $ is skew-symmetric, design and implement a time-stepping algorithm that advances an orientation $ R_n $ to $ R_{n+1} $ over a time step of size $ \\Delta t $ by using the exact Lie-group action induced by a constant-in-step skew-symmetric generator. Your implementation must compute, for each test case below, the following three scalar diagnostics:\n- The orthonormality error $ \\varepsilon_{\\mathrm{orth}} = \\lVert R_{N}^{T} R_{N} - I \\rVert_{F} $, where $ \\lVert \\cdot \\rVert_{F} $ is the Frobenius norm and $ I $ is the identity matrix.\n- The determinant error $ \\varepsilon_{\\det} = \\lvert \\det(R_{N}) - 1 \\rvert $.\n- The consistency error $ \\varepsilon_{\\mathrm{cons}} = \\lVert R_{N} - \\widehat{R}(T) \\rVert_{F} $, where $ T = N \\Delta t $ and $ \\widehat{R}(T) $ is the orientation obtained in one step at the total time $ T $ using the same constant-in-step generator.\n\nYour program must:\n- Construct the skew-symmetric matrix $ \\Omega $ from an angular velocity vector $ \\omega \\in \\mathbb{R}^{3} $ using the standard map $ \\omega \\mapsto [\\omega]_{\\times} $, such that for $ \\omega = (\\omega_{1}, \\omega_{2}, \\omega_{3}) $, one has $ [\\omega]_{\\times} = \\begin{bmatrix} 0 & -\\omega_{3} & \\omega_{2} \\\\ \\omega_{3} & 0 & -\\omega_{1} \\\\ -\\omega_{2} & \\omega_{1} & 0 \\end{bmatrix} $. \n- Advance $ R $ over $ N $ steps of size $ \\Delta t $ under a constant $ \\Omega $ per step.\n- Independently compute $ \\widehat{R}(T) $ from $ R_{0} $ over the total time $ T = N \\Delta t $ using the same constant generator, and then report the diagnostics.\n\nAngles, where applicable, must be interpreted in radians. All outputs are dimensionless real numbers.\n\nTest Suite:\nUse the following five test cases. For each case, specify $ \\omega $, $ \\Delta t $, $ N $, and the initial rotation $ R_{0} $ as follows. If $ R_{0} $ is given via an axis $ a \\in \\mathbb{R}^{3} $ and angle $ \\theta \\in \\mathbb{R} $, then $ R_{0} $ must be the unique rotation generated by the Rodrigues formula from unit axis $ \\hat{a} = a / \\lVert a \\rVert $ and angle $ \\theta $. All angles are in radians.\n\n- Test $1$ (general case): \n  $ \\omega = (0.2, -0.3, 0.1) $, $ \\Delta t = 0.05 $, $ N = 10 $, \n  $ R_{0} $ from axis $ a = (0.4, 0.2, -0.1) $ and angle $ \\theta = 0.7 $.\n- Test $2$ (zero time step): \n  $ \\omega = (0.2, -0.3, 0.1) $, $ \\Delta t = 0.0 $, $ N = 1 $, \n  $ R_{0} = I $.\n- Test $3$ (zero generator): \n  $ \\omega = (0.0, 0.0, 0.0) $, $ \\Delta t = 1.7 $, $ N = 5 $, \n  $ R_{0} $ from axis $ a = (-0.3, 0.6, 0.2) $ and angle $ \\theta = 1.3 $.\n- Test $4$ (large rotation per step): \n  $ \\omega = (3.0, -4.0, 5.0) $, $ \\Delta t = 0.3 $, $ N = 20 $, \n  $ R_{0} $ from axis $ a = (1.0, 1.0, 1.0) $ and angle $ \\theta = 0.9 $.\n- Test $5$ (near-zero generator, long time): \n  $ \\omega = (1.0 \\times 10^{-8}, -2.0 \\times 10^{-8}, 3.0 \\times 10^{-8}) $, $ \\Delta t = 1000.0 $, $ N = 1 $, \n  $ R_{0} $ from axis $ a = (0.7, -0.4, 0.2) $ and angle $ \\theta = 0.5 $.\n\nProgram Output Specification:\n- For each test case $k \\in \\{1,2,3,4,5\\}$, compute and append the three diagnostics $ (\\varepsilon_{\\mathrm{orth}}^{(k)}, \\varepsilon_{\\det}^{(k)}, \\varepsilon_{\\mathrm{cons}}^{(k)}) $ to a single flat list in this order across tests.\n- Your program should produce a single line of output containing the results as a comma-separated list of floating-point numbers in scientific notation with exactly $12$ significant digits, enclosed in square brackets. For example, a valid output format with two hypothetical numbers is $[1.234000000000e+00,5.670000000000e-01]$.", "solution": "The problem presented is a well-posed and scientifically sound exercise in computational kinematics, specifically concerning the integration of orientation evolution in crystalline materials. It is grounded in the established mathematical framework of Lie groups and Lie algebras, which is the standard and most robust approach for handling finite rotations in solid mechanics. All provided data and definitions are clear, consistent, and sufficient for the task. The problem is therefore deemed valid and a solution will be provided.\n\nThe core of the problem lies in solving the first-order matrix ordinary differential equation governing the evolution of the crystal orientation matrix $R(t) \\in \\mathrm{SO}(3)$:\n$$\n\\dot{R}(t) = \\Omega(t) R(t)\n$$\nThis is obtained by right-multiplying the given kinematic relation $\\dot{R}(t) R(t)^{T} = \\Omega(t)$ by $R(t)$ and using the property $R(t)^{T}R(t) = I$. Here, $\\Omega(t)$ is the skew-symmetric lattice spin tensor.\n\nThe problem specifies that for the purpose of a numerical time-stepping algorithm, the generator $\\Omega$ is assumed to be constant over each time step of size $\\Delta t$. For a constant matrix $\\Omega$, the differential equation $\\dot{R} = \\Omega R$ with initial condition $R(t_n) = R_n$ has the exact solution:\n$$\nR(t) = \\exp((t-t_n)\\Omega) R_n\n$$\nwhere $\\exp(\\cdot)$ denotes the matrix exponential. Evaluating this at time $t_{n+1} = t_n + \\Delta t$ gives the time-stepping scheme:\n$$\nR_{n+1} = \\Delta R \\cdot R_n\n$$\nwhere the incremental rotation matrix $\\Delta R$ is given by:\n$$\n\\Delta R = \\exp(\\Delta t \\, \\Omega)\n$$\nA fundamental property of the matrix exponential is that if its argument is a skew-symmetric matrix (an element of the Lie algebra $\\mathfrak{so}(3)$), the resulting matrix is a proper orthogonal matrix (an element of the Lie group $\\mathrm{SO}(3)$). This means that $\\Delta R \\in \\mathrm{SO}(3)$, and consequently, if $R_n \\in \\mathrm{SO}(3)$, then the updated orientation $R_{n+1}$ will also be in $\\mathrm{SO}(3)$, as $\\mathrm{SO}(3)$ is closed under matrix multiplication. This \"exponential map\" approach is thus structure-preserving, ensuring that the numerical solution correctly remains on the manifold of rotations, thereby avoiding the singularities and complexities of other orientation parameterizations.\n\nThe implementation proceeds in the following steps:\n\n1.  **Initialization**: For each test case, the initial rotation matrix $R_0$ is established. If specified via an axis $a$ and angle $\\theta$, $R_0$ is computed using Rodrigues' rotation formula. First, the axis is normalized: $\\hat{a} = a / \\lVert a \\rVert_2$. A skew-symmetric matrix $K = [\\hat{a}]_{\\times}$ is formed from $\\hat{a}$. The rotation matrix is then:\n    $$\n    R_0 = I + (\\sin\\theta) K + (1 - \\cos\\theta) K^2\n    $$\n    where $I$ is the $3 \\times 3$ identity matrix.\n\n2.  **Generator Construction**: The constant angular velocity vector $\\omega$ is used to construct the constant skew-symmetric generator $\\Omega$:\n    $$\n    \\Omega = [\\omega]_{\\times} = \\begin{bmatrix} 0 & -\\omega_{3} & \\omega_{2} \\\\ \\omega_{3} & 0 & -\\omega_{1} \\\\ -\\omega_{2} & \\omega_{1} & 0 \\end{bmatrix}\n    $$\n\n3.  **Iterative Time-Stepping**: The final orientation after $N$ steps, denoted $R_N$, is computed by iteratively applying the incremental rotation.\n    - First, the incremental rotation is computed: $\\Delta R = \\exp(\\Delta t \\, \\Omega)$.\n    - Then, starting with $R_{\\text{current}} = R_0$, the following update is performed $N$ times: $R_{\\text{current}} \\leftarrow \\Delta R \\cdot R_{\\text{current}}$.\n    - After $N$ iterations, $R_N = R_{\\text{current}}$. Analytically, this corresponds to $R_N = (\\Delta R)^N R_0$.\n\n4.  **One-Step Solution**: The orientation $\\widehat{R}(T)$ is computed in a single step over the total time interval $T = N \\Delta t$.\n    $$\n    \\widehat{R}(T) = \\exp(T \\Omega) R_0\n    $$\n\n5.  **Diagnostic Calculation**: The three required error metrics are computed using the final matrix $R_N$ and the one-step solution $\\widehat{R}(T)$.\n    - **Orthonormality Error**: $\\varepsilon_{\\mathrm{orth}} = \\lVert R_{N}^{T} R_{N} - I \\rVert_{F}$. This measures how well the orthonormality constraint is preserved. For a perfect group-preserving scheme, this error should be on the order of machine precision.\n    - **Determinant Error**: $\\varepsilon_{\\det} = \\lvert \\det(R_{N}) - 1 \\rvert$. This measures the preservation of the proper-rotation constraint ($\\det R = +1$). This should also be near machine precision.\n    - **Consistency Error**: $\\varepsilon_{\\mathrm{cons}} = \\lVert R_{N} - \\widehat{R}(T) \\rVert_{F}$. This error tests the numerical fidelity of the Lie group property $(\\exp(A))^N = \\exp(NA)$. It compares the result of $N$ successive small rotations with one single equivalent large rotation. Any discrepancy arises from the accumulation of floating-point errors during the $N$ matrix multiplications and potential differences in the numerical evaluation of the matrix exponential for small versus large arguments.\n\nFor the implementation, the `scipy.linalg.expm` function provides a robust algorithm for computing the matrix exponential. All other matrix and vector operations, including norms and determinants, are handled by the `numpy` library.", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import expm\n\ndef solve():\n    \"\"\"\n    Solves the problem of computing orientation evolution diagnostics for several test cases.\n    \"\"\"\n\n    def skew(v):\n        \"\"\"Constructs a skew-symmetric matrix from a 3-vector.\"\"\"\n        return np.array([\n            [0, -v[2], v[1]],\n            [v[2], 0, -v[0]],\n            [-v[1], v[0], 0]\n        ])\n\n    def axis_angle_to_matrix(a, theta):\n        \"\"\"Computes a rotation matrix from an axis 'a' and angle 'theta' using Rodrigues' formula.\"\"\"\n        a = np.asarray(a, dtype=float)\n        norm_a = np.linalg.norm(a)\n        if norm_a == 0:\n            return np.identity(3)\n        unit_a = a / norm_a\n        \n        K = skew(unit_a)\n        R = np.identity(3) + np.sin(theta) * K + (1 - np.cos(theta)) * np.dot(K, K)\n        return R\n\n    test_cases = [\n        # Test 1 (general case)\n        {'omega': (0.2, -0.3, 0.1), 'dt': 0.05, 'N': 10, 'R0_spec': ('axis_angle', (0.4, 0.2, -0.1), 0.7)},\n        # Test 2 (zero time step)\n        {'omega': (0.2, -0.3, 0.1), 'dt': 0.0, 'N': 1, 'R0_spec': ('identity',)},\n        # Test 3 (zero generator)\n        {'omega': (0.0, 0.0, 0.0), 'dt': 1.7, 'N': 5, 'R0_spec': ('axis_angle', (-0.3, 0.6, 0.2), 1.3)},\n        # Test 4 (large rotation per step)\n        {'omega': (3.0, -4.0, 5.0), 'dt': 0.3, 'N': 20, 'R0_spec': ('axis_angle', (1.0, 1.0, 1.0), 0.9)},\n        # Test 5 (near-zero generator, long time)\n        {'omega': (1.0e-8, -2.0e-8, 3.0e-8), 'dt': 1000.0, 'N': 1, 'R0_spec': ('axis_angle', (0.7, -0.4, 0.2), 0.5)},\n    ]\n\n    all_diagnostics = []\n\n    for case in test_cases:\n        omega_vec = np.array(case['omega'], dtype=float)\n        dt = case['dt']\n        N = case['N']\n        \n        # 1. Establish initial orientation R0\n        r0_type = case['R0_spec'][0]\n        if r0_type == 'identity':\n            R0 = np.identity(3)\n        elif r0_type == 'axis_angle':\n            axis, angle = case['R0_spec'][1], case['R0_spec'][2]\n            R0 = axis_angle_to_matrix(axis, angle)\n\n        # 2. Construct generator Omega\n        Omega = skew(omega_vec)\n\n        # 3. Iterative time-stepping to find R_N\n        delta_R = expm(dt * Omega)\n        R_N = np.copy(R0)\n        for _ in range(N):\n            R_N = np.dot(delta_R, R_N)\n\n        # 4. One-step solution to find R_hat(T)\n        T = N * dt\n        R_hat_T = np.dot(expm(T * Omega), R0)\n\n        # 5. Calculate diagnostics\n        I = np.identity(3)\n\n        # Orthonormality error\n        eps_orth = np.linalg.norm(np.dot(R_N.T, R_N) - I, 'fro')\n\n        # Determinant error\n        eps_det = np.abs(np.linalg.det(R_N) - 1.0)\n\n        # Consistency error\n        eps_cons = np.linalg.norm(R_N - R_hat_T, 'fro')\n\n        all_diagnostics.extend([eps_orth, eps_det, eps_cons])\n\n    # Format the output as specified\n    formatted_results = [f\"{num:.11e}\" for num in all_diagnostics]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2693556"}]}