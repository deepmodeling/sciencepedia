{"hands_on_practices": [{"introduction": "The existence of a strain energy density function is fundamentally linked to the principle of path-independent work. For a material to be considered hyperelastic, the work performed to deform it from one state to another must depend only on the initial and final states, not the strain path taken. This exercise provides a direct, hands-on demonstration of this concept by exploring a hypothetical material whose constitutive law violates this condition. By calculating the net work over a closed strain cycle using first principles, you will directly observe how a non-symmetric stiffness matrix leads to non-conservative behavior, thereby precluding the existence of a single-valued strain energy potential [@problem_id:2687958].", "problem": "Consider a small-strain, two-dimensional, linearly elastic constitutive mapping between the normal strain components and the normal stress components of the form $\\boldsymbol{\\sigma} = \\mathbf{C}\\,\\boldsymbol{\\varepsilon}$, where $\\boldsymbol{\\sigma} = \\begin{pmatrix} \\sigma_{11} \\\\ \\sigma_{22} \\end{pmatrix}$, $\\boldsymbol{\\varepsilon} = \\begin{pmatrix} \\varepsilon_{11} \\\\ \\varepsilon_{22} \\end{pmatrix}$, and $\\mathbf{C} \\in \\mathbb{R}^{2 \\times 2}$ is a constant stiffness matrix. Assume small strains and small rotations. Use only the following fundamentals: the definition of mechanical power per unit volume $\\delta w = \\sigma_{ij}\\,d\\varepsilon_{ij}$ and the statement that a strain energy density function (SEDF) exists if and only if the mechanical work per unit volume is path-independent in strain space.\n\nConstruct a specific counterexample stiffness that breaks major symmetry by taking\n$$\n\\mathbf{C} = \\begin{pmatrix} E & A \\\\ 0 & E \\end{pmatrix}, \\qquad E = 120 \\text{ GPa}, \\quad A = 40 \\text{ GPa}.\n$$\nConsider a closed rectangular loading–unloading path in the $\\left(\\varepsilon_{11},\\varepsilon_{22}\\right)$-plane with vertices $\\left(0,0\\right)$, $\\left(a,0\\right)$, $\\left(a,b\\right)$, $\\left(0,b\\right)$, and back to $\\left(0,0\\right)$, where\n$$\na = 0.008, \\qquad b = 0.012.\n$$\n\nStarting from first principles and without invoking any stored-energy formula, compute the net mechanical work per unit volume\n$$\nW = \\oint \\sigma_{ij}\\,d\\varepsilon_{ij}\n$$\nperformed over this closed loop. Explicitly evaluate the line integral segment-by-segment and demonstrate that the result is nonzero, thereby establishing path dependence of the work. Express the final numerical value of $W$ in $\\text{kJ}/\\text{m}^3$ and round your answer to four significant figures.", "solution": "The problem requires the calculation of the net mechanical work per unit volume, $W$, for a linearly elastic material subjected to a closed strain path. The material's constitutive behavior is defined by a non-symmetric stiffness matrix, which is a counterexample to the standard conditions for the existence of a strain energy density function (SEDF). We must perform this calculation from first principles, without assuming the existence of a SEDF.\n\nThe constitutive relation between the normal stress components $\\sigma_{11}, \\sigma_{22}$ and the normal strain components $\\varepsilon_{11}, \\varepsilon_{22}$ is given in matrix form as $\\boldsymbol{\\sigma} = \\mathbf{C}\\,\\boldsymbol{\\varepsilon}$:\n$$\n\\begin{pmatrix} \\sigma_{11} \\\\ \\sigma_{22} \\end{pmatrix} = \\begin{pmatrix} E & A \\\\ 0 & E \\end{pmatrix} \\begin{pmatrix} \\varepsilon_{11} \\\\ \\varepsilon_{22} \\end{pmatrix}\n$$\nThis expands to the following scalar equations:\n$$\n\\sigma_{11} = E \\varepsilon_{11} + A \\varepsilon_{22}\n$$\n$$\n\\sigma_{22} = E \\varepsilon_{22}\n$$\nwhere the constants are given as $E = 120 \\text{ GPa}$ and $A = 40 \\text{ GPa}$.\n\nThe mechanical work per unit volume, $W$, is the line integral of the stress components with respect to the strain components over the specified path. As only normal components are considered, the work increment $\\delta w = \\sigma_{ij}\\,d\\varepsilon_{ij}$ simplifies to:\n$$\ndW = \\sigma_{11}\\,d\\varepsilon_{11} + \\sigma_{22}\\,d\\varepsilon_{22}\n$$\nThe total work over the closed loop is the integral $W = \\oint dW$. The path of integration is a rectangle in the $(\\varepsilon_{11}, \\varepsilon_{22})$-plane with vertices at $(0,0)$, $(a,0)$, $(a,b)$, and $(0,b)$, where $a = 0.008$ and $b = 0.012$. We evaluate this integral by summing the contributions from each of the four segments of the rectangular path.\n\nPath 1: From $(\\varepsilon_{11}, \\varepsilon_{22}) = (0,0)$ to $(a,0)$.\nAlong this segment, $\\varepsilon_{22} = 0$ and thus $d\\varepsilon_{22} = 0$. The strain $\\varepsilon_{11}$ varies from $0$ to $a$. The work done, $W_1$, is:\n$$\nW_1 = \\int_0^a \\sigma_{11}\\,d\\varepsilon_{11} = \\int_0^a (E \\varepsilon_{11} + A \\cdot 0)\\,d\\varepsilon_{11} = \\int_0^a E \\varepsilon_{11}\\,d\\varepsilon_{11} = E \\left[ \\frac{\\varepsilon_{11}^2}{2} \\right]_0^a = \\frac{1}{2} E a^2\n$$\n\nPath 2: From $(\\varepsilon_{11}, \\varepsilon_{22}) = (a,0)$ to $(a,b)$.\nAlong this segment, $\\varepsilon_{11} = a$ and thus $d\\varepsilon_{11} = 0$. The strain $\\varepsilon_{22}$ varies from $0$ to $b$. The work done, $W_2$, is:\n$$\nW_2 = \\int_0^b \\sigma_{22}\\,d\\varepsilon_{22} = \\int_0^b E \\varepsilon_{22}\\,d\\varepsilon_{22} = E \\left[ \\frac{\\varepsilon_{22}^2}{2} \\right]_0^b = \\frac{1}{2} E b^2\n$$\n\nPath 3: From $(\\varepsilon_{11}, \\varepsilon_{22}) = (a,b)$ to $(0,b)$.\nAlong this segment, $\\varepsilon_{22} = b$ and thus $d\\varepsilon_{22} = 0$. The strain $\\varepsilon_{11}$ varies from $a$ to $0$. The work done, $W_3$, is:\n$$\nW_3 = \\int_a^0 \\sigma_{11}\\,d\\varepsilon_{11} = \\int_a^0 (E \\varepsilon_{11} + A b)\\,d\\varepsilon_{11} = \\left[ E \\frac{\\varepsilon_{11}^2}{2} + A b \\varepsilon_{11} \\right]_a^0\n$$\n$$\nW_3 = (0 + 0) - \\left( E \\frac{a^2}{2} + A b a \\right) = -\\frac{1}{2} E a^2 - Aab\n$$\n\nPath 4: From $(\\varepsilon_{11}, \\varepsilon_{22}) = (0,b)$ to $(0,0)$.\nAlong this segment, $\\varepsilon_{11} = 0$ and thus $d\\varepsilon_{11} = 0$. The strain $\\varepsilon_{22}$ varies from $b$ to $0$. The work done, $W_4$, is:\n$$\nW_4 = \\int_b^0 \\sigma_{22}\\,d\\varepsilon_{22} = \\int_b^0 E \\varepsilon_{22}\\,d\\varepsilon_{22} = E \\left[ \\frac{\\varepsilon_{22}^2}{2} \\right]_b^0 = 0 - E \\frac{b^2}{2} = -\\frac{1}{2} E b^2\n$$\n\nThe total net work, $W$, is the sum of the work done along the four segments:\n$$\nW = W_1 + W_2 + W_3 + W_4 = \\left(\\frac{1}{2} E a^2\\right) + \\left(\\frac{1}{2} E b^2\\right) + \\left(-\\frac{1}{2} E a^2 - Aab\\right) + \\left(-\\frac{1}{2} E b^2\\right)\n$$\nThe terms involving $E$ cancel out, leaving:\n$$\nW = -Aab\n$$\nThis non-zero result demonstrates that the work done is path-dependent, which is a direct consequence of the stiffness matrix $\\mathbf{C}$ not being symmetric ($C_{12} = A \\neq C_{21} = 0$). A non-zero work over a closed cycle implies that a strain energy potential function does not exist for this constitutive model.\n\nNow, we substitute the given numerical values:\n$A = 40 \\text{ GPa} = 40 \\times 10^9 \\text{ Pa}$\n$a = 0.008$\n$b = 0.012$\n\nThe work per unit volume is:\n$$\nW = -(40 \\times 10^9 \\text{ Pa}) \\times (0.008) \\times (0.012)\n$$\n$$\nW = - (40 \\times 0.008 \\times 0.012) \\times 10^9 \\text{ Pa}\n$$\n$$\nW = -0.00384 \\times 10^9 \\text{ Pa} = -3.84 \\times 10^6 \\text{ Pa}\n$$\nThe unit Pascal (Pa) is equivalent to Joules per cubic meter (J/m³). So, $W = -3.84 \\times 10^6 \\text{ J/m}^3$.\nThe problem requires the answer in kilojoules per cubic meter (kJ/m³). Since $1 \\text{ kJ} = 10^3 \\text{ J}$, we have:\n$$\nW = \\frac{-3.84 \\times 10^6}{10^3} \\text{ kJ/m}^3 = -3.84 \\times 10^3 \\text{ kJ/m}^3 = -3840 \\text{ kJ/m}^3\n$$\nThe problem specifies rounding the final answer to four significant figures. The calculated value is exactly $-3840$. To represent this with four significant figures, we write it in scientific notation as $-3.840 \\times 10^3$. The negative sign indicates that the material system performs work on its surroundings, which violates thermodynamic principles for a passive elastic body and confirms the non-physical nature of the chosen constitutive law.", "answer": "$$\n\\boxed{-3.840 \\times 10^3}\n$$", "id": "2687958"}, {"introduction": "Moving from linear elasticity to the more general framework of finite deformation, the conditions for hyperelasticity are expressed through the structure of the constitutive equations. For an isotropic material, the Cauchy stress $\\boldsymbol{\\sigma}$ can be related to the deformation via the left Cauchy-Green tensor $\\mathbf{B}$ and its invariants. This practice challenges you to work backward from a given stress model to determine if a compatible strain energy function $W(I_1, I_2, I_3)$ can be constructed. Successfully completing this task requires applying the Doyle-Ericksen formula and solving a system of partial differential equations, providing crucial experience in verifying the thermodynamic consistency of advanced material models [@problem_id:2637483].", "problem": "A compressible, materially isotropic hyperelastic solid undergoes finite deformation with deformation gradient $\\mathbf{F} \\in \\mathrm{GL}^{+}(3)$. Let $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$ denote the right Cauchy–Green tensor, $\\mathbf{B} = \\mathbf{F}\\mathbf{F}^{\\mathsf{T}}$ the left Cauchy–Green tensor, and $J = \\det \\mathbf{F}$. The principal invariants of $\\mathbf{C}$ are $I_{1} = \\mathrm{tr}\\,\\mathbf{C}$, $I_{2} = \\tfrac{1}{2}\\!\\left[(\\mathrm{tr}\\,\\mathbf{C})^{2} - \\mathrm{tr}(\\mathbf{C}^{2})\\right]$, and $I_{3} = \\det \\mathbf{C} = J^{2}$. Suppose the Cauchy stress is given by\n$$\n\\boldsymbol{\\sigma}(\\mathbf{F}) \\;=\\; \\frac{1}{J}\\Big(\\alpha\\,\\mathbf{I} + \\beta\\,\\mathbf{B} + \\gamma\\,\\mathbf{B}^{-1}\\Big),\n$$\nwhere $\\alpha$, $\\beta$, and $\\gamma$ are material constants with units of pressure, and $\\mathbf{I}$ is the second-order identity tensor.\n\nTasks:\n- Using only the principles of frame indifference (objectivity), material isotropy, and the definition of a hyperelastic material (existence of a scalar strain energy density $W$ such that an appropriate stress measure is a work-conjugate derivative of $W$), determine whether there exists a scalar strain energy density function $W$ depending only on the invariants of $\\mathbf{C}$ whose stress response is consistent with the given $\\boldsymbol{\\sigma}(\\mathbf{F})$. If such a function exists, determine $W(I_{1},I_{2},I_{3})$ up to an arbitrary additive constant, expressed explicitly in terms of $\\alpha$, $\\beta$, $\\gamma$ and $I_{1}$, $I_{2}$, $I_{3}$.\n\n- Then, for the specific deformation gradient\n$$\n\\mathbf{F} \\;=\\; \\mathrm{diag}\\!\\left(2,\\,1,\\,\\tfrac{1}{2}\\right),\n$$\nand the material constants $\\alpha = 0.2~\\mathrm{MPa}$, $\\beta = 2.8~\\mathrm{MPa}$, and $\\gamma = 1.5~\\mathrm{MPa}$, evaluate the strain energy density $W$ numerically. Express your final numerical answer in $\\mathrm{kJ}/\\mathrm{m}^{3}$ and round to four significant figures.\n\nAnswer form requirement: Your final answer must be a single real number (without units in the answer box).", "solution": "The problem statement is subjected to validation prior to any attempt at a solution.\n\n### Step 1: Extract Givens\n-   **Material**: Compressible, materially isotropic hyperelastic solid.\n-   **Kinematics**: Deformation gradient $\\mathbf{F} \\in \\mathrm{GL}^{+}(3)$, Right Cauchy–Green tensor $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$, Left Cauchy–Green tensor $\\mathbf{B} = \\mathbf{F}\\mathbf{F}^{\\mathsf{T}}$, and Jacobian $J = \\det \\mathbf{F}$.\n-   **Invariants**: $I_{1} = \\mathrm{tr}\\,\\mathbf{C}$, $I_{2} = \\tfrac{1}{2}\\!\\left[(\\mathrm{tr}\\,\\mathbf{C})^{2} - \\mathrm{tr}(\\mathbf{C}^{2})\\right]$, $I_{3} = \\det \\mathbf{C} = J^{2}$.\n-   **Constitutive Law**: The Cauchy stress is given by $\\boldsymbol{\\sigma}(\\mathbf{F}) \\;=\\; \\frac{1}{J}\\Big(\\alpha\\,\\mathbf{I} + \\beta\\,\\mathbf{B} + \\gamma\\,\\mathbf{B}^{-1}\\Big)$, where $\\alpha$, $\\beta$, $\\gamma$ are material constants.\n-   **Task 1**: Determine if a strain energy density function $W(I_{1}, I_{2}, I_{3})$ exists for the given $\\boldsymbol{\\sigma}$, and if so, determine its form.\n-   **Task 2**: For $\\mathbf{F} \\;=\\; \\mathrm{diag}\\!\\left(2,\\,1,\\,\\tfrac{1}{2}\\right)$, $\\alpha = 0.2~\\mathrm{MPa}$, $\\beta = 2.8~\\mathrm{MPa}$, and $\\gamma = 1.5~\\mathrm{MPa}$, evaluate $W$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is formulated within the established mathematical framework of nonlinear continuum mechanics and hyperelasticity. The concepts used—deformation gradient, Cauchy-Green tensors, invariants, and the relationship between stress and a strain energy potential—are all standard and rigorously defined. The proposed form of the Cauchy stress is a valid representation for an isotropic elastic material. The question of whether this stress is derivable from a potential (i.e., whether the material is hyperelastic) is a well-posed and non-trivial question of integrability. The problem is self-contained, scientifically sound, and objective. There are no contradictions, missing data, or unphysical assumptions.\n\n### Step 3: Verdict and Action\nThe problem is **valid**. A solution will be formulated.\n\n### Solution Derivation\nThe fundamental postulate of hyperelasticity is the existence of a scalar strain energy density function $W$ from which the stress tensor can be derived. For a materially isotropic solid, $W$ is a function of the principal invariants of a strain tensor. We can express $W$ as a function of the invariants of the left Cauchy-Green tensor $\\mathbf{B}$, which are identical to those of the right Cauchy-Green tensor $\\mathbf{C}$, i.e., $W = W(I_1, I_2, I_3)$.\n\nThe general expression for the Cauchy stress tensor $\\boldsymbol{\\sigma}$ for such a material is given by the Doyle-Ericksen formula:\n$$\n\\boldsymbol{\\sigma} = \\frac{2}{J} \\left[ \\left( I_2 \\frac{\\partial W}{\\partial I_2} + I_3 \\frac{\\partial W}{\\partial I_3} \\right) \\mathbf{I} + \\frac{\\partial W}{\\partial I_1} \\mathbf{B} - I_3 \\frac{\\partial W}{\\partial I_2} \\mathbf{B}^{-1} \\right]\n$$\nThis formula is derived from the work-conjugacy relation between the second Piola-Kirchhoff stress $\\mathbf{S} = 2 \\frac{\\partial W}{\\partial \\mathbf{C}}$ and the Cauchy stress $\\boldsymbol{\\sigma} = J^{-1} \\mathbf{F} \\mathbf{S} \\mathbf{F}^{\\mathsf{T}}$, combined with the representation of an isotropic tensor function and the Cayley-Hamilton theorem.\n\nThe problem provides the specific form of the Cauchy stress:\n$$\n\\boldsymbol{\\sigma} \\;=\\; \\frac{1}{J}\\Big(\\alpha\\,\\mathbf{I} + \\beta\\,\\mathbf{B} + \\gamma\\,\\mathbf{B}^{-1}\\Big)\n$$\nA strain energy function $W(I_1, I_2, I_3)$ exists if and only if the given stress form is consistent with the general hyperelastic constitutive law. By comparing the coefficients of the tensor basis $\\{\\mathbf{I}, \\mathbf{B}, \\mathbf{B}^{-1}\\}$ between the general form and the given form, we obtain a system of partial differential equations for $W$:\n1.  Coefficient of $\\mathbf{B}$:\n    $$ \\beta = 2 \\frac{\\partial W}{\\partial I_1} \\quad \\implies \\quad \\frac{\\partial W}{\\partial I_1} = \\frac{\\beta}{2} $$\n2.  Coefficient of $\\mathbf{B}^{-1}$:\n    $$ \\gamma = -2 I_3 \\frac{\\partial W}{\\partial I_2} \\quad \\implies \\quad \\frac{\\partial W}{\\partial I_2} = -\\frac{\\gamma}{2I_3} $$\n3.  Coefficient of $\\mathbf{I}$:\n    $$ \\alpha = 2 \\left( I_2 \\frac{\\partial W}{\\partial I_2} + I_3 \\frac{\\partial W}{\\partial I_3} \\right) \\quad \\implies \\quad \\frac{\\partial W}{\\partial I_3} = \\frac{\\alpha}{2I_3} - \\frac{I_2}{I_3} \\frac{\\partial W}{\\partial I_2} $$\n\nWe solve this system by sequential integration. From equation (1), integrating with respect to $I_1$ yields:\n$$\nW(I_1, I_2, I_3) = \\frac{\\beta}{2} I_1 + f(I_2, I_3)\n$$\nwhere $f(I_2, I_3)$ is an arbitrary function of integration.\n\nDifferentiating this expression for $W$ with respect to $I_2$ and equating it with equation (2):\n$$\n\\frac{\\partial W}{\\partial I_2} = \\frac{\\partial f}{\\partial I_2} = -\\frac{\\gamma}{2I_3}\n$$\nIntegrating this with respect to $I_2$ gives the form of $f$:\n$$\nf(I_2, I_3) = \\int \\left(-\\frac{\\gamma}{2I_3}\\right) dI_2 = -\\frac{\\gamma}{2I_3} I_2 + g(I_3)\n$$\nwhere $g(I_3)$ is another arbitrary function of integration. So far, the potential has the form:\n$$\nW(I_1, I_2, I_3) = \\frac{\\beta}{2} I_1 - \\frac{\\gamma}{2I_3} I_2 + g(I_3)\n$$\nNow, we use the third condition. Substituting the known expression for $\\frac{\\partial W}{\\partial I_2}$ into equation (3):\n$$\n\\frac{\\partial W}{\\partial I_3} = \\frac{\\alpha}{2I_3} - \\frac{I_2}{I_3} \\left(-\\frac{\\gamma}{2I_3}\\right) = \\frac{\\alpha}{2I_3} + \\frac{\\gamma I_2}{2I_3^2}\n$$\nWe also compute $\\frac{\\partial W}{\\partial I_3}$ from our derived form of $W$:\n$$\n\\frac{\\partial W}{\\partial I_3} = \\frac{\\partial}{\\partial I_3} \\left(\\frac{\\beta}{2} I_1 - \\frac{\\gamma I_2}{2I_3} + g(I_3)\\right) = \\frac{\\gamma I_2}{2I_3^2} + \\frac{dg}{dI_3}\n$$\nEquating these two expressions for $\\frac{\\partial W}{\\partial I_3}$ establishes a condition on $g(I_3)$:\n$$\n\\frac{\\gamma I_2}{2I_3^2} + \\frac{dg}{dI_3} = \\frac{\\alpha}{2I_3} + \\frac{\\gamma I_2}{2I_3^2} \\quad \\implies \\quad \\frac{dg}{dI_3} = \\frac{\\alpha}{2I_3}\n$$\nThis ordinary differential equation is integrable, which confirms that a compatible strain energy function $W$ exists. Integrating with respect to $I_3$:\n$$\ng(I_3) = \\int \\frac{\\alpha}{2I_3} dI_3 = \\frac{\\alpha}{2} \\ln(I_3) + C_0\n$$\nwhere $C_0$ is an arbitrary additive constant.\n\nThus, the strain energy density function is:\n$$\nW(I_1, I_2, I_3) = \\frac{\\beta}{2} I_1 - \\frac{\\gamma}{2I_3} I_2 + \\frac{\\alpha}{2} \\ln(I_3) + C_0\n$$\nAs requested, we have found the function up to an arbitrary constant.\n\n### Numerical Evaluation\nFor the specific deformation, we have $\\mathbf{F} = \\mathrm{diag}\\!\\left(2,\\,1,\\,\\tfrac{1}{2}\\right)$.\nFirst, we compute the kinematic quantities:\nThe Jacobian is $J = \\det(\\mathbf{F}) = 2 \\times 1 \\times \\frac{1}{2} = 1$.\nThe left Cauchy-Green tensor is $\\mathbf{B} = \\mathbf{F}\\mathbf{F}^{\\mathsf{T}} = \\mathrm{diag}\\!\\left(2^2,\\,1^2,\\,\\left(\\frac{1}{2}\\right)^2\\right) = \\mathrm{diag}\\!\\left(4,\\,1,\\,\\frac{1}{4}\\right)$.\nThe principal invariants of $\\mathbf{B}$ (which are the same for $\\mathbf{C}$) are:\n$I_1 = \\mathrm{tr}(\\mathbf{B}) = 4 + 1 + \\frac{1}{4} = 5.25$.\n$I_2 = \\frac{1}{2}[(\\mathrm{tr}\\mathbf{B})^2 - \\mathrm{tr}(\\mathbf{B}^2)] = \\frac{1}{2}[(5.25)^2 - (4^2+1^2+(1/4)^2)] = \\frac{1}{2}[27.5625 - (16+1+0.0625)] = \\frac{1}{2}[27.5625 - 17.0625] = \\frac{1}{2}[10.5] = 5.25$.\nAlternatively, using the eigenvalues $\\lambda_1=4, \\lambda_2=1, \\lambda_3=1/4$: $I_2 = \\lambda_1\\lambda_2 + \\lambda_2\\lambda_3 + \\lambda_3\\lambda_1 = (4)(1) + (1)(\\frac{1}{4}) + (\\frac{1}{4})(4) = 4 + 0.25 + 1 = 5.25$.\n$I_3 = \\det(\\mathbf{B}) = 4 \\times 1 \\times \\frac{1}{4} = 1$. This is consistent with $I_3 = J^2 = 1^2 = 1$.\n\nThe material constants are given in units of MPa:\n$\\alpha = 0.2~\\mathrm{MPa}$, $\\beta = 2.8~\\mathrm{MPa}$, $\\gamma = 1.5~\\mathrm{MPa}$.\n\nWe can set the arbitrary constant $C_0$ to zero. Substituting the values of the invariants and constants into the expression for $W$:\n$$\nW = \\frac{2.8~\\mathrm{MPa}}{2} (5.25) - \\frac{1.5~\\mathrm{MPa}}{2(1)} (5.25) + \\frac{0.2~\\mathrm{MPa}}{2} \\ln(1)\n$$\nSince $\\ln(1) = 0$, the last term vanishes.\n$$\nW = (1.4~\\mathrm{MPa})(5.25) - (0.75~\\mathrm{MPa})(5.25)\n$$\n$$\nW = (1.4 - 0.75) \\times 5.25~\\mathrm{MPa} = 0.65 \\times 5.25~\\mathrm{MPa}\n$$\n$$\nW = 3.4125~\\mathrm{MPa}\n$$\nThe problem requires the answer in units of $\\mathrm{kJ}/\\mathrm{m}^{3}$. The conversion is:\n$1~\\mathrm{MPa} = 10^6~\\mathrm{Pa} = 10^6~\\mathrm{N}/\\mathrm{m}^2 = 10^6~\\mathrm{J}/\\mathrm{m}^3 = 10^3~\\mathrm{kJ}/\\mathrm{m}^3$.\nTherefore,\n$$\nW = 3.4125 \\times 10^3~\\mathrm{kJ}/\\mathrm{m}^3 = 3412.5~\\mathrm{kJ}/\\mathrm{m}^3\n$$\nRounding to four significant figures, we get $W = 3413~\\mathrm{kJ}/\\mathrm{m}^3$.", "answer": "$$\n\\boxed{3413}\n$$", "id": "2637483"}, {"introduction": "This practice bridges the gap between abstract continuum mechanics theory and its practical implementation in computational simulation. A key consequence of a material being hyperelastic is that the Jacobian of the stress mapping with respect to strain, $C(e) = \\partial s / \\partial e$, must be symmetric. This matrix, known as the tangent modulus, represents the second derivative (Hessian) of the strain energy potential $\\mathcal{W}$, and the order of differentiation does not matter for smooth functions. In this hands-on coding exercise, you will implement numerical algorithms to verify this symmetry property for several material models, a standard and essential validation test performed when developing user-defined materials for finite element analysis software [@problem_id:2637479].", "problem": "Consider a material point modelled in finite deformation kinematics. Let the Green–Lagrange strain be the symmetric tensor $E \\in \\mathbb{R}^{2 \\times 2}$ and let the second Piola–Kirchhoff stress be the symmetric tensor $S \\in \\mathbb{R}^{2 \\times 2}$. Introduce the $2$-dimensional Voigt map in which the state is represented by the vector $e \\in \\mathbb{R}^{3}$ with $e = [E_{11},\\,E_{22},\\,2 E_{12}]^{\\mathsf{T}}$ and the conjugate stress vector $s \\in \\mathbb{R}^{3}$ with $s = [S_{11},\\,S_{22},\\,S_{12}]^{\\mathsf{T}}$. The internal work rate density is $s \\cdot \\dot{e} = S : \\dot{E}$. A necessary and sufficient condition for the existence of a strain energy density function $\\mathcal{W}(E)$ such that $S = \\partial \\mathcal{W}/\\partial E$ (equivalently $s = \\partial \\mathcal{W}/\\partial e$) is that the stress mapping $e \\mapsto s(e)$ is an exact differential, which in turn implies: (i) the Jacobian (numerical tangent) $C(e) = \\partial s/\\partial e$ is symmetric, and (ii) the work around any sufficiently small closed loop in $e$-space is zero.\n\nTask. Write a complete program that, for each specified constitutive mapping $s(e)$, numerically checks both conditions at a set of prescribed states using central finite differences and small-loop work integrals. For each constitutive mapping, return the Boolean value “true” if and only if both conditions are satisfied at all specified states within given tolerances, and “false” otherwise.\n\nNumerical tangent symmetry check. For a given $e \\in \\mathbb{R}^{3}$, approximate the Jacobian $C(e) \\in \\mathbb{R}^{3 \\times 3}$ by central differences along the canonical basis $\\{e^{(1)}, e^{(2)}, e^{(3)}\\}$:\n$$\nC_{ij}(e) \\approx \\frac{s_{i}\\!\\left(e + h\\, e^{(j)}\\right) - s_{i}\\!\\left(e - h\\, e^{(j)}\\right)}{2 h},\n$$\nwith a symmetricity measure $\\|C - C^{\\mathsf{T}}\\|_{\\infty}$, where $\\|\\cdot\\|_{\\infty}$ is the maximum absolute entry norm. Accept (locally) if $\\|C - C^{\\mathsf{T}}\\|_{\\infty} \\le \\varepsilon_{\\text{sym}}$.\n\nClosed-loop work check. For a given $e$ and a pair of indices $(i,j)$ with $i \\neq j$, consider the rectangle of side length $\\delta$ in the $(e_{i},e_{j})$-plane. Compute the line integral of $s \\cdot \\mathrm{d}e$ along the closed loop with piecewise constant direction segments using midpoint quadrature with uniform subdivision. Accept (locally) if the absolute value of the loop work is $\\le \\varepsilon_{\\text{loop}}$ for all three index pairs $(1,2)$, $(1,3)$, and $(2,3)$.\n\nGlobal acceptance for a given constitutive mapping requires that both local checks pass at all test states.\n\nPrescriptions to be used in your program:\n- Use central difference step $h = 1 \\times 10^{-6}$.\n- Use loop side length $\\delta = 1 \\times 10^{-3}$ and use $n = 20$ equal subdivisions per segment in the midpoint rule for the loop integral.\n- Use tolerances $\\varepsilon_{\\text{sym}} = 1 \\times 10^{-6}$ and $\\varepsilon_{\\text{loop}} = 5 \\times 10^{-8}$.\n- The test states are the following Voigt vectors (dimensionless):\n  - $e^{[1]} = [0.0,\\,0.0,\\,0.0]^{\\mathsf{T}}$,\n  - $e^{[2]} = [0.05,\\,-0.02,\\,0.03]^{\\mathsf{T}}$,\n  - $e^{[3]} = [-0.10,\\,0.08,\\,0.02]^{\\mathsf{T}}$,\n  - $e^{[4]} = [0.30,\\,0.30,\\,0.00]^{\\mathsf{T}}$.\n- For each constitutive mapping, evaluate both checks at all four states. If any state fails either check, the mapping is deemed non-conservative.\n\nConstitutive mappings to test:\n- Case A (Linear isotropic small-strain hyperelasticity). Let $\\lambda = 80$ and $\\mu = 60$. Define $S(E) = \\lambda\\, \\mathrm{tr}(E)\\, I + 2 \\mu\\, E$. Convert $E$ to $e$ and $S$ to $s$ via the Voigt convention defined above.\n- Case B (Compressible Neo–Hookean in two dimensions). Let $\\mu = 60$ and $\\kappa = 150$. Define $C = I + 2 E$, with determinant $d = \\det C$ and Jacobian $J = \\sqrt{d}$. Define $S(E) = \\kappa \\ln J\\, C^{-1} + \\mu\\,(I - C^{-1})$. Convert to $s$ via the Voigt convention.\n- Case C (Non-conservative polynomial mapping). Fix coefficients $a=200$, $b=30$, $c=10$, $d=150$, $f=5$, $g=100$, and $\\alpha = 1.0$. Define\n  $$\n  \\begin{aligned}\n  s_{1}(e) &= a\\, e_{1} + b\\, e_{2} + c\\, e_{3} + \\alpha\\, e_{2}^{2},\\\\\n  s_{2}(e) &= b\\, e_{1} + d\\, e_{2} + f\\, e_{3},\\\\\n  s_{3}(e) &= c\\, e_{1} + f\\, e_{2} + g\\, e_{3}.\n  \\end{aligned}\n  $$\n- Case D (Nearly conservative polynomial mapping). Same as Case C but with $\\alpha = 1 \\times 10^{-3}$.\n\nAll quantities are dimensionless.\n\nFinal output requirement. Your program should produce a single line of output containing a comma-separated list of four Boolean results enclosed in square brackets, in the order [Case A, Case B, Case C, Case D], for example “[True,False,True,False]”.\n\nTest suite coverage rationale:\n- $e^{[1]}$ tests the undeformed configuration.\n- $e^{[2]}$ and $e^{[3]}$ test moderate mixed normal–shear and compression–tension states while keeping $C$ positive definite in Case B.\n- $e^{[4]}$ tests a larger isochoric-like state in which all mappings remain well-defined.\n\nYour program must be completely self-contained and must not read any input. It must implement the checks and print the results exactly in the specified format.", "solution": "We start from the definition of Green–Lagrange strain $E = \\tfrac{1}{2}(C - I)$, where $C = F^{\\mathsf{T}} F$ is the right Cauchy–Green tensor and $F$ is the deformation gradient. The second Piola–Kirchhoff stress $S$ is work-conjugate to $E$, so that the internal work rate density is $S : \\dot{E}$. In the two-dimensional Voigt representation, with $e = [E_{11}, E_{22}, 2 E_{12}]^{\\mathsf{T}}$ and $s = [S_{11}, S_{22}, S_{12}]^{\\mathsf{T}}$, the power $S : \\dot{E}$ equals $s \\cdot \\dot{e}$, which ensures the correct shear weighting.\n\nExistence of a strain energy density function. A strain energy density function $\\mathcal{W}(E)$ exists if and only if $S = \\partial \\mathcal{W}/\\partial E$, equivalently $s = \\partial \\mathcal{W}/\\partial e$. This implies that $s(e)$ is a conservative vector field over the state space. Conservative vector fields are characterized by two equivalent properties:\n- Symmetry (Maxwell relations): the Jacobian (tangent) $C(e) = \\partial s/\\partial e$ is symmetric, i.e., $C = C^{\\mathsf{T}}$. In index form this is the major symmetry condition for the tangent modulus, which reflects the equality of mixed second derivatives $\\partial^{2} \\mathcal{W}/\\partial e_{i} \\partial e_{j}$.\n- Path independence: the line integral of $s \\cdot \\mathrm{d}e$ along any closed loop is zero. For sufficiently small loops, this is equivalent to the curl-free condition.\n\nAlgorithmic design. We test both properties numerically at given states to mitigate discretization artefacts and to strengthen inference of conservativity:\n- Numerical tangent via central differences. For each component $e_{j}$, we perturb $e$ by $\\pm h$ along $e^{(j)}$ and compute\n$$\nC_{ij}(e) \\approx \\frac{s_{i}(e + h e^{(j)}) - s_{i}(e - h e^{(j)})}{2 h}.\n$$\nBecause the true $C$ is symmetric for hyperelastic models, we evaluate $\\|C - C^{\\mathsf{T}}\\|_{\\infty}$ and require it to be below a tolerance $\\varepsilon_{\\text{sym}}$. We adopt $h = 1 \\times 10^{-6}$ and $\\varepsilon_{\\text{sym}} = 1 \\times 10^{-6}$ to balance truncation and round-off errors for smooth mappings.\n- Closed-loop work. For each pair $(i,j)$ with $i \\neq j$, we consider the rectangle of side length $\\delta = 1 \\times 10^{-3}$ in the $(e_{i}, e_{j})$-plane, centered at the base state $e$. We parametrize the loop by four straight segments and compute the work\n$$\nW_{\\square} = \\oint s \\cdot \\mathrm{d}e,\n$$\nusing the midpoint rule with $n = 20$ equal subdivisions per segment:\n$$\n\\int_{0}^{\\delta} s\\big(e_{\\text{seg}}(t+\\tfrac{\\Delta}{2})\\big) \\cdot \\dot{e}_{\\text{seg}}\\, \\mathrm{d}t \\approx \\sum_{k=0}^{n-1} s\\!\\big(e_{\\text{seg}}(t_{k}+\\tfrac{\\Delta}{2})\\big) \\cdot \\left(e^{(d)} \\Delta\\right),\n$$\nwhere $\\Delta = \\delta/n$ and $d \\in \\{i,j\\}$ is the active direction on the segment. For a conservative mapping, $|W_{\\square}|$ should be zero; we accept if the maximum absolute value over the three coordinate planes is below $\\varepsilon_{\\text{loop}} = 5 \\times 10^{-8}$.\n\nConstitutive mappings.\n- Case A: Linear isotropic small-strain hyperelasticity is defined by $S(E) = \\lambda\\, \\mathrm{tr}(E)\\, I + 2 \\mu\\, E$ with $\\lambda = 80$ and $\\mu = 60$. This derives from the quadratic energy $\\mathcal{W}(E) = \\tfrac{1}{2} \\lambda (\\mathrm{tr} E)^{2} + \\mu\\, E:E$, so the mapping is conservative. As such, both the numerical tangent symmetry and loop work tests should pass at all states.\n- Case B: Compressible Neo–Hookean model in two dimensions is specified by $C = I + 2 E$, $J = \\sqrt{\\det C}$, and $S = \\kappa \\ln J\\, C^{-1} + \\mu (I - C^{-1})$ with $\\mu = 60$ and $\\kappa = 150$. This is derived from a standard hyperelastic energy $\\mathcal{W}(C) = \\tfrac{\\mu}{2}(\\mathrm{tr}\\, C - \\ln \\det C - 2) + \\tfrac{\\kappa}{2} (\\ln J)^{2}$ in two dimensions, hence it is conservative. Provided $C$ remains positive definite (ensured by the chosen states), both tests should pass.\n- Case C: The polynomial mapping adds a non-gradient term to a symmetric linear mapping:\n$$\n\\begin{aligned}\ns_{1}(e) &= a\\, e_{1} + b\\, e_{2} + c\\, e_{3} + \\alpha\\, e_{2}^{2},\\\\\ns_{2}(e) &= b\\, e_{1} + d\\, e_{2} + f\\, e_{3},\\quad\ns_{3}(e) = c\\, e_{1} + f\\, e_{2} + g\\, e_{3},\n\\end{aligned}\n$$\nwith $a=200$, $b=30$, $c=10$, $d=150$, $f=5$, $g=100$, and $\\alpha = 1.0$. Here, $\\partial s_{1}/\\partial e_{2} = b + 2 \\alpha e_{2}$ and $\\partial s_{2}/\\partial e_{1} = b$, which generically differ when $e_{2} \\neq 0$. Therefore the mapping is non-conservative, and both the tangent symmetry and loop work checks should detect a failure at most states.\n- Case D: Same as Case C but with $\\alpha = 1 \\times 10^{-3}$. This is “nearly” conservative but still violates the Maxwell relation by $\\partial s_{1}/\\partial e_{2} - \\partial s_{2}/\\partial e_{1} = 2 \\alpha e_{2}$, which is of order $2 \\times 10^{-3} \\times e_{2}$. The loop work around a square of area $\\delta^{2}$ scales with this mismatch times area, yielding magnitudes of order $2 \\alpha e_{2} \\delta^{2}$. With representative $e_{2}$ of size $10^{-1}$ and $\\delta^{2} = 10^{-6}$, the circulation is of order $2 \\times 10^{-10}$, but the midpoint discretization error and contributions from all planes can increase this magnitude, and the tangent symmetry defect scales as $2 \\alpha e_{2} \\sim 2 \\times 10^{-4}$. Given the chosen tolerances $\\varepsilon_{\\text{sym}} = 10^{-6}$ and $\\varepsilon_{\\text{loop}} = 5 \\times 10^{-8}$, the tangent symmetry defect will be the dominant indicator and will exceed tolerance at the mixed normal states, causing a failure as expected.\n\nNumerical considerations.\n- The central difference step $h = 1 \\times 10^{-6}$ is chosen to be small enough to approximate derivatives accurately while avoiding floating-point cancellation. The loop integral uses $n = 20$ subdivisions per segment to control quadrature error.\n- The Neo–Hookean model requires positive definiteness of $C$ to have $\\det C > 0$; the test states are chosen accordingly.\n\nExpected results. Case A and Case B are hyperelastic and should pass both tests at all specified states, returning “true.” Case C and Case D are non-conservative (the latter only slightly), and the symmetry check will detect the inconsistency, returning “false.”\n\nThe program implements these checks and prints the list of four Boolean results in the requested format.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# ------------------------------\n# Voigt utilities for 2D (E11,E22,2E12) <-> tensor\n# ------------------------------\ndef voigt_to_E(e):\n    \"\"\"Convert 3-vector e=[E11,E22,2E12] to 2x2 symmetric tensor E.\"\"\"\n    E11, E22, twoE12 = e\n    return np.array([[E11, 0.5*twoE12],\n                     [0.5*twoE12, E22]], dtype=float)\n\ndef S_to_voigt(S):\n    \"\"\"Convert 2x2 symmetric tensor S to 3-vector s=[S11,S22,S12].\"\"\"\n    return np.array([S[0,0], S[1,1], S[0,1]], dtype=float)\n\n# ------------------------------\n# Constitutive laws s(e)\n# ------------------------------\ndef s_linear_isotropic(e, lam, mu):\n    \"\"\"Linear isotropic small-strain hyperelastic: S = lam tr(E) I + 2 mu E.\"\"\"\n    E = voigt_to_E(e)\n    trE = np.trace(E)\n    S = lam * trE * np.eye(2) + 2.0 * mu * E\n    return S_to_voigt(S)\n\ndef s_neo_hookean_2d(e, mu, kappa):\n    \"\"\"Compressible Neo-Hookean in 2D for second Piola stress.\"\"\"\n    E = voigt_to_E(e)\n    C = np.eye(2) + 2.0 * E\n    detC = np.linalg.det(C)\n    if detC <= 0.0:\n        # For robustness: return large values to signal invalid state\n        return np.array([np.nan, np.nan, np.nan])\n    J = np.sqrt(detC)\n    C_inv = np.linalg.inv(C)\n    S = kappa * np.log(J) * C_inv + mu * (np.eye(2) - C_inv)\n    return S_to_voigt(S)\n\ndef make_s_poly(a, b, c, d, f, g, alpha):\n    \"\"\"Create non-conservative polynomial mapping.\"\"\"\n    def s_poly(e):\n        e1, e2, e3 = e\n        s1 = a*e1 + b*e2 + c*e3 + alpha*(e2**2)\n        s2 = b*e1 + d*e2 + f*e3\n        s3 = c*e1 + f*e2 + g*e3\n        return np.array([s1, s2, s3], dtype=float)\n    return s_poly\n\n# ------------------------------\n# Numerical tangent via central differences\n# ------------------------------\ndef numerical_tangent(sfun, e, h):\n    \"\"\"Compute 3x3 Jacobian of s with respect to e by central differences.\"\"\"\n    n = 3\n    C = np.zeros((n, n), dtype=float)\n    for j in range(n):\n        ej = np.zeros(3, dtype=float); ej[j] = 1.0\n        sp = sfun(e + h*ej)\n        sm = sfun(e - h*ej)\n        C[:, j] = (sp - sm) / (2.0*h)\n    return C\n\n# ------------------------------\n# Closed-loop work around rectangle in (i,j)-plane\n# ------------------------------\ndef loop_work(sfun, e0, i, j, delta, nsub=20):\n    \"\"\"Compute s·de around closed square loop of side delta in (i,j)-plane.\"\"\"\n    # Unit vectors\n    ui = np.zeros(3); ui[i] = 1.0\n    uj = np.zeros(3); uj[j] = 1.0\n    # Four segments: +i, +j, -i, -j\n    work = 0.0\n    # Helper for one segment using midpoint rule\n    def segment_work(start, direction, length):\n        step = length / nsub\n        w = 0.0\n        for k in range(nsub):\n            mid = start + (k + 0.5) * step * direction\n            s = sfun(mid)\n            # s · de where only component along 'direction' changes\n            # If direction == ui: contribution s[i]*step, if == uj: s[j]*step\n            # Handle sign by direction entries (+1 or -1)\n            if direction[i] != 0.0:\n                w += s[i] * step * direction[i]\n            elif direction[j] != 0.0:\n                w += s[j] * step * direction[j]\n        return w\n    # Segment 1: from e0, along +i by delta\n    start1 = e0.copy()\n    work += segment_work(start1, ui, delta)\n    # Segment 2: from end of seg1, along +j by delta\n    start2 = e0 + delta * ui\n    work += segment_work(start2, uj, delta)\n    # Segment 3: from end of seg2, along -i by delta\n    start3 = e0 + delta * ui + delta * uj\n    work += segment_work(start3, -ui, delta)\n    # Segment 4: from end of seg3, along -j by delta\n    start4 = e0 + delta * uj\n    work += segment_work(start4, -uj, delta)\n    return work\n\n# ------------------------------\n# Check function combining symmetry and loop tests\n# ------------------------------\ndef check_hyperelasticity(sfun, states, h, delta, tol_sym, tol_loop, nsub=20):\n    for e in states:\n        # Tangent symmetry check\n        C = numerical_tangent(sfun, e, h)\n        if not np.all(np.isfinite(C)):\n            return False\n        antisym = C - C.T\n        max_asym = np.max(np.abs(antisym))\n        if max_asym > tol_sym:\n            return False\n        # Loop work in three coordinate planes\n        loops = []\n        loops.append(loop_work(sfun, e, 0, 1, delta, nsub))\n        loops.append(loop_work(sfun, e, 0, 2, delta, nsub))\n        loops.append(loop_work(sfun, e, 1, 2, delta, nsub))\n        max_loop = np.max(np.abs(loops))\n        if not np.isfinite(max_loop) or max_loop > tol_loop:\n            return False\n    return True\n\ndef solve():\n    # Parameters as specified\n    h = 1e-6\n    delta = 1e-3\n    tol_sym = 1e-6\n    tol_loop = 5e-8\n    nsub = 20\n\n    # Test states\n    states = [\n        np.array([0.0, 0.0, 0.0], dtype=float),\n        np.array([0.05, -0.02, 0.03], dtype=float),\n        np.array([-0.10, 0.08, 0.02], dtype=float),\n        np.array([0.30, 0.30, 0.00], dtype=float),\n    ]\n\n    # Constitutive mappings\n    lam_A, mu_A = 80.0, 60.0\n    mu_B, kappa_B = 60.0, 150.0\n    # Case A\n    sfun_A = lambda e: s_linear_isotropic(e, lam_A, mu_A)\n    # Case B\n    sfun_B = lambda e: s_neo_hookean_2d(e, mu_B, kappa_B)\n    # Case C\n    sfun_C = make_s_poly(a=200.0, b=30.0, c=10.0, d=150.0, f=5.0, g=100.0, alpha=1.0)\n    # Case D\n    sfun_D = make_s_poly(a=200.0, b=30.0, c=10.0, d=150.0, f=5.0, g=100.0, alpha=1e-3)\n\n    # Evaluate checks\n    results = []\n    for sfun in [sfun_A, sfun_B, sfun_C, sfun_D]:\n        ok = check_hyperelasticity(sfun, states, h, delta, tol_sym, tol_loop, nsub)\n        results.append(ok)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2637479"}]}