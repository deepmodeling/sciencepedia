{"hands_on_practices": [{"introduction": "Mastering wave mechanics begins with a firm grasp of the fundamentals. This first practice [@problem_id:2678864] challenges you to derive the celebrated Rayleigh wave secular equation directly from the Navier equations of linear elasticity. By applying traction-free boundary conditions to a half-space and then exploring the important incompressible limit, you will solidify your understanding of how surface waves are sustained by a free surface and how their speed relates to the bulk material properties.", "problem": "An isotropic, homogeneous, linearly elastic half-space occupies $z \\ge 0$ with a traction-free plane surface at $z = 0$. Let the mass density be $\\rho$ and the Lamé moduli be $\\lambda$ and $\\mu$, with bulk equations of motion given by the Navier equations:\n$$\n\\mu \\nabla^{2} \\mathbf{u} + (\\lambda + \\mu) \\nabla(\\nabla \\cdot \\mathbf{u}) = \\rho \\, \\frac{\\partial^{2} \\mathbf{u}}{\\partial t^{2}}.\n$$\nConsider a two-dimensional plane-strain surface wave propagating in the $x$-direction with phase speed $c_{R}$, angular frequency $\\omega$, and wavenumber $k = \\omega / c_{R}$. Assume time-harmonic dependence $\\exp(i(k x - \\omega t))$ and depth-wise decay as $z \\to +\\infty$. Using a Helmholtz potential representation appropriate for plane strain, impose the traction-free boundary conditions $\\sigma_{zz}(x,0,t)=0$ and $\\sigma_{xz}(x,0,t)=0$ to derive the secular equation that determines the Rayleigh wave speed $c_{R}$ in terms of the compressional and shear speeds $c_{L}=\\sqrt{(\\lambda+2\\mu)/\\rho}$ and $c_{T}=\\sqrt{\\mu/\\rho}$. Then evaluate the incompressible limit of the solution by taking the Poisson’s ratio $\\nu \\to 0.5$ (equivalently $\\lambda \\to +\\infty$ or $c_{L} \\to +\\infty$ at fixed $c_{T}$), and compute the limiting value of the ratio $c_{R}/c_{T}$. Round your answer to $4$ significant figures. Express your result as a dimensionless number.", "solution": "The problem requires the derivation of the secular equation for Rayleigh surface waves and the calculation of the ratio of the Rayleigh wave speed $c_R$ to the shear wave speed $c_T$ in the incompressible limit. We shall proceed with methodical rigor.\n\nThe displacement field $\\mathbf{u}$ in a linear elastic solid is governed by the Navier equation:\n$$\n\\mu \\nabla^{2} \\mathbf{u} + (\\lambda + \\mu) \\nabla(\\nabla \\cdot \\mathbf{u}) = \\rho \\frac{\\partial^{2} \\mathbf{u}}{\\partial t^{2}}\n$$\nWe employ the Helmholtz decomposition, representing the displacement vector $\\mathbf{u}$ in terms of a scalar potential $\\phi$ and a vector potential $\\mathbf{\\Psi}$:\n$$\n\\mathbf{u} = \\nabla\\phi + \\nabla \\times \\mathbf{\\Psi}\n$$\nSubstituting this into the Navier equation and choosing a gauge such that $\\nabla \\cdot \\mathbf{\\Psi} = 0$, the equation decouples into two wave equations:\n$$\n\\nabla^2\\phi = \\frac{1}{c_L^2} \\frac{\\partial^2\\phi}{\\partial t^2} \\quad \\text{where} \\quad c_L = \\sqrt{\\frac{\\lambda+2\\mu}{\\rho}}\n$$\n$$\n\\nabla^2\\mathbf{\\Psi} = \\frac{1}{c_T^2} \\frac{\\partial^2\\mathbf{\\Psi}}{\\partial t^2} \\quad \\text{where} \\quad c_T = \\sqrt{\\frac{\\mu}{\\rho}}\n$$\nFor two-dimensional plane strain in the $x-z$ plane, the displacement component $u_y=0$ and all field quantities are independent of $y$. This is satisfied by choosing $\\mathbf{\\Psi} = (0, \\psi, 0)$. The displacement components are:\n$$\nu_x = \\frac{\\partial\\phi}{\\partial x} - \\frac{\\partial\\psi}{\\partial z} \\quad , \\quad u_z = \\frac{\\partial\\phi}{\\partial z} + \\frac{\\partial\\psi}{\\partial x}\n$$\nWe consider a time-harmonic wave propagating in the $+x$ direction, with wavenumber $k$ and angular frequency $\\omega$. The wave speed is $c_R = \\omega/k$. For a surface wave, the fields must decay as $z \\to \\infty$. We thus seek solutions of the form:\n$$\n\\phi(x,z,t) = A \\exp(-\\alpha z) \\exp(i(kx - \\omega t))\n$$\n$$\n\\psi(x,z,t) = \\frac{B}{ik} \\exp(-\\beta z) \\exp(i(kx - \\omega t))\n$$\nwhere $A$ and $B$ are complex amplitudes and the factor $1/(ik)$ is for algebraic convenience. Substituting these into the potential wave equations yields the decay constants:\n$$\n\\alpha^2 = k^2 - \\frac{\\omega^2}{c_L^2} = k^2 \\left(1 - \\frac{c_R^2}{c_L^2}\\right)\n$$\n$$\n\\beta^2 = k^2 - \\frac{\\omega^2}{c_T^2} = k^2 \\left(1 - \\frac{c_R^2}{c_T^2}\\right)\n$$\nFor the wave to be confined to the surface, its amplitude must decay with depth, so we require $\\text{Re}(\\alpha) > 0$ and $\\text{Re}(\\beta) > 0$. A Rayleigh wave is slower than both bulk waves, $c_R  c_T  c_L$, which ensures that $\\alpha$ and $\\beta$ are real and positive.\n\nThe traction-free boundary conditions at $z=0$ are $\\sigma_{zz}(x,0,t) = 0$ and $\\sigma_{xz}(x,0,t) = 0$. The relevant stress tensor components for a linear isotropic elastic material are:\n$$\n\\sigma_{zz} = \\lambda(\\epsilon_{xx} + \\epsilon_{zz}) + 2\\mu \\epsilon_{zz} = \\lambda \\nabla \\cdot \\mathbf{u} + 2\\mu \\frac{\\partial u_z}{\\partial z}\n$$\n$$\n\\sigma_{xz} = 2\\mu \\epsilon_{xz} = \\mu \\left( \\frac{\\partial u_x}{\\partial z} + \\frac{\\partial u_z}{\\partial x} \\right)\n$$\nEvaluating the derivatives of the displacement components and substituting into the stress expressions at $z=0$ yields a system of two equations for the amplitudes $A$ and $B$.\nThe first boundary condition, $\\sigma_{zz}(z=0) = 0$, leads to:\n$$\n\\left( 2\\mu k^2 - \\rho\\omega^2 \\right)A - 2\\mu\\beta \\frac{B}{ik} = 0 \\implies \\mu(k^2+\\beta^2)A - 2\\mu\\beta \\frac{B}{ik} = 0\n$$\n$$\n(k^2+\\beta^2)A - \\frac{2\\beta}{ik}B = 0\n$$\nThe second boundary condition, $\\sigma_{xz}(z=0)=0$, leads to:\n$$\n-2\\mu ik\\alpha A + \\mu(k^2+\\beta^2) \\frac{B}{ik}=0\n$$\n$$\n2ik\\alpha A - (k^2+\\beta^2) \\frac{B}{ik} = 0\n$$\nLet's redefine the shear amplitude as $B' = B/ik$ to obtain a system with real coefficients:\n$$\n\\begin{cases} (k^2+\\beta^2)A - 2\\beta B' = 0 \\\\ 2k^2\\alpha A - (k^2+\\beta^2)B' = 0 \\end{cases}\n$$\nThis system has been simplified after multiplying the second equation by $k$.\nFor a non-trivial solution to exist, the determinant of the coefficient matrix must be zero:\n$$\n\\begin{vmatrix} k^2+\\beta^2  -2\\beta \\\\ 2k^2\\alpha  -(k^2+\\beta^2) \\end{vmatrix} = -(k^2+\\beta^2)^2 - (-2\\beta)(2k^2\\alpha) = 0\n$$\n$$\n-(k^2+\\beta^2)^2 + 4k^2\\alpha\\beta = 0 \\implies (k^2+\\beta^2)^2 = 4k^2\\alpha\\beta\n$$\nThis is the secular equation for Rayleigh waves. Let $\\xi = c_R/c_T$. We can express the terms as:\n$k^2+\\beta^2 = k^2 + (k^2 - \\omega^2/c_T^2) = 2k^2 - \\omega^2/c_T^2 = 2k^2 - k^2\\xi^2 = k^2(2-\\xi^2)$.\n$\\alpha = k\\sqrt{1 - c_R^2/c_L^2} = k\\sqrt{1-\\xi^2(c_T^2/c_L^2)}$.\n$\\beta = k\\sqrt{1 - c_R^2/c_T^2} = k\\sqrt{1-\\xi^2}$.\nSubstituting these into the secular equation:\n$$\n\\left(k^2(2-\\xi^2)\\right)^2 = 4k^2 \\left(k\\sqrt{1-\\xi^2\\frac{c_T^2}{c_L^2}}\\right) \\left(k\\sqrt{1-\\xi^2}\\right)\n$$\n$$\n(2-\\xi^2)^2 = 4\\sqrt{1-\\xi^2\\frac{c_T^2}{c_L^2}}\\sqrt{1-\\xi^2}\n$$\nThis is the desired secular equation in terms of wave speed ratios.\n\nNow, we evaluate the incompressible limit. Incompressibility ($\\nabla \\cdot \\mathbf{u}=0$) implies that the bulk modulus is infinite, which corresponds to $\\lambda \\to \\infty$. Consequently, the P-wave speed $c_L = \\sqrt{(\\lambda+2\\mu)/\\rho} \\to \\infty$. The S-wave speed $c_T$ remains finite. The Poisson's ratio $\\nu = \\frac{\\lambda}{2(\\lambda+\\mu)} \\to \\frac12$.\nIn the limit $c_L \\to \\infty$, the term $c_T^2/c_L^2 \\to 0$. The secular equation simplifies to:\n$$\n(2-\\xi^2)^2 = 4\\sqrt{1-\\xi^2}\n$$\nTo solve for $\\xi$, we square both sides, which may introduce extraneous roots:\n$$\n(2-\\xi^2)^4 = 16(1-\\xi^2)\n$$\nLet $y = \\xi^2 = (c_R/c_T)^2$. We must have $0 \\le y  1$ for a physically meaningful surface wave.\n$$\n(2-y)^4 = 16(1-y)\n$$\nExpanding the left side:\n$$\n16 - 32y + 24y^2 - 8y^3 + y^4 = 16 - 16y\n$$\n$$\ny^4 - 8y^3 + 24y^2 - 16y = 0\n$$\n$$\ny(y^3 - 8y^2 + 24y - 16) = 0\n$$\nOne solution is $y=0$ ($c_R=0$), which is trivial. We seek the non-trivial root from the cubic equation:\n$$\nP(y) = y^3 - 8y^2 + 24y - 16 = 0\n$$\nThe derivative is $P'(y) = 3y^2 - 16y + 24$. The discriminant of this quadratic is $D = (-16)^2 - 4(3)(24) = 256 - 288 = -32  0$. Since the leading coefficient is positive, $P'(y)  0$ for all real $y$, so $P(y)$ is a strictly increasing function and has only one real root.\nWe evaluate $P(y)$ at the bounds of our physical domain for $y$:\n$P(0) = -16$.\n$P(1) = 1 - 8 + 24 - 16 = 1$.\nSince $P(0)0$ and $P(1)0$, the unique real root lies in the interval $(0, 1)$, confirming it is a physical solution. We solve this cubic numerically. An iterative method such as Newton's method or simply a numerical root finder gives the solution:\n$$\ny \\approx 0.91263118\n$$\nThis root satisfies the original equation before squaring, as $(2-y)  0$ for $y1$. The value of the ratio $c_R/c_T$ is $\\sqrt{y}$:\n$$\n\\frac{c_R}{c_T} = \\xi = \\sqrt{y} \\approx \\sqrt{0.91263118} \\approx 0.9553173\n$$\nRounding the result to $4$ significant figures, we get $0.9553$.", "answer": "$$\\boxed{0.9553}$$", "id": "2678864"}, {"introduction": "While full three-dimensional models provide the most accurate description, engineering practice often relies on simplified theories for efficiency. This exercise [@problem_id:2678846] bridges the gap between the comprehensive theory of Lamb waves and the classical Kirchhoff-Love plate theory. You will demonstrate that in the long-wavelength limit, the fundamental antisymmetric Lamb mode ($A_0$) elegantly reduces to the familiar flexural wave of a thin plate, thereby revealing the physical basis and domain of validity for this cornerstone of structural mechanics.", "problem": "Consider an isotropic, homogeneous, linearly elastic plate of thickness $h$, infinite in the in-plane directions. The material has Young's modulus $E$, Poisson's ratio $\\nu$, and mass density $\\rho$. Adopt the classical Kirchhoff–Love kinematic hypothesis that lines initially normal to the mid-surface remain straight, normal, and inextensible during deformation, so that transverse displacement is described by a scalar field $w(x,y,t)$, and the in-plane displacements vary linearly through the thickness. Starting from three-dimensional linear elasticity and balance of linear and angular momentum, specialize to the bending-dominated regime with traction-free faces at $z=\\pm h/2$ and derive the governing equation for $w(x,y,t)$ in the absence of external loading. Then, assume a time-harmonic, plane, flexural wave $w(x,y,t)=W\\exp\\!\\big(i(kx-\\omega t)\\big)$ propagating along $x$, and obtain the leading-order long-wavelength dispersion relation in closed form.\n\nNext, consider the full three-dimensional elastodynamic problem of waves in the same traction-free plate, and focus on the lowest-order antisymmetric Rayleigh–Lamb mode (the $A_{0}$ Lamb mode). Introduce the nondimensional wavenumber $\\kappa = kh/2$ and analyze the long-wavelength limit $\\kappa \\to 0$ to determine the leading-order relation between $\\omega$ and $k$ for the $A_{0}$ mode. Show that it coincides, to leading order in $\\kappa$, with your plate result.\n\nReport, as your final answer, the explicit closed-form expression for the leading-order dependence of $\\omega^{2}$ on $k$, $E$, $\\nu$, $\\rho$, and $h$ that captures both the Kirchhoff–Love flexural wave and the $A_{0}$ Lamb mode in the limit $\\kappa \\to 0$. The final answer must be a single analytic expression. Do not round or approximate, and do not include units in the final expression.", "solution": "The problem requires the derivation of the long-wavelength dispersion relation for flexural waves in a thin plate from two perspectives: first, using the simplified Kirchhoff-Love plate theory, and second, from the full three-dimensional theory of elastodynamics by analyzing the lowest-order antisymmetric Rayleigh-Lamb mode ($A_{0}$). Finally, it must be shown that these two approaches yield the same leading-order result.\n\n### Part 1: Derivation from Kirchhoff-Love Plate Theory\n\nThe Kirchhoff-Love hypothesis for bending of a plate defines the displacement field $\\mathbf{u} = (u,v,w)$ in terms of the mid-plane transverse displacement $w(x,y,t)$ as follows:\n$$u(x,y,z,t) = -z \\frac{\\partial w(x,y,t)}{\\partial x}$$\n$$v(x,y,z,t) = -z \\frac{\\partial w(x,y,t)}{\\partial y}$$\n$$w(x,y,z,t) = w(x,y,t)$$\nThe coordinate $z$ is measured from the mid-plane. The non-zero components of the linear strain tensor $\\boldsymbol{\\epsilon}$ are:\n$$\\epsilon_{xx} = \\frac{\\partial u}{\\partial x} = -z \\frac{\\partial^2 w}{\\partial x^2}$$\n$$\\epsilon_{yy} = \\frac{\\partial v}{\\partial y} = -z \\frac{\\partial^2 w}{\\partial y^2}$$\n$$\\gamma_{xy} = 2\\epsilon_{xy} = \\frac{\\partial u}{\\partial y} + \\frac{\\partial v}{\\partial x} = -2z \\frac{\\partial^2 w}{\\partial x \\partial y}$$\nThe other strain components ($\\epsilon_{zz}$, $\\epsilon_{xz}$, $\\epsilon_{yz}$) are zero under this kinematic assumption. For a thin plate, the state of stress is assumed to be plane stress, i.e., $\\sigma_{zz} = \\sigma_{xz} = \\sigma_{yz} = 0$. The in-plane stresses are related to the strains for an isotropic material by:\n$$\\sigma_{xx} = \\frac{E}{1-\\nu^2} (\\epsilon_{xx} + \\nu \\epsilon_{yy}) = -z\\frac{E}{1-\\nu^2} \\left( \\frac{\\partial^2 w}{\\partial x^2} + \\nu \\frac{\\partial^2 w}{\\partial y^2} \\right)$$\n$$\\sigma_{yy} = \\frac{E}{1-\\nu^2} (\\epsilon_{yy} + \\nu \\epsilon_{xx}) = -z\\frac{E}{1-\\nu^2} \\left( \\frac{\\partial^2 w}{\\partial y^2} + \\nu \\frac{\\partial^2 w}{\\partial x^2} \\right)$$\n$$\\sigma_{xy} = \\frac{E}{2(1+\\nu)} \\gamma_{xy} = -z\\frac{E}{1+\\nu} \\frac{\\partial^2 w}{\\partial x \\partial y}$$\nThe stress distributions give rise to bending and twisting moments per unit length, obtained by integrating through the plate thickness $h$:\n$$M_{xx} = \\int_{-h/2}^{h/2} z \\sigma_{xx} dz = -D \\left( \\frac{\\partial^2 w}{\\partial x^2} + \\nu \\frac{\\partial^2 w}{\\partial y^2} \\right)$$\n$$M_{yy} = \\int_{-h/2}^{h/2} z \\sigma_{yy} dz = -D \\left( \\frac{\\partial^2 w}{\\partial y^2} + \\nu \\frac{\\partial^2 w}{\\partial x^2} \\right)$$\n$$M_{xy} = \\int_{-h/2}^{h/2} z \\sigma_{xy} dz = -D(1-\\nu) \\frac{\\partial^2 w}{\\partial x \\partial y}$$\nwhere $D = \\frac{E h^3}{12(1-\\nu^2)}$ is the flexural rigidity of the plate. The integral $\\int_{-h/2}^{h/2} z^2 dz = h^3/12$ was used.\n\nThe equation of motion for free vibration of the plate, derived from the balance of moments and including inertia, is:\n$$\\frac{\\partial^2 M_{xx}}{\\partial x^2} + 2 \\frac{\\partial^2 M_{xy}}{\\partial x \\partial y} + \\frac{\\partial^2 M_{yy}}{\\partial y^2} = \\rho h \\frac{\\partial^2 w}{\\partial t^2}$$\nSubstituting the moment expressions gives:\n$$-D \\left[ \\frac{\\partial^4 w}{\\partial x^4} + \\nu \\frac{\\partial^4 w}{\\partial x^2 \\partial y^2} + 2(1-\\nu)\\frac{\\partial^4 w}{\\partial x^2 \\partial y^2} + \\frac{\\partial^4 w}{\\partial y^4} + \\nu \\frac{\\partial^4 w}{\\partial y^2 \\partial x^2} \\right] = \\rho h \\frac{\\partial^2 w}{\\partial t^2}$$\nThis simplifies to the classical plate equation:\n$$D \\left( \\frac{\\partial^4 w}{\\partial x^4} + 2\\frac{\\partial^4 w}{\\partial x^2 \\partial y^2} + \\frac{\\partial^4 w}{\\partial y^4} \\right) + \\rho h \\frac{\\partial^2 w}{\\partial t^2} = 0$$\nwhich can be written compactly as $D \\nabla^4 w + \\rho h \\frac{\\partial^2 w}{\\partial t^2} = 0$.\n\nFor a plane wave propagating along the $x$-direction, $w(x,y,t) = W\\exp(i(kx-\\omega t))$, there is no dependence on $y$. The equation reduces to:\n$$D \\frac{\\partial^4 w}{\\partial x^4} + \\rho h \\frac{\\partial^2 w}{\\partial t^2} = 0$$\nSubstituting the wave form, we have $\\frac{\\partial^4 w}{\\partial x^4} = (ik)^4 w = k^4 w$ and $\\frac{\\partial^2 w}{\\partial t^2} = (-i\\omega)^2 w = -\\omega^2 w$. This yields the algebraic equation:\n$$D k^4 - \\rho h \\omega^2 = 0$$\nSolving for $\\omega^2$ gives the dispersion relation for flexural waves:\n$$\\omega^2 = \\frac{D k^4}{\\rho h} = \\frac{E h^3 k^4}{12(1-\\nu^2)\\rho h} = \\frac{E h^2 k^4}{12\\rho(1-\\nu^2)}$$\n\n### Part 2: Analysis of the $A_0$ Rayleigh-Lamb Mode\n\nWe now consider the full three-dimensional elastodynamic problem. The propagation of harmonic waves in a plate is described by the Rayleigh-Lamb equations. These are derived by solving the Navier-Cauchy equations using scalar and vector potentials, subject to traction-free boundary conditions. The displacement field is decomposed into components symmetric and antisymmetric with respect to the mid-plane $z=0$.\n\nThe $A_0$ mode is the fundamental antisymmetric mode, which corresponds to flexural motion. The characteristic equation for antisymmetric modes is:\n$$\\frac{\\tanh(q'h/2)}{\\tanh(p'h/2)} = \\frac{4k^2 p' q'}{(k^2+q'^2)^2}$$\nwhere\n$$p' = \\sqrt{k^2 - \\frac{\\omega^2}{c_L^2}} \\quad \\text{and} \\quad q' = \\sqrt{k^2 - \\frac{\\omega^2}{c_T^2}}$$\nand $c_L = \\sqrt{(\\lambda+2\\mu)/\\rho}$ and $c_T = \\sqrt{\\mu/\\rho}$ are the longitudinal and transverse wave speeds, respectively. Here $\\lambda$ and $\\mu$ are the Lamé parameters.\n\nWe are interested in the long-wavelength limit, where the wavenumber $k \\to 0$. For the $A_0$ mode, the frequency $\\omega$ also approaches zero, specifically as $\\omega \\propto k^2$. In this limit, $\\omega \\ll kc_L$ and $\\omega \\ll kc_T$. A careful asymptotic expansion of the characteristic equation is required. The result of this expansion for the $A_0$ mode as $k \\to 0$ yields the following dispersion relation:\n$$\\omega^2 \\approx k^4 \\frac{h^2 c_T^2}{3} \\left(1 - \\frac{c_T^2}{c_L^2}\\right)$$\nTo show that this coincides with the plate theory result, we express the elastic constants $E$ and $\\nu$ in terms of wave speeds:\n$$c_T^2 = \\frac{\\mu}{\\rho} = \\frac{E}{2\\rho(1+\\nu)}$$\n$$\\frac{c_T^2}{c_L^2} = \\frac{\\mu}{\\lambda+2\\mu} = \\frac{1-2\\nu}{2(1-\\nu)}$$\nSubstituting these into the Lamb wave limit gives:\n$$1 - \\frac{c_T^2}{c_L^2} = 1 - \\frac{1-2\\nu}{2(1-\\nu)} = \\frac{2-2\\nu - 1+2\\nu}{2(1-\\nu)} = \\frac{1}{2(1-\\nu)}$$\nThus,\n$$\\omega^2 \\approx k^4 \\frac{h^2}{3} \\left(\\frac{E}{2\\rho(1+\\nu)}\\right) \\left(\\frac{1}{2(1-\\nu)}\\right) = k^4 \\frac{E h^2}{12\\rho(1+\\nu)(1-\\nu)} = \\frac{E h^2 k^4}{12\\rho(1-\\nu^2)}$$\nThis is precisely the dispersion relation obtained from the Kirchhoff-Love plate theory. The two approaches are consistent in the long-wavelength limit.\n\nThe explicit closed-form expression for the leading-order dependence of $\\omega^2$ on the given parameters is therefore the result from classical plate theory.", "answer": "$$\\boxed{\\omega^2 = \\frac{E h^2 k^4}{12\\rho(1-\\nu^2)}}$$", "id": "2678846"}, {"introduction": "Analytical derivations often lead to transcendental equations that defy closed-form solutions, necessitating numerical methods. This final practice [@problem_id:2678857] shifts the focus from pen-and-paper derivation to computational implementation. You will design and implement a robust numerical solver based on the Newton-Raphson method to find the precise Rayleigh wave speed from its secular equation, developing essential skills in computational mechanics and gaining insight into the convergence and stability of iterative algorithms.", "problem": "Consider a traction-free, homogeneous, isotropic, linear elastic half-space that supports a Rayleigh surface wave of phase speed $c_R$. Let $c_L$ and $c_T$ be the compressional and shear bulk wave speeds, respectively, and define the nondimensional parameters $\\kappa \\equiv (c_L/c_T)^2$ and $\\xi \\equiv (c_R/c_T)^2$. The Rayleigh secular function can be written in terms of $\\xi$ and $\\kappa$ as\n$$\nf(\\xi;\\kappa) \\equiv (2-\\xi)^2 \\;-\\; 4 \\sqrt{1-\\xi} \\,\\sqrt{1-\\xi/\\kappa},\n$$\nwith the physical Rayleigh solution satisfying $0  \\xi  1$ for $\\kappa  1$. Note that $f(0;\\kappa)=0$, but the physically relevant root is the nontrivial root in the open interval $(0,1)$.\n\nTask A (derivation): Starting from a first-order Taylor expansion around a current iterate $\\xi_n$ for a smooth scalar function $f(\\xi;\\kappa)$ with a simple root at $\\xi^\\star$ (i.e., $f(\\xi^\\star;\\kappa)=0$ and $f'(\\xi^\\star;\\kappa)\\neq 0$), derive the Newton update formula for $\\xi_{n+1}$ in terms of $f(\\xi_n;\\kappa)$ and $f'(\\xi_n;\\kappa)$. Then, for the specific Rayleigh secular function $f(\\xi;\\kappa)$ given above, derive an explicit closed-form expression for $f'(\\xi;\\kappa)$ as a function of $\\xi$ and $\\kappa$ that is valid for $0\\xi\\min\\{1,\\kappa\\}$.\n\nTask B (algorithm and convergence criteria): Using the Newton update from Task A, design a robust iterative scheme to compute the nontrivial Rayleigh root $\\xi^\\star \\in (0,1)$ for a given $\\kappa1$, starting from an arbitrary initial guess $\\xi_0 \\in \\mathbb{R}$. Your scheme must:\n- enforce the domain constraints of $f(\\xi;\\kappa)$ and $f'(\\xi;\\kappa)$;\n- include a globalization strategy such as damping and residual-based backtracking to avoid leaving the admissible interval and to prevent residual growth;\n- provide a well-defined fallback (e.g., bisection on a bracketed interval) if the undamped Newton step is not acceptable or if $|f'(\\xi_n;\\kappa)|$ is too small;\n- terminate when either $|f(\\xi_n;\\kappa)|$ is below a tolerance or the successive iterates satisfy a relative step tolerance.\n\nYour derivation should clearly state convergence criteria under which quadratic convergence is expected, including any smoothness assumptions and conditions on the initial guess. Also state conditions that may cause loss of quadratic convergence and how the globalization strategy mitigates such issues.\n\nTask C (implementation and test suite): Implement the algorithm from Task B as a complete, runnable program that computes $\\xi^\\star$ for each test case in the suite below. For each case, the input parameters are $(\\kappa,\\xi_0)$, and your program must produce the final converged $\\xi^\\star$ as a floating-point number. Use a relative step tolerance of $10^{-12}$ and a residual tolerance of $10^{-12}$. Enforce the admissible interval $(0,1)$ for $\\xi$ throughout the iteration. The outputs are dimensionless numbers.\n\nTest suite to run, in order:\n1. $(\\kappa,\\xi_0) = (3.0,\\,0.8)$,\n2. $(\\kappa,\\xi_0) = (2.0,\\,1.2)$,\n3. $(\\kappa,\\xi_0) = \\left(\\tfrac{4}{3},\\,0.5\\right)$,\n4. $(\\kappa,\\xi_0) = (10.0,\\,-0.1)$.\n\nFinal output format: Your program should produce a single line of output containing the four results as a comma-separated list enclosed in square brackets. Each number must be rounded to exactly 12 decimal places. For example, a valid output line has the form\n\"[0.912345678901,0.900000000000,0.850000000000,0.910000000000]\".", "solution": "The supplied problem is a standard exercise in computational mechanics and is scientifically sound, well-posed, and complete. All parameters and objectives are clearly defined. I will proceed with the solution as requested.\n\nThe problem requires a three-part solution: the derivation of the necessary equations (Task A), the design of a numerical algorithm (Task B), and its implementation (Task C).\n\n### Task A: Derivations\n\nFirst, we derive the Newton-Raphson update formula. Consider a sufficiently smooth scalar function $f(\\xi)$ with a simple root $\\xi^\\star$, meaning $f(\\xi^\\star) = 0$ and $f'(\\xi^\\star) \\neq 0$. The first-order Taylor series expansion of $f(\\xi)$ around an iterate $\\xi_n$ is:\n$$\nf(\\xi) \\approx f(\\xi_n) + (\\xi - \\xi_n) f'(\\xi_n)\n$$\nWe seek the next iterate, $\\xi_{n+1}$, such that it is a better approximation of the root $\\xi^\\star$. We achieve this by setting the linear approximation to zero at $\\xi = \\xi_{n+1}$:\n$$\n0 = f(\\xi_n) + (\\xi_{n+1} - \\xi_n) f'(\\xi_n)\n$$\nAssuming $f'(\\xi_n) \\neq 0$, we can solve for the Newton update, $\\Delta\\xi_n = \\xi_{n+1} - \\xi_n$:\n$$\n(\\xi_{n+1} - \\xi_n) f'(\\xi_n) = -f(\\xi_n) \\implies \\Delta\\xi_n = -\\frac{f(\\xi_n)}{f'(\\xi_n)}\n$$\nThis gives the explicit update formula for the next iterate:\n$$\n\\xi_{n+1} = \\xi_n - \\frac{f(\\xi_n; \\kappa)}{f'(\\xi_n; \\kappa)}\n$$\n\nSecond, we derive the analytical derivative, $f'(\\xi; \\kappa)$, of the Rayleigh secular function:\n$$\nf(\\xi;\\kappa) = (2-\\xi)^2 - 4 \\sqrt{1-\\xi} \\sqrt{1-\\xi/\\kappa}\n$$\nThe domain of definition for this function requires the arguments of the square roots to be non-negative. With the given constraints $0  \\xi  1$ and $\\kappa  1$, both $1-\\xi$ and $1-\\xi/\\kappa$ are strictly positive.\n\nWe differentiate with respect to $\\xi$ using the power rule and the product rule.\nThe derivative of the first term is:\n$$\n\\frac{d}{d\\xi}(2-\\xi)^2 = 2(2-\\xi)(-1) = -2(2-\\xi)\n$$\nFor the second term, let's use the product rule on the two square root functions:\n$$\n\\frac{d}{d\\xi} \\left( -4 \\sqrt{1-\\xi} \\sqrt{1-\\xi/\\kappa} \\right) = -4 \\left[ \\left(\\frac{d}{d\\xi}\\sqrt{1-\\xi}\\right) \\sqrt{1-\\xi/\\kappa} + \\sqrt{1-\\xi} \\left(\\frac{d}{d\\xi}\\sqrt{1-\\xi/\\kappa}\\right) \\right]\n$$\nThe derivatives of the individual square root terms are:\n$$\n\\frac{d}{d\\xi}\\sqrt{1-\\xi} = \\frac{-1}{2\\sqrt{1-\\xi}}\n$$\n$$\n\\frac{d}{d\\xi}\\sqrt{1-\\xi/\\kappa} = \\frac{-1/\\kappa}{2\\sqrt{1-\\xi/\\kappa}}\n$$\nSubstituting these back into the product rule expansion:\n$$\n-4 \\left[ \\left(\\frac{-1}{2\\sqrt{1-\\xi}}\\right) \\sqrt{1-\\xi/\\kappa} + \\sqrt{1-\\xi} \\left(\\frac{-1/\\kappa}{2\\sqrt{1-\\xi/\\kappa}}\\right) \\right]\n$$\n$$\n= 2 \\left[ \\frac{\\sqrt{1-\\xi/\\kappa}}{\\sqrt{1-\\xi}} + \\frac{\\sqrt{1-\\xi}}{\\kappa\\sqrt{1-\\xi/\\kappa}} \\right]\n$$\nTo combine these fractions, we find a common denominator, which is $\\kappa\\sqrt{1-\\xi}\\sqrt{1-\\xi/\\kappa}$:\n$$\n= 2 \\left[ \\frac{\\kappa(1-\\xi/\\kappa) + (1-\\xi)}{\\kappa\\sqrt{1-\\xi}\\sqrt{1-\\xi/\\kappa}} \\right] = 2 \\frac{\\kappa-\\xi+1-\\xi}{\\kappa\\sqrt{1-\\xi}\\sqrt{1-\\xi/\\kappa}} = \\frac{2(\\kappa+1-2\\xi)}{\\kappa\\sqrt{1-\\xi}\\sqrt{1-\\xi/\\kappa}}\n$$\nCombining the derivatives of both terms, we obtain the final expression for $f'(\\xi; \\kappa)$:\n$$\nf'(\\xi;\\kappa) = -2(2-\\xi) + \\frac{2(\\kappa+1-2\\xi)}{\\kappa\\sqrt{1-\\xi}\\sqrt{1-\\xi/\\kappa}}\n$$\nThis expression is valid for $0  \\xi  \\min\\{1, \\kappa\\}$. Since the problem specifies $\\kappa  1$, the domain of validity is $0  \\xi  1$.\n\n### Task B: Algorithm Design\n\nWe must design a robust iterative scheme to find the nontrivial root $\\xi^\\star \\in (0,1)$. The algorithm will be a globalized Newton-Raphson method.\n\n1.  **Initialization and Domain Enforcement**: The search for the root $\\xi^\\star$ is restricted to the open interval $(0,1)$. An arbitrary initial guess $\\xi_0 \\in \\mathbb{R}$ must first be handled. If $\\xi_0$ lies outside the safe interval $[\\epsilon, 1-\\epsilon]$ (for a small $\\epsilon  0$, e.g., $10^{-9}$), it must be projected to a robust starting point within this interval, such as $\\xi_0 = 0.9$, which is a reasonable physical approximation, as $c_R$ is often close to $c_T$. We establish a bracket $[a, b]$ for the root, initialized to $[\\epsilon, 1-\\epsilon]$, which is valid because analysis shows $f(\\epsilon)  0$ and $f(1-\\epsilon)  0$. This bracket will be dynamically updated and used for the bisection fallback.\n\n2.  **Iterative Scheme**: For each iteration $n=0, 1, 2, \\dots$:\n    a.  Calculate the function value $f_n = f(\\xi_n; \\kappa)$ and its derivative $f'_n = f'(\\xi_n; \\kappa)$.\n    b.  Check for residual convergence: if $|f_n|  \\tau_{res}$, the algorithm terminates.\n    c.  Update the bracket $[a, b]$: if $f_n  0$, set $a = \\max(a, \\xi_n)$; if $f_n  0$, set $b = \\min(b, \\xi_n)$.\n    d.  Compute the raw Newton step $\\Delta\\xi_n = -f_n / f'_n$.\n\n3.  **Globalization and Fallback**: The raw Newton step may be too large, point in the wrong direction, or be undefined.\n    a.  **Fallback to Bisection**: A bisection step is taken if the Newton step is unreliable. This occurs if $|f'_n|$ is close to zero (e.g., $|f'_n|  10^{-6}$), indicating a nearly horizontal tangent, or if backtracking fails. The bisection step is $\\Delta\\xi_n = (a+b)/2 - \\xi_n$.\n    b.  **Damped Backtracking**: A line search is performed to find a suitable step length $\\alpha_n \\in (0, 1]$. We start with $\\alpha_n=1$ (full Newton step) and successively reduce it (e.g., $\\alpha_n \\leftarrow \\alpha_n/2$) until the candidate iterate $\\xi_{n+1} = \\xi_n + \\alpha_n \\Delta\\xi_n$ satisfies two conditions:\n        i.  **Domain Admissibility**: $\\xi_{n+1}$ must remain within the interval $(0, 1)$.\n        ii. **Sufficient Decrease (Armijo-type condition)**: The absolute value of the residual must decrease, i.e., $|f(\\xi_{n+1}; \\kappa)|  |f(\\xi_n; \\kappa)|$.\n    c.  If the backtracking loop fails to find a suitable $\\alpha_n$ above a minimum threshold (e.g., $\\alpha_{min} = 10^{-8}$), we fallback to a single bisection step for that iteration.\n\n4.  **Update and Termination**:\n    a.  The iterate is updated: $\\xi_{n+1} = \\xi_n + \\alpha_n \\Delta\\xi_n$.\n    b.  Check for step size convergence: if $|\\xi_{n+1} - \\xi_n|  \\tau_{step}(1+|\\xi_n|)$, the algorithm terminates.\n    c.  A maximum number of iterations (e.g., $50$) provides a final safeguard against non-convergence.\n\n5.  **Convergence Properties**:\n    Newton's method exhibits **quadratic convergence** if (i) the function $f$ is twice continuously differentiable ($C^2$) near the root, (ii) the root $\\xi^\\star$ is simple ($f'(\\xi^\\star) \\neq 0$), and (iii) the initial guess $\\xi_0$ is sufficiently close to $\\xi^\\star$. The Rayleigh function is smooth in the search interval, and the nontrivial root is known to be simple. Thus, quadratic convergence is expected in the terminal phase of the iteration.\n    \n    Convergence may degrade to **linear** if the iterate is far from the root, necessitating damping ($\\alpha_n  1$). The designed globalization strategy ensures robust, albeit slower, progress towards the basin of quadratic convergence. The fallback to bisection, a linearly convergent method, is a crucial safety measure for cases where Newton's method behaves poorly, ensuring the algorithm does not diverge.\n\nThe implementation of this algorithm for Task C is provided in the final answer section.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef f_rayleigh(xi, kappa):\n    \"\"\"\n    Computes the Rayleigh secular function f(xi; kappa).\n    The domain requires xi  1 and xi  kappa. Given kappa  1, this is xi  1.\n    \"\"\"\n    if xi = 1.0:\n        return np.nan\n    term1 = (2.0 - xi)**2\n    # Ensure arguments to sqrt are non-negative\n    arg2 = 1.0 - xi\n    arg3 = 1.0 - xi / kappa\n    if arg2  0 or arg3  0:\n        return np.nan\n    term2 = 4.0 * np.sqrt(arg2) * np.sqrt(arg3)\n    return term1 - term2\n\ndef fp_rayleigh(xi, kappa):\n    \"\"\"\n    Computes the derivative of the Rayleigh secular function f'(xi; kappa).\n    The domain requires 0  xi  1 for kappa  1.\n    \"\"\"\n    if not (0.0  xi  1.0):\n        return np.nan\n        \n    term1 = -2.0 * (2.0 - xi)\n    \n    # Check for division by zero\n    denom_sqrt_term = (1.0 - xi) * (1.0 - xi / kappa)\n    if denom_sqrt_term = 0:\n        return np.nan\n        \n    numerator_term2 = 2.0 * (kappa + 1.0 - 2.0 * xi)\n    denominator_term2 = kappa * np.sqrt(denom_sqrt_term)\n    \n    term2 = numerator_term2 / denominator_term2\n    return term1 + term2\n\ndef find_rayleigh_root(kappa, xi0, tol_res=1e-12, tol_step=1e-12, max_iter=50):\n    \"\"\"\n    Finds the non-trivial root of the Rayleigh secular function using a robust\n    globalized Newton-Raphson method with bisection fallback.\n    \"\"\"\n    # Enforce admissible interval (0, 1) and handle initial guess\n    # A safe interval slightly smaller than (0,1) to avoid boundary issues.\n    xi_min, xi_max = 1e-9, 1.0 - 1e-9\n    \n    if not (xi_min = xi0 = xi_max):\n        xi = 0.9  # Reset to a robust initial guess\n    else:\n        xi = xi0\n\n    # Initialize bracket for bisection fallback. We know f(eps)  0 and f(1-eps)  0.\n    # f'(0) = (2-2k)/k  0, so f is initially decreasing from f(0)=0.\n    # f(1) = 1  0.\n    bracket = [xi_min, xi_max]\n\n    for i in range(max_iter):\n        f_val = f_rayleigh(xi, kappa)\n\n        # 1. Check for convergence on residual\n        if abs(f_val)  tol_res:\n            return xi\n\n        # 2. Update bracket with the current best bounds for bisection fallback\n        if f_val  0:\n            bracket[0] = max(bracket[0], xi)\n        else:\n            bracket[1] = min(bracket[1], xi)\n            \n        fp_val = fp_rayleigh(xi, kappa)\n\n        # 3. Determine step: Newton or Bisection\n        use_bisection = False\n        if np.isnan(fp_val) or abs(fp_val)  1e-6: # Fallback if derivative is ill-defined or too small\n            use_bisection = True\n            \n        if use_bisection:\n            # Bisection step on the current bracket\n            step = (bracket[0] + bracket[1]) / 2.0 - xi\n        else:\n            # Standard Newton step\n            step = -f_val / fp_val\n\n        # 4. Globalization: Backtracking line search to ensure progress and domain adherence\n        alpha = 1.0\n        min_alpha = 1e-8\n        \n        while alpha  min_alpha:\n            xi_next = xi + alpha * step\n            \n            # 4a. Enforce domain constraint\n            if not (xi_min = xi_next = xi_max):\n                alpha /= 2.0\n                continue\n            \n            f_next = f_rayleigh(xi_next, kappa)\n\n            # 4b. Ensure residual reduction (simplified Armijo condition)\n            if abs(f_next)  abs(f_val):\n                break  # Step accepted\n            \n            alpha /= 2.0\n        \n        # If backtracking failed, perform a single bisection step as the final fallback\n        if alpha = min_alpha:\n            xi_next = (bracket[0] + bracket[1]) / 2.0\n\n        # 5. Check for convergence on step size (mixed relative-absolute tolerance)\n        if abs(xi_next - xi)  tol_step * (1.0 + abs(xi)):\n            xi = xi_next\n            return xi\n        \n        # 6. Update iterate\n        xi = xi_next\n\n    # If the loop finishes without converging, return the last computed value.\n    # In a production environment, an exception should be raised.\n    return xi\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (3.0, 0.8),\n        (2.0, 1.2),\n        (4.0/3.0, 0.5),\n        (10.0, -0.1)\n    ]\n\n    results = []\n    # Use specified tolerances\n    tol_res = 1e-12\n    tol_step = 1e-12\n\n    for kappa, xi0 in test_cases:\n        root = find_rayleigh_root(kappa, xi0, tol_res=tol_res, tol_step=tol_step)\n        # Format output to exactly 12 decimal places\n        results.append(f\"{root:.12f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2678857"}]}