{"hands_on_practices": [{"introduction": "Understanding the graphical representation of fluid friction is a cornerstone of hydraulic engineering. This first practice invites you to engage directly with the foundational concepts of the Moody diagram by exploring its limiting behavior. By determining the practical minimum friction factor for turbulent flow in a hydraulically smooth pipe, you will gain a deeper appreciation for the chart's structure and establish a baseline for best-case performance in pipe system design [@problem_id:1802764].", "problem": "An engineering team is designing a novel, high-efficiency liquid cooling system. To enhance heat transfer, the flow within the cooling channels must be maintained in the turbulent regime. The channels are to be manufactured from a new polymer that can be polished to an exceptional finish, making them hydraulically smooth. The Darcy friction factor, $f$, is a dimensionless quantity used to describe frictional losses in the pipe and is a function of the Reynolds number, $Re$, and the relative roughness of the pipe's inner surface, $\\epsilon/D$, where $\\epsilon$ is the absolute roughness and $D$ is the pipe diameter. For a hydraulically smooth pipe, the relative roughness $\\epsilon/D$ can be considered effectively zero.\n\nAs a consultant, you are asked to determine the practical lower limit for the Darcy friction factor, $f$, that the team should expect for any possible turbulent flow condition ($Re > 4000$) within these smooth channels. Your answer will help set a baseline for the best-case performance of the system. Based on the established relationship between $f$, $Re$, and $\\epsilon/D$ for pipe flow, what is the most reasonable estimate for this minimum friction factor?\n\nA. 0.008\n\nB. 0.0\n\nC. 0.038\n\nD. 0.079\n\nE. 0.1", "solution": "The Darcy friction factor for turbulent flow in a circular pipe is well represented by the Colebrook–White equation:\n$$\n\\frac{1}{\\sqrt{f}}=-2\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7}+\\frac{2.51}{Re\\sqrt{f}}\\right).\n$$\nFor a hydraulically smooth pipe, the relative roughness satisfies $\\epsilon/D \\to 0$, so the smooth-pipe (Prandtl–Karman) form is obtained:\n$$\n\\frac{1}{\\sqrt{f}}=2\\log_{10}\\!\\left(Re\\sqrt{f}\\right)-0.8.\n$$\nFrom this implicit relation, $f$ depends only on $Re$ for smooth pipes. To determine a lower bound over the turbulent regime $Re>4000$, note the monotonic dependence: as $Re$ increases, the right-hand side increases slowly, which increases $1/\\sqrt{f}$ and therefore decreases $f$. Thus, $f$ is a decreasing function of $Re$ for smooth turbulent flow.\n\nIn the formal limit $Re\\to\\infty$, the smooth-pipe equation implies that $\\sqrt{f}$ decreases roughly like $1/\\log_{10}(Re)$, so $f\\to 0$. However, $f=0$ is not attainable at any finite $Re$, and engineering practice uses a practical lower bound taken from the asymptotic behavior of the smooth-pipe curve on the Moody diagram at very high but finite $Re$.\n\nA convenient way to see the practical magnitude is to rewrite the smooth-pipe equation by setting $y=1/\\sqrt{f}$:\n$$\ny=2\\log_{10}\\!\\left(\\frac{Re}{y}\\right)-0.8 \\quad\\Longleftrightarrow\\quad y+2\\log_{10}(y)=2\\log_{10}(Re)-0.8.\n$$\nFor large but plausible engineering Reynolds numbers in the fully turbulent regime, this gives friction factors on the order of $10^{-2}$ and trending downward slowly. For example, solving $y+2\\log_{10}(y)=2\\log_{10}(10^{7})-0.8=13.2$ yields $y\\approx 11.06$ and hence $f\\approx 1/y^{2}\\approx 0.0082$. This aligns with the well-known smooth-pipe asymptote on the Moody diagram, where the smooth turbulent curve approaches a practical lower limit near $f\\approx 0.008$ over the highest Reynolds numbers commonly encountered.\n\nTherefore, although the theoretical limit as $Re\\to\\infty$ is $f\\to 0$, the most reasonable practical lower estimate for any turbulent flow in hydraulically smooth channels is approximately $f\\approx 0.008$. Among the given options, this corresponds to choice A and excludes $0.0$ as unattainable in practice.", "answer": "$$\\boxed{A}$$", "id": "1802764"}, {"introduction": "Moving from the graphical representation to the underlying mathematics, this exercise challenges you to dissect the Colebrook-White equation itself. The equation masterfully combines the effects of wall roughness and the viscous sublayer. This practice asks you to derive an expression for the Reynolds number where these two competing effects are balanced, providing a powerful conceptual tool for understanding the transition from viscosity-dominated to roughness-dominated turbulent flow [@problem_id:642825].", "problem": "The Darcy friction factor $f$ for turbulent flow in a pipe is implicitly defined by the Colebrook-White equation, which can be expressed using a natural logarithm as:\n$$\n\\frac{1}{\\sqrt{f}} = -A \\ln \\left( \\frac{\\epsilon/D}{B} + \\frac{C}{Re \\sqrt{f}} \\right)\n$$\nHere, $Re$ is the Reynolds number, $\\epsilon/D$ is the relative roughness of the pipe, and $A$, $B$, and $C$ are positive dimensionless empirical constants. The two additive terms within the argument of the logarithm, $\\frac{\\epsilon/D}{B}$ and $\\frac{C}{Re \\sqrt{f}}$, represent the contributions to friction from the pipe wall roughness and the viscous sublayer, respectively.\n\nFor a given relative roughness $\\epsilon/D$, a characteristic transition Reynolds number, $Re_t$, can be defined as the value of $Re$ at which these two effects make an equal contribution to the argument of the logarithm. This point marks a conceptual boundary between the region where friction is dominated by viscous effects and the region where it is dominated by roughness.\n\nDerive an expression for this transition Reynolds number, $Re_t$, in terms of the relative roughness $\\epsilon/D$ and the constants $A$, $B$, and $C$.", "solution": "We start from the Colebrook–White form,  \n$$\\frac{1}{\\sqrt{f}}=-A\\ln\\!\\Bigl(\\frac{\\epsilon/D}{B}+\\frac{C}{Re\\,\\sqrt{f}}\\Bigr)\\,. $$  \nDefine the two contributions inside the log:  \n$$R_{\\rm rough}=\\frac{\\epsilon/D}{B},\\qquad R_{\\rm visc}=\\frac{C}{Re\\,\\sqrt{f}}\\,. $$  \nAt the transition Reynolds number $Re_t$, these contributions are equal,  \n$$\\frac{\\epsilon/D}{B}=\\frac{C}{Re_t\\,\\sqrt{f}}\\,. $$  \nSolve for $Re_t$:  \n$$Re_t\\,\\sqrt{f}=\\frac{C\\,B}{\\epsilon/D}\\quad\\Longrightarrow\\quad\nRe_t=\\frac{C\\,B}{(\\epsilon/D)\\,\\sqrt{f}}\\,. \\tag{1}$$  \nBut at the transition point the log–argument becomes twice either term,  \n$$\\frac{1}{\\sqrt{f}}=-A\\ln\\!\\Bigl(2\\,\\frac{\\epsilon/D}{B}\\Bigr)\n\\quad\\Longrightarrow\\quad\n\\sqrt{f}=\\frac{1}{A\\,\\bigl[-\\ln\\!(2\\,\\epsilon/(D B))\\bigr]}\n=\\frac{1}{A\\,\\ln\\!\\bigl(\\tfrac{D B}{2\\epsilon}\\bigr)}\\,. $$  \nSubstitute this $\\sqrt{f}$ into (1):  \n$$Re_t\n=\\frac{C\\,B}{(\\epsilon/D)}\\;A\\,\\ln\\!\\Bigl(\\tfrac{D B}{2\\epsilon}\\Bigr)\n=\\frac{A\\,B\\,C\\,D}{\\epsilon}\\,\\ln\\!\\Bigl(\\frac{B\\,D}{2\\,\\epsilon}\\Bigr)\\,. $$\nThus the transition Reynolds number is  \n$$Re_t=\\frac{A B C D}{\\epsilon}\\,\\ln\\!\\Bigl(\\frac{B D}{2\\epsilon}\\Bigr)\\,. $$", "answer": "$$\\boxed{\\frac{A B C D}{\\epsilon}\\,\\ln\\!\\left(\\frac{B D}{2\\epsilon}\\right)}$$", "id": "642825"}, {"introduction": "The implicit nature of the Colebrook equation presents a classic engineering challenge that is perfectly suited for modern computational tools. This final hands-on practice guides you to develop a numerical solver to find the friction factor, $f$, with high precision. By implementing a fixed-point iteration method, you will move beyond visual chart-reading and approximate formulas to master a robust and universally applicable technique for solving real-world pipe flow problems [@problem_id:2393395].", "problem": "You are given the implicit Colebrook relation for turbulent flow in a circular pipe that defines the Darcy–Weisbach friction factor $f$ as\n$$\n\\frac{1}{\\sqrt{f}} \\;=\\; -2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} \\;+\\; \\frac{2.51}{Re\\,\\sqrt{f}}\\right),\n$$\nwhere $\\epsilon/D$ is the relative roughness, $Re$ is the Reynolds number, and $\\log_{10}$ denotes the base-$10$ logarithm. The quantities $Re$ and $\\epsilon/D$ are dimensionless. For each specified pair $(Re,\\epsilon/D)$, compute the unique positive solution $f$ to the above equation.\n\nYour program must evaluate $f$ for the following test suite of parameter pairs $(Re,\\epsilon/D)$:\n- Case $1$: $(Re,\\epsilon/D) = (100000,\\; 10^{-4})$.\n- Case $2$: $(Re,\\epsilon/D) = (100000,\\; 0)$.\n- Case $3$: $(Re,\\epsilon/D) = (4000,\\; 5\\times 10^{-4})$.\n- Case $4$: $(Re,\\epsilon/D) = (10^{7},\\; 5\\times 10^{-3})$.\n\nRequirements:\n- Interpret $\\log_{10}$ as the base-$10$ logarithm exactly as written in the equation.\n- All inputs are dimensionless. No physical units are required in the answer.\n- For each case, return the value of $f$ as a real number rounded to $8$ decimal places.\n\nFinal output format:\n- Your program should produce a single line of output containing the results for Cases $1$ through $4$, in order, as a comma-separated list enclosed in square brackets, with each entry rounded to $8$ decimal places (for example, $[f_1,f_2,f_3,f_4]$ where $f_i$ are decimal numerals).", "solution": "The problem presented is subjected to validation.\n\n**Step 1: Extract Givens**\n- **Equation**: The Colebrook relation is given as $\\frac{1}{\\sqrt{f}} = -2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)$.\n- **Definitions**: $f$ is the Darcy–Weisbach friction factor, $\\epsilon/D$ is the relative roughness, and $Re$ is the Reynolds number. $\\log_{10}$ is the base-$10$ logarithm.\n- **Constraint**: A unique positive solution $f$ is sought.\n- **Test Cases**:\n    - Case 1: $(Re, \\epsilon/D) = (100000, 10^{-4})$\n    - Case 2: $(Re, \\epsilon/D) = (100000, 0)$\n    - Case 3: $(Re, \\epsilon/D) = (4000, 5 \\times 10^{-4})$\n    - Case 4: $(Re, \\epsilon/D) = (10^7, 5 \\times 10^{-3})$\n- **Output Requirement**: The value of $f$ for each case must be rounded to $8$ decimal places.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The Colebrook equation is a fundamental and empirically validated relationship in fluid mechanics for determining the friction factor in turbulent pipe flow. It is a cornerstone of hydraulic engineering. The given parameters for Reynolds number ($Re$) and relative roughness ($\\epsilon/D$) fall within physically realistic ranges. $Re \\ge 4000$ confirms the flow is in the turbulent or transitional-to-turbulent regime, where the equation is applicable.\n- **Well-Posedness**: The equation is implicit in $f$, and it has been mathematically proven that for any positive $Re$ and non-negative $\\epsilon/D$, there exists a unique positive solution for $f$. The problem is therefore well-posed.\n- **Objectivity**: The problem is stated using precise mathematical and engineering terminology. There is no ambiguity or subjective content.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically sound, well-posed, objective, and complete. It is a standard problem in computational engineering. The problem is deemed **valid**. A solution will be furnished.\n\nThe Colebrook equation is a transcendental equation, meaning it cannot be solved for the friction factor $f$ through direct algebraic manipulation. Consequently, a numerical root-finding or iterative method is necessary. We shall employ the fixed-point iteration method, which is robust and efficient for this particular problem.\n\nTo apply fixed-point iteration, we must rearrange the equation into the form $f = g(f)$. A suitable rearrangement is obtained by isolating $f$ on one side. First, we invert the initial equation:\n$$\n\\sqrt{f} = \\frac{1}{-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)}\n$$\nSquaring both sides yields the desired fixed-point form:\n$$\nf = \\frac{1}{\\left[-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)\\right]^2}\n$$\nThis gives us an iterative scheme where the next approximation for $f$, denoted $f_{k+1}$, is calculated from the current approximation, $f_k$:\n$$\nf_{k+1} = g(f_k) = \\frac{1}{\\left[-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f_k}}\\right)\\right]^2}\n$$\nThis iteration is guaranteed to converge to the unique positive root for any physically reasonable initial guess $f_0 > 0$. The derivative of the iteration function, $|g'(f)|$, is less than $1$ over the domain of interest, satisfying the condition for convergence of a contraction mapping.\n\nThe algorithm is as follows:\n1.  For each given pair of $(Re, \\epsilon/D)$, define the constants $C_1 = \\frac{\\epsilon/D}{3.7}$ and $C_2 = \\frac{2.51}{Re}$.\n2.  The iteration function is then $f_{k+1} = \\frac{1}{4 \\left[ \\log_{10}(C_1 + C_2/\\sqrt{f_k}) \\right]^2}$.\n3.  Choose an initial guess for the friction factor, $f_0$. A value of $f_0 = 0.02$ is a common and effective starting point, as it lies within the typical range for turbulent flow friction factors found on the Moody diagram.\n4.  Iterate using the formula for $f_{k+1}$ until the change between successive iterates is negligible, i.e., $|f_{k+1} - f_k|  \\tau$, where $\\tau$ is a small tolerance (e.g., $10^{-10}$).\n5.  The final converged value, $f$, is then rounded to $8$ decimal places as specified.\n\nThis procedure will be implemented for each of the four test cases provided. For Case 2, where $\\epsilon/D = 0$ (a smooth pipe), the term $\\frac{\\epsilon/D}{3.7}$ becomes zero, but the iterative scheme remains structurally identical.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the Darcy friction factor 'f' using the Colebrook equation\n    via fixed-point iteration for a given set of test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Parameter set 1: Re, epsilon/D)\n        (100000, 1e-4),\n        # (Parameter set 2: Re, epsilon/D)\n        (100000, 0),\n        # (Parameter set 3: Re, epsilon/D)\n        (4000, 5e-4),\n        # (Parameter set 4: Re, epsilon/D)\n        (1e7, 5e-3),\n    ]\n\n    results = []\n    for case in test_cases:\n        Re, rel_roughness = case\n        \n        # Initial guess for the friction factor f.\n        # 0.02 is a standard initial guess for turbulent flow.\n        f = 0.02\n        \n        # Iteration parameters\n        tolerance = 1e-10\n        max_iterations = 100 # Convergence is fast, this is a safeguard.\n\n        for _ in range(max_iterations):\n            f_old = f\n            \n            # The Colebrook equation rearranged for fixed-point iteration:\n            # f = 1 / (-2 * log10( (eps/D)/3.7 + 2.51/(Re*sqrt(f)) ))**2\n            # Define terms for clarity\n            term1 = rel_roughness / 3.7\n            term2 = 2.51 / (Re * np.sqrt(f_old))\n            \n            try:\n                # Handle potential math domain errors if the argument to log10 becomes non-positive,\n                # which can happen with a poor initial guess for exotic parameters.\n                log_arg = term1 + term2\n                if log_arg = 0:\n                    # This case should not be reached with the given valid parameters\n                    # and a positive initial guess.\n                    raise ValueError(\"log argument is non-positive\")\n\n                denominator = -2.0 * np.log10(log_arg)\n                f = 1.0 / (denominator**2)\n\n            except (ValueError, ZeroDivisionError) as e:\n                # If an error occurs, we report it and break.\n                # For this problem set, this block is not expected to be executed.\n                results.append(f\"Error for case {case}: {e}\")\n                break\n\n            # Check for convergence\n            if np.abs(f - f_old)  tolerance:\n                break\n        \n        # After the loop, store the rounded result.\n        # The problem asks for the result to be rounded to 8 decimal places.\n        results.append(f\"{f:.8f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2393395"}]}