{"hands_on_practices": [{"introduction": "The foundation of Particle Image Velocimetry (PIV) is the simple formula $\\vec{u} = \\Delta\\vec{r} / \\Delta t$, which treats velocity as constant over the time interval $\\Delta t$. This exercise [@problem_id:510747] challenges that core assumption by exploring a flow with constant acceleration. By deriving the resulting bias error, you will gain a fundamental understanding of how the temporal dynamics of a flow impact measurement accuracy and appreciate the importance of choosing an appropriate time interval $\\Delta t$.", "id": "510747", "problem": "Particle Image Velocimetry (PIV) is a flow visualization technique used to obtain velocity measurements in a fluid. The standard PIV algorithm determines the velocity vector by measuring the average displacement, $\\Delta \\vec{r}$, of tracer particles within a small sub-region of the flow, known as an interrogation window, over a short time interval, $\\Delta t$. The measured velocity is then computed as $\\vec{u}_{PIV} = \\Delta \\vec{r} / \\Delta t$.\n\nIn flows with non-zero acceleration, this measurement process can introduce a bias error. Consider a simplified model to analyze this bias. Assume the PIV system perfectly tracks and measures the displacement of a single tracer particle that is initially located at the geometric center of the interrogation window, $\\vec{r}_c$, at the initial time $t_0$. This particle is part of a flow where it experiences a constant Lagrangian acceleration, $\\vec{a}_p$.\n\nThe PIV measurement is performed over the time interval from $t_0$ to $t_0 + \\Delta t$. The \"true\" velocity, against which the PIV measurement is compared, is defined as the instantaneous velocity of the fluid at the center of the interrogation window at the initial time, i.e., $\\vec{u}_{true} = \\vec{u}(\\vec{r}_c, t_0)$.\n\nDerive the bias velocity error vector, defined as $\\vec{\\epsilon}_u = \\vec{u}_{PIV} - \\vec{u}_{true}$, in terms of the constant particle acceleration $\\vec{a}_p$ and the time interval $\\Delta t$.\n\n", "solution": "Relevant equations:\n1. Particle displacement under constant acceleration:\n$$\\Delta \\vec{r} = \\vec{u}(\\vec{r}_c,t_0)\\,\\Delta t + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t^2.$$\n2. PIV‐measured velocity:\n$$\\vec{u}_{PIV} = \\frac{\\Delta \\vec{r}}{\\Delta t}.$$\n3. True velocity at $t_0$ and $\\vec{r}_c$:\n$$\\vec{u}_{true} = \\vec{u}(\\vec{r}_c,t_0).$$\n4. Bias velocity error:\n$$\\vec{\\epsilon}_u = \\vec{u}_{PIV} - \\vec{u}_{true}.$$\n\nStep‐by‐step derivation:\nFrom (1),\n$$\\Delta \\vec{r} = \\vec{u}(\\vec{r}_c,t_0)\\,\\Delta t + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t^2.$$\nDivide by $\\Delta t$ to get $\\vec{u}_{PIV}$:\n$$\\vec{u}_{PIV} = \\frac{\\Delta \\vec{r}}{\\Delta t}\n= \\vec{u}(\\vec{r}_c,t_0) + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t.$$\nSubtract $\\vec{u}_{true} = \\vec{u}(\\vec{r}_c,t_0)$:\n$$\\vec{\\epsilon}_u\n= \\vec{u}_{PIV} - \\vec{u}_{true}\n= \\bigl[\\vec{u}(\\vec{r}_c,t_0) + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t\\bigr]\n  - \\vec{u}(\\vec{r}_c,t_0)\n= \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t.$$\nThus the bias error is\n$$\\vec{\\epsilon}_u = \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t.$$", "answer": "$$\\boxed{\\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t}$$"}, {"introduction": "In practical experiments, planar PIV relies on a laser sheet with a finite thickness to illuminate tracer particles. A significant source of error arises when particles move out of this illuminated plane between exposures, an effect known as \"loss of pairs.\" This problem [@problem_id:510794] guides you through a scenario to quantify the measurement bias caused by an out-of-plane velocity component, providing crucial insight into the limitations of 2D measurement techniques when applied to 3D flows.", "id": "510794", "problem": "**Background:** In planar Particle Image Velocimetry (PIV), a thin sheet of laser light illuminates tracer particles within a fluid flow. By capturing two images of the particles at a short time interval $\\Delta t$, the in-plane velocity field can be measured. A known source of measurement error is the \"loss of pairs\" due to the out-of-plane velocity component, which can cause particles to move out of the finite-thickness laser sheet between the two image acquisitions. This effect can lead to a statistical bias in the measured velocity if there is a velocity gradient in the out-of-plane direction.\n\n**Problem:** Consider a planar PIV measurement of a steady, three-dimensional flow in the $x-y$ plane. The laser sheet has a uniform thickness $\\Delta z_L$ and is centered at $z=0$. The illumination intensity is assumed to be constant for $|z| \\le \\Delta z_L/2$ and zero otherwise. The flow is seeded with a uniform concentration of tracer particles. The velocity field is given by:\n$$ \\vec{V}(x, y, z) = (U_0 + \\alpha z) \\hat{\\imath} + V_0 \\hat{\\jmath} + W_0 \\hat{k} $$\nwhere $U_0$, $V_0$, $W_0$, and $\\alpha$ are constants. The PIV measurement is taken with a time separation $\\Delta t$ between the two images. Assume that the out-of-plane particle displacement is smaller than the sheet thickness, i.e., $|W_0| \\Delta t < \\Delta z_L$, ensuring that a sub-population of particles remains within the laser sheet for both exposures.\n\nThe PIV algorithm effectively computes the average velocity of only those particles that are located within the laser sheet at *both* the first and second exposures. The true average velocity in the $x$-direction, $U_{true}$, is the spatial average of the $x$-component of velocity across the entire laser sheet thickness at any instant. The measured velocity, $\\hat{U}$, is the average velocity of the sub-population of particles that remain in the sheet for both images.\n\nDerive an expression for the bias error in the $x$-component of the velocity, defined as $\\epsilon_U = \\hat{U} - U_{true}$.\n\n", "solution": "We have a 3D steady flow  \n$$\\vec V(x,y,z)=(U_0+\\alpha z)\\,\\hat\\imath+V_0\\,\\hat\\jmath+W_0\\,\\hat k$$  \nand a laser sheet of uniform thickness $\\Delta z_L$ centered at $z=0$.  Particles with initial $z_0\\in[-\\tfrac{\\Delta z_L}{2},\\tfrac{\\Delta z_L}{2}]$ are illuminated at time 0.  Between exposures they move by  \n$$\\delta z=W_0\\,\\Delta t\\,. $$  \nTo be imaged twice, particles must satisfy  \n$$z_0\\in[-\\tfrac{\\Delta z_L}{2},\\tfrac{\\Delta z_L}{2}]\\cap[-\\tfrac{\\Delta z_L}{2}-\\delta z,\\tfrac{\\Delta z_L}{2}-\\delta z]\\,. $$  \nOne finds that this intersection is an interval of length $L_s=\\Delta z_L-|\\delta z|$, with endpoints symmetric about $z=-\\delta z/2$.  \n\n1. True average in the sheet:  \n$$U_{\\rm true}=\\frac1{\\Delta z_L}\\int_{-\\Delta z_L/2}^{\\Delta z_L/2}(U_0+\\alpha z)\\,dz\n=U_0\\,. $$\n\n2. Measured average over survivors: they occupy $z\\in[z_1,z_2]$ with $z_1+z_2=-\\delta z$, so their mean  \n$$\\langle z\\rangle=\\frac{z_1+z_2}2=-\\frac{\\delta z}2\\,. $$  \nHence  \n$$\\hat U=U_0+\\alpha\\,\\langle z\\rangle\n=U_0-\\frac{\\alpha\\,\\delta z}2\n=U_0-\\frac{\\alpha\\,W_0\\,\\Delta t}2\\,. $$\n\n3. Therefore the bias error  \n$$\\epsilon_U=\\hat U-U_{\\rm true}\n=-\\frac{\\alpha\\,W_0\\,\\Delta t}2\\,. $$", "answer": "$$\\boxed{-\\frac{\\alpha\\,W_0\\,\\Delta t}{2}}$$"}, {"introduction": "To overcome the limitations of planar methods, Tomographic PIV reconstructs a full 3D velocity field from multiple 2D camera views, which involves solving a large-scale inverse problem. A key algorithm for this task is the Simultaneous Algebraic Reconstruction Technique (SART). This practice [@problem_id:510851] delves into the heart of this computational method, asking you to derive its iterative update rule, including a physical non-negativity constraint, to reveal the logic behind reconstructing a 3D object from its projections.", "id": "510851", "problem": "In tomographic flow visualization techniques, such as Tomographic Particle Image Velocimetry (Tomo-PIV), the goal is to reconstruct a 3D scalar field from a set of 2D projection images. This problem is often formulated as a large system of linear equations, $\\mathbf{p} = \\mathbf{Wf}$, where $\\mathbf{f}$ is the vector of unknown voxel values, $\\mathbf{p}$ is the vector of measured projection data, and $\\mathbf{W}$ is the projection matrix. The Simultaneous Algebraic Reconstruction Technique (SART) is an iterative algorithm used to solve this system.\n\nLet $f_j$ be the scalar value of the $j$-th voxel ($j=1, \\dots, N$), and let $p_i$ be the measured integrated value for the $i$-th projection ray ($i=1, \\dots, M$). The matrix element $w_{ij} \\ge 0$ represents the contribution of voxel $j$ to ray $i$, and is zero if the ray does not pass through the voxel. The SART algorithm iteratively refines an estimate of the voxel values, denoted by $f_j^{(k)}$ at iteration $k$.\n\nThe update for a given voxel $f_j$ at iteration $k+1$ is derived from two main steps:\n1.  **Correction Calculation**: For each ray $i$, the projection error is calculated. This is the difference between the measured projection $p_i$ and the forward projection of the current estimate, $\\sum_{n=1}^N w_{in}f_n^{(k)}$. This error is then normalized by the sum of weights along that ray, $\\sum_{n=1}^N w_{in}$, to find an average correction term for that ray. We assume that for every ray $i$, there is at least one voxel $n$ such that $w_{in} > 0$.\n2.  **Back-projection**: The correction for voxel $j$ is a weighted sum of the correction terms from all rays that pass through it. The contribution of each ray's correction to the voxel is weighted by its corresponding matrix element $w_{ij}$. This aggregated correction is then normalized by the sum of all weights associated with voxel $j$, i.e., $\\sum_{i=1}^M w_{ij}$. The result, scaled by a relaxation parameter $\\lambda$, is added to the current voxel value $f_j^{(k)}$. We assume that for every voxel $j$, there is at least one ray $i$ such that $w_{ij} > 0$.\n\nIn many physical applications, the scalar field $f_j$ represents a non-negative quantity (e.g., density, concentration). To enforce this physical constraint, a non-negativity projection operator, $\\mathcal{P}_+(x) = \\max(0, x)$, is applied after each update step.\n\nDerive the complete iterative update rule for the voxel value $f_j^{(k+1)}$ using the SART algorithm that incorporates this non-negativity constraint. Express the result as a single equation for $f_j^{(k+1)}$ in terms of $f_j^{(k)}$, $p_i$, $w_{ij}$, and $\\lambda$.\n\n", "solution": "1. Correction for ray $i$:\n\n$$\ne_i^{(k)} \\;=\\;\\frac{p_i \\;-\\;\\displaystyle\\sum_{n=1}^N w_{in}\\,f_n^{(k)}}{\\displaystyle\\sum_{n=1}^N w_{in}}.\n$$\n\n2. Back‐projected correction for voxel $j$:\n\n$$\nc_j^{(k)} \\;=\\;\\frac{\\displaystyle\\sum_{i=1}^M w_{ij}\\,e_i^{(k)}}{\\displaystyle\\sum_{i=1}^M w_{ij}}\n\\;=\\;\\frac{\\displaystyle\\sum_{i=1}^M w_{ij}\\,\\frac{p_i-\\sum_{n=1}^N w_{in}f_n^{(k)}}{\\sum_{n=1}^N w_{in}}}{\\displaystyle\\sum_{i=1}^M w_{ij}}.\n$$\n\n3. SART update with relaxation $\\lambda$ and non‐negativity:\n\n$$\nf_j^{(k+1)}\n=\\mathcal{P}_+\\!\\Bigl(f_j^{(k)}+\\lambda\\,c_j^{(k)}\\Bigr)\n=\\max\\!\\Bigl(0,\\;f_j^{(k)}+\\lambda\\,\\frac{\\sum_{i=1}^M w_{ij}\\,\\frac{p_i-\\sum_{n=1}^N w_{in}f_n^{(k)}}{\\sum_{n=1}^N w_{in}}}{\\sum_{i=1}^M w_{ij}}\\Bigr).\n$$", "answer": "$$\\boxed{f_j^{(k+1)}=\\max\\Bigl(0,\\;f_j^{(k)}+\\lambda\\,\\frac{\\sum_{i=1}^M w_{ij}\\,\\frac{p_i-\\sum_{n=1}^N w_{in}f_n^{(k)}}{\\sum_{n=1}^N w_{in}}}{\\sum_{i=1}^M w_{ij}}\\Bigr)}$$"}]}