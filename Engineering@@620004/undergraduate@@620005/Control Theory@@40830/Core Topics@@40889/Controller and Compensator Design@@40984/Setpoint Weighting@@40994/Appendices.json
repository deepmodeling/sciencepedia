{"hands_on_practices": [{"introduction": "This first exercise focuses on the primary motivation for setpoint weighting: reducing the aggressive initial response of a controller to a sudden setpoint change. By calculating the initial control signal magnitude, known as the \"proportional kick,\" you will see firsthand how the weighting factor $b$ directly moderates this action [@problem_id:1609265]. This practice is key to understanding how we can smooth out the control effort for setpoint changes without altering the controller's fundamental response to process disturbances.", "problem": "In industrial process control, a common strategy to prevent large, sudden changes in the control signal upon a step change in the setpoint is called \"setpoint weighting.\" Consider a process controlled by a Proportional-Integral (PI) controller. The controller calculates the control signal, $u(t)$, based on the reference setpoint, $r(t)$, and the measured process output, $y(t)$, according to the following law:\n\n$$u(t) = K_p (b \\cdot r(t) - y(t)) + K_i \\int_0^t [r(\\tau) - y(\\tau)] d\\tau$$\n\nHere, $K_p$ is the proportional gain, $K_i$ is the integral gain, and $b$ is the dimensionless setpoint weighting factor ($0 \\le b \\le 1$).\n\nThe system is initially at rest, meaning for all time $t \\le 0$, the process output is zero, $y(t)=0$, and the reference setpoint is zero, $r(t)=0$. At time $t=0$, the reference setpoint undergoes a step change from 0 to 3. The controller is configured with the following parameters: $K_p = 5$, $K_i = 2$, and $b = 0.4$.\n\nCalculate the magnitude of the control signal immediately after the step change in the reference is applied, which is denoted as $u(0^+)$. Provide your answer as an exact numerical value.", "solution": "The PI controller with setpoint weighting is given by\n$$u(t) = K_{p}\\left(b\\,r(t) - y(t)\\right) + K_{i}\\int_{0}^{t}\\left[r(\\tau) - y(\\tau)\\right]\\,d\\tau.$$\nWe evaluate the control signal immediately after the step at $t=0^{+}$. Using the given initial conditions $r(t)=0$ and $y(t)=0$ for $t \\le 0$, and the step $r(0^{+})=3$, physical continuity of the process output implies $y(0^{+})=0$. Therefore,\n$$u(0^{+}) = K_{p}\\left(b\\,r(0^{+}) - y(0^{+})\\right) + K_{i}\\int_{0}^{0^{+}}\\left[r(\\tau) - y(\\tau)\\right]\\,d\\tau.$$\nThe integral term is zero at the instant of the step because the integration interval has zero length and there is no impulsive contribution:\n$$\\int_{0}^{0^{+}}\\left[r(\\tau) - y(\\tau)\\right]\\,d\\tau = 0.$$\nHence,\n$$u(0^{+}) = K_{p}\\,b\\,r(0^{+}).$$\nSubstituting the numerical values $K_{p}=5$, $b=0.4$, and $r(0^{+})=3$ gives\n$$u(0^{+}) = 5 \\times 0.4 \\times 3 = 6.$$", "answer": "$$\\boxed{6}$$", "id": "1609265"}, {"introduction": "Moving from an instantaneous effect to the overall system dynamics, this practice involves deriving the closed-loop transfer function for a system with setpoint weighting [@problem_id:1609241]. This mathematical representation is crucial as it reveals how setpoint weighting creates a two-degree-of-freedom structure, allowing for independent shaping of the setpoint and disturbance responses. Completing this derivation will clarify how the weighting factor $b$ modifies the numerator of the transfer function, which is the mechanism used to manage and reduce overshoot.", "problem": "A simplified model for the temperature control of a small experimental chamber is given by the first-order process transfer function $P(s) = \\frac{Y(s)}{U(s)} = \\frac{K}{\\tau s+1}$, where $Y(s)$ is the Laplace transform of the chamber temperature, and $U(s)$ is the Laplace transform of the power supplied to the heater. The process has a gain $K$ and a time constant $\\tau$.\n\nTo improve the response to setpoint changes and reduce overshoot, a Proportional-Integral (PI) controller with setpoint weighting on the proportional term is implemented. The controller's output is described by the following relationship in the Laplace domain:\n$$U(s) = K_{p} (b R(s) - Y(s)) + \\frac{K_{i}}{s}(R(s) - Y(s))$$\nIn this equation, $R(s)$ is the Laplace transform of the desired setpoint temperature, $K_p$ is the proportional gain, $K_i$ is the integral gain, and $b$ is the dimensionless setpoint weighting factor, with $0 \\le b \\le 1$.\n\nDerive the closed-loop transfer function for setpoint tracking, $T(s) = \\frac{Y(s)}{R(s)}$, for this system. Express your answer in terms of $s$, $K$, $\\tau$, $K_p$, $K_i$, and $b$.", "solution": "The system is described by two main equations: the process model and the controller law.\n\nThe process model is given by:\n$$Y(s) = P(s)U(s) = \\frac{K}{\\tau s+1}U(s)$$\n\nThe controller law is given by:\n$$U(s) = K_{p} (b R(s) - Y(s)) + \\frac{K_{i}}{s}(R(s) - Y(s))$$\n\nTo find the closed-loop transfer function $T(s) = \\frac{Y(s)}{R(s)}$, we first substitute the controller equation into the process equation. Before doing so, it is helpful to group the terms in the controller equation by $R(s)$ and $Y(s)$:\n$$U(s) = \\left(b K_{p} + \\frac{K_{i}}{s}\\right)R(s) - \\left(K_{p} + \\frac{K_{i}}{s}\\right)Y(s)$$\n\nNow, substitute this expression for $U(s)$ into the process equation:\n$$Y(s) = \\frac{K}{\\tau s+1} \\left[ \\left(b K_{p} + \\frac{K_{i}}{s}\\right)R(s) - \\left(K_{p} + \\frac{K_{i}}{s}\\right)Y(s) \\right]$$\n\nTo solve for $\\frac{Y(s)}{R(s)}$, we need to rearrange the equation to group all $Y(s)$ terms on one side and all $R(s)$ terms on the other. First, multiply both sides by $(\\tau s+1)$:\n$$(\\tau s+1)Y(s) = K \\left[ \\left(b K_{p} + \\frac{K_{i}}{s}\\right)R(s) - \\left(K_{p} + \\frac{K_{i}}{s}\\right)Y(s) \\right]$$\n\nTo eliminate the $1/s$ term, a common technique is to find a common denominator within the brackets for the controller terms:\n$$(\\tau s+1)Y(s) = K \\left[ \\left(\\frac{b K_{p}s + K_{i}}{s}\\right)R(s) - \\left(\\frac{K_{p}s + K_{i}}{s}\\right)Y(s) \\right]$$\n\nNow, multiply the entire equation by $s$ to clear the denominator:\n$$s(\\tau s+1)Y(s) = K \\left[ (b K_{p}s + K_{i})R(s) - (K_{p}s + K_{i})Y(s) \\right]$$\n\nDistribute the terms on both sides:\n$$(\\tau s^2 + s)Y(s) = K(b K_{p}s + K_{i})R(s) - K(K_{p}s + K_{i})Y(s)$$\n\nMove all terms containing $Y(s)$ to the left-hand side:\n$$(\\tau s^2 + s)Y(s) + K(K_{p}s + K_{i})Y(s) = K(b K_{p}s + K_{i})R(s)$$\n\nFactor out $Y(s)$ from the left-hand side:\n$$Y(s) \\left[ \\tau s^2 + s + K(K_{p}s + K_{i}) \\right] = K(b K_{p}s + K_{i})R(s)$$\n\nExpand and group terms by powers of $s$ inside the bracket:\n$$Y(s) \\left[ \\tau s^2 + s + K K_{p}s + K K_{i} \\right] = K(b K_{p}s + K_{i})R(s)$$\n$$Y(s) \\left[ \\tau s^2 + (1 + K K_{p})s + K K_{i} \\right] = K(b K_{p}s + K_{i})R(s)$$\n\nFinally, to find the transfer function $T(s) = \\frac{Y(s)}{R(s)}$, divide both sides by $R(s)$ and by the polynomial in $s$ multiplying $Y(s)$:\n$$\\frac{Y(s)}{R(s)} = \\frac{K(b K_{p}s + K_{i})}{\\tau s^2 + (1 + K K_{p})s + K K_{i}}$$\n\nThis is the desired closed-loop transfer function.", "answer": "$$\\boxed{\\frac{K(b K_{p}s + K_{i})}{\\tau s^{2} + (1 + K K_{p})s + K K_{i}}}$$", "id": "1609241"}, {"introduction": "Theory becomes practice when control algorithms are implemented on physical hardware. This final exercise bridges the gap between continuous-time controller design and the discrete-time difference equations required for digital systems like microcontrollers [@problem_id:1609275]. You will derive the \"velocity\" or incremental form of a digital PI controller with setpoint weighting, a common and efficient implementation that is ready to be translated into code. This skill is fundamental for applying control theory in modern engineering applications.", "problem": "In digital control systems, a common strategy to mitigate large control signal changes and potential overshoot following a step change in the setpoint is to use setpoint weighting. Consider a continuous-time Proportional-Integral (PI) controller where setpoint weighting is applied only to the proportional term. The control signal, $u(t)$, is described by the following equation:\n\n$$u(t) = K_p (b \\cdot r(t) - y(t)) + K_i \\int_0^t (r(\\tau) - y(\\tau)) d\\tau$$\n\nHere, $r(t)$ is the setpoint, $y(t)$ is the measured process output, $K_p$ is the proportional gain, $K_i$ is the integral gain, and $b$ is the dimensionless setpoint weighting factor.\n\nThis continuous-time controller is to be implemented on a digital processor with a fixed sampling period $T$. To do this, the controller equation must be converted into a discrete-time difference equation. The integral term is to be approximated using the backward Euler method, where the integral over a sampling interval is approximated by the area of a rectangle whose height is the integrand's value at the end of the interval.\n\nLet $u[k]$, $r[k]$, and $y[k]$ represent the values of $u(t)$, $r(t)$, and $y(t)$ at the sampling instant $t = kT$. Derive the difference equation for the control signal. Your task is to provide an expression for $u[k]$ in terms of the previous control signal $u[k-1]$, the current and previous setpoints ($r[k], r[k-1]$), the current and previous process outputs ($y[k], y[k-1]$), and the controller parameters $K_p$, $K_i$, $T$, and $b$.", "solution": "Start from the continuous-time PI controller with setpoint weighting in the proportional term:\n$$u(t)=K_{p}\\big(b\\,r(t)-y(t)\\big)+K_{i}\\int_{0}^{t}\\big(r(\\tau)-y(\\tau)\\big)\\,d\\tau.$$\nLet the sampling period be $T$, and define sampled variables $u[k]=u(kT)$, $r[k]=r(kT)$, $y[k]=y(kT)$. Introduce the discrete integral state\n$$I[k]\\approx \\int_{0}^{kT}\\big(r(\\tau)-y(\\tau)\\big)\\,d\\tau.$$\nUsing the backward Euler method over one sampling interval,\n$$I[k]=I[k-1]+T\\big(r[k]-y[k]\\big).$$\nThe discrete controller can be written as\n$$u[k]=K_{p}\\big(b\\,r[k]-y[k]\\big)+K_{i}I[k],$$\nand at the previous step,\n$$u[k-1]=K_{p}\\big(b\\,r[k-1]-y[k-1]\\big)+K_{i}I[k-1].$$\nSubtract the latter from the former and substitute the backward Euler update:\n$$u[k]-u[k-1]=K_{p}\\Big(b\\big(r[k]-r[k-1]\\big)-\\big(y[k]-y[k-1]\\big)\\Big)+K_{i}\\big(I[k]-I[k-1]\\big),$$\n$$u[k]-u[k-1]=K_{p}\\Big(b\\big(r[k]-r[k-1]\\big)-\\big(y[k]-y[k-1]\\big)\\Big)+K_{i}T\\big(r[k]-y[k]\\big).$$\nRearranging gives the desired difference equation in terms of $u[k-1]$, $r[k],r[k-1]$, $y[k],y[k-1]$, and the parameters:\n$$u[k]=u[k-1]+K_{p}\\Big(b\\big(r[k]-r[k-1]\\big)-\\big(y[k]-y[k-1]\\big)\\Big)+K_{i}T\\big(r[k]-y[k]\\big).$$", "answer": "$$\\boxed{u[k]=u[k-1]+K_{p}\\left(b\\left(r[k]-r[k-1]\\right)-\\left(y[k]-y[k-1]\\right)\\right)+K_{i}T\\left(r[k]-y[k]\\right)}$$", "id": "1609275"}]}