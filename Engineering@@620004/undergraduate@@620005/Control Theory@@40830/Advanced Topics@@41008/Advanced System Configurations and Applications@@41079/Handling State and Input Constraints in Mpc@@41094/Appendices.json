{"hands_on_practices": [{"introduction": "Theory becomes practical skill through application. Let's begin by translating a common physical requirement—limiting the rate of change of a control input—into the matrix format required by MPC optimization solvers. This exercise [@problem_id:1579671] is a foundational step, ensuring the controller's commands are smooth and respect the physical limitations of system actuators, such as motors or valves.", "problem": "An engineer is developing a controller for a quadcopter using Model Predictive Control (MPC), a strategy that optimizes control actions over a future time interval. To ensure smooth and stable flight, it is crucial to limit how quickly the motor thrust can be increased.\n\nThe engineer considers a prediction horizon of $N=3$. The sequence of future control inputs (motor thrust commands) to be decided at the current time $t$ is denoted by the vector $U = [u_0, u_1, u_2]^T$, where $u_k$ represents the control input at time step $t+k$. The control input applied at the previous time step, $t-1$, is known and denoted by $u_{t-1}$.\n\nThe constraint on the rate of increase of the motor thrust is given by the inequality:\n$$u(k) - u(k-1) \\leq \\Delta u_{\\max}$$\nwhere $\\Delta u_{\\max}$ is a positive constant representing the maximum allowable increase in thrust between consecutive time steps. This constraint must hold for every step within the prediction horizon.\n\nFor use in a standard quadratic programming solver, this set of linear inequalities must be converted into the matrix form $A_{\\text{rate}} U \\leq b_{\\text{rate}}$.\n\nYour task is to determine the augmented matrix $M = [A_{\\text{rate}} | b_{\\text{rate}}]$ that represents this complete set of rate constraints for the given prediction horizon. The vertical bar denotes matrix augmentation. Express your answer in terms of $\\Delta u_{\\max}$ and $u_{t-1}$.", "solution": "The goal is to express the set of input rate-of-change constraints for a prediction horizon of $N=3$ in the matrix form $A_{\\text{rate}} U \\leq b_{\\text{rate}}$ and then find the corresponding augmented matrix $M = [A_{\\text{rate}} | b_{\\text{rate}}]$.\n\nThe decision variable vector is the sequence of future control inputs over the horizon:\n$$U = \\begin{pmatrix} u_0 \\\\ u_1 \\\\ u_2 \\end{pmatrix}$$\nThe constraint on the rate of increase is given by $u(k) - u(k-1) \\leq \\Delta u_{\\max}$. We must apply this constraint for each step in the prediction horizon, from the first future step ($k=0$) to the last ($k=N-1=2$).\n\n**Step 1: Unroll the constraint for each time step.**\n\nFor the first time step in the horizon ($k=0$):\nThe control input is $u_0$. The previous control input is the one applied at time $t-1$, which is the known value $u_{t-1}$.\nThe constraint is:\n$$u_0 - u_{t-1} \\leq \\Delta u_{\\max}$$\n\nFor the second time step in the horizon ($k=1$):\nThe control input is $u_1$. The previous control input within the horizon is $u_0$.\nThe constraint is:\n$$u_1 - u_0 \\leq \\Delta u_{\\max}$$\n\nFor the third time step in the horizon ($k=2$):\nThe control input is $u_2$. The previous control input within the horizon is $u_1$.\nThe constraint is:\n$$u_2 - u_1 \\leq \\Delta u_{\\max}$$\n\n**Step 2: Rearrange inequalities to the standard form.**\n\nWe need to arrange each inequality so that terms involving the decision variables ($u_0, u_1, u_2$) are on the left-hand side, and constants and known values are on the right-hand side.\n\nThe first inequality, $u_0 - u_{t-1} \\leq \\Delta u_{\\max}$, becomes:\n$$u_0 \\leq \\Delta u_{\\max} + u_{t-1}$$\nWriting this in terms of the full vector $U$:\n$$(1)u_0 + (0)u_1 + (0)u_2 \\leq \\Delta u_{\\max} + u_{t-1}$$\n\nThe second inequality, $u_1 - u_0 \\leq \\Delta u_{\\max}$, is already in a suitable form.\nWriting this in terms of the full vector $U$:\n$$(-1)u_0 + (1)u_1 + (0)u_2 \\leq \\Delta u_{\\max}$$\n\nThe third inequality, $u_2 - u_1 \\leq \\Delta u_{\\max}$, is also in a suitable form.\nWriting this in terms of the full vector $U$:\n$$(0)u_0 + (-1)u_1 + (1)u_2 \\leq \\Delta u_{\\max}$$\n\n**Step 3: Construct the matrices $A_{\\text{rate}}$ and $b_{\\text{rate}}$.**\n\nNow we can assemble these three inequalities into the matrix equation $A_{\\text{rate}} U \\leq b_{\\text{rate}}$. The matrix $A_{\\text{rate}}$ is formed by the coefficients of $u_0, u_1, u_2$ in each inequality, and the vector $b_{\\text{rate}}$ is formed by the values on the right-hand side.\n\n$$\n\\begin{pmatrix}\n1 & 0 & 0 \\\\\n-1 & 1 & 0 \\\\\n0 & -1 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\nu_0 \\\\\nu_1 \\\\\nu_2\n\\end{pmatrix}\n\\leq\n\\begin{pmatrix}\n\\Delta u_{\\max} + u_{t-1} \\\\\n\\Delta u_{\\max} \\\\\n\\Delta u_{\\max}\n\\end{pmatrix}\n$$\n\nFrom this, we can identify:\n$$A_{\\text{rate}} = \\begin{pmatrix} 1 & 0 & 0 \\\\ -1 & 1 & 0 \\\\ 0 & -1 & 1 \\end{pmatrix}$$\n$$b_{\\text{rate}} = \\begin{pmatrix} \\Delta u_{\\max} + u_{t-1} \\\\ \\Delta u_{\\max} \\\\ \\Delta u_{\\max} \\end{pmatrix}$$\n\n**Step 4: Form the augmented matrix $M$.**\n\nThe final step is to construct the augmented matrix $M = [A_{\\text{rate}} | b_{\\text{rate}}]$ by placing the vector $b_{\\text{rate}}$ as the last column next to the matrix $A_{\\text{rate}}$.\n\n$$M = [A_{\\text{rate}} | b_{\\text{rate}}] = \\begin{pmatrix} 1 & 0 & 0 & \\Delta u_{\\max} + u_{t-1} \\\\ -1 & 1 & 0 & \\Delta u_{\\max} \\\\ 0 & -1 & 1 & \\Delta u_{\\max} \\end{pmatrix}$$\nThis is the required augmented matrix.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & 0 & 0 & \\Delta u_{\\max} + u_{t-1} \\\\ -1 & 1 & 0 & \\Delta u_{\\max} \\\\ 0 & -1 & 1 & \\Delta u_{\\max} \\end{pmatrix}}$$", "id": "1579671"}, {"introduction": "Moving from inputs to system states, we often encounter constraints that are not initially in a linear form. This practice [@problem_id:1579663] tackles a common scenario: limiting the magnitude of the difference between two states, which is naturally expressed using an absolute value. You will learn the standard technique for converting this into a set of linear inequalities, making it compatible with the polyhedral constraint sets used in linear MPC.", "problem": "A thermal management system is designed to regulate the temperatures of two critical components in an electronic device. The state vector of the system at a discrete time step $k$ is given by \n$$x(k) = \\begin{pmatrix} x_1(k) \\\\ x_2(k) \\end{pmatrix}$$\nwhere $x_1(k)$ and $x_2(k)$ are the temperatures of the two components.\n\nTo prevent thermal stress and ensure the device's longevity, a key operational constraint is imposed: the magnitude of the temperature difference between the two components must not exceed a specified positive value, $T_{\\text{lim}}$. This constraint is mathematically expressed as:\n$$|x_1(k) - x_2(k)| \\le T_{\\text{lim}}$$\n\nFor use in a Model Predictive Control (MPC) algorithm, this constraint must be converted into the standard linear polyhedral form $Hx(k) \\le h$, where $H$ is a constant matrix and $h$ is a constant column vector.\n\nYour task is to determine the matrix $H$. The number of rows in your resulting matrix $H$ should be the minimum required to fully represent the constraint.", "solution": "We are given the absolute value constraint on the state components $x_{1}(k)$ and $x_{2}(k)$:\n$$|x_{1}(k)-x_{2}(k)| \\le T_{\\text{lim}}.$$\nFor any scalar $z$, the inequality $|z| \\le T_{\\text{lim}}$ is equivalent to the pair of linear inequalities $z \\le T_{\\text{lim}}$ and $-z \\le T_{\\text{lim}}$. Applying this with $z = x_{1}(k) - x_{2}(k)$, we obtain\n$$x_{1}(k) - x_{2}(k) \\le T_{\\text{lim}},$$\n$$-(x_{1}(k) - x_{2}(k)) \\le T_{\\text{lim}} \\;\\;\\Longleftrightarrow\\;\\; -x_{1}(k) + x_{2}(k) \\le T_{\\text{lim}}.$$\nLet $x(k) = \\begin{pmatrix} x_{1}(k) \\\\ x_{2}(k) \\end{pmatrix}$. Writing each inequality in the standard polyhedral form $Hx(k) \\le h$, the first inequality corresponds to the row vector $\\begin{pmatrix} 1 & -1 \\end{pmatrix}$, and the second to $\\begin{pmatrix} -1 & 1 \\end{pmatrix}$. Stacking them yields\n$$H = \\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix}, \\quad h = \\begin{pmatrix} T_{\\text{lim}} \\\\ T_{\\text{lim}} \\end{pmatrix}.$$\nThis uses the minimum of two linear inequalities to represent the absolute value constraint, so the number of rows in $H$ is minimal.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix}}$$", "id": "1579663"}, {"introduction": "Now that we can formulate constraints, we must understand their profound impact on controller feasibility. This exercise [@problem_id:1579647] serves as a crucial thought experiment, demonstrating that the ability to satisfy future state constraints can be entirely dependent on the system's starting point. By determining the set of initial states from which a valid control sequence exists, we gain a deeper intuition for why ensuring recursive feasibility is a central challenge in MPC design.", "problem": "An engineer is tasked with designing a safety-critical controller for a system whose state, $x(k)$, evolves at discrete time steps $k$ according to the linear equation:\n$$x(k+1) = \\alpha x(k) + \\beta u(k)$$\nThe system parameters are given as $\\alpha = 0.5$ and $\\beta = 1$. The control input, $u(k)$, applied by the controller is limited by physical constraints such that $|u(k)| \\le u_{\\max}$, where $u_{\\max} = 1$.\n\nA critical operational requirement is that the system's state must remain above a minimum threshold for a finite duration. Specifically, the state $x(k)$ must satisfy the constraint $x(k) \\ge x_{\\min}$ for the time steps $k = 1, 2, 3, 4$. The minimum threshold is specified as $x_{\\min} = 2.5$. Note that this state constraint does not apply to the initial state $x(0)$.\n\nYour task is to determine the minimum possible value of the initial state, $x(0)$, for which a valid control sequence $u(0), u(1), u(2), u(3)$ exists that can successfully keep the system state within the specified constraints for the required duration. Provide the answer as a single numerical value.", "solution": "We are given the linear time-invariant discrete-time system $x(k+1)=\\alpha x(k)+\\beta u(k)$ with $\\alpha=\\frac{1}{2}$, $\\beta=1$, and input constraint $|u(k)|\\leq u_{\\max}$ with $u_{\\max}=1$. The state must satisfy $x(k)\\geq x_{\\min}$ for $k=1,2,3,4$ with $x_{\\min}=\\frac{5}{2}$. The initial state $x(0)$ is unconstrained, and we seek the minimum $x(0)$ such that there exists a sequence $u(0),u(1),u(2),u(3)$ satisfying the input bounds and keeping $x(k)\\geq \\frac{5}{2}$ for $k=1,2,3,4$.\n\nThe state at time $k$ as a function of $x(0)$ and the inputs is\n$$\nx(k)=\\alpha^{k}x(0)+\\sum_{i=0}^{k-1}\\alpha^{k-1-i}\\beta\\,u(i).\n$$\nSince $\\alpha>0$ and $\\beta>0$, $x(k)$ is increasing in each $u(i)$. Therefore, to maximize $x(k)$ for a given $x(0)$, we choose $u(i)=u_{\\max}=1$ for all $i$. This choice minimizes the required $x(0)$ to satisfy the lower-bound constraints.\n\nWith $u(i)=1$ and $\\alpha=\\frac{1}{2}$, we obtain\n$$\nx(k)=\\left(\\frac{1}{2}\\right)^{k}x(0)+\\sum_{j=0}^{k-1}\\left(\\frac{1}{2}\\right)^{j}\n=\\left(\\frac{1}{2}\\right)^{k}x(0)+\\frac{1-\\left(\\frac{1}{2}\\right)^{k}}{1-\\frac{1}{2}}\n=\\left(\\frac{1}{2}\\right)^{k}x(0)+2-2^{1-k}.\n$$\nImposing $x(k)\\geq \\frac{5}{2}$ for $k=1,2,3,4$ yields\n$$\n\\left(\\frac{1}{2}\\right)^{k}x(0)+2-2^{1-k}\\geq \\frac{5}{2}\n\\;\\;\\Longleftrightarrow\\;\\;\n\\left(\\frac{1}{2}\\right)^{k}x(0)\\geq \\frac{1}{2}+2^{1-k}\n\\;\\;\\Longleftrightarrow\\;\\;\nx(0)\\geq 2^{k-1}+2.\n$$\nThus the set of constraints on $x(0)$ is\n$$\nx(0)\\geq 2^{k-1}+2 \\quad \\text{for } k=1,2,3,4,\n$$\nnamely\n$$\nx(0)\\geq 3,\\quad x(0)\\geq 4,\\quad x(0)\\geq 6,\\quad x(0)\\geq 10.\n$$\nThe tightest requirement is $x(0)\\geq 10$. Choosing $x(0)=10$ and $u(k)=1$ for $k=0,1,2,3$ yields $x(1),x(2),x(3),x(4)\\geq \\frac{5}{2}$, with $x(4)=\\frac{5}{2}$ exactly. Therefore, the minimum feasible initial state is $10$.", "answer": "$$\\boxed{10}$$", "id": "1579647"}]}