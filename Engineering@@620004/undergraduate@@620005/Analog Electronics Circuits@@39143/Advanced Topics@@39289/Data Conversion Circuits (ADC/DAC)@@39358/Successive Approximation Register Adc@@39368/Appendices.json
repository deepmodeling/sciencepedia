{"hands_on_practices": [{"introduction": "This first practice takes you inside the core of the Successive Approximation Register (SAR) ADC to trace its decision-making process. You will simulate the binary search algorithm step-by-step, determining each bit of the digital output for a given analog input $V_{in}$. By incorporating a common real-world imperfection—a comparator offset voltage—this practice [@problem_id:1334877] will deepen your understanding of how the ideal algorithm performs with non-ideal hardware.", "problem": "A 4-bit Successive Approximation Register (SAR) Analog-to-Digital Converter (ADC) is being characterized in a laboratory setting. The ADC uses a reference voltage $V_{\\text{ref}} = 8.0 \\text{ V}$. The internal Digital-to-Analog Converter (DAC) is unipolar, with its output $V_{\\text{DAC}}$ scaling linearly with the digital code. A key component, the internal comparator, is discovered to have a non-ideal characteristic: it exhibits a positive input offset voltage of $V_{\\text{os}} = +0.1 \\text{ V}$. The SAR logic sets the bit currently under test to '1' if the analog input signal $V_{\\text{in}}$ is greater than the DAC's output voltage $V_{\\text{DAC}}$ plus the offset $V_{\\text{os}}$. Otherwise, the bit is set to '0'.\n\nGiven an analog input signal of $V_{\\text{in}} = 5.05 \\text{ V}$, determine the final 4-bit binary output code ($B_3 B_2 B_1 B_0$), where $B_3$ is the Most Significant Bit (MSB).\n\nWhich of the following represents the correct binary output?\n\nA. 1001\n\nB. 1010\n\nC. 1000\n\nD. 1011", "solution": "A 4-bit unipolar DAC in a SAR ADC produces, for a digital code $C \\in \\{0,\\dots,15\\}$, the output\n$$\nV_{\\mathrm{DAC}}=V_{\\mathrm{ref}}\\frac{C}{2^{4}}.\n$$\nThe SAR decision rule with a positive comparator input offset $V_{\\mathrm{os}}$ is: for the trial code, the bit under test is kept at $1$ if\n$$\nV_{\\mathrm{in}} > V_{\\mathrm{DAC}} + V_{\\mathrm{os}},\n$$\notherwise it is cleared to $0$.\n\nGiven $V_{\\mathrm{ref}}=8.0$, $V_{\\mathrm{os}}=0.1$, and $V_{\\mathrm{in}}=5.05$, proceed bit by bit from MSB to LSB.\n\nMSB $B_{3}$ trial: set $B_{3}=1$ (trial code $C=8$), so\n$$\nV_{\\mathrm{DAC}}=8.0\\cdot\\frac{8}{16}=4.0.\n$$\nCompare $5.05 > 4.0 + 0.1 = 4.1$, which is true, so keep $B_{3}=1$.\n\nNext $B_{2}$ trial: with $B_{3}=1$, set $B_{2}=1$ (trial code $C=12$), so\n$$\nV_{\\mathrm{DAC}}=8.0\\cdot\\frac{12}{16}=6.0.\n$$\nCompare $5.05 > 6.0 + 0.1 = 6.1$, which is false, so set $B_{2}=0$.\n\nNext $B_{1}$ trial: with $B_{3}=1,B_{2}=0$, set $B_{1}=1$ (trial code $C=10$), so\n$$\nV_{\\mathrm{DAC}}=8.0\\cdot\\frac{10}{16}=5.0.\n$$\nCompare $5.05 > 5.0 + 0.1 = 5.1$, which is false, so set $B_{1}=0$.\n\nNext $B_{0}$ trial: with $B_{3}=1,B_{2}=0,B_{1}=0$, set $B_{0}=1$ (trial code $C=9$), so\n$$\nV_{\\mathrm{DAC}}=8.0\\cdot\\frac{9}{16}=4.5.\n$$\nCompare $5.05 > 4.5 + 0.1 = 4.6$, which is true, so keep $B_{0}=1$.\n\nTherefore, the final 4-bit code is $B_{3}B_{2}B_{1}B_{0}=1001$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1334877"}, {"introduction": "A key assumption in the SAR conversion process is that the analog input remains stable while the ADC performs its sequence of comparisons. This hypothetical problem [@problem_id:1334885] explores the consequences of violating this assumption by simulating an ADC operating without a sample-and-hold (S/H) circuit on a time-varying input. By calculating the final output in this dynamic scenario, you will gain a powerful, quantitative appreciation for why the S/H circuit is a critical component for accurate digitization.", "problem": "An 8-bit Successive Approximation Register (SAR) Analog-to-Digital Converter (ADC) is designed to operate with a reference voltage $V_{ref} = 5.12 \\text{ V}$, corresponding to an input voltage range of $0 \\text{ V}$ to $5.12 \\text{ V}$. The conversion process for a single sample requires 8 clock cycles, and each clock cycle has a duration of $T_{clk} = 1.0 \\text{ µs}$. A conversion begins at time $t=0$. The determination of the $i$-th bit (where $i=1$ corresponds to the Most Significant Bit, MSB, and $i=8$ to the Least Significant Bit, LSB) is based on a comparison that occurs precisely at the end of the $i$-th clock cycle, i.e., at time $t_i = i \\cdot T_{clk}$.\n\nDue to a design oversight, the ADC lacks a sample-and-hold circuit. The analog input signal is therefore not held constant during the conversion process. Instead, the comparator's input is directly connected to a time-varying signal described by the equation:\n$$V_{in}(t) = V_0 + kt$$\nwhere $V_0 = 3.21 \\text{ V}$ and $k = 2.50 \\times 10^4 \\text{ V/s}$.\n\nThe SAR logic operates as follows: for each bit from MSB to LSB, it sets a trial bit to '1' and compares the resulting internal Digital-to-Analog Converter (DAC) voltage to the analog input $V_{in}(t)$ at the specified comparison time. If $V_{in}(t)$ is greater than or equal to the trial voltage, the bit is kept as '1'; otherwise, it is set to '0'.\n\nCalculate the final 8-bit digital output code produced by the ADC for this input signal. Present your answer as a decimal integer.", "solution": "The SAR ADC compares the analog input once per bit at times $t_{i} = i T_{clk}$, with $i=1$ for the MSB and $i=8$ for the LSB. Without a sample-and-hold, the input is $V_{in}(t) = V_{0} + k t$. The SAR decision rule is: at bit $i$, set the trial bit to $1$ (keeping previously decided bits and setting all lower bits to $0$), form the DAC trial voltage $V_{DAC}^{(i)}$, and keep the bit as $1$ if and only if $V_{in}(t_{i}) \\geq V_{DAC}^{(i)}$.\n\nGiven:\n- $V_{ref} = 5.12 \\text{ V}$.\n- Resolution $N=8$, so the LSB size is $V_{LSB} = \\frac{V_{ref}}{2^{8}} = \\frac{5.12}{256} = 0.02 \\text{ V}$, and the bit weights are $w_{1}=\\frac{V_{ref}}{2}=2.56 \\text{ V}$, $w_{2}=\\frac{V_{ref}}{4}=1.28 \\text{ V}$, $w_{3}=0.64 \\text{ V}$, $w_{4}=0.32 \\text{ V}$, $w_{5}=0.16 \\text{ V}$, $w_{6}=0.08 \\text{ V}$, $w_{7}=0.04 \\text{ V}$, $w_{8}=0.02 \\text{ V}$.\n- $T_{clk} = 1.0 \\times 10^{-6} \\text{ s}$.\n- $V_{0} = 3.21 \\text{ V}$, $k = 2.50 \\times 10^{4} \\text{ V/s}$, so per clock the input increases by $k T_{clk} = 2.50 \\times 10^{4} \\times 1.0 \\times 10^{-6} = 2.50 \\times 10^{-2} \\text{ V} = 0.025 \\text{ V}$.\n- Therefore $V_{in}(t_{i}) = V_{0} + k i T_{clk} = 3.21 + 0.025 i \\text{ V}$.\n\nProceed bit-by-bit:\n- $i=1$ (MSB): $t_{1} = T_{clk}$, $V_{in}(t_{1}) = 3.21 + 0.025 = 3.235 \\text{ V}$. Trial with MSB $=1$: $V_{DAC}^{(1)} = w_{1} = 2.56 \\text{ V}$. Since $3.235 \\geq 2.56$, keep bit $1$: $b_{1}=1$.\n- $i=2$: $t_{2} = 2 T_{clk}$, $V_{in}(t_{2}) = 3.21 + 0.050 = 3.26 \\text{ V}$. Trial with $b_{1}=1$, $b_{2}=1$: $V_{DAC}^{(2)} = w_{1} + w_{2} = 2.56 + 1.28 = 3.84 \\text{ V}$. Since $3.26 < 3.84$, set $b_{2}=0$.\n- $i=3$: $t_{3} = 3 T_{clk}$, $V_{in}(t_{3}) = 3.21 + 0.075 = 3.285 \\text{ V}$. Trial with $b_{1}=1$, $b_{3}=1$: $V_{DAC}^{(3)} = w_{1} + w_{3} = 2.56 + 0.64 = 3.20 \\text{ V}$. Since $3.285 \\geq 3.20$, keep $b_{3}=1$.\n- $i=4$: $t_{4} = 4 T_{clk}$, $V_{in}(t_{4}) = 3.21 + 0.100 = 3.31 \\text{ V}$. Trial with $b_{1}=1$, $b_{3}=1$, $b_{4}=1$: $V_{DAC}^{(4)} = 2.56 + 0.64 + 0.32 = 3.52 \\text{ V}$. Since $3.31 < 3.52$, set $b_{4}=0$.\n- $i=5$: $t_{5} = 5 T_{clk}$, $V_{in}(t_{5}) = 3.21 + 0.125 = 3.335 \\text{ V}$. Trial with $b_{1}=1$, $b_{3}=1$, $b_{5}=1$: $V_{DAC}^{(5)} = 2.56 + 0.64 + 0.16 = 3.36 \\text{ V}$. Since $3.335 < 3.36$, set $b_{5}=0$.\n- $i=6$: $t_{6} = 6 T_{clk}$, $V_{in}(t_{6}) = 3.21 + 0.150 = 3.36 \\text{ V}$. Trial with $b_{1}=1$, $b_{3}=1$, $b_{6}=1$: $V_{DAC}^{(6)} = 2.56 + 0.64 + 0.08 = 3.28 \\text{ V}$. Since $3.36 \\geq 3.28$, keep $b_{6}=1$.\n- $i=7$: $t_{7} = 7 T_{clk}$, $V_{in}(t_{7}) = 3.21 + 0.175 = 3.385 \\text{ V}$. Trial with $b_{1}=1$, $b_{3}=1$, $b_{6}=1$, $b_{7}=1$: $V_{DAC}^{(7)} = 2.56 + 0.64 + 0.08 + 0.04 = 3.32 \\text{ V}$. Since $3.385 \\geq 3.32$, keep $b_{7}=1$.\n- $i=8$ (LSB): $t_{8} = 8 T_{clk}$, $V_{in}(t_{8}) = 3.21 + 0.200 = 3.41 \\text{ V}$. Trial with $b_{1}=1$, $b_{3}=1$, $b_{6}=1$, $b_{7}=1$, $b_{8}=1$: $V_{DAC}^{(8)} = 2.56 + 0.64 + 0.08 + 0.04 + 0.02 = 3.34 \\text{ V}$. Since $3.41 \\geq 3.34$, keep $b_{8}=1$.\n\nThus the final bit pattern is $b_{1}\\ldots b_{8} = 1\\,0\\,1\\,0\\,0\\,1\\,1\\,1$, which corresponds to the decimal code\n$$128 + 32 + 4 + 2 + 1 = 167.$$\nTherefore, the final 8-bit digital output code is $167$.", "answer": "$$\\boxed{167}$$", "id": "1334885"}, {"introduction": "An ADC does not operate in isolation; it is a component within a larger data acquisition system with specific performance goals. This final practice [@problem_id:1334898] moves from analyzing a single conversion to system-level design, requiring you to determine the minimum clock frequency, $f_{clk, min}$, needed to properly sample a signal. This exercise connects the ADC's internal timing to system requirements dictated by the Nyquist theorem, teaching a crucial skill for specifying components in real-world applications.", "problem": "A biomedical engineering team is developing a wearable Electrocardiogram (ECG) monitor. The device must accurately capture the patient's heart signal, which, after filtering, is known to have significant frequency components up to a maximum frequency of $f_{max}$. To digitize this signal, the design incorporates a Successive Approximation Register (SAR) Analog-to-Digital Converter (ADC) with a resolution of $N$ bits.\n\nThe operation of this SAR ADC for each sample acquisition is a two-phase process. First, an initial sample-and-hold (S/H) phase acquires the analog voltage, a process that requires a fixed duration of $k$ clock cycles. Following this, a conversion phase begins where each of the $N$ bits is determined sequentially. Each bit decision takes exactly one clock cycle.\n\nTo ensure a high-fidelity digital representation of the signal and prevent aliasing, the system must adhere to a strict sampling protocol. The designated sampling rate, $f_s$, is set to be a factor $\\alpha$ times the theoretical minimum Nyquist rate required for the signal. For the system to function correctly, the total time required for one complete ADC conversion must not exceed the time interval between consecutive samples.\n\nDerive a closed-form analytic expression for the minimum clock frequency, $f_{clk, min}$, that the ADC must have to satisfy these system requirements. Express your answer in terms of the parameters $f_{max}$, $N$, $k$, and $\\alpha$.", "solution": "Let the maximum signal frequency after filtering be $f_{max}$. The Nyquist sampling theorem requires $f_{s} \\geq 2 f_{max}$. The system enforces a sampling rate that is a factor $\\alpha$ above this minimum, hence\n$$\nf_{s} = 2 \\alpha f_{max}.\n$$\nEach ADC conversion per sample consists of two serial phases: a sample-and-hold phase taking $k$ clock cycles and a successive-approximation phase taking $N$ clock cycles, for a total of $k+N$ clock cycles per sample. If the ADC clock frequency is $f_{clk}$, the time required to complete one conversion is\n$$\nT_{conv} = \\frac{k+N}{f_{clk}}.\n$$\nTo ensure that each conversion finishes before the next sample is due, the conversion time must not exceed the sampling interval $T_{s} = \\frac{1}{f_{s}}$:\n$$\n\\frac{k+N}{f_{clk}} \\leq \\frac{1}{f_{s}}.\n$$\nSolving for $f_{clk}$ gives\n$$\nf_{clk} \\geq (k+N) f_{s}.\n$$\nSubstituting $f_{s} = 2 \\alpha f_{max}$ yields the minimum required ADC clock frequency:\n$$\nf_{clk, min} = 2 \\alpha (k+N) f_{max}.\n$$", "answer": "$$\\boxed{2 \\alpha (k+N) f_{max}}$$", "id": "1334898"}]}