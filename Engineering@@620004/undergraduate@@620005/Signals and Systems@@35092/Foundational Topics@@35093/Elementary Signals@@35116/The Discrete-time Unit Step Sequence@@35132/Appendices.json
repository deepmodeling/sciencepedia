{"hands_on_practices": [{"introduction": "This first practice serves as a foundational exercise in applying the properties of convolution, particularly the sifting property of the unit impulse. By convolving the unit step sequence with a signal composed of scaled and shifted impulses, you will see how basic signals can be combined to construct more complex sequences, a core skill in analyzing Linear Time-Invariant (LTI) systems. [@problem_id:1761156]", "problem": "In the study of discrete-time Linear Time-Invariant (LTI) systems, the convolution operation is fundamental. Consider two discrete-time signals, the unit step sequence $u[n]$ and a custom signal $x[n]$.\n\nThe unit step sequence is defined as:\n$$\nu[n] =\n\\begin{cases}\n1,  n \\ge 0 \\\\\n0,  n  0\n\\end{cases}\n$$\n\nThe custom signal $x[n]$ is defined in terms of the discrete-time unit impulse sequence $\\delta[n]$ as:\n$$\nx[n] = 2\\delta[n] - \\delta[n-4]\n$$\nwhere the unit impulse $\\delta[n]$ is equal to 1 for $n=0$ and 0 for all other integer values of $n$.\n\nDetermine the resulting signal $y[n]$ from the convolution of these two signals, which is given by $y[n] = u[n] * x[n]$. Express your final answer as a mathematical expression in terms of the integer index $n$ and the unit step sequence $u[n]$.", "solution": "The problem asks for the computation of the convolution of two discrete-time signals, $y[n] = u[n] * x[n]$. The signals are given as $u[n]$, the unit step sequence, and $x[n] = 2\\delta[n] - \\delta[n-4]$.\n\nWe can solve this by leveraging the properties of the convolution operation, specifically its linearity and the sifting property of the unit impulse.\n\nThe convolution operation is distributive over addition, which is a key part of its linearity. This means we can write:\n$$\ny[n] = u[n] * x[n] = u[n] * (2\\delta[n] - \\delta[n-4])\n$$\n$$\ny[n] = u[n] * (2\\delta[n]) + u[n] * (-\\delta[n-4])\n$$\n\nFurthermore, convolution is associative with scalar multiplication. Thus, we can pull the scalar constants out:\n$$\ny[n] = 2(u[n] * \\delta[n]) - (u[n] * \\delta[n-4])\n$$\n\nNow, we use two fundamental properties of convolution involving the unit impulse sequence:\n1.  **Identity Property**: The convolution of any signal $f[n]$ with the unit impulse $\\delta[n]$ results in the signal $f[n]$ itself. That is, $f[n] * \\delta[n] = f[n]$.\n2.  **Shifting Property**: The convolution of any signal $f[n]$ with a shifted unit impulse $\\delta[n-n_0]$ results in a shifted version of the signal, $f[n-n_0]$. That is, $f[n] * \\delta[n-n_0] = f[n-n_0]$.\n\nApplying the identity property to the first term in our expression for $y[n]$:\n$$\nu[n] * \\delta[n] = u[n]\n$$\n\nApplying the shifting property to the second term, with a shift of $n_0 = 4$:\n$$\nu[n] * \\delta[n-4] = u[n-4]\n$$\n\nSubstituting these results back into the expression for $y[n]$:\n$$\ny[n] = 2(u[n]) - (u[n-4])\n$$\n$$\ny[n] = 2u[n] - u[n-4]\n$$\n\nThis expression represents the final resulting signal. It is a superposition of a scaled unit step starting at $n=0$ and a scaled, inverted unit step starting at $n=4$.", "answer": "$$\\boxed{2u[n] - u[n-4]}$$", "id": "1761156"}, {"introduction": "In this exercise, we explore one of the most fundamental LTI systems: the accumulator. You will discover that the impulse response of this system is the unit step sequence itself, $h[n] = u[n]$. This problem challenges you to calculate the system's output for a causal geometric sequence, providing valuable practice with the running sum and the formula for a finite geometric series. [@problem_id:1761150]", "problem": "Consider a discrete-time linear time-invariant system known as an accumulator. The input-output relationship for an accumulator is given by the running sum:\n$$y[n] = \\sum_{k=-\\infty}^{n} x[k]$$\nwhere $x[n]$ is the input signal and $y[n]$ is the output signal.\n\nThe input to this system is a causal geometric sequence defined as:\n$$x[n] = a^{n} u[n]$$\nHere, $a$ is a real constant such that $|a|  1$, and $u[n]$ is the discrete-time unit step sequence, defined as:\n$$u[n] = \\begin{cases} 1  n \\geq 0 \\\\ 0  n  0 \\end{cases}$$\n\nDetermine the output signal $y[n]$ for all integers $n$. Express your answer as a single closed-form analytical expression in terms of $a$, $n$, and the unit step sequence $u[n]$.", "solution": "The output of the accumulator system is given by the relation:\n$$y[n] = \\sum_{k=-\\infty}^{n} x[k]$$\nThe input signal is given as $x[k] = a^k u[k]$. Substituting this into the accumulator equation gives:\n$$y[n] = \\sum_{k=-\\infty}^{n} a^k u[k]$$\nThe discrete-time unit step sequence $u[k]$ is zero for all $k  0$ and one for all $k \\ge 0$. Due to the presence of the $u[k]$ term inside the summation, all terms for which $k  0$ are zero. This effectively changes the lower limit of the summation from $-\\infty$ to $0$.\n$$y[n] = \\sum_{k=0}^{n} a^k u[k]$$\nSince the summation now only runs over non-negative values of $k$, the term $u[k]$ is always equal to 1 for all $k$ in the summation range (provided $n \\ge 0$). Thus we can simplify the expression:\n$$y[n] = \\sum_{k=0}^{n} a^k$$\nWe must now analyze this expression for two distinct cases based on the value of the upper summation limit, $n$.\n\nCase 1: $n  0$\nWhen $n$ is a negative integer (e.g., -1, -2, ...), the upper limit of the summation, $n$, is less than the lower limit, 0. By convention, a sum where the upper limit is less than the lower limit is an empty sum, which evaluates to zero.\nTherefore, for $n  0$, we have $y[n] = 0$.\n\nCase 2: $n \\ge 0$\nWhen $n$ is a non-negative integer (e.g., 0, 1, 2, ...), the sum is a finite geometric series with $n+1$ terms, a first term of $a^0=1$, and a common ratio of $a$. The formula for the sum of a finite geometric series is $\\sum_{k=0}^{N} r^k = \\frac{1-r^{N+1}}{1-r}$.\nApplying this formula with $r=a$ and $N=n$, we get:\n$$y[n] = \\frac{1-a^{n+1}}{1-a}$$\nThis result is valid for $n \\ge 0$. The condition $|a|1$ given in the problem ensures that the denominator $1-a$ is non-zero, so the expression is well-defined.\n\nFinally, we combine the results from both cases into a single closed-form expression that is valid for all integers $n$.\nFor $n  0$, $y[n] = 0$.\nFor $n \\ge 0$, $y[n] = \\frac{1-a^{n+1}}{1-a}$.\nThis piecewise definition matches the behavior of the discrete-time unit step sequence $u[n]$, which is 0 for $n0$ and 1 for $n \\ge 0$. We can therefore express the complete solution for $y[n]$ by multiplying the result from Case 2 by $u[n]$:\n$$y[n] = \\left( \\frac{1-a^{n+1}}{1-a} \\right) u[n]$$\nThis expression correctly yields zero for $n0$ and the calculated sum for $n \\ge 0$.", "answer": "$$\\boxed{\\left(\\frac{1-a^{n+1}}{1-a}\\right) u[n]}$$", "id": "1761150"}, {"introduction": "Building on the concept of the accumulator, this practice presents an inverse problem that is common in system analysis. Given a specific output signal—a finite ramp—your task is to determine the input signal that must have been applied to the accumulator. This exercise reinforces the inverse relationship between summation (accumulation) and differencing and hones your ability to manipulate expressions involving both unit step and unit impulse functions. [@problem_id:1761173]", "problem": "Consider a discrete-time Linear Time-Invariant (LTI) system known as an accumulator. The behavior of such systems can be analyzed using fundamental discrete-time signals. The discrete-time unit step sequence, $u[n]$, is defined as $u[n]=1$ for $n \\ge 0$ and $u[n]=0$ for $n  0$. The discrete-time unit impulse sequence, $\\delta[n]$, is defined as $\\delta[n]=1$ for $n=0$ and $\\delta[n]=0$ for $n \\ne 0$.\n\nThe impulse response of this specific accumulator system is given by $h[n] = u[n]$.\n\nAn unknown input signal, $x[n]$, is applied to this accumulator, producing an output signal $y[n]$. The output is observed to be a finite ramp signal described by the expression $y[n] = n(u[n] - u[n-N])$, where $N$ is an integer constant and $N > 1$.\n\nDetermine the input signal $x[n]$ that generates this output. Express your answer as a single closed-form analytic expression in terms of the integer constant $N$, the unit step sequence $u[n]$, and the unit impulse sequence $\\delta[n]$.", "solution": "The relationship between the input $x[n]$ and output $y[n]$ of an accumulator is given by the running sum:\n$$\ny[n] = \\sum_{k=-\\infty}^{n} x[k]\n$$\nThis implies that the input signal is the first difference of the output signal:\n$$\nx[n] = y[n] - y[n-1]\n$$\nWe are given the output signal $y[n] = n(u[n] - u[n-N])$. Substituting this into the difference equation gives:\n$$\nx[n] = n(u[n] - u[n-N]) - (n-1)(u[n-1] - u[n-1-N])\n$$\nTo simplify this, we can expand and group the terms involving the same shifts:\n$$\nx[n] = \\big(nu[n] - (n-1)u[n-1]\\big) - \\big(nu[n-N] - (n-1)u[n-1-N]\\big)\n$$\nLet's analyze the two bracketed terms separately.\n\n1.  The first term is the first difference of the discrete-time ramp signal $r[n] = n u[n]$. This evaluates to the unit step sequence shifted by one:\n    $$\n    nu[n] - (n-1)u[n-1] = u[n-1]\n    $$\n\n2.  For the second term, let's substitute $m=n-N$. The expression becomes $(m+N)u[m] - (m+N-1)u[m-1]$. We can expand this as:\n    $$\n    \\big(mu[m] - (m-1)u[m-1]\\big) + N\\big(u[m] - u[m-1]\\big)\n    $$\n    Using the identities $mu[m] - (m-1)u[m-1] = u[m-1]$ and $u[m] - u[m-1] = \\delta[m]$, this simplifies to:\n    $$\n    u[m-1] + N\\delta[m]\n    $$\n    Substituting back $m=n-N$, the second term is:\n    $$\n    nu[n-N] - (n-1)u[n-1-N] = u[n-N-1] + N\\delta[n-N]\n    $$\n\nFinally, substituting these simplified expressions back into the equation for $x[n]$:\n$$\nx[n] = u[n-1] - \\big(u[n-N-1] + N\\delta[n-N]\\big)\n$$\n$$\nx[n] = u[n-1] - u[n-N-1] - N\\delta[n-N]\n$$\nThis is a valid final expression. We can obtain an equivalent form by using the relationship $\\delta[n-N] = u[n-N] - u[n-N-1]$, which gives $u[n-N-1] = u[n-N] - \\delta[n-N]$. Substituting this gives:\n$$\nx[n] = u[n-1] - \\big(u[n-N] - \\delta[n-N]\\big) - N\\delta[n-N]\n$$\n$$\nx[n] = u[n-1] - u[n-N] + \\delta[n-N] - N\\delta[n-N]\n$$\n$$\nx[n] = u[n-1] - u[n-N] - (N-1)\\delta[n-N]\n$$\nThis final form matches the boxed answer.", "answer": "$$\\boxed{u[n-1]-u[n-N]-(N-1)\\delta[n-N]}$$", "id": "1761173"}]}