{"hands_on_practices": [{"introduction": "A foundational task in image processing is to extract meaningful features, such as edges, from an image. This is often accomplished by applying a spatial filter, which involves convolving the image with a small matrix known as a kernel. This exercise provides direct experience with this core operation by using the classic Sobel operator to detect a vertical edge, illustrating how a simple mathematical procedure can reveal an image's underlying structure. [@problem_id:1729803]", "problem": "In a basic digital image processing system, an algorithm designed to detect vertical edges analyzes a small region of an image. This region is represented by a $3 \\times 3$ matrix of pixel intensity values, denoted by $I$. The specific patch under consideration represents a perfect vertical edge and is given by:\n$$\nI = \\begin{pmatrix}\n50 & 200 & 200 \\\\\n50 & 200 & 200 \\\\\n50 & 200 & 200\n\\end{pmatrix}\n$$\nThe algorithm estimates the gradient in the horizontal direction (which corresponds to the strength of a vertical edge) at the center of this patch. It does so by using a predefined $3 \\times 3$ kernel, $G_x$, given by:\n$$\nG_x = \\begin{pmatrix}\n-1 & 0 & 1 \\\\\n-2 & 0 & 2 \\\\\n-1 & 0 & 1\n\\end{pmatrix}\n$$\nThe gradient estimate, $g$, is computed as the sum of the element-wise products of the kernel matrix $G_x$ and the image patch matrix $I$. Calculate the value of this gradient estimate $g$.", "solution": "The algorithm computes the horizontal gradient estimate at the center of the patch as the sum of element-wise products between the kernel and the image patch. Denote the entries of $G_{x}$ and $I$ by $G_{x}(i,j)$ and $I(i,j)$ for $i,j \\in \\{1,2,3\\}$. The estimate is\n$$\ng=\\sum_{i=1}^{3}\\sum_{j=1}^{3} G_{x}(i,j)\\,I(i,j).\n$$\nCompute term by term:\n$$\ng = (-1)(50) + 0(200) + 1(200) + (-2)(50) + 0(200) + 2(200) + (-1)(50) + 0(200) + 1(200).\n$$\nSimplify each product and sum:\n$$\ng = -50 + 0 + 200 - 100 + 0 + 400 - 50 + 0 + 200 = 600.\n$$\nTherefore, the gradient estimate is $g=600$.", "answer": "$$\\boxed{600}$$", "id": "1729803"}, {"introduction": "Beyond local features, we can transform an image's overall appearance by analyzing its global properties. Histogram equalization is a powerful technique for automatically enhancing contrast by redistributing pixel intensity values based on their frequencies. This practice demonstrates how to remap pixel values using the cumulative distribution function (CDF) of the image's histogram, providing a powerful tool for improving image clarity. [@problem_id:1729821]", "problem": "A specialized astronomical imaging sensor is used to capture a monochrome image of a distant nebula. Due to the properties of the interstellar gas and the sensor's specific filters, the captured 8-bit grayscale image is composed of pixels with only three distinct intensity values: 50, 120, and 210. An 8-bit image can represent $L=256$ intensity levels, from 0 (black) to 255 (white).\n\nThe image has a total of 1,048,576 pixels. A statistical analysis reveals the following distribution:\n- 262,144 pixels have an intensity value of 50.\n- 524,288 pixels have an intensity value of 120.\n- 262,144 pixels have an intensity value of 210.\n\nTo improve the visual contrast, a standard histogram equalization algorithm is applied to the image. The transformation for each original pixel intensity value, $v$, to a new intensity value, $v'$, is given by the formula:\n$$v' = \\text{floor}((L-1) \\times \\text{CDF}(v))$$\nHere, `floor(x)` is the function that rounds $x$ down to the nearest integer, $L=256$ is the number of intensity levels, and $\\text{CDF}(v)$ is the Cumulative Distribution Function of the image's pixel intensities evaluated at level $v$. The $\\text{CDF}(v)$ is defined as the sum of the probabilities of all intensity levels less than or equal to $v$.\n\nDetermine the new intensity values that will replace the original intensity values of 50, 120, and 210, respectively. Present your answer as a set of three integer values in this specific order.", "solution": "An 8-bit image has $L=256$ intensity levels, so the histogram equalization mapping is\n$$v'=\\lfloor (L-1)\\,\\text{CDF}(v)\\rfloor=\\lfloor 255\\,\\text{CDF}(v)\\rfloor.$$\nLet $N=1{,}048{,}576$ be the total number of pixels. The probabilities at the three present intensities are\n$$p(50)=\\frac{262{,}144}{1{,}048{,}576}=\\frac{2^{18}}{2^{20}}=\\frac{1}{4},\\quad p(120)=\\frac{524{,}288}{1{,}048{,}576}=\\frac{2^{19}}{2^{20}}=\\frac{1}{2},\\quad p(210)=\\frac{262{,}144}{1{,}048{,}576}=\\frac{1}{4}.$$\nThe cumulative distribution function at these levels is\n$$\\text{CDF}(50)=\\frac{1}{4},\\quad \\text{CDF}(120)=\\frac{1}{4}+\\frac{1}{2}=\\frac{3}{4},\\quad \\text{CDF}(210)=\\frac{1}{4}+\\frac{1}{2}+\\frac{1}{4}=1.$$\nApplying the mapping,\n$$v'(50)=\\left\\lfloor 255\\cdot \\frac{1}{4}\\right\\rfloor=\\left\\lfloor \\frac{255}{4}\\right\\rfloor=\\left\\lfloor 63+\\frac{3}{4}\\right\\rfloor=63,$$\n$$v'(120)=\\left\\lfloor 255\\cdot \\frac{3}{4}\\right\\rfloor=\\left\\lfloor \\frac{765}{4}\\right\\rfloor=\\left\\lfloor 191+\\frac{1}{4}\\right\\rfloor=191,$$\n$$v'(210)=\\left\\lfloor 255\\cdot 1\\right\\rfloor=255.$$\nThus the original intensities $50,120,210$ map to $63,191,255$, respectively.", "answer": "$$\\boxed{\\begin{pmatrix}63 & 191 & 255\\end{pmatrix}}$$", "id": "1729821"}, {"introduction": "Image processing pipelines often require applying multiple filters in sequence, which raises a critical question: does the order of operations matter? This exercise investigates this by exploring the commutativity of linear (weighted-averaging) and non-linear (median) filters. By comparing the outcomes of different filter orderings, you will gain a practical understanding of why linearity is a crucial system property that determines whether the sequence of operations can be interchanged without affecting the final result. [@problem_id:1729825]", "problem": "In digital image processing, filtering operations are fundamental for tasks like noise reduction and feature enhancement. The order in which filters are applied can significantly affect the final output. Consider a one-dimensional signal, representing a single row of pixels from an image, given by the sequence of intensity values $S = [10, 20, 15, 100, 18, 22, 12]$.\n\nWe will analyze the effect of cascading two common types of filters: a non-linear median filter and a linear weighted-averaging filter.\n\n1.  **Median Filter (M):** A 3-point median filter. The output at a point is the median of the input values in a 3-point window centered at that point. For an input sequence $x[n]$, the output is $y_M[n] = \\text{median}(x[n-1], x[n], x[n+1])$.\n\n2.  **Weighted-Averaging Filter (G):** A 3-point linear filter, which is a simplified form of a Gaussian blur. It is defined by the convolution with the kernel $h = [0.25, 0.5, 0.25]$. For an input sequence $x[n]$, the output is $y_G[n] = 0.25 \\cdot x[n-1] + 0.5 \\cdot x[n] + 0.25 \\cdot x[n+1]$.\n\nWe will compute two resulting signals by applying these filters in different orders:\n-   Case 1: First apply the median filter to $S$ to get an intermediate signal $S_M$, then apply the weighted-averaging filter to $S_M$ to get the final signal $S_1 = G(M(S))$.\n-   Case 2: First apply the weighted-averaging filter to $S$ to get an intermediate signal $S_G$, then apply the median filter to $S_G$ to get the final signal $S_2 = M(G(S))$.\n\nWhen applying a 3-point filter to a finite signal, we are only interested in the output values where the filter's 3-point window is fully contained within the input signal's domain. For example, when filtering a 7-point signal, the valid output will be a 5-point signal. Subsequently filtering this 5-point signal will result in a 3-point signal.\n\nBased on your calculations of the final 3-point signals $S_1$ and $S_2$, select the statement that correctly compares them and provides the valid reasoning based on system properties.\n\nA. $S_1$ and $S_2$ are identical because both filters are shift-invariant operators.\n\nB. $S_1$ and $S_2$ are identical because any cascade of filtering operations is mathematically commutative.\n\nC. $S_1$ and $S_2$ are different. This is because the median filter is a non-linear operator, and the commutative property is not generally guaranteed when cascading a non-linear operator with a linear one.\n\nD. $S_1$ and $S_2$ are different. This is because the weighted-averaging (Gaussian) filter is a non-linear operator.\n\nE. $S_1$ and $S_2$ are different. Commutativity only holds if both filters are median filters or both are Gaussian filters.", "solution": "Let the input sequence be $S[1..7]=[10,20,15,100,18,22,12]$. A 3-point filter produces valid outputs at indices $n=2,3,4,5,6$, and cascading another 3-point filter then yields valid outputs at $n=3,4,5$.\n\nFirst cascade $G(M(S))$:\n- Apply the median filter $M$ to $S$:\n$$\n\\begin{aligned}\nS_{M}[2]&=\\text{median}(10,20,15)=15,\\\\\nS_{M}[3]&=\\text{median}(20,15,100)=20,\\\\\nS_{M}[4]&=\\text{median}(15,100,18)=18,\\\\\nS_{M}[5]&=\\text{median}(100,18,22)=22,\\\\\nS_{M}[6]&=\\text{median}(18,22,12)=18.\n\\end{aligned}\n$$\nThus $S_{M}[2..6]=[15,20,18,22,18]$.\n- Apply the weighted-averaging filter $G$ with weights $\\left[\\frac{1}{4},\\frac{1}{2},\\frac{1}{4}\\right]$ to $S_{M}$:\n$$\n\\begin{aligned}\nS_{1}[3]&=\\tfrac{1}{4}S_{M}[2]+\\tfrac{1}{2}S_{M}[3]+\\tfrac{1}{4}S_{M}[4]=\\tfrac{15}{4}+10+\\tfrac{18}{4}=\\tfrac{73}{4},\\\\\nS_{1}[4]&=\\tfrac{1}{4}S_{M}[3]+\\tfrac{1}{2}S_{M}[4]+\\tfrac{1}{4}S_{M}[5]=5+9+\\tfrac{22}{4}=\\tfrac{39}{2},\\\\\nS_{1}[5]&=\\tfrac{1}{4}S_{M}[4]+\\tfrac{1}{2}S_{M}[5]+\\tfrac{1}{4}S_{M}[6]=\\tfrac{18}{4}+11+\\tfrac{18}{4}=20.\n\\end{aligned}\n$$\nHence $S_{1}[3..5]=\\left[\\tfrac{73}{4},\\tfrac{39}{2},20\\right]$.\n\nSecond cascade $M(G(S))$:\n- Apply the weighted-averaging filter $G$ to $S$:\n$$\n\\begin{aligned}\nS_{G}[2]&=\\tfrac{1}{4}\\cdot 10+\\tfrac{1}{2}\\cdot 20+\\tfrac{1}{4}\\cdot 15=\\tfrac{65}{4},\\\\\nS_{G}[3]&=\\tfrac{1}{4}\\cdot 20+\\tfrac{1}{2}\\cdot 15+\\tfrac{1}{4}\\cdot 100=\\tfrac{75}{2},\\\\\nS_{G}[4]&=\\tfrac{1}{4}\\cdot 15+\\tfrac{1}{2}\\cdot 100+\\tfrac{1}{4}\\cdot 18=\\tfrac{233}{4},\\\\\nS_{G}[5]&=\\tfrac{1}{4}\\cdot 100+\\tfrac{1}{2}\\cdot 18+\\tfrac{1}{4}\\cdot 22=\\tfrac{79}{2},\\\\\nS_{G}[6]&=\\tfrac{1}{4}\\cdot 18+\\tfrac{1}{2}\\cdot 22+\\tfrac{1}{4}\\cdot 12=\\tfrac{37}{2}.\n\\end{aligned}\n$$\nThus $S_{G}[2..6]=\\left[\\tfrac{65}{4},\\tfrac{75}{2},\\tfrac{233}{4},\\tfrac{79}{2},\\tfrac{37}{2}\\right]$.\n- Apply the median filter $M$ to $S_{G}$:\n$$\n\\begin{aligned}\nS_{2}[3]&=\\text{median}\\!\\left(\\tfrac{65}{4},\\tfrac{75}{2},\\tfrac{233}{4}\\right)=\\tfrac{75}{2},\\\\\nS_{2}[4]&=\\text{median}\\!\\left(\\tfrac{75}{2},\\tfrac{233}{4},\\tfrac{79}{2}\\right)=\\tfrac{79}{2},\\\\\nS_{2}[5]&=\\text{median}\\!\\left(\\tfrac{233}{4},\\tfrac{79}{2},\\tfrac{37}{2}\\right)=\\tfrac{79}{2}.\n\\end{aligned}\n$$\nHence $S_{2}[3..5]=\\left[\\tfrac{75}{2},\\tfrac{79}{2},\\tfrac{79}{2}\\right]$.\n\nComparison: $S_{1}[3..5]=\\left[\\tfrac{73}{4},\\tfrac{39}{2},20\\right]$ and $S_{2}[3..5]=\\left[\\tfrac{75}{2},\\tfrac{79}{2},\\tfrac{79}{2}\\right]$ are not equal. The reason is that the median filter is a non-linear operator, so commutativity with a linear operator is not guaranteed. The weighted-averaging filter is linear and shift-invariant; the median filter is shift-invariant but non-linear. Therefore, the correct statement is that $S_{1}$ and $S_{2}$ are different due to the non-linearity of the median filter.", "answer": "$$\\boxed{C}$$", "id": "1729825"}]}