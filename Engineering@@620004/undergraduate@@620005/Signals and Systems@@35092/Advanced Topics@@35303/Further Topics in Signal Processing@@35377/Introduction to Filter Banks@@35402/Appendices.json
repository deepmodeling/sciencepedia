{"hands_on_practices": [{"introduction": "Before building a complex filter bank, it's essential to understand its building blocks. This exercise introduces the concept of polyphase decomposition, a powerful technique for rewriting a filter into smaller, more efficient components. By working through this foundational example [@problem_id:1729545], you will gain hands-on practice in the algebraic manipulation that underpins efficient multirate filter implementations.", "problem": "In the design of multirate digital signal processing systems, such as two-channel analysis-synthesis filter banks, a foundational technique is the polyphase decomposition. This method allows a filter to be implemented more efficiently by breaking it down into smaller sub-filters called polyphase components.\n\nFor a causal Finite Impulse Response (FIR) filter with a transfer function $H(z)$, its type-1 polyphase decomposition for a two-channel system is defined by the identity:\n$$H(z) = E_0(z^2) + z^{-1}E_1(z^2)$$\nwhere $E_0(z)$ and $E_1(z)$ are the two polyphase component filters.\n\nGiven a simple low-pass FIR filter with the transfer function $H(z) = 1 + 2z^{-1} + 3z^{-2}$, determine the transfer functions for its two type-1 polyphase components, $E_0(z)$ and $E_1(z)$.", "solution": "We are given the causal FIR filter transfer function $H(z) = 1 + 2z^{-1} + 3z^{-2}$. Write $H(z)$ in the general sum form $H(z) = \\sum_{n=0}^{2} h[n] z^{-n}$, which gives the coefficients $h[0] = 1$, $h[1] = 2$, and $h[2] = 3$.\n\nFor a two-channel type-1 polyphase decomposition, the identity is\n$$\nH(z) = E_{0}(z^{2}) + z^{-1} E_{1}(z^{2}),\n$$\nwith polyphase components defined by\n$$\nE_{0}(z) = \\sum_{k=0}^{\\infty} h[2k] z^{-k}, \\quad E_{1}(z) = \\sum_{k=0}^{\\infty} h[2k+1] z^{-k}.\n$$\n\nCompute $E_{0}(z)$ using the even-indexed coefficients:\n$$\nE_{0}(z) = h[0] + h[2] z^{-1} = 1 + 3 z^{-1}.\n$$\n\nCompute $E_{1}(z)$ using the odd-indexed coefficients:\n$$\nE_{1}(z) = h[1] = 2.\n$$\n\nVerify the decomposition:\n$$\nE_{0}(z^{2}) + z^{-1} E_{1}(z^{2}) = \\left(1 + 3 z^{-2}\\right) + z^{-1} \\cdot 2 = 1 + 2 z^{-1} + 3 z^{-2} = H(z),\n$$\nwhich matches the given $H(z)$, confirming the correctness of the polyphase components.", "answer": "$$\\boxed{\\begin{pmatrix}1 + 3 z^{-1} & 2\\end{pmatrix}}$$", "id": "1729545"}, {"introduction": "The primary goal of many analysis-synthesis filter banks is to reconstruct the original signal perfectly, or at least with acceptable delay and scaling. This exercise [@problem_id:1729528] moves beyond individual components to the design of a complete system, challenging you to find the synthesis filters that achieve perfect reconstruction. You will directly engage with the two fundamental conditions of this design goal: aliasing cancellation and distortion elimination.", "problem": "Consider a two-channel, critically-sampled filter bank. An input signal $x[n]$ is passed through two analysis filters, $H_0(z)$ and $H_1(z)$. The output of each filter is then downsampled by a factor of 2. These two downsampled signals are then upsampled by a factor of 2 and passed through two synthesis filters, $F_0(z)$ and $F_1(z)$, respectively. The outputs of the synthesis filters are summed to produce the reconstructed signal, $\\hat{x}[n]$.\n\nThe system is said to achieve perfect reconstruction if the output is a scaled and delayed version of the input, such that $\\hat{x}[n] = c x[n-d]$ for some non-zero constant gain $c$ and non-negative integer delay $d$.\n\nSuppose the analysis filters are given by the Z-transforms $H_0(z) = 1$ and $H_1(z) = z^{-1}$. Determine the Z-transforms of the causal synthesis filters, $F_0(z)$ and $F_1(z)$, that achieve perfect reconstruction with unity gain ($c=1$) and the minimum possible non-negative integer delay $d$.\n\nPresent your answer as a row matrix of the form $\\begin{pmatrix} F_0(z) & F_1(z) \\end{pmatrix}$.", "solution": "Define the analysis filters by their Z-transforms $H_{0}(z)=1$ and $H_{1}(z)=z^{-1}$. In a two-channel, decimate-by-2 and interpolate-by-2 filter bank, the reconstructed signal $\\hat{X}(z)$ in the $z$-domain can be expressed (using standard noble identities and alias-component decomposition) as\n$$\n\\hat{X}(z)=\\frac{1}{2}\\left[F_{0}(z)H_{0}(z)+F_{1}(z)H_{1}(z)\\right]X(z)+\\frac{1}{2}\\left[F_{0}(z)H_{0}(-z)+F_{1}(z)H_{1}(-z)\\right]X(-z).\n$$\nPerfect reconstruction with unity gain and delay $d$ requires the alias term to vanish and the distortion term to equal $z^{-d}$, i.e.\n$$\n\\frac{1}{2}\\left[F_{0}(z)H_{0}(z)+F_{1}(z)H_{1}(z)\\right]=z^{-d},\\qquad \\frac{1}{2}\\left[F_{0}(z)H_{0}(-z)+F_{1}(z)H_{1}(-z)\\right]=0.\n$$\nEquivalently,\n$$\nF_{0}(z)H_{0}(z)+F_{1}(z)H_{1}(z)=2z^{-d},\\qquad F_{0}(z)H_{0}(-z)+F_{1}(z)H_{1}(-z)=0.\n$$\nSubstitute $H_{0}(z)=1$ and $H_{1}(z)=z^{-1}$, and use $H_{0}(-z)=1$, $H_{1}(-z)=(-z)^{-1}=-z^{-1}$, to obtain the linear system\n$$\nF_{0}(z)+z^{-1}F_{1}(z)=2z^{-d},\\qquad F_{0}(z)-z^{-1}F_{1}(z)=0.\n$$\nFrom the second equation,\n$$\nF_{0}(z)=z^{-1}F_{1}(z).\n$$\nInsert this into the first equation:\n$$\nz^{-1}F_{1}(z)+z^{-1}F_{1}(z)=2z^{-d}\\quad\\Rightarrow\\quad 2z^{-1}F_{1}(z)=2z^{-d}\\quad\\Rightarrow\\quad F_{1}(z)=z^{-(d-1)}.\n$$\nTherefore,\n$$\nF_{0}(z)=z^{-1}F_{1}(z)=z^{-1}z^{-(d-1)}=z^{-d}.\n$$\nTo ensure causality, both $F_{0}(z)$ and $F_{1}(z)$ must be realizable with nonnegative delays, i.e., they must be polynomials in $z^{-1}$ without positive powers of $z$. Here $F_{0}(z)=z^{-d}$ is causal for any $d\\geq 0$, while $F_{1}(z)=z^{-(d-1)}$ is causal if and only if $d-1\\geq 0$, i.e., $d\\geq 1$. The minimum non-negative integer delay is therefore $d=1$, which yields\n$$\nF_{0}(z)=z^{-1},\\qquad F_{1}(z)=1.\n$$\nWith these choices, the alias term is zero and the distortion term equals $z^{-1}$ with unity gain, so $\\hat{x}[n]=x[n-1]$.", "answer": "$$\\boxed{\\begin{pmatrix} z^{-1} & 1 \\end{pmatrix}}$$", "id": "1729528"}, {"introduction": "While Z-domain analysis is powerful, viewing a filter bank's operation on finite-length signals provides a different and equally important perspective. This practice [@problem_id:1729533] guides you to model the entire analysis-synthesis process—including convolution, downsampling, and upsampling—using matrix operations. This approach solidifies your understanding of each step and reveals the filter bank as a single linear transformation, bridging the gap between signal processing theory and its implementation in linear algebra.", "problem": "Consider a two-channel, discrete-time, analysis-synthesis filter bank operating on finite-length signals. The system is designed to process an input signal $\\mathbf{x}$ of length $N=4$, represented by the column vector $\\mathbf{x} = [x[0], x[1], x[2], x[3]]^T$.\n\nThe analysis stage splits the signal into two sub-bands.\n- The low-pass branch uses a Finite Impulse Response (FIR) filter with impulse response $h_0 = [1, 2]$.\n- The high-pass branch uses an FIR filter with impulse response $h_1 = [3, 4]$.\n\nThe output of each analysis filter is then downsampled by a factor of 2 (i.e., only samples at even indices are retained, starting with index 0).\n\nThe synthesis stage reconstructs the signal.\n- The low-pass sub-band signal is upsampled by a factor of 2 (by inserting a zero between each sample) and then filtered by a synthesis filter with impulse response $g_0 = [2, -1]$.\n- The high-pass sub-band signal is upsampled by a factor of 2 and then filtered by a synthesis filter with impulse response $g_1 = [-1, 2]$.\n\nThe outputs of the two synthesis filters are then summed to produce a final output signal $\\mathbf{y}$. The entire process from $\\mathbf{x}$ to $\\mathbf{y}$ can be described by a single matrix transformation $\\mathbf{y} = \\mathbf{M} \\mathbf{x}$. Due to the filtering operations, the length of the final output signal $\\mathbf{y}$ may be greater than the input signal length $N$. The reconstructed signal $\\hat{\\mathbf{x}}$ of length $N=4$ is obtained by extracting a specific window of samples from $\\mathbf{y}$. Specifically, $\\hat{x}[n] = y[n+1]$ for $n=0, 1, 2, 3$.\n\nThe complete transformation from the input signal $\\mathbf{x}$ to the reconstructed signal $\\hat{\\mathbf{x}}$ can be represented by a single $4 \\times 4$ matrix $\\mathbf{P}$ such that $\\hat{\\mathbf{x}} = \\mathbf{P} \\mathbf{x}$.\n\nCalculate the numerical value of the sum of all elements in the matrix $\\mathbf{P}$.", "solution": "The problem asks for the sum of all elements of the total system matrix $\\mathbf{P}$ that transforms an input vector $\\mathbf{x}$ of length 4 to a reconstructed vector $\\hat{\\mathbf{x}}$ of length 4. The overall transformation is $\\hat{\\mathbf{x}} = \\mathbf{P}\\mathbf{x}$. We can find $\\mathbf{P}$ by tracking the signal through the filter bank using matrix operations.\n\nLet the input signal be $\\mathbf{x} = [x_0, x_1, x_2, x_3]^T$.\n\n**Step 1: Analysis Stage**\n\nThe first step is linear convolution of the input signal $\\mathbf{x}$ (length $N=4$) with the analysis filters $h_0$ and $h_1$ (length $L=2$). The output of a linear convolution of a signal of length $N$ with a filter of length $L$ is a signal of length $N+L-1 = 4+2-1 = 5$.\n\n*   **Branch 0 (low-pass):** Convolution with $h_0 = [1, 2]$. Let the output be $\\mathbf{y}_0$. This can be represented by multiplication with a Toeplitz matrix $\\mathbf{H}_0$ of size $5 \\times 4$.\n    $$\n    \\mathbf{y}_0 = \\mathbf{H}_0 \\mathbf{x} = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\ 2 & 1 & 0 & 0 \\\\ 0 & 2 & 1 & 0 \\\\ 0 & 0 & 2 & 1 \\\\ 0 & 0 & 0 & 2 \\end{pmatrix} \\begin{pmatrix} x_0 \\\\ x_1 \\\\ x_2 \\\\ x_3 \\end{pmatrix}\n    $$\n*   **Branch 1 (high-pass):** Convolution with $h_1 = [3, 4]$. Let the output be $\\mathbf{y}_1$. This is represented by matrix $\\mathbf{H}_1$ of size $5 \\times 4$.\n    $$\n    \\mathbf{y}_1 = \\mathbf{H}_1 \\mathbf{x} = \\begin{pmatrix} 3 & 0 & 0 & 0 \\\\ 4 & 3 & 0 & 0 \\\\ 0 & 4 & 3 & 0 \\\\ 0 & 0 & 4 & 3 \\\\ 0 & 0 & 0 & 4 \\end{pmatrix} \\begin{pmatrix} x_0 \\\\ x_1 \\\\ x_2 \\\\ x_3 \\end{pmatrix}\n    $$\n\n**Step 2: Downsampling**\n\nThe signals $\\mathbf{y}_0$ and $\\mathbf{y}_1$ (length 5) are downsampled by a factor of 2. This means keeping samples at indices 0, 2, 4. The resulting signals, $\\mathbf{v}_0$ and $\\mathbf{v}_1$, will have length 3. This operation can be represented by a downsampling matrix $\\mathbf{D}$ of size $3 \\times 5$.\n$$\n\\mathbf{D} = \\begin{pmatrix} 1 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1 \\end{pmatrix}\n$$\nSo, $\\mathbf{v}_0 = \\mathbf{D} \\mathbf{y}_0 = \\mathbf{D} \\mathbf{H}_0 \\mathbf{x}$ and $\\mathbf{v}_1 = \\mathbf{D} \\mathbf{y}_1 = \\mathbf{D} \\mathbf{H}_1 \\mathbf{x}$. Let's compute the total analysis matrices $\\mathbf{A}_0 = \\mathbf{D}\\mathbf{H}_0$ and $\\mathbf{A}_1 = \\mathbf{D}\\mathbf{H}_1$. Both are $3 \\times 4$ matrices.\n$$\n\\mathbf{A}_0 = \\mathbf{D}\\mathbf{H}_0 = \\begin{pmatrix} 1 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1 \\end{pmatrix} \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\ 2 & 1 & 0 & 0 \\\\ 0 & 2 & 1 & 0 \\\\ 0 & 0 & 2 & 1 \\\\ 0 & 0 & 0 & 2 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\ 0 & 2 & 1 & 0 \\\\ 0 & 0 & 0 & 2 \\end{pmatrix}\n$$\n$$\n\\mathbf{A}_1 = \\mathbf{D}\\mathbf{H}_1 = \\begin{pmatrix} 1 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1 \\end{pmatrix} \\begin{pmatrix} 3 & 0 & 0 & 0 \\\\ 4 & 3 & 0 & 0 \\\\ 0 & 4 & 3 & 0 \\\\ 0 & 0 & 4 & 3 \\\\ 0 & 0 & 0 & 4 \\end{pmatrix} = \\begin{pmatrix} 3 & 0 & 0 & 0 \\\\ 0 & 4 & 3 & 0 \\\\ 0 & 0 & 0 & 4 \\end{pmatrix}\n$$\n\n**Step 3: Synthesis Stage**\n\nThe signals $\\mathbf{v}_0$ and $\\mathbf{v}_1$ (length 3) are upsampled by 2. This means inserting a zero between samples. The resulting signals, $\\mathbf{u}_0$ and $\\mathbf{u}_1$, have length $2 \\times 3 - 1 = 5$. This can be represented by an upsampling matrix $\\mathbf{U}$ of size $5 \\times 3$.\n$$\n\\mathbf{U} = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}\n$$\nThese upsampled signals are then convolved with the synthesis filters $g_0$ and $g_1$ (length $K=2$). The convolution output is of length $5+2-1=6$.\n\n*   **Branch 0:** Convolution of $\\mathbf{u}_0$ with $g_0 = [2, -1]$. Let the output be $\\mathbf{w}_0$. This is represented by a Toeplitz matrix $\\mathbf{G}_0$ of size $6 \\times 5$.\n    $$\n    \\mathbf{w}_0 = \\mathbf{G}_0 \\mathbf{u}_0 = \\begin{pmatrix} 2 & 0 & 0 & 0 & 0 \\\\ -1 & 2 & 0 & 0 & 0 \\\\ 0 & -1 & 2 & 0 & 0 \\\\ 0 & 0 & -1 & 2 & 0 \\\\ 0 & 0 & 0 & -1 & 2 \\\\ 0 & 0 & 0 & 0 & -1 \\end{pmatrix} \\mathbf{u}_0\n    $$\n*   **Branch 1:** Convolution of $\\mathbf{u}_1$ with $g_1 = [-1, 2]$. Let the output be $\\mathbf{w}_1$. This is represented by a Toeplitz matrix $\\mathbf{G}_1$ of size $6 \\times 5$.\n    $$\n    \\mathbf{w}_1 = \\mathbf{G}_1 \\mathbf{u}_1 = \\begin{pmatrix} -1 & 0 & 0 & 0 & 0 \\\\ 2 & -1 & 0 & 0 & 0 \\\\ 0 & 2 & -1 & 0 & 0 \\\\ 0 & 0 & 2 & -1 & 0 \\\\ 0 & 0 & 0 & 2 & -1 \\\\ 0 & 0 & 0 & 0 & 2 \\end{pmatrix} \\mathbf{u}_1\n    $$\n\n**Step 4: Summation and Final Reconstruction**\n\nThe total output signal before truncation is $\\mathbf{y} = \\mathbf{w}_0 + \\mathbf{w}_1$. The problem states that the final reconstructed signal $\\hat{\\mathbf{x}}$ is obtained by taking samples from $\\mathbf{y}$ starting at index 1: $\\hat{x}[n] = y[n+1]$ for $n=0, 1, 2, 3$. This corresponds to applying a truncation/selection matrix $\\mathbf{T}$ of size $4 \\times 6$ to $\\mathbf{y}$.\n$$\n\\mathbf{T} = \\begin{pmatrix} 0 & 1 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 \\end{pmatrix}\n$$\nSo, $\\hat{\\mathbf{x}} = \\mathbf{T} \\mathbf{y} = \\mathbf{T} (\\mathbf{w}_0 + \\mathbf{w}_1)$.\n\nLet's find the total synthesis matrices for each branch, $\\mathbf{S}_0 = \\mathbf{T}\\mathbf{G}_0\\mathbf{U}$ and $\\mathbf{S}_1 = \\mathbf{T}\\mathbf{G}_1\\mathbf{U}$. Both will be $4 \\times 3$.\n$$\n\\mathbf{G}_0\\mathbf{U} = \\begin{pmatrix} 2 & 0 & 0 & 0 & 0 \\\\ -1 & 2 & 0 & 0 & 0 \\\\ 0 & -1 & 2 & 0 & 0 \\\\ 0 & 0 & -1 & 2 & 0 \\\\ 0 & 0 & 0 & -1 & 2 \\\\ 0 & 0 & 0 & 0 & -1 \\end{pmatrix} \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} = \\begin{pmatrix} 2 & 0 & 0 \\\\ -1 & 0 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 0 & 2 \\\\ 0 & 0 & -1 \\end{pmatrix}\n$$\n$$\n\\mathbf{S}_0 = \\mathbf{T}(\\mathbf{G}_0\\mathbf{U}) = \\begin{pmatrix} 0 & 1 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 \\end{pmatrix} \\begin{pmatrix} 2 & 0 & 0 \\\\ -1 & 0 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 0 & 2 \\\\ 0 & 0 & -1 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 0 & 2 \\end{pmatrix}\n$$\nSimilarly for $\\mathbf{S}_1$:\n$$\n\\mathbf{G}_1\\mathbf{U} = \\begin{pmatrix} -1 & 0 & 0 & 0 & 0 \\\\ 2 & -1 & 0 & 0 & 0 \\\\ 0 & 2 & -1 & 0 & 0 \\\\ 0 & 0 & 2 & -1 & 0 \\\\ 0 & 0 & 0 & 2 & -1 \\\\ 0 & 0 & 0 & 0 & 2 \\end{pmatrix} \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 & 0 \\\\ 2 & 0 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & 0 & -1 \\\\ 0 & 0 & 2 \\end{pmatrix}\n$$\n$$\n\\mathbf{S}_1 = \\mathbf{T}(\\mathbf{G}_1\\mathbf{U}) = \\begin{pmatrix} 0 & 1 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 \\end{pmatrix} \\begin{pmatrix} -1 & 0 & 0 \\\\ 2 & 0 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & 0 & -1 \\\\ 0 & 0 & 2 \\end{pmatrix} = \\begin{pmatrix} 2 & 0 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & 0 & -1 \\end{pmatrix}\n$$\n\n**Step 5: Overall System Matrix**\n\nThe total system matrix $\\mathbf{P}$ combines all these steps.\n$\\hat{\\mathbf{x}} = \\mathbf{S}_0 \\mathbf{v}_0 + \\mathbf{S}_1 \\mathbf{v}_1 = \\mathbf{S}_0 (\\mathbf{A}_0 \\mathbf{x}) + \\mathbf{S}_1 (\\mathbf{A}_1 \\mathbf{x}) = (\\mathbf{S}_0 \\mathbf{A}_0 + \\mathbf{S}_1 \\mathbf{A}_1) \\mathbf{x}$.\nSo, $\\mathbf{P} = \\mathbf{S}_0 \\mathbf{A}_0 + \\mathbf{S}_1 \\mathbf{A}_1$. Let's compute each product.\n$$\n\\mathbf{P}_0 = \\mathbf{S}_0 \\mathbf{A}_0 = \\begin{pmatrix} -1 & 0 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 0 & 2 \\end{pmatrix} \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\ 0 & 2 & 1 & 0 \\\\ 0 & 0 & 0 & 2 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 & 0 & 0 \\\\ 0 & 4 & 2 & 0 \\\\ 0 & -2 & -1 & 0 \\\\ 0 & 0 & 0 & 4 \\end{pmatrix}\n$$\n$$\n\\mathbf{P}_1 = \\mathbf{S}_1 \\mathbf{A}_1 = \\begin{pmatrix} 2 & 0 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 2 & 0 \\\\ 0 & 0 & -1 \\end{pmatrix} \\begin{pmatrix} 3 & 0 & 0 & 0 \\\\ 0 & 4 & 3 & 0 \\\\ 0 & 0 & 0 & 4 \\end{pmatrix} = \\begin{pmatrix} 6 & 0 & 0 & 0 \\\\ 0 & -4 & -3 & 0 \\\\ 0 & 8 & 6 & 0 \\\\ 0 & 0 & 0 & -4 \\end{pmatrix}\n$$\nNow, we add them to get the total system matrix $\\mathbf{P}$.\n$$\n\\mathbf{P} = \\mathbf{P}_0 + \\mathbf{P}_1 = \\begin{pmatrix} -1 & 0 & 0 & 0 \\\\ 0 & 4 & 2 & 0 \\\\ 0 & -2 & -1 & 0 \\\\ 0 & 0 & 0 & 4 \\end{pmatrix} + \\begin{pmatrix} 6 & 0 & 0 & 0 \\\\ 0 & -4 & -3 & 0 \\\\ 0 & 8 & 6 & 0 \\\\ 0 & 0 & 0 & -4 \\end{pmatrix} = \\begin{pmatrix} 5 & 0 & 0 & 0 \\\\ 0 & 0 & -1 & 0 \\\\ 0 & 6 & 5 & 0 \\\\ 0 & 0 & 0 & 0 \\end{pmatrix}\n$$\n\n**Step 6: Sum of Elements**\n\nThe final step is to sum all the elements of the matrix $\\mathbf{P}$.\n$$\n\\text{Sum} = 5 + 0 + 0 + 0 + 0 + 0 + (-1) + 0 + 0 + 6 + 5 + 0 + 0 + 0 + 0 + 0 = 5 - 1 + 6 + 5 = 15\n$$", "answer": "$$\\boxed{15}$$", "id": "1729533"}]}