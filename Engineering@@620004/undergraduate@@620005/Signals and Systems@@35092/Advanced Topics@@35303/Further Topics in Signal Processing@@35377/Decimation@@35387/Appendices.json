{"hands_on_practices": [{"introduction": "This first practice provides a concrete, step-by-step walkthrough of the decimation process. We will take a simple discrete-time signal and apply the two fundamental stages of decimation: first, pre-filtering with an anti-aliasing filter, and second, downsampling the filtered signal. By following the signal's transformation, you will gain a hands-on understanding of the mechanics of decimation from input to output [@problem_id:1710524].", "problem": "In a digital signal processing system, a finite-length signal from a sensor is to be compressed. The compression is performed by a process called decimation. The input signal is given by the discrete-time sequence:\n$$x[n] = \\delta[n] + 2\\delta[n-1] + \\delta[n-2] + 4\\delta[n-3]$$\nwhere $\\delta[n]$ is the Kronecker delta function, representing a unit impulse at $n=0$.\n\nThe decimation process, with a decimation factor of $M=2$, is composed of two stages. First, the signal $x[n]$ is passed through a low-pass anti-aliasing filter to produce an intermediate signal $w[n]$. The impulse response of this filter is given by:\n$$h[n] = \\frac{1}{2}\\delta[n] + \\frac{1}{2}\\delta[n-1]$$\nSecond, the filtered signal $w[n]$ is downsampled by the factor $M=2$ to obtain the final output signal $y[n]$. The downsampling operation is defined by the relation $y[n] = w[2n]$.\n\nDetermine the final output sequence $y[n]$. Express your answer as a sum of weighted Kronecker delta functions.", "solution": "The filtering stage is a linear time-invariant convolution of the input with the anti-aliasing filter. Using $w[n]=(x*h)[n]=\\sum_{k=-\\infty}^{\\infty}x[k]\\,h[n-k]$ and the finite support of $x[n]$, we compute term by term:\n$$\n\\begin{aligned}\nx[0]=1&\\implies 1\\cdot h[n]=\\tfrac{1}{2}\\delta[n]+\\tfrac{1}{2}\\delta[n-1],\\\\\nx[1]=2&\\implies 2\\cdot h[n-1]=2\\left(\\tfrac{1}{2}\\delta[n-1]+\\tfrac{1}{2}\\delta[n-2]\\right)=\\delta[n-1]+\\delta[n-2],\\\\\nx[2]=1&\\implies 1\\cdot h[n-2]=\\tfrac{1}{2}\\delta[n-2]+\\tfrac{1}{2}\\delta[n-3],\\\\\nx[3]=4&\\implies 4\\cdot h[n-3]=4\\left(\\tfrac{1}{2}\\delta[n-3]+\\tfrac{1}{2}\\delta[n-4]\\right)=2\\delta[n-3]+2\\delta[n-4].\n\\end{aligned}\n$$\nSumming these contributions yields\n$$\nw[n]=\\tfrac{1}{2}\\delta[n]+\\tfrac{3}{2}\\delta[n-1]+\\tfrac{3}{2}\\delta[n-2]+\\tfrac{5}{2}\\delta[n-3]+2\\delta[n-4].\n$$\nThe downsampling by $M=2$ gives $y[n]=w[2n]$. Substituting $2n$ into $w[\\cdot]$ and using the properties of the Kronecker delta for integer $n$,\n$$\n\\delta[2n]=\\delta[n],\\quad \\delta[2n-(2k+1)]=0,\\quad \\delta[2n-2k]=\\delta[n-k],\n$$\nwe obtain\n$$\ny[n]=\\tfrac{1}{2}\\delta[n]+\\tfrac{3}{2}\\delta[n-1]+2\\delta[n-2].\n$$\nThis is the final output sequence expressed as a sum of weighted Kronecker delta functions.", "answer": "$$\\boxed{\\tfrac{1}{2}\\delta[n]+\\tfrac{3}{2}\\delta[n-1]+2\\delta[n-2]}$$", "id": "1710524"}, {"introduction": "With the mechanics of decimation established, we now turn to its most critical theoretical challenge: aliasing. This problem asks you to determine if aliasing will occur in a given scenario, prompting a direct application of the Nyquist criterion for rate reduction. By analyzing the interplay between a signal's bandwidth, the filter's cutoff frequency, and the decimation factor $M$, you will see firsthand why anti-aliasing filters are not just helpful, but essential [@problem_id:1710505].", "problem": "A discrete-time signal $x[n]$ has a Fourier transform $X(\\mathrm{e}^{\\mathrm{j}\\omega})$ that is non-zero only in the frequency range $|\\omega| \\le \\frac{2\\pi}{3}$. This signal is processed using a two-stage system. First, it is passed through an ideal low-pass filter with a cutoff frequency of $\\omega_c = \\frac{\\pi}{4}$. The output of this filter is then downsampled (decimated) by a factor of $M=3$ to produce the final output signal $y[n]$.\n\nWhich of the following statements correctly describes the output signal $y[n]$?\n\nA. Yes, the output is free from aliasing because the original signal's bandwidth is less than $\\pi$.\n\nB. No, the output suffers from aliasing because the original signal's maximum frequency, $\\omega_{max} = 2\\pi/3$, is greater than the aliasing threshold of $\\pi/M = \\pi/3$.\n\nC. Yes, the output is free from aliasing because the bandwidth of the signal after the low-pass filter is limited to $\\pi/4$, which is less than the aliasing threshold of $\\pi/M = \\pi/3$.\n\nD. No, the output suffers from aliasing because the cutoff frequency of the filter, $\\omega_c = \\pi/4$, is an arbitrary value not related to the decimation factor $M=3$.\n\nE. No, the output suffers from aliasing because any decimation by a factor greater than 2 will always cause aliasing regardless of pre-filtering.", "solution": "The given discrete-time signal has spectrum $X(\\mathrm{e}^{\\mathrm{j}\\omega})$ supported on $|\\omega| \\leq \\frac{2\\pi}{3}$. It is first passed through an ideal low-pass filter with cutoff $\\omega_{c}=\\frac{\\pi}{4}$. The ideal low-pass filter has frequency response\n$$\nH(\\mathrm{e}^{\\mathrm{j}\\omega})=\\begin{cases}\n1, & |\\omega| \\leq \\omega_{c}=\\frac{\\pi}{4},\\\\\n0, & \\text{otherwise}.\n\\end{cases}\n$$\nThus, the filtered spectrum is\n$$\nX_{f}(\\mathrm{e}^{\\mathrm{j}\\omega})=X(\\mathrm{e}^{\\mathrm{j}\\omega})H(\\mathrm{e}^{\\mathrm{j}\\omega}),\n$$\nwhich implies that $X_{f}(\\mathrm{e}^{\\mathrm{j}\\omega})=0$ for $|\\omega|>\\frac{\\pi}{4}$. Therefore, after filtering, the signal is bandlimited to $|\\omega|\\leq \\frac{\\pi}{4}$.\n\nNext, the filtered signal is decimated by $M=3$. The frequency-domain relation for decimation by $M$ is\n$$\nY(\\mathrm{e}^{\\mathrm{j}\\omega})=\\frac{1}{M}\\sum_{r=0}^{M-1}X_{f}(\\mathrm{e}^{\\mathrm{j}\\frac{\\omega+2\\pi r}{M}}).\n$$\nAliasing occurs if the shifted, compressed replicas in the sum overlap within the principal interval $|\\omega|\\leq \\pi$. A sufficient and standard condition to avoid aliasing is that the input to the decimator be bandlimited to\n$$\n|\\omega|\\leq \\frac{\\pi}{M}.\n$$\nHere, $M=3$, so the no-aliasing condition is $|\\omega|\\leq \\frac{\\pi}{3}$. Since the anti-aliasing filter enforces $|\\omega|\\leq \\frac{\\pi}{4}$ and\n$$\n\\frac{\\pi}{4}<\\frac{\\pi}{3},\n$$\nthe condition for alias-free decimation is satisfied. Therefore, the output $y[n]$ is free from aliasing due to the prefilter limiting the bandwidth below the aliasing threshold.\n\nEvaluating the options:\n- A is incorrect because the correct threshold for decimation by $M$ is $\\frac{\\pi}{M}$, not $\\pi$.\n- B is incorrect because it ignores the effect of the prefilter; aliasing is determined by the spectrum after filtering.\n- C is correct because $\\frac{\\pi}{4}<\\frac{\\pi}{3}$ ensures no aliasing after decimation by $3$.\n- D is incorrect; although $\\omega_{c}$ need not equal $\\frac{\\pi}{M}$ exactly, any $\\omega_{c}\\leq \\frac{\\pi}{M}$ avoids aliasing, and $\\frac{\\pi}{4}$ satisfies this.\n- E is incorrect; proper prefiltering can prevent aliasing for any integer $M$.\n\nThus, the correct statement is C.", "answer": "$$\\boxed{C}$$", "id": "1710505"}, {"introduction": "Real-world signal processing chains involve many stages. This final practice explores a fundamental question of system design: does the order of operations matter? We will investigate whether decimation, a time-varying operation, commutes with convolution, a linear time-invariant (LTI) operation. By comparing the outcomes of two different signal paths, you will uncover a key principle of multirate systems and see how system architecture can profoundly impact the final result [@problem_id:1710525].", "problem": "In digital signal processing, the order of operations can critically affect the final output. This problem explores the relationship between two fundamental operations: convolution and decimation (also known as downsampling).\n\nConsider a finite-length discrete-time signal $x[n]$ defined as:\n$$\nx[n] = \\begin{cases} 1 & \\text{for } n=0, 1 \\\\ 0 & \\text{otherwise} \\end{cases}\n$$\nThe convolution of two signals $g[n]$ and $h[n]$ is denoted by $g[n] * h[n]$. The decimation of a signal $s[n]$ by an integer factor $M$ is defined as $y[n] = s[Mn]$.\n\nWe will analyze two different signal processing paths, Path A and Path B.\n\n**Path A:**\n1.  First, the signal $x[n]$ is convolved with itself to produce an intermediate signal $w_A[n] = x[n] * x[n]$.\n2.  Then, the signal $w_A[n]$ is decimated by a factor of $M=2$ to produce the final output signal $y_A[n]$.\n\n**Path B:**\n1.  First, the signal $x[n]$ is decimated by a factor of $M=2$ to produce an intermediate signal $w_B[n]$.\n2.  Then, the signal $w_B[n]$ is convolved with itself to produce the final output signal $y_B[n]$.\n\nDetermine the resulting sequences $y_A[n]$ and $y_B[n]$. The sequences are represented using sequence notation where the element at $n=0$ is underlined. For example, the sequence $s[n] = \\{ \\dots, s[-1], \\underline{s[0]}, s[1], \\dots \\}$. Which of the following options correctly identifies the pair of output sequences $(y_A[n], y_B[n])$?\n\nA. $y_A[n] = \\{\\underline{1}, 1\\}$ and $y_B[n] = \\{\\underline{1}\\}$\n\nB. $y_A[n] = \\{\\underline{1}\\}$ and $y_B[n] = \\{\\underline{1}, 1\\}$\n\nC. $y_A[n] = \\{\\underline{1}, 2, 1\\}$ and $y_B[n] = \\{\\underline{1}\\}$\n\nD. $y_A[n] = \\{\\underline{1}, 1\\}$ and $y_B[n] = \\{\\underline{1}, 1\\}$\n\nE. $y_A[n] = \\{\\underline{2}\\}$ and $y_B[n] = \\{\\underline{1}\\}$", "solution": "Given $x[n]$ with $x[n]=1$ for $n=0,1$ and $x[n]=0$ otherwise.\n\nPath A:\n1) Convolution $w_{A}[n]=x[n]*x[n]$ is defined by $w_{A}[n]=\\sum_{k=-\\infty}^{\\infty}x[k]x[n-k]$. Since $x[k]$ is nonzero only for $k\\in\\{0,1\\}$ and $x[n-k]$ is nonzero only when $n-k\\in\\{0,1\\}$, the only nonzero $n$ are $n\\in\\{0,1,2\\}$:\n- For $n=0$: $w_{A}[0]=x[0]x[0]=1$.\n- For $n=1$: $w_{A}[1]=x[0]x[1]+x[1]x[0]=1+1=2$.\n- For $n=2$: $w_{A}[2]=x[1]x[1]=1$.\nOtherwise $w_{A}[n]=0$. Thus $w_{A}[n]=\\{\\ldots,0,\\underline{1},2,1,0,\\ldots\\}$.\n2) Decimate by $M=2$: $y_{A}[n]=w_{A}[2n]$. The only nonzero samples occur when $2n\\in\\{0,2\\}$:\n- $n=0$: $y_{A}[0]=w_{A}[0]=1$.\n- $n=1$: $y_{A}[1]=w_{A}[2]=1$.\nAll other $n$ give zero. Hence $y_{A}[n]=\\{\\underline{1},1\\}$.\n\nPath B:\n1) Decimate first: $w_{B}[n]=x[2n]$. Since $x[m]$ is nonzero only for $m=0,1$, we have\n- $n=0$: $w_{B}[0]=x[0]=1$,\n- $n=1$: $w_{B}[1]=x[2]=0$,\nand all other $n$ give zero. Thus $w_{B}[n]=\\{\\ldots,0,\\underline{1},0,\\ldots\\}$.\n2) Convolution $y_{B}[n]=w_{B}[n]*w_{B}[n]=\\sum_{k=-\\infty}^{\\infty}w_{B}[k]w_{B}[n-k]$. Since $w_{B}[n]$ is $1$ only at $n=0$ and $0$ elsewhere, only $k=0$ contributes:\n- $n=0$: $y_{B}[0]=w_{B}[0]w_{B}[0]=1$.\n- $n\\neq 0$: $y_{B}[n]=0$.\nThus $y_{B}[n]=\\{\\underline{1}\\}$.\n\nTherefore, $(y_{A}[n],y_{B}[n])=\\left(\\{\\underline{1},1\\},\\{\\underline{1}\\}\\right)$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1710525"}]}