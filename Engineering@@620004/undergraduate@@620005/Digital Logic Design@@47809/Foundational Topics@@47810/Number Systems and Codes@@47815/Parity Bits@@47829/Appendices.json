{"hands_on_practices": [{"introduction": "We begin our hands-on practice by constructing the most fundamental error-detection circuit: an even parity generator. This exercise will demonstrate the direct relationship between the mathematical concept of parity and the eXclusive-OR (XOR) logic gate. By designing a circuit for a 4-bit data word, you will solidify your understanding of how to translate a Boolean expression into a minimal and efficient gate-level implementation [@problem_id:1951228].", "problem": "In digital communication systems, a parity bit is often added to a block of data to detect errors that may occur during transmission. For a system employing an \"even parity\" scheme, a parity bit `P` is generated and appended to the data word. The value of this bit is chosen such that the total count of bits with a value of '1' in the combined message (original data plus the parity bit) is an even number.\n\nYou are tasked with designing a logic circuit, known as an even parity generator, for a 4-bit data word represented by the inputs `A`, `B`, `C`, and `D`. This circuit must be implemented using only 2-input XOR gates.\n\nLet the symbol $\\oplus$ denote the logical XOR operation. Which one of the following options correctly presents both the Boolean expression for the even parity bit `P` and the minimum number of 2-input XOR gates required to construct this circuit?\n\nA. Expression: $P = A \\oplus B \\oplus C \\oplus D$; Minimum Gates: 3\n\nB. Expression: $P = A \\oplus B \\oplus C \\oplus D$; Minimum Gates: 4\n\nC. Expression: $P = \\overline{A \\oplus B \\oplus C \\oplus D}$; Minimum Gates: 3\n\nD. Expression: $P = (A+B) \\cdot (C+D)$; Minimum Gates: 3\n\nE. Expression: $P = A \\cdot B \\cdot C \\cdot D$; Minimum Gates: 3", "solution": "An even parity scheme requires the total number of ones in the data plus the parity bit to be even. Using modulo-2 arithmetic, the parity of a set of bits equals their XOR. Let the data word be the bits $A$, $B$, $C$, and $D$.\n\nDefine $S = A \\oplus B \\oplus C \\oplus D$. The total parity condition for even parity is:\n$$\nA \\oplus B \\oplus C \\oplus D \\oplus P = 0.\n$$\nThis is equivalently:\n$$\nS \\oplus P = 0.\n$$\nUsing the XOR property $x \\oplus y = 0 \\iff y = x$ and $x \\oplus x = 0$, it follows that:\n$$\nP = S = A \\oplus B \\oplus C \\oplus D.\n$$\n\nTo implement this with only 2-input XOR gates, use associativity of XOR:\n$$\nP = (((A \\oplus B) \\oplus C) \\oplus D),\n$$\nwhich can be realized with three 2-input XOR gates as follows: first compute $X_{1} = A \\oplus B$ (one gate), then $X_{2} = X_{1} \\oplus C$ (second gate), and finally $P = X_{2} \\oplus D$ (third gate).\n\nMinimality: any circuit computing the XOR of $n$ inputs using only 2-input XOR gates requires at least $n-1$ gates, since each gate reduces the count of independent signals by at most one, or equivalently, a binary tree combining $n$ leaves has $n-1$ internal nodes. For $n=4$, the minimum is $3$, which is achieved above.\n\nTherefore, the correct expression and minimum gate count are $P = A \\oplus B \\oplus C \\oplus D$ with $3$ gates, corresponding to option A.", "answer": "$$\\boxed{A}$$", "id": "1951228"}, {"introduction": "Building on the concept of even parity, we now explore its counterpart: odd parity. This practice requires deriving the Boolean expression for an odd parity bit, $P$, which ensures the total count of '1's in a transmitted message is odd. You will discover that the function for odd parity is closely related to the even parity function, reinforcing your understanding of XOR/XNOR logic and its application in data integrity [@problem_id:1951506].", "problem": "A digital system processes a 4-bit data word, represented by the input variables $A, B, C, D$. To ensure data integrity, an odd parity generator circuit is designed to produce a single parity bit, $P$. The value of the parity bit $P$ is chosen such that the total number of '1's in the complete 5-bit word, which is formed by concatenating the parity bit and the data word as $PABCD$, is always an odd number.\n\nYour task is to determine the most simplified Boolean expression for the parity bit $P$ as a function of the input data bits $A, B, C,$ and $D$. The exclusive-OR operation is denoted by $\\oplus$.\n\nWhich of the following options represents the correct simplified expression for $P$?\n\nA. $P = A \\oplus B \\oplus C \\oplus D$\n\nB. $P = \\overline{A \\oplus B \\oplus C \\oplus D}$\n\nC. $P = \\overline{A}\\overline{B}\\overline{C}\\overline{D} + ABCD$\n\nD. The expression cannot be simplified and is represented by a Sum-of-Products (SOP) with eight 4-literal terms.\n\nE. $P = (\\overline{A}+\\overline{B})(\\overline{C}+\\overline{D}) + (A+B)(C+D)$", "solution": "Goal: choose $P$ so that the total number of $1$'s in the $5$-bit word is odd. In Boolean algebra, the parity (odd/even count of $1$'s) of bits equals their exclusive-OR. Therefore, the condition “odd number of $1$’s in $PABCD$” is equivalent to\n$$\nP \\oplus A \\oplus B \\oplus C \\oplus D = 1.\n$$\nTo solve for $P$, XOR both sides with $A \\oplus B \\oplus C \\oplus D$ and use associativity, commutativity, and $X \\oplus X = 0$, $X \\oplus 0 = X$:\n$$\n(P \\oplus A \\oplus B \\oplus C \\oplus D) \\oplus (A \\oplus B \\oplus C \\oplus D) = 1 \\oplus (A \\oplus B \\oplus C \\oplus D),\n$$\n$$\nP \\oplus 0 = 1 \\oplus (A \\oplus B \\oplus C \\oplus D),\n$$\n$$\nP = 1 \\oplus (A \\oplus B \\oplus C \\oplus D).\n$$\nUsing the identity $1 \\oplus X = \\overline{X}$ for any Boolean expression $X$, we obtain\n$$\nP = \\overline{A \\oplus B \\oplus C \\oplus D}.\n$$\nThis matches option B. (Note: choosing $P = A \\oplus B \\oplus C \\oplus D$ would enforce even parity because then $P \\oplus A \\oplus B \\oplus C \\oplus D = 0$.)", "answer": "$$\\boxed{B}$$", "id": "1951506"}, {"introduction": "A circuit is only useful if it works correctly, making fault diagnosis a critical skill for any digital designer. This final practice moves from design to analysis, presenting a scenario where a parity generator is malfunctioning. By comparing the observed outputs with the expected behavior, you will use logical deduction to pinpoint the exact single stuck-at fault within the circuit, bridging the gap between theoretical knowledge and practical troubleshooting [@problem_id:1951518].", "problem": "A simple data integrity unit uses a 3-bit even parity generator to create a parity bit for a 3-bit data word. The three input data bits are denoted as $A$, $B$, and $C$. The generated even parity bit is denoted as $P$. The circuit is constructed using two 2-input eXclusive-OR (XOR) gates, labeled G1 and G2. The inputs to gate G1 are $A$ and $B$. The output of gate G1 is then used as one of the inputs to gate G2, along with the data bit $C$. The output of gate G2 is the final parity bit $P$.\n\nA technician is performing a functional test on the circuit and records the following two observations:\n1. For the input data word $(A, B, C) = (0, 0, 0)$, the circuit produces the output $P=0$.\n2. For the input data word $(A, B, C) = (1, 0, 1)$, the circuit produces the output $P=1$.\n\nAssuming there is exactly one fault in the circuit, and the fault is limited to a single gate's output being permanently \"stuck-at-0\" (always 0) or \"stuck-at-1\" (always 1), which of the following options correctly identifies the fault?\n\nA. The output of gate G1 is stuck-at-0.\n\nB. The output of gate G1 is stuck-at-1.\n\nC. The output of gate G2 is stuck-at-0.\n\nD. The output of gate G2 is stuck-at-1.\n\nE. The circuit is functioning correctly and has no faults.", "solution": "Let the output of gate G1 be denoted by $X$. By construction, with no fault the gates implement\n$$\nX=A \\oplus B,\\quad P=X \\oplus C=(A \\oplus B) \\oplus C=A \\oplus B \\oplus C,\n$$\nusing associativity and commutativity of $\\oplus$.\n\nFirst, compute the fault-free expected outputs for the two test patterns:\n- For $(A,B,C)=(0,0,0)$,\n$$\nP_{\\text{good}}=0 \\oplus 0 \\oplus 0=0.\n$$\n- For $(A,B,C)=(1,0,1)$,\n$$\nP_{\\text{good}}=1 \\oplus 0 \\oplus 1=(1 \\oplus 0) \\oplus 1=1 \\oplus 1=0.\n$$\nThe observations are $P=0$ for $(0,0,0)$ and $P=1$ for $(1,0,1)$. The first matches the fault-free value; the second does not. Assume exactly one stuck-at fault at a single gate output. Consider each possibility.\n\n1) G1 output stuck-at-0: $X=0$ for all inputs, so\n$$\nP= X \\oplus C=0 \\oplus C=C.\n$$\nEvaluate the two patterns:\n$$\n(A,B,C)=(0,0,0)\\Rightarrow P=0,\\qquad (1,0,1)\\Rightarrow P=1,\n$$\nwhich matches both observations.\n\n2) G1 output stuck-at-1: $X=1$ for all inputs, so\n$$\nP= X \\oplus C=1 \\oplus C=\\overline{C}.\n$$\nThen $(0,0,0)\\Rightarrow P=1$, contradicting the first observation $P=0$.\n\n3) G2 output stuck-at-0: $P=0$ for all inputs, so $(1,0,1)\\Rightarrow P=0$, contradicting the second observation $P=1$.\n\n4) G2 output stuck-at-1: $P=1$ for all inputs, so $(0,0,0)\\Rightarrow P=1$, contradicting the first observation $P=0$.\n\n5) No fault: For $(1,0,1)$ the good circuit gives $P=0$, contradicting the second observation $P=1$.\n\nTherefore, the only single stuck-at fault consistent with both observations is that the output of gate G1 is stuck-at-0.", "answer": "$$\\boxed{A}$$", "id": "1951518"}]}