{"hands_on_practices": [{"introduction": "The first step in mastering any number system is learning to translate values to and from a familiar base, such as our everyday decimal system. This exercise [@problem_id:1941891] provides practice in this essential skill by framing it within a realistic context: interpreting a firmware build number from a digital system's memory. Successfully converting a decimal value into its hexadecimal representation will solidify your understanding of base-16 mechanics and common procedures like zero-padding.", "problem": "A legacy embedded system stores its firmware build number as a 16-bit unsigned integer. For a debugging log, this number must be displayed in its hexadecimal representation. The current build number in the system is stored as the decimal value 2024.\n\nConvert the decimal number 2024 into its 16-bit hexadecimal equivalent. Provide the value as a 4-character hexadecimal string, using uppercase letters (A-F) and padding with leading zeros if necessary.", "solution": "We must convert the given decimal value to hexadecimal and express it as a 16-bit (4-hex-character) uppercase string.\n\nLet the decimal number be $N=2024$. To convert $N$ to base $16$, use repeated division by $16$ and collect remainders:\n$$N=16\\cdot q_{0}+r_{0},\\quad 0\\leq r_{0}<16.$$\nCompute:\n$$2024=16\\cdot 126+8\\implies q_{0}=126,\\; r_{0}=8.$$\nNext,\n$$126=16\\cdot 7+14\\implies q_{1}=7,\\; r_{1}=14.$$\nNext,\n$$7=16\\cdot 0+7\\implies q_{2}=0,\\; r_{2}=7.$$\nThe hexadecimal digits from least significant to most are $r_{0},r_{1},r_{2}$, i.e., $8,14,7$. Using the hexadecimal mapping $10\\mapsto \\text{A},\\;11\\mapsto \\text{B},\\;12\\mapsto \\text{C},\\;13\\mapsto \\text{D},\\;14\\mapsto \\text{E},\\;15\\mapsto \\text{F}$, we get digits $8,\\text{E},7$, hence the hexadecimal representation is $7\\text{E}8$.\n\nA $16$-bit unsigned integer is represented by $4$ hexadecimal digits since $16^{4}=65536$, and any value in $[0,65535]$ fits in $4$ hex characters. Since $2024<16^{4}$, we pad to $4$ characters with a leading zero:\n$$07\\text{E}8.$$\n\nVerification by reconversion:\n$$7\\text{E}8_{16}=7\\cdot 16^{2}+14\\cdot 16+8=7\\cdot 256+224+8=1792+232=2024,$$\nwhich matches the original decimal number.\n\nTherefore, the required 4-character uppercase hexadecimal string is $07\\text{E}8$.", "answer": "$$\\boxed{07E8}$$", "id": "1941891"}, {"introduction": "While hexadecimal is a convenient shorthand, its true power in digital design comes from its direct mapping to binary. This practice [@problem_id:1941875] explores this crucial relationship, asking you to look inside a hexadecimal value to analyze its binary structure by calculating its 'population count' (or Hamming weight). This skill is not purely academic; it is a fundamental operation in cryptography, data compression, and error-correction codes, where the number of set bits has direct implications.", "problem": "In a particular 16-bit digital system, a register holds a value that is represented by the hexadecimal number $B3C7_{16}$. A common operation in such systems, often used in cryptography and error correction codes, is to determine the 'population count' (also known as the Hamming weight) of the binary representation of a number. This operation counts the total number of bits that are set to '1'. Calculate the population count for the value stored in the register.", "solution": "The population count (Hamming weight) of a binary word is the total number of bits equal to $1$ in its binary representation. For a hexadecimal number, each hex digit corresponds to a fixed 4-bit binary nibble, so the population count is the sum of the ones in the 4-bit representations of each hex digit.\n\nThe given 16-bit value is $B3C7_{16}$, which consists of the hex digits $B, 3, C, 7$. Convert each to 4-bit binary:\n$$B_{16} = 1011_{2}, \\quad 3_{16} = 0011_{2}, \\quad C_{16} = 1100_{2}, \\quad 7_{16} = 0111_{2}.$$\n\nCount the ones in each nibble and sum:\n$$\\text{popcount}(B3C7_{16}) = (3) + (2) + (2) + (3) = 10.$$\n\nTherefore, the population count of the 16-bit value $B3C7_{16}$ is $10$.", "answer": "$$\\boxed{10}$$", "id": "1941875"}, {"introduction": "This advanced exercise [@problem_id:1941892] applies your understanding of hexadecimal representation and bitwise logic to a dynamic system: a Pseudo-Random State Generator (PRSG). You will analyze the behavior of a 16-bit register that evolves according to a transformation rule involving circular shifts ($S_{i+1} = (S_i \\lll k) \\oplus C$). Instead of performing a single calculation, your task is to determine the periodic nature of the generated sequence, a challenge that bridges numerical conversion with the principles of state machine analysis and abstract algebra.", "problem": "A 16-bit Pseudo-Random State Generator (PRSG) is a critical component in a simulation environment for testing communication protocols. The state of the generator at step $i$ is represented by a 16-bit register, $S_i$. The generator evolves from one state to the next according to the transformation rule:\n$$S_{i+1} = (S_i \\lll k) \\oplus C$$\nwhere $S_i$ is the current state expressed as a 16-bit binary number, $k$ is a positive integer representing the number of bit positions for a circular left shift, $\\lll$ denotes the circular left shift operation, $\\oplus$ represents the bitwise XOR operation, and $C$ is a constant 16-bit key. A circular left shift operation `x  k` on an $n$-bit number `x` moves the most significant `k` bits to the positions of the least significant `k` bits, and all other bits are shifted `k` positions to the left.\n\nFor a specific implementation of this PRSG, the parameters are set as follows:\n- The state register size is 16 bits.\n- The shift amount is $k = 5$.\n- The constant key is $C = 1234_{16}$.\n- The initial state of the generator is $S_0 = 5678_{16}$.\n\nThe sequence of states generated is $S_0, S_1, S_2, \\ldots$. Since the number of states is finite, this sequence must eventually become periodic. Determine the length of the cycle that the state sequence enters. Provide your answer as a single integer.", "solution": "Define the map $f:\\{0,1\\}^{16}\\to\\{0,1\\}^{16}$ by\n$$\nf(S)=L S \\oplus C,\n$$\nwhere $L$ is the linear operator corresponding to a circular left shift by $k=5$ on $16$ bits, and $C$ is the constant $16$-bit vector with hexadecimal value $1234_{16}$. Then $S_{i+1}=f(S_{i})$.\n\nFirst, observe that $f$ is a bijection. Indeed, given $T=f(S)$ we have $L S=T\\oplus C$, so $S=L^{-1}(T\\oplus C)$, where $L^{-1}$ is the circular right shift by $5$. Hence every orbit under $f$ is purely cyclic.\n\nFor any $n\\geq 1$, the $n$-fold iterate satisfies the standard affine-iteration formula\n$$\nf^{n}(S)=L^{n} S \\oplus D_{n},\\quad D_{n}=\\bigoplus_{j=0}^{n-1} L^{j} C.\n$$\n\nNext, determine the order of $L$. Since $L$ is a rotation by $5$ on $16$ positions, its order is the smallest $t\\geq 1$ with $5t\\equiv 0 \\pmod{16}$, i.e.\n$$\n\\operatorname{ord}(L)=\\frac{16}{\\gcd(16,5)}=16.\n$$\nThus $L^{16}=I$.\n\nEvaluate $D_{16}$. Let $C$ have bits $b_{0},\\dots,b_{15}$. The $r$-th bit of $L^{j}C$ is $b_{r-5j}$ (indices modulo $16$). Because $\\gcd(5,16)=1$, as $j$ runs from $0$ to $15$, the indices $r-5j$ run through all residues modulo $16$ exactly once. Therefore, for each position $r$,\n$$\n\\left(D_{16}\\right)_{r}=\\bigoplus_{j=0}^{15} \\left(L^{j}C\\right)_{r}=\\bigoplus_{k=0}^{15} b_{k}=s,\n$$\nwhere $s$ is the parity (bitwise XOR sum) of all $16$ bits of $C$. Hence\n$$\nD_{16}=s\\,J,\n$$\nwhere $J$ is the $16$-bit all-ones vector.\n\nCompute $s$ for $C=1234_{16}$. Write $C$ by nibbles: $1,2,3,4$. The numbers of ones in these nibbles are $1,1,2,1$, respectively, summing to $5$, which is odd. Therefore $s=1$, and thus\n$$\nD_{16}=J.\n$$\nConsequently,\n$$\nf^{16}(S)=L^{16} S \\oplus D_{16}=S \\oplus J.\n$$\n\nIt follows that\n$$\nf^{32}(S)=f^{16}(f^{16}(S))=(S \\oplus J)\\oplus J=S,\n$$\nso $f^{32}$ is the identity map and every cycle length divides $32$.\n\nWe now exclude any smaller period. If there were $n\\in\\{1,2,4,8,16\\}$ with $f^{n}(S)=S$ for some $S$, then $f^{16}(S)=(f^{n})^{16/n}(S)=S$, contradicting $f^{16}(S)=S\\oplus J\\neq S$. Hence no period dividing $16$ can occur. Since the order of $f$ divides $32$ and the only remaining divisor is $32$, every orbit (in particular, the one starting at $S_{0}=5678_{16}$) has period $32$.\n\nTherefore, the cycle length entered by the state sequence is $32$.", "answer": "$$\\boxed{32}$$", "id": "1941892"}]}