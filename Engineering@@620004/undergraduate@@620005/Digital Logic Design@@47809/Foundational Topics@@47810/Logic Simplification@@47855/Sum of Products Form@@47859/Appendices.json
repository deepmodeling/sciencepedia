{"hands_on_practices": [{"introduction": "The first step in digital design often involves translating a set of operational requirements into a precise mathematical expression. This practice provides a scenario where you'll build a canonical Sum of Products (SOP) expression directly from a device's specifications. By identifying each condition that activates the system, you will learn to formulate the corresponding minterms, which are the fundamental building blocks of the canonical SOP form. [@problem_id:1964548]", "problem": "A digital logic circuit is designed to control the air conditioning unit (`A`) for a high-precision environmental chamber. The behavior of the unit depends on three input signals: a temperature status signal `T`, a humidity status signal `H`, and a window sensor signal `W`. For each signal, a logic level of `1` represents a 'high' or 'true' state, and `0` represents a 'low' or 'false' state.\n\nThe specific conditions for the signals are as follows:\n- `T=1` if the temperature is above 25°C, and `T=0` otherwise.\n- `H=1` if the relative humidity is above 60%, and `H=0` otherwise.\n- `W=1` if the chamber's access window is open, and `W=0` if it is closed.\n\nThe air conditioning unit activates (`A=1`) only under the following specific circumstances, designed to maintain a stable environment while conserving energy:\n1.  **Dehumidification Mode:** The unit activates if the temperature is not above the threshold (`T=0`), but the humidity is high (`H=1`), provided the window is closed (`W=0`).\n2.  **Standard Cooling Mode:** The unit activates if the temperature is high (`T=1`), but the humidity is not (`H=0`), provided the window is closed (`W=0`).\n3.  **Intense Cooling and Dehumidification Mode:** The unit activates if both temperature and humidity are high (`T=1` and `H=1`), provided the window is closed (`W=0`).\n\nFor all other combinations of input signals, the air conditioning unit remains inactive (`A=0`).\n\nYour task is to derive the canonical Sum of Products (SOP) expression for the output signal `A` in terms of the input signals `T`, `H`, and `W`. In your expression, use an overbar (e.g., $\\bar{T}$) to denote the complement (NOT operator), and use the `+` symbol for the logical OR operation.", "solution": "We are given three Boolean inputs $T$, $H$, and $W$, with $A$ the output. The unit activates ($A=1$) only under combinations that all require the window to be closed, i.e., $W=0$. We are asked for the canonical Sum of Products (SOP), which is the sum of minterms: each product term must include all input literals (each variable in either complemented or uncomplemented form) corresponding exactly to the activating input combinations.\n\nTranslate each activating condition into its corresponding minterm:\n- Dehumidification mode: $T=0$, $H=1$, $W=0$ gives the minterm $\\bar{T}H\\bar{W}$.\n- Standard cooling mode: $T=1$, $H=0$, $W=0$ gives the minterm $T\\bar{H}\\bar{W}$.\n- Intense cooling and dehumidification mode: $T=1$, $H=1$, $W=0$ gives the minterm $TH\\bar{W}$.\n\nTherefore, the canonical SOP expression is the sum of these minterms:\n$$\nA \\;=\\; \\bar{T}H\\bar{W} \\;+\\; T\\bar{H}\\bar{W} \\;+\\; TH\\bar{W}.\n$$\n\nAs a check (not required for the canonical form), these terms factor as\n$$\nA \\;=\\; \\bar{W}\\bigl(\\bar{T}H + T\\bar{H} + TH\\bigr) \\;=\\; \\bar{W}\\bigl(T + H\\bigr),\n$$\nconfirming equivalence, while the canonical SOP remains the sum of the three minterms above.", "answer": "$$\\boxed{\\bar{T}H\\bar{W} + T\\bar{H}\\bar{W} + TH\\bar{W}}$$", "id": "1964548"}, {"introduction": "While simplified Boolean expressions are efficient for implementation, the canonical Sum of Products form is essential for a complete understanding of a function's behavior. This exercise will guide you through the process of expanding a condensed SOP expression into its full canonical representation, which lists every input combination that results in a true output. Mastering this conversion, either through algebraic manipulation or by using a truth table, solidifies your understanding of minterms and the fundamental structure of Boolean functions. [@problem_id:1964608]", "problem": "In digital logic design, a Boolean function can be represented in various forms. A common compact representation is a simplified Sum of Products (SOP) expression. Consider a three-variable Boolean function $F(X, Y, Z)$, where the variables are listed in order of most to least significant. The function is given by the following simplified SOP expression:\n\n$$F(X, Y, Z) = X\\bar{Y} + YZ$$\n\nwhere $\\bar{A}$ denotes the logical NOT of a variable $A$.\n\nYour task is to determine the canonical Sum of Products expression for this function. The canonical SOP form consists of the sum of all unique minterms for which the function's output is `1`. A minterm is a product term that includes every variable in the function, either in its complemented or uncomplemented form. Express the final result as a sum of these minterm products.", "solution": "The problem asks for the canonical Sum of Products (SOP) form of the Boolean function $F(X, Y, Z) = X\\bar{Y} + YZ$. The canonical SOP form is the sum of all minterms that make the function true (evaluate to `1`). We can find these minterms by constructing a truth table for the function.\n\nA truth table lists the output of the function for all possible combinations of the input variables. For three variables ($X, Y, Z$), there are $2^3 = 8$ possible input combinations. We will evaluate the given expression for each combination.\n\nFirst, let's create the truth table with columns for the inputs $X, Y, Z$, the intermediate terms of the expression ($X\\bar{Y}$ and $YZ$), and the final output $F$. The operator '+' represents the logical OR operation, and the implicit multiplication represents the logical AND operation. The function $F$ is `1` if either $X\\bar{Y}=1$ OR $YZ=1$.\n\nThe term $X\\bar{Y}$ is `1` only when $X=1$ and $Y=0$.\nThe term $YZ$ is `1` only when $Y=1$ and $Z=1$.\n\nLet's build the truth table row by row:\n\n| Minterm Index | X | Y | Z | $\\bar{Y}$ | $X\\bar{Y}$ (Term 1) | $YZ$ (Term 2) | $F = X\\bar{Y} + YZ$ |\n|:-------------:|:-:|:-:|:-:|:---------:|:------------------:|:-------------:|:--------------------:|\n| 0             | 0 | 0 | 0 | 1         | 0                  | 0             | 0                    |\n| 1             | 0 | 0 | 1 | 1         | 0                  | 0             | 0                    |\n| 2             | 0 | 1 | 0 | 0         | 0                  | 0             | 0                    |\n| 3             | 0 | 1 | 1 | 0         | 0                  | 1             | 1                    |\n| 4             | 1 | 0 | 0 | 1         | 1                  | 0             | 1                    |\n| 5             | 1 | 0 | 1 | 1         | 1                  | 0             | 1                    |\n| 6             | 1 | 1 | 0 | 0         | 0                  | 0             | 0                    |\n| 7             | 1 | 1 | 1 | 0         | 0                  | 1             | 1                    |\n\nNow, we identify the rows where the function $F$ is equal to `1`. These occur for the input combinations corresponding to minterm indices 3, 4, 5, and 7.\n\nNext, we write the minterm product expression for each of these rows. A minterm is a product (AND) of all variables, where a variable appears in its uncomplemented form if its value is `1`, and in its complemented form if its value is `0`.\n\n-   **Minterm 3:** (X=0, Y=1, Z=1) corresponds to the product term $\\bar{X}YZ$.\n-   **Minterm 4:** (X=1, Y=0, Z=0) corresponds to the product term $X\\bar{Y}\\bar{Z}$.\n-   **Minterm 5:** (X=1, Y=0, Z=1) corresponds to the product term $X\\bar{Y}Z$.\n-   **Minterm 7:** (X=1, Y=1, Z=1) corresponds to the product term $XYZ$.\n\nThe canonical Sum of Products expression is the logical sum (OR) of all these minterms.\n\n$$F(X, Y, Z) = \\bar{X}YZ + X\\bar{Y}\\bar{Z} + X\\bar{Y}Z + XYZ$$\n\nThis is the final expression, representing the function as a sum of its fundamental true conditions.\n\nAlternatively, this can be solved algebraically. We expand each term to include all variables.\nThe first term is $X\\bar{Y}$. It is missing the variable $Z$. We can multiply it by $(Z+\\bar{Z})$, which is always `1`.\n$$X\\bar{Y} = X\\bar{Y}(Z+\\bar{Z}) = X\\bar{Y}Z + X\\bar{Y}\\bar{Z}$$\nThe second term is $YZ$. It is missing the variable $X$. We can multiply it by $(X+\\bar{X})$, which is always `1`.\n$$YZ = YZ(X+\\bar{X}) = XYZ + \\bar{X}YZ$$\nNow we sum all the resulting product terms:\n$$F = (X\\bar{Y}Z + X\\bar{Y}\\bar{Z}) + (XYZ + \\bar{X}YZ)$$\nRearranging the terms in order of their minterm indices gives:\n$$F = \\bar{X}YZ + X\\bar{Y}\\bar{Z} + X\\bar{Y}Z + XYZ$$\nBoth methods yield the same result.", "answer": "$$\\boxed{\\bar{X}YZ + X\\bar{Y}\\bar{Z} + X\\bar{Y}Z + XYZ}$$", "id": "1964608"}, {"introduction": "Digital logic design extends beyond simple AND/OR gates to more complex components that can model sophisticated behaviors. This problem introduces a weighted threshold gate, a concept fundamental to neural networks, challenging you to derive its logic function from a mathematical rule. You will practice translating a numerical condition—a weighted sum exceeding a threshold—into a minimal Sum of Products (SOP) expression, a key skill for designing efficient and cost-effective digital circuits. [@problem_id:1964553]", "problem": "A specialized 4-input digital logic gate, known as a weighted threshold gate, is designed to model a simple neuron. The gate has four binary inputs, denoted as $W_1, W_2, W_3,$ and $W_4$. The gate's output, $F$, is logic `1` if and only if the weighted sum of its inputs is greater than or equal to a specific threshold. For this particular gate, the weighted sum is defined as $S = 2W_1 + W_2 + W_3 + W_4$, and the threshold value is 3.\n\nDetermine the minimal Sum of Products (SOP) expression for the output function $F(W_1, W_2, W_3, W_4)$. The Sum of Products is a standard representation of a logical expression where product terms (inputs connected by AND operations) are connected by sum operations (OR operations). The answer should be written using standard Boolean notation where juxtaposition represents AND (e.g., $XY$ for $X$ AND $Y$) and the `+` symbol represents OR.", "solution": "We are given a 4-input weighted threshold gate with inputs $W_{1},W_{2},W_{3},W_{4}$ and weighted sum\n$$\nS = 2W_{1} + W_{2} + W_{3} + W_{4},\n$$\nand the output $F$ satisfies $F=`1` if and only if $S \\ge 3$, otherwise $F=`0`. Each $W_{i} \\in \\{0,1\\}$.\n\nFirst, perform a case analysis on $W_{1}$ because it has weight $2$.\n\n1) If $W_{1}=1$, then $S = 2 + (W_{2}+W_{3}+W_{4})$. The condition $S \\ge 3$ is equivalent to\n$$\nW_{2} + W_{3} + W_{4} \\ge 1,\n$$\nwhich means at least one of $W_{2},W_{3},W_{4}$ is `1`. In Boolean algebra, this contributes the term\n$$\nW_{1}(W_{2} + W_{3} + W_{4}) = W_{1}W_{2} + W_{1}W_{3} + W_{1}W_{4}.\n$$\n\n2) If $W_{1}=0$, then $S = W_{2} + W_{3} + W_{4}$. The condition $S \\ge 3$ requires\n$$\nW_{2} = W_{3} = W_{4} = 1,\n$$\nwhich contributes the product term\n$$\n\\overline{W_{1}}\\,W_{2}W_{3}W_{4}.\n$$\n\nCombining these cases yields an SOP expression:\n$$\nF = W_{1}W_{2} + W_{1}W_{3} + W_{1}W_{4} + \\overline{W_{1}}\\,W_{2}W_{3}W_{4}.\n$$\nTo find the minimal SOP, we must identify the prime implicants. The first three terms ($W_{1}W_{2}, W_{1}W_{3}, W_{1}W_{4}$) are prime implicants. The term $\\overline{W_{1}}\\,W_{2}W_{3}W_{4}$ is an implicant covering the input case (0,1,1,1), but it is not prime. We can combine it with the minterm for (1,1,1,1), which is covered by the first three terms, to form the larger implicant $W_{2}W_{3}W_{4}$. This new implicant only covers cases where $F=1$ (inputs (0,1,1,1) and (1,1,1,1)), so it is a valid prime implicant. Replacing $\\overline{W_{1}}\\,W_{2}W_{3}W_{4}$ with the prime implicant $W_{2}W_{3}W_{4}$ gives the expression:\n$$\nF = W_{1}W_{2} + W_{1}W_{3} + W_{1}W_{4} + W_{2}W_{3}W_{4}.\n$$\n\nTo justify minimality, we confirm that all four terms in this expression are essential prime implicants.\n- $W_{1}W_{2}\\overline{W_{3}}\\overline{W_{4}}$ (input 1100) is only covered by $W_{1}W_{2}$.\n- $W_{1}\\overline{W_{2}}W_{3}\\overline{W_{4}}$ (input 1010) is only covered by $W_{1}W_{3}$.\n- $W_{1}\\overline{W_{2}}\\overline{W_{3}}W_{4}$ (input 1001) is only covered by $W_{1}W_{4}$.\n- $\\overline{W_{1}}W_{2}W_{3}W_{4}$ (input 0111) is only covered by $W_{2}W_{3}W_{4}$.\n\nSince each prime implicant covers at least one minterm not covered by any other, all four are essential. Hence no further reduction is possible, and the minimal SOP is\n$$\nF = W_{1}W_{2} + W_{1}W_{3} + W_{1}W_{4} + W_{2}W_{3}W_{4}.\n$$", "answer": "$$\\boxed{W_{1}W_{2}+W_{1}W_{3}+W_{1}W_{4}+W_{2}W_{3}W_{4}}$$", "id": "1964553"}]}