{"hands_on_practices": [{"introduction": "To truly understand a digital circuit, we often need to identify the exact input combinations that cause its output to be 'true' or 1. This practice focuses on that core skill: converting a given Boolean expression into its canonical sum-of-minterms (SOP) form. By applying algebraic rules like De Morgan's laws and expanding terms, you will derive a complete list of minterms, which provides a direct and unambiguous description of the function's behavior [@problem_id:1384415].", "problem": "Consider a Boolean function $F$ of three variables, $A, B,$ and $C$. The function is defined by the expression $F(A,B,C) = \\overline{(A+B)} + BC$, where the plus sign ($+$) denotes the logical OR operation, juxtaposition denotes the logical AND operation, and the overline denotes the logical NOT (complement) operation.\n\nA minterm is a product (AND) term that contains all variables of the function, either in their normal form (e.g., $A$) or complemented form (e.g., $\\overline{A}$). The index of a minterm $m_i$ is the decimal value of the binary number formed by the variables, assuming the order $(A,B,C)$ where $A$ is the most significant bit. For example, the minterm $\\overline{A}B\\overline{C}$ corresponds to the binary number $010$, which has a decimal index of 2.\n\nIdentify the complete set of minterm indices for which the function $F$ evaluates to 1. Select the correct option from the choices below.\n\nA. $\\{0, 3, 7\\}$\n\nB. $\\{1, 3\\}$\n\nC. $\\{0, 1, 3, 7\\}$\n\nD. $\\{2, 3, 7\\}$\n\nE. $\\{2, 4, 5, 6\\}$", "solution": "The goal is to find all combinations of the Boolean variables $A, B, C$ for which the function $F(A,B,C)$ evaluates to 1. This is equivalent to finding the canonical Sum-of-Products (SOP) form of the function, where each product term is a minterm.\n\nThe given function is:\n$$F(A,B,C) = \\overline{(A+B)} + BC$$\nFor algebraic manipulation, we will use the prime notation (') to represent the logical NOT (complement) operation, which is equivalent to the overline notation.\n$$F(A,B,C) = (A+B)' + BC$$\n\nFirst, we simplify the expression using Boolean algebra laws. We apply De Morgan's Law to the term $(A+B)'$. De Morgan's Law states that $(X+Y)' = X'Y'$.\nApplying this, we get:\n$$(A+B)' = A'B'$$\nSubstituting this back into the function's expression:\n$$F(A,B,C) = A'B' + BC$$\n\nThis expression is in a simplified sum-of-products form, but not the canonical form, because the terms $A'B'$ and $BC$ are not minterms (they do not contain all three variables $A, B, C$). To convert it to the canonical SOP form, we must expand each term to include the missing variables. We use the Boolean identity $X = X \\cdot 1 = X(Y+Y')$.\n\nLet's expand the first term, $A'B'$. It is missing the variable $C$.\n$$A'B' = A'B' \\cdot 1 = A'B'(C+C') = A'B'C + A'B'C'$$\n\nNext, let's expand the second term, $BC$. It is missing the variable $A$.\n$$BC = BC \\cdot 1 = BC(A+A') = ABC + A'BC$$\n\nNow, we combine the expanded terms to form the full expression for $F$. The function $F$ is the logical OR of all these resulting product terms.\n$$F(A,B,C) = (A'B'C + A'B'C') + (ABC + A'BC)$$\nWe list all the unique terms to get the canonical SOP form:\n$$F(A,B,C) = A'B'C' + A'B'C + A'BC + ABC$$\n\nEach term in this expression is a minterm. We now identify the index for each minterm based on the convention that an uncomplemented variable is 1 and a complemented variable (') is 0, with the variable order being $(A, B, C)$.\n\n1.  Term $A'B'C'$ corresponds to the binary value $000$, which is decimal 0. This is minterm $m_0$.\n2.  Term $A'B'C$ corresponds to the binary value $001$, which is decimal 1. This is minterm $m_1$.\n3.  Term $A'BC$ corresponds to the binary value $011$, which is decimal 3. This is minterm $m_3$.\n4.  Term $ABC$ corresponds to the binary value $111$, which is decimal 7. This is minterm $m_7$.\n\nThus, the function $F$ evaluates to 1 for the minterms $m_0, m_1, m_3,$ and $m_7$. The set of minterm indices is $\\{0, 1, 3, 7\\}$.\n\nComparing this result with the given options:\nA. $\\{0, 3, 7\\}$ - Incorrect.\nB. $\\{1, 3\\}$ - Incorrect.\nC. $\\{0, 1, 3, 7\\}$ - Correct.\nD. $\\{2, 3, 7\\}$ - Incorrect. This would result from an error such as simplifying $(A+B)'$ to $A'B$.\nE. $\\{2, 4, 5, 6\\}$ - Incorrect. This is the set of indices for which $F=0$, also known as the maxterm indices.\n\nTherefore, the correct choice is C.", "answer": "$$\\boxed{C}$$", "id": "1384415"}, {"introduction": "Just as it is useful to know when a function is true, it is equally important to know when it is false. The canonical product-of-maxterms (POS) form provides precisely this information, listing the input combinations that result in an output of '0'. This exercise demonstrates how to systematically convert a compact POS expression into its full canonical form by introducing missing variables, a process that mirrors the minterm expansion and is essential for designing with certain logic devices [@problem_id:1947526].", "problem": "A digital circuit is described by the Boolean function $F(A, B, C) = (A+B)(B'+C)$. To implement this circuit using a specific type of programmable logic device, it is necessary to express the function in its canonical Product-of-Sums (POS) form, also known as the maxterm canonical form. The variables are ordered as A, B, C.\n\nDetermine the canonical POS expression for the function $F(A, B, C)$.", "solution": "The goal is to convert the given Boolean function $F(A, B, C) = (A+B)(B'+C)$ into its canonical Product-of-Sums (POS) form. A canonical POS expression is a product of maxterms, where each maxterm is a sum that includes all variables in the function, either in complemented or uncomplemented form.\n\nThe given expression is already in a POS form, but it is not canonical because the sum terms do not contain all three variables (A, B, C). We can introduce the missing variables into each sum term by using the Boolean algebra identity $X + 0 = X$ and $X \\cdot X' = 0$.\n\nLet's consider the first term, $(A+B)$. The variable $C$ is missing. We can introduce it as follows:\n$$\nA+B = (A+B) + 0 = (A+B) + (C \\cdot C')\n$$\nNow, we apply the distributive law, $X + YZ = (X+Y)(X+Z)$. Let $X = A+B$, $Y = C$, and $Z = C'$.\n$$\n(A+B) + (C \\cdot C') = (A+B+C)(A+B+C')\n$$\n\nNext, let's consider the second term, $(B'+C)$. The variable $A$ is missing. We introduce it similarly:\n$$\nB'+C = (B'+C) + 0 = (B'+C) + (A \\cdot A')\n$$\nApplying the distributive law with $X = B'+C$, $Y = A$, and $Z = A'$:\n$$\n(B'+C) + (A \\cdot A') = (B'+C+A)(B'+C+A')\n$$\nTo maintain standard variable order (A, B, C), we reorder the terms within the sums:\n$$\n(A+B'+C)(A'+B'+C)\n$$\n\nNow, we substitute these expanded terms back into the original function expression for $F(A, B, C)$:\n$$\nF(A, B, C) = [(A+B+C)(A+B+C')] \\cdot [(A+B'+C)(A'+B'+C)]\n$$\nThe function is now a product of four unique maxterms. We can check for and remove any duplicate terms. In this case, all four terms are distinct.\n\nThe final canonical Product-of-Sums expression is:\n$$\nF(A, B, C) = (A+B+C)(A+B+C')(A+B'+C)(A'+B'+C)\n$$\n\nFor reference, we can identify the maxterm indices. A maxterm $M_i = (v_A+v_B+v_C)$ corresponds to the binary number $xyz$ where $v_X=X$ if the bit is 0, and $v_X=X'$ if the bit is 1.\n- $(A+B+C)$ corresponds to binary 000, so it is $M_0$.\n- $(A+B+C')$ corresponds to binary 001, so it is $M_1$.\n- $(A+B'+C)$ corresponds to binary 010, so it is $M_2$.\n- $(A'+B'+C)$ corresponds to binary 110, so it is $M_6$.\n\nSo, the function can also be written as $F(A, B, C) = \\Pi M(0, 1, 2, 6)$. The problem asks for the expression itself.", "answer": "$$\\boxed{(A+B+C)(A+B+C')(A+B'+C)(A'+B'+C)}$$", "id": "1947526"}, {"introduction": "Moving beyond single functions, digital systems are built by combining multiple logic blocks. This advanced practice explores how to manipulate functions that are already defined in their canonical forms. You will work with functions expressed in both sum-of-minterms and product-of-maxterms notation, convert between them, and use the XOR operation to synthesize a new function, showcasing how these foundational concepts are applied in more complex scenarios [@problem_id:1947531].", "problem": "Consider two Boolean functions, $F_1$ and $F_2$, both operating on three input variables $A, B, C$. The minterm indices are assigned to the variables such that $A$ is the most significant bit and $C$ is the least significant bit. The function $F_1$ is defined by its canonical sum-of-minterms (SOP) form as:\n$$ F_1(A, B, C) = \\sum m(1, 3, 5, 7) $$\nThe function $F_2$ is defined by its canonical product-of-maxterms (POS) form as:\n$$ F_2(A, B, C) = \\prod M(0, 1, 2, 3) $$\nA third function, $G(A, B, C)$, is constructed by applying the Exclusive OR (XOR) operation to the first two functions, such that $G = F_1 \\oplus F_2$.\n\nDetermine the canonical sum-of-minterms representation for the function $G$. Your answer should be the list of integer indices for the minterms of $G$, presented in ascending order.", "solution": "We have three Boolean variables $A, B, C$ with minterm indices assigned so that $A$ is the most significant bit and $C$ is the least significant bit. The function $F_{1}$ is given in canonical SOP as\n$$\nF_{1}=\\sum m(1,3,5,7),\n$$\nso $F_{1}=1$ exactly on minterm indices $\\{1,3,5,7\\}$.\n\nThe function $F_{2}$ is given in canonical POS as\n$$\nF_{2}=\\prod M(0,1,2,3).\n$$\nIn a canonical POS, listing maxterm indices means the function is $0$ at those indices and $1$ at all others. Therefore,\n$$\nF_{2}=0 \\text{ on } \\{0,1,2,3\\}, \\quad F_{2}=1 \\text{ on } \\{4,5,6,7\\}.\n$$\n\nDefine $G=F_{1}\\oplus F_{2}$. By the definition of XOR, $G=1$ exactly where $F_{1}\\neq F_{2}$. Hence the set of minterm indices where $G=1$ is the symmetric difference of the $1$-sets of $F_{1}$ and $F_{2}$:\n$$\n\\{1,3,5,7\\}\\,\\triangle\\,\\{4,5,6,7\\}=(\\{1,3,5,7,4,6\\}\\setminus\\{5,7\\})=\\{1,3,4,6\\}.\n$$\n\nEquivalently, observe that $\\sum m(1,3,5,7)$ yields $F_{1}=C$ (since all odd indices have $C=1$), and $\\prod M(0,1,2,3)$ yields $F_{2}=A$ (since indices $0$ through $3$ correspond to $A=0$ and the rest to $A=1$). Therefore $G=A\\oplus C$, which is $1$ when $(A,C)=(0,1)$ or $(1,0)$, independent of $B$. The corresponding indices are:\n- $A=0,C=1$: indices $1$ and $3$,\n- $A=1,C=0$: indices $4$ and $6$,\nconfirming $\\{1,3,4,6\\}$.\n\nThus, the canonical sum-of-minterms for $G$ is $\\sum m(1,3,4,6)$, i.e., the minterm indices in ascending order are $1,3,4,6$.", "answer": "$$\\boxed{1, 3, 4, 6}$$", "id": "1947531"}]}