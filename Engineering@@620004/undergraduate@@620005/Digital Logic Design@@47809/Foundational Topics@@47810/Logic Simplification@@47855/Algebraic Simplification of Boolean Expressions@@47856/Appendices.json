{"hands_on_practices": [{"introduction": "This first practice serves as a foundational exercise in translating a word problem into a Boolean expression and simplifying it. The process of starting with a seemingly complex set of logical conditions and boiling it down to its essence is a core skill in digital design. By methodically applying basic Boolean laws like the distributive and complement laws, you will see how a verbose specification can be reduced to a simple, elegant logical statement [@problem_id:1907816].", "problem": "In an automated industrial system, the activation of a critical process, denoted by the function $F$, depends on the status of three digital sensors: $A$, $B$, and $C$. A logic '1' (or TRUE) from a sensor indicates that its corresponding condition is met, while a logic '0' (or FALSE) indicates it is not. The control logic is designed to activate the process $F$ if at least one of the two following compound conditions is satisfied:\n\n1.  Sensor $A$ is TRUE, and simultaneously, either sensor $A$ is FALSE or both sensors $B$ and $C$ are TRUE.\n2.  Sensor $B$ is TRUE, and simultaneously, either sensor $B$ is FALSE or sensor $C$ is TRUE.\n\nLet the Boolean variables $A$, $B$, and $C$ represent the outputs of the respective sensors. Using the principles of Boolean algebra, derive the minimal sum-of-products expression for the function $F$ that represents the activation logic for the process.", "solution": "The problem describes the activation logic for a process $F$ based on the states of three sensors, represented by Boolean variables $A$, $B$, and $C$. We can translate the verbal description into a Boolean expression.\n\nFirst, let's translate the two compound conditions into mathematical form. The logical AND operation is represented by multiplication (e.g., $XY$), and the logical OR operation is represented by addition (e.g., $X+Y$). The logical NOT operation is represented by a prime (e.g., $X'$).\n\nCondition 1 is: \"Sensor $A$ is TRUE, and simultaneously, either sensor $A$ is FALSE or both sensors $B$ and $C$ are TRUE.\"\nThis translates to the Boolean expression:\n$A \\cdot (A' + (B \\cdot C))$ or simply $A(A' + BC)$.\n\nCondition 2 is: \"Sensor $B$ is TRUE, and simultaneously, either sensor $B$ is FALSE or sensor $C$ is TRUE.\"\nThis translates to the Boolean expression:\n$B \\cdot (B' + C)$ or simply $B(B' + C)$.\n\nThe process $F$ activates if at least one of these conditions is met, which corresponds to the logical OR of the two expressions.\nTherefore, the initial Boolean expression for $F$ is:\n$$F = A(A' + BC) + B(B' + C)$$\n\nOur goal is to simplify this expression to its minimal sum-of-products form. We will apply the laws of Boolean algebra step-by-step.\n\nStep 1: Apply the distributive law, $X(Y+Z) = XY + XZ$, to both terms in the expression for $F$.\nFor the first term, $A(A' + BC)$:\n$$A(A' + BC) = A \\cdot A' + A \\cdot (BC) = AA' + ABC$$\nFor the second term, $B(B' + C)$:\n$$B(B' + C) = B \\cdot B' + B \\cdot C = BB' + BC$$\n\nSubstitute these back into the expression for $F$:\n$$F = (AA' + ABC) + (BB' + BC)$$\n\nStep 2: Apply the complement law, which states that $X \\cdot X' = 0$.\nThe terms $AA'$ and $BB'$ both simplify to 0.\n$$AA' = 0$$\n$$BB' = 0$$\n\nSubstituting these results back into the expression for $F$:\n$$F = (0 + ABC) + (0 + BC)$$\n\nStep 3: Apply the identity law for addition, which states that $X + 0 = X$.\n$$F = ABC + BC$$\n\nStep 4: Now we have a sum-of-products expression, $F = ABC + BC$. We check if it can be simplified further. We can use the absorption law, $X+XY=X$. Letting $X=BC$ and $Y=A$, the expression becomes $X+YX=X$, which simplifies to $X$.\n$$F = BC$$\nAlternatively, we can use the distributive law to factor out the common term $BC$.\n$$F = BC(A + 1)$$\n\nStep 5: Apply the annulment law (or null law), which states that $X + 1 = 1$.\nIn our expression, the term $(A + 1)$ simplifies to 1.\n$$F = BC(1)$$\n\nStep 6: Finally, apply the identity law for multiplication, which states that $X \\cdot 1 = X$.\n$$F = BC$$\n\nThe expression is now simplified to its minimal form. The complex initial logic simplifies to the condition that both sensor B and sensor C must be TRUE.", "answer": "$$\\boxed{BC}$$", "id": "1907816"}, {"introduction": "Moving beyond basic simplifications, this exercise introduces the concept of redundant logic and a powerful tool for eliminating it: the Consensus Theorem. In many real-world designs, terms that seem necessary are actually superfluous, and removing them can optimize a circuit for cost and speed. This practice will help you develop the skill of recognizing specific patterns to identify and remove these redundant terms [@problem_id:1907837].", "problem": "In the design of a safety monitoring system for an industrial process, a logic circuit is used to trigger an alarm. The behavior of the alarm, denoted by the function $F$, depends on the state of three sensors, represented by the Boolean variables $W$, $X$, and $Y$. The initial design specification for the alarm logic is given by the Boolean expression:\n\n$F(W, X, Y) = W'X + WY' + XY'$\n\nAs a digital design engineer tasked with optimizing the circuit, you suspect that this expression is not in its most simplified form. A simpler expression would reduce the number of logic gates required, thereby lowering manufacturing costs and improving system reliability.\n\nAlgebraically simplify the given Boolean expression to its minimal Sum-of-Products (SOP) form. Your final answer should be a single symbolic expression.", "solution": "We start from the given Boolean function:\n$$F(W,X,Y)=W'X+WY'+XY'.$$\n\nUsing the consensus theorem, which states that for literals $A,B,C$,\n$$AB + A'C + BC = AB + A'C,$$\nwe identify $A=W'$, $B=X$, and $C=Y'$. Then\n$$W'X + WY' + XY' = AB + A'C + BC = AB + A'C = W'X + WY'.$$\n\nAlternatively, we can show directly that the term $XY'$ is redundant by expressing it in terms of $W$ and $W'$:\n$$XY' = XY'(W + W') = XWY' + XW'Y'.$$\nEach term is absorbed by an existing term:\n- $XWY' \\leq WY'$,\n- $XW'Y' \\leq W'X$.\nHence $XY' \\leq W'X + WY'$, so adding $XY'$ does not change the function:\n$$F = W'X + WY' + XY' = W'X + WY'.$$\n\nTherefore, the minimal Sum-of-Products form is\n$$F = W'X + WY'.$$", "answer": "$$\\boxed{W'X+WY'}$$", "id": "1907837"}, {"introduction": "Our final practice is an advanced challenge that requires you to synthesize your skills to tackle a nested, custom-defined logic function. This scenario mirrors real-world engineering where designers often work with complex, pre-built logical modules. You will need to proceed systematically, first simplifying the inner function and then using that result to simplify the outer expression, ultimately applying the Consensus Theorem to achieve the minimal form [@problem_id:1907830].", "problem": "In the design of a specialized processing unit, a novel three-input logic function, denoted as $T(X, Y, Z)$, is proposed. Its operation is defined by the Boolean expression:\n$$T(X, Y, Z) = X'Y + YZ' + Z'X$$\nwhere $X'$ represents the logical NOT of $X$, juxtaposition represents logical AND, and the `+` symbol represents logical OR.\n\nA more complex module is constructed by nesting this function. The output of this module, $F(A, B, C)$, is given by the expression:\n$$F(A, B, C) = T(A, B, T(1, A, C))$$\nHere, $A$, $B$, and $C$ are the primary inputs to the module, and `1` represents a constant logic high signal.\n\nYour task is to algebraically simplify the function $F(A, B, C)$ into its minimal sum-of-products form.", "solution": "We start from the given three-input logic function definition:\n$$T(X,Y,Z)=X'Y+YZ'+Z'X.$$\nFirst compute the inner function for $X=1$, $Y=A$, and $Z=C$:\n$$T(1,A,C)=1' \\cdot A + A \\cdot C' + C' \\cdot 1.$$\nUsing the Boolean identities $1'=0$, $0 \\cdot A=0$, and $C' \\cdot 1=C'$, this simplifies to\n$$T(1,A,C)=0 + AC' + C' = AC' + C'.$$\nApplying the absorption law $X + XY = X$ with $X=C'$ and $Y=A$ gives\n$$T(1,A,C)=C'.$$\n\nNow substitute this result into the outer function:\n$$F(A,B,C)=T(A,B,T(1,A,C))=T(A,B,C').$$\nUsing the definition of $T$ with $X=A$, $Y=B$, and $Z=C'$:\n$$T(A,B,C')=A'B + B(C')' + (C')'A.$$\nBy the involution law $(X')'=X$, we have $(C')'=C$, hence\n$$F(A,B,C)=A'B + BC + AC.$$\n\nTo simplify to a minimal sum-of-products, apply the consensus theorem $XY + X'Z + YZ = XY + X'Z$. Mapping $X=A$, $Y=C$, and $Z=B$, we identify $AC$ as $XY$, $A'B$ as $X'Z$, and $BC$ as $YZ$. Therefore,\n$$A'B + BC + AC = A'B + AC.$$\n\nThus, the minimal sum-of-products form is\n$$F(A,B,C)=A'B + AC.$$", "answer": "$$\\boxed{A'B + AC}$$", "id": "1907830"}]}