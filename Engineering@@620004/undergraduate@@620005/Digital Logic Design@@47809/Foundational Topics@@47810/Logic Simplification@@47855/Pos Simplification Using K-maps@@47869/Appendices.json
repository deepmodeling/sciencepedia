{"hands_on_practices": [{"introduction": "This first exercise serves as a foundational practice for simplifying a 4-variable Karnaugh map. We begin with a straightforward logical rule and translate it into a map of zeros, demonstrating the core principle of grouping these zeros to derive a minimal Product-of-Sums (POS) expression. This practice [@problem_id:1952609] reinforces the critical link between a high-level system specification and its direct implementation in digital logic.", "problem": "In the design of a digital validation system, a 4-bit input signal, represented by the variables $A, B, C, D$ where $A$ is the most significant bit, is analyzed. The system's output, a function $F(A, B, C, D)$, is designed to be LOGIC 0 if and only if the two most significant bits, $A$ and $B$, have the same logical value. Otherwise, the output is LOGIC 1.\n\nYour task is to determine the minimal Product-of-Sums (POS) expression for the output function $F(A, B, C, D)$. Use a Karnaugh map for the simplification. The final expression should use standard Boolean notation where addition (+) represents the OR operation, implicit multiplication represents the AND operation, and an overbar (e.g., $\\overline{A}$) represents the NOT operation.", "solution": "We are given a 4-variable Boolean function $F(A,B,C,D)$ defined to be LOGIC $0$ if and only if the two most significant bits have the same logic value, i.e., $A=B$. Therefore, $F=0$ for $AB=00$ and $AB=11$, regardless of $C$ and $D$, and $F=1$ for $AB=01$ and $AB=10$. Equivalently, $F$ depends only on $A$ and $B$ and is the exclusive-OR: $F=A \\oplus B$.\n\nTo obtain the minimal Product-of-Sums (POS) using a Karnaugh map, place $AB$ on one axis and $CD$ on the other. The cells where $F=0$ occur for:\n- $AB=00$ for all $CD$ (four cells),\n- $AB=11$ for all $CD$ (four cells).\nThese form two rectangles of size $4$ each (covering all $CD$) in the K-map.\n\nIn POS minimization by grouping zeros:\n- For the group with $A=0$ and $B=0$ constant (across all $C,D$), the corresponding sum term is $A + B$ (a variable that is $0$ over the group appears uncomplemented in the sum term; variables that change across the group are omitted).\n- For the group with $A=1$ and $B=1$ constant, the corresponding sum term is $\\overline{A} + \\overline{B}$ (a variable that is $1$ over the group appears complemented in the sum term).\n\nThus the minimal POS expression is the product of these two sum terms:\n$$F(A,B,C,D)=(A+B)(\\overline{A}+\\overline{B}).$$\nThis expression is independent of $C$ and $D$, consistent with the specification that only $A$ and $B$ determine the output. A quick verification shows it matches the definition: for $A=B=0$, $(A+B)=0$ so $F=0$; for $A=B=1$, $(\\overline{A}+\\overline{B})=0$ so $F=0$; and for $A \\neq B$, both sums evaluate to $1$, so $F=1$.", "answer": "$$\\boxed{(A+B)(\\overline{A}+\\overline{B})}$$", "id": "1952609"}, {"introduction": "Real-world systems often have input combinations that will never occur or for which the output is irrelevant. This exercise introduces the powerful concept of \"don't-care\" conditions, which provide crucial flexibility for optimization. You will learn how to strategically use these don't-cares when grouping the zeros in a K-map to achieve a more minimal POS expression than would otherwise be possible [@problem_id:1952659].", "problem": "A four-variable Boolean function $F(A,B,C,D)$ is defined over the input variables $A, B, C,$ and $D$, where $A$ is the most significant bit (MSB) and $D$ is the least significant bit (LSB). The behavior of the function is specified by its list of minterms for which the output is 0, and a set of don't-care conditions. The set of zeros is given by $Z(A,B,C,D) = \\Sigma m(5, 7, 13, 15)$, where $\\Sigma m$ denotes the sum of minterms. The set of don't-care conditions is given by $D(A,B,C,D) = \\Sigma m(1, 9)$.\n\nFind the minimal product-of-sums (POS) expression for the function $F(A,B,C,D)$. The expression should be written using standard Boolean algebra notation, where addition (+) denotes OR, multiplication (implicit) denotes AND, and a prime (') denotes NOT.", "solution": "We are given the set of minterms where $F=0$ as $Z=\\Sigma m(5,7,13,15)$ and the don't-care set $D=\\Sigma m(1,9)$, with variables ordered as $A$ (MSB) to $D$ (LSB). Each minterm index corresponds to the binary assignment $(A,B,C,D)$.\n\nTo find the minimal POS expression for $F$, it is often easiest to first find the minimal SOP expression for its complement, $F'$, and then apply De Morgan's theorem. The function $F'$ will be 1 for all inputs where $F=0$, and it will have the same don't-care conditions.\nSo, $F'(A,B,C,D) = \\Sigma m(5, 7, 13, 15) + d(1, 9)$.\n\nWe plot these `1`s and `X`s (don't cares) on a K-map:\n```\n      CD\nAB   00   01   11   10\n00    .    X    .    .   (m1)\n01    .    1    1    .   (m5, m7)\n11    .    1    1    .   (m13, m15)\n10    .    X    .    .   (m9)\n```\nTo cover all the `1`s, we can form a single rectangular group of four using minterms $m(5, 7, 13, 15)$. For this group, the variable $B$ is always $1$ and the variable $D$ is always $1$, while $A$ and $C$ both change. Thus, this group corresponds to the product term $BD$. Since this single group covers all the `1`s, the minimal SOP expression for $F'$ is:\n$$\nF' = BD.\n$$\nThe don't-care conditions are not needed to form this group.\n\nNow, we apply De Morgan’s law to obtain $F$ in product-of-sums form:\n$$\nF = (F')' = (BD)' = B' + D'.\n$$\nThis is the minimal POS expression. It is a single sum term, which is the simplest possible form.", "answer": "$$\\boxed{B' + D'}$$", "id": "1952659"}, {"introduction": "This final practice addresses a common scenario in digital design: active-low logic, where an output of $0$ signifies a specific event. Instead of grouping zeros directly, it can be far more efficient to first find the minimal Sum-of-Products (SOP) expression for the function's complement, $F'$, and then apply De Morgan's theorem. This exercise [@problem_id:1952633] will guide you through this powerful two-step technique, a vital skill for deriving minimal POS solutions from a given set of minterms where the function is zero.", "problem": "A safety control system for an industrial chemical reactor monitors four critical parameters, which are represented by a 4-bit binary input signal $(A, B, C, D)$, where $A$ is the Most Significant Bit (MSB). The system's alarm, represented by the output function $F(A, B, C, D)$, is designed to be active LOW. This means the alarm triggers (output $F=0$) when specific hazardous conditions are detected. Through a hazard analysis, the engineers have determined that the alarm must be triggered for the states corresponding to the decimal input values 1, 3, 5, 7, 13, and 15. The control logic is to be implemented using a minimal Product-of-Sums (POS) expression.\n\nLet $A, B, C,$ and $D$ be the input logic variables. A prime (e.g., $A'$) denotes the logical NOT operation, a plus sign ($+$) denotes the logical OR operation, and juxtaposition (e.g., $XY$) denotes the logical AND operation.\n\nFind the simplified minimal Product-of-Sums (POS) expression for the alarm function $F(A,B,C,D)$.", "solution": "The alarm function $F(A,B,C,D)$ is active LOW for the input states corresponding to minterms $m(1,3,5,7,13,15)$. This means $F=0$ for these states. The most effective way to find the minimal POS expression for $F$ is to first find the minimal SOP expression for its complement, $F'$, and then apply De Morgan's theorem.\n\nThe complement function $F'$ will be 1 for the states where $F=0$. Therefore, we can write $F'$ as a sum of minterms:\n$$\nF'=\\sum m(1,3,5,7,13,15).\n$$\nWe plot these minterms on a 4-variable K-map to find the minimal SOP for $F'$.\n```\n      CD\nAB   00   01   11   10\n00    .    1    1    .   (m1, m3)\n01    .    1    1    .   (m5, m7)\n11    .    1    1    .   (m13, m15)\n10    .    .    .    .\n```\nWe can form two groups of four `1`s:\n1.  A group covering minterms $m(1,3,5,7)$. In this group, $A=0$ and $D=1$ are constant, while $B$ and $C$ vary. This gives the product term $A'D$.\n2.  A group covering minterms $m(5,7,13,15)$. In this group, $B=1$ and $D=1$ are constant, while $A$ and $C$ vary. This gives the product term $BD$.\n\nThe minimal SOP expression for $F'$ is the sum of these terms:\n$$\nF' = A'D + BD\n$$\nWe can factor this expression:\n$$\nF'=D(A'+B)\n$$\nNow, we find $F$ by taking the complement of $F'$ and applying De Morgan’s laws:\n$$\nF=(F')'=\\bigl(D(A'+B)\\bigr)' = D' + (A'+B)' = D' + AB'\n$$\nThis expression is in SOP form. To convert it to the required POS form, we use the distributive identity $x+yz=(x+y)(x+z)$, with $x=D'$, $y=A$, and $z=B'$:\n$$\nF=(D'+A)(D'+B')\n$$\nThis is the minimal POS expression for the alarm function.", "answer": "$$\\boxed{(D'+A)(D'+B')}$$", "id": "1952633"}]}