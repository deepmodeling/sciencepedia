{"hands_on_practices": [{"introduction": "To build a strong foundation in digital logic, it is essential to master the simplification of Boolean expressions. This first practice problem [@problem_id:1974398] provides a hands-on opportunity to translate a standard Boolean function into a two-variable Karnaugh map (K-map) and derive its minimal Sum-of-Products ($SOP$) expression. You will see how the visual process of grouping adjacent cells on the map serves as a powerful and intuitive alternative to purely algebraic methods for optimizing logic.", "problem": "A digital logic circuit is described by the un-simplified Boolean function $F(A,B) = A(A+B) + B(A'+B)$, where $A'$ denotes the logical NOT of A. Using a Karnaugh map (K-map), determine the minimal Sum-of-Products (SOP) expression for this function. For the purpose of this problem, a Sum-of-Products expression is a Boolean expression written as a disjunction (OR) of one or more conjunctions (AND) of literals (variables or their complements).", "solution": "We start from the given Boolean function:\n$$F(A,B)=A(A+B)+B(A'+B).$$\nUse distributive and idempotent laws on the first term:\n$$A(A+B)=AA+AB=A+AB,$$\nand then apply absorption ($X+XY=X$) with $X=A$ and $Y=B$:\n$$A+AB=A.$$\nFor the second term, distribute and use idempotent:\n$$B(A'+B)=BA'+BB=A'B+B.$$\nApply absorption with $X=B$ and $Y=A'$:\n$$B+A'B=B.$$\nTherefore,\n$$F(A,B)=A+B.$$\n\nKarnaugh map confirmation: the 2-variable K-map has ones at minterms where $(A,B)$ is $(0,1)$, $(1,0)$, and $(1,1)$. Grouping the bottom row (cells with $A=1$) yields implicant $A$, and grouping the right column (cells with $B=1$) yields implicant $B$. The minimal Sum-of-Products is thus\n$$F=A+B.$$", "answer": "$$\\boxed{A+B}$$", "id": "1974398"}, {"introduction": "Effective problem-solving involves not just applying rules, but also recognizing common errors. This exercise [@problem_id:1974369] is framed around a hypothetical scenario where a designer makes a frequent mistake in K-map grouping. Your task is to analyze the situation, identify the flawed logic, and determine the correct minimal expression, reinforcing the critical concepts of cell adjacency and the strategic use of overlapping groups for optimal simplification.", "problem": "A junior digital logic designer is tasked with simplifying a Boolean function $F(A,B)$ defined by the sum of minterms $\\Sigma m(0, 1, 3)$.\n\nThe designer correctly constructs a two-variable Karnaugh map (K-map) where the rows correspond to the values of variable $A$ ($A=0$ for the top row, $A=1$ for the bottom row) and the columns correspond to the values of variable $B$ ($B=0$ for the left column, $B=1$ for the right column). In this map, the cells for minterms $m_0$, $m_1$, and $m_3$ are correctly filled with '1's, while the remaining cell for $m_2$ is filled with a '0'.\n\nIn the simplification process, the designer makes a critical error. The designer attempts to cover the '1's by creating groups. One group correctly combines two horizontally adjacent '1's. However, the designer also forms a second group containing the two diagonally opposite '1's, corresponding to minterms $m_0$ (at row 0, column 0) and $m_3$ (at row 1, column 1). This diagonal grouping is invalid as K-map groups must consist of cells that are physically adjacent (horizontally or vertically), including wrap-around adjacency which is not applicable here.\n\nYour task is to ignore the flawed methodology and determine the correct minimal Sum-of-Products (SOP) expression for the function $F(A,B)$. Use prime notation for the logical NOT operation (e.g., $A'$ for NOT A).", "solution": "The problem asks for the minimal Sum-of-Products (SOP) expression for the Boolean function $F(A,B) = \\Sigma m(0, 1, 3)$.\n\nFirst, let's express the function using its minterms in algebraic form. The variables are $A$ and $B$.\nThe minterms are:\n- $m_0 = A'B'$ (since $A=0, B=0$)\n- $m_1 = A'B$ (since $A=0, B=1$)\n- $m_2 = AB'$ (since $A=1, B=0$)\n- $m_3 = AB$ (since $A=1, B=1$)\n\nThe function is the sum of minterms 0, 1, and 3:\n$$F(A,B) = A'B' + A'B + AB$$\n\nTo simplify this using a Karnaugh map (K-map), we represent the function in a 2x2 grid. The rows are indexed by $A$ and columns by $B$.\n\n|       | B=0 ($B'$) | B=1 ($B$) |\n| :---- | :---------: | :-------: |\n| A=0 ($A'$) |      1 ($m_0$)      |     1 ($m_1$)     |\n| A=1 ($A$)  |      0 ($m_2$)      |     1 ($m_3$)     |\n\nThe goal of K-map simplification is to cover all the '1's with the largest possible rectangular groups of size $2^k$ (where $k$ is an integer), which correspond to adjacent cells. A '1' can be included in multiple groups if it helps to create a larger group. The invalid diagonal grouping mentioned in the problem is correctly ignored.\n\nWe identify the optimal groupings to cover all three '1's:\n\n**Group 1:**\nWe can group the two adjacent '1's in the top row. These correspond to minterms $m_0$ and $m_1$.\nThe cells are for $A'B'$ and $A'B$.\nIn this group, the variable $A$ is constant at $0$ (represented as $A'$), while the variable $B$ changes from $0$ to $1$. When a variable changes within a group, it is eliminated.\nThus, this group simplifies to the term $A'$.\n\n**Group 2:**\nAfter forming the first group, the '1' at position $m_3$ is still uncovered. To cover this '1', we should form the largest possible group that includes it. The '1' at $m_3$ is adjacent to the '1' at $m_1$ (vertically). We can therefore form a group of two with $m_1$ and $m_3$.\nThe cells are for $A'B$ and $AB$.\nIn this group, the variable $B$ is constant at $1$ (represented as $B$), while the variable $A$ changes from $0$ to $1$. The changing variable $A$ is eliminated.\nThus, this group simplifies to the term $B$.\n\nNote that the minterm $m_1$ is used in both groups. This is a valid and essential technique in K-map simplification, known as overlapping groups, which leads to the minimal expression.\n\n**Final Expression:**\nThe minimal SOP expression is the logical OR (sum) of the terms found from each group.\n$$F(A,B) = (\\text{Term from Group 1}) + (\\text{Term from Group 2})$$\n$$F(A,B) = A' + B$$\n\nThis is the simplest possible SOP expression for the given function. We can verify this using the original expression and Boolean laws:\n$F(A,B) = A'B' + A'B + AB$\n$F(A,B) = A'(B' + B) + AB$\n$F(A,B) = A'(1) + AB$\n$F(A,B) = A' + AB$\nBy applying the adjacency theorem ($X' + XY = X' + Y$), this simplifies to $A' + B$.\nThe K-map grouping method directly yielded this minimal form.", "answer": "$$\\boxed{A' + B}$$", "id": "1974369"}, {"introduction": "This final practice problem [@problem_id:1974360] elevates your skills from simple application to strategic thinking. Rather than just simplifying a pre-defined function, this thought experiment challenges you to analyze how modifying a function can lead to greater optimization. By evaluating which additional minterm creates the best opportunity for simplification, you will develop a deeper understanding of the relationship between K-map patterns and the efficiency of the resulting logic circuit.", "problem": "A digital logic designer is tasked with optimizing a circuit based on a two-variable Boolean function, $F(A,B)$. The variables $A$ and $B$ are the inputs. The function is initially defined by a single minterm, $m_0$. In the standard Sum of Products (SOP) canonical form, this is written as $F(A,B) = \\Sigma m(0)$. The minterms for two variables are defined as: $m_0 = A'B'$, $m_1 = A'B$, $m_2 = AB'$, and $m_3 = AB$.\n\nTo potentially reduce the complexity of the final circuit, the designer can add exactly one additional minterm to the function from the set $\\{m_1, m_2, m_3\\}$. The effectiveness of this addition is measured by the degree of simplification in the resulting minimal SOP expression. A greater simplification is achieved by minimizing the total number of literals in the expression. A literal is a single variable or its complement (e.g., $A$ or $A'$).\n\nWhich of the following options correctly identifies the choice(s) that lead to the greatest simplification of the function?\n\nA. Only the addition of minterm $m_1$\n\nB. Only the addition of minterm $m_2$\n\nC. Only the addition of minterm $m_3$\n\nD. The addition of either minterm $m_1$ or minterm $m_2$\n\nE. The addition of any of the minterms ($m_1, m_2, m_3$) yields the same level of simplification.", "solution": "We have two Boolean variables with minterms defined as $m_{0}=A'B'$, $m_{1}=A'B$, $m_{2}=AB'$, and $m_{3}=AB$. The initial function is $F(A,B)=\\Sigma m(0)=m_{0}=A'B'$. We are allowed to add exactly one minterm from $\\{m_{1},m_{2},m_{3}\\}$ and then minimize the resulting SOP, measuring simplification by the total number of literals.\n\nUse the standard Boolean algebra identities:\n1) Complementarity: $X+X'=1$ and $X \\cdot X'=0$.\n2) Identity: $X \\cdot 1=X$ and $X+0=X$.\n3) Distributivity: $XY+XZ=X(Y+Z)$.\n4) Combining (adjacent) terms: $XY+XY'=X$ and $XY+X'Y=Y$ (special cases of distributivity with complementarity).\n\nCase 1: Add $m_{1}$. Then\n$$\nF=m_{0}+m_{1}=A'B'+A'B=A'(B'+B)=A'\\cdot 1=A'.\n$$\nThis minimal SOP has a single product term with $1$ literal.\n\nCase 2: Add $m_{2}$. Then\n$$\nF=m_{0}+m_{2}=A'B'+AB'=B'(A'+A)=B'\\cdot 1=B'.\n$$\nThis minimal SOP also has a single product term with $1$ literal.\n\nCase 3: Add $m_{3}$. Then\n$$\nF=m_{0}+m_{3}=A'B'+AB.\n$$\nThese two terms differ in both variables, so neither $XY+XY'=X$ nor $XY+X'Y=Y$ applies. Although one can factor to product-of-sums as $(A+B')(A'+B)$, the minimal SOP remains $A'B'+AB$, consisting of two product terms with a total of $4$ literals.\n\nComparing literal counts: starting from $A'B'$ (2 literals), adding $m_{1}$ or $m_{2}$ reduces to $1$ literal, which is the greatest possible simplification. Adding $m_{3}$ does not reduce the count and yields a larger total than the original. Therefore, the choices that yield the greatest simplification are adding either $m_{1}$ or $m_{2}$.", "answer": "$$\\boxed{D}$$", "id": "1974360"}]}