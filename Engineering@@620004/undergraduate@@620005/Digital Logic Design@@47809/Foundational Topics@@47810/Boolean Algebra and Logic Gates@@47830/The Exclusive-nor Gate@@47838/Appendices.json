{"hands_on_practices": [{"introduction": "The Exclusive-NOR (XNOR) gate is fundamentally an equality detector. For multiple inputs, this concept extends to it acting as an even parity checker, producing a high output when an even number of its inputs are high. This exercise provides a direct application of this principle, challenging you to determine the output of a 4-input XNOR gate for a given binary input and reinforcing the gate's primary logical function.", "problem": "In digital circuit design, an exclusive-NOR (XNOR) gate acts as an equality detector. For multiple inputs, a generalized N-input XNOR gate produces a high output (logical 1) if an even number of its inputs are high, and a low output (logical 0) otherwise. Consider a specialized 4-input XNOR gate used in a simple data validation circuit. The four inputs, labeled $A$, $B$, $C$, and $D$, are connected to a data bus that currently holds the 4-bit binary value `1010`. This means input $A$ receives a logical 1, input $B$ a logical 0, input $C$ a logical 1, and input $D$ a logical 0. Determine the logical value of the output of this 4-input XNOR gate.", "solution": "An N-input XNOR gate outputs a logical $1$ if and only if an even number of its inputs are at logical $1$. For inputs $A,B,C,D \\in \\{0,1\\}$, define the integer sum\n$$\nS = A + B + C + D.\n$$\nThe output $Y$ of the 4-input XNOR is\n$$\nY = \\begin{cases}\n1, & \\text{if } S \\equiv 0 \\pmod{2}, \\\\\n0, & \\text{if } S \\equiv 1 \\pmod{2}.\n\\end{cases}\n$$\nGiven the data bus value $1010$, we have $A=1$, $B=0$, $C=1$, $D=0$. Therefore,\n$$\nS = 1 + 0 + 1 + 0 = 2,\n$$\nand\n$$\nS \\bmod 2 = 2 \\bmod 2 = 0.\n$$\nSince the number of high inputs is even, the XNOR output is $Y=1$.", "answer": "$$\\boxed{1}$$", "id": "1967375"}, {"introduction": "Understanding the flexibility of standard logic gates is a key skill in efficient digital design. By fixing one or more inputs to a constant logic level, a gate's function can be simplified or transformed into another. This practice exercise explores this concept by asking you to determine the resulting function of a two-input XNOR gate when one input is permanently set to logic '0', revealing how it can be reconfigured as a fundamental logical inverter.", "problem": "In a digital logic circuit, a standard two-input exclusive-NOR (XNOR) gate is used. Let the inputs to this gate be denoted by the Boolean variables $A$ and $B$, and let the output be denoted by $Y$. The logical operation of the XNOR gate is defined by the Boolean expression $Y = (A \\text{ AND } B) \\text{ OR } ((\\text{NOT } A) \\text{ AND } (\\text{NOT } B))$.\n\nImagine a specific configuration where one of the inputs, $B$, is permanently connected to a logic '0' level. Determine the simplified Boolean expression for the output $Y$ solely in terms of the remaining input $A$.", "solution": "The XNOR output is defined as $Y=(A \\text{ AND } B)\\text{ OR }((\\text{NOT }A)\\text{ AND }(\\text{NOT }B))$, which in Boolean algebra is $Y=AB+\\overline{A}\\,\\overline{B}$. With $B=0$, we substitute $B=0$ and use $\\overline{0}=1$:\n$$\nY=A\\cdot 0+\\overline{A}\\cdot 1.\n$$\nUsing the Boolean identities $X\\cdot 0=0$ and $X\\cdot 1=X$, this simplifies to\n$$\nY=0+\\overline{A}.\n$$\nUsing $0+X=X$, we obtain\n$$\nY=\\overline{A}.\n$$\nThus, when $B$ is permanently $0$, the XNOR output equals the logical negation of $A$.", "answer": "$$\\boxed{\\overline{A}}$$", "id": "1967378"}, {"introduction": "In practical circuit design, engineers often work with a limited set of available components, such as universal NAND gates, from which all other logic functions must be constructed. This process, known as logic synthesis, is a cornerstone of digital electronics. This problem challenges you to build a two-input XNOR gate using only two-input NAND gates, providing hands-on experience in both Boolean manipulation and practical circuit implementation.", "problem": "In a digital electronics lab, a student is tasked with designing a logic circuit that acts as a two-input equivalence checker. This function, formally known as the exclusive-NOR (XNOR) gate, outputs a high signal (logic 1) if its two inputs, $A$ and $B$, are identical, and a low signal (logic 0) otherwise. Due to a limited component supply, the student only has access to integrated circuits containing standard two-input NAND gates.\n\nWhat is the minimum number of two-input NAND gates required to construct a two-input XNOR circuit, assuming only the primary inputs $A$ and $B$ are available?\n\nA. 3\n\nB. 4\n\nC. 5\n\nD. 6", "solution": "We seek to realize the two-input XNOR function using only two-input NAND gates with only primary inputs $A$ and $B$ available. The XNOR function is\n$$\nF = A \\odot B = AB + A'B'.\n$$\nUsing De Morgan's laws, write $F$ as a NAND of two NAND-expressible terms. Let\n$$\nX = (AB)', \\quad Y = (A'B')'.\n$$\nThen $X' = AB$ and $Y' = A'B'$, so\n$$\nF = X' + Y' = (XY)'.\n$$\nThis gives a direct NAND-only realization:\n- Compute $X = \\operatorname{NAND}(A,B)$ using one NAND gate.\n- Generate the needed complements $A'$ and $B'$ using NAND inverters:\n$$\nA' = \\operatorname{NAND}(A,A), \\quad B' = \\operatorname{NAND}(B,B),\n$$\nwhich uses two NAND gates.\n- Compute $Y = \\operatorname{NAND}(A',B') = (A'B')'$ using one NAND gate.\n- Finally, form $F = \\operatorname{NAND}(X,Y) = (XY)'$ using one NAND gate.\n\nThus a constructive implementation uses exactly $1 + 2 + 1 + 1 = 5$ two-input NAND gates.\n\nTo see that fewer will not suffice, observe that an efficient way to generate the needed mixed sums is via\n$$\nX = (AB)', \\quad S_{1} = \\operatorname{NAND}(A,X) = (A(A' + B'))' = (AB')', \\quad S_{2} = \\operatorname{NAND}(B,X) = (A'B)'.\n$$\nThese three NAND gates produce $S_{1} = A' + B$ and $S_{2} = A + B'$. Their product equals the XNOR:\n$$\nS_{1}S_{2} = (A' + B)(A + B') = A'B' + AB = F.\n$$\nHowever, using only NANDs, the only operation available for the fourth gate on $S_{1}$ and $S_{2}$ is a NAND, yielding\n$$\n\\operatorname{NAND}(S_{1},S_{2}) = (S_{1}S_{2})' = F',\n$$\nwhich is the XOR, not the XNOR. Obtaining $F$ then necessarily requires one more inversion, i.e., one additional NAND gate. Therefore, with only primary inputs $A$ and $B$, four NAND gates cannot realize XNOR; five are necessary and sufficient.\n\nHence, the minimum number of two-input NAND gates required is five.", "answer": "$$\\boxed{C}$$", "id": "1967388"}]}