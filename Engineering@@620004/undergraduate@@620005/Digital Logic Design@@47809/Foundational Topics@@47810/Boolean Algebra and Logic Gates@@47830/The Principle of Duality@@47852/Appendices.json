{"hands_on_practices": [{"introduction": "The principle of duality is not just an abstract mathematical curiosity; it has direct relevance to the hardware you'll encounter. This first exercise [@problem_id:1970581] grounds the concept in a practical component, the 2-to-1 multiplexer (MUX), which is a fundamental building block in digital circuits. By finding the dual of its characteristic equation, you will practice the core mechanical step of swapping AND ($\\cdot$) and OR ($+$) operators in a real-world context.", "problem": "In digital logic design, a 2-to-1 multiplexer (MUX) is a device that selects one of its two data inputs, $I_0$ and $I_1$, to be passed to its single output, $Y$. This selection is controlled by a single input line, $S$. The behavior of this MUX is described by the characteristic Boolean equation:\n$$Y = I_0 S' + I_1 S$$\nIn this expression, $S'$ denotes the complement (NOT) of $S$, the concatenation of variables (e.g., $I_0 S'$) represents the logical AND operation, and the `+` symbol represents the logical OR operation.\n\nEvery Boolean expression has a corresponding dual expression, $Y^D$. Which of the following Boolean expressions correctly represents the dual of the 2-to-1 MUX's characteristic equation?\n\nA. $Y^D = (I_0 + S')(I_1 + S)$\n\nB. $Y^D = I_0' S + I_1' S'$\n\nC. $Y^D = (I_0' + S)(I_1' + S')$\n\nD. $Y^D = I_0 S + I_1 S'$\n\nE. $Y^D = (I_0 + S)(I_1 + S')$", "solution": "The problem asks for the dual of the characteristic equation of a 2-to-1 multiplexer, which is given as $Y = I_0 S' + I_1 S$.\n\nThe principle of duality in Boolean algebra states that the dual of an expression can be found by interchanging the AND and OR operators. The variables and their complements (the literals) remain unchanged.\n\nLet's start with the given equation:\n$$Y = I_0 S' + I_1 S$$\n\nTo make the operations explicit, we can re-write the equation using `·` for AND and showing the precedence with parentheses:\n$$Y = (I_0 \\cdot S') + (I_1 \\cdot S)$$\n\nNow, we apply the principle of duality. We must perform the following substitutions:\n1.  Replace every AND operator (`·`) with an OR operator (`+`).\n2.  Replace every OR operator (`+`) with an AND operator (`·`).\n\nLet's apply these rules to the expression $Y = (I_0 \\cdot S') + (I_1 \\cdot S)$.\n\nThe dual expression, which we denote as $Y^D$, is obtained by transforming the original expression step-by-step.\nFirst, replace the AND operators (`·`) within the parentheses with OR operators (`+`):\n- The term $(I_0 \\cdot S')$ becomes $(I_0 + S')$.\n- The term $(I_1 \\cdot S)$ becomes $(I_1 + S)$.\n\nNext, replace the central OR operator (`+`) that connects the two terms with an AND operator (`·`).\n\nCombining these transformations, we get the dual expression:\n$$Y^D = (I_0 + S') \\cdot (I_1 + S)$$\n\nIn standard Boolean notation, the AND operator `·` is often omitted (represented by concatenation), so the expression is written as:\n$$Y^D = (I_0 + S')(I_1 + S)$$\n\nNow we compare this result with the given multiple-choice options:\nA. $Y^D = (I_0 + S')(I_1 + S)$ - This matches our derived dual expression.\nB. $Y^D = I_0' S + I_1' S'$ - This is incorrect. It appears to involve complementing the input literals, which is not part of finding the dual. This would be related to applying De Morgan's theorem to the inputs, not the operators.\nC. $Y^D = (I_0' + S)(I_1' + S')$ - This is incorrect. It complements the literals $I_0$ and $I_1$ and also incorrectly handles the literal $S$.\nD. $Y^D = I_0 S + I_1 S'$ - This is incorrect. It merely swaps the select line logic for the two terms but does not change the operators as required by duality.\nE. $Y^D = (I_0 + S)(I_1 + S')$ - This is incorrect. It correctly changes the operators but incorrectly swaps the complement on the select line literal $S$. The literals themselves must remain unchanged.\n\nTherefore, the correct dual expression is the one given in option A.", "answer": "$$\\boxed{A}$$", "id": "1970581"}, {"introduction": "Once you can mechanically generate a dual expression, how can you be sure the resulting identity is valid? This practice [@problem_id:1970558] moves from application to verification by focusing on the Consensus Theorem, a key identity in Boolean simplification. You will not only derive the dual of this theorem but also prove its validity yourself by constructing a truth table, reinforcing the power and reliability of the duality principle.", "problem": "In digital logic design, the principle of duality is a powerful concept for generating new Boolean identities from existing ones. According to this principle, the dual of a Boolean expression is obtained by interchanging the AND (`·`) and OR (`+`) operators and also interchanging the identity elements 0 and 1. The variables and their complements are left unchanged.\n\nConsider the Boolean Consensus Theorem for three variables $X$, $Y$, and $Z$. One form of this theorem is given by the identity:\n$$XY + X'Z + YZ = XY + X'Z$$\n\nYour task is to first derive the dual of this theorem. Then, verify the resulting dual identity by constructing a truth table. For this verification, use a standard truth table for the variables $X, Y, Z$, where the rows are numbered from 0 to 7. The row number corresponds to the integer value of the 3-bit binary number $(XYZ)_2$, such that row 0 represents $X=0, Y=0, Z=0$, and row 7 represents $X=1, Y=1, Z=1$.\n\nBased on your truth table verification, for which rows do both the left-hand side and the right-hand side of the derived dual identity evaluate to 0?\n\nA. Rows 0, 1, 4, 6\n\nB. Rows 2, 3, 5, 7\n\nC. Rows 0, 2, 5, 6\n\nD. Rows 1, 3, 4, 7\n\nE. Rows 0, 3, 5, 6", "solution": "The problem asks us to find the dual of the Consensus Theorem $XY + X'Z + YZ = XY + X'Z$ and then use a truth table to identify the rows where both sides of the new dual identity evaluate to 0.\n\nFirst, we derive the dual of the given identity. The principle of duality states that we must interchange AND operators with OR operators, and OR operators with AND operators. In the expression $XY$, the AND operator is implicit.\n\nThe original identity is:\n$$ (X \\cdot Y) + (X' \\cdot Z) + (Y \\cdot Z) = (X \\cdot Y) + (X' \\cdot Z) $$\n\nTo find the dual, we replace each `·` with `+` and each `+` with `·`.\n\nLet's transform the left-hand side (LHS):\nOriginal LHS: $(X \\cdot Y) + (X' \\cdot Z) + (Y \\cdot Z)$\nDual of LHS: $(X + Y) \\cdot (X' + Z) \\cdot (Y + Z)$\n\nNow, let's transform the right-hand side (RHS):\nOriginal RHS: $(X \\cdot Y) + (X' \\cdot Z)$\nDual of RHS: $(X + Y) \\cdot (X' + Z)$\n\nSo, the dual identity to be verified is:\n$$ (X+Y)(X'+Z)(Y+Z) = (X+Y)(X'+Z) $$\n\nNext, we construct a truth table to verify this dual identity. The table will have columns for the input variables $X, Y, Z$, their complements (as needed), the intermediate terms, the final LHS, and the final RHS. The rows are numbered 0 through 7 based on the binary value of $(XYZ)_2$.\n\nLet LHS_dual = $(X+Y)(X'+Z)(Y+Z)$ and RHS_dual = $(X+Y)(X'+Z)$.\n\nWe will construct the table step-by-step:\n\n| Row | $X$ | $Y$ | $Z$ | $X'$ | $X+Y$ | $X'+Z$| $Y+Z$ | LHS_dual | RHS_dual |\n|:---:|:---:|:---:|:---:|:----:|:-----:|:------:|:-----:|:----------:|:----------:|\n|  0  |  0  |  0  |  0  |  1   |   0   |    1   |   0   | $0 \\cdot 1 \\cdot 0 = 0$ | $0 \\cdot 1 = 0$ |\n|  1  |  0  |  0  |  1  |  1   |   0   |    1   |   1   | $0 \\cdot 1 \\cdot 1 = 0$ | $0 \\cdot 1 = 0$ |\n|  2  |  0  |  1  |  0  |  1   |   1   |    1   |   1   | $1 \\cdot 1 \\cdot 1 = 1$ | $1 \\cdot 1 = 1$ |\n|  3  |  0  |  1  |  1  |  1   |   1   |    1   |   1   | $1 \\cdot 1 \\cdot 1 = 1$ | $1 \\cdot 1 = 1$ |\n|  4  |  1  |  0  |  0  |  0   |   1   |    0   |   0   | $1 \\cdot 0 \\cdot 0 = 0$ | $1 \\cdot 0 = 0$ |\n|  5  |  1  |  0  |  1  |  0   |   1   |    1   |   1   | $1 \\cdot 1 \\cdot 1 = 1$ | $1 \\cdot 1 = 1$ |\n|  6  |  1  |  1  |  0  |  0   |   1   |    0   |   1   | $1 \\cdot 0 \\cdot 1 = 0$ | $1 \\cdot 0 = 0$ |\n|  7  |  1  |  1  |  1  |  0   |   1   |    1   |   1   | $1 \\cdot 1 \\cdot 1 = 1$ | $1 \\cdot 1 = 1$ |\n\nBy comparing the `LHS_dual` and `RHS_dual` columns, we can see they are identical for every row, which verifies the dual identity.\n\nThe final step is to answer the question: \"For which rows do both the left-hand side and the right-hand side of the derived dual identity evaluate to 0?\"\n\nLooking at the table, we identify the rows where both `LHS_dual` and `RHS_dual` columns have the value 0.\n- Row 0: Both are 0.\n- Row 1: Both are 0.\n- Row 2: Both are 1.\n- Row 3: Both are 1.\n- Row 4: Both are 0.\n- Row 5: Both are 1.\n- Row 6: Both are 0.\n- Row 7: Both are 1.\n\nThe rows where both sides evaluate to 0 are rows 0, 1, 4, and 6. This corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1970558"}, {"introduction": "An intriguing consequence of duality is that some functions are their own duals, a property known as self-duality. This final exercise [@problem_id:1970562] invites you to explore this special case by investigating the three-variable odd parity function, implemented with XOR gates ($A \\oplus B \\oplus C$). Understanding self-duality provides insight into the inherent symmetries within Boolean algebra and helps identify functions with unique structural properties.", "problem": "In digital logic design, the **principle of duality** states that for any given Boolean expression, its dual can be obtained by interchanging the OR (+) and AND ($\\cdot$) operators and by interchanging the identity elements 0 and 1. For a Boolean function $F(x_1, x_2, \\dots, x_n)$, its dual function is denoted as $F^D(x_1, x_2, \\dots, x_n)$.\n\nA Boolean function is called **self-dual** if the function is identical to its own dual, i.e., $F = F^D$.\n\nConsider the three-variable Boolean function $F(A, B, C)$ which represents the odd parity function, defined by the Exclusive OR (XOR) operation: $F(A, B, C) = A \\oplus B \\oplus C$.\n\nBased on the definitions provided, which of the following statements about the function $F(A, B, C)$ is correct?\n\nA. The function is self-dual.\n\nB. The dual of the function, $F^D$, is identical to the complement of the function, $F'$.\n\nC. The dual of the function, $F^D$, is the 3-variable even parity function.\n\nD. The function is not self-dual because its canonical Sum-of-Products (SOP) expression does not have an equal total count of complemented and uncomplemented literals.", "solution": "To determine if the function $F(A, B, C) = A \\oplus B \\oplus C$ is self-dual, we must check if it is equal to its dual, $F^D$. A key identity linking duality and complementation is $F^D(x_1, \\dots, x_n) = [F(x'_1, \\dots, x'_n)]'$. A function is self-dual if $F=F^D$, which is equivalent to the condition $F(x'_1, \\dots, x'_n) = F'(x_1, \\dots, x_n)$. In short, a function is self-dual if complementing all its inputs complements its output.\n\nLet's test this condition for $F(A, B, C) = A \\oplus B \\oplus C$. We evaluate the function with complemented inputs, $F(A', B', C')$:\n$$F(A', B', C') = A' \\oplus B' \\oplus C'$$\nUsing the property that a variable's complement is the variable XORed with 1 (i.e., $X' = X \\oplus 1$):\n$$F(A', B', C') = (A \\oplus 1) \\oplus (B \\oplus 1) \\oplus (C \\oplus 1)$$\nBy the associative and commutative properties of XOR, we can regroup the terms:\n$$F(A', B', C') = (A \\oplus B \\oplus C) \\oplus (1 \\oplus 1 \\oplus 1)$$\nSince $1 \\oplus 1 \\oplus 1 = 1$, and for any Boolean function $G$, $G \\oplus 1 = G'$, the expression becomes:\n$$F(A', B', C') = (A \\oplus B \\oplus C) \\oplus 1 = F'(A, B, C)$$\nThe condition for self-duality is met. Because $F(A', B', C') = F'(A, B, C)$, it follows that $F^D = [F(A', B', C')]' = [F']' = F$. The function is self-dual.\n\n- **A. The function is self-dual.** This statement is correct.\n- **B. The dual of the function, $F^D$, is identical to the complement of the function, $F'$.** This is false, as we found $F^D = F$.\n- **C. The dual of the function, $F^D$, is the 3-variable even parity function.** The even parity function is the complement of the odd parity function ($F'$). Since $F^D = F$, this is false.\n- **D. The function is not self-dual...** This is false because the function is self-dual.\n\nTherefore, the correct choice is A.", "answer": "$$\\boxed{A}$$", "id": "1970562"}]}