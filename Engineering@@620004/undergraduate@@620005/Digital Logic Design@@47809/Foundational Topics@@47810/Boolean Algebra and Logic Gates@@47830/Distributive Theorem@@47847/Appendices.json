{"hands_on_practices": [{"introduction": "A crucial skill in digital logic is the ability to convert Boolean expressions into standard forms, such as the Sum-of-Products (SOP) form. This standardized format simplifies analysis, implementation, and optimization. This first exercise provides foundational practice in applying the distributive law to transform a compact product-of-sums expression into its equivalent SOP representation, a mechanical but essential step in digital design [@problem_id:1930221].", "problem": "In digital logic design, Boolean expressions are often manipulated to achieve a standard form, which simplifies analysis and implementation. One such standard form is the Sum-of-Products (SOP) form. An expression is in SOP form if it is a sum (OR operations) of one or more product terms (AND operations of literals). For instance, $XY' + YZ$ is an SOP expression.\n\nConsider a Boolean function `F` that depends on five input variables: `A`, `B`, `C`, `D`, and `E`. The function is initially represented by the following compact expression:\n\n$$F = (X + Y')(Z + W'V)$$\n\nwhere `X`, `Y`, `Z`, `W`, and `V` are placeholders for the five input variables in alphabetical order, i.e., $X=A$, $Y=B$, $Z=C$, $W=D$, and $V=E$. In this notation, the plus symbol (`+`) denotes the logical OR operation, concatenation of variables (e.g., $W'V$) denotes the logical AND operation, and the prime symbol (e.g., $Y'$) denotes the logical NOT (complement) operation.\n\nConvert the given expression for `F` into its equivalent standard Sum-of-Products (SOP) form.", "solution": "We are given the Boolean function in placeholder form:\n$$F = (X + Y')(Z + W'V),$$\nwith the mapping $X=A$, $Y=B$, $Z=C$, $W=D$, and $V=E$. Substituting these into the expression yields\n$$F = (A + B')(C + D'E).$$\nUsing the distributive law of Boolean algebra, $P(Q+R) = PQ + PR$, distribute over the sum:\n$$(A + B')(C + D'E) = (A + B')C + (A + B')D'E.$$\nApply distributivity again to each product:\n$$(A + B')C = AC + B'C,$$\n$$(A + B')D'E = AD'E + B'D'E.$$\nCombining these results gives the sum of products:\n$$F = AC + B'C + AD'E + B'D'E.$$\nEach term is a product of literals, and the overall expression is a sum (OR) of such products, so this is a valid SOP form equivalent to the original expression.", "answer": "$$\\boxed{AC + B'C + AD'E + B'D'E}$$", "id": "1930221"}, {"introduction": "While expansion can sometimes seem to complicate an expression, it is often a critical intermediate step toward simplification. By applying the distributive law, we can restructure an expression to reveal hidden opportunities for optimization using other Boolean theorems. This practice problem demonstrates how expanding a product-of-sums expression is the key that unlocks simplification via the complement and consensus theorems, leading to a more efficient final logic circuit [@problem_id:1930197].", "problem": "A digital logic system controls an alarm. The system has three inputs: A, B, and C. The output of the circuit, which triggers the alarm, is denoted by $F$. The alarm is activated (output $F$ is logic HIGH) if and only if two specific conditions are met simultaneously:\n1. The first condition is that either input A is HIGH or input B is HIGH.\n2. The second condition is that either input A is LOW or input C is HIGH.\n\nDetermine the simplified Boolean expression for the output $F$ in Sum-of-Products (SOP) form. The expression should only use the input variables A, B, C, the OR operator (+), the AND operator (implied by juxtaposition, e.g., $XY$), and the NOT operator (denoted by a prime, e.g., $A'$).", "solution": "The alarm is HIGH only when two conditions are true simultaneously, so the output is the logical AND of those conditions. Translating each condition into Boolean algebra:\n\n- “Either input A is HIGH or input B is HIGH” is represented by the sum $(A + B)$.\n- “Either input A is LOW or input C is HIGH” is represented by $(A' + C)$.\n\nSince both must hold at the same time, the output is their product:\n$$\nF = (A + B)(A' + C).\n$$\n\nExpand using distributivity:\n$$\n(A + B)(A' + C) = AA' + AC + BA' + BC.\n$$\n\nApply the complement law $AA' = 0$ and commutativity of AND to write $BA' = A'B$:\n$$\nF = AC + A'B + BC.\n$$\n\nUse the consensus theorem, $XY + X'Z + YZ = XY + X'Z$, with $X = A$, $Y = C$, and $Z = B$, to eliminate the redundant term $BC$:\n$$\nF = AC + A'B.\n$$\n\nThus, the simplified SOP expression is $A'B + AC$.", "answer": "$$\\boxed{A'B+AC}$$", "id": "1930197"}, {"introduction": "True mastery of a concept involves not just knowing how to apply it, but also recognizing when it is being applied incorrectly. The distributive property has two distinct forms, $X(Y+Z) = XY+XZ$ and $X+YZ = (X+Y)(X+Z)$, and confusing them is a common pitfall. This exercise challenges you to act as a reviewer, sharpening your analytical skills by identifying the precise logical error in a sequence of simplification steps, thereby reinforcing a robust understanding of Boolean algebra's fundamental rules [@problem_id:1930234].", "problem": "A student in an introductory digital logic course is simplifying the Boolean expression $F(A, B, C) = (A+B)(A+C)$. The student's recorded transitions are listed below. Your task is to review the work and identify the transition where the first logical error is made.\n\nThe expression from the start of the transition is on the left of the arrow, and the resulting expression is on the right.\n\nA. $(A+B)(A+C) \\quad \\rightarrow \\quad A \\cdot A + A \\cdot C + B \\cdot A + B \\cdot C$\n\nB. $A \\cdot A + A \\cdot C + B \\cdot A + B \\cdot C \\quad \\rightarrow \\quad A + A \\cdot C + A \\cdot B + B \\cdot C$\n\nC. $A + A \\cdot C + A \\cdot B + B \\cdot C \\quad \\rightarrow \\quad A + B \\cdot C$\n\nD. $A + B \\cdot C \\quad \\rightarrow \\quad (A \\cdot B)(A \\cdot C)$\n\nWhich of the options (A, B, C, or D) represents the first incorrect step in the simplification process?", "solution": "We analyze each transition using Boolean algebra laws, explicitly stating the principles used, to find the first incorrect step.\n\nStart with $F(A,B,C) = (A+B)(A+C)$.\n\nCheck A: $(A+B)(A+C) \\rightarrow A\\cdot A + A\\cdot C + B\\cdot A + B\\cdot C$.\nJustification: Distributive law (FOIL) for OR over AND: $(X+Y)(U+V) = XU + XV + YU + YV$. Applying with $X=A$, $Y=B$, $U=A$, $V=C$ yields $A\\cdot A + A\\cdot C + B\\cdot A + B\\cdot C$. This is correct.\n\nCheck B: $A\\cdot A + A\\cdot C + B\\cdot A + B\\cdot C \\rightarrow A + A\\cdot C + A\\cdot B + B\\cdot C$.\nJustification: Idempotent law for AND: $X\\cdot X = X$ gives $A\\cdot A = A$. Commutativity of AND: $B\\cdot A = A\\cdot B$. No other changes made. This is correct.\n\nCheck C: $A + A\\cdot C + A\\cdot B + B\\cdot C \\rightarrow A + B\\cdot C$.\nJustification: Absorption law: $X + X\\cdot Y = X$. Apply twice:\n- $A + A\\cdot C = A$.\n- $A + A\\cdot B = A$.\nThus $A + A\\cdot C + A\\cdot B + B\\cdot C = A + B\\cdot C$. This is correct.\n\nCheck D: $A + B\\cdot C \\rightarrow (A\\cdot B)(A\\cdot C)$.\nTest by algebraic equivalence:\n- The correct distributive factorization is $A + B\\cdot C = (A + B)(A + C)$ (known identity: $X + YZ = (X+Y)(X+Z)$).\n- The given right-hand side simplifies as $(A\\cdot B)(A\\cdot C) = A\\cdot A\\cdot B\\cdot C = A\\cdot B\\cdot C$ by idempotent law $A\\cdot A = A$.\nSince $A + B\\cdot C \\neq A\\cdot B\\cdot C$ in general (for example, if $A=1$ then $A + B\\cdot C = 1$ for any $B,C$, while $A\\cdot B\\cdot C = B\\cdot C$, which can be $0$), this step is incorrect.\n\nTherefore, the first incorrect step is D.", "answer": "$$\\boxed{D}$$", "id": "1930234"}]}