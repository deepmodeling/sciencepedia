{"hands_on_practices": [{"introduction": "Understanding how a sequential circuit evolves over time is a fundamental skill. This first exercise provides hands-on practice in state-by-state analysis by asking you to trace the operation of a simple synchronous counter built from JK flip-flops. By applying the flip-flop's characteristic equation at each clock cycle, you will witness how these memory elements interact to produce a predictable sequence of states, a core behavior of digital systems like timers and program counters. [@problem_id:1908359]", "problem": "A synchronous sequential circuit is constructed using two positive edge-triggered JK flip-flops, denoted as FF1 and FF0. The outputs of these flip-flops are $Q_1$ and $Q_0$, respectively. The circuit's state is defined by the binary value $Q_1Q_0$.\n\nThe inputs to the flip-flops are configured as follows:\n- For FF0: The inputs are tied to a constant logic high, so $J_0 = 1$ and $K_0 = 1$.\n- For FF1: The inputs are connected to the output of FF0, so $J_1 = Q_0$ and $K_1 = Q_0$.\n\nThe behavior of a JK flip-flop is described by its characteristic equation, $Q_{\\text{next}} = J\\overline{Q} + \\overline{K}Q$, where $Q$ is the current state and $Q_{\\text{next}}$ is the state after a clock edge.\n\nAssuming the circuit is initialized to the state $Q_1Q_0 = 00$, determine the sequence of states the circuit will pass through over the first four consecutive clock pulses. The sequence should show the initial state, followed by the state after each of the four pulses.\n\nA. $00 \\rightarrow 01 \\rightarrow 10 \\rightarrow 11 \\rightarrow 00$\n\nB. $00 \\rightarrow 11 \\rightarrow 10 \\rightarrow 01 \\rightarrow 00$\n\nC. $00 \\rightarrow 10 \\rightarrow 01 \\rightarrow 11 \\rightarrow 00$\n\nD. $00 \\rightarrow 01 \\rightarrow 10 \\rightarrow 01 \\rightarrow 10$", "solution": "The JK flip-flop characteristic equation is $Q_{\\text{next}} = J\\overline{Q} + \\overline{K}Q$. Both flip-flops are positive edge-triggered, so both $Q_{1}$ and $Q_{0}$ update simultaneously from the present-state values at each rising edge.\n\nFor FF0, $J_{0} = 1$ and $K_{0} = 1$, so\n$$\nQ_{0}^{+} = 1 \\cdot \\overline{Q_{0}} + \\overline{1} \\cdot Q_{0} = \\overline{Q_{0}}.\n$$\nThus $Q_{0}$ toggles on every clock.\n\nFor FF1, $J_{1} = Q_{0}$ and $K_{1} = Q_{0}$, so\n$$\nQ_{1}^{+} = Q_{0}\\,\\overline{Q_{1}} + \\overline{Q_{0}}\\,Q_{1},\n$$\nwhich equals $Q_{0} \\oplus Q_{1}$, meaning $Q_{1}$ toggles if and only if $Q_{0}=1$, and holds when $Q_{0}=0$.\n\nStarting from the initial state $Q_{1}Q_{0} = 00$:\n\n- After the first clock pulse (present $Q_{1}Q_{0} = 00$):\n$$\nQ_{0}^{+} = \\overline{0} = 1,\\quad Q_{1}^{+} = 0 \\cdot \\overline{0} + \\overline{0} \\cdot 0 = 0 \\cdot 1 + 1 \\cdot 0 = 0,\n$$\nso the next state is $01$.\n\n- After the second clock pulse (present $Q_{1}Q_{0} = 01$):\n$$\nQ_{0}^{+} = \\overline{1} = 0,\\quad Q_{1}^{+} = 1 \\cdot \\overline{0} + \\overline{1} \\cdot 0 = 1 \\cdot 1 + 0 \\cdot 0 = 1,\n$$\nso the next state is $10$.\n\n- After the third clock pulse (present $Q_{1}Q_{0} = 10$):\n$$\nQ_{0}^{+} = \\overline{0} = 1,\\quad Q_{1}^{+} = 0 \\cdot \\overline{1} + \\overline{0} \\cdot 1 = 0 \\cdot 0 + 1 \\cdot 1 = 1,\n$$\nso the next state is $11$.\n\n- After the fourth clock pulse (present $Q_{1}Q_{0} = 11$):\n$$\nQ_{0}^{+} = \\overline{1} = 0,\\quad Q_{1}^{+} = 1 \\cdot \\overline{1} + \\overline{1} \\cdot 1 = 1 \\cdot 0 + 0 \\cdot 1 = 0,\n$$\nso the next state is $00$.\n\nTherefore, the sequence over the initial state and four consecutive pulses is $00 \\rightarrow 01 \\rightarrow 10 \\rightarrow 11 \\rightarrow 00$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1908359"}, {"introduction": "Sequential circuits can sometimes have behaviors that are simpler than their diagrams suggest. This practice challenges you to analyze a circuit with feedback, where the flip-flop's next state depends on both an external input and its own current state. While you can trace its operation step-by-step, the real insight comes from using Boolean algebra to simplify the next-state logic, revealing a surprisingly simple underlying function. [@problem_id:1908361]", "problem": "A clocked sequential circuit is constructed using a single positive-edge-triggered T flip-flop. The behavior of a T flip-flop is such that its output state $Q$ toggles on the rising edge of a clock pulse if its input $T$ is 1, and holds its current state if $T$ is 0. The input $T$ to this flip-flop is determined by the external synchronous input $X$ and the flip-flop's own current output $Q$. The logical relationship is given by the equation $T = X \\oplus Q$, where the symbol $\\oplus$ denotes the Exclusive OR (XOR) operation.\n\nBefore the first clock pulse, the flip-flop's output is initialized to the state $Q=0$. For the subsequent six clock cycles, the external input $X$ follows the sequence $1, 0, 1, 1, 0, 1$ (i.e., $X=1$ during the first cycle, $X=0$ during the second, and so on).\n\nDetermine the sequence of values for the output $Q$ immediately following the rising edge of each of the 6 consecutive clock pulses. Present your answer as a row matrix containing six binary values, corresponding to the state of $Q$ after clock cycle 1 through clock cycle 6.", "solution": "Let $Q_n$ be the state of the flip-flop output after the $n$-th clock cycle, and $Q_{n-1}$ be the state just before the $n$-th clock cycle. The initial state is given as $Q_0 = 0$. The external input during cycle $n$ is denoted by $X_n$.\n\nThe characteristic equation for a T flip-flop defines its next state, $Q_{next}$, based on its current state, $Q_{current}$, and its T input. The equation is:\n$$Q_{next} = T \\oplus Q_{current}$$\n\nThe problem states that the T input is driven by the logic:\n$$T = X \\oplus Q_{current}$$\n\nWe can substitute the expression for $T$ into the characteristic equation to find a direct relationship between the next state, the current state, and the external input:\n$$Q_{next} = (X \\oplus Q_{current}) \\oplus Q_{current}$$\n\nUsing the associative property of the XOR operation, we can regroup the terms:\n$$Q_{next} = X \\oplus (Q_{current} \\oplus Q_{current})$$\n\nA property of the XOR operation is that any value XORed with itself results in 0 (i.e., $A \\oplus A = 0$). Therefore:\n$$Q_{next} = X \\oplus 0$$\n\nAnother property of XOR is that any value XORed with 0 results in the original value (i.e., $A \\oplus 0 = A$). This simplifies the next-state equation to:\n$$Q_{next} = X$$\n\nThis surprising result shows that the complex-looking circuit arrangement is functionally equivalent to a D flip-flop, where the output simply takes on the value of the input $X$ from the previous cycle. The output after the $n$-th clock pulse, $Q_n$, will be equal to the input during the $n$-th cycle, $X_n$.\n\nAlternatively, we can trace the state of the circuit cycle by cycle without the simplification.\n\n**Initial State:** $Q_0 = 0$.\nInput sequence $(X_1, X_2, X_3, X_4, X_5, X_6) = (1, 0, 1, 1, 0, 1)$.\n\n**Cycle 1:**\n- Current state: $Q_0 = 0$.\n- Input: $X_1 = 1$.\n- Calculate T input: $T_1 = X_1 \\oplus Q_0 = 1 \\oplus 0 = 1$.\n- Calculate next state: $Q_1 = T_1 \\oplus Q_0 = 1 \\oplus 0 = 1$.\n\n**Cycle 2:**\n- Current state: $Q_1 = 1$.\n- Input: $X_2 = 0$.\n- Calculate T input: $T_2 = X_2 \\oplus Q_1 = 0 \\oplus 1 = 1$.\n- Calculate next state: $Q_2 = T_2 \\oplus Q_1 = 1 \\oplus 1 = 0$.\n\n**Cycle 3:**\n- Current state: $Q_2 = 0$.\n- Input: $X_3 = 1$.\n- Calculate T input: $T_3 = X_3 \\oplus Q_2 = 1 \\oplus 0 = 1$.\n- Calculate next state: $Q_3 = T_3 \\oplus Q_2 = 1 \\oplus 0 = 1$.\n\n**Cycle 4:**\n- Current state: $Q_3 = 1$.\n- Input: $X_4 = 1$.\n- Calculate T input: $T_4 = X_4 \\oplus Q_3 = 1 \\oplus 1 = 0$.\n- Calculate next state: $Q_4 = T_4 \\oplus Q_3 = 0 \\oplus 1 = 1$.\n\n**Cycle 5:**\n- Current state: $Q_4 = 1$.\n- Input: $X_5 = 0$.\n- Calculate T input: $T_5 = X_5 \\oplus Q_4 = 0 \\oplus 1 = 1$.\n- Calculate next state: $Q_5 = T_5 \\oplus Q_4 = 1 \\oplus 1 = 0$.\n\n**Cycle 6:**\n- Current state: $Q_5 = 0$.\n- Input: $X_6 = 1$.\n- Calculate T input: $T_6 = X_6 \\oplus Q_5 = 1 \\oplus 0 = 1$.\n- Calculate next state: $Q_6 = T_6 \\oplus Q_5 = 1 \\oplus 0 = 1$.\n\nThe sequence of output states after each of the 6 clock cycles ($Q_1, Q_2, Q_3, Q_4, Q_5, Q_6$) is $(1, 0, 1, 1, 0, 1)$. This matches the input sequence $X$, confirming our earlier simplification.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & 0 & 1 & 1 & 0 & 1 \\end{pmatrix}}$$", "id": "1908361"}, {"introduction": "The ultimate goal of analysis is often to enable design and synthesis. This final practice reverses the perspective: instead of predicting a circuit's behavior from its equations, you are given its complete behavior as a set of observed state transitions. Your task is to work backward, much like a reverse-engineer, to derive the minimal logic equations that implement this behavior, a crucial step in translating a design specification into a physical circuit. [@problem_id:1908326]", "problem": "An engineer is reverse-engineering a proprietary synchronous digital controller. The controller is a 4-state sequential circuit with state variables $Q_1$ and $Q_0$, and a single external input $X$. The circuit operates on a periodic clock, and its behavior is determined by the combinatorial logic that computes the next state, $(Q_1^+, Q_0^+)$, based on the present state, $(Q_1, Q_0)$, and the input $X$.\n\nBy probing the circuit, the engineer has meticulously recorded the state transition for every possible combination of present state and input. The state is represented by the binary value $(Q_1 Q_0)$. The observed transitions, occurring on the rising edge of the clock, are as follows:\n\n*   From present state $(0,0)$ with input $X=0$, the next state is $(0,1)$.\n*   From present state $(0,0)$ with input $X=1$, the next state is $(1,0)$.\n*   From present state $(0,1)$ with input $X=0$, the next state is $(1,1)$.\n*   From present state $(0,1)$ with input $X=1$, the next state is $(0,0)$.\n*   From present state $(1,0)$ with input $X=0$, the next state is $(0,0)$.\n*   From present state $(1,0)$ with input $X=1$, the next state is $(1,1)$.\n*   From present state $(1,1)$ with input $X=0$, the next state is $(1,0)$.\n*   From present state $(1,1)$ with input $X=1$, the next state is $(0,1)$.\n\nBased on these observations, determine the minimal sum-of-products (SOP) expressions for the next-state logic functions, $Q_1^+$ and $Q_0^+$. These functions represent the inputs to the D flip-flops that hold the state variables $Q_1$ and $Q_0$, respectively. In the expressions below, the prime symbol (e.g., $X'$) denotes the logical NOT operation.\n\nA. $Q_1^+ = X'Q_0 + XQ_0'$;  $Q_0^+ = X'Q_1' + XQ_1$\n\nB. $Q_1^+ = X'Q_1' + XQ_1$;  $Q_0^+ = X'Q_0 + XQ_0'$\n\nC. $Q_1^+ = Q_1 Q_0' + X' Q_1' Q_0 + X Q_1' Q_0'$;  $Q_0^+ = X'Q_1' + XQ_1$\n\nD. $Q_1^+ = X'Q_1 + XQ_1'$;  $Q_0^+ = X'Q_0' + XQ_0$\n\nE. $Q_1^+ = X'Q_0' + XQ_0$;  $Q_0^+ = XQ_1'$", "solution": "Let $Q_{1}^{+}$ and $Q_{0}^{+}$ be Boolean functions of $(X, Q_1, Q_0)$. From the eight observed transitions, list the minterms where each next-state bit equals $1$.\n\nFor $Q_{1}^{+}=1$, the cases are: $(X,Q_{1},Q_{0})=(1,0,0),(0,0,1),(1,1,0),(0,1,1)$. Hence\n$$\nQ_{1}^{+}=X Q_{1}' Q_{0}'+X' Q_{1}' Q_{0}+X Q_{1} Q_{0}'+X' Q_{1} Q_{0}.\n$$\nApply Boolean factoring using $A+A'=1$:\n$$\nQ_{1}^{+}=X Q_{0}'(Q_{1}'+Q_{1})+X' Q_{0}(Q_{1}'+Q_{1})=X Q_{0}'+X' Q_{0}.\n$$\n\nFor $Q_{0}^{+}=1$, the cases are: $(X,Q_{1},Q_{0})=(0,0,0),(0,0,1),(1,1,0),(1,1,1)$. Hence\n$$\nQ_{0}^{+}=X' Q_{1}' Q_{0}'+X' Q_{1}' Q_{0}+X Q_{1} Q_{0}'+X Q_{1} Q_{0}.\n$$\nFactor similarly:\n$$\nQ_{0}^{+}=X' Q_{1}'(Q_{0}'+Q_{0})+X Q_{1}(Q_{0}'+Q_{0})=X' Q_{1}'+X Q_{1}.\n$$\n\nThese minimal SOP forms match option A.", "answer": "$$\\boxed{A}$$", "id": "1908326"}]}