{"hands_on_practices": [{"introduction": "Understanding a Johnson counter begins with its most fundamental behavior: the sequence of states it cycles through. This first practice invites you to manually trace the operation of a 5-bit Johnson counter pulse by pulse. By simulating the shift-register action and the unique 'twisted' feedback, you will gain a concrete understanding of how the counter generates its specific state sequence and appreciate its periodic nature, which is the basis for its application in frequency division [@problem_id:1968646].", "problem": "A 5-bit Johnson counter, also known as a twisted-ring counter, is constructed from five D-type flip-flops. The state of the counter is represented by the outputs of the flip-flops, $Q_4 Q_3 Q_2 Q_1 Q_0$, where $Q_4$ is the most significant bit and $Q_0$ is the least significant bit. The counter operates as a shift register where the contents are shifted one position to the right on each active clock pulse. This means the value at $Q_{i}$ moves to $Q_{i-1}$ for $i$ from 4 down to 1. The key feature of the Johnson counter is its feedback mechanism: the data input to the first flip-flop ($D_4$) is the inverted output of the last flip-flop ($\\overline{Q_0}$).\n\nIf the counter is initialized to the state `00000`, determine the binary state of the counter, $Q_4 Q_3 Q_2 Q_1 Q_0$, after exactly 12 clock pulses have occurred. Present your answer as a 5-bit binary string.", "solution": "Let the state at a given clock edge be denoted by $Q_{4}Q_{3}Q_{2}Q_{1}Q_{0}$. The Johnson counter update on each active clock pulse is determined by the shift-right rule and the twisted feedback:\n$$Q_{4}^{+}=\\overline{Q_{0}},\\quad Q_{3}^{+}=Q_{4},\\quad Q_{2}^{+}=Q_{3},\\quad Q_{1}^{+}=Q_{2},\\quad Q_{0}^{+}=Q_{1}.$$\nStarting from the initialized state $Q_{4}Q_{3}Q_{2}Q_{1}Q_{0}=00000$, iterate:\n- After 1 pulse: $Q_{0}=0\\Rightarrow Q_{4}^{+}=1$, and $Q_{3}^{+}Q_{2}^{+}Q_{1}^{+}Q_{0}^{+}=Q_{4}Q_{3}Q_{2}Q_{1}=0000$, hence $10000$.\n- After 2 pulses: from $10000$, $Q_{0}=0\\Rightarrow Q_{4}^{+}=1$, and $Q_{3}^{+}Q_{2}^{+}Q_{1}^{+}Q_{0}^{+}=1000$, hence $11000$.\n- After 3 pulses: $11100$.\n- After 4 pulses: $11110$.\n- After 5 pulses: $11111$.\n- After 6 pulses: $Q_{0}=1\\Rightarrow Q_{4}^{+}=0$, and shift gives $01111$.\n- After 7 pulses: $00111$.\n- After 8 pulses: $00011$.\n- After 9 pulses: $00001$.\n- After 10 pulses: $00000$.\n\nThus the sequence has period $10$. Therefore, after $12$ pulses the state equals the state after $2$ pulses, which is $11000$.", "answer": "$$\\boxed{11000}$$", "id": "1968646"}, {"introduction": "While a Johnson counter is designed to follow a specific cycle, a complete understanding requires exploring what happens when things go wrong. An $N$-bit counter has $2^N$ possible states, but a Johnson counter only uses $2N$ of them; the rest are 'illegal' or unused. This exercise investigates the critical concept of system stability by starting the counter in one of these unused states, forcing you to determine if it will self-correct into the main sequence or become trapped in a separate, unintended loop [@problem_id:1968654].", "problem": "A digital control circuit is implemented using a 3-bit synchronous sequential counter. The circuit is constructed from three D-type flip-flops, whose outputs are denoted as $Q_2$, $Q_1$, and $Q_0$. The circuit is wired as a Johnson counter, where the input to the first flip-flop ($D_2$) is connected to the inverted output of the last flip-flop ($\\overline{Q_0}$), and the remaining connections follow a shift-register pattern: $D_1 = Q_2$ and $D_0 = Q_1$.\n\nDuring startup, a fault causes the counter to enter an illegal or unused state, $Q_2Q_1Q_0 = 010$. The system's synchronous clock pulse continues to drive the counter from this initial state.\n\nWhat is the sequence of states ($Q_2Q_1Q_0$) that the counter will be in after the 1st, 2nd, 3rd, and 4th clock pulses, respectively?\n\nA. $101, 010, 101, 010$\n\nB. $101, 110, 111, 011$\n\nC. $001, 000, 100, 110$\n\nD. $010, 010, 010, 010$\n\nE. $110, 111, 011, 001$", "solution": "A 3-bit Johnson counter built from D flip-flops with connections $D_{2}=\\overline{Q_{0}}$, $D_{1}=Q_{2}$, and $D_{0}=Q_{1}$ has the synchronous next-state equations\n$$\nQ_{2}^{+}=\\overline{Q_{0}},\\quad Q_{1}^{+}=Q_{2},\\quad Q_{0}^{+}=Q_{1}.\n$$\nStarting from the given illegal state $Q_{2}Q_{1}Q_{0}=010$:\n- After the 1st clock: with $(Q_{2},Q_{1},Q_{0})=(0,1,0)$,\n$$\nQ_{2}^{+}=\\overline{0}=1,\\quad Q_{1}^{+}=0,\\quad Q_{0}^{+}=1 \\;\\Rightarrow\\; 101.\n$$\n- After the 2nd clock: with $(Q_{2},Q_{1},Q_{0})=(1,0,1)$,\n$$\nQ_{2}^{+}=\\overline{1}=0,\\quad Q_{1}^{+}=1,\\quad Q_{0}^{+}=0 \\;\\Rightarrow\\; 010.\n$$\n- After the 3rd clock: from $010$ again,\n$$\n101.\n$$\n- After the 4th clock: from $101$ again,\n$$\n010.\n$$\nThus the sequence after the 1st, 2nd, 3rd, and 4th pulses is $101, 010, 101, 010$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1968654"}, {"introduction": "True mastery of a digital component comes not just from analyzing its behavior, but from being able to design it from different building blocks. This final practice challenges you to move from analysis to synthesis. Instead of a given D flip-flop circuit, you will design a Johnson counter using JK flip-flops, deriving the necessary input logic to produce the correct state transitions. This task requires applying your knowledge of flip-flop excitation tables and logic simplification, bridging the gap between abstract state diagrams and concrete circuit implementation [@problem_id:1968640].", "problem": "A synchronous 3-bit Johnson counter is to be designed using JK flip-flops. The state of the counter is represented by the outputs of the flip-flops, denoted as $Q_2, Q_1, Q_0$, where $Q_2$ is the most significant bit. The counter is intended to cycle through the standard Johnson counter sequence.\n\nYour task is to determine the minimal Boolean logic equations for the inputs $J_1$ and $K_1$ of the middle flip-flop (the one with output $Q_1$). The equations for $J_1$ and $K_1$ should be expressed as functions of the present state variables $Q_2, Q_1,$ and $Q_0$. Any states that are not part of the standard 3-bit Johnson counter sequence should be treated as don't-care conditions to simplify the logic.\n\nPresent your final answer as a row matrix containing the two simplified Boolean expressions, with the expression for $J_1$ first, followed by the expression for $K_1$.", "solution": "The goal is to find the minimal logic expressions for the inputs $J_1$ and $K_1$ of the middle flip-flop in a 3-bit Johnson counter built from JK flip-flops.\n\nFirst, we establish the state transition table for a 3-bit Johnson counter. A Johnson counter is a shift register where the inverted output of the last stage is fed back to the input of the first stage. The sequence of states is as follows:\n\nPresent State ($Q_2Q_1Q_0$) -> Next State ($Q_2^+Q_1^+Q_0^+$)\n1. 000 -> 100\n2. 100 -> 110\n3. 110 -> 111\n4. 111 -> 011\n5. 011 -> 001\n6. 001 -> 000\n\nFrom this sequence, we can deduce the next-state equations for a design using D flip-flops:\n$Q_2^+ = \\overline{Q_0}$\n$Q_1^+ = Q_2$\n$Q_0^+ = Q_1$\n\nWe are interested in the inputs to the middle flip-flop, FF1, which has the output $Q_1$. Its next state is given by $Q_1^+ = Q_2$. Our task is to find the inputs $J_1$ and $K_1$ that produce this behavior.\n\nNext, we use the excitation table for a JK flip-flop, which shows the required $J$ and $K$ inputs to achieve a transition from a present state $Q$ to a next state $Q^+$.\n\n| $Q \\to Q^+$ | J | K |\n|:---:|:---:|:---:|\n| $0 \\to 0$   | 0 | X |\n| $0 \\to 1$   | 1 | X |\n| $1 \\to 0$   | X | 1 |\n| $1 \\to 1$   | X | 0 |\n(where 'X' denotes a don't-care condition)\n\nNow, we construct a combined transition and excitation table for the flip-flop FF1. We list all 8 possible present states ($Q_2Q_1Q_0$), the present state of FF1 ($Q_1$), its required next state ($Q_1^+ = Q_2$), and the corresponding required inputs $J_1$ and $K_1$. The states 010 and 101 are not in the Johnson sequence, so their next states and corresponding J/K inputs are don't-cares.\n\n| Present State ($Q_2Q_1Q_0$) | $Q_1$ | $Q_1^+ = Q_2$ | Transition $Q_1 \\to Q_1^+$ | $J_1$ | $K_1$ |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| 000 | 0 | 0 | $0 \\to 0$ | 0 | X |\n| 001 | 0 | 0 | $0 \\to 0$ | 0 | X |\n| 010 (Unused) | 1 | 0 | $1 \\to 0$ | X | 1 |\n| 011 | 1 | 0 | $1 \\to 0$ | X | 1 |\n| 100 | 0 | 1 | $0 \\to 1$ | 1 | X |\n| 101 (Unused) | 0 | 1 | $0 \\to 1$ | 1 | X |\n| 110 | 1 | 1 | $1 \\to 1$ | X | 0 |\n| 111 | 1 | 1 | $1 \\to 1$ | X | 0 |\n\nWith this table, we can use Karnaugh maps (K-maps) to find the minimal expressions for $J_1$ and $K_1$ as functions of $Q_2, Q_1, Q_0$.\n\n**K-map for $J_1$:**\nThe map is populated with the values from the $J_1$ column of our table.\n```\n      Q1Q0\n   Q2   00  01  11  10\n    0    0   0   X   X\n    1    1   1   X   X\n```\nTo find the minimal expression, we group the 1s, using the don't-cares (X) to create larger groups. We can group the two 1s in the bottom row with the two X's in the same row. This group covers the entire row where $Q_2=1$.\nThis grouping gives the simplified expression:\n$J_1 = Q_2$\n\n**K-map for $K_1$:**\nSimilarly, we populate the K-map for $K_1$.\n```\n      Q1Q0\n   Q2   00  01  11  10\n    0    X   X   1   1\n    1    X   X   0   0\n```\nTo find the minimal expression for $K_1$, we need to cover the 1s. A standard minimal Sum-of-Products approach would group the two 1s, resulting in the expression $K_1 = \\overline{Q_2}Q_1$. However, we can often find a simpler overall implementation by assigning the don't-care values strategically. The goal is to find the minimal logic, which usually implies the lowest gate count.\n\nLet's consider the well-known D-to-JK conversion: $J = D$ and $K = \\overline{D}$. For our flip-flop, the equivalent D input is $D_1 = Q_1^+ = Q_2$. This suggests a solution might be $J_1 = Q_2$ and $K_1 = \\overline{Q_2}$. Let's see if this is a valid simplification using our K-map.\n\nTo get $K_1 = \\overline{Q_2}$, we need all cells in the top row ($Q_2=0$) to be 1 and all cells in the bottom row ($Q_2=1$) to be 0.\nOur K-map for $K_1$ is:\n```\n      Q1Q0\n   Q2   00  01  11  10\n    0    X   X   1   1\n    1    X   X   0   0\n```\nIf we assign the don't-cares in the top row ($Q_2=0$) to be 1, and the don't-cares in the bottom row ($Q_2=1$) to be 0, the map becomes:\n```\n      Q1Q0\n   Q2   00  01  11  10\n    0    1   1   1   1\n    1    0   0   0   0\n```\nGrouping the top row gives the term $\\overline{Q_2}$. This covers all the 1s and is a valid simplification. Therefore, the minimal logic expression for $K_1$ is:\n$K_1 = \\overline{Q_2}$\n\nThis solution ($J_1=Q_2, K_1=\\overline{Q_2}$) is simpler than the one derived by only grouping the explicit '1' entries ($J_1=Q_2, K_1=\\overline{Q_2}Q_1$), as it requires only one inverter for $K_1$ versus an inverter and an AND gate.\n\nThus, the minimal logic equations for the middle flip-flop are $J_1 = Q_2$ and $K_1 = \\overline{Q_2}$.", "answer": "$$\\boxed{\\begin{pmatrix} Q_2 & \\overline{Q_2} \\end{pmatrix}}$$", "id": "1968640"}]}