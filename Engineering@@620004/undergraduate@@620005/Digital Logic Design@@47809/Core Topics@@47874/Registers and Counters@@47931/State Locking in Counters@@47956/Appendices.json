{"hands_on_practices": [{"introduction": "The first step in mastering sequential logic design is learning to analyze a circuit's behavior from its mathematical description. This exercise provides a fundamental practice in tracing the state transitions of a 2-bit synchronous counter given its next-state equations. By systematically calculating the next state for every possible current state, you will construct the complete state diagram and identify how a counter can fall into unintended cycles, a crucial skill for debugging and verification [@problem_id:1962210].", "problem": "A 2-bit synchronous counter is designed using two flip-flops, with state bits represented as $(Q_1, Q_0)$. The bit $Q_1$ is the most significant bit. The counter's next state, denoted by $(Q_1^+, Q_0^+)$, is determined by the following logic equations:\n$$ Q_1^+ = \\overline{(Q_1 \\cdot Q_0)} \\quad \\text{and} \\quad Q_0^+ = Q_1 \\oplus Q_0 $$\nHere, the dot $(\\cdot)$ denotes the logical AND operation, the prime or overline $(\\overline{A})$ denotes the logical NOT (inversion) operation, and the symbol $(\\oplus)$ denotes the logical XOR operation.\n\nThe counter can be initialized to any of its possible states. Analyze the state transitions to determine the set of states that form a stable, repeating cycle. Any state that is visited once upon startup but is not part of the repeating sequence should be excluded. Which of the following options correctly describes the states in the stable repeating cycle?\n\nA. The set of states {00, 01, 10, 11}\n\nB. The set of states {01, 10, 11}\n\nC. The set of states {00, 10, 11}\n\nD. The set of states {00, 01, 11}\n\nE. The state {00} is a locked state, and there is a separate cycle involving {01, 10, 11}.", "solution": "We are given the synchronous next-state equations for the two-bit state $(Q_{1},Q_{0})$: $Q_{1}^{+}=\\overline{(Q_{1}\\cdot Q_{0})}$ and $Q_{0}^{+}=Q_{1}\\oplus Q_{0}$.\nWe evaluate the next state for each possible current state.\n\nFor $(Q_{1},Q_{0})=(0,0)$, we compute $Q_{1}\\cdot Q_{0}=0$, hence $Q_{1}^{+}=\\overline{0}=1$, and $Q_{0}^{+}=0\\oplus 0=0$. Therefore $(Q_{1}^{+},Q_{0}^{+})=(1,0)$, i.e., $00\\to 10$.\n\nFor $(Q_{1},Q_{0})=(0,1)$, we compute $Q_{1}\\cdot Q_{0}=0$, hence $Q_{1}^{+}=\\overline{0}=1$, and $Q_{0}^{+}=0\\oplus 1=1$. Therefore $(Q_{1}^{+},Q_{0}^{+})=(1,1)$, i.e., $01\\to 11$.\n\nFor $(Q_{1},Q_{0})=(1,0)$, we compute $Q_{1}\\cdot Q_{0}=0$, hence $Q_{1}^{+}=\\overline{0}=1$, and $Q_{0}^{+}=1\\oplus 0=1$. Therefore $(Q_{1}^{+},Q_{0}^{+})=(1,1)$, i.e., $10\\to 11$.\n\nFor $(Q_{1},Q_{0})=(1,1)$, we compute $Q_{1}\\cdot Q_{0}=1$, hence $Q_{1}^{+}=\\overline{1}=0$, and $Q_{0}^{+}=1\\oplus 1=0$. Therefore $(Q_{1}^{+},Q_{0}^{+})=(0,0)$, i.e., $11\\to 00$.\n\nCollecting the transitions, we have the cycle $00\\to 10\\to 11\\to 00$. The state $01$ maps to $11$ and then enters the same cycle. Therefore, the stable repeating cycle is the set of states $\\{00,10,11\\}$, and $01$ is not part of the repeating sequence.\n\nHence the correct option is C.", "answer": "$$\\boxed{C}$$", "id": "1962210"}, {"introduction": "Beyond analyzing existing circuits, a key engineering task is designing systems that are robust and reliable from the outset. This practice moves from analysis to synthesis, challenging you to design a self-correcting counter. You will determine the necessary logic for a D-type flip-flop input to ensure that if the counter ever enters an unused state, it automatically transitions back to a valid one, a core principle of fault-tolerant design [@problem_id:1962246].", "problem": "A 2-bit synchronous counter is to be designed using two D-type flip-flops. The state of the counter is represented by the ordered pair of flip-flop outputs $(Q_1, Q_0)$, where $Q_1$ represents the most significant bit and $Q_0$ represents the least significant bit. The counter is intended to cycle through the sequence of states: $(0,0) \\rightarrow (0,1) \\rightarrow (1,0) \\rightarrow (0,0)$, and then repeat.\n\nThe state $(1,1)$ is not part of the normal counting sequence. To ensure robust operation, the counter must be self-correcting. This means that if the counter ever enters the unused state $(1,1)$ due to a glitch or an error, it must transition to the reset state $(0,0)$ on the very next active clock edge.\n\nAssuming the inputs to the flip-flops are denoted by $D_1$ and $D_0$ respectively, determine the simplified Boolean logic expression for the input $D_1$. Your expression should be a function of the present state variables $Q_1$ and $Q_0$ and written in a sum-of-products form. Use a bar over a variable to denote logical NOT, a `+` symbol for logical OR, and implicit multiplication for logical AND (e.g., $A\\overline{B} + C$).", "solution": "For a D-type flip-flop, the next state of a flip-flop equals its D input on the active clock edge, so for the most significant bit we have the state equation $Q_{1}^{+} = D_{1}$.\n\nFrom the specified sequence and the self-correcting requirement, the present-to-next state transitions are:\n- $(Q_{1},Q_{0}) = (0,0) \\rightarrow (0,1)$, hence $Q_{1}^{+} = 0$.\n- $(Q_{1},Q_{0}) = (0,1) \\rightarrow (1,0)$, hence $Q_{1}^{+} = 1$.\n- $(Q_{1},Q_{0}) = (1,0) \\rightarrow (0,0)$, hence $Q_{1}^{+} = 0$.\n- $(Q_{1},Q_{0}) = (1,1) \\rightarrow (0,0)$ (self-correction), hence $Q_{1}^{+} = 0$.\n\nTherefore, $D_{1}$ is $1$ only when the present state is $(0,1)$ and is $0$ otherwise. Writing $D_{1}$ as a sum-of-products in terms of $Q_{1}$ and $Q_{0}$, it consists of the single minterm corresponding to $Q_{1}=0$, $Q_{0}=1$: $D_{1} = \\overline{Q_{1}}Q_{0}$.\nThis form satisfies the self-correction requirement since for $(Q_{1},Q_{0})=(1,1)$ it yields $D_{1}=0$, ensuring $Q_{1}^{+}=0$.", "answer": "$$\\boxed{\\overline{Q_{1}}Q_{0}}$$", "id": "1962246"}, {"introduction": "In practical engineering scenarios, designers often need to debug and modify existing circuits that exhibit flaws. This problem simulates such a situation, presenting a modulo-6 counter with a hazardous \"lock-up\" state. Your task is to correct this flaw by deriving the modified logic for a JK flip-flop's input, ensuring the counter becomes self-correcting while preserving its intended operation, highlighting the process of targeted debugging in digital systems [@problem_id:1962219].", "problem": "A digital systems engineer is debugging a 3-bit synchronous counter circuit implemented with JK flip-flops. The counter's state is represented by three bits, $Q_2 Q_1 Q_0$, where $Q_2$ is the Most Significant Bit (MSB) and $Q_0$ is the Least Significant Bit (LSB). The counter was designed to be a modulo-6 counter, cycling through the sequence of states from 0 (binary 000) to 5 (binary 101) and then resetting to 0. The states 6 (110) and 7 (111) are unused in the normal counting sequence.\n\nThe logic equations driving the JK inputs of the flip-flops ($J_2, K_2, J_1, K_1, J_0, K_0$) were implemented as follows, using simplified notation where an overbar denotes the logical NOT (e.g., $\\overline{Q_k}$):\n\n*   $J_2 = Q_1 Q_0$\n*   $K_2 = Q_0$\n*   $J_1 = Q_0$\n*   $K_1 = Q_0$\n*   $J_0 = \\overline{Q_2} + \\overline{Q_1}$\n*   $K_0 = 1$\n\nUpon testing, the engineer discovers a fault: if the counter accidentally powers up or transitions into the unused state 6 (110), it remains locked in that state indefinitely. To correct this hazardous condition, the design must be modified. The correction mandate is that any transition from an unused state should lead to the reset state (000). Specifically, state 6 (110) must transition to 000 on the next clock pulse, and for robustness, state 7 (111) must also transition to 000.\n\nYour task is to determine the corrected, minimal Sum-of-Products (SOP) expression for the logic input $K_1$. The corrected logic must resolve the lock-up issue as specified, while leaving the primary modulo-6 counting sequence (0 through 5) unchanged.", "solution": "We are given a 3-bit synchronous modulo-6 counter using JK flip-flops with state bits $Q_{2}Q_{1}Q_{0}$ and original inputs $J_{2}=Q_{1}Q_{0}$, $K_{2}=Q_{0}$, $J_{1}=Q_{0}$, $K_{1}=Q_{0}$, $J_{0}=\\overline{Q_2}+\\overline{Q_1}$, and $K_{0}=1$.\nWe must correct the design so that any unused state transitions to $000$ on the next clock, specifically enforcing $110\\to 000$ and $111\\to 000$, while keeping the normal modulo-6 sequence unchanged. The task is to find the corrected minimal SOP for $K_{1}$.\n\nFor a JK flip-flop, the excitation requirements for $K$ based on the present and next values of $Q$ are:\n- If $Q=1$ and $Q^{+}=0$, then $K=1$.\n- If $Q=1$ and $Q^{+}=1$, then $K=0$.\n- If $Q=0$, then $K$ is a don't-care (it does not affect $Q^{+}$).\n\nThe intended next-state mapping for the modulo-6 counter extended with the required recovery from unused states is:\n$$\n000\\to 001,\\quad 001\\to 010,\\quad 010\\to 011,\\quad 011\\to 100,\\quad 100\\to 101,\\quad 101\\to 000,\\quad 110\\to 000,\\quad 111\\to 000.\n$$\nExtracting the required values of $K_{1}$ from the $Q_{1}\\to Q_{1}^{+}$ transition for each present state $Q_{2}Q_{1}Q_{0}$:\n- $000$: $Q_1$ goes $0\\to 0$, so $K_{1}=\\text{d}$.\n- $001$: $Q_1$ goes $0\\to 1$, so $K_{1}=\\text{d}$.\n- $010$: $Q_1$ goes $1\\to 1$, so $K_{1}=0$.\n- $011$: $Q_1$ goes $1\\to 0$, so $K_{1}=1$.\n- $100$: $Q_1$ goes $0\\to 0$, so $K_{1}=\\text{d}$.\n- $101$: $Q_1$ goes $0\\to 0$, so $K_{1}=\\text{d}$.\n- $110$: $Q_1$ goes $1\\to 0$, so $K_{1}=1$.\n- $111$: $Q_1$ goes $1\\to 0$, so $K_{1}=1$.\n\nThus, in minterm notation for the present state $(Q_{2}Q_{1}Q_{0})$, we require the following for $K_1$:\n*   Ones: $m(3,6,7)$\n*   Zeros: $m(2)$\n*   Don't-cares: $m(0,1,4,5)$\n\nWe minimize the SOP using these specified values. One minimal cover is obtained by selecting prime implicants:\n- The term $Q_{1}Q_{0}$ covers minterms $m(3,7)$.\n- The term $Q_{1}Q_{2}$ covers minterms $m(6,7)$.\n\nThese two terms together cover all required ones and exclude the required zero at $m(2)$. Therefore, a minimal SOP is $K_{1}=Q_{1}Q_{0}+Q_{1}Q_{2}$.\nThis expression satisfies the design constraints:\n- $K_{1}(010)=0$ and $K_{1}(011)=1$ to preserve the original modulo-6 sequence.\n- $K_{1}(110)=1$ and $K_{1}(111)=1$ to force $Q_{1}\\to 0$ from the unused states on the next clock.\n\nHence, the corrected minimal SOP expression for $K_{1}$ is $Q_{1}Q_{0}+Q_{1}Q_{2}$.", "answer": "$$\\boxed{Q_{1}Q_{0}+Q_{1}Q_{2}}$$", "id": "1962219"}]}