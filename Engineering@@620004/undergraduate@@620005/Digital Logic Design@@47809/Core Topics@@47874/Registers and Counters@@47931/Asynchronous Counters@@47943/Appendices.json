{"hands_on_practices": [{"introduction": "The core characteristic of an asynchronous counter is the 'ripple' effect, where each flip-flop is triggered by the previous one, causing a propagation delay that accumulates through the chain. This hands-on problem asks you to calculate the duration of the incorrect, transient states that appear during a single state transition [@problem_id:1909968]. Mastering this analysis is a fundamental step in understanding the timing limitations and maximum operating frequency of ripple counters.", "problem": "A 3-bit asynchronous ripple down-counter is constructed using negative-edge-triggered JK flip-flops. The outputs are denoted as $Q_2Q_1Q_0$, where $Q_0$ is the least significant bit (LSB). For this implementation, the clock input of each flip-flop (except for the LSB) is driven by the inverted output, $\\bar{Q}$, of the preceding flip-flop. The J and K inputs of all flip-flops are tied to a logic HIGH signal, causing them to toggle on each triggering clock edge. A periodic clock signal is applied to the clock input of the LSB flip-flop. Each flip-flop has an identical propagation delay, $t_{pd} = 12 \\text{ ns}$, from the triggering edge of its clock to the change in its output.\n\nConsider the specific transition where the counter changes from the stable state $Q_2Q_1Q_0 = 100$ to the next stable state in the down-counting sequence. During this transition, the counter may momentarily pass through other binary states due to the ripple effect. These transient states are considered incorrect.\n\nCalculate the total time duration for which the counter displays an incorrect state (i.e., any state other than the initial state $100$ or the final state $011$) during this single transition event. Express your answer in nanoseconds.", "solution": "Because each flip-flop is negative-edge triggered and the clock of stage $i$ ($i \\geq 1$) is driven by $\\bar{Q}$ of stage $i-1$, stage $i$ toggles on a falling edge of $\\bar{Q}_{i-1}$, which occurs when $Q_{i-1}$ makes a $0 \\to 1$ transition. With $J=K=1$, each flip-flop toggles on its triggering clock edge. Let the external clock falling edge arriving at the LSB occur at $t=0$.\n\nInitial stable state is $Q_{2}Q_{1}Q_{0}=100$.\n\nTiming and states through the ripple:\n- At $t=0$, the falling clock edge reaches the LSB. After one propagation delay $t_{pd}$, the LSB toggles: $Q_{0}: 0 \\to 1$. The state becomes $101$. The resulting falling edge on $\\bar{Q}_0$ clocks the middle flip-flop.\n- The middle flip-flop responds after another $t_{pd}$, so at $t=2t_{pd}$ it toggles: $Q_{1}: 0 \\to 1$. The state becomes $111$. The resulting falling edge on $\\bar{Q}_1$ clocks the MSB flip-flop.\n- The MSB responds after another $t_{pd}$, so at $t=3t_{pd}$ it toggles: $Q_{2}: 1 \\to 0$. The state becomes $011$, which is the final stable state for the down-count.\n\nThus, the counter displays incorrect states from the first change at $t=t_{pd}$ (state $101$) until the final correct state is reached at $t=3t_{pd}$ (state $011$). The total incorrect-duration is\n$$\nT_{\\text{incorrect}} = 3t_{pd} - t_{pd} = 2t_{pd}.\n$$\nWith $t_{pd} = 12 \\text{ ns}$,\n$$\nT_{\\text{incorrect}} = 2 \\times 12 = 24.\n$$", "answer": "$$\\boxed{24}$$", "id": "1909968"}, {"introduction": "While ripple counters naturally cycle through $2^N$ states, many applications require custom counting sequences. This practice demonstrates a fundamental design technique: creating a counter with a specific modulus by using combinational logic to trigger an asynchronous reset [@problem_id:1909926]. By working through this exercise, you will learn how to truncate a counter's natural sequence to fit the needs of a specific application, such as creating a decade (modulo-10) counter.", "problem": "A 4-bit binary ripple up-counter is constructed using four flip-flops. The outputs of the flip-flops are denoted as $Q_3, Q_2, Q_1, Q_0$, where $Q_3$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB). The counter is designed to cycle through binary states in increasing order, starting from the state $Q_3Q_2Q_1Q_0 = 0000$.\n\nTo modify the counter's natural sequence, a two-input AND gate is added. The inputs to this AND gate are connected to the counter outputs $Q_3$ and $Q_1$. The output of the AND gate is connected to the global asynchronous CLEAR input of all four flip-flops. A high signal on the CLEAR input immediately forces all flip-flop outputs to 0 (i.e., the counter state becomes $0000$) regardless of the clock signal.\n\nAssuming the counter starts in the state $0000$ and is clocked, what is the modulus of this modified counter? The modulus is defined as the number of unique stable states the counter sequences through before repeating.", "solution": "Let the natural 4-bit ripple up-counter sequence be the ascending sequence of binary states from $0000$ through $1111$. Define the asynchronous clear signal as\n$$\nC = Q_{3} Q_{1}.\n$$\nBy construction, whenever $C=1$, the global CLEAR input is asserted high and immediately forces all flip-flop outputs to $0000$, independent of the clock.\n\nThe condition $C=1$ holds exactly for those states with $Q_{3}=1$ and $Q_{1}=1$, i.e., for the set of states $\\{1x1x\\}$, namely $1010$, $1011$, $1110$, and $1111$. Starting from $0000$ and counting up, the first time this condition is met is upon reaching the state $1010$.\n\nBecause the CLEAR is asynchronous and active high, the state $1010$ does not persist as a stable state; the counter is immediately forced to $0000$ when $1010$ is reached. Therefore, the stable states in each cycle are exactly\n$$\n0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001,\n$$\nafter which the counter attempts to enter $1010$ but is instantly cleared back to $0000$.\n\nHence, the modulus equals the number of unique stable states visited before repeating, which is\n$$\n10.\n$$", "answer": "$$\\boxed{10}$$", "id": "1909926"}, {"introduction": "A critical challenge with asynchronous counters arises when trying to decode specific states, as the inherent ripple effect can lead to hazardous 'glitches' in the logic. This exercise guides you through the analysis of such a scenario, where a decoding gate produces a momentary, false output during a state transition [@problem_id:1909978]. Quantifying the duration of this glitch is essential for designing reliable digital systems and for appreciating why synchronous designs are often preferred in high-speed or hazard-sensitive applications.", "problem": "A 3-bit asynchronous binary up-counter is constructed using three negative-edge-triggered T-type flip-flops. The outputs of the flip-flops are denoted as $Q_2, Q_1, Q_0$, where $Q_2$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB). The external clock signal is connected to the clock input of the flip-flop for $Q_0$. The output of each flip-flop is connected to the clock input of the next more significant flip-flop (i.e., $Q_0$ clocks the flip-flop for $Q_1$, and $Q_1$ clocks the flip-flop for $Q_2$). Each flip-flop has a uniform propagation delay of $t_{p,ff} = 12.0 \\text{ ns}$ from a negative clock edge to a change in its output.\n\nA monitoring circuit is connected to the counter's outputs to generate a signal $Z$. This circuit is intended to produce a HIGH logic level if and only if the counter's state is $Q_2Q_1Q_0 = 000_2$. This function is implemented with a single 3-input NOR gate, which has a propagation delay of $t_{p,gate} = 3.5 \\text{ ns}$. The inputs to this NOR gate are $Q_2, Q_1,$ and $Q_0$.\n\nInitially, the counter is in the stable state $011_2$. At time $t=0$, a negative edge arrives at the external clock input. As the counter transitions towards its next stable state, the monitoring signal $Z$ incorrectly pulses HIGH for a brief period due to the ripple effect.\n\nCalculate the total duration for which the signal $Z$ is HIGH. Express your final answer in nanoseconds, rounded to three significant figures.", "solution": "For a negative-edge-triggered T flip-flop with $T=1$, the output toggles one propagation delay after a negative clock edge at its clock input. With ripple connection, the negative edge propagates from $Q_{0}$ to $Q_{1}$ to $Q_{2}$, each incurring one flip-flop delay $t_{p,ff}$.\n\nLet $t=0$ be the time the external negative clock edge arrives at the $Q_{0}$ flip-flop. With $t_{p,ff}$ the uniform FF delay:\n- $Q_{0}$ toggles at $t=t_{p,ff}$: $1 \\to 0$, so the state becomes $010$.\n- The negative edge at $Q_{0}$ clocks $Q_{1}$ at $t=t_{p,ff}$, so $Q_{1}$ toggles at $t=2t_{p,ff}$: $1 \\to 0$, giving state $000$.\n- The negative edge at $Q_{1}$ clocks $Q_{2}$ at $t=2t_{p,ff}$, so $Q_{2}$ toggles at $t=3t_{p,ff}$: $0 \\to 1$, giving state $100$.\n\nThus, at the inputs of the NOR gate, the vector $Q_{2}Q_{1}Q_{0}$ equals $000$ over the interval\n$$\n[\\,2t_{p,ff},\\,3t_{p,ff}\\,).\n$$\nA 3-input NOR outputs HIGH if and only if all its inputs are LOW. Including the NOR gate delay $t_{p,gate}$, the output $Z$ goes HIGH at $t=2t_{p,ff}+t_{p,gate}$ and returns LOW at $t=3t_{p,ff}+t_{p,gate}$. Therefore, the HIGH pulse width at $Z$ is\n$$\nt_{\\text{HIGH}}=(3t_{p,ff}+t_{p,gate})-(2t_{p,ff}+t_{p,gate})=t_{p,ff}.\n$$\nSubstituting the given value $t_{p,ff}=12.0 \\text{ ns}$,\n$$\nt_{\\text{HIGH}}=12.0 \\text{ ns}.\n$$\nRounded to three significant figures, the duration remains $12.0$.", "answer": "$$\\boxed{12.0}$$", "id": "1909978"}]}