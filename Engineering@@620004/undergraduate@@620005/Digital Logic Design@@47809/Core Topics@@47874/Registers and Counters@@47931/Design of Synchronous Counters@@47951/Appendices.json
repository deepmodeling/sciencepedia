{"hands_on_practices": [{"introduction": "This first practice exercise provides a foundational experience in synchronous counter design. You will implement a custom counting sequence using D flip-flops, which are the simplest to work with as their inputs directly define the next state ($D = Q_{\\text{next}}$). This problem [@problem_id:1928988] emphasizes the core workflow: translating a state diagram into next-state logic and using \"don't care\" conditions from unused states to simplify the final circuit.", "problem": "A digital system requires a specialized counter to cycle through a specific sequence of odd numbers. You are tasked with designing a synchronous state machine using positive-edge-triggered D flip-flops that implements this counter. The counter must follow the repeating decimal sequence: $1 \\rightarrow 3 \\rightarrow 5 \\rightarrow 7 \\rightarrow 1 \\rightarrow \\dots$.\n\nThe state of the counter is represented by three bits, $Q_2, Q_1, Q_0$, where $Q_2$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB). The numerical value of the state is given by $4Q_2 + 2Q_1 + Q_0$. The inputs to the three D flip-flops are denoted by $D_2, D_1, D_0$.\n\nYour task is to determine the set of simplified Boolean expressions for the flip-flop inputs ($D_2, D_1, D_0$) as functions of the present state variables ($Q_2, Q_1, Q_0$). The unused states (0, 2, 4, 6) should be treated as \"don't care\" conditions to achieve the simplest possible sum-of-products expressions. Boolean negation (NOT) is represented by a prime (e.g., $Q'$) and logical OR is represented by a plus sign (+). Logical AND is represented by juxtaposition (e.g., $AB$).\n\nWhich of the following options represents the correct set of simplified input equations for the D flip-flops?\n\nA. $D_2 = Q_2'Q_1 + Q_2Q_1'$; $\\quad D_1 = Q_1'$; $\\quad D_0 = 1$\n\nB. $D_2 = Q_1$; $\\quad D_1 = Q_0'$; $\\quad D_0 = Q_1$\n\nC. $D_2 = Q_2'Q_1Q_0 + Q_2Q_1'Q_0$; $\\quad D_1 = Q_1'$; $\\quad D_0 = 1$\n\nD. $D_2 = Q_2'Q_1 + Q_2Q_1'$; $\\quad D_1 = Q_1'Q_0$; $\\quad D_0 = 1$\n\nE. $D_2 = Q_2'Q_1 + Q_2Q_1'$; $\\quad D_1 = Q_1'$; $\\quad D_0 = Q_0$", "solution": "We design a synchronous counter with states encoded as three bits $(Q_{2},Q_{1},Q_{0})$ representing the decimal values $1,3,5,7$ with transitions $1\\to 3\\to 5\\to 7\\to 1$. For positive-edge-triggered D flip-flops, each input $D_{i}$ equals the next-state bit $Q_{i}^{+}$ expressed as a Boolean function of the present-state bits $(Q_{2},Q_{1},Q_{0})$. The unused states $0,2,4,6$ are treated as don't cares to allow simplification.\n\nFirst, write the present-to-next mapping for the used states:\n- State $1\\equiv 001$ goes to $3\\equiv 011$, so $(Q_{2}^{+},Q_{1}^{+},Q_{0}^{+})=(0,1,1)$.\n- State $3\\equiv 011$ goes to $5\\equiv 101$, so $(Q_{2}^{+},Q_{1}^{+},Q_{0}^{+})=(1,0,1)$.\n- State $5\\equiv 101$ goes to $7\\equiv 111$, so $(Q_{2}^{+},Q_{1}^{+},Q_{0}^{+})=(1,1,1)$.\n- State $7\\equiv 111$ goes to $1\\equiv 001$, so $(Q_{2}^{+},Q_{1}^{+},Q_{0}^{+})=(0,0,1)$.\n\nThus for the used states:\n- $D_{0}=Q_{0}^{+}=1$ in all four used states. With all unused states as don't care, the simplest sum-of-products is the constant\n$$\nD_{0}=1.\n$$\n- $D_{1}=Q_{1}^{+}$ takes values $1,0,1,0$ at present states $001,011,101,111$, respectively. This matches the complement of $Q_{1}$ regardless of $Q_{2}$ and $Q_{0}$, hence\n$$\nD_{1}=Q_{1}'.\n$$\n- $D_{2}=Q_{2}^{+}$ is $0,1,1,0$ at present states $001,011,101,111$, respectively. The minterms where $D_{2}=1$ among used states are $Q_{2}'Q_{1}Q_{0}$ and $Q_{2}Q_{1}'Q_{0}$. Treating all states with $Q_{0}=0$ (i.e., $0,2,4,6$) as don't cares allows grouping across $Q_{0}$ to eliminate $Q_{0}$, yielding the simplified expression\n$$\nD_{2}=Q_{2}'Q_{1}+Q_{2}Q_{1}'.\n$$\n\nCollecting the simplified equations:\n$$\nD_{2}=Q_{2}'Q_{1}+Q_{2}Q_{1}',\\quad D_{1}=Q_{1}',\\quad D_{0}=1.\n$$\nThese correspond to option A.", "answer": "$$\\boxed{A}$$", "id": "1928988"}, {"introduction": "Building on the basics, this exercise introduces two important real-world features: control inputs and a standard counting scheme. You will design a bidirectional Binary-Coded Decimal (BCD) counter controlled by 'Up' and 'Down' signals, a common component in digital displays and timers. This task [@problem_id:1928976] requires a shift in thinking to accommodate T flip-flops, where the design focus is on determining the conditions under which each state bit must toggle ($T=1$).", "problem": "A crucial component of a new precision digital multimeter is a synchronous counter responsible for driving a single-digit display. The counter must represent decimal digits from 0 to 9, a pattern known as Binary-Coded Decimal (BCD). The counter's state is stored in four T-type flip-flops, with outputs denoted as $Q_8, Q_4, Q_2, Q_1$, where $Q_8$ is the most significant bit (MSB) and $Q_1$ is the least significant bit (LSB).\n\nThe counter has two control inputs, `U` (for Up) and `D` (for Down). Its behavior is defined as follows:\n- If $U=1$ and $D=0$, the counter increments its value on the next clock pulse (e.g., from 3 to 4, or from 9 to 0).\n- If $U=0$ and $D=1$, the counter decrements its value on the next clock pulse (e.g., from 7 to 6, or from 0 to 9).\n- For all other combinations of $U$ and $D$ (i.e., $U=D=0$ or $U=D=1$), the counter must hold its current state.\n\nYour task is to determine the minimized Boolean logic expression for the input $T_2$ of the flip-flop corresponding to the state bit $Q_2$. Select the correct expression from the options below.\n\nA. $U\\bar{D}\\bar{Q_8}Q_1 + \\bar{U}D\\bar{Q_1}$\n\nB. $U\\bar{D}Q_1 + \\bar{U}D(Q_8 + Q_4 + Q_2)\\bar{Q_1}$\n\nC. $U\\bar{D}Q_1 + \\bar{U}D\\bar{Q_1}$\n\nD. $U\\bar{D}\\bar{Q_8}Q_1 + \\bar{U}D(Q_8 + Q_4 + Q_2)\\bar{Q_1}$\n\nE. $U\\bar{D}(Q_8+Q_1) + \\bar{U}D(\\bar{Q_8}+\\bar{Q_1})$", "solution": "A T-type flip-flop toggles its output on a clock edge if and only if its input $T$ is $1$. Thus, for the bit $Q_{2}$, the required input is $1$ if and only if $Q_{2}^{+} \\neq Q_{2}$.\nThe counter holds its state when $U=D=0$ or $U=D=1$, so $T_{2}$ must be $0$ in those cases. Therefore, $T_{2}$ must be gated by the valid count-direction conditions:\n$$\nT_{2} = U\\bar{D}\\,T_{2}^{(\\text{up})} + \\bar{U}D\\,T_{2}^{(\\text{down})}.\n$$\n\nUp counting ($U=1$, $D=0$): In an ordinary binary up-counter, the $2$’s bit toggles when $Q_{1}=1$. For BCD modulo-$10$, this holds for states $1,3,5,7$ but not for the wrap $9 \\to 0$, where $Q_{1}=1$ yet $Q_{2}$ does not toggle. State $9$ is $Q_{8}Q_{4}Q_{2}Q_{1}=1\\,0\\,0\\,1$. Hence\n$$\nT_{2}^{(\\text{up})} = Q_{1} \\cdot \\overline{Q_{8}\\bar{Q}_{4}\\bar{Q}_{2}Q_{1}}.\n$$\nExpanding the complement,\n$$\n\\overline{Q_{8}\\bar{Q}_{4}\\bar{Q}_{2}Q_{1}} = \\bar{Q}_{8} + Q_{4} + Q_{2} + \\bar{Q}_{1},\n$$\nso\n$$\nT_{2}^{(\\text{up})} = Q_{1}(\\bar{Q}_{8} + Q_{4} + Q_{2} + \\bar{Q}_{1}) = Q_{1}\\bar{Q}_{8} + Q_{1}Q_{4} + Q_{1}Q_{2}.\n$$\nOver the valid BCD states, the only case with $Q_{1}=1$ and $Q_{8}=1$ is state $9$, where $Q_{4}=0$ and $Q_{2}=0$, so the latter two terms vanish. Thus, a minimized form consistent with the valid BCD states is\n$$\nT_{2}^{(\\text{up})} = \\bar{Q}_{8}Q_{1}.\n$$\n\nDown counting ($U=0$, $D=1$): In an ordinary binary down-counter, the $2$’s bit toggles when $Q_{1}=0$. For BCD modulo-$10$, this holds except at the wrap $0 \\to 9$, where $Q_{1}=0$ but $Q_{2}$ does not toggle. State $0$ is $0000$, so “not at $0$” is $(Q_{8}+Q_{4}+Q_{2}+Q_{1})$. Therefore,\n$$\nT_{2}^{(\\text{down})} = \\bar{Q}_{1}\\cdot (Q_{8}+Q_{4}+Q_{2}+Q_{1}) = (Q_{8}+Q_{4}+Q_{2})\\bar{Q}_{1}.\n$$\n\nCombining the two modes with the gating by $U$ and $D$,\n$$\nT_{2} = U\\bar{D}\\,\\bar{Q}_{8}Q_{1} + \\bar{U}D\\,(Q_{8}+Q_{4}+Q_{2})\\bar{Q}_{1},\n$$\nwhich matches option D.", "answer": "$$\\boxed{D}$$", "id": "1928976"}, {"introduction": "This final challenge tests your ingenuity by imposing a significant design constraint: you must implement a specific non-binary sequence using only JK flip-flops without any external logic gates. The problem [@problem_id:1928998] forces you to leverage the full versatility of the JK flip-flop, whose inputs can be configured to hold, set, reset, or toggle the state. Mastering this type of resource-constrained design is a hallmark of an efficient digital engineer.", "problem": "A 2-bit synchronous counter is to be designed using only two JK flip-flops, FF1 and FF0, with outputs $Q_1$ and $Q_0$ respectively, where $Q_1$ serves as the most significant bit. The counter must cycle through a specific, non-sequential state sequence: starting from $00$, it proceeds to $11$, then to $01$, then to $10$, and finally returns to $00$ to repeat the cycle.\n\nThe design is constrained such that no external logic gates (e.g., AND, OR, NOT) are permitted. The inputs to the flip-flops ($J_1, K_1, J_0, K_0$) can only be connected to logic HIGH (represented as `1`), logic LOW (represented as `0`), or the outputs and their complements from the flip-flops themselves (i.e., $Q_1, \\overline{Q_1}, Q_0, \\overline{Q_0}$).\n\nWhich of the following sets of input equations correctly implements the required counter under these constraints?\n\nA. $J_1=1, K_1=1, J_0=\\overline{Q_1}, K_0=\\overline{Q_1}$\n\nB. $J_1=1, K_1=1, J_0=Q_1, K_0=Q_1$\n\nC. $J_1=Q_0, K_1=Q_0, J_0=1, K_0=1$\n\nD. $J_1=\\overline{Q_0}, K_1=\\overline{Q_0}, J_0=\\overline{Q_1}, K_0=\\overline{Q_1}$\n\nE. $J_1=1, K_1=1, J_0=Q_0, K_0=\\overline{Q_0}$", "solution": "Let the present state be $(Q_{1},Q_{0})$ and the required next state sequence be $00 \\to 11 \\to 01 \\to 10 \\to 00$. For JK flip-flops, the characteristic equation is\n$$\nQ^{+}=J\\,\\overline{Q}+\\overline{K}\\,Q,\n$$\nand the toggle condition is $J=K=1$, while the hold condition is $J=K=0$.\n\nDetermine the required action for each flip-flop at each present state:\n- $00 \\to 11$: $Q_{1}$ toggles, $Q_{0}$ toggles.\n- $11 \\to 01$: $Q_{1}$ toggles, $Q_{0}$ holds.\n- $01 \\to 10$: $Q_{1}$ toggles, $Q_{0}$ toggles.\n- $10 \\to 00$: $Q_{1}$ toggles, $Q_{0}$ holds.\n\nThus, $Q_{1}$ must toggle in every state, so choose\n$$\nJ_{1}=1,\\quad K_{1}=1.\n$$\n$Q_{0}$ must toggle exactly when $Q_{1}=0$ (states $00$ and $01$) and hold when $Q_{1}=1$ (states $11$ and $10$), so choose\n$$\nJ_{0}=\\overline{Q_{1}},\\quad K_{0}=\\overline{Q_{1}}.\n$$\n\nVerify using the characteristic equations:\n- For $Q_{1}$: with $J_{1}=K_{1}=1$, $Q_{1}^{+}=1\\cdot\\overline{Q_{1}}+0\\cdot Q_{1}=\\overline{Q_{1}}$, i.e., always toggles.\n- For $Q_{0}$: with $J_{0}=K_{0}=\\overline{Q_{1}}$, \n$$\nQ_{0}^{+}=\\overline{Q_{1}}\\cdot\\overline{Q_{0}}+\\overline{\\overline{Q_{1}}}\\cdot Q_{0}=\\overline{Q_{1}}\\cdot\\overline{Q_{0}}+Q_{1}\\cdot Q_{0},\n$$\nwhich yields $Q_{0}^{+}=\\overline{Q_{0}}$ when $Q_{1}=0$ and $Q_{0}^{+}=Q_{0}$ when $Q_{1}=1$, matching the required behavior.\n\nState-by-state check:\n- From $00$: $Q_{1}^{+}=1$, $Q_{0}^{+}=1$ gives $11$.\n- From $11$: $Q_{1}^{+}=0$, $Q_{0}^{+}=1$ gives $01$.\n- From $01$: $Q_{1}^{+}=1$, $Q_{0}^{+}=0$ gives $10$.\n- From $10$: $Q_{1}^{+}=0$, $Q_{0}^{+}=0$ gives $00$.\n\nThis exactly implements the required cycle and uses only $1$, $0$, and complements of flip-flop outputs, satisfying the constraints. Therefore, the correct choice is option A.", "answer": "$$\\boxed{A}$$", "id": "1928998"}]}