{"hands_on_practices": [{"introduction": "To truly understand how bidirectional shift registers manipulate data, we must begin by tracing their operation step-by-step. This first practice exercise asks you to track the contents of a 4-bit register through a sequence of both shift-right and shift-left operations. By manually following the data flow, you will solidify your understanding of the core mechanics that underpin all shift register applications. [@problem_id:1913058]", "problem": "A 4-bit bidirectional shift register holds the binary value `1011`. The bits are labeled $Q_3 Q_2 Q_1 Q_0$, where $Q_3$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB). The register is subjected to a sequence of three clock pulses. The operations are as follows:\n1.  On the first clock pulse, a shift-right operation is performed.\n2.  On the second clock pulse, a shift-left operation is performed.\n3.  On the third clock pulse, another shift-left operation is performed.\n\nFor a shift-right operation, the serial input is fed into the MSB ($Q_3$), and the content of $Q_i$ is transferred to $Q_{i-1}$ for $i = 3, 2, 1$. For a shift-left operation, the serial input is fed into the LSB ($Q_0$), and the content of $Q_i$ is transferred to $Q_{i+1}$ for $i = 0, 1, 2$. For all operations, the serial input is a constant logical '0'.\n\nDetermine the 4-bit binary value stored in the register after this sequence of three operations. Present your answer as a 4-bit binary string.", "solution": "Let the register state after the $k$-th clock be denoted $Q_{3}^{(k)}Q_{2}^{(k)}Q_{1}^{(k)}Q_{0}^{(k)}$, with initial state $Q_{3}^{(0)}Q_{2}^{(0)}Q_{1}^{(0)}Q_{0}^{(0)}=1011$. The serial input is $0$ for all operations.\n\nFor a shift-right operation, the update rule is:\n$$\nQ_{3}^{+}=0,\\quad Q_{2}^{+}=Q_{3},\\quad Q_{1}^{+}=Q_{2},\\quad Q_{0}^{+}=Q_{1}.\n$$\nApplying this to the initial state gives:\n$$\nQ_{3}^{(1)}=0,\\quad Q_{2}^{(1)}=1,\\quad Q_{1}^{(1)}=0,\\quad Q_{0}^{(1)}=1 \\;\\Rightarrow\\; Q^{(1)}=0101.\n$$\n\nFor a shift-left operation, the update rule is:\n$$\nQ_{0}^{+}=0,\\quad Q_{1}^{+}=Q_{0},\\quad Q_{2}^{+}=Q_{1},\\quad Q_{3}^{+}=Q_{2}.\n$$\nApplying this to $Q^{(1)}=0101$ yields:\n$$\nQ_{3}^{(2)}=Q_{2}^{(1)}=1,\\quad Q_{2}^{(2)}=Q_{1}^{(1)}=0,\\quad Q_{1}^{(2)}=Q_{0}^{(1)}=1,\\quad Q_{0}^{(2)}=0 \\;\\Rightarrow\\; Q^{(2)}=1010.\n$$\n\nApplying a second shift-left to $Q^{(2)}=1010$:\n$$\nQ_{3}^{(3)}=Q_{2}^{(2)}=0,\\quad Q_{2}^{(3)}=Q_{1}^{(2)}=1,\\quad Q_{1}^{(3)}=Q_{0}^{(2)}=0,\\quad Q_{0}^{(3)}=0 \\;\\Rightarrow\\; Q^{(3)}=0100.\n$$\n\nTherefore, after the three operations, the register holds the 4-bit value $0100$.", "answer": "$$\\boxed{0100}$$", "id": "1913058"}, {"introduction": "While basic shift operations are fundamental, practical applications require more flexibility, which is provided by the universal shift register. This component uses mode control inputs to select from various functions, such as shifting, holding data, or parallel loading. This problem focuses on the parallel load operation, a crucial feature for initializing the register with a specific value in a single clock cycle. [@problem_id:1913045]", "problem": "A 4-bit universal shift register is a fundamental component in digital systems for data manipulation. It can perform several operations based on two mode control inputs, $S_1$ and $S_0$. The register has four parallel data outputs, $Q_3, Q_2, Q_1, Q_0$, which represent its current state. Its functionality is defined as follows:\n\n- If $S_1S_0 = 00$, the register holds its current state (No Change).\n- If $S_1S_0 = 01$, the register performs a logical shift right. The data shifts from $Q_k$ to $Q_{k-1}$, and a serial input, $SRI$, is loaded into $Q_3$.\n- If $S_1S_0 = 10$, the register performs a logical shift left. The data shifts from $Q_k$ to $Q_{k+1}$, and a serial input, $SLI$, is loaded into $Q_0$.\n- If $S_1S_0 = 11$, the register performs a parallel load. The data from four parallel inputs, $I_3, I_2, I_1, I_0$, is loaded into the register.\n\nAssume the register is synchronous and all state changes occur on the rising edge of a clock signal.\n\nThe register is currently in the state $Q_3Q_2Q_1Q_0 = 0110$. For the next clock cycle, the mode control inputs are set to $S_1S_0 = 11$, and the parallel data inputs are set to $I_3I_2I_1I_0 = 1100$. The serial inputs are $SRI=0$ and $SLI=1$.\n\nWhat will be the state of the register ($Q_3Q_2Q_1Q_0$) immediately after the next rising clock edge?\n\nA. 0110\n\nB. 0011\n\nC. 1100\n\nD. 1110\n\nE. 0100", "solution": "Let $Q_{k}^{+}$ denote the value of bit $Q_{k}$ immediately after the next rising clock edge. For a 4-bit universal shift register, the synchronous next-state relation is\n$$\n(Q_{3}^{+},Q_{2}^{+},Q_{1}^{+},Q_{0}^{+})=\n\\begin{cases}\n(Q_{3},Q_{2},Q_{1},Q_{0}), & S_{1}S_{0}=00,\\\\\n(SRI,Q_{3},Q_{2},Q_{1}), & S_{1}S_{0}=01,\\\\\n(Q_{2},Q_{1},Q_{0},SLI), & S_{1}S_{0}=10,\\\\\n(I_{3},I_{2},I_{1},I_{0}), & S_{1}S_{0}=11.\n\\end{cases}\n$$\nGiven $S_{1}S_{0}=11$, the operation is parallel load, so the next state is determined solely by the inputs $I_{3},I_{2},I_{1},I_{0}$, independent of the current state and the serial inputs. Substituting the given values $I_{3}I_{2}I_{1}I_{0}=1100$ yields\n$$\n(Q_{3}^{+},Q_{2}^{+},Q_{1}^{+},Q_{0}^{+})=(I_{3},I_{2},I_{1},I_{0})=(1,1,0,0).\n$$\nTherefore, immediately after the next rising clock edge, the register state is $Q_{3}Q_{2}Q_{1}Q_{0}=1100$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1913045"}, {"introduction": "A key skill for any digital logic designer is the ability to diagnose faults in a circuit, a common task in real-world engineering. This exercise presents a hypothetical scenario where a shift register produces an unexpected result after a shift-left operation. By comparing the observed output with the correct, expected output, you can apply your knowledge of the register's internal logic to deduce which specific flip-flop is malfunctioning. [@problem_id:1913069]", "problem": "A 4-bit bidirectional shift register is constructed using D-type flip-flops. The state of the register is represented by the four bits $Q_3Q_2Q_1Q_0$, where $Q_3$ is the Most Significant Bit (MSB). The register has a mode control that allows it to be configured for either shift-left or shift-right operations. The serial data input for the shift-left operation is denoted by $S_L$.\n\nThe register is initialized to the state `1010`. It is then configured to perform a shift-left operation, and the serial input $S_L$ is held at a constant logic '1'. After a single clock pulse is applied, the new state of the register is observed to be `1101`.\n\nAssuming that the clock signal, the mode selection logic, and the serial input line are all functioning correctly, and that at most one of the four flip-flops has a fault, identify the malfunctioning flip-flop.\n\nA. The flip-flop storing $Q_0$.\n\nB. The flip-flop storing $Q_1$.\n\nC. The flip-flop storing $Q_2$.\n\nD. The flip-flop storing $Q_3$.", "solution": "In a 4-bit bidirectional shift register with state denoted by $Q_{3}Q_{2}Q_{1}Q_{0}$ and a shift-left operation, the bit-transfer equations for one clock pulse are\n$$\nQ_{3}^{+}=Q_{2},\\quad Q_{2}^{+}=Q_{1},\\quad Q_{1}^{+}=Q_{0},\\quad Q_{0}^{+}=S_{L},\n$$\nwhere the superscript $+$ denotes the next-state after the clock, and $S_{L}$ is the serial input for shift-left entering at $Q_{0}$.\n\nGiven the initial state $Q_{3}Q_{2}Q_{1}Q_{0}=1010$ and $S_{L}=1$, the expected next state is computed as\n$$\nQ_{3}^{+}=Q_{2}=0,\\quad Q_{2}^{+}=Q_{1}=1,\\quad Q_{1}^{+}=Q_{0}=0,\\quad Q_{0}^{+}=S_{L}=1,\n$$\nso the correct next state should be $0101$.\n\nThe observed next state is $1101$. Comparing bit by bit with the expected $0101$:\n- $Q_{2}^{+}$ matches: expected $1$, observed $1$.\n- $Q_{1}^{+}$ matches: expected $0$, observed $0$.\n- $Q_{0}^{+}$ matches: expected $1$, observed $1$.\n- $Q_{3}^{+}$ does not match: expected $0$, observed $1$.\n\nUnder the assumptions that the clock, mode selection logic, and serial input line are correct, and that at most one flip-flop is faulty, the only consistent fault is in the flip-flop storing $Q_{3}$, since $Q_{3}^{+}$ should equal the correctly known $Q_{2}$ current value $0$, yet it appeared as $1$. The other three flip-flops behave consistently with the expected shift-left operation, ruling them out as the sole source of error.\n\nTherefore, the malfunctioning flip-flop is the one storing $Q_{3}$.", "answer": "$$\\boxed{D}$$", "id": "1913069"}]}