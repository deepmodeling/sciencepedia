{"hands_on_practices": [{"introduction": "The journey into counter design begins with the most fundamental building block: the modulo-2 counter. This exercise [@problem_id:1947773] challenges you to create a circuit that simply toggles between two states, 0 and 1. By determining the correct feedback logic for a single D flip-flop, you will grasp the core principle of how a memory element can be transformed into a dynamic, state-changing device, which is the essence of all sequential logic.", "problem": "You are tasked with designing a modulo-2 counter, which is a sequential circuit that cycles through the states 0 and 1 on successive clock pulses. The implementation must use a single positive edge-triggered D-type flip-flop. The output of this flip-flop, denoted by $Q$, represents the current state of the counter. The behavior of a D flip-flop is such that its output after a clock edge, which we will call $Q_{next}$, becomes equal to the value of its input, $D$, at the time of the clock edge.\n\nTo achieve the desired modulo-2 counting behavior (toggling state on each clock pulse), a combinational logic circuit must be designed to generate the correct input signal $D$ based on the current state $Q$. Which of the following Boolean expressions for $D$ correctly achieves this toggling behavior?\n\nA. $D = Q$\n\nB. $D = \\overline{Q}$\n\nC. $D = 1$\n\nD. $D = 0$", "solution": "A positive edge-triggered D flip-flop obeys the characteristic equation\n$$\nQ_{\\text{next}}=D.\n$$\nA modulo-2 counter must toggle its state on every clock pulse, which requires\n$$\nQ_{\\text{next}}=\\overline{Q}.\n$$\nCombining these two relations for the required behavior, the input must satisfy\n$$\nD=\\overline{Q}.\n$$\nVerification against the options:\n- If $D=Q$ (Option A), then $Q_{\\text{next}}=Q$, which holds the current state and does not toggle.\n- If $D=\\overline{Q}$ (Option B), then $Q_{\\text{next}}=\\overline{Q}$, which toggles: if $Q=0$ then $Q_{\\text{next}}=1$, and if $Q=1$ then $Q_{\\text{next}}=0$.\n- If $D=1$ (Option C), then $Q_{\\text{next}}=1$, forcing the state to $1$.\n- If $D=0$ (Option D), then $Q_{\\text{next}}=0$, forcing the state to $0$.\n\nTherefore, only $D=\\overline{Q}$ achieves the required toggling behavior.", "answer": "$$\\boxed{B}$$", "id": "1947773"}, {"introduction": "Moving beyond a simple toggle, this practice [@problem_id:1947809] guides you through the systematic design of a synchronous multi-state counter. You will construct a modulo-3 counter using JK flip-flops, a common component in digital design due to their versatility. This process involves creating a state transition table and using it to derive the necessary input logic, providing a foundational methodology for creating counters of any modulus.", "problem": "A digital sequential circuit is designed to control a simple industrial process that cycles through three distinct phases: Phase 0, Phase 1, and Phase 2. The circuit must repeat this sequence continuously (0 → 1 → 2 → 0 → ...). The state of the controller is represented by a straight binary count, where the state variable $Q_1$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB).\n\nThe controller is to be implemented as a synchronous counter using two JK flip-flops, one for each state bit. The behavior of the circuit for any unused states can be treated as \"don't care\" conditions to simplify the logic.\n\nYour task is to determine the correct set of simplified Boolean expressions for the four flip-flop inputs ($J_1$, $K_1$, $J_0$, $K_0$) as functions of the present state variables $Q_1$ and $Q_0$. Which of the following options represents the minimal sum-of-products expressions for the JK inputs?\n\nA. $J_1 = Q_1 \\overline{Q_0}$; $K_1 = \\overline{Q_1}$; $J_0 = Q_0$; $K_0 = 1$\n\nB. $J_1 = Q_0$; $K_1 = \\overline{Q_0}$; $J_0 = \\overline{Q_1}$; $K_0 = 1$\n\nC. $J_1 = Q_0$; $K_1 = Q_1$; $J_0 = \\overline{Q_1}$; $K_0 = 1$\n\nD. $J_1 = \\overline{Q_1}$; $K_1 = 1$; $J_0 = Q_1$; $K_0 = Q_0$\n\nE. $J_1 = 1$; $K_1 = Q_0$; $J_0 = Q_1$; $K_0 = \\overline{Q_1}$", "solution": "The counter must cycle through the states represented in straight binary with $Q_{1}$ as MSB and $Q_{0}$ as LSB:\n$$00 \\rightarrow 01 \\rightarrow 10 \\rightarrow 00 \\rightarrow \\cdots$$\nState $11$ is unused and treated as a don't care.\n\nFor each JK flip-flop, use the excitation requirements:\n- For a transition $0 \\rightarrow 0$: $J=0$, $K=X$.\n- For a transition $0 \\rightarrow 1$: $J=1$, $K=X$.\n- For a transition $1 \\rightarrow 0$: $J=X$, $K=1$.\n- For a transition $1 \\rightarrow 1$: $J=X$, $K=0$.\n\nList the required inputs for each present state.\n\nFor $Q_{0}$:\n- At state $00$: $0 \\rightarrow 1$ gives $J_{0}=1$, $K_{0}=X$.\n- At state $01$: $1 \\rightarrow 0$ gives $J_{0}=X$, $K_{0}=1$.\n- At state $10$: $0 \\rightarrow 0$ gives $J_{0}=0$, $K_{0}=X$.\n- At state $11$: don't care.\n\nFor $Q_{1}$:\n- At state $00$: $0 \\rightarrow 0$ gives $J_{1}=0$, $K_{1}=X$.\n- At state $01$: $0 \\rightarrow 1$ gives $J_{1}=1$, $K_{1}=X$.\n- At state $10$: $1 \\rightarrow 0$ gives $J_{1}=X$, $K_{1}=1$.\n- At state $11$: don't care.\n\nNow minimize each input as a function of ($Q_{1}$,$Q_{0}$), using the X and the unused state as don't cares.\n\nFor $J_{1}$: It is $1$ only at present state $01$. Using the don't care at state $11$, a minimal implicant covering $01$ is $Q_{0}$, hence\n$$J_{1}=Q_{0}.$$\n\nFor $K_{1}$: It is $1$ only at present state $10$. Using the don't care at state $11$, a minimal implicant is $Q_{1}$, hence\n$$K_{1}=Q_{1}.$$\n\nFor $J_{0}$: It is $1$ at $00$ and $0$ at $10$, with $01$ as a don't care. Grouping $00$ with don't care $01$ yields\n$$J_{0}=\\overline{Q_{1}}.$$\n\nFor $K_{0}$: It is $1$ at $01$. Since all other states are don't cares for $K_0$, choosing the constant function\n$$K_{0}=1$$\nsatisfies all requirements and is minimal.\n\nCollecting the minimal SOP expressions:\n$$J_{1}=Q_{0}, \\quad K_{1}=Q_{1}, \\quad J_{0}=\\overline{Q_{1}}, \\quad K_{0}=1.$$\nThis matches option C.", "answer": "$$\\boxed{C}$$", "id": "1947809"}, {"introduction": "In practical applications, digital systems must be resilient to errors. This exercise [@problem_id:1931556] introduces the critical concept of self-correcting design, a key aspect of creating robust circuits. You will design a modulo-5 counter that not only follows its prescribed counting sequence but also ensures that if it ever enters an unused or invalid state, it automatically transitions back to a known-good state on the next clock pulse, preventing system failure.", "problem": "A control system requires a synchronous digital counter that cycles through five distinct states, represented by a 3-bit binary number $Q_2Q_1Q_0$, where $Q_2$ is the most significant bit (MSB). The counter is to be designed as a modulo-5 counter, sequencing through the states 0, 1, 2, 3, 4, and then repeating. The design must utilize positive edge-triggered JK flip-flops for the state bits $Q_2, Q_1,$ and $Q_0$.\n\nA critical design requirement is that the counter must be self-correcting. If the system accidentally enters any of the three unused binary states, it must transition to the state $Q_2Q_1Q_0 = 000_2$ on the very next clock pulse.\n\nYour task is to determine the simplified Boolean logic expressions for the six inputs ($J_2, K_2, J_1, K_1, J_0, K_0$) required to implement this self-correcting counter. Assuming the expressions are in sum-of-products form, select the correct set of equations from the options below. In the options, concatenation denotes logical AND, and the '+' symbol denotes logical OR.\n\nA.\n$J_2 = \\overline{Q_2} Q_1 Q_0$, $K_2 = 1$\n$J_1 = \\overline{Q_2} Q_0$, $K_1 = Q_2 + Q_0$\n$J_0 = \\overline{Q_2}$, $K_0 = 1$\n\nB.\n$J_2 = \\overline{Q_2} Q_1 Q_0$, $K_2 = Q_2$\n$J_1 = \\overline{Q_2} Q_0$, $K_1 = Q_0$\n$J_0 = \\overline{Q_2}$, $K_0 = \\overline{Q_2} Q_0$\n\nC.\n$J_2 = \\overline{Q_2} Q_1 Q_0$, $K_2 = 1$\n$J_1 = \\overline{Q_2} Q_0$, $K_1 = Q_2 Q_1 + Q_0$\n$J_0 = \\overline{Q_2}$, $K_0 = 1$\n\nD.\n$J_2 = \\overline{Q_2} Q_0$, $K_2 = 1$\n$J_1 = \\overline{Q_2} Q_1$, $K_1 = Q_2 + Q_1$\n$J_0 = \\overline{Q_2}$, $K_0 = Q_1$\n\nE.\n$J_2 = Q_1 Q_0$, $K_2 = Q_2$\n$J_1 = Q_0$, $K_1 = Q_2 + Q_0$\n$J_0 = 1$, $K_0 = 1$", "solution": "To design the self-correcting synchronous modulo-5 counter using JK flip-flops, we follow a systematic process.\n\nFirst, we establish the state transition table. The counter sequences through states 0 ($000_2$) to 4 ($100_2$). The unused states 5 ($101_2$), 6 ($110_2$), and 7 ($111_2$) must all transition to state 0 ($000_2$).\n\nNext, we create an excitation table for the JK inputs ($J_i, K_i$) based on the required transitions for each state bit ($Q_i \\to Q_i^+$). The JK excitation rules are:\n- $0 \\to 0$: $J=0, K=X$ (don't care)\n- $0 \\to 1$: $J=1, K=X$\n- $1 \\to 0$: $J=X, K=1$\n- $1 \\to 1$: $J=X, K=0$\n\nThe complete state and excitation table is as follows:\n\n| Present State | Next State | \\multicolumn{2}{c|}{FF2 ($Q_2$)} | \\multicolumn{2}{c|}{FF1 ($Q_1$)} | \\multicolumn{2}{c|}{FF0 ($Q_0$)} |\n|---|---|---|---|---|---|---|---|\n| $Q_2Q_1Q_0$ | $Q_2^+Q_1^+Q_0^+$ | $J_2$ | $K_2$ | $J_1$ | $K_1$ | $J_0$ | $K_0$ |\n| 000 | 001 | 0 | X | 0 | X | 1 | X |\n| 001 | 010 | 0 | X | 1 | X | X | 1 |\n| 010 | 011 | 0 | X | X | 0 | 1 | X |\n| 011 | 100 | 1 | X | X | 1 | X | 1 |\n| 100 | 000 | X | 1 | 0 | X | 0 | X |\n| 101 | 000 | X | 1 | 0 | X | X | 1 |\n| 110 | 000 | X | 1 | X | 1 | 0 | X |\n| 111 | 000 | X | 1 | X | 1 | X | 1 |\n\nNow, we use Karnaugh maps for each input ($J_2, K_2, J_1, K_1, J_0, K_0$) as a function of the present state ($Q_2, Q_1, Q_0$) to find the simplified Boolean expressions.\n\n1.  **For $J_2$ and $K_2$**:\n    - The K-map for $J_2$ has a '1' only at state $011$. All other cells are '0' or 'X'. The minimal expression is $J_2 = \\overline{Q_2} Q_1 Q_0$.\n    - The K-map for $K_2$ has '1's for all states where $Q_2=1$ (i.e., $100, 101, 110, 111$). We can group all '1's and 'X's to get the simplest expression $K_2 = 1$.\n\n2.  **For $J_1$ and $K_1$**:\n    - The K-map for $J_1$ has a '1' at state $001$. The minimal grouping on the K-map (grouping $001$ with don't-care $011$) gives $J_1 = \\overline{Q_2} Q_0$.\n    - The K-map for $K_1$ has '1's at states $011, 110, 111$ and a '0' at $010$. The minimal expression covering the '1's and using don't cares is $K_1 = Q_2 + Q_0$.\n\n3.  **For $J_0$ and $K_0$**:\n    - The K-map for $J_0$ has '1's at states $000$ and $010$. Grouping these with don't cares at $001, 011$ covers the entire $Q_2=0$ row, simplifying to $J_0 = \\overline{Q_2}$.\n    - The K-map for $K_0$ has '1's at states $001, 011, 101, 111$. A minimal cover on the K-map (grouping all '1's and 'X's) gives $K_0 = 1$.\n\nCollecting the simplified expressions:\n- $J_2 = \\overline{Q_2} Q_1 Q_0$, $K_2 = 1$\n- $J_1 = \\overline{Q_2} Q_0$, $K_1 = Q_2 + Q_0$\n- $J_0 = \\overline{Q_2}$, $K_0 = 1$\n\nThese match option A.", "answer": "$$\\boxed{A}$$", "id": "1931556"}]}