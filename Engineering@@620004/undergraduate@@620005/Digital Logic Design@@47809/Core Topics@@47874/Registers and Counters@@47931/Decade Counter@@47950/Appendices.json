{"hands_on_practices": [{"introduction": "Understanding the output of a decade counter is the first step toward using it effectively. As frequency dividers, they alter the timing of a system in predictable ways. This practice problem [@problem_id:1927040] challenges you to not only determine the output frequency but also to calculate its duty cycle, a critical parameter for signals that control the duration of events in digital circuits.", "problem": "A standard synchronous decade counter, also known as a Binary-Coded Decimal (BCD) counter, is constructed to cycle through the states representing decimal digits 0 through 9 (binary `0000` to `1001`) and then reset to `0000` on the next clock pulse. The state of the counter is represented by the outputs of its four flip-flops: $Q_D$, $Q_C$, $Q_B$, and $Q_A$, where $Q_D$ is the most significant bit (MSB) and $Q_A$ is the least significant bit (LSB).\n\nThis counter is driven by a continuous and stable input clock signal with a frequency of $f_{in} = 1.00$ MHz.\n\nYour task is to analyze the output signal at the MSB, $Q_D$. Determine two properties of this signal:\n1. Its frequency, $f_{out}$.\n2. Its duty cycle, which is defined as the fraction of the period for which the signal is at a high logic level.\n\nExpress the frequency $f_{out}$ in units of kHz. Express the duty cycle as a decimal value. Provide both values in your answer, with the frequency first, followed by the duty cycle.", "solution": "A synchronous decade (BCD) counter cycles through 10 distinct states, from decimal 0 to 9, one state per input clock period. Let the input clock period be $T_{in} = \\frac{1}{f_{in}}$.\n\nOver one complete cycle of 10 counts, the pattern of outputs repeats, so the output period for any state-dependent output is\n$$\nT_{out} = 10\\,T_{in} = \\frac{10}{f_{in}}, \\quad \\text{hence} \\quad f_{out} = \\frac{1}{T_{out}} = \\frac{f_{in}}{10}.\n$$\nGiven $f_{in} = 1.00 \\times 10^{6}\\ \\text{Hz} = 1000\\ \\text{kHz}$, this yields\n$$\nf_{out} = \\frac{1000\\ \\text{kHz}}{10} = 100\\ \\text{kHz}.\n$$\n\nFor the MSB $Q_{D}$, the bit is high only when the count is $8$ or $9$, i.e., for exactly $2$ out of the $10$ states. Therefore, within one output period $T_{out}$, the high time is\n$$\nt_{H} = 2\\,T_{in},\n$$\nand the duty cycle is\n$$\nD = \\frac{t_{H}}{T_{out}} = \\frac{2\\,T_{in}}{10\\,T_{in}} = \\frac{2}{10} = 0.2.\n$$\n\nThus, the frequency in kHz and the duty cycle (as a decimal) are $100$ and $0.2$, respectively.", "answer": "$$\\boxed{\\begin{pmatrix}100 & 0.2\\end{pmatrix}}$$", "id": "1927040"}, {"introduction": "Beyond simple counting, the real power of integrated counters lies in their control features. The ability to synchronously load a specific value is fundamental to initializing systems or creating custom state transitions. This exercise [@problem_id:1927088] will walk you through a practical scenario, reinforcing your understanding of how control signals like parallel load direct the counter's behavior on a clock-by-clock basis.", "problem": "A digital control system employs a synchronous decade counter whose behavior is identical to the 74LS160 Integrated Circuit (IC). This counter has the following key characteristics:\n\n*   It counts in a Binary-Coded Decimal (BCD) sequence from 0 (binary 0000) to 9 (binary 1001) and then rolls over to 0 on the next count.\n*   All state changes, including counting, clearing, and loading, are synchronous, occurring only on the rising edge of the clock (CLK) signal.\n*   The counter has four parallel data inputs: `P3`, `P2`, `P1`, `P0`, where `P3` is the Most Significant Bit (MSB).\n*   It has an active-low synchronous parallel load input, $\\overline{\\text{PL}}$. When $\\overline{\\text{PL}}$ is held low, the binary value on the inputs (`P3P2P1P0`) is loaded into the counter on the next rising edge of the CLK. When $\\overline{\\text{PL}}$ is high, the counter is enabled to perform its normal counting operation.\n*   It has an active-low synchronous clear input, $\\overline{\\text{CLR}}$. This input is held high (inactive) for the entire duration of the operation described.\n*   The 4-bit output of the counter is given by `Q3`, `Q2`, `Q1`, `Q0`, where `Q3` is the MSB.\n\nThe system is subjected to the following sequence of operations, starting from an unknown initial state:\n\n1.  For the duration leading up to and including the 1st rising clock edge, the $\\overline{\\text{PL}}$ input is held low. During this time, the parallel data inputs (`P3`, `P2`, `P1`, `P0`) are held at the value 0111.\n2.  Immediately after the 1st rising clock edge, the $\\overline{\\text{PL}}$ input is switched to high and remains high for all subsequent operations.\n3.  The clock continues to provide rising edges to the CLK input.\n\nWhat is the 4-bit binary state of the output (`Q3Q2Q1Q0`) immediately after the 4th rising clock edge?\n\nA. 1010\n\nB. 0011\n\nC. 1001\n\nD. 0000\n\nE. 0111", "solution": "All state changes are synchronous and occur only on the rising edge of the clock. The active-low synchronous parallel load input forces the next state to equal the parallel inputs when it is low at a rising edge; otherwise, with the load high and clear high, the device counts in BCD from $0000$ to $1001$ and then rolls over to $0000$.\n\nLet the state immediately after the $k$-th rising edge be denoted by $Q_{3}Q_{2}Q_{1}Q_{0}(k)$.\n\nGiven that $\\overline{\\mathrm{PL}}$ is low and $P_{3}P_{2}P_{1}P_{0}=0111$ during and up to the first rising edge, the synchronous load determines the state at the first edge:\n$$\nQ_{3}Q_{2}Q_{1}Q_{0}(1)=P_{3}P_{2}P_{1}P_{0}=0111.\n$$\nImmediately after the first edge, $\\overline{\\mathrm{PL}}$ is set high and remains high, and $\\overline{\\mathrm{CLR}}$ remains high (inactive), so the counter performs normal BCD counting on each subsequent rising edge:\n- Second rising edge: count $0111 \\rightarrow 1000$, so\n$$\nQ_{3}Q_{2}Q_{1}Q_{0}(2)=1000.\n$$\n- Third rising edge: count $1000 \\rightarrow 1001$, so\n$$\nQ_{3}Q_{2}Q_{1}Q_{0}(3)=1001.\n$$\n- Fourth rising edge: count $1001 \\rightarrow 0000$ due to decade rollover, so\n$$\nQ_{3}Q_{2}Q_{1}Q_{0}(4)=0000.\n$$\n\nThus, immediately after the fourth rising edge the output is $0000$, which corresponds to option D.", "answer": "$$\\boxed{D}$$", "id": "1927088"}, {"introduction": "Standard counters provide a fixed sequence, but many digital applications require custom counting patterns. This hands-on design problem [@problem_id:1927096] takes you a step further, tasking you with creating external logic to modify a counter's sequence. By designing a circuit that forces the counter to skip a state, you will apply your knowledge of Boolean logic and counter control to solve a realistic engineering challenge.", "problem": "A commercial synchronous 4-bit Binary-Coded Decimal (BCD) up-counter integrated circuit is used in a display driver system. The counter has four data outputs, $Q_D, Q_C, Q_B, Q_A$, where $Q_D$ is the Most Significant Bit (MSB). Normal operation for this counter is to cycle through the BCD states from 0 (0000) to 9 (1001) sequentially, incrementing on each rising clock edge.\n\nThe counter also features an active-high synchronous `LOAD` input. If the `LOAD` input is held at a logic high level, the counter state will be replaced by the 4-bit value present on its parallel data inputs, ($P_D, P_C, P_B, P_A$), upon the next rising clock edge. If the `LOAD` input is held at a logic low level, the counter increments normally.\n\nA specific application requires modifying the counter's sequence to skip the numerical state 5. The desired sequence is 0, 1, 2, 3, 4, 6, 7, 8, 9, and then rolling over to 0. To implement this, the parallel data inputs ($P_D, P_C, P_B, P_A$) are to be permanently connected to the BCD representation of the number 6. Your task is to design the necessary external combinational logic that generates the `LOAD` signal. This logic will take the counter's outputs ($Q_D, Q_C, Q_B, Q_A$) as its inputs.\n\nDetermine the minimal Sum-of-Products (SOP) Boolean expression for the `LOAD` signal in terms of the counter outputs. In your expression, use an overline (e.g., $\\overline{A}$) to denote the logical NOT operation.", "solution": "We need a synchronous mechanism so that the state 5 is never entered after a rising clock edge. With an active-high synchronous LOAD that loads the value present at the parallel inputs on the next rising edge, and with the parallel inputs hard-wired to the BCD for 6, the correct strategy is to assert LOAD only when the present counter state equals 4. Then, when the clock edge arrives from state 4, the counter will load 6 instead of incrementing to 5, producing the desired transition $4 \\to 6$ and thereby skipping 5 entirely in the sequence sampled at clock edges.\n\nLet the outputs be $Q_D$ (MSB), $Q_C$, $Q_B$, $Q_A$ (LSB). The BCD code for decimal 4 is $0100$, which corresponds to $Q_D=0$, $Q_C=1$, $Q_B=0$, $Q_A=0$. The LOAD signal must therefore be $1$ exactly for this input combination and $0$ otherwise during normal BCD operation.\n\nThe corresponding minterm (product) for detecting state 4 is\n$$\n\\overline{Q_{D}}\\,Q_{C}\\,\\overline{Q_{B}}\\,\\overline{Q_{A}}.\n$$\nNo other states are specified as don't-cares and only a single state must assert LOAD, so the minimal Sum-of-Products is exactly this single product term.\n\nThus, the minimal SOP Boolean expression for the LOAD signal is\n$$\n\\overline{Q_{D}}\\,Q_{C}\\,\\overline{Q_{B}}\\,\\overline{Q_{A}}.\n$$", "answer": "$$\\boxed{\\overline{Q_{D}}\\,Q_{C}\\,\\overline{Q_{B}}\\,\\overline{Q_{A}}}$$", "id": "1927096"}]}