{"hands_on_practices": [{"introduction": "To build a solid foundation, let's begin by visualizing the fundamental mechanics of a Serial-In, Serial-Out (SISO) register. This first practice focuses on the core right-shift operation, where we will manually trace the register's contents on a clock-by-clock basis. Mastering this simple yet crucial exercise ([@problem_id:1959756]) is the first step toward understanding how data is manipulated and transported in digital systems.", "problem": "A 4-bit temporary data buffer is implemented using a Serial-In, Serial-Out (SISO) shift register. The register's bits are labeled $Q_3, Q_2, Q_1, Q_0$, where $Q_3$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB). On the rising edge of each clock pulse, the data is shifted one position to the right: the value at the serial data input, $D_{in}$, is loaded into $Q_3$; the previous value of $Q_3$ moves to $Q_2$; $Q_2$ moves to $Q_1$; and $Q_1$ moves to $Q_0$. The value originally in $Q_0$ is shifted out.\n\nInitially, the register holds the binary value `1011`. For the next four consecutive clock pulses, the serial data input line $D_{in}$ is held at a constant logical '0'. What is the binary value stored in the register, represented as $Q_3Q_2Q_1Q_0$, immediately after the fourth clock pulse?\n\nA. 0000\n\nB. 0001\n\nC. 0101\n\nD. 1101\n\nE. 1011", "solution": "The problem asks for the contents of a 4-bit Serial-In, Serial-Out (SISO) shift register after four clock pulses. Let the state of the register be represented by the binary string $Q_3Q_2Q_1Q_0$. The register shifts its contents one bit to the right on each clock pulse. This means the new state $(Q_3', Q_2', Q_1', Q_0')$ is determined by the old state $(Q_3, Q_2, Q_1, Q_0)$ and the serial input $D_{in}$ as follows:\n$Q_3' = D_{in}$\n$Q_2' = Q_3$\n$Q_1' = Q_2$\n$Q_0' = Q_1$\n\nWe are given the initial state and the input condition.\nInitial State (before any pulses): $Q_3Q_2Q_1Q_0 = 1011$\nSerial Input: $D_{in} = 0$ (constant for all four pulses)\n\nWe can trace the state of the register after each clock pulse.\n\n**After the 1st clock pulse:**\nThe new value of $Q_3$ will be the input, $D_{in} = 0$.\nThe new value of $Q_2$ will be the old value of $Q_3$, which was 1.\nThe new value of $Q_1$ will be the old value of $Q_2$, which was 0.\nThe new value of $Q_0$ will be the old value of $Q_1$, which was 1.\nSo, the state of the register becomes $0101$.\n\n**After the 2nd clock pulse:**\nThe input is still $D_{in} = 0$. The register's state from the previous step is $0101$.\nThe new value of $Q_3$ will be $D_{in} = 0$.\nThe new value of $Q_2$ will be the old value of $Q_3$, which was 0.\nThe new value of $Q_1$ will be the old value of $Q_2$, which was 1.\nThe new value of $Q_0$ will be the old value of $Q_1$, which was 0.\nSo, the state of the register becomes $0010$.\n\n**After the 3rd clock pulse:**\nThe input is still $D_{in} = 0$. The register's state from the previous step is $0010$.\nThe new value of $Q_3$ will be $D_{in} = 0$.\nThe new value of $Q_2$ will be the old value of $Q_3$, which was 0.\nThe new value of $Q_1$ will be the old value of $Q_2$, which was 0.\nThe new value of $Q_0$ will be the old value of $Q_1$, which was 1.\nSo, the state of the register becomes $0001$.\n\n**After the 4th clock pulse:**\nThe input is still $D_{in} = 0$. The register's state from the previous step is $0001$.\nThe new value of $Q_3$ will be $D_{in} = 0$.\nThe new value of $Q_2$ will be the old value of $Q_3$, which was 0.\nThe new value of $Q_1$ will be the old value of $Q_2$, which was 0.\nThe new value of $Q_0$ will be the old value of $Q_1$, which was 0.\nSo, the state of the register becomes $0000$.\n\nTherefore, the final binary value stored in the register after the fourth clock pulse is `0000`. This corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1959756"}, {"introduction": "Now that you understand the basic shifting mechanism, let's explore one of the most common applications of a SISO register: its use as a digital delay line. This practice ([@problem_id:1959691]) demonstrates how a register with $N$ stages imposes a precise, predictable delay of $N$ clock cycles on a serial data stream. This concept is fundamental in timing and synchronization across various digital circuits.", "problem": "A digital engineer is implementing a simple data delay line using a 5-bit Serial-In, Serial-Out (SISO) shift register. The register is built from five D-type flip-flops (DFFs), labeled $FF_0, FF_1, FF_2, FF_3, FF_4$. The serial data is fed into the input of the first flip-flop ($D_0$), and the output of each flip-flop $Q_i$ is connected to the input of the next, $D_{i+1}$. The final serial output, $Q_{out}$, is taken from the output of the last flip-flop, $Q_4$.\n\nAll DFFs are synchronized by a single clock and are positive edge-triggered, meaning their states update only on the rising edge of a clock pulse. Initially, at time $t=0$ (before the first rising clock edge), the register is in a cleared state, with all flip-flop outputs ($Q_0$ through $Q_4$) at logic 0.\n\nAn 8-bit serial data stream is applied to the input $D_{in}$ (which is connected to $D_0$). The data value is held constant during each clock cycle. The input sequence, starting with the value for the first clock cycle, is `11010110`. That is, the input is `1` during cycle 1, `1` during cycle 2, `0` during cycle 3, and so on.\n\nWhat is the sequence of the serial output $Q_{out}$ observed immediately after each of the first eight rising clock edges (i.e., at the end of cycles 1, 2, 3, 4, 5, 6, 7, and 8)?\n\nA. `00011010`\n\nB. `00001101`\n\nC. `11111101`\n\nD. `11010110`\n\nE. `00000110`", "solution": "A 5-stage SISO register acts as a 5-cycle delay line. This means the input bit that enters at cycle $k$ will appear at the output at cycle $k+5-1 = k+4$? No, it appears after 5 full cycles. The input at cycle 1 appears at the output at the end of cycle 5. The input at cycle 2 appears at the end of cycle 6, and so on. The output at cycle $j$ is equal to the input from cycle $j-5$. For cycles 1 through 4, the output will be the initial state of the last flip-flop, which is 0.\n\nLet's trace this step-by-step.\nLet the input sequence be $D_1, D_2, D_3, D_4, D_5, D_6, D_7, D_8 = 1, 1, 0, 1, 0, 1, 1, 0$.\nThe output sequence is $O_1, O_2, O_3, O_4, O_5, O_6, O_7, O_8$.\n\n- Cycle 1: The register was `00000`. The output $Q_4$ is `0`.\n- Cycle 2: The register was `10000`. The output $Q_4$ is `0`.\n- Cycle 3: The register was `11000`. The output $Q_4$ is `0`.\n- Cycle 4: The register was `01100`. The output $Q_4$ is `0`.\n- Cycle 5: The register was `10110`. The output $Q_4$ is the bit that entered in Cycle 1, which is `1`.\n- Cycle 6: The register was `01011`. The output $Q_4$ is the bit that entered in Cycle 2, which is `1`.\n- Cycle 7: The register was `10101`. The output $Q_4$ is the bit that entered in Cycle 3, which is `0`.\n- Cycle 8: The register was `11010`. The output $Q_4$ is the bit that entered in Cycle 4, which is `1`.\n\nThe output sequence for the first eight cycles is `00001101`.\n\nThe detailed trace provided in the original solution is also correct:\n$$\nQ_{0}^{+}=D_{in},\\quad Q_{1}^{+}=Q_{0},\\quad Q_{2}^{+}=Q_{1},\\quad Q_{3}^{+}=Q_{2},\\quad Q_{4}^{+}=Q_{3},\\quad Q_{out}=Q_{4}.\n$$\nInitial state: $(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,0,0,0,0)$.\n- After cycle 1 ($D_{in}=1$): $(0,0,0,0,1)$, $Q_{out}=0$.\n- After cycle 2 ($D_{in}=1$): $(0,0,0,1,1)$, $Q_{out}=0$.\n- After cycle 3 ($D_{in}=0$): $(0,0,1,1,0)$, $Q_{out}=0$.\n- After cycle 4 ($D_{in}=1$): $(0,1,1,0,1)$, $Q_{out}=0$.\n- After cycle 5 ($D_{in}=0$): $(1,1,0,1,0)$, $Q_{out}=1$.\n- After cycle 6 ($D_{in}=1$): $(1,0,1,0,1)$, $Q_{out}=1$.\n- After cycle 7 ($D_{in}=1$): $(0,1,0,1,1)$, $Q_{out}=0$.\n- After cycle 8 ($D_{in}=0$): $(1,0,1,1,0)$, $Q_{out}=1$.\n\nThe serial output sequence is $00001101$, which matches option B.", "answer": "$$\\boxed{B}$$", "id": "1959691"}, {"introduction": "This final practice elevates our analysis from a single component to a more complex, integrated system. Here, we encounter a scenario ([@problem_id:1959695]) where a shift register's function is managed by control signals and different clock rates for loading versus shifting data. This exercise will challenge you to synthesize your knowledge and analyze the behavior of a register within a larger, more realistic operational context.", "problem": "A digital control system employs an 8-bit Serial-In, Serial-Out (SISO) shift register constructed from positive edge-triggered D-type flip-flops. Let the register bits be denoted by $R_7, R_6, \\dots, R_0$, where the serial data is input to $R_7$ and the serial data is output from $R_0$. The system operates based on a master clock, `CLK_M`, which has a period of $T$.\n\nThe register's operation is governed by a control signal, `LOAD_EN`, and two derived clocks, `CLK_L` and `CLK_S`.\n- When `LOAD_EN` is high (logical '1'), the register is in \"Load Mode\". It serially loads data from an input line `DATA_IN` using the clock `CLK_L`.\n- When `LOAD_EN` is low (logical '0'), the register is in \"Shift Mode\". It serially shifts its contents out to the `DATA_OUT` line using the clock `CLK_S`. During Shift Mode, the serial input to $R_7$ is held at a constant logical '0'.\n\nThe clocks are defined as follows:\n- `CLK_L` is identical to `CLK_M`. Its rising edges occur at $t = T, 2T, 3T, \\dots$.\n- `CLK_S` is a clock with a period of $2T$. Its rising edges occur at $t = 2T, 4T, 6T, \\dots$.\n\nAt time $t=0$, the system is powered on, and all bits of the shift register are initialized to '0'. The `LOAD_EN` signal is set to high. The `DATA_IN` line provides a continuous, repeating 4-bit sequence of `1101` (i.e., the data bit for the first clock cycle is 1, for the second is 1, for the third is 0, for the fourth is 1, for the fifth is 1, and so on). The data on the `DATA_IN` line is stable before each rising edge of `CLK_L`.\n\nThe system remains in Load Mode for exactly 8 cycles of `CLK_L`. Immediately after the 8th rising edge of `CLK_L`, the `LOAD_EN` signal transitions to low and remains low thereafter, putting the system into Shift Mode. The `DATA_OUT` line is connected to the output of the last flip-flop, $R_0$.\n\nDetermine the logical value (0 or 1) on the `DATA_OUT` line at the precise moment $t = 19.5T$.", "solution": "The problem requires tracing the state of an 8-bit shift register through two operational modes: Load and Shift.\n\n**Phase 1: Load Mode**\nThe register is in Load Mode for 8 cycles of `CLK_L`, from $t=0$ to $t=8T$. The clock edges are at $t=T, 2T, \\dots, 8T$.\nThe input data `DATA_IN` is a repeating `1101` sequence. For the 8 cycles, the input bits will be:\n- Cycle 1 ($t=T$): 1\n- Cycle 2 ($t=2T$): 1\n- Cycle 3 ($t=3T$): 0\n- Cycle 4 ($t=4T$): 1\n- Cycle 5 ($t=5T$): 1 (pattern repeats)\n- Cycle 6 ($t=6T$): 1\n- Cycle 7 ($t=7T$): 0\n- Cycle 8 ($t=8T$): 1\n\nWe trace the register state $[R_7, R_6, \\dots, R_0]$. Initially, it's $[0,0,0,0,0,0,0,0]$.\n- After $t=T$ (input 1): $[1,0,0,0,0,0,0,0]$\n- After $t=2T$ (input 1): $[1,1,0,0,0,0,0,0]$\n- After $t=3T$ (input 0): $[0,1,1,0,0,0,0,0]$\n- After $t=4T$ (input 1): $[1,0,1,1,0,0,0,0]$\n- After $t=5T$ (input 1): $[1,1,0,1,1,0,0,0]$\n- After $t=6T$ (input 1): $[1,1,1,0,1,1,0,0]$\n- After $t=7T$ (input 0): $[0,1,1,1,0,1,1,0]$\n- After $t=8T$ (input 1): $[1,0,1,1,1,0,1,1]$\n\nAt the end of Load Mode (just after $t=8T$), the register contains the value `10111011`.\n\n**Phase 2: Shift Mode**\nImmediately after $t=8T$, `LOAD_EN` goes low. The register is now in Shift Mode. The active clock is `CLK_S`, with rising edges at $t=2T, 4T, 6T, 8T, 10T, \\dots$. The serial input to $R_7$ is now held at '0'.\nThe state at the beginning of this phase is $[1,0,1,1,1,0,1,1]$.\nWe trace the state at each rising edge of `CLK_S` that occurs after $t=8T$.\n- Edge at $t=10T$ (input 0): state becomes $[0,1,0,1,1,1,0,1]$\n- Edge at $t=12T$ (input 0): state becomes $[0,0,1,0,1,1,1,0]$\n- Edge at $t=14T$ (input 0): state becomes $[0,0,0,1,0,1,1,1]$\n- Edge at $t=16T$ (input 0): state becomes $[0,0,0,0,1,0,1,1]$\n- Edge at $t=18T$ (input 0): state becomes $[0,0,0,0,0,1,0,1]$\n\nThe next `CLK_S` edge would be at $t=20T$. The time of interest is $t=19.5T$. Since this is between the clock edges at $t=18T$ and $t=20T$, the register's state is the one established at $t=18T$.\nThe state at $t=19.5T$ is $[0,0,0,0,0,1,0,1]$.\n\nThe problem asks for the value on the `DATA_OUT` line, which is connected to $R_0$.\nAt $t=19.5T$, the value of $R_0$ is the last bit of the state `00000101`, which is `1`.\n\nTherefore, the logical value on the `DATA_OUT` line at $t=19.5T$ is 1.", "answer": "$$\\boxed{1}$$", "id": "1959695"}]}