{"hands_on_practices": [{"introduction": "This first practice problem lays the groundwork for designing custom sequence counters. You will implement a non-standard 2-bit sequence using JK flip-flops, a common and versatile building block in digital logic. The key challenge lies not only in generating the desired sequence but also in ensuring the counter is self-correctingâ€”a crucial feature for robust systems that must gracefully recover from unintended states [@problem_id:1928465].", "problem": "A specialized digital control module requires a counter that cycles through a non-standard three-state sequence. Your task is to design this synchronous sequential circuit. The state of the counter is represented by two bits, $Q_1$ for the Most Significant Bit (MSB) and $Q_0$ for the Least Significant Bit (LSB). The circuit must cycle through the decimal integer sequence $0 \\rightarrow 1 \\rightarrow 3 \\rightarrow 0$ and repeat. The design will be implemented using two JK-type flip-flops, one for each bit of the state.\n\nDetermine the correct set of simplified Boolean logic expressions for the flip-flop inputs ($J_1, K_1, J_0, K_0$) required to produce this sequence. The expressions should be in terms of the state variables $Q_1$ and $Q_0$. The logic should also ensure that if the counter accidentally enters any unused state, it will return to the main sequence on the next clock pulse (i.e., the design must be self-correcting).\n\nSelect the correct set of equations from the options below.\n\nA. $J_1 = Q_0$, $K_1 = Q_1$, $J_0 = \\overline{Q_1}$, $K_0 = Q_1$\n\nB. $J_1 = Q_0$, $K_1 = Q_0$, $J_0 = \\overline{Q_1}$, $K_0 = Q_1$\n\nC. $J_1 = Q_0$, $K_1 = Q_1$, $J_0 = \\overline{Q_1}\\overline{Q_0}$, $K_0 = Q_1 Q_0$\n\nD. $J_1 = \\overline{Q_1}$, $K_1 = Q_1$, $J_0 = Q_0$, $K_0 = Q_1$\n\nE. $J_1 = 1$, $K_1 = 1$, $J_0 = \\overline{Q_1}$, $K_0 = \\overline{Q_1}$", "solution": "We are to implement the synchronous three-state sequence of states $00 \\rightarrow 01 \\rightarrow 11 \\rightarrow 00$ using two JK flip-flops with state bits $(Q_{1}, Q_{0})$ and ensure self-correction from the unused state $10$. For a JK flip-flop, the excitation requirements for a single bit are:\n- $0 \\rightarrow 0$: $J=0$, $K$ is don't care.\n- $0 \\rightarrow 1$: $J=1$, $K$ is don't care.\n- $1 \\rightarrow 0$: $J$ is don't care, $K=1$.\n- $1 \\rightarrow 1$: $J$ is don't care, $K=0$.\n\nFirst, write the required next-state transitions for each defined state, and choose a self-correcting next state for the unused state $10$ (sending it to $00$):\n- From $00$: next is $01$, so $Q_{1}: 0 \\rightarrow 0$, $Q_{0}: 0 \\rightarrow 1$.\n- From $01$: next is $11$, so $Q_{1}: 0 \\rightarrow 1$, $Q_{0}: 1 \\rightarrow 1$.\n- From $11$: next is $00$, so $Q_{1}: 1 \\rightarrow 0$, $Q_{0}: 1 \\rightarrow 0$.\n- From $10$ (unused, chosen to self-correct): next is $00$, so $Q_{1}: 1 \\rightarrow 0$, $Q_{0}: 0 \\rightarrow 0$.\n\nUsing the excitation requirements:\n\nFor $Q_{1}$:\n- At $00$: $0 \\rightarrow 0$ gives $J_{1}=0$, $K_{1}$ is don't care.\n- At $01$: $0 \\rightarrow 1$ gives $J_{1}=1$, $K_{1}$ is don't care.\n- At $11$: $1 \\rightarrow 0$ gives $J_{1}$ is don't care, $K_{1}=1$.\n- At $10$: $1 \\rightarrow 0$ gives $J_{1}$ is don't care, $K_{1}=1$.\n\nMinimizing over present state variables $(Q_{1}, Q_{0})$:\n- $J_{1}$ is required to be $1$ only at $01$ and is don't care at $11$ and $10$, hence the simplest is $J_{1} = Q_{0}$.\n- $K_{1}$ is required to be $1$ at $11$ and $10$, and don't care at $00$ and $01$, so the simplest is $K_{1} = Q_{1}$.\n\nFor $Q_{0}$:\n- At $00$: $0 \\rightarrow 1$ gives $J_{0}=1$, $K_{0}$ is don't care.\n- At $01$: $1 \\rightarrow 1$ gives $J_{0}$ is don't care, $K_{0}=0$.\n- At $11$: $1 \\rightarrow 0$ gives $J_{0}$ is don't care, $K_{0}=1$.\n- At $10$: $0 \\rightarrow 0$ gives $J_{0}=0$, $K_{0}$ is don't care.\n\nMinimizing:\n- $J_{0}$ must be $1$ when $Q_{1}=0$ at $00$ and may also be $1$ at $01$ (which still yields $Q_{0}^{+}=1$), and must be $0$ when $Q_{1}=1$ at $10$. The simplest expression is $J_{0} = \\overline{Q_{1}}$.\n- $K_{0}$ must be $1$ when $Q_{1}=1$ at $11$ and may also be $1$ at $10$ (which still yields $Q_{0}^{+}=0$), and must be $0$ when $Q_{1}=0$ at $01$. The simplest expression is $K_{0} = Q_{1}$.\n\nThus the simplified input equations are\n$$J_{1} = Q_{0},\\quad K_{1} = Q_{1},\\quad J_{0} = \\overline{Q_{1}},\\quad K_{0} = Q_{1}.$$\n\nVerification of state evolution and self-correction:\n- From $00$: $J_{1}=0$, $K_{1}=0$ gives $Q_{1}^{+}=0$; $J_{0}=1$, $K_{0}=0$ gives $Q_{0}^{+}=1$; hence $00 \\rightarrow 01$.\n- From $01$: $J_{1}=1$, $K_{1}=0$ gives $Q_{1}^{+}=1$; $J_{0}=1$, $K_{0}=0$ gives $Q_{0}^{+}=1$; hence $01 \\rightarrow 11$.\n- From $11$: $J_{1}=1$, $K_{1}=1$ toggles $Q_{1}^{+}=0$; $J_{0}=0$, $K_{0}=1$ resets $Q_{0}^{+}=0$; hence $11 \\rightarrow 00$.\n- From $10$ (unused): $J_{1}=0$, $K_{1}=1$ resets $Q_{1}^{+}=0$; $J_{0}=0$, $K_{0}=1$ resets $Q_{0}^{+}=0$; hence $10 \\rightarrow 00$, returning to the main loop in one clock.\n\nThese match option A.", "answer": "$$\\boxed{A}$$", "id": "1928465"}, {"introduction": "Building upon the fundamentals, this exercise introduces an external control input to a sequential circuit, a common feature in practical digital systems. You will design a counter using D flip-flops that can either advance through its sequence or hold its current state, based on the value of a control signal. This practice will deepen your understanding of how to create more flexible and interactive state machines [@problem_id:1928444].", "problem": "A synchronous 3-bit counter is to be designed using positive-edge-triggered D-type flip-flops. The state of the counter is represented by the bits $Q_2, Q_1, Q_0$, where $Q_2$ is the most significant bit. The counter has a single control input, $S$.\n\nThe behavior of the counter is as follows:\n- When the input $S$ is low (0), the counter cycles through the sequence of states $1 \\rightarrow 2 \\rightarrow 4 \\rightarrow 1 \\rightarrow \\dots$ (in decimal). The transition to the next state in the sequence occurs on each rising clock edge.\n- When the input $S$ is high (1), the counter \"stutters\": it holds its current state for the next clock cycle. This means if the counter is in a valid state from the sequence, it will remain in that same state after the next rising clock edge.\n\nThe flip-flop inputs are labeled $D_2, D_1, D_0$, corresponding to the state bits $Q_2, Q_1, Q_0$. Any state not in the specified sequence ($0, 3, 5, 6, 7$) is considered an unused state. For the purpose of logic simplification, the next state for any unused current state can be treated as a \"don't care\" condition.\n\nWhich of the following sets of simplified Sum-of-Products (SOP) expressions correctly defines the inputs $D_2, D_1, D_0$ for the flip-flops? In the expressions, a variable followed by a prime (e.g., $Q'$) denotes its logical NOT.\n\nA.\n$D_2 = S'Q_2'Q_1Q_0' + SQ_2Q_1'Q_0'$\n$D_1 = S'Q_2'Q_1'Q_0 + SQ_2'Q_1Q_0'$\n$D_0 = S'Q_2Q_1'Q_0' + SQ_2'Q_1'Q_0$\n\nB.\n$D_2 = SQ_2'Q_1 + S'Q_2$\n$D_1 = SQ_2'Q_0 + S'Q_2'Q_1$\n$D_0 = SQ_2 + S'Q_2'Q_1'$\n\nC.\n$D_2 = S'Q_2'Q_1 + SQ_2$\n$D_1 = S'Q_2'Q_0 + SQ_2'Q_1$\n$D_0 = S'Q_2 + SQ_2'Q_1'$\n\nD.\n$D_2 = S'Q_2'Q_1 + SQ_2$\n$D_1 = S'Q_2'Q_0 + SQ_2'Q_1$\n$D_0 = SQ_2'Q_1'$", "solution": "We use positive-edge-triggered D flip-flops, so for each bit $i \\in \\{2,1,0\\}$ the input $D_{i}$ must equal the next-state value $Q_{i}^{+}$ expressed as a Boolean function of the current state $(Q_{2},Q_{1},Q_{0})$ and the control input $S$:\n$$\nD_{i} = Q_{i}^{+} = f_{i}(S,Q_{2},Q_{1},Q_{0}).\n$$\nThe valid states are $001$ (decimal $1$), $010$ (decimal $2$), and $100$ (decimal $4$). Unused states $\\{000,011,101,110,111\\}$ are treated as do not care for simplification. The specified behavior is:\n- If $S=0$: $001 \\rightarrow 010$, $010 \\rightarrow 100$, $100 \\rightarrow 001$.\n- If $S=1$: stutter (hold), so $Q^{+} = Q$ for the valid states.\n\nWe tabulate the required next-state bits for the valid states:\n- For $Q=001$: if $S=0$, $Q^{+}=010$ so $(D_{2},D_{1},D_{0})=(0,1,0)$; if $S=1$, $Q^{+}=001$ so $(0,0,1)$.\n- For $Q=010$: if $S=0$, $Q^{+}=100$ so $(1,0,0)$; if $S=1$, $Q^{+}=010$ so $(0,1,0)$.\n- For $Q=100$: if $S=0$, $Q^{+}=001$ so $(0,0,1)$; if $S=1$, $Q^{+}=100$ so $(1,0,0)$.\n\nFrom these, we write the on-sets for each $D_{i}$ and simplify using the do not cares.\n\nFor $D_{2}$, the ones occur at:\n- $(S,Q_{2},Q_{1},Q_{0})=(0,0,1,0)$ from $010 \\xrightarrow{S=0} 100$,\n- $(S,Q_{2},Q_{1},Q_{0})=(1,1,0,0)$ from $100 \\xrightarrow{S=1} 100$.\nWith do not cares, the implicants simplify to\n$$\nD_{2} = S'Q_{2}'Q_{1} + SQ_{2}.\n$$\n\nFor $D_{1}$, the ones occur at:\n- $(S,Q_{2},Q_{1},Q_{0})=(0,0,0,1)$ from $001 \\xrightarrow{S=0} 010$,\n- $(S,Q_{2},Q_{1},Q_{0})=(1,0,1,0)$ from $010 \\xrightarrow{S=1} 010$.\nWith do not cares, the implicants simplify to\n$$\nD_{1} = S'Q_{2}'Q_{0} + SQ_{2}'Q_{1}.\n$$\n\nFor $D_{0}$, the ones occur at:\n- $(S,Q_{2},Q_{1},Q_{0})=(0,1,0,0)$ from $100 \\xrightarrow{S=0} 001$,\n- $(S,Q_{2},Q_{1},Q_{0})=(1,0,0,1)$ from $001 \\xrightarrow{S=1} 001$.\nWith do not cares, the implicants simplify to\n$$\nD_{0} = S'Q_{2} + SQ_{2}'Q_{1}'.\n$$\n\nComparing with the provided options, these match exactly the expressions in option C:\n$$\nD_{2} = S'Q_{2}'Q_{1} + SQ_{2},\\quad\nD_{1} = S'Q_{2}'Q_{0} + SQ_{2}'Q_{1},\\quad\nD_{0} = S'Q_{2} + SQ_{2}'Q_{1}'.\n$$\nTherefore, the correct choice is C.", "answer": "$$\\boxed{C}$$", "id": "1928444"}, {"introduction": "This final challenge encourages you to think about sequential circuits from a higher level of abstraction, viewing them as machines that execute algorithms. Instead of designing the logic from a predefined sequence, you will analyze the behavior of a system whose state transitions follow a unique arithmetic and logical rule. Your task is to trace the evolution of the states to identify the resulting stable cycle, a core skill in analyzing the long-term behavior of any dynamic system [@problem_id:1928470].", "problem": "Consider a 4-bit synchronous digital counter. The state of the counter at any time is represented by a 4-bit binary number, $S = Q_3Q_2Q_1Q_0$, where $Q_3$ is the Most Significant Bit (MSB) and $Q_0$ is the Least Significant Bit (LSB). The counter transitions from its current state, $S$, to the next state, $S^+ = Q_3^+Q_2^+Q_1^+Q_0^+$, at each clock pulse.\n\nThe transition logic is defined as a modified 1-bit right shift operation:\n1. The three least significant bits of the next state are obtained by shifting the three most significant bits of the current state one position to the right: $Q_2^+ = Q_3$, $Q_1^+ = Q_2$, and $Q_0^+ = Q_1$.\n2. The most significant bit of the next state, $Q_3^+$, is determined by a logic function, $P(S)$, which evaluates to 1 if the decimal equivalent of the current state $S$ is a prime number, and 0 otherwise. For the purpose of this problem, a prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n\nThe counter is initialized to the state $S_{init} = 1000_2$ (decimal 8). After initialization, the counter begins to cycle through a sequence of states. Eventually, it will enter a repeating cycle.\n\nDetermine the set of all unique states, represented by their decimal values, that form this repeating cycle. List these decimal values in ascending order.", "solution": "Let the current state be $S=Q_{3}Q_{2}Q_{1}Q_{0}$ with decimal value in $\\{0,\\dots,15\\}$, and let $P(S)=1$ if $S$ is prime and $P(S)=0$ otherwise, where primes in this range are $2,3,5,7,11,13$. By the given transition logic,\n$$\nQ_{3}^{+}=P(S),\\quad Q_{2}^{+}=Q_{3},\\quad Q_{1}^{+}=Q_{2},\\quad Q_{0}^{+}=Q_{1}.\n$$\nTherefore, the next state's decimal value is\n$$\nS^{+}=8Q_{3}^{+}+4Q_{2}^{+}+2Q_{1}^{+}+Q_{0}^{+}=8P(S)+4Q_{3}+2Q_{2}+Q_{1}.\n$$\nSince $\\left\\lfloor \\frac{S}{2}\\right\\rfloor=4Q_{3}+2Q_{2}+Q_{1}$, we obtain the compact update rule\n$$\nS^{+}=8P(S)+\\left\\lfloor \\frac{S}{2}\\right\\rfloor.\n$$\nStarting from the initial state $S_{0}=8$:\n- For $S=8$, $P(8)=0$ and $\\left\\lfloor \\frac{8}{2}\\right\\rfloor=4$, so $S^{+}=4$.\n- For $S=4$, $P(4)=0$ and $\\left\\lfloor \\frac{4}{2}\\right\\rfloor=2$, so $S^{+}=2$.\n- For $S=2$, $P(2)=1$ and $\\left\\lfloor \\frac{2}{2}\\right\\rfloor=1$, so $S^{+}=8\\cdot 1+1=9$.\n- For $S=9$, $P(9)=0$ and $\\left\\lfloor \\frac{9}{2}\\right\\rfloor=4$, so $S^{+}=4$.\n\nAt this point the state $4$ has reappeared, and because the system is deterministic, it will repeat the sequence $4\\to 2\\to 9\\to 4\\to\\cdots$. Hence, the unique states that form the repeating cycle are $\\{2,4,9\\}$, which in ascending order are $2,4,9$.", "answer": "$$\\boxed{\\begin{pmatrix} 2 & 4 & 9 \\end{pmatrix}}$$", "id": "1928470"}]}