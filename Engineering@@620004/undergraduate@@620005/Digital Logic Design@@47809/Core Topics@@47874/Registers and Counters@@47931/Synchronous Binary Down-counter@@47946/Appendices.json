{"hands_on_practices": [{"introduction": "The journey into digital design often begins with understanding the building blocks and then learning how to assemble them. This first practice exercise reverses the typical analysis process; instead of predicting a circuit's behavior, you will design the logic that creates a specific behavior. By determining the necessary Boolean expressions for the inputs of JK flip-flops, you will construct a 3-bit synchronous down-counter from the ground up, providing a foundational experience in sequential logic synthesis [@problem_id:1965080].", "problem": "A digital timing circuit for a laboratory experiment is required to function as a 3-bit synchronous binary down-counter. The counter will cycle through the states from 7 (binary 111) down to 0 (binary 000) and then wrap around to 7 on the next clock pulse. The design will be implemented using three JK flip-flops. The outputs of the flip-flops, representing the state of the counter, are denoted as $Q_2, Q_1, Q_0$, where $Q_2$ is the Most Significant Bit (MSB).\n\nYour task is to determine the logic required to drive the inputs of these flip-flops. Find the set of six simplified Boolean expressions for the inputs $J_2, K_2, J_1, K_1, J_0, K_0$ in terms of the state variables $Q_2, Q_1, Q_0$ and their complements $\\overline{Q_2}, \\overline{Q_1}, \\overline{Q_0}$. The expressions should be in a minimal sum-of-products form. Present your six answers in a single row matrix in the specific order $(J_2, K_2, J_1, K_1, J_0, K_0)$.", "solution": "We design a synchronous 3-bit down-counter using JK flip-flops with state bits $Q_{2}$ (MSB), $Q_{1}$, and $Q_{0}$ (LSB). The required state sequence is $111 \\rightarrow 110 \\rightarrow 101 \\rightarrow 100 \\rightarrow 011 \\rightarrow 010 \\rightarrow 001 \\rightarrow 000 \\rightarrow 111 \\rightarrow \\dots$.\n\nFor a JK flip-flop, the excitation table specifies:\n- To hold: $J=0$, $K=0$.\n- To set: $J=1$, $K=0$.\n- To reset: $J=0$, $K=1$.\n- To toggle: $J=1$, $K=1$.\n\nEquivalently, if we define a toggle control $T$ such that $Q^{+} = Q \\oplus T$, then realizing $T$ via a JK device uses $J=K=T$. Thus, for each bit $Q_{i}$, we determine when it must toggle between consecutive states, define $T_{i}$ accordingly, and set $J_{i}=K_{i}=T_{i}$.\n\nFrom the sequence, the next-state relations are:\n- $Q_{0}^{+} = \\overline{Q_{0}}$. Hence $Q_{0}$ toggles every clock, so $T_{0}=1$, giving $J_{0}=1$ and $K_{0}=1$.\n- $Q_{1}$ toggles exactly when $Q_{0}=0$ (observing the transitions $110,100,010,000$), so $T_{1}=\\overline{Q_{0}}$, giving $J_{1}=\\overline{Q_{0}}$ and $K_{1}=\\overline{Q_{0}}$.\n- $Q_{2}$ toggles exactly when $Q_{1}=0$ and $Q_{0}=0$ (observing the transitions $100$ and $000$), so $T_{2}=\\overline{Q_{1}}\\overline{Q_{0}}$, giving $J_{2}=\\overline{Q_{1}}\\overline{Q_{0}}$ and $K_{2}=\\overline{Q_{1}}\\overline{Q_{0}}$.\n\nEach expression is already in minimal sum-of-products form (a single product term or the constant $1$). Arranged in the required order $(J_{2},K_{2},J_{1},K_{1},J_{0},K_{0})$, the results are:\n$$\nJ_{2}=\\overline{Q_{1}}\\overline{Q_{0}},\\quad\nK_{2}=\\overline{Q_{1}}\\overline{Q_{0}},\\quad\nJ_{1}=\\overline{Q_{0}},\\quad\nK_{1}=\\overline{Q_{0}},\\quad\nJ_{0}=1,\\quad\nK_{0}=1.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\\overline{Q_{1}}\\overline{Q_{0}} & \\overline{Q_{1}}\\overline{Q_{0}} & \\overline{Q_{0}} & \\overline{Q_{0}} & 1 & 1\\end{pmatrix}}$$", "id": "1965080"}, {"introduction": "Once a circuit is designed, the next crucial skill is to verify its operation by analyzing its state transitions over time. This exercise asks you to step into the role of an analyst, manually tracing the states of a pre-designed 3-bit synchronous down-counter. By calculating the logic inputs at each step and predicting the subsequent state, you will gain a deep, clock-by-clock understanding of how the counter's state evolves, a fundamental skill for debugging and verification [@problem_id:1965124].", "problem": "A 3-bit synchronous binary down-counter is constructed using three positive-edge-triggered T flip-flops. The outputs of the flip-flops are denoted as $Q_2, Q_1,$ and $Q_0$, where $Q_2$ is the most significant bit (MSB) and $Q_0$ is the least significant bit (LSB). The logical inputs to the T flip-flops, denoted $T_2, T_1,$ and $T_0$, are determined by the current state of the counter outputs according to the following Boolean logic equations. Here, an overbar (e.g., $\\overline{A}$) denotes the logical NOT operation and a dot (e.g., $A \\cdot B$) denotes the logical AND operation.\n\n$T_0 = 1$\n$T_1 = \\overline{Q_0}$\n$T_2 = \\overline{Q_1} \\cdot \\overline{Q_0}$\n\nA T flip-flop toggles its output state on the triggering clock edge if its T input is 1; otherwise, it holds its current state if T is 0. Initially, just before the first clock pulse arrives, the state of the counter is $Q_2Q_1Q_0 = 101$.\n\nDetermine the logical values of the inputs $(T_2, T_1, T_0)$ that are present at the T flip-flop terminals just before the arrival of the 4th positive clock edge.\n\nSelect the correct tuple from the options below.\n\nA. (0, 0, 1)\n\nB. (0, 1, 1)\n\nC. (1, 1, 1)\n\nD. (1, 0, 0)\n\nE. (0, 1, 0)", "solution": "We use the T flip-flop transition rule: on the positive clock edge, the next state of each flip-flop is given by $Q^{+} = Q \\oplus T$, where $\\oplus$ denotes XOR. Since the counter is synchronous, the $T$ inputs are evaluated from the current state just before each clock edge. The given logic is\n$$\nT_{0}=1,\\quad T_{1}=\\overline{Q_{0}},\\quad T_{2}=\\overline{Q_{1}}\\cdot \\overline{Q_{0}}.\n$$\nInitial state just before the first positive edge: $Q_{2}Q_{1}Q_{0}=101$.\n\nBefore the 1st edge (state $101$):\n$$\nT_{0}=1,\\quad T_{1}=\\overline{1}=0,\\quad T_{2}=\\overline{0}\\cdot \\overline{1}=1\\cdot 0=0.\n$$\nAt the 1st edge, apply $Q^{+}=Q\\oplus T$:\n$$\nQ_{0}^{+}=1\\oplus 1=0,\\quad Q_{1}^{+}=0\\oplus 0=0,\\quad Q_{2}^{+}=1\\oplus 0=1,\n$$\nso the state after the 1st edge is $100$.\n\nBefore the 2nd edge (state $100$):\n$$\nT_{0}=1,\\quad T_{1}=\\overline{0}=1,\\quad T_{2}=\\overline{0}\\cdot \\overline{0}=1\\cdot 1=1.\n$$\nAt the 2nd edge:\n$$\nQ_{0}^{+}=0\\oplus 1=1,\\quad Q_{1}^{+}=0\\oplus 1=1,\\quad Q_{2}^{+}=1\\oplus 1=0,\n$$\nso the state after the 2nd edge is $011$.\n\nBefore the 3rd edge (state $011$):\n$$\nT_{0}=1,\\quad T_{1}=\\overline{1}=0,\\quad T_{2}=\\overline{1}\\cdot \\overline{1}=0\\cdot 0=0.\n$$\nAt the 3rd edge:\n$$\nQ_{0}^{+}=1\\oplus 1=0,\\quad Q_{1}^{+}=1\\oplus 0=1,\\quad Q_{2}^{+}=0\\oplus 0=0,\n$$\nso the state after the 3rd edge is $010$.\n\nTherefore, just before the 4th positive clock edge, the current state is $Q_{2}Q_{1}Q_{0}=010$. The $T$ inputs at that moment are\n$$\nT_{0}=1,\\quad T_{1}=\\overline{0}=1,\\quad T_{2}=\\overline{1}\\cdot \\overline{0}=0\\cdot 1=0,\n$$\ni.e., $(T_{2},T_{1},T_{0})=(0,1,1)$, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1965124"}, {"introduction": "Real-world digital systems demand more than just standard counting; they require custom moduli and robust, fault-tolerant operation. This advanced design problem challenges you to create a MOD-10 (or BCD) down-counter, a common component in decimal-based applications, and to incorporate logic that handles illegal states gracefully. By designing a system that automatically recovers from unforeseen states, you will engage with the principles of robust design that are essential for building reliable and resilient digital circuits [@problem_id:1965111].", "problem": "A synchronous MOD-10 down-counter is to be designed using T-type flip-flops. The state of the counter is represented by four bits, $Q_3, Q_2, Q_1, Q_0$, where $Q_3$ is the most significant bit (MSB). The counter should follow the sequence from 9 (binary $1001$) down to 0 (binary $0000$), and upon reaching 0, it should wrap around to 9 on the next clock pulse. This counter must also include a fault-tolerance feature: if the counter happens to enter any of the unused states (corresponding to decimal values 10 through 15), it must transition to the state 9 (binary $1001$) on the next active clock edge.\n\nGiven these requirements, determine the correct minimal Sum-of-Products (SOP) expressions for the toggle inputs $T_3$ and $T_2$, which correspond to the flip-flops for state bits $Q_3$ and $Q_2$. Select the correct pair of expressions from the options below. In the expressions, a bar over a variable denotes negation (e.g., $\\overline{Q_0}$ is the negation of $Q_0$).\n\nA. $T_3 = \\overline{Q_2}\\overline{Q_1}\\overline{Q_0}$; $T_2 = Q_3 Q_2 + \\overline{Q_1}\\overline{Q_0}$\n\nB. $T_3 = Q_3\\overline{Q_2}\\overline{Q_1}\\overline{Q_0}$; $T_2 = Q_3 Q_2$\n\nC. $T_3 = 1$; $T_2 = \\overline{Q_1}\\overline{Q_0}$\n\nD. $T_3 = \\overline{Q_2}\\overline{Q_1}\\overline{Q_0}$; $T_2 = Q_3 Q_2 + Q_2\\overline{Q_1}\\overline{Q_0} + Q_3\\overline{Q_2}\\overline{Q_1}\\overline{Q_0}$\n\nE. $T_3 = \\overline{Q_3} + \\overline{Q_0}$; $T_2 = Q_2\\overline{Q_1}\\overline{Q_0} + Q_3\\overline{Q_2}\\overline{Q_1}\\overline{Q_0}$", "solution": "For a synchronous counter built with T flip-flops, the excitation relation is\n$$\nT_{i}=Q_{i}\\oplus Q_{i}^{+},\n$$\nwhere $Q_{i}^{+}$ is the next value of bit $Q_{i}$.\n\nThe required down-counting sequence over valid states is\n$$\n1001\\to 1000\\to 0111\\to 0110\\to 0101\\to 0100\\to 0011\\to 0010\\to 0001\\to 0000\\to 1001,\n$$\nand for any unused state $1010$ through $1111$, the next state is $1001$.\n\nEnumerating all present states $Q_{3}Q_{2}Q_{1}Q_{0}$ with their next states and extracting the next values of $Q_{3}$ and $Q_{2}$ gives:\n\n- $0000\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $0001\\to 0000$: $Q_{3}^{+}=0$, $Q_{2}^{+}=0$.\n- $0010\\to 0001$: $Q_{3}^{+}=0$, $Q_{2}^{+}=0$.\n- $0011\\to 0010$: $Q_{3}^{+}=0$, $Q_{2}^{+}=0$.\n- $0100\\to 0011$: $Q_{3}^{+}=0$, $Q_{2}^{+}=0$.\n- $0101\\to 0100$: $Q_{3}^{+}=0$, $Q_{2}^{+}=1$.\n- $0110\\to 0101$: $Q_{3}^{+}=0$, $Q_{2}^{+}=1$.\n- $0111\\to 0110$: $Q_{3}^{+}=0$, $Q_{2}^{+}=1$.\n- $1000\\to 0111$: $Q_{3}^{+}=0$, $Q_{2}^{+}=1$.\n- $1001\\to 1000$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $1010\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $1011\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $1100\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $1101\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $1110\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n- $1111\\to 1001$: $Q_{3}^{+}=1$, $Q_{2}^{+}=0$.\n\nCompute $T_{3}=Q_{3}\\oplus Q_{3}^{+}$. It is $1$ only when $Q_{3}$ changes:\n- At $0000$: $0\\to 1$, so $T_{3}=1$.\n- At $1000$: $1\\to 0$, so $T_{3}=1$.\nFor all other present states, $Q_{3}$ does not toggle, so $T_{3}=0$. Therefore $T_{3}=1$ exactly when $Q_{2}=0, Q_{1}=0$, and $Q_{0}=0$, independent of $Q_{3}$. Hence\n$$ T_{3}=\\overline{Q_{2}}\\overline{Q_{1}}\\overline{Q_{0}}. $$\n\nCompute $T_{2}=Q_{2}\\oplus Q_{2}^{+}$. From the list above, $T_{2}=1$ for present states:\n$$\n0100,\\,1000,\\,1100,\\,1101,\\,1110,\\,1111,\n$$\nand $T_{2}=0$ otherwise. Minimizing the Sum-of-Products with a Karnaugh map or by inspection:\n- The group $\\{1100,1101,1110,1111\\}$ yields the implicant $Q_{3}Q_{2}$.\n- The minterm $0100$ can be covered by $Q_{2}\\overline{Q_{1}}\\overline{Q_{0}}$ (this also covers $1100$, already included).\n- The minterm $1000$ is covered by $Q_{3}\\overline{Q_{2}}\\overline{Q_{1}}\\overline{Q_{0}}$.\n\nThus a minimal SOP is\n$$ T_{2}=Q_{3}Q_{2}+Q_{2}\\overline{Q_{1}}\\overline{Q_{0}}+Q_{3}\\overline{Q_{2}}\\overline{Q_{1}}\\overline{Q_{0}}. $$\n\nComparing with the options, the correct pair is option D.", "answer": "$$\\boxed{D}$$", "id": "1965111"}]}