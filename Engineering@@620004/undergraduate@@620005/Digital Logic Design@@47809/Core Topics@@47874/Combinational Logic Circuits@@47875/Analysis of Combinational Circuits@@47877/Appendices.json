{"hands_on_practices": [{"introduction": "A crucial skill for any digital logic designer is not just creating circuits, but also analyzing them to verify their function. In this practice, we examine a proposed design for a 2-bit equality comparator that doesn't work as intended [@problem_id:1908635]. By deriving the circuit's actual Boolean expression from its gate-level description, you'll develop the analytical skills needed to debug and understand any logic network.", "problem": "An undergraduate student is tasked with designing a 2-bit equality comparator. The circuit should take two 2-bit binary numbers, $A = A_1A_0$ and $B = B_1B_0$, as input and produce a high output ($F=1$) if and only if $A$ is equal to $B$. The student attempts to build this circuit using only 2-input NAND gates.\n\nThe student's proposed circuit design is described by the following set of logic equations, where the output of each gate is an input to a subsequent gate:\n\n1.  The inputs for the most significant bits, $A_1$ and $B_1$, are fed into a NAND gate whose output is denoted as $G_1$.\n2.  The inputs for the least significant bits, $A_0$ and $B_0$, are fed into a second NAND gate whose output is denoted as $G_2$.\n3.  The intermediate outputs, $G_1$ and $G_2$, are then used as inputs to a final NAND gate, which produces the circuit's overall output, $F$.\n\nThis circuit does not correctly implement the 2-bit equality comparison function. Determine the simplified Boolean expression for the actual function implemented by the student's circuit. Express your final answer as a function of the inputs $A_1, A_0, B_1, B_0$ in sum-of-products form.", "solution": "A 2-input NAND gate with inputs $X$ and $Y$ implements the function $\\overline{XY}$. Applying this to the given circuit, the first NAND gate with inputs $A_{1}$ and $B_{1}$ produces $G_{1}=\\overline{A_{1}B_{1}}$, and the second NAND gate with inputs $A_{0}$ and $B_{0}$ produces $G_{2}=\\overline{A_{0}B_{0}}$. The final NAND gate takes $G_{1}$ and $G_{2}$ as inputs, yielding the overall output\n$$\nF=\\overline{G_{1}G_{2}}=\\overline{\\left(\\overline{A_{1}B_{1}}\\right)\\left(\\overline{A_{0}B_{0}}\\right)}.\n$$\nUsing De Morganâ€™s law $\\overline{XY}=\\overline{X}+\\overline{Y}$ and double negation $\\overline{\\overline{Z}}=Z$, we obtain\n$$\nF=\\overline{\\overline{A_{1}B_{1}}}+\\overline{\\overline{A_{0}B_{0}}}=A_{1}B_{1}+A_{0}B_{0}.\n$$\nThis is already in sum-of-products form.", "answer": "$$\\boxed{A_{1}B_{1}+A_{0}B_{0}}$$", "id": "1908635"}, {"introduction": "Complex digital systems are rarely designed gate by gate; instead, they are built from larger, reusable components like multiplexers. This exercise challenges you to think like a system architect by analyzing a circuit composed of several smaller multiplexers [@problem_id:1908607]. Determining the function of the equivalent single, larger multiplexer demonstrates the power of hierarchical analysis in simplifying and understanding composite designs.", "problem": "Consider a digital logic circuit constructed from three 2-to-1 multiplexers (MUX). The output of a 2-to-1 MUX with data inputs $I_0, I_1$ and a select line $S$ is defined by the Boolean expression $Y = \\overline{S}\\,I_0 + S\\,I_1$. The circuit is configured as follows:\n\n1.  The first multiplexer, MUX_1, has data inputs $A$ and $B$ connected to its '0' and '1' inputs, respectively. Its select line is connected to a signal named $S_1$.\n2.  The second multiplexer, MUX_2, has data inputs $C$ and $D$ connected to its '0' and '1' inputs, respectively. Its select line is also connected to the signal $S_1$.\n3.  The third multiplexer, MUX_F, produces the final output of the circuit. The output from MUX_1 is connected to the '0' input of MUX_F, and the output from MUX_2 is connected to the '1' input of MUX_F. The select line for MUX_F is connected to a signal named $S_0$.\n\nThis entire arrangement is functionally equivalent to a single 4-to-1 multiplexer. This equivalent 4-to-1 MUX uses $S_1$ as the most significant select bit and $S_0$ as the least significant select bit. Its data inputs are denoted $I_0, I_1, I_2, I_3$, corresponding to select line combinations $S_1S_0 = 00, 01, 10, 11$ respectively.\n\nWhich of the following options correctly describes the signals that must be connected to the data inputs ($I_0, I_1, I_2, I_3$) of the equivalent 4-to-1 multiplexer?\n\nA. $I_0=A, I_1=B, I_2=C, I_3=D$\n\nB. $I_0=C, I_1=A, I_2=D, I_3=B$\n\nC. $I_0=A, I_1=C, I_2=B, I_3=D$\n\nD. $I_0=C, I_1=D, I_2=A, I_3=B$", "solution": "A 2-to-1 MUX with data inputs $I_{0}, I_{1}$ and select $S$ has output given by the Boolean equation\n$$\nY=\\overline{S}\\,I_{0}+S\\,I_{1}.\n$$\nFor MUX_1 with data inputs $A$ (at input 0) and $B$ (at input 1) and select $S_{1}$,\n$$\nY_{1}=\\overline{S_{1}}\\,A+S_{1}\\,B.\n$$\nFor MUX_2 with data inputs $C$ (at input 0) and $D$ (at input 1) and select $S_{1}$,\n$$\nY_{2}=\\overline{S_{1}}\\,C+S_{1}\\,D.\n$$\nThe final MUX, MUX_F, selects between $Y_{1}$ (at input 0) and $Y_{2}$ (at input 1) with select $S_{0}$, so its output is\n$$\nY=\\overline{S_{0}}\\,Y_{1}+S_{0}\\,Y_{2}.\n$$\nSubstituting $Y_{1}$ and $Y_{2}$ and expanding gives\n$$\nY=\\overline{S_{0}}\\left(\\overline{S_{1}}\\,A+S_{1}\\,B\\right)+S_{0}\\left(\\overline{S_{1}}\\,C+S_{1}\\,D\\right)\n=\\overline{S_{1}}\\overline{S_{0}}\\,A+S_{1}\\overline{S_{0}}\\,B+\\overline{S_{1}}S_{0}\\,C+S_{1}S_{0}\\,D.\n$$\nA 4-to-1 MUX with select bits $S_{1}$ (most significant) and $S_{0}$ (least significant) and data inputs $I_{0},I_{1},I_{2},I_{3}$ has the canonical output form\n$$\nY=\\overline{S_{1}}\\overline{S_{0}}\\,I_{0}+\\overline{S_{1}}S_{0}\\,I_{1}+S_{1}\\overline{S_{0}}\\,I_{2}+S_{1}S_{0}\\,I_{3}.\n$$\nComparing term by term yields\n$$\nI_{0}=A,\\quad I_{1}=C,\\quad I_{2}=B,\\quad I_{3}=D,\n$$\nwhich corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1908607"}, {"introduction": "What happens when a circuit's output is fed back to one of its inputs? This practice explores the fascinating and critical boundary between purely combinational circuits and sequential circuits that possess memory [@problem_id:1908636]. By carefully analyzing the circuit's response to different static inputs, you will discover that a feedback loop can lead to complex behaviors, including stable memory states and oscillation, which are the foundational principles of sequential logic.", "problem": "An engineer is analyzing a digital logic circuit constructed from ideal logic gates. For the purposes of this analysis, the propagation delay through each gate is considered to be a small, non-zero, but equal value $\\tau$. The circuit has two inputs, `A` and `B`, and a single output, `Q`. The topology of the circuit is described as follows:\n\n- A 2-input XOR gate, designated G1, takes `A` and `B` as its inputs.\n- A 2-input NAND gate, designated G2, takes input `A` and the circuit's output `Q` as its inputs.\n- A 2-input AND gate, designated G3, takes the outputs of G1 and G2 as its inputs.\n- A 2-input OR gate, designated G4, takes input `B` and the output of G3 as its inputs.\n- The output of gate G4 serves as the circuit's overall output, `Q`.\n\nA feedback path exists where the output `Q` is routed back to one of the inputs of the NAND gate G2. Given this structure, analyze the behavior of the circuit for all possible combinations of the static inputs `A` and `B`. Which of the following statements most accurately describes the circuit's operation?\n\nA. The circuit is a purely combinational logic circuit, and its output `Q` can be expressed as a Boolean function dependent only on the current state of inputs `A` and `B`.\n\nB. The circuit functions as a standard D-type latch, where one input acts as the data line and the other as the enable/clock, allowing it to store one bit of information.\n\nC. The circuit functions as a synchronous finite-state machine whose next state depends on the current inputs and a rising or falling clock edge.\n\nD. The circuit exhibits multiple modes of operation: for some combinations of inputs it behaves as a stable memory element that can be set or reset, while for at least one combination of inputs it becomes astable and oscillates.\n\nE. The circuit is always astable, functioning as an oscillator for all possible input combinations of `A` and `B`.", "solution": "Let the outputs of the intermediate gates be denoted as follows: $X$ for G1 (XOR), $N$ for G2 (NAND), $M$ for G3 (AND), and the overall output $Q$ is the output of G4 (OR). Using Boolean algebra with standard symbols, write the gate equations:\n$$\nX=A \\oplus B,\\quad N=\\overline{AQ}=\\overline{A} + \\overline{Q},\\quad M=XN,\\quad Q=B+M.\n$$\nSubstitute to obtain a single equation for $Q$ in terms of $A$, $B$, and $Q$:\n$$\nQ=B + \\big[(A \\oplus B) (\\overline{A} + \\overline{Q})\\big].\n$$\nAnalyze by cases on the static inputs.\n\n1) If $B=1$, then $X=A \\oplus 1=\\overline{A}$, and $M=XN=\\overline{A} (\\overline{A} + \\overline{Q})$. By absorption, $P(P+R)=P$, so $M=\\overline{A}$. Therefore\n$$\nQ=B+M=1+\\overline{A}=1.\n$$\nThus for $B=1$ the unique stable output is $Q=1$, independent of $A$ and of the feedback.\n\n2) If $B=0$, then $Q=M$ and $X=A \\oplus 0=A$, so\n$$\nQ=XN=A(\\overline{AQ}) = A(\\overline{A}+\\overline{Q}) = A\\overline{A} + A\\overline{Q} = 0 + A\\overline{Q} = A\\overline{Q}.\n$$\nHence, for $B=0$ the closed-loop equation reduces to\n$$\nQ=A\\overline{Q}.\n$$\nNow consider subcases:\n- If $A=0$, then $Q=0\\overline{Q}=0$. The unique stable state is $Q=0$ (reset), independent of prior $Q$.\n- If $A=1$, then $Q=1\\overline{Q}=\\overline{Q}$. There is no Boolean fixed point satisfying $Q=\\overline{Q}$, so no static solution exists. With nonzero gate delays $\\tau$, the feedback path acts as an odd inversion around the loop, producing an astable oscillation. Concretely, with $A=1$, $B=0$, one has $X=1$ after its own delay, $N=\\overline{Q}$, $M=\\overline{Q}$, and $Q=\\overline{Q}$, yielding a loop relation of the form $Q(t+3\\tau)=\\overline{Q(t)}$. This implies free-running oscillation with a fundamental period approximately $2\\cdot 3\\tau$.\n\nSummarizing the modes for static inputs:\n- $B=1$: $Q$ is forced to $1$ (set), stable.\n- $B=0$, $A=0$: $Q$ is forced to $0$ (reset), stable.\n- $B=0$, $A=1$: the circuit is astable and oscillates.\n\nTherefore, the circuit exhibits multiple modes of operation: for some input combinations it reaches and holds a stable state (set or reset), and for at least one input combination it is astable and oscillates. This corresponds to option D and excludes the purely combinational, standard latch, synchronous FSM, and always-astable descriptions.", "answer": "$$\\boxed{D}$$", "id": "1908636"}]}