{"hands_on_practices": [{"introduction": "Building large-scale digital systems often involves using smaller, standard components in clever arrangements. This first practice tackles a fundamental design question: resource planning. By figuring out how to construct a very large multiplexer from smaller ones, you'll learn to think hierarchically and systematically calculate the components needed for each level of the cascade [@problem_id:1920031].", "problem": "A digital systems engineer is tasked with designing a circuit that requires a single large multiplexer (MUX) with 1024 data inputs. The only available components in the parts inventory are a sufficient quantity of 8-to-1 MUXs. To achieve the required 1024-to-1 functionality, the engineer must construct a multi-level circuit by cascading the available 8-to-1 MUXs. This involves using the outputs of one level of MUXs as the inputs to the next level, continuing until a single final output is produced. Calculate the total number of 8-to-1 MUXs needed to build the 1024-to-1 MUX.", "solution": "The problem asks for the total number of 8-to-1 multiplexers (MUXs) required to construct a 1024-to-1 MUX. This can be solved by considering the structure of the cascaded MUXs level by level.\n\n**Level 1:**\nThe primary goal is to handle the 1024 initial data inputs. Since each available MUX is an 8-to-1 MUX, it can take 8 inputs and select one. To accommodate all 1024 inputs, we group them into sets of 8. The number of MUXs required for this first level is the total number of inputs divided by the number of inputs per MUX.\nNumber of MUXs in Level 1 = $\\frac{1024}{8} = 128$.\nThis first level of 128 MUXs produces 128 outputs, one from each MUX.\n\n**Level 2:**\nThe 128 outputs from Level 1 now become the inputs for the second level of the circuit. We need to select one of these 128 signals. Again, we use 8-to-1 MUXs. The number of MUXs required for this level is the number of inputs (128) divided by 8.\nNumber of MUXs in Level 2 = $\\frac{128}{8} = 16$.\nThis second level of 16 MUXs produces 16 outputs.\n\n**Level 3:**\nThe 16 outputs from Level 2 are the inputs for the third level. We need to select one of these 16 signals. The number of MUXs required is found by grouping these 16 inputs into sets of 8. Since 16 is not perfectly divisible by 8, we need to take the ceiling of the division.\nNumber of MUXs in Level 3 = $\\lceil \\frac{16}{8} \\rceil = \\lceil 2 \\rceil = 2$.\nThese two MUXs will produce 2 outputs. The first MUX will handle inputs 1 through 8, and the second MUX will handle inputs 9 through 16. The unused inputs on the second MUX are typically tied to a logic low or high value, but this doesn't change the number of MUX devices needed.\n\n**Level 4:**\nThe 2 outputs from Level 3 are the inputs for the final level of selection. We need to select one of these 2 signals to produce the final single output of the 1024-to-1 MUX. We must use an 8-to-1 MUX for this task, as it is the only component available.\nNumber of MUXs in Level 4 = $\\lceil \\frac{2}{8} \\rceil = \\lceil 0.25 \\rceil = 1$.\nThis final MUX will take the 2 inputs and produce the single final output.\n\n**Total Number of MUXs:**\nThe total number of 8-to-1 MUXs is the sum of the MUXs used in all levels.\nTotal MUXs = (MUXs in Level 1) + (MUXs in Level 2) + (MUXs in Level 3) + (MUXs in Level 4)\nTotal MUXs = $128 + 16 + 2 + 1 = 147$.\n\nTherefore, a total of 147 8-to-1 MUXs are required.", "answer": "$$\\boxed{147}$$", "id": "1920031"}, {"introduction": "With a plan for our large multiplexer, the next step is to understand its precise operation. This exercise guides you through tracing a signal's path in a two-stage cascaded MUX [@problem_id:1920039]. You will see exactly how the high-order and low-order select bits work together, with some controlling *which* group of inputs is chosen and others selecting the final input *from within* that group.", "problem": "In a digital systems design course, a student is tasked with creating a 16-to-1 multiplexer (MUX) by cascading smaller, readily available 4-to-1 MUX components. The overall circuit has 16 data inputs, denoted $D_0, D_1, \\dots, D_{15}$, and a single output, $Y$. The selection is controlled by a 4-bit binary number represented by the select lines $S_3S_2S_1S_0$, where $S_3$ is the most significant bit.\n\nThe design is implemented in two stages. The first stage consists of four 4-to-1 MUXs, labeled MUX-0, MUX-1, MUX-2, and MUX-3. The second stage consists of a single 4-to-1 MUX, labeled MUX-FINAL.\n\nThe wiring is configured as follows:\n- The two least significant select lines, $S_1$ and $S_0$, are connected to the select inputs of all four first-stage MUXs (MUX-0, MUX-1, MUX-2, and MUX-3). For any 4-to-1 MUX, select bits $s_1s_0$ (where $s_1$ is the MSB) select input $I_k$ where $k$ is the decimal value of $s_1s_0$.\n- The data inputs $D_0, D_1, D_2, D_3$ are connected to the inputs $I_0, I_1, I_2, I_3$ of MUX-0, respectively.\n- The data inputs $D_4, D_5, D_6, D_7$ are connected to the inputs $I_0, I_1, I_2, I_3$ of MUX-1, respectively.\n- The data inputs $D_8, D_9, D_{10}, D_{11}$ are connected to the inputs $I_0, I_1, I_2, I_3$ of MUX-2, respectively.\n- The data inputs $D_{12}, D_{13}, D_{14}, D_{15}$ are connected to the inputs $I_0, I_1, I_2, I_3$ of MUX-3, respectively.\n- The outputs of MUX-0, MUX-1, MUX-2, and MUX-3 are connected to the inputs $I_0, I_1, I_2, I_3$ of MUX-FINAL, respectively.\n- The two most significant select lines, $S_3$ and $S_2$, are connected to the select inputs of MUX-FINAL, with $S_3$ as the more significant bit.\n\nIf the global select lines are set to $S_3S_2S_1S_0 = 1011$, what is the integer index $i$ of the data input line $D_i$ that is passed through to the final output $Y$?", "solution": "A 4-to-1 MUX with select bits $s_{1}$ (MSB) and $s_{0}$ selects input $I_{k}$ where $k$ is the decimal value of $s_{1}s_{0}$, i.e., $k=2s_{1}+s_{0}$. In the two-stage cascade, the second-stage MUX (MUX-FINAL) uses $S_{3}$ (MSB) and $S_{2}$ to select which first-stage MUX output is forwarded. Thus the group index selected by MUX-FINAL is\n$$\nk_{\\text{final}}=2S_{3}+S_{2}.\n$$\nEach first-stage MUX uses $S_{1}$ (MSB) and $S_{0}$ to select one of its four inputs, so within the chosen group the index is\n$$\nk_{\\text{inner}}=2S_{1}+S_{0}.\n$$\nBecause the groups correspond to contiguous blocks of four data lines, the overall selected data index is\n$$\ni=4\\,k_{\\text{final}}+k_{\\text{inner}}=4\\left(2S_{3}+S_{2}\\right)+\\left(2S_{1}+S_{0}\\right)=8S_{3}+4S_{2}+2S_{1}+S_{0}.\n$$\nWith $S_{3}S_{2}S_{1}S_{0}=1011$, we have $S_{3}=1$, $S_{2}=0$, $S_{1}=1$, $S_{0}=1$, hence\n$$\ni=8\\cdot 1+4\\cdot 0+2\\cdot 1+1=11.\n$$\nEquivalently, $S_{3}S_{2}=10$ selects MUX-2 at MUX-FINAL, and $S_{1}S_{0}=11$ selects input $I_{3}$ within MUX-2, which is $D_{11}$.", "answer": "$$\\boxed{11}$$", "id": "1920039"}, {"introduction": "A true test of understanding comes not just from knowing how a circuit should work, but from predicting what happens when it doesn't. This practice presents a hypothetical wiring fault, a common real-world issue, where select lines are swapped [@problem_id:1920059]. By determining the new, incorrect logic function, you will gain a much deeper appreciation for how each select line's position in the cascaded architecture corresponds to its mathematical weight in the final input selection.", "problem": "A digital systems engineer is designing an 8-to-1 Multiplexer (MUX). A standard 8-to-1 MUX has eight data inputs, denoted $D_0, D_1, \\dots, D_7$, and three external select lines, $S_2, S_1, S_0$, where $S_2$ is the most significant bit. The single output, $Y$, is equal to the data input $D_i$, where the index $i$ is the integer value represented by the binary number $S_2S_1S_0$. For example, if the select lines are $(S_2, S_1, S_0) = (1, 0, 1)$, the output is $Y=D_5$.\n\nThe engineer implements this device by cascading seven 2-to-1 MUXs in a standard three-level tree structure. For correct operation, this structure requires the following connections for the select lines:\n- The four MUXs in the first level (closest to the data inputs) are all controlled by the least significant bit, $S_0$.\n- The two MUXs in the second level are controlled by the middle bit, $S_1$.\n- The single MUX in the final level (which produces the output $Y$) is controlled by the most significant bit, $S_2$.\n\nHowever, due to a manufacturing defect, a wiring error occurs. The external select lines for the most significant bit ($S_2$) and the least significant bit ($S_0$) are swapped before they are connected to the cascaded MUX structure. The connection for the middle select line $S_1$ remains correct.\n\nAs a result of this fault, the multiplexer no longer functions as intended. The index of the selected data input, let's call it $i'$, is now a new function of the external select lines $S_2, S_1, S_0$. Your task is to determine this new relationship. Express the faulty index $i'$ as an arithmetic expression solely in terms of $S_2, S_1,$ and $S_0$. For this expression, treat the select line variables as integers having a value of either 0 or 1.", "solution": "The problem asks for the new index $i'$ of the selected data input $D_{i'}$ as a function of the external select lines $S_2, S_1, S_0$ after a specific wiring fault.\n\nFirst, let's establish the correct functionality and structure. In a correctly wired 8-to-1 MUX, the index $i$ of the selected input $D_i$ is determined by the binary value of the select lines $S_2S_1S_0$. This can be written as an arithmetic expression:\n$i = 4S_2 + 2S_1 + S_0$.\n\nThe structure is a three-level tree of 2-to-1 MUXs. Let's trace the signal path based on the select line controlling each level.\n- **Level 3 (Final Output Stage):** This single MUX determines which half of the original inputs is passed through. It is controlled by $S_2$ in the correct design. A value of $S_2=0$ selects from the lower half ($D_0$ to $D_3$), and $S_2=1$ selects from the upper half ($D_4$ to $D_7$). This decision contributes the most significant bit (the '4's place) to the index $i$.\n- **Level 2 (Middle Stage):** These two MUXs are controlled by $S_1$. Within each half selected by Level 3, this stage chooses a pair of inputs. For example, if the lower half is selected, $S_1=0$ chooses the path from $(D_0, D_1)$ and $S_1=1$ chooses the path from $(D_2, D_3)$. This decision contributes the middle bit (the '2's place) to the index $i$.\n- **Level 1 (Input Stage):** These four MUXs are controlled by $S_0$. This stage makes the final choice between two individual inputs (e.g., $D_0$ or $D_1$). This decision contributes the least significant bit (the '1's place) to the index $i$.\n\nNow, let's analyze the faulty circuit. The external select lines are $S_2, S_1, S_0$. Due to the wiring swap, the internal select lines controlling the MUX levels are as follows:\n- The select line for Level 1, which should be $S_0$, now receives the external signal $S_2$.\n- The select line for Level 2, which should be $S_1$, correctly receives the external signal $S_1$.\n- The select line for Level 3, which should be $S_2$, now receives the external signal $S_0$.\n\nWe can now determine the new selected index $i'$ by analyzing the contribution of each external select line to the final index value.\n\n- **Contribution of external line $S_0$:** The external line $S_0$ is now connected to the select input of the single MUX at Level 3. This MUX selects between the lower half of inputs ($D_0$ through $D_3$) and the upper half ($D_4$ through $D_7$). Therefore, $S_0$ now determines the most significant bit of the index $i'$. A value of $S_0=0$ selects an index from $\\{0,1,2,3\\}$, while $S_0=1$ selects an index from $\\{4,5,6,7\\}$. This contributes $4S_0$ to the total value of $i'$.\n\n- **Contribution of external line $S_1$:** The external line $S_1$ is correctly connected to the select inputs of the MUXs at Level 2. This level still determines the middle bit of the index. For instance, within the group $\\{0,1,2,3\\}$, a value of $S_1=0$ selects from $\\{0,1\\}$ and $S_1=1$ selects from $\\{2,3\\}$. This contributes $2S_1$ to the total value of $i'$.\n\n- **Contribution of external line $S_2$:** The external line $S_2$ is now connected to the select inputs of the MUXs at Level 1. This level selects the final input from a pair (e.g., $D_0$ vs $D_1$). Therefore, $S_2$ now determines the least significant bit of the index $i'$. A value of $S_2=0$ selects the first input of a pair (e.g., $D_0$ from the pair $(D_0, D_1)$), and $S_2=1$ selects the second (e.g., $D_1$). This contributes $1S_2$ to the total value of $i'$.\n\nTo find the new index $i'$, we sum these contributions. The new index is formed by a binary number whose most significant bit is $S_0$, middle bit is $S_1$, and least significant bit is $S_2$.\n\nThe resulting arithmetic expression for the new index $i'$ is:\n$i' = 4S_0 + 2S_1 + S_2$.", "answer": "$$\\boxed{4S_{0} + 2S_{1} + S_{2}}$$", "id": "1920059"}]}