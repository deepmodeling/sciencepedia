{"hands_on_practices": [{"introduction": "The elegance of digital logic design often lies in reusing components for multiple functions. This practice challenges you to apply your knowledge of 2's complement arithmetic to a practical design scenario. You will determine the minimal hardware required to convert a standard parallel adder into a dedicated subtraction circuit, a foundational skill that emphasizes efficiency and clever circuit manipulation. [@problem_id:1915341]", "problem": "You are a junior digital design engineer tasked with creating a specialized hardware module. You have access to a standard 4-bit parallel adder Integrated Circuit (IC). This IC takes two 4-bit binary numbers, $A = A_3A_2A_1A_0$ and $B = B_3B_2B_1B_0$, and a single-bit carry-in, $C_{in}$, as inputs. It produces a 4-bit sum, $S = S_3S_2S_1S_0$, and a final carry-out, $C_{out}$.\n\nYour goal is to design a circuit that *exclusively* performs the 4-bit binary subtraction $A - B$, treating $A$ and $B$ as unsigned integers and producing the result in 2's complement representation. This new circuit must use the provided 4-bit adder IC as its core component.\n\nTo achieve this, you will need to add external logic. Assuming that the adder's initial carry-in, $C_{in}$, can be permanently connected to a logic high (1) or logic low (0) source without requiring an additional gate, what is the minimal type and quantity of standard logic gates needed to complete this dedicated subtractor circuit?\n\nA. Four AND gates\n\nB. Four OR gates\n\nC. Four NOT gates\n\nD. Four XOR gates\n\nE. Four XNOR gates\n\nF. No additional gates are required.", "solution": "We need a circuit that always computes the subtraction $A-B$ for unsigned $A$ and $B$, with the result represented in 2's complement form using a standard $4$-bit parallel adder IC. The well-known 2's complement subtraction identity for $n$-bit words is\n$$\nA - B = A + (\\text{2's complement of }B) = A + \\left(\\overline{B}\\right) + 1,\n$$\nwhere $\\overline{B}$ denotes the bitwise complement of $B$. Writing $B=B_{3}B_{2}B_{1}B_{0}$, this means $\\overline{B}=\\overline{B_{3}}\\overline{B_{2}}\\overline{B_{1}}\\overline{B_{0}}$ with each bit inverted independently.\n\nA $4$-bit adder computes\n$$\nS = A + B + C_{in}\n$$\non $4$ bits and produces a final carry $C_{out}$. To force subtraction $A-B$ using the adder, we feed the adder with $A$ on its $A$ inputs, $\\overline{B}$ on its $B$ inputs, and set\n$$\nC_{in} = 1.\n$$\nThen the adder performs\n$$\nS = A + \\overline{B} + 1 = A - B\n$$\nin 2's complement arithmetic on $4$ bits, as required.\n\nTo generate $\\overline{B}$ from $B$, each bit $B_{i}$ must be inverted independently:\n$$\n\\overline{B_{i}} = \\neg B_{i}, \\quad i \\in \\{0,1,2,3\\}.\n$$\nThis requires one inverter per bit, i.e., four NOT gates total. The initial carry-in is assumed to be connectable directly to logic high without a gate, so no additional gate is needed for $C_{in}$.\n\nMinimality argument: each of the four independent input bits $B_{i}$ must be complemented to realize $\\overline{B}$. Any standard realization requires at least one gate per bit to implement inversion. A NOT gate is the unique $1$-input standard gate providing inversion; alternatives such as XOR with a constant $1$ or XNOR with a constant $0$ also require one gate per bit and are not fewer or simpler than four NOT gates. Therefore, the minimal type and quantity of standard logic gates required is four NOT gates.\n\nHence, the correct choice is four NOT gates.", "answer": "$$\\boxed{C}$$", "id": "1915341"}, {"introduction": "Having established the design of an adder-based subtractor, it is vital to understand its internal mechanics. This exercise provides a hands-on opportunity to trace the flow of data bit-by-bit through the circuit. By calculating the sum and carry at each stage, you will gain a concrete understanding of how the combination of inverted inputs and an initial carry-in collaboratively performs binary subtraction. [@problem_id:1915331]", "problem": "A digital circuit is designed to perform 4-bit binary subtraction. The circuit computes the operation $A - B$ using a series of four cascaded Full Adder (FA) stages, indexed from $i=0$ for the Least Significant Bit (LSB) to $i=3$ for the Most Significant Bit (MSB). The subtraction $A - B$ is implemented by calculating the sum of $A$ and the 2's complement of $B$.\n\nThe structure operates as follows:\n- Let the two 4-bit input numbers be $A = A_3A_2A_1A_0$ and $B = B_3B_2B_1B_0$.\n- For each stage $i$, the FA takes three inputs: $X_i$, $Y_i$, and a carry-in $C_i$. It produces two outputs: a sum bit $S_i$ and a carry-out bit $C_{i+1}$.\n- To perform subtraction, the inputs to the $i$-th FA are set as: $X_i = A_i$ and $Y_i = \\overline{B_i}$ (the bit-wise logical NOT of $B_i$).\n- The carry-in to the first stage ($i=0$) is fixed at $C_0 = 1$. For all subsequent stages ($i>0$), the carry-in $C_i$ is the carry-out from the previous stage ($i-1$).\n\nYour task is to trace the internal state of this circuit for the specific decimal operation $5 - 7$. Determine the binary value of the sum bit ($S_i$) and the carry-out bit ($C_{i+1}$) for each of the four full adder stages.\n\nProvide your answer as a single row matrix containing eight binary values, ordered as $(S_0, C_1, S_1, C_2, S_2, C_3, S_3, C_4)$.", "solution": "We implement subtraction using 2's complement: compute $A+\\overline{B}+1$ through four cascaded full adders with $X_{i}=A_{i}$, $Y_{i}=\\overline{B_{i}}$, and $C_{0}=1$. For each full adder, the sum and carry-out are given by\n$$\nS_{i}=X_{i}\\oplus Y_{i}\\oplus C_{i},\\qquad C_{i+1}=X_{i}Y_{i}+C_{i}\\left(X_{i}\\oplus Y_{i}\\right),\n$$\nwhere $\\oplus$ is XOR and juxtaposition denotes AND in Boolean algebra.\n\nRepresent the operands as $4$-bit binary:\n$$\nA=5=0101\\;\\Rightarrow\\;(A_{3},A_{2},A_{1},A_{0})=(0,1,0,1),\n$$\n$$\nB=7=0111\\;\\Rightarrow\\;(B_{3},B_{2},B_{1},B_{0})=(0,1,1,1).\n$$\nThus, $\\overline{B}$ bitwise is\n$$\n(\\overline{B_{3}},\\overline{B_{2}},\\overline{B_{1}},\\overline{B_{0}})=(1,0,0,0),\n$$\nso $Y_{3}=1$, $Y_{2}=0$, $Y_{1}=0$, $Y_{0}=0$, and $C_{0}=1$.\n\nStage $i=0$ (LSB): $X_{0}=A_{0}=1$, $Y_{0}=\\overline{B_{0}}=0$, $C_{0}=1$.\n$$\nS_{0}=1\\oplus 0\\oplus 1=0,\\qquad C_{1}=1\\cdot 0+1\\cdot(1\\oplus 0)=0+1=1.\n$$\n\nStage $i=1$: $X_{1}=A_{1}=0$, $Y_{1}=\\overline{B_{1}}=0$, $C_{1}=1$.\n$$\nS_{1}=0\\oplus 0\\oplus 1=1,\\qquad C_{2}=0\\cdot 0+1\\cdot(0\\oplus 0)=0+0=0.\n$$\n\nStage $i=2$: $X_{2}=A_{2}=1$, $Y_{2}=\\overline{B_{2}}=0$, $C_{2}=0$.\n$$\nS_{2}=1\\oplus 0\\oplus 0=1,\\qquad C_{3}=1\\cdot 0+0\\cdot(1\\oplus 0)=0+0=0.\n$$\n\nStage $i=3$ (MSB): $X_{3}=A_{3}=0$, $Y_{3}=\\overline{B_{3}}=1$, $C_{3}=0$.\n$$\nS_{3}=0\\oplus 1\\oplus 0=1,\\qquad C_{4}=0\\cdot 1+0\\cdot(0\\oplus 1)=0+0=0.\n$$\n\nCollecting in the required order $(S_{0},C_{1},S_{1},C_{2},S_{2},C_{3},S_{3},C_{4})$ gives\n$$\n(0,1,1,0,1,0,1,0).\n$$\nThis corresponds to the $4$-bit 2's complement result $S_{3}S_{2}S_{1}S_{0}=1110$ with $C_{4}=0$, which is $-2$, matching $5-7$.", "answer": "$$\\boxed{\\begin{pmatrix}0 & 1 & 1 & 0 & 1 & 0 & 1 & 0\\end{pmatrix}}$$", "id": "1915331"}, {"introduction": "The raw binary output of an arithmetic circuit is meaningless without correct interpretation. The final carry-out bit ($C_{out}$) is a crucial flag that provides information about the operation's outcome. This problem focuses on deciphering the meaning of the carry-out in the context of unsigned subtraction, teaching you to distinguish between cases where the result is a straightforward positive number and cases where it represents a negative value in 2's complement form. [@problem_id:1915353]", "problem": "A digital circuit is designed to perform the subtraction of two 4-bit unsigned binary numbers, $A$ and $B$, in the form of the operation $A - B$. The subtraction is implemented by utilizing a 4-bit parallel adder which calculates the sum $S = A + (\\text{2's complement of } B)$. This hardware implementation computes $A - B$ by feeding the bits of $A$ to the first set of inputs of the adder, the inverted bits of $B$ (i.e., the 1's complement of $B$) to the second set of inputs, and setting the initial carry-in to the adder, $C_{in}$, to 1. The adder then produces a 4-bit sum, $S_3S_2S_1S_0$, and a final carry-out bit, $C_4$.\n\nConsider the specific case where the inputs are $A = 1001_2$ and $B = 1100_2$. What is the value of the final carry-out bit, $C_4$, produced by the adder, and what does this value signify about the relationship between the magnitudes of the original numbers $A$ and $B$?\n\nA. $C_4 = 0$, which signifies that $A \\geq B$ and the result $S$ is the true positive magnitude.\n\nB. $C_4 = 0$, which signifies that $A < B$ and the result $S$ is negative, represented in 2's complement form.\n\nC. $C_4 = 1$, which signifies that $A \\geq B$ and the result $S$ is the true positive magnitude.\n\nD. $C_4 = 1$, which signifies that $A < B$ and the result $S$ is negative, represented in 2's complement form.\n\nE. $C_4 = 1$, which signifies that an arithmetic overflow has occurred during the operation.", "solution": "The 4-bit subtraction $A - B$ is implemented by a parallel adder computing $S = A + \\overline{B} + 1$, where $\\overline{B}$ is the $1$'s complement of $B$ and the initial carry-in is $c_{0}=1$. For $A=1001_{2}$ and $B=1100_{2}$, we have $\\overline{B}=0011_{2}$.\n\nUsing full-adder relations for each bit $i \\in \\{0,1,2,3\\}$:\n- Sum: $s_{i} = a_{i} \\oplus \\overline{b_{i}} \\oplus c_{i}$,\n- Carry: $c_{i+1} = a_{i}\\overline{b_{i}} + \\overline{b_{i}}c_{i} + a_{i}c_{i}$,\nwith $c_{0}=1$.\n\nBit $0$: $a_{0}=1$, $\\overline{b_{0}}=1$, $c_{0}=1$.\n$$s_{0} = 1 \\oplus 1 \\oplus 1 = 1, \\quad c_{1} = 1\\cdot 1 + 1\\cdot 1 + 1\\cdot 1 = 1.$$\n\nBit $1$: $a_{1}=0$, $\\overline{b_{1}}=1$, $c_{1}=1$.\n$$s_{1} = 0 \\oplus 1 \\oplus 1 = 0, \\quad c_{2} = 0\\cdot 1 + 1\\cdot 1 + 0\\cdot 1 = 1.$$\n\nBit $2$: $a_{2}=0$, $\\overline{b_{2}}=0$, $c_{2}=1$.\n$$s_{2} = 0 \\oplus 0 \\oplus 1 = 1, \\quad c_{3} = 0\\cdot 0 + 0\\cdot 1 + 0\\cdot 1 = 0.$$\n\nBit $3$: $a_{3}=1$, $\\overline{b_{3}}=0$, $c_{3}=0$.\n$$s_{3} = 1 \\oplus 0 \\oplus 0 = 1, \\quad c_{4} = 1\\cdot 0 + 0\\cdot 0 + 1\\cdot 0 = 0.$$\n\nThus $S = s_{3}s_{2}s_{1}s_{0} = 1101_{2}$ and the final carry-out is $C_{4}=c_{4}=0$. In this subtraction scheme for unsigned numbers, $C_{4}=1$ indicates $A \\geq B$ (no borrow) and $C_{4}=0$ indicates $A < B$ (a borrow occurred), with $S$ representing a negative result in $2$'s complement. Since $C_{4}=0$ here, it signifies $A < B$ and $S$ is negative in $2$'s complement form (indeed, $1101_{2}$ represents $-3$, consistent with $9-12$).", "answer": "$$\\boxed{B}$$", "id": "1915353"}]}