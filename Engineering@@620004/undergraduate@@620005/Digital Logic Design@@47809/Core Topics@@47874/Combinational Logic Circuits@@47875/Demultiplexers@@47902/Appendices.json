{"hands_on_practices": [{"introduction": "To begin, let's solidify our understanding of the demultiplexer's primary role as a \"data distributor.\" This first practice problem places you in the role of a system designer tasked with controlling a specific component in an array. By determining the correct select line and data input values, you will practice the core skill of mapping a desired output to the required input configuration, which is the fundamental principle behind any demultiplexer application. [@problem_id:1927927]", "problem": "A digital control system is designed to manage a linear array of eight special-purpose Light Emitting Diodes (LEDs), indexed from $L_0$ to $L_7$. The system employs a single 1-to-8 demultiplexer (DEMUX) to achieve this control. A DEMUX is a digital circuit that routes a single input line to one of several output lines.\n\nThis specific DEMUX has one data input line, denoted as $D_{in}$, three select lines, $S_2, S_1, S_0$, and eight output lines, $Y_0$ through $Y_7$. Each output line $Y_i$ is connected to the corresponding LED $L_i$. An LED will illuminate if and only if its connected DEMUX output is at a logic '1' state; otherwise, it remains off (logic '0').\n\nThe functionality of the DEMUX is as follows: the three select lines $S_2, S_1, S_0$ are interpreted as a 3-bit binary number, where $S_2$ is the most significant bit (MSB) and $S_0$ is the least significant bit (LSB). If the decimal equivalent of the binary number $S_2S_1S_0$ is $k$, then the output line $Y_k$ is set to the logic level of the data input, $D_{in}$. All other output lines $Y_j$ (where $j \\neq k$) are maintained at a logic '0' state, regardless of the value of $D_{in}$.\n\nTo perform a specific diagnostic test, the control system must illuminate only the LED labeled $L_6$, ensuring all other seven LEDs remain off. To achieve this state, what must be the logic levels for the data input $D_{in}$ and the select lines $S_2, S_1, S_0$?\n\nA. $D_{in}=1, S_2=1, S_1=1, S_0=0$\n\nB. $D_{in}=1, S_2=1, S_1=0, S_0=1$\n\nC. $D_{in}=0, S_2=1, S_1=1, S_0=0$\n\nD. $D_{in}=1, S_2=0, S_1=1, S_0=1$\n\nE. $D_{in}=0, S_2=0, S_1=1, S_0=1$", "solution": "The problem requires us to determine the state of the data input ($D_{in}$) and the three select lines ($S_2, S_1, S_0$) for a 1-to-8 demultiplexer (DEMUX) to make output $Y_6$ equal to logic '1' while all other outputs are logic '0'.\n\nFirst, let's analyze the condition for the outputs. To illuminate only LED $L_6$, we need the output line $Y_6$ to be at logic '1'. To keep all other LEDs off, we need all other output lines ($Y_0, Y_1, Y_2, Y_3, Y_4, Y_5, Y_7$) to be at logic '0'.\n\nThe DEMUX's operation is defined by its select lines. The select lines $S_2, S_1, S_0$ form a 3-bit binary number whose decimal value selects which output line will be connected to the data input $D_{in}$. All other outputs are automatically set to '0'.\n\nTo affect the output line $Y_6$, we must select it. This means the decimal value of the binary number formed by the select lines must be 6. We need to find the 3-bit binary representation of the decimal number 6.\n\nThe select lines are given with $S_2$ as the most significant bit (MSB) and $S_0$ as the least significant bit (LSB). The value is calculated as $S_2 \\times 2^2 + S_1 \\times 2^1 + S_0 \\times 2^0$.\nTo get a value of 6, we can express it in terms of powers of 2:\n$6 = 4 + 2 + 0 = 1 \\cdot 2^2 + 1 \\cdot 2^1 + 0 \\cdot 2^0$.\n\nComparing this with the weighted sum of the select lines, we can determine the required logic levels:\n$S_2 = 1$\n$S_1 = 1$\n$S_0 = 0$\n\nSo, the select lines must be set to $S_2S_1S_0 = 110$.\n\nWith these select line settings, the DEMUX ensures that output $Y_6$ is connected to the data input $D_{in}$, so $Y_6 = D_{in}$. It also ensures that all other outputs $Y_j$ (for $j \\neq 6$) are set to logic '0'. This satisfies the condition that all other LEDs are off.\n\nNow, we must satisfy the condition that LED $L_6$ is on. This requires $Y_6$ to be logic '1'. Since $Y_6 = D_{in}$ with our chosen select lines, we must set the data input to logic '1'.\nTherefore, $D_{in} = 1$.\n\nCombining these results, the required input configuration is:\n$D_{in}=1$, $S_2=1$, $S_1=1$, and $S_0=0$.\n\nWe now compare this result with the given multiple-choice options.\nA. $D_{in}=1, S_2=1, S_1=1, S_0=0$\nB. $D_{in}=1, S_2=1, S_1=0, S_0=1$ (selects $Y_5$)\nC. $D_{in}=0, S_2=1, S_1=1, S_0=0$ (selects $Y_6$ but sets it to 0, so $L_6$ is off)\nD. $D_{in}=1, S_2=0, S_1=1, S_0=1$ (selects $Y_3$)\nE. $D_{in}=0, S_2=0, S_1=1, S_0=1$ (selects $Y_3$ but sets it to 0)\n\nThe correct configuration matches option A.", "answer": "$$\\boxed{A}$$", "id": "1927927"}, {"introduction": "Beyond simple data routing, demultiplexers can be cleverly configured to implement specific Boolean logic functions. This next exercise challenges you to think outside the standard application by analyzing a DEMUX with its select lines tied together. This practice will deepen your understanding of the underlying Boolean algebra that governs the device's behavior and reveals how standard components can become powerful tools for custom logic design. [@problem_id:1927944]", "problem": "A digital circuit designer is experimenting with a standard 1-to-4 demultiplexer (DEMUX). The DEMUX has one data input line, denoted by $D$, and two select lines, $S_1$ and $S_0$. It has four output lines, $Y_0, Y_1, Y_2,$ and $Y_3$. The behavior of a standard 1-to-4 DEMUX is such that the output $Y_i$ is equal to the data input $D$ if the binary number formed by the select lines, $(S_1 S_0)_2$, is equal to the index $i$. For all other combinations of select lines, the output $Y_i$ is logic low (0).\n\nIn a non-standard configuration, the designer connects both select lines, $S_1$ and $S_0$, to a single external control signal, $C$. Thus, the condition $S_1 = S_0 = C$ is always maintained.\n\nDetermine the resulting Boolean logic expressions for the four outputs, $Y_0, Y_1, Y_2,$ and $Y_3$, in terms of the inputs $D$ and $C$. Choose the correct set of expressions from the options below. For the notation, assume multiplication (or juxtaposition) represents the logical AND operation and an overline represents the logical NOT operation.\n\nA. $Y_0 = \\overline{C}D$, $Y_1 = 0$, $Y_2 = 0$, $Y_3 = CD$\n\nB. $Y_0 = CD$, $Y_1 = 0$, $Y_2 = 0$, $Y_3 = \\overline{C}D$\n\nC. $Y_0 = \\overline{C}$, $Y_1 = 0$, $Y_2 = 0$, $Y_3 = C$\n\nD. $Y_0 = D$, $Y_1 = D$, $Y_2 = 0$, $Y_3 = 0$\n\nE. $Y_0 = \\overline{C}D$, $Y_1 = CD$, $Y_2 = \\overline{C}D$, $Y_3 = CD$", "solution": "A standard 1-to-4 demultiplexer with data input $D$ and select lines $S_{1}$ and $S_{0}$ has outputs given by the minterm gating of $D$ by the select combination:\n$$Y_{0}=\\overline{S_{1}}\\,\\overline{S_{0}}\\,D,\\quad Y_{1}=\\overline{S_{1}}\\,S_{0}\\,D,\\quad Y_{2}=S_{1}\\,\\overline{S_{0}}\\,D,\\quad Y_{3}=S_{1}\\,S_{0}\\,D.$$\nIn the non-standard configuration, $S_{1}=S_{0}=C$. Substitute $S_{1}=C$ and $S_{0}=C$ into the expressions and simplify using Boolean identities (idempotence $XX=X$, complementarity $X\\overline{X}=0$):\n$$Y_{0}=\\overline{C}\\,\\overline{C}\\,D=\\overline{C}\\,D,$$\n$$Y_{1}=\\overline{C}\\,C\\,D=0,$$\n$$Y_{2}=C\\,\\overline{C}\\,D=0,$$\n$$Y_{3}=C\\,C\\,D=C\\,D.$$\nThus the resulting expressions are $Y_{0}=\\overline{C}D$, $Y_{1}=0$, $Y_{2}=0$, $Y_{3}=CD$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1927944"}, {"introduction": "Now we move from analysis to synthesis, a key step in becoming a proficient designer. This final practice demonstrates one of the most powerful applications of a demultiplexer: its use as a programmable logic device or function generator. By setting the data input high, a DEMUX effectively becomes a decoder that generates specific minterms, which can then be combined to create any desired Boolean function of the select variables. This exercise will guide you through building a simple \"even number checker,\" a classic example that solidifies this essential design pattern. [@problem_id:1927905]", "problem": "A digital logic circuit is designed to determine if a 2-bit binary number is an even number. The circuit utilizes a single 1-to-4 Demultiplexer (DEMUX) and a single 2-input OR gate.\n\nThe 1-to-4 DEMUX has one data input line, $D_{in}$, two select lines, $S_1$ and $S_0$, and four output lines, $O_0, O_1, O_2, O_3$. The 2-bit binary number to be tested, represented as $S_1S_0$ where $S_1$ is the most significant bit, is applied to the select lines. The data input line, $D_{in}$, is permanently connected to a logic '1' source. The behavior of the DEMUX is such that the output line $O_k$ is equal to $D_{in}$ if the decimal equivalent of the binary number $S_1S_0$ is equal to $k$, while all other outputs are logic '0'.\n\nThe output of the OR gate, let's call it $F$, should be a logic '1' if the decimal equivalent of the number $S_1S_0$ is an even number, and logic '0' otherwise.\n\nTo achieve this functionality, two of the DEMUX output lines must be connected to the two inputs of the OR gate. Which pair of DEMUX output lines should be connected to the inputs of the OR gate?\n\nA. $O_0$ and $O_1$\n\nB. $O_1$ and $O_3$\n\nC. $O_0$ and $O_2$\n\nD. $O_2$ and $O_3$\n\nE. $O_1$ and $O_2$", "solution": "Let the two-bit input be $S_{1}S_{0}$, so its decimal value is $k=2S_{1}+S_{0}$. The 1-to-4 DEMUX with $D_{in}=1$ produces a one-hot output in which $O_{k}=1$ and all other $O_{i}=0$. Equivalently, in Boolean form,\n$$\nO_{0}=\\overline{S_{1}}\\overline{S_{0}},\\quad O_{1}=\\overline{S_{1}}S_{0},\\quad O_{2}=S_{1}\\overline{S_{0}},\\quad O_{3}=S_{1}S_{0}.\n$$\nThe function $F$ must be $1$ when the number is even, i.e., when $k\\in\\{0,2\\}$, which is exactly when $S_{0}=0$. Thus the desired function is $F=\\overline{S_{0}}$.\n\nUsing the DEMUX outputs, we form the OR of those corresponding to the even values:\n$$\nF=O_{0}+O_{2}=\\overline{S_{1}}\\overline{S_{0}}+S_{1}\\overline{S_{0}}=\\overline{S_{0}}(\\overline{S_{1}}+S_{1})=\\overline{S_{0}}.\n$$\nTherefore, the two DEMUX outputs to connect to the OR gate inputs are $O_{0}$ and $O_{2}$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1927905"}]}