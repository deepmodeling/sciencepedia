{"hands_on_practices": [{"introduction": "To truly understand how a decoder works, it's helpful to look beyond its standard operation and examine its underlying logic. This exercise invites you to analyze a unique circuit configuration where the enable input is tied directly to one of the select lines [@problem_id:1927532]. This practice encourages a \"white-box\" analysis, revealing how the enable input is fundamentally integrated into the Boolean AND logic that governs each output and how unconventional connections can create new functionalities.", "problem": "Consider a standard 2-to-4 decoder with two select lines, $A_1$ (most significant bit) and $A_0$ (least significant bit). The decoder has an active-high enable input, $E$, and four active-high outputs, $Y_3, Y_2, Y_1, Y_0$, where the subscript of the output corresponds to the decimal value of the select lines. The standard behavior is as follows: if $E=1$, the output $Y_i$ is asserted (logic '1') where $i$ is the integer value represented by the binary number $A_1A_0$. All other outputs are de-asserted (logic '0'). If $E=0$, all outputs $Y_3, Y_2, Y_1, Y_0$ are forced to logic '0', regardless of the select line inputs.\n\nNow, imagine a specific circuit configuration where the enable input $E$ is directly connected to the least significant select line $A_0$. Thus, the condition $E=A_0$ is always enforced. For this modified circuit, the only primary inputs are $A_1$ and $A_0$.\n\nWhich of the following outputs will remain at a logic '0' for all possible combinations of the inputs $A_1$ and $A_0$?\n\nA. $Y_0$ only\n\nB. $Y_2$ only\n\nC. $Y_0$ and $Y_2$\n\nD. $Y_1$ and $Y_3$\n\nE. All outputs can be '1' for some input combination.", "solution": "A standard active-high 2-to-4 decoder with enable has outputs given by the Boolean expressions\n$$\nY_{0}=E\\,\\overline{A_{1}}\\,\\overline{A_{0}},\\quad\nY_{1}=E\\,\\overline{A_{1}}\\,A_{0},\\quad\nY_{2}=E\\,A_{1}\\,\\overline{A_{0}},\\quad\nY_{3}=E\\,A_{1}\\,A_{0}.\n$$\nIn the modified circuit, $E=A_{0}$. Substituting $E=A_{0}$ into each output yields\n$$\nY_{0}=A_{0}\\,\\overline{A_{1}}\\,\\overline{A_{0}},\\quad\nY_{1}=A_{0}\\,\\overline{A_{1}}\\,A_{0},\\quad\nY_{2}=A_{0}\\,A_{1}\\,\\overline{A_{0}},\\quad\nY_{3}=A_{0}\\,A_{1}\\,A_{0}.\n$$\nUsing Boolean identities $A_{0}\\overline{A_{0}}=0$ and $A_{0}A_{0}=A_{0}$, we simplify:\n$$\nY_{0}=0,\\quad\nY_{1}=A_{0}\\,\\overline{A_{1}},\\quad\nY_{2}=0,\\quad\nY_{3}=A_{0}\\,A_{1}.\n$$\nThus $Y_{0}$ and $Y_{2}$ are identically zero for all input combinations, while $Y_{1}$ and $Y_{3}$ can be asserted when $A_{0}=1$ with $A_{1}=0$ or $A_{1}=1$, respectively. Therefore, the outputs that remain at logic $0$ for all inputs are $Y_{0}$ and $Y_{2}$.", "answer": "$$\\boxed{C}$$", "id": "1927532"}, {"introduction": "One of the most powerful applications of a decoder is its use as a logic function implementer or \"minterm generator\". This problem presents a practical design scenario: building an alarm system where the decoder's enable input acts as a master arming switch [@problem_id:1927600]. By combining the appropriate decoder outputs with an OR gate, you can efficiently realize custom Boolean functions, a technique that is fundamental to digital system design.", "problem": "You are tasked with designing a safety alarm system for a small-scale chemical reactor. The system monitors the reactor's internal pressure via a sensor that outputs a 3-bit binary number, $P_2P_1P_0$, where $P_2$ is the most significant bit. These bits represent the pressure level as an integer from 0 to 7. The alarm system also has a master arming switch, $M$.\n\nThe alarm signal, $A$, should be asserted (logic '1') if and only if the master arming switch is active ($M=1$) and the pressure level is strictly greater than 5. Otherwise, the alarm signal must be de-asserted (logic '0').\n\nYour design must be implemented using specific components:\n1.  One 3-to-8 decoder with active-high outputs. The decoder has three data inputs ($I_2, I_1, I_0$), eight outputs ($D_0, D_1, \\dots, D_7$), and one active-high enable input ($E$). When $E=1$, the output line $D_i$ corresponding to the binary input value $i$ is '1', and all other outputs are '0'. When $E=0$, all outputs $D_0, \\dots, D_7$ are '0'.\n2.  One OR gate with as many inputs as needed.\n\nYou must connect the pressure inputs $P_2, P_1, P_0$ to the decoder's data inputs $I_2, I_1, I_0$ respectively. The master arming switch $M$ must be connected to the decoder's enable input $E$. The output of the OR gate provides the final alarm signal $A$.\n\nWhich of the following sets of decoder output lines must be connected to the inputs of the OR gate to correctly generate the alarm signal $A$?\n\nA. $D_5$\n\nB. $D_6$\n\nC. $D_5, D_6, D_7$\n\nD. $D_6, D_7$\n\nE. $D_0, D_1, D_2, D_3, D_4, D_5$", "solution": "Let the 3-bit pressure code be $P_{2}P_{1}P_{0}$, representing the unsigned integer value $V=4P_{2}+2P_{1}+P_{0}$ with $V\\in\\{0,1,\\dots,7\\}$. The 3-to-8 decoder has inputs $I_{2}=P_{2}$, $I_{1}=P_{1}$, $I_{0}=P_{0}$ and enable $E=M$. By the decoder’s definition, when $E=1$ exactly one output $D_{i}$ equals $1$, namely the one for which $i=V$, and all others are $0$; when $E=0$, all $D_{i}=0$.\n\nThe alarm requirement is: assert $A=1$ if and only if $M=1$ and $V>5$. Since $V>5$ for $V\\in\\{6,7\\}$ only, and since $M$ already gates the decoder via $E$, the desired alarm can be realized as the OR of the decoder outputs corresponding to $V=6$ and $V=7$:\n$$A=D_{6}\\lor D_{7}.$$\nThis satisfies all cases:\n- If $M=0$, then $D_{6}=D_{7}=0$, hence $A=0$.\n- If $M=1$ and $V=6$, then $D_{6}=1$, $D_{7}=0$, hence $A=1$.\n- If $M=1$ and $V=7$, then $D_{7}=1$, $D_{6}=0$, hence $A=1$.\n- If $M=1$ and $V\\leq 5$, then $D_{6}=D_{7}=0$, hence $A=0$.\n\nTherefore, the OR gate must take inputs $D_{6}$ and $D_{7}$ only, which corresponds to option D.", "answer": "$$\\boxed{D}$$", "id": "1927600"}, {"introduction": "Digital circuits operate in a dynamic environment where input signals are constantly changing. This practice moves beyond static truth tables to analyze a decoder's behavior in response to time-varying signals, or waveforms [@problem_id:1927584]. Your task is to determine the total time an output is active by identifying the moments when all required input conditions—both the select lines and the enable signal—are simultaneously met, a crucial skill for analyzing and debugging real-world digital systems.", "problem": "A digital system uses a 2-to-4 decoder to generate control signals. The decoder has two select lines, designated $A_1$ (most significant bit) and $A_0$ (least significant bit), and an active-high enable input, $E$. Its four outputs are $Y_0, Y_1, Y_2,$ and $Y_3$. The decoder operates as follows: if $E$ is at logic low ('0'), all outputs are low. If $E$ is at logic high ('1'), the specific output $Y_i$ is high if the binary number formed by the select lines $(A_1 A_0)_2$ is equal to the index $i$; all other outputs remain low.\n\nThe digital signals driving the decoder inputs vary over time. We analyze the system's behavior over a total duration from $t=0$ nanoseconds (ns) to $t=120$ ns. Assume all transitions between logic levels are instantaneous. The input waveforms are defined as follows:\n\n*   The enable signal $E(t)$ is logic high starting from $t=10$ ns up to, but not including, $t=110$ ns. At all other times in the analysis interval, it is logic low.\n*   The select line $A_1(t)$ is a periodic signal with a period of 50 ns, starting at $t=0$. Within each period, it remains logic high for the first 25 ns and logic low for the next 25 ns.\n*   The select line $A_0(t)$ is a periodic signal with a period of 30 ns, starting at $t=0$. Within each period, it remains logic high for the first 15 ns and logic low for the next 15 ns.\n\nDetermine the total amount of time that the output $Y_2$ is at logic high during the specified 120 ns interval. Give your answer as a numerical value in units of nanoseconds.", "solution": "The decoder asserts $Y_{2}$ if and only if the enable is high and the select lines encode the binary index $10$, i.e., the conditions are\n$$E=1,\\quad A_{1}=1,\\quad A_{0}=0.$$\n\nFrom the problem statement, the time intervals for each condition are:\n- Enable high: $E=1$ on $[10,110)$.\n- $A_{1}=1$ on $[0,25)\\cup[50,75)\\cup[100,125)$.\n- $A_{0}=0$ on $[15,30)\\cup[45,60)\\cup[75,90)\\cup[105,120)$.\n\nTherefore, $Y_{2}=1$ on the intersection\n$$[10,110)\\cap\\left([0,25)\\cup[50,75)\\cup[100,125)\\right)\\cap\\left([15,30)\\cup[45,60)\\cup[75,90)\\cup[105,120)\\right).$$\n\nCompute the nonempty pairwise intersections:\n- $[10,110)\\cap[0,25)\\cap[15,30)=[15,25)$, duration $25-15=10$ ns.\n- $[10,110)\\cap[50,75)\\cap[45,60)=[50,60)$, duration $60-50=10$ ns.\n- $[10,110)\\cap[100,125)\\cap[105,120)=[105,110)$, duration $110-105=5$ ns.\n\nAll other combinations are empty within $[10,110)$. Since transitions are instantaneous, endpoints contribute zero duration. Summing the durations gives the total time $Y_{2}$ is high over $[0,120)$:\n$$10+10+5=25\\ \\text{ns}.$$", "answer": "$$\\boxed{25}$$", "id": "1927584"}]}