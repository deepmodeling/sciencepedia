{"hands_on_practices": [{"introduction": "Implementing an arbitrary logic function is a cornerstone of digital design. A multiplexer (MUX) provides a direct and systematic way to do this, acting like a programmable lookup table. This first exercise [@problem_id:1923433] walks you through the foundational technique of mapping a 4-variable function, given in its canonical sum-of-minterms form, onto a smaller 8-to-1 MUX. Mastering this process is essential for using MUXes as universal logic elements.", "problem": "A combinational logic circuit is to be designed to implement a 4-variable Boolean function given by $F(A,B,C,D) = \\sum m(0,1,5,7,8,12,14,15)$, where $A$ is the most significant bit and $D$ is the least significant bit. You are required to implement this function using only a single 8-to-1 Multiplexer (MUX) and, if necessary, an inverter.\n\nThe multiplexer has three select lines, $S_2, S_1, S_0$, and eight data inputs, $I_0$ through $I_7$. The connections are specified as follows:\n- The function's variables $A, B,$ and $C$ are connected to the select lines $S_2, S_1,$ and $S_0$ respectively.\n- The data inputs $I_0, I_1, \\dots, I_7$ must be connected to one of the following: logic '0' (ground), logic '1' (Vcc), the variable $D$, or its complement $\\bar{D}$.\n\nDetermine the correct set of connections for the data inputs $I_0$ through $I_7$. Which of the following options represents the correct implementation?\n\nA. $I_0=1, I_1=0, I_2=\\bar{D}, I_3=\\bar{D}, I_4=D, I_5=0, I_6=D, I_7=1$\n\nB. $I_0=1, I_1=0, I_2=D, I_3=D, I_4=\\bar{D}, I_5=0, I_6=\\bar{D}, I_7=1$\n\nC. $I_0=1, I_1=D, I_2=0, I_3=\\bar{D}, I_4=\\bar{D}, I_5=1, I_6=D, I_7=0$\n\nD. $I_0=\\bar{D}, I_1=D, I_2=0, I_3=1, I_4=1, I_5=0, I_6=D, I_7=\\bar{D}$", "solution": "We are given the Boolean function $F(A,B,C,D)=\\sum m(0,1,5,7,8,12,14,15)$ with $A$ as the most significant bit and $D$ as the least significant bit, so a minterm index is $m=8A+4B+2C+D$. An 8-to-1 MUX with select lines $S_{2}=A$, $S_{1}=B$, $S_{0}=C$ selects input $I_{k}$ where $k=4A+2B+C$. For each fixed triple $(A,B,C)$, the function $F$ becomes a function of $D$ only and, since each pair of minterms differing only in $D$ is either both present, neither present, or exactly one present, $F$ reduces to $1$, $0$, $D$, or $\\bar{D}$, respectively. We compute this for all $(A,B,C)$:\n\n1. For $(A,B,C)=(0,0,0)$, the relevant minterms are $m=8\\cdot 0+4\\cdot 0+2\\cdot 0+D$, i.e., $m\\in\\{0,1\\}$. Since $0,1$ are both in the list, $F=1$. Therefore $I_{0}=1$.\n\n2. For $(A,B,C)=(0,0,1)$, the relevant minterms are $m\\in\\{2,3\\}$. Neither $2$ nor $3$ is present, so $F=0$. Therefore $I_{1}=0$.\n\n3. For $(A,B,C)=(0,1,0)$, the relevant minterms are $m\\in\\{4,5\\}$. Only $5$ is present, so $F=D$. Therefore $I_{2}=D$.\n\n4. For $(A,B,C)=(0,1,1)$, the relevant minterms are $m\\in\\{6,7\\}$. Only $7$ is present, so $F=D$. Therefore $I_{3}=D$.\n\n5. For $(A,B,C)=(1,0,0)$, the relevant minterms are $m\\in\\{8,9\\}$. Only $8$ is present, so $F=\\bar{D}$. Therefore $I_{4}=\\bar{D}$.\n\n6. For $(A,B,C)=(1,0,1)$, the relevant minterms are $m\\in\\{10,11\\}$. Neither is present, so $F=0$. Therefore $I_{5}=0$.\n\n7. For $(A,B,C)=(1,1,0)$, the relevant minterms are $m\\in\\{12,13\\}$. Only $12$ is present, so $F=\\bar{D}$. Therefore $I_{6}=\\bar{D}$.\n\n8. For $(A,B,C)=(1,1,1)$, the relevant minterms are $m\\in\\{14,15\\}$. Both are present, so $F=1$. Therefore $I_{7}=1$.\n\nCollecting the required data inputs in order gives\n$$I_{0}=1,\\ I_{1}=0,\\ I_{2}=D,\\ I_{3}=D,\\ I_{4}=\\bar{D},\\ I_{5}=0,\\ I_{6}=\\bar{D},\\ I_{7}=1,$$\nwhich matches option B.", "answer": "$$\\boxed{B}$$", "id": "1923433"}, {"introduction": "Real-world specifications don't always define when a circuit should be 'on'; sometimes it's more convenient to specify when it must be 'off'. This leads to functions expressed in Product-of-Sums (PoS) form. This practice [@problem_id:1923448] challenges you to apply the MUX implementation method to a function defined by its maxterms, reinforcing your understanding of how to handle both 'on-sets' and 'off-sets' in digital logic synthesis.", "problem": "A digital control system is being designed to manage a specific operation based on a 4-bit status word, represented by the variables $(A, B, C, D)$, where $A$ is the most significant bit. The system must output a single binary signal $F$. The required logic function for $F$ is specified by the set of input combinations for which the output $F$ should be '0'. In canonical Product-of-Sums form, this is given by:\n\n$F(A,B,C,D) = \\prod M(0, 2, 3, 8, 10, 11)$\n\nYour task is to implement this function using a single 8-to-1 Multiplexer (MUX) and at most one inverter. The MUX has three select lines, $S_2, S_1, S_0$, and eight data inputs, $I_0, I_1, \\dots, I_7$. The select lines are to be driven by the input variables $A, B, \\text{ and } C$ such that $S_2=A$, $S_1=B$, and $S_0=C$.\n\nDetermine the signals that must be connected to each of the eight data inputs $I_0$ through $I_7$. The only available signals for these connections are the logic constants '0' and '1', the input variable $D$, and its complement $\\bar{D}$, which can be generated using the available inverter.\n\nProvide your answer as a row matrix of 8 elements, where the elements represent the signals connected to the inputs $I_0, I_1, \\dots, I_7$ in that order. Use the symbols $0, 1, D, \\text{ and } \\bar{D}$ for the signals.", "solution": "We are given the logic function in canonical Product-of-Sums form:\n$$F(A,B,C,D)=\\prod M(0,2,3,8,10,11),$$\nwhich means $F=0$ for maxterm indices in the set $\\{0,2,3,8,10,11\\}$ and $F=1$ otherwise. Using the standard indexing with $A$ as the most significant bit and $D$ as the least significant bit, each index is\n$$m=8A+4B+2C+D,$$\nfor $(A,B,C,D)\\in\\{0,1\\}^{4}$.\n\nWe must implement $F$ with an 8-to-1 MUX whose select lines are $S_{2}=A$, $S_{1}=B$, $S_{0}=C$. Therefore, when $(A,B,C)=(a,b,c)$, the selected data input is $I_{k}$ with\n$$k=4a+2b+c,$$\nand the MUX output equals $I_{k}$ as a function of $D$. Hence, for each fixed $(A,B,C)$ we determine the two values $F$ takes for $D=0$ and $D=1$ by checking whether the corresponding indices $m=8A+4B+2C+D$ lie in the zero set. From these two values, $I_{k}$ must be chosen from $\\{0,1,D,\\bar{D}\\}$ to reproduce that dependence on $D$.\n\nCompute case by case:\n\n1) $(A,B,C)=(0,0,0)\\Rightarrow k=0$. The indices are $m=0$ for $D=0$ and $m=1$ for $D=1$. Since $0\\in\\{0,2,3,8,10,11\\}$ and $1\\notin\\{0,2,3,8,10,11\\}$, we have $F(0,0,0,0)=0$ and $F(0,0,0,1)=1$. This equals $D$, so $I_{0}=D$.\n\n2) $(A,B,C)=(0,0,1)\\Rightarrow k=1$. The indices are $m=2$ for $D=0$ and $m=3$ for $D=1$. Both $2,3$ are in the zero set, so $F=0$ for both $D$ values. Thus $I_{1}=0$.\n\n3) $(A,B,C)=(0,1,0)\\Rightarrow k=2$. The indices are $m=4$ for $D=0$ and $m=5$ for $D=1$. Neither $4$ nor $5$ is in the zero set, so $F=1$ for both $D$ values. Thus $I_{2}=1$.\n\n4) $(A,B,C)=(0,1,1)\\Rightarrow k=3$. The indices are $m=6$ and $m=7$, neither in the zero set, hence $F=1$. Thus $I_{3}=1$.\n\n5) $(A,B,C)=(1,0,0)\\Rightarrow k=4$. The indices are $m=8$ for $D=0$ and $m=9$ for $D=1$. Here $8$ is in the zero set and $9$ is not, giving $F(1,0,0,0)=0$, $F(1,0,0,1)=1$, which equals $D$. Thus $I_{4}=D$.\n\n6) $(A,B,C)=(1,0,1)\\Rightarrow k=5$. The indices are $m=10$ and $m=11$, both in the zero set, so $F=0$. Thus $I_{5}=0$.\n\n7. $(A,B,C)=(1,1,0)\\Rightarrow k=6$. The indices are $m=12$ and $m=13$, neither in the zero set, so $F=1$. Thus $I_{6}=1$.\n\n8. $(A,B,C)=(1,1,1)\\Rightarrow k=7$. The indices are $m=14$ and $m=15$, neither in the zero set, so $F=1$. Thus $I_{7}=1$.\n\nCollecting the required data inputs in order $I_{0}$ through $I_{7}$ gives\n$$\\begin{pmatrix} D & 0 & 1 & 1 & D & 0 & 1 & 1 \\end{pmatrix}.$$\nThis uses only $0,1$, and $D$; no inverter for $\\bar{D}$ is required, satisfying the “at most one inverter” constraint.", "answer": "$$\\boxed{\\begin{pmatrix} D & 0 & 1 & 1 & D & 0 & 1 & 1 \\end{pmatrix}}$$", "id": "1923448"}, {"introduction": "Beyond simply transcribing a given formula, a key engineering skill is translating a high-level requirement into a working circuit. This advanced problem [@problem_id:1923421] asks you to design a circuit with a specific behavior—detecting when exactly two of its four inputs are active. You will first need to derive the logic function from this word problem and then use the multiplexer implementation technique to build it, bridging the gap between abstract concepts and concrete hardware.", "problem": "A digital logic circuit is required to implement a specific 4-input function, $F(A, B, C, D)$. The function must produce a logic '1' output if and only if the Hamming weight (the number of inputs that are logic '1') of the input vector $(A, B, C, D)$ is exactly two. For all other input combinations, the function must output a logic '0'.\n\nYou are tasked with implementing this function using only a single 8-to-1 Multiplexer (MUX) and at most one external inverter. The inputs $A$, $B$, and $C$ are to be connected to the MUX select lines $S_2$, $S_1$, and $S_0$, respectively, where $A$ is the most significant bit. The data inputs of the MUX, denoted by an ordered set $(I_0, I_1, I_2, I_3, I_4, I_5, I_6, I_7)$, must be connected to either logic '0', logic '1', the fourth input variable $D$, or its complement $\\bar{D}$.\n\nWhich of the following choices correctly specifies the required connections for the data inputs $(I_0, I_1, I_2, I_3, I_4, I_5, I_6, I_7)$ to realize the function $F$?\n\nA. $(0, D, D, \\bar{D}, D, \\bar{D}, \\bar{D}, 0)$\n\nB. $(0, \\bar{D}, D, D, \\bar{D}, D, \\bar{D}, 0)$\n\nC. $(1, D, D, \\bar{D}, D, \\bar{D}, \\bar{D}, 1)$\n\nD. $(0, D, \\bar{D}, 1, D, \\bar{D}, 0, 0)$\n\nE. $(\\bar{D}, D, D, 0, 1, \\bar{D}, \\bar{D}, D)$", "solution": "We require a 4-input function $F(A,B,C,D)$ such that $F=1$ if and only if the Hamming weight of $(A,B,C,D)$ equals $2$. Interpreting Boolean variables as integers $0$ or $1$, this condition is\n$$\nF(A,B,C,D)=1 \\;\\;\\text{iff}\\;\\; A+B+C+D=2,\\quad \\text{else } F=0.\n$$\nThe 8-to-1 MUX uses $A,B,C$ as select lines $S_{2},S_{1},S_{0}$ with $A$ as the most significant bit, so the selected data input index is\n$$\ni \\;=\\; 4A + 2B + C,\n$$\nmeaning $I_{0}$ for $ABC=000$, $I_{1}$ for $001$, $I_{2}$ for $010$, $I_{3}$ for $011$, $I_{4}$ for $100$, $I_{5}$ for $101$, $I_{6}$ for $110$, and $I_{7}$ for $111$.\n\nFor a fixed $(A,B,C)$, define $k = A+B+C$. Then the condition $A+B+C+D=2$ becomes\n$$\nk + D \\;=\\; 2.\n$$\nTherefore, as a function of $D$:\n- If $k=0$, then $D=2$ would be required, which is impossible; hence $F=0$ (constant $0$).\n- If $k=1$, then $D=1$ is required; hence $F=D$.\n- If $k=2$, then $D=0$ is required; hence $F=\\bar{D}$.\n- If $k=3$, then $D=-1$ would be required, which is impossible; hence $F=0$ (constant $0$).\n\nNow assign $I_{i}$ according to the value of $k$ for each $ABC$:\n- $ABC=000$ gives $k=0 \\Rightarrow I_{0}=0$.\n- $ABC=001$ gives $k=1 \\Rightarrow I_{1}=D$.\n- $ABC=010$ gives $k=1 \\Rightarrow I_{2}=D$.\n- $ABC=011$ gives $k=2 \\Rightarrow I_{3}=\\bar{D}$.\n- $ABC=100$ gives $k=1 \\Rightarrow I_{4}=D$.\n- $ABC=101$ gives $k=2 \\Rightarrow I_{5}=\\bar{D}$.\n- $ABC=110$ gives $k=2 \\Rightarrow I_{6}=\\bar{D}$.\n- $ABC=111$ gives $k=3 \\Rightarrow I_{7}=0$.\n\nThus, the required tuple is\n$$\n(I_{0},I_{1},I_{2},I_{3},I_{4},I_{5},I_{6},I_{7}) \\;=\\; (0, D, D, \\bar{D}, D, \\bar{D}, \\bar{D}, 0),\n$$\nwhich matches option A, and uses at most one external inverter to generate $\\bar{D}$.", "answer": "$$\\boxed{A}$$", "id": "1923421"}]}