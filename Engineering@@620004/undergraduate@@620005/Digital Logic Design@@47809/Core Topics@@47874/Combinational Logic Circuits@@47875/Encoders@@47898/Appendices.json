{"hands_on_practices": [{"introduction": "To begin our hands-on exploration, we will start with the fundamental principle of a standard binary encoder. This exercise challenges you to work backward from a given binary output to identify the corresponding active input line. Mastering this reverse thinking solidifies your understanding of the core function of an encoder: converting a specific, single active input into its equivalent binary index [@problem_id:1932623].", "problem": "In a digital control system for an industrial process, an 8-to-3 standard binary encoder is used to monitor the status of eight independent sensors, labeled $D_0, D_1, D_2, D_3, D_4, D_5, D_6,$ and $D_7$. The system is designed such that only one sensor can be active (logic high) at any given time. The encoder's function is to output a 3-bit binary number, represented by the outputs $Y_2Y_1Y_0$, that corresponds to the index of the single active input line. For example, if input $D_3$ is active, the output is $011_2$. The output bit $Y_2$ is the most significant bit (MSB).\n\nAt a particular instant, an operator observes that the 3-bit output from the encoder is $101_2$. Assuming the encoder is functioning correctly, which one of the following sensor input lines must be active?\n\nA. $D_1$\n\nB. $D_3$\n\nC. $D_5$\n\nD. $D_6$\n\nE. $D_7$", "solution": "An 8-to-3 standard binary encoder outputs a 3-bit binary number corresponding to the index of the single active input. If exactly one input $D_{i}$ is high and all others are low, then the output bits $Y_{2}Y_{1}Y_{0}$ represent $i$ in base 2. The binary-to-decimal relation is\n$$\ni = Y_{2}\\cdot 2^{2} + Y_{1}\\cdot 2^{1} + Y_{0}\\cdot 2^{0}.\n$$\nThe observed output is $(101)_{2}$, which sets $Y_{2}=1$, $Y_{1}=0$, and $Y_{0}=1$. Substituting into the expression gives\n$$\ni = 1\\cdot 2^{2} + 0\\cdot 2^{1} + 1\\cdot 2^{0} = 4 + 0 + 1 = 5.\n$$\nTherefore, the active input line is $D_{5}$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1932623"}, {"introduction": "Having understood what an encoder does, the next logical step is to explore how it is built. This practice guides you through deriving the Boolean logic expression for one of the encoder's outputs from its functional description. This is a foundational skill in digital logic design, transforming an abstract concept into a concrete circuit implementation using basic logic gates [@problem_id:1932579].", "problem": "A 4-to-2 simple encoder is a combinational logic circuit with four data input lines, denoted as $I_3, I_2, I_1, I_0$, and two binary output lines, $Y_1, Y_0$. An essential characteristic of this circuit is its operational constraint: for any valid state, exactly one of the four input lines is at a high logic level ('1'), while the other three are at a low logic level ('0'). The circuit's function is to produce a 2-bit binary number on its outputs, $Y_1Y_0$, that corresponds to the numerical index of the active input line. In this output, $Y_1$ serves as the most significant bit and $Y_0$ as the least significant bit. For instance, if input $I_2$ is the active line (i.e., $I_2 = 1$), the resulting binary output is '10' (so $Y_1=1$ and $Y_0=0$).\n\nDetermine the fully simplified Boolean expression for the least significant output bit, $Y_0$, as a function of the four inputs. The expression should be presented in a sum-of-products format, using `+` to denote the logical OR operation.", "solution": "A 4-to-2 encoder asserts outputs corresponding to the index of the single active input. Let $k \\in \\{0,1,2,3\\}$ be the index of the asserted input $I_{k}=1$. The least significant output bit equals the least significant bit of $k$, denoted $k_{0}$. Using Boolean sum (OR) and product (AND), this gives the selector form\n$$\nY_{0}=\\sum_{k=0}^{3} k_{0}\\, I_{k}=0\\cdot I_{0}+1\\cdot I_{1}+0\\cdot I_{2}+1\\cdot I_{3}.\n$$\nApplying the Boolean identities $0\\cdot X=0$ and $1\\cdot X=X$, we simplify term by term:\n$$\nY_{0}=0+I_{1}+0+I_{3}=I_{1}+I_{3}.\n$$\nThus, the fully simplified sum-of-products expression is the OR of the inputs whose indices have least significant bit equal to $1$, namely $I_{1}$ and $I_{3}$.", "answer": "$$\\boxed{I_{1}+I_{3}}$$", "id": "1932579"}, {"introduction": "Simple encoders operate under the assumption that only one input is active at a time, which is not always practical. This problem introduces the priority encoder, a more robust device designed to handle multiple simultaneous inputs by assigning a priority level to each one. By analyzing a scenario with several active inputs, you will learn how priority logic resolves ambiguity and gain insight into the function of the 'Valid' output bit, which signals when the encoder is processing an active request [@problem_id:1954014].", "problem": "A 4-to-2 priority encoder is a combinational logic circuit that accepts four inputs and produces a two-bit binary output. The encoder is designed to identify the highest-priority active input among its four data inputs, denoted as $I_3$, $I_2$, $I_1$, and $I_0$. For this specific device, the input $I_3$ has the highest priority, followed by $I_2$, then $I_1$, and finally $I_0$ with the lowest priority.\n\nThe encoder has two binary outputs, $Y_1$ and $Y_0$, which represent the binary index of the highest-priority active input (where 'active' means the input is at logic '1'). For example, if $I_2$ were the highest-priority active input, the output $Y_1Y_0$ would be the binary representation of 2, which is '10'. In addition to the encoded output, there is a 'Valid' bit, $V$. The Valid bit $V$ is set to '1' if one or more of the inputs are active, and it is '0' only when all inputs are inactive (logic '0').\n\nGiven an input data vector where $I_3I_2I_1I_0 = 1011$, determine the resulting state of the outputs $V, Y_1,$ and $Y_0$. Select the correct option from the choices below.\n\nA. $V=1, Y_1=0, Y_0=1$\n\nB. $V=1, Y_1=1, Y_0=0$\n\nC. $V=1, Y_1=1, Y_0=1$\n\nD. $V=0, Y_1=1, Y_0=1$\n\nE. $V=1, Y_1=0, Y_0=0$", "solution": "A 4-to-2 priority encoder selects the highest-priority asserted input and outputs its index in binary on $(Y_{1},Y_{0})$, with $V$ indicating whether any input is asserted. Using standard Boolean algebra (with $+$ as OR, concatenation or $\\cdot$ as AND, and overline as NOT), the canonical expressions for a 4-to-2 priority encoder with priority $I_{3} \\succ I_{2} \\succ I_{1} \\succ I_{0}$ are:\n$$V = I_{3} + I_{2} + I_{1} + I_{0},$$\n$$Y_{1} = I_{3} + I_{2},$$\n$$Y_{0} = I_{3} + \\overline{I_{2}}\\,I_{1}.$$\nJustification:\n- $V$ is $1$ if any input is active, hence the OR of all inputs.\n- $Y_{1}$ is $1$ exactly when the selected index is $2$ or $3$, which occurs if $I_{3}=1$ or (if $I_{3}=0$ and) $I_{2}=1$, yielding $I_{3} + I_{2}$.\n- $Y_{0}$ is $1$ when the selected index is odd (either $1$ or $3$). Index $3$ occurs if $I_{3}=1$, and index $1$ occurs only when $I_{3}=0$, $I_{2}=0$, and $I_{1}=1$, giving $I_{3} + \\overline{I_{2}}\\,I_{1}$.\n\nGiven $I_{3}I_{2}I_{1}I_{0} = 1011$, we have $I_{3}=1$, $I_{2}=0$, $I_{1}=1$, $I_{0}=1$. Substituting:\n$$V = 1 + 0 + 1 + 1 = 1,$$\n$$Y_{1} = 1 + 0 = 1,$$\n$$Y_{0} = 1 + \\overline{0}\\cdot 1 = 1 + 1\\cdot 1 = 1.$$\nThus the outputs are $V=1$, $Y_{1}=1$, $Y_{0}=1$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1954014"}]}