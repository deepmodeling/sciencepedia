{"hands_on_practices": [{"introduction": "Understanding the timing behavior of sequential logic is a cornerstone of digital design. This first practice challenges you to trace the output of a gated D latch in response to a specific sequence of input changes. By carefully applying the rules of transparency and latching, and accounting for propagation delay, you will develop the crucial skill of performing timing analysis to predict a circuit's state over time. [@problem_id:1968088]", "problem": "A gated D latch is a fundamental digital logic circuit with one data input (D), one gate input (G), and one output (Q). The behavior of this latch is defined as follows:\n- When the gate input G is HIGH (logic 1), the latch is in \"transparent\" mode, and the output Q follows the state of the data input D.\n- When the gate input G is LOW (logic 0), the latch is in \"opaque\" mode, and the output Q holds its last value, ignoring any changes at the D input.\n\nConsider a specific implementation of this latch that has a uniform propagation delay, $t_{pd} = 2 \\text{ ns}$. This means that any change at the inputs (D or G) that results in a change at the output Q will see that change reflected at Q only after a delay of $t_{pd}$.\n\nThe inputs D and G are subjected to a sequence of transitions over time, starting from $t=0$. Initially, at $t=0$, the output Q is LOW (logic 0). The state of the D and G inputs is also LOW at $t=0$. The subsequent transitions are as follows:\n\n- At $t=10 \\text{ ns}$, input D transitions from LOW to HIGH.\n- At $t=20 \\text{ ns}$, input G transitions from LOW to HIGH.\n- At $t=35 \\text{ ns}$, input D transitions from HIGH to LOW.\n- At $t=45 \\text{ ns}$, input D transitions from LOW to HIGH.\n- At $t=60 \\text{ ns}$, input G transitions from HIGH to LOW.\n- At $t=70 \\text{ ns}$, input D transitions from HIGH to LOW.\n\nYour task is to analyze the behavior of the output Q over time. Calculate the total amount of time that the output Q is in the HIGH state during the time interval from $t=0 \\text{ ns}$ to $t=90 \\text{ ns}$. Express your final answer in nanoseconds.", "solution": "We model a gated D latch with propagation delay $t_{pd}=2\\ \\text{ns}$. The latch behavior is:\n- If $G=1$, the output follows $D$ after delay $t_{pd}$.\n- If $G=0$, the output holds its last value; changes in $D$ produce no effect.\n- A rising transition of $G$ to $1$ causes $Q$ to take the current value of $D$ after $t_{pd}$.\n- A falling transition of $G$ to $0$ does not change $Q$; it only blocks further propagation from $D$.\n\nInitial conditions at $t=0$: $D=0$, $G=0$, $Q=0$.\n\nProceed through the given input transitions:\n\n1) At $t=10\\ \\text{ns}$, $D:0\\to1$ with $G=0$. Since the latch is opaque, there is no effect on $Q$.\n\n2) At $t=20\\ \\text{ns}$, $G:0\\to1$. The latch becomes transparent; since $D=1$ at $t=20\\ \\text{ns}$, $Q$ will update to $1$ after delay $t_{pd}$:\n$$t=20\\ \\text{ns} \\implies Q \\text{ goes to } 1 \\text{ at } 20+2=22\\ \\text{ns}.$$\nThus $Q:0\\to1$ at $t=22\\ \\text{ns}$.\n\n3) At $t=35\\ \\text{ns}$, $D:1\\to0$ with $G=1$. The output will follow after $t_{pd}$:\n$$t=35\\ \\text{ns} \\implies Q \\text{ goes to } 0 \\text{ at } 35+2=37\\ \\text{ns}.$$\nThus $Q:1\\to0$ at $t=37\\ \\text{ns}$.\n\n4) At $t=45\\ \\text{ns}$, $D:0\\to1$ with $G=1$. The output will follow after $t_{pd}$:\n$$t=45\\ \\text{ns} \\implies Q \\text{ goes to } 1 \\text{ at } 45+2=47\\ \\text{ns}.$$\nThus $Q:0\\to1$ at $t=47\\ \\text{ns}$.\n\n5) At $t=60\\ \\text{ns}$, $G:1\\to0$. Closing the gate does not change $Q$; it simply holds the current value. At this moment $Q=1$, and with $G=0$ thereafter, $Q$ remains $1$.\n\n6) At $t=70\\ \\text{ns}$, $D:1\\to0$ with $G=0$. The latch is opaque, so there is no effect on $Q$.\n\nTherefore, the intervals where $Q=1$ are:\n- From $t=22\\ \\text{ns}$ to $t=37\\ \\text{ns}$, duration $37-22=15\\ \\text{ns}$.\n- From $t=47\\ \\text{ns}$ to $t=90\\ \\text{ns}$, duration $90-47=43\\ \\text{ns}$.\n\nThe total time $Q$ is HIGH between $t=0\\ \\text{ns}$ and $t=90\\ \\text{ns}$ is\n$$15\\ \\text{ns} + 43\\ \\text{ns} = 58\\ \\text{ns}.$$", "answer": "$$\\boxed{58}$$", "id": "1968088"}, {"introduction": "Once we understand how a device should behave, how do we confirm that a physical implementation actually does? This practice moves you into the role of a verification engineer, tasking you with designing a minimal set of tests to ensure a gated D latch meets all aspects of its specification. This exercise emphasizes a shift from passive analysis to active test design, introducing the critical discipline of functional coverage for creating reliable digital systems. [@problem_id:1968065]", "problem": "A digital design engineer is tasked with creating a verification plan for a gated D latch component. The latch has two single-bit inputs, a data input $D$ and a gate input $G$, and a single-bit output $Q$. Both inputs and the output can take on logic values of `0` or `1`.\n\nThe specified behavior of the latch is as follows:\n1.  When the gate input $G$ is held at `1`, the latch is \"transparent.\" In this mode, the output $Q$ continuously mirrors the data input $D$ (i.e., $Q=D$).\n2.  When the gate input $G$ transitions from `1` to `0`, the value of the data input $D$ at that precise moment is captured.\n3.  As long as the gate input $G$ is held at `0`, the latch is \"opaque.\" In this mode, the output $Q$ maintains the last captured value, regardless of any changes occurring at the data input $D$.\n\nTo ensure the physical implementation of the latch matches this specification, the engineer must devise a set of test sequences. A test sequence is an ordered list of input pairs $(G, D)$ applied at consecutive, discrete time steps. The goal is to find the minimal set of such sequences that provides full functional coverage, meaning all aspects of the specified behavior are tested.\n\nWhich of the following options represents a minimal and complete set of test sequences for the functional verification of the gated D latch?\n\nA. `{ Sequence 1: [(1, 1), (0, 1), (0, 0)], Sequence 2: [(1, 0), (0, 0)] }`\n\nB. `{ Sequence 1: [(0, 0), (0, 1), (1, 1), (1, 0)] }`\n\nC. `{ Sequence 1: [(1, 1), (0, 1)], Sequence 2: [(1, 0), (0, 0)] }`\n\nD. `{ Sequence 1: [(1, 1), (0, 1), (0, 0)], Sequence 2: [(1, 0), (0, 0), (0, 1)] }`\n\nE. `{ Sequence 1: [(1, 1), (0, 1), (0, 0)] }`", "solution": "We use the specified functional rules of the gated D latch:\n(i) Transparency: while $G=1$, the output follows the input, so $Q=D$ at every time step with $G=1$.\n(ii) Capture on falling edge: at the instant $G:1\\to 0$, the value of $D$ is latched and becomes the stored value of $Q$.\n(iii) Opaque hold: while $G=0$, $Q$ remains equal to the last captured value, independent of any changes in $D$.\n\nTo achieve full functional coverage, a minimal complete test set must demonstrate:\n- For $G=1$: that $Q=D$, for both $D=0$ and $D=1$ (showing transparency).\n- For $G:1\\to 0$: that the captured value equals $D$ at the transition, for both $D=0$ and $D=1$ (showing correct capture).\n- For $G=0$: that changing $D$ does not change $Q$, ideally for both latched values $Q=0$ and $Q=1$ (showing opaque hold regardless of input changes).\n\nNow evaluate each option by simulating the sequences step by step.\n\nOption A:\nSequence 1: $(1,1)\\to(0,1)\\to(0,0)$.\n- At $(1,1)$: $G=1\\Rightarrow Q=D=1$ (transparency at $D=1$).\n- At $(0,1)$: $G$ falls $1\\to 0$ with $D=1$, so $Q$ captures $1$.\n- At $(0,0)$: $G=0$ and $D$ changed $1\\to 0$, so $Q$ must remain $1$ (opaque hold under $D$ change, with stored $1$).\n\nSequence 2: $(1,0)\\to(0,0)$.\n- At $(1,0)$: $G=1\\Rightarrow Q=D=0$ (transparency at $D=0$).\n- At $(0,0)$: $G$ falls $1\\to 0$ with $D=0$, so $Q$ captures and holds $0$.\n\nCoverage: captures both $0$ and $1$ at the falling edge; verifies $Q=D$ for both $D$ values with $G=1$; demonstrates opaque hold under a $D$ change for stored $1$. It does not explicitly demonstrate opaque hold under a $D$ change for stored $0$.\n\nOption B:\nSequence: $(0,0)\\to(0,1)\\to(1,1)\\to(1,0)$.\n- $(0,0)\\to(0,1)$: with $G=0$, changing $D$ should not change $Q$ (opaque hold), but the initially latched $Q$ is unknown; still, checking that $Q$ does not change between these steps verifies hold under $D$ change in principle.\n- $(1,1)\\to(1,0)$: with $G=1$, changing $D$ from $1$ to $0$ should make $Q$ follow (transparency under change).\nHowever, there is no $G:1\\to 0$ event. Thus capture behavior at the falling edge is not tested. Incomplete.\n\nOption C:\nSequence 1: $(1,1)\\to(0,1)$.\n- $(1,1)$: $G=1\\Rightarrow Q=1$.\n- $(0,1)$: fall with $D=1$, capture $1$.\n\nSequence 2: $(1,0)\\to(0,0)$.\n- $(1,0)$: $G=1\\Rightarrow Q=0$.\n- $(0,0)$: fall with $D=0$, capture $0$.\n\nCoverage: captures both $0$ and $1$ at falling edge, and checks $Q=D$ at $G=1$ for both $D$ values. It never changes $D$ while $G=0$, so it does not verify the “regardless of any changes at $D$” clause. Incomplete.\n\nOption D:\nSequence 1: $(1,1)\\to(0,1)\\to(0,0)$.\n- $(1,1)$: $G=1\\Rightarrow Q=1$ (transparency at $D=1$).\n- $(0,1)$: fall with $D=1$, capture $1$.\n- $(0,0)$: $G=0$ and $D$ changed $1\\to 0$, so $Q$ remains $1$ (opaque hold under $D$ change, stored $1$).\n\nSequence 2: $(1,0)\\to(0,0)\\to(0,1)$.\n- $(1,0)$: $G=1\\Rightarrow Q=0$ (transparency at $D=0$).\n- $(0,0)$: fall with $D=0$, capture $0$.\n- $(0,1)$: $G=0$ and $D$ changed $0\\to 1$, so $Q$ remains $0$ (opaque hold under $D$ change, stored $0$).\n\nCoverage: verifies transparency for both $D$ values, capture on the falling edge for both $D=0$ and $D=1$, and opaque hold under $D$ changes for both stored values $Q=0$ and $Q=1$. This satisfies all aspects and does so with two sequences. Removing either sequence would miss one capture value, so the set is minimal in number of sequences among complete options.\n\nOption E:\nSequence: $(1,1)\\to(0,1)\\to(0,0)$.\n- As in Option D’s first sequence, this covers transparency at $D=1$, capture of $1$, and opaque hold under a $D$ change with stored $1$. It does not test capture of $0$. Incomplete.\n\nTherefore, only Option D provides a minimal and complete set of sequences that exercises all specified behaviors, including both capture values and hold under input changes for both stored values.", "answer": "$$\\boxed{D}$$", "id": "1968065"}, {"introduction": "Ideal components provide a useful abstraction, but real-world hardware can fail. This final practice delves into fault analysis, a crucial skill for debugging and testing in digital electronics. You will examine the internal NAND-gate structure of a D latch and determine how a specific manufacturing defect—a common \"stuck-at-1\" fault—alters its logical behavior, bridging the gap between the latch's abstract model and its physical implementation. [@problem_id:1968091]", "problem": "A gated D latch is constructed using NAND gates as follows. The primary inputs are a data line `D` and an enable line `E`. An inverter, built from a NAND gate with its inputs tied together, generates `D_bar = NOT(D)`. The outputs of the latch are `Q` and `Q_bar`. The internal structure consists of two main parts:\n1.  A pair of input steering NAND gates: The first gate computes `S_bar = NAND(D, E)`, and the second computes `R_bar = NAND(D_bar, E)`.\n2.  A cross-coupled Set-Reset (SR) latch core: This is made of two NAND gates where `Q = NAND(S_bar, Q_bar)` and `Q_bar = NAND(R_bar, Q)`.\n\nConsider a scenario where a manufacturing defect causes a specific input pin to be permanently stuck-at-1 (tied to logic HIGH). The affected pin is the one that is intended to receive the `S_bar` signal at the input of the upper NAND gate of the SR latch core (the gate that produces the output `Q`).\n\nWhich of the following statements accurately describes the operational behavior of this faulty D latch?\n\nA. The latch functions perfectly as a normal gated D latch, with the fault having no observable effect on its behavior.\nB. The output `Q` is permanently stuck-at-0, regardless of the inputs `D` and `E`.\nC. When the enable input `E` is high, the latch becomes transparent but inverts the data, i.e., `Q` follows `NOT(D)`. When `E` is low, it holds its state.\nD. When the enable input `E` is high, the latch will correctly load a `0` from the `D` input, but it will fail to load a `1`, instead holding its previous state. When `E` is low, the latch correctly holds its state.\nE. The latch is permanently transparent, meaning the output `Q` always follows the input `D`, irrespective of the enable input `E`.\nF. The circuit becomes unstable and oscillates whenever the enable `E` is high.", "solution": "Let $\\operatorname{NAND}(x,y)=\\neg(x \\land y)$. In the intended latch, the steering and core relations are\n$$\\overline{D}=\\operatorname{NAND}(D,D)=\\neg D,$$\n$$\\overline{S}=\\operatorname{NAND}(D,E),\\quad \\overline{R}=\\operatorname{NAND}(\\overline{D},E),$$\n$$Q=\\operatorname{NAND}(\\overline{S},\\overline{Q}),\\quad \\overline{Q}=\\operatorname{NAND}(\\overline{R},Q).$$\nWith the fault, the input pin that should carry $\\overline{S}$ into the $Q$-producing NAND is stuck at logic $1$. Therefore the upper core gate becomes\n$$Q=\\operatorname{NAND}(1,\\overline{Q})=\\neg(1 \\land \\overline{Q})=\\neg \\overline{Q},$$\nwhile the lower core gate remains\n$$\\overline{Q}=\\operatorname{NAND}(\\overline{R},Q).$$\nThe steering for $\\overline{R}$ is unchanged:\n$$\\overline{R}=\\operatorname{NAND}(\\overline{D},E).$$\n\nAnalyze by cases on $E$.\n\n1) If $E=0$, then $\\overline{R}=\\operatorname{NAND}(\\overline{D},0)=1$. Hence\n$$\\overline{Q}=\\operatorname{NAND}(1,Q)=\\neg Q,$$\ntogether with $Q=\\neg \\overline{Q}$, which is simply the complementarity condition. No input forces a change, so the latch holds its previous state.\n\n2) If $E=1$, then $\\overline{R}=\\operatorname{NAND}(\\overline{D},1)=\\neg \\overline{D}=D$.\n\n- If $D=0$, then $\\overline{R}=0$ and\n$$\\overline{Q}=\\operatorname{NAND}(0,Q)=1 \\implies Q=\\neg \\overline{Q}=0.$$\nThus $Q$ is forced to $0$ regardless of the prior state; the latch loads a $0$ correctly.\n\n- If $D=1$, then $\\overline{R}=1$ and\n$$\\overline{Q}=\\operatorname{NAND}(1,Q)=\\neg Q,$$\nwhich together with $Q=\\neg \\overline{Q}$ imposes only $Q=\\neg \\overline{Q}$, i.e., both prior stable states persist and no transition is forced. Therefore the latch fails to load a $1$ and instead holds its previous state.\n\nThis matches the description: with $E$ low the latch holds state; with $E$ high it correctly loads a $0$ but cannot load a $1$, holding the prior state instead. Hence the correct option is D and all other options are inconsistent with the derived behavior.", "answer": "$$\\boxed{D}$$", "id": "1968091"}]}