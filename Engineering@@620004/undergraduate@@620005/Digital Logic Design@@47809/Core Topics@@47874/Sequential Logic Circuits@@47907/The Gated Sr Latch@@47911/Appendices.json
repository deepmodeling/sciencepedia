{"hands_on_practices": [{"introduction": "Understanding a gated SR latch begins with its most fundamental property: its ability to act as a simple memory element. This practice guides you through a basic two-step operation to solidify the concepts of the 'enabled' and 'hold' states [@problem_id:1968364]. By analyzing how the latch first captures a new state and then preserves it after the enable signal is removed, you will gain hands-on insight into the core mechanism of sequential logic.", "problem": "A gated Set-Reset (SR) latch is a fundamental sequential logic circuit. The version in question is constructed from four 2-input NAND gates. The inputs to the circuit are $S$ (Set), $R$ (Reset), and $E$ (Enable). The outputs are $Q$ and its complement $\\bar{Q}$.\n\nThe circuit is configured as follows:\n1.  A first NAND gate receives inputs $S$ and $E$. Its output is designated as $S'$.\n2.  A second NAND gate receives inputs $R$ and $E$. Its output is designated as $R'$.\n3.  A third NAND gate (the \"output\" gate) receives inputs $S'$ and $\\bar{Q}$. Its output is $Q$.\n4.  A fourth NAND gate (the \"feedback\" gate) receives inputs $R'$ and $Q$. Its output is $\\bar{Q}$.\n\nInitially, the latch is in a stable state with its output $Q=0$. A sequence of input signals is then applied. The first input vector is $(S, R, E) = (1, 0, 1)$. Immediately after the latch stabilizes, the input vector changes to $(S, R, E) = (0, 1, 0)$.\n\nDetermine the final state of the output $Q$ after this full sequence of operations.\n\nChoose the correct option from the following:\nA. 0\n\nB. 1\n\nC. The state becomes invalid (i.e., $Q = \\bar{Q}$).\n\nD. The state oscillates indefinitely.", "solution": "We model each NAND gate with the Boolean relation $\\operatorname{NAND}(a,b)=\\overline{a \\cdot b}$. With the given interconnections, the latch equations are\n$$\nS'=\\overline{S \\cdot E}, \\quad R'=\\overline{R \\cdot E}, \\quad Q=\\overline{S' \\cdot \\bar{Q}}, \\quad \\bar{Q}=\\overline{R' \\cdot Q}.\n$$\nInitially, the latch is stable with $Q=0$ and $\\bar{Q}=1$.\n\nFirst input vector $(S,R,E)=(1,0,1)$:\n$$\nS'=\\overline{1 \\cdot 1}=\\overline{1}=0, \\quad R'=\\overline{0 \\cdot 1}=\\overline{0}=1.\n$$\nThen the outputs resolve to\n$$\nQ=\\overline{S' \\cdot \\bar{Q}}=\\overline{0 \\cdot \\bar{Q}}=\\overline{0}=1, \\quad \\bar{Q}=\\overline{R' \\cdot Q}=\\overline{1 \\cdot 1}=\\overline{1}=0.\n$$\nThus after stabilization with the first vector, the latch is set: $Q=1$, $\\bar{Q}=0$.\n\nSecond input vector $(S,R,E)=(0,1,0)$:\n$$\nS'=\\overline{0 \\cdot 0}=\\overline{0}=1, \\quad R'=\\overline{1 \\cdot 0}=\\overline{0}=1.\n$$\nWith $S'=R'=1$, the cross-coupled NAND latch is in hold mode:\n$$\nQ=\\overline{1 \\cdot \\bar{Q}}=\\overline{\\bar{Q}}, \\quad \\bar{Q}=\\overline{1 \\cdot Q}=\\overline{Q},\n$$\nwhich preserves the previously established state. Since just before this change we had $Q=1$, the final state remains $Q=1$.\n\nTherefore, the correct option is B.", "answer": "$$\\boxed{B}$$", "id": "1968364"}, {"introduction": "Building on the basic principles, this exercise challenges you to trace the output of a gated SR latch through a more complex series of input changes. This practice is designed to develop your analytical skills by requiring a methodical, step-by-step evaluation of the latch's state over time, assuming ideal (zero-delay) gates for conceptual clarity [@problem_id:1968401]. It provides a comprehensive workout of all the latch's operational modes, including the crucial set, reset, hold, and the often-misunderstood invalid input condition.", "problem": "A gated Set-Reset (SR) latch is constructed using four 2-input NAND gates. The latch has three inputs: Set ($S$), Reset ($R$), and Enable ($E$). It has two outputs, $Q$ and $\\bar{Q}$. For the purpose of this analysis, assume the NAND gates have zero propagation delay.\n\nThe latch is observed over a period of time, starting from an initial state where the output $Q$ is at logic low (0) for all times $t < 0$. The input signals $S$, $R$, and $E$ are all initially at logic low (0). The signals then change state at specific moments in time as follows:\n\n*   At $t = 10 \\text{ ns}$, input $E$ transitions from 0 to 1.\n*   At $t = 20 \\text{ ns}$, input $S$ transitions from 0 to 1.\n*   At $t = 30 \\text{ ns}$, input $S$ transitions from 1 to 0.\n*   At $t = 40 \\text{ ns}$, input $R$ transitions from 0 to 1.\n*   At $t = 50 \\text{ ns}$, input $S$ transitions from 0 to 1.\n*   At $t = 60 \\text{ ns}$, input $R$ transitions from 1 to 0.\n*   At $t = 70 \\text{ ns}$, input $E$ transitions from 1 to 0.\n\nGiven this sequence of events, determine the logic level of the output $Q$ at the time points $t_1 = 25 \\text{ ns}$, $t_2 = 35 \\text{ ns}$, $t_3 = 45 \\text{ ns}$, $t_4 = 55 \\text{ ns}$, $t_5 = 65 \\text{ ns}$, and $t_6 = 75 \\text{ ns}$.\n\nWhich of the following options correctly represents the sequence of $Q$'s logic levels $(Q(t_1), Q(t_2), Q(t_3), Q(t_4), Q(t_5), Q(t_6))$?\n\nA. (1, 1, 0, 1, 1, 1)\n\nB. (1, 1, 0, 0, 1, 1)\n\nC. (1, 1, 0, 1, 1, 0)\n\nD. (1, 0, 0, 1, 0, 0)", "solution": "A gated SR latch built from NAND gates uses two input-gating NANDs and a cross-coupled NAND latch. Let the gated inputs be\n$$S'=\\operatorname{NAND}(S,E), \\quad R'=\\operatorname{NAND}(R,E).$$\nThese drive the basic NAND latch\n$$Q=\\operatorname{NAND}(S',\\bar{Q}), \\quad \\bar{Q}=\\operatorname{NAND}(R',Q).$$\nFor a NAND SR latch, the behaviors are:\n- Set: $S'=0$, $R'=1$ implies $Q=1$.\n- Reset: $S'=1$, $R'=0$ implies $Q=0$.\n- Hold: $S'=1$, $R'=1$ leaves $Q$ unchanged.\n- Invalid: $S'=0$, $R'=0$ forces $Q=\\bar{Q}=1$ (forbidden but stable while applied).\n\nAssuming zero propagation delay and the given initial condition $Q=0$ for all $t<0$ with $S=0$, $R=0$, $E=0$, we evaluate chronologically:\n\nFor $t<10\\,\\text{ns}$: $E=0$ gives $S'=\\operatorname{NAND}(0,0)=1$, $R'=\\operatorname{NAND}(0,0)=1$ (hold), so $Q=0$ remains.\n\nAt $t=10\\,\\text{ns}$: $E$ goes to $1$ with $S=0$, $R=0$, so $S'=\\operatorname{NAND}(0,1)=1$, $R'=\\operatorname{NAND}(0,1)=1$ (hold), thus $Q$ stays $0$.\n\nAt $t=20\\,\\text{ns}$: $S$ goes to $1$ with $E=1$, $R=0$, so $S'=\\operatorname{NAND}(1,1)=0$, $R'=\\operatorname{NAND}(0,1)=1$ (set), hence $Q$ becomes $1$. Therefore $Q(25\\,\\text{ns})=1$.\n\nAt $t=30\\,\\text{ns}$: $S$ returns to $0$ with $E=1$, $R=0$, so $S'=\\operatorname{NAND}(0,1)=1$, $R'=\\operatorname{NAND}(0,1)=1$ (hold), thus $Q$ remains $1$. Therefore $Q(35\\,\\text{ns})=1$.\n\nAt $t=40\\,\\text{ns}$: $R$ goes to $1$ with $E=1$, $S=0$, so $S'=\\operatorname{NAND}(0,1)=1$, $R'=\\operatorname{NAND}(1,1)=0$ (reset), hence $Q$ becomes $0$. Therefore $Q(45\\,\\text{ns})=0$.\n\nAt $t=50\\,\\text{ns}$: $S$ goes to $1$ while $R=1$, $E=1$, so $S'=\\operatorname{NAND}(1,1)=0$, $R'=\\operatorname{NAND}(1,1)=0$ (invalid), which forces $Q=\\bar{Q}=1$ under the NAND-latch equations. Therefore $Q(55\\,\\text{ns})=1$.\n\nAt $t=60\\,\\text{ns}$: $R$ goes to $0$ with $E=1$, $S=1$, so $S'=\\operatorname{NAND}(1,1)=0$, $R'=\\operatorname{NAND}(0,1)=1$ (set), yielding $Q=1$. Therefore $Q(65\\,\\text{ns})=1$.\n\nAt $t=70\\,\\text{ns}$: $E$ goes to $0$ with $S=1$, $R=0$, so $S'=\\operatorname{NAND}(1,0)=1$, $R'=\\operatorname{NAND}(0,0)=1$ (hold), thus $Q$ holds at $1$. Therefore $Q(75\\,\\text{ns})=1$.\n\nCollecting the sampled values,\n$$(Q(t_{1}),Q(t_{2}),Q(t_{3}),Q(t_{4}),Q(t_{5}),Q(t_{6}))=(1,1,0,1,1,1),$$\nwhich corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1968401"}, {"introduction": "While ideal models are essential for understanding logic, real-world digital circuits operate under physical constraints. This practice moves beyond idealized behavior to explore the critical role of timing parameters, specifically setup time ($t_{su}$) and hold time ($t_{h}$) [@problem_id:1968400]. By analyzing a scenario where an input changes too close to the latching edge of the enable signal—a hold time violation—you will discover the practical consequences and the potential for entering an unpredictable metastable state, a fundamental concept in reliable digital design.", "problem": "An engineer is analyzing a critical data-latching circuit built around a gated Set-Reset (SR) latch. The latch is controlled by an active-high enable signal, `$E$`. When `$E$` is high (`1`), the latch is transparent, meaning its output `$Q$` follows the inputs according to the standard SR latch truth table. When `$E$` transitions from high to low (a falling edge), the latch stores the current state and becomes insensitive to further changes in `$S$` and `$R$`. The forbidden input condition `$S=R=1$` is guaranteed not to occur while `$E$` is high.\n\nThe latch has the following timing specifications:\n- Propagation delay from input to output, $t_{pd}$: 2 ns\n- Setup time, $t_{su}$: 3 ns (The minimum time the `$S$` and `$R$` inputs must be stable *before* the falling edge of `$E$`)\n- Hold time, $t_h$: 5 ns (The minimum time the `$S$` and `$R$` inputs must be stable *after* the falling edge of `$E$`)\n\nThe circuit is initialized such that at time $t < 0$, the output `$Q$` is `0`. The input signals `$E$`, `$S$`, and `$R$` behave as follows for $t \\ge 0$:\n- The enable signal `$E$` is a single pulse, going from `0` to `1` at $t=10$ ns and back from `1` to `0` at $t=30$ ns.\n- The Reset input `$R$` is held at `0` for all time.\n- The Set input `$S$` is at `0` initially. It transitions from `0` to `1` at $t=32$ ns and stays at `1` thereafter.\n\nBased on this information, what is the behavior of the output `$Q$` for $t > 32$ ns?\n\nA. `$Q$` remains stable at `0`.\n\nB. `$Q$` becomes stable at `1`.\n\nC. `$Q$` enters an unpredictable or metastable state.\n\nD. `$Q$` oscillates continuously between `0` and `1`.\n\nE. The latch was never enabled, so `$Q$`'s state is unchanged from its power-on value.", "solution": "We analyze the gated SR latch with active-high enable $E$. While $E=1$, the latch is transparent and $Q$ follows the SR behavior; when $E$ falls from $1$ to $0$, the latch stores the state present at that falling edge, subject to setup and hold time constraints. The timing specifications are propagation delay $t_{pd}=2\\,\\text{ns}$, setup time $t_{su}=3\\,\\text{ns}$, and hold time $t_{h}=5\\,\\text{ns}$. The inputs are $R=0$ for all $t$, $S=0$ until $t=32\\,\\text{ns}$ and then $S=1$ for $t\\geq 32\\,\\text{ns}$. The enable $E$ is high on the interval $(10\\,\\text{ns},30\\,\\text{ns})$ and falls at $t_{f}=30\\,\\text{ns}$. The initial condition is $Q=0$ for $t<0$.\n\nWhile $E=1$ on $(10\\,\\text{ns},30\\,\\text{ns})$, the inputs are $(S,R)=(0,0)$. For an SR latch, $(S,R)=(0,0)$ corresponds to the hold condition, so with $Q$ initialized to $0$, $Q$ remains $0$ during transparency. The propagation delay $t_{pd}=2\\,\\text{ns}$ does not change this qualitative conclusion because there is no input change during the transparent window.\n\nAt the falling edge $t=t_{f}=30\\,\\text{ns}$, the latch samples the inputs and stores the state, provided that the setup and hold constraints are met. The setup-time requirement is that $S$ and $R$ must be stable for at least $t_{su}$ before the edge, i.e.,\n$$\n\\text{stability on }[t_{f}-t_{su},\\,t_{f})=[30\\,\\text{ns}-3\\,\\text{ns},\\,30\\,\\text{ns})=[27\\,\\text{ns},\\,30\\,\\text{ns}).\n$$\nSince $(S,R)=(0,0)$ throughout this interval, the setup condition is satisfied. The hold-time requirement is that $S$ and $R$ must remain stable for at least $t_{h}$ after the edge, i.e.,\n$$\n\\text{stability on }(t_{f},\\,t_{f}+t_{h}]=(30\\,\\text{ns},\\,30\\,\\text{ns}+5\\,\\text{ns}]=(30\\,\\text{ns},\\,35\\,\\text{ns}].\n$$\nHowever, $S$ changes at\n$$\nt_{S\\_change}=32\\,\\text{ns},\n$$\nso the time from the falling edge to the $S$ transition is\n$$\nt_{S\\_change}-t_{f}=32\\,\\text{ns}-30\\,\\text{ns}=2\\,\\text{ns},\n$$\nwhich violates the hold-time requirement because\n$$\n2\\,\\text{ns}<t_{h}=5\\,\\text{ns}.\n$$\nA hold-time violation implies that the state captured at the falling edge is not guaranteed; the latch’s internal nodes may be disturbed while the storage action is completing. This can lead to an unpredictable outcome, including potential metastability, even though $E$ is low after $t_{f}$. The propagation delay $t_{pd}=2\\,\\text{ns}$ does not eliminate this risk because the hold-time specification already accounts for the necessary post-edge input stability to ensure correct latching.\n\nTherefore, for $t>32\\,\\text{ns}$, due to the hold-time violation, the output $Q$ cannot be guaranteed to remain $0$ or become $1$ deterministically; it may enter an unpredictable or metastable state. The correct choice is C.", "answer": "$$\\boxed{C}$$", "id": "1968400"}]}