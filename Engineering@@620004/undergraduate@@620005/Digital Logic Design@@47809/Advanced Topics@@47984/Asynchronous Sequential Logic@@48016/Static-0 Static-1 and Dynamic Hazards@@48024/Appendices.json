{"hands_on_practices": [{"introduction": "The first step in building reliable digital systems is learning to recognize potential pitfalls. While minimizing a Boolean expression results in a circuit with the fewest gates, it can also create vulnerabilities to timing-related errors known as hazards. This exercise [@problem_id:1964038] challenges you to analyze a minimal sum-of-products (SOP) circuit to identify a specific input transition that causes a static-1 hazard, where the output momentarily drops to 0 when it should remain at 1. By working through it, you'll develop a crucial eye for spotting when adjacent true cells on a Karnaugh map are not covered by a common product term, the classic signature of this type of glitch.", "problem": "A combinational logic circuit is constructed to implement a three-variable Boolean function, $F(A, B, C)$. The function is defined by its sum of minterms as $F(A, B, C) = \\sum m(2, 3, 5, 7)$. The circuit is realized using logic gates that correspond to a minimal sum-of-products (SOP) expression derived for this function.\n\nDue to physical propagation delays within the gates, the circuit is susceptible to logic hazards. Specifically, we are interested in a static-1 hazard, which occurs when a single input variable changes, and the function's output, which should theoretically remain constant at logic 1, momentarily drops to 0.\n\nWhich of the following single-variable input transitions can cause a static-1 hazard in this circuit implementation?\n\nA. The transition between input states $(A,B,C) = (0,1,0)$ and $(A,B,C) = (0,1,1)$.\n\nB. The transition between input states $(A,B,C) = (1,0,1)$ and $(A,B,C) = (1,1,1)$.\n\nC. The transition between input states $(A,B,C) = (0,1,1)$ and $(A,B,C) = (1,1,1)$.\n\nD. The transition between input states $(A,B,C) = (0,0,0)$ and $(A,B,C) = (1,0,0)$.\n\nE. The transition between input states $(A,B,C) = (1,1,0)$ and $(A,B,C) = (1,1,1)$.", "solution": "We are given the three-variable Boolean function in canonical sum-of-minterms form:\n$$\nF(A,B,C)=\\sum m(2,3,5,7).\n$$\nUsing the standard minterm indexing with $(A,B,C)$ as the binary representation of the index, the minterms correspond to:\n$$\nm(2)=\\bar{A}B\\bar{C}, \\quad m(3)=\\bar{A}BC, \\quad m(5)=A\\bar{B}C, \\quad m(7)=ABC.\n$$\nThus the canonical SOP is\n$$\nF=\\bar{A}B\\bar{C}+\\bar{A}BC+A\\bar{B}C+ABC.\n$$\nWe simplify using Boolean algebra by pairing terms that differ only in one literal:\n- Combine $\\bar{A}B\\bar{C}$ and $\\bar{A}BC$:\n$$\n\\bar{A}B\\bar{C}+\\bar{A}BC=\\bar{A}B(\\bar{C}+C)=\\bar{A}B.\n$$\n- Combine $A\\bar{B}C$ and $ABC$:\n$$\nA\\bar{B}C+ABC=AC(\\bar{B}+B)=AC.\n$$\nTherefore the minimal sum-of-products is\n$$\nF=\\bar{A}B+AC.\n$$\n\nA static-1 hazard in an SOP implementation can occur when the function output is theoretically 1 for two input states differing in only one variable, but the two states are covered by different product terms (AND gates). Due to unequal propagation delays, the output of one product term may drop before the other rises during the single-variable transition, causing the OR output to momentarily drop to 0. The consensus theorem identifies a consensus term that would cover such hazards; for $F=\\bar{A}B+AC$, the consensus term is $BC$, since\n$$\n\\text{consensus}(\\bar{A}B,AC)=BC.\n$$\nIts absence indicates a potential static-1 hazard when $A$ toggles with $B=C=1$.\n\nWe now evaluate each option:\n\n- Option A: $(A,B,C)$ transitions from $(0,1,0)$ to $(0,1,1)$. Both minterms $010$ and $011$ are 1 and are covered by the single product $\\bar{A}B$ (which does not depend on $C$). Hence, during this transition the AND gate for $\\bar{A}B$ remains asserted, so no static-1 hazard occurs.\n\n- Option B: $(A,B,C)$ transitions from $(1,0,1)$ to $(1,1,1)$. Both minterms $101$ and $111$ are 1 and are covered by the single product $AC$ (which does not depend on $B$). Hence, no static-1 hazard occurs.\n\n- Option C: $(A,B,C)$ transitions from $(0,1,1)$ to $(1,1,1)$. Both minterms $011$ and $111$ are 1, but $011$ is covered by $\\bar{A}B$ while $111$ is covered by $AC$. These are different product terms, and the consensus term $BC$ is not present in the minimal SOP. With $B=C=1$ held constant while $A$ switches, the output is ideally $F=\\bar{A}+A=1$, but in the two-gate implementation the $\\bar{A}B$ term can fall before the $AC$ term rises (or vice versa), creating a static-1 hazard. Therefore this transition can cause a static-1 hazard.\n\n- Option D: $(A,B,C)$ transitions from $(0,0,0)$ to $(1,0,0)$. Both minterms $000$ and $100$ yield $F=0$, so this is not a static-1 condition and is irrelevant for static-1 hazards.\n\n- Option E: $(A,B,C)$ transitions from $(1,1,0)$ to $(1,1,1)$. The initial state $110$ yields $F=0$ and the final state $111$ yields $F=1$, so the output does not remain at 1 and this is not a static-1 scenario.\n\nTherefore, the only transition that can cause a static-1 hazard in the minimal SOP realization is Option C.", "answer": "$$\\boxed{C}$$", "id": "1964038"}, {"introduction": "Once a potential hazard is identified, the next critical step is to eliminate it. This practice [@problem_id:1963989] demonstrates the standard technique for resolving a static-1 hazard: adding a logically redundant product term to the expression. This so-called \"consensus term\" creates an overlap that bridges the gap between two product terms, ensuring the output remains stable during a critical input transition. This exercise highlights a fundamental principle of robust logic design: a circuit that is theoretically minimal is not always practically optimal, especially in high-reliability applications.", "problem": "A combinational logic circuit is designed to control a safety valve. The circuit's output, $Y$, is determined by three sensor inputs, $A$, $B$, and $C$. The logic function implemented is given by the Boolean expression $Y = AB' + BC$. In this digital system, every logic gate and inverter has a non-zero propagation delay.\n\nConsider a specific operational scenario where the inputs are initially stable at $(A, B, C) = (1, 1, 1)$. Subsequently, the input $B$ transitions from $1$ to $0$, while inputs $A$ and $C$ remain fixed at $1$. Due to the propagation delay of the inverter that generates $B'$, the output $Y$ may briefly and incorrectly fall to $0$ during this transition before returning to its correct steady-state value of $1$. This transient pulse is unacceptable for the safety system.\n\nTo ensure that the output $Y$ remains stable at $1$ throughout this specific input transition, an additional product term can be ORed with the original expression. Which one of the following product terms, when added to the function, will eliminate this unwanted transient behavior?\n\nA. $A'C$\n\nB. $B'C'$\n\nC. $AC$\n\nD. $AB$\n\nE. $A'B'$", "solution": "We start from the given Boolean function $Y=AB' + BC$ with nonzero propagation delays in all gates. The specific transition of interest is from inputs $(A,B,C)=(1,1,1)$ to $(A,B,C)=(1,0,1)$, with $A$ and $C$ held at $1$ while $B$ falls from $1$ to $0$.\n\nStep 1: Evaluate the steady-state values at the endpoints.\n- At $(A,B,C)=(1,1,1)$, the terms are $AB'=1\\cdot 0=0$ and $BC=1\\cdot 1=1$, so $Y=1$.\n- At $(A,B,C)=(1,0,1)$, the terms are $AB'=1\\cdot 1=1$ and $BC=0\\cdot 1=0$, so $Y=1$.\n\nStep 2: Identify the transient hazard due to propagation delay.\nLet the inverter producing $B'$ have a delay. When $B$ transitions from $1$ to $0$, there is an interval immediately after the change where $B=0$ has already propagated to the $BC$ term (making $BC=0$), but $B'$ has not yet risen (so $B'=0$), making $AB'=0$. Consequently, during this interval $Y=0$, which is a static-1 hazard.\n\nStep 3: Determine the redundant (consensus) term that eliminates the hazard.\nUsing the consensus theorem, for terms of the form $xy + y'z$, the consensus term is $xz$, and adding it does not change the steady-state logic function:\n$$\nxy + y'z + xz = xy + y'z.\n$$\nMap $x=A$, $y=B'$, and $z=C$. Then $xy = AB'$ and $y'z = (B')' C = BC$. The consensus term is\n$$\nxz = AC.\n$$\nAdding $AC$ covers the input neighborhood where $A=1$ and $C=1$ regardless of the instantaneous value of $B$ or the state of the inverter output $B'$, thereby preventing the output from dropping during the transition.\n\nStep 4: Verify that $AC$ maintains $Y=1$ throughout the transition.\nWith $A=1$ and $C=1$ held constant, the added term yields $AC=1$ for the entire duration of the transition of $B$. Thus, even when both $AB'$ and $BC$ momentarily evaluate to $0$ due to delay, the output $Y = AB' + BC + AC$ remains $1$.\n\nStep 5: Eliminate incorrect options by evaluation under the given condition $A=1$, $C=1$.\n- $A' C$: evaluates to $0$ when $A=1$, so it does not protect the output.\n- $B' C'$: evaluates to $0$ when $C=1$, so it does not protect the output.\n- $AB$: is $1$ only when $B=1$; it fails immediately after $B$ falls to $0$, so it does not protect the output during the critical interval.\n- $A' B'$: evaluates to $0$ when $A=1$, so it does not protect the output.\n\nTherefore, the correct product term to add is $AC$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1963989"}, {"introduction": "To fully appreciate the impact of hazards, it is essential to move from qualitative identification to quantitative analysis. This problem [@problem_id:1964034] presents a concrete scenario with specified gate propagation delays, allowing you to calculate the precise duration of a static-1 hazard glitch in nanoseconds. By tracing the signal paths and their respective timings, you will see exactly how a race condition between a \"fast\" path and a \"slow\" path creates a transient, incorrect output pulse, solidifying your understanding of hazards as a real-world timing phenomenon.", "problem": "A digital control system uses three binary inputs, $X$, $Y$, and $Z$, to generate a single output signal, $F$. The circuit is implemented using basic logic gates and its behavior is described by the Boolean expression $F = XY + X'Z$. The propagation delays for the logic gates used in the circuit are as follows:\n- NOT gate: $\\tau_{NOT} = 3$ ns\n- 2-input AND gate: $\\tau_{AND} = 2$ ns\n- 2-input OR gate: $\\tau_{OR} = 2$ ns\n\nAssume the circuit has been in a stable state with its inputs $Y$ and $Z$ held constant at logic 1. At time $t=0$, the input $X$ switches from logic 1 to logic 0. Due to the differing propagation delays through the circuit paths, the output $F$ may momentarily deviate from its expected steady-state value, producing a transient pulse.\n\nCalculate the duration of this transient pulse. Express your answer in nanoseconds.", "solution": "Given $F=XY+X'Z$ with $Y=1$ and $Z=1$ held constant, the initial and final steady-state values are:\n- For $t<0$ with $X=1$: $XY=1$, $X'Z=0$, hence $F=1$.\n- For $t\\to\\infty$ after $X$ switches to $0$: $XY=0$, $X'=1$, $X'Z=1$, hence $F=1$.\n\nTherefore, the output exhibits a potential static-1 hazard when $X$ transitions from $1$ to $0$, due to unequal path delays from $X$ to the OR inputs.\n\nDefine the intermediate signals:\n- $A=XY$ (upper AND path),\n- $B=X'Z$ (lower NOT-AND path).\n\nPropagation delays:\n- NOT: $\\tau_{NOT}$,\n- AND: $\\tau_{AND}$,\n- OR: $\\tau_{OR}$.\n\nAt $t=0$, $X$ switches $1\\to 0$. The times at which the OR inputs change are:\n- $A$ falls $1\\to 0$ after the AND delay:\n$$\nt_{A\\downarrow}=\\tau_{AND}.\n$$\n- $B$ rises $0\\to 1$ after the NOT and AND delays in series:\n$$\nt_{B\\uparrow}=\\tau_{NOT}+\\tau_{AND}.\n$$\n\nThus, both OR inputs are $0$ for the interval\n$$\n\\Delta t_{\\text{inputs}}=t_{B\\uparrow}-t_{A\\downarrow}=(\\tau_{NOT}+\\tau_{AND})-\\tau_{AND}=\\tau_{NOT}.\n$$\n\nThe OR output transitions occur after an additional delay $\\tau_{OR}$ from the input changes:\n- Output falls at $t_{fall}=t_{A\\downarrow}+\\tau_{OR}=\\tau_{AND}+\\tau_{OR}$.\n- Output rises at $t_{rise}=t_{B\\uparrow}+\\tau_{OR}=\\tau_{NOT}+\\tau_{AND}+\\tau_{OR}$.\n\nHence, the transient low pulse width at the output is\n$$\nt_{rise}-t_{fall}=(\\tau_{NOT}+\\tau_{AND}+\\tau_{OR})-(\\tau_{AND}+\\tau_{OR})=\\tau_{NOT}.\n$$\n\nSubstituting the given values, $\\tau_{NOT}=3$ ns, yields a pulse duration of $3$ ns. Because $\\Delta t_{\\text{inputs}}=\\tau_{NOT}=3$ ns exceeds $\\tau_{OR}=2$ ns, the OR gate does not filter out this pulse, and it appears at the output with the same width.", "answer": "$$\\boxed{3}$$", "id": "1964034"}]}