{"hands_on_practices": [{"introduction": "The core of analyzing an asynchronous sequential circuit is understanding its state-by-state behavior in response to changing inputs. This first exercise challenges you to trace the complete journey of a circuit through a sequence of input changes. By calculating next states from the given excitation equations and following the transitions until a new stable state is reached, you will build a foundational skill for predicting circuit behavior in the fundamental mode [@problem_id:1911060].", "problem": "A control unit for a micro-positioning stage is modeled as an asynchronous sequential circuit. The circuit has two external inputs, $x_1$ and $x_2$, and two internal state variables, $y_1$ and $y_2$. The behavior of the circuit is governed by the following excitation equations for the next state variables ($Y_1$, $Y_2$):\n\n$$Y_1 = x_1'y_2 + x_2y_1$$\n$$Y_2 = x_1y_1' + x_2'y_2$$\n\nHere, the prime symbol (e.g., $x_1'$) denotes the logical NOT operation. The circuit operates in fundamental mode, which means that inputs are held constant until the circuit reaches a stable state before another input change occurs. A state $(y_1, y_2)$ is defined as stable for a given input $(x_1, x_2)$ if the next state $(Y_1, Y_2)$ is equal to the present state $(y_1, y_2)$.\n\nInitially, the circuit is in the stable state $(y_1, y_2) = (0, 0)$ with inputs held at $(x_1, x_2) = (0, 0)$.\n\nA sequence of two input changes occurs:\n1. First, the input $x_1$ changes from 0 to 1. The circuit is allowed to settle into a new stable state.\n2. After the circuit has stabilized, the input $x_1$ changes back from 1 to 0.\n\nDetermine the final stable state $(y_1, y_2)$ of the circuit after this entire sequence. Express your answer as the binary string $y_1y_2$.", "solution": "The circuit is defined by the excitation equations\n$$Y_{1}=x_{1}'y_{2}+x_{2}y_{1}, \\quad Y_{2}=x_{1}y_{1}'+x_{2}'y_{2}.$$\nA state $(y_{1},y_{2})$ is stable for a given input $(x_{1},x_{2})$ if $Y_{1}=y_{1}$ and $Y_{2}=y_{2}$.\n\nInitially, $(x_{1},x_{2})=(0,0)$ and $(y_{1},y_{2})=(0,0)$. Evaluate stability under $(0,0)$:\n$$Y_{1}=x_{1}'y_{2}+x_{2}y_{1}=1\\cdot 0+0\\cdot 0=0,\\quad Y_{2}=x_{1}y_{1}'+x_{2}'y_{2}=0\\cdot 1+1\\cdot 0=0.$$\nThus $(0,0)$ is stable for $(0,0)$.\n\nFirst input change: set $(x_{1},x_{2})=(1,0)$ and let the circuit settle. For these inputs,\n$$Y_{1}=x_{1}'y_{2}+x_{2}y_{1}=0\\cdot y_{2}+0\\cdot y_{1}=0,\\quad Y_{2}=x_{1}y_{1}'+x_{2}'y_{2}=1\\cdot y_{1}'+1\\cdot y_{2}=y_{1}'+y_{2}.$$\nStability requires $y_{1}=Y_{1}=0$ and $y_{2}=Y_{2}=y_{1}'+y_{2}$. Substituting $y_{1}=0$ gives $y_{2}=1$, so the unique stable state is $(y_{1},y_{2})=(0,1)$. Starting from $(0,0)$, only $y_{2}$ is excited ($Y_{2}=1$ while $y_{2}=0$), so the circuit moves to $(0,1)$ and stabilizes there.\n\nSecond input change: return to $(x_{1},x_{2})=(0,0)$ starting from $(y_{1},y_{2})=(0,1)$. For $(0,0)$,\n$$Y_{1}=x_{1}'y_{2}+x_{2}y_{1}=1\\cdot y_{2}+0\\cdot y_{1}=y_{2},\\quad Y_{2}=x_{1}y_{1}'+x_{2}'y_{2}=0\\cdot y_{1}'+1\\cdot y_{2}=y_{2}.$$\nThe stability conditions are $y_{1}=y_{2}$ and $y_{2}=y_{2}$, so the stable states are those with $y_{1}=y_{2}$, namely $(0,0)$ and $(1,1)$. From the current state $(0,1)$, evaluate excitations: $Y_{1}=1$ and $Y_{2}=1$. Thus $y_{1}$ is excited to change (since $y_{1}=0\\neq Y_{1}=1$) while $y_{2}$ is not (since $y_{2}=1=Y_{2}$). Therefore $y_{1}$ switches to $1$, yielding $(y_{1},y_{2})=(1,1)$. Rechecking, $Y_{1}=y_{2}=1$ and $Y_{2}=y_{2}=1$, so $(1,1)$ is stable.\n\nHence, after the full input sequence, the circuit settles to the final stable state $(y_{1},y_{2})=(1,1)$, i.e., the binary string $y_{1}y_{2}=11$.", "answer": "$$\\boxed{11}$$", "id": "1911060"}, {"introduction": "Real-world circuits are not ideal; physical propagation delays mean that signals don't change instantaneously. This practice explores the concept of a \"race condition,\" which occurs when two or more state variables are required to change simultaneously [@problem_id:1911054]. You will analyze how differing delays create multiple possible transition paths and determine whether they all lead to the same final, stable state, thereby classifying the race.", "problem": "An asynchronous sequential circuit is used as part of a safety interlock system in an automated manufacturing process. The behavior of the circuit is described by a single external input $x$ and two internal state variables, $y_1$ and $y_2$. The next-state equations for the circuit, which dictate the future state $(Y_1, Y_2)$ based on the input $x$ and the present state $(y_1, y_2)$, are given by:\n\n$Y_1 = x$\n$Y_2 = x$\n\nInitially, the system is in a long-held stable state where the input $x$ is $0$ and the state variables $(y_1, y_2)$ are $(0, 0)$. At time $t_0$, the input $x$ instantaneously changes from $0$ to $1$ and remains $1$.\n\nDue to physical variations in the circuit wiring and logic gates, the propagation delay for the state variable $y_1$ is not necessarily equal to that of $y_2$. This means that when both $y_1$ and $y_2$ are required to change, one might change before the other.\n\nIdentify the two possible sequences of present states $(y_1, y_2)$ that the circuit can transition through as it moves from its initial state to its new final stable state, considering the different possible propagation delays.\n\nA. `(0,0) -> (1,0) -> (1,1)`; Path 2: `(0,0) -> (0,1) -> (1,1)`\n\nB. Path 1: `(0,0) -> (1,0)`; Path 2: `(0,0) -> (0,1) -> (1,1)`\n\nC. The circuit will oscillate indefinitely between `(1,0)` and `(0,1)`.\n\nD. There is only one possible path: `(0,0) -> (1,1)` as both variables change simultaneously.\n\nE. Path 1: `(0,0) -> (1,0) -> (1,1)`; Path 2: `(0,0) -> (0,1)`", "solution": "The problem asks for the possible sequences of states $(y_1, y_2)$ an asynchronous circuit transitions through after an input change, considering different propagation delays for the state variables.\n\nThe circuit's next-state equations are:\n$Y_1 = x$\n$Y_2 = x$\n\n**Step 1: Verify the Initial Stable State**\nThe problem states that the circuit is initially stable with input $x = 0$ and present state $(y_1, y_2) = (0, 0)$. We can verify this using the next-state equations.\nFor $x = 0$, the equations become:\n$Y_1 = 0$\n$Y_2 = 0$\nSince the next state $(Y_1, Y_2) = (0, 0)$ is the same as the present state $(y_1, y_2) = (0, 0)$, the state is indeed stable.\n\n**Step 2: Analyze the Effect of the Input Change**\nAt time $t_0$, the input $x$ changes from $0$ to $1$. The circuit is still in the present state $(y_1, y_2) = (0, 0)$. The total state of the system is $(x, y_1, y_2) = (1, 0, 0)$.\nWe calculate the next state $(Y_1, Y_2)$ using the new input $x = 1$:\n$Y_1 = 1$\n$Y_2 = 1$\nThe next state is $(Y_1, Y_2) = (1, 1)$.\n\n**Step 3: Identify the Race Condition**\nThe present state is $(y_1, y_2) = (0, 0)$ and the next state is $(Y_1, Y_2) = (1, 1)$. Since both state variables must change ($y_1: 0 \\to 1$ and $y_2: 0 \\to 1$), a race condition exists. We must analyze the two possible outcomes based on which variable changes first.\n\n**Step 4: Trace Path 1 (Assume $y_1$ changes first)**\nIf $y_1$ has a shorter propagation delay, it will change from $0$ to $1$ before $y_2$ does.\n- The state $(y_1, y_2)$ transitions from $(0, 0)$ to an intermediate state $(1, 0)$.\n- Now, the circuit is in the present state $(y_1, y_2) = (1, 0)$ with the input $x = 1$. The total state is $(x, y_1, y_2) = (1, 1, 0)$. We must calculate the next state from this intermediate point.\n- Using the next-state equations with $x = 1$:\n  $Y_1 = 1$\n  $Y_2 = 1$\n- The next state is $(Y_1, Y_2) = (1, 1)$. The present state is $(1, 0)$. The circuit will now transition from $(1, 0)$ to $(1, 1)$. This is a stable transition as only $y_2$ changes.\n- Once the circuit reaches $(y_1, y_2) = (1, 1)$ with $x=1$, let's check for stability. The next state is $(Y_1, Y_2)=(1, 1)$, which is the same as the present state. So, $(1, 1)$ is the final stable state.\n\nThe sequence of states for Path 1 is: `(0, 0) \\to (1, 0) \\to (1, 1)`.\n\n**Step 5: Trace Path 2 (Assume $y_2$ changes first)**\nIf $y_2$ has a shorter propagation delay, it will change from $0$ to $1$ before $y_1$ does.\n- The state $(y_1, y_2)$ transitions from $(0, 0)$ to an intermediate state $(0, 1)$.\n- Now, the circuit is in the present state $(y_1, y_2) = (0, 1)$ with the input $x = 1$. The total state is $(x, y_1, y_2) = (1, 0, 1)$. We calculate the next state from this point.\n- Using the next-state equations with $x = 1$:\n  $Y_1 = 1$\n  $Y_2 = 1$\n- The next state is $(Y_1, Y_2) = (1, 1)$. The present state is $(0, 1)$. The circuit will now transition from $(0, 1)$ to $(1, 1)$. This is a stable transition as only $y_1$ changes.\n- The circuit reaches $(y_1, y_2) = (1, 1)$, which we already determined is a stable state for $x = 1$.\n\nThe sequence of states for Path 2 is: `(0, 0) \\to (0, 1) \\to (1, 1)`.\n\n**Step 6: Conclusion**\n- Both possible paths, arising from the different propagation delays, lead to the same final stable state $(1, 1)$. This type of race is known as a non-critical race.\n- The two possible sequences of states are:\n  - Path 1: `(0,0) -> (1,0) -> (1,1)`\n  - Path 2: `(0,0) -> (0,1) -> (1,1)`\n- Comparing this result with the given options, we find that it matches option A.", "answer": "$$\\boxed{A}$$", "id": "1911054"}, {"introduction": "After learning to identify race conditions, a key design goal is to prevent them from causing unpredictable behavior. This exercise introduces \"race-free state assignment,\" a fundamental design technique that connects the abstract logic of a flow table to its physical implementation [@problem_id:1911037]. You will determine valid binary encodings for circuit states that ensure transitions are always stable by making them adjacent in the state space.", "problem": "An asynchronous sequential circuit is described by the merged flow table below, which has four states: A, B, C, and D. The circuit has one binary input $x$ and does not produce any output. The states are to be encoded using three state variables, $(y_2, y_1, y_0)$. A partial state assignment has been made: state A is assigned the binary code `000`, and state C is assigned the binary code `011`.\n\n| Present State | Next State, $x=0$ | Next State, $x=1$ |\n| :-----------: | :---------------: | :---------------: |\n|       A       |         A         |         B         |\n|       B       |         C         |         B         |\n|       C       |         C         |         D         |\n|       D       |         A         |         D         |\n\nTo ensure a race-free design, any two states that have a direct transition between them in the flow table must be assigned adjacent binary codes (codes that differ in exactly one bit position). From the list of possible 3-bit binary codes below, identify all valid assignments for state B that satisfy this condition.\n\nA. `001`\n\nB. `110`\n\nC. `100`\n\nD. `010`\n\nE. `111`", "solution": "The race-free requirement states that for every direct transition $S \\to T$ in the flow table, the Hamming distance between their assigned binary codes must be exactly one:\n$$d_{H}(\\text{code}(S),\\text{code}(T))=1.$$\nFrom the flow table, the pairs of distinct states with direct transitions are $(A,B)$, $(B,C)$, $(C,D)$, and $(D,A)$. Given $\\text{code}(A)=000$ and $\\text{code}(C)=011$, any valid $\\text{code}(B)$ must satisfy\n$$d_{H}(\\text{code}(B),000)=1,\\quad d_{H}(\\text{code}(B),011)=1.$$\nThe set of 3-bit codes at Hamming distance one from $000$ is\n$$N(000)=\\{001,010,100\\}.$$\nThe set of 3-bit codes at Hamming distance one from $011$ is\n$$N(011)=\\{111,001,010\\}.$$\nThus the feasible codes for $B$ are in the intersection\n$$N(000)\\cap N(011)=\\{001,010\\}.$$\nChecking the options:\n- $001$: $d_{H}(001,000)=1$ and $d_{H}(001,011)=1$; valid.\n- $110$: $d_{H}(110,000)=2$; invalid.\n- $100$: $d_{H}(100,011)=2$; invalid.\n- $010$: $d_{H}(010,000)=1$ and $d_{H}(010,011)=1$; valid.\n- $111$: $d_{H}(111,000)=3$; invalid.\n\nAdditionally, either choice leaves the other code in $\\{001,010\\}$ available for state $D$, ensuring that $D$ can be assigned a code adjacent to both $A$ and $C$, so the global race-free constraint remains satisfiable.\n\nTherefore, the valid options are A and D.", "answer": "$$\\boxed{AD}$$", "id": "1911037"}]}