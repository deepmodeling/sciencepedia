{"hands_on_practices": [{"introduction": "The flow table serves as the high-level blueprint for an asynchronous circuit's behavior. An essential hazard can be spotted directly within this table by analyzing the transition paths. This exercise trains you to identify scenarios where a single input change initiates a sequence of multiple state transitions before stabilizing, a key indicator of a potential timing failure [@problem_id:1933665].", "problem": "An asynchronous sequential circuit is described by a primitive flow table. The circuit has two inputs, $x_1$ and $x_2$, and four internal states, named S1, S2, S3, and S4. Each state row in the table has exactly one stable state, where the next state is the same as the present state. The behavior is defined by the following next-state transitions:\n\nFor present state S1, whose stable state is at input $x_1x_2=00$:\n- If $x_1x_2=01$, the next state is S2.\n- If $x_1x_2=11$, the next state is S3.\n- If $x_1x_2=10$, the next state is S2.\n\nFor present state S2, whose stable state is at input $x_1x_2=01$:\n- If $x_1x_2=00$, the next state is S1.\n- If $x_1x_2=11$, the next state is S3.\n- If $x_1x_2=10$, the next state is S4.\n\nFor present state S3, whose stable state is at input $x_1x_2=11$:\n- If $x_1x_2=00$, the next state is S1.\n- If $x_1x_2=01$, the next state is S2.\n- If $x_1x_2=10$, the next state is S4.\n\nFor present state S4, whose stable state is at input $x_1x_2=10$:\n- If $x_1x_2=00$, the next state is S1.\n- If $x_1x_2=01$, the next state is S2.\n- If $x_1x_2=11$, the next state is S3.\n\nAn essential hazard is a potential malfunction in an asynchronous circuit caused by propagation delays, where a single input change can lead the circuit to an incorrect final state. Based on the provided flow table, an essential hazard can occur as a result of which one of the following events?\n\nA. Starting in the stable state for row S1, the input variable $x_1$ changes.\n\nB. Starting in the stable state for row S1, the input variable $x_2$ changes.\n\nC. Starting in the stable state for row S2, the input variable $x_1$ changes.\n\nD. Starting in the stable state for row S3, the input variable $x_2$ changes.\n\nE. Starting in the stable state for row S4, the input variable $x_1$ changes.", "solution": "Fundamental-mode asynchronous operation assumes a single input variable changes at a time and, from any stable state, the circuit will traverse the sequence of next states determined by the primitive flow table until it reaches the unique stable state associated with the new input value. Let the mapping from input column to its unique stable row be\n$$\nf(00)=\\text{S1},\\quad f(01)=\\text{S2},\\quad f(11)=\\text{S3},\\quad f(10)=\\text{S4}.\n$$\nFor a given present row $R$ and input $u$, denote the next-state entry in the flow table by $N(R,u)$. A necessary condition to avoid essential hazards for a single input change $u$ from a stable state in row $R$ is the single-step condition\n$$\nN(R,u)=f(u),\n$$\nmeaning the first next state reached after the input change is already the final stable row for that input. If $N(R,u)\\neq f(u)$, the circuit must undergo two or more internal state transitions in response to one input change, and unequal path delays from that input can produce essential hazards.\n\nUsing the given flow table:\n\n- Option A: Start in the stable state for row S1 with input $00$, change $x_1$ so $00 \\to 10$. The final stable row must be $f(10)=\\text{S4}$. From the table, $N(\\text{S1},10)=\\text{S2}\\neq \\text{S4}$, so the trajectory is $\\text{S1} \\to \\text{S2} \\to \\text{S4}$ under the fixed input $10$, requiring two internal transitions. This violates the single-step condition and is susceptible to an essential hazard.\n\n- Option B: Start in S1 at $00$, change $x_2$ so $00 \\to 01$. The final stable row is $f(01)=\\text{S2}$, and $N(\\text{S1},01)=\\text{S2}=f(01)$, so there is a single-step transition with no essential hazard risk.\n\n- Option C: Start in S2 at $01$, change $x_1$ so $01 \\to 11$. The final stable row is $f(11)=\\text{S3}$, and $N(\\text{S2},11)=\\text{S3}=f(11)$, so single-step, no essential hazard.\n\n- Option D: Start in S3 at $11$, change $x_2$ so $11 \\to 10$. The final stable row is $f(10)=\\text{S4}$, and $N(\\text{S3},10)=\\text{S4}=f(10)$, so single-step, no essential hazard.\n\n- Option E: Start in S4 at $10$, change $x_1$ so $10 \\to 00$. The final stable row is $f(00)=\\text{S1}$, and $N(\\text{S4},00)=\\text{S1}=f(00)$, so single-step, no essential hazard.\n\nTherefore, only the event in option A can lead to an essential hazard.", "answer": "$$\\boxed{A}$$", "id": "1933665"}, {"introduction": "Moving from the abstract flow table, we now examine the circuit's behavior through its next-state equations. An essential hazard often arises from a race condition where a state variable must change more than once in response to a single input change. By systematically tracing the state transitions dictated by the Boolean logic, you can pinpoint the exact input change and starting state that creates this hazardous multi-step sequence [@problem_id:1933686].", "problem": "An asynchronous sequential circuit is designed to operate based on a single external input $x$ and two internal state variables, $y_1$ and $y_2$. The next states of these variables, denoted by $Y_1$ and $Y_2$ respectively, are determined by the following Boolean logic equations, where the prime symbol (') denotes the logical NOT operation:\n\n$Y_1 = x'y_1 + xy_2$\n$Y_2 = x'y_2$\n\nAn essential hazard is a potential timing problem in asynchronous circuits where a single change in an input variable initiates a sequence of state changes that may not stabilize in the correct final state due to propagation delays. A necessary condition for an essential hazard to exist for a given input transition is that the transition path in the flow table for that single input change must pass through a total of three or more states.\n\nAnalyze the behavior of this circuit to determine for which single input change, if any, an essential hazard exists.\n\nWhich of the following statements is correct?\n\nA. An essential hazard exists only for the transition $x = 0 \\to 1$.\n\nB. An essential hazard exists only for the transition $x = 1 \\to 0$.\n\nC. Essential hazards exist for both the $x = 0 \\to 1$ and $x = 1 \\to 0$ transitions.\n\nD. The circuit is free of essential hazards.\n\nE. The provided information is insufficient to determine the presence of an essential hazard.", "solution": "Given the asynchronous next-state equations\n$$Y_{1}=x'y_{1}+xy_{2},\\qquad Y_{2}=x'y_{2},$$\na state $(y_{1},y_{2})$ is stable for a fixed input $x$ if and only if $Y_{1}=y_{1}$ and $Y_{2}=y_{2}$. We first determine the stable states for each fixed value of $x$.\n\nFor $x=0$ we have $x'=1$, so\n$$Y_{1}=y_{1},\\qquad Y_{2}=y_{2}.$$\nThus every $(y_{1},y_{2})\\in\\{(0,0),(0,1),(1,0),(1,1)\\}$ is stable when $x=0$.\n\nFor $x=1$ we have $x'=0$, so\n$$Y_{1}=y_{2},\\qquad Y_{2}=0.$$\nStability then requires $y_{2}=0$ and $y_{1}=y_{2}=0$, hence the only stable state for $x=1$ is $(0,0)$.\n\nWe now examine the single-input changes.\n\n1) Transition $x: 1 \\to 0$. The only stable state at $x=1$ is $(y_{1},y_{2})=(0,0)$. After the input changes to $x=0$, the same state remains stable because $Y_{1}=y_{1}$ and $Y_{2}=y_{2}$ for $x=0$. The transition path therefore visits only one state, namely $(0,0)$. Since a necessary condition for an essential hazard is that the path for a single input change pass through three or more states, this transition cannot exhibit an essential hazard.\n\n2) Transition $x: 0 \\to 1$. We must consider each stable starting state at $x=0$:\n- From $(0,0)$: With $x=1$, $Y_{1}=y_{2}=0$ and $Y_{2}=0$, so $(0,0)$ is already stable. The path visits $1$ state.\n- From $(1,0)$: With $x=1$, $Y_{1}=y_{2}=0$ and $Y_{2}=0$, so only $y_{1}$ changes once: $(1,0)\\to(0,0)$. The path visits $2$ states.\n- From $(1,1)$: With $x=1$, $Y_{1}=y_{2}=1$ (so $y_{1}$ holds) and $Y_{2}=0$ (so $y_{2}$ must change), giving $(1,1)\\to(1,0)$, after which $Y_{1}=0$ forces $(1,0)\\to(0,0)$. The path is\n$$ (1,1) \\to (1,0) \\to (0,0), $$\nwhich visits $3$ states. This meets the necessary condition for an essential hazard.\n- From $(0,1)$: With $x=1$, $Y_{1}=y_{2}=1$ and $Y_{2}=0$, so both $y_{1}$ and $y_{2}$ are excited. Depending on relative delays:\n  - If $y_{2}$ switches first: $(0,1)\\to(0,0)$, visiting $2$ states.\n  - If $y_{1}$ switches first: $(0,1) \\to (1,1) \\to (1,0) \\to (0,0)$, visiting $4$ states, which again meets the necessary condition for an essential hazard.\n\nTherefore, for the single-input change $x: 0 \\to 1$, there exist transition paths that pass through three or more states (e.g., from $(1,1)$ or from $(0,1)$ with $y_{1}$ changing before $y_{2}$). Hence an essential hazard can occur for $x: 0 \\to 1$. For $x: 1 \\to 0$, the path never exceeds one state and thus cannot meet the necessary condition.\n\nConsequently, an essential hazard exists only for the transition $x=0\\to 1$.", "answer": "$$\\boxed{A}$$", "id": "1933686"}, {"introduction": "Identifying a hazard is critical, but a designer's job is to eliminate it. This practice shifts our focus from analysis to synthesis, addressing a real-world design problem. The core principle of fixing an essential hazard is to manage signal timing, ensuring the state variable does not update prematurely; this is often achieved by strategically inserting a delay in the feedback path to resolve the critical race [@problem_id:1933669].", "problem": "An asynchronous sequential circuit is designed to control a system based on two external inputs, $x_1$ and $x_2$. The circuit has a single state variable, $y$. The next state of the circuit, denoted by $Y$, is determined by the current state $y$ and the inputs according to the following Boolean logic equation:\n\n$$Y = x_1' y + x_1 x_2$$\n\nHere, $x_1'$ represents the logical complement of $x_1$. The circuit is implemented using fundamental logic gates (AND, OR, NOT), and the output $Y$ is connected back to the input $y$ to form the state-holding loop.\n\nLet's define the key signal paths and nodes in the physical implementation:\n- The term $x_1'$ is generated by a single NOT gate.\n- The term $x_1' y$ is generated by a 2-input AND gate.\n- The term $x_1 x_2$ is generated by another 2-input AND gate.\n- The final output $Y$ is generated by a 2-input OR gate that takes the two AND gate outputs as its inputs.\n- The \"feedback path\" is the connection from the output $Y$ back to the circuit's input terminal for the state variable $y$.\n\nThe system is initially in the stable state where $(x_1, x_2, y) = (1, 1, 1)$. An essential hazard exists in this design. It manifests when the input $x_1$ changes from 1 to 0 while $x_2$ remains constant at 1. This specific race condition can cause the circuit to transition to an incorrect final stable state.\n\nTo resolve this hazard, a single buffer (which introduces a delay) must be inserted at a strategic location in the circuit. The purpose of the buffer is to ensure that the correct state transition occurs by controlling the relative signal timing.\n\nAt which of the following locations should the buffer be placed to eliminate the essential hazard?\n\nA. On the external input line for $x_1$, before it splits to feed the NOT gate and the AND gate for the term $x_1 x_2$.\n\nB. On the external input line for $x_2$.\n\nC. On the feedback path connecting the circuit output $Y$ to the state variable input $y$.\n\nD. On the wire connecting the output of the NOT gate (for $x_1'$) to the input of its corresponding AND gate.\n\nE. On the wire connecting the output of the AND gate for the term $x_1 x_2$ to the input of the final OR gate.", "solution": "Given the asynchronous network with next state\n$$Y=x_{1}'y+x_{1}x_{2},$$\nstart from the stated operating point $(x_{1},x_{2},y)=(1,1,1)$. With $x_{2}=1$ held constant, the Boolean function reduces to\n$$Y=x_{1}'y+x_{1}.$$\nThus:\n- For $x_{1}=1$, $Y=1$ regardless of $y$.\n- For $x_{1}=0$, $Y=y$.\n\nTherefore, under the intended transition $x_1: 1 \\to 0$ with $x_2=1$ and $y=1$, the correct final stable state should remain $y=1$ because with $x_1=0$ we have $Y=y=1$.\n\nNow analyze the hazard mechanism in the implemented gate network. Let the gate delays be:\n- inverter delay $d_{\\text{INV}}$ for generating $x_1'$,\n- AND delay $d_{\\text{A1}}$ for the term $x_1'y$,\n- AND delay $d_{\\text{A2}}$ for the term $x_1x_2$,\n- OR delay $d_{\\text{OR}}$ for forming $Y$.\n\nInitially, with $x_1=1$ and $x_2=1$, the term $x_1x_2$ equals $1$ and the term $x_1'y$ equals $0$, so $Y=1$ is held by the $x_1x_2$ path. When $x_1$ falls $1 \\to 0$, the two OR inputs evolve as follows:\n- The $x_1x_2$ term falls from $1$ to $0$ after a delay $d_{\\text{A2}}$ from the $x_1$ change.\n- The $x_1'y$ term rises from $0$ to $1$ only after the inverter and its AND gate respond, i.e., after a delay $d_{\\text{INV}}+d_{\\text{A1}}$, provided that the $y$ input to that AND remains $1$ during this time.\n\nConsequently, the earliest time the OR output can fall is\n$$ t_{\\downarrow Y} = d_{\\text{A2}} + d_{\\text{OR}}, $$\nand the earliest time it can rise due to the $x_1'y$ path is\n$$ t_{\\uparrow Y} = d_{\\text{INV}} + d_{\\text{A1}} + d_{\\text{OR}}. $$\nIf\n$$ d_{\\text{A2}}  d_{\\text{INV}} + d_{\\text{A1}}, $$\nthen $t_{\\downarrow Y}  t_{\\uparrow Y}$ and there exists an interval during which both OR inputs are $0$, causing a temporary $Y=0$ glitch (a static-1 hazard). Because $Y$ is fed back to the state input $y$, this low can propagate to $y$ before the $x_1'y$ path has risen. Once $y$ falls to $0$, the product $x_1'y$ will remain $0$ even after $x_1'$ becomes $1$, so $Y$ stays at $0$ and the circuit incorrectly settles in the wrong stable state $y=0$ for $x_1=0$. This is the essential hazard described.\n\nTo eliminate the essential hazard with a single buffer, the fix must ensure that $y$ does not change to $0$ before the network completes the handoff from the $x_1x_2$ path to the $x_1'y$ path. Insert a buffer of delay $d_{\\text{buf}}$ in the feedback path $Y \\to y$. Then the state input seen by the $x_1'y$ AND gate remains at its previous value for at least $d_{\\text{buf}}$, so during any temporary dip of $Y$ the input $y$ used in the $x_1'y$ term is still $1$, allowing that term to rise. The requirement for avoiding the wrong capture is\n$$ d_{\\text{buf}} > (t_{\\uparrow Y} - t_{\\downarrow Y}) = (d_{\\text{INV}} + d_{\\text{A1}} + d_{\\text{OR}}) - (d_{\\text{A2}} + d_{\\text{OR}}) = d_{\\text{INV}} + d_{\\text{A1}} - d_{\\text{A2}}. $$\nWith this placement, even if $Y$ momentarily goes low, that low does not reach $y$ before the $x_1'y$ path asserts $1$ and restores $Y=1$, so the state remains correct and the circuit settles to $y=1$ as intended.\n\nEvaluate the options:\n- A delays both branches driven by $x_1$ equally and does not change the relative ordering between the falling $x_1x_2$ term and the rising $x_1'y$ term; the hazard persists.\n- B delays $x_2$, which does not change during the hazardous transition; it is ineffective.\n- C delays the feedback $Y \\to y$, preventing the premature drop of $y$ during the transient and eliminating the essential hazard as shown.\n- D delays the $x_1'$ path, making the rising path slower and worsening the hazard.\n- E delays only the $x_1x_2$ output, which can be tuned to make the falling path slower; while this can prevent the temporary gap at the OR inputs for this specific transition, the standard and robust essential-hazard fix in asynchronous sequential circuits is to delay the feedback so that state cannot change before the combinational network settles.\n\nTherefore, the buffer should be placed on the feedback path $Y \\to y$.", "answer": "$$\\boxed{C}$$", "id": "1933669"}]}