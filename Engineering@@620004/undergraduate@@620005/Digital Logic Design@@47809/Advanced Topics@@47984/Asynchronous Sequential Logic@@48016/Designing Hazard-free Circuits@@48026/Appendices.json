{"hands_on_practices": [{"introduction": "While creating the most compact, or \"minimal,\" circuit is often a primary goal in digital design, it can sometimes introduce subtle timing flaws known as \"hazards.\" This first exercise guides you through the process of identifying and correcting a classic static-1 hazard in a Sum-of-Products (SOP) circuit. By adding a carefully chosen redundant term, you will learn how to make an otherwise vulnerable circuit robust and reliable. [@problem_id:1929345]", "problem": "In the design of a control system for a high-precision manufacturing process, a digital logic circuit is used to manage a safety interlock. The output of this circuit, denoted by the function $F$, must remain at a steady logic 1 to keep the interlock engaged during critical operational phases. The circuit's behavior is determined by three binary sensor inputs, $A$, $B$, and $C$.\n\nAn engineer has implemented the circuit based on the following minimal Sum-of-Products (SOP) expression:\n$$F(A,B,C) = A'B' + BC$$\nDuring testing, a critical flaw was discovered. For a specific transition where only one input variable changes its state, the output $F$ momentarily drops to logic 0 before returning to logic 1. This \"glitch,\" known as a static-1 hazard, could erroneously disengage the safety interlock, posing a significant risk.\n\nTo rectify this design flaw, your task is to make the circuit robust against this static-1 hazard by adding a single redundant product term to the SOP expression. This modification is equivalent to adding one AND gate to the circuit and feeding its output into the final OR gate. What is the Boolean expression for this required redundant product term?", "solution": "We are given the minimal SOP realization\n$$F(A,B,C)=A'B' + BC.$$\nA static-1 hazard in an SOP implementation arises when two adjacent 1-cells on a K-map are covered by different product terms. During a transition of the single variable that differs between these cells, one path may turn off before the other turns on, momentarily producing 0. The standard remedy is to add a consensus (redundant) product term which covers this adjacency.\n\nThe two product terms are $A'B'$ and $BC$. The hazardous transition involves the variable $B$, which appears as $B$ in one term and $B'$ in the other. To find the consensus term, we remove the toggling variable ($B$ and $B'$) from each term and multiply the remaining literals:\n- The remaining literal from $A'B'$ is $A'$.\n- The remaining literal from $BC$ is $C$.\n- Hence, the consensus (redundant) term is $A'C$.\n\nThis term covers the adjacent 1-cells where $A=0$ and $C=1$ while $B$ toggles, thereby preventing the static-1 hazard. Adding it yields the hazard-free expression:\n$$F_{\\text{hazard-free}}=A'B' + BC + A'C$$\nThis expression is functionally equivalent to the original (by the consensus theorem: $XY + X'Z + YZ = XY + X'Z$), but removes the hazard.\n\nTherefore, the required single redundant product term is $A'C$.", "answer": "$$\\boxed{A'C}$$", "id": "1929345"}, {"introduction": "Static hazards are not exclusive to SOP circuits; their dual, the static-0 hazard, can appear in Product-of-Sums (POS) implementations. This practice shifts our focus from the \"on-states\" of a function to its \"off-states.\" You will derive a hazard-free POS circuit, learning how to ensure the output remains stable at logic 0 during critical input transitions. [@problem_id:1929362]", "problem": "A 4-variable Boolean function, denoted as $F(W, X, Y, Z)$, is specified by the set of minterms for which the function's output is 1. This set of minterms is given by $\\sum m(4, 5, 6, 7, 10, 11, 14, 15)$.\n\nYour task is to find a two-level logic circuit implementation for this function that is guaranteed to be free from all static hazards. The final implementation must be expressed as a simplified Boolean expression in the Product-of-Sums (POS) form. Use `W, X, Y, Z` for the variables, `+` for logical OR, juxtaposition for logical AND, and a prime (`'`) for logical NOT.", "solution": "We are given the 4-variable Boolean function $F(W,X,Y,Z)$ by the minterms $m(4,5,6,7,10,11,14,15)$. Writing each minterm in binary as $(W,X,Y,Z)$ with $W$ as the most significant bit:\n- $m4$ to $m7$ are $(0,1,0,0)$, $(0,1,0,1)$, $(0,1,1,0)$, $(0,1,1,1)$, i.e., $W=0$, $X=1$, any $Y,Z$.\n- $m10,m11,m14,m15$ are $(1,0,1,0)$, $(1,0,1,1)$, $(1,1,1,0)$, $(1,1,1,1)$, i.e., $W=1$, $Y=1$, any $X,Z$.\n\nFrom this observation, a minimal SOP is obtained directly:\n$$F = W'X + WY.$$\nTo obtain a minimal POS, we can use the distributive law:\n$$F = W'X + WY = (W + X)(W' + Y).$$\nThis expression is the minimal POS form. To ensure freedom from all static hazards in a two-level POS realization, we must eliminate static-0 hazards. In POS, static-0 hazards can occur when two adjacent zeros are not covered by a common sum term. The zeros of $F$ are the remaining minterms: $\\{0,1,2,3,8,9,12,13\\}$.\n\nThe two sum terms correspond to zero-groupings:\n- $W + X = 0$ when $W=0$, $X=0$. This covers minterms $m0, m1, m2, m3$.\n- $W' + Y = 0$ when $W=1$, $Y=0$. This covers minterms $m8, m9, m12, m13$.\n\nWe examine adjacent zero pairs that lie in different groups. The adjacencies between these groups occur when $W$ toggles while $X=0, Y=0$.\n- $(m0,m8)$: $(0,0,0,0)$ is adjacent to $(1,0,0,0)$.\n- $(m1,m9)$: $(0,0,0,1)$ is adjacent to $(1,0,0,1)$.\n\nTo cover these hazardous transitions, we must add a redundant sum term. The consensus term that covers both of these adjacencies corresponds to the common literals that define the hazardous condition: $X=0$ and $Y=0$. This gives the redundant sum term $(X + Y)$.\n\nTherefore, a two-level hazard-free POS realization is:\n$$F = (W + X)(W' + Y)(X + Y).$$\nThe two-level POS implementation does not exhibit static-1 hazards, so this expression is free from all static hazards. The added term $(X+Y)$ does not change the function's value, as it is logically redundant ($AB+A'C = (A+B)(A'+C)(B+C)$). This can be verified by noting that for any of the original 1-minterms, $(X+Y)$ evaluates to 1.", "answer": "$$\\boxed{(W+X)(W'+Y)(X+Y)}$$", "id": "1929362"}, {"introduction": "Is a minimal circuit ever inherently hazard-free? This final problem challenges you to act as a design verification engineer, analyzing both the minimal SOP and POS forms of a given function. This comparative analysis is crucial for understanding the trade-offs between circuit complexity and operational reliability, a core tenet of robust digital system design. [@problem_id:1929312]", "problem": "In the design of a control system for a high-precision chemical etching process, a Boolean function $F$ determines when to activate a critical safety valve. The function depends on four digital sensor inputs: $A$ (pressure), $B$ (temperature), $C$ (flow rate), and $D$ (concentration). An erroneous momentary deactivation of the valve (a glitch) could ruin the material being processed. To minimize cost, the control logic should be implemented using the minimal number of gates.\n\nThe function is defined by the set of minterms for which the valve should be active (output $F=1$):\n$$F(A,B,C,D) = \\sum m(0,1,5,7,8,10,14,15)$$\n\nTwo common minimal two-level implementations are the minimal Sum-of-Products (SOP) form and the minimal Product-of-Sums (POS) form. Your task is to analyze these two minimal forms for the given function to determine if they are inherently free of static hazards. A static hazard is a condition where a single input variable change can cause a momentary, unwanted change in the output.\n\nWhich of the following statements is correct regarding the minimal implementations of the function $F$?\n\nA. The minimal SOP implementation is free of static hazards, but the minimal POS implementation is not.\nB. The minimal POS implementation is free of static hazards, but the minimal SOP implementation is not.\nC. Both the minimal SOP and minimal POS implementations are free of static hazards.\nD. Neither the minimal SOP nor the minimal POS implementation is free of static hazards.", "solution": "We are given the 4-variable Boolean function\n$$F(A,B,C,D)=\\sum m(0,1,5,7,8,10,14,15).$$\nWe first derive minimal two-level forms (SOP and POS), then assess static-hazard freedom.\n\n**Minimal SOP derivation:**\nWe can group the 1-minterms on a K-map. All 1s can only be grouped into pairs. To cover all eight minterms, we need at least four pairs. A possible minimal SOP cover is:\n$$F=A'B'C' + A'BD + AB'D' + ABC.$$\nThis cover uses four product terms and covers all specified minterms.\n\n**Static-1 hazard check for the minimal SOP:**\nA static-1 hazard is possible if a pair of adjacent 1-minterms is not covered by a single product term. Let's examine the adjacency between minterm 0 ($0000$) and minterm 8 ($1000$), where only variable $A$ changes.\n- At minterm 0 ($A=0,B=0,C=0,D=0$), the only satisfied product term is $A'B'C'$.\n- At minterm 8 ($A=1,B=0,C=0,D=0$), the only satisfied product term is $AB'D'$.\nSince no single product term covers both minterm 0 and minterm 8, a static-1 hazard can occur during the transition of $A$ when $B=0, C=0, D=0$. Therefore, the minimal SOP implementation is not free of static hazards.\n\n**Minimal POS derivation:**\nFirst, we find the minimal SOP for the complement function, $F'$. The 0-minterms of $F$ are $\\{2,3,4,6,9,11,12,13\\}$. Grouping these 0-minterms on a K-map gives the minimal SOP for $F'$:\n$$F' = A'B'C + A'BD' + AB'D + ABC'$$\nApplying DeMorgan's theorem to $F'$ gives the minimal POS for $F$:\n$$F = (A+B+C')(A+B'+D)(A'+B+D')(A'+B'+C)$$\n\n**Static-0 hazard check for the minimal POS:**\nA static-0 hazard is possible if a pair of adjacent 0-minterms is not covered by a single sum term. Let's examine the adjacency between minterm 3 ($0011$) and minterm 11 ($1011$), where only variable $A$ changes.\n- At minterm 3 ($A=0,B=0,C=1,D=1$), the term $(A+B+C')$ evaluates to $(0+0+0)=0$, which forces $F=0$.\n- At minterm 11 ($A=1,B=0,C=1,D=1$), the term $(A'+B+D')$ evaluates to $(0+0+0)=0$, which forces $F=0$.\nSince no single sum term in the minimal POS expression is 0 for both minterm 3 and minterm 11, a static-0 hazard can occur during the transition of $A$ when $B=0, C=1, D=1$. Therefore, the minimal POS implementation is not free of static hazards.\n\n**Conclusion:**\n- The minimal SOP implementation is not free of static-1 hazards.\n- The minimal POS implementation is not free of static-0 hazards.\nTherefore, neither minimal implementation is inherently free of static hazards. The correct choice is D.", "answer": "$$\\boxed{D}$$", "id": "1929312"}]}