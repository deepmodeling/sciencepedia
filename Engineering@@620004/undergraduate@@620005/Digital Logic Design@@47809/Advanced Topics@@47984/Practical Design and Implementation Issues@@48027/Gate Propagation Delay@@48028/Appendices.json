{"hands_on_practices": [{"introduction": "The speed of a digital circuit is fundamentally limited by the time it takes for signals to travel through its logic gates. To analyze a circuit's performance, we must calculate the propagation delay along specific signal paths. This first exercise [@problem_id:1939407] provides a foundational practice in determining the delay from a single input change to the final output, a crucial skill for identifying a circuit's critical path and maximum operating frequency.", "problem": "In the design of a specialized high-speed data path arbiter, a critical control signal $F$ is generated based on four inputs: $A$, $B$, $C$, and $D$. The logical relationship is defined by the Boolean expression $F = (A+B) \\cdot (C+D)$. The circuit is implemented using a network of standard two-input logic gates. Based on the technology library being used, the propagation delay for any two-input OR gate is $t_{p,\\text{OR}} = 1.35$ nanoseconds (ns), and the propagation delay for any two-input AND gate is $t_{p,\\text{AND}} = 0.95$ ns.\n\nFor a correct timing analysis, it is essential to determine the time it takes for a change in an input to affect the final output. Calculate the total propagation delay, in nanoseconds (ns), from the moment input signal $B$ changes its state to the moment the output $F$ is guaranteed to be stable and reflect this change.", "solution": "We are given the Boolean function $F=(A+B)\\cdot(C+D)$ implemented with two-input gates. Let the intermediate nodes be defined as $X=A+B$ (two-input OR) and $Y=C+D$ (two-input OR), with the final output $F=X\\cdot Y$ (two-input AND).\n\nA propagation delay from an input to the output is the sum of gate delays along a sensitized path from that input to the output. For a change at input $B$ to affect $F$, the path is\n$$B \\rightarrow X=A+B \\rightarrow F=X\\cdot Y.$$\nThis path traverses one OR gate and then one AND gate.\n\nFor the change at $B$ to be reflected at $F$, the other input of the AND gate must be at the non-controlling value. Since the controlling value for AND is $0$, we require $Y=C+D=1$ held stable during the transition; this sensitizes the path so that changes in $X$ propagate to $F$.\n\nTherefore, the total propagation delay from $B$ to $F$ is the sum of the propagation delays of the OR gate generating $X$ and the AND gate generating $F$:\n$$t_{B\\to F}=t_{p,\\text{OR}}+t_{p,\\text{AND}}.$$\nSubstituting the given values,\n$$t_{B\\to F}=1.35+0.95=2.30.$$\nThe required unit is nanoseconds, so the numerical value is $2.30$.", "answer": "$$\\boxed{2.30}$$", "id": "1939407"}, {"introduction": "While calculating the delay of a single path is essential, real circuits often have multiple paths from an input to an output. When these paths have different delays, the circuit can produce temporary, unwanted output pulses known as glitches or hazards. This exercise [@problem_id:1939414] demonstrates how to analyze a standard logic configuration and calculate the duration of a static hazard, revealing how timing imperfections can undermine logically correct designs.", "problem": "A digital logic circuit is designed to implement the Boolean function $F(A, B, C) = AB + \\bar{A}C$. The circuit is constructed using a standard two-level Sum-of-Products architecture: the complement $\\bar{A}$ is generated by a single NOT gate fed by input $A$. The outputs of two separate 2-input AND gates compute the product terms ($AB$ and $\\bar{A}C$), and their outputs are then fed into a single 2-input OR gate to produce the final output $F$.\n\nThe propagation delays for the gates are given as:\n- NOT gate: $t_{p,\\text{NOT}} = 2.1 \\text{ ns}$\n- 2-input AND gate: $t_{p,\\text{AND}} = 3.5 \\text{ ns}$\n- 2-input OR gate: $t_{p,\\text{OR}} = 4.2 \\text{ ns}$\n\nConsider a scenario where the inputs $B$ and $C$ are held stable at logic '1'. At time $t=0$, the input $A$ transitions from logic '1' to logic '0'. Due to the differing propagation delays along the signal paths, a temporary, unwanted pulse, known as a static hazard or glitch, appears at the output $F$.\n\nCalculate the time duration of this glitch. Express your final answer in nanoseconds (ns), rounded to two significant figures.", "solution": "We analyze the two signal paths from input $A$ to the OR gate with $B=1$ and $C=1$ held constant. Let the gate propagation delays be denoted symbolically by $t_{\\text{NOT}}$, $t_{\\text{AND}}$, and $t_{\\text{OR}}$.\n\nBefore $t=0$, $A=1$, so $AB=1$ and $\\bar{A}C=0$, hence $F=1$. At $t=0$, $A$ transitions $1 \\to 0$.\n\nPath 1 (term $AB$): The input $A$ directly drives a 2-input AND with $B=1$. The product $AB$ transitions $1 \\to 0$ at the OR input after the AND delay\n$$\nt_{AB,\\text{OR-in}}=t_{\\text{AND}}.\n$$\nIncluding the OR gate, the corresponding falling transition at the output $F$ would occur at\n$$\nt_{\\text{fall at }F}=t_{\\text{AND}}+t_{\\text{OR}}.\n$$\n\nPath 2 (term $\\bar{A}C$): The input $A$ first passes through the NOT gate, so $\\bar{A}$ becomes $1$ after $t_{\\text{NOT}}$, and then the 2-input AND with $C=1$ produces $\\bar{A}C$ transitioning $0 \\to 1$ at the OR input after an additional $t_{\\text{AND}}$:\n$$\nt_{\\bar{A}C,\\text{OR-in}}=t_{\\text{NOT}}+t_{\\text{AND}}.\n$$\nIncluding the OR gate, the corresponding rising transition at the output $F$ would occur at\n$$\nt_{\\text{rise at }F}=t_{\\text{NOT}}+t_{\\text{AND}}+t_{\\text{OR}}.\n$$\n\nBetween the times $t_{\\text{AND}}$ and $t_{\\text{NOT}}+t_{\\text{AND}}$, both product terms at the OR inputs are $0$, so the logical OR value at its input is $0$ over the interval\n$$\n\\Delta t_{\\text{OR-in}}=\\left(t_{\\text{NOT}}+t_{\\text{AND}}\\right)-t_{\\text{AND}}=t_{\\text{NOT}}.\n$$\nThe OR gate adds the same delay $t_{\\text{OR}}$ to both the falling and rising transitions, which shifts the glitch in time but does not change its duration. Therefore, the output glitch width at $F$ is\n$$\n\\Delta t=t_{\\text{NOT}}.\n$$\n\nSubstituting the given numerical value $t_{\\text{NOT}}=2.1\\ \\text{ns}$ and rounding to two significant figures yields\n$$\n\\Delta t=2.1\\ \\text{ns}.\n$$", "answer": "$$\\boxed{2.1}$$", "id": "1939414"}, {"introduction": "Moving beyond simple analysis, a key task for a digital designer is to optimize a circuit for maximum speed. This involves more than just choosing fast gates; it requires strategically sizing each gate in a logic path to minimize the total delay. This advanced practice [@problem_id:1939378] introduces the powerful method of logical effort, a systematic approach to optimizing complex, branching logic paths to achieve the highest possible performance.", "problem": "An engineer is tasked with optimizing a critical logic path within a high-performance microprocessor. The path begins at the input of a 3-input NAND gate, which has an input capacitance of $C_{in} = 9 C_{inv}$, where $C_{inv}$ is the input capacitance of a minimum-sized reference inverter. The output of this NAND gate (G1) drives two separate logic branches, A and B.\n\n- Branch A consists of a 2-input NOR gate (G2) followed by a standard inverter (G3). The output of G3 drives a load with capacitance $C_{L,A} = 50 C_{inv}$.\n- Branch B consists of a 2-input NAND gate (G4) followed by a standard inverter (G5). The output of G5 drives a load with capacitance $C_{L,B} = 150 C_{inv}$.\n\nThe goal is to size the gates (G1, G2, G3, G4, G5) to minimize the overall propagation delay of the network from the input of G1 to the final loads. The delay of the network is determined by its slowest path.\n\nTo perform this optimization using the method of logical effort, you are given the following parameters:\n- The logical effort, $g$, for each gate type is:\n  - Inverter: $g_{inv} = 1$\n  - 2-input NAND: $g_{NAND2} = 4/3$\n  - 3-input NAND: $g_{NAND3} = 5/3$\n  - 2-input NOR: $g_{NOR2} = 5/3$\n- The parasitic delay, $p$, of any gate (inverter, NAND, or NOR) is assumed to be equal to that of a reference inverter, so $p_{gate} = p_{inv} = 1.0$.\n\nCalculate the minimum possible delay for this network. Express your answer as a dimensionless total delay factor, rounded to three significant figures.", "solution": "Use logical effort with branching. Let the input capacitance at the path start be $C_{0}=9C_{inv}$. Let $x=C_{in,2}$ and $y=C_{in,4}$ denote the input capacitances (in units of $C_{inv}$) of $G2$ and $G4$, respectively. The first stage $G1$ (a 3-input NAND) sees a total load $x+y$; its delay on either path is\n$$\nd_{1} \\;=\\; g_{1}\\,\\frac{x+y}{C_{0}} \\;+\\; p_{1},\n$$\nwith $g_{1}=g_{NAND3}=\\frac{5}{3}$ and $p_{1}=1$.\n\nEach branch after the split is a two-stage path. For branch A (through $G2$ then $G3$), the product of logical efforts is $G_{23,A}=g_{NOR2}\\cdot g_{inv}=\\frac{5}{3}\\cdot 1=\\frac{5}{3}$, the parasitic sum is $P_{23,A}=1+1=2$, and the subpath electrical effort is $H_{A,\\text{sub}}=C_{L,A}/x$. The minimum delay of a two-stage path with equal stage efforts is\n$$\nA(x) \\;=\\; 2\\sqrt{G_{23,A}\\,H_{A,\\text{sub}}} \\;+\\; P_{23,A}\n\\;=\\; 2\\sqrt{\\frac{5}{3}\\,\\frac{C_{L,A}}{x}} \\;+\\; 2.\n$$\nSimilarly, for branch B (through $G4$ then $G5$), with $G_{23,B}=g_{NAND2}\\cdot g_{inv}=\\frac{4}{3}\\cdot 1=\\frac{4}{3}$ and $P_{23,B}=2$, the minimum two-stage delay is\n$$\nB(y) \\;=\\; 2\\sqrt{G_{23,B}\\,H_{B,\\text{sub}}} \\;+\\; P_{23,B}\n\\;=\\; 2\\sqrt{\\frac{4}{3}\\,\\frac{C_{L,B}}{y}} \\;+\\; 2.\n$$\n\nThe total delays of the two paths are\n$$\nD_{A}(x,y) \\;=\\; g_{1}\\frac{x+y}{C_{0}} + p_{1} + A(x), \n\\qquad\nD_{B}(x,y) \\;=\\; g_{1}\\frac{x+y}{C_{0}} + p_{1} + B(y).\n$$\nWe must minimize $\\max\\{D_{A},D_{B}\\}$. Since the shared term $g_{1}(x+y)/C_{0}+p_{1}$ is common, the optimum occurs when $A(x)=B(y)=T$, and we then minimize\n$$\nD \\;=\\; p_{1} \\;+\\; \\frac{g_{1}}{C_{0}}\\bigl(x+y\\bigr) \\;+\\; T\n$$\nsubject to $A(x)=T$ and $B(y)=T$. Define\n$$\na_{A} \\;=\\; 2\\sqrt{G_{23,A}\\,C_{L,A}}, \\qquad\na_{B} \\;=\\; 2\\sqrt{G_{23,B}\\,C_{L,B}}.\n$$\nFrom $A(x)=T$ and $B(y)=T$ we obtain\n$$\nx(T) \\;=\\; \\left(\\frac{a_{A}}{T-2}\\right)^{2}, \n\\qquad\ny(T) \\;=\\; \\left(\\frac{a_{B}}{T-2}\\right)^{2}.\n$$\nHence\n$$\nD(T) \\;=\\; p_{1} \\;+\\; \\frac{g_{1}}{C_{0}}\\,\\frac{a_{A}^{2}+a_{B}^{2}}{(T-2)^{2}} \\;+\\; T.\n$$\nMinimize over $T>2$ by setting $\\frac{dD}{dT}=0$:\n$$\n\\frac{dD}{dT} \\;=\\; 1 \\;-\\; 2\\,\\frac{g_{1}}{C_{0}}\\,\\frac{a_{A}^{2}+a_{B}^{2}}{(T-2)^{3}} \\;=\\; 0\n\\;\\;\\Rightarrow\\;\\;\n(T-2)^{3} \\;=\\; \\frac{2g_{1}}{C_{0}}\\,(a_{A}^{2}+a_{B}^{2}).\n$$\nLet $S_{0}=T-2$. Using this relation, the minimized delay simplifies to\n$$\nD_{\\min} \\;=\\; p_{1} + 2 + \\frac{3}{2}\\,S_{0},\n\\qquad\n\\text{with}\\;\\;\nS_{0} \\;=\\; \\left(\\frac{2g_{1}}{C_{0}}\\,(a_{A}^{2}+a_{B}^{2})\\right)^{\\frac{1}{3}}.\n$$\n\nSubstitute the given numerical parameters (in units of $C_{inv}$): $C_{0}=9$, $C_{L,A}=50$, $C_{L,B}=150$, $g_{1}=\\frac{5}{3}$, $G_{23,A}=\\frac{5}{3}$, $G_{23,B}=\\frac{4}{3}$, $p_{1}=1$. Compute\n$$\na_{A}^{2} \\;=\\; 4\\,G_{23,A}\\,C_{L,A} \\;=\\; 4\\cdot \\frac{5}{3}\\cdot 50 \\;=\\; \\frac{1000}{3},\n\\qquad\na_{B}^{2} \\;=\\; 4\\,G_{23,B}\\,C_{L,B} \\;=\\; 4\\cdot \\frac{4}{3}\\cdot 150 \\;=\\; 800,\n$$\nso\n$$\na_{A}^{2}+a_{B}^{2} \\;=\\; \\frac{3400}{3},\n\\qquad\nS_{0} \\;=\\; \\left(\\frac{2\\cdot \\frac{5}{3}}{9}\\cdot \\frac{3400}{3}\\right)^{\\frac{1}{3}} \\;=\\; \\left(\\frac{34000}{81}\\right)^{\\frac{1}{3}} \\approx 7.487.\n$$\nTherefore,\n$$\nD_{\\min} \\;=\\; 1 + 2 + \\frac{3}{2}\\cdot 7.487 \\;\\approx\\; 14.231,\n$$\nwhich, as a dimensionless delay factor, rounded to three significant figures, is $14.2$.", "answer": "$$\\boxed{14.2}$$", "id": "1939378"}]}