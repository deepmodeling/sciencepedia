{"hands_on_practices": [{"introduction": "In digital design, a common misconception is that faster is always better. This exercise demonstrates a core principle of static timing analysis: for a circuit to function reliably, the combinational logic delay must exist within a specific \"safe\" window. Logic that is too slow violates the setup time, while logic that is too fast can cause a hold time violation. This practice will guide you in calculating this permissible delay range, solidifying your understanding of how setup and hold constraints work together to govern circuit timing. [@problem_id:1963715]", "problem": "An engineering team is designing a custom Application-Specific Integrated Circuit (ASIC) for the Inertial Measurement Unit (IMU) of a high-performance quadcopter. A critical data path in this design consists of a launch register, a block of combinational logic, and a capture register. This path is crucial for processing sensor data in real-time. For the circuit to function correctly, it must satisfy timing constraints without any setup or hold violations.\n\nThe entire circuit is driven by an ideal clock network, meaning there is zero clock skew between the launch and capture registers. The clock has a fixed period of $T_{clk}$. The registers, modeled as D-type flip-flops, are all from the same standard cell library and share the following characteristics: a clock-to-Q delay of $t_{cq}$, a setup time requirement of $t_{su}$, and a hold time requirement of $t_h$. The delay of the combinational logic block is denoted by $t_{comb}$.\n\nThe specific timing parameters for the technology node being used are:\n- Clock period, $T_{clk} = 2000 \\text{ ps}$\n- Clock-to-Q delay, $t_{cq} = 80 \\text{ ps}$\n- Setup time, $t_{su} = 110 \\text{ ps}$\n- Hold time, $t_h = 95 \\text{ ps}$\n\nTo ensure reliable operation, the combinational logic delay $t_{comb}$ must fall within a specific permissible range $[t_{comb, min}, t_{comb, max}]$. Determine the numerical values for the minimum and maximum permissible delay of the combinational logic block.\n\nExpress your final answer as a pair of numerical values for $t_{comb, min}$ and $t_{comb, max}$, in that order. The values must be in units of picoseconds (ps).", "solution": "The timing constraints for a synchronous path from a launch register through combinational logic to a capture register with zero clock skew are the setup-time constraint and the hold-time constraint.\n\nFor the setup constraint, the data launched at a clock edge must arrive at the capture register and satisfy setup time before the next clock edge. With zero skew, this gives:\n$$\nt_{cq} + t_{comb} + t_{su} \\leq T_{clk}.\n$$\nSolving for $t_{comb}$ yields the maximum permissible combinational delay:\n$$\nt_{comb,\\,max} = T_{clk} - t_{cq} - t_{su}.\n$$\n\nFor the hold constraint, the newly launched data must not arrive too early at the capture register input relative to the same clock edge. With zero skew, this gives:\n$$\nt_{cq} + t_{comb} \\geq t_{h}.\n$$\nSolving for $t_{comb}$ yields the minimum permissible combinational delay:\n$$\nt_{comb,\\,min} = t_{h} - t_{cq}.\n$$\n\nSubstituting the given numerical values $T_{clk} = 2000\\,\\text{ps}$, $t_{cq} = 80\\,\\text{ps}$, $t_{su} = 110\\,\\text{ps}$, and $t_{h} = 95\\,\\text{ps}$:\n$$\nt_{comb,\\,max} = 2000 - 80 - 110 = 1810\\,\\text{ps},\n$$\n$$\nt_{comb,\\,min} = 95 - 80 = 15\\,\\text{ps}.\n$$\n\nTherefore, the permissible range for the combinational logic delay is $[15\\,\\text{ps}, 1810\\,\\text{ps}]$.", "answer": "$$\\boxed{\\begin{pmatrix} 15 & 1810 \\end{pmatrix}}$$", "id": "1963715"}, {"introduction": "A primary goal of timing analysis is to determine the maximum performance of a digital circuit, which is governed by the \"critical path\"—the slowest path that limits the clock speed. This exercise challenges you to calculate the maximum operating frequency for a given path, taking into account not only gate and register delays but also the real-world effect of clock skew. Mastering this calculation is fundamental to designing high-speed digital systems. [@problem_id:1963736]", "problem": "In digital circuit design, Static Timing Analysis (STA) is a critical process for verifying that a circuit meets its timing constraints without actually simulating the input vectors. A key task in STA is to determine the maximum operating frequency.\n\nConsider a synchronous digital circuit path between two positive-edge-triggered registers, Register A (the source) and Register B (the destination). Both registers are driven by the same clock source. The data output from Register A propagates through a combinational logic block before reaching the data input of Register B. This combinational block consists of a 2-input AND gate, whose output feeds into a 3-input OR gate, which in turn drives an inverter that connects to the data input of Register B.\n\nThe timing parameters for the circuit elements are given as follows:\n- Register Clock-to-Q delay ($t_{cq}$): 0.7 ns\n- Register Setup time ($t_{su}$): 1.1 ns\n- Register Hold time ($t_{h}$): 0.5 ns\n- Propagation delay of the 2-input AND gate ($t_{AND2}$): 0.6 ns\n- Propagation delay of the 3-input OR gate ($t_{OR3}$): 0.8 ns\n- Propagation delay of the Inverter ($t_{INV}$): 0.3 ns\n\nDue to routing differences on the silicon, there is a clock skew ($t_{skew}$) between the registers. The clock signal arrives at Register B 0.2 ns later than it arrives at Register A.\n\nCalculate the maximum possible clock frequency for this circuit path to operate correctly. Express your answer in Megahertz (MHz), rounded to three significant figures.", "solution": "We analyze the single synchronous path from Register A (launch) through combinational logic to Register B (capture), with both triggered on the same clock edge and a positive capture skew. The relevant timing constraints are the setup-time constraint for maximum clock frequency and the hold-time constraint for correctness.\n\nFirst, compute the total combinational propagation delay from the output of Register A to the input of Register B. The logic is a 2-input AND gate feeding a 3-input OR gate feeding an inverter. Define the combinational path delay as\n$$\nt_{\\text{pd,comb}}=t_{\\text{AND2}}+t_{\\text{OR3}}+t_{\\text{INV}}.\n$$\nSubstituting the given values,\n$$\nt_{\\text{pd,comb}}=0.6\\ \\text{ns}+0.8\\ \\text{ns}+0.3\\ \\text{ns}=1.7\\ \\text{ns}.\n$$\n\nFor setup timing with clock skew, the required clock period satisfies\n$$\nT_{\\text{clk}}\\geq t_{cq}+t_{\\text{pd,comb}}+t_{su}-t_{\\text{skew}},\n$$\nwhere $t_{\\text{skew}}$ is taken positive when the capture clock (at Register B) arrives later than the launch clock (at Register A), which relaxes the setup requirement. With $t_{cq}=0.7\\ \\text{ns}$, $t_{\\text{pd,comb}}=1.7\\ \\text{ns}$, $t_{su}=1.1\\ \\text{ns}$, and $t_{\\text{skew}}=0.2\\ \\text{ns}$,\n$$\nT_{\\text{clk}}\\geq 0.7+1.7+1.1-0.2=3.3\\ \\text{ns}.\n$$\nTherefore, the minimum clock period is $T_{\\min}=3.3\\ \\text{ns}$, and the maximum clock frequency is\n$$\nf_{\\max}=\\frac{1}{T_{\\min}}=\\frac{1}{3.3\\ \\text{ns}}=0.30303\\ldots\\ \\text{GHz}=303.03\\ldots\\ \\text{MHz}.\n$$\nRounded to three significant figures, $f_{\\max}=303\\ \\text{MHz}$.\n\nFor completeness, verify that the hold constraint is not violated. The hold-time requirement with skew is\n$$\nt_{cq,\\min}+t_{\\text{cd,comb}} \\geq t_{h} + t_{\\text{skew}}.\n$$\nWith the given data, the earliest data arrival time ($t_{cq,\\min}+t_{\\text{cd,comb}}$) is at least $t_{cq} = 0.7\\ \\text{ns}$, assuming non-negative combinational delay. The required hold time ($t_h + t_{skew}$) is $0.5\\ \\text{ns} + 0.2\\ \\text{ns} = 0.7\\ \\text{ns}$. Since $0.7\\ \\text{ns} \\geq 0.7\\ \\text{ns}$, the constraint is met. Hence, hold timing is met and does not limit the frequency. The maximum operating frequency is therefore set by the setup constraint computed above.", "answer": "$$\\boxed{303}$$", "id": "1963736"}, {"introduction": "While setup violations limit a circuit's maximum speed, hold violations represent a more fundamental functional failure that must be fixed regardless of the clock frequency. These \"fast path\" problems occur when data changes too quickly at a register's input. This practical exercise simulates a common scenario where a hold violation is detected and requires you to calculate the minimum amount of delay that must be added—typically using buffer cells—to make the circuit work correctly. [@problem_id:1963767]", "problem": "A digital design engineer is performing Static Timing Analysis (STA) on a synchronous data path within a Field-Programmable Gate Array (FPGA). The path consists of a source D-type flip-flop (FF1), a block of combinational logic, and a destination D-type flip-flop (FF2). Both flip-flops are positive-edge-triggered and are driven by the same ideal system clock, meaning there is zero clock skew between them.\n\nThe timing characteristics for the components in the path are as follows:\n- System clock period ($T_{clk}$): 1.0 ns\n- Clock-to-Q delay of FF1 ($T_{c \\to q}$): has a minimum value of 120 ps and a maximum value of 200 ps.\n- Propagation delay of the combinational logic ($T_{logic}$): has a minimum value of 80 ps and a maximum value of 150 ps.\n- Setup time requirement of FF2 ($T_{su}$): 150 ps.\n- Hold time requirement of FF2 ($T_{h}$): 250 ps.\n\nThe engineer's analysis correctly identifies a hold time violation in this path. To fix this issue, special non-inverting buffer cells will be inserted into the combinational logic block to add delay. What is the minimum amount of delay that must be added to the data path to ensure the hold time requirement is met? Express your answer in picoseconds (ps).", "solution": "The goal is to determine the minimum delay to add to the data path to resolve a hold time violation.\n\nFirst, let's understand the hold time constraint in a synchronous digital circuit. The hold time ($T_h$) of a flip-flop is the minimum amount of time that the data input (D) must be held stable *after* the active clock edge arrives. A violation occurs if the data from the previous state, launched by the same clock edge at the source flip-flop, travels through the combinational logic so quickly that it overwrites the input of the destination flip-flop before the hold time has passed. This is known as a \"fast path\" problem.\n\nTherefore, the hold time analysis must use the minimum possible delays for the data path. The earliest time the data can arrive at the input of the destination flip-flop (FF2) is the sum of the minimum clock-to-Q delay of the source flip-flop (FF1) and the minimum propagation delay of the interconnecting combinational logic.\n\nLet $T_{arrival, min}$ be the earliest data arrival time at FF2's input.\n$$T_{arrival, min} = T_{c \\to q, min} + T_{logic, min}$$\nFrom the problem statement, we have:\n$T_{c \\to q, min} = 120 \\text{ ps}$\n$T_{logic, min} = 80 \\text{ ps}$\n\nSubstituting these values:\n$$T_{arrival, min} = 120 \\text{ ps} + 80 \\text{ ps} = 200 \\text{ ps}$$\n\nThe hold time constraint requires that this earliest arrival time must be greater than or equal to the hold time requirement of FF2 ($T_h$).\nThe hold slack ($S_h$) is the difference between the actual arrival time and the required arrival time for the hold condition.\n$$S_h = T_{arrival, min} - T_h$$\nThe hold time requirement for FF2 is given as $T_h = 250 \\text{ ps}$.\n$$S_h = 200 \\text{ ps} - 250 \\text{ ps} = -50 \\text{ ps}$$\nA negative hold slack indicates a violation. The magnitude of the slack, 50 ps, signifies that the data path is 50 ps too fast. The data is changing at FF2's input 50 ps before it is allowed to.\n\nTo fix this violation, we must add delay to the data path, for example, by inserting buffers. Let the minimum required added delay be $T_{add}$. The new minimum arrival time, $T'_{arrival, min}$, will be:\n$$T'_{arrival, min} = T_{arrival, min} + T_{add}$$\nTo satisfy the hold constraint, the new hold slack must be greater than or equal to zero. To find the minimum added delay, we set the new slack to exactly zero.\n$$S'_{h} = T'_{arrival, min} - T_h = 0$$\n$$(T_{arrival, min} + T_{add}) - T_h = 0$$\nSolving for $T_{add}$:\n$$T_{add} = T_h - T_{arrival, min}$$\nSubstituting the known values:\n$$T_{add} = 250 \\text{ ps} - 200 \\text{ ps} = 50 \\text{ ps}$$\nAlternatively, the minimum added delay must be equal to the magnitude of the negative slack:\n$$T_{add} = |S_h| = |-50 \\text{ ps}| = 50 \\text{ ps}$$\nTherefore, a minimum of 50 ps of delay must be added to the data path to fix the hold time violation. The other parameters ($T_{clk}$, maximum delays, and $T_{su}$) are relevant for setup time analysis, not hold time analysis, and are not used in this calculation.", "answer": "$$\\boxed{50}$$", "id": "1963767"}]}