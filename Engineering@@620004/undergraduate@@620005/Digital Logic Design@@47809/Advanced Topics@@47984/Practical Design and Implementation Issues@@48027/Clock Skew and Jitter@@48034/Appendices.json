{"hands_on_practices": [{"introduction": "In synchronous circuit design, ensuring data arrives at the right time is paramount. This first exercise guides you through a complete timing analysis of a basic register-to-register path, accounting for all standard delays. By calculating the full range of acceptable clock skew, you will gain a practical understanding of the fundamental trade-off between satisfying setup and hold time constraints and see how skew can both help and hinder reliable operation. [@problem_id:1921187]", "problem": "In a synchronous digital circuit, a source flip-flop (FF1) and a destination flip-flop (FF2) are both triggered by the rising edge of the same clock signal. The output of FF1 is connected to the input of FF2 through a block of combinational logic.\n\nThe timing parameters of the circuit components are as follows:\n- Clock period, $T_{period}$: 1000 ps\n- Clock-to-Q delay of FF1, $t_{c-q}$: 60 ps\n- Setup time of FF2, $t_{setup}$: 70 ps\n- Hold time of FF2, $t_{hold}$: 50 ps\n- The propagation delay of the combinational logic block, $t_{logic}$, has a minimum value of $t_{logic,min} = 200$ ps and a maximum value of $t_{logic,max} = 800$ ps.\n\nThe clock skew, $t_{skew}$, is defined as the arrival time of the clock at FF2 minus the arrival time of the clock at FF1 ($t_{skew} = t_{clk2} - t_{clk1}$). For the circuit to function correctly, both setup and hold time constraints for FF2 must be satisfied. Calculate the maximum allowable value for the clock skew, $t_{skew}$. Express your answer in picoseconds (ps).", "solution": "Let the rising clock edge arrive at FF1 at time $t_{clk1}=0$. With skew defined as $t_{skew}=t_{clk2}-t_{clk1}$, the rising edge arrives at FF2 at time $t_{clk2}=t_{skew}$, and the next rising edge at FF2 arrives at $T_{period}+t_{skew}$.\n\nSetup-time constraint (capture on the next edge): the data launched by FF1 at $t=0$ arrives at the FF2 input at\n$$\nt_{arr,setup}=t_{c-q}+t_{logic,max}.\n$$\nFor setup, it must arrive no later than $T_{period}+t_{skew}-t_{setup}$:\n$$\nt_{c-q}+t_{logic,max} \\leq T_{period}+t_{skew}-t_{setup}.\n$$\nRearranging gives the lower bound on skew:\n$$\nt_{skew} \\geq t_{c-q}+t_{logic,max}+t_{setup}-T_{period}.\n$$\nSubstituting the given values,\n$$\nt_{skew} \\geq 60+800+70-1000=-70 \\text{ ps}.\n$$\n\nHold-time constraint (same edge): the earliest new data arrival at FF2 input is\n$$\nt_{arr,hold}=t_{c-q}+t_{logic,min}.\n$$\nFor hold, this must not violate the requirement that FF2’s input remains stable until $t_{skew}+t_{hold}$:\n$$\nt_{c-q}+t_{logic,min} \\geq t_{skew}+t_{hold}.\n$$\nRearranging gives the upper bound on skew:\n$$\nt_{skew} \\leq t_{c-q}+t_{logic,min}-t_{hold}.\n$$\nSubstituting the given values,\n$$\nt_{skew} \\leq 60+200-50=210 \\text{ ps}.\n$$\n\nBoth constraints must hold simultaneously, so the allowable skew range is\n$$\n-70 \\text{ ps} \\leq t_{skew} \\leq 210 \\text{ ps}.\n$$\nTherefore, the maximum allowable value of $t_{skew}$ is $210$ ps.", "answer": "$$\\boxed{210}$$", "id": "1921187"}, {"introduction": "While often viewed as a parasitic effect to be minimized, clock skew can also be a powerful design tool. This problem presents a scenario where a circuit has an inherent hold time violation even with zero skew, a situation that cannot be fixed simply by slowing down the clock. Your task is to apply your knowledge of timing constraints to diagnose this issue and determine the precise amount of *negative* skew needed to make the circuit functional, demonstrating the concept of 'useful skew'. [@problem_id:1921176]", "problem": "A digital synchronous pipeline is being designed. Consider a single path between two consecutive stages, which consists of a launching flip-flop (FF1), a block of combinational logic, and a capturing flip-flop (FF2). The same clock signal is distributed to both flip-flops.\n\nThe timing characteristics of the flip-flops and the logic are as follows:\n- Clock-to-Q delay of the flip-flops, $t_{c-q} = 0.3$ ns.\n- Setup time requirement for the flip-flops, $t_{setup} = 0.5$ ns.\n- Hold time requirement for the flip-flops, $t_{hold} = 0.6$ ns.\n- Maximum propagation delay of the combinational logic (long path), $t_{logic,max} = 3.0$ ns.\n- Minimum contamination delay of the combinational logic (short path), $t_{logic,min} = 0.2$ ns.\n\nThe clock skew, $t_{skew}$, is defined as the difference in clock signal arrival times between the two flip-flops: $t_{skew} = t_{clk2} - t_{clk1}$, where $t_{clk1}$ and $t_{clk2}$ are the arrival times at FF1 and FF2, respectively. The initial design assumes an ideal clock distribution with zero skew ($t_{skew} = 0$).\n\nAn initial timing analysis reveals\nthat this design contains a timing violation that prevents correct operation, regardless of the clock frequency chosen. To fix this issue, the designer must adjust the clock path routing to introduce a non-zero skew. Assuming all other timing parameters cannot be changed, what is the maximum allowable value for the clock skew, $t_{skew}$, that ensures the circuit operates without this violation?\n\nExpress your final answer in nanoseconds (ns). Round your final answer to two significant figures.", "solution": "Let the rising clock edge at FF1 occur at time $t=0$, and the corresponding clock edge at FF2 occur at $t=t_{skew}$, where $t_{skew}=t_{clk2}-t_{clk1}$.\n\nThe earliest time the launched data can appear at FF2’s input is\n$$\nt_{\\text{arrive, min}}=t_{c-q}+t_{logic,min}.\n$$\nTo satisfy the hold requirement at FF2, the new data must not arrive before the end of the hold window after FF2’s clock edge. Thus the hold constraint is\n$$\nt_{c-q}+t_{logic,min} \\ge t_{skew}+t_{hold},\n$$\nwhich rearranges to\n$$\nt_{skew} \\le t_{c-q}+t_{logic,min}-t_{hold}.\n$$\nSubstituting the given values,\n$$\nt_{skew} \\le 0.3+0.2-0.6=-0.1 \\text{ ns}.\n$$\nTherefore, with the initial design $t_{skew}=0$, the inequality is violated (since $0>-0.1$), creating a hold-time violation that cannot be fixed by changing the clock period. To eliminate this violation, the designer must introduce negative skew so that the largest (maximum) allowable value of $t_{skew}$ that still satisfies the hold constraint is\n$$\nt_{skew,\\max}=-0.1 \\text{ ns}.\n$$\nFor completeness, the setup constraint is\n$$\nT_{clk} \\ge t_{c-q}+t_{logic,max}+t_{setup}-t_{skew},\n$$\nwhich remains satisfiable for sufficiently large $T_{clk}$ when $t_{skew}=-0.1 \\text{ ns}$. Hence the limiting condition for feasibility is the hold constraint above, and the required maximum skew value is $-0.1 \\text{ ns}$.\n\nRounding to two significant figures gives $-0.10$ ns.", "answer": "$$\\boxed{-0.10}$$", "id": "1921176"}, {"introduction": "Beyond the deterministic timing shifts of skew, high-speed circuits are also affected by jitter—the random, period-to-period variation in clock edge arrival. This practice shifts our focus to the statistical nature of timing uncertainty by modeling a clock distribution network as a chain of buffers. By analyzing how the random jitter from each component combines, you will derive a crucial formula for total accumulated jitter, offering insight into why managing jitter is critical in large, complex chips. [@problem_id:1921181]", "problem": "In the design of a modern high-performance System-on-Chip (SoC), a critical challenge is distributing a stable clock signal across the entire die. This is often accomplished using a clock distribution network composed of a series of buffers.\n\nConsider a simplified model of such a network where a primary clock source signal is passed through a long, straight chain of $N$ identical, non-inverting clock buffers to reach a distant processing core. The clock source itself is not perfect and exhibits timing jitter, which can be modeled as a random variable with a mean of zero and a variance of $\\sigma_{src}^2$.\n\nFurthermore, each buffer in the chain introduces its own random timing jitter as the signal propagates through it. For any given buffer, this added jitter is a random variable with a mean of zero and a variance of $\\sigma_{buf}^2$. The jitter introduced by the source and by each of the $N$ buffers are all mutually statistically independent.\n\nDetermine the analytical expression for the total accumulated jitter variance, denoted as $\\sigma_{total}^2$, at the output of the final ($N$-th) buffer in the chain. Your expression should be in terms of $N$, $\\sigma_{src}^2$, and $\\sigma_{buf}^2$.", "solution": "Let the source jitter be the random variable $X_{src}$ with $\\mathbb{E}[X_{src}]=0$ and $\\operatorname{Var}(X_{src})=\\sigma_{src}^{2}$. For the $k$-th buffer, let the added jitter be $J_{k}$ with $\\mathbb{E}[J_{k}]=0$ and $\\operatorname{Var}(J_{k})=\\sigma_{buf}^{2}$ for all $k \\in \\{1,\\dots,N\\}$. By assumption, $X_{src},J_{1},\\dots,J_{N}$ are mutually independent.\n\nModel the output jitter after $N$ buffers as the sum of the source jitter and the independent jitter contributions of each buffer:\n$$\nX_{out} \\;=\\; X_{src} \\;+\\; \\sum_{k=1}^{N} J_{k}.\n$$\nUsing linearity of expectation and the given zero means, the mean of $X_{out}$ is\n$$\n\\mathbb{E}[X_{out}] \\;=\\; \\mathbb{E}[X_{src}] \\;+\\; \\sum_{k=1}^{N} \\mathbb{E}[J_{k}] \\;=\\; 0.\n$$\nUsing additivity of variance for independent random variables,\n$$\n\\operatorname{Var}(X_{out}) \\;=\\; \\operatorname{Var}(X_{src}) \\;+\\; \\sum_{k=1}^{N} \\operatorname{Var}(J_{k}) \\;=\\; \\sigma_{src}^{2} \\;+\\; N\\,\\sigma_{buf}^{2}.\n$$\nTherefore, the total accumulated jitter variance at the output of the $N$-th buffer is\n$$\n\\sigma_{total}^{2} \\;=\\; \\sigma_{src}^{2} \\;+\\; N\\,\\sigma_{buf}^{2}.\n$$", "answer": "$$\\boxed{\\sigma_{src}^{2}+N\\sigma_{buf}^{2}}$$", "id": "1921181"}]}