{"hands_on_practices": [{"introduction": "The most direct way to combat switch bounce is often with a simple hardware filter. This exercise explores the design of a Resistor-Capacitor (RC) low-pass filter, a fundamental circuit that uses a capacitor to absorb the rapid voltage fluctuations from a bouncing switch. By calculating the required capacitance, you will apply the core concept of the RC time constant, $\\tau = RC$, to ensure the filter's response is slow enough to ignore the noisy bounce period but fast enough for a good user experience [@problem_id:1926770].", "problem": "An electronics enthusiast is building a custom arcade joystick. The push-buttons used are mechanical and exhibit a phenomenon known as \"contact bounce,\" where activating the switch causes its electrical contacts to rebound several times before settling into a stable closed state. This creates a noisy signal that can be misinterpreted by the joystick's digital controller as multiple rapid button presses.\n\nTo solve this, a simple hardware debouncing circuit is implemented for each button. The circuit consists of a pull-up resistor and a capacitor, forming a Resistor-Capacitor (RC) low-pass filter. The pull-up resistor has a resistance of $R = 10.0 \\text{ k}\\Omega$. The switch manufacturer's datasheet specifies that the contact bounce duration, $t_{bounce}$, will not exceed $5.0 \\text{ ms}$. A reliable engineering guideline for this type of filter is to set its time constant, $\\tau$, to be at least three times the maximum bounce duration to ensure the voltage fluctuations are adequately smoothed out for the digital logic.\n\nCalculate the minimum capacitance $C$ required to build this debouncing circuit according to the specified guideline. Express your answer in microfarads ($\\mu\\text{F}$), rounded to three significant figures.", "solution": "The RC debouncer time constant is defined by the physical relation $\\tau = R C$. The design guideline requires the time constant to be at least three times the maximum bounce duration:\n$$\n\\tau \\geq 3\\,t_{\\text{bounce}}.\n$$\nCombining these gives the required capacitance:\n$$\nC \\geq \\frac{3\\,t_{\\text{bounce}}}{R}.\n$$\nSubstitute the given values in SI units, $t_{\\text{bounce}} = 5.0 \\times 10^{-3}\\ \\text{s}$ and $R = 10.0 \\times 10^{3}\\ \\Omega$:\n$$\nC_{\\min} = \\frac{3 \\times 5.0 \\times 10^{-3}}{10.0 \\times 10^{3}}\\ \\text{F} = \\frac{15.0 \\times 10^{-3}}{10.0 \\times 10^{3}}\\ \\text{F} = 1.5 \\times 10^{-6}\\ \\text{F}.\n$$\nConverting to microfarads, $1.5 \\times 10^{-6}\\ \\text{F} = 1.50\\ \\mu\\text{F}$, rounded to three significant figures.", "answer": "$$\\boxed{1.50}$$", "id": "1926770"}, {"introduction": "Moving from analog hardware to the digital domain, another powerful debouncing technique involves sampling the switch's state over time. This exercise demonstrates the principle of a synchronous debouncer, which uses a system clock to periodically check the input and validate a state change only after it remains stable for several consecutive samples. You will determine the minimum number of stable samples required, directly linking a physical parameter ($t_{\\text{bounce}}$) to the digital logic's timing parameters, a foundational skill in embedded systems and FPGA design [@problem_id:1926805].", "problem": "In the design of a digital interface for a consumer electronics device, a mechanical push-button is used as a primary input. Mechanical switches are known to exhibit a phenomenon called \"contact bounce,\" where the physical contacts rebound against each other for a short period upon being pressed or released, causing a series of rapid, spurious electrical signal transitions. To filter out this noise and prevent multiple false inputs from a single button press, a synchronous debouncing circuit is implemented.\n\nThis circuit samples the state of the switch at each rising edge of a stable system clock. A state change is only considered valid if the input signal remains at a new, stable logic level for a minimum number of consecutive clock cycles.\n\nGiven that the system clock has a frequency of $f_{clk} = 1 \\text{ kHz}$ and the specific model of push-button used has a maximum specified contact bounce time of $t_{bounce} = 10 \\text{ ms}$, determine the minimum integer number of consecutive stable samples, $N$, that the debouncing circuit must register to reliably validate a new switch state.", "solution": "Let the system clock period be $T_{clk} = \\frac{1}{f_{clk}}$. If the circuit requires $N$ consecutive stable samples to validate a new state, the time elapsed between the first and the $N$-th confirming sample is $(N-1)T_{clk}$ (since there are $N-1$ inter-sample intervals between $N$ samples). To guarantee that validation cannot occur before the bounce interval has fully elapsed, we require that this elapsed time be at least the maximum bounce time:\n$$\n(N-1)T_{clk} \\ge t_{bounce}.\n$$\nSolving for $N$ gives\n$$\nN \\ge 1 + \\frac{t_{bounce}}{T_{clk}} = 1 + t_{bounce} f_{clk}.\n$$\nThus, the minimum integer satisfying the requirement is\n$$\nN = \\left\\lceil 1 + t_{bounce} f_{clk} \\right\\rceil.\n$$\nWith $f_{clk} = 1 \\times 10^{3}$ and $t_{bounce} = 10 \\times 10^{-3}$,\n$$\nt_{bounce} f_{clk} = 10 \\quad \\Rightarrow \\quad N = \\left\\lceil 1 + 10 \\right\\rceil = 11.\n$$", "answer": "$$\\boxed{11}$$", "id": "1926805"}, {"introduction": "Real-world engineering often involves solving multiple problems at once. This practice examines an SR-latch debouncer, a classic circuit that uses feedback to eliminate bounce, but introduces a new challenge: ensuring the circuit powers up into a predictable state. You will analyze how an auxiliary RC network can solve this power-on reset issue while still satisfying the primary debouncing and system responsiveness requirements, offering insight into the multi-constraint design trade-offs that engineers face [@problem_id:1926808].", "problem": "A digital logic system uses a cross-coupled NAND gate SR-latch to debounce the signal from a Single-Pole Double-Throw (SPDT) mechanical switch. The latch is constructed from two standard 2-input NAND gates. The two switch terminals are connected to the two inputs of the latch, which are labeled S' and R'. In this configuration, when the switch pole is connected to the S' terminal, the S' input is grounded (0V), and the R' input is pulled high to the supply voltage, $V_{cc}$, through a resistor.\n\nA common issue with this simple design is that upon initial system power-up, if the switch is in a state where neither S' nor R' is grounded, both inputs can be pulled high. This can lead to a metastable or indeterminate state in the latch. To resolve this, a modification is proposed: A Resistor-Capacitor (RC) network is added to the S' input. Specifically, a capacitor of capacitance $C$ is connected between the S' input and ground, and a pull-up resistor of resistance $R$ connects the S' input to $V_{cc}$. The R' input is connected to $V_{cc}$ via a separate, identical pull-up resistor, also of resistance $R$.\n\nThis modification must satisfy three design criteria:\n1.  **Power-On Reset (POR):** To guarantee a predictable state at startup, the voltage at the S' input must be held at or below the maximum logic-low input voltage, $V_{IL(max)}$, for a minimum duration of $T_{POR}$ after the system's power $V_{cc}$ is applied.\n2.  **Debouncing:** When the switch moves to connect the S' terminal, it can physically bounce. To prevent false logic transitions, the time it takes for the S' input voltage to rise from 0V to the minimum logic-high input voltage, $V_{IH(min)}$, must be greater than the maximum possible switch bounce duration, $T_{bounce}$.\n3.  **Responsiveness:** To ensure the system is not sluggish, the time it takes for the S' input voltage to rise from 0V to $V_{IH(min)}$ must not exceed a maximum allowed response time, $T_{response}$.\n\nThese three criteria define a valid range of values for the resistance $R$, such that $R_{min} < R < R_{max}$. Given the following system parameters, calculate the geometric mean, $\\sqrt{R_{min}R_{max}}$, of this valid resistance range.\n\nSystem Parameters:\n- Supply Voltage, $V_{cc} = 5.0$ V\n- Logic-Low Maximum Input Voltage, $V_{IL(max)} = 1.5$ V\n- Logic-High Minimum Input voltage, $V_{IH(min)} = 3.5$ V\n- Capacitance, $C = 100$ nF\n- Minimum Power-On Reset Time, $T_{POR} = 500$ μs\n- Maximum Switch Bounce Duration, $T_{bounce} = 10.0$ ms\n- Maximum Response Time, $T_{response} = 80.0$ ms\n\nExpress your final answer for the geometric mean of the resistance in kilohms (kΩ), rounded to three significant figures.", "solution": "The S' input node is a standard RC charge-up from 0 toward $V_{cc}$ through $R$ with $C$ to ground. For a step $V_{cc}$ applied at $t=0$, the node voltage is\n$$\nV_{S'}(t)=V_{cc}\\left(1-\\exp\\left(-\\frac{t}{RC}\\right)\\right).\n$$\nSolving for the time to reach a given threshold $V_{T}$,\n$$\nt(V_{T})=-RC\\,\\ln\\!\\left(1-\\frac{V_{T}}{V_{cc}}\\right).\n$$\n\nThe three criteria translate into bounds on $R$:\n\n1) Power-On Reset: keep $V_{S'}\\leq V_{IL(max)}$ for at least $T_{POR}$,\n$$\nt(V_{IL(max)})\\geq T_{POR}\\;\\Rightarrow\\;R\\geq \\frac{T_{POR}}{C\\left[-\\ln\\!\\left(1-\\frac{V_{IL(max)}}{V_{cc}}\\right)\\right]}\\equiv R_{1}.\n$$\n\n2) Debouncing: ensure $t(V_{IH(min)})>T_{bounce}$,\n$$\nt(V_{IH(min)})\\geq T_{bounce}\\;\\Rightarrow\\;R\\geq \\frac{T_{bounce}}{C\\left[-\\ln\\!\\left(1-\\frac{V_{IH(min)}}{V_{cc}}\\right)\\right]}\\equiv R_{2}.\n$$\n\n3) Responsiveness: ensure $t(V_{IH(min)})\\leq T_{response}$,\n$$\nt(V_{IH(min)})\\leq T_{response}\\;\\Rightarrow\\;R\\leq \\frac{T_{response}}{C\\left[-\\ln\\!\\left(1-\\frac{V_{IH(min)}}{V_{cc}}\\right)\\right]}\\equiv R_{3}.\n$$\n\nThus the valid range is $R_{min}=\\max(R_{1},R_{2})$ and $R_{max}=R_{3}$, so the geometric mean is\n$$\n\\sqrt{R_{min}R_{max}}=\n\\begin{cases}\n\\sqrt{R_{2}R_{3}}, & \\text{if }R_{2}\\geq R_{1},\\\\[4pt]\n\\sqrt{R_{1}R_{3}}, & \\text{otherwise.}\n\\end{cases}\n$$\n\nCompute the constants:\n$$\n-\\ln\\!\\left(1-\\frac{V_{IL(max)}}{V_{cc}}\\right)=-\\ln(0.7)=0.3566749439,\n$$\n$$\n-\\ln\\!\\left(1-\\frac{V_{IH(min)}}{V_{cc}}\\right)=-\\ln(0.3)=1.203972804.\n$$\nWith $C=100\\times 10^{-9}\\ \\text{F}$, $T_{POR}=500\\times 10^{-6}\\ \\text{s}$, $T_{bounce}=10.0\\times 10^{-3}\\ \\text{s}$, $T_{response}=80.0\\times 10^{-3}\\ \\text{s}$, we get\n$$\nR_{1}=\\frac{500\\times 10^{-6}}{(100\\times 10^{-9})(0.3566749439)}\\approx 1.40185\\times 10^{4}\\ \\Omega=14.0185\\ \\text{k}\\Omega,\n$$\n$$\nR_{2}=\\frac{10.0\\times 10^{-3}}{(100\\times 10^{-9})(1.203972804)}\\approx 8.30583\\times 10^{4}\\ \\Omega=83.0583\\ \\text{k}\\Omega,\n$$\n$$\nR_{3}=\\frac{80.0\\times 10^{-3}}{(100\\times 10^{-9})(1.203972804)}\\approx 6.64467\\times 10^{5}\\ \\Omega=664.467\\ \\text{k}\\Omega.\n$$\nSince $R_{2}>R_{1}$, we have $R_{min}=R_{2}$ and $R_{max}=R_{3}$. Therefore,\n$$\n\\sqrt{R_{min}R_{max}}=\\sqrt{R_{2}R_{3}}=\\frac{\\sqrt{T_{bounce}T_{response}}}{C\\left[-\\ln\\!\\left(1-\\frac{V_{IH(min)}}{V_{cc}}\\right)\\right]}.\n$$\nNumerically,\n$$\n\\sqrt{T_{bounce}T_{response}}=\\sqrt{(10.0\\times 10^{-3})(80.0\\times 10^{-3})}=\\sqrt{8.0\\times 10^{-4}}=2.828427125\\times 10^{-2}\\ \\text{s},\n$$\nso\n$$\n\\sqrt{R_{min}R_{max}}=\\frac{2.828427125\\times 10^{-2}}{(100\\times 10^{-9})(1.203972804)}\\ \\Omega\\approx 2.34925\\times 10^{5}\\ \\Omega=234.925\\ \\text{k}\\Omega.\n$$\nRounded to three significant figures in kilohms, this is $235$.", "answer": "$$\\boxed{235}$$", "id": "1926808"}]}