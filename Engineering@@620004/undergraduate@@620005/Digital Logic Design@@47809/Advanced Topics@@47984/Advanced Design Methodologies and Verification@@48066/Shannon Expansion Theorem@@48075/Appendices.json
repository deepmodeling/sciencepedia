{"hands_on_practices": [{"introduction": "Shannon's expansion theorem provides a powerful 'divide and conquer' method for analyzing and simplifying complex Boolean functions. By selecting a single variable, say $x$, we can break a function $F$ down into two simpler sub-functions, or cofactors, according to the rule $F = x' \\cdot F_{x=0} + x \\cdot F_{x=1}$. This exercise [@problem_id:1911587] offers fundamental practice in applying the theorem to calculate these cofactors and simplify the resulting expressions, a foundational skill for all subsequent applications.", "problem": "A digital control system relies on a logic function $F$ of three input variables $A$, $B$, and $C$. The function is defined by the Boolean expression $F(A,B,C) = AC' + A'C + B'C$. To optimize the circuit implementation, it is necessary to decompose this function using Shannon's expansion theorem with respect to the variable $B$. This decomposition takes the form $F(A,B,C) = B' \\cdot F_0(A,C) + B \\cdot F_1(A,C)$, where $F_0$ and $F_1$ are the cofactors of $F$ with respect to $B$.\n\nYour task is to determine the maximally simplified sum-of-products expressions for the cofactor functions $F_0(A,C)$ and $F_1(A,C)$. Select the correct pair of simplified expressions from the options below.\n\nA. $F_0(A,C) = AC' + A'C$ and $F_1(A,C) = A + C$\n\nB. $F_0(A,C) = A+C$ and $F_1(A,C) = AC' + A'C$\n\nC. $F_0(A,C) = A$ and $F_1(A,C) = AC' + C$\n\nD. $F_0(A,C) = AC' + A'C$ and $F_1(A,C) = A' + C$\n\nE. $F_0(A,C) = C' + A'$ and $F_1(A,C) = A + C$", "solution": "We apply Shannon’s expansion with respect to $B$, which states\n$$\nF(A,B,C)=B'\\,F(A,0,C)+B\\,F(A,1,C),\n$$\nso the cofactors are $F_{0}(A,C)=F(A,0,C)$ and $F_{1}(A,C)=F(A,1,C)$.\n\nGiven $F(A,B,C)=AC' + A'C + B'C$, compute the cofactors:\n\n1) For $B=0$, $B'=1$, so\n$$\nF_{0}(A,C)=AC'+A'C+C.\n$$\nSimplify using Boolean absorption:\n- $C+A'C=C$ (absorption $X+XY=X$ with $X=C$, $Y=A'$), giving\n$$\nF_{0}(A,C)=AC'+C.\n$$\n- $C+AC'=A+C$ (using $X+X'Y=X+Y$ with $X=C$, $Y=A$), hence\n$$\nF_{0}(A,C)=A+C.\n$$\n\n2) For $B=1$, $B'=0$, so\n$$\nF_{1}(A,C)=AC'+A'C+0=AC'+A'C,\n$$\nwhich is already a minimal sum-of-products form.\n\nThus the simplified cofactors are $F_{0}(A,C)=A+C$ and $F_{1}(A,C)=AC'+A'C$, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1911587"}, {"introduction": "Having practiced the algebraic decomposition of a function, we now explore how this abstract concept is embodied in a physical component. A multiplexer (MUX) is a direct hardware implementation of Shannon's expansion, where the select lines represent the expansion variables and the data inputs provide the cofactors. In this practice [@problem_id:1959978], you will work in reverse: by analyzing a given MUX-based circuit, you will reconstruct the original Boolean function, solidifying the crucial link between the theorem and practical circuit design.", "problem": "A three-variable Boolean function $G(A, B, C)$ is implemented using a single 4-to-1 Multiplexer (MUX), which is a device that selects one of its four data inputs ($I_0, I_1, I_2, I_3$) to be routed to its single output, based on the value of its two select lines ($S_1, S_0$).\n\nIn this specific implementation:\n- The variables $A$ and $B$ are connected to the select lines, with $A$ as the most significant bit. That is, $S_1 = A$ and $S_0 = B$.\n- The data inputs are connected to signals derived from the variable $C$ or to constant logic levels. The connections are as follows:\n  - Data input $I_0$ is connected to $C$.\n  - Data input $I_1$ is connected to logic '1' (high voltage).\n  - Data input $I_2$ is connected to the complement of $C$, denoted as $C'$.\n  - Data input $I_3$ is connected to logic '0' (ground).\n\nThe output of the MUX represents the function $G(A,B,C)$. Determine the canonical Sum-of-Products (SOP) representation for $G$. Provide your answer as the complete list of decimal minterm indices for the function $G(A, B, C)$, arranged in ascending numerical order. For the purpose of determining minterm indices, the variable order is $(A, B, C)$, where $A$ is the Most Significant Bit (MSB).", "solution": "A 4-to-1 MUX output can be written as the sum of its data inputs gated by the select-line decode terms. With $S_{1}=A$ and $S_{0}=B$, the output is\n$$\nG(A,B,C)=A'B'I_{0}+A'BI_{1}+AB'I_{2}+ABI_{3}.\n$$\nSubstituting the given data input connections $I_{0}=C$, $I_{1}=1$, $I_{2}=C'$, $I_{3}=0$ yields\n$$\nG=A'B'C+A'B\\cdot 1+AB'C'+AB\\cdot 0\n=A'B'C+A'B+AB'C'.\n$$\nTo express $G$ in canonical Sum-of-Products, expand the non-canonical term using $X=X(C+C')$:\n$$\nA'B=A'B(C+C')=A'BC+A'BC'.\n$$\nHence,\n$$\nG=A'B'C+A'BC+A'BC'+AB'C'.\n$$\nMapping each product term to its minterm index using $(A,B,C)$ with $A$ as MSB (index $m=4A+2B+C$):\n- $A'B'C \\rightarrow (0,0,1)\\Rightarrow m=1$,\n- $A'BC \\rightarrow (0,1,1)\\Rightarrow m=3$,\n- $A'BC' \\rightarrow (0,1,0)\\Rightarrow m=2$,\n- $AB'C' \\rightarrow (1,0,0)\\Rightarrow m=4$.\nTherefore, the canonical SOP is the sum of minterms with indices $1,2,3,4$, listed in ascending order.", "answer": "$$\\boxed{\\begin{pmatrix}1 & 2 & 3 & 4\\end{pmatrix}}$$", "id": "1959978"}, {"introduction": "The true power of Shannon's expansion is revealed in synthesis—building complex logic from simple, universal building blocks. This advanced practice [@problem_id:1383927] challenges you to construct a circuit for a given function using only 2-to-1 multiplexers. This task requires a recursive application of the expansion to create a tree-like structure of MUXes and highlights the goal of achieving a minimal design, a core concern in digital engineering.", "problem": "A 4-variable Boolean function $F(A, B, C, D)$ is defined by the sum of its minterms as:\n$$ F(A, B, C, D) = \\sum m(0, 1, 4, 6, 9, 11, 13, 15) $$\nYour task is to synthesize this function using a network composed exclusively of 2-to-1 Multiplexer (MUX) cells. A 2-to-1 MUX cell has two data inputs $I_0$ and $I_1$, one select input $S$, and one output $Y$. Its function is given by the Boolean expression $Y = S' \\cdot I_0 + S \\cdot I_1$, where $S'$ denotes the complement of $S$. The primary input variables $A, B, C, D$ and the constant logic levels '0' (false) and '1' (true) are available to be connected to any data or select input.\n\nDetermine the minimum number of 2-to-1 MUX cells required to implement the function $F(A, B, C, D)$.", "solution": "We start from the given function\n$$F(A,B,C,D)=\\sum m(0,1,4,6,9,11,13,15).$$\nUse Shannon decomposition with respect to $A$:\n$$F = A' F_{A=0}(B,C,D) + A F_{A=1}(B,C,D).$$\nCompute the cofactors.\n\n1) For $A=1$, the minterms from the set in the range $8$ to $15$ are $\\{9,11,13,15\\}$, which are exactly those with $D=1$ (independent of $B,C$). Hence\n$$F_{A=1}(B,C,D)=D.$$\n\n2) For $A=0$, the minterms from the set in the range $0$ to $7$ are $\\{0,1,4,6\\}$. Writing these explicitly and factoring:\n$$F_{A=0} = B' C' D' + B' C' D + BC'D' + BCD'$$\n$$= B' C'(D'+D) + D'(BC'+BC) = B'C' + BD'.$$\n\nTherefore the global decomposition is\n$$F = A'(B' C' + BD') + A D.$$\n\nNow synthesize using only 2-to-1 MUX cells with $Y = S' \\cdot I_{0} + S \\cdot I_{1}$, with available primary inputs $A,B,C,D$ and constants $0,1$.\n\n- Top level: Use one MUX with select $S=A$, so that\n  $$Y = A' \\cdot I_{0} + A \\cdot I_{1},$$\n  where choose $I_{0} = B' C' + B D'$ and $I_{1} = D$. This uses $1$ MUX, and $I_{1}$ is a direct connection to $D$.\n\n- Implement $I_{0} = H(B,C,D) = B' C' + B D'$ by Shannon decomposition on $B$:\n  $$H = B' \\cdot C' + B \\cdot D'.$$\n  This is exactly a 2-to-1 MUX with select $S=B$, data $I_{0}=C'$, $I_{1}=D'$. This uses $1$ MUX, provided we have $C'$ and $D'$ available.\n\n- Generate $C'$ and $D'$ using 2-to-1 MUX cells configured as inverters:\n  $$C' = C' \\cdot 1 + C \\cdot 0 \\quad \\text{via MUX with } S=C,\\; I_{0}=1,\\; I_{1}=0,$$\n  $$D' = D' \\cdot 1 + D \\cdot 0 \\quad \\text{via MUX with } S=D,\\; I_{0}=1,\\; I_{1}=0.$$\n  Each of these uses $1$ MUX.\n\nCounting cells:\n- $1$ MUX for the top-level decomposition on $A$,\n- $1$ MUX for combining $C'$ and $D'$ with select $B$,\n- $1$ MUX to generate $C'$,\n- $1$ MUX to generate $D'$.\n\nTotal MUX cells used: $4$.\n\nMinimality argument: The subfunction $H(B,C,D)=B' C' + B D'$ must be implemented somewhere because $F_{A=1}=D$ while $F_{A=0}=H$. For $H$, no matter which select variable is chosen for a single 2-to-1 MUX decomposition, its data functions necessarily require two complemented literals:\n- If $S=B$, then $I_{0}=C'$ and $I_{1}=D'$.\n- If $S=C$, then $I_{0}=B' + D'$ and $I_{1}=B D'$.\n- If $S=D$, then $I_{0}=B + C'$ and $I_{1}=B' C'$.\nIn all cases two distinct complemented primary inputs appear. Since only $A,B,C,D,0,1$ are directly available, each complemented literal requires at least one 2-to-1 MUX used as an inverter. Thus $H$ needs at least $2$ MUX for these inversions plus at least $1$ MUX to select between its two data functions, totaling at least $3$ MUX for $H$. Because $F$ also requires combining $F_{A=0}$ and $F_{A=1}$ with respect to $A$ (they are not identical, as $F_{A=1}=D$ and $F_{A=0}=H$), an additional top-level MUX is necessary. Hence any realization needs at least $3+1=4$ MUX. The constructed network achieves this bound, so the minimum number is $4$.", "answer": "$$\\boxed{4}$$", "id": "1383927"}]}