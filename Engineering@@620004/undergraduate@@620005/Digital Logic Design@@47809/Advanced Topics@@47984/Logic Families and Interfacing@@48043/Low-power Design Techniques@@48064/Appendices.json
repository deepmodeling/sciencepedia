{"hands_on_practices": [{"introduction": "One of the most effective strategies for reducing power consumption in digital circuits is managing the supply voltage, $V_{DD}$. This first practice delves into the fundamental relationship between dynamic power and supply voltage, a cornerstone of low-power CMOS design. By working through a hypothetical scenario, you will quantify the powerful, non-linear impact of voltage scaling, providing a clear understanding of why it is a primary tool for engineers creating energy-efficient devices [@problem_id:1945207].", "id": "1945207", "problem": "A design team is developing a new low-power processor for a battery-operated device. The processor is built using Complementary Metal-Oxide-Semiconductor (CMOS) technology. A dominant component of power consumption in such circuits is dynamic power, which is dissipated when logic gates switch their states. The dynamic power dissipation, $P_{dyn}$, is accurately modeled by the relationship $P_{dyn} = \\alpha C V_{DD}^2 f_{clk}$, where $\\alpha$ is the average number of times a capacitive load switches per clock cycle (the switching activity factor), $C$ is the total load capacitance of the circuit, $V_{DD}$ is the supply voltage, and $f_{clk}$ is the clock frequency.\n\nTo significantly extend the device's battery life, the team implements a power-saving mode. When this mode is activated, the processor's supply voltage, $V_{DD}$, is reduced by 20% from its nominal operating value. For this analysis, assume that the switching activity factor ($\\alpha$), total load capacitance ($C$), and clock frequency ($f_{clk}$) remain constant when entering this power-saving mode.\n\nCalculate the resulting percentage change in the dynamic power dissipation. Express your answer as a decimal. For example, a 15% increase should be written as 0.15, and a 25% decrease should be written as -0.25.\n\n", "solution": "Dynamic power in CMOS is modeled as $P_{dyn}=\\alpha C V_{DD}^{2} f_{clk}$. Let the nominal supply voltage be $V_{0}$ and the corresponding dynamic power be\n$$\nP_{0}=\\alpha C V_{0}^{2} f_{clk}.\n$$\nA reduction of the supply voltage by 20 means the new supply voltage is\n$$\nV_{1}=(1-0.20)V_{0}=0.80\\,V_{0}.\n$$\nWith $\\alpha$, $C$, and $f_{clk}$ unchanged, the new dynamic power is\n$$\nP_{1}=\\alpha C V_{1}^{2} f_{clk}=\\alpha C (0.80 V_{0})^{2} f_{clk}=0.64\\,\\alpha C V_{0}^{2} f_{clk}=0.64\\,P_{0}.\n$$\nThe percentage change, expressed as a decimal, is the relative change\n$$\n\\frac{P_{1}-P_{0}}{P_{0}}=0.64-1=-0.36.\n$$\nTherefore, the dynamic power decreases by 0.36 in decimal form.", "answer": "$$\\boxed{-0.36}$$"}, {"introduction": "Beyond supply voltage, the dynamic power of a circuit is directly proportional to its switching activityâ€”how frequently its nodes toggle between logic states. This exercise shifts our focus to the logic level, exploring how the choice of a specific gate, such as an AND versus an XOR, impacts switching activity given certain input signal probabilities. This analysis is crucial for designers making power-aware decisions at the microarchitectural level, as it reveals that not all logic implementations are created equal in terms of energy efficiency [@problem_id:1945215].", "id": "1945215", "problem": "In the design of modern Very-Large-Scale Integration (VLSI) circuits, minimizing power consumption is a critical goal. A major component of dynamic power dissipation is due to the switching activity of logic gates. Consider a digital designer evaluating two alternative implementations for a small logic block. One implementation uses a 2-input AND gate, while the other uses a 2-input XOR gate. The output of the AND gate is `Y = A \\cdot B` and the output of the XOR gate is `Z = A \\oplus B`.\n\nThe two inputs, `A` and `B`, are assumed to be primary inputs to the circuit block. Statistical analysis reveals that these inputs are entirely uncorrelated with each other and that their signal probabilities are uniform. This means the probability of an input being high (logic '1') is `0.5`, and this is true for both inputs `A` and `B`.\n\nThe switching activity of an output signal, say `F`, is defined as the probability that the signal's value at time `t` is different from its value at the previous time `t-1`. Assuming that the input signals `A` and `B` are temporally uncorrelated (i.e., their values in one time step are independent of their values in the previous time step), the switching activity `\\alpha_F` of an output `F` can be calculated using its signal probability `P(F=1)` with the formula `\\alpha_F = 2 \\times P(F=1) \\times (1 - P(F=1))`.\n\nTo make an informed design choice based on power consumption, the designer wishes to compare the switching activities of the two gates. Calculate the ratio `R = \\alpha_{Z} / \\alpha_{Y}`, where `\\alpha_{Z}` is the switching activity of the XOR gate's output and `\\alpha_{Y}` is the switching activity of the AND gate's output.\n\nExpress your final answer for the ratio `R` as a decimal rounded to three significant figures.\n\n", "solution": "Let the primary inputs satisfy $P(A=1)=P(B=1)=\\frac{1}{2}$, with $A$ and $B$ independent and temporally uncorrelated. For the 2-input AND gate $Y=A \\cdot B$, the signal probability is\n$$\nP(Y=1)=P(A=1,B=1)=P(A=1)P(B=1)=\\frac{1}{2}\\cdot\\frac{1}{2}=\\frac{1}{4}.\n$$\nFor the 2-input XOR gate $Z=A\\oplus B$, the signal probability is\n$$\nP(Z=1)=P(A\\neq B)=P(A=1,B=0)+P(A=0,B=1)=\\frac{1}{2}\\cdot\\frac{1}{2}+\\frac{1}{2}\\cdot\\frac{1}{2}=\\frac{1}{2}.\n$$\nGiven the switching activity formula $\\alpha_{F}=2\\,P(F=1)\\left(1-P(F=1)\\right)$ for temporally uncorrelated signals, compute\n$$\n\\alpha_{Y}=2\\cdot\\frac{1}{4}\\left(1-\\frac{1}{4}\\right)=2\\cdot\\frac{1}{4}\\cdot\\frac{3}{4}=\\frac{3}{8},\n$$\n$$\n\\alpha_{Z}=2\\cdot\\frac{1}{2}\\left(1-\\frac{1}{2}\\right)=2\\cdot\\frac{1}{2}\\cdot\\frac{1}{2}=\\frac{1}{2}.\n$$\nTherefore, the ratio is\n$$\nR=\\frac{\\alpha_{Z}}{\\alpha_{Y}}=\\frac{\\frac{1}{2}}{\\frac{3}{8}}=\\frac{4}{3}=1.333\\ldots\n$$\nRounded to three significant figures, $R=1.33$.", "answer": "$$\\boxed{1.33}$$"}, {"introduction": "Low-power design often involves making trade-offs at the architectural level. This practice elevates our analysis from single gates to a complete functional unit, a Finite State Machine (FSM), comparing two common state encoding schemes: binary and one-hot. You will investigate how an architectural decision influences both the power consumed by state registers and the power consumed by the combinational logic, demonstrating that a seemingly less efficient choice (using more flip-flops) can sometimes yield a more power-efficient system overall [@problem_id:1945189].", "id": "1945189", "problem": "A digital systems engineer is designing a low-power controller and needs to evaluate two different state encoding schemes for a Finite State Machine (FSM). The FSM has 16 distinct states, $S_0, S_1, \\ldots, S_{15}$. On each active clock edge, the machine transitions sequentially from its current state $S_i$ to the next state $S_{i+1}$, with the sequence wrapping around from $S_{15}$ back to $S_0$. This cycle repeats indefinitely.\n\nThe two encoding schemes under consideration are:\n1.  **Binary Encoding**: The states are represented using the minimum number of bits required.\n2.  **One-Hot Encoding**: Each state is represented by a unique bit being logic '1' while all other bits are logic '0'.\n\nThe average power consumption, $P$, of the FSM is directly proportional to the average energy dissipated per clock cycle, $E_{cycle}$. This energy consists of two main components: the energy dissipated by the combinational next-state logic, $E_{logic}$, and the energy dissipated by the state register's flip-flops, $E_{ff}$.\n\nThe energy from the flip-flops, $E_{ff}$, is calculated by multiplying the average number of flip-flops that change state (either from 0-to-1 or 1-to-0) per clock cycle by a constant energy cost per transition, $E_{tran}$. The average energy dissipated by the next-state logic, $E_{logic}$, is a given value for each implementation that reflects its gate-level complexity.\n\nAssume the following energy constants:\n-   Energy per flip-flop transition: $E_{tran} = 1.0$ arbitrary energy unit.\n-   Average logic energy for Binary Encoding: $E_{logic, bin} = 12.0$ arbitrary energy units per cycle.\n-   Average logic energy for One-Hot Encoding: $E_{logic, oh} = 0.5$ arbitrary energy units per cycle.\n\nCalculate the ratio of the total average power of the one-hot implementation to that of the binary implementation, $\\frac{P_{oh}}{P_{bin}}$. Report your answer as a real number rounded to three significant figures.\n\n", "solution": "Let $P$ be the average power and $E_{cycle}$ the average energy per cycle. Since $P$ is directly proportional to $E_{cycle}$ and the clocking conditions are the same for both implementations, there exists a constant $k$ (independent of encoding) such that $P = k E_{cycle}$. Therefore,\n$$\n\\frac{P_{oh}}{P_{bin}}=\\frac{E_{cycle,oh}}{E_{cycle,bin}}.\n$$\n\nThe cycle energy is the sum of logic and flip-flop transition energies:\n$$\nE_{cycle} = E_{logic} + E_{ff}.\n$$\n\nFlip-flop energy is $E_{ff} = (\\text{average number of flip-flop transitions per cycle}) \\cdot E_{tran}$.\n\nBinary encoding:\n- With 16 states, the minimum number of bits is $\\lceil \\log_{2}(16) \\rceil = 4$.\n- In a 4-bit binary count from $S_{i}$ to $S_{i+1}$, the expected number of bit flips per increment equals the sum of the flipping probabilities of each bit. Bit $k$ (LSB is $k=0$) flips with probability $2^{-k}$ on any increment, so the average number of flips per transition is\n$$\n\\sum_{k=0}^{3}2^{-k} = 1 + \\frac{1}{2} + \\frac{1}{4} + \\frac{1}{8} = \\frac{15}{8}.\n$$\nThus,\n$$\nE_{ff,bin} = \\frac{15}{8} E_{tran}.\n$$\nIncluding logic energy,\n$$\nE_{cycle,bin} = E_{logic,bin} + \\frac{15}{8} E_{tran}.\n$$\n\nOne-hot encoding:\n- With 16 flip-flops, exactly two flip-flops change per transition (the current state's flip-flop goes from $1$ to $0$ and the next state's from $0$ to $1$), so\n$$\nE_{ff,oh} = 2 E_{tran}.\n$$\nIncluding logic energy,\n$$\nE_{cycle,oh} = E_{logic,oh} + 2 E_{tran}.\n$$\n\nSubstitute the given numerical values $E_{tran} = 1.0$, $E_{logic,bin} = 12.0$, and $E_{logic,oh} = 0.5$:\n$$\nE_{cycle,bin} = 12.0 + \\frac{15}{8} \\cdot 1.0 = 12.0 + 1.875 = 13.875 = \\frac{111}{8},\n$$\n$$\nE_{cycle,oh} = 0.5 + 2 \\cdot 1.0 = 2.5 = \\frac{5}{2}.\n$$\nTherefore,\n$$\n\\frac{P_{oh}}{P_{bin}} = \\frac{E_{cycle,oh}}{E_{cycle,bin}} = \\frac{\\frac{5}{2}}{\\frac{111}{8}} = \\frac{5}{2} \\cdot \\frac{8}{111} = \\frac{20}{111} \\approx 0.180180\\ldots\n$$\nRounded to three significant figures, this is $0.180$.", "answer": "$$\\boxed{0.180}$$"}]}