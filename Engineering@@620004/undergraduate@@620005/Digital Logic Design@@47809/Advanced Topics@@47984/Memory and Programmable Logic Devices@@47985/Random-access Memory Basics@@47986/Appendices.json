{"hands_on_practices": [{"introduction": "Understanding the specifications of a memory chip is the first step in digital system design. The standard notation, such as $M \\times N$, is a compact way to describe a memory's capacity and organization. This exercise will help you translate this notation into the practical requirements for the number of address and data lines, which is fundamental for interfacing a memory chip with a processor or microcontroller. [@problem_id:1956561]", "problem": "An electrical engineering student is working on a project to design a simple data logger for an environmental sensor. The core of the data logger is a microcontroller that needs to store sensor readings in an external memory chip. The student has selected a static Random-Access Memory (RAM) chip for this purpose.\n\nThe memory chip's capacity and organization are described using the standard industry notation 'M x N', where 'M' represents the total number of unique, addressable memory locations (often called words), and 'N' represents the number of bits that make up each word. The specification for the chosen chip is '32K x 16'. In this digital systems context, the prefix 'K' is a multiplier representing $2^{10}$, which equals 1024.\n\nTo interface this memory chip with the microcontroller, a set of address lines and a set of data lines are required. The address lines are used to uniquely specify which memory location is being accessed, while the data lines are used for the parallel transfer of a data word to or from the selected location.\n\nBased on the '32K x 16' specification, determine the required number of address lines and the number of data lines for this memory chip.\n\nSelect the correct pair from the options below, formatted as (Number of Address Lines, Number of Data Lines).\n\nA) (16, 32)\n\nB) (15, 16)\n\nC) (10, 16)\n\nD) (32768, 16)\n\nE) (16, 15)", "solution": "The memory organization notation $M \\times N$ means there are $M$ addressable words, each $N$ bits wide. Here $M=\\text{32K}$ and $N=16$, with $\\text{K}=2^{10}$.\n\nCompute the total number of words:\n$$\nM=\\text{32K}=32 \\times 2^{10}=2^{5}\\times 2^{10}=2^{15}.\n$$\nIf the number of address lines is $a$, then each unique combination of the $a$ lines selects one word, so the capacity in words satisfies\n$$\n2^{a}=M.\n$$\nThus,\n$$\na=\\log_{2}(M)=\\log_{2}(2^{15})=15.\n$$\nThe number of data lines equals the word size, which is\n$$\nN=16.\n$$\nTherefore, the required pair is $(15,16)$, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1956561"}, {"introduction": "In many real-world applications, a single memory chip may not provide the required capacity or word width. This practice problem moves from analyzing a single component to designing a complete memory subsystem. You will learn how to combine multiple smaller RAM chips to construct a larger memory array, a core skill in designing scalable and cost-effective digital hardware. [@problem_id:1956588]", "problem": "An embedded systems engineer is tasked with designing a memory module for a custom-built computer. The design requires a total memory capacity of 64K x 16, which means it must store 65,536 words, with each word being 16 bits wide. The engineer only has access to a supply of 16K x 8 Random-Access Memory (RAM) chips. Each of these smaller chips can store 16,384 words, with each word being 8 bits wide. For the purposes of this problem, assume that a kilobyte (K) in the context of memory capacity is defined as $1K = 1024$.\n\nYou are to determine three key parameters for this memory system design. First, find the total number of 16K x 8 RAM chips required to construct the 64K x 16 memory system. Second, determine the number of address lines needed to uniquely address every word in the final 64K x 16 memory system. Third, determine the number of address lines that must be present on each individual 16K x 8 RAM chip.", "solution": "Interpret the capacity units using $1\\text{K}=1024=2^{10}$. Thus:\n- The target memory has $64\\text{K} \\times 16$ meaning $64\\text{K}$ words each $16$ bits wide. Compute the number of words and bits per word in powers of $2$:\n$$64\\text{K} = 64 \\cdot 2^{10} = 2^{6} \\cdot 2^{10} = 2^{16}\\ \\text{words},\\quad 16 = 2^{4}\\ \\text{bits/word}.$$\nHence the total bit capacity required is\n$$2^{16} \\times 2^{4} = 2^{20}\\ \\text{bits}.$$\n- Each available RAM chip is $16\\text{K} \\times 8$, i.e., $16\\text{K}$ words each $8$ bits wide. In powers of $2$:\n$$16\\text{K} = 16 \\cdot 2^{10} = 2^{4} \\cdot 2^{10} = 2^{14}\\ \\text{words},\\quad 8 = 2^{3}\\ \\text{bits/word}.$$\nThus each chip stores\n$$2^{14} \\times 2^{3} = 2^{17}\\ \\text{bits}.$$\n\n1) Number of chips required follows from total bits divided by bits per chip:\n$$\\frac{2^{20}}{2^{17}} = 2^{3} = 8.$$\n\nEquivalently, to achieve a $16$-bit word from $8$-bit chips requires $2$ chips in parallel per addressed word, and to scale depth from $16\\text{K}$ to $64\\text{K}$ requires a factor of $\\frac{64\\text{K}}{16\\text{K}}=4$, giving $2 \\times 4 = 8$ chips total.\n\n2) The number of address lines needed to uniquely address all words in the $64\\text{K} \\times 16$ memory equals the base-$2$ logarithm of the number of words. Using the principle that $N$ addressable words require $\\log_{2}(N)$ address lines:\n$$\\log_{2}(2^{16}) = 16\\ \\text{address lines}.$$\n\n3) The number of address lines per $16\\text{K} \\times 8$ chip likewise equals $\\log_{2}$ of its number of words:\n$$\\log_{2}(2^{14}) = 14\\ \\text{address lines}.$$", "answer": "$$\\boxed{\\begin{pmatrix}8 & 16 & 14\\end{pmatrix}}$$", "id": "1956588"}, {"introduction": "Beyond its static structure, a memory system's performance is defined by its dynamic timing characteristics. This exercise shifts our focus to the speed at which we can reliably access data, introducing key timing parameters like access time ($t_{AA}$) and setup time ($t_{SU}$). By analyzing the timing constraints of a memory read cycle, you will calculate the maximum clock frequency for stable operation, a critical task for ensuring the integrity and performance of any high-speed digital system. [@problem_id:1956585]", "problem": "A digital systems engineer is designing a simple microcontroller unit (MCU) based system that interfaces with an external asynchronous Static Random-Access Memory (SRAM). For a memory read operation, the MCU's bus cycle is synchronized with a single system clock. At the rising edge of the clock (start of the cycle), the MCU places a stable address on the address bus. After a propagation delay, the MCU asserts the memory's Output Enable ($\\overline{OE}$) signal to request data. The MCU latches the data from the data bus on the next rising clock edge. To ensure a successful read operation, the data from the SRAM must be stable at the MCU's input pins for a certain setup time before it is latched.\n\nThe timing characteristics are given by the following symbolic parameters:\n- `t_{AA}`: Address Access Time. The maximum time from when a stable address is presented to the SRAM until the corresponding data is valid on the data bus.\n- `t_{OE}`: Output Enable Access Time. The maximum time from when the `$\\overline{OE}$` signal is asserted (driven low) until the data is valid on the data bus.\n- `t_{prop_OE}`: The propagation delay within the MCU from the start of a clock cycle to the assertion of the `$\\overline{OE}$` signal.\n- `t_{SU}`: The setup time required by the MCU, meaning data must be stable at its input pins for at least this duration before the clock edge that latches the data.\n\nThe specific timing values for the components are:\n- `t_{AA} = 12.0` ns\n- `t_{OE} = 6.0` ns\n- `t_{prop_OE} = 2.5` ns\n- `t_{SU} = 2.0` ns\n\nAssuming the memory's Chip Enable ($\\overline{CE}$) signal is permanently asserted and other timing parameters are met, calculate the maximum possible system clock frequency that guarantees reliable memory read operations under all specified worst-case conditions. Express your answer in megahertz (MHz), rounded to three significant figures.", "solution": "Define the time origin at the rising edge that starts the bus cycle. By statement, the MCU presents a stable address at this edge, so the address is valid at time zero. The MCU asserts the memoryâ€™s $\\overline{OE}$ after a propagation delay $t_{prop\\_OE}$ from this edge. With $\\overline{CE}$ permanently asserted, valid data from the SRAM can appear after:\n- the address access time $t_{AA}$ from the moment the address is valid, and\n- the output enable access time $t_{OE}$ from the assertion of $\\overline{OE}$, which occurs at $t_{prop\\_OE}$ after the start.\n\nTherefore, the earliest time at which data is valid on the bus under worst-case conditions is\n$$\nt_{\\text{data,valid}}=\\max\\!\\left(t_{AA},\\,t_{prop\\_OE}+t_{OE}\\right).\n$$\nThe MCU will latch data at the next rising clock edge at time $T$. For correct operation, the data must meet the setup time $t_{SU}$ at the MCU input, so it must be valid by $T-t_{SU}$. Hence, the timing constraint is\n$$\nT-t_{SU}\\geq t_{\\text{data,valid}}\\quad\\Rightarrow\\quad T_{\\min}=t_{\\text{data,valid}}+t_{SU}.\n$$\nThe maximum clock frequency is $f_{\\max}=1/T_{\\min}$. Substituting the given values,\n$$\nt_{prop\\_OE}+t_{OE}=2.5\\ \\text{ns}+6.0\\ \\text{ns}=8.5\\ \\text{ns},\n$$\n$$\nt_{\\text{data,valid}}=\\max(12.0\\ \\text{ns},\\,8.5\\ \\text{ns})=12.0\\ \\text{ns},\n$$\n$$\nT_{\\min}=12.0\\ \\text{ns}+2.0\\ \\text{ns}=14.0\\ \\text{ns},\n$$\n$$\nf_{\\max}=\\frac{1}{14.0\\times 10^{-9}\\ \\text{s}}=7.142857\\ldots\\times 10^{7}\\ \\text{Hz}=71.42857\\ldots\\ \\text{MHz}.\n$$\nRounded to three significant figures in megahertz, the result is $71.4$.", "answer": "$$\\boxed{71.4}$$", "id": "1956585"}]}