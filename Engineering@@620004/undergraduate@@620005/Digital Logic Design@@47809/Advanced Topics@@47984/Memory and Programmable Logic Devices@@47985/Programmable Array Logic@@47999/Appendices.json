{"hands_on_practices": [{"introduction": "The core principle behind Programmable Array Logic (PAL) is its ability to directly implement Boolean functions expressed in the Sum-of-Products (SOP) form. This first exercise [@problem_id:1954538] provides a foundational scenario where you must translate a given logical requirement into the correct SOP expression. Mastering this conversion is the essential first step to programming any PAL device, as it bridges the gap between abstract logic and a physical hardware implementation.", "problem": "A control system for a simplified industrial press is being designed. The system relies on three binary input signals:\n-   `A`: A sensor indicating the workpiece is correctly positioned ($A=1$ for positioned, $A=0$ for not positioned).\n-   `B`: A sensor indicating that a safety cage is locked ($B=1$ for locked, $B=0$ for unlocked).\n-   `C`: A manual activation switch used for maintenance and testing purposes ($C=1$ for active, $C=0$ for inactive).\n\nThe press is allowed to operate, corresponding to a high output signal `F` (i.e., $F=1$), if and only if the workpiece is correctly positioned ($A=1$) **AND** (either the safety cage is locked ($B=1$) **OR** the manual activation switch is active ($C=1$)).\n\nYou are tasked with implementing this logic using a standard Programmable Array Logic (PAL) device. This type of device consists of a programmable AND-plane followed by a fixed OR-plane, making it ideal for implementing functions in a sum-of-products form. To configure the PAL, you must first determine the minimal set of product terms required by the AND-plane.\n\nWhich of the following sets represents the complete and minimal set of product terms that must be generated by the AND-plane to realize the function `F`?\n\nA. {$A$, $B$, $C$}\n\nB. {$A+B$, $A+C$}\n\nC. {$AB$, $AC$}\n\nD. {$A$, $B+C$}\n\nE. {$\\bar{A}B$, $A\\bar{C}$}\n\nF. {$ABC$, $\\bar{A}\\bar{B}C$}", "solution": "We translate the verbal specification directly into Boolean algebra. The press operates if and only if the workpiece is positioned and either the safety cage is locked or the manual activation switch is active. Using $+$ for logical OR, juxtaposition for logical AND, and $'$ for logical NOT, the function is\n$$\nF = A(B + C).\n$$\nA PAL implements a sum-of-products (SOP) form, meaning $F$ must be expressed as an OR of product terms generated by the programmable AND-plane. Apply the distributive law of Boolean algebra:\n$$\nA(B + C) = AB + AC.\n$$\nThus, the SOP form of minimal algebraic complexity is\n$$\nF = AB + AC.\n$$\nThe product terms required from the AND-plane are precisely $AB$ and $AC$. This set is minimal because:\n- A single product term cannot represent $A(B + C)$; for example, $AB$ alone fails when $A=1$ and $C=1$, and $AC$ alone fails when $A=1$ and $B=1$.\n- Any inclusion of additional product terms would be redundant, as $AB$ and $AC$ already cover all and only the cases where $F=1$ given the specification.\nFurthermore, other listed sets either contain sums (not product terms, hence not realizable by the AND-plane) or correspond to different logic. Therefore, the complete and minimal set of product terms for the AND-plane is $\\{AB, AC\\}$, matching option C.", "answer": "$$\\boxed{C}$$", "id": "1954538"}, {"introduction": "Real-world digital components often include features not present in idealized models, such as active-low outputs, where the output signal is the inverse of the internally generated logic. This practice [@problem_id:1954564] challenges you to work with this common hardware characteristic. You will need to apply your knowledge of Boolean algebra, particularly De Morgan's laws, to determine the correct internal function that must be generated to achieve the desired final output.", "problem": "A digital systems engineer is tasked with implementing a safety logic function for a piece of machinery using a Programmable Array Logic (PAL) device. The PAL device available has three inputs, denoted as $A$, $B$, and $C$, and one output. The internal structure of this PAL consists of a programmable AND array followed by a fixed OR gate. Crucially, the final output of the device is driven by an inverting buffer, making it an \"active-low\" output. This means that if the internal AND-OR array produces a logical value $G$, the final output of the device will be its complement, $\\bar{G}$.\n\nThe required safety function, $F(A, B, C)$, which should appear at the final output of the PAL device, is defined by the Boolean expression:\n$$F = \\bar{A}B + C$$\n\nTo correctly configure the PAL, the engineer must determine the Boolean function, let's call it $G(A, B, C)$, that the internal programmable AND-OR array must generate.\n\nDetermine the expression for $G(A, B, C)$. Your final answer should be expressed in the minimal Sum-of-Products (SOP) form.", "solution": "The problem states that the Programmable Array Logic (PAL) device has an active-low output. This means the function produced by the internal AND-OR logic, which we call $G$, is inverted before it appears at the device's final output, $F$. This relationship can be expressed as:\n$$F = \\bar{G}$$\n\nWe are given the desired final output function:\n$$F = \\bar{A}B + C$$\n\nTo find the function $G$ that the internal AND-OR array must generate, we need to solve for $G$ in the first equation. By complementing both sides, we get:\n$$\\bar{F} = \\bar{\\bar{G}}$$\n$$\\bar{F} = G$$\nSo, the internal logic function $G$ must be the complement of the desired output function $F$.\n\nNow, we compute the complement of $F$:\n$$G = \\bar{F} = \\overline{(\\bar{A}B + C)}$$\n\nTo simplify this expression and get it into the Sum-of-Products (SOP) form, we apply De Morgan's laws. The first law states that $\\overline{(X+Y)} = \\bar{X} \\cdot \\bar{Y}$. Applying this to our expression, we let $X = \\bar{A}B$ and $Y = C$:\n$$G = \\overline{(\\bar{A}B)} \\cdot \\bar{C}$$\n\nNext, we apply De Morgan's second law, which states that $\\overline{(X \\cdot Y)} = \\bar{X} + \\bar{Y}$, to the term $\\overline{(\\bar{A}B)}$:\n$$G = (\\overline{\\bar{A}} + \\bar{B}) \\cdot \\bar{C}$$\n\nWe simplify the double complement, $\\overline{\\bar{A}}$, which is equal to $A$:\n$$G = (A + \\bar{B}) \\cdot \\bar{C}$$\n\nThis expression is in the Product-of-Sums (POS) form. The problem asks for the minimal Sum-of-Products (SOP) form. To convert it to SOP, we use the distributive law, $X \\cdot (Y+Z) = XY + XZ$:\n$$G = A\\bar{C} + \\bar{B}\\bar{C}$$\n\nThis expression is in Sum-of-Products form. We check if it is minimal. The two product terms are $A\\bar{C}$ and $\\bar{B}\\bar{C}$. There are no further simplifications possible through absorption or combining terms. Therefore, this is the minimal SOP expression for the function $G$ that the internal PAL logic must implement.", "answer": "$$\\boxed{A\\bar{C} + \\bar{B}\\bar{C}}$$", "id": "1954564"}, {"introduction": "Engineering is often about finding clever solutions within given constraints. This final practice [@problem_id:1954534] presents a common digital design challenge: implementing a function that is too complex for the available hardware resources. The exercise will guide you through the valuable technique of function partitioning, demonstrating how to decompose a large logic function into smaller parts that can be implemented on a resource-limited PAL and then recombined externally.", "problem": "A digital controller requires the implementation of a 4-input boolean function, $F(A,B,C,D)$. After minimization, the function's minimal sum-of-products (SOP) expression has been determined to be:\n$$F(A,B,C,D) = \\bar{A}\\bar{B}\\bar{C} + A\\bar{B}D + BC\\bar{D} + \\bar{A}CD + A\\bar{C}\\bar{D}$$\nThe hardware specification mandates the use of a simple Programmable Array Logic (PAL) device. This specific PAL has 4 inputs, a programmable AND array, and 2 outputs, $O_1$ and $O_2$. Each output is driven by a fixed OR gate which can accept a maximum of 4 product terms from the AND array. Within this PAL architecture, any given product term from the AND array can only be routed to one of the output OR gates and cannot be shared.\n\nSince the minimal SOP expression for $F$ contains 5 product terms, it exceeds the 4-term limit of a single output. The implementation strategy is to partition the function's product terms into two sub-functions, $F_1$ and $F_2$, implemented at outputs $O_1$ and $O_2$ respectively. These outputs will then be combined using a single external OR gate, such that $F = F_1 + F_2$.\n\nTo ensure a unique design, you are instructed to define the sub-function $F_1$ as the logical sum of all product terms from the minimal SOP of $F$ that include the variable $A$ (either in its true form, $A$, or complemented form, $\\bar{A}$). The sub-function $F_2$ will be the logical sum of all remaining product terms.\n\nDetermine the boolean expressions for $F_1$ and $F_2$. Present your answer as a pair of expressions $(F_1, F_2)$ in a row matrix.", "solution": "We are given the minimized SOP:\n$$F(A,B,C,D)=\\bar{A}\\bar{B}\\bar{C} + A\\bar{B}D + BC\\bar{D} + \\bar{A}CD + A\\bar{C}\\bar{D}.$$\nThe PAL permits at most four product terms per output OR gate, and each product term can feed only one output OR gate. The design rule requires defining $F_{1}$ as the sum of all product terms that explicitly include variable $A$ (either as $A$ or $\\bar{A}$), and $F_{2}$ as the sum of the remaining product terms, so that $F=F_{1}+F_{2}$.\n\nStep 1: Identify which product terms include $A$ or $\\bar{A}$.\n- $\\bar{A}\\bar{B}\\bar{C}$ includes $\\bar{A}$.\n- $A\\bar{B}D$ includes $A$.\n- $BC\\bar{D}$ does not include $A$.\n- $\\bar{A}CD$ includes $\\bar{A}$.\n- $A\\bar{C}\\bar{D}$ includes $A$.\n\nStep 2: Form $F_{1}$ as the sum of the terms including $A$ or $\\bar{A}$:\n$$F_{1}=\\bar{A}\\bar{B}\\bar{C} + A\\bar{B}D + \\bar{A}CD + A\\bar{C}\\bar{D}.$$\nThis contains $4$ product terms, satisfying the PAL output limit.\n\nStep 3: Form $F_{2}$ as the sum of the remaining terms:\n$$F_{2}=BC\\bar{D}.$$\n\nTherefore, with an external OR gate, $F=F_{1}+F_{2}$, and each product term is assigned to exactly one PAL output as required.", "answer": "$$\\boxed{\\begin{pmatrix}\\bar{A}\\bar{B}\\bar{C} + A\\bar{B}D + \\bar{A}CD + A\\bar{C}\\bar{D} & BC\\bar{D}\\end{pmatrix}}$$", "id": "1954534"}]}