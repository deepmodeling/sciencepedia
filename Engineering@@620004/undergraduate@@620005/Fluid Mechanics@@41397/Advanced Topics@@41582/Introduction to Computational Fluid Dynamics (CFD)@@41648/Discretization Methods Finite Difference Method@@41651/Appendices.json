{"hands_on_practices": [{"introduction": "The journey into computational fluid dynamics begins with mastering the art of discretization. This first practice challenges you to convert a classic one-dimensional convection-diffusion equation into a finite difference form. By applying different schemes for the convection (advection) and diffusion terms, you will gain hands-on experience in how physical processes are represented numerically, a foundational skill for any simulation work [@problem_id:1749174].", "problem": "Consider the one-dimensional, steady-state transport of a chemical species in a narrow channel with a uniform, unidirectional fluid flow. The concentration of the species, denoted by $\\phi(x)$, is governed by the convection-diffusion equation:\n$$u \\frac{d\\phi}{dx} - D \\frac{d^2\\phi}{dx^2} = 0$$\nHere, $u$ is the constant positive fluid velocity along the x-axis, and $D$ is the constant diffusion coefficient.\n\nTo solve this equation numerically, the spatial domain is discretized into a uniform grid with a constant grid spacing of $\\Delta x$. The value of the concentration at a grid node $i$ is denoted by $\\phi_i$.\n\nA numerical model is set up using a first-order upwind differencing scheme for the convection term ($u \\frac{d\\phi}{dx}$) and a second-order central differencing scheme for the diffusion term ($-D \\frac{d^2\\phi}{dx^2}$).\n\nBy applying these discretization schemes at an internal grid node $i$, the resulting algebraic equation can be rearranged into the form $A \\phi_i = B \\phi_{i-1} + C \\phi_{i+1}$. Which of the following options correctly represents this finite difference equation?\n\nA. $(2D - u \\Delta x) \\phi_i = D \\phi_{i-1} + (D - u \\Delta x) \\phi_{i+1}$\n\nB. $4D \\phi_i = (2D + u \\Delta x) \\phi_{i-1} + (2D - u \\Delta x) \\phi_{i+1}$\n\nC. $(u \\Delta x + 2D) \\phi_i = (u \\Delta x + D) \\phi_{i-1} + D \\phi_{i+1}$\n\nD. $(u \\Delta x + D) \\phi_i = (u \\Delta x + D) \\phi_{i-1}$\n\nE. $(u \\Delta x - 2D) \\phi_i = (u \\Delta x - D) \\phi_{i-1} - D \\phi_{i+1}$", "solution": "The goal is to discretize the given one-dimensional, steady-state convection-diffusion equation and rearrange it into the specified algebraic form.\n\nThe governing differential equation is:\n$$u \\frac{d\\phi}{dx} - D \\frac{d^2\\phi}{dx^2} = 0$$\n\nThe spatial domain is discretized with uniform spacing $\\Delta x$, such that the concentration at node $i$ is $\\phi_i$, at the west neighbor is $\\phi_{i-1}$, and at the east neighbor is $\\phi_{i+1}$.\n\nFirst, we discretize the convection (or advection) term, $u \\frac{d\\phi}{dx}$. The problem specifies a first-order upwind differencing scheme. Since the velocity $u$ is given as positive, the flow is in the positive x-direction. Therefore, the \"upwind\" direction for node $i$ is the node from which the flow is coming, which is node $i-1$. This corresponds to a first-order backward difference scheme.\n$$u \\frac{d\\phi}{dx} \\bigg|_i \\approx u \\frac{\\phi_i - \\phi_{i-1}}{\\Delta x}$$\n\nNext, we discretize the diffusion term, $-D \\frac{d^2\\phi}{dx^2}$. The problem specifies a second-order central differencing scheme for the second derivative.\n$$\\frac{d^2\\phi}{dx^2} \\bigg|_i \\approx \\frac{\\phi_{i+1} - 2\\phi_i + \\phi_{i-1}}{(\\Delta x)^2}$$\nTherefore, the discretized diffusion term is:\n$$-D \\frac{d^2\\phi}{dx^2} \\bigg|_i \\approx -D \\frac{\\phi_{i+1} - 2\\phi_i + \\phi_{i-1}}{(\\Delta x)^2}$$\n\nNow, we substitute these discretized forms back into the original governing equation:\n$$u \\frac{\\phi_i - \\phi_{i-1}}{\\Delta x} - D \\frac{\\phi_{i+1} - 2\\phi_i + \\phi_{i-1}}{(\\Delta x)^2} = 0$$\n\nTo simplify and remove the denominators, we multiply the entire equation by $(\\Delta x)^2$:\n$$(\\Delta x)^2 \\left( u \\frac{\\phi_i - \\phi_{i-1}}{\\Delta x} \\right) - (\\Delta x)^2 \\left( D \\frac{\\phi_{i+1} - 2\\phi_i + \\phi_{i-1}}{(\\Delta x)^2} \\right) = 0$$\n$$u \\Delta x (\\phi_i - \\phi_{i-1}) - D (\\phi_{i+1} - 2\\phi_i + \\phi_{i-1}) = 0$$\n\nNow, we expand the terms:\n$$u \\Delta x \\phi_i - u \\Delta x \\phi_{i-1} - D \\phi_{i+1} + 2D \\phi_i - D \\phi_{i-1} = 0$$\n\nThe final step is to rearrange this equation into the form $A \\phi_i = B \\phi_{i-1} + C \\phi_{i+1}$. We group all terms containing $\\phi_i$ on the left-hand side and all other terms on the right-hand side.\n\nGrouping terms with $\\phi_i$:\n$$(u \\Delta x + 2D) \\phi_i$$\n\nGrouping terms with $\\phi_{i-1}$ and $\\phi_{i+1}$ and moving them to the right side:\n$$u \\Delta x \\phi_{i-1} + D \\phi_{i-1} + D \\phi_{i+1}$$\n$$(u \\Delta x + D) \\phi_{i-1} + D \\phi_{i+1}$$\n\nEquating the left and right sides gives the final rearranged algebraic equation:\n$$(u \\Delta x + 2D) \\phi_i = (u \\Delta x + D) \\phi_{i-1} + D \\phi_{i+1}$$\n\nComparing this result with the given choices:\nA. $(2D - u \\Delta x) \\phi_i = D \\phi_{i-1} + (D - u \\Delta x) \\phi_{i+1}$ (Incorrect, results from using forward difference for advection)\nB. $4D \\phi_i = (2D + u \\Delta x) \\phi_{i-1} + (2D - u \\Delta x) \\phi_{i+1}$ (Incorrect, results from using central difference for advection)\nC. $(u \\Delta x + 2D) \\phi_i = (u \\Delta x + D) \\phi_{i-1} + D \\phi_{i+1}$ (Correct)\nD. $(u \\Delta x + D) \\phi_i = (u \\Delta x + D) \\phi_{i-1}$ (Incorrect, missing diffusion term and $\\phi_{i+1}$)\nE. $(u \\Delta x - 2D) \\phi_i = (u \\Delta x - D) \\phi_{i-1} - D \\phi_{i+1}$ (Incorrect, sign errors from mishandling diffusion term)\n\nThus, the correct option is C.", "answer": "$$\\boxed{C}$$", "id": "1749174"}, {"introduction": "While uniform grids are simple to work with, practical engineering problems often demand non-uniform grids to efficiently capture complex geometries or sharp gradients. This exercise focuses on deriving a second-order accurate approximation for a pressure gradient on such a grid. Successfully completing this task demonstrates how to maintain numerical accuracy even when the grid spacing is variable, a crucial step towards building robust and flexible solvers [@problem_id:1749171].", "problem": "In the development of a numerical solver for one-dimensional fluid flow, a common task is to evaluate the pressure gradient, which acts as a driving force for the fluid. Consider a scenario where the pressure field, $p(x)$, is known only at discrete points along a non-uniform computational grid. We are interested in finding a high-fidelity approximation for the pressure gradient at a specific grid point (node) $i$, located at position $x_i$. The pressure at this node is $p_i$. The adjacent nodes are node $i-1$ at position $x_{i-1}$ with pressure $p_{i-1}$, and node $i+1$ at position $x_{i+1}$ with pressure $p_{i+1}$. The grid spacing is not constant, so in general, $x_{i+1} - x_i \\neq x_i - x_{i-1}$.\n\nYour task is to derive a second-order accurate finite difference approximation for the pressure gradient, $\\frac{dp}{dx}$, at the location $x_i$. Express your final answer as an analytic expression in terms of the given grid point locations $x_{i-1}$, $x_i$, $x_{i+1}$ and the corresponding pressure values $p_{i-1}$, $p_i$, $p_{i+1}$.", "solution": "We seek a second-order accurate approximation of $\\left.\\frac{dp}{dx}\\right|_{x_{i}}$ on a non-uniform grid using the three points $(x_{i-1},p_{i-1})$, $(x_{i},p_{i})$, and $(x_{i+1},p_{i+1})$. Let $h_{-}=x_{i}-x_{i-1}$ and $h_{+}=x_{i+1}-x_{i}$. Construct the quadratic Lagrange interpolant $p(x)\\approx \\sum_{j\\in\\{i-1,i,i+1\\}} p_{j} L_{j}(x)$, where\n$$\nL_{i-1}(x)=\\frac{(x-x_{i})(x-x_{i+1})}{(x_{i-1}-x_{i})(x_{i-1}-x_{i+1})},\\quad\nL_{i}(x)=\\frac{(x-x_{i-1})(x-x_{i+1})}{(x_{i}-x_{i-1})(x_{i}-x_{i+1})},\\quad\nL_{i+1}(x)=\\frac{(x-x_{i-1})(x-x_{i})}{(x_{i+1}-x_{i-1})(x_{i+1}-x_{i})}.\n$$\nThen\n$$\n\\left.\\frac{dp}{dx}\\right|_{x_{i}} \\approx p_{i-1} L_{i-1}'(x_{i})+p_{i} L_{i}'(x_{i})+p_{i+1} L_{i+1}'(x_{i}).\n$$\nDifferentiate each basis function and evaluate at $x=x_{i}$. Using the identities $x_{i-1}-x_{i}=-h_{-}$, $x_{i-1}-x_{i+1}=-(h_{-}+h_{+})$, $x_{i}-x_{i-1}=h_{-}$, $x_{i}-x_{i+1}=-h_{+}$, $x_{i+1}-x_{i-1}=h_{-}+h_{+}$, and $x_{i+1}-x_{i}=h_{+}$, we obtain\n$$\nL_{i-1}'(x_{i})=-\\frac{h_{+}}{h_{-}(h_{-}+h_{+})},\\quad\nL_{i}'(x_{i})=\\frac{h_{+}-h_{-}}{h_{-}h_{+}},\\quad\nL_{i+1}'(x_{i})=\\frac{h_{-}}{h_{+}(h_{-}+h_{+})}.\n$$\nTherefore,\n$$\n\\left.\\frac{dp}{dx}\\right|_{x_{i}} \\approx -\\frac{h_{+}}{h_{-}(h_{-}+h_{+})}p_{i-1}+\\frac{h_{+}-h_{-}}{h_{-}h_{+}}p_{i}+\\frac{h_{-}}{h_{+}(h_{-}+h_{+})}p_{i+1}.\n$$\nSubstituting back $h_{-}=x_{i}-x_{i-1}$ and $h_{+}=x_{i+1}-x_{i}$ yields the desired expression in terms of the grid locations:\n$$\n\\left.\\frac{dp}{dx}\\right|_{x_{i}} \\approx -\\frac{x_{i+1}-x_{i}}{(x_{i}-x_{i-1})(x_{i+1}-x_{i-1})}p_{i-1}+\\frac{(x_{i+1}-x_{i})-(x_{i}-x_{i-1})}{(x_{i}-x_{i-1})(x_{i+1}-x_{i})}p_{i}+\\frac{x_{i}-x_{i-1}}{(x_{i+1}-x_{i})(x_{i+1}-x_{i-1})}p_{i+1}.\n$$\nBecause this is the derivative of the quadratic Lagrange interpolant through the three nodes, the truncation error is $O(h^{2})$ on a smooth field, providing a second-order accurate approximation on non-uniform grids.", "answer": "$$\\boxed{-\\frac{x_{i+1}-x_{i}}{(x_{i}-x_{i-1})(x_{i+1}-x_{i-1})}p_{i-1}+\\frac{(x_{i+1}-x_{i})-(x_{i}-x_{i-1})}{(x_{i}-x_{i-1})(x_{i+1}-x_{i})}p_{i}+\\frac{x_{i}-x_{i-1}}{(x_{i+1}-x_{i})(x_{i+1}-x_{i-1})}p_{i+1}}$$", "id": "1749171"}, {"introduction": "The true power of CFD is realized in two and three dimensions, where phenomena like vorticity and shear stress come to life. A key building block for multi-dimensional models is the discretization of mixed partial derivatives. In this practice, you will derive the standard second-order finite difference stencil for such a term, a component that is indispensable for simulating complex viscous flows governed by the Navier-Stokes equations [@problem_id:1749175].", "problem": "In the numerical simulation of viscous fluid flows, the discretization of governing equations is a fundamental step. Consider a scenario where you are developing a Finite Difference Method (FDM) code to solve the Navier-Stokes equations. On a uniform Cartesian grid, a key term that appears in the viscous stress tensor components is the mixed partial derivative.\n\nThe computational domain consists of a uniform Cartesian grid where grid points are denoted by coordinates $(x_i, y_j) = (i \\Delta x, j \\Delta y)$, for integer indices $i, j$ and constant grid spacings $\\Delta x$ and $\\Delta y$. The value of a scalar field, such as the x-velocity component $u$, at a grid point $(x_i, y_j)$ is denoted as $u_{i,j}$.\n\nYour task is to derive a second-order accurate finite difference approximation for the mixed partial derivative term $\\frac{\\partial^2 u}{\\partial x \\partial y}$ at the grid node $(i,j)$. The derivation must proceed by sequentially applying the second-order central difference operator for the first derivative. Provide the final approximation as a single algebraic expression in terms of the grid point values of $u$ (e.g., $u_{i,j}, u_{i+1,j}$, etc.) and the grid spacings $\\Delta x$ and $\\Delta y$.", "solution": "We seek a second-order accurate approximation to the mixed derivative $\\frac{\\partial^{2} u}{\\partial x \\partial y}$ at $(i,j)$ by sequentially applying the second-order central difference operator for the first derivative.\n\nFor a smooth function $u(x,y)$ on a uniform Cartesian grid with spacings $\\Delta x$ and $\\Delta y$, the second-order central difference approximation to the first derivative in $y$ at $(i,j)$ is\n$$\n\\left(\\frac{\\partial u}{\\partial y}\\right)_{i,j} = \\frac{u_{i,j+1} - u_{i,j-1}}{2 \\Delta y} + \\mathcal{O}(\\Delta y^{2}).\n$$\nTo obtain $\\frac{\\partial^{2} u}{\\partial x \\partial y}$, differentiate this quantity with respect to $x$ using the second-order central difference in $x$:\n$$\n\\left(\\frac{\\partial^{2} u}{\\partial x \\partial y}\\right)_{i,j} = \\frac{\\left(\\frac{\\partial u}{\\partial y}\\right)_{i+1,j} - \\left(\\frac{\\partial u}{\\partial y}\\right)_{i-1,j}}{2 \\Delta x} + \\mathcal{O}(\\Delta x^{2}).\n$$\nNow approximate the $y$-derivatives at $(i+1,j)$ and $(i-1,j)$ with second-order central differences in $y$:\n$$\n\\left(\\frac{\\partial u}{\\partial y}\\right)_{i+1,j} = \\frac{u_{i+1,j+1} - u_{i+1,j-1}}{2 \\Delta y} + \\mathcal{O}(\\Delta y^{2}), \\quad\n\\left(\\frac{\\partial u}{\\partial y}\\right)_{i-1,j} = \\frac{u_{i-1,j+1} - u_{i-1,j-1}}{2 \\Delta y} + \\mathcal{O}(\\Delta y^{2}).\n$$\nSubstituting these into the $x$-difference gives\n$$\n\\left(\\frac{\\partial^{2} u}{\\partial x \\partial y}\\right)_{i,j} = \\frac{1}{2 \\Delta x} \\left[ \\frac{u_{i+1,j+1} - u_{i+1,j-1}}{2 \\Delta y} - \\frac{u_{i-1,j+1} - u_{i-1,j-1}}{2 \\Delta y} \\right] + \\mathcal{O}(\\Delta x^{2} + \\Delta y^{2}).\n$$\nCollecting terms yields the standard compact stencil\n$$\n\\left(\\frac{\\partial^{2} u}{\\partial x \\partial y}\\right)_{i,j} = \\frac{u_{i+1,j+1} - u_{i+1,j-1} - u_{i-1,j+1} + u_{i-1,j-1}}{4 \\Delta x \\Delta y} + \\mathcal{O}(\\Delta x^{2} + \\Delta y^{2}).\n$$\nThus the second-order accurate finite difference approximation, obtained by sequentially applying central differences for the first derivatives, is the above four-point formula.", "answer": "$$\\boxed{\\frac{u_{i+1,j+1} - u_{i+1,j-1} - u_{i-1,j+1} + u_{i-1,j-1}}{4\\,\\Delta x\\,\\Delta y}}$$", "id": "1749175"}]}