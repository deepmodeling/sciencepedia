{"hands_on_practices": [{"introduction": "The first step in any successful Computational Fluid Dynamics (CFD) analysis is accurately translating a real-world physical problem into a well-defined computational model. This exercise focuses on that foundational skill by asking you to select the appropriate boundary conditions for a classic natural convection scenario. Properly defining how the fluid interacts with a hot plate, an insulated floor, and the surrounding ambient air is critical for capturing the physics of the resulting buoyant plume [@problem_id:1734331].", "problem": "An engineer is tasked with creating a simulation model for the natural convection plume rising from a hot, thin, circular plate resting on the floor of a large, sealed, and still room. The goal is to use Computational Fluid Dynamics (CFD) to predict the air temperature and velocity fields. The simulation domain is defined as a large rectangular box of air that encloses the hot plate.\n\nThe boundaries of this computational domain are categorized as follows:\n- `S_hot`: The top surface of the hot circular plate, which is maintained at a constant high temperature, $T_{hot}$.\n- `S_floor`: The portion of the room's floor inside the domain but not covered by the hot plate. This surface is assumed to be thermally insulating.\n- `S_far`: The top and four vertical side surfaces of the rectangular domain, located far from the hot plate.\n\nTo set up the simulation, the engineer must assign a physically appropriate boundary condition type to each of these surfaces. Four common types of boundary conditions are available, with their physical definitions provided below:\n\n- **Isothermal No-Slip Wall**: The fluid velocity at the boundary is zero. The temperature at the boundary is held at a specified constant value.\n- **Adiabatic No-Slip Wall**: The fluid velocity at the boundary is zero. The heat flux normal to the boundary is zero.\n- **Opening**: The pressure at the boundary is fixed to a specified ambient value. If fluid enters the domain through this boundary, it does so at a specified ambient temperature. If fluid exits, it does so with the temperature it carries from inside the domain (zero-gradient condition on temperature).\n- **Symmetry**: The velocity component normal to the boundary is zero, and the shear stress is zero. The heat flux normal to the boundary is zero. This condition is used to model a plane of symmetry where flow is parallel to the boundary.\n\nWhich of the following options correctly assigns the boundary condition types to the surfaces `S_hot`, `S_floor`, and `S_far` for a physically realistic simulation of this scenario?\n\nA. `S_hot`: Isothermal No-Slip Wall, `S_floor`: Adiabatic No-Slip Wall, `S_far`: Opening\n\nB. `S_hot`: Isothermal No-Slip Wall, `S_floor`: Adiabatic No-Slip Wall, `S_far`: Adiabatic No-Slip Wall\n\nC. `S_hot`: Isothermal No-Slip Wall, `S_floor`: Isothermal No-Slip Wall, `S_far`: Opening\n\nD. `S_hot`: Adiabatic No-Slip Wall, `S_floor`: Adiabatic No-Slip Wall, `S_far`: Symmetry", "solution": "We identify the physical nature of each boundary and match it to the boundary-condition definitions given, using standard wall and far-field conditions for buoyancy-driven flow.\n\n1) For the hot plate surface $S_{\\text{hot}}$:\n- It is a solid surface in contact with air, so the no-slip condition applies: $\\boldsymbol{u}=\\boldsymbol{0}$ on $S_{\\text{hot}}$.\n- It is maintained at a specified constant temperature $T_{\\text{hot}}$, so an isothermal condition applies: $T=T_{\\text{hot}}$ on $S_{\\text{hot}}$.\nThese are exactly the definitions of an Isothermal No-Slip Wall.\n\n2) For the remaining floor $S_{\\text{floor}}$ (room floor not covered by the plate):\n- It is a solid wall, so no-slip applies: $\\boldsymbol{u}=\\boldsymbol{0}$ on $S_{\\text{floor}}$.\n- It is thermally insulating, so the normal heat flux vanishes: $q_{n}=-k\\,\\nabla T\\cdot \\boldsymbol{n}=0$ on $S_{\\text{floor}}$. For constant $k$, this is $\\partial T/\\partial n=0$.\nThese are exactly the definitions of an Adiabatic No-Slip Wall.\n\n3) For the far boundaries $S_{\\text{far}}$ (top and vertical sides of the computational box placed far from the plate):\n- The computational domain is a truncated portion of the room air. Beyond $S_{\\text{far}}$ there is more quiescent room air, not a solid wall. To represent an effectively unbounded ambient and allow buoyancy-driven entrainment and exhaust with minimal reflection, one imposes a far-field/open boundary.\n- An Opening boundary fixes the static pressure to ambient, $p=p_{\\text{amb}}$, and imposes $T=T_{\\text{amb}}$ when $\\boldsymbol{u}\\cdot \\boldsymbol{n}<0$ (inflow), and a zero normal temperature gradient, $\\partial T/\\partial n=0$, when $\\boldsymbol{u}\\cdot \\boldsymbol{n}>0$ (outflow). This matches the intended “large, sealed, still room” context when the computational box is only a subdomain: the opening mimics the surrounding ambient away from the plume without introducing artificial solid walls. Using an Adiabatic No-Slip Wall at $S_{\\text{far}}$ would impose $\\boldsymbol{u}=\\boldsymbol{0}$ and $\\partial T/\\partial n=0$ there, which would unphysically confine and reflect the plume; using Symmetry would require a true plane of symmetry and parallel flow, which is not the case on all far boundaries.\n\nTherefore, the correct assignment is:\n- $S_{\\text{hot}}$: Isothermal No-Slip Wall,\n- $S_{\\text{floor}}$: Adiabatic No-Slip Wall,\n- $S_{\\text{far}}$: Opening.\n\nAmong the options provided, this corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1734331"}, {"introduction": "Boundary conditions do more than just contain the flow; they are where the governing fluid dynamics equations meet physical reality. This practice moves beyond simply selecting boundary types to quantitatively analyzing their impact on the flow field, specifically for a moving wall, a common feature in simulations of valves and pistons. By applying the Navier-Stokes equations directly at the fluid-solid interface, you will see how surface pressure gradients are determined by the boundary's motion and the fluid's viscous behavior [@problem_id:1734329].", "problem": "In a 2D Computational Fluid Dynamics (CFD) simulation, the transient flow of an incompressible fluid induced by a moving valve is being analyzed. The fluid has a constant density $\\rho$ and a constant dynamic viscosity $\\mu$. The valve's face is modeled as a rigid, flat wall, oriented parallel to the x-axis, that moves exclusively in the vertical y-direction. The position of this wall at any time $t$ is given by $y_w(t)$. The no-slip boundary condition is applied, meaning the fluid's velocity at the valve surface is identical to the velocity of the valve itself.\n\nThe vertical lift of the valve is governed by the profile $y_w(t) = A \\left(1 - \\cos(\\omega t)\\right)$, where $A$ and $\\omega$ are positive constants representing the maximum lift and angular frequency of the motion, respectively.\n\nAt a specific time $t_0$, a virtual sensor placed at a point $P$ on the center of the valve's face provides local flow data. Due to the symmetrical nature of the flow about the valve's center, the horizontal velocity component, $u$, is zero at point $P$. The sensor records the following values for the second spatial derivatives of the vertical velocity component, $v$:\n$$ \\left. \\frac{\\partial^2 v}{\\partial x^2} \\right|_{P, t_0} = -C_1 $$\n$$ \\left. \\frac{\\partial^2 v}{\\partial y^2} \\right|_{P, t_0} = C_2 $$\nwhere $C_1$ and $C_2$ are given positive constants.\n\nYou are given the following values:\n- Density, $\\rho = 850 \\text{ kg/m}^3$\n- Dynamic viscosity, $\\mu = 0.050 \\text{ Pa}\\cdot\\text{s}$\n- Maximum lift, $A = 2.5 \\text{ mm}$\n- Angular frequency, $\\omega = 100\\pi \\text{ rad/s}$\n- Time of interest, $t_0 = \\frac{1}{300} \\text{ s}$\n- Constant for x-derivative, $C_1 = 5.0 \\times 10^4 \\text{ m}^{-1}\\text{s}^{-1}$\n- Constant for y-derivative, $C_2 = 1.2 \\times 10^5 \\text{ m}^{-1}\\text{s}^{-1}$\n\nUsing this information, calculate the pressure gradient normal to the valve face, $\\frac{\\partial p}{\\partial y}$, at point $P$ at time $t_0$. Express your final answer in Pascals per meter (Pa/m), rounded to three significant figures.", "solution": "We use the incompressible Navier–Stokes equation in the vertical direction (no body forces assumed):\n$$\n\\rho\\left(\\frac{\\partial v}{\\partial t}+u\\frac{\\partial v}{\\partial x}+v\\frac{\\partial v}{\\partial y}\\right)=-\\frac{\\partial p}{\\partial y}+\\mu\\left(\\frac{\\partial^2 v}{\\partial x^2}+\\frac{\\partial^2 v}{\\partial y^2}\\right).\n$$\nAt the wall, by no-slip on a prescribed moving boundary, the fluid velocity equals the wall velocity, so the fluid particle at the wall has material acceleration equal to the wall acceleration:\n$$\n\\frac{D v}{D t}\\Big|_{P,t}=\\frac{d}{dt}y_{w}'(t)=y_{w}''(t).\n$$\nTherefore,\n$$\n\\rho\\,\\frac{D v}{D t}=-\\frac{\\partial p}{\\partial y}+\\mu\\left(\\frac{\\partial^2 v}{\\partial x^2}+\\frac{\\partial^2 v}{\\partial y^2}\\right)\n\\;\\;\\Longrightarrow\\;\\;\n\\frac{\\partial p}{\\partial y}=-\\rho\\,y_{w}''(t)+\\mu\\left(\\frac{\\partial^2 v}{\\partial x^2}+\\frac{\\partial^2 v}{\\partial y^2}\\right).\n$$\nThe wall motion is $y_{w}(t)=A\\left(1-\\cos(\\omega t)\\right)$, so\n$$\ny_{w}''(t)=A\\omega^{2}\\cos(\\omega t).\n$$\nAt the sensor location, we are given\n$$\n\\left.\\frac{\\partial^2 v}{\\partial x^2}\\right|_{P,t_{0}}=-C_{1},\\qquad\n\\left.\\frac{\\partial^2 v}{\\partial y^2}\\right|_{P,t_{0}}=C_{2},\n$$\nso\n$$\n\\left.\\left(\\frac{\\partial^2 v}{\\partial x^2}+\\frac{\\partial^2 v}{\\partial y^2}\\right)\\right|_{P,t_{0}}=C_{2}-C_{1}.\n$$\nHence, at $t_{0}$,\n$$\n\\left.\\frac{\\partial p}{\\partial y}\\right|_{P,t_{0}}=-\\rho\\,A\\omega^{2}\\cos(\\omega t_{0})+\\mu\\,(C_{2}-C_{1}).\n$$\nNow substitute the given data. First evaluate the wall acceleration term:\n$$\n\\omega t_{0}=100\\pi\\cdot\\frac{1}{300}=\\frac{\\pi}{3}\\;\\;\\Rightarrow\\;\\;\\cos(\\omega t_{0})=\\cos\\!\\left(\\frac{\\pi}{3}\\right)=\\frac{1}{2},\n$$\n$$\nA\\omega^{2}\\cos(\\omega t_{0})=A\\,(100\\pi)^{2}\\cdot\\frac{1}{2}\n=2.5\\times 10^{-3}\\cdot 10^{4}\\pi^{2}\\cdot\\frac{1}{2}\n=12.5\\,\\pi^{2}\\;\\text{m/s}^{2}.\n$$\nThus\n$$\n\\rho\\,A\\omega^{2}\\cos(\\omega t_{0})=850\\times 12.5\\,\\pi^{2}\\;\\text{Pa/m}\n=10625\\,\\pi^{2}\\;\\text{Pa/m}\\approx 1.048645\\times 10^{5}\\;\\text{Pa/m}.\n$$\nThe viscous term is\n$$\n\\mu\\,(C_{2}-C_{1})=0.050\\,(1.2\\times 10^{5}-5.0\\times 10^{4})\n=0.050\\times 7.0\\times 10^{4}=3.50\\times 10^{3}\\;\\text{Pa/m}.\n$$\nTherefore,\n$$\n\\left.\\frac{\\partial p}{\\partial y}\\right|_{P,t_{0}}=-1.048645\\times 10^{5}+3.50\\times 10^{3}\n=-1.01365\\times 10^{5}\\;\\text{Pa/m}.\n$$\nRounded to three significant figures:\n$$\n\\left.\\frac{\\partial p}{\\partial y}\\right|_{P,t_{0}}\\approx -1.01\\times 10^{5}\\;\\text{Pa/m}.\n$$", "answer": "$$\\boxed{-1.01 \\times 10^{5}}$$", "id": "1734329"}, {"introduction": "In many engineering applications, the goal is to simulate a device at a specific operating point, such as a target mass flow rate $\\dot{m}_{target}$, without knowing the exact boundary conditions that produce it. This advanced practice explores how to program boundary conditions to actively steer a simulation toward such a target. You will analyze a feedback control algorithm embedded within a pressure outlet, learning how to create \"smart\" boundaries that automate the process of characterising device performance [@problem_id:1734287].", "problem": "A Computational Fluid Dynamics (CFD) engineer is tasked with generating the performance curve for a new centrifugal pump design. The performance curve relates the pressure head generated by the pump to the mass flow rate through it. To do this, the engineer needs to run a series of steady-state simulations, each corresponding to a specific target mass flow rate.\n\nThe CFD model of the pump utilizes a \"mass flow inlet\" boundary condition and a specialized \"pressure outlet\" boundary condition. Instead of manually guessing the outlet pressure value for each desired mass flow rate, the engineer implements a custom algorithm within the outlet boundary condition. This algorithm automatically adjusts the outlet static pressure, $P_{out}$, during the simulation's iterative process to achieve a predefined target mass flow rate, $\\dot{m}_{target}$.\n\nThe algorithm works as follows: at the end of every block of $N$ solver iterations, the algorithm calculates the current mass flow rate at the outlet, $\\dot{m}_{current}$. It then updates the value of $P_{out}$ to be used for the next block of $N$ iterations. Let $P_{out, k}$ be the outlet pressure value used during the $k$-th block of iterations, and $\\dot{m}_{current, k}$ be the mass flow rate computed at the end of that block. The new pressure for the next block, $P_{out, k+1}$, is calculated based on $P_{out, k}$, $\\dot{m}_{current, k}$, and the constant $\\dot{m}_{target}$. A small, positive relaxation factor, $\\beta$, with units of pressure divided by mass flow rate (e.g., Pa$\\cdot$s/kg), is used to control the magnitude of the pressure correction.\n\nAssuming the physical behavior that an increase in the outlet back-pressure leads to a decrease in the mass flow rate through the pump, and vice versa, which of the following update schemes correctly describes an algorithm that will cause the computed mass flow rate to converge towards the target value?\n\nA. $P_{out, k+1} = P_{out, k} - \\beta (\\dot{m}_{target} - \\dot{m}_{current, k})$\n\nB. $P_{out, k+1} = P_{out, k} + \\beta (\\dot{m}_{target} - \\dot{m}_{current, k})$\n\nC. $P_{out, k+1} = P_{out, k} + \\beta (\\dot{m}_{current, k} / \\dot{m}_{target})$\n\nD. $P_{out, k+1} = P_{out, k} - \\beta |\\dot{m}_{target} - \\dot{m}_{current, k}|$\n\nE. $P_{out, k+1} = \\beta (\\dot{m}_{target} / \\dot{m}_{current, k})$", "solution": "Let the pump’s mass flow rate be a function of the outlet pressure, $\\dot{m}=f(P_{out})$, where the given physical behavior implies $f^{\\prime}(P_{out})<0$ (increasing back-pressure decreases flow).\n\nDefine the mass flow error at the end of block $k$ as\n$$\ne_{k}=\\dot{m}_{target}-\\dot{m}_{current,k}=\\dot{m}_{target}-f(P_{out,k}).\n$$\nWe seek an update $P_{out,k+1}=P_{out,k}+u_{k}$ that drives $e_{k}\\to 0$. Perform a first-order Taylor expansion of the flow at the next iterate:\n$$\n\\dot{m}_{current,k+1}=f(P_{out,k+1})\\approx f(P_{out,k})+f^{\\prime}(P_{out,k})u_{k}.\n$$\nTherefore the next error satisfies\n$$\ne_{k+1}=\\dot{m}_{target}-\\dot{m}_{current,k+1}\\approx \\left[\\dot{m}_{target}-f(P_{out,k})\\right]-f^{\\prime}(P_{out,k})u_{k}=e_{k}-f^{\\prime}(P_{out,k})u_{k}.\n$$\nChoose a proportional control with relaxation factor $\\beta>0$ and set\n$$\nu_{k}=-\\beta e_{k}.\n$$\nThen\n$$\ne_{k+1}\\approx e_{k}-f^{\\prime}(P_{out,k})(-\\beta e_{k})=\\left(1+\\beta f^{\\prime}(P_{out,k})\\right)e_{k}.\n$$\nSince $f^{\\prime}(P_{out,k})<0$, selecting $\\beta>0$ sufficiently small ensures $\\left|1+\\beta f^{\\prime}(P_{out,k})\\right|<1$, giving a contraction and hence convergence of $\\dot{m}_{current,k}$ to $\\dot{m}_{target}$. This update corresponds to\n$$\nP_{out,k+1}=P_{out,k}-\\beta\\left(\\dot{m}_{target}-\\dot{m}_{current,k}\\right),\n$$\nwhich is option A. This also matches the physical sign logic: if $\\dot{m}_{current,k}<\\dot{m}_{target}$, the term in parentheses is positive and $P_{out}$ is decreased, increasing flow; if $\\dot{m}_{current,k}>\\dot{m}_{target}$, $P_{out}$ is increased, decreasing flow.\n\nDimensional consistency further supports A: $\\beta$ has units of pressure per mass flow rate, and multiplying by $(\\dot{m}_{target}-\\dot{m}_{current,k})$ (units of mass flow rate) yields pressure, matching $P_{out}$.\n\nBy contrast:\n- Option B uses the opposite sign, yielding $e_{k+1}\\approx(1-\\beta f^{\\prime})e_{k}$ with $f^{\\prime}<0$, so $1-\\beta f^{\\prime}>1$ and the error grows (diverges).\n- Option C adds $\\beta(\\dot{m}_{current,k}/\\dot{m}_{target})$ which is nonzero even when $e_{k}=0$, and its additive term has incorrect units (pressure times time per mass), not pressure.\n- Option D always subtracts $\\beta|\\dot{m}_{target}-\\dot{m}_{current,k}|$, decreasing $P_{out}$ irrespective of the sign of the error, which does not generally drive $e_{k}\\to 0$.\n- Option E sets $P_{out,k+1}$ proportional to a dimensionless ratio, giving the wrong units for $P_{out}$ and no fixed point at the target.\n\nTherefore, only A yields the correct feedback direction, dimensional consistency, and local convergence under a small positive $\\beta$.", "answer": "$$\\boxed{A}$$", "id": "1734287"}]}