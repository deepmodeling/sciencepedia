{"hands_on_practices": [{"introduction": "A primary application of Time-Dependent Density Functional Theory (TD-DFT) is to predict the photophysical properties of molecules, connecting computational results to experimental spectroscopy. This exercise guides you through calculating the Stokes shift, the energy difference between a molecule's absorption and emission maxima. By using energies calculated at both the ground-state ($S_0$) and excited-state ($S_1$) optimized geometries, you will apply the Franck-Condon principle to model a complete photoexcitation and relaxation cycle, providing a direct link between theoretical energies and observable fluorescence phenomena [@problem_id:1417512].", "problem": "A computational chemist is investigating the photophysical properties of a newly synthesized organic molecule intended for use in Organic Light-Emitting Diodes (OLEDs). The goal is to predict the Stokes shift, which is the difference in energy between the maximum of the absorption and emission spectra. This is achieved by modeling the molecule's behavior upon photoexcitation using quantum chemical methods.\n\nThe computational protocol involves the following steps, based on Density Functional Theory (DFT) for the ground state and Time-Dependent Density Functional Theory (TD-DFT) for the excited state:\n1.  The geometry of the molecule is optimized in its electronic ground state ($S_0$), yielding the equilibrium geometry $R_0$.\n2.  The geometry is then optimized in its first singlet excited state ($S_1$), yielding the relaxed excited-state equilibrium geometry $R_1$.\n\nA series of single-point energy calculations are then performed. The total electronic energies from these calculations are provided below. Note that $E(S_i, R_j)$ denotes the energy of the electronic state $S_i$ calculated at the fixed nuclear geometry $R_j$.\n\n-   Energy of the ground state at the optimized ground state geometry, $E(S_0, R_0) = -450.1234$ Hartrees.\n-   Energy of the first excited state at the optimized ground state geometry, $E(S_1, R_0) = -449.9948$ Hartrees.\n-   Energy of the first excited state at the optimized excited state geometry, $E(S_1, R_1) = -449.9985$ Hartrees.\n-   Energy of the ground state at the optimized excited state geometry, $E(S_0, R_1) = -450.1197$ Hartrees.\n\nUsing the provided data and the conversion factor 1 Hartree = 27.2114 eV, calculate the Stokes shift for this molecule. Express your answer in electronvolts (eV), rounded to three significant figures.", "solution": "The Stokes shift is defined as the difference between the vertical absorption energy (from $S_{0}$ at $R_{0}$ to $S_{1}$ at $R_{0}$) and the vertical emission energy (from $S_{1}$ at $R_{1}$ to $S_{0}$ at $R_{1}$) according to the Franck–Condon principle.\n\nDefine the absorption energy:\n$$\nE_{\\text{abs}}=\\left[E(S_{1},R_{0})-E(S_{0},R_{0})\\right].\n$$\nSubstitute the given values (in Hartrees):\n$$\nE_{\\text{abs}} = \\left[-449.9948 - (-450.1234)\\right] = 0.1286.\n$$\n\nDefine the emission energy:\n$$\nE_{\\text{em}}=\\left[E(S_{1},R_{1})-E(S_{0},R_{1})\\right].\n$$\nSubstitute the given values (in Hartrees):\n$$\nE_{\\text{em}} = \\left[-449.9985 - (-450.1197)\\right] = 0.1212.\n$$\n\nThe Stokes shift in energy units is then:\n$$\n\\Delta E_{\\text{Stokes}} = E_{\\text{abs}} - E_{\\text{em}} = 0.1286 - 0.1212 = 0.0074 \\text{ Hartree}.\n$$\n\nConvert Hartrees to electronvolts using $1 \\text{ Hartree} = 27.2114 \\text{ eV}$:\n$$\n\\Delta E_{\\text{Stokes}} (\\text{eV}) = 0.0074 \\times 27.2114 = 0.20136436 \\text{ eV}.\n$$\n\nRounded to three significant figures:\n$$\n\\Delta E_{\\text{Stokes}} = 0.201 \\text{ eV}.\n$$", "answer": "$$\\boxed{0.201}$$", "id": "1417512"}, {"introduction": "The accuracy of any quantum chemical calculation is critically dependent on the choice of basis set. This practice provides a hands-on model to explore the sensitivity of TD-DFT excitation energies to this choice, dissecting the influence of both basis set size (cardinality, $X$) and the inclusion of diffuse functions ($d$). By applying a quantitative model to the azobenzene chromophore, you will learn to appreciate how these practical decisions affect calculated results and develop an intuition for the concept of basis set convergence for excited states [@problem_id:2466169].", "problem": "You are tasked with modeling the sensitivity of the lowest singlet excitation energy of the azobenzene chromophore, computed within Time-Dependent Density Functional Theory (TD-DFT), to the choice of orbital basis set. Consider a single dominant orbital transition and adopt the Tamm-Dancoff approximation (TDA) of linear-response TD-DFT. In this one-transition TDA model, the excitation energy is defined as the sum of the Kohn–Sham orbital energy difference and the effective kernel coupling, both expressed in electronvolts. For a basis set characterized by an effective cardinal number and an augmentation flag, use the following model for basis-set incompleteness:\n1. The Kohn–Sham gap is given by\n$$\\Delta \\varepsilon(X,d) = \\Delta \\varepsilon_{\\infty} + \\frac{\\alpha}{X^{p}} - \\beta\\, d,$$\n2. The effective kernel coupling is given by\n$$K(X,d) = K_{\\infty} + \\frac{\\gamma}{X^{q}} - \\delta\\, d,$$\n3. The Tamm–Dancoff excitation energy is then\n$$\\omega(X,d) = \\Delta \\varepsilon(X,d) + K(X,d).$$\n\nHere, $X$ is a positive real number representing the effective zeta cardinality of the basis, and $d \\in \\{0,1\\}$ indicates the presence ($d=1$) or absence ($d=0$) of diffuse augmentation functions. All energies are in electronvolts (eV). The parameters $\\Delta \\varepsilon_{\\infty}$, $K_{\\infty}$, $\\alpha$, $\\beta$, $\\gamma$, $\\delta$, $p$, and $q$ are given per test case. Use the following mapping for the basis sets:\n- $6\\text{-}31\\text{G}^*$: $(X,d) = (2,0)$,\n- $\\text{cc-pVTZ}$: $(X,d) = (3,0)$,\n- $\\text{aug-cc-pVTZ}$: $(X,d) = (3,1)$.\n\nDefine the sensitivity of the excitation energy between two basis sets $A$ and $B$ as\n$$S(A,B) = \\left|\\omega(X_A,d_A) - \\omega(X_B,d_B)\\right|.$$\n\nFor each test case below, compute two sensitivities in electronvolts:\n- $S(6\\text{-}31\\text{G}^*, \\text{aug-cc-pVTZ})$,\n- $S(\\text{cc-pVTZ}, \\text{aug-cc-pVTZ})$.\n\nExpress all final sensitivity values in eV, rounded to four decimal places.\n\nTest suite (each line is one independent test case with parameters in eV unless dimensionless as stated):\n- Test case 1 (azobenzene $n \\rightarrow \\pi^*$-like): $\\Delta \\varepsilon_{\\infty} = 2.30$, $K_{\\infty} = 0.20$, $\\alpha = 0.90$, $\\beta = 0.05$, $\\gamma = 0.30$, $\\delta = 0.02$, $p = 2$, $q = 3$.\n- Test case 2 (azobenzene $\\pi \\rightarrow \\pi^*$-like): $\\Delta \\varepsilon_{\\infty} = 4.10$, $K_{\\infty} = 0.35$, $\\alpha = 0.70$, $\\beta = 0.03$, $\\gamma = 0.20$, $\\delta = 0.01$, $p = 2$, $q = 3$.\n- Test case 3 (diffuse, Rydberg-like edge case): $\\Delta \\varepsilon_{\\infty} = 3.60$, $K_{\\infty} = 0.10$, $\\alpha = 1.50$, $\\beta = 0.10$, $\\gamma = 0.50$, $\\delta = 0.05$, $p = 2$, $q = 3$.\n\nYour program must compute, for each test case in the order given, the pair of sensitivities in the order\n$[S(6\\text{-}31\\text{G}^*, \\text{aug-cc-pVTZ}), S(\\text{cc-pVTZ}, \\text{aug-cc-pVTZ})]$,\nthen aggregate the results for all test cases into a single list in the following order:\n$$[S_1^{(6\\text{-}31\\text{G}^*,\\text{aug})}, S_1^{(\\text{cc},\\text{aug})}, S_2^{(6\\text{-}31\\text{G}^*,\\text{aug})}, S_2^{(\\text{cc},\\text{aug})}, S_3^{(6\\text{-}31\\text{G}^*,\\text{aug})}, S_3^{(\\text{cc},\\text{aug})}].$$\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each number rounded to four decimal places (e.g., \"[0.1234,0.0567,0.8910,0.0001,0.2222,0.3333]\"). All values must be in eV. No other text should be printed.", "solution": "The problem statement submitted for analysis is deemed valid. It is scientifically grounded within the domain of computational chemistry modeling, well-posed with all necessary data and definitions, and expressed in objective, formal language. It does not violate any of the criteria for invalidity. We shall, therefore, proceed with a complete solution.\n\nThe objective is to compute the sensitivity of a model Time-Dependent Density Functional Theory (TD-DFT) excitation energy to changes in the orbital basis set. The model is formulated within the Tamm-Dancoff approximation (TDA) for a single dominant orbital transition.\n\nThe total excitation energy, $\\omega$, is a function of the basis set's effective zeta cardinality, $X$, and the presence of diffuse functions, indicated by $d \\in \\{0, 1\\}$. It is given by the sum of the Kohn-Sham orbital energy gap, $\\Delta\\varepsilon(X,d)$, and the effective kernel coupling, $K(X,d)$.\n$$\n\\omega(X,d) = \\Delta\\varepsilon(X,d) + K(X,d)\n$$\nThe components are defined by the following empirical models:\n$$\n\\Delta\\varepsilon(X,d) = \\Delta\\varepsilon_{\\infty} + \\frac{\\alpha}{X^{p}} - \\beta\\,d\n$$\n$$\nK(X,d) = K_{\\infty} + \\frac{\\gamma}{X^{q}} - \\delta\\,d\n$$\nCombining these terms yields the complete expression for the excitation energy:\n$$\n\\omega(X,d) = (\\Delta\\varepsilon_{\\infty} + K_{\\infty}) + \\frac{\\alpha}{X^{p}} + \\frac{\\gamma}{X^{q}} - (\\beta + \\delta)d\n$$\nHere, $\\Delta\\varepsilon_{\\infty}$ and $K_{\\infty}$ represent the complete basis set limits of the orbital gap and kernel coupling, respectively. The parameters $\\alpha, \\beta, \\gamma, \\delta, p, q$ are constants for a given electronic transition. All energy quantities ($\\omega, \\Delta\\varepsilon, K, \\alpha, \\beta, \\gamma, \\delta$) are expressed in electronvolts ($eV$).\n\nThe problem provides a mapping from specific, named basis sets to the parameters $(X,d)$:\n- Basis A ($6\\text{-}31\\text{G}^*$): $(X_A, d_A) = (2, 0)$\n- Basis B ($\\text{cc-pVTZ}$): $(X_B, d_B) = (3, 0)$\n- Basis C ($\\text{aug-cc-pVTZ}$): $(X_C, d_C) = (3, 1)$\n\nThe sensitivity $S$ between two basis sets, for instance $M$ and $N$, is defined as the absolute difference in their respective excitation energies:\n$$\nS(M,N) = |\\omega(X_M, d_M) - \\omega(X_N, d_N)|\n$$\nWe are required to compute two specific sensitivities for each test case:\n1. $S_1 = S(6\\text{-}31\\text{G}^*, \\text{aug-cc-pVTZ}) = |\\omega(X_A, d_A) - \\omega(X_C, d_C)| = |\\omega(2, 0) - \\omega(3, 1)|$\n2. $S_2 = S(\\text{cc-pVTZ}, \\text{aug-cc-pVTZ}) = |\\omega(X_B, d_B) - \\omega(X_C, d_C)| = |\\omega(3, 0) - \\omega(3, 1)|$\n\nLet us analyze the component of the sensitivity $S_2$. Notice that $X_B = X_C = 3$. The expression simplifies significantly:\n\\begin{align*}\nS_2 &= |\\omega(3, 0) - \\omega(3, 1)| \\\\\n&= \\left| \\left( (\\Delta\\varepsilon_{\\infty} + K_{\\infty}) + \\frac{\\alpha}{3^{p}} + \\frac{\\gamma}{3^{q}} - (\\beta + \\delta) \\cdot 0 \\right) - \\left( (\\Delta\\varepsilon_{\\infty} + K_{\\infty}) + \\frac{\\alpha}{3^{p}} + \\frac{\\gamma}{3^{q}} - (\\beta + \\delta) \\cdot 1 \\right) \\right| \\\\\n&= | (\\beta + \\delta) |\n\\end{align*}\nSince all parameters are given as positive, $S_2 = \\beta + \\delta$. This simplifies the calculation for one of the two required values per test case.\n\nThe computational procedure for each test case is as follows:\n1. Retrieve the eight model parameters: $\\Delta\\varepsilon_{\\infty}, K_{\\infty}, \\alpha, \\beta, \\gamma, \\delta, p, q$.\n2. Calculate the excitation energy $\\omega(X,d)$ for each of the three basis sets using the full formula:\n   - $\\omega_A = \\omega(2, 0) = (\\Delta\\varepsilon_{\\infty} + K_{\\infty}) + \\frac{\\alpha}{2^{p}} + \\frac{\\gamma}{2^{q}}$\n   - $\\omega_B = \\omega(3, 0) = (\\Delta\\varepsilon_{\\infty} + K_{\\infty}) + \\frac{\\alpha}{3^{p}} + \\frac{\\gamma}{3^{q}}$\n   - $\\omega_C = \\omega(3, 1) = (\\Delta\\varepsilon_{\\infty} + K_{\\infty}) + \\frac{\\alpha}{3^{p}} + \\frac{\\gamma}{3^{q}} - (\\beta + \\delta)$\n3. Calculate the first sensitivity: $S_1 = |\\omega_A - \\omega_C|$.\n4. Calculate the second sensitivity: $S_2 = |\\omega_B - \\omega_C| = \\beta + \\delta$.\n5. Round both $S_1$ and $S_2$ to four decimal places.\n6. Collect the results from all test cases into a single list in the specified order.\n\nThis algorithm will be implemented to process the provided test suite.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the sensitivity of TD-DFT excitation energies to basis set choice\n    based on a provided model.\n    \"\"\"\n\n    # Define the basis set mappings from name to (X, d) parameters.\n    basis_sets = {\n        \"6-31G*\": (2.0, 0),\n        \"cc-pVTZ\": (3.0, 0),\n        \"aug-cc-pVTZ\": (3.0, 1)\n    }\n\n    # Define the test cases with their specific parameters.\n    # Parameters: de_inf, k_inf, alpha, beta, gamma, delta, p, q\n    test_cases = [\n        # Test case 1\n        (2.30, 0.20, 0.90, 0.05, 0.30, 0.02, 2.0, 3.0),\n        # Test case 2\n        (4.10, 0.35, 0.70, 0.03, 0.20, 0.01, 2.0, 3.0),\n        # Test case 3\n        (3.60, 0.10, 1.50, 0.10, 0.50, 0.05, 2.0, 3.0),\n    ]\n\n    all_results = []\n\n    def calculate_omega(X, d, params):\n        \"\"\"\n        Calculates the excitation energy omega(X, d) for a given set of parameters.\n        \n        Args:\n            X (float): Effective zeta cardinality.\n            d (int): Diffuse function flag (0 or 1).\n            params (tuple): A tuple containing the model parameters in the order\n                            (de_inf, k_inf, alpha, beta, gamma, delta, p, q).\n        \n        Returns:\n            float: The calculated excitation energy omega in eV.\n        \"\"\"\n        de_inf, k_inf, alpha, beta, gamma, delta, p, q = params\n        \n        delta_eps = de_inf + (alpha / (X**p)) - (beta * d)\n        K = k_inf + (gamma / (X**q)) - (delta * d)\n        \n        return delta_eps + K\n\n    for case_params in test_cases:\n        # Get the (X, d) tuples for the basis sets of interest\n        x_a, d_a = basis_sets[\"6-31G*\"]\n        x_b, d_b = basis_sets[\"cc-pVTZ\"]\n        x_c, d_c = basis_sets[\"aug-cc-pVTZ\"]\n\n        # Calculate the excitation energy for each basis set\n        omega_a = calculate_omega(x_a, d_a, case_params)\n        omega_b = calculate_omega(x_b, d_b, case_params)\n        omega_c = calculate_omega(x_c, d_c, case_params)\n\n        # Calculate the two required sensitivities\n        # S1 = S(6-31G*, aug-cc-pVTZ)\n        sensitivity_1 = np.abs(omega_a - omega_c)\n\n        # S2 = S(cc-pVTZ, aug-cc-pVTZ)\n        sensitivity_2 = np.abs(omega_b - omega_c)\n\n        # Append the formatted results to the final list\n        all_results.append(f\"{sensitivity_1:.4f}\")\n        all_results.append(f\"{sensitivity_2:.4f}\")\n\n    # Print the final result in the exact specified format\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2466169"}, {"introduction": "While powerful, TD-DFT is not without its systematic failures. This advanced exercise confronts one of its most famous limitations: the dramatic underestimation of long-range charge-transfer (CT) excitation energies. You will derive from first principles why standard approximate functionals, like those of the Generalized Gradient Approximation (GGA) family, fail to describe the correct physics of an electron moving between spatially separated donor and acceptor regions [@problem_id:2466214]. This practice moves beyond using TD-DFT as a black box, fostering a deeper understanding of its theoretical foundations and highlighting the critical importance of choosing the right method for a specific chemical problem.", "problem": "You are asked to write a complete, runnable program that demonstrates, within a minimal but scientifically grounded model, how Time-Dependent Density Functional Theory (TD-DFT) using a standard Generalized Gradient Approximation (GGA) functional can wrongly predict a spuriously low-energy charge-transfer excitation in a spatially separated donor–acceptor pair. Your program must implement the following logic from first principles.\n\nBegin from the fundamental definitions of ionization potential and electron affinity in density functional theory (DFT), and from the electrostatic interaction of separated charges. Use these principles to derive an expression for the lowest donor-to-acceptor charge-transfer excitation energy at large separation. Then, using linear-response TD-DFT and the fact that for spatially nonoverlapping orbitals the adiabatic semilocal Hartree–exchange–correlation kernel yields vanishing coupling, derive the corresponding prediction made by a semilocal GGA functional. Finally, connect the Kohn–Sham orbital energy difference to the fundamental gap by including the derivative discontinuity. Do not use or quote any pre-existing shortcut formulas in your derivation; instead, reason from the following foundational bases only:\n- Fundamental definitions: the ionization potential $I$ and electron affinity $A$ defined via total energy differences, and the electrostatic interaction energy of two unit charges separated by a distance $R$.\n- Linear-response theory core ideas: that the excitation energy arises from a response pole determined by a noninteracting transition energy and a coupling term, and that for charge-transfer between spatially separated fragments with negligible orbital overlap, a local and adiabatic kernel provides negligible long-range coupling.\n- The well-tested conceptual fact that the many-body fundamental gap is related to the Kohn–Sham gap by the derivative discontinuity.\n\nImplement a minimal two-fragment model with the following parameters for each test case:\n- Donor ionization potential $I_D$ in Hartree.\n- Acceptor electron affinity $A_A$ in Hartree.\n- Center-to-center separation $R$ in bohr.\n- An effective positive derivative-discontinuity parameter $\\Delta_{\\mathrm{xc}}$ in Hartree that captures the gap underestimation characteristic of a semilocal GGA functional.\n\nFor each test case, compute:\n1. The physically motivated large-separation charge-transfer excitation energy, based on the above principles, expressed in Hartree and denoted here as $E_{\\mathrm{true}}$.\n2. The adiabatic semilocal GGA TD-DFT prediction for the same charge-transfer excitation, expressed in Hartree and denoted here as $E_{\\mathrm{GGA}}$.\n3. The signed error $\\Delta E = E_{\\mathrm{GGA}} - E_{\\mathrm{true}}$ in Hartree.\n4. A boolean flag that is true if and only if the GGA prediction is spuriously low, defined by the strict inequality $E_{\\mathrm{GGA}} < E_{\\mathrm{true}}$.\n\nYour program must use the following fixed test suite of parameter tuples $(I_D,A_A,R,\\Delta_{\\mathrm{xc}})$, in atomic units (Hartree for energies, bohr for distances):\n- Test 1 (general separated pair): $(0.30, 0.08, 30.0, 0.12)$.\n- Test 2 (very large separation): $(0.30, 0.08, 200.0, 0.12)$.\n- Test 3 (small fundamental gap leading to near-zero GGA excitation): $(0.20, 0.08, 25.0, 0.12)$.\n- Test 4 (numerical balance where the underestimation equals the missing electrostatics at this $R$): $(0.25, 0.05, 8.\\overline{3}, 0.12)$, where $8.\\overline{3}$ denotes $25/3$ in bohr.\n\nAll energies must be expressed in Hartree and rounded to six decimal places. For each test case, your program must output the four values $E_{\\mathrm{true}}$, $E_{\\mathrm{GGA}}$, $\\Delta E$, and the boolean flag, in that order. Aggregate the results for all test cases into a single flat list. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[result1,result2,result3,...]\").\n\nAngle units are not involved. No external input is permitted; the program must be fully self-contained and produce the required single-line output upon execution.", "solution": "The problem statement is scientifically grounded, well-posed, and contains all necessary information to derive a unique solution. It describes a well-known failure mode of common density functional approximations. The problem is therefore deemed valid, and a solution will be constructed based on the provided first principles.\n\nWe begin by deriving the expression for the physically correct charge-transfer ($CT$) excitation energy at large separation, denoted $E_{\\mathrm{true}}$. A $CT$ excitation involves moving an electron from a donor molecule, $D$, to an acceptor molecule, $A$, separated by a distance $R$. This process can be represented as $D^0A^0 \\rightarrow D^+A^-$. The energy of this excitation, $\\omega_{CT}$, is the difference in the total energies of the final and initial states:\n$$ \\omega_{CT} = E(D^+A^-) - E(D^0A^0) $$\nIn the limit of large separation $R$, the energy of a combined system can be approximated as the sum of the energies of its non-interacting constituent fragments plus their classical electrostatic interaction energy. For the initial neutral state, this is:\n$$ E(D^0A^0) \\approx E(D^0) + E(A^0) $$\nFor the final ionic state, the energy includes the electrostatic attraction between the newly formed ions:\n$$ E(D^+A^-) \\approx E(D^+) + E(A^-) + E_{\\mathrm{int}} $$\nHere, $E(X)$ represents the total energy of species $X$. The interaction energy, $E_{\\mathrm{int}}$, between a point charge of $+1e$ on $D^+$ and $-1e$ on $A^-$ is given by Coulomb's law. In atomic units, where energy is in Hartree and distance is in bohr, this is:\n$$ E_{\\mathrm{int}} = -\\frac{1}{R} $$\nBy substituting these expressions into the equation for $\\omega_{CT}$, we obtain:\n$$ \\omega_{CT} \\approx \\left( E(D^+) + E(A^-) - \\frac{1}{R} \\right) - \\left( E(D^0) + E(A^0) \\right) $$\nRearranging the terms to group them by species yields:\n$$ \\omega_{CT} \\approx \\left( E(D^+) - E(D^0) \\right) + \\left( E(A^-) - E(A^0) \\right) - \\frac{1}{R} $$\nThe terms in parentheses correspond to fundamental definitions. The ionization potential of the donor, $I_D$, is the energy required to remove an electron:\n$$ I_D = E(D^+) - E(D^0) $$\nThe electron affinity of the acceptor, $A_A$, is the energy released upon capturing an electron, defined as:\n$$ A_A = E(A^0) - E(A^-) $$\nFrom this definition, it follows that $E(A^-) - E(A^0) = -A_A$. By substituting these definitions for $I_D$ and $A_A$, we arrive at the expression for the true large-separation charge-transfer excitation energy:\n$$ E_{\\mathrm{true}} = I_D - A_A - \\frac{1}{R} $$\n\nNext, we derive the corresponding prediction from adiabatic semilocal Time-Dependent Density Functional Theory ($TD-DFT$), denoted $E_{\\mathrm{GGA}}$. Within linear-response $TD-DFT$, the excitation energies $\\omega$ are obtained as the eigenvalues of a matrix equation. For a single excitation from an occupied Kohn-Sham ($KS$) orbital $\\phi_i$ to a virtual $KS$ orbital $\\phi_a$, the excitation energy in the adiabatic approximation is given by:\n$$ \\omega_{ia} = \\varepsilon_a - \\varepsilon_i + K_{ia,ia} $$\nwhere $\\varepsilon_i$ and $\\varepsilon_a$ are the energies of the $KS$ orbitals, and $K_{ia,ia}$ is the coupling matrix element. This element depends on the Hartree-exchange-correlation ($HXC$) kernel, $f_{HXC}$:\n$$ K_{ia,ia} = \\iint \\phi_i^*(\\mathbf{r})\\phi_a(\\mathbf{r}) f_{HXC}(\\mathbf{r}, \\mathbf{r}') \\phi_a^*(\\mathbf{r}')\\phi_i(\\mathbf{r}') d\\mathbf{r} d\\mathbf{r}' $$\nFor the $CT$ excitation under consideration, the occupied orbital $\\phi_i$ is the highest occupied molecular orbital of the donor ($HOMO_D$) and the virtual orbital $\\phi_a$ is the lowest unoccupied molecular orbital of the acceptor ($LUMO_A$). At large separation $R$, these orbitals are spatially isolated, and their overlap product, $\\phi_i(\\mathbf{r})\\phi_a(\\mathbf{r})$, is negligible for all $\\mathbf{r}$.\nFor a semilocal functional, such as a Generalized Gradient Approximation ($GGA$), the kernel $f_{HXC}^{GGA}(\\mathbf{r}, \\mathbf{r}')$ is effectively local, meaning it vanishes rapidly as the distance $|\\mathbf{r} - \\mathbf{r}'|$ increases. The combination of a local kernel and vanishing orbital overlap causes the coupling integral $K_{ia,ia}$ to become zero:\n$$ K_{ia,ia}^{GGA} \\approx 0 $$\nConsequently, the $TD-GGA$ excitation energy spuriously reduces to the simple difference in the energies of the $KS$ orbitals involved:\n$$ E_{\\mathrm{GGA}} = \\omega_{CT}^{GGA} \\approx \\varepsilon_{LUMO,A} - \\varepsilon_{HOMO,D} $$\nTo make this expression useful, we must relate this $KS$ orbital energy gap to the physical quantities $I_D$ and $A_A$. The fundamental many-body gap of the combined $D-A$ system is $E_{gap} = I_D - A_A$. The corresponding $KS$ gap is $\\varepsilon_{gap}^{KS} = \\varepsilon_{LUMO,A} - \\varepsilon_{HOMO,D}$. For an exact functional, these quantities are related via the derivative discontinuity of the exchange-correlation potential, $\\Delta_{xc}$:\n$$ E_{gap} = \\varepsilon_{gap}^{KS} + \\Delta_{xc} \\implies I_D - A_A = (\\varepsilon_{LUMO,A} - \\varepsilon_{HOMO,D}) + \\Delta_{xc} $$\nApproximate functionals like $GGA$ are known to suffer from a systematic error that effectively corresponds to a missing derivative discontinuity. The problem provides an effective parameter, $\\Delta_{\\mathrm{xc}} > 0$, to model this deficiency. Rearranging the equation for the $KS$ gap as predicted within a $GGA$ framework gives:\n$$ \\varepsilon_{LUMO,A}^{GGA} - \\varepsilon_{HOMO,D}^{GGA} = (I_D - A_A) - \\Delta_{\\mathrm{xc}} $$\nThis provides the final expression for the $TD-GGA$ charge-transfer excitation energy:\n$$ E_{\\mathrm{GGA}} = I_D - A_A - \\Delta_{\\mathrm{xc}} $$\nThis result incorrectly shows the excitation energy approaching a constant value at large $R$, completely missing the correct $-1/R$ asymptotic behavior.\n\nFinally, we compute the signed error $\\Delta E$ and establish the condition for a spuriously low prediction. The error is the difference between the $GGA$ value and the true value:\n$$ \\Delta E = E_{\\mathrm{GGA}} - E_{\\mathrm{true}} = (I_D - A_A - \\Delta_{\\mathrm{xc}}) - \\left(I_D - A_A - \\frac{1}{R}\\right) $$\n$$ \\Delta E = \\frac{1}{R} - \\Delta_{\\mathrm{xc}} $$\nThe $GGA$ prediction is spuriously low if and only if $E_{\\mathrm{GGA}} < E_{\\mathrm{true}}$, which implies $\\Delta E < 0$. This gives the condition:\n$$ \\frac{1}{R} - \\Delta_{\\mathrm{xc}} < 0 \\implies \\frac{1}{R} < \\Delta_{\\mathrm{xc}} $$\nAs separation $R$ increases, $1/R$ decreases. For any system with a non-zero gap-underestimation error ($\\Delta_{\\mathrm{xc}} > 0$), there exists a separation beyond which this inequality holds, demonstrating the fundamental failure of adiabatic semilocal functionals for describing long-range charge transfer. The following program implements these derived formulas.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the true and TD-GGA charge-transfer excitation energies for a\n    series of donor-acceptor pairs to demonstrate the failure of semilocal DFT.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each tuple is (I_D, A_A, R, delta_xc) in atomic units.\n    test_cases = [\n        # Test 1: General separated pair\n        (0.30, 0.08, 30.0, 0.12),\n        # Test 2: Very large separation\n        (0.30, 0.08, 200.0, 0.12),\n        # Test 3: Small fundamental gap\n        (0.20, 0.08, 25.0, 0.12),\n        # Test 4: Numerical balance point\n        (0.25, 0.05, 25.0/3.0, 0.12),\n    ]\n\n    results = []\n    for case in test_cases:\n        I_D, A_A, R, delta_xc = case\n        \n        # 1. Calculate the physically motivated charge-transfer energy, E_true.\n        # This is derived from E_true = I_D - A_A - 1/R.\n        E_true = I_D - A_A - 1.0/R\n        \n        # 2. Calculate the adiabatic semilocal GGA TD-DFT prediction, E_GGA.\n        # This is derived from E_GGA = I_D - A_A - delta_xc.\n        E_gga = I_D - A_A - delta_xc\n        \n        # 3. Calculate the signed error, delta_E.\n        # This is delta_E = E_GGA - E_true, which simplifies to 1/R - delta_xc.\n        delta_E = 1.0/R - delta_xc\n\n        # 4. Determine if the GGA prediction is spuriously low.\n        # This is true if E_GGA < E_true.\n        is_spurious = E_gga < E_true\n\n        # Append the four required results for this test case.\n        # Energies are rounded to six decimal places.\n        results.append(np.round(E_true, 6))\n        results.append(np.round(E_gga, 6))\n        results.append(np.round(delta_E, 6))\n        results.append(is_spurious)\n        \n    # Final print statement in the exact required format.\n    # The boolean `True`/`False` is converted to string \"True\"/\"False\".\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2466214"}]}