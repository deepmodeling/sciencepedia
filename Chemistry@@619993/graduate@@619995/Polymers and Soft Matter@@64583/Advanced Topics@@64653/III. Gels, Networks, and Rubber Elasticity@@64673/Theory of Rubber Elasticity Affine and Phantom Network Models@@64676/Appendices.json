{"hands_on_practices": [{"introduction": "This exercise provides a foundational, quantitative comparison between the affine and phantom network models. By calculating the shear modulus $G$ for a well-defined network, you will directly engage with the mathematical consequences of their differing physical assumptions. This practice is essential for building a concrete understanding of how network connectivity, specifically the junction functionality $f$, dictates the macroscopic elastic response in these two limiting theoretical frameworks.", "problem": "An ideal, dry elastomer network is formed from tetrafunctional crosslink junctions in the melt state and then quenched to fix topology. The network is isotropic, incompressible under shear, and the strands between crosslinks can be modeled as Gaussian chains. The density of elastically active network strands is $\\nu = 5\\ \\mathrm{mol/m^{3}}$ at temperature $T = 298\\ \\mathrm{K}$. Consider two limiting network elasticity models:\n\n- In the affine network model, crosslink junctions are constrained to follow the macroscopic deformation.\n- In the phantom network model, crosslink junctions undergo thermal fluctuations about their mean positions due to the absence of surrounding matrix constraints; account for how these fluctuations reduce the number of independent constraints per junction of functionality $f$.\n\nStarting from the entropic elasticity of Gaussian chains and the definition of shear modulus as the small-strain limit relating shear stress to shear strain, derive expressions for the shear modulus $G$ in each model and evaluate them for $f = 4$. Then quantify the reduction factor, defined as the ratio of the phantom-model modulus to the affine-model modulus.\n\nUse the universal gas constant $R = 8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}$. Express $G$ in $\\mathrm{MPa}$ and the reduction factor as a dimensionless number. Round your results to four significant figures. Report, in order, the affine-model modulus, the phantom-model modulus, and the reduction factor.", "solution": "The problem is first validated for scientific and logical consistency.\n\n**Step 1: Extract Givens**\n- Network type: ideal, dry elastomer\n- Crosslink functionality: $f = 4$ (tetrafunctional)\n- Network formation: in melt state, then quenched\n- Network properties: isotropic, incompressible under shear\n- Chain model: Gaussian chains\n- Density of elastically active network strands: $\\nu = 5\\ \\mathrm{mol/m^{3}}$\n- Temperature: $T = 298\\ \\mathrm{K}$\n- Affine network model: crosslink junctions follow macroscopic deformation\n- Phantom network model: crosslink junctions fluctuate thermally, reducing constraints\n- Task: Derive and evaluate shear modulus $G$ for both models, and find the ratio of phantom to affine moduli.\n- Constant: $R = 8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}$\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, as it concerns the standard classical theory of rubber elasticity, comparing the two canonical limiting cases: the affine and phantom network models. These are well-established concepts in polymer physics and materials chemistry. The problem is well-posed, providing all necessary parameters ($\\nu$, $T$, $f$, $R$) to calculate the required quantities. The language is objective and precise. The problem does not violate any fundamental principles, is not incomplete or contradictory, and is not trivial. It represents a standard, formalizable problem in the specified field.\n\n**Step 3: Verdict and Action**\nThe problem is deemed valid. A solution will be provided.\n\nThe elastic properties of an ideal elastomer network originate from the change in conformational entropy of the polymer chains upon deformation. The change in Helmholtz free energy density, $W = \\Delta A_{el}$, of a network of Gaussian chains subjected to principal stretches $\\lambda_1, \\lambda_2, \\lambda_3$ is given by:\n$$\nW = C (\\lambda_1^2 + \\lambda_2^2 + \\lambda_3^2 - 3)\n$$\nwhere $C$ is a constant related to the network structure and temperature. The material is stated to be incompressible, which imposes the constraint $\\lambda_1 \\lambda_2 \\lambda_3 = 1$. The shear modulus, $G$, can be defined from the stress-strain relationship in simple shear. For an energy density function of the form above (a neo-Hookean form), the shear modulus is $G = 2C$. Our task is to determine the appropriate form of $C$ for the affine and phantom models.\n\n**Affine Network Model**\nIn the affine network model, the crosslink junctions are assumed to be fixed within the elastic matrix and transform affinely with the macroscopic deformation. The elastic free energy density is calculated by summing the contributions from all $\\nu$ elastically active strands per unit volume. For this model, the constant $C$ is:\n$$\nC_{\\text{affine}} = \\frac{1}{2} \\nu R T\n$$\nHere, $\\nu$ is the molar density of elastically active strands, $R$ is the universal gas constant, and $T$ is the absolute temperature.\n\nThe shear modulus for the affine model, $G_{\\text{affine}}$, is therefore:\n$$\nG_{\\text{affine}} = 2 C_{\\text{affine}} = 2 \\left( \\frac{1}{2} \\nu R T \\right) = \\nu R T\n$$\n\n**Phantom Network Model**\nIn the phantom network model, the crosslink junctions are not fixed but are free to fluctuate thermally around their mean positions. These fluctuations are constrained only by the $f$ chains attached to each junction. This model, developed by James and Guth, recognizes that only deformations of the mean positions of the junctions contribute to the elastic restoring force. The thermal fluctuations reduce the effective elastic response of the network. The result is a reduction in the elastic free energy density by a factor related to the junction functionality, $f$.\n\nThe effective number of elastic constraints is described by the cycle rank of the network, $\\xi$. For a network with $N_{chains}$ chains and $N_c$ crosslinks of functionality $f$, the cycle rank is $\\xi \\approx N_{chains} - N_c$. From topological considerations, $2 N_{chains} = f N_c$. This allows us to express $\\xi$ in terms of $N_{chains}$:\n$$\n\\xi = N_{chains} - \\frac{2}{f} N_{chains} = N_{chains} \\left( 1 - \\frac{2}{f} \\right)\n$$\nThe elastic free energy density is proportional to this effective number of chains (the cycle rank density, $\\xi/V$). Thus, the constant $C$ for the phantom model is:\n$$\nC_{\\text{phantom}} = \\left( 1 - \\frac{2}{f} \\right) \\frac{1}{2} \\nu R T\n$$\nThe shear modulus for the phantom model, $G_{\\text{phantom}}$, is:\n$$\nG_{\\text{phantom}} = 2 C_{\\text{phantom}} = 2 \\left[ \\left( 1 - \\frac{2}{f} \\right) \\frac{1}{2} \\nu R T \\right] = \\left( 1 - \\frac{2}{f} \\right) \\nu R T\n$$\nFor the given tetrafunctional network, $f=4$. The expression simplifies to:\n$$\nG_{\\text{phantom}} = \\left( 1 - \\frac{2}{4} \\right) \\nu R T = \\frac{1}{2} \\nu R T\n$$\n\n**Numerical Evaluation**\nWe are given:\n$\\nu = 5\\ \\mathrm{mol/m^{3}}$\n$T = 298\\ \\mathrm{K}$\n$R = 8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}$\n\nFirst, we calculate the product $\\nu R T$:\n$$\n\\nu R T = (5\\ \\mathrm{mol\\,m^{-3}}) \\times (8.314462618\\ \\mathrm{J\\,mol^{-1}\\,K^{-1}}) \\times (298\\ \\mathrm{K})\n$$\n$$\n\\nu R T = 12388.5492... \\ \\mathrm{J\\,m^{-3}} = 12388.5492... \\ \\mathrm{Pa}\n$$\n\nNow we evaluate the moduli in units of Megapascals ($\\mathrm{MPa}$), where $1\\ \\mathrm{MPa} = 10^6\\ \\mathrm{Pa}$.\n\n1.  **Affine Modulus**:\n    $$\n    G_{\\text{affine}} = \\nu R T = 12388.5492... \\ \\mathrm{Pa} = 0.0123885... \\ \\mathrm{MPa}\n    $$\n    Rounding to four significant figures, $G_{\\text{affine}} = 0.01239\\ \\mathrm{MPa}$.\n\n2.  **Phantom Modulus**:\n    $$\n    G_{\\text{phantom}} = \\frac{1}{2} \\nu R T = \\frac{1}{2} \\times (12388.5492... \\ \\mathrm{Pa}) = 6194.2746... \\ \\mathrm{Pa} = 0.00619427... \\ \\mathrm{MPa}\n    $$\n    Rounding to four significant figures, $G_{\\text{phantom}} = 0.006194\\ \\mathrm{MPa}$.\n\n**Reduction Factor**\nThe reduction factor is the ratio of the phantom-model modulus to the affine-model modulus.\n$$\n\\text{Reduction Factor} = \\frac{G_{\\text{phantom}}}{G_{\\text{affine}}} = \\frac{\\left( 1 - \\frac{2}{f} \\right) \\nu R T}{\\nu R T} = 1 - \\frac{2}{f}\n$$\nFor $f=4$:\n$$\n\\text{Reduction Factor} = 1 - \\frac{2}{4} = 1 - 0.5 = 0.5\n$$\nAs a dimensionless number reported to four significant figures, this is $0.5000$.\n\nThe final results, in the requested order and precision, are: $G_{\\text{affine}} = 0.01239\\ \\mathrm{MPa}$, $G_{\\text{phantom}} = 0.006194\\ \\mathrm{MPa}$, and the reduction factor is $0.5000$.", "answer": "$$\n\\boxed{\\begin{pmatrix} 0.01239  0.006194  0.5000 \\end{pmatrix}}\n$$", "id": "2518798"}, {"introduction": "Moving from analytical theory to computational practice, this exercise guides you in building a bead-spring network simulation. You will directly implement the energy minimization that gives rise to non-affine fluctuations in the phantom model, providing a visual and quantitative understanding of this core concept. This hands-on simulation bridges the gap between abstract equations and the microscopic dynamics of polymer networks, allowing you to computationally verify the theoretical reduction factor.", "problem": "You are to implement a complete, runnable program that constructs and analyzes a three-dimensional bead–spring network to quantify crosslink fluctuations and extract the shear modulus from stress–strain data, and to compare the measured nonaffine (phantom) shear modulus to its theoretical reduction relative to the affine prediction.\n\nBase the derivation and algorithm on the following foundational facts:\n\n- Gaussian chain elasticity: An ideal strand of a polymer network with end-to-end vector $\\mathbf{r}$ has free energy proportional to $\\lVert \\mathbf{r} \\rVert^2$, leading to a harmonic spring model. Model each network strand as a harmonic spring with energy $E_{\\text{spring}} = \\tfrac{1}{2} k \\lVert \\mathbf{r} \\rVert^2$, where $k$ is a constant spring stiffness (use reduced units with $k = 1$).\n- Network kinematics: Let $\\mathbf{R}_i$ denote the reference position of crosslink $i$ in a periodic cubic cell of side $L$ (reduced units with lattice spacing equal to $1$ so that $L = n$ for an $n \\times n \\times n$ lattice). An imposed simple shear with engineering shear $\\gamma$ along $x$ with gradient along $y$ is represented by the deformation gradient $\\mathbf{F}(\\gamma) = \\mathbf{I} + \\gamma\\, \\mathbf{e}_x \\otimes \\mathbf{e}_y$, i.e., $\\mathbf{F} = \\begin{pmatrix} 1  \\gamma  0 \\\\ 0  1  0 \\\\ 0  0  1 \\end{pmatrix}$.\n- Affine and phantom kinematics: The affine prediction takes node positions as $\\mathbf{r}_i^{\\text{aff}} = \\mathbf{F}\\mathbf{R}_i$. The phantom network allows crosslinks to undergo nonaffine displacements $\\mathbf{w}_i$ to minimize total network energy under the applied macroscopic deformation: $\\mathbf{r}_i = \\mathbf{F}\\mathbf{R}_i + \\mathbf{w}_i$.\n- Energy formulation: For an undirected bond (spring) between nodes $i$ and $j$ with reference bond vector $\\Delta \\mathbf{R}_{ij}$ (accounting for periodicity), the current bond vector is $\\mathbf{r}_j - \\mathbf{r}_i = \\mathbf{F}\\Delta \\mathbf{R}_{ij} + (\\mathbf{w}_j - \\mathbf{w}_i)$. The total energy is $E(\\gamma, \\{\\mathbf{w}\\}) = \\tfrac{1}{2} \\sum_{\\langle ij \\rangle} \\lVert \\mathbf{F}\\Delta \\mathbf{R}_{ij} + (\\mathbf{w}_j - \\mathbf{w}_i) \\rVert^2$. The affine energy uses $\\mathbf{w}_i \\equiv \\mathbf{0}$ for all $i$.\n- Linear response extraction of shear modulus: In the small-strain regime, the strain energy density in simple shear is $u(\\gamma) = \\tfrac{1}{2} G \\gamma^2 + o(\\gamma^2)$. Hence, for a system of volume $V$, the shear modulus can be extracted from the energy change relative to zero strain as $G = \\dfrac{2}{V\\,\\gamma^2}\\left[E(\\gamma) - E(0)\\right]$ in the $\\gamma \\to 0$ limit. This is equivalent to $G = \\left.\\dfrac{\\partial \\sigma_{xy}}{\\partial \\gamma}\\right|_{\\gamma \\to 0}$, with $\\sigma_{xy}$ being the shear stress, but you must use the energy-based route here.\n\nNetwork construction and numerical method constraints:\n\n- Geometry and connectivity: Build a periodic simple cubic network of crosslinks on an $n \\times n \\times n$ grid with Periodic Boundary Conditions (PBC). Use bonds connecting each node to its six nearest neighbors along the coordinate axes $(\\pm \\hat{\\mathbf{x}}, \\pm \\hat{\\mathbf{y}}, \\pm \\hat{\\mathbf{z}})$ implemented by listing only the positive-direction bonds $(+\\hat{\\mathbf{x}}, +\\hat{\\mathbf{y}}, +\\hat{\\mathbf{z}})$ with PBC; this yields a uniform functionality (coordination) $f = 6$ at every crosslink.\n- Reduced units: Use reduced units with $k = 1$, lattice spacing $a = 1$, Boltzmann constant times temperature $k_{\\mathrm{B}} T = 1$, so all outputs are dimensionless. The cubic cell volume is $V = L^3$ with $L = n$.\n- Phantom minimization: For a given $\\gamma$, compute the nonaffine displacements $\\{\\mathbf{w}_i\\}$ that minimize $E(\\gamma, \\{\\mathbf{w}\\})$. Use the graph incidence matrix $\\mathbf{B}$ (rows as bonds, columns as nodes, each row having $-1$ at the bond’s tail node and $+1$ at the head node) to write, for each Cartesian component $\\alpha \\in \\{x,y,z\\}$, the quadratic form $E_\\alpha = \\tfrac{1}{2}\\lVert \\mathbf{B}\\,\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)} \\rVert^2$, where $\\mathbf{d}^{(\\alpha)}$ stacks the $\\alpha$ components of $\\mathbf{F}\\Delta \\mathbf{R}_{ij}$ for all bonds. Minimization yields the sparse normal equations $\\mathbf{L}\\,\\mathbf{w}^{(\\alpha)} = -\\mathbf{B}^{\\mathsf{T}} \\mathbf{d}^{(\\alpha)}$ with the graph Laplacian $\\mathbf{L} = \\mathbf{B}^{\\mathsf{T}}\\mathbf{B}$. Fix the gauge by pinning one node displacement to zero in each component to remove the nullspace associated with rigid translations.\n- Energy evaluation: Compute the affine energy change $\\Delta E_{\\text{aff}}(\\gamma) = E_{\\text{aff}}(\\gamma) - E_{\\text{aff}}(0)$ and the phantom minimized energy change $\\Delta E_{\\text{phan}}(\\gamma) = E_{\\text{min}}(\\gamma) - E_{\\text{min}}(0)$, then extract $G_{\\text{aff}}$ and $G_{\\text{phan}}$ via $G = \\dfrac{2\\Delta E}{V \\gamma^2}$.\n\nCrosslink fluctuation quantification and theoretical reduction factor:\n\n- Crosslink fluctuations: Report the mean-squared magnitude of the nonaffine displacements averaged over nodes, $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle$, and also report the strain-normalized fluctuation amplitude $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$.\n- Theoretical phantom reduction factor: Derive the theoretical reduction factor for the shear modulus in a phantom network with uniform functionality $f$, and use it to compute a predicted ratio between the phantom and the affine shear moduli in terms of $f$ only. Do not use any empirical fitting; your derivation must follow from eliminating crosslink translational fluctuation modes implied by the quadratic energy and the network connectivity.\n\nTasks to implement and compute:\n\n1. Build the $f = 6$ periodic cubic network for given $n$, construct its incidence matrix $\\mathbf{B}$ and Laplacian $\\mathbf{L}$, and implement the energy-minimization solver for the phantom network using the sparse linear system per Cartesian component with one node pinned per component.\n2. For each test case below, compute:\n   - The affine modulus $G_{\\text{aff}}$ from $\\Delta E_{\\text{aff}}(\\gamma)$.\n   - The phantom modulus $G_{\\text{phan}}$ from $\\Delta E_{\\text{phan}}(\\gamma)$.\n   - The measured reduction factor $\\phi_{\\text{meas}} = G_{\\text{phan}} / G_{\\text{aff}}$.\n   - The theoretically predicted factor $\\phi_{\\text{theory}}$ derived in terms of $f$, and the absolute error $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$.\n   - The strain-normalized crosslink fluctuation amplitude $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$ for the specified case.\n\n3. Use the energy-based definition to check linear response by computing $G_{\\text{phan}}$ at two small strains and returning the absolute difference.\n\nTest suite (all outputs are dimensionless floats):\n\n- Case A (finite-size, small cell): $n = 2$, $\\gamma = 1.0 \\times 10^{-4}$. Return $\\phi_{\\text{meas}}$ and $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$.\n- Case B (larger cell): $n = 4$, $\\gamma = 1.0 \\times 10^{-4}$. Return $\\phi_{\\text{meas}}$ and $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$.\n- Case C (linearity check): $n = 4$, $\\gamma_1 = 1.0 \\times 10^{-4}$ and $\\gamma_2 = 5.0 \\times 10^{-4}$. Return $|G_{\\text{phan}}(\\gamma_1) - G_{\\text{phan}}(\\gamma_2)|$.\n- Case D (crosslink fluctuations): $n = 4$, $\\gamma = 1.0 \\times 10^{-3}$. Return the strain-normalized fluctuation amplitude $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$.\n\nFinal output format:\n\n- Your program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets in the following order: \n  1. Case A $\\phi_{\\text{meas}}$,\n  2. Case A $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$,\n  3. Case B $\\phi_{\\text{meas}}$,\n  4. Case B $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$,\n  5. Case C $|G_{\\text{phan}}(\\gamma_1) - G_{\\text{phan}}(\\gamma_2)|$,\n  6. Case D $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$.", "solution": "The problem is subjected to validation and is found to be scientifically grounded, well-posed, and objective. It represents a standard computational problem in the field of polymer network elasticity. All necessary parameters and methods are provided for a unique numerical solution. I will proceed with a complete derivation and algorithmic description.\n\n### Theoretical Foundation\n\nThe problem requires the analysis of a bead-spring polymer network under simple shear, comparing the predictions of the affine and phantom network models.\n\n**1. Network Energy Formulation**\n\nA network consists of $N$ crosslinks (nodes) connected by elastic strands (bonds). In reduced units, the spring constant is $k=1$. The elastic energy of a single strand with end-to-end vector $\\mathbf{r}$ is $E_{\\text{spring}} = \\frac{1}{2} \\lVert \\mathbf{r} \\rVert^2$.\n\nThe reference positions of the crosslinks form a simple cubic lattice of size $n \\times n \\times n$, denoted by $\\{\\mathbf{R}_i\\}$. The volume of the periodic cell is $V = n^3$. A macroscopic simple shear deformation is applied, described by the deformation gradient tensor:\n$$\n\\mathbf{F}(\\gamma) = \\begin{pmatrix} 1  \\gamma  0 \\\\ 0  1  0 \\\\ 0  0  1 \\end{pmatrix}\n$$\nThe affine model assumes that crosslinks follow the macroscopic deformation perfectly. The position of node $i$ is $\\mathbf{r}_i^{\\text{aff}} = \\mathbf{F}\\mathbf{R}_i$.\nThe phantom model allows for local, nonaffine displacements $\\mathbf{w}_i$ from the affine positions, such that $\\mathbf{r}_i = \\mathbf{F}\\mathbf{R}_i + \\mathbf{w}_i$. These displacements are determined by minimizing the total network energy.\n\nFor a bond connecting nodes $i$ and $j$, with reference vector $\\Delta\\mathbf{R}_{ij} = \\mathbf{R}_j - \\mathbf{R}_i$, the current bond vector is $\\mathbf{r}_j - \\mathbf{r}_i = \\mathbf{F}\\Delta\\mathbf{R}_{ij} + (\\mathbf{w}_j - \\mathbf{w}_i)$. The total energy of the network is the sum over all bonds $\\langle ij \\rangle$:\n$$\nE(\\gamma, \\{\\mathbf{w}\\}) = \\frac{1}{2} \\sum_{\\langle ij \\rangle} \\lVert \\mathbf{F}\\Delta\\mathbf{R}_{ij} + \\mathbf{w}_j - \\mathbf{w}_i \\rVert^2\n$$\nThe affine energy $E_{\\text{aff}}(\\gamma)$ is obtained by setting all $\\mathbf{w}_i = \\mathbf{0}$. The phantom energy $E_{\\text{min}}(\\gamma)$ is found by minimizing $E(\\gamma, \\{\\mathbf{w}\\})$ with respect to all nonaffine displacements $\\{\\mathbf{w}_i\\}$.\n\n**2. Energy Minimization for the Phantom Network**\n\nThe energy expression is quadratic in the displacements $\\mathbf{w}_i$. The three Cartesian components of the displacements are decoupled, allowing for separate minimization for each component $\\alpha \\in \\{x, y, z\\}$. Let $\\mathbf{w}^{(\\alpha)}$ be the vector of all $w_{i,\\alpha}$ and $\\mathbf{d}^{(\\alpha)}$ be the vector of the $\\alpha$-components of $\\mathbf{F}\\Delta\\mathbf{R}_{ij}$ for all bonds. Using the graph incidence matrix $\\mathbf{B}$, where each row corresponds to a bond and has entries $-1$ and $+1$ at the columns of the start and end nodes, the energy for component $\\alpha$ is:\n$$\nE_\\alpha = \\frac{1}{2} \\left\\lVert \\mathbf{B}\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)} \\right\\rVert^2\n$$\nMinimizing this quadratic form with respect to $\\mathbf{w}^{(\\alpha)}$ by setting the gradient to zero, $\\nabla_{\\mathbf{w}^{(\\alpha)}} E_\\alpha = \\mathbf{B}^{\\mathsf{T}}(\\mathbf{B}\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)}) = \\mathbf{0}$, yields the normal equations:\n$$\n(\\mathbf{B}^{\\mathsf{T}}\\mathbf{B})\\mathbf{w}^{(\\alpha)} = -\\mathbf{B}^{\\mathsf{T}}\\mathbf{d}^{(\\alpha)}\n$$\nThe matrix $\\mathbf{L} = \\mathbf{B}^{\\mathsf{T}}\\mathbf{B}$ is the graph Laplacian of the network. $\\mathbf{L}$ is singular; its nullspace consists of constant vectors, corresponding to a uniform translation of the entire network, which does not change the energy. To obtain a unique solution, we must fix the gauge. This is achieved by pinning one node, say node $0$, such that $\\mathbf{w}_0 = \\mathbf{0}$. This corresponds to removing the first row and column from $\\mathbf{L}$ and the first element from $\\mathbf{w}^{(\\alpha)}$ and the right-hand-side vector, resulting in a non-singular linear system that can be solved for the remaining displacements.\n\n**3. Shear Modulus Calculation**\n\nThe shear modulus $G$ is extracted from the change in strain energy density $u(\\gamma) = E(\\gamma)/V$ in the limit of small strain $\\gamma$:\n$$\nG = \\lim_{\\gamma \\to 0} \\frac{2 \\left[ E(\\gamma) - E(0) \\right]}{V \\gamma^2}\n$$\nFor the affine model, $G_{\\text{aff}}$ is calculated with $E(\\gamma) = E_{\\text{aff}}(\\gamma)$. For the phantom model, $G_{\\text{phan}}$ is calculated with $E(\\gamma) = E_{\\text{min}}(\\gamma)$.\nFor the specified cubic lattice with nearest-neighbor bonds (of length $a=1$), there are $N=n^3$ nodes and $M=3N$ bonds. For each of the $N$ nodes, there is one bond in the $+\\hat{\\mathbf{y}}$ direction with $\\Delta\\mathbf{R}=(0,1,0)$. The affine energy change is $\\Delta E_{\\text{aff}} = E_{\\text{aff}}(\\gamma) - E_{\\text{aff}}(0) = \\frac{1}{2}\\sum_{\\langle ij \\rangle} (\\lVert\\mathbf{F}\\Delta\\mathbf{R}_{ij}\\rVert^2 - \\lVert\\Delta\\mathbf{R}_{ij}\\rVert^2)$.\nThe term evaluates to $\\frac{1}{2}\\sum_{\\langle ij \\rangle} (2\\gamma \\Delta R_x \\Delta R_y + \\gamma^2 \\Delta R_y^2)$. For the specified lattice connectivity, $\\Delta R_x \\Delta R_y=0$ for all bonds. Only the $N$ bonds with $\\Delta\\mathbf{R}=(0,1,0)$ contribute, yielding $\\Delta E_{\\text{aff}} = \\frac{1}{2} N \\gamma^2$. Therefore, the affine modulus is:\n$$\nG_{\\text{aff}} = \\frac{2 (\\frac{1}{2}N\\gamma^2)}{V\\gamma^2} = \\frac{N\\gamma^2}{n^3\\gamma^2} = 1\n$$\nThis provides a useful analytical benchmark for the numerical implementation.\n\n**4. Theoretical Reduction Factor for Phantom Networks**\n\nThe phantom network model predicts a lower modulus than the affine model because a portion of the macroscopic strain is accommodated by the rearrangement of the mean positions of the fluctuating crosslinks, rather than being fully transferred into chain deformation. The theoretical reduction factor $\\phi_{\\text{theory}} = G_{\\text{phan}}/G_{\\text{aff}}$ can be derived from a degrees-of-freedom argument.\n\nAn ideal network is composed of $N$ crosslinks (junctions) and $\\nu_e$ elastically active chains. In the affine model, all crosslinks are fixed to the macroscopic deformation, and the modulus is proportional to the number of chains: $G_{\\text{aff}} \\propto \\nu_e$.\nIn the phantom model, the crosslinks are not fixed but fluctuate. The constraints imposed by the chains on the crosslinks reduce the total number of elastic degrees of freedom. For a perfect network (no dangling ends), the modulus is proportional to the number of chains minus the number of crosslinks: $G_{\\text{phan}} \\propto (\\nu_e - N)$.\n\nThe ratio of the moduli is therefore:\n$$\n\\phi_{\\text{theory}} = \\frac{G_{\\text{phan}}}{G_{\\text{aff}}} = \\frac{\\nu_e - N}{\\nu_e} = 1 - \\frac{N}{\\nu_e}\n$$\nFor a network where each crosslink has a uniform coordination number (functionality) $f$, each chain connects two crosslinks, and each crosslink is an endpoint for $f$ chains. Thus, the number of chains is $\\nu_e = \\frac{f N}{2}$. Substituting this into the ratio gives:\n$$\n\\phi_{\\text{theory}} = 1 - \\frac{N}{fN/2} = 1 - \\frac{2}{f}\n$$\nIn the problem, the network is a simple cubic lattice with nearest-neighbor connectivity, so each node is connected to $6$ neighbors. The functionality is $f=6$.\nThe theoretical reduction factor is:\n$$\n\\phi_{\\text{theory}} = 1 - \\frac{2}{6} = \\frac{2}{3}\n$$\n\n### Algorithmic Implementation\n\nThe solution is implemented as a Python program following these steps:\n\n1.  **Network Generation:** For a given side length $n$, generate the $N=n^3$ nodes. A mapping from 3D lattice coordinates $(i,j,k)$ to a single node index $u$ is used: $u = i \\cdot n^2 + j \\cdot n + k$.\n2.  **Bond List and Matrix Construction:** Create a list of all bonds and their corresponding reference vectors $\\Delta\\mathbf{R}_{ij}$. For the specified periodic simple cubic lattice, we define $3N$ bonds by connecting each node to its neighbor in the $+\\hat{\\mathbf{x}}$, $+\\hat{\\mathbf{y}}$, and $+\\hat{\\mathbf{z}}$ directions, with periodic boundary conditions. The reference vectors are simply $(1,0,0)$, $(0,1,0)$, and $(0,0,1)$ respectively.\n3.  **Incidence and Laplacian Matrices:** Construct the sparse incidence matrix $\\mathbf{B}$ of size $(3N \\times N)$. The graph Laplacian $\\mathbf{L} = \\mathbf{B}^{\\mathsf{T}}\\mathbf{B}$ is computed using sparse matrix multiplication.\n4.  **Nonaffine Displacement Solver:**\n    *   For a given shear strain $\\gamma$, compute the driving vectors $\\mathbf{d}^{(\\alpha)}$ for each Cartesian component.\n    *   For each component, form the right-hand-side vector $\\mathbf{b}^{(\\alpha)} = -\\mathbf{B}^{\\mathsf{T}}\\mathbf{d}^{(\\alpha)}$.\n    *   Apply the gauge-fixing condition by removing the row and column corresponding to the pinned node (node $0$) from $\\mathbf{L}$ to get an invertible matrix $\\mathbf{L}'$. Similarly, remove the first element from $\\mathbf{b}^{(\\alpha)}$ to get $\\mathbf{b'}^{(\\alpha)}$.\n    *   Solve the sparse linear system $\\mathbf{L}'\\mathbf{w'}^{(\\alpha)} = \\mathbf{b'}^{(\\alpha)}$ using `scipy.sparse.linalg.spsolve`.\n    *   Reconstruct the full displacement vector $\\mathbf{w}^{(\\alpha)}$ by inserting a zero for the pinned node.\n5.  **Energy and Modulus Calculation:**\n    *   The affine modulus $G_{\\text{aff}}$ is analytically known to be $1$.\n    *   The minimized phantom energy at strain $\\gamma$ is $E_{\\text{min}}(\\gamma) = \\frac{1}{2} \\sum_{\\alpha} \\lVert \\mathbf{B}\\mathbf{w}^{(\\alpha)} + \\mathbf{d}^{(\\alpha)} \\rVert^2$.\n    *   The energy at zero strain is $E_{\\text{min}}(0) = E_{\\text{aff}}(0) = \\frac{1}{2}\\sum_{\\langle ij \\rangle}\\lVert \\Delta\\mathbf{R}_{ij} \\rVert^2 = \\frac{3N}{2}$, as all bond lengths are $1$.\n    *   The phantom modulus is calculated as $G_{\\text{phan}} = \\frac{2(E_{\\text{min}}(\\gamma) - E_{\\text{min}}(0))}{V\\gamma^2}$.\n6.  **Fluctuation Analysis:**\n    *   The mean-squared nonaffine displacement is computed as $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle = \\frac{1}{N} \\sum_i (\\mathbf{w}_i \\cdot \\mathbf{w}_i)$.\n    *   The strain-normalized fluctuation amplitude is then $\\langle \\lVert \\mathbf{w} \\rVert^2 \\rangle / \\gamma^2$.\n7.  **Test Case Execution:** The above procedure is executed for each set of parameters specified in the test suite, and the requested quantities are collected for the final output. The absolute error $|\\phi_{\\text{meas}} - \\phi_{\\text{theory}}|$ and the linearity check $|G_{\\text{phan}}(\\gamma_1)-G_{\\text{phan}}(\\gamma_2)|$ are computed as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.sparse import lil_matrix\nfrom scipy.sparse.linalg import spsolve\n\ndef calculate_network_properties(n, gamma, calculate_fluctuations=False):\n    \"\"\"\n    Constructs and analyzes a bead-spring network to find elastic moduli.\n\n    Args:\n        n (int): Side length of the cubic lattice.\n        gamma (float): Applied engineering shear strain.\n        calculate_fluctuations (bool): If True, computes and returns the \n                                       normalized fluctuation amplitude.\n\n    Returns:\n        tuple: A tuple containing (G_aff, G_phan, fluctuation_amplitude).\n               fluctuation_amplitude is 0.0 unless calculate_fluctuations is True.\n    \"\"\"\n    # 1. Network Construction\n    N = n * n * n  # Total number of nodes\n    V = float(N)   # Volume in reduced units\n\n    # Create lists of bonds and their reference vectors\n    bonds = []\n    bond_vectors = []\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                u = i * n**2 + j * n + k\n                \n                # Bond in +x direction (with PBC)\n                v_x = ((i + 1) % n) * n**2 + j * n + k\n                bonds.append((u, v_x))\n                bond_vectors.append([1.0, 0.0, 0.0])\n\n                # Bond in +y direction (with PBC)\n                v_y = i * n**2 + ((j + 1) % n) * n + k\n                bonds.append((u, v_y))\n                bond_vectors.append([0.0, 1.0, 0.0])\n                \n                # Bond in +z direction (with PBC)\n                v_z = i * n**2 + j * n + ((k + 1) % n)\n                bonds.append((u, v_z))\n                bond_vectors.append([0.0, 0.0, 1.0])\n    \n    num_bonds = len(bonds)\n    bond_vectors = np.array(bond_vectors, dtype=np.float64)\n\n    # 2. Matrix Construction (Incidence B, Laplacian L)\n    B = lil_matrix((num_bonds, N), dtype=np.float64)\n    for bond_idx, (u, v) in enumerate(bonds):\n        B[bond_idx, u] = -1.0\n        B[bond_idx, v] = 1.0\n    B = B.tocsc()\n    L = (B.T @ B).tocsc()\n\n    # 3. Affine Modulus Calculation (Analytical)\n    # delta_E_aff = 0.5 * sum over bonds of (gamma^2 * dy^2)\n    # There are N y-bonds, each with dy=1.\n    delta_E_aff = 0.5 * N * gamma**2\n    G_aff = (2.0 * delta_E_aff) / (V * gamma**2) # Should be exactly 1.0\n\n    # 4. Phantom Modulus Calculation (Numerical)\n    # a) Deformation gradient F and driving vector d\n    F = np.array([[1.0, gamma, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]])\n    d_vectors = (F @ bond_vectors.T).T\n    d_x, d_y, d_z = d_vectors[:, 0], d_vectors[:, 1], d_vectors[:, 2]\n\n    # b) Solve for non-affine displacements w\n    # Pin node 0 to remove rigid translation nullspace\n    pinned_node_idx = 0\n    active_nodes_indices = list(range(N))\n    active_nodes_indices.pop(pinned_node_idx)\n    \n    L_prime = L[np.ix_(active_nodes_indices, active_nodes_indices)]\n\n    # RHS vectors b = -B^T * d\n    b_x, b_y, b_z = -B.T @ d_x, -B.T @ d_y, -B.T @ d_z\n    \n    b_x_prime = b_x[active_nodes_indices]\n    b_y_prime = b_y[active_nodes_indices]\n    b_z_prime = b_z[active_nodes_indices]\n    \n    # Solve sparse linear system L'w' = b'\n    w_x_prime = spsolve(L_prime, b_x_prime)\n    w_y_prime = spsolve(L_prime, b_y_prime)\n    w_z_prime = spsolve(L_prime, b_z_prime)\n\n    # Reconstruct full w vectors\n    w_x, w_y, w_z = np.zeros(N), np.zeros(N), np.zeros(N)\n    w_x[active_nodes_indices] = w_x_prime\n    w_y[active_nodes_indices] = w_y_prime\n    w_z[active_nodes_indices] = w_z_prime\n    \n    # c) Calculate minimized energy and modulus\n    # Energy at gamma=0. E(0) = 0.5 * sum(|bond_vector|^2) = 0.5 * num_bonds * 1^2\n    E_min_0 = 0.5 * num_bonds\n\n    # Minimized energy at strain gamma. E_min(gamma) = 0.5 * ||Bw + d||^2 for each component\n    E_min_gamma = 0.5 * (\n        np.linalg.norm(B @ w_x + d_x)**2 +\n        np.linalg.norm(B @ w_y + d_y)**2 +\n        np.linalg.norm(B @ w_z + d_z)**2\n    )\n\n    delta_E_phan = E_min_gamma - E_min_0\n    G_phan = (2.0 * delta_E_phan) / (V * gamma**2)\n    \n    # 5. Fluctuation amplitude calculation (optional)\n    fluctuation_amplitude = 0.0\n    if calculate_fluctuations:\n        # ||w||^2 = wx^2 + wy^2 + wz^2\n        w_squared_mag = w_x**2 + w_y**2 + w_z**2\n        mean_w_squared_mag = np.mean(w_squared_mag)\n        fluctuation_amplitude = mean_w_squared_mag / gamma**2\n\n    return G_aff, G_phan, fluctuation_amplitude\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {'id': 'A', 'n': 2, 'gamma': 1.0e-4},\n        {'id': 'B', 'n': 4, 'gamma': 1.0e-4},\n        {'id': 'C', 'n': 4, 'gammas': [1.0e-4, 5.0e-4]},\n        {'id': 'D', 'n': 4, 'gamma': 1.0e-3}\n    ]\n\n    # Theoretical reduction factor for functionality f=6\n    f = 6.0\n    phi_theory = 1.0 - 2.0 / f\n\n    results = []\n\n    # --- Case A ---\n    case_A = test_cases[0]\n    G_aff_A, G_phan_A, _ = calculate_network_properties(case_A['n'], case_A['gamma'])\n    phi_meas_A = G_phan_A / G_aff_A\n    error_A = abs(phi_meas_A - phi_theory)\n    results.extend([phi_meas_A, error_A])\n\n    # --- Case B ---\n    case_B = test_cases[1]\n    G_aff_B, G_phan_B, _ = calculate_network_properties(case_B['n'], case_B['gamma'])\n    phi_meas_B = G_phan_B / G_aff_B\n    error_B = abs(phi_meas_B - phi_theory)\n    results.extend([phi_meas_B, error_B])\n\n    # --- Case C ---\n    case_C = test_cases[2]\n    _, G_phan_C1, _ = calculate_network_properties(case_C['n'], case_C['gammas'][0])\n    _, G_phan_C2, _ = calculate_network_properties(case_C['n'], case_C['gammas'][1])\n    G_diff_C = abs(G_phan_C1 - G_phan_C2)\n    results.append(G_diff_C)\n\n    # --- Case D ---\n    case_D = test_cases[3]\n    _, _, fluctuation_D = calculate_network_properties(case_D['n'], case_D['gamma'], calculate_fluctuations=True)\n    results.append(fluctuation_D)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2935696"}, {"introduction": "A physical theory is only as strong as its ability to make testable predictions. This exercise explores how Small-Angle Neutron Scattering (SANS) can be used to experimentally probe the validity of the affine deformation assumption at the heart of the affine network model [@problem_id:2518798]. By working through the relationship between real-space deformation and reciprocal-space scattering patterns, you will learn how to design and interpret experiments that can distinguish between competing models of rubber elasticity.", "problem": "Small-Angle Neutron Scattering (SANS) probes the two-point density correlations of a material via the structure factor, which is the Fourier transform of the real-space correlation function of a scattering label density. Consider an initially isotropic, statistically homogeneous crosslinked polymer network whose reference-state structure factor exhibits a broad ring at wavevector magnitude $q^\\ast$ due to mesoscopic inhomogeneities. The sample is subjected to a uniaxial stretch along the $z$-axis described by a deformation gradient $\\mathbf{F}$ with principal stretches $(\\lambda_{\\perp}, \\lambda_{\\perp}, \\lambda)$ and is assumed to be incompressible so that $\\lambda_{\\perp}=\\lambda^{-1/2}$ and $\\det \\mathbf{F}=1$. You wish to use SANS under uniaxial stretch to test the hypothesis that the density fluctuations are convected by the macroscopic deformation (affine mapping). Starting from first principles, namely that under an affine deformation the real-space separation vector transforms as $\\mathbf{r}\\mapsto \\mathbf{F}\\,\\mathbf{r}$ and that the measured scattering intensity is the Fourier transform of the two-point correlation function, reason out what observable geometric distortion should appear in reciprocal space and how to use it as a quantitative test of affine mapping. Which of the following statements correctly outlines a valid and self-consistent procedure or criterion for such a test?\n\nA. If the deformation is affine and incompressible, then an initially circular isointensity contour at $|\\mathbf{q}|=q^\\ast$ becomes an ellipsoid whose principal intercepts satisfy $q_{\\parallel}=q^\\ast/\\lambda$ along the stretch direction and $q_{\\perp}=q^\\ast \\lambda^{1/2}$ in the transverse directions, so the anisotropy ratio $\\rho \\equiv q_{\\perp}/q_{\\parallel}=\\lambda^{3/2}$ independent of $q^\\ast$. Verifying that $\\rho$ equals $\\lambda^{3/2}$ (to within experimental uncertainty) at multiple $q^\\ast$ provides a direct test of affine mapping.\n\nB. Under affine and incompressible deformation, reciprocal vectors themselves stretch as $\\mathbf{q}'=\\mathbf{F}\\,\\mathbf{q}$ so that $q_{\\parallel}=q^\\ast \\lambda$ and $q_{\\perp}=q^\\ast \\lambda^{-1/2}$, implying an anisotropy ratio $\\rho=\\lambda^{1/2}$. Comparing the measured $\\rho$ to $\\lambda^{1/2}$ tests the affine hypothesis.\n\nC. For a phantom network, affine mapping predicts that SANS anisotropy vanishes for any $\\lambda$ because thermal fluctuations of crosslinks erase the imposed deformation at the segment scale; therefore, the correct test for affinity is that the scattering pattern remains circular regardless of $\\lambda$.\n\nD. The decisive test of affinity is amplitude-based: the integrated intensity on the isointensity shell must scale uniformly as $1/\\lambda$ with stretch, independent of direction, because $\\det \\mathbf{F}=\\lambda$ in uniaxial extension; this amplitude scaling, not the geometric distortion, is the key diagnostic.\n\nE. A robust test of affinity is a reciprocal-space remapping: if the deformation is affine and incompressible, then composing the deformed pattern with $\\mathbf{q}\\mapsto \\mathbf{F}^{-T}\\mathbf{q}$ should restore isotropy and collapse $I'(\\mathbf{F}^{-T}\\mathbf{q};\\lambda)$ onto the undeformed $I_0(\\mathbf{q})$ (up to an overall constant factor), so data at different $\\lambda$ superpose after this inverse mapping.", "solution": "The problem statement is scientifically sound, well-posed, and contains sufficient information to derive the consequences of the affine deformation hypothesis on small-angle neutron scattering (SANS) patterns. We shall proceed with the derivation from first principles.\n\n**Derivation from First Principles**\n\nThe SANS intensity, $I(\\mathbf{q})$, is proportional to the static structure factor, $S(\\mathbf{q})$, which is the spatial Fourier transform of the two-point density-density correlation function, $C(\\mathbf{r})$. Let $\\delta\\rho(\\mathbf{x})$ be the local fluctuation in scattering label density around the mean.\nThe correlation function is defined as $C(\\mathbf{r}) = \\langle \\delta\\rho(\\mathbf{y}) \\delta\\rho(\\mathbf{y}+\\mathbf{r}) \\rangle_{\\mathbf{y}}$.\nThe structure factor is then:\n$$ S(\\mathbf{q}) = \\int C(\\mathbf{r}) e^{-i \\mathbf{q} \\cdot \\mathbf{r}} d^3\\mathbf{r} $$\nIn the initial, undeformed state, the polymer network is isotropic and statistically homogeneous. The correlation function, $C_0(\\mathbf{r})$, depends only on the magnitude of the separation vector, $r=|\\mathbf{r}|$. Consequently, the initial structure factor, $S_0(\\mathbf{q})$, is also isotropic, depending only on the wavevector magnitude, $q=|\\mathbf{q}|$. The problem states that $S_0(q)$ exhibits a peak at $q=q^\\ast$.\n\nThe hypothesis to be tested is that the density fluctuations are convected affinely by the macroscopic deformation. This means that a point at position $\\mathbf{r}_0$ in the reference state moves to $\\mathbf{r} = \\mathbf{F} \\mathbf{r}_0$ in the deformed state, where $\\mathbf{F}$ is the deformation gradient tensor. The density fluctuation at the new position is equal to the density fluctuation at the original position: $\\delta\\rho(\\mathbf{r}) = \\delta\\rho_0(\\mathbf{r}_0)$.\n\nThe correlation function in the deformed state, $C(\\mathbf{r})$, for a separation vector $\\mathbf{r}$, is the correlation between density fluctuations at points $\\mathbf{y}$ and $\\mathbf{y}+\\mathbf{r}$. Using the affine mapping, these points correspond to $\\mathbf{y}_0 = \\mathbf{F}^{-1}\\mathbf{y}$ and $\\mathbf{y}_0 + \\mathbf{r}_0 = \\mathbf{F}^{-1}(\\mathbf{y}+\\mathbf{r})$ in the reference state. The separation vector thus transforms as $\\mathbf{r} = \\mathbf{F}\\mathbf{r}_0$, or $\\mathbf{r}_0 = \\mathbf{F}^{-1}\\mathbf{r}$.\nThe correlation function in the deformed state can be expressed in terms of the initial correlation function:\n$$ C(\\mathbf{r}) = \\langle \\delta\\rho(\\mathbf{F}\\mathbf{y}_0) \\delta\\rho(\\mathbf{F}(\\mathbf{y}_0+\\mathbf{r}_0)) \\rangle_{\\mathbf{y}_0} = \\langle \\delta\\rho_0(\\mathbf{y}_0) \\delta\\rho_0(\\mathbf{y}_0+\\mathbf{r}_0) \\rangle_{\\mathbf{y}_0} = C_0(\\mathbf{r}_0) = C_0(\\mathbf{F}^{-1}\\mathbf{r}) $$\nNow, we compute the structure factor of the deformed system by taking the Fourier transform of $C(\\mathbf{r})$:\n$$ S(\\mathbf{q}) = \\int C_0(\\mathbf{F}^{-1}\\mathbf{r}) e^{-i \\mathbf{q} \\cdot \\mathbf{r}} d^3\\mathbf{r} $$\nWe perform a change of variables in the integral: let $\\mathbf{r}' = \\mathbf{F}^{-1}\\mathbf{r}$, so that $\\mathbf{r} = \\mathbf{F}\\mathbf{r}'$. The volume element transforms as $d^3\\mathbf{r} = |\\det(\\mathbf{F})| d^3\\mathbf{r}'$. Given the incompressibility constraint, $\\det(\\mathbf{F})=1$. The integral becomes:\n$$ S(\\mathbf{q}) = \\int C_0(\\mathbf{r}') e^{-i \\mathbf{q} \\cdot (\\mathbf{F}\\mathbf{r}')} d^3\\mathbf{r}' $$\nUsing the identity for the dot product $\\mathbf{a} \\cdot (\\mathbf{B}\\mathbf{c}) = (\\mathbf{B}^T \\mathbf{a}) \\cdot \\mathbf{c}$, we can rewrite the exponent:\n$$ S(\\mathbf{q}) = \\int C_0(\\mathbf{r}') e^{-i (\\mathbf{F}^T \\mathbf{q}) \\cdot \\mathbf{r}'} d^3\\mathbf{r}' $$\nThis expression is the definition of the initial structure factor $S_0$, evaluated at the wavevector $\\mathbf{F}^T \\mathbf{q}$. Therefore, we arrive at the fundamental relationship for affine deformation of the structure factor:\n$$ S(\\mathbf{q}) = S_0(\\mathbf{F}^T \\mathbf{q}) $$\nSince $S_0$ is isotropic, $S_0(\\mathbf{k}) = S_0(|\\mathbf{k}|)$. Thus, $S(\\mathbf{q}) = S_0(|\\mathbf{F}^T \\mathbf{q}|)$.\n\nAn isointensity contour in the deformed state is given by $S(\\mathbf{q}) = \\text{constant}$. This corresponds to $|\\mathbf{F}^T \\mathbf{q}| = \\text{constant}$. The peak of scattering, initially at $|\\mathbf{q}| = q^\\ast$, will now be located at wavevectors $\\mathbf{q}$ that satisfy:\n$$ |\\mathbf{F}^T \\mathbf{q}| = q^\\ast $$\nFor the given uniaxial stretch along the $z$-axis with incompressibility ($\\lambda_{\\perp} = \\lambda^{-1/2}$), the deformation gradient tensor $\\mathbf{F}$ is diagonal and symmetric ($\\mathbf{F}^T = \\mathbf{F}$):\n$$ \\mathbf{F} = \\begin{pmatrix} \\lambda^{-1/2}  0  0 \\\\ 0  \\lambda^{-1/2}  0 \\\\ 0  0  \\lambda \\end{pmatrix} $$\nThe condition for the peak contour becomes:\n$$ (\\lambda^{-1/2} q_x)^2 + (\\lambda^{-1/2} q_y)^2 + (\\lambda q_z)^2 = (q^\\ast)^2 $$\n$$ \\lambda^{-1} q_{\\perp}^2 + \\lambda^2 q_{\\parallel}^2 = (q^\\ast)^2 $$\nwhere $q_{\\parallel} = q_z$ and $q_{\\perp} = \\sqrt{q_x^2 + q_y^2}$. This is the equation of an ellipsoid.\n\n**Option-by-Option Analysis**\n\nA. **If the deformation is affine and incompressible, then an initially circular isointensity contour at $|\\mathbf{q}|=q^\\ast$ becomes an ellipsoid whose principal intercepts satisfy $q_{\\parallel}=q^\\ast/\\lambda$ along the stretch direction and $q_{\\perp}=q^\\ast \\lambda^{1/2}$ in the transverse directions, so the anisotropy ratio $\\rho \\equiv q_{\\perp}/q_{\\parallel}=\\lambda^{3/2}$ independent of $q^\\ast$. Verifying that $\\rho$ equals $\\lambda^{3/2}$ (to within experimental uncertainty) at multiple $q^\\ast$ provides a direct test of affine mapping.**\nTo find the parallel intercept ($q_{\\parallel}$), we set $q_{\\perp}=0$ in the ellipsoid equation: $\\lambda^2 q_{\\parallel}^2 = (q^\\ast)^2$, which gives $q_{\\parallel} = q^\\ast/\\lambda$.\nTo find the perpendicular intercept ($q_{\\perp}$), we set $q_{\\parallel}=0$: $\\lambda^{-1} q_{\\perp}^2 = (q^\\ast)^2$, which gives $q_{\\perp} = q^\\ast/\\lambda^{-1/2} = q^\\ast \\lambda^{1/2}$.\nThe anisotropy ratio is $\\rho = q_{\\perp} / q_{\\parallel} = (q^\\ast \\lambda^{1/2}) / (q^\\ast / \\lambda) = \\lambda^{3/2}$.\nThis result is independent of $q^\\ast$. Comparing the measured anisotropy ratio with the theoretical prediction $\\lambda^{3/2}$ is a direct and valid test of the affine mapping hypothesis.\n**Verdict: Correct.**\n\nB. **Under affine and incompressible deformation, reciprocal vectors themselves stretch as $\\mathbf{q}'=\\mathbf{F}\\,\\mathbf{q}$ so that $q_{\\parallel}=q^\\ast \\lambda$ and $q_{\\perp}=q^\\ast \\lambda^{-1/2}$, implying an anisotropy ratio $\\rho=\\lambda^{1/2}$. Comparing the measured $\\rho$ to $\\lambda^{1/2}$ tests the affine hypothesis.**\nThis statement is fundamentally incorrect. The derivation shows that the transformation relates points in reciprocal space via $\\mathbf{q}_{\\rm deformed} = \\mathbf{F}^{-T} \\mathbf{q}_{\\rm initial}$. The claim that $\\mathbf{q}' = \\mathbf{F}\\mathbf{q}$ confuses the transformation of real-space vectors with that of reciprocal-space vectors. Consequently, the derived intercepts $q_{\\parallel}=q^\\ast \\lambda$ and $q_{\\perp}=q^\\ast \\lambda^{-1/2}$ are the inverse of the correct relations. The resulting anisotropy ratio is also incorrect.\n**Verdict: Incorrect.**\n\nC. **For a phantom network, affine mapping predicts that SANS anisotropy vanishes for any $\\lambda$ because thermal fluctuations of crosslinks erase the imposed deformation at the segment scale; therefore, the correct test for affinity is that the scattering pattern remains circular regardless of $\\lambda$.**\nThis statement incorrectly conflates the affine model with the phantom network model. The problem asks to test the affine mapping hypothesis. The affine model, by definition, neglects thermal fluctuations of crosslinks and *predicts* a specific, non-zero anisotropy, as shown in the analysis of option A. The phantom model is an alternative that predicts *less* anisotropy than the affine model, but not necessarily zero. The premise of the statement is a contradiction. A circular scattering pattern would disprove, not confirm, the affine hypothesis for $\\lambda \\ne 1$.\n**Verdict: Incorrect.**\n\nD. **The decisive test of affinity is amplitude-based: the integrated intensity on the isointensity shell must scale uniformly as $1/\\lambda$ with stretch, independent of direction, because $\\det \\mathbf{F}=\\lambda$ in uniaxial extension; this amplitude scaling, not the geometric distortion, is the key diagnostic.**\nThis statement contains a critical error. For the stated incompressible deformation, $\\det \\mathbf{F} = 1$. The claim that $\\det \\mathbf{F} = \\lambda$ is false. Furthermore, the fundamental relation $S(\\mathbf{q}) = S_0(\\mathbf{F}^T \\mathbf{q})$ contains no prefactor that would scale the intensity. The intensity values are merely redistributed in reciprocal space. The geometric distortion is the primary signature of affine deformation, not an overall amplitude scaling.\n**Verdict: Incorrect.**\n\nE. **A robust test of affinity is a reciprocal-space remapping: if the deformation is affine and incompressible, then composing the deformed pattern with $\\mathbf{q}\\mapsto \\mathbf{F}^{-T}\\mathbf{q}$ should restore isotropy and collapse $I'(\\mathbf{F}^{-T}\\mathbf{q};\\lambda)$ onto the undeformed $I_0(\\mathbf{q})$ (up to an overall constant factor), so data at different $\\lambda$ superpose after this inverse mapping.**\nThis describes a mathematically sound procedure based on the derived relation $S(\\mathbf{q}) = S_0(\\mathbf{F}^T \\mathbf{q})$. Let the measured deformed intensity be $I'(\\mathbf{q}; \\lambda) \\propto S(\\mathbf{q})$. If we define a new function $J(\\mathbf{p}) = I'(\\mathbf{F}^{-T}\\mathbf{p}; \\lambda)$, we find:\n$J(\\mathbf{p}) \\propto S(\\mathbf{F}^{-T}\\mathbf{p}) = S_0(|\\mathbf{F}^T (\\mathbf{F}^{-T}\\mathbf{p})|) = S_0(|\\mathbf{p}|)$.\nThe remapped function $J(\\mathbf{p})$ is indeed the original isotropic scattering function. This means that if the affine hypothesis holds, experimental data from all directions and for all stretch ratios $\\lambda$, when remapped in this way, should collapse onto a single master curve corresponding to the undeformed sample's scattering profile. This is a comprehensive and robust test of the affine model.\n**Verdict: Correct.**", "answer": "$$\\boxed{AE}$$", "id": "2935667"}]}