{"hands_on_practices": [{"introduction": "The journey from raw instrumental output to a physically meaningful quantity is a cornerstone of experimental science. In static light scattering, this first step involves converting measured photon count rates into the excess Rayleigh ratio, $R_{\\text{ex}}(\\theta)$, which requires meticulous background correction and robust uncertainty analysis. This practice [@problem_id:2928743] provides hands-on experience in implementing this crucial data reduction process from first principles, building essential skills in handling real-world experimental data and propagating statistical errors correctly.", "problem": "You are tasked with building a program that implements the construction of the excess Rayleigh ratio for Static Light Scattering (SLS) measurements from first principles and propagates the associated uncertainties. The goal is to compute the excess Rayleigh ratio for a polymer solution, defined at scattering angle $\\theta$ as the difference between the Rayleigh ratio of the solution and that of the pure solvent measured under the same optical geometry. Your program must correct raw measured intensities for dark counts and stray light on a per-measurement basis and use a calibration constant to convert corrected count rates into a Rayleigh ratio. You must also propagate standard uncertainties under the assumption that all input quantities are statistically independent and Gaussian.\n\nUse the following foundational definitions as the starting point:\n- The Rayleigh ratio $R(\\theta)$ is the scattered intensity per unit solid angle at distance $r$ normalized by the incident intensity and is proportional to the instrument-recorded count rate once backgrounds are removed. An instrument calibration consolidates geometric and throughput factors into a calibration constant.\n- The excess Rayleigh ratio is defined as $R_{\\text{ex}}(\\theta) = R_{\\text{solution}}(\\theta) - R_{\\text{solvent}}(\\theta)$.\n- Raw recorded count rates must be corrected for dark counts and stray light contributions measured under the same conditions before applying the calibration.\n- For independent variables $\\{x_i\\}$, the first-order (linear) Gaussian uncertainty propagation formula for a function $f(\\{x_i\\})$ is $\\sigma_f^2 = \\sum_i \\left(\\frac{\\partial f}{\\partial x_i}\\right)^2 \\sigma_{x_i}^2$.\n\nInputs and modeling assumptions your program must implement:\n- For each measurement at scattering angle $\\theta$ (angles are given in degrees), the instrument provides the following for both the polymer solution and the pure solvent:\n  - Measured count rate $I_{\\mathrm{meas}}(\\theta)$ in $\\mathrm{cts/s}$ and its standard uncertainty.\n  - Dark count rate $D(\\theta)$ in $\\mathrm{cts/s}$ and its standard uncertainty.\n  - Stray light rate $S(\\theta)$ in $\\mathrm{cts/s}$ and its standard uncertainty.\n- The calibration constant $C$ converts a corrected count rate (in $\\mathrm{cts/s}$) to a Rayleigh ratio in $\\mathrm{m^{-1}}$ via $R(\\theta) = C \\times I_{\\mathrm{net}}(\\theta)$, where the net rate is $I_{\\mathrm{net}}(\\theta) = I_{\\mathrm{meas}}(\\theta) - D(\\theta) - S(\\theta)$. The calibration constant has its own standard uncertainty.\n- Treat all reported standard uncertainties as one-sigma values and assume statistical independence between all measured quantities.\n\nRequired computations:\n- Compute the net count rates for the polymer solution and solvent at each $\\theta$ by subtracting their corresponding dark and stray rates.\n- Compute the excess Rayleigh ratio $R_{\\text{ex}}(\\theta)$ by converting each net count rate to a Rayleigh ratio using the calibration constant $C$ and then taking the difference.\n- Using first-order uncertainty propagation, compute the standard uncertainty of $R_{\\text{ex}}(\\theta)$.\n\nUnits and reporting:\n- Report each $R_{\\text{ex}}(\\theta)$ in $\\mathrm{m^{-1}}$ and its associated standard uncertainty in $\\mathrm{m^{-1}}$.\n- Angles $\\theta$ are specified in degrees and do not need to be converted for the purposes of this computation.\n\nTest suite to implement:\nProvide a program that computes results for the following four cases. In each case, all count rates are in $\\mathrm{cts/s}$, angles are in degrees, and calibration constants are in $\\mathrm{m^{-1}}\\cdot(\\mathrm{cts/s})^{-1}$.\n\n- Case $1$ (happy path, $\\theta = 90^\\circ$):\n  - Polymer solution: $I_{\\mathrm{meas}} = 15230$, $\\sigma_{I} = 50$; $D = 120$, $\\sigma_D = 10$; $S = 30$, $\\sigma_S = 5$.\n  - Pure solvent: $I_{\\mathrm{meas}} = 8120$, $\\sigma_{I} = 40$; $D = 118$, $\\sigma_D = 10$; $S = 32$, $\\sigma_S = 5$.\n  - Calibration: $C = 2.1\\times 10^{-7}$, $\\sigma_C = 2.1\\times 10^{-9}$.\n\n- Case $2$ (near cancellation, $\\theta = 60^\\circ$):\n  - Polymer solution: $I_{\\mathrm{meas}} = 10050$, $\\sigma_{I} = 60$; $D = 130$, $\\sigma_D = 8$; $S = 45$, $\\sigma_S = 6$.\n  - Pure solvent: $I_{\\mathrm{meas}} = 10020$, $\\sigma_{I} = 60$; $D = 128$, $\\sigma_D = 8$; $S = 46$, $\\sigma_S = 6$.\n  - Calibration: $C = 2.0\\times 10^{-7}$, $\\sigma_C = 3.0\\times 10^{-9}$.\n\n- Case $3$ (drifted backgrounds, $\\theta = 30^\\circ$):\n  - Polymer solution: $I_{\\mathrm{meas}} = 4500$, $\\sigma_{I} = 30$; $D = 200$, $\\sigma_D = 15$; $S = 100$, $\\sigma_S = 12$.\n  - Pure solvent: $I_{\\mathrm{meas}} = 4200$, $\\sigma_{I} = 30$; $D = 150$, $\\sigma_D = 15$; $S = 80$, $\\sigma_S = 12$.\n  - Calibration: $C = 1.8\\times 10^{-7}$, $\\sigma_C = 2.0\\times 10^{-9}$.\n\n- Case $4$ (low counts, possible negative excess, $\\theta = 120^\\circ$):\n  - Polymer solution: $I_{\\mathrm{meas}} = 500$, $\\sigma_{I} = 20$; $D = 50$, $\\sigma_D = 5$; $S = 30$, $\\sigma_S = 5$.\n  - Pure solvent: $I_{\\mathrm{meas}} = 520$, $\\sigma_{I} = 20$; $D = 50$, $\\sigma_D = 5$; $S = 30$, $\\sigma_S = 5$.\n  - Calibration: $C = 2.2\\times 10^{-7}$, $\\sigma_C = 2.2\\times 10^{-9}$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list of case-wise lists, each inner list containing two floating-point numbers: $\\left[R_{\\text{ex}}(\\theta), \\sigma_{R_{\\text{ex}}}(\\theta)\\right]$, in the same order as the cases above.\n- For example, a valid output format looks like: $\\left[[x_1,y_1],[x_2,y_2],[x_3,y_3],[x_4,y_4]\\right]$ where each $x_i$ and $y_i$ are floats in $\\mathrm{m^{-1}}$.", "solution": "The problem presented is a standard exercise in experimental data analysis, specifically the reduction of raw data from a static light scattering experiment and the propagation of associated uncertainties. The problem is well-defined, scientifically sound, and internally consistent. It requires the application of fundamental principles of error analysis to a specific physical measurement. We shall proceed with the derivation of the necessary formulae and their implementation.\n\nLet the measured quantities for the polymer solution at a given scattering angle $\\theta$ be denoted with the subscript `sol`, and for the pure solvent with the subscript `sv`. The provided inputs are:\n- Measured count rates: $I_{\\text{meas,sol}}$ and $I_{\\text{meas,sv}}$\n- Dark count rates: $D_{\\text{sol}}$ and $D_{\\text{sv}}$\n- Stray light rates: $S_{\\text{sol}}$ and $S_{\\text{sv}}$\n- The calibration constant: $C$\n- Their corresponding standard uncertainties: $\\sigma_{I,\\text{sol}}$, $\\sigma_{I,\\text{sv}}$, $\\sigma_{D,\\text{sol}}$, $\\sigma_{D,\\text{sv}}$, $\\sigma_{S,\\text{sol}}$, $\\sigma_{S,\\text{sv}}$, and $\\sigma_C$.\n\nAll these $13$ input quantities are assumed to be statistically independent.\nThe first step is to compute the net count rate, $I_{\\text{net}}(\\theta)$, for both the solution and the solvent. The net rate is the measured rate corrected for background contributions.\nFor the polymer solution:\n$$I_{\\text{net,sol}} = I_{\\text{meas,sol}} - D_{\\text{sol}} - S_{\\text{sol}}$$\nFor the pure solvent:\n$$I_{\\text{net,sv}} = I_{\\text{meas,sv}} - D_{\\text{sv}} - S_{\\text{sv}}$$\n\nThe excess Rayleigh ratio, $R_{\\text{ex}}(\\theta)$, is defined as the difference between the Rayleigh ratio of the solution, $R_{\\text{sol}}(\\theta)$, and that of the solvent, $R_{\\text{sv}}(\\theta)$. The Rayleigh ratio for each component is obtained by multiplying its net count rate by the calibration constant $C$.\n$$R_{\\text{sol}}(\\theta) = C \\cdot I_{\\text{net,sol}}$$\n$$R_{\\text{sv}}(\\theta) = C \\cdot I_{\\text{net,sv}}$$\nTherefore, the excess Rayleigh ratio is:\n$$R_{\\text{ex}}(\\theta) = R_{\\text{sol}}(\\theta) - R_{\\text{sv}}(\\theta) = C \\cdot I_{\\text{net,sol}} - C \\cdot I_{\\text{net,sv}}$$\nThis simplifies to:\n$$R_{\\text{ex}}(\\theta) = C \\cdot (I_{\\text{net,sol}} - I_{\\text{net,sv}})$$\nSubstituting the expressions for the net count rates, we obtain the final formula for $R_{\\text{ex}}(\\theta)$ in terms of the directly measured quantities:\n$$R_{\\text{ex}}(\\theta) = C \\cdot \\left( (I_{\\text{meas,sol}} - D_{\\text{sol}} - S_{\\text{sol}}) - (I_{\\text{meas,sv}} - D_{\\text{sv}} - S_{\\text{sv}}) \\right)$$\n\nNext, we must derive the formula for the standard uncertainty of $R_{\\text{ex}}(\\theta)$, denoted $\\sigma_{R_{\\text{ex}}}$. We use the first-order Gaussian error propagation formula for a function $f$ of independent variables $\\{x_i\\}$:\n$$\\sigma_f^2 = \\sum_i \\left(\\frac{\\partial f}{\\partial x_i}\\right)^2 \\sigma_{x_i}^2$$\nIn our case, the function is $f = R_{\\text{ex}}(\\theta)$, and the set of independent variables is $\\{x_i\\} = \\{C, I_{\\text{meas,sol}}, D_{\\text{sol}}, S_{\\text{sol}}, I_{\\text{meas,sv}}, D_{\\text{sv}}, S_{\\text{sv}}\\}$.\n\nWe must compute the partial derivatives of $R_{\\text{ex}}(\\theta)$ with respect to each of these variables.\n1. Derivative with respect to $C$:\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial C} = (I_{\\text{meas,sol}} - D_{\\text{sol}} - S_{\\text{sol}}) - (I_{\\text{meas,sv}} - D_{\\text{sv}} - S_{\\text{sv}}) = I_{\\text{net,sol}} - I_{\\text{net,sv}}$$\n2. Derivatives with respect to solution measurement quantities:\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial I_{\\text{meas,sol}}} = C$$\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial D_{\\text{sol}}} = -C$$\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial S_{\\text{sol}}} = -C$$\n3. Derivatives with respect to solvent measurement quantities:\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial I_{\\text{meas,sv}}} = -C$$\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial D_{\\text{sv}}} = C$$\n$$\\frac{\\partial R_{\\text{ex}}}{\\partial S_{\\text{sv}}} = C$$\n\nNow, we substitute these derivatives into the variance formula:\n$$\\sigma_{R_{\\text{ex}}}^2 = \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial C}\\right)^2 \\sigma_C^2 + \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial I_{\\text{meas,sol}}}\\right)^2 \\sigma_{I,\\text{sol}}^2 + \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial D_{\\text{sol}}}\\right)^2 \\sigma_{D,\\text{sol}}^2 + \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial S_{\\text{sol}}}\\right)^2 \\sigma_{S,\\text{sol}}^2 + \\ldots$$\n$$\\ldots + \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial I_{\\text{meas,sv}}}\\right)^2 \\sigma_{I,\\text{sv}}^2 + \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial D_{\\text{sv}}}\\right)^2 \\sigma_{D,\\text{sv}}^2 + \\left(\\frac{\\partial R_{\\text{ex}}}{\\partial S_{\\text{sv}}}\\right)^2 \\sigma_{S,\\text{sv}}^2$$\nSubstituting the expressions for the partial derivatives:\n$$\\sigma_{R_{\\text{ex}}}^2 = (I_{\\text{net,sol}} - I_{\\text{net,sv}})^2 \\sigma_C^2 + (C)^2 \\sigma_{I,\\text{sol}}^2 + (-C)^2 \\sigma_{D,\\text{sol}}^2 + (-C)^2 \\sigma_{S,\\text{sol}}^2 + (-C)^2 \\sigma_{I,\\text{sv}}^2 + (C)^2 \\sigma_{D,\\text{sv}}^2 + (C)^2 \\sigma_{S,\\text{sv}}^2$$\nFactoring out $C^2$:\n$$\\sigma_{R_{\\text{ex}}}^2 = (I_{\\text{net,sol}} - I_{\\text{net,sv}})^2 \\sigma_C^2 + C^2 \\left( \\sigma_{I,\\text{sol}}^2 + \\sigma_{D,\\text{sol}}^2 + \\sigma_{S,\\text{sol}}^2 \\right) + C^2 \\left( \\sigma_{I,\\text{sv}}^2 + \\sigma_{D,\\text{sv}}^2 + \\sigma_{S,\\text{sv}}^2 \\right)$$\nThe terms in parentheses are the variances of the net count rates. Let $\\sigma_{I_{\\text{net,sol}}}^2 = \\sigma_{I,\\text{sol}}^2 + \\sigma_{D,\\text{sol}}^2 + \\sigma_{S,\\text{sol}}^2$ and $\\sigma_{I_{\\text{net,sv}}}^2 = \\sigma_{I,\\text{sv}}^2 + \\sigma_{D,\\text{sv}}^2 + \\sigma_{S,\\text{sv}}^2$, because the components of each net count rate are independent. The expression for the variance of the excess Rayleigh ratio simplifies to:\n$$\\sigma_{R_{\\text{ex}}}^2 = (I_{\\text{net,sol}} - I_{\\text{net,sv}})^2 \\sigma_C^2 + C^2 \\left( \\sigma_{I_{\\text{net,sol}}}^2 + \\sigma_{I_{\\text{net,sv}}}^2 \\right)$$\nThe standard uncertainty is the square root of this variance:\n$$\\sigma_{R_{\\text{ex}}} = \\sqrt{ (I_{\\text{net,sol}} - I_{\\text{net,sv}})^2 \\sigma_C^2 + C^2 \\left( \\sigma_{I_{\\text{net,sol}}}^2 + \\sigma_{I_{\\text{net,sv}}}^2 \\right) }$$\nThis is the final formula to be implemented. It correctly accounts for the fact that the uncertainty in the calibration constant $C$ introduces a correlated error component in the calculated Rayleigh ratios for the solution and solvent, while the counting statistics for the solution and solvent are independent.\n\nThe program to be constructed will implement these derived formulae directly. For each test case, it will:\n1.  Compute $I_{\\text{net,sol}}$ and $I_{\\text{net,sv}}$.\n2.  Compute $R_{\\text{ex}}(\\theta)$ using the difference of the net count rates.\n3.  Compute the variances $\\sigma_{I_{\\text{net,sol}}}^2$ and $\\sigma_{I_{\\text{net,sv}}}^2$.\n4.  Compute the final variance $\\sigma_{R_{\\text{ex}}}^2$ and take its square root to find $\\sigma_{R_{\\text{ex}}}$.\n5.  Report the pair $[R_{\\text{ex}}, \\sigma_{R_{\\text{ex}}}]$ for each case.\nThe implementation will use a procedural approach, applying these steps systematically to each data set provided in the problem.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the excess Rayleigh ratio and its uncertainty for a series of\n    Static Light Scattering (SLS) measurement cases.\n    \"\"\"\n\n    test_cases = [\n        # Case 1 (happy path, theta = 90 deg)\n        {\n            \"sol\": {\"I_meas\": 15230, \"s_I\": 50, \"D\": 120, \"s_D\": 10, \"S\": 30, \"s_S\": 5},\n            \"sv\": {\"I_meas\": 8120, \"s_I\": 40, \"D\": 118, \"s_D\": 10, \"S\": 32, \"s_S\": 5},\n            \"cal\": {\"C\": 2.1e-7, \"s_C\": 2.1e-9},\n        },\n        # Case 2 (near cancellation, theta = 60 deg)\n        {\n            \"sol\": {\"I_meas\": 10050, \"s_I\": 60, \"D\": 130, \"s_D\": 8, \"S\": 45, \"s_S\": 6},\n            \"sv\": {\"I_meas\": 10020, \"s_I\": 60, \"D\": 128, \"s_D\": 8, \"S\": 46, \"s_S\": 6},\n            \"cal\": {\"C\": 2.0e-7, \"s_C\": 3.0e-9},\n        },\n        # Case 3 (drifted backgrounds, theta = 30 deg)\n        {\n            \"sol\": {\"I_meas\": 4500, \"s_I\": 30, \"D\": 200, \"s_D\": 15, \"S\": 100, \"s_S\": 12},\n            \"sv\": {\"I_meas\": 4200, \"s_I\": 30, \"D\": 150, \"s_D\": 15, \"S\": 80, \"s_S\": 12},\n            \"cal\": {\"C\": 1.8e-7, \"s_C\": 2.0e-9},\n        },\n        # Case 4 (low counts, possible negative excess, theta = 120 deg)\n        {\n            \"sol\": {\"I_meas\": 500, \"s_I\": 20, \"D\": 50, \"s_D\": 5, \"S\": 30, \"s_S\": 5},\n            \"sv\": {\"I_meas\": 520, \"s_I\": 20, \"D\": 50, \"s_D\": 5, \"S\": 30, \"s_S\": 5},\n            \"cal\": {\"C\": 2.2e-7, \"s_C\": 2.2e-9},\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        # Extract data for solution (sol), solvent (sv), and calibration (cal)\n        sol_data = case[\"sol\"]\n        sv_data = case[\"sv\"]\n        cal_data = case[\"cal\"]\n\n        # Step 1: Compute net count rates for solution and solvent\n        I_net_sol = sol_data[\"I_meas\"] - sol_data[\"D\"] - sol_data[\"S\"]\n        I_net_sv = sv_data[\"I_meas\"] - sv_data[\"D\"] - sv_data[\"S\"]\n\n        # Step 2: Compute excess Rayleigh ratio, R_ex\n        C = cal_data[\"C\"]\n        delta_I_net = I_net_sol - I_net_sv\n        R_ex = C * delta_I_net\n\n        # Step 3: Compute variances of the net count rates\n        var_I_net_sol = sol_data[\"s_I\"]**2 + sol_data[\"s_D\"]**2 + sol_data[\"s_S\"]**2\n        var_I_net_sv = sv_data[\"s_I\"]**2 + sv_data[\"s_D\"]**2 + sv_data[\"s_S\"]**2\n\n        # Step 4: Compute variance of the excess Rayleigh ratio\n        # var(R_ex) = (I_net_sol - I_net_sv)^2 * var(C) + C^2 * (var(I_net_sol) + var(I_net_sv))\n        s_C = cal_data[\"s_C\"]\n        var_R_ex = (delta_I_net**2 * s_C**2) + (C**2 * (var_I_net_sol + var_I_net_sv))\n        \n        # Final uncertainty is the square root of the variance\n        s_R_ex = np.sqrt(var_R_ex)\n\n        results.append([R_ex, s_R_ex])\n\n    # Format the final output string exactly as required\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2928743"}, {"introduction": "Once the excess Rayleigh ratio has been determined, the core of static light scattering analysis begins: extracting the physical properties of the macromolecules. The Zimm and Berry plots are the classic graphical tools for this purpose, linearizing the complex scattering behavior to reveal the weight-average molecular weight ($M_w$) and radius of gyration ($R_g$). This practical exercise [@problem_id:2928740] puts you in the analyst's seat, tasking you with constructing both types of plots from a dataset, performing the necessary regressions, and using statistical metrics to judge which model provides a more reliable description of the data.", "problem": "You are given synthetic static light scattering data for dilute polymer solutions intended to exercise the construction of both Zimm and Berry plots. The goal is to extract the weight-average molecular weight $M_w$ and the radius of gyration $R_g$ from each dataset using first-order low-angle and low-concentration expansions consistent with single-scattering in the Guinier regime, and then to decide which linearization (Zimm or Berry) is more reliable by a quantitative criterion.\n\nBase principles to use:\n- In static light scattering of dilute polymer solutions under single-scattering conditions, the angular dependence is governed by the particle form factor, which admits a small-$q$ expansion (Guinier regime). The solution concentration dependence for thermodynamically dilute solutions enters through virial expansion. These facts justify linearizations in $q^2$ and $c$ to lowest order.\n- The scattering wavevector magnitude is $q = \\dfrac{4\\pi n}{\\lambda}\\sin(\\theta/2)$, where $n$ is the refractive index of the solvent, $\\lambda$ is the vacuum wavelength of the incident light, and $\\theta$ is the scattering angle. Use $\\lambda = 632.8\\,\\mathrm{nm}$ and $n=1.333$. Convert angles to radians when evaluating the sine, but the input angles are given in degrees.\n- The experimentally reduced variable for Zimm analysis is $Y = \\dfrac{K c}{R(\\theta)}$, where $R(\\theta)$ is the Rayleigh ratio and $K$ is an optical constant. In this problem, the datasets already provide $Y$ values (so you do not need $K$ or $R(\\theta)$ separately).\n- The Zimm plot linearization uses $Y$ and the Berry plot linearization uses $\\sqrt{Y}$, each treated to first order in $q^2$ and $c$.\n\nFor each dataset below:\n1. Compute $q$ for each given angle using the provided $n$ and $\\lambda$ (angles are in degrees; use radians for trigonometric functions).\n2. Assemble the paired measurements $\\{(q^2,c)\\}$ with their corresponding provided $Y$ values.\n3. Perform two separate ordinary least-squares fits of a plane in the variables $(q^2,c)$:\n   - Zimm: fit $Y$ to a linear function of $1$, $q^2$, and $c$ to first order in each variable, ignoring cross-terms and higher-order terms.\n   - Berry: fit $\\sqrt{Y}$ to a linear function of $1$, $q^2$, and $c$ to first order, ignoring cross-terms and higher-order terms.\n4. From each fit, infer $M_w$ and $R_g$ using the leading-order relationships implied by the small-$q$ form factor expansion for Gaussian coils and the dilute-solution virial expansion. Express $M_w$ in $\\mathrm{g/mol}$ and $R_g$ in $\\mathrm{nm}$.\n5. For each linearization, compute the coefficient of determination\n   $$R^2 = 1 - \\dfrac{\\sum_i \\left(y_i - \\hat{y}_i\\right)^2}{\\sum_i \\left(y_i - \\bar{y}\\right)^2},$$\n   where $y_i$ and $\\hat{y}_i$ are the observed and fitted responses, respectively, and $\\bar{y}$ is the sample mean of the response used in that linearization.\n6. Selection criterion for reliability:\n   - Prefer the linearization with the larger $R^2$.\n   - If $|R^2_{\\mathrm{Berry}} - R^2_{\\mathrm{Zimm}}|  \\delta$ with $\\delta = 0.005$, then choose the method with the smaller relative standard error of $M_w$ estimated from the ordinary least-squares covariance via the delta method for error propagation.\n7. For each dataset, output a triplet $[m, M_w, R_g]$ where $m$ is 0 for Zimm and 1 for Berry, $M_w$ is in $\\mathrm{g/mol}$, and $R_g$ is in $\\mathrm{nm}$. Round both $M_w$ and $R_g$ to three significant figures.\n\nAngles are in degrees. Trigonometric functions must use radians.\n\nTest suite datasets:\n- Common optical parameters: $\\lambda = 632.8\\,\\mathrm{nm}$, $n=1.333$.\n- Concentrations $c$ (in $\\mathrm{g/mL}$): $[0.002, 0.004, 0.006]$ for all datasets.\n- Angles $\\theta$ (in degrees): $[30, 60, 90, 120]$ for all datasets.\n- Response $Y = K c / R(\\theta)$ values are given below as $3\\times 4$ arrays in units consistent with $Y$; each row corresponds to a concentration in the listed order, each column to an angle in the listed order.\n\nDataset A (moderate angular dependence, mild noise):\n- $c = [0.002, 0.004, 0.006]$,\n- $\\theta = [30, 60, 90, 120]$,\n- $$Y =\n\\begin{bmatrix}\n1.125\\times 10^{-6}  1.160\\times 10^{-6}  1.190\\times 10^{-6}  1.200\\times 10^{-6} \\\\\n1.330\\times 10^{-6}  1.368\\times 10^{-6}  1.402\\times 10^{-6}  1.412\\times 10^{-6} \\\\\n1.536\\times 10^{-6}  1.575\\times 10^{-6}  1.608\\times 10^{-6}  1.620\\times 10^{-6}\n\\end{bmatrix}$$.\n\nDataset B (stronger curvature at higher angles):\n- $c = [0.002, 0.004, 0.006]$,\n- $\\theta = [30, 60, 90, 120]$,\n- $$Y =\n\\begin{bmatrix}\n9.600\\times 10^{-7}  1.010\\times 10^{-6}  1.090\\times 10^{-6}  1.240\\times 10^{-6} \\\\\n1.120\\times 10^{-6}  1.170\\times 10^{-6}  1.250\\times 10^{-6}  1.400\\times 10^{-6} \\\\\n1.280\\times 10^{-6}  1.330\\times 10^{-6}  1.410\\times 10^{-6}  1.560\\times 10^{-6}\n\\end{bmatrix}$$.\n\nDataset C (nearly angle-independent, small $R_g$ effective):\n- $c = [0.002, 0.004, 0.006]$,\n- $\\theta = [30, 60, 90, 120]$,\n- $$Y =\n\\begin{bmatrix}\n1.710\\times 10^{-6}  1.712\\times 10^{-6}  1.715\\times 10^{-6}  1.716\\times 10^{-6} \\\\\n1.810\\times 10^{-6}  1.812\\times 10^{-6}  1.815\\times 10^{-6}  1.816\\times 10^{-6} \\\\\n1.910\\times 10^{-6}  1.912\\times 10^{-6}  1.915\\times 10^{-6}  1.916\\times 10^{-6}\n\\end{bmatrix}$$.\n\nFinal output format:\n- Your program should produce a single line of output containing a list with three entries, one per dataset, each entry being a list $[m, M_w, R_g]$ as defined above. For example: $[[m_1,M_{w,1},R_{g,1}],[m_2,M_{w,2},R_{g,2}],[m_3,M_{w,3},R_{g,3}]]$.\n- Use $M_w$ in $\\mathrm{g/mol}$ and $R_g$ in $\\mathrm{nm}$, both rounded to three significant figures.", "solution": "The problem at hand requires the analysis of synthetic static light scattering (SLS) data for dilute polymer solutions. The objective is to determine the weight-average molecular weight, $M_w$, and the radius of gyration, $R_g$, using two distinct linearization methods: the Zimm plot and the Berry plot. A quantitative criterion will then be used to select the more reliable method for each dataset. The entire analysis is predicated on the fundamental theory of light scattering in the limit of low polymer concentration and small scattering angles.\n\nThe central equation in static light scattering from a dilute solution of non-interacting, optically isotropic macromolecules is:\n$$ \\frac{K c}{R(\\theta, c)} = \\frac{1}{M_w P(q)} + 2 A_2 c $$\nwhere $c$ is the mass concentration of the polymer, $R(\\theta, c)$ is the excess Rayleigh ratio at scattering angle $\\theta$, $K$ is an optical constant dependent on the solvent refractive index, incident wavelength, and the polymer's refractive index increment, $M_w$ is the weight-average molecular weight, $A_2$ is the second virial coefficient accounting for polymer-solvent interactions, and $P(q)$ is the particle form factor. The form factor describes the angular dependence of the scattered intensity arising from intra-particle interference. It depends on the scattering wavevector magnitude, $q$, given by:\n$$ q = \\frac{4\\pi n}{\\lambda}\\sin(\\theta/2) $$\nwhere $n$ is the refractive index of the solvent and $\\lambda$ is the vacuum wavelength of the light.\n\nFor small values of $q$, corresponding to small scattering angles or large particles, the inverse of the particle form factor can be approximated by the Guinier expansion:\n$$ P(q)^{-1} \\approx 1 + \\frac{q^2 R_g^2}{3} $$\nHere, $R_g$ is the radius of gyration, a measure of the polymer coil's spatial extent.\n\nSubstituting this expansion into the primary scattering equation yields the celebrated Zimm equation. The problem provides the reduced quantity $Y = K c / R(\\theta, c)$, so the working equation is:\n$$ Y(q, c) \\approx \\frac{1}{M_w} \\left(1 + \\frac{q^2 R_g^2}{3}\\right) + 2 A_2 c $$\nRearranging this provides the basis for the Zimm plot linearization, a planar model linear in $q^2$ and $c$:\n$$ Y(q^2, c) = \\frac{1}{M_w} + \\left(\\frac{R_g^2}{3 M_w}\\right) q^2 + (2 A_2) c $$\nThis equation is of the form $z = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2$, where the response is $z = Y$, the independent variables are $x_1 = q^2$ and $x_2 = c$, and the coefficients are:\n$$ \\beta_0 = \\frac{1}{M_w}, \\quad \\beta_1 = \\frac{R_g^2}{3 M_w}, \\quad \\beta_2 = 2 A_2 $$\nBy performing a multilinear regression of the experimental data $\\{Y_i\\}$ onto the corresponding $\\{q_i^2, c_i\\}$ values, we obtain estimates for the coefficients $\\beta_0$, $\\beta_1$, and $\\beta_2$. From these, the physical parameters $M_w$ and $R_g$ are extracted:\n$$ M_w = \\frac{1}{\\beta_0}, \\quad R_g = \\sqrt{\\frac{3 \\beta_1}{\\beta_0}} $$\n\nThe Berry plot offers an alternative linearization. It is derived by taking the square root of the Zimm equation and applying a Taylor expansion, which can, in some cases, extend the linear range to higher $q R_g$. The resulting Berry equation is:\n$$ \\sqrt{Y(q^2, c)} \\approx \\frac{1}{\\sqrt{M_w}} + \\left(\\frac{R_g^2}{6 \\sqrt{M_w}}\\right) q^2 + (A_2 \\sqrt{M_w}) c $$\nThis is also a planar model, $z = \\gamma_0 + \\gamma_1 x_1 + \\gamma_2 x_2$, where the response is now $z = \\sqrt{Y}$, and the coefficients are:\n$$ \\gamma_0 = \\frac{1}{\\sqrt{M_w}}, \\quad \\gamma_1 = \\frac{R_g^2}{6 \\sqrt{M_w}}, \\quad \\gamma_2 = A_2 \\sqrt{M_w} $$\nA multilinear regression of $\\{\\sqrt{Y_i}\\}$ onto $\\{q_i^2, c_i\\}$ yields coefficients $\\gamma_0$, $\\gamma_1$, and $\\gamma_2$. The physical parameters are then found as:\n$$ M_w = \\frac{1}{\\gamma_0^2}, \\quad R_g = \\sqrt{\\frac{6 \\gamma_1}{\\gamma_0}} $$\n\nFor each dataset, we will perform both regressions using ordinary least squares (OLS). The OLS solution for the coefficient vector $\\boldsymbol{\\beta}$ in the model $\\mathbf{z} = X \\boldsymbol{\\beta}$ is given by $\\hat{\\boldsymbol{\\beta}} = (X^T X)^{-1} X^T \\mathbf{z}$, where $X$ is the design matrix with columns for the constant term ($1$), $q^2$, and $c$, and $\\mathbf{z}$ is the vector of observed responses ($Y$ or $\\sqrt{Y}$).\n\nTo decide which linearization is more reliable, we first compute the coefficient of determination, $R^2$, for each fit:\n$$ R^2 = 1 - \\frac{\\sum_i (z_i - \\hat{z}_i)^2}{\\sum_i (z_i - \\bar{z})^2} $$\nwhere $z_i$ are the observed responses, $\\hat{z}_i$ are the fitted values from the model, and $\\bar{z}$ is the mean of the observed responses. A value of $R^2$ closer to $1$ indicates a better fit. The method with the higher $R^2$ is preferred.\n\nIf the difference in $R^2$ values is small, specifically $|R^2_{\\mathrm{Berry}} - R^2_{\\mathrm{Zimm}}|  \\delta$ where $\\delta = 0.005$, a tie-breaker rule is invoked. We must choose the method that yields a smaller relative standard error (RSE) for $M_w$. The variance of the estimated parameters $\\hat{\\boldsymbol{\\beta}}$ is given by the covariance matrix $\\mathrm{Cov}(\\hat{\\boldsymbol{\\beta}}) = \\hat{\\sigma}^2 (X^T X)^{-1}$, where $\\hat{\\sigma}^2 = \\frac{1}{N-p} \\sum_i (z_i - \\hat{z}_i)^2$ is the estimated variance of the residuals, with $N$ being the number of data points and $p$ the number of parameters.\n\nWe use the delta method to propagate the error from the fitted coefficients to $M_w$. For the Zimm fit, $M_w = 1/\\beta_0$. The variance is $\\mathrm{Var}(M_w) \\approx (\\frac{\\partial M_w}{\\partial \\beta_0})^2 \\mathrm{Var}(\\hat{\\beta}_0) = (\\frac{-1}{\\beta_0^2})^2 \\mathrm{Var}(\\hat{\\beta}_0)$. The RSE is:\n$$ \\mathrm{RSE}(M_w)_{\\mathrm{Zimm}} = \\frac{\\mathrm{SE}(M_w)}{M_w} = \\frac{\\sqrt{\\mathrm{Var}(M_w)}}{M_w} = \\frac{(1/\\beta_0^2)\\sqrt{\\mathrm{Var}(\\hat{\\beta}_0)}}{1/\\beta_0} = \\frac{\\sqrt{\\mathrm{Var}(\\hat{\\beta}_0)}}{|\\beta_0|} $$\nFor the Berry fit, $M_w = 1/\\gamma_0^2$. The variance is $\\mathrm{Var}(M_w) \\approx (\\frac{\\partial M_w}{\\partial \\gamma_0})^2 \\mathrm{Var}(\\hat{\\gamma}_0) = (\\frac{-2}{\\gamma_0^3})^2 \\mathrm{Var}(\\hat{\\gamma}_0)$. The RSE is:\n$$ \\mathrm{RSE}(M_w)_{\\mathrm{Berry}} = \\frac{\\mathrm{SE}(M_w)}{M_w} = \\frac{(2/|\\gamma_0|^3)\\sqrt{\\mathrm{Var}(\\hat{\\gamma}_0)}}{1/\\gamma_0^2} = \\frac{2\\sqrt{\\mathrm{Var}(\\hat{\\gamma}_0)}}{|\\gamma_0|} $$\nThe method yielding the lower RSE for $M_w$ is deemed more reliable under this condition.\n\nThe procedure for each dataset is to:\n$1$. Calculate $q^2$ for the given angles $\\theta = [30, 60, 90, 120]^\\circ$ using $\\lambda = 632.8\\,\\mathrm{nm}$ and $n=1.333$.\n$2$. Construct the design matrix $X$ from the $3 \\times 4 = 12$ pairs of $(q^2, c)$ values.\n$3$. Perform OLS fits for both Zimm ($Y$ response) and Berry ($\\sqrt{Y}$ response) models.\n$4$. Extract $M_w$ and $R_g$ from the regression coefficients for each model.\n$5$. Compute $R^2$ and, if necessary, the RSE of $M_w$ for both models.\n$6$. Apply the selection criterion to choose the better method ($m=0$ for Zimm, $m=1$ for Berry).\n$7$. Report the chosen method and its corresponding $M_w$ and $R_g$ values, rounded to three significant figures.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# Note: scipy is permitted but not strictly necessary for this implementation.\n# import scipy.linalg\n\ndef solve():\n    \"\"\"\n    Main function to process all datasets and print the final result.\n    \"\"\"\n\n    def round_to_significant_figures(value, sig_figs):\n        \"\"\"\n        Rounds a number to a specified number of significant figures.\n        \"\"\"\n        if value == 0:\n            return 0.0\n        return round(value, sig_figs - int(np.floor(np.log10(abs(value)))) - 1)\n\n    def analyze_sls_data(Y_data, c_vals, theta_vals, lambda_vac, n, delta):\n        \"\"\"\n        Analyzes a single SLS dataset using Zimm and Berry formalisms.\n        \"\"\"\n        # 1. Prepare data: calculate q^2 and construct design matrix\n        theta_rad = np.deg2rad(theta_vals)\n        q = (4 * np.pi * n / lambda_vac) * np.sin(theta_rad / 2)\n        q2_vals = q**2\n\n        num_c = len(c_vals)\n        num_theta = len(theta_vals)\n        num_points = num_c * num_theta\n        \n        # Design matrix X and response vectors z\n        X = np.zeros((num_points, 3))\n        Y_flat = Y_data.flatten()\n        \n        idx = 0\n        for i in range(num_c):\n            for j in range(num_theta):\n                X[idx, :] = [1, q2_vals[j], c_vals[i]]\n                idx += 1\n\n        # --- 2. Zimm Analysis ---\n        z_zimm = Y_flat\n        \n        # OLS fit: X * beta = z_zimm\n        beta, res_zimm, _, _ = np.linalg.lstsq(X, z_zimm, rcond=None)\n        beta_0, beta_1, _ = beta\n        \n        # Extract physical parameters\n        # Add small epsilon to prevent division by zero in pathological cases\n        epsilon = 1e-20\n        Mw_zimm = 1.0 / (beta_0 + epsilon)\n        # Check for non-physical result (negative slope beta_1)\n        Rg_zimm = np.sqrt(3 * beta_1 / (beta_0 + epsilon)) if beta_1 > 0 and beta_0 > 0 else 0.0\n\n        # Calculate R^2\n        z_zimm_pred = X @ beta\n        ss_res_zimm = np.sum((z_zimm - z_zimm_pred)**2)\n        ss_tot_zimm = np.sum((z_zimm - np.mean(z_zimm))**2)\n        R2_zimm = 1.0 - ss_res_zimm / (ss_tot_zimm + epsilon)\n\n        # Calculate RSE of Mw\n        p = X.shape[1] # Number of parameters (3)\n        sigma2_hat_zimm = res_zimm[0] / (num_points - p)\n        cov_beta = sigma2_hat_zimm * np.linalg.inv(X.T @ X)\n        var_beta_0 = cov_beta[0, 0]\n        rse_Mw_zimm = np.sqrt(var_beta_0) / np.abs(beta_0 + epsilon)\n\n        # --- 3. Berry Analysis ---\n        z_berry = np.sqrt(Y_flat)\n\n        # OLS fit: X * gamma = z_berry\n        gamma, res_berry, _, _ = np.linalg.lstsq(X, z_berry, rcond=None)\n        gamma_0, gamma_1, _ = gamma\n\n        # Extract physical parameters\n        Mw_berry = 1.0 / (gamma_0**2 + epsilon)\n        # Check for non-physical result\n        Rg_berry = np.sqrt(6 * gamma_1 / (gamma_0 + epsilon)) if gamma_1 > 0 and gamma_0 > 0 else 0.0\n\n        # Calculate R^2\n        z_berry_pred = X @ gamma\n        ss_res_berry = np.sum((z_berry - z_berry_pred)**2)\n        ss_tot_berry = np.sum((z_berry - np.mean(z_berry))**2)\n        R2_berry = 1.0 - ss_res_berry / (ss_tot_berry + epsilon)\n\n        # Calculate RSE of Mw\n        sigma2_hat_berry = res_berry[0] / (num_points - p)\n        cov_gamma = sigma2_hat_berry * np.linalg.inv(X.T @ X)\n        var_gamma_0 = cov_gamma[0, 0]\n        rse_Mw_berry = 2 * np.sqrt(var_gamma_0) / np.abs(gamma_0 + epsilon)\n\n        # --- 4. Selection Criterion ---\n        if np.abs(R2_berry - R2_zimm)  delta:\n            # Tie-breaker: smaller RSE of Mw\n            if rse_Mw_berry  rse_Mw_zimm:\n                m, Mw, Rg = 1, Mw_berry, Rg_berry\n            else:\n                m, Mw, Rg = 0, Mw_zimm, Rg_zimm\n        elif R2_berry > R2_zimm:\n             m, Mw, Rg = 1, Mw_berry, Rg_berry\n        else: # R2_zimm > R2_berry\n             m, Mw, Rg = 0, Mw_zimm, Rg_zimm\n\n        # --- 5. Format Output ---\n        Mw_rounded = round_to_significant_figures(Mw, 3)\n        Rg_rounded = round_to_significant_figures(Rg, 3)\n        \n        return [m, Mw_rounded, Rg_rounded]\n\n    # --- Problem Definition ---\n    lambda_vac = 632.8  # nm\n    n = 1.333\n    delta = 0.005\n    \n    c_vals = np.array([0.002, 0.004, 0.006]) # g/mL\n    theta_vals = np.array([30, 60, 90, 120]) # degrees\n\n    test_cases = [\n        # Dataset A\n        np.array([\n            [1.125e-6, 1.160e-6, 1.190e-6, 1.200e-6],\n            [1.330e-6, 1.368e-6, 1.402e-6, 1.412e-6],\n            [1.536e-6, 1.575e-6, 1.608e-6, 1.620e-6]\n        ]),\n        # Dataset B\n        np.array([\n            [9.600e-7, 1.010e-6, 1.090e-6, 1.240e-6],\n            [1.120e-6, 1.170e-6, 1.250e-6, 1.400e-6],\n            [1.280e-6, 1.330e-6, 1.410e-6, 1.560e-6]\n        ]),\n        # Dataset C\n        np.array([\n            [1.710e-6, 1.712e-6, 1.715e-6, 1.716e-6],\n            [1.810e-6, 1.812e-6, 1.815e-6, 1.816e-6],\n            [1.910e-6, 1.912e-6, 1.915e-6, 1.916e-6]\n        ])\n    ]\n\n    results = []\n    for Y_data in test_cases:\n        result = analyze_sls_data(Y_data, c_vals, theta_vals, lambda_vac, n, delta)\n        results.append(result)\n\n    # Final print statement in the exact required format\n    # Using a compact representation for the final list\n    print(str(results).replace(\" \", \"\"))\n\nsolve()\n```", "id": "2928740"}, {"introduction": "The parameters extracted from a Zimm plot are not simple number averages; they are specific statistical moments of the polymer size distribution, a consequence of the physics of light scattering. Because scattered intensity scales with the square of the particle's mass, larger species in a polydisperse sample contribute more significantly to the measured signal. This foundational exercise [@problem_id:2928726] will lead you to derive and apply the formulas for the weight-average molar mass ($M_w$) and the z-average radius of gyration ($R_{g,z}$), clarifying exactly what information a static light scattering experiment provides for a realistic, non-uniform polymer sample.", "problem": "A dilute binary mixture of two monodisperse polymers is analyzed by Static Light Scattering (SLS) using a Zimm plot (Zimm analysis). The solution is prepared in a solvent where interparticle interactions are negligible at the measurement concentration (the second virial coefficient can be taken as zero), the refractive index increment is the same for both species, and single scattering holds. Each chain’s scattering amplitude is proportional to its mass, and for small scattering vector magnitude $q$ the single-chain form factor admits the leading-order expansion in $q^{2}$. The mixture contains species $1$ and $2$ with molar masses $M_{1}$ and $M_{2}$, radii of gyration $R_{g,1}$ and $R_{g,2}$, and mass fractions (with respect to total solute mass) $w_{1}$ and $w_{2}$, with $w_{1}+w_{2}=1$. Starting from the additivity of scattered intensities over independent particles and the small-$q$ expansion of the single-chain form factor, derive the expressions for the apparent weight-average molar mass and the $z$-average radius of gyration that are reported by the intercept and initial angular slope (as $q \\to 0$) in a Zimm analysis of a polydisperse mixture. Then evaluate these expressions numerically for the following mixture:\n- $M_{1} = 1.00 \\times 10^{5}$ $\\mathrm{g\\,mol^{-1}}$, $R_{g,1} = 12.0$ $\\mathrm{nm}$,\n- $M_{2} = 1.00 \\times 10^{6}$ $\\mathrm{g\\,mol^{-1}}$, $R_{g,2} = 38.0$ $\\mathrm{nm}$,\n- $w_{1} = 0.70$, $w_{2} = 0.30$.\n\nReport the apparent weight-average molar mass $M_{w}$ in $\\mathrm{g\\,mol^{-1}}$ and the $z$-average radius of gyration $R_{g,z}$ in $\\mathrm{nm}$. Round both numerical answers to three significant figures.", "solution": "The problem requires the derivation of the expressions for the weight-average molar mass, $M_w$, and the z-average radius of gyration, $R_{g,z}$, from a static light scattering (SLS) analysis of a polydisperse polymer mixture, followed by a numerical calculation for a specific binary mixture. The problem has been validated and is scientifically sound, well-posed, and contains all necessary information.\n\nThe fundamental equation for static light scattering from a dilute polymer solution is the Zimm equation. For a polydisperse system at a total solute mass concentration $c$, and assuming the second virial coefficient $A_2$ is zero (as stated for the given solvent), the equation is:\n$$ \\frac{K c}{R_\\theta(q)} = \\frac{1}{\\sum_{i} w_i M_i P_i(q)} $$\nwhere $K$ is an optical constant that depends on the solvent refractive index, wavelength, and the refractive index increment $dn/dc$ (assumed constant for all species), $R_\\theta(q)$ is the excess Rayleigh ratio at scattering vector magnitude $q$, $w_i$ is the mass fraction of species $i$, $M_i$ is its molar mass, and $P_i(q)$ is its single-chain form factor. The scattering vector magnitude is related to the scattering angle $\\theta$ by $q = \\frac{4\\pi n}{\\lambda} \\sin(\\frac{\\theta}{2})$, where $n$ is the solvent refractive index and $\\lambda$ is the vacuum wavelength of the incident light.\n\nThe problem states that for small $q$, the single-chain form factor can be expanded to leading order in $q^2$. This is the Guinier approximation:\n$$ P_i(q) \\approx 1 - \\frac{q^2 R_{g,i}^2}{3} $$\nwhere $R_{g,i}$ is the radius of gyration of species $i$.\n\nSubstituting this expansion into the denominator of the Zimm equation gives:\n$$ \\sum_i w_i M_i P_i(q) \\approx \\sum_i w_i M_i \\left(1 - \\frac{q^2 R_{g,i}^2}{3}\\right) = \\sum_i w_i M_i - \\frac{q^2}{3} \\sum_i w_i M_i R_{g,i}^2 $$\nThe first term, $\\sum_i w_i M_i$, is by definition the weight-average molar mass, $M_w$.\n$$ M_w \\equiv \\frac{\\sum_i c_i M_i}{\\sum_i c_i} = \\sum_i \\frac{c_i}{c} M_i = \\sum_i w_i M_i $$\nSo the denominator becomes $M_w - \\frac{q^2}{3} \\sum_i w_i M_i R_{g,i}^2$.\n\nThe Zimm equation for small $q$ is thus:\n$$ \\frac{K c}{R_\\theta(q)} \\approx \\frac{1}{M_w - \\frac{q^2}{3} \\sum_i w_i M_i R_{g,i}^2} $$\nTo analyze this expression in the form of a linear plot, we perform a Taylor expansion for small $q^2$, using the approximation $(1-x)^{-1} \\approx 1+x$ for small $x$:\n$$ \\frac{K c}{R_\\theta(q)} \\approx \\frac{1}{M_w} \\left( \\frac{1}{1 - \\frac{q^2}{3M_w} \\sum_i w_i M_i R_{g,i}^2} \\right) \\approx \\frac{1}{M_w} \\left( 1 + \\frac{q^2}{3M_w} \\sum_i w_i M_i R_{g,i}^2 \\right) $$\nThis expression shows that a plot of $\\frac{K c}{R_\\theta(q)}$ versus $q^2$ is linear at small $q^2$.\n\nIn a Zimm analysis, the apparent molar mass is obtained from the extrapolation to zero scattering angle ($q \\to 0$). From the derived expression:\n$$ \\lim_{q\\to 0} \\frac{K c}{R_\\theta(q)} = \\frac{1}{M_w} $$\nThus, the apparent molar mass measured by SLS is the weight-average molar mass, $M_w$. The first derived expression is:\n$$ M_w = \\sum_i w_i M_i $$\n\nThe apparent radius of gyration is determined from the initial slope of the plot of $\\frac{K c}{R_\\theta(q)}$ versus $q^2$. For a monodisperse system, this equation would be $\\frac{K c}{R_\\theta(q)} \\approx \\frac{1}{M}(1 + \\frac{q^2 R_g^2}{3})$. The ratio of the initial slope to the intercept is $\\frac{R_g^2/ (3M)}{1/M} = \\frac{R_g^2}{3}$.\nFor our polydisperse system, the intercept is $I = \\frac{1}{M_w}$ and the initial slope with respect to $q^2$ is $S_{q^2} = \\frac{1}{3M_w^2} \\sum_i w_i M_i R_{g,i}^2$. The ratio of the slope to the intercept gives:\n$$ \\frac{S_{q^2}}{I} = \\frac{\\frac{1}{3M_w^2} \\sum_i w_i M_i R_{g,i}^2}{\\frac{1}{M_w}} = \\frac{1}{3M_w} \\sum_i w_i M_i R_{g,i}^2 $$\nThis ratio defines the apparent mean-square radius of gyration, $\\langle R_g^2 \\rangle_{app}$, divided by $3$:\n$$ \\frac{\\langle R_g^2 \\rangle_{app}}{3} = \\frac{\\sum_i w_i M_i R_{g,i}^2}{3 M_w} \\implies \\langle R_g^2 \\rangle_{app} = \\frac{\\sum_i w_i M_i R_{g,i}^2}{M_w} = \\frac{\\sum_i w_i M_i R_{g,i}^2}{\\sum_i w_i M_i} $$\nThis expression is the definition of the z-average mean-square radius of gyration, $R_{g,z}^2$. Therefore, the radius of gyration reported by SLS is the z-average radius of gyration, $R_{g,z}$. The second derived expression is:\n$$ R_{g,z} = \\sqrt{\\frac{\\sum_i w_i M_i R_{g,i}^2}{\\sum_i w_i M_i}} $$\n\nNow, we evaluate these expressions for the given binary mixture ($i=1, 2$):\n- $M_1 = 1.00 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}}$, $R_{g,1} = 12.0 \\ \\mathrm{nm}$, $w_1 = 0.70$\n- $M_2 = 1.00 \\times 10^6 \\ \\mathrm{g\\,mol^{-1}}$, $R_{g,2} = 38.0 \\ \\mathrm{nm}$, $w_2 = 0.30$\n\nThe weight-average molar mass $M_w$ is:\n$$ M_w = w_1 M_1 + w_2 M_2 = (0.70)(1.00 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}}) + (0.30)(1.00 \\times 10^6 \\ \\mathrm{g\\,mol^{-1}}) $$\n$$ M_w = 7.0 \\times 10^4 \\ \\mathrm{g\\,mol^{-1}} + 3.0 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}} = 3.7 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}} $$\nRounding to three significant figures as requested:\n$$ M_w = 3.70 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}} $$\n\nThe z-average mean-square radius of gyration $R_{g,z}^2$ is:\n$$ R_{g,z}^2 = \\frac{w_1 M_1 R_{g,1}^2 + w_2 M_2 R_{g,2}^2}{M_w} $$\nThe numerator is:\n$$ w_1 M_1 R_{g,1}^2 + w_2 M_2 R_{g,2}^2 = (0.70)(1.00 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}})(12.0 \\ \\mathrm{nm})^2 + (0.30)(1.00 \\times 10^6 \\ \\mathrm{g\\,mol^{-1}})(38.0 \\ \\mathrm{nm})^2 $$\n$$ = (7.0 \\times 10^4)(144) \\ \\mathrm{g\\,mol^{-1}\\,nm^2} + (3.0 \\times 10^5)(1444) \\ \\mathrm{g\\,mol^{-1}\\,nm^2} $$\n$$ = 1.008 \\times 10^7 \\ \\mathrm{g\\,mol^{-1}\\,nm^2} + 4.332 \\times 10^8 \\ \\mathrm{g\\,mol^{-1}\\,nm^2} $$\n$$ = 4.4328 \\times 10^8 \\ \\mathrm{g\\,mol^{-1}\\,nm^2} $$\nNow, we calculate $R_{g,z}^2$:\n$$ R_{g,z}^2 = \\frac{4.4328 \\times 10^8 \\ \\mathrm{g\\,mol^{-1}\\,nm^2}}{3.7 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}}} \\approx 1198.05 \\ \\mathrm{nm}^2 $$\nThe z-average radius of gyration $R_{g,z}$ is the square root:\n$$ R_{g,z} = \\sqrt{1198.05 \\ \\mathrm{nm}^2} \\approx 34.613 \\ \\mathrm{nm} $$\nRounding to three significant figures:\n$$ R_{g,z} = 34.6 \\ \\mathrm{nm} $$\n\nThe calculated values are $M_w = 3.70 \\times 10^5 \\ \\mathrm{g\\,mol^{-1}}$ and $R_{g,z} = 34.6 \\ \\mathrm{nm}$.", "answer": "$$\n\\boxed{\\begin{pmatrix} 3.70 \\times 10^{5}  34.6 \\end{pmatrix}}\n$$", "id": "2928726"}]}