{"hands_on_practices": [{"introduction": "This first exercise provides a foundational application of the elastic continuum theory. You will use the calculus of variations to derive the equilibrium director configuration of a nematic liquid crystal confined in a simple \"twist cell,\" a classic geometry where the orientation is fixed at the boundaries [@problem_id:2913547]. Successfully solving this problem demonstrates how to simplify the Frank-Oseen energy functional for a specific setup and solve the resulting Euler–Lagrange equation to find the energy-minimizing state.", "problem": "A nematic liquid crystal is confined between two parallel, planar substrates separated by a distance $d$ along the $z$-axis, with no external electric or magnetic fields applied. The director is a unit vector $\\mathbf{n}$ subject to strong planar anchoring on both substrates. The anchoring fixes the in-plane director orientation at $z=0$ to be at angle $\\phi(0)=\\phi_{0}$ and at $z=d$ to be at angle $\\phi(d)=\\phi_{d}$, both measured in radians in the substrate plane relative to the $x$-axis. Assume a one-dimensional geometry in which $\\mathbf{n}$ depends only on $z$ and remains in the plane of the substrates, so that $\\mathbf{n}(z)=\\big(\\cos\\phi(z),\\,\\sin\\phi(z),\\,0\\big)$.\n\nStarting from the elastic continuum theory for liquid crystals (Oseen–Frank free energy) and enforcing the unit-length constraint on $\\mathbf{n}$, derive the Euler–Lagrange equation appropriate to this geometry at zero field and integrate it to obtain the director angle profile $\\phi(z)$ that minimizes the elastic free energy subject to the given strong anchoring boundary conditions. Express your final answer as a single closed-form analytic expression for $\\phi(z)$ in radians as a function of $z$, $\\phi_{0}$, $\\phi_{d}$, and $d$.", "solution": "The problem as stated is subjected to validation.\n\n**Step 1: Extract Givens**\n- **System**: A nematic liquid crystal confined between two parallel, planar substrates.\n- **Separation**: Distance $d$ along the $z$-axis.\n- **External Fields**: None.\n- **Director**: $\\mathbf{n}$, a unit vector.\n- **Anchoring**: Strong planar anchoring on both substrates.\n- **Boundary Conditions**: The director angle $\\phi(z)$ is fixed at the boundaries: $\\phi(0) = \\phi_0$ and $\\phi(d) = \\phi_d$.\n- **Geometry**: The director field is restricted to a one-dimensional form, $\\mathbf{n}(z) = \\big(\\cos\\phi(z), \\sin\\phi(z), 0\\big)$.\n- **Objective**: Derive the Euler-Lagrange equation from the Oseen-Frank free energy and solve it to find the director angle profile $\\phi(z)$ that minimizes the elastic free energy.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The problem is a standard, fundamental application of the Oseen-Frank elastic continuum theory for nematic liquid crystals. The configuration described is a classic \"twist cell\". All concepts—director field, elastic constants, free energy minimization, anchoring—are central to the field of soft matter physics. The problem is scientifically sound.\n- **Well-Posedness**: The problem provides a well-defined functional to be minimized (the Oseen-Frank free energy) and sufficient boundary conditions to uniquely determine the solution of the resulting second-order ordinary differential equation.\n- **Objectivity**: The problem is stated in precise, objective, mathematical language, free from ambiguity or subjective claims.\n\n**Step 3: Verdict and Action**\nThe problem is valid. It is a well-posed, scientifically grounded problem from the field of continuum mechanics of liquid crystals. A solution will be derived.\n\nThe starting point for this analysis is the Oseen-Frank elastic free energy density, $f_{el}$, for a nematic liquid crystal in the absence of external fields:\n$$ f_{el} = \\frac{1}{2} K_{11} (\\nabla \\cdot \\mathbf{n})^2 + \\frac{1}{2} K_{22} (\\mathbf{n} \\cdot (\\nabla \\times \\mathbf{n}))^2 + \\frac{1}{2} K_{33} |\\mathbf{n} \\times (\\nabla \\times \\mathbf{n})|^2 $$\nHere, $K_{11}$, $K_{22}$, and $K_{33}$ are the elastic constants corresponding to splay, twist, and bend deformations, respectively. The director field $\\mathbf{n}$ is a unit vector, $|\\mathbf{n}|=1$.\n\nThe problem specifies a one-dimensional director configuration that depends only on the coordinate $z$:\n$$ \\mathbf{n}(z) = \\cos\\phi(z) \\hat{\\mathbf{x}} + \\sin\\phi(z) \\hat{\\mathbf{y}} $$\nWe must evaluate the three elastic terms for this specific director field.\n\n$1$. **Splay Term**: The divergence of the director field is\n$$ \\nabla \\cdot \\mathbf{n} = \\frac{\\partial n_x}{\\partial x} + \\frac{\\partial n_y}{\\partial y} + \\frac{\\partial n_z}{\\partial z} $$\nSince $n_x$ and $n_y$ depend only on $z$, and $n_z=0$, all terms are zero.\n$$ \\nabla \\cdot \\mathbf{n} = 0 $$\nTherefore, the splay contribution to the free energy is zero.\n\n$2$. **Twist and Bend Terms**: First, we compute the curl of the director field.\n$$ \\nabla \\times \\mathbf{n} = \\begin{vmatrix} \\hat{\\mathbf{x}} & \\hat{\\mathbf{y}} & \\hat{\\mathbf{z}} \\\\ \\frac{\\partial}{\\partial x} & \\frac{\\partial}{\\partial y} & \\frac{\\partial}{\\partial z} \\\\ \\cos\\phi(z) & \\sin\\phi(z) & 0 \\end{vmatrix} $$\nEvaluating the determinant gives:\n$$ \\nabla \\times \\mathbf{n} = \\left(-\\cos\\phi \\frac{d\\phi}{dz}, -\\sin\\phi \\frac{d\\phi}{dz}, 0\\right) $$\nNow we evaluate the twist term, $\\mathbf{n} \\cdot (\\nabla \\times \\mathbf{n})$:\n$$ \\mathbf{n} \\cdot (\\nabla \\times \\mathbf{n}) = (\\cos\\phi, \\sin\\phi, 0) \\cdot \\left(-\\cos\\phi \\frac{d\\phi}{dz}, -\\sin\\phi \\frac{d\\phi}{dz}, 0\\right) $$\n$$ \\mathbf{n} \\cdot (\\nabla \\times \\mathbf{n}) = -\\cos^2\\phi \\frac{d\\phi}{dz} - \\sin^2\\phi \\frac{d\\phi}{dz} = -(\\cos^2\\phi + \\sin^2\\phi) \\frac{d\\phi}{dz} = -\\frac{d\\phi}{dz} $$\nThe twist energy density contribution is $\\frac{1}{2}K_{22} (-\\frac{d\\phi}{dz})^2 = \\frac{1}{2}K_{22}(\\frac{d\\phi}{dz})^2$.\n\nNext, we evaluate the bend term, $\\mathbf{n} \\times (\\nabla \\times \\mathbf{n})$:\n$$ \\mathbf{n} \\times (\\nabla \\times \\mathbf{n}) = \\begin{vmatrix} \\hat{\\mathbf{x}} & \\hat{\\mathbf{y}} & \\hat{\\mathbf{z}} \\\\ \\cos\\phi & \\sin\\phi & 0 \\\\ -\\cos\\phi \\frac{d\\phi}{dz} & -\\sin\\phi \\frac{d\\phi}{dz} & 0 \\end{vmatrix} $$\nThe $\\hat{\\mathbf{x}}$ and $\\hat{\\mathbf{y}}$ components are zero. The $\\hat{\\mathbf{z}}$ component is:\n$$ \\cos\\phi \\left(-\\sin\\phi \\frac{d\\phi}{dz}\\right) - \\sin\\phi \\left(-\\cos\\phi \\frac{d\\phi}{dz}\\right) = -\\cos\\phi\\sin\\phi \\frac{d\\phi}{dz} + \\sin\\phi\\cos\\phi \\frac{d\\phi}{dz} = 0 $$\nThus, $\\mathbf{n} \\times (\\nabla \\times \\mathbf{n}) = \\mathbf{0}$, and the bend contribution to the free energy is zero.\n\nThe only non-zero contribution to the elastic energy density for this geometry is the twist term. The free energy density simplifies to:\n$$ f_{el} = \\frac{1}{2} K_{22} \\left(\\frac{d\\phi}{dz}\\right)^2 $$\nThe total elastic free energy per unit area, $F$, is the integral of this density over the thickness of the cell:\n$$ F[\\phi(z)] = \\int_0^d f_{el} dz = \\int_0^d \\frac{1}{2} K_{22} \\left(\\frac{d\\phi}{dz}\\right)^2 dz $$\nTo find the director profile $\\phi(z)$ that minimizes this functional, we use the calculus of variations. The integrand is the Lagrangian $L(\\phi, \\phi', z) = \\frac{1}{2} K_{22} (\\phi')^2$, where $\\phi' = d\\phi/dz$. The corresponding Euler-Lagrange equation is:\n$$ \\frac{\\partial L}{\\partial \\phi} - \\frac{d}{dz}\\left(\\frac{\\partial L}{\\partial \\phi'}\\right) = 0 $$\nWe compute the partial derivatives:\n$$ \\frac{\\partial L}{\\partial \\phi} = 0 $$\n$$ \\frac{\\partial L}{\\partial \\phi'} = \\frac{\\partial}{\\partial \\phi'}\\left(\\frac{1}{2} K_{22} (\\phi')^2\\right) = K_{22} \\phi' = K_{22} \\frac{d\\phi}{dz} $$\nSubstituting these into the Euler-Lagrange equation gives:\n$$ 0 - \\frac{d}{dz}\\left(K_{22} \\frac{d\\phi}{dz}\\right) = 0 $$\nAssuming the elastic constant $K_{22}$ is a material constant and does not depend on $z$, we have:\n$$ \\frac{d^2\\phi}{dz^2} = 0 $$\nThis is the governing differential equation for the angle profile $\\phi(z)$. We solve this equation by integrating twice with respect to $z$.\nFirst integration yields:\n$$ \\frac{d\\phi}{dz} = C_1 $$\nwhere $C_1$ is a constant of integration. Second integration yields:\n$$ \\phi(z) = C_1 z + C_2 $$\nwhere $C_2$ is a second constant of integration.\n\nThe values of the constants $C_1$ and $C_2$ are determined by the strong anchoring boundary conditions provided in the problem statement.\nAt $z=0$:\n$$ \\phi(0) = \\phi_0 \\implies C_1(0) + C_2 = \\phi_0 \\implies C_2 = \\phi_0 $$\nAt $z=d$:\n$$ \\phi(d) = \\phi_d \\implies C_1 d + C_2 = \\phi_d $$\nSubstituting the value of $C_2 = \\phi_0$ into the second equation:\n$$ C_1 d + \\phi_0 = \\phi_d \\implies C_1 d = \\phi_d - \\phi_0 \\implies C_1 = \\frac{\\phi_d - \\phi_0}{d} $$\nSubstituting the determined constants $C_1$ and $C_2$ back into the general solution for $\\phi(z)$, we obtain the final expression for the director angle profile:\n$$ \\phi(z) = \\left(\\frac{\\phi_d - \\phi_0}{d}\\right) z + \\phi_0 $$\nThis linear profile represents a uniform twist of the nematic director through the cell, which is the configuration that minimizes the elastic free energy for the specified geometry and boundary conditions.", "answer": "$$ \\boxed{\\phi_0 + \\frac{\\phi_d - \\phi_0}{d} z} $$", "id": "2913547"}, {"introduction": "Having explored how a liquid crystal responds to geometric constraints, we now introduce an external electric field. This practice guides you through a linear stability analysis to determine the critical field strength for the Frederiks transition, a fundamental electro-optic effect [@problem_id:2913534]. By identifying the point of bifurcation, you will understand how competition between elastic and electric energies leads to a sharp structural change, a principle that underpins most liquid crystal displays.", "problem": "Consider a nematic liquid crystal in a planar cell of thickness $d$ bounded by two parallel plates at $z=0$ and $z=d$. Strong planar anchoring imposes a uniform director $\\mathbf{n}_0=\\hat{\\mathbf{x}}$ at both plates. A static, uniform electric field $\\mathbf{E}=E\\,\\hat{\\mathbf{z}}$ is applied perpendicular to the plates. Assume positive dielectric anisotropy $\\Delta \\varepsilon>0$, one-constant Frank elasticity with elastic constant $K>0$, and that deformations are uniform in the $x$ and $y$ directions so that only $z$-dependence needs to be considered. \n\nStarting from the standard Frank–Oseen elastic free energy density and the quadratic dielectric coupling to the field, perform a linear stability analysis of the uniformly aligned state $\\mathbf{n}_0$ by considering a small out-of-plane tilt described by a scalar field $\\theta(z)$, defined such that $\\mathbf{n}\\approx(\\cos\\theta(z),0,\\sin\\theta(z))$. Impose strong anchoring conditions at the plates. Show that the loss of stability of the uniform state occurs as a bifurcation in the lowest mode of the corresponding Sturm–Liouville eigenvalue problem and determine the exact analytical expression for the critical electric field magnitude $E_c$ at which this bifurcation first occurs (the Frederiks threshold). \n\nExpress your final answer symbolically in terms of $K$, $\\varepsilon_0$, $\\Delta \\varepsilon$, and $d$. Do not insert numerical values. Express the field in volts per meter. The final answer must be a single closed-form analytic expression.", "solution": "The problem requires the determination of the critical electric field for the Frederiks transition in a nematic liquid crystal with planar alignment. We begin by constructing the total free energy functional for the system and then perform a linear stability analysis to find the threshold for the instability of the uniformly aligned state.\n\nThe director field $\\mathbf{n}$ is assumed to depend only on the coordinate $z$, which is perpendicular to the confining plates. The director is described by a single angle of tilt, $\\theta(z)$, out of the $x-y$ plane:\n$$\n\\mathbf{n}(z) = (\\cos\\theta(z), 0, \\sin\\theta(z))\n$$\nThe unperturbed state corresponds to uniform alignment along the $x$-axis, $\\mathbf{n}_0 = \\hat{\\mathbf{x}}$, which is equivalent to $\\theta(z)=0$ for all $z$.\n\nThe total free energy density, $f_{tot}$, is the sum of the elastic free energy density, $f_{el}$, and the electric free energy density, $f_{elec}$.\n\nIn the one-constant approximation with elastic constant $K$, the Frank-Oseen elastic free energy density is given by:\n$$\nf_{el} = \\frac{1}{2}K \\left[ (\\nabla \\cdot \\mathbf{n})^2 + (\\mathbf{n} \\cdot (\\nabla \\times \\mathbf{n}))^2 + |\\mathbf{n} \\times (\\nabla \\times \\mathbf{n})|^2 \\right]\n$$\nFor the given director field $\\mathbf{n}(z)$, the divergence and curl are:\n$$\n\\nabla \\cdot \\mathbf{n} = \\frac{\\partial n_x}{\\partial x} + \\frac{\\partial n_y}{\\partial y} + \\frac{\\partial n_z}{\\partial z} = \\frac{d}{dz}(\\sin\\theta(z)) = \\cos\\theta(z) \\frac{d\\theta}{dz}\n$$\n$$\n\\nabla \\times \\mathbf{n} = \\left(0, \\frac{\\partial n_x}{\\partial z} - \\frac{\\partial n_z}{\\partial x}, 0\\right) = \\left(0, -\\sin\\theta(z) \\frac{d\\theta}{dz}, 0\\right)\n$$\nSubstituting these into the expression for $f_{el}$:\nThe splay term is $(\\nabla \\cdot \\mathbf{n})^2 = \\cos^2\\theta \\left(\\frac{d\\theta}{dz}\\right)^2$.\nThe twist term is $(\\mathbf{n} \\cdot (\\nabla \\times \\mathbf{n}))^2 = 0$, as the deformation is confined to the $x-z$ plane.\nThe bend term is $|\\mathbf{n} \\times (\\nabla \\times \\mathbf{n})|^2 = \\sin^2\\theta \\left(\\frac{d\\theta}{dz}\\right)^2$.\nThus, the elastic energy density simplifies to:\n$$\nf_{el} = \\frac{1}{2}K \\left[ \\cos^2\\theta\\left(\\frac{d\\theta}{dz}\\right)^2 + \\sin^2\\theta\\left(\\frac{d\\theta}{dz}\\right)^2 \\right] = \\frac{1}{2}K \\left(\\frac{d\\theta}{dz}\\right)^2\n$$\n\nThe electric free energy density due to the coupling with the external field $\\mathbf{E} = E\\hat{\\mathbf{z}}$ is:\n$$\nf_{elec} = -\\frac{1}{2} \\varepsilon_0 \\Delta\\varepsilon (\\mathbf{n} \\cdot \\mathbf{E})^2\n$$\nwhere $\\Delta\\varepsilon > 0$ is the dielectric anisotropy. We have ignored the term $-\\frac{1}{2}\\varepsilon_0\\varepsilon_\\perp E^2$, as it is independent of the director orientation and does not contribute to the torques.\nThe scalar product is $\\mathbf{n} \\cdot \\mathbf{E} = (\\cos\\theta, 0, \\sin\\theta) \\cdot (0, 0, E) = E\\sin\\theta$.\nSo, the electric energy density is:\n$$\nf_{elec} = -\\frac{1}{2} \\varepsilon_0 \\Delta\\varepsilon E^2 \\sin^2\\theta\n$$\n\nThe total free energy density is:\n$$\nf_{tot}(\\theta, \\theta') = f_{el} + f_{elec} = \\frac{1}{2}K \\left(\\frac{d\\theta}{dz}\\right)^2 - \\frac{1}{2}\\varepsilon_0 \\Delta\\varepsilon E^2 \\sin^2\\theta\n$$\nWe perform a linear stability analysis around the uniform state $\\theta=0$. For small tilt angles, $\\theta(z) \\ll 1$, we can use the approximation $\\sin\\theta \\approx \\theta$. The linearized free energy density is:\n$$\nf_{tot} \\approx \\frac{1}{2}K \\left(\\frac{d\\theta}{dz}\\right)^2 - \\frac{1}{2}\\varepsilon_0 \\Delta\\varepsilon E^2 \\theta^2\n$$\nThe total free energy per unit area, $F$, is the integral of this density over the cell thickness $d$:\n$$\nF[\\theta] = \\int_0^d \\left[ \\frac{1}{2}K \\left(\\frac{d\\theta}{dz}\\right)^2 - \\frac{1}{2}\\varepsilon_0 \\Delta\\varepsilon E^2 \\theta^2 \\right] dz\n$$\nThe equilibrium configuration $\\theta(z)$ minimizes this functional. The corresponding Euler-Lagrange equation is:\n$$\n\\frac{\\partial f_{tot}}{\\partial \\theta} - \\frac{d}{dz} \\left( \\frac{\\partial f_{tot}}{\\partial \\theta'} \\right) = 0\n$$\nwhere $\\theta' = d\\theta/dz$.\nWith $f_{tot} = \\frac{1}{2}K(\\theta')^2 - \\frac{1}{2}\\varepsilon_0\\Delta\\varepsilon E^2\\theta^2$, we have:\n$$\n-\\varepsilon_0 \\Delta\\varepsilon E^2 \\theta - \\frac{d}{dz}(K\\theta') = 0\n$$\n$$\nK\\frac{d^2\\theta}{dz^2} + \\varepsilon_0 \\Delta\\varepsilon E^2 \\theta = 0\n$$\nThis is a second-order linear ordinary differential equation. We define a parameter $q^2 = \\frac{\\varepsilon_0 \\Delta\\varepsilon E^2}{K}$, so the equation becomes:\n$$\n\\frac{d^2\\theta}{dz^2} + q^2 \\theta = 0\n$$\nThe problem specifies strong planar anchoring at $z=0$ and $z=d$, meaning the director is fixed as $\\mathbf{n}=\\hat{\\mathbf{x}}$ at the boundaries. This imposes the boundary conditions:\n$$\n\\theta(0) = 0 \\quad \\text{and} \\quad \\theta(d) = 0\n$$\nThe general solution to the differential equation is $\\theta(z) = A\\sin(qz) + B\\cos(qz)$.\nApplying the first boundary condition, $\\theta(0)=0$:\n$$\nA\\sin(0) + B\\cos(0) = 0 \\implies B=0\n$$\nThe solution reduces to $\\theta(z) = A\\sin(qz)$.\nApplying the second boundary condition, $\\theta(d)=0$:\n$$\nA\\sin(qd) = 0\n$$\nThis equation admits two types of solutions. The first is the trivial solution $A=0$, which corresponds to $\\theta(z)=0$ for all $z$, representing the undistorted state. This state is stable for low electric fields.\nA non-trivial solution ($A \\neq 0$) exists only if $\\sin(qd)=0$. This condition is met when:\n$$\nqd = m\\pi, \\quad \\text{for } m \\in \\{1, 2, 3, \\ldots\\}\n$$\nThe case $m=0$ is excluded as it leads to $q=0$, which again implies the trivial solution $\\theta(z)=0$. Each integer $m$ corresponds to a deformation mode $\\theta_m(z) = A\\sin(\\frac{m\\pi z}{d})$.\n\nThe equation $K\\theta'' + \\lambda\\theta = 0$ with $\\lambda = \\varepsilon_0 \\Delta\\varepsilon E^2$ and homogeneous Dirichlet boundary conditions constitutes a Sturm-Liouville eigenvalue problem. A non-trivial solution exists only if $\\lambda$ is one of the eigenvalues of the operator $-K\\frac{d^2}{dz^2}$. These eigenvalues are $\\lambda_m = K(\\frac{m\\pi}{d})^2$.\nThe instability of the uniform state first occurs when the parameter $\\lambda$ reaches the lowest possible eigenvalue, which corresponds to $m=1$. This defines the critical electric field, $E_c$.\nSetting $m=1$, we have $q_c d = \\pi$, or $q_c = \\pi/d$.\nSubstituting back the definition of $q$:\n$$\n\\sqrt{\\frac{\\varepsilon_0 \\Delta\\varepsilon E_c^2}{K}} = \\frac{\\pi}{d}\n$$\nSquaring both sides and solving for $E_c^2$:\n$$\n\\frac{\\varepsilon_0 \\Delta\\varepsilon E_c^2}{K} = \\left(\\frac{\\pi}{d}\\right)^2\n$$\n$$\nE_c^2 = \\frac{K}{\\varepsilon_0 \\Delta\\varepsilon} \\left(\\frac{\\pi}{d}\\right)^2\n$$\nTaking the square root gives the magnitude of the critical electric field, known as the Frederiks threshold:\n$$\nE_c = \\frac{\\pi}{d} \\sqrt{\\frac{K}{\\varepsilon_0 \\Delta\\varepsilon}}\n$$\nBelow this field, the only stable solution is the uniform state $\\theta=0$. At $E=E_c$, a bifurcation occurs where the deformed state with the lowest mode shape $\\theta(z) \\propto \\sin(\\pi z/d)$ becomes a possible equilibrium configuration, marking the loss of stability of the uniform state.", "answer": "$$\n\\boxed{\\frac{\\pi}{d} \\sqrt{\\frac{K}{\\varepsilon_0 \\Delta \\varepsilon}}}\n$$", "id": "2913534"}, {"introduction": "While analytical solutions are powerful, many real-world problems require numerical methods. This final exercise challenges you to translate the continuum theory into a computational model by implementing a finite-difference scheme for the elastic energy [@problem_id:2913526]. You will develop a projected gradient descent algorithm to minimize the energy while rigorously enforcing the unit-length director constraint, $\\lVert \\mathbf{n} \\rVert = 1$, providing a hands-on introduction to the simulation techniques used in modern soft matter research.", "problem": "You are asked to implement and test a finite-difference discretization of the one-constant Oseen–Frank elastic energy for a liquid crystal director field on a three-dimensional cubic lattice with periodic boundary conditions, while preserving the unit-length constraint of the director via a projection-based update. Your program must compute the discrete energy and perform a projected gradient-descent step that respects the constraint.\n\nFundamental base. In the one-constant approximation, the elastic free energy density of a nematic liquid crystal director field (unit vector field) is given by $f = \\tfrac{K}{2}\\lVert \\nabla \\mathbf{n} \\rVert^2$, where $K$ is the Frank elastic constant (units of Newton, equal to Joule per meter), $\\mathbf{n}(\\mathbf{x}) \\in \\mathbb{R}^3$ is the director field with constraint $\\lVert \\mathbf{n} \\rVert = 1$, and $\\nabla \\mathbf{n}$ is the spatial gradient. The total elastic free energy is $E = \\int_{\\Omega} f \\, dV$. On a uniform cubic grid with spacing $h$ and periodic boundary conditions, a consistent forward-difference discretization that counts each nearest-neighbor bond once yields the discrete energy\n$$\nE_h(\\{\\mathbf{n}_{i,j,k}\\}) = \\frac{K h}{2} \\sum_{i,j,k} \\sum_{\\alpha \\in \\{x,y,z\\}} \\left\\lVert \\mathbf{n}_{\\mathbf{r}+\\hat{e}_\\alpha} - \\mathbf{n}_{\\mathbf{r}} \\right\\rVert^2,\n$$\nwhere $\\mathbf{r} = (i,j,k)$ indexes lattice sites, $\\hat{e}_\\alpha$ denotes the unit shift by one grid spacing along axis $\\alpha$, and $\\mathbf{n}_{\\mathbf{r}} \\in \\mathbb{R}^3$ denotes the director at site $\\mathbf{r}$. The gradient of this discrete energy with respect to $\\mathbf{n}_{\\mathbf{r}}$ is given by a discrete Laplacian:\n$$\n\\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h = K h \\left( 6 \\, \\mathbf{n}_{\\mathbf{r}} - \\sum_{\\alpha \\in \\{x,y,z\\}} \\left[ \\mathbf{n}_{\\mathbf{r}+\\hat{e}_\\alpha} + \\mathbf{n}_{\\mathbf{r}-\\hat{e}_\\alpha} \\right] \\right).\n$$\nTo preserve the constraint $\\lVert \\mathbf{n}_{\\mathbf{r}} \\rVert = 1$ during a descent step, use a projection-based scheme: first project the gradient onto the tangent plane at each site,\n$$\n\\mathbf{g}_{\\mathbf{r}}^{\\mathrm{tan}} = \\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h - \\left( \\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h \\cdot \\mathbf{n}_{\\mathbf{r}} \\right) \\mathbf{n}_{\\mathbf{r}},\n$$\nthen update with a step size $\\tau = \\frac{c}{K h}$ (with dimensionless $c$) as\n$$\n\\tilde{\\mathbf{n}}_{\\mathbf{r}} = \\mathbf{n}_{\\mathbf{r}} - \\tau \\, \\mathbf{g}_{\\mathbf{r}}^{\\mathrm{tan}},\n$$\nand finally project back onto the unit sphere by normalization,\n$$\n\\mathbf{n}_{\\mathbf{r}}^{\\mathrm{new}} = \\frac{\\tilde{\\mathbf{n}}_{\\mathbf{r}}}{\\lVert \\tilde{\\mathbf{n}}_{\\mathbf{r}} \\rVert}.\n$$\n\nYour program must implement:\n1. A function to compute $E_h$ exactly as defined above for a given three-dimensional periodic director field.\n2. A single projected gradient-descent step using the tangent-plane projection and final renormalization, with the specified step size $\\tau = \\frac{c}{K h}$.\n\nUse the following parameter values and test suite. In all cases, periodic boundary conditions must be used, and all energies must be expressed in Joules.\n\nTest suite:\n1. Uniform field energy (happy path and zero-energy check). Use $N_x = 8$, $N_y = 8$, $N_z = 8$, $h = 1.0 \\times 10^{-6}$ meters, $K = 1.0 \\times 10^{-11}$ Newton. Let $\\mathbf{n}_{i,j,k} = (1,0,0)$ for all sites. Compute $E_0$ in Joules.\n2. Discrete twist configuration (consistency against an analytic discrete benchmark). Use $N_x = 16$, $N_y = 16$, $N_z = 16$, $h = 1.0 \\times 10^{-6}$ meters, $K = 1.0 \\times 10^{-11}$ Newton. Define a one-dimensional twist along $z$ with wavenumber $q = \\frac{2\\pi m}{L_z}$, where $m = 1$ and $L_z = N_z h$, by\n$$\n\\mathbf{n}(z_k) = \\left( \\cos(q z_k), \\, \\sin(q z_k), \\, 0 \\right), \\quad z_k = k h.\n$$\nExtend this field uniformly in $x$ and $y$. Compute the discrete energy $E_{\\mathrm{twist}}$ via your routine. Also compute the discrete forward-difference benchmark\n$$\nE_{\\mathrm{pred}} = V \\cdot \\frac{K}{2} \\left( \\frac{2 \\sin(q h / 2)}{h} \\right)^2,\n$$\nwhere $V = L_x L_y L_z$ and $L_x = N_x h$, $L_y = N_y h$. Output the absolute difference $\\Delta E = \\lvert E_{\\mathrm{twist}} - E_{\\mathrm{pred}} \\rvert$ in Joules.\n3. Energy decrease under one projected step (algorithmic correctness and constraint handling). Use $N_x = 12$, $N_y = 10$, $N_z = 8$, $h = 1.0 \\times 10^{-6}$ meters, $K = 1.0 \\times 10^{-11}$ Newton. Initialize $\\mathbf{n}_{i,j,k}$ by drawing independent standard normal components and normalizing each vector to unit length. Use a fixed random seed equal to $1234$ so the test is deterministic. Perform one projected gradient-descent step with $c = 0.1$ (so $\\tau = \\frac{0.1}{K h}$), and compute the energy before and after. Output a boolean that is true if and only if the energy strictly decreases.\n4. Constraint preservation by projection (edge-case verification). For the configuration in test $3$ after the update and projection, compute the maximum absolute deviation of $\\lVert \\mathbf{n}_{i,j,k} \\rVert$ from $1$ across all sites, i.e.,\n$$\n\\delta_{\\max} = \\max_{i,j,k} \\left| \\lVert \\mathbf{n}_{i,j,k} \\rVert - 1 \\right|.\n$$\nOutput this value as a dimensionless float.\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order:\n$$\n\\left[ E_0, \\; \\Delta E, \\; \\texttt{decreased}, \\; \\delta_{\\max} \\right],\n$$\nwhere $E_0$ and $\\Delta E$ are in Joules, $\\texttt{decreased}$ is a boolean, and $\\delta_{\\max}$ is dimensionless. For example: \"[0.0,1.23e-12,True,4.4e-16]\".", "solution": "The problem requires the numerical implementation and validation of the one-constant Oseen–Frank model for a nematic liquid crystal. This will be accomplished through a finite-difference scheme on a three-dimensional cubic lattice with periodic boundary conditions. The core of the task is to correctly compute the discrete elastic energy and to implement a single step of a projected gradient descent algorithm, which correctly handles the unit-length constraint on the director field $\\mathbf{n}$. The entire implementation will be performed using vectorized operations for efficiency.\n\nThe discrete elastic energy, $E_h$, is given by the expression:\n$$\nE_h = \\frac{K h}{2} \\sum_{\\mathbf{r}} \\sum_{\\alpha \\in \\{x,y,z\\}} \\left\\lVert \\mathbf{n}_{\\mathbf{r}+\\hat{e}_\\alpha} - \\mathbf{n}_{\\mathbf{r}} \\right\\rVert^2\n$$\nwhere $\\mathbf{n}_{\\mathbf{r}}$ is the director at lattice site $\\mathbf{r}=(i,j,k)$, $K$ is the Frank elastic constant, $h$ is the lattice spacing, and $\\hat{e}_\\alpha$ represents a unit shift along axis $\\alpha$. This summation counts the energetic contribution from the orientation mismatch between each nearest-neighbor pair. To implement this computation efficiently, we avoid explicit loops over the lattice sites. The director field $\\mathbf{n}$ is represented as a four-dimensional array of shape $(N_x, N_y, N_z, 3)$. Periodic boundary conditions are handled using the `numpy.roll` function, which performs a circular shift of array elements along a given axis. For each spatial dimension $\\alpha$, we compute the difference between the field and a shifted version of itself, $\\mathbf{n}_{\\mathbf{r}+\\hat{e}_\\alpha} - \\mathbf{n}_{\\mathbf{r}}$. The total energy is then found by squaring these differences, summing over all vector components and all lattice sites, and multiplying by the prefactor $\\frac{K h}{2}$.\n\nThe energy minimization process requires the gradient of the energy with respect to the director at each site, $\\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h$. For the given discrete energy, this gradient is a discrete Laplacian:\n$$\n\\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h = K h \\left( 6 \\, \\mathbf{n}_{\\mathbf{r}} - \\sum_{\\alpha \\in \\{x,y,z\\}} \\left[ \\mathbf{n}_{\\mathbf{r}+\\hat{e}_\\alpha} + \\mathbf{n}_{\\mathbf{r}-\\hat{e}_\\alpha} \\right] \\right)\n$$\nComputation of this gradient field is also vectorized. The summation term, representing the sum of directors on the six nearest-neighbor sites, is calculated by summing six `numpy.roll` operations on the director field array, two for each spatial dimension (one forward shift, one backward).\n\nA standard gradient descent step, $\\mathbf{n}_{\\mathbf{r}} \\leftarrow \\mathbf{n}_{\\mathbf{r}} - \\tau \\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h$, would violate the constraint $\\lVert \\mathbf{n}_{\\mathbf{r}} \\rVert = 1$. To preserve this constraint, a projected gradient descent is employed. This involves three stages:\n1.  **Projection of the Gradient**: The calculated gradient $\\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h$ is projected onto the tangent plane of the unit sphere at the point $\\mathbf{n}_{\\mathbf{r}}$. This removes the component of the gradient that points normal to the sphere, which would change the vector's length. The tangential component is given by $\\mathbf{g}_{\\mathbf{r}}^{\\mathrm{tan}} = \\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h - (\\nabla_{\\mathbf{n}_{\\mathbf{r}}} E_h \\cdot \\mathbf{n}_{\\mathbf{r}}) \\mathbf{n}_{\\mathbf{r}}$. This is implemented by first computing the dot product at each site, which requires careful use of `numpy.sum` with the appropriate axis, and then subtracting the resulting normal component from the full gradient.\n2.  **Update Step**: A temporary, unconstrained director field $\\tilde{\\mathbf{n}}_{\\mathbf{r}}$ is computed by taking a step in the direction of the negative tangential gradient: $\\tilde{\\mathbf{n}}_{\\mathbf{r}} = \\mathbf{n}_{\\mathbf{r}} - \\tau \\, \\mathbf{g}_{\\mathbf{r}}^{\\mathrm{tan}}$, with step size $\\tau = \\frac{c}{K h}$.\n3.  **Renormalization**: The final update is obtained by projecting $\\tilde{\\mathbf{n}}_{\\mathbf{r}}$ back onto the unit sphere. This is achieved by normalizing the vector at each site: $\\mathbf{n}_{\\mathbf{r}}^{\\mathrm{new}} = \\frac{\\tilde{\\mathbf{n}}_{\\mathbf{r}}}{\\lVert \\tilde{\\mathbf{n}}_{\\mathbf{r}} \\rVert}$. This step corrects for any small deviation from the unit sphere introduced by the finite step size and ensures the constraint is rigorously maintained up to floating-point precision.\n\nThe provided test suite systematically validates the correctness of the implementation:\n-   **Test 1 (Uniform Field)**: A uniform director field has no spatial variation, so $\\mathbf{n}_{\\mathbf{r}+\\hat{e}_\\alpha} - \\mathbf{n}_{\\mathbf{r}} = \\mathbf{0}$ for all sites. The resulting energy $E_0$ must be exactly zero. This serves as a fundamental sanity check for the energy calculation.\n-   **Test 2 (Twist Configuration)**: This test provides a quantitative benchmark. The discrete energy of a one-dimensional twist configuration can be calculated analytically. Comparing the numerically computed energy $E_{\\mathrm{twist}}$ to the predicted analytical value $E_{\\mathrm{pred}}$ verifies the correctness of the `compute_energy` function to high precision.\n-   **Test 3 (Energy Decrease)**: Starting from a high-energy, random (but normalized) director field, a single step of gradient descent should, for a reasonable step size, strictly decrease the total energy. This tests the entire update pipeline, including the calculation of the gradient and the logic of the descent step.\n-   **Test 4 (Constraint Preservation)**: This test directly measures the success of the renormalization step. By calculating the maximum deviation of the director norms from unity after the update, $\\delta_{\\max}$, we verify that the constraint $\\lVert \\mathbf{n} \\rVert = 1$ is upheld to within machine precision.", "answer": "```python\nimport numpy as np\n\ndef compute_energy(n_field: np.ndarray, K: float, h: float) -> float:\n    \"\"\"\n    Computes the discrete Oseen-Frank energy for a 3D director field.\n\n    Args:\n        n_field (np.ndarray): Director field of shape (Nx, Ny, Nz, 3).\n        K (float): Frank elastic constant.\n        h (float): Grid spacing.\n\n    Returns:\n        float: Total discrete elastic energy in Joules.\n    \"\"\"\n    total_sq_diff = 0.0\n    # Sum over neighbors in x, y, z directions\n    for axis in range(3):\n        n_shifted = np.roll(n_field, -1, axis=axis)\n        diff = n_shifted - n_field\n        # Sum of squared L2 norms of the difference vectors\n        total_sq_diff += np.sum(diff**2)\n        \n    energy = K * h / 2.0 * total_sq_diff\n    return energy\n\ndef compute_gradient(n_field: np.ndarray, K: float, h: float) -> np.ndarray:\n    \"\"\"\n    Computes the gradient of the discrete energy, a discrete Laplacian.\n\n    Args:\n        n_field (np.ndarray): Director field of shape (Nx, Ny, Nz, 3).\n        K (float): Frank elastic constant.\n        h (float): Grid spacing.\n\n    Returns:\n        np.ndarray: Gradient field of the same shape as n_field.\n    \"\"\"\n    sum_neighbors = np.zeros_like(n_field)\n    for axis in range(3):\n        sum_neighbors += np.roll(n_field, 1, axis=axis)\n        sum_neighbors += np.roll(n_field, -1, axis=axis)\n        \n    grad = K * h * (6.0 * n_field - sum_neighbors)\n    return grad\n\ndef projected_gradient_step(n_field: np.ndarray, K: float, h: float, c: float) -> np.ndarray:\n    \"\"\"\n    Performs a single projected gradient descent step.\n\n    Args:\n        n_field (np.ndarray): Current director field.\n        K (float): Frank elastic constant.\n        h (float): Grid spacing.\n        c (float): Dimensionless step size parameter.\n\n    Returns:\n        np.ndarray: Updated director field.\n    \"\"\"\n    # 1. Compute gradient\n    grad_E = compute_gradient(n_field, K, h)\n    \n    # 2. Project gradient onto tangent plane\n    # dot_prod = (grad_E * n_field).sum(axis=3, keepdims=True)\n    dot_prod = np.sum(grad_E * n_field, axis=3, keepdims=True)\n    g_tan = grad_E - dot_prod * n_field\n    \n    # 3. Update step\n    tau = c / (K * h)\n    n_tilde = n_field - tau * g_tan\n    \n    # 4. Renormalize back to the unit sphere\n    norms = np.linalg.norm(n_tilde, axis=3, keepdims=True)\n    # Avoid division by zero, though unlikely in this application\n    norms[norms == 0] = 1.0 \n    n_new = n_tilde / norms\n    \n    return n_new\n\ndef solve():\n    \"\"\"\n    Runs the full test suite and prints the results.\n    \"\"\"\n    results = []\n    \n    # Test 1: Uniform field energy\n    Nx1, Ny1, Nz1 = 8, 8, 8\n    h1 = 1.0e-6\n    K1 = 1.0e-11\n    \n    n1 = np.zeros((Nx1, Ny1, Nz1, 3))\n    n1[..., 0] = 1.0\n    \n    E0 = compute_energy(n1, K1, h1)\n    results.append(E0)\n    \n    # Test 2: Discrete twist configuration\n    Nx2, Ny2, Nz2 = 16, 16, 16\n    h2 = 1.0e-6\n    K2 = 1.0e-11\n    m = 1\n    \n    Lz2 = Nz2 * h2\n    q = 2.0 * np.pi * m / Lz2\n    \n    z_coords = np.arange(Nz2) * h2\n    angles = q * z_coords\n    \n    n2 = np.zeros((Nx2, Ny2, Nz2, 3))\n    # Broadcasting fills the x and y dimensions\n    n2[:, :, :, 0] = np.cos(angles)[np.newaxis, np.newaxis, :]\n    n2[:, :, :, 1] = np.sin(angles)[np.newaxis, np.newaxis, :]\n    \n    E_twist = compute_energy(n2, K2, h2)\n    \n    V = (Nx2 * h2) * (Ny2 * h2) * (Nz2 * h2)\n    E_pred = V * (K2 / 2.0) * ( (2.0 * np.sin(q * h2 / 2.0)) / h2 )**2\n    \n    delta_E = np.abs(E_twist - E_pred)\n    results.append(delta_E)\n    \n    # Test 3: Energy decrease under one projected step\n    Nx3, Ny3, Nz3 = 12, 10, 8\n    h3 = 1.0e-6\n    K3 = 1.0e-11\n    c3 = 0.1\n    \n    np.random.seed(1234)\n    n3_initial_raw = np.random.randn(Nx3, Ny3, Nz3, 3)\n    norms_initial = np.linalg.norm(n3_initial_raw, axis=3, keepdims=True)\n    n3_initial = n3_initial_raw / norms_initial\n    \n    E_initial = compute_energy(n3_initial, K3, h3)\n    n3_final = projected_gradient_step(n3_initial, K3, h3, c3)\n    E_final = compute_energy(n3_final, K3, h3)\n    \n    decreased = E_final < E_initial\n    results.append(decreased)\n    \n    # Test 4: Constraint preservation\n    norms_final = np.linalg.norm(n3_final, axis=3)\n    delta_max = np.max(np.abs(norms_final - 1.0))\n    results.append(delta_max)\n    \n    # Format and print the final output\n    print(f\"[{results[0]},{results[1]},{results[2]},{results[3]}]\")\n\nsolve()\n```", "id": "2913526"}]}