{"hands_on_practices": [{"introduction": "Understanding a crystal structure begins with knowing how to generate all symmetrically equivalent atomic positions from a single starting point. This first exercise provides hands-on practice in applying space group generators—specifically a screw axis and a glide plane—to derive the complete set of general Wyckoff positions for the common space group $P2_1/c$. By working through this derivation, you will solidify your understanding of how non-symmorphic operations act on coordinates and confirm the general multiplicity from first principles [@problem_id:2536947].", "problem": "A primitive monoclinic crystal has space group $P2_1/c$ in the conventional setting with unique axis $b$. The space group is generated by the Bravais lattice translations and two non-primitive symmetry operations given in Seitz notation $\\{R \\mid \\mathbf{t}\\}$ by:\n- the twofold screw about the $b$ axis $\\{C_{2y} \\mid 0,\\tfrac{1}{2},0\\}$, and\n- the $c$-glide plane perpendicular to $b$, $\\{m_{y} \\mid 0,0,\\tfrac{1}{2}\\}$.\n\nHere, the action of $\\{R \\mid \\mathbf{t}\\}$ on a fractional coordinate $\\mathbf{r} = (x,y,z)$ is $\\mathbf{r} \\mapsto R\\,\\mathbf{r} + \\mathbf{t}$, with\n$C_{2y} = \\mathrm{diag}(-1,1,-1)$ and $m_{y} = \\mathrm{diag}(1,-1,1)$.\n\nStarting from a general position with fractional coordinates $(x,y,z)$, use only these two generators and the identity to:\n1) derive explicitly the set of all symmetrically equivalent positions within one unit cell (i.e., reduced modulo integer lattice translations), and\n2) argue from first principles of space-group cosets and site symmetry that the general Wyckoff multiplicity in $P2_1/c$ is equal to the number of distinct positions you find.\n\nYour final answer must be the general Wyckoff multiplicity as a single dimensionless integer. Do not round.", "solution": "The problem as stated is scientifically grounded, well-posed, and self-contained. It describes the space group $P2_1/c$ with a valid, albeit non-standard, choice of origin. We shall proceed by using precisely the generators provided.\n\nThe problem asks for two things: first, to derive the set of symmetrically equivalent positions for a general point $(x,y,z)$ using the given generators; second, to provide a first-principles argument for the general Wyckoff multiplicity.\n\nLet the space group be $G$, and let the subgroup of pure lattice translations be $T$. The point group $P$ is isomorphic to the factor group $G/T$. The order of the point group, $|P|$, determines the number of cosets in the decomposition of $G$ with respect to $T$.\n\nThe provided generators for the non-primitive operations are given in Seitz notation $\\{R \\mid \\mathbf{t}\\}$, where $R$ is a rotation matrix and $\\mathbf{t}$ is a translation vector. The action on a position vector $\\mathbf{r} = (x,y,z)$ is $\\mathbf{r} \\mapsto R\\mathbf{r} + \\mathbf{t}$.\n\nThe generators are:\n1. A twofold screw axis operation, $g_1 = \\{C_{2y} \\mid \\mathbf{t}_1\\}$, with $R_1 = C_{2y} = \\mathrm{diag}(-1,1,-1)$ and $\\mathbf{t}_1 = (0, \\frac{1}{2}, 0)$.\n2. A c-glide plane operation, $g_2 = \\{m_y \\mid \\mathbf{t}_2\\}$, with $R_2 = m_y = \\mathrm{diag}(1,-1,1)$ and $\\mathbf{t}_2 = (0, 0, \\frac{1}{2})$.\n\nThe identity operation is $g_0 = \\{E \\mid \\mathbf{0}\\}$, where $E$ is the identity matrix and $\\mathbf{0}$ is the zero vector.\n\nFirst, we generate the set of equivalent positions starting from a general position $\\mathbf{r}_1 = (x,y,z)$.\n\n1.  Applying the identity operation $g_0$ to $\\mathbf{r}_1$:\n    $$g_0 \\mathbf{r}_1 = E\\mathbf{r}_1 + \\mathbf{0} = (x,y,z)$$\n\n2.  Applying the first generator $g_1$ to $\\mathbf{r}_1$:\n    $$g_1 \\mathbf{r}_1 = C_{2y}\\mathbf{r}_1 + \\mathbf{t}_1 = \\begin{pmatrix} -1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & -1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ \\frac{1}{2} \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -x \\\\ y+\\frac{1}{2} \\\\ -z \\end{pmatrix}$$\n    This gives the second position, $\\mathbf{r}_2 = (-x, y+\\frac{1}{2}, -z)$.\n\n3.  Applying the second generator $g_2$ to $\\mathbf{r}_1$:\n    $$g_2 \\mathbf{r}_1 = m_y\\mathbf{r}_1 + \\mathbf{t}_2 = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & -1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ z \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\frac{1}{2} \\end{pmatrix} = \\begin{pmatrix} x \\\\ -y \\\\ z+\\frac{1}{2} \\end{pmatrix}$$\n    This gives the third position, $\\mathbf{r}_3 = (x, -y, z+\\frac{1}{2})$.\n\n4.  To close the group, we must consider the composition of the generators. Let us compute the operation $g_3 = g_2 g_1$ (meaning $g_1$ is applied first).\n    The resulting operation is $\\{R_2 R_1 \\mid R_2 \\mathbf{t}_1 + \\mathbf{t}_2\\}$.\n    The rotational part is $R_2 R_1 = m_y C_{2y} = \\mathrm{diag}(1,-1,1)\\mathrm{diag}(-1,1,-1) = \\mathrm{diag}(-1,-1,-1) = -E = i$, which is the inversion operation.\n    The translational part is $R_2 \\mathbf{t}_1 + \\mathbf{t}_2 = \\mathrm{diag}(1,-1,1)(0, \\frac{1}{2}, 0) + (0, 0, \\frac{1}{2}) = (0, -\\frac{1}{2}, 0) + (0, 0, \\frac{1}{2}) = (0, -\\frac{1}{2}, \\frac{1}{2})$.\n    So, the fourth operation is $g_3 = \\{i \\mid 0, -\\frac{1}{2}, \\frac{1}{2}\\}$. Applying this to $\\mathbf{r}_1$:\n    $$g_3 \\mathbf{r}_1 = i\\mathbf{r}_1 + (0, -\\frac{1}{2}, \\frac{1}{2}) = (-x, -y, -z) + (0, -\\frac{1}{2}, \\frac{1}{2}) = (-x, -y-\\frac{1}{2}, -z+\\frac{1}{2})$$\n    This gives the fourth position, $\\mathbf{r}_4 = (-x, -y-\\frac{1}{2}, -z+\\frac{1}{2})$.\n\nThe set of generated positions is:\n1. $(x,y,z)$\n2. $(-x, y+\\frac{1}{2}, -z)$\n3. $(x, -y, z+\\frac{1}{2})$\n4. $(-x, -y-\\frac{1}{2}, -z+\\frac{1}{2})$\n\nFor a general choice of $(x,y,z)$, these four positions are distinct and not related by any integer lattice translation. The set of operations $\\{g_0, g_1, g_2, g_3\\}$ forms a group of order $4$, which corresponds to the point group $2/m$. Thus, we have found all equivalent positions.\n\nThis concludes the first part of the problem.\n\nFor the second part, we argue from first principles. The multiplicity of a Wyckoff position is the number of equivalent points generated by the space group operations within a single unit cell. This is given by the formula:\n$$M = \\frac{|P|}{|S_{\\mathbf{r}}^{P}|}$$\nwhere $|P|$ is the order of the crystallographic point group of the crystal, and $|S_{\\mathbf{r}}^{P}|$ is the order of the site-symmetry point group for a position $\\mathbf{r}$.\n\nA \"general position\" is defined as a position $\\mathbf{r}$ for which the site symmetry is minimal, i.e., the site-symmetry group $S_{\\mathbf{r}}$ contains only the identity operation. For a general position, the site-symmetry point group is trivial, $S_{\\mathbf{r}}^{P} = \\{E\\}$, so its order is $|S_{\\mathbf{r}}^{P}| = 1$.\n\nConsequently, for a general position, the multiplicity is:\n$$M_{\\text{general}} = \\frac{|P|}{1} = |P|$$\n\nThe general Wyckoff multiplicity is therefore equal to the order of the point group of the space group.\n\nFor the space group $P2_1/c$, the associated point group is $2/m$. The elements of this point group are the identity ($E$), a twofold rotation ($2$), a mirror reflection ($m$), and an inversion ($i$). The order of this group is $|P| = 4$.\n\nTherefore, the general Wyckoff multiplicity for space group $P2_1/c$ is $4$. This is fully consistent with our explicit derivation in the first part, where we found exactly $4$ distinct equivalent positions for a general starting point $(x,y,z)$.", "answer": "$$ \\boxed{4} $$", "id": "2536947"}, {"introduction": "While many points in a unit cell are \"general,\" most real crystal structures feature atoms located on \"special\" positions that lie on symmetry elements like inversion centers or rotation axes. This exercise challenges you to identify these special positions by finding the coordinates that remain invariant under a specific symmetry operation in the space group $P2_1/c$. By determining the constraints on $(x,y,z)$ that lead to a site symmetry of $\\bar{1}$ and then calculating the resulting multiplicity, you will gain a deeper insight into the relationship between site symmetry and Wyckoff position multiplicity [@problem_id:2536891].", "problem": "A monoclinic crystal belongs to the space group $P2_1/c$ (International Tables for Crystallography space group No. $14$) in the conventional setting with unique axis $b$ and origin choice 1 (origin at an inversion center). The symmetry operations can be taken as the following coset representatives with respect to the translational subgroup (written in Seitz notation $\\{R|\\mathbf{t}\\}$, acting on fractional coordinates $\\mathbf{r} = (x,y,z)$ by $\\mathbf{r} \\mapsto R\\mathbf{r} + \\mathbf{t}$):\n- Identity $\\{ \\mathbf{1} | (0,0,0) \\}$,\n- Inversion: $\\{ -\\mathbf{1} | (0,0,0) \\}$,\n- Two-fold screw axis: $\\{ C_{2y} | (0, \\tfrac{1}{2}, \\tfrac{1}{2}) \\}$ with $C_{2y} = \\mathrm{diag}(-1,1,-1)$,\n- $c$-glide plane: $\\{ m_{y} | (0, \\tfrac{1}{2}, \\tfrac{1}{2}) \\}$ with $m_{y} = \\mathrm{diag}(1,-1,1)$.\n\nThe general Wyckoff position has site symmetry $1$ and generates an orbit of $4$ points per primitive cell under these coset representatives. A special position with site symmetry $\\bar{1}$ is a point fixed by an inversion operation in the space group. Using only the definitions of site symmetry as the stabilizer of a point and the action of the symmetry operations, determine the explicit coordinates of these special positions. Then, from first principles, compute the multiplicity (number of equivalent points per primitive cell) of any such special Wyckoff position. Express your final answer as a single integer with no units.", "solution": "The problem asks for the coordinates of special positions with site symmetry $\\bar{1}$ and their multiplicity in the space group $P2_1/c$.\n\nA point $\\mathbf{r} = (x,y,z)$ has site symmetry $\\bar{1}$ if it is a fixed point of an inversion operation belonging to the space group. An inversion operation takes the general form $\\{-\\mathbf{1} | \\mathbf{t}_{inv} \\}$, where $\\mathbf{t}_{inv}$ is a translation vector. The full space group contains not just the listed coset representatives, but all operations formed by combining them with integer lattice translations $\\mathbf{n} = (n_1, n_2, n_3)$.\n\nThe primary inversion operation given is $\\{-\\mathbf{1} | (0,0,0)\\}$. All other inversion operations in the space group are equivalent to this one followed by a lattice translation, i.e., $\\{-\\mathbf{1} | \\mathbf{n}\\}$.\n\nA point $\\mathbf{r}$ is a fixed point of such an operation if $\\mathbf{r} = -\\mathbf{r} + \\mathbf{n}$ for some integer vector $\\mathbf{n}$. This equation rearranges to $2\\mathbf{r} = \\mathbf{n}$, which means $2x = n_1$, $2y = n_2$, and $2z = n_3$.\nThe coordinates $(x,y,z)$ must therefore have components that are integers or half-integers. The distinct special positions within one unit cell ($0 \\le x,y,z < 1$) are:\n- $(0,0,0)$, $(0,0,1/2)$, $(0,1/2,0)$, $(0,1/2,1/2)$\n- $(1/2,0,0)$, $(1/2,0,1/2)$, $(1/2,1/2,0)$, $(1/2,1/2,1/2)$\n\nThese 8 points are the locations of the inversion centers in the conventional unit cell. They are the special positions with site symmetry $\\bar{1}$.\n\nNext, we compute the multiplicity of these special positions. We can use two methods.\n\n**Method 1: Direct Orbit Count**\nLet's find the orbit of one of these points, for example $\\mathbf{r} = (0,0,0)$, by applying the four coset representatives from the problem statement:\n1.  $\\{ \\mathbf{1} | (0,0,0) \\}$ maps $(0,0,0) \\to (0,0,0)$.\n2.  $\\{ -\\mathbf{1} | (0,0,0) \\}$ maps $(0,0,0) \\to (0,0,0)$.\n3.  $\\{ C_{2y} | (0, \\tfrac{1}{2}, \\tfrac{1}{2}) \\}$ maps $(0,0,0) \\to (0, 1/2, 1/2)$.\n4.  $\\{ m_{y} | (0, \\tfrac{1}{2}, \\tfrac{1}{2}) \\}$ maps $(0,0,0) \\to (0, 1/2, 1/2)$.\n\nThe set of distinct points generated is $\\{(0,0,0), (0,1/2,1/2)\\}$. The orbit has a size of 2. Therefore, the multiplicity of this special position is 2.\n\n**Method 2: Orbit-Stabilizer Theorem**\nThe multiplicity $m$ of a Wyckoff position is given by the formula $m = |P| / |S|$, where $|P|$ is the order of the point group and $|S|$ is the order of the site-symmetry group.\n- For space group $P2_1/c$, the point group is $2/m$, which has order $|P| = 4$.\n- The special position has site symmetry $\\bar{1}$ by definition. The point group $\\bar{1}$ (which contains identity and inversion) has order $|S|=2$.\n\nUsing the formula:\n$$ m = \\frac{|P|}{|S|} = \\frac{4}{2} = 2 $$\nBoth methods yield the same result. The multiplicity of a special Wyckoff position with site symmetry $\\bar{1}$ in $P2_1/c$ is 2.", "answer": "$$\\boxed{2}$$", "id": "2536891"}, {"introduction": "The principles of symmetry equivalence move from theoretical exercises to essential computational tools in modern materials science. This final practice challenges you to think algorithmically about how to determine if two atomic positions are symmetrically equivalent within a numerical tolerance, considering the complexities of non-orthogonal lattices and periodic boundary conditions. By designing a method to test for equivalence using the metric tensor and a set of symmetry operations, you will be grappling with the core logic that underpins crystallographic analysis software and computational structure prediction [@problem_id:2536912].", "problem": "You are given the task of building a robust numerical detector for symmetry equivalence of atomic positions in a crystal, suitable for use in generating Wyckoff orbits and deduplicating positions when computing site multiplicities in materials chemistry. The setting is as follows.\n\nFundamental definitions and facts:\n- A crystal lattice is defined by three linearly independent primitive vectors $\\mathbf{a}_1$, $\\mathbf{a}_2$, and $\\mathbf{a}_3$ in Cartesian space. Any point with fractional coordinates $\\mathbf{f} \\in \\mathbb{R}^3$ corresponds to a Cartesian position $\\mathbf{x} = \\mathbf{A}\\,\\mathbf{f}$, where the $3 \\times 3$ lattice matrix $\\mathbf{A}$ has the primitive vectors as its columns, $\\mathbf{A} = [\\mathbf{a}_1\\ \\mathbf{a}_2\\ \\mathbf{a}_3]$.\n- A space-group operation is represented in fractional coordinates as a rotation-translation pair $(\\mathbf{R}\\,|\\,\\mathbf{t})$, where $\\mathbf{R}$ is a $3 \\times 3$ integer matrix that maps the lattice basis to itself (hence maps $\\mathbb{Z}^3$ to $\\mathbb{Z}^3$), and $\\mathbf{t} \\in \\mathbb{R}^3$ is a translation vector expressed in fractional units.\n- Two fractional positions $\\mathbf{r}_1$ and $\\mathbf{r}_2$ are symmetry-equivalent modulo lattice translations if and only if there exists a space-group operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ and an integer vector $\\mathbf{n} \\in \\mathbb{Z}^3$ such that the Cartesian distance between $\\mathbf{A}\\left(\\mathbf{r}_2 - (\\mathbf{R}\\mathbf{r}_1 + \\mathbf{t}) - \\mathbf{n}\\right)$ and the origin is within a prescribed tolerance. Equivalently, letting $\\Delta \\mathbf{f} = \\mathbf{r}_2 - (\\mathbf{R}\\mathbf{r}_1 + \\mathbf{t})$, one seeks\n$$\n\\min_{\\mathbf{n} \\in \\mathbb{Z}^3} \\left\\|\\mathbf{A}\\left(\\Delta \\mathbf{f} - \\mathbf{n}\\right)\\right\\|_2 \\le \\varepsilon,\n$$\nwhere $\\varepsilon$ is the numerical tolerance expressed in Angstrom (Angstrom is the required output unit for distances). Using the metric tensor $\\mathbf{G} = \\mathbf{A}^\\mathsf{T}\\mathbf{A}$, the squared distance can be written as\n$$\n\\left\\|\\mathbf{A}\\left(\\Delta \\mathbf{f} - \\mathbf{n}\\right)\\right\\|_2^2 = \\left(\\Delta \\mathbf{f} - \\mathbf{n}\\right)^\\mathsf{T}\\,\\mathbf{G}\\,\\left(\\Delta \\mathbf{f} - \\mathbf{n}\\right).\n$$\n\nYour program must implement the following:\n- Input is hardcoded as a finite set of test cases (described below). Each test case provides a lattice matrix $\\mathbf{A}$ in Angstrom, a list of symmetry operations $(\\mathbf{R}\\,|\\,\\mathbf{t})$ acting on fractional coordinates, two fractional positions $\\mathbf{r}_1$ and $\\mathbf{r}_2$, and a tolerance $\\varepsilon$ in Angstrom.\n- For each test case, determine a boolean indicating whether $\\mathbf{r}_1$ and $\\mathbf{r}_2$ are symmetry-equivalent modulo lattice translations within the given tolerance, that is, whether there exists at least one operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ in the provided list such that the Cartesian distance defined above is less than or equal to $\\varepsilon$.\n- The algorithm must be robust to non-orthogonal cells and must handle inputs where coordinates may lie outside the interval $[0,1)$. You should treat fractional coordinates modulo integers and use a method that searches for the nearest lattice translation in fractional space that minimizes the metric distance. Your method must take into account that the shortest representative in Euclidean norm under a skewed metric is not always obtained by independent component-wise wrapping, so your implementation must include a local enumeration around the nearest integer vector to ensure a correct minimum in typical realistic cases.\n\nTest suite:\nFor each case, the lattice matrix $\\mathbf{A}$ is specified in Angstrom as a list of three column vectors, the symmetry operations are given as matrices $\\mathbf{R}$ and vectors $\\mathbf{t}$ in fractional units, and all numbers appear explicitly. Angles are in degrees when specified. Your program must compute a boolean for each case.\n\n- Case $1$ (simple cubic, identity symmetry, pure lattice translation equivalence):\n  - $\\mathbf{A} = \\begin{bmatrix} 4.0 & 0.0 & 0.0 \\\\ 0.0 & 4.0 & 0.0 \\\\ 0.0 & 0.0 & 4.0 \\end{bmatrix}$.\n  - Symmetry operations: one operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ with $\\mathbf{R} = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$ and $\\mathbf{t} = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\mathbf{r}_1 = \\begin{bmatrix} 0.1 \\\\ 0.2 \\\\ 0.3 \\end{bmatrix}$, $\\mathbf{r}_2 = \\begin{bmatrix} 1.10000005 \\\\ 0.2 \\\\ 0.3 \\end{bmatrix}$.\n  - $\\varepsilon = 10^{-6}$ Angstrom.\n  - Expected: True if correctly detected modulo integer translations.\n\n- Case $2$ (hexagonal lattice, $60^\\circ$ rotation about $c$-axis):\n  - Lattice parameters: $a = 2.5$ Angstrom, $c = 4.0$ Angstrom, $\\gamma = 120^\\circ$, with primitive vectors $\\mathbf{a}_1 = \\begin{bmatrix} 2.5 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$, $\\mathbf{a}_2 = \\begin{bmatrix} -1.25 \\\\ 2.1650635094610964 \\\\ 0.0 \\end{bmatrix}$, $\\mathbf{a}_3 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 4.0 \\end{bmatrix}$, hence $\\mathbf{A} = \\begin{bmatrix} 2.5 & -1.25 & 0.0 \\\\ 0.0 & 2.1650635094610964 & 0.0 \\\\ 0.0 & 0.0 & 4.0 \\end{bmatrix}$.\n  - Symmetry operations: one rotation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ with $\\mathbf{R} = \\begin{bmatrix} 0 & -1 & 0 \\\\ 1 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$, $\\mathbf{t} = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\mathbf{r}_1 = \\begin{bmatrix} 1/3 \\\\ 2/3 \\\\ 0.25 \\end{bmatrix}$, $\\mathbf{r}_2 = \\begin{bmatrix} 0.333333 \\\\ -10^{-6} \\\\ 0.25 \\end{bmatrix}$.\n  - $\\varepsilon = 10^{-3}$ Angstrom.\n  - Expected: True if correctly rotated and matched modulo lattice translations.\n\n- Case $3$ (tetragonal lattice with a $4_1$ screw rotation about $c$):\n  - $\\mathbf{A} = \\begin{bmatrix} 3.0 & 0.0 & 0.0 \\\\ 0.0 & 3.0 & 0.0 \\\\ 0.0 & 0.0 & 5.0 \\end{bmatrix}$.\n  - Symmetry operations: one $(\\mathbf{R}\\,|\\,\\mathbf{t})$ with $\\mathbf{R} = \\begin{bmatrix} 0 & -1 & 0 \\\\ 1 & 0 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$ and $\\mathbf{t} = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.25 \\end{bmatrix}$.\n  - $\\mathbf{r}_1 = \\begin{bmatrix} 0.1 \\\\ 0.2 \\\\ 0.3 \\end{bmatrix}$, $\\mathbf{r}_2 = \\begin{bmatrix} 0.8 \\\\ 0.1000002 \\\\ 0.55 \\end{bmatrix}$.\n  - $\\varepsilon = 10^{-3}$ Angstrom.\n  - Expected: True if the screw operation correctly maps $\\mathbf{r}_1$ to $\\mathbf{r}_2$ modulo lattice translations.\n\n- Case $4$ (monoclinic lattice, identity symmetry, not equivalent):\n  - Lattice parameters: $a = 5.0$ Angstrom, $b = 6.0$ Angstrom, $c = 7.0$ Angstrom, $\\alpha = 90^\\circ$, $\\beta = 110^\\circ$, $\\gamma = 90^\\circ$. Choose primitive vectors $\\mathbf{a}_1 = \\begin{bmatrix} 5.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$, $\\mathbf{a}_2 = \\begin{bmatrix} 0.0 \\\\ 6.0 \\\\ 0.0 \\end{bmatrix}$, $\\mathbf{a}_3 = \\begin{bmatrix} 7 \\cos(110^\\circ) \\\\ 0.0 \\\\ 7 \\sin(110^\\circ) \\end{bmatrix} \\approx \\begin{bmatrix} -2.394141003279681 \\\\ 0.0 \\\\ 6.577848613103368 \\end{bmatrix}$, hence $\\mathbf{A} = \\begin{bmatrix} 5.0 & 0.0 & -2.394141003279681 \\\\ 0.0 & 6.0 & 0.0 \\\\ 0.0 & 0.0 & 6.577848613103368 \\end{bmatrix}$.\n  - Symmetry operations: one operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ with $\\mathbf{R} = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$ and $\\mathbf{t} = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\mathbf{r}_1 = \\begin{bmatrix} 0.11 \\\\ 0.22 \\\\ 0.33 \\end{bmatrix}$, $\\mathbf{r}_2 = \\begin{bmatrix} 0.61 \\\\ 0.22 \\\\ 0.33 \\end{bmatrix}$.\n  - $\\varepsilon = 10^{-3}$ Angstrom.\n  - Expected: False (the positions differ by a non-integer fractional offset along $\\mathbf{a}_1$).\n\n- Case $5$ (cubic lattice, identity symmetry, near-tolerance but not equivalent):\n  - $\\mathbf{A} = \\begin{bmatrix} 20.0 & 0.0 & 0.0 \\\\ 0.0 & 20.0 & 0.0 \\\\ 0.0 & 0.0 & 20.0 \\end{bmatrix}$.\n  - Symmetry operations: one operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ with $\\mathbf{R} = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$ and $\\mathbf{t} = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\mathbf{r}_1 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$, $\\mathbf{r}_2 = \\begin{bmatrix} 10^{-5} \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\varepsilon = 10^{-4}$ Angstrom.\n  - Expected: False (the Cartesian separation is $2 \\times 10^{-4}$ Angstrom, which is greater than the tolerance).\n\n- Case $6$ (orthorhombic lattice, centering translation equivalence):\n  - $\\mathbf{A} = \\begin{bmatrix} 3.0 & 0.0 & 0.0 \\\\ 0.0 & 4.0 & 0.0 \\\\ 0.0 & 0.0 & 5.0 \\end{bmatrix}$.\n  - Symmetry operations: two operations, $(\\mathbf{R}_1\\,|\\,\\mathbf{t}_1)$ with $\\mathbf{R}_1 = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$, $\\mathbf{t}_1 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$; and $(\\mathbf{R}_2\\,|\\,\\mathbf{t}_2)$ with $\\mathbf{R}_2 = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$, $\\mathbf{t}_2 = \\begin{bmatrix} 0.5 \\\\ 0.5 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\mathbf{r}_1 = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$, $\\mathbf{r}_2 = \\begin{bmatrix} 0.5 \\\\ -0.5 \\\\ 0.0 \\end{bmatrix}$.\n  - $\\varepsilon = 10^{-6}$ Angstrom.\n  - Expected: True (equivalence via the centering translation combined with a lattice translation).\n\nYour program should produce a single line of output containing the boolean results for the six cases as a comma-separated list enclosed in square brackets (for example, \"[True,False,True,False,True,False]\"), with no extra whitespace or text. All distances must be handled in Angstrom, and angular values when used are in degrees. The final answers for each test case are booleans.", "solution": "The core of the problem is to determine if two fractional position vectors, $\\mathbf{r}_1$ and $\\mathbf{r}_2$, are symmetrically equivalent. This is true if there exists at least one symmetry operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$ from the given space group and a lattice translation vector $\\mathbf{n} \\in \\mathbb{Z}^3$ that maps $\\mathbf{r}_1$ to $\\mathbf{r}_2$ within a specified tolerance $\\varepsilon$. The mathematical condition is:\n$$\n\\min_{(\\mathbf{R}|\\mathbf{t}), \\mathbf{n} \\in \\mathbb{Z}^3} \\left\\|\\mathbf{A}\\left(\\mathbf{r}_2 - (\\mathbf{R}\\mathbf{r}_1 + \\mathbf{t}) - \\mathbf{n}\\right)\\right\\|_2 \\le \\varepsilon\n$$\nThe overall procedure is as follows:\nFor each test case:\n1. Iterate through each symmetry operation $(\\mathbf{R}\\,|\\,\\mathbf{t})$.\n2. Transform the initial position: $\\mathbf{r}' = \\mathbf{R}\\mathbf{r}_1 + \\mathbf{t}$.\n3. Calculate the difference vector in fractional coordinates: $\\Delta\\mathbf{f} = \\mathbf{r}_2 - \\mathbf{r}'$.\n4. Find the minimum Cartesian distance after accounting for all possible lattice translations $\\mathbf{n} \\in \\mathbb{Z}^3$. This is the closest vector problem for $\\Delta\\mathbf{f}$ in the lattice defined by $\\mathbf{A}$. The squared distance is $d^2 = (\\Delta\\mathbf{f} - \\mathbf{n})^\\mathsf{T}\\mathbf{G}(\\Delta\\mathbf{f} - \\mathbf{n})$, where $\\mathbf{G} = \\mathbf{A}^\\mathsf{T}\\mathbf{A}$ is the metric tensor.\n5. A robust way to find the integer vector $\\mathbf{n}$ that minimizes this distance is to search a small region of integer vectors around the naively rounded vector $\\mathbf{n}_0 = \\text{round}(\\Delta\\mathbf{f})$. We check a $3 \\times 3 \\times 3$ cube of 27 integer vectors centered at $\\mathbf{n}_0$.\n6. For each of these candidate vectors $\\mathbf{n}$, we compute the residual fractional vector $\\mathbf{v} = \\Delta\\mathbf{f} - \\mathbf{n}$ and the corresponding Cartesian distance squared, $d^2 = \\mathbf{v}^\\mathsf{T}\\mathbf{G}\\mathbf{v}$. The minimum of these squared distances, $d^2_{\\min}$, is found.\n7. The minimum distance is $d_{\\min} = \\sqrt{d^2_{\\min}}$.\n8. If $d_{\\min} \\le \\varepsilon$, the positions are equivalent for this test case.\nThis procedure is applied to all six provided test cases to generate a list of boolean results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the symmetry equivalence problem for a hardcoded suite of test cases.\n    \"\"\"\n\n    test_cases = [\n        # Case 1: simple cubic, identity, pure lattice translation\n        {\n            \"A\": np.array([[4.0, 0.0, 0.0], [0.0, 4.0, 0.0], [0.0, 0.0, 4.0]]),\n            \"sym_ops\": [(np.identity(3), np.zeros(3))],\n            \"r1\": np.array([0.1, 0.2, 0.3]),\n            \"r2\": np.array([1.10000005, 0.2, 0.3]),\n            \"epsilon\": 1e-6,\n        },\n        # Case 2: hexagonal, 60-degree rotation\n        {\n            \"A\": np.array([\n                [2.5, -1.25, 0.0],\n                [0.0, 2.1650635094610964, 0.0],\n                [0.0, 0.0, 4.0]\n            ]),\n            \"sym_ops\": [(\n                np.array([[0, -1, 0], [1, 1, 0], [0, 0, 1]]),\n                np.zeros(3)\n            )],\n            \"r1\": np.array([1/3, 2/3, 0.25]),\n            \"r2\": np.array([0.333333, -1e-6, 0.25]),\n            \"epsilon\": 1e-3,\n        },\n        # Case 3: tetragonal, 4_1 screw\n        {\n            \"A\": np.array([[3.0, 0.0, 0.0], [0.0, 3.0, 0.0], [0.0, 0.0, 5.0]]),\n            \"sym_ops\": [(\n                np.array([[0, -1, 0], [1, 0, 0], [0, 0, 1]]),\n                np.array([0.0, 0.0, 0.25])\n            )],\n            \"r1\": np.array([0.1, 0.2, 0.3]),\n            \"r2\": np.array([0.8, 0.1000002, 0.55]),\n            \"epsilon\": 1e-3,\n        },\n        # Case 4: monoclinic, not equivalent\n        {\n            \"A\": np.array([\n                [5.0, 0.0, -2.394141003279681],\n                [0.0, 6.0, 0.0],\n                [0.0, 0.0, 6.577848613103368]\n            ]),\n            \"sym_ops\": [(np.identity(3), np.zeros(3))],\n            \"r1\": np.array([0.11, 0.22, 0.33]),\n            \"r2\": np.array([0.61, 0.22, 0.33]),\n            \"epsilon\": 1e-3,\n        },\n        # Case 5: cubic, near-tolerance but not equivalent\n        {\n            \"A\": np.array([[20.0, 0.0, 0.0], [0.0, 20.0, 0.0], [0.0, 0.0, 20.0]]),\n            \"sym_ops\": [(np.identity(3), np.zeros(3))],\n            \"r1\": np.array([0.0, 0.0, 0.0]),\n            \"r2\": np.array([1e-5, 0.0, 0.0]),\n            \"epsilon\": 1e-4,\n        },\n        # Case 6: orthorhombic, centering translation\n        {\n            \"A\": np.array([[3.0, 0.0, 0.0], [0.0, 4.0, 0.0], [0.0, 0.0, 5.0]]),\n            \"sym_ops\": [\n                (np.identity(3), np.zeros(3)),\n                (np.identity(3), np.array([0.5, 0.5, 0.0]))\n            ],\n            \"r1\": np.array([0.0, 0.0, 0.0]),\n            \"r2\": np.array([0.5, -0.5, 0.0]),\n            \"epsilon\": 1e-6,\n        },\n    ]\n\n    results = []\n    \n    # Delta vectors for local search around the nearest integer lattice vector\n    search_deltas = np.array([\n        (dx, dy, dz) for dx in [-1, 0, 1] for dy in [-1, 0, 1] for dz in [-1, 0, 1]\n    ])\n\n    for case in test_cases:\n        A = case[\"A\"]\n        sym_ops = case[\"sym_ops\"]\n        r1 = case[\"r1\"]\n        r2 = case[\"r2\"]\n        epsilon = case[\"epsilon\"]\n        \n        # Pre-compute the metric tensor G = A^T A\n        G = A.T @ A\n        \n        case_equivalent = False\n        for R, t in sym_ops:\n            # Apply symmetry operation to r1\n            r1_transformed = R @ r1 + t\n            \n            # Calculate the difference vector in fractional coordinates\n            delta_f = r2 - r1_transformed\n            \n            # Find the nearest integer vector by rounding\n            n0 = np.round(delta_f)\n            \n            min_dist_sq = np.inf\n            \n            # Search a 3x3x3 cube of integer vectors around n0\n            for delta_n in search_deltas:\n                n = n0 + delta_n\n                \n                # Fractional vector in the primitive cell\n                v = delta_f - n\n                \n                # Cartesian distance squared: v^T * G * v\n                dist_sq = v.T @ G @ v\n                \n                if dist_sq  min_dist_sq:\n                    min_dist_sq = dist_sq\n\n            min_dist = np.sqrt(min_dist_sq)\n            \n            # Check if the minimum distance is within tolerance\n            if min_dist = epsilon:\n                case_equivalent = True\n                break  # Found an equivalence, no need to check other sym_ops\n        \n        results.append(case_equivalent)\n\n    # Format output as a comma-separated list of booleans in brackets.\n    print(f\"[{','.join(str(r) for r in results)}]\")\n\nsolve()\n```", "id": "2536912"}]}