{"hands_on_practices": [{"introduction": "To truly grasp the Pair Distribution Function (PDF), we begin with the simplest possible system: a single pair of atoms at a fixed distance. This foundational exercise guides you through the derivation of the ideal, unbroadened $G(r)$ for a homonuclear diatomic molecule, starting from the total scattering structure factor, $S(Q)$ [@problem_id:161163]. By performing this 'first-principles' calculation, you will see precisely how a discrete interatomic distance generates a delta-function peak in the PDF, reinforcing the fundamental Fourier relationship that connects reciprocal-space scattering data to real-space atomic structure.", "problem": "The atomic Pair Distribution Function (PDF), denoted $G(r)$, provides crucial information about the distribution of distances between pairs of atoms in a material. It is defined through its relationship with the experimentally accessible total scattering structure factor, $S(Q)$, via a Fourier sine transform:\n$$\nG(r) = \\frac{2}{\\pi} \\int_0^\\infty Q[S(Q)-1] \\sin(Qr) \\,dQ\n$$\nwhere $Q$ is the magnitude of the scattering vector.\n\nThe structure factor $S(Q)$ for a system of $N$ atoms with positions $\\{\\vec{r}_i\\}$ is defined as the orientational average of the interference function:\n$$\nS(Q) = \\frac{1}{N} \\sum_{j=1}^N \\sum_{k=1}^N \\langle e^{-i\\vec{Q}\\cdot(\\vec{r}_j-\\vec{r}_k)} \\rangle\n$$\nFor a pair of atoms $j$ and $k$ separated by a fixed distance $r_{jk} = |\\vec{r}_j - \\vec{r}_k|$, the orientational average (indicated by $\\langle \\dots \\rangle$) is given by the Debye formula:\n$$\n\\langle e^{-i\\vec{Q}\\cdot\\vec{r}_{jk}} \\rangle = \\frac{\\sin(Qr_{jk})}{Qr_{jk}}\n$$\n\nConsider a single, isolated, homonuclear diatomic molecule. Since the molecule is isolated in vacuum, its average atomic number density $\\rho_0$ can be taken as zero. Assuming the atoms are point-like and the molecule is rigid with a fixed interatomic distance of $r_0$ (i.e., the ideal, unbroadened case), derive the expression for its pair distribution function, $G(r)$. You may need the integral representation of the Dirac delta function: $\\int_0^\\infty \\cos(kx) \\,dk = \\pi \\delta(x)$.", "solution": "The problem asks for the derivation of the pair distribution function, $G(r)$, for an ideal homonuclear diatomic molecule with a fixed bond length $r_0$. We will start by deriving the structure factor, $S(Q)$, for this system and then perform the Fourier sine transform.\n\n**Step 1: Derive the structure factor $S(Q)$**\n\nFor a diatomic molecule, the number of atoms is $N=2$. Let the two atoms be labeled 1 and 2. The general formula for the structure factor is:\n$$\nS(Q) = \\frac{1}{N} \\sum_{j=1}^2 \\sum_{k=1}^2 \\langle e^{-i\\vec{Q}\\cdot(\\vec{r}_j-\\vec{r}_k)} \\rangle\n$$\nWe can expand the double summation into its four terms:\n$$\nS(Q) = \\frac{1}{2} \\left[ \\langle e^{-i\\vec{Q}\\cdot(\\vec{r}_1-\\vec{r}_1)} \\rangle + \\langle e^{-i\\vec{Q}\\cdot(\\vec{r}_2-\\vec{r}_2)} \\rangle + \\langle e^{-i\\vec{Q}\\cdot(\\vec{r}_1-\\vec{r}_2)} \\rangle + \\langle e^{-i\\vec{Q}\\cdot(\\vec{r}_2-\\vec{r}_1)} \\rangle \\right]\n$$\nThe first two terms (for $j=k$) are the self-scattering terms. The vector difference is zero, so $\\vec{r}_j - \\vec{r}_j = \\vec{0}$, and $e^{-i\\vec{Q}\\cdot\\vec{0}} = e^0 = 1$.\nThe last two terms (for $j \\neq k$) are the distinct-scattering terms. The distance between the atoms is fixed at $|\\vec{r}_1 - \\vec{r}_2| = |\\vec{r}_2 - \\vec{r}_1| = r_0$. We apply the Debye formula for these terms.\n$$\nS(Q) = \\frac{1}{2} \\left[ 1 + 1 + \\frac{\\sin(Q|\\vec{r}_1-\\vec{r}_2|)}{Q|\\vec{r}_1-\\vec{r}_2|} + \\frac{\\sin(Q|\\vec{r}_2-\\vec{r}_1|)}{Q|\\vec{r}_2-\\vec{r}_1|} \\right]\n$$\n$$\nS(Q) = \\frac{1}{2} \\left[ 2 + \\frac{\\sin(Qr_0)}{Qr_0} + \\frac{\\sin(Qr_0)}{Qr_0} \\right] = \\frac{1}{2} \\left[ 2 + 2\\frac{\\sin(Qr_0)}{Qr_0} \\right]\n$$\nThis simplifies to the structure factor for the diatomic molecule:\n$$\nS(Q) = 1 + \\frac{\\sin(Qr_0)}{Qr_0}\n$$\n\n**Step 2: Calculate the reduced scattering function $Q[S(Q)-1]$**\n\nFrom the derived $S(Q)$, we can find the term needed for the $G(r)$ integral:\n$$\nS(Q) - 1 = \\frac{\\sin(Qr_0)}{Qr_0}\n$$\n$$\nQ[S(Q)-1] = Q \\left( \\frac{\\sin(Qr_0)}{Qr_0} \\right) = \\frac{\\sin(Qr_0)}{r_0}\n$$\n\n**Step 3: Compute the Fourier sine transform to find $G(r)$**\n\nNow we substitute this expression into the definition of $G(r)$:\n$$\nG(r) = \\frac{2}{\\pi} \\int_0^\\infty Q[S(Q)-1] \\sin(Qr) \\,dQ = \\frac{2}{\\pi} \\int_0^\\infty \\frac{\\sin(Qr_0)}{r_0} \\sin(Qr) \\,dQ\n$$\nWe can pull the constant $1/r_0$ out of the integral:\n$$\nG(r) = \\frac{2}{\\pi r_0} \\int_0^\\infty \\sin(Qr_0) \\sin(Qr) \\,dQ\n$$\nTo evaluate the integral, we use the trigonometric product-to-sum identity: $\\sin A \\sin B = \\frac{1}{2}[\\cos(A-B) - \\cos(A+B)]$. Let $A = Qr_0$ and $B = Qr$.\n$$\nG(r) = \\frac{2}{\\pi r_0} \\int_0^\\infty \\frac{1}{2}[\\cos(Q(r_0-r)) - \\cos(Q(r_0+r))] \\,dQ\n$$\n$$\nG(r) = \\frac{1}{\\pi r_0} \\left[ \\int_0^\\infty \\cos(Q(r-r_0)) \\,dQ - \\int_0^\\infty \\cos(Q(r+r_0)) \\,dQ \\right]\n$$\nNote that $\\cos$ is an even function, so $\\cos(x) = \\cos(-x)$, which allows us to write $\\cos(Q(r_0-r)) = \\cos(Q(r-r_0))$.\n\n**Step 4: Use the Dirac delta function representation**\n\nThe problem provides the identity $\\int_0^\\infty \\cos(kx) \\,dk = \\pi \\delta(x)$. Applying this to our two integrals:\n\\begin{enumerate}\n    \\item  $\\int_0^\\infty \\cos(Q(r-r_0)) \\,dQ = \\pi \\delta(r-r_0)$\n    \\item  $\\int_0^\\infty \\cos(Q(r+r_0)) \\,dQ = \\pi \\delta(r+r_0)$\n\\end{enumerate}\nSubstituting these back into the expression for $G(r)$:\n$$\nG(r) = \\frac{1}{\\pi r_0} [\\pi \\delta(r-r_0) - \\pi \\delta(r+r_0)] = \\frac{1}{r_0} [\\delta(r-r_0) - \\delta(r+r_0)]\n$$\nSince $r$ represents a physical distance, it must be non-negative ($r \\ge 0$). The bond length $r_0$ is strictly positive ($r_0 > 0$). Therefore, the term $r+r_0$ is always positive and never zero. This means $\\delta(r+r_0) = 0$ for all physical values of $r$.\nThe expression simplifies to:\n$$\nG(r) = \\frac{\\delta(r-r_0)}{r_0}\n$$\nThis is the ideal, unbroadened pair distribution function for a homonuclear diatomic molecule. It correctly represents a single interatomic distance at $r=r_0$.", "answer": "$$\n\\boxed{\\frac{\\delta(r-r_0)}{r_0}}\n$$", "id": "161163"}, {"introduction": "In real experiments, obtaining a perfect PDF is challenged by various systematic errors, a common one being the inaccurate determination of the sample's average atomic number density, $\\rho_0$. This exercise explores the direct consequence of such an error on the calculated $G(r)$ [@problem_id:161147]. By deriving the analytical form of the resulting low-$r$ artifact, you will gain a crucial diagnostic tool for interpreting experimental data and identifying unphysical features that point to problems in data normalization.", "problem": "The pair distribution function (PDF), $G(r)$, provides information about the distribution of interatomic distances in a material. It is related to the local atomic pair density, $\\rho(r)$, and the average atomic number density, $\\rho_0$, by the equation $G(r) = 4\\pi r[\\rho(r) - \\rho_0]$. For distances $r$ smaller than the shortest interatomic bond length, no atoms can be present, so the local density $\\rho(r) = 0$. Consequently, the PDF in this region takes on a simple linear form known as the \"low-$r$ slope\": $G_0(r) = -4\\pi r \\rho_0$.\n\nExperimentally, $G(r)$ is obtained via a Fourier sine transform of the reduced total structure factor, $F(Q) = Q[S(Q)-1]$:\n$$\nG(r) = \\frac{2}{\\pi} \\int_0^{\\infty} F(Q) \\sin(Qr) dQ\n$$\nwhere $S(Q)$ is the total structure factor and $Q$ is the magnitude of the scattering vector.\n\nThe determination of $S(Q)$ from raw scattering data requires careful normalization, which depends on the average atomic number density of the sample. Assume that due to an experimental error, an incorrect number density, $\\rho'$, is used for this normalization instead of the true density, $\\rho_0$. This results in an incorrectly normalized reduced structure factor, $F'(Q)$. For many standard normalization procedures, this error manifests as a simple scaling of the true reduced structure factor, $F_0(Q)$, given by the relation:\n$$\nF'(Q) = \\frac{\\rho_0}{\\rho'} F_0(Q)\n$$\nThis incorrect $F'(Q)$ is then Fourier transformed to produce an apparent PDF, $G'(r)$. The deviation of this apparent PDF from the true PDF, $G_0(r)$, in the low-$r$ region is an unphysical artifact.\n\nDerive the analytical expression for this low-$r$ artifact, defined as $\\Delta G(r) = G'(r) - G_0(r)$, as a function of $r$, $\\rho_0$, and $\\rho'$.", "solution": "We have the definitions\n$$G(r)=\\frac{2}{\\pi}\\int_{0}^{\\infty}F(Q)\\sin(Qr)\\,dQ,\\qquad\nG_0(r)=-4\\pi r\\,\\rho_0\\quad(r<r_{\\min}).$$\nAn incorrect density $\\rho'$ scales the reduced structure factor:\n$$F'(Q)=\\frac{\\rho_0}{\\rho'}\\,F_0(Q).$$\nThus the apparent PDF is\n$$G'(r)=\\frac{2}{\\pi}\\int_{0}^{\\infty}F'(Q)\\sin(Qr)\\,dQ\n=\\frac{\\rho_0}{\\rho'}\\,\\frac{2}{\\pi}\\int_{0}^{\\infty}F_0(Q)\\sin(Qr)\\,dQ\n=\\frac{\\rho_0}{\\rho'}\\,G_0(r).$$\nSubstituting $G_0(r)=-4\\pi r\\,\\rho_0$ gives\n$$G'(r)=-4\\pi r\\,\\frac{\\rho_0^2}{\\rho'}.$$\nThe low-$r$ artifact is\n$$\\Delta G(r)=G'(r)-G_0(r)\n=-4\\pi r\\frac{\\rho_0^2}{\\rho'}+4\\pi r\\,\\rho_0\n=4\\pi r\\,\\rho_0\\Bigl(1-\\frac{\\rho_0}{\\rho'}\\Bigr)\n=\\frac{4\\pi r\\,\\rho_0(\\rho'-\\rho_0)}{\\rho'}.$$", "answer": "$$\\boxed{\\frac{4\\pi r\\,\\rho_0(\\rho'-\\rho_0)}{\\rho'}}$$", "id": "161147"}, {"introduction": "Experimental scattering data is always limited to a finite maximum scattering vector, $Q_{\\max}$, and abruptly truncating the data creates spurious 'termination ripples' in the resulting PDF. This computational practice allows you to explore how different 'window functions' can be applied to mitigate these artifacts [@problem_id:2533221]. By comparing the effects of rectangular, Lorch, and Hann windows on a model dataset, you will gain a quantitative understanding of the critical trade-off between real-space resolution and ripple suppression, a key skill for producing high-quality, interpretable PDFs.", "problem": "You are given a synthetic reduced total scattering function $F(Q)$ corresponding to a single interatomic distance $R$. The reduced pair distribution function $G(r)$ is defined by the sine transform\n$$\nG(r) = \\frac{2}{\\pi} \\int_{0}^{Q_{\\max}} w(Q)\\,F(Q)\\,\\sin(Q r)\\,dQ,\n$$\nwhere $w(Q)$ is a window (taper) function used to mitigate termination ripples due to the finite cutoff $Q_{\\max}$. In this problem, you will compute and compare $G(r)$ using three different windows at the same $Q_{\\max}$ for each test case:\n- Rectangular window: $w_{\\mathrm{rect}}(Q) = 1$ for $0 \\le Q \\le Q_{\\max}$.\n- Lorch window: $w_{\\mathrm{Lorch}}(Q) = \\dfrac{\\sin\\!\\left(\\pi Q/Q_{\\max}\\right)}{\\pi Q/Q_{\\max}}$ for $0 \\le Q \\le Q_{\\max}$.\n- Hann window (raised cosine): $w_{\\mathrm{Hann}}(Q) = \\dfrac{1}{2}\\left[1+\\cos\\!\\left(\\pi Q/Q_{\\max}\\right)\\right]$ for $0 \\le Q \\le Q_{\\max}$.\n\nFundamental base and modeling assumptions:\n- For a single interatomic separation $R$ in a dilute, identical scatterer system, the static structure factor satisfies $S(Q)-1 \\propto \\frac{\\sin(QR)}{Q R}$. The reduced total scattering function is $F(Q) = Q\\,[S(Q)-1]$, which, up to an overall scale, is $F(Q) = \\frac{\\sin(QR)}{R}$. Use this model for $F(Q)$.\n- Use numerical quadrature with the trapezoidal rule on a uniform grid in $Q$.\n\nNumerical specification:\n- Use a uniform $Q$-grid on $[0, Q_{\\max}]$ with step $\\Delta Q = 0.01\\,\\text{\\AA}^{-1}$ (include both endpoints).\n- Compute $G(r)$ on a uniform $r$-grid on $[0, 6.0]$ with step $\\Delta r = 0.002\\,\\text{\\AA}$ (include both endpoints).\n- Use the same $Q_{\\max}$ across the three windows within each test case.\n- Physical units: $Q$ is in $\\text{\\AA}^{-1}$ and $r$ is in $\\text{\\AA}$. Report all $r$-valued outputs in $\\text{\\AA}$ and all widths in $\\text{\\AA}$. Amplitudes and ratios are unitless.\n\nFor each test case and for each window, compute the following four quantitative metrics from the numerically evaluated $G(r)$:\n1. Peak position near $R$: the value of $r$ at which $G(r)$ attains its maximum within the interval $[R-1.0\\,\\text{\\AA},\\,R+1.0\\,\\text{\\AA}]$.\n2. Full width at half maximum (FWHM) of the main peak: determine the left and right half-maximum crossing points around the identified peak via linear interpolation and report their difference in $\\text{\\AA}$.\n3. Peak amplitude: the maximum value of $G(r)$ within $[R-1.0\\,\\text{\\AA},\\,R+1.0\\,\\text{\\AA}]$.\n4. Maximum sidelobe ratio: the ratio of the largest absolute value of $G(r)$ outside the FWHM interval (i.e., for $r \\in [0,6.0]$ excluding the region between the left and right half-maximum crossings) to the peak amplitude.\n\nRound all reported floating-point values to six decimal places.\n\nTest suite:\nCompute results for the following parameter sets (express $R$ in $\\text{\\AA}$ and $Q_{\\max}$ in $\\text{\\AA}^{-1}$):\n- Test 1 (general case): $R = 2.0$, $Q_{\\max} = 25.0$.\n- Test 2 (low $Q_{\\max}$ boundary): $R = 2.0$, $Q_{\\max} = 8.0$.\n- Test 3 (short distance): $R = 1.0$, $Q_{\\max} = 25.0$.\n- Test 4 (high $Q_{\\max}$): $R = 2.0$, $Q_{\\max} = 40.0$.\n\nRequired final output format:\nYour program should produce a single line of output containing the results as a comma-separated list of lists. Each inner list corresponds to one test case in the order listed above and must contain twelve floats in the following order:\n$[$peak$_{\\mathrm{rect}}$, FWHM$_{\\mathrm{rect}}$, amp$_{\\mathrm{rect}}$, sidelobe$_{\\mathrm{rect}}$, peak$_{\\mathrm{Lorch}}$, FWHM$_{\\mathrm{Lorch}}$, amp$_{\\mathrm{Lorch}}$, sidelobe$_{\\mathrm{Lorch}}$, peak$_{\\mathrm{Hann}}$, FWHM$_{\\mathrm{Hann}}$, amp$_{\\mathrm{Hann}}$, sidelobe$_{\\mathrm{Hann}}]$,\nwith all floats rounded to six decimal places. For example, the printed line should look like:\n[[v11,v12,...,v1,12],[v21,v22,...,v2,12],[v31,...,v3,12],[v41,...,v4,12]]\n\nAll outputs for $r$ and FWHM must be in $\\text{\\AA}$, while amplitudes and ratios are dimensionless. No additional text should be printed.", "solution": "The problem presented is a well-posed computational exercise in the field of materials characterization, specifically total scattering and pair distribution function (PDF) analysis. It is scientifically grounded, complete, and its parameters are physically realistic. The problem is therefore valid and a solution will be provided.\n\nThe objective is to compute the reduced pair distribution function, $G(r)$, from a model of the reduced total scattering function, $F(Q)$, and to quantify the effects of three different window functions on the resulting $G(r)$ peak shape.\n\nThe relationship between $G(r)$ and $F(Q)$ is given by the sine Fourier transform:\n$$\nG(r) = \\frac{2}{\\pi} \\int_{0}^{Q_{\\max}} w(Q)\\,F(Q)\\,\\sin(Q r)\\,dQ\n$$\nHere, $Q$ is the magnitude of the scattering vector, $r$ is the interatomic distance, and $Q_{\\max}$ is the finite upper limit of the experimental or computational data range. The function $w(Q)$ is a window or taper function applied to mitigate termination ripples, which are spurious oscillations in $G(r)$ caused by the abrupt truncation of the integral at $Q_{\\max}$.\n\nThe problem models the scattering from a system containing only a single, unique interatomic separation, $R$. For such a simplified system, the reduced total scattering function $F(Q) = Q[S(Q)-1]$, where $S(Q)$ is the static structure factor, can be approximated as:\n$$\nF(Q) = \\frac{\\sin(QR)}{R}\n$$\nThis model is a scaled version of the Debye scattering equation for a single pair of atoms and serves as a valid, analytically simple function for this investigation.\n\nWe will compare three standard window functions:\n1.  **Rectangular window**: $w_{\\mathrm{rect}}(Q) = 1$. This is equivalent to applying no window, and it typically produces the sharpest central peak in $G(r)$ but also the most severe termination ripples.\n2.  **Lorch window**: $w_{\\mathrm{Lorch}}(Q) = \\dfrac{\\sin(\\pi Q/Q_{\\max})}{\\pi Q/Q_{\\max}}$. This is a sinc function, which is the Fourier transform of a rectangular function. its application is an attempt to sharpen the features in real space.\n3.  **Hann window**: $w_{\\mathrm{Hann}}(Q) = \\dfrac{1}{2}\\left[1+\\cos(\\pi Q/Q_{\\max})\\right]$. This raised cosine window provides excellent sidelobe suppression at the cost of some broadening of the main peak.\n\nThe analytical integral for $G(r)$ is not computed. Instead, a numerical approach based on the trapezoidal rule is mandated. The continuous functions are discretized on uniform grids. The $Q$-space grid spans $[0, Q_{\\max}]$ with a step of $\\Delta Q = 0.01\\,\\text{\\AA}^{-1}$, and the $r$-space grid spans $[0, 6.0\\,\\text{\\AA}]$ with a step of $\\Delta r = 0.002\\,\\text{\\AA}$.\n\nThe numerical evaluation of $G(r_j)$ for each point $r_j$ on the $r$-grid is:\n$$\nG(r_j) \\approx \\frac{2}{\\pi} \\sum_{i=0}^{N-1} \\frac{y_i(r_j) + y_{i+1}(r_j)}{2} \\Delta Q\n$$\nwhere $y_i(r_j) = w(Q_i) F(Q_i) \\sin(Q_i r_j)$ and $Q_i$ are the points on the $Q$-grid. For efficiency, this process is vectorized. The term $\\sin(Q_i r_j)$ is computed as an outer product of the $Q$ and $r$ vectors. The integrand for all $r_j$ values is then represented as a matrix, and the trapezoidal rule is applied along the $Q$-axis of this matrix to compute the entire $G(r)$ curve in a single operation.\n\nFor each computed $G(r)$ curve, four metrics are extracted:\n1.  **Peak Position ($r_{\\mathrm{peak}}$) and Amplitude ($A_{\\mathrm{peak}}$)**: The $r$-value and $G(r)$ value corresponding to the maximum of $G(r)$ are found within the search interval $[R-1.0\\,\\text{\\AA}, R+1.0\\,\\text{\\AA}]$.\n2.  **Full Width at Half Maximum (FWHM)**: The width of the peak at $50\\%$ of its maximum amplitude. The half-maximum value is $A_{\\mathrm{half}} = A_{\\mathrm{peak}} / 2$. The algorithm searches outwards from the peak location to find the grid points that bracket the crossing of $A_{\\mathrm{half}}$ on the left ($r<r_{\\mathrm{peak}}$) and right ($r>r_{\\mathrm{peak}}$) sides of the peak. The precise crossing coordinates, $r_{\\mathrm{left}}$ and $r_{\\mathrm{right}}$, are determined via linear interpolation between the bracketing points. The FWHM is then calculated as $\\text{FWHM} = r_{\\mathrm{right}} - r_{\\mathrm{left}}$.\n3.  **Maximum Sidelobe Ratio**: This metric quantifies the magnitude of spurious oscillations relative to the main peak. It is calculated as the ratio of the maximum absolute value of $G(r)$ outside the FWHM interval (for $r \\in [0, r_{\\mathrm{left}}) \\cup (r_{\\mathrm{right}}, 6.0]$) to the peak amplitude, $A_{\\mathrm{peak}}$.\n\nThe entire procedure is encapsulated in a Python program. A main function iterates through the four specified test cases. For each case, it computes $G(r)$ for the three window functions and then calls a sub-function to calculate the four metrics for each resulting curve. The final results are collected, rounded to six decimal places, and formatted into the required string representation.", "answer": "```python\nimport numpy as np\n\ndef calculate_all_metrics(G_r, r_grid, R):\n    \"\"\"\n    Calculates peak position, FWHM, peak amplitude, and sidelobe ratio for a G(r) curve.\n    \n    Args:\n        G_r (np.ndarray): The computed G(r) values.\n        r_grid (np.ndarray): The r-grid.\n        R (float): The ideal interatomic distance.\n\n    Returns:\n        list: A list containing [peak_pos, fwhm, peak_amp, sidelobe_ratio].\n    \"\"\"\n    # 1. Peak Position and Amplitude\n    search_mask = (r_grid >= R - 1.0) & (r_grid <= R + 1.0)\n    \n    # Ensure search range is not empty\n    if not np.any(search_mask):\n        return [np.nan] * 4\n        \n    G_r_search = G_r[search_mask]\n    r_grid_search = r_grid[search_mask]\n    \n    if len(G_r_search) == 0:\n        return [np.nan] * 4\n\n    peak_idx_local = np.argmax(G_r_search)\n    peak_amp = G_r_search[peak_idx_local]\n    \n    # Convert local index back to global index\n    search_indices = np.where(search_mask)[0]\n    peak_idx_global = search_indices[peak_idx_local]\n    peak_pos = r_grid[peak_idx_global]\n\n    if peak_amp == 0:\n        return [peak_pos, 0.0, 0.0, 0.0]\n\n    # 2. FWHM\n    half_max = peak_amp / 2.0\n    \n    # Find left crossing\n    # Search backwards from peak\n    i = peak_idx_global\n    while i > 0 and G_r[i] >= half_max:\n        i -= 1\n    \n    # Linear interpolation for left crossing\n    if i == 0 and G_r[0] >= half_max:\n        r_left = r_grid[0]\n    else:\n        y1, y2 = G_r[i], G_r[i+1]\n        x1, x2 = r_grid[i], r_grid[i+1]\n        r_left = x1 + (x2 - x1) * (half_max - y1) / (y2 - y1) if (y2 - y1) != 0 else (x1 + x2) / 2\n        \n    # Find right crossing\n    # Search forwards from peak\n    j = peak_idx_global\n    while j < len(r_grid) - 1 and G_r[j] >= half_max:\n        j += 1\n\n    # Linear interpolation for right crossing\n    if j == len(r_grid) - 1 and G_r[j] >= half_max:\n        r_right = r_grid[-1]\n    else:\n        y1, y2 = G_r[j-1], G_r[j]\n        x1, x2 = r_grid[j-1], r_grid[j]\n        r_right = x1 + (x2 - x1) * (half_max - y1) / (y2 - y1) if (y2 - y1) != 0 else (x1 + x2) / 2\n        \n    fwhm = r_right - r_left\n\n    # 4. Maximum Sidelobe Ratio\n    sidelobe_mask = (r_grid < r_left) | (r_grid > r_right)\n    sidelobe_values = G_r[sidelobe_mask]\n    \n    if len(sidelobe_values) == 0:\n        max_sidelobe_abs = 0.0\n    else:\n        max_sidelobe_abs = np.max(np.abs(sidelobe_values))\n        \n    sidelobe_ratio = max_sidelobe_abs / peak_amp\n\n    return [peak_pos, fwhm, peak_amp, sidelobe_ratio]\n\ndef process_case(R, Q_max):\n    \"\"\"\n    Processes a single test case (R, Q_max) for all three window functions.\n    \n    Args:\n        R (float): Interatomic distance in Angstroms.\n        Q_max (float): Maximum scattering vector in Angstrom^-1.\n\n    Returns:\n        list: A flattened list of 12 metric values for the three windows.\n    \"\"\"\n    dQ = 0.01\n    dr = 0.002\n    \n    Q = np.arange(0, Q_max + dQ, dQ)\n    r = np.arange(0, 6.0 + dr, dr)\n    \n    F_Q = np.sin(Q * R) / R\n    \n    # Define window functions\n    w_rect = np.ones_like(Q)\n    w_lorch = np.sinc(Q / Q_max) # np.sinc(x) is sin(pi*x)/(pi*x)\n    w_hann = 0.5 * (1 + np.cos(np.pi * Q / Q_max))\n    \n    windows = {'rect': w_rect, 'lorch': w_lorch, 'hann': w_hann}\n    results = []\n    \n    # Vectorized calculation of G(r)\n    Qr_matrix = np.outer(Q, r)\n    sin_Qr = np.sin(Qr_matrix)\n\n    for w_name in ['rect', 'lorch', 'hann']:\n        w_Q = windows[w_name]\n        \n        # Integrand: w(Q) * F(Q) * sin(Qr)\n        integrand_matrix = (w_Q * F_Q)[:, np.newaxis] * sin_Qr\n        \n        # Trapezoidal rule integration along the Q-axis (axis=0)\n        integral_values = np.trapz(integrand_matrix, x=Q, axis=0)\n        \n        G_r = (2 / np.pi) * integral_values\n        \n        # Calculate metrics\n        metrics = calculate_all_metrics(G_r, r, R)\n        results.extend(metrics)\n        \n    return results\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the final output.\n    \"\"\"\n    test_cases = [\n        (2.0, 25.0), # Test 1\n        (2.0, 8.0),  # Test 2\n        (1.0, 25.0), # Test 3\n        (2.0, 40.0)  # Test 4\n    ]\n\n    all_results = []\n    for R, Q_max in test_cases:\n        case_results = process_case(R, Q_max)\n        all_results.append(case_results)\n\n    # Format output string\n    row_strings = [f\"[{','.join(f'{v:.6f}' for v in row)}]\" for row in all_results]\n    final_output = f\"[{','.join(row_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "2533221"}]}