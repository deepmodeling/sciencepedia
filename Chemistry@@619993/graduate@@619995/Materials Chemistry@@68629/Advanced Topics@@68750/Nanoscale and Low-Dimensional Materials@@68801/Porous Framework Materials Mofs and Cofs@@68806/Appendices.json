{"hands_on_practices": [{"introduction": "The first step in evaluating any new porous material is to quantify its porosity, and the specific surface area is the most fundamental metric. This practice will guide you through the essential skill of applying the Brunauer–Emmett–Teller (BET) theory to experimental gas adsorption data. By linearizing the adsorption isotherm and fitting the data, you will extract the monolayer capacity and calculate the specific surface area, a critical parameter that governs the performance of MOFs and COFs in nearly all applications. [@problem_id:2514683]", "problem": "A Metal–Organic Framework (MOF) is characterized by nitrogen adsorption at $77\\ \\mathrm{K}$. The following equilibrium adsorption data in the Brunauer–Emmett–Teller (BET) range are obtained as amount adsorbed per unit mass, $n$ (in $\\mathrm{mmol\\ g^{-1}}$), at relative pressure $P/P_0$:\n- $P/P_0 = 0.10$, $n = 12.23241590\\ \\mathrm{mmol\\ g^{-1}}$\n- $P/P_0 = 0.20$, $n = 14.42307692\\ \\mathrm{mmol\\ g^{-1}}$\n- $P/P_0 = 0.25$, $n = 15.53398058\\ \\mathrm{mmol\\ g^{-1}}$\n\nStarting from the linearized Brunauer–Emmett–Teller (BET) equation,\n$$\n\\frac{P}{n\\,(P_0 - P)} \\;=\\; \\frac{1}{n_m\\,C} \\;+\\; \\frac{C - 1}{n_m\\,C}\\,\\frac{P}{P_0},\n$$\nwhere $n_m$ is the monolayer capacity (in $\\mathrm{mol\\ g^{-1}}$) and $C$ is the BET constant, do the following:\n- Construct the BET plot by defining $x \\equiv P/P_0$ and $y \\equiv P/\\!\\left[n\\,(P_0 - P)\\right]$, and perform a linear fit $y = s\\,x + i$ in the stated $P/P_0$ range to obtain the slope $s$ and intercept $i$.\n- From $s$ and $i$, extract $n_m$ and $C$.\n- Use $n_m$ to compute the specific surface area $S_{\\mathrm{BET}}$ according to the monolayer method based on a close-packed nitrogen cross section, with\n$N_A = 6.02214076 \\times 10^{23}\\ \\mathrm{mol^{-1}}$ and $a_{\\mathrm{N_2}} = 0.162\\ \\mathrm{nm^2}$ per molecule. Use $1\\ \\mathrm{nm^2} = 1 \\times 10^{-18}\\ \\mathrm{m^2}$. Express $S_{\\mathrm{BET}}$ in $\\mathrm{m^2\\ g^{-1}}$.\n\nRound your final numerical answer for $S_{\\mathrm{BET}}$ to four significant figures.", "solution": "The problem statement is first subjected to a rigorous validation.\n\n**Problem Validation**\n\nThe givens are:\n1.  Nitrogen adsorption data for a Metal–Organic Framework (MOF) at $77\\ \\mathrm{K}$:\n    - For $P/P_0 = 0.10$, the amount adsorbed is $n = 12.23241590\\ \\mathrm{mmol\\ g^{-1}}$.\n    - For $P/P_0 = 0.20$, the amount adsorbed is $n = 14.42307692\\ \\mathrm{mmol\\ g^{-1}}$.\n    - For $P/P_0 = 0.25$, the amount adsorbed is $n = 15.53398058\\ \\mathrm{mmol\\ g^{-1}}$.\n2.  The linearized Brunauer–Emmett–Teller (BET) equation: $\\frac{P}{n\\,(P_0 - P)} \\;=\\; \\frac{1}{n_m\\,C} \\;+\\; \\frac{C - 1}{n_m\\,C}\\,\\frac{P}{P_0}$.\n3.  Definitions for the linear plot: $x \\equiv P/P_0$ and $y \\equiv P/\\!\\left[n\\,(P_0 - P)\\right]$. The linear fit is $y = s\\,x + i$.\n4.  Physical constants: Avogadro constant $N_A = 6.02214076 \\times 10^{23}\\ \\mathrm{mol^{-1}}$ and nitrogen cross-sectional area $a_{\\mathrm{N_2}} = 0.162\\ \\mathrm{nm^2}$.\n5.  Unit conversion: $1\\ \\mathrm{nm^2} = 1 \\times 10^{-18}\\ \\mathrm{m^2}$.\n6.  Required outputs: slope $s$, intercept $i$, monolayer capacity $n_m$, BET constant $C$, and specific surface area $S_{\\mathrm{BET}}$ in $\\mathrm{m^2\\ g^{-1}}$ rounded to four significant figures. The problem specifies $n_m$ should be in units of $\\mathrm{mol\\ g^{-1}}$.\n\n**Verdict**\nThe problem is deemed **valid**. It is scientifically grounded in the established principles of physical adsorption and surface area analysis via the BET model. It is well-posed, providing sufficient data and clear definitions to determine a unique solution. The language is objective and precise. The data, while contrived to produce a perfect linear relationship, are physically plausible for a high-surface-area material. The task is a standard application of surface science principles.\n\n**Solution**\n\nThe solution proceeds in a sequence of logical steps.\n\n**Step 1: Data Transformation for the BET Plot**\nWe are given the linear form of the BET equation. To construct the BET plot, we must transform the given adsorption data $(P/P_0, n)$ into the coordinates $(x, y)$. The independent variable is $x = P/P_0$. The dependent variable is $y = \\frac{P}{n\\,(P_0 - P)}$, which can be rewritten in terms of $x$ as:\n$$\ny = \\frac{P/P_0}{n(1 - P/P_0)} = \\frac{x}{n(1-x)}\n$$\nThe units of $n$ are $\\mathrm{mmol\\ g^{-1}}$, so the units of $y$ will be $\\mathrm{g\\ mmol^{-1}}$.\n\nWe calculate the $(x, y)$ coordinates for the three given data points:\n- Point 1: $x_1 = 0.10$, $n_1 = 12.23241590\\ \\mathrm{mmol\\ g^{-1}}$\n$$\ny_1 = \\frac{0.10}{12.23241590 \\cdot (1 - 0.10)} = \\frac{0.10}{11.00917431} \\approx 0.00908333\\ \\mathrm{g\\ mmol^{-1}}\n$$\n- Point 2: $x_2 = 0.20$, $n_2 = 14.42307692\\ \\mathrm{mmol\\ g^{-1}}$\n$$\ny_2 = \\frac{0.20}{14.42307692 \\cdot (1 - 0.20)} = \\frac{0.20}{11.538461536} \\approx 0.01733333\\ \\mathrm{g\\ mmol^{-1}}\n$$\n- Point 3: $x_3 = 0.25$, $n_3 = 15.53398058\\ \\mathrm{mmol\\ g^{-1}}$\n$$\ny_3 = \\frac{0.25}{15.53398058 \\cdot (1 - 0.25)} = \\frac{0.25}{11.650485435} \\approx 0.02145833\\ \\mathrm{g\\ mmol^{-1}}\n$$\n\n**Step 2: Linear Fit to Obtain Slope and Intercept**\nThe problem requires a linear fit $y = s\\,x + i$ to these points. We first compute the slope $s$ between adjacent points to verify collinearity.\nSlope between points 1 and 2:\n$$\ns_{12} = \\frac{y_2 - y_1}{x_2 - x_1} = \\frac{0.01733333... - 0.00908333...}{0.20 - 0.10} = \\frac{0.00825}{0.10} = 0.0825\\ \\mathrm{g\\ mmol^{-1}}\n$$\nSlope between points 2 and 3:\n$$\ns_{23} = \\frac{y_3 - y_2}{x_3 - x_2} = \\frac{0.02145833... - 0.01733333...}{0.25 - 0.20} = \\frac{0.004125}{0.05} = 0.0825\\ \\mathrm{g\\ mmol^{-1}}\n$$\nThe slopes are identical, confirming the three points are perfectly collinear. The slope of the line is $s = 0.0825 = \\frac{33}{400}\\ \\mathrm{g\\ mmol^{-1}}$.\nThe intercept $i$ can be found using the point-slope form $i = y - s\\,x$. Using point 1:\n$$\ni = y_1 - s\\,x_1 = 0.00908333... - (0.0825)(0.10) = 0.00908333... - 0.00825 = 0.00083333...\n$$\nThis recurring decimal is the rational number $\\frac{1}{1200}$. Thus, the intercept is $i = \\frac{1}{1200}\\ \\mathrm{g\\ mmol^{-1}}$.\n\n**Step 3: Extraction of Monolayer Capacity ($n_m$) and BET Constant ($C$)**\nWe relate the empirical slope $s$ and intercept $i$ to the parameters in the theoretical BET equation:\n$$\ns = \\frac{C - 1}{n_m\\,C} \\quad \\text{and} \\quad i = \\frac{1}{n_m\\,C}\n$$\nThis is a system of two equations for the two unknowns, $n_m$ and $C$.\nFirst, solve for $C$ by taking the ratio of $s$ to $i$:\n$$\n\\frac{s}{i} = \\frac{(C-1)/(n_m\\,C)}{1/(n_m\\,C)} = C - 1\n$$\n$$\nC = \\frac{s}{i} + 1 = \\frac{0.0825}{0.00083333...} + 1 = \\frac{33/400}{1/1200} + 1 = \\frac{33}{400} \\cdot 1200 + 1 = 33 \\cdot 3 + 1 = 99 + 1 = 100\n$$\nThe BET constant $C$ is a dimensionless quantity equal to $100$.\n\nNext, we determine the monolayer capacity $n_m$. A direct method is to sum the slope and intercept expressions:\n$$\ns + i = \\frac{C - 1}{n_m\\,C} + \\frac{1}{n_m\\,C} = \\frac{C - 1 + 1}{n_m\\,C} = \\frac{C}{n_m\\,C} = \\frac{1}{n_m}\n$$\nTherefore, $n_m = \\frac{1}{s+i}$.\n$$\ns+i = 0.0825 + 0.00083333... = \\frac{33}{400} + \\frac{1}{1200} = \\frac{99+1}{1200} = \\frac{100}{1200} = \\frac{1}{12}\\ \\mathrm{g\\ mmol^{-1}}\n$$\n$$\nn_m = \\frac{1}{1/12} = 12\\ \\mathrm{mmol\\ g^{-1}}\n$$\nAs per the problem statement, we convert this to $\\mathrm{mol\\ g^{-1}}$:\n$$\nn_m = 12\\ \\mathrm{mmol\\ g^{-1}} = 12 \\times 10^{-3}\\ \\mathrm{mol\\ g^{-1}} = 0.012\\ \\mathrm{mol\\ g^{-1}}\n$$\n\n**Step 4: Calculation of the Specific Surface Area ($S_{\\mathrm{BET}}$)**\nThe specific surface area is the total area occupied by the molecules forming a complete monolayer on the surface of one gram of the adsorbent. It is calculated by multiplying the number of moles in the monolayer per gram ($n_m$) by Avogadro's constant ($N_A$) to get the number of molecules, and then by the cross-sectional area of a single adsorbate molecule ($a_{\\mathrm{N_2}}$).\n$$\nS_{\\mathrm{BET}} = n_m \\cdot N_A \\cdot a_{\\mathrm{N_2}}\n$$\nWe use the given values:\n$n_m = 0.012\\ \\mathrm{mol\\ g^{-1}}$\n$N_A = 6.02214076 \\times 10^{23}\\ \\mathrm{mol^{-1}}$\n$a_{\\mathrm{N_2}} = 0.162\\ \\mathrm{nm^2} = 0.162 \\times 10^{-18}\\ \\mathrm{m^2}$\n\nSubstituting these values into the equation:\n$$\nS_{\\mathrm{BET}} = (0.012\\ \\mathrm{mol\\ g^{-1}}) \\times (6.02214076 \\times 10^{23}\\ \\mathrm{mol^{-1}}) \\times (0.162 \\times 10^{-18}\\ \\mathrm{m^2})\n$$\n$$\nS_{\\mathrm{BET}} = (0.012 \\times 6.02214076 \\times 0.162) \\times 10^{23-18}\\ \\mathrm{m^2\\ g^{-1}}\n$$\n$$\nS_{\\mathrm{BET}} = 0.0117072436... \\times 10^{5}\\ \\mathrm{m^2\\ g^{-1}}\n$$\n$$\nS_{\\mathrm{BET}} = 1170.72436...\\ \\mathrm{m^2\\ g^{-1}}\n$$\nThe problem requires the final answer rounded to four significant figures. The fifth significant figure is $7$, which dictates rounding up the fourth digit.\n$$\nS_{\\mathrm{BET}} \\approx 1171\\ \\mathrm{m^2\\ g^{-1}}\n$$", "answer": "$$\\boxed{1171}$$", "id": "2514683"}, {"introduction": "While pure-component properties are essential, real-world applications for porous frameworks—from carbon capture to gas purification—invariably involve mixtures. This exercise introduces you to Ideal Adsorbed Solution Theory (IAST), a cornerstone model for predicting how a material will selectively adsorb one component over another from a gas mixture. By implementing IAST with the Langmuir model, you will learn to calculate the adsorption selectivity, a key performance indicator for designing and screening materials for separation processes. [@problem_id:2514698]", "problem": "You are modeling competitive adsorption of carbon dioxide and nitrogen in a porous framework material such as a Metal-Organic Framework (MOF) or a Covalent Organic Framework (COF). Assume an ideal gas mixture and apply Ideal Adsorbed Solution Theory (IAST) to compute the equilibrium adsorbed-phase composition for a binary mixture from pure-component isotherms. Each pure-component isotherm follows the Langmuir form. Your task is to compute the IAST selectivity for carbon dioxide over nitrogen for several parameter sets and to demonstrate sensitivity to the saturation capacity and the affinity parameters.\n\nFundamental base and assumptions to be used:\n- Ideal gas mixture at total pressure $P$ and gas-phase mole fractions $y_{i}$.\n- Ideal Adsorbed Solution Theory (IAST): The spreading pressure $\\pi$ of each component in the mixture is equal to the spreading pressure the same component would have at some reduced pressure $P_{i}^{0}$ on its pure-component isotherm, and the Raoult-like relation holds.\n- Langmuir isotherm for component $i$: $q_{i}^{0}(p) = \\dfrac{q_{i,\\max} \\, b_{i} \\, p}{1 + b_{i} \\, p}$, where $q_{i,\\max}$ is the saturation capacity and $b_{i}$ is the affinity constant.\n- Spreading pressure equality in IAST requires $\\int_{0}^{P_{i}^{0}} \\dfrac{q_{i}^{0}(p)}{p} \\, dp = \\pi$ for each component $i$. For the Langmuir isotherm, this integral is well-defined and invertible.\n- The constraint $\\sum_{i} \\dfrac{y_{i} \\, P}{P_{i}^{0}(\\pi)} = 1$ determines $\\pi$.\n- Once $\\pi$ is determined, the adsorbed-phase mole fractions are $x_{i} = \\dfrac{y_{i} \\, P}{P_{i}^{0}(\\pi)}$, and the Ideal Adsorbed Solution Theory (IAST) selectivity for carbon dioxide over nitrogen is $S_{\\mathrm{IAST}} = \\dfrac{\\left(x_{\\mathrm{CO_{2}}} / x_{\\mathrm{N_{2}}}\\right)}{\\left(y_{\\mathrm{CO_{2}}} / y_{\\mathrm{N_{2}}}\\right)}$.\n\nAll calculations must be performed at total pressure $P = 1$ bar. Use $b_{i}$ in $\\mathrm{bar}^{-1}$ and $q_{i,\\max}$ in $\\mathrm{mmol}\\,\\mathrm{g}^{-1}$ (units cancel in the selectivity as long as both species use consistent units). Angles are not involved. The program must compute $S_{\\mathrm{IAST}}$ for each test case and report the results as decimal floats rounded to six decimal places.\n\nTest suite (each case is a tuple $(q_{\\mathrm{CO_{2}},\\max}, b_{\\mathrm{CO_{2}}}, q_{\\mathrm{N_{2}},\\max}, b_{\\mathrm{N_{2}}}, y_{\\mathrm{CO_{2}}}, P)$ with $P$ in bar):\n1. Baseline flue gas at $P = 1$ bar: $(4.5, 2.0, 2.0, 0.05, 0.15, 1.0)$.\n2. Symmetric parameters (expect $S_{\\mathrm{IAST}} \\approx 1$): $(3.0, 0.5, 3.0, 0.5, 0.15, 1.0)$.\n3. Increased affinity for carbon dioxide (sensitivity to $b$): $(4.5, 5.0, 2.0, 0.05, 0.15, 1.0)$.\n4. Increased capacity for carbon dioxide (sensitivity to $q_{\\max}$): $(9.0, 2.0, 2.0, 0.05, 0.15, 1.0)$.\n5. Low gas-phase carbon dioxide and near-Henry regime: $(4.5, 0.1, 2.0, 0.01, 0.05, 1.0)$.\n\nImplementation requirements:\n- Use only the fundamental base and assumptions listed above. Do not invoke any adsorption shortcut formulas beyond what directly follows from the Langmuir isotherm and the IAST definitions.\n- For each test case, determine $\\pi$ by solving the scalar equation $\\sum_{i \\in \\{\\mathrm{CO_{2}}, \\mathrm{N_{2}}\\}} \\dfrac{y_{i} \\, P}{P_{i}^{0}(\\pi)} = 1$, where $P_{i}^{0}(\\pi)$ is defined implicitly by $\\int_{0}^{P_{i}^{0}} \\dfrac{q_{i}^{0}(p)}{p} \\, dp = \\pi$ for the Langmuir isotherm of component $i$.\n- Compute $x_{\\mathrm{CO_{2}}}$ and $x_{\\mathrm{N_{2}}}$, then report $S_{\\mathrm{IAST}} = \\dfrac{\\left(x_{\\mathrm{CO_{2}}} / x_{\\mathrm{N_{2}}}\\right)}{\\left(y_{\\mathrm{CO_{2}}} / y_{\\mathrm{N_{2}}}\\right)}$.\n- Output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite (e.g., \"[result1,result2,result3,result4,result5]\"). Each result must be a float rounded to six decimal places.", "solution": "The problem statement is subjected to rigorous validation.\n\n### Step 1: Extract Givens\n\nThe problem provides the following data, definitions, and constraints for modeling competitive adsorption of a binary gas mixture ($i \\in \\{ \\mathrm{CO}_{2}, \\mathrm{N}_{2} \\}$) in a porous material:\n\n*   **System**: A binary ideal gas mixture at total pressure $P$ and gas-phase mole fractions $y_{i}$.\n*   **Theory**: Ideal Adsorbed Solution Theory (IAST).\n*   **Pure-Component Isotherm Model**: The Langmuir isotherm for component $i$:\n    $$q_{i}^{0}(p) = \\dfrac{q_{i,\\max} \\, b_{i} \\, p}{1 + b_{i} \\, p}$$\n    where $q_{i,\\max}$ is the saturation capacity and $b_{i}$ is the affinity constant.\n*   **Spreading Pressure Definition**: The spreading pressure $\\pi$ is related to the pure-component pressure $P_{i}^{0}$ by the integral equation:\n    $$\\int_{0}^{P_{i}^{0}} \\dfrac{q_{i}^{0}(p)}{p} \\, dp = \\pi$$\n*   **IAST Core Equation**: The total spreading pressure $\\pi$ of the mixture is determined by the constraint:\n    $$\\sum_{i} \\dfrac{y_{i} \\, P}{P_{i}^{0}(\\pi)} = 1$$\n*   **Adsorbed-Phase Composition**: The adsorbed-phase mole fraction of component $i$ is given by:\n    $$x_{i} = \\dfrac{y_{i} \\, P}{P_{i}^{0}(\\pi)}$$\n*   **Selectivity Definition**: The IAST selectivity for component $\\mathrm{CO}_2$ over $\\mathrm{N}_2$ is:\n    $$S_{\\mathrm{IAST}} = \\dfrac{\\left(x_{\\mathrm{CO_{2}}} / x_{\\mathrm{N_{2}}}\\right)}{\\left(y_{\\mathrm{CO_{2}}} / y_{\\mathrm{N_{2}}}\\right)}$$\n*   **Global Conditions**: Total pressure $P = 1 \\, \\mathrm{bar}$. Units for $b_{i}$ are $\\mathrm{bar}^{-1}$ and for $q_{i,\\max}$ are $\\mathrm{mmol}\\,\\mathrm{g}^{-1}$.\n*   **Test Cases**:\n    1.  $(q_{\\mathrm{CO_{2}},\\max}, b_{\\mathrm{CO_{2}}}, q_{\\mathrm{N_{2}},\\max}, b_{\\mathrm{N_{2}}}, y_{\\mathrm{CO_{2}}}, P) = (4.5, 2.0, 2.0, 0.05, 0.15, 1.0)$\n    2.  $(q_{\\mathrm{CO_{2}},\\max}, b_{\\mathrm{CO_{2}}}, q_{\\mathrm{N_{2}},\\max}, b_{\\mathrm{N_{2}}}, y_{\\mathrm{CO_{2}}}, P) = (3.0, 0.5, 3.0, 0.5, 0.15, 1.0)$\n    3.  $(q_{\\mathrm{CO_{2}},\\max}, b_{\\mathrm{CO_{2}}}, q_{\\mathrm{N_{2}},\\max}, b_{\\mathrm{N_{2}}}, y_{\\mathrm{CO_{2}}}, P) = (4.5, 5.0, 2.0, 0.05, 0.15, 1.0)$\n    4.  $(q_{\\mathrm{CO_{2}},\\max}, b_{\\mathrm{CO_{2}}}, q_{\\mathrm{N_{2}},\\max}, b_{\\mathrm{N_{2}}}, y_{\\mathrm{CO_{2}}}, P) = (9.0, 2.0, 2.0, 0.05, 0.15, 1.0)$\n    5.  $(q_{\\mathrm{CO_{2}},\\max}, b_{\\mathrm{CO_{2}}}, q_{\\mathrm{N_{2}},\\max}, b_{\\mathrm{N_{2}}}, y_{\\mathrm{CO_{2}}}, P) = (4.5, 0.1, 2.0, 0.01, 0.05, 1.0)$\n\n### Step 2: Validate Using Extracted Givens\n\nThe problem is evaluated against the validation criteria.\n\n*   **Scientifically Grounded**: The problem is based on the Langmuir isotherm and Ideal Adsorbed Solution Theory, which are standard, well-established models in materials chemistry and chemical engineering for describing adsorption phenomena. The framework is scientifically sound and free of pseudoscience.\n*   **Well-Posed**: The problem provides a complete set of equations and parameters, defining a clear path to a unique solution. The core task involves solving a single non-linear equation for a single variable, which is a well-posed numerical problem.\n*   **Objective**: The problem is formulated using precise mathematical language and quantitative data. It is free of subjective or ambiguous statements.\n*   **Completeness and Consistency**: All necessary information is provided. For the binary mixture, the mole fraction of the second component, $y_{\\mathrm{N_{2}}}$, is unambiguously determined by $y_{\\mathrm{N_{2}}} = 1 - y_{\\mathrm{CO_{2}}}$. The problem is self-contained and internally consistent.\n*   **Realism**: The parameters for the isotherms and the gas-phase compositions are physically plausible and representative of typical conditions for studying gas separation (e.g., flue gas) with porous materials like MOFs and COFs.\n\n### Step 3: Verdict and Action\n\nThe problem is **valid**. It is scientifically grounded, well-posed, and complete. A rigorous solution will be developed.\n\n### Solution Derivation\n\nThe solution requires a step-by-step application of the provided theoretical framework. The components are designated as $1$ for $\\mathrm{CO_{2}}$ and $2$ for $\\mathrm{N_{2}}$.\n\n**1. Analytically Integrate the Spreading Pressure Equation**\n\nFirst, the integral for the spreading pressure $\\pi$ must be solved analytically for the Langmuir isotherm.\nThe given integral is:\n$$\\pi = \\int_{0}^{P_{i}^{0}} \\dfrac{q_{i}^{0}(p)}{p} \\, dp$$\nSubstituting the Langmuir expression $q_{i}^{0}(p) = \\dfrac{q_{i,\\max} \\, b_{i} \\, p}{1 + b_{i} \\, p}$:\n$$\\pi = \\int_{0}^{P_{i}^{0}} \\dfrac{1}{p} \\left( \\dfrac{q_{i,\\max} \\, b_{i} \\, p}{1 + b_{i} \\, p} \\right) dp = q_{i,\\max} b_{i} \\int_{0}^{P_{i}^{0}} \\dfrac{1}{1 + b_{i} \\, p} \\, dp$$\nThe evaluation of this standard integral is straightforward:\n$$\\pi = q_{i,\\max} b_{i} \\left[ \\dfrac{1}{b_{i}} \\ln(1 + b_{i} p) \\right]_{0}^{P_{i}^{0}} = q_{i,\\max} \\left( \\ln(1 + b_{i} P_{i}^{0}) - \\ln(1 + 0) \\right)$$\nThis yields the direct relationship between $\\pi$ and $P_{i}^{0}$:\n$$\\pi = q_{i,\\max} \\ln(1 + b_{i} P_{i}^{0})$$\n\n**2. Invert the Spreading Pressure Relation**\n\nTo use the IAST core equation, we must express the fictitious pure-component pressure $P_{i}^{0}$ as a function of the spreading pressure $\\pi$. This requires inverting the equation derived above.\n$$\\dfrac{\\pi}{q_{i,\\max}} = \\ln(1 + b_{i} P_{i}^{0})$$\nExponentiating both sides:\n$$\\exp\\left(\\dfrac{\\pi}{q_{i,\\max}}\\right) = 1 + b_{i} P_{i}^{0}$$\nSolving for $P_{i}^{0}$:\n$$P_{i}^{0}(\\pi) = \\dfrac{1}{b_{i}} \\left[ \\exp\\left(\\dfrac{\\pi}{q_{i,\\max}}\\right) - 1 \\right]$$\nThis is the required function $P_{i}^{0}(\\pi)$.\n\n**3. Formulate the Equation for Numerical Solution**\n\nThe IAST constraint $\\sum_{i} \\frac{y_{i} P}{P_{i}^{0}(\\pi)} = 1$ must be solved for $\\pi$. For a binary mixture of $\\mathrm{CO_{2}}$ (component $1$) and $\\mathrm{N_{2}}$ (component $2$):\n$$\\dfrac{y_{1} P}{P_{1}^{0}(\\pi)} + \\dfrac{y_{2} P}{P_{2}^{0}(\\pi)} = 1$$\nSubstituting the expression for $P_{i}^{0}(\\pi)$:\n$$\\dfrac{y_{1} P}{\\dfrac{1}{b_{1}} \\left[ \\exp\\left(\\dfrac{\\pi}{q_{1,\\max}}\\right) - 1 \\right]} + \\dfrac{y_{2} P}{\\dfrac{1}{b_{2}} \\left[ \\exp\\left(\\dfrac{\\pi}{q_{2,\\max}}\\right) - 1 \\right]} = 1$$\nThis is a non-linear scalar equation in the variable $\\pi$. It can be solved numerically by finding the root of the function $f(\\pi)$:\n$$f(\\pi) = \\dfrac{y_{1} P b_{1}}{\\exp\\left(\\dfrac{\\pi}{q_{1,\\max}}\\right) - 1} + \\dfrac{y_{2} P b_{2}}{\\exp\\left(\\dfrac{\\pi}{q_{2,\\max}}\\right) - 1} - 1 = 0$$\nThis function is monotonic and well-behaved for $\\pi > 0$. As $\\pi \\to 0^{+}$, $f(\\pi) \\to +\\infty$, and as $\\pi \\to \\infty$, $f(\\pi) \\to -1$. This guarantees that a unique positive root exists, which can be found using a standard numerical root-finding algorithm, such as the Brent-Dekker method.\n\n**4. Calculate the IAST Selectivity**\n\nOnce the unique root $\\pi$ is determined, the IAST selectivity $S_{\\mathrm{IAST}}$ can be calculated. The definition is:\n$$S_{\\mathrm{IAST}} = \\dfrac{x_{1} / x_{2}}{y_{1} / y_{2}}$$\nUsing the IAST relation $x_{i} = \\frac{y_{i} P}{P_{i}^{0}(\\pi)}$:\n$$S_{\\mathrm{IAST}} = \\dfrac{\\left(\\dfrac{y_{1} P}{P_{1}^{0}(\\pi)}\\right) / \\left(\\dfrac{y_{2} P}{P_{2}^{0}(\\pi)}\\right)}{y_{1} / y_{2}} = \\dfrac{y_{1} P_{2}^{0}(\\pi)}{y_{2} P_{1}^{0}(\\pi)} \\cdot \\dfrac{y_{2}}{y_{1}}$$\nThis simplifies to a ratio of the fictitious pure-component pressures:\n$$S_{\\mathrm{IAST}} = \\dfrac{P_{2}^{0}(\\pi)}{P_{1}^{0}(\\pi)}$$\nSubstituting the inverted expression for $P_{i}^{0}(\\pi)$:\n$$S_{\\mathrm{IAST}} = \\dfrac{\\dfrac{1}{b_{2}} \\left[ \\exp\\left(\\dfrac{\\pi}{q_{2,\\max}}\\right) - 1 \\right]}{\\dfrac{1}{b_{1}} \\left[ \\exp\\left(\\dfrac{\\pi}{q_{1,\\max}}\\right) - 1 \\right]} = \\dfrac{b_{1}}{b_{2}} \\dfrac{\\exp\\left(\\dfrac{\\pi}{q_{2,\\max}}\\right) - 1}{\\exp\\left(\\dfrac{\\pi}{q_{1,\\max}}\\right) - 1}$$\nThis final expression will be used for computation after determining $\\pi$.\n\nThe computational procedure is as follows:\nFor each test case:\n1.  Define the parameters: $q_{1,\\max}$, $b_{1}$, $y_{1}$ for $\\mathrm{CO_{2}}$ and $q_{2,\\max}$, $b_{2}$ for $\\mathrm{N_{2}}$. The pressure $P=1$ and $y_{2} = 1 - y_{1}$.\n2.  Numerically solve the equation $f(\\pi) = 0$ for $\\pi$ using a root-finding algorithm on a suitable interval, such as $[10^{-9}, 1000]$.\n3.  Calculate $S_{\\mathrm{IAST}}$ using the final derived formula.\n4.  Round the result to six decimal places as required.\nThis procedure will be implemented for all provided test cases.", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Computes the IAST selectivity for a binary mixture of CO2 and N2\n    following Langmuir isotherms.\n    \"\"\"\n\n    # Test suite: (q_co2_max, b_co2, q_n2_max, b_n2, y_co2, P)\n    # q_max in mmol/g, b in 1/bar, y is mole fraction, P in bar.\n    test_cases = [\n        # 1. Baseline flue gas\n        (4.5, 2.0, 2.0, 0.05, 0.15, 1.0),\n        # 2. Symmetric parameters\n        (3.0, 0.5, 3.0, 0.5, 0.15, 1.0),\n        # 3. Increased affinity for CO2\n        (4.5, 5.0, 2.0, 0.05, 0.15, 1.0),\n        # 4. Increased capacity for CO2\n        (9.0, 2.0, 2.0, 0.05, 0.15, 1.0),\n        # 5. Low gas-phase CO2 and near-Henry regime\n        (4.5, 0.1, 2.0, 0.01, 0.05, 1.0),\n    ]\n\n    results = []\n\n    for case in test_cases:\n        q_co2_max, b_co2, q_n2_max, b_n2, y_co2, P = case\n        y_n2 = 1.0 - y_co2\n\n        # Define the function f(pi) whose root needs to be found.\n        # f(pi) = (y_co2 * P / P0_co2(pi)) + (y_n2 * P / P0_n2(pi)) - 1 = 0\n        # where P0_i(pi) = (1/b_i) * [exp(pi / q_i_max) - 1]\n        def iast_root_function(pi):\n            # To avoid potential overflow or math domain errors for pi = 0\n            if pi = 0:\n                return np.inf\n            \n            # exp(pi / q_max) can be very large. Check term by term.\n            term1_denom = np.exp(pi / q_co2_max) - 1.0\n            term2_denom = np.exp(pi / q_n2_max) - 1.0\n\n            # Guard against division by zero if a denominator is zero,\n            # which happens only if pi is zero, handled above.\n            term1 = (y_co2 * P * b_co2) / term1_denom\n            term2 = (y_n2 * P * b_n2) / term2_denom\n            \n            return term1 + term2 - 1.0\n\n        # Find the spreading pressure (pi) by solving iast_root_function(pi) = 0.\n        # The function f(pi) -> +inf as pi -> 0+ and f(pi) -> -1 as pi -> +inf.\n        # A root is guaranteed to exist in a bracket like [1e-9, 1000].\n        try:\n            pi_solution = brentq(iast_root_function, 1e-9, 1000.0)\n        except ValueError:\n            # Handle cases where the bracket might not be valid, though unlikely.\n            results.append(np.nan)\n            continue\n\n        # Calculate IAST selectivity: S = (x_co2/y_co2) / (x_n2/y_n2) = P0_n2/P0_co2\n        # S = (b_co2/b_n2) * (exp(pi/q_n2_max) - 1) / (exp(pi/q_co2_max) - 1)\n        \n        # Numerator part of selectivity calculation\n        num = (np.exp(pi_solution / q_n2_max) - 1.0)\n        \n        # Denominator part of selectivity calculation\n        den = (np.exp(pi_solution / q_co2_max) - 1.0)\n        \n        # Avoid division by zero if den is zero\n        if den == 0:\n            selectivity = np.inf\n        else:\n            selectivity = (b_co2 / b_n2) * (num / den)\n\n        results.append(round(selectivity, 6))\n\n    # Format the final output as a comma-separated list in brackets.\n    output_str = f\"[{','.join(map(str, results))}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2514698"}, {"introduction": "The performance of an adsorbent in a dynamic process depends not only on its equilibrium capacity but also on its adsorption kinetics. This practice explores the Linear Driving Force (LDF) model, a powerful yet practical approach for describing the rate of mass transfer in an adsorption column. You will fit the LDF model to synthetic breakthrough data and, crucially, derive the connection between the model's rate coefficient, $k_{\\mathrm{LDF}}$, and the material's intrinsic effective diffusivity, $D_{\\mathrm{eff}}$, bridging the gap between microscopic transport properties and macroscopic process behavior. [@problem_id:2514702]", "problem": "You are asked to design and implement a program that estimates the kinetic parameter in the linear driving force model for adsorption in porous framework materials, and then relates this kinetic parameter to an effective diffusivity using geometrical information about the adsorbent particles. The system represents a short, well-mixed adsorption bed (a zero-dimensional approximation of a short fixed-bed), loaded with a metal-organic framework or covalent-organic framework (collectively called porous framework materials). The objective is to fit synthetic breakthrough data for a step change in inlet gas concentration and then compute the effective intraparticle diffusivity.\n\nFundamental base and governing relations:\n- The linear driving force model postulates $$\\frac{dq}{dt} = k_{\\mathrm{LDF}} \\left(q^\\ast - q\\right),$$ where $q$ is the volume-averaged adsorbed phase concentration inside a particle (in $\\mathrm{mol}\\,\\mathrm{kg}^{-1}$), $q^\\ast$ is the equilibrium adsorbed phase concentration corresponding to the gas concentration at the particle surface, and $k_{\\mathrm{LDF}}$ is the linear driving force rate coefficient (in $\\mathrm{s}^{-1}$).\n- For dilute gas adsorption in the Henry’s law regime, assume $$q^\\ast = K\\,C,$$ where $K$ is Henry’s constant (in $\\mathrm{m}^3\\,\\mathrm{kg}^{-1}$) and $C$ is the gas-phase molar concentration (in $\\mathrm{mol}\\,\\mathrm{m}^{-3}$).\n- For a small, well-mixed bed segment (gas plus solids) exposed to a step change in inlet concentration, mass conservation for the gas phase and the solid phase yields a coupled system:\n  $$V_g \\frac{dC}{dt} = F\\left(C_{\\mathrm{in}} - C\\right) - m_s \\frac{dq}{dt},$$\n  $$\\frac{dq}{dt} = k_{\\mathrm{LDF}}\\left(K C - q\\right),$$\n  where $V_g$ is the gas holdup volume (in $\\mathrm{m}^3$), $F$ is the volumetric flow rate (in $\\mathrm{m}^3\\,\\mathrm{s}^{-1}$), $C_{\\mathrm{in}}$ is the inlet gas concentration (in $\\mathrm{mol}\\,\\mathrm{m}^{-3}$), and $m_s$ is the adsorbent mass (in $\\mathrm{kg}$).\n- For interpretation, define the dimensionless outlet breakthrough ratio $$u(t) \\equiv \\frac{C(t)}{C_{\\mathrm{in}}}.$$\n\nDerivation target:\n- Starting from Fick’s law of diffusion in a sphere with radius $R_p$ (in $\\mathrm{m}$) and using the volume-average loading as the state variable, derive a relation that connects $k_{\\mathrm{LDF}}$ to an effective intraparticle diffusivity $D_{\\mathrm{eff}}$ (in $\\mathrm{m}^2\\,\\mathrm{s}^{-1}$) and $R_p$ under the assumption that film mass transfer is not rate-limiting and that the linear driving force model approximates the volume-averaged response of the Fickian diffusion problem in a sphere. Your derivation must adhere to first principles: start from Fick’s second law in spherical coordinates and the appropriate boundary and initial conditions; do not invoke any high-level result as a shortcut.\n\nFitting task:\n- You will be given three test cases that differ by particle radius $R_p$ and a known effective diffusivity $D_{\\mathrm{eff,true}}$ that is used only to generate synthetic noisy breakthrough data. For each test case, the “observed” data are constructed as follows:\n  1. Compute the “true” linear driving force coefficient $k_{\\mathrm{true}}$ implied by your derived relation between $k_{\\mathrm{LDF}}$, $D_{\\mathrm{eff}}$, and $R_p$, evaluated at $D_{\\mathrm{eff,true}}$.\n  2. Integrate the coupled system for $C(t)$ and $q(t)$ for a step change from $C(0)=0$ (pre-purged bed) and $q(0)=0$ (no initial loading) at time $t=0$ to $C_{\\mathrm{in}}$ thereafter.\n  3. Define the clean breakthrough response $u_{\\mathrm{clean}}(t)=C(t)/C_{\\mathrm{in}}$.\n  4. Add independent, identically distributed Gaussian perturbations with zero mean and standard deviation $\\sigma=0.005$ to $u_{\\mathrm{clean}}(t)$, and clip the result to the interval $[0,1]$ to produce $u_{\\mathrm{obs}}(t)$.\n- Your program must then estimate $k_{\\mathrm{LDF}}$ by least squares fitting of the model-predicted $u(t)$ to the synthetic “observed” data $u_{\\mathrm{obs}}(t)$, using the given $F$, $V_g$, $m_s$, $K$, $C_{\\mathrm{in}}$, and the specified time grid.\n\nConstants common to all test cases:\n- Volumetric flow rate $F = 1.0\\times 10^{-6}\\ \\mathrm{m}^3\\,\\mathrm{s}^{-1}$.\n- Gas volume $V_g = 1.0\\times 10^{-6}\\ \\mathrm{m}^3$.\n- Adsorbent mass $m_s = 5.0\\times 10^{-4}\\ \\mathrm{kg}$.\n- Henry’s constant $K = 1.0\\times 10^{-1}\\ \\mathrm{m}^3\\,\\mathrm{kg}^{-1}$.\n- Inlet concentration $C_{\\mathrm{in}} = 4.03\\times 10^{1}\\ \\mathrm{mol}\\,\\mathrm{m}^{-3}$.\n- Time grid: uniformly spaced from $t=0$ to $t=600\\ \\mathrm{s}$ with step $\\Delta t = 2\\ \\mathrm{s}$ (that is, $301$ points).\n- Noise standard deviation for the observed breakthrough $u_{\\mathrm{obs}}(t)$: $\\sigma = 5.0\\times 10^{-3}$.\n- Use a fixed pseudorandom seed for noise generation to ensure reproducibility: seed $= 12345$.\n\nTest suite (three cases):\n- Case A: particle radius $R_p = 3.0\\times 10^{-4}\\ \\mathrm{m}$; effective diffusivity used for data generation $D_{\\mathrm{eff,true}} = 1.2\\times 10^{-10}\\ \\mathrm{m}^2\\,\\mathrm{s}^{-1}$.\n- Case B: particle radius $R_p = 5.0\\times 10^{-4}\\ \\mathrm{m}$; effective diffusivity used for data generation $D_{\\mathrm{eff,true}} = 2.0\\times 10^{-10}\\ \\mathrm{m}^2\\,\\mathrm{s}^{-1}$.\n- Case C: particle radius $R_p = 8.0\\times 10^{-4}\\ \\mathrm{m}$; effective diffusivity used for data generation $D_{\\mathrm{eff,true}} = 8.0\\times 10^{-11}\\ \\mathrm{m}^2\\,\\mathrm{s}^{-1}$.\n\nWhat your program must do:\n- For each case, generate $u_{\\mathrm{obs}}(t)$ as described, then estimate $k_{\\mathrm{LDF}}$ by minimizing the sum of squared residuals between the model-predicted $u(t)$ and $u_{\\mathrm{obs}}(t)$ over the given time grid.\n- Using your derived relation, convert the fitted $k_{\\mathrm{LDF}}$ to an inferred effective diffusivity $D_{\\mathrm{eff,fit}}$ using the given $R_p$ for that case.\n- Report, for each case, the fitted $k_{\\mathrm{LDF}}$ in $\\mathrm{s}^{-1}$ and the inferred $D_{\\mathrm{eff,fit}}$ in $\\mathrm{m}^2\\,\\mathrm{s}^{-1}$.\n\nAnswer format and units:\n- Express $k_{\\mathrm{LDF}}$ in $\\mathrm{s}^{-1}$ and $D_{\\mathrm{eff,fit}}$ in $\\mathrm{m}^2\\,\\mathrm{s}^{-1}$.\n- Your program should produce a single line of output containing a list of lists, one inner list per test case, in the order [Case A, Case B, Case C], where each inner list has the two floating-point numbers $[k_{\\mathrm{LDF}}, D_{\\mathrm{eff,fit}}]$.\n- Example formatting: $[[k_A, D_A],[k_B, D_B],[k_C, D_C]]$ with decimal or scientific notation. No extra text.\n\nAngle units are not applicable. Percentages are not applicable; do not use the percent sign.\n\nDesign considerations:\n- The parameter estimation must be robust to the small additive noise.\n- Be explicit and consistent with units.\n- The derivation you use to relate $k_{\\mathrm{LDF}}$ and $D_{\\mathrm{eff}}$ must come from first principles of diffusion in a sphere and the definition of the linear driving force approximation; do not assume or quote the final proportionality constant without justification.", "solution": "The problem is subjected to validation and is found to be scientifically grounded, well-posed, and complete. A solution is therefore developed. The solution consists of two main parts: first, a derivation of the relationship between the linear driving force (LDF) coefficient $k_{\\mathrm{LDF}}$ and the effective intraparticle diffusivity $D_{\\mathrm{eff}}$; second, a numerical implementation to fit synthetic experimental data and determine these parameters.\n\n**Part 1: Derivation of the Relation between $k_{\\mathrm{LDF}}$ and $D_{\\mathrm{eff}}$**\n\nThe problem requires a derivation from first principles connecting the phenomenological LDF model coefficient $k_{\\mathrm{LDF}}$ to the physical parameters of a Fickian diffusion process in a spherical adsorbent particle of radius $R_p$.\n\n1.  **Fickian Diffusion Model:** Transport of an adsorbing species within a spherical porous particle, assuming radial symmetry and constant effective diffusivity $D_{\\mathrm{eff}}$, is described by Fick's second law. In terms of the local adsorbed phase concentration $q_p(r, t)$ at radial position $r$ and time $t$, the law is:\n    $$ \\frac{\\partial q_p}{\\partial t} = \\frac{1}{r^2} \\frac{\\partial}{\\partial r} \\left( r^2 D_{\\mathrm{eff}} \\frac{\\partial q_p}{\\partial r} \\right) $$\n    The initial condition is a particle free of adsorbate, $q_p(r, 0) = 0$. The boundary conditions are symmetry at the center, $\\left(\\frac{\\partial q_p}{\\partial r}\\right)_{r=0} = 0$, and equilibrium at the external surface, $q_p(R_p, t) = q^*(t)$, where $q^*(t)$ is the adsorbed concentration in equilibrium with the bulk gas phase.\n\n2.  **Volume-Averaged Concentration:** The LDF model is formulated in terms of the volume-averaged adsorbed concentration, $q(t)$, defined as:\n    $$ q(t) = \\frac{1}{V_p} \\int_{V_p} q_p(r, t) dV = \\frac{3}{R_p^3} \\int_0^{R_p} q_p(r, t) 4\\pi r^2 \\frac{dr}{4\\pi} = \\frac{3}{R_p^3} \\int_0^{R_p} q_p(r, t) r^2 dr $$\n\n3.  **Rate of Uptake:** Differentiating the expression for $q(t)$ with respect to time gives the overall rate of uptake:\n    $$ \\frac{dq}{dt} = \\frac{3}{R_p^3} \\int_0^{R_p} \\frac{\\partial q_p}{\\partial t} r^2 dr $$\n    Substituting Fick's law into this integral:\n    $$ \\frac{dq}{dt} = \\frac{3}{R_p^3} \\int_0^{R_p} \\left[ D_{\\mathrm{eff}} \\frac{1}{r^2} \\frac{\\partial}{\\partial r} \\left( r^2 \\frac{\\partial q_p}{\\partial r} \\right) \\right] r^2 dr = \\frac{3 D_{\\mathrm{eff}}}{R_p^3} \\int_0^{R_p} \\frac{\\partial}{\\partial r} \\left( r^2 \\frac{\\partial q_p}{\\partial r} \\right) dr $$\n    Evaluating the integral gives an exact expression for the rate of uptake based on the surface flux:\n    $$ \\frac{dq}{dt} = \\frac{3 D_{\\mathrm{eff}}}{R_p^3} \\left[ r^2 \\frac{\\partial q_p}{\\partial r} \\right]_0^{R_p} = \\frac{3 D_{\\mathrm{eff}}}{R_p} \\left( \\frac{\\partial q_p}{\\partial r} \\right)_{r=R_p} $$\n\n4.  **Linear Driving Force (LDF) Model:** The LDF model provides a simplified, phenomenological description of the uptake rate:\n    $$ \\frac{dq}{dt} = k_{\\mathrm{LDF}} (q^*(t) - q(t)) $$\n    This equation approximates the complex intraparticle dynamics by assuming the uptake rate is linearly proportional to the difference between the surface concentration $q^*$ and the average concentration $q$.\n\n5.  **Equating Models via Moment Analysis:** To find the relationship between $k_{\\mathrm{LDF}}$ and $D_{\\mathrm{eff}}$, we equate the two models. A robust method is to match the first temporal moments of their respective responses to a step change in surface concentration from $q_p(R_p, t0) = 0$ to $q_p(R_p, t\\ge0) = q^*_{\\mathrm{const}}$. The first moment, or mean time of uptake ($\\tau$), characterizes the overall speed of the process.\n\n    For the LDF model, the solution to a step change is $q(t) = q^*_{\\mathrm{const}}(1 - e^{-k_{\\mathrm{LDF}} t})$. The normalized uptake rate is $E(t) = \\frac{1}{q^*_{\\mathrm{const}}} \\frac{dq}{dt} = k_{\\mathrm{LDF}} e^{-k_{\\mathrm{LDF}} t}$. The mean uptake time is:\n    $$ \\tau_{\\mathrm{LDF}} = \\int_0^\\infty t E(t) dt = \\int_0^\\infty t k_{\\mathrm{LDF}} e^{-k_{\\mathrm{LDF}} t} dt = \\frac{1}{k_{\\mathrm{LDF}}} $$\n\n    For the Fickian diffusion model in a sphere, the mean uptake time is a standard result, which can be derived using Laplace transforms. The result is:\n    $$ \\tau_{\\mathrm{Fick}} = \\frac{R_p^2}{15 D_{\\mathrm{eff}}} $$\n\n6.  **Final Relation:** By equating the mean uptake times, $\\tau_{\\mathrm{LDF}} = \\tau_{\\mathrm{Fick}}$, we establish a direct correspondence between the LDF coefficient and the parameters of the diffusion model:\n    $$ \\frac{1}{k_{\\mathrm{LDF}}} = \\frac{R_p^2}{15 D_{\\mathrm{eff}}} $$\n    Rearranging this gives the final expression used for our analysis:\n    $$ k_{\\mathrm{LDF}} = \\frac{15 D_{\\mathrm{eff}}}{R_p^2} $$\nThis relationship allows us to interpret the fitted LDF coefficient $k_{\\mathrm{LDF}}$ in terms of a more fundamental effective diffusivity $D_{\\mathrm{eff}}$.\n\n**Part 2: Numerical Procedure**\n\nThe program will execute the following steps for each test case:\n\n1.  **Synthetic Data Generation:**\n    a. Given $D_{\\mathrm{eff,true}}$ and $R_p$ for the case, calculate the \"true\" LDF coefficient $k_{\\mathrm{true}} = 15 D_{\\mathrm{eff,true}} / R_p^2$.\n    b. The coupled system of ordinary differential equations (ODEs) for the well-mixed bed is:\n       $$ \\frac{dC}{dt} = \\frac{F}{V_g}(C_{\\mathrm{in}} - C) - \\frac{m_s}{V_g} k_{\\mathrm{true}}(K C - q) $$\n       $$ \\frac{dq}{dt} = k_{\\mathrm{true}}(K C - q) $$\n    c. This system is solved numerically using `scipy.integrate.solve_ivp` over the specified time grid, with initial conditions $C(0)=0$ and $q(0)=0$. Given the potential for stiffness, the 'BDF' method is chosen for robustness.\n    d. The clean breakthrough curve $u_{\\mathrm{clean}}(t) = C(t) / C_{\\mathrm{in}}$ is computed from the solution.\n    e. Noise is added: independent Gaussian noise with mean $0$ and standard deviation $\\sigma=0.005$ is added to $u_{\\mathrm{clean}}(t)$. The noisy signal is clipped to the physically meaningful range $[0, 1]$ to produce the \"observed\" data $u_{\\mathrm{obs}}(t)$. A fixed random seed ensures reproducibility.\n\n2.  **Parameter Estimation:**\n    a. An objective function is defined to calculate the sum of squared residuals (SSR) between model predictions and the synthetic data:\n       $$ \\mathrm{SSR}(k_{\\mathrm{LDF}}) = \\sum_{i} \\left( u_{\\mathrm{model}}(t_i; k_{\\mathrm{LDF}}) - u_{\\mathrm{obs}}(t_i) \\right)^2 $$\n       where $u_{\\mathrm{model}}(t_i; k_{\\mathrm{LDF}})$ is the model-predicted breakthrough ratio obtained by solving the ODE system with a trial value of $k_{\\mathrm{LDF}}$.\n    b. The `scipy.optimize.minimize` function is employed to find the value of $k_{\\mathrm{LDF}}$ that minimizes the SSR. The 'L-BFGS-B' algorithm is used to constrain the search for $k_{\\mathrm{LDF}}$ to positive values. An initial guess of $k_{\\mathrm{LDF}}=0.01\\ \\mathrm{s}^{-1}$ is used.\n\n3.  **Result Calculation:**\n    a. The optimized parameter is the fitted LDF coefficient, $k_{\\mathrm{LDF,fit}}$.\n    b. This value is then used to calculate the inferred effective diffusivity using the inverse of the derived relation:\n       $$ D_{\\mathrm{eff,fit}} = \\frac{k_{\\mathrm{LDF,fit}} R_p^2}{15} $$\n\n4.  **Output:** For each case, the pair $[k_{\\mathrm{LDF,fit}}, D_{\\mathrm{eff,fit}}]$ is stored. The final output is a list containing these pairs for all test cases, formatted as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\nfrom scipy.optimize import minimize\n\ndef solve():\n    \"\"\"\n    Solves for the LDF kinetic parameter and effective diffusivity from synthetic\n    breakthrough data.\n    \"\"\"\n\n    # Common constants\n    F = 1.0e-6    # Volumetric flow rate, m^3/s\n    Vg = 1.0e-6   # Gas volume, m^3\n    ms = 5.0e-4   # Adsorbent mass, kg\n    K = 1.0e-1    # Henry's constant, m^3/kg\n    C_in = 4.03e1 # Inlet concentration, mol/m^3\n    SIGMA = 5.0e-3 # Noise standard deviation for u(t)\n    SEED = 12345  # Pseudorandom seed for reproducibility\n\n    # Time grid\n    t_span = [0, 600]\n    dt = 2.0\n    t_eval = np.arange(t_span[0], t_span[1] + dt, dt)\n\n    # Test suite\n    test_cases = [\n        # Case A\n        {'Rp': 3.0e-4, 'Deff_true': 1.2e-10},\n        # Case B\n        {'Rp': 5.0e-4, 'Deff_true': 2.0e-10},\n        # Case C\n        {'Rp': 8.0e-4, 'Deff_true': 8.0e-11},\n    ]\n\n    # Initialize random number generator\n    rng = np.random.default_rng(SEED)\n\n    def ldf_relation_k(D_eff, R_p):\n        \"\"\"Calculates k_LDF from D_eff and R_p.\"\"\"\n        return 15.0 * D_eff / (R_p**2)\n\n    def ldf_relation_d(k_LDF, R_p):\n        \"\"\"Calculates D_eff from k_LDF and R_p.\"\"\"\n        return k_LDF * R_p**2 / 15.0\n\n    def breakthrough_model(t, y, k_ldf):\n        \"\"\"\n        Coupled ODE system for the adsorption bed.\n        y = [C, q]\n        \"\"\"\n        C, q = y\n        dCdt = (F / Vg) * (C_in - C) - (ms / Vg) * k_ldf * (K * C - q)\n        dqdt = k_ldf * (K * C - q)\n        return [dCdt, dqdt]\n\n    def solve_breakthrough(k_ldf):\n        \"\"\"\n        Solves the ODE system for a given k_LDF and returns the breakthrough curve u(t).\n        \"\"\"\n        y0 = [0.0, 0.0]  # Initial conditions C(0)=0, q(0)=0\n        sol = solve_ivp(\n            fun=breakthrough_model,\n            t_span=t_span,\n            y0=y0,\n            method='BDF',\n            t_eval=t_eval,\n            args=(k_ldf,)\n        )\n        C_t = sol.y[0]\n        u_t = C_t / C_in\n        return u_t\n\n    def objective_function(k_ldf_guess, u_obs):\n        \"\"\"\n        Calculates the sum of squared residuals for the optimizer.\n        \"\"\"\n        # k_ldf_guess is an array, so extract the float\n        k = k_ldf_guess[0]\n        u_model = solve_breakthrough(k)\n        ssr = np.sum((u_model - u_obs)**2)\n        return ssr\n\n    results = []\n\n    for case in test_cases:\n        Rp = case['Rp']\n        Deff_true = case['Deff_true']\n\n        # 1. Generate synthetic data\n        k_true = ldf_relation_k(Deff_true, Rp)\n        u_clean = solve_breakthrough(k_true)\n        noise = rng.normal(0, SIGMA, len(u_clean))\n        u_obs = np.clip(u_clean + noise, 0.0, 1.0)\n\n        # 2. Fit k_LDF to the synthetic data\n        initial_guess = [0.01]\n        bounds = [(1e-6, None)] # k_LDF must be positive\n        \n        opt_result = minimize(\n            fun=objective_function,\n            x0=initial_guess,\n            args=(u_obs,),\n            method='L-BFGS-B',\n            bounds=bounds\n        )\n\n        k_ldf_fit = opt_result.x[0]\n\n        # 3. Infer D_eff from the fitted k_LDF\n        Deff_fit = ldf_relation_d(k_ldf_fit, Rp)\n\n        results.append([k_ldf_fit, Deff_fit])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2514702"}]}