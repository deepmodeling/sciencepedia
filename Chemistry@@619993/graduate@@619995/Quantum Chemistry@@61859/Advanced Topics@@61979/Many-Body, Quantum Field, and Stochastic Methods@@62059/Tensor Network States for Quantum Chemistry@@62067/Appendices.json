{"hands_on_practices": [{"introduction": "A deep understanding of any numerical algorithm begins with analyzing its computational cost. In this practice, you will dissect the core operation of the Density Matrix Renormalization Group (DMRG) algorithm: the application of the effective Hamiltonian to a two-site wavefunction tensor. By meticulously tracking the tensor contractions involved, you will derive the leading-order computational scaling of a two-site DMRG sweep, a crucial skill for estimating resource requirements and understanding the performance bottlenecks of modern tensor network methods [@problem_id:2929047].", "problem": "In quantum chemistry, the Density Matrix Renormalization Group (DMRG) algorithm represents a fermionic wavefunction in a Matrix Product State (MPS) form and the electronic Hamiltonian in a Matrix Product Operator (MPO) form. Consider a quantum chemistry Hamiltonian in second quantization on a chain of $L$ spatial orbitals, mapped to an MPS with uniform bond dimension $M$ and local physical dimension $d=4$ (empty, spin-up, spin-down, doubly occupied). Assume a two-site DMRG update, where the two-site wavefunction tensor is $A_{l s_1 s_2 r}$ with $l,r \\in \\{1,\\dots,M\\}$ and $s_1,s_2 \\in \\{1,\\dots,d\\}$. The Hamiltonian MPO has uniform bond dimension $w$ and site tensors $W^{(1)}_{a a_1 s_1' s_1}$ and $W^{(2)}_{a_1 b s_2' s_2}$ for the two sites, with $a,a_1,b \\in \\{1,\\dots,w\\}$ and physical indices $s_i,s_i' \\in \\{1,\\dots,d\\}$. Let the left and right environment tensors be $L_{l l' a}$ and $R_{b r r'}$, respectively.\n\nDefine the action of the effective Hamiltonian on the two-site tensor by contracting $L$, $W^{(1)}$, $W^{(2)}$, and $R$ with $A$ to obtain $(H \\cdot A)_{l' s_1' s_2' r'}$. Adopt the following contraction sequence to bound the arithmetic cost in terms of scalar multiplications:\n- First contract $A_{l s_1 s_2 r}$ with $R_{b r r'}$ over $r$ to form an intermediate with indices $(l,s_1,s_2,b,r')$.\n- Next contract that intermediate with $W^{(2)}_{a_1 b s_2' s_2}$ over $s_2$ and $b$ to form $(l,s_1,a_1,s_2',r')$.\n- Then contract with $W^{(1)}_{a a_1 s_1' s_1}$ over $s_1$ and $a_1$ to form $(l,a,s_1',s_2',r')$.\n- Finally contract with $L_{l l' a}$ over $l$ and $a$ to produce $(l',s_1',s_2',r')$.\n\nAssume that at each two-site position the local linear problem is solved by $n_{\\mathrm{K}}$ applications of the effective Hamiltonian using a Krylov method, and that a full two-site sweep visits all adjacent pairs once from left to right, so there are $L-1$ two-site positions per sweep. Count only scalar multiplications when tallying cost. Ignore costs not proportional to $M$, $w$, $d$, or $L$ to leading order, but keep exact coefficients implied by the above contraction sequence.\n\nTasks:\n- Starting from the definitions of MPS, MPO, and tensor contraction dimensions, derive the exact leading-order number of scalar multiplications required to apply the effective Hamiltonian once to the two-site tensor at a fixed position, under the specified contraction sequence, as a function of $M$, $w$, and $d$.\n- Use this to derive a closed-form expression for the total number of scalar multiplications in one complete two-site sweep with $n_{\\mathrm{K}}$ Hamiltonian applications per position, and then set $d=4$.\n- Additionally, estimate the memory (in number of real scalars) required to store, simultaneously for all sites, the MPS core tensors, the MPO tensors, and both the set of left and the set of right environment tensors, in terms of $L$, $M$, $w$, and $d$. Provide this estimate as part of your derivation but do not include it in the final answer.\n\nProvide as your final answer a single closed-form analytic expression for the total number of scalar multiplications per complete two-site sweep in terms of $L$, $M$, $w$, and $n_{\\mathrm{K}}$ with $d=4$.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It describes a standard computational procedure within the Density Matrix Renormalization Group (DMRG) algorithm. All necessary parameters and specifications are provided to allow for a unique, verifiable solution. We shall therefore proceed with the derivation.\n\nThe core of the problem is to calculate the arithmetic cost, specifically the number of scalar multiplications, required to apply the effective Hamiltonian to a two-site wavefunction tensor. This calculation is a critical step in a DMRG sweep, as this operation is performed many times within a Krylov-subspace-based eigensolver. We will follow the prescribed contraction sequence meticulously. The dimensions of the indices are given as $|l|=|r|=|l'|=|r'|=M$, $|s_1|=|s_2|=|s_1'|=|s_2'|=d$, and $|a|=|a_1|=|b|=w$.\n\nThe total calculation is decomposed into four stages of tensor contraction. We will analyze the cost of each stage.\n\nStage 1: Contraction of the two-site wavefunction tensor with the right environment.\nThe operation is the formation of an intermediate tensor $I^{(1)}$:\n$$I^{(1)}_{l s_1 s_2 b r'} = \\sum_{r=1}^{M} A_{l s_1 s_2 r} R_{b r r'}$$\nThe input tensors are $A$ of size $M \\times d \\times d \\times M$ and $R$ of size $w \\times M \\times M$. The resulting tensor $I^{(1)}$ has indices $(l, s_1, s_2, b, r')$ and its size is $M \\times d \\times d \\times w \\times M$. To compute each element of $I^{(1)}$, a sum over the index $r$ is performed, which involves $M$ multiplications. The total number of elements in $I^{(1)}$ is $M \\cdot d \\cdot d \\cdot w \\cdot M = M^2 d^2 w$.\nTherefore, the number of scalar multiplications for this stage is:\n$$C_1 = (M^2 d^2 w) \\times M = M^3 d^2 w$$\n\nStage 2: Contraction of the first intermediate with the second MPO tensor.\nThe next intermediate, $I^{(2)}$, is formed by contracting $I^{(1)}$ with the MPO tensor $W^{(2)}$:\n$$I^{(2)}_{l s_1 a_1 s_2' r'} = \\sum_{s_2=1}^{d} \\sum_{b=1}^{w} I^{(1)}_{l s_1 s_2 b r'} W^{(2)}_{a_1 b s_2' s_2}$$\nThe input tensors are $I^{(1)}$ of size $M \\times d \\times d \\times w \\times M$ and $W^{(2)}$ of size $w \\times w \\times d \\times d$. The contraction is over indices $s_2$ (size $d$) and $b$ (size $w$). The resulting tensor $I^{(2)}$ has indices $(l, s_1, a_1, s_2', r')$ and its size is $M \\times d \\times w \\times d \\times M$. The number of elements in $I^{(2)}$ is $M \\cdot d \\cdot w \\cdot d \\cdot M = M^2 d^2 w$. For each such element, we perform a sum over $d \\times w$ products.\nThe cost of this stage is:\n$$C_2 = (M^2 d^2 w) \\times (d \\cdot w) = M^2 d^3 w^2$$\n\nStage 3: Contraction with the first MPO tensor.\nThe third intermediate, $I^{(3)}$, is formed by contracting $I^{(2)}$ with the MPO tensor $W^{(1)}$:\n$$I^{(3)}_{l a s_1' s_2' r'} = \\sum_{s_1=1}^{d} \\sum_{a_1=1}^{w} I^{(2)}_{l s_1 a_1 s_2' r'} W^{(1)}_{a a_1 s_1' s_1}$$\nThe inputs are $I^{(2)}$ of size $M \\times d \\times w \\times d \\times M$ and $W^{(1)}$ of size $w \\times w \\times d \\times d$. The contraction is over indices $s_1$ (size $d$) and $a_1$ (size $w$). The result $I^{(3)}$ has indices $(l, a, s_1', s_2', r')$ and its size is $M \\times w \\times d \\times d \\times M$. The number of elements is $M \\cdot w \\cdot d \\cdot d \\cdot M = M^2 d^2 w$. For each element, a sum over $d \\times w$ products is computed.\nThe cost of this stage is identical in form to the previous one:\n$$C_3 = (M^2 d^2 w) \\times (d \\cdot w) = M^2 d^3 w^2$$\n\nStage 4: Final contraction with the left environment.\nThe final result, the two-site tensor $(H \\cdot A)$, is obtained by contracting $I^{(3)}$ with the left environment tensor $L$:\n$$(H \\cdot A)_{l' s_1' s_2' r'} = \\sum_{l=1}^{M} \\sum_{a=1}^{w} I^{(3)}_{l a s_1' s_2' r'} L_{l l' a}$$\nThe inputs are $I^{(3)}$ of size $M \\times w \\times d \\times d \\times M$ and $L$ of size $M \\times M \\times w$. The contraction is over indices $l$ (size $M$) and $a$ (size $w$). The resulting tensor $(H \\cdot A)$ has indices $(l', s_1', s_2', r')$ and its size is $M \\times d \\times d \\times M$. The number of elements is $M \\cdot d \\cdot d \\cdot M = M^2 d^2$. For each element, a sum over $M \\times w$ products is performed.\nThe cost of this final stage is:\n$$C_4 = (M^2 d^2) \\times (M \\cdot w) = M^3 d^2 w$$\n\nThe total number of scalar multiplications for a single application of the effective Hamiltonian, $C_{\\text{app}}$, is the sum of the costs of these four stages:\n$$C_{\\text{app}} = C_1 + C_2 + C_3 + C_4 = M^3 d^2 w + M^2 d^3 w^2 + M^2 d^3 w^2 + M^3 d^2 w$$\n$$C_{\\text{app}} = 2 M^3 d^2 w + 2 M^2 d^3 w^2 = 2 M^2 d^2 w (M + dw)$$\nThis is the required cost for one position.\n\nNext, we calculate the total cost for a full two-site sweep. A sweep consists of $L-1$ two-site updates. At each position, the effective Hamiltonian is applied $n_{\\mathrm{K}}$ times within the Krylov solver.\nThe total cost for one sweep, $C_{\\text{sweep}}$, is:\n$$C_{\\text{sweep}} = (L-1) \\times n_{\\mathrm{K}} \\times C_{\\text{app}} = (L-1) n_{\\mathrm{K}} (2 M^3 d^2 w + 2 M^2 d^3 w^2)$$\nThe problem specifies a local physical dimension of $d=4$, corresponding to a spatial orbital in a fermionic system. Substituting $d=4$ into the expression:\n$$C_{\\text{sweep}} = (L-1) n_{\\mathrm{K}} (2 M^3 (4^2) w + 2 M^2 (4^3) w^2)$$\n$$C_{\\text{sweep}} = (L-1) n_{\\mathrm{K}} (2 M^3 (16) w + 2 M^2 (64) w^2)$$\n$$C_{\\text{sweep}} = (L-1) n_{\\mathrm{K}} (32 M^3 w + 128 M^2 w^2)$$\nFactoring out common terms yields the final expression:\n$$C_{\\text{sweep}} = 32 (L-1) n_{\\mathrm{K}} M^2 w (M + 4w)$$\n\nAdditionally, we are asked to estimate the memory required to store the MPS, MPO, and environment tensors. Assuming uniform bond dimensions $M$ and $w$, and that we store all tensors for all $L$ sites simultaneously to avoid recomputation during a sweep:\n1.  **MPS Tensors**: There are $L$ single-site tensors, each of size $M \\times d \\times M$. Total memory for MPS: $S_{\\text{MPS}} = L d M^2$.\n2.  **MPO Tensors**: There are $L$ MPO tensors, each of size $w \\times d \\times d \\times w$. Total memory for MPO: $S_{\\text{MPO}} = L d^2 w^2$.\n3.  **Environment Tensors**: There are $L-1$ non-trivial left environments and $L-1$ non-trivial right environments. Each left environment tensor $L_i$ has size $M \\times M \\times w$, and each right environment $R_i$ has size $w \\times M \\times M$. The total memory for storing all of them is approximately $S_{\\text{Env}} \\approx 2 L w M^2$.\nThe total memory requirement, $S_{\\text{total}}$, is the sum of these contributions:\n$$S_{\\text{total}} = S_{\\text{MPS}} + S_{\\text{MPO}} + S_{\\text{Env}} = L d M^2 + L d^2 w^2 + 2 L w M^2$$\n$$S_{\\text{total}} = L \\left( (d+2w)M^2 + d^2w^2 \\right)$$\nSetting $d=4$:\n$$S_{\\text{total}} = L \\left( (4+2w)M^2 + 16w^2 \\right)$$\nThis estimate provides context for the resource requirements of the algorithm but is not part of the final answer. The final answer is solely the computational cost per sweep.", "answer": "$$\n\\boxed{32(L-1)n_{\\mathrm{K}}M^2w(M+4w)}\n$$", "id": "2929047"}, {"introduction": "The efficiency of tensor network methods for quantum chemistry hinges on constructing a compact Matrix Product Operator (MPO) for the electronic Hamiltonian. This exercise explores a powerful strategy for achieving this: exploiting low-rank factorizations of the two-electron repulsion integrals. You will derive the minimal possible MPO bond dimension for a given Hamiltonian by connecting the rank of the integral factorization to the operator Schmidt rank across a bipartition, illustrating a key principle in modern MPO construction [@problem_id:2929033].", "problem": "Consider a chain of $N$ spin-orbitals with fermionic creation and annihilation operators $\\{\\hat{a}_{p}^{\\dagger},\\hat{a}_{p}\\}_{p=1}^{N}$ satisfying canonical anticommutation relations, and number operators $\\hat{n}_{p}=\\hat{a}_{p}^{\\dagger}\\hat{a}_{p}$. The second-quantized electronic Hamiltonian is restricted to one-body terms and density-density two-body terms,\n$$\n\\hat{H}=\\sum_{p=1}^{N}\\epsilon_{p}\\,\\hat{n}_{p}+\\frac{1}{2}\\sum_{\\substack{p,q=1\\\\p\\neq q}}^{N}V_{pq}\\,\\hat{n}_{p}\\hat{n}_{q},\n$$\nwhere $V_{pq}=V_{qp}$ is real. Suppose $V_{pq}$ is provided through an exact integral factorization (e.g., density fitting or Cholesky decomposition) of rank $R$, meaning there exist real vectors $\\{\\boldsymbol{x}^{(L)}\\}_{L=1}^{R}$ with components $x_{p}^{(L)}$ such that\n$$\nV_{pq}=\\sum_{L=1}^{R}x_{p}^{(L)}x_{q}^{(L)}\\quad\\text{for all }p\\neq q.\n$$\nYou will represent $\\hat{H}$ as a Matrix Product Operator (MPO) along the orbital ordering $1,2,\\dots,N$. Consider the bipartition (bond) between sites $k$ and $k+1$ for some $k$ satisfying $1\\leq k\\leq N-1$. Assume that $R\\leq \\min\\{k,N-k\\}$ and that the restricted families $\\{(x_{p}^{(L)})_{p=1}^{k}\\}_{L=1}^{R}$ and $\\{(x_{q}^{(L)})_{q=k+1}^{N}\\}_{L=1}^{R}$ are each linearly independent in $\\mathbb{R}^{k}$ and $\\mathbb{R}^{N-k}$, respectively. Work in the fermion-number-conserving sector and note that number operators commute, so no parity strings are required for the density terms.\n\nStarting only from the definitions of the Hamiltonian, the factorization, the bipartition, and the notion that the minimal internal bond dimension of an MPO across a cut equals the operator Schmidt rank of the operator across that cut, derive the minimal achievable MPO bond dimension $D_{\\min}(k)$ across the bond between sites $k$ and $k+1$ when the factorization is exploited optimally. Then, evaluate your expression for the central cut with $N=20$, $k=10$, and $R=7$. Your final answer must be a single real number. Do not round.", "solution": "The problem statement is well-posed and scientifically sound, permitting a rigorous derivation. The objective is to determine the minimal bond dimension of the Matrix Product Operator (MPO) representation for the given Hamiltonian $\\hat{H}$ across a specific bipartition. This minimal bond dimension, $D_{\\min}(k)$, is equivalent to the operator Schmidt rank of $\\hat{H}$ across the cut between sites $k$ and $k+1$.\n\nThe Hamiltonian is given by\n$$ \\hat{H}=\\sum_{p=1}^{N}\\epsilon_{p}\\,\\hat{n}_{p}+\\frac{1}{2}\\sum_{\\substack{p,q=1\\\\p\\neq q}}^{N}V_{pq}\\,\\hat{n}_{p}\\hat{n}_{q} $$\nWe partition the system into two subsystems: $A = \\{1, 2, \\dots, k\\}$ and $B = \\{k+1, \\dots, N\\}$. The Hamiltonian can be decomposed into terms acting purely within $A$, purely within $B$, and terms coupling $A$ and $B$:\n$$ \\hat{H} = \\hat{H}_A + \\hat{H}_B + \\hat{H}_{AB} $$\nHere, $\\hat{H}_A$ and $\\hat{H}_B$ are the restrictions of $\\hat{H}$ to the sites within subsystems $A$ and $B$, respectively. The coupling term $\\hat{H}_{AB}$ is given by\n$$ \\hat{H}_{AB} = \\sum_{p=1}^{k} \\sum_{q=k+1}^{N} V_{pq} \\hat{n}_p \\hat{n}_q $$\nWe are given the rank-$R$ factorization of the interaction tensor $V_{pq} = \\sum_{L=1}^{R}x_{p}^{(L)}x_{q}^{(L)}$ for $p \\neq q$. Substituting this into the coupling term yields:\n$$ \\hat{H}_{AB} = \\sum_{p=1}^{k} \\sum_{q=k+1}^{N} \\left(\\sum_{L=1}^{R}x_{p}^{(L)}x_{q}^{(L)}\\right) \\hat{n}_p \\hat{n}_q = \\sum_{L=1}^{R} \\left(\\sum_{p=1}^{k} x_p^{(L)} \\hat{n}_p\\right) \\left(\\sum_{q=k+1}^{N} x_q^{(L)} \\hat{n}_q\\right) $$\nLet us define the operators acting on subsystems $A$ and $B$:\n$$ \\hat{O}_A^{(L)} = \\sum_{p=1}^{k} x_p^{(L)} \\hat{n}_p \\quad \\text{for } L=1, \\dots, R $$\n$$ \\hat{O}_B^{(L)} = \\sum_{q=k+1}^{N} x_q^{(L)} \\hat{n}_q \\quad \\text{for } L=1, \\dots, R $$\nThe total Hamiltonian can be written in the operator Schmidt decomposition form across the bipartition $(A,B)$:\n$$ \\hat{H} = \\hat{H}_A \\otimes \\hat{I}_B + \\hat{I}_A \\otimes \\hat{H}_B + \\sum_{L=1}^{R} \\hat{O}_A^{(L)} \\otimes \\hat{O}_B^{(L)} $$\nwhere $\\hat{I}_A$ and $\\hat{I}_B$ are the identity operators on the respective subsystems.\nThe minimal MPO bond dimension $D_{\\min}(k)$ is the number of linearly independent operators on one side of the cut, for instance, the left side. The set of left operators is $\\mathcal{S}_A = \\{\\hat{H}_A, \\hat{I}_A, \\hat{O}_A^{(1)}, \\dots, \\hat{O}_A^{(R)}\\}$. The dimension $D_{\\min}(k)$ is the dimension of the vector space spanned by $\\mathcal{S}_A$.\n\nTo find this dimension, we test for linear independence by setting an arbitrary linear combination to the zero operator:\n$$ c_H \\hat{H}_A + c_I \\hat{I}_A + \\sum_{L=1}^{R} c_L \\hat{O}_A^{(L)} = \\hat{0} $$\nAll operators in $\\mathcal{S}_A$ are diagonal in the occupation number basis $|s_1, \\dots, s_k\\rangle$, where $s_p \\in \\{0,1\\}$. They are polynomials in the number operators $\\{\\hat{n}_p\\}_{p=1}^k$. We can analyze their linear independence by considering their polynomial degree in these operators.\n- $\\hat{I}_A$ is of degree $0$.\n- $\\hat{O}_A^{(L)}$ are of degree $1$.\n- $\\hat{H}_A = \\sum_{p=1}^{k}\\epsilon_{p}\\,\\hat{n}_{p}+\\frac{1}{2}\\sum_{\\substack{p,q=1\\\\p\\neq q}}^{k}V_{pq}\\,\\hat{n}_{p}\\hat{n}_{q}$ has terms of degree $1$ and degree $2$. The degree-$2$ part is $\\hat{H}_{A,2} = \\frac{1}{2}\\sum_{p \\neq q \\in A} V_{pq} \\hat{n}_p \\hat{n}_q$.\n\nThe spaces of operators with different polynomial degrees are linearly independent. The linear combination must vanish degree by degree. The only degree-$2$ contribution is $c_H \\hat{H}_{A,2}$. For the combination to be zero, we must have $c_H \\hat{H}_{A,2} = \\hat{0}$. This implies either $c_H=0$ or $\\hat{H}_{A,2}=\\hat{0}$.\n\nLet us determine if $\\hat{H}_{A,2}$ can be the zero operator. $\\hat{H}_{A,2} = \\hat{0}$ if and only if $V_{pq} = 0$ for all $p,q \\in \\{1,\\dots,k\\}$ with $p \\neq q$. Using the factorization, this means $\\sum_{L=1}^R x_p^{(L)} x_q^{(L)} = 0$. Let $\\boldsymbol{u}_p = (x_p^{(1)}, \\dots, x_p^{(R)}) \\in \\mathbb{R}^R$. The condition is $\\boldsymbol{u}_p \\cdot \\boldsymbol{u}_q = 0$ for all $p \\neq q$ in $\\{1, \\dots, k\\}$. This means the set of $k$ vectors $\\{\\boldsymbol{u}_p\\}_{p=1}^k$ is an orthogonal set in $\\mathbb{R}^R$. For $k$ non-zero vectors to be orthogonal in an $R$-dimensional space, it is necessary that $k \\le R$. The problem specifies parameters $k=10$ and $R=7$. Since $k > R$, it is impossible for the $10$ vectors $\\{\\boldsymbol{u}_p\\}_{p=1}^{10}$ in $\\mathbb{R}^7$ to be mutually orthogonal (assuming they are non-zero, a physically reasonable assumption for interacting systems). Therefore, at least one $V_{pq} \\neq 0$ for $p,q \\in A$, and consequently $\\hat{H}_{A,2} \\neq \\hat{0}$.\n\nSince $\\hat{H}_{A,2} \\neq \\hat{0}$, we must have $c_H=0$. The linear independence condition reduces to:\n$$ c_I \\hat{I}_A + \\sum_{L=1}^{R} c_L \\hat{O}_A^{(L)} = \\hat{0} $$\nThe operator $\\hat{I}_A$ is of degree $0$, while the sum is of degree $1$. Thus, they are linearly independent, which forces $c_I=0$ and $\\sum_{L=1}^{R} c_L \\hat{O}_A^{(L)} = \\hat{0}$.\nThe final condition is $\\sum_{L=1}^{R} c_L \\left(\\sum_{p=1}^k x_p^{(L)} \\hat{n}_p\\right) = \\sum_{p=1}^k \\left(\\sum_{L=1}^R c_L x_p^{(L)}\\right) \\hat{n}_p = \\hat{0}$. The number operators $\\{\\hat{n}_p\\}_{p=1}^k$ are linearly independent. This requires their coefficients to be zero:\n$$ \\sum_{L=1}^{R} c_L x_p^{(L)} = 0 \\quad \\text{for all } p=1, \\dots, k. $$\nThis is a system of $k$ linear equations for $R$ unknowns $\\{c_L\\}$. Let the vectors in $\\mathbb{R}^k$ be $\\boldsymbol{y}^{(L)} = (x_1^{(L)}, \\dots, x_k^{(L)})$. The system is $\\sum_{L=1}^R c_L \\boldsymbol{y}^{(L)} = \\boldsymbol{0}$. The problem states that the family $\\{(x_p^{(L)})_{p=1}^k\\}_{L=1}^R$ is linearly independent in $\\mathbb{R}^k$, which means the vectors $\\{\\boldsymbol{y}^{(L)}\\}_{L=1}^R$ are linearly independent. This implies that the only solution is $c_L=0$ for all $L=1,\\dots,R$.\n\nSince all coefficients $c_H, c_I, c_L$ must be zero, the set of $R+2$ operators $\\mathcal{S}_A = \\{\\hat{H}_A, \\hat{I}_A, \\hat{O}_A^{(1)}, \\dots, \\hat{O}_A^{(R)}\\}$ is linearly independent. The dimension of the space spanned by these operators is therefore $R+2$.\nThus, the minimal MPO bond dimension is $D_{\\min}(k) = R+2$.\n\nThe problem asks to evaluate this expression for $N=20$, $k=10$, and $R=7$. The condition $k > R$ ($10 > 7$) is satisfied, validating our derivation path.\n$$ D_{\\min}(10) = R+2 = 7+2 = 9 $$\nThis result holds under the specified conditions of the problem, representing the minimal bond dimension achievable by optimally exploiting the given rank-$R$ factorization of the two-body interaction tensor.", "answer": "$$\\boxed{9}$$", "id": "2929033"}, {"introduction": "Running a DMRG calculation is an iterative, variational process that requires careful monitoring and analysis to ensure convergence and estimate accuracy. This set of practical tasks equips you with the essential tools for interpreting the raw output from a DMRG simulation. You will implement and apply methods for extrapolating the ground-state energy, defining robust convergence criteria, and analyzing the entanglement structure of the resulting Matrix Product State (MPS) wavefunction [@problem_id:2929049].", "problem": "Consider a variational computation of electronic structure using a Matrix Product State (MPS) ansatz within Density Matrix Renormalization Group (DMRG). The state on a bipartition admits a Schmidt decomposition with singular values $\\{ s_i \\}_{i=1}^{\\chi_{\\max}}$, where the corresponding probabilities are $p_i = s_i^2$ and satisfy $\\sum_i p_i = 1$. Truncation to bond dimension $\\chi$ keeps the $\\chi$ largest singular values and discards the rest, leading to a discarded weight $\\epsilon_\\chi = \\sum_{i > \\chi} p_i$. For an approximate eigenstate $|\\psi\\rangle$ of the Hamiltonian $H$, the energy variance is $v = \\langle \\psi | H^2 | \\psi \\rangle - \\langle \\psi | H | \\psi \\rangle^2$, and for exact eigenstates $v = 0$. Near convergence, the variational energy often correlates approximately linearly with either the discarded weight or the variance. Your tasks are to implement principled convergence control and error estimation from first principles, using only the fundamental definitions above and least-squares fitting derived from minimizing a sum of squared residuals.\n\nYou must write a program that does the following, using the exact data given below. All energies are in Hartree and must be reported in Hartree. All logarithms are natural logarithms.\n\nTask A (energy versus discarded weight extrapolation): Given samples of energy $E$ versus discarded weight $\\epsilon$ that are near-linear in the regime of small $\\epsilon$, compute the zero-discarded-weight extrapolated ground-state energy $E_0$ by fitting a straight line $E(\\epsilon)$ by ordinary least squares and evaluating it at $\\epsilon = 0$. Use the following data:\n- Energies (Hartree): $\\mathbf{E}^{(A)} = (-75.64301, -75.64309, -75.64315, -75.64318)$\n- Discarded weights: $\\boldsymbol{\\epsilon}^{(A)} = (1.0 \\times 10^{-4}, 6.0 \\times 10^{-5}, 3.0 \\times 10^{-5}, 1.5 \\times 10^{-5})$\nReport the estimated $E_0$ in Hartree, rounded to $8$ decimal places.\n\nTask B (energy versus variance extrapolation): Given samples of energy $E$ versus energy variance $v$, compute the zero-variance extrapolated energy $E_0$ by fitting a straight line $E(v)$ by ordinary least squares and evaluating it at $v = 0$. Use the following data:\n- Energies (Hartree): $\\mathbf{E}^{(B)} = (-1.13677, -1.13707, -1.13722, -1.137245)$\n- Variances: $\\mathbf{v}^{(B)} = (1.0 \\times 10^{-3}, 4.0 \\times 10^{-4}, 1.0 \\times 10^{-4}, 5.0 \\times 10^{-5})$\nReport the estimated $E_0$ in Hartree, rounded to $8$ decimal places.\n\nTask C (convergence decision rule): Implement a convergence decision rule based on two criteria that must both hold:\n- The maximum discarded weight at each of the last two sweeps is less than or equal to a target threshold $\\tau$.\n- The absolute energy change between the last two sweeps is less than or equal to a threshold $\\delta E$.\nUse the following data:\n- Sweep energies (Hartree): $\\mathbf{E}^{(\\mathrm{sweeps})} = (-40.12340000, -40.12348000, -40.12350000, -40.12350005)$\n- Sweep discarded weights: $\\boldsymbol{\\epsilon}^{(\\mathrm{sweeps})} = (2.0 \\times 10^{-6}, 9.0 \\times 10^{-7}, 7.0 \\times 10^{-7}, 5.0 \\times 10^{-7})$\n- Thresholds: $\\tau = 1.0 \\times 10^{-6}$ and $\\delta E = 1.0 \\times 10^{-7}$ Hartree\nReport a boolean indicating whether convergence is achieved under this rule.\n\nTask D (minimal bond dimension for a target discarded weight): Given a single-bond singular value spectrum (already sorted non-increasing) for a bipartition, compute the minimal bond dimension $\\chi$ such that the discarded weight $\\epsilon_\\chi$ is less than or equal to a target tolerance $\\tau$. Use the following singular values:\n- $\\mathbf{s} = \\big(\\sqrt{0.6}, \\sqrt{0.2}, \\sqrt{0.1}, \\sqrt{0.05}, \\sqrt{0.03}, \\sqrt{0.01}, \\sqrt{0.005}, \\sqrt{0.003}, \\sqrt{0.001}, \\sqrt{0.001}\\big)$\nand tolerance $\\tau = 5.0 \\times 10^{-3}$.\nReport the minimal integer $\\chi$ that satisfies $\\epsilon_\\chi \\le \\tau$.\n\nTask E (entanglement entropy): For the same spectrum as in Task D, compute the von Neumann entanglement entropy $S = - \\sum_i p_i \\ln p_i$ with $p_i = s_i^2$. Report $S$ rounded to $6$ decimal places.\n\nTask F (discarded weight for a fixed bond dimension): For the same spectrum as in Task D, compute the discarded weight $\\epsilon_\\chi$ for $\\chi = 7$. Report $\\epsilon_\\chi$ rounded to $6$ decimal places.\n\nFoundational bases you may use:\n- The variational principle implies that approximate energies are upper bounds to the exact ground-state energy, and the exact eigenstate has variance $v = 0$.\n- The truncated MPS obtained by keeping the largest $\\chi$ singular values has discarded weight $\\epsilon_\\chi = \\sum_{i>\\chi} s_i^2$.\n- Ordinary least squares fits a straight line by minimizing the sum of squared residuals; you may derive and use the closed-form solution for the best-fit line.\n\nYour program must compute the answers for the provided data and produce them in the following order and format:\n- Order: $[A, B, C, D, E, F]$, where $A$ and $B$ are floats in Hartree rounded to $8$ decimals, $C$ is a boolean, $D$ is an integer, $E$ and $F$ are floats rounded to $6$ decimals.\n- Final output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[x_1,x_2,x_3,x_4,x_5,x_6]$) with no spaces.", "solution": "The problem statement has been subjected to a rigorous validation protocol.\n\n### Step 1: Extracted Givens\nThe problem provides the following definitions and data:\n- **Foundational Concepts**: The problem defines the Schmidt decomposition of a Matrix Product State (MPS) across a bipartition, with singular values $\\{s_i\\}_{i=1}^{\\chi_{\\max}}$, Schmidt probabilities $p_i = s_i^2$ normalized as $\\sum_i p_i = 1$, discarded weight $\\epsilon_\\chi = \\sum_{i > \\chi} p_i$, and energy variance $v = \\langle \\psi | H^2 | \\psi \\rangle - \\langle \\psi | H | \\psi \\rangle^2$. It states that for an exact eigenstate, $v=0$. It also posits an approximately linear correlation between variational energy $E$ and either $\\epsilon$ or $v$ near convergence.\n- **Task A Data**: Energies $\\mathbf{E}^{(A)} = (-75.64301, -75.64309, -75.64315, -75.64318)$ Hartrees and corresponding discarded weights $\\boldsymbol{\\epsilon}^{(A)} = (1.0 \\times 10^{-4}, 6.0 \\times 10^{-5}, 3.0 \\times 10^{-5}, 1.5 \\times 10^{-5})$.\n- **Task B Data**: Energies $\\mathbf{E}^{(B)} = (-1.13677, -1.13707, -1.13722, -1.137245)$ Hartrees and corresponding energy variances $\\mathbf{v}^{(B)} = (1.0 \\times 10^{-3}, 4.0 \\times 10^{-4}, 1.0 \\times 10^{-4}, 5.0 \\times 10^{-5})$.\n- **Task C Data**: Sweep energies $\\mathbf{E}^{(\\mathrm{sweeps})} = (-40.12340000, -40.12348000, -40.12350000, -40.12350005)$ Hartrees, sweep discarded weights $\\boldsymbol{\\epsilon}^{(\\mathrm{sweeps})} = (2.0 \\times 10^{-6}, 9.0 \\times 10^{-7}, 7.0 \\times 10^{-7}, 5.0 \\times 10^{-7})$, and thresholds $\\tau = 1.0 \\times 10^{-6}$ and $\\delta E = 1.0 \\times 10^{-7}$ Hartree.\n- **Task D, E, F Data**: A sorted list of singular values $\\mathbf{s} = \\big(\\sqrt{0.6}, \\sqrt{0.2}, \\sqrt{0.1}, \\sqrt{0.05}, \\sqrt{0.03}, \\sqrt{0.01}, \\sqrt{0.005}, \\sqrt{0.003}, \\sqrt{0.001}, \\sqrt{0.001}\\big)$. For Task D, tolerance $\\tau = 5.0 \\times 10^{-3}$. For Task F, bond dimension $\\chi = 7$.\n\n### Step 2: Validation\nThe problem is assessed based on the established criteria:\n- **Scientifically Grounded and Objective**: The problem is anchored in the standard, verifiable principles of quantum mechanics and numerical quantum chemistry, specifically the variational method using tensor networks (DMRG/MPS). All concepts, such as Schmidt decomposition, entanglement entropy, and energy extrapolation, are rigorously defined and widely used in the field. The data provided are numerically plausible. The problem is free from subjectivity and pseudoscience.\n- **Well-Posed and Complete**: Each task is specified with unambiguous inputs, a clear objective, and required output formats. The data for the singular value spectrum correctly normalizes, as $\\sum_i s_i^2 = 0.6 + 0.2 + 0.1 + 0.05 + 0.03 + 0.01 + 0.005 + 0.003 + 0.001 + 0.001 = 1.0$. The problem is self-contained and provides all necessary information for a unique solution to be computed for each task.\n\n### Step 3: Verdict\nThe problem is valid. It is scientifically sound, well-posed, and all necessary data are provided. A solution will be constructed based on first principles.\n\n### Solution Derivations\n\n**Tasks A and B: Energy Extrapolation by Ordinary Least Squares**\n\nThe task requires fitting a linear model $E(x) = mx + E_0$ to a set of data points $(x_i, E_i)$, where $x$ represents either the discarded weight $\\epsilon$ or the variance $v$. The goal is to find the extrapolated energy $E_0$, which is the intercept of the regression line. This is achieved by minimizing the sum of squared residuals, $S = \\sum_{i=1}^{n} (E_i - (mx_i + E_0))^2$.\n\nTo minimize $S$, we set its partial derivatives with respect to the parameters $m$ and $E_0$ to zero:\n$$\n\\frac{\\partial S}{\\partial E_0} = -2 \\sum_{i=1}^{n} (E_i - mx_i - E_0) = 0 \\implies \\sum E_i = m \\sum x_i + n E_0\n$$\n$$\n\\frac{\\partial S}{\\partial m}   = -2 \\sum_{i=1}^{n} x_i(E_i - mx_i - E_0) = 0 \\implies \\sum x_i E_i = m \\sum x_i^2 + E_0 \\sum x_i\n$$\nFrom the first equation, defining the means $\\bar{x} = \\frac{1}{n}\\sum x_i$ and $\\bar{E} = \\frac{1}{n}\\sum E_i$, we obtain the intercept:\n$$\nE_0 = \\bar{E} - m\\bar{x}\n$$\nSubstituting this into the second equation yields the slope:\n$$\nm = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(E_i - \\bar{E})}{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}\n$$\nThe required extrapolated energy at $x=0$ is precisely the intercept $E_0$. These formulae will be implemented for both Task A (with $x = \\epsilon$) and Task B (with $x = v$).\n\n**Task C: Convergence Decision Rule**\n\nConvergence is determined by two simultaneous conditions on the last two variational sweeps, indexed $n-1$ and $n$:\n$1$. The maximum discarded weight for each of the last two sweeps must be below a threshold $\\tau$: $\\epsilon_{n-1} \\leq \\tau$ and $\\epsilon_n \\leq \\tau$.\n$2$. The absolute difference in energy between the last two sweeps must be below a threshold $\\delta E$: $|E_n - E_{n-1}| \\leq \\delta E$.\nThe final decision is the logical AND of these two conditions.\n\n**Task D: Minimal Bond Dimension for a Target Discarded Weight**\n\nGiven the probabilities $p_i = s_i^2$, the discarded weight for a given bond dimension $\\chi$ is defined as the sum of probabilities of the discarded states:\n$$\n\\epsilon_\\chi = \\sum_{i=\\chi+1}^{\\chi_{\\max}} p_i\n$$\nThe task is to find the minimal integer $\\chi$ such that $\\epsilon_\\chi \\leq \\tau$ for a given tolerance $\\tau$. This is found by iterating upwards from $\\chi=1$ and computing $\\epsilon_\\chi$ until the condition is met.\n\n**Task E: Entanglement Entropy**\n\nThe von Neumann entanglement entropy of the bipartition is computed directly from its definition using the Schmidt probabilities $p_i$:\n$$\nS = - \\sum_{i=1}^{\\chi_{\\max}} p_i \\ln p_i\n$$\nwhere the term $p_i \\ln p_i$ is taken to be $0$ if $p_i=0$. In the given problem, all $p_i > 0$.\n\n**Task F: Discarded Weight for a Fixed Bond Dimension**\n\nThis is a direct calculation using the definition from Task D for a specified bond dimension, $\\chi = 7$. One must compute:\n$$\n\\epsilon_7 = \\sum_{i=8}^{\\chi_{\\max}} p_i\n$$\nThe probabilities $p_i$ are obtained by squaring the provided singular values $s_i$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves a multi-part problem related to DMRG convergence and analysis.\n    \"\"\"\n\n    # --- Task A: Energy vs. Discarded Weight Extrapolation ---\n    def extrapolate_energy_ols(x_vals, e_vals):\n        \"\"\"\n        Performs ordinary least squares linear regression to find the intercept.\n        The model is E = m*x + c, where the intercept c is the extrapolated energy.\n        \"\"\"\n        x = np.array(x_vals)\n        y = np.array(e_vals)\n        n = len(x)\n\n        x_mean = np.mean(x)\n        y_mean = np.mean(y)\n\n        # Calculate slope (m) and intercept (c) using OLS formulas\n        numerator = np.sum((x - x_mean) * (y - y_mean))\n        denominator = np.sum((x - x_mean)**2)\n        \n        m = numerator / denominator\n        c = y_mean - m * x_mean\n        \n        return c\n\n    energies_A = [-75.64301, -75.64309, -75.64315, -75.64318]\n    weights_A = [1.0e-4, 6.0e-5, 3.0e-5, 1.5e-5]\n    result_A = extrapolate_energy_ols(weights_A, energies_A)\n\n    # --- Task B: Energy vs. Variance Extrapolation ---\n    energies_B = [-1.13677, -1.13707, -1.13722, -1.137245]\n    variances_B = [1.0e-3, 4.0e-4, 1.0e-4, 5.0e-5]\n    result_B = extrapolate_energy_ols(variances_B, energies_B)\n\n    # --- Task C: Convergence Decision Rule ---\n    sweep_energies = [-40.12340000, -40.12348000, -40.12350000, -40.12350005]\n    sweep_weights = [2.0e-6, 9.0e-7, 7.0e-7, 5.0e-7]\n    tau_conv = 1.0e-6\n    delta_E_conv = 1.0e-7\n\n    weight_cond = (sweep_weights[-1] = tau_conv) and (sweep_weights[-2] = tau_conv)\n    energy_cond = abs(sweep_energies[-1] - sweep_energies[-2]) = delta_E_conv\n    \n    result_C = weight_cond and energy_cond\n\n    # --- Data for Tasks D, E, F ---\n    s_vals = np.sqrt([0.6, 0.2, 0.1, 0.05, 0.03, 0.01, 0.005, 0.003, 0.001, 0.001])\n    p_vals = s_vals**2\n\n    # --- Task D: Minimal Bond Dimension ---\n    tau_discard = 5.0e-3\n    chi_max = len(p_vals)\n    result_D = -1 # Initialize with an invalid value\n    for chi in range(1, chi_max):\n        # Discarded weight is sum of probabilities of states with index > chi\n        # In 0-based index, this corresponds to sum from index chi onwards\n        discarded_weight = np.sum(p_vals[chi:])\n        if discarded_weight = tau_discard:\n            result_D = chi\n            break\n\n    # --- Task E: Entanglement Entropy ---\n    # S = - sum(p_i * log(p_i))\n    # All p_i are > 0, so no need to check for log(0)\n    result_E = -np.sum(p_vals * np.log(p_vals))\n\n    # --- Task F: Discarded Weight for a Fixed Bond Dimension ---\n    chi_fixed = 7\n    # Discarded weight is sum of probabilities of states with index > 7.\n    # In 0-based index, sum from index 7 onwards.\n    result_F = np.sum(p_vals[chi_fixed:])\n    \n    # --- Format Results for Final Output ---\n    results_formatted = [\n        f\"{result_A:.8f}\",\n        f\"{result_B:.8f}\",\n        str(result_C),\n        str(result_D),\n        f\"{result_E:.6f}\",\n        f\"{result_F:.6f}\",\n    ]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results_formatted)}]\")\n\nsolve()\n```", "id": "2929049"}]}