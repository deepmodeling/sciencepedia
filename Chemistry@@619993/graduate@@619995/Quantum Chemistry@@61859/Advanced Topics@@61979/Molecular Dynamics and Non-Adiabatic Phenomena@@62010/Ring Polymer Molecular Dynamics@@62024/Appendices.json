{"hands_on_practices": [{"introduction": "To truly master a computational method, there is no substitute for building it from the ground up. This first practice guides you through the implementation of a minimal Ring Polymer Molecular Dynamics (RPMD) simulator for a one-dimensional harmonic oscillator [@problem_id:2461801]. You will translate the theoretical ring polymer Hamiltonian into practice by deriving the equations of motion, implementing an efficient normal-mode transformation for the internal forces, and using a time-reversible symplectic integrator to propagate the dynamics. This exercise demystifies the core mechanics of an RPMD simulation and builds a solid foundation for more complex applications.", "problem": "You are asked to implement a minimal Ring Polymer Molecular Dynamics (RPMD) simulator for a one-dimensional particle in a harmonic potential. The goal is to derive from first principles the equations of motion for the ring polymer beads, construct an orthonormal normal-mode transformation that diagonalizes the inter-bead spring coupling, and design a symplectic integrator that uses these normal modes to compute the internal spring forces. You will then use your implementation to generate quantitative diagnostics that can be used to assess correctness and stability. All quantities are to be treated in a dimensionless system of units where the mass, reduced Planckâ€™s constant, and Boltzmann constant are set to unity, that is, $m = 1$, $\\hbar = 1$, and $k_{\\mathrm{B}} = 1$.\n\nFundamental base:\n- The path-integral discretization of the quantum canonical partition function for a single particle of mass $m$ at inverse temperature $\\beta = 1/(k_{\\mathrm{B}} T)$ maps to a classical ring polymer with $P$ beads. The effective classical Hamiltonian of the ring polymer (in one dimension) is the sum of three contributions: kinetic energy of beads, harmonic inter-bead springs with frequency parameter $\\omega_{P}$, and the physical potential evaluated beadwise.\n- The inter-bead spring parameter is defined by $\\omega_{P} = \\dfrac{P}{\\beta \\hbar}$.\n- The harmonic physical potential considered here is $V(q) = \\dfrac{1}{2}\\,k\\,q^{2}$, with $k > 0$ and $q \\in \\mathbb{R}$.\n\nTask A (derivation):\n1. Starting from the ring polymer Hamiltonian, derive the equations of motion for the bead positions $q_{j}(t)$ and velocities $v_{j}(t)$, $j \\in \\{0,1,\\dots,P-1\\}$, with periodic indexing $q_{j+P} \\equiv q_{j}$.\n2. Construct an orthonormal normal-mode transformation matrix that diagonalizes the discrete Laplacian corresponding to the ring polymer springs, and derive the corresponding set of normal-mode spring frequencies. Your derivation must be explicit about the structure of the transform (including degeneracies) and the mapping between bead coordinates and normal-mode coordinates.\n\nTask B (algorithm design):\n3. Design a time-reversible, symplectic velocity-Verlet integrator for the bead equations of motion in bead space, but compute the internal spring forces by transforming bead coordinates to normal modes, applying diagonal spring forces in normal-mode space, and transforming back to bead space. The external physical force is $-\\,\\mathrm{d}V/\\mathrm{d}q$ applied independently to each bead in bead space. Explicitly specify how the total force is composed.\n4. Derive expressions for the instantaneous total energy of the ring polymer as the sum of kinetic energy, spring energy, and physical potential energy.\n\nTask C (analytic check for the harmonic potential):\n5. For the harmonic potential $V(q) = \\dfrac{1}{2}\\,k\\,q^{2}$, show that the centroid coordinate $q_{\\mathrm{c}}(t) = \\dfrac{1}{P}\\sum_{j=0}^{P-1} q_{j}(t)$ evolves as an independent harmonic oscillator with the physical frequency $\\omega = \\sqrt{k/m}$, provided the initial internal modes are zero. Hence, with initial centroid position $q_{\\mathrm{c}}(0) = q_{0}$ and centroid velocity $\\dot{q}_{\\mathrm{c}}(0) = v_{0}$, the exact solution is\n$$\nq_{\\mathrm{c}}^{\\mathrm{exact}}(t) = q_{0}\\,\\cos(\\omega t) + \\frac{v_{0}}{\\omega}\\,\\sin(\\omega t).\n$$\nUse this as a benchmark to define a quantitative error measure.\n\nTask D (implementation and test suite):\n6. Implement a complete, runnable Python program that:\n   - Builds the required normal-mode transformation,\n   - Implements the velocity-Verlet time integrator using normal modes for the spring forces,\n   - Simulates the ring polymer dynamics for specified cases,\n   - Records the centroid $q_{\\mathrm{c}}(t)$ over time,\n   - Computes the total energy over time.\n\n7. Define the following three deterministic test cases, each with initial bead positions $q_{j}(0) = q_{0}$ for all $j$ and initial bead velocities $v_{j}(0) = v_{0}$ for all $j$. Use $m = 1$ in all cases, and temperature $T$ in the expression of $\\omega_{P}$. Treat all quantities as dimensionless numbers in the chosen unit system.\n   - Case 1 (happy path): $k = 1.0$, $P = 16$, $T = 0.2$, $q_{0} = 1.0$, $v_{0} = 0.0$, time step $\\Delta t = 0.002$, total integration time $t_{\\mathrm{tot}} = 2\\pi$.\n   - Case 2 (boundary, classical limit): $k = 1.0$, $P = 1$, $T = 0.2$, $q_{0} = 1.0$, $v_{0} = 0.0$, time step $\\Delta t = 0.002$, total integration time $t_{\\mathrm{tot}} = 2\\pi$.\n   - Case 3 (stiffer internal modes): $k = 1.0$, $P = 32$, $T = 0.2$, $q_{0} = 1.0$, $v_{0} = 0.0$, time step $\\Delta t = 0.001$, total integration time $t_{\\mathrm{tot}} = 2\\pi$.\n\n8. For each case, compute two scalar diagnostics:\n   - The maximum absolute centroid error over the trajectory, defined as\n     $$\n     \\max_{n} \\left| q_{\\mathrm{c}}(t_{n}) - q_{\\mathrm{c}}^{\\mathrm{exact}}(t_{n}) \\right|,\n     $$\n     where $t_{n} = n\\,\\Delta t$.\n   - The relative energy drift over the trajectory, defined as\n     $$\n     \\frac{\\max_{n} E(t_{n}) - \\min_{n} E(t_{n})}{E(0)}.\n     $$\n\nFinal output format:\n- Your program should produce a single line of output containing the six results for the three cases in order, as a comma-separated list enclosed in square brackets:\n  $[e_{1},d_{1},e_{2},d_{2},e_{3},d_{3}]$,\n  where $e_{i}$ is the maximum absolute centroid error and $d_{i}$ is the relative energy drift for case $i$.\n- All outputs are dimensionless real numbers. No angles in degrees or radians need to be reported because only angular frequencies enter the dynamics internally. Print the values as decimal floats.\n\nNote on visualization: Although the program must implement normal-mode coordinates internally, instead of plotting, it should compute and internally retain the bead positions at a sequence of times, making the trajectory suitable for visualization by downstream tools. The final printed output must strictly follow the single-line format specified above.", "solution": "The problem is subjected to rigorous validation and is found to be scientifically grounded, well-posed, and objective. It constitutes a standard exercise in computational chemistry, based on the established framework of Ring Polymer Molecular Dynamics (RPMD). All necessary parameters and definitions are provided. We may therefore proceed with the solution.\n\nThe solution is presented in four parts, as delineated by the problem statement: (A) Derivation of the equations of motion and normal-mode transformation, (B) Design of the numerical integrator, (C) Analytic check for the harmonic potential, and (D) Implementation details for the numerical simulation. We shall use a dimensionless system of units where mass $m=1$, reduced Planck's constant $\\hbar=1$, and Boltzmann's constant $k_{\\mathrm{B}}=1$.\n\n### Task A: Derivations\n\n**1. Equations of Motion**\n\nThe classical-isomorphic Hamiltonian for a one-dimensional ring polymer of $P$ beads is given by:\n$$\nH(\\mathbf{q}, \\mathbf{p}) = \\sum_{j=0}^{P-1} \\frac{p_j^2}{2m} + \\sum_{j=0}^{P-1} \\frac{1}{2} m \\omega_P^2 (q_j - q_{j-1})^2 + \\sum_{j=0}^{P-1} V(q_j)\n$$\nwhere $\\mathbf{q} = (q_0, \\dots, q_{P-1})$ and $\\mathbf{p} = (p_0, \\dots, p_{P-1})$ are the bead positions and momenta, respectively. The bead indices are periodic, i.e., $q_{-1} \\equiv q_{P-1}$. The parameter $\\omega_P = \\frac{P}{\\beta \\hbar}$, where $\\beta = 1/(k_{\\mathrm{B}}T)$. In our chosen units, this simplifies to $\\omega_P = PT$.\n\nHamilton's equations of motion govern the dynamics:\n$$\n\\dot{q}_j = \\frac{\\partial H}{\\partial p_j} \\quad \\text{and} \\quad \\dot{p}_j = -\\frac{\\partial H}{\\partial q_j}\n$$\nThe first equation gives the velocities:\n$$\n\\dot{q}_j = v_j = \\frac{p_j}{m}\n$$\nThe second equation gives the time derivative of the momenta, which is the force $F_j$ on bead $j$:\n$$\n\\dot{p}_j = F_j = -\\frac{\\partial}{\\partial q_j} \\left( \\sum_{k=0}^{P-1} \\frac{1}{2} m \\omega_P^2 (q_k - q_{k-1})^2 + \\sum_{k=0}^{P-1} V(q_k) \\right)\n$$\nThe total force $F_j$ is a sum of the internal spring force $F_j^{\\text{spring}}$ and the external physical force $F_j^{\\text{ext}}$. The external force is simply:\n$$\nF_j^{\\text{ext}} = -\\frac{\\partial}{\\partial q_j} \\sum_{k=0}^{P-1} V(q_k) = -\\frac{\\mathrm{d}V(q_j)}{\\mathrm{d}q_j}\n$$\nFor the spring force, we differentiate the spring potential energy term. The terms in the sum that depend on $q_j$ are for indices $k=j$ and $k=j+1$:\n$$\nF_j^{\\text{spring}} = -\\frac{\\partial}{\\partial q_j} \\left( \\frac{1}{2} m \\omega_P^2 (q_j - q_{j-1})^2 + \\frac{1}{2} m \\omega_P^2 (q_{j+1} - q_j)^2 \\right) \\\\\n= -m \\omega_P^2 \\left( (q_j - q_{j-1}) - (q_{j+1} - q_j) \\right) \\\\\n= -m \\omega_P^2 (2q_j - q_{j-1} - q_{j+1})\n$$\nThe equations of motion for the bead positions are thus given by $m\\ddot{q}_j = F_j$:\n$$\nm\\ddot{q}_j = -m \\omega_P^2 (2q_j - q_{j-1} - q_{j+1}) - \\frac{\\mathrm{d}V(q_j)}{\\mathrm{d}q_j}\n$$\nfor $j = 0, 1, \\dots, P-1$.\n\n**2. Normal-Mode Transformation**\n\nThe spring potential energy, $U_{\\text{spring}} = \\frac{1}{2} m \\omega_P^2 \\sum_{j=0}^{P-1} (q_j - q_{j-1})^2$, can be expressed in quadratic form as $U_{\\text{spring}} = \\frac{1}{2} m \\omega_P^2 \\mathbf{q}^T \\mathbf{A} \\mathbf{q}$, where $\\mathbf{A}$ is the $P \\times P$ circulant matrix representing the discrete Laplacian:\n$$\n\\mathbf{A} = \\begin{pmatrix} 2 & -1 & 0 & \\dots & -1 \\\\ -1 & 2 & -1 & \\dots & 0 \\\\ \\vdots & \\ddots & \\ddots & \\ddots & \\vdots \\\\ 0 & \\dots & -1 & 2 & -1 \\\\ -1 & 0 & \\dots & -1 & 2 \\end{pmatrix}\n$$\nThe normal modes are defined by the transformation that diagonalizes $\\mathbf{A}$. The eigenvectors of a circulant matrix are the discrete Fourier basis vectors. The eigenvalues $\\lambda_k$ corresponding to the $k$-th mode are given by:\n$$\n\\lambda_k = 2 - 2\\cos\\left(\\frac{2\\pi k}{P}\\right) = 4\\sin^2\\left(\\frac{\\pi k}{P}\\right) \\quad \\text{for } k = 0, 1, \\dots, P-1\n$$\nNote that $\\lambda_k = \\lambda_{P-k}$, leading to degeneracies for $k \\neq 0$ and $k \\neq P/2$. To obtain a real, orthonormal transformation matrix $\\mathbf{C}$, we form linear combinations of the complex eigenvectors:\n- **Centroid mode ($k=0$):** This mode has eigenvalue $\\lambda_0 = 0$ and corresponds to uniform translation of the entire ring. The column of $\\mathbf{C}$ is:\n  $$ C_{j0} = \\frac{1}{\\sqrt{P}} $$\n- **Internal modes ($k=1, \\dots, \\lfloor(P-1)/2\\rfloor$):** For each $k$, we form a pair of real eigenvectors from the degenerate complex pair:\n  $$ C^{\\text{cos}}_{jk} = \\sqrt{\\frac{2}{P}} \\cos\\left(\\frac{2\\pi j k}{P}\\right), \\quad C^{\\text{sin}}_{jk} = \\sqrt{\\frac{2}{P}} \\sin\\left(\\frac{2\\pi j k}{P}\\right) $$\n- **Nyquist mode (if $P$ is even, $k=P/2$):** This unique, non-degenerate mode has eigenvalue $\\lambda_{P/2} = 4$. The eigenvector corresponds to alternating displacements of beads:\n  $$ C_{j, P/2} = \\frac{1}{\\sqrt{P}}(-1)^j $$\n\nLet $\\tilde{\\mathbf{q}}$ be the vector of normal-mode coordinates. The transformation is $\\mathbf{q} = \\mathbf{C}\\tilde{\\mathbf{q}}$ and $\\tilde{\\mathbf{q}} = \\mathbf{C}^T\\mathbf{q}$. In this basis, the spring potential energy becomes diagonal:\n$$\nU_{\\text{spring}} = \\frac{1}{2} m \\omega_P^2 \\tilde{\\mathbf{q}}^T (\\mathbf{C}^T\\mathbf{A}\\mathbf{C}) \\tilde{\\mathbf{q}} = \\frac{1}{2} m \\omega_P^2 \\sum_{k=0}^{P-1} \\lambda_k \\tilde{q}_k^2 = \\sum_{k=0}^{P-1} \\frac{1}{2} m \\Omega_k^2 \\tilde{q}_k^2\n$$\nThe normal-mode spring frequencies $\\Omega_k$ are therefore:\n$$\n\\Omega_k = \\sqrt{\\omega_P^2 \\lambda_k} = 2\\omega_P \\left|\\sin\\left(\\frac{\\pi k}{P}\\right)\\right|\n$$\nfor $k = 0, 1, \\dots, P-1$. The centroid mode frequency is $\\Omega_0 = 0$.\n\n### Task B: Algorithm Design\n\n**3. Symplectic Integrator**\n\nWe employ the velocity-Verlet algorithm, which is time-reversible and symplectic. A single time step from $t$ to $t+\\Delta t$ proceeds as follows:\n1. Update velocities by a half step: $\\mathbf{v}(t + \\Delta t/2) = \\mathbf{v}(t) + \\frac{\\mathbf{F}(\\mathbf{q}(t))}{m} \\frac{\\Delta t}{2}$\n2. Update positions by a full step: $\\mathbf{q}(t + \\Delta t) = \\mathbf{q}(t) + \\mathbf{v}(t + \\Delta t/2) \\Delta t$\n3. Compute forces $\\mathbf{F}(\\mathbf{q}(t + \\Delta t))$ at the new positions.\n4. Update velocities by the second half step: $\\mathbf{v}(t + \\Delta t) = \\mathbf{v}(t + \\Delta t/2) + \\frac{\\mathbf{F}(\\mathbf{q}(t+\\Delta t))}{m} \\frac{\\Delta t}{2}$\n\nThe total force $\\mathbf{F}$ is composed of the external and spring forces, $\\mathbf{F} = \\mathbf{F}^{\\text{ext}} + \\mathbf{F}^{\\text{spring}}$.\n- The external force is computed in bead space: $F_j^{\\text{ext}} = -\\frac{\\mathrm{d}V(q_j)}{\\mathrm{d}q_j}$.\n- The spring force is computed efficiently in normal-mode space:\n    a. Transform bead coordinates to normal modes: $\\tilde{\\mathbf{q}} = \\mathbf{C}^T \\mathbf{q}$.\n    b. Compute diagonal spring forces in normal-mode space: $\\tilde{F}_k^{\\text{spring}} = -m \\Omega_k^2 \\tilde{q}_k$.\n    c. Transform forces back to bead space: $\\mathbf{F}^{\\text{spring}} = \\mathbf{C} \\tilde{\\mathbf{F}}^{\\text{spring}}$.\n\n**4. Total Energy**\n\nThe instantaneous total energy $E(t)$ is the sum of the kinetic energy, spring potential energy, and physical potential energy:\n$$\nE(t) = K(t) + U_{\\text{spring}}(t) + U_{\\text{phys}}(t)\n$$\nwhere:\n- Kinetic energy: $K(t) = \\sum_{j=0}^{P-1} \\frac{1}{2}m v_j(t)^2$\n- Spring potential energy: $U_{\\text{spring}}(t) = \\frac{1}{2} m \\omega_P^2 \\sum_{j=0}^{P-1} (q_j(t) - q_{j-1}(t))^2$\n- Physical potential energy: $U_{\\text{phys}}(t) = \\sum_{j=0}^{P-1} V(q_j(t))$\nFor the given potential $V(q) = \\frac{1}{2}kq^2$, this becomes $U_{\\text{phys}}(t) = \\frac{1}{2}k\\sum_{j=0}^{P-1} q_j(t)^2$. This expression is used to monitor energy conservation.\n\n### Task C: Analytic Check for Harmonic Potential\n\n**5. Centroid Motion Decoupling**\n\nFor the harmonic potential $V(q) = \\frac{1}{2}kq^2$, the external force on bead $j$ is $F_j^{\\text{ext}} = -kq_j$. Summing the equations of motion over all beads $j=0, \\dots, P-1$:\n$$\nm \\sum_{j=0}^{P-1} \\ddot{q}_j = \\sum_{j=0}^{P-1} F_j^{\\text{spring}} + \\sum_{j=0}^{P-1} F_j^{\\text{ext}}\n$$\nThe sum of internal spring forces is zero due to their pairwise nature and periodic boundary conditions:\n$$\n\\sum_{j=0}^{P-1} F_j^{\\text{spring}} = -m\\omega_P^2 \\sum_{j=0}^{P-1} (2q_j - q_{j-1} - q_{j+1}) = 0\n$$\nThe sum of external forces is:\n$$\n\\sum_{j=0}^{P-1} F_j^{\\text{ext}} = \\sum_{j=0}^{P-1} (-kq_j) = -k \\sum_{j=0}^{P-1} q_j\n$$\nDefining the centroid coordinate as $q_{\\mathrm{c}}(t) = \\frac{1}{P}\\sum_{j=0}^{P-1} q_j(t)$, the sum becomes $mP\\ddot{q}_{\\mathrm{c}} = -kPq_{\\mathrm{c}}$, which simplifies to:\n$$\nm\\ddot{q}_{\\mathrm{c}}(t) + k q_{\\mathrm{c}}(t) = 0\n$$\nThis is the equation of an independent harmonic oscillator with frequency $\\omega = \\sqrt{k/m}$. The initial conditions $q_j(0) = q_0$ and $v_j(0) = v_0$ for all $j$ imply that the centroid starts at $q_{\\mathrm{c}}(0) = q_0$ with velocity $\\dot{q}_{\\mathrm{c}}(0) = v_0$. The exact solution is thus:\n$$\nq_{\\mathrm{c}}^{\\mathrm{exact}}(t) = q_{0}\\cos(\\omega t) + \\frac{v_{0}}{\\omega}\\sin(\\omega t)\n$$\nThis provides a precise benchmark for validating the numerical integration. The condition that initial internal modes are zero is satisfied by setting $q_j(0)$ and $v_j(0)$ to constant values for all beads, which ensures that only the centroid mode ($k=0$) is initially populated. Due to the linearity of the harmonic potential, the normal modes remain decoupled for all time, and the internal modes remain unexcited.\n\n### Task D: Implementation\n\nThe implementation follows the design specified above. A Python program is constructed to build the transformation matrix $\\mathbf{C}$, implement the velocity-Verlet integrator with normal-mode spring forces, and simulate the given test cases. For each case, the maximum absolute centroid error and the relative energy drift are computed and reported. The code is provided in the final answer section.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements a minimal Ring Polymer Molecular Dynamics (RPMD) simulator\n    for a 1D harmonic oscillator, computes diagnostic quantities for\n    predefined test cases, and prints the results in the specified format.\n    \"\"\"\n\n    def build_normal_mode_transform(P):\n        \"\"\"Constructs the real orthonormal normal-mode transformation matrix C.\"\"\"\n        if P == 0:\n            return np.array([[]])\n        \n        C = np.zeros((P, P))\n        j_indices = np.arange(P)\n\n        # k=0 (centroid)\n        C[:, 0] = 1.0 / np.sqrt(P)\n\n        # k=1... (cos/sin pairs)\n        for k in range(1, (P + 1) // 2):\n            # The matrix columns are indexed 0 to P-1. We map physical k to column indices.\n            # k=1 -> cols 1,2; k=2 -> cols 3,4 etc.\n            col_idx_cos = 2 * k - 1\n            col_idx_sin = 2 * k\n            C[:, col_idx_cos] = np.sqrt(2.0/P) * np.cos(2 * np.pi * k * j_indices / P)\n            C[:, col_idx_sin] = np.sqrt(2.0/P) * np.sin(2 * np.pi * k * j_indices / P)\n\n        # k=P/2 (Nyquist mode, if P is even)\n        if P % 2 == 0 and P > 1:\n            col_idx_nyquist = P - 1\n            C[:, col_idx_nyquist] = (1.0 / np.sqrt(P)) * ((-1)**j_indices)\n            \n        return C\n\n    def get_spring_force_coeffs(P, T, m):\n        \"\"\"\n        Computes the diagonal coefficients m*Omega_k^2 for the spring force\n        in the normal-mode representation.\n        \"\"\"\n        if P = 1:\n            return np.zeros(P)\n        \n        # In dimensionless units, hbar=1, kB=1, so beta=1/T and omega_P = P*T.\n        omega_P = P * T\n        m_Omega_sq = np.zeros(P)\n\n        # The coefficients are ordered according to the columns of C.\n        # k=0 (centroid) -> col 0 -> Omega_0 = 0\n        m_Omega_sq[0] = 0.0\n\n        # k=1... (cos/sin pairs)\n        for k in range(1, (P + 1) // 2):\n            freq_sq = (2 * omega_P * np.sin(np.pi * k / P))**2\n            col_idx_cos = 2 * k - 1\n            col_idx_sin = 2 * k\n            m_Omega_sq[col_idx_cos] = m * freq_sq\n            m_Omega_sq[col_idx_sin] = m * freq_sq\n        \n        # k=P/2 (Nyquist mode, if P is even)\n        if P % 2 == 0 and P > 1:\n            k_nyquist = P // 2\n            freq_sq = (2 * omega_P * np.sin(np.pi * k_nyquist / P))**2\n            col_idx_nyquist = P - 1\n            m_Omega_sq[col_idx_nyquist] = m * freq_sq\n            \n        return m_Omega_sq\n    \n    def calculate_total_energy(q, v, k, m, P, T):\n        \"\"\"Calculates the total instantaneous energy of the ring polymer.\"\"\"\n        K = 0.5 * m * np.sum(v**2)\n        U_phys = 0.5 * k * np.sum(q**2)\n        \n        if P > 1:\n            omega_P = P * T\n            # Use np.roll for periodic boundary condition q_j - q_{j-1}\n            U_spring = 0.5 * m * omega_P**2 * np.sum((q - np.roll(q, 1))**2)\n        else:\n            U_spring = 0.0\n            \n        return K + U_phys + U_spring\n\n    def run_simulation(k, P, T, q0, v0, dt, t_tot):\n        \"\"\"\n        Runs a single RPMD simulation and returns the diagnostic metrics.\n        \"\"\"\n        m = 1.0 # Mass is 1 in the specified unit system\n        omega_phys = np.sqrt(k / m)\n        \n        # Initialization\n        q = np.full(P, q0, dtype=float)\n        v = np.full(P, v0, dtype=float)\n        \n        # Pre-computation for forces and diagnostics\n        C = build_normal_mode_transform(P)\n        m_Omega_sq_diag = get_spring_force_coeffs(P, T, m)\n        \n        # Simulation time steps\n        times = np.arange(0, t_tot, dt)\n        n_steps = len(times)\n\n        # Storage for diagnostics\n        centroid_traj = np.zeros(n_steps)\n        energy_traj = np.zeros(n_steps)\n        \n        # Initial force calculation for the first Verlet step\n        F_ext = -k * q\n        if P > 1:\n            tilde_q = C.T @ q\n            tilde_F_spring = -m_Omega_sq_diag * tilde_q\n            F_spring = C @ tilde_F_spring\n        else:\n            F_spring = np.zeros(P)\n        F = F_spring + F_ext\n\n        # Main integration loop\n        for i, t in enumerate(times):\n            # Record diagnostics at the beginning of the step\n            centroid_traj[i] = np.mean(q)\n            energy_traj[i] = calculate_total_energy(q, v, k, m, P, T)\n            \n            # Velocity-Verlet integrator\n            v += 0.5 * F / m * dt  # 1. First half kick\n            q += v * dt            # 2. Full drift\n            \n            # 3. Recalculate forces at new positions\n            F_ext = -k * q\n            if P > 1:\n                tilde_q = C.T @ q\n                tilde_F_spring = -m_Omega_sq_diag * tilde_q\n                F_spring = C @ tilde_F_spring\n            else:\n                F_spring = np.zeros(P)\n            F = F_spring + F_ext\n            \n            v += 0.5 * F / m * dt  # 4. Second half kick\n            \n        # Final diagnostic calculation\n        if omega_phys > 1e-12:\n            q_c_exact = q0 * np.cos(omega_phys * times) + (v0 / omega_phys) * np.sin(omega_phys * times)\n        else: # Handle case of free particle k=0\n            q_c_exact = q0 + v0 * times\n            \n        max_centroid_error = np.max(np.abs(centroid_traj - q_c_exact))\n        \n        E0 = energy_traj[0]\n        if np.abs(E0)  1e-12: # Avoid division by zero if initial energy is zero\n             relative_energy_drift = np.max(energy_traj) - np.min(energy_traj)\n        else:\n             relative_energy_drift = (np.max(energy_traj) - np.min(energy_traj)) / np.abs(E0)\n        \n        return max_centroid_error, relative_energy_drift\n\n    # Define test cases from the problem statement\n    test_cases = [\n        # (k, P, T, q0, v0, dt, t_tot)\n        (1.0, 16, 0.2, 1.0, 0.0, 0.002, 2 * np.pi), # Case 1\n        (1.0, 1,  0.2, 1.0, 0.0, 0.002, 2 * np.pi), # Case 2\n        (1.0, 32, 0.2, 1.0, 0.0, 0.001, 2 * np.pi), # Case 3\n    ]\n\n    results = []\n    for case in test_cases:\n        error, drift = run_simulation(*case)\n        results.extend([error, drift])\n\n    # Print results in the specified single-line format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2461801"}, {"introduction": "A cornerstone of path integral methods is the \"quantum-classical isomorphism,\" where a single quantum particle is mapped onto a classical ring polymer. A crucial question is how well this discrete, $P$-bead model represents the true quantum system. This practice explores this question by examining the convergence of a key structural propertyâ€”the radius of gyration, $R_g$â€”as the number of beads $P$ increases [@problem_id:2461772]. By comparing the finite-$P$ result to the exact analytical answer in the continuous limit ($P \\to \\infty$), you will gain a tangible understanding of how RPMD captures quantum statistical effects like delocalization and the importance of ensuring convergence with respect to $P$.", "problem": "Consider a single quantum particle of mass $m$ in one spatial dimension confined by a harmonic potential $V(q) = \\frac{1}{2} m \\omega^2 q^2$ at temperature $T$. In Ring Polymer Molecular Dynamics (RPMD), the quantum canonical partition function is represented by a classical isomorphism: a ring polymer of $P$ beads with cyclic harmonic springs of frequency parameter $\\omega_P$ connecting nearest neighbors and the same external potential applied to each bead. Let the bead positions be $\\{q_j\\}_{j=1}^P$, and define the centroid $q_{\\mathrm{c}} = \\frac{1}{P} \\sum_{j=1}^P q_j$. The radius of gyration is defined as\n$$\nR_g = \\sqrt{ \\left\\langle \\frac{1}{P} \\sum_{j=1}^P \\left(q_j - q_{\\mathrm{c}}\\right)^2 \\right\\rangle },\n$$\nwhere $\\langle \\cdot \\rangle$ denotes a canonical ensemble average at temperature $T$ over the ring-polymer equilibrium distribution. Use the standard path-integral discretization with bead-bead spring frequency parameter\n$$\n\\omega_P = \\frac{P}{\\beta \\hbar},\n$$\nwhere $\\beta = \\frac{1}{k_B T}$, $k_B$ is the Boltzmann constant, and $\\hbar$ is the reduced Planck constant. All quantities must be treated in the International System of Units (SI).\n\nYour task is to write a complete program that, for each test case below, does the following:\n- Computes the finite-discretization prediction $R_g(P)$ by evaluating the exact thermal equilibrium average implied by the classical ring-polymer model with $P$ beads in a harmonic well.\n- Computes the $P \\to \\infty$ reference value $R_g(\\infty)$ using the exact quantum thermal result for the harmonic oscillator at temperature $T$.\n- Returns the absolute difference\n$$\n\\Delta R_g(P) = \\left| R_g(P) - R_g(\\infty) \\right|\n$$\nin meters.\n\nFundamental base you may assume without derivation in your implementation:\n- The canonical distribution for a classical system at temperature $T$ is proportional to $\\exp(-\\beta H)$, where $H$ is the Hamiltonian.\n- The ring-polymer mapping of quantum statistical mechanics for a single particle in a one-dimensional harmonic potential is a classical system of $P$ beads of mass $m$ with cyclic nearest-neighbor harmonic springs of frequency parameter $\\omega_P = \\frac{P}{\\beta \\hbar}$ and an external harmonic potential $\\frac{1}{2} m \\omega^2 q_j^2$ acting on each bead $q_j$.\n- The exact quantum thermal positional variance of the one-dimensional harmonic oscillator at temperature $T$ is a well-tested result in statistical mechanics.\n\nExpress each final answer in meters, using scientific notation with exactly six digits after the decimal point (for example, $1.234567\\mathrm{e}{-10}$), with no unit symbols in the output. Angles, if any appear in intermediate steps, should be treated in radians. The final program output must be a single line containing a comma-separated list of the results for the test suite, enclosed in square brackets, like $[x_1,x_2,x_3,\\dots]$.\n\nUse the following test suite of parameter tuples $(m,\\omega,T,P)$:\n- Test $1$ (boundary case: single bead): $(m=\\;1.6735575\\times 10^{-27}\\ \\mathrm{kg},\\ \\omega=\\;1.0\\times 10^{14}\\ \\mathrm{s}^{-1},\\ T=\\;300.0\\ \\mathrm{K},\\ P=\\;1)$.\n- Test $2$ (happy path: modest $P$): $(m=\\;1.6735575\\times 10^{-27}\\ \\mathrm{kg},\\ \\omega=\\;1.0\\times 10^{14}\\ \\mathrm{s}^{-1},\\ T=\\;300.0\\ \\mathrm{K},\\ P=\\;8)$.\n- Test $3$ (convergence check: large $P$): $(m=\\;1.6735575\\times 10^{-27}\\ \\mathrm{kg},\\ \\omega=\\;1.0\\times 10^{14}\\ \\mathrm{s}^{-1},\\ T=\\;300.0\\ \\mathrm{K},\\ P=\\;128)$.\n- Test $4$ (low temperature and heavier mass): $(m=\\;1.0\\times 10^{-26}\\ \\mathrm{kg},\\ \\omega=\\;5.0\\times 10^{13}\\ \\mathrm{s}^{-1},\\ T=\\;100.0\\ \\mathrm{K},\\ P=\\;16)$.\n- Test $5$ (stiffer potential at low temperature): $(m=\\;1.6735575\\times 10^{-27}\\ \\mathrm{kg},\\ \\omega=\\;5.0\\times 10^{14}\\ \\mathrm{s}^{-1},\\ T=\\;50.0\\ \\mathrm{K},\\ P=\\;32)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,r_3,r_4,r_5]$), where each $r_i$ is the corresponding $\\Delta R_g(P)$ in meters, formatted as specified above.", "solution": "The problem requires the calculation of the absolute difference between the radius of gyration of a finite $P$-bead ring polymer, $R_g(P)$, and its value in the continuous path-integral limit ($P \\to \\infty$), denoted $R_g(\\infty)$, for a quantum particle in a one-dimensional harmonic potential.\n\nFirst, we establish the theoretical framework. The system is a single particle of mass $m$ in a potential $V(q) = \\frac{1}{2} m \\omega^2 q^2$ at temperature $T$. In the path-integral formulation, this quantum system is mapped onto a classical ring polymer of $P$ beads. The potential energy of this classical analog is given by the Hamiltonian:\n$$\nH_P(\\mathbf{q}) = \\sum_{j=1}^P \\left[ \\frac{1}{2} m \\omega_P^2 (q_j - q_{j+1})^2 + \\frac{1}{2} m \\omega^2 q_j^2 \\right]\n$$\nwhere $\\mathbf{q} = \\{q_1, \\dots, q_P\\}$ are the bead positions, the indices are cyclic ($q_{P+1} = q_1$), $\\beta = 1/(k_B T)$ is the inverse temperature, and $\\omega_P = P/(\\beta \\hbar)$ is the inter-bead spring frequency parameter. The canonical average of an observable $A(\\mathbf{q})$ is $\\langle A \\rangle = Z_P^{-1} \\int d\\mathbf{q} \\, A(\\mathbf{q}) \\exp(-\\beta H_P(\\mathbf{q}))$, where $Z_P$ is the partition function.\n\nThe quantity of interest is the squared radius of gyration, defined as:\n$$\nR_g^2 = \\left\\langle \\frac{1}{P} \\sum_{j=1}^P \\left(q_j - q_{\\mathrm{c}}\\right)^2 \\right\\rangle\n$$\nwhere $q_c = \\frac{1}{P} \\sum_{j=1}^P q_j$ is the centroid of the polymer.\n\nTo evaluate this thermal average, we diagonalize the quadratic Hamiltonian $H_P$ by transforming to the normal modes of the ring polymer. The Hamiltonian can be expressed in terms of these modes, which are independent harmonic oscillators. The variance of the non-centroid modes gives the radius of gyration. A direct calculation using the covariance matrix of the multivariate Gaussian distribution defined by $H_P$ yields a compact result. The covariance matrix element $\\langle q_i q_j \\rangle$ is the $(i,j)$-th element of the matrix $(\\beta \\mathbf{K})^{-1}$, where $\\mathbf{K}$ is the Hessian matrix of $H_P$. This leads to the exact expression for the squared radius of gyration for a finite number of beads $P$:\n$$\nR_g^2(P) = \\frac{1}{P \\beta m} \\sum_{k=1}^{P-1} \\frac{1}{\\omega^2 + \\left(2 \\omega_P \\sin\\left(\\frac{\\pi k}{P}\\right)\\right)^2}\n$$\nSubstituting $\\omega_P = P/(\\beta\\hbar)$, we obtain the formula for computation:\n$$\nR_g^2(P) = \\frac{1}{P \\beta m} \\sum_{k=1}^{P-1} \\frac{1}{\\omega^2 + \\left(\\frac{2P}{\\beta \\hbar} \\sin\\left(\\frac{\\pi k}{P}\\right)\\right)^2}\n$$\nFor the special case $P=1$, the sum is empty, which correctly yields $R_g^2(1) = 0$. This is physically necessary, as a single bead is its own centroid.\n\nNext, we determine the continuous limit, $R_g(\\infty)$. In the limit $P \\to \\infty$, the ring polymer becomes a continuous path $q(\\tau)$ in imaginary time $\\tau \\in [0, \\beta\\hbar]$. The radius of gyration is related to the total variance of the particle's position, $\\langle q^2 \\rangle_{\\text{QM}}$, and the variance of the path's centroid, $\\langle \\bar{q}^2 \\rangle$, where $\\bar{q} = \\frac{1}{\\beta\\hbar} \\int_0^{\\beta\\hbar} q(\\tau)d\\tau$. The relationship is:\n$$\nR_g^2(\\infty) = \\langle q^2 \\rangle_{\\text{QM}} - \\langle \\bar{q}^2 \\rangle\n$$\nThe total quantum thermal variance for a harmonic oscillator is a standard result from statistical mechanics:\n$$\n\\langle q^2 \\rangle_{\\text{QM}} = \\frac{\\hbar}{2m\\omega} \\coth\\left(\\frac{\\beta \\hbar \\omega}{2}\\right)\n$$\nThe variance of the centroid corresponds to the classical thermal variance of a particle in the potential, as the centroid represents the \"classical-like\" degree of freedom of the path:\n$$\n\\langle \\bar{q}^2 \\rangle = \\frac{1}{\\beta m \\omega^2} = \\frac{k_B T}{m \\omega^2}\n$$\nCombining these results gives the exact quantum limit for the squared radius of gyration:\n$$\nR_g^2(\\infty) = \\frac{\\hbar}{2m\\omega} \\coth\\left(\\frac{\\beta \\hbar \\omega}{2}\\right) - \\frac{1}{\\beta m \\omega^2}\n$$\nFor numerical implementation, it is advantageous to rewrite this as:\n$$\nR_g^2(\\infty) = \\frac{1}{\\beta m \\omega^2} \\left( \\frac{\\beta \\hbar \\omega}{2} \\coth\\left(\\frac{\\beta \\hbar \\omega}{2}\\right) - 1 \\right)\n$$\nThis form is more stable when the argument of the hyperbolic cotangent is small.\n\nThe final task is to compute the absolute difference $\\Delta R_g(P) = |R_g(P) - R_g(\\infty)|$. The algorithm is as follows:\n1.  For a given set of parameters $(m, \\omega, T, P)$, calculate $\\beta = 1/(k_B T)$.\n2.  Compute $R_g^2(P)$ using the summation formula. If $P=1$, $R_g^2(1)=0$.\n3.  Compute $R_g^2(\\infty)$ using the closed-form expression.\n4.  Calculate the square roots: $R_g(P) = \\sqrt{R_g^2(P)}$ and $R_g(\\infty) = \\sqrt{R_g^2(\\infty)}$.\n5.  Determine the absolute difference $\\Delta R_g(P) = |R_g(P) - R_g(\\infty)|$.\nThis procedure is applied to each test case provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import constants\n\ndef solve():\n    \"\"\"\n    Computes the difference between finite-P and infinite-P RPMD radius of\n    gyration for a harmonic oscillator.\n    \"\"\"\n    \n    # Define physical constants from scipy\n    k_B = constants.k\n    hbar = constants.hbar\n\n    def calculate_delta_Rg(m, omega, T, P):\n        \"\"\"\n        Calculates the absolute difference |R_g(P) - R_g(infinity)|.\n\n        Args:\n            m (float): Mass of the particle in kg.\n            omega (float): Angular frequency of the harmonic potential in s^-1.\n            T (float): Temperature in Kelvin.\n            P (int): Number of beads in the ring polymer.\n        \n        Returns:\n            float: The absolute difference in meters.\n        \"\"\"\n        if not isinstance(P, int) or P  1:\n            raise ValueError(\"Number of beads P must be a positive integer.\")\n\n        beta = 1.0 / (k_B * T)\n\n        # 1. Compute R_g(P) for a finite number of beads P.\n        if P == 1:\n            # For a single bead, the bead is its own centroid, so Rg is zero.\n            Rg_P_sq = 0.0\n        else:\n            omega_P = P / (beta * hbar)\n            k_values = np.arange(1, P)\n            \n            # Frequencies of the non-zero normal modes\n            sin_term = np.sin(np.pi * k_values / P)\n            Omega_k_sq = omega**2 + (2 * omega_P * sin_term)**2\n            \n            # Sum over the inverse squared frequencies\n            sum_term = np.sum(1.0 / Omega_k_sq)\n            \n            Rg_P_sq = (1.0 / (P * beta * m)) * sum_term\n            \n        Rg_P = np.sqrt(Rg_P_sq)\n\n        # 2. Compute R_g(infinity), the exact quantum limit.\n        # This is derived from the exact path integral expression.\n        # R_g^2(inf) = (hbar/(2*m*omega))*coth(beta*hbar*omega/2) - 1/(beta*m*omega^2)\n        # For numerical stability, we use the form:\n        # R_g^2(inf) = (1/(beta*m*omega^2)) * (x*coth(x) - 1)\n        # where x = beta*hbar*omega/2\n        \n        x = beta * hbar * omega / 2.0\n\n        if x  1e-6:\n            # Use Taylor series for x*coth(x)-1 for small x to avoid 0/0 and precision loss.\n            # x*coth(x) - 1 ~ x^2/3 - x^4/45 + ...\n            term = (x**2 / 3.0) - (x**4 / 45.0)\n        else:\n            term = x * (np.cosh(x) / np.sinh(x)) - 1.0\n\n        Rg_inf_sq = (1.0 / (beta * m * omega**2)) * term\n        Rg_inf = np.sqrt(Rg_inf_sq)\n\n        # 3. Compute the absolute difference.\n        delta_Rg = np.abs(Rg_P - Rg_inf)\n        \n        return delta_Rg\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Test 1 (boundary case: single bead)\n        (1.6735575e-27, 1.0e14, 300.0, 1),\n        # Test 2 (happy path: modest P)\n        (1.6735575e-27, 1.0e14, 300.0, 8),\n        # Test 3 (convergence check: large P)\n        (1.6735575e-27, 1.0e14, 300.0, 128),\n        # Test 4 (low temperature and heavier mass)\n        (1.0e-26, 5.0e13, 100.0, 16),\n        # Test 5 (stiffer potential at low temperature)\n        (1.6735575e-27, 5.0e14, 50.0, 32),\n    ]\n\n    results = []\n    for case in test_cases:\n        m_val, omega_val, T_val, P_val = case\n        result = calculate_delta_Rg(m_val, omega_val, T_val, P_val)\n        # Format the result to scientific notation with 6 decimal places.\n        results.append(f\"{result:.6e}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2461772"}, {"introduction": "While RPMD is a powerful tool, it is an approximation, and a skilled practitioner must understand its limitations. The dynamics of the ring polymer are driven by both the external physical potential and the internal harmonic springs connecting the beads; the latter gives rise to a set of internal vibrational frequencies that are artifacts of the discretization. This final practice is a thought experiment designed to highlight a critical pitfall: spurious resonance [@problem_id:2461797]. You will deliberately engineer a physical potential whose characteristic frequency matches an internal mode of the ring polymer, demonstrating how energy can be erroneously transferred to an unphysical motion and corrupting the dynamics. This exercise underscores the importance of critically analyzing the frequency spectrum of a system when setting up and interpreting RPMD simulations.", "problem": "A one-dimensional particle of mass $m$ is simulated using Ring Polymer Molecular Dynamics (RPMD), where the quantum Boltzmann distribution at temperature $T$ is represented by a ring polymer of $P$ classical beads. In the free-particle limit, adjacent beads are connected by harmonic springs of stiffness $m \\,\\omega_{P}^{2}$, where $\\omega_{P} = P k_{B} T / \\hbar$, with $k_{B}$ the Boltzmann constant and $\\hbar$ the reduced Planck constant. Consider $P=10$ at temperature $T=300\\,\\mathrm{K}$ and a particle mass $m = 1.66053906660 \\times 10^{-27}\\,\\mathrm{kg}$. You are to design a physical one-dimensional harmonic potential $V(x) = \\tfrac{1}{2} k x^{2}$ such that the classical vibrational angular frequency of the particle in this potential equals the highest-frequency internal normal mode of the free ring polymer at these conditions, thereby deliberately creating a spurious resonance.\n\nUsing $k_{B} = 1.380649 \\times 10^{-23}\\,\\mathrm{J\\,K^{-1}}$ and $\\hbar = 1.054571817 \\times 10^{-34}\\,\\mathrm{J\\,s}$, find the value of the force constant $k$ that achieves this resonance. Express your answer in $\\mathrm{N\\,m^{-1}}$ and round your answer to four significant figures.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- System: A one-dimensional particle of mass $m$.\n- Simulation method: Ring Polymer Molecular Dynamics (RPMD).\n- Number of beads: $P$.\n- Temperature: $T$.\n- Free-particle ring polymer model: Adjacent beads connected by harmonic springs of stiffness $m \\,\\omega_{P}^{2}$.\n- Definition of $\\omega_{P}$: $\\omega_{P} = P k_{B} T / \\hbar$.\n- Boltzmann constant: $k_{B}$.\n- Reduced Planck constant: $\\hbar$.\n- Specific value for number of beads: $P=10$.\n- Specific value for temperature: $T=300\\,\\mathrm{K}$.\n- Specific value for mass: $m = 1.66053906660 \\times 10^{-27}\\,\\mathrm{kg}$.\n- External potential: $V(x) = \\tfrac{1}{2} k x^{2}$.\n- Resonance condition: The classical vibrational angular frequency of the particle in $V(x)$ equals the highest-frequency internal normal mode of the free ring polymer.\n- Task: Find the value of the force constant $k$.\n- Value of Boltzmann constant: $k_{B} = 1.380649 \\times 10^{-23}\\,\\mathrm{J\\,K^{-1}}$.\n- Value of reduced Planck constant: $\\hbar = 1.054571817 \\times 10^{-34}\\,\\mathrm{J\\,s}$.\n- Required precision: Round the answer to four significant figures.\n- Required units: $\\mathrm{N\\,m^{-1}}$.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The problem is correctly formulated within the established theoretical framework of Ring Polymer Molecular Dynamics, a standard technique in computational chemistry for approximating quantum dynamics. The concept of ring polymer normal modes and their potential for spurious resonance with physical frequencies is a well-documented artifact of the method. The presented equations are standard.\n- **Well-Posedness**: The problem is well-posed. It provides a clear objective, a specific condition for resonance, and all necessary physical constants and parameters to compute a unique solution for the force constant $k$.\n- **Objectivity**: The language is precise, technical, and free from subjective or ambiguous terms.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically sound, well-posed, objective, and complete. It is therefore deemed **valid**. A solution will be provided.\n\nThe objective is to find the force constant $k$ of a one-dimensional harmonic potential $V(x) = \\frac{1}{2}kx^2$ such that the classical angular frequency of a particle of mass $m$ in this potential resonates with the highest internal vibrational frequency of a free ring polymer.\n\nFirst, we determine the classical angular frequency of the particle in the specified potential. The force on the particle is given by $F = -\\frac{dV}{dx} = -kx$. According to Newton's second law, $m\\ddot{x} = -kx$, or $\\ddot{x} + \\frac{k}{m}x = 0$. This is the equation for a simple harmonic oscillator, whose angular frequency $\\omega_{phys}$ is:\n$$\n\\omega_{phys} = \\sqrt{\\frac{k}{m}}\n$$\n\nNext, we must determine the normal mode frequencies of the free ring polymer. The potential energy of the ring polymer, consisting of $P$ beads with positions $\\{x_j\\}_{j=1}^P$, is given by the sum of harmonic interactions between adjacent beads:\n$$\nU(\\{x_j\\}) = \\frac{1}{2}m\\omega_{P}^2 \\sum_{j=1}^{P} (x_j - x_{j+1})^2\n$$\nwhere the cyclic boundary condition $x_{P+1} = x_1$ is enforced. The equation of motion for the $j$-th bead is:\n$$\nm\\ddot{x}_j = -\\frac{\\partial U}{\\partial x_j} = -m\\omega_{P}^2 \\left( (x_j - x_{j-1}) - (x_j - x_{j+1}) \\right) = m\\omega_{P}^2 (x_{j-1} - 2x_j + x_{j+1})\n$$\nWe seek normal mode solutions of the form $x_j(t) \\propto \\exp(i(qj - \\Omega t))$, where $q$ is a wavevector and $\\Omega$ is the mode frequency. Due to the cyclic boundary condition, the allowed wavevectors are $q_k = \\frac{2\\pi k}{P}$ for $k \\in \\{0, 1, ..., P-1\\}$. Substituting this form into the equation of motion yields the dispersion relation for the normal mode frequencies $\\Omega_k$:\n$$\n-m\\Omega_k^2 = m\\omega_{P}^2 \\left( e^{-iq_k} - 2 + e^{iq_k} \\right) = m\\omega_{P}^2 \\left( 2\\cos(q_k) - 2 \\right)\n$$\n$$\n\\Omega_k^2 = 2\\omega_{P}^2 (1 - \\cos(q_k)) = 2\\omega_{P}^2 \\left( 2\\sin^2\\left(\\frac{q_k}{2}\\right) \\right) = 4\\omega_{P}^2 \\sin^2\\left(\\frac{\\pi k}{P}\\right)\n$$\nThus, the normal mode frequencies are:\n$$\n\\Omega_k = 2\\omega_{P} \\left|\\sin\\left(\\frac{\\pi k}{P}\\right)\\right|, \\quad k = 0, 1, \\ldots, P-1\n$$\nThe mode with $k=0$ corresponds to $\\Omega_0 = 0$. This is the centroid mode, representing a uniform translation of the entire polymer, and is not an internal vibration. The internal modes correspond to $k=1, 2, \\ldots, P-1$. We are interested in the highest-frequency internal mode. The function $\\sin(\\theta)$ is maximized on the interval $[0, \\pi]$ at $\\theta=\\frac{\\pi}{2}$. For the given number of beads $P=10$, which is even, the argument $\\frac{\\pi k}{P}$ equals $\\frac{\\pi}{2}$ for $k=\\frac{P}{2}=5$.\nThis gives the maximum frequency:\n$$\n\\Omega_{max} = \\Omega_{k=P/2} = 2\\omega_{P} \\sin\\left(\\frac{\\pi (P/2)}{P}\\right) = 2\\omega_{P} \\sin\\left(\\frac{\\pi}{2}\\right) = 2\\omega_{P}\n$$\nThe resonance condition dictates that $\\omega_{phys} = \\Omega_{max}$.\n$$\n\\sqrt{\\frac{k}{m}} = 2\\omega_{P}\n$$\nWe are given that $\\omega_{P} = \\frac{P k_{B} T}{\\hbar}$. Substituting this into the resonance condition:\n$$\n\\sqrt{\\frac{k}{m}} = 2 \\left(\\frac{P k_{B} T}{\\hbar}\\right)\n$$\nSolving for the force constant $k$:\n$$\nk = m \\left(2 \\frac{P k_{B} T}{\\hbar}\\right)^2 = \\frac{4 m P^2 k_{B}^2 T^2}{\\hbar^2}\n$$\nNow, we substitute the provided numerical values into this expression:\n$P = 10$\n$T = 300\\,\\mathrm{K}$\n$m = 1.66053906660 \\times 10^{-27}\\,\\mathrm{kg}$\n$k_{B} = 1.380649 \\times 10^{-23}\\,\\mathrm{J\\,K^{-1}}$\n$\\hbar = 1.054571817 \\times 10^{-34}\\,\\mathrm{J\\,s}$\n\n$$\nk = \\frac{4 (1.66053906660 \\times 10^{-27}\\,\\mathrm{kg}) (10)^2 (1.380649 \\times 10^{-23}\\,\\mathrm{J\\,K^{-1}})^2 (300\\,\\mathrm{K})^2}{(1.054571817 \\times 10^{-34}\\,\\mathrm{J\\,s})^2}\n$$\nLet's compute the value:\n$$\nk = \\frac{4 \\times (1.66053906660 \\times 10^{-27}) \\times 100 \\times (1.9061916... \\times 10^{-46}) \\times 90000}{1.1121196... \\times 10^{-68}} \\,\\mathrm{N\\,m^{-1}}\n$$\n$$\nk = \\frac{1.1398772... \\times 10^{-65}}{1.1121196... \\times 10^{-68}} \\,\\mathrm{N\\,m^{-1}}\n$$\n$$\nk \\approx 1.0249588 \\times 10^3 \\,\\mathrm{N\\,m^{-1}} = 1024.9588 \\,\\mathrm{N\\,m^{-1}}\n$$\nThe problem requires the answer to be rounded to four significant figures.\n$$\nk \\approx 1025 \\,\\mathrm{N\\,m^{-1}}\n$$\nThis value of the force constant creates a harmonic potential whose frequency matches the highest, and most problematic, spurious frequency of the RPMD internal modes for this system.", "answer": "$$\n\\boxed{1025}\n$$", "id": "2461797"}]}