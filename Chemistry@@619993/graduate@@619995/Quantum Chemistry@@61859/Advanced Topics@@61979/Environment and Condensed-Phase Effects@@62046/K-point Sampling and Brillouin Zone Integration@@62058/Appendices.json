{"hands_on_practices": [{"introduction": "Calculating material properties often requires integrating functions over the Brillouin zone, a process we approximate numerically by summing over a discrete grid of $\\mathbf{k}$-points. A fundamental skill for any computational scientist is to ensure this numerical approximation is sufficiently converged. This exercise [@problem_id:2901043] provides hands-on practice in implementing a robust protocol, based on Richardson extrapolation, to systematically assess convergence of the total energy and obtain a more accurate, extrapolated estimate. Mastering this technique is a cornerstone of performing reliable and efficient electronic structure calculations.", "problem": "You are to design and implement a numerical protocol to assess $\\mathbf{k}$-point convergence for the Brillouin zone total energy per unit cell within a prescribed tolerance $\\epsilon$, using two systematically nested $\\mathbf{k}$-point grids and an extrapolation procedure. The protocol must be grounded in the definition of the Brillouin zone integral of a smooth periodic integrand and must be implementable for a two-dimensional square lattice Brillouin zone.\n\nFundamental base and target. In a periodic solid, the total energy per unit cell (up to an irrelevant constant) can be written as a Brillouin zone average\n$$\nE = \\frac{1}{\\Omega_{\\mathrm{BZ}}} \\int_{\\mathrm{BZ}} F(\\mathbf{k}) \\, d^2 k,\n$$\nwhere $\\Omega_{\\mathrm{BZ}}$ is the Brillouin zone volume and $F(\\mathbf{k})$ is a $\\mathbf{k}$-periodic integrand that depends on the electronic structure, typically a sum over band energies weighted by occupations. For a two-dimensional square lattice with primitive reciprocal lattice vectors of magnitude $2\\pi$, you may take the Brillouin zone as the square domain $\\left[-\\pi,\\pi\\right]^2$ (angles in radians), for which the normalized average can be computed as the unweighted mean of $F(\\mathbf{k})$ over a uniform grid.\n\nDiscretization base. A uniform $\\Gamma$-centered Monkhorst–Pack grid with $N$ points along each direction is defined by the points\n$$\nk_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}, \\quad i \\in \\{1,2,\\dots,N\\}, \\quad \\alpha \\in \\{x,y\\},\n$$\nso that the $N\\times N$ grid is the Cartesian product of the one-dimensional nodes. The numerical approximation to the Brillouin zone average using this grid is the arithmetic mean over all $N^2$ $\\mathbf{k}$-points because the domain and integrand are periodic.\n\nConvergence assessment base. Assume an asymptotic error model for the grid average of order $p$,\n$$\nE_N = E_\\infty + C\\,N^{-p} + o(N^{-p}),\n$$\nwhere $E_N$ denotes the average obtained on an $N\\times N$ grid, $E_\\infty$ is the infinite-grid limit, $C$ is an $N$-independent constant, and $p>0$ depends on the smoothness of $F(\\mathbf{k})$ and on whether the system is insulating or metallic (with possible smearing). In the metallic case with weak smoothing, the presence of steep gradients around the Fermi surface can effectively lower $p$.\n\nYour task. From the definitions above, derive a two-grid extrapolation estimator for $E_\\infty$ based on $E_N$ and $E_{2N}$ given a specified convergence order $p$, and derive a computable error indicator based only on $E_N$, $E_{2N}$, and $p$. Then implement the following protocol:\n\n- Given a coarse grid size $N$ (along each direction), construct the nested fine grid of size $2N$ (along each direction), evaluate $E_N$ and $E_{2N}$ as the arithmetic mean of $F(\\mathbf{k})$ on the respective grids, and use your extrapolation estimator to obtain $E_\\infty^{\\mathrm{est}}$ and an error estimate $\\Delta$.\n- Declare convergence if $\\Delta \\le \\epsilon$, and non-convergence otherwise.\n\nPhysical and numerical units. Angles are in radians. All energies must be reported in electronvolts (eV). When printing floating-point energies, print with exactly $10$ digits after the decimal point.\n\nIntegrands to be used. For testability, implement the following model integrands $F(\\mathbf{k})$, each representative of a different physical situation:\n\n- Insulator-like analytic surrogate:\n$$\nF_{\\mathrm{ins}}(k_x,k_y) = E_0 + A \\exp\\!\\big(\\alpha \\cos k_x + \\beta \\cos k_y\\big),\n$$\nwith parameters $E_0$ in eV and dimensionless $A$, $\\alpha$, and $\\beta$.\n\n- Metal-like single-band with Fermi–Dirac occupation:\n$$\n\\varepsilon(k_x,k_y) = -2t\\left(\\cos k_x + \\cos k_y\\right), \\quad\nn(\\varepsilon;\\mu,\\sigma) = \\frac{1}{1 + \\exp\\!\\left(\\frac{\\varepsilon - \\mu}{\\sigma}\\right)}, \\quad\nF_{\\mathrm{met}}(k_x,k_y) = \\varepsilon(k_x,k_y)\\, n(\\varepsilon(k_x,k_y);\\mu,\\sigma),\n$$\nwith $t$ in eV, chemical potential $\\mu$ in eV, and smearing parameter $\\sigma$ in eV.\n\nAssume a user-specified convergence order $p$ for each case, reflecting expected asymptotics: use a larger $p$ for the analytic insulator-like integrand and a smaller $p$ for the metal-like case with small but finite smearing.\n\nTest suite. Your program must run the protocol on the following four cases without any user input:\n\n- Case $\\mathbf{1}$ (insulator-like, smooth): $F = F_{\\mathrm{ins}}$ with $E_0 = -5.0$ eV, $A = 0.2$ eV, $\\alpha = 0.3$, $\\beta = 0.4$, coarse grid size $N = 8$, assumed order $p = 4$, tolerance $\\epsilon = 1.0\\times 10^{-8}$ eV.\n- Case $\\mathbf{2}$ (metal-like, moderate smearing): $F = F_{\\mathrm{met}}$ with $t = 1.0$ eV, $\\mu = 0.0$ eV, $\\sigma = 0.05$ eV, coarse grid size $N = 24$, assumed order $p = 2$, tolerance $\\epsilon = 1.0\\times 10^{-6}$ eV.\n- Case $\\mathbf{3}$ (metal-like, weak smearing, tight tolerance): $F = F_{\\mathrm{met}}$ with $t = 1.0$ eV, $\\mu = 0.0$ eV, $\\sigma = 0.005$ eV, coarse grid size $N = 16$, assumed order $p = 2$, tolerance $\\epsilon = 1.0\\times 10^{-10}$ eV.\n- Case $\\mathbf{4}$ (insulator-like, very smooth, low $N$): $F = F_{\\mathrm{ins}}$ with $E_0 = -2.0$ eV, $A = 0.5$ eV, $\\alpha = 0.9$, $\\beta = 0.7$, coarse grid size $N = 6$, assumed order $p = 4$, tolerance $\\epsilon = 1.0\\times 10^{-9}$ eV.\n\nRequired final output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each case contributes a list of three elements: $[c,E_\\infty^{\\mathrm{est}},\\Delta]$, with $c$ an integer equal to $1$ if converged and $0$ otherwise, and $E_\\infty^{\\mathrm{est}}$ and $\\Delta$ printed in eV with exactly $10$ digits after the decimal point. For example:\n$[[1,-4.8123456789,0.0000000042],[1,\\dots,\\dots],[0,\\dots,\\dots],[1,\\dots,\\dots]]$.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extracted Givens**\n- **Objective**: Design a protocol to assess $\\mathbf{k}$-point convergence for the Brillouin zone (BZ) total energy per unit cell.\n- **Energy Definition**: $E = \\frac{1}{\\Omega_{\\mathrm{BZ}}} \\int_{\\mathrm{BZ}} F(\\mathbf{k}) \\, d^2 k$.\n- **Brillouin Zone**: A two-dimensional square domain $\\left[-\\pi,\\pi\\right]^2$.\n- **Discretization**: Uniform $\\Gamma$-centered Monkhorst–Pack grid of size $N \\times N$.\n- **Grid Points**: $k_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}$, for $i \\in \\{1,2,\\dots,N\\}$, $\\alpha \\in \\{x,y\\}$.\n- **Numerical Average**: $E_N$ is the arithmetic mean of $F(\\mathbf{k})$ values over the $N \\times N$ grid.\n- **Asymptotic Error Model**: $E_N = E_\\infty + C\\,N^{-p} + o(N^{-p})$.\n- **Task**: Derive a two-grid ($N$, $2N$) extrapolation estimator $E_\\infty^{\\mathrm{est}}$ and an error indicator $\\Delta$. Implement a protocol to check if $\\Delta \\le \\epsilon$.\n- **Integrands**:\n    1. $F_{\\mathrm{ins}}(k_x,k_y) = E_0 + A \\exp\\!\\big(\\alpha \\cos k_x + \\beta \\cos k_y\\big)$.\n    2. $F_{\\mathrm{met}}(k_x,k_y) = \\varepsilon(k_x,k_y)\\, n(\\varepsilon(k_x,k_y);\\mu,\\sigma)$, with $\\varepsilon(k_x,k_y) = -2t\\left(\\cos k_x + \\cos k_y\\right)$ and $n(\\varepsilon;\\mu,\\sigma) = \\frac{1}{1 + \\exp\\!\\left(\\frac{\\varepsilon - \\mu}{\\sigma}\\right)}$.\n- **Test Cases**: Four specific cases are provided with all necessary parameters ($E_0, A, \\alpha, \\beta, t, \\mu, \\sigma, N, p, \\epsilon$).\n- **Output**: A single line of text with the results for all cases, formatted as $[[c_1,E_{\\infty,1}^{\\mathrm{est}},\\Delta_1],[c_2,E_{\\infty,2}^{\\mathrm{est}},\\Delta_2],\\dots]$, with energies formatted to $10$ decimal places.\n\n**Step 2: Validation of Extracted Givens**\nThe problem is scientifically grounded, well-posed, and objective. It describes a standard and important numerical technique in computational condensed matter physics—namely, the use of Richardson extrapolation to accelerate convergence and estimate error in Brillouin zone integration. The mathematical models and definitions are precise and free of contradiction.\n\nA minor terminological imprecision is noted. The problem refers to the grid of size $2N \\times 2N$ as \"nested\" with respect to the $N \\times N$ grid. For the specified $\\Gamma$-centered grid formula, $k_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}$, the points of the coarse grid are not a subset of the points of the fine grid. For example, for $N=2$, the points are $\\{-\\pi/2, \\pi/2\\}$, while for $N=4$, the points are $\\{-3\\pi/4, -\\pi/4, \\pi/4, 3\\pi/4\\}$. This lack of nesting, however, does not invalidate the extrapolation procedure. The validity of Richardson extrapolation relies on the systematic refinement of the discretization, not on strict grid nesting. The problem provides an unambiguous formula for grid generation, which must be followed. Therefore, this terminological point is noted for correctness but does not render the problem invalid.\n\n**Step 3: Verdict and Action**\nThe problem is deemed **valid**. A complete, reasoned solution will be provided.\n\n**Derivation of the Extrapolation Formula and Error Estimator**\nThe foundation of the protocol is the asymptotic error model for the numerical approximation $E_N$ of the true energy $E_\\infty$:\n$$E_N = E_\\infty + C N^{-p} + o(N^{-p})$$\nwhere $p$ is the order of convergence. We are given results from two grids, a coarse grid of size $N \\times N$ and a fine grid of size $2N \\times 2N$. Neglecting the higher-order terms $o(N^{-p})$, we can write a system of two equations for the two unknowns $E_\\infty$ and $C$:\n$$E_N \\approx E_\\infty + C N^{-p} \\quad (1)$$\n$$E_{2N} \\approx E_\\infty + C (2N)^{-p} = E_\\infty + C N^{-p} 2^{-p} \\quad (2)$$\nTo find an estimate for $E_\\infty$, we must eliminate the constant $C$. From equation (1), we have $C N^{-p} \\approx E_N - E_\\infty$. Substituting this into equation (2) gives:\n$$E_{2N} \\approx E_\\infty + (E_N - E_\\infty) 2^{-p}$$\n$$E_{2N} \\approx E_\\infty (1 - 2^{-p}) + E_N 2^{-p}$$\nSolving for $E_\\infty$:\n$$E_\\infty (1 - 2^{-p}) \\approx E_{2N} - E_N 2^{-p}$$\n$$E_\\infty \\approx \\frac{E_{2N} - E_N 2^{-p}}{1 - 2^{-p}}$$\nMultiplying the numerator and denominator by $2^p$ yields a more convenient form. Our estimator for the converged energy, $E_\\infty^{\\mathrm{est}}$, is thus:\n$$E_\\infty^{\\mathrm{est}} = \\frac{2^p E_{2N} - E_N}{2^p - 1}$$\nThis is the standard Richardson extrapolation formula.\n\nNext, we derive an estimator for the error. The true error of the more accurate result, $E_{2N}$, is $|E_{2N} - E_\\infty|$. We can estimate this error by taking the magnitude of the difference between our best estimate for the true value, $E_\\infty^{\\mathrm{est}}$, and the fine-grid result $E_{2N}$. This serves as our error indicator, $\\Delta$:\n$$\\Delta = |E_\\infty^{\\mathrm{est}} - E_{2N}|$$\nSubstituting the expression for $E_\\infty^{\\mathrm{est}}$:\n$$\\Delta = \\left| \\frac{2^p E_{2N} - E_N}{2^p - 1} - E_{2N} \\right|$$\nTo simplify, we place the second term over a common denominator:\n$$\\Delta = \\left| \\frac{2^p E_{2N} - E_N - (2^p - 1)E_{2N}}{2^p - 1} \\right| = \\left| \\frac{2^p E_{2N} - E_N - 2^p E_{2N} + E_{2N}}{2^p - 1} \\right|$$\nThis simplifies to:\n$$\\Delta = \\left| \\frac{E_{2N} - E_N}{2^p - 1} \\right|$$\nThe absolute value ensures the error is non-negative. This is our computable error indicator, which depends only on the calculated energies $E_N$ and $E_{2N}$ and the assumed convergence order $p$.\n\n**Numerical Protocol**\nThe derived formulas provide the basis for the required numerical protocol. For each test case specified in the problem statement, the following steps are executed:\n1.  Identify the parameters for the case: the integrand function $F(\\mathbf{k})$ with its specific parameters, the coarse grid size $N$, the assumed convergence order $p$, and the convergence tolerance $\\epsilon$.\n2.  Generate the set of $N^2$ k-points for the coarse $N \\times N$ grid using the formula $k_{\\alpha}(i;N) = \\frac{(2 i - N - 1)\\,\\pi}{N}$.\n3.  Calculate the coarse-grid energy average $E_N$ by computing the arithmetic mean of $F(\\mathbf{k})$ over all points of the coarse grid.\n4.  Generate the set of $(2N)^2$ k-points for the fine $2N \\times 2N$ grid.\n5.  Calculate the fine-grid energy average $E_{2N}$ by computing the arithmetic mean over the fine grid.\n6.  Use the derived formulas to calculate the extrapolated energy $E_\\infty^{\\mathrm{est}}$ and the error estimate $\\Delta$.\n7.  Compare the error estimate to the tolerance: if $\\Delta \\le \\epsilon$, the calculation is declared converged (status $c=1$); otherwise, it is non-converged (status $c=0$).\n8.  The results—the convergence status $c$, the extrapolated energy $E_\\infty^{\\mathrm{est}}$, and the error estimate $\\Delta$—are formatted and stored for the final output.\n\nThis protocol will be implemented for the four specified test cases, covering both insulator-like and metal-like integrands with different parameters.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the k-point convergence protocol for all test cases.\n    \"\"\"\n\n    def F_ins(kx, ky, E0, A, alpha, beta):\n        \"\"\"\n        Calculates the insulator-like integrand F_ins(k).\n        Args:\n            kx (np.ndarray): Grid of kx points.\n            ky (np.ndarray): Grid of ky points.\n            E0 (float): Energy offset in eV.\n            A (float): Amplitude in eV.\n            alpha (float): Dimensionless parameter.\n            beta (float): Dimensionless parameter.\n        Returns:\n            np.ndarray: Values of the integrand on the grid.\n        \"\"\"\n        return E0 + A * np.exp(alpha * np.cos(kx) + beta * np.cos(ky))\n\n    def F_met(kx, ky, t, mu, sigma):\n        \"\"\"\n        Calculates the metal-like integrand F_met(k).\n        Args:\n            kx (np.ndarray): Grid of kx points.\n            ky (np.ndarray): Grid of ky points.\n            t (float): Hopping parameter in eV.\n            mu (float): Chemical potential in eV.\n            sigma (float): Smearing parameter in eV.\n        Returns:\n            np.ndarray: Values of the integrand on the grid.\n        \"\"\"\n        epsilon = -2.0 * t * (np.cos(kx) + np.cos(ky))\n        # Add a small constant to sigma to prevent division by zero, although not\n        # strictly necessary with the given test cases.\n        if sigma == 0:\n            sigma = 1e-12 \n        n_fermi_dirac = 1.0 / (1.0 + np.exp((epsilon - mu) / sigma))\n        return epsilon * n_fermi_dirac\n    \n    def compute_energy_average(N_grid, F_func, f_params):\n        \"\"\"\n        Computes the Brillouin zone average energy on an N x N grid.\n        Args:\n            N_grid (int): Number of k-points along one direction.\n            F_func (function): The integrand function (F_ins or F_met).\n            f_params (dict): Dictionary of parameters for the integrand function.\n        Returns:\n            float: The calculated average energy.\n        \"\"\"\n        if N_grid == 0:\n            return 0.0\n        \n        # Generate 1D k-points based on the Monkhorst-Pack scheme\n        k_1d = (2.0 * np.arange(1, N_grid + 1) - N_grid - 1.0) * np.pi / N_grid\n        \n        # Create a 2D meshgrid of k-points\n        kx, ky = np.meshgrid(k_1d, k_1d)\n        \n        # Calculate integrand values over the grid\n        energy_values = F_func(kx, ky, **f_params)\n        \n        # The BZ average is the arithmetic mean for a uniform grid\n        return np.mean(energy_values)\n\n    def run_protocol(case):\n        \"\"\"\n        Executes the two-grid convergence protocol for a single test case.\n        Args:\n            case (dict): Dictionary containing all parameters for the case.\n        Returns:\n            list: A list [c, E_inf_est, Delta] with the results.\n        \"\"\"\n        N, p, epsilon = case['N'], case['p'], case['epsilon']\n        integrand_type = case['type']\n        \n        if integrand_type == 'ins':\n            F_func = F_ins\n            f_params = {k: case[k] for k in ['E0', 'A', 'alpha', 'beta']}\n        elif integrand_type == 'met':\n            F_func = F_met\n            f_params = {k: case[k] for k in ['t', 'mu', 'sigma']}\n        else:\n            # This case should not be reached with the given problem.\n            raise ValueError(f\"Unknown integrand type: {integrand_type}\")\n\n        # Calculate energy on the coarse grid (N x N)\n        E_N = compute_energy_average(N, F_func, f_params)\n        \n        # Calculate energy on the fine grid (2N x 2N)\n        E_2N = compute_energy_average(2 * N, F_func, f_params)\n\n        # Apply Richardson extrapolation to estimate E_infinity\n        # E_inf_est = (2^p * E_2N - E_N) / (2^p - 1)\n        power_of_2 = 2.0**p\n        E_inf_est = (power_of_2 * E_2N - E_N) / (power_of_2 - 1.0)\n        \n        # Estimate the error of the fine-grid result\n        # Delta = |E_2N - E_N| / (2^p - 1)\n        Delta = np.abs(E_2N - E_N) / (power_of_2 - 1.0)\n        \n        # Determine convergence status\n        converged = 1 if Delta <= epsilon else 0\n        \n        return [converged, E_inf_est, Delta]\n\n    # Definition of the test cases from the problem statement.\n    test_cases = [\n        {'type': 'ins', 'E0': -5.0, 'A': 0.2, 'alpha': 0.3, 'beta': 0.4, 'N': 8, 'p': 4, 'epsilon': 1.0e-8},\n        {'type': 'met', 't': 1.0, 'mu': 0.0, 'sigma': 0.05, 'N': 24, 'p': 2, 'epsilon': 1.0e-6},\n        {'type': 'met', 't': 1.0, 'mu': 0.0, 'sigma': 0.005, 'N': 16, 'p': 2, 'epsilon': 1.0e-10},\n        {'type': 'ins', 'E0': -2.0, 'A': 0.5, 'alpha': 0.9, 'beta': 0.7, 'N': 6, 'p': 4, 'epsilon': 1.0e-9}\n    ]\n\n    results = []\n    for case in test_cases:\n        result_triplet = run_protocol(case)\n        results.append(result_triplet)\n\n    # Format the final output string exactly as required.\n    formatted_results = []\n    for c, e_inf, delta in results:\n        e_inf_str = f\"{e_inf:.10f}\"\n        delta_str = f\"{delta:.10f}\"\n        formatted_results.append(f\"[{c},{e_inf_str},{delta_str}]\")\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2901043"}, {"introduction": "Beyond total energy, we are often interested in its derivatives, such as forces on atoms, which are essential for geometry optimizations and molecular dynamics. This practice [@problem_id:2900974] extends the concept of convergence testing to the calculation of forces in a metallic system, which presents a greater challenge due to the sharp discontinuity at the Fermi surface. You will explore the critical interplay between $\\mathbf{k}$-point sampling density and the electronic smearing width, $\\sigma$, learning how these two parameters must be carefully co-converged to achieve accurate and reliable force calculations in metals.", "problem": "You are to design and implement a numerical convergence test for forces in a simple metallic band model, explicitly probing sensitivity to both $\\mathbf{k}$-point density and electronic smearing width. Your implementation must be a complete and runnable program that produces the specified output format without requiring any external input.\n\nFundamental base and model setup: Start from the Hellmann–Feynman theorem, which states that the force $F$ on a nucleus displaced by a small scalar coordinate $u$ is given by $F = -\\partial E_{\\text{tot}}/\\partial u$, where $E_{\\text{tot}}$ is the total electronic energy. For a periodic, one-dimensional crystalline system with a single tight-binding band in the metallic regime, the total energy per unit cell can be written as a Brillouin-zone integral over band energies weighted by electronic occupation, and the force as the $u$-derivative of that energy. Consider a one-dimensional Brillouin zone with $k \\in [-\\pi,\\pi)$ and lattice constant set to $a=1$ for nondimensionalization. Let the band dispersion under a small displacement $u$ be\n$\\epsilon(k; u) = -2t \\cos k + g\\,u \\cos k$,\nwith constants $t > 0$ and $g > 0$, and chemical potential $\\mu = 0$ (half-filled metal). Assume that the electronic occupancy is given by the Fermi–Dirac function at finite electronic temperature (used here as a smearing proxy): $f(\\epsilon;\\sigma) = \\left(1 + \\exp\\left(\\frac{\\epsilon - \\mu}{\\sigma}\\right)\\right)^{-1}$, where $\\sigma > 0$ is a smearing width that you will vary.\n\nTask: Using only the fundamental definitions above, derive a numerically computable expression for the force $F$ at $u=0$ as a Brillouin-zone average that can be approximated by a uniform $\\mathbf{k}$-point grid of $N_k$ points. Implement the following convergence protocol:\n\n1) Define a function that, given $(N_k, \\sigma)$, returns the approximate force $F(N_k,\\sigma)$ evaluated at $u=0$ by discretizing the Brillouin-zone integral on a uniform midpoint grid of $N_k$ points on $[-\\pi,\\pi)$.\n\n2) Define a high-accuracy reference force $F_{\\mathrm{ref}}$ by using a very dense grid with $N_{\\mathrm{ref}}$ points and a very small smearing width $\\sigma_{\\mathrm{ref}}$, both chosen to render the discretization and smearing errors negligible for the given model.\n\n3) For each test case $(N_k, \\sigma, \\tau)$ in the provided test suite, compute a boolean indicating whether the absolute error $\\lvert F(N_k,\\sigma) - F_{\\mathrm{ref}} \\rvert$ is less than or equal to the tolerance $\\tau$.\n\nModel constants and numerical choices: Use $t = 1$ (dimensionless), $g = 0.4$ (dimensionless), $\\mu = 0$ (dimensionless), $N_{\\mathrm{ref}} = 200000$ (dimensionless count), and $\\sigma_{\\mathrm{ref}} = 10^{-4}$ (dimensionless). Your $\\mathbf{k}$-point grid must be the uniform midpoint rule on $[-\\pi,\\pi)$: if $j \\in \\{0,1,\\dots,N_k-1\\}$, the midpoints are $k_j = -\\pi + (j + \\tfrac{1}{2}) \\,\\Delta k$ with $\\Delta k = \\frac{2\\pi}{N_k}$.\n\nTest suite: Your program must evaluate the following cases and aggregate the pass/fail results.\n\n- Case $1$: $N_k = 400$, $\\sigma = 5 \\times 10^{-2}$, $\\tau = 10^{-3}$.\n- Case $2$: $N_k = 8$, $\\sigma = 10^{-2}$, $\\tau = 10^{-3}$.\n- Case $3$: $N_k = 400$, $\\sigma = 5 \\times 10^{-1}$, $\\tau = 10^{-3}$.\n- Case $4$: $N_k = 100$, $\\sigma = 2 \\times 10^{-2}$, $\\tau = 7 \\times 10^{-4}$.\n- Case $5$: $N_k = 60$, $\\sigma = 10^{-1}$, $\\tau = 2 \\times 10^{-3}$.\n- Case $6$: $N_k = 2$, $\\sigma = 2 \\times 10^{-1}$, $\\tau = 5 \\times 10^{-2}$.\n\nAngle units: All angles are nondimensionalized; trigonometric functions use arguments in radians.\n\nFinal output format: Your program should produce a single line of output containing the six boolean results as a comma-separated list enclosed in square brackets (for example, \"[True,False,True,True,False,True]\").\n\nNotes and constraints:\n\n- Use only vectorized numerical operations to evaluate the Brillouin-zone average, and ensure numerical stability of the Fermi–Dirac function for very small $\\sigma$ by handling large arguments of the exponential safely.\n- No physical units are required because the model is fully nondimensionalized.\n- The final printed output must exactly match the specified single-line format with no additional text.", "solution": "The problem is subjected to validation and is found to be valid. It is a well-posed problem in computational condensed matter physics, resting on established principles such as the Hellmann-Feynman theorem, tight-binding models, and Fermi-Dirac statistics. All necessary parameters and definitions for a unique numerical solution are provided.\n\nThe problem, however, contains a subtle ambiguity in its definition of \"total electronic energy\", $E_{\\text{tot}}$. At a non-zero temperature, or with finite electronic smearing $\\sigma$, the thermodynamically correct quantity whose derivative yields the force is the Helmholtz free energy, $A = E_{\\text{band}} - \\mathcal{T}S_{\\text{el}}$, not simply the sum of occupied one-particle energies, $E_{\\text{band}} = \\langle \\epsilon f \\rangle$. A naive differentiation of $E_{\\text{band}}$ misses a term related to the derivative of the electronic entropy, $S_{\\text{el}}$. The standard and physically correct formulation for the force on a collective coordinate $u$ is given by the expectation value of the derivative of the Hamiltonian, which is equivalent to differentiating the free energy. I will proceed with this rigorous formulation.\n\nThe Helmholtz free energy per unit cell is given by:\n$$ A(u) = E_{\\text{band}}(u) - \\sigma S_{\\text{el}}(u) $$\nwhere $\\sigma$ is the smearing width (proportional to temperature, $k_B \\mathcal{T}$), $E_{\\text{band}}$ is the band energy, and $S_{\\text{el}}$ is the electronic entropy. These are defined as Brillouin zone (BZ) integrals:\n$$ E_{\\text{band}}(u) = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\epsilon(k; u) f(\\epsilon(k; u) - \\mu; \\sigma) dk $$\n$$ S_{\\text{el}}(u) = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ f_k \\ln f_k + (1 - f_k) \\ln(1 - f_k) \\right] dk $$\nwhere $f_k$ is a shorthand for $f(\\epsilon(k; u) - \\mu; \\sigma)$. The force is $F = -\\partial A(u)/\\partial u$.\n$$ F(u) = -\\frac{\\partial E_{\\text{band}}}{\\partial u} + \\sigma \\frac{\\partial S_{\\text{el}}}{\\partial u} $$\nThe derivative of the entropy term can be simplified using the chain rule:\n$$ \\frac{\\partial S_{\\text{el}}}{\\partial u} = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\frac{d}{df_k}[-f_k \\ln f_k - (1-f_k)\\ln(1-f_k)] \\frac{\\partial f_k}{\\partial u} dk $$\nThe derivative inside the brackets is $\\ln(f_k/(1-f_k))$, which equals $(\\epsilon(k;u)-\\mu)/\\sigma$. Thus:\n$$ \\sigma \\frac{\\partial S_{\\text{el}}}{\\partial u} = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} (\\epsilon(k;u)-\\mu) \\frac{\\partial f_k}{\\partial u} dk $$\nThe derivative of the band energy is:\n$$ \\frac{\\partial E_{\\text{band}}}{\\partial u} = \\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ \\frac{\\partial \\epsilon(k; u)}{\\partial u} f_k + \\epsilon(k;u) \\frac{\\partial f_k}{\\partial u} \\right] dk $$\nCombining these, the force is:\n$$ F(u) = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ \\frac{\\partial \\epsilon}{\\partial u} f_k + \\epsilon \\frac{\\partial f_k}{\\partial u} - (\\epsilon-\\mu) \\frac{\\partial f_k}{\\partial u} \\right] dk = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\left[ \\frac{\\partial \\epsilon}{\\partial u} f_k + \\mu \\frac{\\partial f_k}{\\partial u} \\right] dk $$\nThe problem specifies the chemical potential $\\mu=0$. The expression for the force simplifies significantly to the pure Hellmann-Feynman term:\n$$ F(u) = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} \\frac{\\partial \\epsilon(k; u)}{\\partial u} f(\\epsilon(k; u); \\sigma) dk $$\nWe are asked to evaluate the force at $u=0$. The band dispersion is $\\epsilon(k; u) = -2t \\cos k + g u \\cos k$.\nIts derivative with respect to $u$ is $\\frac{\\partial \\epsilon}{\\partial u} = g \\cos k$.\nAt $u=0$, the dispersion is $\\epsilon(k; 0) = -2t \\cos k$.\nSubstituting these into the force expression:\n$$ F = -\\frac{1}{2\\pi} \\int_{-\\pi}^{\\pi} (g \\cos k) f(-2t \\cos k; \\sigma) dk $$\nPlugging in the form of the Fermi-Dirac function, $f(\\epsilon;\\sigma) = (1 + \\exp(\\epsilon/\\sigma))^{-1}$:\n$$ F(\\sigma) = -\\frac{g}{2\\pi} \\int_{-\\pi}^{\\pi} \\frac{\\cos k}{1 + \\exp\\left(\\frac{-2t \\cos k}{\\sigma}\\right)} dk $$\nThis is the final analytical expression for the force.\n\nTo compute this numerically, we discretize the integral using the specified $N_k$-point midpoint rule on $[-\\pi, \\pi)$. The k-points are $k_j = -\\pi + (j + 1/2)\\Delta k$ for $j \\in \\{0, \\dots, N_k-1\\}$, with $\\Delta k = 2\\pi/N_k$. The integral is approximated by a sum:\n$$ \\int_{-\\pi}^{\\pi} G(k) dk \\approx \\sum_{j=0}^{N_k-1} G(k_j) \\Delta k = \\sum_{j=0}^{N_k-1} G(k_j) \\frac{2\\pi}{N_k} $$\nApplying this to the force expression:\n$$ F(N_k, \\sigma) \\approx -\\frac{g}{2\\pi} \\sum_{j=0}^{N_k-1} \\frac{\\cos k_j}{1 + \\exp\\left(\\frac{-2t \\cos k_j}{\\sigma}\\right)} \\frac{2\\pi}{N_k} $$\nThe factors of $2\\pi$ cancel, yielding the final computational formula:\n$$ F(N_k, \\sigma) = -\\frac{g}{N_k} \\sum_{j=0}^{N_k-1} \\frac{\\cos k_j}{1 + \\exp\\left(\\frac{-2t \\cos k_j}{\\sigma}\\right)} $$\nThe numerical protocol is as follows:\n1. Implement a function `compute_force(Nk, sigma)` based on the formula above. The constants are $t=1$ and $g=0.4$. The evaluation of the Fermi-Dirac function must be numerically robust; standard `numpy` vectorized operations handle potential overflows in `exp` by returning `inf`, which correctly results in an occupation of $0$.\n2. Compute a high-accuracy reference force, $F_{\\mathrm{ref}} = \\text{compute\\_force}(N_{\\mathrm{ref}}, \\sigma_{\\mathrm{ref}})$, using the provided values $N_{\\mathrm{ref}} = 200000$ and $\\sigma_{\\mathrm{ref}} = 10^{-4}$.\n3. For each test case $(N_k, \\sigma, \\tau)$, calculate $F(N_k, \\sigma)$ and determine if the absolute error, $|F(N_k, \\sigma) - F_{\\mathrm{ref}}|$, is less than or equal to the specified tolerance $\\tau$.\n4. Collect the boolean results and format the output as required.\nThis procedure will be implemented in the provided Python script.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the numerical convergence problem for forces in a simple metallic band model.\n    \"\"\"\n    # Model constants as defined in the problem statement\n    T_HOP = 1.0  # Hopping parameter t\n    G_COUPLING = 0.4  # Electron-displacement coupling g\n    \n    # Reference calculation parameters\n    N_REF = 200000  # Reference number of k-points\n    SIGMA_REF = 1e-4  # Reference smearing width\n\n    # Test suite from the problem statement\n    test_cases = [\n        # (Nk, sigma, tolerance)\n        (400, 5e-2, 1e-3),\n        (8, 1e-2, 1e-3),\n        (400, 5e-1, 1e-3),\n        (100, 2e-2, 7e-4),\n        (60, 1e-1, 2e-3),\n        (2, 2e-1, 5e-2),\n    ]\n\n    def compute_force(nk, sigma):\n        \"\"\"\n        Computes the force for a given number of k-points and smearing width.\n        \n        Args:\n            nk (int): Number of k-points in the uniform grid.\n            sigma (float): Smearing width (electronic temperature).\n\n        Returns:\n            float: The calculated force.\n        \"\"\"\n        if nk == 0:\n            return 0.0\n\n        # Create the uniform midpoint k-point grid on [-pi, pi)\n        # k_j = -pi + (j + 0.5) * delta_k\n        delta_k = 2.0 * np.pi / nk\n        k_points = -np.pi + (np.arange(nk) + 0.5) * delta_k\n        \n        cos_k = np.cos(k_points)\n        \n        # Calculate band energies at u=0\n        epsilon = -2.0 * T_HOP * cos_k\n        \n        # Argument for the exponential in the Fermi-Dirac function\n        exp_arg = epsilon / sigma\n        \n        # Calculate Fermi-Dirac occupation numbers.\n        # numpy handles overflow for large positive exp_arg by returning inf,\n        # and 1.0 / (1.0 + inf) correctly evaluates to 0.0.\n        # This ensures numerical stability without manual checks.\n        occupations = 1.0 / (1.0 + np.exp(exp_arg))\n        \n        # Calculate the force using the discretized formula\n        # F = - (g/Nk) * sum(cos(k_j) * f(epsilon_j))\n        force = -G_COUPLING / nk * np.sum(cos_k * occupations)\n        \n        return force\n\n    # Calculate the high-accuracy reference force\n    f_ref = compute_force(N_REF, SIGMA_REF)\n    \n    results = []\n    for nk_test, sigma_test, tau_test in test_cases:\n        # Calculate the force for the current test case\n        f_test = compute_force(nk_test, sigma_test)\n        \n        # Calculate the absolute error\n        error = abs(f_test - f_ref)\n        \n        # Check if the error is within the tolerance\n        is_converged = error <= tau_test\n        results.append(is_converged)\n\n    # Format the final output as a comma-separated list of booleans\n    # e.g., [True,False,True,True,False,True]\n    output_str = f\"[{','.join(map(str, results))}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2900974"}, {"introduction": "Having established the practical need for smearing techniques in metallic systems, a crucial question arises: does this numerical convenience introduce systematic errors, and can we minimize them? This analytical exercise [@problem_id:2901014] takes you under the hood of two popular smearing methods, Fermi-Dirac and Methfessel-Paxton. By deriving and comparing how the smearing-induced bias scales with the smearing width $\\sigma$, you will gain a deep, quantitative understanding of why higher-order smearing schemes are parametrically more accurate and thus superior for calculating sensitive properties like forces and stress.", "problem": "Consider a three-dimensional periodic metallic system with a smooth band structure and a nonvanishing, smooth single-particle density of states near the Fermi level. An integrated observable, such as a Cartesian component of the Hellmann–Feynman force or a stress tensor component, can be written at zero temperature as an energy integral of the form\n$$\nQ_0 \\;=\\; \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,\\Theta\\!\\big(\\mu-\\varepsilon\\big)\\,d\\varepsilon,\n$$\nwhere $g(\\varepsilon)$ is a smooth function of the band energy $\\varepsilon$ that encodes the Brillouin zone average of the observable’s integrand at fixed $\\varepsilon$ (including the effect of the density of states), $\\mu$ is the Fermi level, and $\\Theta$ is the Heaviside step function. In practical Brillouin zone integration, one replaces the discontinuous occupation by a smeared occupation $s\\!\\left((\\varepsilon-\\mu)/\\sigma\\right)$ with width $\\sigma>0$ to reduce $k$-point discretization errors. Two standard choices are:\n- Fermi–Dirac smearing, which corresponds to a finite electronic temperature $T$ with $\\sigma=k_{\\mathrm{B}}T$ and $s_{\\mathrm{FD}}(x) = \\big(1+\\mathrm{e}^{x}\\big)^{-1}$, and\n- first-order Methfessel–Paxton smearing, which uses the cumulative of a Gaussian-based Hermite expansion to approximate $\\Theta$.\n\nDefine the smeared integral\n$$\nQ_{\\sigma} \\;=\\; \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,s\\!\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon,\n$$\nand the smearing-induced bias\n$$\n\\delta Q(\\sigma) \\;=\\; Q_{\\sigma}-Q_{0}.\n$$\nAssume that:\n- $g(\\varepsilon)$ is analytic in a neighborhood of $\\mu$ and its derivatives up to sufficiently high order are bounded,\n- there are no band crossings or van Hove singularities exactly at $\\mu$,\n- and forces or stress components enter only through $g(\\varepsilon)$ so that the only non-analyticity at zero temperature is the discontinuity of $\\Theta$ at $\\mu$.\n\nWhich statement best compares the systematic bias in integrated quantities like forces and stress introduced by first-order Methfessel–Paxton versus Fermi–Dirac smearing in the limit $\\sigma \\to 0$ under the assumptions above?\n\nA. Under Fermi–Dirac smearing, $\\delta Q_{\\mathrm{FD}}(\\sigma)=C_{2}\\,\\sigma^{2}\\,g'(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{4}\\right)$, while under first-order Methfessel–Paxton smearing, $\\delta Q_{\\mathrm{MP1}}(\\sigma)=C_{4}\\,\\sigma^{4}\\,g^{(3)}(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{6}\\right)$; thus first-order Methfessel–Paxton exhibits a parametrically smaller leading bias for small $\\sigma$ for smooth metallic integrands.\n\nB. Fermi–Dirac smearing yields exactly unbiased integrated forces and stress for any $\\sigma>0$ because it is variational, whereas first-order Methfessel–Paxton generically produces a linear bias $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$ due to kernel asymmetry.\n\nC. Both Fermi–Dirac and first-order Methfessel–Paxton smearings have leading bias $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$ because the only non-analyticity is the jump in occupation at $\\mu$.\n\nD. Fermi–Dirac smearing produces an exponentially small bias $\\delta Q_{\\mathrm{FD}}(\\sigma)=\\mathcal{O}\\!\\big(\\mathrm{e}^{-c/\\sigma}\\big)$ for some $c>0$ when $g$ is smooth, whereas first-order Methfessel–Paxton has an algebraic bias $\\delta Q_{\\mathrm{MP1}}(\\sigma)=\\mathcal{O}\\!\\left(\\sigma^{2}\\right)$.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- An integrated observable at zero temperature is given by $Q_0 = \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,\\Theta(\\mu-\\varepsilon)\\,d\\varepsilon$.\n- $g(\\varepsilon)$ is a smooth function of band energy $\\varepsilon$.\n- $\\mu$ is the Fermi level.\n- $\\Theta$ is the Heaviside step function.\n- A smeared occupation $s((\\varepsilon-\\mu)/\\sigma)$ with width $\\sigma>0$ is used.\n- The smeared integral is $Q_{\\sigma} = \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,s((\\varepsilon-\\mu)/\\sigma)\\,d\\varepsilon$.\n- The smearing-induced bias is $\\delta Q(\\sigma) = Q_{\\sigma}-Q_{0}$.\n- Two smearing functions are considered: Fermi-Dirac, $s_{\\mathrm{FD}}(x) = (1+\\mathrm{e}^{x})^{-1}$ with $\\sigma=k_{\\mathrm{B}}T$, and first-order Methfessel-Paxton, $s_{\\mathrm{MP1}}$.\n- Assumptions: $g(\\varepsilon)$ is analytic near $\\mu$; its derivatives are bounded; no band crossings or van Hove singularities are exactly at $\\mu$; non-analyticity comes only from $\\Theta(\\mu-\\varepsilon)$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded. It addresses a standard and important topic in computational solid-state physics and quantum chemistry: the systematic errors introduced by smearing techniques used for Brillouin zone integration in metals. The formulation is mathematically precise and based on established theoretical analysis of these methods. The assumptions provided are standard for such a derivation.\n\nThe problem is well-posed. It asks for a comparison of the leading-order asymptotic behavior of the bias $\\delta Q(\\sigma)$ as $\\sigma \\to 0$ for two well-defined methods. A unique answer can be derived from these premises.\n\nThe problem is objective. The definitions and question are stated in clear, unambiguous mathematical language.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A rigorous solution can be derived.\n\nWe begin the derivation by expressing the bias $\\delta Q(\\sigma)$ in a form amenable to a series expansion in $\\sigma$. Let $\\phi(\\varepsilon)$ be an antiderivative of $g(\\varepsilon)$, such that $\\phi'(\\varepsilon) = g(\\varepsilon)$. We can write the zero-temperature observable $Q_0$ by integrating by parts:\n$$\nQ_0 = \\int_{-\\infty}^{+\\infty} \\phi'(\\varepsilon)\\,\\Theta(\\mu-\\varepsilon)\\,d\\varepsilon = \\big[\\phi(\\varepsilon)\\Theta(\\mu-\\varepsilon)\\big]_{-\\infty}^{+\\infty} - \\int_{-\\infty}^{+\\infty} \\phi(\\varepsilon) \\frac{d}{d\\varepsilon}\\Theta(\\mu-\\varepsilon)\\,d\\varepsilon\n$$\nAssuming $g(\\varepsilon)$ vanishes sufficiently fast as $|\\varepsilon| \\to \\infty$, the boundary terms are zero. Using $\\frac{d}{d\\varepsilon}\\Theta(\\mu-\\varepsilon) = -\\delta(\\varepsilon-\\mu)$, we find $Q_0 = \\phi(\\mu)$.\n\nThe smeared observable $Q_{\\sigma}$ is given by:\n$$\nQ_{\\sigma} = \\int_{-\\infty}^{+\\infty} g(\\varepsilon)\\,s\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon = \\int_{-\\infty}^{+\\infty} \\phi'(\\varepsilon)\\,s\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon\n$$\nIntegrating by parts again:\n$$\nQ_{\\sigma} = \\left[\\phi(\\varepsilon)s\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\right]_{-\\infty}^{+\\infty} - \\int_{-\\infty}^{+\\infty} \\phi(\\varepsilon) \\frac{1}{\\sigma} s'\\left(\\frac{\\varepsilon-\\mu}{\\sigma}\\right)\\,d\\varepsilon\n$$\nThe smearing functions $s(x)$ have the property $s(-\\infty)=1$ and $s(+\\infty)=0$. Assuming $\\phi(-\\infty)=0$ (by choice of integration constant), the boundary terms vanish. We then change the integration variable to $x = (\\varepsilon-\\mu)/\\sigma$, which gives $d\\varepsilon = \\sigma dx$:\n$$\nQ_{\\sigma} = - \\int_{-\\infty}^{+\\infty} \\phi(\\mu+\\sigma x)\\,s'(x)\\,dx\n$$\nWe now expand $\\phi(\\mu+\\sigma x)$ in a Taylor series around $\\mu$, which is permissible since $g(\\varepsilon)$, and therefore $\\phi(\\varepsilon)$, is assumed to be analytic at $\\mu$:\n$$\n\\phi(\\mu+\\sigma x) = \\sum_{k=0}^{\\infty} \\frac{\\phi^{(k)}(\\mu)}{k!} (\\sigma x)^k = \\phi(\\mu) + \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} (\\sigma x)^k\n$$\nSubstituting this into the expression for $Q_{\\sigma}$:\n$$\nQ_{\\sigma} = - \\int_{-\\infty}^{+\\infty} \\left(\\phi(\\mu) + \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} (\\sigma x)^k\\right) s'(x)\\,dx\n$$\n$$\nQ_{\\sigma} = -\\phi(\\mu)\\int_{-\\infty}^{+\\infty} s'(x)\\,dx - \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} \\sigma^k \\int_{-\\infty}^{+\\infty} x^k s'(x)\\,dx\n$$\nThe integral $\\int_{-\\infty}^{+\\infty} s'(x)\\,dx = s(+\\infty) - s(-\\infty) = 0 - 1 = -1$. Thus, the first term is $\\phi(\\mu) = Q_0$.\nThe bias is then $\\delta Q(\\sigma) = Q_{\\sigma} - Q_0$:\n$$\n\\delta Q(\\sigma) = - \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} \\sigma^k \\int_{-\\infty}^{+\\infty} x^k s'(x)\\,dx\n$$\nThis general formula allows us to analyze the bias for any given smearing function $s(x)$ by examining the moments of its derivative, $I_k = \\int_{-\\infty}^{+\\infty} x^k s'(x)\\,dx$.\n\n**Analysis for Fermi-Dirac Smearing ($s_{\\mathrm{FD}}$)**\nThe smearing function is $s_{\\mathrm{FD}}(x) = (1+\\mathrm{e}^x)^{-1}$. Its derivative is $s'_{\\mathrm{FD}}(x) = -\\mathrm{e}^x(1+\\mathrm{e}^x)^{-2}$.\nLet us check the symmetry of the derivative:\n$$\ns'_{\\mathrm{FD}}(-x) = -\\mathrm{e}^{-x}(1+\\mathrm{e}^{-x})^{-2} = -\\mathrm{e}^{-x} \\left(\\frac{\\mathrm{e}^x+1}{\\mathrm{e}^x}\\right)^{-2} = -\\mathrm{e}^{-x} \\frac{\\mathrm{e}^{2x}}{(\\mathrm{e}^x+1)^2} = -\\frac{\\mathrm{e}^x}{(1+\\mathrm{e}^x)^2} = s'_{\\mathrm{FD}}(x)\n$$\nThe derivative $s'_{\\mathrm{FD}}(x)$ is an even function. Consequently, all its odd moments vanish: $I_k = 0$ for $k=1, 3, 5, \\dots$.\nThe bias expansion becomes:\n$$\n\\delta Q_{\\mathrm{FD}}(\\sigma) = - \\frac{g'(\\mu)}{2!} \\sigma^2 I_2 - \\frac{g'''(\\mu)}{4!} \\sigma^4 I_4 - \\dots\n$$\nThe first non-vanishing moment is $I_2 = \\int_{-\\infty}^{+\\infty} x^2 s'_{\\mathrm{FD}}(x)\\,dx$. This is a standard integral from the Sommerfeld expansion, and its value is $-\\pi^2/3$.\nTherefore, the leading term of the bias is:\n$$\n\\delta Q_{\\mathrm{FD}}(\\sigma) = - \\frac{g'(\\mu)}{2} \\sigma^2 \\left(-\\frac{\\pi^2}{3}\\right) + \\mathcal{O}(\\sigma^4) = \\frac{\\pi^2}{6} \\sigma^2 g'(\\mu) + \\mathcal{O}(\\sigma^4)\n$$\nThe leading bias for Fermi-Dirac smearing is of order $\\sigma^2$ and is proportional to $g'(\\mu)$.\n\n**Analysis for First-Order Methfessel-Paxton Smearing ($s_{\\mathrm{MP1}}$)**\nThe Methfessel-Paxton smearing functions $s_{\\mathrm{MP,N}}(x)$ are constructed such that the approximation to the delta function, $\\tilde{\\delta}_N(x) = -s'_{\\mathrm{MP,N}}(x)$, correctly reproduces the first $2N+2$ moments of the true delta function. That is, $\\int_{-\\infty}^{+\\infty} x^m \\tilde{\\delta}_N(x) dx = \\delta_{m0}$ for $m = 0, 1, \\dots, 2N+1$. In terms of the moments of $s'$, this means $I_m = -\\delta_{m0}$ for $m=0, \\dots, 2N+1$.\nFor first-order MP smearing, $N=1$. The conditions are:\n- $I_0 = \\int s'_{\\mathrm{MP1}}(x) dx = -1$\n- $I_1 = \\int x s'_{\\mathrm{MP1}}(x) dx = 0$\n- $I_2 = \\int x^2 s'_{\\mathrm{MP1}}(x) dx = 0$\n- $I_3 = \\int x^3 s'_{\\mathrm{MP1}}(x) dx = 0$\nThe first moment that is not constrained to be zero is $I_4$. The function $\\tilde{\\delta}_1(x)$ is even, so all its odd moments are zero, which is consistent with the conditions for $I_1$ and $I_3$. The condition $I_2=0$ is the key improvement over simpler methods like Gaussian or Fermi-Dirac smearing.\n\nSubstituting these moments into the general bias formula:\n$$\n\\delta Q_{\\mathrm{MP1}}(\\sigma) = - \\sum_{k=1}^{\\infty} \\frac{g^{(k-1)}(\\mu)}{k!} \\sigma^k I_k\n$$\nThe terms for $k=1, 2, 3$ become zero because $I_1=I_2=I_3=0$. The first non-vanishing term corresponds to $k=4$:\n$$\n\\delta Q_{\\mathrm{MP1}}(\\sigma) = - \\frac{g^{(3)}(\\mu)}{4!} \\sigma^4 I_4 + \\mathcal{O}(\\sigma^6)\n$$\nSince $I_4 \\neq 0$ by construction, the leading bias for first-order Methfessel-Paxton smearing is of order $\\sigma^4$ and proportional to the third derivative, $g'''(\\mu)$.\n\n**Option-by-Option Analysis**\n\nA. Under Fermi-Dirac smearing, $\\delta Q_{\\mathrm{FD}}(\\sigma)=C_{2}\\,\\sigma^{2}\\,g'(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{4}\\right)$, while under first-order Methfessel-Paxton smearing, $\\delta Q_{\\mathrm{MP1}}(\\sigma)=C_{4}\\,\\sigma^{4}\\,g^{(3)}(\\mu)+\\mathcal{O}\\!\\left(\\sigma^{6}\\right)$; thus first-order Methfessel-Paxton exhibits a parametrically smaller leading bias for small $\\sigma$ for smooth metallic integrands.\nThis statement is fully consistent with our derivation. We found $\\delta Q_{\\mathrm{FD}}(\\sigma) \\propto \\sigma^2 g'(\\mu)$ and $\\delta Q_{\\mathrm{MP1}}(\\sigma) \\propto \\sigma^4 g'''(\\mu)$. For small $\\sigma$, the $\\mathcal{O}(\\sigma^4)$ bias is parametrically smaller than the $\\mathcal{O}(\\sigma^2)$ bias.\nVerdict: **Correct**.\n\nB. Fermi-Dirac smearing yields exactly unbiased integrated forces and stress for any $\\sigma>0$ because it is variational, whereas first-order Methfessel-Paxton generically produces a linear bias $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$ due to kernel asymmetry.\nThis statement is incorrect. Fermi-Dirac smearing produces a bias of $\\mathcal{O}(\\sigma^2)$, not zero. The variational nature of the Mermin free energy does not imply that ground-state observables are recovered exactly. Furthermore, first-order Methfessel-Paxton smearing does not produce a linear bias; its associated $s'(x)$ is an even function, which guarantees the $\\mathcal{O}(\\sigma)$ term vanishes.\nVerdict: **Incorrect**.\n\nC. Both Fermi-Dirac and first-order Methfessel-Paxton smearings have leading bias $\\delta Q(\\sigma)=\\mathcal{O}(\\sigma)$ because the only non-analyticity is the jump in occupation at $\\mu$.\nThis statement is incorrect. As shown in the derivation, the leading bias for FD is $\\mathcal{O}(\\sigma^2)$ and for MP1 is $\\mathcal{O}(\\sigma^4)$. The $\\mathcal{O}(\\sigma)$ term vanishes for any smearing scheme where $s'(x)$ is an even function, which is the case for both FD and MP methods.\nVerdict: **Incorrect**.\n\nD. Fermi-Dirac smearing produces an exponentially small bias $\\delta Q_{\\mathrm{FD}}(\\sigma)=\\mathcal{O}\\!\\big(\\mathrm{e}^{-c/\\sigma}\\big)$ for some $c>0$ when $g$ is smooth, whereas first-order Methfessel-Paxton has an algebraic bias $\\delta Q_{\\mathrm{MP1}}(\\sigma)=\\mathcal{O}\\!\\left(\\sigma^{2}\\right)$.\nThis statement is incorrect. The bias from Fermi-Dirac smearing is algebraic, $\\mathcal{O}(\\sigma^2)$, as given by the Sommerfeld expansion. The bias for first-order Methfessel-Paxton is $\\mathcal{O}(\\sigma^4)$, not $\\mathcal{O}(\\sigma^2)$.\nVerdict: **Incorrect**.", "answer": "$$\\boxed{A}$$", "id": "2901014"}]}