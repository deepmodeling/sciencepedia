{"hands_on_practices": [{"introduction": "Before diving into complex calculations, it is essential to master the fundamentals of how basis sets are constructed. This first exercise focuses on deconstructing the notation of a widely used Pople-style basis set. By learning to translate a name like 6-31G(d) into a concrete count of atomic functions, you build the foundational skill needed to understand and verify any quantum chemical calculation setup. This practice will sharpen your ability to determine the size of a calculation from its name, a crucial step for estimating computational cost. [@problem_id:2916487]", "problem": "Consider the use of contracted Gaussian-type orbitals (GTOs) in a linear combination of atomic orbitals framework for electronic structure methods. In Pople-style basis sets, an sp shell denotes a pair of $s$-type and $p$-type contracted functions that share the same Gaussian exponents but have independent contraction coefficients for the $s$ and $p$ parts. The 6-31G(d) basis is specified as follows: for a second-row main group atom such as carbon, there are three contracted sp shells formed from primitive sets of sizes $6$, $3$, and $1$; for hydrogen, there are two contracted $s$-type shells formed from primitive sets of sizes $3$ and $1$. The (d) polarization augmentation denotes the addition of one $d$-type polarization shell on heavy atoms only. Assume in this problem that the $d$-type polarization functions are Cartesian (not spherical), and that polarization is added only to carbon.\n\nUsing only the definitions above together with the combinatorial structure of Cartesian GTOs of angular momentum $l$ and the meaning of an sp shell, determine the total number of Cartesian basis functions for methane $\\text{CH}_4$ described with 6-31G(d) under these assumptions. Express your answer as an integer with no units.", "solution": "The problem requires the determination of the total number of Cartesian basis functions for the methane molecule, $\\text{CH}_4$, using a specific basis set denoted as 6-31G(d). The problem provides explicit definitions for the construction of this basis set for carbon and hydrogen atoms, and these definitions must be followed precisely, superceding any standard, external conventions associated with the basis set name.\n\nThe total number of basis functions is the sum of the basis functions contributed by each atom in the molecule. Methane consists of one carbon atom ($\\text{C}$) and four hydrogen atoms ($\\text{H}$). We must therefore calculate the number of basis functions for one carbon atom and four hydrogen atoms and sum them.\n\nThe number of Cartesian Gaussian-type orbitals (GTOs) for a given angular momentum quantum number $l$ is given by the formula $\\frac{(l+1)(l+2)}{2}$.\nFor an $s$-type shell, $l=0$, which corresponds to $\\frac{(0+1)(0+2)}{2} = 1$ basis function.\nFor a $p$-type shell, $l=1$, which corresponds to $\\frac{(1+1)(1+2)}{2} = 3$ basis functions (these are the $p_x$, $p_y$, and $p_z$ orbitals).\nFor a $d$-type shell, $l=2$, which corresponds to $\\frac{(2+1)(2+2)}{2} = 6$ basis functions, as specified to be Cartesian in the problem.\n\nFirst, let us analyze the basis set for the carbon atom. The problem states: \"for a second-row main group atom such as carbon, there are three contracted sp shells formed from primitive sets of sizes $6$, $3$, and $1$\". An sp shell is defined as \"a pair of $s$-type and $p$-type contracted functions\". This means for each such shell, there is one $s$-type function and a set of $p$-type functions.\nA single sp shell thus contributes $1$ ($s$-function) $+ 3$ ($p$-functions) $= 4$ basis functions.\nSince the carbon atom is described by three such sp shells, the total number of basis functions from these shells is $3 \\times 4 = 12$.\n\nNext, we consider the polarization functions. The notation \"(d)\" indicates the addition of \"one $d$-type polarization shell on heavy atoms only\". Carbon is a heavy atom. The problem specifies these are Cartesian $d$-functions. A single shell of Cartesian $d$-functions ($l=2$) comprises $6$ basis functions.\nTherefore, the total number of basis functions for the single carbon atom is the sum of functions from the sp shells and the polarization shell: $12 + 6 = 18$.\n\nSecond, we analyze the basis set for a hydrogen atom. The problem states: \"for hydrogen, there are two contracted $s$-type shells formed from primitive sets of sizes $3$ and $1$\".\nEach $s$-type shell contributes $1$ basis function.\nSince there are two such shells for hydrogen, the total number of basis functions per hydrogen atom is $2 \\times 1 = 2$.\nPolarization functions are not added to hydrogen atoms in this basis set.\n\nFinally, we calculate the total number of basis functions for the $\\text{CH}_4$ molecule. The molecule contains $1$ carbon atom and $4$ hydrogen atoms.\nThe total number of functions is the sum of contributions from all atoms:\nTotal functions = (Number of functions on C) + $4 \\times$ (Number of functions on H)\nTotal functions = $18 + 4 \\times 2 = 18 + 8 = 26$.\n\nThe calculation is based strictly on the definitions provided within the problem statement itself, which is the only correct approach.", "answer": "$$\\boxed{26}$$", "id": "2916487"}, {"introduction": "Having explored the Pople family, we now turn our attention to the modern and systematically improvable Karlsruhe def2 basis sets. This problem challenges you to determine the size of a def2-TZVP basis, introducing the crucial distinction between Cartesian and spherical harmonic representations of atomic orbitals. Understanding this difference is key, as the number of functions for higher angular momenta ($l \\ge 2$) changes depending on the representation, which has direct implications for computational efficiency. [@problem_id:2916478]", "problem": "A carbon monoxide molecule has one carbon atom and one oxygen atom. Consider a segmented contracted Gaussian basis of the Karlsruhe def2 family at the triple-zeta valence plus polarization level (def2-TZVP), used in its pure spherical-harmonic form. A contracted Gaussian shell of angular momentum quantum number $l$ spans the spherical harmonics with magnetic quantum numbers $m=-l,\\dots,+l$, yielding a multiplicity of $2l+1$ basis functions per contracted shell. The relevant angular momenta are $l=0$ for $s$, $l=1$ for $p$, $l=2$ for $d$, and $l=3$ for $f$.\n\nAssume the following contracted shell composition (number of contracted shells of each angular momentum) for the def2-TZVP basis:\n- Carbon: 5 $s$-type shells, 4 $p$-type shells, 2 $d$-type shells, 1 $f$-type shell.\n- Oxygen: 6 $s$-type shells, 4 $p$-type shells, 2 $d$-type shells, 1 $f$-type shell.\n\nUsing only the definitions above, compute the number of basis functions located on carbon, the number on oxygen, and the total number for the molecule when employing spherical harmonics. Provide your final answer as three integers in the order carbon, oxygen, total. No rounding is required.", "solution": "The total number of basis functions on an atom is the sum of the basis functions contributed by each of its contracted shells. For a shell with a given angular momentum quantum number $l$, the number of basis functions is determined by the number of spherical harmonics for that $l$. The problem correctly states this multiplicity is $2l+1$.\n\nFirst, we determine the number of basis functions per shell for each angular momentum type:\n- For an $s$-type shell, $l=0$. The number of functions is $2 \\times 0 + 1 = 1$.\n- For a $p$-type shell, $l=1$. The number of functions is $2 \\times 1 + 1 = 3$.\n- For a $d$-type shell, $l=2$. The number of functions is $2 \\times 2 + 1 = 5$.\n- For an $f$-type shell, $l=3$. The number of functions is $2 \\times 3 + 1 = 7$.\n\nNext, we calculate the total number of basis functions for the carbon atom, denoted $N_C$. We sum the contributions from all of its specified shells:\n$$N_C = (\\text{number of } s \\text{ shells} \\times 1) + (\\text{number of } p \\text{ shells} \\times 3) + (\\text{number of } d \\text{ shells} \\times 5) + (\\text{number of } f \\text{ shells} \\times 7)$$\nUsing the provided data for carbon:\n$$N_C = (5 \\times 1) + (4 \\times 3) + (2 \\times 5) + (1 \\times 7)$$\n$$N_C = 5 + 12 + 10 + 7 = 34$$\nThus, there are $34$ basis functions centered on the carbon atom.\n\nSimilarly, we calculate the total number of basis functions for the oxygen atom, denoted $N_O$.\n$$N_O = (\\text{number of } s \\text{ shells} \\times 1) + (\\text{number of } p \\text{ shells} \\times 3) + (\\text{number of } d \\text{ shells} \\times 5) + (\\text{number of } f \\text{ shells} \\times 7)$$\nUsing the provided data for oxygen:\n$$N_O = (6 \\times 1) + (4 \\times 3) + (2 \\times 5) + (1 \\times 7)$$\n$$N_O = 6 + 12 + 10 + 7 = 35$$\nThus, there are $35$ basis functions centered on the oxygen atom.\n\nThe total number of basis functions for the carbon monoxide molecule, $N_{total}$, is the sum of the basis functions on each constituent atom.\n$$N_{total} = N_C + N_O$$\n$$N_{total} = 34 + 35 = 69$$\nThe total number of basis functions for the CO molecule is $69$.\n\nThe required result is the set of three integers corresponding to the number of basis functions on carbon, on oxygen, and the total for the molecule.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n34 & 35 & 69\n\\end{pmatrix}\n}\n$$", "id": "2916478"}, {"introduction": "A single calculation provides an answer, but how reliable is it? The true power of a basis set family like Karlsruhe def2 lies in its systematic construction, which allows us to estimate the result at the theoretical Complete Basis Set (CBS) limit. This advanced practice guides you through deriving and applying a two-point extrapolation formula, using a sequence of calculations to predict the property value that would be obtained with an infinitely large basis set. This exercise shifts the focus from merely using basis sets to critically assessing their convergence and systematically improving results, highlighting a key advantage of the def2 family over older, non-systematic Pople-style bases. [@problem_id:2916458]", "problem": "You are asked to formalize and implement a simple, principled convergence and extrapolation analysis for the isotropic static dipole polarizability of benzene computed with Karlsruhe def2 Gaussian-type orbital (GTO) basis sets. The Complete Basis Set (CBS) limit, denoted by $\\,\\alpha_{\\infty}\\,$, is assumed to be approached by the inverse-power cardinal-number model\n$$\n\\alpha(X) \\;=\\; \\alpha_{\\infty} \\;+\\; A\\,X^{-p},\n$$\nwhere $\\,X\\,$ is the cardinal number associated with the basis, $\\,A\\,$ is an $X$-independent amplitude, and $\\,p>0\\,$ is a chosen exponent that characterizes the asymptotic convergence rate for the property of interest. For the Karlsruhe def2 family, use the mapping $\\{\\text{def2-SVP},\\text{def2-TZVP},\\text{def2-QZVP}\\}\\mapsto \\{X{=}2,X{=}3,X{=}4\\}$, respectively. In contrast, Pople-style bases (for example, 6-31G(d)) do not form a strict cardinal series; you must not assume a cardinal-number model for Pople-style bases in this task.\n\nStarting from the model above and only the algebraic properties of real numbers, derive a two-point extrapolation formula that eliminates the unknown amplitude $\\,A\\,$ using the def2-TZVP and def2-QZVP values (that is, $\\,X{=}3\\,$ and $\\,X{=}4\\,$). Your program must implement this derived two-point formula to estimate $\\,\\alpha_{\\infty}\\,$ from the pair $\\left(\\alpha(3),\\alpha(4)\\right)$ and a supplied exponent $\\,p\\,$. Additionally, to characterize finite-basis convergence behavior across $\\{X{=}2,3,4\\}$, your program must compute a monotonicity indicator that is true if and only if the sequence $\\alpha(2),\\alpha(3),\\alpha(4)$ is monotone nondecreasing or monotone nonincreasing.\n\nFor each test case, your program must compute and report the following three quantities:\n- The two-point CBS estimate $\\,\\alpha_{\\infty}\\,$ (from $\\,X{=}3\\,$ and $\\,X{=}4\\,$ only), in atomic units of volume ($\\,a_0^3\\,$), rounded to $\\,6\\,$ decimal places.\n- The relative correction from def2-QZVP to CBS, defined as $\\,\\delta \\equiv \\dfrac{\\alpha_{\\infty}-\\alpha(4)}{\\alpha_{\\infty}}\\,$, reported as a decimal (unitless), rounded to $\\,6\\,$ decimal places.\n- A boolean monotonicity flag indicating whether $\\alpha(2),\\alpha(3),\\alpha(4)$ is monotone nondecreasing or monotone nonincreasing.\n\nUse the following test suite, where each case is a quadruple $\\big(\\alpha(2),\\alpha(3),\\alpha(4),p\\big)$ and all polarizabilities are in $\\,a_0^3$:\n- Case $\\,1$: $\\;(66.7,\\,68.3,\\,69.0,\\,3.0)$\n- Case $\\,2$: $\\;(69.0,\\,69.2,\\,69.25,\\,4.0)$\n- Case $\\,3$: $\\;(68.5,\\,69.1,\\,68.95,\\,3.0)$\n- Case $\\,4$: $\\;(64.5,\\,67.5,\\,68.7,\\,3.0)$\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each test case result is itself a bracketed, comma-separated list in the order $\\left[\\alpha_{\\infty},\\delta,\\text{monotone}\\right]$. For example, a line of the form\n$[[\\alpha_{\\infty}^{(1)}, \\delta^{(1)}, True], [\\alpha_{\\infty}^{(2)}, \\delta^{(2)}, False], \\dots]$\nwith all floating-point values rounded to $\\,6\\,$ decimal places. All $\\alpha$ values must be understood in $\\,a_0^3$ and all $\\delta$ values must be decimals (not percentages).", "solution": "We begin by deriving the two-point extrapolation formula for the Complete Basis Set (CBS) limit, $\\alpha_{\\infty}$, from the provided inverse-power model:\n$$\n\\alpha(X) = \\alpha_{\\infty} + A X^{-p}\n$$\nHere, $\\alpha(X)$ is the computed property for a basis set with cardinal number $X$, $A$ is an amplitude, and $p$ is a fixed exponent. We are given data for the Karlsruhe def2 series, where def2-TZVP and def2-QZVP correspond to cardinal numbers $X=3$ and $X=4$, respectively.\n\nWe formulate a system of two linear equations for the two unknowns, $\\alpha_{\\infty}$ and $A$, using the data points $(\\alpha(3), 3)$ and $(\\alpha(4), 4)$:\n$$\n\\alpha(3) = \\alpha_{\\infty} + A \\cdot 3^{-p} \\quad (\\text{Eq. 1})\n$$\n$$\n\\alpha(4) = \\alpha_{\\infty} + A \\cdot 4^{-p} \\quad (\\text{Eq. 2})\n$$\nOur objective is to solve for $\\alpha_{\\infty}$ by eliminating the unknown amplitude $A$. We can express $A$ from both equations:\nFrom Eq. 1:\n$$\nA = (\\alpha(3) - \\alpha_{\\infty}) \\cdot 3^p\n$$\nFrom Eq. 2:\n$$\nA = (\\alpha(4) - \\alpha_{\\infty}) \\cdot 4^p\n$$\nBy equating these two expressions for $A$, we eliminate the amplitude:\n$$\n(\\alpha(3) - \\alpha_{\\infty}) \\cdot 3^p = (\\alpha(4) - \\alpha_{\\infty}) \\cdot 4^p\n$$\nWe now solve this equation for $\\alpha_{\\infty}$. Expanding both sides gives:\n$$\n\\alpha(3) \\cdot 3^p - \\alpha_{\\infty} \\cdot 3^p = \\alpha(4) \\cdot 4^p - \\alpha_{\\infty} \\cdot 4^p\n$$\nRearranging the terms to isolate $\\alpha_{\\infty}$:\n$$\n\\alpha_{\\infty} \\cdot 4^p - \\alpha_{\\infty} \\cdot 3^p = \\alpha(4) \\cdot 4^p - \\alpha(3) \\cdot 3^p\n$$\nFactoring out $\\alpha_{\\infty}$:\n$$\n\\alpha_{\\infty} (4^p - 3^p) = 4^p \\alpha(4) - 3^p \\alpha(3)\n$$\nProvided that $p \\neq 0$ (which is stated as $p>0$), the term $(4^p - 3^p)$ is non-zero, and we can divide by it to obtain the final expression for the CBS-extrapolated value:\n$$\n\\alpha_{\\infty} = \\frac{4^p \\alpha(4) - 3^p \\alpha(3)}{4^p - 3^p}\n$$\nThis is the required two-point extrapolation formula. It will be used to compute the CBS limit for each test case.\n\nNext, the relative correction from the def2-QZVP value to the CBS limit is defined as:\n$$\n\\delta = \\frac{\\alpha_{\\infty} - \\alpha(4)}{\\alpha_{\\infty}}\n$$\nThis quantity is dimensionless and will be computed using the calculated $\\alpha_{\\infty}$ and the provided $\\alpha(4)$.\n\nFinally, we must determine if the sequence of finite-basis-set values, $(\\alpha(2), \\alpha(3), \\alpha(4))$, is monotonic. A sequence is monotonic if it is either monotone nondecreasing or monotone nonincreasing.\n- A sequence $(a_1, a_2, a_3)$ is monotone nondecreasing if $a_1 \\le a_2 \\le a_3$.\n- A sequence $(a_1, a_2, a_3)$ is monotone nonincreasing if $a_1 \\ge a_2 \\ge a_3$.\nA boolean flag will be set to true if either of these conditions is met for the sequence $(\\alpha(2), \\alpha(3), \\alpha(4))$, and false otherwise. This provides a simple check on the convergence behavior of the calculation. A non-monotonic sequence can indicate irregularities in the basis set family or that the asymptotic convergence regime has not yet been reached.\n\nThe implementation will now proceed by applying these derived formulae and logic to the provided test cases. All floating-point results must be rounded to $6$ decimal places as specified.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the basis set convergence and extrapolation problem for the given test cases.\n    \"\"\"\n\n    test_cases = [\n        # Case 1: (alpha(2), alpha(3), alpha(4), p) in a_0^3\n        (66.7, 68.3, 69.0, 3.0),\n        # Case 2\n        (69.0, 69.2, 69.25, 4.0),\n        # Case 3\n        (68.5, 69.1, 68.95, 3.0),\n        # Case 4\n        (64.5, 67.5, 68.7, 3.0),\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        a2, a3, a4, p = case\n        \n        # 1. Compute the two-point CBS estimate alpha_infinity\n        # Formula: alpha_inf = (4^p * a4 - 3^p * a3) / (4^p - 3^p)\n        try:\n            x3_p = np.power(3.0, p)\n            x4_p = np.power(4.0, p)\n            \n            numerator = x4_p * a4 - x3_p * a3\n            denominator = x4_p - x3_p\n            \n            # Avoid division by zero, although p > 0 ensures denominator != 0\n            if denominator == 0:\n                # This case is not expected with p > 0\n                raise ValueError(\"Denominator is zero, p must be non-zero.\")\n\n            alpha_inf = numerator / denominator\n        except (ValueError, ZeroDivisionError) as e:\n            # In a real scenario, handle this error properly.\n            # For this problem, we assume valid inputs where this does not occur.\n            alpha_inf = float('nan')\n\n        # 2. Compute the relative correction delta\n        # Formula: delta = (alpha_inf - a4) / alpha_inf\n        try:\n            # Avoid division by zero if alpha_inf is zero\n            if alpha_inf == 0:\n                delta = float('inf') if a4 != 0 else 0.0\n            else:\n                 delta = (alpha_inf - a4) / alpha_inf\n        except ZeroDivisionError:\n            delta = float('nan')\n\n        # 3. Compute the boolean monotonicity flag\n        # True if the sequence (a2, a3, a4) is monotone nondecreasing or nonincreasing.\n        is_nondecreasing = (a2 <= a3) and (a3 <= a4)\n        is_nonincreasing = (a2 >= a3) and (a3 >= a4)\n        is_monotone = is_nondecreasing or is_nonincreasing\n        \n        # We round the floating point numbers here before appending.\n        # However, the final formatting string will enforce 6 decimal places.\n        all_results.append([alpha_inf, delta, is_monotone])\n\n    # Format the final output string exactly as required.\n    # The format specifier \":.6f\" handles rounding and ensures 6 decimal places.\n    result_strings = []\n    for r in all_results:\n        alpha_inf_str = f\"{r[0]:.6f}\"\n        delta_str = f\"{r[1]:.6f}\"\n        monotone_str = str(r[2])\n        result_strings.append(f\"[{alpha_inf_str},{delta_str},{monotone_str}]\")\n        \n    final_output = f\"[{','.join(result_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "2916458"}]}