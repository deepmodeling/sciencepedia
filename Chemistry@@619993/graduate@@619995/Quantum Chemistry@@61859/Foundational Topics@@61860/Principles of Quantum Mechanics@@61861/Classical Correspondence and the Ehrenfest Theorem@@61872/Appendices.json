{"hands_on_practices": [{"introduction": "To begin our hands-on exploration, we first address a foundational aspect of the Ehrenfest theorem. While the theorem perfectly equates the time evolution of the average momentum with the expectation value of the force, $\\frac{d\\langle \\hat{p} \\rangle}{dt} = \\langle -\\nabla V \\rangle$, a common misconception is to equate $\\langle -\\nabla V(\\hat{x}) \\rangle$ with the classical force at the center of the wavepacket, $-\\nabla V(\\langle \\hat{x} \\rangle)$. This practice [@problem_id:437308] allows you to perform a direct calculation of the leading-order quantum correction to the classical force for a wavepacket in a general anharmonic potential. By doing so, you will gain a concrete understanding of how the finite spatial extent of a quantum state probes the curvature of the potential, leading to an effective force that deviates from the classical ideal.", "problem": "In the framework of the correspondence principle, Ehrenfest's theorem guarantees that for a sufficiently localized wave packet, the expectation values of quantum operators evolve according to classical equations of motion. For a particle of mass $m$ moving in a one-dimensional potential $V(x)$, the theorem for momentum evolution is given by $\\frac{d\\langle \\hat{p} \\rangle}{dt} = \\langle F(\\hat{x}) \\rangle$, where $F(x) = -dV/dx$ is the classical force function.\n\nFor a general anharmonic potential, the expectation value of the force, $\\langle F(\\hat{x}) \\rangle$, is not equal to the classical force evaluated at the center of the wave packet, $F_{cl} = F(\\langle \\hat{x} \\rangle)$. This discrepancy gives rise to quantum corrections that modify the classical trajectory of the packet's center.\n\nConsider a particle of mass $m$ prepared in a coherent state of a simple harmonic oscillator with natural frequency $\\omega_0$. At a specific moment in time, this state is described by a wave packet with an expectation value of position $\\langle \\hat{x} \\rangle = x_0$. The particle is subject to an external anharmonic potential given by\n$$V(x) = c_2 x^2 + c_3 x^3 + c_4 x^4$$\nwhere $c_2, c_3,$ and $c_4$ are constants.\n\nCalculate the leading-order quantum correction to the classical force, defined as $\\delta F = \\langle F(\\hat{x}) \\rangle - F_{cl}$. Express your answer in terms of $m, \\hbar, \\omega_0, c_3, c_4,$ and $x_0$.", "solution": "1. Ehrenfest theorem for momentum:\n$$\\frac{d\\langle \\hat p\\rangle}{dt}=\\langle F(\\hat x)\\rangle,\\quad F(x)=-\\frac{dV}{dx}.$$\n\n2. For $V(x)=c_2x^2+c_3x^3+c_4x^4$,\n$$F(\\hat x)=-\\bigl(2c_2\\hat x+3c_3\\hat x^2+4c_4\\hat x^3\\bigr).$$\nClassical force at $\\langle\\hat x\\rangle=x_0$:\n$$F_{cl}=-\\bigl(2c_2x_0+3c_3x_0^2+4c_4x_0^3\\bigr).$$\n\n3. Quantum correction:\n$$\\delta F=\\langle F(\\hat x)\\rangle-F_{cl}\n=-3c_3\\bigl(\\langle\\hat x^2\\rangle-x_0^2\\bigr)\n-4c_4\\bigl(\\langle\\hat x^3\\rangle-x_0^3\\bigr).$$\n\n4. For a coherent state of SHO with frequency $\\omega_0$,\nVar$(x)=\\langle(\\hat x-x_0)^2\\rangle=\\frac{\\hbar}{2m\\omega_0}$,\nand $\\langle\\hat x^3\\rangle-x_0^3=3x_0\\,\\text{Var}(x)$.\nThus\n$$\\delta F\n=-3c_3\\frac{\\hbar}{2m\\omega_0}\n-4c_4\\bigl(3x_0\\frac{\\hbar}{2m\\omega_0}\\bigr)\n=-\\frac{\\hbar}{2m\\omega_0}\\bigl(3c_3+12c_4x_0\\bigr)\n=-\\frac{3\\hbar}{2m\\omega_0}(c_3+4c_4x_0).$$", "answer": "$$\\boxed{-\\frac{3\\hbar}{2m\\omega_0}\\bigl(c_3+4c_4x_0\\bigr)}$$", "id": "437308"}, {"introduction": "Having established that a quantum wavepacket experiences a force different from its classical point-particle analogue, the natural next question is: what are the long-term consequences of this deviation? This next exercise [@problem_id:2879554] delves into the dynamics resulting from the quantum correction. You will use perturbation theory to analyze the time evolution of a wavepacket in an anharmonic potential and compute the \"secular drift\"—a persistent, non-oscillatory deviation of the quantum trajectory from the classical one. This practice is invaluable for appreciating how small, continuous quantum effects can accumulate over time to produce significant, observable differences between the quantum and classical worlds.", "problem": "A nonrelativistic particle of mass $m$ moves in one dimension under the potential $V(x)=\\tfrac{1}{2}m\\omega^{2}x^{2}+\\lambda x^{3}$, with $|\\lambda|$ sufficiently small that perturbation theory in $\\lambda$ is valid. At $t=0$, the quantum state is a minimum-uncertainty Gaussian (a coherent state of the harmonic oscillator) centered at position $x_{0}$ with average momentum $p_{0}$, having position variance $\\Delta x^{2}=\\hbar/(2m\\omega)$. Consider the corresponding classical particle that starts from the same initial conditions $x_{\\mathrm{cl}}(0)=x_{0}$ and $p_{\\mathrm{cl}}(0)=p_{0}$ and evolves under Newton’s second law.\n\nStarting from the time-dependent Schrödinger equation and the canonical commutation relation for $\\hat{x}$ and $\\hat{p}$, and using only first-order perturbation theory in $\\lambda$, derive the equation of motion for the quantum expectation value $\\langle \\hat{x}(t)\\rangle$ and compare it to the classical trajectory $x_{\\mathrm{cl}}(t)$. Define the deviation $\\delta(t)\\equiv\\langle \\hat{x}(t)\\rangle-x_{\\mathrm{cl}}(t)$ and the leading-order secular drift $\\delta_{\\mathrm{sec}}$ to be the non-oscillatory part of $\\delta(t)$ obtained by averaging over one period $T=2\\pi/\\omega$ in the limit where only the leading term in $\\lambda$ is retained.\n\nCompute $\\delta_{\\mathrm{sec}}$ to first order in $\\lambda$ for the specified initial Gaussian wavepacket and express your final result as a closed-form analytic expression in terms of $\\lambda$, $\\hbar$, $m$, and $\\omega$. No numerical evaluation is required, and no rounding is needed. The final answer must be a single analytic expression.", "solution": "The time evolution of the expectation value of an operator $\\hat{A}$ is governed by the Ehrenfest theorem, which is derived from the time-dependent Schrödinger equation. For an operator with no explicit time dependence, its equation of motion is:\n$$ \\frac{d}{dt}\\langle \\hat{A} \\rangle = \\frac{i}{\\hbar} \\langle [\\hat{H}, \\hat{A}] \\rangle $$\nThe Hamiltonian for the system is given by $\\hat{H} = \\frac{\\hat{p}^{2}}{2m} + V(\\hat{x})$, where $V(\\hat{x}) = \\frac{1}{2}m\\omega^{2}\\hat{x}^{2} + \\lambda\\hat{x}^{3}$. We use the canonical commutation relation $[\\hat{x}, \\hat{p}] = i\\hbar$.\n\nFirst, we find the equation of motion for the expectation value of position, $\\langle \\hat{x} \\rangle$:\n$$ \\frac{d}{dt}\\langle \\hat{x} \\rangle = \\frac{i}{\\hbar} \\langle [\\hat{H}, \\hat{x}] \\rangle = \\frac{i}{\\hbar} \\left\\langle \\left[\\frac{\\hat{p}^{2}}{2m}, \\hat{x}\\right] \\right\\rangle = \\frac{i}{2m\\hbar} \\langle \\hat{p}[\\hat{p}, \\hat{x}] + [\\hat{p}, \\hat{x}]\\hat{p} \\rangle = \\frac{i}{2m\\hbar} \\langle \\hat{p}(-i\\hbar) + (-i\\hbar)\\hat{p} \\rangle = \\frac{\\langle \\hat{p} \\rangle}{m} $$\nThis result is exact and holds for any potential.\n\nNext, we find the equation of motion for the expectation value of momentum, $\\langle \\hat{p} \\rangle$:\n$$ \\frac{d}{dt}\\langle \\hat{p} \\rangle = \\frac{i}{\\hbar} \\langle [\\hat{H}, \\hat{p}] \\rangle = \\frac{i}{\\hbar} \\langle [V(\\hat{x}), \\hat{p}] \\rangle $$\nUsing the identity $[f(\\hat{x}), \\hat{p}] = i\\hbar \\frac{\\partial f}{\\partial \\hat{x}}$, we have:\n$$ \\frac{d}{dt}\\langle \\hat{p} \\rangle = \\left\\langle -\\frac{\\partial V}{\\partial \\hat{x}} \\right\\rangle = \\langle -m\\omega^{2}\\hat{x} - 3\\lambda\\hat{x}^{2} \\rangle = -m\\omega^{2}\\langle \\hat{x} \\rangle - 3\\lambda\\langle \\hat{x}^{2} \\rangle $$\nCombining the two first-order equations by taking the time derivative of the equation for $\\langle \\hat{x} \\rangle$:\n$$ m\\frac{d^{2}}{dt^{2}}\\langle \\hat{x} \\rangle = \\frac{d}{dt}\\langle \\hat{p} \\rangle = -m\\omega^{2}\\langle \\hat{x} \\rangle - 3\\lambda\\langle \\hat{x}^{2} \\rangle $$\nThis gives the exact quantum equation of motion for $\\langle\\hat{x}\\rangle$:\n$$ \\frac{d^{2}}{dt^{2}}\\langle \\hat{x} \\rangle + \\omega^{2}\\langle \\hat{x} \\rangle = -\\frac{3\\lambda}{m}\\langle \\hat{x}^{2} \\rangle $$\nWe relate $\\langle \\hat{x}^{2} \\rangle$ to $\\langle \\hat{x} \\rangle$ using the position variance $(\\Delta x)^{2} = \\langle \\hat{x}^{2} \\rangle - \\langle \\hat{x} \\rangle^{2}$:\n$$ \\frac{d^{2}}{dt^{2}}\\langle \\hat{x} \\rangle + \\omega^{2}\\langle \\hat{x} \\rangle = -\\frac{3\\lambda}{m} \\left( \\langle \\hat{x} \\rangle^{2} + (\\Delta x)^{2} \\right) $$\n\nFor comparison, the classical equation of motion is derived from Newton's second law, $F = -\\frac{dV}{dx}$:\n$$ m\\frac{d^{2}x_{\\mathrm{cl}}}{dt^{2}} = -m\\omega^{2}x_{\\mathrm{cl}} - 3\\lambda x_{\\mathrm{cl}}^{2} $$\nThe classical equation is therefore:\n$$ \\frac{d^{2}x_{\\mathrm{cl}}}{dt^{2}} + \\omega^{2}x_{\\mathrm{cl}} = -\\frac{3\\lambda}{m}x_{\\mathrm{cl}}^{2} $$\n\nTo find the deviation $\\delta(t) = \\langle \\hat{x}(t) \\rangle - x_{\\mathrm{cl}}(t)$ to first order in $\\lambda$, we use perturbation theory. Let $\\langle \\hat{x}(t) \\rangle = x_{q}^{(0)}(t) + \\lambda x_{q}^{(1)}(t) + O(\\lambda^{2})$ and $x_{\\mathrm{cl}}(t) = x_{c}^{(0)}(t) + \\lambda x_{c}^{(1)}(t) + O(\\lambda^{2})$.\n\nAt zeroth order ($\\lambda=0$), the equations for quantum expectation value and classical position are identical:\n$$ \\frac{d^{2}x^{(0)}}{dt^{2}} + \\omega^{2}x^{(0)} = 0 $$\nWith identical initial conditions $x(0)=x_{0}$ and $\\dot{x}(0)=p_{0}/m$, the zeroth-order solutions are identical: $x_{q}^{(0)}(t) = x_{c}^{(0)}(t)$. Let us denote this common solution as $x^{(0)}(t) = x_{0}\\cos(\\omega t) + \\frac{p_{0}}{m\\omega}\\sin(\\omega t)$.\nFor the unperturbed harmonic oscillator, the initial state is a coherent state, which remains a coherent state under time evolution. A defining property of a coherent state is that its variance is constant and minimal: $(\\Delta x(t))^{2} = (\\Delta x(0))^{2} = \\frac{\\hbar}{2m\\omega}$ for all time $t$. To first order in $\\lambda$, we approximate $(\\Delta x(t))^{2}$ by this zeroth-order result.\n\nNow we collect terms of first order in $\\lambda$.\nFor the quantum equation:\n$$ \\lambda\\frac{d^{2}x_{q}^{(1)}}{dt^{2}} + \\lambda\\omega^{2}x_{q}^{(1)} = -\\frac{3\\lambda}{m} \\left( (x_{q}^{(0)})^{2} + \\frac{\\hbar}{2m\\omega} \\right) $$\nFor the classical equation:\n$$ \\lambda\\frac{d^{2}x_{c}^{(1)}}{dt^{2}} + \\lambda\\omega^{2}x_{c}^{(1)} = -\\frac{3\\lambda}{m}(x_{c}^{(0)})^{2} $$\nThe first-order deviation is $\\delta^{(1)}(t) = \\lambda(x_{q}^{(1)}(t) - x_{c}^{(1)}(t))$. Subtracting the classical equation from the quantum one (and using $x_{q}^{(0)} = x_{c}^{(0)}$) yields the equation for $\\delta^{(1)}(t)$:\n$$ \\frac{d^{2}\\delta^{(1)}}{dt^{2}} + \\omega^{2}\\delta^{(1)} = -\\frac{3\\lambda}{m} \\left(\\frac{\\hbar}{2m\\omega}\\right) = -\\frac{3\\lambda\\hbar}{2m^{2}\\omega} $$\nThis is a second-order inhomogeneous differential equation with a constant forcing term. The initial conditions are $\\delta(0) = \\langle \\hat{x}(0) \\rangle - x_{\\mathrm{cl}}(0) = x_{0} - x_{0} = 0$ and $\\dot{\\delta}(0) = \\frac{\\langle \\hat{p}(0) \\rangle}{m} - \\frac{p_{\\mathrm{cl}}(0)}{m} = \\frac{p_{0}}{m} - \\frac{p_{0}}{m} = 0$. These zero initial conditions apply to $\\delta^{(1)}(t)$ as well.\nThe general solution is of the form $\\delta^{(1)}(t) = A\\cos(\\omega t) + B\\sin(\\omega t) + \\delta_{p}$, where $\\delta_{p}$ is a particular solution. For the constant forcing term, the particular solution is itself a constant:\n$$ \\delta_{p} = \\frac{1}{\\omega^{2}} \\left(-\\frac{3\\lambda\\hbar}{2m^{2}\\omega}\\right) = -\\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}} $$\nApplying the initial condition $\\delta^{(1)}(0) = 0$:\n$$ A + \\delta_{p} = 0 \\implies A = -\\delta_{p} = \\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}} $$\nApplying the initial condition $\\dot{\\delta}^{(1)}(0) = 0$:\n$$ \\dot{\\delta}^{(1)}(t) = -A\\omega\\sin(\\omega t) + B\\omega\\cos(\\omega t) \\implies \\dot{\\delta}^{(1)}(0) = B\\omega = 0 \\implies B=0 $$\nThus, the deviation to first order in $\\lambda$ is:\n$$ \\delta(t) \\approx \\delta^{(1)}(t) = \\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}}\\cos(\\omega t) - \\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}} $$\nThe secular drift, $\\delta_{\\mathrm{sec}}$, is defined as the non-oscillatory part of this expression. This is simply the constant term. Alternatively, one can average $\\delta(t)$ over one period $T=2\\pi/\\omega$:\n$$ \\delta_{\\mathrm{sec}} = \\frac{1}{T}\\int_{0}^{T} \\delta^{(1)}(t) dt = \\frac{1}{T}\\int_{0}^{T} \\left( -\\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}} + \\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}}\\cos(\\omega t) \\right) dt $$\nThe integral of $\\cos(\\omega t)$ over one period is zero, leaving:\n$$ \\delta_{\\mathrm{sec}} = \\frac{1}{T} \\left( -\\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}} \\right) T = -\\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}} $$\nThis is the leading-order secular drift of the quantum expectation value of position relative to the classical trajectory.", "answer": "$$\\boxed{-\\frac{3\\lambda\\hbar}{2m^{2}\\omega^{3}}}$$", "id": "2879554"}, {"introduction": "We now pivot from analytical derivations to a practical, computational setting highly relevant to modern quantum chemistry. In *ab initio* molecular dynamics (AIMD), the Ehrenfest theorem provides the justification for treating nuclei as classical particles moving on a potential energy surface defined by quantum electronic structure calculations. This exercise [@problem_id:2879538] confronts a crucial subtlety in this approach: the forces must be calculated correctly. By implementing a simulation, you will see firsthand how neglecting certain contributions to the quantum force (specifically, Pulay forces, which arise from the dependence of the basis set on nuclear positions) leads to a non-conservative system and a violation of energy conservation. This computational lab provides critical insight into the rigorous application of the correspondence principle in real-world simulations and equips you with diagnostic tools to identify such errors.", "problem": "Consider a one-dimensional ab initio molecular dynamics (AIMD) toy model designed to test classical correspondence and the Ehrenfest theorem in the presence of basis-set incompleteness. The nuclear degree of freedom is a single coordinate $R(t)$ with mass $M$, propagated according to Newton’s second law $M \\ddot{R}(t) = F(R(t))$. The potential energy surface is constructed as a sum of a harmonic nuclear term and an approximate electronic term that depends on a position-dependent basis parameter. Specifically:\n- The nuclear term is $V_{\\mathrm{nuc}}(R) = \\tfrac{1}{2} k R^2$.\n- The electronic term is $E_{\\mathrm{el}}(R) = A \\exp(-b(R)) + B R^2 \\exp(-2 b(R))$.\n- The basis parameter depends on position as $b(R) = b_0 + b_1 R^2$.\n- The total potential is $U(R) = V_{\\mathrm{nuc}}(R) + E_{\\mathrm{el}}(R)$.\n\nTwo distinct force models are to be used:\n- The full, conservative force $F_{\\mathrm{full}}(R) = - \\dfrac{dU}{dR}$, which includes all derivative contributions, including the implicit $R$-dependence through $b(R)$.\n- The Pulay-neglected force $F_{\\mathrm{noP}}(R) = - \\left.\\dfrac{\\partial U}{\\partial R}\\right|_{b(R)\\ \\mathrm{frozen}}$, which treats $b(R)$ as independent of $R$ when differentiating, thereby neglecting the Pulay contribution.\n\nThe equations of motion are to be integrated using the velocity-Verlet scheme with a fixed time step $dt$. At each time step, compute the total energy $E(t) = \\tfrac{1}{2} M \\dot{R}(t)^2 + U(R(t))$. To quantify long-time energy behavior, extract an energy drift rate by fitting a straight line $E(t) \\approx m t + c$ in the least-squares sense and reporting the fitted slope $m$.\n\nTo propose and test a diagnostic grounded in the classical virial theorem, use the time-averaged relation for bound motion under conservative forces, which in one dimension reads $2 \\langle T \\rangle + \\langle R F(R) \\rangle = 0$, where $T = \\tfrac{1}{2} M \\dot{R}^2$ is kinetic energy. Define the following virial-based diagnostic when using any force model $F_{\\ast}$:\n$$\\Delta_{\\mathrm{vir}} = \\left| \\dfrac{\\overline{2 T + R F_{\\ast}}}{\\overline{2 T}} \\right|,$$\nwhere the overline denotes a simple time average along the trajectory. Under exact conservative dynamics in a harmonic potential, $\\Delta_{\\mathrm{vir}}$ should be near zero. Deviations indicate a breakdown of classical correspondence diagnostics, such as that induced by neglecting Pulay forces.\n\nImplement a program that:\n- Integrates the dynamics for each test case twice, once with $F_{\\mathrm{full}}$ and once with $F_{\\mathrm{noP}}$.\n- Computes the energy drift rate $m_{\\mathrm{full}}$ using $F_{\\mathrm{full}}$ and $m_{\\mathrm{noP}}$ using $F_{\\mathrm{noP}}$.\n- Computes the virial diagnostic $\\Delta_{\\mathrm{vir}}$ using the trajectory generated with $F_{\\mathrm{noP}}$.\n\nAll simulations are to be performed in dimensionless units. Report all outputs as decimal floats rounded to six significant figures.\n\nBase your reasoning and implementation on fundamental principles only: Newton’s second law for nuclei, the Ehrenfest theorem that justifies using classical trajectories for nuclear expectation values coupled to mean electronic forces, and the classical virial theorem. Do not assume any additional specialized formulas beyond the definitions above.\n\nTest Suite (dimensionless units):\n- Case $\\mathrm{A}$ (no Pulay expected): $M = 1.0$, $k = 1.0$, $A = 0.10$, $B = 0.05$, $b_0 = 1.0$, $b_1 = 0.0$, $dt = 0.01$, number of steps $N = 20000$, initial position $R(0) = 0.2$, initial velocity $\\dot{R}(0) = 0.0$.\n- Case $\\mathrm{B}$ (moderate Pulay): $M = 1.0$, $k = 1.0$, $A = 0.10$, $B = 0.05$, $b_0 = 1.0$, $b_1 = 0.5$, $dt = 0.01$, number of steps $N = 20000$, initial position $R(0) = 0.2$, initial velocity $\\dot{R}(0) = 0.0$.\n- Case $\\mathrm{C}$ (stronger Pulay and larger time step): $M = 1.0$, $k = 1.0$, $A = 0.10$, $B = 0.05$, $b_0 = 1.0$, $b_1 = 1.2$, $dt = 0.02$, number of steps $N = 20000$, initial position $R(0) = 0.2$, initial velocity $\\dot{R}(0) = 0.0$.\n\nRequired final output format:\nYour program should produce a single line of output containing a list of three inner lists, one per test case, in the order $\\mathrm{A}$, $\\mathrm{B}$, $\\mathrm{C}$. Each inner list must contain three floats rounded to six significant figures in the order $[m_{\\mathrm{noP}}, m_{\\mathrm{full}}, \\Delta_{\\mathrm{vir}}]$. The overall format must be exactly\n\"[[mA_noP,mA_full,DeltaA],[mB_noP,mB_full,DeltaB],[mC_noP,mC_full,DeltaC]]\"\non a single line, with no additional characters or whitespace.", "solution": "The solution will be constructed based on the fundamental principles outlined in the problem statement. This involves deriving the necessary analytical expressions, describing the numerical integration scheme, and defining the diagnostic metrics to be computed.\n\nFirst, we define the total potential energy $U(R)$ of the one-dimensional system as the sum of a nuclear harmonic term $V_{\\mathrm{nuc}}(R)$ and an electronic term $E_{\\mathrm{el}}(R)$:\n$$U(R) = V_{\\mathrm{nuc}}(R) + E_{\\mathrm{el}}(R) = \\frac{1}{2} k R^2 + A e^{-b(R)} + B R^2 e^{-2b(R)}$$\nThe position-dependent basis parameter $b(R)$ is given by:\n$$b(R) = b_0 + b_1 R^2$$\n\nNext, we derive the two force models to be used for propagating the nucleus of mass $M$ according to Newton's second law, $M\\ddot{R}(t) = F(R(t))$.\n\nThe first model is the full, conservative force $F_{\\mathrm{full}}(R)$, obtained by taking the negative total derivative of the potential energy $U(R)$ with respect to the nuclear coordinate $R$. This requires application of the chain rule due to the implicit dependence of $U$ on $R$ through $b(R)$.\nThe derivative of $b(R)$ is:\n$$\\frac{db}{dR} = \\frac{d}{dR}(b_0 + b_1 R^2) = 2 b_1 R$$\nThe derivative of the total potential $U(R)$ is:\n\\begin{align*}\n\\frac{dU}{dR} &= \\frac{d}{dR} \\left( \\frac{1}{2} k R^2 + A e^{-b(R)} + B R^2 e^{-2b(R)} \\right) \\\\\n&= kR + A e^{-b(R)} \\left(-\\frac{db}{dR}\\right) + \\left(2BR\\right)e^{-2b(R)} + B R^2 e^{-2b(R)} \\left(-2\\frac{db}{dR}\\right) \\\\\n&= kR - A(2b_1R)e^{-b(R)} + 2BR e^{-2b(R)} - 2BR^2(2b_1R)e^{-2b(R)} \\\\\n&= kR - 2Ab_1R e^{-b(R)} + 2BR e^{-2b(R)} - 4Bb_1R^3 e^{-2b(R)}\n\\end{align*}\nThus, the full force is:\n$$F_{\\mathrm{full}}(R) = -\\frac{dU}{dR} = -kR + 2Ab_1R e^{-b(R)} - 2BR e^{-2b(R)} + 4Bb_1R^3 e^{-2b(R)}$$\nThis force is conservative as it is the true gradient of the potential energy function $U(R)$.\n\nThe second model is the Pulay-neglected force $F_{\\mathrm{noP}}(R)$, which arises in ab initio molecular dynamics when the dependence of the basis set on nuclear coordinates is ignored during force calculation. It is defined as the negative partial derivative of $U(R)$ with respect to $R$, treating $b(R)$ as a constant parameter during differentiation.\n$$\\left.\\frac{\\partial U}{\\partial R}\\right|_{b(R)\\ \\mathrm{frozen}} = \\frac{\\partial}{\\partial R} \\left( \\frac{1}{2} k R^2 + A e^{-b(R)} + B R^2 e^{-2b(R)} \\right) = kR + 2BR e^{-2b(R)}$$\nThe resulting force is:\n$$F_{\\mathrm{noP}}(R) = - \\left( kR + 2BR e^{-2b(R)} \\right)$$\nWhen $b_1 \\neq 0$, this force is non-conservative because it is not the gradient of the potential $U(R)$. The terms involving $b_1$ that are present in $F_{\\mathrm{full}}(R)$ are known as Pulay forces. Their neglect is expected to lead to non-conservation of total energy.\n\nThe equations of motion are integrated using the velocity-Verlet algorithm. Given the position $R(t)$, velocity $\\dot{R}(t)$, and acceleration $a(t) = F(R(t))/M$ at time $t$, the state at time $t+dt$ is found via:\n1.  $\\dot{R}(t + dt/2) = \\dot{R}(t) + a(t) \\cdot (dt/2)$\n2.  $R(t+dt) = R(t) + \\dot{R}(t + dt/2) \\cdot dt$\n3.  $a(t+dt) = F(R(t+dt))/M$\n4.  $\\dot{R}(t+dt) = \\dot{R}(t + dt/2) + a(t+dt) \\cdot (dt/2)$\n\nTo analyze the simulation results, we compute three diagnostic quantities.\nThe total energy at any time $t$ is:\n$$E(t) = \\frac{1}{2} M \\dot{R}(t)^2 + U(R(t))$$\nThe energy drift rate, $m$, is determined by performing a linear least-squares fit to the time series of the total energy, $E(t) = mt + c$. This provides a quantitative measure of energy non-conservation. We compute $m_{\\mathrm{full}}$ from the trajectory using $F_{\\mathrm{full}}$, and $m_{\\mathrm{noP}}$ from the trajectory using $F_{\\mathrm{noP}}$. For both calculations, the same total energy function $U(R)$ is used.\n\nThe virial-based diagnostic, $\\Delta_{\\mathrm{vir}}$, is based on the classical virial theorem, which for a one-dimensional bound system under a conservative force $F$ states that the time average $\\langle 2T + R F(R) \\rangle = 0$, where $T=\\frac{1}{2} M \\dot{R}^2$ is the kinetic energy. The diagnostic is defined for the trajectory generated with the (potentially non-conservative) force $F_{\\mathrm{noP}}$:\n$$\\Delta_{\\mathrm{vir}} = \\left| \\frac{\\overline{2T + R F_{\\mathrm{noP}}}}{\\overline{2T}} \\right| = \\left| \\frac{\\frac{1}{N+1}\\sum_{i=0}^{N}(M\\dot{R}_i^2 + R_i F_{\\mathrm{noP}}(R_i))}{\\frac{1}{N+1}\\sum_{i=0}^{N} M\\dot{R}_i^2} \\right|$$\nwhere the overline denotes a time average over the $N+1$ points of the trajectory. A significant deviation from zero indicates a breakdown of this classical correspondence diagnostic, symptomatic of using a non-physical (non-conservative) force.\n\nThe computational procedure for each test case is as follows:\n1.  For a given set of parameters $\\{M, k, A, B, b_0, b_1, dt, N, R(0), \\dot{R}(0)\\}$, two separate simulations of $N$ steps are performed.\n2.  The first simulation uses $F_{\\mathrm{full}}(R)$, generating a trajectory $\\{t_i, R_i, \\dot{R}_i\\}_{\\mathrm{full}}$. The total energy $E_{\\mathrm{full}}(t_i)$ is calculated at each step, and the energy drift rate $m_{\\mathrm{full}}$ is extracted via linear regression.\n3.  The second simulation uses $F_{\\mathrm{noP}}(R)$, generating a trajectory $\\{t_i, R_i, \\dot{R}_i\\}_{\\mathrm{noP}}$. Similarly, the energy drift rate $m_{\\mathrm{noP}}$ is computed.\n4.  Using the data from the second simulation, the time averages required for the virial diagnostic are computed, yielding $\\Delta_{\\mathrm{vir}}$.\n5.  The three resulting values, $[m_{\\mathrm{noP}}, m_{\\mathrm{full}}, \\Delta_{\\mathrm{vir}}]$, are collected for each test case.\nThe implementation will be carried out in Python using the NumPy library for numerical operations and SciPy for linear regression.", "answer": "```python\nimport numpy as np\nfrom scipy import stats\n\ndef solve():\n    \"\"\"\n    Solves the AIMD toy model problem for three test cases, calculating energy drift\n    rates and a virial diagnostic.\n    \"\"\"\n    test_cases = [\n        # Case A: M, k, A, B, b0, b1, dt, N, R0, V0\n        (1.0, 1.0, 0.10, 0.05, 1.0, 0.0, 0.01, 20000, 0.2, 0.0),\n        # Case B\n        (1.0, 1.0, 0.10, 0.05, 1.0, 0.5, 0.01, 20000, 0.2, 0.0),\n        # Case C\n        (1.0, 1.0, 0.10, 0.05, 1.0, 1.2, 0.02, 20000, 0.2, 0.0),\n    ]\n\n    # This list will store the string representation of each case's results\n    # e.g., \"[-1.23e-5,4.56e-9,0.123]\"\n    all_results_strings = []\n\n    for case_params in test_cases:\n        M, k, A, B, b0, b1, dt, N, R0, V0 = case_params\n        N = int(N)\n\n        # --- Define physical model functions (vectorized with numpy) ---\n        def b_func(R):\n            return b0 + b1 * R**2\n\n        def U_func(R):\n            b_val = b_func(R)\n            V_nuc = 0.5 * k * R**2\n            E_el = A * np.exp(-b_val) + B * R**2 * np.exp(-2 * b_val)\n            return V_nuc + E_el\n\n        def F_full(R):\n            b_val = b_func(R)\n            term1 = -k * R\n            term2 = 2 * A * b1 * R * np.exp(-b_val)\n            term3 = -2 * B * R * np.exp(-2 * b_val)\n            term4 = 4 * B * b1 * R**3 * np.exp(-2 * b_val)\n            return term1 + term2 + term3 + term4\n\n        def F_noP(R):\n            b_val = b_func(R)\n            return -(k * R + 2 * B * R * np.exp(-2 * b_val))\n\n        force_models = {'full': F_full, 'noP': F_noP}\n        results_cache = {}\n\n        # --- Run simulations for both force models ---\n        for force_name, force_func in force_models.items():\n            \n            # --- Initialize trajectory storage ---\n            t_traj = np.linspace(0, N * dt, N + 1)\n            R_traj = np.zeros(N + 1)\n            V_traj = np.zeros(N + 1)\n            \n            R_traj[0] = R0\n            V_traj[0] = V0\n\n            # --- Velocity-Verlet Integration ---\n            R_curr = R0\n            V_curr = V0\n            F_curr = force_func(R_curr)\n            \n            for i in range(N):\n                A_curr = F_curr / M\n                V_half = V_curr + 0.5 * A_curr * dt\n                R_next = R_curr + V_half * dt\n                \n                F_next = force_func(R_next)\n                A_next = F_next / M\n                V_next = V_half + 0.5 * A_next * dt\n\n                # Store new state and update current state\n                R_traj[i + 1] = R_next\n                V_traj[i + 1] = V_next\n                R_curr, V_curr, F_curr = R_next, V_next, F_next\n\n            # --- Analyze Trajectory ---\n            # 1. Total Energy and Drift Rate\n            T_traj = 0.5 * M * V_traj**2\n            U_traj_vals = U_func(R_traj)\n            E_traj = T_traj + U_traj_vals\n            \n            # Using scipy.stats.linregress for slope\n            slope, _, _, _, _ = stats.linregress(t_traj, E_traj)\n            results_cache[f'm_{force_name}'] = slope\n\n            # 2. Virial Diagnostic (only for 'noP' case)\n            if force_name == 'noP':\n                # F_noP values already computed during integration, but recalculating is cleaner\n                F_noP_traj = F_noP(R_traj)\n                \n                # Using 2*T_traj for M*V^2\n                two_T_term = 2 * T_traj \n                virial_term = R_traj * F_noP_traj\n                \n                avg_two_T = np.mean(two_T_term)\n                avg_virial = np.mean(virial_term)\n                \n                # Avoid division by zero if avg_two_T is zero (unlikely but safe)\n                if avg_two_T != 0:\n                    delta_vir = np.abs((avg_two_T + avg_virial) / avg_two_T)\n                else:\n                    delta_vir = 0.0\n\n                results_cache['Delta_vir'] = delta_vir\n        \n        # --- Format and collect results for the current test case ---\n        m_noP = results_cache['m_noP']\n        m_full = results_cache['m_full']\n        delta_vir_val = results_cache['Delta_vir']\n        \n        # Format each number to 6 significant figures\n        case_result_vals = [m_noP, m_full, delta_vir_val]\n        formatted_strings = [f\"{val:.6g}\" for val in case_result_vals]\n        \n        all_results_strings.append(f\"[{','.join(formatted_strings)}]\")\n\n    # --- Final Print Statement ---\n    # Construct final output string in the exact format \"[[...],[...],[...]]\"\n    final_output = f\"[{','.join(all_results_strings)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2879538"}]}