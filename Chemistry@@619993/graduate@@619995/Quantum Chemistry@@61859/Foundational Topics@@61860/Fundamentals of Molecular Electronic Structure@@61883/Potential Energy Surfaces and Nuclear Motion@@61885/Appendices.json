{"hands_on_practices": [{"introduction": "Building a reliable potential energy surface (PES) is the foundational step for simulating nuclear dynamics. This exercise challenges you to think like a practitioner, outlining a robust workflow to construct a global, high-fidelity PES from raw *ab initio* data. Mastering this process is crucial, as it requires a deep understanding of molecular symmetry, coordinate systems, and the principles of statistical fitting to create a surface that is both accurate and physically meaningful [@problem_id:2917132].", "problem": "You are tasked with constructing a global ground-state potential energy surface for a polyatomic molecule with identical atoms (for concreteness, consider methane, $ \\mathrm{CH_4} $, whose proton labels are physically indistinguishable) within the Born–Oppenheimer (BO) framework. Under BO, the potential energy surface is the electronic ground-state energy $ E(\\mathbf{R}) $ as a function of the $ 3N $-dimensional nuclear coordinate vector $ \\mathbf{R} $ for $ N $ nuclei. The exact $ E(\\mathbf{R}) $ is invariant under overall translations and rotations of $ \\mathbf{R} $, and under any permutation of coordinates belonging to identical nuclei; these symmetries must be respected by any fitted representation. You have access to ab initio data: energies $ E(\\mathbf{R}_i) $ and nuclear gradients $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}_i) $ at sampled geometries $ \\{ \\mathbf{R}_i \\} $. The target representation is a Permutationally Invariant Polynomial (PIP), i.e., a polynomial in internal-coordinate features that is exactly invariant under permutations of identical nuclei.\n\nSelect all options that constitute a valid, symmetry-consistent, and principled workflow to obtain a global PIP fit that can be used to drive nuclear motion (e.g., classical dynamics or nuclear quantum dynamics), starting from first principles and well-tested facts. Your reasoning should appeal to: (i) the BO definition of $ E(\\mathbf{R}) $, (ii) the invariances implied by the electronic Hamiltonian, and (iii) the identification of forces $ \\mathbf{F}(\\mathbf{R}) = - \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $ that govern nuclear motion.\n\nA. Sample $ \\mathbf{R} $ by drawing random Cartesian displacements in a narrow region around the equilibrium structure, compute $ E(\\mathbf{R}) $ only, and fit an ordinary polynomial in the $ 3N $ Cartesian components without removing translations or rotations and without any symmetry constraints. Validate by differentiating the polynomial to obtain $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $ and checking that the fitted forces look smooth near the minimum.\n\nB. Generate a design $ \\{ \\mathbf{R}_i \\} $ that covers chemically relevant regions, including near-equilibrium, transition-state neighborhoods, and dissociation channels, using internal-coordinate proposals (e.g., bond stretches, angle bends) and random displacements in the subspace of $ 3N - 6 $ internal coordinates (for a non-linear molecule). Compute both $ E(\\mathbf{R}_i) $ and $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}_i) $. Construct a basis of internal-coordinate features (e.g., functions of interatomic distances $ r_{ab} $ and angle cosines) that is made explicitly invariant under the permutation group of identical atoms by symmetrization, and fit a linear PIP expansion by minimizing a composite loss that weights energy and gradient residuals with unit-consistent weights. Use regularization to avoid overfitting and validate on symmetry-related hold-out sets.\n\nC. To reduce computational cost, compute gradients $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}_i) $ by finite-difference approximations of ab initio energies on a coarse Cartesian grid and fit a generic kernel regressor in Cartesian coordinates. Permutational invariance need not be enforced because the kernel regressor can approximate any smooth function and will learn the symmetry implicitly from the data. Validation can be restricted to reproducing energies; forces need not be matched.\n\nD. Start from the BO ground electronic state. Construct an initial point set $ \\{ \\mathbf{R}_i \\} $ by perturbing equilibrium geometries along normal modes to span a broad energy range and augment with configurations along reactive coordinates and at large separations to capture correct asymptotes. Compute $ E(\\mathbf{R}_i) $ and $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}_i) $ with a consistent ab initio method. Map $ \\mathbf{R} $ to a set of internal, rotation- and translation-invariant descriptors, then build a PIP basis by enforcing invariance under the relevant permutation group (e.g., $ S_4 $ for the four hydrogens) at the basis-construction stage. Determine coefficients via a regularized least-squares problem that simultaneously matches energies and gradients with appropriate weights, and validate by checking symmetry-related predictions and local curvatures (e.g., Hessian-derived harmonic frequencies) at stationary points.\n\nE. Fit an unconstrained polynomial in Cartesian coordinates to the combined energy and gradient data. After training, enforce permutational invariance by averaging the fitted polynomial over all permutations of identical atoms applied to the input coordinates; this removes the need for internal coordinates or invariant bases. Rotational and translational invariance can be ignored because the post-fit permutation averaging ensures the final model is physical.\n\nChoose all that apply.", "solution": "We begin from the Born–Oppenheimer (BO) separation, where the total molecular Hamiltonian is approximated by an electronic Hamiltonian $ \\hat{H}_e(\\mathbf{r}; \\mathbf{R}) $ parametrized by nuclear coordinates $ \\mathbf{R} $, yielding an electronic ground-state energy $ E(\\mathbf{R}) $ that defines the potential energy surface (PES) on which the nuclei move. The electronic Hamiltonian is invariant under overall translations and rotations of $ \\mathbf{R} $, and under permutations of coordinates associated with physically indistinguishable nuclei. Therefore, the exact PES satisfies\n- $ E(\\mathbf{R}) = E(\\mathbf{R} + \\mathbf{a}) $ for any translation $ \\mathbf{a} $,\n- $ E(\\mathbf{R}) = E(\\mathbf{Q}\\mathbf{R}) $ for any global rotation $ \\mathbf{Q} $ in $ \\mathrm{SO}(3) $,\n- $ E(\\mathbf{R}) = E(P \\cdot \\mathbf{R}) $ for any permutation $ P $ within the symmetry group that permutes identical nuclei.\n\nNuclear motion is governed by forces $ \\mathbf{F}(\\mathbf{R}) = - \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $, which directly appear in Newton’s equations for classical dynamics and in the nuclear kinetic-plus-potential operator in quantum nuclear dynamics. From the Hellmann–Feynman (HF) theorem, when the electronic wavefunction is sufficiently well converged, the ab initio gradient $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $ provides physically meaningful forces. Including both $ E(\\mathbf{R}) $ and $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $ in a fit improves local accuracy of slopes and curvatures and constrains the fit globally.\n\nA Permutationally Invariant Polynomial (PIP) is constructed by forming polynomial basis functions of internal-coordinate features (e.g., interatomic distances $ r_{ab} $ or their smooth transforms, and angle cosines) and symmetrizing these basis functions under the relevant permutation group so that each basis element is exactly invariant. Using internal coordinates removes explicit dependence on overall rotations and translations; employing symmetrized basis functions ensures exact equality under permutations of identical nuclei. Fitting typically involves solving a regularized least-squares problem that minimizes a composite loss such as\n\n$$\n\\mathcal{L} = w_E \\sum_i \\big( E_{\\text{fit}}(\\mathbf{R}_i) - E_{\\text{ref}}(\\mathbf{R}_i) \\big)^2 + w_g \\sum_i \\big\\| \\nabla_{\\mathbf{R}} E_{\\text{fit}}(\\mathbf{R}_i) - \\nabla_{\\mathbf{R}} E_{\\text{ref}}(\\mathbf{R}_i) \\big\\|^2 + \\lambda \\| \\mathbf{c} \\|^2 ,\n$$\n\nwith $ w_E $, $ w_g $ ensuring unit consistency and $ \\lambda $ a Tikhonov regularization parameter for coefficients $ \\mathbf{c} $. To achieve global fidelity, the training set must sample near-equilibrium, transition-state regions, and far-from-equilibrium geometries, including dissociation limits, so that the fit respects correct asymptotic behavior.\n\nWe now analyze each option.\n\nOption A:\n- Uses Cartesian components directly and does not remove overall rotations or translations. This contradicts the invariances of $ E(\\mathbf{R}) $; a generic polynomial in Cartesian coordinates can spuriously depend on orientation and position.\n- Ignores permutation symmetry of identical nuclei, so $ E(\\mathbf{R}) \\neq E(P \\cdot \\mathbf{R}) $ in general for a permutation $ P $.\n- Samples only near the minimum, which cannot support a global PES and leads to poor extrapolation for nuclear motion outside a tiny neighborhood.\n- Fits energies only, losing constraints from forces, and validates only “smoothness,” which is not a physics-based criterion.\nVerdict: Incorrect.\n\nOption B:\n- Designs $ \\{ \\mathbf{R}_i \\} $ that cover a broad range of configurations, including reactive and dissociative regions. This is necessary for a global PES.\n- Uses internal coordinates in a $ 3N - 6 $ dimensional subspace for a non-linear molecule to remove rotations and translations, satisfying those invariances.\n- Computes both $ E(\\mathbf{R}_i) $ and $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}_i) $; the latter encode forces via $ \\mathbf{F}(\\mathbf{R}) = - \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $, improving fidelity for nuclear motion.\n- Constructs a PIP basis by explicit symmetrization under the permutation group of identical atoms, guaranteeing exact permutational invariance by construction.\n- Minimizes a composite energy-plus-gradient loss with proper weighting and regularization, a principled and widely used approach.\n- Validates on symmetry-related hold-out sets, directly testing invariance and transfer.\nVerdict: Correct.\n\nOption C:\n- Computes gradients by finite differences of energy on a coarse grid in Cartesian space; such approximations add numerical noise and bias unless the grid is extremely fine, defeating the stated purpose of reliable $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}) $.\n- Fits a generic kernel in Cartesian coordinates without enforcing invariance. A kernel regressor does not automatically satisfy permutation invariance, nor remove translational and rotational degrees of freedom, unless the kernel and inputs are constructed to do so.\n- Omits force matching in validation, despite forces being central to nuclear motion.\nVerdict: Incorrect.\n\nOption D:\n- Grounds the construction in BO and samples along normal modes and reactive coordinates, and includes large separations to capture asymptotic channels; this supports global fidelity.\n- Computes consistent ab initio $ E(\\mathbf{R}_i) $ and $ \\nabla_{\\mathbf{R}} E(\\mathbf{R}_i) $, leveraging HF forces to constrain the fit.\n- Transforms to internal, rotation- and translation-invariant descriptors, and builds the PIP basis by enforcing permutation invariance at the basis level (e.g., using the action of $ S_4 $ for the four hydrogens in $ \\mathrm{CH_4} $).\n- Determines coefficients by a regularized least-squares fit to energies and gradients with appropriate weights, which is a principled and stable procedure.\n- Validates using symmetry checks and local curvature (Hessian-derived harmonic frequencies), linking directly to nuclear vibrational properties.\nVerdict: Correct.\n\nOption E:\n- Fits an unconstrained polynomial in Cartesian coordinates, then averages the fitted function over permutations. While permutation averaging can enforce permutational invariance post hoc, it does not address rotational and translational invariance, which remain violated because the inputs are Cartesian coordinates.\n- Post-fit symmetrization does not guarantee that the resulting model optimally matches both energies and gradients; it can also disrupt the force consistency learned during fitting because the operation is applied after coefficient optimization rather than enforced at the basis-construction stage.\n- Explicitly dismisses the need for internal coordinates or invariant bases and ignores rotation/translation invariance, contradicting the required symmetries of $ E(\\mathbf{R}) $.\nVerdict: Incorrect.\n\nTherefore, the valid, symmetry-consistent, and principled workflows are those in Options B and D.", "answer": "$$\\boxed{BD}$$", "id": "2917132"}, {"introduction": "The forces that guide nuclei on a potential energy surface are not always straightforward to compute, especially when using common atom-centered basis sets. This practice delves into the origin of the Pulay force, a \"hidden\" contribution that arises because the basis functions themselves move with the nuclei. By deriving and calculating this force for a model system, you will gain a concrete understanding of this essential concept in analytic gradient theory and its importance for accurate molecular geometry optimizations and dynamics [@problem_id:2917146].", "problem": "In the Born–Oppenheimer approximation, the electronic energy $E$ at fixed nuclear positions is obtained by solving a stationary variational problem with an orthonormality constraint on the Molecular Orbital (MO) coefficients in a nonorthogonal Atomic Orbital (AO) basis. Consider a Hartree–Fock (HF) or Kohn–Sham Density Functional Theory (DFT) Lagrangian with the orthonormality constraint $C^{\\top} S C = I$, where $C$ is the AO-to-MO coefficient matrix and $S$ is the AO overlap matrix. The force on a nucleus at coordinate $R$ is $F = -\\partial E / \\partial R$ and, in a position-dependent basis such as Gaussian functions, includes a Pulay term that depends on $\\partial S/\\partial R$.\n\nTask 1 (derivation): Starting from a stationary Lagrangian with the orthonormality constraint, and using only (i) that the electronic energy is stationary with respect to orbital variations at self-consistency, and (ii) that the basis depends on $R$ through $S(R)$, derive the Pulay force contribution along a nuclear coordinate $R$ in the form of a trace involving the derivative of the overlap matrix. Your derivation must express the Pulay force in terms of the energy-weighted density matrix $E_{\\mu\\nu}^{\\mathrm{AO}}$ and $\\partial S_{\\mu\\nu}/\\partial R$, without invoking any pre-memorized final-force formulas.\n\nTask 2 (specialization to a minimal two-function Gaussian model): Consider the one-electron homonuclear diatomic cation with two identical, normalized $s$-type primitive Gaussian AOs $\\{\\chi_A,\\chi_B\\}$ of the same exponent $\\alpha$ placed at $\\pm R/2$ on the $x$-axis. Assume:\n- The AO overlap is $S(R) = \\exp(-\\alpha R^{2}/2)$.\n- The derivative is $\\frac{dS}{dR} = -\\alpha R \\exp(-\\alpha R^{2}/2)$.\n- Use the Wolfsberg–Helmholtz (WH) approximation for the AO Hamiltonian matrix, $H_{AB}(R) = K\\,S(R)\\,[H_{AA}(R) + H_{BB}(R)]/2$, and take a homonuclear constant one-electron diagonal element $H_{AA}(R) = H_{BB}(R) = h$, so $H(R) = \\begin{pmatrix} h & k\\,S(R) \\\\ k\\,S(R) & h \\end{pmatrix}$ with $k = K h$.\n- Solve the generalized eigenvalue problem $(H - \\varepsilon S)c = 0$ for the bonding state and use the normalized symmetric MO.\n\nUsing these assumptions, express the Pulay force along the internuclear separation $R$ entirely in terms of $h$, $k$, $\\alpha$, and $S(R)$.\n\nTask 3 (numerical evaluation): Using atomic units (Hartree for energy, bohr for length), evaluate the Pulay force along $R$ at the geometry and parameters:\n- $\\alpha = 1.0\\,\\mathrm{bohr}^{-2}$,\n- $h = -0.500\\,\\mathrm{Hartree}$,\n- $K = 1.75$ so $k = K h$,\n- $R = 2.000\\,\\mathrm{bohr}$.\nRound your final numeric answer for the Pulay force to four significant figures. Express the force in atomic units (Hartree per bohr). The final answer must be a single number.", "solution": "The problem presented is a standard exercise in the theory of analytic derivatives in quantum chemistry. It is scientifically sound, mathematically well-posed, and contains all necessary information for its resolution. We shall proceed with the derivation and calculation as requested.\n\nThe force on a nucleus is the negative gradient of the total electronic energy with respect to the nuclear coordinates, $F_A = -\\nabla_A E$. The total derivative of the energy $E$ with respect to a nuclear coordinate $R$ is given by the chain rule. The energy is a function of the molecular orbital coefficients $C$, which depend on $R$, and also depends explicitly on $R$ through the basis functions used to construct the Hamiltonian $H$ and overlap $S$ matrices.\n$$\n\\frac{dE}{dR} = \\frac{\\partial E}{\\partial R} + \\sum_{\\mu, i} \\frac{\\partial E}{\\partial C_{\\mu i}} \\frac{dC_{\\mu i}}{dR}\n$$\nThe problem specifies that the energy is stationary with respect to orbital variations at self-consistency. This condition implies that the second term, which depends on the response of the MO coefficients to the perturbation, vanishes. However, this is only true if the variational parameters $C$ are unconstrained. In a non-orthogonal basis, the MO coefficients are subject to the orthonormality constraint $C^{\\dagger}SC = I$. The proper method to handle such constrained optimization is the method of Lagrange multipliers.\n\nTask 1: Derivation of the Pulay Force\nWe construct the Lagrangian $\\mathcal{L}$ for the energy minimization, incorporating the orthonormality constraints with Lagrange multipliers $\\varepsilon_{ji}$:\n$$\n\\mathcal{L} = E(C, H) - \\sum_{i,j}^{\\text{occ}} \\varepsilon_{ji} \\left(\\sum_{\\mu,\\nu} C_{\\mu i}^* S_{\\mu\\nu} C_{\\nu j} - \\delta_{ij}\\right)\n$$\nAt the self-consistent field (SCF) solution, the Lagrangian is stationary with respect to variations in the MO coefficients, $\\partial \\mathcal{L} / \\partial C = 0$. This condition leads to the Hartree-Fock or Kohn-Sham equations. Furthermore, at the solution point, the value of the Lagrangian is equal to the electronic energy, $E = \\mathcal{L}$.\n\nTo find the nuclear force, we compute the total derivative of the energy with respect to a nuclear coordinate $R$. Since $E=\\mathcal{L}$ at the solution for any $R$, we can differentiate $\\mathcal{L}$:\n$$\n\\frac{dE}{dR} = \\frac{d\\mathcal{L}}{dR} = \\frac{\\partial \\mathcal{L}}{\\partial R} + \\sum_{\\mu, i} \\frac{\\partial \\mathcal{L}}{\\partial C_{\\mu i}} \\frac{dC_{\\mu i}}{dR} + \\sum_{\\mu, i} \\frac{\\partial \\mathcal{L}}{\\partial C_{\\mu i}^*} \\frac{dC_{\\mu i}^*}{dR}\n$$\nDue to the stationarity condition, the terms involving derivatives of the coefficients, $\\partial \\mathcal{L} / \\partial C$ and $\\partial \\mathcal{L} / \\partial C^*$, are zero. The expression for the force simplifies significantly, a result known as the Hellmann-Feynman theorem for a constrained variation:\n$$\n\\frac{dE}{dR} = \\frac{\\partial \\mathcal{L}}{\\partial R}\n$$\nThe partial derivative $\\partial/\\partial R$ acts only on quantities with explicit dependence on $R$, which are the Hamiltonian $H$ and the overlap matrix $S$. The MO coefficients $C$ are treated as constant under this partial derivative.\n$$\n\\frac{\\partial \\mathcal{L}}{\\partial R} = \\frac{\\partial E}{\\partial R} - \\sum_{i,j}^{\\text{occ}} \\varepsilon_{ji} \\frac{\\partial}{\\partial R}\\left(C_i^{\\dagger} S C_j\\right) = \\frac{\\partial E}{\\partial R} - \\sum_{i,j}^{\\text{occ}} \\varepsilon_{ji} \\left(C_i^{\\dagger} \\frac{\\partial S}{\\partial R} C_j\\right)\n$$\nThe term $\\partial E / \\partial R$ accounts for the derivative of the one- and two-electron integrals that constitute the Hamiltonian matrix. This gives rise to the standard Hellmann-Feynman force. The second term arises purely from the dependence of the basis function overlap on the nuclear coordinates. This is the source of the Pulay force.\n\nAt convergence, the matrix of Lagrange multipliers $\\varepsilon$ is diagonal (in the canonical MO basis) with the orbital energies on the diagonal, $\\varepsilon_{ji} = \\varepsilon_i \\delta_{ij}$. The expression becomes:\n$$\n\\frac{dE}{dR} = \\frac{\\partial E}{\\partial R} - \\sum_{i}^{\\text{occ}} \\varepsilon_i \\left(C_i^{\\dagger} \\frac{\\partial S}{\\partial R} C_i\\right)\n$$\nThe Pulay contribution to the energy gradient is the second term:\n$$\n\\left(\\frac{dE}{dR}\\right)_{\\text{Pulay}} = - \\sum_{i}^{\\text{occ}} \\varepsilon_i \\left(C_i^{\\dagger} \\frac{\\partial S}{\\partial R} C_i\\right)\n$$\nThis can be written as a trace. For simplicity, we assume real coefficients, $C_i^\\top$.\n$$\n\\left(\\frac{dE}{dR}\\right)_{\\text{Pulay}} = - \\sum_{i}^{\\text{occ}} \\varepsilon_i \\text{Tr}\\left(C_i^{\\top} \\frac{\\partial S}{\\partial R} C_i\\right) = - \\sum_{i}^{\\text{occ}} \\varepsilon_i \\text{Tr}\\left(\\frac{\\partial S}{\\partial R} C_i C_i^{\\top}\\right)\n$$\nUsing the linearity of the trace, we exchange the summation and trace operators:\n$$\n\\left(\\frac{dE}{dR}\\right)_{\\text{Pulay}} = - \\text{Tr}\\left(\\frac{\\partial S}{\\partial R} \\sum_{i}^{\\text{occ}} \\varepsilon_i C_i C_i^{\\top}\\right)\n$$\nWe identify the energy-weighted density matrix, denoted $E^{\\mathrm{AO}}$ in the problem statement (commonly denoted as $W$), whose elements are $E_{\\mu\\nu}^{\\mathrm{AO}} = \\sum_{i}^{\\text{occ}} \\varepsilon_i C_{\\mu i} C_{\\nu i}$. In matrix form, $E^{\\mathrm{AO}} = \\sum_i^{\\text{occ}} \\varepsilon_i C_i C_i^{\\top}$.\nThe Pulay contribution to the gradient is therefore:\n$$\n\\left(\\frac{dE}{dR}\\right)_{\\text{Pulay}} = - \\text{Tr}\\left(\\frac{\\partial S}{\\partial R} E^{\\mathrm{AO}}\\right)\n$$\nThe force is the negative of the gradient, so the Pulay force is:\n$$\nF_{\\text{Pulay}} = + \\text{Tr}\\left(E^{\\mathrm{AO}} \\frac{\\partial S}{\\partial R}\\right) = \\sum_{\\mu,\\nu} E_{\\mu\\nu}^{\\mathrm{AO}} \\left(\\frac{\\partial S}{\\partial R}\\right)_{\\nu\\mu}\n$$\nThis completes the derivation for Task 1.\n\nTask 2: Specialization to a Minimal Model\nWe are given a one-electron system with a $2 \\times 2$ Hamiltonian $H$ and overlap matrix $S$. The matrices are:\n$$\nH = \\begin{pmatrix} h & kS(R) \\\\ kS(R) & h \\end{pmatrix}, \\quad S = \\begin{pmatrix} 1 & S(R) \\\\ S(R) & 1 \\end{pmatrix}\n$$\nwhere $S(R)$ denotes the off-diagonal overlap element $S_{AB}(R)$. First, we solve the generalized eigenvalue problem $(H-\\varepsilon S)c = 0$ to find the orbital energies and coefficients. The secular equation is $\\det(H-\\varepsilon S) = 0$:\n$$\n\\det\\begin{pmatrix} h-\\varepsilon & kS(R)-\\varepsilon S(R) \\\\ kS(R)-\\varepsilon S(R) & h-\\varepsilon \\end{pmatrix} = (h-\\varepsilon)^2 - (kS(R)-\\varepsilon S(R))^2 = 0\n$$\nThis yields two solutions for the energy $\\varepsilon$:\n$$\nh-\\varepsilon = \\pm S(R)(k-\\varepsilon) \\implies \\varepsilon = \\frac{h \\mp kS(R)}{1 \\mp S(R)}\n$$\nThe problem asks for the bonding state, which corresponds to the symmetric combination of atomic orbitals ($c_A=c_B$). This corresponds to the lower energy root, which is $\\varepsilon_1 = \\frac{h+kS(R)}{1+S(R)}$.\n\nThe corresponding eigenvector is $C_1 = c \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$. We find the normalization constant $c$ from the condition $C_1^{\\top} S C_1 = 1$:\n$$\nc^2 \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} 1 & S(R) \\\\ S(R) & 1 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} = c^2 (1+S(R)+S(R)+1) = 2c^2(1+S(R)) = 1\n$$\nSo, $c = \\frac{1}{\\sqrt{2(1+S(R))}}$. The coefficient vector for the occupied orbital is $C_1 = \\frac{1}{\\sqrt{2(1+S(R))}}\\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$.\n\nThe system has one electron, so only this bonding orbital is occupied. The energy-weighted density matrix $E^{\\mathrm{AO}}$ (or $W$) is:\n$$\nE^{\\mathrm{AO}} = \\varepsilon_1 C_1 C_1^{\\top} = \\left(\\frac{h+kS(R)}{1+S(R)}\\right) \\left(\\frac{1}{2(1+S(R))}\\right) \\begin{pmatrix} 1 & 1 \\\\ 1 & 1 \\end{pmatrix} = \\frac{h+kS(R)}{2(1+S(R))^2} \\begin{pmatrix} 1 & 1 \\\\ 1 & 1 \\end{pmatrix}\n$$\nThe derivative of the overlap matrix with respect to $R$ is:\n$$\n\\frac{\\partial S}{\\partial R} = \\begin{pmatrix} 0 & \\frac{dS(R)}{dR} \\\\ \\frac{dS(R)}{dR} & 0 \\end{pmatrix} = \\begin{pmatrix} 0 & -\\alpha R S(R) \\\\ -\\alpha R S(R) & 0 \\end{pmatrix}\n$$\nNow we compute the Pulay force using the trace formula derived in Task 1. Let's write $S$ for $S(R)$ for brevity.\n$$\nF_{\\text{Pulay}} = \\text{Tr}\\left(E^{\\mathrm{AO}} \\frac{\\partial S}{\\partial R}\\right) = \\text{Tr}\\left( \\frac{h+kS}{2(1+S)^2} \\begin{pmatrix} 1 & 1 \\\\ 1 & 1 \\end{pmatrix} \\begin{pmatrix} 0 & -\\alpha R S \\\\ -\\alpha R S & 0 \\end{pmatrix} \\right)\n$$\n$$\nF_{\\text{Pulay}} = \\frac{h+kS}{2(1+S)^2} \\text{Tr}\\left( \\begin{pmatrix} -\\alpha R S & -\\alpha R S \\\\ -\\alpha R S & -\\alpha R S \\end{pmatrix} \\right)\n$$\nThe trace of the resulting matrix is $(-\\alpha R S) + (-\\alpha R S) = -2\\alpha R S$.\n$$\nF_{\\text{Pulay}} = \\frac{h+kS}{2(1+S)^2} (-2\\alpha R S) = -\\frac{\\alpha R S(R) [h+kS(R)]}{[1+S(R)]^2}\n$$\nThis is the final expression for the Pulay force in terms of the given parameters.\n\nTask 3: Numerical Evaluation\nWe are given the following parameters in atomic units:\n- $\\alpha = 1.0\\,\\mathrm{bohr}^{-2}$\n- $h = -0.500\\,\\mathrm{Hartree}$\n- $K = 1.75$ (dimensionless)\n- $R = 2.000\\,\\mathrm{bohr}$\n\nFirst, we calculate $k$ and $S(R)$:\n$k = K h = 1.75 \\times (-0.500) = -0.875\\,\\mathrm{Hartree}$.\n$S(R) = \\exp(-\\alpha R^2 / 2) = \\exp(-1.0 \\times (2.000)^2 / 2) = \\exp(-2.0)$.\n$S(2.000) \\approx 0.135335$.\n\nNow, we substitute these values into the expression for the Pulay force:\n$$\nF_{\\text{Pulay}} = -\\frac{(1.0)(2.000)(0.135335) [-0.500 + (-0.875)(0.135335)]}{[1+0.135335]^2}\n$$\n$$\nF_{\\text{Pulay}} = -\\frac{(0.27067) [-0.500 - 0.118418]}{[1.135335]^2}\n$$\n$$\nF_{\\text{Pulay}} = -\\frac{(0.27067)(-0.618418)}{1.288985}\n$$\n$$\nF_{\\text{Pulay}} = \\frac{0.16739}{1.288985} \\approx 0.129862\\,\\mathrm{Hartree}/\\mathrm{bohr}\n$$\nRounding the result to four significant figures, we obtain the numerical value for the Pulay force.\n$$\nF_{\\text{Pulay}} \\approx 0.1299\\,\\text{Hartree/bohr}\n$$", "answer": "$$\\boxed{0.1299}$$", "id": "2917146"}, {"introduction": "Once a potential energy surface is established, we can explore the fascinating world of nuclear quantum dynamics. This hands-on computational problem focuses on quantum tunneling, a phenomenon where particles traverse barriers that are classically insurmountable. By implementing both a semiclassical Wentzel–Kramers–Brillouin (WKB) approximation and a numerically exact solution, you will directly quantify tunneling splitting and appreciate the interplay between analytical theory and computational power in describing non-classical nuclear motion [@problem_id:2917145].", "problem": "Consider one-dimensional nuclear motion on a symmetric double-well potential energy surface defined by the quartic form $V(x) = a \\,(x^2 - b^2)^2$ in atomic units (a.u.), where Planck’s reduced constant $\\hbar = 1$, the electron mass $m_e = 1$, and energies are in hartree while lengths are in bohr. The nuclear mass $m$ is treated as a scalar parameter in the Hamiltonian $H = -\\dfrac{1}{2 m}\\dfrac{d^2}{dx^2} + V(x)$. The minima lie at $x = \\pm b$ with $V(\\pm b) = 0$ and a central barrier at $x = 0$ with height $V(0) = a b^4$. The task is to compute the tunneling splitting of the lowest vibrational doublet and to compare an analytical semiclassical estimate with an exact numerical result.\n\nStarting from the time-independent Schrödinger equation and fundamental definitions of the Wentzel–Kramers–Brillouin (WKB) approximation, derive a computational approach that does the following for a given parameter set $(m,a,b)$:\n\n- Construct the local harmonic approximation at the minimum $x = b$ to estimate the single-well ground-state energy $E_0$ and the small-amplitude angular frequency $\\omega_0$ from $V''(b)$ and $m$.\n- Use a one-dimensional WKB barrier-penetration analysis to estimate the tunneling splitting $\\Delta_{\\text{WKB}}$ of the lowest doublet by evaluating the imaginary classical action across the classically forbidden region between the inner turning points for energy $E_0$.\n- Compute the exact splitting $\\Delta_{\\text{exact}}$ by numerical diagonalization of the Hamiltonian on a uniform grid using the finite difference method (FDM) with Dirichlet boundary conditions on a finite interval $[-L,L]$. Use a second-order central-difference kinetic energy operator to form a symmetric tridiagonal Hamiltonian matrix and obtain the two lowest eigenvalues $E_0^{\\text{exact}}$ and $E_1^{\\text{exact}}$; then set $\\Delta_{\\text{exact}} = E_1^{\\text{exact}} - E_0^{\\text{exact}}$.\n\nYour program must implement both approaches and report for each test case:\n- $\\Delta_{\\text{exact}}$ in hartree,\n- $\\Delta_{\\text{WKB}}$ in hartree,\n- the absolute difference $|\\Delta_{\\text{exact}} - \\Delta_{\\text{WKB}}|$ in hartree.\n\nAll energies must be expressed in hartree and each reported float must be rounded to $8$ decimal places.\n\nYou must implement your own numerical integration of the action integral and your own tridiagonal Hamiltonian diagonalization using scientifically standard algorithms, but you may use well-tested numerical library routines for root finding, quadrature, and symmetric tridiagonal eigensolvers.\n\nTest Suite and Discretization Details:\n- Use the same grid and box for all test cases: $L = 6.0$ bohr and a uniform grid with $N = 2000$ total points; impose Dirichlet boundary conditions at $x = \\pm L$ by restricting the Hamiltonian to the $N-2$ interior points.\n- Use the following $3$ parameter sets $(m,a,b)$, chosen to probe different barrier regimes while maintaining scientific realism and numerical stability:\n  - Case A (moderate-to-high barrier): $(m,a,b) = (1.0, 1.0, 1.5)$.\n  - Case B (moderate barrier): $(m,a,b) = (1.0, 3.0, 1.0)$.\n  - Case C (near-threshold barrier, WKB stress test): $(m,a,b) = (1.0, 20.0, 0.7)$.\n  \nFor each case, ensure that the barrier height $a b^4$ exceeds the local harmonic zero-point estimate $E_0$ so that a classically forbidden region exists for the WKB analysis.\n\nFinal Output Format:\n- Your program should produce a single line of output containing a flat list of floats ordered as $[\\Delta_{\\text{exact}}^{(A)}, \\Delta_{\\text{WKB}}^{(A)}, |\\Delta_{\\text{exact}}^{(A)} - \\Delta_{\\text{WKB}}^{(A)}|, \\Delta_{\\text{exact}}^{(B)}, \\Delta_{\\text{WKB}}^{(B)}, |\\Delta_{\\text{exact}}^{(B)} - \\Delta_{\\text{WKB}}^{(B)}|, \\Delta_{\\text{exact}}^{(C)}, \\Delta_{\\text{WKB}}^{(C)}, |\\Delta_{\\text{exact}}^{(C)} - \\Delta_{\\text{WKB}}^{(C)}|]$, rounded to $8$ decimal places, and enclosed in square brackets with comma-separated values, for a total of $9$ floats on a single line.\n\nAngle units do not occur in this problem. No percentages occur in this problem. All physical quantities that appear in the output must be in hartree, rounded to $8$ decimal places. No other text may be printed.", "solution": "The problem presented is a standard exercise in computational quantum mechanics and is valid. It is scientifically grounded, well-posed, objective, and contains all necessary information for a unique solution. The task involves solving the one-dimensional time-independent Schrödinger equation for a particle of mass $m$ in a symmetric double-well potential $V(x) = a (x^2 - b^2)^2$. The goal is to compute the energy splitting $\\Delta E$ of the ground state doublet, which arises from quantum tunneling through the central barrier. This will be accomplished using two distinct methods: a semiclassical Wentzel–Kramers–Brillouin (WKB) approximation and a numerically exact diagonalization using the Finite Difference Method (FDM). The results from both methods will be compared. We work in atomic units where $\\hbar = 1$. The Hamiltonian is given by:\n$$\nH = -\\dfrac{1}{2 m}\\dfrac{d^2}{dx^2} + V(x)\n$$\n\nFirst, we derive the computational steps for the WKB approximation. This method provides an analytical estimate that is accurate in the limit of high, wide barriers.\n\nThe WKB formula for the energy splitting of the lowest doublet in a symmetric double-well potential is:\n$$\n\\Delta_{\\text{WKB}} = \\frac{\\hbar \\omega_0}{\\pi} e^{-S/\\hbar}\n$$\nIn atomic units, this becomes $\\Delta_{\\text{WKB}} = \\frac{\\omega_0}{\\pi} e^{-S}$. Here, $\\omega_0$ is the classical angular frequency of small oscillations within a single well, and $S$ is the classical action for tunneling under the barrier.\n\nTo find $\\omega_0$, we perform a harmonic approximation of the potential $V(x)$ around one of its minima, for instance at $x=b$. The potential is expanded in a Taylor series up to the second order around $x=b$:\n$V(x) \\approx V(b) + V'(b)(x-b) + \\frac{1}{2}V''(b)(x-b)^2$.\nThe potential is defined such that $V(b) = 0$ and $V'(x) = 4ax(x^2-b^2)$, so $V'(b)=0$. The second derivative is $V''(x) = 4a(3x^2 - b^2)$, which gives $V''(b) = 4a(3b^2 - b^2) = 8ab^2$.\nThe approximated harmonic potential is $V_{\\text{HO}}(x) = \\frac{1}{2}(8ab^2)(x-b)^2$. This corresponds to a harmonic oscillator with a spring constant $k = 8ab^2$. The angular frequency is thus $\\omega_0 = \\sqrt{k/m} = \\sqrt{8ab^2/m}$.\n\nThe ground-state energy within this single-well harmonic approximation is the zero-point energy $E_0 = \\frac{1}{2}\\hbar\\omega_0$. With $\\hbar=1$, we have:\n$$\nE_0 = \\frac{1}{2}\\omega_0 = \\sqrt{\\frac{2ab^2}{m}}\n$$\nThis energy $E_0$ is used as the energy level for the tunneling particle in the WKB calculation.\n\nThe action integral $S$, also known as the Gamow factor exponent, is calculated across the classically forbidden region:\n$$\nS = \\int_{-c}^{c} |p(x)| \\, dx = \\int_{-c}^{c} \\sqrt{2m(V(x) - E_0)} \\, dx\n$$\nThe limits of integration, $\\pm c$, are the inner classical turning points where the energy $E_0$ equals the potential energy $V(x)$. They are found by solving the equation $V(x) = E_0$:\n$a(x^2 - b^2)^2 = E_0 \\implies x^2 - b^2 = \\pm\\sqrt{E_0/a} \\implies x^2 = b^2 \\pm \\sqrt{E_0/a}$.\nThe inner turning points correspond to the smaller positive solution for $x^2$, so we take the minus sign: $c^2 = b^2 - \\sqrt{E_0/a}$, which gives $c = \\sqrt{b^2 - \\sqrt{E_0/a}}$. The existence of a real solution for $c$ is guaranteed by the problem condition that the barrier height $V(0) = ab^4$ is greater than $E_0$. The integral for $S$ does not have a simple analytical solution for this potential and must be evaluated numerically.\n\nNext, we detail the numerically exact approach using the Finite Difference Method (FDM). This method transforms the continuous differential Schrödinger equation into a discrete matrix eigenvalue problem.\n\nThe spatial domain $[-L, L]$ is discretized into a uniform grid of $N$ points $x_i = -L + i \\cdot \\Delta x$ for $i=0, \\dots, N-1$, with grid spacing $\\Delta x = 2L/(N-1)$. The wavefunction $\\psi(x)$ is represented by a vector of its values at these grid points, $\\vec{\\psi} = (\\psi_0, \\psi_1, \\dots, \\psi_{N-1})^T$.\n\nThe second derivative in the kinetic energy operator is approximated by a second-order central difference:\n$$\n\\frac{d^2\\psi}{dx^2}\\bigg|_{x_i} \\approx \\frac{\\psi(x_{i+1}) - 2\\psi(x_i) + \\psi(x_{i-1})}{(\\Delta x)^2}\n$$\nThe problem specifies Dirichlet boundary conditions, $\\psi(-L) = \\psi(L) = 0$, which translates to $\\psi_0 = 0$ and $\\psi_{N-1} = 0$. This means we only need to solve for the wavefunction at the $N-2$ interior points, from $x_1$ to $x_{N-2}$. The Schrödinger equation at an interior point $x_j$ (where $j=1, \\dots, N-2$) becomes:\n$$\n-\\frac{1}{2m} \\left( \\frac{\\psi_{j+1} - 2\\psi_j + \\psi_{j-1}}{(\\Delta x)^2} \\right) + V(x_j)\\psi_j = E \\psi_j\n$$\nThis can be rearranged into a matrix equation $\\mathbf{H}\\vec{\\psi'} = E\\vec{\\psi'}$, where $\\vec{\\psi'}$ is the vector of wavefunction values at the interior points, and $\\mathbf{H}$ is an $(N-2) \\times (N-2)$ symmetric tridiagonal matrix. The elements of this matrix are:\n- Diagonal elements: $H_{jj} = \\frac{1}{m(\\Delta x)^2} + V(x_{j})$\n- Off-diagonal elements: $H_{j,j+1} = H_{j+1,j} = -\\frac{1}{2m(\\Delta x)^2}$\n\nThis matrix eigenvalue problem can be solved numerically to find the eigenvalues $E_n$. The two lowest eigenvalues, $E_0^{\\text{exact}}$ and $E_1^{\\text{exact}}$, correspond to the ground state and the first excited state, which form the tunneling doublet. The numerically exact splitting is then:\n$$\n\\Delta_{\\text{exact}} = E_1^{\\text{exact}} - E_0^{\\text{exact}}\n$$\n\nThe provided program implements both approaches. For the WKB calculation, it first computes $\\omega_0$ and $E_0$, then finds the turning point $c$ using a root-finding algorithm (`scipy.optimize.brentq`), and finally evaluates the action integral $S$ using numerical quadrature (`scipy.integrate.quad`). For the FDM calculation, it constructs the tridiagonal Hamiltonian matrix and uses a specialized eigensolver (`scipy.linalg.eigh_tridiagonal`) to efficiently find the two lowest eigenvalues. The program then computes and reports the required quantities for each test case.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import integrate, linalg, optimize\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases and print the results.\n    \"\"\"\n    # Discretization and simulation box parameters as specified.\n    L = 6.0\n    N = 2000\n\n    # Test cases: (m, a, b) parameter sets.\n    test_cases = [\n        # Case A (moderate-to-high barrier)\n        (1.0, 1.0, 1.5),\n        # Case B (moderate barrier)\n        (1.0, 3.0, 1.0),\n        # Case C (near-threshold barrier, WKB stress test)\n        (1.0, 20.0, 0.7),\n    ]\n\n    # List to store all 9 final results.\n    final_results = []\n\n    for m, a, b in test_cases:\n        delta_exact, delta_wkb, abs_diff = calculate_splitting(m, a, b, L, N)\n        final_results.extend([\n            round(delta_exact, 8),\n            round(delta_wkb, 8),\n            round(abs_diff, 8)\n        ])\n\n    # Print the results in the exact specified format.\n    print(f\"[{','.join(map(str, final_results))}]\")\n\ndef calculate_splitting(m, a, b, L, N):\n    \"\"\"\n    Calculates the tunneling splitting using both FDM and WKB methods.\n\n    Args:\n        m (float): Mass of the particle.\n        a (float): Parameter 'a' of the potential V(x).\n        b (float): Parameter 'b' of the potential V(x), defines minima at +/- b.\n        L (float): Half-width of the simulation box [-L, L].\n        N (int): Number of grid points.\n\n    Returns:\n        tuple: A tuple containing (delta_exact, delta_wkb, abs_diff).\n    \"\"\"\n\n    # --- Part 1: Numerical \"Exact\" Calculation using Finite Difference Method ---\n\n    # Define the potential energy function.\n    def V(x):\n        return a * (x**2 - b**2)**2\n\n    # Set up the spatial grid. We only consider N-2 interior points.\n    x_grid = np.linspace(-L, L, N)\n    dx = x_grid[1] - x_grid[0]\n    x_interior = x_grid[1:-1] # Grid points from x_1 to x_{N-2}\n\n    # Construct the tridiagonal Hamiltonian matrix elements.\n    # Diagonal elements: 1/(m*dx^2) + V(x_i)\n    diag_elements = (1.0 / (m * dx**2)) + V(x_interior)\n\n    # Off-diagonal elements: -1/(2*m*dx^2)\n    # There are N-3 off-diagonal elements for an (N-2)x(N-2) matrix.\n    offdiag_elements = -1.0 / (2.0 * m * dx**2) * np.ones(N - 3)\n\n    # Diagonalize the tridiagonal matrix to find the two lowest eigenvalues.\n    # `eigh_tridiagonal` returns eigenvalues in ascending order.\n    # select='i' and select_range=(0, 1) requests the first two eigenvalues (indices 0 and 1).\n    eigenvalues = linalg.eigh_tridiagonal(diag_elements, offdiag_elements, select='i', select_range=(0, 1))[0]\n    E0_exact, E1_exact = eigenvalues\n\n    # Calculate the \"exact\" tunneling splitting.\n    delta_exact = E1_exact - E0_exact\n\n    # --- Part 2: Semiclassical WKB Calculation ---\n\n    # Calculate the harmonic frequency at the well minimum.\n    # k = V''(b) = 8*a*b^2. omega0 = sqrt(k/m).\n    omega0 = np.sqrt(8 * a * b**2 / m)\n\n    # Estimate the ground state energy E0 using the harmonic approximation (ZPE).\n    # In atomic units (hbar=1), E0 = 0.5 * omega0.\n    E0_harmonic = 0.5 * omega0\n\n    # Find the inner classical turning points +/- c by solving V(x) = E0_harmonic.\n    # This is equivalent to finding the root of f(x) = V(x) - E0 = 0.\n    def turning_point_eq(x):\n        return V(x) - E0_harmonic\n\n    # We search for the positive root 'c' in the interval [0, b].\n    # brentq is a robust root-finding algorithm.\n    c = optimize.brentq(turning_point_eq, 0, b)\n    \n    # Define the integrand for the action integral S.\n    def action_integrand(x):\n        return np.sqrt(2 * m * (V(x) - E0_harmonic))\n    \n    # Numerically integrate from -c to c to find the action S.\n    # We use scipy.integrate.quad for this.\n    S, _ = integrate.quad(action_integrand, -c, c)\n    \n    # Calculate the WKB tunneling splitting.\n    # delta_wkb = (omega0 / pi) * exp(-S) since hbar=1.\n    delta_wkb = (omega0 / np.pi) * np.exp(-S)\n    \n    # Calculate the absolute difference between the two methods.\n    abs_diff = np.abs(delta_exact - delta_wkb)\n\n    return delta_exact, delta_wkb, abs_diff\n\n# Execute the main function when the script is run.\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2917145"}]}