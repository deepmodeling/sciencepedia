{"hands_on_practices": [{"introduction": "In exact Density Functional Theory (DFT), the first ionization potential ($I$) can be computed in two equivalent ways: as a finite difference in total energies, $I=E(N-1)-E(N)$, or directly from the energy of the highest occupied molecular orbital, $I = -\\varepsilon_{\\mathrm{HOMO}}$. Approximate functionals, however, often violate this equivalence due to self-interaction error. This exercise provides a direct, hands-on method to diagnose and quantify this fundamental deficiency by comparing the two values for simple atomic systems. [@problem_id:2804406]", "problem": "You are given precomputed Local Density Approximation (LDA) data for ground-state total energies and the highest occupied Kohn–Sham orbital energy for three atoms. Using the definition of the first ionization energy as the difference of ground-state total energies between the cation and the neutral, and the Kohn–Sham interpretation of the negative of the highest occupied orbital energy, quantify the deviation that arises in LDA. All energies are given in hartree and your answers must be expressed in hartree, rounded to six decimal places.\n\nFoundational definitions and facts to use:\n- In Density Functional Theory (DFT), the first ionization energy is defined by the finite difference of total energies as $I \\equiv E(N-1) - E(N)$, where $E(M)$ denotes the exact ground-state total energy for $M$ electrons.\n- In exact Kohn–Sham (KS) DFT, it holds that $I = -\\varepsilon_{\\mathrm{HOMO}}$, where $\\varepsilon_{\\mathrm{HOMO}}$ is the highest occupied KS eigenvalue, but approximate functionals such as the Local Density Approximation (LDA) generally violate this equality.\n\nYour task:\n- For each atom, compute $I = E(N-1) - E(N)$.\n- Compute $-\\varepsilon_{\\mathrm{HOMO}}$.\n- Compute the signed deviation $\\Delta = I - \\left(-\\varepsilon_{\\mathrm{HOMO}}\\right)$.\n- Report, for each atom, the triple $[I,\\,-\\varepsilon_{\\mathrm{HOMO}},\\,\\Delta]$.\n\nTest suite data (LDA, spin-unpolarized where relevant; values are representative and self-consistent):\n- Hydrogen: $E_{\\mathrm{LDA}}(N=1) = -0.478$, $E_{\\mathrm{LDA}}(N-1=0) = 0.000$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.270$.\n- Helium: $E_{\\mathrm{LDA}}(N=2) = -2.834$, $E_{\\mathrm{LDA}}(N-1=1) = -1.940$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.571$.\n- Neon: $E_{\\mathrm{LDA}}(N=10) = -128.200$, $E_{\\mathrm{LDA}}(N-1=9) = -127.360$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.540$.\n\nCoverage rationale for the test suite:\n- Hydrogen serves as an edge case where $E(N-1)=0$ and the system has a single electron, highlighting self-interaction.\n- Helium is a closed-shell, light atom probing the transition from one- to two-electron behavior.\n- Neon is a closed-shell, heavier atom probing many-electron behavior and delocalization tendencies.\n\nRequired final output format:\n- Your program should produce a single line of output containing the results as a comma-separated list of three lists, each list corresponding to one atom (Hydrogen, Helium, Neon in this order), and each inner list containing the three floats $[I,\\,-\\varepsilon_{\\mathrm{HOMO}},\\,\\Delta]$, all rounded to six decimal places.\n- The line must be formatted exactly like:\n  \"[[a1,a2,a3],[b1,b2,b3],[c1,c2,c3]]\"\n  where each $a_i$, $b_i$, $c_i$ is a float in hartree with exactly six digits after the decimal point.\n\nNo input will be provided to your program; it must use the embedded test suite data above and print the single required line.", "solution": "The problem is subjected to validation and is deemed valid. It is scientifically grounded in the principles of Density Functional Theory (DFT), well-posed with all necessary data provided, and objective in its formulation. We will proceed with a solution.\n\nThe central task is to quantify the discrepancy between two methods for calculating the first ionization energy, $I$, within the framework of the Local Density Approximation (LDA). In exact DFT, the first ionization energy is given by two equivalent expressions. The first is the difference in ground-state total energies between the $(N-1)$-electron system and the $N$-electron system:\n$$I \\equiv E(N-1) - E(N)$$\nThis is often referred to as the $\\Delta$SCF method. The second arises from Janak's theorem, which relates the derivative of the total energy with respect to orbital occupation to the orbital eigenvalue. For the highest occupied molecular orbital (HOMO), this leads to the exact relation:\n$$I = -\\varepsilon_{\\mathrm{HOMO}}$$\nwhere $\\varepsilon_{\\mathrm{HOMO}}$ is the energy of the highest occupied Kohn-Sham orbital.\n\nFor approximate exchange-correlation functionals, such as LDA, this equality is not guaranteed. The failure of LDA to satisfy this condition is a well-known deficiency, stemming from self-interaction error and the related delocalization error. An electron in such an approximate potential spuriously interacts with its own charge density, which is artificially spread out. This unphysical self-repulsion raises the orbital energies, particularly $\\varepsilon_{\\mathrm{HOMO}}$, making them less negative than they should be. Consequently, $-\\varepsilon_{\\mathrm{HOMO}}$ becomes a poor approximation for the ionization energy.\n\nWe will compute the ionization energy using both definitions and then calculate their signed deviation, $\\Delta$, for each of the specified atoms. The deviation is defined as:\n$$\\Delta = I - (-\\varepsilon_{\\mathrm{HOMO}})$$\nA non-zero value of $\\Delta$ quantifies the error in the LDA functional with respect to this fundamental property. All energies are in hartree.\n\nFor the Hydrogen atom ($N=1$):\nThe provided data are $E_{\\mathrm{LDA}}(N=1) = -0.478$, $E_{\\mathrm{LDA}}(N-1=0) = 0.000$, and $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.270$.\nThe ionization energy from the total energy difference is:\n$$I_{\\mathrm{H}} = E_{\\mathrm{LDA}}(0) - E_{\\mathrm{LDA}}(1) = 0.000 - (-0.478) = 0.478$$\nThe ionization energy from the HOMO eigenvalue is:\n$$-\\varepsilon_{\\mathrm{HOMO, H}}^{\\mathrm{LDA}} = -(-0.270) = 0.270$$\nThe deviation is:\n$$\\Delta_{\\mathrm{H}} = I_{\\mathrm{H}} - (-\\varepsilon_{\\mathrm{HOMO, H}}^{\\mathrm{LDA}}) = 0.478 - 0.270 = 0.208$$\nFor the single-electron hydrogen atom, this deviation is a pure manifestation of self-interaction error.\n\nFor the Helium atom ($N=2$):\nThe provided data are $E_{\\mathrm{LDA}}(N=2) = -2.834$, $E_{\\mathrm{LDA}}(N-1=1) = -1.940$, and $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.571$.\nThe ionization energy from the total energy difference is:\n$$I_{\\mathrm{He}} = E_{\\mathrm{LDA}}(1) - E_{\\mathrm{LDA}}(2) = -1.940 - (-2.834) = 0.894$$\nThe ionization energy from the HOMO eigenvalue is:\n$$-\\varepsilon_{\\mathrm{HOMO, He}}^{\\mathrm{LDA}} = -(-0.571) = 0.571$$\nThe deviation is:\n$$\\Delta_{\\mathrm{He}} = I_{\\mathrm{He}} - (-\\varepsilon_{\\mathrm{HOMO, He}}^{\\mathrm{LDA}}) = 0.894 - 0.571 = 0.323$$\nThe substantial positive deviation shows that $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}}$ is significantly too high (not negative enough).\n\nFor the Neon atom ($N=10$):\nThe provided data are $E_{\\mathrm{LDA}}(N=10) = -128.200$, $E_{\\mathrm{LDA}}(N-1=9) = -127.360$, and $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{LDA}} = -0.540$.\nThe ionization energy from the total energy difference is:\n$$I_{\\mathrm{Ne}} = E_{\\mathrm{LDA}}(9) - E_{\\mathrm{LDA}}(10) = -127.360 - (-128.200) = 0.840$$\nThe ionization energy from the HOMO eigenvalue is:\n$$-\\varepsilon_{\\mathrm{HOMO, Ne}}^{\\mathrm{LDA}} = -(-0.540) = 0.540$$\nThe deviation is:\n$$\\Delta_{\\mathrm{Ne}} = I_{\\mathrm{Ne}} - (-\\varepsilon_{\\mathrm{HOMO, Ne}}^{\\mathrm{LDA}}) = 0.840 - 0.540 = 0.300$$\nThe error persists for many-electron systems, highlighting the systematic nature of this failure in LDA. In all cases, the $-\\varepsilon_{\\mathrm{HOMO}}$ value severely underestimates the ionization energy predicted by the more reliable total energy difference method. This is a direct consequence of the spuriously convex $E(N)$ curve produced by local functionals, which violates the correct piecewise-linear behavior. The positive deviation $\\Delta$ is characteristic of delocalization error inherent to common approximate functionals.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the deviation between two definitions of the first ionization energy\n    using precomputed Local Density Approximation (LDA) data for H, He, and Ne.\n    \"\"\"\n    \n    # Test suite data (LDA, in hartree): (E_N, E_N_minus_1, epsilon_HOMO)\n    # The data represents ground-state total energies and the highest occupied\n    # Kohn-Sham orbital energy for the neutral atom.\n    test_cases = [\n        # Hydrogen (N=1)\n        (-0.478, 0.000, -0.270),  \n        # Helium (N=2)\n        (-2.834, -1.940, -0.571),  \n        # Neon (N=10)\n        (-128.200, -127.360, -0.540) \n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        E_N, E_N_minus_1, epsilon_HOMO = case\n        \n        # 1. Compute the ionization energy from the total energy difference.\n        # I = E(N-1) - E(N)\n        I_delta_scf = E_N_minus_1 - E_N\n        \n        # 2. Compute the ionization energy from the HOMO eigenvalue.\n        # I = -epsilon_HOMO\n        I_ks_eigenvalue = -epsilon_HOMO\n        \n        # 3. Compute the signed deviation.\n        # Delta = I_delta_scf - I_ks_eigenvalue\n        deviation = I_delta_scf - I_ks_eigenvalue\n        \n        # Store the triplet [I, -epsilon_HOMO, Delta] for the current atom.\n        atom_results = [I_delta_scf, I_ks_eigenvalue, deviation]\n        all_results.append(atom_results)\n\n    # Format the final output according to the specified format:\n    # \"[[a1,a2,a3],[b1,b2,b3],[c1,c2,c3]]\" with values rounded to six decimal places.\n    formatted_results = []\n    for atom_res in all_results:\n        # Format each number in the inner list to have exactly six decimal places.\n        inner_list_str = f\"[{atom_res[0]:.6f},{atom_res[1]:.6f},{atom_res[2]:.6f}]\"\n        formatted_results.append(inner_list_str)\n        \n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    \n    # Print the single required line.\n    print(final_output_string)\n\n# Execute the main function.\nsolve()\n```", "id": "2804406"}, {"introduction": "Beyond incorrect orbital energies, self-interaction and delocalization errors lead to qualitatively wrong predictions for chemical processes like bond dissociation. A classic example is the dissociation of the $\\mathrm{H}_{2}^{+}$ cation, where approximate functionals spuriously stabilize a state with the electron delocalized over both fragments instead of localizing on one. This practice challenges you to derive the energy expressions for both the exact piecewise-linear behavior and a model of the erroneous convex behavior, offering deep insight into the nature of delocalization error. [@problem_id:2804468]", "problem": "Consider the dissociation of the cationic hydrogen dimer, with chemical formula $\\mathrm{H}_{2}^{+}$, in the limit of very large internuclear separation so that the two protons define two non-overlapping fragments labeled $\\mathrm{A}$ and $\\mathrm{B}$. There is a single electron in the system. Use the following fundamental base:\n\n- In the exact Kohn–Sham formulation of Density Functional Theory (DFT), for any one-electron density, the Hartree self-interaction is exactly canceled by the exchange-correlation functional. Consequently, for a one-electron system the total energy is the sum of the non-interacting kinetic energy and the external potential energy, and the energy as a function of fractional electron number is piecewise linear according to the Perdew–Parr–Levy–Balduz (PPLB) condition.\n- At infinite separation, the Hamiltonian separates into two isolated fragments with on-site one-electron energies $\\varepsilon_{\\mathrm{A}}$ and $\\varepsilon_{\\mathrm{B}}$. For a hydrogen atom, the exact non-relativistic ground-state energy is $-0.5$ Hartree. In the symmetric $\\mathrm{H}_{2}^{+}$ case, $\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}=-0.5$ Hartree.\n- In approximate semi-local functionals such as the Generalized Gradient Approximation (GGA), the cancellation of the one-electron self-interaction is incomplete. A robust qualitative model for the residual delocalization error at dissociation is a convex quadratic penalty in the fragment occupations reflecting the quadratic scaling of the Hartree energy with charge, of the form $E_{\\mathrm{res}}(\\,n_{\\mathrm{A}}\\,)=\\alpha\\left(n_{\\mathrm{A}}^{2}+\\left(1-n_{\\mathrm{A}}\\right)^{2}\\right)$ with $\\alpha&gt;0$, where $n_{\\mathrm{A}}\\in[0,1]$ is the fraction of the electron localized on fragment $\\mathrm{A}$ and $1-n_{\\mathrm{A}}$ on fragment $\\mathrm{B}$.\n\nTasks:\n\n- Using only the above fundamentals, and assuming infinite separation so that there is no inter-fragment hopping or overlap, derive from first principles the exact dissociation-limit energy as a function of the occupation $n_{\\mathrm{A}}$ and identify the minimizing occupation that represents a symmetry-broken, localized-electron state. In the perfectly symmetric case $\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}$, adopt the convention that the localized-electron branch corresponds to $n_{\\mathrm{A}}=1$.\n- Construct a GGA-like approximate dissociation-limit energy by adding the convex quadratic residual error $E_{\\mathrm{res}}$ to the non-interacting fragment energy, and analytically determine the occupation $n_{\\mathrm{A}}^{\\ast}$ that minimizes this approximate energy subject to the bound constraints $n_{\\mathrm{A}}\\in[0,1]$. Specify when the minimizer lies strictly inside the interval and when it saturates at the boundaries.\n- Express all energies in Hartree units. Angles do not appear. All final numerical answers must be real numbers. Round all printed floating-point results to six digits after the decimal point.\n\nYour program must implement the derived formulas and evaluate, for each test case, the following four quantities in this order: the exact minimal energy $E_{\\mathrm{exact}}^{\\min}$ (Hartree), the corresponding exact minimizing occupation $n_{\\mathrm{A,exact}}^{\\ast}$, the GGA-like minimal energy $E_{\\mathrm{GGA}}^{\\min}$ (Hartree), and the corresponding GGA-like minimizing occupation $n_{\\mathrm{A,GGA}}^{\\ast}$.\n\nUse the following test suite of parameter triples $(\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}},\\alpha)$, with all energies in Hartree:\n\n- $( -0.5, -0.5, 0.1 )$\n- $( -0.48, -0.52, 0.1 )$\n- $( -0.3, -0.7, 0.1 )$\n- $( -0.48, -0.52, 0.01 )$\n- $( -0.5, -0.5, 0.001 )$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. The list must concatenate the four rounded values for each test case in the exact order specified above, traversing the test suite in the order listed. For example, the format must be $[E_{\\mathrm{exact}}^{\\min}(\\text{case}\\ \\mathrm{A}),n_{\\mathrm{A,exact}}^{\\ast}(\\text{case}\\ \\mathrm{A}),E_{\\mathrm{GGA}}^{\\min}(\\text{case}\\ \\mathrm{A}),n_{\\mathrm{A,GGA}}^{\\ast}(\\text{case}\\ \\mathrm{A}),\\dots]$ with no additional whitespace or text.", "solution": "We consider the dissociation limit of $\\mathrm{H}_{2}^{+}$ as two infinitely separated fragments $\\mathrm{A}$ and $\\mathrm{B}$ with on-site one-electron energies $\\varepsilon_{\\mathrm{A}}$ and $\\varepsilon_{\\mathrm{B}}$. There is a single electron with occupation $n_{\\mathrm{A}}$ on fragment $\\mathrm{A}$ and $1-n_{\\mathrm{A}}$ on fragment $\\mathrm{B}$, with $n_{\\mathrm{A}}\\in[0,1]$.\n\nExact dissociation energy from first principles. For any one-electron density, the exact exchange-correlation functional cancels the Hartree self-interaction, and the Perdew–Parr–Levy–Balduz (PPLB) condition enforces piecewise linearity of the total energy with respect to the electron number on each decoupled fragment. At infinite separation, there is no coupling term, so the exact energy as a function of $n_{\\mathrm{A}}$ is simply the linear interpolation between fragment energies:\n$$\nE_{\\mathrm{exact}}(n_{\\mathrm{A}})=n_{\\mathrm{A}}\\,\\varepsilon_{\\mathrm{A}}+\\left(1-n_{\\mathrm{A}}\\right)\\,\\varepsilon_{\\mathrm{B}}.\n$$\nBecause $E_{\\mathrm{exact}}(n_{\\mathrm{A}})$ is linear in $n_{\\mathrm{A}}$, its minimum on the closed interval $[0,1]$ is achieved at a boundary point. Specifically,\n$$\nE_{\\mathrm{exact}}^{\\min}=\\min\\left\\{\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}}\\right\\},\\quad\nn_{\\mathrm{A,exact}}^{\\ast}=\\begin{cases}\n1,&\\text{if }\\varepsilon_{\\mathrm{A}}&lt;\\varepsilon_{\\mathrm{B}},\\\\\n0,&\\text{if }\\varepsilon_{\\mathrm{B}}&lt;\\varepsilon_{\\mathrm{A}},\\\\\n1,&\\text{if }\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}\\ \\text{(by the stated convention of choosing a localized branch)}.\n\\end{cases}\n$$\nThus, the exact dissociation places the entire electron on the lower-energy fragment, and in the symmetric case any $n_{\\mathrm{A}}\\in[0,1]$ is degenerate; we select $n_{\\mathrm{A,exact}}^{\\ast}=1$ to represent a localized-electron state on fragment $\\mathrm{A}$.\n\nGGA-like approximate energy and minimizer. Semi-local functionals such as the Generalized Gradient Approximation (GGA) do not perfectly cancel one-electron self-interaction, producing a residual, convex delocalization error that increases with charge localization. A minimal, symmetry-respecting model for this residual in the dissociation limit is a quadratic penalty in the fragment occupations:\n$$\nE_{\\mathrm{res}}(n_{\\mathrm{A}})=\\alpha\\left(n_{\\mathrm{A}}^{2}+\\left(1-n_{\\mathrm{A}}\\right)^{2}\\right),\\quad \\alpha>0.\n$$\nAdding this to the non-interacting fragment energy yields the GGA-like total energy\n$$\nE_{\\mathrm{GGA}}(n_{\\mathrm{A}})=n_{\\mathrm{A}}\\,\\varepsilon_{\\mathrm{A}}+\\left(1-n_{\\mathrm{A}}\\right)\\,\\varepsilon_{\\mathrm{B}}+\\alpha\\left(n_{\\mathrm{A}}^{2}+\\left(1-n_{\\mathrm{A}}\\right)^{2}\\right).\n$$\nTo minimize $E_{\\mathrm{GGA}}(n_{\\mathrm{A}})$ over $n_{\\mathrm{A}}\\in[0,1]$, we first find the unconstrained stationary point by differentiation:\n$$\n\\frac{dE_{\\mathrm{GGA}}}{dn_{\\mathrm{A}}}=\\varepsilon_{\\mathrm{A}}-\\varepsilon_{\\mathrm{B}}+2\\alpha\\left(2n_{\\mathrm{A}}-1\\right).\n$$\nSetting the derivative to zero yields the unconstrained minimizer\n$$\nn_{\\mathrm{A}}^{\\mathrm{uncon}}=\\frac{1}{2}+\\frac{\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}}{4\\alpha}.\n$$\nBecause the second derivative is constant and positive, $\\frac{d^{2}E_{\\mathrm{GGA}}}{dn_{\\mathrm{A}}^{2}}=4\\alpha>0$, this stationary point is a global minimizer of the unconstrained quadratic. Enforcing the bound constraints $n_{\\mathrm{A}}\\in[0,1]$ then gives the constrained minimizer\n$$\nn_{\\mathrm{A,GGA}}^{\\ast}=\\min\\left\\{1,\\max\\left\\{0,\\ \\frac{1}{2}+\\frac{\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}}{4\\alpha}\\right\\}\\right\\}.\n$$\nThe corresponding minimal GGA-like energy is\n$$\nE_{\\mathrm{GGA}}^{\\min}=E_{\\mathrm{GGA}}\\!\\left(n_{\\mathrm{A,GGA}}^{\\ast}\\right)=n_{\\mathrm{A,GGA}}^{\\ast}\\,\\varepsilon_{\\mathrm{A}}+\\left(1-n_{\\mathrm{A,GGA}}^{\\ast}\\right)\\,\\varepsilon_{\\mathrm{B}}+\\alpha\\left(\\left(n_{\\mathrm{A,GGA}}^{\\ast}\\right)^{2}+\\left(1-n_{\\mathrm{A,GGA}}^{\\ast}\\right)^{2}\\right).\n$$\nInterior versus boundary regimes. The minimizer lies strictly in the interior if and only if $0<n_{\\mathrm{A}}^{\\mathrm{uncon}}<1$, i.e.,\n$$\n-2\\alpha<\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}<2\\alpha.\n$$\nIf $\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}\\leq -2\\alpha$, then $n_{\\mathrm{A,GGA}}^{\\ast}=0$; if $\\varepsilon_{\\mathrm{B}}-\\varepsilon_{\\mathrm{A}}\\geq 2\\alpha$, then $n_{\\mathrm{A,GGA}}^{\\ast}=1$. In the symmetric case $\\varepsilon_{\\mathrm{A}}=\\varepsilon_{\\mathrm{B}}$, the unconstrained minimizer is $n_{\\mathrm{A}}^{\\mathrm{uncon}}=\\frac{1}{2}$, and the minimal energy is elevated above the exact value by the residual penalty $\\alpha\\left(\\frac{1}{2}\\right)$ since $\\left(\\frac{1}{2}\\right)^{2}+\\left(1-\\frac{1}{2}\\right)^{2}=\\frac{1}{2}$.\n\nComputational procedure. For each parameter triple $(\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}},\\alpha)$:\n- Compute $E_{\\mathrm{exact}}^{\\min}=\\min\\left\\{\\varepsilon_{\\mathrm{A}},\\varepsilon_{\\mathrm{B}}\\right\\}$ and $n_{\\mathrm{A,exact}}^{\\ast}$ as above, with $n_{\\mathrm{A,exact}}^{\\ast}=1$ in the symmetric case by convention.\n- Compute $n_{\\mathrm{A,GGA}}^{\\ast}$ by clamping $n_{\\mathrm{A}}^{\\mathrm{uncon}}$ to $[0,1]$, and then $E_{\\mathrm{GGA}}^{\\min}$ by evaluating $E_{\\mathrm{GGA}}$ at $n_{\\mathrm{A,GGA}}^{\\ast}$.\n- Round each numerical output to six digits after the decimal point, and aggregate the results into a single flat list in the required order.\n\nApplication to the test suite. Using the listed parameters (in Hartree), we obtain:\n\n- For $( -0.5, -0.5, 0.1 )$: $E_{\\mathrm{exact}}^{\\min}=-0.5$, $n_{\\mathrm{A,exact}}^{\\ast}=1$, $n_{\\mathrm{A,GGA}}^{\\ast}=\\frac{1}{2}$, $E_{\\mathrm{GGA}}^{\\min}=-0.5+0.1\\cdot\\frac{1}{2}=-0.45$.\n- For $( -0.48, -0.52, 0.1 )$: $E_{\\mathrm{exact}}^{\\min}=-0.52$, $n_{\\mathrm{A,exact}}^{\\ast}=0$, $n_{\\mathrm{A,GGA}}^{\\ast}=\\frac{1}{2}+\\frac{-0.52-(-0.48)}{4\\cdot 0.1}=0.4$, and $E_{\\mathrm{GGA}}^{\\min}=-0.504+0.1\\cdot 0.52=-0.452$.\n- For $( -0.3, -0.7, 0.1 )$: $E_{\\mathrm{exact}}^{\\min}=-0.7$, $n_{\\mathrm{A,exact}}^{\\ast}=0$, unconstrained $n_{\\mathrm{A}}^{\\mathrm{uncon}}=-0.5$, so $n_{\\mathrm{A,GGA}}^{\\ast}=0$, and $E_{\\mathrm{GGA}}^{\\min}=-0.7+0.1=-0.6$.\n- For $( -0.48, -0.52, 0.01 )$: $E_{\\mathrm{exact}}^{\\min}=-0.52$, $n_{\\mathrm{A,exact}}^{\\ast}=0$, unconstrained $n_{\\mathrm{A}}^{\\mathrm{uncon}}=-0.5$, so $n_{\\mathrm{A,GGA}}^{\\ast}=0$, and $E_{\\mathrm{GGA}}^{\\min}=-0.52+0.01=-0.51$.\n- For $( -0.5, -0.5, 0.001 )$: $E_{\\mathrm{exact}}^{\\min}=-0.5$, $n_{\\mathrm{A,exact}}^{\\ast}=1$, $n_{\\mathrm{A,GGA}}^{\\ast}=\\frac{1}{2}$, and $E_{\\mathrm{GGA}}^{\\min}=-0.5+0.001\\cdot\\frac{1}{2}=-0.4995$.\n\nThe program will reproduce these values to six decimal places and format them as a single flat list as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef clamp(x, lo, hi):\n    return max(lo, min(hi, x))\n\ndef exact_min_energy_and_occupation(eA, eB):\n    # Exact: piecewise linear, minimize at boundaries.\n    if eA < eB:\n        nA = 1.0\n        E = eA\n    elif eB < eA:\n        nA = 0.0\n        E = eB\n    else:\n        # Degenerate symmetric case: choose localized branch on A by convention.\n        nA = 1.0\n        E = eA  # equals eB\n    return E, nA\n\ndef gga_min_energy_and_occupation(eA, eB, alpha):\n    # Unconstrained minimizer for quadratic energy\n    n_uncon = 0.5 + (eB - eA) / (4.0 * alpha)\n    nA = clamp(n_uncon, 0.0, 1.0)\n    # Energy at minimizer\n    E = nA * eA + (1.0 - nA) * eB + alpha * (nA**2 + (1.0 - nA)**2)\n    return E, nA\n\ndef solve():\n    # Define the test cases from the problem statement: (eA, eB, alpha), in Hartree.\n    test_cases = [\n        (-0.5,   -0.5,  0.1),\n        (-0.48,  -0.52, 0.1),\n        (-0.3,   -0.7,  0.1),\n        (-0.48,  -0.52, 0.01),\n        (-0.5,   -0.5,  0.001),\n    ]\n\n    results = []\n    for eA, eB, alpha in test_cases:\n        E_exact, n_exact = exact_min_energy_and_occupation(eA, eB)\n        E_gga, n_gga = gga_min_energy_and_occupation(eA, eB, alpha)\n        # Append rounded values as strings to control formatting and avoid spaces.\n        results.extend([\n            f\"{E_exact:.6f}\",\n            f\"{n_exact:.6f}\",\n            f\"{E_gga:.6f}\",\n            f\"{n_gga:.6f}\",\n        ])\n\n    # Final print statement in the exact required format (single line, no extra spaces).\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2804468"}, {"introduction": "Once we can diagnose and model delocalization error, the next step is to develop strategies to correct it. Constrained DFT (cDFT) is a powerful method that enforces physically meaningful integer electron numbers on fragments, thereby removing the spurious stabilization of delocalized fractional charges. In this exercise, you will implement a simplified model of a cDFT calculation to directly compute the delocalization error as the energy lowering gained by the unconstrained, erroneous functional relative to the physically correct integer-charge state. [@problem_id:2804379]", "problem": "You are to formalize and implement, in a single complete program, a simplified model of a two-fragment Density Functional Theory (DFT) calculation that quantifies delocalization error by comparing an unconstrained Generalized Gradient Approximation (GGA) minimum to a constrained calculation that enforces integer fragment charges. Your model must be mathematically well-defined and solvable without any external quantum chemistry software.\n\nFoundational background and definitions to use:\n- In exact Density Functional Theory (DFT), the Perdew–Parr–Levy–Balduz (PPLB) piecewise linearity condition states that for an isolated system, the exact ground-state energy as a function of electron number is piecewise linear between integers. For separated fragments, the exact energy of a composite system with one additional electron is the minimum of the two integer-charge states localized on either fragment; any fractional-charge state is energetically degenerate with the straight-line interpolation between the two integer endpoints.\n- Approximations such as the Generalized Gradient Approximation (GGA) typically introduce self-interaction and delocalization errors, producing a convex energy with respect to fractional electron number. This convexity spuriously stabilizes fractionally charged states.\n- Constrained DFT (cDFT) enforces an integer charge constraint on a fragment using a Lagrange multiplier, thereby eliminating fractional-charge delocalization.\n\nModel construction:\n- Consider two fragments, labeled A and B, and one additional electron that can be fractionally distributed between them. Let the fraction of the additional electron on fragment A be denoted by the variable $x \\in [0,1]$, so the fraction on fragment B is $1 - x$.\n- Let $E_A(0)$ and $E_A(1)$ be the energies (in electronvolts) of fragment A with $0$ and $1$ of the additional electron localized on A, respectively. Similarly, let $E_B(0)$ and $E_B(1)$ be the energies of fragment B with $0$ and $1$ of the additional electron localized on B, respectively. Define the energy differences $\\Delta_A = E_A(1) - E_A(0)$ and $\\Delta_B = E_B(1) - E_B(0)$.\n- The exact piecewise-linear baseline (with no delocalization error) for the composite system as a function of $x$ is given by the linear contributions\n  $$\n  L_A(x) = (1 - x)\\,E_A(0) + x\\,E_A(1), \\quad L_B(1 - x) = x\\,E_B(0) + (1 - x)\\,E_B(1).\n  $$\n- To model a GGA-like delocalization error, add convexity via quadratic curvature terms on each fragment with parameters $\\kappa_A \\le 0$ and $\\kappa_B \\le 0$ (in electronvolts), yielding an additive term $\\kappa_A\\,x(1 - x) + \\kappa_B\\,x(1 - x)$. The sign convention $\\kappa_i \\le 0$ produces convex energy in $x$, favoring delocalization.\n- Include an interfragment Coulomb interaction penalty $J \\ge 0$ (in electronvolts) for fractional charges, also proportional to $x(1 - x)$, reflecting electrostatic repulsion between partial charges on separated fragments.\n- The total GGA-modeled energy for the composite system is then\n  $$\n  E_{\\mathrm{GGA}}(x) = L_A(x) + L_B(1 - x) + \\big(\\kappa_A + \\kappa_B + J\\big)\\,x(1 - x).\n  $$\n- The constrained DFT (cDFT) energy enforces an integer fragment charge by restricting $x \\in \\{0,1\\}$ via a Lagrange multiplier. In this model, the cDFT energy is\n  $$\n  E_{\\mathrm{cDFT}} = \\min\\!\\big\\{ E_{\\mathrm{GGA}}(0),\\, E_{\\mathrm{GGA}}(1) \\big\\}.\n  $$\n  Note that the curvature and interfragment terms vanish at $x=0$ and $x=1$.\n- The delocalization error is quantified as\n  $$\n  \\delta = E_{\\mathrm{cDFT}} - \\min_{x \\in [0,1]} E_{\\mathrm{GGA}}(x).\n  $$\n  By construction, $\\delta \\ge 0$, with strict positivity indicating spurious stabilization of a fractional-charge state by the approximate functional.\n\nYour tasks:\n1. From first principles of constrained optimization, set up the minimization of $E_{\\mathrm{GGA}}(x)$ with and without the integer-charge constraint. For the unconstrained case, determine the stationary point in the interior if it exists, and otherwise select the boundary minimizer. For the constrained case, enforce $x \\in \\{0,1\\}$ using the Lagrange multiplier formalism and show this reduces to selecting the lesser of the two endpoint energies.\n2. Implement a program that, for each provided parameter set, computes $\\delta$ in electronvolts to six decimal places.\n\nInput is not provided to your program; instead, you must hard-code the following test suite of parameter sets, each as a 7-tuple $(E_A(0), E_A(1), E_B(0), E_B(1), \\kappa_A, \\kappa_B, J)$, all in electronvolts:\n- Test 1 (symmetric, strong delocalization): $(0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 0.1)$.\n- Test 2 (asymmetric, moderate delocalization): $(0.0, -3.2, 0.0, -2.7, -0.5, -0.7, 0.3)$.\n- Test 3 (symmetric, strong Coulomb penalty, no delocalization): $(0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 2.0)$.\n- Test 4 (zero curvature, linear baseline, boundary minimum): $(0.0, -3.5, 0.0, -2.0, 0.0, 0.0, 0.2)$.\n- Test 5 (asymmetric, weak delocalization near boundary): $(0.0, -1.1, 0.0, -1.0, -0.15, -0.15, 0.1)$.\n- Test 6 (high asymmetry, negative curvature but boundary clamp): $(0.0, -4.0, 0.0, -1.0, -0.1, -0.2, 0.1)$.\n\nAngle units are not applicable. All energies must be handled and reported in electronvolts (eV).\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each value being a float formatted to exactly six decimal places, in the same order as the test suite, for example: \"[0.123456,0.000000,...]\".", "solution": "The problem is scientifically grounded, well-posed, objective, and self-contained, and therefore is valid for solution. The task is to formalize and compute the delocalization error, $\\delta$, in a simplified model of a two-fragment system based on Density Functional Theory (DFT) principles.\n\nThe total energy of the composite system, as a function of the fractional electron charge $x$ on fragment A, is given by:\n$$ E_{\\mathrm{GGA}}(x) = L_A(x) + L_B(1 - x) + \\big(\\kappa_A + \\kappa_B + J\\big)\\,x(1 - x) $$\nwhere $x \\in [0,1]$. Let us first expand and simplify this expression.\nSubstituting the definitions for the linear components $L_A(x) = (1 - x)\\,E_A(0) + x\\,E_A(1)$ and $L_B(1 - x) = x\\,E_B(0) + (1 - x)\\,E_B(1)$, we get:\n$$ E_{\\mathrm{GGA}}(x) = \\big((1 - x)\\,E_A(0) + x\\,E_A(1)\\big) + \\big(x\\,E_B(0) + (1 - x)\\,E_B(1)\\big) + (\\kappa_A + \\kappa_B + J)(x - x^2) $$\nWe can group the terms by powers of $x$:\n$$ E_{\\mathrm{GGA}}(x) = \\big(E_A(0) + E_B(1)\\big) + x \\big( (E_A(1) - E_A(0)) - (E_B(1) - E_B(0)) \\big) + (\\kappa_A + \\kappa_B + J)x(1-x) $$\nLet us define three constants for clarity.\nThe energy at $x=0$ is $E_{\\mathrm{GGA}}(0) = E_A(0) + E_B(1)$.\nThe energy at $x=1$ is $E_{\\mathrm{GGA}}(1) = E_A(1) + E_B(0)$.\nThe total curvature parameter is $K = \\kappa_A + \\kappa_B + J$.\nThe energy difference between endpoints is $\\Delta E = E_{\\mathrm{GGA}}(1) - E_{\\mathrm{GGA}}(0) = (E_A(1) - E_A(0)) - (E_B(1) - E_B(0))$.\n\nThe energy expression can now be written as a quadratic function of $x$:\n$$ E_{\\mathrm{GGA}}(x) = E_{\\mathrm{GGA}}(0) + \\Delta E \\cdot x + K \\cdot x(1-x) = -Kx^2 + (K + \\Delta E)x + E_{\\mathrm{GGA}}(0) $$\nThe delocalization error $\\delta$ is defined as $\\delta = E_{\\mathrm{cDFT}} - E_{\\mathrm{min-unc}}$, where $E_{\\mathrm{cDFT}}$ is the minimum energy under an integer-charge constraint and $E_{\\mathrm{min-unc}}$ is the unconstrained minimum over $x \\in [0,1]$.\n\n**1. Constrained Minimization ($E_{\\mathrm{cDFT}}$)**\n\nThe constraint enforces an integer charge on each fragment, which corresponds to restricting the domain of $x$ to the set $\\{0, 1\\}$.\nThe problem asks to formalize this using a Lagrange multiplier with the constraint $x(1-x)=0$. The Lagrangian is $\\mathcal{L}(x, \\lambda) = E_{\\mathrm{GGA}}(x) - \\lambda x(1-x)$. The stationary conditions are $\\frac{\\partial \\mathcal{L}}{\\partial x} = 0$ and $\\frac{\\partial \\mathcal{L}}{\\partial \\lambda} = 0$. The second condition gives $x(1-x)=0$, so $x=0$ or $x=1$. These are the only candidate points for the minimum. Therefore, the minimum energy under this constraint is found by simply comparing the energy at these two points:\n$$ E_{\\mathrm{cDFT}} = \\min_{x \\in \\{0,1\\}} E_{\\mathrm{GGA}}(x) = \\min\\big(E_{\\mathrm{GGA}}(0), E_{\\mathrm{GGA}}(1)\\big) $$\n\n**2. Unconstrained Minimization ($E_{\\mathrm{min-unc}}$)**\n\nWe must find the global minimum of the quadratic function $E_{\\mathrm{GGA}}(x)$ on the closed interval $[0,1]$. The location of the minimum depends on the sign of the coefficient of the $x^2$ term, which is $-K$. The second derivative is $\\frac{d^2E_{\\mathrm{GGA}}}{dx^2} = -2K$.\n\nCase I: $K \\ge 0$.\nIn this case, $-2K \\le 0$, so the parabola is concave (opens downward) or, if $K=0$, the function is linear. The minimum value on a closed interval must occur at one of the boundaries.\n$$ E_{\\mathrm{min-unc}} = \\min\\big(E_{\\mathrm{GGA}}(0), E_{\\mathrm{GGA}}(1)\\big) $$\nThis is identical to $E_{\\mathrm{cDFT}}$. Consequently, for $K \\ge 0$, the delocalization error is $\\delta = E_{\\mathrm{cDFT}} - E_{\\mathrm{min-unc}} = 0$.\n\nCase II: $K < 0$.\nIn this case, $-2K > 0$, so the parabola is convex (opens upward). The vertex of the parabola is a global minimum. We find the coordinate of the vertex, $x^*$, by setting the first derivative to zero:\n$$ \\frac{dE_{\\mathrm{GGA}}}{dx} = -2Kx + (K + \\Delta E) = 0 \\implies x^* = \\frac{K + \\Delta E}{2K} = \\frac{1}{2} + \\frac{\\Delta E}{2K} $$\nThe minimum of $E_{\\mathrm{GGA}}(x)$ on the interval $[0,1]$ depends on the location of $x^*$:\n- If $0 < x^* < 1$, the vertex lies within the interval, and the unconstrained minimum is at $x^*$. The minimum energy is $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(x^*)$.\n- If $x^* \\le 0$, the function is monotonically increasing on $[0,1]$, so the minimum is at $x=0$. The minimum energy is $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(0)$.\n- If $x^* \\ge 1$, the function is monotonically decreasing on $[0,1]$, so the minimum is at $x=1$. The minimum energy is $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(1)$.\n\nThis logic can be simplified. The minimum on the interval occurs at $x_{\\mathrm{opt}} = \\max(0, \\min(1, x^*))$. The minimum energy is then $E_{\\mathrm{min-unc}} = E_{\\mathrm{GGA}}(x_{\\mathrm{opt}})$. The delocalization error is then calculated as $\\delta = E_{\\mathrm{cDFT}} - E_{\\mathrm{GGA}}(x_{\\mathrm{opt}})$. Since $E_{\\mathrm{GGA}}(x_{\\mathrm{opt}}) \\le E_{\\mathrm{cDFT}}$, we are guaranteed that $\\delta \\ge 0$.\n\nThe following program implements this aforementioned logic to compute $\\delta$ for the provided test cases.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the delocalization error for a simplified two-fragment DFT model.\n\n    The function iterates through a hard-coded suite of test cases. For each case,\n    it computes the energy of the constrained integer-charge state (EcDFT) and\n    the minimum energy of the unconstrained fractional-charge state (E_min_unc)\n    over the interval x in [0, 1]. The delocalization error is the difference\n    delta = EcDFT - E_min_unc.\n    \"\"\"\n    \n    # Test cases as 7-tuples: (E_A(0), E_A(1), E_B(0), E_B(1), kappa_A, kappa_B, J)\n    test_cases = [\n        # Test 1 (symmetric, strong delocalization)\n        (0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 0.1),\n        # Test 2 (asymmetric, moderate delocalization)\n        (0.0, -3.2, 0.0, -2.7, -0.5, -0.7, 0.3),\n        # Test 3 (symmetric, strong Coulomb penalty, no delocalization)\n        (0.0, -3.0, 0.0, -3.0, -0.8, -0.8, 2.0),\n        # Test 4 (zero curvature, linear baseline, boundary minimum)\n        (0.0, -3.5, 0.0, -2.0, 0.0, 0.0, 0.2),\n        # Test 5 (asymmetric, weak delocalization near boundary)\n        (0.0, -1.1, 0.0, -1.0, -0.15, -0.15, 0.1),\n        # Test 6 (high asymmetry, negative curvature but boundary clamp)\n        (0.0, -4.0, 0.0, -1.0, -0.1, -0.2, 0.1),\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        Ea0, Ea1, Eb0, Eb1, ka, kb, J = case\n        \n        # 1. Calculate endpoint energies and constrained minimum (EcDFT)\n        # E_GGA(0) corresponds to x=0, electron is on fragment B\n        E_gga_0 = Ea0 + Eb1\n        # E_GGA(1) corresponds to x=1, electron is on fragment A\n        E_gga_1 = Ea1 + Eb0\n        \n        E_cdft = min(E_gga_0, E_gga_1)\n        \n        # 2. Define constants for the quadratic energy function E_GGA(x)\n        # E_GGA(x) = -Kx^2 + (K + DeltaE)x + E_gga_0\n        K = ka + kb + J\n        DeltaE = E_gga_1 - E_gga_0\n        \n        # 3. Find the unconstrained minimum (E_min_unc) on x in [0, 1]\n        E_min_unc = 0.0\n        \n        if K >= 0:\n            # Parabola is concave or linear. Minimum is at a boundary.\n            E_min_unc = E_cdft\n        else: # K < 0\n            # Parabola is convex. Minimum is at the vertex, if in [0,1].\n            x_star = (K + DeltaE) / (2 * K)\n            \n            # Clamp x_star to the interval [0, 1] to find the minimum location\n            x_opt = max(0.0, min(1.0, x_star))\n            \n            # Calculate energy at the optimal x\n            # E_GGA(x) = L_A(x) + L_B(1-x) + K*x*(1-x)\n            # L_A(x) = (1-x)Ea0 + x*Ea1\n            # L_B(1-x) = x*Eb0 + (1-x)*Eb1\n            La_opt = (1 - x_opt) * Ea0 + x_opt * Ea1\n            Lb_opt = x_opt * Eb0 + (1 - x_opt) * Eb1\n            E_min_unc = La_opt + Lb_opt + K * x_opt * (1 - x_opt)\n            \n        # 4. Calculate delocalization error\n        delta = E_cdft - E_min_unc\n        \n        results.append(f\"{delta:.6f}\")\n        \n    # Final print statement in the exact required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2804379"}]}