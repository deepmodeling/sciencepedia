{"hands_on_practices": [{"introduction": "Phase space provides a powerful geometric framework for visualizing the complete state of a dynamical system. This exercise grounds this abstract concept by asking you to analyze the simple harmonic oscillator, a cornerstone model in physics and chemistry. By calculating the phase space area enclosed by a constant-energy trajectory, you will derive a fundamental quantity from statistical mechanics—the microcanonical density of states—and in doing so, reveal the deep connection between the geometry of motion and the statistical properties of an ensemble [@problem_id:2764571].", "problem": "A classical harmonic oscillator in one spatial dimension with mass $m$ and angular frequency $\\omega$ is described in canonical phase space by coordinate $x$ and conjugate momentum $p$, with Hamiltonian $H(x,p) = \\frac{p^{2}}{2m} + \\frac{1}{2} m \\omega^{2} x^{2}$. Consider the microcanonical ensemble at fixed total energy $E>0$. Using only fundamental definitions from classical statistical mechanics, compute the microcanonical density of states $\\Omega(E)$ adopting the convention of one microstate per Planck phase-space cell of volume $h$.\n\nYour derivation must proceed from the definitions that the cumulative phase-space volume below energy $E$ is $\\Gamma(E) = \\frac{1}{h} \\iint \\Theta(E - H(x,p)) \\, dx \\, dp$ and that the microcanonical density of states is $\\Omega(E) = \\frac{d\\Gamma}{dE}$, where $\\Theta$ is the Heaviside step function. Interpret $\\Gamma(E)$ geometrically as the phase-space area enclosed by the constant-energy contour divided by $h$, and connect this area to the energy $E$ for the harmonic oscillator. Then differentiate with respect to $E$ to obtain $\\Omega(E)$.\n\nExpress your final result as a closed-form analytic expression in terms of $\\omega$ and $h$. Do not perform any numerical substitutions. Report $\\Omega(E)$ in units of inverse joules, under the stated convention that phase-space volume is measured in units of $h$. The final answer must be a single expression without units in the answer box.", "solution": "We begin from the Hamiltonian $H(x,p) = \\frac{p^{2}}{2m} + \\frac{1}{2} m \\omega^{2} x^{2}$ and the microcanonical definitions. The cumulative phase-space volume below energy $E$ is\n$$\n\\Gamma(E) = \\frac{1}{h} \\iint \\Theta\\!\\big(E - H(x,p)\\big) \\, dx \\, dp,\n$$\nand the microcanonical density of states is\n$$\n\\Omega(E) = \\frac{d\\Gamma}{dE}.\n$$\n\nFor a system with a single degree of freedom, the region $\\{(x,p): H(x,p) \\le E\\}$ is the interior of the constant-energy curve $H(x,p) = E$ in the phase plane. For the harmonic oscillator, the equation $H(x,p) = E$ describes an ellipse:\n$$\n\\frac{p^{2}}{2m} + \\frac{1}{2} m \\omega^{2} x^{2} = E.\n$$\nTo find its semiaxes, set $x=0$ to obtain the maximal momentum magnitude $|p| = p_{\\max} = \\sqrt{2 m E}$, and set $p=0$ to obtain the maximal coordinate magnitude $|x| = x_{\\max} = \\sqrt{\\frac{2E}{m \\omega^{2}}}$. The area $A(E)$ of this ellipse is the product of $\\pi$ and the semiaxes:\n$$\nA(E) = \\pi \\, x_{\\max} \\, p_{\\max} \\;=\\; \\pi \\, \\sqrt{\\frac{2E}{m \\omega^{2}}} \\, \\sqrt{2 m E} \\;=\\; \\pi \\, \\frac{2E}{\\omega} \\;=\\; \\frac{2\\pi E}{\\omega}.\n$$\nGeometrically, the cumulative phase-space volume is this area divided by $h$:\n$$\n\\Gamma(E) = \\frac{A(E)}{h} = \\frac{1}{h} \\cdot \\frac{2\\pi E}{\\omega} = \\frac{2\\pi}{\\omega h} \\, E.\n$$\nDifferentiating with respect to $E$ gives the microcanonical density of states:\n$$\n\\Omega(E) = \\frac{d\\Gamma}{dE} = \\frac{2\\pi}{\\omega h}.\n$$\n\nThis result can also be interpreted in terms of the action variable $J(E) = \\frac{1}{2\\pi} \\oint p \\, dx = \\frac{A(E)}{2\\pi}$, for which $J(E) = \\frac{E}{\\omega}$ in the harmonic oscillator. Then\n$$\n\\Omega(E) = \\frac{d}{dE}\\!\\left(\\frac{A(E)}{h}\\right) = \\frac{2\\pi}{h} \\frac{dJ}{dE} = \\frac{2\\pi}{h} \\cdot \\frac{1}{\\omega} = \\frac{2\\pi}{\\omega h}.\n$$\nEither route shows that $\\Omega(E)$ is independent of $E$ and $m$, and under the stated convention of one state per $h$ of phase-space area, has units of inverse energy.\n\nTherefore, the closed-form analytic expression is\n$$\n\\Omega(E) = \\frac{2\\pi}{\\omega h}.\n$$", "answer": "$$\\boxed{\\frac{2\\pi}{\\omega h}}$$", "id": "2764571"}, {"introduction": "Beyond describing a single trajectory, a complete understanding of dynamics requires an analysis of its stability: how do small perturbations evolve over time? This practice introduces the fundamental solution matrix, a powerful linear algebraic tool that governs the evolution of such deviations. By deriving this matrix for the harmonic oscillator, you will see how its periodic nature is reflected in its stability properties, providing a foundation for analyzing more complex systems where stability dictates the transition from regular to chaotic motion [@problem_id:2764593].", "problem": "Consider a single normal mode of a bound molecular vibration modeled as a one-dimensional harmonic oscillator with Hamiltonian $H(x,p)=\\frac{p^{2}}{2m}+\\frac{1}{2}m\\omega^{2}x^{2}$, where $m$ is the mass and $\\omega$ is the angular frequency. Let the phase-space state be $z(t)=(x(t),p(t))^{\\mathsf{T}}$ in canonical coordinates. A small phase-space displacement about an arbitrary reference trajectory $z^{\\ast}(t)$ is denoted $\\delta z(t)=(\\delta x(t),\\delta p(t))^{\\mathsf{T}}$.\n\nStarting only from Hamilton’s equations and the definition of the fundamental solution (state-transition) matrix $\\Phi(t)$ as the linear map that satisfies $\\delta z(t)=\\Phi(t)\\,\\delta z(0)$ for all sufficiently small $\\delta z(0)$, do the following:\n\n- Derive the explicit form of $\\Phi(t)$.\n- Use your result to propagate an arbitrary small phase-space displacement $\\delta z(0)=(\\delta x_{0},\\delta p_{0})^{\\mathsf{T}}$ over one period $T=\\frac{2\\pi}{\\omega}$ to obtain $\\delta z(T)$.\n\nProvide as your final answer the propagated displacement after one period, $\\delta z(T)$, expressed as a single row matrix in terms of $\\delta x_{0}$ and $\\delta p_{0}$. No numerical evaluation is required, and no units should be included in the final answer.", "solution": "The problem requires the derivation of the fundamental solution matrix, or state-transition matrix, $\\Phi(t)$ for a one-dimensional harmonic oscillator and its application to propagate a small phase-space displacement over one period. The entire derivation must originate from Hamilton's equations of motion.\n\nThe Hamiltonian for the system is given as:\n$$H(x,p) = \\frac{p^2}{2m} + \\frac{1}{2}m\\omega^2x^2$$\nwhere $m$ is the mass, $\\omega$ is the angular frequency, $x$ is the position, and $p$ is the momentum.\n\nFirst, we write Hamilton’s equations of motion:\n$$\\dot{x} = \\frac{\\partial H}{\\partial p} = \\frac{p}{m}$$\n$$\\dot{p} = -\\frac{\\partial H}{\\partial x} = -m\\omega^2x$$\nThese equations can be expressed in matrix form for the phase-space vector $z(t)=(x(t), p(t))^{\\mathsf{T}}$.\n$$\\frac{d}{dt} \\begin{pmatrix} x \\\\ p \\end{pmatrix} = \\begin{pmatrix} 0 & \\frac{1}{m} \\\\ -m\\omega^2 & 0 \\end{pmatrix} \\begin{pmatrix} x \\\\ p \\end{pmatrix}$$\nThis is a system of linear first-order ordinary differential equations, which can be written compactly as $\\dot{z}(t) = Kz(t)$, where $K$ is the constant coefficient matrix:\n$$K = \\begin{pmatrix} 0 & \\frac{1}{m} \\\\ -m\\omega^2 & 0 \\end{pmatrix}$$\nThe problem considers a small displacement $\\delta z(t)$ about a reference trajectory $z^*(t)$. We define $x(t) = x^*(t) + \\delta x(t)$ and $p(t) = p^*(t) + \\delta p(t)$. Substituting these into Hamilton's equations gives:\n$$\\frac{d}{dt}(x^*(t) + \\delta x(t)) = \\frac{p^*(t) + \\delta p(t)}{m}$$\n$$\\frac{d}{dt}(p^*(t) + \\delta p(t)) = -m\\omega^2(x^*(t) + \\delta x(t))$$\nExpanding and reorganizing:\n$$\\dot{x}^*(t) + \\delta \\dot{x}(t) = \\frac{p^*(t)}{m} + \\frac{\\delta p(t)}{m}$$\n$$\\dot{p}^*(t) + \\delta \\dot{p}(t) = -m\\omega^2 x^*(t) - m\\omega^2 \\delta x(t)$$\nSince the reference trajectory $z^*(t)$ is itself a solution to Hamilton's equations, it must satisfy $\\dot{x}^*(t) = p^*(t)/m$ and $\\dot{p}^*(t) = -m\\omega^2 x^*(t)$. Subtracting these from the equations above yields the equations of motion for the displacement $\\delta z(t)$:\n$$\\delta \\dot{x}(t) = \\frac{\\delta p(t)}{m}$$\n$$\\delta \\dot{p}(t) = -m\\omega^2 \\delta x(t)$$\nIn matrix form, we have:\n$$\\frac{d}{dt} \\begin{pmatrix} \\delta x \\\\ \\delta p \\end{pmatrix} = \\begin{pmatrix} 0 & \\frac{1}{m} \\\\ -m\\omega^2 & 0 \\end{pmatrix} \\begin{pmatrix} \\delta x \\\\ \\delta p \\end{pmatrix}$$\nThis is the equation $\\delta\\dot{z}(t) = K \\delta z(t)$. The fact that the matrix $K$ is constant and independent of the reference trajectory $z^*(t)$ is a special property of the harmonic oscillator, stemming from its quadratic Hamiltonian.\n\nThe solution to this linear system is given by $\\delta z(t) = \\exp(Kt) \\delta z(0)$. The fundamental solution matrix $\\Phi(t)$ is defined by the relation $\\delta z(t) = \\Phi(t) \\delta z(0)$. Therefore, we must compute the matrix exponential $\\Phi(t) = \\exp(Kt)$.\n\nTo compute $\\exp(Kt)$, we first analyze the powers of the matrix $K$:\n$$K^2 = \\begin{pmatrix} 0 & \\frac{1}{m} \\\\ -m\\omega^2 & 0 \\end{pmatrix} \\begin{pmatrix} 0 & \\frac{1}{m} \\\\ -m\\omega^2 & 0 \\end{pmatrix} = \\begin{pmatrix} -\\omega^2 & 0 \\\\ 0 & -\\omega^2 \\end{pmatrix} = -\\omega^2 I$$\nwhere $I$ is the $2 \\times 2$ identity matrix.\nUsing this result, higher powers are:\n$K^3 = K \\cdot K^2 = -\\omega^2 K$\n$K^4 = (K^2)^2 = (-\\omega^2 I)^2 = \\omega^4 I$\n$K^5 = -\\omega^4 K$\nand so on.\n\nThe Taylor series expansion for the matrix exponential is:\n$$\\exp(Kt) = \\sum_{n=0}^{\\infty} \\frac{(Kt)^n}{n!} = I + Kt + \\frac{K^2t^2}{2!} + \\frac{K^3t^3}{3!} + \\frac{K^4t^4}{4!} + \\dots$$\nWe can group the terms with even powers of $K$ (which are proportional to $I$) and odd powers of $K$ (which are proportional to $K$):\n$$\\exp(Kt) = I \\left(1 - \\frac{\\omega^2 t^2}{2!} + \\frac{\\omega^4 t^4}{4!} - \\dots \\right) + K \\left(t - \\frac{\\omega^2 t^3}{3!} + \\frac{\\omega^4 t^5}{5!} - \\dots \\right)$$\nThe first series in parentheses is the Taylor series for $\\cos(\\omega t)$. The second series can be rewritten as:\n$$\\frac{1}{\\omega} \\left(\\omega t - \\frac{(\\omega t)^3}{3!} + \\frac{(\\omega t)^5}{5!} - \\dots \\right) = \\frac{1}{\\omega} \\sin(\\omega t)$$\nThus, the expression for the matrix exponential becomes:\n$$\\exp(Kt) = I \\cos(\\omega t) + \\frac{K}{\\omega} \\sin(\\omega t)$$\nSubstituting the matrices $I$ and $K$ gives the explicit form of $\\Phi(t)$:\n$$\\Phi(t) = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} \\cos(\\omega t) + \\frac{1}{\\omega} \\begin{pmatrix} 0 & \\frac{1}{m} \\\\ -m\\omega^2 & 0 \\end{pmatrix} \\sin(\\omega t)$$\n$$\\Phi(t) = \\begin{pmatrix} \\cos(\\omega t) & 0 \\\\ 0 & \\cos(\\omega t) \\end{pmatrix} + \\begin{pmatrix} 0 & \\frac{1}{m\\omega} \\sin(\\omega t) \\\\ -m\\omega \\sin(\\omega t) & 0 \\end{pmatrix}$$\n$$\\Phi(t) = \\begin{pmatrix} \\cos(\\omega t) & \\frac{1}{m\\omega} \\sin(\\omega t) \\\\ -m\\omega \\sin(\\omega t) & \\cos(\\omega t) \\end{pmatrix}$$\nThis completes the first part of the problem.\n\nFor the second part, we must propagate an arbitrary small initial displacement $\\delta z(0) = (\\delta x_0, \\delta p_0)^{\\mathsf{T}}$ over one period $T = \\frac{2\\pi}{\\omega}$. We need to compute $\\delta z(T) = \\Phi(T) \\delta z(0)$.\nFirst, we evaluate the matrix $\\Phi(t)$ at $t=T$:\n$$\\omega T = \\omega \\left(\\frac{2\\pi}{\\omega}\\right) = 2\\pi$$\nThe trigonometric functions become:\n$$\\cos(\\omega T) = \\cos(2\\pi) = 1$$\n$$\\sin(\\omega T) = \\sin(2\\pi) = 0$$\nSubstituting these values into the expression for $\\Phi(t)$:\n$$\\Phi(T) = \\begin{pmatrix} \\cos(2\\pi) & \\frac{1}{m\\omega} \\sin(2\\pi) \\\\ -m\\omega \\sin(2\\pi) & \\cos(2\\pi) \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = I$$\nThe state-transition matrix after one full period is the identity matrix.\nTherefore, the propagated displacement is:\n$$\\delta z(T) = \\Phi(T) \\delta z(0) = I \\delta z(0) = \\delta z(0)$$\n$$\\begin{pmatrix} \\delta x(T) \\\\ \\delta p(T) \\end{pmatrix} = \\begin{pmatrix} \\delta x_0 \\\\ \\delta p_0 \\end{pmatrix}$$\nThis result signifies that for a harmonic oscillator, any small displacement from a reference trajectory returns to itself after one period. The propagated displacement vector is identical to the initial displacement vector. Expressed as a row matrix, this is $(\\delta x_0, \\delta p_0)$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\delta x_{0} & \\delta p_{0}\n\\end{pmatrix}\n}\n$$", "id": "2764593"}, {"introduction": "The pathways for chemical reactions can be understood as trajectories navigating a complex landscape in phase space, guided by geometric structures known as stable and unstable manifolds. This hands-on computational exercise brings this advanced concept to life, tasking you with numerically integrating trajectories to map the manifolds associated with a saddle-point periodic orbit — a gateway for reaction. You will implement and use a Poincaré section to visualize these intricate structures, translating abstract theory into a practical research skill essential for studying reaction dynamics [@problem_id:2764612].", "problem": "Consider a two-degree-of-freedom Hamiltonian system in dimensionless units defined by the Hamiltonian\n$$\nH(q_1,q_2,p_1,p_2) \\;=\\; \\tfrac{1}{2}\\,p_1^2 \\;+\\; \\tfrac{1}{2}\\,p_2^2 \\;+\\; \\left(\\tfrac{b}{4}\\,q_1^4 \\;-\\; \\tfrac{a}{2}\\,q_1^2\\right) \\;+\\; \\tfrac{\\omega^2}{2}\\,q_2^2,\n$$\nwhere $a>0$, $b>0$, and $\\omega>0$ are parameters. This Hamiltonian models a separable saddle-center system: along the $q_1$-direction there is an inverted quadratic (saddle near $q_1=0$) regularized by a quartic, and along the $q_2$-direction there is a harmonic oscillator. The equations of motion follow from Hamilton's equations,\n$$\n\\dot{q}_i \\;=\\; \\frac{\\partial H}{\\partial p_i}, \\qquad \\dot{p}_i \\;=\\; -\\,\\frac{\\partial H}{\\partial q_i}, \\qquad i\\in\\{1,2\\}.\n$$\nA saddle periodic orbit at fixed energy $E>0$ is obtained by freezing the saddle degree at the equilibrium and letting the center degree oscillate. Specifically, the periodic orbit is given by $q_1(t)=0$, $p_1(t)=0$, and the harmonic motion in the $q_2$-subsystem with amplitude determined by the energy constraint $H=E$. For a given $E$, the amplitude $A$ of the $q_2$ oscillator satisfies $E=\\tfrac{1}{2}\\,p_2^2+\\tfrac{\\omega^2}{2}\\,q_2^2$ along the periodic orbit, yielding $A=\\sqrt{2E}/\\omega$ and period $T=2\\pi/\\omega$.\n\nLinearization in the saddle direction $q_1$ around $(q_1,p_1)=(0,0)$ gives the hyperbolic pair of eigenvalues $\\pm \\lambda$ with $\\lambda=\\sqrt{a}$ and corresponding linear eigenvectors tangent to the unstable and stable manifolds, $v_u \\propto (q_1,p_1)=(1,\\lambda)$, $v_s \\propto (q_1,p_1)=(1,-\\lambda)$. For sufficiently small perturbation magnitude $\\delta>0$, initial conditions constructed by adding $\\delta v_u$ to a point on the periodic orbit lie on the unstable manifold and depart exponentially as $t\\to +\\infty$, while adding $\\delta v_s$ yields initial conditions that approach the periodic orbit as $t\\to +\\infty$; equivalently, these lie on the stable manifold when integrated backward in time.\n\nDefine the Poincaré section by the plane $q_2=0$ with the crossing condition $p_2>0$. The intersections of the stable and unstable manifolds with this section are one-dimensional curves in the $(q_1,p_1)$-plane. For the separable Hamiltonian above, these curves exhibit a time-reversal symmetry: at a given oscillator phase, the unstable and stable manifold intersections have identical $q_1$-coordinates and opposite $p_1$-coordinates in sign, implying equality of their absolute $p_1$ values.\n\nYour task is to implement a program that:\n- Uses Hamilton's equations and numerical integration to compute, for a set of energies, the first $M$ intersections of both the unstable manifold (by forward-time integration) and the stable manifold (by backward-time integration) with the Poincaré section $q_2=0$ and $p_2>0$.\n- Employs numerical continuation in the energy parameter $E$ by processing a list of increasing energies and, for each $E$, constructing the corresponding periodic orbit initial condition at phase $q_2=A$, $p_2=0$ with $A=\\sqrt{2E}/\\omega$, then perturbing by a fixed small $\\delta$ along $v_u$ and $v_s$ to seed the unstable and stable manifolds, respectively.\n- Quantifies the agreement between the unstable and stable manifold intersections on the section by computing, for each energy $E$, the metric\n$$\n\\Delta(E) \\;=\\; \\max_{k=1,\\dots,M} \\left( \\left|\\, q_{1,u}^{(k)} - q_{1,s}^{(k)} \\,\\right| \\;+\\; \\left|\\, \\left|p_{1,u}^{(k)}\\right| - \\left|p_{1,s}^{(k)}\\right| \\,\\right| \\right),\n$$\nwhere $\\left(q_{1,u}^{(k)},p_{1,u}^{(k)}\\right)$ and $\\left(q_{1,s}^{(k)},p_{1,s}^{(k)}\\right)$ are the $k$-th intersections of the unstable and stable manifolds, respectively, ordered by increasing absolute integration time.\n- Reports the values $\\Delta(E)$ for the specified test suite.\n\nUse dimensionless units throughout. Angles, when implied by oscillation phases, are in radians. Implement the numerical integration with an event that detects the Poincaré section $q_2=0$ and filters crossings with $p_2>0$. Choose tolerances sufficient to resolve the section accurately.\n\nTest suite and parameters to be used:\n- System parameters: $a=1$, $b=1$, $\\omega=1$.\n- Perturbation magnitude: $\\delta=10^{-9}$ along the linear eigenvectors $v_u=(1,\\lambda)$, $v_s=(1,-\\lambda)$ with $\\lambda=\\sqrt{a}$, scaled so that the perturbation added to $(q_1,p_1)$ is $(\\delta, \\pm \\lambda\\,\\delta)$.\n- Number of intersections to record per manifold: $M=2$.\n- Maximum integration horizon for each direction: $T_{\\max}=12$.\n- Numerical integrator absolute tolerance $10^{-12}$ and relative tolerance $10^{-10}$.\n- Energy values (numerical continuation set): $E\\in\\{10^{-6},\\,10^{-3},\\,5\\times 10^{-2},\\,10^{-1}\\}$.\n\nProgramming requirements:\n- Implement the above using any modern programming language; however, your final answer must be a single, complete, runnable program in Python $3.12$ using only the standard library plus the specified versions of NumPy and Scientific Python (SciPy).\n- Your program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each entry equal to $\\Delta(E)$ for the corresponding energy in the test suite, formatted in scientific notation with exactly $10$ significant digits (for example, $1.2345678900\\mathrm{e}{-03}$).\n\nThe final output format must be exactly:\n\"[d1,d2,d3,d4]\"\nwhere $d1$, $d2$, $d3$, and $d4$ are the values of $\\Delta(E)$ for $E=10^{-6}$, $E=10^{-3}$, $E=5\\times 10^{-2}$, and $E=10^{-1}$, respectively, each printed in scientific notation with $10$ significant digits as specified.", "solution": "The problem as stated is well-defined, scientifically sound, and computationally tractable. It describes a standard procedure in nonlinear dynamics for analyzing the phase space structure near a saddle point. All parameters and conditions are specified with sufficient precision. The problem is therefore deemed valid, and we proceed to its solution.\n\nThe system is governed by a two-degree-of-freedom Hamiltonian:\n$$\nH(q_1,q_2,p_1,p_2) = \\tfrac{1}{2}\\,p_1^2 + \\tfrac{1}{2}\\,p_2^2 + \\left(\\tfrac{b}{4}\\,q_1^4 - \\tfrac{a}{2}\\,q_1^2\\right) + \\tfrac{\\omega^2}{2}\\,q_2^2\n$$\nThe equations of motion are derived from Hamilton's equations, $\\dot{q}_i = \\partial H / \\partial p_i$ and $\\dot{p}_i = - \\partial H / \\partial q_i$. For the state vector $y = (q_1, q_2, p_1, p_2)$, this yields the first-order ordinary differential system:\n$$\n\\frac{d}{dt}\n\\begin{pmatrix}\nq_1 \\\\\nq_2 \\\\\np_1 \\\\\np_2\n\\end{pmatrix}\n=\n\\begin{pmatrix}\np_1 \\\\\np_2 \\\\\na q_1 - b q_1^3 \\\\\n-\\omega^2 q_2\n\\end{pmatrix}\n$$\nThese equations must be integrated numerically to find the trajectories that constitute the stable and unstable manifolds of the saddle periodic orbit. The problem specifies the use of the scientific library SciPy for this task. The `solve_ivp` function is appropriate, and a high-order adaptive step-size integrator such as the Dormand-Prince method of order $8(5,3)$ (`DOP853`) is selected to meet the specified accuracy requirements of $10^{-12}$ for absolute tolerance and $10^{-10}$ for relative tolerance.\n\nThe core of the task is to find the intersections of these manifolds with a Poincaré section defined by $q_2 = 0$ with the crossing condition $p_2 > 0$. This is accomplished by using the event detection capability of the `solve_ivp` function. An event function is defined to monitor the value of $q_2$; a root of this function signifies that the trajectory has crossed the plane $q_2 = 0$. After the integration is complete, the resulting event points are filtered to retain only those for which $p_2 > 0$.\n\nThe procedure for each energy $E$ in the test suite is as follows:\n$1$. The parameters are set: $a=1$, $b=1$, $\\omega=1$. This implies the stability exponent $\\lambda = \\sqrt{a} = 1$. The perturbation magnitude is fixed at $\\delta = 10^{-9}$.\n\n$2$. The initial conditions for the manifold trajectories are constructed. The base point lies on the periodic orbit at the turning point of the harmonic oscillator, $(q_1, q_2, p_1, p_2) = (0, A, 0, 0)$, where the amplitude is $A = \\sqrt{2E}/\\omega$. This point is then perturbed in the saddle direction $(q_1, p_1)$.\n- For the unstable manifold ($W^u$): The initial state is $y_0^u = (\\delta, A, \\lambda\\delta, 0)$. The system is integrated forward in time over the interval $[0, T_{\\max}]$.\n- For the stable manifold ($W^s$): The initial state is $y_0^s = (\\delta, A, -\\lambda\\delta, 0)$. The system is integrated backward in time over $[0, -T_{\\max}]$.\n\n$3$. During integration, the first $M=2$ crossings of the Poincaré section are recorded for each manifold. The resulting intersection points $(q_{1,u}^{(k)}, p_{1,u}^{(k)})$ and $(q_{1,s}^{(k)}, p_{1,s}^{(k)})$ for $k \\in \\{1, 2\\}$ are stored.\n\n$4$. A crucial aspect of this specific Hamiltonian is its separability, $H = H_1(q_1, p_1) + H_2(q_2, p_2)$. This uncoupling of the degrees of freedom imposes a strong time-reversal symmetry on the dynamics in the $(q_1, p_1)$ subspace. Specifically, if a trajectory in this subspace is given by $(q_1(t), p_1(t))$, then $(q_1(-t), -p_1(-t))$ is also a valid trajectory. The initial conditions for the stable and unstable manifolds are related by this symmetry: $(q_{1,s}(0), p_{1,s}(0)) = (\\delta, -\\lambda\\delta)$ and $(q_{1,u}(0), p_{1,u}(0)) = (\\delta, \\lambda\\delta)$.\nIt follows that the trajectories are related by $q_{1,s}(t) = q_{1,u}(-t)$ and $p_{1,s}(t) = -p_{1,u}(-t)$. The intersections occur at identical absolute times for both forward and backward integration. Therefore, at the $k$-th intersection, we must have $q_{1,s}^{(k)} = q_{1,u}^{(k)}$ and $p_{1,s}^{(k)} = -p_{1,u}^{(k)}$.\n\n$5$. Finally, the metric $\\Delta(E)$ is computed:\n$$\n\\Delta(E) = \\max_{k=1,\\dots,M} \\left( \\left|\\, q_{1,u}^{(k)} - q_{1,s}^{(k)} \\,\\right| + \\left|\\, \\left|p_{1,u}^{(k)}\\right| - \\left|p_{1,s}^{(k)}\\right| \\,\\right| \\right)\n$$\nBased on the analytical symmetry, each term in the sum should be exactly zero. That is, $|q_{1,u}^{(k)} - q_{1,u}^{(k)}| = 0$ and $||p_{1,u}^{(k)}| - |-p_{1,u}^{(k)}|| = 0$. Thus, the exact analytical value of $\\Delta(E)$ is $0$ for all energies. The numerically computed value of $\\Delta(E)$ will be a small, non-zero number that quantifies the error accumulated by the numerical integrator and its failure to perfectly preserve the underlying time-reversal symmetry of the system. This computation, therefore, serves as a stringent test of the numerical method's accuracy.\n\nThe following program implements this entire procedure. It iterates through the specified energies, performs the numerical integrations, extracts the manifold intersections, computes $\\Delta(E)$, and formats the results as required.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Computes the deviation between stable and unstable manifold intersections\n    for a separable saddle-center Hamiltonian system.\n    \"\"\"\n\n    # --- Problem Parameters ---\n    a = 1.0\n    b = 1.0\n    omega = 1.0\n    delta = 1e-9\n    M = 2\n    T_max = 12.0\n    atol = 1e-12\n    rtol = 1e-10\n    \n    # Test suite of energies\n    test_cases = [1e-6, 1e-3, 5e-2, 1e-1]\n\n    # --- Hamilton's Equations of Motion ---\n    # State vector y = [q1, q2, p1, p2]\n    def hamiltons_eqs(t, y, a_param, b_param, omega_param):\n        \"\"\"\n        Defines the vector field for the Hamiltonian system.\n        \"\"\"\n        q1, q2, p1, p2 = y\n        dq1_dt = p1\n        dq2_dt = p2\n        dp1_dt = a_param * q1 - b_param * q1**3\n        dp2_dt = -omega_param**2 * q2\n        return [dq1_dt, dq2_dt, dp1_dt, dp2_dt]\n\n    # --- Poincaré Section Event ---\n    def poincare_section(t, y, a_param, b_param, omega_param):\n        \"\"\"\n        Event function to detect crossings of the q2 = 0 plane.\n        \"\"\"\n        return y[1]  # q2 coordinate\n\n    poincare_section.terminal = False  # Continue integration after event\n    poincare_section.direction = 0     # Detect all zero-crossings\n\n    results = []\n    for E in test_cases:\n        # --- Initial Conditions ---\n        lambda_val = np.sqrt(a)\n        A = np.sqrt(2 * E) / omega\n\n        # Initial condition for unstable manifold (W^u)\n        y0_u = np.array([delta, A, lambda_val * delta, 0.0])\n        \n        # Initial condition for stable manifold (W^s)\n        y0_s = np.array([delta, A, -lambda_val * delta, 0.0])\n\n        # --- Unstable Manifold Integration (Forward Time) ---\n        sol_u = solve_ivp(\n            fun=hamiltons_eqs,\n            t_span=(0, T_max),\n            y0=y0_u,\n            method='DOP853',\n            args=(a, b, omega),\n            events=poincare_section,\n            rtol=rtol,\n            atol=atol,\n            dense_output=True\n        )\n\n        # Filter event points for p2 > 0\n        if sol_u.y_events[0].size > 0:\n            p2_at_events_u = sol_u.y_events[0][:, 3]\n            intersections_u_raw = sol_u.y_events[0][p2_at_events_u > 0]\n            if len(intersections_u_raw) >= M:\n                intersections_u = intersections_u_raw[:M]\n            else:\n                # Handle insufficient intersections if necessary\n                raise RuntimeError(f\"Insufficient unstable manifold intersections for E={E}\")\n        else:\n             raise RuntimeError(f\"No unstable manifold intersections found for E={E}\")\n\n        # --- Stable Manifold Integration (Backward Time) ---\n        sol_s = solve_ivp(\n            fun=hamiltons_eqs,\n            t_span=(0, -T_max),\n            y0=y0_s,\n            method='DOP853',\n            args=(a, b, omega),\n            events=poincare_section,\n            rtol=rtol,\n            atol=atol,\n            dense_output=True\n        )\n\n        # Filter event points for p2 > 0\n        if sol_s.y_events[0].size > 0:\n            p2_at_events_s = sol_s.y_events[0][:, 3]\n            intersections_s_raw = sol_s.y_events[0][p2_at_events_s > 0]\n            if len(intersections_s_raw) >= M:\n                intersections_s = intersections_s_raw[:M]\n            else:\n                raise RuntimeError(f\"Insufficient stable manifold intersections for E={E}\")\n        else:\n            raise RuntimeError(f\"No stable manifold intersections found for E={E}\")\n\n        # --- Compute the Delta(E) Metric ---\n        q1_u = intersections_u[:, 0]\n        p1_u = intersections_u[:, 2]\n        \n        q1_s = intersections_s[:, 0]\n        p1_s = intersections_s[:, 2]\n\n        delta_k_values = np.abs(q1_u - q1_s) + np.abs(np.abs(p1_u) - np.abs(p1_s))\n        delta_E = np.max(delta_k_values)\n        \n        results.append(delta_E)\n        \n    # --- Format and Print Final Output ---\n    # The format \"{:.10e}\" produces a string with 1 digit before the decimal point\n    # and 10 digits after, for a total of 11 significant figures, matching the example.\n    formatted_results = [f\"{res:.10e}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2764612"}]}