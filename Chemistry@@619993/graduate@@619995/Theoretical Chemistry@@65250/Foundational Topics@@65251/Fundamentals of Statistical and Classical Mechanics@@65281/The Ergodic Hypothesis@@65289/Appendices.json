{"hands_on_practices": [{"introduction": "The ergodic hypothesis is a cornerstone of statistical mechanics, but it can feel abstract. This first practice provides a concrete and solvable example to build your intuition. We will analyze a simple one-dimensional system—a particle bouncing in a linear potential—and explicitly calculate both the long-time average and the microcanonical ensemble average for a specific observable, demonstrating their equality and verifying that ergodicity holds [@problem_id:106883]. This foundational exercise solidifies the meaning behind the hypothesis.", "problem": "**Verifying Ergodicity for a Particle in a Linear Potential**\n\nA classical particle of mass $m$ moves in one dimension under the influence of a potential $V(x)$. The potential is given by a linear ramp for $x > 0$ and an infinite wall at $x=0$:\n$$\nV(x) = \\begin{cases}\n    \\alpha x & \\text{for } x > 0 \\\\\n    \\infty & \\text{for } x \\le 0\n\\end{cases}\n$$\nwhere $\\alpha$ is a positive constant. This system is sometimes referred to as the \"bouncing ball\" model. The particle has a fixed total energy $E > 0$. The Hamiltonian of the system for $x > 0$ is $H(x,p) = \\frac{p^2}{2m} + \\alpha x$.\n\nThe ergodic hypothesis states that for a sufficiently complex system, the long-time average of a physical observable is equal to its average over the microcanonical ensemble. We will test this hypothesis for a specific observable.\n\nThe time average of an observable $A(x,p)$ is defined as:\n$$\n\\langle A \\rangle_t = \\lim_{\\tau \\to \\infty} \\frac{1}{\\tau} \\int_0^\\tau A(x(t), p(t)) \\, dt\n$$\nFor a periodic system, this average can be computed over a single period $T$ of the motion.\n\nThe microcanonical ensemble average of the same observable is given by:\n$$\n\\langle A \\rangle_E = \\frac{\\iint A(x,p) \\, \\delta(E - H(x,p)) \\, dx \\, dp}{\\iint \\delta(E - H(x,p)) \\, dx \\, dp}\n$$\nwhere the integrals are taken over all accessible phase space.\n\n**Your task:**\nFor the observable $A(x,p) = x p^2$, calculate its microcanonical ensemble average, $\\langle x p^2 \\rangle_E$. Your final expression should be in terms of $m$, $E$, and $\\alpha$.\n\n(For a complete verification of the ergodic hypothesis, you could also compute the time average $\\langle x p^2 \\rangle_t$ and confirm that it equals the ensemble average. The solution provided will demonstrate this equality.)", "solution": "To compute the microcanonical ensemble average $\\langle x p^2 \\rangle_E$, we use the definition:\n\n$$\n\\langle x p^2 \\rangle_E = \\frac{\\iint x p^2  \\delta(E - H(x,p))  dx  dp}{\\iint \\delta(E - H(x,p))  dx  dp}\n$$\n\nwhere the Hamiltonian is $H(x,p) = \\frac{p^2}{2m} + \\alpha x$, and the integrals are over $x > 0$ and $p \\in (-\\infty, \\infty)$ due to the infinite wall at $x = 0$.\n\nFirst, we evaluate the denominator, which is the density of states term, $D$:\n\n$$\nD = \\iint \\delta\\left(E - \\frac{p^2}{2m} - \\alpha x\\right)  dx  dp\n$$\n\nWe integrate over $x$ first. For a fixed $p$, the delta function selects $x = \\frac{1}{\\alpha} \\left(E - \\frac{p^2}{2m}\\right)$. Using the property $\\delta(g(x)) = \\sum_i \\frac{\\delta(x - x_i)}{|g'(x_i)|}$, with $g(x) = E - \\frac{p^2}{2m} - \\alpha x$, we have $|g'(x)| = \\alpha$. The condition $x > 0$ requires $E - \\frac{p^2}{2m} > 0$, which means $|p|  \\sqrt{2mE}$.\n\n$$\nD = \\int_{-\\sqrt{2mE}}^{\\sqrt{2mE}} dp \\int_{0}^{\\infty} dx  \\frac{1}{\\alpha} \\delta\\left(x - \\frac{1}{\\alpha} \\left(E - \\frac{p^2}{2m}\\right)\\right) = \\frac{1}{\\alpha} \\int_{-\\sqrt{2mE}}^{\\sqrt{2mE}} dp = \\frac{2\\sqrt{2mE}}{\\alpha}\n$$\n\nNext, we evaluate the numerator, $N$:\n\n$$\nN = \\iint x p^2  \\delta\\left(E - \\frac{p^2}{2m} - \\alpha x\\right)  dx  dp\n$$\n\nUsing the same delta function integration over $x$:\n\n$$\nN = \\int_{-\\sqrt{2mE}}^{\\sqrt{2mE}} dp \\left[ \\frac{1}{\\alpha} \\left(E - \\frac{p^2}{2m}\\right) \\right] p^2 \\cdot \\frac{1}{\\alpha} = \\frac{1}{\\alpha^2} \\int_{-\\sqrt{2mE}}^{\\sqrt{2mE}} \\left( E p^2 - \\frac{p^4}{2m} \\right) dp\n$$\n\nThe integrand is an even function, so we can write:\n\n$$\nN = \\frac{2}{\\alpha^2} \\int_{0}^{\\sqrt{2mE}} \\left( E p^2 - \\frac{p^4}{2m} \\right) dp = \\frac{2}{\\alpha^2} \\left[ E \\frac{p^3}{3} - \\frac{p^5}{10m} \\right]_{0}^{\\sqrt{2mE}}\n$$\n\nSubstituting the upper limit:\n\n$$\nN = \\frac{2}{\\alpha^2} \\left( E \\frac{(2mE)^{3/2}}{3} - \\frac{(2mE)^{5/2}}{10m} \\right) = \\frac{2}{\\alpha^2} \\left( \\frac{(2m)^{3/2} E^{5/2}}{3} - \\frac{(2m)^{5/2} E^{5/2}}{10m} \\right)\n$$\n\nWe can simplify the second term using $(2m)^{5/2} = (2m) \\cdot (2m)^{3/2}$:\n\n$$\nN = \\frac{2}{\\alpha^2} \\left( \\frac{(2m)^{3/2} E^{5/2}}{3} - \\frac{2m \\cdot (2m)^{3/2} E^{5/2}}{10m} \\right) = \\frac{2}{\\alpha^2} (2m)^{3/2} E^{5/2} \\left( \\frac{1}{3} - \\frac{2m}{10m} \\right)\n$$\n\n$$\nN = \\frac{2}{\\alpha^2} (2m)^{3/2} E^{5/2} \\left( \\frac{1}{3} - \\frac{1}{5} \\right) = \\frac{2}{\\alpha^2} (2m)^{3/2} E^{5/2} \\left( \\frac{2}{15} \\right) = \\frac{4}{15 \\alpha^2} (2m)^{3/2} E^{5/2}\n$$\n\nFinally, we compute the average:\n\n$$\n\\langle x p^2 \\rangle_E = \\frac{N}{D} = \\frac{ \\frac{4}{15 \\alpha^2} (2m)^{3/2} E^{5/2} }{ \\frac{2}{\\alpha} (2mE)^{1/2} } = \\frac{2}{15 \\alpha} \\frac{(2m)^{3/2} E^{5/2}}{(2m)^{1/2} E^{1/2}}\n$$\n\n$$\n\\langle x p^2 \\rangle_E = \\frac{2}{15 \\alpha} (2m)^{(3/2 - 1/2)} E^{(5/2 - 1/2)} = \\frac{2}{15 \\alpha} (2m)^1 E^2 = \\frac{4 m E^2}{15 \\alpha}\n$$", "answer": "$$\n\\boxed{\\dfrac{4 m E^{2}}{15 \\alpha}}\n$$", "id": "106883"}, {"introduction": "Having seen the ergodic hypothesis in action, we now explore its limitations. A crucial condition for ergodicity is that the total energy is the only conserved quantity of motion. This practice examines a system of two coupled oscillators where, due to a special symmetry, energy is conserved separately in the center-of-mass and relative motions [@problem_id:92250]. By calculating and comparing the time and ensemble averages, you will discover how these additional conserved quantities confine the system's trajectory, causing the ergodic hypothesis to fail.", "problem": "Consider a one-dimensional system of two particles with masses $m_1$ and $m_2$. Their positions are $x_1$ and $x_2$. The system's dynamics are governed by a potential energy function that depends on both the center-of-mass coordinate, $X = \\frac{m_1 x_1 + m_2 x_2}{m_1+m_2}$, and the relative coordinate, $x = x_1 - x_2$. The potential is given by a sum of two harmonic terms:\n$$\nV(X, x) = \\frac{1}{2}k_X X^2 + \\frac{1}{2}k_x x^2\n$$\nwhere $k_X$ and $k_x$ are positive constants. Due to this potential, the Hamiltonian is separable in the center-of-mass and relative coordinates. This leads to two separate conserved quantities: the energy of the center-of-mass motion, $E_{CM}$, and the energy of the relative motion, $E_{rel}$. The total energy of the system is $E = E_{CM} + E_{rel}$, which is also conserved.\n\nA specific dynamical trajectory of the system is prepared such that the total energy $E$ is partitioned between the two modes as follows:\n$$\nE_{CM} = \\alpha E \\quad \\text{and} \\quad E_{rel} = (1-\\alpha)E\n$$\nwhere $\\alpha$ is a constant with $0 \\le \\alpha \\le 1$. For the purpose of calculating time averages, assume that the characteristic frequencies of the center-of-mass and relative motions are incommensurate.\n\nLet $K_1$ be the kinetic energy of the particle with mass $m_1$. Your task is to calculate the ratio $\\mathcal{R}$ of the time average of $K_1$, denoted by $\\langle K_1 \\rangle_t$, to its microcanonical ensemble average, $\\langle K_1 \\rangle_E$. The microcanonical average is taken over the surface of constant total energy $E$.\n\nFind the expression for the ratio $\\mathcal{R} = \\frac{\\langle K_1 \\rangle_t}{\\langle K_1 \\rangle_E}$ in terms of $m_1$, $m_2$, and $\\alpha$.", "solution": "The solution involves calculating the time average and the microcanonical ensemble average of the kinetic energy of particle 1, $K_1 = \\frac{1}{2}m_1 v_1^2$, and then finding their ratio.\n\n**1. Time Average $\\langle K_1 \\rangle_t$**\n\nFirst, we express the velocity of particle 1, $v_1 = \\dot{x}_1$, in terms of the center-of-mass velocity $\\dot{X}$ and relative velocity $\\dot{x}$. The coordinate transformations are:\n$X = \\frac{m_1 x_1 + m_2 x_2}{M}$ and $x = x_1 - x_2$, where $M = m_1+m_2$.\nInverting for $x_1$ gives: $x_1 = X + \\frac{m_2}{M}x$.\nDifferentiating with respect to time gives the velocity: $v_1 = \\dot{X} + \\frac{m_2}{M}\\dot{x}$.\n\nThe kinetic energy of particle 1 is:\n$$ K_1 = \\frac{1}{2}m_1 v_1^2 = \\frac{1}{2}m_1 \\left( \\dot{X}^2 + \\left(\\frac{m_2}{M}\\right)^2 \\dot{x}^2 + 2\\frac{m_2}{M}\\dot{X}\\dot{x} \\right) $$\nTo find the time average $\\langle K_1 \\rangle_t$, we average each term. Since the center-of-mass and relative motions are independent harmonic oscillations with incommensurate frequencies, the time average of the cross term $\\langle \\dot{X}\\dot{x} \\rangle_t$ is zero.\n\nFor a harmonic oscillator, the time average of its kinetic energy is half of its total energy.\n- For the center-of-mass motion: $\\langle \\frac{1}{2}M\\dot{X}^2 \\rangle_t = \\frac{E_{CM}}{2} \\implies \\langle \\dot{X}^2 \\rangle_t = \\frac{E_{CM}}{M}$.\n- For the relative motion (with reduced mass $\\mu = \\frac{m_1 m_2}{M}$): $\\langle \\frac{1}{2}\\mu\\dot{x}^2 \\rangle_t = \\frac{E_{rel}}{2} \\implies \\langle \\dot{x}^2 \\rangle_t = \\frac{E_{rel}}{\\mu}$.\n\nSubstituting these averages into the expression for $\\langle K_1 \\rangle_t$:\n$$ \\langle K_1 \\rangle_t = \\frac{1}{2}m_1 \\left( \\frac{E_{CM}}{M} + \\left(\\frac{m_2}{M}\\right)^2 \\frac{E_{rel}}{\\mu} \\right) = \\frac{1}{2}m_1 \\left( \\frac{E_{CM}}{M} + \\frac{m_2^2}{M^2} \\frac{M}{m_1 m_2} E_{rel} \\right) $$\n$$ \\langle K_1 \\rangle_t = \\frac{1}{2}m_1 \\left( \\frac{E_{CM}}{M} + \\frac{m_2}{m_1 M} E_{rel} \\right) = \\frac{m_1 E_{CM} + m_2 E_{rel}}{2M} $$\nUsing the given energy partition, $E_{CM} = \\alpha E$ and $E_{rel} = (1-\\alpha)E$:\n$$ \\langle K_1 \\rangle_t = \\frac{E}{2M} \\left( \\alpha m_1 + (1-\\alpha) m_2 \\right) $$\n\n**2. Microcanonical Ensemble Average $\\langle K_1 \\rangle_E$**\n\nThe total Hamiltonian can be written in normal coordinates as a sum of four independent quadratic terms: $H = (\\frac{P^2}{2M} + \\frac{1}{2}k_X X^2) + (\\frac{p^2}{2\\mu} + \\frac{1}{2}k_x x^2)$. According to the equipartition theorem for the microcanonical ensemble for a system with $N_{dof}$ quadratic degrees of freedom, the average energy associated with each degree of freedom is $E/N_{dof}$. Here, $N_{dof}=4$.\nThe average of the total kinetic energy for particle 1 is one of these four equal shares, so $\\langle K_1 \\rangle_E = E/4$. (A detailed derivation confirms that the total kinetic energy is, on average, shared equally among the degrees of freedom in this ensemble, regardless of mass).\n\n**3. Ratio $\\mathcal{R}$**\n\nFinally, we compute the ratio $\\mathcal{R} = \\frac{\\langle K_1 \\rangle_t}{\\langle K_1 \\rangle_E}$:\n$$ \\mathcal{R} = \\frac{\\frac{E}{2M} \\left( \\alpha m_1 + (1-\\alpha) m_2 \\right)}{E/4} = \\frac{4}{2M} \\left( \\alpha m_1 + (1-\\alpha) m_2 \\right) = \\frac{2\\left(\\alpha m_1 + (1-\\alpha) m_2\\right)}{m_1+m_2} $$\nThis ratio is only equal to 1 if $\\alpha = m_2/(m_1+m_2)$, which corresponds to the specific case where energy is initially partitioned according to the microcanonical equilibrium proportions. For any other $\\alpha$, $\\mathcal{R} \\neq 1$, demonstrating that the system is not ergodic on the constant total energy surface because the time average depends on the initial partitioning of energy.", "answer": "$$\\boxed{\\frac{2\\bigl(\\alpha m_1+(1-\\alpha)m_2\\bigr)}{m_1+m_2}}$$", "id": "92250"}, {"introduction": "In modern theoretical chemistry, researchers often face systems that are too complex for analytical solutions. How, then, can we assess whether a system is ergodic? This advanced practice introduces a powerful computational technique used to probe the structure of phase space [@problem_id:2813523]. You will implement a numerical integrator and use frequency map analysis to distinguish between regular, predictable trajectories (which are non-ergodic) and chaotic ones, providing a quantitative measure of how much of the phase space is likely to behave ergodically as a system's nonlinearity increases.", "problem": "Consider the near-integrable Hamiltonian system that models two coupled classical oscillators in nondimensional units (all quantities are dimensionless, and angular frequencies are in radians per unit time):\n$$\nH(x,y,p_x,p_y) \\;=\\; \\tfrac{1}{2}\\left(p_x^2 + p_y^2\\right) \\;+\\; \\tfrac{1}{2}\\left(\\omega_x^2 x^2 + \\omega_y^2 y^2\\right) \\;+\\; \\varepsilon\\, x^2 y^2,\n$$\nwith equations of motion given by Hamilton’s equations,\n$$\n\\dot{x} \\;=\\; p_x,\\quad \\dot{y} \\;=\\; p_y,\\quad \\dot{p}_x \\;=\\; -\\frac{\\partial H}{\\partial x},\\quad \\dot{p}_y \\;=\\; -\\frac{\\partial H}{\\partial y}.\n$$\nAssume fixed frequencies $\\omega_x = 1$ and $\\omega_y = \\sqrt{2}$, and consider three values of the nonlinearity parameter $\\varepsilon$ as a test suite. The initial total energy is fixed at $E = 1$. For each $\\varepsilon$, define a one-parameter family of initial conditions by setting $y(0)=0$, $p_x(0)=0$, choosing $x(0)$ from an evenly spaced grid of $M$ points within the interval $[0.05 x_{\\max}, 0.95 x_{\\max}]$ where $x_{\\max}=\\sqrt{2E}/\\omega_x$, and determining $p_y(0)0$ from the energy constraint $H(x(0),0,0,p_y(0))=E$. Angles are to be treated in radians.\n\nYour task is to write a program that, for each $\\varepsilon$ in the test suite, does the following:\n- Integrates the equations of motion using a symplectic scheme over a fixed time interval $T = N\\Delta t$, with $\\Delta t$ a constant time step and $N$ an integer number of steps. Use a time step $\\Delta t$ and number of steps $N$ that are explicitly specified below in the test suite.\n- From the numerical trajectory, constructs a frequency map by estimating the dominant angular frequencies $\\omega_x$ and $\\omega_y$ of the coordinates $x(t)$ and $y(t)$, respectively, using a discrete Fourier transform on two equal, consecutive halves of the time series to obtain two estimates $\\omega_x^{(1)}$, $\\omega_y^{(1)}$ from the first half and $\\omega_x^{(2)}$, $\\omega_y^{(2)}$ from the second half.\n- For each initial condition, computes the frequency ratio $\\nu = \\omega_y^{(1)}/\\omega_x^{(1)}$ from the first half (this constitutes the frequency map along the one-parameter family) and a drift diagnostic\n$$\nD \\;=\\; \\max\\!\\left(\\left|\\frac{\\omega_x^{(2)} - \\omega_x^{(1)}}{\\omega_x^{(1)}}\\right|,\\;\\left|\\frac{\\omega_y^{(2)} - \\omega_y^{(1)}}{\\omega_y^{(1)}}\\right|\\right),\n$$\nclassifying the orbit as “chaotic” if $D\\tau$ and “regular” otherwise, where $\\tau$ is a fixed threshold specified in the test suite below. To reduce spectral leakage, you should apply a tapering window to the time series before the Fourier transform and use quadratic interpolation around the highest spectral peak to refine the frequency estimate. All computations are nondimensional.\n- For each $\\varepsilon$ in the test suite, returns the fraction of initial conditions classified as chaotic, expressed as a decimal number in the closed interval $[0,1]$.\n\nIn the context of the ergodic hypothesis in theoretical chemistry, regular trajectories lie on invariant tori and fail to explore the available energy shell, so long-time averages can depend on initial conditions; by contrast, chaotic trajectories may explore connected chaotic components, supporting the equivalence between time averages and microcanonical ensemble averages on those components under suitable conditions. Your numerical classification should therefore quantify how the prevalence of chaos changes with $\\varepsilon$ and thereby how the plausibility of ergodic behavior varies.\n\nTest suite and numerical parameters to be used uniformly:\n- Frequencies: $\\omega_x = 1$, $\\omega_y = \\sqrt{2}$.\n- Energy: $E = 1$.\n- Grid size: $M = 9$.\n- Time step: $\\Delta t = 0.02$.\n- Number of steps: $N = 16384$.\n- Chaos threshold: $\\tau = 10^{-2}$.\n\nTest cases (nonlinearity values):\n- Case A: $\\varepsilon = 0$ (integrable boundary case).\n- Case B: $\\varepsilon = 0.1$ (weakly nonintegrable).\n- Case C: $\\varepsilon = 0.3$ (more strongly nonintegrable).\n\nYour program must:\n- Implement a symplectic integrator consistent with Hamilton’s equations above.\n- Estimate dominant angular frequencies from the two halves of the trajectory using a discrete Fourier transform with tapering window and quadratic peak interpolation.\n- Compute, for each case, the fraction of chaotic initial conditions (decimal values, rounded to three decimal places).\n- Produce a single line of output containing the results for the three cases as a comma-separated list enclosed in square brackets, for example, $[0.000,0.111,0.444]$.\n\nAll quantities are nondimensional and any angles are in radians. The only required outputs are the three decimal fractions for the three specified $\\varepsilon$ values, in the exact single-line format described above. No percentages are to be used; use decimals only.", "solution": "The solution implements a numerical analysis to classify trajectories of the coupled oscillator system as either regular or chaotic, thereby quantifying the breakdown of ergodicity as the nonlinearity $\\varepsilon$ increases. The core of the method involves symplectic integration followed by frequency map analysis.\n\n**1. Numerical Integration**\nThe Hamiltonian is of the form $H(\\mathbf{q}, \\mathbf{p}) = T(\\mathbf{p}) + V(\\mathbf{q})$, which is separable. This structure is ideal for a symplectic integrator, which offers excellent long-term energy conservation. We use the second-order Velocity Verlet algorithm to integrate Hamilton's equations of motion. For each of the $M=9$ initial conditions per $\\varepsilon$ value, the system's trajectory $(x(t), y(t), p_x(t), p_y(t))$ is computed for $N=16384$ time steps of size $\\Delta t=0.02$.\n\n**2. Frequency Map Analysis**\nTo distinguish regular (quasi-periodic) from chaotic motion, we analyze the stability of the fundamental frequencies of oscillation. A regular trajectory is confined to an invariant torus and has stable frequencies, while a chaotic trajectory wanders through phase space, causing its characteristic frequencies to drift over time.\n- The full time series for $x(t)$ and $y(t)$ are each divided into two consecutive halves of length $N/2$.\n- For each coordinate in each half, the dominant angular frequency ($\\omega_x^{(1)}, \\omega_y^{(1)}, \\omega_x^{(2)}, \\omega_y^{(2)}$) is estimated using a Fast Fourier Transform (FFT).\n- To achieve high accuracy, two refinements are applied:\n    1.  A **Hann window** is applied to each time-series segment before the FFT to reduce spectral leakage.\n    2.  **Quadratic interpolation** on the logarithm of the power spectrum around the main peak is used to find a more precise frequency value than the discrete FFT bins allow.\n\n**3. Chaos Detection**\nA frequency drift diagnostic, $D$, is computed for each trajectory:\n$$\nD = \\max\\left(\\left|\\frac{\\omega_x^{(2)} - \\omega_x^{(1)}}{\\omega_x^{(1)}}\\right|, \\left|\\frac{\\omega_y^{(2)} - \\omega_y^{(1)}}{\\omega_y^{(1)}}\\right|\\right)\n$$\nIf this drift exceeds a threshold, $D > \\tau = 10^{-2}$, the trajectory is classified as \"chaotic.\" Otherwise, it is \"regular.\"\n\n**4. Calculating Chaotic Fraction**\nThis procedure is repeated for all $M=9$ initial conditions for each $\\varepsilon \\in \\{0, 0.1, 0.3\\}$. The chaotic fraction is the number of chaotic trajectories divided by $M$. The case $\\varepsilon=0$ serves as a control, as it represents an integrable system where no chaos is expected. The increase in the chaotic fraction for $\\varepsilon > 0$ demonstrates the growing portion of phase space that can support ergodic behavior as the system becomes more strongly perturbed.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the coupled oscillator problem by numerical integration and frequency analysis.\n    \"\"\"\n    # Problem parameters\n    omega_x = 1.0\n    omega_y = np.sqrt(2.0)\n    E = 1.0\n    M = 9\n    dt = 0.02\n    N = 16384\n    tau = 1e-2\n    test_cases = [0.0, 0.1, 0.3]  # Epsilon values\n\n    def estimate_frequency(series: np.ndarray, delta_t: float) - float:\n        \"\"\"\n        Estimates the dominant angular frequency in a time series using FFT\n        with a Hann window and quadratic peak interpolation.\n        \n        Args:\n            series: The time series data.\n            delta_t: The time step between samples.\n            \n        Returns:\n            The estimated dominant angular frequency in rad/unit_time.\n        \"\"\"\n        n_pts = len(series)\n        \n        # 1. Apply Hann window for tapering\n        series_windowed = series * np.hanning(n_pts)\n        \n        # 2. Compute the real FFT\n        yf = np.fft.rfft(series_windowed)\n        power = np.abs(yf)\n        \n        # 3. Find the peak in the power spectrum (excluding the DC component at index 0)\n        if len(power)  2:\n            return 0.0\n        \n        k_peak = np.argmax(power[1:]) + 1\n        \n        # 4. Quadratic interpolation on log-power to refine peak location\n        # If the peak is at the edges of the analyzable spectrum, interpolation is not possible\n        if 1  k_peak  len(power) - 1:\n            p_minus_1 = np.log(power[k_peak - 1])\n            p_peak = np.log(power[k_peak])\n            p_plus_1 = np.log(power[k_peak + 1])\n            \n            # The vertex of a parabola through (-1, y0), (0, y1), (1, y2)\n            # has its x-coordinate at (y0 - y2) / (2 * (y0 - 2*y1 + y2))\n            # A small epsilon is added to the denominator to avoid division by zero\n            # if the three points are collinear (which shouldn't happen with real data).\n            denominator = 2 * (p_minus_1 - 2 * p_peak + p_plus_1)\n            if np.abs(denominator)  1e-9:\n                offset = 0.0\n            else:\n                offset = 0.5 * (p_minus_1 - p_plus_1) / denominator\n            k_refined = k_peak + offset\n        else:\n            k_refined = float(k_peak)\n            \n        # 5. Convert the refined index to angular frequency\n        # The frequency of the k-th bin is k / (n_pts * dt)\n        # Angular frequency is 2 * pi * frequency\n        angular_freq = 2 * np.pi * k_refined / (n_pts * delta_t)\n        \n        return angular_freq\n\n    chaotic_fractions = []\n\n    # Iterate over each test case for epsilon\n    for epsilon in test_cases:\n        chaotic_count = 0\n        \n        # Generate initial conditions\n        x_max = np.sqrt(2 * E) / omega_x\n        x0_grid = np.linspace(0.05 * x_max, 0.95 * x_max, M)\n        \n        for x0 in x0_grid:\n            # Set initial position and momentum\n            q = np.array([x0, 0.0], dtype=np.float64)  # [x, y]\n            py0 = np.sqrt(2 * E - omega_x**2 * x0**2)\n            p = np.array([0.0, py0], dtype=np.float64) # [px, py]\n\n            # Trajectory storage\n            x_traj = np.zeros(N)\n            y_traj = np.zeros(N)\n            \n            def get_forces(pos: np.ndarray, eps: float) - np.ndarray:\n                x, y = pos\n                Fx = -omega_x**2 * x - 2 * eps * x * y**2\n                Fy = -omega_y**2 * y - 2 * eps * x**2 * y\n                return np.array([Fx, Fy])\n\n            # Perform numerical integration using Velocity Verlet\n            for i in range(N):\n                x_traj[i], y_traj[i] = q\n                \n                F_current = get_forces(q, epsilon)\n                p_half = p + 0.5 * dt * F_current\n                q += dt * p_half\n                F_next = get_forces(q, epsilon)\n                p = p_half + 0.5 * dt * F_next\n\n            # Analyze the trajectory\n            N_half = N // 2\n            x_1, x_2 = x_traj[:N_half], x_traj[N_half:]\n            y_1, y_2 = y_traj[:N_half], y_traj[N_half:]\n\n            omega_x1 = estimate_frequency(x_1, dt)\n            omega_y1 = estimate_frequency(y_1, dt)\n            omega_x2 = estimate_frequency(x_2, dt)\n            omega_y2 = estimate_frequency(y_2, dt)\n            \n            # Calculate frequency drift and classify orbit\n            # Protective check against division by zero\n            if omega_x1 == 0 or omega_y1 == 0:\n                D = 0.0 # Unlikely case, treat as regular\n            else:\n                drift_x = np.abs((omega_x2 - omega_x1) / omega_x1)\n                drift_y = np.abs((omega_y2 - omega_y1) / omega_y1)\n                D = max(drift_x, drift_y)\n            \n            if D  tau:\n                chaotic_count += 1\n        \n        fraction = chaotic_count / M\n        chaotic_fractions.append(fraction)\n\n    # Format the final output string\n    # Rounding is implicitly handled by the f-string format specifier\n    output_str = f\"[{','.join(f'{f:.3f}' for f in chaotic_fractions)}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2813523"}]}