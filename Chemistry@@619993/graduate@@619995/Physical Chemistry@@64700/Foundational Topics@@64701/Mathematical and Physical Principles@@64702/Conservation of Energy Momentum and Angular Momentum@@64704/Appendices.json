{"hands_on_practices": [{"introduction": "The most profound principles in physics often arise from symmetry, and the Lagrangian formalism provides the most elegant language for expressing this connection. This exercise guides you through a foundational derivation that connects rotational symmetry to the conservation of angular momentum. By transforming the kinetic energy into a more convenient coordinate system and applying the Euler-Lagrange equations, you will see firsthand how a symmetry in the problem—the fact that the central potential is independent of the azimuthal angle $\\phi$—directly leads to the conservation of the corresponding conjugate momentum, $p_{\\phi}$ [@problem_id:2632504].", "problem": "A single atom of mass $m$ moves in three-dimensional space under a central potential $V(r)$, where $r$ is the distance from a fixed origin. Introduce spherical polar coordinates $(r,\\theta,\\phi)$ via the Cartesian transformation $x = r \\sin\\theta \\cos\\phi$, $y = r \\sin\\theta \\sin\\phi$, and $z = r \\cos\\theta$. Starting from the definition of kinetic energy $T = \\frac{1}{2} m \\left(\\dot{x}^{2} + \\dot{y}^{2} + \\dot{z}^{2}\\right)$ and the Lagrangian $L = T - V$, derive expressions for the conjugate momenta $(p_{r},p_{\\theta},p_{\\phi})$ associated with the generalized coordinates $(r,\\theta,\\phi)$. Then, using only first principles of Lagrangian mechanics, demonstrate that $p_{\\phi}$ is conserved for a central potential.\n\nAssume that angles are measured in radians. Provide your final answer as the row matrix $\\begin{pmatrix}p_{r} & p_{\\theta} & p_{\\phi}\\end{pmatrix}$ in terms of $m$, $r$, $\\theta$, $\\dot{r}$, $\\dot{\\theta}$, and $\\dot{\\phi}$. Do not include units. No numerical approximation or rounding is required. Your reasoning must start from fundamental laws and core definitions without invoking the target results directly.", "solution": "The problem statement is a standard exercise in classical mechanics, providing a valid and well-posed framework for analysis. It is scientifically grounded, self-contained, and objective. We shall proceed with the derivation.\n\nThe objective is to derive the conjugate momenta associated with spherical polar coordinates for a particle in a central potential and to demonstrate the conservation of the momentum conjugate to the azimuthal angle $\\phi$.\n\nWe begin with the provided Cartesian coordinates $(x, y, z)$ and their transformation to spherical polar coordinates $(r, \\theta, \\phi)$:\n$$x = r \\sin\\theta \\cos\\phi$$\n$$y = r \\sin\\theta \\sin\\phi$$\n$$z = r \\cos\\theta$$\n\nTo express the kinetic energy $T$ in spherical coordinates, we must first find the time derivatives of the Cartesian coordinates. Using the chain rule for differentiation with respect to time $t$:\n$$\\dot{x} = \\frac{dx}{dt} = \\frac{\\partial x}{\\partial r}\\dot{r} + \\frac{\\partial x}{\\partial \\theta}\\dot{\\theta} + \\frac{\\partial x}{\\partial \\phi}\\dot{\\phi} = \\dot{r}\\sin\\theta\\cos\\phi + r\\dot{\\theta}\\cos\\theta\\cos\\phi - r\\dot{\\phi}\\sin\\theta\\sin\\phi$$\n$$\\dot{y} = \\frac{dy}{dt} = \\frac{\\partial y}{\\partial r}\\dot{r} + \\frac{\\partial y}{\\partial \\theta}\\dot{\\theta} + \\frac{\\partial y}{\\partial \\phi}\\dot{\\phi} = \\dot{r}\\sin\\theta\\sin\\phi + r\\dot{\\theta}\\cos\\theta\\sin\\phi + r\\dot{\\phi}\\sin\\theta\\cos\\phi$$\n$$\\dot{z} = \\frac{dz}{dt} = \\frac{\\partial z}{\\partial r}\\dot{r} + \\frac{\\partial z}{\\partial \\theta}\\dot{\\theta} + \\frac{\\partial z}{\\partial \\phi}\\dot{\\phi} = \\dot{r}\\cos\\theta - r\\dot{\\theta}\\sin\\theta$$\n\nNext, we compute the sum of the squares of these velocities, $\\dot{x}^{2} + \\dot{y}^{2} + \\dot{z}^{2}$.\nFirst, we sum $\\dot{x}^{2}$ and $\\dot{y}^{2}$:\n$$\\dot{x}^{2} + \\dot{y}^{2} = (\\dot{r}\\sin\\theta\\cos\\phi + r\\dot{\\theta}\\cos\\theta\\cos\\phi - r\\dot{\\phi}\\sin\\theta\\sin\\phi)^{2} + (\\dot{r}\\sin\\theta\\sin\\phi + r\\dot{\\theta}\\cos\\theta\\sin\\phi + r\\dot{\\phi}\\sin\\theta\\cos\\phi)^{2}$$\nExpanding and grouping terms by the generalized velocities:\n\\begin{itemize}\n    \\item Terms with $\\dot{r}^{2}$: $\\dot{r}^{2}\\sin^{2}\\theta\\cos^{2}\\phi + \\dot{r}^{2}\\sin^{2}\\theta\\sin^{2}\\phi = \\dot{r}^{2}\\sin^{2}\\theta(\\cos^{2}\\phi + \\sin^{2}\\phi) = \\dot{r}^{2}\\sin^{2}\\theta$\n    \\item Terms with $\\dot{\\theta}^{2}$: $r^{2}\\dot{\\theta}^{2}\\cos^{2}\\theta\\cos^{2}\\phi + r^{2}\\dot{\\theta}^{2}\\cos^{2}\\theta\\sin^{2}\\phi = r^{2}\\dot{\\theta}^{2}\\cos^{2}\\theta(\\cos^{2}\\phi + \\sin^{2}\\phi) = r^{2}\\dot{\\theta}^{2}\\cos^{2}\\theta$\n    \\item Terms with $\\dot{\\phi}^{2}$: $r^{2}\\dot{\\phi}^{2}\\sin^{2}\\theta\\sin^{2}\\phi + r^{2}\\dot{\\phi}^{2}\\sin^{2}\\theta\\cos^{2}\\phi = r^{2}\\dot{\\phi}^{2}\\sin^{2}\\theta(\\sin^{2}\\phi + \\cos^{2}\\phi) = r^{2}\\dot{\\phi}^{2}\\sin^{2}\\theta$\n    \\item Cross-terms with $\\dot{r}\\dot{\\theta}$: $2\\dot{r}r\\dot{\\theta}\\sin\\theta\\cos\\theta\\cos^{2}\\phi + 2\\dot{r}r\\dot{\\theta}\\sin\\theta\\cos\\theta\\sin^{2}\\phi = 2\\dot{r}r\\dot{\\theta}\\sin\\theta\\cos\\theta$\n    \\item Cross-terms with $\\dot{r}\\dot{\\phi}$: $-2\\dot{r}r\\dot{\\phi}\\sin^{2}\\theta\\cos\\phi\\sin\\phi + 2\\dot{r}r\\dot{\\phi}\\sin^{2}\\theta\\sin\\phi\\cos\\phi = 0$\n    \\item Cross-terms with $\\dot{\\theta}\\dot{\\phi}$: $-2r^{2}\\dot{\\theta}\\dot{\\phi}\\cos\\theta\\sin\\theta\\cos\\phi\\sin\\phi + 2r^{2}\\dot{\\theta}\\dot{\\phi}\\cos\\theta\\sin\\theta\\sin\\phi\\cos\\phi = 0$\n\\end{itemize}\nSumming these results, we find:\n$$\\dot{x}^{2} + \\dot{y}^{2} = \\dot{r}^{2}\\sin^{2}\\theta + r^{2}\\dot{\\theta}^{2}\\cos^{2}\\theta + r^{2}\\dot{\\phi}^{2}\\sin^{2}\\theta + 2\\dot{r}r\\dot{\\theta}\\sin\\theta\\cos\\theta$$\nNow, we add $\\dot{z}^{2}$:\n$$\\dot{z}^{2} = (\\dot{r}\\cos\\theta - r\\dot{\\theta}\\sin\\theta)^{2} = \\dot{r}^{2}\\cos^{2}\\theta - 2\\dot{r}r\\dot{\\theta}\\cos\\theta\\sin\\theta + r^{2}\\dot{\\theta}^{2}\\sin^{2}\\theta$$\nThe total sum is:\n$$\\dot{x}^{2} + \\dot{y}^{2} + \\dot{z}^{2} = (\\dot{r}^{2}\\sin^{2}\\theta + \\dot{r}^{2}\\cos^{2}\\theta) + (r^{2}\\dot{\\theta}^{2}\\cos^{2}\\theta + r^{2}\\dot{\\theta}^{2}\\sin^{2}\\theta) + r^{2}\\dot{\\phi}^{2}\\sin^{2}\\theta$$\nUsing the identity $\\sin^{2}\\theta + \\cos^{2}\\theta = 1$, we simplify this to:\n$$\\dot{x}^{2} + \\dot{y}^{2} + \\dot{z}^{2} = \\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2}$$\nThe kinetic energy $T$ is therefore:\n$$T = \\frac{1}{2}m(\\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2})$$\nThe Lagrangian $L$ is defined as $L = T - V$. Since the potential is central, $V = V(r)$, it is a function of $r$ only.\n$$L(r, \\theta, \\dot{r}, \\dot{\\theta}, \\dot{\\phi}) = \\frac{1}{2}m(\\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2}) - V(r)$$\nThe generalized momentum $p_{q}$ conjugate to a generalized coordinate $q$ is defined as $p_{q} = \\frac{\\partial L}{\\partial \\dot{q}}$. We apply this definition for each coordinate $(r, \\theta, \\phi)$:\nThe conjugate momentum for $r$:\n$$p_{r} = \\frac{\\partial L}{\\partial \\dot{r}} = \\frac{\\partial}{\\partial \\dot{r}}\\left[\\frac{1}{2}m(\\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2}) - V(r)\\right] = m\\dot{r}$$\nThe conjugate momentum for $\\theta$:\n$$p_{\\theta} = \\frac{\\partial L}{\\partial \\dot{\\theta}} = \\frac{\\partial}{\\partial \\dot{\\theta}}\\left[\\frac{1}{2}m(\\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2}) - V(r)\\right] = mr^{2}\\dot{\\theta}$$\nThe conjugate momentum for $\\phi$:\n$$p_{\\phi} = \\frac{\\partial L}{\\partial \\dot{\\phi}} = \\frac{\\partial}{\\partial \\dot{\\phi}}\\left[\\frac{1}{2}m(\\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2}) - V(r)\\right] = mr^{2}\\sin^{2}\\theta\\dot{\\phi}$$\nThese are the expressions for the conjugate momenta.\n\nNow we must demonstrate that $p_{\\phi}$ is conserved. According to Lagrangian mechanics, the equation of motion for a generalized coordinate $q$ is the Euler-Lagrange equation:\n$$\\frac{d}{dt}\\left(\\frac{\\partial L}{\\partial \\dot{q}}\\right) - \\frac{\\partial L}{\\partial q} = 0$$\nFor the coordinate $\\phi$, this equation is:\n$$\\frac{d}{dt}\\left(\\frac{\\partial L}{\\partial \\dot{\\phi}}\\right) - \\frac{\\partial L}{\\partial \\phi} = 0$$\nSubstituting our result for $p_{\\phi} = \\frac{\\partial L}{\\partial \\dot{\\phi}}$, we have:\n$$\\frac{dp_{\\phi}}{dt} = \\frac{\\partial L}{\\partial \\phi}$$\nA quantity is conserved if its total time derivative is zero. Thus, $p_{\\phi}$ is conserved if and only if $\\frac{\\partial L}{\\partial \\phi} = 0$. We inspect the Lagrangian:\n$$L = \\frac{1}{2}m(\\dot{r}^{2} + r^{2}\\dot{\\theta}^{2} + r^{2}\\sin^{2}\\theta\\dot{\\phi}^{2}) - V(r)$$\nThe Lagrangian depends on $r$, $\\theta$, $\\dot{r}$, $\\dot{\\theta}$, and $\\dot{\\phi}$, but it does not contain an explicit dependence on the coordinate $\\phi$. This is true for two reasons: $1$) the kinetic energy term for a free particle expressed in spherical coordinates is independent of $\\phi$, reflecting the isotropy of space with respect to rotations about the origin, and $2$) the potential $V(r)$ is central, meaning it is spherically symmetric and thus also independent of $\\phi$.\nTherefore, the partial derivative of $L$ with respect to $\\phi$ is identically zero:\n$$\\frac{\\partial L}{\\partial \\phi} = 0$$\nSubstituting this into the Euler-Lagrange equation for $\\phi$ yields:\n$$\\frac{dp_{\\phi}}{dt} = 0$$\nThis demonstrates that $p_{\\phi}$ is a constant of the motion. A coordinate that does not appear explicitly in the Lagrangian, such as $\\phi$ in this case, is known as a cyclic or ignorable coordinate. The conservation of its conjugate momentum is a direct consequence of the symmetry of the system with respect to rotations about the $z$-axis, an instance of Noether's theorem.\nThe expressions for the conjugate momenta are thus finalized.", "answer": "$$\\boxed{\\begin{pmatrix} m\\dot{r} & mr^{2}\\dot{\\theta} & mr^{2}\\sin^{2}\\theta\\dot{\\phi} \\end{pmatrix}}$$", "id": "2632504"}, {"introduction": "Moving from the classical to the quantum realm, the concept of energy conservation takes on a new form, especially when a system interacts with a time-dependent external field like light. This practice explores the quantum mechanical analogue of the work-energy theorem within the context of molecular spectroscopy. You will calculate the total work done by a resonant laser pulse on a two-level system and demonstrate that it precisely equals the energy required for the spectroscopic transition, $\\hbar \\omega_{0}$, thereby verifying energy conservation at the quantum level [@problem_id:2632486].", "problem": "A single, isolated molecular chromophore is modeled as a two-level system with stationary states $|g\\rangle$ and $|e\\rangle$, bare Hamiltonian $H_{0}$, and energy spacing $\\hbar \\omega_{0}$, where $H_{0} |g\\rangle = 0$ and $H_{0} |e\\rangle = \\hbar \\omega_{0} |e\\rangle$. The molecule interacts, within the electric dipole approximation, with a linearly polarized classical electric field\n$$\nE(t) = E_{0} \\cos(\\omega_{0} t)\\, f(t),\n$$\nwhere the envelope $f(t)$ turns the field on and off smoothly so that $f(0)=0$ and $f(T)=0$ over a finite duration $T$. The dipole operator is $\\hat{\\mu} = \\mu (|e\\rangle\\langle g| + |g\\rangle\\langle e|)$ with $\\mu>0$ real and aligned with the field polarization. The total Hamiltonian is $H(t) = H_{0} - \\hat{\\mu}\\, E(t)$, and there is no dissipation.\n\nAssume exact resonance and validity of the Rotating Wave Approximation (RWA). The envelope $f(t)$ is chosen so that the pulse area equals $\\pi$, that is,\n$$\n\\int_{0}^{T} \\frac{\\mu E_{0}}{\\hbar} f(t)\\, dt = \\pi,\n$$\nensuring complete population transfer from $|g\\rangle$ to $|e\\rangle$ by the end of the pulse. The system is prepared at $t=0$ in the ground state $|g\\rangle$.\n\nUsing only fundamental dynamical relations for time-dependent Hamiltonians and the above setup, compute the total work $W$ done by the field on the two-level system over the interval $[0,T]$, defined as\n$$\nW \\equiv \\int_{0}^{T} \\left\\langle \\frac{\\partial H(t)}{\\partial t} \\right\\rangle dt,\n$$\nand verify conservation of energy by accounting for photon exchange with the resonant field.\n\nExpress your final answer for $W$ as a closed-form symbolic expression in terms of $\\hbar$ and $\\omega_{0}$. Do not include units in your final boxed expression. Interpret physically in your solution.", "solution": "The problem statement has been analyzed and is determined to be valid. It is a well-posed, scientifically grounded problem in the quantum mechanics of light-matter interactions, a standard topic in physical chemistry. All necessary information is provided, and there are no internal contradictions or violations of physical principles. We may proceed with the solution.\n\nThe problem asks for the total work $W$ done by the classical electric field on the two-level system over the time interval $[0, T]$. The work is defined as:\n$$\nW = \\int_{0}^{T} \\left\\langle \\frac{\\partial H(t)}{\\partial t} \\right\\rangle dt\n$$\nwhere $H(t)$ is the total time-dependent Hamiltonian of the system and the expectation value is taken with respect to the time-evolved state of the system $|\\psi(t)\\rangle$.\n\nA fundamental result derived from the time-dependent Schrödinger equation, $i\\hbar \\frac{d}{dt} |\\psi(t)\\rangle = H(t) |\\psi(t)\\rangle$, is the quantum-mechanical equivalent of the work-energy theorem. The time derivative of the expectation value of the Hamiltonian is given by:\n$$\n\\frac{d}{dt} \\langle H(t) \\rangle = \\frac{d}{dt} \\langle \\psi(t) | H(t) | \\psi(t) \\rangle = \\left\\langle \\frac{d \\psi}{dt} \\right| H(t) \\left| \\psi(t) \\right\\rangle + \\left\\langle \\psi(t) \\right| H(t) \\left| \\frac{d \\psi}{dt} \\right\\rangle + \\left\\langle \\psi(t) \\left| \\frac{\\partial H(t)}{\\partial t} \\right| \\psi(t) \\right\\rangle\n$$\nSubstituting the Schrödinger equation and its conjugate, we have:\n$$\n\\frac{d}{dt} \\langle H(t) \\rangle = \\frac{1}{-i\\hbar} \\langle \\psi | H^{\\dagger} H | \\psi \\rangle + \\frac{1}{i\\hbar} \\langle \\psi | H H | \\psi \\rangle + \\left\\langle \\frac{\\partial H(t)}{\\partial t} \\right\\rangle\n$$\nSince the Hamiltonian $H(t)$ is Hermitian ($H^{\\dagger}(t)=H(t)$), the first two terms cancel. This yields the direct relation:\n$$\n\\frac{d}{dt} \\langle H(t) \\rangle = \\left\\langle \\frac{\\partial H(t)}{\\partial t} \\right\\rangle\n$$\nIntegrating this expression with respect to time from $t=0$ to $t=T$ gives the total work done:\n$$\nW = \\int_{0}^{T} \\frac{d}{dt} \\langle H(t) \\rangle dt = \\langle H(T) \\rangle - \\langle H(0) \\rangle\n$$\nThe problem is thus reduced to finding the expectation value of the total Hamiltonian at the beginning and end of the interaction.\n\nAt the initial time $t=0$, the system is in the ground state, $|\\psi(0)\\rangle = |g\\rangle$. The electric field envelope $f(t)$ is specified to be zero at this time, $f(0)=0$. Therefore, the total Hamiltonian is $H(0) = H_{0} - \\hat{\\mu} E_0 f(0) \\cos(0) = H_{0}$. The initial energy expectation value is:\n$$\n\\langle H(0) \\rangle = \\langle \\psi(0) | H_{0} | \\psi(0) \\rangle = \\langle g | H_{0} | g \\rangle = 0\n$$\naccording to the problem's definition of the ground state energy.\n\nNext, we determine the state of the system at the final time $t=T$. The evolution of the state is governed by the Hamiltonian $H(t) = H_0 - \\hat{\\mu} E(t)$ under the Rotating Wave Approximation (RWA) and resonance condition. In the interaction picture with respect to $H_0$, the state vector $|\\psi_I(t)\\rangle = \\exp(i H_0 t / \\hbar) |\\psi(t)\\rangle$ evolves according to the Hamiltonian $H_I^{RWA}(t)$. On resonance, this Hamiltonian is:\n$$\nH_I^{RWA}(t) = -\\frac{\\mu E_0 f(t)}{2} \\left( |e\\rangle\\langle g| + |g\\rangle\\langle e| \\right)\n$$\nLet us define the time-dependent Rabi frequency $\\Omega_R(t) = \\frac{\\mu E_0 f(t)}{\\hbar}$. The solution to the Schrödinger equation $i\\hbar \\frac{d}{dt}|\\psi_I(t)\\rangle=H_I^{RWA}(t)|\\psi_I(t)\\rangle$ for the initial state $|\\psi_I(0)\\rangle = |g\\rangle$ is a standard result of Rabi dynamics:\n$$\n|\\psi_I(t)\\rangle = \\cos\\left(\\frac{1}{2}\\int_0^t \\Omega_R(t') dt'\\right) |g\\rangle - i \\sin\\left(\\frac{1}{2}\\int_0^t \\Omega_R(t') dt'\\right) |e\\rangle\n$$\nThe problem states that the pulse area is $\\pi$. The pulse area $\\theta(T)$ is defined as:\n$$\n\\theta(T) = \\int_0^T \\Omega_R(t) dt = \\int_0^T \\frac{\\mu E_0 f(t)}{\\hbar} dt = \\pi\n$$\nSubstituting this into the expression for the state at $t=T$:\n$$\n|\\psi_I(T)\\rangle = \\cos\\left(\\frac{\\pi}{2}\\right) |g\\rangle - i \\sin\\left(\\frac{\\pi}{2}\\right) |e\\rangle = (0)|g\\rangle - i(1)|e\\rangle = -i|e\\rangle\n$$\nThis confirms the complete population transfer from $|g\\rangle$ to $|e\\rangle$.\nTo find the expectation value $\\langle H(T) \\rangle$, we need the state in the Schrödinger picture:\n$$\n|\\psi(T)\\rangle = e^{-i H_0 T / \\hbar} |\\psi_I(T)\\rangle = e^{-i H_0 T / \\hbar} (-i |e\\rangle) = -i e^{-i \\omega_0 T} |e\\rangle\n$$\nAt the final time $t=T$, the envelope function is again zero, $f(T)=0$. Thus, the Hamiltonian is $H(T) = H_0$. The energy expectation value is:\n$$\n\\langle H(T) \\rangle = \\langle \\psi(T) | H_0 | \\psi(T) \\rangle = \\left( i e^{i \\omega_0 T} \\langle e | \\right) H_0 \\left( -i e^{-i \\omega_0 T} |e\\rangle \\right) = \\langle e | H_0 | e \\rangle = \\hbar \\omega_0\n$$\nThe total work done by the field is therefore:\n$$\nW = \\langle H(T) \\rangle - \\langle H(0) \\rangle = \\hbar \\omega_0 - 0 = \\hbar \\omega_0\n$$\nPhysically, this result is interpreted as follows. The work $W$ represents the net energy transferred from the external field to the molecular system. The calculation shows this energy is precisely $\\hbar \\omega_0$. The change in the internal energy of the molecule (the expectation value of the bare Hamiltonian $H_0$) is $\\Delta \\langle H_0 \\rangle = \\langle H_0 \\rangle_T - \\langle H_0 \\rangle_0 = \\hbar \\omega_0 - 0 = \\hbar\\omega_0$. Thus, the work done by the field is entirely converted into the excitation energy of the molecule.\nThis process verifies energy conservation. The molecule gained energy $\\hbar\\omega_0$, and this energy was supplied by the electromagnetic field. In a quantized field picture, this corresponds to the absorption of a single photon of energy $\\hbar\\omega_0$ from the resonant field, causing the transition of the molecule from its ground state to its excited state. The total energy of the isolated molecule-field system is conserved.", "answer": "$$\\boxed{\\hbar \\omega_{0}}$$", "id": "2632486"}, {"introduction": "The conservation laws we derive analytically are exact, but how well do they hold up in the world of computational chemistry and molecular dynamics? This hands-on coding practice confronts this crucial question by tasking you with implementing and testing numerical integrators for a simple molecular model. By comparing a non-symplectic algorithm (explicit Euler) with a symplectic one (Velocity Verlet), you will numerically verify why the choice of integrator is paramount for long-term simulations and gain a practical understanding of concepts like energy drift and the superior stability of symplectic methods [@problem_id:2632556].", "problem": "Consider a two-particle molecular dynamics model in two spatial dimensions governed by Newton's second law $m \\,\\mathbf{\\ddot{r}}_i = \\mathbf{F}_i$, where $i \\in \\{1,2\\}$, $m$ is the particle mass, and $\\mathbf{r}_i \\in \\mathbb{R}^2$ is the position of particle $i$. The particles interact via a central, conservative harmonic potential $V(\\mathbf{r}_1,\\mathbf{r}_2) = \\frac{1}{2} k \\lVert \\mathbf{r}_1 - \\mathbf{r}_2 \\rVert^2$, with spring constant $k > 0$, so that the conservative forces are $\\mathbf{F}_{1}^{\\mathrm{cons}} = -\\nabla_{\\mathbf{r}_1} V = -k(\\mathbf{r}_1 - \\mathbf{r}_2)$ and $\\mathbf{F}_{2}^{\\mathrm{cons}} = -\\mathbf{F}_{1}^{\\mathrm{cons}}$. Optionally, a linear viscous drag force may act on each particle, $\\mathbf{F}_i^{\\mathrm{drag}} = -\\gamma m \\mathbf{v}_i$, where $\\gamma \\ge 0$ and $\\mathbf{v}_i = \\mathbf{\\dot{r}}_i$.\n\nUse reduced Lennard-Jones units: choose mass $m = 1$, length $\\sigma = 1$, and energy $\\epsilon = 1$, so the reduced time unit is $\\tau = \\sqrt{m \\sigma^2/\\epsilon} = 1$. All reported quantities must be expressed in these reduced units. Specifically:\n- Report energy drift rates in $\\epsilon/\\tau$.\n- Report momentum drift rates in $(m \\sigma)/\\tau^2$.\n- Report angular momentum drift rates in $(m \\sigma^2)/\\tau^2$.\n\nInitial conditions are set as follows. Let $k = 1$, $a = 1$, and define the natural frequency for the relative coordinate $\\omega = \\sqrt{2k/m}$. Initialize positions and velocities\n$\\mathbf{r}_1(0) = (a, 0)$, $\\mathbf{r}_2(0) = (-a, 0)$, $\\mathbf{v}_1(0) = (u, v_0)$, $\\mathbf{v}_2(0) = (u, -v_0)$,\nwhere $u = 0.3$ and $v_0 = \\omega a$. These initial conditions yield nonzero total linear momentum and angular momentum while preserving spatial symmetry.\n\nImplement two time integrators for the equations of motion:\n- A symplectic velocity Verlet integrator applied to the conservative forces, with viscous drag included as a velocity-dependent force in the acceleration evaluation.\n- A non-symplectic explicit Euler integrator.\n\nIn each simulation, for time step $\\Delta t > 0$ and integer step count $N \\ge 1$, evolve the system from time $t = 0$ to time $t = N \\Delta t$, computing at each sampled time $t_n$ the total energy $E(t_n) = \\sum_{i=1}^2 \\frac{1}{2} m \\lVert \\mathbf{v}_i(t_n) \\rVert^2 + V(\\mathbf{r}_1(t_n),\\mathbf{r}_2(t_n))$, the magnitude of total linear momentum $P(t_n) = \\lVert \\sum_{i=1}^2 m \\mathbf{v}_i(t_n) \\rVert$, and the magnitude of the total angular momentum (out of plane) $L(t_n) = \\left| \\sum_{i=1}^2 m \\left( x_i(t_n) v_{i,y}(t_n) - y_i(t_n) v_{i,x}(t_n) \\right) \\right|$, where $\\mathbf{r}_i(t_n) = (x_i(t_n), y_i(t_n))$ and $\\mathbf{v}_i(t_n) = (v_{i,x}(t_n), v_{i,y}(t_n))$.\n\nFor each trajectory, quantify the drift in $E$, $P$, and $L$ by the least-squares best-fit slopes with respect to time. Given samples $\\{(t_n, Y_n)\\}_{n=0}^N$ for a quantity $Y \\in \\{E,P,L\\}$, define the drift rate as the slope $a_Y$ of the affine approximation $Y(t) \\approx a_Y t + b_Y$ minimizing the sum of squared residuals. The final reported drift rates must be the slopes $a_E$, $a_P$, and $a_L$.\n\nYour program must implement the above and produce results for the following test suite of four cases, each specified by an integrator choice, drag coefficient $\\gamma$, time step $\\Delta t$, and number of steps $N$:\n- Case $1$: velocity Verlet, $\\gamma = 0$, $\\Delta t = 0.01$, $N = 20000$.\n- Case $2$: velocity Verlet, $\\gamma = 0.05$, $\\Delta t = 0.01$, $N = 20000$.\n- Case $3$: explicit Euler, $\\gamma = 0$, $\\Delta t = 0.005$, $N = 20000$.\n- Case $4$: explicit Euler, $\\gamma = 0$, $\\Delta t = 0.02$, $N = 5000$.\n\nScientific realism constraints:\n- Use only the forces specified above.\n- Ensure that the integrators are implemented without hidden stabilizers or thermostats beyond the stated drag model.\n- The regression must use all sampled times from $t_0 = 0$ through $t_N = N \\Delta t$ inclusive.\n\nYour program must output a single line containing a comma-separated list of four inner lists, one per test case, where each inner list contains the three drift rates $[a_E, a_P, a_L]$ in the order energy, momentum magnitude, angular momentum magnitude. All numbers must be rounded to $6$ decimal places. The output format must be exactly\n\"[[aE1,aP1,aL1],[aE2,aP2,aL2],[aE3,aP3,aL3],[aE4,aP4,aL4]]\"\nwith no spaces. For example, if a case produced $a_E = 0$ and $a_P = 0$ and $a_L = 0$, it would contribute \"[0.000000,0.000000,0.000000]\" to the final list.\n\nThe expected conceptual behavior, which your numerical results should make evident, is: with conservative forces and a symplectic integrator (Case $1$), total energy has no systematic drift (bounded oscillatory error, near-zero slope), while the non-symplectic integrator (Cases $3$ and $4$) exhibits systematic energy drift whose magnitude increases with the time step. The presence of a non-conservative force (Case $2$) should produce a negative energy drift and decay of total momentum and angular momentum due to dissipative losses. Your code must compute, not assume, these outcomes.", "solution": "The problem statement has been rigorously validated and is determined to be scientifically sound, well-posed, and complete. All parameters and conditions are specified without ambiguity. The problem is a standard exercise in computational physics, suitable for illustrating the properties of numerical integrators and the principles of conservation laws. We now proceed to the formal solution.\n\n### 1. Mathematical Model\n\nThe system consists of two particles of mass $m$ in a two-dimensional space, with positions $\\mathbf{r}_1, \\mathbf{r}_2 \\in \\mathbb{R}^2$. The dynamics are governed by Newton's second law:\n$$m \\mathbf{\\ddot{r}}_i = \\mathbf{F}_i, \\quad i \\in \\{1, 2\\}$$\nThe total force $\\mathbf{F}_i$ on particle $i$ is the sum of a conservative interaction force $\\mathbf{F}_i^{\\mathrm{cons}}$ and a non-conservative drag force $\\mathbf{F}_i^{\\mathrm{drag}}$.\n\nThe conservative force derives from a harmonic potential $V = \\frac{1}{2} k \\lVert \\mathbf{r}_1 - \\mathbf{r}_2 \\rVert^2$:\n$$\\mathbf{F}_{1}^{\\mathrm{cons}} = -\\nabla_{\\mathbf{r}_1} V = -k(\\mathbf{r}_1 - \\mathbf{r}_2)$$\n$$\\mathbf{F}_{2}^{\\mathrm{cons}} = -\\nabla_{\\mathbf{r}_2} V = -k(\\mathbf{r}_2 - \\mathbf{r}_1) = k(\\mathbf{r}_1 - \\mathbf{r}_2)$$\nNote that these forces obey Newton's third law, $\\mathbf{F}_{1}^{\\mathrm{cons}} = -\\mathbf{F}_{2}^{\\mathrm{cons}}$.\n\nThe optional drag force is a linear viscous drag:\n$$\\mathbf{F}_i^{\\mathrm{drag}} = -\\gamma m \\mathbf{v}_i$$\nwhere $\\gamma \\ge 0$ is the drag coefficient and $\\mathbf{v}_i = \\mathbf{\\dot{r}}_i$ is the velocity.\n\nThe acceleration of each particle is thus:\n$$\\mathbf{a}_1 = \\frac{\\mathbf{F}_1}{m} = -\\frac{k}{m}(\\mathbf{r}_1 - \\mathbf{r}_2) - \\gamma \\mathbf{v}_1$$\n$$\\mathbf{a}_2 = \\frac{\\mathbf{F}_2}{m} = \\frac{k}{m}(\\mathbf{r}_1 - \\mathbf{r}_2) - \\gamma \\mathbf{v}_2$$\n\n### 2. Quantities of Interest\n\nWe monitor three key physical quantities:\n1.  **Total Energy ($E$)**: The sum of kinetic and potential energies.\n    $$E = \\sum_{i=1}^2 \\frac{1}{2} m \\lVert \\mathbf{v}_i \\rVert^2 + \\frac{1}{2} k \\lVert \\mathbf{r}_1 - \\mathbf{r}_2 \\rVert^2$$\n2.  **Magnitude of Total Linear Momentum ($P$)**:\n    $$P = \\left\\lVert \\sum_{i=1}^2 m \\mathbf{v}_i \\right\\rVert$$\n3.  **Magnitude of Total Angular Momentum ($L$)**: The magnitude of the (out-of-plane) $z$-component.\n    $$L = \\left| \\sum_{i=1}^2 m (x_i v_{i,y} - y_i v_{i,x}) \\right|$$\n\nIn the absence of the drag force ($\\gamma = 0$), the total force on the system is zero ($\\mathbf{F}_1 + \\mathbf{F}_2 = \\mathbf{0}$), and the total torque about the origin is also zero. Consequently, total linear momentum and total angular momentum are exactly conserved. The total energy is also conserved as the only forces are conservative. When $\\gamma > 0$, these conservation laws are broken.\n\n### 3. Numerical Integration Schemes\n\nWe discretize the equations of motion with a time step $\\Delta t > 0$. Let $\\mathbf{r}_n = \\mathbf{r}(t_n)$ and $\\mathbf{v}_n = \\mathbf{v}(t_n)$ be the state at time $t_n = n \\Delta t$.\n\n#### 3.1. Explicit Euler Integrator\nThis is a first-order, non-symplectic method. The state at step $n+1$ is calculated from the state at step $n$:\n$$\\mathbf{v}_{n+1} = \\mathbf{v}_n + \\mathbf{a}(\\mathbf{r}_n, \\mathbf{v}_n) \\Delta t$$\n$$\\mathbf{r}_{n+1} = \\mathbf{r}_n + \\mathbf{v}_n \\Delta t$$\nThis method is simple but known for poor long-term stability and energy conservation.\n\n#### 3.2. Velocity Verlet Integrator\nThis is a second-order, symplectic method for Hamiltonian systems. For velocity-dependent forces, a common adaptation is employed. The algorithm proceeds as follows:\n1.  Compute a half-step velocity update:\n    $$\\mathbf{v}_{n+1/2} = \\mathbf{v}_n + \\frac{1}{2} \\mathbf{a}(\\mathbf{r}_n, \\mathbf{v}_n) \\Delta t$$\n2.  Update positions to the full next step:\n    $$\\mathbf{r}_{n+1} = \\mathbf{r}_n + \\mathbf{v}_{n+1/2} \\Delta t$$\n3.  Compute the acceleration at the new position, using the half-step velocity for the velocity-dependent term:\n    $$\\mathbf{a}_{n+1} = \\mathbf{a}(\\mathbf{r}_{n+1}, \\mathbf{v}_{n+1/2})$$\n4.  Complete the velocity update:\n    $$\\mathbf{v}_{n+1} = \\mathbf{v}_{n+1/2} + \\frac{1}{2} \\mathbf{a}_{n+1} \\Delta t$$\nFor conservative systems ($\\gamma=0$), this algorithm is symplectic and exhibits excellent long-term energy stability. When non-conservative forces are present, it is no longer strictly symplectic, but remains a robust and widely used integration scheme.\n\n### 4. Drift Rate Analysis\n\nFor each simulated trajectory, we generate a time series of data points $\\{(t_n, Y_n)\\}_{n=0}^N$ for each quantity $Y \\in \\{E, P, L\\}$. To quantify the systematic drift, we perform a simple linear regression, fitting a line $Y(t) \\approx a_Y t + b_Y$ to the data. The drift rate is the slope $a_Y$, calculated using the standard formula for ordinary least-squares:\n$$a_Y = \\frac{(N+1) \\sum_{n=0}^N (t_n Y_n) - (\\sum_{n=0}^N t_n)(\\sum_{n=0}^N Y_n)}{(N+1) \\sum_{n=0}^N t_n^2 - (\\sum_{n=0}^N t_n)^2}$$\nThis calculation will be performed numerically using the `linregress` function from the `scipy.stats` library.\n\n### 5. Initial Conditions\nIn reduced units, $m=1$, $k=1$, $a=1$, and $u=0.3$. The natural frequency is $\\omega = \\sqrt{2k/m} = \\sqrt{2}$, so $v_0 = \\omega a = \\sqrt{2}$. The initial positions and velocities are:\n$$\\mathbf{r}_1(0) = (1, 0), \\quad \\mathbf{r}_2(0) = (-1, 0)$$\n$$\\mathbf{v}_1(0) = (0.3, \\sqrt{2}), \\quad \\mathbf{v}_2(0) = (0.3, -\\sqrt{2})$$\nThe simulation will evolve this initial state according to the specified dynamics for each test case.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import linregress\n\ndef solve():\n    \"\"\"\n    Solves the two-particle molecular dynamics problem for four test cases\n    and reports the drift rates of energy, momentum, and angular momentum.\n    \"\"\"\n\n    test_cases = [\n        # Case 1: velocity Verlet, gamma = 0, dt = 0.01, N = 20000\n        {'integrator': 'verlet', 'gamma': 0.0, 'dt': 0.01, 'N': 20000},\n        # Case 2: velocity Verlet, gamma = 0.05, dt = 0.01, N = 20000\n        {'integrator': 'verlet', 'gamma': 0.05, 'dt': 0.01, 'N': 20000},\n        # Case 3: explicit Euler, gamma = 0, dt = 0.005, N = 20000\n        {'integrator': 'euler', 'gamma': 0.0, 'dt': 0.005, 'N': 20000},\n        # Case 4: explicit Euler, gamma = 0, dt = 0.02, N = 5000\n        {'integrator': 'euler', 'gamma': 0.0, 'dt': 0.02, 'N': 5000},\n    ]\n\n    all_results = []\n\n    def get_accelerations(r, v, k, gamma, m):\n        \"\"\"Computes accelerations for the two particles.\"\"\"\n        r_rel = r[0] - r[1]\n        F_cons_1 = -k * r_rel\n        F_cons_2 = k * r_rel\n\n        F_drag_1 = -gamma * m * v[0]\n        F_drag_2 = -gamma * m * v[1]\n        \n        F1 = F_cons_1 + F_drag_1\n        F2 = F_cons_2 + F_drag_2\n\n        # In reduced units, m=1, but included for generality\n        return np.array([F1 / m, F2 / m])\n\n    for case in test_cases:\n        # Unpack parameters\n        integrator_type = case['integrator']\n        gamma = case['gamma']\n        dt = case['dt']\n        N = case['N']\n\n        # System constants and initial conditions in reduced units\n        m = 1.0\n        k = 1.0\n        a = 1.0\n        u = 0.3\n        omega = np.sqrt(2.0 * k / m)\n        v0 = omega * a\n        \n        r = np.array([[a, 0.0], [-a, 0.0]], dtype=np.float64)\n        v = np.array([[u, v0], [u, -v0]], dtype=np.float64)\n\n        # Data storage\n        times = np.linspace(0, N * dt, N + 1)\n        E_series = np.zeros(N + 1)\n        P_series = np.zeros(N + 1)\n        L_series = np.zeros(N + 1)\n\n        # Main simulation loop\n        for n in range(N + 1):\n            # Calculate and store quantities at the current step t_n\n            r_rel = r[0] - r[1]\n            potential_E = 0.5 * k * np.dot(r_rel, r_rel)\n            kinetic_E = 0.5 * m * (np.sum(v[0]**2) + np.sum(v[1]**2))\n            E_series[n] = kinetic_E + potential_E\n\n            P_vec = m * (v[0] + v[1])\n            P_series[n] = np.linalg.norm(P_vec)\n\n            L_z = m * (r[0, 0] * v[0, 1] - r[0, 1] * v[0, 0]) + \\\n                  m * (r[1, 0] * v[1, 1] - r[1, 1] * v[1, 0])\n            L_series[n] = np.abs(L_z)\n            \n            if n == N:\n                break # All data points collected\n            \n            # --- Integrator Step ---\n            if integrator_type == 'euler':\n                accel = get_accelerations(r, v, k, gamma, m)\n                r_new = r + v * dt\n                v_new = v + accel * dt\n                r, v = r_new, v_new\n            elif integrator_type == 'verlet':\n                accel = get_accelerations(r, v, k, gamma, m)\n                v_half = v + 0.5 * accel * dt\n                r_new = r + v_half * dt\n                # For velocity-dependent force, use v_half in the next acceleration calculation\n                accel_new = get_accelerations(r_new, v_half, k, gamma, m)\n                v_new = v_half + 0.5 * accel_new * dt\n                r, v = r_new, v_new\n        \n        # --- Analysis: Calculate drift rates via linear regression ---\n        slope_E = linregress(times, E_series).slope\n        slope_P = linregress(times, P_series).slope\n        slope_L = linregress(times, L_series).slope\n        \n        all_results.append([slope_E, slope_P, slope_L])\n\n    # --- Format and print the final output ---\n    # The output string must be a single line with no spaces\n    formatted_results = []\n    for res in all_results:\n        # Format each number to 6 decimal places and join with commas\n        formatted_case = \",\".join([f\"{val:.6f}\" for val in res])\n        formatted_results.append(f\"[{formatted_case}]\")\n    \n    # Join the case results with commas and enclose in brackets\n    final_output = f\"[{','.join(formatted_results)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2632556"}]}