{"hands_on_practices": [{"introduction": "The journey into understanding chemical reactivity often begins with the simplest possible model: a one-dimensional double-well potential. This exercise [@problem_id:2952096] invites you to analyze the archetypal quartic potential, which captures the essence of a chemical reaction with a reactant, a product, and a separating energy barrier. By locating the stationary points and calculating the curvature at the barrier top, you will derive the imaginary frequency, a crucial parameter in transition state theory that quantifies the instability leading to product formation.", "problem": "Consider a one-dimensional reaction coordinate $q$ on a symmetric double-well potential energy surface described by the quartic function $V(q)=a q^{4}-b q^{2}$ with $a>0$ and $b>0$. Let $m$ denote the constant effective mass associated with motion along the reaction coordinate $q$. The transition state (also called the saddle point) along the reaction coordinate is defined as a stationary point of $V(q)$ with negative curvature along $q$. Starting from the definitions of stationary points and Newtonâ€™s second law $m\\frac{d^{2}q}{dt^{2}}=-\\frac{dV}{dq}$, and using a second-order Taylor expansion of $V(q)$ about the transition state coordinate $q^{\\ddagger}$, determine the coordinate $q^{\\ddagger}$ and the corresponding imaginary angular frequency $\\omega^{\\ddagger}$ that characterizes the unstable mode near the transition state. Express your final answer as a single row vector $\\big(q^{\\ddagger},\\,\\omega^{\\ddagger}\\big)$ in terms of $a$, $b$, and $m$, using symbolic form only and omitting units. Do not include any numerical approximations.", "solution": "The problem as stated is valid. It is a well-posed problem in classical mechanics and physical chemistry, grounded in the standard theoretical framework of reaction dynamics on a potential energy surface. All terms are clearly defined, and sufficient information is provided to derive a unique solution.\n\nThe potential energy surface, $V(q)$, is given by the one-dimensional quartic function:\n$$V(q) = a q^{4} - b q^{2}$$\nwhere $a > 0$ and $b > 0$. The parameters ensure a symmetric double-well potential, with two minima separated by a barrier.\n\nFirst, we must identify the stationary points of the potential. Stationary points are locations where the force, and thus the gradient of the potential, is zero. We compute the first derivative of $V(q)$ with respect to the reaction coordinate $q$ and set it to zero:\n$$\\frac{dV}{dq} = \\frac{d}{dq}(a q^{4} - b q^{2}) = 4 a q^{3} - 2 b q$$\nSetting $\\frac{dV}{dq} = 0$:\n$$4 a q^{3} - 2 b q = 0$$\n$$2q(2aq^2 - b) = 0$$\nThis equation yields three solutions for the coordinates of the stationary points:\n$$q = 0$$\nand\n$$q^{2} = \\frac{b}{2a} \\implies q = \\pm\\sqrt{\\frac{b}{2a}}$$\n\nNext, we must distinguish between minima (stable states) and the transition state (saddle point) by examining the curvature of the potential at these stationary points. The curvature is given by the second derivative, $V''(q)$.\n$$V''(q) = \\frac{d^{2}V}{dq^{2}} = \\frac{d}{dq}(4 a q^{3} - 2 b q) = 12 a q^{2} - 2 b$$\nWe evaluate $V''(q)$ at each stationary point:\n1.  For $q=0$:\n    $$V''(0) = 12 a (0)^{2} - 2 b = -2b$$\n    Since $b > 0$, the curvature $V''(0)$ is negative. A stationary point with negative curvature along the reaction coordinate is, by definition, the transition state. Therefore, the coordinate of the transition state is $q^{\\ddagger} = 0$.\n\n2.  For $q = \\pm\\sqrt{\\frac{b}{2a}}$:\n    $$V''\\left(\\pm\\sqrt{\\frac{b}{2a}}\\right) = 12 a \\left(\\frac{b}{2a}\\right) - 2b = 6b - 2b = 4b$$\n    Since $b > 0$, the curvature is positive. These points correspond to the potential energy minima.\n\nHaving identified the transition state coordinate as $q^{\\ddagger}=0$, we now determine the characteristic frequency of motion near this point. The equation of motion for a particle of effective mass $m$ along the coordinate $q$ is given by Newton's second law:\n$$m \\frac{d^{2}q}{dt^{2}} = -\\frac{dV}{dq}$$\nNear the transition state $q^{\\ddagger}$, we can approximate the potential $V(q)$ using a second-order Taylor series expansion around $q^{\\ddagger}$:\n$$V(q) \\approx V(q^{\\ddagger}) + \\frac{dV}{dq}\\bigg|_{q=q^{\\ddagger}}(q-q^{\\ddagger}) + \\frac{1}{2}\\frac{d^{2}V}{dq^{2}}\\bigg|_{q=q^{\\ddagger}}(q-q^{\\ddagger})^{2}$$\nAt a stationary point, $\\frac{dV}{dq}\\big|_{q=q^{\\ddagger}} = 0$. Let $\\delta q = q - q^{\\ddagger}$. The potential becomes:\n$$V(q) \\approx V(q^{\\ddagger}) + \\frac{1}{2}V''(q^{\\ddagger})(\\delta q)^{2}$$\nThe force near the transition state is then:\n$$-\\frac{dV}{dq} \\approx -V''(q^{\\ddagger})(\\delta q)$$\nSubstituting this force into the equation of motion:\n$$m \\frac{d^{2}(\\delta q)}{dt^{2}} = -V''(q^{\\ddagger})(\\delta q)$$\nThis can be rewritten as:\n$$\\frac{d^{2}(\\delta q)}{dt^{2}} + \\left(\\frac{V''(q^{\\ddagger})}{m}\\right)(\\delta q) = 0$$\nThis is the standard form of an oscillator equation, $\\frac{d^{2}x}{dt^{2}} + \\omega^{2}x = 0$, where the square of the angular frequency is $\\omega^{2} = \\frac{V''(q^{\\ddagger})}{m}$.\nAt the transition state $q^{\\ddagger}=0$, we found $V''(0) = -2b$. Substituting this value:\n$$(\\omega^{\\ddagger})^{2} = \\frac{-2b}{m}$$\nThe angular frequency $\\omega^{\\ddagger}$ is therefore imaginary, which is characteristic of an unstable mode at a saddle point, representing exponential divergence from the transition state rather than stable oscillation.\n$$\\omega^{\\ddagger} = \\sqrt{\\frac{-2b}{m}} = i\\sqrt{\\frac{2b}{m}}$$\nwhere $i$ is the imaginary unit.\n\nThe problem requires the coordinate $q^{\\ddagger}$ and the imaginary angular frequency $\\omega^{\\ddagger}$. We have found:\n$$q^{\\ddagger} = 0$$\n$$\\omega^{\\ddagger} = i\\sqrt{\\frac{2b}{m}}$$\nThe final answer is presented as a single row vector.", "answer": "$$ \\boxed{ \\begin{pmatrix} 0 & i\\sqrt{\\frac{2b}{m}} \\end{pmatrix} } $$", "id": "2952096"}, {"introduction": "Chemical reactions rarely proceed along a single, isolated coordinate; they move across multi-dimensional potential energy surfaces. This practice [@problem_id:2952104] challenges you to level up your analysis to a two-dimensional PES, a scenario that introduces mode coupling and a richer variety of topological features. You will apply multivariable calculus to locate all stationary points and use the eigenvalues of the Hessian matrix to rigorously classify them, developing the critical skill of distinguishing a true transition state from minima and other saddle points.", "problem": "A two-dimensional potential energy surface (PES) in reduced, dimensionless mass-weighted coordinates is modeled near a reaction region by\n$$\nV(x,y) \\;=\\; a x^{2} \\;+\\; b y^{2} \\;+\\; c x y \\;+\\; d x^{3},\n$$\nwhere $a>0$, $b0$, $c\\neq 0$, and $|d|$ is sufficiently small. Treat the PES using only the foundational definitions that stationary points are those where the gradient vanishes and that local shape is classified by the eigenvalues of the Hessian (the matrix of second derivatives). A transition state (TS) on a PES is an index-$1$ saddle point, that is, a stationary point at which exactly one Hessian eigenvalue is negative.\n\nStarting from these definitions, do the following:\n- Derive and solve the stationarity conditions to determine all stationary points $(x^{\\ast},y^{\\ast})$ as functions of the parameters $a$, $b$, $c$, and $d$.\n- At each stationary point, construct the Hessian and classify the point by the number of negative eigenvalues, justifying your conclusion from first principles.\n- Identify which stationary point is the transition state (index-$1$ saddle) governing the reaction along the unstable direction (reaction coordinate), and define the reaction-coordinate curvature at the TS as the negative eigenvalue of the Hessian at that point.\n\nYour final task is to provide the exact closed-form analytic expression, in terms of $a$, $b$, and $c$ only, for the reaction-coordinate curvature at the TS (that is, the negative Hessian eigenvalue at the TS). Express your final answer as a single analytic expression. No numerical rounding is required. Work in reduced, dimensionless units, so no physical units are required in the final answer.", "solution": "The problem requires an analysis of the potential energy surface (PES) given by the function $V(x,y) = a x^{2} + b y^{2} + c x y + d x^{3}$, with parameters satisfying $a>0$, $b0$, $c\\neq 0$, and $|d|$ being sufficiently small. The objective is to find all stationary points, classify them by analyzing the Hessian matrix, identify the transition state (TS), and determine the reaction-coordinate curvature at the TS.\n\nFirst, we must identify the stationary points of the potential energy surface. By definition, these are the points $(x^{\\ast}, y^{\\ast})$ where the gradient of the potential, $\\nabla V$, vanishes. The components of the gradient are the partial derivatives with respect to $x$ and $y$.\n$$\n\\frac{\\partial V}{\\partial x} = 2ax + cy + 3dx^2\n$$\n$$\n\\frac{\\partial V}{\\partial y} = 2by + cx\n$$\nSetting these derivatives to zero yields a system of two equations:\n$$\n\\begin{cases}\n2ax + cy + 3dx^2 = 0  (1) \\\\\n2by + cx = 0  (2)\n\\end{cases}\n$$\nFrom equation $(2)$, since $b0$ and thus $2b \\neq 0$, we can express $y$ in terms of $x$:\n$$\ny = -\\frac{c}{2b}x\n$$\nSubstituting this expression for $y$ into equation $(1)$:\n$$\n2ax + c\\left(-\\frac{c}{2b}x\\right) + 3dx^2 = 0\n$$\n$$\n\\left(2a - \\frac{c^2}{2b}\\right)x + 3dx^2 = 0\n$$\n$$\nx \\left( \\frac{4ab - c^2}{2b} + 3dx \\right) = 0\n$$\nThis equation yields two possible solutions for $x$.\n\nCase 1: $x^{\\ast} = 0$.\nIf $x^{\\ast}=0$, then $y^{\\ast} = -\\frac{c}{2b}(0) = 0$. This gives the first stationary point, which we denote $P_1$:\n$$\nP_1 = (0, 0)\n$$\n\nCase 2: The second factor is zero.\n$$\n\\frac{4ab - c^2}{2b} + 3dx = 0\n$$\nSolving for $x$, assuming $d \\neq 0$:\n$$\n3dx = -\\left(\\frac{4ab - c^2}{2b}\\right) = \\frac{c^2 - 4ab}{2b}\n$$\n$$\nx^{\\ast} = \\frac{c^2 - 4ab}{6bd}\n$$\nThe corresponding $y^{\\ast}$ is:\n$$\ny^{\\ast} = -\\frac{c}{2b}x^{\\ast} = -\\frac{c}{2b} \\left( \\frac{c^2 - 4ab}{6bd} \\right) = -\\frac{c(c^2 - 4ab)}{12b^2 d}\n$$\nThis gives the second stationary point, $P_2$:\n$$\nP_2 = \\left( \\frac{c^2 - 4ab}{6bd}, -\\frac{c(c^2 - 4ab)}{12b^2 d} \\right)\n$$\nNext, we classify these two stationary points by examining the Hessian matrix of second derivatives at each point. The Hessian matrix $\\mathbf{H}$ is given by:\n$$\n\\mathbf{H}(x,y) = \\begin{pmatrix} \\frac{\\partial^2 V}{\\partial x^2}  \\frac{\\partial^2 V}{\\partial x \\partial y} \\\\ \\frac{\\partial^2 V}{\\partial y \\partial x}  \\frac{\\partial^2 V}{\\partial y^2} \\end{pmatrix}\n$$\nThe required second partial derivatives are:\n$$\n\\frac{\\partial^2 V}{\\partial x^2} = 2a + 6dx\n$$\n$$\n\\frac{\\partial^2 V}{\\partial y^2} = 2b\n$$\n$$\n\\frac{\\partial^2 V}{\\partial x \\partial y} = \\frac{\\partial^2 V}{\\partial y \\partial x} = c\n$$\nSo, the Hessian matrix is:\n$$\n\\mathbf{H}(x,y) = \\begin{pmatrix} 2a + 6dx  c \\\\ c  2b \\end{pmatrix}\n$$\nNow, we evaluate the Hessian at each stationary point.\n\nFor $P_1 = (0, 0)$:\n$$\n\\mathbf{H}(0,0) = \\begin{pmatrix} 2a  c \\\\ c  2b \\end{pmatrix}\n$$\nTo classify this point, we analyze the eigenvalues of this matrix. The sign of the determinant, $\\det(\\mathbf{H})$, indicates the nature of the point.\n$$\n\\det(\\mathbf{H}(0,0)) = (2a)(2b) - c^2 = 4ab - c^2\n$$\nGiven the constraints $a>0$, $b0$, and $c \\neq 0$, the term $4ab$ is negative, and $-c^2$ is also negative. Thus, their sum is strictly negative:\n$$\n\\det(\\mathbf{H}(0,0))  0\n$$\nThe determinant is the product of the eigenvalues, $\\lambda_1 \\lambda_2$. A negative determinant implies that one eigenvalue is positive and one is negative. A stationary point with one positive and one negative eigenvalue is, by definition, an index-$1$ saddle point. According to the problem statement, this is a transition state.\n\nFor $P_2 = \\left( \\frac{c^2 - 4ab}{6bd}, y_2^{\\ast} \\right)$:\nWe evaluate the $(1,1)$ entry of the Hessian at $x_2^{\\ast}$:\n$$\nH_{11}(P_2) = 2a + 6d\\left(\\frac{c^2 - 4ab}{6bd}\\right) = 2a + \\frac{c^2 - 4ab}{b} = \\frac{2ab + c^2 - 4ab}{b} = \\frac{c^2 - 2ab}{b}\n$$\nThe Hessian at $P_2$ is:\n$$\n\\mathbf{H}(P_2) = \\begin{pmatrix} \\frac{c^2 - 2ab}{b}  c \\\\ c  2b \\end{pmatrix}\n$$\nThe determinant is:\n$$\n\\det(\\mathbf{H}(P_2)) = \\left(\\frac{c^2 - 2ab}{b}\\right)(2b) - c^2 = 2(c^2 - 2ab) - c^2 = c^2 - 4ab\n$$\nGiven $a>0$ and $b0$, $-4ab$ is positive. Since $c \\neq 0$, $c^2$ is also positive. Therefore:\n$$\n\\det(\\mathbf{H}(P_2)) = c^2 - 4ab > 0\n$$\nA positive determinant indicates that the eigenvalues have the same sign. To determine this sign, we inspect the trace of the Hessian, which is the sum of the eigenvalues.\n$$\n\\mathrm{Tr}(\\mathbf{H}(P_2)) = \\frac{c^2 - 2ab}{b} + 2b = \\frac{c^2 - 2ab + 2b^2}{b}\n$$\nThe numerator consists of three positive terms ($c^2 > 0$, $-2ab > 0$, $2b^2 > 0$), so the numerator is positive. The denominator $b$ is negative. Therefore, the trace is negative:\n$$\n\\mathrm{Tr}(\\mathbf{H}(P_2))  0\n$$\nSince the trace (sum of eigenvalues) is negative and the determinant (product of eigenvalues) is positive, both eigenvalues must be negative. This means $P_2$ is a local maximum (an index-$2$ stationary point).\n\nThe problem defines the transition state as an index-$1$ saddle point. Our analysis shows that only $P_1 = (0,0)$ fits this definition. Therefore, the transition state is located at the origin.\n\nThe final task is to find the reaction-coordinate curvature, which is defined as the negative eigenvalue of the Hessian at the transition state. We must find the eigenvalues of $\\mathbf{H}(0,0) = \\begin{pmatrix} 2a  c \\\\ c  2b \\end{pmatrix}$. The characteristic equation is $\\lambda^2 - \\mathrm{Tr}(\\mathbf{H})\\lambda + \\det(\\mathbf{H}) = 0$.\n$$\n\\lambda^2 - (2a+2b)\\lambda + (4ab - c^2) = 0\n$$\nUsing the quadratic formula, the eigenvalues $\\lambda_{\\pm}$ are:\n$$\n\\lambda_{\\pm} = \\frac{(2a+2b) \\pm \\sqrt{(2a+2b)^2 - 4(4ab - c^2)}}{2}\n$$\n$$\n\\lambda_{\\pm} = (a+b) \\pm \\sqrt{(a+b)^2 - (4ab - c^2)}\n$$\n$$\n\\lambda_{\\pm} = (a+b) \\pm \\sqrt{a^2 + 2ab + b^2 - 4ab + c^2}\n$$\n$$\n\\lambda_{\\pm} = (a+b) \\pm \\sqrt{a^2 - 2ab + b^2 + c^2}\n$$\n$$\n\\lambda_{\\pm} = (a+b) \\pm \\sqrt{(a-b)^2 + c^2}\n$$\nThe term $\\sqrt{(a-b)^2 + c^2}$ is strictly positive. To find the negative eigenvalue, we must compare the magnitude of $\\sqrt{(a-b)^2 + c^2}$ with $|a+b|$.\nNote that $(a-b)^2 > (a+b)^2$ since $(a-b)^2 - (a+b)^2 = -4ab > 0$.\nSo, $\\sqrt{(a-b)^2 + c^2} > \\sqrt{(a-b)^2} = |a-b|$.\nAlso, $\\sqrt{(a-b)^2+c^2} > \\sqrt{(a+b)^2-4ab+c^2} > \\sqrt{(a+b)^2} = |a+b|$.\nTherefore, the term $(a+b) - \\sqrt{(a-b)^2+c^2}$ is always negative. The negative eigenvalue is:\n$$\n\\lambda_{-} = (a+b) - \\sqrt{(a-b)^2+c^2}\n$$\nThis expression is the reaction-coordinate curvature at the transition state, as per the problem definition. It is a function of $a$, $b$, and $c$ only, which is consistent with the problem's requirement for the final answer. The parameter $d$ determined the location of the non-TS stationary point but did not affect the properties of the transition state at the origin.", "answer": "$$\n\\boxed{(a+b) - \\sqrt{(a-b)^{2} + c^{2}}}\n$$", "id": "2952104"}, {"introduction": "Potential energy surfaces are not just abstract mathematical constructs; in modern chemistry, they are typically generated from a series of computationally intensive *ab initio* calculations that yield discrete energy points. This computational exercise [@problem_id:2952105] places you in the role of a theoretical chemist, tasking you with fitting a simple analytical potential to simulated *ab initio* data. By performing a least-squares fit and comparing key metrics like barrier height and curvature, you will gain practical insight into the process of model building and validation, a fundamental skill in the study of reaction dynamics.", "problem": "You are given one-dimensional slices of *ab initio* potential energy data along a putative reaction coordinate. Assume that the potential energy along the reaction coordinate can be approximated by a quartic polynomial of the form $V(x) = a x^{4} + b x^{3} + c x^{2} + d x + e$, where $x$ is a dimensionless reaction coordinate and $V$ is energy in $\\mathrm{kJ\\ mol^{-1}}$. Your task is to implement a program that fits this quartic model to each dataset using ordinary least squares, identifies the transition state (a local maximum) and the reactant minimum from the fitted curve within the domain of the supplied data, and then assesses the fit quality by comparing the predicted barrier height and curvature to values obtained directly from the discrete data.\n\nFundamental bases to apply:\n- A potential energy surface assigns an energy to each set of nuclear coordinates; along a single reaction coordinate $x$, this becomes a function $V(x)$.\n- A barrier height relative to a reactant minimum at $x_{\\mathrm{R}}$ is defined as $\\Delta E^{\\ddagger} = V(x_{\\mathrm{TS}}) - V(x_{\\mathrm{R}})$, where $x_{\\mathrm{TS}}$ is a transition-state coordinate with $V'(x_{\\mathrm{TS}}) = 0$ and $V''(x_{\\mathrm{TS}})  0$.\n- Curvature along the reaction coordinate at a minimum is given by the second derivative $V''(x)$; in the fitted model, $V''(x) = 12 a x^{2} + 6 b x + 2 c$.\n- For discrete data $\\{(x_i, E_i)\\}$, a local curvature at index $i$ can be approximated via a three-point finite-difference formula. For three distinct abscissas $x_{-1}$, $x_{0}$, $x_{+1}$ near a minimum with energies $E_{-1}$, $E_{0}$, $E_{+1}$, an unbiased second-derivative approximation at $x_0$ is\n$$\n\\hat{V}''(x_0) \\approx 2\\left(\\frac{E_{-1}}{(x_{-1}-x_0)(x_{-1}-x_{+1})} + \\frac{E_{0}}{(x_0-x_{-1})(x_0-x_{+1})} + \\frac{E_{+1}}{(x_{+1}-x_{-1})(x_{+1}-x_0)}\\right).\n$$\n\nProcedure to implement for each dataset:\n- Fit $V(x) = a x^{4} + b x^{3} + c x^{2} + d x + e$ to the given points $\\{(x_i, E_i)\\}$ by minimizing $\\sum_{i} (V(x_i) - E_i)^2$ with respect to the coefficients $a$, $b$, $c$, $d$, $e$.\n- Compute the stationary points of the fitted $V(x)$ by solving $V'(x) = 0$, where $V'(x) = 4 a x^{3} + 3 b x^{2} + 2 c x + d$.\n- Within the closed interval $[x_{\\min}, x_{\\max}]$ spanned by the provided $x$ values, select:\n  - The transition state $x_{\\mathrm{TS}}$ as any real stationary point with $V''(x_{\\mathrm{TS}})  0$ that maximizes $V(x)$ among such points. If none exist, use the point in $[x_{\\min}, x_{\\max}]$ that maximizes $V(x)$ as a fallback.\n  - The reactant minimum $x_{\\mathrm{R,fit}}$ as the real stationary point with $V''(x_{\\mathrm{R,fit}}) > 0$ that is closest (in $|x - x_{\\mathrm{R,data}}|$) to a provided reactant index $i_{\\mathrm{R}}$ with coordinate $x_{\\mathrm{R,data}} = x_{i_{\\mathrm{R}}}$. If none exist, use $x_{\\mathrm{R,data}}$ as a fallback.\n- Compute three metrics:\n  1. The root-mean-square error (RMSE) of the fit in $\\mathrm{kJ\\ mol^{-1}}$,\n  $$\n  \\mathrm{RMSE} = \\sqrt{\\frac{1}{N}\\sum_{i=1}^{N} \\left(V(x_i) - E_i\\right)^2}.\n  $$\n  2. The absolute error in barrier height in $\\mathrm{kJ\\ mol^{-1}}$,\n  $$\n  \\left| \\left(V(x_{\\mathrm{TS}}) - V(x_{\\mathrm{R,fit}})\\right) - \\left(\\max_i E_i - E_{i_{\\mathrm{R}}}\\right) \\right|.\n  $$\n  3. The absolute error in curvature at the reactant minimum in $\\mathrm{kJ\\ mol^{-1}}$ per coordinate squared,\n  $$\n  \\left| V''(x_{\\mathrm{R,fit}}) - \\hat{V}''(x_{i_{\\mathrm{R}}}) \\right|,\n  $$\n  where $\\hat{V}''(x_{i_{\\mathrm{R}}})$ is computed using the three-point formula above with indices $i_{\\mathrm{R}}-1$, $i_{\\mathrm{R}}$, $i_{\\mathrm{R}}+1$.\n\nDatasets (energies in $\\mathrm{kJ\\ mol^{-1}}$, reaction coordinate $x$ dimensionless):\n- Case $1$:\n  - $x = [-1.5,\\ -1.0,\\ -0.5,\\ 0.0,\\ 0.5,\\ 1.0,\\ 1.5]$\n  - $E = [28.08,\\ 0.03,\\ 10.09,\\ 17.95,\\ 10.12,\\ -0.02,\\ 28.15]$\n  - Reactant index $i_{\\mathrm{R}} = 1$ (i.e., $x_{\\mathrm{R,data}} = -1.0$)\n- Case $2$:\n  - $x = [-1.6,\\ -1.2,\\ -0.8,\\ -0.4,\\ 0.0,\\ 0.4,\\ 0.8,\\ 1.2]$\n  - $E = [30.55,\\ -1.12,\\ -0.10,\\ 10.62,\\ 17.02,\\ 14.55,\\ 7.98,\\ 10.88]$\n  - Reactant index $i_{\\mathrm{R}} = 1$ (i.e., $x_{\\mathrm{R,data}} = -1.2$)\n- Case $3$:\n  - $x = [-1.5,\\ -1.0,\\ -0.5,\\ 0.0,\\ 0.5,\\ 1.0]$\n  - $E = [9.45,\\ -2.05,\\ 3.48,\\ 8.10,\\ 5.47,\\ 2.02]$\n  - Reactant index $i_{\\mathrm{R}} = 1$ (i.e., $x_{\\mathrm{R,data}} = -1.0$)\n\nAngle units are not involved. There are no percentages.\n\nRequired output:\n- For each case, produce three numbers in the order: $\\mathrm{RMSE}$, barrier-height absolute error, curvature absolute error. All values must be rounded to exactly $6$ decimal places.\n- Aggregate all three casesâ€™ results into a single line containing a comma-separated list enclosed in square brackets, in the order\n$[\\mathrm{RMSE}_1,\\ \\mathrm{BHerr}_1,\\ \\mathrm{CurvErr}_1,\\ \\mathrm{RMSE}_2,\\ \\mathrm{BHerr}_2,\\ \\mathrm{CurvErr}_2,\\ \\mathrm{RMSE}_3,\\ \\mathrm{BHerr}_3,\\ \\mathrm{CurvErr}_3]$,\nfor example, $[0.123456,0.234567,0.345678, \\dots ]$.\n\nTest suite:\n- The three datasets given above constitute the full test suite. They cover a symmetric double-well barrier (Case $1$), an asymmetric tilted barrier (Case $2$), and a relatively flat barrier with tilt (Case $3$). The boundary cases include checking correct selection of stationary points within the data domain and robustness when discrete maxima do not coincide with exact stationary points.\n\nYour program must be self-contained, require no user input, and print exactly one line in the format described above. Express all energy quantities in $\\mathrm{kJ\\ mol^{-1}}$, and curvature in $\\mathrm{kJ\\ mol^{-1}}$ per coordinate squared. Round every printed value to exactly $6$ decimal places.", "solution": "We are asked to represent a one-dimensional cut of a potential energy surface along a reaction coordinate by a quartic polynomial $V(x) = a x^{4} + b x^{3} + c x^{2} + d x + e$ and to assess the fit quality by errors in barrier height and curvature. The derivation starts from core definitions of a potential energy surface and transition states, and proceeds with well-tested mathematical procedures: least-squares fitting, derivative-based stationary point classification, and finite-difference curvature estimation.\n\nFirst principles and definitions. In a Bornâ€“Oppenheimer picture, the potential energy surface assigns an energy to each nuclear configuration; restricting to a single reaction coordinate $x$ produces a univariate function $V(x)$. A transition state along this coordinate is a point $x_{\\mathrm{TS}}$ with $V'(x_{\\mathrm{TS}}) = 0$ and $V''(x_{\\mathrm{TS}})  0$, while a reactant minimum is $x_{\\mathrm{R}}$ with $V'(x_{\\mathrm{R}}) = 0$ and $V''(x_{\\mathrm{R}}) > 0$. The barrier height relative to a reactant minimum is $\\Delta E^{\\ddagger} = V(x_{\\mathrm{TS}}) - V(x_{\\mathrm{R}})$. The curvature at a point is quantified by the second derivative $V''(x)$. For a fitted quartic $V(x) = a x^{4} + b x^{3} + c x^{2} + d x + e$, the derivatives are $V'(x) = 4 a x^{3} + 3 b x^{2} + 2 c x + d$ and $V''(x) = 12 a x^{2} + 6 b x + 2 c$.\n\nLeast-squares fitting. Given data $\\{(x_i, E_i)\\}_{i=1}^{N}$, we find coefficients $(a,b,c,d,e)$ that minimize the sum of squared residuals $\\sum_{i=1}^{N} (V(x_i) - E_i)^2$. This is an ordinary least-squares linear regression in the basis $\\{x^{4}, x^{3}, x^{2}, x, 1\\}$, which can be written in matrix form $\\mathbf{X}\\boldsymbol{\\beta} \\approx \\mathbf{y}$, with $\\mathbf{X}_{i,:} = [x_i^{4}, x_i^{3}, x_i^{2}, x_i, 1]$, $\\boldsymbol{\\beta} = [a, b, c, d, e]^{\\top}$, and $\\mathbf{y}_i = E_i$. The least-squares solution minimizes $\\|\\mathbf{X}\\boldsymbol{\\beta} - \\mathbf{y}\\|_{2}^{2}$ and can be obtained using numerically stable algorithms such as the singular value decomposition, as implemented by standard linear solvers.\n\nIdentification of stationary points. To locate candidate transition states and minima from the fit, we solve $V'(x) = 0$. Since $V'(x)$ is a cubic polynomial $4 a x^{3} + 3 b x^{2} + 2 c x + d$, it has at most three real roots. We compute all roots, retain those with negligible imaginary parts, and restrict to the interval $[x_{\\min}, x_{\\max}]$ spanned by the supplied $x$ values. We then classify each real root $x^{*}$ by evaluating $V''(x^{*})$:\n- If $V''(x^{*})  0$, $x^{*}$ is a local maximum candidate. Among these, we select $x_{\\mathrm{TS}}$ as the one with the largest $V(x^{*})$. If there are no such stationary maxima within the interval, we revert to a fallback by taking the $x$ in $[x_{\\min}, x_{\\max}]$ that maximizes $V(x)$, approximated on a sufficiently fine grid to avoid missing narrow features.\n- If $V''(x^{*}) > 0$, $x^{*}$ is a local minimum candidate. We select the predicted reactant minimum $x_{\\mathrm{R,fit}}$ as the minimum candidate that is closest to the supplied reactant coordinate $x_{\\mathrm{R,data}}$ associated with the provided reactant index. If there is no such stationary minimum in the interval, we fall back to $x_{\\mathrm{R,fit}} = x_{\\mathrm{R,data}}$.\n\nBarrier height and RMSE. With $x_{\\mathrm{TS}}$ and $x_{\\mathrm{R,fit}}$ specified, we compute the fitted barrier height $\\Delta E^{\\ddagger}_{\\mathrm{fit}} = V(x_{\\mathrm{TS}}) - V(x_{\\mathrm{R,fit}})$. For the data-based barrier, we use $\\Delta E^{\\ddagger}_{\\mathrm{data}} = \\max_{i} E_i - E_{i_{\\mathrm{R}}}$, which is the best discrete approximation available without interpolation. The absolute barrier error is $|\\Delta E^{\\ddagger}_{\\mathrm{fit}} - \\Delta E^{\\ddagger}_{\\mathrm{data}}|$. The root-mean-square error is computed as $\\mathrm{RMSE} = \\sqrt{N^{-1}\\sum_{i=1}^{N} (V(x_i) - E_i)^2}$ with $N$ the number of data points.\n\nCurvature from data. The curvature at the reactant from the fit is $V''(x_{\\mathrm{R,fit}}) = 12 a x_{\\mathrm{R,fit}}^{2} + 6 b x_{\\mathrm{R,fit}} + 2 c$. From discrete data, we approximate the curvature at the reactant index $i_{\\mathrm{R}}$ using a three-point finite-difference formula that is valid for nonuniform grids. Let $x_{-1} = x_{i_{\\mathrm{R}}-1}$, $x_{0} = x_{i_{\\mathrm{R}}}$, $x_{+1} = x_{i_{\\mathrm{R}}+1}$, and $E_{-1}$, $E_{0}$, $E_{+1}$ the corresponding energies. Then\n$$\n\\hat{V}''(x_0) \\approx 2\\left(\\frac{E_{-1}}{(x_{-1}-x_0)(x_{-1}-x_{+1})} + \\frac{E_{0}}{(x_0-x_{-1})(x_0-x_{+1})} + \\frac{E_{+1}}{(x_{+1}-x_{-1})(x_{+1}-x_0)}\\right).\n$$\nThis is derived by differentiating the unique quadratic Lagrange interpolant through the three points and evaluating the second derivative at $x_0$. The absolute curvature error is then $|V''(x_{\\mathrm{R,fit}}) - \\hat{V}''(x_{i_{\\mathrm{R}}})|$.\n\nAlgorithmic implementation. For each case:\n- Construct the design matrix with columns $x^{4}$, $x^{3}$, $x^{2}$, $x$, and $1$, and solve the least-squares problem for $(a,b,c,d,e)$.\n- Compute roots of the derivative cubic and filter to real roots in $[x_{\\min}, x_{\\max}]$. Classify by $V''$ to identify maxima and minima.\n- Select $x_{\\mathrm{TS}}$ and $x_{\\mathrm{R,fit}}$ based on the rules above, with grid-based fallbacks within $[x_{\\min}, x_{\\max}]$ if needed.\n- Compute $\\mathrm{RMSE}$, the data barrier height $\\max_i E_i - E_{i_{\\mathrm{R}}}$, the fitted barrier height $V(x_{\\mathrm{TS}}) - V(x_{\\mathrm{R,fit}})$, the data curvature via the three-point formula, and the fitted curvature via $12 a x^{2} + 6 b x + 2 c$ at $x_{\\mathrm{R,fit}}$.\n- Take absolute differences for the barrier and curvature errors.\n- Round $\\mathrm{RMSE}$, barrier error, and curvature error to exactly $6$ decimal places.\n\nThe output aggregates the triplets for all three cases in a single bracketed list with comma-separated values, ensuring a concise, programmatically checkable format. All energies are in $\\mathrm{kJ\\ mol^{-1}}$, and curvatures are in $\\mathrm{kJ\\ mol^{-1}}$ per coordinate squared, with the coordinate being dimensionless.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef fit_quartic_least_squares(x, E):\n    \"\"\"\n    Fit V(x) = a x^4 + b x^3 + c x^2 + d x + e by ordinary least squares.\n    Returns coefficients [a,b,c,d,e].\n    \"\"\"\n    x = np.asarray(x, dtype=float)\n    E = np.asarray(E, dtype=float)\n    # Design matrix with columns: x^4, x^3, x^2, x, 1\n    X = np.vstack([x**4, x**3, x**2, x, np.ones_like(x)]).T\n    coeffs, _, _, _ = np.linalg.lstsq(X, E, rcond=None)\n    return coeffs  # a,b,c,d,e\n\ndef polyval_quartic(coeffs, x):\n    a, b, c, d, e = coeffs\n    x = np.asarray(x, dtype=float)\n    return ((a*x + b)*x + c)*x**2 + d*x + e  # improved numerical but clear version\n\ndef polyder_coeffs(coeffs):\n    a, b, c, d, e = coeffs\n    # derivative: 4a x^3 + 3b x^2 + 2c x + d\n    return np.array([4*a, 3*b, 2*c, d], dtype=float)\n\ndef poly2nd_coeffs(coeffs):\n    a, b, c, d, e = coeffs\n    # second derivative: 12 a x^2 + 6 b x + 2 c\n    return np.array([12*a, 6*b, 2*c], dtype=float)\n\ndef polyval_poly(coeffs, x):\n    # Generic polynomial evaluation with highest degree first\n    # coeffs array like [c_n, c_{n-1}, ..., c_0]\n    return np.polyval(coeffs, x)\n\ndef real_roots_in_interval(poly_coeffs, xmin, xmax, imag_tol=1e-10):\n    roots = np.roots(poly_coeffs)\n    real_roots = []\n    for r in roots:\n        if abs(r.imag) = imag_tol:\n            xr = r.real\n            if (xr = xmin - 1e-12) and (xr = xmax + 1e-12):\n                real_roots.append(xr)\n    return np.array(sorted(real_roots), dtype=float)\n\ndef select_ts_and_minima(coeffs, x_data, xR_data):\n    \"\"\"\n    Select transition state (maximum) and reactant minimum near xR_data\n    from stationary points of the fitted quartic within data domain.\n    Fallbacks: use grid max for TS, use xR_data for reactant minimum if needed.\n    \"\"\"\n    xmin, xmax = float(np.min(x_data)), float(np.max(x_data))\n    d1 = polyder_coeffs(coeffs)\n    d2 = poly2nd_coeffs(coeffs)\n    # Stationary points in domain\n    stat_pts = real_roots_in_interval(d1, xmin, xmax)\n    # Classify by second derivative\n    maxima = []\n    minima = []\n    for x0 in stat_pts:\n        curv = polyval_poly(d2, x0)\n        if curv  0:\n            maxima.append(x0)\n        elif curv  0:\n            minima.append(x0)\n        # if exactly zero curvature, ignore as inflection or degenerate\n    maxima = np.array(maxima, dtype=float) if len(maxima)  0 else np.array([], dtype=float)\n    minima = np.array(minima, dtype=float) if len(minima)  0 else np.array([], dtype=float)\n\n    # Transition state selection\n    if maxima.size  0:\n        # choose the one with highest V\n        Vs = polyval_quartic(coeffs, maxima)\n        idx = int(np.argmax(Vs))\n        x_ts = float(maxima[idx])\n    else:\n        # Fallback: grid search max on dense grid\n        grid = np.linspace(xmin, xmax, 2001)\n        Vg = polyval_quartic(coeffs, grid)\n        x_ts = float(grid[int(np.argmax(Vg))])\n\n    # Reactant minimum selection\n    if minima.size  0:\n        idx = int(np.argmin(np.abs(minima - xR_data)))\n        x_rmin = float(minima[idx])\n    else:\n        x_rmin = float(xR_data)\n\n    return x_ts, x_rmin\n\ndef rmse(y_true, y_pred):\n    y_true = np.asarray(y_true, dtype=float)\n    y_pred = np.asarray(y_pred, dtype=float)\n    return float(np.sqrt(np.mean((y_true - y_pred)**2)))\n\ndef curvature_three_point(xm, x0, xp, fm, f0, fp):\n    \"\"\"\n    Second derivative at x0 from three-point Lagrange formula, valid for nonuniform spacing.\n    \"\"\"\n    # Avoid division by zero in degenerate input\n    denom1 = (xm - x0) * (xm - xp)\n    denom2 = (x0 - xm) * (x0 - xp)\n    denom3 = (xp - xm) * (xp - x0)\n    return float(2.0 * (fm/denom1 + f0/denom2 + fp/denom3))\n\ndef evaluate_case(x, E, r_index):\n    x = np.asarray(x, dtype=float)\n    E = np.asarray(E, dtype=float)\n    coeffs = fit_quartic_least_squares(x, E)\n    Vfit = polyval_quartic(coeffs, x)\n    case_rmse = rmse(E, Vfit)\n\n    # Stationary-point based selection\n    xR_data = float(x[r_index])\n    x_ts, x_rmin = select_ts_and_minima(coeffs, x, xR_data)\n\n    # Barrier heights\n    V_ts = float(polyval_quartic(coeffs, x_ts))\n    V_rmin_fit = float(polyval_quartic(coeffs, x_rmin))\n    barrier_fit = V_ts - V_rmin_fit\n\n    barrier_data = float(np.max(E) - E[r_index])\n    barrier_err = abs(barrier_fit - barrier_data)\n\n    # Curvature: fitted at x_rmin\n    d2 = poly2nd_coeffs(coeffs)\n    curv_fit = float(polyval_poly(d2, x_rmin))\n\n    # Curvature: data at r_index using neighbors\n    if r_index - 1  0 or r_index + 1 = len(x):\n        # If neighbors do not exist, fall back to simple equal-spacing approx if possible.\n        # In given test suite, neighbors exist. For completeness:\n        curv_data = np.nan\n    else:\n        curv_data = curvature_three_point(x[r_index-1], x[r_index], x[r_index+1],\n                                          E[r_index-1], E[r_index], E[r_index+1])\n    curv_err = abs(curv_fit - curv_data)\n\n    return case_rmse, barrier_err, curv_err\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (x array, E array, reactant index r_index)\n        ([-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5],\n         [28.08, 0.03, 10.09, 17.95, 10.12, -0.02, 28.15],\n         1),\n        ([-1.6, -1.2, -0.8, -0.4, 0.0, 0.4, 0.8, 1.2],\n         [30.55, -1.12, -0.10, 10.62, 17.02, 14.55, 7.98, 10.88],\n         1),\n        ([-1.5, -1.0, -0.5, 0.0, 0.5, 1.0],\n         [9.45, -2.05, 3.48, 8.10, 5.47, 2.02],\n         1),\n    ]\n\n    results = []\n    for x, E, r_index in test_cases:\n        case_rmse, barrier_err, curv_err = evaluate_case(x, E, r_index)\n        # Round to exactly 6 decimal places\n        results.extend([\n            f\"{case_rmse:.6f}\",\n            f\"{barrier_err:.6f}\",\n            f\"{curv_err:.6f}\",\n        ])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2952105"}]}