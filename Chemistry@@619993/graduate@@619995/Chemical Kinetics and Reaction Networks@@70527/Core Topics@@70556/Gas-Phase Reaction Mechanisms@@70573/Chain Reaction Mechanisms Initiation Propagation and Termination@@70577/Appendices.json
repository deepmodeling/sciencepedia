{"hands_on_practices": [{"introduction": "A cornerstone of chain reaction analysis is the ability to predict the properties of the resulting products from the kinetics of the elementary steps. This practice focuses on free-radical polymerization, where the number-average degree of polymerization, $X_n$, is a critical parameter determining the material's properties. By applying the steady-state approximation, you will derive an expression for $X_n$ that connects it directly to the rates of initiation, propagation, and termination, gaining insight into how different termination pathways—recombination and disproportionation—uniquely influence the final polymer chain length [@problem_id:2631169].", "problem": "A bulk free-radical polymerization of a vinyl monomer proceeds via three mechanistic stages: initiation, propagation, and termination. In initiation, primary radicals are generated at an effective volumetric rate $R_i$ (moles per volume per time). In propagation, a living polymer radical $\\mathrm{P}_n^\\bullet$ adds monomer $\\mathrm{M}$ to grow by one repeat unit according to elementary mass action with second-order rate constant $k_p$. Termination occurs exclusively by bimolecular radical-radical reactions via two competing channels: recombination (also called combination), in which two living radicals couple to form a single dead polymer chain, with second-order rate coefficient $k_{\\text{comb}}$, and disproportionation, in which two living radicals transfer hydrogen to produce two dead polymer chains, with second-order rate coefficient $k_{\\text{disp}}$. Assume isothermal, well-mixed conditions with constant monomer concentration $[M]$ on the time scale of radical dynamics, negligible chain transfer, and the validity of the Steady-State Approximation (SSA) for the concentration of living radicals $[\\mathrm{R}^\\bullet]$.\n\nBriefly state the mechanistic distinction between disproportionation and recombination in terms of how many dead polymer molecules are produced per termination encounter. Then, starting only from elementary mass-action kinetics, conservation of radicals under the Steady-State Approximation, and the definition of the number-average degree of polymerization $X_n$ as the average number of monomer units incorporated per polymer molecule formed, derive a closed-form analytic expression for $X_n$ as a function of $k_p$, $[M]$, $R_i$, $k_{\\text{comb}}$, and $k_{\\text{disp}}$. Your final answer must be a single analytic expression. No numerical evaluation is required, and no rounding is needed. Express the final answer without units.", "solution": "The problem presented is a standard, well-posed exercise in the chemical kinetics of polymerization. It is scientifically grounded, self-contained, and objective. All necessary assumptions, definitions, and kinetic parameters are provided to derive a unique analytical solution. The problem is therefore valid.\n\nThe task is twofold: first, to state the mechanistic distinction between recombination and disproportionation termination, and second, to derive an expression for the number-average degree of polymerization, $X_n$.\n\nFirst, we address the mechanistic distinction. In a free-radical polymerization, termination events consume living polymer radicals to form stable, non-reactive \"dead\" polymer chains.\n- **Recombination (or Combination)**: Two living polymer radicals, for instance $\\mathrm{P}_n^\\bullet$ and $\\mathrm{P}_m^\\bullet$, couple directly to form a single, longer dead polymer chain $\\mathrm{P}_{n+m}$. Thus, one termination encounter via recombination produces **one** dead polymer molecule. The chemical equation is:\n$$ \\mathrm{P}_n^\\bullet + \\mathrm{P}_m^\\bullet \\xrightarrow{k_{\\text{comb}}} \\mathrm{P}_{n+m} $$\n- **Disproportionation**: One living radical abstracts an atom (typically a hydrogen atom) from another. This results in two dead polymer chains: one saturated and one with a terminal double bond. For instance, $\\mathrm{P}_n^\\bullet$ and $\\mathrm{P}_m^\\bullet$ react to form $\\mathrm{P}_n$ and $\\mathrm{P}_m$. Thus, one termination encounter via disproportionation produces **two** dead polymer molecules. The chemical equation is:\n$$ \\mathrm{P}_n^\\bullet + \\mathrm{P}_m^\\bullet \\xrightarrow{k_{\\text{disp}}} \\mathrm{P}_n + \\mathrm{P}_m $$\n\nNow, we proceed to the derivation of $X_n$. The number-average degree of polymerization, $X_n$, is defined as the average number of monomer units incorporated per polymer molecule formed. This can be expressed as the ratio of the rate of monomer consumption to the rate of formation of dead polymer molecules.\n$$ X_n = \\frac{\\text{Rate of monomer consumption}}{\\text{Rate of dead polymer formation}} $$\n\nThe rate of monomer consumption occurs overwhelmingly during the propagation step. The rate of propagation, $R_p$, is given by the elementary mass-action law for the reaction $\\mathrm{P}_n^\\bullet + \\mathrm{M} \\rightarrow \\mathrm{P}_{n+1}^\\bullet$. Summing over all chain lengths, the total rate of propagation is:\n$$ R_p = k_p [\\mathrm{M}] \\sum_n [\\mathrm{P}_n^\\bullet] = k_p [\\mathrm{M}] [\\mathrm{R}^\\bullet] $$\nwhere $[\\mathrm{R}^\\bullet]$ is the total concentration of all living polymer radicals.\n\nNext, we must determine the rate of formation of dead polymer molecules. Let us designate this rate as $R_{form}$. Dead polymers are formed by both recombination and disproportionation events.\nThe rate of recombination events, involving two radicals, is $k_{\\text{comb}} [\\mathrm{R}^\\bullet]^2$. Since each recombination event produces one dead polymer molecule, the rate of polymer formation from recombination is $k_{\\text{comb}} [\\mathrm{R}^\\bullet]^2$.\nThe rate of disproportionation events is $k_{\\text{disp}} [\\mathrm{R}^\\bullet]^2$. Since each disproportionation event produces two dead polymer molecules, the rate of polymer formation from disproportionation is $2 k_{\\text{disp}} [\\mathrm{R}^\\bullet]^2$.\nThe total rate of formation of dead polymer molecules is the sum of these two rates:\n$$ R_{form} = k_{\\text{comb}} [\\mathrm{R}^\\bullet]^2 + 2 k_{\\text{disp}} [\\mathrm{R}^\\bullet]^2 = (k_{\\text{comb}} + 2 k_{\\text{disp}}) [\\mathrm{R}^\\bullet]^2 $$\n\nNow we can write an intermediate expression for $X_n$ by substituting the expressions for $R_p$ and $R_{form}$:\n$$ X_n = \\frac{R_p}{R_{form}} = \\frac{k_p [\\mathrm{M}] [\\mathrm{R}^\\bullet]}{(k_{\\text{comb}} + 2 k_{\\text{disp}}) [\\mathrm{R}^\\bullet]^2} = \\frac{k_p [\\mathrm{M}]}{(k_{\\text{comb}} + 2 k_{\\text{disp}}) [\\mathrm{R}^\\bullet]} $$\n\nThis expression contains the unknown radical concentration $[\\mathrm{R}^\\bullet]$. We find $[\\mathrm{R}^\\bullet]$ by applying the Steady-State Approximation (SSA), which posits that the rate of radical generation (initiation) is equal to the rate of radical destruction (termination).\nThe rate of radical generation is given as $R_i$.\nThe rate of radical destruction, or the rate of termination $R_t$, accounts for the consumption of radicals. In each termination event, whether by recombination or disproportionation, two radicals are consumed. The overall termination rate constant is $k_t = k_{\\text{comb}} + k_{\\text{disp}}$. Therefore, the rate of radical consumption is:\n$$ R_t = 2 (k_{\\text{comb}} + k_{\\text{disp}}) [\\mathrm{R}^\\bullet]^2 $$\nApplying the SSA, we set the rate of initiation equal to the rate of termination:\n$$ R_i = R_t = 2 (k_{\\text{comb}} + k_{\\text{disp}}) [\\mathrm{R}^\\bullet]^2 $$\nSolving for the steady-state radical concentration $[\\mathrm{R}^\\bullet]$:\n$$ [\\mathrm{R}^\\bullet] = \\left( \\frac{R_i}{2(k_{\\text{comb}} + k_{\\text{disp}})} \\right)^{1/2} $$\n\nFinally, we substitute this expression for $[\\mathrm{R}^\\bullet]$ back into our equation for $X_n$:\n$$ X_n = \\frac{k_p [\\mathrm{M}]}{(k_{\\text{comb}} + 2 k_{\\text{disp}}) \\left( \\frac{R_i}{2(k_{\\text{comb}} + k_{\\text{disp}})} \\right)^{1/2}} $$\nThis expression can be rearranged to provide the final closed-form solution:\n$$ X_n = \\frac{k_p [\\mathrm{M}]}{(k_{\\text{comb}} + 2 k_{\\text{disp}})} \\frac{\\sqrt{2(k_{\\text{comb}} + k_{\\text{disp}})}}{\\sqrt{R_i}} $$\n$$ X_n = \\frac{k_p [\\mathrm{M}] \\sqrt{2(k_{\\text{comb}} + k_{\\text{disp}})}}{\\sqrt{R_i}(k_{\\text{comb}} + 2 k_{\\text{disp}})} $$\nThis is the required expression for the number-average degree of polymerization as a function of the given parameters.", "answer": "$$\n\\boxed{\\frac{k_p [\\mathrm{M}] \\sqrt{2(k_{\\text{comb}} + k_{\\text{disp}})}}{\\sqrt{R_i}(k_{\\text{comb}} + 2 k_{\\text{disp}})}}\n$$", "id": "2631169"}, {"introduction": "While the previous exercise treated the initiation rate as a given parameter, in many modern applications, initiation is triggered by light. This problem delves into the specifics of photoinitiation, where reaction rates are governed by the absorption of photons according to the Beer-Lambert law. You will derive the spatially averaged initiation rate by considering the quantum yield and the exponential decay of light intensity, learning to distinguish between optically thin and thick regimes [@problem_id:2631199]. This practice is fundamental for modeling and engineering processes such as UV curing, 3D printing, and photolithography.", "problem": "A homogeneous liquid slab of thickness $L$ contains a dissolved photoinitiator $A$ at a uniform concentration $C_A$. The slab is irradiated from one side ($z=0$) by a monochromatic, collimated beam delivering a photon flux density $I_0$ (in mol photons m$^{-2}$ s$^{-1}$). The photoinitiation step is $A + h\\nu \\to 2R$, where each absorbed photon produces on average $\\Phi$ radicals per photon (quantum yield $\\Phi$, dimensionless). Assume the following idealizations: the medium is non-scattering and non-emissive, reflections are negligible, $C_A$ remains spatially uniform during irradiation, and attenuation obeys the Beer–Lambert law with a spatially uniform Napierian absorption coefficient $\\alpha$ (in m$^{-1}$) that is linearly proportional to $C_A$. Let $I(z)$ denote the local photon flux density at depth $z \\in [0,L]$.\n\nStarting from photon conservation and the Beer–Lambert attenuation, derive a closed-form expression for the spatially averaged volumetric initiation rate of radicals,\n$$\\bar{r}_i \\equiv \\frac{1}{L}\\int_0^L r_i(z)\\,dz,$$\nin terms of $I_0$, $\\alpha$, $L$, and $\\Phi$, where $r_i(z)$ is the local volumetric rate of radical generation due to photoinitiation. Express the final $\\bar{r}_i$ in mol m$^{-3}$ s$^{-1}$, in symbolic form without numerical substitution.\n\nThen, using your derived expression, justify the limiting behaviors for weak absorption ($\\alpha L \\ll 1$) and strong absorption ($\\alpha L \\gg 1$), and explain physically how the Beer–Lambert law shapes the spatial distribution of initiation under strong absorption. No numerical evaluation is required; provide the closed-form analytic result for $\\bar{r}_i$ only as your final answer.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n-   System: A homogeneous liquid slab of thickness $L$.\n-   Photoinitiator: Species $A$ at a uniform concentration $C_A$.\n-   Irradiation: Monochromatic, collimated beam at $z=0$ with photon flux density $I_0$ [mol photons m$^{-2}$ s$^{-1}$].\n-   Photon Flux Density at depth $z$: $I(z)$.\n-   Photoinitiation Reaction: $A + h\\nu \\to 2R$.\n-   Quantum Yield: $\\Phi$ [radicals per photon].\n-   Absorption: Obeys the Beer–Lambert law with a spatially uniform Napierian absorption coefficient $\\alpha$ [m$^{-1}$].\n-   Assumptions: Non-scattering, non-emissive medium; negligible reflections; $C_A$ is spatially uniform; $\\alpha$ is linearly proportional to $C_A$.\n-   Target Quantity: Spatially averaged volumetric initiation rate of radicals, $\\bar{r}_i \\equiv \\frac{1}{L}\\int_0^L r_i(z)\\,dz$, where $r_i(z)$ is the local volumetric rate of radical generation.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, well-posed, and objective. It is based on fundamental principles of chemical kinetics and radiative transfer, specifically the Beer-Lambert law and the concept of quantum yield. The problem is self-contained, providing all necessary physical laws, variables, and boundary conditions ($I(0) = I_0$) to derive a unique solution. The idealizations (e.g., uniform concentration, no scattering) are standard simplifying assumptions used to obtain an analytical solution and do not constitute a flaw. The terminology is precise and the goal is clearly defined. The problem is neither trivial nor ill-posed.\n\n**Step 3: Verdict and Action**\nThe problem is deemed **valid**. We will proceed with a full derivation.\n\nThe derivation begins from the fundamental principles governing photon transport and absorption. The Beer-Lambert law describes the attenuation of light intensity in an absorbing medium. For a one-dimensional system, this is expressed as a first-order ordinary differential equation for the photon flux density $I(z)$:\n$$ \\frac{dI}{dz} = -\\alpha I(z) $$\nwhere $\\alpha$ is the Napierian absorption coefficient. The boundary condition is the incident flux at the front surface of the slab, $I(z=0) = I_0$. We solve this differential equation by separation of variables:\n$$ \\int_{I_0}^{I(z)} \\frac{dI'}{I'} = -\\int_0^z \\alpha \\,dz' $$\nSince $\\alpha$ is assumed to be spatially uniform, the integration yields:\n$$ \\ln\\left(\\frac{I(z)}{I_0}\\right) = -\\alpha z $$\nSolving for $I(z)$ gives the explicit expression for the photon flux density as a function of depth:\n$$ I(z) = I_0 \\exp(-\\alpha z) $$\nThe local volumetric rate of photon absorption, which we denote as $r_{abs}(z)$, is given by the negative divergence of the photon flux vector. In one dimension, this simplifies to the negative derivative of $I(z)$:\n$$ r_{abs}(z) = -\\frac{dI}{dz} $$\nSubstituting the Beer-Lambert law into this expression, we find that the local absorption rate is directly proportional to the local intensity:\n$$ r_{abs}(z) = -(-\\alpha I(z)) = \\alpha I(z) = \\alpha I_0 \\exp(-\\alpha z) $$\nThe units of $r_{abs}(z)$ are mol photons m$^{-3}$ s$^{-1}$, as required for a volumetric rate.\n\nNext, we define the local volumetric rate of radical generation, $r_i(z)$. The problem states that the quantum yield $\\Phi$ is the average number of radicals produced per absorbed photon. Therefore, $r_i(z)$ is the product of the quantum yield and the local rate of photon absorption:\n$$ r_i(z) = \\Phi \\cdot r_{abs}(z) = \\Phi \\alpha I_0 \\exp(-\\alpha z) $$\nThe units of $r_i(z)$ are mol radicals m$^{-3}$ s$^{-1}$.\n\nThe objective is to find the spatially averaged volumetric initiation rate, $\\bar{r}_i$, over the slab thickness $L$. This is defined by the integral:\n$$ \\bar{r}_i = \\frac{1}{L}\\int_0^L r_i(z)\\,dz $$\nWe substitute the expression for $r_i(z)$ into this integral:\n$$ \\bar{r}_i = \\frac{1}{L}\\int_0^L \\Phi \\alpha I_0 \\exp(-\\alpha z)\\,dz $$\nThe terms $\\Phi$, $\\alpha$, $I_0$, and $L$ are constants with respect to the integration variable $z$, so we can move them outside the integral:\n$$ \\bar{r}_i = \\frac{\\Phi \\alpha I_0}{L} \\int_0^L \\exp(-\\alpha z)\\,dz $$\nThe integral of the exponential function is straightforward:\n$$ \\int_0^L \\exp(-\\alpha z)\\,dz = \\left[ -\\frac{1}{\\alpha}\\exp(-\\alpha z) \\right]_0^L = -\\frac{1}{\\alpha}(\\exp(-\\alpha L) - \\exp(0)) = \\frac{1}{\\alpha}(1 - \\exp(-\\alpha L)) $$\nSubstituting this result back into the expression for $\\bar{r}_i$:\n$$ \\bar{r}_i = \\frac{\\Phi \\alpha I_0}{L} \\left( \\frac{1}{\\alpha}(1 - \\exp(-\\alpha L)) \\right) $$\nThe term $\\alpha$ cancels, leading to the final closed-form expression for the spatially averaged initiation rate:\n$$ \\bar{r}_i = \\frac{\\Phi I_0}{L} (1 - \\exp(-\\alpha L)) $$\nThis expression gives the average rate of radical formation in the specified units of mol m$^{-3}$ s$^{-1}$.\n\nWe now analyze the limiting behaviors of this expression.\n\nCase 1: Weak absorption ($\\alpha L \\ll 1$).\nThis condition describes an optically thin slab. We use the Taylor series expansion for the exponential function, $\\exp(-x) \\approx 1 - x$ for small $x$. Letting $x = \\alpha L$, we have $\\exp(-\\alpha L) \\approx 1 - \\alpha L$. Substituting this into the expression for $\\bar{r}_i$:\n$$ \\bar{r}_i \\approx \\frac{\\Phi I_0}{L} (1 - (1 - \\alpha L)) = \\frac{\\Phi I_0}{L} (\\alpha L) = \\Phi \\alpha I_0 $$\nIn the weak absorption limit, the average initiation rate is independent of the slab thickness $L$ and is linearly proportional to the absorption coefficient $\\alpha$ and the incident flux $I_0$. This is physically consistent: when the slab is optically thin, the light intensity $I(z)$ is approximately constant and equal to $I_0$ throughout the volume. The local initiation rate is therefore nearly uniform, $r_i(z) \\approx \\Phi \\alpha I_0$, and its average value is simply this constant.\n\nCase 2: Strong absorption ($\\alpha L \\gg 1$).\nThis condition describes an optically thick slab. As $\\alpha L \\to \\infty$, the term $\\exp(-\\alpha L) \\to 0$. The expression for $\\bar{r}_i$ becomes:\n$$ \\bar{r}_i \\to \\frac{\\Phi I_0}{L} (1 - 0) = \\frac{\\Phi I_0}{L} $$\nIn this limit, the average initiation rate becomes independent of the absorption coefficient $\\alpha$ and is inversely proportional to the slab thickness $L$. The physical reason is that for an optically thick slab, all incident photons are absorbed within the slab. The total number of photons entering the slab per unit area is $I_0$. The total number of radicals generated per unit area is thus $\\Phi I_0$. The average volumetric rate is this total rate per area distributed over the volume, which has a thickness $L$, resulting in $\\bar{r}_i = (\\Phi I_0)/L$. The rate is independent of $\\alpha$ because, provided $\\alpha$ is large enough to absorb all light, its precise value does not change the total number of absorbed photons.\n\nFinally, we address the spatial distribution of initiation under strong absorption. The local rate $r_i(z) = \\Phi \\alpha I_0 \\exp(-\\alpha z)$ shows an exponential decay with depth $z$. The characteristic length scale for this decay is the absorption depth, $1/\\alpha$. For strong absorption, $\\alpha L \\gg 1$, which implies $L \\gg 1/\\alpha$. Consequently, the vast majority of photoinitiation events occur in a thin layer near the irradiated surface ($z=0$). The initiation rate is maximal at $z=0$ ($r_i(0) = \\Phi \\alpha I_0$) and decays to negligible values deep within the slab, long before reaching the back surface at $z=L$. This highly non-uniform distribution, dictated by the Beer-Lambert law, leads to steep gradients in radical concentration, which is a defining feature of many photochemically driven processes such as photopolymerization.", "answer": "$$\\boxed{\\frac{\\Phi I_0}{L} \\left(1 - \\exp(-\\alpha L)\\right)}$$", "id": "2631199"}, {"introduction": "The complexity of most realistic chain reaction networks precludes exact analytical solutions, making numerical simulation an indispensable tool. However, these systems often exhibit \"stiffness\"—a vast separation in timescales between fast radical reactions and slow substrate consumption—which poses a significant challenge for standard numerical integrators. This computational exercise will guide you through diagnosing stiffness by analyzing the eigenvalues of the system's Jacobian matrix [@problem_id:2631134]. This hands-on practice bridges theoretical kinetics with computational science, providing a rational framework for selecting robust numerical methods essential for accurately simulating complex chemical dynamics.", "problem": "Consider a radical chain reaction mechanism with initiation, propagation, and termination. The species are initiator $I$, substrate $A$, two radical intermediates $R_1$ and $R_2$, and product $P$. The mechanism is:\n- Initiation: $I \\rightarrow 2R_1$ with rate coefficient $k_1$ in $\\mathrm{s}^{-1}$.\n- Propagation: $R_1 + A \\rightarrow R_2 + P$ with rate coefficient $k_2$ in $\\left(\\mathrm{mol}\\ \\mathrm{L}^{-1}\\right)^{-1}\\ \\mathrm{s}^{-1}$, and $R_2 + A \\rightarrow R_1 + P$ with rate coefficient $k_3$ in $\\left(\\mathrm{mol}\\ \\mathrm{L}^{-1}\\right)^{-1}\\ \\mathrm{s}^{-1}$.\n- Termination: $R_1 + R_1 \\rightarrow \\text{dead}$ with rate coefficient $k_4$ in $\\left(\\mathrm{mol}\\ \\mathrm{L}^{-1}\\right)^{-1}\\ \\mathrm{s}^{-1}$, $R_2 + R_2 \\rightarrow \\text{dead}$ with rate coefficient $k_5$ in $\\left(\\mathrm{mol}\\ \\mathrm{L}^{-1}\\right)^{-1}\\ \\mathrm{s}^{-1}$, and $R_1 + R_2 \\rightarrow \\text{dead}$ with rate coefficient $k_6$ in $\\left(\\mathrm{mol}\\ \\mathrm{L}^{-1}\\right)^{-1}\\ \\mathrm{s}^{-1}$.\n\nUsing the law of mass action, write the autonomous ordinary differential equation system $\\dot{\\mathbf{x}} = \\mathbf{f}(\\mathbf{x})$ for $\\mathbf{x} = \\left[I,\\ A,\\ R_1,\\ R_2,\\ P\\right]^\\top$, and from first principles of linearization, define the Jacobian matrix $J(\\mathbf{x}) = \\partial \\mathbf{f} / \\partial \\mathbf{x}$ evaluated at a given state $\\mathbf{x}$. For linear stability analysis of $\\dot{\\mathbf{y}} = J \\mathbf{y}$, the eigenvalues of $J$ (in $\\mathrm{s}^{-1}$) determine local decay or growth rates. A widely used quantitative indicator of stiffness is the stiffness ratio, defined here as\n$$\n\\mathrm{SR} = \n\\begin{cases}\n\\dfrac{\\max\\left\\{ -\\operatorname{Re}(\\lambda_i)\\ :\\ \\operatorname{Re}(\\lambda_i) < 0 \\right\\}}{\\min\\left\\{ -\\operatorname{Re}(\\lambda_i)\\ :\\ \\operatorname{Re}(\\lambda_i) < 0 \\right\\}},  \\text{if there are at least two eigenvalues with negative real parts}, \\\\[6pt]\n1.0,  \\text{otherwise},\n\\end{cases}\n$$\nwhere $\\lambda_i$ are the eigenvalues of $J(\\mathbf{x})$, and $\\operatorname{Re}(\\cdot)$ denotes the real part.\n\nBased on the spectral characterization and classical linear stability concepts for numerical integrators, recommend one of the following time integrator classes to advance the nonlinear system:\n- Code $0$: an explicit Runge–Kutta method of order $4$ is acceptable.\n- Code $1$: an explicit stabilized method from the Runge–Kutta–Chebyshev class is recommended.\n- Code $2$: an implicit A-stable method (for example, the trapezoidal rule) is recommended.\n- Code $3$: an implicit L-stable method (for example, backward Euler or a backward differentiation formula of order $2$) is required.\n\nYour recommendation must be mapped deterministically from the Jacobian spectrum as follows. Let $\\mathcal{N} = \\left\\{ -\\operatorname{Re}(\\lambda_i)\\ :\\ \\operatorname{Re}(\\lambda_i)  -\\varepsilon \\right\\}$ for a small numerical tolerance $\\varepsilon = 10^{-12}$, and let $\\mathcal{P} = \\left\\{ \\operatorname{Re}(\\lambda_i)\\ :\\ \\operatorname{Re}(\\lambda_i)  \\varepsilon \\right\\}$. Define $\\mathrm{SR}$ by the formula above with $\\mathcal{N}$, and use the rule:\n- If $\\lvert \\mathcal{N} \\rvert \\le 1$, output Code $0$ regardless of $\\mathcal{P}$.\n- If $\\lvert \\mathcal{N} \\rvert \\ge 2$ and $\\mathcal{P}$ is empty:\n  - If $\\mathrm{SR} \\le 20$, output Code $0$.\n  - If $20  \\mathrm{SR} \\le 200$, output Code $1$.\n  - If $200  \\mathrm{SR} \\le 5000$, output Code $2$.\n  - If $\\mathrm{SR}  5000$, output Code $3$.\n- If $\\lvert \\mathcal{N} \\rvert \\ge 2$ and $\\mathcal{P}$ is nonempty:\n  - If $\\mathrm{SR}  200$, output Code $3$.\n  - If $20  \\mathrm{SR} \\le 200$, output Code $2$.\n  - If $\\mathrm{SR} \\le 20$, output Code $1$.\n\nThis rule encodes the justification that explicit methods have limited stability regions on the negative real axis and that A-stable or L-stable methods are required as the spread of decaying modes increases or when growing and fast-decaying modes coexist.\n\nTest suite. For each parameter set, compute the Jacobian at the specified state, then compute the eigenvalues, the stiffness ratio $\\mathrm{SR}$ (unitless), and the recommended code (integer). Use the following four cases, each completely specified by the rate coefficients and the state vector:\n- Case $1$ (moderate stiffness): $\\left[k_1,k_2,k_3,k_4,k_5,k_6\\right] = \\left[1,\\ 100,\\ 80,\\ 10^6,\\ 10^6,\\ 5\\times 10^6\\right]$ with $\\left[I,A,R_1,R_2,P\\right] = \\left[10^{-6},\\ 1.0,\\ 10^{-7},\\ 2\\times 10^{-7},\\ 0\\right]$ in $\\mathrm{mol}\\ \\mathrm{L}^{-1}$ and $\\mathrm{s}^{-1}$ as applicable.\n- Case $2$ (extremely stiff due to termination): $\\left[k_1,k_2,k_3,k_4,k_5,k_6\\right] = \\left[0.5,\\ 150,\\ 120,\\ 10^9,\\ 10^9,\\ 2\\times 10^9\\right]$ with $\\left[I,A,R_1,R_2,P\\right] = \\left[10^{-6},\\ 1.0,\\ 5\\times 10^{-7},\\ 5\\times 10^{-7},\\ 0\\right]$ in $\\mathrm{mol}\\ \\mathrm{L}^{-1}$ and $\\mathrm{s}^{-1}$ as applicable.\n- Case $3$ (propagation-dominated with slow initiation): $\\left[k_1,k_2,k_3,k_4,k_5,k_6\\right] = \\left[10^{-3},\\ 5\\times 10^2,\\ 5\\times 10^2,\\ 10^3,\\ 10^3,\\ 10^3\\right]$ with $\\left[I,A,R_1,R_2,P\\right] = \\left[10^{-3},\\ 5.0,\\ 10^{-9},\\ 10^{-9},\\ 0\\right]$ in $\\mathrm{mol}\\ \\mathrm{L}^{-1}$ and $\\mathrm{s}^{-1}$ as applicable.\n- Case $4$ (boundary with zero radicals): $\\left[k_1,k_2,k_3,k_4,k_5,k_6\\right] = \\left[10,\\ 1,\\ 1,\\ 10^6,\\ 10^6,\\ 10^6\\right]$ with $\\left[I,A,R_1,R_2,P\\right] = \\left[1.0,\\ 1.0,\\ 0.0,\\ 0.0,\\ 0.0\\right]$ in $\\mathrm{mol}\\ \\mathrm{L}^{-1}$ and $\\mathrm{s}^{-1}$ as applicable.\n\nYour task:\n- Implement a program that, for each case, constructs the Jacobian $J(\\mathbf{x})$ from the mass-action model, computes all eigenvalues $\\lambda_i$ of $J(\\mathbf{x})$, computes $\\mathrm{SR}$ as defined above, and selects the recommended code according to the rule above.\n- Express $\\mathrm{SR}$ as a decimal rounded to six significant figures (unitless). The code is an integer.\n- Final output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each case’s result must be a two-element list $\\left[\\mathrm{SR},\\ \\text{code}\\right]$, and the overall output must be a single list of these four lists. For example, the printed line must look like $\\left[\\left[\\mathrm{SR}_1,\\ \\text{code}_1\\right],\\left[\\mathrm{SR}_2,\\ \\text{code}_2\\right],\\left[\\mathrm{SR}_3,\\ \\text{code}_3\\right],\\left[\\mathrm{SR}_4,\\ \\text{code}_4\\right]\\right]$ with numeric values substituted. Do not include units in the output. Angles are not involved. No percentages are involved.", "solution": "The problem as stated is scientifically sound, formally well-posed, and objective. It is based on fundamental principles of chemical kinetics (the law of mass action) and numerical analysis of ordinary differential equations (linear stability theory, stiffness). All necessary data and definitions for a unique solution are provided. Therefore, the problem is valid, and I shall proceed with its solution.\n\nThe core of the problem is to analyze the local stability of a system of autonomous ordinary differential equations (ODEs) that models a radical chain reaction. The state of the system is described by the concentration vector $\\mathbf{x} = \\left[[I], [A], [R_1], [R_2], [P]\\right]^\\top$, where $[S]$ denotes the concentration of species $S$. The time evolution of the system is given by $\\dot{\\mathbf{x}} = \\mathbf{f}(\\mathbf{x})$.\n\nFirst, we must derive the vector-valued function $\\mathbf{f}(\\mathbf{x})$ from the reaction mechanism using the law of mass action. The elementary reaction steps and their corresponding rates ($v_i$) are:\n\\begin{itemize}\n    \\item Initiation: $I \\xrightarrow{k_1} 2R_1$, with rate $v_1 = k_1 [I]$\n    \\item Propagation: $R_1 + A \\xrightarrow{k_2} R_2 + P$, with rate $v_2 = k_2 [R_1] [A]$\n    \\item Propagation: $R_2 + A \\xrightarrow{k_3} R_1 + P$, with rate $v_3 = k_3 [R_2] [A]$\n    \\item Termination: $R_1 + R_1 \\xrightarrow{k_4} \\text{dead}$, with rate $v_4 = k_4 [R_1]^2$\n    \\item Termination: $R_2 + R_2 \\xrightarrow{k_5} \\text{dead}$, with rate $v_5 = k_5 [R_2]^2$\n    \\item Termination: $R_1 + R_2 \\xrightarrow{k_6} \\text{dead}$, with rate $v_6 = k_6 [R_1] [R_2]$\n\\end{itemize}\n\nThe components of $\\mathbf{f}(\\mathbf{x})$, which represent the net rate of change for each species, are as follows:\n$$\n\\dot{x}_1 = \\frac{d[I]}{dt} = -v_1 = -k_1 [I]\n$$\n$$\n\\dot{x}_2 = \\frac{d[A]}{dt} = -v_2 - v_3 = -k_2 [R_1] [A] - k_3 [R_2] [A]\n$$\n$$\n\\dot{x}_3 = \\frac{d[R_1]}{dt} = 2v_1 - v_2 + v_3 - 2v_4 - v_6 = 2k_1 [I] - k_2 [R_1] [A] + k_3 [R_2] [A] - 2k_4 [R_1]^2 - k_6 [R_1] [R_2]\n$$\n$$\n\\dot{x}_4 = \\frac{d[R_2]}{dt} = v_2 - v_3 - 2v_5 - v_6 = k_2 [R_1] [A] - k_3 [R_2] [A] - 2k_5 [R_2]^2 - k_6 [R_1] [R_2]\n$$\n$$\n\\dot{x}_5 = \\frac{d[P]}{dt} = v_2 + v_3 = k_2 [R_1] [A] + k_3 [R_2] [A]\n$$\n\nNext, we derive the Jacobian matrix $J(\\mathbf{x})$, where its elements are defined as $J_{ij} = \\frac{\\partial f_i}{\\partial x_j}$ for $i, j \\in \\{1, 2, 3, 4, 5\\}$. The state vector components are $x_1=[I], x_2=[A], x_3=[R_1], x_4=[R_2], x_5=[P]$.\n\nThe non-zero elements of the Jacobian matrix are:\n$J_{11} = \\frac{\\partial f_1}{\\partial [I]} = -k_1$\n\n$J_{22} = \\frac{\\partial f_2}{\\partial [A]} = -k_2 [R_1] - k_3 [R_2]$\n$J_{23} = \\frac{\\partial f_2}{\\partial [R_1]} = -k_2 [A]$\n$J_{24} = \\frac{\\partial f_2}{\\partial [R_2]} = -k_3 [A]$\n\n$J_{31} = \\frac{\\partial f_3}{\\partial [I]} = 2k_1$\n$J_{32} = \\frac{\\partial f_3}{\\partial [A]} = -k_2 [R_1] + k_3 [R_2]$\n$J_{33} = \\frac{\\partial f_3}{\\partial [R_1]} = -k_2 [A] - 4k_4 [R_1] - k_6 [R_2]$\n$J_{34} = \\frac{\\partial f_3}{\\partial [R_2]} = k_3 [A] - k_6 [R_1]$\n\n$J_{42} = \\frac{\\partial f_4}{\\partial [A]} = k_2 [R_1] - k_3 [R_2]$\n$J_{43} = \\frac{\\partial f_4}{\\partial [R_1]} = k_2 [A] - k_6 [R_2]$\n$J_{44} = \\frac{\\partial f_4}{\\partial [R_2]} = -k_3 [A] - 4k_5 [R_2] - k_6 [R_1]$\n\n$J_{52} = \\frac{\\partial f_5}{\\partial [A]} = k_2 [R_1] + k_3 [R_2]$\n$J_{53} = \\frac{\\partial f_5}{\\partial [R_1]} = k_2 [A]$\n$J_{54} = \\frac{\\partial f_5}{\\partial [R_2]} = k_3 [A]$\n\nAll other elements of the Jacobian are zero. The complete Jacobian matrix is:\n$$\nJ(\\mathbf{x}) = \\begin{pmatrix}\n-k_1  0  0  0  0 \\\\\n0  -k_2 [R_1] - k_3 [R_2]  -k_2 [A]  -k_3 [A]  0 \\\\\n2k_1  -k_2 [R_1] + k_3 [R_2]  -k_2 [A] - 4k_4 [R_1] - k_6 [R_2]  k_3 [A] - k_6 [R_1]  0 \\\\\n0  k_2 [R_1] - k_3 [R_2]  k_2 [A] - k_6 [R_2]  -k_3 [A] - 4k_5 [R_2] - k_6 [R_1]  0 \\\\\n0  k_2 [R_1] + k_3 [R_2]  k_2 [A]  k_3 [A]  0\n\\end{pmatrix}\n$$\n\nThe provided task requires implementing a program to perform the following steps for each given test case:\n1.  Construct the numerical Jacobian matrix $J(\\mathbf{x})$ using the given rate coefficients $k_i$ and the state vector $\\mathbf{x}$.\n2.  Compute the eigenvalues $\\lambda_i$ of the matrix $J(\\mathbf{x})$.\n3.  Identify the sets of eigenvalues with negative and positive real parts, beyond a tolerance $\\varepsilon = 10^{-12}$:\n    $\\mathcal{N} = \\{ -\\operatorname{Re}(\\lambda_i) : \\operatorname{Re}(\\lambda_i)  -\\varepsilon \\}$\n    $\\mathcal{P} = \\{ \\operatorname{Re}(\\lambda_i) : \\operatorname{Re}(\\lambda_i)  \\varepsilon \\}$\n4.  Calculate the stiffness ratio $\\mathrm{SR}$ according to the definition, using the set $\\mathcal{N}$:\n    $$\n    \\mathrm{SR} = \\begin{cases} \\frac{\\max(\\mathcal{N})}{\\min(\\mathcal{N})}  \\text{if } |\\mathcal{N}| \\ge 2 \\\\ 1.0  \\text{if } |\\mathcal{N}|  2 \\end{cases}\n    $$\n5.  Determine the recommended integrator code ($0, 1, 2,$ or $3$) by applying the specified decision-making rules based on $|\\mathcal{N}|$, the emptiness of $\\mathcal{P}$, and the value of $\\mathrm{SR}$.\n6.  Format the calculated $\\mathrm{SR}$ as a decimal number rounded to six significant figures.\n\nThe following program implements this procedure.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases by calculating the stiffness ratio (SR)\n    and recommending a numerical integrator.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (moderate stiffness)\n        {'k': [1, 100, 80, 1e6, 1e6, 5e6], 'x': [1e-6, 1.0, 1e-7, 2e-7, 0]},\n        # Case 2 (extremely stiff due to termination)\n        {'k': [0.5, 150, 120, 1e9, 1e9, 2e9], 'x': [1e-6, 1.0, 5e-7, 5e-7, 0]},\n        # Case 3 (propagation-dominated with slow initiation)\n        {'k': [1e-3, 500, 500, 1e3, 1e3, 1e3], 'x': [1e-3, 5.0, 1e-9, 1e-9, 0]},\n        # Case 4 (boundary with zero radicals)\n        {'k': [10, 1, 1, 1e6, 1e6, 1e6], 'x': [1.0, 1.0, 0.0, 0.0, 0.0]}\n    ]\n\n    results = []\n    for case in test_cases:\n        # Main logic to calculate the result for one case goes here.\n        result = _calculate_recommendation(case['k'], case['x'])\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    # The format is a list of lists, with no spaces.\n    print(str(results).replace(\" \", \"\"))\n\ndef _calculate_recommendation(k_params, x_state):\n    \"\"\"\n    Calculates SR and integrator code for a single case.\n    \"\"\"\n    k1, k2, k3, k4, k5, k6 = k_params\n    I_c, A_c, R1_c, R2_c, P_c = x_state\n\n    # Construct the 5x5 Jacobian matrix\n    J = np.zeros((5, 5), dtype=np.float64)\n\n    # Row 1: df1/dxj (f1 = dI/dt)\n    J[0, 0] = -k1\n\n    # Row 2: df2/dxj (f2 = dA/dt)\n    J[1, 1] = -k2 * R1_c - k3 * R2_c\n    J[1, 2] = -k2 * A_c\n    J[1, 3] = -k3 * A_c\n\n    # Row 3: df3/dxj (f3 = dR1/dt)\n    J[2, 0] = 2 * k1\n    J[2, 1] = -k2 * R1_c + k3 * R2_c\n    J[2, 2] = -k2 * A_c - 4 * k4 * R1_c - k6 * R2_c\n    J[2, 3] = k3 * A_c - k6 * R1_c\n\n    # Row 4: df4/dxj (f4 = dR2/dt)\n    J[3, 1] = k2 * R1_c - k3 * R2_c\n    J[3, 2] = k2 * A_c - k6 * R2_c\n    J[3, 3] = -k3 * A_c - 4 * k5 * R2_c - k6 * R1_c\n\n    # Row 5: df5/dxj (f5 = dP/dt)\n    J[4, 1] = k2 * R1_c + k3 * R2_c\n    J[4, 2] = k2 * A_c\n    J[4, 3] = k3 * A_c\n\n    # Compute eigenvalues\n    eigenvalues = np.linalg.eigvals(J)\n    real_parts = np.real(eigenvalues)\n\n    # Apply rules\n    epsilon = 1e-12\n    \n    # Construct set N from eigenvalues with negative real parts\n    neg_real_mags = sorted([-re for re in real_parts if re  -epsilon])\n    \n    # Construct set P from eigenvalues with positive real parts\n    pos_real_parts = [re for re in real_parts if re > epsilon]\n    \n    num_neg = len(neg_real_mags)\n    \n    # Calculate Stiffness Ratio (SR)\n    if num_neg  2:\n        sr = 1.0\n    else:\n        # To avoid division by zero if min is pathologically small but non-zero\n        if neg_real_mags[0] > 1e-100:\n             sr = neg_real_mags[-1] / neg_real_mags[0]\n        else:\n             sr = float('inf')\n\n    # Determine recommendation code\n    code = -1 # Default invalid code\n    if num_neg = 1:\n        code = 0\n    else:  # num_neg >= 2\n        p_is_nonempty = len(pos_real_parts) > 0\n        if not p_is_nonempty:\n            if sr = 20:\n                code = 0\n            elif 20  sr = 200:\n                code = 1\n            elif 200  sr = 5000:\n                code = 2\n            else:  # sr > 5000\n                code = 3\n        else:  # p_is_nonempty\n            if sr > 200:\n                code = 3\n            elif 20  sr = 200:\n                code = 2\n            else:  # sr = 20\n                code = 1\n    \n    # Format SR to 6 significant figures\n    formatted_sr = float(f\"{sr:.6g}\")\n\n    return [formatted_sr, code]\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2631134"}]}