{"hands_on_practices": [{"introduction": "This practice builds your understanding from the ground up, starting with the visual and intuitive model of two intersecting parabolic free-energy surfaces. You will derive the seminal Marcus equation for the activation free energy, $\\Delta G^{\\ddagger}$, which forms the cornerstone of classical electron transfer theory. This exercise solidifies the connection between the geometric properties of the potential energy surfaces and the kinetic barrier to reaction [@problem_id:2654278].", "problem": "Consider a nonadiabatic outer-sphere electron transfer between a donor and an acceptor in a polar solvent. Within the harmonic linear-response approximation, model the solvent reorganization along a single collective coordinate $Q$ by two parabolic standard free-energy surfaces with identical curvature parameter $\\kappa$ and distinct minima at $Q_D$ (donor) and $Q_A$ (acceptor). Choose the zero of free energy such that the donor minimum has free energy $0$, and let the acceptor minimum be offset by the standard free energy change (driving force) $\\Delta G^{\\circ}$, so that the parabolas are\n$$\nG_D(Q) = \\frac{\\kappa}{2} \\left(Q - Q_D\\right)^{2}, \n\\qquad\nG_A(Q) = \\frac{\\kappa}{2} \\left(Q - Q_A\\right)^{2} + \\Delta G^{\\circ}.\n$$\nDefine the (outer-sphere) reorganization energy by the standard thermodynamic definition\n$$\n\\lambda \\equiv G_D(Q_A) - G_D(Q_D),\n$$\nthat is, the free energy required to distort the medium from $Q_D$ to $Q_A$ on the donor surface without changing the electronic state. Assume classical transition-state theory along $Q$, so that the activation free energy $\\Delta G^{\\ddagger}$ for forward electron transfer is the free-energy difference between the common intersection point of $G_D(Q)$ and $G_A(Q)$ and the donor minimum.\n\nStarting only from these definitions and the stated model, derive an analytical expression for $\\Delta G^{\\ddagger}$ in terms of $\\lambda$ and $\\Delta G^{\\circ}$, and then evaluate it numerically for $\\lambda = 75~\\text{kJ}\\,\\text{mol}^{-1}$ and $\\Delta G^{\\circ} = -25~\\text{kJ}\\,\\text{mol}^{-1}$. Express the final energy in kJ mol$^{-1}$ and round your answer to four significant figures.", "solution": "The problem asks for the derivation of the classical Marcus expression for the activation free energy, $\\Delta G^{\\ddagger}$, of an electron transfer reaction and its numerical evaluation given specific parameters. The derivation must proceed from the first principles laid out in the problem statement.\n\nThe system is described by two parabolic free-energy surfaces, one for the donor state ($D$) and one for the acceptor state ($A$), as functions of a collective solvent coordinate $Q$.\nThe donor surface is given by:\n$$G_D(Q) = \\frac{\\kappa}{2} (Q - Q_D)^{2}$$\nThe acceptor surface is given by:\n$$G_A(Q) = \\frac{\\kappa}{2} (Q - Q_A)^{2} + \\Delta G^{\\circ}$$\nBy construction, the minimum of the donor parabola is at $Q_D$, where $G_D(Q_D) = 0$. The minimum of the acceptor parabola is at $Q_A$, where $G_A(Q_A) = \\Delta G^{\\circ}$, which is the standard free energy change of the reaction.\n\nThe reorganization energy, $\\lambda$, is defined as the energy required to move the system from the donor equilibrium geometry to the acceptor equilibrium geometry while remaining on the donor electronic surface. Mathematically:\n$$\\lambda \\equiv G_D(Q_A) - G_D(Q_D)$$\nSubstituting the given expressions, we have $G_D(Q_D) = 0$ and $G_D(Q_A) = \\frac{\\kappa}{2}(Q_A - Q_D)^{2}$. Thus, the reorganization energy is:\n$$\\lambda = \\frac{\\kappa}{2}(Q_A - Q_D)^{2}$$\nThis equation establishes a direct relationship between $\\lambda$ and the model parameters $\\kappa$ and the displacement of the minima, $(Q_A - Q_D)$.\n\nThe activation free energy, $\\Delta G^{\\ddagger}$, is the free energy of the system at the intersection of the two parabolas, relative to the donor's minimum. Let the coordinate of this intersection point, which corresponds to the transition state, be $Q^{\\ddagger}$. Then:\n$$\\Delta G^{\\ddagger} = G_D(Q^{\\ddagger}) - G_D(Q_D) = G_D(Q^{\\ddagger})$$\nTo find $Q^{\\ddagger}$, we must solve for the intersection of the two parabolas by setting $G_D(Q) = G_A(Q)$:\n$$G_D(Q^{\\ddagger}) = G_A(Q^{\\ddagger})$$\n$$\\frac{\\kappa}{2} (Q^{\\ddagger} - Q_D)^{2} = \\frac{\\kappa}{2} (Q^{\\ddagger} - Q_A)^{2} + \\Delta G^{\\circ}$$\nTo simplify the algebra, we introduce a dimensionless reaction coordinate, $q$, defined as:\n$$q = \\frac{Q - Q_D}{Q_A - Q_D}$$\nThis transformation maps the donor minimum $Q_D$ to $q=0$ and the acceptor minimum $Q_A$ to $q=1$. The inverse transformation is $Q = Q_D + q(Q_A - Q_D)$.\n\nNow, we rewrite the free energy functions in terms of this dimensionless coordinate $q$.\nFor the donor surface:\n$$G_D(q) = \\frac{\\kappa}{2} \\left[ (Q_D + q(Q_A - Q_D)) - Q_D \\right]^{2} = \\frac{\\kappa}{2} \\left[ q(Q_A - Q_D) \\right]^{2} = q^{2} \\left[ \\frac{\\kappa}{2}(Q_A - Q_D)^{2} \\right]$$\nUsing our expression for $\\lambda$, this simplifies to:\n$$G_D(q) = \\lambda q^{2}$$\nFor the acceptor surface:\n$$G_A(q) = \\frac{\\kappa}{2} \\left[ (Q_D + q(Q_A - Q_D)) - Q_A \\right]^{2} + \\Delta G^{\\circ} = \\frac{\\kappa}{2} \\left[ (q-1)(Q_A - Q_D) \\right]^{2} + \\Delta G^{\\circ}$$\n$$G_A(q) = (q-1)^{2} \\left[ \\frac{\\kappa}{2}(Q_A - Q_D)^{2} \\right] + \\Delta G^{\\circ}$$\nThis simplifies to:\n$$G_A(q) = \\lambda (q-1)^{2} + \\Delta G^{\\circ}$$\nNow, we find the intersection coordinate $q^{\\ddagger}$ by equating $G_D(q^{\\ddagger})$ and $G_A(q^{\\ddagger})$:\n$$\\lambda (q^{\\ddagger})^{2} = \\lambda (q^{\\ddagger}-1)^{2} + \\Delta G^{\\circ}$$\n$$\\lambda (q^{\\ddagger})^{2} = \\lambda \\left((q^{\\ddagger})^{2} - 2q^{\\ddagger} + 1\\right) + \\Delta G^{\\circ}$$\n$$\\lambda (q^{\\ddagger})^{2} = \\lambda (q^{\\ddagger})^{2} - 2\\lambda q^{\\ddagger} + \\lambda + \\Delta G^{\\circ}$$\nThe $\\lambda (q^{\\ddagger})^{2}$ terms cancel. Rearranging to solve for $q^{\\ddagger}$:\n$$2\\lambda q^{\\ddagger} = \\lambda + \\Delta G^{\\circ}$$\n$$q^{\\ddagger} = \\frac{\\lambda + \\Delta G^{\\circ}}{2\\lambda}$$\nThe activation free energy $\\Delta G^{\\ddagger}$ is the value of the donor surface energy at this intersection coordinate $q^{\\ddagger}$:\n$$\\Delta G^{\\ddagger} = G_D(q^{\\ddagger}) = \\lambda (q^{\\ddagger})^{2}$$\nSubstituting the expression for $q^{\\ddagger}$:\n$$\\Delta G^{\\ddagger} = \\lambda \\left( \\frac{\\lambda + \\Delta G^{\\circ}}{2\\lambda} \\right)^{2} = \\lambda \\frac{(\\lambda + \\Delta G^{\\circ})^{2}}{4\\lambda^{2}}$$\nThis simplifies to the final analytical expression, the well-known Marcus equation:\n$$\\Delta G^{\\ddagger} = \\frac{(\\lambda + \\Delta G^{\\circ})^{2}}{4\\lambda}$$\nThis is the required analytical expression for the activation free energy in terms of the reorganization energy $\\lambda$ and the standard free energy change $\\Delta G^{\\circ}$.\n\nNow, we must evaluate this expression numerically with the given values:\n$\\lambda = 75~\\text{kJ}\\,\\text{mol}^{-1}$\n$\\Delta G^{\\circ} = -25~\\text{kJ}\\,\\text{mol}^{-1}$\n\nPlugging these values into the derived formula:\n$$\\Delta G^{\\ddagger} = \\frac{(75 + (-25))^{2}}{4 \\times 75} = \\frac{(50)^{2}}{300} = \\frac{2500}{300} = \\frac{25}{3}~\\text{kJ}\\,\\text{mol}^{-1}$$\nThe problem requires the answer to be rounded to four significant figures.\n$$\\Delta G^{\\ddagger} = \\frac{25}{3} \\approx 8.3333...~\\text{kJ}\\,\\text{mol}^{-1}$$\nRounding to four significant figures gives $8.333~\\text{kJ}\\,\\text{mol}^{-1}$.", "answer": "$$\\boxed{8.333}$$", "id": "2654278"}, {"introduction": "While the concepts of reorganization energy ($\\lambda$) and driving force ($\\Delta G^{\\circ}$) are central to Marcus theory, determining their values for a specific chemical system is a critical challenge. This exercise demonstrates a powerful modern approach, showing how these key thermodynamic parameters can be extracted directly from the statistical fluctuations of the energy gap observed in a molecular dynamics simulation. Mastering this connection between microscopic fluctuations and macroscopic thermodynamic quantities is an essential skill in computational chemistry [@problem_id:2654293].", "problem": "A Molecular Dynamics (MD) simulation of a donor–acceptor electron transfer system at temperature $T = 298$ K yields the distribution of the instantaneous vertical energy gap $\\Delta \\equiv U_B - U_A$ sampled in the canonical ensemble of state $A$ (reactant) and of state $B$ (product). The histograms are well described by Gaussian probability density functions (PDFs) with identical standard deviation, consistent with harmonic solvent response (linear response). The extracted statistics are:\n- Mean in state $A$: $\\langle \\Delta \\rangle_A = 0.97893$ eV.\n- Mean in state $B$: $\\langle \\Delta \\rangle_B = -0.57893$ eV.\n- Standard deviation in both states: $s = 0.20000$ eV.\n\nAssume:\n- Canonical ensemble with $P_i(\\Delta) \\propto \\exp[-\\beta F_i(\\Delta)]$ for $i \\in \\{A,B\\}$, where $F_i(\\Delta)$ is the Landau free energy and $\\beta \\equiv 1/(k_B T)$.\n- Harmonic (linear response) solvent fluctuations about each electronic state, leading to Gaussian energy-gap statistics with equal variance in the two states and parabolic free-energy profiles of equal curvature along $\\Delta$.\n- The Boltzmann constant $k_B = 8.617333262 \\times 10^{-5}$ eV/K.\n\nTasks:\n1) Starting from the Boltzmann relation and the harmonic assumption, justify that $F_i(\\Delta)$ is quadratic in $\\Delta$ and that the Gaussian variance $s^2$ is related to the curvature. Using the free energy perturbation identity for the standard free energy difference $\\Delta G^{\\circ}$ between $A$ and $B$, express the reorganization energy $\\lambda$ and $\\Delta G^{\\circ}$ in terms of the measured means and variance of $\\Delta$.\n2) Using these relations, derive an analytical expression for the activation free-energy barrier $\\Delta G^{\\ddagger}$ for electron transfer in terms of $\\lambda$ and $\\Delta G^{\\circ}$ for the equal-curvature parabolic surfaces.\n3) Evaluate $\\Delta G^{\\ddagger}$ numerically using the provided data. Express the final activation free energy in electronvolts (eV) and round your answer to four significant figures.", "solution": "**Task 1: Derivation of Free-Energy Profiles and Expressions for $\\lambda$ and $\\Delta G^{\\circ}$**\n\nThe problem postulates a relationship between the probability density of the energy gap, $P_i(\\Delta)$, and the Landau free energy of creating that fluctuation, $F_i(\\Delta)$, given by $P_i(\\Delta) \\propto \\exp[-\\beta F_i(\\Delta)]$. It is also given that $P_i(\\Delta)$ is a Gaussian function. For state $A$, the PDF is centered at its mean $\\langle \\Delta \\rangle_A$ with standard deviation $s$:\n$$P_A(\\Delta) = \\mathcal{N} \\exp\\left[-\\frac{(\\Delta - \\langle \\Delta \\rangle_A)^2}{2s^2}\\right]$$\nwhere $\\mathcal{N}$ is a normalization constant.\n\nBy comparing the exponents of the two expressions for $P_A(\\Delta)$, we find:\n$$-\\beta F_A(\\Delta) = -\\frac{(\\Delta - \\langle \\Delta \\rangle_A)^2}{2s^2} + C$$\nwhere $C$ is a constant. Rearranging for $F_A(\\Delta)$ gives:\n$$F_A(\\Delta) = \\frac{1}{2\\beta s^2}(\\Delta - \\langle \\Delta \\rangle_A)^2 + C'$$\nThis equation demonstrates that the free energy profile $F_A(\\Delta)$ is a quadratic (parabolic) function of the energy gap $\\Delta$. The curvature of this parabola is given by the second derivative with respect to $\\Delta$, which is constant:\n$$\\frac{d^2 F_A}{d\\Delta^2} = \\frac{1}{\\beta s^2}$$\nSince $s$ is the same for both states, the curvatures of the free energy profiles $F_A(\\Delta)$ and $F_B(\\Delta)$ are identical, consistent with the problem's assumptions.\n\nTo find expressions for the reorganization energy $\\lambda$ and the standard free energy of reaction $\\Delta G^{\\circ}$, we utilize the results of linear response theory. In this framework, the free energy surfaces of the reactant ($A$) and product ($B$) states are represented as parabolas as a function of a collective solvent coordinate, $q$. Let the minima of these parabolas be at $q=0$ for state $A$ and $q=q_0$ for state $B$.\n$$G_A(q) = \\frac{1}{2} k q^2$$\n$$G_B(q) = \\frac{1}{2} k (q-q_0)^2 + \\Delta G^{\\circ}$$\nThe reorganization energy $\\lambda$ is the energy required to distort the reactant system to the equilibrium geometry of the product: $\\lambda = G_A(q_0) = \\frac{1}{2} k q_0^2$.\nThe vertical energy gap $\\Delta$ is a function of the coordinate $q$: $\\Delta(q) = G_B(q) - G_A(q)$.\n$$\\Delta(q) = \\left(\\frac{1}{2} k (q-q_0)^2 + \\Delta G^{\\circ}\\right) - \\left(\\frac{1}{2} k q^2\\right) = -k q_0 q + \\frac{1}{2} k q_0^2 + \\Delta G^{\\circ} = -k q_0 q + \\lambda + \\Delta G^{\\circ}$$\nThe average energy gap in state $A$ is sampled around its equilibrium $q=0$. Thus:\n$$\\langle \\Delta \\rangle_A = \\Delta(q=0) = \\lambda + \\Delta G^{\\circ}$$\nThe average energy gap in state $B$ is sampled around its equilibrium $q=q_0$. Thus:\n$$\\langle \\Delta \\rangle_B = \\Delta(q=q_0) = -k q_0^2 + \\lambda + \\Delta G^{\\circ} = -2\\lambda + \\lambda + \\Delta G^{\\circ} = -\\lambda + \\Delta G^{\\circ}$$\nWe now have a system of two linear equations for $\\lambda$ and $\\Delta G^{\\circ}$:\n1) $\\langle \\Delta \\rangle_A = \\lambda + \\Delta G^{\\circ}$\n2) $\\langle \\Delta \\rangle_B = -\\lambda + \\Delta G^{\\circ}$\n\nSubtracting equation (2) from (1) yields:\n$$\\langle \\Delta \\rangle_A - \\langle \\Delta \\rangle_B = (\\lambda + \\Delta G^{\\circ}) - (-\\lambda + \\Delta G^{\\circ}) = 2\\lambda$$\n$$\\lambda = \\frac{1}{2} (\\langle \\Delta \\rangle_A - \\langle \\Delta \\rangle_B)$$\nAdding equations (1) and (2) yields:\n$$\\langle \\Delta \\rangle_A + \\langle \\Delta \\rangle_B = (\\lambda + \\Delta G^{\\circ}) + (-\\lambda + \\Delta G^{\\circ}) = 2\\Delta G^{\\circ}$$\n$$\\Delta G^{\\circ} = \\frac{1}{2} (\\langle \\Delta \\rangle_A + \\langle \\Delta \\rangle_B)$$\nThese are the required expressions. The free energy perturbation identity $\\exp(-\\beta \\Delta G^{\\circ}) = \\langle \\exp(-\\beta \\Delta) \\rangle_A$, when applied to a Gaussian distribution, yields $\\Delta G^{\\circ} = \\langle \\Delta \\rangle_A - \\frac{1}{2}\\beta s^2$. Comparing this with $\\langle \\Delta \\rangle_A = \\lambda + \\Delta G^{\\circ}$, we obtain the fluctuation-dissipation relation $\\lambda = \\frac{1}{2}\\beta s^2$, which confirms the consistency of the model.\n\n**Task 2: Derivation of the Activation Free Energy $\\Delta G^{\\ddagger}$**\n\nThe activation free energy, $\\Delta G^{\\ddagger}$, is the height of the energy barrier from the reactant minimum to the transition state. The transition state, denoted by the coordinate $q^{\\ddagger}$, is the point where the reactant and product free energy surfaces intersect: $G_A(q^{\\ddagger}) = G_B(q^{\\ddagger})$.\n$$\\frac{1}{2} k (q^{\\ddagger})^2 = \\frac{1}{2} k (q^{\\ddagger}-q_0)^2 + \\Delta G^{\\circ}$$\nExpanding the squared term and simplifying:\n$$(q^{\\ddagger})^2 = (q^{\\ddagger})^2 - 2q^{\\ddagger}q_0 + q_0^2 + \\frac{2\\Delta G^{\\circ}}{k}$$\n$$2q^{\\ddagger}q_0 = q_0^2 + \\frac{2\\Delta G^{\\circ}}{k}$$\n$$q^{\\ddagger} = \\frac{q_0}{2} + \\frac{\\Delta G^{\\circ}}{kq_0}$$\nThe activation energy is $\\Delta G^{\\ddagger} = G_A(q^{\\ddagger}) = \\frac{1}{2} k (q^{\\ddagger})^2$.\n$$\\Delta G^{\\ddagger} = \\frac{1}{2} k \\left( \\frac{q_0}{2} + \\frac{\\Delta G^{\\circ}}{kq_0} \\right)^2 = \\frac{1}{2} k \\left( \\frac{q_0^2}{4} + \\frac{\\Delta G^{\\circ}}{k} + \\frac{(\\Delta G^{\\circ})^2}{k^2 q_0^2} \\right)$$\n$$\\Delta G^{\\ddagger} = \\frac{k q_0^2}{8} + \\frac{\\Delta G^{\\circ}}{2} + \\frac{(\\Delta G^{\\circ})^2}{2 k q_0^2}$$\nWe substitute the expression for the reorganization energy, $\\lambda = \\frac{1}{2} k q_0^2$, which implies $k q_0^2 = 2\\lambda$:\n$$\\Delta G^{\\ddagger} = \\frac{2\\lambda}{8} + \\frac{\\Delta G^{\\circ}}{2} + \\frac{(\\Delta G^{\\circ})^2}{2(2\\lambda)} = \\frac{\\lambda}{4} + \\frac{\\Delta G^{\\circ}}{2} + \\frac{(\\Delta G^{\\circ})^2}{4\\lambda}$$\nThis expression can be factored into a more compact form:\n$$\\Delta G^{\\ddagger} = \\frac{1}{4\\lambda} \\left( \\lambda^2 + 2\\lambda\\Delta G^{\\circ} + (\\Delta G^{\\circ})^2 \\right)$$\nThus, the final analytical expression for the activation free energy is:\n$$\\Delta G^{\\ddagger} = \\frac{(\\lambda + \\Delta G^{\\circ})^2}{4\\lambda}$$\n\n**Task 3: Numerical Evaluation of $\\Delta G^{\\ddagger}$**\n\nFirst, we calculate the numerical values of $\\lambda$ and $\\Delta G^{\\circ}$ using the expressions from Task 1 and the provided data:\n$\\langle \\Delta \\rangle_A = 0.97893$ eV\n$\\langle \\Delta \\rangle_B = -0.57893$ eV\n\n$$\\lambda = \\frac{1}{2} (0.97893 \\, \\text{eV} - (-0.57893 \\, \\text{eV})) = \\frac{1}{2} (1.55786 \\, \\text{eV}) = 0.77893 \\, \\text{eV}$$\n$$\\Delta G^{\\circ} = \\frac{1}{2} (0.97893 \\, \\text{eV} + (-0.57893 \\, \\text{eV})) = \\frac{1}{2} (0.40000 \\, \\text{eV}) = 0.20000 \\, \\text{eV}$$\n\nNext, we substitute these values into the expression for $\\Delta G^{\\ddagger}$ derived in Task 2:\n$$\\Delta G^{\\ddagger} = \\frac{(\\lambda + \\Delta G^{\\circ})^2}{4\\lambda} = \\frac{(0.77893 \\, \\text{eV} + 0.20000 \\, \\text{eV})^2}{4 \\times 0.77893 \\, \\text{eV}}$$\n$$\\Delta G^{\\ddagger} = \\frac{(0.97893 \\, \\text{eV})^2}{3.11572 \\, \\text{eV}} = \\frac{0.9583039... \\, \\text{eV}^2}{3.11572 \\, \\text{eV}} = 0.307563... \\, \\text{eV}$$\n\nThe problem requires rounding the final answer to four significant figures.\n$$\\Delta G^{\\ddagger} \\approx 0.3076 \\, \\text{eV}$$", "answer": "$$\n\\boxed{0.3076}\n$$", "id": "2654293"}, {"introduction": "The predictive power of a theory is its ultimate test, and for Marcus theory, no prediction is more famous than the \"inverted region,\" where reaction rates counter-intuitively decrease as the reaction becomes more thermodynamically favorable. This exercise guides you through deriving the full expression for the electron transfer rate constant and then implementing it computationally to observe this remarkable phenomenon. You will explore how the interplay between driving force and reorganization energy governs the reaction kinetics across the normal, activationless, and inverted regimes [@problem_id:2654221].", "problem": "You are to design and implement a program that predicts and diagnoses the presence of the inverted region in nonadiabatic electron transfer as described by Marcus theory, starting from foundational physical principles. Consider a donor–acceptor electron transfer described by parabolic free-energy surfaces in a classical solvent, within the weak electronic coupling limit. Begin from the following foundational bases only: (i) Fermi’s Golden Rule for nonadiabatic transitions, (ii) classical harmonic solvent modes that yield parabolic free-energy surfaces, and (iii) the definition of the reorganization energy $\\lambda$ as the energy to reorganize the environment from reactant to product geometry without charge transfer. Using these, derive the temperature-dependent rate expression for the electron transfer reaction as a function of the driving force $\\Delta G^\\circ$, the reorganization energy $\\lambda$, the magnitude of the electronic coupling $\\lvert H \\rvert$, and the absolute temperature $T$. You must work in the classical, high-temperature limit of the nuclear modes and assume linear coupling to a harmonic bath. Do not assume any specific target formula beyond these bases; the derivation must proceed logically from these principles.\n\nThe program must implement the derived expression to compute, for each test case below, the following outputs based on a list of driving forces $\\{\\Delta G^\\circ_j\\}$:\n1. The index (zero-based) $i_\\mathrm{max}$ at which the rate is maximized over the provided list of $\\Delta G^\\circ$ values.\n2. A boolean $b_\\mathrm{inv}$ indicating whether the rate at the most exergonic end of the provided list, $k(\\Delta G^\\circ_\\mathrm{last})$, is strictly less than the maximal rate across the list, i.e., $b_\\mathrm{inv} = \\big(k(\\Delta G^\\circ_\\mathrm{last})  \\max_j k(\\Delta G^\\circ_j)\\big)$. This boolean operationally diagnoses the inverted region at the most exergonic end of the supplied set.\n3. The dimensionless ratio $r = k(\\Delta G^\\circ_\\mathrm{last})/k(\\Delta G^\\circ_\\mathrm{first})$.\n\nAll energies must be treated in electronvolts ($\\mathrm{eV}$), the temperature in Kelvin ($\\mathrm{K}$), and time in seconds ($\\mathrm{s}$). Although the electron transfer rate $k$ has units of $\\mathrm{s}^{-1}$, you are not asked to output rates in this problem. You must compute rates internally in consistent units, but the requested outputs are an integer, a boolean, and a dimensionless float, so no unit-bearing numerical outputs are required. Use Boltzmann’s constant $k_\\mathrm{B}$ in $\\mathrm{eV}/\\mathrm{K}$ and the reduced Planck constant $\\hbar$ in $\\mathrm{eV}\\cdot\\mathrm{s}$ to ensure unit consistency.\n\nTest suite. For each test case, you are given $(\\lambda,\\lvert H\\rvert, T,\\{\\Delta G^\\circ\\})$ with all energies in $\\mathrm{eV}$ and temperature in $\\mathrm{K}$:\n\n- Test 1 (general “happy path” spanning normal through inverted): $\\lambda = 0.6\\ \\mathrm{eV}$, $\\lvert H\\rvert = 0.005\\ \\mathrm{eV}$, $T = 300\\ \\mathrm{K}$, $\\{\\Delta G^\\circ\\} = [-0.10,-0.40,-0.60,-0.90,-1.20]\\ \\mathrm{eV}$.\n\n- Test 2 (boundary case: single-point list): $\\lambda = 0.6\\ \\mathrm{eV}$, $\\lvert H\\rvert = 0.005\\ \\mathrm{eV}$, $T = 300\\ \\mathrm{K}$, $\\{\\Delta G^\\circ\\} = [-0.60]\\ \\mathrm{eV}$.\n\n- Test 3 (stronger reorganization and deeper exergonic range): $\\lambda = 1.0\\ \\mathrm{eV}$, $\\lvert H\\rvert = 0.003\\ \\mathrm{eV}$, $T = 300\\ \\mathrm{K}$, $\\{\\Delta G^\\circ\\} = [-0.10,-0.60,-1.00,-1.50,-2.00]\\ \\mathrm{eV}$.\n\n- Test 4 (low temperature narrowing the Franck–Condon window): $\\lambda = 0.6\\ \\mathrm{eV}$, $\\lvert H\\rvert = 0.005\\ \\mathrm{eV}$, $T = 77\\ \\mathrm{K}$, $\\{\\Delta G^\\circ\\} = [-0.20,-0.50,-0.60,-0.80,-1.05]\\ \\mathrm{eV}$.\n\nYour program must compute for each test case the triplet $\\big(i_\\mathrm{max}, b_\\mathrm{inv}, r\\big)$ according to the above definitions. The final output format must be a single line containing a comma-separated flat list that concatenates the results of the four test cases in order, enclosed in square brackets. Concretely, if the results for Tests $1$ to $4$ are $\\big(i_1,b_1,r_1\\big)$, $\\big(i_2,b_2,r_2\\big)$, $\\big(i_3,b_3,r_3\\big)$, and $\\big(i_4,b_4,r_4\\big)$, then print:\n[ i1,b1,r1,i2,b2,r2,i3,b3,r3,i4,b4,r4 ]\nAll booleans must be printed as literal True or False, and all real numbers must be printed as decimal floats. Angles are not used in this problem, so no angle unit is required. Percentages are not used; any fractions should be printed as decimals.", "solution": "The problem requires the derivation of the classical Marcus theory rate expression for nonadiabatic electron transfer and its subsequent implementation to analyze specific reaction scenarios. The derivation must originate from the specified foundational principles: Fermi's Golden Rule, a classical harmonic solvent model, and the standard definition of reorganization energy.\n\nWe begin the derivation as instructed.\n\n**1. Foundational Principles**\n\nThe rate constant $k$ for a nonadiabatic transition between an initial reactant state $|R\\rangle$ and a final product state $|P\\rangle$, facilitated by a weak electronic coupling $H = \\langle R | \\hat{H} | P \\rangle$, is given by Fermi's Golden Rule:\n$$\nk = \\frac{2\\pi}{\\hbar} |H|^2 \\rho_{FC}\n$$\nHere, $\\hbar$ is the reduced Planck constant, and $\\rho_{FC}$ represents the Franck-Condon weighted density of states. This term encapsulates the contribution of the nuclear degrees of freedom (the solvent environment in this case) to the transition rate.\n\nThe solvent is modeled classically using a single generalized harmonic reaction coordinate, which we shall denote by $q$. The free energy surfaces of the reactant (R) and product (P) states are parabolic functions of this coordinate:\n$$\nG_R(q) = \\lambda q^2\n$$\n$$\nG_P(q) = \\lambda(q-1)^2 + \\Delta G^\\circ\n$$\nHere, $q=0$ corresponds to the equilibrium solvent configuration for the reactant electronic state, and $q=1$ corresponds to that for the product state. $\\Delta G^\\circ$ is the standard free energy of reaction, or driving force. The parameter $\\lambda$ is the reorganization energy, defined as the energy required to distort the reactant system from its equilibrium geometry ($q=0$) to the equilibrium geometry of the product ($q=1$) without the electron transfer occurring. This is consistent with our formulation, as $G_R(1) = \\lambda(1)^2 = \\lambda$.\n\n**2. Derivation of the Activation Free Energy**\n\nWithin the classical Marcus picture, the electron transfer occurs at the crossing point of the two free energy surfaces, where the system has the same energy in both electronic states. This crossing point, $q^\\ddagger$, is found by setting $G_R(q) = G_P(q)$:\n$$\n\\lambda (q^\\ddagger)^2 = \\lambda(q^\\ddagger-1)^2 + \\Delta G^\\circ\n$$\nExpanding the quadratic term and simplifying yields:\n$$\n\\lambda (q^\\ddagger)^2 = \\lambda((q^\\ddagger)^2 - 2q^\\ddagger + 1) + \\Delta G^\\circ\n$$\n$$\n0 = -2\\lambda q^\\ddagger + \\lambda + \\Delta G^\\circ\n$$\nSolving for $q^\\ddagger$:\n$$\nq^\\ddagger = \\frac{\\lambda + \\Delta G^\\circ}{2\\lambda}\n$$\nThe classical activation free energy, $\\Delta G^\\ddagger$, is the energy required to move the system along the reactant surface from its equilibrium configuration ($q=0$) to the transition state configuration ($q=q^\\ddagger$):\n$$\n\\Delta G^\\ddagger = G_R(q^\\ddagger) - G_R(0) = \\lambda (q^\\ddagger)^2 = \\lambda \\left( \\frac{\\lambda + \\Delta G^\\circ}{2\\lambda} \\right)^2\n$$\n$$\n\\Delta G^\\ddagger = \\frac{(\\lambda + \\Delta G^\\circ)^2}{4\\lambda}\n$$\nThis is the renowned Marcus expression for the activation energy barrier.\n\n**3. Derivation of the Franck-Condon Factor**\n\nIn the high-temperature (classical) limit, the Franck-Condon term $\\rho_{FC}$ is the thermally averaged probability of finding the system at a configuration that satisfies energy conservation for the transition. This is equivalent to finding the system at the crossing point. We can formally write $\\rho_{FC}$ using the Boltzmann probability distribution for the reactant, $P_R(q)$, and a delta function to enforce the crossing condition:\n$$\n\\rho_{FC} = \\int_{-\\infty}^{\\infty} P_R(q) \\, \\delta(G_R(q) - G_P(q)) \\, dq\n$$\nThe probability distribution $P_R(q)$ for a harmonic oscillator is a Gaussian:\n$$\nP_R(q) = \\frac{e^{-G_R(q) / (k_B T)}}{Z_R} = \\frac{e^{-\\lambda q^2 / (k_B T)}}{\\int_{-\\infty}^{\\infty} e^{-\\lambda q^2 / (k_B T)} dq}\n$$\nThe partition function in the denominator is $Z_R = \\sqrt{\\pi k_B T / \\lambda}$. The argument of the delta function is $g(q) = G_R(q) - G_P(q) = 2\\lambda q - \\lambda - \\Delta G^\\circ$. The root of $g(q)=0$ is $q^\\ddagger = (\\lambda + \\Delta G^\\circ)/(2\\lambda)$, and its derivative is $g'(q) = 2\\lambda$. Using the property of the delta function, $\\int f(x)\\delta(g(x))dx = f(x_0)/|g'(x_0)|$, the integral becomes:\n$$\n\\rho_{FC} = \\frac{P_R(q^\\ddagger)}{|g'(q^\\ddagger)|} = \\frac{1}{Z_R} \\frac{e^{-\\lambda(q^\\ddagger)^2 / (k_B T)}}{|2\\lambda|} = \\frac{1}{\\sqrt{\\pi k_B T / \\lambda}} \\frac{e^{-\\Delta G^\\ddagger / (k_B T)}}{2\\lambda}\n$$\nSimplifying this expression gives:\n$$\n\\rho_{FC} = \\frac{1}{\\sqrt{4\\pi\\lambda k_B T}} e^{-\\Delta G^\\ddagger / (k_B T)}\n$$\n\n**4. The Final Rate Expression**\n\nSubstituting the expression for $\\rho_{FC}$ and the derived activation energy $\\Delta G^\\ddagger$ back into Fermi's Golden Rule yields the classical Marcus equation for the electron transfer rate:\n$$\nk(\\Delta G^\\circ, \\lambda, |H|, T) = \\frac{2\\pi |H|^2}{\\hbar \\sqrt{4\\pi \\lambda k_B T}} \\exp\\left(-\\frac{(\\lambda + \\Delta G^\\circ)^2}{4\\lambda k_B T}\\right)\n$$\nThis equation provides the rate as a function of the driving force $\\Delta G^\\circ$, reorganization energy $\\lambda$, electronic coupling $|H|$, and temperature $T$. It accurately describes the three regions predicted by Marcus: the normal region ($\\Delta G^\\circ  -\\lambda$), the activationless region ($\\Delta G^\\circ = -\\lambda$), and the inverted region ($\\Delta G^\\circ  -\\lambda$).\n\n**5. Programmatic Implementation**\n\nThe program will implement this final rate expression. For each test case defined by a set of parameters $(\\lambda, |H|, T, \\{\\Delta G^\\circ_j\\})$, the following steps are performed:\n1.  A list of rates $\\{k_j\\}$ is computed for each corresponding driving force $\\Delta G^\\circ_j$ in the input list. The physical constants used are $k_B = 8.617333262 \\times 10^{-5} \\ \\mathrm{eV/K}$ and $\\hbar = 6.582119569 \\times 10^{-16} \\ \\mathrm{eV}\\cdot\\mathrm{s}$.\n2.  The index $i_\\mathrm{max}$ is determined by finding the index of the maximum value in the computed list of rates $\\{k_j\\}$.\n3.  The boolean flag $b_\\mathrm{inv}$ is evaluated as True if the rate at the last (most exergonic) driving force, $k_\\mathrm{last}$, is strictly less than the maximum rate found, $k_\\mathrm{max} = \\max_j k_j$. Otherwise, it is False.\n4.  The dimensionless ratio $r$ is calculated as $r = k_\\mathrm{last} / k_\\mathrm{first}$, where $k_\\mathrm{first}$ is the rate corresponding to the first driving force in the list.\n\nThis procedure is applied to all test cases, and the resulting triplets $(i_\\mathrm{max}, b_\\mathrm{inv}, r)$ are concatenated into a single list for output.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Marcus theory problem by deriving and applying the classical rate equation.\n    \"\"\"\n    # Physical constants in specified units\n    # Boltzmann constant in eV/K\n    KB_EV_K = 8.617333262145e-5\n    # Reduced Planck constant in eV*s\n    HBAR_EV_S = 6.582119569e-16\n\n    # Test cases from the problem statement\n    # Format: (lambda (eV), |H| (eV), T (K), list of ΔG° (eV))\n    test_cases = [\n        (0.6, 0.005, 300, [-0.10, -0.40, -0.60, -0.90, -1.20]),\n        (0.6, 0.005, 300, [-0.60]),\n        (1.0, 0.003, 300, [-0.10, -0.60, -1.00, -1.50, -2.00]),\n        (0.6, 0.005, 77, [-0.20, -0.50, -0.60, -0.80, -1.05]),\n    ]\n\n    # This function implements the classical Marcus theory rate equation\n    def calculate_marcus_rate(delta_G, lam, H_mag, T):\n        \"\"\"\n        Calculates the nonadiabatic electron transfer rate using the classical Marcus equation.\n        \n        Args:\n            delta_G (float): Driving force in eV.\n            lam (float): Reorganization energy in eV.\n            H_mag (float): Magnitude of electronic coupling in eV.\n            T (float): Absolute temperature in K.\n            \n        Returns:\n            float: The electron transfer rate in s^-1.\n        \"\"\"\n        if lam = 0 or T = 0:\n            return 0.0\n            \n        k_B_T = KB_EV_K * T\n        \n        # Activation free energy\n        delta_G_ddagger = (lam + delta_G)**2 / (4 * lam)\n        \n        # Pre-exponential factor\n        prefactor = (2 * np.pi / HBAR_EV_S) * (H_mag**2) / np.sqrt(4 * np.pi * lam * k_B_T)\n        \n        # Exponential term\n        exponent = -delta_G_ddagger / k_B_T\n        \n        rate = prefactor * np.exp(exponent)\n        \n        return rate\n\n    all_results = []\n    for lam, H_mag, T, delta_G_list in test_cases:\n        # Calculate rates for the list of driving forces\n        rates = np.array([calculate_marcus_rate(dg, lam, H_mag, T) for dg in delta_G_list])\n\n        # 1. Find the index of the maximum rate\n        i_max = np.argmax(rates)\n        \n        # Handle the case of a single-point list where argmax is always 0\n        # The logic naturally handles this, but it's good to be aware.\n        \n        # 2. Diagnose the inverted region\n        max_rate = rates[i_max]\n        last_rate = rates[-1]\n        b_inv = last_rate  max_rate\n        \n        # 3. Calculate the rate ratio\n        first_rate = rates[0]\n        # Avoid division by zero, though not expected in these test cases\n        if first_rate > 0:\n            r = last_rate / first_rate\n        else:\n            r = np.inf if last_rate > 0 else 0.0 # Or some other indicator for an edge case\n\n        # Append the triplet of results\n        all_results.extend([i_max, b_inv, r])\n\n    # Format the final output string as specified\n    # map(str, ...) converts all items (int, bool, float) to their string representations\n    output_str = f\"[{','.join(map(str, all_results))}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2654221"}]}