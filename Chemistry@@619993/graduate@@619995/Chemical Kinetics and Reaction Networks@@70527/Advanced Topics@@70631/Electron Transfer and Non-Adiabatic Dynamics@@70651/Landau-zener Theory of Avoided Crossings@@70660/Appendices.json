{"hands_on_practices": [{"introduction": "The Landau-Zener formula provides a powerful analytical expression for nonadiabatic transition probabilities, but it is derived under the assumption of an infinitely long traversal time. This exercise challenges you to verify this cornerstone formula from first principles by numerically solving the time-dependent Schrödinger equation for a two-level system [@problem_id:2652123]. By comparing your numerical results to the analytical prediction as the integration time increases, you will gain a deeper understanding of the model's asymptotic nature and develop essential skills in computational quantum dynamics.", "problem": "Consider the Time-Dependent Schrödinger Equation (TDSE) given by $i \\hbar \\, \\frac{d}{dt}\\psi(t) = H(t)\\,\\psi(t)$ for a two-level system relevant to nonadiabatic transitions in chemical reaction networks, and work in dimensionless units with $\\hbar = 1$. The Landau–Zener model specifies a linear time-dependent Hamiltonian in the diabatic basis as\n$$\nH(t) = \\begin{pmatrix}\n\\frac{v t}{2} & \\Delta \\\\\n\\Delta & -\\frac{v t}{2}\n\\end{pmatrix},\n$$\nwhere $v > 0$ is the constant slope difference of diabatic energies and $\\Delta > 0$ is the time-independent diabatic coupling. Let $\\psi(t)$ be a two-component state vector normalized to unity. Take the initial condition at $t=-t_{\\max}$ to be the first diabatic state, namely $\\psi(-t_{\\max}) = (1,0)^{\\top}$.\n\nYour task is to implement a numerical integrator for the TDSE, i.e., solve\n$$\ni \\frac{d}{dt}\\psi(t) = H(t)\\psi(t),\n$$\non the finite time interval $t \\in [-t_{\\max}, t_{\\max}]$, and compute the numerical Landau–Zener transition probability $P_{\\mathrm{num}}(\\Delta, v, t_{\\max})$, defined as the probability to occupy the initial diabatic state at $t=+t_{\\max}$:\n$$\nP_{\\mathrm{num}}(\\Delta, v, t_{\\max}) = \\left|\\psi_1(t_{\\max})\\right|^2,\n$$\nwhere $\\psi_1$ is the first component of $\\psi$ in the diabatic basis.\n\nStarting from first principles (the TDSE and the given Hamiltonian), derive how to compute $P_{\\mathrm{num}}$ and the expected asymptotic behavior as $t_{\\max} \\to \\infty$. Use a high-accuracy adaptive integrator suitable for smooth, nonstiff complex-valued systems. For numerical stability and scientific realism, ensure norm preservation is verified a posteriori up to small numerical error, and use tolerances that make the asymptotic convergence in $t_{\\max}$ observable.\n\nTo verify convergence to the analytic Landau–Zener limit as $\\pm t_{\\max} \\to \\infty$, define the absolute error\n$$\n\\varepsilon(\\Delta, v, t_{\\max}) = \\left| P_{\\mathrm{num}}(\\Delta, v, t_{\\max}) - P_{\\mathrm{LZ}}(\\Delta, v) \\right|,\n$$\nwhere $P_{\\mathrm{LZ}}(\\Delta, v)$ is the closed-form Landau–Zener probability for the specified Hamiltonian. Although you must not use shortcut formulas in your derivation, your program may evaluate the analytic $P_{\\mathrm{LZ}}(\\Delta, v)$ once derived in your solution to compute $\\varepsilon$.\n\nImplement a program that computes $\\varepsilon$ for the following test suite of parameter triples $(\\Delta, v, t_{\\max})$:\n- $(\\Delta, v, t_{\\max}) = (0.5, 1.0, 6.0)$,\n- $(\\Delta, v, t_{\\max}) = (0.5, 1.0, 10.0)$,\n- $(\\Delta, v, t_{\\max}) = (0.5, 1.0, 14.0)$,\n- $(\\Delta, v, t_{\\max}) = (1.0, 0.5, 8.0)$,\n- $(\\Delta, v, t_{\\max}) = (1.0, 0.5, 12.0)$,\n- $(\\Delta, v, t_{\\max}) = (1.0, 0.5, 16.0)$,\n- $(\\Delta, v, t_{\\max}) = (0.1, 1.5, 6.0)$,\n- $(\\Delta, v, t_{\\max}) = (0.1, 1.5, 10.0)$,\n- $(\\Delta, v, t_{\\max}) = (0.1, 1.5, 14.0)$.\n\nDesign for coverage:\n- The first three cases are a general scenario with moderate coupling and speed to assess basic convergence.\n- The next three cases probe the adiabatic regime (larger $\\Delta$ and smaller $v$) where the transition probability is small, testing integrator accuracy near small probabilities.\n- The final three cases probe the diabatic regime (small $\\Delta$ and larger $v$) where the transition probability is close to one, testing stability near a boundary.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,\\ldots,r_9]$), where each $r_k$ is the computed absolute error $\\varepsilon$ for the $k$-th parameter triple, expressed as a floating-point number without units (dimensionless).", "solution": "The problem presented is a valid exercise in computational quantum dynamics. It is scientifically grounded in the well-established Landau-Zener model for nonadiabatic transitions, which is a fundamental concept in chemical kinetics and physics. The problem is well-posed, providing a complete set of parameters, a clear differential equation, a well-defined initial condition, and a specific quantity to compute. All terms are defined unambiguously, and the setup is mathematically and physically consistent. We shall therefore proceed with a solution.\n\nThe core of the problem is to solve the Time-Dependent Schrödinger Equation (TDSE) for a two-level quantum system in dimensionless units where $\\hbar=1$. The TDSE is given by:\n$$\ni \\frac{d}{dt}\\psi(t) = H(t)\\psi(t)\n$$\nThe state vector is a two-component complex vector, $\\psi(t) = \\begin{pmatrix} \\psi_1(t) \\\\ \\psi_2(t) \\end{pmatrix}$, and the time-dependent Hamiltonian $H(t)$ is given by the matrix:\n$$\nH(t) = \\begin{pmatrix}\n\\frac{v t}{2} & \\Delta \\\\\n\\Delta & -\\frac{v t}{2}\n\\end{pmatrix}\n$$\nwhere $v > 0$ and $\\Delta > 0$ are real parameters. This Hamiltonian matrix is Hermitian, which ensures that the time evolution operator is unitary and the norm of the state vector, $\\|\\psi(t)\\|^2 = |\\psi_1(t)|^2 + |\\psi_2(t)|^2$, is a conserved quantity.\n\nTo prepare for numerical integration, we can write the equation as a system of first-order ordinary differential equations (ODEs). The matrix equation expands to:\n$$\ni \\frac{d\\psi_1}{dt} = \\frac{v t}{2} \\psi_1(t) + \\Delta \\psi_2(t)\n$$\n$$\ni \\frac{d\\psi_2}{dt} = \\Delta \\psi_1(t) - \\frac{v t}{2} \\psi_2(t)\n$$\nFor a standard numerical ODE solver, we express the system in the form $\\frac{d\\vec{y}}{dt} = \\vec{f}(t, \\vec{y})$. Multiplying the TDSE by $-i$ (and using $1/i = -i$), we get:\n$$\n\\frac{d\\psi}{dt} = -i H(t) \\psi(t)\n$$\nThis is a system of two coupled, linear, first-order ODEs for the complex variables $\\psi_1(t)$ and $\\psi_2(t)$. We must solve this system over the time interval $t \\in [-t_{\\max}, t_{\\max}]$ with the initial condition $\\psi(-t_{\\max}) = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$.\n\nThe problem requires a high-accuracy adaptive integrator suitable for smooth, nonstiff systems. The coefficients of the Hamiltonian are linear in $t$, making the system smooth. It is not stiff. Therefore, a high-order Runge-Kutta method, such as the Dormand-Prince method of order $8(5,3)$ (DOP853), is an excellent choice. Modern scientific libraries, such as `scipy.integrate.solve_ivp` in Python, can directly integrate systems of complex-valued ODEs, which simplifies implementation significantly. We will set strict absolute and relative tolerances (e.g., $10^{-13}$) to ensure that the error from the numerical integration scheme is much smaller than the physical error arising from using a finite time interval $[-t_{\\max}, t_{\\max}]$.\n\nAfter numerical integration, we obtain the state vector at the final time, $\\psi(t_{\\max})$. The problem defines the numerical probability $P_{\\mathrm{num}}$ as the probability of finding the system in its initial diabatic state, which is given by the squared magnitude of the first component of the state vector:\n$$\nP_{\\mathrm{num}}(\\Delta, v, t_{\\max}) = |\\psi_1(t_{\\max})|^2\n$$\n\nTo compute the error $\\varepsilon$, we must compare this numerical result to the well-known analytic Landau-Zener probability, $P_{\\mathrm{LZ}}(\\Delta, v)$, which corresponds to the limit $t_{\\max} \\to \\infty$. The derivation of this formula considers the adiabatic energy levels of the system, which are the instantaneous eigenvalues of $H(t)$. These are found from the characteristic equation $\\det(H(t) - E I) = 0$, yielding:\n$$\nE_{\\pm}(t) = \\pm \\sqrt{\\left(\\frac{v t}{2}\\right)^2 + \\Delta^2}\n$$\nThese energy levels form an avoided crossing at $t=0$, with a minimum energy gap of $2\\Delta$. The initial state at $t \\to -\\infty$ is the diabatic state $|\\phi_1\\rangle = (1, 0)^{\\top}$. At this time, the diagonal element $H_{11}(t) = vt/2 \\to -\\infty$, so $|\\phi_1\\rangle$ corresponds to the lower adiabatic eigenstate, $E_{-}(t)$. In a perfectly adiabatic evolution (infinitely slow change, $v \\to 0$), the system would remain on the lower energy surface and evolve into the diabatic state $|\\phi_2\\rangle = (0, 1)^{\\top}$ at $t \\to +\\infty$, since for large positive $t$, $H_{22}(t) = -vt/2$ is the lower energy.\n\nHowever, for a finite rate $v > 0$, there is a probability of a nonadiabatic transition, where the system \"jumps\" to the upper adiabatic surface, $E_{+}(t)$, at the avoided crossing. This corresponds to the system remaining in the initial diabatic state $|\\phi_1\\rangle$. The probability of this transition, which is precisely the survival probability of the initial diabatic state, is given by the Landau-Zener formula:\n$$\nP_{\\mathrm{LZ}}(\\Delta, v) = \\exp\\left(-\\frac{2\\pi \\Delta^2}{\\hbar v}\\right)\n$$\nIn our dimensionless units where $\\hbar=1$, this becomes:\n$$\nP_{\\mathrm{LZ}}(\\Delta, v) = \\exp\\left(-\\frac{2\\pi \\Delta^2}{v}\\right)\n$$\nThe absolute error $\\varepsilon$ is then computed as:\n$$\n\\varepsilon(\\Delta, v, t_{\\max}) = \\left| P_{\\mathrm{num}}(\\Delta, v, t_{\\max}) - P_{\\mathrm{LZ}}(\\Delta, v) \\right|\n$$\nThe numerical implementation will loop through the provided test cases, performing the integration for each set of $(\\Delta, v, t_{\\max})$, calculating $P_{\\mathrm{num}}$, comparing it to the analytic $P_{\\mathrm{LZ}}$, and storing the resulting absolute error $\\varepsilon$. As a final verification of the numerical integration's quality, the norm of the final state vector, $\\|\\psi(t_{\\max})\\|$, should be checked to be unity to within a small tolerance, confirming the unitary nature of the simulated quantum evolution. The decrease in $\\varepsilon$ as $t_{\\max}$ increases for a fixed $(\\Delta, v)$ pair will demonstrate the convergence of the finite-time numerical solution to the asymptotic analytical result.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Computes the absolute error between the numerical solution of the\n    time-dependent Schrödinger equation for a two-level Landau-Zener system\n    and the analytic Landau-Zener transition probability.\n    \"\"\"\n    \n    # Test cases are given as tuples of (delta, v, t_max).\n    test_cases = [\n        (0.5, 1.0, 6.0),\n        (0.5, 1.0, 10.0),\n        (0.5, 1.0, 14.0),\n        (1.0, 0.5, 8.0),\n        (1.0, 0.5, 12.0),\n        (1.0, 0.5, 16.0),\n        (0.1, 1.5, 6.0),\n        (0.1, 1.5, 10.0),\n        (0.1, 1.5, 14.0),\n    ]\n\n    results = []\n\n    def schrodinger_rhs(t, psi, delta, v):\n        \"\"\"\n        Defines the right-hand side of the TDSE in the form dy/dt = f(t, y).\n        The equation is d(psi)/dt = -i * H(t) * psi.\n        \n        Args:\n            t (float): Time.\n            psi (np.ndarray): State vector [psi_1, psi_2], complex-valued.\n            delta (float): Diabatic coupling.\n            v (float): Difference in slopes of diabatic energies.\n            \n        Returns:\n            np.ndarray: The time derivative of the state vector.\n        \"\"\"\n        # The Hamiltonian H(t) is [[v*t/2, delta], [delta, -v*t/2]].\n        H00 = 0.5 * v * t\n        H11 = -H00\n        H01 = delta\n        H10 = delta\n        \n        psi1, psi2 = psi\n        \n        # d(psi)/dt = -i * H * psi\n        d_psi1_dt = -1j * (H00 * psi1 + H01 * psi2)\n        d_psi2_dt = -1j * (H10 * psi1 + H11 * psi2)\n        \n        return np.array([d_psi1_dt, d_psi2_dt])\n\n    for delta, v, t_max in test_cases:\n        # Initial condition: psi(-t_max) = [1, 0]^T\n        psi0 = np.array([1.0 + 0.0j, 0.0 + 0.0j])\n        \n        # Time interval for integration\n        t_span = [-t_max, t_max]\n        \n        # Perform high-accuracy numerical integration using a high-order method.\n        # Tolerances are set to be very strict to ensure the numerical error\n        # from the integrator is negligible compared to the physical error\n        # from the finite time interval.\n        sol = solve_ivp(\n            fun=schrodinger_rhs,\n            t_span=t_span,\n            y0=psi0,\n            args=(delta, v),\n            method='DOP853',  # High-order adaptive Runge-Kutta method\n            rtol=1e-13,\n            atol=1e-13\n        )\n        \n        # Extract the final state vector at t = t_max\n        psi_final = sol.y[:, -1]\n        \n        # A posteriori check for norm preservation (optional but good practice)\n        # The norm should be 1 for unitary evolution.\n        norm = np.linalg.norm(psi_final)\n        if not np.isclose(norm, 1.0, rtol=1e-9, atol=1e-9):\n             # This block is for verification and would not typically be in\n             # production code unless for debugging.\n             # In a strict setting, this might even raise an error.\n             print(f\"Warning: Norm preservation failed for case ({delta}, {v}, {t_max}). Norm = {norm}\")\n\n        # Numerical probability P_num is |psi_1(t_max)|^2\n        p_num = np.abs(psi_final[0])**2\n        \n        # Analytic Landau-Zener probability P_LZ = exp(-2*pi*delta^2 / v)\n        # for a transition that remains on the diabatic curve (and jumps\n        # between adiabatic curves). With h_bar = 1.\n        p_lz = np.exp(-2.0 * np.pi * delta**2 / v)\n        \n        # Compute the absolute error\n        error = np.abs(p_num - p_lz)\n        results.append(error)\n\n    # Format the output as a comma-separated list in brackets.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2652123"}, {"introduction": "A nonadiabatic transition probability depends on the velocity at which a system traverses a crossing region, but in a thermal ensemble, molecules move at a range of speeds. This practice guides you through the essential process of computing a thermally averaged transition probability by integrating the Landau-Zener formula over a Maxwell-Boltzmann velocity distribution [@problem_id:2652090]. You will learn how a strategic change of variables can transform a numerically challenging integral into a form ideal for specialized quadrature methods, a powerful technique for calculating macroscopic observables from microscopic models.", "problem": "You are asked to compute the thermal average of a Landau–Zener transition probability over a Maxwell–Boltzmann distribution of velocities and to design a numerically stable quadrature scheme for its evaluation. Consider a one-dimensional reaction coordinate with reduced mass $\\mu$ and a linear avoided crossing characterized by a diabatic coupling $V$ (with units of energy) and a constant magnitude of slope difference $\\lvert \\Delta F \\rvert$ (with units of force). The Landau–Zener nonadiabatic transition probability for a trajectory crossing the avoided crossing with speed $v \\equiv \\dot{R} \\gt 0$ is given by the well-tested Landau–Zener formula\n$$\nP_{\\mathrm{LZ}}(v) \\;=\\; \\exp\\!\\left( - \\frac{2\\pi V^2}{\\hbar\\, v\\, \\lvert \\Delta F \\rvert} \\right),\n$$\nwhere $\\hbar$ is the reduced Planck constant. The thermal distribution of positive speeds $v \\gt 0$ along the reaction coordinate at absolute temperature $T$ is obtained by flux-weighting the one-dimensional Maxwell–Boltzmann distribution, yielding the normalized weight\n$$\nw_T(v) \\;=\\; \\frac{\\mu}{k_{\\mathrm{B}} T}\\, v \\, \\exp\\!\\left( - \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T} \\right),\n$$\nwhere $k_{\\mathrm{B}}$ is the Boltzmann constant. The thermal average of $P_{\\mathrm{LZ}}$ is thus\n$$\n\\langle P_{\\mathrm{LZ}} \\rangle_T \\;=\\; \\int_{0}^{\\infty} P_{\\mathrm{LZ}}(v)\\, w_T(v)\\, dv,\n$$\nwhich is a dimensionless number.\n\nYour tasks are:\n1) Starting from the above definitions and the change of variables $t = \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T}$, derive a form of the integral that is naturally paired with a classical Gaussian quadrature rule whose weight function is $\\exp(-t)$ on $[0,\\infty)$, and explain why this mapping improves numerical stability for both small and large speeds.\n2) Propose and implement a numerically stable quadrature scheme based on that mapping to evaluate $\\langle P_{\\mathrm{LZ}} \\rangle_T$. Your implementation must be self-contained and must not require any input. Use a Gauss–Laguerre quadrature with $N=64$ and $N=128$ nodes to produce an approximation and an a posteriori error estimate. Report the approximation computed with $N=128$ nodes as the value, and the absolute difference between the $N=128$-node and $N=64$-node results as an error estimate. The error estimate must be a nonnegative float.\n3) Use the following constants and units:\n- $\\hbar$ in $\\mathrm{J\\,s}$,\n- $k_{\\mathrm{B}}$ in $\\mathrm{J/K}$,\n- $\\mu$ in $\\mathrm{kg}$,\n- $\\lvert \\Delta F \\rvert$ in $\\mathrm{N}$,\n- $V$ in $\\mathrm{J}$,\n- $T$ in $\\mathrm{K}$.\nAll computations must be carried out in the International System of Units (SI). The final thermal average $\\langle P_{\\mathrm{LZ}} \\rangle_T$ is dimensionless, so no unit is required for the output values.\n4) For numerical evaluation, use the physically plausible fixed parameters $\\mu = 1.0\\times 10^{-26}\\ \\mathrm{kg}$ and $\\lvert \\Delta F \\rvert = 1.0\\times 10^{-9}\\ \\mathrm{N}$. Use the following test suite of $(T, V)$ parameter sets to ensure coverage of a variety of regimes:\n- Case 1 (moderate temperature, weak coupling): $T = 300\\ \\mathrm{K}$, $V = 1.0\\times 10^{-22}\\ \\mathrm{J}$.\n- Case 2 (moderate temperature, intermediate coupling): $T = 300\\ \\mathrm{K}$, $V = 5.0\\times 10^{-22}\\ \\mathrm{J}$.\n- Case 3 (lower temperature, same intermediate coupling): $T = 100\\ \\mathrm{K}$, $V = 5.0\\times 10^{-22}\\ \\mathrm{J}$.\n- Case 4 (higher temperature, strong coupling): $T = 1000\\ \\mathrm{K}$, $V = 1.0\\times 10^{-21}\\ \\mathrm{J}$.\n- Case 5 (low temperature, very strong coupling): $T = 50\\ \\mathrm{K}$, $V = 5.0\\times 10^{-21}\\ \\mathrm{J}$.\n- Case 6 (very high temperature, very weak coupling): $T = 2000\\ \\mathrm{K}$, $V = 1.0\\times 10^{-23}\\ \\mathrm{J}$.\n5) Required final output format: Your program must print a single line containing a Python-style list of six items, each item being a two-element list of floats in the order $[\\langle P_{\\mathrm{LZ}} \\rangle_T, \\text{err}]$. Use eight significant digits for each float. For example, a valid output for two cases would look like [[0.12345679,1.234e-08],[0.98765432,2.468e-09]] (your output should include all six cases in a single list). No additional text should be printed.\n\nAll results are dimensionless floats and must be printed with eight significant digits as specified. Angles do not appear in this problem, so no angle unit specification is required.", "solution": "The problem statement has been subjected to rigorous validation and is found to be scientifically sound, well-posed, and unambiguous. It is based on established principles of quantum mechanics and statistical mechanics, specifically the Landau-Zener theory and the Maxwell-Boltzmann distribution. All necessary parameters and conditions for a unique solution are provided. We may therefore proceed with the derivation and numerical solution.\n\nThe objective is to compute the thermal average of the Landau-Zener transition probability, $\\langle P_{\\mathrm{LZ}} \\rangle_T$:\n$$\n\\langle P_{\\mathrm{LZ}} \\rangle_T = \\int_{0}^{\\infty} P_{\\mathrm{LZ}}(v)\\, w_T(v)\\, dv\n$$\nThe components are the Landau-Zener probability,\n$$\nP_{\\mathrm{LZ}}(v) = \\exp\\!\\left( - \\frac{2\\pi V^2}{\\hbar\\, v\\, \\lvert \\Delta F \\rvert} \\right)\n$$\nand the flux-weighted velocity distribution,\n$$\nw_T(v) = \\frac{\\mu}{k_{\\mathrm{B}} T}\\, v \\, \\exp\\!\\left( - \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T} \\right)\n$$\nwhere $v$ is the speed, $V$ is the diabatic coupling, $|\\Delta F|$ is the force difference, $\\mu$ is the reduced mass, $T$ is the temperature, and $\\hbar$ and $k_{\\mathrm{B}}$ are the reduced Planck and Boltzmann constants, respectively. The full integral is:\n$$\n\\langle P_{\\mathrm{LZ}} \\rangle_T = \\int_{0}^{\\infty} \\exp\\!\\left( - \\frac{2\\pi V^2}{\\hbar v \\lvert \\Delta F \\rvert} \\right) \\frac{\\mu v}{k_{\\mathrm{B}} T} \\exp\\!\\left( - \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T} \\right) dv\n$$\nThe problem requires a change of variables to the dimensionless energy $t = \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T}$. We derive the transformation of the integral. The differential $dt$ is found by differentiation with respect to $v$:\n$$\ndt = \\frac{d}{dv} \\left( \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T} \\right) dv = \\frac{2\\mu v}{2 k_{\\mathrm{B}} T} dv = \\frac{\\mu v}{k_{\\mathrm{B}} T} dv\n$$\nThis grouping $\\frac{\\mu v}{k_{\\mathrm{B}} T} dv$ appears directly in the integrand. The Maxwell-Boltzmann exponential term transforms as $\\exp\\!\\left( - \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T} \\right) = \\exp(-t)$. Consequently, the weighted differential element $w_T(v)dv$ simplifies to:\n$$\nw_T(v) dv = \\left[ \\exp\\!\\left( - \\frac{\\mu v^2}{2 k_{\\mathrm{B}} T} \\right) \\right] \\left( \\frac{\\mu v}{k_{\\mathrm{B}} T} dv \\right) = e^{-t} dt\n$$\nThe integration limits remain unchanged, as $v \\in [0, \\infty)$ maps to $t \\in [0, \\infty)$. Next, we express the $P_{\\mathrm{LZ}}(v)$ term as a function of $t$. From the definition of $t$, the velocity $v$ is given by $v = \\sqrt{\\frac{2 k_{\\mathrm{B}} T t}{\\mu}}$ for $v>0$. Substituting this into $P_{\\mathrm{LZ}}(v)$:\n$$\nP_{\\mathrm{LZ}}(t) = \\exp\\!\\left( - \\frac{2\\pi V^2}{\\hbar \\lvert \\Delta F \\rvert} \\left(\\sqrt{\\frac{2 k_{\\mathrm{B}} T t}{\\mu}}\\right)^{-1} \\right) = \\exp\\!\\left( - \\frac{2\\pi V^2}{\\hbar \\lvert \\Delta F \\rvert} \\sqrt{\\frac{\\mu}{2 k_{\\mathrm{B}} T}} \\frac{1}{\\sqrt{t}} \\right)\n$$\nTo simplify this expression, we introduce a dimensionless parameter $\\gamma$, which encapsulates all the physical parameters of the system:\n$$\n\\gamma = \\frac{2\\pi V^2}{\\hbar \\lvert \\Delta F \\rvert} \\sqrt{\\frac{\\mu}{2 k_{\\mathrm{B}} T}}\n$$\nWith this definition, $P_{\\mathrm{LZ}}(t)$ becomes $\\exp(-\\gamma/\\sqrt{t})$. The complete transformed integral is thus:\n$$\n\\langle P_{\\mathrm{LZ}} \\rangle_T = \\int_{0}^{\\infty} \\exp\\left(-\\frac{\\gamma}{\\sqrt{t}}\\right) e^{-t} dt\n$$\nThis integral is in the canonical form for Gauss-Laguerre quadrature, $\\int_0^\\infty f(t) e^{-t} dt$, where the function to be approximated by polynomials is $f(t) = \\exp(-\\gamma/\\sqrt{t})$.\n\nThis transformation is not merely a mathematical convenience; it is a crucial step for ensuring numerical stability and accuracy.\n1.  **Isolation of Dominant Decay:** The Maxwell-Boltzmann distribution contains the term $\\exp(-\\frac{\\mu v^2}{2 k_{\\mathrm{B}} T})$, which causes rapid decay at high velocities. This term becomes the weight function $e^{-t}$ of the Gauss-Laguerre quadrature. By incorporating this weight function into the quadrature rule's nodes and weights, the numerical method focuses its efforts on approximating the much smoother, non-decaying function $f(t)$. This is vastly more efficient than a general-purpose integrator, which must resolve the full, peaked structure of the original integrand.\n2.  **Mitigation of Singularity:** The original integrand contains the term $P_{\\mathrm{LZ}}(v) \\propto \\exp(-\\text{const}/v)$, which has an essential singularity at $v=0$. Although the overall integrand goes to zero at $v=0$, the extreme flatness of the function near the origin poses a challenge for polynomial-based approximation methods. The mapping to $f(t) = \\exp(-\\gamma/\\sqrt{t})$ transforms the behavior near the origin. While $f(t)$ is also extremely flat for $t \\to 0^+$, casting the problem into the standard Gauss-Laguerre form allows us to use a specialized quadrature whose nodes are optimally placed for the $e^{-t}$ weight, ensuring a robust evaluation.\n\nThe numerical evaluation is performed using Gauss-Laguerre quadrature. The integral is approximated by a weighted sum:\n$$\n\\int_0^\\infty f(t) e^{-t} dt \\approx \\sum_{i=1}^{N} w_i f(t_i)\n$$\nHere, $t_i$ and $w_i$ are the nodes and weights for an $N$-point quadrature, derived from the roots of the $N$-th Laguerre polynomial $L_N(t)$. These are obtained using standard, high-precision numerical libraries. As stipulated, we compute the approximation for $N=64$ points ($I_{64}$) and $N=128$ points ($I_{128}$). The final reported value is $I_{128}$, and the a posteriori error estimate is the absolute difference $|I_{128} - I_{64}|$. This procedure is executed for each of the six specified $(T, V)$ parameter sets, using fundamental physical constants from `scipy.constants` and the provided problem parameters, all in SI units.", "answer": "```python\nimport numpy as np\nfrom scipy import constants\nfrom scipy.special import roots_laguerre\n\ndef solve():\n    \"\"\"\n    Computes the thermally averaged Landau-Zener transition probability\n    using Gauss-Laguerre quadrature.\n    \"\"\"\n\n    # Fundamental constants from scipy in SI units.\n    hbar = constants.hbar\n    k_B = constants.k\n\n    # Fixed physical parameters from the problem statement in SI units.\n    mu = 1.0e-26  # kg\n    delta_F_abs = 1.0e-9  # N\n\n    # Test cases defined in the problem statement as (T, V) pairs.\n    # T is in Kelvin, V is in Joules.\n    test_cases = [\n        (300.0, 1.0e-22),   # Case 1\n        (300.0, 5.0e-22),   # Case 2\n        (100.0, 5.0e-22),   # Case 3\n        (1000.0, 1.0e-21),  # Case 4\n        (50.0, 5.0e-21),    # Case 5\n        (2000.0, 1.0e-23)   # Case 6\n    ]\n\n    results = []\n\n    # Number of nodes for Gauss-Laguerre quadrature.\n    N_low = 64\n    N_high = 128\n\n    # Pre-compute nodes and weights to avoid repeated calculations if they were constant.\n    # However, since we define f(t) within the loop, pre-computation of nodes/weights\n    # for each N is better done once.\n    nodes_64, weights_64 = roots_laguerre(N_low)\n    nodes_128, weights_128 = roots_laguerre(N_high)\n\n    for T, V in test_cases:\n        # Calculate the dimensionless parameter gamma.\n        gamma = (2.0 * np.pi * V**2) / (hbar * delta_F_abs) * np.sqrt(mu / (2.0 * k_B * T))\n\n        # Define the function f(t) = exp(-gamma / sqrt(t)) to be integrated.\n        # The quadrature nodes t_i from roots_laguerre are strictly positive,\n        # so no division by zero will occur.\n        def f(t, current_gamma):\n            return np.exp(-current_gamma / np.sqrt(t))\n\n        # Perform Gauss-Laguerre quadrature for N=64.\n        # The sum is sum(w_i * f(t_i)).\n        integral_64 = np.sum(weights_64 * f(nodes_64, gamma))\n\n        # Perform Gauss-Laguerre quadrature for N=128.\n        integral_128 = np.sum(weights_128 * f(nodes_128, gamma))\n\n        # The final value is the more accurate N=128 result.\n        value = integral_128\n        # The error estimate is the absolute difference between the two approximations.\n        error = np.abs(integral_128 - integral_64)\n\n        results.append([value, error])\n\n    # Format the output string according to the problem specification.\n    # Each float must be represented with eight significant digits.\n    # The '.8g' format specifier is suitable for this purpose.\n    formatted_results = []\n    for val, err in results:\n        formatted_results.append(f\"[{val:.8g},{err:.8g}]\")\n    \n    # Print the final result in a single line as a Python-style list of lists.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2652090"}, {"introduction": "Simulating chemical reactions often involves 'surface hopping,' where a system's trajectory transitions between different potential energy surfaces. This practice focuses on a critical step in such algorithms: the momentum adjustment required to conserve total energy after a nonadiabatic hop [@problem_id:2652129]. By deriving the momentum change and the condition for a 'frustrated hop'—where a transition is forbidden due to insufficient kinetic energy—you will gain practical insight into the mechanics of nonadiabatic molecular dynamics and the interplay between quantum transitions and classical mechanics.", "problem": "A reactive trajectory in a multidimensional chemical reaction network is treated within a Landau–Zener surface-hopping framework to account for nonadiabatic transitions between adiabatic electronic states at an avoided crossing. Consider a single hop attempt from adiabatic state $i$ to state $j$ at nuclear configuration $\\mathbf{R}$ where the adiabatic potentials have values $V_{i}(\\mathbf{R})$ and $V_{j}(\\mathbf{R})$. Let the potential energy change on the hop be $\\Delta V \\equiv V_{j}(\\mathbf{R}) - V_{i}(\\mathbf{R})$. The nuclear momentum just before the hop is $\\mathbf{p}$ and the nuclear mass matrix is $M = \\mathrm{diag}(m_{1},\\dots,m_{N})$. The nuclear kinetic energy is $K(\\mathbf{p}) = \\frac{1}{2}\\,\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p}$. The nonadiabatic coupling vector between the two adiabatic states at $\\mathbf{R}$ is $\\mathbf{d}_{ij}(\\mathbf{R})$. In a Fewest Switches Surface Hopping (FSSH) update that conserves the total energy and changes only the component of the momentum along the nonadiabatic coupling direction, one defines the mass-metric normalized coupling direction\n$$\n\\hat{\\mathbf{d}} \\equiv \\frac{\\mathbf{d}_{ij}}{\\sqrt{\\mathbf{d}_{ij}^{\\mathsf{T}} M^{-1} \\mathbf{d}_{ij}}} \\quad \\text{so that} \\quad \\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\hat{\\mathbf{d}} = 1,\n$$\nand the corresponding parallel nuclear velocity component\n$$\nc \\equiv \\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\mathbf{p}.\n$$\nAssume the hop, if accepted, is implemented by a momentum change $\\Delta \\mathbf{p}$ parallel to $\\hat{\\mathbf{d}}$, i.e., $\\Delta \\mathbf{p} = \\alpha\\,\\hat{\\mathbf{d}}$ for some scalar $\\alpha$, chosen to enforce conservation of the total energy at fixed $\\mathbf{R}$:\n$$\n\\frac{1}{2}\\,(\\mathbf{p}+\\Delta \\mathbf{p})^{\\mathsf{T}} M^{-1} (\\mathbf{p}+\\Delta \\mathbf{p}) + V_{j}(\\mathbf{R})\n\\;=\\;\n\\frac{1}{2}\\,\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} + V_{i}(\\mathbf{R}).\n$$\nWithin this setting:\n- Derive the closed-form expression for the post-hop momentum $\\mathbf{p}'$ when the hop is accepted, expressed in terms of $\\mathbf{p}$, $\\hat{\\mathbf{d}}$, $c$, and $\\Delta V$, under the convention that the post-hop velocity component along $\\hat{\\mathbf{d}}$ retains the sign of $c$ while minimizing the magnitude change needed to satisfy energy conservation.\n- Derive the scalar expression whose negativity indicates that the hop must be rejected due to insufficient kinetic energy along the coupling direction.\n\nProvide your final answer as a single row matrix whose first entry is the symbolic expression for $\\mathbf{p}'$ and whose second entry is the scalar expression whose negativity signals rejection. Express your answer symbolically; do not substitute numerical values and do not include units.", "solution": "The problem as stated is scientifically grounded, well-posed, and self-contained. It describes a standard procedure for momentum adjustment in the Fewest Switches Surface Hopping (FSSH) algorithm, a cornerstone of nonadiabatic molecular dynamics simulations. The definitions of mass-weighted metrics, energy conservation, and constraints on the momentum update are consistent with the established literature in theoretical chemical physics. Therefore, the problem is valid and I will proceed with its solution.\n\nThe total energy of the system in state $i$ is $E = K(\\mathbf{p}) + V_{i}(\\mathbf{R})$. After a hop to state $j$, the new momentum is $\\mathbf{p}'$ and the total energy is $E' = K(\\mathbf{p}') + V_{j}(\\mathbf{R})$. The problem requires that total energy be conserved, so $E' = E$.\n$$K(\\mathbf{p}') + V_{j}(\\mathbf{R}) = K(\\mathbf{p}) + V_{i}(\\mathbf{R})$$\nUsing the definition of kinetic energy $K(\\mathbf{p}) = \\frac{1}{2}\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p}$ and the post-hop momentum $\\mathbf{p}' = \\mathbf{p} + \\Delta \\mathbf{p}$, we can write the energy conservation equation as:\n$$\\frac{1}{2}(\\mathbf{p} + \\Delta \\mathbf{p})^{\\mathsf{T}} M^{-1} (\\mathbf{p} + \\Delta \\mathbf{p}) - \\frac{1}{2}\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} = V_{i}(\\mathbf{R}) - V_{j}(\\mathbf{R})$$\nLet $\\Delta V = V_{j}(\\mathbf{R}) - V_{i}(\\mathbf{R})$. The equation becomes:\n$$\\frac{1}{2}(\\mathbf{p} + \\Delta \\mathbf{p})^{\\mathsf{T}} M^{-1} (\\mathbf{p} + \\Delta \\mathbf{p}) - \\frac{1}{2}\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} = -\\Delta V$$\nWe expand the first term. Since the mass matrix $M$ is diagonal, its inverse $M^{-1}$ is symmetric. Thus, $\\mathbf{x}^{\\mathsf{T}} M^{-1} \\mathbf{y} = \\mathbf{y}^{\\mathsf{T}} M^{-1} \\mathbf{x}$.\n$$\\frac{1}{2}(\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} + 2\\Delta \\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} + \\Delta \\mathbf{p}^{\\mathsf{T}} M^{-1} \\Delta \\mathbf{p}) - \\frac{1}{2}\\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} = -\\Delta V$$\n$$\\Delta \\mathbf{p}^{\\mathsf{T}} M^{-1} \\mathbf{p} + \\frac{1}{2}\\Delta \\mathbf{p}^{\\mathsf{T}} M^{-1} \\Delta \\mathbf{p} = -\\Delta V$$\nThe problem states that the momentum change is parallel to the mass-metric normalized coupling direction $\\hat{\\mathbf{d}}$, i.e., $\\Delta \\mathbf{p} = \\alpha \\hat{\\mathbf{d}}$ for some scalar $\\alpha$. Substituting this into the equation:\n$$(\\alpha \\hat{\\mathbf{d}})^{\\mathsf{T}} M^{-1} \\mathbf{p} + \\frac{1}{2}(\\alpha \\hat{\\mathbf{d}})^{\\mathsf{T}} M^{-1} (\\alpha \\hat{\\mathbf{d}}) = -\\Delta V$$\n$$\\alpha (\\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\mathbf{p}) + \\frac{1}{2}\\alpha^2 (\\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\hat{\\mathbf{d}}) = -\\Delta V$$\nWe are given the definitions $c \\equiv \\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\mathbf{p}$ and $\\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\hat{\\mathbf{d}} = 1$. Substituting these simplifies the equation to a quadratic equation for $\\alpha$:\n$$\\alpha c + \\frac{1}{2}\\alpha^2 = -\\Delta V$$\n$$\\frac{1}{2}\\alpha^2 + c\\alpha + \\Delta V = 0$$\nSolving for $\\alpha$ using the quadratic formula gives two possible solutions:\n$$\\alpha = \\frac{-c \\pm \\sqrt{c^2 - 4(\\frac{1}{2})(\\Delta V)}}{2(\\frac{1}{2})} = -c \\pm \\sqrt{c^2 - 2\\Delta V}$$\n\nFor the momentum change $\\Delta \\mathbf{p}$ to be physically meaningful (i.e., a real-valued vector), the scalar $\\alpha$ must be a real number. This requires the discriminant of the quadratic equation to be non-negative:\n$$c^2 - 2\\Delta V \\ge 0$$\nIf this condition is not met, a real solution for $\\alpha$ that conserves energy does not exist, and the hop must be rejected. Therefore, the scalar expression whose negativity indicates that the hop must be rejected is $c^2 - 2\\Delta V$. This completes the second part of the problem.\n\nFor the first part, we must determine which of the two solutions for $\\alpha$ to choose. The problem specifies a convention: the post-hop velocity component along $\\hat{\\mathbf{d}}$ must retain the sign of the pre-hop component $c$.\nLet the post-hop momentum be $\\mathbf{p}' = \\mathbf{p} + \\alpha \\hat{\\mathbf{d}}$. The post-hop velocity component along $\\hat{\\mathbf{d}}$ is $c'$:\n$$c' \\equiv \\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\mathbf{p}' = \\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} (\\mathbf{p} + \\alpha \\hat{\\mathbf{d}}) = (\\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\mathbf{p}) + \\alpha (\\hat{\\mathbf{d}}^{\\mathsf{T}} M^{-1} \\hat{\\mathbf{d}}) = c + \\alpha$$\nSubstituting the two solutions for $\\alpha$:\n$$c'_{1} = c + (-c + \\sqrt{c^2 - 2\\Delta V}) = \\sqrt{c^2 - 2\\Delta V}$$\n$$c'_{2} = c + (-c - \\sqrt{c^2 - 2\\Delta V}) = -\\sqrt{c^2 - 2\\Delta V}$$\nThe square root is, by definition, non-negative. Thus, $c'_{1} \\ge 0$ and $c'_{2} \\le 0$. The convention requires that $\\mathrm{sgn}(c') = \\mathrm{sgn}(c)$, where $\\mathrm{sgn}$ is the sign function.\n- If $c > 0$, we must choose the non-negative solution for $c'$, so $c' = c'_{1}$. This corresponds to selecting $\\alpha_1 = -c + \\sqrt{c^2 - 2\\Delta V}$.\n- If $c < 0$, we must choose the non-positive solution for $c'$, so $c' = c'_{2}$. This corresponds to selecting $\\alpha_2 = -c - \\sqrt{c^2 - 2\\Delta V}$.\n- If $c = 0$, the convention requires $c'=0$. This is possible only if $c^2 - 2\\Delta V = 0$, which means $\\Delta V = 0$. In this case, both solutions for $\\alpha$ are zero.\n\nThese three cases can be unified into a single expression for $c'$ using the sign function, $\\mathrm{sgn}(c)$:\n$$c' = \\mathrm{sgn}(c) \\sqrt{c^2 - 2\\Delta V}$$\nFrom $c' = c + \\alpha$, we find the unique value for $\\alpha$ that satisfies the convention:\n$$\\alpha = c' - c = -c + \\mathrm{sgn}(c) \\sqrt{c^2 - 2\\Delta V}$$\nFinally, the post-hop momentum $\\mathbf{p}'$ is given by:\n$$\\mathbf{p}' = \\mathbf{p} + \\alpha \\hat{\\mathbf{d}} = \\mathbf{p} + \\left( -c + \\mathrm{sgn}(c) \\sqrt{c^2 - 2 \\Delta V} \\right) \\hat{\\mathbf{d}}$$\nThis provides the closed-form expression for the post-hop momentum when the hop is accepted.\n\nThe problem also mentions a condition of minimizing the magnitude change. The magnitude change of the momentum is $\\|\\Delta \\mathbf{p}\\|$, which is proportional to $|\\alpha|$. A careful analysis confirms that the choice of $\\alpha$ that retains the sign of $c$ is the same that minimizes $|\\alpha|$, so the two conventions are consistent.\n\nThe two requested expressions are now derived. First, the post-hop momentum $\\mathbf{p}'$. Second, the scalar expression $c^2-2\\Delta V$, whose negativity signals a rejected hop.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\mathbf{p} + \\left( -c + \\mathrm{sgn}(c) \\sqrt{c^2 - 2 \\Delta V} \\right) \\hat{\\mathbf{d}} & c^2 - 2 \\Delta V\n\\end{pmatrix}\n}\n$$", "id": "2652129"}]}