{"hands_on_practices": [{"introduction": "Mastering the Redfield and Lindblad formalisms begins with the ability to translate the abstract operator equations into a concrete matrix representation. This practice guides you through the essential process of constructing the Liouvillian superoperator as a matrix for a simple, yet illustrative, three-level system undergoing irreversible relaxation [@problem_id:2669369]. By explicitly calculating the matrix elements that govern the evolution of populations and coherences, you will gain a hands-on understanding of how the Gorini-Kossakowski-Sudarshan-Lindblad (GKSL) equation is implemented in practice to solve for the system's time evolution.", "problem": "A $3$-level molecular system in a solvent is modeled as a ladder $|3\\rangle \\to |2\\rangle \\to |1\\rangle$ with irreversible relaxation driven by a weak, Markovian environment. Under weak system-bath coupling and the secular approximation (as in the derivation of the Redfield master equation reduced to the Gorini-Kossakowski-Sudarshan-Lindblad (GKSL) form), the density operator $\\rho$ obeys the Lindblad master equation\n$$\n\\frac{d\\rho}{dt} \\;=\\; \\sum_{\\alpha} \\Big( L_{\\alpha}\\,\\rho\\,L_{\\alpha}^{\\dagger} \\;-\\; \\frac{1}{2}\\,\\{L_{\\alpha}^{\\dagger}L_{\\alpha}, \\rho\\} \\Big),\n$$\nwith zero Hamiltonian. The only jump operators are\n$$\nL_{32} \\;=\\; \\sqrt{\\gamma_{32}}\\,|2\\rangle\\langle 3|, \\qquad L_{21} \\;=\\; \\sqrt{\\gamma_{21}}\\,|1\\rangle\\langle 2|,\n$$\nwhere $\\gamma_{32} > 0$ and $\\gamma_{21} > 0$ are fixed rate constants, and there are no other dissipative channels. Let $\\mathcal{L}$ denote the Liouvillian superoperator defined by the right-hand side, acting linearly on operators.\n\nTasks:\n- Using the fundamental definition above, construct the Liouvillian $\\mathcal{L}$ explicitly as a matrix acting on the vectorized density operator $\\mathrm{vec}(\\rho)$ in the ordered operator basis \n$$\n\\big\\{|1\\rangle\\langle 1|,\\,|2\\rangle\\langle 2|,\\,|3\\rangle\\langle 3|,\\,|1\\rangle\\langle 2|,\\,|2\\rangle\\langle 1|,\\,|1\\rangle\\langle 3|,\\,|3\\rangle\\langle 1|,\\,|2\\rangle\\langle 3|,\\,|3\\rangle\\langle 2|\\big\\}.\n$$\nShow its block structure in terms of populations and coherences, and give all nonzero matrix elements.\n- Compute the matrix exponential $\\exp(\\mathcal{L}t)$ and use it to evolve the initial state $\\rho(0) = |3\\rangle\\langle 3|$ to time $t \\ge 0$. Assume $\\gamma_{21} \\neq \\gamma_{32}$.\n- Let $\\rho_{11}(t) = \\langle 1|\\rho(t)|1\\rangle$ denote the time-dependent population of level $|1\\rangle$. Express the final result for $\\rho_{11}(t)$ as a single closed-form analytic expression in terms of $\\gamma_{21}$, $\\gamma_{32}$, and $t$. No rounding is required. The answer is dimensionless; do not include units.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It is a standard exercise in the theory of open quantum systems, specifically applying the Lindblad master equation to a simple, representative model. All required information is provided, and the tasks are clearly defined. Therefore, the problem is valid, and we may proceed to the solution.\n\nThe evolution of the density operator $\\rho$ is governed by the Gorini-Kossakowski-Sudarshan-Lindblad (GKSL) master equation. With a zero Hamiltonian ($H=0$) and the specified jump operators $L_{32} = \\sqrt{\\gamma_{32}}\\,|2\\rangle\\langle 3|$ and $L_{21} = \\sqrt{\\gamma_{21}}\\,|1\\rangle\\langle 2|$, the equation is:\n$$\n\\frac{d\\rho}{dt} = \\mathcal{L}(\\rho) = \\left( L_{21}\\rho L_{21}^{\\dagger} - \\frac{1}{2}\\{L_{21}^{\\dagger}L_{21}, \\rho\\} \\right) + \\left( L_{32}\\rho L_{32}^{\\dagger} - \\frac{1}{2}\\{L_{32}^{\\dagger}L_{32}, \\rho\\} \\right)\n$$\nWe identify the components of the Liouvillian superoperator $\\mathcal{L}$.\nFirst, we calculate the required operator products:\n$L_{21}^{\\dagger}L_{21} = (\\sqrt{\\gamma_{21}}\\,|2\\rangle\\langle 1|)(\\sqrt{\\gamma_{21}}\\,|1\\rangle\\langle 2|) = \\gamma_{21}|2\\rangle\\langle 2|$.\n$L_{32}^{\\dagger}L_{32} = (\\sqrt{\\gamma_{32}}\\,|3\\rangle\\langle 2|)(\\sqrt{\\gamma_{32}}\\,|2\\rangle\\langle 3|) = \\gamma_{32}|3\\rangle\\langle 3|$.\n\nThe master equation becomes:\n$$\n\\frac{d\\rho}{dt} = \\gamma_{21}|1\\rangle\\langle 2|\\rho|2\\rangle\\langle 1| - \\frac{\\gamma_{21}}{2}(\\rho|2\\rangle\\langle 2| + |2\\rangle\\langle 2|\\rho) + \\gamma_{32}|2\\rangle\\langle 3|\\rho|3\\rangle\\langle 2| - \\frac{\\gamma_{32}}{2}(\\rho|3\\rangle\\langle 3| + |3\\rangle\\langle 3|\\rho)\n$$\nTo construct the matrix representation of $\\mathcal{L}$, we find the equations of motion for the matrix elements $\\rho_{ij} = \\langle i|\\rho|j\\rangle$.\n\nFor the populations ($\\rho_{11}$, $\\rho_{22}$, $\\rho_{33}$):\n$$\n\\dot{\\rho}_{11} = \\langle 1|\\frac{d\\rho}{dt}|1\\rangle = \\gamma_{21}\\langle 1|1\\rangle\\langle 2|\\rho|2\\rangle\\langle 1|1\\rangle - \\frac{\\gamma_{21}}{2}\\langle 1|(\\rho|2\\rangle\\langle 2|+|2\\rangle\\langle 2|\\rho)|1\\rangle + \\dots = \\gamma_{21}\\rho_{22}\n$$\n$$\n\\dot{\\rho}_{22} = \\langle 2|\\frac{d\\rho}{dt}|2\\rangle = \\gamma_{32}\\rho_{33} - \\frac{\\gamma_{21}}{2}\\langle 2|(\\rho|2\\rangle\\langle 2|+|2\\rangle\\langle 2|\\rho)|2\\rangle = \\gamma_{32}\\rho_{33} - \\frac{\\gamma_{21}}{2}(2\\rho_{22}) = \\gamma_{32}\\rho_{33} - \\gamma_{21}\\rho_{22}\n$$\n$$\n\\dot{\\rho}_{33} = \\langle 3|\\frac{d\\rho}{dt}|3\\rangle = -\\frac{\\gamma_{32}}{2}\\langle 3|(\\rho|3\\rangle\\langle 3|+|3\\rangle\\langle 3|\\rho)|3\\rangle = -\\frac{\\gamma_{32}}{2}(2\\rho_{33}) = -\\gamma_{32}\\rho_{33}\n$$\n\nFor the coherences ($\\rho_{ij}$ with $i \\neq j$):\nThe general equation for the off-diagonal elements under the secular approximation and zero Hamiltonian is $\\dot{\\rho}_{ij} = - \\frac{1}{2}(\\Gamma_i + \\Gamma_j)\\rho_{ij}$, where $\\Gamma_k = \\sum_{\\alpha} \\langle k| L_\\alpha^\\dagger L_\\alpha |k\\rangle$.\nHere, $\\sum_{\\alpha} L_\\alpha^\\dagger L_\\alpha = \\gamma_{21}|2\\rangle\\langle 2| + \\gamma_{32}|3\\rangle\\langle 3|$.\nSo, $\\Gamma_1=0$, $\\Gamma_2=\\gamma_{21}$, and $\\Gamma_3=\\gamma_{32}$.\n$$\n\\dot{\\rho}_{12} = -\\frac{1}{2}(\\Gamma_1+\\Gamma_2)\\rho_{12} = -\\frac{\\gamma_{21}}{2}\\rho_{12} \\quad (\\text{and } \\dot{\\rho}_{21} = \\dot{\\rho}_{12}^*)\n$$\n$$\n\\dot{\\rho}_{13} = -\\frac{1}{2}(\\Gamma_1+\\Gamma_3)\\rho_{13} = -\\frac{\\gamma_{32}}{2}\\rho_{13} \\quad (\\text{and } \\dot{\\rho}_{31} = \\dot{\\rho}_{13}^*)\n$$\n$$\n\\dot{\\rho}_{23} = -\\frac{1}{2}(\\Gamma_2+\\Gamma_3)\\rho_{23} = -\\frac{\\gamma_{21}+\\gamma_{32}}{2}\\rho_{23} \\quad (\\text{and } \\dot{\\rho}_{32} = \\dot{\\rho}_{23}^*)\n$$\nThe vectorized state is $v = (\\rho_{11}, \\rho_{22}, \\rho_{33}, \\rho_{12}, \\rho_{21}, \\rho_{13}, \\rho_{31}, \\rho_{23}, \\rho_{32})^T$. The dynamics are $\\dot{v} = \\mathcal{L}v$. The Liouvillian matrix $\\mathcal{L}$ is block-diagonal, separating populations from coherences.\n\nThe population block, acting on $(\\rho_{11}, \\rho_{22}, \\rho_{33})^T$, is:\n$$\n\\mathcal{L}_{pop} = \\begin{pmatrix} 0 & \\gamma_{21} & 0 \\\\ 0 & -\\gamma_{21} & \\gamma_{32} \\\\ 0 & 0 & -\\gamma_{32} \\end{pmatrix}\n$$\nThe coherence block is a diagonal $6 \\times 6$ matrix acting on the remaining elements. The full $9 \\times 9$ Liouvillian matrix $\\mathcal{L}$ is:\n$$\n\\mathcal{L} = \\begin{pmatrix}\n0 & \\gamma_{21} & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & -\\gamma_{21} & \\gamma_{32} & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & -\\gamma_{32} & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & -\\frac{\\gamma_{21}}{2} & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & -\\frac{\\gamma_{21}}{2} & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{32}}{2} & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{32}}{2} & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{21}+\\gamma_{32}}{2} & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & -\\frac{\\gamma_{21}+\\gamma_{32}}{2}\n\\end{pmatrix}\n$$\nThe non-zero matrix elements are the entries of $\\mathcal{L}_{pop}$ and the diagonal elements for the coherences as listed above. This completes the first task.\n\nFor the second task, we evolve the initial state $\\rho(0) = |3\\rangle\\langle 3|$. In vectorized form, this corresponds to an initial vector $v(0) = (0, 0, 1, 0, 0, 0, 0, 0, 0)^T$. Since the initial state has no coherences and the Liouvillian does not couple populations to coherences, the coherences remain zero for all $t \\ge 0$. The evolution is entirely within the population subspace:\n$$\n\\begin{pmatrix} \\rho_{11}(t) \\\\ \\rho_{22}(t) \\\\ \\rho_{33}(t) \\end{pmatrix} = \\exp(\\mathcal{L}_{pop}t) \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\end{pmatrix}\n$$\nThis is equivalent to solving the system of ordinary differential equations for populations with the initial condition $\\rho_{11}(0)=0$, $\\rho_{22}(0)=0$, and $\\rho_{33}(0)=1$.\n1. Solve for $\\rho_{33}(t)$:\n$\\dot{\\rho}_{33} = -\\gamma_{32}\\rho_{33}$ with $\\rho_{33}(0)=1$. The solution is $\\rho_{33}(t) = \\exp(-\\gamma_{32}t)$.\n\n2. Solve for $\\rho_{22}(t)$:\n$\\dot{\\rho}_{22} = -\\gamma_{21}\\rho_{22} + \\gamma_{32}\\rho_{33}(t) = -\\gamma_{21}\\rho_{22} + \\gamma_{32}\\exp(-\\gamma_{32}t)$.\nThis is a first-order linear inhomogeneous differential equation with initial condition $\\rho_{22}(0)=0$. The solution, for $\\gamma_{21} \\neq \\gamma_{32}$, is:\n$$\n\\rho_{22}(t) = \\frac{\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}}\\left(\\exp(-\\gamma_{32}t) - \\exp(-\\gamma_{21}t)\\right)\n$$\n\n3. Solve for $\\rho_{11}(t)$:\n$\\dot{\\rho}_{11} = \\gamma_{21}\\rho_{22}(t)$ with $\\rho_{11}(0)=0$. We integrate:\n$$\n\\rho_{11}(t) = \\int_0^t \\gamma_{21}\\rho_{22}(\\tau)d\\tau = \\gamma_{21} \\int_0^t \\frac{\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}}\\left(\\exp(-\\gamma_{32}\\tau) - \\exp(-\\gamma_{21}\\tau)\\right) d\\tau\n$$\n$$\n\\rho_{11}(t) = \\frac{\\gamma_{21}\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}} \\left[-\\frac{1}{\\gamma_{32}}\\exp(-\\gamma_{32}\\tau) + \\frac{1}{\\gamma_{21}}\\exp(-\\gamma_{21}\\tau)\\right]_0^t\n$$\n$$\n\\rho_{11}(t) = \\frac{\\gamma_{21}\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}} \\left( \\left(-\\frac{1}{\\gamma_{32}}\\exp(-\\gamma_{32}t) + \\frac{1}{\\gamma_{21}}\\exp(-\\gamma_{21}t)\\right) - \\left(-\\frac{1}{\\gamma_{32}} + \\frac{1}{\\gamma_{21}}\\right) \\right)\n$$\n$$\n\\rho_{11}(t) = \\frac{\\gamma_{21}\\gamma_{32}}{\\gamma_{21}-\\gamma_{32}} \\left( \\frac{\\gamma_{32}\\exp(-\\gamma_{21}t) - \\gamma_{21}\\exp(-\\gamma_{32}t)}{\\gamma_{21}\\gamma_{32}} - \\frac{\\gamma_{32}-\\gamma_{21}}{\\gamma_{21}\\gamma_{32}} \\right)\n$$\n$$\n\\rho_{11}(t) = \\frac{1}{\\gamma_{21}-\\gamma_{32}} \\left( (\\gamma_{32}\\exp(-\\gamma_{21}t) - \\gamma_{21}\\exp(-\\gamma_{32}t)) - (\\gamma_{32}-\\gamma_{21}) \\right)\n$$\nThis expression can be simplified to yield the final closed-form answer for $\\rho_{11}(t)$:\n$$\n\\rho_{11}(t) = 1 + \\frac{\\gamma_{32}\\exp(-\\gamma_{21}t) - \\gamma_{21}\\exp(-\\gamma_{32}t)}{\\gamma_{21}-\\gamma_{32}}\n$$\nThis is equivalent to the more standard form:\n$$\n\\rho_{11}(t) = 1 - \\frac{\\gamma_{21}\\exp(-\\gamma_{32}t) - \\gamma_{32}\\exp(-\\gamma_{21}t)}{\\gamma_{21}-\\gamma_{32}}\n$$\nThis completes the final task.", "answer": "$$\\boxed{1 - \\frac{\\gamma_{21}\\exp(-\\gamma_{32}t) - \\gamma_{32}\\exp(-\\gamma_{21}t)}{\\gamma_{21}-\\gamma_{32}}}$$", "id": "2669369"}, {"introduction": "While the Lindblad equation describes the continuous time evolution of a quantum system, an alternative and powerful perspective is provided by the operator-sum, or Kraus, representation, which describes the dynamics over a small but finite time step $\\delta t$. This exercise asks you to derive the set of Kraus operators corresponding to relaxation and dephasing processes for a two-level system [@problem_id:2669296]. This skill is not just a mathematical transformation; it provides deep physical insight into open system dynamics as a series of \"quantum jumps\" and is foundational for developing quantum simulation algorithms.", "problem": "A two-level electronic subsystem (ground state $\\lvert 0 \\rangle$ and excited state $\\lvert 1 \\rangle$) embedded in a reaction network experiences both population relaxation from $\\lvert 1 \\rangle$ to $\\lvert 0 \\rangle$ at rate $\\gamma_{1}$ and pure dephasing at rate $\\gamma_{\\phi}$. Assume Markovian dynamics with no coherent Hamiltonian evolution. The reduced dynamics are described by the Gorini–Kossakowski–Sudarshan–Lindblad generator in the form\n$$\n\\frac{d\\rho}{dt} \\;=\\; \\sum_{j} \\left( L_{j}\\,\\rho\\,L_{j}^{\\dagger} \\;-\\; \\frac{1}{2}\\,\\{ L_{j}^{\\dagger} L_{j},\\,\\rho \\} \\right),\n$$\nwhere the relaxation is represented by the jump operator $L_{1} = \\sqrt{\\gamma_{1}}\\,\\lvert 0 \\rangle \\langle 1 \\rvert$ and the pure dephasing is represented by the jump operator $L_{\\phi} = \\sqrt{\\gamma_{\\phi}/2}\\,\\sigma_{z}$ with $\\sigma_{z} = \\lvert 0 \\rangle \\langle 0 \\rvert - \\lvert 1 \\rangle \\langle 1 \\rvert$. For a small time step $\\delta t$, construct an operator-sum (Kraus) representation $\\rho(t+\\delta t) = \\sum_{k} K_{k}\\,\\rho(t)\\,K_{k}^{\\dagger} + O(\\delta t^{2})$ that is trace-preserving to order $O(\\delta t)$. Work in the computational basis $\\{ \\lvert 0 \\rangle, \\lvert 1 \\rangle \\}$ and keep terms up to order $O(\\delta t)$.\n\nTasks:\n- Starting from the Lindblad generator given above, derive a short-time Kraus representation $\\{K_{k}\\}$ that reproduces the generator to order $O(\\delta t)$ and verify that $\\sum_{k} K_{k}^{\\dagger} K_{k} = I + O(\\delta t^{2})$.\n- Express the explicit $2\\times 2$ matrix for the no-jump Kraus operator $K_{0}$ to order $O(\\delta t)$ in the computational basis.\n\nYour final answer must be the $2\\times 2$ matrix expression for $K_{0}$ (no rounding required).", "solution": "The problem statement is scientifically grounded, well-posed, and objective. It presents a standard exercise in the theory of open quantum systems, specifically the derivation of a short-time Kraus representation from a given Lindblad master equation for a two-level system. All necessary definitions and parameters are provided, and no inconsistencies or ambiguities are present. The problem is therefore valid, and we may proceed with the solution.\n\nThe evolution of the reduced density matrix $\\rho$ under Markovian dynamics is governed by the Lindblad master equation. In the absence of a coherent Hamiltonian ($H=0$), this equation takes the form:\n$$\n\\frac{d\\rho}{dt} = \\mathcal{L}(\\rho) = \\sum_{j} \\left( L_{j}\\,\\rho\\,L_{j}^{\\dagger} - \\frac{1}{2}\\,\\{ L_{j}^{\\dagger} L_{j},\\,\\rho \\} \\right)\n$$\nwhere $\\mathcal{L}$ is the Lindbladian super-operator and $\\{A, B\\} = AB + BA$ is the anticommutator. The formal solution for a small time step $\\delta t$ is $\\rho(t+\\delta t) = \\exp(\\mathcal{L}\\delta t) \\rho(t)$. Expanding the exponential to first order in $\\delta t$ gives:\n$$\n\\rho(t+\\delta t) \\approx (I_{\\text{super}} + \\mathcal{L}\\delta t) \\rho(t)\n$$\nwhere $I_{\\text{super}}$ is the identity super-operator. Substituting the expression for $\\mathcal{L}$ yields:\n$$\n\\rho(t+\\delta t) \\approx \\rho(t) + \\delta t \\sum_{j} \\left( L_{j}\\,\\rho(t)\\,L_{j}^{\\dagger} - \\frac{1}{2}\\,L_{j}^{\\dagger} L_{j}\\,\\rho(t) - \\frac{1}{2}\\,\\rho(t)\\,L_{j}^{\\dagger} L_{j} \\right)\n$$\nThis expression can be mapped onto the operator-sum (Kraus) representation, $\\rho(t+\\delta t) = \\sum_{k} K_{k}\\,\\rho(t)\\,K_{k}^{\\dagger}$, by defining a set of Kraus operators $\\{K_k\\}$ that reproduce the dynamics to order $O(\\delta t)$. A standard construction for these operators is:\n$$\nK_{0} = I - \\frac{\\delta t}{2} \\sum_{j} L_{j}^{\\dagger} L_{j} \\quad \\text{(the 'no-jump' operator)}\n$$\n$$\nK_{j} = \\sqrt{\\delta t}\\,L_{j} \\quad \\text{(for each jump process } j > 0)\n$$\nIn this problem, we have two dissipative channels, so our jump operators are $L_{1} = \\sqrt{\\gamma_{1}}\\,\\lvert 0 \\rangle \\langle 1 \\rvert$ and $L_{\\phi} = \\sqrt{\\gamma_{\\phi}/2}\\,\\sigma_{z}$. The index $j$ runs over $\\{1, \\phi\\}$. The corresponding Kraus operators are:\n$$\nK_{1} = \\sqrt{\\delta t}\\,L_{1} = \\sqrt{\\gamma_{1}\\delta t}\\,\\lvert 0 \\rangle \\langle 1 \\rvert\n$$\n$$\nK_{\\phi} = \\sqrt{\\delta t}\\,L_{\\phi} = \\sqrt{\\frac{\\gamma_{\\phi}\\delta t}{2}}\\,\\sigma_{z}\n$$\nAnd the no-jump operator $K_0$ is:\n$$\nK_{0} = I - \\frac{\\delta t}{2} \\left( L_{1}^{\\dagger}L_{1} + L_{\\phi}^{\\dagger}L_{\\phi} \\right)\n$$\nWe must first compute the products $L_{j}^{\\dagger}L_{j}$.\nFor the relaxation channel:\n$L_{1}^{\\dagger} = (\\sqrt{\\gamma_{1}}\\,\\lvert 0 \\rangle \\langle 1 \\rvert)^{\\dagger} = \\sqrt{\\gamma_{1}}\\,\\lvert 1 \\rangle \\langle 0 \\rvert$.\n$$\nL_{1}^{\\dagger}L_{1} = (\\sqrt{\\gamma_{1}}\\,\\lvert 1 \\rangle \\langle 0 \\rvert)(\\sqrt{\\gamma_{1}}\\,\\lvert 0 \\rangle \\langle 1 \\rvert) = \\gamma_{1}\\,\\lvert 1 \\rangle \\langle 1 \\rvert\n$$\nFor the pure dephasing channel, we use $\\sigma_{z}^{\\dagger} = \\sigma_{z}$ and $\\sigma_{z}^{2} = I$:\n$L_{\\phi}^{\\dagger} = (\\sqrt{\\gamma_{\\phi}/2}\\,\\sigma_{z})^{\\dagger} = \\sqrt{\\gamma_{\\phi}/2}\\,\\sigma_{z}$.\n$$\nL_{\\phi}^{\\dagger}L_{\\phi} = (\\sqrt{\\frac{\\gamma_{\\phi}}{2}}\\,\\sigma_{z})(\\sqrt{\\frac{\\gamma_{\\phi}}{2}}\\,\\sigma_{z}) = \\frac{\\gamma_{\\phi}}{2}\\,\\sigma_{z}^{2} = \\frac{\\gamma_{\\phi}}{2}\\,I\n$$\nNow, we substitute these back into the expression for $K_{0}$:\n$$\nK_{0} = I - \\frac{\\delta t}{2} \\left( \\gamma_{1}\\,\\lvert 1 \\rangle \\langle 1 \\rvert + \\frac{\\gamma_{\\phi}}{2}\\,I \\right)\n$$\nDistributing the terms, we find the symbolic form of $K_{0}$ to order $O(\\delta t)$:\n$$\nK_{0} = I - \\frac{\\gamma_{1}\\delta t}{2}\\,\\lvert 1 \\rangle \\langle 1 \\rvert - \\frac{\\gamma_{\\phi}\\delta t}{4}\\,I = \\left(1 - \\frac{\\gamma_{\\phi}\\delta t}{4}\\right)I - \\frac{\\gamma_{1}\\delta t}{2}\\,\\lvert 1 \\rangle \\langle 1 \\rvert\n$$\nAs required, we verify that the Kraus operators satisfy the trace-preserving condition $\\sum_{k} K_{k}^{\\dagger}K_{k} = I$ up to order $O(\\delta t^{2})$.\n$$\n\\sum_{k} K_{k}^{\\dagger}K_{k} = K_{0}^{\\dagger}K_{0} + K_{1}^{\\dagger}K_{1} + K_{\\phi}^{\\dagger}K_{\\phi}\n$$\nThe operator $K_{0}$ is Hermitian, so $K_{0}^{\\dagger} = K_{0}$.\n$$\nK_{0}^{\\dagger}K_{0} = K_{0}^{2} = \\left( I - \\frac{\\delta t}{2} \\sum_{j} L_{j}^{\\dagger}L_{j} \\right)^{2} = I - \\delta t \\sum_{j} L_{j}^{\\dagger}L_{j} + O(\\delta t^{2})\n$$\n$$\nK_{1}^{\\dagger}K_{1} = (\\sqrt{\\gamma_{1}\\delta t}\\,\\lvert 0 \\rangle \\langle 1 \\rvert)^{\\dagger}(\\sqrt{\\gamma_{1}\\delta t}\\,\\lvert 0 \\rangle \\langle 1 \\rvert) = \\delta t\\,L_{1}^{\\dagger}L_{1}\n$$\n$$\nK_{\\phi}^{\\dagger}K_{\\phi} = (\\sqrt{\\frac{\\gamma_{\\phi}\\delta t}{2}}\\,\\sigma_{z})^{\\dagger}(\\sqrt{\\frac{\\gamma_{\\phi}\\delta t}{2}}\\,\\sigma_{z}) = \\delta t\\,L_{\\phi}^{\\dagger}L_{\\phi}\n$$\nSumming these contributions:\n$$\n\\sum_{k} K_{k}^{\\dagger}K_{k} = \\left( I - \\delta t \\sum_{j} L_{j}^{\\dagger}L_{j} \\right) + \\delta t\\,L_{1}^{\\dagger}L_{1} + \\delta t\\,L_{\\phi}^{\\dagger}L_{\\phi} + O(\\delta t^{2})\n$$\n$$\n= I - \\delta t (L_{1}^{\\dagger}L_{1} + L_{\\phi}^{\\dagger}L_{\\phi}) + \\delta t\\,L_{1}^{\\dagger}L_{1} + \\delta t\\,L_{\\phi}^{\\dagger}L_{\\phi} + O(\\delta t^{2}) = I + O(\\delta t^{2})\n$$\nThe condition is satisfied.\n\nFinally, we express $K_{0}$ as a $2 \\times 2$ matrix in the computational basis $\\{ \\lvert 0 \\rangle, \\lvert 1 \\rangle \\}$, where $\\lvert 0 \\rangle = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ and $\\lvert 1 \\rangle = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$. The matrix representations of the operators are:\n$$\nI = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} \\quad \\text{and} \\quad \\lvert 1 \\rangle \\langle 1 \\rvert = \\begin{pmatrix} 0 & 0 \\\\ 0 & 1 \\end{pmatrix}\n$$\nSubstituting these into the expression for $K_{0}$:\n$$\nK_{0} = \\left(1 - \\frac{\\gamma_{\\phi}\\delta t}{4}\\right)\\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} - \\frac{\\gamma_{1}\\delta t}{2}\\begin{pmatrix} 0 & 0 \\\\ 0 & 1 \\end{pmatrix}\n$$\n$$\nK_{0} = \\begin{pmatrix} 1 - \\frac{\\gamma_{\\phi}\\delta t}{4} & 0 \\\\ 0 & 1 - \\frac{\\gamma_{\\phi}\\delta t}{4} \\end{pmatrix} - \\begin{pmatrix} 0 & 0 \\\\ 0 & \\frac{\\gamma_{1}\\delta t}{2} \\end{pmatrix}\n$$\n$$\nK_{0} = \\begin{pmatrix} 1 - \\frac{\\gamma_{\\phi}\\delta t}{4} & 0 \\\\ 0 & 1 - \\frac{\\gamma_{\\phi}\\delta t}{4} - \\frac{\\gamma_{1}\\delta t}{2} \\end{pmatrix}\n$$\nThis is the required matrix representation for the no-jump Kraus operator $K_{0}$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n1 - \\frac{\\gamma_{\\phi}\\delta t}{4} & 0 \\\\\n0 & 1 - \\frac{\\gamma_{1}\\delta t}{2} - \\frac{\\gamma_{\\phi}\\delta t}{4}\n\\end{pmatrix}\n}\n$$", "id": "2669296"}, {"introduction": "A key success of open quantum system theory is its ability to predict reaction rates from first principles, bridging the gap between microscopic quantum dynamics and macroscopic chemical kinetics. This computational practice challenges you to implement the Redfield/GKSL rate formula, connecting a bath's spectral density $J(\\omega)$ and temperature $T$ to a transition rate constant $k_{i \\to j}$ [@problem_id:2669298]. By numerically computing this rate and comparing it to the classical Arrhenius model, you will directly explore the quantum origins of thermal activation and identify the regimes where classical descriptions hold and where they must be replaced by a more fundamental quantum treatment.", "problem": "Consider a two-level subsystem embedded in a vibrational environment, modeled as a harmonic bath in thermal equilibrium at temperature $T$. The subsystem has a lower state $i$ and an upper state $j$ separated by an energy difference $\\Delta = E_j - E_i > 0$ (a Bohr frequency). The system couples weakly to the bath through a single system operator with dimensionless strength $g$, and the bath is characterized by a spectral density $J(\\omega)$. Work in the weak-coupling, Born-Markov, and secular limits so that the reduced dynamics can be written in the Gorini–Kossakowski–Sudarshan–Lindblad (GKSL) form, which is equivalent to the secular Redfield master equation under these assumptions. Use natural units with $\\hbar = 1$ and $k_\\mathrm{B} = 1$, so that energies, angular frequencies, and temperatures share the same units, and the rate constants are expressed in $\\mathrm{s}^{-1}$.\n\nStarting from the definition of the bath correlation function for a thermal harmonic environment and its power spectrum, use the fluctuation-dissipation relation to obtain the transition rate from the lower state $i$ to the upper state $j$ under the GKSL/Redfield description in terms of $J(\\omega)$ and $T$. Your derivation must begin from the following foundational base:\n- The Born-Markov-secular approximation for a two-level system weakly coupled to a thermal harmonic bath, where transition rates are given by the bath power spectrum evaluated at the Bohr frequencies of the system.\n- The definition of the Bose-Einstein occupation number for mode angular frequency $\\omega$ at temperature $T$.\n- The relationship between the bath correlation function and the spectral density, ensuring detailed balance.\n\nThen:\n1. Using the derived expression, write a program that numerically computes the upward transition rate $k_{i \\to j}(T)$ for given $g$, $\\Delta$, and $J(\\omega)$.\n2. Fit an Arrhenius model $k_\\mathrm{Arr}(T) = A \\exp(-E_a/T)$ to the numerically computed $k_{i \\to j}(T)$ values across a provided temperature set by performing a linear least-squares regression of $\\ln k$ versus $1/T$ to extract the best-fit pre-exponential factor $A$ and activation energy $E_a$ (both in $\\mathrm{s}^{-1}$).\n3. Quantify the discrepancy between the numerically computed $k_{i \\to j}(T)$ and the Arrhenius fit using the root-mean-square deviation in the natural logarithm,\n$$\n\\mathrm{RMSE}_{\\ln} = \\sqrt{\\frac{1}{N}\\sum_{n=1}^N \\left(\\ln k_{i \\to j}(T_n) - \\ln k_\\mathrm{Arr}(T_n)\\right)^2},\n$$\nwhere $N$ is the number of temperatures in the set.\n\nUse the following test suite of three cases. All quantities are in natural units with $\\hbar = 1$ and $k_\\mathrm{B} = 1$, so report rates in $\\mathrm{s}^{-1}$ and temperatures and energies in $\\mathrm{s}^{-1}$.\n\nDefine the following spectral densities:\n- Drude-Lorentz (also called Debye) spectral density: $J_\\mathrm{D}(\\omega) = \\dfrac{2 \\lambda \\, \\omega_c \\, \\omega}{\\omega^2 + \\omega_c^2}$.\n- Super-ohmic (cubic with exponential cutoff): $J_\\mathrm{S}(\\omega) = \\eta \\, \\omega^3 \\, e^{-\\omega/\\omega_c}$.\n\nTest cases:\n- Case 1 (low-temperature regime, Drude-Lorentz): $g = 0.05$, $\\Delta = 80.0$, $\\lambda = 50.0$, $\\omega_c = 100.0$, temperatures $T \\in \\{10.0, 15.0, 20.0, 25.0\\}$.\n- Case 2 (high-temperature regime, Drude-Lorentz): $g = 0.05$, $\\Delta = 80.0$, $\\lambda = 50.0$, $\\omega_c = 100.0$, temperatures $T \\in \\{200.0, 400.0, 800.0, 1600.0\\}$.\n- Case 3 (super-ohmic): $g = 0.05$, $\\Delta = 50.0$, $\\eta = 1.0 \\times 10^{-4}$, $\\omega_c = 200.0$, temperatures $T \\in \\{20.0, 50.0, 100.0, 200.0\\}$.\n\nYour program must:\n- Implement the Bose-Einstein occupation number at temperature $T$.\n- Implement $J_\\mathrm{D}(\\omega)$ and $J_\\mathrm{S}(\\omega)$ as defined above.\n- Compute $k_{i \\to j}(T)$ for the temperatures specified in each case using your derived Redfield/GKSL expression.\n- Perform the Arrhenius fit for each case and compute $\\mathrm{RMSE}_{\\ln}$.\n- Output, for each case, a list of three numbers: the fitted activation energy $E_a$ (in $\\mathrm{s}^{-1}$), the fitted pre-exponential factor $A$ (in $\\mathrm{s}^{-1}$), and $\\mathrm{RMSE}_{\\ln}$ (dimensionless). The final output must be a single line containing the three case results as a comma-separated list of lists, for example, $[[E_{a,1},A_1,\\mathrm{RMSE}_{\\ln,1}],[E_{a,2},A_2,\\mathrm{RMSE}_{\\ln,2}],[E_{a,3},A_3,\\mathrm{RMSE}_{\\ln,3}]]$.\n\nAngle units are not used. Percentages are not used. All requested quantities are floats. The final printout of your program must be exactly one line containing the requested list of lists in the specified format, with no additional text.", "solution": "The problem statement is scientifically grounded, well-posed, and objective. It presents a standard problem in the theory of open quantum systems, specifically the calculation of transition rates within the Born-Markov-secular approximation and subsequent data analysis via an Arrhenius model. All required parameters and functions are explicitly defined, and the premises are consistent with established principles of quantum statistical mechanics. The problem is therefore deemed valid and a solution will be provided.\n\nThe primary task is to derive the expression for the upward transition rate $k_{i \\to j}(T)$ for a two-level system with energy gap $\\Delta = E_j - E_i > 0$, weakly coupled to a thermal harmonic bath at temperature $T$. The derivation will be within the weak-coupling, Born-Markov, and secular limits, which underpins the Gorini–Kossakowski–Sudarshan–Lindblad (GKSL) and secular Redfield master equations.\n\nAccording to Fermi's golden rule, the transition rate between two system eigenstates, say from an initial state $|a\\rangle$ to a final state $|b\\rangle$, is proportional to the square of the matrix element of the interaction Hamiltonian, $|\\langle b | H_{\\text{int}} | a \\rangle|^2$, and the density of final states. For a system interacting with a thermal reservoir, this rate is expressed in terms of the power spectrum of the bath operator fluctuations, evaluated at the transition frequency $\\omega_{ba} = E_b - E_a$. The interaction Hamiltonian is given by $H_{\\text{int}} = g S \\otimes B$, where $S$ is a dimensionless system operator, $g$ is the coupling strength, and $B$ is a bath operator. For transitions between energy eigenstates $|i\\rangle$ and $|j\\rangle$, the system operator $S$ must have non-zero off-diagonal matrix elements, typically taken as the Pauli operator $S = \\sigma_x = |i\\rangle\\langle j| + |j\\rangle\\langle i|$. The transition rate from state $|a\\rangle$ to $|b\\rangle$ is then given by:\n$$\nk_{a \\to b} = g^2 |\\langle b|S|a\\rangle|^2 \\mathcal{S}(\\omega_{ba})\n$$\nwhere $\\mathcal{S}(\\omega) = \\int_{-\\infty}^{\\infty} dt \\, e^{i\\omega t} \\langle B(t)B(0) \\rangle_{\\text{B}}$ is the quantum power spectrum of the bath operator. For $S=\\sigma_x$, the matrix element $|\\langle j|S|i\\rangle|^2 = 1$. The upward transition $i \\to j$ corresponds to a positive transition frequency $\\omega_{ji} = \\Delta > 0$, so the rate is $k_{i \\to j} = g^2 \\mathcal{S}(\\Delta)$.\n\nThe crucial step is to relate the power spectrum $\\mathcal{S}(\\omega)$ to the spectral density $J(\\omega)$ and temperature $T$. This is achieved through the quantum fluctuation-dissipation theorem. For a harmonic oscillator bath in thermal equilibrium, the bath correlation function $\\langle B(t)B(0) \\rangle_{\\text{B}}$ can be expressed in terms of $J(\\omega)$. Its Fourier transform, the power spectrum, is found to be:\n$$\n\\mathcal{S}(\\omega) = 2\\pi J(|\\omega|)\n\\begin{cases}\n    n(|\\omega|, T) + 1 & \\text{if } \\omega > 0 \\\\\n    n(|\\omega|, T)       & \\text{if } \\omega < 0\n\\end{cases}\n$$\nThis form explicitly satisfies the detailed balance condition, also known as the Kubo-Martin-Schwinger (KMS) condition, $\\mathcal{S}(-\\omega) = e^{-\\omega/T} \\mathcal{S}(\\omega)$, given that natural units ($k_B=1$) are used. The function $n(\\omega, T)$ is the Bose-Einstein occupation number for a bosonic mode of frequency $\\omega$ at temperature $T$:\n$$\nn(\\omega, T) = \\frac{1}{e^{\\omega/T} - 1}\n$$\nThe case $\\omega > 0$ corresponds to processes where the system emits energy $\\omega$ to the bath (de-excitation), with a rate proportional to $n(\\omega, T) + 1$ (stimulated and spontaneous emission). The case $\\omega < 0$ corresponds to processes where the system absorbs energy $|\\omega|$ from the bath (excitation), with a rate proportional to $n(|\\omega|, T)$.\n\nThe upward transition $i \\to j$ is an excitation process that requires the system to absorb energy $\\Delta > 0$ from the bath. The relevant transition frequency is $\\omega = \\Delta$. However, the rate is determined by the power spectrum evaluated at the system's transition frequency, which for absorption is taken with a negative sign in some conventions, or directly related to the absorption component of the bath response. To avoid notational ambiguity, we recognize that the rate for absorbing energy $\\Delta$ must be proportional to $n(\\Delta, T)$. The a priori zero-temperature transition rate, which is non-zero only for emission, is found to be proportional to $2\\pi g^2 J(\\Delta)$. The temperature dependence is then introduced through the Bose-Einstein factors.\nThe rate for excitation (absorption of energy $\\Delta$) is:\n$$\nk_{i \\to j}(T) = 2\\pi g^2 J(\\Delta) n(\\Delta, T)\n$$\nThe rate for de-excitation (emission of energy $\\Delta$) is:\n$$\nk_{j \\to i}(T) = 2\\pi g^2 J(\\Delta) [n(\\Delta, T) + 1]\n$$\nThis set of rates correctly satisfies detailed balance: $k_{i \\to j} / k_{j \\to i} = n(\\Delta, T) / [n(\\Delta, T) + 1] = e^{-\\Delta/T}$. The problem requires the upward rate, $k_{i \\to j}(T)$.\n\nWe now analyze its behavior in two limits:\n1.  Low-temperature limit ($T \\ll \\Delta$): Here, $\\Delta/T \\gg 1$, so $e^{\\Delta/T} \\gg 1$. The Bose-Einstein factor simplifies to $n(\\Delta, T) \\approx e^{-\\Delta/T}$. The rate becomes:\n    $$\n    k_{i \\to j}(T) \\approx [2\\pi g^2 J(\\Delta)] e^{-\\Delta/T}\n    $$\n    This is precisely the Arrhenius form $k(T) = A e^{-E_a/T}$, with the activation energy $E_a = \\Delta$ and the pre-exponential factor $A = 2\\pi g^2 J(\\Delta)$.\n2.  High-temperature limit ($T \\gg \\Delta$): Here, $\\Delta/T \\ll 1$, so we can expand the exponential $e^{\\Delta/T} \\approx 1 + \\Delta/T$. The Bose-Einstein factor becomes $n(\\Delta, T) \\approx (\\Delta/T)^{-1} = T/\\Delta$. The rate becomes:\n    $$\n    k_{i \\to j}(T) \\approx 2\\pi g^2 J(\\Delta) \\frac{T}{\\Delta}\n    $$\n    In this regime, the rate is linear in temperature and does not follow the Arrhenius law. A fit to an Arrhenius model is expected to be poor.\n\nThe numerical part of the problem involves the following steps for each test case:\n1.  Define the specified spectral density, $J_\\mathrm{D}(\\omega)$ or $J_\\mathrm{S}(\\omega)$, using the given parameters.\n2.  Compute the upward rate $k_{i \\to j}(T_n)$ for each temperature $T_n$ in the provided set using the derived formula:\n    $$\n    k_n = k_{i \\to j}(T_n) = 2\\pi g^2 J(\\Delta) \\frac{1}{e^{\\Delta/T_n} - 1}\n    $$\n3.  To fit the Arrhenius model $k_\\mathrm{Arr}(T) = A \\exp(-E_a/T)$, we linearize it by taking the natural logarithm: $\\ln k_\\mathrm{Arr}(T) = \\ln A - E_a (1/T)$.\n4.  Perform a linear least-squares regression on the data points $(x_n, y_n) = (1/T_n, \\ln k_n)$. This yields the slope $m$ and intercept $c$ of the best-fit line $y = mx+c$.\n5.  The Arrhenius parameters are then extracted: $E_a = -m$ and $A = e^c$.\n6.  The goodness of fit is quantified by the root-mean-square deviation in the logarithm:\n    $$\n    \\mathrm{RMSE}_{\\ln} = \\sqrt{\\frac{1}{N}\\sum_{n=1}^N (\\ln k_n - (m(1/T_n) + c))^2}\n    $$\nThis procedure is implemented for the three specified cases to obtain the required numerical results.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by computing transition rates, fitting them to an Arrhenius model,\n    and calculating the fit's RMSE for three different test cases.\n    \"\"\"\n\n    # Define spectral density functions\n    def make_drude_lorentz(lambda_val, omega_c):\n        \"\"\"Creates a Drude-Lorentz spectral density function.\"\"\"\n        def J(omega):\n            if omega == 0:\n                return 0.0\n            return (2 * lambda_val * omega_c * omega) / (omega**2 + omega_c**2)\n        return J\n\n    def make_super_ohmic(eta, omega_c):\n        \"\"\"Creates a super-ohmic spectral density function.\"\"\"\n        def J(omega):\n            if omega <= 0: # Defined for omega > 0\n                return 0.0\n            return eta * (omega**3) * np.exp(-omega / omega_c)\n        return J\n\n    # Bose-Einstein occupation number\n    def bose_einstein(omega, T):\n        \"\"\"Calculates the Bose-Einstein occupation number.\"\"\"\n        if T <= 0 or omega <= 0:\n            return 0.0\n        # For large x, np.exp(x) returns inf, and 1/inf is 0.0, which is correct.\n        arg = omega / T\n        if arg > 700: # Avoid overflow in intermediate steps if any, np.exp(709) is finite.\n            return 0.0\n        return 1.0 / (np.exp(arg) - 1.0)\n\n    # Transition rate function\n    def calculate_rate(g, delta, T, J_func):\n        \"\"\"Calculates the upward transition rate k_i->j.\"\"\"\n        J_at_delta = J_func(delta)\n        n_at_delta = bose_einstein(delta, T)\n        return 2 * np.pi * g**2 * J_at_delta * n_at_delta\n\n    test_cases = [\n        {\n            \"name\": \"Case 1\", \"g\": 0.05, \"delta\": 80.0,\n            \"J_type\": \"DL\", \"J_params\": {\"lambda_val\": 50.0, \"omega_c\": 100.0},\n            \"temps\": np.array([10.0, 15.0, 20.0, 25.0])\n        },\n        {\n            \"name\": \"Case 2\", \"g\": 0.05, \"delta\": 80.0,\n            \"J_type\": \"DL\", \"J_params\": {\"lambda_val\": 50.0, \"omega_c\": 100.0},\n            \"temps\": np.array([200.0, 400.0, 800.0, 1600.0])\n        },\n        {\n            \"name\": \"Case 3\", \"g\": 0.05, \"delta\": 50.0,\n            \"J_type\": \"SO\", \"J_params\": {\"eta\": 1.0e-4, \"omega_c\": 200.0},\n            \"temps\": np.array([20.0, 50.0, 100.0, 200.0])\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        g = case[\"g\"]\n        delta = case[\"delta\"]\n        temps = case[\"temps\"]\n\n        if case[\"J_type\"] == \"DL\":\n            J_func = make_drude_lorentz(**case[\"J_params\"])\n        elif case[\"J_type\"] == \"SO\":\n            J_func = make_super_ohmic(**case[\"J_params\"])\n\n        # 1. Compute rates\n        rates = np.array([calculate_rate(g, delta, T, J_func) for T in temps])\n\n        # 2. Prepare data for linear regression\n        # y = ln(k), x = 1/T\n        # ln(k) = ln(A) - Ea * (1/T)\n        # y = c + m*x, where c = ln(A), m = -Ea\n        x_data = 1.0 / temps\n        y_data = np.log(rates)\n\n        # 3. Perform linear least-squares fit (degree 1 polynomial)\n        # np.polyfit returns [m, c]\n        m, c = np.polyfit(x_data, y_data, 1)\n        \n        # 4. Extract Arrhenius parameters\n        Ea = -m\n        A = np.exp(c)\n\n        # 5. Calculate RMSE_ln\n        y_pred = m * x_data + c\n        residuals = y_data - y_pred\n        rmse_ln = np.sqrt(np.mean(residuals**2))\n\n        results.append([Ea, A, rmse_ln])\n\n    # Final print statement in the exact required format\n    # Using a more controlled formatting for floating point numbers\n    formatted_results = []\n    for res_list in results:\n        formatted_list = f\"[{','.join(f'{v:.8e}' for v in res_list)}]\"\n        formatted_results.append(formatted_list)\n    \n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2669298"}]}