{"hands_on_practices": [{"introduction": "The theory of diffusion-driven instability, first proposed by Alan Turing, provides a powerful analytical framework for predicting pattern formation. This first practice problem [@problem_id:2675355] offers a foundational, hands-on application of this theory to the Brusselator, a canonical model in chemical kinetics. By systematically working through a linear stability analysis, you will determine whether a given set of parameters can lead to a Turing pattern and identify the specific spatial mode that is most likely to emerge on a finite domain.", "problem": "Consider the classical Brusselator reaction-diffusion system for concentrations $u(x,y,t)$ and $v(x,y,t)$ on a square domain $\\Omega = [0,L] \\times [0,L]$ with homogeneous Neumann (zero-flux) boundary conditions. The governing partial differential equations (PDEs) are\n$$\n\\frac{\\partial u}{\\partial t} = A - (B+1)\\,u + u^{2} v + D_{u} \\nabla^{2} u,\\qquad\n\\frac{\\partial v}{\\partial t} = B\\,u - u^{2} v + D_{v} \\nabla^{2} v,\n$$\nwhere $A$, $B$ are kinetic parameters and $D_{u}$, $D_{v}$ are diffusion coefficients.\n\nUse the following parameter values:\n$$\nA = 1.000000,\\quad B = 1.799568,\\quad D_{u} = 1.0 \\times 10^{-6}\\ \\text{cm}^{2}\\,\\text{s}^{-1},\\quad D_{v} = 1.0 \\times 10^{-4}\\ \\text{cm}^{2}\\,\\text{s}^{-1},\n$$\nand let the domain side length be\n$$\nL = 1.000000\\ \\text{cm}.\n$$\n\nStarting from first principles of linear stability analysis about the spatially homogeneous steady state, determine whether a diffusion-driven (Turing) instability is admitted by this system on the given domain. If it is admitted, identify a discrete Neumann eigenmode indexed by integers $(m,n)$ whose admissible wavenumber equals the most amplified wavenumber, and compute the corresponding wavenumber magnitude $k_{mn}$.\n\nExpress the final reported wavenumber in $\\text{cm}^{-1}$ and round your answer to four significant figures. Your final response must be only the numerical value of $k_{mn}$ as instructed.", "solution": "The problem statement must first be rigorously validated.\n\nStep 1: Extract Givens.\nThe governing partial differential equations for the Brusselator system are:\n$$\n\\frac{\\partial u}{\\partial t} = A - (B+1)\\,u + u^{2} v + D_{u} \\nabla^{2} u\n$$\n$$\n\\frac{\\partial v}{\\partial t} = B\\,u - u^{2} v + D_{v} \\nabla^{2} v\n$$\nThe system is defined on a square domain $\\Omega = [0,L] \\times [0,L]$ with homogeneous Neumann boundary conditions.\nThe parameter values are given as:\n$$\nA = 1.000000\n$$\n$$\nB = 1.799568\n$$\n$$\nD_{u} = 1.0 \\times 10^{-6}\\ \\text{cm}^{2}\\,\\text{s}^{-1}\n$$\n$$\nD_{v} = 1.0 \\times 10^{-4}\\ \\text{cm}^{2}\\,\\text{s}^{-1}\n$$\nThe domain side length is:\n$$\nL = 1.000000\\ \\text{cm}\n$$\n\nStep 2: Validate Using Extracted Givens.\nThe problem is scientifically grounded. The Brusselator is a canonical model for studying nonlinear chemical oscillations and pattern formation. The analysis requested—a linear stability analysis to investigate Turing instability—is a standard, fundamental method in the study of reaction-diffusion systems. The problem is well-posed, providing all necessary equations, parameters, domain specifications, and boundary conditions for a unique solution to be determined. The language used is objective and precise. The problem is self-contained and free of contradictions, pseudoscience, or ambiguity. It is a textbook example of a Turing analysis.\n\nStep 3: Verdict and Action.\nThe problem is valid. A solution will be furnished.\n\nThe first step in the analysis is to determine the spatially homogeneous steady state $(u_s, v_s)$ of the system. This state is found by setting the time derivatives and the spatial derivatives (diffusion terms) to zero:\n$$\nA - (B+1)u_s + u_s^2 v_s = 0\n$$\n$$\nB u_s - u_s^2 v_s = 0\n$$\nFrom the second equation, assuming $u_s \\neq 0$, we find $v_s = B/u_s$. Substituting this into the first equation yields:\n$$\nA - (B+1)u_s + u_s^2 (B/u_s) = 0 \\implies A - (B+1)u_s + B u_s = 0 \\implies A - u_s = 0\n$$\nThis gives the steady state solution $u_s = A$. Consequently, $v_s = B/A$.\nUsing the provided parameters, $A=1.0$ and $B=1.799568$, the steady state is $(u_s, v_s) = (1.0, 1.799568)$.\n\nNext, we perform a linear stability analysis around this steady state. Let $u(x,y,t) = u_s + \\delta u(x,y,t)$ and $v(x,y,t) = v_s + \\delta v(x,y,t)$, where $\\delta u$ and $\\delta v$ are small perturbations. The reaction kinetics terms are $f(u,v) = A - (B+1)u + u^2v$ and $g(u,v) = Bu - u^2v$. Linearizing the system around $(u_s, v_s)$ yields a system for the perturbations:\n$$\n\\frac{\\partial}{\\partial t} \\begin{pmatrix} \\delta u \\\\ \\delta v \\end{pmatrix} = \\begin{pmatrix} f_u  f_v \\\\ g_u  g_v \\end{pmatrix}_{(u_s,v_s)} \\begin{pmatrix} \\delta u \\\\ \\delta v \\end{pmatrix} + \\begin{pmatrix} D_u  0 \\\\ 0  D_v \\end{pmatrix} \\nabla^2 \\begin{pmatrix} \\delta u \\\\ \\delta v \\end{pmatrix}\n$$\nHere, the matrix of partial derivatives is the reaction Jacobian, $J$, evaluated at the steady state. The partial derivatives are:\n$f_u = -(B+1) + 2uv$, $f_v = u^2$, $g_u = B - 2uv$, $g_v = -u^2$.\nEvaluating at $(u_s, v_s) = (A, B/A)$:\n$f_u = -(B+1) + 2A(B/A) = B-1$\n$f_v = A^2$\n$g_u = B - 2A(B/A) = -B$\n$g_v = -A^2$\nSo the Jacobian matrix is $J = \\begin{pmatrix} B-1  A^2 \\\\ -B  -A^2 \\end{pmatrix}$.\n\nThe homogeneous Neumann boundary conditions on the square domain mean that the perturbations can be expanded in a basis of cosine eigenfunctions of the Laplacian: $\\delta \\mathbf{u}(x,y,t) \\propto e^{\\lambda t} \\cos(k_x x) \\cos(k_y y)$, where $k_x = m\\pi/L$ and $k_y = n\\pi/L$ for non-negative integers $m, n$. For such a mode, the Laplacian operator acts as multiplication by $-k^2$, where the squared wavenumber is $k^2 = k_x^2 + k_y^2$. The evolution of each mode is then governed by the linear system:\n$$\n\\frac{d}{dt} \\mathbf{\\hat{u}}_k = (J - k^2 D) \\mathbf{\\hat{u}}_k = M(k^2) \\mathbf{\\hat{u}}_k\n$$\nwhere $D = \\text{diag}(D_u, D_v)$ and $M(k^2)$ is the stability matrix for the mode with wavenumber $k$.\n\nA Turing instability requires two conditions:\n$1.$ The homogeneous steady state is stable in the absence of diffusion ($k=0$). This requires the eigenvalues of $J$ to have negative real parts, which for a $2 \\times 2$ system means $\\text{tr}(J)  0$ and $\\det(J)  0$.\n$2.$ Diffusion destabilizes the system for some spatial mode $k0$. This happens if at least one eigenvalue of $M(k^2)$ acquires a positive real part. For a stationary (Turing) instability, this occurs if $\\det(M(k^2))  0$ for some $k^2  0$.\n\nLet us verify these conditions.\nFor condition $1$:\n$\\text{tr}(J) = (B-1) - A^2 = 1.799568 - 1 - 1^2 = -0.200432$. Since $\\text{tr}(J)  0$, this condition is met.\n$\\det(J) = (B-1)(-A^2) - (A^2)(-B) = -A^2B + A^2 + A^2B = A^2 = 1^2 = 1$. Since $\\det(J)0$, this condition is met.\nThe homogeneous steady state is stable.\n\nFor condition $2$, we examine the determinant of the full stability matrix $M(k^2)$:\n$$\n\\det(M(k^2)) = \\det(J - k^2 D) = (B-1-D_u k^2)(-A^2-D_v k^2) - (A^2)(-B)\n$$\n$$\n\\det(M(k^2)) = D_u D_v (k^2)^2 + (A^2 D_u - (B-1)D_v) k^2 + A^2\n$$\nFor instability, $\\det(M(k^2))$ must become negative for some $k^20$. Since $\\det(M(0)) = A^2  0$ and the quadratic term $D_u D_v (k^2)^2$ is positive, the only way for the parabola (as a function of $k^2$) to dip below zero is if the coefficient of the linear term in $k^2$ is negative.\nCondition for instability: $A^2 D_u - (B-1)D_v  0$, or $(B-1)D_v  A^2 D_u$.\nLet's substitute the given values:\n$(B-1)D_v = (1.799568 - 1)(1.0 \\times 10^{-4}) = 0.799568 \\times 10^{-4} = 7.99568 \\times 10^{-5}$.\n$A^2 D_u = (1.0)^2 (1.0 \\times 10^{-6}) = 1.0 \\times 10^{-6}$.\nIndeed, $7.99568 \\times 10^{-5}  1.0 \\times 10^{-6}$, so the condition is satisfied. A Turing instability is admitted.\n\nThe most amplified wavenumber, denoted here as $k_c$, corresponds to the minimum of the determinant function $\\det(M(k^2))$. We find this by differentiating with respect to $k^2$ and setting the result to zero:\n$$\n\\frac{d}{d(k^2)} \\det(M(k^2)) = 2 D_u D_v k^2 + A^2 D_u - (B-1)D_v = 0\n$$\n$$\nk_c^2 = \\frac{(B-1)D_v - A^2 D_u}{2 D_u D_v}\n$$\nSubstituting the numerical values:\nNumerator: $(B-1)D_v - A^2 D_u = 7.99568 \\times 10^{-5} - 1.0 \\times 10^{-6} = 7.89568 \\times 10^{-5}\\ \\text{cm}^2\\text{s}^{-2}$.\nDenominator: $2 D_u D_v = 2 (1.0 \\times 10^{-6}) (1.0 \\times 10^{-4}) = 2.0 \\times 10^{-10}\\ \\text{cm}^4\\text{s}^{-2}$.\n$$\nk_c^2 = \\frac{7.89568 \\times 10^{-5}}{2.0 \\times 10^{-10}} = 394784\\ \\text{cm}^{-2}\n$$\nThe system supports only discrete wavenumbers $k_{mn}$ defined by the boundary conditions, where $k_{mn}^2 = k_x^2 + k_y^2 = (\\frac{m\\pi}{L})^2 + (\\frac{n\\pi}{L})^2 = \\frac{\\pi^2}{L^2}(m^2+n^2)$. With $L=1.000000\\ \\text{cm}$, this is $k_{mn}^2 = \\pi^2(m^2+n^2)$. The unstable mode will be the one for which $k_{mn}^2$ is closest to $k_c^2$. We must find integers $(m,n)$ such that $\\pi^2(m^2+n^2) \\approx 394784$.\n$$\nm^2 + n^2 \\approx \\frac{394784}{\\pi^2} \\approx \\frac{394784}{9.8696044} \\approx 39999.98\n$$\nThe integer value for $m^2+n^2$ closest to this is clearly $40000$. This value can be written as a sum of two squares, for example, $m=200, n=0$ (representing stripes) or $m=120, n=160$ (representing a mixed pattern). Any such choice identifies an admissible mode. Let us choose the mode $(m, n) = (200, 0)$.\n\nThe problem requires computation of the corresponding wavenumber magnitude $k_{mn}$. For the selected mode $(200,0)$:\n$$\nk_{200,0} = \\sqrt{\\frac{\\pi^2}{L^2}(200^2+0^2)} = \\frac{200\\pi}{L}\n$$\nWith $L=1.0\\ \\text{cm}$, the wavenumber magnitude is $k_{200,0} = 200\\pi\\ \\text{cm}^{-1}$.\nWe are asked for a numerical value rounded to four significant figures:\n$$\nk_{200,0} = 200 \\times \\pi \\approx 200 \\times 3.14159265... \\approx 628.31853\\ \\text{cm}^{-1}\n$$\nRounding to four significant figures gives $628.3$.", "answer": "$$\\boxed{628.3}$$", "id": "2675355"}, {"introduction": "A system may possess the chemical potential for pattern formation, but can that pattern physically manifest within a given container? This exercise [@problem_id:2675362] delves into the crucial interplay between the intrinsic length scale of an instability and the physical size of the domain. You will calculate the minimum domain size, $L_{\\text{min}}$, required to support a Turing pattern, thereby learning to connect the abstract band of unstable wavenumbers to a concrete physical constraint.", "problem": "Consider a two-species reaction–diffusion (RD) system on a one-dimensional domain of length $L$ with homogeneous Neumann (zero-flux) boundary conditions at $x=0$ and $x=L$:\n$$\n\\frac{\\partial u}{\\partial t} = f(u,v) + D_u \\frac{\\partial^2 u}{\\partial x^2}, \n\\qquad \n\\frac{\\partial v}{\\partial t} = g(u,v) + D_v \\frac{\\partial^2 v}{\\partial x^2}.\n$$\nAssume there is a spatially uniform steady state $(u^{\\ast},v^{\\ast})$ and denote the Jacobian of the reaction kinetics at this steady state by\n$$\nJ \\equiv \\begin{pmatrix} a  b \\\\ c  d \\end{pmatrix}\n\\quad \\text{with} \\quad\na=1,\\; b=2,\\; c=-3,\\; d=-2,\n$$\nand diffusion coefficients\n$$\nD_u = 1, \\qquad D_v = 100,\n$$\nall expressed in nondimensional units. The kinetics without diffusion are linearly stable, that is, $a+d0$ and $ad-bc0$.\n\nStarting from the linearization about $(u^{\\ast},v^{\\ast})$ and separation of variables into spatial eigenmodes of the Laplacian consistent with homogeneous Neumann boundary conditions, determine the minimum domain length $L_{\\min}$ required for any Turing pattern to appear, in the sense that at least one admissible discrete wavenumber $k$ lies within the band of wavenumbers that yield positive growth rate from the dispersion relation. You may use that for homogeneous Neumann boundary conditions on $[0,L]$, the admissible spatial wavenumbers are $k_n = n\\pi/L$ for integers $n \\geq 1$.\n\nCompute $L_{\\min}$ explicitly for the parameters given. Express your final result as a single real number in nondimensional length units, and round your answer to four significant figures.", "solution": "The problem requires the determination of the minimum domain length, $L_{\\min}$, for the onset of a Turing instability in a one-dimensional reaction-diffusion system.\n\nThe system is given by:\n$$\n\\frac{\\partial u}{\\partial t} = f(u,v) + D_u \\frac{\\partial^2 u}{\\partial x^2}\n$$\n$$\n\\frac{\\partial v}{\\partial t} = g(u,v) + D_v \\frac{\\partial^2 v}{\\partial x^2}\n$$\non a domain $x \\in [0, L]$ with homogeneous Neumann boundary conditions.\n\nFirst, we perform a linear stability analysis around the spatially uniform steady state $(u^{\\ast}, v^{\\ast})$. Let the perturbations be $u(x,t) = u^{\\ast} + \\delta u(x,t)$ and $v(x,t) = v^{\\ast} + \\delta v(x,t)$. The linearized system for the perturbation vector $\\mathbf{w} = (\\delta u, \\delta v)^T$ is:\n$$\n\\frac{\\partial \\mathbf{w}}{\\partial t} = J \\mathbf{w} + D \\frac{\\partial^2 \\mathbf{w}}{\\partial x^2}\n$$\nwhere $J$ is the Jacobian of the reaction kinetics evaluated at the steady state, and $D$ is the diagonal matrix of diffusion coefficients:\n$$\nJ = \\begin{pmatrix} a  b \\\\ c  d \\end{pmatrix}, \\qquad D = \\begin{pmatrix} D_u  0 \\\\ 0  D_v \\end{pmatrix}\n$$\nWe seek solutions using separation of variables. The spatial eigenfunctions of the Laplacian operator $\\frac{\\partial^2}{\\partial x^2}$ with homogeneous Neumann boundary conditions on $[0, L]$ are $\\cos(k_n x)$, with corresponding eigenvalues $-k_n^2$, where the discrete wavenumbers are $k_n = \\frac{n\\pi}{L}$ for integers $n=0, 1, 2, \\dots$. We are interested in spatially non-uniform patterns, so we consider $n \\geq 1$.\n\nA general perturbation can be expressed as a Fourier series:\n$$\n\\mathbf{w}(x,t) = \\sum_{n=0}^{\\infty} \\mathbf{w}_n(t) \\cos(k_n x)\n$$\nSubstituting a single mode $\\mathbf{w}(x,t) = \\mathbf{w}_k e^{\\lambda t} \\cos(kx)$ into the linearized system gives an eigenvalue problem for the growth rate $\\lambda$ for each wavenumber $k$:\n$$\n\\lambda \\mathbf{w}_k = (J - k^2 D) \\mathbf{w}_k\n$$\nThe growth rate $\\lambda$ is thus an eigenvalue of the matrix $M_k = J - k^2 D$.\n$$\nM_k = \\begin{pmatrix} a - k^2 D_u  b \\\\ c  d - k^2 D_v \\end{pmatrix}\n$$\nThe eigenvalues $\\lambda$ are determined by the characteristic equation $\\det(M_k - \\lambda I) = 0$, which is:\n$$\n\\lambda^2 - \\text{tr}(M_k) \\lambda + \\det(M_k) = 0\n$$\nwhere\n$$\n\\text{tr}(M_k) = a + d - k^2(D_u + D_v)\n$$\n$$\n\\det(M_k) = (a - k^2 D_u)(d - k^2 D_v) - bc = D_u D_v (k^2)^2 - (aD_v + dD_u)k^2 + (ad-bc)\n$$\nA Turing instability arises when a system that is stable to homogeneous perturbations ($k=0$) becomes unstable to spatially varying perturbations ($k  0$).\nThe conditions for stability at $k=0$ are $\\text{tr}(M_0)  0$ and $\\det(M_0)  0$.\n$$\n\\text{tr}(M_0) = a+d  0\n$$\n$$\n\\det(M_0) = ad-bc  0\n$$\nThe problem statement asserts these conditions are met, which we can verify with the given parameters: $a+d = 1-2 = -1  0$ and $ad-bc = (1)(-2) - (2)(-3) = 4  0$.\n\nFor instability to occur at $k0$, at least one eigenvalue $\\lambda$ must have a positive real part. The solutions to the characteristic equation are $\\lambda_{\\pm} = \\frac{1}{2} (\\text{tr}(M_k) \\pm \\sqrt{\\text{tr}(M_k)^2 - 4\\det(M_k)})$.\nSince $a+d  0$ and $D_u, D_v  0$, $\\text{tr}(M_k) = (a+d) - k^2(D_u+D_v)$ is always negative for any $k$. As $\\lambda_+ + \\lambda_- = \\text{tr}(M_k)  0$, the eigenvalues cannot both be positive. An instability, if it occurs, must arise from one eigenvalue becoming positive while the other remains negative. This requires that $\\lambda_+$ be real and positive, which in turn requires the product of the eigenvalues, $\\det(M_k)$, to be negative.\nThus, the condition for instability at wavenumber $k$ is $\\det(M_k)  0$.\n\nLet $q = k^2$. The function $\\det(M_k)$ is a quadratic in $q$:\n$$\nh(q) = (D_u D_v) q^2 - (aD_v + dD_u) q + (ad-bc)\n$$\nInstability requires $h(q)  0$ for some $q  0$. Since $D_u D_v  0$, $h(q)$ is an upward-opening parabola. At $q=0$, $h(0) = ad-bc  0$. For $h(q)$ to become negative, its minimum must be negative, and the minimum must occur at $q0$. This requires $aD_v + dD_u  0$. The minimum value must be negative, which implies the parabola has two real positive roots, $q_-$ and $q_+$. The band of unstable squared wavenumbers is the interval $(q_-, q_+)$.\n\nUsing the given values: $a=1, b=2, c=-3, d=-2, D_u=1, D_v=100$.\nThe coefficients of the quadratic $h(q)$ are:\n$D_u D_v = 1 \\times 100 = 100$\n$aD_v + dD_u = (1)(100) + (-2)(1) = 98$\n$ad-bc = 4$\nSo, $h(q) = 100q^2 - 98q + 4$. The condition $aD_v + dD_u = 98  0$ is satisfied.\nThe roots of $h(q)=0$ are given by the quadratic formula:\n$$\nq_{\\pm} = \\frac{98 \\pm \\sqrt{(-98)^2 - 4(100)(4)}}{2(100)} = \\frac{98 \\pm \\sqrt{9604 - 1600}}{200} = \\frac{98 \\pm \\sqrt{8004}}{200}\n$$\nThe unstable band for $k^2$ is $(q_-, q_+)$. A Turing pattern can emerge if at least one of the admissible discrete wavenumbers $k_n = n\\pi/L$ (for $n \\ge 1$) falls within the unstable range of wavenumbers. This means for some integer $n \\ge 1$:\n$$\nq_-  k_n^2  q_+ \\implies q_-  \\left(\\frac{n\\pi}{L}\\right)^2  q_+\n$$\nThis inequality can be rewritten as:\n$$\n\\frac{(n\\pi)^2}{q_+}  L^2  \\frac{(n\\pi)^2}{q_-}\n$$\nFor a given mode $n$, there is a range of domain lengths $L$ which make that mode unstable. The minimum length $L$ for which *any* instability can occur is found by considering the minimum possible value of the lower bound across all possible modes $n \\ge 1$:\n$$\nL_{\\min} = \\inf \\left\\{ \\bigcup_{n=1}^{\\infty} \\left( \\frac{n\\pi}{\\sqrt{q_+}}, \\frac{n\\pi}{\\sqrt{q_-}} \\right) \\right\\} = \\min_{n \\ge 1} \\left( \\frac{n\\pi}{\\sqrt{q_+}} \\right)\n$$\nThis minimum occurs for $n=1$, so we have:\n$$\nL_{\\min} = \\frac{\\pi}{\\sqrt{q_+}}\n$$\nWe now compute the numerical value of $L_{\\min}$. First, we find $q_+$:\n$$\nq_+ = \\frac{98 + \\sqrt{8004}}{200}\n$$\nNow we compute $L_{\\min}$:\n$$\nL_{\\min} = \\frac{\\pi}{\\sqrt{\\frac{98 + \\sqrt{8004}}{200}}} = \\pi \\sqrt{\\frac{200}{98 + \\sqrt{8004}}}\n$$\nUsing numerical values: $\\sqrt{8004} \\approx 89.465075$.\n$$\nq_+ \\approx \\frac{98 + 89.465075}{200} = \\frac{187.465075}{200} \\approx 0.937325375\n$$\n$$\nL_{\\min} \\approx \\frac{\\pi}{\\sqrt{0.937325375}} \\approx \\frac{3.14159265}{0.96815566} \\approx 3.244900\n$$\nRounding the result to four significant figures gives $3.245$.", "answer": "$$\\boxed{3.245}$$", "id": "2675362"}, {"introduction": "While analytical methods reveal the *potential* for patterns, computational simulations allow us to observe their *actual* emergence and selection from noisy initial conditions. This advanced practice [@problem_id:2675298] bridges the gap between theory and experiment, guiding you through the development of a numerical solver for a reaction-diffusion system. You will not only simulate the formation of spots and stripes but also implement a quantitative method based on Fourier analysis to classify the resulting patterns, a core skill in the modern study of complex systems.", "problem": "You are asked to write a complete, runnable program that simulates how random initial perturbations seed different spatial planforms in a two-species reaction-diffusion system and to quantify, under isotropic noise, the empirical probability that the selected planform is stripe-like rather than spot-like. The setting is purely mathematical and uses nondimensional variables; no physical units are involved.\n\nStart from the two-species reaction-diffusion equations on a square, periodic domain of side length $L$:\n$$\n\\frac{\\partial u}{\\partial t} = D_u \\nabla^2 u + f(u,v), \\quad\n\\frac{\\partial v}{\\partial t} = D_v \\nabla^2 v + g(u,v),\n$$\nwhere $u=u(x,y,t)$ and $v=v(x,y,t)$ are the concentrations of activator and inhibitor, respectively, $D_u$ and $D_v$ are diffusion coefficients, and $(f,g)$ are the reaction kinetics. Use the Schnakenberg kinetics\n$$\nf(u,v) = a - u + u^2 v, \\qquad g(u,v) = b - u^2 v,\n$$\nwhere $a$ and $b$ are positive parameters. The spatial domain is periodic in both directions, discretized on a uniform $N \\times N$ grid with spacing $\\Delta x = L/N$.\n\nInitialize each simulation at the homogeneous steady state\n$$\nu^\\star = a + b, \\qquad v^\\star = \\frac{b}{(a+b)^2},\n$$\nperturbed by independent, identically distributed Gaussian noise with zero mean and standard deviation $\\varepsilon$ applied isotropically to both $u$ and $v$ at $t=0$:\n$$\nu(x,y,0) = u^\\star + \\varepsilon\\, \\eta_u(x,y), \\quad\nv(x,y,0) = v^\\star + \\varepsilon\\, \\eta_v(x,y),\n$$\nwhere $\\eta_u$ and $\\eta_v$ are independent Gaussian random fields with distribution $\\mathcal{N}(0,1)$ at each grid point and no preferred direction. Use a time-stepper that is numerically stable for the diffusion operator, for example a semi-implicit scheme in Fourier space using the Fast Fourier Transform (FFT). Assume periodic boundary conditions in both directions.\n\nTo classify the planform at the final time $T = n_{\\text{steps}}\\,\\Delta t$, analyze the power spectrum of $u(x,y,T)$. Let $\\mathcal{F}$ denote the Fourier Transform (FT) and define the power spectral density\n$$\nS(k_x,k_y) = \\left|\\mathcal{F}\\{u(\\cdot,\\cdot,T) - \\overline{u(T)}\\}(k_x,k_y)\\right|^2,\n$$\nwhere $\\overline{u(T)}$ is the spatial mean of $u$ at time $T$. Let $r = \\sqrt{k_x^2 + k_y^2}$ be the radial wavenumber. Construct a radial average of $S$ over annuli to identify the dominant wavenumber $r^\\star$ (exclude a small neighborhood of $r=0$ to avoid the mean mode). Around $r^\\star$, construct a narrow annular band and compute the angular distribution of power by binning angles $\\theta = \\operatorname{atan2}(k_y,k_x)$ modulo $\\pi$ into $B$ uniform bins on $[0,\\pi)$. Define the anisotropy ratio\n$$\nR = \\frac{\\max_{\\theta\\text{ bins}} \\,\\mathcal{S}(\\theta)}{\\frac{1}{B}\\sum_{\\text{bins}} \\mathcal{S}(\\theta)},\n$$\nwhere $\\mathcal{S}(\\theta)$ is the total spectral power in the annular band falling into the corresponding $\\theta$-bin. Classify a realization as stripe-like if $R \\ge R_{\\text{thr}}$ and as spot-like otherwise. Use $B = 36$ and $R_{\\text{thr}} = 2.2$.\n\nYour program must:\n- Implement the semi-implicit spectral time integration for the Schnakenberg system with periodic boundary conditions and the isotropic Gaussian random initial perturbations as described above.\n- For each parameter set in the provided test suite, run multiple independent trials with different seeds for the random number generator, and classify each realization as stripe-like or spot-like according to the anisotropy ratio $R$.\n- For each parameter set, return the empirical probability of stripe selection as the fraction of trials classified as stripes, expressed as a decimal rounded to three decimal places.\n\nUse the following test suite of parameter values, each specified as a tuple\n$$\n(a,b,D_u,D_v,L,N,\\Delta t,n_{\\text{steps}},\\varepsilon,n_{\\text{trials}},\\text{base\\_seed}).\n$$\n\nTest suite:\n1. $(0.10,\\,0.90,\\,1.0,\\,16.0,\\,50.0,\\,64,\\,0.2,\\,800,\\,0.01,\\,6,\\,202311)$\n2. $(0.20,\\,1.30,\\,1.0,\\,40.0,\\,50.0,\\,64,\\,0.2,\\,800,\\,0.01,\\,6,\\,202312)$\n3. $(0.15,\\,0.99,\\,1.0,\\,25.0,\\,50.0,\\,64,\\,0.2,\\,800,\\,0.01,\\,6,\\,202313)$\n\nFor reproducibility, in each case initialize the random number generator with seeds $\\text{base\\_seed}+i$ for $i=0,1,\\dots,n_{\\text{trials}}-1$. For each trial, initialize $(u,v)$ at $t=0$ with the specified isotropic Gaussian noise and evolve to $T = n_{\\text{steps}}\\,\\Delta t$.\n\nFinal output format:\n- Your program should produce a single line of output containing the stripe-selection probabilities for the three test cases as a comma-separated list of three decimals enclosed in square brackets, in the same order as the test suite, for example, $[0.667,0.333,1.000]$.", "solution": "The user has provided a well-defined computational problem in the field of chemical kinetics and pattern formation. The problem is valid as it is scientifically grounded in the theory of reaction-diffusion systems, specifically the Schnakenberg model, which is a canonical example for studying Turing patterns. All parameters, equations, initial conditions, boundary conditions, and numerical procedures are specified in a clear, objective, and self-contained manner. The problem is to simulate the system and classify the emergent spatial patterns based on a quantitative analysis of their Fourier power spectra.\n\nThe core of the problem is to solve the following system of coupled partial differential equations (PDEs) for two chemical species, an activator $u(x,y,t)$ and an inhibitor $v(x,y,t)$:\n$$\n\\frac{\\partial u}{\\partial t} = D_u \\nabla^2 u + f(u,v) \\\\\n\\frac{\\partial v}{\\partial t} = D_v \\nabla^2 v + g(u,v)\n$$\nThe reaction kinetics are given by the Schnakenberg model:\n$$\nf(u,v) = a - u + u^2 v \\\\\ng(u,v) = b - u^2 v\n$$\nThe simulation is performed on a two-dimensional square domain $[0, L] \\times [0, L]$ with periodic boundary conditions, discretized on a uniform $N \\times N$ grid.\n\nThe numerical solution is implemented using a semi-implicit spectral method, also known as an implicit-explicit (IMEX) Fourier pseudospectral method. This approach is well-suited for reaction-diffusion equations. The stiff linear diffusion term ($\\nabla^2$) is handled implicitly in Fourier space for numerical stability, while the nonlinear reaction terms ($f, g$) are handled explicitly in real space for computational efficiency.\n\nTransforming the PDEs into Fourier space, where $\\hat{u} = \\mathcal{F}\\{u\\}$ and $\\mathcal{F}$ is the two-dimensional Fast Fourier Transform (FFT), the Laplacian operator $\\nabla^2$ becomes multiplication by $-(k_x^2 + k_y^2)$, where $k_x$ and $k_y$ are the wavenumbers. Let $k^2 = k_x^2 + k_y^2$. The PDEs in Fourier space are:\n$$\n\\frac{d\\hat{u}}{dt} = -D_u k^2 \\hat{u} + \\mathcal{F}\\{f(u,v)\\} \\\\\n\\frac{d\\hat{v}}{dt} = -D_v k^2 \\hat{v} + \\mathcal{F}\\{g(u,v)\\}\n$$\nApplying a first-order semi-implicit time-stepping scheme (related to ETD1 methods) with time step $\\Delta t$, we treat the diffusion term at time $t_{n+1}$ (implicitly) and the reaction term at time $t_n$ (explicitly). This gives the update rule for the Fourier coefficients from time step $n$ to $n+1$:\n$$\n\\hat{u}_{n+1} = \\frac{\\hat{u}_n + \\Delta t \\cdot \\mathcal{F}\\{f(u_n, v_n)\\}}{1 + \\Delta t D_u k^2} \\\\\n\\hat{v}_{n+1} = \\frac{\\hat{v}_n + \\Delta t \\cdot \\mathcal{F}\\{g(u_n, v_n)\\}}{1 + \\Delta t D_v k^2}\n$$\nThe algorithm for a single simulation trial proceeds as follows:\n1.  Initialize the system at its homogeneous steady state $(u^\\star, v^\\star)$, where $u^\\star = a+b$ and $v^\\star = b/(a+b)^2$.\n2.  Add a small-amplitude, isotropic perturbation by generating two independent $N \\times N$ arrays of Gaussian noise $\\mathcal{N}(0,1)$ and adding them to $u^\\star$ and $v^\\star$, scaled by $\\varepsilon$.\n3.  Iterate for $n_{\\text{steps}}$:\n    a.  Compute the nonlinear reaction terms $f(u,v)$ and $g(u,v)$ in real space.\n    b.  Transform the current fields $(u,v)$ and the reaction terms to Fourier space using FFT.\n    c.  Apply the semi-implicit update rule to obtain the new Fourier coefficients $(\\hat{u}_{n+1}, \\hat{v}_{n+1})$.\n    d.  Transform back to real space using inverse FFT to get the state $(u_{n+1}, v_{n+1})$ for the next step.\n\nAfter the final time step, the resulting pattern in the activator concentration $u(x,y,T)$ is classified. This is done by analyzing its two-dimensional power spectrum, $S(k_x, k_y) = |\\mathcal{F}\\{u - \\bar{u}\\}|^2$.\n1.  The spectrum is radially averaged to find the dominant wavenumber $r^\\star$, which corresponds to the peak in the radial power distribution. This identifies the characteristic length scale of the pattern.\n2.  An annular band in Fourier space is defined around this dominant wavenumber $r^\\star$.\n3.  Within this band, the distribution of spectral power with respect to the angle $\\theta = \\operatorname{atan2}(k_y, k_x)$ is computed. Since the power spectrum is symmetric with respect to the origin ($S(\\mathbf{k}) = S(-\\mathbf{k})$ for a real field $u$), angles are considered modulo $\\pi$. The angular range $[0, \\pi)$ is divided into $B=36$ bins.\n4.  The anisotropy ratio $R$ is calculated as the ratio of the maximum power in any angular bin to the average power across all bins.\n5.  If $R \\ge R_{\\text{thr}} = 2.2$, the pattern anisotropy is high, characteristic of stripes (power concentrated in two opposing directions), and is classified as 'stripe-like'. Otherwise, it is classified as 'spot-like' (e.g., hexagonal patterns, which have a more isotropic power distribution among 6 modes).\n\nFor each set of parameters in the test suite, this entire process is repeated $n_{\\text{trials}}$ times, each with a different random seed, to ensure statistical sampling. The empirical probability of stripe selection is then the fraction of trials that result in a stripe-like classification. This probability is rounded to three decimal places for the final output.", "answer": "```python\nimport numpy as np\n\ndef classify_pattern(u, L, N, B=36, R_thr=2.2):\n    \"\"\"\n    Classifies a spatial pattern as stripe-like or spot-like based on the anisotropy\n    of its Fourier power spectrum.\n    \"\"\"\n    # 1. Compute power spectrum of the centered field\n    u_prime = u - u.mean()\n    u_hat = np.fft.fft2(u_prime)\n    S = np.abs(u_hat)**2\n\n    # 2. Find dominant wavenumber r* from radial power spectrum\n    # Create integer radial indices for efficient binning\n    idx_x = np.fft.fftfreq(N) * N\n    id_y, id_x = np.meshgrid(idx_x, idx_x)  # Note meshgrid indexing\n    R_indices = np.round(np.sqrt(id_x**2 + id_y**2)).astype(int)\n\n    # Radially average the power spectrum using bincount\n    S_radial = np.bincount(R_indices.ravel(), weights=S.ravel())\n    counts_radial = np.bincount(R_indices.ravel())\n    \n    S_radial_avg = np.zeros_like(S_radial)\n    # Avoid division by zero for bins with no modes\n    non_zero_counts = counts_radial > 0\n    S_radial_avg[non_zero_counts] = S_radial[non_zero_counts] / counts_radial[non_zero_counts]\n    \n    # Find peak, excluding DC component (index 0)\n    if len(S_radial_avg) > 1:\n        peak_r_index = np.argmax(S_radial_avg[1:]) + 1\n    else:\n        return False  # Trivial pattern, classify as spot-like\n\n    # 3. Analyze angular distribution in the dominant wavenumber band\n    band_mask = (R_indices == peak_r_index)\n    \n    # Handle cases with no significant pattern power\n    total_power_in_band = S[band_mask].sum()\n    if total_power_in_band  1e-9:\n        return False\n\n    # Get angles and powers for modes in the band\n    qx_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    qy_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    Qy, Qx = np.meshgrid(qy_vals, qx_vals) # Note meshgrid indexing\n    \n    angles = np.arctan2(Qy[band_mask], Qx[band_mask])\n    # Map angles to [0, pi) to identify antipodal points, as S(k) = S(-k)\n    angles[angles  0] += np.pi\n    powers = S[band_mask]\n\n    # Compute histogram of power vs. angle\n    angular_power, _ = np.histogram(angles, bins=B, range=(0, np.pi), weights=powers)\n    \n    # 4. Calculate anisotropy ratio and classify\n    mean_angular_power = angular_power.mean()\n    if mean_angular_power  1e-9:\n        return False  # Isotropic noise, classify as spot-like\n\n    max_angular_power = angular_power.max()\n    R = max_angular_power / mean_angular_power\n    \n    return R >= R_thr\n\ndef run_single_trial(a, b, Du, Dv, L, N, dt, n_steps, eps):\n    \"\"\"\n    Runs a single simulation of the Schnakenberg system and classifies the final pattern.\n    \"\"\"\n    # Steady state\n    u_star = a + b\n    v_star = b / (a + b)**2\n\n    # Initial conditions with isotropic Gaussian noise\n    eta_u = np.random.randn(N, N)\n    eta_v = np.random.randn(N, N)\n    u = u_star + eps * eta_u\n    v = v_star + eps * eta_v\n\n    # Wavenumber grid setup for the spectral method\n    kx_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    ky_vals = 2 * np.pi * np.fft.fftfreq(N, d=L/N)\n    Kx, Ky = np.meshgrid(kx_vals, kx_vals) # Use kx_vals for both for square grid\n    K2 = Kx**2 + Ky**2\n\n    # Pre-compute denominators for the semi-implicit scheme\n    denom_u = 1 + dt * Du * K2\n    denom_v = 1 + dt * Dv * K2\n\n    # Fourier transforms of initial state\n    u_hat = np.fft.fft2(u)\n    v_hat = np.fft.fft2(v)\n\n    # Time integration loop\n    for _ in range(n_steps):\n        # Calculate nonlinear reaction terms in real space\n        u_real = np.fft.ifft2(u_hat).real\n        v_real = np.fft.ifft2(v_hat).real\n        u2v = u_real * u_real * v_real\n        f_uv = a - u_real + u2v\n        g_uv = b - u2v\n        \n        # FFT of reaction terms\n        f_hat = np.fft.fft2(f_uv)\n        g_hat = np.fft.fft2(g_uv)\n\n        # Update state in Fourier space using the semi-implicit rule\n        u_hat = (u_hat + dt * f_hat) / denom_u\n        v_hat = (v_hat + dt * g_hat) / denom_v\n        \n    # Get final state in real space\n    u_final = np.fft.ifft2(u_hat).real\n    \n    # Classify the resulting pattern\n    return classify_pattern(u_final, L, N)\n\ndef run_simulation_suite(a, b, Du, Dv, L, N, dt, n_steps, eps, n_trials, base_seed):\n    \"\"\"\n    Runs multiple trials for a given parameter set and computes the probability of stripe formation.\n    \"\"\"\n    stripe_count = 0\n    for i in range(n_trials):\n        np.random.seed(base_seed + i)\n        if run_single_trial(a, b, Du, Dv, L, N, dt, n_steps, eps):\n            stripe_count += 1\n    \n    return stripe_count / n_trials\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    test_cases = [\n        (0.10, 0.90, 1.0, 16.0, 50.0, 64, 0.2, 800, 0.01, 6, 202311),\n        (0.20, 1.30, 1.0, 40.0, 50.0, 64, 0.2, 800, 0.01, 6, 202312),\n        (0.15, 0.99, 1.0, 25.0, 50.0, 64, 0.2, 800, 0.01, 6, 202313),\n    ]\n\n    results = []\n    for case in test_cases:\n        probability = run_simulation_suite(*case)\n        results.append(f\"{probability:.3f}\")\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2675298"}]}