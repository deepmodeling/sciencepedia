{"hands_on_practices": [{"introduction": "Understanding diffusion-driven instability begins with a firm grasp of the underlying mathematical conditions. This first practice invites you to derive these conditions from first principles for a general two-species system. By analyzing how diffusion perturbs the eigenvalues of the reaction Jacobian matrix $J$, you will uncover the precise algebraic inequalities that must be satisfied for patterns to emerge from a stable, homogeneous state [@problem_id:2661473]. This foundational exercise is crucial for developing the intuition needed to analyze any reaction-diffusion system.", "problem": "Consider a two-species reaction–diffusion system in one spatial dimension, nondimensionalized so that the diffusion coefficient of the first species is unity. Let the linearization of the local reaction kinetics about a homogeneous steady state be represented by the Jacobian matrix\n$$\nJ \\;=\\;\n\\begin{pmatrix}\n1 & -2 \\\\\n3 & -5\n\\end{pmatrix},\n$$\nand let the diffusion matrix be\n$$\nD \\;=\\; \\operatorname{diag}(1,d),\n$$\nwith $d>0$ the (dimensionless) diffusion ratio of the second species relative to the first. Denote by $f_u$, $f_v$, $g_u$, and $g_v$ the partial derivatives of the reaction rates at the steady state, so that $J=\\begin{pmatrix} f_u & f_v \\\\ g_u & g_v \\end{pmatrix}$.\n\nStarting from the linear stability analysis of the spatially homogeneous steady state under Fourier-mode perturbations of wavenumber $k$ in the reaction–diffusion partial differential equations (PDE), and using only the fundamental facts that (i) stability of the kinetics without diffusion requires the trace $\\tau=f_u+g_v$ to be negative and the determinant $\\Delta=f_u g_v - f_v g_u$ to be positive, and (ii) diffusion modifies the linear operator by subtracting $k^2 D$ from $J$, do the following:\n\n1. Derive the dispersion relation for the growth rates as a function of $k^2$, and from it obtain the necessary and sufficient conditions for the existence of a diffusion-driven instability (Turing instability) despite stability of the kinetics without diffusion.\n\n2. Specialize these conditions to the given $J$ and $D$ to determine the range of $d$ for which a Turing instability occurs. Derive explicit expressions for the endpoints $k_{-}^2$ and $k_{+}^2$ of the unstable wavenumber band as functions of $d$ in that range.\n\n3. Determine the critical diffusion ratio $d_c$ (the smallest $d$ for which a Turing instability is possible), and compute the corresponding marginal wavenumber $k_c^2$ (at which the two band endpoints coalesce at onset).\n\nProvide your final answer as the single row matrix $\\bigl(d_c,\\,k_c^2\\bigr)$. No rounding is required; give exact values. Assume all quantities are nondimensional, so no physical units need be reported. Do not include any inequalities in your final answer.", "solution": "The problem requires a linear stability analysis of a two-species reaction-diffusion system. The state of the system is described by a vector of concentrations $\\mathbf{c} = (u,v)^T$. The evolution of small perturbations $\\delta\\mathbf{c}$ from a homogeneous steady state $\\mathbf{c}_0$ is governed by the linearized partial differential equation:\n$$ \\frac{\\partial}{\\partial t} \\delta\\mathbf{c} = J \\delta\\mathbf{c} + D \\nabla^2 \\delta\\mathbf{c} $$\nwhere $J$ is the Jacobian matrix of the reaction kinetics and $D$ is the diagonal matrix of diffusion coefficients, evaluated at the steady state $\\mathbf{c}_0$. We are given:\n$$ J = \\begin{pmatrix} f_u & f_v \\\\ g_u & g_v \\end{pmatrix} = \\begin{pmatrix} 1 & -2 \\\\ 3 & -5 \\end{pmatrix}, \\quad D = \\begin{pmatrix} 1 & 0 \\\\ 0 & d \\end{pmatrix} $$\nWe consider a Fourier mode perturbation in one spatial dimension, $\\delta\\mathbf{c}(x,t) = \\mathbf{u}_k \\exp(\\lambda t + i k x)$, where $k$ is the wavenumber and $\\lambda$ is the growth rate. Substituting this into the governing equation yields an eigenvalue problem for $\\lambda$:\n$$ \\lambda \\mathbf{u}_k = (J - k^2 D) \\mathbf{u}_k $$\nThe growth rates $\\lambda$ are the eigenvalues of the matrix $J_k = J - k^2 D$. The stability of the system for a given wavenumber $k$ is determined by the signs of the real parts of these eigenvalues. The eigenvalues are the roots of the characteristic polynomial $\\det(J_k - \\lambda I) = 0$, which is\n$$ \\lambda^2 - \\tau_k \\lambda + \\Delta_k = 0 $$\nwhere $\\tau_k = \\operatorname{tr}(J_k)$ and $\\Delta_k = \\operatorname{det}(J_k)$.\nExplicitly, the trace is:\n$$ \\tau_k = \\operatorname{tr}(J - k^2 D) = (f_u - k^2) + (g_v - d k^2) = (f_u + g_v) - (1+d)k^2 = \\tau - (1+d)k^2 $$\nAnd the determinant is:\n$$ \\Delta_k = \\det(J - k^2 D) = (f_u - k^2)(g_v - d k^2) - f_v g_u = (f_u g_v - f_v g_u) - (d f_u + g_v)k^2 + d k^4 = \\Delta - (d f_u + g_v)k^2 + d k^4 $$\nA diffusion-driven instability, or Turing instability, occurs when the steady state is stable to purely temporal perturbations (i.e., for $k=0$) but unstable to spatial perturbations with some wavenumber $k \\neq 0$.\n\nFirst, we verify the stability of the kinetics without diffusion ($k=0$). The eigenvalues of $J$ must have negative real parts. This requires $\\tau = \\operatorname{tr}(J) < 0$ and $\\Delta = \\det(J) > 0$. For the given Jacobian:\n$$ \\tau = f_u + g_v = 1 + (-5) = -4 $$\n$$ \\Delta = f_u g_v - f_v g_u = (1)(-5) - (-2)(3) = -5 + 6 = 1 $$\nSince $\\tau = -4 < 0$ and $\\Delta = 1 > 0$, the spatially homogeneous steady state is stable in the absence of diffusion, as stipulated.\n\nNext, we seek conditions for an instability to be driven by diffusion, i.e., $\\operatorname{Re}(\\lambda) > 0$ for some $k^2 > 0$. The roots of the characteristic equation are $\\lambda = (\\tau_k \\pm \\sqrt{\\tau_k^2 - 4\\Delta_k}) / 2$. Given that $\\tau < 0$ and $d>0$, it follows that $\\tau_k = \\tau - (1+d)k^2$ is always negative for any $k$. Therefore, a Hopf bifurcation (where $\\tau_k=0$ for some $k$) is not possible. An instability can only arise if an eigenvalue becomes real and positive. Since $\\tau_k < 0$, for $\\lambda$ to be positive, we must have $\\sqrt{\\tau_k^2 - 4\\Delta_k} > -\\tau_k$, which is equivalent to $\\tau_k^2 - 4\\Delta_k > \\tau_k^2$, or simply $\\Delta_k < 0$.\n\nThus, the condition for a diffusion-driven instability is that $\\Delta_k$ must be negative for some range of positive $k^2$. Let $K = k^2$. The function $\\Delta_k(K) = d K^2 - (d f_u + g_v)K + \\Delta$ is a parabola in $K$ opening upwards (since $d>0$). At $K=0$, $\\Delta_k(0) = \\Delta > 0$. For the parabola to become negative for some $K>0$, two conditions must be met:\n1. The vertex of the parabola must lie at a positive $K$ value. The minimum occurs at $K = (d f_u + g_v)/(2d)$. This requires $d f_u + g_v > 0$.\n2. The value of $\\Delta_k$ at this minimum must be negative. The minimum value is $\\Delta - (d f_u + g_v)^2 / (4d)$. Thus, we need $\\Delta - (d f_u + g_v)^2 / (4d) < 0$, which is equivalent to $(d f_u + g_v)^2 > 4d\\Delta$.\nThis completes the derivation of the general necessary and sufficient conditions for Turing instability.\n\nNow we specialize these conditions to the given problem. With $f_u=1$, $g_v=-5$, and $\\Delta=1$, the conditions become:\n1. $d(1) + (-5) > 0 \\implies d > 5$.\n2. $(d(1) - 5)^2 > 4d(1) \\implies (d-5)^2 > 4d$.\nExpanding the second inequality gives $d^2 - 10d + 25 > 4d$, which simplifies to $d^2 - 14d + 25 > 0$. To find when this inequality holds, we find the roots of the quadratic equation $d^2 - 14d + 25 = 0$:\n$$ d = \\frac{14 \\pm \\sqrt{(-14)^2 - 4(1)(25)}}{2} = \\frac{14 \\pm \\sqrt{196 - 100}}{2} = \\frac{14 \\pm \\sqrt{96}}{2} = \\frac{14 \\pm 4\\sqrt{6}}{2} = 7 \\pm 2\\sqrt{6} $$\nThe parabola $d^2 - 14d + 25$ is positive for $d > 7+2\\sqrt{6}$ or $d < 7-2\\sqrt{6}$. We must satisfy this and $d>5$ simultaneously.\nThe root $7-2\\sqrt{6} = 7-\\sqrt{24}$ is between $2$ and $3$, so the region $d < 7-2\\sqrt{6}$ is incompatible with $d>5$.\nThe root $7+2\\sqrt{6} = 7+\\sqrt{24}$ is greater than $7+\\sqrt{16}=11$, so the condition $d > 7+2\\sqrt{6}$ implies $d>5$.\nTherefore, the range of the diffusion ratio $d$ for which a Turing instability occurs is $d > 7+2\\sqrt{6}$.\n\nThe band of unstable wavenumbers $(k_{-}^2, k_{+}^2)$ is the interval of $k^2 > 0$ where $\\Delta_k < 0$. The endpoints $k_{-}^2$ and $k_{+}^2$ are the roots of the equation $\\Delta_k = d(k^2)^2 - (d-5)k^2 + 1 = 0$. Using the quadratic formula for $k^2$:\n$$ k^2 = \\frac{(d-5) \\pm \\sqrt{(d-5)^2 - 4d}}{2d} = \\frac{d-5 \\pm \\sqrt{d^2 - 14d + 25}}{2d} $$\nFor $d > 7+2\\sqrt{6}$, the discriminant is positive, and since $d>5$, both the sum of roots $(d-5)/d$ and product of roots $1/d$ are positive, ensuring two distinct positive roots for $k^2$. The endpoints are:\n$$ k_{-}^2 = \\frac{d-5 - \\sqrt{d^2 - 14d + 25}}{2d}, \\quad k_{+}^2 = \\frac{d-5 + \\sqrt{d^2 - 14d + 25}}{2d} $$\n\nFinally, we determine the critical diffusion ratio $d_c$ and the corresponding marginal wavenumber $k_c^2$. The onset of instability occurs at the minimum value of $d$ that satisfies the instability conditions. This corresponds to the point where the unstable band emerges, i.e., when $k_{-}^2 = k_{+}^2$. This happens when the discriminant of the quadratic for $k^2$ is zero:\n$$ d_c^2 - 14d_c + 25 = 0 $$\nAs established, the only root satisfying the constraint $d_c > 5$ is $d_c = 7+2\\sqrt{6}$. This is the critical diffusion ratio.\n\nAt this critical value, the wavenumber $k_c^2$ is unique:\n$$ k_c^2 = \\frac{d_c - 5}{2d_c} $$\nSubstituting the expression for $d_c$:\n$$ k_c^2 = \\frac{(7+2\\sqrt{6}) - 5}{2(7+2\\sqrt{6})} = \\frac{2+2\\sqrt{6}}{2(7+2\\sqrt{6})} = \\frac{1+\\sqrt{6}}{7+2\\sqrt{6}} $$\nTo simplify, we rationalize the denominator:\n$$ k_c^2 = \\frac{1+\\sqrt{6}}{7+2\\sqrt{6}} \\cdot \\frac{7-2\\sqrt{6}}{7-2\\sqrt{6}} = \\frac{(1+\\sqrt{6})(7-2\\sqrt{6})}{7^2 - (2\\sqrt{6})^2} = \\frac{7 - 2\\sqrt{6} + 7\\sqrt{6} - 2(6)}{49 - 24} = \\frac{-5 + 5\\sqrt{6}}{25} = \\frac{5(\\sqrt{6}-1)}{25} $$\n$$ k_c^2 = \\frac{\\sqrt{6}-1}{5} $$\nThe required critical values are $d_c = 7+2\\sqrt{6}$ and $k_c^2 = \\frac{\\sqrt{6}-1}{5}$.", "answer": "$$\\boxed{\\begin{pmatrix} 7+2\\sqrt{6} & \\frac{\\sqrt{6}-1}{5} \\end{pmatrix}}$$", "id": "2661473"}, {"introduction": "With the fundamental conditions established, we can now apply them to a specific, recognized chemical system. This practice focuses on the celebrated Schnakenberg model, a classic example of a reaction network capable of producing Turing patterns. You will linearize the kinetics around the steady state and use the conditions for instability to explore its parameter space, linking the continuous theory to the discrete modes allowed in a finite domain [@problem_id:2661515]. This exercise provides a concrete example of how abstract stability theory explains observable pattern formation in chemical models.", "problem": "Consider the two-species reaction–diffusion system with Schnakenberg kinetics on the one-dimensional interval of length $L=10$ under homogeneous Neumann boundary conditions (no-flux at the endpoints):\n$$\n\\frac{\\partial u}{\\partial t} = d_1 \\frac{\\partial^2 u}{\\partial x^2} + f(u,v), \n\\qquad\n\\frac{\\partial v}{\\partial t} = d_2 \\frac{\\partial^2 v}{\\partial x^2} + g(u,v),\n$$\nwhere the local reaction terms are\n$$\nf(u,v) = a - u + u^2 v, \n\\qquad\ng(u,v) = b - u^2 v,\n$$\nwith parameters $a=0.2$, $b=1.3$, $d_1=1$, and $d_2>0$ to be determined. Let $(u^\\ast,v^\\ast)$ denote the unique positive homogeneous steady state and let $J$ be the Jacobian of $(f,g)$ evaluated at $(u^\\ast,v^\\ast)$. Using only first principles (linearization about $(u^\\ast,v^\\ast)$ and separation of variables into Laplacian eigenmodes under Neumann boundary conditions), determine the following:\n\n1) The exact analytic expression for the critical diffusion ratio $d_{2,c}$ at which a diffusion-driven (Turing) instability first occurs.\n\n2) The exact analytic expressions for the continuous mode-index bounds $n_-^\\ast(d_2)$ and $n_+^\\ast(d_2)$ such that, for $d_2>d_{2,c}$, the unstable discrete Neumann modes are precisely the integers $n$ satisfying $n_-^\\ast(d_2) < n < n_+^\\ast(d_2)$. Here the discrete Neumann eigen-wavenumbers are $k_n = n \\pi/L$.\n\nReport your final result as a single row matrix containing three closed-form expressions in the order $\\big(d_{2,c},\\,n_-^\\ast(d_2),\\,n_+^\\ast(d_2)\\big)$. Do not approximate or round; give exact expressions. No units are required in the final answer.", "solution": "The problem is well-posed and scientifically grounded. We proceed with the solution.\n\nFirst, we find the unique positive homogeneous steady state $(u^\\ast, v^\\ast)$ by setting the reaction terms $f(u,v)$ and $g(u,v)$ to zero:\n$$\n\\begin{cases}\n    f(u,v) = a - u + u^2 v = 0 \\\\\n    g(u,v) = b - u^2 v = 0\n\\end{cases}\n$$\nFrom the second equation, we have $u^2 v = b$. Substituting this into the first equation yields $a - u + b = 0$, which gives $u^\\ast = a+b$.\nSubstituting $u^\\ast$ back into $u^2 v = b$ gives $(a+b)^2 v^\\ast = b$, so $v^\\ast = \\frac{b}{(a+b)^2}$.\nUsing the given parameters $a=0.2$ and $b=1.3$:\n$u^\\ast = 0.2 + 1.3 = 1.5 = \\frac{3}{2}$\n$v^\\ast = \\frac{1.3}{(0.2+1.3)^2} = \\frac{1.3}{1.5^2} = \\frac{1.3}{2.25} = \\frac{13/10}{9/4} = \\frac{13}{10} \\cdot \\frac{4}{9} = \\frac{52}{90} = \\frac{26}{45}$.\n\nNext, we linearize the system around this steady state. The Jacobian of the reaction kinetics is:\n$$ J = \\begin{pmatrix} \\frac{\\partial f}{\\partial u} & \\frac{\\partial f}{\\partial v} \\\\ \\frac{\\partial g}{\\partial u} & \\frac{\\partial g}{\\partial v} \\end{pmatrix} = \\begin{pmatrix} -1+2uv & u^2 \\\\ -2uv & -u^2 \\end{pmatrix} $$\nEvaluating at $(u^\\ast, v^\\ast)$:\n$f_u^\\ast \\equiv \\frac{\\partial f}{\\partial u}\\Big|_{(u^\\ast,v^\\ast)} = -1 + 2u^\\ast v^\\ast = -1 + 2(a+b)\\frac{b}{(a+b)^2} = -1 + \\frac{2b}{a+b} = -1 + \\frac{2(1.3)}{1.5} = -1 + \\frac{2.6}{1.5} = \\frac{11}{15}$.\n$f_v^\\ast \\equiv \\frac{\\partial f}{\\partial v}\\Big|_{(u^\\ast,v^\\ast)} = (u^\\ast)^2 = (a+b)^2 = (1.5)^2 = 2.25 = \\frac{9}{4}$.\n$g_u^\\ast \\equiv \\frac{\\partial g}{\\partial u}\\Big|_{(u^\\ast,v^\\ast)} = -2u^\\ast v^\\ast = -\\frac{2b}{a+b} = -\\frac{2(1.3)}{1.5} = -\\frac{2.6}{1.5} = -\\frac{26}{15}$.\n$g_v^\\ast \\equiv \\frac{\\partial g}{\\partial v}\\Big|_{(u^\\ast,v^\\ast)} = -(u^\\ast)^2 = -(a+b)^2 = -(1.5)^2 = -2.25 = -\\frac{9}{4}$.\nSo, the Jacobian matrix at the steady state is $J = \\begin{pmatrix} 11/15 & 9/4 \\\\ -26/15 & -9/4 \\end{pmatrix}$.\n\nA diffusion-driven instability requires the homogeneous steady state to be stable in the absence of diffusion. This requires the eigenvalues of $J$ to have negative real parts, which is satisfied if $\\text{tr}(J) < 0$ and $\\det(J) > 0$.\n$\\text{tr}(J) = f_u^\\ast + g_v^\\ast = \\frac{11}{15} - \\frac{9}{4} = \\frac{44 - 135}{60} = -\\frac{91}{60} < 0$.\n$\\det(J) = f_u^\\ast g_v^\\ast - f_v^\\ast g_u^\\ast = (\\frac{11}{15})(-\\frac{9}{4}) - (\\frac{9}{4})(-\\frac{26}{15}) = \\frac{9}{4 \\cdot 15} (-11+26) = \\frac{9 \\cdot 15}{60} = \\frac{9}{4} > 0$.\nBoth conditions are met, so the steady state is stable for the reaction-only system.\n\nNow we consider the full reaction-diffusion system linearized around $(u^\\ast, v^\\ast)$. We seek solutions of the form of separated variables (Fourier modes), which for Neumann boundary conditions are $\\cos(k_n x)$ with wavenumbers $k_n = \\frac{n\\pi}{L}$ for integers $n \\ge 0$.\nFor each mode $n$, the temporal evolution is governed by the eigenvalues $\\lambda$ of the matrix $J_{k_n} = J - k_n^2 D$, where $D = \\text{diag}(d_1, d_2)$.\n$$ J_{k_n} = \\begin{pmatrix} f_u^\\ast - d_1 k_n^2 & f_v^\\ast \\\\ g_u^\\ast & g_v^\\ast - d_2 k_n^2 \\end{pmatrix} $$\nInstability for mode $n$ occurs if an eigenvalue of $J_{k_n}$ acquires a positive real part. The sum of eigenvalues is $\\text{tr}(J_{k_n}) = \\text{tr}(J) - (d_1+d_2)k_n^2$. Since $\\text{tr}(J) < 0$, $\\text{tr}(J_{k_n})$ is always negative for $k_n>0$. Thus, instability can only occur if the eigenvalues are real and one becomes positive, which corresponds to the product of eigenvalues, $\\det(J_{k_n})$, becoming negative.\nLet $k^2 = k_n^2$. The condition for instability is $\\det(J_k) < 0$.\n$\\det(J_k) = (f_u^\\ast - d_1 k^2)(g_v^\\ast - d_2 k^2) - f_v^\\ast g_u^\\ast = \\det(J) - (d_1 g_v^\\ast + d_2 f_u^\\ast)k^2 + d_1 d_2 k^4$.\nLet $h(K) = d_1 d_2 K^2 - (d_1 g_v^\\ast + d_2 f_u^\\ast)K + \\det(J)$, where $K=k^2$. Instability corresponds to $h(K) < 0$ for some $K>0$.\nThis quadratic in $K$ can have a negative region only if its minimum is negative. The minimum occurs at $K_c = \\frac{d_1 g_v^\\ast + d_2 f_u^\\ast}{2d_1 d_2}$. For instability to be possible ($K_c>0$), we must have $d_1 g_v^\\ast + d_2 f_u^\\ast > 0$. Given $d_1=1, g_v^\\ast < 0, f_u^\\ast > 0$, this requires $d_2 f_u^\\ast > -d_1 g_v^\\ast$.\nThe minimum value is $h(K_c) = \\det(J) - \\frac{(d_1 g_v^\\ast + d_2 f_u^\\ast)^2}{4d_1 d_2}$.\nInstability is possible if $h(K_c) < 0$, which means $(d_1 g_v^\\ast + d_2 f_u^\\ast)^2 > 4d_1 d_2 \\det(J)$.\n\n1) The critical diffusion coefficient $d_{2,c}$ is the value of $d_2$ where instability first becomes possible. This occurs when the minimum of $h(K)$ touches zero: $h(K_c) = 0$.\n$(d_1 g_v^\\ast + d_{2,c} f_u^\\ast)^2 = 4d_1 d_{2,c} \\det(J)$.\nTaking the positive square root (since $d_1 g_v^\\ast + d_2 f_u^\\ast > 0$):\n$d_1 g_v^\\ast + d_{2,c} f_u^\\ast = 2\\sqrt{d_1 d_{2,c} \\det(J)}$.\nLet $y = \\sqrt{d_{2,c}}$. This gives a quadratic equation for $y$:\n$f_u^\\ast y^2 - 2\\sqrt{d_1 \\det(J)} y + d_1 g_v^\\ast=0$.\nSubstituting the values $d_1=1$, $f_u^\\ast = 11/15$, $g_v^\\ast = -9/4$, and $\\det(J) = 9/4$:\n$\\frac{11}{15} y^2 - 2\\sqrt{1 \\cdot \\frac{9}{4}} y - \\frac{9}{4} = 0 \\implies \\frac{11}{15} y^2 - 3y - \\frac{9}{4} = 0$.\nMultiplying by $60$: $44y^2 - 180y - 135 = 0$.\nSolving for $y>0$ using the quadratic formula:\n$y = \\frac{180 + \\sqrt{(-180)^2 - 4(44)(-135)}}{2(44)} = \\frac{180 + \\sqrt{32400 + 23760}}{88} = \\frac{180 + \\sqrt{56160}}{88}$.\nSimplifying the radical: $\\sqrt{56160} = \\sqrt{144 \\cdot 390} = 12\\sqrt{390}$.\n$y = \\frac{180 + 12\\sqrt{390}}{88} = \\frac{45 + 3\\sqrt{390}}{22}$.\n$d_{2,c} = y^2 = \\left(\\frac{45 + 3\\sqrt{390}}{22}\\right)^2 = \\frac{45^2 + 2(45)(3\\sqrt{390}) + 9(390)}{484} = \\frac{2025 + 270\\sqrt{390} + 3510}{484} = \\frac{5535 + 270\\sqrt{390}}{484}$.\n\n2) For a given $d_2 > d_{2,c}$, the range of unstable squared wavenumbers $K=k^2$ is found by solving $h(K)<0$. The boundaries of this range are the roots of $h(K)=0$:\n$K_\\pm = \\frac{ (d_1 g_v^\\ast + d_2 f_u^\\ast) \\pm \\sqrt{(d_1 g_v^\\ast + d_2 f_u^\\ast)^2 - 4d_1 d_2 \\det(J)} }{2d_1 d_2}$.\nThe unstable modes have wavenumbers $k$ such that $\\sqrt{K_-} < k < \\sqrt{K_+}$.\nThe discrete wavenumbers are $k_n = n\\pi/L$. The unstable modes are integers $n$ such that $\\sqrt{K_{-}} < n\\pi/L < \\sqrt{K_{+}}$, which means $\\frac{L}{\\pi}\\sqrt{K_{-}} < n < \\frac{L}{\\pi}\\sqrt{K_{+}}$.\nThe problem defines continuous mode-index bounds $n_\\pm^\\ast(d_2) = \\frac{L}{\\pi}\\sqrt{K_\\pm}$.\nSubstituting $L=10$ and the expressions for $K_\\pm$:\n$n_\\pm^\\ast(d_2) = \\frac{10}{\\pi}\\sqrt{ \\frac{ (d_1 g_v^\\ast + d_2 f_u^\\ast) \\pm \\sqrt{(d_1 g_v^\\ast + d_2 f_u^\\ast)^2 - 4d_1 d_2 \\det(J)} }{2d_1 d_2} }$.\nUsing the numerical values for the parameters and Jacobian elements:\n$n_\\pm^\\ast(d_2) = \\frac{10}{\\pi}\\sqrt{ \\frac{ \\frac{11}{15}d_2 - \\frac{9}{4} \\pm \\sqrt{(\\frac{11}{15}d_2 - \\frac{9}{4})^2 - 9d_2} }{2d_2} }$.\nThe expressions for $n_-^\\ast(d_2)$ and $n_+^\\ast(d_2)$ are obtained by taking the minus and plus signs in the numerator, respectively.\n\nFinal expressions for the three required quantities are:\n$d_{2,c} = \\frac{5535 + 270\\sqrt{390}}{484}$.\n$n_{-}^\\ast(d_2) = \\frac{10}{\\pi} \\sqrt{ \\frac{1}{2d_2} \\left( \\frac{11}{15}d_2 - \\frac{9}{4} - \\sqrt{\\left(\\frac{11}{15}d_2 - \\frac{9}{4}\\right)^2 - 9 d_2} \\right) }$.\n$n_{+}^\\ast(d_2) = \\frac{10}{\\pi} \\sqrt{ \\frac{1}{2d_2} \\left( \\frac{11}{15}d_2 - \\frac{9}{4} + \\sqrt{\\left(\\frac{11}{15}d_2 - \\frac{9}{4}\\right)^2 - 9 d_2} \\right) }$.", "answer": "$$ \\boxed{ \\begin{pmatrix} \\frac{5535 + 270\\sqrt{390}}{484} & \\frac{10}{\\pi} \\sqrt{ \\frac{1}{2d_2} \\left( \\frac{11}{15}d_2 - \\frac{9}{4} - \\sqrt{\\left(\\frac{11}{15}d_2 - \\frac{9}{4}\\right)^2 - 9 d_2} \\right) } & \\frac{10}{\\pi} \\sqrt{ \\frac{1}{2d_2} \\left( \\frac{11}{15}d_2 - \\frac{9}{4} + \\sqrt{\\left(\\frac{11}{15}d_2 - \\frac{9}{4}\\right)^2 - 9 d_2} \\right) } \\end{pmatrix} } $$", "id": "2661515"}, {"introduction": "While analytical methods provide deep insight, they are often limited to simple two-species systems. To analyze more complex networks, we turn to computational tools. This final practice guides you in developing a numerical algorithm to scan for diffusion-driven instabilities by computing the system's dispersion relation, $\\alpha(k^2)$, over a grid of wavenumbers [@problem_id:2661506]. Mastering this computational approach equips you with a powerful and generalizable method for exploring the potential for pattern formation in any reaction-diffusion system.", "problem": "You are given a linearized reaction–diffusion system for an $n$-species chemical reaction network in the form of a spatially homogeneous steady state with Jacobian matrix $J \\in \\mathbb{R}^{n \\times n}$ and a diagonal diffusion matrix $D = \\mathrm{diag}(d_1,\\dots,d_n)$ with strictly positive entries $d_i \\in \\mathbb{R}_{>0}$. For each spatial Fourier mode with squared wavenumber $k^2 \\in \\mathbb{R}_{\\ge 0}$, the linearized dynamics of perturbations evolve according to the matrix $A(k^2) = J - k^2 D$. The spectral abscissa $\\alpha(k^2)$ is defined as the maximum of the real parts of the eigenvalues of $A(k^2)$.\n\nYour tasks are:\n- Formulate and implement an algorithm that, given $J$ and $D$, scans a specified grid of values of $k^2$ and computes the spectral abscissa $\\alpha(k^2)$ for each grid point, then returns the maximum value $\\max_{k^2} \\alpha(k^2)$ over the grid together with the $k^2$ at which that maximum occurs.\n- Using this, decide if the pair $(J,D)$ exhibits a diffusion-driven (Turing) instability in the following sense: the homogeneous steady state is linearly stable without diffusion (that is, $\\alpha(0) &lt; 0$), but there exists some $k^2 &gt; 0$ such that $\\alpha(k^2) &gt; 0$. Use a numerical tolerance $\\varepsilon = 10^{-8}$ when comparing to zero to mitigate floating-point roundoff.\n- Justify, in comments or documentation within your code, the correctness of your algorithm with respect to the underlying linear stability analysis of reaction–diffusion systems, and analyze the computational complexity in terms of the number of species $n$ and the number of scanned grid points $M$.\n\nFundamental base you may assume: The linearization of reaction–diffusion systems about a homogeneous steady state leads to a family of linear systems parameterized by $k^2$ whose growth rates are the eigenvalues of $A(k^2) = J - k^2 D$, and diffusion-driven instability occurs when the homogeneous steady state is linearly stable in the absence of diffusion yet becomes unstable for some nonzero spatial mode.\n\nImplement the following algorithmic requirements:\n- Define a uniform grid $G = \\{k^2_m\\}_{m=0}^{M-1}$ on an interval $[0,K_{\\max}]$ with spacing $\\Delta k^2$, where $k^2_m = m \\,\\Delta k^2$, $K_{\\max} = (M-1)\\Delta k^2$.\n- For each $k^2_m \\in G$, compute $A(k^2_m) = J - k^2_m D$, then compute all eigenvalues of $A(k^2_m)$ and record $\\alpha(k^2_m)$ as the maximum real part among these eigenvalues.\n- Compute $\\alpha(0)$, the maximum spectral abscissa over the grid, $\\alpha_{\\max} = \\max_{m} \\alpha(k^2_m)$, and the corresponding $k^2$-value $k^2_\\star$ where the maximum occurs (choose the smallest $k^2_m$ in case of ties).\n- Decide the Turing-instability indicator as a boolean\n  $$\\mathrm{is\\_turing} = \\big(\\alpha(0) &lt; -\\varepsilon\\big) \\wedge \\big(\\alpha_{\\max} &gt; \\varepsilon\\big).$$\n\nNumerical specifications:\n- Use the tolerance $\\varepsilon = 10^{-8}$.\n- Use a uniform grid with $K_{\\max} = 10$ and $\\Delta k^2 = 0.01$, i.e., $M = 1001$.\n- Return floating-point outputs rounded to $6$ decimal places.\n\nTest suite:\nFor each test case, you are given $(J,D)$ where all numbers are dimensionless. Use the shared grid parameters $K_{\\max} = 10$ and $\\Delta k^2 = 0.01$ for all cases.\n\n- Test case $1$ (two species, strongly differential diffusion, expected diffusion-driven instability):\n  $$J_1 = \\begin{bmatrix} 1 & 2 \\\\ -3 & -4 \\end{bmatrix}, \\quad D_1 = \\mathrm{diag}(0.1,\\,10).$$\n\n- Test case $2$ (two species, equal diffusion, expected no diffusion-driven instability):\n  $$J_2 = \\begin{bmatrix} 1 & 2 \\\\ -3 & -4 \\end{bmatrix}, \\quad D_2 = \\mathrm{diag}(1,\\,1).$$\n\n- Test case $3$ (two species, unstable without diffusion, not a Turing instability by definition):\n  $$J_3 = \\begin{bmatrix} 1 & 0 \\\\ 0 & -0.5 \\end{bmatrix}, \\quad D_3 = \\mathrm{diag}(0.1,\\,10).$$\n\n- Test case $4$ (three species, diagonally dominant stable Jacobian with equal diffusion, expected no diffusion-driven instability):\n  $$J_4 = \\begin{bmatrix} -1 & 0.2 & 0 \\\\ 0.1 & -2 & 0.3 \\\\ 0 & 0.2 & -3 \\end{bmatrix}, \\quad D_4 = \\mathrm{diag}(1,\\,1,\\,1).$$\n\nOutput specification:\n- For each test case, output a list of four items:\n  $[\\mathrm{is\\_turing},\\,\\alpha(0),\\,\\alpha_{\\max},\\,k^2_\\star]$, where $\\mathrm{is\\_turing}$ is a boolean, and the three floating-point values are rounded to $6$ decimal places.\n- Your program should produce a single line of output containing the results for all test cases as a comma-separated list enclosed in square brackets, with each test case result itself formatted as a list. For example:\n  $$[\\,[\\mathrm{True},-1.000000,0.123456,0.210000],\\,[\\mathrm{False},-0.500000,-0.100000,0.000000]\\,].$$\n\nYour code must be self-contained, require no input, and adhere to the specified numerical parameters above. No physical units are involved in this problem; all quantities are dimensionless. The algorithm must be implemented in a way that can handle general $n$.", "solution": "The problem requires the formulation and implementation of a numerical algorithm to test for diffusion-driven (Turing) instability in a general $n$-species reaction-diffusion system. The system's linear dynamics near a homogeneous steady state are described by the matrix $A(k^2) = J - k^2 D$, where $J \\in \\mathbb{R}^{n \\times n}$ is the reaction Jacobian matrix, $D = \\mathrm{diag}(d_1, \\dots, d_n)$ is the diagonal matrix of positive diffusion coefficients $d_i > 0$, and $k^2 \\ge 0$ is the squared wavenumber of a spatial perturbation.\n\nThe linear stability of the system for a given spatial mode $k^2$ is determined by the spectral abscissa of the matrix $A(k^2)$, defined as $\\alpha(k^2) = \\max_{j} \\{\\mathrm{Re}(\\lambda_j)\\}$, where $\\{\\lambda_j\\}$ are the eigenvalues of $A(k^2)$. A positive spectral abscissa, $\\alpha(k^2) > 0$, implies that perturbations with wavenumber $k$ will grow exponentially in time, indicating an instability. A negative spectral abscissa, $\\alpha(k^2) < 0$, implies that such perturbations decay, indicating stability.\n\nA diffusion-driven, or Turing, instability is a specific phenomenon where a system that is stable to homogeneous perturbations (in the absence of diffusion, i.e., for $k^2=0$) is driven to instability by the presence of diffusion at some non-zero spatial frequency. Formally, this corresponds to two conditions:\n$1$. The homogeneous steady state is stable: $\\alpha(0) < 0$.\n$2$. There exists some range of wavenumbers for which the system is unstable: $\\alpha(k^2) > 0$ for some $k^2 > 0$.\n\nThe algorithm to verify these conditions for a given pair $(J,D)$ is constructed as follows:\n\nFirst, we must investigate the behavior of the function $\\alpha(k^2)$ over a range of non-negative $k^2$ values. Since an analytical solution for the eigenvalues of a general $n \\times n$ matrix is not feasible, and maximizing $\\alpha(k^2)$ analytically is intractable, we employ a numerical approach. We discretize the domain of interest for the squared wavenumber, $[0, K_{\\max}]$, into a uniform grid $G = \\{k^2_m\\}_{m=0}^{M-1}$ with a specified spacing $\\Delta k^2$. In this problem, the parameters are given as $K_{\\max} = 10$ and $\\Delta k^2 = 0.01$, resulting in $M=1001$ grid points.\n\nFor each point $k^2_m$ in the grid $G$, we perform the following steps:\n$1$. Construct the matrix for the specific mode: $A(k^2_m) = J - k^2_m D$.\n$2$. Compute the full spectrum of eigenvalues of the $n \\times n$ matrix $A(k^2_m)$ using a standard numerical linear algebra routine.\n$3$. Calculate the spectral abscissa for this mode by finding the maximum of the real parts of the computed eigenvalues: $\\alpha(k^2_m) = \\max_j \\{\\mathrm{Re}(\\lambda_j(A(k^2_m)))\\}$.\n\nAfter iterating through all grid points, we obtain an array of values representing the function $\\alpha(k^2)$ sampled on the grid $G$. From this array, we extract the necessary information:\n- The spectral abscissa at $k^2=0$, denoted $\\alpha(0)$, is the first element of this array.\n- The maximum spectral abscissa over the scanned range, $\\alpha_{\\max} = \\max_{m} \\{\\alpha(k^2_m)\\}$, is found by determining the maximum value in the array.\n- The corresponding squared wavenumber, $k^2_\\star$, is the grid point $k^2_m$ where this maximum is achieved. The problem specifies that in case of a tie, the smallest such $k^2_m$ should be chosen. This is naturally handled by algorithms that find the first index of the maximum value in the array.\n\nFinally, the Turing instability condition is checked using the computed values and a small numerical tolerance $\\varepsilon = 10^{-8}$ to account for floating-point inaccuracies. The boolean indicator $\\mathrm{is\\_turing}$ is determined by the logical predicate:\n$$ \\mathrm{is\\_turing} = (\\alpha(0) < -\\varepsilon) \\wedge (\\alpha_{\\max} > \\varepsilon) $$\nThis expression directly translates the theoretical definition of a Turing instability into a verifiable numerical test.\n\nThe correctness of this algorithm rests upon the foundational principles of linear stability theory and the assumption that the chosen grid is sufficiently fine to capture the essential features of the continuous function $\\alpha(k^2)$, including its global maximum within the interval $[0, K_{\\max}]$. The choice of $K_{\\max}$ must be large enough to contain the relevant range of unstable modes, which is typically problem-dependent. For the given test cases, the specified grid is adequate.\n\nThe computational complexity of this algorithm is determined by its most intensive step, which is the calculation of eigenvalues inside the main loop. For a general $n \\times n$ matrix, the complexity of standard eigenvalue algorithms (such as the QR algorithm) is approximately $O(n^3)$. Since this operation is repeated for each of the $M$ points on the wavenumber grid, the total computational complexity of the procedure is $O(M \\cdot n^3)$. The remaining operations, such as matrix assembly and finding the maximum of the resulting array, are of lower complexity, $O(M \\cdot n)$ and $O(M)$ respectively, and do not alter the overall scaling.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function that defines test cases, processes them,\n    and prints the results in the specified format.\n    \"\"\"\n    \n    # Numerical specifications\n    epsilon = 1e-8\n    k2_max = 10.0\n    delta_k2 = 0.01\n    \n    # Test cases defined as tuples of (Jacobian, Diffusion_matrix)\n    test_cases = [\n        # Test case 1 (two species, strongly differential diffusion)\n        (np.array([[1.0, 2.0], [-3.0, -4.0]]), \n         np.diag([0.1, 10.0])),\n        \n        # Test case 2 (two species, equal diffusion)\n        (np.array([[1.0, 2.0], [-3.0, -4.0]]),\n         np.diag([1.0, 1.0])),\n\n        # Test case 3 (two species, unstable without diffusion)\n        (np.array([[1.0, 0.0], [0.0, -0.5]]),\n         np.diag([0.1, 10.0])),\n\n        # Test case 4 (three species, diagonally dominant stable Jacobian)\n        (np.array([[-1.0, 0.2, 0.0], [0.1, -2.0, 0.3], [0.0, 0.2, -3.0]]),\n         np.diag([1.0, 1.0, 1.0]))\n    ]\n\n    # Generate the grid of k^2 values\n    num_points = int(k2_max / delta_k2) + 1\n    k2_grid = np.linspace(0, k2_max, num_points)\n\n    all_results = []\n    for J, D in test_cases:\n        result = process_case(J, D, k2_grid, epsilon)\n        all_results.append(result)\n\n    # Format the final output string according to the problem specification.\n    # Each sub-result is formatted as a string \"[bool,float,float,float]\"\n    # to avoid spaces introduced by Python's default list-to-string conversion.\n    result_strings = []\n    for res in all_results:\n        is_turing_str = str(res[0])\n        float_strs = [f\"{val:.6f}\" for val in res[1:]]\n        result_strings.append(f\"[{is_turing_str},{','.join(float_strs)}]\")\n    \n    # Join all sub-result strings and enclose in brackets.\n    final_output = f\"[{','.join(result_strings)}]\"\n    print(final_output)\n\ndef process_case(J, D, k2_grid, epsilon):\n    \"\"\"\n    Analyzes a single reaction-diffusion system (J, D) for Turing instability.\n\n    The algorithm's correctness derives from the direct application of linear stability\n    analysis for reaction-diffusion systems. By scanning a grid of wavenumbers (k),\n    it numerically approximates the dispersion relation alpha(k^2) and checks the\n    defining conditions for a Turing instability.\n\n    Complexity Analysis:\n    - n: number of species (size of matrix J)\n    - M: number of grid points in k2_grid\n    - The dominant operation is eigenvalue computation (O(n^3)) performed M times.\n    - Total complexity: O(M * n^3).\n\n    Args:\n        J (np.ndarray): The n x n Jacobian matrix.\n        D (np.ndarray): The n x n diagonal diffusion matrix.\n        k2_grid (np.ndarray): The grid of squared wavenumber values to scan.\n        epsilon (float): The numerical tolerance for comparisons with zero.\n\n    Returns:\n        list: A list containing [is_turing, alpha_0, alpha_max, k2_star].\n    \"\"\"\n    \n    alpha_values = []\n    for k2 in k2_grid:\n        # Construct the matrix A(k^2) = J - k^2 * D\n        A_k2 = J - k2 * D\n        \n        # Compute eigenvalues and find the spectral abscissa (max real part)\n        eigenvalues = np.linalg.eigvals(A_k2)\n        alpha_k2 = np.max(eigenvalues.real)\n        alpha_values.append(alpha_k2)\n\n    alpha_values = np.array(alpha_values)\n\n    # alpha(0) is the stability of the homogeneous steady state\n    alpha_0 = alpha_values[0]\n\n    # Find the maximum spectral abscissa over the grid and the corresponding k^2\n    # np.argmax() returns the index of the first occurrence of the maximum,\n    # which satisfies the tie-breaking rule (smallest k^2_m).\n    max_idx = np.argmax(alpha_values)\n    alpha_max = alpha_values[max_idx]\n    k2_star = k2_grid[max_idx]\n    \n    # Determine the Turing instability indicator based on the definition:\n    # Stable at k^2=0, but unstable for some k^2 > 0.\n    is_turing = (alpha_0 < -epsilon) and (alpha_max > epsilon)\n    \n    return [is_turing, alpha_0, alpha_max, k2_star]\n\n# Execute the solver\nsolve()\n\n```", "id": "2661506"}]}