{"hands_on_practices": [{"introduction": "模型预测控制的核心在于其“预测”能力。在计算最优控制动作之前，我们必须能够预测系统在未来一系列控制输入下的行为。本练习将引导你推导这一预测过程的数学基础，将未来状态序列表示为一个紧凑的矩阵-向量形式，这对于构建和求解 MPC 优化问题至关重要。[@problem_id:1603959] 这个推导是为线性时不变（LTI）系统设计 MPC 控制器的基础步骤。", "problem": "模型预测控制（也称为滚动时域控制，RHC）的一项基本任务是预测系统状态的未来演变。该预测用于在有限时间窗口内优化控制作用。\n\n考虑一个离散时间线性时不变 (LTI) 系统，其动态特性由以下状态空间方程描述：\n$$x_{k+1} = A x_k + B u_k$$\n其中 $k$ 是离散时间索引，$x_k \\in \\mathbb{R}^n$ 是状态向量，$u_k \\in \\mathbb{R}^m$ 是控制输入向量，$A \\in \\mathbb{R}^{n \\times n}$ 和 $B \\in \\mathbb{R}^{n \\times m}$ 是常数系统矩阵。\n\n令预测时域为一个正整数 $N$。我们将在该时域内的预测状态序列定义为堆叠列向量，该序列从当前时刻 $k$ 的已知状态 $x_k$ 开始：\n$$\\mathbf{X}_k = \\begin{pmatrix} x_{k+1|k} \\\\ x_{k+2|k} \\\\ \\vdots \\\\ x_{k+N|k} \\end{pmatrix}$$\n其中 $x_{k+j|k}$ 表示在时刻 $k+j$ 的预测状态，该状态是利用时刻 $k$ 的可用信息计算得出的。\n\n类似地，我们将规划的未来控制输入序列定义为堆叠列向量：\n$$\\mathbf{U}_k = \\begin{pmatrix} u_k \\\\ u_{k+1} \\\\ \\vdots \\\\ u_{k+N-1} \\end{pmatrix}$$\n\n您的任务是推导并将预测状态向量 $\\mathbf{X}_k$ 表示为当前状态 $x_k$ 和未来控制输入向量 $\\mathbf{U}_k$ 的线性函数。结果应以紧凑的矩阵-向量形式表示。", "solution": "我们从离散时间 LTI 动态方程 $x_{k+1}=A x_{k}+B u_{k}$ 开始，通过使用输入 $u_{k},u_{k+1},\\ldots,u_{k+N-1}$ 和已知的当前状态 $x_{k}$ 向前迭代状态方程来计算开环预测。前几个预测状态为\n$$\nx_{k+1|k}=A x_{k}+B u_{k},\n$$\n$$\nx_{k+2|k}=A x_{k+1|k}+B u_{k+1}=A\\left(A x_{k}+B u_{k}\\right)+B u_{k+1}=A^{2} x_{k}+A B u_{k}+B u_{k+1},\n$$\n$$\nx_{k+3|k}=A x_{k+2|k}+B u_{k+2}=A\\left(A^{2} x_{k}+A B u_{k}+B u_{k+1}\\right)+B u_{k+2}=A^{3} x_{k}+A^{2} B u_{k}+A B u_{k+1}+B u_{k+2}.\n$$\n通过归纳法，对于 $j \\in \\{1,\\ldots,N\\}$，通用的 $j$ 步预测为\n$$\nx_{k+j|k}=A^{j} x_{k}+\\sum_{i=0}^{j-1} A^{j-1-i} B\\, u_{k+i}.\n$$\n将这 $N$ 个预测状态堆叠成向量 $\\mathbf{X}_{k}=\\begin{pmatrix}x_{k+1|k} \\\\ x_{k+2|k} \\\\ \\vdots \\\\ x_{k+N|k}\\end{pmatrix}$，并将输入堆叠成向量 $\\mathbf{U}_{k}=\\begin{pmatrix}u_{k} \\\\ u_{k+1} \\\\ \\vdots \\\\ u_{k+N-1}\\end{pmatrix}$，得到紧凑的矩阵-向量形式\n$$\n\\mathbf{X}_{k}=\\underbrace{\\begin{pmatrix}\nA \\\\\nA^{2} \\\\\n\\vdots \\\\\nA^{N}\n\\end{pmatrix}}_{\\text{尺寸 }(N n)\\times n} x_{k}+\\underbrace{\\begin{pmatrix}\nB & 0 & \\cdots & 0 \\\\\nA B & B & \\cdots & 0 \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nA^{N-1} B & A^{N-2} B & \\cdots & B\n\\end{pmatrix}}_{\\text{尺寸 }(N n)\\times(N m)} \\mathbf{U}_{k},\n$$\n该形式是关于 $x_{k}$ 和 $\\mathbf{U}_{k}$ 的线性函数，并且其输入矩阵具有标准的下三角块托普利茨结构。", "answer": "$$\\boxed{\\mathbf{X}_{k}=\\begin{pmatrix}\nA \\\\\nA^{2} \\\\\n\\vdots \\\\\nA^{N}\n\\end{pmatrix} x_{k}+\\begin{pmatrix}\nB & 0 & \\cdots & 0 \\\\\nA B & B & \\cdots & 0 \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nA^{N-1} B & A^{N-2} B & \\cdots & B\n\\end{pmatrix} \\mathbf{U}_{k}}$$", "id": "1603959"}, {"introduction": "掌握了如何预测系统未来状态之后，下一步就是如何选择“最优”的控制输入。本练习通过一个最简洁的例子，让你亲手实践后退时域控制（Receding Horizon Control, RHC）的基本优化思想。通过在一个单步预测时域内最小化一个二次型代价函数 $J$，你将直接运用微积分知识求解出最优控制输入，从而对 MPC 的“控制”部分建立起直观而坚实的理解。[@problem_id:1603975]", "problem": "一个自主智能体沿单一线性轨道的位置由离散时间状态方程 $x_{k+1} = x_k + u_k$ 描述，其中 $x_k$ 是其在时间步 $k$ 时的位置，而 $u_k$ 是在该步施加的控制输入。所有量均为无量纲。该智能体从初始位置 $x_0 = 5$ 开始。\n\n目标是在初始时间步 $k=0$ 时选择一个控制输入 $u_0$，以最小化一个单步时域内的性能成本函数。成本函数定义为 $J = x_1^2 + u_0^2$，其中 $x_1$ 是下一时间步的位置， $u_0$ 是控制输入。\n\n计算使该成本函数 $J$ 最小化的控制输入 $u_0$ 的数值。", "solution": "离散时间动态方程由 $x_{k+1} = x_{k} + u_{k}$ 给出。在 $k=0$ 时，可得 $x_{1} = x_{0} + u_{0}$。已知 $x_{0} = 5$，我们有\n$$\nx_{1} = 5 + u_{0}.\n$$\n单步时域内的成本函数为\n$$\nJ(u_{0}) = x_{1}^{2} + u_{0}^{2} = (5 + u_{0})^{2} + u_{0}^{2}.\n$$\n为了使 $J$ 相对于 $u_{0}$ 最小化，我们对 $J$ 求导并将导数设为零。根据链式法则和微分的线性性质，\n$$\n\\frac{dJ}{du_{0}} = 2(5 + u_{0}) \\cdot 1 + 2u_{0} = 10 + 2u_{0} + 2u_{0} = 10 + 4u_{0}.\n$$\n为达到最优性，将一阶导数设为零：\n$$\n10 + 4u_{0} = 0 \\quad \\Rightarrow \\quad 4u_{0} = -10 \\quad \\Rightarrow \\quad u_{0} = -\\frac{10}{4} = -\\frac{5}{2}.\n$$\n二阶导数为\n$$\n\\frac{d^{2}J}{du_{0}^{2}} = 2 + 2 = 4 > 0,\n$$\n这证实了该临界点是一个极小值点。因此，使 $J$ 最小化的控制输入是 $u_{0} = -\\frac{5}{2}$。", "answer": "$$\\boxed{-\\frac{5}{2}}$$", "id": "1603975"}, {"introduction": "任何成功的工程系统都必须在物理和安全限制下运行。本练习将我们从纯粹的优化计算带入到现实世界的工程设计中，探讨 MPC 最强大的功能之一：处理约束。通过一个真实的发酵过程场景，你需要辨别哪些是不可逾越的“硬约束”（如安全温度上限 $T_{max}$），哪些是应当努力达成但允许有一定偏差的“软约束”（如最佳pH值 $pH_{opt}$）。[@problem_id:1583595] 这个练习将培养你在设计 MPC 控制器时进行权衡和决策的关键能力。", "problem": "一家生物制药公司正在为生物反应器中一个敏感的发酵过程设计控制系统。该控制器采用模型预测控制 (MPC) 策略来调节该过程。必须管理两个关键的过程变量：内部温度 $T$ 和以 pH 值衡量的酸度。\n\n发酵的产物是一种娇贵的蛋白质，如果温度超过临界值 $T_{max} = 38.0^\\circ\\text{C}$，它会发生不可逆的变性并被破坏。任何对该温度限制的违反，无论多么微小或短暂，都会导致整批产品的完全损失。\n\n反应的最佳 pH 值为 $pH_{opt} = 7.2$。偏离此值为不理想情况，因为这会降低反应速率和最终产率。然而，这些影响并非灾难性的；过程可以恢复，并且如果为了满足其他操作目标（例如维持温度约束），微小、暂时的偏离是可以容忍的。\n\n您的任务是确定在 MPC 控制器核心的优化问题中，应如何构建对温度 ($T \\le T_{max}$) 的约束和对期望 pH 水平（保持 $pH$ 接近 $pH_{opt}$）的要求。\n\n下列哪项描述了最合适的构建方式？\n\nA. 温度限制应为硬约束，pH 目标应为软约束。\n\nB. 温度限制应为软约束，pH 目标应为硬约束。\n\nC. 温度限制和 pH 目标都应作为硬约束实施。\n\nD. 温度限制和 pH 目标都应作为软约束实施。\n\nE. 温度限制应作为软约束实施，pH 目标应为无约束目标。", "solution": "在模型预测控制中，任何情况下都不能违反的约束必须被建模为硬约束，这意味着可行集排除了任何违反情况。那些违反是可容忍但不希望发生的约束则被建模为软约束，通常通过引入松弛变量并在目标函数中惩罚其值，或者等效地，在阶段成本中直接惩罚偏差。\n\n根据过程描述：\n- 任何对温度限制的违反都会导致整批产品的完全损失。这相当于对任何违反行为施加了实际上无限大的惩罚，因此在整个预测时域内的所有步骤中，温度约束都必须作为硬不等式约束来强制执行：\n$$\nT(k+i) \\le T_{max} \\quad \\text{for all } i \\in \\{0,\\dots,N-1\\}.\n$$\n- pH 值偏离 $pH_{opt}$ 是可以容忍的，并且是性能权衡的一部分，因此应被视为软约束。这可以通过直接在成本中惩罚偏差，或通过引入带松弛变量的软约束来构建。一个标准的 MPC 成本可能包含对偏差的二次惩罚：\n$$\nJ = \\sum_{i=0}^{N-1} \\left( w_{pH} \\left|\\mathrm{pH}(k+i) - pH_{opt}\\right|^{2} + w_{u} \\|\\Delta u(k+i)\\|^{2} \\right),\n$$\n同时受限于系统动力学和上述硬温度约束。或者，也可以写一个带有松弛变量 $\\sigma(k+i) \\ge 0$ 的软约束：\n$$\n\\left|\\mathrm{pH}(k+i) - pH_{opt}\\right| \\le \\sigma(k+i),\n$$\n并在成本中增加一个惩罚项，例如\n$$\nJ_{\\text{soft}} = \\sum_{i=0}^{N-1} \\lambda \\,\\sigma(k+i)^{2},\n$$\n同样，将 $T(k+i) \\le T_{max}$ 作为硬约束强制执行。\n\n评估各个选项：\n- A 与上述分析相符：温度为硬约束，pH 为软约束。\n- B 将温度设为软约束，pH 设为硬约束，这与温度违规的灾难性后果相矛盾。\n- C 将两者都强制设为硬约束，这会因不允许在 pH 上进行有利的权衡而无谓地限制了可行性。\n- D 将两者都设为软约束，这有导致灾难性温度违规的风险。\n- E 将温度设为软约束，这是不可接受的，并且即使作为软约束，也移除了对 pH 的明确约束指导。\n\n因此，合适的构建方式是 A。", "answer": "$$\\boxed{A}$$", "id": "1583595"}]}