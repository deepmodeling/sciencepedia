{"hands_on_practices": [{"introduction": "理解设计变更如何影响系统性能是一项核心的工程技能。第一个实践将探讨一个常见的场景：在需要保持恒定体积流量 $Q$ 的情况下，将管道升级为更大直径的管道。通过应用达西-魏斯巴赫方程和经验性的摩擦系数关联式，你将定量地确定这一变更对水头损失的显著影响，而水头损失直接关系到所需的泵送功率。[@problem_id:1807525]", "problem": "一个城市供水区计划升级其主供水管线的一部分，以提高效率。现有系统使用一根直径为 $D_1$ 的长直水平管道。为了满足未来的需求，该供水区正考虑将此管道更换为一根直径为 $D_2 = 2 D_1$ 的新管道。新管道将由与旧管道相同的光滑材料制成。\n\n在一个特定的运行场景下，水的体积流量 $Q$ 必须保持恒定。在此场景中，原始管道和新管道中的流动均为湍流。光滑管道中湍流的摩擦水头损失可以使用达西-魏斯巴赫方程进行分析，其中的摩擦系数 $f$ 取决于雷诺数 $Re$。对于此场景中遇到的雷诺数范围，摩擦系数可以由布拉修斯关系式很好地近似：$f = 0.316 \\cdot Re^{-1/4}$。\n\n管道单位长度的水头损失是确定所需泵送功率的一个关键参数。计算新的、较粗管道中的单位长度水头损失与原始的、较细管道中的单位长度水头损失之比。设流体的密度 $\\rho$ 和动力粘度 $\\mu$ 为常数。重力加速度为 $g$。\n\n请以单个数值给出答案。将最终答案保留三位有效数字。", "solution": "使用达西-魏斯巴赫方程计算单位长度的水头损失：\n$$\nS \\equiv \\frac{h_{f}}{L} = f \\frac{V^{2}}{2 g D}.\n$$\n对于两根管道（下标1代表原始管道，2代表新管道），其比值为\n$$\n\\frac{S_{2}}{S_{1}} = \\frac{f_{2}}{f_{1}} \\cdot \\frac{V_{2}^{2}}{V_{1}^{2}} \\cdot \\frac{D_{1}}{D_{2}}.\n$$\n\n在体积流量 $Q$ 恒定的情况下，平均流速为 $V = \\frac{4Q}{\\pi D^{2}}$，因此\n$$\n\\frac{V_{2}}{V_{1}} = \\left(\\frac{D_{1}}{D_{2}}\\right)^{2}.\n$$\n已知 $D_{2} = 2 D_{1}$，可得\n$$\n\\frac{V_{2}}{V_{1}} = \\left(\\frac{1}{2}\\right)^{2} = \\frac{1}{4}, \\quad \\frac{V_{2}^{2}}{V_{1}^{2}} = \\frac{1}{16}.\n$$\n\n雷诺数为 $Re = \\frac{\\rho V D}{\\mu}$，所以\n$$\n\\frac{Re_{2}}{Re_{1}} = \\frac{V_{2} D_{2}}{V_{1} D_{1}} = \\frac{1}{4} \\cdot 2 = \\frac{1}{2}.\n$$\n对两根管道（相同的光滑材料和湍流状态）都使用布拉修斯关系式 $f = 0.316 \\, Re^{-1/4}$，摩擦系数之比变为\n$$\n\\frac{f_{2}}{f_{1}} = \\left(\\frac{Re_{2}}{Re_{1}}\\right)^{-1/4} = \\left(\\frac{1}{2}\\right)^{-1/4} = 2^{1/4}.\n$$\n\n因此，\n$$\n\\frac{S_{2}}{S_{1}} = \\left(2^{1/4}\\right) \\cdot \\left(\\frac{1}{16}\\right) \\cdot \\left(\\frac{D_{1}}{D_{2}}\\right) = 2^{1/4} \\cdot \\frac{1}{16} \\cdot \\frac{1}{2} = \\frac{2^{1/4}}{32}.\n$$\n数值上，\n$$\n\\frac{S_{2}}{S_{1}} \\approx \\frac{1.189207}{32} \\approx 0.0372 \\quad \\text{（三位有效数字）}.\n$$", "answer": "$$\\boxed{0.0372}$$", "id": "1807525"}, {"introduction": "尽管像幂律速度剖面这样的经验模型对于近似复杂的湍流非常有价值，但一个真正的专家也必须理解它们的局限性。本练习挑战你更仔细地审视幂律模型的数学基础。通过分析其在管壁处（$y=0$）的行为，你将揭示一个关键的物理不一致性，从而突显出这个简化模型所忽略的粘性子层的重要性。[@problem_id:1809945]", "problem": "在研究半径为 $R$ 的圆管中的湍流时，湍流核心区的时均速度剖面可由经验性幂律模型近似。该模型将距管壁距离为 $y$ 处的流体速度 $u$ 与中心线速度 $u_{\\text{max}}$ 联系起来。该关系式由下式给出：\n\n$$u(y) = u_{\\text{max}} \\left( \\frac{y}{R} \\right)^{1/n}$$\n\n其中 $y$ 是距管壁的垂直距离（$0 \\leq y \\leq R$），指数 $n$ 是一个取决于雷诺数的无量纲常数。对于许多实际的湍流，$n$ 是一个大于1的实数，通常在6到10的范围内。\n\n虽然该模型对许多工程计算非常有用，但它在边界处呈现出显著的物理不自洽性。根据这一特定数学模型，在管壁的确切位置（即 $y=0$ 处），速度梯度 $\\frac{du}{dy}$ 的值是多少？\n\nA. 0\nB. $\\frac{u_{\\text{max}}}{R}$\nC. 无穷大\nD. $\\frac{u_{\\text{max}}}{nR}$\nE. 一个取决于 $n$ 的有限非零值，但在雷诺数未知时无法确定。", "solution": "给定的经验性速度剖面为\n$$u(y) = u_{\\text{max}}\\left(\\frac{y}{R}\\right)^{1/n},$$\n其中 $n>1$ 且 $0\\leq y\\leq R$。我们使用链式法则对该表达式关于 $y$ 求导。可将表达式写作\n$$(\\frac{y}{R})^{1/n} = R^{-1/n} y^{1/n},$$\n于是\n$$\\frac{du}{dy} = u_{\\text{max}} \\frac{d}{dy}\\left(R^{-1/n} y^{1/n}\\right) = u_{\\text{max}} R^{-1/n} \\frac{1}{n} y^{\\frac{1}{n}-1}.$$\n等价地，\n$$\\frac{du}{dy} = \\frac{u_{\\text{max}}}{nR}\\left(\\frac{y}{R}\\right)^{\\frac{1}{n}-1}.$$\n由于 $n>1$，我们有 $\\frac{1}{n}-1 = \\frac{1-n}{n} < 0$。因此，当 $y \\to 0^{+}$ 时，\n$$y^{\\frac{1}{n}-1} \\to +\\infty,$$\n从而\n$$\\left.\\frac{du}{dy}\\right|_{y=0} \\to +\\infty.$$\n故，根据该模型，壁面处的法向速度梯度为无穷大，这对应于选项C。", "answer": "$$\\boxed{C}$$", "id": "1809945"}, {"introduction": "从简化的近似方法过渡到工业标准工具，通常需要借助数值方法。Colebrook 方程是计算光滑和粗糙管道中摩擦系数 $f$ 的权威工具，但它是一个没有直接解析解的隐式方程。这个计算实践将引导你使用不动点迭代法来求解它，这是一种强大的技术，它弥合了理论方程与实际工程结果之间的鸿沟。[@problem_id:2393395]", "problem": "题目给出了用于计算圆管中湍流流动的隐式 Colebrook 关系式，它定义了 Darcy–Weisbach 摩擦系数 $f$ 如下：\n$$\n\\frac{1}{\\sqrt{f}} \\;=\\; -2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} \\;+\\; \\frac{2.51}{Re\\,\\sqrt{f}}\\right),\n$$\n其中 $\\epsilon/D$ 是相对粗糙度，$Re$ 是雷诺数，$\\log_{10}$ 表示以 10 为底的对数。物理量 $Re$ 和 $\\epsilon/D$ 均为无量纲。对于每一组指定的参数对 $(Re,\\epsilon/D)$，计算上述方程唯一的正解 $f$。\n\n您的程序必须为以下参数对 $(Re,\\epsilon/D)$ 测试集计算 $f$ 的值：\n- 情况 1：$(Re,\\epsilon/D) = (100000,\\; 10^{-4})$。\n- 情况 2：$(Re,\\epsilon/D) = (100000,\\; 0)$。\n- 情况 3：$(Re,\\epsilon/D) = (4000,\\; 5\\times 10^{-4})$。\n- 情况 4：$(Re,\\epsilon/D) = (10^{7},\\; 5\\times 10^{-3})$。\n\n要求：\n- 将 $\\log_{10}$ 解释为方程中明确写明的以 10 为底的对数。\n- 所有输入均为无量纲。答案中无需包含物理单位。\n- 对于每种情况，返回 $f$ 的值，该值应为四舍五入到 8 位小数的实数。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中按顺序包含情况 1 到 4 的结果，格式为方括号括起来的逗号分隔列表，每个条目都四舍五入到 8 位小数（例如 $[f_1,f_2,f_3,f_4]$，其中 $f_i$ 是十进制数）。", "solution": "对提出的问题进行验证。\n\n**步骤 1：提取已知条件**\n- **方程**：给定的 Colebrook 关系式为 $\\frac{1}{\\sqrt{f}} = -2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)$。\n- **定义**：$f$ 是 Darcy–Weisbach 摩擦系数，$\\epsilon/D$ 是相对粗糙度，$Re$ 是雷诺数。$\\log_{10}$ 是以 10 为底的对数。\n- **约束条件**：寻求唯一的正解 $f$。\n- **测试用例**：\n    - 情况 1：$(Re, \\epsilon/D) = (100000, 10^{-4})$\n    - 情况 2：$(Re, \\epsilon/D) = (100000, 0)$\n    - 情况 3：$(Re, \\epsilon/D) = (4000, 5 \\times 10^{-4})$\n    - 情况 4：$(Re, \\epsilon/D) = (10^7, 5 \\times 10^{-3})$\n- **输出要求**：每种情况下 $f$ 的值必须四舍五入到 8 位小数。\n\n**步骤 2：使用提取的已知条件进行验证**\n- **科学依据**：Colebrook 方程是流体力学中用于确定管道湍流摩擦系数的一个基本且经过经验验证的关系式。它是水力工程的基石。给定的雷诺数 ($Re$) 和相对粗糙度 ($\\epsilon/D$) 参数均在物理现实范围内。$Re \\ge 4000$ 证实了流动处于湍流或过渡到湍流的流态，该方程在此范围内适用。\n- **适定性**：该方程是关于 $f$ 的隐式方程，并且数学上已经证明，对于任何正的 $Re$ 和非负的 $\\epsilon/D$，都存在唯一的正解 $f$。因此，该问题是适定的。\n- **客观性**：问题使用精确的数学和工程术语进行陈述。没有歧义或主观内容。\n\n**步骤 3：结论与措施**\n该问题科学上合理、适定、客观且完整。它是计算工程中的一个标准问题。该问题被判定为**有效**。将提供一个解决方案。\n\nColebrook 方程是一个超越方程，这意味着无法通过直接的代数变换来求解摩擦系数 $f$。因此，必须使用数值求根或迭代方法。我们将采用不动点迭代法，该方法对于此特定问题是鲁棒且高效的。\n\n要应用不动点迭代法，我们必须将方程重排为 $f = g(f)$ 的形式。通过将 $f$ 单独置于等式一侧，可以得到一个合适的重排形式。首先，我们对原方程两边取倒数：\n$$\n\\sqrt{f} = \\frac{1}{-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)}\n$$\n两边平方，得到所需的不动点形式：\n$$\nf = \\frac{1}{\\left[-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)\\right]^2}\n$$\n这提供了一个迭代格式，其中 $f$ 的下一个近似值 $f_{k+1}$ 由当前近似值 $f_k$ 计算得出：\n$$\nf_{k+1} = g(f_k) = \\frac{1}{\\left[-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f_k}}\\right)\\right]^2}\n$$\n对于任何物理上合理的初始猜测值 $f_0 > 0$，此迭代都保证收敛到唯一的正根。迭代函数 $g(f)$ 的导数 $|g'(f)|$ 在关心域上小于 1，满足压缩映射的收敛条件。\n\n算法如下：\n1.  对于每一给定的参数对 $(Re, \\epsilon/D)$，定义常数 $C_1 = \\frac{\\epsilon/D}{3.7}$ 和 $C_2 = \\frac{2.51}{Re}$。\n2.  则迭代函数为 $f_{k+1} = \\frac{1}{4 \\left[ \\log_{10}(C_1 + C_2/\\sqrt{f_k}) \\right]^2}$。\n3.  为摩擦系数选择一个初始猜测值 $f_0$。取 $f_0 = 0.02$ 是一个常用且有效的起始点，因为它位于 Moody 图上湍流摩擦系数的典型范围内。\n4.  使用 $f_{k+1}$ 的公式进行迭代，直到连续迭代值之间的变化可以忽略不计，即 $|f_{k+1} - f_k| < \\tau$，其中 $\\tau$ 是一个很小的容差（例如 $10^{-10}$）。\n5.  然后将最终收敛的值 $f$ 按要求四舍五入到 8 位小数。\n\n此过程将为所提供的四个测试用例分别执行。对于情况 2，其中 $\\epsilon/D = 0$（光滑管），$\\frac{\\epsilon/D}{3.7}$ 项变为零，但迭代格式在结构上保持不变。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the Darcy friction factor 'f' using the Colebrook equation\n    via fixed-point iteration for a given set of test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Parameter set 1: Re, epsilon/D)\n        (100000, 1e-4),\n        # (Parameter set 2: Re, epsilon/D)\n        (100000, 0),\n        # (Parameter set 3: Re, epsilon/D)\n        (4000, 5e-4),\n        # (Parameter set 4: Re, epsilon/D)\n        (1e7, 5e-3),\n    ]\n\n    results = []\n    for case in test_cases:\n        Re, rel_roughness = case\n        \n        # Initial guess for the friction factor f.\n        # 0.02 is a standard initial guess for turbulent flow.\n        f = 0.02\n        \n        # Iteration parameters\n        tolerance = 1e-10\n        max_iterations = 100 # Convergence is fast, this is a safeguard.\n\n        for _ in range(max_iterations):\n            f_old = f\n            \n            # The Colebrook equation rearranged for fixed-point iteration:\n            # f = 1 / (-2 * log10( (eps/D)/3.7 + 2.51/(Re*sqrt(f)) ))**2\n            # Define terms for clarity\n            term1 = rel_roughness / 3.7\n            term2 = 2.51 / (Re * np.sqrt(f_old))\n            \n            try:\n                # Handle potential math domain errors if the argument to log10 becomes non-positive,\n                # which can happen with a poor initial guess for exotic parameters.\n                log_arg = term1 + term2\n                if log_arg <= 0:\n                    # This case should not be reached with the given valid parameters\n                    # and a positive initial guess.\n                    raise ValueError(\"log argument is non-positive\")\n\n                denominator = -2.0 * np.log10(log_arg)\n                f = 1.0 / (denominator**2)\n\n            except (ValueError, ZeroDivisionError) as e:\n                # If an error occurs, we report it and break.\n                # For this problem set, this block is not expected to be executed.\n                results.append(f\"Error for case {case}: {e}\")\n                break\n\n            # Check for convergence\n            if np.abs(f - f_old) < tolerance:\n                break\n        \n        # After the loop, store the rounded result.\n        # The problem asks for the result to be rounded to 8 decimal places.\n        results.append(f\"{f:.8f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2393395"}]}