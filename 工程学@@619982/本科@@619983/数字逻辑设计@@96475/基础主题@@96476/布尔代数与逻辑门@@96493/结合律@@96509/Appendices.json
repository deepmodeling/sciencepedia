{"hands_on_practices": [{"introduction": "我们首先来验证逻辑“或”运算的结合律。这项基础练习将使用真值表——这是证明逻辑等价性的最基本工具——来展示在一系列“或”运算中，变量的分组方式并不会改变最终结果。通过这个练习，您将亲手验证 $(X + Y) + Z = X + (Y + Z)$ 为何成立，从而在布尔代数的背景下对结合律建立坚实的理解。[@problem_id:1909660]", "problem": "在数字逻辑设计中，布尔表达式被用来表示数字电路的逻辑。这些表达式中的变量，如 $X$、$Y$ 和 $Z$，只能取值为0（表示“低”电平或“假”）或1（表示“高”电平或“真”）。 '+' 符号表示逻辑或运算，而 '$\\cdot$' 符号表示逻辑与运算。如果两个表达式对于所有可能的输入变量值组合都产生相同的输出值，那么它们就被认为是逻辑等价的。\n\n考虑布尔表达式 $F = (X + Y) + Z$。请确定下列哪个表达式与 $F$ 逻辑等价。\n\nA. $X + (Y + Z)$\n\nB. $(X \\cdot Y) + Z$\n\nC. $X \\cdot (Y + Z)$\n\nD. $X + (Y \\cdot Z)$", "solution": "要确定哪个表达式与 $F = (X + Y) + Z$ 逻辑等价，我们必须检查对于变量 $X$、$Y$ 和 $Z$ 的所有可能输入组合，是否有任何一个选项能产生与 $F$ 相同的输出。一个系统的方法是构建一个真值表，对所有8种可能的输入组合（从$X=0, Y=0, Z=0$ 到 $X=1, Y=1, Z=1$）评估每个表达式。\n\n该真值表将包含输入 $X, Y, Z$、原始表达式 $F$ 以及选项 A、B、C 和 D 中每个表达式的列。\n\n让我们为每个选项定义表达式：\n- 表达式A: $G_A = X + (Y + Z)$\n- 表达式B: $G_B = (X \\cdot Y) + Z$\n- 表达式C: $G_C = X \\cdot (Y + Z)$\n- 表达式D: $G_D = X + (Y \\cdot Z)$\n\n我们将首先计算表达式的中间部分。对于 $F=(X+Y)+Z$，中间部分是 $(X+Y)$。对于这些选项，中间部分是 $(Y+Z)$、$(X \\cdot Y)$ 和 $(Y \\cdot Z)$。\n\n逻辑或（+）运算在其操作数中至少有一个为1时结果为1。逻辑与（$\\cdot$）运算仅在其两个操作数都为1时结果才为1。\n\n让我们一步步构建真值表。\n\n| X | Y | Z | $X+Y$ | $F=(X+Y)+Z$ | $Y+Z$ | $G_A=X+(Y+Z)$ | $X \\cdot Y$ | $G_B=(X \\cdot Y)+Z$ | $Y \\cdot Z$ | $G_D=X+(Y \\cdot Z)$ | $G_C=X \\cdot (Y+Z)$ |\n|---|---|---|---|---|---|---|---|---|---|---|---|\n| 0 | 0 | 0 |   0   |      0      |   0   |       0       |    0      |         0         |    0      |         0         |         0         |\n| 0 | 0 | 1 |   0   |      1      |   1   |       1       |    0      |         1         |    0      |         0         |         0         |\n| 0 | 1 | 0 |   1   |      1      |   1   |       1       |    0      |         0         |    0      |         0         |         0         |\n| 0 | 1 | 1 |   1   |      1      |   1   |       1       |    0      |         1         |    1      |         1         |         0         |\n| 1 | 0 | 0 |   1   |      1      |   0   |       1       |    0      |         0         |    0      |         1         |         0         |\n| 1 | 0 | 1 |   1   |      1      |   1   |       1       |    0      |         1         |    0      |         1         |         1         |\n| 1 | 1 | 0 |   1   |      1      |   1   |       1       |    1      |         1         |    0      |         1         |         1         |\n| 1 | 1 | 1 |   1   |      1      |   1   |       1       |    1      |         1         |    1      |         1         |         1         |\n\n让我们分析这些列：\n- 我们原始函数的列是 $F=(X+Y)+Z$。其输出值为 $(0, 1, 1, 1, 1, 1, 1, 1)$。\n- 选项 A 的列是 $G_A=X+(Y+Z)$。其输出值为 $(0, 1, 1, 1, 1, 1, 1, 1)$。\n- 选项 B 的列是 $G_B=(X \\cdot Y)+Z$。其输出值为 $(0, 1, 0, 1, 0, 1, 1, 1)$。\n- 选项 C 的列是 $G_C=X \\cdot (Y+Z)$。其输出值为 $(0, 0, 0, 0, 0, 1, 1, 1)$。\n- 选项 D 的列是 $G_D=X+(Y \\cdot Z)$。其输出值为 $(0, 0, 0, 1, 1, 1, 1, 1)$。\n\n通过将 $F$ 的输出列与每个选项（$G_A, G_B, G_C, G_D$）的输出列进行比较，我们可以看到只有 $G_A$ 的列与 $F$ 的列完全相同。\n- $F \\neq G_B$ （例如，当 $X=0, Y=1, Z=0$ 时，$F=1$ 但 $G_B=0$）\n- $F \\neq G_C$ （例如，当 $X=0, Y=0, Z=1$ 时，$F=1$ 但 $G_C=0$）\n- $F \\neq G_D$ （例如，当 $X=0, Y=0, Z=1$ 时，$F=1$ 但 $G_D=0$）\n\n由于 $F=(X+Y)+Z$ 和 $G_A=X+(Y+Z)$ 的输出对于所有可能的输入组合都是相同的，因此它们是逻辑等价的。这证明了逻辑或运算的结合律。\n\n因此，正确选项是 A。", "answer": "$$\\boxed{A}$$", "id": "1909660"}, {"introduction": "在牢固掌握结合律之后，我们现在可以将其作为一个强大的工具，来简化复杂的布尔表达式。这个问题提供了一个场景，其中利用结合律重新组合项是开启一系列简化的关键第一步。这个练习展示了抽象的代数规则如何直接转化为更高效、更简洁的逻辑实现。[@problem_id:1909685]", "problem": "考虑一个由四个变量 $A, B, C$ 和 $D$ 构成的布尔函数 $F$，其表达式定义如下：\n$$F = (\\bar{A} + (A + B)) \\cdot (C + D)$$\n下列哪个表达式与 $F$ 逻辑等价？\n\nA) $B \\cdot (C + D)$\n\nB) $1$\n\nC) $A+B+C+D$\n\nD) $C+D$\n\nE) $B+C+D$", "solution": "我们从给定的布尔函数 $F$ 开始：\n$$F = (\\bar{A} + (A + B)) \\cdot (C + D)$$\n使用 $+$ 的结合律和交换律，将第一个括号重写为\n$$((\\bar{A} + A) + B)$$\n应用互补律 $\\bar{A} + A = 1$ 可得\n$$((\\bar{A} + A) + B) = (1 + B)$$\n使用或运算的支配律 $1 + B = 1$，得到\n$$(\\bar{A} + (A + B)) = 1$$\n将此结果代入 $F$ 中：\n$$F = 1 \\cdot (C + D)$$\n使用与运算的同一律 $1 \\cdot X = X$，可以得出\n$$F = C + D$$\n因此，与 $F$ 逻辑等价的表达式是 $C + D$，对应选项 D。", "answer": "$$\\boxed{D}$$", "id": "1909685"}, {"introduction": "现在，让我们来探讨结合律对实际电路设计的深远影响，尤其是在性能优化方面。这个练习要求您重新排列一个逻辑表达式，以最小化传播延迟——这是高速数字系统中的一个关键因素。通过比较不同门电路结构下的延迟，您将看到结合律如何让设计者能够用相同的元件构建出速度更快、效率更高的硬件。[@problem_id:1909702]", "problem": "在高速算术逻辑单元 (ALU) 的设计中，一条关键路径涉及四个单比特状态标志 `W`、`X`、`Y` 和 `Z` 的逻辑组合。所需的功能是这四个标志的逻辑或。电路的初始设计源自一项顺序需求分析，其使用布尔表达式 $F = W + (X + (Y + Z))$ 来指定该逻辑，其中 `+` 表示或运算。\n\n在实现中，仅有双输入或门可用。每个门都具有相同且非零的传播延迟，记为 $t_p$。ALU 的性能关键取决于最小化该逻辑块的总传播延迟。布尔代数的结合律，即 $A + (B + C) = (A + B) + C$，允许在不改变最终输出的情况下对表达式中的项进行重新组合。\n\n在给定约束条件下，下列哪个布尔表达式代表了对原始表达式 $F$ 的重组，并能为电路带来最小的总传播延迟？\n\nA. $F = W + (X + (Y + Z))$\n\nB. $F = (W + X) + (Y + Z)$\n\nC. $F = ((W + X) + Y) + Z$\n\nD. $F = W + (X + Y + Z)$", "solution": "给定函数 $F = W + (X + (Y + Z))$，其中 $+$ 表示或运算。只有双输入或门可用，每个门的传播延迟均为 $t_{p}$。沿任何路径从输入到输出的传播延迟等于该路径上级联门的数量乘以 $t_{p}$，因为所有门都具有相等且非零的延迟，并且未指定互连延迟。\n\n若要仅使用双输入门实现四个输入的或运算，所需的门总数为 $4 - 1 = 3$，因为每个双输入或门将独立信号的数量减少一。然而，关键的性能指标是最长输入到输出路径上的逻辑深度（门的级数）。在扇入（fan-in）限制为2的情况下，组合 $n$ 个输入所需的最小级数 $L$ 满足 $2^{L} \\geq n$，因此\n$$\nL \\geq \\lceil \\log_{2}(n) \\rceil.\n$$\n对于 $n = 4$，这给出\n$$\nL \\geq \\lceil \\log_{2}(4) \\rceil = 2.\n$$\n因此，最小可能传播延迟为 $2t_{p}$，这可以通过由双输入或门构成的平衡二叉树结构来实现。\n\n我们现在根据逻辑深度和传播延迟来评估每个选项：\n\n选项A: $F = W + (X + (Y + Z))$。这对应于一个串行链：首先计算 $(Y + Z)$（一个门），然后计算 $(X + (Y + Z))$（第二个门），接着是 $W + \\text{previous}$（第三个门）。从 $Y$ 或 $Z$ 到 $F$ 的深度为 $3$，所以传播延迟是\n$$\n3t_{p}.\n$$\n\n选项B: $F = (W + X) + (Y + Z)$。这可以用两个第一级门并行计算 $(W + X)$ 和 $(Y + Z)$，然后用一个第二级门对其输出进行或运算来实现。任何输入都恰好经过两个门，所以传播延迟是\n$$\n2t_{p}.\n$$\n这达到了延迟下限，因此是最优的。\n\n选项C: $F = ((W + X) + Y) + Z$。这是一个由三个门构成的左结合链。最长路径的深度为 $3$，产生\n$$\n3t_{p}.\n$$\n的延迟。\n\n选项D: $F = W + (X + Y + Z)$。在只有双输入门的约束下，子表达式 $(X + Y + Z)$ 必须用两个双输入门以最小深度实现，例如先计算 $(X + Y)$ 再与 $Z$ 相或，这需要两级门；再与 $W$ 进行的额外或运算会增加一级。因此，最长路径深度为 $3$，得到\n$$\n3t_{p}.\n$$\n\n由于最小可能深度是 $2$ 且只有选项 B 实现了 $2t_{p}$ 的延迟，因此最小化总传播延迟的重组是选项 B。", "answer": "$$\\boxed{B}$$", "id": "1909702"}]}