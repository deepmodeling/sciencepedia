{"hands_on_practices": [{"introduction": "在集成电路设计中，为了简化制造流程和降低成本，工程师常常只使用一种标准逻辑单元来构建整个芯片。本练习将模拟这一常见的工程场景。你将把一个基本的布尔函数 $F(A, B, C) = A \\cdot (B + C)$ 转换为一个仅使用双输入或非门（NOR gate）的电路，这是掌握通用门实际应用和灵活运用德摩根定律的核心实践。[@problem_id:1974633]", "problem": "要求设计一个数字逻辑电路以实现布尔函数 $F(A, B, C) = A \\cdot (B + C)$，其中 $A$、$B$ 和 $C$ 是输入变量。实现时仅限使用双输入或非门。可用的直接输入为 $A$、$B$ 和 $C$；任何需要的非运算也必须使用或非门来产生。构建此电路所需的最少双输入或非门数量是多少？", "solution": "我们仅限使用双输入或非门。回顾或非门的基本恒等式：\n- 两个信号的或非运算为 $X \\downarrow Y = (X+Y)'$。\n- 可以通过将输入连接在一起来产生非运算：$X' = X \\downarrow X$。\n- 与运算可以表示为 $XY = (X' + Y')' = (X' \\downarrow Y')$。\n- 或运算可以通过或非运算后接一个非运算来产生：$X+Y = (X \\downarrow Y)'$。\n\n目标函数为 $F(A,B,C) = A(B+C)$。根据 De Morgan 定理以及通过或非门实现与运算的恒等式，可写出\n$$\nF = A(B+C) = \\big(A' + (B+C)'\\big)' = \\big(A' \\downarrow (B+C)'\\big).\n$$\n因此，我们需要 $A'$ 和 $(B+C)'$，每一个都可通过单个或非门获得：\n- 用一个或非门产生 $A'$：$A' = A \\downarrow A$。\n- 用一个或非门产生 $(B+C)'$：$(B+C)' = B \\downarrow C$。\n- 将这两个输出送入第三个或非门以获得 $F$：$F = \\big(A' \\downarrow (B+C)'\\big)$。\n\n这样便用 $3$ 个双输入或非门完成了实现。\n\n为了证明其最小性，假设只有 $2$ 个或非门可用。任何此类网络必然有一个门从两个主输入 $Q,R \\in \\{A,B,C\\}$ 产生 $G_{1} = Q \\downarrow R = (Q+R)'$，并且最终输出为\n$$\nG_{2} = P \\downarrow G_{1} = \\big(P + (Q+R)'\\big)' = P'(Q+R),\n$$\n其中 $P \\in \\{A,B,C\\}$ 是某个主输入。因此，任何双门或非网络实现的函数形式均为 $P'(Q+R)$。我们的目标函数是 $A(B+C)$。要将 $P'(Q+R)$ 与 $A(B+C)$ 匹配，则需要 $P' = A$ 且 $\\{Q,R\\} = \\{B,C\\}$，这意味着 $P = A'$。$A'$ 并非一个可用的主输入，需要一个额外的门才能产生。因此，仅用两个门无法从给定的直接输入实现 $A(B+C)$。所以，所需的最少双输入或非门数量是 $3$。", "answer": "$$\\boxed{3}$$", "id": "1974633"}, {"introduction": "在数字系统设计中，电路的速度往往与逻辑功能的正确性同等重要。这个练习将挑战从简单的功能转换提升到面向性能的设计。你需要在严格的传播延迟（propagation delay）约束下，使用与非门（NAND gate）实现一个更复杂的函数 $F = (A \\oplus B)' + (C \\oplus D)$。这个过程将锻炼你分解复杂问题、构建模块化逻辑并在紧张的“时序预算”内进行优化的能力，这些都是高速电路设计中的关键技能。[@problem_id:1974622]", "problem": "需要设计一个数字逻辑电路来实现一个特定的四输入布尔函数 $F(A,B,C,D)$。该函数由表达式 $F(A,B,C,D) = (A \\oplus B)' + (C \\oplus D)$ 定义，其中 $\\oplus$ 表示异或 (XOR) 运算，撇号 (') 表示非运算。\n\n您的任务是设计该函数的一个实现，该实现需遵守两个严格的约束条件：\n1. 电路必须**仅**使用双输入与非门构建。\n2. 从任意输入到最终输出的最大传播延迟不得超过**三级门延迟**。\n\n在本设计中，您可以假设所有四个主输入 ($A, B, C, D$) 及其反相输入 ($A', B', C', D'$) 在零时刻同时可用。\n\n确定在满足所有给定约束的条件下，构建此电路所需的最少双输入与非门数量。", "solution": "问题要求在输入及其反相输入均可用的情况下，用最少的双输入与非门来实现函数 $F(A,B,C,D) = (A \\oplus B)' + (C \\oplus D)$，且最大传播延迟不超过三级门延迟。\n\n**步骤 1：分析并简化布尔函数。**\n\n设 $X = A \\oplus B$ 且 $Y = C \\oplus D$。该函数可写作 $F = X' + Y$。\n使用性质 $P' + Q = (P \\cdot Q')'$，我们可以将 $F$ 表达为一种适合于与非门实现的形式。\n$F = (X \\cdot Y')'$\n这等价于 $F = \\text{NAND}(X, Y')$。\n\n我们将原始表达式代回到 $X$ 和 $Y'$ 中。\n$X = A \\oplus B$\n$Y' = (C \\oplus D)' = C \\leftrightarrow D$ (同或运算)\n\n因此，需要实现的函数是 $F = \\text{NAND}(A \\oplus B, C \\leftrightarrow D)$。\n\n**步骤 2：根据传播延迟约束规划电路结构。**\n\n函数 $F$ 是单个与非门的输出。为使整个电路的最大延迟为三级门延迟，该最终与非门的输入必须在第 2 级门的输出端可用。\n设最终门为第 3 级门。其输入是信号 $A \\oplus B$ 和 $C \\leftrightarrow D$。\n因此，我们必须能够使用最多两级门延迟来生成 $A \\oplus B$ 和 $C \\leftrightarrow D$。\n\n**步骤 3：为 $A \\oplus B$ 设计一个 2 级与非门电路。**\n\n异或的表达式是 $A \\oplus B = A'B + AB'$。这是一个积之和 (SOP) 表达式。一个 2 级与非-与非结构可以实现任何积之和函数。\n$A \\oplus B = ((A'B)' \\cdot (AB')')' = \\text{NAND}(\\text{NAND}(A', B), \\text{NAND}(A, B'))$。\n\n我们来分析这个子电路的门级数和门数量。已知输入及其反相输入 ($A, A', B, B'$) 在零时刻可用。\n- 第 1 级：我们为乘积项构建与非门。\n  - $G_1 = \\text{NAND}(A', B)$\n  - $G_2 = \\text{NAND}(A, B')$\n  由于这些门的输入在零时刻可用，它们的输出在一次门延迟后（第 1 级）可用。\n- 第 2 级：我们组合第 1 级门的输出。\n  - $X_{out} = A \\oplus B = \\text{NAND}(G_1, G_2)$\n  该门的输入在一次门延迟后可用，因此其输出在两次门延迟后（第 2 级）可用。\n\n这个 $A \\oplus B$ 的实现使用了 3 个与非门，延迟为 2 级。\n\n**步骤 4：为 $C \\leftrightarrow D$ 设计一个 2 级与非门电路。**\n\n同或的表达式是 $C \\leftrightarrow D = CD + C'D'$。这也是一个积之和表达式。我们可以使用相同的 2 级与非-与非结构。\n$C \\leftrightarrow D = ((CD)' \\cdot (C'D')')' = \\text{NAND}(\\text{NAND}(C, D), \\text{NAND}(C', D'))$。\n\n我们来分析这个子电路的门级数和门数量。输入 $C, C', D, D'$ 在零时刻可用。\n- 第 1 级：我们为乘积项构建与非门。\n  - $G_3 = \\text{NAND}(C, D)$\n  - $G_4 = \\text{NAND}(C', D')$\n  它们的输出在一次门延迟后（第 1 级）可用。\n- 第 2 级：我们组合第 1 级门的输出。\n  - $Y_{out} = C \\leftrightarrow D = \\text{NAND}(G_3, G_4)$\n  其输出在两次门延迟后（第 2 级）可用。\n\n这个 $C \\leftrightarrow D$ 的实现使用了 3 个与非门，延迟为 2 级。\n\n**步骤 5：组合子电路并计算总门数。**\n\n最终电路是 $F = \\text{NAND}(X_{out}, Y_{out})$。\n- 输入 $X_{out}$（来自步骤 3）和 $Y_{out}$（来自步骤 4）都在两次门延迟后可用。\n- 最终门 $G_{final} = \\text{NAND}(X_{out}, Y_{out})$ 接收这些输入。因此，其输出 $F$ 在三次门延迟后可用。\n\n这个结构满足 3 级传播延迟的约束。现在，我们计算总的门数量。\n- 用于 $A \\oplus B$ 的门：3 个门 ($G_1, G_2, X_{out}$)。\n- 用于 $C \\leftrightarrow D$ 的门：3 个门 ($G_3, G_4, Y_{out}$)。\n- 最终组合门：1 个门 ($G_{final}$)。\n\n总门数 = 3 + 3 + 1 = 7。\n\n该电路可表示为：\n$F = \\text{NAND}(\\text{NAND}(\\text{NAND}(A', B), \\text{NAND}(A, B')), \\text{NAND}(\\text{NAND}(C, D), \\text{NAND}(C', D')))$。\n这是满足所有约束的最优实现。", "answer": "$$\\boxed{7}$$", "id": "1974622"}, {"introduction": "理论上的逻辑设计往往假设门电路是瞬时响应的，但物理现实并非如此，门延迟可能引发意想不到的问题。本练习将视角从电路“设计”转向“分析”，探讨由通用门实现所带来的时序风险，即“静态冒险”（static hazards）。通过检查一个由或非门构建的二选一多路选择器，你将学习如何识别因输入信号变化而导致的短暂、非预期的输出脉冲，这是设计高可靠性数字系统必须掌握的重要一课。[@problem_id:1974635]", "problem": "一个数字逻辑电路被设计用作2选1数据选择器。它有两个数据输入 $I_0$ 和 $I_1$、一个选择线 $S$ 和一个输出 $F$。整个电路完全由双输入或非门构成。该电路的结构由以下连接定义：\n\n1.  选择线 $S$ 的一个反相器是通过将一个或非门的两个输入连接在一起实现的，产生信号 $S_{inv}$。\n2.  一个或非门以 $S$ 和 $I_0$ 为输入，产生中间信号 $A$。\n3.  第二个或非门以 $S_{inv}$ 和 $I_1$ 为输入，产生中间信号 $B$。\n4.  最后一个或非门以 $A$ 和 $B$ 为输入，产生最终输出 $F$。\n\n分析此特定或非门实现中的静态冒险。静态冒险是一种情况，当单个输入变量改变时，本应保持恒定逻辑电平的输出会瞬间跳变到相反的电平，然后才恢复正常。确定当选择线 $S$ 发生跳变（从0到1或从1到0）时是否会发生静态冒险，并指出其在何种条件下会显现。\n\n以下哪个陈述准确描述了该电路的冒险特性？\n\nA. 当 $I_0=1$, $I_1=1$ 且 $S$ 发生跳变时，会出现静态1冒险。\n\nB. 当 $I_0=0$, $I_1=0$ 且 $S$ 发生跳变时，会出现静态0冒险。\n\nC. 当一个数据输入为0，另一个为1，且 $S$ 发生跳变时，会出现静态1冒险。\n\nD. 当一个数据输入为0，另一个为1，且 $S$ 发生跳变时，会出现静态0冒险。\n\nE. 对于选择线 $S$ 的任何跳变，该电路都没有任何静态冒险。", "solution": "主要任务是确定当选择线 $S$ 的状态改变时，指定的或非门电路是否会表现出任何静态冒险。为此，我们必须首先推导出输出 $F$ 的布尔表达式，然后在与静态冒险相关的条件下对其进行分析。\n\n**步骤1：推导输出F的布尔表达式。**\n\n电路的描述分为四个部分。让我们将每个部分转换成一个布尔表达式。\n\n1.  选择线 $S$ 的反相器产生 $S_{inv}$。一个输入端连接在一起的或非门起到非门的作用。\n    $$S_{inv} = \\overline{S+S} = \\overline{S}$$\n\n2.  中间信号 $A$ 是 $S$ 和 $I_0$ 的或非。\n    $$A = \\overline{S+I_0}$$\n\n3.  中间信号 $B$ 是 $S_{inv}$ 和 $I_1$ 的或非。代入 $S_{inv}$ 的表达式：\n    $$B = \\overline{S_{inv}+I_1} = \\overline{\\overline{S}+I_1}$$\n\n4.  最终输出 $F$ 是 $A$ 和 $B$ 的或非。\n    $$F = \\overline{A+B}$$\n\n现在，将 $A$ 和 $B$ 的表达式代入 $F$ 的表达式中：\n$$F = \\overline{(\\overline{S+I_0}) + (\\overline{\\overline{S}+I_1})}$$\n\n为了简化这个表达式，我们应用德摩根定律（$\\overline{X+Y} = \\overline{X} \\cdot \\overline{Y}$）：\n$$F = \\overline{(\\overline{S+I_0})} \\cdot \\overline{(\\overline{\\overline{S}+I_1})}$$\n\n应用双重否定律（$\\overline{\\overline{X}} = X$）：\n$$F = (S+I_0) \\cdot (\\overline{S}+I_1)$$\n\n这是该电路输出的简化和之积（POS）表达式。该函数代表一个2选1数据选择器，可以验证如下：\n- 如果 $S=0$，则 $F = (0+I_0)(\\overline{0}+I_1) = (I_0)(1+I_1) = I_0 \\cdot 1 = I_0$。\n- 如果 $S=1$，则 $F = (1+I_0)(\\overline{1}+I_1) = (1)(0+I_1) = 1 \\cdot I_1 = I_1$。\n当 $S=0$ 时，电路正确选择 $I_0$；当 $S=1$ 时，电路正确选择 $I_1$。\n\n**步骤2：分析静态1冒险。**\n\n如果输出在 $S$ 跳变期间本应保持在逻辑1，但瞬间出现毛刺变为0，则发生静态1冒险。要使输出 $F$ 在 $S=0$ 和 $S=1$ 时都预定为1，数据输入必须进行相应设置。\n- 当 $S=0$ 时，我们需要 $F=I_0=1$。\n- 当 $S=1$ 时，我们需要 $F=I_1=1$。\n因此，我们必须在 $I_0=1$ 和 $I_1=1$ 的条件下测试是否存在静态1冒险。\n\n让我们将这些输入值代入我们推导出的表达式中：\n$$F = (S+1) \\cdot (\\overline{S}+1)$$\n使用布尔恒等式 $X+1=1$：\n$$F = (1) \\cdot (1) = 1$$\n在这些条件下（$I_0=1, I_1=1$），输出 $F$ 简化为常数1。该表达式与 $S$ 无关。因此，$S$ 的任何跳变都不会引起输出的改变，电路没有静态1冒险。这排除了选项 A 和 C。\n\n**步骤3：分析静态0冒险。**\n\n如果输出在 $S$ 跳变期间本应保持在逻辑0，但瞬间出现毛刺变为1，则发生静态0冒险。要使输出 $F$ 在 $S=0$ 和 $S=1$ 时都预定为0，数据输入必须按如下设置：\n- 当 $S=0$ 时，我们需要 $F=I_0=0$。\n- 当 $S=1$ 时，我们需要 $F=I_1=0$。\n因此，我们必须在 $I_0=0$ 和 $I_1=0$ 的条件下测试是否存在静态0冒险。\n\n让我们将这些输入值代入我们推导出的表达式中：\n$$F = (S+0) \\cdot (\\overline{S}+0)$$\n使用布尔恒等式 $X+0=X$：\n$$F = S \\cdot \\overline{S}$$\n表达式 $F = S\\overline{S}$ 是一个具有静态0冒险的函数的典型例子。理想情况下，$S\\overline{S}$ 总是为0。然而，在实际电路中，信号 $\\overline{S}$ 是由 $S$ 通过一个反相器（在我们的例子中是第一个或非门）产生的，而这个反相器具有有限的传播延迟。\n\n考虑 $S$ 从0到1的跳变。\n- 在时间 $t<0$ 时，$S=0$ 且 $\\overline{S}=1$。$F = 0 \\cdot 1 = 0$。\n- 在某个时间 $t_{glitch}$，$S$ 刚刚变为1，但由于反相器的延迟，信号 $\\overline{S}$ 尚未变为0；它仍然是1。在短暂的瞬间，最终的逻辑与操作的两个输入都为1。\n- 在这个毛刺期间，$F = 1 \\cdot 1 = 1$。\n- 不久之后，在时间 $t>t_{glitch}$，反相器的输出更新，所以 $\\overline{S}$ 变为0。输出回到 $F = 1 \\cdot 0 = 0$。\n\n这个临时的 0 -> 1 -> 0 脉冲就是一个静态0冒险。它发生在 $I_0=0$, $I_1=0$ 且选择线 $S$ 发生跳变时。这个发现与选项B相符。选项D不正确，因为当输入不同时不会发生冒险。选项E不正确，因为已经发现了一个冒险。", "answer": "$$\\boxed{B}$$", "id": "1974635"}]}