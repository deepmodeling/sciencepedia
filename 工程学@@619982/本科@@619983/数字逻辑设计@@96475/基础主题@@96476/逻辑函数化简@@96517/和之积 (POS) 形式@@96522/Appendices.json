{"hands_on_practices": [{"introduction": "在数字逻辑设计中，能够在和之积 (Product of Sums, POS) 与积之和 (Sum of Products, SOP) 形式之间熟练转换是一项基本功。这个练习将通过布尔代数的基本定律，特别是分配律，将一个给定的POS表达式转换为其等效的SOP形式 [@problem_id:1954293]，从而加深你对这两种标准形式内在联系的理解。", "problem": "一个逻辑函数 $F$ 由三个输入变量 $A$、$B$ 和 $C$ 定义。该函数最初以和之积 (POS) 形式表示如下：\n\n$$F(A, B, C) = (A + B' + C)(A' + B + C)(A + B)$$\n\n使用布尔代数法则，推导出函数 $F$ 的等效简化积之和 (SOP) 表达式。在表达式中，撇号（例如，$B'$）表示逻辑非运算。您的最终答案应为一个用 $A$、$B$ 和 $C$ 表示的表达式。", "solution": "我们从给定的和之积开始：\n$$F=(A+B'+C)(A'+B+C)(A+B)。$$\n根据布尔积的结合律和交换律，首先简化乘积 $(A+B)(A+B'+C)$。使用分配律 $(X+Y)(X+Z)=X+YZ$，令 $X=A$，$Y=B$，$Z=B'+C$，我们得到\n$$(A+B)(A+B'+C)=A+B(B'+C)=A+(BB'+BC)=A+0+BC=A+BC,$$\n此处使用了互补律 $BB'=0$ 和恒等律 $X+0=X$。因此，\n$$F=(A'+B+C)(A+BC)。$$\n现在进行分配：\n$$(A+BC)(A'+B+C)=A(A'+B+C)+BC(A'+B+C)。$$\n使用分配律、互补律和幂等律计算每一项：\n$$A(A'+B+C)=AA'+AB+AC=0+AB+AC=AB+AC,$$\n$$BC(A'+B+C)=A'BC+BCB+BCC=A'BC+BC+BC=A'BC+BC,$$\n因为 $BB=B$，$CC=C$ 且 $X+X=X$。因此，\n$$F=AB+AC+A'BC+BC。$$\n应用吸收律 $X+XY=X$，令 $X=BC$ 且 $Y=A'$，以消除冗余项：\n$$BC+A'BC=BC,$$\n所以，简化的积之和为\n$$F=AB+AC+BC。$$", "answer": "$$\\boxed{AB+AC+BC}$$", "id": "1954293"}, {"introduction": "卡诺图 (Karnaugh map) 是化简布尔表达式的强大图形工具。本练习模拟了一个数据校验系统的设计场景，你需要根据指定为“错误”的数据包 (对应于最大项)，利用卡诺图来寻找最简的和之积 (POS) 表达式 [@problem_id:1954299]。这不仅能锻炼你使用卡诺图对逻辑“0”进行分组的能力，也是实现高效逻辑电路的关键一步。", "problem": "一个数字数据验证系统被设计用于检查4位数据包。每个数据包由比特 $W, X, Y, Z$ 表示，其中 $W$ 是最高有效位。一个逻辑函数 $F(W, X, Y, Z)$ 用于标记数据包：对于错误的数据包，它输出 $F=0$；对于有效的数据包，它输出 $F=1$。经过广泛测试，设计工程师确定了对应于十进制整数值 1、5、9、13 和 15 的数据包是错误的。所有其他数据包均被视为有效。\n\n你的任务是推导逻辑函数 $F(W, X, Y, Z)$ 的最简和之积 (POS) 形式的布尔表达式。在你的答案中，使用撇号表示法（例如 $W'$）来表示变量的补。", "solution": "令 $F(W,X,Y,Z)$ 在最小项 $m(1,5,9,13,15)$ 处输出 $0$，在其他情况下输出 $1$。在布尔设计中，和之积 (POS) 形式是通过构建在 $0$ 输出组上其值为 $0$ 的和项，然后将它们相乘得到的。\n\n首先，观察到 $m(1,5,9,13)$ 都具有 $Y=0$ 和 $Z=1$ 的特点，这与 $W,X$ 无关。一个仅当 $Y=0$ 且 $Z=1$ 时才为 $0$ 的和项是 $(Y+Z')$，因为当 $Y=0$ 且 $Z=1$ 时， $Y+Z'=0+0=0$，而对于任何其他的 $(Y,Z)$ 组合，其值为 $1$。因此，$F$ 必须包含因子 $(Y+Z')$，即\n$$\nF=(Y+Z')\\cdot G(W,X,Y,Z),\n$$\n其中 $G$ 是某个函数。\n\n接下来，$F$ 在 $m(15)$ 处也必须为 $0$，即在 $W=1,X=1,Y=1,Z=1$ 时。为了实现这一点而不引入任何新的不希望的零，选择 $G$ 为一个在 $W=1,X=1,Z=1$ 时（$Y$ 为自由变量）值为 $0$ 的和项。这样的最小和项是 $(W'+X'+Z')$，因为它仅在 $W=1$, $X=1$ 且 $Z=1$ 时为 $0$。这使得当 $(W,X,Z)=(1,1,1)$ 时，对于 $Y=0$ 和 $Y=1$ 两种情况，$G$ 都为 $0$。$Y=0$ 的情况是 $m(13)$，它已经被 $(Y+Z')=0$ 覆盖了；$Y=1$ 的情况是 $m(15)$，这是我们需要包含的。\n\n因此，\n$$\nF=(Y+Z')(W'+X'+Z').\n$$\n验证：$(Y+Z')=0$ 仅在 $(Y,Z)=(0,1)$ 时成立，这在 $m(1,5,9,13)$ 处产生零。$(W'+X'+Z')=0$ 仅在 $(W,X,Z)=(1,1,1)$ 时成立，这在 $m(13,15)$ 处产生零；$m(13)$ 已是第一个因子的一个零点，而 $m(15)$ 是需要额外添加的零点。对于所有其他输入，两个和项的值都为 $1$，所以 $F=1$。因此，这是最简和之积形式。", "answer": "$$\\boxed{(Y+Z')(W'+X'+Z')}$$", "id": "1954299"}, {"introduction": "将一个抽象的功能描述转换成具体的逻辑表达式是工程师的核心能力之一。这个挑战性的练习要求你为一个四位偶校验函数推导最小和之积 (POS) 表达式 [@problem_id:1954278]。通过解决这个问题，你将体会到某些特殊函数（如异或/奇偶校验）的独特性质，并理解为何在某些情况下，规范形式本身就是最简形式。", "problem": "设计一个具有四个输入变量的数字逻辑电路，记为 $A, B, C,$ 和 $D$。该电路产生单一输出 $F$。该电路的行为由一个特定规则定义：当且仅当由输入 $(A, B, C, D)$ 表示的4位二进制数包含偶数个 '1' 时，输出 $F$ 为 0。注意，包含零个 '1' 的输入被认为具有偶数个 '1'。\n\n你的任务是为函数 $F(A, B, C, D)$ 推导出最小和之积 (POS) 表达式。在你的最终表达式中，使用带撇的变量（例如，$A'$）来表示逻辑非操作。", "solution": "根据题意，$F=0$ 当且仅当4位输入 $(A,B,C,D)$ 具有偶数个 $1$（包括零个 $1$）。因此，$F=1$ 恰好对应于具有奇数个 $1$ 的输入。等价地，$F$ 是奇校验函数，即 $F=A\\oplus B\\oplus C\\oplus D$。\n\n为了推导和之积 (POS) 表达式，我们将所有对应于 $F=0$ 的输入组合的最大项相乘。对于一个输入 $(a,b,c,d)$，其规范最大项是和式\n$$(X_{A} + X_{B} + X_{C} + X_{D}),$$\n其中如果 $a=0$ 则 $X_{A}=A$，如果 $a=1$ 则 $X_{A}=A'$（$B,C,D$ 的情况也类似）。该最大项仅在输入为 $(a,b,c,d)$ 时值为 $0$，在所有其他输入处值为 $1$。\n\n具有偶校验的输入（因此 $F=0$）是那些汉明权重为 $0,2,$ 或 $4$ 的输入：\n- 权重为 $0$：$0000$ 得到最大项 $(A+B+C+D)$。\n- 权重为 $2$：$0011,0101,0110,1001,1010,1100$ 分别得到最大项\n$(A+B+C'+D')$, $(A+B'+C+D')$, $(A+B'+C'+D)$, $(A'+B+C+D')$, $(A'+B+C'+D)$, $(A'+B'+C+D)$。\n- 权重为 $4$：$1111$ 得到最大项 $(A'+B'+C'+D')$。\n\n因此，规范POS表达式为\n$$(A+B+C+D)(A+B+C'+D')(A+B'+C+D')(A+B'+C'+D)(A'+B+C+D')(A'+B+C'+D)(A'+B'+C+D)(A'+B'+C'+D').$$\n\n因为改变任何一个输入位都会反转校验位，所以卡诺图（K-map）中的每个 $0$（偶校验）都与其他 $0$ 相互隔离；因此不可能对零进行分组，并且该规范POS表达式已经是最小的。\n\n因此，$F$ 的最小POS表达式是\n$$(A+B+C+D)(A+B+C'+D')(A+B'+C+D')(A+B'+C'+D)(A'+B+C+D')(A'+B+C'+D)(A'+B'+C+D)(A'+B'+C'+D').$$", "answer": "$$\\boxed{(A+B+C+D)(A+B+C'+D')(A+B'+C+D')(A+B'+C'+D)(A'+B+C+D')(A'+B+C'+D)(A'+B'+C+D)(A'+B'+C'+D')}$$", "id": "1954278"}]}