{"hands_on_practices": [{"introduction": "掌握了二进制并行加法器的基本结构后，最有效的学习方法就是亲手追踪其运算过程。本练习将引导你处理一个极端情况：将两个4位输入都设为最大值。通过逐位计算和与进位输出，你将能清晰地看到进位信号如何在加法器级联中“涟漪”式传播，这是理解行波进位加法器核心行为和其性能瓶颈的关键一步 [@problem_id:1914727]。", "problem": "一个4位行波进位加法器由四个独立的全加器电路级联而成。每个全加器（索引为 $i$，从0到3）根据两个输入位 $A_i$、$B_i$ 和一个进位输入位 $C_i$ 计算出一个和位 $S_i$ 和一个进位输出位 $C_{i+1}$。第 $i$ 级的进位输出 $C_{i+1}$ 作为下一级（第 $i+1$ 级）的进位输入。\n\n考虑两个输入到该加法器的4位无符号二进制数：$A = A_3A_2A_1A_0$ 和 $B = B_3B_2B_1B_0$。最低有效位（第0级）的初始进位输入 $C_0$ 被设置为0。\n\n如果两个输入都设置为其最大的4位无符号值，即 $A = 1111_2$ 和 $B = 1111_2$，请确定最终的5位二进制结果。该结果由最高有效位的最终进位输出 $C_4$ 与4位和数 $S = S_3S_2S_1S_0$ 拼接而成。\n\n您的答案应该是一个形如 $C_4S_3S_2S_1S_0$ 的5位二进制数。", "solution": "第 $i$ 级的全加器计算如下\n$$S_{i} = A_{i} \\oplus B_{i} \\oplus C_{i},$$\n$$C_{i+1} = A_{i}B_{i} + (A_{i} \\oplus B_{i})C_{i},$$\n其中 $+$ 是布尔或，并置表示布尔与，而 $\\oplus$ 是异或。\n\n给定 $A = 1111_2$ 和 $B = 1111_2$，对于每一级 $i \\in \\{0,1,2,3\\}$，我们有 $A_i=1$ 和 $B_i=1$。因此\n$$A_{i} \\oplus B_{i} = 1 \\oplus 1 = 0,\\quad A_{i}B_{i} = 1 \\cdot 1 = 1.$$\n代入全加器方程，得到\n$$S_{i} = 0 \\oplus C_{i} = C_{i},$$\n$$C_{i+1} = 1 + 0 \\cdot C_{i} = 1.$$\n从给定的初始进位 $C_0=0$ 开始，我们逐级计算：\n- 第0级：$S_{0} = C_{0} = 0$， $C_{1} = 1$。\n- 第1级：$S_{1} = C_{1} = 1$， $C_{2} = 1$。\n- 第2级：$S_{2} = C_{2} = 1$， $C_{3} = 1$。\n- 第3级：$S_{3} = C_{3} = 1$， $C_{4} = 1$。\n\n因此，和数为 $S_{3}S_{2}S_{1}S_{0} = 1110$，最终进位输出为 $C_{4} = 1$，所求的5位结果 $C_{4}S_{3}S_{2}S_{1}S_{0}$ 为 $11110$。", "answer": "$$\\boxed{11110}$$", "id": "1914727"}, {"introduction": "行波进位加法器的简单性是有代价的——运算速度受限于进位传播的延迟。这个练习将逻辑分析提升到性能分析的层面，要求你基于模块化的延迟参数来估算一个更大的16位加法器的最坏情况延迟 [@problem_id:1914736]。通过这个实践，你将能定量地理解加法器规模与其速度之间的关系，并体会到优化进位路径对于设计高性能算术电路的重要性。", "problem": "在一个数字信号处理器的设计中，一个16位行波进位加法器由四个相同的4位加法器模块级联构成。每个4位模块具有两个特定的传播延迟：\n\n1.  进位传播延迟，$t_{pg}$：这是指模块的1位进位输出信号达到稳定所需的时间，从其所有数据输入（两个4位数）和其1位进位输入信号均稳定那一刻开始计算。\n2.  和生成延迟，$t_{sum}$：这是指模块的4位和输出达到稳定所需的时间，从其1位进位输入信号稳定那一刻开始计算。假设此延迟与所考虑的是四位和中的哪一位无关。\n\n对于这个16位加法器，假设所有32个数据输入位（用于两个16位操作数）以及到最低有效4位模块的初始1位进位输入在时间 $t=0$ 时均可用且稳定。\n\n确定整个16位加法器的所有16个和输出位保证稳定的最坏情况下的时间。用一个包含 $t_{pg}$ 和 $t_{sum}$ 的符号表达式来表示你的答案。", "solution": "设四个级联的4位模块从最低有效到最高有效依次编号为模块 $0,1,2,3$。在 $t=0$ 时，所有模块的数据输入以及模块0的初始进位输入都是稳定的。\n\n根据进位传播延迟 $t_{pg}$ 的定义，如果模块 $i$ 的进位输入在时间 $t_{ci}$ 变得稳定，并且其数据输入已经稳定，那么它的进位输出（即模块 $i+1$ 的进位输入）将在时间 $t_{ci} + t_{pg}$ 变得稳定。给定 $t_{c0}=0$，我们可迭代求得：\n$$\nt_{c1} = t_{c0} + t_{pg} = t_{pg},\\quad\nt_{c2} = t_{c1} + t_{pg} = 2t_{pg},\\quad\nt_{c3} = t_{c2} + t_{pg} = 3t_{pg}.\n$$\n\n根据和生成延迟 $t_{sum}$ 的定义，模块 $i$ 的4位和在时间 $t_{ci} + t_{sum}$ 变得稳定。因此，四个模块的和输出的稳定时间分别为：\n$$\nt_{S0} = t_{c0} + t_{sum} = t_{sum},\\quad\nt_{S1} = t_{c1} + t_{sum} = t_{pg} + t_{sum},\\quad\nt_{S2} = t_{c2} + t_{sum} = 2t_{pg} + t_{sum},\\quad\nt_{S3} = t_{c3} + t_{sum} = 3t_{pg} + t_{sum}.\n$$\n\n所有16个和输出位保证稳定的最坏情况下的时间是这四个时间中的最大值，即\n$$\n3t_{pg} + t_{sum}.\n$$", "answer": "$$\\boxed{3t_{pg}+t_{sum}}$$", "id": "1914736"}, {"introduction": "二进制加法器的用途远不止于执行加法运算。这个富有启发性的练习挑战你使用一个标准的4位并行加法器来解决一个看似无关的逻辑问题：判断一个数能否被3整除 [@problem_id:1914699]。这个过程不仅能加深你对加法器功能的理解，更能启发你如何将一个已知的数学性质巧妙地转化为硬件实现，体现了数字逻辑设计中资源复用和创造性思维的精髓。", "problem": "一位数字逻辑设计者想要创建一个专用电路，来判断一个表示为 $A=a_3a_2a_1a_0$ 的4位无符号整数是否为3的倍数。该设计被限制使用一个4位二进制并行加法器作为其主要计算单元。\n\n该设计基于一个数论属性：一个二进制数能被3整除，当且仅当其二进制位成对分组（也称为4进制数位）后的和能被3整除。对于4位数 $A$，这意味着 $A$ 是3的倍数，当且仅当两个2位数 $N_1 = (a_3a_2)_2$ 和 $N_0 = (a_1a_0)_2$ 的和是3的倍数。\n\n为实现此目的，该4位加法器被配置用于计算和 $S = N_1 + N_0$。该加法器有两个4位输入 $X=X_3X_2X_1X_0$ 和 $Y=Y_3Y_2Y_1Y_0$，一个进位输入 $C_{in}$，一个4位和输出 $Z=Z_3Z_2Z_1Z_0$，以及一个最终进位输出 $C_{out}$。其输入连接如下：\n- $X = 00a_3a_2$\n- $Y = 00a_1a_0$\n- $C_{in} = 0$\n\n你的任务是确定一个关于和输出位（$Z_3, Z_2, Z_1, Z_0$）的正确逻辑表达式，该表达式为真的条件是当且仅当原始数 $A$ 是3的倍数。以下哪个表达式正确地标识了此条件？\n\nA. $Z_2 = Z_1 \\land Z_0$\n\nB. $Z_1 = Z_2 \\oplus Z_0$\n\nC. $Z_2 \\lor Z_1 \\lor Z_0 = 1$\n\nD. $(\\overline{Z_2} \\land \\overline{Z_1} \\land \\overline{Z_0}) \\lor (\\overline{Z_2} \\land Z_1 \\land Z_0) \\lor (Z_2 \\land Z_1 \\land \\overline{Z_0})$\n\nE. $Z_2 = Z_1$", "solution": "将 $A=a_{3}a_{2}a_{1}a_{0}$ 分组为两个2位数 $N_{1}=(a_{3}a_{2})_{2}$ 和 $N_{0}=(a_{1}a_{0})_{2}$。通过设置 $X=00a_{3}a_{2}$，$Y=00a_{1}a_{0}$ 和 $C_{in}=0$，该4位加法器被连接以计算\n$$\nS=N_{1}+N_{0}\n$$\n由于 $N_{1},N_{0}\\in\\{0,1,2,3\\}$，可得出 $S\\in\\{0,1,2,3,4,5,6\\}$。因此，$Z_{3}$ 恒为0，而相关的和位是 $Z_{2}Z_{1}Z_{0}$，它们以二进制形式表示 $S$。\n\n根据所述的数论属性，$A$是3的倍数当且仅当 $S\\equiv 0 \\pmod{3}$。已知 $S\\in\\{0,\\dots,6\\}$，这种情况恰好在\n$$\nS\\in\\{0,3,6\\}\n$$\n时发生，它们在 $(Z_{2},Z_{1},Z_{0})$ 上的二进制编码为\n$$\n0\\leftrightarrow (0,0,0),\\quad 3\\leftrightarrow (0,1,1),\\quad 6\\leftrightarrow (1,1,0).\n$$\n因此，当且仅当 $A$ 是3的倍数时为真的逻辑函数，必须是恰好选择这三种模式的最小项之和：\n$$\n(\\overline{Z_{2}}\\land \\overline{Z_{1}}\\land \\overline{Z_{0}})\\ \\lor\\ (\\overline{Z_{2}}\\land Z_{1}\\land Z_{0})\\ \\lor\\ (Z_{2}\\land Z_{1}\\land \\overline{Z_{0}}).\n$$\n这与选项D匹配。", "answer": "$$\\boxed{D}$$", "id": "1914699"}]}