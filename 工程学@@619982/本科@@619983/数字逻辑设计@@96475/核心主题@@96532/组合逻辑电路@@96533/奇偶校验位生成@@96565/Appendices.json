{"hands_on_practices": [{"introduction": "让我们从奇偶校验生成器的最基本层面开始。这个练习将挑战你将偶校验位的数学定义——即数据位的异或（$XOR$）总和——转换成一个仅使用特定类型逻辑门（同或门 $XNOR$）的电路。通过这个实践，你将加深对异或与同或之间布尔代数关系的理解，并学会如何在具体的硬件约束下进行逻辑设计 [@problem_id:1951262]。", "problem": "在数字通信系统中，通常会在一个二进制数据字后附加一个奇偶校验位，以检测传输过程中可能发生的错误。一个**偶校验**方案要求在传输的字（原始数据加上奇偶校验位）中'1'的总数是一个偶数。\n\n您的任务是为一个4位数据字（表示为 $D_3D_2D_1D_0$）设计一个偶校验生成器。您的设计必须仅使用2输入XNOR（同或）门来实现。您可以假定逻辑常数'0'（低电平）和'1'（高电平）可作为这些门的输入。\n\n设2输入XNOR运算用符号 $\\odot$ 表示。例如，`A XNOR B`的表达式写作 $A \\odot B$。\n\n对于4位数据字 $D_3D_2D_1D_0$，以下哪个布尔表达式正确地表示了偶校验位 $P$？\n\nA. $P = (((D_0 \\odot D_1) \\odot D_2) \\odot D_3) \\odot 0$\n\nB. $P = ((D_0 \\odot D_1) \\odot D_2) \\odot D_3$\n\nC. $P = (D_0 \\odot D_1) \\odot (D_2 \\odot D_3)$\n\nD. $P = (((D_0 \\odot D_1) \\odot D_2) \\odot D_3) \\odot 1$\n\nE. $P = (D_0 \\odot 0) \\odot (D_1 \\odot 0) \\odot (D_2 \\odot 0) \\odot (D_3 \\odot 0)$", "solution": "偶校验要求数据加上奇偶校验位中'1'的总数为偶数。使用XOR（异或）校验，这个条件表示为\n$$\nD_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3} \\oplus P = 0,\n$$\n这意味着\n$$\nP = D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}.\n$$\n我们必须仅使用2输入XNOR门来实现这一点。关键的恒等式有：\n- $A \\odot B = \\overline{A \\oplus B}$\n- $A \\odot 0 = \\overline{A}$\n- $A \\odot 1 = A$\n- $\\overline{A \\oplus B} \\odot C = A \\oplus B \\oplus C$\n\n逐一评估每个选项。\n\n选项 B：\n一个由3个2输入XNOR门级联而成的4输入电路，计算的是所有输入的XNOR（同或）：\n$$\n((D_{0} \\odot D_{1}) \\odot D_{2}) \\odot D_{3} = \\overline{D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}}.\n$$\n这是奇校验位，不是偶校验位。\n\n选项 A：\n利用选项B的结果，我们有：\n$$\n(((D_{0} \\odot D_{1}) \\odot D_{2}) \\odot D_{3}) \\odot 0 = (\\overline{D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}}) \\odot 0\n$$\n使用恒等式 $X \\odot 0 = \\overline{X}$，上式变为：\n$$\n\\overline{\\overline{D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}}} = D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}.\n$$\n所以 A 精确地实现了偶校验位。\n\n选项 C：\n$$\n\\begin{aligned}\n(D_{0} \\odot D_{1}) \\odot (D_{2} \\odot D_{3}) &= (\\overline{D_{0} \\oplus D_{1}}) \\odot (\\overline{D_{2} \\oplus D_{3}}) \\\\\n&= \\overline{(\\overline{D_{0} \\oplus D_{1}}) \\oplus (\\overline{D_{2} \\oplus D_{3}})} \\\\\n&= \\overline{(D_{0} \\oplus D_{1}) \\oplus (D_{2} \\oplus D_{3})} \\\\\n&= \\overline{D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}},\n\\end{aligned}\n$$\n其中第三个等式成立是因为 $\\overline{A} \\oplus \\overline{B} = A \\oplus B$。这同样是奇校验位。\n\n选项 D：\n利用选项B的结果和恒等式 $X \\odot 1 = X$：\n$$\n(((D_{0} \\odot D_{1}) \\odot D_{2}) \\odot D_{3}) \\odot 1 = ((D_{0} \\odot D_{1}) \\odot D_{2}) \\odot D_{3}\n$$\n所以D可以简化为B，是错误的。\n\n选项 E：\n$$\n(D_0 \\odot 0) \\odot (D_1 \\odot 0) \\odot (D_2 \\odot 0) \\odot (D_3 \\odot 0) = \\overline{D_0} \\odot \\overline{D_1} \\odot \\overline{D_2} \\odot \\overline{D_3}\n$$\n这是一个对反相输入进行的4输入XNOR运算，其结果为：\n$$\n\\overline{\\overline{D_0} \\oplus \\overline{D_1} \\oplus \\overline{D_2} \\oplus \\overline{D_3}}\n$$\n由于对偶数个（4个）变量取反后再异或，其结果不变，即 $\\overline{D_0} \\oplus \\overline{D_1} \\oplus \\overline{D_2} \\oplus \\overline{D_3} = D_0 \\oplus D_1 \\oplus D_2 \\oplus D_3$。因此，整个表达式简化为 $\\overline{D_{0} \\oplus D_{1} \\oplus D_{2} \\oplus D_{3}}$，这也是奇校验位。\n\n因此，只有选项A实现了偶校验位。", "answer": "$$\\boxed{A}$$", "id": "1951262"}, {"introduction": "在实际的数字系统中，奇偶校验通常不只用于静态数据，也用于验证计算结果的完整性。这个练习将奇偶校验的应用提升到一个新的层次：为一个2位二进制乘法器的输出结果生成奇校验位。这个挑战鼓励你跳出暴力计算所有乘积的思维定式，转而利用异或运算的深刻性质来找到一个更为优雅和高效的解决方案 [@problem_id:1951224]，这在设计复杂的算术逻辑单元时是一项宝贵的技能。", "problem": "一个定制数字信号处理器中的专门错误校验模块正在设计中。该模块的功能是接收两个2位无符号二进制数，将它们相乘，然后为得到的乘积生成一个奇校验位。\n\n设两个输入数为 $A$ 和 $B$。数 $A$ 由比特 $A_1A_0$ 表示，其中 $A_1$ 是最高有效位 (MSB)。类似地，数 $B$ 由比特 $B_1B_0$ 表示，其中 $B_1$ 是MSB。这两个数的乘法得到一个4位乘积 $P$，由比特 $P_3P_2P_1P_0$ 表示。\n\n然后，该模块必须为这个4位乘积 $P$ 生成一个奇校验位 $P_{odd}$。奇校验系统要求数据位和校验位中'1'的总数为奇数。这意味着，如果4位乘积 $P$ 包含偶数个'1'，则奇校验位 $P_{odd}$ 必须为1。如果 $P$ 包含奇数个'1'，则 $P_{odd}$ 必须为0。\n\n你的任务是确定奇校验位 $P_{odd}$ 作为四个输入比特 $A_1, A_0, B_1, B_0$ 的函数的最小积之和 (SOP) 布尔表达式。积之和表达式是合取 (与) 的析取 (或)。在你的最终答案中，用并置表示逻辑与，用 `+` 表示逻辑或。", "solution": "设 $A=A_{1}A_{0}$ 和 $B=B_{1}B_{0}$ 是两个2位无符号数。它们的乘积产生 $P=P_{3}P_{2}P_{1}P_{0}$。当 $P$ 中 '1' 的个数为偶数时，奇校验位必须满足 $P_{\\text{odd}}=1$；当其为奇数时，满足 $P_{\\text{odd}}=0$。令 $s=P_{3}\\oplus P_{2}\\oplus P_{1}\\oplus P_{0}$ 表示乘积比特的异或和。那么所需的校验位是其补：\n$$\nP_{\\text{odd}}=\\overline{s}.\n$$\n直接从乘积的布尔表达式展开并化简 $s$ 会非常繁琐。一个更有效的方法是使用一个已知的属性：对于两个2位无符号数 $A=A_1A_0$ 和 $B=B_1B_0$，其乘积 $P$ 的所有比特的异或和 $s$，等于两个输入数各自比特的异或和的逻辑与（AND）。即：\n$$\ns = (A_1 \\oplus A_0) \\land (B_1 \\oplus B_0)\n$$\n这个结果可以通过构建一个包含全部16种输入组合的真值表来验证。在布尔代数中，AND通常由并置（乘法）表示，因此：\n$$\ns = (A_0 \\oplus A_1)(B_0 \\oplus B_1)\n$$\n因此，根据德摩根定律，奇校验位为：\n$$\nP_{\\text{odd}}=\\overline{(A_{0}\\oplus A_{1})(B_{0}\\oplus B_{1})}\n=\\overline{(A_{0}\\oplus A_{1})}+\\overline{(B_{0}\\oplus B_{1})}\n$$\n使用 $\\overline{X\\oplus Y}=XY+\\overline{X}\\,\\overline{Y}$（同或门的表达式），我们得到：\n$$\n\\overline{(A_{0}\\oplus A_{1})}=A_{0}A_{1}+\\overline{A_{0}}\\,\\overline{A_{1}},\\quad\n\\overline{(B_{0}\\oplus B_{1})}=B_{0}B_{1}+\\overline{B_{0}}\\,\\overline{B_{1}}.\n$$\n因此，最小积之和形式为：\n$$\nP_{\\text{odd}}=A_{0}A_{1}+\\overline{A_{0}}\\,\\overline{A_{1}}+B_{0}B_{1}+\\overline{B_{0}}\\,\\overline{B_{1}}.\n$$\n这个表达式是最小化的。函数 $s$ 仅在 $(A_0 \\oplus A_1)=1$ 且 $(B_0 \\oplus B_1)=1$ 时为1，这对应于卡诺图中四个分散的最小项。因此它的补函数 $P_{\\text{odd}}$ 无法被更少的蕴含项覆盖，所示表达式为最优。", "answer": "$$\\boxed{A_{0}A_{1}+\\overline{A_{0}}\\,\\overline{A_{1}}+B_{0}B_{1}+\\overline{B_{0}}\\,\\overline{B_{1}}}$$", "id": "1951224"}, {"introduction": "最后一个练习旨在检验你对奇偶校验核心概念的深刻洞察力。问题描述了一个看似复杂的场景，包含数据旋转和控制信号，但其解决方案的关键在于识别并应用奇偶校验的一个基本属性：它在数据位重新排列（或置换）下的不变性。这个练习将教会你在面对复杂问题时，如何通过回归第一性原理来发现问题的本质，从而大大简化设计 [@problem_id:1951242]。", "problem": "一个专用的数字信号处理单元被设计用于对一个4位数据字执行条件旋转和奇偶校验计算。该单元有两个输入：一个4位数据字 $D$，其各位表示为 $D_3D_2D_1D_0$，其中 $D_3$ 是最高有效位 (MSB)；以及一个2位控制信号 $S$，其各位为 $S_1S_0$，其中 $S_1$ 是最高有效位 (MSB)。\n\n该操作分两个阶段进行。首先，数据字 $D$ 向左逻辑旋转，旋转的位数由控制信号 $S$ 的二进制值决定。例如，如果 $S = 01_2 = 1_{10}$，数据字 $D_3D_2D_1D_0$ 变为 $D_2D_1D_0D_3$。在逻辑旋转中，从最高有效位 (MSB) 移出的位被插入到最低有效位 (LSB) 的位置。\n\n其次，该单元为旋转后的4位数据字生成一个单独的奇校验位 $P$。奇校验系统是指：如果数据字中1的个数为偶数，则校验位设为1；如果1的个数为奇数，则设为0，从而使得数据字与校验位合在一起后，1的总数始终为奇数。\n\n你的任务是推导出奇校验位 $P$ 关于六个输入位 $D_3, D_2, D_1, D_0, S_1,$ 和 $S_0$ 的简化布尔表达式。", "solution": "设 $D$ 为4位字，其各位为 $D_{3}D_{2}D_{1}D_{0}$，设 $S$ 为2位控制信号，其各位为 $S_{1}S_{0}$。设 $k$ 表示由 $S$ 编码的整数，这样该单元将 $D$ 向左旋转 $k$ 个位置。将旋转后的各位 $R_{3}R_{2}R_{1}R_{0}$ 定义为\n$$\nR_{i} = D_{(i - k)\\bmod 4}, \\quad i \\in \\{3,2,1,0\\}.\n$$\n奇校验位 $P$ 的设置应使得 $R_{3}R_{2}R_{1}R_{0}$ 与 $P$ 合在一起后，1的总数为奇数。设旋转后各位的异或（XOR）为\n$$\n\\Pi = R_{3} \\oplus R_{2} \\oplus R_{1} \\oplus R_{0}.\n$$\n根据奇校验的定义，如果 $R_{3}R_{2}R_{1}R_{0}$ 中1的个数为偶数（即 $\\Pi=0$），则 $P=1$；如果为奇数（即 $\\Pi=1$），则 $P=0$。因此，\n$$\nP = \\overline{\\Pi} = \\overline{R_{3} \\oplus R_{2} \\oplus R_{1} \\oplus R_{0}}.\n$$\n旋转是位位置的一种置换，且异或（XOR）运算满足结合律和交换律，因此旋转后各位的异或等于原始各位的异或。形式上，\n$$\nR_{3} \\oplus R_{2} \\oplus R_{1} \\oplus R_{0}\n= \\bigoplus_{i=0}^{3} R_{i}\n= \\bigoplus_{i=0}^{3} D_{(i-k)\\bmod 4}\n= \\bigoplus_{j=0}^{3} D_{j}\n= D_{3} \\oplus D_{2} \\oplus D_{1} \\oplus D_{0},\n$$\n其中第三个等式成立是因为对下标进行了重新标记 $j=(i-k)\\bmod 4$。因此，奇校验位与 $S_{1}$ 和 $S_{0}$ 无关，且等于原始数据各位异或的补：\n$$\nP = \\overline{D_{3} \\oplus D_{2} \\oplus D_{1} \\oplus D_{0}}.\n$$\n这就是关于六个输入的简化布尔表达式，它不依赖于 $S_{1}$ 或 $S_{0}$。", "answer": "$$\\boxed{\\overline{D_{3}\\oplus D_{2}\\oplus D_{1}\\oplus D_{0}}}$$", "id": "1951242"}]}