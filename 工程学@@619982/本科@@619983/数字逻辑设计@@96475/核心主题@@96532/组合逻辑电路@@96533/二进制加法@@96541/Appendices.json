{"hands_on_practices": [{"introduction": "掌握二进制加法是理解数字算术运算的第一步。这个练习将带你实践最基本的逐位相加和进位处理，这是所有数字加法器内部的核心机制。通过解决这个问题 [@problem_id:1913349]，你将巩固对二进制加法过程的理解。", "problem": "在一个数字系统中，需要将两个4位无符号二进制数 $A = 1011_2$ 和 $B = 0110_2$ 相加。该运算由一个二进制加法器电路执行，其产生的结果可能需要超过4位才能完整表示。\n\n请确定表示 $A$ 和 $B$ 完整和的5位无符号二进制数。", "solution": "题目要求计算两个4位无符号二进制数 $A = 1011_2$ 和 $B = 0110_2$ 的和。我们需要找出这次加法运算的5位结果。我们将 $A$ 的各位记为 $A_3A_2A_1A_0$，$B$ 的各位记为 $B_3B_2B_1B_0$，其中下标表示比特位的位置（0为最低有效位）。和将是一个5位数，我们可以将其表示为 $S_4S_3S_2S_1S_0$。\n\n我们从右到左逐列进行加法，并记录每个阶段的进位。设 $C_i$ 为第 $i$ 列的进位输入。\n\n**步骤1：第0列（最低有效位）**\n我们将最右边的位 $A_0$ 和 $B_0$ 相加。没有初始的进位输入，所以 $C_0 = 0$。\n$S_0 = A_0 + B_0 + C_0 = 1 + 0 + 0 = 1$。\n到下一列的进位输出 $C_1$ 为0，因为和小于2。\n- 和位：$S_0 = 1$\n- 进位输出：$C_1 = 0$\n\n**步骤2：第1列**\n我们将 $A_1$ 和 $B_1$ 与上一步的进位输入 $C_1$ 相加。\n$S_1 = A_1 + B_1 + C_1 = 1 + 1 + 0 = 2$。\n在二进制中，$2_{10}$ 表示为 $10_2$。和位是此结果的最低有效位（LSB），进位输出是最高有效位（MSB）。\n- 和位：$S_1 = 0$\n- 进位输出：$C_2 = 1$\n\n**步骤3：第2列**\n我们将 $A_2$ 和 $B_2$ 与进位输入 $C_2$ 相加。\n$S_2 = A_2 + B_2 + C_2 = 0 + 1 + 1 = 2$。\n同样，$2_{10} = 10_2$。\n- 和位：$S_2 = 0$\n- 进位输出：$C_3 = 1$\n\n**步骤4：第3列（输入的最高有效位）**\n我们将 $A_3$ 和 $B_3$ 与进位输入 $C_3$ 相加。\n$S_3 = A_3 + B_3 + C_3 = 1 + 0 + 1 = 2$。\n再一次，$2_{10} = 10_2$。\n- 和位：$S_3 = 0$\n- 进位输出：$C_4 = 1$\n\n**步骤5：第4列（最终进位）**\n最终的和需要第5位，它就是最后一列的进位输出 $C_4$。\n- 和位：$S_4 = C_4 = 1$\n\n**步骤6：组合最终结果**\n我们将和位 $S_4S_3S_2S_1S_0$ 组合起来，形成5位的结果。\n结果是 $10001_2$。\n\n我们可以将加法过程可视化如下：\n```\n  111   (Carries)\n  1011  (A)\n+ 0110  (B)\n-------\n 10001  (Sum)\n```\n因此，表示 $A=1011_2$ 和 $B=0110_2$ 之和的5位无符号二进制数是 $10001_2$。", "answer": "$$\\boxed{10001}$$", "id": "1913349"}, {"introduction": "计算机处理器如何实现减法？一个巧妙的方法是利用二进制补码 ($2$'s complement) 表示法将减法转化为加法。这个实践练习 [@problem_id:1915324] 将指导你完成这一转换过程，从而深刻理解硬件如何通过一种统一的架构（加法器）高效地执行不同的算术运算。", "problem": "计算机算术逻辑单元 (ALU) 的一项基本操作是减法，通常通过使用特定的负数二进制表示法将减法问题转换为加法问题来实现。考虑十进制减法运算 $5 - 7$。你的任务是模拟一个使用4位二进制加法器的数字电路如何执行此计算。\n\n首先，将被减数 (5) 转换为其4位二进制表示。然后，将减数 (7) 转换为其4位二进制表示。接下来，求出被减去的数（本例中为 7）的4位二进制补码表示，以表示其负值。最后，将被减数的二进制形式与减数的补码形式进行二进制相加。从最高有效位产生的任何进位都应被舍弃，这是补码运算的标准做法。\n\n这次最终加法得到的4位二进制数是多少？请用一个4位的二进制字符串表示你的答案。", "solution": "在补码运算中，减法 $a-b$ 在固定的位宽下按 $a+(\\text{b的补码})$ 的方式执行，并舍弃超出该位宽的任何进位。\n\n将操作数转换为4位二进制：\n$$5_{10}=0101_{2},\\qquad 7_{10}=0111_{2}.$$\n\n求7的4位补码，方法是将所有位取反再加$1$：\n$$\\overline{0111}=1000,\\qquad 1000+0001=1001,$$\n所以，7的4位补码是 $1001_{2}$。\n\n将被减数与此补码相加，并从最低有效位到最高有效位逐位分析进位：\n- 最低有效位：$1+1=0$，有进位 $1$。\n- 下一位：$0+0+1=1$，进位为 $0$。\n- 下一位：$1+0=1$，进位为 $0$。\n- 最高有效位：$0+1=1$，进位为 $0$。\n\n因此，\n$$0101_{2}+1001_{2}=1110_{2}.$$\n没有超出最高有效位的进位需要舍弃。4位结果 $1110_{2}$ 是-2的补码编码，与 $5-7=-2$ 一致。", "answer": "$$\\boxed{1110}$$", "id": "1915324"}, {"introduction": "在追求更高速度和更低功耗的现代计算中，有时我们愿意用微小的精度损失换取性能的显著提升，这就是近似计算的理念。这个富有挑战性的练习 [@problem_id:1913331] 让你分析一个非标准的近似加法器设计。你需要计算其误差，从而体会到在真实世界的电路设计中，工程师必须在精度和效率之间做出的权衡。", "problem": "在近似计算领域，数字电路被有意地简化，以牺牲少量计算精度来换取速度和功率效率的显著提升。考虑一个特定的8位近似无符号加法器的设计。该加法器接收两个8位无符号输入 `A = A_7A_6A_5A_4A_3A_2A_1A_0` 和 `B = B_7B_6B_5B_4B_3B_2B_1B_0`，并产生一个8位的和 `S = S_7S_6S_5S_4S_3S_2S_1S_0`。\n\n该加法器的操作根据位的权重分为两部分：\n\n1.  **低位部分（最低有效位）：** 对于低4位（第0到3位），该加法器执行标准的、完全精确的二进制加法。它计算出4位的和 `S_3S_2S_1S_0` 和一个进位输出信号（我们称之为 `C_4`），该信号在标准加法器中将作为第5个位位置的进位输入。\n\n2.  **高位部分（最高有效位）：** 对于高4位（第4到7位），为了性能考虑，设计被激进地简化以断开进位链。来自低位部分的进位输出 `C_4` 被丢弃，不用于高位部分的计算。此外，高位部分的和位通过简单的按位逻辑计算：对于从4到7的每个位 `i`，对应的和位 `S_i` 计算为 `S_i = A_i \\oplus B_i`，其中 `\\oplus` 表示异或（XOR）运算。\n\n你的任务是分析这个近似加法器的误差分布。具体来说，你必须确定两个关键指标：\n\n-   **最坏情况误差：** 真实算术和 `(A + B)` 与近似加法器计算出的和之间的最大可能绝对差。\n-   **平均误差：** 误差 `(真实和 - 近似和)` 的期望值，假设输入 `A` 和 `B` 是从所有可能的8位无符号整数集合中独立且均匀随机地选择的。\n\n提供这两个数值。请以精确数值（例如，整数或分数）的形式给出你的答案。", "solution": "设 $A=16H_{A}+L_{A}$ 且 $B=16H_{B}+L_{B}$，其中 $H_{A},H_{B}\\in\\{0,\\dots,15\\}$ 为高4位整数，$L_{A},L_{B}\\in\\{0,\\dots,15\\}$ 为低4位整数。设 $L_{S}=(L_{A}+L_{B})\\bmod 16$ 且 $C_{4}=\\left\\lfloor (L_{A}+L_{B})/16\\right\\rfloor\\in\\{0,1\\}$。精确和为\n$$\nT=A+B=16(H_{A}+H_{B}+C_{4})+L_{S}.\n$$\n近似加法器输出\n$$\nS_{\\mathrm{apx}}=16U+L_{S},\\quad U=H_{A}\\oplus H_{B}.\n$$\n因此（有符号）误差为\n$$\nE=T-S_{\\mathrm{apx}}=16\\big(H_{A}+H_{B}+C_{4}-U\\big).\n$$\n对于所有非负整数 $x,y$，使用以下按位恒等式：\n$$\nx+y=(x\\oplus y)+2\\,(x\\,\\mathrm{AND}\\,y).\n$$\n当 $x=H_{A}$ 且 $y=H_{B}$ 时，我们得到\n$$\nH_{A}+H_{B}-U=2\\,(H_{A}\\,\\mathrm{AND}\\,H_{B}),\n$$\n因此\n$$\nE=16\\big(2\\,(H_{A}\\,\\mathrm{AND}\\,H_{B})+C_{4}\\big).\n$$\n\n最坏情况误差。由于通过适当选择 $L_A, L_B$ 可以使 $C_4$ 等于0或1，最坏情况即使得 $2\\,(H_A\\,\\mathrm{AND}\\,H_B)+C_4$ 最大化。在 $H_A,H_B\\in\\{0,\\dots,15\\}$ 的范围内，$(H_A\\,\\mathrm{AND}\\,H_B)$ 的最大值为15，这在 $H_A=H_B=15$ 时取得，并且取 $C_4=1$ 可得\n$$\n\\max|E|=16\\big(2\\cdot 15+1\\big)=16\\cdot 31=496.\n$$\n\n平均误差。当 $H_{A}, H_{B}$ 和 $L_{A}, L_{B}$ 独立且均匀分布时，我们有\n$$\n\\mathbb{E}[E]=16\\big(2\\,\\mathbb{E}[H_{A}\\,\\mathrm{AND}\\,H_{B}]+\\mathbb{E}[C_{4}]\\big),\n$$\n并且独立性意味着 $\\mathbb{E}[H_{A}\\,\\mathrm{AND}\\,H_{B}]$ 独立于 $\\mathbb{E}[C_{4}]$。\n\n对于在 $\\{0,\\dots,15\\}$ 上均匀分布的 $H_{A},H_{B}$，我们按位分解与(AND)运算。对于位 $k\\in\\{0,1,2,3\\}$，当相应位都为1时，其贡献为 $2^{k}$，这种情况发生的概率为 $(1/2)\\cdot(1/2)=1/4$。因此\n$$\n\\mathbb{E}[H_{A}\\,\\mathrm{AND}\\,H_{B}]=\\sum_{k=0}^{3}2^{k}\\cdot\\frac{1}{4}=\\frac{1}{4}(1+2+4+8)=\\frac{15}{4}.\n$$\n对于 $C_{4}$，当 $L_{A},L_{B}$ 在 $\\{0,\\dots,15\\}$ 上均匀分布时，$C_{4}=1$ 当且仅当 $L_{A}+L_{B}\\geq 16$。和为 $s$ 的数对数量，在 $0\\leq s\\leq 15$ 时为 $s+1$，在 $16\\leq s\\leq 30$ 时为 $31-s$。因此\n$$\n\\mathbb{P}(C_{4}=1)=\\frac{1}{256}\\sum_{s=16}^{30}(31-s)=\\frac{1}{256}\\sum_{t=1}^{15}t=\\frac{120}{256}=\\frac{15}{32},\n$$\n所以 $\\mathbb{E}[C_{4}]=\\frac{15}{32}$。因此\n$$\n\\mathbb{E}[E]=16\\left(2\\cdot\\frac{15}{4}+\\frac{15}{32}\\right)=16\\left(\\frac{30}{4}+\\frac{15}{32}\\right)=16\\cdot\\frac{255}{32}=\\frac{255}{2}.\n$$\n\n因此，最坏情况绝对误差为 $496$，平均有符号误差 $\\mathbb{E}[T-S_{\\mathrm{apx}}]$ 为 $\\frac{255}{2}$。", "answer": "$$\\boxed{\\begin{pmatrix}496 & \\frac{255}{2}\\end{pmatrix}}$$", "id": "1913331"}]}