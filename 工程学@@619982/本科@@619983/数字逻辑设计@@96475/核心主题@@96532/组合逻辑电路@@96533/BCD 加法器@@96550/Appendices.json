{"hands_on_practices": [{"introduction": "本次练习将引导您逐步完成一次标准的BCD加法运算。通过计算一个包含输入进位 $C_{in}$ 的加法示例，您将掌握BCD加法器的核心算法：先进行二进制加法，然后根据条件判断是否需要进行“加6”修正。这个基础练习旨在巩固BCD加法的基本操作流程。[@problem_id:1911970]", "problem": "单一位二进制编码十进制 (BCD) 加法器是一种为十进制算术设计的数字电路。它接受两个4位输入$A$和$B$（每个代表一个从0到9的十进制数字），以及一个1位的输入进位 $C_{in}$。该电路产生一个4位的BCD和输出S，以及一个1位的输出进位 $C_{out}$。\n\n该加法器的运算分两个阶段进行。在第一阶段，对输入A、B和 $C_{in}$ 执行标准的4位二进制加法。这会产生一个4位的初步和 $S'$ 和一个1位的初步进位 $C'_{out}$。在第二阶段，如果结果为非法的BCD码，则进行修正。如果初步和 $S'$ 大于9（即 $> 1001_2$），或者初步进位 $C'_{out}$ 为1，则满足修正条件。如果满足此条件，则将6的二进制值（即 $0110_2$）加到初步和 $S'$ 上。第二次加法的4位结果成为最终的和S，而由这次加法产生的进位成为最终的输出进位 $C_{out}$。如果不需要修正，则最终的和S就是 $S'$，最终的输出进位 $C_{out}$ 为0。\n\n考虑一个实例，其中BCD输入A代表十进制数字8，BCD输入B代表十进制数字5，输入的进位 $C_{in}$ 为1。确定该加法器的最终5位输出，该输出由最终的1位输出进位（$C_{out}$）作为最高有效位（MSB）与4位的BCD和（S）拼接而成。将此5位结果表示为二进制字符串。", "solution": "输入为 $A=8 \\Rightarrow A=1000_{2}$，$B=5 \\Rightarrow B=0101_{2}$，以及 $C_{in}=1 \\Rightarrow 1_{2}$。第一阶段执行一次4位二进制加法：\n$$\nS' = A + B + C_{in} = 1000_{2} + 0101_{2} + 1_{2}.\n$$\n计算中间和：\n$$\n1000_{2} + 0101_{2} = 1101_{2},\n$$\n然后加上输入进位：\n$$\nS' = 1101_{2} + 1_{2} = 1110_{2}, \\quad C'_{out} = 0,\n$$\n由于 $1110_{2} < 2^{4}$，因此没有发生初步溢出。\n\nBCD修正条件要求在 $C'_{out}=1$ 或 $S' > 1001_{2}$ 时进行修正。此处 $S' = 1110_{2} > 1001_{2}$，所以需要进行修正。将 $0110_{2}$ 加到 $S'$ 上：\n$$\nS' + 0110_{2} = 1110_{2} + 0110_{2} = 1\\,0100_{2}.\n$$\n因此，最终的输出进位和和为\n$$\nC_{out} = 1, \\quad S = 0100_{2}.\n$$\n将 $C_{out}$ 作为最高有效位与4位的和S拼接，得到5位输出 $1\\,0100_{2}$，即二进制字符串 $10100$。", "answer": "$$\\boxed{10100}$$", "id": "1911970"}, {"introduction": "既然您已经了解了BCD加法的*操作方法*，让我们来探讨其修正步骤如此关键的*原因*。这个思想实验模拟了一个错误地执行了修正操作的故障加法器。通过分析其错误的输出结果，您将更深刻地理解修正逻辑所需遵循的精确条件，从而确保十进制算术的准确性。[@problem_id:1911921]", "problem": "一位二进制编码的十进制（BCD）加法器是一种数字电路，旨在对以4位二进制格式表示的十进制数字进行算术运算。十进制数字0到9的BCD表示法使用二进制等效数 `0000` 至 `1001`。一个标准的BCD加法器分两个阶段工作。首先，它使用一个4位二进制加法器来计算两个BCD输入的初始和。其次，一个校正阶段会检查这个初始和是否为无效的BCD码（即大于9的值，二进制为 `1001`），或者4位二进制加法器的最高有效位是否产生了进位。如果任一条件为真，则将校正因子6（二进制 `0110`）加到初始和上，以产生正确的BCD结果。\n\n考虑一个有故障的BCD加法器，其校正逻辑被错误地触发。当将十进制数字4与十进制数字4相加时，该加法器正确地计算了初始二进制和。然而，由于故障，电路接着将校正因子 `0110` 加到这个和上，而对于这个特定的运算，通常是不会执行这一步的。\n\n假设这次最终的错误加法产生的任何进位都被忽略，那么这个有故障的加法器输出的最终4位二进制字对应的十进制值是多少？", "solution": "十进制数字 $4$ 的BCD码是 $0100$。使用4位二进制加法器将 $4$ 和 $4$ 相加，得到的初始和为\n$$S_{0}=0100+0100=1000,$$\n这等于十进制的 $8$。\n\n由于故障，校正因子 $K=0110$ 在不应相加的情况下被加上了。错误的最终和为\n$$S=S_{0}+K=1000+0110=1110.$$\n\n这次加法产生的任何进位都将被忽略；在这种情况下，最高有效位之外没有产生进位，所以最终的4位字是 $1110$。\n\n将这个4位字解释为无符号二进制数，得到\n$$V=1\\cdot 2^{3}+1\\cdot 2^{2}+1\\cdot 2^{1}+0\\cdot 2^{0}=8+4+2+0=14.$$\n因此，最终的4位二进制字对应的十进制值为 $14$。", "answer": "$$\\boxed{14}$$", "id": "1911921"}, {"introduction": "最后的练习将带您从BCD加法算法的使用者转变为设计者。您将推导出决定*何时*进行修正的关键布尔逻辑表达式，即判断条件 $C = K + Z_3 Z_2 + Z_3 Z_1$。这项任务将抽象的算术规则与具体的数字逻辑电路实现联系起来，将您的程序性理解提升为结构性理解。[@problem_id:1911900]", "problem": "一位数字系统工程师的任务是设计一个1位二进制编码的十进制 (BCD) 加法器。一个标准的BCD数字是一个4位二进制数，表示0到9的十进制数。该加法器必须接收两个4位 BCD 输入，$A = A_3A_2A_1A_0$ 和 $B = B_3B_2B_1B_0$，并生成一个5位BCD输出，用于表示它们的和。该和由1位进位输出 $C_{out}$ 和4位和 $S = S_3S_2S_1S_0$ 组成。\n\n所提出的架构包括三个阶段：\n1.  一个4位二进制加法器接收输入 $A$ 和 $B$，生成一个4位二进制和 $Z = Z_3Z_2Z_1Z_0$ 以及一个进位输出 $K$。\n2.  一个需要您来设计的定制组合逻辑电路，以4位和 $Z$ 和进位输出 $K$ 为其输入。它会生成一个4位的“修正向量” $M = M_3M_2M_1M_0$。此向量的目的是为了便于将二进制和转换为正确的 BCD 格式。\n3.  第二个4位二进制加法器将中间和 $Z$ 与修正向量 $M$ 相加。这第二次加法的4位结果是最终的 BCD 和 $S$，其进位输出是最终的进位 $C_{out}$。\n\n您的任务是确定修正向量的四个位 $M_3, M_2, M_1,$ 和 $M_0$ 的最小积之和 (SOP) 布尔表达式。表达式应由中间和的位 $Z_3, Z_2, Z_1, Z_0$ 和中间进位 $K$ 表示。作为您的最终答案，请按顺序将 $M_3, M_2, M_1,$ 和 $M_0$ 的四个结果表达式作为一个组合答案提供。", "solution": "设第一个4位加法器产生中间4位二进制和 $Z = Z_{3}Z_{2}Z_{1}Z_{0}$ 与进位输出 $K$。从数值上看，原始二进制和为\n$$\nN = \\operatorname{val}(A) + \\operatorname{val}(B) = 16K + \\operatorname{val}(Z).\n$$\n为获得有效的BCD结果，仅当原始二进制和大于9或第一个加法器有溢出时，才必须进行+6（即加上 $0110$）的修正。因此，将修正条件 $C$ 定义为\n$$\nC=1 \\quad \\text{iff} \\quad K=1 \\ \\text{or} \\ \\operatorname{val}(Z) > 9.\n$$\n条件 $\\operatorname{val}(Z) > 9$ 在 $Z \\in \\{1010,1011,1100,1101,1110,1111\\}$ 时成立，这可由以下表达式紧凑地检测：\n$$\n\\operatorname{val}(Z) > 9 \\iff Z_{3}=1 \\ \\text{and} \\ (Z_{2}=1 \\ \\text{or} \\ Z_{1}=1),\n$$\n即，\n$$\n\\operatorname{val}(Z) > 9 \\iff Z_{3}(Z_{2}+Z_{1})=Z_{3}Z_{2}+Z_{3}Z_{1}.\n$$\n因此，修正条件的最小积之和表达式为\n$$\nC = K + Z_{3}Z_{2} + Z_{3}Z_{1}.\n$$\n当 $C=1$ 时，我们必须加上 $0110$；当 $C=0$ 时，我们加上 $0000$。因此，修正向量的各位为\n$$\nM_{3}=0,\\quad M_{2}=C,\\quad M_{1}=C,\\quad M_{0}=0,\n$$\n将其中的 $C$ 代入，得到最小SOP形式\n$$\nM_{3}=0,\\qquad M_{2}=K+Z_{3}Z_{2}+Z_{3}Z_{1},\\qquad M_{1}=K+Z_{3}Z_{2}+Z_{3}Z_{1},\\qquad M_{0}=0.\n$$\n这些表达式是最小的，因为 $Z_{3}(Z_{2}+Z_{1})$ 是检测 $\\operatorname{val}(Z)>9$ 的最小检测器，并且包含单文字项 $K$ 对于覆盖第一个加法器的所有溢出情况是充分且必要的。", "answer": "$$\\boxed{\\begin{pmatrix}0 & K+Z_{3}Z_{2}+Z_{3}Z_{1} & K+Z_{3}Z_{2}+Z_{3}Z_{1} & 0\\end{pmatrix}}$$", "id": "1911900"}]}