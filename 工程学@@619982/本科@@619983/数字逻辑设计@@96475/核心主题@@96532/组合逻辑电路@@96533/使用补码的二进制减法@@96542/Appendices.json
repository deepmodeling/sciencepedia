{"hands_on_practices": [{"introduction": "让我们从一个基础练习开始。这个练习将引导您完成一个标准的二进制补码减法，将十进制数转换为定长二进制格式，并以加法形式执行减法。掌握这一核心流程是理解处理器如何处理算术运算的第一步。[@problem_id:1915013]", "problem": "一个专用的数字控制器用于管理一个小规模化学反应器中的液位。该控制器的内存寄存器是一个5位有符号整数寄存器，用于跟踪与设定点相比的净体积变化。所有有符号数均使用2的补码系统表示。在操作开始时，该寄存器被清零。在操作期间，一个传感器首先报告了相当于十进制值9的体积增加。控制器记录下此值。随后，一个泵移除了相当于十进制值15的液体体积，控制器通过执行减法操作来更新寄存器。\n\n经过这一系列操作后，寄存器中存储的最终5位二进制值是多少？", "solution": "一个5位2的补码寄存器表示的有符号整数范围是\n$$[-2^{4},\\,2^{4}-1]=[-16,\\,15].$$\n寄存器的初始值为\n$$R_{0}=0.$$\n记录了十进制数9的增加后，\n$$R_{1}=9,$$\n其5位2的补码表示为\n$$9 \\to 01001.$$\n泵移除了15，因此控制器执行减法：\n$$R_{2}=R_{1}-15=9-15=-6.$$\n要将$-6$编码为5位2的补码，先取$+6$的二进制表示$00110$，然后取反加一：\n$$00110 \\xrightarrow{\\text{取反}} 11001 \\xrightarrow{+1} 11010.$$\n等效地，可以将减法作为与15的2的补码相加来执行：\n$$+15=01111 \\;\\Rightarrow\\; -15=10001,$$\n$$01001+10001=11010.$$\n作为模运算检验，$-6 \\equiv 2^{5}-6=26$，而$26$的二进制是$11010$。因此，最终存储的5位值为\n$$11010.$$", "answer": "$$\\boxed{11010}$$", "id": "1915013"}, {"introduction": "在定长位系统中进行算术运算是存在限制的。下一个问题将探讨算术溢出，这是一种当运算结果超出可表示范围时发生的严重错误。通过这个例子，您将学会如何识别溢出的迹象，这是调试和确保数字设计稳健性的关键技能。[@problem_id:1914994]", "problem": "一个假设的8位微处理器有一个简化的算术逻辑单元 (ALU)，它对6位有符号整数进行算术运算。这些数字以2的补码格式表示。ALU 的任务是执行减法运算 `R1 - R2`，其中寄存器 R1 中的十进制值为 16，寄存器 R2 中的十进制值为 -20。该运算通过计算 R1 与 R2 的2的补码之和来执行。\n\n您的任务是确定此运算的6位二进制结果（该结果将被存储在目标寄存器中），并判断是否发生算术溢出。如果算术运算的真实结果无法在6位2的补码表示范围内表示，则称发生溢出。\n\n以下哪个选项正确地说明了最终的6位二进制结果和溢出状态？\n\nA. 结果: $100100_2$, 溢出: 是\n\nB. 结果: $100100_2$, 溢出: 否\n\nC. 结果: $111100_2$, 溢出: 否\n\nD. 结果: $100011_2$, 溢出: 是\n\nE. 结果: $010000_2$, 溢出: 否", "solution": "在6位2的补码表示中，可表示的范围是从 $-2^{5}$ 到 $2^{5}-1$，即从 $-32$ 到 $31$。减法通过与2的补码相加来实现：$R1 - R2 = R1 + (\\text{two's complement of }R2)$。\n\n首先对操作数进行编码：\n- $R1=16$ 的6位形式为 $010000_{2}$。\n- 要编码 $R2=-20$，首先从 $+20=010100_{2}$ 开始，取反得到 $101011_{2}$，然后加 $1$ 得到 $101100_{2}$。因此 $R2=-20$ 是 $101100_{2}$。\n\n计算 R2 位模式的2的补码以得到 $-R2=+20$：\n$$\\text{two's complement}(101100_{2})=010100_{2}.$$\n\n现在执行加法：\n$$010000_{2}+010100_{2}=100100_{2}.$$\n\n结果解释与溢出判断：\n- 真实的算术结果是 $16-(-20)=36$，它超出了6位2的补码表示范围 $[-32,31]$，因此发生溢出。\n- 另外，两个正操作数（$010000_{2}$ 和 $010100_{2}$）相加产生了一个符号位为 $1$ 的结果（$100100_{2}$），这是加法运算中2的补码溢出的条件。\n\n因此，存储的6位结果是 $100100_{2}$，并且标记了溢出。这与选项A相符。", "answer": "$$\\boxed{A}$$", "id": "1914994"}, {"introduction": "从分析转向设计，这最后一个练习提出了一个实际的工程挑战。您需要确定正确执行某次计算所需的最小位数，而不是被直接告知位宽。这个问题将促使您运用关于数值范围的知识来做出基础设计决策，以防止像溢出这样的错误。[@problem_id:1914964]", "problem": "一位数字系统工程师正在设计一款具有固定位宽架构的专用处理器。该处理器必须执行的一项关键运算是有符号整数减法。工程师正在分析一个特定的测试用例：从十进制值 $A=50$ 中减去十进制值 $B=80$。该减法使用二进制补码方法实现，其中运算 $A-B$ 计算为 $A + (\\text{B的二进制补码})$。为确保运算正确，所选的位宽 $n$ 必须足够大，以便能够表示初始操作数（$A$ 和 $B$）以及减法运算的最终结果，并且在计算过程中不会发生数据丢失或溢出。对此特定运算，所需的最小整数值 $n$ 是多少？", "solution": "我们需要的位宽 $n$ 必须能让二进制补码减法 $A-B$ 中涉及的所有值都能被无溢出地表示。运算实现为 $A + (\\text{B的二进制补码})$，因此必须能用 $n$ 位二进制补码表示的值有 $A=50$，$B=80$，$B$ 的二进制补码（即 $-80$），以及结果 $A-B=50-80=-30$。\n\n在 $n$ 位二进制补码中，可表示的范围是\n$$\n-2^{n-1} \\le x \\le 2^{n-1}-1.\n$$\n因此，约束条件是：\n- 对于 $A=50$：$50 \\le 2^{n-1}-1$。\n- 对于 $B=80$：$80 \\le 2^{n-1}-1$。\n- 对于 $-80$：$-80 \\ge -2^{n-1}$，这等价于 $2^{n-1} \\ge 80$。\n- 对于结果 $-30$：$-30 \\ge -2^{n-1}$ 且 $-30 \\le 2^{n-1}-1$ （如果上述更强的界限成立，此条自动满足）。\n\n结合正数侧最严格的要求和负数侧的要求，得到\n$$\n2^{n-1} \\ge 81.\n$$\n为求满足此条件的最小整数 $n$，注意到 $2^{6}=64<81$ 且 $2^{7}=128 \\ge 81$，因此 $n-1$ 的最小值为 $7$，所以\n$$\nn=8.\n$$\n当 $n=8$ 时，表示范围为 $-128$ 到 $127$，该范围包含了 $50$、$80$、$-80$ 和 $-30$，确保了在计算 $50 + (-80)$ 时不会发生溢出。", "answer": "$$\\boxed{8}$$", "id": "1914964"}]}