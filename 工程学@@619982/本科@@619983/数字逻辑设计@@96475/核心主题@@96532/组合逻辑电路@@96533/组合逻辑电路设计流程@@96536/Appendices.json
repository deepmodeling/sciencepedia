{"hands_on_practices": [{"introduction": "本练习将引导你完成组合逻辑设计的基本流程。我们将从一个简单的安全控制器需求出发，学习如何将文字描述的功能规格转换为布尔表达式，并通过基本的布尔代数定律进行化简 [@problem_id:1922858]。这个实践是掌握从概念到电路实现这一关键技能的第一步。", "problem": "一个小型化学反应器的控制系统使用一个3位二进制输入来选择八种不同的操作模式之一，编号为0到7。输入由变量 $C_2, C_1, C_0$ 表示，其中 $C_2$ 是最高有效位（MSB），$C_0$ 是最低有效位（LSB）。出于安全原因，如果反应器被设置为数值严格大于5的操作模式，则必须启动紧急停机程序。\n\n您的任务是设计能触发此安全功能的组合逻辑电路。该电路产生一个单一输出信号 $S$，当启动停机程序时，该信号应为高电平（逻辑1），否则为低电平（逻辑0）。\n\n请确定输出 $S$ 关于输入 $C_2, C_1,$ 和 $C_0$ 的简化布尔表达式。您的最终答案应以积之和（SOP）形式表示，其中乘积项可以由单个变量组成。请使用撇号（例如 $X'$）来表示逻辑非运算。", "solution": "3位输入 $(C_{2},C_{1},C_{0})$ 将操作模式编码为一个二进制数，其中 $C_{2}$ 是最高有效位（MSB），$C_{0}$ 是最低有效位（LSB）。停机输出 $S$ 仅当模式严格大于5时才必须为高电平，即在模式6和7时。\n\n与这些模式对应的最小项是：\n- 模式6对应于二进制 $110$，即 $C_{2}=1$, $C_{1}=1$, $C_{0}=0$，得到乘积项 $C_{2}C_{1}C_{0}'$。\n- 模式7对应于二进制 $111$，即 $C_{2}=1$, $C_{1}=1$, $C_{0}=1$，得到乘积项 $C_{2}C_{1}C_{0}$。\n\n因此，积之和表达式为\n$$\nS = C_{2}C_{1}C_{0}' + C_{2}C_{1}C_{0}.\n$$\n提出公因式 $C_{2}C_{1}$：\n$$\nS = C_{2}C_{1}\\left(C_{0}' + C_{0}\\right).\n$$\n根据互补律 $X' + X = 1$，我们有 $C_{0}' + C_{0} = 1$，因此\n$$\nS = C_{2}C_{1}\\cdot 1 = C_{2}C_{1}.\n$$\n这已经是一个单一乘积项形式的积之和表达式。", "answer": "$$\\boxed{C_{2}C_{1}}$$", "id": "1922858"}, {"introduction": "在这个练习中，我们将挑战一个更复杂的真实世界问题：为容错存储系统设计一个数据完整性检查器。你将学习如何通过引入中间变量来结构化问题，并为一个四位输入设计一个“多数”或“阈值”功能 [@problem_id:1922851]。这个实践不仅能锻炼你的逻辑化简能力，还能让你一窥逻辑设计在数据通信和错误检测等领域的应用。", "problem": "在容错存储系统中，一个关键组件是数据完整性校验器。该校验器持续比较写入某一存储单元的4位数据字与从同一位置读回的数据字，以检测因辐射或其他故障可能导致的位翻转。\n\n该电路接收两个4位无符号二进制数作为输入：一个“写入”字 $A = A_3A_2A_1A_0$ 和一个“读出”字 $B = B_3B_2B_1B_0$。在这些表示中，$A_3$ 和 $B_3$ 是最高有效位 (MSB)。\n\n当且仅当两个输入字在三个或更多个位位置上不同时，该电路必须产生一个高电平输出信号 (逻辑1)，记为 $Y$。这种情况表示数据已严重损坏，需要发出系统警报。\n\n为此设计的目的，令 $D_i$ 表示 $A_i$ 和 $B_i$ 之间按位比较的结果，使得当 $A_i \\neq B_i$ 时 $D_i=1$，当 $A_i = B_i$ 时 $D_i=0$，其中 $i \\in \\{0, 1, 2, 3\\}$。您的任务是根据这些中间变量 $D_3, D_2, D_1, D_0$ 推导出输出 $Y$ 的最小“积之和”(SOP)布尔表达式。", "solution": "我们需要一个布尔函数 $Y$，当4位向量 $(D_3, D_2, D_1, D_0)$ 的汉明权重至少为 $3$ 时，该函数为真。等价地，当且仅当 $D_i$ 中恰好有三个为 $1$ 或全部四个都为 $1$ 时，$Y=1$。用布尔术语来说，这是一个阈值条件\n$$\nD_3 + D_2 + D_1 + D_0 \\geq 3,\n$$\n其中加法被解释为算术和，不等式被解释为对1的个数的逻辑阈值。\n\n$Y=1$ 的最小项精确地包括：\n- 四个恰好含有一个零的赋值，即 $D_3 D_2 D_1 \\overline{D_0}$、$D_3 D_2 \\overline{D_1} D_0$、$D_3 \\overline{D_2} D_1 D_0$、$\\overline{D_3} D_2 D_1 D_0$；\n- 全为一的赋值 $D_3 D_2 D_1 D_0$。\n\n因此，规范SOP形式为\n$$\nY = D_3 D_2 D_1 \\overline{D_0} + D_3 D_2 \\overline{D_1} D_0 + D_3 \\overline{D_2} D_1 D_0 + \\overline{D_3} D_2 D_1 D_0 + D_3 D_2 D_1 D_0.\n$$\n我们通过将仅在一个变量上不同的最小项对（在卡诺图中相邻）进行组合来化简，从而在每对中消去该互补变量。具体来说：\n- 将 $D_3 D_2 D_1 \\overline{D_0}$ 与 $D_3 D_2 D_1 D_0$ 组合得到蕴含项 $D_3 D_2 D_1$。\n- 将 $D_3 D_2 \\overline{D_1} D_0$ 与 $D_3 D_2 D_1 D_0$ 组合得到蕴含项 $D_3 D_2 D_0$。\n- 将 $D_3 \\overline{D_2} D_1 D_0$ 与 $D_3 D_2 D_1 D_0$ 组合得到蕴含项 $D_3 D_1 D_0$。\n- 将 $\\overline{D_3} D_2 D_1 D_0$ 与 $D_3 D_2 D_1 D_0$ 组合得到蕴含项 $D_2 D_1 D_0$。\n\n这四个蕴含项共同覆盖了所有五个 $Y=1$ 的最小项，从而得到化简后的SOP\n$$\nY = D_3 D_2 D_1 + D_3 D_2 D_0 + D_3 D_1 D_0 + D_2 D_1 D_0.\n$$\n为了证明其最小性，首先注意到不可能出现包含2个文字的蕴含项（例如 $D_i D_j$），因为它会覆盖恰好有两个1的赋值，而这些赋值不能使 $Y$ 为1。因此，每个蕴含项必须至少包含三个文字。存在四个恰好有三个1的不同最小项，而每个包含3个文字的蕴含项最多只能覆盖其中一个（以及全为一的那个最小项）。因此，如上所述，至少需要四个包含3个文字的蕴含项，这也是充分的。", "answer": "$$\\boxed{D_{3}D_{2}D_{1}+D_{3}D_{2}D_{0}+D_{3}D_{1}D_{0}+D_{2}D_{1}D_{0}}$$", "id": "1922851"}, {"introduction": "这个练习展示了设计过程中一个重要的现实考量：并非所有逻辑函数都能被显著化简。通过设计一个“整除3”检测电路，你将面对一个无法通过标准方法进行简化的布尔表达式，并需要进一步考虑其物理实现成本 [@problem_id:1922807]。这有助于培养从纯粹的逻辑抽象到具体硬件实现成本的全面设计思维。", "problem": "一个数字电路正在被设计为一个专用算术单元的一部分。其功能是判断一个由输入位 $B_3B_2B_1B_0$（其中 $B_3$ 是最高有效位）表示的4位无符号二进制数是否能被3整除。如果该数能被3整除，电路的单一输出 $Y$ 应为逻辑'1'；否则为逻辑'0'。\n\n该设计必须实现为一个采用最简“积之和”（SOP）形式的两级逻辑电路。“积之和”（SOP）表达式是一个或多个逻辑与项（AND项）的逻辑或（OR）。最简形式需通过标准的卡诺图化简来获得。\n\n假设与项的实现仅限于使用2输入与门，那么实现该最简SOP表达式中的所有乘积项总共需要多少个2输入与门？", "solution": "设4位无符号输入为 $B_{3}B_{2}B_{1}B_{0}$，其中 $B_{3}$ 是最高有效位。当输入数值能被3整除时，输出 $Y$ 为1，即对应于十进制值 $\\{0,3,6,9,12,15\\}$。这些值对应于以下最小项：\n$$\nm_{0}=0000,\\quad m_{3}=0011,\\quad m_{6}=0110,\\quad m_{9}=1001,\\quad m_{12}=1100,\\quad m_{15}=1111.\n$$\n将这六个1单元（1-cell）填入一个4变量卡诺图，其行 $(B_{3}B_{2})\\in\\{00,01,11,10\\}$ 和列 $(B_{1}B_{0})\\in\\{00,01,11,10\\}$ 均采用格雷码排序，可以看出每个1都是孤立的：对于每一个列出的最小项，其所有四个边缘相邻（包括回环相邻，即仅有一个变量不同）的单元格均为0。因此，无法进行大小为2或更大的分组。故而，最简SOP表达式就是这六个规范最小项的和：\n$$\nY=\\overline{B_{3}}\\;\\overline{B_{2}}\\;\\overline{B_{1}}\\;\\overline{B_{0}}\n+\\overline{B_{3}}\\;\\overline{B_{2}}\\;B_{1}\\;B_{0}\n+\\overline{B_{3}}\\;B_{2}\\;B_{1}\\;\\overline{B_{0}}\n+B_{3}\\;\\overline{B_{2}}\\;\\overline{B_{1}}\\;B_{0}\n+B_{3}\\;B_{2}\\;\\overline{B_{1}}\\;\\overline{B_{0}}\n+B_{3}\\;B_{2}\\;B_{1}\\;B_{0}.\n$$\n若要仅使用2输入与门来实现每个乘积项，一个由 $k$ 个文字构成的乘积项需要 $k-1$ 个此类门（通过级联成二叉树结构）。在本例中，每个乘积项有 $k=4$ 个文字，因此每项需要 $4-1=3$ 个2输入与门。表达式中共有 $6$ 个乘积项，因此实现所有乘积项所需的2输入与门总数为\n$$\n6 \\times 3 = 18.\n$$\n用于生成反变量的非门以及最终的或门不计算在内，因为问题只要求计算实现乘积项所需的2输入与门数量。", "answer": "$$\\boxed{18}$$", "id": "1922807"}]}