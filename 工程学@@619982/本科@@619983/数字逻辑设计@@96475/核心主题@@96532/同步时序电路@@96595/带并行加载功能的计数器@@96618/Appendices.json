{"hands_on_practices": [{"introduction": "要真正掌握带并行加载功能的计数器，最好的起点是亲手追踪其状态变化。本练习旨在通过逐个时钟周期地分析一个2位计数器的行为，帮助你建立对基本操作的直观理解。你将看到 `Load` 控制信号如何决定计数器是在下一个时钟沿加载一个新值，还是递增其当前值。[@problem_id:1925182]", "problem": "一个数字系统包含一个具有并行加载能力的2位同步二进制加法计数器。该计数器的状态由输出 $Q_1Q_0$ 表示。该计数器有两个数据输入 $D_1$ 和 $D_0$，以及一个高电平有效同步加载使能信号 `Load`。计数器的行为由系统时钟信号 `CLK` 上升沿到来之前的 `Load` 信号决定：\n\n- 如果 `Load` 为高电平（逻辑1），在 `CLK` 的下一个上升沿，计数器会从数据输入加载值，使得新状态变为 $Q_1Q_0 = D_1D_0$。\n- 如果 `Load` 为低电平（逻辑0），在 `CLK` 的下一个上升沿，计数器会将其当前值加一。计数序列为 00, 01, 10, 11，然后循环回到 00。\n\n计数器初始状态为 $Q_1Q_0 = 00$。系统经历一个包含六个时钟上升沿的序列。`Load` 信号和数据输入 $D_1D_0$ 的值在每个对应的时钟沿之前保持稳定，如下所示：\n\n- 时钟沿1之前：`Load` = 1, $D_1D_0$ = 10\n- 时钟沿2之前：`Load` = 0\n- 时钟沿3之前：`Load` = 0\n- 时钟沿4之前：`Load` = 1, $D_1D_0$ = 01\n- 时钟沿5之前：`Load` = 0\n- 时钟沿6之前：`Load` = 0\n\n在第6个时钟上升沿之后，计数器的二进制状态 $Q_1Q_0$ 是什么？\n\nA. 00\n\nB. 01\n\nC. 10\n\nD. 11", "solution": "定义每个时钟上升沿的同步更新规则：\n$$\n(Q_1Q_0)^{+} =\n\\begin{cases}\nD_1D_0, & \\text{如果 Load}=1,\\\\\n(Q_1Q_0)+1 \\pmod{4}, & \\text{如果 Load}=0,\n\\end{cases}\n$$\n其中 $(Q_1Q_0)$ 被解释为一个2位二进制数，结果写为一个2位二进制状态。\n\n初始状态为 $Q_1Q_0=00$。\n\n时钟沿 1: Load $=1$, $D_1D_0=10$。因此，\n$$\n(Q_1Q_0)^{+} = D_1D_0 = 10.\n$$\n新状态: $10$。\n\n时钟沿 2: Load $=0$。因此，\n$$\n10 \\to 11.\n$$\n新状态: $11$。\n\n时钟沿 3: Load $=0$。因此，\n$$\n11 \\to 00 \\quad (\\text{回卷})。\n$$\n新状态: $00$。\n\n时钟沿 4: Load $=1$, $D_1D_0=01$。因此，\n$$\n(Q_1Q_0)^{+} = D_1D_0 = 01.\n$$\n新状态: $01$。\n\n时钟沿 5: Load $=0$。因此，\n$$\n01 \\to 10.\n$$\n新状态: $10$。\n\n时钟沿 6: Load $=0$。因此，\n$$\n10 \\to 11.\n$$\n第六个时钟沿之后的新状态：$11$，对应于选项 D。", "answer": "$$\\boxed{D}$$", "id": "1925182"}, {"introduction": "在理解了计数器的基本功能之后，下一步是学习如何进行故障排除，这是数字系统设计中的一项关键技能。本练习模拟了一个现实场景：一个4位计数器出现了故障，其加载功能在特定输入下异常，但计数功能正常。通过分析这些现象，你需要运用逻辑推理来准确定位问题根源，从而加深对计数器内部电路实现的理解。[@problem_id:1925179]", "problem": "一个定制的4位同步二进制加法计数器表现出故障行为。该计数器使用D型触发器（D-FFs）作为状态寄存器 $Q_3, Q_2, Q_1, Q_0$。它包含一个并行加载功能，由一个高电平有效信号 `LOAD` 控制。当 `LOAD` 为高电平时，来自并行输入 $D_3, D_2, D_1, D_0$ 的数据应在下一个有效时钟沿加载到触发器中。当 `LOAD` 为低电平时，计数器应将其值加一。\n\n每个D型触发器（表示为 $FF_i$）的输入的内部逻辑是使用一个标准的2选1多路复用器结构实现的，由布尔方程描述：\n$$FF_i = (\\text{CountInput}_i \\cdot \\overline{\\text{LOAD}}) + (D_i \\cdot \\text{LOAD})$$\n其中 $\\text{CountInput}_i$ 表示计数操作期间下一状态值的逻辑。项 $(D_i \\cdot \\text{LOAD})$ 是通过为每个比特 $i$ 使用一个专用的2输入与门来实现的。\n\n一位技术人员进行了一系列诊断并记录了以下观察结果：\n1.  当 `LOAD` 信号保持低电平时，计数器功能完美，能正确地从 $0000_2$ 到 $1111_2$ 循环遍历所有16个状态。\n2.  当 `LOAD` 信号置位（设为高电平）且并行数据输入设为 $D_3D_2D_1D_0 = 1010_2$ 时，在下一个时钟沿加载到计数器中的值被观察到是 $Q_3Q_2Q_1Q_0 = 1000_2$。\n3.  作为后续测试，当 `LOAD` 信号置位且并行数据输入设为 $D_3D_2D_1D_0 = 0101_2$ 时，加载到计数器中的值被观察到是 $Q_3Q_2Q_1Q_0 = 0101_2$。\n\n假设整个电路中只有一个门级故障（即，某个特定门的输出永久固定为0或固定为1），以下哪个选项是所观察到行为的最可能原因？\n\nA. 实现项 $(D_1 \\cdot \\text{LOAD})$ 的与门输出固定为0。\n\nB. 实现项 $(D_1 \\cdot \\text{LOAD})$ 的与门输出固定为1。\n\nC. 到 $Q_1$ 触发器逻辑电路的 `LOAD` 输入固定为0。\n\nD. 组合 $FF_1$ 输入的两个项的最终或门输出固定为0。\n\nE. 组合 $FF_1$ 输入的两个项的最终或门输出固定为1。", "solution": "令控制信号表示为 $L=\\mathrm{LOAD}$ 并定义 $C_{i}=\\mathrm{CountInput}_{i}$。每个触发器的预期输入是\n$$FF_{i}=(C_{i}\\cdot \\overline{L})+(D_{i}\\cdot L).$$\n观察1指出，当 $L=0$ 时，计数器能完美地遍历所有16个状态。代入 $L=0$ 得到\n$$FF_{i}=(C_{i}\\cdot 1)+(D_{i}\\cdot 0)=C_{i}.$$\n因此，任何在 $L=0$ 时会强制 $FF_{1}$ 为常数0或1的故障都是不可能的，因为那样会破坏计数功能。立即可以得出：\n- 如果与门 $(D_{1}\\cdot L)$ 的输出固定为1（选项B），则对于所有 $L$，都有 $FF_{1}=(C_{1}\\cdot \\overline{L})+1=1$，这与观察1矛盾。\n- 如果 $FF_{1}$ 的最终或门输出固定为0（选项D），则 $FF_{1}$ 总是为0；计数会失败。矛盾。\n- 如果 $FF_{1}$ 的最终或门输出固定为1（选项E），则 $FF_{1}$ 总是为1；计数会失败。矛盾。\n\n现在考虑 $L=1$ 的加载情况。理想情况下，\n$$FF_{1}=(C_{1}\\cdot 0)+(D_{1}\\cdot 1)=D_{1}.$$\n观察2设置 $D_{3}D_{2}D_{1}D_{0}=1010$，加载结果为 $1000$。只有比特1出错：$D_{1}=1$ 但是 $Q_{1}=0$。观察3设置 $D_{3}D_{2}D_{1}D_{0}=0101$，加载结果为 $0101$，所以 $D_{1}=0$ 正确地得到 $Q_{1}=0$。这两个观察结果共同表明，当 $L=1$ 时，输入到 $FF_{1}$ 的函数求值结果为0，无论 $D_{1}$ 的值是多少。\n\n如果实现 $(D_{1}\\cdot L)$ 的与门输出固定为0（选项A），那么\n$$FF_{1}=(C_{1}\\cdot \\overline{L})+0.$$\n因此：\n- 当 $L=0$ 时，$FF_{1}=C_{1}$，所以计数功能正常，与观察1匹配。\n- 当 $L=1$ 时，$FF_{1}=0$，与 $D_{1}$ 无关。因此，请求加载 $D_{1}=1$ 会得到 $Q_{1}=0$ （观察2），请求加载 $D_{1}=0$ 会得到 $Q_{1}=0$ （观察3）。其他比特加载正确，因为它们的门没有故障，这与记录的模式相匹配。\n\n考虑选项C（到 $Q_{1}$ 逻辑的 $L$ 输入固定为0）。在这种情况下，局部逻辑总是看到 $L=0$ 并产生\n$$FF_{1}=(C_{1}\\cdot 1)+(D_{1}\\cdot 0)=C_{1}$$\n即使当 $L=1$ 时也是如此。这将使得在加载期间，$Q_{1}$ 依赖于 $C_{1}$（计数器的下一状态函数）而不是 $D_{1}$，因此观察2和观察3的结果将取决于先前的状态，不一定与观察到的特定模式相匹配。相比之下，$(D_{1}\\cdot L)$ 处的固定为0故障会确定性地产生所看到的确切结果，且与先前的状态无关。\n\n因此，与所有观察结果完全一致的单一固定型故障是实现 $(D_{1}\\cdot \\mathrm{LOAD})$ 的与门输出固定为0。", "answer": "$$\\boxed{A}$$", "id": "1925179"}, {"introduction": "本练习将挑战你从分析转向设计，这是数字逻辑实践的精髓所在。你不再是分析一个已有的电路，而是需要根据一组功能规格，从头开始为一个多功能计数器推导其核心逻辑。这项实践将锻炼你将抽象的功能需求（如加载、保持、向上/向下计数）转化为精确的布尔表达式的能力，这也是设计复杂可编程数字系统的基础。[@problem_id:1925209]", "problem": "您的任务是为一款定制的4位同步计数器设计控制逻辑。计数器的状态由四个比特 $Q_3, Q_2, Q_1, Q_0$ 表示，其中 $Q_0$ 是最低有效位。该计数器由D型触发器构成，这意味着在下一个时钟周期，每个比特 $Q_i$ 的值由相应输入端 $D_i$ 的逻辑电平决定。\n\n该计数器必须支持由三个高电平有效控制信号决定的几种操作：`L` (加载)、`E` (使能) 和 `U` (增/减计数方向)。这些操作的优先级如下：\n\n1.  **并行加载 (最高优先级):** 如果 `L` 为高电平 (1)，计数器将忽略所有其他控制信号。在下一个有效时钟沿，计数器的状态 $Q_3Q_2Q_1Q_0$ 将被加载为来自四个并行数据输入 $P_3, P_2, P_1, P_0$ 的值。\n2.  **保持状态:** 如果 `L` 为低电平 (0) 且 `E` 为低电平 (0)，计数器将保持其当前状态。\n3.  **计数 (最低优先级):** 如果 `L` 为低电平 (0) 且 `E` 为高电平 (1)，计数器将执行计数操作。计数方向由 `U` 信号决定：\n    *   如果 `U=1`，计数器将其值递增 (向上计数)。例如，状态 `0101` 变为 `0110`。\n    *   如果 `U=0`，计数器将其值递减 (向下计数)。例如，状态 `0101` 变为 `0100`。\n    计数操作包含回卷行为 (例如，从 `1111` 向上计数时，下一个状态是 `0000`；从 `0000` 向下计数时，下一个状态是 `1111`)。\n\n您的任务是为对应状态比特 $Q_2$ 的触发器的输入 $D_2$ 推导出完整的布尔逻辑表达式。请以“积之和”形式给出您的答案。该表达式应使用状态比特 $Q_2, Q_1, Q_0$、并行输入 $P_2$ 以及控制信号 $L, E, U$ 来表示。", "solution": "令 $D_{2}$ 表示产生 $Q_{2}$ 的触发器的下一状态输入。具有优先级的控制行为如下：\n1) 如果 $L=1$，并行加载将覆盖所有其他操作，因此 $D_{2}=P_{2}$。\n2) 如果 $L=0$ 且 $E=0$，计数器保持其状态，因此 $D_{2}=Q_{2}$。\n3) 如果 $L=0$ 且 $E=1$，计数器进行计数。对于向上计数，当来自较低位的进位存在时，即当 $Q_{1}Q_{0}=1$ 时，比特 $Q_{2}$ 发生翻转。因此，对于向上计数，\n$$\nD_{2}=\\;Q_{2}\\oplus(Q_{1}Q_{0}) \\;=\\; Q_{2}\\overline{Q_{1}Q_{0}}+\\overline{Q_{2}}\\,Q_{1}Q_{0}\n\\;=\\; Q_{2}\\overline{Q_{1}}+Q_{2}\\overline{Q_{0}}+\\overline{Q_{2}}\\,Q_{1}Q_{0}.\n$$\n对于向下计数，当来自较低位的借位存在时，即当 $\\overline{Q_{1}}\\overline{Q_{0}}=1$ 时，比特 $Q_{2}$ 发生翻转。因此，对于向下计数，\n$$\nD_{2}=\\;Q_{2}\\oplus(\\overline{Q_{1}}\\overline{Q_{0}}) \\;=\\; Q_{2}\\,\\overline{\\overline{Q_{1}}\\overline{Q_{0}}}+\\overline{Q_{2}}\\,\\overline{Q_{1}}\\overline{Q_{0}}\n\\;=\\; Q_{2}(Q_{1}+Q_{0})+\\overline{Q_{2}}\\,\\overline{Q_{1}}\\overline{Q_{0}}\n\\;=\\; Q_{2}Q_{1}+Q_{2}Q_{0}+\\overline{Q_{2}}\\,\\overline{Q_{1}}\\overline{Q_{0}}.\n$$\n当 $L=0$ 且 $E=1$ 时，使用 $U$ 来选择方向，并结合 $L$ 的优先级，完整的逻辑是\n$$\nD_{2}=L\\,P_{2}+\\overline{L}\\,\\overline{E}\\,Q_{2}+\\overline{L}\\,E\\Big[U\\big(Q_{2}\\overline{Q_{1}}+Q_{2}\\overline{Q_{0}}+\\overline{Q_{2}}\\,Q_{1}Q_{0}\\big)+\\overline{U}\\big(Q_{2}Q_{1}+Q_{2}Q_{0}+\\overline{Q_{2}}\\,\\overline{Q_{1}}\\overline{Q_{0}}\\big)\\Big].\n$$\n展开为显式的积之和形式可得\n$$\nD_{2}\n= L P_{2}\n+ \\overline{L}\\,\\overline{E}\\,Q_{2}\n+ \\overline{L}\\,E\\,U\\,Q_{2}\\,\\overline{Q_{1}}\n+ \\overline{L}\\,E\\,U\\,Q_{2}\\,\\overline{Q_{0}}\n+ \\overline{L}\\,E\\,U\\,\\overline{Q_{2}}\\,Q_{1}\\,Q_{0}\n+ \\overline{L}\\,E\\,\\overline{U}\\,Q_{2}\\,Q_{1}\n+ \\overline{L}\\,E\\,\\overline{U}\\,Q_{2}\\,Q_{0}\n+ \\overline{L}\\,E\\,\\overline{U}\\,\\overline{Q_{2}}\\,\\overline{Q_{1}}\\,\\overline{Q_{0}}.\n$$\n这就是用 $Q_{2},Q_{1},Q_{0},P_{2},L,E,U$ 表示的、具有正确优先级行为的所需积之和表达式。", "answer": "$$\\boxed{L P_{2}+\\overline{L}\\,\\overline{E}\\,Q_{2}+\\overline{L}\\,E\\,U\\,Q_{2}\\,\\overline{Q_{1}}+\\overline{L}\\,E\\,U\\,Q_{2}\\,\\overline{Q_{0}}+\\overline{L}\\,E\\,U\\,\\overline{Q_{2}}\\,Q_{1}\\,Q_{0}+\\overline{L}\\,E\\,\\overline{U}\\,Q_{2}\\,Q_{1}+\\overline{L}\\,E\\,\\overline{U}\\,Q_{2}\\,Q_{0}+\\overline{L}\\,E\\,\\overline{U}\\,\\overline{Q_{2}}\\,\\overline{Q_{1}}\\,\\overline{Q_{0}}}$$", "id": "1925209"}]}