{"hands_on_practices": [{"introduction": "将算法状态机（ASM）图表用硬件实现的第一步是推导状态寄存器的输入逻辑。本练习 [@problem_id:1957163] 为这一过程提供了基础实践。通过一个简单的双状态系统和 $T$ 型触发器，你将学习如何将状态转换规则直接转化为触发器的激励方程，这是任何时序电路设计中至关重要的一步。", "problem": "一个简单的时序电路被设计用来控制一个自动阀门。该控制器的行为由一个双状态算法状态机 (ASM) 图来描述。这两个状态是 `CLOSED` 和 `OPEN`。该机器的状态存储在一个 T-触发器中，其中触发器的输出（用 `Q` 表示）代表状态。状态分配如下：`CLOSED` 对应于 `Q=0`，`OPEN` 对应于 `Q=1`。\n\n该控制器有一个二进制输入 `S` (代表 'Start') 和一个二进制输出 `V` (代表 'Valve')。其时序行为定义如下：\n\n1.  当处于 `CLOSED` 状态 (`Q=0`) 时，控制器监视输入 `S`。如果 `S=0`，它保持在 `CLOSED` 状态。如果 `S=1`，它在下一个时钟沿转换到 `OPEN` 状态。\n2.  当处于 `OPEN` 状态 (`Q=1`) 时，控制器再次监视输入 `S`。如果 `S=1`，它保持在 `OPEN` 状态。如果 `S=0`，它在下一个时钟沿转换回 `CLOSED` 状态。\n\n输出 `V` 是一个摩尔 (Moore) 型输出，当且仅当控制器处于 `OPEN` 状态时，该输出为高电平 (`V=1`)。否则，`V=0`。\n\n您的任务是确定 T-触发器输入 (`T`) 和系统输出 (`V`) 的正确逻辑表达式。这些表达式应该用状态变量 `Q` 和输入 `S` 来表示。\n\n选择正确提供 `T` 的激励方程和 `V` 的输出方程的选项。在下面的选项中，$\\bar{A}$ 表示 NOT A (非 A)，$A+B$ 表示 A OR B (或)，并列 $AB$ 表示 A AND B (与)，$A \\oplus B$ 表示 A XOR B (异或)。\n\nA. $T = S, V = Q$\n\nB. $T = \\bar{Q}S, V = Q$\n\nC. $T = Q + S, V = S$\n\nD. $T = Q \\oplus S, V = Q$\n\nE. $T = QS, V = Q \\oplus S$", "solution": "根据 ASM 描述，次态仅取决于输入 $S$：\n- 如果 $S=0$，次态是 $\\text{CLOSED}$，即 $Q^{+}=0$。\n- 如果 $S=1$，次态是 $\\text{OPEN}$，即 $Q^{+}=1$。\n这些条件无论现态 $Q$ 如何都成立，因此次态函数为\n$$Q^{+}=S.$$\n\n对于 T-触发器，其特征方程为\n$$Q^{+}=T \\oplus Q.$$\n求解 $T$ 可得到激励方程：\n$$T=Q \\oplus Q^{+}.$$\n代入 $Q^{+}=S$ 得：\n$$T=Q \\oplus S.$$\n\n输出 $V$ 是一个摩尔型输出，仅在 `OPEN` 状态（对应于 $Q=1$）下有效，因此\n$$V=Q.$$\n\n与给定选项比较，这对应于选项 D：$T=Q \\oplus S$，$V=Q$。", "answer": "$$\\boxed{D}$$", "id": "1957163"}, {"introduction": "本练习 [@problem_id:1957159] 将带你从一个简单的例子进阶到一个完整的实用设计任务：创建一个多状态序列检测器。你将遵循完整的设计流程，从解读ASM规范和状态分配，到为多位状态寄存器推导化简后的逻辑表达式。这个练习旨在锻炼你系统化地实现复杂时序逻辑的能力，这是数字设计师的一项核心技能。", "problem": "一位工程师正在为一个数据链路设计数字控制器，该控制器必须与输入的串行比特流同步。控制器需要实现一个特定的算法状态机 (ASM)，作为一个摩尔机 (Moore machine)，来检测 4 位序列 `1101`。该系统有一个单一的串行数据输入 `X`，并由一个主时钟 `CLK` 驱动。它有一个单一输出 `Z`，在成功检测到完整的 `1101` 序列后，该输出应在恰好一个时钟周期内置为高电平。该状态机必须正确处理重叠模式。例如，如果输入序列是 `1101101`，输出 `Z` 应该在接收到第一个 `1101` 的 `1` 之后的时钟周期内为高电平，然后在接收到后续 `1101` 的第二个 `1` 之后的时钟周期内再次为高电平。\n\n该状态机由五个状态描述：\n- **IDLE (S0):** 初始/复位状态。它等待序列的第一个 `1`。\n- **GOT1 (S1):** 状态机已接收到一个 `1`。\n- **GOT11 (S2):** 状态机已接收到序列 `11`。\n- **GOT110 (S3):** 状态机已接收到序列 `110`。\n- **MATCH (S4):** 状态机刚刚接收到完整的 `1101` 序列。输出 `Z` 仅在此状态下为高电平。\n\n从 **IDLE** 状态开始，如果输入 `X` 为 `0`，状态机保持在 **IDLE** 状态。如果 `X` 为 `1`，它转换到 **GOT1** 状态。\n从 **GOT1** 状态开始，输入为 `1` 使状态机转换到 **GOT11**，而输入为 `0` 则将其复位到 **IDLE**。\n从 **GOT11** 状态开始，输入为 `0` 使其移动到 **GOT110**。为了处理像 `11101...` 这样的重叠情况，输入为 `1` 会使其保持在 **GOT11** 状态，因为最后两个 `1` 可以构成一个新的潜在匹配的开始。\n从 **GOT110** 状态开始，输入为 `1` 完成模式并使状态机转换到 **MATCH** 状态。输入为 `0` 会破坏模式并将其复位到 **IDLE**。\n从 **MATCH** 状态开始，开始搜索新模式。如果下一个输入 `X` 是 `1`，它可能是新的 `1101` 序列的开始，所以状态机转换到 **GOT1** 状态。如果 `X` 是 `0`，它转换回 **IDLE**。\n\n状态机的状态由三个 D 型触发器表示，持有状态变量 $Q_2$、$Q_1$ 和 $Q_0$。状态编码如下：S0 是 $000$，S1 是 $001$，S2 是 $010$，S3 是 $011$，S4 是 $100$。这些触发器的输入表示为 $D_2$、$D_1$ 和 $D_0$。未使用的状态编码（$101$、$110$、$111$）可被视为无关项。\n\n该状态机将使用一个通用的可编程阵列逻辑 (PAL) 器件来实现。该器件有足够的寄存器输出来表示状态变量，并至少有一个组合逻辑输出来表示 `Z`。每个触发器输入（$D_i$）和输出 `Z` 的逻辑以积之和形式实现。\n\n下列哪一组最小化的积之和逻辑方程正确地描述了此状态机的实现？（注：乘积表示与 (AND)，`+` 表示或 (OR)，$\\bar{A}$ 表示非 A (NOT A)。）\n\nA.\n$D_2 = Q_1 Q_0 X$\n$D_1 = \\bar{Q_2} Q_1 \\bar{Q_0} + \\bar{Q_2} \\bar{Q_1} Q_0 X$\n$D_0 = \\bar{Q_1} \\bar{Q_0} X + \\bar{Q_2} Q_1 \\bar{Q_0} \\bar{X}$\n$Z = Q_2 \\bar{Q_1} \\bar{Q_0}$\n\nB.\n$D_2 = Q_1 Q_0 X$\n$D_1 = \\bar{Q_2} Q_1 \\bar{Q_0} \\bar{X} + \\bar{Q_2} Q_1 \\bar{Q_0} X + \\bar{Q_2} \\bar{Q_1} Q_0 X$\n$D_0 = \\bar{Q_1} \\bar{Q_0} X + \\bar{Q_2} Q_1 \\bar{Q_0} \\bar{X}$\n$Z = Q_2 \\bar{Q_1} \\bar{Q_0}$\n\nC.\n$D_2 = Q_1 Q_0 X$\n$D_1 = \\bar{Q_2} Q_1 \\bar{Q_0} + \\bar{Q_2} \\bar{Q_1} Q_0 X$\n$D_0 = \\bar{Q_1} \\bar{Q_0} X + \\bar{Q_2} Q_1 \\bar{Q_0} \\bar{X}$\n$Z = \\bar{Q_2} Q_1 Q_0 X$\n\nD.\n$D_2 = Q_1 Q_0 X$\n$D_1 = \\bar{Q_2} \\bar{Q_1} Q_0 X + \\bar{Q_2} Q_1 \\bar{Q_0} \\bar{X}$\n$D_0 = \\bar{Q_1} \\bar{Q_0} X + \\bar{Q_2} Q_1 \\bar{Q_0} \\bar{X}$\n$Z = Q_2 \\bar{Q_1} \\bar{Q_0}$", "solution": "根据规范，使用编码状态 $S0=000$、$S1=001$、$S2=010$、$S3=011$、$S4=100$，输入 $X$ 以及分别等于 $D_{2},D_{1},D_{0}$ 的次态比特 $Q_{2}^{+},Q_{1}^{+},Q_{0}^{+}$ 来构建摩尔机 (Moore machine) 状态转换表。\n\n根据描述：\n- 从 $S0$ $(000)$: $X=0 \\rightarrow S0$ $(000)$, $X=1 \\rightarrow S1$ $(001)$。\n- 从 $S1$ $(001)$: $X=0 \\rightarrow S0$ $(000)$, $X=1 \\rightarrow S2$ $(010)$。\n- 从 $S2$ $(010)$: $X=0 \\rightarrow S3$ $(011)$, $X=1 \\rightarrow S2$ $(010)$。\n- 从 $S3$ $(011)$: $X=0 \\rightarrow S0$ $(000)$, $X=1 \\rightarrow S4$ $(100)$。\n- 从 $S4$ $(100)$: $X=0 \\rightarrow S0$ $(000)$, $X=1 \\rightarrow S1$ $(001)$。\n\n将每个次态比特推导为关于现态和输入的积之和。\n\n1) 对于 $D_{2}=Q_{2}^{+}$：仅当次态为 $S4$ $(100)$ 时，该值为 $1$。这只在当前状态为 $S3$ $(011)$ 且输入 $X=1$ 时发生。使用编码变量，这会产生乘积项 $\\bar{Q}_{2}Q_{1}Q_{0}X$。由于在有效状态中，条件 $Q_{1}Q_{0}=1$ 蕴含了状态 $S3$，因此最小化蕴含项是\n$$\nD_{2}=Q_{1}Q_{0}X.\n$$\n\n2) 对于 $D_{1}=Q_{1}^{+}$：当次态为 $S2$ $(010)$ 或 $S3$ $(011)$ 时，该值为 $1$。\n- 从 $S1$ $(001)$ 且 $X=1$ 时转换到 $S2$，以及从 $S2$ $(010)$ 且 $X=1$ 时转换到 $S2$。\n- 从 $S2$ $(010)$ 且 $X=0$ 时转换到 $S3$。\n因此，对于现态 $S2$ $(010)$，无论 $X=0$ 还是 $X=1$，$D_{1}$ 都为 $1$，这给出了与 $X$ 无关的项 $\\bar{Q}_{2}Q_{1}\\bar{Q}_{0}$。对于现态 $S1$ $(001)$ 且 $X=1$ 的情况，我们加上 $\\bar{Q}_{2}\\bar{Q}_{1}Q_{0}X$。因此，最小化表达式为\n$$\nD_{1}=\\bar{Q}_{2}Q_{1}\\bar{Q}_{0}+\\bar{Q}_{2}\\bar{Q}_{1}Q_{0}X.\n$$\n\n3) 对于 $D_{0}=Q_{0}^{+}$：当次态为 $S1$ $(001)$ 或 $S3$ $(011)$ 时，该值为 $1$。\n- 从 $S0$ $(000)$ 且 $X=1$ 时转换到 $S1$，以及从 $S4$ $(100)$ 且 $X=1$ 时转换到 $S1$。这两种情况都可由 $\\bar{Q}_{1}\\bar{Q}_{0}X$ 覆盖（注意这个单一蕴含项同时覆盖了 $S0$ 和 $S4$）。\n- 从 $S2$ $(010)$ 且 $X=0$ 时转换到 $S3$，这给出 $\\bar{Q}_{2}Q_{1}\\bar{Q}_{0}\\bar{X}$。\n因此，\n$$\nD_{0}=\\bar{Q}_{1}\\bar{Q}_{0}X+\\bar{Q}_{2}Q_{1}\\bar{Q}_{0}\\bar{X}.\n$$\n\n4) 对于摩尔机输出 $Z$：它必须仅在状态 $S4$ $(100)$ 时为高电平，这得出\n$$\nZ=Q_{2}\\bar{Q}_{1}\\bar{Q}_{0}.\n$$\n\n与选项进行比较：\n- 所有选项都有 $D_{2}=Q_{1}Q_{0}X$ 和 $D_{0}=\\bar{Q}_{1}\\bar{Q}_{0}X+\\bar{Q}_{2}Q_{1}\\bar{Q}_{0}\\bar{X}$，与推导相符。\n- 对于 $D_{1}$，最小化的形式是 $D_{1}=\\bar{Q}_{2}Q_{1}\\bar{Q}_{0}+\\bar{Q}_{2}\\bar{Q}_{1}Q_{0}X$，这与选项 A 和 C 匹配；选项 B 冗余地将第一项拆分为两个依赖于 $X$ 的乘积项（未最小化），而选项 D 是错误的，因为它省略了对状态 $S2$ 的与 $X$ 无关的覆盖。\n- 对于 $Z$，正确的摩尔机输出是 $Z=Q_{2}\\bar{Q}_{1}\\bar{Q}_{0}$；选项 C 错误地使 $Z$ 依赖于 $X$。\n\n因此，正确的最小化积之和实现是选项 A。", "answer": "$$\\boxed{A}$$", "id": "1957159"}, {"introduction": "我们最后的实践将探讨有限状态机（FSM）在硬件验证这一关键领域中的高级系统级应用 [@problem_id:1957176]。在此，你不仅要实现一个给定的行为，更要设计一个状态机，其目的是检查另外两个电路的功能等效性。这个问题将引导你接触“黄金模型”和“等效性检查”等专业概念，并挑战你将复杂的逻辑条件综合成一个稳健的验证器，从而彰显FSM在解决尖端工程难题方面的强大功能与灵活性。", "problem": "在数字电路的形式化验证领域，确保一个综合后的硬件实现，即被测设计 (DUT)，与一个可信的“黄金”参考模型在功能上等效是至关重要的。您的任务是设计这样一个验证系统中的一个关键组件：一个同步硬件等效性检查器。\n\n该检查器本身是一个有限状态机 (FSM)，我们称之为 `FSM_C`。它通过在每个时钟周期观察黄金模型 `FSM_G` 和被测设计 `FSM_D` 的状态向量来工作。假设 `FSM_G` 和 `FSM_D` 都与同一个时钟 `CLK` 同步，并由同一个高电平有效的同步 `RESET` 信号复位。\n\n`FSM_G` 的状态由一个 `W_G`-位的向量 `G` 表示，`FSM_D` 的状态由一个 `W_D`-位的向量 `D` 表示。请注意，状态编码甚至状态位数都可能不同（即 `W_G` 不一定等于 `W_D`）。\n\n为协调不同的状态编码，检查器可以访问一个预加载的只读存储器块，称为等效性映射存储器 (EMM)。在本问题中，EMM 被视为一个组合逻辑块。当来自黄金模型的 `W_G`-位状态向量 `G` 用作 EMM 的地址时，该存储器会输出一个 (`W_D` + 1)-位的值。该输出包含：\n1.  一个 1 位的有效性标志位 `V`。`V=1` 表示状态 `G` 在 `FSM_D` 中有有效的对应状态。`V=0` 表示状态 `G` 在 `FSM_D` 中没有等效状态，这代表一个根本性的实现缺陷。\n2.  一个 `W_D`-位的期望状态向量 `D_{equiv}`。如果 `V=1`，这是 `FSM_D` 为了被视为与 `FSM_G` 的状态 `G` 等效而 *应该* 处于的状态向量。如果 `V=0`，`D_{equiv}` 的值是未定义的，不得依赖。\n\n检查器 FSM `FSM_C` 必须设计为具有以下行为：\n-   它有一个单一的状态保持元件，由状态变量 `Q_C` 表示。`Q_C=0` 代表 `NORMAL` (正常) 操作状态，`Q_C=1` 代表一个永久性的 `FAULT` (故障) 状态。\n-   它有一个单一的输出信号 `ERROR`，该信号直接等于其当前状态 `Q_C`。\n-   在收到 `RESET` (`RESET=1`) 时，`FSM_C` 必须进入 `NORMAL` 状态 (`Q_C=0`)。同时假设 `FSM_G` 和 `FSM_D` 也复位到它们的初始等效状态。\n-   在 `CLK` 的每个上升沿 (当 `RESET=0` 时)，`FSM_C` 必须检查是否存在等效性违例。如果以下任一条件为真，则发生违例：\n    a) 当前的黄金状态 `G` 在 EMM 中映射到一个无效条目 (即 `V=0`)。\n    b) 当前的黄金状态 `G` 有一个有效映射 (`V=1`)，但 DUT 的实际状态 `D` 与期望的等效状态 `D_{equiv}` 不匹配。\n-   如果检测到违例，`FSM_C` 必须转换到 `FAULT` 状态 (`Q_C=1`)。\n-   一旦进入 `FAULT` 状态，`FSM_C` 必须在所有后续时钟周期中保持在该状态，无论其输入如何，直到下一次 `RESET` 事件发生。\n\n您的任务是推导出检查器次态 `Q_{C, next}` 的单一、全面的布尔逻辑方程。该方程应是其当前状态 `Q_C`、主输入 `RESET`、DUT 的状态向量 `D` 以及 EMM 的输出 `V` 和 `D_{equiv}` 的函数。请使用标准的布尔运算符：非 (`\\overline{A}`）、与 (`\\land`)、或 (`\\lor`) 和异或 (`\\oplus`)。对向量的位使用索引表示法（例如 `D_i`）。", "solution": "我们将检查器建模为一个具有单个状态位 $Q_{C}$ 和一个高电平有效的同步复位 $RESET$ 的同步 FSM。所要求的行为意味着：\n- 当 $RESET=1$ 时，无论其他输入如何，次态都必须为 $0$：$Q_{C,\\text{next}}=0$。\n- 当 $RESET=0$ 时，如果检查器已处于 $FAULT$ 状态（$Q_{C}=1$），或在当前周期内检测到违例，它必须进入或保持在 $FAULT$ 状态。\n\n为避免在 $V=0$ 时依赖未定义的 $D_{equiv}$，我们精确定义违例条件：\n- 条件 (a)：无效的映射条目，由 $\\overline{V}$ 表示。\n- 条件 (b)：映射有效 $V=1$ 但 $D \\neq D_{equiv}$。按位不匹配可以通过异或的或运算来捕获：\n$$\nM \\equiv \\bigvee_{i=0}^{W_{D}-1} \\left( D_{i} \\oplus (D_{equiv})_{i} \\right).\n$$\n为确保在 $V=0$ 时不依赖于 $(D_{equiv})_{i}$，用 $V$ 来门控 $M$。因此，违例谓词是\n$$\n\\text{VIOL} \\equiv \\overline{V} \\lor \\left( V \\land M \\right)\n= \\overline{V} \\lor \\left( V \\land \\bigvee_{i=0}^{W_{D}-1} \\left( D_{i} \\oplus (D_{equiv})_{i} \\right) \\right).\n$$\n\n结合同步复位和粘滞故障行为，得出次态方程：\n- 如果 $RESET=1$，则 $Q_{C,\\text{next}}=0$。\n- 如果 $RESET=0$，则 $Q_{C,\\text{next}} = Q_{C} \\lor \\text{VIOL}$。\n\n由此得出单一的布尔表达式\n$$\nQ_{C,\\text{next}} = \\overline{RESET} \\land \\left( Q_{C} \\lor \\overline{V} \\lor \\left( V \\land \\bigvee_{i=0}^{W_{D}-1} \\left( D_{i} \\oplus (D_{equiv})_{i} \\right) \\right) \\right).\n$$\n该表达式仅使用 $\\overline{(\\cdot)}$、$\\land$、$\\lor$ 和 $\\oplus$，按要求对向量位进行索引，并保持了在 $V=0$ 时对 $D_{equiv}$ 的独立性。", "answer": "$$\\boxed{\\overline{RESET} \\land \\left( Q_{C} \\lor \\overline{V} \\lor \\left( V \\land \\bigvee_{i=0}^{W_{D}-1} \\left( D_{i} \\oplus (D_{equiv})_{i} \\right) \\right) \\right)}$$", "id": "1957176"}]}