{"hands_on_practices": [{"introduction": "要真正掌握通用移位寄存器，我们必须超越单一操作，观察它在一系列指令下的行为。第一个练习要求你追踪寄存器在并行加载和右移这两个连续但不同操作下的状态变化。这种练习对于预测寄存器在多步数字过程中的行为至关重要。[@problem_id:1972006]", "problem": "考虑一个 4 位同步通用移位寄存器，其状态由输出 $Q_3Q_2Q_1Q_0$ 表示，其中 $Q_3$ 是最高有效位。该寄存器的功能由两个模式控制输入 $S_1$ 和 $S_0$ 决定。其工作模式定义如下：\n\n- $S_1S_0 = 00$：保持状态（无变化）\n- $S_1S_0 = 01$：右移（串行输入 $SI_R$ 从 $Q_3$ 进入）\n- $S_1S_0 = 10$：左移（串行输入 $SI_L$ 从 $Q_0$ 进入）\n- $S_1S_0 = 11$：并行加载（从输入 $I_3I_2I_1I_0$ 加载）\n\n最初，寄存器的状态为 $Q_3Q_2Q_1Q_0 = 1100$。然后，在以下控制设置下，该寄存器经历两个连续的时钟脉冲：\n\n1.  **第一个时钟脉冲：** 模式设置为并行加载 ($S_1S_0=11$)，并行输入为 $I_3I_2I_1I_0 = 0110$。\n2.  **第二个时钟脉冲：** 模式设置为右移 ($S_1S_0=01$)，串行输入为 $SI_R = 1$。\n\n确定在第二个时钟脉冲之后，寄存器的最终二进制状态，表示为 4 位字符串 $Q_3Q_2Q_1Q_0$。", "solution": "我们将从给定的初始状态开始，通过追踪两个时钟脉冲过程中寄存器内容的变化，来确定 4 位寄存器 $Q_3Q_2Q_1Q_0$ 的状态。\n\n**初始状态：**\n在第一个时钟脉冲之前，寄存器中的值为 $Q_3Q_2Q_1Q_0 = 1100$。\n\n**第一个时钟脉冲后：**\n第一个脉冲的模式控制输入为 $S_1S_0 = 11$。根据题目描述，此设置激活“并行加载”操作。\n并行输入指定为 $I_3I_2I_1I_0 = 0110$。\n在并行加载操作中，寄存器的状态会更新为与并行输入上的值相匹配，这意味着旧状态被完全覆盖。\n因此，寄存器的新状态变为：\n- $Q_3 \\leftarrow I_3 = 0$\n- $Q_2 \\leftarrow I_2 = 1$\n- $Q_1 \\leftarrow I_1 = 1$\n- $Q_0 \\leftarrow I_0 = 0$\n在第一个时钟脉冲后，寄存器的状态为 $Q_3Q_2Q_1Q_0 = 0110$。\n\n**第二个时钟脉冲后：**\n此脉冲前寄存器的状态是上一步的结果：$0110$。\n第二个脉冲的模式控制输入为 $S_1S_0 = 01$。此设置激活“右移”操作。\n右移的串行输入为 $SI_R = 1$。\n在“右移”操作中，串行输入 $SI_R$ 的值被加载到最高有效位（$Q_3$）。每个位的值向右移动一个位置。也就是说，旧的 $Q_3$ 值移动到 $Q_2$，旧的 $Q_2$ 值移动到 $Q_1$，旧的 $Q_1$ 值移动到 $Q_0$。最低有效位（$Q_0$）的旧值被丢弃。\n基于状态 $0110$，新状态的计算如下：\n- 新 $Q_3 \\leftarrow SI_R = 1$\n- 新 $Q_2 \\leftarrow \\text{Old } Q_3 = 0$\n- 新 $Q_1 \\leftarrow \\text{Old } Q_2 = 1$\n- 新 $Q_0 \\leftarrow \\text{Old } Q_1 = 1$\n因此，在第二个时钟脉冲后，寄存器的状态变为 $Q_3Q_2Q_1Q_0 = 1011$。\n\n**最终状态：**\n经过两个时钟脉冲序列后，寄存器的最终状态为 $1011$。", "answer": "$$\\boxed{1011}$$", "id": "1972006"}, {"introduction": "通用移位寄存器的多功能性源于其内部基于多路选择器的数据路径选择。下一个问题引入了一个假设的硬件故障，以检验你对这些内部连接的理解。通过分析该故障的影响（或无影响），你将更深刻地体会到控制信号 $S_1$ 和 $S_0$ 如何为每个操作选择正确的数据路径。[@problem_id:1972005]", "problem": "一个4位通用移位寄存器由D型触发器构成，从最高有效位到最低有效位依次标记为 $Q_3, Q_2, Q_1, Q_0$。该寄存器的状态由二进制字符串 $Q_3Q_2Q_1Q_0$ 表示。寄存器的操作由两条选择线 $S_1$ 和 $S_0$ 控制。每个触发器 $Q_i$ 的输入由一个4对1多路复用器（MUX）提供。对于通用触发器 $Q_i$（其中 $i \\in \\{0, 1, 2, 3\\}$），其对应MUX的连接定义如下，MUX输入端索引为0到3：\n\n- 输入0（由 $S_1S_0=00$ 选择，保持）：触发器的当前状态，$Q_i$。\n- 输入1（由 $S_1S_0=01$ 选择，右移）：相邻更高有效位的输出，$Q_{i+1}$。对于最高有效位（$i=3$），此输入连接到右移串行输入线 $I_R$。\n- 输入2（由 $S_1S_0=10$ 选择，左移）：相邻更低有效位的输出，$Q_{i-1}$。对于最低有效位（$i=0$），此输入连接到左移串行输入线 $I_L$。\n- 输入3（由 $S_1S_0=11$ 选择，并行加载）：并行数据输入线 $P_i$。\n\n寄存器初始化状态为 $Q_3Q_2Q_1Q_0 = 1011$。电路中出现了一个“固定为0”的故障：连接触发器 $Q_2$ 输出到触发器 $Q_1$ 关联的MUX的物理线路永久保持在逻辑0电平。\n\n接下来，控制线被设置为在下一个时钟脉冲上执行一次左移操作（$S_1=1, S_0=0$）。左移串行输入线保持在 $I_L=0$。\n\n经过这次左移操作后，下列哪个选项代表寄存器的状态 $Q_3Q_2Q_1Q_0$？\n\nA. 0110\n\nB. 1101\n\nC. 0010\n\nD. 0100\n\nE. 1011", "solution": "D型触发器在时钟的有效沿捕获其输入，因此对于每一级 $Q_{i}$，其下一状态为 $Q_{i}^{+}=D_{i}$，其中 $D_{i}$ 是由控制线选择的关联MUX的输出。当 $S_{1}=1$ 且 $S_{0}=0$（左移）时，MUX选择输入2，对于 $i \\in \\{1,2,3\\}$，该输入连接到 $Q_{i-1}$，对于 $i=0$，连接到 $I_{L}$。\n\n因此，在左移操作下，\n$$\nD_{3}=Q_{2},\\quad D_{2}=Q_{1},\\quad D_{1}=Q_{0},\\quad D_{0}=I_{L}.\n$$\n给定初始状态 $Q_{3}Q_{2}Q_{1}Q_{0}=1011$ 且 $I_{L}=0$，我们得到\n$$\nD_{3}=0,\\quad D_{2}=1,\\quad D_{1}=1,\\quad D_{0}=0.\n$$\n因此，在时钟沿之后，\n$$\nQ_{3}^{+}Q_{2}^{+}Q_{1}^{+}Q_{0}^{+}=0110.\n$$\n所述的固定为0故障发生在从 $Q_{2}$ 到 $Q_{1}$ 的MUX的线路上。该路径用于右移输入（输入1：当 $i=1$ 时为 $Q_{i+1}$，即 $Q_{2}$），而不是左移输入（输入2：当 $i=1$ 时为 $Q_{i-1}$，即 $Q_{0}$）。由于执行的是左移操作，故障路径未被选中，因此上述计算不受该故障影响。\n\n因此，结果状态为 $0110$，对应选项A。", "answer": "$$\\boxed{A}$$", "id": "1972005"}, {"introduction": "除了在单个寄存器内处理数据，通用移位寄存器在系统不同部分之间的通信中也至关重要。最后一个练习将挑战提升到系统级设计问题，你必须设计一种有效的方法，仅使用串行连接来交换两个寄存器的数据。这个任务模拟了串行数据传输的真实应用，并突显了移位操作在数据通信中的强大作用。[@problem_id:1971998]", "problem": "两个相同的4位通用移位寄存器A和B被用于一个数字电路中。每个寄存器的位从 `Q[3]` (最高有效位) 到 `Q[0]` (最低有效位) 进行索引。每个寄存器根据一个两位的模式控制输入 `(S1, S0)` 进行操作，其功能表如下：\n\n| S1 | S0 | 操作      | 描述                                                                                                   |\n|----|----|----------------|---------------------------------------------------------------------------------------------------------------|\n| 0  | 0  | 保持           | 寄存器的内容保持不变：$Q_{\\text{next}} = Q$。                                                       |\n| 0  | 1  | 右移    | 位向右移动一个位置。新的最高有效位从串行右移输入（`SRI`）加载：$Q_{\\text{next}}[3] = \\text{SRI}$，对于 $i \\in \\{0, 1, 2\\}$，$Q_{\\text{next}}[i] = Q[i+1]$。位 `Q[0]` 被移出。 |\n| 1  | 0  | 左移     | 位向左移动一个位置。新的最低有效位从串行左移输入（`SLI`）加载：$Q_{\\text{next}}[0] = \\text{SLI}$，对于 $i \\in \\{1, 2, 3\\}$，$Q_{\\text{next}}[i] = Q[i-1]$。位 `Q[3]` 被移出。  |\n| 1  | 1  | 并行加载  | 寄存器从并行输入 `I[3:0]` 加载数据：$Q_{\\text{next}} = I$。                               |\n\n这两个寄存器相互连接，并同步到一个共同的时钟。接线配置如下：\n- 寄存器A的右移串行输出（即位 `A[0]` 的值）连接到寄存器B的串行右移输入（`SRI`）。\n- 寄存器B的右移串行输出（即位 `B[0]` 的值）连接到寄存器A的串行右移输入（`SRI`）。\n- 寄存器的所有其他数据输入，特别是并行输入 (`I_A`, `I_B`) 和串行左移输入 (`SLI_A`, `SLI_B`)，都没有连接到任何数据源，可以假定它们提供恒定的逻辑 `0` 值。\n\n最初，寄存器A中存放着4位值 `D_A`，寄存器B中存放着4位值 `D_B`。你的任务是确定交换这两个寄存器内容所需的最少时钟周期数，使得寄存器A中存放 `D_B`，而寄存器B中存放 `D_A`。", "solution": "设 $A^{(t)}[i]$ 和 $B^{(t)}[i]$ 表示在时钟时刻 $t$ 时寄存器 $A$ 和 $B$ 的第 $i$ 位（$i \\in \\{0,1,2,3\\}$）的内容，其中 $t=0$ 为初始状态。通用移位寄存器功能表规定，在模式 $(S1,S0)=(0,1)$（右移）下，对于任何寄存器 $Q$，其下一状态满足\n$$\nQ^{(t+1)}[3]=\\mathrm{SRI}_{Q}^{(t)},\\quad Q^{(t+1)}[i]=Q^{(t)}[i+1]\\ \\text{for}\\ i\\in\\{0,1,2\\}.\n$$\n根据接线方式，串行右移输入是交叉连接的：\n$$\n\\mathrm{SRI}_{A}^{(t)}=B^{(t)}[0],\\qquad \\mathrm{SRI}_{B}^{(t)}=A^{(t)}[0].\n$$\n所有其他输入都接至逻辑 $0$，因此并行加载将强制载入零，而左移将在 `[0]` 位插入零并丢弃 `[3]` 位，这两种操作都会破坏性地丢失数据，无助于更快地完成交换。\n\n选择在每个时钟周期对两个寄存器都应用右移操作。于是，同步更新方程为\n$$\nA^{(t+1)}[3]=B^{(t)}[0],\\quad A^{(t+1)}[i]=A^{(t)}[i+1]\\ \\text{for}\\ i\\in\\{0,1,2\\},\n$$\n$$\nB^{(t+1)}[3]=A^{(t)}[0],\\quad B^{(t+1)}[i]=B^{(t)}[i+1]\\ \\text{for}\\ i\\in\\{0,1,2\\}.\n$$\n设初始内容为 $A^{(0)}=[A_{3}\\ A_{2}\\ A_{1}\\ A_{0}]$ 和 $B^{(0)}=[B_{3}\\ B_{2}\\ B_{1}\\ B_{0}]$。迭代四个时钟周期：\n\n在 $t=1$ 之后：\n$$\nA^{(1)}=[B_{0}\\ A_{3}\\ A_{2}\\ A_{1}],\\qquad B^{(1)}=[A_{0}\\ B_{3}\\ B_{2}\\ B_{1}].\n$$\n在 $t=2$ 之后：\n$$\nA^{(2)}=[B_{1}\\ B_{0}\\ A_{3}\\ A_{2}],\\qquad B^{(2)}=[A_{1}\\ A_{0}\\ B_{3}\\ B_{2}].\n$$\n在 $t=3$ 之后：\n$$\nA^{(3)}=[B_{2}\\ B_{1}\\ B_{0}\\ A_{3}],\\qquad B^{(3)}=[A_{2}\\ A_{1}\\ A_{0}\\ B_{3}].\n$$\n在 $t=4$ 之后：\n$$\nA^{(4)}=[B_{3}\\ B_{2}\\ B_{1}\\ B_{0}],\\qquad B^{(4)}=[A_{3}\\ A_{2}\\ A_{1}\\ A_{0}],\n$$\n这正好实现了交换 $A \\leftarrow D_{B}$ 和 $B \\leftarrow D_{A}$。\n\n为了论证其最小性，我们观察到在寄存器之间传输信息的唯一路径是通过右移操作时的串行右移输入。在每个时钟沿，最多有一位从 $A$ 进入 $B$，也最多有一位从 $B$ 进入 $A$。交换内容需要在每个方向上传输 $4$ 位数据，因此至少需要 $4$ 个时钟周期。由于上述方案在 $4$ 个周期内完成了交换，因此最少需要 $4$ 个周期。", "answer": "$$\\boxed{4}$$", "id": "1971998"}]}