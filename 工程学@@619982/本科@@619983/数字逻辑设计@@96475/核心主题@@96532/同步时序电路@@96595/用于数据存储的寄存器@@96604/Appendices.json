{"hands_on_practices": [{"introduction": "寄存器不仅仅是静态的数据存储单元；它的核心功能在于能够根据精确的控制信号来更新其状态。本练习将带你实践最基础的寄存器控制逻辑设计：并行加载和同步清零。通过这个练习，你将学会如何使用一个控制信号 $M$ 来决定寄存器的下一个状态是载入外部数据 $I$ 还是重置为零，这是构建更复杂数字系统的第一步 [@problem_id:1958102]。", "problem": "需要设计一个4位同步数字寄存器。该寄存器有一个4位并行数据输入总线 `I[3:0]`、一个单控制输入 `M` 和一个时钟输入 `CLK`。寄存器的输出是4位存储值 `Q[3:0]`。该寄存器由上升沿触发的D触发器构成，每一位使用一个。\n\n寄存器的行为由时钟信号 `CLK` 上升沿时的控制输入 `M` 决定，如下所示：\n- 如果 `M = 0`，寄存器执行并行加载操作，从输入总线 `I` 捕获值。\n- 如果 `M = 1`，寄存器被清零，即其状态复位为 `0000`。\n\n下列哪个布尔表达式正确地表示了对应于第2位的D触发器的数据输入所需的逻辑，记为 `D_{in,2}`？在以下选项中，`I_2` 是输入总线的第2位，`Q_2` 是输出的第2位，乘法 (`\\cdot`) 代表逻辑与，加法 (`+`) 代表逻辑或，`\\oplus` 代表逻辑异或，`\\overline{M}` 代表 `M` 的逻辑非。\n\nA. `D_{in,2} = M \\cdot I_2`\n\nB. `D_{in,2} = \\overline{M} \\cdot I_2 + M \\cdot Q_2`\n\nC. `D_{in,2} = \\overline{M} \\cdot I_2`\n\nD. `D_{in,2} = M \\oplus I_2`\n\nE. `D_{in,2} = \\overline{M} \\cdot I_2 + M`", "solution": "我们考虑存储第2位的上升沿触发D触发器。在每个 $CLK$ 上升沿指定的同步行为是：\n- 如果 $M=0$，执行并行加载：$Q_{2}^{+}=I_{2}$。\n- 如果 $M=1$，清零：$Q_{2}^{+}=0$。\n\n由于D触发器的次态直接取自其输入，我们要求组合逻辑输入 $D_{in,2}$ 实现以下函数\n$$\nD_{in,2} =\n\\begin{cases}\nI_{2}, & M=0,\\\\\n0, & M=1.\n\\end{cases}\n$$\n这是一个由 $M$ 控制的2选1多路选择器，在 $I_{2}$ (当 $M=0$ 时) 和 $0$ (当 $M=1$ 时) 之间进行选择。其标准的布尔实现是\n$$\nD_{in,2}=\\overline{M}\\cdot I_{2}+M\\cdot 0=\\overline{M}\\cdot I_{2}.\n$$\n现在对照选项进行验证：\n- A: $M\\cdot I_{2}$ 在 $M=0$ 时得到 $0$，而不是 $I_{2}$；不正确。\n- B: $\\overline{M}\\cdot I_{2}+M\\cdot Q_{2}$ 在 $M=1$ 时保持前一个状态，而不是清零为 $0$；不正确。\n- C: $\\overline{M}\\cdot I_{2}$ 与推导出的表达式匹配；正确。\n- D: $M\\oplus I_{2}$ 根据 $M$ 进行翻转，与加载/清零无关；不正确。\n- E: $\\overline{M}\\cdot I_{2}+M$ 在 $M=1$ 时得到 $1$，这是置位操作，而不是清零；不正确。\n\n因此，正确选项是C。", "answer": "$$\\boxed{C}$$", "id": "1958102"}, {"introduction": "在真实的处理器设计中，寄存器需要具备从多个不同来源（例如算术逻辑单元 ALU、内存或另一个寄存器）加载数据的能力。这就要求我们超越简单的加载/清零控制，设计更灵活的输入选择电路。本练习将指导你为一个寄存器位设计一个二选一数据选择器，通过控制信号 $S$ 决定是从数据总线 $A$ 还是 $B$ 加载数据，这是构建复杂数据通路的关键技能 [@problem_id:1958039]。", "problem": "在设计处理器寄存器文件时，一个常见要求是创建一个可以从多个数据源之一加载数据的寄存器。考虑这样一个寄存器的一个单位片，它由一个 D 型触发器实现。该触发器在时钟信号 `CLK` 的上升沿捕获其数据输入 `D` 的值，并将其保持在输出 `Q` 上。\n\n这个特定的寄存器级必须能够从两个 1 位输入总线 `A` 或 `B` 之一加载数据。一条选择线 `S` 控制使用哪个数据源。其行为规定如下：\n- 如果选择线 `S` 为逻辑 0，触发器应在下一个时钟上升沿加载来自输入 `A` 的值。\n- 如果选择线 `S` 为逻辑 1，触发器应在下一个时钟上升沿加载来自输入 `B` 的值。\n\n使用标准的布尔代数表示法，其中加法 (`+`) 表示或运算，乘法（通过并列隐含）表示与运算，撇号（例如 `S'`）表示非运算，下列哪个表达式正确定义了 D 型触发器数据输入 `D` 的逻辑？\n\nA. `D = SA + S'B`\n\nB. `D = S'A + SB`\n\nC. `D = A \\oplus B`\n\nD. `D = (S+A)(S+B)`\n\nE. `D = AB + S`", "solution": "D 型触发器在 $CLK$ 的上升沿捕获其数据输入 $D$ 上的值。该寄存器必须根据选择线 $S$ 从 $A$ 或 $B$ 中选择其 $D$ 输入，其指定行为如下：\n- 如果 $S=0$，则 $D$ 必须等于 $A$。\n- 如果 $S=1$，则 $D$ 必须等于 $B$。\n\n一个标准的布尔结构，当 $Z=0$ 时选择 $X$，当 $Z=1$ 时选择 $Y$，由以下公式给出：\n$$\nf(X,Y,Z)=XZ' + YZ.\n$$\n验证如下：\n- 如果 $Z=0$，则 $f=X(1)+Y(0)=X$。\n- 如果 $Z=1$，则 $f=X(0)+Y(1)=Y$。\n\n将此应用于 $X=A$，$Y=B$ 和 $Z=S$ 的情况，所需的数据输入为：\n$$\nD = AS' + BS = S'A + SB.\n$$\n对照给定的行为进行检查：\n- 对于 $S=0$：$D = A(1) + B(0) = A$。\n- 对于 $S=1$：$D = A(0) + B(1) = B$。\n因此，该表达式满足规范要求。\n\n为完整起见，其他选项是不正确的：\n- $SA + S'B$ 在 $S=0$ 时会得到 $D=B$，这与要求相矛盾。\n- $A \\oplus B$ 完全忽略了 $S$。\n- $(S+A)(S+B)$ 化简为 $S + AB$，它没有实现由 $S$ 控制的选择功能。\n- $AB + S$ 也是 $S + AB$，不是一个选择器。\n\n因此，正确的选择是 $D = S'A + SB$。", "answer": "$$\\boxed{B}$$", "id": "1958039"}, {"introduction": "前面的练习我们对整个寄存器进行统一操作，现在让我们探索一种更精细的控制方式：位级控制。在很多应用中，我们希望只更新寄存器中的某几个特定位，同时保持其余位不变。本练习引入了“掩码”（mask）这一强大概念，它允许我们对寄存器的每个位进行独立控制。你将分析一个选择性更新寄存器，并追踪其在连续几个时钟周期内的状态演变，从而加深对同步时序逻辑和位操作的理解 [@problem_id:1958064]。", "problem": "正在分析一个称为“选择性更新寄存器”的专用4位同步寄存器。该寄存器有一个4位数据输入`D[3:0]`、一个4位掩码输入`M[3:0]`和一个时钟输入`CLK`。位的索引从右到左，因此`D[0]`是最低有效位。寄存器的状态由`Q[3:0]`表示。\n\n寄存器在`CLK`信号的上升沿根据以下规则更新其状态，规则适用于从0到3的每一位`i`：\n- 如果掩码位`M[i]`为'1'，则对应的状态位`Q[i]`更新为数据输入位`D[i]`的值。\n- 如果掩码位`M[i]`为'0'，则对应的状态位`Q[i]`保持其先前的值，忽略数据输入位`D[i]`。\n\n初始时，在`t=0`时刻，寄存器持有二进制值`1010`。在接下来的三个连续时钟周期内，应用以下数据和掩码输入：\n- 在第1个时钟上升沿：`D = 1100`，`M = 0101`\n- 在第2个时钟上升沿：`D = 0111`，`M = 1100`\n- 在第3个时钟上升沿：`D = 1001`，`M = 1010`\n\n确定在第3个时钟上升沿之后，寄存器`Q`中存储的值。以最终4位二进制值对应的十进制数形式提供你的答案。", "solution": "我们使用以下规则对每位的选择性更新进行建模：对于上升沿的每个位索引$i \\in \\{0,1,2,3\\}$，\n$$\nQ^{+}[i] = \n\\begin{cases}\nD[i], & \\text{if } M[i] = 1,\\\\\nQ[i], & \\text{if } M[i] = 0.\n\\end{cases}\n$$\n等效地，在二进制值的布尔代数中，\n$$\nQ^{+}[i] = M[i]\\cdot D[i] + \\left(1 - M[i]\\right)\\cdot Q[i].\n$$\n初始状态在$t=0$时：$Q=1010$，所以$(Q[3],Q[2],Q[1],Q[0])=(1,0,1,0)$。\n\n第一个上升沿，输入为$D=1100$和$M=0101$：\n- $i=3$: $M[3]=0 \\Rightarrow Q^{+}[3]=Q[3]=1$。\n- $i=2$: $M[2]=1 \\Rightarrow Q^{+}[2]=D[2]=1$。\n- $i=1$: $M[1]=0 \\Rightarrow Q^{+}[1]=Q[1]=1$。\n- $i=0$: $M[0]=1 \\Rightarrow Q^{+}[0]=D[0]=0$。\n因此在第一个上升沿之后：$Q=1110$。\n\n第二个上升沿，输入为$D=0111$和$M=1100$，起始状态为$Q=1110$：\n- $i=3$: $M[3]=1 \\Rightarrow Q^{+}[3]=D[3]=0$。\n- $i=2$: $M[2]=1 \\Rightarrow Q^{+}[2]=D[2]=1$。\n- $i=1$: $M[1]=0 \\Rightarrow Q^{+}[1]=Q[1]=1$。\n- $i=0$: $M[0]=0 \\Rightarrow Q^{+}[0]=Q[0]=0$。\n因此在第二个上升沿之后：$Q=0110$。\n\n第三个上升沿，输入为$D=1001$和$M=1010$，起始状态为$Q=0110$：\n- $i=3$: $M[3]=1 \\Rightarrow Q^{+}[3]=D[3]=1$。\n- $i=2$: $M[2]=0 \\Rightarrow Q^{+}[2]=Q[2]=1$。\n- $i=1$: $M[1]=1 \\Rightarrow Q^{+}[1]=D[1]=0$。\n- $i=0$: $M[0]=0 \\Rightarrow Q^{+}[0]=Q[0]=0$。\n因此在第三个上升沿之后：$Q=1100$。\n\n最终的4位二进制值$1100$等于十进制的$1\\cdot 2^{3} + 1\\cdot 2^{2} + 0\\cdot 2^{1} + 0\\cdot 2^{0} = 8 + 4 = 12$。", "answer": "$$\\boxed{12}$$", "id": "1958064"}]}