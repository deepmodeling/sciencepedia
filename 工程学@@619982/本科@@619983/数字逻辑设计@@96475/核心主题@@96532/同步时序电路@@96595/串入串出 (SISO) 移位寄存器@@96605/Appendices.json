{"hands_on_practices": [{"introduction": "这项练习是掌握串入串出（SISO）移位寄存器工作原理的基础。通过在每个时钟周期手动追踪寄存器内部状态的演变，您将建立一个关于数据如何逐位移动的清晰、具体的概念模型。这是理解更复杂移位寄存器应用和时序分析的第一步。[@problem_id:1959756]", "problem": "一个4位临时数据缓冲器由一个串行输入、串行输出（SISO）移位寄存器实现。该寄存器的位标记为 $Q_3, Q_2, Q_1, Q_0$，其中 $Q_3$ 是最高有效位（MSB），$Q_0$ 是最低有效位（LSB）。在每个时钟脉冲的上升沿，数据向右移动一个位置：串行数据输入端 $D_{in}$ 的值被加载到 $Q_3$；$Q_3$ 的前一个值移动到 $Q_2$；$Q_2$ 移动到 $Q_1$；$Q_1$ 移动到 $Q_0$。最初在 $Q_0$ 中的值被移出。\n\n最初，寄存器中存储的二进制值为 `1011`。在接下来的连续四个时钟脉冲期间，串行数据输入线 $D_{in}$ 保持在逻辑 '0'。在第四个时钟脉冲之后，寄存器中存储的二进制值（表示为 $Q_3Q_2Q_1Q_0$）是多少？\n\nA. 0000\n\nB. 0001\n\nC. 0101\n\nD. 1101\n\nE. 1011", "solution": "问题要求一个4位串行输入、串行输出（SISO）移位寄存器在四个时钟脉冲后的内容。让寄存器的状态由二进制字符串 $Q_3Q_2Q_1Q_0$ 表示。寄存器在每个时钟脉冲时将其内容向右移动一位。这意味着新状态 $(Q_3', Q_2', Q_1', Q_0')$ 由旧状态 $(Q_3, Q_2, Q_1, Q_0)$ 和串行输入 $D_{in}$ 决定，如下所示：\n$Q_3' = D_{in}$\n$Q_2' = Q_3$\n$Q_1' = Q_2$\n$Q_0' = Q_1$\n\n我们已知初始状态和输入条件。\n初始状态（任何脉冲之前）：$Q_3Q_2Q_1Q_0 = 1011$\n串行输入：$D_{in} = 0$（在所有四个脉冲期间保持不变）\n\n我们可以追踪每个时钟脉冲后寄存器的状态。\n\n**第一个时钟脉冲后：**\n$Q_3$ 的新值将是输入，$D_{in} = 0$。\n$Q_2$ 的新值将是 $Q_3$ 的旧值，即 1。\n$Q_1$ 的新值将是 $Q_2$ 的旧值，即 0。\n$Q_0$ 的新值将是 $Q_1$ 的旧值，即 1。\n因此，寄存器的状态变为 $0101$。\n\n**第二个时钟脉冲后：**\n输入仍然是 $D_{in} = 0$。上一步寄存器的状态是 $0101$。\n$Q_3$ 的新值将是 $D_{in} = 0$。\n$Q_2$ 的新值将是 $Q_3$ 的旧值，即 0。\n$Q_1$ 的新值将是 $Q_2$ 的旧值，即 1。\n$Q_0$ 的新值将是 $Q_1$ 的旧值，即 0。\n因此，寄存器的状态变为 $0010$。\n\n**第三个时钟脉冲后：**\n输入仍然是 $D_{in} = 0$。上一步寄存器的状态是 $0010$。\n$Q_3$ 的新值将是 $D_{in} = 0$。\n$Q_2$ 的新值将是 $Q_3$ 的旧值，即 0。\n$Q_1$ 的新值将是 $Q_2$ 的旧值，即 0。\n$Q_0$ 的新值将是 $Q_1$ 的旧值，即 1。\n因此，寄存器的状态变为 $0001$。\n\n**第四个时钟脉冲后：**\n输入仍然是 $D_{in} = 0$。上一步寄存器的状态是 $0001$。\n$Q_3$ 的新值将是 $D_{in} = 0$。\n$Q_2$ 的新值将是 $Q_3$ 的旧值，即 0。\n$Q_1$ 的新值将是 $Q_2$ 的旧值，即 0。\n$Q_0$ 的新值将是 $Q_1$ 的旧值，即 0。\n因此，寄存器的状态变为 $0000$。\n\n因此，在第四个时钟脉冲后，寄存器中存储的最终二进制值是 `0000`。这对应于选项A。", "answer": "$$\\boxed{A}$$", "id": "1959756"}, {"introduction": "在掌握了基本移位机制之后，本练习将探讨SISO寄存器的一个核心功能：作为数字延迟线。您将观察到，串行输入的数据流会在输出端重现，但会延迟一定数量的时钟周期，这个周期数正好等于寄存器的级数。通过这个练习，您可以直观地理解寄存器的物理结构（长度）如何直接决定其在数字系统中的时间延迟功能。[@problem_id:1959691]", "problem": "一位数字工程师正在使用一个5位串行输入、串行输出（SISO）移位寄存器实现一个简单的数据延迟线。该寄存器由五个D型触发器（DFF）构成，分别标记为 $FF_0, FF_1, FF_2, FF_3, FF_4$。串行数据被送入第一个触发器（$D_0$）的输入端，每个触发器 $Q_i$ 的输出连接到下一个触发器 $D_{i+1}$ 的输入端。最终的串行输出 $Q_{out}$ 从最后一个触发器 $Q_4$ 的输出端获取。\n\n所有DFF都由单个时钟同步，并且是上升沿触发的，这意味着它们的状态仅在时钟脉冲的上升沿更新。最初，在时间 $t=0$ 时（在第一个时钟上升沿之前），寄存器处于清零状态，所有触发器的输出（$Q_0$ 到 $Q_4$）均为逻辑0。\n\n一个8位的串行数据流被施加到输入端 $D_{in}$（该输入端连接到 $D_0$）。数据值在每个时钟周期内保持恒定。输入序列为 `11010110`，从第一个时钟周期的值开始。也就是说，在周期1期间输入为 `1`，周期2期间为 `1`，周期3期间为 `0`，依此类推。\n\n在前八个时钟上升沿（即周期 1, 2, 3, 4, 5, 6, 7 和 8 结束时）之后立即观察到的串行输出 $Q_{out}$ 序列是什么？\n\nA. `00011010`\n\nB. `00001101`\n\nC. `11111101`\n\nD. `11010110`\n\nE. `00000110`", "solution": "我们将每个D型触发器建模为在时钟上升沿进行采样。对于一个5级SISO寄存器，每个上升沿的同步更新如下：\n$$\nQ_{0}^{+}=D_{in},\\quad Q_{1}^{+}=Q_{0},\\quad Q_{2}^{+}=Q_{1},\\quad Q_{3}^{+}=Q_{2},\\quad Q_{4}^{+}=Q_{3},\\quad Q_{out}=Q_{4}.\n$$\n最初（在第一个上升沿之前），清零状态为：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,0,0,0,0).\n$$\n在每个周期应用给定的输入，并在每个上升沿进行更新：\n\n- 周期 1 后，输入 $D_{in}=1$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,0,0,0,1),\\quad Q_{out}=0.\n$$\n\n- 周期 2 后，输入 $D_{in}=1$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,0,0,1,1),\\quad Q_{out}=0.\n$$\n\n- 周期 3 后，输入 $D_{in}=0$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,0,1,1,0),\\quad Q_{out}=0.\n$$\n\n- 周期 4 后，输入 $D_{in}=1$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,1,1,0,1),\\quad Q_{out}=0.\n$$\n\n- 周期 5 后，输入 $D_{in}=0$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(1,1,0,1,0),\\quad Q_{out}=1.\n$$\n\n- 周期 6 后，输入 $D_{in}=1$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(1,0,1,0,1),\\quad Q_{out}=1.\n$$\n\n- 周期 7 后，输入 $D_{in}=1$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(0,1,0,1,1),\\quad Q_{out}=0.\n$$\n\n- 周期 8 后，输入 $D_{in}=0$：\n$$\n(Q_{4},Q_{3},Q_{2},Q_{1},Q_{0})=(1,0,1,1,0),\\quad Q_{out}=1.\n$$\n\n因此，在周期1到8之后观察到的串行输出序列为 $00001101$，这与选项B相符。", "answer": "$$\\boxed{B}$$", "id": "1959691"}, {"introduction": "现实世界中的数字电路并非总是完美无瑕。这项练习将引导您超越理想模型，进入故障分析的实践领域，这是一项对数字系统设计师和测试工程师至关重要的技能。通过分析一个带有“固定为1”（stuck-at-1）故障的寄存器，您需要修改标准的移位逻辑来预测其异常行为，从而加深对电路内部数据流的理解。[@problem_id:1959731]", "problem": "考虑一个由D型触发器构成的6位同步串行输入、串行输出（SISO）移位寄存器。该寄存器设计为在每个时钟上升沿向右移位数据。这些触发器索引为 $FF_1, FF_2, \\dots, FF_6$。串行数据输入 $S_{in}$ 连接到 $FF_1$ 的数据输入端，串行数据输出 $S_{out}$ 从 $FF_6$ 的输出端获取。\n\n初始时，在时间 $t=0$ 时，所有触发器都处于 '0' 状态。从第一个时钟周期开始，一个输入序列被施加到 $S_{in}$。在前10个时钟周期内，输入序列为 $1101011001$。\n\n已知该寄存器存在一个特定故障：第四个触发器 $FF_4$ 的数据输入端永久性地“固定为1”（stuck-at-1）。这意味着在每个有效的时钟沿，一个逻辑 '1' 被加载到 $FF_4$ 中，而不管第三个触发器 $FF_3$ 的输出值是多少。\n\n确定在这10个时钟周期内，在 $S_{out}$ 处观察到的10位串行输出序列。答案的第一位应对应于第一个时钟脉冲后的输出，第二位对应于第二个脉冲后的输出，依此类推。请将您的答案表示为一个没有空格的二进制字符串（例如，1010101010）。", "solution": "设 $Q_{i}(k)$ 表示第 $k$ 个时钟上升沿之后 $FF_{i}$ 的状态，其中对于所有 $i\\in\\{1,2,3,4,5,6\\}$ 都有 $Q_{i}(0)=0$。设输入位为 $b_{1},\\dots,b_{10}$，且 $b_{1}b_{2}\\dots b_{10}=1101011001$。由于寄存器向右移位，并且第四个触发器的输入固定为1，因此对于 $k\\geq 1$，同步更新方程为：\n$$\nQ_{1}(k)=b_{k},\\quad Q_{2}(k)=Q_{1}(k-1),\\quad Q_{3}(k)=Q_{2}(k-1),\\quad Q_{4}(k)=1,\\quad Q_{5}(k)=Q_{4}(k-1),\\quad Q_{6}(k)=Q_{5}(k-1).\n$$\n在第 $k$ 个时钟周期，串行输出为 $S_{out}(k)=Q_{6}(k)$。使用初始条件和输入序列 $b_{1}=1$, $b_{2}=1$, $b_{3}=0$, $b_{4}=1$, $b_{5}=0$, $b_{6}=1$, $b_{7}=1$, $b_{8}=0$, $b_{9}=0$, $b_{10}=1$，顺序计算：\n\n对于 $k=1$：\n$$\nQ_{1}(1)=1,\\ Q_{2}(1)=0,\\ Q_{3}(1)=0,\\ Q_{4}(1)=1,\\ Q_{5}(1)=0,\\ Q_{6}(1)=0 \\Rightarrow S_{out}(1)=0.\n$$\n\n对于 $k=2$：\n$$\nQ_{1}(2)=1,\\ Q_{2}(2)=1,\\ Q_{3}(2)=0,\\ Q_{4}(2)=1,\\ Q_{5}(2)=1,\\ Q_{6}(2)=0 \\Rightarrow S_{out}(2)=0.\n$$\n\n对于 $k=3$：\n$$\nQ_{1}(3)=0,\\ Q_{2}(3)=1,\\ Q_{3}(3)=1,\\ Q_{4}(3)=1,\\ Q_{5}(3)=1,\\ Q_{6}(3)=1 \\Rightarrow S_{out}(3)=1.\n$$\n\n对于 $k=4$：\n$$\nQ_{1}(4)=1,\\ Q_{2}(4)=0,\\ Q_{3}(4)=1,\\ Q_{4}(4)=1,\\ Q_{5}(4)=1,\\ Q_{6}(4)=1 \\Rightarrow S_{out}(4)=1.\n$$\n\n对于 $k=5$：\n$$\nQ_{1}(5)=0,\\ Q_{2}(5)=1,\\ Q_{3}(5)=0,\\ Q_{4}(5)=1,\\ Q_{5}(5)=1,\\ Q_{6}(5)=1 \\Rightarrow S_{out}(5)=1.\n$$\n\n对于 $k=6$：\n$$\nQ_{1}(6)=1,\\ Q_{2}(6)=0,\\ Q_{3}(6)=1,\\ Q_{4}(6)=1,\\ Q_{5}(6)=1,\\ Q_{6}(6)=1 \\Rightarrow S_{out}(6)=1.\n$$\n\n对于 $k=7$：\n$$\nQ_{1}(7)=1,\\ Q_{2}(7)=1,\\ Q_{3}(7)=0,\\ Q_{4}(7)=1,\\ Q_{5}(7)=1,\\ Q_{6}(7)=1 \\Rightarrow S_{out}(7)=1.\n$$\n\n对于 $k=8$：\n$$\nQ_{1}(8)=0,\\ Q_{2}(8)=1,\\ Q_{3}(8)=1,\\ Q_{4}(8)=1,\\ Q_{5}(8)=1,\\ Q_{6}(8)=1 \\Rightarrow S_{out}(8)=1.\n$$\n\n对于 $k=9$：\n$$\nQ_{1}(9)=0,\\ Q_{2}(9)=0,\\ Q_{3}(9)=1,\\ Q_{4}(9)=1,\\ Q_{5}(9)=1,\\ Q_{6}(9)=1 \\Rightarrow S_{out}(9)=1.\n$$\n\n对于 $k=10$：\n$$\nQ_{1}(10)=1,\\ Q_{2}(10)=0,\\ Q_{3}(10)=0,\\ Q_{4}(10)=1,\\ Q_{5}(10)=1,\\ Q_{6}(10)=1 \\Rightarrow S_{out}(10)=1.\n$$\n\n因此，10位串行输出序列为 $0011111111$。", "answer": "$$\\boxed{0011111111}$$", "id": "1959731"}]}