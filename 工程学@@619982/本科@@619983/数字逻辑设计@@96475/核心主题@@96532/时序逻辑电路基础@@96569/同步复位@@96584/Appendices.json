{"hands_on_practices": [{"introduction": "让我们从最基本的技能开始：预测电路的行为。这项练习 [@problem_id:1965961] 聚焦于单个T触发器，旨在巩固同步复位的核心原则：复位信号仅在时钟有效沿生效，并优先于其他输入。这是掌握同步逻辑的第一步，为你分析更复杂的时序电路打下坚实基础。", "problem": "一个数字系统包含一个上升沿触发的T型触发器。该触发器有一个时钟输入（`CLK`）、一个翻转输入（`T`）、一个高电平有效的同步复位输入（`RST`）和一个单输出（`Q`）。\n\n该触发器的行为如下：\n- 所有的状态变化仅在`CLK`信号的上升沿发生。\n- 如果在时钟上升沿时`RST`输入为高电平（逻辑1），则输出`Q`被强制为低电平（逻辑0），无论`T`输入的值是多少。\n- 如果在时钟上升沿时`RST`输入为低电平（逻辑0），触发器按其正常模式工作：如果`T`为低电平（0），输出`Q`保持其前一个状态；如果`T`为高电平（1），它会翻转其状态。\n\n初始时，在第一个时钟周期之前，输出`Q`处于低电平状态（0）。在前六个时钟周期的每一个上升沿之前，`T`和`RST`输入的值都保持稳定，如下表所述。\n\n| 时钟周期 | `T` 输入 | `RST` 输入 |\n| :--- | :---: | :---: |\n| 1 | 1 | 0 |\n| 2 | 1 | 0 |\n| 3 | 1 | 1 |\n| 4 | 0 | 0 |\n| 5 | 1 | 0 |\n| 6 | 0 | 1 |\n\n在时钟周期1到6的上升沿之后，输出`Q`的值序列分别是什么？\n\nA. 1, 0, 0, 0, 1, 0\n\nB. 1, 0, 1, 1, 0, 0\n\nC. 1, 1, 0, 0, 1, 0\n\nD. 0, 1, 0, 0, 1, 0", "solution": "设时钟周期$k$上升沿之后的状态表示为$Q[k]$，第一个时钟之前的初始条件为$Q[0]=0$。高电平有效的同步复位在上升沿时具有优先权，因此每个上升沿的更新规则是：\n- 如果 $RST=1$，则 $Q[k]=0$，无论 $T$ 为何值。\n- 如果 $RST=0$，则T触发器正常工作，所以如果 $T=0$，则 $Q[k]=Q[k-1]$；如果 $T=1$，则 $Q[k]=\\overline{Q[k-1]}$。\n\n现在使用表中的值逐个周期地应用此规则。\n\n周期 1：$T=1$，$RST=0$ 导致翻转。从 $Q[0]=0$ 得到 $Q[1]=1$。\n\n周期 2：$T=1$，$RST=0$ 导致翻转。从 $Q[1]=1$ 得到 $Q[2]=0$。\n\n周期 3：$T=1$，$RST=1$ 导致同步复位。因此，$Q[3]=0$。\n\n周期 4：$T=0$，$RST=0$ 导致保持。从 $Q[3]=0$ 得到 $Q[4]=0$。\n\n周期 5：$T=1$，$RST=0$ 导致翻转。从 $Q[4]=0$ 得到 $Q[5]=1$。\n\n周期 6：$T=0$，$RST=1$ 导致同步复位。因此，$Q[6]=0$。\n\n因此，在周期1到6的上升沿之后，输出序列为 $1, 0, 0, 0, 1, 0$，这对应于选项A。", "answer": "$$\\boxed{A}$$", "id": "1965961"}, {"introduction": "在分析了电路行为之后，下一步是进行综合设计。这项练习 [@problem_id:1965997] 要求你将明确的功能需求——包括复位优先级和时钟使能——转化为一个精确的布尔表达式。这项技能是将抽象概念应用于寄存器和状态机设计的核心，是从理论走向实践的关键一步。", "problem": "一位工程师正在为数据处理流水线设计一个定制寄存器。该寄存器是流水线控制单元的关键组件，其行为必须遵循一套严格的规则。该寄存器有一个数据输入 `D`、一个时钟输入 `CLK`、一个高电平有效的同步复位输入 `RST` 和一个高电平有效的时钟使能输入 `EN`。寄存器的当前状态由 `Q` 表示，下一个有效时钟沿之后的状态由 `Q_next` 表示。\n\n要求的行为具体规定如下：\n1.  寄存器的状态 `Q` 只能在 `CLK` 信号的上升沿改变。\n2.  当 `RST` 输入有效（逻辑 1）时，寄存器的状态必须在紧随其后的时钟上升沿被强制为逻辑 0。此复位操作具有最高优先级，并且无论 `D` 或 `EN` 输入的状态如何都必须发生。\n3.  如果 `RST` 输入无效（逻辑 0），寄存器的行为则由 `EN` 输入决定。\n4.  如果在 `RST` 也为 0 的同时 `EN` 无效（逻辑 0），寄存器必须保持其当前状态 `Q`。\n5.  如果在 `RST` 为 0 的同时 `EN` 有效（逻辑 1），寄存器必须加载来自 `D` 输入的值。\n\n下列哪个布尔表达式正确地表示了该寄存器的特征方程，即用当前状态 `Q` 和输入 `D`、`RST`、`EN` 来定义下一状态 `Q_next`？在以下选项中，符号 `\\overline{X}` 表示对 `X` 的逻辑非，`\\cdot` 表示逻辑与，`+` 表示逻辑或。\n\nA. $Q_{next} = \\overline{RST} \\cdot (\\overline{EN} \\cdot Q + EN \\cdot D)$\n\nB. $Q_{next} = \\overline{EN} \\cdot Q + EN \\cdot (\\overline{RST} \\cdot D)$\n\nC. $Q_{next} = \\overline{RST} \\cdot D + EN \\cdot Q$\n\nD. $Q_{next} = \\overline{RST} \\cdot (Q + EN \\cdot D)$", "solution": "寄存器仅在时钟上升沿改变状态，因此其行为可以完全由一个关于 $Q_{next}$ 的特征方程来描述，该方程是 $RST$、$EN$、$D$ 以及当前状态 $Q$ 的组合函数。\n\n复位具有最高优先级并且是同步的，这意味着：\n- 如果 $RST=1$，那么 $Q_{next}=0$，无论 $EN$、$D$ 或 $Q$ 的值如何。\n- 如果 $RST=0$，则由 $EN$ 输入控制：\n  - 如果 $EN=0$，保持当前状态：$Q_{next}=Q$。\n  - 如果 $EN=1$，加载输入：$Q_{next}=D$。\n\n为了强制实现最高优先级的复位，我们提出因子 $\\overline{RST}$，这样当 $RST=1$ 时，就能保证 $Q_{next}=0$：\n$$\nQ_{next}=\\overline{RST}\\cdot F(EN,D,Q).\n$$\n现在我们定义 $F$ 以实现在 $RST=0$ 时由使能信号控制的行为：\n- 当 $EN=0$ 时，我们需要 $F=Q$。\n- 当 $EN=1$ 时，我们需要 $F=D$。\n这正好是一个由 $EN$ 控制的2选1多路选择器，得到\n$$\nF=\\overline{EN}\\cdot Q+EN\\cdot D.\n$$\n因此，\n$$\nQ_{next}=\\overline{RST}\\cdot\\bigl(\\overline{EN}\\cdot Q+EN\\cdot D\\bigr),\n$$\n这与选项 A 相匹配。\n\n为完整起见，我们简要检查其他选项：\n- 选项 B：当 $RST=1$ 时，它得出 $Q_{next}=\\overline{EN}\\cdot Q$，这违反了无论 $EN$ 如何，$Q_{next}$ 都必须为 0 的要求。\n- 选项 C：当 $RST=1$ 时，它得出 $Q_{next}=EN\\cdot Q$，同样违反了复位优先级的要求。\n- 选项 D：当 $RST=0$ 且 $EN=1$ 时，它得出 $Q_{next}=Q+D$ 而不是 $D$，违反了加载行为的要求。\n\n因此，正确的表达式是选项 A。", "answer": "$$\\boxed{A}$$", "id": "1965997"}, {"introduction": "现实世界中的信号往往并不完美。这项高级练习 [@problem_id:1965993] 旨在解决一个实际的工程挑战：如何从一个充满噪声的输入信号中生成一个可靠的复位脉冲。你将通过设计一个有限状态机（FSM）来应用所学知识，该状态机能够滤除噪声并生成一个干净、定时的复位信号，这展示了基本概念如何组合起来构建可靠的系统。", "problem": "您是一名数字系统工程师，任务是为一个模块化的高可用性计算平台设计一个关键组件。其中一个模块是“热插拔”的，这意味着它可以在主系统通电时插入或拔出。该模块向主系统提供主、低电平有效的复位信号 `reset_in`。由于连接器的物理特性，插入模块会引起明显的触点抖动；`reset_in` 信号在稳定到其稳定的低电平有效状态之前，可能会在逻辑高电平和低电平之间不规律地跳变，持续不可预测数量的时钟周期。\n\n为了防止主系统经历多次伪复位序列，您必须设计一个同步复位调节电路。该电路将以带噪声的异步信号 `reset_in` 和主系统时钟 `clk` 作为输入，为系统生成一个单一、纯净、高电平有效的复位脉冲 `reset_out`。\n\n请根据以下严格规范，设计一个 Moore 型有限状态机 (FSM) 来实现这个复位调节器：\n\n1.  所有状态转换必须在 `clk` 的上升沿发生。\n2.  输出 `reset_out` 仅取决于 FSM 的当前状态。默认情况下，在空闲状态时，`reset_out` 必须为 `0`。\n3.  只有当检测到 `reset_in` 为 `0` 时，FSM 才应开始其复位序列。\n4.  为滤除噪声，FSM 必须确认 `reset_in` 连续 `N=3` 个时钟周期保持为 `0`。如果在此验证期间 `reset_in` 返回 `1`，FSM 必须中止该序列并返回其初始空闲状态。\n5.  在 3 个周期的稳定期成功完成后，FSM 必须立即将 `reset_out` 置为 `1`。\n6.  `reset_out` 脉冲必须精确地保持高电平 `M=2` 个连续时钟周期。\n7.  在 2 个周期的脉冲之后，`reset_out` 必须被撤销为 `0`。然后 FSM 必须保持在一个 `reset_out` 为 `0` 的状态，并且即使 `reset_in` 仍然为低电平，也不会开始新的复位序列。\n8.  只有在 `reset_in` 返回其非活动状态 (`1`) 后，FSM 才能返回其初始空闲状态，准备检测新的复位事件。\n\n根据这些要求，实现这个 Moore FSM 所需的最小状态数是多少？", "solution": "我们必须实现一个 Moore FSM，其输出仅取决于状态，并且其状态转换发生在时钟的上升沿。该行为可分为三个阶段：输入稳定验证、固定长度的输出脉冲，以及脉冲后的保持阶段，直到异步输入返回非活动状态。\n\n首先，为了对 $reset\\_in$ 的 $N=3$ 个连续低电平采样进行稳定验证，FSM 需要记住到目前为止已观察到的连续低电平采样的数量。在 Moore 机中，为确保仅在恰好 $N$ 个连续低电平后才采取行动，并在任何中间出现高电平时中止，系统必须能区分迄今为止连续低电平运行长度的 $N$ 个等价类：$0,1,\\ldots,N-1$。这意味着在置位复位信号之前需要 $N$ 个不同的状态。对于 $N=3$，这些状态是：一个代表计数为 $0$ 的空闲/就绪状态（输出为 $0$），一个代表计数为 $1$ 的状态（输出为 $0$），以及一个代表计数为 $2$ 的状态（输出为 $0$）。在第三个连续低电平出现时，状态直接转换到第一个脉冲状态；因此不需要一个单独的“计数为 $3$”的状态。\n\n其次，在一个 Moore FSM 中，复位脉冲必须被精确置位 $M=2$ 个周期。由于输出编码在状态中，并且必须持续精确的周期数，我们需要恰好 $M$ 个输出为 $1$ 的不同状态按顺序链接起来，以对这些周期进行计数。对于 $M=2$，我们需要两个这样的状态，它们的输出都为 $1$，在连续的上升沿上无条件地进行 $R_{1}\\rightarrow R_{2}$ 转换。\n\n第三，在脉冲之后，FSM 必须撤销输出，并保持在一个状态，在该状态下，即使 $reset\\_in$ 仍然为低电平，也不能开始新的复位序列，并且只有在 $reset\\_in$ 返回高电平后，才能返回到初始空闲状态。这个“等待释放”状态的输出为 $0$，但其行为与空闲状态不同：如果 $reset\\_in=0$，它必须保持在该状态（不开始验证），只有当 $reset\\_in=1$ 时，它才可以转换到空闲状态。由于其转换行为与空闲状态不同，它不能与空闲状态或任何验证状态合并，因此需要一个独立的状态。\n\n设 $S$ 为状态总数。根据上述推理可得\n$$\nS = N + M + 1.\n$$\n代入 $N=3$ 和 $M=2$ 可得\n$$\nS = 3 + 2 + 1 = 6.\n$$\n若不违反所要求的行为，则无法进行进一步的状态合并：三个置位前状态可以通过达到置位所需的额外连续低电平数来两两区分；两个脉冲状态是为了强制输出 `1` 恰好持续两个周期；保持状态与空闲状态可区分，因为它在 `reset_in` 为低电平时绝不能启动新序列。", "answer": "$$\\boxed{6}$$", "id": "1965993"}]}