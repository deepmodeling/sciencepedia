{"hands_on_practices": [{"introduction": "为了掌握规约有序二元决策图 (ROBDD)，让我们从一个基础练习开始。我们将为一个在数字逻辑中非常常见的组件——2选1多路选择器——构建其ROBDD。这个实践练习 [@problem_id:1957453] 将通过应用香农展开 (Shannon expansion) 和化简规则，将一个标准的布尔函数 $F(S, I_0, I_1) = (\\lnot S \\land I_0) \\lor (S \\land I_1)$ 转换为其规范的ROBDD形式，从而巩固您对核心构建过程的理解。", "problem": "一个二对一多路复用器 (MUX) 是一种数字逻辑电路，它从两个数据输入 $I_0$ 或 $I_1$ 中选择一个，并将其路由到单个输出 $F$。选择由一个选择线 $S$ 控制。该多路复用器的布尔函数由 $F(S, I_0, I_1) = (\\lnot S \\land I_0) \\lor (S \\land I_1)$ 给出。\n\n您的任务是确定此函数的简约有序二元决策图 (ROBDD) 的结构。构建过程必须遵循严格的变量顺序 $S < I_0 < I_1$，这意味着在从根到终端的任何路径上， $S$ 的节点必须出现在 $I_0$ 节点的上方，而 $I_0$ 的节点又必须出现在 $I_1$ 节点的上方。\n\n每个候选 ROBDD 的结构在下面使用一组非终端节点和两个终端节点（`0` 代表逻辑假，`1` 代表逻辑真）进行描述。每个非终端节点通过其标签、其测试的变量以及其低位和高位子节点来描述，格式为 `(label: Variable, Low-child, High-child)`。低位子节点对应于变量为 0 的情况，高位子节点对应于变量为 1 的情况。函数 $F$ 的图的根节点始终是标记为 `n1` 的节点。\n\n下列哪个描述正确表示了具有给定变量顺序的二对一多路复用器的 ROBDD？\n\nA. 该图由 3 个非终端节点（`n1`, `n2`, `n3`）和 2 个终端节点（`0`, `1`）组成。\n- `n1`: (Variable: $S$, Low-child: `n2`, High-child: `n3`)\n- `n2`: (Variable: $I_0$, Low-child: `0`, High-child: `1`)\n- `n3`: (Variable: $I_1$, Low-child: `0`, High-child: `1`)\n\nB. 该图由 4 个非终端节点（`n1`, `n2`, `n3`, `n4`）和 2 个终端节点（`0`, `1`）组成。\n- `n1`: (Variable: $S$, Low-child: `n2`, High-child: `n3`)\n- `n2`: (Variable: $I_0$, Low-child: `0`, High-child: `1`)\n- `n3`: (Variable: $I_0$, Low-child: `n4`, High-child: `n4`)\n- `n4`: (Variable: $I_1$, Low-child: `0`, High-child: `1`)\n\nC. 该图由 4 个非终端节点（`n1`, `n2`, `n3`, `n4`）和 2 个终端节点（`0`, `1`）组成。\n- `n1`: (Variable: $I_0$, Low-child: `n2`, High-child: `n3`)\n- `n2`: (Variable: $S$, Low-child: `0`, High-child: `n4`)\n- `n3`: (Variable: $S$, Low-child: `1`, High-child: `n4`)\n- `n4`: (Variable: $I_1$, Low-child: `0`, High-child: `1`)\n\nD. 该图由 3 个非终端节点（`n1`, `n2`, `n3`）和 2 个终端节点（`0`, `1`）组成。\n- `n1`: (Variable: $S$, Low-child: `n2`, High-child: `n3`)\n- `n2`: (Variable: $I_0$, Low-child: `0`, High-child: `1`)\n- `n3`: (Variable: $I_0$, Low-child: `1`, High-child: `0`)", "solution": "给定二对一多路复用器的布尔函数：\n$$\nF(S, I_0, I_1) = (\\lnot S \\land I_0) \\lor (S \\land I_1),\n$$\n要求的变量顺序为 $S < I_0 < I_1$，这意味着在从根到终端的任何路径上，变量必须按照 $S$、然后 $I_0$、然后 $I_1$ 的非递减顺序出现。在简约有序二元决策图 (ROBDD) 中，我们使用关于根变量的 Shannon 分解，并应用简化规则：合并同构子图和消除低位与高位子节点相同的节点。\n\n首先，对 $F$ 关于 $S$进行分解：\n- 当 $S=0$ 时：\n$$\nF|_{S=0} = (\\lnot 0 \\land I_0) \\lor (0 \\land I_1) = (1 \\land I_0) \\lor 0 = I_0.\n$$\n因此，根节点的低位子节点（对应 $S=0$）必须表示 $I_0$。在 $S < I_0 < I_1$ 的顺序下，编码 $I_0$ 的规范节点是一个测试 $I_0$ 的非终端节点，其低位子节点为 $0$，高位子节点为 $1$。\n\n- 当 $S=1$ 时：\n$$\nF|_{S=1} = (\\lnot 1 \\land I_0) \\lor (1 \\land I_1) = (0 \\land I_0) \\lor I_1 = I_1.\n$$\n因此，根节点的高位子节点（对应 $S=1$）必须表示 $I_1$。在相同的顺序下，我们可以在这个分支上跳过 $I_0$，因为函数在这里不依赖于 $I_0$；编码 $I_1$ 的规范节点是一个测试 $I_1$ 的非终端节点，其低位子节点为 $0$，高位子节点为 $1$。\n\n因此，ROBDD 的结构是：\n- 根节点测试 $S$，其低位子节点是一个测试 $I_0$ 且子节点为 $(0,1)$ 的节点，高位子节点是一个测试 $I_1$ 且子节点为 $(0,1)$ 的节点。\n\n现在评估各个选项：\n\n- 选项 A 完全符合此结构：\n  - `n1`: $S$，低位子节点为 `n2`，高位子节点为 `n3`。\n  - `n2`: $I_0$，子节点为 $(0,1)$，表示 $I_0$。\n  - `n3`: $I_1$，子节点为 $(0,1)$，表示 $I_1$。\n  这遵守了变量顺序且是简化的。\n\n- 选项 B 包含一个额外的节点 `n3`，该节点测试 $I_0$，其低位和高位子节点均为 `n4`。这违反了简化规则，因为在 ROBDD 中，低位和高位子节点相同的节点必须被消除。因此 B 不是简化的。\n\n- 选项 C 的根节点测试 $I_0$，这违反了要求的变量顺序 $S < I_0 < I_1$。因此 C 无效。\n\n- 选项 D 中 $S=1$ 的高位分支指向一个测试 $I_0$ 且子节点为 $(1,0)$ 的节点，该节点编码的是 $\\lnot I_0$ 而不是 $I_1$。因此它不表示给定的函数。\n\n因此，在指定变量顺序下，正确的 ROBDD 如选项 A 所示。", "answer": "$$\\boxed{A}$$", "id": "1957453"}, {"introduction": "ROBDD不仅是一种表示方法，更是一种强大的分析工具。其关键应用之一是逻辑优化，通过识别并移除冗余变量可以显著简化电路。在此练习 [@problem_id:1957460] 中，您将利用ROBDD的构建过程来判断一个给定的布尔函数是否包含冗余变量，这一特性在最终的图结构中会变得一目了然。", "problem": "在数字逻辑设计中，布尔函数可以用简化有序二元决策图（ROBDD）进行图形化表示，这是一种规范表示形式，通常比真值表或标准布尔表达式更为紧凑。创建ROBDD的过程包括构建一个有序二元决策图（OBDD），然后应用简化规则。\n\n有序二元决策图是一个有向无环图，其中非终端节点用输入变量标记，并有两个子节点（低位对应变量=0，高位对应变量=1），且在任何路径上变量都以固定的顺序出现。ROBDD是一个已完全应用以下两条规则的OBDD：\n1.  **合并规则：** 任何具有相同变量标签、相同低位子节点和相同高位子节点的两个节点，都被合并成一个单一节点。\n2.  **消除规则：** 任何其低位子节点和高位子节点指向同一节点的节点，都将被消除，并且其入边将重定向到其子节点。\n\n如果一个函数的输出值不依赖于某个变量，则该变量被认为是函数中的冗余变量。这种冗余性在最终的ROBDD结构中表现为完全不存在任何以该变量标记的节点。\n\n考虑一个用于在工业系统中触发安全警报的布尔函数 $f(A,B,C)$：\n$$f(A,B,C) = (A \\land B) \\lor (A \\land \\overline{B} \\land C) \\lor (\\overline{A} \\land B)$$\n\n你的任务是分析这个函数。首先，使用变量顺序 $A < B < C$（意味着 $A$ 最靠近根节点）为函数 $f$ 构建ROBDD。然后，根据最终ROBDD的结构，确定哪个输入变量是冗余的（如果有的话）。\n\n下列哪个陈述是正确的？\n\nA. 变量A是冗余的。\n\nB. 变量B是冗余的。\n\nC. 变量C是冗余的。\n\nD. 没有变量是冗余的。", "solution": "给定的函数是\n$$\nf(A,B,C)=(A \\land B) \\lor (A \\land \\overline{B} \\land C) \\lor (\\overline{A} \\land B).\n$$\n首先进行代数化简以观察函数依赖性。合并包含 $B$ 的项：\n$$\n(A \\land B) \\lor (\\overline{A} \\land B) = B \\land (A \\lor \\overline{A}) = B,\n$$\n因此\n$$\nf = B \\lor (A \\land \\overline{B} \\land C).\n$$\n使用吸收律 $X \\lor (\\overline{X} \\land Y) = X \\lor Y$，令 $X=B$ 且 $Y=A \\land C$，我们得到\n$$\nf = B \\lor (A \\land C).\n$$\n因此，在这个简化形式中，$f$ 依赖于所有三个变量，但我们现在根据变量顺序 $A<B<C$ 构建ROBDD，以通过图结构来确认冗余性。\n\n对变量 $A$ 使用香农展开：\n$$\nf = (\\lnot A \\land f_{A=0}) \\lor (A \\land f_{A=1}),\n$$\n其中\n$$\nf_{A=1} = f(1,B,C) = B \\lor (\\overline{B} \\land C) = B \\lor C,\n$$\n通过吸收律 $X \\lor (\\overline{X} \\land Y) = X \\lor Y$，令 $X=B$，$Y=C$；以及\n$$\nf_{A=0} = f(0,B,C) = B.\n$$\n因此，以 $A$ 为根的OBDD具有：\n- 低位子节点（对应 $A=0$）计算 $f_{A=0}=B$。\n- 高位子节点（对应 $A=1$）计算 $f_{A=1}=B \\lor C$。\n\n在固定顺序 $B<C$ 下构建子图：\n1. 对于 $f_{A=0}=B$：一个标记为 $B$ 的节点，其低位边指向终端 $0$，高位边指向终端 $1$。\n2. 对于 $f_{A=1}=B \\lor C$：一个标记为 $B$ 的节点，其低位边（对应 $B=0$）引向函数 $C$（由一个标记为 $C$ 的节点实现，该节点的低位边指向 $0$，高位边指向 $1$），其高位边（对应 $B=1$）引向终端 $1$。\n\n应用ROBDD简化规则：\n- 消除规则：没有非终端节点的低位和高位子节点相同，因此没有节点被消除。\n- 合并规则：唯一的 $C$ 节点（低位 $\\to 0$，高位 $\\to 1$）在其出现的地方被共享，但它没有被消除；两个 $B$ 节点没有被合并，因为它们的子节点对不同：一个的子节点是 $(0,1)$，另一个是 $(C,1)$。$A$ 节点保留下来，因为它的低位和高位子节点是不同的子图（$B$ 对比 $B \\lor C$）。\n\n在最终的ROBDD中，根部有一个标记为 $A$ 的节点，至少有一个标记为 $B$ 的节点（在两个分支中都有），以及一个标记为 $C$ 的节点（在 $A=1, B=0$ 的子图中）。因此，所有三个变量都出现在最终的ROBDD中，所以没有变量是冗余的。\n\n等价地，从 $f=B \\lor (A \\land C)$ 来看：\n- 令 $(A,C)=(0,0)$，得到 $f=B$，所以 $f$ 依赖于 $B$。\n- 令 $(B,C)=(0,1)$，得到 $f=A$，所以 $f$ 依赖于 $A$。\n- 令 $(A,B)=(1,0)$，得到 $f=C$，所以 $f$ 依赖于 $C$。\n\n因此，没有变量是冗余的。", "answer": "$$\\boxed{D}$$", "id": "1957460"}, {"introduction": "除了构建ROBDD，一项至关重要的技能是解读它们以分析函数属性，这是其在形式化验证和系统分析中应用的核心。这个实践练习 [@problem_id:1957479] 将挑战您从一个给定的ROBDD出发，逆向计算满足特定条件的“满足赋值”(satisfying assignments) 的数量。这展示了ROBDD这种数据结构如何支持对布尔函数进行强大的定量推理。", "problem": "缩减序二元决策图（ROBDD）是一种用来表示关于一组变量的布尔函数的数据结构。它是一个有向无环图，有两个终端节点，一个 `0-terminal` 和一个 `1-terminal`。所有其他节点都是非终端节点。每个非终端节点 `U` 都有唯一的标识，并与一个布尔变量 `var(U)` 相关联。它有两条出边，分别指向其子节点：一个 `low` 子节点 `low(U)`，对应于赋值 `var(U) = 0`；以及一个 `high` 子节点 `high(U)`，对应于赋值 `var(U) = 1`。在 ROBDD 中，所有变量存在一个严格的全序关系，并且对于任何非终端节点 `U`，如果其子节点也是非终端节点，那么 `U` 的变量在排序中必须位于其子节点变量之前。\n\n考虑一个布尔函数 $f(x_1, x_2, x_3, x_4)$，它由一个变量顺序为 $x_1 < x_2 < x_3 < x_4$ 的 ROBDD 表示。该 ROBDD 的结构定义如下：\n\n-   **终端节点**：一个 `0-terminal` (T0) 和一个 `1-terminal` (T1)。\n-   **节点 N4**：`var(N4) = x_4`，`low(N4) = T0`，`high(N4) = T1`。\n-   **节点 N3**：`var(N3) = x_3`，`low(N3) = T0`，`high(N3) = N4`。\n-   **节点 N2**：`var(N2) = x_2`，`low(N2) = N3`，`high(N2) = T1`。\n-   **节点 N1 (根节点)**：`var(N1) = x_1`，`low(N1) = N3`，`high(N1) = N2`。\n\n如果从根节点 N1 开始，根据变量的赋值情况沿着 `low` 或 `high` 分支追踪的路径最终到达 `1-terminal`，则称该对变量 $(x_1, x_2, x_3, x_4)$ 的布尔值赋值满足该函数。\n\n计算函数 $f$ 的满足条件的赋值总数，其中四个变量（$x_1, x_2, x_3, x_4$）中恰好有三个被赋值为 1。", "solution": "为了确定函数 $f$ 的表达式，我们从根节点 N1 开始，根据变量 $x_1$ 的值进行情况分析。令 $f_U$ 表示以节点 $U$ 为根的子图所代表的函数。\n\n*   当 $x_1=0$ 时，我们遵循低分支到节点 N3。因此，$f|_{x_1=0}$ 等于 N3 代表的函数。N3 代表的函数是 $f_{N3} = (\\lnot x_3 \\land 0) \\lor (x_3 \\land f_{N4}) = x_3 \\land x_4$（因为 N4 代表函数 $f_{N4} = x_4$）。所以，$f|_{x_1=0} = x_3 \\land x_4$。\n\n*   当 $x_1=1$ 时，我们遵循高分支到节点 N2。因此，$f|_{x_1=1}$ 等于 N2 代表的函数。N2 代表的函数是 $f_{N2} = (\\lnot x_2 \\land f_{N3}) \\lor (x_2 \\land 1) = (\\lnot x_2 \\land x_3 \\land x_4) \\lor x_2$。根据吸收律 $A \\lor (\\lnot A \\land B) = A \\lor B$，此式可简化为 $x_2 \\lor (x_3 \\land x_4)$。所以，$f|_{x_1=1} = x_2 \\lor (x_3 \\land x_4)$。\n\n我们需要计算在 $(x_1, x_2, x_3, x_4)$ 中恰好有三个值为 1 且满足 $f=1$ 的赋值数量。总共有 $\\binom{4}{3}=4$ 种这样的赋值；我们通过对 $x_1$ 进行情况分析来验证哪些赋值满足 $f$。\n\n情况 $x_1=0$：为了使总共有三个 1，我们必须有 $(x_2, x_3, x_4)=(1,1,1)$。当 $x_1=0$ 时，函数简化为 $f=x_3 \\land x_4$，当 $x_3=1$ 和 $x_4=1$ 时，该函数等于 1。因此，这个唯一的赋值满足 $f$。这贡献了 1 个满足条件的赋值。\n\n情况 $x_1=1$：为了使总共有三个 1，$(x_2, x_3, x_4)$ 必须恰好有两个 1。可能的赋值有 $(1,1,0)$，$(1,0,1)$ 和 $(0,1,1)$。当 $x_1=1$ 时，函数简化为 $f=x_2 \\lor (x_3 \\land x_4)$。逐一计算：\n- $(x_2,x_3,x_4)=(1,1,0)$ 得到 $f=1\\lor(1\\land 0)=1$。\n- $(1,0,1)$ 得到 $f=1\\lor(0\\land 1)=1$。\n- $(0,1,1)$ 得到 $f=0\\lor(1\\land 1)=1$。\n所有这三种赋值都满足 $f$。这贡献了 3 个满足条件的赋值。\n\n将两种情况相加，恰好有三个 1 的满足条件的赋值总数为 $1+3=4$。", "answer": "$$\\boxed{4}$$", "id": "1957479"}]}