{"hands_on_practices": [{"introduction": "多级逻辑优化的第一步通常是代数因式分解，但优化的结果在很大程度上取决于选择哪些公因子。本练习将通过一个具体实例，展示对同一个布尔函数采用不同的因式分解策略，会如何导致不同的电路成本（以文字量计算）。通过这个实践，你将体会到在逻辑综合中做出正确选择的重要性。[@problem_id:1948290]", "problem": "在数字电路设计中，多级逻辑优化是一种用于降低电路复杂度和成本的技术。一个常见的成本度量标准是文字量。一个文字是布尔表达式中变量或其补元的单次出现。一个表达式的文字量是所有文字的总和。例如，表达式 $F = a'b + c$ 有3个文字（$a'$、$b$ 和 $c$）。\n\n考虑一个以积之和形式给出的四变量布尔函数：\n$$F(w, x, y, z) = wx + wy + wz + xyz$$\n您的任务是探索两种不同的因式分解路径，为该函数创建两种不同的多级形式，并比较它们的文字量。\n\n路径1：从原始函数 $F$ 开始，通过从所有包含变量 $w$ 的项中提取该变量，创建一个新表达式 $F_1$。\n\n路径2：再次从原始函数 $F$ 开始，通过从所有包含变量 $x$ 的项中提取该变量，创建一个新表达式 $F_2$。\n\n确定最终表达式 $F_1$ 的文字量和表达式 $F_2$ 的文字量。您的最终答案应为一对整数，按顺序分别表示 $F_1$ 和 $F_2$ 的文字量。", "solution": "给定积之和形式的布尔函数：\n$$F(w,x,y,z)=wx+wy+wz+xyz.$$\n一个文字是表达式中变量或其补元的任意一次出现。一个多级表达式的文字量是在整个因式分解形式中所有文字出现的总数。\n\n路径1：从所有出现 $w$ 的项中提取 $w$。利用分配律 $ab+ac=a(b+c)$，\n$$wx+wy+wz = w(x+y+z).$$\n因此，\n$$F_{1}=w(x+y+z)+xyz.$$\n$F_{1}$ 的文字量：\n- 在 $w(x+y+z)$ 中，$w$ 出现1次，括号内的 $x,y,z$ 各出现1次，总共贡献 $1+3=4$ 个文字。\n- 在 $xyz$ 中，有3个文字。\n$F_{1}$ 的总文字量：$4+3=7$。\n\n路径2：从所有出现 $x$ 的项中提取 $x$。在原始函数 $F$ 中，$x$ 出现在 $wx$ 和 $xyz$ 中。利用 $ab+ac=a(b+c)$，\n$$wx+xyz = x(w+yz).$$\n因此，\n$$F_{2}=wy+wz+x(w+yz).$$\n$F_{2}$ 的文字量：\n- $wy$ 贡献2个文字。\n- $wz$ 贡献2个文字。\n- 在 $x(w+yz)$ 中，$x$ 出现1次，括号内的 $w$ 贡献1个文字，而 $yz$ 贡献2个文字，小计为 $1+1+2=4$ 个文字。\n$F_{2}$ 的总文字量：$2+2+4=8$。\n\n因此，$F_{1}$ 的文字量是7，$F_{2}$ 的文字量是8，按此顺序排列。", "answer": "$$\\boxed{\\begin{pmatrix} 7 & 8 \\end{pmatrix}}$$", "id": "1948290"}, {"introduction": "在实际电路设计中，我们通常使用比文字量更精确的成本度量，例如与电路面积直接相关的总门输入数。本练习引入了具体的技术库限制（例如，仅有2输入和3输入门），要求你通过识别和提取公共子表达式来寻找最优的多级逻辑结构。这是现代逻辑综合工具中一项核心的高级优化技术，能让你更深入地理解从抽象表达式到物理实现的映射过程。[@problem_id:1948263]", "problem": "您是一名逻辑设计工程师，任务是为一个特定的现场可编程门阵列（FPGA）架构优化一个数字电路。该电路实现了八个变量A、B、C、D、E、G、H和I的布尔函数 $F$，其初始“积之和”形式如下：\n\n$$F(A, B, C, D, E, G, H, I) = ABC'D + ABGHI + EGHI + EC'D$$\n\n您的工艺库受到限制，仅提供2输入和3输入的与门，以及2输入和3输入的或门。主输入变量以其原变量（例如，A）和反变量（例如，A'）两种形式提供；因此，在您的分析中不应包含反相器（非门）的成本。\n\n主要的优化目标是最小化电路的总门输入数。总门输入数定义为实现中所使用的每个门的输入数量之和。对于任何需要超过3个输入的逻辑运算（例如，一个4输入与门），必须将其分解为由可用的2输入和3输入门组成的级联。这种分解必须以最小化该特定运算所需门数量的方式进行，这通过优先使用3输入门来实现。\n\n考虑以下三种基于代数因式分解的优化策略：\n- **策略I**：提取出公共子表达式 $X = C'D$。\n- **策略II**：提取出公共子表达式 $Y = GHI$。\n- **策略III**：同时提取出 $X = C'D$ 和 $Y = GHI$，然后对得到的表达式进行第二级因式分解。\n\n哪种策略能得到最优电路（即，最低的总门输入数），该数值是多少？\n\nA. 策略I，总门输入数为23。\n\nB. 策略II，总门输入数为20。\n\nC. 未优化的两级电路已经是最优的，总门输入数为25。\n\nD. 策略III，总门输入数为15。\n\nE. 策略III，总门输入数为13。", "solution": "已知 $F(A,B,C,D,E,G,H,I)=ABC'D+ABGHI+EGHI+EC'D$，只允许使用2输入和3输入的与/或门，且反相器无成本。对于任何 $k>3$ 的 $k$ 输入与/或门，我们通过使用尽可能多的3输入门来分解以最小化门数，从而得到以下最小门输入数：\n- $2$-输入与/或门：$2$\n- $3$-输入与/或门：$3$\n- $4$-输入与/或门：$3+2=5$\n- $5$-输入与/或门：$3+2+2=7$\n\n基准（未优化的两级SOP）：\n- $ABC'D$：4输入与门 $\\rightarrow 5$\n- $ABGHI$：5输入与门 $\\rightarrow 7$\n- $EGHI$：4输入与门 $\\rightarrow 5$\n- $EC'D$：3输入与门 $\\rightarrow 3$\n- 对四个乘积项求或：4输入或门 $\\rightarrow 5$\n总计：$5+7+5+3+5=25$。\n\n策略I（提取因子 $X=C'D$）：\n代数因式分解：\n$$F=X(AB+E)+ABGHI+EGHI.$$\n实现：\n- $X=C'D$：2输入与门 $\\rightarrow 2$\n- $AB$：2输入与门 $\\rightarrow 2$\n- $(AB)+E$：2输入或门 $\\rightarrow 2$\n- $X(AB+E)$：2输入与门 $\\rightarrow 2$\n- $ABGHI$：5输入与门 $\\rightarrow 7$\n- $EGHI$：4输入与门 $\\rightarrow 5$\n- 对三项求或：3输入或门 $\\rightarrow 3$\n总计：$2+2+2+2+7+5+3=23$。\n\n策略II（提取因子 $Y=GHI$）：\n代数因式分解：\n$$F=ABY+EY+ABC'D+EC'D=Y(AB+E)+ABC'D+EC'D.$$\n实现：\n- $Y=GHI$：3输入与门 $\\rightarrow 3$\n- $AB$：2输入与门 $\\rightarrow 2$\n- $(AB)+E$：2输入或门 $\\rightarrow 2$\n- $Y(AB+E)$：2输入与门 $\\rightarrow 2$\n- $ABC'D$：4输入与门 $\\rightarrow 5$\n- $EC'D$：3输入与门 $\\rightarrow 3$\n- 对三项求或：3输入或门 $\\rightarrow 3$\n总计：$3+2+2+2+5+3+3=20$。\n\n策略III（同时提取因子 $X=C'D$ 和 $Y=GHI$，然后进行第二级因式分解）：\n第一步分解：\n$$F=X(AB+E)+Y(AB+E)=(AB+E)(X+Y).$$\n实现：\n- $AB$：2输入与门 $\\rightarrow 2$\n- $(AB)+E$：2输入或门 $\\rightarrow 2$\n- $X=C'D$：2输入与门 $\\rightarrow 2$\n- $Y=GHI$：3输入与门 $\\rightarrow 3$\n- $X+Y$：2输入或门 $\\rightarrow 2$\n- $(AB+E)(X+Y)$：2输入与门 $\\rightarrow 2$\n总计：$2+2+2+3+2+2=13$。\n\n比较总数：基准为 $25$，策略I为 $23$，策略II为 $20$，策略III为 $13$。最优的策略是策略III，其总门输入数为 $13$。", "answer": "$$\\boxed{E}$$", "id": "1948263"}, {"introduction": "电路设计中一个根本性的权衡是面积与速度之间的博弈：为减小面积而进行的优化可能会损害电路的性能（速度）。本练习将引导你完成一个两步优化过程：首先通过因式分解减小电路规模，然后在识别出性能瓶颈（关键路径）后，重构部分逻辑以满足特定的延迟目标。这个过程完美地诠释了性能驱动优化的核心思想，是所有数字系统设计师必须掌握的关键技能。[@problem_id:1948269]", "problem": "在数字逻辑综合中，电路面积（与门和输入的数量相关）和电路速度（传播延迟）之间存在一个关键的权衡。多级逻辑优化通常涉及分解布尔表达式以减小面积，但这有时会增加关键路径的延迟。\n\n考虑一个包含五个变量 $a, b, c, d, x$ 的布尔函数 $F$，其初始形式为积之和（SOP）：\n$F(a, b, c, d, x) = a'b'c + a'b'd + cx$\n\n对于所有计算，请使用以下约定和一个简化的延迟模型：\n- 布尔运算表示为：`+` 表示或（OR），并置（例如，$xy$）表示与（AND），撇号 `'` 表示非（NOT）。\n- 任何具有任意扇入（输入数量）的基本逻辑门（与门、或门、非门）都具有一个单位的统一传播延迟 $\\tau$。\n- 所有主输入变量及其反相（例如，$a$和$a'$）被认为在时间 $t=0$ 时可用。\n\n你的任务是按照以下两个步骤，为了实现高性能，重新综合该函数：\n1. 首先，对 $F$ 的初始SOP表达式进行代数分解，以创建一个等价的表达式 $F_{\\text{factored}}$，该表达式使总文字出现次数最小化。\n2. 步骤1中的分解过程产生了一条新的关键路径，增加了电路的整体延迟。从你的表达式 $F_{\\text{factored}}$ 出发，重构逻辑网络以创建一个最终表达式 $F_{\\text{optimized}}$，使得从任何主输入到输出 $F$ 的最大信号传播延迟不超过 $2\\tau$。请注意，你的重构只应修改位于 $F_{\\text{factored}}$ 网络关键延迟路径上的逻辑。\n\n请提供 $F_{\\text{optimized}}$ 的最终表达式。", "solution": "我们从给定的SOP表达式开始：\n$$F(a,b,c,d,x)=a'b'c+a'b'd+cx.$$\n\n步骤1（代数分解以最小化文字出现次数）：\n对前两项应用分配律 $AB C+AB D=AB(C+D)$：\n$$F=a'b'(c+d)+cx.$$\n文字数量比较：\n- 原始SOP：$a'b'c$ 有 $3$ 个文字，$a'b'd$ 有 $3$ 个文字，$cx$ 有 $2$ 个文字，总计 $8$ 个。\n- 分解形式：$a'b'(c+d)$ 贡献了 $a',b',c,d$ 共 $4$ 个文字，$cx$ 贡献了 $2$ 个，总计 $6$ 个。\n因此，$F_{\\text{factored}}=a'b'(c+d)+cx$ 最小化了总文字出现次数。\n\n在给定模型下对 $F_{\\text{factored}}$ 进行延迟分析（任何扇入的与/或/非门延迟均为 $\\tau$，所有输入及其反相在 $t=0$ 时可用）：\n- 用一个与门计算 $a'b'$：在 $t=\\tau$ 时准备就绪。\n- 用一个或门计算 $(c+d)$：在 $t=\\tau$ 时准备就绪。\n- 将这两者进行与运算形成 $a'b'(c+d)$：在 $t=2\\tau$ 时准备就绪。\n- 用一个与门计算 $cx$：在 $t=\\tau$ 时准备就绪。\n- 最后的或门组合 $a'b'(c+d)$ 和 $cx$：在通过 $a,b,c,d$ 的路径上，于 $t=3\\tau$ 时准备就绪；在通过 $x$ 的路径上，于 $t=2\\tau$ 时准备就绪。\n因此，通过输入 $a,b,c,d$ 经由 $a'b'(c+d)$ 的关键路径延迟是 $3\\tau$。\n\n步骤2（仅重构关键路径上的逻辑，以实现最大延迟不超过 $2\\tau$）：\n关键子网络是为最终的或门提供输入的分解项 $a'b'(c+d)$。为减小深度，将此项展开回两个乘积项，使得所有乘积项都输入到一个最终的或门中（一个两级SOP结构），同时保持非关键分支 $cx$ 不变：\n$$a'b'(c+d)=a'b'c+a'b'd.$$\n因此\n$$F_{\\text{optimized}}=a'b'c+a'b'd+cx.$$\n$F_{\\text{optimized}}$ 的延迟分析：\n- 每个乘积项（$a'b'c$、$a'b'd$、$cx$）都由一个与门根据在 $t=0$ 时可用的主输入计算得出，因此每个乘积项在 $t=\\tau$ 时准备就绪。\n- 一个最终的三输入或门在 $t=2\\tau$ 时产生输出 $F$。\n因此，从任何主输入到 $F$ 的最大传播延迟为 $2\\tau$，符合要求。只有原始关键路径上的逻辑（$a'b'(c+d)$ 和最终的或门）被修改；$cx$ 分支保持不变。", "answer": "$$\\boxed{a'b'c+a'b'd+cx}$$", "id": "1948269"}]}