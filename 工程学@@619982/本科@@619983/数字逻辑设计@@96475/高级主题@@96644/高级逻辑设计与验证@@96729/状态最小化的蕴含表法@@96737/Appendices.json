{"hands_on_practices": [{"introduction": "理论知识需要通过实践来巩固。本节的第一个练习将带领你完整地走一遍状态最小化的全过程。我们将从一个标准的中型米利（Mealy）型有限状态机入手，系统地应用蕴含图法（或等价的划分法），从根据输出建立初始划分，到逐步求精，最终确定等价状态集。这个练习旨在帮助你掌握将状态机描述转化为最小化等价形式的核心技能，这是数字电路设计中至关重要的一步。[@problem_id:1942648]", "problem": "一个数字时序电路控制器由下表所示的Mealy型有限状态机的状态转换表描述。该机器有一个输入 $x$ 和一个输出 $z$。状态被标记为 A、B、C、D、E、F 和 G。在制造前，需要一个优化步骤，通过最小化机器描述中的状态数量来减少逻辑门的数量。\n\n| 现态 (PS) | 当 $x=0$ 时的次态 (NS) | 当 $x=1$ 时的次态 (NS) | 当 $x=0$ 时的输出 ($z$) | 当 $x=1$ 时的输出 ($z$) |\n|:----------:|:------------------:|:------------------:|:-------------------:|:-------------------:|\n|      A     |          E         |          C         |          0          |          1          |\n|      B     |          C         |          A         |          0          |          1          |\n|      C     |          F         |          B         |          1          |          0          |\n|      D     |          G         |          F         |          0          |          1          |\n|      E     |          B         |          D         |          1          |          1          |\n|      F     |          E         |          G         |          0          |          1          |\n|      G     |          A         |          D         |          1          |          0          |\n\n确定与此表描述的状态机等价的最简状态机中的状态数量。", "solution": "设该Mealy机由次态函数 $\\delta$ 和输出函数 $\\lambda$ 描述。如果对于每个输入串 $w \\in \\{0,1\\}^{*}$，从状态 $p$ 和 $q$ 开始在 $w$ 作用下产生的输出序列是相同的，则称这两个状态 $p$ 和 $q$ 是等价的。Mealy机的标准划分细化算法按如下步骤进行。\n\n首先，通过将对每个输入符号具有相同输出行为的状态分组，形成初始划分 $P_{0}$。根据表，输出对 $(\\lambda(s,0),\\lambda(s,1))$ 分别是：\n- $A:(0,1)$, $B:(0,1)$, $D:(0,1)$, $F:(0,1)$,\n- $C:(1,0)$, $G:(1,0)$,\n- $E:(1,1)$.\n因此，\n$$\nP_{0}=\\big\\{\\{A,B,D,F\\},\\{C,G\\},\\{E\\}\\big\\}.\n$$\n\n通过分裂块来细化 $P_{0}$，若块中的状态在输入0和1下对应的次态所属的块对不同，则分裂该块。设 $P_{0}$ 的块表示为 $X=\\{A,B,D,F\\}$，$Y=\\{C,G\\}$ 和 $Z=\\{E\\}$。对每个状态 $s$，计算其标记\n$$\n\\sigma_{P_{0}}(s)=\\big([\\delta(s,0)]_{P_{0}},[\\delta(s,1)]_{P_{0}}\\big),\n$$\n其中 $[\\cdot]_{P_{0}}$ 表示包含所示次态的 $P_{0}$ 中的块。\n\n使用给定的状态转换表：\n- $A$: $\\delta(A,0)=E\\in Z$，$\\delta(A,1)=C\\in Y$，所以 $\\sigma_{P_{0}}(A)=(Z,Y)$。\n- $B$: $\\delta(B,0)=C\\in Y$，$\\delta(B,1)=A\\in X$，所以 $\\sigma_{P_{0}}(B)=(Y,X)$。\n- $D$: $\\delta(D,0)=G\\in Y$，$\\delta(D,1)=F\\in X$，所以 $\\sigma_{P_{0}}(D)=(Y,X)$。\n- $F$: $\\delta(F,0)=E\\in Z$，$\\delta(F,1)=G\\in Y$，所以 $\\sigma_{P_{0}}(F)=(Z,Y)$。\n- $C$: $\\delta(C,0)=F\\in X$，$\\delta(C,1)=B\\in X$，所以 $\\sigma_{P_{0}}(C)=(X,X)$。\n- $G$: $\\delta(G,0)=A\\in X$，$\\delta(G,1)=D\\in X$，所以 $\\sigma_{P_{0}}(G)=(X,X)$。\n- $E$: $\\delta(E,0)=B\\in X$, $\\delta(E,1)=D\\in X$, 所以 $\\sigma_{P_{0}}(E)=(X,X)$, 但 E 由于其独特的输出已经是一个单元素块。\n\n因此 $X$ 分裂成两个块 $\\{A,F\\}$ 和 $\\{B,D\\}$，而 $Y$ 和 $Z$ 保持不变。细化后的划分为\n$$\nP_{1}=\\big\\{\\{A,F\\},\\{B,D\\},\\{C,G\\},\\{E\\}\\big\\}.\n$$\n\n使用 $P_{1}$ 再次进行细化。将这些块表示为 $X_{1}=\\{A,F\\}$，$X_{2}=\\{B,D\\}$，$Y=\\{C,G\\}$，$Z=\\{E\\}$。计算\n$$\n\\sigma_{P_{1}}(s)=\\big([\\delta(s,0)]_{P_{1}},[\\delta(s,1)]_{P_{1}}\\big).\n$$\n根据表：\n- $A$: $(Z,Y)$；$F$: $(Z,Y)$，所以 $A$ 和 $F$ 保持在同一块中。\n- $B$: $(Y,X_{1})$；$D$: $(Y,X_{1})$，所以 $B$ 和 $D$ 保持在同一块中。\n- $C$: $(X_{1},X_{2})$；$G$: $(X_{1},X_{2})$，所以 $C$ 和 $G$ 保持在同一块中。\n- $E$: $(X_{2},X_{2})$，是一个单元素块。\n\n没有发生进一步的分裂，因此 $P_{1}$ 是稳定的，并且是最终的最简划分。因此，等价的最简Mealy机的状态数等于 $P_{1}$ 中块的数量，即4。", "answer": "$$\\boxed{4}$$", "id": "1942648"}, {"introduction": "状态最小化的基本原理是通用的，但应用于不同类型的状态机时，其初始步骤会略有差异。这个练习将我们的注意力转向摩尔（Moore）型有限状态机。通过解决这个问题，你将练习如何处理摩尔机——其状态等价的初始判断仅基于状态本身的输出，而非米利机中基于“输入-输出”对。这个练习突出了方法论上的一个关键区别，加深你对两种状态机模型下算法应用的理解。[@problem_id:1942672]", "problem": "一个摩尔型时序电路由一个定义其行为的状态表来描述。该机器有四个状态，表示为 $S_0, S_1, S_2, S_3$。它接受一个单个二进制输入 $x \\in \\{0, 1\\}$，并产生一个单个二进制输出 $z$。每个状态的输出 $z$ 如下：$z(S_0) = 0$，$z(S_1) = 1$，$z(S_2) = 0$，以及 $z(S_3) = 1$。状态转换定义如下：\n\n- 当当前状态为 $S_0$ 时：如果输入 $x=0$，下一状态为 $S_1$；如果 $x=1$，下一状态为 $S_0$。\n- 当当前状态为 $S_1$ 时：如果输入 $x=0$，下一状态为 $S_0$；如果 $x=1$，下一状态为 $S_1$。\n- 当当前状态为 $S_2$ 时：如果输入 $x=0$，下一状态为 $S_3$；如果 $x=1$，下一状态为 $S_2$。\n- 当当前状态为 $S_3$ 时：如果输入 $x=0$，下一状态为 $S_2$；如果 $x=1$，下一状态为 $S_3$。\n\n使用蕴含表法，确定所有等价状态对。从以下选项中，选择所有代表等价状态对的选项。\n\nA. 状态对 $(S_0, S_1)$\nB. 状态对 $(S_0, S_2)$\nC. 状态对 $(S_0, S_3)$\nD. 状态对 $(S_1, S_2)$\nE. 状态对 $(S_1, S_3)$\nF. 状态对 $(S_2, S_3)$\nG. 没有等价的状态对。", "solution": "我们使用摩尔机状态等价的定义：状态 $p$ 和 $q$ 等价，当且仅当 $z(p)=z(q)$，并且对于每一个输入符号 $a$，它们的后继状态 $\\delta(p,a)$ 和 $\\delta(q,a)$ 是等价的，且此条件对所有输入串递归成立。\n\n针对所有无序对构建蕴含表：\n$$(S_{0},S_{1}),\\ (S_{0},S_{2}),\\ (S_{0},S_{3}),\\ (S_{1},S_{2}),\\ (S_{1},S_{3}),\\ (S_{2},S_{3}).$$\n根据输出不匹配进行初始标记（摩尔机要求等价状态必须有相同的输出）：\n$$z(S_{0})=0,\\ z(S_{2})=0,\\quad z(S_{1})=1,\\ z(S_{3})=1.$$\n因此，输出不同的状态对是立即可以区分的，并被标记：\n$$(S_{0},S_{1}),\\ (S_{0},S_{3}),\\ (S_{1},S_{2}),\\ (S_{2},S_{3}).$$\n剩下的未标记候选对为：\n$$(S_{0},S_{2})\\quad\\text{和}\\quad (S_{1},S_{3}).$$\n\n根据状态转换添加蕴含关系：\n- 对于 $(S_{0},S_{2})$：当 $x=0$ 时，$\\delta(S_{0},0)=S_{1}$ 且 $\\delta(S_{2},0)=S_{3}$，所以 $(S_{0},S_{2})$ 蕴含 $(S_{1},S_{3})$；当 $x=1$ 时，$\\delta(S_{0},1)=S_{0}$ 且 $\\delta(S_{2},1)=S_{2}$，所以它蕴含自身 $(S_{0},S_{2})$。\n- 对于 $(S_{1},S_{3})$：当 $x=0$ 时，$\\delta(S_{1},0)=S_{0}$ 且 $\\delta(S_{3},0)=S_{2}$，所以 $(S_{1},S_{3})$ 蕴含 $(S_{0},S_{2})$；当 $x=1$ 时，$\\delta(S_{1},1)=S_{1}$ 且 $\\delta(S_{3},1)=S_{3}$，所以它蕴含自身 $(S_{1},S_{3})$。\n\n由于所蕴含的对都未被标记，因此不会再有新的标记产生，过程达到稳定。因此，等价对是 $(S_{0},S_{2})$ 和 $(S_{1},S_{3})$。在选项中，这些对应于 B 和 E。", "answer": "$$\\boxed{\\text{BE}}$$", "id": "1942672"}, {"introduction": "蕴含表法的精髓在于其迭代的本质，即不相容性会像多米诺骨牌一样在表中传播。这个进阶练习旨在揭示这一动态过程。你将分析一个经过特殊设计的状态机，其中一个初始的不相容对会引发一系列连锁反应，需要经过多轮传递才能揭示所有不相容的状态对。通过解决这个问题，你将深刻体会到蕴含表法是如何通过系统性的迭代，最终揭示那些并非一目了然的非等价关系的。[@problem_id:1942703]", "problem": "一位数字系统工程师正在分析一个由下述状态表指定的Mealy型有限状态机（FSM）。该机器有五个状态 $\\{S_0, S_1, S_2, S_3, S_4\\}$，一个单一二进制输入 $X$，以及一个单一二进制输出 $Z$。该工程师怀疑此状态表的特定结构是为了对状态最小化算法进行压力测试而设计的。\n\n状态表如下：\n\n| 现态 | 次态, $X=0$ | 次态, $X=1$ | 输出 $Z$, $X=0$ | 输出 $Z$, $X=1$ |\n|:-------------:|:-----------------:|:-----------------:|:-------------------:|:-------------------:|\n|     $S_0$     |       $S_0$       |       $S_1$       |          0          |          0          |\n|     $S_1$     |       $S_0$       |       $S_2$       |          0          |          0          |\n|     $S_2$     |       $S_0$       |       $S_3$       |          0          |          0          |\n|     $S_3$     |       $S_0$       |       $S_4$       |          0          |          0          |\n|     $S_4$     |       $S_0$       |       $S_0$       |          1          |          0          |\n\n您的任务是使用蕴含表法（implication chart method）对该FSM进行状态最小化分析。如果状态对对于某个相同输入产生不同输出（即1-可区分），或者它们蕴含了一个已知的不可兼容状态对，那么这两个状态就被认为是不可兼容的。找出所有不可兼容对的过程包括：初始遍，用于识别1-可区分对；以及其后的传播遍，通过蕴含表传播不可兼容性，直到一次完整的传播遍后不再发现新的不可兼容对为止。\n\n确定在识别出所有1-可区分对的初始遍*之后*，蕴含表达到稳定状态所需的传播遍数。", "solution": "我们分析这个具有状态 $\\{S_{0},S_{1},S_{2},S_{3},S_{4}\\}$、一个输入 $X \\in \\{0,1\\}$ 和一个输出 $Z \\in \\{0,1\\}$ 的Mealy型FSM。其转移和输出行为如下：\n- 当 $X=0$ 时：对于所有 $i$，$\\delta(S_{i},0)=S_{0}$，并且对于 $S_{0},S_{1},S_{2},S_{3}$，输出 $Z=0$，而对于 $S_{4}$，输出 $Z=1$。\n- 当 $X=1$ 时：$\\delta(S_{0},1)=S_{1}$，$\\delta(S_{1},1)=S_{2}$，$\\delta(S_{2},1)=S_{3}$，$\\delta(S_{3},1)=S_{4}$，$\\delta(S_{4},1)=S_{0}$，并且对于所有状态，输出 $Z=0$。\n\n步骤1（1-可区分性的初始遍）：\n- 当 $X=1$ 时，所有输出均为 0，因此没有状态对在 $X=1$ 上是1-可区分的。\n- 当 $X=0$ 时，仅在状态 $S_{4}$ 时输出 $Z=1$，而在状态 $S_{0},S_{1},S_{2},S_{3}$ 时输出 $Z=0$。因此，每个形如 $(S_{4},S_{i})$（其中 $i \\in \\{0,1,2,3\\}$）的状态对都是立即不可兼容的。没有其他状态对是1-可区分的。\n\n因此，在初始遍之后，被标记为不可兼容的状态对是 $(S_{4},S_{0})$、$(S_{4},S_{1})$、$(S_{4},S_{2})$、$(S_{4},S_{3})$。\n\n剩余状态对的传播设置：\n在 $\\{S_{0},S_{1},S_{2},S_{3}\\}$ 中剩余的未标记状态对是\n$$(S_{1},S_{0}),\\ (S_{2},S_{0}),\\ (S_{2},S_{1}),\\ (S_{3},S_{0}),\\ (S_{3},S_{1}),\\ (S_{3},S_{2}).$$\n对于这些状态对：\n- 当 $X=0$ 时，次态对总是 $(S_{0},S_{0})$，这不施加任何约束（平凡兼容）。\n- 当 $X=1$ 时，我们得到以下蕴含关系：\n$$(S_{1},S_{0}) \\Rightarrow (S_{2},S_{1}),$$\n$$(S_{2},S_{0}) \\Rightarrow (S_{3},S_{1}),$$\n$$(S_{2},S_{1}) \\Rightarrow (S_{3},S_{2}),$$\n$$(S_{3},S_{0}) \\Rightarrow (S_{4},S_{1}),$$\n$$(S_{3},S_{1}) \\Rightarrow (S_{4},S_{2}),$$\n$$(S_{3},S_{2}) \\Rightarrow (S_{4},S_{3}).$$\n在这里，$(S_{4},S_{1})$、$(S_{4},S_{2})$ 和 $(S_{4},S_{3})$ 从初始遍开始就已经是不可兼容的。\n\n初始遍之后的传播遍：\n- 第1遍：任何直接蕴含一个已被标记的对的状态对都将变得不可兼容。因此，$(S_{3},S_{0})$、$(S_{3},S_{1})$ 和 $(S_{3},S_{2})$ 由于分别蕴含了 $(S_{4},S_{1})$、$(S_{4},S_{2})$ 和 $(S_{4},S_{3})$ 而变得不可兼容。\n- 第2遍：使用第1遍中新标记的对，$(S_{2},S_{1}) \\Rightarrow (S_{3},S_{2})$ 和 $(S_{2},S_{0}) \\Rightarrow (S_{3},S_{1})$ 现在蕴含了不可兼容对，因此 $(S_{2},S_{1})$ 和 $(S_{2},S_{0})$ 变得不可兼容。\n- 第3遍：最后，$(S_{1},S_{0}) \\Rightarrow (S_{2},S_{1})$，并且由于 $(S_{2},S_{1})$ 在第2遍中被标记为不可兼容，因此 $(S_{1},S_{0})$ 在第3遍中变得不可兼容。\n\n第3遍之后，所有状态对都被标记为不可兼容，不会再发生进一步的变化。因此，在初始的1-可区分性遍之后，蕴含表经过3次传播遍后达到稳定。", "answer": "$$\\boxed{3}$$", "id": "1942703"}]}