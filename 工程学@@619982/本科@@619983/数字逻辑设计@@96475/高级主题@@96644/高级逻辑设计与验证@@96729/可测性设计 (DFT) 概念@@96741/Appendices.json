{"hands_on_practices": [{"introduction": "有效的测试不仅仅是检测到故障的存在；在许多情况下，诊断出具体的根本原因至关重要。这个练习将挑战你设计一个最小的测试向量集，它不仅能确认故障，还能区分两种不同的潜在固定型故障。掌握这项技能表明你对输入向量如何选择性地暴露独特故障行为有了更深的理解 [@problem_id:1928177]。", "problem": "一个数字逻辑电路被设计用于实现布尔函数 $F(A, B, C) = (A \\cdot B) + (\\overline{B} \\cdot C)$。该电路由标准逻辑门构成。在制造过程中，基于单固定型故障模型，怀疑可能发生两种特定的故障：\n\n-   **故障 $f_1$**：计算项 $(A \\cdot B)$ 的与门输出固定于0。\n-   **故障 $f_2$**：计算项 $(A \\cdot B)$ 的与门输入线 `B` 固定于1。\n\n您的任务是找出一个最小的测试向量集，该集合既能检测到故障的存在（如果存在的话），又能诊断出两种特定故障（$f_1$ 或 $f_2$）中哪一个发生了。一个测试向量是一个对应于输入 `ABC` 的3位二进制字符串。\n\n以下哪个选项代表了满足这些要求的最小测试向量集？\n\nA. `{100}`\nB. `{110}`\nC. `{100, 110}`\nD. `{001, 100, 110}`\nE. `{110, 111}`", "solution": "无故障时的布尔函数为\n$$F(A,B,C)=AB+\\overline{B}C.$$\n在故障 $f_{1}$ 情况下，计算 $AB$ 的与门输出固定于0，因此电路输出变为\n$$F_{f_{1}}(A,B,C)=0+\\overline{B}C=\\overline{B}C.$$\n在故障 $f_{2}$ 情况下，只有馈入 $AB$ 与门的输入 $B$ 固定于1，因此该与门的输出为 $A\\cdot 1=A$，而馈入另一分支的 $B$ 保持正常。因此电路输出变为\n$$F_{f_{2}}(A,B,C)=A+\\overline{B}C.$$\n如果一个测试向量能使故障输出与无故障输出不同，则该向量可检测到给定故障。为了在 $f_{1}$ 和 $f_{2}$ 之间进行诊断，向量集必须对这两种故障产生不同的响应模式。\n\n评估候选向量：\n\n1) 对于 $A B C=100$:\n$$F=0,\\quad F_{f_{1}}=0,\\quad F_{f_{2}}=1.$$\n这能检测到 $f_{2}$，但不能检测到 $f_{1}$。\n\n2) 对于 $A B C=110$:\n$$F=1,\\quad F_{f_{1}}=0,\\quad F_{f_{2}}=1.$$\n这能检测到 $f_{1}$，但不能检测到 $f_{2}$。\n\n3) 对于 $A B C=001$:\n$$F=1,\\quad F_{f_{1}}=1,\\quad F_{f_{2}}=1.$$\n这两种故障都检测不到。\n\n4) 对于 $A B C=111$:\n$$F=1,\\quad F_{f_{1}}=0,\\quad F_{f_{2}}=1.$$\n其效果等同于 $110$：能检测到 $f_{1}$，但不能检测到 $f_{2}$。\n\n因此，没有单个向量可以同时检测到 $f_{1}$ 和 $f_{2}$。向量对 $\\{100,110\\}$ 产生以下特征：对于正常电路是 $(0,1)$，对于 $f_{1}$ 是 $(0,0)$，对于 $f_{2}$ 是 $(1,1)$，因此既能检测到是否存在故障，也能诊断出是哪种故障。在这些选项中，该集合的基数是最小的，因为任何单个向量都无法同时检测到两种故障。\n\n因此，选项中的最小集合是 $\\{100,110\\}$。", "answer": "$$\\boxed{C}$$", "id": "1928177"}, {"introduction": "在单故障分析的基础上，我们现在来探讨更为复杂的多重故障交互的现实情况。这个问题呈现了一个经典的“故障屏蔽”场景，即一个故障的存在掩盖了另一个故障，使得一个本应有效的测试向量失效。通过这个假设性的案例，你将学会如何分析复杂电路（尤其是具有重汇聚扇出的电路）中可能出现的非平凡故障行为 [@problem_id:1928157]。", "problem": "在数字电路测试和可测试性设计（DFT）领域，理解多个故障如何相互作用是至关重要的。其中一种相互作用是故障掩蔽，即一个故障的存在会阻止另一个故障被检测出来。\n\n考虑以下数字逻辑电路，它有四个主输入 `A`、`B`、`C`、`D` 和一个主输出 `Z`。其内部连接由以下网表定义，其中 `n1` 到 `n4` 是内部节点：\n- `n1 = A AND B`\n- `n2 = n1 OR C`\n- `n3 = NOT n1`\n- `n4 = n3 AND D`\n- `Z = n2 OR n4`\n\n一位测试工程师确定测试向量 `T = (A=1, B=1, C=0, D=0)` 成功检测出故障 `f1`，该故障定义为“节点 `n1` 固定为0”。\n\n现在，假设电路中同时存在第二个故障 `f2`。在这种多重故障条件下，观察到施加相同的测试向量 `T` 不再能检测出任何故障；电路输出 `Z` 与无故障电路的输出相同。这种现象是故障掩蔽的一个例子，其中 `f2` 掩蔽了 `f1`。\n\n以下哪项可能是第二个故障 `f2`？\n\nA. 输入 `D` 固定为1\nB. 节点 `n3` 固定为0\nC. 主输出 `Z` 固定为0\nD. 输入 `B` 固定为0\nE. 节点 `n2` 固定为0", "solution": "使用布尔运算符为内部节点和输出定义无故障逻辑：\n$$\nn_{1}=A \\land B,\\quad n_{2}=n_{1}\\lor C,\\quad n_{3}=\\lnot n_{1},\\quad n_{4}=n_{3}\\land D,\\quad Z=n_{2}\\lor n_{4}.\n$$\n施加给定的测试向量 $T$，其赋值为 $A=1$, $B=1$, $C=0$, $D=0$。逐步计算无故障响应：\n$$\nn_{1}=1\\land 1=1,\\quad n_{2}=1\\lor 0=1,\\quad n_{3}=\\lnot 1=0,\\quad n_{4}=0\\land 0=0,\\quad Z=1\\lor 0=1.\n$$\n因此，无故障输出为 $Z_{\\text{good}}=1$。\n\n现在施加故障 $f_{1}$：节点 $n_{1}$ 固定为 $0$，即 $n_{1}=0$ 不论 $A$ 和 $B$ 为何值。在 $T$ 的作用下：\n$$\nn_{1}=0,\\quad n_{2}=0\\lor 0=0,\\quad n_{3}=\\lnot 0=1,\\quad n_{4}=1\\land 0=0,\\quad Z=0\\lor 0=0.\n$$\n因此 $Z_{f_{1}}=0\\neq Z_{\\text{good}}$，所以 $T$ 能检测出 $f_{1}$。\n\n我们现在考虑同时存在第二个故障 $f_{2}$ 的情况，并判断在 $T$ 的作用下，组合故障是否会产生 $Z=Z_{\\text{good}}=1$（故障掩蔽）。评估每个选项：\n\nA. $D$ 固定为 $1$：在 $T$ 的作用下，同时存在 $f_{1}$ 和 $f_{2}$ 时，\n$$\nn_{1}=0,\\quad n_{2}=0\\lor 0=0,\\quad n_{3}=1,\\quad n_{4}=1\\land 1=1,\\quad Z=0\\lor 1=1.\n$$\n这等于 $Z_{\\text{good}}$，所以 $f_{2}$ 掩蔽了 $f_{1}$。\n\nB. $n_{3}$ 固定为 $0$：在 $T$ 的作用下，同时存在 $f_{1}$ 和 $f_{2}$ 时，\n$$\nn_{1}=0,\\quad n_{2}=0,\\quad n_{3}=0,\\quad n_{4}=0\\land 0=0,\\quad Z=0\\lor 0=0\\neq 1.\n$$\n没有掩蔽。\n\nC. $Z$ 固定为 $0$：在 $T$ 的作用下，$Z=0\\neq 1$。没有掩蔽。\n\nD. $B$ 固定为 $0$：在 $T$ 的作用下，同时存在 $f_{1}$ 和 $f_{2}$ 时，\n$$\nn_{1}=0,\\quad n_{2}=0,\\quad n_{3}=1,\\quad n_{4}=1\\land 0=0,\\quad Z=0\\lor 0=0\\neq 1.\n$$\n没有掩蔽。\n\nE. $n_{2}$ 固定为 $0$：在 $T$ 的作用下，同时存在 $f_{1}$ 和 $f_{2}$ 时，\n$$\nn_{1}=0,\\quad n_{2}=0,\\quad n_{3}=1,\\quad n_{4}=1\\land 0=0,\\quad Z=0\\lor 0=0\\neq 1.\n$$\n没有掩蔽。\n\n只有选项 A 产生 $Z=1$，与无故障电路的输出相同，因此它可以在给定的测试向量下掩蔽 $f_{1}$。", "answer": "$$\\boxed{A}$$", "id": "1928157"}, {"introduction": "与组合逻辑相比，由于时序电路存在内部状态，其测试带来了巨大的挑战。扫描链设计是解决这一问题的基石性可测试性设计（DFT）技术，它将一个困难的时序问题转化为一个可管理的组合问题。本练习要求你通过推导总测试时间的公式来分析这种强大技术的时钟周期开销，这是在大规模制造中一个至关重要的考量因素 [@problem_id:1928180]。", "problem": "LogicWorks Inc. 正在开发一款新的片上系统 (SoC)，其中包含一个大型的时序逻辑模块。为确保生产的芯片没有缺陷，工程师们采用了一种标准的可测性设计 (DFT) 技术，称为全扫描链。该技术在测试模式下，将时序模块中所有的 $M$ 个触发器连接成一个单一的长移位寄存器。\n\n使用此扫描链的测试流程如下：\n1.  将电路切换到测试模式，把一个专用的测试时钟路由到扫描链。\n2.  将第一个测试向量（一个 $M$ 位的模式）串行移入扫描链。\n3.  施加一个“捕获”脉冲。此操作使组合逻辑能够根据触发器的状态计算出一个结果，然后这个结果（“响应”）被捕获回触发器中，覆盖其先前的状态。\n4.  捕获到的响应被串行移出扫描链以供观察。为提高效率，在移出响应的同时，下一个测试向量被同步移入。\n5.  重复步骤3和4，直到所有测试向量都已施加。只有在最后一个响应的最后一位完全移出扫描链后，整个测试序列才被视为完成。\n\n给定一个由 $N$ 个不同测试向量组成的完整测试集，推导出一个通用的、闭式的解析表达式，用于计算完成整个测试过程所需的总测试时钟周期数。请用 $M$ 和 $N$ 来表示你的答案。", "solution": "设 $M$ 为扫描链中触发器的数量，$N$ 为测试向量的数量。我们将测试时钟周期数计算为所有扫描移位周期和所有捕获脉冲的总和。\n\n首先，初始加载第一个测试向量需要 $M$ 个移位周期。\n\n接着，对于 $N$ 个测试向量中的每一个，都施加一个捕获脉冲，总共贡献了 $N$ 个捕获周期。\n\n每次捕获后，必须将响应移出。总共有 $N$ 个响应，每个响应需要 $M$ 个移位周期才能被完全观察到。在移出每个响应的这 $M$ 个周期中，下一个测试向量（如果有的话）被同步移入，因此除了每个响应所需的这 $M$ 个周期外，不需要额外的移位周期。因此，移出所有响应所需的总移位周期数为 $NM$。\n\n将所有部分加总可得\n$$\nT(M,N) = \\underbrace{M}_{\\text{初始加载}} + \\underbrace{N}_{\\text{捕获}} + \\underbrace{NM}_{\\text{移出所有响应}} = (N+1)M + N.\n$$\n\n这个表达式已经考虑了最终的要求，即测试只有在最后一个响应的最后一位完全移出后才算完成。", "answer": "$$\\boxed{(N+1)M+N}$$", "id": "1928180"}]}