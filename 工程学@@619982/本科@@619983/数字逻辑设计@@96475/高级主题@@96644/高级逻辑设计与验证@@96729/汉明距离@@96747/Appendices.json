{"hands_on_practices": [{"introduction": "要真正掌握汉明距离，最好的方法就是亲手计算。这个练习将带你从最基本的层面入手，在一个常见的数字系统背景下——二进制编码的十进制（BCD）——直接应用汉明距离的定义。通过这个练习，你将巩固计算两个码字之间差异的基本技能，这是理解其在更复杂应用中作用的第一步。[@problem_id:1941080]", "problem": "在数字系统中，十进制数字通常使用一种称为二进制编码的十进制 (BCD) 的方案来表示。在标准的 8421 BCD 编码中，每个从 0 到 9 的十进制数字都由其对应的4位二进制等价值表示。两个等长二进制串之间的汉明距离定义为这两个串在对应位上比特值不同的位置数量。\n\n考虑一个场景：一个数字设备打算传输十进制数字 3 的 4 位 BCD 表示。然而，由于故障，该设备错误地传输了十进制数字 9 的 4 位 BCD 表示。那么，预定传输的4位码与实际传输的4位码之间的汉明距离是多少？\n\nA. 1\nB. 2\nC. 3\nD. 4\nE. 6", "solution": "在 8421 BCD 编码中，每个十进制数字由一个4位二进制数表示，其各位的权重分别为 8、4、2、1。因此：\n- 预定传输的数字 3 编码为 `0011`，因为 3=2+1。\n- 实际传输的数字 9 编码为 `1001`，因为 9=8+1。\n\n两个等长二进制串之间的汉明距离等于其对应位上比特值不同的位置数量。等效地，它等于这两个串按位异或 (XOR) 结果的汉明权重（即 1 的数量）：\n$$d_{H}(C_{i},C_{t}) = \\text{wt}\\!\\left(C_{i} \\oplus C_{t}\\right)$$\n当 $C_{i}$ 为 `0011` 且 $C_{t}$ 为 `1001` 时，计算\n$$ \\text{0011} \\oplus \\text{1001} = \\text{1010} $$\n其结果中有两个 1。因此，\n$$ d_{H}(\\text{0011}, \\text{1001}) = 2 $$\n对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1941080"}, {"introduction": "计算两个独立码字之间的距离是一回事，但汉明距离的真正威力体现在评估一组码字的特性上。这个练习将你的技能提升到一个新的层次，要求你分析整个码集，以确定它是否满足纠正单位元错误所需的关键属性——最小汉明距离至少为3。这不仅仅是一个计算任务，更是一次深入了解纠错码设计核心原则的实践。[@problem_id:1941086]", "problem": "在数字通信和数据存储中，纠错码被用来检测和纠正传输或检索过程中可能发生的错误。设计这些码的一个关键原则是汉明距离。两个等长二进制字符串之间的汉明距离是其对应符号不同的位置的数量。为了使一组码能够纠正任何单个比特的错误，该组中任意两个不同码字之间的最小汉明距离必须至少为3。\n\n考虑以下由四个不同的5比特二进制码组成的集合。这些集合中哪一个满足集合内任意两个码之间的最小汉明距离至少为3的性质？\n\nA. `{00000, 00001, 00011, 00111}`\nB. `{00000, 11100, 00111, 11011}`\nC. `{01010, 10101, 00000, 11100}`\nD. `{11111, 00000, 10101, 01110}`", "solution": "两个等长二进制字符串 $\\mathbf{x}$ 和 $\\mathbf{y}$ 之间的汉明距离定义为 $d(\\mathbf{x},\\mathbf{y}) = \\mathrm{wt}(\\mathbf{x} \\oplus \\mathbf{y})$，其中 $\\oplus$ 是按位异或，$\\mathrm{wt}(\\cdot)$ 表示汉明权重（1的数量）。如果最小两两距离至少为 $3$，则该集合满足单个错误纠正条件。\n\n集合A: $\\{00000, 00001, 00011, 00111\\}$。计算 $d(\\text{00000},\\text{00001}) = \\mathrm{wt}(\\text{00000} \\oplus \\text{00001}) = \\mathrm{wt}(\\text{00001}) = 1$。因为 $1  3$，所以集合A不满足条件。\n\n集合B: $\\{00000, 11100, 00111, 11011\\}$。令 $w_{1}=\\text{00000}$, $w_{2}=\\text{11100}$, $w_{3}=\\text{00111}$, $w_{4}=\\text{11011}$。计算所有两两之间的距离：\n$$d(w_{1},w_{2})=\\mathrm{wt}(\\text{11100})=3,\\quad d(w_{1},w_{3})=\\mathrm{wt}(\\text{00111})=3,\\quad d(w_{1},w_{4})=\\mathrm{wt}(\\text{11011})=4,$$\n$$d(w_{2},w_{3})=\\mathrm{wt}(\\text{11100} \\oplus \\text{00111})=\\mathrm{wt}(\\text{11011})=4,\\quad d(w_{2},w_{4})=\\mathrm{wt}(\\text{11100} \\oplus \\text{11011})=\\mathrm{wt}(\\text{00111})=3,$$\n$$d(w_{3},w_{4})=\\mathrm{wt}(\\text{00111} \\oplus \\text{11011})=\\mathrm{wt}(\\text{11100})=3.$$\n最小值为 3，所以集合B满足条件。\n\n集合C: $\\{01010, 10101, 00000, 11100\\}$。计算 $d(\\text{00000},\\text{01010})=\\mathrm{wt}(\\text{01010})=2$。因为 $2  3$，所以集合C不满足条件。\n\n集合D: $\\{11111, 00000, 10101, 01110\\}$。计算 $d(\\text{11111},\\text{10101})=\\mathrm{wt}(\\text{11111} \\oplus \\text{10101})=\\mathrm{wt}(\\text{01010})=2$。因为 $2  3$，所以集合D不满足条件。\n\n因此，只有集合B的最小汉明距离至少为 3。", "answer": "$$\\boxed{B}$$", "id": "1941086"}, {"introduction": "在理解了汉明距离的数学定义和其在编码理论中的重要性之后，一个自然而然的问题是：我们如何构建一个能自动计算它的物理电路？这个练习将引导你完成从抽象概念到具体硬件实现的跨越。你将设计一个组合逻辑电路，它能接收两个二进制输入，并输出它们之间的汉明距离，这个过程将巩固你在布尔代数和逻辑化简方面的核心技能。[@problem_id:1941078]", "problem": "在数字通信系统中，确保数据完整性至关重要。用于错误检测的一个基本度量是汉明距离，它量化了两个相同长度的二进制字在不同比特位的数量。\n\n考虑一个监控电路，其设计用于比较一个发送的3位二进制字 $A = A_2A_1A_0$ 和一个接收的3位二进制字 $B = B_2B_1B_0$。该电路的输出 $Z$ 是一个2位二进制数 $Z=Z_1Z_0$（其中 $Z_1$ 是最高有效位），表示汉明距离 $d_H(A, B)$。汉明距离与输出 $Z$ 之间的关系定义如下：\n- 如果 $d_H(A, B) = 0$，则 $Z_1Z_0 = 00$。\n- 如果 $d_H(A, B) = 1$，则 $Z_1Z_0 = 01$。\n- 如果 $d_H(A, B) = 2$，则 $Z_1Z_0 = 10$。\n- 如果 $d_H(A, B) = 3$，则 $Z_1Z_0 = 11$。\n\n你的任务是确定每个输出位 $Z_1$ 和 $Z_0$ 的最小“积之和”（SOP）布尔表达式中乘积项的数量。这些表达式应被视为六个输入变量 $A_2, A_1, A_0, B_2, B_1, B_0$ 的函数。\n\n请以一个包含两个整数的行矩阵形式提供你的答案，其中第一个整数是 $Z_1$ 的乘积项数量，第二个整数是 $Z_0$ 的乘积项数量。", "solution": "令 $D_{i} \\equiv A_{i} \\oplus B_{i}$，对于 $i \\in \\{2,1,0\\}$。根据3位字 $A$ 和 $B$ 之间汉明距离的定义，不同比特位的数量是整数和\n$$\nd_{H}(A,B)=D_{2}+D_{1}+D_{0}.\n$$\n输出 $Z=Z_{1}Z_{0}$ 是这个和的标准二进制编码：\n- $Z_{0}$ 是 $D_{2}+D_{1}+D_{0}$ 的最低有效位，因此\n$$\nZ_{0}=D_{2}\\oplus D_{1}\\oplus D_{0}\n$$\n- $Z_{1}$ 是最高有效位，对于三个输入来说，它是“至少有两个1”的阈值函数，等价于\n$$\nZ_{1}=D_{2}D_{1}+D_{2}D_{0}+D_{1}D_{0}\n$$\n\n我们现在来确定在六个输入变量 $A_{2},A_{1},A_{0},B_{2},B_{1},B_{0}$ 上最小SOP的规模。\n\n首先，对每一对比特使用异或（XOR）和同或（XNOR）的SOP形式：\n$$\nD_{i}=A_{i}\\oplus B_{i}=\\overline{A_{i}}B_{i}+A_{i}\\overline{B_{i}},\\qquad\n\\overline{D_{i}}=A_{i}\\odot B_{i}=A_{i}B_{i}+\\overline{A_{i}}\\overline{B_{i}}.\n$$\n\n对于 $Z_{0}$，根据 $\\oplus$ 的结合律和交换律，\n$$\nZ_{0}=(A_{2}\\oplus B_{2})\\oplus(A_{1}\\oplus B_{1})\\oplus(A_{0}\\oplus B_{0})\n= A_{2}\\oplus B_{2}\\oplus A_{1}\\oplus B_{1}\\oplus A_{0}\\oplus B_{0}.\n$$\n因此，$Z_{0}$ 是六变量奇校验函数。翻转六个输入中的任意一个都会使 $Z_{0}$ 的值翻转，因此在六变量空间中，任何汉明距离为1的两个输入赋值都不会同时在“开”集（on-set）中。因此，从卡诺图或立方体图的角度来看，不存在比单个最小项更大的蕴含项；最小SOP由每个“开”集最小项对应一个乘积项组成。由于 $2^{6}$ 个输入赋值中恰好有一半会产生奇校验，所以“开”集的大小为 $2^{6-1}=32$。因此，$Z_{0}$ 的最小SOP有 $32$ 个乘积项。\n\n对于 $Z_{1}$，使用\n$$\nZ_{1}=D_{2}D_{1}+D_{2}D_{0}+D_{1}D_{0}.\n$$\n每个乘积 $D_{i}D_{j}$ 使用其SOP形式展开为\n$$\nD_{i}D_{j}=(\\overline{A_{i}}B_{i}+A_{i}\\overline{B_{i}})(\\overline{A_{j}}B_{j}+A_{j}\\overline{B_{j}})\n$$\n$$\n=\\;\\overline{A_{i}}B_{i}\\,\\overline{A_{j}}B_{j}\\;+\\;\\overline{A_{i}}B_{i}\\,A_{j}\\overline{B_{j}}\\;+\\;A_{i}\\overline{B_{i}}\\,\\overline{A_{j}}B_{j}\\;+\\;A_{i}\\overline{B_{i}}\\,A_{j}\\overline{B_{j}}.\n$$\n这四个是不同的4文字乘积项，它们不涉及第三对变量 $(A_{k},B_{k})$。在每组四个项中，没有任何两项仅相差一个文字（它们在每一对变量内相差两个文字），因此它们不能合并成更大的蕴含项。对于不同的对组合（例如，在 $D_{2}D_{1}$ 和 $D_{2}D_{0}$ 的展开式之间），各项涉及不同的变量对，同样也不能合并成更少或更大的乘积项。因此，三个两两相乘的积每一项都贡献了恰好 $4$ 个不可约乘积项，使得 $Z_{1}$ 的最小SOP总共有 $3\\times 4=12$ 个乘积项。\n\n因此，最小SOP中的乘积项数量对于 $Z_{1}$ 是 $12$ 个，对于 $Z_{0}$ 是 $32$ 个。", "answer": "$$\\boxed{\\begin{pmatrix}12  32\\end{pmatrix}}$$", "id": "1941078"}]}