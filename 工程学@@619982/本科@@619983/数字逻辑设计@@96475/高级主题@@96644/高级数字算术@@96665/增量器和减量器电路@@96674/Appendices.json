{"hands_on_practices": [{"introduction": "在数字系统中，设计效率的一大关键在于重用现有组件。本练习将带你实践一个核心技巧：如何利用一个标准的并行加法器来实现减法运算。通过深入理解二进制补码表示法，你将学会如何配置加法器的输入，以执行 $Y = A - 2$ 的操作，这不仅巩固了你对计算机算术的理解，也展示了数字逻辑设计的灵活性和巧思。[@problem_id:1942940]", "problem": "一个数字电路正在被设计用于对一个4位无符号二进制数 $A = A_3A_2A_1A_0$ 执行特定的算术运算。该电路的核心是一个标准的4位二进制并行加法器。该加法器有两个4位数据输入端，分别记为 $X$ 和 $W$，以及一个一位的进位输入 $C_{in}$。电路的4位输出 $Y = Y_3Y_2Y_1Y_0$ 直接取自该加法器的和输出端。\n\n该电路必须计算运算 $Y = A - 2$。输入数 $A$ 连接到加法器的 $X$ 输入端。为了实现所需的减法运算，第二个数据输入 $W = W_3W_2W_1W_0$ 和进位输入 $C_{in}$ 必须被设置为特定的恒定二进制值。假设4位计算产生的任何溢出都将被忽略。\n\n以下哪种关于输入 $W$ 和进位输入 $C_{in}$ 的配置能够正确实现运算 $Y = A - 2$？\n\n注意：$W$ 的二进制值以最高有效位在前的顺序列出（例如，$W_3W_2W_1W_0$）。\n\nA. $W=1101_2$, $C_{in}=1$\n\nB. $W=0010_2$, $C_{in}=0$\n\nC. $W=1101_2$, $C_{in}=0$\n\nD. $W=0001_2$, $C_{in}=1$\n\nE. $W=1110_2$, $C_{in}=1$", "solution": "问题要求我们使用一个4位并行加法器来实现减法运算 $Y = A - 2$。在数字逻辑中，减法通常通过加上减数的补码来执行。因此，运算 $A - 2$ 可以重写为 $A + (-2)$，其中 $-2$ 用其4位补码形式表示。\n\n首先，我们必须求出数字2的4位补码表示。\n正数2的4位二进制形式是 $0010_2$。\n\n为了求补码，我们遵循以下两个步骤：\n1.  求反码，通过反转该数的所有位。\n    $0010_2$ 的反码是 $1101_2$。\n2.  将反码加1以得到补码。\n    $1101_2 + 1 = 1110_2$。\n\n所以，$-2$ 的4位补码表示是 $1110_2$。\n所需的计算 $Y = A - 2$ 因此等价于加法运算 $Y = A + 1110_2$。问题中说明任何溢出都将被忽略，这与补码运算的规则是一致的。\n\n4位并行加法器电路计算和 $S = X + W + C_{in}$，其中 $X$ 和 $W$ 是4位输入，$C_{in}$ 是进位输入。已知输入 $A$ 连接到 $X$（因此 $X=A$），输出 $Y$ 是和 $S$（因此 $Y=S$）。\n将这些代入加法器的方程，得到：\n$Y = A + W + C_{in}$。\n\n为了实现所需的运算，此表达式必须等价于 $Y = A + 1110_2$。通过比较这两个表达式，我们可以推导出对输入 $W$ 和 $C_{in}$ 的必要条件：\n$A + W + C_{in} = A + 1110_2$\n$W + C_{in} = 1110_2$\n\n现在我们必须评估给出的每个选项，以找出哪一个满足此条件。$C_{in}$ 的加法作用于 $W$ 的最低有效位。\n\nA. $W=1101_2$, $C_{in}=1$。\n   和为 $1101_2 + 1 = 1110_2$。这与我们要求的值相匹配。\n\nB. $W=0010_2$, $C_{in}=0$。\n   和为 $0010_2 + 0 = 0010_2$。这是不正确的。这种配置会计算 $Y=A+2$。\n\nC. $W=1101_2$, $C_{in}=0$。\n   和为 $1101_2 + 0 = 1101_2$。这是不正确的。这种配置会计算 $Y=A-3$，因为 $1101_2$ 是-3的补码。\n\nD. $W=0001_2$, $C_{in}=1$。\n   和为 $0001_2 + 1 = 0010_2$。这是不正确的。这种配置会计算 $Y=A+2$。\n\nE. $W=1110_2$, $C_{in}=1$。\n   和为 $1110_2 + 1 = 1111_2$。这是不正确的。这种配置会计算 $Y=A-1$，因为 $1111_2$ 是-1的补码。\n\n只有选项A能得到 $W + C_{in} = 1110_2$。这种配置对应于将减法 $A-B$ 实现为 $A + \\bar{B} + 1$ 的标准方法，其中 $\\bar{B}$ 是 $B$ 的反码。在本例中，$B=0010_2$，所以 $\\bar{B}=1101_2$，它被设置为输入 $W$。“$+1$”是通过将进位输入 $C_{in}$ 设置为1来提供的。因此，这是正确的配置。", "answer": "$$\\boxed{A}$$", "id": "1942940"}, {"introduction": "增量器和减量器不仅是组合逻辑电路，它们更是时序电路（如计数器）的核心。本练习将引导你从零开始设计一个特殊的3位模6同步计数器，它在达到状态 $101_2$ 后会复位到 $000_2$。通过为T触发器推导激励方程，你将实践状态机设计的完整流程，并深刻理解增量操作在时序控制单元中的实现方式。[@problem_id:1942922]", "problem": "您的任务是为一个控制单元设计一个专门的3位同步计数器。计数器的状态由三位表示，$Q_2, Q_1, Q_0$，其中 $Q_2$ 是最高有效位。该计数器必须使用三个T触发器实现，这些触发器由一个共同的时钟信号触发。\n\n计数器必须按照以下二进制序列循环计数：$000_2 \\to 001_2 \\to 010_2 \\to 011_2 \\to 100_2 \\to 101_2$。当到达状态 $101_2$ 时，计数器必须在下一个有效时钟沿复位到 $000_2$。状态 $110_2$ 和 $111_2$ 是未使用的，它们的新状态可以被视为“无关项”以简化设计。\n\n您的任务是确定三个T触发器输入 $T_2, T_1$, 和 $T_0$ 的最小积之和（SOP）逻辑表达式。这些表达式应为状态变量 $Q_2, Q_1,$ 和 $Q_0$ 的函数。在您的表达式中，使用撇号（例如，$Q'$）表示逻辑非（NOT）运算，使用变量并列表示逻辑与（AND）运算（例如，$Q_1 Q_0$ 表示 $Q_1 \\text{ AND } Q_0$）。\n\n请按 $T_2, T_1$, 和 $T_0$ 的特定顺序给出这三个逻辑表达式作为您的最终答案。", "solution": "我们将现态位记为 $Q_{2},Q_{1},Q_{0}$，次态位记为 $Q_{2}^{+},Q_{1}^{+},Q_{0}^{+}$。对于T触发器，其激励关系为 $T = Q \\oplus Q^{+}$，即当且仅当位必须在现态和次态之间翻转时，$T=1$。\n\n指定的同步序列为\n$$000_2 \\to 001_2 \\to 010_2 \\to 011_2 \\to 100_2 \\to 101_2 \\to 000_2,$$\n其中 $110_2$ 和 $111_2$ 未使用（为简化设计作为无关项处理）。\n\n1) 推导 $T_{0}$：\n从该序列可以看出，最低有效位在每次转换时都会翻转：\n$0 \\to 1 \\to 0 \\to 1 \\to 0 \\to 1 \\to 0$。因此，对于所有六个使用的状态，$T_{0}=1$，而未使用的状态是无关项。所以最小积之和表达式为\n$$T_{0}=1.$$\n\n2) 推导 $T_{1}$：\n跟踪序列中 $Q_{1}$ 的变化：\n- $000_2 \\to 001_2$：$0 \\to 0$（不翻转），所以在状态 $000_2$ 时 $T_{1}=0$。\n- $001_2 \\to 010_2$：$0 \\to 1$（翻转），所以在状态 $001_2$ 时 $T_{1}=1$。\n- $010_2 \\to 011_2$：$1 \\to 1$（不翻转），所以在状态 $010_2$ 时 $T_{1}=0$。\n- $011_2 \\to 100_2$：$1 \\to 0$（翻转），所以在状态 $011_2$ 时 $T_{1}=1$。\n- $100_2 \\to 101_2$：$0 \\to 0$（不翻转），所以在状态 $100_2$ 时 $T_{1}=0$。\n- $101_2 \\to 000_2$：$0 \\to 0$（不翻转），所以在状态 $101_2$ 时 $T_{1}=0$。\n因此，当现态为 $001_2$ 和 $011_2$ 时，$T_{1}=1$；当现态为 $000_2,010_2,100_2,101_2$ 时，$T_{1}=0$；状态 $110_2,111_2$ 为无关项。两个最小项 $001_2$ 和 $011_2$ 共享 $Q_{2}'$ 和 $Q_{0}$，因此最小积之和表达式为\n$$T_{1}=Q_{2}'Q_{0}.$$\n\n3) 推导 $T_{2}$：\n跟踪序列中 $Q_{2}$ 的变化：\n- $000_2 \\to 001_2$：$0 \\to 0$（不翻转），所以在状态 $000_2$ 时 $T_{2}=0$。\n- $001_2 \\to 010_2$：$0 \\to 0$（不翻转），所以在状态 $001_2$ 时 $T_{2}=0$。\n- $010_2 \\to 011_2$：$0 \\to 0$（不翻转），所以在状态 $010_2$ 时 $T_{2}=0$。\n- $011_2 \\to 100_2$：$0 \\to 1$（翻转），所以在状态 $011_2$ 时 $T_{2}=1$。\n- $100_2 \\to 101_2$：$1 \\to 1$（不翻转），所以在状态 $100_2$ 时 $T_{2}=0$。\n- $101_2 \\to 000_2$：$1 \\to 0$（翻转），所以在状态 $101_2$ 时 $T_{2}=1$。\n因此，当现态为 $011_2$ 和 $101_2$ 时，$T_{2}=1$；当现态为 $000_2,001_2,010_2,100_2$ 时，$T_{2}=0$；状态 $110_2,111_2$ 为无关项。通过卡诺图分组并利用无关项进行化简，我们可以用蕴含项 $Q_{1}Q_{0}$ 覆盖 $011_2$（利用 $111_2$ 作为无关项），并用蕴含项 $Q_{2}Q_{0}$ 覆盖 $101_2$（同样利用 $111_2$ 作为无关项）。因此，最小积之和表达式为\n$$T_{2}=Q_{0}Q_{1}+Q_{0}Q_{2}.$$\n\n按 $T_{2},T_{1},T_{0}$ 的顺序汇总最小积之和表达式：\n$$T_{2}=Q_{0}Q_{1}+Q_{0}Q_{2},\\quad T_{1}=Q_{2}'Q_{0},\\quad T_{0}=1.$$", "answer": "$$\\boxed{\\begin{pmatrix} Q_{0}Q_{1}+Q_{0}Q_{2} & Q_{2}'Q_{0} & 1 \\end{pmatrix}}$$", "id": "1942922"}, {"introduction": "理论上的逻辑门设计与现代可重构硬件（如FPGA）中的实际实现之间存在着重要的抽象层次。这个高级练习将让你一窥究竟，探索如何将一个4位增量器映射到由查找表（LUT）和专用进位逻辑组成的阵列中。通过为这些微小的逻辑单元配置功能，你将了解到在资源受限的硬件上优化算术电路的基本原理，这是成为一名高效数字系统工程师的关键一步。[@problem_id:1942932]", "problem": "在诸如现场可编程门阵列（FPGAs）的现代可重构硬件中，复杂的算术电路是通过将专用的逻辑单元级联在一起来构建的。考虑设计一个4位同步二进制增量器，它为一个4位输入 $A = A_3A_2A_1A_0$ 计算输出 $S = A + 1$。\n\n该增量器将通过级联四个相同的算术逻辑单元（ALCs）来实现，其索引从最低有效位（LSB）的$i=0$到最高有效位（MSB）的$i=3$。第一个单元的进位输入 $C_0$ 永久连接到逻辑“1”。\n\n用于第 $i$ 级的每个 ALC 由以下结构定义：\n- **输入**：一个数据位 $A_i$ 和一个进位输入位 $C_i$。\n- **输出**：一个和位 $S_i$ 和一个进位输出位 $C_{i+1}$。\n- **内部组件和布线**：\n    1.  一个3输入查找表（LUT），其输出表示为 `LUT_OUT`。LUT 的输入 $I_1, I_2, I_3$ 可以连接到集合 $\\{A_i, C_i, '0' \\text{(GND)}, '1' \\text{(VCC)}\\}$ 中的任何信号。\n    2.  一个专用的2输入异或门，用于生成和位，其布线固定为：$S_i = \\text{LUT\\_OUT} \\oplus C_i$。\n    3.  一个2到1多路复用器（MUX），用于生成进位输出位 $C_{i+1}$。MUX 的输入 `Sel`、$D_0$ 和 $D_1$ 可以连接到集合 $\\{A_i, C_i, '0', '1', \\text{LUT\\_OUT}\\}$ 中的任何信号。\n\n你的任务是确定 ALC 内 LUT 的正确配置，以正确实现该4位增量器。\n\n设 $f_0(A_0, C_0)$ 是由单元 $ALC_0$ 中的 LUT 实现的布尔函数，并设 $f_i(A_i, C_i)$ 是由任何后续单元 $ALC_i$（对于 $i \\in \\{1, 2, 3\\}$）中的 LUT 实现的布尔函数。以下哪个选项正确地指定了这些函数？\n\nA. $f_0 = A_0$；且对于 $i>0$，$f_i = A_i$。\n\nB. $f_0 = \\neg A_0$；且对于 $i>0$，$f_i = A_i \\oplus C_i$。\n\nC. $f_0 = 1$；且对于 $i>0$，$f_i = A_i$。\n\nD. $f_0 = A_0$；且对于 $i>0$，$f_i = A_i \\cdot C_i$。\n\nE. $f_0 = A_0 \\oplus C_0$；且对于 $i>0$，$f_i = A_i \\oplus C_i$。", "solution": "我们实现一个计算 $S = A + 1$ 的4位增量器，其中 $A = A_{3}A_{2}A_{1}A_{0}$ 且 $C_{0} = 1$。对于每一位 $i$，增量操作所需的和与进位输出是标准的行波进位关系：\n$$\nS_{i} = A_{i} \\oplus C_{i}, \\quad C_{i+1} = A_{i} \\cdot C_{i}.\n$$\n\n每个 ALC 有一个表示为 $\\text{LUT\\_OUT}$ 的 LUT 输出和一个固定的和位布线：\n$$\nS_{i} = \\text{LUT\\_OUT} \\oplus C_{i}.\n$$\n为了匹配所有 $i$ 所需的和 $S_{i} = A_{i} \\oplus C_{i}$，我们必须有\n$$\n\\text{LUT\\_OUT} = A_{i},\n$$\n该式与 $C_i$ 无关。特别地，对于 $i=0$ 且 $C_0=1$ 的情况，这得到\n$$\nS_{0} = \\text{LUT\\_OUT} \\oplus C_{0} = A_{0} \\oplus 1 = \\neg A_{0},\n$$\n这是增量操作中正确的最低有效和位。\n\n接下来，验证进位输出是否可以由 MUX 实现。我们需要 $C_{i+1} = A_{i} \\cdot C_{i}$。使用可用的 MUX 连接，选择：\n- $\\text{Sel} = A_{i}$,\n- $D_{0} = 0$,\n- $D_{1} = C_{i}$。\n那么当 $A_i=0$ 时 MUX 的输出是 $C_{i+1} = 0$；当 $A_i=1$ 时 MUX 的输出是 $C_{i+1} = C_{i}$，这恰好是 $A_{i} \\cdot C_{i}$。或者，在 $\\text{LUT\\_OUT} = A_{i}$ 的情况下，可以设置 $\\text{Sel} = C_{i}$，$D_{0} = 0$，$D_{1} = \\text{LUT\\_OUT}$ 来实现相同的功能。\n\n因此，正确的 LUT 函数是 $f_{0}(A_{0}, C_{0}) = A_{0}$，并且对于所有 $i \\in \\{1,2,3\\}$，$f_{i}(A_{i}, C_{i}) = A_{i}$。\n\n排除其他选项：\n- 如果 $f_{0} = \\neg A_{0}$，那么 $S_{0} = \\neg A_{0} \\oplus 1 = A_{0}$，这对于增量操作是不正确的。对于 $i>0$，$f_{i} = A_{i} \\oplus C_{i}$ 给出 $S_{i} = (A_{i} \\oplus C_{i}) \\oplus C_{i} = A_{i}$，而不是 $A_{i} \\oplus C_{i}$；因此选项B是无效的。\n- 如果 $f_{0} = 1$，那么 $S_{0} = 1 \\oplus 1 = 0$，而不是 $\\neg A_{0}$；因此选项C是无效的。\n- 如果对于 $i>0$，$f_{i} = A_{i} \\cdot C_{i}$，那么 $S_{i} = (A_{i} \\cdot C_{i}) \\oplus C_{i} = C_{i} \\cdot \\neg A_{i}$，而不是 $A_{i} \\oplus C_{i}$；因此选项D是无效的。\n- 如果对于任何 $i$，$f_{i} = A_{i} \\oplus C_{i}$，那么 $S_{i} = (A_{i} \\oplus C_{i}) \\oplus C_{i} = A_{i}$，而不是 $A_{i} \\oplus C_{i}$；因此选项E是无效的。\n\n因此，唯一能够产生正确的和，并能使用给定的 MUX 正确生成进位的配置是 $f_{0} = A_{0}$ 且对于 $i>0$ 有 $f_{i} = A_{i}$，即选项A。", "answer": "$$\\boxed{A}$$", "id": "1942932"}]}