{"hands_on_practices": [{"introduction": "异步电路的设计通常始于一个详细的规范，该规范会转化为一个原始流程表，其中每个独特的稳定条件都有自己的状态。为了实现更高效的电路，我们必须通过合并“兼容”的状态来减少状态总数。本练习将指导您完成从原始流程表中识别最大兼容集的系统过程，这是优化异步逻辑的一项基本技能 [@problem_id:1911361]。", "problem": "一个异步时序电路被设计用来控制一个专门的两级认证令牌。该电路有一个来自电容传感器的单一输入 `x`（`x=0` 代表无触摸，`x=1` 代表触摸）和一个单一输出 `Z`，用于激活内部过程的不同阶段。电路的行为由以下原始流程表描述，该表是根据系统在基本模式下运行的要求推导出来的（一次只有一个输入发生变化，且电路必须在下一次输入变化之前达到稳定状态）。该表列出了每个现态和输入条件下的次态，以及与每个现态相关联的摩尔（Moore）型输出 `Z`。\n\n**原始流程表：**\n| 现态 | 次态（输入 `x`） | 输出 |\n|---|---|---|\n| | `x=0` | `x=1` | `Z` |\n| A | (A) | B | 0 |\n| B | C | (B) | 0 |\n| C | A | D | 0 |\n| D | E | (D) | 1 |\n| E | A | F | 0 |\n| F | C | (F) | 1 |\n\n*注：稳定状态用括号表示，例如 (A)。*\n\n为了高效地实现该逻辑，需要通过合并相容状态来减少状态变量的数量。您的任务是找出给定原始流程表的所有最大相容状态集。最大相容集是一个不属于任何其他相容状态集真子集的相容状态集。\n\n以下哪个选项正确列出了所有的最大相容集？\n\nA. {A, C}, {B, E}\n\nB. {C, E}, {D, F}\n\nC. {A, B}, {D, F}, {E}\n\nD. {A, B, C}, {E, F}\n\nE. 没有状态可以合并。", "solution": "我们使用摩尔（Moore）型异步原始流程表的标准相容性定义：如果两个状态满足以下条件，则它们是相容的：(i) 它们的输出相等，以及 (ii) 对于每个输入值，它们对应的次态要么相等，要么本身是相容的。括号内的项表示稳定状态，并简单地给出等于现态的确定次态。\n\n从表中可知，各状态的输出为：$A:0$, $B:0$, $C:0$, $D:1$, $E:0$, $F:1$。因此，只有输出相等的状态才可能相容。这将候选状态划分为 $\\{A,B,C,E\\}$ 和 $\\{D,F\\}$ 两组。\n\n检查 $\\{D,F\\}$ 中的候选对：\n- 状态对 $\\{D,F\\}$：当 $x=0$ 时，$D \\to E$ 且 $F \\to C$，因此要求 $\\{E,C\\}$ 相容。当 $x=1$ 时，$D \\to D$ 且 $F \\to F$，这要求 $\\{D,F\\}$ 本身相容。因此，$\\{D,F\\}$ 相容当且仅当 $\\{C,E\\}$ 相容。\n\n检查 $\\{A,B,C,E\\}$ 中的候选对：\n- 状态对 $\\{C,E\\}$：当 $x=0$ 时，$C \\to A$ 且 $E \\to A$（相等，所以可以）。当 $x=1$ 时，$C \\to D$ 且 $E \\to F$，这要求 $\\{D,F\\}$ 相容。因此，$\\{C,E\\}$ 相容当且仅当 $\\{D,F\\}$ 相容。\n\n这两个条件形成了一个一致的相互依赖关系，没有矛盾，因此 $\\{C,E\\}$ 和 $\\{D,F\\}$ 都可以被声明为相容的。\n\n现在验证 $\\{A,B,C,E\\}$ 中的其他状态对均不相容：\n- 状态对 $\\{A,C\\}$：当 $x=1$ 时，$A \\to B$ 且 $C \\to D$；因为 $B$ 的输出为 $0$ 而 $D$ 的输出为 $1$，所以 $\\{B,D\\}$ 不相容，因此 $\\{A,C\\}$ 不相容。\n- 状态对 $\\{A,B\\}$：当 $x=0$ 时，$A \\to A$ 且 $B \\to C$，要求 $\\{A,C\\}$ 相容，但已知其不相容；因此 $\\{A,B\\}$ 不相容。\n- 状态对 $\\{A,E\\}$：当 $x=1$ 时，$A \\to B$ 且 $E \\to F$，要求 $\\{B,F\\}$ 相容，但由于输出不匹配，它们不相容；因此 $\\{A,E\\}$ 不相容。\n- 状态对 $\\{B,C\\}$：当 $x=0$ 时，$B \\to C$ 且 $C \\to A$，要求 $\\{C,A\\}$ 相容，但已知其不相容；因此 $\\{B,C\\}$ 不相容。\n- 状态对 $\\{B,E\\}$：当 $x=0$ 时，$B \\to C$ 且 $E \\to A$，要求 $\\{C,A\\}$ 相容，但已知其不相容；因此 $\\{B,E\\}$ 不相容。\n\n因此，仅有的非平凡相容对是 $\\{C,E\\}$ 和 $\\{D,F\\}$。它们无法被扩大：$\\{C,E\\}$ 不能包含 $A$ 或 $B$（两者均不相容），而 $\\{D,F\\}$ 因输出冲突不能包含任何输出为0的状态。因此，最大相容集正是 $\\{C,E\\}$ 和 $\\{D,F\\}$，这对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1911361"}, {"introduction": "异步设计中最大的挑战是避免时序危害，特别是关键竞争。当电路的次态取决于状态变量变化的不可预测的相对速度时，就会发生关键竞争，可能导致电路运行出错。本练习将演示一个不恰当的状态分配如何产生此类风险，并挑战您通过确保状态之间的正确邻接关系来找到一个无竞争的编码方案 [@problem_id:1911369]。", "problem": "一个异步时序电路有两个二进制输入 $x_1$ 和 $x_2$，以及三个内部状态 A、B 和 C。其行为由下面的合并流程表描述，其中表项代表下一状态，而括号内的状态是稳定状态。破折号 `-` 表示“无关”项。\n\n```\n    输入 (x1x2)\n状态 |  00  |  01  |  11  |  10\n-------------------------------------\n  A   | (A)  |  B   | (A)  |  -\n  B   |  A   | (B)  |  C   | (B)\n  C   |  -   |  B   | (C)  |  -\n```\n\n一位设计者提出了一个使用两个状态变量 $y_2$ 和 $y_1$ 的简单状态分配方案，如下所示：A = 01, B = 11, C = 00。发现此分配方案包含一个关键竞争。为解决此问题，需要一个新的使用三个状态变量 ($y_3, y_2, y_1$) 的无竞争分配方案。\n\n下列为状态 (A, B, C) 提出的三变量分配方案中，哪一个能确保流程表中指定的所有转换都是无竞争的？\n\nA. A=000, B=001, C=010\n\nB. A=001, B=011, C=111\n\nC. A=100, B=010, C=001\n\nD. A=010, B=111, C=101", "solution": "我们在基本模式下工作：每次只有一个输入发生变化，且变化仅在电路处于稳定状态时发生。一个无竞争的分配方案要求，任何两个因单个输入变化而发生转换的状态，其二进制编码必须仅相差一位，即它们的汉明距离等于 $1$。\n\n从合并流程表中，稳定单元格为：\n- 状态 $A$ 在输入为 $00$ 和 $11$ 时是稳定的。\n- 状态 $B$ 在输入为 $01$ 和 $10$ 时是稳定的。\n- 状态 $C$ 在输入为 $11$ 时是稳定的。\n\n通过从一个稳定单元格改变一个输入位，列举出稳定状态之间的所有单输入转换：\n- 从输入为 $00$ 时的状态 $A$：$00 \\to 01$ 产生下一状态 $B$，因此 $A \\to B$。\n- 从输入为 $11$ 时的状态 $A$：$11 \\to 01$ 产生下一状态 $B$，因此 $A \\to B$。\n- 从输入为 $01$ 时的状态 $B$：$01 \\to 00$ 产生下一状态 $A$，因此 $B \\to A$；且 $01 \\to 11$ 产生下一状态 $C$，因此 $B \\to C$。\n- 从输入为 $10$ 时的状态 $B$：$10 \\to 00$ 产生下一状态 $A$，因此 $B \\to A$；且 $10 \\to 11$ 产生下一状态 $C$，因此 $B \\to C$。\n- 从输入为 $11$ 时的状态 $C$：$11 \\to 01$ 产生下一状态 $B$，因此 $C \\to B$。\n\n因此，所需的相邻状态对集合为 $\\{(A,B),(B,C)\\}$（及其反向转换）。为避免关键竞争，任何有效的分配方案都必须满足\n$$\nd_{H}(A,B)=1 \\quad \\text{and} \\quad d_{H}(B,C)=1,\n$$\n其中 $d_{H}$ 表示汉明距离。对 $d_{H}(A,C)$ 没有要求，因为在单输入变化下，A 和 C 之间没有直接转换。\n\n评估每个提出的三变量分配方案：\n\n- 方案 A：$A=000$, $B=001$, $C=010$。\n  $d_{H}(A,B)=1$；$d_{H}(B,C)=2$。不满足，因为 $B \\leftrightarrow C$ 必须相邻。\n\n- 方案 B：$A=001$, $B=011$, $C=111$。\n  $d_{H}(A,B)=1$；$d_{H}(B,C)=1$。满足两个邻接要求。$d_{H}(A,C)=2$ 是可接受的。\n\n- 方案 C：$A=100$, $B=010$, $C=001$。\n  $d_{H}(A,B)=2$。不满足，因为 $A \\leftrightarrow B$ 必须相邻。\n\n- 方案 D：$A=010$, $B=111$, $C=101$。\n  $d_{H}(A,B)=2$。不满足，因为 $A \\leftrightarrow B$ 必须相邻。\n\n因此，只有方案 B 确保所有指定的转换都是无竞争的。", "answer": "$$\\boxed{B}$$", "id": "1911369"}, {"introduction": "在确定了精简且无竞争的状态分配后，抽象的流程表必须被转化为具体的逻辑门电路。这最后的综合步骤涉及到推导每个次态变量的布尔表达式，使其成为输入和现态变量的函数。本练习将让您亲手实践为一个内存仲裁器电路推导次态方程，该电路采用独热码（one-hot）编码方案，这是一种确保无竞争转换的常用技术 [@problem_id:1911359]。", "problem": "一个异步时序电路被设计用作一个简单的存储总线仲裁器。该仲裁器为两个处理器 P1 和 P2 管理对共享存储资源的访问。该电路有两个输入 $R_1$ 和 $R_2$，它们分别是来自 P1 和 P2 的请求线（$R_i = 1$ 表示有请求，$R_i = 0$ 表示无请求）。该电路在基本模式下工作，意味着一次只有一个输入信号可以改变。\n\n该电路有三个不同的内部状态，在下面的合并流程表中描述。状态 A 是空闲状态，此时没有处理器被授予访问权限。状态 B 授予 P1 访问权限，状态 C 授予 P2 访问权限。一旦授予权限，该授权将一直保持，直到相应的处理器放弃其请求。稳定状态由括号表示。\n\n| 现态 | 输入 ($R_{1}R_{2}$) 对应的次态 |\n| :---: | :---: | :---: | :---: | :---: |\n| | **00** | **01** | **10** | **11** |\n| **A** | (A) | C | B | - |\n| **B** | A | - | (B) | (B) |\n| **C** | A | (C) | - | (C) |\n\n为了综合该电路，使用了独热状态分配，包含三个状态变量 $y_{1}, y_{2}, y_{3}$。分配如下：\n- 状态 A: ($y_{1}y_{2}y_{3}$) = 100\n- 状态 B: ($y_{1}y_{2}y_{3}$) = 010\n- 状态 C: ($y_{1}y_{2}y_{3}$) = 001\n\n设 $Y_{1}, Y_{2}, Y_{3}$ 分别是状态变量 $y_{1}, y_{2}, y_{3}$ 的次态函数。确定实现此逻辑所需的 $Y_{1}, Y_{2},$ 和 $Y_{3}$ 的简化积之和 (SOP) 表达式。在表达式中，使用撇号 (') 来表示“非”运算（例如，$R_1'$）。\n\nA. $Y_1 = R_1'R_2' + y_1R_1R_2$; $Y_2 = y_1R_1R_2' + y_2(R_1 + R_2)$; $Y_3 = y_1R_1'R_2 + y_3(R_1 + R_2)$\n\nB. $Y_1 = R_1'R_2' + y_1R_1R_2$; $Y_2 = y_1R_1'R_2 + y_2(R_1 + R_2)$; $Y_3 = y_1R_1R_2' + y_3(R_1 + R_2)$\n\nC. $Y_1 = R_1'R_2'$; $Y_2 = y_1R_1R_2'$; $Y_3 = y_1R_1'R_2$\n\nD. $Y_1 = y_1 + R_1'R_2'$; $Y_2 = y_2 + y_1R_1R_2'$; $Y_3 = y_3 + y_1R_1'R_2$\n\nE. $Y_1 = R_1'R_2' + y_1R_1R_2$; $Y_2 = y_1R_1R_2' + y_2R_1'R_2'$; $Y_3 = y_1R_1'R_2 + y_3R_1'R_2'", "solution": "我们使用独热状态分配：状态 A 对应于 $y_{1}=1$（且 $y_{2}=y_{3}=0$），状态 B 对应于 $y_{2}=1$，状态 C 对应于 $y_{3}=1$。次态函数 $Y_{i}$ 的值为 1，当且仅当对于某个现态和输入的组合，流程表指定的次态是由 $y_{i}=1$ 编码的状态。合并流程表中的破折号被视为无关项，并可在异步综合中用于实现无险覆盖。\n\n$Y_{1}$ (次态为 A) 的推导：\n根据流程表，次态为 A 的情况有：\n- A 行，输入 $00$：$(A,00)\\to(A)$\n- B 行，输入 $00$：$(B,00)\\to A$\n- C 行，输入 $00$：$(C,00)\\to A$\n因此，\n$$\nY_{1}=y_{1}R_1'R_2'+y_{2}R_1'R_2'+y_{3}R_1'R_2'=R_1'R_2'(y_{1}+y_{2}+y_{3}).\n$$\n在独热约束下（即在有效操作中 $y_{1},y_{2},y_{3}$ 只有一个为 1），此表达式化简为\n$$\nY_1=R_1'R_2'.\n$$\n为利用无关项（条目 $(A,11)$ 是破折号）来提高抗险能力，我们可以在输入为 $11$ 时为 A 添加冗余的自环项 $y_{1}R_1R_2$，这不会改变电路的正确操作。因此，一个有效的简化 SOP 表达式是\n$$\nY_1=R_1'R_2'+y_{1}R_1R_2.\n$$\n\n$Y_{2}$ (次态为 B) 的推导：\n根据流程表，次态为 B 的情况有：\n- A 行，输入 $10$：$(A,10)\\to B$\n- B 行，输入 $10$：$(B,10)\\to(B)$\n- B 行，输入 $11$：$(B,11)\\to(B)$\n因此，\n$$\nY_{2}=y_{1}R_1R_2'+y_{2}R_1R_2'+y_{2}R_1R_2 = y_{1}R_1R_2'+y_{2}R_1(R_2'+R_2) = y_{1}R_1R_2'+y_{2}R_1.\n$$\n为了实现异步无险，我们可以利用无关项（例如，$(B,01)$ 是破折号）进行扩展，使得当输入在 $10$、$11$和 $01$ 之间发生单个输入变化时，$Y_{2}$ 保持为 1。将 $y_{2}R_1$ 替换为更大的蕴含项 $y_{2}(R_1+R_2)$ 可以确保 $Y_{2}$ 在这些转换过程中保持为 1：\n$$\nY_2=y_1R_1R_2'+y_2(R_1+R_2).\n$$\n\n$Y_{3}$ (次态为 C) 的推导：\n根据对称性，从流程表中可知，次态为 C 的情况有：\n- A 行，输入 $01$：$(A,01)\\to C$\n- C 行，输入 $01$：$(C,01)\\to(C)$\n- C 行，输入 $11$：$(C,11)\\to(C)$\n因此，\n$$\nY_{3}=y_{1}R_1'R_2+y_{3}R_1'R_2+y_{3}R_1R_2 = y_{1}R_1'R_2+y_{3}R_2.\n$$\n同样，为了实现无险操作，我们利用无关项（例如，$(C,10)$ 是破折号）进行扩展，使得当输入在 $01$、$11$和 $10$ 之间发生单个输入变化时，$Y_{3}$ 保持为 1，从而得到\n$$\nY_3=y_1R_1'R_2+y_3(R_1+R_2).\n$$\n\n汇总结果，与合并流程表和无险异步实现一致的简化 SOP 表达式为：\n$$\nY_1=R_1'R_2'+y_{1}R_1R_2,\\quad\nY_2=y_1R_1R_2'+y_2(R_1+R_2),\\quad\nY_3=y_1R_1'R_2+y_3(R_1+R_2).\n$$\n这些表达式与选项 A 匹配。", "answer": "$$\\boxed{A}$$", "id": "1911359"}]}