{"hands_on_practices": [{"introduction": "让我们从一个静态-1冒险的基本例子开始。这个练习将向您展示如何通过代数方法识别最小“积之和”(SOP)表达式中的潜在毛刺。通过应用共识定理，您将推导出所需的一个冗余项，以在不同逻辑路径之间架起一座“桥梁”，从而确保输出稳定。[@problem_id:1929345]", "problem": "在一个高精度制造过程的控制系统设计中，使用一个数字逻辑电路来管理一个安全联锁。该电路的输出（由函数 $F$ 表示）在关键操作阶段必须保持稳定的逻辑1，以使安全联锁保持接合状态。该电路的行为由三个二进制传感器输入 $A$、$B$ 和 $C$ 决定。\n\n一位工程师根据以下最小“积之和”(SOP)表达式实现了该电路：\n$$F(A,B,C) = A'B' + BC$$\n在测试过程中，发现了一个严重缺陷。在只有一个输入变量改变其状态的特定转换中，输出 $F$ 会瞬间降至逻辑0，然后才恢复到逻辑1。这种被称为“静态1冒险”的“毛刺”可能会错误地断开安全联锁，从而构成重大风险。\n\n为纠正此设计缺陷，你的任务是通过向SOP表达式中添加一个冗余乘积项，使电路对这种静态1冒险具有鲁棒性。这一修改等效于在电路中添加一个与门，并将其输出馈入最终的或门。这个所需的冗余乘积项的布尔表达式是什么？", "solution": "我们已知最小SOP实现为\n$$F(A,B,C)=A'B' + BC.$$\nSOP实现中的静态1冒险发生在以下情况：两个乘积项仅在单个变量的互补形式上不同，它们覆盖了相邻的1单元格，但是由不同的路径实现；在该单个变量发生转换期间，一条路径可能在另一条路径开启之前关闭，从而瞬间产生0。标准的补救方法是添加共识（冗余）乘积项，该项由两个相关项在移除切换变量及其补元后，将其余文字相乘而形成。\n\n识别这对乘积项和切换变量：\n- 这两项是 $A'B'$ 和 $BC$。\n- 它们在文字 $B$ 与 $B'$ 上不同，因此出错的单变量转换在于 $B$。\n\n通过从 $BC$ 中移除 $B$ 并从 $A'B'$ 中移除 $B'$，然后将剩余的文字相乘来形成共识项：\n- 从 $A'B'$ 中剩余的文字是 $A'$。\n- 从 $BC$ 中剩余的文字是 $C$。\n- 因此，共识（冗余）项是\n$$A'C.$$\n\n这一项覆盖了当 $B$ 切换时，$A=0$ 且 $C=1$ 的相邻1单元格，从而防止了静态1冒险。添加该项可得到\n$$F_{\\text{hazard-free}}=A'B' + BC + A'C,$$\n这在功能上与原始表达式等效（根据共识定理：设 $X=B$，$Y=C$，$Z=A'$，我们有 $XY + X'Z + YZ = XY + X'Z$），但消除了冒险。\n\n因此，所需的单个冗余乘积项是 $A'C$。", "answer": "$$\\boxed{A'C}$$", "id": "1929345"}, {"introduction": "对于更复杂的函数，一个可视化工具是无价的。这个问题将挑战您使用卡诺图（K-map）来系统地发现并消除所有静态-1冒险。您将练习识别那些没有被同一个乘积项覆盖的相邻“1”，并学习如何添加一个最优的冗余项来使设计更加稳健。[@problem_id:1929350]", "problem": "一个数字逻辑电路被设计用于实现一个四变量布尔函数 $F(A,B,C,D)$。该函数由其最小项之和指定，其中最小项 $m_i$ 对应于其二进制表示（A为最高有效位）等于 $i$ 的输入组合。该函数由下式给出：\n$$F(A,B,C,D) = \\sum m(3,7,10,11,12,14,15)$$\n该函数的一个最小积之和 (SOP) 实现被构建。然而，发现这个最小化电路容易出现静态1冒险，即当输入在两个都应产生1输出的状态之间变化时，可能出现的瞬时假0输出。\n\n为确保可靠运行，必须向SOP表达式中添加一个逻辑上冗余的乘积项。选择该项时，必须保证它能覆盖最小化设计中存在的所有潜在静态1冒险。你的任务是找到这个特定的用于消除冒险的乘积项。该项必须使用最少数量的文字。\n\n这个冗余乘积项是什么？请将答案写成变量乘积的形式（例如，$A'B$, $BCD$），并按字母顺序排列变量。", "solution": "为了解决这个问题，我们将使用卡诺图 (K-map) 来可视化函数并识别冒险。然后，我们将确定消除这些冒险所需的单个乘积项。\n\n**步骤1：构建卡诺图**\n\n我们为 $F(A,B,C,D)$ 创建一个四变量卡诺图，并在与给定最小项对应的单元格中填入'1'：3 (0011)、7 (0111)、10 (1010)、11 (1011)、12 (1100)、14 (1110) 和 15 (1111)。该卡诺图的结构是：行代表变量 $AB$，列代表变量 $CD$，并使用格雷码排序。\n\n得到的卡诺图如下：\n```\n      CD\n   AB 00  01  11  10\n   00  0   0   1   0   (m3)\n   01  0   0   1   0   (m7)\n   11  1   0   1   1   (m12, m15, m14)\n   10  0   0   1   1   (m11, m10)\n```\n\n**步骤2：找到最小积之和 (SOP) 表达式**\n\n我们通过将 '1' 组合成大小为 $2^k$ 的最大可能矩形组来找到最小SOP。我们必须首先确定本质主蕴含项 (EPI)。\n\n- 最小项 $m_3$ (0011) 只能被由 {3, 7, 11, 15} 组成的四元组覆盖。这得到乘积项 $CD$。因此，$CD$ 是一个EPI。\n- 最小项 $m_{12}$ (1100) 只能被由 {12, 14} 组成的二元组覆盖。这得到乘积项 $ABD'$。因此，$ABD'$ 是一个EPI。\n\nEPI $CD$ 和 $ABD'$ 覆盖了最小项 {3, 7, 11, 15, 12, 14}。唯一剩下未被覆盖的最小项是 $m_{10}$ (1010)。\n\n为了覆盖 $m_{10}$，我们可以将其与相邻的最小项 $m_{11}$ (1011) 组合。这构成了组 {10, 11}，对应的乘积项为 $AB'C$。\n\n因此，一个可能的最小SOP表达式是 $F_{min} = CD + ABD' + AB'C$。\n\n**步骤3：识别静态1冒险**\n\n如果卡诺图上两个相邻的'1'没有被SOP表达式中的同一个乘积项覆盖，则可能存在静态1冒险。让我们检查 $F_{min}$ 的邻接关系：\n- 组 1 ($CD$): {3, 7, 11, 15}\n- 组 2 ($ABD'$): {12, 14}\n- 组 3 ($AB'C$): {10, 11}\n\n我们检查相邻'1'之间的转换：\n- $m_{10}$ (1010) 和 $m_{14}$ (1110) 之间的转换：$m_{10}$ 被 $AB'C$ (组3) 覆盖，而 $m_{14}$ 被 $ABD'$ (组2) 覆盖。由于它们属于不同的组，这个转换是一个**静态1冒险**。\n- $m_{14}$ (1110) 和 $m_{15}$ (1111) 之间的转换：$m_{14}$ 被 $ABD'$ (组2) 覆盖，而 $m_{15}$ 被 $CD$ (组1) 覆盖。由于它们属于不同的组，这个转换也是一个**静态1冒险**。\n\n所有其他相邻的'1'都共享至少一个组。例如，$m_{10}$ 和 $m_{11}$ 是相邻的，并且都被 $AB'C$ 覆盖。同样，$m_{11}$ 和 $m_{15}$ 是相邻的，并且都被 $CD$ 覆盖。\n\n**步骤4：找到消除冒险的项**\n\n为了消除所有静态1冒险，每一对相邻的'1'都必须被一个公共的乘积项覆盖。我们需要添加一个（或多个）项来覆盖我们识别出的冒险转换。\n- $m_{10}$ 和 $m_{14}$ 之间的冒险需要一个能同时覆盖这两个最小项的项。\n- $m_{14}$ 和 $m_{15}$ 之间的冒险需要一个能同时覆盖这两个最小项的项。\n\n问题要求用*一个*乘积项来覆盖所有冒险。因此，这样的项必须覆盖最小项集合 {10, 14, 15}。\n\n查看卡诺图，我们寻找一个包含 {10, 14, 15} 的有效矩形分组。最大的此类分组是由最小项 {10, 11, 14, 15} 组成的2x2方块。\n- $m_{10}$ (1010)\n- $m_{11}$ (1011)\n- $m_{14}$ (1110)\n- $m_{15}$ (1111)\n\n对于这个组，变量 $A=1$ 和变量 $C=1$ 是恒定的，而 $B$ 和 $D$ 变化。这个组的乘积项是 $AC$。\n\n这个项 $AC$ 覆盖了两个冒险转换：\n- 它覆盖了 ($m_{10}, m_{14}$) 这一对。\n- 它覆盖了 ($m_{14}, m_{15}$) 这一对。\n\n将此项添加到最小SOP中，得到无冒险表达式：$F_{hf} = CD + ABD' + AB'C + AC$。项 $AC$ 在逻辑上是冗余的，因为它所覆盖的所有最小项 ({10, 11, 14, 15}) 都已被最初的三个项所覆盖。\n\n该项必须具有最少数量的文字。项 $AC$ 对应于包含所需最小项 {10, 14, 15} 的最大可能分组（一个四元组）。更大的分组意味着更少的文字。因此，具有两个文字的 $AC$ 就是所求的项。", "answer": "$$\\boxed{AC}$$", "id": "1929350"}, {"introduction": "我们对无冒险设计的探索，在不考虑“和之积”（POS）电路及其独特的挑战——静态-0冒险——的情况下是不完整的。本练习将指导您设计一个无冒险的POS实现。您将学习如何分析函数的“0”，以确保“0”状态之间的转换也没有毛刺，从而完善您对稳健数字设计的理解。[@problem_id:1929362]", "problem": "一个4变量布尔函数，记为 `F(W, X, Y, Z)`，由其输出为1的最小项集合指定。该最小项集合为 `Σm(4, 5, 6, 7, 10, 11, 14, 15)`。\n\n您的任务是为此函数找到一个两级逻辑电路实现，并确保该实现不存在任何静态冒险。最终的实现必须表示为“和之积”（POS）形式的简化布尔表达式。请使用 `W, X, Y, Z` 作为变量，`+` 表示逻辑或，并置表示逻辑与，撇号（`'`）表示逻辑非。", "solution": "给定4变量布尔函数 $F(W,X,Y,Z)$ 的最小项为 $m(4,5,6,7,10,11,14,15)$。将每个最小项写成二进制形式 $(W,X,Y,Z)$，其中 $W$ 是最高有效位：\n- $m4$ 到 $m7$ 分别是 $(0,1,0,0)$、$(0,1,0,1)$、$(0,1,1,0)$、$(0,1,1,1)$，即 $W=0$，$X=1$，$Y,Z$ 可为任意值。\n- $m10,m11,m14,m15$ 分别是 $(1,0,1,0)$、$(1,0,1,1)$、$(1,1,1,0)$、$(1,1,1,1)$，即 $W=1$，$Y=1$，$X,Z$ 可为任意值。\n\n根据这一观察，直接得到一个最简“积之和”表达式：\n$$\nF = W'X + WY.\n$$\n\n为了获得最简“和之积”，使用共识/因式分解恒等式 $AB + A'C = (A + C)(A' + B)$，其中 $A=W$，$B=Y$，$C=X$：\n$$\nF = W'X + WY = (W + X)(W' + Y).\n$$\n\n为了确保两级“和之积”实现中不存在任何静态冒险，我们必须消除静态0冒险。在“和之积”形式中，当两个相邻的零未被一个公共的和项覆盖时，就可能发生静态0冒险。函数 $F$ 的零点是剩余的最小项：\n$$\n\\{0,1,2,3,8,9,12,13\\}.\n$$\n这两个和项对应于对零的分组：\n- 当 $W=0$，$X=0$ 时，$W + X = 0$（这覆盖了 $m0,m1,m2,m3$）。\n- 当 $W=1$，$Y=0$ 时，$W' + Y = 0$（这覆盖了 $m8,m9,m12,m13$）。\n\n检查位于不同分组中的相邻零对。仅有的此类零对是：\n- $(m0,m8)$：$(0,0,0,0)$ 与 $(1,0,0,0)$ 相邻（$W$ 翻转），\n- $(m1,m9)$：$(0,0,0,1)$ 与 $(1,0,0,1)$ 相邻（$W$ 翻转）。\n\n通过取在两个端点处均为0的公共文字，添加冗余和项，使该和项在每对零点处都为0：\n- 对于 $(m0,m8)$，公共文字为 $X=0$，$Y=0$，$Z=0$，添加 $X + Y + Z$。\n- 对于 $(m1,m9)$，公共文字为 $X=0$，$Y=0$，$Z=1$，添加 $X + Y + Z'$。\n\n因此，一个消除了冒险的“和之积”表达式是\n$$\nF = (W + X)(W' + Y)(X + Y + Z)(X + Y + Z').\n$$\n使用 $(P + R)(P + R') = P$（其中 $P=X+Y$，$R=Z$）来简化添加的因子：\n$$\n(X + Y + Z)(X + Y + Z') = X + Y.\n$$\n因此，一个无冒险的两级“和之积”实现是\n$$\nF = (W + X)(W' + Y)(X + Y).\n$$\n最后，验证添加的因子不会改变函数 $F$ 在其1单元上的值：对于 $W=0,X=1$，我们有 $X+Y=1$；对于 $W=1,Y=1$，我们有 $X+Y=1$，所以函数在所有指定的1-最小项上的值保持不变，同时所有相邻的零对都已被覆盖，从而消除了静态0冒险。两级“和之积”实现不会出现静态1冒险，因此该实现不存在任何静态冒险。", "answer": "$$\\boxed{(W+X)(W'+Y)(X+Y)}$$", "id": "1929362"}]}