{"hands_on_practices": [{"introduction": "在我们深入探讨流水线停顿和冒险的复杂性之前，我们必须首先建立一个关于理想流水线如何运作的坚实心智模型。本练习将指导您跟踪单个指令在每个时钟周期中顺序通过流水线各个阶段的过程。掌握这种基本的可视化技能是理解和诊断流水线性能问题的第一步。[@problem_id:1952279]", "problem": "某个处理器实现了一个四级指令流水线以提升性能。这些阶段按顺序为：1. 指令提取 (IF)，2. 指令译码 (ID)，3. 执行 (EX)，以及 4. 写回 (WB)。每个阶段完成其操作都需要恰好一个时钟周期。一个由7条指令序列（索引为 I1, I2, I3, I4, I5, I6, 和 I7）组成的程序将在此处理器上运行。流水线初始为空，并且在每个时钟周期的开始会有一条新指令进入流水线。假设不存在任何形式的流水线停顿、刷新或数据冒险，请确定在第5个时钟周期时，占据执行 (EX) 阶段的指令 `In` 的索引 `n`。", "solution": "一个具有 IF、ID、EX、WB 四个阶段的流水线，在理想条件下，每个阶段耗时一个时钟周期，每条指令在每个周期前进一个阶段。如果流水线初始为空，且指令 $I_{1}$ 在时钟周期 $t=1$ 的开始进入，则指令 $I_{n}$ 处于：\n- IF 阶段，在时钟周期 $t = n$ 时，\n- ID 阶段，在时钟周期 $t = n + 1$ 时，\n- EX 阶段，在时钟周期 $t = n + 2$ 时，\n- WB 阶段，在时钟周期 $t = n + 3$ 时。\n\n因此，在时钟周期 $t$ 占据 EX 阶段的指令满足：\n$$\nt = n + 2 \\quad \\Rightarrow \\quad n = t - 2.\n$$\n对于第 $5$ 个时钟周期，设置 $t=5$ 可得：\n$$\nn = 5 - 2 = 3.\n$$\n因此，在第 $5$ 个时钟周期，指令 $I_{3}$ 处于 EX 阶段。", "answer": "$$\\boxed{3}$$", "id": "1952279"}, {"introduction": "理想的流水线可以达到每个周期执行一条指令的吞吐率，但现实很少如此完美。数据依赖和其他冒险会迫使流水线停顿，引入空闲周期并降低性能。本练习将从简单的可视化转向定量分析，使用关键的性能指标——每指令周期数($CPI$)——来精确衡量这些停顿造成的性能损失。[@problem_id:1952280]", "problem": "一个名为“Comet-1”的假设的简单处理器，具有一个4级指令流水线（取指令、解码、执行、写回），并以1.0 GHz的时钟频率运行。\n\n在理想条件下，即流水线总是满载且没有冒险时，该处理器可以在每个时钟周期完成一条指令。\n\n在执行一个特定的基准程序期间，观察到数据相关性导致了频繁的流水线停顿。详细分析显示，每当一组四条指令进入流水线时，都会稳定地发生一次数据冒险，迫使流水线停顿正好一个时钟周期。\n\n假设这种停顿模式在整个基准程序执行期间是均匀的，计算Comet-1处理器新的有效每指令周期数（CPI）。将您的答案表示为一个四舍五入到三位有效数字的实数。", "solution": "一个无冒险的4级全流水线处理器，其理想稳态吞吐量是每个时钟周期一条指令，因此理想的每指令周期数是\n$$\\text{CPI}_{\\text{ideal}} = 1.$$\n根据观察到的模式，每组四条指令，会发生一次正好为一个时钟周期的流水线停顿。因此，对于任何一个包含四条指令的块，总周期数为\n$$N_{\\text{cycles}} = 4 + 1 = 5.$$\n根据定义，\n$$\\text{CPI} = \\frac{N_{\\text{cycles}}}{N_{\\text{instructions}}}.$$\n将此应用于这个4指令块，\n$$\\text{CPI}_{\\text{effective}} = \\frac{5}{4} = 1 + \\frac{1}{4} = 1.25.$$\n计算CPI不需要时钟频率。四舍五入到三位有效数字，有效CPI为$1.25$。", "answer": "$$\\boxed{1.25}$$", "id": "1952280"}, {"introduction": "处理器设计是一场权衡的艺术。增加流水线深度可以提高时钟频率，但这通常会以更高的冒险（如分支预测错误）惩罚为代价。这个综合性练习将让您扮演架构师的角色，通过综合运用 $CPI$、时钟周期和停顿惩罚等概念来比较两种竞争设计，从而做出基于证据的性能决策。[@problem_id:1952292]", "problem": "一个CPU设计团队正在为一款新的嵌入式处理器评估两种不同的流水线架构。其目标是确定哪种设计能为特定的目标工作负载提供更好的性能。\n\n第一种方案，Architecture-5（A5），是一个经典的5级流水线。第二种方案，Architecture-6（A6），是一个更深的6级流水线设计。A6中增加的流水线级数使得每个流水级中的逻辑设计更简单，从而可以实现更高的时钟频率。具体来说，A6架构的时钟周期比A5架构的时钟周期短10.0%。\n\n更深流水线的性能代价是控制冒险的惩罚增加。在A5设计中，分支预测错误被检测和处理，会产生2个时钟周期的停顿惩罚。在A6设计中，由于增加了额外的流水线级，同样的分支预测错误会产生3个时钟周期的停顿惩罚。\n\n对一个代表性基准程序的分析表明，执行的指令中有20.0%是分支指令。两种架构中使用的动态分支预测器对于此基准程序的平均预测错误率为15.0%。假设分支预测错误造成的停顿是唯一的性能损失来源，并且理想流水线的吞吐量为每个时钟周期一条指令。\n\n计算运行此基准程序时，6级流水线（A6）的总执行时间与5级流水线（A5）的总执行时间之比。将你的答案以数值形式给出，并四舍五入到三位有效数字。", "solution": "设动态指令总数为 $N$。理想的基础CPI为 $1$ （每个周期一条指令）。分支预测错误是唯一的停顿来源。\n\n设 $f_{b}$ 为分支指令的比例，$p_{m}$ 为预测错误率。那么，预测错误的分支指令占总指令的比例为 $f_{b}p_{m}$。每次预测错误会增加 $P$ 个停顿周期，因此CPI变为\n$$\n\\text{CPI} = 1 + f_{b}p_{m}P.\n$$\n对于A5，$P_{5}=2$；对于A6，$P_{6}=3$。已知 $f_{b}=0.2$ 且 $p_{m}=0.15$，我们得到 $f_{b}p_{m}=0.03$。因此，\n$$\n\\text{CPI}_{5}=1+0.03\\cdot 2=1.06,\\qquad \\text{CPI}_{6}=1+0.03\\cdot 3=1.09.\n$$\n设A5的时钟周期为 $T_{5}$。A6的时钟周期为 $T_{6}=0.9\\,T_{5}$。总执行时间为 $T = N \\cdot \\text{CPI} \\cdot T_{\\text{clk}}$，因此执行时间之比为\n$$\nR=\\frac{T_{6}}{T_{5}}=\\frac{N\\cdot \\text{CPI}_{6}\\cdot T_{6}}{N\\cdot \\text{CPI}_{5}\\cdot T_{5}}=0.9\\cdot \\frac{1.09}{1.06}=\\frac{9}{10}\\cdot \\frac{109}{106}=\\frac{981}{1060}\\approx 0.925471698.\n$$\n四舍五入到三位有效数字，该比率为 $0.925$。", "answer": "$$\\boxed{0.925}$$", "id": "1952292"}]}