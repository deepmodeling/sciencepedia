{"hands_on_practices": [{"introduction": "我们从同步设计最基本的构建模块开始：一个寄存器通过一些逻辑将其输出反馈回其自身的输入。这个简单的循环包含了时序分析的所有基本要素。第一个练习将指导你计算确保数据在每个周期被正确捕获所需的最小时钟周期，从而巩固你对核心建立时间约束方程 $T_{clk, \\text{min}} \\ge T_{cq} + T_{comb} + T_{setup}$ 的理解。[@problem_id:1946454]", "problem": "一个高速通信系统中的一个专用数据加扰模块是围绕一个同步反馈环路构建的。该环路由一个 D 型触发器 (DFF) 和一个组合逻辑块组成。DFF 的输出端连接到组合逻辑块的输入端，而该逻辑块的输出端则反馈回同一 DFF 的 D 输入端。整个电路由一个单一的理想时钟信号驱动。\n\n各组件的时序特性如下：\n- DFF 的时钟到Q端延迟为 $T_{cq} = 65 \\text{ ps}$。\n- 通过组合逻辑块的传播延迟为 $T_{comb} = 750 \\text{ ps}$。\n- DFF 所需的建立时间为 $T_{setup} = 85 \\text{ ps}$。\n- DFF 所需的保持时间为 $T_{hold} = 40 \\text{ ps}$。\n\n假设保持时间约束已满足，计算能确保电路可靠运行且不发生任何建立时间违规的最小可能时钟周期。将最终答案以纳秒 (ns) 为单位表示，并四舍五入至三位有效数字。", "solution": "我们考虑一个单寄存器同步环路，其中从 DFF 输出端发出的数据必须传播通过组合逻辑，并在下一个有效时钟沿到来之前及时到达 DFF 输入端，以满足建立时间要求。在理想时钟且无时钟偏斜或抖动的情况下，保证可靠运行的建立时间约束由以下公式给出：\n$$\nT_{clk, \\text{min}} \\ge T_{cq} + T_{comb} + T_{setup}.\n$$\n将给定的值（以皮秒为单位）代入：\n$$\nT_{clk, \\text{min}} = 65\\,\\text{ps} + 750\\,\\text{ps} + 85\\,\\text{ps} = 900\\,\\text{ps}.\n$$\n转换为纳秒：\n$$\n900\\,\\text{ps} = 0.900\\,\\text{ns}.\n$$\n题目说明保持时间约束已满足，因此它不会对最小周期产生进一步的约束。因此，避免建立时间违规的最小时钟周期为 $0.900\\,\\text{ns}$，保留三位有效数字。", "answer": "$$\\boxed{0.900}$$", "id": "1946454"}, {"introduction": "在理想世界中，时钟信号会同时到达每个触发器，但在现实中，物理布线延迟会产生“时钟偏斜” ($T_{skew}$)。本练习将介绍这个至关重要的现实世界概念，展示它如何改变我们的时序预算。通过分析一个时钟较晚到达目标寄存器的路径，你将学习到时钟偏斜如何影响时序方程，并学会将其正确地纳入你的频率计算中。[@problem_id:1946392]", "problem": "一位设计工程师正在分析一个为高速信号处理而设计的定制专用集成电路 (ASIC) 中一个流水线级的关键路径。该路径包含一个源寄存器、一个组合逻辑块和一个目标寄存器，所有这些都由同一个系统时钟驱动。这些组件的时序参数已被确定如下：\n\n- 源寄存器中任何触发器的时钟到Q端延迟 ($T_{cq}$) 为 250 ps。\n- 通过组合逻辑块的最大传播延迟 ($T_{logic}$) 为 180 ps。\n- 目标寄存器中的触发器所需的建立时间 ($T_{setup}$) 为 60 ps。\n\n由于芯片上的布线差异，两个寄存器之间存在时钟偏斜 ($T_{skew}$)。时钟信号到达目标寄存器时钟输入端的时间比到达源寄存器时钟输入端的时间晚 20 ps。\n\n假设这些是唯一的时序约束，请确定该流水线级的最大可能工作频率。答案以千兆赫兹 (GHz) 为单位，并四舍五入到三位有效数字。", "solution": "对于一个包含源寄存器、组合逻辑和目标寄存器的同步流水线级，在存在时钟偏斜的情况下，跨越单个周期的建立时间约束是通过对齐数据到达时间和下一个捕获时钟沿来推导的。\n\n设源端的启动时钟沿发生在时间零点。数据到达目标输入端的时间为：\n$$\nt_{\\text{arr}}=T_{cq}+T_{\\text{logic}}.\n$$\n目标端的下一个捕获时钟沿到达的时间为：\n$$\nt_{\\text{cap}}=T_{\\text{clk}}+T_{\\text{skew}},\n$$\n其中，如果目标时钟比源时钟晚到，则 $T_{\\text{skew}}$ 为正值。建立时间约束要求：\n$$\nt_{\\text{arr}}+T_{\\text{setup}}\\leq t_{\\text{cap}},\n$$\n这就得到：\n$$\nT_{cq}+T_{\\text{logic}}+T_{\\text{setup}}\\leq T_{\\text{clk}}+T_{\\text{skew}}.\n$$\n因此，最小允许时钟周期为：\n$$\nT_{\\text{clk,min}}=T_{cq}+T_{\\text{logic}}+T_{\\text{setup}}-T_{\\text{skew}}.\n$$\n代入给定值（单位：皮秒）：\n$$\nT_{\\text{clk,min}}=250+180+60-20=470\\ \\text{ps}.\n$$\n最大工作频率是最小周期的倒数：\n$$\nf_{\\max}=\\frac{1}{T_{\\text{clk,min}}}=\\frac{1}{470\\times 10^{-12}\\ \\text{s}}=\\frac{1}{0.470\\ \\text{ns}}\\approx 2.12766\\ \\text{GHz}.\n$$\n四舍五入到三位有效数字：\n$$\nf_{\\max}=2.13\\ \\text{GHz}.\n$$", "answer": "$$\\boxed{2.13}$$", "id": "1946392"}, {"introduction": "组合逻辑延迟 ($T_{comb}$) 通常被视为一个给定的数值，但它究竟从何而来？最后一个练习将带你深入“黑箱”内部，分析一个经典的逻辑结构——16位纹波进位加法器。你将通过考虑延迟如何依赖于输入数据，特别是进位信号如何在加法器中传播，来确定真正的关键路径，这是任何旨在优化性能的数字设计师都需掌握的关键技能。[@problem_id:1946430]", "problem": "一位工程师正在设计一个同步数字信号处理核心，该核心严重依赖一个16位流水线加法器。该加法器计算两个16位输入$A$和$B$的和$S = A + B$。流水线架构由保存$A$和$B$的输入寄存器、组合加法器逻辑以及捕获和$S$的输出寄存器组成。寄存器的时序参数为：时钟到Q端延迟 $T_{cq} = 0.2$ ns，建立时间 $T_{setup} = 0.3$ ns。\n\n加法器本身由16个全加器（FA）单元串联构成一个纹波进位加法器。通过加法器的延迟是数据相关的。对位于比特位置$i$的单个FA单元的详细分析提供了以下时序特性，其中所有时间都相对于组合逻辑求值周期的开始（即输入寄存器稳定后）：\n\n- 第一个FA单元的进位输入$C_0$的到达时间为$t=0$，因为它接地。\n- 进位输出$C_{i+1}$的到达时间取决于输入$A_i$和$B_i$：\n    1. 如果 $A_i = B_i$（即生成或终止进位），进位输出$C_{i+1}$的确定与进位输入$C_i$无关。其值在 0.5 ns 时稳定。\n    2. 如果 $A_i \\neq B_i$（即传播进位），进位输出$C_{i+1}$取决于进位输入$C_i$。其到达时间为 $T_{C_{i+1}} = T_{C_i} + 0.6$ ns，其中 $T_{C_i}$ 是 $C_i$ 的到达时间。\n- 和位$S_i$的到达时间取决于进位输入$C_i$。其到达时间为 $T_{S_i} = T_{C_i} + 1.0$ ns。\n\n为确保在所有条件下都能正确工作，电路的时钟频率必须能够适应最长的可能组合逻辑延迟。对于任意一对16位输入操作数，能保证不发生时序违规的该加法器的绝对最大时钟频率是多少？\n\n请用MHz作单位，将最终答案四舍五入到三位有效数字。", "solution": "对于一个由输入寄存器、组合逻辑和输出寄存器组成的同步流水线阶段，时钟周期必须满足\n$$\nT_{\\text{clk}} \\ge T_{cq} + T_{\\text{comb,max}} + T_{setup}.\n$$\n在这里，组合逻辑是一个16位的纹波进位加法器。为加法器给出的时间是相对于组合逻辑求值的开始（即输入寄存器稳定后），因此寄存器到寄存器的时序必须将寄存器延迟加到加法器的最坏情况内部延迟上。\n\n每个全加器单元的进位时序如下：\n- 如果 $A_{i} = B_{i}$，那么 $C_{i+1}$ 与 $C_{i}$ 无关，并在 $0.5$ ns 时到达。\n- 如果 $A_{i} \\neq B_{i}$，那么 $C_{i+1}$ 由 $C_{i}$ 传播而来，其关系为\n$$\nT_{C_{i+1}} = T_{C_{i}} + 0.6 \\text{ ns}.\n$$\n此外，和的时序为\n$$\nT_{S_{i}} = T_{C_{i}} + 1.0 \\text{ ns}.\n$$\n由于 $C_{0}$ 在时间 $0$ 固定，最晚到达的和位发生在进位在到达该位之前传播了最大数量的级数时。对于位 $i$，最坏情况是所有较低位 $0$ 到 $i-1$ 都处于传播模式，从而得出\n$$\nT_{C_{i}} = i \\times 0.6 \\text{ ns}.\n$$\n因此，最坏情况的和到达时间发生在最高有效位 $i=15$ 处：\n$$\nT_{S_{15}} = T_{C_{15}} + 1.0 = 15 \\times 0.6 + 1.0 = 9.0 + 1.0 = 10.0 \\text{ ns}.\n$$\n因此，最大组合逻辑延迟为 $T_{\\text{comb,max}} = 10.0$ ns。包括寄存器延迟，\n$$\nT_{\\text{clk,min}} = T_{cq} + T_{\\text{comb,max}} + T_{setup} = 0.2 + 10.0 + 0.3 = 10.5 \\text{ ns}.\n$$\n因此，最大时钟频率为\n$$\nf_{\\max} = \\frac{1}{T_{\\text{clk,min}}} = \\frac{1}{10.5 \\times 10^{-9}} \\text{ Hz} = \\frac{10^{9}}{10.5} \\text{ Hz} = \\frac{10^{3}}{10.5} \\text{ MHz} \\approx 95.238 \\text{ MHz}.\n$$\n四舍五入到三位有效数字，结果是 $95.2$ MHz。", "answer": "$$\\boxed{95.2}$$", "id": "1946430"}]}