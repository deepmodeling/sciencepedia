{"hands_on_practices": [{"introduction": "本练习旨在巩固您对通用阵列逻辑（GAL）核心架构的理解。通过将一个假设的编程连接图转化为其对应的布尔表达式，您将亲手实践从物理配置到逻辑功能的转换过程。这是掌握任何可编程逻辑器件工作原理的基础一步 [@problem_id:1939685]。", "problem": "一个简单的可编程逻辑器件配置有四个输入，分别指定为 $A, B, C,$ 和 $D$。其内部结构具有一个输入级，该输入级为每个输入信号提供其原变量和反变量形式。这些信号被送入一个可编程的与门阵列，该阵列由若干“乘积项线”组成。这些乘积项线与输入信号的连接编程如下：\n\n*   乘积项线 $P_1$ 连接到输入 $B$ 的原变量形式和输入 $C$ 的反变量形式。\n*   乘积项线 $P_2$ 连接到输入 $A$ 的反变量形式以及输入 $C$ 和 $D$ 的原变量形式。\n*   乘积项线 $P_3$ 连接到输入 $A$ 和 $B$ 的原变量形式。\n*   乘积项线 $P_4$ 连接到输入 $B$ 和 $D$ 的原变量形式以及输入 $A$ 的反变量形式。\n\n这些乘积项线的输出随后连接到一个固定的或门，以产生最终的输出函数 $F$。用于函数 $F$ 的或门连接到乘积项线 $P_1$、$P_2$ 和 $P_4$ 的输出。\n\n请确定输出函数 $F$ 关于输入 $A, B, C,$ 和 $D$ 的布尔表达式。", "solution": "输入级为 $A, B, C,$ 和 $D$ 提供原变量和反变量信号。每条乘积项线实现所选文字的逻辑与运算，而固定的或门将所选的乘积项相加（逻辑或）以形成 $F$。\n\n根据给定的编程：\n- 乘积项 $P_{1}$ 连接到原变量 $B$ 和反变量 $C$，因此与门输出为\n$$P_{1} = B\\overline{C}。$$\n- 乘积项 $P_{2}$ 连接到反变量 $A$ 以及原变量 $C$ 和 $D$，因此\n$$P_{2} = \\overline{A}CD。$$\n- 乘积项 $P_{3}$ 连接到原变量 $A$ 和 $B$，因此\n$$P_{3} = AB。$$\n- 乘积项 $P_{4}$ 连接到原变量 $B$ 和 $D$ 以及反变量 $A$，因此\n$$P_{4} = \\overline{A}BD。$$\n\n$F$ 的或门连接到 $P_{1}, P_{2},$ 和 $P_{4}$，因此\n$$F = P_{1} + P_{2} + P_{4} = B\\overline{C} + \\overline{A}CD + \\overline{A}BD。$$\n\n作为一种可选的写法，对最后两项使用分配律，\n$$\\overline{A}CD + \\overline{A}BD = \\overline{A}D(C + B),$$\n所以一个等价的因式分解形式是\n$$F = B\\overline{C} + \\overline{A}D(B + C)。$$\n\n两种形式都是根据编程连接推导出的 $F$ 的正确布尔表达式。", "answer": "$$\\boxed{B\\overline{C}+\\overline{A}CD+\\overline{A}BD}$$", "id": "1939685"}, {"introduction": "在设计实践中，理解并克服硬件的结构限制至关重要。本练习模拟了一个常见的设计挑战：在一个没有内部输出间反馈路径的 GAL 器件上实现一个多位算术逻辑单元（ALU）。为了求解，您需要将所有输出逻辑完全用电路的主输入来表示，这是一种被称为“逻辑扁平化”的重要技巧 [@problem_id:1939736]。", "problem": "您的任务是使用单个通用阵列逻辑 (GAL) 器件设计一个紧凑的2位算术逻辑单元 (ALU)。该 ALU 对两个2位无符号二进制数 $A = A_1A_0$ 和 $B = B_1B_0$ 进行操作，并由一个1位的模式选择输入 $S$ 控制。该单元产生一个2位的结果 $Z = Z_1Z_0$ 和一个1位的最终进位输出 $C_{out}$。\n\nALU 的功能定义如下：\n- 当 $S=0$ 时，该单元执行2位加法：$\\{C_{out}, Z_1Z_0\\} = A + B$。假设2位加法器的初始输入进位为0。\n- 当 $S=1$ 时，该单元对操作数A执行逻辑左移：$Z_1 = A_0$ 且 $Z_0 = 0$。对于此操作，输入 $B$ 是“无关项”，且进位输出 $C_{out}$ 必须为0。\n\n目标 GAL 器件具有一个可编程的与阵列和一个固定的或阵列。每个输出（$Z_1, Z_0, C_{out}$）都由其专用的组合输出逻辑宏单元 (OLMC) 产生，该宏单元实际上是一个由与阵列的乘积项馈入的大型或门。此架构的一个关键限制是逻辑阵列内的 OLMC 之间没有直接的反馈路径。因此，任何中间信号，例如加法运算中从第0位到第1位的进位，都不能在一个 OLMC 中生成并被另一个 OLMC 使用。每个输出引脚的所有逻辑都必须仅用主输入 $A_1, A_0, B_1, B_0$ 和 $S$ 来表示。\n\n您的任务是推导最高有效结果位 $Z_1$ 的最小积之和 (SOP) 逻辑方程。请使用标准的布尔表示法，其中加法 `+` 表示或运算，并置表示与运算（例如，$XY$ 是 $X$ 与 $Y$），上划线表示非运算（例如，$\\overline{X}$ 是非 $X$）。", "solution": "我们必须仅用主输入 $A_{1}, A_{0}, B_{1}, B_{0}$ 和 $S$ 来表示 $Z_{1}$，因为 GAL 架构不允许 OLMC 间的反馈。ALU 的行为如下：\n- 当 $S=1$（左移模式）时，$Z_{1}=A_{0}$ 且 $C_{out}=0$；$B$ 是无关项。\n- 当 $S=0$（加法模式）时，在输入进位为0的情况下，第0位的进位是 $C_{0}=A_{0}B_{0}$，第1位的和是 $Z_{1} = A_{1} \\oplus B_{1} \\oplus C_{0}$。\n\n对 $S$ 使用 Shannon 展开，我们写出\n$$\nZ_{1} = S A_{0} + \\overline{S} \\left(A_{1} \\oplus B_{1} \\oplus (A_{0}B_{0})\\right).\n$$\n\n接下来，我们将三变量异或转换为积之和形式。对于 $X \\oplus Y \\oplus Z$，其规范 SOP（最小项之和）形式为\n$$\nX \\oplus Y \\oplus Z = \\overline{X}\\,\\overline{Y}\\,Z + \\overline{X}\\,Y\\,\\overline{Z} + X\\,\\overline{Y}\\,\\overline{Z} + X\\,Y\\,Z.\n$$\n令 $X=A_{1}$，$Y=B_{1}$，$Z=A_{0}B_{0}$，可得\n$$\nA_{1} \\oplus B_{1} \\oplus (A_{0}B_{0}) = \\overline{A_{1}}\\,\\overline{B_{1}}\\,(A_{0}B_{0}) + \\overline{A_{1}}\\,B_{1}\\,\\overline{(A_{0}B_{0})} + A_{1}\\,\\overline{B_{1}}\\,\\overline{(A_{0}B_{0})} + A_{1}\\,B_{1}\\,(A_{0}B_{0}).\n$$\n\n对互补乘积项应用 De Morgan 定律：\n$$\n\\overline{(A_{0}B_{0})} = \\overline{A_{0}} + \\overline{B_{0}}.\n$$\n展开以获得由文字组成的 SOP：\n$$\n\\begin{aligned}\nA_{1} \\oplus B_{1} \\oplus (A_{0}B_{0})\n&= \\overline{A_{1}}\\,\\overline{B_{1}}\\,A_{0}B_{0}\n+ \\overline{A_{1}}\\,B_{1}\\,(\\overline{A_{0}} + \\overline{B_{0}})\n+ A_{1}\\,\\overline{B_{1}}\\,(\\overline{A_{0}} + \\overline{B_{0}})\n+ A_{1}\\,B_{1}\\,A_{0}B_{0} \\\\\n&= \\overline{A_{1}}\\,\\overline{B_{1}}\\,A_{0}B_{0}\n+ \\overline{A_{1}}\\,B_{1}\\,\\overline{A_{0}}\n+ \\overline{A_{1}}\\,B_{1}\\,\\overline{B_{0}}\n+ A_{1}\\,\\overline{B_{1}}\\,\\overline{A_{0}}\n+ A_{1}\\,\\overline{B_{1}}\\,\\overline{B_{0}}\n+ A_{1}\\,B_{1}\\,A_{0}B_{0}.\n\\end{aligned}\n$$\n\n将其代回并展开 $\\overline{S}$，以获得一个双层 SOP（积之和形式），全部由文字组成：\n$$\n\\begin{aligned}\nZ_{1}\n&= S A_{0}\n+ \\overline{S}\\,\\overline{A_{1}}\\,\\overline{B_{1}}\\,A_{0}B_{0}\n+ \\overline{S}\\,\\overline{A_{1}}\\,B_{1}\\,\\overline{A_{0}}\n+ \\overline{S}\\,\\overline{A_{1}}\\,B_{1}\\,\\overline{B_{0}}\n+ \\overline{S}\\,A_{1}\\,\\overline{B_{1}}\\,\\overline{A_{0}}\n+ \\overline{S}\\,A_{1}\\,\\overline{B_{1}}\\,\\overline{B_{0}}\n+ \\overline{S}\\,A_{1}\\,B_{1}\\,A_{0}B_{0}.\n\\end{aligned}\n$$\n\n最小化证明：\n- 对于 $S=1$，$S A_{0}$ 项是必要且充分的，它与 $B$ 无关，符合所述的无关项条件。\n- 对于 $S=0$，当 $A_{0}B_{0}=0$ 时，$Z_{1}=A_{1}\\oplus B_{1}$，这需要四个3文字蕴含项：$A_{1}\\overline{B_{1}}\\overline{A_{0}}$、$A_{1}\\overline{B_{1}}\\overline{B_{0}}$、$\\overline{A_{1}}B_{1}\\overline{A_{0}}$ 和 $\\overline{A_{1}}B_{1}\\overline{B_{0}}$；如果不错误地包含 $(A_{0},B_{0})=(1,1)$ 的情况，这些项都无法合并。\n- 当 $A_{0}B_{0}=1$ 时，$Z_{1}=\\overline{A_{1}\\oplus B_{1}}$，这需要两个4文字蕴含项 $A_{1}B_{1}A_{0}B_{0}$ 和 $\\overline{A_{1}}\\overline{B_{1}}A_{0}B_{0}$；这些项无法扩展，因为那样会包含关态最小项 (off-set minterms)。\n\n因此，上述 SOP 是最小化的，并且遵循了 GAL 的约束，即在 $Z_{1}$ 的单个双层实现中仅使用主输入。", "answer": "$$\\boxed{SA_{0}+\\overline{S}A_{1}\\overline{B_{1}}\\overline{A_{0}}+\\overline{S}A_{1}\\overline{B_{1}}\\overline{B_{0}}+\\overline{S}\\overline{A_{1}}B_{1}\\overline{A_{0}}+\\overline{S}\\overline{A_{1}}B_{1}\\overline{B_{0}}+\\overline{S}A_{1}B_{1}A_{0}B_{0}+\\overline{S}\\overline{A_{1}}\\overline{B_{1}}A_{0}B_{0}}$$", "id": "1939736"}, {"introduction": "为了将理论与实践完全对接，本练习将带您深入了解 GAL 器件的物理编程层面。您将扮演一位系统工程师，通过分析 JEDEC 熔丝图的片段来反向工程一个已实现的状态机。这项任务不仅能让您解码设备编程的底层语言，还能加深您对逻辑设计如何物化为硬件配置的认识 [@problem_id:1939702]。", "problem": "一位数字系统工程师的任务是为一个使用通用阵列逻辑（Generic Array Logic, GAL）16V8器件的旧式系统进行逆向工程。已知该器件实现了一个同步状态机。状态存储在两个配置为寄存器模式的输出逻辑宏单元（Output Logic Macrocells, OLMCs）中，位于引脚18和19。设引脚18的寄存器输出为状态变量 $Q_1$，引脚19的输出为状态变量 $Q_0$。该状态机由连接到引脚1的系统时钟驱动。所有其他输入引脚均未使用，并被视为逻辑低电平。\n\nGAL的编程由一个联合电子设备工程委员会（JEDEC）熔丝图文件定义。在此文件中，以`L`开头后跟一个地址的行指示了单个乘积项的32个熔丝的状态。`0`表示熔丝完好（存在连接），`1`表示熔丝熔断（无连接）。逻辑功能以“积之和”形式实现。\n\nGAL16V8的与门阵列有32个输入，其连接由熔丝图确定。对于此状态机，仅使用了来自寄存器输出的反馈路径。与门阵列的输入连接映射如下：\n-   与门阵列第28和29列：来自引脚18上OLMC的原变量（$Q_1$）和反变量（$\\overline{Q_1}$）反馈。\n-   与门阵列第30和31列：来自引脚19上OLMC的原变量（$Q_0$）和反变量（$\\overline{Q_0}$）反馈。\n\nD触发器 $D_1$ 和 $D_0$ 的次态逻辑由几个乘积项的“或”运算决定：\n-   $D_1$（用于状态变量 $Q_1$）是乘积项48到54的逻辑和。\n-   $D_0$（用于状态变量 $Q_0$）是乘积项56到62的逻辑和。\n\n工程师已从JEDEC文件中恢复出以下几行。连接到这些OLMC的所有其他乘积项的所有熔丝都已熔断（即，它们在熔丝图中的行全为`1`）。\n\n`L1536 11111111111111111111111111111001`\n`L1568 11111111111111111111111111110110`\n`L1792 11111111111111111111111111111011`\n\n*注*：地址 `Lxxxx` 表示一个乘积项的起始熔丝编号。乘积项 `k` 从熔丝地址 `k * 32` 开始。\n\n基于这些信息，下列哪个选项正确地指出了简化的次态逻辑方程和该状态机执行的功能，其中状态由元组 $(Q_1, Q_0)$ 表示？\n\nA. 方程：$D_1 = Q_1$，$D_0 = \\overline{Q_0}$；功能：一个二分频计数器，其状态 $(Q_1, Q_0)$ 在(0,1)和(0,0)之间切换。\n\nB. 方程：$D_1 = Q_0$，$D_0 = Q_1$；功能：一个在每个时钟周期交换状态位的状态机。\n\nC. 方程：$D_1 = Q_1 \\oplus Q_0$，$D_0 = \\overline{Q_1}$；功能：一个模3计数器，循环经过状态00、01和11。\n\nD. 方程：$D_1 = Q_1 \\oplus Q_0$，$D_0 = \\overline{Q_1}$；功能：一个2位格雷码计数器，序列为 00 -> 01 -> 11 -> 10 -> 00。\n\nE. 方程：$D_1 = \\overline{Q_1}Q_0$，$D_0 = Q_1\\overline{Q_0}$；功能：一个从任何其他状态转移到状态(1,0)的状态机。", "solution": "GAL16V8的与门阵列有32列；对于本设计，只有第28到31列是相关的，映射如下：\n- 第28列: $Q_{1}$ (原变量)\n- 第29列: $\\overline{Q_{1}}$ (反变量)\n- 第30列: $Q_{0}$ (原变量)\n- 第31列: $\\overline{Q_{0}}$ (反变量)\n\n在每个乘积项的JEDEC熔丝图中，熔丝值为$0$表示有连接（包含对应的字面量），值为$1$表示无连接。每个`L`行上的字符串按升序列出了一个乘积项的32个熔丝，因此最后四位按顺序对应于第$28$–$31$列。\n\n用于$D_{1}$的乘积项是第$48$到$54$号，用于$D_{0}$的是第$56$到$62$号。所提供的行对应于以下乘积项：\n- `L1536` $\\Rightarrow$ 乘积项 $48$，因为 $48 \\times 32 = 1536$，\n- `L1568` $\\Rightarrow$ 乘积项 $49$，因为 $49 \\times 32 = 1568$，\n- `L1792` $\\Rightarrow$ 乘积项 $56$，因为 $56 \\times 32 = 1792$。\n用于这些或门的所有其他乘积项的所有熔丝均已熔断（没有连接任何字面量），因此对逻辑和无贡献。\n\n根据最后四位解码每个提供的乘积项：\n1) `L1536 ... 111111111001` 的最后四位是 $1\\,0\\,0\\,1$，即第$28$列=1，第$29$列=0，第$30$列=0，第$31$列=1。这包含了$\\overline{Q_{1}}$和$Q_{0}$。因此\n$$\n\\text{PT}_{48} \\;=\\; \\overline{Q_{1}}\\,Q_{0}.\n$$\n2) `L1568 ... 111111110110` 的最后四位是 $0\\,1\\,1\\,0$，即第$28$列=0，第$29$列=1，第$30$列=1，第$31$列=0。这包含了$Q_{1}$和$\\overline{Q_{0}}$。因此\n$$\n\\text{PT}_{49} \\;=\\; Q_{1}\\,\\overline{Q_{0}}.\n$$\n3) `L1792 ... 111111111011` 的最后四位是 $1\\,0\\,1\\,1$，即第$28$列=1，第$29$列=0，第$30$列=1，第$31$列=1。这只包含了$\\overline{Q_{1}}$。因此\n$$\n\\text{PT}_{56} \\;=\\; \\overline{Q_{1}}.\n$$\n\n因此，使用指定的或门分组：\n- 对于$D_{1}$（乘积项48到54的和），只有$\\text{PT}_{48}$和$\\text{PT}_{49}$是有效的：\n$$\nD_{1} \\;=\\; \\text{PT}_{48} \\,+\\, \\text{PT}_{49}\n\\;=\\; \\overline{Q_{1}}\\,Q_{0} \\;+\\; Q_{1}\\,\\overline{Q_{0}}\n\\;=\\; Q_{1} \\oplus Q_{0}.\n$$\n- 对于$D_{0}$（乘积项56到62的和），只有$\\text{PT}_{56}$是有效的：\n$$\nD_{0} \\;=\\; \\text{PT}_{56} \\;=\\; \\overline{Q_{1}}.\n$$\n\n确定状态转移函数 $(Q_{1},Q_{0}) \\mapsto (D_{1},D_{0})$：\n- 如果 $(Q_{1},Q_{0})=(0,0)$，则 $(D_{1},D_{0})=(0\\oplus 0,\\overline{0})=(0,1)$。\n- 如果 $(Q_{1},Q_{0})=(0,1)$，则 $(D_{1},D_{0})=(0\\oplus 1,\\overline{0})=(1,1)$。\n- 如果 $(Q_{1},Q_{0})=(1,1)$，则 $(D_{1},D_{0})=(1\\oplus 1,\\overline{1})=(0,0)$。\n- 如果 $(Q_{1},Q_{0})=(1,0)$，则 $(D_{1},D_{0})=(1\\oplus 0,\\overline{1})=(1,0)$。\n\n因此，该状态机在 $00 \\rightarrow 01 \\rightarrow 11 \\rightarrow 00$ 之间循环，状态$10$是一个自循环。这是一个在状态 $\\{00,01,11\\}$ 上的模3计数器。简化后的方程和行为与选项C相符。", "answer": "$$\\boxed{C}$$", "id": "1939702"}]}