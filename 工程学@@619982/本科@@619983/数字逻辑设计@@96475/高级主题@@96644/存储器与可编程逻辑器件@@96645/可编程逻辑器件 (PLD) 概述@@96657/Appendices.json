{"hands_on_practices": [{"introduction": "本练习将带你了解可编程阵列逻辑（PAL）设备的基础知识，它是一种具有可编程“与”阵列和固定“或”阵列的PLD。通过将布尔表达式直接映射到熔丝配置，你将亲身体验到抽象逻辑是如何在硬件层面实现的。这个实践有助于你直观地理解PAL的工作原理。[@problem_id:1955175]", "problem": "一个简单的可编程逻辑器件 (PLD)，具体来说是一个可编程阵列逻辑 (PAL) 器件，正在被配置以实现一组布尔函数。该 PAL 有 3 个输入，表示为 $A, B, C$，以及 2 个输出，表示为 $F_1, F_2$。\n\n此 PAL 的内部结构如下：\n-   可编程与阵列的输入由六条输入线 $L_1, L_2, L_3, L_4, L_5, L_6$ 提供，它们分别对应于 $A', A, B', B, C', C$。\n-   可编程与阵列由四个与门组成，生成四个乘积项：$P_1, P_2, P_3, P_4$。每个与门都可以通过熔丝连接到六条输入线中的任意一条。熔丝要么是 `完好` 的（连接存在），要么是 `熔断` 的（连接断开）。为了形成一个乘积项，只有与该项中变量对应的熔丝保持完好。如果一个乘积项仅由单个变量组成，那么对于相应的与门，只有该变量输入线的熔丝保持完好。\n-   或阵列是固定的。输出由到乘积项的硬连线连接定义如下：\n    -   $F_1 = P_1 + P_2$\n    -   $F_2 = P_3 + P_4$\n\n所需功能由以下布尔表达式给出：\n-   $F_1(A, B, C) = A'B + C$\n-   $F_2(A, B, C) = AB' + BC$\n\n您的任务是确定为实现这些功能必须保持完好的正确熔丝配置。假设所有其他熔丝都已熔断。单个乘积项的一组完好熔丝由一组 `(乘积项, 输入线)` 对来表示。例如，`{(P1, L2), (P1, L4)}` 表示对于乘积项 $P_1$，连接到输入线 $L_2$ (对应 $A$) 和 $L_4$ (对应 $B$) 的熔丝是完好的。\n\n以下哪个选项正确指定了该器件的完整完好熔丝集？\n\nA.\n$P_1$ 的完好熔丝: $\\{(P_1, L_2), (P_1, L_3)\\}$\n$P_2$ 的完好熔丝: $\\{(P_2, L_5)\\}$\n$P_3$ 的完好熔丝: $\\{(P_3, L_1), (P_3, L_4)\\}$\n$P_4$ 的完好熔丝: $\\{(P_4, L_3), (P_4, L_6)\\}$\n\nB.\n$P_1$ 的完好熔丝: $\\{(P_1, L_1), (P_1, L_4)\\}$\n$P_2$ 的完好熔丝: $\\{(P_2, L_6)\\}$\n$P_3$ 的完好熔丝: $\\{(P_3, L_2), (P_3, L_3)\\}$\n$P_4$ 的完好熔丝: $\\{(P_4, L_4), (P_4, L_6)\\}$\n\nC.\n$P_1$ 的完好熔丝: $\\{(P_1, L_2), (P_1, L_4)\\}$\n$P_2$ 的完好熔丝: $\\{(P_2, L_6)\\}$\n$P_3$ 的完好熔丝: $\\{(P_3, L_2), (P_3, L_4)\\}$\n$P_4$ 的完好熔丝: $\\{(P_4, L_3), (P_4, L_5)\\}$\n\nD.\n$P_1$ 的完好熔丝: $\\{(P_1, L_1), (P_1, L_4)\\}$\n$P_2$ 的完好熔丝: $\\{(P_2, L_5)\\}$\n$P_3$ 的完好熔丝: $\\{(P_3, L_2), (P_3, L_3)\\}$\n$P_4$ 的完好熔丝: $\\{(P_4, L_3), (P_4, L_6)\\}$\n\nE.\n$P_1$ 的完好熔丝: $\\{(P_1, L_1), (P_1, L_4), (P_1, L_6)\\}$\n$P_2$ 的完好熔丝: $\\{(P_2, L_2), (P_2, L_3), (P_2, L_4)\\}$\n$P_3$ 的完好熔丝: $\\{(P_3, L_4), (P_3, L_6)\\}$\n$P_4$ 的完好熔丝: $\\{(P_4, L_1), (P_4, L_2)\\}$", "solution": "PAL有六条输入线，映射为字面量，即 $L_{1}=A'$, $L_{2}=A$, $L_{3}=B'$, $L_{4}=B$, $L_{5}=C'$, $L_{6}=C$。固定的或阵列强制要求 $F_{1}=P_{1}+P_{2}$ 且 $F_{2}=P_{3}+P_{4}$。因此，为实现目标函数\n$$\nF_{1}=A'B+C,\\qquad F_{2}=AB'+BC,\n$$\n乘积项须满足 $P_{1},P_{2}\\in\\{A'B,\\ C\\}$ 且 $P_{3},P_{4}\\in\\{AB',\\ BC\\}$。\n\n通过将完好熔丝转换为乘积项来评估每个选项：\n\n选项 A：\n- $P_{1}=\\{L_{2},L_{3}\\}=A\\cdot B'$, $P_{2}=\\{L_{5}\\}=C'$, 所以 $F_{1}=AB'+C'\\neq A'B+C$。\n- $P_{3}=\\{L_{1},L_{4}\\}=A'\\cdot B$, $P_{4}=\\{L_{3},L_{6}\\}=B'\\cdot C$, 所以 $F_{2}=A'B+B'C\\neq AB'+BC$。排除。\n\n选项 B：\n- $P_{1}=\\{L_{1},L_{4}\\}=A'\\cdot B$, $P_{2}=\\{L_{6}\\}=C$, 因此 $F_{1}=A'B+C$，符合要求。\n- $P_{3}=\\{L_{2},L_{3}\\}=A\\cdot B'$, $P_{4}=\\{L_{4},L_{6}\\}=B\\cdot C$, 因此 $F_{2}=AB'+BC$，符合要求。此选项正确。\n\n选项 C：\n- $P_{1}=\\{L_{2},L_{4}\\}=A\\cdot B$, 所以 $F_{1}=AB+ C$ (当 $P_{2}=\\{L_{6}\\}=C$ 时)，这不等于 $A'B+C$。排除。\n\n选项 D：\n- $P_{1}=\\{L_{1},L_{4}\\}=A'\\cdot B$ (正确), 但是 $P_{2}=\\{L_{5}\\}=C'$, 所以 $F_{1}=A'B+C'\\neq A'B+C$。排除。\n\n选项 E：\n- $P_{1}=\\{L_{1},L_{4},L_{6}\\}=A'\\cdot B\\cdot C$, $P_{2}=\\{L_{2},L_{3},L_{4}\\}=A\\cdot B'\\cdot B=0$, 所以 $F_{1}=A'BC+0\\neq A'B+C$。另外 $P_{3}=\\{L_{4},L_{6}\\}=B\\cdot C$, $P_{4}=\\{L_{1},L_{2}\\}=A'\\cdot A=0$, 所以 $F_{2}=BC+0\\neq AB'+BC$。排除。\n\n只有选项B能通过固定的或阵列连接得到 $F_{1}=A'B+C$ 和 $F_{2}=AB'+BC$。", "answer": "$$\\boxed{B}$$", "id": "1955175"}, {"introduction": "接下来，我们将探讨比PAL更灵活的可编程逻辑阵列（PLA），它具有可编程的“与”平面和“或”平面。本练习的重点是资源优化，通过在多个输出函数之间识别和共享公共乘积项，可以更高效地实现逻辑。你的任务是计算实现一组给定函数所需的总“成本”，即熔丝数量。[@problem_id:1955190]", "problem": "一位数字系统工程师的任务是使用可编程逻辑阵列（PLA）实现一组逻辑函数。PLA是一种可编程逻辑器件，由一个可编程的“与”平面连接到一个可编程的“或”平面组成。“与”平面用于从器件输入生成一组乘积项。然后，“或”平面组合这些乘积项以产生最终输出。PLA的复杂度和制造成本与其包含的可编程熔丝总数成正比。\n\nPLA的内部结构定义如下：\n- “与”平面从 $n$ 条外部线路接收输入。对于每个外部输入，其自身及其补码都可用，从而为“与”平面创建了 $2n$ 条内部输入线。“与”平面被配置为生成 $p$ 个不同的乘积项。为了允许任何乘积项由内部输入的任意组合形成， $p$ 个乘积项生成器（“与”门）中的每一个都通过可编程熔丝连接到所有 $2n$ 条内部输入线。\n- “或”平面将“与”平面生成的 $p$ 个乘积项作为其输入，并产生 $m$ 个最终输出。为了允许任何输出函数是任何乘积项组合的和， $m$ 个输出生成器（“或”门）中的每一个都通过可编程熔丝连接到所有 $p$ 条乘积项线。\n\n工程师需要实现以下三个布尔函数，这些函数依赖于四个输入变量 $A, B, C,$ 和 $D$：\n$F_1(A,B,C,D) = A'B' + ACD$\n$F_2(A,B,C,D) = A'B' + B'C'D'$\n$F_3(A,B,C,D) = ACD + BCD + B'C'D'$\n\n为了创建最具成本效益的解决方案，PLA将被配置为仅生成实现所有三个函数所需的最少数量的唯一乘积项。基于此设计，计算整个PLA所需的可编程熔丝总数。你的最终答案应该是一个整数。", "solution": "PLA有一个“与”平面，由 $n$ 个外部输入及其补码馈入，提供 $2n$ 条内部输入线。如果“与”平面生成 $p$ 个不同的乘积项，并且每个“与”门可以通过可编程熔丝选择 $2n$ 个内部输入中的任意一个，那么“与”平面中的可编程熔丝数量为\n$$\np \\cdot (2n).\n$$\n“或”平面将 $p$ 个乘积项组合成 $m$ 个输出，其中 $m$ 个“或”门中的每一个都可以通过可编程熔丝选择 $p$ 个乘积项中的任意一个，从而得到\n$$\nm \\cdot p\n$$\n个“或”平面中的熔丝。因此，PLA中可编程熔丝的总数为\n$$\np(2n) + mp = p(2n + m).\n$$\n\n所需的三个布尔函数是\n$$\nF_{1}(A,B,C,D) = \\overline{A}\\,\\overline{B} + A C D, \\quad\nF_{2}(A,B,C,D) = \\overline{A}\\,\\overline{B} + \\overline{B}\\,\\overline{C}\\,\\overline{D}, \\quad\nF_{3}(A,B,C,D) = A C D + B C D + \\overline{B}\\,\\overline{C}\\,\\overline{D}.\n$$\n列出这些“积之和”形式中出现的乘积项，并识别所有输出中的唯一项：\n- $\\overline{A}\\,\\overline{B}$ 出现在 $F_{1}$ 和 $F_{2}$ 中。\n- $A C D$ 出现在 $F_{1}$ 和 $F_{3}$ 中。\n- $\\overline{B}\\,\\overline{C}\\,\\overline{D}$ 出现在 $F_{2}$ 和 $F_{3}$ 中。\n- $B C D$ 仅出现在 $F_{3}$ 中。\n\n这些乘积项中没有任意两项可以在不改变函数的情况下合并成一个单一的有效乘积项，因为任何这样的合并（例如，用 $C D$ 替换 $A C D + B C D$）都会引入原始函数中不存在的额外的最小项。因此，最小的共享乘积项集合恰好是\n$$\n\\{\\overline{A}\\,\\overline{B},\\; A C D,\\; \\overline{B}\\,\\overline{C}\\,\\overline{D},\\; B C D\\},\n$$\n所以最小乘积项数为 $p=4$。\n\n对于 $n=4$ 个输入和 $m=3$ 个输出，总熔丝数为\n$$\np(2n + m) = 4\\,(2\\cdot 4 + 3) = 4\\,(8 + 3) = 4\\cdot 11 = 44.\n$$", "answer": "$$\\boxed{44}$$", "id": "1955190"}, {"introduction": "最后的练习将聚焦于现代现场可编程门阵列（FPGA）的核心——查找表（LUT）。与“与-或”平面不同，FPGA使用这些小型的可配置存储块来实现任意逻辑函数。通过确定实现一个1位全加器所需的最小LUT数量，你将揭示复杂电路是如何由这些基本可编程元件构建的。[@problem_id:1955163]", "problem": "在一个定制的、简化的现场可编程门阵列（FPGA）设计中，其主要逻辑元件是4输入、1输出的查找表（LUT）。一个4输入LUT是一种数字组件，可以被编程以实现最多四个变量的任意布尔函数。\n\n您的任务是确定实现一个基本算术电路——1位全加器——所需的资源。全加器是一个组合电路，用于计算三个1位输入（`A`、`B` 和 `Cin`（进位输入））的和。它产生两个1位输出：`S`（和）与 `Cout`（进位输出）。\n\n假设没有可用的专用硬件资源（如专用进位链逻辑），并且所有逻辑运算都必须仅使用4输入LUT，那么实现一个完整的1位全加器单元所需的最少4输入LUT数量是多少？\n\nA. 1\nB. 2\nC. 3\nD. 4\nE. 5", "solution": "设输入为 $A$、$B$ 和 $C_{in}$，输出为 $S$ 和 $C_{out}$。一个4输入、1输出的LUT可以实现一个任意布尔函数 $f(X_{1},X_{2},X_{3},X_{4}) \\rightarrow \\{0,1\\}$。因此，任何最多四个变量的布尔函数都可以由单个此类LUT实现；特别地，任何三个变量的函数都可以通过将一个输入置为未使用或连接到常数，用一个LUT来实现。\n\n1位全加器的输出是关于三个输入的两个布尔函数：\n$$\nS = A \\oplus B \\oplus C_{in},\n$$\n$$\nC_{out} = AB + A C_{in} + B C_{in}.\n$$\n$S$ 与 $C_{out}$ 都仅是 $(A,B,C_{in})$ 的函数，因此每个都可以由单个4输入LUT实现。这证明了两个LUT的上限：一个LUT实现 $S$，另一个LUT实现 $C_{out}$。\n\n为了证明下限，请注意每个4输入LUT只有一个输出。由于 $S$ 与 $C_{out}$ 是两个独立的布尔函数（通常情况下，在没有 $(A,B,C_{in})$ 之外的额外输入时，它们既不是同一个函数，其中一个也不是另一个的确定性函数），因此单个1输出LUT无法同时产生这两个输出。所以，至少需要两个LUT。\n\n结合下限（至少两个）和构造性上限（两个足够），实现一个1位全加器所需的最少4输入、1输出LUT数量为两个。", "answer": "$$\\boxed{B}$$", "id": "1955163"}]}