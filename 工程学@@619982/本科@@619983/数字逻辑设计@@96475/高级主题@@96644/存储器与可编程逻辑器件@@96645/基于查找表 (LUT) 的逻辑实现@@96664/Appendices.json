{"hands_on_practices": [{"introduction": "理解查找表 (LUT) 的第一步是将抽象的布尔表达式转换为其物理内存内容。这个练习将指导您完成这一基本过程，即将一个逻辑函数具体化为配置硬件所需的二进制比特串。通过这个实践，您将掌握从逻辑功能到硬件实现的核心映射关系。[@problem_id:1944846]", "problem": "在现代数字系统中，许多逻辑功能是使用可编程硬件元件实现的。查找表（LUT）就是这样一种基本元件。一个 $k$ 输入的LUT是一个小型存储器，可以实现任何有 $k$ 个变量的布尔函数。它有 $k$ 条地址线（函数的输入）和一个数据输出。该存储器存储 $2^k$ 位，对于任何给定的输入组合，会访问相应的存储器地址，并将存储在该位置的位呈现在输出端。\n\n考虑一个用于实现特定布尔函数$f(A, B, C, D)$的4输入LUT。四个输入$A, B, C, D$用于构成一个4位的存储器地址，其中$D$是最高有效位(MSB)，而$A$是最低有效位(LSB)。因此，地址对应于二进制数 `DCBA` 的整数值。要实现的函数由以下表达式给出：\n\n$$f(A, B, C, D) = (A \\oplus B) \\cdot (C + D)$$\n\n此处，$\\oplus$表示逻辑异或(XOR)运算，$\\cdot$表示逻辑与(AND)运算，而$+$表示逻辑或(OR)运算。\n\n确定为实现此函数必须存储在LUT存储器中的16位二进制字符串。该字符串应按存储器地址0到15的内容顺序排列。", "solution": "一个4输入LUT使用输入$A,B,C,D$来构成地址，其中$D$为MSB，$A$为LSB，所以地址是二进制数 `DCBA` 所代表的整数值，相当于$n=8D+4C+2B+A$。实现的函数是\n$$\nf(A,B,C,D)=(A\\oplus B)\\cdot(C+D).\n$$\n我们计算地址0到15的函数$f$的值。\n\n- 当$C=D=0$时（对应地址的 `DCBA`=0000, 0001, 0010, 0011，即$n=0,1,2,3$），我们有$C+D=0$，因此$f=(A\\oplus B)\\cdot 0=0$。所以，地址$0,1,2,3$处的各位为$0,0,0,0$。\n\n- 对于$C+D=1$的情况（所有其余的$(C,D)\\neq(0,0)$的地址），我们有$f=A\\oplus B$。对于每一对固定的$(D,C)$，随着地址递增，$(A,B)$会依次遍历$(0,0),(1,0),(0,1),(1,1)$，从而得到$A\\oplus B$的值为$0,1,1,0$。\n\n将此应用于每个区块：\n1) $D=0,C=1$（地址$4,5,6,7$）：输出为$0,1,1,0$。\n2) $D=1,C=0$（地址$8,9,10,11$）：输出为$0,1,1,0$。\n3) $D=1,C=1$（地址$12,13,14,15$）：输出为$0,1,1,0$。\n\n按地址0到15的顺序收集起来，得到16位的字符串：\n$$\n0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0.\n$$\n去掉逗号，所需的LUT内容为\n$$\n0000011001100110.\n$$", "answer": "$$\\boxed{0000011001100110}$$", "id": "1944846"}, {"introduction": "与将函数转换为 LUT 内容同样重要的技能是反向操作：分析给定的 LUT 配置以理解其实现的逻辑功能。这项技能在验证、逆向工程或解释现有设计时非常有用。本练习将引导您将 LUT 的原始十六进制内容转换回人类可读的、最小化的“积之和”(SOP) 表达式，从而将现代 LUT 概念与经典的逻辑最小化理论联系起来。[@problem_id:1944844]", "problem": "4输入查找表（LUT）是现代现场可编程门阵列（FPGA）中的一个基本组件。它可以被编程以实现任意四变量的布尔函数。该函数由一个16位的配置值定义，该值存储了16种可能输入组合中每一种的输出。\n\n考虑一个4输入LUT，其输入指定为 $A, B, C,$ 和 $D$，其中 $A$ 是最高有效位（MSB），$D$ 是最低有效位（LSB）。输入组合 $(ABCD)_2$ 形成一个4位无符号整数 $i$，该整数用于对LUT进行寻址。对于此输入，LUT的输出由16位配置值的第 $i$ 位决定，其中第0位是配置值的LSB。\n\n某个特定LUT的配置值为十六进制数 `0x6996`。\n\n确定此LUT实现的布尔函数 $F(A, B, C, D)$ 的最小化积之和（SOP）表达式。您的表达式应使用上划线（例如 $\\overline{A}$）来表示非运算。", "solution": "一个由 $i$ 索引的4输入LUT使用 $i=8A+4B+2C+D$，其中 $A$ 是MSB，$D$ 是LSB。配置值为 $0x6996$。将其写为从第15位（MSB）到第0位（LSB）的16位二进制字，\n$$0x6996 = 0110\\ 1001\\ 1001\\ 0110,$$\n所以位 $b_{15}\\ldots b_{0}$ 是 $0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0$。因此，从LSB到MSB的各位为\n$$b_{0}=0,\\ b_{1}=1,\\ b_{2}=1,\\ b_{3}=0,\\ b_{4}=1,\\ b_{5}=0,\\ b_{6}=0,\\ b_{7}=1,\\ b_{8}=1,\\ b_{9}=0,\\ b_{10}=0,\\ b_{11}=1,\\ b_{12}=0,\\ b_{13}=1,\\ b_{14}=1,\\ b_{15}=0.$$\n因此，输出 $F(A,B,C,D)=1$ 的索引为\n$$i\\in\\{1,2,4,7,8,11,13,14\\}.$$\n使用 $i=8A+4B+2C+D$ 将每个索引 $i$ 映射回 $(A,B,C,D)$，得到最小项：\n- $i=1:(0,0,0,1)\\Rightarrow \\overline{A}\\,\\overline{B}\\,\\overline{C}\\,D$,\n- $i=2:(0,0,1,0)\\Rightarrow \\overline{A}\\,\\overline{B}\\,C\\,\\overline{D}$,\n- $i=4:(0,1,0,0)\\Rightarrow \\overline{A}\\,B\\,\\overline{C}\\,\\overline{D}$,\n- $i=7:(0,1,1,1)\\Rightarrow \\overline{A}\\,B\\,C\\,D$,\n- $i=8:(1,0,0,0)\\Rightarrow A\\,\\overline{B}\\,\\overline{C}\\,\\overline{D}$,\n- $i=11:(1,0,1,1)\\Rightarrow A\\,\\overline{B}\\,C\\,D$,\n- $i=13:(1,1,0,1)\\Rightarrow A\\,B\\,\\overline{C}\\,D$,\n- $i=14:(1,1,1,0)\\Rightarrow A\\,B\\,C\\,\\overline{D}$.\n\n在一个4变量卡诺图上，这些“1”都是孤立的（没有相邻的“1”），因此无法进行分组，而最小项的规范和已经是最小化的SOP。等价地，这个真值表对应于奇校验函数 $A\\oplus B\\oplus C\\oplus D$，其最小化的两级SOP确实包含了上述所有八个最小项。\n\n因此，最小化的SOP是\n$$F(A,B,C,D)=\\overline{A}\\,\\overline{B}\\,\\overline{C}\\,D+\\overline{A}\\,\\overline{B}\\,C\\,\\overline{D}+\\overline{A}\\,B\\,\\overline{C}\\,\\overline{D}+\\overline{A}\\,B\\,C\\,D+A\\,\\overline{B}\\,\\overline{C}\\,\\overline{D}+A\\,\\overline{B}\\,C\\,D+A\\,B\\,\\overline{C}\\,D+A\\,B\\,C\\,\\overline{D}.$$", "answer": "$$\\boxed{\\overline{A}\\,\\overline{B}\\,\\overline{C}\\,D+\\overline{A}\\,\\overline{B}\\,C\\,\\overline{D}+\\overline{A}\\,B\\,\\overline{C}\\,\\overline{D}+\\overline{A}\\,B\\,C\\,D+A\\,\\overline{B}\\,\\overline{C}\\,\\overline{D}+A\\,\\overline{B}\\,C\\,D+A\\,B\\,\\overline{C}\\,D+A\\,B\\,C\\,\\overline{D}}$$", "id": "1944844"}, {"introduction": "在掌握了单个 LUT 的工作原理后，下一个挑战是使用它们来构建更复杂的电路。现实世界的设计通常涉及多个输出，需要通过 LUT 网络来实现。这个练习将以一个经典数字逻辑部件——全减器——为例，来演示如何用最少的 3 输入 LUT 实现一个具有两个输出的完整功能模块，这是高效 FPGA 设计中的一项核心任务。[@problem_id:1944830]", "problem": "在现代数字电路设计中，尤其是在现场可编程门阵列 (FPGA) 中，逻辑函数是通过可配置查找表 (LUT) 的网络来实现的。一个 $k$ 输入LUT是一个具有 $k$ 个输入和一个输出的数字组件，它可以被编程以实现其 $k$ 个变量的任意布尔函数。\n\n考虑一个全减器的设计。全减器是一种组合电路，对三个输入位进行减法运算：被减数 $X$、减数 $Y$ 以及来自较低有效位的输入借位 $B_{in}$。它产生两个输出：差 $D$ 和向较高有效位的输出借位 $B_{out}$。这些输出的标准逻辑表达式为：\n$$D = X \\oplus Y \\oplus B_{in}$$\n$$B_{out} = \\overline{X}Y + \\overline{X}B_{in} + YB_{in}$$\n其中 $\\oplus$ 表示异或 (XOR) 运算。\n\n您的任务是确定实现一个完整的全减器所需的3输入、单输出LUT的绝对最小数量，该全减器根据输入 $X$、$Y$ 和 $B_{in}$ 生成 $D$ 和 $B_{out}$ 两个信号。最终答案应为一个单个整数。", "solution": "一个 $k$ 输入单输出LUT可以通过编程其包含$2^{k}$个条目的真值表来实现任何最多 $k$ 个变量的布尔函数。因此，任何关于$(X,Y,B_{in})$的布尔函数都可以由一个单一的3输入LUT实现。\n\n全减器有两个输出，由以下公式给出：\n$$D = X \\oplus Y \\oplus B_{in},$$\n$$B_{out} = \\overline{X}Y + \\overline{X}B_{in} + YB_{in}.$$\n$D$ 和 $B_{out}$ 都是关于三个输入 $(X,Y,B_{in})$ 的非平凡布尔函数；特别地，每个输出都依赖于所有三个输入，并且不等于任何单个主输入或常数。在一个仅由3输入、单输出LUT组成的网络中，每一个不是直接连接到主输入或常数的主输出，都必须由某个LUT的输出驱动。因此，要实现 $D$ 和 $B_{out}$ 这两个不同的输出，存在一个至少需要两个LUT的下界：\n$$\\text{LUT数量} \\geq \\text{非平凡输出数量} = 2.$$\n\n这个下界是可以达到的。由于 $D$ 和 $B_{out}$ 都是3变量函数，我们可以将它们直接映射到两个独立的3输入LUT上，每个LUT都以 $(X,Y,B_{in})$ 作为输入：\n- LUT$_{1}$ 实现 $D = X \\oplus Y \\oplus B_{in}$。\n- LUT$_{2}$ 实现 $B_{out} = \\overline{X}Y + \\overline{X}B_{in} + YB_{in}$。\n\n不需要额外的LUT，并且没有单个3输入、单输出LUT能同时产生这两个输出。因此，3输入LUT的绝对最小数量恰好是两个。", "answer": "$$\\boxed{2}$$", "id": "1944830"}]}