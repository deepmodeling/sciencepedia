{"hands_on_practices": [{"introduction": "要真正理解 FPGA 的工作原理，我们必须从其最核心的构建单元——查找表（LUT）开始。这个练习将带你亲手配置一个 LUT，通过将一个逻辑函数的真值表直接映射到 LUT 的配置内存中，来实现一个特定的组合逻辑功能。通过这个实践，你将揭开 LUT 的神秘面纱，并理解 FPGA 如何利用这些微小的可编程内存单元来实现任意逻辑 [@problem_id:1938016]。", "problem": "在现代数字系统的设计中，现场可编程门阵列 (FPGA) 因其灵活性而被广泛使用。FPGA 的基本构建模块是可配置逻辑块，它通常包含若干个查找表 (LUT)。一个 $k$ 输入查找表是一个小型存储器，可以被配置以实现任意一个 $k$ 变量的布尔函数。对于一个 3 输入查找表，该存储器存储 $2^3 = 8$ 位数据，形成一个 8 位的“配置字符串”。当三个输入施加到查找表时，它们被视为该存储器的一个地址，存储在该地址的位成为查找表的输出。\n\n考虑一个简单的容错系统，该系统使用三个冗余传感器来监控一个关键状态。设这些传感器的二进制输出为 $A$、$B$ 和 $C$。为了生成一个可靠的信号，需要一个“三输入多数决”函数。当且仅当其输入中有两个或更多个为 `1` 时，该函数输出 `1`；否则，它输出 `0`。\n\n您的任务是使用一个 3 输入查找表来实现这个三输入多数决函数。查找表的输入是 $A$、$B$ 和 $C$。这些输入被解释为一个 3 位二进制数 $CBA$，以形成一个地址，其中 $C$ 是最高有效位 (MSB)，$A$ 是最低有效位 (LSB)。这个 8 位配置字符串被定义为从地址 7 到地址 0 的存储值序列。即，该字符串为 `{mem[7], mem[6], mem[5], mem[4], mem[3], mem[2], mem[1], mem[0]}`。\n\n以下哪项代表了实现三输入多数决函数所需的正确 8 位配置字符串？\n\nA. 00010111\n\nB. 11101000\n\nC. 10000000\n\nD. 11111110\n\nE. 10010110", "solution": "要解决这个问题，我们需要确定一个用于实现三输入多数决函数的 3 输入查找表 (LUT) 的 8 位配置字符串。设输入为 $A$、$B$ 和 $C$，输出为 $F(A, B, C)$。\n\n第一步是构建三输入多数决函数的真值表。如果两个或更多输入为 1，则函数输出为 1，否则为 0。输入 $C$、$B$ 和 $A$ 也构成了 LUT 存储器的地址，其中 $C$ 是最高有效位 (MSB)，$A$ 是最低有效位 (LSB)。二进制数 $CBA$ 的整数值对应于存储器地址。\n\n让我们构建真值表，包括每个输入组合对应的十进制地址。\n\n| 地址（十进制） | 输入 $C$ | 输入 $B$ | 输入 $A$ | `1` 的数量 | 输出 $F$ |\n|-------------------|-----------|-----------|-----------|------------------|------------|\n| 0                 | 0         | 0         | 0         | 0                | 0          |\n| 1                 | 0         | 0         | 1         | 1                | 0          |\n| 2                 | 0         | 1         | 0         | 1                | 0          |\n| 3                 | 0         | 1         | 1         | 2                | 1          |\n| 4                 | 1         | 0         | 0         | 1                | 0          |\n| 5                 | 1         | 0         | 1         | 2                | 1          |\n| 6                 | 1         | 1         | 0         | 2                | 1          |\n| 7                 | 1         | 1         | 1         | 3                | 1          |\n\n输出列 $F$ 代表了 LUT 中应存储在每个对应存储器地址的位。因此，我们有：\n- `mem[0]` = 0\n- `mem[1]` = 0\n- `mem[2]` = 0\n- `mem[3]` = 1\n- `mem[4]` = 0\n- `mem[5]` = 1\n- `mem[6]` = 1\n- `mem[7]` = 1\n\n问题规定，配置字符串是从地址 7 到地址 0 的存储值序列。这意味着字符串是通过按 `mem[7] mem[6] mem[5] mem[4] mem[3] mem[2] mem[1] mem[0]` 的顺序连接存储位而形成的。\n\n使用我们从真值表中导出的值：\n- `mem[7]` = 1\n- `mem[6]` = 1\n- `mem[5]` = 1\n- `mem[4]` = 0\n- `mem[3]` = 1\n- `mem[2]` = 0\n- `mem[1]` = 0\n- `mem[0]` = 0\n\n按指定顺序组合这些位，得到 8 位配置字符串：`11101000`。\n\n将此结果与给定选项进行比较：\nA. 00010111 (这是从地址 0 到 7 的相反顺序。一个常见的错误。)\nB. 11101000 (这与我们导出的字符串匹配。)\nC. 10000000 (这将实现一个三输入与门。)\nD. 11111110 (这将实现一个三输入或门。)\nE. 10010110 (这将实现一个三输入异或门。)\n\n因此，正确的配置字符串是 `11101000`，对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1938016"}, {"introduction": "掌握了如何实现组合逻辑后，下一步是探索 FPGA 在构建时序电路方面的强大能力。FPGA 的逻辑单元（LE）通常将一个 LUT 和一个 D 型触发器（DFF）组合在一起，这使得实现复杂的状态机和寄存器变得轻而易举。这个练习将引导你设计一个带有时钟使能功能的 T 型触发器，你需要通过编程 LUT 来生成正确的下一状态逻辑，从而深入理解 LUT 和 DFF 如何协同工作，构成现代数字系统的基础 [@problem_id:1938061]。", "problem": "一个现场可编程门阵列（FPGA）中的专用逻辑单元（LE）被设计为具有高度灵活性。这个特定的LE由一个三输入查找表（LUT）和一个D型触发器（DFF）组成。LUT的输出直接馈入DFF的`D`输入端。DFF的寄存器输出（表示为`Q`）可作为LE的一个输出，并且也可以用作LUT的一个反馈输入。\n\n您的任务是配置此LE，使其用作一个带有同步、高电平有效时钟使能信号`CE`的T型触发器（T-FF）。LUT可用的三个输入是翻转信号`T`、时钟使能信号`CE`和触发器的当前状态`Q`。\n\n必须对LUT进行编程以实现一个特定的布尔函数`D = F(CE, T, Q)`，该函数使整个LE的行为如同一个带同步使能的T-FF。这意味着：\n1.  当`CE`为低电平（0）时，在下一个时钟有效沿上，触发器必须保持其当前状态`Q`。\n2.  当`CE`为高电平（1）时，在下一个时钟有效沿上，触发器的行为必须像一个标准的T-FF（即，如果`T=0`则保持状态，如果`T=1`则翻转状态）。\n\n下列哪个关于`D`的布尔表达式正确地实现了此功能？请选择所有适用的选项。在下面的选项中，$\\land$表示逻辑与运算，$\\lor$表示逻辑或运算，$\\neg$表示逻辑非运算，$\\oplus$表示逻辑异或运算。\n\nA. $D = (CE \\land (T \\oplus Q)) \\lor (\\neg CE \\land Q)$\n\nB. $D = (CE \\land T) \\oplus Q$\n\nC. $D = CE \\land (T \\oplus Q)$\n\nD. $D = (\\neg CE \\land Q) \\lor (CE \\land T)$\n\nE. $D = \\neg ( (\\neg CE \\land Q) \\lor (CE \\land (T \\oplus Q)) )$", "solution": "设 $Q^{+}$ 表示下一个寄存状态，因此LUT必须将 $D=Q^{+}$ 实现为关于 $(CE,T,Q)$ 的函数，并具有以下要求的行为：\n- 如果 $CE=0$，则 $Q^{+}=Q$（保持）。\n- 如果 $CE=1$，则 $Q^{+}=Q \\oplus T$（T触发器行为）。\n\n这种条件行为可以写成布尔复用器形式\n$$\nD \\;=\\; (\\neg CE \\land Q)\\; \\lor\\; \\big(CE \\land (Q \\oplus T)\\big).\n$$\n这与选项A完全匹配，因此A是正确的。\n\n现在证明选项B实现了相同的功能。考虑\n$$\nD \\;=\\; (CE \\land T) \\oplus Q.\n$$\n按 $CE$ 分情况讨论：\n- 如果 $CE=0$，则 $D=(0\\land T)\\oplus Q=0\\oplus Q=Q$，这符合要求的保持行为。\n- 如果 $CE=1}$,则 $D=(1\\land T)\\oplus Q=T\\oplus Q=Q\\oplus T$，这符合要求的T-FF行为。\n因此B是正确的。\n\n为求完整，我们也可以证明A和B之间的代数等价性。从A开始：\n$$\nD \\;=\\; CE\\land(Q \\oplus T)\\; \\lor\\; \\neg CE \\land Q\n\\;=\\; CE\\big(\\neg Q \\land T \\;\\lor\\; Q \\land \\neg T\\big)\\; \\lor\\; \\neg CE \\land Q\n$$\n$$\n=\\; CE \\land \\neg Q \\land T \\;\\lor\\; CE \\land Q \\land \\neg T \\;\\lor\\; \\neg CE \\land Q\n$$\n将含有 $Q$ 的项分组：\n$$\n=\\; CE \\land \\neg Q \\land T \\;\\lor\\; Q\\big(CE \\land \\neg T \\;\\lor\\; \\neg CE\\big).\n$$\n使用 $\\neg CE \\lor (CE \\land \\neg T) = (\\neg CE \\lor CE)\\land(\\neg CE \\lor \\neg T)=1\\land(\\neg CE \\lor \\neg T)=\\neg CE \\lor \\neg T$ 可得\n$$\nD \\;=\\; CE \\land \\neg Q \\land T \\;\\lor\\; Q(\\neg CE \\lor \\neg T)\n\\;=\\; CE \\land T \\land \\neg Q \\;\\lor\\; \\neg CE \\land Q \\;\\lor\\; \\neg T \\land Q.\n$$\n认出这是标准的异或形式：\n$$\nD \\;=\\; \\big(\\neg(CE\\land T)\\land Q\\big) \\;\\lor\\; \\big(CE\\land T \\land \\neg Q\\big)\n\\;=\\; (CE\\land T)\\oplus Q,\n$$\n这就是选项B。\n\n现在根据要求的行为检验其余选项：\n\n选项C：$D=CE \\land (T \\oplus Q)$。如果 $CE=0$，则 $D=0$，这通常不等于 $Q$；因此C不正确。\n\n选项D：$D=(\\neg CE \\land Q)\\lor(CE \\land T)$。如果 $CE=1$，则 $D=T$，但要求的行为是 $Q \\oplus T$。例如，当 $Q=1$ 且 $T=0$ 时，要求的下一状态是 $1$，但 $D$ 的计算结果为 $0$；因此D不正确。\n\n选项E：$D=\\neg\\big((\\neg CE \\land Q)\\lor(CE \\land (T \\oplus Q))\\big)$ 是A的逻辑非，因此它反转了要求的行为。例如，当 $CE=0$ 且 $Q=1$ 时，要求的下一状态是 $1$，但 $D=\\neg(1)=0$；因此E不正确。\n\n因此，正确的选项是A和B。", "answer": "$$\\boxed{AB}$$", "id": "1938061"}, {"introduction": "一个 FPGA 如果不能与外部世界可靠地通信，那么其内部再强大的逻辑也毫无用处。本练习将我们的视角从内部逻辑结构转移到物理 I/O 接口，这是一个至关重要且在实践中极易出错的领域。我们将分析一个常见的硬件问题：当连接不同电压标准的设备时，可能导致过压并损坏 FPGA。通过计算流过内部保护二极管的电流，你将学习到 I/O Bank 的电气特性，并理解为什么在设计中必须严格遵守电压规范 [@problem_id:1938004]。", "problem": "一位工程师正在调试一块电路板，板上的现场可编程门阵列 (FPGA) 正与一个外部设备进行接口连接。FPGA 上的一个 I/O 库由其专用的电源轨 $V_{CCO}$ 供电，被配置为 2.5 V 的信令标准。然而，连接到此 FPGA 库一个输入端的外部设备输出引脚，被错误地配置为一个 3.3 V 的低压晶体管-晶体管逻辑 (LVTTL) 输出。当外部设备输出逻辑“高”时，它以电压 $V_{ext}$ 驱动线路。这个高电压会正向偏置一个将 FPGA 输入引脚连接到 $V_{CCO}$ 电源轨的内部保护二极管，导致电流流入 FPGA 的电源。\n\n给定此过压情况下的以下参数：\n- FPGA I/O 库电源电压：$V_{CCO} = 2.50 \\, \\text{V}$\n- 外部驱动器高电平电压：$V_{ext} = 3.30 \\, \\text{V}$\n- 内部保护二极管导通时的正向压降：$V_D = 0.65 \\, \\text{V}$\n- 电流路径的总等效串联电阻，包括驱动器的输出阻抗和 FPGA 的内部电阻：$R_{path} = 15.0 \\, \\Omega$\n\n计算通过保护二极管从外部驱动器流入 FPGA 的 $V_{CCO}$ 电源轨的电流。以毫安 (mA) 为单位表示您的答案，并四舍五入到三位有效数字。", "solution": "当外部设备驱动逻辑高电平时，如果输入电压超过 $V_{CCO} + V_{D}$ 的总和，FPGA 输入引脚会正向偏置连接到 $V_{CCO}$ 电源轨的内部保护二极管。导通条件为：\n$$\nV_{ext} > V_{CCO} + V_{D}.\n$$\n计算阈值：\n$$\nV_{CCO} + V_{D} = 2.50 + 0.65 = 3.15.\n$$\n由于 $V_{ext} = 3.30 \\, \\text{V}$ 大于 $3.15 \\, \\text{V}$，二极管导通。流经路径的电压差为：\n$$\n\\Delta V = V_{ext} - (V_{CCO} + V_{D}) = 3.30 - (2.50 + 0.65) = 3.30 - 3.15 = 0.15 \\, \\text{V}.\n$$\n根据欧姆定律，通过二极管流入 $V_{CCO}$ 的电流为：\n$$\nI = \\frac{\\Delta V}{R_{path}} = \\frac{0.15 \\, \\text{V}}{15.0 \\, \\Omega} = 0.010 \\, \\text{A}.\n$$\n转换为毫安：\n$$\nI = 0.010 \\, \\text{A} \\times 1000 \\, \\frac{\\text{mA}}{\\text{A}} = 10.0 \\, \\text{mA}.\n$$\n四舍五入到三位有效数字，电流为 $10.0$ 毫安。", "answer": "$$\\boxed{10.0}$$", "id": "1938004"}]}