{"hands_on_practices": [{"introduction": "为防止数据丢失，DRAM 单元必须周期性地刷新。本练习将探讨“分布式刷新”(distributed refresh)策略，这是一种常见的方法，它将刷新命令分散在一段时间内执行，以避免系统长时间停顿。通过计算总刷新间隔，你将掌握典型 DRAM 系统中行数与刷新频率之间的基本时序关系。[@problem_id:1930727]", "problem": "一位计算机工程专业的学生正在为一种使用特定类型动态随机存取存储器 (DRAM) 的专用嵌入式系统设计内存控制器。该 DRAM 芯片的数据手册指明，其总共有 8192 行，并且所有行都必须被刷新以防止数据丢失。该学生的控制器设计实现了一种分布式刷新机制，其中单行刷新命令以恒定的时间间隔发出。一次行刷新操作的开始到下一次操作开始之间的时间间隔被规定为 $7.8$ 微秒。\n\n计算总刷新间隔 $t_{REFI}$，它代表在任何给定行必须被刷新之前允许经过的最长时间。这相当于控制器将 DRAM 芯片中的每一行都精确刷新一次所花费的总时间。答案以毫秒 (ms) 为单位表示，并四舍五入到三位有效数字。", "solution": "该 DRAM 有 $N_{\\text{rows}}=8192$ 行，控制器以 $t_{\\text{row}}=7.8$ 微秒的恒定起始间隔发出单行刷新命令。在分布式刷新机制下，刷新所有行一次的时间（总刷新间隔）是行数乘以每行的间隔时间：\n$$\nt_{\\text{REFI}}=N_{\\text{rows}} \\cdot t_{\\text{row}}=8192 \\times 7.8 \\text{ 微秒}。\n$$\n明确地计算乘积：\n$$\n8192 \\times 7.8=\\frac{78}{10} \\times 8192=\\frac{78 \\cdot 8192}{10}=\\frac{638976}{10}=63897.6 \\text{ 微秒}。\n$$\n使用 $1 \\text{ 毫秒}=1000 \\text{ 微秒}$ 将微秒转换为毫秒：\n$$\nt_{\\text{REFI}}=\\frac{63897.6}{1000}=63.8976 \\text{ 毫秒}。\n$$\n四舍五入到三位有效数字：\n$$\nt_{\\text{REFI}}=63.9 \\text{ 毫秒}。\n$$", "answer": "$$\\boxed{63.9}$$", "id": "1930727"}, {"introduction": "刷新周期虽然至关重要，但也会带来性能开销：存储器在刷新期间暂时无法进行读写操作。本练习引入了“刷新开销”(refresh overhead)这一概念来量化这种性能影响。你将探索外部因素（如温度升高）如何迫使系统采用更频繁的刷新策略，从而增加这一开销，这是系统设计中一个至关重要的考量。[@problem_id:1930741]", "problem": "一个工业控制系统使用一个动态随机存取存储器 (DRAM) 模块来存储操作数据。DRAM中的存储单元必须被周期性刷新以防止数据丢失。这个刷新过程会使存储器暂时无法进行读或写操作，从而产生开销。刷新开销定义为存储器用于执行刷新操作的时间在总时间中所占的比例。\n\n在标准操作条件下，该DRAM模块的规格如下：\n- 需要刷新的总行数：8192 行\n- 单行刷新周期所需时间 ($t_{RFC}$)：350 ns\n- 任何给定行的标准最大刷新间隔，也称为刷新间隔 ($t_{REFI}$)：64 ms\n\n由于操作环境的改变，控制系统周围的环境温度显著升高。这种升高的温度增加了DRAM电容器的泄漏率，为了确保数据完整性，迫使刷新间隔 ($t_{REFI}$) 减半。DRAM的所有其他时序参数，例如 $t_{RFC}$，保持不变。\n\n计算在高温环境下运行的DRAM模块的新的刷新开销。将您的答案表示为一个小数，并四舍五入到三位有效数字。", "solution": "刷新开销是DRAM因刷新而不可用的时间所占的比例。如果在总刷新窗口 $T$ 内必须刷新 $N$ 行，且每次刷新操作使DRAM在 $t_{RFC}$ 时间内不可用，则开销为\n$$\nO=\\frac{N\\,t_{RFC}}{T}.\n$$\n在标准条件下，$N=8192$ 且 $T=64 \\times 10^{-3} \\text{ s}$。当刷新间隔 $t_{REFI}$ 减半时，刷新所有行的时间窗口也减半，所以新的时间窗口为 $T'=\\frac{T}{2}=32 \\times 10^{-3} \\text{ s}$。在 $t_{RFC}$ 不变的情况下，新的开销为\n$$\nO'=\\frac{N\\,t_{RFC}}{T'}=\\frac{8192 \\cdot \\left(350 \\times 10^{-9} \\text{ s}\\right)}{32 \\times 10^{-3} \\text{ s}}.\n$$\n分步计算：\n$$\n8192 \\cdot 350=2{,}867{,}200,\\quad 2{,}867{,}200 \\times 10^{-9} \\text{ s}=2.8672 \\times 10^{-3} \\text{ s},\n$$\n所以\n$$\nO'=\\frac{2.8672 \\times 10^{-3}}{32 \\times 10^{-3}}=\\frac{2.8672}{32}=0.0896.\n$$\n四舍五入到三位有效数字，结果是 $0.0896$。", "answer": "$$\\boxed{0.0896}$$", "id": "1930741"}, {"introduction": "现代高性能存储系统采用复杂的技术来减小刷新开销。本练习将挑战你应用多存储体(multi-bank) DRAM 架构，这是一种允许并行操作的常见设计。你将为多存储体系统设计一个“交错式”(staggered)刷新时间表，通过确保并非所有存储体同时进行刷新来保证系统的响应能力，这正是高性能计算中隐藏刷新延迟的关键技术。[@problem_id:1930761]", "problem": "一个高性能计算系统使用一个专门的动态随机存取存储器 (DRAM) 模块。该模块包含 $N_B$ 个独立的存储体。为维护数据完整性，内存控制器必须定期刷新每个存储体。对一个存储体发出的单个刷新命令会使其在 $t_{RFC}$ 的时间内无法用于任何其他操作。\n\n内存控制器采用一种“固定交错”刷新策略。它按顺序向存储体（存储体 0、存储体 1、...、存储体 $N_B-1$）发出刷新命令，连续命令之间有固定的时间间隔 $t_{sep}$。\n\n为确保系统响应能力，设计上施加了一个关键约束：在任何给定时刻，因活跃的刷新命令而同时不可用的存储体数量不得超过 $k_{max}$，其中 $k_{max}$ 是一个满足 $1 \\le k_{max} < N_B$ 的整数。\n\n控制器被配置为使用仍满足此约束的最小可能 $t_{sep}$ 值，以便尽快完成所有存储体的刷新序列。\n\n假设第一个刷新命令（针对存储体 0）在时间 $t=0$ 发出，请确定直到最后一个存储体（存储体 $N_B-1$）完成其刷新周期所经过的总时间。这个总时长代表了在指定策略下刷新所有存储体所需的最短时间。\n\n在您的计算中使用以下数值：\n- 存储体总数，$N_B = 16$。\n- 单个存储体刷新周期时间，$t_{RFC} = 350 \\text{ ns}$。\n- 最大并发刷新存储体数，$k_{max} = 4$。\n\n答案以纳秒 (ns) 为单位表示，并四舍五入到三位有效数字。", "solution": "每次刷新会占用一个存储体，持续时间为 $t_{RFC}$。在固定交错调度下，每隔 $t_{sep}$ 发出一个命令，任何时刻重叠的活跃刷新次数等于长度为 $t_{RFC}$ 的时间区间的数量，这些区间的开始时间相隔 $t_{sep}$ 并覆盖该时刻。对于一个周期性的流，最大重叠数为\n$$\n\\left\\lceil \\frac{t_{RFC}}{t_{sep}} \\right\\rceil.\n$$\n约束要求这个最大值不超过 $k_{max}$，因此\n$$\n\\left\\lceil \\frac{t_{RFC}}{t_{sep}} \\right\\rceil \\le k_{max}.\n$$\n为了最小化总时间，控制器选择满足该约束的最小 $t_{sep}$。将向上取整结果维持在 $k_{max}$ 的最小间隔是\n$$\nt_{sep,\\min} = \\frac{t_{RFC}}{k_{max}}.\n$$\n对于 $N_{B}$ 个存储体，最后一个命令（针对存储体 $N_{B}-1$）在时间 $(N_{B}-1)t_{sep,\\min}$ 发出，并在额外的 $t_{RFC}$ 时间后完成。因此，完成所有刷新所需的总时间为\n$$\nT_{\\text{total}} = (N_{B}-1)\\,t_{sep,\\min} + t_{RFC} = (N_{B}-1)\\frac{t_{RFC}}{k_{max}} + t_{RFC}.\n$$\n代入给定值 $N_{B}=16$，$t_{RFC}=350\\ \\text{ns}$ 和 $k_{max}=4$ 可得\n$$\nt_{sep,\\min} = \\frac{350\\ \\text{ns}}{4} = 87.5\\ \\text{ns},\n$$\n$$\nT_{\\text{total}} = 15 \\times 87.5\\ \\text{ns} + 350\\ \\text{ns} = 1662.5\\ \\text{ns}.\n$$\n四舍五入到三位有效数字，结果为 $1.66 \\times 10^{3}\\ \\text{ns}$，因此以纳秒为单位报告的数值为 $1.66 \\times 10^{3}$。", "answer": "$$\\boxed{1.66 \\times 10^{3}}$$", "id": "1930761"}]}