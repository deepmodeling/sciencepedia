{"hands_on_practices": [{"introduction": "在设计存储系统时，首要任务是理解如何将独立的存储芯片组合成一个连续的地址空间。本练习将引导你实践一个核心技能：为一个存储器阵列中的特定芯片计算其精确的十六进制地址范围 [@problem_id:1946953]。掌握地址映射是后续进行更复杂存储器设计与调试的基础。", "problem": "一位嵌入式系统工程师正在通过组合四个独立的随机存取存储器（RAM）芯片来设计一个内存系统。每个芯片的容量为 $4\\text{K} \\times 8$位。在此背景下，'K' 代表乘数 $2^{10}$。因此，每个芯片提供 $4 \\times 2^{10}$ 个可寻址的内存位置，每个位置存储8位数据。\n\n这四个芯片被映射到一个单一的、连续的地址空间中，以形成一个更大的内存模块。内存起始于十六进制地址 $0000\\text{H}$。芯片按顺序排列，因此芯片1的地址空间紧随其后的是芯片2，然后是芯片3，最后是芯片4。\n\n确定第二个芯片（芯片2）所占用的地址范围的起始和结束十六进制地址。你的答案应为一对分别表示起始和结束地址的四位十六进制数。不要在你的最终答案中包含任何基数指示符（例如 'H' 或 '0x'）。", "solution": "每个RAM芯片的容量为 $4\\text{K} \\times 8$ 位，其中 $\\text{K} = 2^{10}$。因此，每个芯片的可寻址位置数量为\n$$\n4 \\times 2^{10} = 2^{2} \\times 2^{10} = 2^{12}.\n$$\n数据宽度（8位）不改变可寻址位置的数量。\n\n在内存从基地址 $0000$（十六进制）开始连续映射的情况下，芯片1占据了从 $0$ 到 $2^{12} - 1$（含）的地址。一般来说，对于芯片索引 $i \\in \\{1,2,3,4\\}$，起始和结束地址为\n$$\nA_{\\text{start}}(i) = (i-1)\\cdot 2^{12}, \\quad A_{\\text{end}}(i) = i \\cdot 2^{12} - 1.\n$$\n对于芯片2，有 $i=2$，因此\n$$\nA_{\\text{start}}(2) = 1 \\cdot 2^{12} = 2^{12}, \\quad A_{\\text{end}}(2) = 2 \\cdot 2^{12} - 1 = 2^{13} - 1.\n$$\n由于 $2^{12} = 16^{3}$，其十六进制表示为 $1000$。同样地，$2^{13} = 2 \\cdot 16^{3} = 2000$（十六进制），因此 $2^{13} - 1$ 是 $1\\text{FFF}$（十六进制）。因此，芯片2的十六进制地址范围从 $1000$ 到 $1\\text{FFF}$。", "answer": "$$\\boxed{\\begin{pmatrix}1000 & 1FFF\\end{pmatrix}}$$", "id": "1946953"}, {"introduction": "理论知识的最终目的是应用于实践。这个练习将带你完成一个完整的存储器扩展设计任务，你需要同时进行位扩展（增加数据宽度）和字扩展（增加存储容量）[@problem_id:1947017]。通过计算所需芯片总数、确定译码器规格并划分地址线，你将把零散的知识点整合成一个全面的设计蓝图。", "problem": "一位数字系统工程师的任务是为一个定制的微控制器设计一个内存模块。目标内存系统的容量必须为 $128\\text{K}$ 字，每个字为 16 位宽（即 $128\\text{K} \\times 16$ 的组织结构）。该工程师只有大量 $32\\text{K} \\times 8$ 的随机存取存储器（RAM）芯片可用。\n\n该系统的地址总线用 $A_{N-1}, \\dots, A_0$ 表示，其中 $N$ 是完整的 $128\\text{K} \\times 16$ 内存系统所需的地址线总数。为了实现这一设计，需要一个地址解码器来为内存阵列生成片选信号。\n\n以下哪个选项正确地指明了所需 RAM 芯片的总数、所需解码器的尺寸（形式为 $m \\times n$，其中 $m$ 是输入线数量， $n$ 是输出线数量），以及系统地址线如何划分为解码器输入和单片芯片地址输入？\n\nA. 总芯片数：8；解码器：$2 \\times 4$；解码器输入：$A_{1}, A_{0}$；芯片地址输入：$A_{16}, \\dots, A_{2}$\n\nB. 总芯片数：4；解码器：$2 \\times 4$；解码器输入：$A_{16}, A_{15}$；芯片地址输入：$A_{14}, \\dots, A_{0}$\n\nC. 总芯片数：8；解码器：$2 \\times 4$；解码器输入：$A_{16}, A_{15}$；芯片地址输入：$A_{14}, \\dots, A_{0}$\n\nD. 总芯片数：8；解码器：$3 \\times 8$；解码器输入：$A_{16}, A_{15}, A_{14}$；芯片地址输入：$A_{13}, \\dots, A_{0}$\n\nE. 总芯片数：16；解码器：$4 \\times 16$；解码器输入：$A_{16}, \\dots, A_{13}$；芯片地址输入：$A_{12}, \\dots, A_{0}$", "solution": "我们首先确定目标内存所需的地址线总数。$128\\text{K}$ 字的组织结构意味着可寻址位置的数量为\n$$128 \\times 1024 = 2^{17},$$\n因此，地址线的总数为 $N=17$，即系统总线为 $A_{16},\\dots,A_{0}$。\n\n每个可用的 RAM 芯片是 $32\\text{K} \\times 8$，即\n$$32 \\times 1024 = 2^{15} \\text{ 个位置},$$\n因此每个芯片需要 $15$ 个地址输入。\n\n为了用 8 位宽的芯片实现 16 位的字宽，我们将两个 8 位芯片并联，组成一个寻址块，这样它们的数据输出共同构成一个 16 位的字。因此，就宽度而言，每个寻址块所需的芯片数量为\n$$\\frac{16}{8}=2.$$\n\n为了用每个提供 $32\\text{K}$ 字容量的芯片达到所需的 $128\\text{K}$ 字的深度，我们在深度上需要\n$$\\frac{128\\text{K}}{32\\text{K}}=4$$\n个块（bank）。因此，所需的芯片总数为\n$$\\text{芯片数} = 2 \\times 4 = 8.$$\n\n在 4 个 bank 中进行选择需要一个有 4 个输出的解码器，即一个 $2 \\times 4$ 解码器。最高的两位地址线用于选择 bank，因此解码器的输入是 $A_{16}$ 和 $A_{15}$。剩下的 15 条地址线连接到每个芯片的地址输入端：\n$$\\text{芯片地址输入}: A_{14},\\dots,A_{0}.$$\n每个解码器输出使能一个 bank，而在一个 bank 内部，组成 16 位宽度的两个芯片共享同一个片选信号。\n\n与选项进行比较：\n- 总芯片数 $=8$，解码器 $2 \\times 4$，解码器输入 $A_{16},A_{15}$，以及芯片地址输入 $A_{14},\\dots,A_{0}$ 与选项 C 完全匹配。其他选项或者使用了错误的芯片数量、错误的解码器尺寸，或者错误地分配了地址线给解码器和芯片输入。\n\n因此，正确选项是 C。", "answer": "$$\\boxed{C}$$", "id": "1947017"}, {"introduction": "完美的设计在现实世界中可能会因为接线错误而失效，因此故障分析是工程师的一项重要能力。本练习提供了一个存在接线错误的存储器设计，要求你分析其导致的后果，例如地址重叠（aliasing）和未映射的地址空间 [@problem_id:1946957]。通过这个诊断过程，你将更深刻地理解地址译码的正确性为何至关重要。", "problem": "一名数字系统工程师的任务是为一个微处理器扩展内存，该微处理器拥有16位地址总线（$A_{15}$ 到 $A_0$）和一个8位数据总线。目标是使用三个可用的 $16\\text{K} \\times 8$ 随机存取存储器（RAM）芯片，来创建总共 $48\\text{K} \\times 8$ 的内存容量。工程师使用一个标准的 $2$-to-$4$ 线译码器来生成片选信号。该译码器有两个选择输入 $S_1$ 和 $S_0$，以及四个低电平有效输出 $\\bar{Y}_0, \\bar{Y}_1, \\bar{Y}_2, \\bar{Y}_3$。\n\n连接方式如下：\n- 微处理器的地址线 $A_{15}$ 和 $A_{14}$ 分别连接到译码器的选择输入 $S_1$ 和 $S_0$。\n- 微处理器的地址线 $A_{13}$ 到 $A_0$ 并行连接到所有三个RAM芯片的地址输入端。\n- 8位数据总线并行连接到所有三个RAM芯片的数据I/O引脚。\n- 由于接线错误，译码器的输出 $\\bar{Y}_0$ 连接到了RAM芯片1和RAM芯片3的低电平有效片选（$\\overline{CS}$）引脚。\n- 译码器的输出 $\\bar{Y}_1$ 连接到了RAM芯片2的$\\overline{CS}$引脚。\n- 译码器的输出 $\\bar{Y}_2$ 和 $\\bar{Y}_3$ 未连接。\n\n基于此错误配置，请分析整个16位地址空间（从 $0000_{16}$ 到 $FFFF_{16}$）的最终内存映射。以下哪个陈述准确描述了结果？\n\nA. 三个芯片被连续映射且无重叠，芯片1位于 $0000_{16}-3FFF_{16}$，芯片2位于 $4000_{16}-7FFF_{16}$，芯片3位于 $8000_{16}-BFFF_{16}$。\n\nB. 芯片1映射到 $0000_{16}-3FFF_{16}$，芯片2映射到 $4000_{16}-7FFF_{16}$。芯片3无法访问，且地址空间从 $8000_{16}$ 到 $FFFF_{16}$ 未被映射。\n\nC. 芯片1和芯片3在地址范围 $0000_{16}-3FFF_{16}$ 上发生地址重叠。芯片2映射到范围 $4000_{16}-7FFF_{16}$。地址空间从 $8000_{16}$ 到 $FFFF_{16}$ 未被映射。\n\nD. 系统有三个独立的 $16\\text{K}$ 内存块。芯片1位于 $0000_{16}-3FFF_{16}$，芯片2位于 $4000_{16}-7FFF_{16}$，芯片3位于 $C000_{16}-FFFF_{16}$。\n\nE. 所有三个RAM芯片都发生地址重叠，并响应相同的地址范围 $0000_{16}-3FFF_{16}$。地址空间从 $4000_{16}$ 到 $FFFF_{16}$ 未被映射。", "solution": "一个16位的地址总线提供 $2^{16}$ 个不同的字节地址。每个 $16\\text{K} \\times 8$ 的RAM有 $2^{14}$ 个地址，因此选择三个芯片中的一个需要对最高的两个地址位 $A_{15}$ 和 $A_{14}$ 进行译码，而较低的位 $A_{13}$ 到 $A_{0}$ 则提供芯片内部的 $2^{14}$ 个偏移地址。\n\n一个标准的具有低电平有效输出的 $2$-to-$4$ 译码器遵循以下选择逻辑：当 $(S_{1},S_{0})=(0,0)$ 时, $\\bar{Y}_{0}=0$ 且 $\\bar{Y}_{1}=\\bar{Y}_{2}=\\bar{Y}_{3}=1$；当 $(0,1)$ 时, $\\bar{Y}_{1}=0$ 且其他输出为 $1$；当 $(1,0)$ 时, $\\bar{Y}_{2}=0$ 且其他输出为 $1$；当 $(1,1)$ 时, $\\bar{Y}_{3}=0$ 且其他输出为 $1$。由于 $S_{1}=A_{15}$ 和 $S_{0}=A_{14}$，$(A_{15},A_{14})$ 的四种组合将地址空间划分为四个连续的、$2^{14}$字节的块，每个块内的具体地址由 $A_{13}\\dots A_{0}$ 决定。\n\n根据连接情况：\n- $\\bar{Y}_{0}$ 连接到芯片1和芯片3的低电平有效片选。\n- $\\bar{Y}_{1}$ 连接到芯片2的低电平有效片选。\n- $\\bar{Y}_{2}$ 和 $\\bar{Y}_{3}$ 未使用。\n\n分析每种高位地址选择的情况：\n1) 当 $(A_{15},A_{14})=(0,0)$ 时，$\\bar{Y}_{0}=0$ 且 $\\bar{Y}_{1}=\\bar{Y}_{2}=\\bar{Y}_{3}=1$。因此，芯片1和芯片3同时被选中，因为它们都接收到相同的低电平有效信号 $\\bar{Y}_{0}$。每个芯片内被访问的偏移地址由并行提供的相同的 $A_{13}\\dots A_{0}$ 决定。因此，两个芯片都响应相同的地址子范围 $A_{13}\\dots A_{0}\\in[0,2^{14}-1]$，这对应于地址范围 $0000_{16}$ 到 $3FFF_{16}$。这就在整个范围内造成了芯片1和芯片3之间的地址重叠。\n\n2) 当 $(A_{15},A_{14})=(0,1)$ 时，$\\bar{Y}_{1}=0$ 且其他输出为 $1$。因此，只有芯片2被选中。较低的14条地址线再次覆盖 $A_{13}\\dots A_{0}\\in[0,2^{14}-1]$ 的范围，将此选择映射到地址范围 $4000_{16}$ 到 $7FFF_{16}$。\n\n3) 当 $(A_{15},A_{14})=(1,0)$ 时，$\\bar{Y}_{2}=0$，但由于 $\\bar{Y}_{2}$ 未连接，所以没有RAM芯片被选中。整个地址块 $8000_{16}$ 到 $BFFF_{16}$ 未被映射。\n\n4) 当 $(A_{15},A_{14})=(1,1)$ 时，$\\bar{Y}_{3}=0$，但由于 $\\bar{Y}_{3}$ 未连接，所以没有RAM芯片被选中。整个地址块 $C000_{16}$ 到 $FFFF_{16}$ 未被映射。\n\n因此，芯片1和芯片3在 $0000_{16}$ 到 $3FFF_{16}$ 范围内发生地址重叠，芯片2被正确映射到 $4000_{16}$ 到 $7FFF_{16}$，而地址范围 $8000_{16}$ 到 $FFFF_{16}$ 未被映射。这与选项C完全一致。", "answer": "$$\\boxed{C}$$", "id": "1946957"}]}