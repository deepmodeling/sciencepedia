{"hands_on_practices": [{"introduction": "在使用一个元件之前，我们必须了解其基本规格。第一个练习聚焦于 EPROM 的地址线、数据线与其总存储容量之间的基本关系 [@problem_id:1932928]。掌握这种计算是为任何数字设计项目选择合适存储器的第一步。", "problem": "一位数字系统课程的学生正在进行一个项目，旨在为一个定制外围设备构建一个简单的控制器。为了项目的固件存储，该学生选择了一款经典的可擦除可编程只读存储器（EPROM）芯片。根据制造商的数据手册，该EPROM芯片配置有14条地址线和8条数据线。学生需要确定该芯片能容纳的最大数据量，以确保它足以存放控制器的程序。\n\n计算此EPROM芯片的总存储容量。在数字系统和存储器规格中，一千比特（kb）定义为1024比特。请用千比特（kilobits）作为单位来表示你的最终答案。", "solution": "一个具有 $n$ 条地址线的EPROM可以选择 $2^{n}$ 个唯一地址。当 $n=14$ 时，可寻址位置的数量为\n$$\nN_{\\text{addr}}=2^{14}.\n$$\n对于 $d$ 条数据线，每个地址位置输出 $d$ 比特。这里 $d=8$，因此以比特为单位的总容量是\n$$\nB=N_{\\text{addr}}\\times d=2^{14}\\times 8 \\text{ bits}.\n$$\n根据 $1$ 千比特 $=1024$ 比特和 $1024=2^{10}$ 的定义，以千比特为单位的容量是\n$$\nK=\\frac{B}{1024}=\\frac{2^{14}\\times 8}{2^{10}}=2^{4}\\times 8=16\\times 8=128 \\text{ kilobits}.\n$$\n因此，该EPROM的存储容量为 $128$ 千比特。", "answer": "$$\\boxed{128}$$", "id": "1932928"}, {"introduction": "与典型的 RAM 不同，向 EPROM 写入数据是一个依赖于特定物理机制的单向过程（从擦除状态开始）。本练习将探讨一个核心概念：擦除 EPROM 会将所有位设置为逻辑 $1$，而编程则选择性地将其变为逻辑 $0$ [@problem_id:1932883]。这个思想实验要求你逆向思考，从而正确地存储数据，揭示了目标数据与物理编程过程之间的关键相互作用。", "problem": "一位数字系统工程师的任务是为一个使用8位可擦除可编程只读存储器 (EPROM) 芯片的旧式设备修补固件。EPROM将数据存储在存储单元中，每个单元都是一个带有浮动栅的特殊金属氧化物半导体场效应晶体管 (MOSFET)。\n\n在编程之前，整个存储芯片会暴露在紫外光下进行擦除。这个擦除过程会移除浮动栅中所有俘获的电荷，将芯片中的每个存储单元设置为逻辑 '1' 的默认状态。为了存储数据，需要使用一个编程设备。通过施加高电压来对一个单元进行编程，这会向其浮动栅注入并俘获电子。这些俘获的电荷会使单元的状态从逻辑 '1' 变为逻辑 '0'。\n\n该工程师需要对一个8位存储位置进行编程，以存储字符 'K' 的美国信息交换标准代码 (ASCII) 表示。'K' 的8位ASCII码是 `0x4B`。\n\n然而，可用的EPROM编程器具有一种奇特的非标准接口逻辑。对于8条数据输入线（D7到D0）中的每一条，当且仅当相应的数据输入线被设置为逻辑 '1' 时，编程器的内部电路才会产生一个高压编程脉冲。如果一条数据输入线处于逻辑 '0'，则不会为该位生成脉冲，相应的存储单元将保持其擦除状态。\n\n请确定必须提供给编程器数据输入线（D7-D0）的8位值，以便在EPROM中正确存储字符 'K'。请以两位十六进制数的形式提供您的答案（例如 `F1`）。", "solution": "擦除操作将每个单元设置为逻辑$1$。当且仅当输入位为$1$时，编程器才会产生编程脉冲，而编程脉冲会将单元状态变为逻辑$0$。因此，对于每个比特位置$i$，存储的比特$S_{i}$与编程器输入的比特$I_{i}$之间的关系为\n$$\nS_{i}=\\neg I_{i}.\n$$\n要存储字符'K'，期望存储的字节是$S=0x4B$，其8位二进制形式为\n$$\nS = 0100\\,1011.\n$$\n因此，所需的编程器输入是其8位按位取反：\n$$\nI = \\neg S = 1011\\,0100 = 0xB4.\n$$\n因此，需要在D7–D0上提供的8位值是$B4$。", "answer": "$$\\boxed{B4}$$", "id": "1932883"}, {"introduction": "EPROM 的功能远不止简单的数据存储；它们可以通过编程，充当强大的组合逻辑电路。最后的这个练习将让你扮演系统设计师的角色，使用 EPROM 完成地址译码这一计算机系统中的关键任务 [@problem_id:1932861]。通过分析一个现实中的接线错误，你将看到如何利用 EPROM 的“查找表”特性来实现复杂逻辑，并学到宝贵的系统调试技巧。", "problem": "一位数字系统设计师正在使用一个可擦除可编程只读存储器（EPROM）来充当定制地址译码器。该系统的微处理器有一个16位的地址总线，表示为$A_{15}$（最高有效位）到$A_{0}$（最低有效位）。该系统包含三个8KB的存储芯片：一个ROM和两个RAM芯片（RAM1和RAM2）。一个8KB的存储块需要13条地址线（$2^{13} = 8192$），因此CPU的地址线$A_{12}$到$A_{0}$连接到所有三个存储芯片的地址输入端。\n\nCPU的高阶地址线$A_{15}$、$A_{14}$和$A_{13}$分别连接到EPROM的地址输入$E_2$、$E_1$和$E_0$（$A_{15} \\to E_2$，$A_{14} \\to E_1$，$A_{13} \\to E_0$）。EPROM的数据输出$D_2$、$D_1$和$D_0$分别连接到低电平有效的片选输入$\\overline{CS_{ROM}}$、$\\overline{CS_{RAM2}}$和$\\overline{CS_{RAM1}}$。\n\n设计师对EPROM进行编程，以实现以下存储器映射：\n- ROM位于地址 `0x0000` 到 `0x1FFF`。\n- RAM1位于地址 `0x2000` 到 `0x3FFF`。\n- RAM2位于地址 `0x4000` 到 `0x5FFF`。\n- 地址空间中所有其他的8KB块都未分配（EPROM被编程为不选择任何芯片）。\n\n制造后，发现了一个接线错误。连接到EPROM译码器的CPU地址线$A_{14}$和$A_{13}$被接反了。也就是说，CPU的$A_{14}$现在连接到EPROM的输入$E_0$，而CPU的$A_{13}$连接到EPROM的输入$E_1$。$A_{15}$到$E_2$的连接是正确的。\n\n以下哪个陈述准确描述了此接线错误对系统存储器映射的后果？\n\nA. RAM1和RAM2的存储位置交换，而ROM的位置不受影响。\n\nB. 所有三个存储芯片（ROM、RAM1、RAM2）现在都出现在不同的、非预期的存储位置。\n\nC. 所有存储芯片都变得无法访问，因为译码器输出总是错误的。\n\nD. ROM和RAM1的位置交换，而RAM2不受影响。\n\nE. 系统功能正常，因为这次交换对最终的片选逻辑没有影响。", "solution": "16位的地址空间被划分为$2^{3}=8$个每个8KB大小的连续块，由高阶位$(A_{15},A_{14},A_{13})$来选择。在预期的接线方式$E_{2}=A_{15}$，$E_{1}=A_{14}$，$E_{0}=A_{13}$以及编程设定的译码器行为下：\n- ROM选择信号（通过$D_{2}$输出的$\\overline{CS_{ROM}}$）在$(E_{2},E_{1},E_{0})=(0,0,0)$时被置为有效，即$(A_{15},A_{14},A_{13})=(0,0,0)$。\n- RAM1选择信号（通过$D_{0}$输出的$\\overline{CS_{RAM1}}$）在$(E_{2},E_{1},E_{0})=(0,0,1)$时被置为有效，即$(A_{15},A_{14},A_{13})=(0,0,1)$。\n- RAM2选择信号（通过$D_{1}$输出的$\\overline{CS_{RAM2}}$）在$(E_{2},E_{1},E_{0})=(0,1,0)$时被置为有效，即$(A_{15},A_{14},A_{13})=(0,1,0)$。\n这些分别对应以下地址范围：ROM位于块$(0,0,0)$或0x0000–0x1FFF，RAM1位于块$(0,0,1)$或0x2000–0x3FFF，RAM2位于块$(0,1,0)$或0x4000–0x5FFF；所有其他块均不被选中。\n\n发生接线错误后，EPROM的输入变为$E_{2}=A_{15}$，$E_{1}=A_{13}$，$E_{0}=A_{14}$（$A_{14}$和$A_{13}$到$E_{0}$和$E_{1}$的连接发生了交换）。EPROM仍然会根据编程，对相同的$(E_{2},E_{1},E_{0})$模式将其输出置为有效，但这些模式现在转换为了不同的$(A_{15},A_{14},A_{13})$条件：\n- ROM: $(E_{2},E_{1},E_{0})=(0,0,0)$ 意味着 $A_{15}=0, A_{13}=0, A_{14}=0$，因此 $(A_{15},A_{14},A_{13})=(0,0,0)$。ROM的位置仍在 0x0000–0x1FFF。\n- RAM1: $(E_{2},E_{1},E_{0})=(0,0,1)$ 意味着 $A_{15}=0, A_{13}=0, A_{14}=1$，因此 $(A_{15},A_{14},A_{13})=(0,1,0)$。RAM1移动到了 0x4000–0x5FFF。\n- RAM2: $(E_{2},E_{1},E_{0})=(0,1,0)$ 意味着 $A_{15}=0, A_{13}=1, A_{14}=0$，因此 $(A_{15},A_{14},A_{13})=(0,0,1)$。RAM2移动到了 0x2000–0x3FFF。\n\n因此，RAM1和RAM2交换了它们的地址块，而ROM保持在原始位置。所以，正确选项是A。", "answer": "$$\\boxed{A}$$", "id": "1932861"}]}