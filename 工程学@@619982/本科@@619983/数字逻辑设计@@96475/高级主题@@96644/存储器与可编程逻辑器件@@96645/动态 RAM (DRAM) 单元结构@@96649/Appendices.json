{"hands_on_practices": [{"introduction": "要理解动态随机存取存储器（DRAM）的工作原理，我们首先需要了解其宏观架构。一个DRAM芯片由数百万甚至数十亿个微小的存储单元排列成一个巨大的二维矩阵。这个练习将指导你如何从DRAM的总容量和其物理布局（行数与列数的关系）出发，推导出确定特定存储单元位置所需的地址线数量，这是存储器设计中的一个基本问题。[@problem_id:1931012]", "problem": "一位工程师正在为低功耗物联网 (IoT) 传感器节点设计一款定制微控制器。其中的一个关键组件是用于数据记录的嵌入式动态随机存取存储器 (DRAM) 芯片。该 DRAM 芯片的总存储容量为 256 Mebibits (Mibit)。内部存储单元阵列以矩形方式组织，其中单比特存储单元的行数恰好是列数的四倍。为了提高数据吞吐量，该存储器被设计为以 8 位字为单位进行访问。在一个存储器访问周期中，会选中一整行，其内容被加载到读出放大器缓冲器中；然后使用列地址从此缓冲器中选择一个 8 位字进行输出。\n\n根据该架构，确定行解码器所需的地址线数量和列解码器所需的地址线数量。请以整数对的形式给出您的答案，先行地址线数量，后列地址线数量。", "solution": "设单比特单元的总数为 $N$，行数为 $R$，列数为 $C$。容量为 $256$ Mebibits，所以\n$$\nN=256\\times 2^{20}=2^{8}\\times 2^{20}=2^{28}\\ \\text{bits}.\n$$\n阵列组织满足 $R=4C$，且阵列大小满足 $RC=N$。因此，\n$$\nRC=2^{28},\\quad R=4C\\ \\Rightarrow\\ 4C^{2}=2^{28}\\ \\Rightarrow\\ C^{2}=2^{26}\\ \\Rightarrow\\ C=2^{13}.\n$$\n于是，\n$$\nR=4C=4\\cdot 2^{13}=2^{15}.\n$$\n行解码器必须唯一地选择 $R$ 行中的一行，因此行地址线的数量为\n$$\n\\log_{2}(R)=\\log_{2}\\!\\left(2^{15}\\right)=15.\n$$\n激活一行后，$C$ 个比特被加载到读出放大器缓冲器中。访问以 $8$ 位字为单位，因此每行可选择的字数为\n$$\nW=\\frac{C}{8}=\\frac{2^{13}}{2^{3}}=2^{10}.\n$$\n因此，列解码器必须选择 $W$ 个字中的一个，需要\n$$\n\\log_{2}(W)=\\log_{2}\\!\\left(2^{10}\\right)=10\n$$\n条列地址线。\n\n因此，所需的地址线数量分别为 15（行）和 10（列）。", "answer": "$$\\boxed{\\begin{pmatrix}15 & 10\\end{pmatrix}}$$", "id": "1931012"}, {"introduction": "深入到DRAM的核心，我们会发现其最基本的操作——读取——是一个精巧的物理过程。每个存储单元通过一个微小的电容器上的电荷来存储一位数据，而读取操作的本质就是感知这些电荷。本练习将让你通过计算电荷共享来定量分析读取过程，理解当一个存储着逻辑“0”的单元连接到位线时，位线电压发生的精确变化，从而揭示DRAM感应放大器所面临的挑战。[@problem_id:1931032]", "problem": "在现代动态随机存取存储器 (DRAM) 阵列中，数据以电荷的形式存储在每个存储单元内的一个小电容器上。“读”操作涉及感应此电荷。考虑一个正在被读取的单个 DRAM 单元的简化模型。\n\n该单元由一个存储电容器组成，其电容为 $C_{cell} = 5.0$ 飞法 (fF)。此单元连接到一根称为位线的长导线，该位线本身具有 $C_{bitline} = 25.0$ fF 的寄生电容。存储控制器在 $V_{DD} = 1.8$ V 的电源电压下工作。\n\n为启动一个读取周期，首先将位线预充电至一个恰好为 $V_{DD}/2$ 的参考电压。随后，字线被置为有效，这会有效地闭合一个开关（访问晶体管），将单元的存储电容器连接到位线。\n\n在此特定场景中，单元电容器存储的是逻辑 '0'，意味着其初始电压为 $V_{cell, initial} = 0$ V。当字线被置为有效时，电荷在单元电容器和位线电容器之间重新分配，直到它们达到一个共同的最终电压 $V_{final}$。\n\n计算这个最终电压 $V_{final}$ 的值。你的答案应以伏特为单位，并四舍五入到三位有效数字。", "solution": "我们将读取过程建模为两个初始电压不同、然后通过理想开关闭合的电容器之间的电荷共享。相关的物理原理是封闭系统中的电荷守恒。\n\n设 $C_{b}$ 表示位线电容，$C_{c}$ 表示单元电容。最初，位线被预充电至 $V_{b,0} = \\frac{V_{DD}}{2}$，而单元电压为 $V_{c,0} = 0$。连接后，它们达到一个共同的最终电压 $V_{f}$。\n\n根据电荷守恒定律：\n$$\nQ_{\\text{initial}} \\;=\\; Q_{\\text{final}}.\n$$\n初始总电荷为：\n$$\nQ_{\\text{initial}} \\;=\\; C_{b} V_{b,0} + C_{c} V_{c,0} \\;=\\; C_{b} \\left(\\frac{V_{DD}}{2}\\right) + C_{c} (0).\n$$\n最终总电荷，在两个电容器都处于相同电压 $V_{f}$ 时，为：\n$$\nQ_{\\text{final}} \\;=\\; (C_{b} + C_{c}) V_{f}.\n$$\n令二者相等并求解 $V_{f}$：\n$$\n(C_{b} + C_{c}) V_{f} \\;=\\; C_{b} \\left(\\frac{V_{DD}}{2}\\right)\n\\;\\;\\Rightarrow\\;\\;\nV_{f} \\;=\\; \\frac{C_{b}}{C_{b} + C_{c}} \\cdot \\frac{V_{DD}}{2}.\n$$\n代入 $C_{b} = 25.0 \\times 10^{-15}\\,\\text{F}$，$C_{c} = 5.0 \\times 10^{-15}\\,\\text{F}$ 和 $V_{DD} = 1.8\\,\\text{V}$：\n$$\n\\frac{C_{b}}{C_{b} + C_{c}} \\;=\\; \\frac{25.0}{25.0 + 5.0} \\;=\\; \\frac{25}{30} \\;=\\; \\frac{5}{6},\n$$\n$$\nV_{f} \\;=\\; \\frac{5}{6} \\cdot \\frac{1.8}{2} \\;=\\; \\frac{5}{6} \\cdot 0.9 \\;=\\; 0.75.\n$$\n四舍五入到三位有效数字，最终电压为 $0.750$。", "answer": "$$\\boxed{0.750}$$", "id": "1931032"}, {"introduction": "掌握了DRAM的基本读写原理后，我们可以探索一些更前沿的应用，比如“存内计算”（Processing-in-Memory）。这种技术利用存储阵列自身的物理特性直接执行逻辑运算，有望突破传统计算架构的瓶颈。这个挑战性的练习将引导你设计一个操作序列，利用标准DRAM单元的电荷共享原理，在位线上直接实现两个比特的逻辑与非（NAND）门功能，让你一窥未来计算技术的可能性。[@problem_id:1931025]", "problem": "一个现代的动态随机存取存储器 (DRAM) 阵列由单晶体管、单电容器 (1T1C) 单元构成的列组成。列中的每个单元都连接到一条公共位线 (BL)。通过激活单元对应的字线 (WL) 来访问该单元，字线控制着单元访问晶体管的栅极。\n\n考虑一个具有以下特性的 DRAM 列的简化模型：\n- 每个单元将逻辑 '1' 存储为充电至电压 $V_{DD}$ 的电容器，将逻辑 '0' 存储为电压为 0V 的电容器。设每个单元的存储电容为 $C_S$。\n- 位线 (BL) 本身具有一个显著的寄生电容 $C_{BL}$。\n- 一个读出放大器 (SA) 连接到位线。SA 是一个差分放大器，它将位线上的电压 ($V_{BL}$) 与互补参考位线上的电压 ($V_{BL\\_bar}$) 进行比较。\n- 一次标准的读取操作按以下步骤进行：1) 将 BL 和 BL_bar 都预充电至 $V_{DD}/2$。2) 激活单个 WL，使相应单元的电容器与 BL 共享电荷，从而轻微改变 $V_{BL}$。3) 启用 SA，它会放大 BL 和 BL_bar 之间的微小电压差，将 BL 驱动至对应于感测到的位的满摆幅电压（$V_{DD}$ 或 0），并将 BL_bar 驱动至相反的摆幅。\n- 物理上可以同时激活同一位线上的多条字线，导致所有相应的单元同时与位线共享电荷。在 SA 启用之前，此过程中总电荷是守恒的。\n\n你的任务是确定正确的修改操作序列，以便对位于同一位线上的两个单元（单元 A 和单元 B）中存储的数据执行按位逻辑 `NAND` 操作。**互补位线 (BL_bar)** 上的最终满摆幅（0V 或 $V_{DD}$）电压应表示 `NAND(A, B)` 的结果。\n\n为解决此问题，你可以使用同一位线上的第三个单元（单元 D）作为操作的辅助部分。将 `init(X, val)` 定义为将逻辑值 `val` 写入单元 X 的操作。将 `precharge(V)` 定义为将 BL 和 BL_bar 都预充电至电压 `V` 的操作。令 `WL_X` 表示单元 X 的字线。下列哪个序列正确地执行了 `NAND(A,B)` 操作？\n\nA. 1. `init(D, 0)`; 2. `precharge(V_DD/2)`; 3. 同时激活 `WL_A`, `WL_B`, `WL_D`; 4. 启用 SA。\n\nB. 1. `init(D, 1)`; 2. `precharge(V_DD/2)`; 3. 同时激活 `WL_A`, `WL_B`, `WL_D`; 4. 启用 SA。\n\nC. 1. `precharge(V_DD)`; 2. 同时激活 `WL_A`, `WL_B`; 3. 启用 SA，其参考输入保持在 $V_{DD}$。\n\nD. 1. `precharge(0)`; 2. 同时激活 `WL_A`, `WL_B`; 3. 启用 SA。\n\nE. 1. `init(D, 0)`; 2. `precharge(V_DD/2)`; 3. 激活 `WL_A`，然后去激活它。然后激活 `WL_B`，然后去激活它。然后激活 `WL_D`；4. 启用 SA。", "solution": "我们使用标准的 DRAM 电荷共享模型，其中电容值以符号表示。设位线 (BL) 电容为 $C_{BL}$，每个单元的存储电容为 $C_{S}$，预充电电压为 $V_{0} = V_{DD}/2$。在读出放大器 (SA) 启用之前，如果一组具有初始电压 $\\{V_{i}\\}$ 的 $n$ 个单元同时连接到 BL，那么根据电荷守恒定律，最终共享的 BL 电压 $V_{BL}$ 为：\n$$\nV_{BL} = \\frac{C_{BL} V_{0} + C_{S} \\sum_{i=1}^{n} V_{i}}{C_{BL} + n C_{S}}.\n$$\n与 $V_{0}$ 的偏差为\n$$\nV_{BL} - V_{0} = \\frac{C_{S}\\left(\\sum_{i=1}^{n} V_{i} - n V_{0}\\right)}{C_{BL} + n C_{S}}.\n$$\n当逻辑值 $b_{i} \\in \\{0,1\\}$ 由 $V_{i} = b_{i} V_{DD}$ 表示，且 $V_{0} = V_{DD}/2$ 时，上式变为\n$$\nV_{BL} - V_{0} = \\frac{C_{S} V_{DD}}{C_{BL} + n C_{S}}\\left(\\sum_{i=1}^{n} b_{i} - \\frac{n}{2}\\right).\n$$\nSA 将 $V_{BL}$ 与预充电至 $V_{0}$ 的 $V_{BL\\_bar}$ 进行比较。如果 $V_{BL} > V_{0}$，SA 将 BL 驱动至 $V_{DD}$，并将 BL_bar 驱动至 $0$。如果 $V_{BL} < V_{0}$，SA 将 BL 驱动至 $0$，并将 BL_bar 驱动至 $V_{DD}$。因此，仅凭 $V_{BL} - V_{0}$ 的符号即可确定最终的满摆幅输出。\n\n为了在 BL_bar 上实现 NAND，我们需要当 $(A,B) \\in \\{00,01,10\\}$ 时 BL_bar 为 $V_{DD}$ (逻辑 1)，且仅当 $(A,B) = 11$ 时 BL_bar 为 $0$ (逻辑 0)。这可以通过同时连接单元 A、B 和一个初始化为 0 的哑单元 D 来实现，从而在这三个连接的电容器上将阈值设定在 $n/2 = 3/2$。\n\n分析选项 A：初始化 $D=0$，预充电至 $V_{0} = V_{DD}/2$，然后同时激活 $WL_{A}$、$WL_{B}$ 和 $WL_{D}$。此处 $n=3$ 且 $\\sum b_{i} = b_{A} + b_{B} + b_{D} = b_{A} + b_{B}$，因为 $b_{D}=0$。因此\n$$\nV_{BL} - V_{0} = \\frac{C_{S} V_{DD}}{C_{BL} + 3 C_{S}}\\left(b_{A} + b_{B} - \\frac{3}{2}\\right).\n$$\n因此：\n- 如果 $(A,B) \\in \\{00,01,10\\}$，那么 $b_{A} + b_{B} \\in \\{0,1\\}$，所以 $b_{A} + b_{B} - \\frac{3}{2} < 0$，这意味着 $V_{BL} < V_{0}$。因此，SA 将 BL 驱动至 $0$，将 BL_bar 驱动至 $V_{DD}$，即 BL_bar 输出 $1$，与 $\\operatorname{NAND}(A,B) = 1$ 相匹配。\n- 如果 $(A,B) = 11$，那么 $b_{A} + b_{B} = 2$ 且 $b_{A} + b_{B} - \\frac{3}{2} > 0$，这意味着 $V_{BL} > V_{0}$。因此，SA 将 BL 驱动至 $V_{DD}$，将 BL_bar 驱动至 $0$，即 BL_bar 输出 $0$，与 $\\operatorname{NAND}(A,B) = 0$ 相匹配。\n\n因此，选项 A 在 BL_bar 上实现了 $\\operatorname{NAND}(A,B)$。\n\n现在排除其他选项：\n\n- 选项 B (初始化 $D=1$)：那么 $\\sum b_{i} = b_{A} + b_{B} + 1$。对于 $(A,B) \\in \\{01,10\\}$，我们得到 $\\sum b_{i} = 2 > 3/2$，所以 $V_{BL} > V_{0}$ 且 BL_bar 变为 $0$，这与 $\\operatorname{NAND}(A,B) = 1$ 相矛盾。因此 B 是不正确的。\n\n- 选项 C (预充电至 $V_{DD}$ 并使用 $V_{DD}$ 作为 SA 参考)：当 BL 初始电压为 $V_{DD}$ 时，同时连接 A、B 会得到 $V_{BL} < V_{DD}$，除非 $(A,B) = 11$，此时 $V_{BL} = V_{DD}$，产生零差分。这对 11 的情况会产生一个未定义/亚稳态的情况，并且不能在 BL_bar 上产生与 NAND 匹配的合适的互补满摆幅输出。因此 C 是不正确的。\n\n- 选项 D (预充电至 $0$)：那么在连接 A、B 之后，对于 $(A,B) = 00$ 的情况，$V_{BL} = 0$（零差分，未定义），而对于任何至少有一个 1 的情况，$V_{BL} > 0$，这将使 BL_bar 变为 $0$，而不是对 $(01)$ 或 $(10)$ 的情况匹配 NAND 的结果。因此 D 是不正确的。\n\n- 选项 E (顺序激活 A，然后 B，然后是 D，其中 D=0)：顺序的电荷共享会在 SA 启用前改变单元内容，且不能保持由同时激活所保证的简单的以 $n/2$ 为阈值的线性求和判断。直接的符号评估显示，该序列之后最终的 BL 电压为 $V_{3} = V_{DD}\\left[\\frac{1}{2(1+r)^{3}} + \\frac{r}{(1+r)^{3}} b_{A} + \\frac{r}{(1+r)^{2}} b_{B}\\right]$，其中 $r = C_{S}/C_{BL}$。这并未实现对于所有 $r>0$ 的 NAND 操作所需的清晰的超过 $3/2$ 的多数阈值，甚至在 $(A,B) = 11$ 的情况下也可能失败，具体取决于 $r$ 的值。因此，在使用所述模型的情况下，E 不是一个正确、鲁棒的 NAND 操作。\n\n因此，只有选项 A 满足要求：它使用预充电至 $V_{DD}/2$、同时激活 A、B、D（D=0）以及启用 SA 的方法，在 BL_bar 上产生等于 $\\operatorname{NAND}(A,B)$ 的结果。", "answer": "$$\\boxed{A}$$", "id": "1931025"}]}