{"hands_on_practices": [{"introduction": "存储器芯片的规格通常表示为 `$M \\times N$`，其中 `$M$` 是存储单元（字）的数量，`$N$` 是每个字包含的位数。理解这一标准化表示法是设计任何数字系统的第一步。这项练习将帮助你将这种符号化的规格转化为实际的物理接口需求，也就是确定与微控制器连接所需的地址线和数据线条数 [@problem_id:1956561]。", "problem": "一名电气工程专业的学生正在进行一个项目，为环境传感器设计一个简单的数据记录器。该数据记录器的核心是一个微控制器，需要将传感器读数存储在外部存储芯片中。该学生为此目的选择了一款静态随机存取存储器 (RAM) 芯片。\n\n该存储芯片的容量和组织结构使用标准行业表示法 'M x N' 来描述，其中 'M' 代表可唯一寻址的存储单元（通常称为字）的总数，'N' 代表组成每个字的位数。所选芯片的规格为 '32K x 16'。在数字系统的背景下，前缀 'K' 是一个乘数，表示 $2^{10}$，即 1024。\n\n为了将该存储芯片与微控制器连接，需要一组地址线和一组数据线。地址线用于唯一指定正在访问的存储单元，而数据线用于将数据字并行地传入或传出所选单元。\n\n根据 '32K x 16' 的规格，确定该存储芯片所需的地址线数量和数据线数量。\n\n从以下选项中选择正确的一对，格式为（地址线数量，数据线数量）。\n\nA) (16, 32)\nB) (15, 16)\nC) (10, 16)\nD) (32768, 16)\nE) (16, 15)", "solution": "存储器组织结构表示法 $M \\times N$ 表示有 $M$ 个可寻址的字，每个字宽 $N$ 位。此处 $M=\\text{32K}$ 且 $N=16$，其中 $\\text{K}=2^{10}$。\n\n计算字的总数：\n$$\nM=\\text{32K}=32 \\times 2^{10}=2^{5}\\times 2^{10}=2^{15}.\n$$\n如果地址线的数量为 $a$，那么这 $a$ 条线的每种唯一组合会选择一个字，因此以字为单位的容量满足\n$$\n2^{a}=M.\n$$\n因此，\n$$\na=\\log_{2}(M)=\\log_{2}(2^{15})=15.\n$$\n数据线的数量等于字长，即\n$$\nN=16.\n$$\n因此，所需的配对是 $(15,16)$，对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1956561"}, {"introduction": "在掌握了单个存储芯片的基本原理后，我们常常面临一个更实际的挑战：单个芯片的容量无法满足整个系统的需求。这项练习将引导你解决如何通过组合多个较小的标准RAM芯片来构建一个更大容量的内存系统。你将学会如何同时扩展内存的深度（增加字数）和宽度（增加每个字的位数），这是数字系统设计中的一项核心技能 [@problem_id:1956588]。", "problem": "一名嵌入式系统工程师的任务是为一台定制计算机设计一个存储模块。该设计要求总存储容量为 64K x 16，这意味着它必须能存储 65,536 个字，每个字的宽度为 16 位。该工程师只能使用一批 16K x 8 的随机存取存储器 (RAM) 芯片。这些较小的芯片每个可以存储 16,384 个字，每个字的宽度为 8 位。为便于解决此问题，假设在存储容量的上下文中，一千字节 (K) 定义为 $1\\text{K} = 1024$。\n\n你需要确定此存储系统设计的三个关键参数。首先，计算构建 64K x 16 存储系统所需的 16K x 8 RAM 芯片的总数。其次，确定唯一寻址最终 64K x 16 存储系统中每个字所需的地址线数量。第三，确定每个 16K x 8 RAM 芯片上必须具备的地址线数量。", "solution": "使用 $1\\text{K}=1024=2^{10}$ 来解释容量单位。因此：\n- 目标存储器为 $64\\text{K} \\times 16$，意味着有 $64\\text{K}$ 个字，每个字 16 位宽。以 2 的幂计算字数和每字的位数：\n$$64\\text{K} = 64 \\cdot 2^{10} = 2^{6} \\cdot 2^{10} = 2^{16}\\ \\text{words},\\quad 16 = 2^{4}\\ \\text{bits/word}.$$\n因此，所需的总位数容量为\n$$2^{16} \\times 2^{4} = 2^{20}\\ \\text{bits}.$$\n- 每个可用的 RAM 芯片是 $16\\text{K} \\times 8$，即 $16\\text{K}$ 个字，每个字 8 位宽。以 2 的幂表示：\n$$16\\text{K} = 16 \\cdot 2^{10} = 2^{4} \\cdot 2^{10} = 2^{14}\\ \\text{words},\\quad 8 = 2^{3}\\ \\text{bits/word}.$$\n因此每个芯片存储\n$$2^{14} \\times 2^{3} = 2^{17}\\ \\text{bits}.$$\n\n1) 所需的芯片数量由总位数除以每块芯片的位数得出：\n$$\\frac{2^{20}}{2^{17}} = 2^{3} = 8.$$\n\n同样地，要用 8 位芯片实现 16 位字，每个被寻址的字需要 2 个芯片并联，而将深度从 $16\\text{K}$ 扩展到 $64\\text{K}$ 需要一个因子 $\\frac{64\\text{K}}{16\\text{K}}=4$，总共需要 $2 \\times 4 = 8$ 个芯片。\n\n2) 唯一寻址 $64\\text{K} \\times 16$ 存储器中所有字所需的地址线数量等于字数的以 2 为底的对数。根据 $N$ 个可寻址字需要 $\\log_{2}(N)$ 条地址线的原理：\n$$\\log_{2}(2^{16}) = 16\\ \\text{address lines}.$$\n\n3) 同样，每个 $16\\text{K} \\times 8$ 芯片的地址线数量等于其字数的 $\\log_{2}$：\n$$\\log_{2}(2^{14}) = 14\\ \\text{address lines}.$$", "answer": "$$\\boxed{\\begin{pmatrix}8 & 16 & 14\\end{pmatrix}}$$", "id": "1956588"}, {"introduction": "一个功能完备的内存系统不仅关乎容量大小，更在于其运行速度和数据读写的可靠性。此练习将带你从静态的结构分析转向动态的性能评估。通过深入研究SRAM芯片的关键时序参数，例如地址访问时间 `$t_{AA}$` 和输出使能时间 `$t_{OE}$`，你将计算出系统能够可靠运行的最高时钟频率，这是确保高速系统中数据完整性的关键一步 [@problem_id:1956585]。", "problem": "一位数字系统工程师正在设计一个简单的基于微控制器单元（MCU）的系统，该系统与外部异步静态随机存取存储器（SRAM）接口。对于存储器读取操作，MCU 的总线周期与单个系统时钟同步。在时钟的上升沿（周期开始时），MCU 在地址总线上放置一个稳定的地址。经过一个传播延迟后，MCU 断言存储器的输出使能（$\\overline{OE}$）信号以请求数据。MCU 在下一个时钟上升沿从数据总线上锁存数据。为确保读取操作成功，来自 SRAM 的数据在被锁存之前，必须在 MCU 的输入引脚上稳定一段特定的建立时间。\n\n时序特性由以下符号参数给出：\n- $t_{AA}$：地址访问时间。从向 SRAM 提供稳定地址到相应数据在数据总线上有效所需的最长时间。\n- $t_{OE}$：输出使能访问时间。从 $\\overline{OE}$ 信号被断言（驱动为低电平）到数据在数据总线上有效所需的最长时间。\n- $t_{\\text{prop_OE}}$：MCU 内部从时钟周期开始到 $\\overline{OE}$ 信号被断言的传播延迟。\n- $t_{SU}$：MCU 所需的建立时间，意味着数据在锁存数据的时钟沿之前必须在其输入引脚上至少稳定此持续时间。\n\n组件的具体时序值为：\n- $t_{AA} = 12.0$ ns\n- $t_{OE} = 6.0$ ns\n- $t_{\\text{prop_OE}} = 2.5$ ns\n- $t_{SU} = 2.0$ ns\n\n假设存储器的芯片使能（$\\overline{CE}$）信号被永久断言且其他时序参数均满足，计算在所有指定的最坏情况条件下，保证可靠存储器读取操作的最大可能系统时钟频率。将您的答案以兆赫兹（MHz）为单位表示，并四舍五入到三位有效数字。", "solution": "将时间原点定义在启动总线周期的上升沿。根据题意，MCU 在此边沿提供一个稳定的地址，因此地址在时间零点时有效。MCU 在此边沿之后经过一个传播延迟 $t_{\\text{prop_OE}}$ 断言存储器的 $\\overline{OE}$。在 $\\overline{CE}$ 被永久断言的情况下，来自 SRAM 的有效数据可能在以下时间后出现：\n- 从地址有效时刻算起的地址访问时间 $t_{AA}$，以及\n- 从 $\\overline{OE}$ 被断言（发生在开始后 $t_{\\text{prop_OE}}$ 时刻）算起的输出使能访问时间 $t_{OE}$。\n\n因此，在最坏情况下，数据在总线上有效的最早时间是\n$$\nt_{\\text{data,valid}}=\\max(t_{AA}, t_{\\text{prop_OE}} + t_{OE}).\n$$\nMCU 将在时间 $T$ 的下一个时钟上升沿锁存数据。为了正确操作，数据必须满足 MCU 输入端的建立时间 $t_{SU}$，因此它必须在 $T-t_{SU}$ 之前有效。因此，时序约束为\n$$\nT-t_{SU}\\geq t_{\\text{data,valid}}\\quad\\Rightarrow\\quad T_{\\min}=t_{\\text{data,valid}}+t_{SU}.\n$$\n最大时钟频率为 $f_{\\max}=1/T_{\\min}$。代入给定值，\n$$\nt_{\\text{prop_OE}}+t_{OE}=2.5\\ \\text{ns}+6.0\\ \\text{ns}=8.5\\ \\text{ns},\n$$\n$$\nt_{\\text{data,valid}}=\\max(12.0\\ \\text{ns},\\,8.5\\ \\text{ns})=12.0\\ \\text{ns},\n$$\n$$\nT_{\\min}=12.0\\ \\text{ns}+2.0\\ \\text{ns}=14.0\\ \\text{ns},\n$$\n$$\nf_{\\max}=\\frac{1}{14.0\\times 10^{-9}\\ \\text{s}}=7.142857\\ldots\\times 10^{7}\\ \\text{Hz}=71.42857\\ldots\\ \\text{MHz}.\n$$\n以兆赫兹为单位，四舍五入到三位有效数字，结果是 $71.4$。", "answer": "$$\\boxed{71.4}$$", "id": "1956585"}]}