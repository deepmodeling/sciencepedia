{"hands_on_practices": [{"introduction": "粒子图像测速技术（PIV）通过计算粒子位移与时间间隔之比（$\\vec{u} = \\Delta \\vec{r} / \\Delta t$）来测量速度，但这只在匀速运动时才精确。在存在加速度的流场中，这种计算方法会引入系统性的偏误。本练习将通过一个简化的模型来量化这一基本的时间偏误，揭示 PIV 测量的速度实际上更接近于时间间隔中点的瞬时速度，这是理解 PIV 测量不确定性的关键第一步。[@problem_id:510747]", "problem": "粒子图像测速法 (Particle Image Velocimetry, PIV) 是一种用于获取流体速度测量的流场可视化技术。标准 PIV 算法通过测量在一个短时间间隔 $\\Delta t$ 内，流场中一个称为查询窗 (interrogation window) 的小子区域内示踪粒子的平均位移 $\\Delta \\vec{r}$ 来确定速度矢量。测得的速度随后计算为 $\\vec{u}_{PIV} = \\Delta \\vec{r} / \\Delta t$。\n\n在具有非零加速度的流场中，该测量过程可能会引入一个偏差误差。考虑一个简化模型来分析此偏差。假设 PIV 系统完美地跟踪并测量了单个示踪粒子的位移，该粒子在初始时刻 $t_0$ 位于查询窗的几何中心 $\\vec{r}_c$。该粒子是流场的一部分，在流场中它经历一个恒定的拉格朗日加速度 $\\vec{a}_p$。\n\nPIV 测量在从 $t_0$ 到 $t_0 + \\Delta t$ 的时间间隔内进行。与 PIV 测量值进行比较的“真实”速度，定义为在初始时刻 $t_0$ 查询窗中心处流体的瞬时速度，即 $\\vec{u}_{true} = \\vec{u}(\\vec{r}_c, t_0)$。\n\n推导定义为 $\\vec{\\epsilon}_u = \\vec{u}_{PIV} - \\vec{u}_{true}$ 的偏差速度误差矢量，并用恒定的粒子加速度 $\\vec{a}_p$ 和时间间隔 $\\Delta t$ 表示。", "solution": "相关方程：\n1. 恒定加速度下的粒子位移：\n$$\\Delta \\vec{r} = \\vec{u}(\\vec{r}_c,t_0)\\,\\Delta t + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t^2.$$\n2. PIV 测量的速度：\n$$\\vec{u}_{PIV} = \\frac{\\Delta \\vec{r}}{\\Delta t}.$$\n3. 在 $t_0$ 和 $\\vec{r}_c$ 处的真实速度：\n$$\\vec{u}_{true} = \\vec{u}(\\vec{r}_c,t_0).$$\n4. 偏差速度误差：\n$$\\vec{\\epsilon}_u = \\vec{u}_{PIV} - \\vec{u}_{true}.$$\n\n分步推导：\n根据 (1)，\n$$\\Delta \\vec{r} = \\vec{u}(\\vec{r}_c,t_0)\\,\\Delta t + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t^2.$$\n两边除以 $\\Delta t$ 得到 $\\vec{u}_{PIV}$：\n$$\\vec{u}_{PIV} = \\frac{\\Delta \\vec{r}}{\\Delta t}\n= \\vec{u}(\\vec{r}_c,t_0) + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t.$$\n减去 $\\vec{u}_{true} = \\vec{u}(\\vec{r}_c,t_0)$：\n$$\\vec{\\epsilon}_u\n= \\vec{u}_{PIV} - \\vec{u}_{true}\n= \\bigl[\\vec{u}(\\vec{r}_c,t_0) + \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t\\bigr]\n  - \\vec{u}(\\vec{r}_c,t_0)\n= \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t.$$\n因此偏差误差为\n$$\\vec{\\epsilon}_u = \\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t.$$", "answer": "$$\\boxed{\\tfrac{1}{2}\\,\\vec{a}_p\\,\\Delta t}$$", "id": "510747"}, {"introduction": "平面 PIV 通过照亮三维流场中的一个薄片来工作，这隐含着流动是二维的假设。然而，当存在垂直于光片的显著速度分量时，粒子可能会在两次曝光之间移出照亮区域。本练习探讨了这种被称为“粒子对丢失”的关键误差来源，并量化了它在一个常见的剪切流场景中如何对测量结果产生偏误，从而帮助你理解三维流动特性如何影响二维测量技术的准确性。[@problem_id:510794]", "problem": "**背景：** 在平面粒子图像测速技术（PIV）中，一层薄薄的激光片光照亮流体中的示踪粒子。通过在短暂的时间间隔 $\\Delta t$ 内捕捉两张粒子图像，可以测量出平面内的速度场。一个已知的测量误差来源是由于离面速度分量导致的“粒子对丢失”，这可能导致粒子在两次图像采集之间移出有限厚度的片光。如果离面方向上存在速度梯度，这种效应会导致测量速度出现统计偏差。\n\n**问题：** 考虑在 $x-y$ 平面上对一个稳态三维流场进行的平面PIV测量。激光片光具有均匀的厚度 $\\Delta z_L$，并以 $z=0$ 为中心。假设在 $|z| \\le \\Delta z_L/2$ 范围内光照强度恒定，而在该范围外为零。流场中均匀散布着示踪粒子。速度场由以下公式给出：\n$$ \\vec{V}(x, y, z) = (U_0 + \\alpha z) \\hat{\\imath} + V_0 \\hat{\\jmath} + W_0 \\hat{k} $$\n其中 $U_0$、$V_0$、$W_0$ 和 $\\alpha$ 均为常数。PIV测量在两次成像之间的时间间隔为 $\\Delta t$。假设粒子的离面位移小于片光厚度，即 $|W_0| \\Delta t < \\Delta z_L$，以确保有一部分粒子在两次曝光中都保留在片光内。\n\nPIV算法实际上计算的是在*第一次和第二次*曝光时都位于片光内的那些粒子的平均速度。$x$方向的真实平均速度 $U_{true}$ 是速度的$x$分量在任何瞬间于整个片光厚度上的空间平均值。而测量速度 $\\hat{U}$ 是在两次成像中都保留在片光内的那部分粒子的平均速度。\n\n推导速度$x$分量的偏差误差表达式，定义为 $\\epsilon_U = \\hat{U} - U_{true}$。", "solution": "我们有一个三维稳态流场\n$$\\vec V(x,y,z)=(U_0+\\alpha z)\\,\\hat\\imath+V_0\\,\\hat\\jmath+W_0\\,\\hat k$$  \n以及一个以$z=0$为中心、厚度均匀为 $\\Delta z_L$ 的片光。初始位置 $z_0\\in[-\\tfrac{\\Delta z_L}{2},\\tfrac{\\Delta z_L}{2}]$ 的粒子在时间 0 被照亮。在两次曝光之间，它们的位移为\n$$\\delta z=W_0\\,\\Delta t\\,. $$  \n要被成像两次，粒子必须满足\n$$z_0\\in[-\\tfrac{\\Delta z_L}{2},\\tfrac{\\Delta z_L}{2}]\\cap[-\\tfrac{\\Delta z_L}{2}-\\delta z,\\tfrac{\\Delta z_L}{2}-\\delta z]\\,. $$  \n可以发现，这个交集是一个长度为 $L_s=\\Delta z_L-|\\delta z|$ 的区间，其端点关于 $z=-\\delta z/2$ 对称。\n\n1. 片光内的真实平均速度：\n$$U_{\\rm true}=\\frac1{\\Delta z_L}\\int_{-\\Delta z_L/2}^{\\Delta z_L/2}(U_0+\\alpha z)\\,dz\n=U_0\\,. $$\n\n2. 在存活粒子上的测量平均速度：它们占据 $z\\in[z_1,z_2]$，其中 $z_1+z_2=-\\delta z$，所以它们的平均位置为\n$$\\langle z\\rangle=\\frac{z_1+z_2}2=-\\frac{\\delta z}2\\,. $$  \n因此\n$$\\hat U=U_0+\\alpha\\,\\langle z\\rangle\n=U_0-\\frac{\\alpha\\,\\delta z}2\n=U_0-\\frac{\\alpha\\,W_0\\,\\Delta t}2\\,. $$\n\n3. 因此，偏差误差为\n$$\\epsilon_U=\\hat U-U_{\\rm true}\n=-\\frac{\\alpha\\,W_0\\,\\Delta t}2\\,. $$", "answer": "$$\\boxed{-\\frac{\\alpha\\,W_0\\,\\Delta t}{2}}$$", "id": "510794"}, {"introduction": "为了捕捉流场的完整三维结构，层析 PIV 等先进技术应运而生。这些技术面临一个核心挑战：如何从几张二维投影图像中重建出三维体数据。这个逆问题通常通过迭代算法求解，其中同步代数重建技术（SART）是最高效和最常用的一种。本练习将带你深入 SART 算法的核心，通过推导其迭代更新规则，你将理解如何综合多个二维视图的信息来构建三维流场，并学习如何施加诸如非负性之类的物理约束。[@problem_id:510851]", "problem": "在层析流动可视化技术中，例如层析粒子图像测速法（Tomo-PIV），其目标是从一组二维投影图像中重建一个三维标量场。这个问题通常被表述为一个大型线性方程组 $\\mathbf{p} = \\mathbf{Wf}$，其中 $\\mathbf{f}$ 是未知体素值的向量，$\\mathbf{p}$ 是测得的投影数据的向量，而 $\\mathbf{W}$ 是投影矩阵。同步代数重建技术（SART）是用于求解该系统的一种迭代算法。\n\n设 $f_j$ 为第 $j$ 个体素（$j=1, \\dots, N$）的标量值，设 $p_i$ 为第 $i$ 条投影射线（$i=1, \\dots, M$）的测量积分值。矩阵元素 $w_{ij} \\ge 0$ 表示体素 $j$ 对射线 $i$ 的贡献，如果射线不穿过该体素，则其值为零。SART 算法通过迭代来改进体素值的估计，第 $k$ 次迭代的估计值记为 $f_j^{(k)}$。\n\n在第 $k+1$ 次迭代中，对给定体素 $f_j$ 的更新由以下两个主要步骤导出：\n1.  **修正计算**：对每条射线 $i$，计算其投影误差。该误差为测量投影值 $p_i$ 与当前估计值的前向投影 $\\sum_{n=1}^N w_{in}f_n^{(k)}$ 之间的差值。然后，用沿该射线的权重之和 $\\sum_{n=1}^N w_{in}$ 对该误差进行归一化，以求得该射线的平均修正项。我们假设对于每条射线 $i$，至少存在一个体素 $n$ 使得 $w_{in} > 0$。\n2.  **反投影**：体素 $j$ 的修正是所有穿过它的射线的修正项的加权和。每条射线的修正对该体素的贡献由其对应的矩阵元素 $w_{ij}$ 加权。这个聚合修正量再由与体素 $j$ 相关的所有权重之和（即 $\\sum_{i=1}^M w_{ij}$）进行归一化。其结果乘以一个松弛因子 $\\lambda$ 后，加到当前体素值 $f_j^{(k)}$ 上。我们假设对于每个体素 $j$，至少存在一条射线 $i$ 使得 $w_{ij} > 0$。\n\n在许多物理应用中，标量场 $f_j$ 代表一个非负量（例如密度、浓度）。为了施加这种物理约束，在每个更新步骤之后，都会应用一个非负投影算子 $\\mathcal{P}_+(x) = \\max(0, x)$。\n\n请使用 SART 算法推导包含此非负约束的体素值 $f_j^{(k+1)}$ 的完整迭代更新规则。请将结果表示为以 $f_j^{(k)}$、$p_i$、$w_{ij}$ 和 $\\lambda$ 表示 $f_j^{(k+1)}$ 的单个方程。", "solution": "1. 射线 $i$ 的修正：\n\n$$\ne_i^{(k)} \\;=\\;\\frac{p_i \\;-\\;\\displaystyle\\sum_{n=1}^N w_{in}\\,f_n^{(k)}}{\\displaystyle\\sum_{n=1}^N w_{in}}.\n$$\n\n2. 体素 $j$ 的反投影修正：\n\n$$\nc_j^{(k)} \\;=\\;\\frac{\\displaystyle\\sum_{i=1}^M w_{ij}\\,e_i^{(k)}}{\\displaystyle\\sum_{i=1}^M w_{ij}}\n\\;=\\;\\frac{\\displaystyle\\sum_{i=1}^M w_{ij}\\,\\frac{p_i-\\sum_{n=1}^N w_{in}f_n^{(k)}}{\\sum_{n=1}^N w_{in}}}{\\displaystyle\\sum_{i=1}^M w_{ij}}.\n$$\n\n3. 包含松弛因子 $\\lambda$ 和非负性约束的 SART 更新：\n\n$$\nf_j^{(k+1)}\n=\\mathcal{P}_+\\!\\Bigl(f_j^{(k)}+\\lambda\\,c_j^{(k)}\\Bigr)\n=\\max\\!\\Bigl(0,\\;f_j^{(k)}+\\lambda\\,\\frac{\\sum_{i=1}^M w_{ij}\\,\\frac{p_i-\\sum_{n=1}^N w_{in}f_n^{(k)}}{\\sum_{n=1}^N w_{in}}}{\\sum_{i=1}^M w_{ij}}\\Bigr).\n$$", "answer": "$$\\boxed{f_j^{(k+1)}=\\max\\Bigl(0,\\;f_j^{(k)}+\\lambda\\,\\frac{\\sum_{i=1}^M w_{ij}\\,\\frac{p_i-\\sum_{n=1}^N w_{in}f_n^{(k)}}{\\sum_{n=1}^N w_{in}}}{\\sum_{i=1}^M w_{ij}}\\Bigr)}$$", "id": "510851"}]}