{"hands_on_practices": [{"introduction": "本练习侧重于解读穆迪图的基本特征。通过考虑一个水力光滑管，您将探索在湍流状态下摩擦系数 $f$ 和雷诺数 $Re$ 之间的关系。这项实践对于理解管道中摩擦损失的理论最小值至关重要，这是系统设计中的一个关键基准。[@problem_id:1802764]", "problem": "一个工程团队正在设计一种新型高效的液体冷却系统。为增强传热，冷却通道内的流动必须维持在湍流状态。这些通道将由一种新型聚合物制造，该聚合物可以被抛光至极高的光洁度，从而使通道成为水力光滑管。达西摩擦因子 $f$ 是一个无量纲量，用于描述管道中的摩擦损失，并且是雷诺数 $Re$ 和管道内壁相对粗糙度 $\\epsilon/D$ 的函数，其中 $\\epsilon$ 是绝对粗糙度，$D$ 是管道直径。对于水力光滑管，其相对粗糙度 $\\epsilon/D$ 可被视为有效为零。\n\n作为一名顾问，您被要求确定在这些光滑通道内的任何可能湍流条件（$Re > 4000$）下，该团队应预期的达西摩擦因子 $f$ 的实际下限是多少。您的答案将有助于为该系统的最佳性能设定一个基准。基于已知的管流中 $f$、$Re$ 和 $\\epsilon/D$ 之间的关系，这个最小摩擦因子的最合理估计值是多少？\n\nA. 0.008\n\nB. 0.0\n\nC. 0.038\n\nD. 0.079\n\nE. 0.1", "solution": "圆管中湍流的达西摩擦因子可由 Colebrook–White 方程很好地表示：\n$$\n\\frac{1}{\\sqrt{f}}=-2\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7}+\\frac{2.51}{Re\\sqrt{f}}\\right).\n$$\n对于水力光滑管，相对粗糙度满足 $\\epsilon/D \\to 0$，因此可以得到其光滑管（Prandtl–Karman）形式：\n$$\n\\frac{1}{\\sqrt{f}}=2\\log_{10}\\!\\left(Re\\sqrt{f}\\right)-0.8.\n$$\n从这个隐式关系可以看出，对于光滑管，$f$ 仅依赖于 $Re$。为了确定湍流区 $Re>4000$ 内的下限，注意到其单调性：随着 $Re$ 的增加，方程右侧缓慢增加，这使得 $1/\\sqrt{f}$ 增加，因此 $f$ 减小。因此，对于光滑管中的湍流，$f$ 是 $Re$ 的递减函数。\n\n在 $Re\\to\\infty$ 的形式极限下，光滑管方程意味着 $\\sqrt{f}$ 大致按 $1/\\log_{10}(Re)$ 的比例减小，所以 $f\\to 0$。然而，在任何有限的 $Re$ 下都无法达到 $f=0$，并且在工程实践中，会采用一个实际下限，该下限取自 Moody 图上光滑管曲线在非常高但有限的 $Re$ 时的渐近行为。\n\n要看清其实际量级，一个便捷的方法是通过设 $y=1/\\sqrt{f}$ 来重写光滑管方程：\n$$\ny=2\\log_{10}\\!\\left(\\frac{Re}{y}\\right)-0.8 \\quad\\Longleftrightarrow\\quad y+2\\log_{10}(y)=2\\log_{10}(Re)-0.8.\n$$\n对于完全湍流区中较大但符合工程实际的雷诺数，这给出的摩擦因子在 $10^{-2}$ 的数量级，并呈缓慢下降趋势。例如，求解 $y+2\\log_{10}(y)=2\\log_{10}(10^{7})-0.8=13.2$ 会得到 $y\\approx 11.06$，因此 $f \\approx 1/y^2 \\approx 0.0082$。这与 Moody 图上著名的光滑管渐近线相符，在该图中，对于通常遇到的最高雷诺数范围，光滑湍流曲线趋近于一个 $f\\approx 0.008$ 附近的实际下限。\n\n因此，尽管当 $Re\\to\\infty$ 时的理论极限是 $f\\to 0$，但在水力光滑通道中任何湍流条件下，最合理的实际下限估计值约为 $f\\approx 0.008$。在给定的选项中，这对应于选项 A，并排除了在实践中无法达到的 0.0。", "answer": "$$\\boxed{A}$$", "id": "1802764"}, {"introduction": "现实世界中的流体动力学常常涉及不同流动状态之间的转换。本问题提出了一个简化模型，通过计算一个假设的过渡雷诺数 $Re_{\\text{trans}}$，来帮助您理解层流和完全粗糙湍流之间的边界。这项计算将增强您应用支配这两种关键流动状态的独立公式的能力，并理解它们在穆迪图上如何相互关联。[@problem_id:1785497]", "problem": "考虑一个流体动力学情景，涉及一根直径恒定的长直圆形管道。当流动从静止开始并加速时，其由雷诺数（$Re$）和达西摩擦因子（$f$）描述的状态，会在一个概念性的穆迪图上描绘出一条路径。我们将使用一个简化的、分为两部分的框架来模拟这种瞬态行为。\n\n首先，在初始加速阶段，流动是层流。摩擦因子 $f_{\\text{lam}}$ 由充分发展的层流管流关系式决定：\n$$f_{\\text{lam}} = \\frac{64}{Re}$$\n\n其次，当流动加速到足够高的速度时，它会进入一个“完全粗糙”的湍流区。在此区域中，摩擦因子变得与雷诺数无关，仅取决于管道的相对粗糙度 $\\epsilon/D$。这个恒定的摩擦因子 $f_{\\text{rough}}$ 由以下近似表达式给出：\n$$f_{\\text{rough}} = \\left[2.0 \\log_{10}\\left(\\frac{3.7}{\\epsilon/D}\\right)\\right]^{-2}$$\n\n为本题之目的，我们将层流到湍流的转变定义为发生在一个唯一的雷诺数 $Re_{\\text{trans}}$ 处的事件，在该雷诺数下，由层流方程预测的值等于完全粗糙湍流区的值。\n\n对于一个相对粗糙度为 $\\epsilon/D = 0.0050$ 的管道，计算发生这种模型化转变的雷诺数 $Re_{\\text{trans}}$。将您的答案表示为一个无量纲数，并四舍五入到三位有效数字。", "solution": "对于充分发展的管流，层流阶段的达西摩擦因子为 $f_{\\text{lam}} = \\frac{64}{Re}$。在完全粗糙的湍流区，摩擦因子与 $Re$ 无关，由 $f_{\\text{rough}} = \\left[2 \\log_{10}\\left(\\frac{3.7}{\\epsilon/D}\\right)\\right]^{-2}$ 给出。根据题目的定义，当这两者相等时，发生模型化的转变：\n$$\n\\frac{64}{Re_{\\text{trans}}} = \\left[2 \\log_{10}\\left(\\frac{3.7}{\\epsilon/D}\\right)\\right]^{-2}.\n$$\n对 $Re_{\\text{trans}}$ 进行代数求解，得到\n$$\nRe_{\\text{trans}} = 64 \\left[2 \\log_{10}\\left(\\frac{3.7}{\\epsilon/D}\\right)\\right]^{2}.\n$$\n代入 $\\epsilon/D = 0.0050$：\n$$\n\\frac{3.7}{\\epsilon/D} = \\frac{3.7}{0.0050} = 740,\n$$\n所以\n$$\nRe_{\\text{trans}} = 64 \\left[2 \\log_{10}(740)\\right]^{2}.\n$$\n计算对数：\n$$\n\\log_{10}(740) = \\log_{10}(7.4) + 2 \\approx 0.8692317 + 2 = 2.8692317,\n$$\n因此\n$$\n2 \\log_{10}(740) \\approx 5.7384634,\\quad \\left[2 \\log_{10}(740)\\right]^{2} \\approx 32.929969,\n$$\n所以\n$$\nRe_{\\text{trans}} \\approx 64 \\times 32.929969 \\approx 2107.52.\n$$\n四舍五入到三位有效数字，结果是 $2.11 \\times 10^{3}$。", "answer": "$$\\boxed{2.11 \\times 10^{3}}$$", "id": "1785497"}, {"introduction": "虽然穆迪图提供了图形化的解决方案，但现代工程实践常常要求精确的、自动化的计算。本练习将焦点转移到其背后的科尔布鲁克方程 (Colebrook equation)，挑战您以数值方式求解摩擦系数 $f$。通过实现一个计算解决方案，您将获得现代水力分析所必需的实用技能，并亲身体验这个著名的隐式方程在实践中是如何被处理的。[@problem_id:2393395]", "problem": "给定一个用于描述圆管内湍流的隐式 Colebrook 关系式，它定义了 Darcy–Weisbach 摩擦系数 $f$ 如下：\n$$\n\\frac{1}{\\sqrt{f}} \\;=\\; -2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} \\;+\\; \\frac{2.51}{Re\\,\\sqrt{f}}\\right),\n$$\n其中，$\\epsilon/D$ 是相对粗糙度，$Re$ 是雷诺数，$\\log_{10}$ 表示以 10 为底的对数。量 $Re$ 和 $\\epsilon/D$ 均为无量纲。对于每一组指定的参数对 $(Re,\\epsilon/D)$，计算上述方程唯一的正解 $f$。\n\n您的程序必须为以下参数对 $(Re,\\epsilon/D)$ 的测试套件计算 $f$：\n- 情况 1：$(Re,\\epsilon/D) = (100000,\\; 10^{-4})$。\n- 情况 2：$(Re,\\epsilon/D) = (100000,\\; 0)$。\n- 情况 3：$(Re,\\epsilon/D) = (4000,\\; 5\\times 10^{-4})$。\n- 情况 4：$(Re,\\epsilon/D) = (10^{7},\\; 5\\times 10^{-3})$。\n\n要求：\n- 将 $\\log_{10}$ 精确地解释为方程中所写的以 10 为底的对数。\n- 所有输入均为无量纲。答案中无需包含物理单位。\n- 对于每种情况，返回 $f$ 的值，该值应为四舍五入到 $8$ 位小数的实数。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含情况 1 到情况 4 的结果，结果按顺序排列，形式为用方括号括起来的逗号分隔列表，且每个条目都四舍五入到 8 位小数（例如，[$f_1, f_2, f_3, f_4$]，其中 $f_i$ 是十进制数）。", "solution": "对所提出的问题进行验证。\n\n**步骤 1：提取已知条件**\n- **方程**：给定的 Colebrook 关系式为 $\\frac{1}{\\sqrt{f}} = -2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)$。\n- **定义**：$f$ 是 Darcy–Weisbach 摩擦系数，$\\epsilon/D$ 是相对粗糙度，$Re$ 是雷诺数。$\\log_{10}$ 是以 10 为底的对数。\n- **约束条件**：寻求唯一的正解 $f$。\n- **测试用例**：\n    - 情况 1：$(Re, \\epsilon/D) = (100000, 10^{-4})$\n    - 情况 2：$(Re, \\epsilon/D) = (100000, 0)$\n    - 情况 3：$(Re, \\epsilon/D) = (4000, 5 \\times 10^{-4})$\n    - 情况 4：$(Re, \\epsilon/D) = (10^7, 5 \\times 10^{-3})$\n- **输出要求**：每种情况下 $f$ 的值必须四舍五入到 8 位小数。\n\n**步骤 2：使用提取的已知条件进行验证**\n- **科学依据**：Colebrook 方程是流体力学中一个基本的、经过经验验证的关系式，用于确定湍流管流中的摩擦系数。它是水力工程学的基石。给定的雷诺数 ($Re$) 和相对粗糙度 ($\\epsilon/D$) 参数均在物理现实的范围内。$Re \\ge 4000$ 确认了流动处于湍流或过渡到湍流的状态，在该状态下该方程适用。\n- **适定性**：该方程是关于 $f$ 的隐式方程，并且已经数学证明，对于任何正的 $Re$ 和非负的 $\\epsilon/D$，都存在唯一的正解 $f$。因此，该问题是适定的。\n- **客观性**：该问题使用精确的数学和工程术语进行陈述。没有歧义或主观内容。\n\n**步骤 3：结论与行动**\n该问题在科学上是合理的、适定的、客观的和完整的。它是计算工程中的一个标准问题。该问题被判定为**有效**。将提供一个解决方案。\n\nColebrook 方程是一个超越方程，这意味着它无法通过直接代数运算求解摩擦系数 $f$。因此，必须使用数值求根或迭代方法。我们将采用不动点迭代法，该方法对于此特定问题既稳健又高效。\n\n为了应用不动点迭代，我们必须将方程重排为 $f = g(f)$ 的形式。通过将 $f$ 分离到一边，可以得到一个合适的重排形式。首先，我们对初始方程进行求逆：\n$$\n\\sqrt{f} = \\frac{1}{-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)}\n$$\n两边平方，得到所需的不动点形式：\n$$\nf = \\frac{1}{\\left[-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f}}\\right)\\right]^2}\n$$\n这为我们提供了一个迭代方案，其中 $f$ 的下一个近似值 $f_{k+1}$ 由当前近似值 $f_k$ 计算得出：\n$$\nf_{k+1} = g(f_k) = \\frac{1}{\\left[-2\\,\\log_{10}\\!\\left(\\frac{\\epsilon/D}{3.7} + \\frac{2.51}{Re\\,\\sqrt{f_k}}\\right)\\right]^2}\n$$\n对于任何物理上合理的初始猜测 $f_0 > 0$，该迭代保证收敛到唯一的正根。迭代函数 $g(f)$ 的导数 $|g'(f)|$ 在感兴趣的定义域上小于 1，满足压缩映射的收敛条件。\n\n算法如下：\n1.  对于每组给定的 $(Re, \\epsilon/D)$，定义常数 $C_1 = \\frac{\\epsilon/D}{3.7}$ 和 $C_2 = \\frac{2.51}{Re}$。\n2.  迭代函数则为 $f_{k+1} = \\frac{1}{4 \\left[ \\log_{10}(C_1 + C_2/\\sqrt{f_k}) \\right]^2}$。\n3.  为摩擦系数 $f_0$ 选择一个初始猜测值。$f_0 = 0.02$ 是一个常用且有效的起始点，因为它位于 Moody 图上湍流摩擦系数的典型范围内。\n4.  使用 $f_{k+1}$ 的公式进行迭代，直到连续迭代之间的变化可以忽略不计，即 $|f_{k+1} - f_k|  \\tau$，其中 $\\tau$ 是一个很小的容差（例如 $10^{-10}$）。\n5.  然后将最终收敛的值 $f$ 按要求四舍五入到 8 位小数。\n\n该过程将对所提供的四个测试用例中的每一个实施。对于情况 2，其中 $\\epsilon/D = 0$（光滑管道），项 $\\frac{\\epsilon/D}{3.7}$ 变为零，但迭代方案在结构上保持不变。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the Darcy friction factor 'f' using the Colebrook equation\n    via fixed-point iteration for a given set of test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Parameter set 1: Re, epsilon/D)\n        (100000, 1e-4),\n        # (Parameter set 2: Re, epsilon/D)\n        (100000, 0),\n        # (Parameter set 3: Re, epsilon/D)\n        (4000, 5e-4),\n        # (Parameter set 4: Re, epsilon/D)\n        (1e7, 5e-3),\n    ]\n\n    results = []\n    for case in test_cases:\n        Re, rel_roughness = case\n        \n        # Initial guess for the friction factor f.\n        # 0.02 is a standard initial guess for turbulent flow.\n        f = 0.02\n        \n        # Iteration parameters\n        tolerance = 1e-10\n        max_iterations = 100 # Convergence is fast, this is a safeguard.\n\n        for _ in range(max_iterations):\n            f_old = f\n            \n            # The Colebrook equation rearranged for fixed-point iteration:\n            # f = 1 / (-2 * log10( (eps/D)/3.7 + 2.51/(Re*sqrt(f)) ))**2\n            # Define terms for clarity\n            term1 = rel_roughness / 3.7\n            term2 = 2.51 / (Re * np.sqrt(f_old))\n            \n            try:\n                # Handle potential math domain errors if the argument to log10 becomes non-positive,\n                # which can happen with a poor initial guess for exotic parameters.\n                log_arg = term1 + term2\n                if log_arg = 0:\n                    # This case should not be reached with the given valid parameters\n                    # and a positive initial guess.\n                    raise ValueError(\"log argument is non-positive\")\n\n                denominator = -2.0 * np.log10(log_arg)\n                f = 1.0 / (denominator**2)\n\n            except (ValueError, ZeroDivisionError) as e:\n                # If an error occurs, we report it and break.\n                # For this problem set, this block is not expected to be executed.\n                results.append(f\"Error for case {case}: {e}\")\n                break\n\n            # Check for convergence\n            if np.abs(f - f_old)  tolerance:\n                break\n        \n        # After the loop, store the rounded result.\n        # The problem asks for the result to be rounded to 8 decimal places.\n        results.append(f\"{f:.8f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2393395"}]}