{"hands_on_practices": [{"introduction": "应用梅森增益公式需要一种系统性的方法来解构系统的信号流图。第一个练习提供了一个基础性的挑战：为一个具有多条前向通路和相互作用回路的系统，推导出其总体的符号传递函数。成功完成此练习 [@problem_id:1591133] 将巩固您准确识别公式所有组成部分并将其组合成最终表达式的能力。", "problem": "一个线性时不变系统由一个信号流图表示。该图有一个输入信号 $R(s)$ 位于输入节点（标记为节点1），以及一个输出信号 $C(s)$ 位于输出节点（标记为节点6）。除了输入和输出节点外，还有四个中间节点：2、3、4和5。所有信号都是复频域变量 $s$ 的函数。\n\n节点之间的连接由有向支路定义，每条支路都有一个相关的传递函数增益。这些支路及其增益如下：\n- 从节点1到节点2的支路，增益为 $G_1$。\n- 从节点2到节点3的支路，增益为 $G_2$。\n- 从节点3到节点4的支路，增益为 $G_3$。\n- 从节点4到节点6的支路，增益为 $G_4$。\n- 从节点2到节点5的支路，增益为 $G_5$。\n- 从节点5到节点6的支路，增益为 $G_6$。\n- 从节点4到节点3的支路，增益为 $-H_1$。\n- 从节点5到节点5（一个自环路）的支路，增益为 $-H_2$。\n- 从节点4到节点2的支路，增益为 $-H_3$。\n\n确定系统的总传递函数，定义为比率 $T(s) = C(s)/R(s)$。请用符号增益 $G_1, G_2, G_3, G_4, G_5, G_6, H_1, H_2$ 和 $H_3$ 将您的答案表示为单个闭式解析表达式。", "solution": "使用梅森增益公式。从节点1到节点6的前向通路有：\n- 通路 $P_{1}: 1 \\to 2 \\to 3 \\to 4 \\to 6$，其增益为 $P_{1} = G_{1} G_{2} G_{3} G_{4}$。\n- 通路 $P_{2}: 1 \\to 2 \\to 5 \\to 6$，其增益为 $P_{2} = G_{1} G_{5} G_{6}$。\n\n识别单个回路及其增益：\n- $L_{1}: 3 \\to 4 \\to 3$，其增益为 $L_{1} = G_{3} \\cdot (-H_{1}) = - G_{3} H_{1}$。\n- $L_{2}: 5 \\to 5$，其增益为 $L_{2} = - H_{2}$。\n- $L_{3}: 2 \\to 3 \\to 4 \\to 2$，其增益为 $L_{3} = G_{2} G_{3} \\cdot (-H_{3}) = - G_{2} G_{3} H_{3}$。\n\n不接触回路对：\n- $(L_{1}, L_{2})$ 不接触，其乘积为 $L_{1} L_{2} = G_{3} H_{1} H_{2}$。\n- $(L_{2}, L_{3})$ 不接触，其乘积为 $L_{2} L_{3} = G_{2} G_{3} H_{2} H_{3}$。\n不存在三组不接触的回路。\n\n计算行列式：\n$$\\Delta = 1 - (L_{1} + L_{2} + L_{3}) + (L_{1} L_{2} + L_{2} L_{3}) = 1 + G_{3} H_{1} + H_{2} + G_{2} G_{3} H_{3} + G_{3} H_{1} H_{2} + G_{2} G_{3} H_{2} H_{3}.$$\n\n对于 $\\Delta_{k}$，排除与第 $k$ 条前向通路接触的回路。\n- 通路 $P_{1}$ 使用节点 $1,2,3,4,6$。不与 $P_{1}$ 接触的回路：只有 $L_{2}$。因此\n$$\\Delta_{1} = 1 - L_{2} = 1 + H_{2}.$$\n- 通路 $P_{2}$ 使用节点 $1,2,5,6$。不与 $P_{2}$ 接触的回路：只有 $L_{1}$。因此\n$$\\Delta_{2} = 1 - L_{1} = 1 + G_{3} H_{1}.$$\n\n应用梅森公式：\n$$T(s) = \\frac{C(s)}{R(s)} = \\frac{P_{1} \\Delta_{1} + P_{2} \\Delta_{2}}{\\Delta} = \\frac{G_{1} G_{2} G_{3} G_{4} (1 + H_{2}) + G_{1} G_{5} G_{6} (1 + G_{3} H_{1})}{1 + G_{3} H_{1} + H_{2} + G_{2} G_{3} H_{3} + G_{3} H_{1} H_{2} + G_{2} G_{3} H_{2} H_{3}}.$$\n\n这就是用 $G_{1}, G_{2}, G_{3}, G_{4}, G_{5}, G_{6}, H_{1}, H_{2}, H_{3}$ 表示的所求闭式解析表达式。", "answer": "$$\\boxed{\\frac{G_{1}\\!\\left[G_{2} G_{3} G_{4}\\,(1+H_{2})+G_{5} G_{6}\\,(1+G_{3} H_{1})\\right]}{1+G_{3} H_{1}+H_{2}+G_{2} G_{3} H_{3}+G_{3} H_{1} H_{2}+G_{2} G_{3} H_{2} H_{3}}}$$", "id": "1591133"}, {"introduction": "系统理论中的一个关键洞见是，不同的内部结构可以产生相同的输入输出行为。本练习 [@problem_id:1591107] 要求您不仅应用梅森公式计算传递函数，更要将其作为一种分析工具。通过比较两个拓扑结构不同的系统的结果，您将探索功能等效性的概念，并体会到传递函数如何捕捉系统的外部行为，而不论其具体的内部实现方式。", "problem": "考虑两个不同的线性时不变系统，系统 A 和系统 B，它们由各自的信号流图表示。目标是通过比较它们的总传递函数 $T_A(s) = Y_A(s) / U(s)$ 和 $T_B(s) = Y_B(s) / U(s)$ 来判断这两个系统是否功能等效。增益 $a$、$b$ 和 $c$ 是任意的非零常数。\n\n**系统 A：**\n该系统有一个输入节点 $U$、一个输出节点 $Y_A$ 和两个内部节点 $N_1$ 和 $N_2$。信号路径及其对应的增益如下：\n*   从 $U$ 到 $N_1$，增益为 $1$。\n*   从 $N_1$ 到 $N_2$，增益为 $a$。\n*   从 $N_2$ 到 $Y_A$，增益为 $1$。\n*   从 $N_1$ 到 $Y_A$，增益为 $c$。\n*   从 $N_2$ 到 $N_1$，增益为 $b$。\n\n**系统 B：**\n该系统有一个输入节点 $U$、一个输出节点 $Y_B$ 和三个内部节点 $N_3$、$N_4$ 和 $N_5$。信号路径及其对应的增益如下：\n*   从 $U$ 到 $N_3$，增益为 $1$。\n*   从 $N_3$ 到 $N_4$，增益为 $a$。\n*   从 $N_4$ 到 $Y_B$，增益为 $1$。\n*   从 $N_3$ 到 $N_5$，增益为 $c$。\n*   从 $N_5$ 到 $Y_B$，增益为 $1$。\n*   从 $N_4$ 到 $N_3$，增益为 $b$。\n\n使用梅森增益公式，确定系统 A 的传递函数 $T_A(s)$ 与系统 B 的传递函数 $T_B(s)$ 之间的关系。\n\n下列哪个陈述是正确的？\n\nA. $T_A(s) = T_B(s)$\n\nB. $T_A(s) = -T_B(s)$\n\nC. $T_A(s) = \\frac{T_B(s)}{1 - ab}$\n\nD. $T_A(s) = T_B(s)(1 - ab)$\n\nE. $T_A(s) \\left(1 - \\frac{ab}{c}\\right) = T_B(s)$", "solution": "我们分别对每个系统应用梅森增益公式，并比较得到的传递函数。\n\n梅森增益公式指出，对于一个信号流图，其前向路径增益为 $P_{k}$，总行列式为 $\\Delta$，余因子为 $\\Delta_{k}$（通过移除与第 $k$ 条前向路径相接触的回路计算得出），则总传递函数为\n$$\nT = \\frac{\\sum_{k} P_{k} \\Delta_{k}}{\\Delta},\n$$\n其中\n$$\n\\Delta = 1 - \\left(\\text{所有单个回路增益之和}\\right) + \\left(\\text{所有两两不接触回路的增益乘积之和}\\right) - \\cdots .\n$$\n\n系统 A：\n- 从 $U$ 到 $Y_{A}$ 的前向路径：\n  - $P_{1}$: $U \\to N_{1} \\to Y_{A}$，增益为 $c$。\n  - $P_{2}$: $U \\to N_{1} \\to N_{2} \\to Y_{A}$，增益为 $a$。\n- 回路：\n  - $L_{1}$: $N_{1} \\to N_{2} \\to N_{1}$，回路增益为 $ab$。\n- 只有一个回路，因此没有不接触的回路对。所以\n$$\n\\Delta = 1 - ab.\n$$\n- 回路 $L_{1}$ 与两条前向路径都相接触（每条路径都包含 $N_{1}$，且 $L_{1}$ 也包含 $N_{1}$），因此没有不与任一路径接触的回路。因此\n$$\n\\Delta_{1} = 1, \\quad \\Delta_{2} = 1.\n$$\n所以，\n$$\nT_{A}(s) = \\frac{c \\cdot \\Delta_{1} + a \\cdot \\Delta_{2}}{\\Delta} = \\frac{c + a}{1 - ab}.\n$$\n\n系统 B：\n- 从 $U$ 到 $Y_{B}$ 的前向路径：\n  - $P_{1}'$: $U \\to N_{3} \\to N_{4} \\to Y_{B}$，增益为 $a$。\n  - $P_{2}'$: $U \\to N_{3} \\to N_{5} \\to Y_{B}$，增益为 $c$。\n- 回路：\n  - $L_{1}'$: $N_{3} \\to N_{4} \\to N_{3}$，回路增益为 $ab$。\n- 只存在一个回路，所以\n$$\n\\Delta = 1 - ab.\n$$\n- 回路 $L_{1}'$ 与 $P_{1}'$ 相接触（共享 $N_{3}$ 和 $N_{4}$），也与 $P_{2}'$ 相接触（共享 $N_{3}$）。因此对于两条路径，都没有不接触的回路，所以\n$$\n\\Delta_{1}' = 1, \\quad \\Delta_{2}' = 1.\n$$\n所以，\n$$\nT_{B}(s) = \\frac{a \\cdot \\Delta_{1}' + c \\cdot \\Delta_{2}'}{\\Delta} = \\frac{a + c}{1 - ab}.\n$$\n\n比较：\n$$\nT_{A}(s) = \\frac{a + c}{1 - ab} = T_{B}(s).\n$$\n因此，正确的陈述是 $T_{A}(s) = T_{B}(s)$，对应选项 A。", "answer": "$$\\boxed{A}$$", "id": "1591107"}, {"introduction": "当一个人能将一个公式“教给”计算机时，才意味着真正掌握了它。这项高级实践 [@problem_id:2723506] 将您从手动计算提升到算法实现，这是解决复杂、大规模系统的关键一步。您的任务是将梅森公式中的回路查找和行列式计算步骤转化为程序，从而展示您对其底层逻辑的严谨、程序化理解。", "problem": "实现一个程序，针对一个固定的有向信号流图（SFG），计算在传统上归功于 Mason 的路径增益法则中出现的行列式因子 $\\Delta$。该 SFG 的文本定义如下。\n\n节点标记为 $1,2,3,4,5$。有向边及其增益如下：\n- $1 \\to 2$，增益为 $a$，\n- $2 \\to 3$，增益为 $b$，\n- $3 \\to 1$，增益为 $c$，\n- $2 \\to 2$，增益为 $d$（一个自环），\n- $4 \\to 4$，增益为 $e$（一个自环），\n- $5 \\to 5$，增益为 $f$（一个自环）。\n不存在其他边。\n\n仅使用信号流图（SFG）的标准规则：串联连接的增益相乘，并联连接的增益相加，单环反馈在收敛时产生一个几何级数形式的简化。基于这些基本原理，通过系统地考虑所有闭合回路及其相互独立性，可以导出因子 $\\Delta$。你的程序必须：\n- 将 SFG 中所有的回路枚举为闭合有向路径，其中除起始/终止节点外没有节点重复。\n- 枚举所有不接触的回路对和不接触的回路三元组。\n- 通过不接触回路的独立性所蕴含的容斥结构，组合回路增益以精确计算 $\\Delta$。\n- 对于每组参数，仅返回 $\\Delta$ 的数值。\n\n测试套件。对于以下每组参数 $(a,b,c,d,e,f)$，计算 $\\Delta$：\n- 情况 1：$(a,b,c,d,e,f) = (\\,0.5,\\,0.6,\\,0.4,\\,0.2,\\,0.1,\\,0.3\\,)$。\n- 情况 2：$(a,b,c,d,e,f) = (\\,0.8,\\,0.9,\\,0.7,\\,0.0,\\,0.0,\\,0.0\\,)$。\n- 情况 3：$(a,b,c,d,e,f) = (\\,0.2,\\,0.4,\\,0.5,\\,-0.5,\\,0.3,\\,0.25\\,)$。\n- 情况 4：$(a,b,c,d,e,f) = (\\,0.9,\\,1.1,\\,0.95,\\,0.2,\\,0.8,\\,0.7\\,)$。\n- 情况 5：$(a,b,c,d,e,f) = (\\,0.0,\\,0.0,\\,0.0,\\,0.0,\\,0.0,\\,0.0\\,)$。\n\n输出要求：\n- 对于每种情况，将 $\\Delta$ 的值作为实数输出，并精确到 $6$ 位小数。\n- 你的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，例如 $[x_1,x_2,x_3,x_4,x_5]$，其中每个 $x_i$ 是对应情况的舍入值。\n- 不涉及物理单位，因此不应打印任何单位。\n\n你的实现必须是一个完整的、可运行的程序，它不接受任何输入，并打印所要求的单行输出。", "solution": "为了计算图的行列式 $\\Delta$，我们系统地应用梅森增益公式的定义。该公式基于容斥原理构建：\n$$ \\Delta = 1 - (\\text{所有单个回路增益之和}) + (\\text{所有不接触回路对的增益乘积之和}) - (\\text{所有不接触回路三元组的增益乘积之和}) + \\dots $$\n我们可以按照以下步骤进行计算：\n\n**步骤 1: 枚举所有基本回路及其增益**\n我们首先识别图中所有不能再简化的闭合路径：\n-   **回路 $L_1$**: $1 \\to 2 \\to 3 \\to 1$。增益为 $L_1 = abc$。涉及的节点集为 $V_1 = \\{1, 2, 3\\}$。\n-   **回路 $L_2$**: 节点2上的自环 $2 \\to 2$。增益为 $L_2 = d$。涉及的节点集为 $V_2 = \\{2\\}$。\n-   **回路 $L_3$**: 节点4上的自环 $4 \\to 4$。增益为 $L_3 = e$。涉及的节点集为 $V_3 = \\{4\\}$。\n-   **回路 $L_4$**: 节点5上的自环 $5 \\to 5$。增益为 $L_4 = f$。涉及的节点集为 $V_4 = \\{5\\}$。\n\n**步骤 2: 分析回路之间的接触关系**\n如果两个回路不共享任何节点，则它们是不接触的。\n-   $L_1$ 和 $L_2$ 接触，因为它们共享节点2 ($V_1 \\cap V_2 = \\{2\\}$)。\n-   $L_1$ 和 $L_3$ 不接触。\n-   $L_1$ 和 $L_4$ 不接触。\n-   $L_2$ 和 $L_3$ 不接触。\n-   $L_2$ 和 $L_4$ 不接触。\n-   $L_3$ 和 $L_4$ 不接触。\n\n**步骤 3: 利用不接触子图简化计算**\n一个更高效的方法是观察到该信号流图可以分解为三个相互不接触的子图：\n1.  **子图 A**: 由节点 $\\{1, 2, 3\\}$ 构成，包含回路 $L_1$ 和 $L_2$。\n2.  **子图 B**: 由节点 $\\{4\\}$ 构成，包含回路 $L_3$。\n3.  **子图 C**: 由节点 $\\{5\\}$ 构成，包含回路 $L_4$。\n\n对于由多个不接触子图组成的图，其总行列式是各个子图行列式的乘积。\n$$ \\Delta = \\Delta_A \\cdot \\Delta_B \\cdot \\Delta_C $$\n\n**步骤 4: 计算各子图的行列式**\n-   对于子图 A，由于其包含的两个回路 $L_1$ 和 $L_2$ 是接触的，其行列式为：\n    $$ \\Delta_A = 1 - (L_1 + L_2) = 1 - (abc + d) $$\n-   对于子图 B，它只包含一个回路 $L_3$，其行列式为：\n    $$ \\Delta_B = 1 - L_3 = 1 - e $$\n-   对于子图 C，它只包含一个回路 $L_4$，其行列式为：\n    $$ \\Delta_C = 1 - L_4 = 1 - f $$\n\n**步骤 5: 得到最终的行列式表达式**\n将各子图的行列式相乘，我们得到整个图的行列式 $\\Delta$ 的最终表达式：\n$$ \\Delta = \\Delta_A \\cdot \\Delta_B \\cdot \\Delta_C = (1 - abc - d)(1 - e)(1 - f) $$\n\n该程序实现了这个最终公式，为每个给定的参数集 $(a,b,c,d,e,f)$ 计算 $\\Delta$ 的数值，并按要求格式化输出。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the determinant-like factor Delta for a specified Signal Flow Graph (SFG)\n    for several parameter sets, based on Mason's gain formula.\n    \"\"\"\n\n    # Test cases are defined as tuples (a, b, c, d, e, f).\n    test_cases = [\n        (0.5, 0.6, 0.4, 0.2, 0.1, 0.3),    # Case 1\n        (0.8, 0.9, 0.7, 0.0, 0.0, 0.0),    # Case 2\n        (0.2, 0.4, 0.5, -0.5, 0.3, 0.25),  # Case 3\n        (0.9, 1.1, 0.95, 0.2, 0.8, 0.7),   # Case 4\n        (0.0, 0.0, 0.0, 0.0, 0.0, 0.0),    # Case 5\n    ]\n\n    results = []\n    for case in test_cases:\n        a, b, c, d, e, f = case\n\n        # The SFG consists of three non-touching components:\n        # 1. A component with nodes {1, 2, 3} containing two touching loops:\n        #    - A loop 1->2->3->1 with gain L1 = a*b*c\n        #    - A self-loop at node 2 with gain L2 = d\n        #    The determinant of this component is Delta_1 = 1 - (L1 + L2).\n        # 2. A component with node {4} containing a self-loop with gain L3 = e.\n        #    The determinant of this component is Delta_2 = 1 - L3.\n        # 3. A component with node {5} containing a self-loop with gain L4 = f.\n        #    The determinant of this component is Delta_3 = 1 - L4.\n        #\n        # The total determinant Delta is the product of the determinants of the\n        # non-touching components: Delta = Delta_1 * Delta_2 * Delta_3.\n        \n        l1_gain = a * b * c\n        l2_gain = d\n        l3_gain = e\n        l4_gain = f\n\n        delta1 = 1 - (l1_gain + l2_gain)\n        delta2 = 1 - l3_gain\n        delta3 = 1 - l4_gain\n\n        delta_total = delta1 * delta2 * delta3\n\n        # Format the result to exactly 6 decimal places.\n        results.append(f\"{delta_total:.6f}\")\n\n    # Print the final result in the specified format: [x1,x2,x3,x4,x5]\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2723506"}]}