{"hands_on_practices": [{"introduction": "掌握解耦控制的第一步是理解如何设计一个补偿器，以对角化系统的输入输出映射。这个练习 [@problem_id:2699010] 将挑战你更进一步，不止是找到一个可行的解耦器，而是要为一个给定的线性系统确定其*最简形式*。通过计算最小麦克米兰阶数 (minimal McMillan degree)，你将把解耦的抽象目标与控制器复杂度的实际约束联系起来，这是系统理论中的一个基本概念。", "problem": "考虑一个方的、正常的、稳定的线性时不变传递函数矩阵\n$$\nG(s) \\;=\\;\n\\begin{pmatrix}\n\\dfrac{1}{s+1} & \\dfrac{1}{(s+1)^{2}} \\\\\n\\dfrac{1}{(s+3)^{2}} & \\dfrac{1}{s+2}\n\\end{pmatrix}.\n$$\n一个右解耦补偿器是任意一个正常的、稳定的有理矩阵 $R(s)$，使得 $G(s)R(s)$ 为对角矩阵，且其两个对角元素都不恒为零。一个有理矩阵的McMillan阶是实现它的所有实现中的最小状态维数。从正常性、有理传递矩阵的定义以及 $G(s)R(s)$ 的非对角元素恒为零的要求出发，确定任意一个正常的、稳定的右解耦补偿器 $R(s)$ 可能的最小McMillan阶。\n\n以单个整数形式提供您的答案。无需四舍五入，不涉及物理单位。", "solution": "用户希望为给定的传递函数矩阵 $G(s)$ 找到一个正常的、稳定的右解耦补偿器 $R(s)$ 的最小McMillan阶。\n\n首先，我们验证问题陈述。\n已知条件如下：\n$G(s) = \\begin{pmatrix} \\frac{1}{s+1} & \\frac{1}{(s+1)^{2}} \\\\ \\frac{1}{(s+3)^{2}} & \\frac{1}{s+2} \\end{pmatrix}$。\n$R(s)$ 是一个正常的、稳定的有理矩阵。\n$Q(s) = G(s)R(s)$ 是一个对角矩阵，其对角元素不恒为零。\nMcMillan阶是实现的最小状态维数。\n我们必须找到 $R(s)$ 的最小McMillan阶。\n\n该问题是在标准线性多变量控制理论的框架内提出的。给定的矩阵 $G(s)$ 是正常的，因为它的所有元素都是严格正常的。其极点位于 $s=-1$、$s=-2$ 和 $s=-3$，均处于稳定的左半平面。该问题提法得当、客观且有科学依据。我们可以继续求解。\n\n设补偿器为 $R(s) = \\begin{pmatrix} r_{11}(s) & r_{12}(s) \\\\ r_{21}(s) & r_{22}(s) \\end{pmatrix}$。\n$G(s)R(s)$ 为对角矩阵的条件意味着其非对角元素为零。\n$(G(s)R(s))_{12} = g_{11}(s)r_{12}(s) + g_{12}(s)r_{22}(s) = 0$\n$(G(s)R(s))_{21} = g_{21}(s)r_{11}(s) + g_{22}(s)r_{21}(s) = 0$\n\n从结构的角度来看，这两个方程对 $R(s)$ 的列施加了约束：\n1. $R(s)$的第二列 $\\begin{pmatrix} r_{12}(s) \\\\ r_{22}(s) \\end{pmatrix}$ 必须在行向量 $\\begin{pmatrix} g_{11}(s) & g_{12}(s) \\end{pmatrix}$ 的零空间中。\n2. $R(s)$的第一列 $\\begin{pmatrix} r_{11}(s) \\\\ r_{21}(s) \\end{pmatrix}$ 必须在行向量 $\\begin{pmatrix} g_{21}(s) & g_{22}(s) \\end{pmatrix}$ 的零空间中。\n\n让我们分别分析这些约束。\n\n对于 $R(s)$ 的第二列：\n该条件意味着其元素之比必须满足：\n$$\n\\frac{r_{12}(s)}{r_{22}(s)} = -\\frac{g_{12}(s)}{g_{11}(s)} = -\\frac{1/(s+1)^2}{1/(s+1)} = -\\frac{1}{s+1}\n$$\n因此，我们必须有 $r_{22}(s) = -(s+1)r_{12}(s)$。\n或者，我们可以将该列向量表示为零空间基向量的倍数：\n$$\n\\begin{pmatrix} r_{12}(s) \\\\ r_{22}(s) \\end{pmatrix} = k_2(s) \\begin{pmatrix} -g_{12}(s) \\\\ g_{11}(s) \\end{pmatrix} = k_2(s) \\begin{pmatrix} -1/(s+1)^2 \\\\ 1/(s+1) \\end{pmatrix}\n$$\n其中 $k_2(s)$ 是一个任意有理函数。为了使 $r_{12}(s)$ 和 $r_{22}(s)$ 正常，我们必须相应地选择 $k_2(s)$。\n为了使 $r_{12}(s) = -k_2(s)/(s+1)^2$ 正常，我们需要 $k_2(s)$ 的次数不大于2。\n为了使 $r_{22}(s) = k_2(s)/(s+1)$ 正常，我们需要 $k_2(s)$ 的次数不大于1。\n两个条件都必须满足，所以 $k_2(s)$ 必须是一个次数最多为1的多项式。为了最小化补偿器的阶数，我们应该寻求极零点对消。选择 $k_2(s) = c_2(s+1)$ (其中 $c_2$ 是一个非零常数) 似乎是可行的。这得到：\n$r_{12}(s) = -c_2(s+1)/(s+1)^2 = -c_2/(s+1)$。\n$r_{22}(s) = c_2(s+1)/(s+1) = c_2$。\n这个选择产生了一个正常的、稳定的第二列 $\\begin{pmatrix} -c_2/(s+1) \\\\ c_2 \\end{pmatrix}$。该子系统的McMillan阶是极点 $s=-1$ 的阶数，即1。\n\n对于 $R(s)$ 的第一列：\n该条件意味着比值为：\n$$\n\\frac{r_{11}(s)}{r_{21}(s)} = -\\frac{g_{22}(s)}{g_{21}(s)} = -\\frac{1/(s+2)}{1/(s+3)^2} = -\\frac{(s+3)^2}{s+2}\n$$\n和之前一样，我们可以将该列写为：\n$$\n\\begin{pmatrix} r_{11}(s) \\\\ r_{21}(s) \\end{pmatrix} = k_1(s) \\begin{pmatrix} g_{22}(s) \\\\ -g_{21}(s) \\end{pmatrix} = k_1(s) \\begin{pmatrix} 1/(s+2) \\\\ -1/(s+3)^2 \\end{pmatrix}\n$$\n其中 $k_1(s)$ 是一个任意有理函数。为了满足正常性：\n为了使 $r_{11}(s) = k_1(s)/(s+2)$ 正常，我们需要 $k_1(s)$ 的次数不大于1。\n为了使 $r_{21}(s) = -k_1(s)/(s+3)^2$ 正常，我们需要 $k_1(s)$ 的次数不大于2。\n两者都必须满足，所以 $k_1(s)$ 必须是一个次数最多为1的多项式。同样，为了寻求最小实现，我们寻找对消。选择 $k_1(s) = c_1(s+2)$ (其中 $c_1$ 是一个非零常数) 是合适的。这得到：\n$r_{11}(s) = c_1(s+2)/(s+2) = c_1$。\n$r_{21}(s) = -c_1(s+2)/(s+3)^2$。\n这个选择产生了一个正常的、稳定的第一列 $\\begin{pmatrix} c_1 \\\\ -c_1(s+2)/(s+3)^2 \\end{pmatrix}$。该子系统的McMillan阶是极点 $s=-3$ 的阶数，即2。\n\n结合对每一列的最小化选择，我们构造一个候选补偿器 $R(s)$。为简单起见，令 $c_1=1$ 和 $c_2=1$。\n$$\nR(s) = \\begin{pmatrix} 1 & -\\dfrac{1}{s+1} \\\\ -\\dfrac{s+2}{(s+3)^2} & 1 \\end{pmatrix}\n$$\n这个矩阵 $R(s)$ 是正常的、稳定的 (极点在 $s=-1, s=-3$)。我们必须确定它的McMillan阶。McMillan阶是 $R(s)$ 的极点多项式的次数，该多项式是 $R(s)$ 所有子式的分母的最小公倍式 (LCM)，假设所有元素都写成了互质多项式的比值。\n一阶子式就是矩阵的元素本身。它们的分母是 $1$、$s+1$ 和 $(s+3)^2$。这些分母的最小公倍式是 $(s+1)(s+3)^2$。\n二阶子式是行列式：\n$$\n\\det(R(s)) = (1)(1) - \\left(-\\frac{1}{s+1}\\right)\\left(-\\frac{s+2}{(s+3)^2}\\right) = 1 - \\frac{s+2}{(s+1)(s+3)^2}\n$$\n$$\n\\det(R(s)) = \\frac{(s+1)(s+3)^2 - (s+2)}{(s+1)(s+3)^2} = \\frac{(s+1)(s^2+6s+9) - s - 2}{(s+1)(s+3)^2}\n$$\n$$\n\\det(R(s)) = \\frac{s^3+6s^2+9s+s^2+6s+9-s-2}{(s+1)(s+3)^2} = \\frac{s^3+7s^2+14s+7}{(s+1)(s+3)^2}\n$$\n行列式的分母是 $(s+1)(s+3)^2$。\n\n$R(s)$ 的极点多项式是所有子式分母的最小公倍式。在这种情况下，它是 $(s+1)(s+3)^2$。\n这个补偿器的McMillan阶是该多项式的次数，即 $1+2=3$。\n\n总补偿器的最小阶数通常大于或等于每列解耦任务所需的最小阶数之和，特别是当所需的动态特性不同时。第一列需要阶数为2的动态特性 (与 $s=-3$ 处的极点相关)，而第二列需要阶数为1的动态特性 (与 $s=-1$ 处的极点相关)。由于这些动态特性与不同的极点相关联，可以预期完整补偿器的最小阶数将是各个最小阶数之和，即 $2+1=3$。\n既然我们已经构造了一个McMillan阶为3的有效补偿器，并且我们已经论证了阶数必须至少为3，我们得出结论，可能的最小McMillan阶是3。", "answer": "$$\\boxed{3}$$", "id": "2699010"}, {"introduction": "虽然线性系统为解耦提供了一条清晰的路径，但现实世界本质上是非线性的。这个实践 [@problem_id:2698987] 利用微分几何的强大工具，如李导数 (Lie derivatives) 和相对阶 (relative degrees)，将解耦的概念扩展到非线性系统。你将执行输入输出线性化，处理一个导致三角结构的局部解耦情况，并分析对稳定性至关重要的系统内部动态（零动态）。", "problem": "考虑一个控制仿射形式的非线性多输入多输出系统，其状态为 $x \\in \\mathbb{R}^{4}$，输入为 $u = (u_{1},u_{2}) \\in \\mathbb{R}^{2}$，输出为 $y = (y_{1},y_{2}) \\in \\mathbb{R}^{2}$：\n- 状态动力学：\n$$\n\\begin{aligned}\n\\dot{x}_{1} &= x_{2} + x_{1} x_{4},\\\\\n\\dot{x}_{2} &= u_{1} + x_{3},\\\\\n\\dot{x}_{3} &= u_{2},\\\\\n\\dot{x}_{4} &= -x_{1} + x_{2} x_{3} + x_{4}^{3}.\n\\end{aligned}\n$$\n- 输出：\n$$\ny_{1} = x_{1}, \\qquad y_{2} = x_{3}.\n$$\n从李导数、相对阶以及非线性系统输入输出解耦概念的基本定义出发，执行以下任务：\n- 确定与 $(y_{1},y_{2})$ 相关联的相对阶向量 $(r_{1},r_{2})$ 以及相应的解耦矩阵 $A(x)$，其 $(i,j)$ 元由 $L_{g_{j}} L_{f}^{r_{i}-1} h_{i}(x)$ 给出，其中 $h_{1}(x)=x_{1}$ 且 $h_{2}(x)=x_{3}$。\n- 证明该系统可进行部分输入输出线性化，化为具有相对阶向量 $(r_{1},r_{2})$ 和维度为 $n - (r_{1}+r_{2})$ 的内动态的三角形式，其中 $n$ 是状态维数。\n- 选择由\n$$\nz_{1} = y_{1}, \\quad z_{2} = \\dot{y}_{1}, \\quad z_{3} = y_{2}, \\quad \\eta = x_{4},\n$$\n定义的范式坐标 $(z_{1},z_{2},z_{3},\\eta)$ ，并仅使用系统定义和李导数的概念，明确地表达出其动力学。\n- 使用部分解耦所蕴含的输入变换，定义虚拟输入 $v_{1} = \\ddot{y}_{1}$ 和 $v_{2} = \\dot{y}_{2}$，并确定形式为 $u = \\alpha(x) + \\beta(x) v$ 的相应反馈，该反馈可使输入输出映射呈三角形式。\n- 考虑由 $z_{1}=0$、$z_{2}=0$ 和 $z_{3}=0$ 定义的零动态流形，并通过选择 $v_{1}=0$ 和 $v_{2}=0$ 来强制该流形的不变性。计算在状态\n$$\nx = (x_{1},x_{2},x_{3},x_{4}) = (0,0,0,2).\n$$\n处的瞬时内动态速率 $\\dot{\\eta}$。\n以单个实数的形式给出最终答案。无需四舍五入。", "solution": "该问题陈述是非线性控制理论中的一个标准练习，具体涉及输入输出线性化和解耦。它具有科学依据，是适定的、客观且自洽的，提出了一个有效的方程组和一组清晰、可形式化的任务。陈述中没有矛盾、歧义或事实性错误。因此，该问题有效，我们继续进行求解。\n\n系统由状态空间表达式 $\\dot{x} = f(x) + g(x)u$ 给出，其中 $x \\in \\mathbb{R}^{4}$，$u \\in \\mathbb{R}^{2}$，输出为 $y=h(x)$。各个分量明确如下：\n$$\nf(x) = \\begin{pmatrix} x_{2} + x_{1} x_{4} \\\\ x_{3} \\\\ 0 \\\\ -x_{1} + x_{2} x_{3} + x_{4}^{3} \\end{pmatrix}, \\quad g(x) = \\begin{bmatrix} g_{1}(x) & g_{2}(x) \\end{bmatrix} = \\begin{pmatrix} 0 & 0 \\\\ 1 & 0 \\\\ 0 & 1 \\\\ 0 & 0 \\end{pmatrix}\n$$\n输出函数为 $h_{1}(x) = y_{1} = x_{1}$ 和 $h_{2}(x) = y_{2} = x_{3}$。\n\n首先，我们确定相对阶向量 $(r_{1}, r_{2})$。相对阶 $r_{i}$ 是这样一个最小整数：第 $i$ 个输出函数 $h_{i}$ 沿漂移向量场 $f$ 微分 $r_{i}-1$ 次后，其关于至少一个输入向量场 $g_{j}$ 的李导数不为零。也就是说，$L_{g_{j}}L_{f}^{k}h_{i}(x) = 0$ 对所有 $k < r_{i}-1$ 和所有 $j \\in \\{1, 2\\}$ 成立，并且对某个 $j$，$L_{g_{j}}L_{f}^{r_{i}-1}h_{i}(x) \\neq 0$。\n\n对于第一个输出 $h_{1}(x) = x_{1}$：\n在没有控制的情况下，关于 $f$ 的李导数是 $\\dot{y}_{1}$。\n$L_{f}h_{1}(x) = \\nabla h_{1}(x) \\cdot f(x) = \\begin{pmatrix} 1 & 0 & 0 & 0 \\end{pmatrix} f(x) = x_{2} + x_{1} x_{4}$。\n现在，我们计算 $h_{1}(x)$ 关于输入向量场的李导数：\n$L_{g_{1}}h_{1}(x) = \\nabla h_{1}(x) \\cdot g_{1}(x) = \\begin{pmatrix} 1 & 0 & 0 & 0 \\end{pmatrix} g_{1}(x) = 0$。\n$L_{g_{2}}h_{1}(x) = \\nabla h_{1}(x) \\cdot g_{2}(x) = \\begin{pmatrix} 1 & 0 & 0 & 0 \\end{pmatrix} g_{2}(x) = 0$。\n由于两者都为零，相对阶 $r_{1}$ 大于1。我们必须进一步求导。我们计算 $L_{f}h_{1}(x)$ 关于 $g_{j}$ 的李导数：\n$L_{g_{1}}L_{f}h_{1}(x) = \\nabla(L_{f}h_{1}(x)) \\cdot g_{1}(x) = \\nabla(x_{2} + x_{1} x_{4}) \\cdot g_{1}(x) = \\begin{pmatrix} x_{4} & 1 & 0 & x_{1} \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\\\ 0 \\\\ 0 \\end{pmatrix} = 1$。\n由于 $L_{g_{1}}L_{f}^{1}h_{1}(x) = 1 \\neq 0$，第一个输出的相对阶为 $r_{1} = 2$。\n为完整起见，$L_{g_{2}}L_{f}h_{1}(x) = \\begin{pmatrix} x_{4} & 1 & 0 & x_{1} \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\\\ 0 \\end{pmatrix} = 0$。\n\n对于第二个输出 $h_{2}(x) = x_{3}$：\n我们计算关于 $g_{j}$ 的李导数：\n$L_{g_{1}}h_{2}(x) = \\nabla h_{2}(x) \\cdot g_{1}(x) = \\begin{pmatrix} 0 & 0 & 1 & 0 \\end{pmatrix} g_{1}(x) = 0$。\n$L_{g_{2}}h_{2}(x) = \\nabla h_{2}(x) \\cdot g_{2}(x) = \\begin{pmatrix} 0 & 0 & 1 & 0 \\end{pmatrix} g_{2}(x) = 1$。\n由于 $L_{g_{2}}h_{2}(x) \\neq 0$，第二个输出的相对阶为 $r_{2} = 1$。\n因此，相对阶向量为 $(r_{1}, r_{2}) = (2, 1)$。\n\n解耦矩阵 $A(x)$ 由其元素 $A_{ij}(x) = L_{g_{j}} L_{f}^{r_{i}-1} h_{i}(x)$ 定义。\n$A_{11}(x) = L_{g_{1}} L_{f}^{2-1} h_{1}(x) = L_{g_{1}} L_{f} h_{1}(x) = 1$。\n$A_{12}(x) = L_{g_{2}} L_{f}^{2-1} h_{1}(x) = L_{g_{2}} L_{f} h_{1}(x) = 0$。\n$A_{21}(x) = L_{g_{1}} L_{f}^{1-1} h_{2}(x) = L_{g_{1}} h_{2}(x) = 0$。\n$A_{22}(x) = L_{g_{2}} L_{f}^{1-1} h_{2}(x) = L_{g_{2}} h_{2}(x) = 1$。\n因此，解耦矩阵是常数单位矩阵：\n$$\nA(x) = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}\n$$\n系统可进行部分输入输出线性化，因为解耦矩阵 $A(x)$ 对所有 $x$ 都是非奇异的。对角矩阵是三角矩阵的一种特殊情况，因此条件得到满足。总相对阶为 $r_{1} + r_{2} = 2 + 1 = 3$，小于状态维数 $n=4$。这意味着存在维度为 $n - (r_{1}+r_{2}) = 4 - 3 = 1$ 的内动态。\n\n接下来，我们定义范式坐标：\n$z_{1} = y_{1} = h_{1}(x) = x_{1}$。\n$z_{2} = \\dot{y}_{1} = L_{f}h_{1}(x) = x_{2} + x_{1} x_{4}$。\n$z_{3} = y_{2} = h_{2}(x) = x_{3}$。\n$\\eta = x_{4}$。\n坐标变换 $\\Phi(x) = (z_{1}, z_{2}, z_{3}, \\eta)^T$ 的雅可比行列式等于1，使其成为一个全局微分同胚。这些新坐标的动力学通过求导得出：\n$\\dot{z}_{1} = \\frac{d}{dt}(x_{1}) = \\dot{x}_{1} = x_{2} + x_{1} x_{4} = z_{2}$。\n$\\dot{z}_{3} = \\frac{d}{dt}(x_{3}) = \\dot{x}_{3} = u_{2}$。\n$z_{2}$ 的时间导数对应于 $y_1$ 的二阶导数：\n$\\dot{z}_{2} = \\ddot{y}_{1} = L_{f}^{2}h_{1}(x) + L_{g_{1}}L_{f}h_{1}(x) u_{1} + L_{g_{2}}L_{f}h_{1}(x) u_{2}$。\n我们需要计算 $L_{f}^{2}h_{1}(x) = \\nabla(L_{f}h_{1}(x)) \\cdot f(x) = \\begin{pmatrix} x_{4} & 1 & 0 & x_{1} \\end{pmatrix} f(x) = x_{4}(x_{2} + x_{1}x_{4}) + x_{3} + x_{1}(-x_{1} + x_{2}x_{3} + x_{4}^{3}) = x_{2}x_{4} + x_{1}x_{4}^{2} + x_{3} - x_{1}^{2} + x_{1}x_{2}x_{3} + x_{1}x_{4}^{3}$。\n所以，$\\dot{z}_{2} = (x_{2}x_{4} + x_{1}x_{4}^{2} + x_{3} - x_{1}^{2} + x_{1}x_{2}x_{3} + x_{1}x_{4}^{3}) + u_{1}$。\n内状态 $\\eta$ 的动力学为：\n$\\dot{\\eta} = \\dot{x}_{4} = -x_{1} + x_{2}x_{3} + x_{4}^{3}$。\n\n我们现在定义虚拟输入 $v_{1} = \\ddot{y}_{1}$ 和 $v_{2} = \\dot{y}_{2}$。输入输出动力学为：\n$\\ddot{y}_{1} = L_{f}^{2}h_{1}(x) + u_{1}$。\n$\\dot{y}_{2} = L_{f}h_{2}(x) + u_{2} = 0 + u_{2} = u_{2}$。\n令 $\\ddot{y}_{1} = v_{1}$ 和 $\\dot{y}_{2} = v_{2}$ 可得出线性化反馈律。\n$v_{1} = L_{f}^{2}h_{1}(x) + u_{1} \\implies u_{1} = -L_{f}^{2}h_{1}(x) + v_{1}$。\n$v_{2} = u_{2}$。\n对于形式 $u = \\alpha(x) + \\beta(x)v$，我们有：\n$\\alpha(x) = \\begin{pmatrix} -L_{f}^{2}h_{1}(x) \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -(x_{2}x_{4} + x_{1}x_{4}^{2} + x_{3} - x_{1}^{2} + x_{1}x_{2}x_{3} + x_{1}x_{4}^{3}) \\\\ 0 \\end{pmatrix}$\n$\\beta(x) = A(x)^{-1} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}^{-1} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$。\n由于输入变换是对角的（三角形式的一种特例），其三角结构是显而易见的。\n\n最后，我们分析零动态。零动态流形是通过保持输出及其导数为零来定义的：$y_{1}=0$，$\\dot{y}_{1}=0$ 和 $y_{2}=0$。\n$z_{1} = y_{1} = x_{1} = 0$。\n$z_{2} = \\dot{y}_{1} = x_{2} + x_{1}x_{4} = 0$。由于 $x_{1}=0$，我们有 $x_{2}=0$。\n$z_{3} = y_{2} = x_{3} = 0$。\n零动态流形是满足 $x_{1}=x_{2}=x_{3}=0$ 的状态集合。\n为强制该流形的不变性，我们必须将虚拟输入设为零：$v_{1}=0$ 和 $v_{2}=0$。这意味着 $\\ddot{y}_{1}=0$ 和 $\\dot{y}_{2}=0$，从而确保输出保持为零。\n内动态由 $\\eta = x_{4}$ 在该流形上的演化来描述。其控制方程为 $\\dot{\\eta} = \\dot{x}_{4} = -x_{1} + x_{2}x_{3} + x_{4}^{3}$。\n将零动态流形的条件（$x_{1}=0, x_{2}=0, x_{3}=0$）代入此方程，得到零动态：\n$\\dot{\\eta} = -0 + (0)(0) + x_{4}^{3} = x_{4}^{3}$。\n用内坐标 $\\eta$ 表示，即为 $\\dot{\\eta} = \\eta^{3}$。\n\n题目要求我们计算在状态 $x = (0, 0, 0, 2)$ 处的瞬时内动态速率 $\\dot{\\eta}$。该状态位于零动态流形上。在此点，内坐标的值为 $\\eta = x_{4} = 2$。\n将此值代入零动态方程即可得到该速率：\n$\\dot{\\eta} = \\eta^{3} = (2)^{3} = 8$。", "answer": "$$\\boxed{8}$$", "id": "2698987"}, {"introduction": "在实际工程中，理想的解耦往往只是一种奢望，因为性能是一个多方面的权衡。这个计算练习 [@problem_id:2699011] 将你从理论上的纸笔分析带入数值设计的世界，要求你优化一个控制器，使其在解耦性能与高频噪声放大之间取得平衡。通过最小化一个定义好的成本函数 $J_{\\alpha}(\\omega_c)$，你将亲身体验控制系统设计中固有的权衡，并学习使用计算工具寻找实用且平衡的解决方案。", "problem": "设计一个程序，用于评估一个方形、连续时间、线性时不变多变量被控对象，在静态预补偿器后接相同对角一阶回路滤波器的情况下的近似解耦及其相关的性能权衡。该被控对象为双输入双输出。系统采用标准负反馈结构，其中控制输入由 $u=K(r-y)$ 给出，输出为 $y=G(s)u$，其中 $r$ 是参考输入。被控对象传递矩阵 $G(s)$ 是严格真分且稳定的，其每个元素都是形如 $g_{ij}(s)=\\dfrac{k_{ij}}{\\tau_{ij}s+1}$ 的一阶有理函数，其中 $k_{ij}\\in\\mathbb{R}$ 且 $\\tau_{ij}>0$。解耦控制器的构建如下：使用一个静态预补偿器 $W=G(0)^{-1}$ 在稳态下近似反演被控对象，并对每个通道应用相同的对角回路滤波器 $F(s)=\\mathrm{diag}\\!\\left(\\dfrac{\\omega_c}{s+\\omega_c},\\dfrac{\\omega_c}{s+\\omega_c}\\right)$，其中 $\\omega_c>0$ 是可调带宽参数。最终的控制器是 $K(s)=F(s)W$。在单位反馈下，从 $r$ 到 $y$ 的闭环映射为 $T(s)$，由基于 $G(s)$ 和 $K(s)$ 的标准负反馈关系定义。近似解耦质量通过在指定低频频带上 $T(\\mathrm{j}\\omega)$ 的最大非对角幅值来衡量，而性能损失通过在指定高频频带上 $K(\\mathrm{j}\\omega)$ 的高频增益来衡量。需要在 $\\omega_c$ 上最小化的标量化权衡成本为\n$$\nJ_{\\alpha}(\\omega_c)=\\alpha\\,E_{\\mathrm{dec}}(\\omega_c)+(1-\\alpha)\\,E_{\\mathrm{noise}}(\\omega_c),\n$$\n其中 $0<\\alpha<1$。\n\n您的程序必须实现以下精确的定义和计算。\n\n- 低频解耦误差：\n$$\nE_{\\mathrm{dec}}(\\omega_c)=\\max_{\\omega\\in\\Omega_L}\\left\\|\\mathrm{OffDiag}\\!\\left(T(\\mathrm{j}\\omega)\\right)\\right\\|_F,\n$$\n其中 $\\mathrm{OffDiag}(M)$ 是一个与 $M$ 具有相同非对角元素且对角元素为零的矩阵，$\\|\\cdot\\|_F$ 表示 Frobenius 范数。低频网格为 $\\Omega_L=\\{\\omega_{\\ell,m}\\}_{m=1}^{N_L}$，在 $\\omega_{\\ell,\\min}$ 到 $\\omega_{\\ell,\\max}$ 之间对数间隔分布。\n\n- 高频噪声放大代理：\n$$\nE_{\\mathrm{noise}}(\\omega_c)=\\sup_{\\omega\\in\\Omega_H}\\,\\bar{\\sigma}\\!\\left(K(\\mathrm{j}\\omega)\\right),\n$$\n其中 $\\bar{\\sigma}(\\cdot)$ 是最大奇异值，$\\Omega_H=\\{\\omega_{h,m}\\}_{m=1}^{N_H}$ 是在 $\\omega_{h,\\min}$ 到 $\\omega_{h,\\max}$ 之间对数间隔分布的网格。\n\n- 控制器构建细节：\n    - 从 $g_{ij}(s)$ 逐项计算 $G(0)$ 并设置 $W=G(0)^{-1}$。\n    - 对于每个频率 $\\omega$，评估 $G(\\mathrm{j}\\omega)$ 和 $F(\\mathrm{j}\\omega)$，然后计算 $K(\\mathrm{j}\\omega)=F(\\mathrm{j}\\omega)W$。\n    - 闭环映射为 $T(\\mathrm{j}\\omega)=(I+G(\\mathrm{j}\\omega)K(\\mathrm{j}\\omega))^{-1}G(\\mathrm{j}\\omega)K(\\mathrm{j}\\omega)$。\n\n- 控制器带宽优化：\n    - 在网格 $\\Omega_c=\\{\\omega_{c,n}\\}_{n=1}^{N_c}$（在 $\\omega_{c,\\min}$ 和 $\\omega_{c,\\max}$ 之间对数间隔分布）上搜索 $\\omega_c$。\n    - 选择使 $J_{\\alpha}(\\omega_c)$ 最小的 $\\omega_c$；如果在数值容差范围内出现相同值，则选择达到最小值的最小 $\\omega_c$。\n\n所有测试用例使用以下全局固定参数：\n- 权衡权重 $\\alpha=0.6$。\n- 低频频带：$\\omega_{\\ell,\\min}=10^{-3}$ rad/s 和 $\\omega_{\\ell,\\max}=1.0$ rad/s，包含 $N_L=80$ 个对数间隔点。\n- 高频频带：$\\omega_{h,\\min}=20.0$ rad/s 和 $\\omega_{h,\\max}=200.0$ rad/s，包含 $N_H=80$ 个对数间隔点。\n- 控制器带宽搜索：$\\omega_{c,\\min}=0.1$ rad/s 和 $\\omega_{c,\\max}=100.0$ rad/s，包含 $N_c=160$ 个对数间隔点。\n\n测试套件。对于每个测试，被控对象由定义各元素 $g_{ij}(s)=\\dfrac{k_{ij}}{\\tau_{ij}s+1}$ 的矩阵 $K=[k_{ij}]$ 和 $\\Tau=[\\tau_{ij}]$ 指定。\n\n- 测试 1 (具有适度耦合的良态稳态增益):\n    - $K=\\begin{bmatrix}2.0&0.3\\\\0.2&1.2\\end{bmatrix}$,\n      $\\Tau=\\begin{bmatrix}1.0&0.5\\\\0.7&0.8\\end{bmatrix}$。\n\n- 测试 2 (近奇异的稳态增益):\n    - $K=\\begin{bmatrix}1.0&0.95\\\\0.95&0.91\\end{bmatrix}$,\n      $\\Tau=\\begin{bmatrix}0.3&1.2\\\\0.9&0.4\\end{bmatrix}$。\n\n- 测试 3 (混合符号耦合与不同时间常数):\n    - $K=\\begin{bmatrix}1.0&-0.8\\\\0.6&1.1\\end{bmatrix}$,\n      $\\Tau=\\begin{bmatrix}0.5&0.6\\\\0.4&1.5\\end{bmatrix}$。\n\n角度和频率单位必须是弧度/秒。您的程序必须为每个测试计算使 $J_{\\alpha}(\\omega_c)$ 在指定网格上最小化的 $\\omega_c$ 值（单位 rad/s），并报告三个最优 $\\omega_c$ 值。\n\n最终输出格式。您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，每个值四舍五入到六位小数，单位为 rad/s，按测试 $1$, $2$, $3$ 的顺序排列，例如 `[1.234000,5.678000,9.101000]`。", "solution": "所提出的问题是有效的。这是一个在多变量控制理论领域内的适定优化问题，其基础是解耦和性能权衡的既定原则。所有常数、函数和度量指标都经过严格定义，足以得出一个唯一的、可验证的解。我们将着手设计所需的计算程序。\n\n任务是为给定的双输入双输出（TITO）线性时不变（LTI）被控对象，找到最优的控制器带宽 $\\omega_c$，以最小化一个加权成本函数 $J_{\\alpha}(\\omega_c)$，该函数表示低频解耦性能与高频噪声敏感度之间的权衡。\n\n被控对象的传递函数矩阵由 $G(s)$ 给出，其元素为 $g_{ij}(s)=\\dfrac{k_{ij}}{\\tau_{ij}s+1}$。每个测试用例都提供了增益矩阵 $K=[k_{ij}]$ 和时间常数矩阵 $\\Tau=[\\tau_{ij}]$。\n\n控制器 $K(s)$ 由一个静态预补偿器 $W$ 和一个对角滤波器矩阵 $F(s)$ 组成，使得 $K(s) = F(s)W$。\n预补偿器 $W$ 的设计旨在实现完美的稳态解耦。这是通过将 $W$ 设置为被控对象稳态增益矩阵 $G(0)$ 的逆来实现的。由于 $g_{ij}(0) = k_{ij}$，我们有 $G(0) = K$。因此，静态预补偿器为 $W=K^{-1}$。这要求 $K$ 是可逆的，对于所有给定的测试用例，该条件都成立。\n\n滤波器矩阵为 $F(s)=\\mathrm{diag}\\!\\left(\\dfrac{\\omega_c}{s+\\omega_c},\\dfrac{\\omega_c}{s+\\omega_c}\\right) = \\dfrac{\\omega_c}{s+\\omega_c} I$，其中 $I$ 是 $2 \\times 2$ 单位矩阵，$\\omega_c > 0$ 是可调控制器带宽。\n\n待最小化的总成本为 $J_{\\alpha}(\\omega_c)=\\alpha\\,E_{\\mathrm{dec}}(\\omega_c)+(1-\\alpha)\\,E_{\\mathrm{noise}}(\\omega_c)$，其中 $\\alpha=0.6$。优化是通过在 $\\omega_c$ 值的离散网格 $\\Omega_c$ 上进行搜索来执行的。现在我们分析成本函数的两个组成部分。\n\n首先，低频解耦误差 $E_{\\mathrm{dec}}(\\omega_c)$ 定义为：\n$$\nE_{\\mathrm{dec}}(\\omega_c)=\\max_{\\omega\\in\\Omega_L}\\left\\|\\mathrm{OffDiag}\\!\\left(T(\\mathrm{j}\\omega)\\right)\\right\\|_F\n$$\n此处，$T(\\mathrm{j}\\omega)$ 是在频率 $\\omega$ 处评估的闭环传递函数矩阵。它由负反馈系统的标准公式给出：\n$$\nT(s) = (I+L(s))^{-1}L(s)\n$$\n其中 $L(s) = G(s)K(s)$ 是开环传递函数。代入 $G(s)$ 和 $K(s)$ 的表达式，我们对低频网格 $\\Omega_L$ 中的每个 $\\omega$ 在 $s=\\mathrm{j}\\omega$ 处进行求值。对于一个给定矩阵 $M$，$\\mathrm{OffDiag}(M)$ 将对角元素置零，而 $\\|\\cdot\\|_F$ 是 Frobenius 范数，计算为矩阵元素幅值平方和的平方根。$E_{\\mathrm{dec}}(\\omega_c)$ 的计算需要对频率网格 $\\Omega_L$ 进行数值扫描。对于一个 $2 \\times 2$ 矩阵 $T = \\begin{bmatrix} T_{11} & T_{12} \\\\ T_{21} & T_{22} \\end{bmatrix}$，该范数为 $\\sqrt{|T_{12}|^2 + |T_{21}|^2}$。\n\n其次，高频噪声放大代理 $E_{\\mathrm{noise}}(\\omega_c)$ 定义为：\n$$\nE_{\\mathrm{noise}}(\\omega_c)=\\sup_{\\omega\\in\\Omega_H}\\,\\bar{\\sigma}\\!\\left(K(\\mathrm{j}\\omega)\\right)\n$$\n其中 $\\bar{\\sigma}(\\cdot)$ 表示最大奇异值。控制器是 $K(s) = \\left(\\dfrac{\\omega_c}{s+\\omega_c}\\right)W$。在 $s=\\mathrm{j}\\omega$ 处求值，我们得到 $K(\\mathrm{j}\\omega) = \\left(\\dfrac{\\omega_c}{\\mathrm{j}\\omega+\\omega_c}\\right)W$。\n利用奇异值的性质，即对于复数标量 $c$ 和矩阵 $A$，有 $\\bar{\\sigma}(cA) = |c|\\bar{\\sigma}(A)$，我们可以写出：\n$$\n\\bar{\\sigma}(K(\\mathrm{j}\\omega)) = \\left|\\dfrac{\\omega_c}{\\mathrm{j}\\omega+\\omega_c}\\right|\\bar{\\sigma}(W) = \\dfrac{\\omega_c}{\\sqrt{\\omega^2+\\omega_c^2}}\\bar{\\sigma}(W)\n$$\n对于给定的被控对象，项 $\\bar{\\sigma}(W)$ 是一个常数。函数 $f(\\omega) = \\dfrac{\\omega_c}{\\sqrt{\\omega^2+\\omega_c^2}}$ 对于 $\\omega > 0$ 是一个关于 $\\omega$ 的严格递减函数。高频评估频带为 $\\Omega_H = [\\omega_{h,\\min}, \\omega_{h,\\max}]$，其中 $\\omega_{h,min} > 0$。因此，$f(\\omega)$ 在该频带上的上确界出现在其最低频率 $\\omega_{h,min}$ 处。这为 $E_{\\mathrm{noise}}(\\omega_c)$ 提供了一个简化的解析表达式：\n$$\nE_{\\mathrm{noise}}(\\omega_c) = \\dfrac{\\omega_c}{\\sqrt{\\omega_{h,\\min}^2+\\omega_c^2}}\\bar{\\sigma}(W)\n$$\n这一简化避免了对高频网格 $\\Omega_H$ 进行数值扫描，并将在实现中使用。\n\n优化算法如下：\n1. 对于由矩阵 $K$ 和 $\\Tau$ 定义的每个测试用例：\n2. 预先计算静态预补偿器 $W = K^{-1}$ 及其最大奇异值 $\\bar{\\sigma}(W)$。\n3. 遍历指定网格 $\\Omega_c$ 中的每个候选带宽 $\\omega_c$。\n4. 对于每个 $\\omega_c$：\n    a. 使用简化的解析公式计算 $E_{\\mathrm{noise}}(\\omega_c)$。\n    b. 通过遍历网格 $\\Omega_L$ 中的每个频率 $\\omega$，计算 $T(\\mathrm{j}\\omega)$、其非对角 Frobenius 范数，并找到最大值，从而计算出 $E_{\\mathrm{dec}}(\\omega_c)$。\n    c. 计算总成本 $J_{\\alpha}(\\omega_c) = \\alpha E_{\\mathrm{dec}}(\\omega_c) + (1-\\alpha) E_{\\mathrm{noise}}(\\omega_c)$。\n5. 在评估了所有 $\\omega_c \\in \\Omega_c$ 的成本后，找到最小成本值。\n6. 识别产生此最小成本的 $\\omega_c$。如果存在（在数值容差内的）相同值，选择最小的 $\\omega_c$。该值即为此测试用例的解。\n7. 对所有测试用例重复上述步骤，并按规定格式化结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the multivariable controller optimization problem for three test cases.\n    \"\"\"\n    # Globally fixed parameters\n    ALPHA = 0.6\n    OMEGA_L_MIN, OMEGA_L_MAX, N_L = 1e-3, 1.0, 80\n    OMEGA_H_MIN = 20.0  # OMEGA_H_MAX and N_H are not needed due to analytical simplification\n    OMEGA_C_MIN, OMEGA_C_MAX, N_C = 0.1, 100.0, 160\n\n    # Define frequency grids\n    omega_l_grid = np.logspace(np.log10(OMEGA_L_MIN), np.log10(OMEGA_L_MAX), N_L)\n    omega_c_grid = np.logspace(np.log10(OMEGA_C_MIN), np.log10(OMEGA_C_MAX), N_C)\n    \n    # Test suite\n    test_cases = [\n        {\n            \"K\": np.array([[2.0, 0.3], [0.2, 1.2]]),\n            \"Tau\": np.array([[1.0, 0.5], [0.7, 0.8]]),\n        },\n        {\n            \"K\": np.array([[1.0, 0.95], [0.95, 0.91]]),\n            \"Tau\": np.array([[0.3, 1.2], [0.9, 0.4]]),\n        },\n        {\n            \"K\": np.array([[1.0, -0.8], [0.6, 1.1]]),\n            \"Tau\": np.array([[0.5, 0.6], [0.4, 1.5]]),\n        },\n    ]\n\n    optimal_omegas = []\n\n    for case in test_cases:\n        K_plant = case[\"K\"]\n        Tau_plant = case[\"Tau\"]\n\n        # Step 1: Compute static precompensator W and its largest singular value\n        try:\n            W = np.linalg.inv(K_plant)\n        except np.linalg.LinAlgError:\n            # This case should not be reached with the given valid problems\n            # but is good practice.\n            optimal_omegas.append(np.nan)\n            continue\n        \n        s_bar_W = np.linalg.svd(W, compute_uv=False)[0]\n\n        costs = []\n        # Step 2: Iterate through each candidate bandwidth omega_c\n        for omega_c in omega_c_grid:\n            # Step 2a: Calculate E_noise using the analytical simplification\n            e_noise = (omega_c / np.sqrt(omega_c**2 + OMEGA_H_MIN**2)) * s_bar_W\n\n            # Step 2b: Calculate E_dec by sweeping over the low-frequency grid\n            max_off_diag_norm = 0.0\n            for omega in omega_l_grid:\n                s = 1j * omega\n                \n                # Evaluate plant transfer matrix G(s)\n                G_s = K_plant / (Tau_plant * s + 1)\n                \n                # Evaluate controller K(s) and loop gain L(s)\n                f_scalar = omega_c / (s + omega_c)\n                K_s = f_scalar * W\n                L_s = G_s @ K_s\n                \n                # Evaluate closed-loop transfer function T(s)\n                I = np.eye(2)\n                T_s = np.linalg.inv(I + L_s) @ L_s\n                \n                # Calculate Frobenius norm of off-diagonal part\n                off_diag_T = T_s.copy()\n                off_diag_T[0, 0] = 0\n                off_diag_T[1, 1] = 0\n                current_norm = np.linalg.norm(off_diag_T, 'fro')\n                \n                if current_norm > max_off_diag_norm:\n                    max_off_diag_norm = current_norm\n            \n            e_dec = max_off_diag_norm\n            \n            # Step 2c: Compute total cost\n            j_cost = ALPHA * e_dec + (1 - ALPHA) * e_noise\n            costs.append(j_cost)\n\n        # Step 3: Find the optimal omega_c that minimizes the cost\n        costs_arr = np.array(costs)\n        min_cost = np.min(costs_arr)\n        \n        # Find all indices where cost is close to the minimum (handles numerical ties)\n        min_indices = np.where(np.isclose(costs_arr, min_cost))[0]\n        \n        # Per tie-breaking rule, choose the smallest omega_c, which corresponds to the first index\n        optimal_index = min_indices[0]\n        optimal_omega_c = omega_c_grid[optimal_index]\n        \n        optimal_omegas.append(optimal_omega_c)\n\n    # Final formatting and printing\n    formatted_results = [f\"{val:.6f}\" for val in optimal_omegas]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2699011"}]}