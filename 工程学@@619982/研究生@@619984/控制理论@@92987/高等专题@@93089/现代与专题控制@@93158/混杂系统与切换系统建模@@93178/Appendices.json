{"hands_on_practices": [{"introduction": "理解任何动力系统的第一步是能够预测其从给定初始条件开始的演化过程。本练习针对一个简单的混合系统，要求你构造其运动轨迹，即“混合弧”（hybrid arc）。通过这个过程，你将巩固对流集（flow set）$C$、跳变集（jump set）$D$ 以及系统演化规则等核心定义的理解，从而建立起对离散跳变与连续流如何相互作用的直观认识。[@problem_id:2712014]", "problem": "考虑一个混合包含，其流集为 $C=\\{x\\in\\mathbb{R}:\\,x>0\\}$，流映射为 $F(x)=-x$，跳跃集为 $D=\\{x\\in\\mathbb{R}:\\,x\\le 0\\}$，跳跃映射为 $G(x)=1$。混合轨迹 $x:\\operatorname{dom}x\\to\\mathbb{R}$ 是一个混合弧，其混合时间域为 $\\operatorname{dom}x\\subset\\mathbb{R}_{\\ge 0}\\times\\mathbb{N}$，并满足标准混合系统公理：当 $(t,j)$ 和 $(t+\\tau,j)$（对于某个 $\\tau>0$）属于 $\\operatorname{dom}x$ 时, $x(\\cdot,j)$ 在 $[t,t+\\tau]$ 上是绝对连续的, 对于该区间内几乎所有的 $t$, 都有 $x(t,j)\\in C$，并且几乎处处有 $\\dot{x}(t,j)=F(x(t,j))$；当 $(t,j)$ 和 $(t,j+1)$ 属于 $\\operatorname{dom}x$ 时, 则 $x(t,j)\\in D$ 且 $x(t,j+1)\\in G(x(t,j))$。\n\n从初始条件 $x(0,0)=1$ 出发，构建最大混合时间域以及相应的最大混合解。然后，给出混合轨迹在其流区间上作为连续时间变量的函数的显式闭式表达式。你的最终答案必须是 $x(t,0)$ 关于 $t$ 的解析表达式（无需单位）。", "solution": "分析始于给定的初始条件 $x(0,0)=1$。混合系统的行为（是流还是跳跃）由状态相对于流集 $C = \\{x \\in \\mathbb{R} : x > 0\\}$ 和跳跃集 $D = \\{x \\in \\mathbb{R} : x \\le 0\\}$ 的位置决定。在初始混合时间 $(t,j) = (0,0)$ 时，状态为 $x(0,0)=1$。由于 $1 > 0$，状态位于流集 $C$ 中。因此，系统动力学必须遵循流映射 $F(x) = -x$。\n\n在流期间，状态的演化由常微分方程 $\\dot{x}(t,0) = F(x(t,0))$ 描述，即 $\\dot{x} = -x$。这是一个一阶线性齐次常系数微分方程。其通解为 $x(t) = K \\exp(-t)$，其中 $K$ 是一个积分常数。为求得此轨迹段的特解，我们应用流开始时的初始条件 $x(0,0) = 1$。将 $t=0$ 和 $x=1$ 代入通解，得到 $1 = K \\exp(-0)$，化简后得 $K=1$。因此，从 $(0,0)$ 开始的流的状态轨迹由表达式 $x(t,0) = \\exp(-t)$ 给出。\n\n只要状态 $x(t,0)$ 保持在流集 $C$ 中，即只要条件 $x(t,0) > 0$ 满足，这种流就会持续。我们考察当 $t \\ge 0$ 时表达式 $x(t,0) = \\exp(-t)$ 的情况。指数函数 $\\exp(-t)$ 对于所有有限的实数 $t$ 都是严格为正的。随着 $t$ 从 0 开始增加， $x(t,0)$ 的值从 $x(0,0)=1$ 开始单调递减，并在 $t \\to \\infty$ 时趋近于 0。状态在有限时间内永远不会达到小于或等于 0 的值。\n\n只有当状态进入跳跃集 $D$ 时才会触发跳跃。由于对于所有 $t \\in [0, \\infty)$，都有 $x(t,0)$ 保持在 $C$ 中，所以跳跃条件 $x(t,j) \\in D$ 永远不会被满足。因此，不会发生跳跃，离散索引 $j$ 保持在其初始值 0 不变。\n\n最大解是不能再被延拓的解。在本例中，轨迹在所有连续时间 $t \\ge 0$ 内都处于流状态，从未触发跳跃。因此，这个最大解的混合时间域是 $\\operatorname{dom}x = [0, \\infty) \\times \\{0\\}$。由于该域的连续分量是无界的，因此该解是“完备的”，故而是最大的。相应的最大混合解是由 $x(t,0) = \\exp(-t)$ 定义的函数 $x: \\operatorname{dom}x \\to \\mathbb{R}$。\n\n问题要求给出该轨迹 $x(t,0)$ 作为连续时间变量 $t$ 的函数的解析表达式。根据以上推导，这个表达式是 $\\exp(-t)$。", "answer": "$$\\boxed{\\exp(-t)}$$", "id": "2712014"}, {"introduction": "除了追踪单一轨迹，我们更关心系统从任意初始点出发的长期行为，即稳定性。对于切换系统，一个强有力的方法是寻找一个“公共二次李雅普诺夫函数”（Common Quadratic Lyapunov Function, CQLF），它能保证系统在任意切换信号下都是稳定的。本练习要求你为一个给定的系统找到这样一个函数，让你通过求解线性矩阵不等式（Linear Matrix Inequalities, LMIs）来具体实践李雅普诺夫稳定性判据。[@problem_id:2712026]", "problem": "考虑一个由微分方程 $\\dot{x}(t)=A_{\\sigma(t)}x(t)$ 定义的连续时间切换线性系统，其中 $x(t)\\in\\mathbb{R}^{2}$，切换信号 $\\sigma(t)$ 在有限索引集 $\\{1,2\\}$ 中取值。模态矩阵为\n$$\nA_{1}=\\begin{bmatrix}-2&0\\\\0&-1\\end{bmatrix},\\qquad A_{2}=\\begin{bmatrix}-1&1\\\\-3&-2\\end{bmatrix}.\n$$\n一个公共二次李雅普诺夫函数 (CQLF) 是形如 $V(x)=x^{\\top}Px$ 的函数，其中 $P\\in\\mathbb{R}^{2\\times 2}$ 是对称矩阵且 $P\\succ 0$，使得对于每个模态 $i\\in\\{1,2\\}$ 和每个非零状态 $x\\in\\mathbb{R}^{2}$，$V(x)$ 沿着轨迹 $\\dot{x}=A_{i}x$ 的导数满足 $\\dot{V}(x)<0$。根据线性系统的标准李雅普诺夫特征，如果对于 $i\\in\\{1,2\\}$ 都有 $A_{i}^{\\top}P+PA_{i}\\prec 0$ 成立，则上述条件可以得到保证。这是一个线性矩阵不等式 (LMI) 的可行性条件。\n\n请仅使用李雅普诺夫函数及其沿系统轨迹导数的基本定义，确定一个满足 $A_{i}^{\\top}P+PA_{i}\\prec 0$ (对于 $i=1,2$) 的显式对称矩阵 $P\\succ 0$。答案应以具有实数元素的精确矩阵形式给出；无需四舍五入。请勿包含任何单位。", "solution": "该问题陈述是切换线性系统稳定性分析中的一个标准、适定的问题。它具有科学依据、内容自洽，且没有任何歧义或矛盾。因此，我们可以开始求解。\n\n目标是找到一个对称正定矩阵 $P \\in \\mathbb{R}^{2\\times 2}$，作为给定切换系统两个模态的公共二次李雅普诺夫函数。这样的矩阵必须满足以下三个条件：\n1. $P = P^{\\top}$ 且 $P \\succ 0$ (对称且正定)。\n2. $A_1^{\\top}P + PA_1 \\prec 0$。\n3. $A_2^{\\top}P + PA_2 \\prec 0$。\n\n设对称矩阵 $P$ 表示为\n$$\nP = \\begin{pmatrix} p_1 & p_2 \\\\ p_2 & p_3 \\end{pmatrix}\n$$\n其中 $p_1, p_2, p_3 \\in \\mathbb{R}$。\n\n第一个条件 $P \\succ 0$ 成立的充要条件是其所有顺序主子式均为正。由此得到不等式：\n$$p_1 > 0$$\n$$p_1 p_3 - p_2^2 > 0$$\n\n第二个条件是针对模态 $i=1$，其中 $A_1 = \\begin{pmatrix} -2 & 0 \\\\ 0 & -1 \\end{pmatrix}$。令 $Q_1 = A_1^{\\top}P + PA_1$。\n$$\nQ_1 = \\begin{pmatrix} -2 & 0 \\\\ 0 & -1 \\end{pmatrix} \\begin{pmatrix} p_1 & p_2 \\\\ p_2 & p_3 \\end{pmatrix} + \\begin{pmatrix} p_1 & p_2 \\\\ p_2 & p_3 \\end{pmatrix} \\begin{pmatrix} -2 & 0 \\\\ 0 & -1 \\end{pmatrix}\n$$\n$$\nQ_1 = \\begin{pmatrix} -2p_1 & -2p_2 \\\\ -p_2 & -p_3 \\end{pmatrix} + \\begin{pmatrix} -2p_1 & -p_2 \\\\ -2p_2 & -p_3 \\end{pmatrix} = \\begin{pmatrix} -4p_1 & -3p_2 \\\\ -3p_2 & -2p_3 \\end{pmatrix}\n$$\n要使 $Q_1 \\prec 0$，矩阵 $-Q_1$ 必须是正定的。\n$$\n-Q_1 = \\begin{pmatrix} 4p_1 & 3p_2 \\\\ 3p_2 & 2p_3 \\end{pmatrix} \\succ 0\n$$\n这给出了不等式：$4p_1 > 0$ (等价于 $p_1 > 0$) 和 $\\det(-Q_1) = 8p_1 p_3 - 9p_2^2 > 0$。\n\n第三个条件是针对模态 $i=2$，其中 $A_2 = \\begin{pmatrix} -1 & 1 \\\\ -3 & -2 \\end{pmatrix}$。令 $Q_2 = A_2^{\\top}P + PA_2$。\n$$\nQ_2 = \\begin{pmatrix} -1 & -3 \\\\ 1 & -2 \\end{pmatrix} \\begin{pmatrix} p_1 & p_2 \\\\ p_2 & p_3 \\end{pmatrix} + \\begin{pmatrix} p_1 & p_2 \\\\ p_2 & p_3 \\end{pmatrix} \\begin{pmatrix} -1 & 1 \\\\ -3 & -2 \\end{pmatrix}\n$$\n$$\nQ_2 = \\begin{pmatrix} -p_1 - 3p_2 & -p_2 - 3p_3 \\\\ p_1 - 2p_2 & p_2 - 2p_3 \\end{pmatrix} + \\begin{pmatrix} -p_1 - 3p_2 & p_1 - 2p_2 \\\\ -p_2 - 3p_3 & p_2 - 2p_3 \\end{pmatrix}\n$$\n$$\nQ_2 = \\begin{pmatrix} -2p_1 - 6p_2 & p_1 - 3p_2 - 3p_3 \\\\ p_1 - 3p_2 - 3p_3 & 2p_2 - 4p_3 \\end{pmatrix}\n$$\n要使 $Q_2 \\prec 0$，矩阵 $-Q_2$ 必须是正定的。条件是其顺序主子式为正：\n$$ -(-2p_1 - 6p_2) = 2p_1 + 6p_2 > 0 $$\n$$ \\det(-Q_2) = (2p_1 + 6p_2)(4p_3 - 2p_2) - (p_1 - 3p_2 - 3p_3)^2 > 0 $$\n注意，$-Q_2$ 的第二个对角元素 $4p_3 - 2p_2$ 也必须为正。\n\n我们必须找到一组满足此不等式组的参数 $(p_1, p_2, p_3)$。为简化对可行解的搜索，我们可以研究一类受限的矩阵。让我们测试对角矩阵 $P$ 的情况，这对应于设置 $p_2=0$。\n在此假设下，不等式组显著简化：\n1. 由 $P \\succ 0$ 得：$p_1 > 0$ 和 $p_1 p_3 > 0$，这意味着 $p_3 > 0$。\n2. 由 $A_1^{\\top}P+PA_1 \\prec 0$ 得：$p_1 > 0$ 和 $8p_1 p_3 > 0$，这已满足。\n3. 由 $A_2^{\\top}P+PA_2 \\prec 0$ 得：\n$$ 2p_1 > 0 $$\n$$ (2p_1)(4p_3) - (p_1 - 3p_3)^2 > 0 $$\n第一部分是多余的。第二个不等式是：\n$$ 8p_1 p_3 - (p_1^2 - 6p_1 p_3 + 9p_3^2) > 0 $$\n$$ -p_1^2 + 14p_1 p_3 - 9p_3^2 > 0 $$\n$$ p_1^2 - 14p_1 p_3 + 9p_3^2 < 0 $$\n因为 $p_3 > 0$，我们可以两边同除以 $p_3^2$ 得到关于比率 $r = p_1/p_3$ 的不等式：\n$$ r^2 - 14r + 9 < 0 $$\n二次方程 $r^2 - 14r + 9 = 0$ 的根是 $r = 7 \\pm 2\\sqrt{10}$。当 $r$ 在这两个根之间时，不等式成立：\n$$ 7 - 2\\sqrt{10} < \\frac{p_1}{p_3} < 7 + 2\\sqrt{10} $$\n数值上，这个范围大约是 $(0.675, 13.325)$。此区间内的任何比率都将产生一个有效的对角解。最简单的选择是 $p_1/p_3 = 1$，这表明可以设定 $p_1 = p_3$。我们选择 $p_1=p_3=1$。这给出了候选矩阵 $P=I$，即 $2 \\times 2$ 的单位矩阵。\n\n现在我们严格验证这个候选解 $P = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$。\n1. $P = I$ 是对称的。它的特征值均为1，因此是正定的。第一个条件满足。\n\n2. 检验 $A_1^{\\top}P + PA_1 \\prec 0$：\n$$ A_1^{\\top}I + IA_1 = A_1^{\\top} + A_1 = \\begin{pmatrix} -2 & 0 \\\\ 0 & -1 \\end{pmatrix} + \\begin{pmatrix} -2 & 0 \\\\ 0 & -1 \\end{pmatrix} = \\begin{pmatrix} -4 & 0 \\\\ 0 & -2 \\end{pmatrix} $$\n这个矩阵是对角矩阵，特征值为-4和-2。由于两者均为负数，该矩阵是负定的。第二个条件满足。\n\n3. 检验 $A_2^{\\top}P + PA_2 \\prec 0$：\n$$ A_2^{\\top}I + IA_2 = A_2^{\\top} + A_2 = \\begin{pmatrix} -1 & -3 \\\\ 1 & -2 \\end{pmatrix} + \\begin{pmatrix} -1 & 1 \\\\ -3 & -2 \\end{pmatrix} = \\begin{pmatrix} -2 & -2 \\\\ -2 & -4 \\end{pmatrix} $$\n为了检验这个矩阵（我们称之为 $Q$）是否是负定的，我们使用西尔维斯特准则检查其顺序主子式，判断 $-Q$ 是否是正定的。\n$$ -Q = \\begin{pmatrix} 2 & 2 \\\\ 2 & 4 \\end{pmatrix} $$\n第一个主子式为 $2 > 0$。\n第二个主子式为 $\\det(-Q) = (2)(4) - (2)(2) = 8 - 4 = 4 > 0$。\n由于所有顺序主子式都为正，所以 $-Q$ 是正定的，这意味着 $Q$ 是负定的。第三个条件满足。\n\n所有所需条件均已满足。因此，$P = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$ 是一个有效的公共二次李雅普诺夫函数矩阵。", "answer": "$$\n\\boxed{\\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}}\n$$", "id": "2712026"}, {"introduction": "虽然公共李雅普诺夫函数的存在性可以保证稳定性，但当它不存在时会发生什么呢？本练习将引导你探索一个著名且至关重要的反例：一个由多个稳定子系统构成的切换系统，在特定的切换策略下却会变得不稳定。通过编写一个简短的程序，你将从计算上验证这一现象，从而更深刻地体会切换系统稳定性的微妙之处，并理解为何需要引入超越公共李雅普诺夫函数理论的分析工具。[@problem_id:2712004]", "problem": "考虑一个定义在 $\\mathbb{R}^2$ 上的连续时间切换线性系统，其由模态族 $\\dot{x}(t) = A_{\\sigma(t)} x(t)$ 给出，其中 $\\sigma(t) \\in \\{1,2\\}$ 是一个分段常数切换信号。对于参数 $L > 0$，定义两个模态矩阵\n$$\nA_1(L) = \\begin{bmatrix} -1 & L \\\\ 0 & -1 \\end{bmatrix}, \\qquad\nA_2(L) = \\begin{bmatrix} -1 & 0 \\\\ L & -1 \\end{bmatrix}.\n$$\n每个 $A_i(L)$ 都是对角线元素为 $-1$ 的上三角或下三角矩阵，因此两者都是 Hurwitz 矩阵（所有特征值都严格位于开左半平面）。\n\n您将分析在模态 1 和 2 之间以固定驻留时间 $\\tau > 0$ 严格交替的周期切换所产生的影响。也就是说，对于 $k \\in \\mathbb{N}$，系统在 $[2k\\tau,(2k+1)\\tau)$ 上使用模态 1，在 $[(2k+1)\\tau,(2k+2)\\tau)$ 上使用模态 2。设 $x(0)=x_0 \\in \\mathbb{R}^2$。仅使用基本定义，即 (i) $\\dot{x} = A x$ 在长度为 $t$ 的时间区间上的解由 $x(t) = \\mathrm{e}^{A t} x(0)$ 给出，以及 (ii) 在相继模态下的演化通过矩阵乘法复合，则在切换瞬间采样的状态满足\n$$\nx(2k\\tau) \\;=\\; \\left(\\mathrm{e}^{A_2(L)\\,\\tau} \\, \\mathrm{e}^{A_1(L)\\,\\tau}\\right)^k \\, x_0 \\;\\triangleq\\; P(L,\\tau)^k \\, x_0,\n$$\n其中 $P(L,\\tau) \\in \\mathbb{R}^{2\\times 2}$ 是单周期状态转移矩阵。方阵 $P$ 的谱半径 $\\rho(P)$ 定义为其特征值绝对值的最大值。如果 $\\rho(P) > 1$，则存在某个初始条件 $x_0 \\neq 0$，使得当 $k \\to \\infty$ 时 $\\lVert P^k x_0 \\rVert_2$ 无界增长；如果 $\\rho(P) < 1$，则对于所有 $x_0$，都有 $\\lVert P^k x_0 \\rVert_2 \\to 0$。\n\n您的任务是构建并论证一个例子，其中每个模态都是独立稳定的 (Hurwitz)，但周期性切换会使系统不稳定。具体来说，您必须：\n\n- 实现一个程序，对于每个给定的参数集 $(L,\\tau,N,x_0)$，该程序执行以下操作：\n  1. 构建 $A_1(L)$ 和 $A_2(L)$。\n  2. 通过检查所有特征值的实部均为负，来验证 $A_1(L)$ 和 $A_2(L)$ 都是 Hurwitz 矩阵。\n  3. 使用矩阵指数构造单周期矩阵 $P(L,\\tau) = \\mathrm{e}^{A_2(L)\\,\\tau} \\, \\mathrm{e}^{A_1(L)\\,\\tau}$。\n  4. 计算谱半径 $\\rho\\!\\left(P(L,\\tau)\\right)$。\n  5. 计算 $N$ 个周期后的增长因子，\n     $$\n     g_N(L,\\tau,x_0) \\;=\\; \\frac{\\left\\lVert P(L,\\tau)^N \\, x_0 \\right\\rVert_2}{\\lVert x_0 \\rVert_2}。\n     $$\n- 使用这些计算结果，通过展示 $\\rho(P)>1$ 和较大的 $g_N$ 值的案例，来论证切换下的不稳定性，尽管两个模态本身都是 Hurwitz 的。解释为什么这种情况必然排除了一个对两个模态都严格递减的公共 Lyapunov 函数的存在。\n\n测试套件。您的程序必须评估以下四个参数集，这些参数集分别测试了一个典型的不稳定案例、一个明确的稳定案例、一个接近边界的案例，以及另一个具有不同初始条件的不稳定案例：\n\n- 案例 1：$L = 100.0$，$\\tau = 0.1$，$N = 5$，$x_0 = \\begin{bmatrix} 1.0 \\\\ 0.0 \\end{bmatrix}$。\n- 案例 2：$L = 1.0$，$\\tau = 0.5$，$N = 20$，$x_0 = \\begin{bmatrix} 1.0 \\\\ 0.0 \\end{bmatrix}$。\n- 案例 3：$L = 2.0$，$\\tau = 0.01$，$N = 1000$，$x_0 = \\begin{bmatrix} 1.0 \\\\ 0.0 \\end{bmatrix}$。\n- 案例 4：$L = 50.0$，$\\tau = 0.05$，$N = 10$，$x_0 = \\begin{bmatrix} 0.3 \\\\ -0.7 \\end{bmatrix}$。\n\n数值规格和输出格式：\n\n- 对于每个案例，按顺序输出一个包含三个条目的列表：一个布尔值（指示 $A_1(L)$ 和 $A_2(L)$ 是否均为 Hurwitz 矩阵）、谱半径 $\\rho(P)$（一个四舍五入到六位小数的浮点数），以及增长因子 $g_N$（一个四舍五入到六位小数的浮点数）。\n- 将所有四个案例的结果汇总到一行中，该行包含一个由四个“每个案例的列表”组成的、用逗号分隔的列表，并用方括号括起来，例如\n$$\n[\\,[\\text{true},\\,1.234000,\\,5.678900],\\,[\\text{true},\\,0.987650,\\,0.123450],\\,[\\text{true},\\,\\dots],\\,[\\text{true},\\,\\dots]\\,].\n$$\n对于布尔值，请使用小写的字面词 true/false。\n- 不涉及物理单位。在您的实现中如果出现任何角度，都应以弧度为单位。您的程序必须是完全自包含的，无需任何输入，并严格按照上述格式打印一行输出。", "solution": "问题陈述已被解析和验证。该问题具有科学依据，内容自洽且提法明确。它展示了切换系统理论领域一个标准的典范例子，该例子表明，一个由各自稳定的线性时不变模态组成的切换系统，可能因特定的切换律而变得不稳定。该问题是有效的，将提供一个解决方案。\n\n分析始于该切换线性系统的两个模态，它们由以下矩阵支配：\n$$\nA_1(L) = \\begin{bmatrix} -1 & L \\\\ 0 & -1 \\end{bmatrix}, \\qquad\nA_2(L) = \\begin{bmatrix} -1 & 0 \\\\ L & -1 \\end{bmatrix}\n$$\n对于某个参数 $L > 0$。两个矩阵都是三角矩阵，因此它们的特征值即为其对角线元素。$A_1(L)$ 和 $A_2(L)$ 的特征值均为 $\\lambda_1 = -1$ 和 $\\lambda_2 = -1$。由于所有特征值的实部都严格为负（$\\mathrm{Re}(\\lambda_i) = -1 < 0$），因此对于任何 $L > 0$ 的选择，这两个矩阵都是 Hurwitz 矩阵。这意味着，如果系统在模态 1 或模态 2 下连续运行，任何轨迹 $x(t)$ 都会收敛到原点，即 $\\lim_{t\\to\\infty} x(t) = 0$。\n\n该问题指定了一个周期性切换信号，每个模态具有固定的驻留时间 $\\tau > 0$。系统在模态 1 下演化时长 $\\tau$，然后是模态 2 演化时长 $\\tau$。这完成了一个周期为 $2\\tau$ 的完整周期。为分析该切换系统的稳定性，我们考察在这样一个周期内的状态演化。线性系统 $\\dot{x} = Ax$ 在时间间隔 $t$ 内的状态转移矩阵是矩阵指数 $\\mathrm{e}^{At}$。周期结束时的状态是通过将每个分段的状态转移进行复合得到的。对于初始状态 $x_0$，第一段（模态 1，时长 $\\tau$）之后的状态是 $x_1 = \\mathrm{e}^{A_1(L)\\tau} x_0$。第二段（模态 2，时长 $\\tau$）之后的状态是 $x_2 = \\mathrm{e}^{A_2(L)\\tau} x_1$。将它们结合起来，一个完整周期内的状态转移由矩阵 $P(L, \\tau)$ 描述：\n$$\nx(2\\tau) = \\left(\\mathrm{e}^{A_2(L)\\tau} \\, \\mathrm{e}^{A_1(L)\\tau}\\right) x(0) \\triangleq P(L,\\tau) x(0)\n$$\n离散时间系统 $x((k+1)2\\tau) = P(L,\\tau) x(k2\\tau)$ 的稳定性由谱半径 $\\rho(P(L,\\tau))$ 决定，即 $P(L,\\tau)$ 特征值绝对值的最大值。如果 $\\rho(P) < 1$，系统是稳定的；如果 $\\rho(P) > 1$，系统是不稳定的。\n\n为计算 $P(L, \\tau)$，我们首先求矩阵指数。矩阵 $A_i(L)$ 的形式为 $A = -\\lambda I + N$，其中 $N$ 是一个幂零矩阵。具体来说，$A_1(L) = -I + N_1$，$N_1 = \\begin{bmatrix} 0 & L \\\\ 0 & 0 \\end{bmatrix}$；$A_2(L) = -I + N_2$，$N_2 = \\begin{bmatrix} 0 & 0 \\\\ L & 0 \\end{bmatrix}$。由于 $-I$ 与任何矩阵都可交换，$\\mathrm{e}^{A\\tau} = \\mathrm{e}^{(-I+N)\\tau} = \\mathrm{e}^{-I\\tau}\\mathrm{e}^{N\\tau} = \\mathrm{e}^{-\\tau}I \\cdot \\mathrm{e}^{N\\tau}$。矩阵 $N_1$ 和 $N_2$ 是 2 阶幂零的，即 $N_1^2 = N_2^2 = 0$。因此，矩阵指数的级数展开会截断：$\\mathrm{e}^{N\\tau} = I + N\\tau + \\frac{(N\\tau)^2}{2!} + \\dots = I + N\\tau$。\n这给出：\n$$\n\\mathrm{e}^{A_1(L)\\tau} = \\mathrm{e}^{-\\tau}(I + N_1\\tau) = \\mathrm{e}^{-\\tau} \\begin{bmatrix} 1 & L\\tau \\\\ 0 & 1 \\end{bmatrix}\n$$\n$$\n\\mathrm{e}^{A_2(L)\\tau} = \\mathrm{e}^{-\\tau}(I + N_2\\tau) = \\mathrm{e}^{-\\tau} \\begin{bmatrix} 1 & 0 \\\\ L\\tau & 1 \\end{bmatrix}\n$$\n现在，我们计算它们的乘积来构造 $P(L,\\tau)$：\n$$\nP(L,\\tau) = \\left(\\mathrm{e}^{-\\tau} \\begin{bmatrix} 1 & 0 \\\\ L\\tau & 1 \\end{bmatrix}\\right) \\left(\\mathrm{e}^{-\\tau} \\begin{bmatrix} 1 & L\\tau \\\\ 0 & 1 \\end{bmatrix}\\right) = \\mathrm{e}^{-2\\tau} \\begin{bmatrix} 1 & L\\tau \\\\ L\\tau & 1 + (L\\tau)^2 \\end{bmatrix}\n$$\n为了找到谱半径，我们计算 $P(L,\\tau)$ 的特征值。令 $s = L\\tau$。特征方程为 $\\det(P - \\lambda I) = 0$。令 $\\mu = \\lambda \\mathrm{e}^{2\\tau}$，则矩阵部分的特征值方程为：\n$$\n\\det \\begin{bmatrix} 1 - \\mu & s \\\\ s & 1+s^2 - \\mu \\end{bmatrix} = (1-\\mu)(1+s^2-\\mu) - s^2 = 0\n$$\n$$\n\\mu^2 - (2+s^2)\\mu + 1 = 0\n$$\n方程的根为 $\\mu_{\\pm} = \\frac{2+s^2 \\pm \\sqrt{(2+s^2)^2-4}}{2} = \\frac{2+s^2 \\pm s\\sqrt{4+s^2}}{2}$。由于 $s=L\\tau > 0$，两个根 $\\mu_{\\pm}$ 都是实数且为正。较大的根是 $\\mu_+$。$P(L,\\tau)$ 的特征值是 $\\lambda_{\\pm} = \\mathrm{e}^{-2\\tau}\\mu_{\\pm}$。谱半径为 $\\rho(P) = \\lambda_+ = \\mathrm{e}^{-2\\tau} \\frac{2+(L\\tau)^2 + L\\tau\\sqrt{4+(L\\tau)^2}}{2}$。\n如果 $\\rho(P) > 1$，则系统不稳定。当乘积 $L\\tau$ 的值足够大时，这个条件可以被满足。例如，如果 $L$ 很大而 $\\tau$ 很小，项 $\\mathrm{e}^{-2\\tau}$ 会接近 1，而涉及 $L\\tau$ 的项可能很大，从而导致 $\\rho(P) > 1$。这表明，即使各个模态都是稳定的，切换系统也可能是不稳定的。从物理上讲，状态向量被交替方向的剪切变换快速“踢”动，导致其范数增长。\n\n这一结果对于公共 Lyapunov 函数的存在性具有深刻的启示。切换系统中的一个关键定理指出，如果存在一个公共二次 Lyapunov 函数 $V(x) = x^T Q x$ (其中 $Q=Q^T \\succ 0$) ，使其时间导数 $\\dot{V}(x) = x^T(A_i^T Q + Q A_i)x$ 对所有模态 $i$ 都是负定的，那么该切换系统在任意切换信号下都是渐近稳定的。存在一个能使系统不稳定的切换信号（本例中为具有特定 $L$ 和 $\\tau$ 的周期信号），这为“对于这对矩阵 $A_1(L)$ 和 $A_2(L)$ 不存在这样的公共 Lyapunov 函数”提供了一个直接的反证法证明。\n\n所提供的程序将为四个测试案例实现上述定义的计算。对于每个案例 $(L,\\tau,N,x_0)$，它将：\n1. 构造矩阵 $A_1(L)$ 和 $A_2(L)$。\n2. 通过计算它们的特征值，在数值上确认它们是 Hurwitz 矩阵。\n3. 使用库函数计算矩阵指数，以构造 $P(L,\\tau) = \\mathrm{e}^{A_2(L)\\tau} \\mathrm{e}^{A_1(L)\\tau}$。\n4. 计算 $P(L,\\tau)$ 的特征值以求得其谱半径 $\\rho(P)$。\n5. 计算增长因子 $g_N = \\lVert P^N x_0 \\rVert_2 / \\lVert x_0 \\rVert_2$。\n这些结果将定量地展示不稳定（案例 1 和 4）和稳定（案例 2 和 3）的情景，从而加强理论分析。", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import expm\n\ndef solve():\n    \"\"\"\n    Analyzes a switched linear system for stability under periodic switching.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (100.0, 0.1, 5, np.array([1.0, 0.0])),\n        (1.0, 0.5, 20, np.array([1.0, 0.0])),\n        (2.0, 0.01, 1000, np.array([1.0, 0.0])),\n        (50.0, 0.05, 10, np.array([0.3, -0.7]))\n    ]\n    \n    results = []\n\n    for L, tau, N, x0 in test_cases:\n        # 1. Construct A1(L) and A2(L).\n        A1 = np.array([[-1.0, L], [0.0, -1.0]])\n        A2 = np.array([[-1.0, 0.0], [L, -1.0]])\n\n        # 2. Verify that both A1 and A2 are Hurwitz.\n        # A matrix is Hurwitz if the real parts of all its eigenvalues are negative.\n        eigvals_A1 = np.linalg.eigvals(A1)\n        eigvals_A2 = np.linalg.eigvals(A2)\n        are_hurwitz = np.all(np.real(eigvals_A1) < 0) and np.all(np.real(eigvals_A2) < 0)\n        \n        # 3. Form the one-cycle matrix P(L,tau).\n        # P = e^(A2*tau) * e^(A1*tau)\n        expm_A1_tau = expm(A1 * tau)\n        expm_A2_tau = expm(A2 * tau)\n        P = expm_A2_tau @ expm_A1_tau\n        \n        # 4. Compute the spectral radius of P.\n        # The spectral radius is the maximum of the absolute values of the eigenvalues.\n        eigvals_P = np.linalg.eigvals(P)\n        spectral_radius = np.max(np.abs(eigvals_P))\n\n        # 5. Compute the growth factor after N cycles.\n        # g_N = || P^N * x0 ||_2 / || x0 ||_2\n        if np.linalg.norm(x0) == 0:\n            growth_factor = 1.0 # By definition or as a special case\n        else:\n            P_N = np.linalg.matrix_power(P, N)\n            x_final = P_N @ x0\n            growth_factor = np.linalg.norm(x_final) / np.linalg.norm(x0)\n\n        # Store the formatted results for this case.\n        # Booleans are output as lowercase 'true'/'false'.\n        # Floats are rounded to six decimal places.\n        case_result = [\n            str(are_hurwitz).lower(),\n            f\"{spectral_radius:.6f}\",\n            f\"{growth_factor:.6f}\"\n        ]\n        results.append(case_result)\n\n    # Format the final output string as a list of lists.\n    # e.g., [[true,1.234000,5.678900],[true,0.987650,0.123450]]\n    output_str = \"[\" + \",\".join([f\"[{','.join(res)}]\" for res in results]) + \"]\"\n    \n    # Print the final output in the exact required format.\n    print(output_str)\n\nsolve()\n```", "id": "2712004"}]}