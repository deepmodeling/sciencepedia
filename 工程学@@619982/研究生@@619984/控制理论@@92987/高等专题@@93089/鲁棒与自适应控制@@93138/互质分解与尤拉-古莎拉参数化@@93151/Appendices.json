{"hands_on_practices": [{"introduction": "控制理论的深刻之处在于它与抽象代数的紧密联系。此练习将回归本源，探讨多项式环中的 Bézout 恒等式如何构成控制器综合的代数基础。通过动手应用欧几里得算法求解一个具体的 Bézout 恒等式，您将建立起抽象代数与构造特定稳定控制器之间的直接联系，从而深刻理解 Youla-Kučera 参数化的核心思想。[@problem_id:2697784]", "problem": "考虑单输入单输出系统 $P(s) = \\dfrac{n(s)}{m(s)}$，其中 $m(s) = s + 1$ 且 $n(s) = s + 2$。在实系数多项式环 $\\mathbb{R}[s]$ 上进行运算。\n\n- 仅使用互质分解和多项式裴蜀恒等式的定义，首先论证 $m(s)$ 和 $n(s)$ 在 $\\mathbb{R}[s]$ 中是右互质的，并且必然存在多项式 $x(s), y(s) \\in \\mathbb{R}[s]$ 使得 $x(s)\\,m(s) + y(s)\\,n(s) = 1$。\n\n- 计算满足恒等式 $x(s)\\,m(s) + y(s)\\,n(s) = 1$ 的具体多项式 $x(s)$ 和 $y(s)$。您的计算必须从第一性原理出发，即通过明确应用欧几里得算法（不使用任何预先记住的快捷公式）。\n\n- 在 Youla-Kučera 参数化的背景下解释计算出的多项式对 $x(s)$和$y(s)$。从右互质分解和内部稳定性条件的定义出发，推理多项式裴蜀对 $(x(s), y(s))$ 的存在性如何反映了当自由参数 $q(s)$（一个稳定的、真有理的实有理函数）被设为 $q(s) = 0$ 时，单输入单输出情况下存在一个特定的稳定化解。清晰地解释将裴蜀恒等式与稳定化控制器族的存在性联系起来的逻辑步骤，并确定对应于 $q(s) = 0$ 的特殊“中心”稳定化选择。\n\n将您的最终答案表示为有序对 $\\big(x(s),\\,y(s)\\big)$。不需要进行数值四舍五入，也不涉及物理单位。", "solution": "在尝试解答之前，将对问题陈述进行验证。\n\n### 步骤 1：提取已知条件\n-   系统传递函数：$P(s) = \\frac{n(s)}{m(s)}$\n-   分母多项式：$m(s) = s + 1$\n-   分子多项式：$n(s) = s + 2$\n-   多项式运算所在的环是实系数多项式环 $\\mathbb{R}[s]$。\n-   任务是：\n    1.  论证 $m(s)$ 和 $n(s)$ 在 $\\mathbb{R}[s]$ 中是右互质的，并且必然存在满足裴蜀恒等式 $x(s)m(s) + y(s)n(s) = 1$ 的多项式 $x(s), y(s) \\in \\mathbb{R}[s]$ 。\n    2.  使用欧几里得算法计算这样一对 $(x(s), y(s))$。\n    3.  在 Youla-Kučera 参数化的背景下解释结果，特别地，将裴蜀对的存在性与 Youla 参数 $q(s)$ 为零时的稳定化控制器联系起来。\n\n### 步骤 2：使用提取的已知条件进行验证\n该问题在控制理论和代数的数学框架内是定义明确的。\n-   **科学依据充分**：该问题涉及互质分解、裴蜀恒等式、欧几里得算法和 Youla-Kučera 参数化，这些都是线性系统理论中标准且基本的概念。系统 $P(s)$ 是一个简单、稳定的一阶系统。该问题在科学上是合理的。\n-   **适定的**：多项式已明确给出，任务陈述清晰，足以确定唯一的行动方案和特定的解决方案。\n-   **客观性**：语言正式，没有主观或含糊的术语。\n\n该问题不违反任何无效性标准。这是代数控制理论中的一个标准练习，它将多项式环结构与稳定化控制器的综合联系起来。其逻辑步骤是自洽的且在数学上是可验证的。\n\n### 步骤 3：结论与行动\n该问题是**有效的**。现在将提供一个完整的、有理有据的解答。\n\n### 解答\n\n按要求分三部分解答此问题。\n\n#### 第 1 部分：互质性及裴蜀恒等式存在性的论证\n\n$\\mathbb{R}[s]$ 中的两个多项式，如果它们的最大公约数（GCD）是一个非零常数，则定义为互质。由于多项式环 $\\mathbb{R}[s]$\n是一个欧几里得整环，我们可以使用欧几里得算法来求 $m(s) = s + 1$ 和 $n(s) = s + 2$ 的最大公约数。该算法包括连续的多项式除法。\n\n我们用次数较高的多项式 $n(s)$ 除以次数较低的多项式 $m(s)$。在这种情况下，两者都是 1 次的，因此选择是任意的。我们用 $n(s)$ 除以 $m(s)$：\n$$\nn(s) = q_1(s) m(s) + r_1(s)\n$$\n$$\ns + 2 = (1)(s + 1) + 1\n$$\n商为 $q_1(s) = 1$，余数为 $r_1(s) = 1$。由于余数是一个非零常数，算法终止。最后的非零余数，在首一化后，即为最大公约数。在这里，最大公约数是 $1$。\n\n由于 $\\text{gcd}(m(s), n(s)) = 1$，多项式 $m(s)$ 和 $n(s)$ 在 $\\mathbb{R}[s]$ 中是互质的。对于像 $\\mathbb{R}[s]$ 这样的交换环，右互质和左互质之间的区别没有实际意义；它们就是互质的。\n\n欧几里得整环的裴蜀恒等式指出，如果 $d(s) = \\text{gcd}(m(s), n(s))$，则在该整环中存在元素 $x(s)$ 和 $y(s)$，使得 $x(s)m(s) + y(s)n(s) = d(s)$。因为我们已经发现 $\\text{gcd}(m(s), n(s)) = 1$，根据该定理直接推断，必然存在多项式 $x(s), y(s) \\in \\mathbb{R}[s]$ 满足以下恒等式：\n$$\nx(s)m(s) + y(s)n(s) = 1\n$$\n这就论证了这样一对 $(x(s), y(s))$ 的存在性。\n\n#### 第 2 部分：计算裴蜀对 $(x(s), y(s))$\n\n为了找到一个具体的多项式对 $(x(s), y(s))$，我们使用扩展欧几里得算法，这涉及到从上面执行的除法步骤向后回溯。\n从除法方程：\n$$\n1 = (s+2) - (1)(s+1)\n$$\n我们重新整理这个方程，使其与 $x(s)m(s) + y(s)n(s) = 1$ 的形式相匹配，即 $x(s)(s+1) + y(s)(s+2) = 1$。\n$$\n(-1)(s+1) + (1)(s+2) = 1\n$$\n通过将其与所需的恒等式进行比较，我们可以确定多项式 $x(s)$ 和 $y(s)$。\n$$\nx(s) = -1\n$$\n$$\ny(s) = 1\n$$\n这给出了具体的多项式对 $(x(s), y(s)) = (-1, 1)$。这些是常数多项式，它们是 $\\mathbb{R}[s]$ 中的元素。\n\n#### 第 3 部分：在 Youla-Kučera 参数化中的解释\n\nYoula-Kučera 参数化给出了能稳定一个给定系统的所有控制器的刻画。对于一个具有多项式互质分解的系统 $P(s) = n(s)/m(s)$，所有稳定化控制器 $C(s) = u(s)/v(s)$ 的集合可以使用一个稳定的、真有理的实有理函数 $q(s)$ 来进行参数化。\n\n在多项式框架下，一种常见的控制器参数化形式为：\n$$\nC(s) = \\frac{u(s)}{v(s)} = \\frac{y(s) + m(s)q(s)}{x(s) - n(s)q(s)}\n$$\n其中 $(x(s), y(s))$ 是裴蜀恒等式 $x(s)m(s) + y(s)n(s) = 1$ 的任意一个特解。\n\n闭环系统的内部稳定性由特征多项式 $m(s)v(s)+n(s)u(s)$ 决定。代入 $u(s)$ 和 $v(s)$，我们得到：$m(x-nq)+n(y+mq) = mx-mnq+ny+nmq = mx+ny = 1$。由于特征多项式恒为1，它没有零点，因此闭环系统对于任何使控制器 $C(s)$ 成为真有理函数的参数 $q(s)$ 都是稳定的。\n\n问题要求解释自由参数 $q(s)$ 被设为 $0$ 的情况。这指定了“中心”控制器 $C_0(s) = y(s)/x(s)$。\n使用我们计算出的最小次数裴蜀对 $(x,y)=(-1,1)$，我们得到 $C_0(s) = 1/(-1) = -1$。这是一个常数增益，但它不是一个严格真有理的控制器，这在许多实际应用中是必需的。\n\n然而，裴蜀对 $(x(s),y(s))$ 的选择不是唯一的。$x(s)m(s) + y(s)n(s) = 1$ 的通解由下式给出：\n$$\nx_k(s) = x(s) - k(s)n(s) = -1 - k(s)(s+2)\n$$\n$$\ny_k(s) = y(s) + k(s)m(s) = 1 + k(s)(s+1)\n$$\n其中 $k(s)$ 是 $\\mathbb{R}[s]$ 中的任意多项式。\n\n要使中心控制器 $C_k(s) = y_k(s)/x_k(s)$ 成为一个真有理控制器，我们需要 $\\deg(y_k) \\le \\deg(x_k)$。如果我们选择 $k(s)=c$ 为一个非零常数，那么：\n$$\nC_c(s) = \\frac{1+c(s+1)}{-1-c(s+2)} = \\frac{cs + (c+1)}{-cs - (2c+1)}\n$$\n只要 $c \\neq 0$，这个控制器就是真有理的。如前所述，闭环稳定性由裴蜀恒等式保证。因此，选择任何非零常数 $c$（例如 $c=0.5$）都会得到一个稳定的、真有理的控制器。\n\n因此，多项式裴蜀恒等式的存在性蕴含了一个解族 $(x_k, y_k)$ 的存在。虽然最小次数解在 $q(s)=0$ 时可能无法得到一个真有理的稳定化控制器，但该族中的其他解（通过选择合适的 $k(s)$ 获得）可以做到。这展示了多项式裴蜀对的存在性如何与一个稳定化控制器的存在性从根本上联系在一起，该控制器可以在适当选择的参数化中被识别为中心选择（$q(s)=0$）。\n\n问题要求从第一性原理计算具体的多项式，这会得到最小次数解。", "answer": "$$\n\\boxed{\\begin{pmatrix} -1 & 1 \\end{pmatrix}}\n$$", "id": "2697784"}, {"introduction": "在掌握了基本的互质分解之后，我们进一步探讨在鲁棒控制中更为强大的一种形式：归一化互质分解。这种分解通过谱分解方法构造，确保分解得到的因子具有类似于“单位能量”的优良特性。本实践将引导您完整地走过谱分解的分析过程，为一个给定的被控对象推导出其归一化互质分解 [@problem_id:2697785]，这是通往现代 $H_{\\infty}$ 控制设计等高级课题的关键一步。", "problem": "考虑单输入单输出传递函数 $P(s) = \\dfrac{s - 1}{s + 2}$，其在虚轴上没有极点。仅使用互质分解和 Youla-Kučera 参数化的基本原理，在实有理、真、稳定传递函数环上，构造 $P(s)$ 的一个归一化右互质分解，步骤如下。\n\n1. 使用标量谱分解方法：对于连续时间实有理函数，定义 para-共轭为 $F^{\\sim}(s) \\triangleq F(-s)$，并找到一个满足 $q(-s) \\, q(s) = \\Phi(s)$ 的稳定、最小相位谱因子 $q(s)$，其中 $\\Phi(s) \\triangleq 1 + P^{\\sim}(s) P(s)$。\n2. 根据此谱因子，定义 $m(s) \\triangleq q(s)^{-1}$ 和 $n(s) \\triangleq q(s)^{-1} P(s)$。\n\n显式推导 $q(s)$，从而获得 $m(s)$ 和 $n(s)$ 的最简闭式表达式。你的最终答案必须是有序对 $\\big(m(s),\\,n(s)\\big)$，并使用 LaTeX 的 pmatrix 约定写成单行形式。无需数值取整，也不涉及任何单位。", "solution": "所述问题具有科学依据、提法明确且客观。它展示了现代控制理论中的一个标准任务，提供了所有必要的定义和清晰的方法论。不存在逻辑矛盾、信息缺失或违反基本原理的情况。因此，我们可以进行严格的推导。\n\n给定的对象传递函数为 $P(s) = \\dfrac{s - 1}{s + 2}$。目标是在实有理、真、稳定传递函数环上找到 $P(s)$ 的一个归一化右互质分解。该分解由有序对 $(n(s), m(s))$ 表示，使得 $P(s) = n(s)m(s)^{-1}$。此过程基于标量谱分解。\n\n首先，我们必须构造函数 $\\Phi(s)$，其定义为 $\\Phi(s) \\triangleq 1 + P^{\\sim}(s) P(s)$。para-共轭 $P^{\\sim}(s)$ 定义为 $P(-s)$。\n对于给定的 $P(s)$，我们有：\n$$\nP^{\\sim}(s) = P(-s) = \\frac{(-s) - 1}{(-s) + 2} = \\frac{-(s + 1)}{-(s - 2)} = \\frac{s + 1}{s - 2}\n$$\n接下来，我们计算乘积 $P^{\\sim}(s) P(s)$：\n$$\nP^{\\sim}(s) P(s) = \\left( \\frac{s + 1}{s - 2} \\right) \\left( \\frac{s - 1}{s + 2} \\right) = \\frac{(s + 1)(s - 1)}{(s - 2)(s + 2)} = \\frac{s^2 - 1}{s^2 - 4}\n$$\n利用这个乘积，我们构造 $\\Phi(s)$：\n$$\n\\Phi(s) = 1 + P^{\\sim}(s) P(s) = 1 + \\frac{s^2 - 1}{s^2 - 4} = \\frac{(s^2 - 4) + (s^2 - 1)}{s^2 - 4} = \\frac{2s^2 - 5}{s^2 - 4}\n$$\n第二步是找到满足关系式 $q(-s) q(s) = \\Phi(s)$ 的稳定、最小相位谱因子 $q(s)$。为此，我们分析 $\\Phi(s)$ 的极点和零点。\n$\\Phi(s)$ 的零点是分子 $2s^2 - 5 = 0$ 的根，即 $s^2 = \\frac{5}{2}$，或 $s = \\pm \\sqrt{\\frac{5}{2}}$。\n$\\Phi(s)$ 的极点是分母 $s^2 - 4 = 0$ 的根，即 $s = \\pm 2$。\n\n要使 $q(s)$ 稳定，其极点必须位于开左半复平面。从 $\\Phi(s)$ 的极点中，我们选择位于 $s = -2$ 的极点。\n要使 $q(s)$ 是最小相位的，其零点也必须位于开左半复平面。从 $\\Phi(s)$ 的零点中，我们选择位于 $s = -\\sqrt{\\frac{5}{2}}$ 的零点。\n\n现在，我们可以通过组合这些分量来构造 $q(s)$。让我们将 $\\Phi(s)$ 写成因式分解的形式：\n$$\n\\Phi(s) = \\frac{2(s^2 - \\frac{5}{2})}{s^2 - 4} = \\frac{2(s - \\sqrt{\\frac{5}{2}})(s + \\sqrt{\\frac{5}{2}})}{(s - 2)(s + 2)}\n$$\n我们假设 $q(s)$ 的形式为 $q(s) = k \\frac{s + \\sqrt{5/2}}{s + 2}$，其中 $k$ 是一个常数。那么 $q(-s) = k \\frac{-s + \\sqrt{5/2}}{-s + 2} = k \\frac{s - \\sqrt{5/2}}{s - 2}$。\n乘积为：\n$$\nq(-s) q(s) = k^2 \\frac{(s - \\sqrt{\\frac{5}{2}})(s + \\sqrt{\\frac{5}{2}})}{(s - 2)(s + 2)} = k^2 \\frac{s^2 - \\frac{5}{2}}{s^2 - 4}\n$$\n将其与 $\\Phi(s) = 2 \\frac{s^2 - \\frac{5}{2}}{s^2 - 4}$ 比较，我们推断出 $k^2 = 2$。我们选择正根，即 $k = \\sqrt{2}$。\n因此，谱因子 $q(s)$ 为：\n$$\nq(s) = \\sqrt{2} \\left( \\frac{s + \\sqrt{\\frac{5}{2}}}{s + 2} \\right) = \\frac{\\sqrt{2} s + \\sqrt{2}\\sqrt{\\frac{5}{2}}}{s + 2} = \\frac{\\sqrt{2}s + \\sqrt{5}}{s + 2}\n$$\n此函数 $q(s)$ 是稳定的（极点在 $s = -2$）且是最小相位的（零点在 $s = -\\sqrt{5/2}$），符合要求。\n\n最后，我们根据给定的定义推导互质因子 $m(s)$ 和 $n(s)$。\n因子 $m(s)$ 被定义为 $q(s)$ 的逆：\n$$\nm(s) \\triangleq q(s)^{-1} = \\left( \\frac{\\sqrt{2}s + \\sqrt{5}}{s + 2} \\right)^{-1} = \\frac{s + 2}{\\sqrt{2}s + \\sqrt{5}}\n$$\n此函数 $m(s)$ 是稳定的，其极点位于 $s = -\\frac{\\sqrt{5}}{\\sqrt{2}} = -\\sqrt{\\frac{5}{2}}$，在左半平面内。它也是真的，因为分子和分母的阶数都为 $1$。\n\n因子 $n(s)$ 被定义为 $q(s)^{-1} P(s)$，等价于 $m(s) P(s)$：\n$$\nn(s) \\triangleq m(s) P(s) = \\left( \\frac{s + 2}{\\sqrt{2}s + \\sqrt{5}} \\right) \\left( \\frac{s - 1}{s + 2} \\right)\n$$\n分子和分母中的 $(s+2)$ 项相消，得到最简表达式：\n$$\nn(s) = \\frac{s - 1}{\\sqrt{2}s + \\sqrt{5}}\n$$\n此函数 $n(s)$ 也是稳定的，其极点与 $m(s)$ 相同，位于 $s = -\\sqrt{\\frac{5}{2}}$。它也是真的，分子和分母的阶数都等于 $1$。\n\n有序对 $(m(s), n(s))$ 构成了归一化右互质分解。互质性由存在稳定、真的函数 $X(s)$ 和 $Y(s)$ 使得 $X(s)n(s) + Y(s)m(s)=1$ 成立来确认，这一点很容易验证。归一化条件 $m^{\\sim}(s)m(s) + n^{\\sim}(s)n(s) = 1$ 根据构造过程是满足的。\n\n所求的表达式为：\n$m(s) = \\frac{s + 2}{\\sqrt{2}s + \\sqrt{5}}$\n$n(s) = \\frac{s - 1}{\\sqrt{2}s + \\sqrt{5}}$", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{s + 2}{\\sqrt{2}s + \\sqrt{5}} & \\frac{s - 1}{\\sqrt{2}s + \\sqrt{5}} \\end{pmatrix}}\n$$", "id": "2697785"}, {"introduction": "理论的价值最终体现在解决实际问题上。本练习将 Youla-Kučera 参数化理论应用于一个经典的控制器设计场景。Youla-Kučera 参数化巧妙地将寻找所有稳定控制器的非凸难题，转化为在一个稳定的自由参数 $Q$ 空间内进行搜索的凸优化问题。通过这个实践，您将学会如何将一个带有灵敏度函数 $S$ 和补灵敏度函数 $T$ 性能约束的控制综合问题，构建为一个关于 Youla 参数 $Q$ 的可行性问题，从而架起理论与计算设计之间的桥梁。[@problem_id:2697790]", "problem": "给定一个由传递函数 $P(s)$ 指定的单输入单输出 (SISO) 严格真有理稳定对象，以及在一组有限的角频率上对灵敏度函数 $S(j\\omega)$ 和互补灵敏度函数 $T(j\\omega)$ 的幅值界限所陈述的设计目标。您的任务是使用互质分解和 Youla-Kučera 参数化，算法化地综合一个稳定的 Youla 参数 $Q(s)$，并验证指定的界限是否可以满足。\n\n基本原理：\n- 设 $P(s)$ 为一个实有理、标量、严格真有理且稳定的传递函数。考虑 $P(s)$ 在实有理稳定传递函数环上的一个双互质分解。\n- Youla-Kučera 参数化通过一个稳定的、真有理的自由设计参数 $Q(s)$ 来刻画所有内部稳定控制器。在此框架中，闭环映射可以表示为 $Q(s)$ 的仿射函数，并且可以通过在稳定的、真有理的 $Q(s)$ 类中进行搜索，来测试 $S(j\\omega)$ 和 $T(j\\omega)$ 幅值界限的可行性。\n\n程序要求：\n- 对象：$P(s) = \\dfrac{1}{s + 1}$。\n- 候选 Youla 参数限制在实有理、严格真有理的一阶族 $Q(s) = \\dfrac{k}{s + q_1}$，其中 $k > 0$ 且 $q_1 > 0$。\n- 使用 Youla-Kučera 参数化将 $S(j\\omega)$ 和 $T(j\\omega)$ 表示为 $P(j\\omega)$ 和 $Q(j\\omega)$ 的函数，然后在下述测试套件中的每个频率上施加幅值约束。\n- 数值角度单位：所有频率 $\\omega$ 的单位均为弧度/秒。不涉及其他物理单位。\n- 您的程序必须在一组有界的参数 $(k, q_1)$ 上进行搜索，并针对每个测试用例确定，是否存在任何属于所限族且能同时满足所有逐频率幅值约束的稳定化 $Q(s)$。\n- 输出规格：对于每个测试用例，输出一个表示可行性的布尔值，即是否存在一个合适的 $Q(s)$。将所有测试用例的结果汇总到单行中，打印为用方括号括起来的逗号分隔列表（例如，“[True,False,True]”）。\n\n测试套件：\n对于每个用例，给定一个频率网格 $\\Omega = [\\omega_1,\\ldots,\\omega_m]$，以及 $S(j\\omega)$ 和 $T(j\\omega)$ 幅值的逐频率上界，由与 $\\Omega$ 长度相同的向量 $b_S$ 和 $b_T$ 表示。\n\n- 用例 1（一般可行性，多频率整形）：\n  - $\\Omega = [0.01, 1.0, 10.0]$ 弧度/秒\n  - $b_S = [0.05, 0.60, 1.00]$\n  - $b_T = [0.98, 0.80, 0.20]$\n\n- 用例 2（可证明不可行的必要条件）：\n  - $\\Omega = [1.0]$ 弧度/秒\n  - $b_S = [0.30]$\n  - $b_T = [0.60]$\n\n- 用例 3（低频紧约束与高频滚降）：\n  - $\\Omega = [0.10, 10.0]$ 弧度/秒\n  - $b_S = [0.35, 1.00]$\n  - $b_T = [0.70, 0.05]$\n\n可行性判定规则：\n- 使用 Youla-Kučera 参数化，根据 $P(j\\omega)$ 和 $Q(j\\omega)$ 计算 $S(j\\omega)$ 和 $T(j\\omega)$，适用于族 $Q(s) = \\dfrac{k}{s + q_1}$，其中 $k > 0$ 且 $q_1 > 0$。\n- 对于一个候选的 $(k,q_1)$，当且仅当对于所有 $\\omega \\in \\Omega$，约束均被满足：\n  - $\\lvert S(j\\omega) \\rvert \\le b_S(\\omega)$，且\n  - $\\lvert T(j\\omega) \\rvert \\le b_T(\\omega)$。\n- 您的程序必须搜索一个有限且明确指定的 $(k,q_1)$ 值网格，如果至少有一个候选值满足该用例的约束，则返回 True；否则返回 False。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含按所提供测试用例（用例 1、用例 2、用例 3）顺序排列的结果，格式为用方括号括起来的逗号分隔列表。例如：“[True,False,True]”。", "solution": "问题陈述已经过严格验证，并被确定为是合理的。它在科学上基于控制理论的原理，特别是 Youla-Kučera 参数化。它是一个适定、客观的问题，并提出了一个清晰、可解决的任务。包含一个可证明不可行的测试用例是评估基本理解的有效方法，并不会使问题无效。我们可以继续。\n\n该问题要求我们确定使用一类特定的控制器来满足一个反馈系统性能指标的可行性。此项任务的理论框架是 Youla-Kučera 参数化，它刻画了能内部稳定给定对象的所有控制器。\n\n对象由稳定、严格真有理的传递函数 $P(s) = \\dfrac{1}{s + 1}$ 给出。对于稳定的对象 $P(s)$，所有能实现内部稳定的控制器可以用一个稳定的、真有理的传递函数 $Q(s)$（即优拉参数）来参数化，使得闭环灵敏度函数 $S(s)$ 和互补灵敏度函数 $T(s)$ 直接由 $Q(s)$ 仿射地给出：\n$$S(s) = 1 - P(s)Q(s)$$\n$$T(s) = P(s)Q(s)$$\n这两个函数之间的一个基本且不可违背的关系是，对于所有 $s$，都有 $S(s) + T(s) = 1$。\n\n候选 Youla 参数被限制在族 $Q(s) = \\dfrac{k}{s + q_1}$ 内，其中 $k > 0$ 且 $q_1 > 0$。这一选择确保了 $Q(s)$ 按要求是稳定且严格真有理的。\n\n我们将 $P(s)$ 和 $Q(s)$ 的表达式代入 $S(s)$ 和 $T(s)$ 的方程中：\n$$T(s) = P(s)Q(s) = \\left(\\frac{1}{s + 1}\\right) \\left(\\frac{k}{s + q_1}\\right) = \\frac{k}{(s+1)(s+q_1)}$$\n$$S(s) = 1 - T(s) = 1 - \\frac{k}{(s+1)(s+q_1)} = \\frac{s^2 + (1+q_1)s + q_1 - k}{(s+1)(s+q_1)}$$\n\n性能指标以在一组离散频率 $\\omega \\in \\Omega$ 上的幅值界限形式给出。为了检查这些指标，我们在 $s=j\\omega$ 处对函数进行求值：\n$$|T(j\\omega)| = \\frac{|k|}{|j\\omega+1||j\\omega+q_1|} = \\frac{k}{\\sqrt{\\omega^2+1}\\sqrt{\\omega^2+q_1^2}}$$\n$$|S(j\\omega)| = \\frac{|(j\\omega)^2 + (1+q_1)j\\omega + q_1 - k|}{|j\\omega+1||j\\omega+q_1|} = \\frac{|(q_1 - k - \\omega^2) + j\\omega(1+q_1)|}{\\sqrt{\\omega^2+1}\\sqrt{\\omega^2+q_1^2}} = \\frac{\\sqrt{(q_1-k-\\omega^2)^2 + \\omega^2(1+q_1)^2}}{\\sqrt{\\omega^2+1}\\sqrt{\\omega^2+q_1^2}}$$\n为了计算效率，我们使用幅值的平方进行计算。约束条件为 $|T(j\\omega)| \\le b_T(\\omega)$ 和 $|S(j\\omega)| \\le b_S(\\omega)$，这等价于：\n$$|T(j\\omega)|^2 = \\frac{k^2}{(\\omega^2+1)(\\omega^2+q_1^2)} \\le b_T^2(\\omega)$$\n$$|S(j\\omega)|^2 = \\frac{(q_1-k-\\omega^2)^2 + \\omega^2(1+q_1)^2}{(\\omega^2+1)(\\omega^2+q_1^2)} \\le b_S^2(\\omega)$$\n对于任一给定的测试用例，如果存在至少一对参数 $(k, q_1)$（其中 $k>0, q_1>0$）能够同时满足所有指定频率 $\\omega \\in \\Omega$ 下的这两个不等式，则解是可行的。\n\n在进行数值搜索之前，我们必须分析基本约束 $S+T=1$。根据三角不等式，有 $|S(j\\omega)| + |T(j\\omega)| \\ge |S(j\\omega) + T(j\\omega)| = |1| = 1$。这意味着，在任何频率 $\\omega$ 下，可行性的一个必要条件是界限必须允许这种情况，即 $b_S(\\omega) + b_T(\\omega) \\ge 1$。让我们检查一下这些测试用例。\n\n- 用例 1：所有频率点都满足 $b_S(\\omega) + b_T(\\omega) \\ge 1$。可行性是可能的。\n  - 在 $\\omega=0.01$ 时：$0.05 + 0.98 = 1.03 \\ge 1$。\n  - 在 $\\omega=1.0$ 时：$0.60 + 0.80 = 1.40 \\ge 1$。\n  - 在 $\\omega=10.0$ 时：$1.00 + 0.20 = 1.20 \\ge 1$。\n\n- 用例 2：在 $\\omega=1.0$ 时，界限为 $b_S(1.0) = 0.30$ 和 $b_T(1.0) = 0.60$。\n  它们的和是 $0.30 + 0.60 = 0.90$。\n  这违反了必要条件，因为 $0.90 < 1$。无论控制器形式如何，都无法在数学上找到任何能同时满足 $|S(j1.0)| \\le 0.30$ 和 $|T(j1.0)| \\le 0.60$ 的控制器。因此，用例 2 无需任何搜索即可证明是不可行的。正确的输出必须是 False。\n\n- 用例 3：所有频率点都满足 $b_S(\\omega) + b_T(\\omega) \\ge 1$。可行性是可能的。\n  - 在 $\\omega=0.10$ 时：$0.35 + 0.70 = 1.05 \\ge 1$。\n  - 在 $\\omega=10.0$ 时：$1.00 + 0.05 = 1.05 \\ge 1$。\n\n对于用例 1 和 3，必须通过数值搜索来确定可行性。我们将构建一个候选 $(k, q_1)$ 值的网格并测试每个点。对于跨越几个数量级的参数，对数网格是合适的。我们为 $k$ 和 $q_1$ 在 $[10^{-2}, 10^3]$ 范围内定义一个搜索网格，每个参数有 $200$ 个点。对于每个测试用例，我们在此网格上构建一个布尔掩码，初始值全为 True。对于每个频率约束，我们更新掩码，将违反约束的元素设置为 False。如果最终掩码中仍有任何元素为 True，则存在一个可行的参数集。该算法将在提供的 Python 环境中实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef check_feasibility(omegas, bS_vals, bT_vals, k_grid, q1_grid):\n    \"\"\"\n    Checks if a feasible (k, q1) pair exists on the given grid.\n\n    This function vectorizes the constraint checking over the entire grid of\n    (k, q1) parameters for each frequency. It maintains a boolean mask\n    `overall_validity` which represents the feasible region in the parameter space.\n    This mask is updated (by logical AND) for each frequency constraint.\n    \"\"\"\n    # Create 2D meshgrid for vectorized calculations\n    k_mesh, q1_mesh = np.meshgrid(k_grid, q1_grid)\n\n    # Initialize a mask representing the feasible region for (k, q1).\n    # Initially, all points on the grid are considered potentially feasible.\n    overall_validity = np.ones_like(k_mesh, dtype=bool)\n\n    # Sequentially apply constraints for each frequency\n    for i in range(len(omegas)):\n        omega = omegas[i]\n        bS_sq = bS_vals[i]**2\n        bT_sq = bT_vals[i]**2\n\n        omega2 = omega**2\n\n        # Basic check for fundamental infeasibility\n        if bS_vals[i] + bT_vals[i]  1.0 - 1e-9: # Add tolerance for float comparison\n            return False\n\n        # Denominator of squared magnitudes of S and T\n        # This term is common to both |S|^2 and |T|^2\n        den_sq = (omega2 + 1.0) * (omega2 + q1_mesh**2)\n\n        # Constraint for T(j*omega): |T|^2 = bT^2\n        T_mag_sq = k_mesh**2 / den_sq\n        T_is_valid = T_mag_sq = bT_sq\n\n        # Constraint for S(j*omega): |S|^2 = bS^2\n        S_num_sq = (q1_mesh - k_mesh - omega2)**2 + omega2 * (1.0 + q1_mesh)**2\n        S_mag_sq = S_num_sq / den_sq\n        S_is_valid = S_mag_sq = bS_sq\n\n        # Update the overall validity mask. A point (k, q1) is only valid\n        # if it satisfies the constraints for ALL frequencies.\n        overall_validity = (T_is_valid  S_is_valid)\n\n    # If any point in the final validity mask is True, a feasible solution exists.\n    return np.any(overall_validity)\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: General feasibility, multi-frequency shaping\n        {'omegas': [0.01, 1.0, 10.0], 'bS': [0.05, 0.60, 1.00], 'bT': [0.98, 0.80, 0.20]},\n        # Case 2: Provably infeasible necessary condition\n        {'omegas': [1.0], 'bS': [0.30], 'bT': [0.60]},\n        # Case 3: Low-frequency tightness with high-frequency roll-off\n        {'omegas': [0.10, 10.0], 'bS': [0.35, 1.00], 'bT': [0.70, 0.05]},\n    ]\n    \n    # Define the search grid for parameters k and q1.\n    # A logarithmic scale is suitable for control parameters.\n    # Grid: k, q1 in [10^-2, 10^3] with 200 points each.\n    k_grid = np.logspace(-2, 3, 200)\n    q1_grid = np.logspace(-2, 3, 200)\n\n    results = []\n    for case in test_cases:\n        # Determine feasibility for the current case.\n        is_feasible = check_feasibility(\n            omegas=case['omegas'],\n            bS_vals=np.array(case['bS']),\n            bT_vals=np.array(case['bT']),\n            k_grid=k_grid,\n            q1_grid=q1_grid\n        )\n        results.append(is_feasible)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2697790"}]}