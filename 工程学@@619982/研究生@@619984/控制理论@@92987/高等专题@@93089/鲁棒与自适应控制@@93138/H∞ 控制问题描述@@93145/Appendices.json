{"hands_on_practices": [{"introduction": "本练习旨在巩固您对标准反馈控制回路中基本传递函数的理解。通过从外部输入（如参考信号 $r$、扰动 $d$ 和噪声 $n$）推导至关键内部信号（输出 $y$ 和控制信号 $u$），您将熟练掌握如何使用灵敏度函数 $S$ 和互补灵敏度函数 $T$ 来表达闭环系统的特性 [@problem_id:2710882]。这项实践对于理解 $H_\\infty$ 混合灵敏度设计中的性能权衡至关重要。", "problem": "考虑一个用于混合灵敏度 $H$-无穷（H$\\infty$）控制综合的标准单输入单输出负反馈结构。连续时间被控对象为 $P(s)$，控制器为 $K(s)$。参考信号 $r$ 与受测量噪声 $n$ 干扰的测量输出 $y$ 进行比较，形成误差 $e$；控制信号为 $u = K(s)\\,e$；并且在被控对象输入端有加性输入扰动 $d$。因此，该互联系统由以下关系式描述：\n- $e = r - (y + n)$,\n- $u = K(s)\\,e$,\n- $y = P(s)\\,(u + d)$.\n\n仅从这些关系式以及灵敏度函数 $S(s)$ 和互补灵敏度函数 $T(s)$ 的定义出发，推导从外源输入 $r$、$d$、$n$ 到被调输出 $y$ 和 $u$ 的六个闭环传递函数，并用 $S(s)$ 和 $T(s)$ 表示你的答案。然后，对于给定的被控对象和控制器：\n$$\nP(s) = \\frac{s + 4}{(s + 2)(s + 3)}, \n\\qquad\nK(s) = 6\\,\\frac{s + 1}{s + 0.5},\n$$\n计算标量\n$$\nJ \\equiv \\left|S(\\mathrm{i}\\,1)\\right|^{2} + \\left|T(\\mathrm{i}\\,1)\\right|^{2} + \\left|K(\\mathrm{i}\\,1)\\,S(\\mathrm{i}\\,1)\\right|^{2},\n$$\n其中 $\\mathrm{i} = \\sqrt{-1}$，频率为 $1$ rad/s。将 $J$ 的最终数值答案四舍五入至四位有效数字。将最终答案表示为一个纯数（无单位）。", "solution": "我们从一个带加性输入扰动和测量噪声的标准负反馈互联系统的基本闭环关系式开始：\n$$\ne = r - (y + n), \\qquad u = K(s)\\,e, \\qquad y = P(s)\\,(u + d).\n$$\n我们消去 $e$ 和 $u$，用 $r$、$d$ 和 $n$ 来表示 $y$。将 $u = K(s)\\,(r - y - n)$ 代入 $y = P(s)\\,(u + d)$ 得到\n$$\ny = P(s)\\,\\big(K(s)\\,(r - y - n) + d\\big) = P(s)K(s)\\,(r - y - n) + P(s)\\,d.\n$$\n整理关于 $y$ 的项得到\n$$\n\\big(1 + P(s)K(s)\\big)\\,y = P(s)K(s)\\,(r - n) + P(s)\\,d.\n$$\n引入单输入单输出系统的灵敏度函数 $S(s)$ 和互补灵敏度函数 $T(s)$：\n$$\nS(s) \\equiv \\frac{1}{1 + P(s)K(s)}, \n\\qquad\nT(s) \\equiv \\frac{P(s)K(s)}{1 + P(s)K(s)}.\n$$\n解出 $y$ 可得\n$$\ny = T(s)\\,(r - n) + S(s)\\,P(s)\\,d,\n$$\n由此立即得到通往输出 $y$ 的三个传递函数：\n$$\nG_{y r}(s) = T(s), \n\\qquad\nG_{y d}(s) = S(s)\\,P(s), \n\\qquad\nG_{y n}(s) = -\\,T(s).\n$$\n接下来，我们用 $r$、$d$ 和 $n$ 来表示 $u$。利用 $u = K(s)\\,(r - y - n)$ 及上述 $y$ 的表达式，\n\n$$\nu \\;=\\; K(s)\\,r \\;-\\; K(s)\\,\\big(T(s)\\,(r - n) + S(s)\\,P(s)\\,d\\big) \\;-\\; K(s)\\,n.\n$$\n\n合并同类项得到\n\n$$\nu \\;=\\; \\big(K(s) - K(s)\\,T(s)\\big)\\,r \\;-\\; K(s)\\,S(s)\\,P(s)\\,d \\;+\\; \\big(K(s)\\,T(s) - K(s)\\big)\\,n.\n$$\n\n利用恒等式 $S(s) + T(s) = 1$ 和关系式 $K(s)\\,S(s)\\,P(s) = \\dfrac{K(s)P(s)}{1 + K(s)P(s)} = T(s)$，我们简化得到\n\n$$\nu \\;=\\; K(s)\\,S(s)\\,r \\;-\\; T(s)\\,d \\;-\\; K(s)\\,S(s)\\,n.\n$$\n\n因此，通往控制输入 $u$ 的三个传递函数为\n\n$$\nG_{u r}(s) = K(s)\\,S(s), \n\\qquad\nG_{u d}(s) = -\\,T(s), \n\\qquad\nG_{u n}(s) = -\\,K(s)\\,S(s).\n$$\n\n这六个映射关系完成了第一部分，它们都用 $S(s)$ 和 $T(s)$ 表示。\n\n现在，针对给定的被控对象和控制器进行计算：\n\n$$\nP(s) = \\frac{s + 4}{(s + 2)(s + 3)}, \n\\qquad\nK(s) = 6\\,\\frac{s + 1}{s + 0.5}.\n$$\n\n定义环路传递函数\n\n$$\nL(s) \\equiv P(s)K(s) = 6\\,\\frac{(s + 4)(s + 1)}{(s + 2)(s + 3)(s + 0.5)}.\n$$\n\n则\n$$\nS(s) = \\frac{1}{1 + L(s)}, \n\\qquad\nT(s) = \\frac{L(s)}{1 + L(s)}.\n$$\n\n我们现在在 $s = \\mathrm{i}\\,1$ 处求值。首先通过代入 $s = \\mathrm{i}$ 计算 $P(\\mathrm{i})$ 和 $K(\\mathrm{i})$：\n\n$$\nP(\\mathrm{i}) = \\frac{\\mathrm{i} + 4}{(\\mathrm{i} + 2)(\\mathrm{i} + 3)}.\n$$\n\n分母为\n$$\n(\\mathrm{i} + 2)(\\mathrm{i} + 3) = (2 + \\mathrm{i})(3 + \\mathrm{i}) = (5 + 5\\,\\mathrm{i}),\n$$\n\n所以\n$$\nP(\\mathrm{i}) = \\frac{4 + \\mathrm{i}}{5 + 5\\,\\mathrm{i}} = \\frac{4 + \\mathrm{i}}{5(1 + \\mathrm{i})}\n= \\frac{0.8 + 0.2\\,\\mathrm{i}}{1 + \\mathrm{i}} \n= \\frac{(0.8 + 0.2\\,\\mathrm{i})(1 - \\mathrm{i})}{2} \n= 0.5 - 0.3\\,\\mathrm{i}.\n$$\n\n接下来，\n$$\nK(\\mathrm{i}) = 6\\,\\frac{1 + \\mathrm{i}}{0.5 + \\mathrm{i}}.\n$$\n\n计算该分数：\n$$\n\\frac{1 + \\mathrm{i}}{0.5 + \\mathrm{i}} = \\frac{(1 + \\mathrm{i})(0.5 - \\mathrm{i})}{(0.5 + \\mathrm{i})(0.5 - \\mathrm{i})}\n= \\frac{1.5 - 0.5\\,\\mathrm{i}}{1.25} = 1.2 - 0.4\\,\\mathrm{i},\n$$\n\n因此\n$$\nK(\\mathrm{i}) = 6\\,(1.2 - 0.4\\,\\mathrm{i}) = 7.2 - 2.4\\,\\mathrm{i}.\n$$\n\n所以，在 $\\mathrm{i}$ 处的环路传递函数值为\n$$\nL(\\mathrm{i}) = P(\\mathrm{i})K(\\mathrm{i}) = (0.5 - 0.3\\,\\mathrm{i})(7.2 - 2.4\\,\\mathrm{i}) = 2.88 - 3.36\\,\\mathrm{i}.\n$$\n\n于是\n$$\n1 + L(\\mathrm{i}) = 3.88 - 3.36\\,\\mathrm{i}.\n$$\n\n在 $\\mathrm{i}$ 处的灵敏度函数值为\n$$\nS(\\mathrm{i}) = \\frac{1}{1 + L(\\mathrm{i})} = \\frac{1}{3.88 - 3.36\\,\\mathrm{i}} \n= \\frac{3.88 + 3.36\\,\\mathrm{i}}{3.88^{2} + 3.36^{2}} \n= \\frac{3.88 + 3.36\\,\\mathrm{i}}{26.344}.\n$$\n\n一个有用的副产品是其幅值平方的精确值\n$$\n\\big|S(\\mathrm{i})\\big|^{2} = \\frac{3.88^{2} + 3.36^{2}}{(3.88^{2} + 3.36^{2})^{2}} = \\frac{1}{26.344}.\n$$\n\n互补灵敏度函数满足 $T(\\mathrm{i}) = L(\\mathrm{i})\\,S(\\mathrm{i})$，所以其幅值平方为\n$$\n\\big|T(\\mathrm{i})\\big|^{2} = \\big|L(\\mathrm{i})\\big|^{2}\\,\\big|S(\\mathrm{i})\\big|^{2}.\n$$\n\n计算所需的幅值平方：\n$$\n\\big|L(\\mathrm{i})\\big|^{2} = 2.88^{2} + 3.36^{2} = 8.2944 + 11.2896 = 19.584,\n$$\n\n$$\n\\big|K(\\mathrm{i})\\big|^{2} = 7.2^{2} + 2.4^{2} = 51.84 + 5.76 = 57.6.\n$$\n\n因此\n$$\n\\big|S(\\mathrm{i})\\big|^{2} = \\frac{1}{26.344}, \n\\qquad\n\\big|T(\\mathrm{i})\\big|^{2} = \\frac{19.584}{26.344}, \n\\qquad\n\\big|K(\\mathrm{i})\\,S(\\mathrm{i})\\big|^{2} = \\frac{57.6}{26.344}.\n$$\n\n所求的标量为\n$$\nJ \\equiv \\big|S(\\mathrm{i})\\big|^{2} + \\big|T(\\mathrm{i})\\big|^{2} + \\big|K(\\mathrm{i})\\,S(\\mathrm{i})\\big|^{2} \n= \\frac{1 + 19.584 + 57.6}{26.344} = \\frac{78.184}{26.344}.\n$$\n\n进行除法运算，\n$$\nJ \\approx 2.9678075\\ldots\n$$\n\n四舍五入至四位有效数字，\n$$\nJ \\approx 2.968.\n$$", "answer": "$$\\boxed{2.968}$$", "id": "2710882"}, {"introduction": "从传递函数和框图转向状态空间表示是现代控制理论的核心步骤，尤其是在使用计算工具进行控制器综合时。本练习将指导您如何将一个带有性能加权滤波器的混合灵敏度问题形式化为一个增广的“广义被控对象”状态空间模型 [@problem_id:2710896]。完成此练习将使您能够为实际的 $H_\\infty$ 控制器设计准备标准输入格式。", "problem": "考虑一个为混合灵敏度 H-无穷 (H$\\infty$) 控制问题构建的连续时间线性时不变 (LTI) 广义对象。该互联系统由一个对象组成，其状态为 $x \\in \\mathbb{R}^{2}$，控制输入为 $u \\in \\mathbb{R}$，测量输出为 $y \\in \\mathbb{R}$，以及外部输入 $w = \\begin{bmatrix} r & d & n \\end{bmatrix}^{\\top} \\in \\mathbb{R}^{3}$，该外部输入汇集了参考信号 $r$、输入扰动 $d$ 和测量噪声 $n$。该对象由下式给出\n\n$$\n\\dot{x} = A x + B_{1} w + B_{2} u, \\quad y = C_{2} x + D_{21} w + D_{22} u,\n$$\n\n其中\n\n$$\nA = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}, \\quad\nB_{1} = \\begin{bmatrix} 0 & 0 & 0 \\\\ 0 & 1 & 0 \\end{bmatrix}, \\quad\nB_{2} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix},\n$$\n\n\n$$\nC_{2} = \\begin{bmatrix} 1 & 0 \\end{bmatrix}, \\quad\nD_{21} = \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix}, \\quad\nD_{22} = 0.\n$$\n\n设混合灵敏度整形滤波器为一阶系统\n\n$$\nW_{1}(s) = k_{1}\\,\\frac{s + z_{1}}{s + p_{1}}, \\quad\nW_{2}(s) = k_{2}\\,\\frac{s + z_{2}}{s + p_{2}}, \\quad\nW_{3}(s) = k_{3}\\,\\frac{s + z_{3}}{s + p_{3}},\n$$\n\n其数值参数为\n\n$$\nk_{1} = 2,\\ z_{1} = 1,\\ p_{1} = 0.1; \\quad\nk_{2} = 0.5,\\ z_{2} = 10,\\ p_{2} = 50; \\quad\nk_{3} = 0.3,\\ z_{3} = 100,\\ p_{3} = 5.\n$$\n\n每个 $W_{i}$ 在状态空间中通过以下规范选择实现\n\n$$\nA_{w_{i}} = -p_{i}, \\quad B_{w_{i}} = 1, \\quad C_{w_{i}} = k_{i}(z_{i} - p_{i}), \\quad D_{w_{i}} = k_{i},\n$$\n\n使得加权性能输出为\n\n$$\nz_{1} = W_{1}(s)\\,e, \\quad e := r - y; \\qquad\nz_{2} = W_{2}(s)\\,u; \\qquad\nz_{3} = W_{3}(s)\\,y.\n$$\n\n构建增广广义对象，其状态向量为 $x_{a} = \\begin{bmatrix} x^{\\top} & x_{1} & x_{2} & x_{3} \\end{bmatrix}^{\\top}$，其中 $x_{i}$ 是 $W_{i}$ 的状态。在标准混合灵敏度公式中，性能输出堆叠为 $z = \\begin{bmatrix} z_{1} \\\\ z_{2} \\\\ z_{3} \\end{bmatrix}$ 并满足\n\n$$\nz = C_{1} x_{a} + D_{11} w + D_{12} u,\n$$\n\n而测量方程保持了对象的形式\n\n$$\ny = C_{2}^{a} x_{a} + D_{21} w + D_{22} u,\n$$\n\n其中 $C_{2}^{a}$ 是增广测量矩阵。\n\n任务：\n- 仅使用互联和状态空间实现的第一性原理，根据给定的数值数据显式推导整形矩阵 $C_{1}$、$D_{11}$ 和 $D_{12}$。清楚地说明 $x_{a}$ 中状态分量的顺序。\n- 然后计算整形矩阵 $C_{1}$ 的弗罗贝尼乌斯范数的平方，即计算 $\\|C_{1}\\|_{F}^{2} = \\operatorname{trace}(C_{1}^{\\top} C_{1})$。\n\n将最终的标量值 $\\|C_{1}\\|_{F}^{2}$ 作为您的答案。给出精确值，不要四舍五入。不要包含单位。", "solution": "所述问题具有科学依据、是良定的且客观的。不存在矛盾或信息缺失。要求是为一个混合灵敏度 $H_{\\infty}$ 控制问题构建一个增广状态空间系统的输出矩阵，并计算一个特定的矩阵范数。这是鲁棒控制理论中的一个标准流程。我们将从第一性原理开始进行推导。\n\n增广状态向量定义为 $x_{a} = \\begin{bmatrix} x^{\\top} & x_1 & x_2 & x_3 \\end{bmatrix}^{\\top}$，其中 $x \\in \\mathbb{R}^{2}$ 是对象的状态，$x_i \\in \\mathbb{R}$ 是权重滤波器 $W_i(s)$ 的状态（对于 $i \\in \\{1, 2, 3\\}$）。增广状态的总维度为 $2+1+1+1 = 5$。\n\n性能输出 $z_1, z_2, z_3$ 是通过将特定信号通过权重滤波器 $W_1, W_2, W_3$ 来定义的。每个滤波器 $W_i(s)$ 的状态空间实现，其输入为 $u_{w_i}$，输出为 $y_{w_i}$，由下式给出：\n$$\n\\dot{x}_i = A_{w_i} x_i + B_{w_i} u_{w_i}\n$$\n$$\ny_{w_i} = C_{w_i} x_i + D_{w_i} u_{w_i}\n$$\n问题指明 $z_1 = y_{w_1}$、$z_2 = y_{w_2}$ 和 $z_3 = y_{w_3}$。这些滤波器的输入是：\n\\begin{enumerate}\n    \\item $u_{w_1} = e = r-y$。参考信号 $r$ 是外部输入向量 $w$ 的第一个分量，可以写作 $r = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} w$。\n    \\item $u_{w_2} = u$。\n    \\item $u_{w_3} = y$。\n\\end{enumerate}\n测量输出 $y$ 由对象方程给出：\n$$\ny = C_{2} x + D_{21} w + D_{22} u\n$$\n代入给定的矩阵，并注意到 $D_{22}=0$：\n$$\ny = C_{2} x + D_{21} w\n$$\n现在，我们用对象状态 $x$、外部输入 $w$ 和控制输入 $u$ 来表示滤波器的输入：\n\\begin{itemize}\n    \\item $u_{w_1} = r - y = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} w - (C_{2} x + D_{21} w) = -C_{2} x + (\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) w$。\n    \\item $u_{w_2} = u$。\n    \\item $u_{w_3} = y = C_{2} x + D_{21} w$。\n\\end{itemize}\n接下来，我们通过将滤波器输入代入其输出方程，来写出性能输出 $z_1, z_2, z_3$ 的表达式。\n\\begin{itemize}\n    \\item $z_1 = C_{w_1} x_1 + D_{w_1} u_{w_1} = C_{w_1} x_1 + D_{w_1} \\left( -C_{2} x + (\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) w \\right)$\n    $$z_1 = -D_{w_1} C_{2} x + C_{w_1} x_1 + D_{w_1} (\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) w$$\n    \\item $z_2 = C_{w_2} x_2 + D_{w_2} u_{w_2} = C_{w_2} x_2 + D_{w_2} u$\n    \\item $z_3 = C_{w_3} x_3 + D_{w_3} u_{w_3} = C_{w_3} x_3 + D_{w_3} (C_{2} x + D_{21} w)$\n    $$z_3 = D_{w_3} C_{2} x + C_{w_3} x_3 + D_{w_3} D_{21} w$$\n\\end{itemize}\n我们将这些组合成增广系统的输出方程 $z = C_{1} x_{a} + D_{11} w + D_{12} u$，其中 $z = \\begin{bmatrix} z_1 \\\\ z_2 \\\\ z_3 \\end{bmatrix}$ 且 $x_a = \\begin{bmatrix} x^{\\top} & x_1 & x_2 & x_3 \\end{bmatrix}^{\\top}$。\n$$\n\\begin{bmatrix} z_1 \\\\ z_2 \\\\ z_3 \\end{bmatrix} =\n\\begin{bmatrix}\n-D_{w_1} C_2 & C_{w_1} & 0 & 0 \\\\\n\\mathbf{0}_{1 \\times 2} & 0 & C_{w_2} & 0 \\\\\nD_{w_3} C_2 & 0 & 0 & C_{w_3}\n\\end{bmatrix}\n\\begin{bmatrix} x \\\\ x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix}\n+\n\\begin{bmatrix}\nD_{w_1}(\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) \\\\\n\\mathbf{0}_{1 \\times 3} \\\\\nD_{w_3} D_{21}\n\\end{bmatrix} w\n+\n\\begin{bmatrix}\n0 \\\\\nD_{w_2} \\\\\n0\n\\end{bmatrix} u\n$$\n由此，我们确定矩阵 $C_1$、$D_{11}$ 和 $D_{12}$：\n$$\nC_1 = \\begin{bmatrix}\n-D_{w_1} C_2 & C_{w_1} & 0 & 0 \\\\\n\\mathbf{0}_{1 \\times 2} & 0 & C_{w_2} & 0 \\\\\nD_{w_3} C_2 & 0 & 0 & C_{w_3}\n\\end{bmatrix}, \\quad\nD_{11} = \\begin{bmatrix}\nD_{w_1}(\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) \\\\\n\\mathbf{0}_{1 \\times 3} \\\\\nD_{w_3} D_{21}\n\\end{bmatrix}, \\quad\nD_{12} = \\begin{bmatrix}\n0 \\\\\nD_{w_2} \\\\\n0\n\\end{bmatrix}\n$$\n现在，我们计算各分量的数值。\n给定的对象矩阵是 $C_2 = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$ 和 $D_{21} = \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix}$。\n滤波器参数为：\n\\begin{itemize}\n    \\item $W_1$: $k_1 = 2$, $z_1 = 1$, $p_1 = 0.1$。\n    $C_{w_1} = k_1(z_1 - p_1) = 2(1 - 0.1) = 1.8$。\n    $D_{w_1} = k_1 = 2$。\n    \\item $W_2$: $k_2 = 0.5$, $z_2 = 10$, $p_2 = 50$。\n    $C_{w_2} = k_2(z_2 - p_2) = 0.5(10 - 50) = -20$。\n    $D_{w_2} = k_2 = 0.5$。\n    \\item $W_3$: $k_3 = 0.3$, $z_3 = 100$, $p_3 = 5$。\n    $C_{w_3} = k_3(z_3 - p_3) = 0.3(100 - 5) = 28.5$。\n    $D_{w_3} = k_3 = 0.3$。\n\\end{itemize}\n我们计算 $C_1$、$D_{11}$ 和 $D_{12}$ 的分块：\n\\begin{itemize}\n    \\item 对于 $C_1$：\n    $-D_{w_1} C_2 = -2 \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} -2 & 0 \\end{bmatrix}$。\n    $D_{w_3} C_2 = 0.3 \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} 0.3 & 0 \\end{bmatrix}$。\n    \\item 对于 $D_{11}$：\n    $\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21} = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - \\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 1 & 0 & -1 \\end{bmatrix}$。\n    $D_{w_1}(\\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix} - D_{21}) = 2\\begin{bmatrix} 1 & 0 & -1 \\end{bmatrix} = \\begin{bmatrix} 2 & 0 & -2 \\end{bmatrix}$。\n    $D_{w_3} D_{21} = 0.3\\begin{bmatrix} 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 0 & 0 & 0.3 \\end{bmatrix}$。\n\\end{itemize}\n代入这些值，显式矩阵为：\n$$\nC_1 = \\begin{bmatrix}\n-2 & 0 & 1.8 & 0 & 0 \\\\\n0 & 0 & 0 & -20 & 0 \\\\\n0.3 & 0 & 0 & 0 & 28.5\n\\end{bmatrix}, \\quad\nD_{11} = \\begin{bmatrix}\n2 & 0 & -2 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0.3\n\\end{bmatrix}, \\quad\nD_{12} = \\begin{bmatrix}\n0 \\\\\n0.5 \\\\\n0\n\\end{bmatrix}\n$$\n问题要求计算 $C_1$ 的弗罗贝尼乌斯范数的平方，即其所有元素的平方和，$\\|C_{1}\\|_{F}^{2} = \\operatorname{trace}(C_{1}^{\\top} C_{1}) = \\sum_{i,j} |(C_1)_{ij}|^2$。\n$$\n\\|C_{1}\\|_{F}^{2} = (-2)^2 + (0)^2 + (1.8)^2 + (0)^2 + (0)^2 + (0)^2 + (0)^2 + (0)^2 + (-20)^2 + (0)^2 + (0.3)^2 + (0)^2 + (0)^2 + (0)^2 + (28.5)^2\n$$\n$$\n\\|C_{1}\\|_{F}^{2} = (-2)^2 + (1.8)^2 + (-20)^2 + (0.3)^2 + (28.5)^2\n$$\n$$\n\\|C_{1}\\|_{F}^{2} = 4 + 3.24 + 400 + 0.09 + 812.25\n$$\n$$\n\\|C_{1}\\|_{F}^{2} = 1219.58\n$$\n这就是最终的精确值。", "answer": "$$\\boxed{1219.58}$$", "id": "2710896"}, {"introduction": "理论分析的最终目的是检验设计是否在实践中满足性能指标。本练习要求您编写程序，对一个多输入多输出（MIMO）系统进行数值验证，通过计算加权灵敏度函数在频域上的最大奇异值来近似其 $H_\\infty$ 范数 [@problem_id:2710934]。这项实践不仅能加深您对奇异值在鲁棒控制中作用的理解，还能培养您使用计算方法分析和验证控制系统性能的关键工程技能。", "problem": "考虑一个连续时间、稳定、线性时不变、严格真的多输入多输出被控对象，其传递矩阵为 $G(s) \\in \\mathbb{C}^{2 \\times 2}$，且矩阵各项是由以下定义的一阶实有理函数构成：\n$$\nG_{11}(s) = \\frac{1}{s + 1},\\quad\nG_{12}(s) = \\frac{0.2}{s + 3},\\quad\nG_{21}(s) = \\frac{-0.1}{s + 5},\\quad\nG_{22}(s) = \\frac{2}{s + 2},\n$$\n从而\n$$\nG(s) =\n\\begin{bmatrix}\n\\frac{1}{s+1} & \\frac{0.2}{s+3} \\\\\n\\frac{-0.1}{s+5} & \\frac{2}{s+2}\n\\end{bmatrix}.\n$$\n待评估的是一个对角、严格真的控制器 $K(s) \\in \\mathbb{C}^{2 \\times 2}$，它由一个标量增益 $k \\in \\mathbb{R}_{>0}$ 和固定的转角频率参数化，其对角元素为：\n$$\nK_{11}(s) = \\frac{k}{\\frac{s}{20} + 1},\\qquad\nK_{22}(s) = \\frac{k}{\\frac{s}{15} + 1},\n$$\n且非对角元素为零。\n\n针对单位反馈互联系统，定义标准的混合灵敏度闭环映射：\n- 灵敏度函数 $S(s) = \\left(I + G(s)K(s)\\right)^{-1}$，\n- 补灵敏度函数 $T(s) = I - S(s)$，\n- 控制灵敏度乘积 $K(s)S(s)$。\n\n权重函数的选择如下：\n- 灵敏度权重 $W_{1}(s)$ 是一个标量、最小相位、一阶的整形函数\n$$\nW_{1}(s) = \\frac{0.01\\,s + 5}{s + 1},\n$$\n- 控制努力权重是一个常数标量 $W_{2} \\in \\mathbb{R}_{>0}$（因此作用于 $K(s)S(s)$ 的矩阵权重是 $W_{2} I_{2}$），\n- 补灵敏度权重 $W_{3}(s)$ 是一个标量、最小相位、一阶的整形函数\n$$\nW_{3}(s) = \\frac{s + 30}{0.03\\,s + 30}.\n$$\n\n对于每个角频率 $\\omega \\in \\mathbb{R}_{\\ge 0}$，通过逐点求值来定义 $G(\\mathrm{j}\\omega)$、$K(\\mathrm{j}\\omega)$、$S(\\mathrm{j}\\omega)$、$T(\\mathrm{j}\\omega)$ 和 $K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$。混合灵敏度验证可简化为检验以下三个频域不等式\n$$\n\\overline{\\sigma}\\!\\left(W_{1}(\\mathrm{j}\\omega)\\,S(\\mathrm{j}\\omega)\\right) \\le 1,\\qquad\n\\overline{\\sigma}\\!\\left(W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right) \\le 1,\\qquad\n\\overline{\\sigma}\\!\\left(W_{3}(\\mathrm{j}\\omega)\\,T(\\mathrm{j}\\omega)\\right) \\le 1,\n$$\n对所有 $\\omega \\ge 0$ 成立，其中 $\\overline{\\sigma}(\\cdot)$ 表示一个复数矩阵的最大奇异值。对于一个稳定、真的矩阵值传递函数 $F(s)$，其诱导 $\\mathcal{H}_{\\infty}$ (Hardy 空间无穷) 范数定义为\n$$\n\\lVert F \\rVert_{\\infty} = \\sup_{\\omega \\in \\mathbb{R}} \\overline{\\sigma}\\!\\left(F(\\mathrm{j}\\omega)\\right).\n$$\n在上述背景下，验证这些不等式等价于证明\n$$\n\\left\\lVert W_{1}S \\right\\rVert_{\\infty} \\le 1,\\quad\n\\left\\lVert W_{2}\\,K S \\right\\rVert_{\\infty} \\le 1,\\quad\n\\left\\lVert W_{3}T \\right\\rVert_{\\infty} \\le 1.\n$$\n\n您的任务是编写一个程序，该程序针对一个给定的频率网格和一小组控制器与权重参数的测试集，通过在一个密集的对数网格上评估最大奇异值并取其最大值，来数值近似这三个范数。请使用以下规范。\n\n- 频率网格：\n  - 使用 $N = 2000$ 个在 $\\omega_{\\min} = 10^{-3}$ 和 $\\omega_{\\max} = 10^{3}$ 之间对数间隔的角频率点，单位为弧度/秒。不要精确包含 $\\omega = 0$。\n  - 在每个 $\\omega$ 处，定义 $s = \\mathrm{j}\\omega$ 并评估传递矩阵。\n\n- 每个范数的数值近似：\n  - 对于每个频率网格点，计算矩阵 $S(\\mathrm{j}\\omega)$、$T(\\mathrm{j}\\omega)$、$K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$。\n  - 形成加权矩阵 $W_{1}(\\mathrm{j}\\omega) S(\\mathrm{j}\\omega)$、$W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$ 和 $W_{3}(\\mathrm{j}\\omega) T(\\mathrm{j}\\omega)$，其中 $W_{1}(\\mathrm{j}\\omega)$ 和 $W_{3}(\\mathrm{j}\\omega)$ 是标量，$W_{2}$ 也是标量。\n  - 对每个加权矩阵，计算最大奇异值 $\\overline{\\sigma}$，并在整个频率网格上追踪其最大值。这个最大值就是相应 $\\mathcal{H}_{\\infty}$ 范数的数值近似。\n\n- 测试集：\n  - 测试 1：$k = 12$, $W_{2} = 0.2$。\n  - 测试 2：$k = 4$, $W_{2} = 0.2$。\n  - 测试 3：$k = 50$, $W_{2} = 1.5$。\n\n- 程序所需输出：\n  - 对每个测试，输出三元组 $\\left[\\gamma_{S}, \\gamma_{K S}, \\gamma_{T}\\right]$，其中\n    $$\n    \\gamma_{S} = \\max_{\\omega} \\overline{\\sigma}\\!\\left(W_{1}(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right),\\quad\n    \\gamma_{K S} = \\max_{\\omega} \\overline{\\sigma}\\!\\left(W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right),\\quad\n    \\gamma_{T} = \\max_{\\omega} \\overline{\\sigma}\\!\\left(W_{3}(\\mathrm{j}\\omega)T(\\mathrm{j}\\omega)\\right).\n    $$\n  - 您的程序应生成单行输出，其中包含一个以逗号分隔的列表的列表形式的结果。每个内部列表包含三个浮点数值，四舍五入到六位小数，并按上述测试的顺序排列。例如，输出格式必须与以下完全一样：\n    $$\n    \\left[ [\\gamma_{S}^{(1)}, \\gamma_{K S}^{(1)}, \\gamma_{T}^{(1)}], [\\gamma_{S}^{(2)}, \\gamma_{K S}^{(2)}, \\gamma_{T}^{(2)}], [\\gamma_{S}^{(3)}, \\gamma_{K S}^{(3)}, \\gamma_{T}^{(3)}] \\right],\n    $$\n    以 Python 列表字面量的形式打印在单行上（除了标准列表字符串转换自动产生的空格外，不需要其他空格）。", "solution": "所提出的问题是现代控制理论领域中的一个标准数值评估任务，具体涉及线性时不变 (LTI) 多输入多输出 (MIMO) 系统的 $\\mathcal{H}_{\\infty}$ 分析。该问题是适定的 (well-posed)，并包含了解决该问题所需的所有信息。我们将继续进行解析公式化和数值算法的设计。\n\n目标是，在给定被控对象 $G(s)$、参数化控制器 $K(s)$ 以及一组权重函数 $W_1(s)$、$W_2$ 和 $W_3(s)$ 的情况下，计算三个特定闭环传递函数的近似 $\\mathcal{H}_{\\infty}$ 范数。这些范数定义如下：\n$$\n\\gamma_{S} = \\left\\lVert W_{1}S \\right\\rVert_{\\infty} = \\sup_{\\omega \\ge 0} \\overline{\\sigma}\\!\\left(W_{1}(\\mathrm{j}\\omega)\\,S(\\mathrm{j}\\omega)\\right)\n$$\n$$\n\\gamma_{K S} = \\left\\lVert W_{2}KS \\right\\rVert_{\\infty} = \\sup_{\\omega \\ge 0} \\overline{\\sigma}\\!\\left(W_{2}\\,K(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)\\right)\n$$\n$$\n\\gamma_{T} = \\left\\lVert W_{3}T \\right\\rVert_{\\infty} = \\sup_{\\omega \\ge 0} \\overline{\\sigma}\\!\\left(W_{3}(\\mathrm{j}\\omega)\\,T(\\mathrm{j}\\omega)\\right)\n$$\n此处 $\\overline{\\sigma}(\\cdot)$ 表示一个矩阵的最大奇异值。数值解法要求在指定的频率网格上评估相关矩阵的最大奇异值，并找出其最大值。\n\n系统各组成部分如下：\n被控对象传递矩阵 $G(s) \\in \\mathbb{C}^{2 \\times 2}$：\n$$\nG(s) =\n\\begin{bmatrix}\n\\frac{1}{s+1} & \\frac{0.2}{s+3} \\\\\n\\frac{-0.1}{s+5} & \\frac{2}{s+2}\n\\end{bmatrix}\n$$\n对角控制器 $K(s) \\in \\mathbb{C}^{2 \\times 2}$，由增益 $k > 0$ 参数化：\n$$\nK(s) =\n\\begin{bmatrix}\n\\frac{20k}{s+20} & 0 \\\\\n0 & \\frac{15k}{s+15}\n\\end{bmatrix}\n$$\n标量权重函数为：\n$$\nW_{1}(s) = \\frac{0.01\\,s + 5}{s + 1}, \\quad W_{2} \\in \\mathbb{R}_{>0}, \\quad W_{3}(s) = \\frac{s + 30}{0.03\\,s + 30}\n$$\n核心的闭环传递函数是灵敏度函数 $S(s) = (I + G(s)K(s))^{-1}$ 和补灵敏度函数 $T(s) = I - S(s)$。\n\n计算步骤如下：\n\n首先，我们必须建立频率网格。问题指定了一个包含 $N=2000$ 个点的网格，这些点在 $\\omega_{\\min} = 10^{-3} \\, \\text{rad/s}$ 和 $\\omega_{\\max} = 10^{3} \\, \\text{rad/s}$ 之间呈对数间隔。对于此网格中的每个角频率 $\\omega$，我们设置复频率变量 $s = \\mathrm{j}\\omega$，其中 $\\mathrm{j} = \\sqrt{-1}$。\n\n其次，对于网格中每个 $s = \\mathrm{j}\\omega$ 的值以及由一对 $(k, W_2)$ 定义的每个测试用例，我们执行一系列矩阵计算：\n1. 评估复数值矩阵 $G(\\mathrm{j}\\omega)$ 和 $K(\\mathrm{j}\\omega, k)$。\n2. 计算回路传递矩阵 $L(\\mathrm{j}\\omega) = G(\\mathrm{j}\\omega) K(\\mathrm{j}\\omega, k)$。这是一个标准的矩阵乘法。\n3. 计算灵敏度矩阵 $S(\\mathrm{j}\\omega) = (I_2 + L(\\mathrm{j}\\omega))^{-1}$，其中 $I_2$ 是 $2 \\times 2$ 的单位矩阵。这需要进行一次 $2 \\times 2$ 复数矩阵的求逆。\n4. 计算补灵敏度矩阵 $T(\\mathrm{j}\\omega)$。虽然其定义为 $T(\\mathrm{j}\\omega) = I_2 - S(\\mathrm{j}\\omega)$，但为了获得更好的数值稳定性，我们使用恒等式 $T(s) = L(s)S(s)$。因此，我们计算 $T(\\mathrm{j}\\omega) = L(\\mathrm{j}\\omega)S(\\mathrm{j}\\omega)$。\n5. 计算控制灵敏度乘积 $K(\\mathrm{j}\\omega, k)S(\\mathrm{j}\\omega)$。\n\n第三，我们在每个频率点上评估标量权重函数 $W_1(\\mathrm{j}\\omega)$ 和 $W_3(\\mathrm{j}\\omega)$。权重 $W_2$ 是一个常数实标量。\n\n第四，我们构造加权性能矩阵：\n- $M_S(\\mathrm{j}\\omega) = W_1(\\mathrm{j}\\omega) S(\\mathrm{j}\\omega)$\n- $M_{KS}(\\mathrm{j}\\omega) = W_2 K(\\mathrm{j}\\omega, k) S(\\mathrm{j}\\omega)$\n- $M_T(\\mathrm{j}\\omega) = W_3(\\mathrm{j}\\omega) T(\\mathrm{j}\\omega)$\n由于 $W_1$ 和 $W_3$ 是频率的标量函数，此步骤涉及相应矩阵的标量乘法。\n\n第五，对于三个加权矩阵中的每一个，在每个频率点 $\\omega$ 处，我们计算最大奇异值 $\\overline{\\sigma}$。矩阵 $A$ 的奇异值是半正定矩阵 $A^*A$ 的特征值的平方根，其中 $A^*$ 是 $A$ 的共轭转置。在计算上，这可以通过奇异值分解 (SVD) 算法高效地处理。\n\n最后，通过取整个频率网格上这些最大奇异值的最大值来近似 $\\mathcal{H}_{\\infty}$ 范数：\n$$\n\\gamma_S \\approx \\max_{\\omega \\in \\text{grid}} \\overline{\\sigma}(M_S(\\mathrm{j}\\omega))\n$$\n$$\n\\gamma_{KS} \\approx \\max_{\\omega \\in \\text{grid}} \\overline{\\sigma}(M_{KS}(\\mathrm{j}\\omega))\n$$\n$$\n\\gamma_T \\approx \\max_{\\omega \\in \\text{grid}} \\overline{\\sigma}(M_T(\\mathrm{j}\\omega))\n$$\n对测试集中指定的每一对 $(k, W_2)$ 参数重复此过程。\n\n在实现上，向量化方法在效率上更优。整套频率相关的计算可以使用数组操作来执行。频率网格 $\\omega$ 成为一个长度为 $N = 2000$ 的向量。矩阵值函数 $G$、$K$、$L$、$S$ 和 $T$ 表示为形状为 $(N, 2, 2)$ 的三维数组。矩阵求逆和乘法可以直接应用于这个矩阵栈。标量权重 $W_1$ 和 $W_3$ 成为长度为 $N$ 的向量。SVD 函数也作用于加权矩阵栈，得出每个频率点的奇异值，从而可以轻松地提取最大值。这避免了对频率网格的显式循环，从而使程序更紧凑、性能更高。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the H-infinity norm evaluation problem for a given MIMO control system.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (12.0, 0.2),  # Test 1: k, W2\n        (4.0, 0.2),   # Test 2: k, W2\n        (50.0, 1.5),  # Test 3: k, W2\n    ]\n\n    # Frequency grid specifications\n    N = 2000\n    omega_min = 1e-3\n    omega_max = 1e3\n    omega_grid = np.logspace(np.log10(omega_min), np.log10(omega_max), N)\n    s = 1j * omega_grid\n\n    # Define transfer functions using vectorized operations\n    def G_func(s_vec):\n        \"\"\"Plant transfer matrix G(s)\"\"\"\n        G11 = 1.0 / (s_vec + 1.0)\n        G12 = 0.2 / (s_vec + 3.0)\n        G21 = -0.1 / (s_vec + 5.0)\n        G22 = 2.0 / (s_vec + 2.0)\n        \n        # Stack to form (N, 2, 2) array\n        G = np.zeros((len(s_vec), 2, 2), dtype=np.complex128)\n        G[:, 0, 0] = G11\n        G[:, 0, 1] = G12\n        G[:, 1, 0] = G21\n        G[:, 1, 1] = G22\n        return G\n\n    def K_func(s_vec, k):\n        \"\"\"Controller transfer matrix K(s)\"\"\"\n        K11 = (20.0 * k) / (s_vec + 20.0)\n        K22 = (15.0 * k) / (s_vec + 15.0)\n        \n        # Stack to form (N, 2, 2) array\n        K = np.zeros((len(s_vec), 2, 2), dtype=np.complex128)\n        K[:, 0, 0] = K11\n        K[:, 1, 1] = K22\n        return K\n\n    def W1_func(s_vec):\n        \"\"\"Weighting function W1(s)\"\"\"\n        return (0.01 * s_vec + 5.0) / (s_vec + 1.0)\n\n    def W3_func(s_vec):\n        \"\"\"Weighting function W3(s)\"\"\"\n        return (s_vec + 30.0) / (0.03 * s_vec + 30.0)\n\n    # Evaluate constant plant matrix over the grid\n    G_vals = G_func(s)\n\n    results = []\n    I = np.eye(2)\n\n    for k, W2 in test_cases:\n        # Evaluate controller matrix for the current k\n        K_vals = K_func(s, k)\n\n        # Compute loop transfer function L = G*K\n        # np.matmul performs batched matrix multiplication for (N,2,2) arrays\n        L_vals = np.matmul(G_vals, K_vals)\n\n        # Compute sensitivity S = (I + L)^-1\n        # np.linalg.inv can handle a stack of matrices\n        S_vals = np.linalg.inv(I + L_vals)\n        \n        # Compute T = L*S for better numerical stability\n        T_vals = np.matmul(L_vals, S_vals)\n        \n        # Compute K*S\n        KS_vals = np.matmul(K_vals, S_vals)\n        \n        # Evaluate scalar weighting functions over the grid\n        W1_vals = W1_func(s)\n        W3_vals = W3_func(s)\n\n        # Form the weighted matrices for analysis\n        # Reshape weights to (N, 1, 1) for broadcasting with (N, 2, 2) matrices\n        W1S_vals = W1_vals[:, np.newaxis, np.newaxis] * S_vals\n        W2KS_vals = W2 * KS_vals\n        W3T_vals = W3_vals[:, np.newaxis, np.newaxis] * T_vals\n        \n        # Compute singular values for the stack of matrices\n        # svd returns singular values in descending order. We need the first one (largest).\n        sigma_bar_W1S = np.linalg.svd(W1S_vals, compute_uv=False)[:, 0]\n        sigma_bar_W2KS = np.linalg.svd(W2KS_vals, compute_uv=False)[:, 0]\n        sigma_bar_W3T = np.linalg.svd(W3T_vals, compute_uv=False)[:, 0]\n        \n        # Approximate H-infinity norm by taking the maximum over the frequency grid\n        gamma_S = np.max(sigma_bar_W1S)\n        gamma_KS = np.max(sigma_bar_W2KS)\n        gamma_T = np.max(sigma_bar_W3T)\n\n        # Round results to six decimal places and store them\n        results.append([round(gamma_S, 6), round(gamma_KS, 6), round(gamma_T, 6)])\n\n    # Final print statement in the exact required format.\n    print(str(results))\n\nsolve()\n```", "id": "2710934"}]}