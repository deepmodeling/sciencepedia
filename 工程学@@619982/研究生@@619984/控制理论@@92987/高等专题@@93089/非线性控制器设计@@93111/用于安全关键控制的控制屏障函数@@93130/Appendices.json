{"hands_on_practices": [{"introduction": "我们从最基本的技能开始：将抽象的控制屏障函数（CBF）不等式转化为一组明确的安全控制动作。本练习将引导你完成一个简单线性系统的分步计算，阐明系统动力学、安全边界以及期望的安全率参数 $\\gamma$ 如何共同作用以约束控制输入。掌握这一核心机制是设计任何基于 CBF 的控制器的第一步。[@problem_id:2695281]", "problem": "考虑线性控制仿射系统 $\\dot{x} = A x + B u$，其状态 $x \\in \\mathbb{R}^{2}$，控制 $u \\in \\mathbb{R}$ 为标量。安全集由线性函数 $h(x) = c^{\\top} x + d$ 的超水平集定义，即 $\\mathcal{S} = \\{ x \\in \\mathbb{R}^{2} \\mid h(x) \\ge 0 \\}$。通过要求 $h$ 沿轨迹的导数在当前状态 $x$ 满足 $\\dot{h}(x,u) + \\gamma h(x) \\ge 0$ 来强制施加一个带有指数速率参数 $\\gamma > 0$ 的控制屏障函数 (CBF) 条件。这是标准的指数CBF条件，当其可行时，确保了 $\\mathcal{S}$ 的前向不变性。\n\n从李导数的基本定义和上述不等式出发（不假设任何闭式结果），推导满足CBF不等式的容许控制输入集。具体系统和屏障函数数据如下\n$$\nA = \\begin{pmatrix} 0 & 1 \\\\ -2 & -3 \\end{pmatrix}, \\quad\nB = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}, \\quad\nc = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}, \\quad\nd = 1,\n$$\n并在状态\n$$\nx = \\begin{pmatrix} 1 \\\\ -2 \\end{pmatrix}.\n$$\n处进行评估。\n假设存在硬性输入边界 $|u| \\le U_{\\max}$，其中 $U_{\\max} = 3$。您的任务是计算同时满足CBF不等式 $\\dot{h}(x,u) + \\gamma h(x) \\ge 0$ 和输入边界 $|u| \\le U_{\\max}$ 的控制 $u$ 的容许区间，并以 $\\gamma$ 的函数明确表示区间端点。\n\n此外，从基本不等式和给定数据出发，分析容许区间如何依赖于 $\\gamma$（当 $\\gamma$ 变化时的单调性和可行性）；在推导过程中提供一个逻辑论证的定性描述。\n\n请以一个 $1 \\times 2$ 行向量的形式给出您的最终答案，该向量包含容许区间的下端点和上端点，表示为 $\\gamma$ 的闭式解析表达式。不需要数值舍入，也无需单位。不要以不等式或方程作为最终答案；仅按指定格式提供区间端点。", "solution": "该问题要求推导一个受控制屏障函数（CBF）约束和执行器限制的线性控制仿射系统的容许控制区间。推导过程必须从基本原理出发。\n\n系统动力学由 $\\dot{x} = Ax + Bu$ 给出，其中 $x \\in \\mathbb{R}^{2}$ 且 $u \\in \\mathbb{R}$。安全集定义为 $\\mathcal{S} = \\{ x \\in \\mathbb{R}^{2} \\mid h(x) \\ge 0 \\}$，其中屏障函数为 $h(x) = c^{\\top}x + d$。安全条件通过指数CBF不等式来强制执行：\n$$\n\\dot{h}(x,u) + \\gamma h(x) \\ge 0\n$$\n其中 $\\gamma > 0$ 是给定的速率参数。$h(x)$ 沿系统轨迹的时间导数 $\\dot{h}(x,u)$ 由链式法则给出：$\\dot{h}(x,u) = \\frac{\\partial h}{\\partial x} \\dot{x}$。对于控制仿射系统，这可展开为：\n$$\n\\dot{h}(x,u) = \\frac{\\partial h}{\\partial x} (Ax + Bu) = \\frac{\\partial h}{\\partial x}Ax + \\frac{\\partial h}{\\partial x}Bu\n$$\n这些项是 $h$ 相对于系统漂移和控制向量场的李导数，记为 $L_f h(x) = \\frac{\\partial h}{\\partial x}Ax$ 和 $L_g h(x) = \\frac{\\partial h}{\\partial x}B$。因此，CBF不等式可以写作：\n$$\nL_f h(x) + L_g h(x) u + \\gamma h(x) \\ge 0\n$$\n我们必须首先使用所提供的数据计算每一项：\n$$\nA = \\begin{pmatrix} 0 & 1 \\\\ -2 & -3 \\end{pmatrix}, \\quad\nB = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}, \\quad\nc = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}, \\quad\nd = 1\n$$\n屏障函数是 $h(x) = c^{\\top}x + d = \\begin{pmatrix} 0 & 1 \\end{pmatrix} \\begin{pmatrix} x_1 \\\\ x_2 \\end{pmatrix} + 1 = x_2 + 1$。\n$h(x)$ 的梯度是常数：$\\frac{\\partial h}{\\partial x} = \\nabla h(x)^{\\top} = c^{\\top} = \\begin{pmatrix} 0 & 1 \\end{pmatrix}$。\n\n现在我们计算李导数项：\n$L_f h(x) = c^{\\top} A x = \\begin{pmatrix} 0 & 1 \\end{pmatrix} \\begin{pmatrix} 0 & 1 \\\\ -2 & -3 \\end{pmatrix} x = \\begin{pmatrix} -2 & -3 \\end{pmatrix} \\begin{pmatrix} x_1 \\\\ x_2 \\end{pmatrix} = -2x_1 - 3x_2$。\n$L_g h(x) = c^{\\top} B = \\begin{pmatrix} 0 & 1 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = 1$。\n\n该问题要求在特定状态 $x = \\begin{pmatrix} 1 \\\\ -2 \\end{pmatrix}$ 下进行评估。我们在此状态下评估 $h(x)$ 和 $L_f h(x)$：\n$h(\\begin{pmatrix} 1 \\\\ -2 \\end{pmatrix}) = (-2) + 1 = -1$。\n$L_f h(\\begin{pmatrix} 1 \\\\ -2 \\end{pmatrix}) = -2(1) - 3(-2) = -2 + 6 = 4$。\n$L_g h(x)$ 的值是常数，等于 $1$。\n\n将这些数值代入CBF不等式：\n$$\n4 + (1)u + \\gamma(-1) \\ge 0\n$$\n$$\n4 + u - \\gamma \\ge 0\n$$\n求解控制输入 $u$，我们得到由CBF条件施加的约束：\n$$\nu \\ge \\gamma - 4\n$$\n该不等式定义了确保系统状态以至少为规定的指数速率 $\\gamma$ 趋向安全区域 $\\mathcal{S}$ 的控制集合。\n\n除了CBF约束外，控制输入还受到执行器限制 $|u| \\le U_{\\max}$，其中 $U_{\\max} = 3$。这对应于闭区间：\n$$\n-3 \\le u \\le 3\n$$\n容许控制输入的集合必须同时满足这两个约束。因此，我们求这两个集合的交集：\n$$\n\\{ u \\in \\mathbb{R} \\mid u \\ge \\gamma - 4 \\} \\cap \\{ u \\in \\mathbb{R} \\mid -3 \\le u \\le 3 \\}\n$$\n由此得到的 $u$ 的容许区间为 $[\\max(-3, \\gamma-4), 3]$。\n为使该区间非空，下界必须小于或等于上界：$\\max(-3, \\gamma-4) \\le 3$。当且仅当 $\\gamma - 4 \\le 3$ 时，此条件成立，可简化为 $\\gamma \\le 7$。由于给定 $\\gamma > 0$，对于任何 $\\gamma \\in (0, 7]$，该问题都是可行的。\n\n现在，我们分析此容许区间对参数 $\\gamma$ 的依赖性。\nCBF所要求的控制下界 $u_{min, CBF} = \\gamma - 4$ 随 $\\gamma$ 线性增加。这是因为较大的 $\\gamma$ 指定了更严格的安全要求（向安全集收敛的速率更快），这需要更强的控制作用。\n$u$ 的容许区间为 $[\\max(-3, \\gamma-4), 3]$。\n- 如果 $0 < \\gamma < 1$，那么 $\\gamma - 4 < -3$。在这种情况下，CBF约束比执行器的下限更宽松。区间的下界是 $\\max(-3, \\gamma-4) = -3$。容许区间是 $[-3, 3]$，意味着完整的控制权限都可用。\n- 如果 $\\gamma = 1$，CBF要求 $u \\ge -3$ 恰好与执行器的下限相匹配。区间仍为 $[-3, 3]$。\n- 如果 $1 < \\gamma \\le 7$，那么 $\\gamma - 4 > -3$。CBF约束成为有效的下界。容许区间是 $[\\gamma-4, 3]$。在此范围内，随着 $\\gamma$ 的增加，下界 $\\gamma-4$ 增加，而区间的长度 $3 - (\\gamma-4) = 7-\\gamma$ 缩小。这说明了权衡关系：更严格的安全性（更高的 $\\gamma$）会减少控制自由度。\n- 在可行性极限 $\\gamma = 7$ 处，区间退化为单点 $[3, 3]$，迫使唯一的控制选择 $u=3$。\n- 如果 $\\gamma > 7$，条件 $u \\ge \\gamma - 4$ 无法被任何 $u \\in [-3, 3]$ 满足，因此容许集为空，安全目标不可行。\n\n对于可行情况，容许区间的端点表示为 $\\gamma$ 的函数如下：\n下端点：$u_{min} = \\max(\\gamma-4, -3)$\n上端点：$u_{max} = 3$\n\n这些表达式构成了区间端点的闭式解析表示。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\max(\\gamma-4, -3) & 3 \\end{pmatrix}}\n$$", "id": "2695281"}, {"introduction": "一个安全集可以由许多不同的屏障函数 $h(x)$ 来表示，但这种选择是任意的吗？这个实践着重探讨这个关键问题，它表明对于同一个安全区域，不同的数学表达会产生不同的梯度。你将亲眼看到这个选择如何直接影响 CBF 约束，并因此影响最终安全控制器的行为，从而揭示一个重要但常被忽视的设计考量。[@problem_id:2695290]", "problem": "考虑一个状态为 $x \\in \\mathbb{R}^{2}$ 的平面系统，其圆形安全集为 $C = \\{ x \\in \\mathbb{R}^{2} : \\|x\\| \\le R \\}$，其中半径 $R > 0$ 为一固定值。根据控制屏障函数 (CBF) 的定义，一个连续可微函数 $h : \\mathbb{R}^{2} \\to \\mathbb{R}$ 表示安全集 $C$ 的条件是 $C = \\{ x : h(x) \\ge 0 \\}$ 并且其边界 $\\partial C$ 与集合 $\\{ x : h(x) = 0 \\}$ 重合。从该定义和标准的多元微积分（梯度、链式法则）出发，完成以下任务：\n\n1) 构造两个表示同一安全集 $C$ 的 $C^{1}$ 屏障函数 $h_{1}$ 和 $h_{2}$：\n- 令 $h_{1}(x) = R^{2} - \\|x\\|^{2}$。\n- 令 $h_{2}(x) = \\exp\\!\\big(\\alpha\\,(R^{2} - \\|x\\|^{2})\\big) - 1$，其中 $\\alpha = \\frac{5}{2}$。\n\n从基本原理出发，验证 $h_{1}$ 和 $h_{2}$ 都表示同一个安全集 $C$。\n\n2) 计算梯度 $\\nabla h_{1}(x)$ 和 $\\nabla h_{2}(x)$，并在边界点 $x_{b} = \\begin{pmatrix} R \\\\ 0 \\end{pmatrix} \\in \\partial C$ 处对它们求值。\n\n3) 定义标量比率\n$$\n\\rho \\;=\\; \\frac{\\|\\nabla h_{2}(x_{b})\\|}{\\|\\nabla h_{1}(x_{b})\\|}.\n$$\n对于给定的 $\\alpha = \\frac{5}{2}$，精确计算 $\\rho$。将最终答案报告为一个不进行四舍五入的实数。", "solution": "题目陈述需要进行验证。\n\n**步骤 1：提取已知条件**\n- 系统状态：$x \\in \\mathbb{R}^{2}$。\n- 安全集：$C = \\{ x \\in \\mathbb{R}^{2} : \\|x\\| \\le R \\}$，其中 $R > 0$ 为常数。\n- 屏障函数表示的定义：一个连续可微（$C^{1}$）函数 $h : \\mathbb{R}^{2} \\to \\mathbb{R}$ 满足 $C = \\{ x : h(x) \\ge 0 \\}$ 且其边界为 $\\partial C = \\{ x : h(x) = 0 \\}$。\n- 第一个屏障函数：$h_{1}(x) = R^{2} - \\|x\\|^{2}$。\n- 第二个屏障函数：$h_{2}(x) = \\exp(\\alpha(R^{2} - \\|x\\|^{2})) - 1$。\n- 参数值：$\\alpha = \\frac{5}{2}$。\n- 边界点：$x_{b} = \\begin{pmatrix} R \\\\ 0 \\end{pmatrix}$。\n- 待计算的比率：$\\rho = \\frac{\\|\\nabla h_{2}(x_{b})\\|}{\\|\\nabla h_{1}(x_{b})\\|}$。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题在多元微积分和控制理论领域，特别是在控制屏障函数方面，具有科学依据。所有术语都定义明确，任务以清晰、客观、无歧义的方式呈现。问题是自洽的，为其解答提供了所有必要信息。它没有违反任何数学或科学的基本原理。该设定是用于说明屏障函数性质的标准教科书示例。不存在不一致、矛盾或不适定的结构。\n\n**步骤 3：结论与行动**\n问题被判定为**有效**。将提供一个完整的、有理有据的解答。\n\n解答按要求分为三部分进行。设状态向量为 $x = \\begin{pmatrix} x_1 \\\\ x_2 \\end{pmatrix}$，因此其范数的平方为 $\\|x\\|^{2} = x_{1}^{2} + x_{2}^{2}$。\n\n**第 1 部分：安全集表示的验证**\n\n首先，考虑 $h_{1}(x) = R^{2} - \\|x\\|^{2}$。\n该函数是关于 $x$ 各分量的多项式，因此是无限可微的（$C^{\\infty}$），这满足了 $C^{1}$ 的要求。\n条件 $h_{1}(x) \\ge 0$ 等价于 $R^{2} - \\|x\\|^{2} \\ge 0$，可化简为 $R^{2} \\ge \\|x\\|^{2}$。由于 $R$ 和 $\\|x\\|$ 都是非负的，这等价于 $R \\ge \\|x\\|$，这正是安全集 $C$ 的定义。因此，$\\{x : h_{1}(x) \\ge 0\\} = C$。\n条件 $h_{1}(x) = 0$ 等价于 $R^{2} - \\|x\\|^{2} = 0$，即 $\\|x\\| = R$。这是边界 $\\partial C$ 的定义。因此，$\\{x : h_{1}(x) = 0\\} = \\partial C$。\n函数 $h_{1}(x)$ 正确地表示了安全集 $C$。\n\n接下来，考虑 $h_{2}(x) = \\exp(\\alpha(R^{2} - \\|x\\|^{2})) - 1$，其中 $\\alpha = \\frac{5}{2}$。\n指数函数的参数是一个多项式，而指数函数本身是 $C^{\\infty}$ 的。$C^{\\infty}$ 函数的复合与求和仍然是 $C^{\\infty}$ 的，所以 $h_{2}(x)$ 是 $C^{\\infty}$ 的，因此也是 $C^{1}$ 的。\n条件 $h_{2}(x) \\ge 0$ 等价于 $\\exp(\\alpha(R^{2} - \\|x\\|^{2})) - 1 \\ge 0$，即 $\\exp(\\alpha(R^{2} - \\|x\\|^{2})) \\ge 1$。\n由于自然对数函数是严格递增的，对其两边取对数后不等式得以保持：$\\ln(\\exp(\\alpha(R^{2} - \\|x\\|^{2}))) \\ge \\ln(1)$，这得出 $\\alpha(R^{2} - \\|x\\|^{2}) \\ge 0$。\n鉴于 $\\alpha = \\frac{5}{2} > 0$，该不等式成立的充要条件是 $R^{2} - \\|x\\|^{2} \\ge 0$，这与 $h_{1}(x)$ 的条件相同。如前所示，这定义了集合 $C$。\n条件 $h_{2}(x) = 0$ 等价于 $\\exp(\\alpha(R^{2} - \\|x\\|^{2})) = 1$。这意味着 $\\alpha(R^{2} - \\|x\\|^{2}) = 0$。由于 $\\alpha \\ne 0$，这要求 $R^{2} - \\|x\\|^{2} = 0$，这定义了边界 $\\partial C$。\n函数 $h_{2}(x)$ 也正确地表示了同一个安全集 $C$。\n\n**第 2 部分：梯度计算**\n\n首先，我们计算 $h_{1}(x) = R^{2} - (x_{1}^{2} + x_{2}^{2})$ 的梯度。\n$$\n\\nabla h_{1}(x) = \\begin{pmatrix} \\frac{\\partial h_{1}}{\\partial x_{1}} \\\\ \\frac{\\partial h_{1}}{\\partial x_{2}} \\end{pmatrix} = \\begin{pmatrix} -2x_{1} \\\\ -2x_{2} \\end{pmatrix} = -2x\n$$\n在边界点 $x_{b} = \\begin{pmatrix} R \\\\ 0 \\end{pmatrix}$，梯度为：\n$$\n\\nabla h_{1}(x_{b}) = -2 \\begin{pmatrix} R \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -2R \\\\ 0 \\end{pmatrix}\n$$\n\n接下来，我们计算 $h_{2}(x)$ 的梯度。我们观察到 $h_{2}(x)$ 可以写成 $h_{1}(x)$ 的函数：$h_{2}(x) = \\exp(\\alpha h_{1}(x)) - 1$。\n使用链式法则，其梯度为：\n$$\n\\nabla h_{2}(x) = \\nabla \\left( \\exp(\\alpha h_{1}(x)) - 1 \\right) = \\exp(\\alpha h_{1}(x)) \\cdot \\nabla(\\alpha h_{1}(x)) = \\alpha \\exp(\\alpha h_{1}(x)) \\nabla h_{1}(x)\n$$\n我们在点 $x_{b}$ 处计算该表达式。首先，我们计算 $h_{1}(x_{b})$：\n$$\nh_{1}(x_{b}) = R^{2} - \\|x_{b}\\|^{2} = R^{2} - \\left( R^{2} + 0^{2} \\right) = 0\n$$\n将此代入 $\\nabla h_{2}(x)$ 的表达式中：\n$$\n\\nabla h_{2}(x_{b}) = \\alpha \\exp(\\alpha \\cdot 0) \\nabla h_{1}(x_{b}) = \\alpha \\exp(0) \\nabla h_{1}(x_{b}) = \\alpha \\cdot 1 \\cdot \\nabla h_{1}(x_{b}) = \\alpha \\nabla h_{1}(x_{b})\n$$\n代入 $\\nabla h_{1}(x_{b})$ 的值和 $\\alpha = \\frac{5}{2}$：\n$$\n\\nabla h_{2}(x_{b}) = \\frac{5}{2} \\begin{pmatrix} -2R \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -5R \\\\ 0 \\end{pmatrix}\n$$\n\n**第 3 部分：比率计算**\n\n比率 $\\rho$ 定义为 $\\rho = \\frac{\\|\\nabla h_{2}(x_{b})\\|}{\\|\\nabla h_{1}(x_{b})\\|}$。\n首先，我们计算在 $x_{b}$ 处的梯度范数。\n$$\n\\|\\nabla h_{1}(x_{b})\\| = \\left\\| \\begin{pmatrix} -2R \\\\ 0 \\end{pmatrix} \\right\\| = \\sqrt{(-2R)^{2} + 0^{2}} = \\sqrt{4R^{2}} = 2R\n$$\n注意，我们使用 $|2R| = 2R$，因为题目规定 $R > 0$。\n$$\n\\|\\nabla h_{2}(x_{b})\\| = \\left\\| \\begin{pmatrix} -5R \\\\ 0 \\end{pmatrix} \\right\\| = \\sqrt{(-5R)^{2} + 0^{2}} = \\sqrt{25R^{2}} = 5R\n$$\n或者，使用第 2 部分中的关系：\n$$\n\\|\\nabla h_{2}(x_{b})\\| = \\|\\alpha \\nabla h_{1}(x_{b})\\| = |\\alpha| \\|\\nabla h_{1}(x_{b})\\|\n$$\n由于 $\\alpha = \\frac{5}{2} > 0$，我们有 $|\\alpha| = \\alpha$。\n现在，我们计算比率 $\\rho$：\n$$\n\\rho = \\frac{\\|\\nabla h_{2}(x_{b})\\|}{\\|\\nabla h_{1}(x_{b})\\|} = \\frac{\\alpha \\|\\nabla h_{1}(x_{b})\\|}{\\|\\nabla h_{1}(x_{b})\\|}\n$$\n由于 $R > 0$，$\\nabla h_{1}(x_{b})$ 不是零向量，且其范数 $\\|\\nabla h_{1}(x_{b})\\| = 2R$ 非零。因此，我们可以消去范数：\n$$\n\\rho = \\alpha\n$$\n代入给定值 $\\alpha = \\frac{5}{2}$：\n$$\n\\rho = \\frac{5}{2} = 2.5\n$$\n这个结果表明，尽管不同的屏障函数可以表示同一个安全集，但它们在边界上梯度的幅值可以不同。这个幅值在 CBF 约束的公式化中至关重要，因此 $h(x)$ 的选择直接影响最终生成的安全控制律。", "answer": "$$\\boxed{2.5}$$", "id": "2695290"}, {"introduction": "现在我们从单步约束转向更强大的预测控制框架。这个计算练习要求你比较两种后退时域策略：一种是短视的（仅考虑下一步的安全性），另一种是深谋远虑的（在整个未来时域内强制执行安全性）。通过在存在模型不确定性的系统上仿真这些控制器，你将获得关于预测性安全约束如何增强鲁棒性的实践见解，并理解为什么“向前看”对于在现实世界中保证安全至关重要。[@problem_id:2695317]", "problem": "考虑一个用于研究安全关键决策的标量系统，该系统采用控制屏障函数 (CBF)。控制器使用的标称预测模型是单积分器的离散时间前向欧拉近似，\n$$ x_{t+1}^{\\mathrm{nom}} = x_t + \\Delta t \\, u_t, $$\n其中 $x_t \\in \\mathbb{R}$ 是状态，$u_t \\in \\mathbb{R}$ 是控制输入，$\\Delta t > 0$ 是采样时间。实际系统（控制器未知）存在模型失配，表现为乘性增益失配和有界加性扰动，\n$$ x_{t+1} = x_t + \\Delta t \\, ( a \\, u_t + w_t ), \\quad w_t \\in [-\\bar{w}, \\bar{w}], $$\n其中 $a \\in \\mathbb{R}$ 和 $\\bar{w} \\ge 0$ 为常数。安全集由屏障函数 $h(x) = x$ 的上水平集定义，即，\n$$ \\mathcal{C} = \\{ x \\in \\mathbb{R} \\mid h(x) = x \\ge 0 \\}. $$\n对于标称连续时间单积分器 $\\dot{x} = u$ 和某个 $k > 0$ 的扩展 $\\mathcal{K}$ 类函数 $\\alpha(h) = k h$，其 CBF 条件为前向不变性条件\n$$ \\dot{h}(x) + \\alpha(h(x)) \\ge 0 \\;\\;\\Longleftrightarrow\\;\\; \\dot{x} + k x \\ge 0 \\;\\;\\Longleftrightarrow\\;\\; u + k x \\ge 0. $$\n对于使用标称预测模型的离散时间控制，我们将使用不等式 $u_i + k x_i \\ge 0$ 在预测的每个步上逐点施加 CBF 条件。\n\n现有两种后退时域控制器需要进行比较：\n\n- 控制器 A（单步 CBF）：在每个时间步，该控制器最小化一个单步二次目标函数\n$$ J_A(u \\mid x) = r u^2 + q \\left( x + \\Delta t \\, u - x_{\\mathrm{ref}} \\right)^2, $$\n同时满足输入边界 $u \\in [u_{\\min}, u_{\\max}]$ 以及仅在当前步施加的 CBF 约束，\n$$ u + k x \\ge 0. $$\n\n- 控制器 B（全步 CBF）：在每个时间步，该控制器求解一个针对序列 $u_0,\\dots,u_{N-1}$ 的时域长度为 $N$ 的二次规划问题，该问题最小化\n$$ J_B(\\mathbf{u} \\mid x) = \\sum_{i=0}^{N-1} \\left[ r u_i^2 + q \\left( x_{i+1} - x_{\\mathrm{ref}} \\right)^2 \\right], $$\n其中使用标称预测动态\n$$ x_{i+1} = x_i + \\Delta t \\, u_i, \\quad x_0 = x, $$\n并满足所有 $i$ 的输入边界 $u_i \\in [u_{\\min}, u_{\\max}]$ 以及在每个预测步上都强制执行的 CBF 约束，\n$$ u_i + k x_i \\ge 0, \\quad \\text{对于所有 } i \\in \\{0,\\dots,N-1\\}. $$\n\n在每个真实时间步，两个控制器都只将第一个输入 $u_0$ 应用于真实系统，然后在下一个时间步使用更新后的状态重复优化过程。系统所施加的扰动为适用于所有 $t$ 的最坏情况下的恒定值 $w_t = -\\bar{w}$。性能目标是安全性，通过闭环轨迹上的最小安全裕度来量化，\n$$ \\min_{t \\in \\{0,1,\\dots,T\\}} h(x_t) = \\min_{t \\in \\{0,1,\\dots,T\\}} x_t. $$\n负值表示在某个时间点违反了安全集。\n\n您的任务是实现这两种控制器，并使用下面的测试套件在模型失配的情况下模拟闭环系统。对于每个测试用例，返回两个浮点数：控制器 A（单步 CBF）和控制器 B（全步 CBF）的最小安全裕度，均四舍五入到4位小数。将所有测试用例的结果汇总到一个列表中。\n\n使用以下测试套件，其中每个参数的定义如上所述：\n\n- 测试用例 $1$：$(\\Delta t = 0.1,\\; N = 10,\\; k = 2.0,\\; a = 0.9,\\; \\bar{w} = 0.02,\\; u_{\\min} = -1.0,\\; u_{\\max} = 1.0,\\; x_0 = 0.5,\\; T = 60,\\; q = 1.0,\\; r = 0.01,\\; x_{\\mathrm{ref}} = -1.0)$。\n- 测试用例 $2$：$(\\Delta t = 0.05,\\; N = 15,\\; k = 3.0,\\; a = 0.8,\\; \\bar{w} = 0.05,\\; u_{\\min} = -0.5,\\; u_{\\max} = 0.5,\\; x_0 = 0.05,\\; T = 80,\\; q = 1.0,\\; r = 0.001,\\; x_{\\mathrm{ref}} = -0.5)$。\n- 测试用例 $3$：$(\\Delta t = 0.1,\\; N = 12,\\; k = 1.5,\\; a = 0.85,\\; \\bar{w} = 0.06,\\; u_{\\min} = -0.2,\\; u_{\\max} = 0.2,\\; x_0 = 0.2,\\; T = 100,\\; q = 1.0,\\; r = 0.01,\\; x_{\\mathrm{ref}} = -1.5)$。\n- 测试用例 $4$：$(\\Delta t = 0.1,\\; N = 8,\\; k = 1.0,\\; a = 1.2,\\; \\bar{w} = 0.03,\\; u_{\\min} = -0.6,\\; u_{\\max} = 0.6,\\; x_0 = 0.3,\\; T = 50,\\; q = 0.5,\\; r = 0.05,\\; x_{\\mathrm{ref}} = -1.0)$。\n\n实现要求：\n\n- 对于控制器 A，使用指定的单步目标，并仅在当前步施加 CBF 约束。\n- 对于控制器 B，构建并求解带有线性不等式约束的时域长度为 $N$ 的二次规划问题，这些约束对应于沿标称时域的逐点 CBF。请注意，利用 $x_{i+1} = x_i + \\Delta t \\, u_i$ 和 $x_0 = x$，CBF 约束 $u_i + k x_i \\ge 0$ 可以通过输入的累积和，表示为关于决策向量 $\\mathbf{u} = [u_0,\\dots,u_{N-1}]^\\top$ 的线性不等式。\n- 在真实系统 $x_{t+1} = x_t + \\Delta t \\, ( a \\, u_t - \\bar{w} )$ 上，从 $x_0$ 开始对两种控制器进行 $T$ 步的闭环模拟，并为每个控制器计算在 $t \\in \\{0,1,\\dots,T\\}$ 上的 $x_t$ 的最小值。\n\n最终输出格式：\n\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，顺序如下：\n$$ [m^{(A)}_1, m^{(B)}_1, m^{(A)}_2, m^{(B)}_2, m^{(A)}_3, m^{(B)}_3, m^{(A)}_4, m^{(B)}_4], $$\n其中 $m^{(A)}_j$ 和 $m^{(B)}_j$ 分别是在测试用例 $j$ 下，控制器 A 和控制器 B 的最小安全裕度，每个值都四舍五入到4位小数。", "solution": "该问题要求对用于一个标量系统的两种后退时域控制器进行对比分析，这两种控制器通过控制屏障函数 (CBF) 来强制实现安全保证。控制器基于标称离散时间模型运行，而实际系统则受到乘性增益失配和加性扰动的影响。目标是评估每个控制器的安全性能，该性能通过在仿真时域内达到的最小状态值来量化。\n\n系统动态由以下公式给出：\n- 标称模型（控制器使用）：$x_{k+1}^{\\mathrm{nom}} = x_k + \\Delta t \\, u_k$\n- 实际系统模型：$x_{k+1} = x_k + \\Delta t \\, ( a \\, u_k + w_k )$\n\n安全集定义为 $\\mathcal{C} = \\{ x \\in \\mathbb{R} \\mid h(x) = x \\ge 0 \\}$。离散时间 CBF 约束源自连续时间条件 $\\dot{x} + kx \\ge 0$，在每个步骤 $i$ 强制为 $u_i + k x_i \\ge 0$。\n\n我们将设计并模拟两种控制器。\n\n**控制器A：单步 CBF 控制器**\n\n该控制器采用短视的单步优化时域。在每个时间步 $t$，给定当前状态 $x_t$，它为控制输入 $u_t$ 求解以下优化问题：\n$$\n\\begin{aligned}\n\\min_{u_t} \\quad & J_A(u_t \\mid x_t) = r u_t^2 + q \\left( x_t + \\Delta t \\, u_t - x_{\\mathrm{ref}} \\right)^2 \\\\\n\\text{s.t.} \\quad & u_{\\min} \\le u_t \\le u_{\\max} \\\\\n& u_t + k x_t \\ge 0\n\\end{aligned}\n$$\n目标函数 $J_A$ 是关于 $u_t$ 的二次函数。我们可以将其重写为：\n$$\nJ_A(u_t) = (r + q \\Delta t^2) u_t^2 + 2 q \\Delta t (x_t - x_{\\mathrm{ref}}) u_t + q(x_t - x_{\\mathrm{ref}})^2\n$$\n这是一个凸抛物线，其无约束最小值点 $u_t^*$ 可以通过将关于 $u_t$ 的导数设为零来找到：\n$$\n\\frac{\\partial J_A}{\\partial u_t} = 2(r + q \\Delta t^2) u_t + 2 q \\Delta t (x_t - x_{\\mathrm{ref}}) = 0\n$$\n$$\nu_t^* = - \\frac{q \\Delta t (x_t - x_{\\mathrm{ref}})}{r + q \\Delta t^2}\n$$\n约束为 $u_t$ 定义了一个可行区间。CBF 约束给出 $u_t \\ge -k x_t$。结合输入边界，可行集为 $[\\max(u_{\\min}, -k x_t), u_{\\max}]$。因此，最优控制输入 $u_t$ 是将无约束最小值点 $u_t^*$ 投影到该可行区间上的结果。这可以通过对值进行截断来高效计算：\n$$\nu_t = \\mathrm{clip}(u_t^*, \\max(u_{\\min}, -k x_t), u_{\\max})\n$$\n这个闭式解允许在每个步骤直接计算控制输入，而无需使用迭代求解器。\n\n**控制器 B：全步 CBF 控制器**\n\n此控制器使用长度为 $N$ 的后退时域。在每个时间步 $t$，它为一系列控制输入 $\\mathbf{u} = [u_0, u_1, \\dots, u_{N-1}]^\\top$ 求解一个二次规划 (QP) 问题。该优化问题是：\n$$\n\\begin{aligned}\n\\min_{\\mathbf{u}} \\quad & J_B(\\mathbf{u} \\mid x_t) = \\sum_{i=0}^{N-1} \\left[ r u_i^2 + q \\left( x_{i+1} - x_{\\mathrm{ref}} \\right)^2 \\right] \\\\\n\\text{s.t.} \\quad & x_{i+1} = x_i + \\Delta t \\, u_i, \\quad x_0 = x_t \\quad (\\text{对于 } i=0, \\dots, N-1) \\\\\n& u_{\\min} \\le u_i \\le u_{\\max} \\quad (\\text{对于 } i=0, \\dots, N-1) \\\\\n& u_i + k x_i \\ge 0 \\quad (\\text{对于 } i=0, \\dots, N-1)\n\\end{aligned}\n$$\n要将其作为 QP 问题求解，我们必须根据决策向量 $\\mathbf{u}$ 来表达目标和约束。预测的状态序列是 $\\mathbf{u}$ 的线性函数。对于 $i \\in \\{0, \\dots, N-1\\}$，预测时域中第 $i$ 步的状态是 $x_i = x_t + \\Delta t \\sum_{j=0}^{i-1} u_j$。第 $i+1$ 步的状态是 $x_{i+1} = x_t + \\Delta t \\sum_{j=0}^{i} u_j$。\n\n令 $\\mathbf{x}_{\\mathrm{pred}} = [x_1, \\dots, x_N]^\\top$ 为预测状态向量。我们可以写出 $\\mathbf{x}_{\\mathrm{pred}} = \\mathbf{1} x_t + \\mathbf{B} \\mathbf{u}$，其中 $\\mathbf{1}$ 是一个大小为 $N$ 的全一向量，$\\mathbf{B}$ 是一个定义如下的 $N \\times N$ 矩阵：\n$$\n\\mathbf{B} = \\Delta t \\begin{pmatrix}\n1 & 0 & \\dots & 0 \\\\\n1 & 1 & \\dots & 0 \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & 1 & \\dots & 1\n\\end{pmatrix}\n$$\n目标函数可以写成标准 QP 形式 $\\frac{1}{2}\\mathbf{u}^\\top \\mathbf{P} \\mathbf{u} + \\mathbf{q}_{\\mathrm{vec}}^\\top \\mathbf{u}$：\n$$\nJ_B(\\mathbf{u}) = r \\mathbf{u}^\\top \\mathbf{u} + q (\\mathbf{1}x_t + \\mathbf{B}\\mathbf{u} - \\mathbf{1}x_{\\mathrm{ref}})^\\top (\\mathbf{1}x_t + \\mathbf{B}\\mathbf{u} - \\mathbf{1}x_{\\mathrm{ref}})\n$$\n展开此表达式，我们确定海森矩阵 $\\mathbf{P}$ 和线性项向量 $\\mathbf{q}_{\\mathrm{vec}}$：\n$$\n\\mathbf{P} = 2(r\\mathbf{I} + q\\mathbf{B}^\\top\\mathbf{B})\n$$\n$$\n\\mathbf{q}_{\\mathrm{vec}} = 2q\\mathbf{B}^\\top(\\mathbf{1}x_t - \\mathbf{1}x_{\\mathrm{ref}}) = 2q(x_t - x_{\\mathrm{ref}})\\mathbf{B}^\\top\\mathbf{1}\n$$\n其中 $\\mathbf{I}$ 是 $N \\times N$ 的单位矩阵。\n\nCBF 约束 $u_i + k x_i \\ge 0$ 也必须用 $\\mathbf{u}$ 来表示。代入 $x_i = x_t + \\Delta t \\sum_{j=0}^{i-1} u_j$：\n$$\nu_i + k \\left( x_t + \\Delta t \\sum_{j=0}^{i-1} u_j \\right) \\ge 0 \\implies k \\Delta t \\sum_{j=0}^{i-1} u_j + u_i \\ge -k x_t\n$$\n这组 $N$ 个不等式可以用矩阵形式写为 $\\mathbf{C}\\mathbf{u} \\ge \\mathbf{d}$，其中：\n$$\n\\mathbf{C} = \\begin{pmatrix}\n1 & 0 & 0 & \\dots \\\\\nk\\Delta t & 1 & 0 & \\dots \\\\\nk\\Delta t & k\\Delta t & 1 & \\dots \\\\\n\\vdots & \\vdots & \\vdots & \\ddots\n\\end{pmatrix}, \\quad\n\\mathbf{d} = -k x_t \\begin{pmatrix} 1 \\\\ 1 \\\\ \\vdots \\\\ 1 \\end{pmatrix}\n$$\n盒式约束 $u_i \\in [u_{\\min}, u_{\\max}]$ 完善了 QP 的构建。这个问题将使用一个数值优化器来求解，特别是使用 `scipy.optimize.minimize` 中的 `SLSQP` 方法，该方法适用于有约束的二次规划问题。一旦找到最优序列 $\\mathbf{u}_{\\mathrm{opt}}$，只有第一个元素 $u_0$ 被应用于系统。\n\n**仿真流程**\n\n对每个控制器和每个测试用例，都将执行一次闭环仿真。\n1. 将状态 $x$ 初始化为 $x_0$，时间 $t$ 初始化为 $0$。从 $x_0$ 开始，存储状态的历史记录。\n2. 对于 $t = 0, 1, \\dots, T-1$：\n    a. 基于当前状态 $x_t$，使用指定的控制器（A 或 B）计算控制输入 $u_t$。\n    b. 将 $u_t$ 应用于真实系统，该系统在最坏情况下的扰动 $w_t = -\\bar{w}$ 下运行：\n       $$ x_{t+1} = x_t + \\Delta t (a u_t - \\bar{w}) $$\n    c. 存储新状态 $x_{t+1}$。\n3. 仿真完成后，计算性能指标，即最小安全裕度 $\\min_{t \\in \\{0, 1, \\dots, T\\}} x_t$。为每个控制器和测试用例报告此值。", "answer": "$$\n\\boxed{[-0.0111, 0.0000, -0.0625, 0.0000, -0.0659, 0.0000, 0.0125, 0.0000]}\n$$", "id": "2695317"}]}