{"hands_on_practices": [{"introduction": "第一个练习提供了一个具体的动手计算，旨在巩固可观测性的两个主要代数检验方法：Kalman 秩检验和 Popov-Belevitch-Hautus (PBH) 检验。通过手动处理一个简单的 $2 \\times 2$ 系统，您不仅能练习每个检验的计算步骤，还能直接验证它们的理论等价性。这个实践对于建立一个直观的理解至关重要，即这些不同的视角——一个基于输出导数，另一个基于系统模态——如何就系统的可观测性得出相同的结论。", "problem": "考虑一个状态维度为 $n=2$ 的连续时间线性时不变状态空间模型，由下式给出\n$$\\dot{x}(t)=A x(t), \\quad y(t)=C x(t),$$\n其中\n$$A=\\begin{pmatrix}4 & -5\\\\ 2 & -3\\end{pmatrix}, \\qquad C=\\begin{pmatrix}1 & 1\\end{pmatrix}.$$\n从系统的可观测性基本定义出发（即：当且仅当不同的初始状态 $x(0)$ 在所有 $t \\ge 0$ 时产生不同的输出轨迹 $y(t)$ 时，系统是可观测的），完成以下任务：\n\n1. 仅使用此定义和线性性质，构建一个将初始状态 $x(0)$ 映射到前 $n$ 个输出时间导数在 $t=0$ 处求值的堆叠向量的有限维线性映射，并对给定的 $(A,C)$ 手动确定其秩。\n\n2. 独立地，从同一定义出发，论证满足 $\\dot{x}(t)=A x(t)$ 的齐次状态动力学的任何非零模态都不能隐藏在输出 $y(t)$ 中，并将其转化为一个与 $A$ 的特征结构相关的可计算秩条件。对给定的 $(A,C)$，为 $A$ 的每个特征值手动显式地评估此条件。\n\n确认通过两种独立方法得到的整数秩一致。报告共同的秩值作为你的最终答案。无需四舍五入，不涉及物理单位。你的最终答案必须是一个整数。", "solution": "题目描述经过验证。\n\n**步骤1：提取已知条件**\n- 系统模型：连续时间线性时不变 (LTI)。\n- 状态空间方程：$\\dot{x}(t)=A x(t)$，$y(t)=C x(t)$。\n- 状态维度：$n=2$。\n- 系统矩阵：$A=\\begin{pmatrix}4 & -5\\\\ 2 & -3\\end{pmatrix}$，$C=\\begin{pmatrix}1 & 1\\end{pmatrix}$。\n- 可观测性的基本定义：当且仅当不同的初始状态 $x(0)$ 在所有 $t \\ge 0$ 时产生不同的输出轨迹 $y(t)$ 时，系统是可观测的。\n- 任务1：构建一个从 $x(0)$ 到前 $n$ 个输出时间导数在 $t=0$ 处求值的向量的线性映射，并确定其对给定 $(A, C)$ 的秩。\n- 任务2：从同一定义出发，论证齐次动力学的任何非零模态都不能隐藏在输出中，将其转化为与 $A$ 的特征结构相关的秩条件，并对给定的 $(A, C)$ 为每个特征值评估此条件。\n- 目标：确认两种方法得到的秩一致，并报告共同的秩值。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题具有科学依据，是线性控制理论中的一个标准练习。问题提法清晰，提供了计算唯一整数结果所需的所有数据（$A$，$C$，$n$）。语言客观而精确。该问题不违反任何基本原理，并非不完整或矛盾，并与可观测性秩检验的指定主题直接相关。这是一个可形式化和可验证的问题。\n\n**步骤3：结论与行动**\n该问题有效。将提供解决方案。\n\n可观测性的基本定义指出，不同的初始状态 $x_1(0)$ 和 $x_2(0)$ 必须导致不同的输出轨迹 $y_1(t)$ 和 $y_2(t)$。根据线性系统的叠加原理，这等价于一个非零初始状态 $x(0) \\neq 0$ 必须在某个 $t \\ge 0$ 时产生一个非零输出轨迹 $y(t) \\neq 0$。状态方程的解为 $x(t) = \\exp(At)x(0)$，这给出了输出 $y(t) = C \\exp(At) x(0)$。因此，可观测性意味着 $C \\exp(At) x(0) = 0$ 对于所有 $t \\ge 0$ 成立，当且仅当 $x(0) = 0$。\n\n**第1部分：通过输出导数判断可观测性 (Kalman 秩条件)**\n如果输出 $y(t)$ 在所有 $t \\ge 0$ 时恒为零，那么它的所有时间导数也必须在所有 $t \\ge 0$ 时为零。我们在 $t=0$ 时计算这些导数。\n输出为 $y(t) = C x(t)$。\n输出的一阶导数为 $\\dot{y}(t) = \\frac{d}{dt}(C x(t)) = C \\dot{x}(t) = C A x(t)$。\n通常，k阶导数为 $y^{(k)}(t) = C A^k x(t)$。\n\n对于一个具有初始状态 $x(0)$ 的系统，如果它是不可观测的，那么输出及其所有导数在 $t=0$ 时必须为零：\n$y(0) = C x(0) = 0$\n$\\dot{y}(0) = C A x(0) = 0$\n$\\ddot{y}(0) = C A^2 x(0) = 0$\n...\n根据 Cayley-Hamilton 定理，任何 $k \\ge n$ 的 $A^k$ 次幂都可以表示为 $\\{I, A, \\dots, A^{n-1}\\}$ 的线性组合。因此，只需检查前 $n$ 个条件（从0阶到 $n-1$ 阶导数）即可。\n对于 $n=2$，我们需要前 $n=2$ 个导数（0阶和1阶）在 $t=0$ 处求值的向量。这给出了从初始状态 $x(0)$ 到该导数向量的线性映射：\n$$ \\begin{pmatrix} y(0) \\\\ \\dot{y}(0) \\end{pmatrix} = \\begin{pmatrix} C \\\\ CA \\end{pmatrix} x(0) $$\n该映射由可观测性矩阵 $\\mathcal{O} = \\begin{pmatrix} C \\\\ CA \\end{pmatrix}$ 表示。当且仅当唯一映射到零向量的 $x(0)$ 是 $x(0)=0$ 时，系统是可观测的。这又当且仅当矩阵 $\\mathcal{O}$ 具有满列秩，即 $\\text{rank}(\\mathcal{O}) = n = 2$。\n\n我们现在计算给定系统的这个秩。\n给定 $A=\\begin{pmatrix}4 & -5\\\\ 2 & -3\\end{pmatrix}$ 和 $C=\\begin{pmatrix}1 & 1\\end{pmatrix}$。\n首先，我们计算乘积 $CA$：\n$$ CA = \\begin{pmatrix}1 & 1\\end{pmatrix} \\begin{pmatrix}4 & -5\\\\ 2 & -3\\end{pmatrix} = \\begin{pmatrix}(1)(4)+(1)(2) & (1)(-5)+(1)(-3)\\end{pmatrix} = \\begin{pmatrix}6 & -8\\end{pmatrix} $$\n因此，可观测性矩阵 $\\mathcal{O}$ 为：\n$$ \\mathcal{O} = \\begin{pmatrix} C \\\\ CA \\end{pmatrix} = \\begin{pmatrix} 1 & 1 \\\\ 6 & -8 \\end{pmatrix} $$\n为了求这个 $2 \\times 2$ 矩阵的秩，我们计算它的行列式：\n$$ \\det(\\mathcal{O}) = (1)(-8) - (1)(6) = -8 - 6 = -14 $$\n由于 $\\det(\\mathcal{O}) = -14 \\neq 0$，该矩阵是可逆的，因此具有满秩。秩为 $2$。\n\n**第2部分：通过特征模态判断可观测性 (Popov-Belevitch-Hautus 条件)**\n我们研究系统的一个动态模态被“隐藏”在输出中的条件。系统的一个模态对应于由 $A$ 的一个特征向量引发的轨迹。设 $v$ 是 $A$ 的一个特征向量，对应特征值为 $\\lambda$，使得 $Av = \\lambda v$ 且 $v \\neq 0$。\n如果初始状态是 $x(0) = v$，则状态轨迹为 $x(t) = \\exp(At)v = \\exp(\\lambda t)v$。\n相应的输出为 $y(t) = C x(t) = C (\\exp(\\lambda t) v) = \\exp(\\lambda t) (Cv)$。\n要使该模态不可观测，其输出必须恒为零，即 $y(t)=0$ 对所有 $t$ 成立。由于 $\\exp(\\lambda t) \\neq 0$，这要求 $Cv = 0$。\n因此，当且仅当存在一个位于 $C$ 的零空间中的 $A$ 的特征向量 $v$ 时，系统是不可观测的。反之，当且仅当对于 $A$ 的每一个特征值 $\\lambda_i$，没有对应的特征向量 $v_i$ 满足 $Cv_i=0$ 时，系统是可观测的。\n\n这个条件可以表示为一个秩检验。两个条件 $(\\lambda I - A)v = 0$（特征向量的定义）和 $Cv = 0$ 意味着向量 $v$ 同时位于 $(\\lambda I - A)$ 和 $C$ 的零空间中。这只在由这两个矩阵堆叠而成的矩阵不具有满列秩时才可能发生。因此，可观测性的条件是，对于 $A$ 的每个特征值 $\\lambda_i$，以下矩阵具有满列秩 $n$：\n$$ \\begin{pmatrix} \\lambda_i I - A \\\\ C \\end{pmatrix} $$\n我们对给定的系统（其中 $n=2$）评估此条件。首先，我们通过求解特征方程 $\\det(\\lambda I - A)=0$ 来找到 $A$ 的特征值。\n$$ \\det\\left(\\begin{pmatrix} \\lambda & 0 \\\\ 0 & \\lambda \\end{pmatrix} - \\begin{pmatrix} 4 & -5 \\\\ 2 & -3 \\end{pmatrix}\\right) = \\det\\begin{pmatrix} \\lambda-4 & 5 \\\\ -2 & \\lambda+3 \\end{pmatrix} = 0 $$\n$$ (\\lambda-4)(\\lambda+3) - (5)(-2) = \\lambda^2 - \\lambda - 12 + 10 = \\lambda^2 - \\lambda - 2 = 0 $$\n对二次方程进行因式分解得到 $(\\lambda-2)(\\lambda+1)=0$。特征值为 $\\lambda_1=2$ 和 $\\lambda_2=-1$。\n\n我们现在对每个特征值检查秩条件。\n情况1：$\\lambda_1 = 2$。\n待测试的矩阵是：\n$$ M_1 = \\begin{pmatrix} 2I - A \\\\ C \\end{pmatrix} = \\begin{pmatrix} 2-4 & 5 \\\\ -2 & 2+3 \\\\ \\hline 1 & 1 \\end{pmatrix} = \\begin{pmatrix} -2 & 5 \\\\ -2 & 5 \\\\ 1 & 1 \\end{pmatrix} $$\n这是一个 $3 \\times 2$ 矩阵。其秩最多为 $2$。要检查秩是否为 $2$，我们找到一个行列式非零的 $2 \\times 2$ 子矩阵。考虑由第一行和第三行组成的子矩阵：\n$$ \\det\\begin{pmatrix} -2 & 5 \\\\ 1 & 1 \\end{pmatrix} = (-2)(1) - (5)(1) = -2 - 5 = -7 \\neq 0 $$\n由于我们找到了一个非奇异的 $2 \\times 2$ 子矩阵，因此 $M_1$ 的秩为 $2$。该条件对 $\\lambda_1=2$ 成立。\n\n情况2：$\\lambda_2 = -1$。\n待测试的矩阵是：\n$$ M_2 = \\begin{pmatrix} -1I - A \\\\ C \\end{pmatrix} = \\begin{pmatrix} -1-4 & 5 \\\\ -2 & -1+3 \\\\ \\hline 1 & 1 \\end{pmatrix} = \\begin{pmatrix} -5 & 5 \\\\ -2 & 2 \\\\ 1 & 1 \\end{pmatrix} $$\n同样，我们通过找到一个非奇异的 $2 \\times 2$ 子矩阵来检查秩。使用第一行和第三行：\n$$ \\det\\begin{pmatrix} -5 & 5 \\\\ 1 & 1 \\end{pmatrix} = (-5)(1) - (5)(1) = -5 - 5 = -10 \\neq 0 $$\n$M_2$ 的秩也为 $2$。该条件对 $\\lambda_2=-1$ 成立。\n\n两种方法都证实了系统的可观测性。可观测性矩阵 $\\mathcal{O}$ 的秩为 $2$。PBH 测试证实，对于每个特征值，测试矩阵的秩均为 $2$。共同的秩值为 $2$。", "answer": "$$\\boxed{2}$$", "id": "2735989"}, {"introduction": "在掌握了线性时不变 (LTI) 系统的检验方法后，理解其局限性至关重要。本练习设计了一个精巧的线性时变 (LTV) 系统作为强有力的反例，证明了“冻结时间”的 PBH 检验可能会产生误导。通过计算可观测性格拉姆矩阵 (observability Gramian)，您将揭示该系统真实存在的不可观测性，从而突显出 LTV 系统分析的独特挑战以及使用恰当工具的必要性。", "problem": "考虑一个线性时变 (LTV) 系统，其状态为 $x(t) \\in \\mathbb{R}^{2}$，具有无输入动态和输出\n$$\n\\dot{x}(t) = A(t)\\,x(t), \n\\qquad \ny(t) = C(t)\\,x(t),\n$$\n其中\n$$\nA(t) \\equiv \\begin{bmatrix} 0 & 1 \\\\ -1 & 0 \\end{bmatrix}, \n\\qquad \nC(t) \\equiv \\begin{bmatrix} \\cos t & -\\sin t \\end{bmatrix}.\n$$\n你可以假设状态转移矩阵 $\\Phi(t,s)$（对于 $\\dot{x}(t)=A(t)x(t)$）和 LTV 系统的有限时域能观性格拉姆矩阵采用标准定义\n$$\nW_{o}(t_{0},t_{1}) \\equiv \\int_{t_{0}}^{t_{1}} \\Phi(\\tau,t_{0})^{\\top}\\, C(\\tau)^{\\top} C(\\tau)\\, \\Phi(\\tau,t_{0}) \\, \\mathrm{d}\\tau.\n$$\n任务：\n- 仅使用基本定义，对于每个固定的时间 $t \\in \\mathbb{R}$ 和所有复数 $\\lambda \\in \\mathbb{C}$，分析在冻结时刻的 Popov-Belevitch-Hautus (PBH) 堆叠矩阵的秩，即 $\\mathrm{rank}\\,\\begin{bmatrix} \\lambda I - A(t) \\\\ C(t) \\end{bmatrix}$，并解释此冻结时间检验对于每个时刻的能观性会得出什么结论。\n- 然后，计算有限时域能观性格拉姆矩阵 $W_{o}(0,2\\pi)$ 的行列式。\n\n请给出 $W_{o}(0,2\\pi)$ 的行列式作为最终答案。无需单位，也无需四舍五入。你的推导过程必须从基本原理（$\\Phi$ 和 $W_{o}$ 的定义，以及标准的秩概念）出发，并且不应在这些基础之上假设任何专门的捷径条件。", "solution": "该问题提出了一个线性时变 (LTV) 系统，并要求进行两项独立的分析：一是使用 Popov-Belevitch-Hautus (PBH) 判据进行冻结时间能观性检验，二是计算有限时域能观性格拉姆矩阵的行列式。该问题的陈述在科学上是严谨的，并且提法得当。我们将着手进行解答。\n\n该系统由 $\\dot{x}(t) = A(t)x(t)$ 和 $y(t) = C(t)x(t)$ 给出，其矩阵为\n$$\nA(t) = A = \\begin{bmatrix} 0 & 1 \\\\ -1 & 0 \\end{bmatrix}, \\qquad C(t) = \\begin{bmatrix} \\cos t & -\\sin t \\end{bmatrix}.\n$$\n状态维度为 $n=2$。注意，状态动态矩阵 $A(t)$ 实际上是常数。\n\n首先，我们分析对于任意固定的时间 $t \\in \\mathbb{R}$ 和任意复数 $\\lambda \\in \\mathbb{C}$，冻结时间 PBH 矩阵的秩。对 $(A, C(t))$ 的 PBH 矩阵为\n$$\nM(\\lambda, t) = \\begin{bmatrix} \\lambda I - A \\\\ C(t) \\end{bmatrix} = \\begin{bmatrix} \\lambda & -1 \\\\ 1 & \\lambda \\\\ \\cos t & -\\sin t \\end{bmatrix}.\n$$\n这是一个 $3 \\times 2$ 矩阵。为了使冻结时间系统能观，对于所有 $\\lambda \\in \\mathbb{C}$，该矩阵必须具有满列秩，即秩为 $2$。一个矩阵不具有满列秩的充要条件是其列向量线性相关。$M(\\lambda, t)$ 的秩降到 2 以下的唯一可能是当 $\\det(\\lambda I - A) = 0$，这意味着 $\\lambda$ 必须是 $A$ 的一个特征值。$A$ 的特征方程是\n$$\n\\det(\\lambda I - A) = \\det \\begin{pmatrix} \\lambda & -1 \\\\ 1 & \\lambda \\end{pmatrix} = \\lambda^2 + 1 = 0.\n$$\n特征值为 $\\lambda_1 = i$ 和 $\\lambda_2 = -i$。我们必须检查当 $\\lambda$ 取这些值时 $M(\\lambda, t)$ 的秩。\n\n情况 1: $\\lambda = i$。\nPBH 矩阵变为\n$$\nM(i, t) = \\begin{bmatrix} i & -1 \\\\ 1 & i \\\\ \\cos t & -\\sin t \\end{bmatrix}.\n$$\n第一行是第二行的 $i$ 倍，因此前两行线性相关，这与预期相符。该矩阵的秩小于 2 的充要条件是第三行 $[\\cos t, -\\sin t]$ 也是前两行的线性组合。由于前两行张成一个由向量（例如）$[1, i]$ 生成的一维子空间，因此秩亏的条件是 $[\\cos t, -\\sin t]$ 必须是 $[1, i]$ 的标量倍。\n$$\n[\\cos t, -\\sin t] = k [1, i] \\quad \\text{对于某个 } k \\in \\mathbb{C}.\n$$\n这意味着 $\\cos t = k$ 且 $-\\sin t = ki = (\\cos t)i$。为使此式成立，我们必须有 $\\sin t = -i \\cos t$。如果 $\\cos t \\neq 0$，则得到 $\\tan t = -i$。实数 $t$ 的正切值不可能是非实复数。如果 $\\cos t = 0$，则 $t = \\frac{\\pi}{2} + m\\pi$ (其中 $m$ 为整数)，这意味着 $\\sin t = \\pm 1$。方程变为 $\\pm 1 = -i \\cdot 0$，即 $\\pm 1 = 0$，这是一个矛盾。因此，对于任何实数 $t$，向量 $[\\cos t, -\\sin t]$ 都不可能是 $[1, i]$ 的倍数。$M(i, t)$ 的秩恒为 $2$。\n\n情况 2: $\\lambda = -i$。\nPBH 矩阵变为\n$$\nM(-i, t) = \\begin{bmatrix} -i & -1 \\\\ 1 & -i \\\\ \\cos t & -\\sin t \\end{bmatrix}.\n$$\n类似地，前两行线性相关。秩小于 2 的条件是 $[\\cos t, -\\sin t]$ 是 $[1, -i]$ 的标量倍。\n$$\n[\\cos t, -\\sin t] = k [1, -i] \\quad \\text{对于某个 } k \\in \\mathbb{C}.\n$$\n这意味着 $\\cos t = k$ 且 $-\\sin t = -ki = -(\\cos t)i$，即 $\\sin t = i \\cos t$。若 $\\cos t \\neq 0$，则得到 $\\tan t = i$，这对于实数 $t$ 是不可能的。如果 $\\cos t = 0$，我们再次得到矛盾 $\\pm 1 = 0$。$M(-i, t)$ 的秩恒为 $2$。\n\n由于 PBH 矩阵对于所有 $\\lambda \\in \\mathbb{C}$ 和所有 $t \\in \\mathbb{R}$ 都具有满秩，冻结时间分析的结论是该系统在每个时刻都是能观的。\n\n接下来，我们计算在区间 $[0, 2\\pi]$ 上的有限时域能观性格拉姆矩阵 $W_o(t_0, t_1)$ 的行列式。其定义为\n$$\nW_{o}(0, 2\\pi) = \\int_{0}^{2\\pi} \\Phi(\\tau, 0)^{\\top} C(\\tau)^{\\top} C(\\tau) \\Phi(\\tau, 0) \\, \\mathrm{d}\\tau.\n$$\n由于 $A$ 是一个常数矩阵，状态转移矩阵 $\\Phi(t, s)$ 由 $\\Phi(t, s) = \\exp(A(t-s))$ 给出。我们需要 $\\Phi(\\tau, 0) = \\exp(A\\tau)$。$A$ 的幂是 $A^2 = -I, A^3 = -A, A^4 = I$。使用矩阵指数的泰勒级数展开：\n$$\n\\exp(A\\tau) = I + A\\tau + \\frac{(A\\tau)^2}{2!} + \\frac{(A\\tau)^3}{3!} + \\dots = I \\left(1 - \\frac{\\tau^2}{2!} + \\frac{\\tau^4}{4!} - \\dots\\right) + A \\left(\\tau - \\frac{\\tau^3}{3!} + \\frac{\\tau^5}{5!} - \\dots\\right).\n$$\n这可以简化为 $\\exp(A\\tau) = I \\cos\\tau + A \\sin\\tau$。\n$$\n\\Phi(\\tau, 0) = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix} \\cos\\tau + \\begin{bmatrix} 0 & 1 \\\\ -1 & 0 \\end{bmatrix} \\sin\\tau = \\begin{bmatrix} \\cos\\tau & \\sin\\tau \\\\ -\\sin\\tau & \\cos\\tau \\end{bmatrix}.\n$$\n被积函数的形式为 $K(\\tau) = (\\cdots)^\\top(\\cdots)$。首先计算乘积 $C(\\tau)\\Phi(\\tau, 0)$ 在计算上更简单。\n$$\nC(\\tau)\\Phi(\\tau, 0) = \\begin{bmatrix} \\cos\\tau & -\\sin\\tau \\end{bmatrix} \\begin{bmatrix} \\cos\\tau & \\sin\\tau \\\\ -\\sin\\tau & \\cos\\tau \\end{bmatrix}.\n$$\n进行矩阵乘法得到：\n$$\nC(\\tau)\\Phi(\\tau, 0) = \\begin{bmatrix} \\cos^2\\tau + \\sin^2\\tau & \\cos\\tau\\sin\\tau - \\sin\\tau\\cos\\tau \\end{bmatrix} = \\begin{bmatrix} 1 & 0 \\end{bmatrix}.\n$$\n对于所有 $\\tau$，这个结果是常数。其含义是输出 $y(\\tau)$ 仅依赖于初始状态 $x(0)$ 的第一个分量，因为 $y(\\tau) = C(\\tau)\\Phi(\\tau, 0)x(0) = [1, 0]x(0) = x_1(0)$。任何形如 $[0, \\alpha]^\\top$ 的初始状态都会产生零输出，从而使得第二个状态分量不能观。\n现在，我们可以计算格拉姆矩阵的被积矩阵：\n$$\n\\Phi(\\tau, 0)^{\\top} C(\\tau)^{\\top} C(\\tau) \\Phi(\\tau, 0) = \\left( C(\\tau) \\Phi(\\tau, 0) \\right)^{\\top} \\left( C(\\tau) \\Phi(\\tau, 0) \\right) = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix} \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix}.\n$$\n被积函数是一个常数矩阵。能观性格拉姆矩阵是这个常数矩阵在区间 $[0, 2\\pi]$ 上的积分：\n$$\nW_{o}(0, 2\\pi) = \\int_{0}^{2\\pi} \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix} \\mathrm{d}\\tau = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix} \\int_{0}^{2\\pi} \\mathrm{d}\\tau = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix} (2\\pi) = \\begin{bmatrix} 2\\pi & 0 \\\\ 0 & 0 \\end{bmatrix}.\n$$\n问题要求计算这个格拉姆矩阵的行列式。\n$$\n\\det(W_{o}(0, 2\\pi)) = \\det\\left(\\begin{bmatrix} 2\\pi & 0 \\\\ 0 & 0 \\end{bmatrix}\\right) = (2\\pi)(0) - (0)(0) = 0.\n$$\n一个奇异的能观性格拉姆矩阵证实了该系统在区间 $[0, 2\\pi]$ 上是不能观的。这为 LTV 系统的冻结时间分析的可靠性提供了一个关键反例，因为 $C(t)$ 的时变与系统动态完美同步，从而掩盖了其中一个状态。", "answer": "$$\\boxed{0}$$", "id": "2735982"}, {"introduction": "从理论分析到实际应用，需要我们正视数值计算的现实问题。本练习将指导您通过代码实现可观测性检验，重点关注在浮点运算中确定矩阵秩的关键任务。通过比较一个简单的绝对容差和一个有原则的、按比例缩放的相对容差，您将亲身体验到在实际工程软件中出现的稳健性问题，并学会如何编写更可靠的诊断工具。", "problem": "考虑一个线性时不变状态空间系统，其状态矩阵为 $A \\in \\mathbb{R}^{n \\times n}$，输出矩阵为 $C \\in \\mathbb{R}^{p \\times n}$。可观测性是系统对 $(A,C)$ 的一个结构特性，其定义为在零输入下，能否通过有限时间区间内的输出 $y(t)$ 来重构初始状态 $x(0)$。两个经典的可观测性秩检验方法是：\n\n- Kalman 可观测性矩阵检验：构建可观测性矩阵 $O = \\begin{bmatrix} C \\\\ C A \\\\ \\cdots \\\\ C A^{n-1} \\end{bmatrix} \\in \\mathbb{R}^{np \\times n}$。系统对 $(A,C)$ 是可观测的，当且仅当 $\\operatorname{rank}(O) = n$。\n\n- Popov-Belevitch-Hautus (PBH) 检验：对于 $A$ 的每个特征值 $\\lambda$，构建堆叠矩阵 $\\begin{bmatrix} \\lambda I - A \\\\ C \\end{bmatrix} \\in \\mathbb{C}^{(n+p) \\times n}$。系统对 $(A,C)$ 是可观测的，当且仅当 $\\operatorname{rank}\\!\\left(\\begin{bmatrix} \\lambda I - A \\\\ C \\end{bmatrix}\\right) = n$ 对 $A$ 的每一个特征值 $\\lambda$（按代数重数计算）都成立。\n\n在浮点运算中，确定矩阵的秩需要一个阈值来判断何时将一个奇异值视为零。一种简单的方法是使用一个固定的绝对阈值 $\\tau_{\\text{abs}} = 10^{-8}$，这种方法在缩放变换下可能会失效。一种更严谨的方法是使用一个根据矩阵范数缩放的相对容差；一个标准选择是，当矩阵 $M \\in \\mathbb{C}^{m \\times n}$ 的奇异值 $s_i$ 满足 $s_i > \\tau_{\\text{rel}}$ 时，将其声明为非零，其中 $\\tau_{\\text{rel}} = s_{\\max}(M) \\cdot \\max(m,n) \\cdot \\epsilon_{\\text{mach}}$，$s_{\\max}(M)$ 是 $M$ 的最大奇异值，而 $\\epsilon_{\\text{mach}}$ 是双精度浮点数的机器 epsilon。\n\n任务：编写一个完整的程序，对每个给定的测试用例 $(A,C)$，计算四个布尔值结果：\n1. 使用简单绝对阈值的 Kalman 检验。\n2. 使用根据矩阵 2-范数缩放的严谨相对容差的 Kalman 检验。\n3. 使用简单绝对阈值的 PBH 检验。\n4. 使用根据矩阵 2-范数缩放的严谨相对容差的 PBH 检验。\n\n您的程序必须通过奇异值分解来实现秩的计算，并采用上述两种阈值策略。程序应使用双精度算术及其对应的机器 epsilon $\\epsilon_{\\text{mach}}$。\n\n测试套件：\n- 测试用例 1（良态，可观测）：\n  - $A_1 = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}$，$C_1 = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$。\n- 测试用例 2（可观测，但输出被缩放到接近下溢以展示绝对阈值的失效）：\n  - $A_2 = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}$，$C_2 = 10^{-12} \\begin{bmatrix} 1 & 0 \\end{bmatrix}$。\n- 测试用例 3（精确不可观测）：\n  - $A_3 = \\begin{bmatrix} 0 & 1 \\\\ 0 & 0 \\end{bmatrix}$，$C_3 = \\begin{bmatrix} 0 & 1 \\end{bmatrix}$。\n- 测试用例 4（3 维，良态，可观测的伴随形式）：\n  - $A_4 = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ -1 & -1 & -1 \\end{bmatrix}$，$C_4 = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix}$。\n\n计算要求：\n- 通过奇异值实现数值秩的计算。对于简单绝对阈值，如果奇异值 $s > \\tau_{\\text{abs}}$ 且 $\\tau_{\\text{abs}} = 10^{-8}$，则将其视为非零。对于严谨准则，使用 $\\tau_{\\text{rel}} = s_{\\max}(M) \\cdot \\max(m,n) \\cdot \\epsilon_{\\text{mach}}$，其中 $M$ 是被评估秩的矩阵。\n- 对于 PBH 检验，数值计算 $A$ 的所有特征值 $\\lambda$，并对每个 $\\lambda$ 检查秩条件。\n- 所有数学结果必须以双精度计算。不涉及物理单位或角度。\n\n最终输出格式：\n- 按顺序聚合四个测试用例的结果，每个测试用例贡献如上所列顺序的四个布尔值，并展开成一个长度为 16 的单一列表。\n- 您的程序应生成单行输出，其中包含一个用方括号括起来、不含空格的逗号分隔列表的结果，例如：$[{\\rm True},{\\rm False},{\\rm True},{\\rm True},\\ldots]$。", "solution": "必须首先对问题陈述进行严格验证。\n\n**步骤 1：提取已知条件**\n\n- **系统模型**：一个由状态矩阵 $A \\in \\mathbb{R}^{n \\times n}$ 和输出矩阵 $C \\in \\mathbb{R}^{p \\times n}$ 定义的线性时不变 (LTI) 系统。\n- **Kalman 可观测性检验**：系统对 $(A,C)$ 是可观测的，当且仅当可观测性矩阵 $O = \\begin{bmatrix} C \\\\ CA \\\\ \\vdots \\\\ CA^{n-1} \\end{bmatrix}$ 具有满列秩，即 $\\operatorname{rank}(O) = n$。\n- **Popov-Belevitch-Hautus (PBH) 检验**：系统对 $(A,C)$ 是可观测的，当且仅当对于 $A$ 的每个特征值 $\\lambda$，矩阵 $\\begin{bmatrix} \\lambda I - A \\\\ C \\end{bmatrix}$ 具有满列秩，即 $\\operatorname{rank}\\!\\left(\\begin{bmatrix} \\lambda I - A \\\\ C \\end{bmatrix}\\right) = n$。\n- **数值秩计算**：\n  1. **简单绝对阈值**：一个奇异值 $s$ 被认为是非零的，如果 $s > \\tau_{\\text{abs}}$，其中 $\\tau_{\\text{abs}} = 10^{-8}$。\n  2. **严谨相对容差**：对于一个矩阵 $M \\in \\mathbb{C}^{m \\times n}$，一个奇异值 $s_i$ 被认为是非零的，如果 $s_i > \\tau_{\\text{rel}}$，其中 $\\tau_{\\text{rel}} = s_{\\max}(M) \\cdot \\max(m,n) \\cdot \\epsilon_{\\text{mach}}$。这里 $s_{\\max}(M)$ 是 $M$ 的最大奇异值，$\\epsilon_{\\text{mach}}$ 是双精度浮点数的机器 epsilon。\n- **任务**：对于所提供的四个测试用例中的每一个，计算对应于两种检验（Kalman、PBH）和两种秩计算方法（简单、严谨）的四个布尔值结果。\n- **测试用例**：\n  - 用例 1：$A_1 = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}$，$C_1 = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$。\n  - 用例 2：$A_2 = \\begin{bmatrix} 0 & 1 \\\\ -2 & -3 \\end{bmatrix}$，$C_2 = 10^{-12} \\begin{bmatrix} 1 & 0 \\end{bmatrix}$。\n  - 用例 3：$A_3 = \\begin{bmatrix} 0 & 1 \\\\ 0 & 0 \\end{bmatrix}$，$C_3 = \\begin{bmatrix} 0 & 1 \\end{bmatrix}$。\n  - 用例 4：$A_4 = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ -1 & -1 & -1 \\end{bmatrix}$，$C_4 = \\begin{bmatrix} 1 & 0 & 0 \\end{bmatrix}$。\n\n**步骤 2：使用提取的已知条件进行验证**\n\n对问题的有效性进行审查。\n- **科学依据**：该问题基于控制理论（Kalman 和 PBH 可观测性检验）和数值线性代数（数值秩、SVD）中的基本和标准结果。这些是已确立并被普遍接受的原则。该问题在科学上是合理的。\n- **适定性**：问题提供了所有必要的信息：每个测试用例的系统矩阵、检验的精确定义以及数值秩阈值的确切公式。任务定义清晰，并且可以计算出唯一解。\n- **客观性**：问题使用客观的数学语言表述，没有歧义或主观声明。\n\n该问题没有表现出任何指定的缺陷，例如科学上不合理、不完整或矛盾。它是在指定控制理论领域内一个定义明确的计算问题。\n\n**步骤 3：结论与行动**\n\n问题被判定为**有效**。我们将继续进行完整解答。\n\n**解题推导**\n\n该解答需要实现 Kalman 和 PBH 可观测性检验。对于每个检验，都必须计算特定矩阵的秩，并与状态维度 $n$ 进行比较。问题的核心在于使用两种不同的容差策略进行秩的数值计算。\n\n**通过 SVD 计算数值秩**\n\n一个矩阵 $M \\in \\mathbb{C}^{m \\times n}$ 的秩是其非零奇异值的数量。在浮点运算中，解析上为零的奇异值可能会计算为小的非零数。因此，需要一个阈值来确定数值秩。$M$ 的奇异值分解 (SVD) 提供了其奇异值 $s_1 \\geq s_2 \\geq \\dots \\geq s_{\\min(m,n)} \\geq 0$。数值秩是大于所选容差 $\\tau$ 的奇异值 $s_i$ 的数量。\n\n1.  **简单绝对阈值**：容差是一个固定值，$\\tau_{\\text{abs}} = 10^{-8}$。秩是 $s_i > \\tau_{\\text{abs}}$ 的数量。此方法简单但对缩放不够鲁棒，因为一个被缩小的矩阵即使是满秩的，其小奇异值也可能低于阈值。\n\n2.  **严谨相对容差**：容差根据矩阵属性进行缩放：$\\tau_{\\text{rel}} = s_1 \\cdot \\max(m,n) \\cdot \\epsilon_{\\text{mach}}$，其中 $s_1 = s_{\\max}(M)$ 是最大奇异值，$\\epsilon_{\\text{mach}}$ 是机器 epsilon（从 $1.0$ 到下一个可表示数的距离）。这种方法能适应矩阵元素的大小，是高质量数值软件中的标准方法。\n\n我们将实现一个函数来使用这两种方法计算秩。\n\n**Kalman 可观测性检验**\n\n对于一个状态维度为 $n$、输出维度为 $p$ 的系统 $(A,C)$，可观测性矩阵构建如下：\n$$ O = \\begin{bmatrix} C \\\\ CA \\\\ CA^2 \\\\ \\vdots \\\\ CA^{n-1} \\end{bmatrix} \\in \\mathbb{R}^{np \\times n} $$\n如果 $\\operatorname{rank}(O) = n$，则系统是可观测的。\nKalman 检验的算法将是：\n1.  给定 $A$ 和 $C$，确定 $n = \\operatorname{dim}(A)$。\n2.  通过计算矩阵幂 $A^k$ 和乘积 $CA^k$（其中 $k = 0, \\dots, n-1$），并垂直堆叠结果来构建矩阵 $O$。\n3.  使用简单阈值计算 $\\operatorname{rank}(O)$，并检查其是否等于 $n$。\n4.  使用严谨阈值计算 $\\operatorname{rank}(O)$，并检查其是否等于 $n$。\n\n**Popov-Belevitch-Hautus (PBH) 可观测性检验**\n\nPBH 检验为可观测性提供了一个替代的频域条件。系统是可观测的，当且仅当对于矩阵 $A$ 的每个特征值 $\\lambda \\in \\mathbb{C}$，以下秩条件成立：\n$$ \\operatorname{rank}\\left(\\begin{bmatrix} \\lambda I - A \\\\ C \\end{bmatrix}\\right) = n $$\n矩阵 $\\begin{bmatrix} \\lambda I - A \\\\ C \\end{bmatrix}$ 是一个 $(n+p) \\times n$ 的矩阵。由于特征值 $\\lambda$ 可能是复数，该矩阵通常是复值矩阵。SVD 对复矩阵有很好的定义，其奇异值是实数且非负。\nPBH 检验的算法将是：\n1.  给定 $A$ 和 $C$，确定 $n = \\operatorname{dim}(A)$。\n2.  数值计算 $A$ 的所有特征值 $\\lambda_1, \\dots, \\lambda_n$。\n3.  对于每种秩方法（简单、严谨），将可观测性标志初始化为 `True`。\n4.  遍历每个特征值 $\\lambda_j$：\n    a. 构建 PBH 矩阵 $M_j = \\begin{bmatrix} \\lambda_j I - A \\\\ C \\end{bmatrix}$。\n    b. 使用所选方法计算 $M_j$ 的秩。\n    c. 如果秩小于 $n$，则该特征值的检验失败。将相应的可观测性标志设置为 `False`，并且可以终止该方法的循环。\n5.  每种方法的最终结果是在检查所有特征值后其可观测性标志的值。\n\n**每个测试用例的算法流程**\n\n对于测试套件中提供的每一对 $(A, C)$：\n1.  令 $n$ 为 $A$ 的行数/列数。\n2.  **Kalman 检验（简单）**：构建 $O$。使用 $\\tau_{\\text{abs}}$ 计算其秩。如果秩等于 $n$，结果为 `True`，否则为 `False`。\n3.  **Kalman 检验（严谨）**：构建 $O$。使用 $\\tau_{\\text{rel}}$ 计算其秩。如果秩等于 $n$，结果为 `True`，否则为 `False`。\n4.  **PBH 检验（简单）**：计算 $A$ 的特征值。对于每个特征值 $\\lambda$，构建 $M_\\lambda$ 并使用 $\\tau_{\\text{abs}}$ 计算其秩。如果对所有特征值秩都为 $n$，则最终结果为 `True`，否则为 `False`。\n5.  **PBH 检验（严谨）**：计算 $A$ 的特征值。对于每个特征值 $\\lambda$，构建 $M_\\lambda$ 并使用 $\\tau_{\\text{rel}}$ 计算其秩。如果对所有特征值秩都为 $n$，则最终结果为 `True`，否则为 `False`。\n6.  按指定顺序收集四个布尔值结果。\n\n此流程将应用于所有四个测试用例，结果将被汇总到一个单一列表中以供最终输出。实现将使用双精度浮点数（`numpy.double`）及相应的机器 epsilon。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_rank(M, method, abs_tol=1e-8):\n    \"\"\"\n    Computes the numerical rank of a matrix using SVD and a specified tolerance method.\n\n    Args:\n        M (np.ndarray): The matrix (real or complex) whose rank is to be computed.\n        method (str): The method for thresholding. Must be 'naive' or 'principled'.\n        abs_tol (float): The absolute tolerance for the 'naive' method.\n\n    Returns:\n        int: The numerical rank of the matrix.\n    \"\"\"\n    if M.size == 0:\n        return 0\n\n    s = np.linalg.svd(M, compute_uv=False)\n    \n    # s is sorted in descending order. s[0] is the largest singular value.\n    if s.size == 0:\n        return 0\n\n    if method == 'naive':\n        tol = abs_tol\n    elif method == 'principled':\n        eps_mach = np.finfo(s.dtype).eps\n        m, n = M.shape\n        # According to standard literature (e.g., Golub & Van Loan), the tolerance is\n        # relative to the largest singular value and matrix dimensions.\n        tol = s[0] * max(m, n) * eps_mach\n    else:\n        raise ValueError(\"Unknown method for rank computation. Must be 'naive' or 'principled'.\")\n\n    return np.sum(s > tol)\n\ndef check_observability(A, C):\n    \"\"\"\n    Performs four observability checks on the pair (A, C) and returns the boolean results.\n    \n    The four checks are:\n    1. Kalman test with naive absolute threshold.\n    2. Kalman test with principled relative tolerance.\n    3. PBH test with naive absolute threshold.\n    4. PBH test with principled relative tolerance.\n    \n    Args:\n        A (np.ndarray): The state matrix (n x n).\n        C (np.ndarray): The output matrix (p x n).\n        \n    Returns:\n        list[bool]: A list of four boolean values representing the outcomes of the tests.\n    \"\"\"\n    n, _ = A.shape\n    p = C.shape[0] if C.ndim > 1 else 1\n\n    # --- Kalman Test ---\n    # Construct observability matrix O\n    O = np.zeros((n * p, n), dtype=np.double)\n    O[0:p, :] = C\n    CA_power = C\n    for i in range(1, n):\n        CA_power = CA_power @ A\n        O[i*p:(i+1)*p, :] = CA_power\n\n    # 1. Kalman test with naive threshold\n    rank_kalman_naive = compute_rank(O, method='naive')\n    is_obs_kalman_naive = (rank_kalman_naive == n)\n\n    # 2. Kalman test with principled threshold\n    rank_kalman_principled = compute_rank(O, method='principled')\n    is_obs_kalman_principled = (rank_kalman_principled == n)\n    \n    # --- PBH Test ---\n    eigenvalues = np.linalg.eigvals(A)\n    \n    # 3. PBH test with naive threshold\n    is_obs_pbh_naive = True\n    for lam in eigenvalues:\n        # Construct PBH matrix for eigenvalue lam\n        M_lam = np.vstack((lam * np.eye(n, dtype=np.complex128) - A, C))\n        if compute_rank(M_lam, method='naive') < n:\n            is_obs_pbh_naive = False\n            break\n            \n    # 4. PBH test with principled threshold\n    is_obs_pbh_principled = True\n    for lam in eigenvalues:\n        # Construct PBH matrix for eigenvalue lam\n        M_lam = np.vstack((lam * np.eye(n, dtype=np.complex128) - A, C))\n        if compute_rank(M_lam, method='principled') < n:\n            is_obs_pbh_principled = False\n            break\n            \n    return [is_obs_kalman_naive, is_obs_kalman_principled, is_obs_pbh_naive, is_obs_pbh_principled]\n\n\ndef solve():\n    \"\"\"\n    Defines test cases, runs observability checks, and prints the aggregated results.\n    \"\"\"\n    # Define the test cases from the problem statement using double precision.\n    test_cases = [\n        # Case 1: well-conditioned, observable\n        (np.array([[0, 1], [-2, -3]], dtype=np.double), \n         np.array([[1, 0]], dtype=np.double)),\n        # Case 2: observable, scaled near underflow\n        (np.array([[0, 1], [-2, -3]], dtype=np.double), \n         1e-12 * np.array([[1, 0]], dtype=np.double)),\n        # Case 3: exactly unobservable\n        (np.array([[0, 1], [0, 0]], dtype=np.double), \n         np.array([[0, 1]], dtype=np.double)),\n        # Case 4: dimension 3, observable companion form\n        (np.array([[0, 1, 0], [0, 0, 1], [-1, -1, -1]], dtype=np.double), \n         np.array([[1, 0, 0]], dtype=np.double)),\n    ]\n\n    all_results = []\n    for A, C in test_cases:\n        results = check_observability(A, C)\n        all_results.extend(results)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, all_results))}]\")\n\nsolve()\n```", "id": "2735971"}]}