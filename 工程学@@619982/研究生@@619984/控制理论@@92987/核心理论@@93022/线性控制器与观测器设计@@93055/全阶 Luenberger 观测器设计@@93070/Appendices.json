{"hands_on_practices": [{"introduction": "在我们设计观测器之前，必须首先回答一个关键问题：从系统的输出推断其内部状态是否可能？本练习 [@problem_id:2699852] 将引导您完成对可观测性 (observability) 和可检测性 (detectability) 的基础分析。通过一个经典案例，您将学会运用可观测性矩阵并分析系统的本征结构 (eigenstructure)，以判断是否可以构建一个稳定的状态估计器。", "problem": "考虑一个连续时间线性时不变状态空间模型，其状态矩阵 $A \\in \\mathbb{R}^{2 \\times 2}$ 和输出矩阵 $C \\in \\mathbb{R}^{1 \\times 2}$ 由 $A=\\begin{pmatrix}0 & 1 \\\\ 0 & 0\\end{pmatrix}$ 和 $C=\\begin{pmatrix}0 & 1\\end{pmatrix}$ 给出。从线性系统理论的基本定义出发，计算能观性矩阵 $\\mathcal{O}$，判断矩阵对 $\\left(A,C\\right)$ 是否能观，然后通过分析相对于 $A$ 的谱的不可观测模态来评估能检测性。通过明确地与连续时间线性时不变系统的能观性和能检测性定义联系起来，并利用 $A$ 的特征结构与不可观测子空间的关系，来证明每一个结论。最后，报告能观性矩阵 $\\mathcal{O}$ 的秩作为您的最终数值答案。", "solution": "该问题要求对一个连续时间线性时不变（LTI）系统进行深入分析，特别是关于其能观性和能检测性性质。该系统由状态矩阵 $A$ 和输出矩阵 $C$ 定义。\n\n给定的系统矩阵是：\n$$\nA = \\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix} \\in \\mathbb{R}^{2 \\times 2}\n$$\n$$\nC = \\begin{pmatrix} 0 & 1 \\end{pmatrix} \\in \\mathbb{R}^{1 \\times 2}\n$$\n状态空间的维数是 $n=2$。\n\n首先，我们讨论能观性问题。如果对于任意初始状态 $x(0)$，都可以在某个有限时间区间 $[0, t_f]$ 内通过系统的输出 $y(t)$ 确定该状态，则称系统是能观的。对于一个LTI系统，此性质等价于能观性矩阵 $\\mathcal{O}$ 的一个秩条件。\n\n对于一个 $n$ 阶系统，能观性矩阵构造如下：\n$$\n\\mathcal{O} = \\begin{pmatrix} C \\\\ CA \\\\ \\vdots \\\\ CA^{n-1} \\end{pmatrix}\n$$\n在本例中，$n=2$，所以能观性矩阵为：\n$$\n\\mathcal{O} = \\begin{pmatrix} C \\\\ CA \\end{pmatrix}\n$$\n我们必须计算乘积 $CA$。\n$$\nCA = \\begin{pmatrix} 0 & 1 \\end{pmatrix} \\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix} = \\begin{pmatrix} (0)(0) + (1)(0) & (0)(1) + (1)(0) \\end{pmatrix} = \\begin{pmatrix} 0 & 0 \\end{pmatrix}\n$$\n将 $C$ 和 $CA$ 代入 $\\mathcal{O}$ 的结构中，我们得到能观性矩阵：\n$$\n\\mathcal{O} = \\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix}\n$$\n能观性判据，通常称为Kalman能观性秩判据，指出矩阵对 $(A, C)$ 是能观的当且仅当能观性矩阵 $\\mathcal{O}$ 具有满列秩，即秩等于状态空间的维数 $n$。\n我们必须确定 $\\mathcal{O}$ 的秩。一个矩阵的秩是其线性无关的行或列的数量。通过观察，$\\mathcal{O}$ 的第二行是零向量，而第一行非零。因此，该矩阵的秩为 $1$。\n$$\n\\text{rank}(\\mathcal{O}) = \\text{rank}\\left(\\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix}\\right) = 1\n$$\n由于 $\\text{rank}(\\mathcal{O}) = 1$ 且 $n=2$，条件 $\\text{rank}(\\mathcal{O}) = n$ 未被满足。因此，该系统是**不能观**的。\n\n缺乏能观性意味着存在一个不可观测子空间，即能观性矩阵的零空间 $\\mathcal{N}(\\mathcal{O})$。处于该子空间中的任何状态向量 $x_0$ 将产生恒为零的输出，即对于所有 $t \\ge 0$，$y(t) = Ce^{At}x_0 = 0$，这使得它无法与零状态区分。我们来求这个子空间。我们寻找一个向量 $v = \\begin{pmatrix} v_1 \\\\ v_2 \\end{pmatrix}$ 使得 $\\mathcal{O}v = 0$。\n$$\n\\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix} \\begin{pmatrix} v_1 \\\\ v_2 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}\n$$\n这个矩阵-向量方程得到标量方程 $v_2 = 0$。分量 $v_1$ 不受约束，可以是任意实数。因此，不可观测子空间中的任何向量都具有 $\\begin{pmatrix} v_1 \\\\ 0 \\end{pmatrix}$ 的形式。不可观测子空间是由向量 $\\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ 张成的空间。\n$$\n\\mathcal{N}(\\mathcal{O}) = \\text{span}\\left\\{\\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}\\right\\}\n$$\n接下来，我们评估能检测性。如果一个系统的所有不可观测模态都是渐近稳定的，则该系统是能检测的。对于连续时间系统，这意味着对应于不可观测子空间中特征向量的 $A$ 的每个特征值都必须具有严格为负的实部。为了分析这一点，我们必须确定 $A$ 的特征结构。\n\nA 的特征值 $\\lambda$ 是特征方程 $\\det(A - \\lambda I) = 0$ 的根。\n$$\n\\det\\left(\\begin{pmatrix} -\\lambda & 1 \\\\ 0 & -\\lambda \\end{pmatrix}\\right) = (-\\lambda)(-\\lambda) - (1)(0) = \\lambda^2 = 0\n$$\n矩阵 $A$ 在 $\\lambda = 0$ 处有一个重复特征值。\n\n现在我们求对应于 $\\lambda = 0$ 的特征向量。我们求解 $(A - 0I)v = 0$，即 $Av = 0$。\n$$\n\\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix} \\begin{pmatrix} v_1 \\\\ v_2 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}\n$$\n这给出了方程 $v_2 = 0$。相应的特征向量形式为 $\\begin{pmatrix} v_1 \\\\ 0 \\end{pmatrix}$。我们可以选择特征向量 $v = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$。\n注意到这个特征向量正是不可观测子空间 $\\mathcal{N}(\\mathcal{O})$ 的基向量。这意味着与不可观测动态相关联的模态（特征值）是 $\\lambda = 0$。\n\n对于能检测性，任何不可观测的特征值 $\\lambda$ 必须满足 $\\text{Re}(\\lambda) < 0$。在我们的例子中，不可观测的特征值是 $\\lambda = 0$，其 $\\text{Re}(0)=0$。由于这个条件没有被满足（因为 $0$ 并不严格小于 $0$），所以该系统是**不能检测**的。不可观测状态 $x_1$ 的动态由 $\\lambda=0$ 支配，这意味着如果 $x = \\begin{pmatrix} x_1(0) \\\\ 0 \\end{pmatrix}$，那么 $\\dot{x}_1(t) = 0$，所以 $x_1(t) = x_1(0)$。这个状态分量不会衰减到零，并且对输出 $y(t) = x_2(t) = 0$ 是不可见的。与此模态相关的状态估计器误差不会收敛到零。\n\n总而言之，能观性矩阵是 $\\mathcal{O} = \\begin{pmatrix} 0 & 1 \\\\ 0 & 0 \\end{pmatrix}$，其秩为 $1$，小于状态维数 $n=2$，因此系统是不能观的。不可观测子空间由对应于特征值 $\\lambda=0$ 的 $A$ 的特征向量张成。由于这个不可观测模态不位于复平面的开左半平面，因此系统是不能检测的。\n\n最后的问题要求能观性矩阵 $\\mathcal{O}$ 的秩。根据我们的计算，这个值是 $1$。", "answer": "$$\n\\boxed{1}\n$$", "id": "2699852"}, {"introduction": "一旦确认系统是可观测的，我们就可以着手设计观测器增益 $L$ 以实现期望的性能。这个实践问题 [@problem_id:2699826] 聚焦于经典的极点配置 (pole placement) 技术，您将通过计算增益 $L$ 将误差动态的特征值放置在指定的位置。这项动手计算对于理解增益矩阵如何直接影响观测器的瞬态响应至关重要。", "problem": "考虑由状态空间模型描述的连续时间、有限维线性时不变（LTI）系统\n$$\n\\dot{x}(t) = A x(t), \\quad y(t) = C x(t),\n$$\n其中 $A = \\begin{bmatrix} 1 & 2 \\\\ 0 & 1 \\end{bmatrix}$ 且 $C = \\begin{bmatrix} 1 & 0 \\end{bmatrix}$。一个全阶 Luenberger 观测器定义为\n$$\n\\dot{\\hat{x}}(t) = A \\hat{x}(t) + L \\big(y(t) - C \\hat{x}(t)\\big),\n$$\n其中观测器增益 $L \\in \\mathbb{R}^{2 \\times 1}$。从观测器的定义和估计误差 $e(t) \\triangleq x(t) - \\hat{x}(t)$ 出发，推导误差动力学，并用其确定观测器增益 $L$，使得观测器误差动力学特征值位于实数位置 $\\{-2,-3\\}$。然后，通过显式计算验证所得矩阵 $A - L C$ 具有期望的特征多项式。\n\n将 $L$ 的元素表示为单个行矩阵。无需四舍五入。最终答案必须以单个解析表达式的形式给出。最终答案中不包含任何单位。", "solution": "首先，我们推导估计误差 $e(t) = x(t) - \\hat{x}(t)$ 的动力学。我们将 $e(t)$ 对时间 $t$ 求导：\n$$\n\\dot{e}(t) = \\dot{x}(t) - \\dot{\\hat{x}}(t)\n$$\n代入给定的状态和观测器动力学：\n$$\n\\dot{e}(t) = A x(t) - \\left[ A \\hat{x}(t) + L \\big(y(t) - C \\hat{x}(t)\\big) \\right]\n$$\n代入输出方程 $y(t) = C x(t)$：\n$$\n\\dot{e}(t) = A x(t) - A \\hat{x}(t) - L \\big(C x(t) - C \\hat{x}(t)\\big)\n$$\n提取公因式：\n$$\n\\dot{e}(t) = A \\big(x(t) - \\hat{x}(t)\\big) - L C \\big(x(t) - \\hat{x}(t)\\big)\n$$\n使用误差 $e(t)$ 的定义，我们得到误差动力学：\n$$\n\\dot{e}(t) = (A - LC)e(t)\n$$\n观测器误差的稳定性和响应由矩阵 $A - LC$ 的特征值决定。任意配置这些特征值的前提是系统对 $(A, C)$ 是可观测的。我们计算可观测性矩阵：\n$$\n\\mathcal{O} = \\begin{bmatrix} C \\\\ CA \\end{bmatrix} = \\begin{bmatrix} 1 & 0 \\\\ 1 & 2 \\end{bmatrix}\n$$\n由于 $\\det(\\mathcal{O}) = 2 \\neq 0$，矩阵满秩，系统是完全可观测的。因此，我们可以继续进行极点配置。\n\n问题要求将特征值配置在 $\\{-2, -3\\}$。对应的期望特征多项式 $p_{des}(\\lambda)$ 为：\n$$\np_{des}(\\lambda) = (\\lambda - (-2))(\\lambda - (-3)) = (\\lambda + 2)(\\lambda + 3) = \\lambda^2 + 5\\lambda + 6\n$$\n现在，我们根据 $L$ 的分量计算 $A - LC$ 的实际特征多项式 $p_{act}(\\lambda)$。设 $L = \\begin{bmatrix} l_1 \\\\ l_2 \\end{bmatrix}$，则误差动力学矩阵 $A - LC$ 为：\n$$\nA - LC = \\begin{bmatrix} 1 & 2 \\\\ 0 & 1 \\end{bmatrix} - \\begin{bmatrix} l_1 \\\\ l_2 \\end{bmatrix} \\begin{bmatrix} 1 & 0 \\end{bmatrix} = \\begin{bmatrix} 1 - l_1 & 2 \\\\ -l_2 & 1 \\end{bmatrix}\n$$\n其特征多项式 $p_{act}(\\lambda) = \\det(\\lambda I - (A - LC))$ 为：\n$$\n\\begin{aligned}\np_{act}(\\lambda) &= \\det \\begin{bmatrix} \\lambda - (1 - l_1) & -2 \\\\ l_2 & \\lambda - 1 \\end{bmatrix} \\\\\n&= (\\lambda - 1 + l_1)(\\lambda - 1) - (-2)(l_2) \\\\\n&= \\lambda^2 - \\lambda + l_1\\lambda - \\lambda + 1 - l_1 + 2l_2 \\\\\n&= \\lambda^2 + (l_1 - 2)\\lambda + (1 - l_1 + 2l_2)\n\\end{aligned}\n$$\n为了实现期望的特征值配置，我们令 $p_{act}(\\lambda)$ 和 $p_{des}(\\lambda)$ 的系数相等：\n$$\n\\lambda^2 + (l_1 - 2)\\lambda + (1 - l_1 + 2l_2) = \\lambda^2 + 5\\lambda + 6\n$$\n比较 $\\lambda$ 各次幂的系数：\n1.  $\\lambda^1$ 的系数：$l_1 - 2 = 5 \\implies l_1 = 7$。\n2.  $\\lambda^0$ 的系数：$1 - l_1 + 2l_2 = 6$。\n\n将 $l_1 = 7$ 代入第二个方程：\n$$\n1 - 7 + 2l_2 = 6 \\implies -6 + 2l_2 = 6 \\implies 2l_2 = 12 \\implies l_2 = 6\n$$\n因此，观测器增益矩阵为：\n$$\nL = \\begin{bmatrix} 7 \\\\ 6 \\end{bmatrix}\n$$\n最后，我们通过显式计算验证所得矩阵 $A - LC$ 具有期望的特征多项式。当 $l_1=7$ 且 $l_2=6$ 时，该矩阵为：\n$$\nA - LC = \\begin{bmatrix} 1 - 7 & 2 \\\\ -6 & 1 \\end{bmatrix} = \\begin{bmatrix} -6 & 2 \\\\ -6 & 1 \\end{bmatrix}\n$$\n该矩阵的特征多项式为：\n$$\n\\det(\\lambda I - (A-LC)) = \\det \\begin{pmatrix} \\lambda + 6 & -2 \\\\ 6 & \\lambda - 1 \\end{pmatrix} = (\\lambda + 6)(\\lambda - 1) - (-2)(6) = \\lambda^2 - \\lambda + 6\\lambda - 6 + 12 = \\lambda^2 + 5\\lambda + 6\n$$\n该多项式与期望多项式 $p_{des}(\\lambda)$ 相同，其根为 $\\lambda = -2$ 和 $\\lambda = -3$，验证成功。", "answer": "$$\n\\boxed{\\begin{pmatrix} 7 & 6 \\end{pmatrix}}\n$$", "id": "2699826"}, {"introduction": "虽然极点配置使我们能够精确控制误差动态的特征值，但现实世界的系统总是受到噪声的干扰。这个计算练习 [@problem_id:2699797] 要求您将极点配置方法与一种旨在最小化噪声影响的优化设计（卡尔曼滤波器的基础原理）进行比较。通过实现两种设计并评估其性能指标，您将获得关于瞬态响应速度与随机扰动鲁棒性之间关键权衡的实践见解。", "problem": "为连续时间线性时不变系统设计并比较两种全阶 Luenberger 观测器增益，所用方法为：极点配置和一种基于线性矩阵不等式 (LMI) 目标的优化方法。推导过程需从线性系统和随机过程的基本原理出发，避免在问题陈述中使用任何简便公式。待设计的观测器所对应的受控对象，其状态方程为 $\\dot{x}(t) = A x(t) + w(t)$，测量方程为 $y(t) = C x(t) + v(t)$，其中 $x(t) \\in \\mathbb{R}^n$，$y(t) \\in \\mathbb{R}^p$，$w(t)$ 和 $v(t)$ 是相互独立的零均值白噪声，其协方差矩阵分别为 $W \\succeq 0$ 和 $R \\succ 0$。一个全阶 Luenberger 观测器的形式为 $\\dot{\\hat{x}}(t) = A \\hat{x}(t) + L(y(t) - C \\hat{x}(t))$，其中 $L \\in \\mathbb{R}^{n \\times p}$ 是待设计的观测器增益。估计误差 $e(t) = x(t) - \\hat{x}(t)$ 服从受噪声输入扰动的确定性误差动态，必须评估其稳定性和噪声敏感度。\n\n对于每个测试用例，您必须计算两种增益：\n- 通过极点配置获得的增益 $L_{\\mathrm{pp}}$，使得 $A - L_{\\mathrm{pp}} C$ 的特征值等于一组给定的稳定目标位置。\n- 通过求解标准估计问题获得的增益 $L_{\\mathrm{lmi}}$，该问题旨在最小化由协方差为 $W$ 和 $R$ 的白噪声所引起的稳态估计误差协方差；这是经典的线性二次高斯 (LQG) 估计器设计，被表述为一个带有线性矩阵不等式 (LMI) 目标的优化问题。该解必须是稳定的。\n\n对每个增益，评估以下指标：\n- 谱李雅普诺夫衰减率 $\\alpha_{\\mathrm{spec}}$，定义为满足 $A - L C$ 的所有特征值 $\\lambda_i$ 都有 $\\mathrm{Re}(\\lambda_i(A - L C)) \\le -\\alpha_{\\mathrm{spec}}$ 的最大非负实数。等价地，$\\alpha_{\\mathrm{spec}} = -\\max_i \\mathrm{Re}(\\lambda_i(A - L C))$。\n- 噪声到误差的增益平方 $g_w^2$ 和 $g_v^2$，对于稳定的线性时不变误差系统 $\\dot{e}(t) = (A - L C) e(t) + w(t) - L v(t)$（输出等于 $e(t)$），它们分别定义为从 $w$ 到 $e$ 和从 $v$ 到 $e$ 的 $\\mathcal{H}_2$ 范数的平方。对于稳定的 $(A - L C)$，这些值是良定义的，并且可以从每个噪声通道引起的平稳协方差解中计算得出。\n\n您的推导必须基于以下基本原理：\n- 线性时不变系统的解以及特征值与指数稳定性之间的关系。\n- 可观测性的定义，以及对于一个可观测对 $(A, C)$，可以通过恰当选择 $L$ 来任意配置 $A - L C$ 的特征值这一事实。\n- 由白噪声驱动的稳定线性系统的稳态协方差的定义及其通过连续时间李雅普诺夫方程进行的表征。\n\n您的程序必须为以下测试套件数值地实现这些计算。每个测试用例包含矩阵 $A$、$C$、协方差 $W$、$R$ 以及用于极点配置设计的期望极点集。所有数字都是实数且维度一致。\n\n测试用例 1：\n- $A = \\begin{bmatrix} 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ -3 & -3 & -1 \\end{bmatrix}$,\n- $C = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\end{bmatrix}$,\n- $W = 0.1 \\, I_3$,\n- $R = 0.05 \\, I_2$,\n- $A - L_{\\mathrm{pp}} C$ 的期望极点：$\\{-2, -3, -4\\}$。\n\n测试用例 2：\n- $A = \\begin{bmatrix} 0 & 1 & 0 \\\\ -2 & -0.2 & 0 \\\\ 0 & 0 & -0.5 \\end{bmatrix}$,\n- $C = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$,\n- $W = \\mathrm{diag}(0.5, 0.1, 0.2)$,\n- $R = \\mathrm{diag}(0.2, 0.05)$,\n- $A - L_{\\mathrm{pp}} C$ 的期望极点：$\\{-1, -2, -3\\}$。\n\n测试用例 3：\n- $A = \\begin{bmatrix} 0 & 1 \\\\ -4 & -1 \\end{bmatrix}$,\n- $C = \\begin{bmatrix} 1 & 1 \\end{bmatrix}$,\n- $W = \\begin{bmatrix} 0.1 & 0 \\\\ 0 & 0.3 \\end{bmatrix}$,\n- $R = \\begin{bmatrix} 0.1 \\end{bmatrix}$,\n- $A - L_{\\mathrm{pp}} C$ 的期望极点：$\\{-2.5, -3.0\\}$。\n\n对每个测试用例，计算：\n- 对于 $L_{\\mathrm{pp}}$：三元组 $(\\alpha_{\\mathrm{spec}}, g_w^2, g_v^2)$。\n- 对于 $L_{\\mathrm{lmi}}$：三元组 $(\\alpha_{\\mathrm{spec}}, g_w^2, g_v^2)$。\n\n用于评估的数值细节和定义：\n- 谱李雅普诺夫衰减率为 $\\alpha_{\\mathrm{spec}} = -\\max_i \\mathrm{Re}(\\lambda_i(A - L C))$。\n- 对于噪声增益的平方，定义 $A_L = A - L C$。对于 $w$ 通道，定义 $g_w^2 = \\mathrm{trace}(P_w)$，其中 $P_w$ 是 $A_L P_w + P_w A_L^\\top + W = 0$ 的唯一对称解。对于 $v$ 通道，定义 $g_v^2 = \\mathrm{trace}(P_v)$，其中 $P_v$ 是 $A_L P_v + P_v A_L^\\top + L R L^\\top = 0$ 的解。\n\n程序的最终输出格式：\n- 程序应生成单行输出，该输出包含一个有 3 个条目的列表，每个条目对应一个测试用例。每个测试用例条目本身是一个包含 6 个浮点数的列表，顺序如下：$[\\alpha_{\\mathrm{spec}}(L_{\\mathrm{pp}}), g_w^2(L_{\\mathrm{pp}}), g_v^2(L_{\\mathrm{pp}}), \\alpha_{\\mathrm{spec}}(L_{\\mathrm{lmi}}), g_w^2(L_{\\mathrm{lmi}}), g_v^2(L_{\\mathrm{lmi}})]$。\n- 所有浮点数必须四舍五入到 6 位小数。\n- 输出不得包含空格，例如，一个可接受的结构是 $[[a_1,a_2,a_3,a_4,a_5,a_6],[b_1,b_2,b_3,b_4,b_5,b_6],[c_1,c_2,c_3,c_4,c_5,c_6]]$。\n\n不涉及任何物理单位或角度；所有量均为无量纲实数。您的程序必须是完全自包含的，且不得要求任何用户输入。", "solution": "所提出的问题要求为连续时间线性时不变 (LTI) 系统设计并比较评估两种全阶 Luenberger 观测器增益。这是控制理论和信号处理中的一个基本问题。分析将按要求从基本原理出发。\n\n所考虑的系统由以下状态空间模型描述：\n$$ \\dot{x}(t) = A x(t) + w(t) $$\n$$ y(t) = C x(t) + v(t) $$\n其中 $x(t) \\in \\mathbb{R}^n$ 是状态向量，$y(t) \\in \\mathbb{R}^p$ 是测量向量，$A$ 和 $C$ 是具有适当维度的系统矩阵。项 $w(t)$ 和 $v(t)$ 表示相互独立的零均值高斯白噪声过程，其协方差矩阵分别为 $W \\succeq 0$ 和 $R \\succ 0$。\n\n一个全阶 Luenberger 观测器旨在使用可用的测量值 $y(t)$ 来估计状态 $x(t)$。该观测器的结构如下：\n$$ \\dot{\\hat{x}}(t) = A \\hat{x}(t) + L(y(t) - C \\hat{x}(t)) $$\n其中 $\\hat{x}(t)$ 是状态估计值，$L \\in \\mathbb{R}^{n \\times p}$ 是待设计的观测器增益矩阵。\n\n估计误差定义为 $e(t) = x(t) - \\hat{x}(t)$。该误差的动态特性通过从状态方程中减去观测器方程导出：\n$$ \\dot{e}(t) = \\dot{x}(t) - \\dot{\\hat{x}}(t) = (A x(t) + w(t)) - (A \\hat{x}(t) + L(C x(t) + v(t) - C \\hat{x}(t))) $$\n$$ \\dot{e}(t) = A(x(t) - \\hat{x}(t)) - L(C(x(t) - \\hat{x}(t)) + v(t)) + w(t) $$\n$$ \\dot{e}(t) = (A - L C) e(t) + w(t) - L v(t) $$\n观测器的稳定性由误差动态的稳定性决定。在确定性情况（即 $w(t)=0, v(t)=0$）下，误差保证收敛到零，当且仅当矩阵 $A_L = A - L C$ 是 Hurwitz 矩阵，即其所有特征值都具有负实部。\n\n将对两种设计增益矩阵 $L$ 的方法进行比较。\n\n1.  **通过极点配置的观测器增益 ($L_{\\mathrm{pp}}$)**\n\n该方法通过选择观测器增益 $L$，将误差动态矩阵 $A_L = A - L C$ 的特征值配置在复平面中预先指定的稳定位置。任意配置 $A - L C$ 特征值的能力取决于对 $(A, C)$ 的可观测性。如果可观测性矩阵 $\\mathcal{O} = [C^\\top, A^\\top C^\\top, \\ldots, (A^\\top)^{n-1} C^\\top]^\\top$ 具有满列秩，即 $\\mathrm{rank}(\\mathcal{O}) = n$，则对 $(A, C)$ 是可观测的。\n\n观测器的极点配置问题通常通过利用与状态反馈控制问题的对偶原理来解决。$A - L C$ 的特征值与其转置 $(A - L C)^\\top = A^\\top - C^\\top L^\\top$ 的特征值相同。如果我们令 $K = L^\\top$，问题就变为寻找一个状态反馈增益 $K$，使得由矩阵 $(A^\\top, C^\\top)$ 定义的对偶系统的闭环系统矩阵 $A^\\top - C^\\top K$ 的特征值被配置在期望的位置。这是一个标准的状态反馈极点配置问题，如果对 $(A^\\top, C^\\top)$ 是可控的，则该问题是可解的。对 $(A^\\top, C^\\top)$ 的可控性等价于对 $(A, C)$ 的可观测性。一旦找到对偶反馈增益 $K$，观测器增益即可恢复为 $L_{\\mathrm{pp}} = K^\\top$。\n\n2.  **最优 LQG 观测器增益 ($L_{\\mathrm{lmi}}$)**\n\n这种方法旨在找到一个观测器增益 $L$，使其在过程噪声 $w(t)$ 和测量噪声 $v(t)$ 的影响方面达到最优。其目标是最小化稳态估计误差协方差 $P_e = \\lim_{t \\to \\infty} \\mathbb{E}[e(t)e(t)^\\top]$。对于一个稳定的矩阵 $A_L = A - L C$，稳态协方差 $P_e$ 是以下连续时间李雅普诺夫方程的唯一对称半正定解：\n$$ (A - L C) P_e + P_e (A - L C)^\\top + W + L R L^\\top = 0 $$\n问题是找到使 $P_e$ 的迹最小化的增益 $L$，即 $\\min_L \\mathrm{trace}(P_e)$。这是标准的线性二次高斯 (LQG) 估计问题，可通过 Kalman-Bucy 滤波器求解。问题陈述将其称为“LMI 目标”，这将其置于现代基于凸优化的控制框架内，尽管其解通常通过求解代数黎卡提方程 (ARE) 获得。\n\n最小化 $\\mathrm{trace}(P_e)$ 的最优增益 $L_{\\mathrm{lmi}}$ 由下式给出：\n$$ L_{\\mathrm{lmi}} = P C^\\top R^{-1} $$\n其中 $P$ 是以下连续时间代数黎卡提方程 (ARE) 的唯一对称半正定稳定化解：\n$$ A P + P A^\\top - P C^\\top R^{-1} C P + W = 0 $$\n该方程通过数值方法求解。如果对 $(A, C)$ 是可检测的（比可观测性更弱的条件）且对 $(A, \\sqrt{W})$ 是可镇定的，则存在唯一的稳定化解 $P \\succeq 0$。\n\n**性能指标**\n\n对于每个设计好的增益 $L$，我们使用三个指标来评估其性能：\n\n-   **谱李雅普诺夫衰减率 ($\\alpha_{\\mathrm{spec}}$)**：该指标量化了误差动态的稳定性。它是在没有噪声的情况下误差的最快保证指数衰减率，定义为 $\\alpha_{\\mathrm{spec}} = -\\max_i \\mathrm{Re}(\\lambda_i(A - L C))$。一个更大的正值表示观测器更稳定，误差收敛更快。\n\n-   **噪声到误差的增益平方 ($g_w^2$ 和 $g_v^2$)**：这些指标量化了估计误差对过程噪声和测量噪声的敏感度。它们是从各自的噪声输入到误差的 $\\mathcal{H}_2$ 范数的平方。因为 $w(t)$ 和 $v(t)$ 是不相关的，它们对总误差协方差的贡献可以分开分析。\n    -   从 $w(t)$ 到 $e(t)$ 的增益是 $g_w^2 = \\mathrm{trace}(P_w)$，其中 $P_w$ 是由 $w(t)$ 引起的稳态误差协方差贡献，通过求解李雅普诺夫方程得到：\n        $$ (A - L C) P_w + P_w (A - L C)^\\top + W = 0 $$\n    -   从 $v(t)$ 到 $e(t)$ 的增益是 $g_v^2 = \\mathrm{trace}(P_v)$。来自 $v(t)$ 的误差动态输入为 $-L v(t)$，其协方差为 $L R L^\\top$。因此，$P_v$ 是以下李雅普诺夫方程的解：\n        $$ (A - L C) P_v + P_v (A - L C)^\\top + L R L^\\top = 0 $$\n\nLQG 设计就其本质而言，最小化了总误差方差，即 $\\mathrm{trace}(P_e) = \\mathrm{trace}(P_w + P_v) = g_w^2 + g_v^2$。相比之下，极点配置设计对瞬态响应（稳定性和速度）提供了直接控制，但在噪声抑制方面不提供任何内在的最优性保证。对两种设计的这些指标进行比较将说明这种基本的权衡。\n\n每个测试用例的数值求解将通过使用成熟的数值线性代数程序来实现这些设计原理。", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import solve_continuous_are, solve_continuous_lyapunov, eigvals, inv\nfrom scipy.signal import place_poles\nimport sys\n\n# Suppress potential RuntimeWarning from place_poles for nearly uncontrollable systems\n# which is not the case here, but good practice for production code.\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=RuntimeWarning)\n\ndef calculate_metrics(L, A, C, W, R):\n    \"\"\"\n    Calculates the performance metrics for a given observer gain L.\n    \"\"\"\n    n, p = L.shape\n    A_L = A - L @ C\n\n    # 1. Spectral Lyapunov decay rate (alpha_spec)\n    try:\n        eigs = eigvals(A_L)\n        alpha_spec = -np.max(np.real(eigs))\n    except np.linalg.LinAlgError:\n        return [np.nan, np.nan, np.nan]\n\n    # 2. Squared noise-to-error gain from w (g_w^2)\n    try:\n        # Solve Lyapunov equation: A_L @ P_w + P_w @ A_L.T + W = 0\n        P_w = solve_continuous_lyapunov(A_L, -W)\n        g_w_sq = np.trace(P_w)\n    except np.linalg.LinAlgError:\n        g_w_sq = np.nan\n\n    # 3. Squared noise-to-error gain from v (g_v^2)\n    try:\n        # Solve Lyapunov equation: A_L @ P_v + P_v @ A_L.T + L @ R @ L.T = 0\n        Q_v = -L @ R @ L.T\n        P_v = solve_continuous_lyapunov(A_L, Q_v)\n        g_v_sq = np.trace(P_v)\n    except np.linalg.LinAlgError:\n        g_v_sq = np.nan\n\n    return [alpha_spec, g_w_sq, g_v_sq]\n\ndef solve_case(A, C, W, R, poles_pp):\n    \"\"\"\n    Solves one test case for both L_pp and L_lmi designs.\n    \"\"\"\n    # 1. Pole Placement Design (L_pp)\n    # We solve the dual problem: place poles of A.T - C.T @ K\n    # K is the gain for the dual system. L_pp = K.T\n    try:\n        res = place_poles(A.T, C.T, poles_pp)\n        K_pp = res.gain_matrix\n        L_pp = K_pp.T\n        metrics_pp = calculate_metrics(L_pp, A, C, W, R)\n    except Exception:\n        metrics_pp = [np.nan, np.nan, np.nan]\n\n    # 2. LMI/LQG Design (L_lmi)\n    # We solve the continuous-time Algebraic Riccati Equation (ARE) for the filter.\n    # The filter ARE is: A*P + P*A' - P*C'*inv(R)*C*P + W = 0\n    # SciPy's solve_continuous_are(a,b,q,r) solves: a'*X + X*a - X*b*inv(r)*b'*X + q = 0\n    # To match, we use the dual LQR formulation, setting a=A.T, b=C.T, q=W, r=R.\n    # SciPy then solves: (A.T)'*P + P*A.T - P*C.T*inv(R)*(C.T)'*P + W = 0\n    # which simplifies to: A*P + P*A.T - P*C.T*inv(R)*C*P + W = 0.\n    # This is the desired filter ARE. The solution is the error covariance P.\n    try:\n        P_are = solve_continuous_are(A.T, C.T, W, R)\n        L_lmi = P_are @ C.T @ inv(R)\n        metrics_lmi = calculate_metrics(L_lmi, A, C, W, R)\n    except np.linalg.LinAlgError:\n        metrics_lmi = [np.nan, np.nan, np.nan]\n\n    # Combine results and round\n    full_results = metrics_pp + metrics_lmi\n    return [round(val, 6) for val in full_results]\n\ndef solve():\n    \"\"\"\n    Main function to define test cases and compute results.\n    \"\"\"\n    test_cases = [\n        {\n            \"A\": np.array([[0, 1, 0], [0, 0, 1], [-3, -3, -1]]),\n            \"C\": np.array([[1, 0, 0], [0, 1, 0]]),\n            \"W\": 0.1 * np.identity(3),\n            \"R\": 0.05 * np.identity(2),\n            \"poles_pp\": np.array([-2, -3, -4]),\n        },\n        {\n            \"A\": np.array([[0, 1, 0], [-2, -0.2, 0], [0, 0, -0.5]]),\n            \"C\": np.array([[1, 0, 0], [0, 0, 1]]),\n            \"W\": np.diag([0.5, 0.1, 0.2]),\n            \"R\": np.diag([0.2, 0.05]),\n            \"poles_pp\": np.array([-1, -2, -3]),\n        },\n        {\n            \"A\": np.array([[0, 1], [-4, -1]]),\n            \"C\": np.array([[1, 1]]),\n            \"W\": np.array([[0.1, 0], [0, 0.3]]),\n            \"R\": np.array([[0.1]]),\n            \"poles_pp\": np.array([-2.5, -3.0]),\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        case_result = solve_case(case[\"A\"], case[\"C\"], case[\"W\"], case[\"R\"], case[\"poles_pp\"])\n        results.append(case_result)\n\n    # Format output as a string, removing all spaces.\n    output_str = str(results).replace(' ', '')\n    print(output_str)\n\nsolve()\n```", "id": "2699797"}]}