{"hands_on_practices": [{"introduction": "Prandtl-Tomlinson (PT) 模型为理解原子尺度的粘滑摩擦提供了基础框架。本练习将引导您从第一性原理出发，基于尖端-表面相互作用势与测量系统弹性之间的相互作用，推导摩擦力。通过分析力学平衡和稳定性条件，您将把微观势能面与宏观可测的摩擦力联系起来，从而深入洞悉摩擦的起源。", "problem": "在零温下，用 Prandtl–Tomlinson (PT) 模型来模拟单微凸体接触。该模型中，一个代表针尖的点质量通过周期性势与晶体基底相互作用，同时被一个刚度为 $k$ 的线性弹簧拉动。该弹簧附着在一个以极慢速度（准静态极限）平移的平台上。基底势的振幅为 $U_0$，空间周期为 $a$。当平台位于位置 $X$ 时，针尖在位置 $x$ 的总势能为\n$$\nU_{\\text{tot}}(x;X) = U_0 \\cos\\!\\left(\\frac{2\\pi x}{a}\\right) + \\frac{1}{2}k\\,(x - X)^2.\n$$\n假设运动是过阻尼的，因此在任何时刻，针尖都处于 $U_{\\text{tot}}(x;X)$ 的一个局部最小值点，直到该最小值点失去稳定性，此时针尖不连续地滑移到下一个最小值点（粘滑）。弹簧所记录的横向力为 $F = k\\,(X - x)$。\n\n仅从机械平衡（$\\partial U_{\\text{tot}}/\\partial x = 0$）和稳定性（$\\partial^2 U_{\\text{tot}}/\\partial x^2 > 0$）条件出发，并假设每个粘滑周期产生的横向力呈锯齿状，即从零线性增加到最大可承受力，然后在滑移时瞬时降回零，请完成以下任务：\n\n1. 推导滑移前最大可承受横向力 $F_s$ 的表达式，用 $U_0$、$a$ 和 $k$ 表示（您可以引入任何有用的中间量，但除平衡和稳定性条件外，不得假设任何已有的 PT 模型结果）。\n2. 使用您的结果和锯齿形假设，计算多个周期内的平均摩擦力 $F_{\\text{avg}}$。\n3. 在深度粘滑极限下（即弹簧与基底刚度相比非常软时），估算滑移长度（针尖在一次滑移事件中前进的平均距离）。\n\n对于 $T=0$ 的情况，使用 $U_0 = 0.2\\,\\mathrm{eV}$、$a = 0.25\\,\\mathrm{nm}$ 和 $k = 0.1\\,\\mathrm{N/m}$ 来计算您的结果。在需要单位换算时，使用元电荷的精确值 $e = 1.602176634\\times 10^{-19}\\,\\mathrm{J/eV}$。将平均摩擦力以 $\\mathrm{nN}$ 表示，滑移长度以 $\\mathrm{nm}$ 表示。将最终数值答案四舍五入到三位有效数字。按顺序 $\\big(F_{\\text{avg}}\\ \\text{（单位}\\ \\mathrm{nN}）、\\ \\text{滑移长度（单位}\\ \\mathrm{nm}\\big)\\big)$ 报告这对数值。", "solution": "该问题要求在准静态、过阻尼和零温条件下分析 Prandtl-Tomlinson 模型。给定当平台位于位置 $X$ 时，针尖在位置 $x$ 处的总势能为：\n$$\nU_{\\text{tot}}(x;X) = U_0 \\cos\\!\\left(\\frac{2\\pi x}{a}\\right) + \\frac{1}{2}k\\,(x - X)^2\n$$\n我们必须从平衡和稳定性的基本原理出发，推导最大可承受横向力 $F_s$、平均摩擦力 $F_{\\text{avg}}$ 和滑移长度。\n\n首先，我们建立机械平衡和稳定性的条件。\n当针尖上的合力为零时，系统处于平衡状态，这对应于总势能相对于针尖位置 $x$ 的极值点：\n$$\n\\frac{\\partial U_{\\text{tot}}}{\\partial x} = 0 \\implies -U_0 \\frac{2\\pi}{a} \\sin\\!\\left(\\frac{2\\pi x}{a}\\right) + k(x - X) = 0\n$$\n弹簧所记录的横向力定义为 $F = k(X - x)$。根据平衡条件，我们可以用基底相互作用来表示这个力：\n$$\n-U_0 \\frac{2\\pi}{a} \\sin\\!\\left(\\frac{2\\pi x}{a}\\right) - k(X-x) = 0 \\implies F = k(X - x) = -U_0 \\frac{2\\pi}{a} \\sin\\!\\left(\\frac{2\\pi x}{a}\\right)\n$$\n为使平衡稳定，针尖必须处于势能的局部极小值点，这要求二阶导数为正：\n$$\n\\frac{\\partial^2 U_{\\text{tot}}}{\\partial x^2} > 0 \\implies -U_0 \\left(\\frac{2\\pi}{a}\\right)^2 \\cos\\!\\left(\\frac{2\\pi x}{a}\\right) + k > 0\n$$\n$$\nk > U_0 \\left(\\frac{2\\pi}{a}\\right)^2 \\cos\\!\\left(\\frac{2\\pi x}{a}\\right)\n$$\n\n当一个局部极小值点不复存在时，即当稳定性条件被破坏时，粘滑事件便被触发。失稳的开始，或称滑移点，发生在二阶导数变为零时。设 $x_c$ 为滑移瞬间的临界针尖位置：\n$$\n\\frac{\\partial^2 U_{\\text{tot}}}{\\partial x^2}\\bigg|_{x=x_c} = 0 \\implies k = U_0 \\left(\\frac{2\\pi}{a}\\right)^2 \\cos\\!\\left(\\frac{2\\pi x_c}{a}\\right)\n$$\n为了$x_c$存在物理可行解，我们必须有 $\\cos(2\\pi x_c/a) \\ge 0$。此外，为了发生粘滑运动，弹簧刚度 $k$ 必须小于基底势的最大刚度，即 $k < U_0(2\\pi/a)^2$。\n\n滑移前的最大可承受横向力 $F_s$ 是在临界位置 $x_c$ 处计算的力 $F$。根据力和失稳方程，我们有：\n$$\nF_s = -U_0 \\frac{2\\pi}{a} \\sin\\!\\left(\\frac{2\\pi x_c}{a}\\right)\n$$\n$$\n\\cos\\!\\left(\\frac{2\\pi x_c}{a}\\right) = \\frac{k a^2}{4\\pi^2 U_0}\n$$\n我们使用三角恒等式 $\\sin^2\\theta + \\cos^2\\theta = 1$ 来求 $\\sin(2\\pi x_c/a)$。对于前向扫描（将平台沿 $+x$ 方向拉动）期间的正摩擦力，针尖通常处于 $\\sin(2\\pi x/a)$ 为负的位置范围内，这使得 $F$ 为正。因此，我们取负根：\n$$\n\\sin\\!\\left(\\frac{2\\pi x_c}{a}\\right) = -\\sqrt{1 - \\cos^2\\!\\left(\\frac{2\\pi x_c}{a}\\right)} = -\\sqrt{1 - \\left(\\frac{k a^2}{4\\pi^2 U_0}\\right)^2}\n$$\n将此代入 $F_s$ 的表达式中，得到问题第一部分的解：\n$$\nF_s = -U_0 \\frac{2\\pi}{a} \\left(-\\sqrt{1 - \\left(\\frac{k a^2}{4\\pi^2 U_0}\\right)^2}\\right) = \\frac{2\\pi U_0}{a} \\sqrt{1 - \\left(\\frac{k a^2}{4\\pi^2 U_0}\\right)^2}\n$$\n\n对于第二个任务，我们使用问题中明确的假设，即横向力遵循锯齿形剖面，从 $0$ 线性增加到 $F_s$，然后回落到 $0$。这种剖面的平均力 $F_{\\text{avg}}$ 为：\n$$\nF_{\\text{avg}} = \\frac{F_{\\text{min}} + F_{\\text{max}}}{2} = \\frac{0 + F_s}{2} = \\frac{1}{2} F_s\n$$\n$$\nF_{\\text{avg}} = \\frac{\\pi U_0}{a} \\sqrt{1 - \\left(\\frac{k a^2}{4\\pi^2 U_0}\\right)^2}\n$$\n现在我们用给定的参数对此表达式进行数值计算：$U_0 = 0.2\\,\\mathrm{eV}$、$a = 0.25\\,\\mathrm{nm} = 0.25 \\times 10^{-9}\\,\\mathrm{m}$、$k = 0.1\\,\\mathrm{N/m}$，以及元电荷 $e = 1.602176634\\times 10^{-19}\\,\\mathrm{J/eV}$。\n首先，将 $U_0$ 转换为焦耳：\n$$\nU_0 = 0.2\\,\\mathrm{eV} \\times 1.602176634\\times 10^{-19}\\,\\mathrm{J/eV} = 3.204353268 \\times 10^{-20}\\,\\mathrm{J}\n$$\n接下来，我们计算平方根内的无量纲项：\n$$\n\\frac{k a^2}{4\\pi^2 U_0} = \\frac{(0.1\\,\\mathrm{N/m})(0.25 \\times 10^{-9}\\,\\mathrm{m})^2}{4\\pi^2 (3.204353268 \\times 10^{-20}\\,\\mathrm{J})} \\approx 0.0049409\n$$\n这个值很小，证实我们处于粘滑区域。现在我们计算 $F_{\\text{avg}}$：\n$$\nF_{\\text{avg}} = \\frac{\\pi (3.204353268 \\times 10^{-20}\\,\\mathrm{J})}{0.25 \\times 10^{-9}\\,\\mathrm{m}} \\sqrt{1 - (0.0049409)^2}\n$$\n$$\nF_{\\text{avg}} \\approx (4.0266 \\times 10^{-10}\\,\\mathrm{N}) \\sqrt{1 - 2.441 \\times 10^{-5}} \\approx 4.0266 \\times 10^{-10}\\,\\mathrm{N} \\times 0.999988\n$$\n$$\nF_{\\text{avg}} \\approx 4.0265 \\times 10^{-10}\\,\\mathrm{N} = 0.40265\\,\\mathrm{nN}\n$$\n四舍五入到三位有效数字，$F_{\\text{avg}} = 0.403\\,\\mathrm{nN}$。\n\n对于第三个任务，我们在极软弹簧的极限下（$k \\to 0$）估算滑移长度 $\\Delta x_{\\text{slip}}$。在此极限下，失稳条件 $k = U_0(2\\pi/a)^2\\cos(2\\pi x_c/a)$ 意味着 $\\cos(2\\pi x_c/a) \\to 0$。让我们追踪针尖从一个势能极小值点（例如，在 $x=a/2$ 附近）开始向右被拉动。当针尖被迫朝向下一个势能极大值点（在 $x=a$）时，发生失稳。针尖必须进入基底势具有负曲率的区域，即 $x \\in (3a/4, 5a/4)$。失稳条件 $\\cos(2\\pi x_c/a) > 0$ 在此区域内得到满足。当 $k \\to 0$ 时，$x_c$ 趋近于 $\\cos(2\\pi x_c/a)=0$ 的边界。对于前向拉动，滑移发生在 $x_c \\to 3a/4$。\n\n在滑移的瞬间，平台位置 $X_c$是固定的。针尖跳到势能 $U_{\\text{tot}}(x;X_c)$ 的下一个稳定平衡位置 $x_f$。新的平衡满足 $k(x_f-X_c) = U_0(2\\pi/a)\\sin(2\\pi x_f/a)$。我们可以在滑移点找到 $kX_c$ 的值：\n$$\nkX_c = kx_c - U_0(2\\pi/a)\\sin(2\\pi x_c/a)\n$$\n在 $k \\to 0$ 的极限下，$x_c \\to 3a/4$，所以 $kx_c \\to 0$。同时，$\\sin(2\\pi x_c/a) \\to \\sin(3\\pi/2) = -1$。因此，\n$$\n\\lim_{k\\to 0} kX_c = 0 - U_0(2\\pi/a)(-1) = \\frac{2\\pi U_0}{a}\n$$\n将此代回 $x_f$ 的平衡方程中：\n$$\nkx_f - kX_c = U_0(2\\pi/a)\\sin(2\\pi x_f/a) \\implies kx_f - \\frac{2\\pi U_0}{a} \\approx U_0(2\\pi/a)\\sin(2\\pi x_f/a)\n$$\n当 $k \\to 0$ 时，$kx_f$ 项消失，剩下：\n$$\n-\\frac{2\\pi U_0}{a} = U_0\\frac{2\\pi}{a}\\sin(2\\pi x_f/a) \\implies \\sin(2\\pi x_f/a) = -1\n$$\n这给出了可能的最终位置 $x_f = (3/4 + n)a$，其中 $n$ 为任意整数。在这些点的稳定性得到保证，因为 $\\partial^2U_{\\text{tot}}/\\partial x^2 = k-U_0(2\\pi/a)^2\\cos(2\\pi x_f/a) = k > 0$。针尖从 $x_c \\approx 3a/4$ 跳到第一个满足 $x_f > x_c$ 的可达稳定极小值点。满足条件的最小 $n$ 值为 $n=1$，即 $x_f = (3/4+1)a = 7a/4$。\n因此，滑移长度估算为：\n$$\n\\Delta x_{\\text{slip}} = x_f - x_c \\approx \\frac{7a}{4} - \\frac{3a}{4} = \\frac{4a}{4} = a\n$$\n由于 $a=0.25\\,\\mathrm{nm}$，滑移长度为 $0.25\\,\\mathrm{nm}$。我们将其报告为三位有效数字，即 $0.250\\,\\mathrm{nm}$。\n\n这对数值是（$F_{\\text{avg}}$ 单位 $\\mathrm{nN}$，滑移长度单位 $\\mathrm{nm}$）。\n$F_{\\text{avg}} = 0.403\\,\\mathrm{nN}$\n滑移长度 $= 0.250\\,\\mathrm{nm}$", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0.403 & 0.250\n\\end{pmatrix}\n}\n$$", "id": "2781103"}, {"introduction": "在势能面概念的基础上，本练习将介绍一种强大的计算技术：微动弹性带 (Nudged Elastic Band, NEB) 方法。您将通过实践该算法，寻找原子在表面上移动的最小能量路径 (Minimum Energy Path, MEP) 及其相关的能垒。这对于理解纳米摩擦学和表面科学中的热激活过程至关重要，而本练习将为您提供宝贵的实践经验，让您掌握现代研究中使用的前沿计算工具。", "problem": "实现一个完整的、可运行的程序，该程序使用带爬山像修正的微动弹性带（Nudged Elastic Band, NEB）方法，计算吸附物在晶体表面上相邻两个能量最低点之间移动的最小能量路径。该系统是一个单一吸附物，其位置向量为 $\\mathbf{r} = (x,y)$，在一个二维周期性势能面 $V(x,y)$ 上移动，该势能面由下式给出：\n$$\nV(x,y) = V_0 \\left[2 - \\cos\\!\\left(\\frac{2\\pi x}{a}\\right) - \\cos\\!\\left(\\frac{2\\pi y}{a}\\right)\\right],\n$$\n其中 $V_0$ 是波纹振幅，$a$ 是晶格常数。吸附物从初始最低点 $(x,y) = (0,0)$ 移动到相邻的最低点 $(x,y) = (a,0)$。所有能量必须以电子伏特（eV）表示，所有长度必须以埃（Å）表示。\n\n根据能量最小化的第一性原理，NEB 方法在固定的两个端点之间构建一个由 $M$ 个系统“像”组成的离散路径带，并通过施加来自势能的真实力 $-\\nabla V$ 的垂直分量以及沿路径带的弹簧力来弛豫这些像，以维持像之间的均匀间距。爬山像修正会在能量最高的内插像处，反转真实力沿路径带方向的分量，并移除该处的弹簧力，以确保收敛到最小能量路径上的鞍点。您必须基于这些原理实现 NEB 逻辑，不得依赖黑箱 NEB 例程。\n\n您的程序必须：\n- 将路径离散化为 $M$ 个像（包括两个固定的端点）。通过在笛卡尔坐标 $(x,y)$ 中对端点进行线性插值来初始化中间的像。\n- 在每个弛豫步骤中，为每个像计算其势能 $V(x,y)$ 和梯度 $\\nabla V(x,y)$。\n- 根据相邻的像确定每个内插像的局部切线，然后计算并施加：\n  - 真实力 $-\\nabla V$ 的垂直分量，以使路径带向最小能量路径弛豫。\n  - 沿切线方向的、常数为 $k$ 的谐波弹簧力，以维持像的间距。\n- 识别能量最高的内插像，并在该处应用爬山像修正：移除弹簧力，并反转真实力沿切线方向的分量，以使其向鞍点收敛。\n- 当内插像中所受 NEB 力的最大模长低于 $10^{-6}$ eV/Å 的容差时，或当达到 $20000$ 次迭代的硬上限时（以先发生者为准），路径带收敛。\n- 收敛后，提取：\n  - $\\Delta E$，定义为能垒（弛豫后路径上的最大能量减去初始最低点的能量），以 eV 表示，并四舍五入到六位小数。\n  - $\\Delta x$，定义为沿收敛路径从初始最低点到鞍点像在 $x$ 方向上的标量横向距离，以 Å 表示，并四舍五入到六位小数。\n\n请使用以下测试套件。每个测试用例由 $(V_0, a, k, M)$ 组成，其中 $V_0$ 单位为 eV， $a$ 单位为 Å， $k$ 单位为 eV/Å$^2$，$M$ 为像的整数数量：\n- 用例 A（标准情况）：$(V_0, a, k, M) = (0.2, 2.5, 5.0, 9)$。\n- 用例 B（低弹簧系数，非均匀间距压力测试）：$(V_0, a, k, M) = (0.2, 2.5, 0.2, 9)$。\n- 用例 C（更高波纹和更紧凑的晶格）：$(V_0, a, k, M) = (0.6, 2.0, 5.0, 9)$。\n- 用例 D（少量图像边界情况）：$(V_0, a, k, M) = (0.3, 3.0, 10.0, 5)$。\n\n您的程序应生成单行输出，其中包含一个逗号分隔的列表，该列表被方括号包围。每个结果必须是对应测试用例的一个双元素列表 $[\\Delta E,\\Delta x]$，两个值均四舍五入到六位小数并以要求的单位表示。例如，一个包含四个用例的有效输出格式为：\n[ [dE1,dx1], [dE2,dx2], [dE3,dx3], [dE4,dx4] ]\n其中每个符号 $dE_i$ 和 $dx_i$ 是一个以标准十进制表示法书写的浮点数，在输出字符串中不含单位。", "solution": "所述问题在科学上是合理的、适定的，并包含了获得唯一解所需的所有信息。这是计算材料科学中的一个标准问题，可以使用指定的数值方法来解决。因此，我们将从第一性原理出发推导解决方案。\n\n任务是找到吸附物在二维周期性势能面上的最小能量路径（MEP）。MEP 代表了两个稳定状态之间最可能的过渡路径，其最高点对应于鞍点，该鞍点定义了过渡的能垒。我们将实现爬山像微动弹性带（CI-NEB）方法来找到这条路径和相关的能垒。\n\n**1. 物理系统与势能面**\n\n吸附物的位置由向量 $\\mathbf{r}=(x,y)$ 给出。其势能 $V(\\mathbf{r})$ 由以下函数描述：\n$$\nV(x,y) = V_0 \\left[2 - \\cos\\left(\\frac{2\\pi x}{a}\\right) - \\cos\\left(\\frac{2\\pi y}{a}\\right)\\right]\n$$\n其中 $V_0$ 是波纹振幅，单位为电子伏特（eV）；$a$ 是晶格常数，单位为埃（Å）。该势能描述了一个周期性的正方形晶格。初始状态是位于 $\\mathbf{r}_{\\text{initial}} = (0,0)$ 的势能最低点，最终状态是位于 $\\mathbf{r}_{\\text{final}} = (a,0)$ 的相邻最低点。在这些最低点，能量为 $V(0,0) = V_0(2-1-1) = 0$ eV。\n\n作用在吸附物上的真实力是势能的负梯度，$\\mathbf{F}_{\\text{true}} = -\\nabla V$。梯度计算如下：\n$$\n\\nabla V(x,y) = \\left( \\frac{\\partial V}{\\partial x}, \\frac{\\partial V}{\\partial y} \\right) = \\left( \\frac{2\\pi V_0}{a} \\sin\\left(\\frac{2\\pi x}{a}\\right), \\frac{2\\pi V_0}{a} \\sin\\left(\\frac{2\\pi y}{a}\\right) \\right)\n$$\n\n**2. 微动弹性带（NEB）方法**\n\nNEB 方法将路径离散化为一系列 $M$ 个像，记为 $\\{\\mathbf{r}_0, \\mathbf{r}_1, \\dots, \\mathbf{r}_{M-1}\\}$，其中 $\\mathbf{r}_0 = \\mathbf{r}_{\\text{initial}}$ 和 $\\mathbf{r}_{M-1} = \\mathbf{r}_{\\text{final}}$ 是固定的端点。$M-2$ 个中间的像通过迭代弛豫来收敛到 MEP。\n\n初始路径通过在端点之间进行线性插值来构建：\n$$\n\\mathbf{r}_i = \\mathbf{r}_0 + \\frac{i}{M-1} (\\mathbf{r}_{M-1} - \\mathbf{r}_0) \\quad \\text{for} \\quad i = 1, \\dots, M-2.\n$$\n\nNEB 方法的核心在于用于弛豫像的力的定义。对于每个中间像 $\\mathbf{r}_i$，这个力 $\\mathbf{F}_{\\text{NEB},i}$ 包含两个分量：\n- 真实力垂直于路径的分量 $\\mathbf{F}_{\\text{true},i}^{\\perp}$。\n- 人为设置的弹簧力平行于路径的分量 $\\mathbf{F}_{\\text{spring},i}^{\\parallel}$。\n\n这种构造确保了像会“沿下坡方向”滑向 MEP，而不会被真实力沿路径的分量拉回到最低点，同时也确保了它们沿路径均匀分布。\n\n作用于常规 NEB 像 $\\mathbf{r}_i$ 上的力为：\n$$\n\\mathbf{F}_{\\text{NEB},i} = \\mathbf{F}_{\\text{true},i}^{\\perp} + \\mathbf{F}_{\\text{spring},i}^{\\parallel}\n$$\n\n为了计算这些分量，我们首先需要路径在像 $\\mathbf{r}_i$ 处的局部切线向量，记为 $\\hat{\\tau}_i$。一个稳健的估计是由连接其相邻像的归一化向量给出：\n$$\n\\hat{\\tau}_i = \\frac{\\mathbf{r}_{i+1} - \\mathbf{r}_{i-1}}{|\\mathbf{r}_{i+1} - \\mathbf{r}_{i-1}|}\n$$\n\n真实力的垂直分量通过减去其平行分量得到：\n$$\n\\mathbf{F}_{\\text{true},i}^{\\perp} = \\mathbf{F}_{\\text{true},i} - (\\mathbf{F}_{\\text{true},i} \\cdot \\hat{\\tau}_i) \\hat{\\tau}_i\n$$\n其中 $\\mathbf{F}_{\\text{true},i} = -\\nabla V(\\mathbf{r}_i)$。\n\n像之间的弹簧力被建模为连接相邻像的理想弹簧。作用于像 $\\mathbf{r}_i$ 的净弹簧力为 $\\mathbf{F}_{\\text{spring},i} = k(\\mathbf{r}_{i+1} - 2\\mathbf{r}_i + \\mathbf{r}_{i-1})$，其中 $k$ 是弹簧常数。我们只考虑其沿切线的分量来维持像的间距：\n$$\n\\mathbf{F}_{\\text{spring},i}^{\\parallel} = (\\mathbf{F}_{\\text{spring},i} \\cdot \\hat{\\tau}_i) \\hat{\\tau}_i\n$$\n\n**3. 爬山像（CI）修正**\n\n为了精确定位鞍点，CI-NEB 方法修改了作用于势能最高像上的力。设该像为 $\\mathbf{r}_{i_{\\text{max}}}$。对于这个“爬山像”，弹簧力被移除，并且真实力的平行分量被反转。这会驱动该像沿路径向能量升高的方向移动，朝向真实的鞍点，同时仍然使其在垂直于路径的方向上弛豫。\n\n作用于爬山像上的力为：\n$$\n\\mathbf{F}_{\\text{CI}, i_{\\text{max}}} = \\mathbf{F}_{\\text{true},i_{\\text{max}}}^{\\perp} - \\mathbf{F}_{\\text{true},i_{\\text{max}}}^{\\parallel} = \\mathbf{F}_{\\text{true},i_{\\text{max}}} - 2(\\mathbf{F}_{\\text{true},i_{\\text{max}} \\cdot \\hat{\\tau}_{i_{\\text{max}}}) \\hat{\\tau}_{i_{\\text{max}}}\n$$\n\n**4. 计算算法**\n\n路径使用迭代优化方案进行弛豫。一种简单有效的方法是最速下降法，其中每个中间像都沿着其计算出的 NEB 力的方向移动。\n\n算法流程如下：\n1. 通过线性插值初始化包含 $M$ 个像的路径。\n2. 开始迭代循环：\n   a. 对每个像，计算其能量 $V(\\mathbf{r}_i)$ 和真实力 $\\mathbf{F}_{\\text{true},i}$。\n   b. 识别能量最高的中间像的索引 $i_{\\text{max}}$。\n   c. 对每个中间像 $i \\in \\{1, \\dots, M-2\\}$，计算切线 $\\hat{\\tau}_i$。\n   d. 对每个中间像 $i$，计算 NEB 力：如果 $i=i_{\\text{max}}$，则为 $\\mathbf{F}_{\\text{CI}, i}$；否则为 $\\mathbf{F}_{\\text{NEB},i}$。\n   e. 更新中间像的位置：$\\mathbf{r}_i \\leftarrow \\mathbf{r}_i + \\alpha \\mathbf{F}_i$，其中 $\\alpha$ 是一个小的固定步长（学习率），$\\mathbf{F}_i$ 是步骤 (d) 中计算得到的相应力。\n   f. 检查收敛性。当作用于任何中间像上的力的最大模长降至容差 $10^{-6}$ eV/Å 以下，或达到最大迭代次数 $20000$ 次时，循环终止。\n3. 收敛后，能垒 $\\Delta E$ 是最终路径上的最大能量与初始状态能量之差，即 $\\Delta E = \\max_i(V(\\mathbf{r}_i)) - V(\\mathbf{r}_0)$。\n4. 鞍点是收敛路径上能量最高的像。值 $\\Delta x$ 是该鞍点像的 $x$ 坐标。\n\n对每个测试用例执行此过程，以确定所需的输出。", "answer": "```python\nimport numpy as np\nimport math\n\n# Define global constants as specified in the problem statement.\nTOLERANCE = 1e-6\nMAX_ITERATIONS = 20000\n# A fixed step size for the steepest descent optimizer.\n# This value is chosen to be small enough for stability across all test cases.\nSTEP_SIZE = 0.01\n\ndef potential(coords, V0, a):\n    \"\"\"\n    Computes the potential energy V(x, y) for a set of coordinates.\n    The function is vectorized to handle an array of coordinates.\n    \"\"\"\n    x = coords[..., 0]\n    y = coords[..., 1]\n    term_x = np.cos(2 * np.pi * x / a)\n    term_y = np.cos(2 * np.pi * y / a)\n    return V0 * (2.0 - term_x - term_y)\n\ndef gradient(coords, V0, a):\n    \"\"\"\n    Computes the gradient of the potential V(x, y) for a set of coordinates.\n    The function is vectorized.\n    \"\"\"\n    x = coords[..., 0]\n    y = coords[..., 1]\n    factor = 2.0 * np.pi * V0 / a\n    grad_x = factor * np.sin(2.0 * np.pi * x / a)\n    grad_y = factor * np.sin(2.0 * np.pi * y / a)\n    # Stack the components to return a gradient vector for each coordinate pair.\n    return np.stack((grad_x, grad_y), axis=-1)\n\ndef run_ci_neb(V0, a, k, M):\n    \"\"\"\n    Performs a Climbing-Image Nudged Elastic Band calculation.\n    \n    Args:\n        V0 (float): Corrugation amplitude in eV.\n        a (float): Lattice parameter in Å.\n        k (float): Spring constant in eV/Å^2.\n        M (int): Total number of images in the band.\n\n    Returns:\n        list: A list containing [delta_E, delta_x] rounded to 6 decimal places.\n    \"\"\"\n    # 1. Initialization\n    # Discretize the path with M images, including fixed endpoints.\n    # Initial path is a linear interpolation between (0,0) and (a,0).\n    path = np.zeros((M, 2))\n    path[:, 0] = np.linspace(0.0, a, M)\n    \n    # Energy of the initial state (should be 0 for the given potential).\n    initial_energy = potential(path[0], V0, a)\n\n    # 2. Iterative Relaxation Loop\n    for _ in range(MAX_ITERATIONS):\n        # Calculate energies and true forces (-gradient) for all images.\n        energies = potential(path, V0, a)\n        true_forces = -gradient(path, V0, a)\n\n        # Identify the internal image with the highest energy.\n        # It will be treated as the \"climbing image\".\n        # This is only meaningful if there are internal images (M > 2).\n        if M > 2:\n            # We search in the slice [1:-1] which corresponds to internal images.\n            # Add 1 to convert from local index (in slice) to global index (in path).\n            climbing_image_idx = np.argmax(energies[1:-1]) + 1\n        else: # No internal images to optimize.\n            break\n\n        # Calculate tangent vectors for all internal images.\n        # A robust choice for the tangent is the normalized vector connecting neighbors.\n        tangents_vec = path[2:] - path[:-2]\n        tangent_norms = np.linalg.norm(tangents_vec, axis=1, keepdims=True)\n        # Avoid division by zero, although highly unlikely for a non-trivial path.\n        tangent_norms[tangent_norms < 1e-15] = 1.0 \n        unit_tangents = tangents_vec / tangent_norms\n\n        # Calculate the NEB force for each internal image.\n        neb_forces = np.zeros_like(path)\n        for i in range(1, M - 1):\n            # The tangent for image `i` corresponds to index `i-1` in `unit_tangents`.\n            tau = unit_tangents[i - 1]\n            f_true = true_forces[i]\n\n            if i == climbing_image_idx:\n                # Climbing-image force: invert the parallel component of the true force.\n                # F_CI = F_true_perp - F_true_para = F_true - 2 * F_true_para\n                f_true_parallel = np.dot(f_true, tau) * tau\n                neb_forces[i] = f_true - 2.0 * f_true_parallel\n            else:\n                # Regular NEB force: perpendicular true force + parallel spring force.\n                f_true_perp = f_true - np.dot(f_true, tau) * tau\n                \n                # Spring force is based on the vector difference of segments, projected on the tangent.\n                # This is a standard and stable formulation.\n                f_spring_vec = k * (path[i+1] - 2.0 * path[i] + path[i-1])\n                f_spring_parallel = np.dot(f_spring_vec, tau) * tau\n                \n                neb_forces[i] = f_true_perp + f_spring_parallel\n\n        # Check for convergence: if max force on any internal image is below tolerance.\n        if M > 2:\n            max_force_mag = np.max(np.linalg.norm(neb_forces[1:-1], axis=1))\n            if max_force_mag < TOLERANCE:\n                break\n        \n        # Update positions of internal images using a simple steepest descent step.\n        path[1:-1] += STEP_SIZE * neb_forces[1:-1]\n\n    # 3. Post-processing and Output Extraction\n    # Recalculate final energies on the converged path.\n    final_energies = potential(path, V0, a)\n    # The saddle point is the image with the highest energy.\n    saddle_idx = np.argmax(final_energies)\n    saddle_pos = path[saddle_idx]\n    \n    # Energy barrier is the difference between saddle point energy and initial energy.\n    delta_E = final_energies[saddle_idx] - initial_energy\n    # Lateral distance is the x-coordinate of the saddle point.\n    delta_x = saddle_pos[0]\n\n    return [round(delta_E, 6), round(delta_x, 6)]\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (V0, a, k, M)\n        (0.2, 2.5, 5.0, 9),    # Case A\n        (0.2, 2.5, 0.2, 9),    # Case B\n        (0.6, 2.0, 5.0, 9),    # Case C\n        (0.3, 3.0, 10.0, 5),   # Case D\n    ]\n\n    results = []\n    for case in test_cases:\n        V0, a, k, M = case\n        result = run_ci_neb(V0, a, k, M)\n        results.append(result)\n\n    # Final print statement must match the exact specified format.\n    # The string representation of a Python list is '[item1, item2, ...]'\n    # which is exactly what is needed for the sub-lists.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2781122"}, {"introduction": "为了在实验中测量模型所预测的纳米级力，我们依赖于原子力显微镜 (Atomic Force Microscope, AFM) 等仪器。本练习通过聚焦于 AFM 力传感器的核心——悬臂梁的力学行为，将理论与实验联系起来。您将推导悬臂梁的有效横向刚度，这是一个将测量的扭转信号精确转换为定量摩擦力的关键参数，这一过程被称为横向力校准。", "problem": "一个用于纳米摩擦学研究的矩形硅材料原子力显微镜 (AFM) 悬臂，其被建模为一根等截面直杆，长度为 $L$，宽度为 $w$，厚度为 $t$，一端固定，另一端自由。假设材料为线性小应变弹性体，剪切模量为 $G$，且悬臂具有细长几何形状 $t \\ll w \\ll L$，因此适用 Saint-Venant 扭转理论，并且在其自由表面上翘曲不受约束。尖端的横向摩擦力作用于一点，该点与悬臂扭转轴（取为厚度的中性面）的垂直距离为 $h$。\n\n请仅从 Saint-Venant 扭转理论、等截面直杆的扭矩-扭转关系以及薄壁开口截面中的能量等效性出发，推导悬臂抗扭刚度 $k_{\\theta}$ 的闭式解析表达式。然后，通过将施加在尖端的横向力 $F$ 与悬臂上的扭矩以及由扭转引起的尖端横向位移相关联，将 $k_{\\theta}$ 转换为尖端的等效横向弹簧常数 $k_{\\text{lat}}$。扭转角以弧度为单位。忽略除 Saint-Venant 扭转柔度外的所有其他柔度。\n\n请将您的最终结果表示为 $k_{\\text{lat}}$ 关于 $G$、$w$、$t$、$L$ 和 $h$ 的单个解析表达式。弹簧常数的单位表示为牛顿/米 (N/m)。无需进行数值计算，也无需四舍五入。", "solution": "我们分两个阶段进行：首先，推导矩形悬臂在 Saint-Venant 扭转作用下的抗扭刚度；其次，将此抗扭柔度与尖端的等效横向柔度联系起来。\n\n1. 基于 Saint-Venant 扭转的抗扭刚度。\n\n对于一个承受 Saint-Venant 扭转的等截面直杆，其扭矩-扭转关系为\n$$\nT \\;=\\; G\\,J\\,\\frac{\\theta}{L},\n$$\n其中 $T$ 是施加的扭矩，$\\theta$ 是长度 $L$ 上的总扭转角（以弧度为单位），$G$ 是剪切模量，$J$ 是截面的 Saint-Venant 扭转常数。抗扭刚度 $k_{\\theta}$ 定义为施加的扭矩与扭转角之比，\n$$\nk_{\\theta} \\;\\equiv\\; \\frac{T}{\\theta} \\;=\\; \\frac{G\\,J}{L}.\n$$\n\n因此，任务简化为在薄带极限 $t \\ll w$ 下，求出矩形截面的 $J$。对于薄壁开口截面，Saint-Venant 扭转和能量等效性导出了一个经过充分验证的扭转常数表达式，\n$$\nJ \\;=\\; \\int \\frac{t^{3}(s)}{3}\\,ds,\n$$\n其中 $s$ 是壁中线的参数，$t(s)$ 是局部壁厚（这是来自 Vlasov 理论的经典薄壁开口截面扭转常数，可通过应变能方法从 Prandtl 应力函数推导得出）。在当前情况下，截面是单个厚度为常数 $t$、宽度为 $w$ 的扁平条带，因此 $t(s)=t$ 且积分沿宽度进行。所以，\n$$\nJ \\;=\\; \\int_{0}^{w} \\frac{t^{3}}{3}\\,ds \\;=\\; \\frac{w\\,t^{3}}{3}.\n$$\n\n将此 $J$ 代入 $k_{\\theta}=GJ/L$ 得到\n$$\nk_{\\theta} \\;=\\; \\frac{G}{L}\\,\\frac{w\\,t^{3}}{3} \\;=\\; \\frac{G\\,w\\,t^{3}}{3\\,L}.\n$$\n\n这就是矩形悬臂在薄带极限和 Saint-Venant 扭转作用下的抗扭刚度。\n\n2. 转换为尖端的等效横向弹簧常数。\n\n设一个横向力 $F$ 施加在尖端，其作用点与扭转轴（此处取为厚度的中性面）的垂直距离为 $h$。该力产生一个扭矩\n$$\nT \\;=\\; F\\,h.\n$$\n产生的扭转角为\n$$\n\\theta \\;=\\; \\frac{T}{k_{\\theta}} \\;=\\; \\frac{F\\,h}{k_{\\theta}}.\n$$\n在纯扭转作用下，尖端在力作用点处的横向位移等于半径为 $h$ 的点扫过的弧长：\n$$\n\\delta \\;=\\; \\theta\\,h \\;=\\; \\frac{F\\,h}{k_{\\theta}}\\,h \\;=\\; \\frac{F\\,h^{2}}{k_{\\theta}}.\n$$\n根据定义，尖端的等效横向弹簧常数为\n$$\nk_{\\text{lat}} \\;\\equiv\\; \\frac{F}{\\delta} \\;=\\; \\frac{k_{\\theta}}{h^{2}}.\n$$\n代入 $k_{\\theta} = G w t^{3}/(3L)$ 得\n$$\nk_{\\text{lat}} \\;=\\; \\frac{G\\,w\\,t^{3}}{3\\,L\\,h^{2}}.\n$$\n\n这是一个用 $G$、$w$、$t$、$L$ 和 $h$ 表示的解析表达式。单位是牛顿/米，因为 $G$ 的单位是帕斯卡，$w t^{3}/L$ 的单位是 $\\text{m}^{3}$，除以 $h^{2}$ 贡献了 $\\text{m}^{-2}$ 的单位，最终总单位为 $\\text{N/m}$。角度按要求以弧度处理。", "answer": "$$\\boxed{\\frac{G\\,w\\,t^{3}}{3\\,L\\,h^{2}}}$$", "id": "2781153"}]}