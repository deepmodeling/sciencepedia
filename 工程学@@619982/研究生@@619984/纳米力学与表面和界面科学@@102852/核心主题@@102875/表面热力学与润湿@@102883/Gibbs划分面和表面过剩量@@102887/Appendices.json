{"hands_on_practices": [{"introduction": "吉布斯界面是一个数学构造而非物理实体，这一概念至关重要。本练习将这个抽象概念具体化，通过从第一性原理出发，推导并应用当界面位置移动时表面过剩量 $\\Gamma_i$ 的变换法则。这个实践对于内化表面过剩量的约定依赖性，并将其与如表面张力等物理不变量区分开来，是至关重要的一步。", "problem": "一个平面界面分隔了两个宏观均匀的体相，分别标记为 $\\alpha$ 和 $\\beta$。坐标 $z$ 被选为与界面正交，并从 $\\alpha$ 相指向 $\\beta$ 相递增。对于化学物种 $i$，在一个选定的位于 $z=z_S$ 的 Gibbs 分割面上，单位面积的表面过剩量从第一性原理定义为：真实数密度与一个由体相密度构成的分段常数参考值之间的偏差在整个界面区域上的积分。具体而言，使用亥维赛阶跃函数 (HSF) $\\Theta(\\cdot)$，其定义为\n$$\n\\Gamma_i(z_S) \\equiv \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha}\\,\\Theta\\!\\big(z_S-z\\big) - n_i^{\\beta}\\,\\Theta\\!\\big(z-z_S\\big)\\Big]\\,\\mathrm{d}z.\n$$\n您在分割面 $z=z_0$ 处测得以下表面过剩量：\n- $\\Gamma_1(z_0) = 0.85 \\times 10^{-6}$ mol m$^{-2}$，\n- $\\Gamma_2(z_0) = -1.40 \\times 10^{-6}$ mol m$^{-2}$。\n\n在远离界面处，体相数密度（假设在每个均匀相中为常数）为：\n- $n_1^{\\alpha} = 5.20 \\times 10^{3}$ mol m$^{-3}$，$n_1^{\\beta} = 1.48 \\times 10^{4}$ mol m$^{-3}$，\n- $n_2^{\\alpha} = 2.75 \\times 10^{3}$ mol m$^{-3}$，$n_2^{\\beta} = 3.10 \\times 10^{3}$ mol m$^{-3}$。\n\n现在，您通过将 Gibbs 分割面沿 $+z$ 方向（从 $\\alpha$ 相向 $\\beta$ 相）移动 $\\Delta z = +0.35$ nm，将其重新定义到新位置 $z=z_0+\\Delta z$。\n\n请仅从上述 $\\Gamma_i(z_S)$ 的基本定义出发，推导出一个通用表达式，描述 $\\Gamma_i$ 在分割面发生任意有限位移 $\\Delta z$ 时的变换规律，推导过程中请注意符号，并仅使用亥维赛阶跃函数的性质。然后，使用您推导的表达式和所提供的数据，计算新的表面过剩量 $\\Gamma_1(z_0+\\Delta z)$ 和 $\\Gamma_2(z_0+\\Delta z)$。\n\n将两个最终答案以 mol m$^{-2}$ 为单位表示，并将每个答案四舍五入至三位有效数字。以 $(\\Gamma_1(z_0+\\Delta z),\\ \\Gamma_2(z_0+\\Delta z))$ 的顺序，将您的最终数值对以单行向量的形式给出。", "solution": "所陈述的问题具有科学依据、提法明确且内容自洽。这是界面热力学中的一个有效练习。我将开始进行解答。\n\n任务是推导表面过剩量 $\\Gamma_i$ 在 Gibbs 分割面发生位移时的变换法则，然后将此法则应用于所提供的数值数据。推导必须从给定的基本定义出发。\n\n物种 $i$ 在位于 $z=z_S$ 的分割面上的表面过剩量定义为：\n$$\n\\Gamma_i(z_S) \\equiv \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha}\\,\\Theta\\!\\big(z_S-z\\big) - n_i^{\\beta}\\,\\Theta\\!\\big(z-z_S\\big)\\Big]\\,\\mathrm{d}z\n$$\n此处，$n_i(z)$ 是物种 $i$ 穿过界面的实际数密度分布，而 $n_i^{\\alpha}$ 和 $n_i^{\\beta}$ 分别是 $\\alpha$ 相和 $\\beta$ 相中的恒定体相数密度。函数 $\\Theta(\\cdot)$ 是亥维赛阶跃函数。参考密度分布是一个分段常数函数，在 $z=z_S$ 处从 $n_i^{\\alpha}$ 跃升至 $n_i^{\\beta}$。\n\n定义中两个亥维赛函数之和对于所有 $z \\neq z_S$ 均为 $\\Theta(z_S-z) + \\Theta(z-z_S) = 1$。由于单一点的值不影响积分，我们可以写成 $\\Theta(z_S-z) = 1 - \\Theta(z-z_S)$。将此代入定义式，得到一个更方便的形式：\n$$\n\\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha}\\big(1 - \\Theta(z-z_S)\\big) - n_i^{\\beta}\\,\\Theta(z-z_S)\\Big]\\,\\mathrm{d}z\n$$\n$$\n\\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha} - \\big(n_i^{\\beta} - n_i^{\\alpha}\\big)\\Theta(z-z_S)\\Big]\\,\\mathrm{d}z\n$$\n现在，考虑一个位于新位置 $z_S' = z_S + \\Delta z$ 的分割面。在这个新位置的表面过剩量由相同的表达式给出，只需将 $z_S$ 替换为 $z_S'$：\n$$\n\\Gamma_i(z_S + \\Delta z) = \\int_{-\\infty}^{\\infty}\\!\\Big[n_i(z) - n_i^{\\alpha} - \\big(n_i^{\\beta} - n_i^{\\alpha}\\big)\\Theta(z - (z_S + \\Delta z))\\Big]\\,\\mathrm{d}z\n$$\n为了找到 $\\Gamma_i(z_S + \\Delta z)$ 和 $\\Gamma_i(z_S)$ 之间的关系，我们计算它们的差值：\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty} \\! \\Bigg( \\Big[n_i(z) - n_i^{\\alpha} - (n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S')\\Big] - \\Big[n_i(z) - n_i^{\\alpha} - (n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S)\\Big] \\Bigg) \\mathrm{d}z\n$$\n$n_i(z)$ 和 $n_i^{\\alpha}$ 项相互抵消，剩下：\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = \\int_{-\\infty}^{\\infty} \\! \\Big[ -(n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S') + (n_i^{\\beta} - n_i^{\\alpha})\\Theta(z - z_S) \\Big] \\mathrm{d}z\n$$\n提出常数密度差 $(n_i^{\\beta} - n_i^{\\alpha})$，得到：\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = (n_i^{\\beta} - n_i^{\\alpha}) \\int_{-\\infty}^{\\infty} \\! \\Big[\\Theta(z - z_S) - \\Theta(z - z_S')\\Big] \\mathrm{d}z\n$$\n被积函数 $\\Theta(z - z_S) - \\Theta(z - z_S')$ 是一个箱形函数。令 $z_S' = z_S + \\Delta z$。\n如果 $\\Delta z > 0$，则 $z_S' > z_S$。被积函数在 $z \\in (z_S, z_S')$ 上为 $1$，在其他地方为 $0$。\n如果 $\\Delta z < 0$，则 $z_S' < z_S$。被积函数在 $z \\in (z_S', z_S)$ 上为 $-1$，在其他地方为 $0$。\n该积分可以对两种情况进行求值：\n- 对于 $\\Delta z > 0$：$\\int_{z_S}^{z_S'} 1\\,\\mathrm{d}z = z_S' - z_S = \\Delta z$。\n- 对于 $\\Delta z < 0$：$\\int_{z_S'}^{z_S} (-1)\\,\\mathrm{d}z = -(z_S - z_S') = z_S' - z_S = \\Delta z$。\n两种情况下，积分的结果都是 $\\Delta z$。因此，表面过剩量的变化为：\n$$\n\\Gamma_i(z_S + \\Delta z) - \\Gamma_i(z_S) = (n_i^{\\beta} - n_i^{\\alpha})\\Delta z\n$$\n这就得到了通用的变换法则：\n$$\n\\Gamma_i(z_S + \\Delta z) = \\Gamma_i(z_S) + (n_i^{\\beta} - n_i^{\\alpha})\\Delta z\n$$\n这个表达式就是题目所要求推导的公式。\n\n现在，我们将此公式应用于给定的数据。初始分割面位于 $z_0$，它被移动了 $\\Delta z = +0.35$ nm $= 0.35 \\times 10^{-9}$ m。\n\n对于物种 $i=1$：\n初始表面过剩量为 $\\Gamma_1(z_0) = 0.85 \\times 10^{-6}$ mol m$^{-2}$。\n体相数密度为 $n_1^{\\alpha} = 5.20 \\times 10^{3}$ mol m$^{-3}$ 和 $n_1^{\\beta} = 1.48 \\times 10^{4}$ mol m$^{-3}$。\n体相密度差为：\n$$\nn_1^{\\beta} - n_1^{\\alpha} = (1.48 \\times 10^{4} - 0.520 \\times 10^{4}) \\text{ mol m}^{-3} = 0.960 \\times 10^{4} \\text{ mol m}^{-3} = 9.60 \\times 10^{3} \\text{ mol m}^{-3}\n$$\n新的表面过剩量 $\\Gamma_1(z_0 + \\Delta z)$ 计算如下：\n$$\n\\Gamma_1(z_0 + \\Delta z) = \\Gamma_1(z_0) + (n_1^{\\beta} - n_1^{\\alpha})\\Delta z\n$$\n$$\n\\Gamma_1(z_0 + \\Delta z) = (0.85 \\times 10^{-6}) + (9.60 \\times 10^{3}) \\times (0.35 \\times 10^{-9})\n$$\n$$\n\\Gamma_1(z_0 + \\Delta z) = (0.85 \\times 10^{-6}) + (3.36 \\times 10^{-6}) = 4.21 \\times 10^{-6} \\text{ mol m}^{-2}\n$$\n四舍五入到三位有效数字，结果是 $4.21 \\times 10^{-6}$ mol m$^{-2}$。\n\n对于物种 $i=2$：\n初始表面过剩量为 $\\Gamma_2(z_0) = -1.40 \\times 10^{-6}$ mol m$^{-2}$。\n体相数密度为 $n_2^{\\alpha} = 2.75 \\times 10^{3}$ mol m$^{-3}$ 和 $n_2^{\\beta} = 3.10 \\times 10^{3}$ mol m$^{-3}$。\n体相密度差为：\n$$\nn_2^{\\beta} - n_2^{\\alpha} = (3.10 \\times 10^{3} - 2.75 \\times 10^{3}) \\text{ mol m}^{-3} = 0.35 \\times 10^{3} \\text{ mol m}^{-3}\n$$\n新的表面过剩量 $\\Gamma_2(z_0 + \\Delta z)$ 计算如下：\n$$\n\\Gamma_2(z_0 + \\Delta z) = \\Gamma_2(z_0) + (n_2^{\\beta} - n_2^{\\alpha})\\Delta z\n$$\n$$\n\\Gamma_2(z_0 + \\Delta z) = (-1.40 \\times 10^{-6}) + (0.35 \\times 10^{3}) \\times (0.35 \\times 10^{-9})\n$$\n$$\n\\Gamma_2(z_0 + \\Delta z) = (-1.40 \\times 10^{-6}) + (0.1225 \\times 10^{-6}) = -1.2775 \\times 10^{-6} \\text{ mol m}^{-2}\n$$\n四舍五入到三位有效数字，结果是 $-1.28 \\times 10^{-6}$ mol m$^{-2}$。\n\n最终的数值对 $(\\Gamma_1(z_0+\\Delta z), \\Gamma_2(z_0+\\Delta z))$ 是 $(4.21 \\times 10^{-6}, -1.28 \\times 10^{-6})$ mol m$^{-2}$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n4.21 \\times 10^{-6} & -1.28 \\times 10^{-6}\n\\end{pmatrix}\n}\n$$", "id": "2772282"}, {"introduction": "本练习演示了如何将宏观测量（表面张力）与微观界面属性（表面过剩量）联系起来，展现了吉布斯吸附等温线的强大威力。您将体验一个典型的实验数据分析流程：从表面张力测量数据出发，利用吉布斯等温线计算吸附的表面活性剂量，并结合朗缪尔吸附模型最终求得标准吸附自由能 $\\Delta G^{\\circ}_{\\mathrm{ads}}$。这个过程清晰地揭示了热力学理论如何被用来解读实验结果并提取基本的材料参数。", "problem": "一种非离子表面活性剂 $B$ 溶解在分子溶剂 $A$ 中，在温度 $T = 298\\,\\mathrm{K}$ 时吸附在气-液界面上。选择 Gibbs 分割面 (GDS)，使得溶剂的表面超量为零，即 $\\Gamma_{A} = 0$。表面张力为 $\\gamma$，表面活性剂的体相摩尔分数为 $x_{B}$。假设溶液在所报告的浓度范围内是理想的，因此其化学势满足 $\\mu_{B} = \\mu_{B}^{\\circ} + RT \\ln x_{B}$，其中 $R$ 是理想气体常数。同样假设 $B$ 在界面上的吸附是符合 Langmuir 吸附模型的单分子层、无相互作用吸附。\n\n一项高精度表面张力测量实验提供了以下从 $\\gamma$–$x_{B}$ 数据集中提取的表面张力相对于表面活性剂摩尔分数对数的局部斜率：\n- 在 $x_{B} = 1.0 \\times 10^{-6}$ 时, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -1.457395 \\times 10^{-4}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$。\n- 在 $x_{B} = 1.0 \\times 10^{-5}$ 时, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -1.238786 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$。\n- 在 $x_{B} = 5.0 \\times 10^{-5}$ 时, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -3.716358 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$。\n- 在 $x_{B} = 1.0 \\times 10^{-4}$ 时, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -4.955144 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$。\n- 在 $x_{B} = 2.0 \\times 10^{-4}$ 时, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -5.946173 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$。\n- 在 $x_{B} = 1.0 \\times 10^{-3}$ 时, $\\left.\\frac{d\\gamma}{d\\ln x_{B}}\\right|_{x_{B}} = -7.086396 \\times 10^{-3}\\,\\mathrm{N}\\,\\mathrm{m}^{-1}$。\n\n从基本关系式出发，首先反转 $\\gamma$ 和 $\\mu_{B}$ 之间的热力学关系，以获得在每个报告的 $x_{B}$ 值下的表面活性剂表面超量 $\\Gamma_{B}(x_{B})$。然后，利用单分子层、无相互作用吸附的假设，确定表征吸附过程的平衡常数 $K$，并最终计算标准吸附自由能 $\\Delta G^{\\circ}_{\\mathrm{ads}}$。\n\n使用 $R = 8.314\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$。仅报告 $\\Delta G^{\\circ}_{\\mathrm{ads}}$ 的值，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，并四舍五入至三位有效数字。最终答案必须是一个数字。", "solution": "所提出的问题在科学上是合理的、自洽的且表述清晰。它要求应用表面热力学的基本原理，特别是 Gibbs 吸附等温线，并结合用于单分子层吸附的 Langmuir 模型。获得唯一解所需的所有必要数据和条件均已提供。因此，该问题是有效的，并将给出一个严谨的解答。\n\n本分析的起点是 Gibbs 吸附等温线，它将表面张力的变化 $d\\gamma$ 与体系中各组分的表面超量浓度 $\\Gamma_{i}$ 和化学势 $\\mu_{i}$ 联系起来。对于在恒定温度 $T$ 和压力 $p$ 下由溶剂 $A$ 和表面活性剂 $B$ 组成的双组分体系，该等温线由以下公式给出：\n$$d\\gamma = -\\Gamma_{A} d\\mu_{A} - \\Gamma_{B} d\\mu_{B}$$\n问题指定选择 Gibbs 分割面 (GDS)，使得溶剂的表面超量 $\\Gamma_{A}$ 为零。这是一种常见且方便的约定。在此条件下，$\\Gamma_{A} = 0$，方程简化为：\n$$d\\gamma = -\\Gamma_{B} d\\mu_{B}$$\n该方程将表面张力与我们所关注的物质——表面活性剂的表面超量和化学势直接联系起来。\n\n问题指出溶液可被视为理想溶液。对于理想溶液，表面活性剂 $B$ 的化学势由下式给出：\n$$\\mu_{B} = \\mu_{B}^{\\circ} + RT \\ln x_{B}$$\n其中 $\\mu_{B}^{\\circ}$ 是表面活性剂的标准化学势，$R$ 是理想气体常数，$T$ 是绝对温度，$x_{B}$ 是表面活性剂的体相摩尔分数。在恒温下对该表达式求微分，得到：\n$$d\\mu_{B} = RT \\, d(\\ln x_{B})$$\n将此 $d\\mu_{B}$ 的表达式代入简化的 Gibbs 吸附等温线，得到：\n$$d\\gamma = - \\Gamma_{B} (RT \\, d\\ln x_{B})$$\n该方程可以重排，以将表面活性剂的表面超量 $\\Gamma_{B}$ 表示为实验可测量 $\\frac{d\\gamma}{d\\ln x_{B}}$ 的函数：\n$$\\Gamma_{B} = -\\frac{1}{RT} \\frac{d\\gamma}{d\\ln x_{B}}$$\n问题提供了 $R = 8.314\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ 和 $T = 298\\,\\mathrm{K}$。乘积 $RT$ 为：\n$$RT = (8.314\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}) \\times (298\\,\\mathrm{K}) = 2477.572\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}$$\n使用该值，我们可以从所提供的斜率计算出每个给定摩尔分数 $x_{B}$ 的表面超量 $\\Gamma_{B}$。$\\frac{d\\gamma}{d\\ln x_{B}}$ 的单位是 $\\mathrm{N}\\,\\mathrm{m}^{-1}$，等价于 $\\mathrm{J}\\,\\mathrm{m}^{-2}$。因此 $\\Gamma_{B}$ 的单位将是 $\\mathrm{mol}\\,\\mathrm{m}^{-2}$。\n\n计算出的 $\\Gamma_{B}$ 值如下：\n- 在 $x_{B} = 1.0 \\times 10^{-6}$ 时: $\\Gamma_{B} = -\\frac{-1.457395 \\times 10^{-4}}{2477.572} = 5.88235 \\times 10^{-8}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- 在 $x_{B} = 1.0 \\times 10^{-5}$ 时: $\\Gamma_{B} = -\\frac{-1.238786 \\times 10^{-3}}{2477.572} = 5.00000 \\times 10^{-7}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- 在 $x_{B} = 5.0 \\times 10^{-5}$ 时: $\\Gamma_{B} = -\\frac{-3.716358 \\times 10^{-3}}{2477.572} = 1.50000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- 在 $x_{B} = 1.0 \\times 10^{-4}$ 时: $\\Gamma_{B} = -\\frac{-4.955144 \\times 10^{-3}}{2477.572} = 2.00000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- 在 $x_{B} = 2.0 \\times 10^{-4}$ 时: $\\Gamma_{B} = -\\frac{-5.946173 \\times 10^{-3}}{2477.572} = 2.40000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n- 在 $x_{B} = 1.0 \\times 10^{-3}$ 时: $\\Gamma_{B} = -\\frac{-7.086396 \\times 10^{-3}}{2477.572} = 2.86000 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$\n\n下一步是使用 Langmuir 吸附模型，题目已声明这是一个有效的假设。Langmuir 等温线通过最大表面超量 $\\Gamma_{B, \\max}$（饱和时）和吸附平衡常数 $K$ 将表面超量 $\\Gamma_{B}$ 与体相摩尔分数 $x_{B}$ 联系起来：\n$$\\Gamma_{B} = \\Gamma_{B, \\max} \\frac{K x_{B}}{1 + K x_{B}}$$\n为从数据中确定常数 $\\Gamma_{B, \\max}$ 和 $K$，我们对该方程进行线性化。一种常用且稳健的线性化方法是将方程重排为以下形式：\n$$\\frac{x_{B}}{\\Gamma_{B}} = \\frac{1}{\\Gamma_{B, \\max}} x_{B} + \\frac{1}{\\Gamma_{B, \\max} K}$$\n该方程为线性形式 $y = m x + c$，其中 $y = x_{B}/\\Gamma_{B}$，自变量为 $x = x_{B}$，斜率为 $m = 1/\\Gamma_{B, \\max}$，y轴截距为 $c = 1/(\\Gamma_{B, \\max} K)$。\n\n我们为每个数据点计算 $x_{B}/\\Gamma_{B}$ 的值：\n- $x_{B,1} = 1.0 \\times 10^{-6}$, $y_1 = \\frac{1.0 \\times 10^{-6}}{5.88235 \\times 10^{-8}} = 17.0000\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,2} = 1.0 \\times 10^{-5}$, $y_2 = \\frac{1.0 \\times 10^{-5}}{5.00000 \\times 10^{-7}} = 20.0000\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,3} = 5.0 \\times 10^{-5}$, $y_3 = \\frac{5.0 \\times 10^{-5}}{1.50000 \\times 10^{-6}} = 33.3333\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,4} = 1.0 \\times 10^{-4}$, $y_4 = \\frac{1.0 \\times 10^{-4}}{2.00000 \\times 10^{-6}} = 50.0000\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,5} = 2.0 \\times 10^{-4}$, $y_5 = \\frac{2.0 \\times 10^{-4}}{2.40000 \\times 10^{-6}} = 83.3333\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- $x_{B,6} = 1.0 \\times 10^{-3}$, $y_6 = \\frac{1.0 \\times 10^{-3}}{2.86000 \\times 10^{-6}} = 349.650\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n\n对所有六个数据点进行 $y_i$ 相对于 $x_{B,i}$ 的线性回归，得到最佳拟合线的以下参数：\n- 斜率: $m = 3.3301 \\times 10^{5}\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n- 截距: $c = 16.684\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}$\n\n从这些回归参数中，我们可以确定物理常数。最大表面超量为：\n$$\\Gamma_{B, \\max} = \\frac{1}{m} = \\frac{1}{3.3301 \\times 10^{5}\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}} = 3.0029 \\times 10^{-6}\\,\\mathrm{mol}\\,\\mathrm{m}^{-2}$$\n吸附平衡常数 $K$ 可由斜率和截距求得。由于 $m = 1/\\Gamma_{B, \\max}$ 且 $c = 1/(\\Gamma_{B, \\max} K)$，因此可以得出 $K = m/c$：\n$$K = \\frac{m}{c} = \\frac{3.3301 \\times 10^{5}\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}}{16.684\\,\\mathrm{m}^{2}\\,\\mathrm{mol}^{-1}} = 19959.9$$\n数据分析表明，整数值 $K=20000$ 很有可能是预设的理论值。使用该值不会在要求的精度范围内改变最终结果。为求最严谨，我们继续使用从回归中导出的值。\n\n最后一步是使用热力学关系式计算标准吸附自由能 $\\Delta G^{\\circ}_{\\mathrm{ads}}$：\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -RT \\ln K$$\n代入 $R$、$T$ 和计算出的 $K$ 的值：\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -(2477.572\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}) \\times \\ln(19959.9)$$\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -(2477.572\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}) \\times 9.90147$$\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -24531.8\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}$$\n将该值转换为千焦耳每摩尔：\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} = -24.5318\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$$\n题目要求答案四舍五入至三位有效数字。\n$$\\Delta G^{\\circ}_{\\mathrm{ads}} \\approx -24.5\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$$\n负号表示表面活性剂在界面上的吸附是一个自发过程。", "answer": "$$\\boxed{-24.5}$$", "id": "2772276"}, {"introduction": "这项高级实践将理论与现代计算科学联系起来，挑战您去开发一套计算方案，用于从类似于分子动力学（MD）模拟得到的原始密度剖面中测量表面过剩量。您将着手处理如毛细波导致的热波动展宽和数据离散化（分箱）等实际问题，从而深入理解理论概念在计算研究中是如何被操作化和实现的。这对于有志于从事计算材料科学或界面科学研究的学生来说，是一次宝贵的实战演练。", "problem": "您的任务是根据类似分子动力学的一维数密度分布，计算平面液-汽界面上溶质数密度的表面过剩，记为 $\\Gamma_{\\mathrm{A}}$。计算必须相对于为溶剂选择的吉布斯分割面进行，该分割面的构建应使溶剂的表面过剩为零。您的程序必须仅从基本定义和质量平衡论证出发来实现以下步骤，并且不得使用任何未在您的解决方案中明确推导的封闭形式的简化公式。\n\n您将处理一个沿坐标 $z$ 的人工合成但物理上合理的一维系统，该系统在 $z = 0$ 附近有一个单一的平面界面。系统区域为 $z \\in [-L/2, L/2]$，其中 $L$ 的单位是纳米。密度的单位是 $\\mathrm{nm}^{-3}$，最终的表面过剩必须以 $\\mathrm{nm}^{-2}$ 为单位表示。\n\n基本出发点和建模假设：\n- 溶剂的吉布斯分割面定义为：相对于界面两侧的分段常数体相参考数密度分布进行积分时，溶剂的表面过剩为零。\n- 溶质的表面过剩 $\\Gamma_{\\mathrm{A}}$ 定义为：在整个 $z$ 轴上，溶质数密度与其在所选分割面两侧的分段常数体相参考密度的偏差的积分。\n- 分子动力学通过沿 $z$ 轴将系统划分为宽度均匀为 $\\Delta z$ 的平板（分箱）来产生离散的数密度分布；因此，计算的表面过剩必须通过对这些分箱进行数值积分来近似。\n- 毛细波涨落会使瞬时界面的位置变宽，这在数密度分布的层面上，可以理想化为本征（尖锐）分布与一个标准差为 $\\sigma_{\\mathrm{cw}}$ 的高斯函数的卷积。\n\n您的程序必须：\n1. 使用物理上合理的参数构建溶剂数密度 $\\rho_{\\mathrm{B}}(z)$ 和溶质数密度 $\\rho_{\\mathrm{A}}(z)$ 的连续本征分布：\n   - 溶剂在 $z=0$ 附近的界面处表现出从液相密度到气相密度的平滑过渡，其界面宽度由参数 $w$ 设定。\n   - 溶质在界面两侧具有不同的体相密度，平滑地穿过界面，并且可能存在一个额外的局部界面吸附，该吸附由一个以 $z=0$ 为中心、振幅为 $A_{\\mathrm{ads}}$、宽度为 $\\sigma_{\\mathrm{ads}}$ 的高斯函数建模。\n2. 通过将每个本征连续分布与一个沿 $z$ 轴、标准差为 $\\sigma_{\\mathrm{cw}}$ 的归一化高斯函数进行卷积，来包含毛细波展宽效应。\n3. 通过在跨越整个区域的、宽度为 $\\Delta z$ 的均匀分箱中心网格上对卷积后的分布进行采样，来模拟分子动力学分箱，从而获得离散数组 $\\{\\rho_{\\mathrm{B}}(z_k)\\}$ 和 $\\{\\rho_{\\mathrm{A}}(z_k)\\}$。\n4. 通过对两端的最初 $M$ 个分箱和最后 $M$ 个分箱进行平均，来估算每种物质的体相参考密度，其中 $M$ 是 $0.1 N$ 的整数部分，$N$ 是分箱总数。\n5. 仅使用第一性原理和质量守恒，通过施加溶剂表面过剩为零的条件，仅从离散的溶剂分布和体相参考值来确定溶剂吉布斯分割面（界面平面）的位置 $z_0$。\n6. 通过对 $\\rho_{\\mathrm{A}}(z)$ 与其在 $z_0$ 两侧相应的体相参考密度的偏差进行数值积分，来计算溶质表面过剩 $\\Gamma_{\\mathrm{A}}$，此过程使用离散的分箱分布。您的数值积分必须通过将 $z_0$ 所在的那个分箱相对于 $z_0$ 分割成左右两段，来在分箱的分辨率下精确处理该分箱。\n7. 以 $\\mathrm{nm}^{-2}$ 为单位报告 $\\Gamma_{\\mathrm{A}}$。\n\n在您的模型中使用的物理和数值常量：\n- 区域长度：$L = 10.0$ 纳米。\n- 本征溶剂液相和气相数密度：$\\rho_{\\mathrm{B}}^{\\ell} = 33.0$ $\\mathrm{nm}^{-3}$ 和 $\\rho_{\\mathrm{B}}^{v} = 0.0$ $\\mathrm{nm}^{-3}$。\n- 本征溶质液相和气相数密度：$\\rho_{\\mathrm{A}}^{\\ell} = 0.0020$ $\\mathrm{nm}^{-3}$ 和 $\\rho_{\\mathrm{A}}^{v} = 0.0003$ $\\mathrm{nm}^{-3}$。\n- 本征界面宽度参数（两种物质的平滑过渡共用）：$w = 0.3$ 纳米。\n- 界面吸附高斯宽度：$\\sigma_{\\mathrm{ads}} = 0.2$ 纳米。\n- 对于从本征到观测值的卷积，使用标准差为 $\\sigma_{\\mathrm{cw}}$（单位为纳米）的归一化高斯函数。\n\n测试套件：\n您的程序必须为以下每个参数三元组 $(\\Delta z, \\sigma_{\\mathrm{cw}}, A_{\\mathrm{ads}})$ 计算 $\\Gamma_{\\mathrm{A}}$，其中 $\\Delta z$ 和 $\\sigma_{\\mathrm{cw}}$ 的单位是纳米，$A_{\\mathrm{ads}}$ 的单位是 $\\mathrm{nm}^{-3}$：\n- 测试 $1$：$(\\Delta z = 0.02, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.05)$。\n- 测试 $2$：$(\\Delta z = 0.005, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.05)$。\n- 测试 $3$：$(\\Delta z = 0.10, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.05)$。\n- 测试 $4$：$(\\Delta z = 0.02, \\sigma_{\\mathrm{cw}} = 0.30, A_{\\mathrm{ads}} = 0.05)$。\n- 测试 $5$：$(\\Delta z = 0.02, \\sigma_{\\mathrm{cw}} = 0.10, A_{\\mathrm{ads}} = 0.00)$。\n\n数值要求：\n- 在分箱之前，使用一个足够精细的内部网格（与 $\\Delta z$ 不同）来构建和卷积连续分布，以确保对于所有给定的 $\\sigma_{\\mathrm{cw}}$，卷积在数值上是准确和稳定的。\n- 高斯卷积必须是归一化的，并且必须保存在远离界面处的常数区域。处理区域边缘时应确保平台区域在卷积后大致保持不变。\n- 使用分箱后的分布来确定体相参考值，并通过施加溶剂零表面过剩条件来计算 $z_0$。\n\n最终输出格式和单位：\n- 您的程序必须打印单行，包含一个 Python 风格的浮点数列表 $[\\Gamma_1, \\Gamma_2, \\Gamma_3, \\Gamma_4, \\Gamma_5]$，按顺序对应于测试 1 到 5。\n- 每个 $\\Gamma_i$ 必须以 $\\mathrm{nm}^{-2}$ 为单位表示，并以小数形式打印，小数点后至少有六位数字。\n- 不得打印任何其他文本。\n\n角度单位：不适用。\n\n百分比：不适用。\n\n您的算法将根据正确性、对分箱变化的鲁棒性，以及通过测试套件中数值所揭示的 $\\Gamma_{\\mathrm{A}}$ 对毛细波展宽和分箱尺寸的敏感性进行评估。该问题完全自洽，不需要外部数据。", "solution": "所述问题在科学上是合理的、自洽的且定义明确。它提出了界面物理化学中的一个标准计算任务，要求根据模型一维密度分布计算表面过剩量。其参数和方法在物理上是合理的，在计算上是可行的。因此，我将按照要求，从基本原理出发，给出一个完整的解决方案。\n\n问题的核心是计算平面液-汽界面上溶质的表面过剩，记为 $\\Gamma_{\\mathrm{A}}$。这是相对于一个 Gibbs 分割面 $z_0$ 进行的，该分割面由溶剂表面过剩 $\\Gamma_{\\mathrm{B}}$ 为零的条件定义。计算过程包括几个步骤：构建连续的本征密度分布，应用展宽效应，将分布离散化为像分子模拟那样的分箱，估算体相性质，定位分割面，最后通过数值积分计算溶质的表面过剩。\n\n**第 1 步：构建本征密度分布**\n\n我们首先定义溶剂（物种B）和溶质（物种A）沿 $z$ 坐标的本征数密度分布。液相（$\\ell$）和气相（$v$）之间的平滑过渡使用双曲正切函数来建模，这是描述界面分布的标准选择。界面的本征宽度由参数 $w$ 控制。\n\n溶剂的本征密度分布 $\\rho_{\\mathrm{B,int}}(z)$ 由下式给出：\n$$ \\rho_{\\mathrm{B,int}}(z) = \\frac{\\rho_{\\mathrm{B}}^{\\ell} + \\rho_{\\mathrm{B}}^{v}}{2} - \\frac{\\rho_{\\mathrm{B}}^{\\ell} - \\rho_{\\mathrm{B}}^{v}}{2} \\tanh\\left(\\frac{z}{2w}\\right) $$\n这里，$\\rho_{\\mathrm{B}}^{\\ell}$ 和 $\\rho_{\\mathrm{B}}^{v}$ 分别是溶剂在液相和气相中的体相数密度。坐标系的设置使得 $z \\to -\\infty$ 对应于液相，$z \\to +\\infty$ 对应于气相。\n\n溶质的本征密度分布 $\\rho_{\\mathrm{A,int}}(z)$ 由一个类似的过渡分布加上一个表示界面局部吸附的项组成。这种吸附被建模为一个以 $z=0$ 为中心、振幅为 $A_{\\mathrm{ads}}$、宽度为 $\\sigma_{\\mathrm{ads}}$ 的高斯函数。\n$$ \\rho_{\\mathrm{A,int}}(z) = \\left(\\frac{\\rho_{\\mathrm{A}}^{\\ell} + \\rho_{\\mathrm{A}}^{v}}{2} - \\frac{\\rho_{\\mathrm{A}}^{\\ell} - \\rho_{\\mathrm{A}}^{v}}{2} \\tanh\\left(\\frac{z}{2w}\\right)\\right) + A_{\\mathrm{ads}} \\exp\\left(-\\frac{z^2}{2\\sigma_{\\mathrm{ads}}^2}\\right) $$\n其中 $\\rho_{\\mathrm{A}}^{\\ell}$ 和 $\\rho_{\\mathrm{A}}^{v}$ 是溶质的体相密度。\n\n**第 2 步：毛细波展宽**\n\n在模拟中观察到的时间平均密度分布会因界面的热涨落（即毛细波）而展宽。这种效应通过将本征分布与一个标准差为 $\\sigma_{\\mathrm{cw}}$ 的归一化高斯核 $K(z)$ 进行卷积来建模：\n$$ K(z) = \\frac{1}{\\sqrt{2\\pi}\\sigma_{\\mathrm{cw}}} \\exp\\left(-\\frac{z^2}{2\\sigma_{\\mathrm{cw}}^2}\\right) $$\n因此，对于每个物种 $S \\in \\{A, B\\}$，可观察到的卷积后分布为：\n$$ \\rho_{S,\\mathrm{conv}}(z) = \\int_{-\\infty}^{\\infty} \\rho_{S,\\mathrm{int}}(z') K(z-z') dz' $$\n此卷积在超出主区域 $[-L/2, L/2]$ 的精细网格上进行数值计算，以减轻边界效应。\n\n**第 3 步：通过分箱进行离散化**\n\n为了模拟分子动力学模拟的数据，连续的、经过卷积的分布被离散化。区域 $z \\in [-L/2, L/2]$ 被划分为 $N$ 个宽度均匀为 $\\Delta z$ 的分箱，其中 $N$ 是 $L/\\Delta z$ 的整数部分。每个分箱 $k$（中心在 $z_k$）中的密度是卷积后分布在该分箱范围内的平均值：\n$$ \\rho_{S}(z_k) = \\frac{1}{\\Delta z} \\int_{z_k - \\Delta z/2}^{z_k + \\Delta z/2} \\rho_{S,\\mathrm{conv}}(z) dz $$\n这将产生两个离散数组 $\\{\\rho_{\\mathrm{A}}(z_k)\\}$ 和 $\\{\\rho_{\\mathrm{B}}(z_k)\\}$，它们是所有后续计算的基础。\n\n**第 4 步：估算体相参考密度**\n\n每个相的体相参考密度从分箱后分布的平台区估算。我们对液相的前 $M$ 个分箱的密度和气相的后 $M$ 个分箱的密度进行平均，其中 $M = \\lfloor 0.1 N \\rfloor$。\n对于每个物种 $S \\in \\{A, B\\}$：\n$$ \\hat{\\rho}_S^\\ell = \\frac{1}{M} \\sum_{k=0}^{M-1} \\rho_S(z_k) $$\n$$ \\hat{\\rho}_S^v = \\frac{1}{M} \\sum_{k=N-M}^{N-1} \\rho_S(z_k) $$\n这些估算值 $\\hat{\\rho}_S^\\ell$ 和 $\\hat{\\rho}_S^v$ 将作为 Gibbs 表面计算的参考密度。\n\n**第 5 步：定位 Gibbs 分割面, $z_0$**\n\nGibbs 分割面的位置 $z_0$ 由溶剂（B）的表面过剩为零的条件确定。表面过剩 $\\Gamma_{\\mathrm{B}}$ 是实际密度分布与分段常数参考分布之间差值的积分：\n$$ \\Gamma_{\\mathrm{B}} = \\int_{-L/2}^{L/2} [\\rho_{\\mathrm{B}}(z) - \\rho_{\\mathrm{B}}^{\\text{ref}}(z; z_0)] dz = 0 $$\n参考分布 $\\rho_{\\mathrm{B}}^{\\text{ref}}(z; z_0)$ 是一个由估算的体相密度定义的阶跃函数：\n$$ \\rho_{\\mathrm{B}}^{\\text{ref}}(z; z_0) = \\begin{cases} \\hat{\\rho}_{\\mathrm{B}}^\\ell & \\text{if } z < z_0 \\\\ \\hat{\\rho}_{\\mathrm{B}}^v & \\text{if } z \\ge z_0 \\end{cases} $$\n将此代入积分条件并求解 $z_0$：\n$$ \\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz = \\int_{-L/2}^{z_0} \\hat{\\rho}_{\\mathrm{B}}^\\ell dz + \\int_{z_0}^{L/2} \\hat{\\rho}_{\\mathrm{B}}^v dz $$\n$$ \\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz = \\hat{\\rho}_{\\mathrm{B}}^\\ell (z_0 + L/2) + \\hat{\\rho}_{\\mathrm{B}}^v (L/2 - z_0) $$\n整理以求解 $z_0$ 得：\n$$ z_0 = \\frac{\\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz - \\frac{L}{2}(\\hat{\\rho}_{\\mathrm{B}}^\\ell + \\hat{\\rho}_{\\mathrm{B}}^v)}{\\hat{\\rho}_{\\mathrm{B}}^\\ell - \\hat{\\rho}_{\\mathrm{B}}^v} $$\n该积分使用分箱数据近似计算：$\\int_{-L/2}^{L/2} \\rho_{\\mathrm{B}}(z) dz \\approx \\sum_{k=0}^{N-1} \\rho_{\\mathrm{B}}(z_k) \\Delta z$。\n\n**第 6 步：计算溶质表面过剩, $\\Gamma_{\\mathrm{A}}$**\n\n在确定 $z_0$ 后，使用相同的原理计算溶质表面过剩 $\\Gamma_{\\mathrm{A}}$。$\\Gamma_{\\mathrm{A}}$ 是溶质密度分布与其相应参考分布（同样在 $z_0$ 处切换）偏差的积分。\n$$ \\Gamma_{\\mathrm{A}} = \\int_{-L/2}^{L/2} [\\rho_{\\mathrm{A}}(z) - \\rho_{\\mathrm{A}}^{\\text{ref}}(z; z_0)] dz $$\n其中 $\\rho_{\\mathrm{A}}^{\\text{ref}}(z; z_0)$ 的定义与溶剂的类似。计算必须使用离散分布 $\\{\\rho_{\\mathrm{A}}(z_k)\\}$ 进行，并且必须细致地处理被 $z_0$ 分割的分箱。\n\n设分箱 $j$ 是包含 $z_0$ 的分箱，使其边界满足 $z_j^{\\text{start}} \\le z_0 < z_j^{\\text{end}}$。总过剩 $\\Gamma_{\\mathrm{A}}$ 是所有分箱贡献的总和。\n对于分箱 $k < j$（完全在液相区域），其贡献为 $(\\rho_{\\mathrm{A}}(z_k) - \\hat{\\rho}_{\\mathrm{A}}^\\ell) \\Delta z$。\n对于分箱 $k > j$（完全在气相区域），其贡献为 $(\\rho_{\\mathrm{A}}(z_k) - \\hat{\\rho}_{\\mathrm{A}}^v) \\Delta z$。\n对于被分割的分箱 $j$，我们将其积分拆分：\n$$ \\text{Contribution}_j = \\int_{z_j^{\\text{start}}}^{z_0} (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^\\ell) dz + \\int_{z_0}^{z_j^{\\text{end}}} (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^v) dz $$\n$$ \\text{Contribution}_j = (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^\\ell)(z_0 - z_j^{\\text{start}}) + (\\rho_{\\mathrm{A}}(z_j) - \\hat{\\rho}_{\\mathrm{A}}^v)(z_j^{\\text{end}} - z_0) $$\n总表面过剩 $\\Gamma_{\\mathrm{A}}$ 是对所有 $N$ 个分箱的这些贡献的总和。此过程按要求正确地实现了对分箱数据的数值积分。\n\n所述算法将为每个测试用例实现，以得出最终结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.ndimage import gaussian_filter1d\n\ndef solve():\n    \"\"\"\n    Main function to solve for solute surface excess for all test cases.\n    \"\"\"\n    \n    # Define physical and numerical constants\n    L = 10.0  # Domain length in nm\n    rho_B_l, rho_B_v = 33.0, 0.0  # Solvent densities in nm^-3\n    rho_A_l, rho_A_v = 0.0020, 0.0003  # Solute densities in nm^-3\n    w = 0.3  # Intrinsic interfacial width in nm\n    sigma_ads = 0.2  # Adsorption Gaussian width in nm\n    \n    # Define the test cases\n    test_cases = [\n        # (dz, sigma_cw, A_ads)\n        (0.02, 0.10, 0.05),   # Test 1\n        (0.005, 0.10, 0.05),  # Test 2\n        (0.10, 0.10, 0.05),   # Test 3\n        (0.02, 0.30, 0.05),   # Test 4\n        (0.02, 0.10, 0.00),   # Test 5\n    ]\n\n    def solve_single_case(dz, sigma_cw, A_ads):\n        \"\"\"\n        Computes the solute surface excess for a single set of parameters.\n        \"\"\"\n        # 1. Construct continuous intrinsic profiles on a fine grid\n        dz_fine = 0.001\n        # Extend the grid to handle convolution accurately at the boundaries\n        padding = 8 * max(w, sigma_cw, sigma_ads)\n        fine_domain_size = L + 2 * padding\n        z_fine = np.arange(-fine_domain_size / 2, fine_domain_size / 2, dz_fine)\n\n        tanh_term = np.tanh(z_fine / (2 * w))\n        rho_B_int = (rho_B_l + rho_B_v) / 2 - (rho_B_l - rho_B_v) / 2 * tanh_term\n        rho_A_int_base = (rho_A_l + rho_A_v) / 2 - (rho_A_l - rho_A_v) / 2 * tanh_term\n        \n        adsorption_term = A_ads * np.exp(-z_fine**2 / (2 * sigma_ads**2))\n        rho_A_int = rho_A_int_base + adsorption_term\n\n        # 2. Incorporate capillary wave broadening (Convolution)\n        sigma_pixels = sigma_cw / dz_fine\n        rho_B_conv = gaussian_filter1d(rho_B_int, sigma_pixels, mode='nearest')\n        rho_A_conv = gaussian_filter1d(rho_A_int, sigma_pixels, mode='nearest')\n\n        # 3. Emulate MD binning\n        N = int(round(L / dz))\n        bin_edges = np.linspace(-L / 2, L / 2, N + 1)\n        \n        rho_B_binned = np.zeros(N)\n        rho_A_binned = np.zeros(N)\n        \n        fine_coords_map = np.floor((z_fine - bin_edges[0]) / dz).astype(int)\n        \n        for i in range(N):\n            mask = (fine_coords_map == i)\n            if np.any(mask):\n                rho_B_binned[i] = np.mean(rho_B_conv[mask])\n                rho_A_binned[i] = np.mean(rho_A_conv[mask])\n            else: # Fallback for very coarse bins, though not expected here\n                z_center = (bin_edges[i] + bin_edges[i+1]) / 2\n                rho_B_binned[i] = np.interp(z_center, z_fine, rho_B_conv)\n                rho_A_binned[i] = np.interp(z_center, z_fine, rho_A_conv)\n\n\n        # 4. Estimate bulk reference densities\n        M = int(0.1 * N)\n        if M  1: M = 1\n        \n        hat_rho_B_l = np.mean(rho_B_binned[:M])\n        hat_rho_B_v = np.mean(rho_B_binned[-M:])\n        hat_rho_A_l = np.mean(rho_A_binned[:M])\n        hat_rho_A_v = np.mean(rho_A_binned[-M:])\n\n        # 5. Determine Gibbs surface location z0\n        integral_rho_B = np.sum(rho_B_binned) * dz\n        denominator = hat_rho_B_l - hat_rho_B_v\n        if abs(denominator)  1e-9:\n            z0 = 0.0\n        else:\n            numerator = integral_rho_B - (L / 2) * (hat_rho_B_l + hat_rho_B_v)\n            z0 = numerator / denominator\n\n        # 6. Compute solute surface excess Gamma_A\n        gamma_A = 0.0\n        \n        # Find index j of the bin containing z0\n        # searchsorted returns the index where z0 would be inserted to maintain order\n        # If z0 is in bin j, bin_edges[j] = z0  bin_edges[j+1]\n        j = np.searchsorted(bin_edges, z0, side='right') - 1\n        j = np.clip(j, 0, N - 1)\n        \n        # Sum contributions from bins fully to the left of the split bin\n        if j > 0:\n            gamma_A += np.sum(rho_A_binned[:j] - hat_rho_A_l) * dz\n\n        # Sum contributions from bins fully to the right of the split bin\n        if j  N - 1:\n            gamma_A += np.sum(rho_A_binned[j+1:] - hat_rho_A_v) * dz\n            \n        # Add contribution from the split bin j\n        bin_start, bin_end = bin_edges[j], bin_edges[j+1]\n        gamma_A += (rho_A_binned[j] - hat_rho_A_l) * (z0 - bin_start)\n        gamma_A += (rho_A_binned[j] - hat_rho_A_v) * (bin_end - z0)\n\n        return gamma_A\n\n    results = []\n    for case in test_cases:\n        dz, sigma_cw, A_ads = case\n        result = solve_single_case(dz, sigma_cw, A_ads)\n        results.append(result)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join([f'{r:.8f}' for r in results])}]\")\n\nsolve()\n```", "id": "2772248"}]}