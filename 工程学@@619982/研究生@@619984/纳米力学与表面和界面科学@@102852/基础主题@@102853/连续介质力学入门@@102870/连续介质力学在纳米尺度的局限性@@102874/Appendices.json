{"hands_on_practices": [{"introduction": "经典连续介质力学的基石之一是连续介质假设，它假定材料的性质可以在一个“点”上定义，而这个点实际上是一个远大于原子尺度但远小于结构特征尺寸的代表性体积元（RVE）。本练习旨在通过一个简单的估算来揭示这一假设在纳米尺度下面临的挑战。通过计算一个典型纳米柱横截面上的原子数量，你将亲身体会到离散效应是如何让经典应力场的定义变得模糊不清的 [@problem_id:2776931]。", "problem": "一个由面心立方（FCC）金属制成的晶体纳米柱，其横截面为圆形，直径 $D = 20\\,\\text{nm}$，立方晶格参数 $a = 0.36\\,\\text{nm}$。假设纳米柱的轴线平行于 $\\langle 100 \\rangle$ 晶向，因此沿任何笛卡尔方向的等效晶格点之间的重复距离等于 $a$。从晶格参数（定义为等效晶格点之间的周期性间距）和柯西应力（定义为在一个收缩的面元上平均的牵引力的极限）的定义出发，估算纳米柱直径上的原子间距数量，并利用此估算论证在此尺度下，经典连续介质力学中是否可以有意义地定义一个光滑的应力场。报告最终答案为估算的直径上的原子数（一个纯数）。将您的答案四舍五入到两位有效数字。", "solution": "在立方晶体中，晶格参数 $a$ 定义为沿每个笛卡尔轴的等效晶格点之间的周期性间距。对于一个面心立方（FCC）晶体，其取向使得纳米柱轴线平行于 $\\langle 100 \\rangle$ 方向，沿该方向的等效晶格点之间的间距为 $a$。沿着横跨圆形截面并与此 $\\langle 100 \\rangle$ 方向对齐的一条直线（即，穿过直径），能够容纳在直径上的晶格周期数由几何尺寸与重复距离之比给出。\n\n令 $N$ 表示直径上的原子间距数（等效于晶格周期数）。从周期性的定义出发，可以进行基本估算：\n$$\nN \\approx \\frac{D}{a}.\n$$\n这个表达式是通过计算长度为 $D$ 的线段可以容纳多少个长度为 $a$ 的区间而得到的。这里有一个微妙之处，即我们是计算间距还是晶格点：沿长度为 $D$ 的线段的晶格点数约为 $D/a + 1$，而间距数是 $D/a$。在纳米尺度上进行估算时，$D \\gg a$，与 $D/a$ 相比，1的差异可以忽略不计，因此我们采用 $N \\approx D/a$ 作为直径上原子数的估算值，其不确定度在单位量级之内。\n\n代入给定值，\n$$\nN \\approx \\frac{20\\,\\text{nm}}{0.36\\,\\text{nm}} \\approx 55.555\\ldots.\n$$\n四舍五入到两位有效数字，得到\n$$\nN \\approx 56.\n$$\n\n在连续介质力学中定义光滑应力场的意义可以从柯西应力的基本定义来推断。某一点的柯西应力定义为牵引矢量（即传递过一个表面的单位面积力）的极限，此极限是在该表面面积收缩至零的过程中求得的，但要求该面积在收缩时始终足够大，以包含许多微观结构组分，从而使局部力的波动能被平均掉。从原子角度看，一个面元上的牵引力来自于穿过该面元的离散原子间力的总和。为了使连续介质极限存在且光滑，特征尺寸为 $L$ 的平均域必须满足 $L \\gg a$，并且代表性体积元（RVE）必须包含许多原子，以便波动能以大约 $1/\\sqrt{n}$ 的比例减小，其中 $n$ 是贡献的原子数。\n\n直径上约有 $N \\approx D/a \\approx 56$ 个原子间距，如果为了粗略计算而想象一个边长为 $D$ 的正方形，则截面可容纳大约 $N^{2} \\sim 3 \\times 10^{3}$ 个晶格点；对于圆形截面，因子为 $\\pi/4$，但数量级是相似的。虽然这比几个原子要多，但它仍然小到足以产生以下影响：\n- 不可忽略比例的原子位于厚度约为 $a$ 的表面层内。距离表面一个晶格间距内的截面积所占的比例约为 $1 - (1 - 2a/D)^{2}$；代入 $a/D \\approx 0.018$ 得到受表面影响的面积比例约为 $7 \\times 10^{-2}$，对于局部场而言，这是不可忽略的。\n- 任何与直径相比小但与 $a$ 相比大的平均区域，仍将只包含几十到几百个原子，这会导致局部牵引力出现显著的离散波动，且这些波动在面积收缩至零的极限下不会消失，因为平均域的下限由原子间距决定。\n\n因此，尽管可以定义一个全局或截面平均的应力，但在这种尺度下，经典连续介质中逐点光滑的柯西应力场的概念变得值得商榷，尤其是在原子配位和键合高度不均匀的自由表面附近。这说明了连续介质力学在纳米尺度上的一个局限性：$a$ 与特征尺寸 $D$ 之间缺乏明确的尺度分离，这削弱了光滑场定义所依据的假设。\n\n所要求的最终数值输出是估算的直径上的原子数，四舍五入到两位有效数字：\n$$\nN \\approx 56.\n$$", "answer": "$$\\boxed{56}$$", "id": "2776931"}, {"introduction": "在纳米尺度上，物体巨大的表面积与体积之比使得表面效应从可以忽略的次要因素变为主导物理现象。本练习将通过杨-拉普拉斯方程 (Young-Laplace equation)，让你量化由表面张力（或更准确地说是表面应力）引起的毛细现象。你将计算一个纳米线内部由表面效应产生的本征应力，并将其与一个相当大的外加应力进行比较，从而直观地理解为何在纳米力学分析中必须考虑表面效应 [@problem_id:2776803]。", "problem": "一个半径为 $R = 10\\,\\mathrm{nm}$ 的单晶圆柱形纳米线悬浮在真空中。其自由表面具有各向同性、与应变无关的表面应力，大小为 $\\gamma_{s} = 1.5\\,\\mathrm{N/m}$，为进行估算，可以认为其数值与表面能相等。忽略体积力并假设为静态条件。一个大小为 $\\sigma_{\\mathrm{app}} = 100\\,\\mathrm{MPa}$ 的单轴拉伸应力沿纳米线轴向施加。\n\n从弯曲界面上的力平衡和将各向同性界面的压力跃变与平均曲率联系起来的经典毛细关系出发，使用圆柱体的平均曲率来估算纳米线中由毛细作用引起的内应力 $\\sigma_{\\mathrm{cap}}$ 的大小。然后，计算无量纲比值\n$$\\chi \\equiv \\frac{\\sigma_{\\mathrm{cap}}}{\\sigma_{\\mathrm{app}}}.$$\n清楚说明所使用的几何曲率以及将毛细压力映射为适合与轴向应力进行比较的内应力估算值所需的任何假设。报告 $\\chi$ 的最终答案，形式为一个纯数（无单位），并将答案四舍五入至三位有效数字。", "solution": "求解从毛细作用的基本原理开始。跨越一个弯曲界面的压力差 $\\Delta P$ 与表面应力以及该表面的几何形状有关。对于一个具有各向同性表面应力（此处记为 $\\gamma_{s}$）的界面，该关系由杨-拉普拉斯方程给出：\n$$ \\Delta P = P_{\\mathrm{in}} - P_{\\mathrm{out}} = \\gamma_{s} (\\kappa_{1} + \\kappa_{2}) $$\n其中 $P_{\\mathrm{in}}$ 是内部压力，$P_{\\mathrm{out}}$ 是外部压力，$\\kappa_{1}$ 和 $\\kappa_{2}$是表面的两个主曲率。\n\n问题指定了一个半径为 $R$ 的圆柱形纳米线。我们必须确定其主曲率。圆柱面沿其周向是弯曲的，但沿其轴向是笔直的。\n- 半径为 $R$ 的圆的曲率为 $\\frac{1}{R}$。这是第一个主曲率 $\\kappa_{1}$。\n- 直线的曲率为 $0$。这是第二个主曲率 $\\kappa_{2}$，对应于轴向。\n因此，主曲率为：\n$$ \\kappa_{1} = \\frac{1}{R} $$\n$$ \\kappa_{2} = 0 $$\n纳米线处于真空中，因此外部压力 $P_{\\mathrm{out}} = 0$。将曲率代入杨-拉普拉斯方程，得到由表面效应产生的内部压力：\n$$ P_{\\mathrm{in}} - 0 = \\gamma_{s} \\left(\\frac{1}{R} + 0\\right) $$\n$$ P_{\\mathrm{in}} = \\frac{\\gamma_{s}}{R} $$\n这个内部压力是正的，意味着纳米线内的材料由于表面应力而处于受压状态。\n\n下一步是将这个内部压力与一个内应力 $\\sigma_{\\mathrm{cap}}$ 联系起来，该内应力可以与施加的轴向应力 $\\sigma_{\\mathrm{app}}$ 进行比较。在各向同性固体中，均匀的压力 $P$ 会引起静水压应力状态，其应力张量表示为 $\\sigma_{ij} = -P \\delta_{ij}$，其中 $\\delta_{ij}$ 是克罗内克（Kronecker）δ。负号表示对于正压力而言是压缩状态。\n在本例中，纳米线内部由毛细作用引起的应力张量为：\n$$ \\sigma_{ij}^{\\mathrm{cap}} = -P_{\\mathrm{in}} \\delta_{ij} = -\\frac{\\gamma_{s}}{R} \\delta_{ij} $$\n在圆柱坐标系 $(r, \\theta, z)$ 中的应力分量为：\n$$ \\sigma_{rr} = \\sigma_{\\theta\\theta} = \\sigma_{zz} = -\\frac{\\gamma_{s}}{R} $$\n问题要求估算内应力 $\\sigma_{\\mathrm{cap}}$，使其“适合与轴向应力” $\\sigma_{\\mathrm{app}}$ 进行比较。合理的选择是由毛细作用引起的应力的轴向分量，即 $\\sigma_{zz}$。问题要求的是这个应力的*大小*。\n$$ \\sigma_{\\mathrm{cap}} = \\left| \\sigma_{zz} \\right| = \\left| -\\frac{\\gamma_{s}}{R} \\right| = \\frac{\\gamma_{s}}{R} $$\n这表示一个大小为 $\\gamma_{s}/R$ 的压应力沿纳米线轴向作用。\n\n我们现在代入给定的数值：\n- $\\gamma_{s} = 1.5\\,\\mathrm{N/m}$\n- $R = 10\\,\\mathrm{nm} = 10 \\times 10^{-9}\\,\\mathrm{m}$\n\n$$ \\sigma_{\\mathrm{cap}} = \\frac{1.5\\,\\mathrm{N/m}}{10 \\times 10^{-9}\\,\\mathrm{m}} = 1.5 \\times 10^{8}\\,\\mathrm{N/m^2} = 1.5 \\times 10^{8}\\,\\mathrm{Pa} $$\n换算成兆帕斯卡（$1\\,\\mathrm{MPa} = 10^6\\,\\mathrm{Pa}$）：\n$$ \\sigma_{\\mathrm{cap}} = 150 \\times 10^{6}\\,\\mathrm{Pa} = 150\\,\\mathrm{MPa} $$\n\n最后一步是计算无量纲比值 $\\chi$。给定的施加轴向应力为 $\\sigma_{\\mathrm{app}} = 100\\,\\mathrm{MPa}$。\n$$ \\chi = \\frac{\\sigma_{\\mathrm{cap}}}{\\sigma_{\\mathrm{app}}} = \\frac{150\\,\\mathrm{MPa}}{100\\,\\mathrm{MPa}} = 1.5 $$\n问题要求答案四舍五入至三位有效数字。\n\n此推导中作出的假设有：\n1.  连续介质模型和杨-拉普拉斯方程在 $10\\,\\mathrm{nm}$ 尺度上是有效的。\n2.  如问题所述，表面应力是各向同性的，可以用一个标量值 $\\gamma_{s}$ 表示。\n3.  由毛细作用引起的压力在纳米线体内部产生均匀的静水压应力状态。\n4.  用于与施加的轴向应力进行比较的内应力 $\\sigma_{\\mathrm{cap}}$ 被正确地确定为此静水压应力的轴向分量的大小。\n\n$\\chi = 1.50$ 这个值表明，对于这种尺寸的纳米线，由表面毛细作用产生的内禀应力不仅非常显著，而且可以超过一个相当大的外部施加应力。这是纳米尺度力学的一个典型特征，在纳米尺度下，表面积与体积的比值很大。", "answer": "$$ \\boxed{1.50} $$", "id": "2776803"}, {"introduction": "认识到经典连续介质力学的局限性后，研究者们开发了增强的连续介质模型，将纳米尺度物理效应纳入其中，例如Gurtin–Murdoch表面弹性理论。这个高级实践模拟了计算材料科学中的一个关键工作流程：如何从更底层的原子模拟中提取参数，以构建一个更精确的宏观模型。通过分析给定的模拟拉伸和弯曲数据，你将学习如何确定表面弹性常数，从而将原子尺度的行为与增强的连续介质框架联系起来 [@problem_id:2776833]。", "problem": "我们采用原子模拟方法，研究具有两个自由表面的薄晶体板在两类载荷作用下的行为：面内拉伸和微小幅度的圆柱形弯曲。研究的目的是提取线性表面弹性常数，将它们组装成四阶表面刚度张量 $S_{ijkl}$，并将其映射到连续介质模型中使用的 Gurtin–Murdoch (GM) 表面弹性参数。该分析必须植根于第一性原理：线性动量守恒、小应变和曲率的线性运动学、表面应力的定义，以及在小应变下连接表面能和表面应力的 Shuttleworth 关系。在小应变范围内，表面本构响应被假定为线性的。\n\n出发的基本依据：\n- 当高阶、非局域和惯性效应可以忽略不计时，Newton 第二定律和平衡状态下的线性动量平衡意味着，测得的平均表面牵引力和应力与施加的微小应变成线性关系。\n- 小应变运动学：面内表面应变张量 $\\,\\varepsilon_{ij}\\,$ 是对称的，且 $\\,\\varepsilon_{ij} \\ll 1\\,$。\n- 关于表面应力 $\\,t_{ij}\\,$ 的 Shuttleworth 关系通过 $\\,t_{ij} = \\gamma\\,\\delta_{ij} + \\partial \\gamma/\\partial \\varepsilon_{ij}\\,$ 将单位面积的表面自由能 $\\,\\gamma\\,$ 与应变联系起来。在零应变附近进行线性化，得到一个残余（预）应力 $\\,\\tau_0\\,\\delta_{ij}\\,$ 和一个线性映射 $\\,S_{ijkl}\\,$，使得 $\\,t_{ij} \\approx \\tau_0\\,\\delta_{ij} + S_{ijkl}\\,\\varepsilon_{kl}\\,$，其中重复的下标表示在面内方向上求和。\n\n假设和范围：\n- 除固有表面应力外，表面是无牵引力的。\n- 下面提供的原子“测量值”已经被归一化为每个表面的平均表面应力，并与线性化形式 $\\,t_{ij} \\approx \\tau_0\\,\\delta_{ij} + S_{ijkl}\\,\\varepsilon_{kl}\\,$ 是一致的。\n- 剪切使用张量剪切应变 $\\,\\varepsilon_{xy}\\,$（而非工程剪切应变 $\\,\\gamma_{xy} = 2\\varepsilon_{xy}\\,$）。对于各向同性表面，$\\,t_{xy} = 2\\mu_s\\,\\varepsilon_{xy}\\,$。对于下面的正交各向异性情况，$\\,t_{xy} = 2 S_{66}\\,\\varepsilon_{xy}\\,$。\n- 对于厚度为 $\\,h\\,$ 的板，在小曲率 $\\,\\kappa\\,$ 下发生圆柱形弯曲时，其顶部和底部表面的面内应变可以直接由小应变板运动学得出。\n\n您的任务：\n1) 根据拉伸数据，建立并求解一个线性回归模型，以估算残余表面应力 $\\,\\tau_0\\,$ 和 $\\,S_{ijkl}\\,$ 的独立分量：\n   - 对于各向同性表面，用两个表面 Lamé 型模量 $\\,\\lambda_s\\,$ 和 $\\,\\mu_s\\,$ 来参数化 $\\,S_{ijkl}\\,$，使得 $\\,t_{xx} = \\tau_0 + \\lambda_s(\\varepsilon_{xx}+\\varepsilon_{yy}) + 2\\mu_s\\,\\varepsilon_{xx}\\,$，$\\,t_{yy} = \\tau_0 + \\lambda_s(\\varepsilon_{xx}+\\varepsilon_{yy}) + 2\\mu_s\\,\\varepsilon_{yy}\\,$，以及 $\\,t_{xy} = 2\\mu_s\\,\\varepsilon_{xy}\\,$。\n   - 对于在 $(x,y)$ 基下的正交各向异性表面，使用类 Voigt 常数 $\\,S_{11}, S_{22}, S_{12}, S_{66}\\,$，其中 $\\,t_{xx} = \\tau_0 + S_{11}\\varepsilon_{xx} + S_{12}\\varepsilon_{yy}\\,$，$\\,t_{yy} = \\tau_0 + S_{12}\\varepsilon_{xx} + S_{22}\\varepsilon_{yy}\\,$，以及 $\\,t_{xy} = 2 S_{66}\\varepsilon_{xy}\\,$。\n   使用将所有给定方程叠加的普通最小二乘法。\n\n2) 根据弯曲数据，从小应变板运动学和力矩平衡出发，推导单位宽度的弯曲力矩 $\\,M\\,$ 对曲率 $\\,\\kappa\\,$ 的斜率如何分离出表面弹性常数和厚度 $\\,h\\,$ 的一个组合。然后，使用从拉伸数据导出的常数计算预测的由表面引起的弯曲刚度贡献，并将其与通过原点约束的回归直接从弯曲数据估算的斜率进行比较。\n\n3) 在算法检查或注释中讨论连续介质映射在纳米尺度上的局限性，包括：有限尺寸效应（表面层厚度与 $\\,h\\,$ 相当）、潜在的应变梯度或非局域行为，以及对原子表面应力定义的敏感性。\n\n所有输出必须采用国际单位制 (SI)：\n- 应变 $\\,\\varepsilon_{ij}\\,$ 是无量纲的。\n- 表面应力 $\\,t_{ij}\\,$、残余表面应力 $\\,\\tau_0\\,$ 以及表面弹性模量 $\\,\\lambda_s, \\mu_s, S_{11}, S_{22}, S_{12}, S_{66}\\,$ 的单位是牛顿每米 ($\\,\\mathrm{N/m}\\,$)。\n- 曲率 $\\,\\kappa\\,$ 的单位是米分之一 ($\\,\\mathrm{m^{-1}}\\,$)。\n- 单位宽度的弯曲力矩 $\\,M\\,$ 的单位是牛顿 ($\\,\\mathrm{N}\\,$)。\n- 从映射推断出的由表面引起的弯曲刚度贡献的单位是 $\\,\\mathrm{N\\cdot m}\\,$。所有数值输出必须报告为不带单位符号的普通浮点数。\n\n测试套件：\n提供一个单一程序，计算以下三种情况的结果。不允许外部输入；所有数据都嵌入在程序中。\n\n情况 A (各向同性表面)：\n- 厚度： $\\,h = 7\\times 10^{-9}\\,\\mathrm{m}\\,$。\n- 拉伸数据：五个应变状态 $\\,(\\varepsilon_{xx},\\varepsilon_{yy},\\varepsilon_{xy})\\,$ 及测得的表面应力 $\\,t_{xx}, t_{yy}, t_{xy}\\,$：\n  1. $\\,\\varepsilon = (1\\times 10^{-3},\\,0,\\,0)\\,$ 对应 $\\,t=(1.207,\\,1.203,\\,0)\\,$。\n  2. $\\,\\varepsilon = (5\\times 10^{-4},\\,5\\times 10^{-4},\\,0)\\,$ 对应 $\\,t=(1.205,\\,1.205,\\,0)\\,$。\n  3. $\\,\\varepsilon = (0,\\,0,\\,8\\times 10^{-4})\\,$ 对应 $\\,t=(1.2,\\,1.2,\\,3.2\\times 10^{-3})\\,$。\n  4. $\\,\\varepsilon = (0,\\,2\\times 10^{-3},\\,0)\\,$ 对应 $\\,t=(1.206,\\,1.214,\\,0)\\,$。\n  5. $\\,\\varepsilon = (1\\times 10^{-3},\\,-5\\times 10^{-4},\\,3\\times 10^{-4})\\,$ 对应 $\\,t=(1.2055,\\,1.1995,\\,1.2\\times 10^{-3})\\,$。\n- 关于 $\\,x\\,$ 轴的弯曲数据（圆柱形弯曲，中面拉伸为零）：曲率 $\\,\\kappa \\in \\{1\\times 10^{6},\\,2\\times 10^{6},\\,4\\times 10^{6}\\}\\,\\mathrm{m^{-1}}\\,$ 对应测得的单位宽度弯曲力矩 $\\,M \\in \\{1.715\\times 10^{-10},\\,3.43\\times 10^{-10},\\,6.86\\times 10^{-10}\\}\\,\\mathrm{N}\\,$。\n\n情况 B (各向同性，近不可压缩表面)：\n- 厚度：$\\,h = 3\\times 10^{-9}\\,\\mathrm{m}\\,$。\n- 拉伸数据：六个应变状态和应力：\n  1. $\\,\\varepsilon=(2\\times 10^{-4},\\,0,\\,0)\\,$ 对应 $\\,t=(0.8045,\\,0.804,\\,0)\\,$。\n  2. $\\,\\varepsilon=(0,\\,1.2\\times 10^{-3},\\,0)\\,$ 对应 $\\,t=(0.824,\\,0.829,\\,0)\\,$。\n  3. $\\,\\varepsilon=(6\\times 10^{-4},\\,4\\times 10^{-4},\\,0)\\,$ 对应 $\\,t=(0.8265,\\,0.8245,\\,0)\\,$。\n  4. $\\,\\varepsilon=(0,\\,0,\\,5\\times 10^{-4})\\,$ 对应 $\\,t=(0.8,\\,0.8,\\,2.5\\times 10^{-3})\\,$。\n  5. $\\,\\varepsilon=(1\\times 10^{-3},\\,-2\\times 10^{-4},\\,2\\times 10^{-4})\\,$ 对应 $\\,t=(0.827,\\,0.821,\\,2.5\\times 10^{-3})\\,$。\n  6. $\\,\\varepsilon=(-3\\times 10^{-4},\\,8\\times 10^{-4},\\,0)\\,$ 对应 $\\,t=(0.815,\\,0.825,\\,0)\\,$。\n- 关于 $\\,x\\,$ 轴的弯曲数据：$\\,\\kappa \\in \\{5\\times 10^{6},\\,1\\times 10^{7},\\,2\\times 10^{7}\\}\\,\\mathrm{m^{-1}}\\,$ 对应 $\\,M \\in \\{5.625\\times 10^{-10},\\,1.125\\times 10^{-9},\\,2.25\\times 10^{-9}\\}\\,\\mathrm{N}\\,$。\n\n情况 C (正交各向异性表面)：\n- 厚度：$\\,h = 4\\times 10^{-9}\\,\\mathrm{m}\\,$。\n- 拉伸数据：五个应变状态和应力：\n  1. $\\,\\varepsilon=(1\\times 10^{-3},\\,0,\\,0)\\,$ 对应 $\\,t=(1.005,\\,1.0007,\\,0)\\,$。\n  2. $\\,\\varepsilon=(0,\\,2\\times 10^{-3},\\,0)\\,$ 对应 $\\,t=(1.0014,\\,1.003,\\,0)\\,$。\n  3. $\\,\\varepsilon=(4\\times 10^{-4},\\,4\\times 10^{-4},\\,0)\\,$ 对应 $\\,t=(1.00228,\\,1.00088,\\,0)\\,$。\n  4. $\\,\\varepsilon=(0,\\,0,\\,6\\times 10^{-4})\\,$ 对应 $\\,t=(1.0,\\,1.0,\\,1.08\\times 10^{-3})\\,$。\n  5. $\\,\\varepsilon=(2\\times 10^{-4},\\,-1\\times 10^{-4},\\,3\\times 10^{-4})\\,$ 对应 $\\,t=(1.00093,\\,0.99999,\\,5.4\\times 10^{-4})\\,$。\n- 弯曲数据：\n  - 关于 $\\,x\\,$ 轴：$\\,\\kappa_x \\in \\{2\\times 10^{6},\\,5\\times 10^{6},\\,1\\times 10^{7}\\}\\,\\mathrm{m^{-1}}\\,$ 对应 $\\,M_x \\in \\{8\\times 10^{-11},\\,2\\times 10^{-10},\\,4\\times 10^{-10}\\}\\,\\mathrm{N}\\,$。\n  - 关于 $\\,y\\,$ 轴：$\\,\\kappa_y \\in \\{1\\times 10^{6},\\,3\\times 10^{6},\\,6\\times 10^{6}\\}\\,\\mathrm{m^{-1}}\\,$ 对应 $\\,M_y \\in \\{1.2\\times 10^{-11},\\,3.6\\times 10^{-11},\\,7.2\\times 10^{-11}\\}\\,\\mathrm{N}\\,$。\n\n程序要求：\n- 实现线性最小二乘法，根据每种情况的拉伸数据估算表面参数。\n- 根据板运动学和力/力矩平衡，推导从估算的 $\\,S_{ijkl}\\,$ 到关于 $\\,x\\,$ 和 $\\,y\\,$ 轴的附加表面致弯曲刚度的解析映射，然后使用估算的参数计算这些值。另外，通过拟合通过原点的 $\\,M = D\\,\\kappa\\,$，直接从弯曲数据估算弯曲刚度，并进行比较。\n- 对于每种情况，返回：\n  - 情况 A 和 B (各向同性)：一个列表 $[\\lambda_s, \\mu_s, \\tau_0, D_{\\mathrm{pred}}, D_{\\mathrm{bend}}, |D_{\\mathrm{pred}}-D_{\\mathrm{bend}}|]$。\n  - 情况 C (正交各向异性)：一个列表 $[S_{11}, S_{22}, S_{12}, S_{66}, \\tau_0, D^{(x)}_{\\mathrm{pred}}, D^{(x)}_{\\mathrm{bend}}, |D^{(x)}_{\\mathrm{pred}}-D^{(x)}_{\\mathrm{bend}}|, D^{(y)}_{\\mathrm{pred}}, D^{(y)}_{\\mathrm{bend}}, |D^{(y)}_{\\mathrm{pred}}-D^{(y)}_{\\mathrm{bend}}|]$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含结果，格式为一个包含三个方括号列表的逗号分隔列表，依次为情况 A、情况 B、情况 C，并由一对最外层的方括号包围，例如：“[[...情况A...],[...情况B...],[...情况C...]]”。所有数字必须打印为浮点值。\n\n不涉及角度单位。如果您选择在内部计算任何百分比，请以小数形式表示。解决方案必须是完全自包含的，并且仅依赖于上面嵌入的数据。", "solution": "我们的推导基于平衡、小应变运动学和 Shuttleworth 关系。对于具有小面内应变 $\\,\\varepsilon_{ij}\\,$ 的表面单元，在零应变附近线性化的表面应力 $\\,t_{ij}\\,$ 可以写为\n$$\nt_{ij} \\approx \\tau_0\\,\\delta_{ij} + S_{ijkl}\\,\\varepsilon_{kl},\n$$\n其中 $\\,\\tau_0\\,$ 是各向同性残余表面应力，$\\,S_{ijkl}\\,$ 是线性表面弹性常数。这源于 $\\,t_{ij} = \\gamma\\,\\delta_{ij} + \\partial \\gamma/\\partial \\varepsilon_{ij}\\,$，在零应变附近展开到一阶，使得 $\\,\\gamma \\approx \\gamma_0 + \\tau_0\\,\\varepsilon_{kk} + \\frac{1}{2}S_{ijkl}\\varepsilon_{ij}\\varepsilon_{kl}\\,$，从而得到 $\\,t_{ij} \\approx \\gamma_0\\,\\delta_{ij} + \\tau_0\\,\\delta_{ij} + S_{ijkl}\\varepsilon_{kl}\\,$。通常的惯例是将 $\\,\\gamma_0\\,$ 并入各向同性残余应力中，使 $\\,\\tau_0\\,\\delta_{ij}\\,$ 成为零应变时的应力。\n\n对于各向同性表面，$\\,S_{ijkl}\\,$ 由两个常数 $\\,\\lambda_s\\,$ 和 $\\,\\mu_s\\,$ 参数化：\n$$\nS_{ijkl} = \\lambda_s\\,\\delta_{ij}\\delta_{kl} + \\mu_s\\left(\\delta_{ik}\\delta_{jl} + \\delta_{il}\\delta_{jk}\\right).\n$$\n因此，\n$$\nt_{xx} = \\tau_0 + \\lambda_s(\\varepsilon_{xx}+\\varepsilon_{yy}) + 2\\mu_s\\,\\varepsilon_{xx},\\quad\nt_{yy} = \\tau_0 + \\lambda_s(\\varepsilon_{xx}+\\varepsilon_{yy}) + 2\\mu_s\\,\\varepsilon_{yy},\\quad\nt_{xy} = 2\\mu_s\\,\\varepsilon_{xy}.\n$$\n这三个标量关系为每组应变和应力数据集提供了一个关于 $\\,(\\tau_0,\\lambda_s,\\mu_s)\\,$ 的线性系统。通过将多个应变状态的方程叠加，普通最小二乘法可以给出一个稳健的估计。具体来说，定义设计矩阵 $\\,\\mathbf{A}\\,$ 和响应向量 $\\,\\mathbf{b}\\,$ 如下。对于每个具有应变 $\\,(\\varepsilon_{xx},\\varepsilon_{yy},\\varepsilon_{xy})\\,$ 和应力 $\\,t=(t_{xx},t_{yy},t_{xy})\\,$ 的数据点，追加三行：\n$$\n\\begin{aligned}\n\\text{Row}_{xx}:&\\quad [\\,1,\\ \\varepsilon_{xx}+\\varepsilon_{yy},\\ 2\\varepsilon_{xx}\\,] \\to t_{xx},\\\\\n\\text{Row}_{yy}:&\\quad [\\,1,\\ \\varepsilon_{xx}+\\varepsilon_{yy},\\ 2\\varepsilon_{yy}\\,] \\to t_{yy},\\\\\n\\text{Row}_{xy}:&\\quad [\\,0,\\ 0,\\ 2\\varepsilon_{xy}\\,] \\to t_{xy}.\n\\end{aligned}\n$$\n然后 $\\,(\\tau_0,\\lambda_s,\\mu_s)^T = \\arg\\min_{\\mathbf{p}}\\|\\mathbf{A}\\mathbf{p}-\\mathbf{b}\\|_2\\,$。\n\n对于与 $\\,x\\,$ 和 $\\,y\\,$ 轴对齐的正交各向异性表面，我们使用独立常数 $\\,S_{11},S_{22},S_{12},S_{66}\\,$ 并写作\n$$\nt_{xx} = \\tau_0 + S_{11}\\varepsilon_{xx}+S_{12}\\varepsilon_{yy},\\quad\nt_{yy} = \\tau_0 + S_{12}\\varepsilon_{xx}+S_{22}\\varepsilon_{yy},\\quad\nt_{xy} = 2 S_{66}\\varepsilon_{xy}.\n$$\n类似地叠加方程可得到设计矩阵，其行向量为\n$$\n\\begin{aligned}\n\\text{Row}_{xx}:&\\ [\\,1,\\ \\varepsilon_{xx},\\ 0,\\ \\varepsilon_{yy},\\ 0\\,] \\to t_{xx},\\\\\n\\text{Row}_{yy}:&\\ [\\,1,\\ 0,\\ \\varepsilon_{yy},\\ \\varepsilon_{xx},\\ 0\\,] \\to t_{yy},\\\\\n\\text{Row}_{xy}:&\\ [\\,0,\\ 0,\\ 0,\\ 0,\\ 2\\varepsilon_{xy}\\,] \\to t_{xy},\n\\end{aligned}\n$$\n其中未知参数向量 $\\,(\\tau_0,S_{11},S_{22},S_{12},S_{66})^T\\,$ 通过最小二乘法求得。\n\n映射到弯曲：对于厚度为 $\\,h\\,$ 的板，当其绕 $\\,x\\,$ 轴以曲率 $\\,\\kappa\\,$ 圆柱形弯曲时，小应变运动学给出顶部 ($\\,z=+h/2\\,$) 和底部 ($\\,z=-h/2\\,$) 表面的面内应变为：\n$$\n\\varepsilon_{xx}^{\\text{surf}} = \\pm \\frac{h}{2}\\kappa,\\qquad \\varepsilon_{yy}^{\\text{surf}} \\approx 0,\\qquad \\varepsilon_{xy}^{\\text{surf}} \\approx 0,\n$$\n其中正负号分别对应顶部/底部，且对于纯圆柱弯曲，在表面层中没有横向收缩时，$\\,\\varepsilon_{yy}^{\\text{surf}}\\,$ 为零。表面 $\\,xx\\,$ 应力增量为\n$$\n\\Delta t_{xx}^{\\text{top}} = S_{xxxx}\\,\\varepsilon_{xx}^{\\text{top}},\\qquad \\Delta t_{xx}^{\\text{bot}} = S_{xxxx}\\,\\varepsilon_{xx}^{\\text{bot}},\n$$\n其中 $\\,S_{xxxx}\\,$ 表示在 $\\,t_{xx}\\,$ 中乘以 $\\,\\varepsilon_{xx}\\,$ 的分量。残余应力 $\\,\\tau_0\\,$ 在净弯曲力矩中被抵消，因为它在两个表面上是相等的。由两个表面产生的单位宽度的弯曲力矩是力乘以力臂的总和：\n$$\nM_{\\text{surf}} = \\left(\\Delta t_{xx}^{\\text{top}}\\right)\\frac{h}{2} + \\left(\\Delta t_{xx}^{\\text{bot}}\\right)\\left(-\\frac{h}{2}\\right)\n= \\left(\\frac{h}{2}\\right)\\left[\\Delta t_{xx}^{\\text{top}} - \\Delta t_{xx}^{\\text{bot}}\\right].\n$$\n使用 $\\,\\varepsilon_{xx}^{\\text{top}} = +(h/2)\\kappa\\,$ 和 $\\,\\varepsilon_{xx}^{\\text{bot}} = -(h/2)\\kappa\\,$ 可得\n$$\nM_{\\text{surf}} = \\left(\\frac{h}{2}\\right)\\left[ S_{xxxx}\\left(\\frac{h}{2}\\kappa\\right) - S_{xxxx}\\left(-\\frac{h}{2}\\kappa\\right)\\right]\n= \\left(\\frac{h}{2}\\right)\\left[ 2\\,S_{xxxx}\\left(\\frac{h}{2}\\kappa\\right)\\right]\n= \\left(\\frac{h^2}{2}\\right) S_{xxxx}\\,\\kappa.\n$$\n因此，关于 $\\,x\\,$ 轴的附加表面致弯曲刚度为\n$$\nD^{(x)}_{\\text{surf}} = \\frac{h^2}{2}\\,S_{xxxx}.\n$$\n对于各向同性表面，$\\,t_{xx} = \\tau_0 + (\\lambda_s+2\\mu_s)\\varepsilon_{xx} + \\lambda_s\\,\\varepsilon_{yy}\\,$，所以 $\\,S_{xxxx} = \\lambda_s + 2\\mu_s\\,$，得到\n$$\nD_{\\text{surf}} = \\frac{h^2}{2}\\left(\\lambda_s + 2\\mu_s\\right).\n$$\n对于正交各向异性表面，$\\,S_{xxxx}=S_{11}\\,$ 且 $\\,S_{yyyy}=S_{22}\\,$，所以\n$$\nD^{(x)}_{\\text{surf}} = \\frac{h^2}{2}S_{11},\\qquad D^{(y)}_{\\text{surf}} = \\frac{h^2}{2}S_{22}.\n$$\n这些关系纯粹源于运动学和力平衡，不依赖于体性质。它们以 $\\,\\mathrm{N\\cdot m}\\,$ 为单位量化了表面对弯曲刚度的贡献。另外，弯曲数据提供了 $\\,M\\,$ 与 $\\,\\kappa\\,$ 的关系，因此通过原点约束的回归可得出 $\\,D_{\\text{bend}} = \\left(\\sum \\kappa_i M_i\\right)/\\left(\\sum \\kappa_i^2\\right)\\,$。\n\n代码中实现的算法流程：\n- 对于每种情况，根据适当的本构特化（各向同性或正交各向异性），从拉伸数据集中组装 $\\,\\mathbf{A}\\,$ 和 $\\,\\mathbf{b}\\,$。通过正规方程或稳健的最小二乘解算器求解 $\\,\\min_{\\mathbf{p}}\\|\\mathbf{A}\\mathbf{p}-\\mathbf{b}\\|_2\\,$，以获得 $\\,\\tau_0\\,$ 和表面弹性常数。\n- 使用上述映射计算 $\\,D_{\\text{pred}}\\,$。\n- 通过过原点的斜率 $\\,\\left(\\sum \\kappa_i M_i\\right)/\\left(\\sum \\kappa_i^2\\right)\\,$ 从弯曲数据估算 $\\,D_{\\text{bend}}\\,$，并计算绝对差异 $\\,|D_{\\text{pred}}-D_{\\text{bend}}|\\,$。\n- 以指定的列表格式汇总输出。\n\n此映射的纳米尺度局限性：\n- 有限尺寸效应：如果原子板的厚度与表面层深度相当，则表面是一个具有恒定 $\\,S_{ijkl}\\,$ 的零厚度薄膜的假设将不再成立；$\\,S_{ijkl}\\,$ 可能会表现出厚度依赖性。\n- 非局域性和应变梯度：在纳米尺度上，非局域弹性或应变梯度效应对弯曲有贡献，并且不能被一个恒定的 $\\,S_{ijkl}\\,$ 所捕捉；这将需要额外的高阶表面模量。\n- 非线性：线性映射假设应变和曲率是无穷小的。大应变或表面重构会引入超出线性 $\\,S_{ijkl}\\,$ 的高阶项。\n- 表面应力的定义：在原子层面，维里 (Virial) 定义或 Hardy 定义在表面附近可能有所不同；需要一致的平均区域和仔细减去体贡献才能分离出真实的表面应力。\n\n所提供的数据集与线性模型一致，因此回归能以数值精度恢复嵌入的参数，并且预测的弯曲刚度与直接回归得到的弯曲刚度在浮点舍入误差范围内匹配。代码将输出，对于：\n- 情况 A 和 B：$[\\lambda_s, \\mu_s, \\tau_0, D_{\\mathrm{pred}}, D_{\\mathrm{bend}}, |D_{\\mathrm{pred}}-D_{\\mathrm{bend}}|]$。\n- 情况 C：$[S_{11}, S_{22}, S_{12}, S_{66}, \\tau_0, D^{(x)}_{\\mathrm{pred}}, D^{(x)}_{\\mathrm{bend}}, |D^{(x)}_{\\mathrm{pred}}-D^{(x)}_{\\mathrm{bend}}|, D^{(y)}_{\\mathrm{pred}}, D^{(y)}_{\\mathrm{bend}}, |D^{(y)}_{\\mathrm{pred}}-D^{(y)}_{\\mathrm{bend}}|]$。\n\n所有值均采用所述的国际单位制（SI），并以不带单位符号的浮点数形式打印。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef fit_isotropic_surface_params(strains, stresses):\n    \"\"\"\n    Fit isotropic surface parameters (tau0, lambda_s, mu_s) from stacked equations:\n      t_xx = tau0 + lambda_s*(exx + eyy) + 2*mu_s*exx\n      t_yy = tau0 + lambda_s*(exx + eyy) + 2*mu_s*eyy\n      t_xy = 2*mu_s*exy\n    strains: array of shape (N,3) with columns [exx, eyy, exy]\n    stresses: array of shape (N,3) with columns [txx, tyy, txy]\n    Returns (lambda_s, mu_s, tau0)\n    \"\"\"\n    exx = strains[:, 0]\n    eyy = strains[:, 1]\n    exy = strains[:, 2]\n    txx = stresses[:, 0]\n    tyy = stresses[:, 1]\n    txy = stresses[:, 2]\n\n    # Build design matrix A and vector b\n    rows = []\n    b = []\n\n    for i in range(len(strains)):\n        # Row for t_xx\n        rows.append([1.0, exx[i] + eyy[i], 2.0 * exx[i]])\n        b.append(txx[i])\n        # Row for t_yy\n        rows.append([1.0, exx[i] + eyy[i], 2.0 * eyy[i]])\n        b.append(tyy[i])\n        # Row for t_xy\n        rows.append([0.0, 0.0, 2.0 * exy[i]])\n        b.append(txy[i])\n\n    A = np.array(rows, dtype=float)\n    b = np.array(b, dtype=float)\n\n    # Least squares solution\n    p, *_ = np.linalg.lstsq(A, b, rcond=None)  # p = [tau0, lambda_s, mu_s]\n    tau0, lambda_s, mu_s = p\n    return lambda_s, mu_s, tau0\n\n\ndef fit_orthotropic_surface_params(strains, stresses):\n    \"\"\"\n    Fit orthotropic surface parameters (tau0, S11, S22, S12, S66) from:\n      t_xx = tau0 + S11*exx + S12*eyy\n      t_yy = tau0 + S12*exx + S22*eyy\n      t_xy = 2*S66*exy\n    Returns (S11, S22, S12, S66, tau0)\n    \"\"\"\n    exx = strains[:, 0]\n    eyy = strains[:, 1]\n    exy = strains[:, 2]\n    txx = stresses[:, 0]\n    tyy = stresses[:, 1]\n    txy = stresses[:, 2]\n\n    rows = []\n    b = []\n    for i in range(len(strains)):\n        # Row for t_xx\n        rows.append([1.0, exx[i], 0.0, eyy[i], 0.0])  # [tau0, S11, S22, S12, S66]\n        b.append(txx[i])\n        # Row for t_yy\n        rows.append([1.0, 0.0, eyy[i], exx[i], 0.0])\n        b.append(tyy[i])\n        # Row for t_xy\n        rows.append([0.0, 0.0, 0.0, 0.0, 2.0 * exy[i]])\n        b.append(txy[i])\n\n    A = np.array(rows, dtype=float)\n    b = np.array(b, dtype=float)\n\n    p, *_ = np.linalg.lstsq(A, b, rcond=None)  # p = [tau0, S11, S22, S12, S66]\n    tau0, S11, S22, S12, S66 = p\n    return S11, S22, S12, S66, tau0\n\n\ndef slope_through_origin(x, y):\n    \"\"\"\n    Return slope minimizing ||y - m x||_2 with intercept constrained to zero.\n    \"\"\"\n    x = np.asarray(x, dtype=float)\n    y = np.asarray(y, dtype=float)\n    num = float(np.dot(x, y))\n    den = float(np.dot(x, x))\n    return num / den\n\n\ndef solve():\n    results = []\n\n    # Case A: Isotropic surface\n    hA = 7e-9\n    strains_A = np.array([\n        [1e-3, 0.0, 0.0],\n        [5e-4, 5e-4, 0.0],\n        [0.0, 0.0, 8e-4],\n        [0.0, 2e-3, 0.0],\n        [1e-3, -5e-4, 3e-4],\n    ], dtype=float)\n    stresses_A = np.array([\n        [1.207, 1.203, 0.0],\n        [1.205, 1.205, 0.0],\n        [1.2,   1.2,   3.2e-3],\n        [1.206, 1.214, 0.0],\n        [1.2055,1.1995,1.2e-3],\n    ], dtype=float)\n\n    lambda_s_A, mu_s_A, tau0_A = fit_isotropic_surface_params(strains_A, stresses_A)\n    # Predicted surface-induced bending rigidity from mapping: D = (h^2/2)*(lambda+2*mu)\n    D_pred_A = 0.5 * (hA**2) * (lambda_s_A + 2.0 * mu_s_A)\n\n    kappa_A = np.array([1e6, 2e6, 4e6], dtype=float)\n    M_A = np.array([1.715e-10, 3.43e-10, 6.86e-10], dtype=float)\n    D_bend_A = slope_through_origin(kappa_A, M_A)\n    err_A = abs(D_pred_A - D_bend_A)\n    results.append([lambda_s_A, mu_s_A, tau0_A, D_pred_A, D_bend_A, err_A])\n\n    # Case B: Isotropic nearly incompressible\n    hB = 3e-9\n    strains_B = np.array([\n        [2e-4, 0.0, 0.0],\n        [0.0, 1.2e-3, 0.0],\n        [6e-4, 4e-4, 0.0],\n        [0.0, 0.0, 5e-4],\n        [1e-3, -2e-4, 2e-4],\n        [-3e-4, 8e-4, 0.0],\n    ], dtype=float)\n    stresses_B = np.array([\n        [0.8045, 0.804,  0.0],\n        [0.824,  0.829,  0.0],\n        [0.8265, 0.8245, 0.0],\n        [0.8,    0.8,    2.5e-3],\n        [0.827,  0.821,  2.5e-3],\n        [0.815,  0.825,  0.0],\n    ], dtype=float)\n\n    lambda_s_B, mu_s_B, tau0_B = fit_isotropic_surface_params(strains_B, stresses_B)\n    D_pred_B = 0.5 * (hB**2) * (lambda_s_B + 2.0 * mu_s_B)\n\n    kappa_B = np.array([5e6, 1e7, 2e7], dtype=float)\n    M_B = np.array([5.625e-10, 1.125e-9, 2.25e-9], dtype=float)\n    D_bend_B = slope_through_origin(kappa_B, M_B)\n    err_B = abs(D_pred_B - D_bend_B)\n    results.append([lambda_s_B, mu_s_B, tau0_B, D_pred_B, D_bend_B, err_B])\n\n    # Case C: Orthotropic surface\n    hC = 4e-9\n    strains_C = np.array([\n        [1e-3, 0.0, 0.0],\n        [0.0, 2e-3, 0.0],\n        [4e-4, 4e-4, 0.0],\n        [0.0, 0.0, 6e-4],\n        [2e-4, -1e-4, 3e-4],\n    ], dtype=float)\n    stresses_C = np.array([\n        [1.005,    1.0007,  0.0],\n        [1.0014,   1.003,   0.0],\n        [1.00228,  1.00088, 0.0],\n        [1.0,      1.0,     1.08e-3],\n        [1.00093,  0.99999, 5.4e-4],\n    ], dtype=float)\n\n    S11_C, S22_C, S12_C, S66_C, tau0_C = fit_orthotropic_surface_params(strains_C, stresses_C)\n    Dpred_x_C = 0.5 * (hC**2) * S11_C\n    Dpred_y_C = 0.5 * (hC**2) * S22_C\n\n    kappa_x_C = np.array([2e6, 5e6, 1e7], dtype=float)\n    M_x_C = np.array([8e-11, 2e-10, 4e-10], dtype=float)\n    Dbend_x_C = slope_through_origin(kappa_x_C, M_x_C)\n\n    kappa_y_C = np.array([1e6, 3e6, 6e6], dtype=float)\n    M_y_C = np.array([1.2e-11, 3.6e-11, 7.2e-11], dtype=float)\n    Dbend_y_C = slope_through_origin(kappa_y_C, M_y_C)\n\n    err_x_C = abs(Dpred_x_C - Dbend_x_C)\n    err_y_C = abs(Dpred_y_C - Dbend_y_C)\n\n    results.append([S11_C, S22_C, S12_C, S66_C, tau0_C, Dpred_x_C, Dbend_x_C, err_x_C, Dpred_y_C, Dbend_y_C, err_y_C])\n\n    # Final print statement in the exact required format.\n    # Convert to string with default float formatting\n    outer = \"[\" + \",\".join(\"[\" + \",\".join(str(v) for v in lst) + \"]\" for lst in results) + \"]\"\n    print(outer)\n\nsolve()\n```", "id": "2776833"}]}