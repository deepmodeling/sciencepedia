{"hands_on_practices": [{"introduction": "在计算物理学中，信任我们的模拟工具至关重要。本练习将指导您完成一个基本但关键的验证过程：使用理想气体作为基准来检验恒压恒温（$NPT$）系综采样的正确性。由于理想气体的热力学性质可以从第一性原理精确推导，它为我们提供了一个“标准答案”，用以验证我们的数值方法能否准确重现系综的统计特性，包括体积的平均值和涨落 [@problem_id:2787502]。", "problem": "您的任务是设计并实现一个程序化的验证流程，用于在理想气体极限下，对启用了恒温器和恒压器的等温等压系综（粒子数-压力-温度，记为 $NPT$）中的平衡采样进行验证。其目标是验证采样所得的体积统计数据是否与经典理想气体的 $NPT$ 系综预测一致，且不依赖于任何特定的分子动力学积分细节。您的流程必须基于第一性原理，并检验经验体积统计量与理论期望值（包括平均体积和体积涨落）之间的一致性。\n\n请从以下基本定义出发：\n- 一个体积为 $V$、温度为 $T$ 的系统中，$N$ 个不可区分粒子的经典理想气体正则配分函数为 $Z_{NVT}(N,V,T) = \\frac{1}{N!}\\left(\\frac{V}{\\Lambda^3}\\right)^N$，其中 $\\Lambda$ 是热德布罗意波长。\n- 等温等压系综（亦称为等温等压系综）配分函数通过对体积的积分定义：$\\Delta(N,P,T) = \\int_{0}^{\\infty} dV \\, e^{-\\beta P V} Z_{NVT}(N,V,T)$，其中 $\\beta = 1/(k_{\\mathrm{B}} T)$，$k_{\\mathrm{B}}$ 是玻尔兹曼常数。\n- 物理常数和单位必须一致使用：压力 $P$ 单位为帕斯卡 (Pa)，温度 $T$ 单位为开尔文 (K)，玻尔兹曼常数 $k_{\\mathrm{B}}$ 单位为焦耳每开尔文，所有体积 $V$ 单位为立方米 (m$^3$)。使用 $k_{\\mathrm{B}} = 1.380649 \\times 10^{-23}$ J/K。\n\n您的任务是：\n1) 从上述基本定义出发，推导理想气体 $NPT$ 系综下以下物理量的解析表达式（用 $N$、$P$、$T$ 和 $k_{\\mathrm{B}}$ 表示）：\n   - 期望平均体积 $\\mathbb{E}[V]$。\n   - 体积的方差 $\\mathrm{Var}(V)$。\n   - 期望二阶矩 $\\mathbb{E}[V^2]$ 和体积平方的方差 $\\mathrm{Var}(V^2)$。\n   您的推导必须从等温等压系综构造所隐含的 $V$ 的概率密度出发，不能假设目标结果。\n\n2) 使用这些解析矩，为一组采样体积 $\\{V_i\\}_{i=1}^{M}$ 设计一个统计验证测试，如下所示：\n   - 将样本均值 $\\overline{V} = \\frac{1}{M}\\sum_{i=1}^M V_i$ 和样本平方均值 $\\overline{V^2} = \\frac{1}{M}\\sum_{i=1}^M V_i^2$ 分别视为 $\\mathbb{E}[V]$ 和 $\\mathbb{E}[V^2]$ 的经验估计量。\n   - 使用中心极限定理，将 $\\overline{V}$ 和 $\\overline{V^2}$ 的分布近似为方差分别为 $\\mathrm{Var}(V)/M$ 和 $\\mathrm{Var}(V^2)/M$ 的正态分布。为 $\\overline{V}$ 和 $\\overline{V^2}$ 构建显著性水平为 $\\alpha = 0.01$ 的双边 $z$ 检验。\n   - 定义验证通过的条件为：当且仅当两个 $z$ 检验都不拒绝关于样本均值和样本二阶矩与理论预测相匹配的原假设。\n\n3) 实现一个程序，该程序能够：\n   - 根据给定的 $N$、$T$ 和 $P$ 计算第1部分中所需的解析矩。\n   - 通过从第一性原理推导出的伽马分布模型中采样，生成符合理想气体 $NPT$ 体积分布的合成样本数据。为保证可复现性，请使用指定的随机种子。\n   - 执行第2部分中指定的两个 $z$ 检验，并为每个测试案例返回一个布尔值，表示通过(true)或失败(false)。\n\n单位和数值约定：\n- 温度单位必须为 K，压力单位必须为 Pa。\n- 所有体积单位必须为 m$^3$。\n- 玻尔兹曼常数必须为 $k_{\\mathrm{B}} = 1.380649 \\times 10^{-23}$ J/K。\n- 生成合成数据时，请注意采样独立的随机变量，并使用指定的种子以确保确定性行为。\n\n测试套件：\n您的程序必须在内部运行以下四个测试案例，使用确切的参数和种子，并相应地生成合成样本。在案例1、2和3中，样本是在与验证相同的温度下生成的；在案例4中，样本是在一个不同的温度下生成的，而验证是针对指定的目标温度进行的，以模拟一个设定错误的恒温器。\n\n- 案例1（正常路径，中等 $N$）：\n  - $N = 64$，$T_{\\mathrm{eval}} = 300$ K，$P = 1.0 \\times 10^{5}$ Pa，样本量 $M = 40000$，随机种子 $12345$。\n  - 采样温度 $T_{\\mathrm{true}} = T_{\\mathrm{eval}}$。\n\n- 案例2（边界条件，非常小的 $N$）：\n  - $N = 1$，$T_{\\mathrm{eval}} = 1000$ K，$P = 5.0 \\times 10^{5}$ Pa，$M = 200000$，随机种子 $67890$。\n  - 采样温度 $T_{\\mathrm{true}} = T_{\\mathrm{eval}}$。\n\n- 案例3（大 $N$ 范围）：\n  - $N = 500$，$T_{\\mathrm{eval}} = 350$ K，$P = 2.0 \\times 10^{5}$ Pa，$M = 30000$，随机种子 $13579$。\n  - 采样温度 $T_{\\mathrm{true}} = T_{\\mathrm{eval}}$。\n\n- 案例4（通过设定错误的恒温器进行错误检测）：\n  - $N = 128$，$T_{\\mathrm{eval}} = 300$ K，$P = 1.0 \\times 10^{5}$ Pa，$M = 50000$，随机种子 $24680$。\n  - 采样温度 $T_{\\mathrm{true}} = 330$ K。\n\n最终输出规范：\n- 您的程序应产生单行输出，其中包含一个用方括号括起来的逗号分隔列表，按上述案例顺序排列结果。例如：“[$\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4$]”。\n- 每个结果必须是一个布尔值，表示该案例的验证是否通过。打印的唯一一行必须是这个列表，不含任何其他文本。", "solution": "所给出的问题是有效的。这是一个基于基本原理的统计力学适定问题，没有事实错误，并包含了唯一解所需的所有信息。我们将继续进行推导和实现。\n\n首要任务是推导经典理想气体在等温等压（$NPT$）系综中体积 $V$ 的各阶矩的解析表达式。\n\n起点是等温等压配分函数 $\\Delta(N,P,T)$：\n$$\n\\Delta(N,P,T) = \\int_{0}^{\\infty} dV \\, e^{-\\beta P V} Z_{NVT}(N,V,T)\n$$\n其中 $\\beta = 1/(k_{\\mathrm{B}} T)$，$Z_{NVT}(N,V,T)$ 是 $N$ 个不可区分粒子的正则配分函数：\n$$\nZ_{NVT}(N,V,T) = \\frac{1}{N!}\\left(\\frac{V}{\\Lambda^3}\\right)^N\n$$\n这里，$\\Lambda$ 是热德布罗意波长，它依赖于温度但与体积无关。我们可以将 $Z_{NVT}$ 写为 $C(N,T) V^N$，其中 $C(N,T) = \\frac{1}{N!\\Lambda^{3N}}$ 包含了所有与体积无关的依赖项。\n\n体积 $V$ 的概率密度函数，记为 $p(V)$，与 $\\Delta$ 表达式的被积函数成正比：\n$$\np(V) \\propto e^{-\\beta P V} Z_{NVT}(N,V,T) \\propto e^{-\\beta P V} V^N\n$$\n为了找到归一化的概率密度，我们必须计算归一化常数，也就是 $\\Delta(N,P,T)$ 本身。\n$$\n\\Delta(N,P,T) = C(N,T) \\int_{0}^{\\infty} V^N e^{-\\beta P V} dV\n$$\n该积分为伽马函数积分的标准形式，$\\int_0^\\infty x^n e^{-ax} dx = n!/a^{n+1}$。令 $n=N$ 和 $a=\\beta P$，我们得到：\n$$\n\\int_{0}^{\\infty} V^N e^{-\\beta P V} dV = \\frac{N!}{(\\beta P)^{N+1}}\n$$\n因此，配分函数为：\n$$\n\\Delta(N,P,T) = C(N,T) \\frac{N!}{(\\beta P)^{N+1}}\n$$\n归一化后的概率密度则为：\n$$\np(V) = \\frac{e^{-\\beta P V} C(N,T) V^N}{\\Delta(N,P,T)} = \\frac{e^{-\\beta P V} C(N,T) V^N}{C(N,T) \\frac{N!}{(\\beta P)^{N+1}}} = \\frac{(\\beta P)^{N+1}}{N!} V^N e^{-\\beta P V}\n$$\n这是伽马分布的概率密度函数。一个服从形状参数为 $k$、尺度参数为 $\\theta$ 的伽马分布的变量 $X$，其概率密度函数为 $f(x; k, \\theta) = \\frac{1}{\\Gamma(k)\\theta^k} x^{k-1} e^{-x/\\theta}$。将其与 $p(V)$ 比较，并注意到 $\\Gamma(N+1)=N!$，我们确定体积分布的参数为：\n形状参数 $k = N+1$。\n尺度参数 $\\theta = \\frac{1}{\\beta P} = \\frac{k_{\\mathrm{B}} T}{P}$。\n\n一个服从伽马分布的变量的矩 $\\mathbb{E}[V^m]$ 可以直接计算，也可以从其矩生成函数得到。矩的通用公式是 $\\mathbb{E}[X^m] = \\theta^m \\frac{\\Gamma(k+m)}{\\Gamma(k)}$。对于我们的分布，这变为：\n$$\n\\mathbb{E}[V^m] = \\left(\\frac{1}{\\beta P}\\right)^m \\frac{\\Gamma(N+1+m)}{\\Gamma(N+1)} = \\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^m \\frac{(N+m)!}{N!}\n$$\n我们现在计算问题所需的具体矩。\n\n对于 $m=1$：\n$$\n\\mathbb{E}[V] = \\left(\\frac{k_{\\mathrm{B}} T}{P}\\right) \\frac{(N+1)!}{N!} = (N+1)\\frac{k_{\\mathrm{B}} T}{P}\n$$\n对于 $m=2$：\n$$\n\\mathbb{E}[V^2] = \\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2 \\frac{(N+2)!}{N!} = (N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2\n$$\n体积的方差 $\\mathrm{Var}(V) = \\mathbb{E}[V^2] - (\\mathbb{E}[V])^2$ 为：\n$$\n\\mathrm{Var}(V) = (N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2 - \\left((N+1)\\frac{k_{\\mathrm{B}} T}{P}\\right)^2\n$$\n$$\n\\mathrm{Var}(V) = ((N+2)(N+1) - (N+1)^2)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2 = (N+1)(N+2 - (N+1))\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2\n$$\n$$\n\\mathrm{Var}(V) = (N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2\n$$\n接下来，我们需要体积平方 $V^2$ 的矩。为此，我们需要 $\\mathbb{E}[V^3]$ 和 $\\mathbb{E}[V^4]$。\n对于 $m=3$：\n$$\n\\mathbb{E}[V^3] = (N+3)(N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^3\n$$\n对于 $m=4$：\n$$\n\\mathbb{E}[V^4] = (N+4)(N+3)(N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^4\n$$\n体积平方的方差 $\\mathrm{Var}(V^2) = \\mathbb{E}[(V^2)^2] - (\\mathbb{E}[V^2])^2 = \\mathbb{E}[V^4] - (\\mathbb{E}[V^2])^2$ 为：\n$$\n\\mathrm{Var}(V^2) = (N+4)(N+3)(N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^4 - \\left((N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^2\\right)^2\n$$\n$$\n\\mathrm{Var}(V^2) = \\left[(N+4)(N+3) - (N+2)(N+1)\\right](N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^4\n$$\n方括号中的项可以简化为：$(N^2+7N+12) - (N^2+3N+2) = 4N+10$。\n$$\n\\mathrm{Var}(V^2) = (4N+10)(N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^4 = 2(2N+5)(N+2)(N+1)\\left(\\frac{k_{\\mathrm{B}} T}{P}\\right)^4\n$$\n\n第二个任务是设计统计验证测试。\n给定一组 $M$ 个采样体积 $\\{V_i\\}_{i=1}^{M}$，我们计算样本均值 $\\overline{V} = \\frac{1}{M}\\sum_{i=1}^{M} V_i$ 和样本平方均值 $\\overline{V^2} = \\frac{1}{M}\\sum_{i=1}^{M} V_i^2$。\n\n中心极限定理指出，对于大样本量 $M$，随机变量 $X$ 的样本均值 $\\overline{X}$ 的分布趋近于一个均值为 $\\mathbb{E}[X]$、方差为 $\\mathrm{Var}(X)/M$ 的正态分布。我们将此应用于 $V$ 和 $V^2$。\n\n原假设为：\n$H_{0,1}$：样本均值 $\\overline{V}$ 来自一个均值为 $\\mathbb{E}[V]$ 的分布。\n$H_{0,2}$：样本平方均值 $\\overline{V^2}$ 来自一个均值为 $\\mathbb{E}[V^2]$ 的分布。\n\n我们构建双边 $z$ 检验。检验统计量为：\n$$\nz_1 = \\frac{\\overline{V} - \\mathbb{E}[V]}{\\sqrt{\\mathrm{Var}(V)/M}}\n$$\n$$\nz_2 = \\frac{\\overline{V^2} - \\mathbb{E}[V^2]}{\\sqrt{\\mathrm{Var}(V^2)/M}}\n$$\n对于显著性水平 $\\alpha = 0.01$，临界值 $z_{\\alpha/2}$ 由标准正态累积分布函数 $\\Phi(z_{\\alpha/2}) = 1 - \\alpha/2 = 0.995$ 确定。这得出 $z_{0.005} \\approx 2.5758$。\n\n当且仅当两个原假设都未被拒绝时，验证通过。此条件满足如果：\n$|z_1| \\le z_{\\alpha/2}$ 且 $|z_2| \\le z_{\\alpha/2}$。\n\n第三个任务是该程序的实现，它在最终答案中提供。程序将使用推导出的公式计算理论矩，通过从相应的伽马分布中采样来生成合成体积数据，计算样本统计量和 $z$ 分数，并执行假设检验。案例4测试了一个场景，其中采样温度 $T_{\\mathrm{true}}$ 与评估温度 $T_{\\mathrm{eval}}$ 不同，这应当导致测试失败，从而展示该方法的灵敏度。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Main function to run the validation procedure for all test cases.\n    \"\"\"\n    # Define physical constants and test parameters\n    KB = 1.380649e-23  # Boltzmann constant in J/K\n    ALPHA = 0.01  # Significance level for z-tests\n\n    # Critical z-value for a two-sided test at significance level ALPHA\n    z_crit = norm.ppf(1 - ALPHA / 2)\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: happy path, moderate N\n        {'N': 64, 'T_eval': 300.0, 'P': 1.0e5, 'M': 40000, 'seed': 12345, 'T_true': 300.0},\n        # Case 2: boundary condition, very small N\n        {'N': 1, 'T_eval': 1000.0, 'P': 5.0e5, 'M': 200000, 'seed': 67890, 'T_true': 1000.0},\n        # Case 3: large N regime\n        {'N': 500, 'T_eval': 350.0, 'P': 2.0e5, 'M': 30000, 'seed': 13579, 'T_true': 350.0},\n        # Case 4: error detection via mis-specified thermostat\n        {'N': 128, 'T_eval': 300.0, 'P': 1.0e5, 'M': 50000, 'seed': 24680, 'T_true': 330.0},\n    ]\n\n    results = []\n    for case in test_cases:\n        # Unpack parameters\n        N = case['N']\n        T_eval = case['T_eval']\n        P = case['P']\n        M = case['M']\n        seed = case['seed']\n        T_true = case['T_true']\n\n        # --- 1. Compute theoretical moments based on T_eval ---\n        # The theoretical moments are evaluated at T_eval and P\n        term = KB * T_eval / P\n\n        # Expected value of Volume, E[V]\n        E_V = (N + 1) * term\n\n        # Variance of Volume, Var(V)\n        Var_V = (N + 1) * (term**2)\n\n        # Expected value of Volume squared, E[V^2]\n        E_V2 = (N + 2) * (N + 1) * (term**2)\n\n        # Variance of Volume squared, Var(V^2) = E[V^4] - (E[V^2])^2\n        # E[V^4] = (N+4)(N+3)(N+2)(N+1) * term^4\n        # Var(V^2) = [(N+4)(N+3) - (N+2)(N+1)] * (N+2)(N+1) * term^4\n        # The term in brackets is (4N + 10)\n        Var_V2 = (4 * N + 10) * (N + 2) * (N + 1) * (term**4)\n\n        # --- 2. Generate synthetic sample data based on T_true ---\n        # The data is sampled from a Gamma distribution with parameters\n        # derived from the true temperature T_true.\n        # Shape parameter k = N + 1\n        # Scale parameter theta = kB * T_true / P\n        rng = np.random.default_rng(seed)\n        shape_param = N + 1\n        scale_param = KB * T_true / P\n        \n        # Generate M independent samples for Volume\n        V_samples = rng.gamma(shape_param, scale_param, M)\n\n        # --- 3. Compute sample statistics ---\n        # Sample mean of V\n        V_mean_sample = np.mean(V_samples)\n        \n        # Sample mean of V^2\n        V2_mean_sample = np.mean(V_samples**2)\n\n        # --- 4. Perform z-tests ---\n        # z-test for the mean of V\n        z_V_num = V_mean_sample - E_V\n        z_V_den = np.sqrt(Var_V / M)\n        z1 = z_V_num / z_V_den\n\n        # z-test for the mean of V^2\n        z_V2_num = V2_mean_sample - E_V2\n        z_V2_den = np.sqrt(Var_V2 / M)\n        z2 = z_V2_num / z_V2_den\n\n        # Validation passes if both tests do not reject the null hypothesis\n        validation_passed = (np.abs(z1) = z_crit) and (np.abs(z2) = z_crit)\n        results.append(validation_passed)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2787502"}, {"introduction": "一个通过验证的模拟代码，如果使用了不恰当的算法（例如弱耦合调温调压器），仍然可能无法完美地再现目标系综。本练习教您如何运用涨落-耗散关系作为强大的诊断工具，来检验模拟中的动能和体积涨落是否符合物理现实。通过确保这些核心统计量的正确性，我们可以保证模拟结果的物理真实性和可靠性 [@problem_id:2787457]。", "problem": "一项纳米力学及表面与界面模拟旨在对正确的恒定粒子数、恒定体积、恒定温度 (NVT) 和恒定粒子数、恒定压力、恒定温度 (NPT) 平衡分布进行采样。已知弱耦合控温器和控压器会导致平衡涨落受到抑制。您的任务是仅使用统计力学的第一性原理，形式化用于检测此类偏差的诊断方法，并将其实现为一个评估固定测试套件的程序。\n\n仅从以下基本原理出发：\n- Maxwell–Boltzmann 速度分布和能量均分定理。\n- 瞬时动能定义为二次自由度之和。\n- 等温等压系综中等温压缩率的定义。\n- 源自独立同分布数据的估计量抽样分布的标准大样本近似。\n\n假设所有测试用例的模拟条件如下：\n- 使用约化单位，玻尔兹曼常数设为 $k_{\\mathrm{B}} = 1$，因此温度是无量纲的，能量以相同的约化单位计量。\n- 独立二次自由度的数量为 $f$（已考虑约束），独立样本的数量为 $n$，且样本之间相互独立。\n- 控温器和控压器（如果存在）仅影响涨落幅度，不影响平均值。\n\n对每个测试用例执行的任务：\n1. 使用第一性原理，推导在恒定粒子数、恒定体积、恒定温度系综中总动能 $K$ 的期望均值和方差，作为自由度 $f$ 和目标温度 $T$ 的函数。基于此，构建一个显著性水平为 $p^\\* = 0.01$ 的双侧假设检验，将测得的 $K$ 的样本方差与其平衡值进行比较。使用基于动能分布所隐含的四阶中心矩，为样本方差的抽样分布构建大样本高斯近似。同时，为 $K$ 的样本均值构建一个类似的双侧检验。\n2. 使用第一性原理，推导在恒定粒子数、恒定压力、恒定温度系综中体积的涨落关系，该关系将体积 $V$ 的方差与温度 $T$、体积 $V$ 和等温压缩率 $\\kappa_T$ 联系起来。构建一个显著性水平为 $p^\\* = 0.01$ 的双侧假设检验，将测得的 $V$ 的样本方差与其平衡值进行比较。对 $V$ 的样本方差的抽样分布进行建模，使用适用于 $V$ 的近似正态涨落的大样本高斯近似。\n3. 对于每个检验，返回一个布尔值，表示在指定的显著性水平下，测量的统计量是否与目标系综一致（true 表示“一致”，false 表示“偏离”）。\n4. 此外，报告如下的涨落抑制或放大因子：$s_K = \\widehat{\\mathrm{Var}}(K)/\\mathrm{Var}_{\\mathrm{eq}}(K)$ 和 $s_V = \\widehat{\\mathrm{Var}}(V)/\\mathrm{Var}_{\\mathrm{eq}}(V)$。\n\n测试套件的输入数据（全部使用约化无量纲单位，且 $k_{\\mathrm{B}} = 1$）：\n- 用例 $1$（理想情况，一致的 NVT 和 NPT）：\n  - $f = 600$, $T = 1.0$, $n = 20000$, 测得 $\\overline{K} = 300.1$, 测得 $\\widehat{\\mathrm{Var}}(K) = 294.0$, $V = 1000.0$, $\\kappa_T = 0.005$, 测得 $\\widehat{\\mathrm{Var}}(V) = 5.05$。\n- 用例 $2$（受抑制的涨落，弱耦合病态）：\n  - $f = 600$, $T = 1.0$, $n = 20000$, 测得 $\\overline{K} = 300.0$, 测得 $\\widehat{\\mathrm{Var}}(K) = 60.0$, $V = 1000.0$, $\\kappa_T = 0.005$, 测得 $\\widehat{\\mathrm{Var}}(V) = 1.5$。\n- 用例 $3$（小自由度，边缘情况）：\n  - $f = 6$, $T = 1.0$, $n = 20000$, 测得 $\\overline{K} = 3.0$, 测得 $\\widehat{\\mathrm{Var}}(K) = 2.9$, $V = 1000.0$, $\\kappa_T = 0.005$, 测得 $\\widehat{\\mathrm{Var}}(V) = 7.5$。\n- 用例 $4$（小样本量，边界条件）：\n  - $f = 600$, $T = 1.0$, $n = 500$, 测得 $\\overline{K} = 300.2$, 测得 $\\widehat{\\mathrm{Var}}(K) = 280.0$, $V = 1000.0$, $\\kappa_T = 0.005$, 测得 $\\widehat{\\mathrm{Var}}(V) = 4.6$。\n\n程序要求：\n- 对每个用例，计算：\n  - $s_K$，四舍五入到三位小数。\n  - 一个布尔值，表示动能方差检验在 $p^\\* = 0.01$ 时是否接受一致性。\n  - 一个布尔值，表示动能均值检验在 $p^\\* = 0.01$ 时是否接受一致性。\n  - $s_V$，四舍五入到三位小数。\n  - 一个布尔值，表示体积方差检验在 $p^\\* = 0.01$ 时是否接受一致性。\n- 使用双侧高斯 $z$ 检验，其临界值对应于 $p^\\* = 0.01$。\n- 您的程序应生成单行输出，其中包含一个用方括号括起来且不含空格的逗号分隔列表。该列表必须是按用例 1 到 4 的顺序，将每个用例的五个值串联而成：$[s_K,\\mathrm{flag}_{K\\mathrm{var}},\\mathrm{flag}_{K\\mathrm{mean}},s_V,\\mathrm{flag}_{V\\mathrm{var}},\\ldots]$。仅将 $s_K$ 和 $s_V$ 四舍五入到三位小数；布尔值必须以编程语言的规范布尔表示形式（对于 Python，即 True 或 False）打印为字面量的 true 或 false。", "solution": "该问题陈述已经过严格验证。它是自洽的，其科学基础根植于统计力学原理，且表述客观。各项任务都是适定的，要求将基础理论应用于计算物理学中的一个实际问题。因此，该问题被认定为有效，我们着手进行形式推导和求解。\n\n分析分为两部分：第一部分针对恒定粒子数、恒定体积、恒定温度 (NVT) 系综，第二部分针对恒定粒子数、恒定压力、恒定温度 (NPT) 系综。所有推导均使用约化单位，其中玻尔兹曼常数 $k_{\\mathrm{B}}$ 设为 $1$。\n\n**第一部分：NVT 系综诊断 (动能)**\n\n在 NVT 系综中，系统的动能 $K$ 是 $f$ 个独立二次自由度贡献的总和。根据能量均分定理，每个此类自由度的平均能量为 $\\frac{1}{2} k_{\\mathrm{B}} T$。给定 $k_{\\mathrm{B}} = 1$，此值为 $\\frac{1}{2} T$。\n\n1.  **动能的平衡均值和方差**：\n    总动能为 $K = \\sum_{i=1}^{f} \\epsilon_i$，其中 $\\epsilon_i$ 是第 $i$ 个二次自由度的能量。\n    总动能的期望均值 $\\mu_K$ 是各个独立贡献的均值之和：\n    $$ \\mu_K = \\mathrm{E}[K] = \\sum_{i=1}^{f} \\mathrm{E}[\\epsilon_i] = f \\cdot \\left(\\frac{1}{2} T\\right) = \\frac{1}{2}fT $$\n    每个自由度的能量 $\\epsilon_i$ 服从伽马分布 $\\mathrm{Gamma}(\\alpha=1/2, \\beta=T)$。其方差为 $\\mathrm{Var}(\\epsilon_i) = \\alpha \\beta^2 = \\frac{1}{2}T^2$。由于自由度是独立的，总动能的方差 $\\mathrm{Var}_{\\mathrm{eq}}(K)$ 或 $\\sigma_K^2$ 是各自由度方差之和：\n    $$ \\sigma_K^2 = \\mathrm{Var}_{\\mathrm{eq}}(K) = \\sum_{i=1}^{f} \\mathrm{Var}(\\epsilon_i) = f \\cdot \\left(\\frac{1}{2} T^2\\right) = \\frac{1}{2}fT^2 $$\n    $K$ 本身的分布是伽马分布 $K \\sim \\mathrm{Gamma}(\\alpha = f/2, \\beta=T)$，这也证实了这些矩。\n\n2.  **样本均值 $\\overline{K}$ 的假设检验**：\n    零假设 $H_0$ 是动能样本从正确的平衡分布中抽取，即 $\\mathrm{E}[K] = \\mu_K$。对于大量的独立样本 $n$，中心极限定理指出样本均值 $\\overline{K}$ 的抽样分布近似为高斯分布：$\\overline{K} \\sim \\mathcal{N}(\\mu_K, \\sigma_K^2/n)$。标准化检验统计量为：\n    $$ Z_{\\overline{K}} = \\frac{\\overline{K} - \\mu_K}{\\sigma_K / \\sqrt{n}} = \\frac{\\overline{K} - \\frac{1}{2}fT}{\\sqrt{\\frac{1}{2}fT^2 / n}} $$\n    我们将此统计量与给定双侧显著性水平 $p^*$ 的标准正态分布的临界值 $z_{crit}$ 进行比较。对于 $p^*=0.01$，临界值为 $z_{crit} \\approx 2.5758$。如果 $|Z_{\\overline{K}}| \\le z_{crit}$，则接受零假设。\n\n3.  **样本方差 $\\widehat{\\mathrm{Var}}(K)$ 的假设检验**：\n    零假设 $H_0$ 是动能的真实方差为 $\\sigma_K^2 = \\mathrm{Var}_{\\mathrm{eq}}(K)$。对于大样本量 $n$，样本方差 $S^2 = \\widehat{\\mathrm{Var}}(K)$ 的抽样分布也近似为高斯分布：$S^2 \\sim \\mathcal{N}(\\sigma_K^2, \\mathrm{Var}(S^2))$。样本方差的方差由 $\\mathrm{Var}(S^2) \\approx \\frac{1}{n}(\\mu_4 - \\sigma_K^4)$ 给出，其中 $\\mu_4$ 是 $K$ 的潜在分布的四阶中心矩。\n    对于 $K \\sim \\mathrm{Gamma}(\\alpha=f/2, \\beta=T)$，四阶中心矩为 $\\mu_4 = (3\\alpha^2 + 6\\alpha)\\beta^4$。代入 $\\alpha$ 和 $\\beta$：\n    $$ \\mu_4(K) = \\left(3\\left(\\frac{f}{2}\\right)^2 + 6\\left(\\frac{f}{2}\\right)\\right)T^4 = \\left(\\frac{3f^2}{4} + 3f\\right)T^4 $$\n    因此，样本方差估计量的方差为：\n    $$ \\mathrm{Var}(\\widehat{\\mathrm{Var}}(K)) \\approx \\frac{1}{n}\\left[ \\left(\\frac{3f^2}{4} + 3f\\right)T^4 - \\left(\\frac{1}{2}fT^2\\right)^2 \\right] = \\frac{1}{n}\\left(\\frac{f^2}{2} + 3f\\right)T^4 $$\n    抽样分布的标准差为 $\\sigma_{\\widehat{\\mathrm{Var}}(K)} = \\sqrt{\\mathrm{Var}(\\widehat{\\mathrm{Var}}(K))}$。检验统计量为：\n    $$ Z_{\\widehat{\\mathrm{Var}}(K)} = \\frac{\\widehat{\\mathrm{Var}}(K) - \\mathrm{Var}_{\\mathrm{eq}}(K)}{\\sigma_{\\widehat{\\mathrm{Var}}(K)}} $$\n    如果 $|Z_{\\widehat{\\mathrm{Var}}(K)}| \\le z_{crit}$，则接受一致性。\n\n**第二部分：NPT 系综诊断 (体积)**\n\n在 NPT 系综中，体积 $V$ 会发生涨落。其方差与宏观响应函数——等温压缩率 $\\kappa_T$ 有关。\n\n1.  **体积的平衡方差**：\n    根据 NPT 系综的统计力学原理，体积的方差由涨落-耗散关系给出：\n    $$ \\mathrm{Var}(V) = -k_{\\mathrm{B}} T \\left( \\frac{\\partial \\langle V \\rangle}{\\partial P} \\right)_{N,T} $$\n    等温压缩率定义为 $\\kappa_T = -\\frac{1}{\\langle V \\rangle} (\\frac{\\partial \\langle V \\rangle}{\\partial P})_{N,T}$。将其代入方差公式并设 $k_{\\mathrm{B}}=1$，我们得到体积的平衡方差：\n    $$ \\mathrm{Var}_{\\mathrm{eq}}(V) = \\langle V \\rangle T \\kappa_T $$\n    我们使用给定的平均体积 $V$ 作为 $\\langle V \\rangle$ 的估计量。\n\n2.  **样本方差 $\\widehat{\\mathrm{Var}}(V)$ 的假设检验**：\n    零假设是体积的真实方差为 $\\mathrm{Var}_{\\mathrm{eq}}(V)$。问题假定对于大系统，体积涨落近似为正态分布，因此我们将体积值的总体建模为 $V_i \\sim \\mathcal{N}(\\mu_V, \\sigma_V^2)$，其中 $\\sigma_V^2 = \\mathrm{Var}_{\\mathrm{eq}}(V)$。\n    对于一个潜在的正态分布，当 $n$ 很大时，样本方差 $S_V^2 = \\widehat{\\mathrm{Var}}(V)$ 的方差为：\n    $$ \\mathrm{Var}(S_V^2) \\approx \\frac{2(\\sigma_V^2)^2}{n} $$\n    这可由通用公式 $\\mathrm{Var}(S^2) \\approx \\frac{1}{n}(\\mu_4 - \\sigma^4)$ 得出，其中对于正态分布，四阶中心矩为 $\\mu_4 = 3\\sigma^4$。\n    $\\widehat{\\mathrm{Var}}(V)$ 的抽样分布的标准差为 $\\sigma_{\\widehat{\\mathrm{Var}}(V)} = \\sigma_V^2 \\sqrt{2/n}$。检验统计量为：\n    $$ Z_{\\widehat{\\mathrm{Var}}(V)} = \\frac{\\widehat{\\mathrm{Var}}(V) - \\mathrm{Var}_{\\mathrm{eq}}(V)}{\\sigma_{\\widehat{\\mathrm{Var}}(V)}} = \\frac{\\widehat{\\mathrm{Var}}(V) - \\mathrm{Var}_{\\mathrm{eq}}(V)}{\\mathrm{Var}_{\\mathrm{eq}}(V)\\sqrt{2/n}} $$\n    如果 $|Z_{\\widehat{\\mathrm{Var}}(V)}| \\le z_{crit}$，则接受一致性。\n\n**计算实现**\n\n推导出的公式在一个程序中实现。对于每个测试用例，该程序计算动能和体积的理论平衡均值和方差。然后，它计算测量的样本均值和方差的 z-分数。这些 z-分数与对应于双侧显著性水平 $p^*=0.01$ 的临界值 $z_{crit} \\approx 2.5758$ 进行比较。如果绝对 z-分数在临界界限内（一致），则布尔标志设置为 `True`，否则设置为 `False`（偏离）。最后，计算涨落抑制/放大因子 $s_K = \\widehat{\\mathrm{Var}}(K)/\\mathrm{Var}_{\\mathrm{eq}}(K)$ 和 $s_V = \\widehat{\\mathrm{Var}}(V)/\\mathrm{Var}_{\\mathrm{eq}}(V)$。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Validates simulation data against theoretical predictions from statistical mechanics\n    for NVT and NPT ensembles.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"case_id\": 1, \"f\": 600, \"T\": 1.0, \"n\": 20000, \n            \"k_mean_obs\": 300.1, \"k_var_obs\": 294.0, \n            \"V_mean\": 1000.0, \"kappa_T\": 0.005, \"v_var_obs\": 5.05\n        },\n        {\n            \"case_id\": 2, \"f\": 600, \"T\": 1.0, \"n\": 20000, \n            \"k_mean_obs\": 300.0, \"k_var_obs\": 60.0, \n            \"V_mean\": 1000.0, \"kappa_T\": 0.005, \"v_var_obs\": 1.5\n        },\n        {\n            \"case_id\": 3, \"f\": 6, \"T\": 1.0, \"n\": 20000, \n            \"k_mean_obs\": 3.0, \"k_var_obs\": 2.9, \n            \"V_mean\": 1000.0, \"kappa_T\": 0.005, \"v_var_obs\": 7.5\n        },\n        {\n            \"case_id\": 4, \"f\": 600, \"T\": 1.0, \"n\": 500, \n            \"k_mean_obs\": 300.2, \"k_var_obs\": 280.0, \n            \"V_mean\": 1000.0, \"kappa_T\": 0.005, \"v_var_obs\": 4.6\n        }\n    ]\n\n    p_star = 0.01\n    z_crit = norm.ppf(1 - p_star / 2)\n    \n    results = []\n\n    for case in test_cases:\n        f = case[\"f\"]\n        T = case[\"T\"]\n        n = case[\"n\"]\n        k_mean_obs = case[\"k_mean_obs\"]\n        k_var_obs = case[\"k_var_obs\"]\n        V_mean = case[\"V_mean\"]\n        kappa_T = case[\"kappa_T\"]\n        v_var_obs = case[\"v_var_obs\"]\n\n        # NVT Calculations (Kinetic Energy)\n        # Theoretical mean and variance of kinetic energy K\n        k_mean_eq = 0.5 * f * T\n        k_var_eq = 0.5 * f * T**2\n\n        # Test for the sample mean of K\n        std_dev_k_mean_sampling = np.sqrt(k_var_eq / n)\n        z_k_mean = (k_mean_obs - k_mean_eq) / std_dev_k_mean_sampling if std_dev_k_mean_sampling > 0 else 0\n        flag_k_mean = abs(z_k_mean) = z_crit\n\n        # Test for the sample variance of K\n        # Variance of the sample variance estimator for K ~ Gamma(f/2, T)\n        var_of_k_var_sampling = (1/n) * (0.5 * f**2 + 3 * f) * T**4\n        std_dev_k_var_sampling = np.sqrt(var_of_k_var_sampling)\n        z_k_var = (k_var_obs - k_var_eq) / std_dev_k_var_sampling if std_dev_k_var_sampling > 0 else 0\n        flag_k_var = abs(z_k_var) = z_crit\n        \n        # Fluctuation suppression/amplification factor for K\n        s_k = k_var_obs / k_var_eq if k_var_eq > 0 else 0\n\n        # NPT Calculations (Volume)\n        # Theoretical variance of volume V\n        v_var_eq = V_mean * T * kappa_T\n\n        # Test for the sample variance of V (assuming V is approx. Normal)\n        # Variance of the sample variance estimator for V ~ Normal\n        var_of_v_var_sampling = 2 * (v_var_eq**2) / n\n        std_dev_v_var_sampling = np.sqrt(var_of_v_var_sampling)\n        z_v_var = (v_var_obs - v_var_eq) / std_dev_v_var_sampling if std_dev_v_var_sampling > 0 else 0\n        flag_v_var = abs(z_v_var) = z_crit\n\n        # Fluctuation suppression/amplification factor for V\n        s_v = v_var_obs / v_var_eq if v_var_eq > 0 else 0\n\n        # Append formatted results\n        results.append(f\"{s_k:.3f}\")\n        results.append(str(flag_k_var))\n        results.append(str(flag_k_mean))\n        results.append(f\"{s_v:.3f}\")\n        results.append(str(flag_v_var))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2787457"}, {"introduction": "在验证了我们的模拟方法并诊断了其统计行为之后，我们便可以应用这些工具来计算有意义的热力学量。本练习将介绍一种计算自由能的核心技术——热力学积分。此方法允许我们通过积分一个系综平均量来计算通常难以直接测量的吉布斯自由能之差，并将其应用于表面科学中的一个具体问题：分子的吸附自由能 [@problem_id:2787469]。", "problem": "等温等压系综为固定粒子数、压力和温度下的吉布斯自由能提供了严谨的统计力学基础。仅从基本定义出发，且不引用任何直接陈述目标结果的公式，完成以下任务。\n\n- 推导任务。从经典体系的等温等压配分函数（包含 $N$ 个粒子，哈密顿量为 $H(\\mathbf{p},\\mathbf{r};V)$，处于压力 $P$ 和温度 $T$ 下）的定义、吉布斯自由能 $G(N,P,T)$ 的定义以及与勒让德变换相关的吉布斯-亥姆霍兹关系开始。使用这些基本定义，推导出一个精确关系，将固定 $N$ 和 $T$ 条件下的导数 $\\partial G/\\partial P$ 与等温等压系综中的系综平均联系起来，然后将该导数对压力进行积分，从而得到一个关于系综平均的压力积分的一维热力学积分公式，用于计算差值 $G(N,P_{2},T)-G(N,P_{1},T)$。您的推导必须明确展示每一个逻辑步骤，且只能从这些基础定义出发，不得假定除这些定义之外任何关于等温等压系综的专门结论。\n\n- 表面吸附方案任务。考虑在固定温度 $T$ 和外压 $P$ 下，某分子物种在平面固体表面上的吸附过程。概述一个基于等温等压系综、科学合理且可用于模拟的方案，该方案能通过分子动力学或蒙特卡罗模拟计算吸附吉布斯自由能 $ \\Delta G_{\\mathrm{ads}}(T,P) $。您的方案应明确说明：(i) 需要模拟哪些体系，(ii) 在每个压力下，对每个体系需要测量哪些可观测量，(iii) 如何将这些可观测量组合成一个压力积分，从而将 $ \\Delta G_{\\mathrm{ads}} $ 从参考压力 $P_{\\mathrm{ref}}$ 推进到目标压力 $P$，以及 (iv) 如何结合已知的参考值 $\\Delta G_{\\mathrm{ads}}(T,P_{\\mathrm{ref}})$ 来得到 $\\Delta G_{\\mathrm{ads}}(T,P)$。明确说明任何标准态和有限尺寸的考虑因素，并详细说明如何处理表面几何形状和恒压器，以使该方案适用于纳米力学表面系统。\n\n- 编程任务。实现一个程序，该程序接收指定的离散等温等压可观测量，并使用复合梯形法则在给定的压力网格上计算压力积分的吉布斯自由能差。如果积分边界不恰好是网格点，则在积分前使用线性插值插入边界点。所有输出必须以摩尔量表示，单位为千焦/摩尔 (kJ/mol)，并四舍五入到 $6$ 位小数。不使用角度。使用以下测试套件（压力单位为帕斯卡，摩尔体积单位为 $\\mathrm{m}^{3}\\,\\mathrm{mol}^{-1}$，能量单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$）：\n\n  - 测试用例 A（一般类气体情况）。使用压力网格 $[1.0\\times 10^{5},\\,2.5\\times 10^{5},\\,5.0\\times 10^{5},\\,7.5\\times 10^{5},\\,1.0\\times 10^{6}]$ 及对应的摩尔体积 $V_{m}=[2.4943387854\\times 10^{-2},\\,9.9773551416\\times 10^{-3},\\,4.9886775708\\times 10^{-3},\\,3.3257850472\\times 10^{-3},\\,2.4943387854\\times 10^{-3}]$，对压力从 $P_{1}=1.0\\times 10^{5}$ 到 $P_{2}=1.0\\times 10^{6}$ 进行积分。返回 $\\int_{P_{1}}^{P_{2}} V_{m}(P)\\,dP$ 的梯形法估算值，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n  - 测试用例 B（近乎不可压缩的固体，在此范围内具有线性压缩性）。使用压力网格 $[0,\\,2.5\\times 10^{8},\\,5.0\\times 10^{8},\\,7.5\\times 10^{8},\\,1.0\\times 10^{9}]$ 及对应的摩尔体积 $V_{m}=[1.000\\times 10^{-5},\\,9.975\\times 10^{-6},\\,9.950\\times 10^{-6},\\,9.925\\times 10^{-6},\\,9.900\\times 10^{-6}]$，对压力从 $P_{1}=0$ 到 $P_{2}=1.0\\times 10^{9}$ 进行积分。返回 $\\int_{P_{1}}^{P_{2}} V_{m}(P)\\,dP$ 的梯形法估算值，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n  - 测试用例 C（边界条件检查）。在压力网格 $[4.0\\times 10^{5},\\,5.0\\times 10^{5},\\,6.0\\times 10^{5}]$ 上，使用任意恒定的摩尔体积网格 $V_{m}=[1.000\\times 10^{-5},\\,1.000\\times 10^{-5},\\,1.000\\times 10^{-5}]$，对压力从 $P_{1}=5.0\\times 10^{5}$ 到 $P_{2}=5.0\\times 10^{5}$ 进行积分。返回梯形法估算值，单位为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。\n\n  - 测试用例 D（使用已知参考值的吸附压力推进）。在 $P_{\\mathrm{ref}}=1.0\\times 10^{5}$ 处的参考吸附自由能给定为 $\\Delta G_{\\mathrm{ads}}(T,P_{\\mathrm{ref}})=-20.000$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$。吸附摩尔体积变化作为压力的函数直接在网格 $[1.0\\times 10^{5},\\,2.0\\times 10^{5},\\,3.0\\times 10^{5},\\,4.0\\times 10^{5},\\,5.0\\times 10^{5}]$ 上提供，其值为 $\\Delta V_{m}=[-2.4942387854\\times 10^{-2},\\,-1.2470693927\\times 10^{-2},\\,-8.3134626180\\times 10^{-3},\\,-6.2348469635\\times 10^{-3},\\,-4.9876775708\\times 10^{-3}]$。使用此网格上的复合梯形法则计算 $P_{2}=5.0\\times 10^{5}$ 时的 $\\int_{P_{\\mathrm{ref}}}^{P_{2}} \\Delta V_{m}(P)\\,dP$，将其转换为 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$，与给定的参考值相加得到 $\\Delta G_{\\mathrm{ads}}(T,P_{2})$，并返回该值。\n\n您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表（例如 $[x_{A},x_{B},x_{C},x_{D}]$），$x_{A}$、$x_{B}$、$x_{C}$ 和 $x_{D}$ 分别是测试用例 A、B、C 和 D 的四舍五入后的 $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ 值。", "solution": "所提出的问题是统计力学和计算科学领域一个有效、适定的问题。它具有科学依据、内部一致，并包含解决该问题所需的全部信息。我将按要求分三部分进行解答：推导、方案设计和数值实现。\n\n### 推导任务\n\n目标是从基本定义出发，推导吉布斯自由能差 $G(N,P_{2},T) - G(N,P_{1},T)$ 的热力学积分公式。\n\n等温等压（$NPT$）系综描述了一个具有固定粒子数 $N$、处于恒定温度 $T$ 和恒定压力 $P$ 的系统。其对应的配分函数 $\\Delta(N,P,T)$ 是通过对所有可能的体积 $V$ 以及与该体积一致的所有相空间构型 $(\\mathbf{p}, \\mathbf{r})$ 进行积分来定义的。\n\n配分函数由下式给出：\n$$\n\\Delta(N,P,T) = C \\int_{0}^{\\infty} dV \\, e^{-\\beta PV} \\int d\\mathbf{p}^{3N} d\\mathbf{r}^{3N} \\, e^{-\\beta H(\\mathbf{p}, \\mathbf{r}; V)}\n$$\n其中 $\\beta = (k_B T)^{-1}$，$k_B$ 是 Boltzmann 常数，$H(\\mathbf{p}, \\mathbf{r}; V)$ 是体积为 $V$ 的系统的哈密顿量。常数 $C$ 包含了诸如 $(h^{3N}N!)^{-1}$ 之类的因子以及其他与压力 $P$ 和体积 $V$ 无关的归一化常数。\n\n我们可以通过识别正则配分函数 $Z(N,V,T)$ 来重写此式：\n$$\nZ(N,V,T) = C' \\int d\\mathbf{p}^{3N} d\\mathbf{r}^{3N} \\, e^{-\\beta H(\\mathbf{p}, \\mathbf{r}; V)}\n$$\n因此\n$$\n\\Delta(N,P,T) = C'' \\int_{0}^{\\infty} dV \\, e^{-\\beta PV} Z(N,V,T)\n$$\n其中 $C''$ 是另一个常数。\n\n统计力学和热力学之间的基本联系由配分函数与相应热力学势之间的关系提供。对于等温等压系综，这个势就是吉布斯自由能 $G(N,P,T)$：\n$$\nG(N,P,T) = -k_B T \\ln \\Delta(N,P,T)\n$$\n问题要求推导 $G$ 的压力导数关系。我们在固定 $N$ 和 $T$ 的条件下对 $G$ 求关于 $P$ 的导数：\n$$\n\\frac{\\partial G}{\\partial P}\\bigg|_{N,T} = -k_B T \\frac{1}{\\Delta(N,P,T)} \\frac{\\partial \\Delta(N,P,T)}{\\partial P}\\bigg|_{N,T}\n$$\n现在，我们计算配分函数 $\\Delta$ 对 $P$ 的导数：\n$$\n\\frac{\\partial \\Delta}{\\partial P}\\bigg|_{N,T} = C'' \\frac{\\partial}{\\partial P} \\int_{0}^{\\infty} dV \\, e^{-\\beta PV} Z(N,V,T)\n$$\n使用积分号下求导的莱布尼茨法则：\n$$\n\\frac{\\partial \\Delta}{\\partial P} = C'' \\int_{0}^{\\infty} dV \\, Z(N,V,T) \\, \\frac{\\partial}{\\partial P} (e^{-\\beta PV}) = C'' \\int_{0}^{\\infty} dV \\, Z(N,V,T) \\, (-\\beta V) e^{-\\beta PV}\n$$\n$$\n\\frac{\\partial \\Delta}{\\partial P} = -\\beta \\left( C'' \\int_{0}^{\\infty} dV \\, V \\, e^{-\\beta PV} Z(N,V,T) \\right)\n$$\n将此结果代回 $\\partial G / \\partial P$ 的表达式中：\n$$\n\\frac{\\partial G}{\\partial P} = -k_B T \\frac{1}{\\Delta} \\left[ -\\beta \\left( C'' \\int_{0}^{\\infty} dV \\, V \\, e^{-\\beta PV} Z(N,V,T) \\right) \\right]\n$$\n代入 $\\beta = (k_B T)^{-1}$，上式简化为：\n$$\n\\frac{\\partial G}{\\partial P} = \\frac{C'' \\int_{0}^{\\infty} dV \\, V \\, e^{-\\beta PV} Z(N,V,T)}{\\Delta(N,P,T)}\n$$\n等式右边的表达式正是体积的系综平均的定义，记为 $\\langle V \\rangle_{NPT}$。在 $NPT$ 系综中，发现系统体积为 $V$ 的概率密度正比于 $e^{-\\beta PV} Z(N,V,T)$。因此，平均体积为：\n$$\n\\langle V \\rangle_{NPT} = \\frac{\\int_{0}^{\\infty} dV \\, V \\, e^{-\\beta PV} Z(N,V,T)}{\\int_{0}^{\\infty} dV \\, e^{-\\beta PV} Z(N,V,T)} = \\frac{C'' \\int_{0}^{\\infty} dV \\, V \\, e^{-\\beta PV} Z(N,V,T)}{\\Delta(N,P,T)}\n$$\n因此，我们从统计力学原理推导出了基本的热力学关系：\n$$\n\\frac{\\partial G}{\\partial P}\\bigg|_{N,T} = \\langle V \\rangle_{NPT}\n$$\n为了得到在恒定 $N$ 和 $T$ 下，两个压力 $P_1$ 和 $P_2$ 之间吉布斯自由能变化的热力学积分公式，我们将此偏导数对压力进行积分：\n$$\n\\int_{P_1}^{P_2} \\left( \\frac{\\partial G}{\\partial P'} \\right)_{N,T} dP' = \\int_{P_1}^{P_2} \\langle V \\rangle_{N,P',T} dP'\n$$\n左侧积分结果为 $G(N,P_2,T) - G(N,P_1,T)$。由此得到最终的热力学积分公式：\n$$\nG(N,P_2,T) - G(N,P_1,T) = \\int_{P_1}^{P_2} \\langle V \\rangle_{N,P',T} dP'\n$$\n此推导满足了从指定公理化定义出发的要求。提及“与勒让德变换相关的吉布斯-亥姆霍兹关系”是在暗示一个普遍原理，即热力学势的导数会得到其共轭变量，这一原理在此已针对 $NPT$ 系综中的 $G, P, V$ 关系得到了严格证明。\n\n### 表面吸附方案任务\n\n目标是计算分子在平面固体表面上的吸附吉布斯自由能 $\\Delta G_{\\mathrm{ads}}(T,P)$。吸附过程定义为将一个分子从体相气相中取出并放置到表面上。此过程的吉布斯自由能变为：\n$$\n\\Delta G_{\\mathrm{ads}} = G_{\\mathrm{surf+ads}} - G_{\\mathrm{surf}} - G_{\\mathrm{gas, molecule}}\n$$\n其中各项分别代表带有吸附分子的表面、与体相流体接触的裸表面、以及体相气相中一个分子的吉布斯自由能。\n\n利用推导出的结果，$\\Delta G_{\\mathrm{ads}}$ 的压力导数为：\n$$\n\\frac{\\partial (\\Delta G_{\\mathrm{ads}})}{\\partial P} = \\left\\langle V_{\\mathrm{surf+ads}} \\right\\rangle - \\left\\langle V_{\\mathrm{surf}} \\right\\rangle - \\left\\langle V_{\\mathrm{gas, molecule}} \\right\\rangle \\equiv \\Delta V_{\\mathrm{ads}}\n$$\n这定义了吸附过程中的体积变化 $\\Delta V_{\\mathrm{ads}}$，它作为对压力进行热力学积分的被积函数。以下可用于模拟的方案能够计算该值。\n\n(i) **需模拟的体系**：\n必须使用分子动力学或蒙特卡罗方法，在适当的等温等压系综中模拟两个主要体系。\n1.  **体系A（吸附态）**：一个模拟盒子，包含一个代表表面的固体板层，周围是由 $M$ 个溶剂/气体分子组成的流体/气相，外加一个吸附物种分子。通常使用势偏置来约束吸附物，使其停留在表面附近，从而定义吸附态。\n2.  **体系B（裸表面参照态）**：一个相同的模拟盒子，包含相同的固体板层和相同数量 $M$ 的溶剂/气体分子，但没有吸附物分子。\n\n(ii) **需测量的可观测量**：\n在一系列压力点网格 $\\{P_i\\}$ 上对体系 A 和体系 B 进行模拟，该网格覆盖了从参考压力 $P_{\\mathrm{ref}}$ 到目标压力 $P$ 的范围。在每个压力 $P_i$ 下：\n1.  运行体系 A 的模拟，计算其时间平均体积 $\\langle V_A \\rangle(P_i)$。\n2.  运行体系 B 的模拟，计算其时间平均体积 $\\langle V_B \\rangle(P_i)$。\n3.  必须确定一个气体分子的体积 $\\langle V_{\\mathrm{gas, molecule}} \\rangle(P_i)$。这等于摩尔体积 $V_m(P_i)$ 除以 Avogadro 常数 $N_A$。摩尔体积可以通过对纯体相气体的单独模拟计算得到，或从一个可靠的状态方程（例如，在低压下的理想气体定律 $V_m = RT/P$）得到。\n4.  计算每摩尔吸附物的体积变化 $\\Delta V_m(P_i)$：\n    $$\n    \\Delta V_m(P_i) = N_A \\times \\left( \\langle V_A \\rangle(P_i) - \\langle V_B \\rangle(P_i) - V_m(P_i)/N_A \\right) = N_A \\left( \\langle V_A \\rangle(P_i) - \\langle V_B \\rangle(P_i) \\right) - V_m(P_i)\n    $$\n\n(iii) **压力积分**：\n将离散值集合 $\\{\\Delta V_m(P_i)\\}$ 从 $P_{\\mathrm{ref}}$ 到 $P$ 对压力进行数值积分，以求得吸附自由能的变化。\n$$\n\\int_{P_{\\mathrm{ref}}}^{P} \\Delta V_m(P') dP'\n$$\n使用采集到的数据点，采用标准的数值求积法则（如复合梯形法则）进行此积分。\n\n(iv) **使用参考值进行最终计算**：\n通过将压力积分加到一个已知的参考值上，获得目标压力 $P$ 下的最终吸附自由能：\n$$\n\\Delta G_{\\mathrm{ads}}(T,P) = \\Delta G_{\\mathrm{ads}}(T,P_{\\mathrm{ref}}) + \\int_{P_{\\mathrm{ref}}}^{P} \\Delta V_m(P') dP'\n$$\n$\\Delta G_{\\mathrm{ads}}(T,P_{\\mathrm{ref}})$ 的值必须独立确定，例如通过在 $P_{\\mathrm{ref}}$ 下进行平均力势（PMF）计算或从实验数据中获得。\n\n**纳米力学与模拟注意事项**：\n- **几何构型与周期性**：为模拟表面，使用具有三维周期性边界条件的板层几何构型。在垂直于板层表面（例如 $z$ 方向）的方向上添加真空层，以防止板层的周期性镜像之间发生相互作用。\n- **恒压器**：对于板层体系，压力是各向异性的。外压 $P$ 对应于法向压力（$P_z$）。平行于表面的盒子尺寸（$L_x, L_y$）通常保持固定，或者这些方向上的压力耦合到目标表面张力（通常为零）。因此，必须使用各向异性恒压器，从而形成 $NP_zAT$ 或 $NP_{xx}P_{yy}P_zT$ 系综。此时，“体积”测量值 $\\langle V \\rangle$ 是 $A \\times L_z$ 的平均值，其中面积 $A$ 是常数，$L_z$ 发生涨落。\n- **有限尺寸效应**：模拟结果必须就表面积、板层厚度和体相流体量进行收敛性检查，以确保它们代表宏观极限。\n- **标准态**：计算得到的 $\\Delta G_{\\mathrm{ads}}$ 对应于一个分子从压力为 $P$ 的体相转移到表面的过程。为了报告标准的吸附自由能 $\\Delta G^\\circ_{\\mathrm{ads}}$，必须应用与气体（例如 $P^\\circ = 1$ bar）和吸附物（例如特定的表面覆盖度）的标准态相关的校正。\n\n### 编程任务\n\n以下程序实现了所需的计算。定义了一个积分函数来执行复合梯形法则，并通过线性插值处理积分限不在数据网格上的情况。然后将此函数应用于四个指定的测试用例。所有最终的能量值都转换为 kJ/mol 并四舍五入到六位小数。", "answer": "```python\nimport numpy as np\n\ndef integrate_with_interpolation(p_grid, v_grid, p1, p2):\n    \"\"\"\n    Computes the integral of v(p)dp from p1 to p2 using the composite\n    trapezoidal rule.\n\n    If p1 or p2 are not in p_grid, their corresponding v values are\n    found using linear interpolation.\n\n    Args:\n        p_grid (np.ndarray): Array of pressure points (x-values).\n        v_grid (np.ndarray): Array of volume values (y-values).\n        p1 (float): Lower integration bound.\n        p2 (float): Upper integration bound.\n\n    Returns:\n        float: The value of the definite integral.\n    \"\"\"\n    # Handle the trivial case\n    if p1 == p2:\n        return 0.0\n\n    # Ensure p1  p2 for simplicity; adjust sign at the end\n    sign = 1.0\n    if p1 > p2:\n        p1, p2 = p2, p1\n        sign = -1.0\n\n    # Create the new pressure grid for integration, including the bounds\n    # and all original points that lie within the integration range.\n    points_within = p_grid[(p_grid > p1)  (p_grid  p2)]\n    p_integration = np.unique(np.concatenate(([p1], points_within, [p2])))\n\n    # Interpolate to find the volume values on the new integration grid\n    v_integration = np.interp(p_integration, p_grid, v_grid)\n\n    # Compute the integral using numpy's trapezoidal rule implementation\n    integral = np.trapz(v_integration, p_integration)\n\n    return sign * integral\n\ndef solve():\n    \"\"\"\n    Solves the programming task by performing numerical integration on four\n    test cases as specified in the problem statement.\n    \"\"\"\n    J_PER_KJ = 1000.0\n    results = []\n\n    # Test case A (general gas-like case)\n    p_grid_a = np.array([1.0e5, 2.5e5, 5.0e5, 7.5e5, 1.0e6])\n    vm_grid_a = np.array([\n        2.4943387854e-2, 9.9773551416e-3, 4.9886775708e-3,\n        3.3257850472e-3, 2.4943387854e-3\n    ])\n    p1_a, p2_a = 1.0e5, 1.0e6\n    integral_a = integrate_with_interpolation(p_grid_a, vm_grid_a, p1_a, p2_a)\n    result_a = integral_a / J_PER_KJ\n    results.append(result_a)\n\n    # Test case B (nearly incompressible solid)\n    p_grid_b = np.array([0, 2.5e8, 5.0e8, 7.5e8, 1.0e9])\n    vm_grid_b = np.array([\n        1.000e-5, 9.975e-6, 9.950e-6, 9.925e-6, 9.900e-6\n    ])\n    p1_b, p2_b = 0, 1.0e9\n    integral_b = integrate_with_interpolation(p_grid_b, vm_grid_b, p1_b, p2_b)\n    result_b = integral_b / J_PER_KJ\n    results.append(result_b)\n\n    # Test case C (boundary condition check)\n    p_grid_c = np.array([4.0e5, 5.0e5, 6.0e5])\n    vm_grid_c = np.array([1.0e-5, 1.0e-5, 1.0e-5])\n    p1_c, p2_c = 5.0e5, 5.0e5\n    integral_c = integrate_with_interpolation(p_grid_c, vm_grid_c, p1_c, p2_c)\n    result_c = integral_c / J_PER_KJ\n    results.append(result_c)\n\n    # Test case D (adsorption pressure advance)\n    p_ref_d = 1.0e5\n    p2_d = 5.0e5\n    delta_g_ref_d = -20.000  # in kJ/mol\n    p_grid_d = np.array([1.0e5, 2.0e5, 3.0e5, 4.0e5, 5.0e5])\n    delta_vm_grid_d = np.array([\n        -2.4942387854e-2, -1.2470693927e-2, -8.3134626180e-3,\n        -6.2348469635e-3, -4.9876775708e-3\n    ])\n    \n    integral_d = integrate_with_interpolation(p_grid_d, delta_vm_grid_d, p_ref_d, p2_d)\n    delta_g_integral_d = integral_d / J_PER_KJ\n    result_d = delta_g_ref_d + delta_g_integral_d\n    results.append(result_d)\n    \n    # Format the final output string\n    formatted_results = [f\"{val:.6f}\" for val in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2787469"}]}