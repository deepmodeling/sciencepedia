{"hands_on_practices": [{"introduction": "掌握近场动力学的核心在于理解其非局域特性，这一切始于“键”的变形。本练习将引导你通过一个最简单的一维均匀拉伸杆模型，从第一性原理出发计算键的伸长率。这个基础计算将清晰地揭示键伸长率是如何仅依赖于相对位移，而非绝对位置，从而为后续更复杂的受力和本构关系分析奠定坚实基础 [@problem_id:2667654]。", "problem": "考虑一根占据实数线的一维近场动力学杆，其近场动力学作用半径固定为 $\\delta>0$。对于一个位于位置 $x\\in\\mathbb{R}$ 的物质点，其近场动力学族是该作用半径内所有点的集合。该杆经历一个位移场 $u(x)=\\alpha x$, 其中 $\\alpha$ 是一个标量常数。假设 $\\alpha>-1$，以确保键的方向不发生反转。\n\n仅使用运动学映射 $y(x)=x+u(x)$ 以及键拉伸是两个物质点 $x$ 和 $x'\\in H_{\\delta}(x)$ 之间键长的相对变化量这一解释，按以下步骤进行：\n- 将近场动力学族 $H_{\\delta}(x)$ 写成 $\\mathbb{R}$ 的一个子集。\n- 从第一性原理出发，推导 $x$ 与 $x'$ 之间的键拉伸（用 $\\alpha$ 表示），并明确证明其不依赖于绝对位置 $x$ 以及 $x'\\in H_{\\delta}(x)\\setminus\\{x\\}$ 的具体选择。\n- 以闭式解析表达式的形式，给出键拉伸的最终恒定值。\n\n你的最终答案必须是单个闭式表达式（无量纲标量）。无需进行四舍五入。", "solution": "该问题陈述具有科学依据，内容自洽，且是适定的。它展示了近场动力学理论框架内的一个均匀变形基本案例。我们将从第一性原理出发进行严格推导。\n\n首先，我们对位于位置 $x \\in \\mathbb{R}$、作用半径大小为 $\\delta > 0$ 的物质点的近场动力学族 $H_{\\delta}(x)$ 进行形式化定义。在一维连续体中，此集合包含所有与 $x$ 的距离小于 $\\delta$ 的点 $x'$。它可表示为以下开区间：\n$$\nH_{\\delta}(x) = \\{ x' \\in \\mathbb{R} \\mid |x' - x| < \\delta \\}\n$$\n\n一个键连接物质点 $x$ 与其族内的另一个物质点 $x'$，其中 $x' \\in H_{\\delta}(x)$ 且 $x' \\neq x$。在参考（未变形）构型中，键向量为 $\\boldsymbol{\\xi}$：\n$$\n\\boldsymbol{\\xi} = x' - x\n$$\n此键在参考构型中的长度为 $L = |\\boldsymbol{\\xi}| = |x' - x|$。\n\n这些点在变形后构型中的位置由运动学映射 $y(x) = x + u(x)$ 确定。给定一个位移场 $u(x) = \\alpha x$，其中 $\\alpha$ 为一常数，则变形后的位置为：\n$$\ny(x) = x + \\alpha x = (1+\\alpha)x\n$$\n$$\ny(x') = x' + \\alpha x' = (1+\\alpha)x'\n$$\n\n变形后构型中的键向量连接新位置 $y(x)$ 和 $y(x')$：\n$$\ny(x') - y(x) = (1+\\alpha)x' - (1+\\alpha)x = (1+\\alpha)(x' - x)\n$$\n这个变形后键的长度 $L'$ 是该量的绝对值：\n$$\nL' = |y(x') - y(x)| = |(1+\\alpha)(x' - x)| = |1+\\alpha| |x' - x|\n$$\n问题指定了约束条件 $\\alpha > -1$，这意味着 $1+\\alpha > 0$。因此，有 $|1+\\alpha| = 1+\\alpha$。变形后的长度便可写为：\n$$\nL' = (1+\\alpha)|x' - x| = (1+\\alpha) L\n$$\n\n键拉伸，记为 $s$，定义为键长的相对变化量。这是一个基本定义：\n$$\ns = \\frac{\\text{变形后长度} - \\text{参考长度}}{\\text{参考长度}} = \\frac{L' - L}{L}\n$$\n将 $L$ 和 $L'$ 的表达式代入此定义，我们得到：\n$$\ns = \\frac{(1+\\alpha)L - L}{L} = \\frac{(1+\\alpha-1)L}{L}\n$$\n由于 $x \\neq x'$，参考长度 $L = |x' - x|$ 恒为正，因此可以进行对消：\n$$\ns = 1+\\alpha-1 = \\alpha\n$$\n此结果表明，对于给定的均匀位移场，键拉伸 $s$ 等于常数 $\\alpha$。该值不依赖于绝对位置 $x$ 和特定的键向量 $\\boldsymbol{\\xi} = x' - x$，只要 $x'$ 是 $x$ 族中一个异于 $x$ 本身的点。该推导明确地证实了所要求的性质。", "answer": "$$\\boxed{\\alpha}$$", "id": "2667654"}, {"introduction": "在理解了非局域运动学之后，下一步是建立近场动力学模型与经典连续介质力学之间的桥梁。本练习要求你基于一个简单的线性微弹性本构模型，计算一维杆在均匀应变下的内力密度和应变能密度 [@problem_id:2667613]。通过将近场动力学的能量密度与经典弹性理论进行等效，你将能够推导出宏观弹性模量与微观模型参数（如微模量 $c$ 和近场范围 $\\delta$）之间的关系，亲身体验近场动力学理论的“对应性原理”。", "problem": "我们对一个一维、无限长、基于键的、微观弹性近场动力学杆进行建模，其微观模量 $c$ 在长度为 $\\delta$ 的作用范围内为常数。这意味着，仅当点对间距 $\\xi$ 满足 $|\\xi|<\\delta$ 时，键才存在，否则微观模量为零。假设小变形和均匀轴向应变场 $u(x)=\\epsilon x$，因此变形是均匀的。考虑一个远离任何边界的材料点，使其近场动力学族是完整的。\n\n仅从基于键的近场动力学在小变形运动学下的核心定义出发，即键拉伸、线性微观弹性对力以及微观弹性对势的定义，执行以下操作：\n\n- 计算杆在均匀应变 $\\epsilon$ 下的近场动力学对力，并确定作用在内部点上的合内近场动力学力密度。\n- 通过在作用范围内对微观弹性对势进行积分，推导材料点的近场动力学应变能密度。\n- 通过将近场动力学应变能密度与均匀杆的经典一维弹性应变能密度相等，确定在该情况下关联经典柯西应力 $\\sigma$ 和应变 $\\epsilon$ 的等效模量，从而验证 $\\sigma$ 与 $\\epsilon$ 成正比，其比例模量取决于 $\\delta$ 和 $c$。\n\n在最终答案中，只提供作为 $c$ 和 $\\delta$ 函数的等效模量解析表达式。最终答案中不包含单位。", "solution": "该问题是将非局部近场动力学模型与经典局部弹性理论联系起来的一个标准练习。它具有科学依据，是适定的和客观的。所有必要的参数和条件都已提供，足以进行一个自洽的推导。该问题是有效的。\n\n我们从一维杆的基于键的近场动力学基本定义开始。\n设参考构形中的两个材料点位于位置 $x$ 和 $x' = x + \\xi$。连接它们的向量是键 $\\boldsymbol{\\xi} = (x' - x)\\mathbf{e}_1 = \\xi \\mathbf{e}_1$。\n问题指定了一个由位移 $u(x) = \\epsilon x$ 给出的均匀变形场，其中 $\\epsilon$ 是一个常数应变。\n在变形构形中，点的位置为 $y(x) = x + u(x) = x + \\epsilon x = (1+\\epsilon)x$ 和 $y(x') = x' + u(x') = (1+\\epsilon)x' = (1+\\epsilon)(x+\\xi)$。\n变形后的键向量是 $\\boldsymbol{\\eta} + \\boldsymbol{\\xi} = y(x') - y(x) = (1+\\epsilon)(x+\\xi) - (1+\\epsilon)x = (1+\\epsilon)\\xi \\mathbf{e}_1$。相对位移向量是 $\\boldsymbol{\\eta} = \\mathbf{u}(x')-\\mathbf{u}(x) = u(x')-u(x) = \\epsilon x' - \\epsilon x = \\epsilon(x'-x) = \\epsilon\\xi\\mathbf{e}_1$。\n\n对于小变形，键拉伸 $s$ 定义为键长的分数变化：\n$$s = \\frac{|y(x') - y(x)| - |x' - x|}{ |x' - x|} = \\frac{|(1+\\epsilon)\\xi| - |\\xi|}{|\\xi|}$$\n对于小的 $\\epsilon$，我们可以假设 $1+\\epsilon > 0$。因此，$|(1+\\epsilon)\\xi| = (1+\\epsilon)|\\xi|$。\n$$s = \\frac{(1+\\epsilon)|\\xi| - |\\xi|}{|\\xi|} = \\epsilon$$\n所有键的拉伸都是均匀的，等于所施加的应变 $\\epsilon$。\n\n问题指定了一个线性微观弹性对力，对于一个基于键的模型，其形式为 $\\mathbf{f} = \\mathcal{F}(s) \\mathbf{n}$，其中 $\\mathcal{F}(s)$ 是一个标量力-拉伸函数，$\\mathbf{n}$ 是沿着变形后键方向的单位向量。对于小变形，$\\mathbf{n} \\approx \\boldsymbol{\\xi}/|\\boldsymbol{\\xi}|$。问题陈述微观模量为 $c$，在此上下文中意味着 $\\mathcal{F}(s) = c s$。\n因此，点 $x'$ 施加在点 $x$ 上的对力密度为：\n$$\\mathbf{f}(\\boldsymbol{\\eta}, \\boldsymbol{\\xi}) \\approx c s \\frac{\\boldsymbol{\\xi}}{|\\boldsymbol{\\xi}|} = c \\epsilon \\frac{\\xi \\mathbf{e}_1}{|\\xi|} = c \\epsilon \\, \\mathrm{sgn}(\\xi) \\mathbf{e}_1$$\n在这种一维情况下，标量力密度函数为 $f(\\xi) = c \\epsilon \\, \\mathrm{sgn}(\\xi)$。此力函数定义在作用范围内的 $\\xi$，即 $|\\xi| < \\delta$。\n\n首先，我们计算作用在材料点 $x$ 上的合内近场动力学力密度 $L(x)$。这是作用在 $x$ 上的所有对力密度的积分，这些对力来自其作用范围 $\\mathcal{H}_x$ 内的所有点 $x'$。\n$$L(x) = \\int_{\\mathcal{H}_x} f(x' - x) \\, dV_{x'}$$\n在一维中，$x' - x = \\xi$ 且 $dV_{x'} = dx'$。作用范围从 $x-\\delta$ 延伸到 $x+\\delta$。\n$$L(x) = \\int_{x-\\delta}^{x+\\delta} f(x'-x) \\, dx' = \\int_{-\\delta}^{\\delta} f(\\xi) \\, d\\xi = \\int_{-\\delta}^{\\delta} c \\epsilon \\, \\mathrm{sgn}(\\xi) \\, d\\xi$$\n我们将积分拆分：\n$$L(x) = c \\epsilon \\left( \\int_{-\\delta}^{0} (-1) \\, d\\xi + \\int_{0}^{\\delta} (1) \\, d\\xi \\right) = c \\epsilon \\left( [-\\xi]_{-\\delta}^{0} + [\\xi]_{0}^{\\delta} \\right)$$\n$$L(x) = c \\epsilon \\left( (0 - (-(-\\delta))) + (\\delta - 0) \\right) = c \\epsilon (-\\delta + \\delta) = 0$$\n合力密度为零，这等同于均匀应力下处于平衡状态的物体的平衡方程 $\\nabla \\cdot \\boldsymbol{\\sigma} = \\mathbf{0}$ 的近场动力学形式。\n\n接下来，我们推导材料点 $x$ 处的近场动力学应变能密度 $W_{PD}$。它被定义为连接到 $x$ 的所有键的总势能的一半，在其族上进行积分。因子 $\\frac{1}{2}$ 是为了防止对每个键的能量进行重复计算。\n$$W_{PD}(x) = \\frac{1}{2} \\int_{\\mathcal{H}_x} \\omega(\\boldsymbol{\\eta}, \\boldsymbol{\\xi}) \\, dV_{x'}$$\n其中 $\\omega$ 是微观势或键应变能。对于线性力-拉伸关系 $f=cs$，相应的势为 $\\omega = \\frac{1}{2}cs^2$。一个更基本的方法是通过键所做的功来定义 $W_{PD}$：\n$$W_{PD}(x) = \\frac{1}{2} \\int_{\\mathcal{H}_x} (\\mathbf{u}' - \\mathbf{u}) \\cdot \\mathbf{f} \\, dV_{x'}$$\n在我们的一维情况下，这变为：\n$$W_{PD} = \\frac{1}{2} \\int_{-\\delta}^{\\delta} (\\epsilon\\xi) (c \\epsilon \\, \\mathrm{sgn}(\\xi)) \\, d\\xi = \\frac{1}{2} c \\epsilon^2 \\int_{-\\delta}^{\\delta} \\xi \\, \\mathrm{sgn}(\\xi) \\, d\\xi$$\n因为 $\\xi \\, \\mathrm{sgn}(\\xi) = |\\xi|$，表达式简化为：\n$$W_{PD} = \\frac{1}{2} c \\epsilon^2 \\int_{-\\delta}^{\\delta} |\\xi| \\, d\\xi$$\n积分计算如下：\n$$\\int_{-\\delta}^{\\delta} |\\xi| \\, d\\xi = \\int_{-\\delta}^{0} (-\\xi) \\, d\\xi + \\int_{0}^{\\delta} \\xi \\, d\\xi = \\left[ -\\frac{\\xi^2}{2} \\right]_{-\\delta}^{0} + \\left[ \\frac{\\xi^2}{2} \\right]_{0}^{\\delta} = \\left(0 - (-\\frac{(-\\delta)^2}{2}) \\right) + \\left(\\frac{\\delta^2}{2} - 0 \\right) = \\frac{\\delta^2}{2} + \\frac{\\delta^2}{2} = \\delta^2$$\n将此结果代回，我们得到近场动力学应变能密度：\n$$W_{PD} = \\frac{1}{2} c \\epsilon^2 (\\delta^2) = \\frac{1}{2} c \\delta^2 \\epsilon^2$$\n\n最后，我们将其与一维线弹性材料的经典应变能密度 $W_{\\text{classical}}$ 相等。对于均匀杆，其表达式为：\n$$W_{\\text{classical}} = \\frac{1}{2} \\sigma \\epsilon = \\frac{1}{2} E \\epsilon^2$$\n其中 $\\sigma$ 是柯西应力，$E$ 是等效杨氏模量。\n通过令近场动力学和经典应变能密度表达式相等，我们可以确定等效模量：\n$$W_{PD} = W_{\\text{classical}}$$\n$$\\frac{1}{2} c \\delta^2 \\epsilon^2 = \\frac{1}{2} E \\epsilon^2$$\n对于非平凡应变（$\\epsilon \\neq 0$），我们可以在两边同除以 $\\frac{1}{2}\\epsilon^2$，得到等效模量 $E$ 的表达式：\n$$E = c \\delta^2$$\n这个结果可以通过直接推导近场动力学应力来验证。对于均匀变形，Piola-Kirchhoff应力（在小应变下与柯西应力相同）由 $\\boldsymbol{\\sigma} = \\int_{\\mathcal{H}_x} \\boldsymbol{\\xi} \\otimes \\mathbf{f} \\, dV_{x'}$ 给出。在一维情况下，这是：\n$$\\sigma = \\int_{-\\delta}^{\\delta} \\xi f(\\xi) \\, d\\xi = \\int_{-\\delta}^{\\delta} \\xi (c \\epsilon \\, \\mathrm{sgn}(\\xi)) \\, d\\xi = c \\epsilon \\int_{-\\delta}^{\\delta} |\\xi| \\, d\\xi$$\n$$\\sigma = c \\epsilon (\\delta^2) = (c \\delta^2) \\epsilon$$\n将此与胡克定律 $\\sigma = E \\epsilon$ 进行比较，我们再次发现等效模量为 $E = c \\delta^2$。能量法和应力法得到的结果一致，证实了推导的正确性。", "answer": "$$\n\\boxed{c \\delta^{2}}\n$$", "id": "2667613"}, {"introduction": "理论的最终检验和应用往往在计算中完成。本练习将带你从理论走向实践，要求你为一个二维周期性问题实现一个常态基近场动力学模型的离散化，并进行网格收敛性研究 [@problem_id:2667634]。通过编写代码并对一个“制造解”进行数值测试，你不仅能深刻理解近场动力学积分算子的离散形式，还能掌握验证计算模型准确性的核心方法，这是进行科学研究不可或缺的技能。", "problem": "您将实现并测试一个普通基于状态的近场动力学（OSB-PD）离散化方法在周期性方形域上的网格收敛性，该方法应用于一个光滑的人造二维位移场。其目的是，在保持非局部相互作用域固定的同时，随着网格的加密，量化离散近场动力学内力算子的观测精度阶。\n\n数学设定如下。考虑二维周期性单位环面，即一个带有周期性边界条件的方形域，记为点集 $\\{(x,y): x \\in [0,1), y \\in [0,1)\\}`。令维度为 $d=2$，非局部作用域为一个固定标量 $\\delta \\in (0,1/2)$。人造位移场被规定为一个光滑的周期函数\n$$\n\\mathbf{u}(x,y) = \\begin{bmatrix}\n\\sin(2\\pi x) + 0.25 \\cos(2\\pi y) \\\\\n0.5 \\sin(2\\pi y) - 0.3 \\cos(2\\pi x)\n\\end{bmatrix}.\n$$\n您将实现线性化普通基于状态的近场动力学实体模型，其影响函数为均匀函数，即当 $r \\le \\delta$ 时 $\\omega(r)=1$，否则 $\\omega(r)=0$。模型参数包括体积模量 $\\kappa>0$ 和剪切模量 $\\mu>0$。其标准状态变量如下：\n- 加权体积矩为\n$$\nm = \\int_{B_\\delta(\\mathbf{x})} \\omega(\\lVert \\boldsymbol{\\xi} \\rVert)\\, \\lVert \\boldsymbol{\\xi} \\rVert^2 \\,\\mathrm{d}V' = \\frac{\\pi}{2}\\,\\delta^4,\n$$\n在均匀周期性设定中，该值为常数。\n- 点 $\\mathbf{x}$ 处的膨胀率为\n$$\n\\theta(\\mathbf{x}) = \\frac{d}{m} \\int_{B_\\delta(\\mathbf{x})} \\omega(\\lVert \\boldsymbol{\\xi} \\rVert)\\, \\left(\\mathbf{u}(\\mathbf{x}+\\boldsymbol{\\xi}) - \\mathbf{u}(\\mathbf{x})\\right)\\cdot \\mathbf{e} \\, \\lVert \\boldsymbol{\\xi} \\rVert \\,\\mathrm{d}V',\n$$\n其中 $\\boldsymbol{\\xi}=\\mathbf{x}'-\\mathbf{x}$，$\\mathbf{e}=\\boldsymbol{\\xi}/\\lVert \\boldsymbol{\\xi} \\rVert$，且 $d=2$。\n- $(\\mathbf{x},\\boldsymbol{\\xi})$ 处的偏伸长状态为\n$$\ne^d(\\mathbf{x},\\boldsymbol{\\xi}) = \\left(\\mathbf{u}(\\mathbf{x}+\\boldsymbol{\\xi}) - \\mathbf{u}(\\mathbf{x})\\right)\\cdot \\mathbf{e} - \\frac{\\theta(\\mathbf{x})}{d}\\,\\lVert \\boldsymbol{\\xi} \\rVert.\n$$\n- 沿键方向 $\\mathbf{e}$ 的成对力密度建模为\n$$\nt(\\mathbf{x},\\boldsymbol{\\xi}) = \\omega(\\lVert \\boldsymbol{\\xi} \\rVert)\\,\\left[\\frac{\\kappa}{m}\\,\\frac{\\theta(\\mathbf{x})+\\theta(\\mathbf{x}+\\boldsymbol{\\xi})}{2}\\,\\lVert \\boldsymbol{\\xi} \\rVert + \\frac{2\\mu}{m}\\,\\frac{e^d(\\mathbf{x},\\boldsymbol{\\xi}) + e^d(\\mathbf{x}+\\boldsymbol{\\xi},-\\boldsymbol{\\xi})}{2} \\right]\\, \\mathbf{e}.\n$$\n- 内力密度是作用域上的反对称交换，\n$$\n\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x}) = \\int_{B_\\delta(\\mathbf{x})} \\left[t(\\mathbf{x},\\boldsymbol{\\xi}) - t(\\mathbf{x}+\\boldsymbol{\\xi},-\\boldsymbol{\\xi})\\right]\\,\\mathrm{d}V'.\n$$\n\n您将使用一个包含 $N \\times N$ 个节点的均匀网格对周期性单位正方形进行离散化，网格间距为 $h=1/N$，每个节点的控制体积为 $V=h^2$，并使用周期性环绕，通过对距离 $\\delta$ 内的邻近节点进行黎曼求和来近似作用域积分：\n- 节点 $\\mathbf{x}_{ij}$ 处的离散膨胀率为\n$$\n\\theta_{ij} = \\frac{d}{m}\\,\\sum_{(p,q)\\in \\mathcal{N}} \\left(\\mathbf{u}_{i+p,j+q}-\\mathbf{u}_{ij}\\right)\\cdot \\mathbf{e}_{pq}\\, r_{pq}\\, V,\n$$\n其中 $\\mathcal{N}=\\{(p,q): r_{pq}=\\lVert (ph,qh)\\rVert \\le \\delta,\\,(p,q)\\neq(0,0)\\}$，$\\mathbf{e}_{pq}=(ph,qh)/r_{pq}$，且对 $\\mathbf{u}_{i+p,j+q}$ 使用周期性索引。\n- 节点 $\\mathbf{x}_{ij}$ 处的离散内力为\n$$\n\\mathbf{f}_{\\mathrm{int},ij} = \\sum_{(p,q)\\in \\mathcal{N}} \\omega(r_{pq})\\left[\\frac{\\kappa}{m}\\left(\\theta_{ij}+\\theta_{i+p,j+q}\\right) r_{pq} + \\frac{2\\mu}{m}\\left(e^d_{ij,pq} + e^d_{i+p,j+q,-p,-q}\\right) \\right]\\mathbf{e}_{pq}\\, V,\n$$\n其中\n$$\ne^d_{ij,pq} = \\left(\\mathbf{u}_{i+p,j+q}-\\mathbf{u}_{ij}\\right)\\cdot \\mathbf{e}_{pq} - \\frac{\\theta_{ij}}{d}\\, r_{pq}.\n$$\n\n您将对应用于同一个人造场 $\\mathbf{u}(\\cdot)$ 的离散算子 $\\mathbf{f}_{\\mathrm{int}}^N(\\cdot)$ 进行自收敛（网格加密）研究。对于细网格尺寸是粗网格尺寸整数倍的两个网格，比较它们在共同的粗网格节点上的离散内力。具体来说，对于尺寸为 $N_1$、$N_2=2N_1$ 和 $N_3=2N_2$ 的连续网格，定义限制在粗网格节点上的两个离散力场之差的离散 $L^2$ 范数：\n$$\n\\Delta_{12} = \\left(\\sum_{i,j} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_1}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_1^2 \\right)^{1/2},\n\\quad\n\\Delta_{23} = \\left(\\sum_{i,j} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_3}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_2^2 \\right)^{1/2},\n$$\n其中 $h_k=1/N_k$，且记号 $\\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij})$ 指的是通过在每个方向上选取每隔一个节点，将细网格上的值限制到粗网格节点上得到的值。假设渐近一致性，观测到的精度阶 $p$ 可通过下式估算\n$$\np = \\frac{\\log(\\Delta_{12}/\\Delta_{23})}{\\log(2)}.\n$$\n\n实现一个程序，该程序能够：\n- 对每个网格，使用固定的作用域 $\\delta$ 构建一次邻域集 $\\mathcal{N}$，\n- 在每个网格上，针对人造场 $\\mathbf{u}$ 计算 $\\theta$ 和 $\\mathbf{f}_{\\mathrm{int}}$，\n- 如上文所述计算 $\\Delta_{12}$ 和 $\\Delta_{23}$，\n- 对下面的每个测试用例，返回观测到的阶数 $p$。\n\n在整个计算过程中使用无量纲量；不需要物理单位。由于人造场中定义了三角函数，角度以弧度为单位。\n\n测试套件。对于以下每个参数集 $(\\kappa,\\mu,\\delta,[N_1,N_2,N_3])$，使用上述定义计算观测到的阶数 $p$。参数如下：\n- 用例 1：$(\\kappa,\\mu,\\delta,[N_1,N_2,N_3]) = (2.0, 1.0, 0.2, [16, 32, 64])$。\n- 用例 2：$(\\kappa,\\mu,\\delta,[N_1,N_2,N_3]) = (2.0, 1.0, 0.2, [12, 24, 48])$。\n- 用例 3：$(\\kappa,\\mu,\\delta,[N_1,N_2,N_3]) = (5.0, 0.8, 0.15, [20, 40, 80])$。\n\n最终输出格式。您的程序应生成单行输出，其中包含三个观测到的精度阶的结果，结果为逗号分隔的列表，并用方括号括起，每个数字均以标准浮点表示法打印（例如 $[p_1,p_2,p_3]$）。", "solution": "该问题要求在一个周期性单位正方形上，对一个二维普通基于状态的近场动力学（OSB-PD）模型实施网格收敛性研究。其目标是数值确定离散内力算子的精度阶。\n\n### 1. 问题验证\n对所提供的问题陈述进行严格验证。\n\n**提取的已知条件：**\n- **域**：周期性单位正方形，$\\mathbf{x}=(x,y) \\in [0,1) \\times [0,1)$。\n- **维度**：$d=2$。\n- **作用域**：$\\delta$，一个固定标量。\n- **位移场**：一个光滑的、周期性的人造解 $\\mathbf{u}(x,y) = [\\sin(2\\pi x) + 0.25 \\cos(2\\pi y), 0.5 \\sin(2\\pi y) - 0.3 \\cos(2\\pi x)]^T$。\n- **材料模型**：线性化 OSB-PD，具有体积模量 $\\kappa$ 和剪切模量 $\\mu$。\n- **影响函数**：当 $r \\le \\delta$ 时 $\\omega(r)=1$，否则为 $0$。\n- **关键定义**：\n    - 加权体积矩：$m = \\frac{\\pi}{2}\\delta^4$。\n    - 膨胀率 $\\theta(\\mathbf{x})$。\n    - 偏伸长状态 $e^d(\\mathbf{x}, \\boldsymbol{\\xi})$。\n    - 成对力密度 $t(\\mathbf{x}, \\boldsymbol{\\xi})$。\n    - 内力密度 $\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x})$。\n- **离散化**：均匀 $N \\times N$ 网格，间距 $h=1/N$，体积 $V=h^2$。积分通过对 $\\delta$ 范围内的邻居进行黎曼求和来近似，并采用周期性环绕。\n- **收敛性分析**：\n    - 网格加密序列：$N_1, N_2=2N_1, N_3=2N_2$。\n    - 误差度量：在连续网格上计算的力场之差的离散 $L^2$ 范数，限制在共同节点上。为此定义了 $\\Delta_{12}$ 和 $\\Delta_{23}$。\n    - 精度阶公式：$p = \\log(\\Delta_{12}/\\Delta_{23}) / \\log(2)$。\n- **测试用例**：提供了三组 $(\\kappa, \\mu, \\delta, [N_1, N_2, N_3])$。\n\n**验证结论：**\n该问题是**有效的**。\n- 它在已建立的近场动力学理论和标准数值分析实践（人造解、网格收敛性）方面具有**科学依据**。\n- 其表述是**适定的**；它涉及对一个离散算子的直接评估，这是一个确定性计算。\n- 描述是**客观的**，使用了精确的数学语言。\n- 所提供的方程，包括对称化 OSB-PD 模型和离散化方案，是**内部一致的**。问题中定义的内力 $\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x}) = \\int_{B_\\delta(\\mathbf{x})} \\left[t(\\mathbf{x},\\boldsymbol{\\xi}) - t(\\mathbf{x}+\\boldsymbol{\\xi},-\\boldsymbol{\\xi})\\right]\\,\\mathrm{d}V'$ 利用了成对作用力的反对称交换。由于本问题中定义的力密度向量 $t(\\mathbf{x}, \\boldsymbol{\\xi})$ 满足反对称关系 $t(\\mathbf{x}+\\boldsymbol{\\xi}, -\\boldsymbol{\\xi}) = -t(\\mathbf{x}, \\boldsymbol{\\xi})$，内力可简化为 $\\mathbf{f}_{\\mathrm{int}}(\\mathbf{x}) = \\int_{B_\\delta(\\mathbf{x})} 2t(\\mathbf{x},\\boldsymbol{\\xi})\\,\\mathrm{d}V'$。离散公式是后一个积分的黎曼和近似。\n- 问题是**自洽的**，并提供了所有必要信息以供实现。\n- 所需的计算对于指定的网格尺寸是**可行的**。\n\n该问题是计算力学中一个标准的、非平凡的练习，需要仔细实现近场动力学算子和数值分析程序。\n\n### 2. 求解方法\n\n解决方案涉及开发一个程序来计算给定测试用例的观测精度阶 $p$。每个用例的总体流程如下：\n1. 对于序列 $[N_1, N_2, N_3]$ 中的每个网格分辨率 $N_k$，计算离散内力场 $\\mathbf{f}_{\\mathrm{int}}^{N_k}$。\n2. 使用计算出的力场来计算误差范数 $\\Delta_{12}$ 和 $\\Delta_{23}$。\n3. 计算观测到的精度阶 $p$。\n\n**A. 计算内力场**\n\n对于一个尺寸为 $N \\times N$ 的给定网格，执行以下步骤：\n\n1.  **网格与参数**：区域用 $N \\times N$ 个节点进行离散。网格间距为 $h=1/N$，每个节点的控制体积为 $V=h^2$。与材料相关的常数——加权体积矩为 $m = \\frac{\\pi}{2}\\delta^4$。维度为 $d=2$。\n\n2.  **邻居识别**：对于位于原点的参考节点，构建一个邻居列表。它包含所有整数网格索引为 $(p,q)$ 的节点，其距离 $r_{pq} = \\sqrt{(ph)^2 + (qh)^2}$ 小于或等于作用域 $\\delta$，不包括平凡邻居 $(0,0)$。对于每个邻居，存储其相对索引 $(p,q)$、距离 $r_{pq}$ 和单位方向向量 $\\mathbf{e}_{pq} = (ph, qh)/r_{pq}$。由于是均匀网格和周期性域，此列表对于给定网格上的所有节点都是恒定的。\n\n3.  **位移场评估**：在网格的每个节点 $\\mathbf{x}_{ij}$ 处评估人造位移场 $\\mathbf{u}(\\mathbf{x})$，得到一个离散场 $\\mathbf{u}_{ij}$。\n\n4.  **膨胀率场计算**：计算离散膨胀率场 $\\theta_{ij}$。这需要遍历预先计算的列表中的所有邻居 $(p,q)$。对于每个邻居，使用周期性环绕索引计算位移差 $(\\mathbf{u}_{i+p, j+q} - \\mathbf{u}_{ij})$。对膨胀率和的贡献是 $(\\mathbf{u}_{i+p, j+q} - \\mathbf{u}_{ij}) \\cdot \\mathbf{e}_{pq} \\, r_{pq} \\, V$。对所有邻居求和后，结果乘以 $d/m$。\n\n5.  **内力场计算**：接下来计算离散内力场 $\\mathbf{f}_{\\mathrm{int},ij}$。此计算遍历所有邻居，使用已知的场 $\\mathbf{u}_{ij}$ 和 $\\theta_{ij}$，并根据问题中给出的离散内力公式计算每个键的贡献。所有场操作，如邻居值查找（$\\theta_{i+p,j+q}$），都使用周期性环绕处理。\n\n**B. 计算精度阶**\n\n一旦计算出力场 $\\mathbf{f}_{\\mathrm{int}}^{N_1}$、$\\mathbf{f}_{\\mathrm{int}}^{N_2}$ 和 $\\mathbf{f}_{\\mathrm{int}}^{N_3}$：\n\n1.  **误差范数 $\\Delta_{12}$**：将 $N_2$ 网格上的力场 $\\mathbf{f}_{\\mathrm{int}}^{N_2}$ 通过在每个方向上选择每隔一个节点的方式下采样到 $N_1$ 网格。计算 $\\mathbf{f}_{\\mathrm{int}}^{N_1}$ 与此下采样场之间的差值。然后计算该差值向量场的离散 $L^2$ 范数：\n    $$ \\Delta_{12} = \\left(\\sum_{i,j=0}^{N_1-1} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_1}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_1^2 \\right)^{1/2} $$\n\n2.  **误差范数 $\\Delta_{23}$**：对 $N_2$ 和 $N_3$ 网格应用类似的过程。将力场 $\\mathbf{f}_{\\mathrm{int}}^{N_3}$ 下采样到 $N_2$ 网格。计算 $\\mathbf{f}_{\\mathrm{int}}^{N_2}$ 与下采样的 $\\mathbf{f}_{\\mathrm{int}}^{N_3}$ 之间差值的 $L^2$ 范数：\n    $$ \\Delta_{23} = \\left(\\sum_{i,j=0}^{N_2-1} \\left\\lVert \\mathbf{f}_{\\mathrm{int}}^{N_2}(\\mathbf{x}_{ij}) - \\mathbf{f}_{\\mathrm{int}}^{N_3}(\\mathbf{x}_{ij})\\right\\rVert^2\\, h_2^2 \\right)^{1/2} $$\n\n3.  **精度阶 $p$**：最后，假设误差行为为 $E(h) \\approx C h^p$，使用从Richardson外推法导出的标准公式计算观测到的精度阶：\n    $$ p = \\frac{\\log(\\Delta_{12} / \\Delta_{23})}{\\log(2)} $$\n\n对问题陈述中指定的三个测试用例中的每一个重复此完整过程。对于这种光滑人造解的离散化，预期的理论收敛阶为 $p=2$，这可作为对实现正确性的验证。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_force_field(kappa, mu, delta, N):\n    \"\"\"\n    Computes the discrete OSB-PD internal force field for a given grid.\n    \"\"\"\n    d = 2.0\n    m = (np.pi / 2.0) * delta**4\n    h = 1.0 / N\n    V = h**2\n\n    # 1. Grid and Neighbors\n    # 'xy' indexing: x varies along axis 1, y varies along axis 0.\n    coords = np.linspace(0, 1, N, endpoint=False)\n    x, y = np.meshgrid(coords, coords)\n\n    neighbors = []\n    p_max = int(np.ceil(delta / h))\n    for p in range(-p_max, p_max + 1):\n        for q in range(-p_max, p_max + 1):\n            if p == 0 and q == 0:\n                continue\n            \n            r_sq = (p*h)**2 + (q*h)**2\n            if r_sq <= delta**2:\n                r = np.sqrt(r_sq)\n                # Handle r=0 case to avoid division by zero, though p,q!=0 here.\n                e_vec = np.array([p*h, q*h]) / r if r > 0 else np.zeros(2)\n                # (p,q) are grid index offsets for (x, y) respectively\n                neighbors.append({'p': p, 'q': q, 'r': r, 'e': e_vec})\n\n    # 2. Manufactured displacement field u(x,y)\n    u_x = np.sin(2 * np.pi * x) + 0.25 * np.cos(2 * np.pi * y)\n    u_y = 0.5 * np.sin(2 * np.pi * y) - 0.3 * np.cos(2 * np.pi * x)\n    u_grid = np.stack((u_x, u_y), axis=-1)\n\n    # 3. Dilatation field theta\n    theta_grid = np.zeros((N, N))\n    for neighbor in neighbors:\n        p, q, r, e = neighbor['p'], neighbor['q'], neighbor['r'], neighbor['e']\n        \n        # Roll axis is (0,1) for (y,x) from meshgrid convention\n        # A neighbor at relative grid index (p,q) corresponds to a shift of\n        # q in axis 0 (y) and p in axis 1 (x). We roll backwards.\n        u_neighbor = np.roll(u_grid, shift=(-q, -p), axis=(0, 1))\n        delta_u = u_neighbor - u_grid\n        extension = np.einsum('ijc,c->ij', delta_u, e)\n        theta_grid += extension * r\n    \n    theta_grid *= (d / m) * V\n\n    # 4. Internal force field f_int using the simplified formula derived in the solution text\n    f_int_grid = np.zeros((N, N, 2))\n    for neighbor in neighbors:\n        p, q, r, e = neighbor['p'], neighbor['q'], neighbor['r'], neighbor['e']\n\n        u_neighbor = np.roll(u_grid, shift=(-q, -p), axis=(0, 1))\n        theta_neighbor = np.roll(theta_grid, shift=(-q, -p), axis=(0, 1))\n        \n        delta_u = u_neighbor - u_grid\n        theta_sum = theta_grid + theta_neighbor\n        extension = np.einsum('ijc,c->ij', delta_u, e)\n\n        scalar_part = ((kappa - mu) * r * theta_sum + 4 * mu * extension) / m\n        \n        f_int_grid += scalar_part[:, :, np.newaxis] * e * V\n        \n    return f_int_grid\n\ndef calculate_order_of_accuracy(kappa, mu, delta, N_values):\n    \"\"\"\n    Calculates the observed order of accuracy for a single test case.\n    \"\"\"\n    force_fields = []\n    for N in N_values:\n        f_int = compute_force_field(kappa, mu, delta, N)\n        force_fields.append(f_int)\n    \n    f1, f2, f3 = force_fields\n    N1, N2, _ = N_values\n    h1, h2 = 1.0/N1, 1.0/N2\n\n    # Subsample finer grid forces to coarser grids\n    # f2 grid (N2xN2) is subsampled to f1 grid (N1xN1)\n    f2_sub = f2[::2, ::2, :]\n    # f3 grid (N3xN3) is subsampled to f2 grid (N2xN2)\n    f3_sub = f3[::2, ::2, :]\n    \n    # Calculate L2 norm of difference Delta_{12}\n    diff_12 = f1 - f2_sub\n    norm_sq_12 = np.sum(np.linalg.norm(diff_12, axis=2)**2)\n    Delta_12 = np.sqrt(norm_sq_12 * h1**2)\n\n    # Calculate L2 norm of difference Delta_{23}\n    diff_23 = f2 - f3_sub\n    norm_sq_23 = np.sum(np.linalg.norm(diff_23, axis=2)**2)\n    Delta_23 = np.sqrt(norm_sq_23 * h2**2)\n    \n    # Handle potential division by zero\n    if Delta_23 == 0 or Delta_12 == 0:\n        return np.nan\n\n    p = np.log(Delta_12 / Delta_23) / np.log(2)\n    return p\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (2.0, 1.0, 0.2, [16, 32, 64]),\n        (2.0, 1.0, 0.2, [12, 24, 48]),\n        (5.0, 0.8, 0.15, [20, 40, 80]),\n    ]\n\n    results = []\n    for case in test_cases:\n        kappa, mu, delta, N_values = case\n        p = calculate_order_of_accuracy(kappa, mu, delta, N_values)\n        results.append(p)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2667634"}]}