{"hands_on_practices": [{"introduction": "要真正掌握非局部弹性理论，我们必须亲见其效。第一个实践将探索非局部性最基本的后果之一：波色散。通过推导纵波的相速度和群速度，您将直接观察到材料的内禀长度尺度 $\\ell$ 如何引入尺寸依赖行为，并修正经典理论在高频下的非物理预测 [@problem_id:2665404]。", "problem": "一根横截面积均匀的细长棱柱形杆，沿其轴线进行小振幅的一维纵向运动。设位移场为 $u(x,t)$，质量密度和杨氏模量分别为 $\\rho$ 和 $E$。一维空间中的线性动量平衡方程为 $\\rho\\,\\partial^{2}u/\\partial t^{2}=\\partial\\sigma/\\partial x$，无穷小应变为 $\\varepsilon=\\partial u/\\partial x$。该材料遵循 Eringen 非局部弹性定律的微分形式，\n$(1-\\ell^{2}\\,\\partial^{2}/\\partial x^{2})\\,\\sigma(x,t)=E\\,\\varepsilon(x,t)$，\n其中 $\\ell > 0$ 是内禀材料长度尺度（假设为常数）。\n\n考虑一根无限长杆，并采用形式为 $u(x,t)=\\Re\\{U\\,\\exp[i(kx-\\omega t)]\\}$ 的简谐平面波解，其中波数 $k>0$ 为实数，圆频率 $\\omega>0$。定义经典杆波速度 $c_{0}=\\sqrt{E/\\rho}$、相速度 $c_{p}(k)=\\omega(k)/k$ 和群速度 $c_{g}(k)=d\\omega/dk$。\n\n仅使用上述的控制方程和定义，推导 Eringen 非局部弹性模型所蕴含的色散关系 $\\omega(k)$，并由此计算出相速度 $c_{p}(k)$ 和群速度 $c_{g}(k)$ 关于 $c_{0}$、$\\ell$ 和 $k$ 的符号表达式。然后，讨论当 $k\\to 0^{+}$ 和 $k\\to\\infty$ 时，$c_{p}(k)$ 和 $c_{g}(k)$ 的极限值，并指出其主阶标度关系。您无需生成数值图像；相反，只需给出能够确定其定性形状的符号化特征描述。\n\n将您的最终结果以数对 $\\big[c_{p}(k),\\,c_{g}(k)\\big]$ 的形式，用关于 $c_{0}$、$\\ell$ 和 $k$ 的闭式解析表达式报告。最终报告的数对中不应包含单位。无需进行四舍五入。", "solution": "问题陈述已经过审查，确认有效。这是一个连续介质力学中的适定问题，其基础是 Eringen 已建立的非局部弹性理论。所有必要的控制方程和定义均已提供，不存在矛盾或歧义。我们开始进行推导。\n\n目标是推导由 Eringen 非局部模型控制的无限长杆中纵波的色散关系、相速度和群速度。\n\n控制方程如下：\n1.  线性动量平衡：$\\rho\\,\\frac{\\partial^{2}u}{\\partial t^{2}}=\\frac{\\partial\\sigma}{\\partial x}$\n2.  运动学关系（无穷小应变）：$\\varepsilon=\\frac{\\partial u}{\\partial x}$\n3.  Eringen 非局部本构关系：$(1-\\ell^{2}\\,\\frac{\\partial^{2}}{\\partial x^{2}})\\,\\sigma(x,t)=E\\,\\varepsilon(x,t)$\n\n我们考虑位移场 $u(x,t)$ 的简谐平面波解，形式为：\n$$u(x,t) = U\\,\\exp[i(kx-\\omega t)]$$\n其中 $U$ 是复振幅，$k>0$ 是波数，$\\omega>0$ 是圆频率。对于线性方程，我们可以使用这种复数形式进行计算，并在必要时最后取实部。假设应力场 $\\sigma(x,t)$ 具有相似的形式：\n$$\\sigma(x,t) = \\Sigma\\,\\exp[i(kx-\\omega t)]$$\n其中 $\\Sigma$ 是复应力幅值。\n\n首先，我们将这些波形代入控制方程，以获得振幅 $U$ 和 $\\Sigma$ 之间的代数关系。\n\n所需的偏导数是：\n$$\\frac{\\partial u}{\\partial x} = iku, \\quad \\frac{\\partial^{2}u}{\\partial t^{2}} = (-\\mathrm{i}\\omega)^{2}u = -\\omega^{2}u$$\n$$\\frac{\\partial \\sigma}{\\partial x} = ik\\sigma, \\quad \\frac{\\partial^{2} \\sigma}{\\partial x^{2}} = (ik)^{2}\\sigma = -k^{2}\\sigma$$\n\n将这些代入动量平衡方程：\n$$\\rho(-\\omega^{2}u) = ik\\sigma$$\n$$\\rho(-\\omega^{2}U\\exp[i(kx-\\omega t)]) = ik\\Sigma\\exp[i(kx-\\omega t)]$$\n为得到非平凡解，我们需要振幅之间满足以下关系：\n$$-\\rho\\omega^{2}U = ik\\Sigma$$\n$$\\Sigma = \\frac{-\\rho\\omega^{2}}{ik}U = \\frac{i\\rho\\omega^{2}}{k}U \\quad (*)$$\n\n接下来，将波形代入应变定义和本构关系。应变为：\n$$\\varepsilon = \\frac{\\partial u}{\\partial x} = iku = ikU\\exp[i(kx-\\omega t)]$$\n现在代入本构关系：\n$$(1-\\ell^{2}(-k^{2}))\\sigma = E\\varepsilon$$\n$$(1+\\ell^{2}k^{2})\\sigma = E\\varepsilon$$\n关联振幅可得：\n$$(1+\\ell^{2}k^{2})\\Sigma = E(ikU)$$\n$$\\Sigma = \\frac{ikE}{1+\\ell^{2}k^{2}}U \\quad (**)$$\n\n为求出色散关系，我们通过令方程 $(*)$ 和 $(**)$ 中两个关于 $\\Sigma$ 的表达式相等，来消去 $\\Sigma$ 和 $U$：\n$$\\frac{i\\rho\\omega^{2}}{k}U = \\frac{ikE}{1+\\ell^{2}k^{2}}U$$\n假设波存在 ($U \\neq 0$)，我们可以两边同除以 $iU$：\n$$\\frac{\\rho\\omega^{2}}{k} = \\frac{kE}{1+\\ell^{2}k^{2}}$$\n求解 $\\omega^{2}$：\n$$\\omega^{2} = \\frac{E}{\\rho}\\frac{k^{2}}{1+\\ell^{2}k^{2}}$$\n使用经典杆波速度的定义 $c_{0} = \\sqrt{E/\\rho}$，上式变为：\n$$\\omega^{2}(k) = \\frac{c_{0}^{2}k^{2}}{1+\\ell^{2}k^{2}}$$\n由于频率 $\\omega$ 必须为正，我们取正平方根，得到色散关系：\n$$\\omega(k) = \\frac{c_{0}k}{\\sqrt{1+\\ell^{2}k^{2}}}$$\n这个关系将时间频率 $\\omega$ 与空间频率（波数）$k$ 联系起来。\n\n现在我们计算相速度 $c_{p}(k)$ 和群速度 $c_{g}(k)$。\n\n相速度定义为 $c_{p}(k)=\\omega(k)/k$：\n$$c_{p}(k) = \\frac{1}{k}\\left(\\frac{c_{0}k}{\\sqrt{1+\\ell^{2}k^{2}}}\\right) = \\frac{c_{0}}{\\sqrt{1+\\ell^{2}k^{2}}}$$\n\n群速度定义为 $c_{g}(k)=d\\omega/dk$。我们对 $\\omega(k)$ 的表达式应用求导的商法则：\n$$c_{g}(k) = \\frac{d}{dk}\\left(\\frac{c_{0}k}{(1+\\ell^{2}k^{2})^{\\frac{1}{2}}}\\right)$$\n$$c_{g}(k) = \\frac{c_{0}(1+\\ell^{2}k^{2})^{\\frac{1}{2}} - c_{0}k \\cdot \\frac{1}{2}(1+\\ell^{2}k^{2})^{-\\frac{1}{2}}(2\\ell^{2}k)}{1+\\ell^{2}k^{2}}$$\n$$c_{g}(k) = \\frac{c_{0}(1+\\ell^{2}k^{2}) - c_{0}\\ell^{2}k^{2}}{(1+\\ell^{2}k^{2})^{\\frac{3}{2}}}$$\n$$c_{g}(k) = \\frac{c_{0} + c_{0}\\ell^{2}k^{2} - c_{0}\\ell^{2}k^{2}}{(1+\\ell^{2}k^{2})^{\\frac{3}{2}}} = \\frac{c_{0}}{(1+\\ell^{2}k^{2})^{\\frac{3}{2}}}$$\n\n最后，我们分析这些速度的极限行为。\n\n对于长波极限 ($k \\to 0^{+}$)：\n$$\\lim_{k \\to 0^{+}} c_{p}(k) = \\lim_{k \\to 0^{+}} \\frac{c_{0}}{\\sqrt{1+\\ell^{2}k^{2}}} = c_{0}$$\n$$\\lim_{k \\to 0^{+}} c_{g}(k) = \\lim_{k \\to 0^{+}} \\frac{c_{0}}{(1+\\ell^{2}k^{2})^{\\frac{3}{2}}} = c_{0}$$\n在此极限下，两种速度都趋近于经典波速 $c_{0}$。对于远大于内禀长度尺度 $\\ell$ 的波长，该材料表现得像一个局部弹性固体。\n\n对于短波极限 ($k \\to \\infty$)：\n$$\\lim_{k \\to \\infty} c_{p}(k) = \\lim_{k \\to \\infty} \\frac{c_{0}}{\\sqrt{1+\\ell^{2}k^{2}}} \\sim \\lim_{k \\to \\infty} \\frac{c_{0}}{\\ell k} = 0$$\n主阶标度关系为 $c_{p}(k) \\propto k^{-1}$。\n$$\\lim_{k \\to \\infty} c_{g}(k) = \\lim_{k \\to \\infty} \\frac{c_{0}}{(1+\\ell^{2}k^{2})^{\\frac{3}{2}}} \\sim \\lim_{k \\to \\infty} \\frac{c_{0}}{(\\ell k)^{3}} = 0$$\n主阶标度关系为 $c_{g}(k) \\propto k^{-3}$。\n在此极限下，两种速度均趋于零，这表明波长与材料长度尺度 $\\ell$ 相当或更小的波不传播。这是该非局部模型的一个典型特征，通常被称为“应变软化”。\n\n为了进行定性特征描述，我们注意到两种速度关于 $k$ 的导数对于所有 $k>0$ 都严格为负。因此，$c_{p}(k)$ 和 $c_{g}(k)$ 都是单调递减函数，从 $k=0$ 时的最大值 $c_{0}$ 开始，并随着 $k \\to \\infty$ 衰减至 $0$。此外，对于任何 $k>0$，都有 $(1+\\ell^{2}k^{2})^{\\frac{3}{2}} > (1+\\ell^{2}k^{2})^{\\frac{1}{2}}$，这意味着 $c_{g}(k) < c_{p}(k)$。这描述了一种具有反常色散的介质。\n\n所要求的相速度和群速度的表达式为：\n$$c_{p}(k) = \\frac{c_{0}}{\\sqrt{1+\\ell^{2}k^{2}}}$$\n$$c_{g}(k) = \\frac{c_{0}}{(1+\\ell^{2}k^{2})^{\\frac{3}{2}}}$$", "answer": "$$\\boxed{\\left[ \\frac{c_{0}}{\\sqrt{1 + \\ell^{2}k^{2}}}, \\frac{c_{0}}{(1 + \\ell^{2}k^{2})^{\\frac{3}{2}}} \\right]}$$", "id": "2665404"}, {"introduction": "非局部模型虽然功能强大，但也带来了独特的挑战，尤其是在应用于有界结构时。本练习将直面一个著名的“悖论”，该悖论在使用 Eringen 模型的简化微分形式研究悬臂梁时出现。通过分析为何该模型有时无法预测预期的软化效应，您将对积分和微分形式之间的微妙但至关重要的差异，以及边界条件的正确处理方式，建立起批判性的理解 [@problem_id:2665419]。", "problem": "一根长度为 $L$、抗弯刚度为 $E I$ 的直的等截面欧拉-伯努利悬臂梁，其在 $x=0$ 处固支，在 $x=L$ 处自由，并在自由端承受一个向下的横向集中荷载 $P$。在 Eringen 的非局部弹性理论中，弯矩-曲率关系可以写成积分（应变驱动）形式\n$$\nM(x)=E I \\int_{0}^{L} \\alpha\\!\\left(\\lvert x-\\xi\\rvert\\right)\\,\\kappa(\\xi)\\,d\\xi,\n$$\n其中 $\\kappa(x)=w''(x)$ 是曲率，$\\alpha(r)$ 是一个具有内禀长度 $\\ell > 0$ 的归一化衰减核函数。对于指数衰减核函数，在无界域上，该积分关系形式上等价于以下微分替代模型\n$$\n\\left(1-\\ell^{2}\\frac{d^{2}}{dx^{2}}\\right) M(x)=E I\\,\\kappa(x).\n$$\n梁的静力平衡仍然是局部的，表示为 $dV/dx+q(x)=0$ 和 $dM/dx=V$，其中 $q(x)$ 是单位长度上的分布荷载（此处 $q\\equiv 0$），自由端 $x=L$ 处的力学边界条件为 $M(L)=0$（无施加的端弯矩）和 $V(L)=P$。\n\n据报道，对于此问题，微分非局部模型的某些实现方式预测的响应要么与局部解相同，要么甚至出现“刚化”现象，这与通常由非局部性引起的软化效应相矛盾。下列哪个陈述最准确地指出了这一“悖论”的根源，并提出了一种基于以积分形式施加本构关系的自洽修正方法？\n\nA. 当将由平衡方程确定的线性弯矩代入微分替代模型，并且仅施加经典力学边界条件时，非局部效应消失（或出现表观刚化）；因为对于端部受荷的悬臂梁，$M''(x)=0$，替代模型退化为局部曲率，从而消除了非局部的软化效应。一种修正方法是以其积分形式施加本构关系（至少在边界上，最好在整个域内），即从 $M(x)=E I \\int_{0}^{L}\\alpha(\\lvert x-\\xi\\rvert)\\kappa(\\xi)\\,d\\xi$ 求解 $\\kappa$，并使用通过积分形式的非局部弯矩和剪力表达的自然边界条件，这会恢复非局部模型所预测的软化效应。\n\nB. 该悖论的发生是因为非局部性改变了静力平衡；使用 $dM/dx=V$ 是不正确的。修正方法是采用一个修正的平衡方程 $d[(1-\\ell^{2}d^{2}/dx^{2})M]/dx=V$，以使微分替代模型保持自洽并产生软化效应。\n\nC. 该悖论可以通过为微分替代模型补充本构边界条件 $M'(0)=M'(L)=0$ 同时保留 $V(L)=P$ 和 $M(L)=0$ 来解决；对于端部荷载，这组条件是相容的，并能产生非局部的软化响应。\n\nD. 该悖论是指数核函数带来的假象；将其替换为另一个容许的核函数可以消除此问题，而无需改变微分模型中边界条件的施加方式。", "solution": "我们从基本原理出发：静力平衡和本构关系。欧拉-伯努利梁的平衡方程为\n$$\n\\frac{dV}{dx}+q(x)=0,\\qquad \\frac{dM}{dx}=V,\n$$\n其中 $q(x)\\equiv 0$，自由端的力学边界条件为 $M(L)=0$ 和 $V(L)=P$。这些方程仅取决于力和力矩的平衡，不涉及本构关系。因此，对于端部受荷的悬臂梁，直接从平衡方程可得\n$$\nV(x)=P,\\qquad M'(x)=V(x)=P,\\qquad M(x)=P(x-L),\n$$\n从而有\n$$\nM''(x)=0\\quad \\text{for all }x\\in(0,L).\n$$\n\nEringen 弯曲问题的积分本构关系是\n$$\nM(x)=E I \\int_{0}^{L} \\alpha\\!\\left(\\lvert x-\\xi\\rvert\\right)\\,\\kappa(\\xi)\\,d\\xi,\\qquad \\kappa(x)=w''(x).\n$$\n在具有指数核函数的无界域上，这形式上等价于微分替代模型\n$$\n\\left(1-\\ell^{2}\\frac{d^{2}}{dx^{2}}\\right) M(x)=E I\\,\\kappa(x).\n$$\n如果将由平衡方程确定的 $M(x)=P(x-L)$ 与微分替代模型直接结合，则得到\n$$\nE I\\,\\kappa(x)=\\left(1-\\ell^{2}\\frac{d^{2}}{dx^{2}}\\right) M(x)=M(x)-\\ell^{2}M''(x)=M(x),\n$$\n因为 $M''(x)=0$。因此，\n$$\n\\kappa(x)=\\frac{M(x)}{E I},\\quad \\text{与局部关系相同},\n$$\n这得到的恰好是局部梁的挠度。这即是该“悖论”的实质：当对端部受荷悬臂梁的平衡弯矩，不加思考地施加微分非局部替代模型和经典力学边界条件时，其预测的响应与局部响应没有偏差（并且，在其他一些边值问题设置中，可能导致表观刚化）。\n\n为什么会发生这种情况？在有界域上，积分和微分本构关系之间的形式等价性需要额外的、取决于核函数的本构边界条件。对于指数核函数，这些条件的形式为\n$$\nM'(0)=0,\\qquad M'(L)=0,\n$$\n以使得算子 $\\left(1-\\ell^{2}d^{2}/dx^{2}\\right)$ 在有限区间上以与卷积相容的方式可逆。然而，这些本构边界条件与端部受荷悬臂梁的平衡条件不相容，因为平衡条件强制要求 $M'(x)=V(x)=P$（一个非零常数），因此 $M'(0)=M'(L)=P\\neq 0$。因此，对于这种荷载情况，微分替代模型及其应有的本构边界条件无法同时满足；而如果忽略这些本构边界条件，仅使用经典力学边界条件，该替代模型就会如上所示退化为局部关系。这种不相容性精确地指出了该悖论的根源。\n\n一个自洽的修正方法是以积分形式施加本构关系，至少在边界上（常称为“积分施加”），并且最好在整个域内。具体来说，必须将 $\\kappa$ 作为第一类 Fredholm 积分方程的解来确定\n$$\nE I \\int_{0}^{L} \\alpha\\!\\left(\\lvert x-\\xi\\rvert\\right)\\,\\kappa(\\xi)\\,d\\xi = M(x)=P(x-L),\\qquad x\\in[0,L],\n$$\n同时保持经典力学边界条件 $M(L)=0$ 和 $V(L)=M'(L)=P$。在有界域上，卷积算子的逆不再是用于无界介质的简单微分算子 $\\left(1-\\ell^{2}d^{2}/dx^{2}\\right)$；积分方程必须使用截断的核函数来求解。由此得到的曲率 $\\kappa(x)$ 不同于 $M(x)/(E I)$，并被核函数在空间上平滑化；在固支和自由边界附近，$\\alpha$ 的截断改变了平衡，使得曲率分布进行调整以满足积分关系。当对该非局部曲率场积分两次以获得 $w(x)$，并施加固支端的运动学边界条件 $w(0)=0$ 和 $w'(0)=0$ 时，对于 $\\ell/L>0$，其产生的端部挠度比局部模型更大，即预期的非局部软化效应得到恢复。\n\n逐项分析选项：\n\n- 选项A：此选项正确地指出，将平衡弯矩 $M(x)=P(x-L)$ 代入只施加经典力学边界条件的微分替代模型，会导致 $M''(x)=0$，从而 $\\kappa(x)=M(x)/(E I)$，消除了非局部软化效应。它还正确地指出，以积分形式施加本构关系（至少对于自然边界关系，理想情况下在整个域内）可以在有限区间上恢复自洽性，并产生非局部模型预期的软化效应。结论——正确。\n\n- 选项B：此选项声称非局部性改变了平衡方程。在 Eringen 的非局部弹性理论中，线动量和角动量的平衡仍然是经典的；$dV/dx+q=0$ 和 $dM/dx=V$ 保持不变。将平衡方程修改为 $d[(1-\\ell^{2}d^{2}/dx^{2})M]/dx=V$ 是没有依据的，并且会违反基本平衡定律。结论——不正确。\n\n- 选项C：此选项建议在保留 $V(L)=P$ 和 $M(L)=0$ 的同时，增加本构边界条件 $M'(0)=M'(L)=0$。对于端部受荷的悬臂梁，平衡条件强制要求处处有 $M'(x)=V(x)=P$，因此 $M'(0)=M'(L)=P\\neq 0$，这使得该条件集不相容。因此，它不能解决此荷载情况下的悖论。结论——不正确。\n\n- 选项D：此选项将悖论完全归因于指数核函数，并建议通过更换核函数来消除，而不改变边界施加方式。该问题源于在有界域上对微分替代模型和边界施加方式的误用，并非唯一地由指数核函数的选择引起。简单地更换核函数而不解决边界施加问题，通常不能消除该悖论。结论——不正确。", "answer": "$$\\boxed{A}$$", "id": "2665419"}, {"introduction": "从理论走向实践需要高效的计算方法。非局部弹性的积分形式涉及一个卷积运算，其直接计算成本可能非常高昂。这最后一个实践将指导您实现并比较直接求和与高效的基于快速傅里叶变换（FFT）的算法，从而掌握现代计算非局部力学中使用的标准技术，并体会其带来的巨大计算速度提升 [@problem_id:2665428]。", "problem": "考虑一个长度为 $L$、周期也为 $L$ 的周期性杆上的一维 Eringen 型非局部积分本构关系，该杆被离散为包含 $N$ 个等距节点的网格。令 $x_j = j\\Delta x$，其中 $\\Delta x = L/N$，对于 $j \\in \\{0,1,\\dots,N-1\\}$。用 $\\varepsilon(x)$ 表示局部应变，用 $\\sigma(x)$ 表示非局部应力。非局部本构律的标量形式为\n$$\n\\sigma(x) = \\int_0^L \\alpha_p(x-y)\\,E\\,\\varepsilon(y)\\,dy,\n$$\n其中 $E$ 是弹性模量（一个正常数），$\\alpha_p$ 是周期性非局部衰减核。在周期域上，对应于内禀长度为 $\\ell > 0$ 的经典 Helmholtz 型 Eringen 核的傅里叶级数乘子是\n$$\n\\widehat{\\alpha}(k) = \\frac{1}{1 + (\\ell k)^2},\n$$\n使得对于每个傅里叶波数 $k$，都有 $\\widehat{\\sigma}(k) = \\widehat{\\alpha}(k)\\,E\\,\\widehat{\\varepsilon}(k)$。\n\n在周期性网格上使用梯形法则对该积分进行离散化。定义离散序列 $\\varepsilon_j = \\varepsilon(x_j)$、$\\sigma_j \\approx \\sigma(x_j)$ 以及离散周期核样本 $b_j$，使得\n$$\n\\sigma_j \\approx \\sum_{m=0}^{N-1} b_{(j-m)\\bmod N}\\,\\varepsilon_m \\quad \\text{对于所有 } j \\in \\{0,1,\\dots,N-1\\}。\n$$\n在全文中假设离散傅里叶变换 (DFT) 及其逆变换定义为\n$$\n\\widehat{f}_n = \\sum_{j=0}^{N-1} f_j \\, e^{-i 2\\pi j n/N}, \\qquad f_j = \\frac{1}{N}\\sum_{n=0}^{N-1} \\widehat{f}_n \\, e^{i 2\\pi j n/N},\n$$\n使得循环卷积定理成立：$\\widehat{f\\star g} = \\widehat{f}\\,\\widehat{g}$，其中 $(f\\star g)_j = \\sum_{m=0}^{N-1} g_{(j-m)\\bmod N} f_m$。\n\n你的任务：\n\n$1.$ 从积分形式的非局部定律和周期性梯形法则出发，推导 $\\sigma_j$ 的离散循环卷积形式，并确定在离散波数 $k_n = \\frac{2\\pi}{L}n$（其中 $n \\in \\{0,1,\\dots,N-1\\}$）下，离散核样本 $b_j$ 与谱乘子 $\\widehat{\\alpha}(k_n)$ 之间的精确关系。\n\n$2.$ 仅使用离散傅里叶变换 (DFT) 的卷积定理，推导一个基于快速傅里叶变换 (FFT, Fast Fourier Transform) 的算法，该算法通过以下步骤计算所有 $j$ 对应的 $\\sigma_j$：\n- 计算 $\\varepsilon_j$ 的 DFT，\n- 逐点乘以对应于 Helmholtz 型 Eringen 核的谱乘子，\n- 应用逆 DFT。\n\n明确写出每一步，并确保该算法计算出的离散循环卷积与任务1中的结果相同。\n\n$3.$ 进行运算计数，以比较朴素的直接循环卷积与基于 FFT 的方法。证明直接方法需要大约 $O(N^2)$ 量级的算术运算，而基于 FFT 的方法需要大约 $O(N\\log N)$ 量级的运算。由此推导（忽略常数因子）出近似的理论加速比\n$$\nS(N) \\approx \\frac{N}{\\log_2 N}.\n$$\n\n$4.$ 实现一个程序，对下面的每个测试用例，计算：\n- 通过使用由乘子 $\\widehat{\\alpha}(k_n)$ 隐含的核 $b_j$ 的直接 $O(N^2)$ 循环卷积计算离散非局部应力，\n- 通过基于 FFT 的 $O(N\\log N)$ 方法计算离散非局部应力，\n- 两个结果之间的最大绝对差（一个绝对误差），\n- 上面定义的理论加速比 $S(N)$。\n\n使用以下测试套件，所有角度均以弧度为单位：\n- 测试 A（通用“理想路径”）：$N = 64$, $L = 2\\pi$, $\\ell = 0.3$, 且 $\\varepsilon(x) = \\sin(3x) + 0.5\\cos(5x) + 0.2\\sin(7x)$。\n- 测试 B（趋近于局部极限）：$N = 128$, $L = 2\\pi$, $\\ell = 10^{-6}$, 且 $\\varepsilon(x)$ 与测试 A 相同。\n- 测试 C（非 2 的幂次大小）：$N = 96$, $L = 2\\pi$, $\\ell = 0.5$, 且 $\\varepsilon(x)$ 与测试 A 相同。\n- 测试 D（边界情况，常数应变）：$N = 100$, $L = 2\\pi$, $\\ell = 0.2$, 且 $\\varepsilon(x) \\equiv 3.7$。\n\n必须遵守的实现细节：\n- 在离散波数 $k_n = \\frac{2\\pi}{L} n$ 上使用 $\\widehat{\\alpha}(k_n) = \\frac{1}{1 + (\\ell k_n)^2}$ 构建离散谱乘子。\n- 通过对乘子进行逆 DFT 构建相应的离散核样本 $b_j$，使得直接循环卷积的结果与基于 FFT 的结果匹配。\n- 对于直接方法，通过求和的方式显式计算 $O(N^2)$ 的循环卷积，而不是使用 FFT。\n\n你的程序必须以精确的格式输出单行：\n- 一个列表，其条目按 A、B、C、D 的顺序，在以下两者之间交替出现：\n  - 最大绝对误差（一个浮点数），然后是\n  - 理论加速比 $S(N)$（一个浮点数）。\n因此，输出应为以下形式\n$$\n[\\text{err}_A, S(N_A), \\text{err}_B, S(N_B), \\text{err}_C, S(N_C), \\text{err}_D, S(N_D)]。\n$$\n所有输出都是无量纲的实数。角度单位是弧度。输出中不需要进行物理单位换算。程序必须将输出生成为单行，形式是用方括号括起来的逗号分隔列表。", "solution": "所陈述的问题具有科学依据、是良定的，并且是计算力学和数值分析中的一个客观练习。它包含了推导和实现所需算法的所有必要信息。因此，该问题被认为是有效的。下面提供了完整的解决方案。\n\n弹性模量 $E$ 被给定为一个正常数，但其值未指定。由于它对应力 $\\sigma$ 仅起到一个简单的缩放因子的作用，且问题的重点在于数值算法及其复杂度的比较，我们可以在不失一般性的情况下设置 $E=1$。所有的推导和计算都将在此假设下进行。\n\n**1. 离散卷积形式的推导**\n\n我们从周期域（长度为 $L$）上非局部应力 $\\sigma(x)$ 的一维积分本构关系开始：\n$$\n\\sigma(x) = \\int_0^L \\alpha_p(x-y)\\,E\\,\\varepsilon(y)\\,dy\n$$\n我们在包含 $N$ 个等距节点 $x_j = j\\Delta x$（$j \\in \\{0, 1, \\dots, N-1\\}$，其中 $\\Delta x = L/N$）的网格上对此积分进行离散化。该积分使用周期性梯形法则进行近似。设 $x = x_j$，并注意到积分变量 $y$ 对应于网格点 $y_m = m\\Delta x$：\n$$\n\\sigma(x_j) \\approx \\sum_{m=0}^{N-1} \\left(E \\alpha_p(x_j - y_m)\\right) \\varepsilon(y_m) \\Delta x\n$$\n令 $\\sigma_j \\equiv \\sigma(x_j)$ 和 $\\varepsilon_m \\equiv \\varepsilon(y_m)$。代入网格点定义，$x_j - y_m = (j-m)\\Delta x$：\n$$\n\\sigma_j \\approx \\sum_{m=0}^{N-1} \\left(E \\Delta x \\alpha_p((j-m)\\Delta x)\\right) \\varepsilon_m\n$$\n该表达式是一个离散循环卷积。问题陈述中给出了形式 $\\sigma_j \\approx \\sum_{m=0}^{N-1} b_{(j-m)\\bmod N}\\,\\varepsilon_m$。通过直接比较，我们确定离散核样本 $b_k$ 为：\n$$\nb_k = E \\Delta x \\alpha_p(k \\Delta x) = \\frac{EL}{N} \\alpha_p\\left(\\frac{kL}{N}\\right)\n$$\n现在，我们将离散核 $b_j$ 与谱乘子 $\\widehat{\\alpha}(k_n)$ 联系起来。我们对离散卷积进行离散傅里叶变换 (DFT)。根据所提供的循环卷积定理的定义 $\\widehat{(\\mathbf{b} \\star \\boldsymbol{\\varepsilon})}_n = \\widehat{b}_n \\widehat{\\varepsilon}_n$，我们有：\n$$\n\\widehat{\\sigma}_n = \\widehat{b}_n \\widehat{\\varepsilon}_n\n$$\n其中 $\\widehat{b}_n$ 是序列 $b_j$ 的 DFT。为了求出 $\\widehat{b}_n$，我们可以将 DFT 与连续傅里叶级数系数联系起来。对于函数 $f(x)$，其在波数 $k_n = 2\\pi n/L$ 处的傅里叶级数系数 $\\tilde{c}_n$ 可以通过其 DFT $\\widehat{f}_n$ 近似为 $\\tilde{c}_n(f) \\approx \\frac{1}{N} \\widehat{f}_n$。\n连续谱定律是 $\\widehat{\\sigma}(k) = E \\widehat{\\alpha}(k) \\widehat{\\varepsilon}(k)$。这意味着傅里叶级数系数之间存在一种关系：$\\tilde{c}_n(\\sigma) = E \\widehat{\\alpha}(k_n) \\tilde{c}_n(\\varepsilon)$。\n代入 DFT 近似：\n$$\n\\frac{1}{N} \\widehat{\\sigma}_n \\approx E \\widehat{\\alpha}(k_n) \\left(\\frac{1}{N} \\widehat{\\varepsilon}_n\\right) \\implies \\widehat{\\sigma}_n \\approx E \\widehat{\\alpha}(k_n) \\widehat{\\varepsilon}_n\n$$\n将此与 $\\widehat{\\sigma}_n = \\widehat{b}_n \\widehat{\\varepsilon}_n$ 进行比较，我们建立精确的关系：\n$$\n\\widehat{b}_n = E \\widehat{\\alpha}(k_n)\n$$\n根据题目要求，我们在离散波数 $k_n = \\frac{2\\pi n}{L}$（对于 $n \\in \\{0, 1, \\dots, N-1\\}$）处使用 Helmholtz 型乘子 $\\widehat{\\alpha}(k) = \\frac{1}{1 + (\\ell k)^2}$。设 $E=1$，离散核的谱表示为：\n$$\n\\widehat{b}_n = \\frac{1}{1 + (\\ell k_n)^2} = \\frac{1}{1 + \\left(\\ell \\frac{2\\pi n}{L}\\right)^2}\n$$\n离散核样本 $b_j$ 本身是通过对 $\\widehat{b}_n$ 应用逆离散傅里叶变换 (IDFT) 得到的：\n$$\nb_j = \\text{IDFT}(\\widehat{b})_j = \\frac{1}{N} \\sum_{n=0}^{N-1} \\widehat{b}_n \\, e^{i 2\\pi j n/N}\n$$\n\n**2. 基于 FFT 的算法**\n\n上面推导出的关系 $\\widehat{\\sigma}_n = \\widehat{b}_n \\widehat{\\varepsilon}_n$ 为使用快速傅里叶变换 (FFT) 的高效算法提供了基础。从离散应变 $\\varepsilon_j$ 计算离散应力 $\\sigma_j$ 的过程如下：\n\n1.  **正向变换**：计算离散应变序列 $\\varepsilon_j$ 的 DFT，以获得其谱表示 $\\widehat{\\varepsilon}_n$。这一步可以使用 FFT 算法高效完成。\n    $$\n    \\widehat{\\varepsilon}_n = \\text{DFT}(\\boldsymbol{\\varepsilon})_n = \\sum_{j=0}^{N-1} \\varepsilon_j \\, e^{-i 2\\pi j n/N}\n    $$\n2.  **谱域乘法**：在离散波数 $k_n = \\frac{2\\pi n}{L}$（对于 $n=0, \\dots, N-1$）上构建谱乘子序列 $\\widehat{b}_n$（$E=1$）。\n    $$\n    \\widehat{b}_n = \\frac{1}{1 + (\\ell k_n)^2}\n    $$\n    然后在傅里叶域中执行逐点乘法，以求得应力的谱。\n    $$\n    \\widehat{\\sigma}_n = \\widehat{b}_n \\cdot \\widehat{\\varepsilon}_n\n    $$\n3.  **逆变换**：对得到的应力谱 $\\widehat{\\sigma}_n$ 进行 IDFT，以获得物理域中的离散应力序列 $\\sigma_j$。这一步可以使用逆快速傅里叶变换 (IFFT) 算法高效完成。\n    $$\n    \\sigma_j = \\text{IDFT}(\\widehat{\\boldsymbol{\\sigma}})_j = \\frac{1}{N} \\sum_{n=0}^{N-1} \\widehat{\\sigma}_n \\, e^{i 2\\pi j n/N}\n    $$\n根据卷积定理，此过程在数学上等同于直接循环卷积 $\\sigma_j = \\sum_{m=0}^{N-1} b_{(j-m)\\bmod N}\\,\\varepsilon_m$，其中 $b_j = \\text{IDFT}(\\widehat{b})_j$。基于 FFT 的方法避免了对 $b_j$ 的显式计算和高成本的求和运算。\n\n**3. 复杂度分析与加速比**\n\n我们分析每种方法的算术运算次数。\n\n*   **直接循环卷积**：计算过程为 $\\sigma_j = \\sum_{m=0}^{N-1} b_{(j-m)\\bmod N}\\,\\varepsilon_m$。\n    *   对于 $N$ 个输出点 $\\sigma_j$ 中的每一个，我们都执行一个 $N$ 项的求和。\n    *   和中的每一项都需要一次乘法和一次加法（索引计算是整数运算，通常更快）。\n    *   这导致每个 $\\sigma_j$ 大约需要 $N$ 次乘法和 $N$ 次加法。\n    *   由于必须对所有 $N$ 个 $j$ 值重复此操作，因此浮点运算的总数量级为 $N \\times (2N)$，即 $O(N^2)$。\n\n*   **基于 FFT 的方法**：计算涉及三个步骤。\n    1.  $\\varepsilon_j$ 的 FFT：标准的 FFT 算法，如 Cooley-Tukey 算法，其计算复杂度为 $O(N \\log N)$。\n    2.  逐点乘法：$\\widehat{\\sigma}_n = \\widehat{b}_n \\widehat{\\varepsilon}_n$。这涉及 $N$ 次复数乘法，是一个 $O(N)$ 的操作。\n    3.  $\\widehat{\\sigma}_n$ 的 IFFT：逆 FFT 与正向 FFT 的复杂度相同，均为 $O(N \\log N)$。\n    *   总复杂度是这些步骤的总和：$O(N \\log N) + O(N) + O(N \\log N) = O(N \\log N)$。\n\n*   **理论加速比**：加速比 $S(N)$ 是较慢算法的计算成本与较快算法的计算成本之比。\n    $$\n    S(N) = \\frac{\\text{Cost}_{\\text{direct}}}{\\text{Cost}_{\\text{FFT}}} \\approx \\frac{C_1 N^2}{C_2 N \\log N} = \\left(\\frac{C_1}{C_2}\\right) \\frac{N}{\\log N}\n    $$\n    其中 $C_1$ 和 $C_2$ 是与实现相关的常数。渐近地，对于大的 $N$，常数变得不那么重要。问题要求使用以 2 为底的对数来计算加速比，这对于常见的 FFT 算法是很自然的：\n    $$\n    S(N) \\approx \\frac{N}{\\log_2 N}\n    $$\n这表明，对于大的 $N$，基于 FFT 的方法比直接卷积的效率要高得多。\n\n**4. 实现策略**\n\nPython 实现将遵循推导出的算法。对于每个测试用例：\n1.  通过在网格上对给定函数 $\\varepsilon(x)$ 进行采样，生成离散应变数组 $\\boldsymbol{\\varepsilon}$。\n2.  **基于 FFT 的方法** 可以简洁地实现为：\n    `sigma_fft = np.fft.ifft(np.fft.fft(epsilon) * alpha_hat)`\n    其中 `alpha_hat` 是谱乘子 $\\widehat{b}_n$ 的数组。\n3.  **直接卷积方法** 使用嵌套循环为每个 $\\sigma_j$ 显式计算求和。该方法所需的核 $b_j$ 首先通过 `b = np.fft.ifft(alpha_hat)` 计算得出。\n4.  离散波数计算为 $k_n = \\frac{2\\pi n}{L}$，对于 $n \\in \\{0, \\dots, N-1\\}$。这种非标准范围（不以零为中心）意味着谱乘子数组 `alpha_hat` 将不具有共轭对称性。因此，其逆 DFT，即核 `b`，将是复数值的。因此，为了确保与基于 FFT 的方法进行有效比较，直接卷积的所有计算都必须在复数算术中执行。\n5.  最大绝对差 `max(abs(sigma_fft - sigma_direct))` 用作误差度量，以验证两种方法的数值等价性。\n6.  理论加速比 $S(N)$ 使用第 3 部分推导的公式进行计算。\n\n这个严谨的过程验证了问题的先决条件，并为得出正确且可验证的解决方案提供了一条清晰的路径。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the nonlocal elasticity problem for the given test cases.\n    It computes nonlocal stress using two methods: direct O(N^2) convolution\n    and an efficient O(N log N) FFT-based method. It then calculates the\n    maximum absolute difference between the results and the theoretical speedup.\n    \"\"\"\n    \n    # Define the strain function ε(x)\n    def strain_func(x):\n        return np.sin(3 * x) + 0.5 * np.cos(5 * x) + 0.2 * np.sin(7 * x)\n\n    # Define the test cases from the problem statement.\n    # Format: (N, L, l, epsilon_func)\n    test_cases = [\n        (64, 2 * np.pi, 0.3, strain_func),\n        (128, 2 * np.pi, 1e-6, strain_func),\n        (96, 2 * np.pi, 0.5, strain_func),\n        (100, 2 * np.pi, 0.2, lambda x: np.full_like(x, 3.7))\n    ]\n\n    results = []\n    \n    for N, L, ell, eps_func in test_cases:\n        # 1. Setup grid and discrete signals\n        # Grid points x_j = j * Delta_x for j=0,...,N-1\n        # Delta_x = L/N\n        # Using endpoint=False ensures periodicity, i.e., x_N = L is not included.\n        x = np.linspace(0, L, N, endpoint=False)\n        \n        # Discrete strain vector epsilon_j = ε(x_j)\n        epsilon = eps_func(x)\n\n        # 2. Define wavenumbers and spectral multiplier\n        # As per problem: k_n = (2*pi/L)*n for n = 0,...,N-1\n        n_indices = np.arange(N)\n        k_n = (2 * np.pi / L) * n_indices\n        \n        # Spectral multiplier for Helmholtz kernel (with E=1)\n        # alpha_hat_n = 1 / (1 + (ell*k_n)^2)\n        alpha_hat = 1.0 / (1.0 + (ell * k_n)**2)\n\n        # 3. FFT-based O(N log N) method\n        # σ_hat = α_hat * ε_hat\n        # σ = IDFT(σ_hat)\n        epsilon_hat = np.fft.fft(epsilon)\n        sigma_hat = alpha_hat * epsilon_hat\n        sigma_fft = np.fft.ifft(sigma_hat)\n\n        # 4. Direct O(N^2) circular convolution method\n        # First, compute the discrete kernel b_j by taking the IDFT of the multiplier\n        # b_j = IDFT(α_hat)_j\n        # The result b will be complex-valued because alpha_hat is not conjugate-symmetric\n        # with the given non-standard definition of k_n.\n        b = np.fft.ifft(alpha_hat)\n        \n        # Initialize the result array for direct convolution\n        sigma_direct = np.zeros(N, dtype=np.complex128)\n        \n        # Perform the explicit O(N^2) circular convolution\n        # σ_j = sum_{m=0}^{N-1} b_{(j-m) mod N} * ε_m\n        for j in range(N):\n            s = 0.0 + 0.0j # Use complex accumulator\n            for m in range(N):\n                # The modulo operator % in Python correctly handles negative results\n                # for the index, mapping them into the range [0, N-1] for positive N.\n                idx = (j - m) % N\n                s += b[idx] * epsilon[m]\n            sigma_direct[j] = s\n\n        # 5. Compute metrics\n        # Maximum absolute difference (absolute error) between the two methods\n        # np.abs computes the magnitude for complex numbers.\n        max_abs_error = np.max(np.abs(sigma_fft - sigma_direct))\n        \n        # Theoretical speedup ratio S(N) = N / log2(N)\n        theoretical_speedup = N / np.log2(N)\n        \n        results.append(max_abs_error)\n        results.append(theoretical_speedup)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2665428"}]}