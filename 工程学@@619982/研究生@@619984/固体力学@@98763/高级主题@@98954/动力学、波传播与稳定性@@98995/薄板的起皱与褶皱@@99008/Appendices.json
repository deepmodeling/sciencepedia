{"hands_on_practices": [{"introduction": "我们从一个在自然和工程中普遍存在的经典问题开始：附着在软基底上的薄膜的起皱。通过这个练习，你将运用能量最小化原理，权衡薄膜的弯曲能、基底的变形能以及压缩应力释放的能量。此过程不仅能让你推导出起皱的临界应变 $ \\varepsilon_c $，还能深刻理解材料与几何参数如何共同决定皱纹的特征波长 [@problem_id:2711454]。", "problem": "一块厚度为 $t$、杨氏模量为 $E$、泊松比为 $\\nu$ 的无限、各向同性、线性弹性薄膜，完美地粘合在刚度为 $K$ 的线性 Winkler 地基上（单位面积的反力等于 $K$ 乘以局部挠度）。该薄膜在平面应力状态下，沿 $x$ 方向受到均匀的面内压缩工程应变 $\\varepsilon$，其横向 $y$ 方向无牵引力，因此横向收缩不受约束。假设小斜率，并使用薄板的 Föppl–von Kármán 运动学。薄膜的弯曲刚度为 $B = \\dfrac{E t^{3}}{12 \\left(1-\\nu^{2}\\right)}$。 \n\n从能量最小化第一性原理出发，考虑薄膜中面的一种形式为 $w(x)=a \\cos(k x)$ 的一维正弦面外扰动，其中 $a$ 为小振幅， $k$ 为波数。使用以下能量要素：\n1) 由 $x$ 方向的曲率引起的板的弯曲应变能密度，\n2) 由挠度引起的储存在 Winkler 地基中的弹性势能密度，以及\n3) 与 $x$ 方向的预压缩相关的面内压缩功的释放，\n\n推导起皱的起始条件，并计算首次出现起皱时的临界压缩应变 $\\varepsilon_c$。将最终答案表示为以 $E$、$\\nu$、 $t$ 和 $K$ 表示的闭合形式解析表达式。最终答案必须是 $\\varepsilon_c$ 的单个表达式。不要计算任何数值。应变是无量纲的，因此不需要指定单位。", "solution": "我们构建与小振幅正弦面外挠度 $w(x)=a \\cos(kx)$ 相关的单位面积总势能，并研究何时可以在能量不增加的情况下发生非平凡变形（中性稳定）。振幅 $a$ 的二次项以内的能量贡献为：\n\n1) 各向同性板在一维曲率下的弯曲能。对于仅依赖于 $x$ 的挠度，曲率为 $\\kappa_{x}=w''(x)$，弯曲能密度为\n$$\n\\mathcal{U}_{b}=\\frac{B}{2}\\left(w''\\right)^{2}.\n$$\n\n2) Winkler 地基能量密度。线性地基施加反力 $p=K w$，因此储存的地基能量密度为\n$$\n\\mathcal{U}_{f}=\\frac{K}{2} w^{2}.\n$$\n\n3) 由预压缩引起的面内压缩功的释放。设 $N$ 表示起皱前沿 $x$ 方向单位宽度的均匀面内压缩合力。在 Föppl–von Kármán 运动学中，沿 $x$ 方向材料线的轴向拉伸由于面外斜率而获得一个额外的几何贡献 $-\\tfrac{1}{2}\\left(w'\\right)^{2}$。对于给定的静压缩合力 $N$，由面外斜率引起的势能变化是面内功的减少，贡献项为\n$$\n\\mathcal{U}_{N}=-\\frac{N}{2}\\left(w'\\right)^{2}.\n$$\n负号反映了面外波动会减小轴向投影并释放压缩功。\n\n对于正弦拟设 $w(x)=a \\cos(k x)$，我们有\n$$\nw'(x)=-a k \\sin(kx),\\qquad w''(x)=-a k^{2}\\cos(kx).\n$$\n在一个空间周期上对每个二次密度进行平均，得到\n$$\n\\left\\langle w^{2}\\right\\rangle=\\frac{a^{2}}{2},\\qquad \\left\\langle \\left(w'\\right)^{2}\\right\\rangle=\\frac{a^{2}k^{2}}{2},\\qquad \\left\\langle \\left(w''\\right)^{2}\\right\\rangle=\\frac{a^{2}k^{4}}{2}.\n$$\n因此，在一个周期上平均的单位面积总势能为\n$$\n\\Pi(a,k)=\\left\\langle \\mathcal{U}_{b}+\\mathcal{U}_{f}+\\mathcal{U}_{N}\\right\\rangle\n=\\frac{B}{2}\\cdot \\frac{a^{2}k^{4}}{2}+\\frac{K}{2}\\cdot \\frac{a^{2}}{2}-\\frac{N}{2}\\cdot \\frac{a^{2}k^{2}}{2}\n=\\frac{a^{2}}{4}\\left(B k^{4}+K-N k^{2}\\right).\n$$\n对于给定的波数 $k$，当 $a$ 的二次系数变为零时，平凡状态 $a=0$ 失去稳定性，即\n$$\nB k^{4}+K-N k^{2}=0\\quad \\Longrightarrow\\quad N(k)=\\frac{B k^{4}+K}{k^{2}}=B k^{2}+\\frac{K}{k^{2}}.\n$$\n临界载荷合力 $N_{c}$ 是 $N(k)$ 关于 $k>0$ 的最小值：\n$$\n\\frac{\\mathrm{d}N}{\\mathrm{d}k}=2B k-2\\frac{K}{k^{3}}=0\\quad \\Longrightarrow\\quad B k^{4}=K.\n$$\n因此，临界波数和临界载荷合力为\n$\nk_{c}=\\left(\\frac{K}{B}\\right)^{1/4},\\qquad N_{c}=2\\sqrt{B K}.\n$\n\n我们现在将在平面应力及 $y$ 方向横向无牵引力的条件下，将压缩合力 $N$ 与施加的工程应变 $\\varepsilon$ 联系起来。面内预屈曲状态是单轴压缩，其中 $\\sigma_{y}=0$，在线性各向同性弹性理论下，这意味着\n$$\n\\sigma_{x}=E\\,\\varepsilon,\\qquad N=\\sigma_{x} t=E t\\,\\varepsilon.\n$$\n因此，临界压缩应变为\n$$\n\\varepsilon_{c}=\\frac{N_{c}}{E t}=\\frac{2\\sqrt{B K}}{E t}.\n$$\n代入弯曲刚度 $B=\\dfrac{E t^{3}}{12\\left(1-\\nu^{2}\\right)}$ 得到\n$$\n\\varepsilon_{c}=\\frac{2}{E t}\\sqrt{\\frac{E t^{3}}{12\\left(1-\\nu^{2}\\right)}\\,K}\n=\\frac{2}{\\sqrt{12}}\\sqrt{\\frac{K t}{E\\left(1-\\nu^{2}\\right)}}\n=\\frac{1}{\\sqrt{3}}\\sqrt{\\frac{K t}{E\\left(1-\\nu^{2}\\right)}}.\n$$\n这个闭合形式的表达式给出了在单轴平面应力压缩下的 Winkler 地基上的薄弹性膜的起皱起始应变，它是通过对正弦扰动进行能量最小化推导出来的。", "answer": "$$\\boxed{\\frac{1}{\\sqrt{3}}\\sqrt{\\frac{K\\,t}{E\\left(1-\\nu^{2}\\right)}}}$$", "id": "2711454"}, {"introduction": "在探究了无限大薄膜的失稳机理后，我们转向一个更贴近实际的场景，考察几何边界如何塑造起皱模式。本练习聚焦于一个有限宽度的受压弹性带，其边缘被简支支撑。你的任务是推导并求解一个经典的特征值问题，从而揭示边界条件如何将连续的起皱可能性筛选为一系列离散的屈曲模态，并确定每个模态对应的临界应力 [@problem_id:2711433]。", "problem": "一块厚度为 $h$、宽度为 $W$ 的各向同性弹性薄板占据区域 $\\{(x,y): -\\infty<x<\\infty,\\, 0\\le y\\le W\\}$，并被建模为弯曲刚度为 $D$ 的薄板。该材料的杨氏模量为 $E$，泊松比为 $\\nu$，弯曲刚度由 $D=E h^{3}/\\big(12\\big(1-\\nu^{2}\\big)\\big)$ 给出。位于 $y=0$ 和 $y=W$ 的长边在薄板理论意义下是简支的：在这些边上，离面位移和绕 $x$ 轴的弯矩均为零。该薄板受到沿 $y$ 轴方向、单位长度上大小为 $N$ 的均匀面内压缩薄膜合力（因此当 $N>0$ 时压缩增加），该力在 $x$ 方向上是均匀的。\n\n使用针对小振幅离面位移 $w(x,y)$ 的线性化 Föppl–von Kármán (FvK) 板理论，对不依赖于 $x$ 且仅沿宽度变化的扰动进行线性稳定性分析。从一块在沿 $y$ 方向的均匀面内压缩合力 $N$ 作用下的薄板的适当变分陈述或平衡方程出发，推导其特征值问题及相关的边界条件。展示有限宽度 $W$ 和简支边界条件如何筛选出离散的横向褶皱波数 $k_{n}$，然后确定临界压缩柯西应力 $\\sigma_{c}$ 作为整数模态数 $n\\in\\mathbb{N}$ 的函数。\n\n将 $\\sigma_{c}(n)$ 的最终结果用 $E$、$\\nu$、$h$、$W$ 和 $n$ 的符号形式表示。以帕斯卡为单位提供答案。最终答案必须是单一的闭式解析表达式。", "solution": "这个问题提法明确，并基于经典的弹性稳定性理论。我们着手进行求解。\n\n线性稳定性分析的出发点是 Föppl–von Kármán (FvK) 方程，它描述了面内载荷作用下薄板的离面位移 $w(x,y)$。该方程的线性化形式为：\n$$ D \\nabla^4 w = N_{xx} \\frac{\\partial^2 w}{\\partial x^2} + 2 N_{xy} \\frac{\\partial^2 w}{\\partial x \\partial y} + N_{yy} \\frac{\\partial^2 w}{\\partial y^2} $$\n其中 $D$ 是弯曲刚度，$N_{ij}$ 是单位长度上的薄膜合力。\n\n根据问题描述，该薄板受到沿 $y$ 轴方向、单位长度上大小为 $N > 0$ 的均匀面内压缩合力。这对应于一个应力状态，其中合力张量的唯一非零分量是 $N_{yy}$。对于压缩情况，该力抵抗位移梯度的增加，因此其对势能的贡献在平衡方程中表现为 $-N \\frac{\\partial^2 w}{\\partial y^2}$ 这一项。因此，我们有 $N_{yy} = -N$，且 $N_{xx} = N_{xy} = 0$。控制方程变为：\n$$ D \\nabla^4 w = -N \\frac{\\partial^2 w}{\\partial y^2} $$\n\n问题指定我们分析不依赖于 $x$ 坐标的扰动，即 $w(x,y) = w(y)$。因此，所有关于 $x$ 的偏导数均为零。双调和算子 $\\nabla^4 = \\left( \\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2} \\right)^2$ 简化为 $\\frac{d^4}{dy^4}$。控制偏微分方程简化为一个线性的、齐次的常微分方程（ODE）：\n$$ D \\frac{d^4 w}{dy^4} + N \\frac{d^2 w}{dy^2} = 0 $$\n该方程描述了仅沿宽度 $W$ 变化的模态下薄板的屈曲行为。\n\n边界条件在边 $y=0$ 和 $y=W$ 处给出。这些边是“简支”的。在薄板理论中，这意味着在每个边上都有两个条件：\n1.  离面位移为零：$w(0) = 0$ 且 $w(W) = 0$。\n2.  绕平行于该边的轴的弯矩为零。对于边 $y=0$ 和 $y=W$，这是弯矩 $M_{yy}$。该弯矩的本构关系是 $M_{yy} = -D \\left( \\frac{\\partial^2 w}{\\partial y^2} + \\nu \\frac{\\partial^2 w}{\\partial x^2} \\right)$。因为 $w=w(y)$，这简化为 $M_{yy} = -D \\frac{d^2 w}{dy^2}$。因此，边界条件是在 $y=0$ 和 $y=W$ 处 $\\frac{d^2 w}{dy^2} = 0$。\n\n我们现在在满足这四个边界条件的约束下求解该常微分方程。我们定义一个参数 $k^2 = N/D$，因为 $N > 0$ 且 $D > 0$，所以该参数必须为正。常微分方程为：\n$$ \\frac{d^4 w}{dy^4} + k^2 \\frac{d^2 w}{dy^2} = 0 $$\n这是一个常系数常微分方程。其特征方程为 $r^4 + k^2 r^2 = 0$，即 $r^2(r^2 + k^2) = 0$。其根为 $r_1=r_2=0$ 和 $r_3, r_4 = \\pm i k$。$w(y)$ 的通解是：\n$$ w(y) = C_1 \\cos(ky) + C_2 \\sin(ky) + C_3 y + C_4 $$\n其中 $C_1, C_2, C_3, C_4$ 是积分常数。我们应用边界条件来确定这些常数。\n二阶导数为 $w''(y) = -C_1 k^2 \\cos(ky) - C_2 k^2 \\sin(ky)$。\n\n在 $y=0$ 处：\n1.  $w(0) = 0 \\implies C_1 + C_4 = 0$。\n2.  $w''(0) = 0 \\implies -C_1 k^2 = 0$。因为我们寻求 $N>0$ 的屈曲解，所以 $k^2 > 0$，即 $k \\neq 0$。因此，必须有 $C_1 = 0$。由第一个条件，这意味着 $C_4=0$。\n\n解简化为 $w(y) = C_2 \\sin(ky) + C_3 y$。现在我们应用在 $y=W$ 处的边界条件：\n3.  $w(W) = 0 \\implies C_2 \\sin(kW) + C_3 W = 0$。\n4.  $w''(W) = 0 \\implies -C_2 k^2 \\sin(kW) = 0$。\n\n从第四个条件可知，由于 $k \\neq 0$，我们有 $C_2 = 0$ 或 $\\sin(kW) = 0$。如果 $C_2 = 0$，第三个条件变为 $C_3 W = 0$，因为 $W>0$，这意味着 $C_3=0$。这导致了平凡解 $w(y)=0$，对应于未屈曲状态。为了存在非平凡的屈曲模态，我们必须至少有一个非零系数，这要求 $\\sin(kW) = 0$。\n\n条件 $\\sin(kW) = 0$ 意味着 $kW$ 必须是 $\\pi$ 的整数倍：\n$$ kW = n\\pi, \\quad \\text{for } n \\in \\mathbb{Z} $$\n由于 $k = \\sqrt{N/D} > 0$ 且 $W > 0$， $n$ 必须为正整数，即 $n \\in \\mathbb{N} = \\{1, 2, 3, \\dots\\}$。这就将波数 $k$ 的可能取值量子化了：\n$$ k_n = \\frac{n\\pi}{W} $$\n这些就是由边界条件所筛选出的离散横向褶皱波数。\n\n现在，将 $\\sin(k_n W) = \\sin(n\\pi) = 0$ 代入第三个边界条件 $C_2 \\sin(k_n W) + C_3 W = 0$ 中，我们得到 $C_3 W = 0$，即 $C_3 = 0$。\n因此，对于非平凡解，我们必须有 $C_1=C_3=C_4=0$ 和 $C_2 \\neq 0$。由此产生的屈曲模态，或称特征函数，是：\n$$ w_n(y) = C_n \\sin(k_n y) = C_n \\sin\\left(\\frac{n\\pi y}{W}\\right) $$\n其中 $C_n$ 是第 $n$ 阶模态的任意振幅。\n\n屈曲发生在压缩载荷 $N$ 的特定值上，我们现在可以确定这些值。从定义 $k^2 = N/D$ 出发，我们得到与每个模态 $n$ 对应的离散屈曲载荷集 $N_n$：\n$$ N_n = D k_n^2 = D \\left(\\frac{n\\pi}{W}\\right)^2 $$\n问题要求的是临界压缩柯西应力 $\\sigma_c(n)$，作为模态数 $n$ 的函数。合力 $N$ 通过 $N = \\sigma h$ 与均匀应力 $\\sigma$ 相关。因此，模态 $n$ 的屈曲应力为 $\\sigma_n = N_n / h$。\n$$ \\sigma_c(n) = \\frac{N_n}{h} = \\frac{D}{h} \\left(\\frac{n\\pi}{W}\\right)^2 $$\n最后，我们代入给定的弯曲刚度表达式 $D = \\frac{E h^3}{12(1-\\nu^2)}$：\n$$ \\sigma_c(n) = \\frac{1}{h} \\left( \\frac{E h^3}{12(1-\\nu^2)} \\right) \\left(\\frac{n\\pi}{W}\\right)^2 $$\n简化此表达式，得到作为模态数 $n$ 的函数的屈曲应力最终结果：\n$$ \\sigma_c(n) = \\frac{E h^2}{12(1-\\nu^2)} \\frac{n^2 \\pi^2}{W^2} $$\n这可以重新组合各项，写成如下形式：\n$$ \\sigma_c(n) = \\frac{\\pi^2 E}{12(1-\\nu^2)} \\left(\\frac{h}{W}\\right)^2 n^2 $$\n最低的，因此也是物理上最关键的屈曲应力，发生在 $n$ 的最小可能值，即 $n=1$ 时。然而，问题明确要求将表达式表示为 $n$ 的函数。该表达式的单位与应力单位（帕斯卡）一致，因为 $E$ 的单位是帕斯卡，而所有其他量都是无量纲的比率或数字。", "answer": "$$\\boxed{\\frac{\\pi^{2} E}{12(1-\\nu^{2})} \\left(\\frac{h}{W}\\right)^{2} n^{2}}$$", "id": "2711433"}, {"introduction": "理论分析出色地预测了失稳的起点，但要捕捉起皱后的演化，必须借助计算工具。这项高级实践将引导你将前述的有限宽带模型转化为一个可运行的有限元程序，从而架起理论与计算模拟之间的桥梁。你将实现线性屈曲分析来验证临界载荷，并应用牛顿法追踪非线性后屈曲路径，直观地观察和量化皱纹在失稳后的生长过程 [@problem_id:2711413]。", "problem": "您必须编写一个完整、可运行的程序，为在轴向末端缩短作用下的细长简支板带构建并求解一个 Föppl–von Kármán (FvK) 方程的降维有限元模型。从基本能量原理出发，推导出一个能够捕捉由微小几何缺陷引发的平面外褶皱的一维模型。您的程序必须接着使用三次 Hermite 单元来组装并求解弱形式，从一个广义特征值问题中计算线性屈曲阈值，并最终使用带有相容切线的牛顿法为几个指定的末端缩短水平计算后屈曲平衡。最终的数值输出必须是指定测试组的跨中平面外振幅，且必须以米为单位表示。\n\n假设和模型降维：\n- 考虑一个长度为 $L$、单位宽度的细长板带，因此所有场仅依赖于轴向坐标 $x \\in [0,L]$。设平面外位移为 $w(x)$，轴向位移为 $u(x)$。设杨氏模量为 $E$，厚度为 $t$，横截面积为 $A = t$（单位宽度），截面二次矩为 $I = t^3/12$。定义抗弯刚度 $D = E I$。\n- 采用板带的 von Kármán 运动学，从而轴向 Green–Lagrange 膜应变为 $\\varepsilon(x) = u'(x) + \\tfrac{1}{2} \\big(w'(x)\\big)^2$。施加一个末端缩短 $s > 0$，使得端到端的长度缩减量为 $s$。\n- 对于轴向均匀的应力结果，在末端缩短约束下，通过最小化轴向能量来消去 $u$。这会得到一个仅用 $w$ 表示的一维降维总势能：\n$$\n\\Pi[w] \\;=\\; \\tfrac{1}{2} \\int_0^L D \\,\\big(w''(x)\\big)^2 \\, dx \\;+\\; \\tfrac{E A}{2L} \\,\\Big( s - \\tfrac{1}{2} \\int_0^L \\big(w'(x)\\big)^2 \\, dx \\Big)^2.\n$$\n- 相关的弱形式（一阶变分）是：找到 $w \\in \\mathcal{V}$ 且满足 $w(0)=w(L)=0$，使得对于所有容许的 $v$ 都成立：\n$$\nD \\int_0^L w''(x) v''(x) \\, dx \\;-\\; S[w] \\int_0^L w'(x) v'(x) \\, dx \\;=\\; 0,\n$$\n其中由末端缩短引起的轴向压力为\n$$\nS[w] \\;=\\; \\frac{E A}{L} \\left( s \\;-\\; \\tfrac{1}{2} \\int_0^L \\big(w'(x)\\big)^2 \\, dx \\right),\n$$\n$S[w] > 0$ 表示受压。简支边界条件为 $w(0) = 0$ 和 $w(L) = 0$，转角自由。\n\n离散化要求：\n- 将 $[0,L]$ 离散为 $N_e$ 个等长的 Hermite 梁单元。在每个长度为 $h = L / N_e$ 的单元上使用三次 Hermite 插值，节点自由度为 $[w_i, \\theta_i]$，分别代表位移和转角 ($\\theta = w'$)。在局部坐标 $s \\in [0,1]$ 上，使用\n  - $H_1(s) = 1 - 3 s^2 + 2 s^3$,\n  - $H_2(s) = s - 2 s^2 + s^3$,\n  - $H_3(s) = 3 s^2 - 2 s^3$,\n  - $H_4(s) = - s^2 + s^3$,\n  并重构 $w(s) = H_1 w_1 + h H_2 \\theta_1 + H_3 w_2 + h H_4 \\theta_2$。每个单元至少使用 $3$ 个点的高斯求积来组装：\n  - 抗弯刚度矩阵 $K_b$，其元素为 $K_{b,ij} = D \\int_0^L N_i''(x) N_j''(x) \\, dx$，\n  - 几何（膜）刚度矩阵 $K_g$，其元素为 $K_{g,ij} = \\int_0^L N_i'(x) N_j'(x) \\, dx$，\n  其中 $N_i$ 和 $N_j$ 是全局 Hermite 基函数。通过消除两端的两个位移自由度来施加本质边界条件 $w(0)=0$ 和 $w(L)=0$；在 $x=0$ 和 $x=L$ 处的转角保持自由。\n\n线性屈曲阈值：\n- 线性化屈曲特征值问题是在自由自由度上的广义对称特征值问题\n$$\nK_b \\,\\varphi \\;=\\; \\lambda \\, K_g \\, \\varphi,\n$$\n其中 $\\lambda$ 是临界压力。数值地计算最小正特征值 $\\lambda_{\\mathrm{cr}}$。相应的临界末端缩短量是\n$$\ns_{\\mathrm{cr}} \\;=\\; \\frac{L}{E A} \\, \\lambda_{\\mathrm{cr}}.\n$$\n\n带有缺陷的非线性后屈曲：\n- 引入一个微小的几何缺陷以触发褶皱，通过以下公式初始化迭代值\n$$\nw_0(x) \\;=\\; a_0 \\,\\sin\\!\\left(\\frac{\\pi x}{L}\\right), \n\\quad\n\\theta_0(x) \\;=\\; \\frac{d w_0}{d x} \\;=\\; a_0 \\,\\frac{\\pi}{L}\\,\\cos\\!\\left(\\frac{\\pi x}{L}\\right),\n$$\n其中 $a_0 \\ll L$ 是指定的缺陷振幅。使用从能量（二阶变分）推导出的相容切线的牛顿法。如果 $R(w)$ 是残差向量，其分量为\n$$\nR_i(w) \\;=\\; \\sum_{j} \\big(K_{b,ij} - S[w]\\, K_{g,ij}\\big) \\, w_j,\n$$\n那么相容对称切线是\n$$\nK_t(w) \\;=\\; K_b \\;-\\; S[w]\\, K_g \\;+\\; \\frac{E A}{L}\\, g(w)\\, g(w)^{\\top},\n\\quad\ng(w) \\;=\\; K_g \\, w,\n$$\n因为 $\\tfrac{1}{2}\\int_0^L \\big(w'(x)\\big)^2 dx \\;=\\; \\tfrac{1}{2} w^{\\top} K_g w$，因此 $dS = -\\tfrac{E A}{L}\\, g(w)^{\\top} d w$。在自由自由度上求解 $K_t \\,\\Delta w = - R(w)$，如果需要，使用回溯线搜索，并更新 $w \\leftarrow w + \\alpha \\Delta w$ 直至收敛。\n\n数值数据、单位和测试组：\n- 使用以下材料和几何参数：\n  - 杨氏模量 $E = 2.0 \\times 10^9 \\,\\mathrm{Pa}$，\n  - 厚度 $t = 1.0 \\times 10^{-3} \\,\\mathrm{m}$，\n  - 单位宽度 $b = 1.0 \\,\\mathrm{m}$，\n  - 横截面 $A = b\\,t$，\n  - 截面二次矩 $I = b\\, t^3 / 12$，\n  - 抗弯刚度 $D = E I$，\n  - 长度 $L = 1.0 \\,\\mathrm{m}$，\n  - 单元数量 $N_e = 80$。\n- 首先通过广义特征值问题计算 $s_{\\mathrm{cr}}$。然后用以下这组指定的末端缩短和缺陷振幅求解三个后屈曲问题：\n  - 测试 $1$：$s = 0.5\\, s_{\\mathrm{cr}}$，$a_0 = 1.0 \\times 10^{-8} \\,\\mathrm{m}$，\n  - 测试 $2$：$s = 1.0\\, s_{\\mathrm{cr}}$，$a_0 = 1.0 \\times 10^{-6} \\,\\mathrm{m}$，\n  - 测试 $3$：$s = 3.0\\, s_{\\mathrm{cr}}$，$a_0 = 1.0 \\times 10^{-6} \\,\\mathrm{m}$。\n- 对每个测试，报告收敛后的跨中平面外位移绝对振幅 $|w(L/2)|$，单位为米。您的程序必须计算并输出这三个值。\n\n要求的最终输出格式：\n- 您的程序应产生单行输出，其中包含三个跨中振幅，格式为用方括号括起来、逗号分隔的 Python 列表，例如 $[a_1,a_2,a_3]$，其中每个 $a_i$ 是一个以米为单位的浮点数。不得打印任何其他文本。\n\n此处不适用角度单位。所有物理量必须在国际单位制（SI）中处理，并且所要求的输出必须如上所述以米为单位表示。", "solution": "问题陈述经过严格审查并被认定是有效的。它提出了一个计算固体力学领域中适定的、有科学依据的问题，特别是关于使用 Föppl–von Kármán (FvK) 方程分析板的褶皱问题。所有必要的物理参数、控制方程、边界条件和离散化要求都以清晰一致的方式给出。该问题要求实现一个标准的有限元流程，包括线性屈曲分析和使用带有相容切线矩阵的牛顿法进行非线性后屈曲求解。该问题的提法是自洽的，没有矛盾或歧义。\n\n我们继续进行推导和求解。\n\n对于单轴压缩的板带，其降维为关于平面外位移 $w(x)$ 的一维问题后，总势能 $\\Pi[w]$ 给出如下：\n$$\n\\Pi[w] \\;=\\; \\underbrace{\\tfrac{1}{2} \\int_0^L D \\,\\big(w''(x)\\big)^2 \\, dx}_{\\text{Bending Energy}} \\;+\\; \\underbrace{\\tfrac{E A}{2L} \\,\\Big( s - \\tfrac{1}{2} \\int_0^L \\big(w'(x)\\big)^2 \\, dx \\Big)^2}_{\\text{Membrane Energy}}.\n$$\n此处，$D = EI$ 是抗弯刚度，$E$ 是杨氏模量，$A$ 是横截面积，$I$ 是截面二次矩，$L$ 是长度，$s$ 是指定的末端缩短量。驻定势能原理 $\\delta \\Pi[w] = 0$ 得到平衡方程的弱形式。对于一个满足本质边界条件的任意容许变分 $v(x)$，我们必须有：\n$$\n\\delta\\Pi = D \\int_0^L w'' v'' \\, dx + \\frac{EA}{L} \\left( s - \\frac{1}{2}\\int_0^L (w')^2 dx \\right) \\left( - \\int_0^L w' v' dx \\right) = 0.\n$$\n将轴向压力 $S[w]$ 定义为\n$$\nS[w] = \\frac{EA}{L} \\left( s - \\frac{1}{2}\\int_0^L (w')^2 dx \\right),\n$$\n弱形式简化为找到 $w(x)$ 使得对于所有容许的 $v(x)$ 都成立：\n$$\nD \\int_0^L w''(x) v''(x) \\, dx - S[w] \\int_0^L w'(x) v'(x) \\, dx = 0.\n$$\n\n为了数值求解该问题，我们将区域 $[0, L]$ 离散为 $N_e$ 个有限元。我们采用三次 Hermite 单元，对于此单元，其上的位移场 $w(x)$ 是由每个节点 $i$ 的节点自由度（DOFs）——位移 $w_i$ 和转角 $\\theta_i = w'_i$——插值得到的。位移及其导数近似为 $w(x) \\approx \\sum_j N_j(x) d_j$，其中 $d_j$ 是全局自由度，$N_j(x)$ 是相应的全局基函数。\n\n将此近似代入弱形式，得到一个非线性代数方程组 $R(d) = 0$，其中 $d$ 是所有节点自由度的向量。残差向量 $R$ 的分量为：\n$$\nR_i(d) = \\left( \\sum_j D \\int_0^L N_i'' N_j'' dx \\right) d_j - S[d] \\left( \\sum_j \\int_0^L N_i' N_j' dx \\right) d_j.\n$$\n这可以写成矩阵形式：\n$$\nR(d) = (K_b - S[d] K_g) d = 0,\n$$\n其中抗弯刚度矩阵 $K_b$ 和几何刚度矩阵 $K_g$ 的元素为：\n$$\nK_{b,ij} = D \\int_0^L N_i''(x) N_j''(x) \\, dx, \\quad K_{g,ij} = \\int_0^L N_i'(x) N_j'(x) \\, dx.\n$$\n这些积分在每个单元上使用 $3$ 点高斯求积进行数值计算，并组装成全局矩阵。通过从系统中消除与这些自由度对应的行和列，来施加简支边界条件 $w(0)=0$ 和 $w(L)=0$。\n\n首先，我们确定线性屈曲阈值。在平凡平直状态 ($w=0$) 附近对系统进行线性化，力 $S$ 变得与 $w$ 无关，$S[0] = \\frac{EAs}{L}$。问题变为寻找 $K_b d - S[0] K_g d = 0$ 的一个非平凡解。这是一个广义特征值问题：\n$$\nK_b \\varphi_k = \\lambda_k K_g \\varphi_k,\n$$\n其中特征值 $\\lambda_k$ 对应于临界压力。最小正特征值 $\\lambda_{\\mathrm{cr}}$ 是屈曲载荷。相应的临界末端缩短量是 $s_{\\mathrm{cr}} = \\frac{L}{EA} \\lambda_{\\mathrm{cr}}$。我们针对与自由自由度对应的矩阵求解此特征值问题。\n\n接下来，我们使用牛顿法求解后屈曲状态的完整非线性问题。对于一个给定的末端缩短量 $s$，我们寻求 $R(d) = 0$ 的解。从一个初始猜测 $d_0$（从指定的几何缺陷推导而来）开始，我们通过求解线性系统来迭代地寻找更新量 $\\Delta d$：\n$$\nK_t(d_k) \\Delta d = -R(d_k),\n$$\n并更新解 $d_{k+1} = d_k + \\Delta d$。矩阵 $K_t = \\frac{\\partial R}{\\partial d}$ 是相容切线刚度矩阵，在问题陈述中给出为：\n$$\nK_t(d) = K_b - S[d] K_g + \\frac{EA}{L} g(d) g(d)^{\\top}, \\quad \\text{其中} \\quad g(d) = K_g d.\n$$\n迭代持续进行，直到残差向量 $R(d_k)$ 的范数低于指定的容差。该线性系统仅针对自由自由度求解。\n\n实现过程如下：\n$1$. 定义物理常数 ($E, t, L$) 和派生参数 ($A, I, D$)。\n$2$. 实现使用三次 Hermite 基函数和高斯求积计算单元刚度矩阵 $k_b^e$ 和 $k_g^e$ 的函数。\n$3$. 组装全局矩阵 $K_b$ 和 $K_g$。\n$4$. 通过识别自由自由度的索引并对全局矩阵进行切片，以形成 $K_{b,\\text{free}}$ 和 $K_{g,\\text{free}}$，从而施加简支边界条件。\n$5$. 求解广义特征值问题 $K_{b,\\text{free}} \\varphi = \\lambda K_{g,\\text{free}} \\varphi$ 来找到 $\\lambda_{\\mathrm{cr}}$ 并计算 $s_{\\mathrm{cr}}$。\n$6$. 对于由 ($s, a_0$) 定义的每个测试用例：\n    a. 基于缺陷形状 $w_0(x) = a_0 \\sin(\\pi x/L)$ 构建初始自由度向量 $d_0$。\n    b. 对自由自由度进行牛顿-拉夫逊方案迭代直至收敛。\n    c. 提取跨中节点的收敛位移 $w(L/2)$。\n$7$. 收集所有测试用例的跨中绝对振幅，并按要求格式化输出。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import eigh\n\ndef solve():\n    \"\"\"\n    Constructs and solves a reduced finite element model of the Föppl–von Kármán (FvK) \n    equations for a thin, simply-supported plate strip under axial end-shortening.\n    \"\"\"\n\n    # Numerical data, units, and test suite\n    E = 2.0e9  # Young’s modulus (Pa)\n    t = 1.0e-3  # thickness (m)\n    b = 1.0  # unit width (m)\n    L = 1.0  # length (m)\n    Ne = 80  # number of elements\n\n    # Derived physical properties\n    A = b * t  # cross-sectional area (m^2)\n    I = b * t**3 / 12  # second moment of area (m^4)\n    D = E * I  # bending stiffness (N*m^2)\n    h = L / Ne # element length (m)\n\n    def get_hermite_basis_derivatives(s, h):\n        \"\"\"\n        Calculates the 1st and 2nd derivatives of the Hermite shape functions\n        with respect to the global coordinate x.\n        s: local coordinate in [0, 1]\n        h: element length\n        \"\"\"\n        # Derivatives of Hermite polynomials H(s) w.r.t. s\n        dH1_ds = -6*s + 6*s**2\n        dH2_ds = 1 - 4*s + 3*s**2\n        dH3_ds = 6*s - 6*s**2\n        dH4_ds = -2*s + 3*s**2\n        \n        d2H1_ds2 = -6 + 12*s\n        d2H2_ds2 = -4 + 6*s\n        d2H3_ds2 = 6 - 12*s\n        d2H4_ds2 = -2 + 6*s\n\n        # Derivatives of nodal shape functions N_i(x) w.r.t. x\n        # N(x) = [H1(s), h*H2(s), H3(s), h*H4(s)] where s = x/h\n        # N'(x) = dN/ds * ds/dx = (1/h) * dN/ds\n        dN_dx = np.array([\n            (1/h) * dH1_ds,\n            dH2_ds,\n            (1/h) * dH3_ds,\n            dH4_ds\n        ])\n        \n        # N''(x) = (1/h^2) * d2N/ds2\n        d2N_dx2 = np.array([\n            (1/h**2) * d2H1_ds2,\n            (1/h) * d2H2_ds2,\n            (1/h**2) * d2H3_ds2,\n            (1/h) * d2H4_ds2\n        ])\n        \n        return dN_dx, d2N_dx2\n\n    def get_element_matrices(h):\n        \"\"\"Computes element stiffness matrices using 3-point Gaussian quadrature.\"\"\"\n        ke_b = np.zeros((4, 4))\n        ke_g = np.zeros((4, 4))\n        \n        # 3-point Gauss-Legendre quadrature points and weights for [-1, 1]\n        gp_xi = [-np.sqrt(3./5.), 0., np.sqrt(3./5.)]\n        gp_w = [5./9., 8./9., 5./9.]\n        \n        for xi, w in zip(gp_xi, gp_w):\n            s = (xi + 1.0) / 2.0  # Map xi from [-1, 1] to s in [0, 1]\n            dN_dx, d2N_dx2 = get_hermite_basis_derivatives(s, h)\n            \n            # The Jacobian for the integration mapping dx = (h/2) dxi\n            jacobian = h / 2.0\n            \n            ke_b += D * np.outer(d2N_dx2, d2N_dx2) * w * jacobian\n            ke_g += np.outer(dN_dx, dN_dx) * w * jacobian\n            \n        return ke_b, ke_g\n\n    def assemble_global_matrices():\n        \"\"\"Assembles global stiffness matrices from element matrices.\"\"\"\n        n_dof = 2 * (Ne + 1)\n        K_b = np.zeros((n_dof, n_dof))\n        K_g = np.zeros((n_dof, n_dof))\n        \n        ke_b_proto, ke_g_proto = get_element_matrices(h)\n        \n        for e in range(Ne):\n            dof_indices = np.array([2*e, 2*e + 1, 2*(e+1), 2*(e+1) + 1])\n            ix = np.ix_(dof_indices, dof_indices)\n            K_b[ix] += ke_b_proto\n            K_g[ix] += ke_g_proto\n            \n        return K_b, K_g\n\n    # 1. Assemble matrices and apply boundary conditions\n    K_b_full, K_g_full = assemble_global_matrices()\n    \n    n_total_dofs = 2 * (Ne + 1)\n    constrained_dofs = [0, 2 * Ne]  # DOFs for w(0) and w(L)\n    all_dofs = list(range(n_total_dofs))\n    free_dofs = [dof for dof in all_dofs if dof not in constrained_dofs]\n    ix_free = np.ix_(free_dofs, free_dofs)\n\n    K_b_free = K_b_full[ix_free]\n    K_g_free = K_g_full[ix_free]\n\n    # 2. Linear buckling analysis to find critical end-shortening\n    eigenvalues, _ = eigh(K_b_free, b=K_g_free)\n    lambda_cr = eigenvalues[0]  # Smallest positive eigenvalue\n    s_cr = (L / (E * A)) * lambda_cr\n\n    # 3. Post-buckling analysis for test cases\n    test_cases = [\n        (0.5 * s_cr, 1.0e-8),  # Test 1\n        (1.0 * s_cr, 1.0e-6),  # Test 2\n        (3.0 * s_cr, 1.0e-6),  # Test 3\n    ]\n\n    results = []\n    x_nodes = np.linspace(0, L, Ne + 1)\n    \n    for s, a0 in test_cases:\n        # Initial guess based on imperfection\n        d_full = np.zeros(n_total_dofs)\n        d_full[0::2] = a0 * np.sin(np.pi * x_nodes / L) # w_i\n        d_full[1::2] = a0 * (np.pi / L) * np.cos(np.pi * x_nodes / L) # theta_i\n        \n        d_free = d_full[free_dofs]\n        \n        # Newton-Raphson solver\n        max_iter = 25\n        tolerance = 1e-9\n        for _ in range(max_iter):\n            # Reconstruct full DOF vector from free DOFs\n            d_full = np.zeros(n_total_dofs)\n            d_full[free_dofs] = d_free\n            \n            # Compressive force S[w]\n            membrane_shortening = 0.5 * d_full.T @ K_g_full @ d_full\n            S = (E * A / L) * (s - membrane_shortening)\n            \n            # Residual vector R(w) for free DOFs\n            R_full = (K_b_full - S * K_g_full) @ d_full\n            R_free = R_full[free_dofs]\n\n            if np.linalg.norm(R_free) < tolerance:\n                break\n            \n            # Consistent tangent matrix K_t(w) for free DOFs\n            g_full = K_g_full @ d_full\n            Kt_full = K_b_full - S * K_g_full + (E * A / L) * np.outer(g_full, g_full)\n            Kt_free = Kt_full[ix_free]\n            \n            # Solve for update and apply it\n            delta_d_free = np.linalg.solve(Kt_free, -R_free)\n            d_free += delta_d_free\n            \n        # Extract midspan amplitude |w(L/2)|\n        mid_node_index = Ne // 2\n        mid_disp_dof_global_idx = 2 * mid_node_index\n        mid_dof_idx_in_free = free_dofs.index(mid_disp_dof_global_idx)\n        w_mid = d_free[mid_dof_idx_in_free]\n        \n        results.append(abs(w_mid))\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2711413"}]}