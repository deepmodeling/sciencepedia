{"hands_on_practices": [{"introduction": "在构建能够被物理定律约束的本构模型时，确保模型满足材料客观性原则至关重要。一种有效的方法是使用变形张量的不变量作为神经网络的输入，因为不变量在刚体旋转下保持不变。本练习将通过一个简单的剪切变形案例，让您亲手推导右柯西-格林应变张量 $(\\boldsymbol{C})$ 的主不变量，这是为数据驱动本构模型准备旋转不变特征的一项基本技能 [@problem_id:2656035]。", "problem": "一个用于超弹性本构模型的不变神经网络，将右 Cauchy–Green 变形张量的主不变量作为输入。考虑简单剪切变形，其变形梯度由二阶张量 $\\boldsymbol{F}$ 给出，\n$$\n\\boldsymbol{F}=\\begin{bmatrix}1  \\gamma  0\\\\ 0  1  0\\\\ 0  0  1\\end{bmatrix},\n$$\n其中 $\\gamma$ 是工程剪切应变（无量纲）。从右 Cauchy–Green 变形张量 $\\boldsymbol{C}$ 的定义以及 $\\boldsymbol{C}$ 的主不变量出发，推导三个主不变量 $I_{1}$，$I_{2}$ 和 $I_{3}$ 关于 $\\gamma$ 的封闭式表达式，以用作不变神经网络的旋转客观输入。将最终答案表示为单行矩阵 $\\big[I_{1}\\; I_{2}\\; I_{3}\\big]$。不要近似；请提供精确的解析表达式。无需单位。", "solution": "对所提出的问题进行了严格审查，并发现其是有效的。该问题在科学上基于连续介质力学的原理，是适定的，并包含了获得唯一解所需的所有必要信息。我们将继续进行推导。\n\n目标是求解简单剪切变形下右 Cauchy–Green 变形张量 $\\boldsymbol{C}$ 的三个主不变量 $I_{1}$，$I_{2}$ 和 $I_{3}$。这些不变量可作为本构模型（例如问题描述中提到的不变神经网络）的客观输入。\n\n变形梯度张量 $\\boldsymbol{F}$ 如下所示：\n$$\n\\boldsymbol{F} = \\begin{bmatrix} 1  \\gamma  0 \\\\ 0  1  0 \\\\ 0  0  1 \\end{bmatrix}\n$$\n其中 $\\gamma$ 是剪切量。\n\n右 Cauchy–Green 变形张量 $\\boldsymbol{C}$ 定义为变形梯度转置 $\\boldsymbol{F}^T$ 与变形梯度 $\\boldsymbol{F}$ 的乘积：\n$$\n\\boldsymbol{C} = \\boldsymbol{F}^T \\boldsymbol{F}\n$$\n首先，我们求 $\\boldsymbol{F}$ 的转置：\n$$\n\\boldsymbol{F}^T = \\begin{bmatrix} 1  0  0 \\\\ \\gamma  1  0 \\\\ 0  0  1 \\end{bmatrix}\n$$\n现在，我们进行矩阵乘法以求得 $\\boldsymbol{C}$：\n$$\n\\boldsymbol{C} = \\begin{bmatrix} 1  0  0 \\\\ \\gamma  1  0 \\\\ 0  0  1 \\end{bmatrix} \\begin{bmatrix} 1  \\gamma  0 \\\\ 0  1  0 \\\\ 0  0  1 \\end{bmatrix}\n$$\n$$\n\\boldsymbol{C} = \\begin{bmatrix} (1)(1)+(0)(0)+(0)(0)  (1)(\\gamma)+(0)(1)+(0)(0)  (1)(0)+(0)(0)+(0)(1) \\\\ (\\gamma)(1)+(1)(0)+(0)(0)  (\\gamma)(\\gamma)+(1)(1)+(0)(0)  (\\gamma)(0)+(1)(0)+(0)(1) \\\\ (0)(1)+(0)(0)+(1)(0)  (0)(\\gamma)+(0)(1)+(1)(0)  (0)(0)+(0)(0)+(1)(1) \\end{bmatrix}\n$$\n此计算得出 $\\boldsymbol{C}$ 的分量：\n$$\n\\boldsymbol{C} = \\begin{bmatrix} 1  \\gamma  0 \\\\ \\gamma  1+\\gamma^2  0 \\\\ 0  0  1 \\end{bmatrix}\n$$\n三维空间中二阶张量 $\\boldsymbol{C}$ 的主不变量是从其分量导出的标准标量。它们的定义如下：\n$I_1 = \\text{tr}(\\boldsymbol{C})$\n$I_2 = \\frac{1}{2} [(\\text{tr}(\\boldsymbol{C}))^2 - \\text{tr}(\\boldsymbol{C}^2)]$\n$I_3 = \\det(\\boldsymbol{C})$\n\n现在我们将使用推导出的张量 $\\boldsymbol{C}$ 计算每个不变量。\n\n第一不变量 $I_1$ 是 $\\boldsymbol{C}$ 的迹，即其对角元素之和：\n$$\nI_1 = C_{11} + C_{22} + C_{33} = 1 + (1+\\gamma^2) + 1\n$$\n$$\nI_1 = 3 + \\gamma^2\n$$\n第三不变量 $I_3$ 是 $\\boldsymbol{C}$ 的行列式。对于物理变形，$\\boldsymbol{F}$ 的行列式必须为正。我们知道 $\\det(\\boldsymbol{C}) = \\det(\\boldsymbol{F}^T \\boldsymbol{F}) = \\det(\\boldsymbol{F}^T)\\det(\\boldsymbol{F}) = (\\det(\\boldsymbol{F}))^2 = J^2$，其中 $J$ 是变形的雅可比行列式。对于给定的 $\\boldsymbol{F}$，它是一个上三角矩阵，其行列式是对角元素的乘积：\n$$\nJ = \\det(\\boldsymbol{F}) = (1)(1)(1) = 1\n$$\n因此，第三不变量是：\n$$\nI_3 = J^2 = 1^2 = 1\n$$\n这个结果表明了简单剪切变形的等容（体积保持）特性，因为 $J=1$。\n\n第二不变量 $I_2$ 可以使用涉及 $\\boldsymbol{C}$ 的迹及其平方的迹的公式计算，但更直接的方法是将其计算为 $\\boldsymbol{C}$ 的主子式之和：\n$$\nI_2 = \\begin{vmatrix} C_{22}  C_{23} \\\\ C_{32}  C_{33} \\end{vmatrix} + \\begin{vmatrix} C_{11}  C_{13} \\\\ C_{31}  C_{33} \\end{vmatrix} + \\begin{vmatrix} C_{11}  C_{12} \\\\ C_{21}  C_{22} \\end{vmatrix}\n$$\n代入 $\\boldsymbol{C}$ 的分量：\n$$\nI_2 = \\begin{vmatrix} 1+\\gamma^2  0 \\\\ 0  1 \\end{vmatrix} + \\begin{vmatrix} 1  0 \\\\ 0  1 \\end{vmatrix} + \\begin{vmatrix} 1  \\gamma \\\\ \\gamma  1+\\gamma^2 \\end{vmatrix}\n$$\n计算每个行列式：\n$$\nI_2 = ((1+\\gamma^2)(1) - (0)(0)) + ((1)(1) - (0)(0)) + ((1)(1+\\gamma^2) - (\\gamma)(\\gamma))\n$$\n$$\nI_2 = (1+\\gamma^2) + 1 + (1+\\gamma^2 - \\gamma^2)\n$$\n$$\nI_2 = 1 + \\gamma^2 + 1 + 1 = 3 + \\gamma^2\n$$\n因此，对于简单剪切，我们发现第一和第二不变量是相同的。\n\n简单剪切下右 Cauchy–Green 张量的三个主不变量是：\n$$\nI_1 = 3 + \\gamma^2\n$$\n$$\nI_2 = 3 + \\gamma^2\n$$\n$$\nI_3 = 1\n$$\n问题要求将最终答案表示为单行矩阵 $\\big[I_1\\; I_2\\; I_3\\big]$。", "answer": "$$\n\\boxed{\n\\begin{bmatrix}\n3 + \\gamma^2  3 + \\gamma^2  1\n\\end{bmatrix}\n}\n$$", "id": "2656035"}, {"introduction": "在机器学习中，正则化（如 $L^2$ 权重衰减）是防止模型过拟合和提高泛化能力的常用技术。然而，在科学机器学习中，这种纯数据驱动的正则化可能与模型满足物理定律（如力学平衡）的目标产生冲突。本练习通过一个具体的编码任务，让您量化和探索物理损失与权重衰减惩罚项之间的权衡关系，并识别出过度正则化如何损害物理一致性 [@problem_id:2656054]。", "problem": "您将研究无量纲化设置下的一维弹性静力学平衡，并量化$L^2$权重衰减惩罚项与物理残差惩罚项之间的平衡如何影响参数化模型满足平衡的能力。考虑定义域$[0,1]$，常数杨氏模量$E=1$，以及均匀体力$b=1$。平衡的强形式为 $E\\,u''(x)+b=0$ (对于 $x\\in(0,1)$)，并满足狄利克雷边界条件 $u(0)=0$ 和 $u(1)=0$。您将使用一个能精确满足边界条件的参数化试函数来近似位移场：$u(x;\\boldsymbol{\\theta})=x(1-x)\\,p(x;\\boldsymbol{\\theta})$，其中 $p(x;\\boldsymbol{\\theta})=\\sum_{k=0}^{d}\\theta_k x^k$ 是一个次数为 $d$ 的多项式，其参数为 $\\boldsymbol{\\theta}\\in\\mathbb{R}^{d+1}$。在点 $x$ 处的物理残差为 $r(x;\\boldsymbol{\\theta})=E\\,u''(x;\\boldsymbol{\\theta})+b$。物理损失是在一组 $N_c$ 个内部配置点 $\\{x_i\\}_{i=1}^{N_c}$ 上的均方残差，即 $L_{\\mathrm{phys}}(\\boldsymbol{\\theta})=\\frac{1}{N_c}\\sum_{i=1}^{N_c} r(x_i;\\boldsymbol{\\theta})^2$。权重衰减惩罚项为 $L_{\\mathrm{wd}}(\\boldsymbol{\\theta})=\\|\\boldsymbol{\\theta}\\|_2^2$。总损失为 $L_{\\mathrm{tot}}(\\boldsymbol{\\theta})=\\lambda_{\\mathrm{phys}}\\,L_{\\mathrm{phys}}(\\boldsymbol{\\theta})+\\lambda_{\\mathrm{wd}}\\,L_{\\mathrm{wd}}(\\boldsymbol{\\theta})$，其中 $\\lambda_{\\mathrm{phys}}0$ 和 $\\lambda_{\\mathrm{wd}}\\ge 0$ 是用户指定的超参数。您的程序必须：(a) 将配置点集构造为 $N_c$ 个等间距的内部点 $x_i=\\frac{i}{N_c+1}$，其中 $i\\in\\{1,\\dots,N_c\\}$；(b) 对每对 $(\\lambda_{\\mathrm{phys}},\\lambda_{\\mathrm{wd}})$，通过最小化关于 $\\boldsymbol{\\theta}$ 的 $L_{\\mathrm{tot}}(\\boldsymbol{\\theta})$ 来训练参数化模型；以及 (c) 在一个包含 $N_{\\mathrm{eval}}$ 个内部点 $\\{\\hat{x}_j\\}_{j=1}^{N_{\\mathrm{eval}}}$（其中 $\\hat{x}_j=\\frac{j}{N_{\\mathrm{eval}}+1}$）的评估网格上，通过均方根残差 $R=\\sqrt{\\frac{1}{N_{\\mathrm{eval}}}\\sum_{j=1}^{N_{\\mathrm{eval}}} r(\\hat{x}_j;\\boldsymbol{\\theta})^2}$ 来评估平衡满足度。定义一个基准，其参数为 $\\lambda_{\\mathrm{phys}}=1.0$ 和 $\\lambda_{\\mathrm{wd}}=10^{-12}$，这接近于纯物理最小化，并计算其基准均方根残差 $R_0$。如果 $R/R_010$，则声明过度正则化损害了平衡。使用以下固定值：多项式次数 $d=6$，配置点数量 $N_c=200$，评估点数量 $N_{\\mathrm{eval}}=400$。所有量都是无量纲的，因此不需要物理单位；报告无量纲数。您的测试套件包含以下六个案例，每个案例都是一个有序对 $(\\lambda_{\\mathrm{phys}},\\lambda_{\\mathrm{wd}})$：\n- 案例 1：$(1.0,10^{-12})$。\n- 案例 2：$(1.0,10^{-2})$。\n- 案例 3：$(1.0,10^{2})$。\n- 案例 4：$(10^{-6},10^{-2})$。\n- 案例 5：$(10^{6},10^{-2})$。\n- 案例 6：$(1.0,10^{-8})$。\n您的程序应产生单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，每个案例对应一个布尔值，顺序与上面相同，当且仅当该案例的 $R/R_010$ 时，其对应的布尔值为 true。例如，您的程序必须打印一行形如“[true_or_false_case_1,true_or_false_case_2,...,true_or_false_case_6]”的内容。答案必须通过确定性数值线性代数计算得出；不允许任何随机化。最终输出必须严格匹配这种单行格式。", "solution": "所提出的问题是计算力学领域一个有效且适定的练习，它探讨了该领域与机器学习原理的交叉点。该问题要求通过最小化一个复合损失函数，来求解一维弹性静力学边值问题的近似解。任务的核心是分析在满足底层物理定律与惩罚模型复杂度之间的权衡，这是正则化回归和科学机器学习中的一个共同主题。所有给定的参数和条件在科学上都是合理的、一致的，并且足以推导出唯一的数值解。\n\n位移场 $u(x)$ 的控制方程是弹性静力学平衡的强形式：\n$$E u''(x) + b = 0, \\quad x \\in (0, 1)$$\n满足狄利克雷边界条件 $u(0)=0$ 和 $u(1)=0$。常数为杨氏模量 $E=1$ 和均匀体力 $b=1$。\n\n位移场通过一个为精确满足边界条件而设计的参数化试函数 $u(x; \\boldsymbol{\\theta})$ 来近似：\n$$u(x; \\boldsymbol{\\theta}) = x(1-x) p(x; \\boldsymbol{\\theta})$$\n其中 $p(x; \\boldsymbol{\\theta})$ 是一个次数为 $d=6$ 的多项式，其参数为 $\\boldsymbol{\\theta} = [\\theta_0, \\theta_1, \\dots, \\theta_d]^T \\in \\mathbb{R}^{d+1}$：\n$$p(x; \\boldsymbol{\\theta}) = \\sum_{k=0}^{d} \\theta_k x^k$$\n为建立优化问题，我们首先推导物理残差 $r(x; \\boldsymbol{\\theta})$。这需要求 $u(x; \\boldsymbol{\\theta})$ 的二阶导数：\n$$u(x; \\boldsymbol{\\theta}) = \\sum_{k=0}^{d} \\theta_k (x^{k+1} - x^{k+2})$$\n$$u'(x; \\boldsymbol{\\theta}) = \\sum_{k=0}^{d} \\theta_k ((k+1)x^k - (k+2)x^{k+1})$$\n$$u''(x; \\boldsymbol{\\theta}) = \\sum_{k=0}^{d} \\theta_k ((k+1)kx^{k-1} - (k+2)(k+1)x^k)$$\n物理残差定义为 $r(x; \\boldsymbol{\\theta}) = E u''(x; \\boldsymbol{\\theta}) + b$。当 $E=1$ 和 $b=1$ 时，它变为：\n$$r(x; \\boldsymbol{\\theta}) = \\left( \\sum_{k=0}^{d} \\theta_k ((k+1)kx^{k-1} - (k+2)(k+1)x^k) \\right) + 1$$\n这个表达式是关于参数 $\\boldsymbol{\\theta}$ 的线性表达式。我们可以将其写作 $r(x; \\boldsymbol{\\theta}) = \\mathbf{v}(x)^T \\boldsymbol{\\theta} + 1$，其中向量 $\\mathbf{v}(x)$ 的第 $k$ 个分量是 $\\theta_k$ 的系数，即 $v_k(x) = (k+1)kx^{k-1} - (k+2)(k+1)x^k$。\n\n待最小化的总损失函数是物理损失和权重衰减惩罚项的加权和：\n$$L_{\\mathrm{tot}}(\\boldsymbol{\\theta}) = \\lambda_{\\mathrm{phys}} L_{\\mathrm{phys}}(\\boldsymbol{\\theta}) + \\lambda_{\\mathrm{wd}} L_{\\mathrm{wd}}(\\boldsymbol{\\theta})$$\n物理损失 $L_{\\mathrm{phys}}(\\boldsymbol{\\theta})$ 是在 $N_c=200$ 个配置点 $\\{x_i\\}_{i=1}^{N_c}$ 上的均方残差：\n$$L_{\\mathrm{phys}}(\\boldsymbol{\\theta}) = \\frac{1}{N_c} \\sum_{i=1}^{N_c} r(x_i; \\boldsymbol{\\theta})^2$$\n我们定义一个矩阵 $A \\in \\mathbb{R}^{N_c \\times (d+1)}$，使得 $A_{ik} = v_k(x_i)$。在配置点处的残差向量可以写为 $A\\boldsymbol{\\theta} + \\mathbf{1}_{N_c}$，其中 $\\mathbf{1}_{N_c}$ 是一个长度为 $N_c$ 的全1向量。物理损失则为：\n$$L_{\\mathrm{phys}}(\\boldsymbol{\\theta}) = \\frac{1}{N_c} \\| A\\boldsymbol{\\theta} + \\mathbf{1}_{N_c} \\|_2^2$$\n权重衰减惩罚项是参数向量的$L^2$范数的平方：\n$$L_{\\mathrm{wd}}(\\boldsymbol{\\theta}) = \\|\\boldsymbol{\\theta}\\|_2^2 = \\boldsymbol{\\theta}^T \\boldsymbol{\\theta}$$\n将这些结合起来，总损失函数为：\n$$L_{\\mathrm{tot}}(\\boldsymbol{\\theta}) = \\frac{\\lambda_{\\mathrm{phys}}}{N_c} \\| A\\boldsymbol{\\theta} + \\mathbf{1}_{N_c} \\|_2^2 + \\lambda_{\\mathrm{wd}} \\|\\boldsymbol{\\theta}\\|_2^2$$\n这是关于 $\\boldsymbol{\\theta}$ 的二次函数。为了找到最小化此损失的最优参数 $\\boldsymbol{\\theta}^*$，我们计算 $L_{\\mathrm{tot}}(\\boldsymbol{\\theta})$ 关于 $\\boldsymbol{\\theta}$ 的梯度并将其设为零：\n$$\\nabla_{\\boldsymbol{\\theta}} L_{\\mathrm{tot}}(\\boldsymbol{\\theta}) = \\frac{\\lambda_{\\mathrm{phys}}}{N_c} \\nabla_{\\boldsymbol{\\theta}} \\left( (A\\boldsymbol{\\theta} + \\mathbf{1}_{N_c})^T (A\\boldsymbol{\\theta} + \\mathbf{1}_{N_c}) \\right) + \\lambda_{\\mathrm{wd}} \\nabla_{\\boldsymbol{\\theta}} (\\boldsymbol{\\theta}^T \\boldsymbol{\\theta}) = \\mathbf{0}$$\n$$\\nabla_{\\boldsymbol{\\theta}} L_{\\mathrm{tot}}(\\boldsymbol{\\theta}) = \\frac{\\lambda_{\\mathrm{phys}}}{N_c} (2A^T A \\boldsymbol{\\theta} + 2A^T \\mathbf{1}_{N_c}) + 2\\lambda_{\\mathrm{wd}} \\boldsymbol{\\theta} = \\mathbf{0}$$\n重新整理各项，得到一个标准线性方程组，也称为此正则化最小二乘问题的正规方程：\n$$\\left( \\frac{\\lambda_{\\mathrm{phys}}}{N_c} A^T A + \\lambda_{\\mathrm{wd}} I \\right) \\boldsymbol{\\theta} = -\\frac{\\lambda_{\\mathrm{phys}}}{N_c} A^T \\mathbf{1}_{N_c}$$\n其中 $I$ 是 $(d+1) \\times (d+1)$ 的单位矩阵。该系统形式为 $M\\boldsymbol{\\theta} = \\mathbf{y}$，其中：\n$$M = \\frac{\\lambda_{\\mathrm{phys}}}{N_c} A^T A + \\lambda_{\\mathrm{wd}} I$$\n$$\\mathbf{y} = -\\frac{\\lambda_{\\mathrm{phys}}}{N_c} A^T \\mathbf{1}_{N_c}$$\n对于每组给定的超参数 $(\\lambda_{\\mathrm{phys}}, \\lambda_{\\mathrm{wd}})$，我们求解这个 $ (d+1) \\times (d+1) $ 线性方程组来得到 $\\boldsymbol{\\theta}$。由于 $\\lambda_{\\mathrm{phys}}  0$ 和 $\\lambda_{\\mathrm{wd}} \\ge 0$（在所提供的测试案例中为严格正），且 $A^T A$ 是半正定的，因此矩阵 $M$ 保证是正定的，从而也是可逆的，确保了唯一解的存在。\n\n找到最优参数向量 $\\boldsymbol{\\theta}^*$ 后，我们在一个独立的、更精细的，由 $N_{\\mathrm{eval}}=400$ 个评估点 $\\{\\hat{x}_j\\}_{j=1}^{N_{\\mathrm{eval}}}$ 组成的网格上，使用均方根（RMS）残差 $R$ 来评估平衡方程的满足程度。\n每个评估点上的残差为 $r(\\hat{x}_j; \\boldsymbol{\\theta}^*) = u''(\\hat{x}_j; \\boldsymbol{\\theta}^*) + 1$。通过构建一个大小为 $N_{\\mathrm{eval}} \\times (d+1)$ 的评估矩阵 $A_{\\mathrm{eval}}$，其中 $(A_{\\mathrm{eval}})_{jk} = v_k(\\hat{x}_j)$，可以高效地计算该值。评估网格上的残差向量为 $\\mathbf{r}_{\\mathrm{eval}} = A_{\\mathrm{eval}}\\boldsymbol{\\theta}^* + \\mathbf{1}_{N_{\\mathrm{eval}}}$。\n那么，RMS残差 $R$ 为：\n$$R = \\sqrt{\\frac{1}{N_{\\mathrm{eval}}} \\sum_{j=1}^{N_{\\mathrm{eval}}} r(\\hat{x}_j; \\boldsymbol{\\theta}^*)^2} = \\sqrt{\\frac{1}{N_{\\mathrm{eval}}} \\|\\mathbf{r}_{\\mathrm{eval}}\\|_2^2}$$\n对所有测试案例重复此过程。第一个案例 $(\\lambda_{\\mathrm{phys}}, \\lambda_{\\mathrm{wd}}) = (1.0, 10^{-12})$ 作为基准，得出 $R_0$。对于每个后续案例，我们计算比率 $R/R_0$，并判断其是否超过阈值 $10$，这表明过度正则化已显著损害了模型满足物理平衡的能力。\n\n计算算法如下：\n1.  设置固定参数：$d=6$，$N_c=200$，$N_{\\mathrm{eval}}=400$。\n2.  为 $(\\lambda_{\\mathrm{phys}}, \\lambda_{\\mathrm{wd}})$ 定义测试案例集。\n3.  生成配置点 $x_i = \\frac{i}{N_c+1}$，其中 $i=1, \\dots, N_c$。\n4.  基于配置点构建矩阵 $A$。\n5.  生成评估点 $\\hat{x}_j = \\frac{j}{N_{\\mathrm{eval}}+1}$，其中 $j=1, \\dots, N_{\\mathrm{eval}}$。\n6.  基于评估点构建评估矩阵 $A_{\\mathrm{eval}}$。\n7.  初始化一个空列表以存储计算出的 $R$ 值。\n8.  对于每个测试案例 $(\\lambda_{\\mathrm{phys}}, \\lambda_{\\mathrm{wd}})$：\n    a. 构造系统矩阵 $M$ 和右侧向量 $\\mathbf{y}$。\n    b. 求解线性系统 $M\\boldsymbol{\\theta}^* = \\mathbf{y}$ 以得到 $\\boldsymbol{\\theta}^*$。\n    c. 计算评估网格上的残差向量 $\\mathbf{r}_{\\mathrm{eval}} = A_{\\mathrm{eval}}\\boldsymbol{\\theta}^* + \\mathbf{1}_{N_{\\mathrm{eval}}}$。\n    d. 计算RMS残差 $R$ 并将其追加到列表中。\n9.  从第一个测试案例中确定基准残差 $R_0$。\n10. 对每个存储的 $R$，评估布尔条件 $R/R_0  10$。\n11. 将布尔值列表格式化为所需的输出字符串。\n这个基于数值线性代数的确定性过程为该问题提供了一个完整而严谨的解决方案。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the 1D elastostatic problem using a parametric polynomial model\n    and evaluates the effect of regularization on equilibrium satisfaction.\n    \"\"\"\n    # Fixed values from the problem statement\n    d = 6\n    Nc = 200\n    N_eval = 400\n    \n    # Test cases for (lambda_phys, lambda_wd)\n    test_cases = [\n        (1.0, 10**-12),\n        (1.0, 10**-2),\n        (1.0, 10**2),\n        (10**-6, 10**-2),\n        (10**6, 10**-2),\n        (1.0, 10**-8),\n    ]\n\n    def construct_A_matrix(x_points, degree):\n        \"\"\"\n        Constructs the matrix A where A_ik is the coefficient of theta_k in u''(x_i).\n        A_ik = v_k(x_i) = (k+1)k*x_i^(k-1) - (k+2)(k+1)*x_i^k\n        \"\"\"\n        n_pts = len(x_points)\n        A = np.zeros((n_pts, degree + 1))\n        \n        #\n        # The term for u'' corresponding to theta_k is the second derivative of\n        # x^(k+1) - x^(k+2), which is (k+1)*k*x^(k-1) - (k+2)*(k+1)*x^k.\n        \n        # Handle k=0 separately to avoid issues with x**(-1)\n        # For k=0: (1)*0*x^(-1) - (2)*(1)*x^0 = -2\n        A[:, 0] = -2.0\n        \n        # For k = 1\n        for k in range(1, degree + 1):\n            term1 = k * (k + 1) * np.power(x_points, k - 1)\n            term2 = (k + 1) * (k + 2) * np.power(x_points, k)\n            A[:, k] = term1 - term2\n            \n        return A\n\n    # (a) Construct the collocation and evaluation grids\n    x_c = np.linspace(0, 1, Nc + 2)[1:-1]\n    x_eval = np.linspace(0, 1, N_eval + 2)[1:-1]\n    \n    A_c = construct_A_matrix(x_c, d)\n    A_eval = construct_A_matrix(x_eval, d)\n    \n    rms_residuals = []\n\n    # (b) Train the model for each hyperparameter pair\n    for lambda_phys, lambda_wd in test_cases:\n        # Set up the linear system M * theta = y\n        # M = (lambda_phys/Nc) * A_c.T @ A_c + lambda_wd * I\n        # y = -(lambda_phys/Nc) * A_c.T @ 1\n        \n        A_c_T_A_c = A_c.T @ A_c\n        I = np.identity(d + 1)\n        \n        M = (lambda_phys / Nc) * A_c_T_A_c + lambda_wd * I\n        \n        y = -(lambda_phys / Nc) * (A_c.T @ np.ones(Nc))\n        \n        # Solve for the optimal parameters theta\n        theta = np.linalg.solve(M, y)\n        \n        # (c) Evaluate equilibrium satisfaction on the evaluation grid\n        # Residual vector r = A_eval * theta + 1\n        r_eval = A_eval @ theta + np.ones(N_eval)\n        \n        # Root-mean-square residual R\n        R = np.sqrt(np.mean(r_eval**2))\n        rms_residuals.append(R)\n\n    # Define baseline and check for over-regularization\n    R0 = rms_residuals[0]\n    \n    results = [r / R0  10 for r in rms_residuals]\n\n    # Format the final output string\n    # E.g., \"[true,false,true]\"\n    output_str = f\"[{','.join(str(b).lower() for b in results)}]\"\n    \n    print(output_str)\n\nsolve()\n```", "id": "2656054"}, {"introduction": "数据驱动模型的一个核心挑战是界定其预测的可靠范围，这对于安全攸关的工程应用至关重要。一个模型在训练数据范围内的“插值”预测通常比在范围外的“外推”预测更可信。本练习要求您设计一个原则性的工作流程，用于区分这两种情况，并提出能量化外推预测稳定性的指标，确保模型的输出在物理上是合理的 [@problem_id:2656058]。", "problem": "一个数据驱动的本构模型通过一个学习到的函数 $\\hat{\\sigma}(\\varepsilon)$，将小应变张量 $\\varepsilon$ 映射到柯西应力张量 $\\sigma$，该函数在一个数据集 $\\mathcal{D}=\\{(\\varepsilon^{(i)},\\sigma^{(i)})\\}_{i=1}^{N}$ 上训练得到。假设为小应变，因此 $\\varepsilon=\\tfrac{1}{2}(\\nabla u+\\nabla u^{\\top})$ 是对称的，并设一个固定的向量化映射 $\\mathcal{V}$ 将 $\\varepsilon$ 的独立分量收集到一个向量 $e=\\mathcal{V}(\\varepsilon)\\in\\mathbb{R}^{d}$ 中，其中 $d\\in\\{3,4,6\\}$ 取决于运动学简化（例如，对于平面应力，$d=3$；对于三维情况，$d=6$）。训练输入为 $\\{e^{(i)}\\}_{i=1}^{N}\\subset\\mathbb{R}^{d}$。在实践中，一个关键问题是，一个查询应变 $e^{\\star}$ 是内插（即位于训练输入所张成的区域内）还是外推（即位于区域外），并且，如果是外推，预测的应力 $\\hat{\\sigma}(\\varepsilon^{\\star})$ 在连续介质力学的意义上是否稳定。\n\n仅使用基本定义和经过充分检验的事实，设计一个有原则的测试，用以在应变空间中区分内插和外推，并提出度量标准来量化外推应力预测的稳定性，该方式需与固体力学的增量稳定性要求兼容。该测试必须在输入（应变）空间中进行，并且不依赖于查询时无法获得的真实标签。稳定性度量必须可以从学习到的模型和训练数据中计算得出，并应与增量稳定性的概念（例如小扰动下切线模量的正定性）相关联。\n\n以下哪个选项提供了一个正确、完整且符合这些要求的程序？\n\nA. 在 $\\mathbb{R}^{d}$ 中构建训练应变的凸包 $\\operatorname{conv}(\\{e^{(i)}\\})$（对于各向同性材料，可以选择在将 $\\varepsilon$ 映射到应变不变量，例如 $\\varepsilon$ 的主不变量之后进行），例如通过对 $\\{e^{(i)}\\}$ 进行 Delaunay 三角剖分。如果 $e^{\\star}\\in\\operatorname{conv}(\\{e^{(i)}\\})$，则将查询 $e^{\\star}$ 分类为内插（等价地，如果 $e^{\\star}$ 可以表示为一个包含它的单纯形顶点的凸组合，其中非负重心权重之和为1）；否则分类为外推。对于外推的预测，通过以下方式量化其稳定性：(i) 一个到凸包的距离度量，例如 $e^{\\star}$ 到 $\\operatorname{conv}(\\{e^{(i)}\\})$ 的 Mahalanobis 距离，(ii) 在 $\\varepsilon^{\\star}$ 周围对 $\\hat{\\sigma}$ 的局部 Lipschitz 估计，通过在正交归一的应变方向上使用对称有限差分获得，(iii) 通过中心差分估计的一致性切线 $C(\\varepsilon^{\\star})=\\partial \\hat{\\sigma}/\\partial \\varepsilon$ 的对称部分的光谱，要求最小特征值严格为正且条件数有界，以表明增量稳定性，以及 (iv) 在 $\\varepsilon^{\\star}$ 处，独立训练的模型 $\\{\\hat{\\sigma}_{m}\\}$ 之间的集成方差，作为认知不确定性的度量。\n\nB. 计算 $e^{\\star}$ 与 $\\{e^{(i)}\\}$ 中其单个最近邻之间的欧几里得距离。如果该距离低于训练集中的平均最近邻距离，则标记为内插；否则为外推。使用训练均方误差和在 $\\mathcal{D}$ 上的决定系数来量化稳定性。不需要在应变空间中进行导数或几何测试。\n\nC. 在应力空间中构建凸包 $\\operatorname{conv}(\\{\\sigma^{(i)}\\})$，如果 $\\hat{\\sigma}(\\varepsilon^{\\star})\\in\\operatorname{conv}(\\{\\sigma^{(i)}\\})$，则将 $e^{\\star}$ 分类为内插；否则分类为外推。通过检查有限元分片测试来量化稳定性：用 $\\hat{\\sigma}(\\varepsilon^{\\star})$ 组装一个单元的线性动量平衡，并验证合节点力之和为零。如果和为零，则预测是稳定的。\n\nD. 将 $\\mathbb{R}^{d}$ 在 $\\{e^{(i)}\\}$ 周围划分为 Voronoi 单元，如果 $e^{\\star}$ 位于任何一个 Voronoi 单元中，则声明其为内插；否则为外推。通过在距离 $e^{\\star}$ 最近的训练点处评估的训练损失梯度的范数来量化稳定性；小的梯度范数意味着稳定性。\n\n选择一个选项，它能在输入（应变）空间中正确地区分内插与外推，并提出有原则且与固体力学中增量稳定性兼容的稳定性度量。", "solution": "问题陈述在数据驱动固体力学领域提出了一个有效且高度相关的问题。它要求制定一种有原则的方法，首先，对于一个学习到的本构模型，在输入应变空间中区分内插和外推；其次，以一种与连续介质力学原理一致的方式，提出用于量化预测稳定性的度量，特别是对于外推点。\n\n对问题陈述的验证过程如下：\n1.  **提取已知条件**：\n    *   学习到的本构映射: $\\hat{\\sigma}(\\varepsilon)$，从小应变张量 $\\varepsilon$ 到柯西应力张量 $\\sigma$。\n    *   训练数据集: $\\mathcal{D}=\\{(\\varepsilon^{(i)},\\sigma^{(i)})\\}_{i=1}^{N}$。\n    *   输入向量化: $e=\\mathcal{V}(\\varepsilon)\\in\\mathbb{R}^{d}$，其中 $\\mathcal{V}$ 是一个固定映射，且 $d\\in\\{3,4,6\\}$。\n    *   训练输入: $\\{e^{(i)}\\}_{i=1}^{N}\\subset\\mathbb{R}^{d}$。\n    *   查询输入: $e^{\\star}$。\n    *   要求1：内插/外推测试必须在输入（应变）空间中进行。\n    *   要求2：稳定性度量必须可从模型 $\\hat{\\sigma}$ 和数据 $\\mathcal{D}$ 计算。\n    *   要求3：稳定性度量必须与固体力学的增量稳定性概念（例如，切线模量的正定性）相关联。\n\n2.  **验证结论**：\n    *   **科学依据**：该问题基于连续介质力学（应力、应变、本构律、材料稳定性）和机器学习（内插与外推、不确定性量化）的既定原则。它解决了在将机器学习应用于安全关键的工程领域时的一个关键且现实的挑战。\n    *   **适定性**：问题清晰，要求具体，这使得对潜在解决方案进行严格和客观的评估成为可能。\n    *   **客观性**：语言精确、技术性强，没有歧义或主观论断。\n    *   **完整性**：问题陈述为制定一个有原则的解决方案提供了所有必要信息。\n\n因此，该问题陈述是 **有效的**。我将继续进行推导和评估。\n\n### 有原则的解决方案的推导\n\n**第1部分：内插与外推测试**\n训练输入集 $\\{e^{(i)}\\}_{i=1}^{N}$ 在 $d$ 维应变向量空间 $\\mathbb{R}^d$ 中形成一个离散点云。内插域最稳健且在数学上最合理的定义是这些点的 **凸包**，记为 $\\operatorname{conv}(\\{e^{(i)}\\})$。如果一个查询点 $e^{\\star}$ 可以表示为训练点的凸组合，即 $e^{\\star} \\in \\operatorname{conv}(\\{e^{(i)}\\})$，则它被认为是内插。否则，如果 $e^{\\star}$ 位于此凸包之外，则为外推。这是标准定义，因为凸包内的任何点都被训练数据“包围”，而外部的任何点则没有。此测试按要求严格在输入（应变）空间中进行。对于具有对称性（如各向同性）的材料，此分析可以在较低维度的应变不变量空间中执行，这是一般原则的一个有效且高效的特例化。\n\n**第2部分：稳定性度量**\n材料响应的稳定性是固体力学的基石。**增量材料稳定性**要求一个小的、任意的应变增量 $\\dot{\\varepsilon}$ 导致一个正的功增量，即 $\\dot{\\sigma}:\\dot{\\varepsilon}  0$。通过本构关系 $\\dot{\\sigma} = C:\\dot{\\varepsilon}$，这转化为要求四阶切线模量张量 $C$ 必须是正定的。\n\n对于一个学习到的模型 $\\hat{\\sigma}(\\varepsilon)$，相应的切线是应力预测对应变输入的雅可比矩阵：\n$$\nC(\\varepsilon) = \\frac{\\partial \\hat{\\sigma}(\\varepsilon)}{\\partial \\varepsilon}\n$$\n在向量化形式下，这是雅可比矩阵 $C(e) = \\frac{\\partial \\hat{s}(e)}{\\partial e}$，其中 $\\hat{s}$ 是向量化的应力预测。因此，主要的力学稳定性度量是在查询点 $C(e^{\\star})$ 处对此切线矩阵的分析。\n1.  **正定性**：稳定性要求 $C(e^{\\star})$ 是正定的。检查这一点的最直接方法是计算其特征值。由于真实的切线是对称的，我们应该分析计算出的雅可比矩阵的对称部分，即 $\\frac{1}{2}(C + C^{\\top})$。其所有特征值必须严格为正：$\\lambda_{\\min}\\left(\\frac{1}{2}(C(e^{\\star}) + C(e^{\\star})^{\\top})\\right)  0$。\n2.  **条件数**：条件数 $\\kappa(C) = \\lambda_{\\max}/\\lambda_{\\min}$ 量化了切线接近奇异（不稳定）的程度。大的条件数表示病态和接近不稳定点。\n\n这些度量必须辅以衡量模型操作点与其训练域距离的指标，因为仅靠力学稳定性并不能保证预测的准确性。\n3.  **外推程度**：一个量化从 $e^{\\star}$ 到训练域 $\\operatorname{conv}(\\{e^{(i)}\\})$ 距离的度量是至关重要的。这可以是欧几里得距离，或者更稳健地，可以是考虑了数据协方差结构的 Mahalanobis 距离。\n4.  **认知不确定性**：在外推时，由于缺乏约束性数据，模型的预测变得不那么确定。这被称为认知不确定性。一种标准的量化方法是在相同的数据上训练一组模型（集成）$\\{\\hat{\\sigma}_m\\}$（使用不同的随机初始化或自助采样样本），并测量它们在 $e^{\\star}$ 处的预测方差或标准差。高方差表示低置信度。\n\n一个全面的程序应结合这些要素。\n\n### 对所提供选项的评估\n\n**选项 A:**\n*   **内插/外推测试**：提出使用训练应变的凸包 $\\operatorname{conv}(\\{e^{(i)}\\})$，并基于 Delaunay 三角剖分和重心坐标进行检查。这与上面推导出的有原则的方法完全一致。它还正确地提到了对于各向同性材料可以简化为应变不变量的有效方法。\n*   **稳定性度量**：提出了一套四个度量标准：（i）到凸包的距离度量（例如，Mahalanobis 距离），量化外推的程度；（ii）局部 Lipschitz 估计，测量学习到的函数的局部平滑度或剧烈程度；（iii）计算出的切线模量 $C(\\varepsilon^{\\star})$ 的谱分析，以检查正定性和有界条件数，直接解决了力学稳定性的核心要求；以及（iv）集成方差，以量化认知不确定性。\n*   **结论**：此选项正确且完整。它提出了一个严谨、多方面且科学合理的程序，完全解决了问题陈述的所有约束和要求。**正确**。\n\n**选项 B:**\n*   **内插/外推测试**：依赖于最近邻距离阈值。这是一种糟糕的启发式方法，因为一个点可能离单个训练样本很近，但仍然远远超出了数据分布的全局支持范围。它在许多情况下无法正确识别外推。\n*   **稳定性度量**：建议使用像均方误差和 $R^2$ 这样的全局训练指标。这些指标评估模型在训练数据上的平均性能，但对于一个*新的*、特定的查询点的稳定性或可靠性，它们不提供任何信息。\n*   **结论**：此选项在其两个组成部分上都存在根本性缺陷。**不正确**。\n\n**选项 C:**\n*   **内插/外推测试**：在输出（应力）空间中操作，这违反了问题中明确要求的在输入（应变）空间中工作的规定。此外，对于一个严重外推的应变，模型可能产生一个看似合理（在应力训练范围内）的应力值，这使得该测试对于其预期目的不可靠。\n*   **稳定性度量**：提议通过检查单元上的节点力之和是否为零来进行“分片测试”。这是对恒定应力状态下静态平衡的检查，该条件总是满足的，因此是同义反复。它与*增量材料稳定性*的概念毫无关联，后者由切线模量决定。\n*   **结论**：此选项违反了一个关键约束，并且误解了外推和材料稳定性的基本概念。**不正确**。\n\n**选项 D:**\n*   **内插/外推测试**：使用 Voronoi 单元。Voronoi 镶嵌划分了整个空间 $\\mathbb{R}^d$，这意味着每个查询点 $e^{\\star}$ 都会落入某个单元中。根据这个定义，外推不存在，这使得测试毫无用处，并表明对该概念的误解。\n*   **稳定性度量**：建议使用训练损失的梯度。训练损失梯度用于在优化过程中更新模型参数；它不是用于诊断新查询点预测稳定性的工具。此度量在此上下文中不相关且无意义。\n*   **结论**：此选项基于一系列关于几何分析和机器学习的概念性错误。**不正确**。\n\n基于彻底的分析，只有选项 A 提出了一个正确、有原则且完整的程序。", "answer": "$$\\boxed{A}$$", "id": "2656058"}]}