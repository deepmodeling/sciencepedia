{"hands_on_practices": [{"introduction": "掌握超弹性模型的第一步是能够针对给定的变形模式，解析地推导出应力响应。本练习将聚焦于简单剪切这一基本变形，并展示如何应用 Gent 模型。通过这个实践，您将把运动学不变量与最终的应力状态联系起来，从而巩固从应变能函数推导本构关系的基础步骤 [@problem_id:2666925]。", "problem": "考虑一个各向同性、均匀、超弹性体正在经历有限简单剪切变形，其变形梯度为\n$$\n\\mathbf{F}=\\begin{bmatrix}1 & \\gamma & 0\\\\ 0 & 1 & 0\\\\ 0 & 0 & 1\\end{bmatrix},\n$$\n其中 $\\gamma$ 是剪切参数。从右 Cauchy–Green 变形张量 $\\mathbf{C}=\\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$、第一和第二不变量 $I_1=\\operatorname{tr}\\mathbf{C}$ 和 $I_2=\\tfrac{1}{2}[(\\operatorname{tr}\\mathbf{C})^2-\\operatorname{tr}(\\mathbf{C}^2)]$ 以及雅可比行列式 $J=\\det\\mathbf{F}$ 的运动学定义出发，计算给定 $\\mathbf{F}$ 的 $\\mathbf{C}$、$I_1$、$I_2$ 和 $J$。使用形式为 $W(\\mathbf{F})=W_{\\mathrm{iso}}(\\bar{\\mathbf{F}})+U(J)$（其中 $\\bar{\\mathbf{F}}=J^{-1/3}\\mathbf{F}$）的应变能函数的标准等容-体积分解，基于这些不变量解释在此变形中剪切畸变相对于体积畸变的相对作用。然后，将 $W_{\\mathrm{iso}}$ 特定为 Gent 模型，\n$$\nW_{\\mathrm{iso}}(I_1)=-\\frac{\\mu J_m}{2}\\,\\ln\\!\\Big(1-\\frac{I_1-3}{J_m}\\Big),\n$$\n其中 $\\mu$ 为剪切模量，$J_m>0$ 为极限链可伸长性参数，并假设等容响应是不可压缩的。推导由此产生的 Cauchy 剪应力分量 $\\sigma_{12}(\\gamma)$ 的闭合形式。将最终答案表示为关于 $\\gamma$、$\\mu$ 和 $J_m$ 的单个解析表达式。无需四舍五入，也无需在最终答案中包含单位。", "solution": "所陈述的问题具有科学依据、提法恰当且客观。所有定义和所需参数均已提供，所述目标可通过连续介质力学的标准方法实现。我们开始求解。\n\n首先，我们计算所需的运动学量。变形梯度 $\\mathbf{F}$ 给出如下\n$$\n\\mathbf{F} = \\begin{bmatrix} 1 & \\gamma & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\n其转置为\n$$\n\\mathbf{F}^{\\mathsf{T}} = \\begin{bmatrix} 1 & 0 & 0 \\\\ \\gamma & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\n右 Cauchy–Green 变形张量 $\\mathbf{C}$ 定义为 $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$。执行矩阵乘法：\n$$\n\\mathbf{C} = \\begin{bmatrix} 1 & 0 & 0 \\\\ \\gamma & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} 1 & \\gamma & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} (1)(1)+(\\gamma)(0)+(0)(0) & (1)(\\gamma)+(\\gamma)(1)+(0)(0) & (1)(0)+(\\gamma)(0)+(0)(1) \\\\ (\\gamma)(1)+(1)(0)+(0)(0) & (\\gamma)(\\gamma)+(1)(1)+(0)(0) & (\\gamma)(0)+(1)(0)+(0)(1) \\\\ (0)(1)+(0)(0)+(1)(0) & (0)(\\gamma)+(0)(1)+(1)(0) & (0)(0)+(0)(0)+(1)(1) \\end{bmatrix} = \\begin{bmatrix} 1 & \\gamma & 0 \\\\ \\gamma & 1+\\gamma^2 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\n第一主不变量 $I_1$ 是 $\\mathbf{C}$ 的迹：\n$$\nI_1 = \\operatorname{tr}(\\mathbf{C}) = 1 + (1+\\gamma^2) + 1 = 3 + \\gamma^2\n$$\n为计算第二主不变量 $I_2$，我们首先需要 $\\operatorname{tr}(\\mathbf{C}^2)$。我们计算 $\\mathbf{C}^2$：\n$$\n\\mathbf{C}^2 = \\begin{bmatrix} 1 & \\gamma & 0 \\\\ \\gamma & 1+\\gamma^2 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} 1 & \\gamma & 0 \\\\ \\gamma & 1+\\gamma^2 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 1+\\gamma^2 & 2\\gamma+\\gamma^3 & 0 \\\\ 2\\gamma+\\gamma^3 & 1+3\\gamma^2+\\gamma^4 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\n$\\mathbf{C}^2$ 的迹为：\n$$\n\\operatorname{tr}(\\mathbf{C}^2) = (1+\\gamma^2) + (1+3\\gamma^2+\\gamma^4) + 1 = 3+4\\gamma^2+\\gamma^4\n$$\n现在我们计算 $I_2 = \\frac{1}{2}[(\\operatorname{tr}\\mathbf{C})^2 - \\operatorname{tr}(\\mathbf{C}^2)]$：\n$$\nI_2 = \\frac{1}{2} \\left[ (3+\\gamma^2)^2 - (3+4\\gamma^2+\\gamma^4) \\right] = \\frac{1}{2} \\left[ (9+6\\gamma^2+\\gamma^4) - (3+4\\gamma^2+\\gamma^4) \\right] = \\frac{1}{2} (6+2\\gamma^2) = 3+\\gamma^2\n$$\n最后，雅可比行列式 $J$ 是 $\\mathbf{F}$ 的行列式：\n$$\nJ = \\det(\\mathbf{F}) = 1(1 \\cdot 1 - 0 \\cdot 0) - \\gamma(0 \\cdot 1 - 0 \\cdot 0) + 0 = 1\n$$\n$J=1$ 的值表明变形是等容的，即体积保持不变。应变能函数分解 $W(\\mathbf{F}) = W_{\\mathrm{iso}}(\\bar{\\mathbf{F}}) + U(J)$ 将能量分为由形状改变（畸变）引起的部分 $W_{\\mathrm{iso}}$ 和由体积改变引起的部分 $U(J)$。由于 $J=1$，体积项 $U(1)$ 是一个常数，其对应力（来自能量的导数）的贡献为零。因此，整个能量响应都归因于剪切畸变。不变量 $I_1$ 和 $I_2$ 与其在未变形状态下（此时 $\\gamma=0$，因此 $I_1=3, I_2=3$）的值相差 $\\gamma^2$，这个差值量化了剪切畸变的程度。对于此变形，$\\bar{\\mathbf{F}}=J^{-1/3}\\mathbf{F} = \\mathbf{F}$，所以修正不变量与标准不变量相同，即 $\\bar{I}_1 = I_1$ 和 $\\bar{I}_2 = I_2$。\n\n接下来，我们推导 Cauchy 剪应力 $\\sigma_{12}$。对于不可压缩的各向同性超弹性材料，Cauchy 应力张量 $\\boldsymbol{\\sigma}$ 由下式给出\n$$\n\\boldsymbol{\\sigma} = -p\\mathbf{I} + 2 \\frac{\\partial W}{\\partial I_1} \\mathbf{B} - 2 \\frac{\\partial W}{\\partial I_2} \\mathbf{B}^{-1}\n$$\n其中 $p$ 是由不可压缩性约束产生的静水压力，$\\mathbf{I}$ 是单位张量，$\\mathbf{B} = \\mathbf{F}\\mathbf{F}^{\\mathsf{T}}$ 是左 Cauchy–Green 变形张量。\n\n给定的 Gent 模型纯粹是 $I_1$ 的函数：$W = W_{\\mathrm{iso}}(I_1) = -\\frac{\\mu J_m}{2}\\,\\ln(1-\\frac{I_1-3}{J_m})$。因此，关于 $I_2$ 的导数为零：$\\frac{\\partial W}{\\partial I_2} = 0$。应力表达式简化为：\n$$\n\\boldsymbol{\\sigma} = -p\\mathbf{I} + 2 \\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1} \\mathbf{B}\n$$\n分量 $\\sigma_{12}$ 由下式给出：\n$$\n\\sigma_{12} = -p\\delta_{12} + 2 \\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1} B_{12}\n$$\n由于克罗内克 $\\delta$ $\\delta_{12} = 0$，压力项对剪应力没有贡献。我们需要计算 $B_{12}$ 和 $\\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1}$。\n首先，我们求 $\\mathbf{B}$：\n$$\n\\mathbf{B} = \\mathbf{F}\\mathbf{F}^{\\mathsf{T}} = \\begin{bmatrix} 1 & \\gamma & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} 1 & 0 & 0 \\\\ \\gamma & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} = \\begin{bmatrix} 1+\\gamma^2 & \\gamma & 0 \\\\ \\gamma & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\n由此，我们确定 $B_{12}=\\gamma$。\n\n接下来，我们计算 Gent 应变能函数关于 $I_1$ 的导数：\n$$\n\\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1} = \\frac{\\partial}{\\partial I_1} \\left[ -\\frac{\\mu J_m}{2} \\ln \\left( 1 - \\frac{I_1-3}{J_m} \\right) \\right]\n$$\n使用链式法则，我们得到：\n$$\n\\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1} = -\\frac{\\mu J_m}{2} \\cdot \\frac{1}{1 - \\frac{I_1-3}{J_m}} \\cdot \\left( -\\frac{1}{J_m} \\right) = \\frac{\\mu}{2} \\cdot \\frac{1}{\\frac{J_m - (I_1-3)}{J_m}} = \\frac{\\mu J_m}{2(J_m - I_1 + 3)}\n$$\n代入 $I_1 = 3 + \\gamma^2$ 的表达式：\n$$\n\\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1} = \\frac{\\mu J_m}{2(J_m - (3+\\gamma^2) + 3)} = \\frac{\\mu J_m}{2(J_m - \\gamma^2)}\n$$\n最后，我们组合出 $\\sigma_{12}$ 的表达式：\n$$\n\\sigma_{12} = 2 \\frac{\\partial W_{\\mathrm{iso}}}{\\partial I_1} B_{12} = 2 \\left( \\frac{\\mu J_m}{2(J_m - \\gamma^2)} \\right) (\\gamma) = \\frac{\\mu \\gamma J_m}{J_m - \\gamma^2}\n$$\n这就是 Cauchy 剪应力分量 $\\sigma_{12}$ 的闭合形式表达式。", "answer": "$$\n\\boxed{\\frac{\\mu \\gamma J_m}{J_m - \\gamma^2}}\n$$", "id": "2666925"}, {"introduction": "虽然解析解能提供深刻的洞察力，但许多实际问题需要依赖数值方法求解。本练习通过处理可压缩 Ogden 材料在单轴拉伸下的响应，架起了从纯理论分析到计算力学的桥梁。您将首先推导出决定材料横向收缩的控制方程，然后编写一个数值求解器来找到其解，这对于有限元分析和材料仿真而言是一项至关重要的技能 [@problem_id:2666958]。", "problem": "考虑一个可压缩各向同性超弹性固体，该固体由具有体积-等容分离的 $N$ 项 Ogden 应变能密度模型描述。设主伸长为 $\\lambda_1$、$\\lambda_2$ 和 $\\lambda_3$，总雅可比行列式为 $J = \\lambda_1 \\lambda_2 \\lambda_3$，等容主伸长为 $\\bar{\\lambda}_k = J^{-1/3} \\lambda_k$，其中 $k \\in \\{1,2,3\\}$。应变能密度为\n$$\nW(\\lambda_1,\\lambda_2,\\lambda_3) \\;=\\; \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i^2} \\left( \\bar{\\lambda}_1^{\\alpha_i} + \\bar{\\lambda}_2^{\\alpha_i} + \\bar{\\lambda}_3^{\\alpha_i} - 3 \\right) \\;+\\; U(J),\n$$\n其中体积能由下式给出\n$$\nU(J) \\;=\\; \\frac{\\kappa}{2} \\left( \\ln J \\right)^2,\n$$\n这里 $\\mu_i$ 是剪切模量，单位为帕斯卡 (Pa)，$\\alpha_i$ 是无量纲的 Ogden 指数，$\\kappa$ 是体积模量，单位为帕斯卡 (Pa)。假设主柯西应力 $\\sigma_k$ 通过 Kirchhoff 应力 $\\tau_k = \\lambda_k \\,\\partial W/\\partial \\lambda_k$ 和 $\\sigma_k = \\tau_k/J$ 从超弹性导出。\n\n在单轴加载下，设纵向伸长为 $\\lambda_\\ell$，两个相等的横向伸长为 $\\lambda_t$，因此 $(\\lambda_1,\\lambda_2,\\lambda_3) = (\\lambda_\\ell,\\lambda_t,\\lambda_t)$。横向表面是无牵引的，因此横向柯西应力必须为零，即 $\\sigma_2 = \\sigma_3 = 0$。\n\n任务：仅从上述定义出发，通过在横向方向上强制施加无牵引条件，推导出确定横向收缩 $\\lambda_t$ 作为 $\\lambda_\\ell$、$\\{\\mu_i\\}_{i=1}^N$、$\\{\\alpha_i\\}_{i=1}^N$ 和 $\\kappa$ 的函数的标量非线性方程。然后，实现一个稳健的数值求解器来计算满足每个以下测试用例的无牵引条件的 $\\lambda_t$。将每个 $\\lambda_t$ 表示为四舍五入到 $10$ 位小数的无量纲浮点数。\n\n使用以下测试套件，其中所有模量均以帕斯卡 (Pa) 给出，$\\lambda_\\ell$ 是无量纲的，$N$ 是 Ogden 项数：\n\n- 测试用例 $1$（近不可压缩，拉伸）：$N = 1$，$\\mu_1 = 5.0 \\times 10^5$，$\\alpha_1 = 2.0$，$\\kappa = 1.0 \\times 10^8$，$\\lambda_\\ell = 1.2$。\n- 测试用例 $2$（近不可压缩，压缩）：$N = 1$，$\\mu_1 = 5.0 \\times 10^5$，$\\alpha_1 = 2.0$，$\\kappa = 1.0 \\times 10^8$，$\\lambda_\\ell = 0.8$。\n- 测试用例 $3$（更具可压缩性，拉伸）：$N = 1$，$\\mu_1 = 5.0 \\times 10^5$，$\\alpha_1 = 2.0$，$\\kappa = 1.0 \\times 10^6$，$\\lambda_\\ell = 1.2$。\n- 测试用例 $4$（两项 Ogden，更强的拉伸伸长）：$N = 2$，$\\mu_1 = 2.0 \\times 10^5$，$\\alpha_1 = 1.3$，$\\mu_2 = 3.0 \\times 10^5$，$\\alpha_2 = 5.0$，$\\kappa = 5.0 \\times 10^7$，$\\lambda_\\ell = 1.5$。\n- 测试用例 $5$（两项 Ogden，温和的拉伸伸长）：$N = 2$，$\\mu_1 = 2.0 \\times 10^5$，$\\alpha_1 = 1.3$，$\\mu_2 = 3.0 \\times 10^5$，$\\alpha_2 = 5.0$，$\\kappa = 5.0 \\times 10^7$，$\\lambda_\\ell = 1.05$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，顺序与测试用例相同，例如 $[\\lambda_{t,1},\\lambda_{t,2},\\lambda_{t,3},\\lambda_{t,4},\\lambda_{t,5}]$，其中每个条目都四舍五入到 $10$ 位小数并且是无量纲的。", "solution": "对用户提供的问题陈述进行严格验证。\n\n### 步骤 1：提取已知条件\n- **应变能密度函数**：\n$$\nW(\\lambda_1, \\lambda_2, \\lambda_3) = \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i^2} \\left( \\bar{\\lambda}_1^{\\alpha_i} + \\bar{\\lambda}_2^{\\alpha_i} + \\bar{\\lambda}_3^{\\alpha_i} - 3 \\right) + U(J)\n$$\n- **体积能**：\n$$\nU(J) = \\frac{\\kappa}{2} (\\ln J)^2\n$$\n- **运动学定义**：\n  - 主伸长：$\\lambda_1, \\lambda_2, \\lambda_3$。\n  - 雅可比行列式（体积比）：$J = \\lambda_1 \\lambda_2 \\lambda_3$。\n  - 等容主伸长：$\\bar{\\lambda}_k = J^{-1/3} \\lambda_k$ for $k \\in \\{1, 2, 3\\}$。\n- **材料参数**：\n  - $\\mu_i$：剪切模量 (Pa)。\n  - $\\alpha_i$：无量纲 Ogden 指数。\n  - $\\kappa$：体积模量 (Pa)。\n- **应力关系**：主柯西应力 $\\sigma_k$ 从 Kirchhoff 应力 $\\tau_k$ 导出。\n$$\n\\tau_k = \\lambda_k \\frac{\\partial W}{\\partial \\lambda_k} \\quad \\text{和} \\quad \\sigma_k = \\frac{\\tau_k}{J}\n$$\n- **加载条件**：\n  - 单轴加载：$(\\lambda_1, \\lambda_2, \\lambda_3) = (\\lambda_\\ell, \\lambda_t, \\lambda_t)$，其中 $\\lambda_\\ell$ 是纵向伸长，$\\lambda_t$ 是横向伸长。\n- **边界条件**：\n  - 无牵引横向表面：$\\sigma_2 = \\sigma_3 = 0$。\n- **任务**：\n  1. 推导 $\\lambda_t$ 作为给定参数（$\\lambda_\\ell, \\{\\mu_i\\}, \\{\\alpha_i\\}, \\kappa$）的函数的标量非线性方程。\n  2. 实现一个数值求解器，为五个特定的测试用例找到 $\\lambda_t$。\n- **测试用例**：\n  1. $N=1, \\mu_1 = 5.0 \\times 10^5~\\text{Pa}, \\alpha_1 = 2.0, \\kappa = 1.0 \\times 10^8~\\text{Pa}, \\lambda_\\ell = 1.2$。\n  2. $N=1, \\mu_1 = 5.0 \\times 10^5~\\text{Pa}, \\alpha_1 = 2.0, \\kappa = 1.0 \\times 10^8~\\text{Pa}, \\lambda_\\ell = 0.8$。\n  3. $N=1, \\mu_1 = 5.0 \\times 10^5~\\text{Pa}, \\alpha_1 = 2.0, \\kappa = 1.0 \\times 10^6~\\text{Pa}, \\lambda_\\ell = 1.2$。\n  4. $N=2, \\mu_1 = 2.0 \\times 10^5~\\text{Pa}, \\alpha_1 = 1.3, \\mu_2 = 3.0 \\times 10^5~\\text{Pa}, \\alpha_2 = 5.0, \\kappa = 5.0 \\times 10^7~\\text{Pa}, \\lambda_\\ell = 1.5$。\n  5. $N=2, \\mu_1 = 2.0 \\times 10^5~\\text{Pa}, \\alpha_1 = 1.3, \\mu_2 = 3.0 \\times 10^5~\\text{Pa}, \\alpha_2 = 5.0, \\kappa = 5.0 \\times 10^7~\\text{Pa}, \\lambda_\\ell = 1.05$。\n\n### 步骤 2：使用提取的已知条件进行验证\n根据验证标准对问题进行评估：\n- **科学基础**：该问题基于 Ogden 模型，这是连续介质力学中一种标准且广泛使用的超弹性本构律。体积-等容分解的公式和应力关系都是标准的。此标准已满足。\n- **适定性**：该问题是适定的。它指定了确定运动学响应所需的本构模型、加载和边界条件。任务是通过求解从边界条件 $\\sigma_2=0$ 导出的单个标量方程来找到单个变量 $\\lambda_t$。这将导出一个唯一解。\n- **客观性**：问题以精确、客观的数学和物理术语陈述。所有参数都明确定义。此标准已满足。\n- **完整性和一致性**：问题提供了所有必要的方程、参数和条件。没有矛盾之处。\n- **真实性**：测试用例中提供的材料参数和伸长值对于类橡胶材料是物理上真实的。\n\n该问题未表现出任何无效性缺陷。这是一个标准的、定义明确的固体力学问题。\n\n### 步骤 3：结论与行动\n该问题是**有效的**。将推导并实施一个解。\n\n### 控制方程的推导\n主要目标是推导横向柯西应力 $\\sigma_2$（或 $\\sigma_3$）的表达式，并将其设为零。\n\n首先，我们计算应变能密度 $W$ 相对于主伸长 $\\lambda_k$ 的导数。函数 $W$ 由等容部分 $W_{iso}$ 和体积部分 $U(J)$ 组成。\n$$\nW = W_{iso} + U(J) = \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i^2} \\left( \\sum_{j=1}^{3} \\bar{\\lambda}_j^{\\alpha_i} - 3 \\right) + \\frac{\\kappa}{2} (\\ln J)^2\n$$\n$W$ 相对于 $\\lambda_k$ 的导数是：\n$$\n\\frac{\\partial W}{\\partial \\lambda_k} = \\frac{\\partial W_{iso}}{\\partial \\lambda_k} + \\frac{\\partial U(J)}{\\partial \\lambda_k}\n$$\n等容部分的导数需要应用链式法则，因为 $\\bar{\\lambda}_j = J^{-1/3}\\lambda_j$ 且 $J$ 依赖于所有 $\\lambda_k$。$\\bar{\\lambda}_j$ 相对于 $\\lambda_k$ 的导数是：\n$$\n\\frac{\\partial \\bar{\\lambda}_j}{\\partial \\lambda_k} = \\frac{\\partial}{\\partial \\lambda_k}(J^{-1/3} \\lambda_j) = (-\\frac{1}{3}J^{-4/3} \\frac{\\partial J}{\\partial \\lambda_k})\\lambda_j + J^{-1/3}\\delta_{jk} = (-\\frac{1}{3}J^{-4/3} \\frac{J}{\\lambda_k})\\lambda_j + J^{-1/3}\\delta_{jk} = \\frac{1}{\\lambda_k} \\left( -\\frac{1}{3}\\bar{\\lambda}_j + \\bar{\\lambda}_k\\delta_{jk} \\right)\n$$\n其中 $\\delta_{jk}$ 是克罗内克 $\\delta$。\n$W_{iso}$ 的导数则为：\n$$\n\\frac{\\partial W_{iso}}{\\partial \\lambda_k} = \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i^2} \\sum_{j=1}^{3} \\alpha_i \\bar{\\lambda}_j^{\\alpha_i-1} \\frac{\\partial \\bar{\\lambda}_j}{\\partial \\lambda_k} = \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\frac{1}{\\lambda_k} \\sum_{j=1}^{3} \\bar{\\lambda}_j^{\\alpha_i} \\left( -\\frac{1}{3} + \\delta_{jk} \\right) = \\frac{1}{\\lambda_k} \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\bar{\\lambda}_k^{\\alpha_i} - \\frac{1}{3} \\sum_{j=1}^{3} \\bar{\\lambda}_j^{\\alpha_i} \\right)\n$$\n体积部分的导数是：\n$$\n\\frac{\\partial U(J)}{\\partial \\lambda_k} = \\frac{d U}{d J} \\frac{\\partial J}{\\partial \\lambda_k} = \\left( \\frac{\\kappa}{2} \\cdot 2 \\ln J \\cdot \\frac{1}{J} \\right) \\left( \\frac{J}{\\lambda_k} \\right) = \\frac{\\kappa \\ln J}{\\lambda_k}\n$$\n将这些结合起来，得到 Kirchhoff 应力 $\\tau_k = \\lambda_k \\frac{\\partial W}{\\partial \\lambda_k}$：\n$$\n\\tau_k = \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\bar{\\lambda}_k^{\\alpha_i} - \\frac{1}{3} \\sum_{j=1}^{3} \\bar{\\lambda}_j^{\\alpha_i} \\right) + \\kappa \\ln J\n$$\n柯西应力 $\\sigma_k$ 是 $\\tau_k/J$：\n$$\n\\sigma_k = \\frac{1}{J} \\left[ \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\bar{\\lambda}_k^{\\alpha_i} - \\frac{1}{3} \\sum_{j=1}^{3} \\bar{\\lambda}_j^{\\alpha_i} \\right) + \\kappa \\ln J \\right]\n$$\n现在，我们应用单轴加载条件：$(\\lambda_1, \\lambda_2, \\lambda_3) = (\\lambda_\\ell, \\lambda_t, \\lambda_t)$。\n雅可比行列式是 $J = \\lambda_\\ell \\lambda_t^2$。等容伸长是：\n$$\n\\bar{\\lambda}_1 = \\bar{\\lambda}_\\ell = J^{-1/3}\\lambda_\\ell = (\\lambda_\\ell \\lambda_t^2)^{-1/3}\\lambda_\\ell = \\lambda_\\ell^{2/3} \\lambda_t^{-2/3}\n$$\n$$\n\\bar{\\lambda}_2 = \\bar{\\lambda}_3 = \\bar{\\lambda}_t = J^{-1/3}\\lambda_t = (\\lambda_\\ell \\lambda_t^2)^{-1/3}\\lambda_t = \\lambda_\\ell^{-1/3} \\lambda_t^{1/3}\n$$\n等容伸长的幂次之和为 $\\sum_{j=1}^{3} \\bar{\\lambda}_j^{\\alpha_i} = \\bar{\\lambda}_\\ell^{\\alpha_i} + 2\\bar{\\lambda}_t^{\\alpha_i}$。\n\n无牵引条件是 $\\sigma_2 = 0$。使用 $k=2$ 时的 $\\sigma_k$ 表达式：\n$$\n\\sigma_2 = \\frac{1}{J} \\left[ \\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\bar{\\lambda}_2^{\\alpha_i} - \\frac{1}{3} (\\bar{\\lambda}_1^{\\alpha_i} + 2\\bar{\\lambda}_2^{\\alpha_i}) \\right) + \\kappa \\ln J \\right] = 0\n$$\n因为 $J>0$，所以方括号中的项必须为零：\n$$\n\\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\frac{1}{3}\\bar{\\lambda}_2^{\\alpha_i} - \\frac{1}{3}\\bar{\\lambda}_1^{\\alpha_i} \\right) + \\kappa \\ln J = 0\n$$\n代入 $\\bar{\\lambda}_1 = \\bar{\\lambda}_\\ell$ 和 $\\bar{\\lambda}_2 = \\bar{\\lambda}_t$ 并乘以 $3$ 得到：\n$$\n\\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\bar{\\lambda}_t^{\\alpha_i} - \\bar{\\lambda}_\\ell^{\\alpha_i} \\right) + 3 \\kappa \\ln J = 0\n$$\n这就是所求的关于 $\\lambda_t$ 的标量非线性方程。我们将 $\\bar{\\lambda}_\\ell$、$\\bar{\\lambda}_t$ 和 $J$ 用 $\\lambda_\\ell$ 和 $\\lambda_t$ 表示的表达式代入：\n$$\n\\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( (\\lambda_\\ell^{-1/3} \\lambda_t^{1/3})^{\\alpha_i} - (\\lambda_\\ell^{2/3} \\lambda_t^{-2/3})^{\\alpha_i} \\right) + 3 \\kappa \\ln(\\lambda_\\ell \\lambda_t^2) = 0\n$$\n$$\n\\sum_{i=1}^{N} \\frac{2 \\mu_i}{\\alpha_i} \\left( \\lambda_\\ell^{-\\alpha_i/3} \\lambda_t^{\\alpha_i/3} - \\lambda_\\ell^{2\\alpha_i/3} \\lambda_t^{-2\\alpha_i/3} \\right) + 3 \\kappa (\\ln\\lambda_\\ell + 2\\ln\\lambda_t) = 0\n$$\n这个方程，我们称之为 $f(\\lambda_t) = 0$，必须通过数值方法求解 $\\lambda_t$。\n\n### 数值解策略\n函数 $f(\\lambda_t)$ 对于 $\\lambda_t > 0$ 是连续且单调的。当 $\\lambda_t \\to 0^+$ 时，$\\lambda_t^{-2\\alpha_i/3}$ 项和 $2 \\ln \\lambda_t$ 项导致 $f(\\lambda_t) \\to -\\infty$。当 $\\lambda_t \\to \\infty$ 时，$\\lambda_t^{\\alpha_i/3}$ 项和 $2 \\ln \\lambda_t$ 项导致 $f(\\lambda_t) \\to +\\infty$。根据介值定理，在 $\\lambda_t > 0$ 范围内必定存在一个根。一个使用区间限定的稳健数值求根算法，如 Brent 方法 (`scipy.optimize.brentq`)，是一个绝佳的选择。我们将实现一个表示所推导方程的函数，并在一个适当选择的搜索区间（例如 $[10^{-6}, 10]$）内使用此方法为每个测试用例求解。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Solves for the lateral stretch in a compressible Ogden material under uniaxial loading.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each case is a dictionary containing the parameters for that test.\n    test_cases = [\n        {\n            'name': 'Case 1 (nearly incompressible, tensile)',\n            'N': 1,\n            'mu': np.array([5.0e5]),\n            'alpha': np.array([2.0]),\n            'kappa': 1.0e8,\n            'lambda_l': 1.2\n        },\n        {\n            'name': 'Case 2 (nearly incompressible, compressive)',\n            'N': 1,\n            'mu': np.array([5.0e5]),\n            'alpha': np.array([2.0]),\n            'kappa': 1.0e8,\n            'lambda_l': 0.8\n        },\n        {\n            'name': 'Case 3 (more compressible, tensile)',\n            'N': 1,\n            'mu': np.array([5.0e5]),\n            'alpha': np.array([2.0]),\n            'kappa': 1.0e6,\n            'lambda_l': 1.2\n        },\n        {\n            'name': 'Case 4 (two-term Ogden, stronger tensile stretch)',\n            'N': 2,\n            'mu': np.array([2.0e5, 3.0e5]),\n            'alpha': np.array([1.3, 5.0]),\n            'kappa': 5.0e7,\n            'lambda_l': 1.5\n        },\n        {\n            'name': 'Case 5 (two-term Ogden, mild tensile stretch)',\n            'N': 2,\n            'mu': np.array([2.0e5, 3.0e5]),\n            'alpha': np.array([1.3, 5.0]),\n            'kappa': 5.0e7,\n            'lambda_l': 1.05\n        }\n    ]\n\n    def traction_free_equation(lambda_t, lambda_l, mu_vec, alpha_vec, kappa):\n        \"\"\"\n        Implements the derived nonlinear scalar equation f(lambda_t) = 0.\n        The equation is:\n        sum_{i=1 to N} [ (2*mu_i/alpha_i) * (bar_lambda_t^alpha_i - bar_lambda_l^alpha_i) ]\n        + 3 * kappa * ln(J) = 0\n        \"\"\"\n        # Avoid math domain error for log and negative powers if lambda_t is non-positive.\n        if lambda_t <= 0:\n            return -np.inf # A large negative number to guide the solver.\n\n        isochoric_term = 0.0\n        for i in range(len(mu_vec)):\n            mu_i = mu_vec[i]\n            alpha_i = alpha_vec[i]\n            \n            # Isochoric stretches powered by alpha_i\n            # bar_lambda_t^alpha_i = (lambda_l^{-1/3} * lambda_t^{1/3})^alpha_i\n            bar_lambda_t_pow_alpha = (lambda_l**(-alpha_i / 3.0)) * (lambda_t**(alpha_i / 3.0))\n            # bar_lambda_l^alpha_i = (lambda_l^{2/3} * lambda_t^{-2/3})^alpha_i\n            bar_lambda_l_pow_alpha = (lambda_l**(2.0 * alpha_i / 3.0)) * (lambda_t**(-2.0 * alpha_i / 3.0))\n            \n            isochoric_term += (2.0 * mu_i / alpha_i) * (bar_lambda_t_pow_alpha - bar_lambda_l_pow_alpha)\n        \n        # Volumetric term\n        # J = lambda_l * lambda_t^2\n        # Volumetric term in the equation is 3 * kappa * ln(J)\n        volumetric_term = 3.0 * kappa * (np.log(lambda_l) + 2.0 * np.log(lambda_t))\n        \n        return isochoric_term + volumetric_term\n\n    results = []\n    # A robust search interval for the root finding algorithm.\n    # The function is guaranteed to cross zero in (0, inf).\n    bracket = [1e-6, 10.0]\n\n    for case in test_cases:\n        lambda_l = case['lambda_l']\n        mu = case['mu']\n        alpha = case['alpha']\n        kappa = case['kappa']\n        \n        # Find the root lambda_t that satisfies the traction-free equation\n        lambda_t_sol = brentq(\n            traction_free_equation, \n            a=bracket[0], \n            b=bracket[1], \n            args=(lambda_l, mu, alpha, kappa)\n        )\n        \n        # Round the result to 10 decimal places as required.\n        rounded_result = np.round(lambda_t_sol, 10)\n        results.append(rounded_result)\n\n    # Print the final results in the specified single-line format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2666958"}, {"introduction": "材料建模的一个关键环节是根据实验数据选择合适的本构模型并校准其参数。本练习将模拟这一完整的工作流程，帮助您掌握如何评估和比较不同模型的性能。您将以 Arruda-Boyce 模型作为“基准真理”来生成合成的“实验”数据，然后尝试将 Ogden 和 Gent 模型与这些数据进行拟合，并最终严格评估哪种模型能在不同应变范围内提供更好的近似效果 [@problem_id:2666924]。", "problem": "给定在固体力学中使用的三个不可压缩、各向同性的超弹性本构模型：Arruda–Boyce 模型、Gent 模型和 Ogden 模型。您的任务是：从一个 Arruda–Boyce 基准真值出发，在指定的拉伸范围内构建合成的单轴拉伸数据集；然后，将一个两项 Ogden 模型和一个 Gent 模型拟合到这些数据集上；最后，测试每个拟合模型是否能在给定的拉伸范围内，以指定的容差（最大逐点相对误差不超过 5%）恢复 Arruda–Boyce 的响应。\n\n从各向同性不可压缩超弹性的第一性原理开始。设应变能密度函数是等容右 Cauchy–Green 张量不变量的函数，其修正第一不变量记为 $I_{1}^{\\text{bar}}$。在不可压缩条件下的单轴拉伸中，主拉伸为 $\\lambda_{1} = \\lambda$，$\\lambda_{2} = \\lambda_{3} = \\lambda^{-1/2}$，修正第一不变量为 $I_{1}^{\\text{bar}} = \\lambda^{2} + 2 \\lambda^{-1}$。不可压缩超弹性材料的 Cauchy 应力由 $\\boldsymbol{\\sigma} = \\dfrac{2}{J} \\mathbf{F}\\,\\dfrac{\\partial W}{\\partial \\mathbf{C}}\\,\\mathbf{F}^{\\mathsf{T}} - p \\mathbf{I}$ 给出，其中由于不可压缩性 $J = 1$，$\\mathbf{F}$ 是变形梯度，$\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$ 是右 Cauchy–Green 张量，$p$ 是强制实现不可压缩性的拉格朗日乘子，$W$ 是应变能密度。从这个起点出发，为以下三类模型推导单轴 Cauchy 应力 $\\sigma(\\lambda)$。\n\n1) 对于其能量仅依赖于 $I_{1}^{\\text{bar}}$ 的任何模型，$W = W(I_{1}^{\\text{bar}})$，用 $\\dfrac{\\partial W}{\\partial I_{1}^{\\text{bar}}}$ 和 $\\lambda$ 来表示并推导 $\\sigma(\\lambda)$。\n\n2) 对于两项 Ogden 模型，其应变能密度为\n$$\nW_{\\text{Og}}(\\lambda_{1},\\lambda_{2},\\lambda_{3}) = \\sum_{p=1}^{2} \\dfrac{\\mu_{p}}{\\alpha_{p}} \\left(\\lambda_{1}^{\\alpha_{p}} + \\lambda_{2}^{\\alpha_{p}} + \\lambda_{3}^{\\alpha_{p}} - 3\\right),\n$$\n在不可压缩条件下推导单轴 Cauchy 应力 $\\sigma_{\\text{Og}}(\\lambda)$。\n\n3) 对于 Gent 模型，其应变能密度为\n$$\nW_{\\text{G}}(I_{1}^{\\text{bar}}) = -\\dfrac{\\mu J_{m}}{2}\\,\\ln\\!\\left(1 - \\dfrac{I_{1}^{\\text{bar}} - 3}{J_{m}}\\right),\n$$\n在不可压缩条件下推导单轴 Cauchy 应力 $\\sigma_{\\text{G}}(\\lambda)$，包括定义域限制 $I_{1}^{\\text{bar}} - 3 < J_{m}$。\n\n对于 Arruda–Boyce 基准真值，使用以 $I_{1}^{\\text{bar}}$ 表示的标准五项级数形式：\n$$\nW_{\\text{AB}}(I_{1}^{\\text{bar}}) = \\mu \\left[\n\\dfrac{1}{2}\\left(I_{1}^{\\text{bar}} - 3\\right)\n+ \\dfrac{1}{20N}\\left(I_{1}^{\\text{bar}}{}^{2} - 9\\right)\n+ \\dfrac{11}{1050 N^{2}}\\left(I_{1}^{\\text{bar}}{}^{3} - 27\\right)\n+ \\dfrac{19}{7000 N^{3}}\\left(I_{1}^{\\text{bar}}{}^{4} - 81\\right)\n+ \\dfrac{519}{673750 N^{4}}\\left(I_{1}^{\\text{bar}}{}^{5} - 243\\right)\n\\right],\n$$\n其中 $\\mu$ 是小应变剪切模量，$N$ 是八链模型解释中每条链的链节数。使用该能量，通过首先推导然后使用第 1 部分中的通用 $W(I_{1}^{\\text{bar}})$ 单轴应力公式，在不可压缩单轴拉伸条件下生成合成的应力-拉伸数据 $\\{\\lambda_{i},\\sigma_{\\text{AB}}(\\lambda_{i})\\}$。所有应力必须以兆帕 (MPa) 表示，拉伸是无量纲的。\n\n您的程序必须执行以下步骤：\n\na) 对于每个指定的测试用例，构建一个从严格大于 $\\lambda=1$ 开始的拉伸网格 $\\{\\lambda_{i}\\}$ 以避免平凡零应力点，求出 $I_{1}^{\\text{bar}}(\\lambda_{i})$，并使用给定的 $(\\mu,N)$ 从 Arruda–Boyce 模型生成合成的基准真值应力 $\\sigma_{\\text{AB}}(\\lambda_{i})$（单位为 MPa）。\n\nb) 通过求解一个非线性最小二乘问题来拟合两项 Ogden 模型参数 $\\{\\mu_{1},\\alpha_{1},\\mu_{2},\\alpha_{2}\\}$ 和 Gent 模型参数 $\\{\\mu,J_{m}\\}$，该问题最小化模型预测应力与合成的 Arruda–Boyce 应力在测试网格上的残差平方和。使用一个尺度不变的残差，其定义为将每个应力残差除以网格上基准真值应力的最大绝对值，这样拟合就不依赖于整体的应力尺度。施加适当的边界条件以维持模型的可采纳性，包括通过边界或惩罚来强制执行 Gent 模型的定义域限制。\n\nc) 对于每个拟合模型和每个测试用例，计算在拉伸网格上的最大逐点相对误差，定义为\n$$\n\\max_{i}\\ \\left|\\dfrac{\\sigma_{\\text{fit}}(\\lambda_{i}) - \\sigma_{\\text{AB}}(\\lambda_{i})}{\\sigma_{\\text{AB}}(\\lambda_{i})}\\right|,\n$$\n需要理解的是，$\\left|\\sigma_{\\text{AB}}(\\lambda_{i})\\right|$ 小于某个数值容差的点将从最大值计算中排除，以避免除以数值上与零不可区分的值。当且仅当该最大相对误差小于或等于 $0.05$ 时，声明一个拟合模型“在 5% 的容差内恢复了响应”。\n\n使用以下测试套件。所有应力必须以兆帕 (MPa) 为单位进行计算和比较。所有拉伸都是无量纲的。对于每个案例，使用一个从 $\\lambda_{\\min}$ 到 $\\lambda_{\\max}$（含）的均匀拉伸网格，增量为 $\\Delta\\lambda = 0.05$。\n\n- 案例 1（中等拉伸，轻度有限拉伸性）：$\\mu = 2.0$ MPa, $N = 10$, $\\lambda_{\\min} = 1.05$, $\\lambda_{\\max} = 1.80$。\n- 案例 2（较大拉伸，较强有限拉伸性）：$\\mu = 1.0$ MPa, $N = 5$, $\\lambda_{\\min} = 1.05$, $\\lambda_{\\max} = 2.20$。\n- 案例 3（高拉伸，显著有限拉伸性）：$\\mu = 1.5$ MPa, $N = 3$, $\\lambda_{\\min} = 1.05$, $\\lambda_{\\max} = 2.60$。\n\n您的程序必须在单行中输出一个逗号分隔的 Python 风格列表，其中包含按以下顺序排列的六个布尔条目：\n- 对于案例 1：两项 Ogden 模型的结果，然后是 Gent 模型的结果。\n- 对于案例 2：两项 Ogden 模型的结果，然后是 Gent 模型的结果。\n- 对于案例 3：两项 Ogden 模型的结果，然后是 Gent 模型的结果。\n\n例如，您的程序应产生单行输出，包含一个列表，如“[True,False,True,True,False,True]”，其中“True”表示模型在指定拉伸范围内的最大相对误差小于或等于 $0.05$，“False”则表示否则。不应打印任何其他文本。", "solution": "在尝试任何解决方案之前，需对问题陈述进行验证。\n\n**步骤 1：提取给定条件**\n- **本构模型**：Arruda-Boyce (基准真值)，两项 Ogden (拟合)，Gent (拟合)。\n- **材料行为**：不可压缩，各向同性，超弹性。\n- **变形运动学**：单轴拉伸，主拉伸为 $\\lambda_{1} = \\lambda$, $\\lambda_{2} = \\lambda_{3} = \\lambda^{-1/2}$。\n- **运动学不变量**：等容右 Cauchy-Green 张量的修正第一不变量，$I_{1}^{\\text{bar}} = \\lambda^{2} + 2 \\lambda^{-1}$。\n- **应变能函数**：\n  - 两项 Ogden：$W_{\\text{Og}} = \\sum_{p=1}^{2} \\dfrac{\\mu_{p}}{\\alpha_{p}} \\left(\\lambda_{1}^{\\alpha_{p}} + \\lambda_{2}^{\\alpha_{p}} + \\lambda_{3}^{\\alpha_{p}} - 3\\right)$。\n  - Gent：$W_{\\text{G}}(I_{1}^{\\text{bar}}) = -\\dfrac{\\mu J_{m}}{2}\\,\\ln\\!\\left(1 - \\dfrac{I_{1}^{\\text{bar}} - 3}{J_{m}}\\right)$，条件为 $I_{1}^{\\text{bar}} - 3 < J_{m}$。\n  - Arruda-Boyce：$W_{\\text{AB}}(I_{1}^{\\text{bar}}) = \\mu \\left[ \\frac{1}{2}(I_{1}^{\\text{bar}} - 3) + \\frac{1}{20N}(I_{1}^{\\text{bar}}{}^{2} - 9) + \\frac{11}{1050 N^{2}}(I_{1}^{\\text{bar}}{}^{3} - 27) + \\frac{19}{7000 N^{3}}(I_{1}^{\\text{bar}}{}^{4} - 81) + \\frac{519}{673750 N^{4}}(I_{1}^{\\text{bar}}{}^{5} - 243) \\right]$。\n- **任务**：对于三个测试案例，从 Arruda-Boyce 模型生成合成的应力-拉伸数据，拟合 Ogden 和 Gent 模型至此数据，并使用 5% 的最大相对误差标准评估拟合优度。\n- **测试案例**：\n  - 案例 1：$\\mu = 2.0$ MPa，$N = 10$，$\\lambda \\in [1.05, 1.80]$。\n  - 案例 2：$\\mu = 1.0$ MPa，$N = 5$，$\\lambda \\in [1.05, 2.20]$。\n  - 案例 3：$\\mu = 1.5$ MPa，$N = 3$，$\\lambda \\in [1.05, 2.60]$。\n- **数值细节**：拉伸网格增量 $\\Delta\\lambda = 0.05$；在尺度不变残差上进行非线性最小二乘拟合；误差度量 $\\max_{i} |\\sigma_{\\text{fit}}(\\lambda_i) - \\sigma_{\\text{AB}}(\\lambda_i)| / |\\sigma_{\\text{AB}}(\\lambda_i)|$。\n\n**步骤 2：使用提取的给定条件进行验证**\n该问题在连续介质力学和超弹性理论的既定理论中有科学依据。它是一个良构问题，提供了所有必要的模型、参数，以及一个清晰、客观的计算和评估程序。该问题是自包含的、一致的，并且没有歧义或事实错误。\n\n**步骤 3：结论与行动**\n该问题是**有效的**。将构建一个解决方案。\n\n我们继续进行所需的理论推导。\n\n**单轴 Cauchy 应力的推导**\n\n对于不可压缩超弹性材料，Cauchy 应力张量 $\\boldsymbol{\\sigma}$ 由下式给出\n$$\n\\boldsymbol{\\sigma} = 2 \\mathbf{F} \\frac{\\partial W}{\\partial \\mathbf{C}} \\mathbf{F}^{\\mathsf{T}} - p \\mathbf{I}\n$$\n其中 $W$ 是应变能密度函数，$\\mathbf{F}$ 是变形梯度，$\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$ 是右 Cauchy-Green 张量，$p$ 是强制实现不可压缩约束的静水压力。对于单轴拉伸，主拉伸为 $(\\lambda, \\lambda^{-1/2}, \\lambda^{-1/2})$，这导致 $\\mathbf{F}$、$\\mathbf{C}$ 和左 Cauchy-Green 张量 $\\mathbf{B} = \\mathbf{F}\\mathbf{F}^{\\mathsf{T}}$ 都是对角张量：\n$$\n\\mathbf{C} = \\mathbf{B} = \\text{diag}(\\lambda^2, \\lambda^{-1}, \\lambda^{-1})\n$$\n\n1) 对于能量 $W$ 仅是第一不变量 $I_1^{\\text{bar}} = \\text{tr}(\\mathbf{C}) = \\lambda^{2} + 2 \\lambda^{-1}$ 的函数的任何模型，$W$ 对 $\\mathbf{C}$ 的导数为\n$$\n\\frac{\\partial W}{\\partial \\mathbf{C}} = \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\frac{\\partial I_1^{\\text{bar}}}{\\partial \\mathbf{C}} = \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\mathbf{I}\n$$\n将此代入应力方程，得到 $\\boldsymbol{\\sigma} = 2 \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\mathbf{B} - p \\mathbf{I}$。其分量为：\n$$\n\\sigma_{11} = 2 \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\lambda^2 - p\n$$\n$$\n\\sigma_{22} = \\sigma_{33} = 2 \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\lambda^{-1} - p\n$$\n单轴拉伸的边界条件 $\\sigma_{22} = \\sigma_{33} = 0$ 确定了压力：$p = 2 \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\lambda^{-1}$。因此，拉伸方向的真（Cauchy）应力 $\\sigma = \\sigma_{11}$ 为\n$$\n\\sigma(\\lambda) = 2 \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\lambda^2 - 2 \\frac{\\partial W}{\\partial I_1^{\\text{bar}}} \\lambda^{-1} = 2 \\left( \\lambda^2 - \\lambda^{-1} \\right) \\frac{\\partial W}{\\partial I_1^{\\text{bar}}}\n$$\n此通用公式用于 Arruda-Boyce 和 Gent 模型。\n\n2) 对于两项 Ogden 模型，应变能是主拉伸的函数，$W_{\\text{Og}} = \\sum_{p=1}^{2} \\frac{\\mu_{p}}{\\alpha_{p}} (\\lambda_{1}^{\\alpha_{p}} + \\lambda_{2}^{\\alpha_{p}} + \\lambda_{3}^{\\alpha_{p}} - 3)$。此类模型的主应力由 $\\sigma_i = \\lambda_i \\frac{\\partial W}{\\partial \\lambda_i} - p$ 给出。在单轴拉伸中，$\\lambda_1=\\lambda$, $\\lambda_2=\\lambda_3=\\lambda^{-1/2}$，应力表达式为：\n$$\n\\sigma_{1} = \\sum_{p=1}^{2} \\mu_{p} \\lambda^{\\alpha_{p}} - p\n$$\n$$\n\\sigma_{2} = \\sigma_{3} = \\sum_{p=1}^{2} \\mu_{p} \\lambda^{-\\alpha_{p}/2} - p\n$$\n应用边界条件 $\\sigma_2 = 0$ 得到 $p = \\sum_{p=1}^{2} \\mu_{p} \\lambda^{-\\alpha_{p}/2}$。将其代入 $\\sigma_1$ 的表达式，得到单轴 Cauchy 应力：\n$$\n\\sigma_{\\text{Og}}(\\lambda) = \\sum_{p=1}^{2} \\mu_{p} \\left( \\lambda^{\\alpha_{p}} - \\lambda^{-\\alpha_{p}/2} \\right)\n$$\n此表达式用于拟合 Ogden 模型。\n\n3) 对于 Gent 模型，我们使用第 1 部分的通用公式。能量为 $W_{\\text{G}}(I_{1}^{\\text{bar}}) = -\\frac{\\mu J_{m}}{2}\\,\\ln(1 - \\frac{I_{1}^{\\text{bar}} - 3}{J_{m}})$。其导数为：\n$$\n\\frac{\\partial W_{\\text{G}}}{\\partial I_1^{\\text{bar}}} = -\\frac{\\mu J_{m}}{2} \\left( \\frac{1}{1 - \\frac{I_1^{\\text{bar}}-3}{J_m}} \\right) \\left(-\\frac{1}{J_m}\\right) = \\frac{\\mu}{2} \\frac{J_m}{J_m - (I_1^{\\text{bar}}-3)}\n$$\n因此，单轴 Cauchy 应力为：\n$$\n\\sigma_{\\text{G}}(\\lambda) = 2 \\left( \\lambda^2 - \\lambda^{-1} \\right) \\left( \\frac{\\mu}{2} \\frac{J_m}{J_m - (I_1^{\\text{bar}}-3)} \\right) = \\mu (\\lambda^2 - \\lambda^{-1}) \\frac{J_m}{J_m - (\\lambda^2 + 2\\lambda^{-1} - 3)}\n$$\n这受到约束 $I_{1}^{\\text{bar}} - 3 < J_{m}$ 的限制，以确保对数的参数为正。\n\n**数值实现策略**\n\n该问题按照指定程序进行数值求解。\na) 使用 Arruda-Boyce 模型生成基准真值数据。为此，我们需要其应力表达式，这可以通过应用第 1 部分的通用公式获得。导数 $\\frac{\\partial W_{\\text{AB}}}{\\partial I_1^{\\text{bar}}}$ 为：\n$$\n\\frac{\\partial W_{\\text{AB}}}{\\partial I_1^{\\text{bar}}} = \\mu \\left[ \\frac{1}{2} + \\frac{1}{10N}I_1^{\\text{bar}} + \\frac{11}{350 N^2}I_1^{\\text{bar}}{}^2 + \\frac{19}{1750 N^3}I_1^{\\text{bar}}{}^3 + \\frac{519}{134750 N^4}I_1^{\\text{bar}}{}^4 \\right]\n$$\n将其代入 $\\sigma(\\lambda) = 2(\\lambda^2 - \\lambda^{-1})\\frac{\\partial W_{\\text{AB}}}{\\partial I_1^{\\text{bar}}}$ 以在指定的拉伸网格上计算 $\\sigma_{\\text{AB}}(\\lambda_i)$。\n\nb) 使用 `scipy.optimize.least_squares` 函数将 Ogden 和 Gent 模型拟合到此数据。要最小化的目标函数是残差平方和，其中每个数据点的残差以尺度不变的方式定义：\n$$\nr_i = \\frac{\\sigma_{\\text{fit}}(\\lambda_i) - \\sigma_{\\text{AB}}(\\lambda_i)}{\\max_j |\\sigma_{\\text{AB}}(\\lambda_j)|}\n$$\n在优化过程中通过参数边界强制实现模型的可采纳性：\n- 对于 Ogden：$\\mu_1 > 0$, $\\mu_2 > 0$。指数 $\\alpha_1, \\alpha_2$ 无约束。\n- 对于 Gent：$\\mu > 0$ 且 $J_m > \\max_i(I_1^{\\text{bar}}(\\lambda_i) - 3) + \\epsilon$，其中 $\\epsilon$ 是一个小的正容差。这严格强制了模型在拟合范围内的定义域。\n\nc) 拟合后，为每个模型和案例在相应的拉伸网格上计算最大逐点相对误差。在分母中使用一个小的数值容差，尽管对于给定的拉伸范围 $\\lambda_i > 1.0$，基准真值应力 $\\sigma_{\\text{AB}}(\\lambda_i)$ 严格为正。\n如果此误差不大于 $0.05$，则认为模型是成功的。六种情景（三种案例中每种模型各一个）中的每一种结果都是一个布尔值。这六个值被编译成一个最终列表。\n\n实现细节在最终答案代码块中提供。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import least_squares\nfrom fractions import Fraction\n\ndef solve():\n    \"\"\"\n    Constructs synthetic uniaxial tension data from an Arruda-Boyce model,\n    fits two-term Ogden and Gent models, and evaluates their ability to\n    recover the response within a 5% relative error tolerance.\n    \"\"\"\n    \n    # Define coefficients for the 5-term Arruda-Boyce strain energy derivative\n    # dW/dI1 = mu * sum(k * Ck * I1^(k-1)) for W = mu * sum(Ck * (I1^k - 3^k))\n    # where Ck are the coefficients from the problem statement.\n    AB_COEFFS = [\n        Fraction(1, 2),\n        Fraction(1, 20),\n        Fraction(11, 1050),\n        Fraction(19, 7000),\n        Fraction(519, 673750)\n    ]\n\n    def get_i1_bar(lmbda):\n        return lmbda**2 + 2 / lmbda\n\n    # --- Stress Model Definitions ---\n\n    def sigma_ab(lmbda, mu, N):\n        \"\"\"Computes Arruda-Boyce uniaxial Cauchy stress.\"\"\"\n        i1 = get_i1_bar(lmbda)\n        \n        # dW/dI1 derivative term\n        dw_di1_term = 0\n        for k_idx, Ck in enumerate(AB_COEFFS):\n            k = k_idx + 1\n            dw_di1_term += k * float(Ck) * (i1**(k - 1)) / (N**k_idx)\n            \n        dw_di1 = mu * dw_di1_term\n        \n        sigma = 2 * (lmbda**2 - 1/lmbda) * dw_di1\n        return sigma\n\n    def sigma_ogden(lmbda, params):\n        \"\"\"Computes two-term Ogden uniaxial Cauchy stress.\"\"\"\n        mu1, alpha1, mu2, alpha2 = params\n        term1 = mu1 * (lmbda**alpha1 - lmbda**(-alpha1 / 2))\n        term2 = mu2 * (lmbda**alpha2 - lmbda**(-alpha2 / 2))\n        return term1 + term2\n\n    def sigma_gent(lmbda, params):\n        \"\"\"Computes Gent uniaxial Cauchy stress.\"\"\"\n        mu, Jm = params\n        i1 = get_i1_bar(lmbda)\n        i1_minus_3 = i1 - 3\n        \n        # To avoid division by zero or log of non-positive if params are at bounds\n        denominator = Jm - i1_minus_3\n        if np.any(denominator <= 0):\n             return np.inf * np.ones_like(lmbda)\n\n        sigma = mu * (lmbda**2 - 1/lmbda) * (Jm / denominator)\n        return sigma\n\n    # --- Residual Functions for Least-Squares Fitting ---\n\n    def residual_ogden(params, lmbda, sigma_data, sigma_max):\n        sigma_model = sigma_ogden(lmbda, params)\n        return (sigma_model - sigma_data) / sigma_max\n\n    def residual_gent(params, lmbda, sigma_data, sigma_max):\n        sigma_model = sigma_gent(lmbda, params)\n        return (sigma_model - sigma_data) / sigma_max\n        \n    # --- Test Cases ---\n\n    test_cases = [\n        # (mu, N, lambda_min, lambda_max)\n        (2.0, 10, 1.05, 1.80),\n        (1.0, 5, 1.05, 2.20),\n        (1.5, 3, 1.05, 2.60)\n    ]\n    \n    results = []\n    \n    for mu_true, N_true, lmbda_min, lmbda_max in test_cases:\n        # a) Generate synthetic data\n        lmbdas = np.arange(lmbda_min, lmbda_max + 1e-9, 0.05)\n        sigma_data = sigma_ab(lmbdas, mu_true, N_true)\n        sigma_max = np.max(np.abs(sigma_data))\n\n        # b) Fit Ogden model\n        p0_ogden = [mu_true / 2, 2.0, mu_true / 2, -2.0]\n        bounds_ogden = ([0, -np.inf, 0, -np.inf], [np.inf, np.inf, np.inf, np.inf])\n        fit_ogden = least_squares(\n            residual_ogden, p0_ogden, args=(lmbdas, sigma_data, sigma_max),\n            bounds=bounds_ogden, method='trf'\n        )\n        params_ogden = fit_ogden.x\n        \n        # c) Evaluate Ogden model fit\n        sigma_fit_ogden = sigma_ogden(lmbdas, params_ogden)\n        # Denominator is safe since lambda > 1 => sigma_data > 0\n        rel_err_ogden = np.abs((sigma_fit_ogden - sigma_data) / sigma_data)\n        max_rel_err_ogden = np.max(rel_err_ogden)\n        results.append(max_rel_err_ogden <= 0.05)\n\n        # b) Fit Gent model\n        i1_max = get_i1_bar(lmbda_max)\n        jm_lower_bound = i1_max - 3.0 + 1e-6 # Add epsilon for strict inequality\n        \n        p0_gent = [mu_true, jm_lower_bound * 2]\n        bounds_gent = ([0, jm_lower_bound], [np.inf, np.inf])\n        fit_gent = least_squares(\n            residual_gent, p0_gent, args=(lmbdas, sigma_data, sigma_max),\n            bounds=bounds_gent, method='trf'\n        )\n        params_gent = fit_gent.x\n        \n        # c) Evaluate Gent model fit\n        sigma_fit_gent = sigma_gent(lmbdas, params_gent)\n        rel_err_gent = np.abs((sigma_fit_gent - sigma_data) / sigma_data)\n        max_rel_err_gent = np.max(rel_err_gent)\n        results.append(max_rel_err_gent <= 0.05)\n        \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2666924"}]}