{"hands_on_practices": [{"introduction": "本练习旨在通过探索最基本的流变模型行为，为后续学习奠定基础。通过推导和比较麦克斯韦 (Maxwell) 模型和开尔文-福伊格特 (Kelvin-Voigt) 模型在恒定应变率加载下的应力响应，您将对它们的核心特性——麦克斯韦模型的类流体松弛行为和开尔文-福伊格特模型的类固体行为——建立深刻而直观的理解。这种对比分析对于领会为何需要更复杂的广义麦克斯韦模型来描述真实材料至关重要。", "problem": "考虑对因果应变斜坡历史 $\\epsilon(t)=\\dot{\\epsilon}_{0}\\,t\\,H(t)$ 的小应变、单轴、线性粘弹性响应，其中 $H(t)$ 是 Heaviside 阶跃函数，当 $t<0$ 时 $H(t)=0$，当 $t>0$ 时 $H(t)=1$，且 $\\dot{\\epsilon}_{0}>0$ 是一个恒定的应变率。需要分析三种流变学描述：\n\n- Maxwell 模型：一个模量为 $E_{M}$ 的线性弹簧与一个粘度为 $\\eta_{M}$ 的粘壶串联。\n- Kelvin–Voigt 模型：一个模量为 $E_{K}$ 的线性弹簧与一个粘度为 $\\eta_{K}$ 的粘壶并联。\n- 广义 Maxwell 模型 (Prony 级数)：松弛模量表示为 $E(t)=E_{\\infty}+\\sum_{k=1}^{N}E_{k}\\,\\exp(-t/\\tau_{k})$ (对于 $t>0$)，其中 $E_{\\infty}\\ge 0$，$E_{k}>0$，松弛时间 $\\tau_{k}>0$。\n\n仅从前两个模型的串联和并联的力学定义出发，以及从广义 Maxwell 模型的线性粘弹性叠加原理出发，推导在给定应变斜坡下相应的应力响应 $\\sigma_{M}(t)$、$\\sigma_{K}(t)$ 和 $\\sigma_{GM}(t)$ 的闭式表达式。明确地施加因果性。然后，根据模型参数解释当 $t\\to 0^{+}$ 和 $t\\to\\infty$ 时的渐近行为。\n\n以闭式单行矩阵 $\\big[\\sigma_{M}(t)\\ \\ \\sigma_{K}(t)\\ \\ \\sigma_{GM}(t)\\big]$ 的形式给出你的最终答案，使用 Heaviside 函数 $H(t)$ 来编码因果性。不需要进行数值计算。最终的方框答案中不要包含单位。因为答案是符号形式，所以不适用舍入指令。", "solution": "该问题要求推导三种先验不同的线性粘弹性模型在单轴应变斜坡历史 $\\epsilon(t) = \\dot{\\epsilon}_{0} t H(t)$ 作用下的应力响应。参数 $\\dot{\\epsilon}_{0}$ 是一个正的恒定应变率，$H(t)$ 是 Heaviside 阶跃函数。分析过程将首先为每个模型推导其控制本构方程，然后针对指定的应变历史求解该方程。因果性要求系统在 $t \\le 0$ 时处于静止状态，这意味着当 $t \\le 0$ 时 $\\epsilon(t)=0$ 且 $\\sigma(t)=0$。对于 $t>0$，应变率为 $\\dot{\\epsilon}(t) = \\frac{d}{dt}(\\dot{\\epsilon}_{0}t) = \\dot{\\epsilon}_{0}$。\n\n首先，考虑 Maxwell 模型。该模型由一个模量为 $E_{M}$ 的线性弹性弹簧和一个粘度为 $\\eta_{M}$ 的线性粘性粘壶串联而成。对于串联连接，总应变 $\\epsilon$ 是弹簧应变 $\\epsilon_s$ 和粘壶应变 $\\epsilon_d$ 的和，而应力 $\\sigma$ 在整个模型中是均匀的。\n$$ \\epsilon(t) = \\epsilon_s(t) + \\epsilon_d(t) $$\n$$ \\sigma(t) = \\sigma_s(t) = \\sigma_d(t) $$\n各个元件的本构律为：弹簧 $\\sigma(t) = E_{M}\\epsilon_s(t)$，粘壶 $\\sigma(t) = \\eta_{M}\\dot{\\epsilon}_d(t)$，其中点号表示对时间 $t$ 的微分。对总应变方程关于时间求导，得到 $\\dot{\\epsilon} = \\dot{\\epsilon}_s + \\dot{\\epsilon}_d$。代入本构律，得到 Maxwell 模型的控制常微分方程 (ODE)：\n$$ \\dot{\\epsilon}(t) = \\frac{\\dot{\\sigma}(t)}{E_{M}} + \\frac{\\sigma(t)}{\\eta_{M}} $$\n当 $t>0$ 时，$\\dot{\\epsilon}(t) = \\dot{\\epsilon}_{0}$。该 ODE 变为 $\\dot{\\epsilon}_{0} = \\frac{\\dot{\\sigma}(t)}{E_{M}} + \\frac{\\sigma(t)}{\\eta_{M}}$。定义松弛时间 $\\tau_{M} = \\eta_{M}/E_{M}$，这个一阶线性 ODE 可以写为：\n$$ \\dot{\\sigma}(t) + \\frac{1}{\\tau_{M}}\\sigma(t) = E_{M}\\dot{\\epsilon}_{0} $$\n解是齐次解 $\\sigma_h(t) = C\\exp(-t/\\tau_{M})$ 和一个特解的和。对于常数强迫项，我们假设一个常数特解 $\\sigma_p(t) = A$，这给出 $A/\\tau_{M} = E_{M}\\dot{\\epsilon}_{0}$，因此 $A = E_{M}\\dot{\\epsilon}_{0}\\tau_{M} = \\eta_{M}\\dot{\\epsilon}_{0}$。通解为 $\\sigma(t) = \\eta_{M}\\dot{\\epsilon}_{0} + C\\exp(-t/\\tau_{M})$。常数 $C$ 由初始条件 $\\sigma(0)=0$ 确定。这得到 $0 = \\eta_{M}\\dot{\\epsilon}_{0} + C$，所以 $C = -\\eta_{M}\\dot{\\epsilon}_{0}$。当 $t>0$ 时，应力响应为：\n$$ \\sigma_{M}(t) = \\eta_{M}\\dot{\\epsilon}_{0}\\left(1 - \\exp\\left(-\\frac{t}{\\tau_{M}}\\right)\\right) = \\eta_{M}\\dot{\\epsilon}_{0}\\left(1 - \\exp\\left(-\\frac{E_{M}}{\\eta_{M}}t\\right)\\right) $$\n当 $t \\to 0^{+}$ 时，泰勒展开 $\\exp(-x) \\approx 1-x$ 给出 $\\sigma_{M}(t) \\approx \\eta_{M}\\dot{\\epsilon}_{0}(t/\\tau_{M}) = E_{M}\\dot{\\epsilon}_{0}t = E_{M}\\epsilon(t)$。这表明初始响应为纯弹性响应，因为粘壶没有时间流动。当 $t \\to \\infty$ 时，$\\exp(-t/\\tau_{M}) \\to 0$，所以 $\\sigma_{M}(t) \\to \\eta_{M}\\dot{\\epsilon}_{0}$。应力达到一个稳态值，这是粘性流体流动的特征，此时弹簧处于恒定伸长状态，所有进一步的变形都发生在粘壶中。\n\n其次，分析 Kelvin–Voigt 模型。该模型由一个模量为 $E_{K}$ 的弹簧和一个粘度为 $\\eta_{K}$ 的粘壶并联而成。对于并联连接，两个元件的应变 $\\epsilon$ 相同，而总应力 $\\sigma$ 是弹簧应力 $\\sigma_s$ 和粘壶应力 $\\sigma_d$ 的和。\n$$ \\epsilon(t) = \\epsilon_s(t) = \\epsilon_d(t) $$\n$$ \\sigma(t) = \\sigma_s(t) + \\sigma_d(t) $$\n根据元件定律 $\\sigma_s(t) = E_{K}\\epsilon(t)$ 和 $\\sigma_d(t) = \\eta_{K}\\dot{\\epsilon}(t)$，本构方程是代数方程：\n$$ \\sigma(t) = E_{K}\\epsilon(t) + \\eta_{K}\\dot{\\epsilon}(t) $$\n对于 $t>0$，我们将 $\\epsilon(t) = \\dot{\\epsilon}_{0}t$ 和 $\\dot{\\epsilon}(t) = \\dot{\\epsilon}_{0}$ 直接代入方程：\n$$ \\sigma_{K}(t) = E_{K}(\\dot{\\epsilon}_{0}t) + \\eta_{K}\\dot{\\epsilon}_{0} = \\dot{\\epsilon}_{0}(E_{K}t + \\eta_{K}) $$\n当 $t \\to 0^{+}$ 时，$\\sigma_{K}(t) \\to \\eta_{K}\\dot{\\epsilon}_{0}$。由于粘壶抵抗运动的开始，存在一个瞬时应力响应。当 $t \\to \\infty$ 时，应力随时间线性增长，$\\sigma_{K}(t) \\approx E_{K}\\dot{\\epsilon}_{0}t$，主要由弹簧对增大的应变的响应所主导。这种行为是固体的特征。\n\n第三，考虑广义 Maxwell 模型，其松弛模量由 Prony 级数表示为 $E(t)=E_{\\infty}+\\sum_{k=1}^{N}E_{k}\\exp(-t/\\tau_{k})$ (对于 $t>0$)。应力响应由 Boltzmann 叠加原理给出：\n$$ \\sigma(t) = \\int_{-\\infty}^{t} E(t-s) \\frac{d\\epsilon(s)}{ds} ds $$\n应变率为 $\\frac{d\\epsilon}{ds} = \\frac{d}{ds}(\\dot{\\epsilon}_{0}sH(s)) = \\dot{\\epsilon}_{0}H(s) + \\dot{\\epsilon}_{0}s\\delta(s)$，其中 $\\delta(s)$ 是 Dirac delta 函数。由于 $s\\delta(s) = 0$，我们有 $\\dot{\\epsilon}(s) = \\dot{\\epsilon}_{0}H(s)$。对于 $t>0$，积分变为：\n$$ \\sigma_{GM}(t) = \\int_{0}^{t} E(t-s) \\dot{\\epsilon}_{0} ds = \\dot{\\epsilon}_{0} \\int_{0}^{t} \\left( E_{\\infty} + \\sum_{k=1}^{N}E_{k}\\exp\\left(-\\frac{t-s}{\\tau_{k}}\\right) \\right) ds $$\n逐项计算积分：\n$$ \\int_{0}^{t} E_{\\infty} ds = E_{\\infty}t $$\n$$ \\int_{0}^{t} E_{k}\\exp\\left(-\\frac{t-s}{\\tau_{k}}\\right) ds = E_{k}\\exp\\left(-\\frac{t}{\\tau_{k}}\\right)\\int_{0}^{t}\\exp\\left(\\frac{s}{\\tau_{k}}\\right)ds = E_{k}\\exp\\left(-\\frac{t}{\\tau_{k}}\\right)\\left[\\tau_{k}\\exp\\left(\\frac{s}{\\tau_{k}}\\right)\\right]_{0}^{t} $$\n$$ = E_{k}\\exp\\left(-\\frac{t}{\\tau_{k}}\\right)\\tau_{k}\\left(\\exp\\left(\\frac{t}{\\tau_{k}}\\right) - 1\\right) = E_{k}\\tau_{k}\\left(1 - \\exp\\left(-\\frac{t}{\\tau_{k}}\\right)\\right) $$\n合并各项，当 $t>0$ 时的应力响应为：\n$$ \\sigma_{GM}(t) = \\dot{\\epsilon}_{0}\\left[ E_{\\infty}t + \\sum_{k=1}^{N}E_{k}\\tau_{k}\\left(1 - \\exp\\left(-\\frac{t}{\\tau_{k}}\\right)\\right) \\right] $$\n当 $t \\to 0^{+}$ 时，使用 $1-\\exp(-x) \\approx x$，求和项变为 $\\sum_{k=1}^{N}E_{k}\\tau_{k}(t/\\tau_{k}) = t\\sum_{k=1}^{N}E_{k}$。应力变为 $\\sigma_{GM}(t) \\approx \\dot{\\epsilon}_{0}(E_{\\infty}t + t\\sum E_k) = (E_{\\infty} + \\sum E_k)\\dot{\\epsilon}_{0}t$。这即是 $\\sigma_{GM}(t) \\approx E(0)\\epsilon(t)$，一个具有瞬时模量 $E(0)$ 的纯弹性响应。当 $t \\to \\infty$ 时，$\\exp(-t/\\tau_k) \\to 0$。应力的行为表现为 $\\sigma_{GM}(t) \\approx \\dot{\\epsilon}_{0}\\left( E_{\\infty}t + \\sum_{k=1}^{N}E_{k}\\tau_{k} \\right)$。如果 $E_{\\infty}>0$，材料表现为固体，应力随时间线性增长。如果 $E_{\\infty}=0$，它表现为流体，应力趋于一个恒定的稳态值 $\\sigma_{GM} \\to \\dot{\\epsilon}_{0}\\sum E_{k}\\tau_{k}$，其中 $\\sum E_{k}\\tau_{k}$ 是零剪切粘度。\n\n为了在所有时间上施加因果性，每个表达式都乘以 Heaviside 函数 $H(t)$。最终答案被收集到所需的矩阵格式中。", "answer": "$$ \\boxed{\\begin{pmatrix} \\eta_{M}\\dot{\\epsilon}_{0}\\left(1 - \\exp\\left(-\\frac{E_{M}}{\\eta_{M}}t\\right)\\right)H(t) & \\dot{\\epsilon}_{0}(E_{K}t + \\eta_{K})H(t) & \\dot{\\epsilon}_{0}\\left(E_{\\infty}t + \\sum_{k=1}^{N}E_{k}\\tau_{k}\\left(1 - \\exp\\left(-\\frac{t}{\\tau_{k}}\\right)\\right)\\right)H(t) \\end{pmatrix}} $$", "id": "2681045"}, {"introduction": "在掌握了基本模型之后，本实践将直接聚焦于作为线性粘弹性理论基石的广义麦克斯韦模型。您将从第一性原理出发，推导该模型在恒定应变率下的应力响应，从而加深对并联的麦克斯韦单元和平衡弹簧如何共同作用的理解。这项练习对于掌握模型的数学结构及其描述宽广材料响应谱的能力至关重要。", "problem": "一个一维线性粘弹性固体被建模为广义麦克斯韦组合：$N$个串联的弹簧-粘壶单元（每个都是一个麦克斯韦单元）与一个模量为$G_{\\infty}$的纯弹性弹簧并联。对于第$i$个麦克斯韦单元，弹簧模量为$G_{i}$，粘壶粘度为$\\eta_{i}$，松弛时间$\\tau_{i} \\equiv \\eta_{i}/G_{i}$。假设小应变、等温条件，且材料在$t<0$时初始静止，应力和应变均为零。\n\n在$t=0^{+}$时，施加一个恒定的应变率历史：当$t \\ge 0$时，$\\dot{\\epsilon}(t) = \\dot{\\epsilon}_{0}$，且$\\epsilon(0)=0$。仅使用流变网络中串联和并联的定义性运动学约束、弹簧的胡克定律、粘壶的牛顿定律以及玻尔兹曼叠加原理所基于的线性假设，从第一性原理推导当$t \\ge 0$时总应力$\\sigma(t)$的闭式表达式，用$G_{\\infty}$、$\\{G_{i}\\}_{i=1}^{N}$、$\\{\\tau_{i}\\}_{i=1}^{N}$、$\\dot{\\epsilon}_{0}$和$t$表示。将您的最终答案表示为单个解析表达式。不需要进行数值评估或四舍五入，也不需要进行单位转换。", "solution": "所描述的广义麦克斯韦模型由$N+1$个并联的支路组成：一个纯弹性弹簧和$N$个麦克斯韦单元。并联单元的基本法则是，每个支路的应变相同，总应力是每个支路中应力之和。\n\n设$\\epsilon(t)$为施加于组合上的总应变。所有并联支路都承受相同的应变。\n设$\\sigma(t)$为总应力。它是平衡弹簧中的应力$\\sigma_{\\infty}(t)$与$N$个麦克斯韦单元中各自的应力$\\sigma_{i}(t)$之和。\n$$\n\\sigma(t) = \\sigma_{\\infty}(t) + \\sum_{i=1}^{N} \\sigma_{i}(t)\n$$\n\n首先，我们确定应变历史$\\epsilon(t)$。已知当$t \\ge 0$时，$\\dot{\\epsilon}(t) = \\dot{\\epsilon}_{0}$，且$\\epsilon(0)=0$。对应变率进行积分可得应变：\n$$\n\\epsilon(t) = \\int_{0}^{t} \\dot{\\epsilon}(\\tau) \\,d\\tau = \\int_{0}^{t} \\dot{\\epsilon}_{0} \\,d\\tau = \\dot{\\epsilon}_{0} t\n$$\n\n现在，我们分析每个支路中的应力。\n\n**1. 平衡弹簧支路：**\n该支路包含一个模量为$G_{\\infty}$的弹簧。根据胡克定律，应力与应变成正比：\n$$\n\\sigma_{\\infty}(t) = G_{\\infty} \\epsilon(t) = G_{\\infty} \\dot{\\epsilon}_{0} t\n$$\n\n**2. 第$i$个麦克斯韦单元支路：**\n第$i$个麦克斯韦单元由一个弹簧（模量$G_{i}$）和一个粘壶（粘度$\\eta_{i}$）串联而成。\n对于串联元件，支路的总应变$\\epsilon(t)$是弹簧上的应变$\\epsilon_{i,s}(t)$和粘壶上的应变$\\epsilon_{i,d}(t)$之和：\n$$\n\\epsilon(t) = \\epsilon_{i,s}(t) + \\epsilon_{i,d}(t)\n$$\n在串联单元中，两个元件的应力$\\sigma_{i}(t)$是相同的。\n弹簧和粘壶的本构关系为：\n- 弹簧（胡克定律）：$\\sigma_{i}(t) = G_{i} \\epsilon_{i,s}(t)$\n- 粘壶（牛顿定律）：$\\sigma_{i}(t) = \\eta_{i} \\dot{\\epsilon}_{i,d}(t)$\n\n为了找到$\\sigma_{i}(t)$的控制方程，我们对应变求和式对时间求导：\n$$\n\\dot{\\epsilon}(t) = \\dot{\\epsilon}_{i,s}(t) + \\dot{\\epsilon}_{i,d}(t)\n$$\n我们使用本构关系将应变率用应力$\\sigma_{i}(t)$表示：\n$$\n\\dot{\\epsilon}_{i,s}(t) = \\frac{1}{G_{i}} \\dot{\\sigma}_{i}(t)\n$$\n$$\n\\dot{\\epsilon}_{i,d}(t) = \\frac{1}{\\eta_{i}} \\sigma_{i}(t)\n$$\n将这些代入速率方程，得到第$i$个麦克斯韦单元中应力的控制常微分方程：\n$$\n\\dot{\\epsilon}(t) = \\frac{1}{G_{i}} \\dot{\\sigma}_{i}(t) + \\frac{1}{\\eta_{i}} \\sigma_{i}(t)\n$$\n整理并代入给定的应变率$\\dot{\\epsilon}(t) = \\dot{\\epsilon}_{0}$和松弛时间$\\tau_{i} = \\eta_{i}/G_{i}$：\n$$\n\\dot{\\sigma}_{i}(t) + \\frac{G_{i}}{\\eta_{i}} \\sigma_{i}(t) = G_{i} \\dot{\\epsilon}_{0}\n$$\n$$\n\\dot{\\sigma}_{i}(t) + \\frac{1}{\\tau_{i}} \\sigma_{i}(t) = G_{i} \\dot{\\epsilon}_{0}\n$$\n这是一个一阶线性非齐次常微分方程。我们使用积分因子$I(t) = \\exp\\left(\\int \\frac{1}{\\tau_{i}} dt\\right) = \\exp(t/\\tau_{i})$来求解。\n将常微分方程乘以$I(t)$：\n$$\n\\exp(t/\\tau_{i})\\dot{\\sigma}_{i}(t) + \\frac{1}{\\tau_{i}}\\exp(t/\\tau_{i})\\sigma_{i}(t) = G_{i} \\dot{\\epsilon}_{0} \\exp(t/\\tau_{i})\n$$\n左边是乘积的导数：\n$$\n\\frac{d}{dt}\\left( \\sigma_{i}(t) \\exp(t/\\tau_{i}) \\right) = G_{i} \\dot{\\epsilon}_{0} \\exp(t/\\tau_{i})\n$$\n我们对两边从$0$到$t$进行积分。初始条件是材料处于静止状态，这意味着$\\sigma_{i}(0) = 0$。\n$$\n\\int_{0}^{t} \\frac{d}{d\\tau'}\\left( \\sigma_{i}(\\tau') \\exp(\\tau'/\\tau_{i}) \\right) d\\tau' = \\int_{0}^{t} G_{i} \\dot{\\epsilon}_{0} \\exp(\\tau'/\\tau_{i}) d\\tau'\n$$\n$$\n\\left[ \\sigma_{i}(\\tau') \\exp(\\tau'/\\tau_{i}) \\right]_{0}^{t} = G_{i} \\dot{\\epsilon}_{0} \\left[ \\tau_{i} \\exp(\\tau'/\\tau_{i}) \\right]_{0}^{t}\n$$\n$$\n\\sigma_{i}(t) \\exp(t/\\tau_{i}) - \\sigma_{i}(0)\\exp(0) = G_{i} \\dot{\\epsilon}_{0} \\tau_{i} (\\exp(t/\\tau_{i}) - \\exp(0))\n$$\n$$\n\\sigma_{i}(t) \\exp(t/\\tau_{i}) - 0 = G_{i} \\dot{\\epsilon}_{0} \\tau_{i} (\\exp(t/\\tau_{i}) - 1)\n$$\n两边乘以$\\exp(-t/\\tau_{i})$求解$\\sigma_{i}(t)$：\n$$\n\\sigma_{i}(t) = G_{i} \\dot{\\epsilon}_{0} \\tau_{i} \\left(1 - \\exp(-t/\\tau_{i})\\right)\n$$\n\n**3. 总应力：**\n最后，我们将$\\sigma_{\\infty}(t)$和$\\sigma_{i}(t)$的表达式代入总应力方程：\n$$\n\\sigma(t) = \\sigma_{\\infty}(t) + \\sum_{i=1}^{N} \\sigma_{i}(t)\n$$\n$$\n\\sigma(t) = G_{\\infty} \\dot{\\epsilon}_{0} t + \\sum_{i=1}^{N} G_{i} \\dot{\\epsilon}_{0} \\tau_{i} \\left(1 - \\exp(-t/\\tau_{i})\\right)\n$$\n提出恒定的应变率$\\dot{\\epsilon}_{0}$，得到总应力随时间变化的最终表达式：\n$$\n\\sigma(t) = \\dot{\\epsilon}_{0} \\left( G_{\\infty} t + \\sum_{i=1}^{N} G_{i} \\tau_{i} \\left(1 - \\exp\\left(-\\frac{t}{\\tau_{i}}\\right)\\right) \\right)\n$$\n该表达式是从指定的第一性原理推导出的、广义麦克斯韦固体对施加的恒定应变率的完整且正确的响应。", "answer": "$$\n\\boxed{\\dot{\\epsilon}_{0} \\left( G_{\\infty} t + \\sum_{i=1}^{N} G_{i} \\tau_{i} \\left(1 - \\exp\\left(-\\frac{t}{\\tau_{i}}\\right)\\right) \\right)}\n$$", "id": "2681090"}, {"introduction": "这最后一个实践旨在连接抽象理论与实际应用，展示流变模型在真实材料表征中的用途。您将学习如何通过拟合实验频率扫描数据，来确定广义麦克斯韦模型（普罗尼级数）的参数。此任务涉及构建并求解一个线性最小二乘问题，这是从事粘弹性材料研究的工程师和科学家所需掌握的一项基本技能。", "problem": "您的任务是根据扫频数据，在广义麦克斯韦模型（普罗尼级数）中估算线性粘弹性材料的模态剪切模量。所考虑的模型是并联形式的广义麦克斯韦模型，其松弛模量为\n$$\nG(t) = G_{\\infty} + \\sum_{i=1}^{N} G_{i}\\, e^{-t/\\tau_{i}}, \\quad t \\ge 0,\n$$\n其中 $G_{\\infty}$ 是长时（平衡）剪切模量，$G_i$ 是模态剪切模量，$\\tau_i$ 是指定的松弛时间。激励为小幅正弦剪切应变 $\\gamma(t) = \\gamma_{0}\\sin(\\omega t)$，其中 $\\omega$ 是角频率，单位为 $\\mathrm{rad/s}$。所有量都必须在线性粘弹性范畴内处理。\n\n出发点（基本依据）：\n1. 线性粘弹性的 Boltzmann 叠加原理：\n$$\n\\sigma(t) = \\int_{0}^{t} G(t-\\xi)\\, \\frac{d\\gamma(\\xi)}{d\\xi}\\, d\\xi.\n$$\n2. 复数模量 $G^{\\ast}(\\omega)$ 在正弦激励下通过 $\\sigma(t) = \\Re\\{G^{\\ast}(\\omega)\\,\\gamma_{0} e^{i\\omega t}\\}$ 关联应力和应变，其中储能模量 $G'(\\omega)$ 和损耗模量 $G''(\\omega)$ 由 $G^{\\ast}(\\omega) = G'(\\omega) + i\\,G''(\\omega)$ 定义。\n3. 对于上述广义麦克斯韦模型，当 $\\tau_i$ 给定时，对于每个固定的 $\\omega$，$G'(\\omega)$ 和 $G''(\\omega)$ 对未知数 $\\{G_{i}\\}_{i=1}^{N}$ 和 $G_{\\infty}$ 的依赖关系是线性的。\n\n任务：\na) 从基本依据出发，为具有固定 $\\{\\tau_{i}\\}$ 和未知 $\\{G_{i}\\}$ 及 $G_{\\infty}$ 的广义麦克斯韦模型推导 $G'(\\omega)$ 和 $G''(\\omega)$ 的表达式。证明对于每个频率 $\\omega$，$G'(\\omega)$ 和 $G''(\\omega)$ 均可写为 $\\{G_{i}\\}$ 和 $G_{\\infty}$ 的线性组合，其系数仅依赖于 $\\omega$ 和 $\\{\\tau_{i}\\}$。\nb) 利用 (a) 部分的结果，为一组角频率 $\\{\\omega_{k}\\}_{k=1}^{K}$ 构建一个形式如下的单一超定线性方程组\n$$\n\\mathbf{A}\\,\\mathbf{x} \\approx \\mathbf{y},\n$$\n其中 $\\mathbf{x} = [G_{1},\\dots,G_{N},G_{\\infty}]^{\\mathsf{T}}$，数据向量 $\\mathbf{y}$ 堆叠了测量的储能模量 $\\{G'(\\omega_{k})\\}$ 和损耗模量 $\\{G''(\\omega_{k})\\}$。请根据 $\\{\\omega_{k}\\}$ 和 $\\{\\tau_{i}\\}$ 明确指定 $\\mathbf{A}$ 的结构。\nc) 实现一个线性最小二乘（LLS）求解器，用以从 $\\mathbf{A}$ 和 $\\mathbf{y}$ 估算 $\\mathbf{x}$。您的实现必须使用单位为 $\\mathrm{rad/s}$ 的角频率，并且必须返回以帕斯卡（$\\mathrm{Pa}$）为单位的 $\\{G_{i}\\}$ 和 $G_{\\infty}$ 的估算值。不施加任何约束；求解无约束 LLS 问题。\n\n测试套件（合成的、自洽的、物理上合理的）：\n对于所有情况，使用从 $f_{\\min} = 10^{-2}\\,\\mathrm{Hz}$ 到 $f_{\\max} = 10^{2}\\,\\mathrm{Hz}$ 的 $K=50$ 个对数间隔点的扫频，即：\n$$\nf_{k} \\in \\left[10^{-2},\\,10^{2}\\right]\\,\\mathrm{Hz}, \\quad k=1,\\dots,50, \\quad \\text{log-spaced},\n$$\n且 $\\omega_{k} = 2\\pi f_{k}$，单位为 $\\mathrm{rad/s}$。\n\n- 情况 A（理想路径，精确表示，无噪声）：\n  - 真实参数：$N=3$，$\\boldsymbol{\\tau} = [0.1,\\,1.0,\\,10.0]\\,\\mathrm{s}$，$\\mathbf{G} = [1.0\\times 10^{5},\\,2.0\\times 10^{5},\\,1.5\\times 10^{5}]\\,\\mathrm{Pa}$，$G_{\\infty} = 5.0\\times 10^{4}\\,\\mathrm{Pa}$。\n  - 选定的（用于估算的）松弛时间：与上述真实 $\\boldsymbol{\\tau}$ 完全相同。\n  - 根据模型构造无噪声数据 $\\{G'(\\omega_{k}), G''(\\omega_{k})\\}$。\n\n- 情况 B（单模态，带小噪声）：\n  - 真实参数：$N=1$，$\\boldsymbol{\\tau} = [1.0]\\,\\mathrm{s}$，$\\mathbf{G} = [3.0\\times 10^{5}]\\,\\mathrm{Pa}$，$G_{\\infty} = 1.0\\times 10^{5}\\,\\mathrm{Pa}$。\n  - 选定的（用于估算的）松弛时间：与上述真实 $\\boldsymbol{\\tau}$ 完全相同。\n  - 对 $\\{G'(\\omega_{k})\\}$ 和 $\\{G''(\\omega_{k})\\}$ 分别独立添加零均值高斯噪声，其标准差为\n    $$\n    \\sigma = 0.005 \\times \\mathrm{RMS}\\Big(\\big[G'(\\omega_{1}),\\dots,G'(\\omega_{K}),\\,G''(\\omega_{1}),\\dots,G''(\\omega_{K})\\big]\\Big),\n    $$\n    其中 $\\mathrm{RMS}(\\cdot)$ 表示均方根，并使用固定的伪随机种子 $2025$ 以确保可复现性。\n\n- 情况 C（过参数化估算，精确可表示性，无噪声）：\n  - 真实参数：$N_{\\text{true}}=2$，$\\boldsymbol{\\tau}_{\\text{true}} = [0.2,\\,5.0]\\,\\mathrm{s}$，$\\mathbf{G}_{\\text{true}} = [2.0\\times 10^{5},\\,1.0\\times 10^{5}]\\,\\mathrm{Pa}$，$G_{\\infty} = 0.8\\times 10^{5}\\,\\mathrm{Pa}$。\n  - 选定的（用于估算的）松弛时间：$\\boldsymbol{\\tau} = [0.05,\\,0.2,\\,1.0,\\,5.0,\\,20.0]\\,\\mathrm{s}$（注意该集合包含了所有真实时间，使得表示是精确的）。\n\n每种情况下需实现的数值任务：\n1. 根据真实参数生成合成数据 $\\{G'(\\omega_{k}), G''(\\omega_{k})\\}$（并按规定在情况 B 中添加噪声）。\n2. 使用选定的用于估算的松弛时间构建 LLS 系统 $\\mathbf{A}\\mathbf{x} \\approx \\mathbf{y}$。\n3. 求解 $\\mathbf{x} = [G_{1},\\dots,G_{N},G_{\\infty}]^{\\mathsf{T}}$。\n4. 将估算的 $\\{G_{i}\\}$ 和 $G_{\\infty}$ 四舍五入到最接近的整数帕斯卡，并以 $\\mathrm{Pa}$ 为单位报告。\n\n最终输出格式：\n您的程序应产生单行输出，其中包含一个无空格、以逗号分隔的列表的列表形式的结果，每个内部列表对应一个测试用例，并按 $[G_{1},\\dots,G_{N},G_{\\infty}]$ 的顺序列出四舍五入后的整数估算值。例如，一个有效的输出格式是\n$$\n\\big[\\,[g_{11},\\dots,g_{1N_{1}},g_{1\\infty}],\\,[g_{21},\\dots,g_{2N_{2}},g_{2\\infty}],\\,[g_{31},\\dots,g_{3N_{3}},g_{3\\infty}]\\,\\big],\n$$\n以单行形式精确打印，如下所示\n$$\n[[\\cdots],[\\cdots],[\\cdots]].\n$$\n所有报告的模量必须以 $\\mathrm{Pa}$ 为单位，并四舍五入到最接近的整数。$\\omega$ 的角度单位必须是 $\\mathrm{rad/s}$。", "solution": "该问题要求从频率相关的动态模量数据中，确定广义麦克斯韦模型的模态剪切模量 $\\{G_{i}\\}$ 和平衡模量 $G_{\\infty}$。这是一个经典的反问题，我们将其构建为一个线性最小二乘估算任务。\n\n### a) $G'(\\omega)$和$G''(\\omega)$的推导\n\n对于线性粘弹性材料，复数剪切模量 $G^\\ast(\\omega)$ 与松弛模量 $G(t)$ 之间的关系由单边傅里叶变换给出：\n$$\nG^\\ast(\\omega) = G_{\\infty} + i\\omega \\int_{0}^{\\infty} (G(t) - G_{\\infty}) e^{-i\\omega t} dt\n$$\n其中 $i = \\sqrt{-1}$ 是虚数单位，$\\omega$ 是角频率，而 $G_{\\infty} = \\lim_{t\\to\\infty} G(t)$ 是平衡模量。\n\n问题指定了松弛模量的广义麦克斯韦模型，也称为普罗尼级数：\n$$\nG(t) = G_{\\infty} + \\sum_{i=1}^{N} G_{i} e^{-t/\\tau_{i}}\n$$\n其中 $G_{i}$ 是模态剪切模量，$\\tau_{i}$ 是相应的松弛时间。由此，我们有：\n$$\nG(t) - G_{\\infty} = \\sum_{i=1}^{N} G_{i} e^{-t/\\tau_{i}}\n$$\n将此代入 $G^\\ast(\\omega)$ 的表达式中：\n$$\nG^\\ast(\\omega) = G_{\\infty} + i\\omega \\int_{0}^{\\infty} \\left( \\sum_{i=1}^{N} G_{i} e^{-t/\\tau_{i}} \\right) e^{-i\\omega t} dt\n$$\n根据积分的线性性质，我们可以交换求和与积分的顺序：\n$$\nG^\\ast(\\omega) = G_{\\infty} + \\sum_{i=1}^{N} G_{i} \\left( i\\omega \\int_{0}^{\\infty} e^{-t/\\tau_{i}} e^{-i\\omega t} dt \\right)\n$$\n该积分的计算结果为：\n$$\n\\int_{0}^{\\infty} e^{-(1/\\tau_{i} + i\\omega)t} dt = \\left[ \\frac{e^{-(1/\\tau_{i} + i\\omega)t}}{-(1/\\tau_{i} + i\\omega)} \\right]_{0}^{\\infty} = 0 - \\frac{1}{-(1/\\tau_{i} + i\\omega)} = \\frac{1}{1/\\tau_{i} + i\\omega} = \\frac{\\tau_{i}}{1 + i\\omega\\tau_{i}}\n$$\n将此结果代回 $G^\\ast(\\omega)$ 的表达式中：\n$$\nG^\\ast(\\omega) = G_{\\infty} + \\sum_{i=1}^{N} G_{i} \\frac{i\\omega\\tau_{i}}{1 + i\\omega\\tau_{i}}\n$$\n为了分离实部和虚部，我们对复数分数进行有理化处理：\n$$\n\\frac{i\\omega\\tau_{i}}{1 + i\\omega\\tau_{i}} = \\frac{i\\omega\\tau_{i}(1 - i\\omega\\tau_{i})}{(1 + i\\omega\\tau_{i})(1 - i\\omega\\tau_{i})} = \\frac{i\\omega\\tau_{i} - (i\\omega\\tau_{i})^2}{1 - (i\\omega\\tau_{i})^2} = \\frac{i\\omega\\tau_{i} + \\omega^2\\tau_{i}^2}{1 + \\omega^2\\tau_{i}^2} = \\frac{\\omega^2\\tau_{i}^2}{1 + \\omega^2\\tau_{i}^2} + i \\frac{\\omega\\tau_{i}}{1 + \\omega^2\\tau_{i}^2}\n$$\n因此，复数模量为：\n$$\nG^\\ast(\\omega) = G_{\\infty} + \\sum_{i=1}^{N} G_{i} \\left( \\frac{\\omega^2\\tau_{i}^2}{1 + \\omega^2\\tau_{i}^2} + i \\frac{\\omega\\tau_{i}}{1 + \\omega^2\\tau_{i}^2} \\right)\n$$\n根据定义，$G^\\ast(\\omega) = G'(\\omega) + iG''(\\omega)$，其中 $G'(\\omega)$ 是储能模量，$G''(\\omega)$ 是损耗模量。令实部和虚部分别相等，即可得到所需的表达式：\n$$\nG'(\\omega) = G_{\\infty} + \\sum_{i=1}^{N} G_{i} \\frac{\\omega^2\\tau_{i}^2}{1 + \\omega^2\\tau_{i}^2}\n$$\n$$\nG''(\\omega) = \\sum_{i=1}^{N} G_{i} \\frac{\\omega\\tau_{i}}{1 + \\omega^2\\tau_{i}^2}\n$$\n这些表达式清楚地表明，对于任意给定的频率 $\\omega$ 和一组指定的松弛时间 $\\{\\tau_{i}\\}$，$G'(\\omega)$ 和 $G''(\\omega)$ 都是未知参数 $\\{G_{i}\\}_{i=1}^{N}$ 和 $G_{\\infty}$ 的线性函数。\n\n### b) 线性最小二乘系统的构建\n\n我们的任务是估算参数向量 $\\mathbf{x} = [G_{1}, G_{2}, \\dots, G_{N}, G_{\\infty}]^{\\mathsf{T}}$，其维度为 $(N+1) \\times 1$。实验数据由在一组 $K$ 个离散角频率 $\\{\\omega_{k}\\}_{k=1}^{K}$ 下测得的储能模量和损耗模量组成。设测量值为 $\\{G'_{k, \\text{data}}\\}$ 和 $\\{G''_{k, \\text{data}}\\}$。\n\n我们通过堆叠所有 $2K$ 个测量值来构造一个单一的数据向量 $\\mathbf{y}$：\n$$\n\\mathbf{y} = [G'_{1, \\text{data}}, \\dots, G'_{K, \\text{data}}, G''_{1, \\text{data}}, \\dots, G''_{K, \\text{data}}]^{\\mathsf{T}}\n$$\n该向量的维度为 $2K \\times 1$。问题是在最小二乘意义下找到最佳满足线性系统 $\\mathbf{A}\\mathbf{x} \\approx \\mathbf{y}$ 的 $\\mathbf{x}$。维度为 $2K \\times (N+1)$ 的系统矩阵 $\\mathbf{A}$ 编码了(a)部分推导出的线性关系。\n\n矩阵 $\\mathbf{A}$ 可以构建为两个块 $\\mathbf{A}'$ 和 $\\mathbf{A}''$ 的垂直拼接，它们分别对应于储能模量和损耗模量的方程：\n$$\n\\mathbf{A} = \\begin{bmatrix} \\mathbf{A}' \\\\ \\mathbf{A}'' \\end{bmatrix}\n$$\n块 $\\mathbf{A}'$ 的维度为 $K \\times (N+1)$。其元素是 $G'(\\omega_{k})$ 方程中未知数的系数：\n$$\n(\\mathbf{A}')_{k,j} = \\begin{cases} \\frac{\\omega_{k}^2\\tau_{j}^2}{1 + \\omega_{k}^2\\tau_{j}^2} & \\text{for } j = 1, \\dots, N \\\\ 1 & \\text{for } j = N+1 \\end{cases}\n$$\n块 $\\mathbf{A}''$ 的维度也为 $K \\times (N+1)$。其元素是 $G''(\\omega_{k})$ 方程中的系数：\n$$\n(\\mathbf{A}'')_{k,j} = \\begin{cases} \\frac{\\omega_{k}\\tau_{j}}{1 + \\omega_{k}^2\\tau_{j}^2} & \\text{for } j = 1, \\dots, N \\\\ 0 & \\text{for } j = N+1 \\end{cases}\n$$\n这就完全指定了超定线性系统 $\\mathbf{A}\\mathbf{x} \\approx \\mathbf{y}$ 的结构。\n\n### c) 数值实现策略\n\n无约束线性最小二乘问题是找到一个向量 $\\mathbf{x}$，以最小化残差的欧几里得范数的平方，即 $||\\mathbf{A}\\mathbf{x} - \\mathbf{y}||_2^2$。标准解由正规方程组给出：\n$$\n\\mathbf{x} = (\\mathbf{A}^{\\mathsf{T}}\\mathbf{A})^{-1}\\mathbf{A}^{\\mathsf{T}}\\mathbf{y}\n$$\n为了获得更优的数值稳定性，应避免直接计算逆矩阵 $(\\mathbf{A}^{\\mathsf{T}}\\mathbf{A})^{-1}$。取而代之的是，首选基于矩阵分解（如 QR 或 SVD）的方法。Python 中的 `numpy.linalg.lstsq` 函数为此提供了鲁棒的实现。\n\n对每个测试用例，实现将按以下步骤进行：\n1.  **生成数据**：使用真实模型参数生成合成数据向量 $\\mathbf{y}$。对于情况 B，将具有指定标准差的零均值高斯噪声添加到精确数据中。\n2.  **组装系统**：基于用于估算的松弛时间 $\\{\\tau_i\\}$ 和扫频 $\\{\\omega_k\\}$ 来构建矩阵 $\\mathbf{A}$。数据向量 $\\mathbf{y}$ 被堆叠起来。\n3.  **求解系统**：调用 `numpy.linalg.lstsq` 函数并传入 $\\mathbf{A}$ 和 $\\mathbf{y}$ 来计算估算的参数向量 $\\mathbf{x}_{\\text{est}}$。\n4.  **报告结果**：按照要求，将 $\\mathbf{x}_{\\text{est}}$ 中的浮点数值四舍五入到最接近的整数，以表示单位为帕斯卡的模量。然后将这些整数列表格式化为指定的最终输出字符串。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the modal shear moduli of a generalized Maxwell model\n    from synthetic frequency sweep data using linear least squares.\n    \"\"\"\n\n    def calculate_moduli(omega, tau, G, G_inf):\n        \"\"\"\n        Calculates storage (G') and loss (G'') moduli for a generalized Maxwell model.\n        \n        Args:\n            omega (np.ndarray): Angular frequencies (rad/s).\n            tau (np.ndarray): Relaxation times (s).\n            G (np.ndarray): Modal shear moduli (Pa).\n            G_inf (float): Equilibrium modulus (Pa).\n\n        Returns:\n            tuple[np.ndarray, np.ndarray]: G_prime, G_double_prime.\n        \"\"\"\n        G_prime = np.zeros_like(omega)\n        G_double_prime = np.zeros_like(omega)\n\n        for i in range(len(G)):\n            omega_tau = omega * tau[i]\n            omega_tau_sq = omega_tau**2\n            denominator = 1.0 + omega_tau_sq\n            \n            G_prime += G[i] * (omega_tau_sq / denominator)\n            G_double_prime += G[i] * (omega_tau / denominator)\n            \n        G_prime += G_inf\n        \n        return G_prime, G_double_prime\n\n    def process_case(case_params):\n        \"\"\"\n        Processes a single test case: generates data, builds and solves the LLS system.\n        \"\"\"\n        # Unpack parameters\n        true_params = case_params['true']\n        est_params = case_params['estimation']\n        noise_params = case_params.get('noise', None)\n\n        # 1. Generate frequency sweep\n        K = 50\n        f_min, f_max = 1e-2, 1e2\n        freqs = np.logspace(np.log10(f_min), np.log10(f_max), K)\n        omega = 2 * np.pi * freqs\n\n        # 2. Generate synthetic data (y vector)\n        G_prime_true, G_double_prime_true = calculate_moduli(\n            omega, \n            np.array(true_params['tau']), \n            np.array(true_params['G']), \n            true_params['G_inf']\n        )\n        \n        y_true = np.concatenate((G_prime_true, G_double_prime_true))\n        \n        if noise_params:\n            rms = np.sqrt(np.mean(y_true**2))\n            std_dev = noise_params['level'] * rms\n            rng = np.random.default_rng(noise_params['seed'])\n            noise = rng.normal(0, std_dev, size=y_true.shape)\n            y = y_true + noise\n        else:\n            y = y_true\n\n        # 3. Build the LLS system matrix A\n        N_est = est_params['N']\n        tau_est = np.array(est_params['tau'])\n        num_unknowns = N_est + 1\n        num_measurements = 2 * K\n        \n        A = np.zeros((num_measurements, num_unknowns))\n\n        # A' block (for G')\n        for k in range(K):\n            for j in range(N_est):\n                omega_tau = omega[k] * tau_est[j]\n                omega_tau_sq = omega_tau**2\n                A[k, j] = omega_tau_sq / (1.0 + omega_tau_sq)\n            A[k, N_est] = 1.0 # Coefficient for G_inf\n\n        # A'' block (for G'')\n        for k in range(K):\n            row_idx = k + K\n            for j in range(N_est):\n                omega_tau = omega[k] * tau_est[j]\n                omega_tau_sq = omega_tau**2\n                A[row_idx, j] = omega_tau / (1.0 + omega_tau_sq)\n            A[row_idx, N_est] = 0.0 # Coefficient for G_inf\n\n        # 4. Solve for x using LLS\n        x_est, _, _, _ = np.linalg.lstsq(A, y, rcond=None)\n        \n        # 5. Round results to nearest integer\n        return np.round(x_est).astype(int).tolist()\n\n    # Define test cases from the problem statement\n    test_cases = [\n        {\n            'true': {'N': 3, 'tau': [0.1, 1.0, 10.0], 'G': [1.0e5, 2.0e5, 1.5e5], 'G_inf': 5.0e4},\n            'estimation': {'N': 3, 'tau': [0.1, 1.0, 10.0]}\n        },\n        {\n            'true': {'N': 1, 'tau': [1.0], 'G': [3.0e5], 'G_inf': 1.0e5},\n            'estimation': {'N': 1, 'tau': [1.0]},\n            'noise': {'level': 0.005, 'seed': 2025}\n        },\n        {\n            'true': {'N': 2, 'tau': [0.2, 5.0], 'G': [2.0e5, 1.0e5], 'G_inf': 0.8e5},\n            'estimation': {'N': 5, 'tau': [0.05, 0.2, 1.0, 5.0, 20.0]}\n        }\n    ]\n\n    results = [process_case(case) for case in test_cases]\n    \n    # Format the final output string exactly as required\n    results_str = ','.join([f'[{\",\".join(map(str, r))}]' for r in results])\n    print(f\"[{results_str}]\")\n\nsolve()\n```", "id": "2681086"}]}