{"hands_on_practices": [{"introduction": "理解材料对称性如何简化本构关系是连续介质力学的核心技能。本练习将指导您通过应用立方对称群的变换，从一个具有21个独立常数的完全各向异性弹性张量 $\\mathbb{C}$ 出发，系统地推导出仅含三个独立参数的立方弹性张量形式。这个过程不仅展示了对称性约束的强大威力，也为您提供了将张量分量与可测量的工程常数（如杨氏模量 $E$ 和泊松比 $\\nu$）联系起来的实践经验。[@problem_id:2658748]", "problem": "一个处于小应变状态的均匀线性弹性固体，其特性由一个四阶弹性张量 $\\mathbb{C}$ 描述。该张量通过 $\\boldsymbol{\\sigma} = \\mathbb{C} : \\boldsymbol{\\varepsilon}$ 将对称应变张量 $\\boldsymbol{\\varepsilon}$ 映射到对称 Cauchy 应力 $\\boldsymbol{\\sigma}$。假设 $\\mathbb{C}$ 存在应变能密度 $\\psi(\\boldsymbol{\\varepsilon}) = \\tfrac{1}{2}\\,\\boldsymbol{\\varepsilon} : \\mathbb{C} : \\boldsymbol{\\varepsilon}$，因此 $\\mathbb{C}$ 具有次对称性 $C_{ijkl} = C_{jikl} = C_{ijlk}$ 和主对称性 $C_{ijkl} = C_{klij}$。材料对称性是任何满足以下条件的正常正交张量 $\\mathbf{Q}$：在本构关系在基变换 $\\boldsymbol{\\varepsilon} \\mapsto \\mathbf{Q}\\,\\boldsymbol{\\varepsilon}\\,\\mathbf{Q}^{\\mathsf{T}}$ 下保持不变，即：\n$$\nC_{pqrs} = Q_{pi} Q_{qj} Q_{rk} Q_{sl}\\, C_{ijkl} \\quad \\text{对材料对称群中的所有 } \\mathbf{Q} \\text{ 均成立。}\n$$\n考虑一个晶体，其材料对称群是完全立方（八面体）点群，例如，由绕三个笛卡尔坐标轴的 $\\tfrac{\\pi}{2}$ 旋转以及这些坐标轴的排列生成。仅从上述本构不变性和 $\\mathbb{C}$ 的对称性出发：\n1) 推导与立方对称性一致的 $\\mathbb{C}$ 的最一般的三参数形式，并用常数 $C_{11}$、$C_{12}$ 和 $C_{44}$ 以 Voigt $6 \\times 6$ 表示法给出。 \n2) 对刚度求逆以获得柔度矩阵 $\\mathbb{S} = \\mathbb{C}^{-1}$，并确定沿立方体轴加载的工程常数：杨氏模量 $E$、泊松比 $\\nu$ 和坐标平面上的剪切模量 $G$，所有常数均采用常规的工程剪切应变分量定义。\n3) 根据您的表达式，陈述在立方弹性中成立的九个正交各向异性工程常数 $\\{E_{1},E_{2},E_{3},\\nu_{12},\\nu_{23},\\nu_{31},G_{12},G_{23},G_{31}\\}$ 之间的代数约束关系，并解释这些约束如何将立方弹性与一般正交各向异性及各向同性区分开来。\n\n将您的最终结果报告为用 $C_{11}$、$C_{12}$ 和 $C_{44}$ 符号表示的有序三元组 $\\big(E,\\nu,G\\big)$。不需要进行数值计算。将您的最终答案表示为包含三个条目的单行矩阵。最终答案中不要包含单位。", "solution": "在尝试解答之前，对问题进行验证。\n\n步骤 1：提取的已知条件\n- 均匀、线性弹性、小应变固体。\n- 本构律：$\\boldsymbol{\\sigma} = \\mathbb{C} : \\boldsymbol{\\varepsilon}$，其中 $\\boldsymbol{\\sigma}$ 和 $\\boldsymbol{\\varepsilon}$ 是对称二阶张量。\n- 弹性张量 $\\mathbb{C}$ 是四阶的。\n- 存在应变能密度：$\\psi(\\boldsymbol{\\varepsilon}) = \\frac{1}{2}\\,\\boldsymbol{\\varepsilon} : \\mathbb{C} : \\boldsymbol{\\varepsilon}$。\n- $\\mathbb{C}$ 的对称性：次对称性 $C_{ijkl} = C_{jikl} = C_{ijlk}$ 和主对称性 $C_{ijkl} = C_{klij}$。\n- 材料对称性条件：对于材料对称群中的所有正常正交张量 $\\mathbf{Q}$，$C_{pqrs} = Q_{pi} Q_{qj} Q_{rk} Q_{sl}\\, C_{ijkl}$。\n- 材料对称群是完全立方（八面体）点群。\n\n步骤 2：验证\n- **科学依据**：该问题在线性弹性和晶体固体张量分析的成熟框架内提出。弹性张量、材料对称群（特别是立方对称群）、Voigt 表示法和工程常数的概念是材料科学和固体力学的基础。该问题是该领域的标准、典型练习。它在科学上是合理的。\n- **良定性**：该问题是良定的。它要求在特定的对称性约束下推导张量的形式，对所得矩阵求逆，并对其分量进行物理解释。这将导出一个唯一且有意义的解。\n- **客观性**：问题陈述精确、量化，并且没有主观或含糊的语言。\n\n步骤 3：结论\n该问题是有效的。它是连续介质力学中的一个标准问题，科学上合理、良定且客观。将提供解答。\n\n解答按要求分三部分进行。\n\n第 1 部分：立方弹性张量 $\\mathbb{C}$ 的推导\n我们从最一般的弹性张量 $\\mathbb{C}$ 开始，它仅具有固有的次对称性和主对称性，有 21 个独立分量。然后，我们施加立方对称性所要求的约束。立方对称群包括（除其他外）绕坐标轴 ($x_1, x_2, x_3$) 的 $\\pi$ 旋转和绕某个坐标轴的 $\\frac{\\pi}{2}$ 旋转。\n\n首先，考虑绕 $x_3$ 轴旋转 $\\pi$。变换矩阵为 $\\mathbf{Q} = \\text{diag}(-1, -1, 1)$。不变性条件 $C_{ijkl} = Q_{ip}Q_{jq}Q_{kr}Q_{ls}C_{pqrs}$ 必须成立。一个分量 $C_{ijkl}$ 仅在乘积 $Q_{ii}Q_{jj}Q_{kk}Q_{ll}$（隐含求和，但此处指标固定）为 $+1$ 时才保持不变。任何具有奇数个等于 1 或 2 的指标的分量都会变号。例如，$C'_{1113} = Q_{11}Q_{11}Q_{11}Q_{33}C_{1113} = (-1)(-1)(-1)(1)C_{1113} = -C_{1113}$。为满足不变性，必须有 $C_{1113}=0$。将此逻辑应用于绕所有三个轴的 $\\pi$ 旋转，可以证明唯一非零的分量是 $C_{iiii}$、$C_{iijj}$（其中 $i \\ne j$）和 $C_{ijij}$（其中 $i \\ne j$）形式的分量。这是正交各向异性材料的形式，它有 9 个独立常数。在 Voigt 矩阵表示法中，这对应于：\n$$\n\\mathbf{C}_{\\text{ortho}} = \\begin{pmatrix} C_{11} & C_{12} & C_{13} & 0 & 0 & 0 \\\\ C_{12} & C_{22} & C_{23} & 0 & 0 & 0 \\\\ C_{13} & C_{23} & C_{33} & 0 & 0 & 0 \\\\ 0 & 0 & 0 & C_{44} & 0 & 0 \\\\ 0 & 0 & 0 & 0 & C_{55} & 0 \\\\ 0 & 0 & 0 & 0 & 0 & C_{66} \\end{pmatrix}\n$$\n此处，Voigt 表示法的映射为 $11 \\to 1$、$22 \\to 2$、$33 \\to 3$、$23 \\to 4$、$13 \\to 5$、$12 \\to 6$。分量为 $C_{11}=C_{1111}$、$C_{12}=C_{1122}$、$C_{44}=C_{2323}$ 等。\n\n接下来，我们施加立方群的更高对称性，例如绕 $x_3$ 轴旋转 $\\frac{\\pi}{2}$。变换矩阵 $\\mathbf{Q}$ 满足 $x_1' = x_2, x_2' = -x_1, x_3' = x_3$。其分量为 $Q_{12}=1$、$Q_{21}=-1$、$Q_{33}=1$，其余均为零。\n应用不变性条件 $C_{pqrs} = Q_{pi} Q_{qj} Q_{rk} Q_{sl}\\, C_{ijkl}$：\n- 对于 $C_{1111}$：$C_{1111}' = Q_{1i}Q_{1j}Q_{1k}Q_{1l}C_{ijkl} = Q_{12}Q_{12}Q_{12}Q_{12}C_{2222} = C_{2222}$。不变性要求 $C_{1111} = C_{2222}$。\n- 通过考虑绕 $x_1$ 轴旋转 $\\frac{\\pi}{2}$，可以类似地证明 $C_{2222} = C_{3333}$。因此，$C_{1111} = C_{2222} = C_{3333}$。在 Voigt 表示法中，这意味着 $C_{11}=C_{22}=C_{33}$。\n\n- 对于 $C_{1133}$：$C_{1133}' = Q_{1i}Q_{1j}Q_{3k}Q_{3l}C_{ijkl} = Q_{12}Q_{12}Q_{33}Q_{33}C_{2233} = C_{2233}$。不变性要求 $C_{1133} = C_{2233}$。\n- 根据坐标轴排列的对称性，我们还必须有 $C_{1122} = C_{1133} = C_{2233}$。由于主对称性 $C_{iijj}=C_{jji i}$，所有非对角正应力分量都相等。在 Voigt 表示法中，这意味着 $C_{12}=C_{13}=C_{23}$。\n\n- 对于 $C_{2323}$：$C_{2323}' = Q_{2i}Q_{3j}Q_{2k}Q_{3l}C_{ijkl} = Q_{21}Q_{33}Q_{21}Q_{33}C_{1313} = (-1)(1)(-1)(1)C_{1313} = C_{1313}$。不变性要求 $C_{2323} = C_{1313}$。\n- 根据坐标轴排列，我们还必须有 $C_{1212} = C_{2323} = C_{1313}$。在 Voigt 表示法中，这意味着 $C_{44}=C_{55}=C_{66}$。\n\n因此，正交各向异性矩阵简化为具有 3 个独立常数 $C_{11}$、$C_{12}$ 和 $C_{44}$ 的立方材料的形式：\n$$\n\\mathbf{C} = \\begin{pmatrix} C_{11} & C_{12} & C_{12} & 0 & 0 & 0 \\\\ C_{12} & C_{11} & C_{12} & 0 & 0 & 0 \\\\ C_{12} & C_{12} & C_{11} & 0 & 0 & 0 \\\\ 0 & 0 & 0 & C_{44} & 0 & 0 \\\\ 0 & 0 & 0 & 0 & C_{44} & 0 \\\\ 0 & 0 & 0 & 0 & 0 & C_{44} \\end{pmatrix}\n$$\n这是与立方对称性一致的最一般形式。\n\n第 2 部分：柔度矩阵 $\\mathbb{S}$ 和工程常数\n柔度矩阵 $\\mathbf{S}$ 是刚度矩阵 $\\mathbf{C}$ 的逆。由于 $\\mathbf{C}$ 是块对角矩阵，我们可以分别对块求逆。\n剪切部分是平凡的：对角矩阵 $\\text{diag}(C_{44}, C_{44}, C_{44})$ 的逆是 $\\text{diag}(1/C_{44}, 1/C_{44}, 1/C_{44})$。这得出 $S_{44}=S_{55}=S_{66}=1/C_{44}$。\n对于正应力-应变部分，我们必须对 $3 \\times 3$ 矩阵求逆：\n$$ \\mathbf{C}_{\\text{norm}} = \\begin{pmatrix} C_{11} & C_{12} & C_{12} \\\\ C_{12} & C_{11} & C_{12} \\\\ C_{12} & C_{12} & C_{11} \\end{pmatrix} $$\n其行列式为 $\\det(\\mathbf{C}_{\\text{norm}}) = (C_{11}-C_{12})^2(C_{11}+2C_{12})$。\n逆矩阵 $\\mathbf{S}_{\\text{norm}} = \\mathbf{C}_{\\text{norm}}^{-1}$ 可以通过伴随矩阵法求得。$\\mathbf{S}_{\\text{norm}}$ 的分量是：\n$$ S_{11} = \\frac{C_{11}^2 - C_{12}^2}{\\det(\\mathbf{C}_{\\text{norm}})} = \\frac{(C_{11}-C_{12})(C_{11}+C_{12})}{(C_{11}-C_{12})^2(C_{11}+2C_{12})} = \\frac{C_{11}+C_{12}}{(C_{11}-C_{12})(C_{11}+2C_{12})} $$\n$$ S_{12} = \\frac{C_{12}^2 - C_{11}C_{12}}{\\det(\\mathbf{C}_{\\text{norm}})} = \\frac{-C_{12}(C_{11}-C_{12})}{(C_{11}-C_{12})^2(C_{11}+2C_{12})} = \\frac{-C_{12}}{(C_{11}-C_{12})(C_{11}+2C_{12})} $$\n完整的柔度矩阵 $\\mathbf{S}$ 具有与 $\\mathbf{C}$ 相同的结构，其分量为 $S_{11}$、$S_{12}$ 和 $S_{44}$。\n\n现在我们将这些分量与沿立方体轴加载的工程常数联系起来。考虑沿 $x_1$ 轴的单轴拉伸，因此 $\\sigma_1 \\ne 0$ 且所有其他 $\\sigma_i=0$。根据 $\\boldsymbol{\\varepsilon} = \\mathbf{S}\\boldsymbol{\\sigma}$：\n- 轴向应变：$\\varepsilon_1 = S_{11}\\sigma_1$\n- 横向应变：$\\varepsilon_2 = S_{12}\\sigma_1$ 和 $\\varepsilon_3 = S_{12}\\sigma_1$\n杨氏模量为 $E = \\sigma_1/\\varepsilon_1 = 1/S_{11}$。\n$$ E = \\frac{1}{S_{11}} = \\frac{(C_{11}-C_{12})(C_{11}+2C_{12})}{C_{11}+C_{12}} $$\n泊松比为 $\\nu = -\\varepsilon_2/\\varepsilon_1 = -S_{12}/S_{11}$。\n$$ \\nu = -\\frac{S_{12}}{S_{11}} = -\\frac{-C_{12}/((C_{11}-C_{12})(C_{11}+2C_{12}))}{(C_{11}+C_{12})/((C_{11}-C_{12})(C_{11}+2C_{12}))} = \\frac{C_{12}}{C_{11}+C_{12}} $$\n对于坐标平面上的纯剪切，例如 $1-2$ 平面，我们有 $\\sigma_6 = \\sigma_{12} \\ne 0$ 且其他应力为零。工程剪切应变为 $\\gamma_{12} = \\varepsilon_6 = S_{66}\\sigma_6$。剪切模量 $G$ 定义为 $G = \\sigma_6/\\gamma_{12} = 1/S_{66}$。由于 $S_{66}=S_{44}=1/C_{44}$，我们有：\n$$ G = C_{44} $$\n该结果与张量关系 $\\sigma_{12} = 2C_{1212}\\varepsilon_{12}$ 和工程定义 $G = \\sigma_{12}/\\gamma_{12} = \\sigma_{12}/(2\\varepsilon_{12})$ 一致，后者给出 $G=C_{1212}$。对于立方材料，对称性要求 $C_{1212}=C_{2323}$，在Voigt表示法中即 $C_{66}=C_{44}$。\n\n第 3 部分：约束和区别\n对于一般的正交各向异性材料，其柔度矩阵由 9 个独立的工程常数描述：$E_1, E_2, E_3, \\nu_{12}, \\nu_{23}, \\nu_{31}, G_{12}, G_{23}, G_{31}$。柔度矩阵为：\n$$ \\mathbf{S}_{\\text{ortho}} = \\begin{pmatrix} 1/E_1 & -\\nu_{12}/E_1 & -\\nu_{13}/E_1 & 0 & 0 & 0 \\\\ -\\nu_{21}/E_2 & 1/E_2 & -\\nu_{23}/E_2 & 0 & 0 & 0 \\\\ -\\nu_{31}/E_3 & -\\nu_{32}/E_3 & 1/E_3 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 1/G_{23} & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 1/G_{13} & 0 \\\\ 0 & 0 & 0 & 0 & 0 & 1/G_{12} \\end{pmatrix} $$\n其中对称性要求 $\\nu_{ij}/E_i = \\nu_{ji}/E_j$。\n将此与立方柔度矩阵比较，揭示了立方对称性的以下约束：\n1.  对角正应力分量相等：$S_{11}=S_{22}=S_{33} \\Rightarrow 1/E_1 = 1/E_2 = 1/E_3$，所以 $E_1=E_2=E_3$。\n2.  非对角正应力分量相等：$S_{12}=S_{13}=S_{23} \\Rightarrow \\nu_{12}/E_1 = \\nu_{13}/E_1 = \\nu_{23}/E_2$。由于 $E_1=E_2$，这意味着 $\\nu_{12} = \\nu_{13} = \\nu_{23}$。\n3.  剪切分量相等：$S_{44}=S_{55}=S_{66} \\Rightarrow 1/G_{23} = 1/G_{13} = 1/G_{12}$，所以 $G_{12}=G_{23}=G_{13}$。\n\n这些约束将正交各向异性材料的 9 个独立常数减少到立方材料的 3 个。像木材这样的正交各向异性材料不满足这些等式。\n\n为了区分立方弹性与各向同性弹性，我们注意到各向同性材料只有 2 个独立的弹性常数（例如 $E$ 和 $\\nu$），其剪切模量由关系式 $G = E / (2(1+\\nu))$ 给出。一个立方材料是各向同性的，当且仅当其常数满足这个附加约束。代入我们推导出的 $E$、$\\nu$ 和 $G$ 的表达式：\n$$ C_{44} = \\frac{\\frac{(C_{11}-C_{12})(C_{11}+2C_{12})}{C_{11}+C_{12}}}{2\\left(1 + \\frac{C_{12}}{C_{11}+C_{12}}\\right)} = \\frac{\\frac{(C_{11}-C_{12})(C_{11}+2C_{12})}{C_{11}+C_{12}}}{2\\left(\\frac{C_{11}+C_{12}+C_{12}}{C_{11}+C_{12}}\\right)} = \\frac{(C_{11}-C_{12})(C_{11}+2C_{12})}{2(C_{11}+2C_{12})} $$\n$$ C_{44} = \\frac{C_{11}-C_{12}}{2} $$\n这就是立方材料的各向同性条件。各向异性通常用 Zener 比率 $A = 2C_{44}/(C_{11}-C_{12})$ 来量化，对于各向同性材料，该比率必须等于 1。因此，立方材料比各向同性材料更一般，只有当材料常数满足特定的代数关系 $2C_{44} = C_{11}-C_{12}$ 时，它才变成各向同性的。\n所需的最终答案是有序三元组 $(E, \\nu, G)$。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{(C_{11}-C_{12})(C_{11}+2C_{12})}{C_{11}+C_{12}} & \\frac{C_{12}}{C_{11}+C_{12}} & C_{44} \\end{pmatrix}}\n$$", "id": "2658748"}, {"introduction": "材料对称群的定义要求本构关系在群中 *所有* 变换下保持不变。本练习是一个精巧的思想实验，旨在强调这一要求的严格性。您将构建一个特定的应变能函数 $\\Psi(C)$，它在一个对称群的子集（绕特定轴的 $\\pi$ 弧度旋转）下保持不变，但在该群的另一个元素（$\\pi/2$ 弧度旋转）下却会改变，从而证明满足部分对称性约束并不足以保证更高阶的完整对称性。[@problem_id:2658672]", "problem": "考虑一个三维超弹性材料，其储存能量密度是右柯西-格林变形张量 $C$ 的标量函数，记为 $W(F)=\\Psi(C)$，其中 $C=F^{\\top}F$。回顾基本定义：客观性（框架无关性）要求对于所有真正交张量 $Q \\in \\mathrm{SO}(3)$，都有 $W(QF)=W(F)$；材料对称群 $\\mathcal{G}$ 要求对于所有 $R \\in \\mathcal{G}$，都有 $W(FR)=W(F)$，这等价于对于所有 $R \\in \\mathcal{G}$，都有 $\\Psi(R^{\\top} C R)=\\Psi(C)$。\n\n要求您构造并验证一个反例，以证明客观性以及在某个更高对称类（此处为绕 $\\mathbf{e}_{1}$ 轴的横观各向同性）的真子集下的不变性，并不意味着具有完整的更高对称性。\n\n按以下步骤进行。\n\n- 将储存能量密度定义为\n$$\n\\Psi(C)=\\operatorname{tr}(C)+\\gamma\\Big[\\big(\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{2}\\big)^{2}-\\big(\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{3}\\big)^{2}\\Big],\n$$\n其中 $\\gamma \\neq 0$ 为常数参数，$\\{\\mathbf{e}_{1},\\mathbf{e}_{2},\\mathbf{e}_{3}\\}$ 是参考构型中的固定标准正交基。将 $\\Psi$ 视为无量纲。\n\n- 令 $S$ 为绕 $\\mathbf{e}_{1}$ 轴旋转 $\\pi$ 的旋转，即，\n$$\nS=\\mathrm{diag}(1,-1,-1),\n$$\n并令 $R$ 为绕 $\\mathbf{e}_{1}$ 轴旋转 $\\pi/2$ 的旋转（角度以弧度为单位），\n$$\nR=\\begin{pmatrix}\n1 & 0 & 0\\\\\n0 & 0 & -1\\\\\n0 & 1 & 0\n\\end{pmatrix}.\n$$\n\n- 考虑特定的正定测试张量\n$$\nC=I+s\\big(\\mathbf{e}_{1}\\otimes\\mathbf{e}_{2}+\\mathbf{e}_{2}\\otimes\\mathbf{e}_{1}\\big),\n$$\n其中 $s \\in \\mathbb{R}$ 且 $|s|$ 足够小以确保 $C \\succ 0$。\n\n任务：\n1. 仅使用上述定义，证明 $\\Psi$ 是客观的。\n2. 证明 $\\Psi(S^{\\top}CS)=\\Psi(C)$，从而表明 $\\Psi$ 在绕 $\\mathbf{e}_{1}$ 的横观各向同性子群的单个非平凡元 $S$ 下是不变的，但不要假定任何进一步的不变性。\n3. 以 $\\gamma$ 和 $s$ 的形式，计算差值\n$$\n\\Delta W=\\Psi(R^{\\top}CR)-\\Psi(C)\n$$\n的显式代数值，从而证明在子集 $\\{I,S\\}$ 下的不变性并不意味着在所有绕 $\\mathbf{e}_{1}$ 的旋转下的不变性。\n\n将 $\\Delta W$ 的最终答案表示为不带单位的、含 $s$ 和 $\\gamma$ 的闭式代数表达式。", "solution": "我们从基本原理出发。\n\n1. 客观性。根据定义，如果对于所有真正交张量 $Q \\in \\mathrm{SO}(3)$，都有 $W(QF)=W(F)$，则储存能量是客观的（框架无关的）。等价地，如果 $W(F)=\\Psi(C)$ 且 $C=F^{\\top}F$，则\n$$\nW(QF)=\\Psi\\big((QF)^{\\top}(QF)\\big)=\\Psi\\big(F^{\\top}Q^{\\top}QF\\big)=\\Psi(F^{\\top}F)=W(F),\n$$\n因为 $Q^{\\top}Q=I$。我们的 $\\Psi$ 显式地仅是 $C$ 的函数，因此根据其构造是客观的。\n\n2. 在横观各向同性子集下的材料对称性。对于作用在参考构型上的群元 $R$，其材料对称性条件是 $\\Psi(R^{\\top}CR)=\\Psi(C)$。我们对单个非平凡元 $S=\\mathrm{diag}(1,-1,-1)$（绕 $\\mathbf{e}_{1}$ 旋转 $\\pi$）进行检验。记 $C' = S^{\\top} C S = S C S$。迹在正交相似变换下是不变的：\n$$\n\\operatorname{tr}(C')=\\operatorname{tr}(S^{\\top}CS)=\\operatorname{tr}(C).\n$$\n接下来，我们研究各向异性二次项。使用表示式\n$$\n\\mathbf{e}_{i}^{\\top}C'\\,\\mathbf{e}_{j}=(S\\mathbf{e}_{i})^{\\top}C\\,(S\\mathbf{e}_{j}),\n$$\n以及 $S\\mathbf{e}_{1}=\\mathbf{e}_{1}$，$S\\mathbf{e}_{2}=-\\mathbf{e}_{2}$ 和 $S\\mathbf{e}_{3}=-\\mathbf{e}_{3}$ 这一事实，我们得到\n$$\n\\mathbf{e}_{1}^{\\top}C'\\,\\mathbf{e}_{2}=(S\\mathbf{e}_{1})^{\\top}C\\,(S\\mathbf{e}_{2})=\\mathbf{e}_{1}^{\\top}C\\,(-\\mathbf{e}_{2})=-\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{2},\n$$\n和\n$$\n\\mathbf{e}_{1}^{\\top}C'\\,\\mathbf{e}_{3}=(S\\mathbf{e}_{1})^{\\top}C\\,(S\\mathbf{e}_{3})=\\mathbf{e}_{1}^{\\top}C\\,(-\\mathbf{e}_{3})=-\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{3}.\n$$\n因此，它们的平方是不变的：\n$$\n\\big(\\mathbf{e}_{1}^{\\top}C'\\,\\mathbf{e}_{2}\\big)^{2}=\\big(\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{2}\\big)^{2},\\qquad \\big(\\mathbf{e}_{1}^{\\top}C'\\,\\mathbf{e}_{3}\\big)^{2}=\\big(\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{3}\\big)^{2}.\n$$\n因此，\n$$\n\\Psi(C')=\\operatorname{tr}(C')+\\gamma\\Big[\\big(\\mathbf{e}_{1}^{\\top}C'\\,\\mathbf{e}_{2}\\big)^{2}-\\big(\\mathbf{e}_{1}^{\\top}C'\\,\\mathbf{e}_{3}\\big)^{2}\\Big]\n=\\operatorname{tr}(C)+\\gamma\\Big[\\big(\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{2}\\big)^{2}-\\big(\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{3}\\big)^{2}\\Big]=\\Psi(C).\n$$\n所以 $\\Psi$ 在绕 $\\mathbf{e}_{1}$ 的横观各向同性群的子集 $\\{I,S\\}$ 下是不变的。\n\n3. 完全横观各向同性的失效：$\\Delta W$ 的显式计算。我们现在对于特定的选择\n$$\nC=I+s\\big(\\mathbf{e}_{1}\\otimes\\mathbf{e}_{2}+\\mathbf{e}_{2}\\otimes\\mathbf{e}_{1}\\big).\n$$\n来评估 $\\Psi$ 在绕 $\\mathbf{e}_{1}$ 旋转 $\\pi/2$\n$$\nR=\\begin{pmatrix}\n1 & 0 & 0\\\\\n0 & 0 & -1\\\\\n0 & 1 & 0\n\\end{pmatrix},\n$$\n下的变化。\n根据构造，$C$ 的分量为\n$$\n\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{2}=s,\\quad \\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{3}=0,\\quad \\operatorname{tr}(C)=3.\n$$\n变换后的张量为 $C_{R}=R^{\\top} C R$。使用 $R\\mathbf{e}_{1}=\\mathbf{e}_{1}$，$R\\mathbf{e}_{2}=\\mathbf{e}_{3}$，$R\\mathbf{e}_{3}=-\\mathbf{e}_{2}$，我们有\n$$\n\\mathbf{e}_{1}^{\\top}C_{R}\\,\\mathbf{e}_{2}=(R\\mathbf{e}_{1})^{\\top}C\\,(R\\mathbf{e}_{2})=\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{3}=0,\n$$\n$$\n\\mathbf{e}_{1}^{\\top}C_{R}\\,\\mathbf{e}_{3}=(R\\mathbf{e}_{1})^{\\top}C\\,(R\\mathbf{e}_{3})=\\mathbf{e}_{1}^{\\top}C\\,(-\\mathbf{e}_{2})=-\\mathbf{e}_{1}^{\\top}C\\,\\mathbf{e}_{2}=-s,\n$$\n且 $\\operatorname{tr}(C_{R})=\\operatorname{tr}(C)=3$。因此，\n$$\n\\Psi(C)=3+\\gamma\\big[s^{2}-0\\big]=3+\\gamma s^{2},\\qquad\n\\Psi(C_{R})=3+\\gamma\\big[0-(-s)^{2}\\big]=3-\\gamma s^{2}.\n$$\n所求的差值为\n$$\n\\Delta W=\\Psi(R^{\\top}CR)-\\Psi(C)=(3-\\gamma s^{2})-(3+\\gamma s^{2})=-2\\gamma s^{2}.\n$$\n因为 $s \\neq 0$ 且 $\\gamma \\neq 0$，我们有 $\\Delta W \\neq 0$，这证明了尽管 $\\Psi$ 是客观的并且在绕 $\\mathbf{e}_{1}$ 的横观各向同性群的子集 $\\{I,S\\}$ 下是不变的，但它并非在所有绕 $\\mathbf{e}_{1}$ 的旋转下都不变。因此，满足客观性以及对称约束的一个子集，不足以保证更高的对称类（本例中为横观各向同性）。", "answer": "$$\\boxed{-2\\gamma s^{2}}$$", "id": "2658672"}, {"introduction": "在现代材料科学中，我们常常需要从实验数据中确定材料的未知属性。本练习将带您进入这一前沿领域，通过编写一个程序来解决一个逆问题：根据带有噪声的应变能测量数据 $W(F)$，确定材料的对称性类别。您将实现一个基于核回归的数据驱动模型，并应用统计检验来系统地评估各向同性、立方、横观各向同性等候选对称群，这充分体现了理论概念在实际工程和研究中的应用。[@problem_id:2658742]", "problem": "您的任务是建立并求解一个逆问题，在随机变形条件下，利用全场应变能密度测量值来确定一个超弹性固体的材料对称群。具体步骤是通过测试在候选群作用于变形梯度右侧时应变能密度的经验不变性。您的实现必须是一个完整的程序，该程序能根据精确指定的规则生成合成数据，从数据中为任意变形构建应变能密度的经验估计器，通过对群作用的有限采样进行平均来评估候选对称群的不变性残差，确定与数据一致的最高对称性群，并输出一行整合了所提供测试集分类结果的汇总摘要。\n\n该问题必须基于以下基本原理进行陈述和求解：\n- 超弹性材料的客观性原理：对于特殊正交群 (SO) 中的任意旋转 $R$，即 $R \\in \\mathrm{SO}(3)$，应变能密度 $W$ 对所有变形梯度 $F$ 均满足 $W(RF) = W(F)$。\n- 材料对称群的定义：对于一个具有储存能量密度 $W$ 的材料，其材料对称群为 $\\mathcal{H} \\subset \\mathrm{O}(3)$ (正交群 $\\mathrm{O}(3)$)，当且仅当对于所有的 $F$ 和所有的 $Q \\in \\mathcal{H}$，均有 $W(FQ) = W(F)$。\n- 运动学：右柯西-格林张量为 $C = F^{\\mathsf{T}} F$。经典的各向同性不变量为 $I_1 = \\mathrm{tr}(C)$, $I_2 = \\tfrac{1}{2}[(\\mathrm{tr}\\,C)^2 - \\mathrm{tr}(C^2)]$ 和 $I_3 = \\det(C)$。对于具有优先方向 $a_0$ 的各向异性材料，其标准不变量包括 $I_4(a_0) = a_0 \\cdot C a_0$ 和 $I_5(a_0) = a_0 \\cdot C^2 a_0$。\n\n逆问题表述与算法设计要求：\n- 给定一个数据集 $\\mathcal{D} = \\{(F_i, W_i)\\}_{i=1}^{N}$，它由 $N$ 个随机变形梯度 $F_i \\in \\mathbb{R}^{3 \\times 3}$ 和带噪声的应变能密度测量值 $W_i = W(F_i) + \\varepsilon_i$ 组成，其中噪声 $\\varepsilon_i$ 的均值为零。\n- 您必须从数据集 $\\mathcal{D}$ 出发，在变形梯度空间中使用核回归构建一个非参数代理模型 $\\widehat{W}(F)$，其中弗罗贝尼乌斯范数用作距离：对于一个查询 $F \\in \\mathbb{R}^{3 \\times 3}$，定义\n$$\n\\widehat{W}(F) = \\frac{\\sum_{j=1}^{N} \\exp\\!\\big(-\\|F - F_j\\|_{\\mathrm{F}}^2 / h^2\\big)\\, W_j}{\\sum_{j=1}^{N} \\exp\\!\\big(-\\|F - F_j\\|_{\\mathrm{F}}^2 / h^2\\big)} ,\n$$\n其中 $h > 0$ 是一个带宽，其选择方法如下文所述。所有用于生成旋转的角度都必须以弧度为单位。弗罗贝尼乌斯范数为 $\\|A\\|_{\\mathrm{F}} = \\sqrt{\\mathrm{tr}(A^{\\mathsf{T}}A)}$。\n- 带宽 $h$ 必须根据数据集自适应地设定：对于每个 $i$，计算 $F_i$ 到其第 $k$ 个最近邻（不包括其自身）的距离（其中 $k=10$），然后将这 $N$ 个距离的中位数作为 $h$ 的值。\n- 对于一个候选对称群 $\\mathcal{H}$，通过从 $\\mathcal{H}$ 中采样一个有限集 $\\{Q_\\ell\\}_{\\ell=1}^{M}$ 并计算经验不变性残差 $r(\\mathcal{H})$ 来检验其近似不变性：\n$$\nr(\\mathcal{H}) = \\frac{1}{NM} \\sum_{i=1}^{N} \\sum_{\\ell=1}^{M} \\left| W_i - \\widehat{W}(F_i Q_\\ell) \\right|.\n$$\n- 为考虑噪声和插值误差，计算基线留一法残差 $r_0$：\n$$\nr_0 = \\frac{1}{N} \\sum_{i=1}^{N} \\left| W_i - \\widehat{W}_{-i}(F_i) \\right|,\n$$\n其中 $\\widehat{W}_{-i}$ 是从数据集 $\\mathcal{D} \\setminus \\{(F_i, W_i)\\}$ 构建的相同核估计器。通过这些留一法误差的中位数绝对偏差 (MAD) 来估计噪声尺度：设 $e_i = \\left| W_i - \\widehat{W}_{-i}(F_i) \\right|$，并定义 $\\widehat{\\sigma} = 1.4826 \\cdot \\mathrm{median}( \\{ e_i \\}_{i=1}^{N} )$。\n- 如果满足 $r(\\mathcal{H}) \\le r_0 + 2 \\widehat{\\sigma}$，则声明群 $\\mathcal{H}$ 与数据一致。\n- 在所有一致的候选中，根据以下优先顺序（从最高对称性到最低）选择对称性最高的一个：各向同性 $\\succ$ 立方对称 $\\succ$ 横观各向同性 $\\succ$ 正交各向异性。如果没有任何候选群是一致的，则返回不支持任何所列对称性的结论。\n\n候选群及其有限采样：\n- 各向同性：右侧的完整 $\\mathrm{SO}(3)$ 群。通过生成具有独立标准正态分布元素的随机矩阵，对其进行 QR 分解 $A = QR$，并在必要时通过翻转一列的符号使 $Q$ 的行列式为 $+1$，从而在 $\\mathrm{SO}(3)$ 中采样 $M = 24$ 个随机旋转。\n- 绕 $e_1$ 轴的横观各向同性：绕单位向量 $e_1 = (1,0,0)^{\\mathsf{T}}$ 采样 $M = 12$ 次旋转，旋转角度为 $\\theta_m = 2\\pi m / 12$，其中 $m \\in \\{0,1,\\dots,11\\}$。\n- 与坐标轴对齐的正交各向异性：大小为 $M=8$ 的离散群 $\\{ \\mathrm{diag}(s_1,s_2,s_3) : s_i \\in \\{-1,+1\\} \\}$。\n- 与坐标轴对齐的立方对称：立方体的 $M = 24$ 个正常旋转，即所有行列式为 $+1$ 的 $3 \\times 3$ 符号置换矩阵。\n\n合成数据生成 (仅为本问题目的)：\n- 对于每个测试案例，通过采样一个随机旋转 $R \\in \\mathrm{SO}(3)$（如上所述）和独立的主拉伸 $\\lambda_1, \\lambda_2, \\lambda_3$ 来生成 $N$ 个独立的随机变形梯度，其中 $\\log \\lambda_j$ 在 $[-\\varepsilon,\\varepsilon]$（$\\varepsilon=0.2$）上均匀分布。设 $F = R\\, \\mathrm{diag}(\\lambda_1,\\lambda_2,\\lambda_3)$。\n- 对于每个 $F$，计算 $C = F^{\\mathsf{T}}F$ 以及各向同性不变量 $I_1, I_2, I_3$。基础各向同性能量为\n$$\nW_{\\mathrm{iso}}(C) = \\alpha (I_1 - 3)^2 + \\beta (I_2 - 3)^2 + \\gamma (I_3 - 1)^2,\n$$\n固定系数为 $\\alpha = 0.3$, $\\beta = 0.1$, $\\gamma = 0.05$。\n- 在 $W_{\\mathrm{iso}}$ 的基础上，根据测试案例的真实对称性定义各向异性部分：\n  - 各向同性：无各向异性项。\n  - 绕 $e_1$ 的横观各向同性：添加 $\\kappa_{\\mathrm{ti}} \\left( I_4(e_1) - 1 \\right)^2$，其中 $\\kappa_{\\mathrm{ti}} = 0.4$ 且 $I_4(a) = a \\cdot C a$。\n  - 对齐的正交各向异性：添加 $\\kappa_1 (I_4(e_1) - 1)^2 + \\kappa_2 (I_4(e_2) - 1)^2 + \\kappa_3 (I_4(e_3) - 1)^2$，其中 $(\\kappa_1,\\kappa_2,\\kappa_3) = (0.3, 0.5, 0.7)$。\n  - 对齐的立方对称：添加 $\\kappa_{\\mathrm{cu}} \\sum_{j=1}^{3} (I_4(e_j) - 1)^2$，其中 $\\kappa_{\\mathrm{cu}} = 0.4$ 且 $e_2 = (0,1,0)^{\\mathsf{T}}, e_3 = (0,0,1)^{\\mathsf{T}}$。\n  - 无所列对称性（一般各向异性）：添加 $\\kappa_a (I_4(a) - 1)^2 + \\kappa_b (I_4(b) - 1)^2 + \\kappa_{5} (I_5(a) - 1)^2$，其中 $\\kappa_a = 0.35$, $\\kappa_b = 0.25$, $\\kappa_5 = 0.2$，而 $a$ 和 $b$ 是与坐标轴不对齐的随机单位向量，且 $I_5(a) = a \\cdot C^2 a$。\n- 为每个能量值添加独立的高斯噪声 $\\varepsilon_i \\sim \\mathcal{N}(0, \\sigma^2)$，其标准差 $\\sigma$ 由每个测试案例指定。\n\n决策与输出编码：\n- 将确定的对称群编码为整数：各向同性 $\\mapsto 3$，立方对称 $\\mapsto 2$，横观各向同性 $\\mapsto 1$，正交各向异性 $\\mapsto 0$，无所列群 $\\mapsto -1$。\n- 在满足不变性条件的多个群中，返回具有上述指定最高优先级的那个。\n\n测试集：\n- 每个测试案例指定 $(\\text{seed}, N, \\sigma, \\text{true\\_type})$，其中 $\\text{true\\_type} \\in \\{3,2,1,0,-1\\}$ 使用相同的编码。种子（seed）确保随机采样的可复现性。\n- 使用以下五个测试案例：\n  1. $(\\; 101\\;,\\; 300\\;,\\; 10^{-4}\\;,\\; 3\\;)$ 各向同性。\n  2. $(\\; 202\\;,\\; 300\\;,\\; 2\\times 10^{-4}\\;,\\; 1\\;)$ 绕 $e_1$ 的横观各向同性。\n  3. $(\\; 303\\;,\\; 300\\;,\\; 2\\times 10^{-4}\\;,\\; 0\\;)$ 对齐的正交各向异性。\n  4. $(\\; 404\\;,\\; 300\\;,\\; 2\\times 10^{-4}\\;,\\; 2\\;)$ 对齐的立方对称。\n  5. $(\\; 505\\;,\\; 300\\;,\\; 3\\times 10^{-4}\\;,\\; -1\\;)$ 无所列对称性（一般各向异性）。\n- 内部用于构建旋转的所有角度都必须以弧度为单位。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含五个测试案例的分类结果，格式为用方括号括起来的、以逗号分隔的 Python 整数列表，例如 $\\left[3,1,0,2,-1\\right]$。\n\n最终输出中的所有数值均无单位。程序不应打印任何其他文本。", "solution": "所提出的问题是为确定超弹性固体的材料对称群而制定和实现一个算法。这构成了连续介质力学中的一个经典逆问题，即需要从力学响应的测量中推断材料属性。所提供的框架基于一种数据驱动的非参数方法，当应变能密度函数 $W$ 的解析形式先验未知时，这种方法是合适的。我们首先将验证该问题陈述的有效性，然后着手阐述求解方法。\n\n该问题在科学上基础扎实，在算法上是完整的，在数学上是适定的。它基于超弹性的基本原理，即材料客观性原理（表示为对于任意旋转 $R \\in \\mathrm{SO}(3)$ 和变形梯度 $F$，都有 $W(RF) = W(F)$），以及材料对称群 $\\mathcal{H} \\subset \\mathrm{O}(3)$ 的定义（要求对于所有 $Q \\in \\mathcal{H}$，都有 $W(FQ) = W(F)$）。使用核回归模型从带噪声的有限数据集 $\\mathcal{D} = \\{(F_i, W_i)\\}_{i=1}^{N}$ 中为 $W$ 构建代理模型是机器学习和数据驱动科学中的一项标准技术。用于模型验证的统计方法，包括留一法交叉验证和用于噪声估计的中位数绝对偏差，都是合理的。所有参数和过程都以足够的精度被指定，从而允许唯一且可验证的实现。因此，该问题被认为是有效的。\n\n所提出方法的核心是为应变能密度构建一个经验代理模型（记为 $\\widehat{W}$），然后测试其在各种候选对称群作用下的不变性。\n\n首先，我们讨论代理模型的构建。给定数据集 $\\mathcal{D}$，我们采用 Nadaraya-Watson 核回归。对于任意变形梯度 $F$，估计的能量 $\\widehat{W}(F)$ 是观测能量值 $W_j$ 的加权平均值：\n$$\n\\widehat{W}(F) = \\frac{\\sum_{j=1}^{N} k(F, F_j) W_j}{\\sum_{j=1}^{N} k(F, F_j)}\n$$\n核函数 $k(F, F_j) = \\exp\\!\\big(-\\|F - F_j\\|_{\\mathrm{F}}^2 / h^2\\big)$ 根据查询点 $F$ 与数据点 $F_j$ 在 $3 \\times 3$ 矩阵空间中的接近程度分配权重，距离由弗罗贝尼乌斯范数 $\\|A\\|_{\\mathrm{F}} = \\sqrt{\\mathrm{tr}(A^{\\mathsf{T}}A)}$ 度量。带宽 $h > 0$ 控制回归的光滑度。大的 $h$ 会导致过平滑，而小的 $h$ 可能导致过拟合。问题指定了一种自适应的数据驱动方法来选择 $h$：对于每个数据点 $F_i$，我们找到其到第 $k$ 个最近邻的距离（$k=10$），然后将这 $N$ 个距离的中位数设为 $h$。这种启发式方法通过使长度尺度适应数据的局部密度，在偏差和方差之间取得了平衡。\n\n第二，我们必须定义一个检验对称性的程序。对于一个候选群 $\\mathcal{H}$，我们检查关系 $W(F) = W(FQ)$ 是否对 $Q \\in \\mathcal{H}$ 成立。由于 $W_i$ 中存在测量噪声，以及我们的代理模型 $\\widehat{W}$ 中存在近似误差，我们预计会偏离完全相等。我们通过计算经验不变性残差 $r(\\mathcal{H})$ 来量化这种偏差。该残差定义为点 $F_i$ 处的测量能量 $W_i$ 与代理模型在对称变换点 $F_i Q_\\ell$ 处*预测*的能量之间的平均绝对差：\n$$\nr(\\mathcal{H}) = \\frac{1}{NM} \\sum_{i=1}^{N} \\sum_{\\ell=1}^{M} \\left| W_i - \\widehat{W}(F_i Q_\\ell) \\right|.\n$$\n这个平均值是在所有 $N$ 个数据点和从候选群 $\\mathcal{H}$ 中抽取的 $M$ 个元素的代表性有限样本 $\\{Q_\\ell\\}_{\\ell=1}^{M}$ 上计算的。\n\n第三，我们需要一个阈值来判断计算出的残差 $r(\\mathcal{H})$ 是否小到足以与数据保持一致。这个阈值必须考虑到我们代理模型的内在误差。这个误差有两个来源：测量值 $W_i$ 中的随机噪声 $\\varepsilon_i$ 和核回归器本身的系统偏差。为了估计这个组合误差，我们计算一个基线留一法（LOO）残差 $r_0$。对于每个数据点 $(F_i, W_i)$，我们使用所有其他数据点构建一个代理模型 $\\widehat{W}_{-i}$，并计算在 $F_i$ 处的预测误差。基线残差是这些 LOO 误差的平均值：\n$$\nr_0 = \\frac{1}{N} \\sum_{i=1}^{N} \\left| W_i - \\widehat{W}_{-i}(F_i) \\right|.\n$$\nLOO 误差集合 $e_i = \\left| W_i - \\widehat{W}_{-i}(F_i) \\right|$ 也为估计噪声尺度提供了基础。问题指定为此目的使用中位数绝对偏差（MAD），这是一种稳健的统计度量。噪声尺度 $\\widehat{\\sigma}$ 估计如下：\n$$\n\\widehat{\\sigma} = 1.4826 \\cdot \\mathrm{median}( \\{ e_i \\}_{i=1}^{N} ).\n$$\n因子 $1.4826$ 使得对于正态分布的误差，$\\widehat{\\sigma}$ 是标准差的近似无偏估计量。如果一个候选群 $\\mathcal{H}$ 的不变性残差 $r(\\mathcal{H})$ 不显著大于基线模型误差，则宣布其与数据一致。指定的准则是 $r(\\mathcal{H}) \\le r_0 + 2 \\widehat{\\sigma}$，这在基线之上建立了一个两个标准差的容差带。\n\n最后，选择“最佳”对称群的问题必须处理对称性的层级性。例如，任何各向同性材料也同时是立方对称、横观各向同性和正交各向异性的，因为相应的群是 $\\mathrm{SO}(3)$ 的子群。对一致性准则的天真应用可能会发现多个群都有效。为解决这种模糊性并识别出与数据兼容的尽可能大的对称性，建立了一个优先顺序：各向同性 $\\succ$ 立方对称 $\\succ$ 横观各向同性 $\\succ$ 正交各向异性。算法必须按此顺序测试候选群，并选择第一个满足一致性准则 $r(\\mathcal{H}) \\le r_0 + 2 \\widehat{\\sigma}$ 的群。如果没有任何候选群满足该准则，则该材料被分类为不具有任何所列的对称性。\n\n实现将精确遵循这些步骤，按规定为各种材料类别生成合成数据，并对每个案例应用分类算法，以产生最终的汇总结果。", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import qr, det\nfrom itertools import permutations\n\ndef get_isotropic_samples(m_samples, rng):\n    \"\"\"Generates M random rotations in SO(3).\"\"\"\n    samples = []\n    for _ in range(m_samples):\n        A = rng.standard_normal((3, 3))\n        Q, R = qr(A)\n        if det(Q) < 0:\n            Q[:, 0] *= -1\n        samples.append(Q)\n    return samples\n\ndef get_trans_iso_samples(m_samples):\n    \"\"\"Generates M rotations around the e1 axis.\"\"\"\n    samples = []\n    e1 = np.array([1, 0, 0])\n    for i in range(m_samples):\n        theta = 2 * np.pi * i / m_samples\n        c, s = np.cos(theta), np.sin(theta)\n        R = np.array([[1, 0, 0], [0, c, -s], [0, s, c]])\n        samples.append(R)\n    return samples\n\ndef get_orthotropic_samples():\n    \"\"\"Generates the 8 elements of the orthotropic group.\"\"\"\n    samples = []\n    for s1 in [-1, 1]:\n        for s2 in [-1, 1]:\n            for s3 in [-1, 1]:\n                # We only need proper rotations for right-multiplication if H is a subgroup of SO(3).\n                # But the problem states H is in O(3) and gives a group of size 8.\n                # Let's assume all 8 are used as per problem spec.\n                samples.append(np.diag([s1, s2, s3]))\n    return samples\n\ndef get_cubic_samples():\n    \"\"\"Generates the 24 proper rotations of the cubic group.\"\"\"\n    samples = []\n    base_perms = list(permutations(np.identity(3)))\n    for P in base_perms:\n        P = np.array(P)\n        for s1 in [-1, 1]:\n            for s2 in [-1, 1]:\n                for s3 in [-1, 1]:\n                    Q = P @ np.diag([s1, s2, s3])\n                    if np.isclose(det(Q), 1.0):\n                        # Avoid duplicates\n                        is_duplicate = False\n                        for s_ in samples:\n                            if np.allclose(s_, Q):\n                                is_duplicate = True\n                                break\n                        if not is_duplicate:\n                            samples.append(Q)\n    return samples\n\ndef generate_data(seed, N, sigma, true_type):\n    \"\"\"Generates synthetic data for a given test case.\"\"\"\n    rng = np.random.default_rng(seed)\n    F_data = []\n    W_data = []\n\n    # Constants\n    alpha, beta, gamma = 0.3, 0.1, 0.05\n    kappa_ti = 0.4\n    kappa_ortho = np.array([0.3, 0.5, 0.7])\n    kappa_cu = 0.4\n    kappa_a, kappa_b, kappa_5 = 0.35, 0.25, 0.2\n    eps_stretch = 0.2\n    e1, e2, e3 = np.eye(3).T\n\n    # Generate random vectors for generic anisotropy if needed\n    if true_type == -1:\n        aniso_vectors = []\n        for _ in range(2):\n            v = rng.standard_normal(3)\n            v /= np.linalg.norm(v)\n            aniso_vectors.append(v)\n        a_rand, b_rand = aniso_vectors\n\n    for _ in range(N):\n        # Generate random F\n        log_lambdas = rng.uniform(-eps_stretch, eps_stretch, 3)\n        lambdas = np.exp(log_lambdas)\n        D = np.diag(lambdas)\n        R_rand = get_isotropic_samples(1, rng)[0]\n        F = R_rand @ D\n        F_data.append(F)\n\n        # Compute energy\n        C = F.T @ F\n        I1 = np.trace(C)\n        I2 = 0.5 * (I1**2 - np.trace(C @ C))\n        I3 = det(C)\n        W = alpha * (I1 - 3)**2 + beta * (I2 - 3)**2 + gamma * (I3 - 1)**2\n\n        if true_type == 1: # Transversely isotropic\n            I4_e1 = e1 @ C @ e1\n            W += kappa_ti * (I4_e1 - 1)**2\n        elif true_type == 0: # Orthotropic\n            I4s = np.array([e1 @ C @ e1, e2 @ C @ e2, e3 @ C @ e3])\n            W += np.sum(kappa_ortho * (I4s - 1)**2)\n        elif true_type == 2: # Cubic\n            I4s = np.array([e1 @ C @ e1, e2 @ C @ e2, e3 @ C @ e3])\n            W += kappa_cu * np.sum((I4s - 1)**2)\n        elif true_type == -1: # Generic anisotropy\n            I4_a = a_rand @ C @ a_rand\n            I4_b = b_rand @ C @ b_rand\n            I5_a = a_rand @ (C @ C) @ a_rand\n            W += kappa_a * (I4_a - 1)**2 + kappa_b * (I4_b - 1)**2 + kappa_5 * (I5_a - 1)**2\n\n        W_data.append(W)\n\n    F_data = np.array(F_data)\n    W_data = np.array(W_data)\n    noise = rng.normal(0, sigma, N)\n    W_data += noise\n\n    return F_data, W_data\n\ndef kernel_regressor(F_query, F_data, W_data, h, excluded_index=None):\n    \"\"\"Nadaraya-Watson kernel regressor.\"\"\"\n    if excluded_index is not None:\n        # Create views of the data excluding the i-th point\n        F_data_loo = np.delete(F_data, excluded_index, axis=0)\n        W_data_loo = np.delete(W_data, excluded_index, axis=0)\n    else:\n        F_data_loo = F_data\n        W_data_loo = W_data\n\n    diffs = F_query[np.newaxis, :, :] - F_data_loo\n    sq_fro_norms = np.sum(diffs**2, axis=(1, 2))\n    \n    weights = np.exp(-sq_fro_norms / (h**2))\n    \n    numerator = np.sum(weights * W_data_loo)\n    denominator = np.sum(weights)\n\n    if denominator == 0:\n        # Fallback to nearest neighbor if all weights are zero\n        idx_min = np.argmin(sq_fro_norms)\n        return W_data_loo[idx_min]\n\n    return numerator / denominator\n\ndef classify_symmetry(F_data, W_data, rng):\n    \"\"\"Classifies the material symmetry based on the dataset.\"\"\"\n    N = F_data.shape[0]\n    k_nn = 10\n\n    # 1. Compute bandwidth h\n    dist_matrix = np.zeros((N, N))\n    for i in range(N):\n        for j in range(i, N):\n            dist = np.linalg.norm(F_data[i] - F_data[j], 'fro')\n            dist_matrix[i, j] = dist\n            dist_matrix[j, i] = dist\n\n    knn_dists = []\n    for i in range(N):\n        dists = np.sort(dist_matrix[i, :])\n        knn_dists.append(dists[k_nn]) \n    h = np.median(knn_dists)\n\n    # 2. Compute LOO baseline residual r0 and noise scale sigma_hat\n    loo_errors = np.zeros(N)\n    for i in range(N):\n        W_hat_loo = kernel_regressor(F_data[i], F_data, W_data, h, excluded_index=i)\n        loo_errors[i] = np.abs(W_data[i] - W_hat_loo)\n    \n    r0 = np.mean(loo_errors)\n    sigma_hat = 1.4826 * np.median(loo_errors)\n\n    # 3. Define candidate groups and their samplings\n    M_iso = 24\n    M_ti = 12\n    groups = {\n        'isotropic': {'id': 3, 'sampler': lambda: get_isotropic_samples(M_iso, rng), 'M': M_iso},\n        'cubic': {'id': 2, 'sampler': get_cubic_samples, 'M': 24},\n        'trans_iso': {'id': 1, 'sampler': lambda: get_trans_iso_samples(M_ti), 'M': M_ti},\n        'orthotropic': {'id': 0, 'sampler': get_orthotropic_samples, 'M': 8}\n    }\n    \n    precedence = ['isotropic', 'cubic', 'trans_iso', 'orthotropic']\n    \n    # 4. Compute invariance residuals and decide\n    threshold = r0 + 2 * sigma_hat\n    \n    classification_result = -1 # Default: none\n    for group_name in precedence:\n        group_info = groups[group_name]\n        Q_samples = np.array(group_info['sampler']())\n        M = group_info['M']\n        \n        total_residual = 0\n        for i in range(N):\n            F_i = F_data[i]\n            W_i = W_data[i]\n            \n            residual_sum_for_i = 0\n            for l in range(M):\n                FQ_l = F_i @ Q_samples[l]\n                W_hat_fql = kernel_regressor(FQ_l, F_data, W_data, h)\n                residual_sum_for_i += np.abs(W_i - W_hat_fql)\n            total_residual += residual_sum_for_i\n            \n        r_H = total_residual / (N * M)\n        \n        if r_H <= threshold:\n            classification_result = group_info['id']\n            break \n\n    return classification_result\n\ndef solve():\n    \"\"\"Main function to run the test suite and print results.\"\"\"\n    test_cases = [\n        # (seed, N, sigma, true_type)\n        (101, 300, 1e-4, 3),    # Isotropic\n        (202, 300, 2e-4, 1),    # Transversely Isotropic\n        (303, 300, 2e-4, 0),    # Orthotropic\n        (404, 300, 2e-4, 2),    # Cubic\n        (505, 300, 3e-4, -1),   # Generic Anisotropy\n    ]\n\n    results = []\n    for seed, N, sigma, true_type in test_cases:\n        rng = np.random.default_rng(seed)\n        F_data, W_data = generate_data(seed, N, sigma, true_type)\n        result = classify_symmetry(F_data, W_data, rng)\n        results.append(result)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2658742"}]}