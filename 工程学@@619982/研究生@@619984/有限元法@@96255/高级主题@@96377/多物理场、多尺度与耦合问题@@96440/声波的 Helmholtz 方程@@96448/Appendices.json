{"hands_on_practices": [{"introduction": "任何有限元模拟都始于将微分方程的连续弱形式转化为离散的代数系统。本练习针对这一关键步骤提供了基础性的动手实践。通过为二维亥姆霍兹方程显式推导局部刚度矩阵和质量矩阵，并为一个简单的网格进行组装，您将巩固对单元几何形状和基函数选择如何直接影响最终待解线性系统的理解 [@problem_id:2563917]。", "problem": "考虑一个二维（2D）域上的标量声学亥姆霍兹方程，该方程在频域中，具有恒定的材料属性且无源项，其无量纲形式写作一个算子，该算子将测试函数映射为\n$$\n\\int_{\\Omega} \\nabla u \\cdot \\nabla v \\,\\mathrm{d}\\Omega - k^{2}\\int_{\\Omega} u\\,v \\,\\mathrm{d}\\Omega,\n$$\n其中 $u$ 是声压场，$v$ 是一个测试函数，$k$ 是无量纲波数。使用有限元法（FEM），在三角形网格上采用线性拉格朗日基函数，该算子由组装后的全局矩阵 $A = K - k^{2} M$ 表示，其中 $K$ 是刚度矩阵，$M$ 是质量矩阵。\n\n从第一性原理（弱形式和三角形上线性拉格朗日形函数的定义）出发，推导单个具有恒定系数的三角形的局部单元刚度矩阵和质量矩阵的显式公式，用三角形的节点坐标表示。然后，考虑一个顶点为 $(0,0)$, $(1,0)$, $(1,1)$ 和 $(0,1)$ 的正方形域，该域被划分为两个三角形：\n- 单元 $e_{1}$，节点为 $\\{(0,0),(1,0),(0,1)\\}$，和\n- 单元 $e_{2}$，节点为 $\\{(1,0),(1,1),(0,1)\\}$。\n\n全局节点索引如下：节点 $1$ 位于 $(0,0)$，节点 $2$ 位于 $(1,0)$，节点 $3$ 位于 $(0,1)$，节点 $4$ 位于 $(1,1)$。在每个三角形上使用线性拉格朗日基函数。从这两个单元组装全局刚度矩阵 $K$ 和全局质量矩阵 $M$，不施加任何边界条件。\n\n设波数为 $k = 2$。构建全局亥姆霍兹矩阵 $A = K - k^{2} M$，并确定其 $(2,2)$ 项的标量值。请给出最终答案的精确值（不要四舍五入）。", "solution": "所陈述的问题具有科学依据、提法恰当、客观且自洽。它是将有限元法应用于亥姆霍兹方程的一个标准练习。所有必要的数据和定义都已提供，不存在矛盾。因此，该问题被视为有效，并将提供解答。\n\n该问题要求推导全局亥姆霍兹矩阵 $A$ 的 $(2,2)$ 项。矩阵 $A$ 定义为 $A = K - k^2 M$，其中 $K$ 是全局刚度矩阵，$M$ 是全局质量矩阵，$k$ 是波数。我们的步骤是：首先推导局部单元刚度矩阵和质量矩阵的一般表达式，然后为给定的两个特定三角形单元计算这些矩阵，最后组装全局矩阵以找到所需的项。\n\n设一个通用三角形单元 $e$ 由三个坐标为 $(x_1, y_1)$、$(x_2, y_2)$ 和 $(x_3, y_3)$ 的顶点（节点）定义。在此单元内，声压场 $u$ 被近似为基函数的线性组合：\n$$ u(x,y) \\approx u^h(x,y) = \\sum_{j=1}^{3} u_j N_j(x,y) $$\n其中 $u_j$ 是压力场的节点值，$N_j(x,y)$ 是线性拉格朗日基函数（或形函数）。形函数 $N_i(x,y)$ 是一个线性多项式，它在节点 $i$ 处等于 $1$，在其他两个节点处等于 $0$。它可以写为 $N_i(x,y) = a_i + b_i x + c_i y$。它的梯度在单元上是一个常数向量：\n$$ \\nabla N_i = \\begin{pmatrix} \\frac{\\partial N_i}{\\partial x} \\\\ \\frac{\\partial N_i}{\\partial y} \\end{pmatrix} = \\begin{pmatrix} b_i \\\\ c_i \\end{pmatrix} $$\n系数 $b_i$ 和 $c_i$ 由三角形的几何形状确定。对于一个面积为 $A_e$ 的三角形，其中 $2A_e = \\det \\begin{pmatrix} 1 & x_1 & y_1 \\\\ 1 & x_2 & y_2 \\\\ 1 & x_3 & y_3 \\end{pmatrix}$，系数由下式给出：\n$$ b_i = \\frac{y_j - y_k}{2 A_e}, \\quad c_i = \\frac{x_k - x_j}{2 A_e} $$\n其中 $(i,j,k)$ 是 $(1,2,3)$ 的轮换。\n\n单元 $e$ 的局部单元刚度矩阵 $K^e$ 的项由下式给出：\n$$ K^e_{ij} = \\int_{A_e} \\nabla N_i \\cdot \\nabla N_j \\, \\mathrm{d}A $$\n由于梯度在单元上是常数，积分简化为：\n$$ K^e_{ij} = (\\nabla N_i \\cdot \\nabla N_j) \\int_{A_e} \\mathrm{d}A = (b_i b_j + c_i c_j) A_e $$\n\n局部单元质量矩阵 $M^e$ 的项为：\n$$ M^e_{ij} = \\int_{A_e} N_i N_j \\, \\mathrm{d}A $$\n使用面积坐标 $L_i$（对于三角形，它与线性形函数 $N_i$ 相同），我们可以使用三角形上的精确积分公式：\n$$ \\int_{A_e} L_1^{\\alpha_1} L_2^{\\alpha_2} L_3^{\\alpha_3} \\, \\mathrm{d}A = \\frac{\\alpha_1! \\, \\alpha_2! \\, \\alpha_3!}{(\\alpha_1 + \\alpha_2 + \\alpha_3 + 2)!} (2 A_e) $$\n对于 $M^e$ 的对角项，例如 $M^e_{11}$，我们有 $N_1^2 = L_1^2 L_2^0 L_3^0$，所以 $\\alpha_1=2, \\alpha_2=0, \\alpha_3=0$：\n$$ M^e_{ii} = \\int_{A_e} N_i^2 \\, \\mathrm{d}A = \\frac{2! \\, 0! \\, 0!}{(2+0+0+2)!} (2 A_e) = \\frac{2}{24} (2 A_e) = \\frac{A_e}{6} $$\n对于非对角项，例如 $M^e_{12}$，我们有 $N_1 N_2 = L_1^1 L_2^1 L_3^0$，所以 $\\alpha_1=1, \\alpha_2=1, \\alpha_3=0$：\n$$ M^e_{ij} = \\int_{A_e} N_i N_j \\, \\mathrm{d}A = \\frac{1! \\, 1! \\, 0!}{(1+1+0+2)!} (2 A_e) = \\frac{1}{24} (2 A_e) = \\frac{A_e}{12} \\quad (i \\neq j) $$\n因此，局部质量矩阵是：\n$$ M^e = \\frac{A_e}{12} \\begin{pmatrix} 2 & 1 & 1 \\\\ 1 & 2 & 1 \\\\ 1 & 1 & 2 \\end{pmatrix} $$\n\n现在，我们将这些公式应用于两个特定的单元。\n\n单元 $e_1$：顶点为 $(0,0)$, $(1,0)$, $(0,1)$。\n局部节点 $1 \\to (0,0)$，局部节点 $2 \\to (1,0)$，局部节点 $3 \\to (0,1)$。\n面积为 $A_{e1} = \\frac{1}{2} |(1-0)(1-0) - (0-0)(0-0)| = \\frac{1}{2}$。\n梯度系数为：\n$b_1 = \\frac{0-1}{1} = -1$, $c_1 = \\frac{0-1}{1} = -1$\n$b_2 = \\frac{1-0}{1} = 1$, $c_2 = \\frac{0-0}{1} = 0$\n$b_3 = \\frac{0-0}{1} = 0$, $c_3 = \\frac{1-0}{1} = 1$\n局部刚度矩阵 $K^{e1}$ 的分量为 $K^{e1}_{ij} = \\frac{1}{2}(b_i b_j + c_i c_j)$：\n$K^{e1}_{22} = \\frac{1}{2}(1^2 + 0^2) = \\frac{1}{2}$。\n局部质量矩阵为：\n$M^{e1} = \\frac{1/2}{12} \\begin{pmatrix} 2 & 1 & 1 \\\\ 1 & 2 & 1 \\\\ 1 & 1 & 2 \\end{pmatrix} = \\frac{1}{24} \\begin{pmatrix} 2 & 1 & 1 \\\\ 1 & 2 & 1 \\\\ 1 & 1 & 2 \\end{pmatrix}$。\n局部节点 $2$ 对应的项是 $M^{e1}_{22} = \\frac{1}{24}(2) = \\frac{1}{12}$。\n\n单元 $e_2$：顶点为 $(1,0)$, $(1,1)$, $(0,1)$。\n局部节点 $1 \\to (1,0)$，局部节点 $2 \\to (1,1)$，局部节点 $3 \\to (0,1)$。\n面积为 $A_{e2} = \\frac{1}{2} |(1-1)(1-0) - (0-1)(1-0)| = \\frac{1}{2}$。\n梯度系数为：\n$b_1 = \\frac{1-1}{1} = 0$, $c_1 = \\frac{0-1}{1} = -1$\n$b_2 = \\frac{1-0}{1} = 1$, $c_2 = \\frac{1-0}{1} = 1$\n$b_3 = \\frac{0-1}{1} = -1$, $c_3 = \\frac{1-1}{1} = 0$\n局部刚度矩阵 $K^{e2}$ 的分量为 $K^{e2}_{ij} = \\frac{1}{2}(b_i b_j + c_i c_j)$：\n$K^{e2}_{11} = \\frac{1}{2}(0^2 + (-1)^2) = \\frac{1}{2}$。\n局部质量矩阵为：\n$M^{e2} = \\frac{1/2}{12} \\begin{pmatrix} 2 & 1 & 1 \\\\ 1 & 2 & 1 \\\\ 1 & 1 & 2 \\end{pmatrix} = \\frac{1}{24} \\begin{pmatrix} 2 & 1 & 1 \\\\ 1 & 2 & 1 \\\\ 1 & 1 & 2 \\end{pmatrix}$。\n局部节点 $1$ 对应的项是 $M^{e2}_{11} = \\frac{1}{24}(2) = \\frac{1}{12}$。\n\n全局节点的索引为：$1 \\to (0,0)$, $2 \\to (1,0)$, $3 \\to (0,1)$, $4 \\to (1,1)$。\n我们需要确定全局矩阵 $A$ 的 $(2,2)$ 项，即 $A_{2,2} = K_{2,2} - k^2 M_{2,2}$。这需要找到全局项 $K_{2,2}$ 和 $M_{2,2}$。这些项接收来自包含全局节点 $2$ 的所有单元的贡献。位于 $(1,0)$ 的全局节点 $2$ 同时是单元 $e_1$ 的一部分（作为其局部节点 $2$）和单元 $e_2$ 的一部分（作为其局部节点 $1$）。\n\n组装过程涉及将局部矩阵的贡献求和到全局矩阵中。\n对于刚度矩阵项 $K_{2,2}$：\n来自 $e_1$ 的贡献是其局部 $(2,2)$ 项，$K^{e1}_{2,2} = \\frac{1}{2}$。\n来自 $e_2$ 的贡献是其局部 $(1,1)$ 项，$K^{e2}_{1,1} = \\frac{1}{2}$。\n全局项是其和：$K_{2,2} = K^{e1}_{2,2} + K^{e2}_{1,1} = \\frac{1}{2} + \\frac{1}{2} = 1$。\n\n对于质量矩阵项 $M_{2,2}$：\n来自 $e_1$ 的贡献是其局部 $(2,2)$ 项，$M^{e1}_{22} = \\frac{A_{e1}}{6} = \\frac{1/2}{6} = \\frac{1}{12}$。\n来自 $e_2$ 的贡献是其局部 $(1,1)$ 项，$M^{e2}_{11} = \\frac{A_{e2}}{6} = \\frac{1/2}{6} = \\frac{1}{12}$。\n全局项是其和：$M_{2,2} = M^{e1}_{22} + M^{e2}_{11} = \\frac{1}{12} + \\frac{1}{12} = \\frac{2}{12} = \\frac{1}{6}$。\n\n最后，我们构建全局亥姆霍兹矩阵 $A$ 的 $(2,2)$ 项。问题给出波数 $k=2$，所以 $k^2 = 4$。\n$$ A_{2,2} = K_{2,2} - k^2 M_{2,2} = 1 - (4) \\left(\\frac{1}{6}\\right) = 1 - \\frac{4}{6} = 1 - \\frac{2}{3} = \\frac{1}{3} $$\n全局矩阵 $A$ 的 $(2,2)$ 项的值为 $\\frac{1}{3}$。", "answer": "$$ \\boxed{\\frac{1}{3}} $$", "id": "2563917"}, {"introduction": "仅仅离散亥姆霍兹方程是不够的；我们还必须理解数值解的质量。本练习深入探讨了数值色散这一关键概念，即模拟中的波数 $k_h$ 与真实的物理波数 $k$ 存在差异。您将从第一性原理出发推导这种“相位误差”，并发现它如何导致臭名昭著的“污染效应”，这要求每个波长内必须有特定数量的单元才能保持精度，这是所有波传播建模的核心经验法则 [@problem_id:2563865]。", "problem": "考虑在均匀、无损、一维、恒定声速为 $c$ 的介质中，角频率为 $\\omega$ 的时谐声波。声压幅值 $u(x)$ 满足由线性化动量平衡和质量守恒导出的标量亥姆霍兹方程，\n$$\nu''(x) + k^2 u(x) = 0,\n$$\n其中 $k = \\omega/c$ 是实波数。使用标准的连续伽辽金有限元法（FEM）和一致质量矩阵，在单元长度为 $h$ 的无限均匀网格上对问题进行离散化。考虑两种多项式阶数的选择：分段线性（$p = 1$）和分段二次（$p = 2$）。假设在节点自由度上采用布洛赫波拟设，使得离散解每个单元呈现 $\\theta$（以弧度为单位）的相位超前，离散波数 $k_h$ 满足 $\\theta = k_h h$。\n\n定义相对相位误差为\n$$\n\\delta(k,h) \\equiv \\frac{|k_h - k|}{k}。\n$$\n您的任务是在小的无量纲网格参数区域 $k h \\ll 1$ 中，确定网格尺寸 $h$ 的主阶渐近要求。该要求应表示为 $k$ 和给定容差 $\\tau \\in (0,1)$ 的显式函数，使得\n$$\n\\delta(k,h) \\le \\tau。\n$$\n\n请按以下步骤从第一性原理进行推导：\n- 从亥姆霍兹方程的弱形式以及在均匀网格上 $p=1$ 和 $p=2$ 对应的单元级刚度矩阵和质量矩阵开始。\n- 组装周期性、无限晶格的离散方程，并应用布洛赫波拟设，以导出连接 $\\theta$ 和 $k h$ 的相应离散色散关系。\n- 进行小参数展开，以获得作为 $k$ 和 $h$ 函数的主阶差值 $k_h - k$（针对每个多项式阶数），并表达相应的主阶 $\\delta(k,h)$。\n- 求解所需的网格尺寸 $h(k)$，将其表示为 $k$ 和 $\\tau$ 的函数，以满足相对相位误差界限，并在渐近展开中仅保留主阶项。\n\n请将您的最终结果表示为两个闭式表达式 $h_{1}(k,\\tau)$ 和 $h_{2}(k,\\tau)$，分别对应线性（$p=1$）和二次（$p=2$）单元。$h$ 的单位为米。无需数值取整；请给出精确的解析表达式。角度 $\\theta$ 必须以弧度处理。您的最终答案必须是一个计算结果。", "solution": "用户提出了一个关于使用有限元法对亥姆霍兹方程进行数值分析的问题。我将首先验证问题陈述。\n\n## 问题验证\n\n### 步骤1：提取已知条件\n- **控制方程**：声压幅值 $u(x)$ 的一维标量亥姆霍兹方程为 $u''(x) + k^2 u(x) = 0$。\n- **参数**：角频率为 $\\omega$，声速为 $c$，波数为 $k = \\omega/c$，为实数且恒定。\n- **离散化**：在单元长度为 $h$ 的无限均匀网格上使用连续伽辽金有限元法（FEM）。指定使用一致质量矩阵。\n- **单元类型**：分段线性（$p=1$）和分段二次（$p=2$）拉格朗日单元。\n- **解的拟设**：假设离散解为布洛赫波形式，节点值每个单元呈现 $\\theta$ 弧度的相位超前。离散波数 $k_h$ 由关系式 $\\theta = k_h h$ 定义。\n- **误差度量**：相对相位误差定义为 $\\delta(k,h) \\equiv \\frac{|k_h - k|}{k}$。\n- **目标**：在渐近区域 $kh \\ll 1$ 中，找到网格尺寸 $h$ 的主阶要求，使其为 $k$ 和给定容差 $\\tau \\in (0,1)$ 的显式函数，满足 $\\delta(k,h) \\le \\tau$。此要求需表示为两个函数 $h_1(k, \\tau)$ 和 $h_2(k, \\tau)$，分别对应 $p=1$ 和 $p=2$ 单元。\n\n### 步骤2：使用提取的已知条件进行验证\n- **科学依据**：该问题是计算声学和数值分析中的一个标准基础课题——特别是关于有限元法用于波传播的色散分析。亥姆霍兹方程是波物理学的基石。该问题在科学上是成立的。\n- **适定性**：问题是适定的。它有明确的目标，提供了所有必要的数据和定义，并指明了方法论（从第一性原理推导）。可以预期并推导出一个唯一的、有意义的渐近关系形式的答案。\n- **客观性**：问题使用数学和工程领域的精确、客观和标准术语进行陈述。它没有主观或含糊的语言。\n- **完整性与一致性**：问题是自洽的。它提供了推导结果所需的控制方程、数值方法、单元类型、分析拟设和误差度量。内部没有矛盾。\n\n### 步骤3：结论与行动\n该问题被判定为**有效**。这是数值分析中的一个标准的、非平凡的练习。现在我将按要求从第一性原理出发，给出一个完整的、有理有据的解答。\n\n## 解答\n\n亥姆霍兹方程的弱形式是通过乘以一个测试函数 $v$ 并在域 $\\Omega$ 上积分得到的。通过分部积分，我们在一个适当的函数空间中寻找一个解 $u$，使得对于所有测试函数 $v$：\n$$\n\\int_{\\Omega} u'(x) v'(x) \\, dx - k^2 \\int_{\\Omega} u(x) v(x) \\, dx = 0\n$$\n对于无限域，边界项消失。在单个单元 $\\Omega_e$ 上，这导出了单元级矩阵方程 $(\\mathbf{K}^e - k^2 \\mathbf{M}^e)\\mathbf{u}^e = \\mathbf{0}$，其中 $\\mathbf{K}^e$ 是单元刚度矩阵，$\\mathbf{M}^e$ 是单元质量矩阵。矩阵元素由下式给出：\n$$\nK_{ij}^e = \\int_{\\Omega_e} N_i'(x) N_j'(x) \\, dx \\quad \\text{and} \\quad M_{ij}^e = \\int_{\\Omega_e} N_i(x) N_j(x) \\, dx\n$$\n其中 $N_i(x)$ 是形函数。\n\n### 情况1：线性单元 ($p=1$)\n\n对于长度为 $h$ 的线性单元，形函数及其在计算矩阵中的使用是标准的。得到的刚度矩阵和一致质量矩阵为：\n$$\n\\mathbf{K}^e_1 = \\frac{1}{h} \\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix}, \\quad \\mathbf{M}^e_1 = \\frac{h}{6} \\begin{pmatrix} 2 & 1 \\\\ 1 & 2 \\end{pmatrix}\n$$\n对于无限均匀网格，我们考虑在通用节点 $j$ 处组装的方程。这涉及到来自单元 $j-1$（连接节点 $j-1$ 和 $j$）和单元 $j$（连接节点 $j$ 和 $j+1$）的贡献。节点 $j$ 的组装方程为：\n$$\n\\frac{1}{h}(-u_{j-1} + 2u_j - u_{j+1}) - \\frac{k^2 h}{6}(u_{j-1} + 4u_j + u_{j+1}) = 0\n$$\n我们应用布洛赫波拟设 $u_j = U \\exp(i j \\theta)$，其中 $\\theta = k_h h$。将此代入组装的方程并除以公因子，得到：\n$$\n\\frac{1}{h}(-\\exp(-i\\theta) + 2 - \\exp(i\\theta)) - \\frac{k^2 h}{6}(\\exp(-i\\theta) + 4 + \\exp(i\\theta)) = 0\n$$\n使用欧拉公式 $\\exp(i\\theta) + \\exp(-i\\theta) = 2\\cos\\theta$，我们简化为：\n$$\n\\frac{2}{h}(1 - \\cos\\theta) - \\frac{k^2 h}{6}(2\\cos\\theta + 4) = 0\n$$\n这得到了 $p=1$ 单元的离散色散关系：\n$$\nk^2 = \\frac{6}{h^2} \\frac{2(1-\\cos\\theta)}{4+2\\cos\\theta} = \\frac{6}{h^2} \\frac{1-\\cos\\theta}{2+\\cos\\theta}\n$$\n使用半角恒等式 $1-\\cos\\theta = 2\\sin^2(\\theta/2)$，我们得到：\n$$\nk^2 = \\frac{12}{h^2} \\frac{\\sin^2(\\theta/2)}{2+\\cos\\theta}\n$$\n为了分析 $kh \\ll 1$（这意味着 $\\theta \\ll 1$）时的相位误差，我们对这个关系式关于小 $\\theta$ 进行泰勒级数展开。\n$\\sin^2(\\theta/2) = \\frac{\\theta^2}{4} - \\frac{\\theta^4}{48} + \\mathcal{O}(\\theta^6)$ 且 $\\cos\\theta = 1 - \\frac{\\theta^2}{2} + \\frac{\\theta^4}{24} + \\mathcal{O}(\\theta^6)$。\n$$\nk^2 = \\frac{12}{h^2} \\frac{\\frac{\\theta^2}{4} - \\frac{\\theta^4}{48} + \\dots}{3 - \\frac{\\theta^2}{2} + \\dots} = \\frac{3\\theta^2}{h^2} \\frac{1 - \\frac{\\theta^2}{12} + \\dots}{3(1 - \\frac{\\theta^2}{6} + \\dots)} = \\frac{\\theta^2}{h^2} \\left(1 - \\frac{\\theta^2}{12}\\right)\\left(1 + \\frac{\\theta^2}{6}\\right) + \\mathcal{O}(\\theta^4) = \\frac{\\theta^2}{h^2} \\left(1 + \\frac{\\theta^2}{12} + \\mathcal{O}(\\theta^4)\\right)\n$$\n代入 $\\theta = k_h h$，我们有 $k^2 = k_h^2(1 + \\frac{(k_h h)^2}{12} + \\mathcal{O}(h^4))$。\n对于小的 $kh$，将此关系反转以得到以 $k$ 表示的 $k_h$：\n$k_h^2 \\approx k^2 \\left(1 + \\frac{(kh)^2}{12}\\right)^{-1} \\approx k^2 \\left(1 - \\frac{(kh)^2}{12}\\right)$。\n因此，波数平方的误差为 $k_h^2 - k^2 \\approx -k^2 \\frac{(kh)^2}{12} = -\\frac{k^4 h^2}{12}$。\n波数误差为：\n$$\nk_h \\approx k \\sqrt{1 - \\frac{k^2h^2}{12}} \\approx k \\left(1 - \\frac{k^2h^2}{24}\\right)\n$$\n差值 $k_h - k \\approx -\\frac{k^3h^2}{24}$。相对相位误差为：\n$$\n\\delta_1(k,h) = \\frac{|k_h-k|}{k} \\approx \\frac{k^2h^2}{24}\n$$\n将其设置为小于或等于容差 $\\tau$：\n$\\frac{k^2h_1^2}{24} \\le \\tau \\implies h_1^2 \\le \\frac{24\\tau}{k^2} \\implies h_1(k,\\tau) = \\frac{\\sqrt{24\\tau}}{k} = \\frac{2\\sqrt{6\\tau}}{k}$。\n\n### 情况2：二次单元 ($p=2$)\n\n对于二次单元，自由度位于单元边界和单元中心。在参考单元 $[-1, 1]$ 上的单元刚度矩阵和质量矩阵是使用二次形函数 $N_1(\\xi) = \\frac{\\xi(\\xi-1)}{2}$、$N_2(\\xi) = 1-\\xi^2$ 和 $N_3(\\xi) = \\frac{\\xi(\\xi+1)}{2}$ 计算的。这得到：\n$$\n\\mathbf{K}^e_2 = \\frac{1}{3h} \\begin{pmatrix} 7 & -8 & 1 \\\\ -8 & 16 & -8 \\\\ 1 & -8 & 7 \\end{pmatrix}, \\quad \\mathbf{M}^e_2 = \\frac{h}{30} \\begin{pmatrix} 4 & 2 & -1 \\\\ 2 & 16 & 2 \\\\ -1 & 2 & 4 \\end{pmatrix}\n$$\n内部节点的存在使直接组装比 $p=1$ 的情况更复杂。一个标准的程序是静态凝聚，即从单元方程中消除内部自由度。这产生一个仅关联边界节点的、有效的、频率相关的 $2 \\times 2$ 系统。然后对这些有效单元的组装系统进行色散分析。精确离散色散关系的推导及其随后的泰勒展开是一项极其冗长的代数任务。该程序是合理的，但为简洁起见，此处省略其执行过程。这一严谨过程的结果是数值分析领域的一个标准结果。对于主阶项，波数平方的误差为：\n$$\nk_h^2 - k^2 = \\frac{1}{720} k^6 h^4 + \\mathcal{O}(h^6)\n$$\n请注意，对于 $p=2$ 单元，数值相速度大于物理相速度（$k_h > k$），这被称为相位超前行为，与 $p=1$ 单元的相位滞后行为相反。波数的误差为：\n$$\nk_h \\approx k \\sqrt{1 + \\frac{k^4h^4}{720}} \\approx k \\left(1 + \\frac{k^4h^4}{1440}\\right)\n$$\n差值 $k_h - k \\approx \\frac{k^5h^4}{1440}$。相对相位误差为：\n$$\n\\delta_2(k,h) = \\frac{|k_h-k|}{k} \\approx \\frac{k^4h^4}{1440}\n$$\n我们现在施加容差约束 $\\delta_2(k,h) \\le \\tau$：\n$\\frac{k^4h_2^4}{1440} \\le \\tau \\implies h_2^4 \\le \\frac{1440\\tau}{k^4} \\implies h_2(k,\\tau) = \\frac{(1440\\tau)^{1/4}}{k}$。\n我们可以简化常数：$1440 = 144 \\times 10 = 12^2 \\times 10$。此外，$1440=16 \\times 90 = 2^4 \\times 90$。因此，$(1440)^{1/4} = 2(90)^{1/4}$。\n所以，$h_2(k,\\tau) = \\frac{2(90\\tau)^{1/4}}{k}$。\n\n最终结果是 $h_1(k,\\tau)$ 和 $h_2(k,\\tau)$ 的表达式。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{2\\sqrt{6\\tau}}{k} & \\frac{2(90\\tau)^{\\frac{1}{4}}}{k} \\end{pmatrix}}\n$$", "id": "2563865"}, {"introduction": "本编码练习将从理论分析转向实际应用，旨在解决真实声学模拟中的两个基本问题。您将实现一个包含阻抗边界条件的求解器，用以模拟声学中常见的开放无界域。此外，您还将开发一个后验误差指示器，用于度量和控制边界误差，并指导局部网格自适应加密，从而在最需要的地方高效地提高模拟精度 [@problem_id:2563879]。", "problem": "实现一种一维有限元方法，用于求解带有近似吸收边界的标量声学亥姆霍兹方程，并实现一个用于指导边界加密的局部边界不匹配指示器。\n\n您将处理以无量纲形式表示的时谐声压场，因此所有报告的量都必须是无量纲的。考虑区间域 $\\left[0,1\\right]$，其空间坐标为 $x \\in \\left[0,1\\right]$。场 $u(x)$ 满足齐次亥姆霍兹方程，其左端为狄利克雷边界条件，右端为阻抗（吸收）边界条件。控制方程、边界条件和吸收边界近似如下：\n- 亥姆霍兹方程：$-u''(x) - k^2 u(x) = 0$，对于 $x \\in (0,1)$，其中 $k > 0$ 是无量纲波数。\n- 左边界激励：$u(0) = 1$。\n- 用于数值模型的右边界吸收条件：$u'(1) - \\mathrm{i} \\,\\hat{k}\\, u(1) = 0$，其中 $\\hat{k} > 0$ 是 $k$ 的近似值，$\\mathrm{i}$ 表示虚数单位，满足 $\\mathrm{i}^2 = -1$。\n\n从上述强形式出发，在覆盖 $\\left[0,1\\right]$ 且包含 $N$ 个单元的网格上，使用分段线性（连续）有限元推导伽辽金弱形式（Galerkin weak form）。推导必须从二阶导数的分部积分恒等式开始，并将阻抗边界条件作为自然边界项强制施加。所得到的离散线性系统必须由单元刚度矩阵和质量矩阵组装而成。阻抗边界项必须以正确的符号出现在双线性形式中，并与强形式 $u'(1) - \\mathrm{i}\\,\\hat{k}\\,u(1) = 0$ 一致。$x=0$ 处的狄利克雷边界条件必须被强施加。\n\n在右边界上定义一个局部边界条件不匹配指示器，用于衡量离散解 $u_h$ 在使用真实波数 $k$ 的情况下满足物理阻抗条件的程度：\n$$\n\\eta_b \\;=\\; \\left| u_h'(1) \\;-\\; \\mathrm{i}\\,k\\, u_h(1) \\right|.\n$$\n此处，$u_h'(1)$ 是在 $x=1$ 处从最后一个有限元获取的单侧导数，对于一个长度为 $h_{\\text{last}}$、节点值为 $u_h(x_{N-1})$ 和 $u_h(1)$ 的线性单元，其值为\n$$\nu_h'(1) \\;=\\; \\frac{u_h(1) - u_h(x_{N-1})}{h_{\\text{last}}}.\n$$\n\n按如下方式实现一个仅针对最右侧单元的 $h$-加密策略。给定一个包含 $N_0$ 个单元的初始均匀网格，执行 $s$ 次边界加密步骤，在每一步中，仅对与 $x=1$ 相邻的最后一个单元进行二等分，而保持网格其余部分不变。在每个加密步骤 $j \\in \\{0,1,\\dots,s\\}$ （其中 $j=0$ 表示初始网格）之后，求解有限元系统并记录边界不匹配指示器 $\\eta_b^{(j)}$。定义比率\n$$\nr \\;=\\; \\frac{\\eta_b^{(s)}}{\\max\\{\\eta_b^{(0)}, \\varepsilon\\}},\n$$\n其中 $\\varepsilon$ 是一个小的正数，以防止除以零；在您的代码中，请使用 $\\varepsilon = 10^{-14}$。同时，计算一个单调性标志 $m$，其定义为对所有 $j \\in \\{0,1,\\dots,s-1\\}$ 的谓词 $\\eta_b^{(j+1)} \\le \\eta_b^{(j)} + 10^{-12}$ 的布尔值。\n\n您的程序必须实现：\n- 基于第一性原理推导的弱形式，实现亥姆霍兹算子的一维线性有限元组装。\n- 在双线性形式内部包含带有近似波数 $\\hat{k}$ 的右边界阻抗项。\n- 使用真实波数 $k$ 计算边界不匹配指示器 $\\eta_b$。\n- 仅限边界的加密循环以及 $(r,m)$ 的计算。\n\n使用以下测试套件，每个测试用例以元组 $(k,\\hat{k},N_0,s)$ 的形式给出：\n- 用例 A: $(k,\\hat{k},N_0,s) = (5.0, 5.0, 16, 4)$。\n- 用例 B: $(k,\\hat{k},N_0,s) = (15.0, 15.0, 24, 4)$。\n- 用例 C: $(k,\\hat{k},N_0,s) = (20.0, 18.0, 40, 5)$。\n- 用例 D: $(k,\\hat{k},N_0,s) = (10.0, 10.0, 200, 3)$。\n- 用例 E: $(k,\\hat{k},N_0,s) = (8.0, 8.0, 1, 5)$。\n\n所有变量和报告值均为无量纲。您的程序应生成单行输出，其中包含一个以逗号分隔的 Python 列表的列表形式的结果，每个内部列表对应一个测试用例，并与上述顺序相同。对于每个测试用例，内部列表必须恰好包含两个条目：浮点比率 $r$ 和布尔值 $m$。最后一行必须看起来像\n\"[[r_A,m_A],[r_B,m_B],[r_C,m_C],[r_D,m_D],[r_E,m_E]]\"\n其中替换为实际数值，且不含任何附加文本。所有浮点值必须以标准十进制形式表示。", "solution": "此问题是有效的。它提出了一个清晰、有科学依据的计算声学任务，使用有限元方法。所有参数和程序都有明确定义。我们将进行推导和实现。\n\n有限元方法的基础是控制微分方程的弱形式。我们从域 $x \\in (0,1)$ 上的齐次亥姆霍兹方程的强形式开始：\n$$\n-u''(x) - k^2 u(x) = 0\n$$\n边界条件为左边界处的狄利克雷条件 $u(0) = 1$ 和右边界处的阻抗条件 $u'(1) - \\mathrm{i} \\hat{k} u(1) = 0$。在此， $k$ 是真实的物理波数，而 $\\hat{k}$ 是数值模型中使用的近似值。\n\n为了推导弱形式，我们将方程乘以一个合适的测试函数 $v(x)$ 并在域 $[0,1]$ 上积分：\n$$\n\\int_0^1 (-u''(x) - k^2 u(x)) v(x) \\, dx = 0\n$$\n对二阶导数项应用分部积分，$-\\int u'' v \\, dx = \\int u' v' \\, dx - [u'v]_0^1$，我们得到：\n$$\n\\int_0^1 u'(x) v'(x) \\, dx - [u'(x)v(x)]_0^1 - k^2 \\int_0^1 u(x) v(x) \\, dx = 0\n$$\n展开边界项 $[u'(x)v(x)]_0^1$ 得到 $u'(1)v(1) - u'(0)v(0)$。方程变为：\n$$\n\\int_0^1 u'(x) v'(x) \\, dx - u'(1)v(1) + u'(0)v(0) - k^2 \\int_0^1 u(x) v(x) \\, dx = 0\n$$\n狄利克雷条件 $u(0)=1$ 是一个本质边界条件，将在离散解空间上被强施加。这意味着测试函数 $v(x)$ 必须属于一个函数空间，其中函数在狄利克雷边界处为零，即 $v(0)=0$。因此，项 $u'(0)v(0)$ 恒等于零。\n\n阻抗条件 $u'(1) = \\mathrm{i} \\hat{k} u(1)$ 是一个自然边界条件。我们将其代入弱形式：\n$$\n\\int_0^1 u'(x) v'(x) \\, dx - (\\mathrm{i} \\hat{k} u(1))v(1) - k^2 \\int_0^1 u(x) v(x) \\, dx = 0\n$$\n这就是最终的弱形式。问题是找到一个满足 $u(0)=1$ 的函数 $u(x)$，使得对于所有满足 $v(0)=0$ 的可容许测试函数 $v(x)$，上述方程都成立。这可以简洁地表述为：寻找 $u \\in \\mathcal{S}$ 使得对所有 $v \\in \\mathcal{V}_0$ 都有 $a(u,v)=0$，其中 $\\mathcal{S} = \\{ w \\in H^1(0,1) \\mid w(0)=1 \\}$，$\\mathcal{V}_0 = \\{ w \\in H^1(0,1) \\mid w(0)=0 \\}$，并且半双线性形式 $a(u,v)$ 定义为：\n$$\na(u,v) = \\int_0^1 u'(x) \\overline{v'(x)} \\, dx - k^2 \\int_0^1 u(x) \\overline{v(x)} \\, dx - \\mathrm{i} \\hat{k} u(1) \\overline{v(1)}\n$$\n请注意，对于实值测试函数 $v(x)$，可以省略复共轭，正如推导中所做的那样。在复数场的数值实现中，考虑半双线性形式更为严谨，但对于本问题中的实值基函数，结果是相同的。\n\n对于有限元离散化，我们将域 $[0,1]$ 划分成由 $N+1$ 个节点 $x_0, x_1, \\ldots, x_N$ 定义的 $N$ 个单元。解 $u(x)$ 由一个分段线性函数 $u_h(x) = \\sum_{j=0}^N U_j \\phi_j(x)$ 来近似，其中 $\\phi_j(x)$ 是标准的线性“帽子”基函数，$U_j = u_h(x_j)$ 是复数值的节点未知数。\n\n伽辽金方法（Galerkin method）要求弱形式对每个对应于未知自由度的基函数 $\\phi_i(x)$ 都成立。由于 $U_0 = u_h(0) = 1$ 是固定的，我们用 $i=1, \\dots, N$ 的 $\\phi_i(x)$ 进行测试。这会产生一个关于 $N$ 个未知数 $U_1, \\ldots, U_N$ 的 $N$ 个线性方程组：\n$$\na(u_h, \\phi_i) = a\\left(\\sum_{j=0}^{N} U_j \\phi_j, \\phi_i\\right) = \\sum_{j=0}^{N} U_j \\, a(\\phi_j, \\phi_i) = 0 \\quad \\text{for } i=1, \\dots, N\n$$\n分离已知项 $U_0=1$：\n$$\n\\sum_{j=1}^{N} U_j \\, a(\\phi_j, \\phi_i) = - U_0 \\, a(\\phi_0, \\phi_i) = -a(\\phi_0, \\phi_i) \\quad \\text{for } i=1, \\dots, N\n$$\n这是一个线性系统 $\\mathbf{A}_{sys}\\mathbf{U}_{unk} = \\mathbf{b}_{sys}$，其中系统矩阵的元素为 $(\\mathbf{A}_{sys})_{ij} = a(\\phi_{j+1}, \\phi_{i+1})$，未知向量为 $\\mathbf{U}_{unk} = [U_1, \\ldots, U_N]^T$，右端向量为 $(\\mathbf{b}_{sys})_i = -a(\\phi_0, \\phi_{i+1})$，对于 $i,j = 0, \\ldots, N-1$。\n\n项 $a(\\phi_j, \\phi_i)$ 是从单元级矩阵组装而成的。对于一个连接节点 $a$ 和 $b$、长度为 $h_e$ 的通用单元 $e$，线性单元的局部刚度矩阵 $\\mathbf{K}^e$ 和质量矩阵 $\\mathbf{M}^e$ 为：\n$$\n\\mathbf{K}^e = \\frac{1}{h_e}\\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix}, \\quad \\mathbf{M}^e = \\frac{h_e}{6}\\begin{pmatrix} 2 & 1 \\\\ 1 & 2 \\end{pmatrix}\n$$\n每个单元对全局矩阵的贡献是 $\\mathbf{K}^e - k^2 \\mathbf{M}^e$。阻抗边界项 $-\\mathrm{i} \\hat{k} u(1) v(1)$ 只影响对应于最后一个节点 $x_N=1$ 的条目。在离散系统中，这会在全局矩阵的第 $N$ 行和第 $N$ 列的条目上增加一个项 $-\\mathrm{i} \\hat{k}$。\n\n算法流程如下：\n1.  对每个测试用例，用 $N_0$ 个均匀单元初始化网格。节点坐标存储在一个数组中。\n2.  开始一个关于加密步骤 $j=0, \\ldots, s$ 的循环。\n3.  在循环内部，通过遍历单元并累加它们的刚度和质量贡献，组装 $(N_j+1) \\times (N_j+1)$ 的全局系统矩阵 $\\mathbf{A}_{glob}$。单元数量 $N_j$ 随每次加密而增加。\n4.  将阻抗边界项 $-\\mathrm{i} \\hat{k}$ 添加到对角线元素 $\\mathbf{A}_{glob}[N_j, N_j]$ 上。\n5.  通过提取未知自由度 $U_1, \\ldots, U_{N_j}$ 的子系统来施加狄利克雷条件 $U_0=1$。待求解的系统是 $\\mathbf{A}_{sys} \\mathbf{U}_{unk} = \\mathbf{b}_{sys}$，其中 $\\mathbf{A}_{sys}$ 是子矩阵 $\\mathbf{A}_{glob}[1:, 1:]$，而 $\\mathbf{b}_{sys}$ 是向量 $-\\mathbf{A}_{glob}[1:, 0]$。\n6.  求解线性系统得到 $\\mathbf{U}_{unk}$，并重构完整的解向量 $\\mathbf{U} = [1, U_1, \\ldots, U_{N_j}]^T$。\n7.  使用真实波数 $k$ 计算边界不匹配指示器 $\\eta_b^{(j)} = | u_h'(1) - \\mathrm{i} k u_h(1) |$。导数 $u_h'(1)$ 根据最后一个单元近似为 $(U_{N_j} - U_{N_j-1})/h_{\\text{last}}$。\n8.  将 $\\eta_b^{(j)}$ 存储在一个列表中。\n9.  如果 $j<s$，通过二等分最后一个单元来加密网格。这包括在 $x_{N_j-1}$ 和 $x_{N_j}=1$ 之间的中点插入一个新节点。\n10. 循环结束后，计算比率 $r = \\eta_b^{(s)} / \\max(\\eta_b^{(0)}, 10^{-14})$。\n11. 通过检查是否对所有 $j=0, \\ldots, s-1$ 都满足 $\\eta_b^{(j+1)} \\le \\eta_b^{(j)} + 10^{-12}$，来计算单调性标志 $m$。\n这样就为每个测试用例提供了所需的数对 $(r, m)$。", "answer": "```python\nimport numpy as np\n\ndef run_case(k, k_hat, N0, s):\n    \"\"\"\n    Solves the 1D Helmholtz FEM problem for a given test case.\n    \n    Args:\n        k (float): True nondimensional wavenumber.\n        k_hat (float): Approximate wavenumber for the boundary condition.\n        N0 (int): Initial number of elements.\n        s (int): Number of boundary refinement steps.\n        \n    Returns:\n        list: A list containing the ratio r and the monotonicity flag m.\n    \"\"\"\n    \n    # Use double precision complex numbers for all calculations\n    complex_dtype = np.complex128\n    \n    # Epsilon values for calculations\n    epsilon_r = 1e-14\n    epsilon_m = 1e-12\n\n    # Initial uniform mesh\n    nodes = np.linspace(0.0, 1.0, N0 + 1)\n    \n    eta_b_history = []\n\n    for j in range(s + 1):\n        N_elements = len(nodes) - 1\n        N_nodes = N_elements + 1\n\n        # Initialize global matrix\n        A_glob = np.zeros((N_nodes, N_nodes), dtype=complex_dtype)\n\n        # Assemble global matrix from element contributions\n        for i in range(N_elements):\n            node_idx1, node_idx2 = i, i + 1\n            h = nodes[node_idx2] - nodes[node_idx1]\n            \n            # Element stiffness matrix\n            K_e = (1.0 / h) * np.array([[1.0, -1.0], \n                                       [-1.0, 1.0]], dtype=complex_dtype)\n            \n            # Element mass matrix\n            M_e = (h / 6.0) * np.array([[2.0, 1.0], \n                                        [1.0, 2.0]], dtype=complex_dtype)\n\n            # Element system matrix\n            A_e = K_e - k**2 * M_e\n            \n            # Add to global matrix (assembly)\n            A_glob[node_idx1:node_idx1+2, node_idx1:node_idx1+2] += A_e\n\n        # Apply impedance boundary condition at x=1 (node N)\n        A_glob[N_elements, N_elements] -= 1j * k_hat\n\n        # Apply Dirichlet boundary condition u(0)=1 (strong enforcement)\n        # Extract the system for unknown DOFs U_1, ..., U_N\n        A_sys = A_glob[1:, 1:]\n        b_sys = -A_glob[1:, 0] * 1.0  # U_0 = 1.0\n\n        # Solve the linear system\n        U_unknown = np.linalg.solve(A_sys, b_sys)\n        \n        # Reconstruct full solution vector\n        U = np.concatenate(([1.0 + 0.0j], U_unknown))\n\n        # Calculate boundary mismatch indicator eta_b\n        h_last = nodes[-1] - nodes[-2]\n        u_h_at_1 = U[-1]\n        u_h_at_N_minus_1 = U[-2]\n        \n        u_h_prime_at_1 = (u_h_at_1 - u_h_at_N_minus_1) / h_last\n        \n        # Note: Use true wavenumber k for the indicator\n        eta_b = np.abs(u_h_prime_at_1 - 1j * k * u_h_at_1)\n        eta_b_history.append(eta_b)\n\n        # Refine the mesh for the next step by bisecting the last element\n        if j  s:\n            new_node = (nodes[-1] + nodes[-2]) / 2.0\n            nodes = np.insert(nodes, -1, new_node)\n    \n    # Compute final ratio r and monotonicity flag m\n    r = eta_b_history[-1] / max(eta_b_history[0], epsilon_r)\n    \n    # Check if eta_b is monotonically non-increasing (within a tolerance)\n    diffs = np.diff(eta_b_history)\n    m = bool(np.all(diffs = epsilon_m))\n\n    return [r, m]\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the results.\n    \"\"\"\n    test_cases = [\n        # (k, k_hat, N0, s)\n        (5.0, 5.0, 16, 4),    # Case A\n        (15.0, 15.0, 24, 4),   # Case B\n        (20.0, 18.0, 40, 5),   # Case C\n        (10.0, 10.0, 200, 3),  # Case D\n        (8.0, 8.0, 1, 5),      # Case E\n    ]\n\n    results = []\n    for case in test_cases:\n        k, k_hat, N0, s = case\n        result = run_case(k, k_hat, N0, s)\n        results.append(result)\n\n    # Format output string manually to match the required format exactly\n    # \"[[r_A,m_A],[r_B,m_B],...]\" without extra spaces\n    inner_lists_str = []\n    for res in results:\n        r_str = str(res[0])\n        m_str = str(res[1]).lower() # Python bool is True, required is true\n        inner_lists_str.append(f\"[{r_str},{m_str}]\")\n    \n    final_output_string = f\"[{','.join(inner_lists_str)}]\"\n    print(final_output_string)\n\nsolve()\n```", "id": "2563879"}]}