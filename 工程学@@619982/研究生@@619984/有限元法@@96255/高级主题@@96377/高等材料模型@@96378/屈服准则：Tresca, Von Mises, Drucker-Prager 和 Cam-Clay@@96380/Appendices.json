{"hands_on_practices": [{"introduction": "在深入研究复杂的屈服准则之前，掌握其基本构成要素至关重要。几乎所有的塑性模型都建立在应力张量的分解之上，即将其分为引起体积变化的静水压力部分和引起形状变化的偏应力部分。本练习旨在通过计算柯西应力张量的第一不变量 $I_1$ 、偏应力张量的第二和第三不变量 $J_2$、$J_3$ 以及偏应力张量本身，来巩固对这些基本概念的理解和计算能力 [@problem_id:2612526]。", "problem": "在有限元法 (FEM) 的计算弹塑性力学中，诸如 von Mises、Tresca、Drucker–Prager 和 Cam–Clay 模型等屈服函数是根据应力不变量和柯西应力的偏量-体量分解来评估的。考虑一个高斯点处的小应变三维实体，其对称柯西应力张量（单位：兆帕）由下式给出\n$$\n\\boldsymbol{\\sigma}=\\begin{bmatrix} 100 & 30 & 0 \\\\ 30 & 40 & 0 \\\\ 0 & 0 & 20 \\end{bmatrix}.\n$$\n从本构模型中使用的应力不变量和偏应力分解的定义出发，计算柯西应力的第一不变量 $I_1$、偏应力的第二和第三不变量（记为 $J_2$ 和 $J_3$）以及与 $\\boldsymbol{\\sigma}$ 相关的偏应力张量 $\\boldsymbol{s}$。要求 $I_1$ 以 $\\mathrm{MPa}$ 为单位，$J_2$ 以 $\\mathrm{MPa}^2$ 为单位，$J_3$ 以 $\\mathrm{MPa}^3$ 为单位，$\\boldsymbol{s}$ 的分量以 $\\mathrm{MPa}$ 为单位表示。请提供精确值（无四舍五入）。您的最终答案必须按顺序依次列出 $I_1$、$J_2$、$J_3$ 和 $\\boldsymbol{s}$。", "solution": "所求的量源于本构模型中用于屈服准则的柯西应力的标准体量-偏量分解。基本定义如下：\n- 柯西应力的第一不变量是 $I_1=\\operatorname{tr}(\\boldsymbol{\\sigma})$。\n- 偏应力张量是 $\\boldsymbol{s}=\\boldsymbol{\\sigma}-p\\,\\boldsymbol{I}$，其中 $p=\\frac{1}{3}I_1$ 且 $\\boldsymbol{I}$ 是二阶单位张量，这确保了 $\\operatorname{tr}(\\boldsymbol{s})=0$。\n- 偏应力的第二不变量是 $J_2=\\frac{1}{2}\\,s_{ij}s_{ij}$，其中重复的下标表示求和。\n- 偏应力的第三不变量是 $J_3=\\det(\\boldsymbol{s})$。\n\n步骤 1：计算第一不变量 $I_1$。\n给定\n$$\n\\boldsymbol{\\sigma}=\\begin{bmatrix} 100 & 30 & 0 \\\\ 30 & 40 & 0 \\\\ 0 & 0 & 20 \\end{bmatrix},\n$$\n其迹为\n$$\nI_1=\\operatorname{tr}(\\boldsymbol{\\sigma})=100+40+20=160.\n$$\n\n步骤 2：计算偏应力张量 $\\boldsymbol{s}$。\n平均应力为\n$$\np=\\frac{1}{3}I_1=\\frac{160}{3}.\n$$\n因此\n$$\n\\boldsymbol{s}=\\boldsymbol{\\sigma}-\\frac{I_1}{3}\\boldsymbol{I}\n=\\begin{bmatrix} 100 & 30 & 0 \\\\ 30 & 40 & 0 \\\\ 0 & 0 & 20 \\end{bmatrix}\n-\\begin{bmatrix} \\frac{160}{3} & 0 & 0 \\\\ 0 & \\frac{160}{3} & 0 \\\\ 0 & 0 & \\frac{160}{3} \\end{bmatrix}\n=\\begin{bmatrix}\n100-\\frac{160}{3} & 30 & 0 \\\\\n30 & 40-\\frac{160}{3} & 0 \\\\\n0 & 0 & 20-\\frac{160}{3}\n\\end{bmatrix}.\n$$\n简化每个分量，\n$$\n\\boldsymbol{s}=\\begin{bmatrix}\n\\frac{140}{3} & 30 & 0 \\\\\n30 & -\\frac{40}{3} & 0 \\\\\n0 & 0 & -\\frac{100}{3}\n\\end{bmatrix}.\n$$\n\n步骤 3：计算 $J_2=\\frac{1}{2}\\,s_{ij}s_{ij}$。\n根据定义，\n$$\ns_{ij}s_{ij}=\\sum_{i=1}^{3}\\sum_{j=1}^{3} s_{ij}^{2}\n=\\left(\\frac{140}{3}\\right)^{2}+\\left(-\\frac{40}{3}\\right)^{2}+\\left(-\\frac{100}{3}\\right)^{2}\n+2\\cdot 30^{2}+0+0,\n$$\n其中非对角线项的贡献来自 $s_{12}=s_{21}=30$，其他非对角线项为零。计算对角线项：\n$$\n\\left(\\frac{140}{3}\\right)^{2}=\\frac{19600}{9},\\quad\n\\left(\\frac{40}{3}\\right)^{2}=\\frac{1600}{9},\\quad\n\\left(\\frac{100}{3}\\right)^{2}=\\frac{10000}{9}.\n$$\n求和，\n$$\n\\sum_{\\text{diag}}=\\frac{19600+1600+10000}{9}=\\frac{31200}{9},\\quad\n\\sum_{\\text{off-diag}}=2\\cdot 30^{2}=1800=\\frac{16200}{9}.\n$$\n因此，\n$$\ns_{ij}s_{ij}=\\frac{31200}{9}+\\frac{16200}{9}=\\frac{47400}{9},\n$$\n从而\n$$\nJ_2=\\frac{1}{2}\\,s_{ij}s_{ij}=\\frac{1}{2}\\cdot \\frac{47400}{9}=\\frac{23700}{9}=\\frac{7900}{3}.\n$$\n\n步骤 4：计算 $J_3=\\det(\\boldsymbol{s})$。\n偏应力张量是块对角的，即第三行和第三列除了通过对角线项外与前两行两列是解耦的，所以\n$$\nJ_3=\\det(\\boldsymbol{s})\n=\\left(-\\frac{100}{3}\\right)\\det\\begin{bmatrix} \\frac{140}{3} & 30 \\\\ 30 & -\\frac{40}{3} \\end{bmatrix}.\n$$\n该 $2\\times 2$ 行列式为\n$$\n\\det\\begin{bmatrix} \\frac{140}{3} & 30 \\\\ 30 & -\\frac{40}{3} \\end{bmatrix}\n=\\frac{140}{3}\\left(-\\frac{40}{3}\\right)-30\\cdot 30\n=-\\frac{5600}{9}-900\n=-\\frac{5600+8100}{9}\n=-\\frac{13700}{9}.\n$$\n因此\n$$\nJ_3=\\left(-\\frac{100}{3}\\right)\\left(-\\frac{13700}{9}\\right)=\\frac{1370000}{27}.\n$$\n\n所有量均为精确值。单位：$I_1$ 为 $\\mathrm{MPa}$，$J_2$ 为 $\\mathrm{MPa}^{2}$，$J_3$ 为 $\\mathrm{MPa}^{3}$，$\\boldsymbol{s}$ 的分量为 $\\mathrm{MPa}$。", "answer": "$$\\boxed{\\begin{pmatrix}\n160 & \\frac{7900}{3} & \\frac{1370000}{27} & \\begin{pmatrix} \\frac{140}{3} & 30 & 0 \\\\ 30 & -\\frac{40}{3} & 0 \\\\ 0 & 0 & -\\frac{100}{3} \\end{pmatrix}\n\\end{pmatrix}}$$", "id": "2612526"}, {"introduction": "掌握了应力不变量的计算后，下一步是理解如何将它们应用于经典的屈服准则，如 Tresca 和 von Mises 模型。这个实践练习通过一个标准的单轴拉伸试验，建立了理论模型参数（如 Tresca 模型的剪切屈服应力 $k$）与可测量的实验数据（单轴屈服应力 $\\sigma_y$）之间的桥梁。通过这个练习，你将亲身体会如何校准这些基础的塑性模型，并比较它们在单轴应力状态下的预测 [@problem_id:2612493]。", "problem": "考虑一个沿 $x$ 轴进行单轴拉伸试验的小应变、各向同性、均匀固体。在初次屈服开始时，测得的柯西应力张量为\n$$\n\\boldsymbol{\\sigma} = \\operatorname{diag}(\\sigma_y, 0, 0),\n$$\n其中 $\\sigma_y$ 是测得的轴向屈服应力。可以假定在标准三维情况下，主应力表示为 $\\sigma_1 \\ge \\sigma_2 \\ge \\sigma_3$。\n\n仅使用以下基本定义：\n- 最大剪应力为\n$$\n\\tau_{\\max} = \\max_{i<j}\\frac{|\\sigma_i - \\sigma_j|}{2}.\n$$\n- 当 $\\tau_{\\max} = k$ 时，达到 Tresca 屈服条件，其中 $k$ 是材料的剪切屈服应力参数。\n- 偏应力张量为\n$$\n\\boldsymbol{s} = \\boldsymbol{\\sigma} - \\frac{1}{3}\\operatorname{tr}(\\boldsymbol{\\sigma})\\,\\boldsymbol{I}.\n$$\n- 偏应力第二不变量为\n$$\nJ_2 = \\frac{1}{2}\\,\\boldsymbol{s}:\\boldsymbol{s}.\n$$\n- von Mises 等效应力定义为\n$$\n\\sigma_{eq} = \\sqrt{3\\,J_2}.\n$$\n\n仅从这些定义出发，确定由该单轴试验所隐含的 Tresca 剪切屈服应力参数 $k$，并计算此单轴屈服状态下的 von Mises 等效应力 $\\sigma_{eq}$。将最终答案表示为一个包含 $k$ 和 $\\sigma_{eq}$ 的单行矩阵，其中每一项都用 $\\sigma_y$ 表示。最终答案中不要包含单位，也不要进行任何数值四舍五入；要求给出精确的符号表达式。", "solution": "该问题是有效的，因为它在科学上以连续介质力学为基础，是适定的、客观且自洽的。所有定义和条件都是标准的，且没有矛盾。下面我们进行求解。\n\n该问题要求基于单轴拉伸试验初次屈服时的应力状态，确定两个量：Tresca 剪切屈服应力参数 $k$ 和 von Mises 等效应力 $\\sigma_{eq}$。这两个量都将用测得的轴向屈服应力 $\\sigma_y$ 来表示。\n\n首先，我们确定 Tresca 参数 $k$。给定的屈服柯西应力张量为\n$$\n\\boldsymbol{\\sigma} = \\operatorname{diag}(\\sigma_y, 0, 0) = \\begin{pmatrix} \\sigma_y & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 0 \\end{pmatrix}\n$$\n主应力是应力张量的特征值。对于对角矩阵，主应力就是对角元。问题指明主应力按 $\\sigma_1 \\ge \\sigma_2 \\ge \\sigma_3$ 排序。在拉伸试验中，轴向应力 $\\sigma_y$ 为正值。因此，主应力为：\n$$\n\\sigma_1 = \\sigma_y, \\quad \\sigma_2 = 0, \\quad \\sigma_3 = 0\n$$\n最大剪应力 $\\tau_{\\max}$ 定义为任意两主应力之差的绝对值的最大值除以 2：\n$$\n\\tau_{\\max} = \\max_{i<j}\\frac{|\\sigma_i - \\sigma_j|}{2} = \\max \\left( \\frac{|\\sigma_1 - \\sigma_2|}{2}, \\frac{|\\sigma_2 - \\sigma_3|}{2}, \\frac{|\\sigma_1 - \\sigma_3|}{2} \\right)\n$$\n代入主应力的值：\n$$\n\\tau_{\\max} = \\max \\left( \\frac{|\\sigma_y - 0|}{2}, \\frac{|0 - 0|}{2}, \\frac{|\\sigma_y - 0|}{2} \\right)\n$$\n$$\n\\tau_{\\max} = \\max \\left( \\frac{\\sigma_y}{2}, 0, \\frac{\\sigma_y}{2} \\right) = \\frac{\\sigma_y}{2}\n$$\nTresca 屈服准则指出，当 $\\tau_{\\max}$ 达到材料的剪切屈服应力 $k$ 时，发生屈服。由于给定的应力状态对应于屈服的开始，我们有：\n$$\nk = \\tau_{\\max} = \\frac{\\sigma_y}{2}\n$$\n\n接下来，我们计算 von Mises 等效应力 $\\sigma_{eq}$。推导从计算偏应力张量 $\\boldsymbol{s}$ 开始，其定义为 $\\boldsymbol{s} = \\boldsymbol{\\sigma} - \\frac{1}{3}\\operatorname{tr}(\\boldsymbol{\\sigma})\\,\\boldsymbol{I}$，其中 $\\boldsymbol{I}$ 是单位张量。首先，我们求应力张量的迹：\n$$\n\\operatorname{tr}(\\boldsymbol{\\sigma}) = \\sigma_{11} + \\sigma_{22} + \\sigma_{33} = \\sigma_y + 0 + 0 = \\sigma_y\n$$\n于是，偏应力张量为：\n$$\n\\boldsymbol{s} = \\begin{pmatrix} \\sigma_y & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 0 \\end{pmatrix} - \\frac{1}{3}\\sigma_y \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}\n= \\begin{pmatrix} \\sigma_y - \\frac{1}{3}\\sigma_y & 0 & 0 \\\\ 0 & -\\frac{1}{3}\\sigma_y & 0 \\\\ 0 & 0 & -\\frac{1}{3}\\sigma_y \\end{pmatrix}\n= \\begin{pmatrix} \\frac{2}{3}\\sigma_y & 0 & 0 \\\\ 0 & -\\frac{1}{3}\\sigma_y & 0 \\\\ 0 & 0 & -\\frac{1}{3}\\sigma_y \\end{pmatrix}\n$$\n偏应力第二不变量 $J_2$ 定义为 $J_2 = \\frac{1}{2}\\boldsymbol{s}:\\boldsymbol{s}$。双点积 $\\boldsymbol{s}:\\boldsymbol{s}$ 是 $\\boldsymbol{s}$ 各分量平方的和：\n$$\n\\boldsymbol{s}:\\boldsymbol{s} = s_{ij}s_{ji} = s_{11}^{2} + s_{22}^{2} + s_{33}^{2}\n= \\left(\\frac{2}{3}\\sigma_y\\right)^{2} + \\left(-\\frac{1}{3}\\sigma_y\\right)^{2} + \\left(-\\frac{1}{3}\\sigma_y\\right)^{2}\n$$\n$$\n\\boldsymbol{s}:\\boldsymbol{s} = \\frac{4}{9}\\sigma_y^{2} + \\frac{1}{9}\\sigma_y^{2} + \\frac{1}{9}\\sigma_y^{2} = \\frac{6}{9}\\sigma_y^{2} = \\frac{2}{3}\\sigma_y^{2}\n$$\n现在，我们可以计算 $J_2$：\n$$\nJ_2 = \\frac{1}{2}\\boldsymbol{s}:\\boldsymbol{s} = \\frac{1}{2}\\left(\\frac{2}{3}\\sigma_y^{2}\\right) = \\frac{1}{3}\\sigma_y^{2}\n$$\n最后，为此屈服状态计算 von Mises 等效应力 $\\sigma_{eq}$，其定义为 $\\sigma_{eq} = \\sqrt{3\\,J_2}$：\n$$\n\\sigma_{eq} = \\sqrt{3 \\left(\\frac{1}{3}\\sigma_y^{2}\\right)} = \\sqrt{\\sigma_y^{2}}\n$$\n由于 $\\sigma_y$ 代表拉伸屈服应力，它是一个正量，所以 $\\sqrt{\\sigma_y^{2}} = \\sigma_y$。\n$$\n\\sigma_{eq} = \\sigma_y\n$$\n这个结果验证了 von Mises 屈服准则的标定，即对于单轴拉伸状态，其等效应力根据定义就是轴向应力本身。所求的两个量是 $k = \\frac{\\sigma_y}{2}$ 和 $\\sigma_{eq} = \\sigma_y$。", "answer": "$$\\boxed{\\begin{pmatrix} \\frac{\\sigma_y}{2} & \\sigma_y \\end{pmatrix}}$$", "id": "2612493"}, {"introduction": "本章的最终实践将你从基本原理的运用带入一个综合性的算法实现任务中。你将为修正剑桥模型（Modified Cam-Clay model）——计算土力学的基石之一——开发一个完整的返回映射算法。这个练习要求你将屈服面、流动法则和硬化规律等概念融合成一个可工作的数值程序，这是有限元方法实践者所需掌握的一项核心技能 [@problem_id:2612470]。", "problem": "要求您在以 $(p',q)$ 表示的平均有效应力-偏应力平面上，为 Modified Cam-Clay 模型建立并实现一个稳健的单步本构更新（返回映射）算法。您的推导和实现必须从有限元法 (FEM) 中弹塑性力学的第一性原理出发，仅使用核心定义和成熟的公式。目标是利用一致性条件和各向同性硬化法则，推导出一个关于塑性乘子增量 $\\Delta\\lambda$ 的单一标量方程，然后针对一组测试用例计算 $\\Delta\\lambda$。所有类应力量必须以千帕斯卡 (kPa) 为单位，塑性乘子增量 $\\Delta\\lambda$ 为无量纲。\n\n使用的背景定义和假设：\n- 平均有效应力为 $p' = \\tfrac{1}{3}\\operatorname{tr}(\\boldsymbol{\\sigma}')$，压为正；$q$-不变量为 $q = \\sqrt{\\frac{3}{2}} \\lVert \\boldsymbol{s} \\rVert$，其中 $\\boldsymbol{s}$ 是偏应力张量。\n- Modified Cam-Clay (MCC) 屈服函数为\n$$\nf(p',q,p_c') \\equiv \\frac{q^2}{M^2} + p'(p' - p_c') \\,,\n$$\n其中 $M$ 是 $p'–q$ 平面上的临界状态斜率，$p_c'$ 是先期固结压力。\n- 弹性是各向同性的，具有共轭对 $(p',\\varepsilon_v)$ 和 $(q,\\varepsilon_s)$，因此弹性增量服从 $dp' = K\\, d\\varepsilon_v^e$ 和 $dq = 3G\\, d\\varepsilon_s^e$，其中 $K$ 是体积模量，$G$ 是剪切模量。\n- 流动法则是相关的：$d\\boldsymbol{\\varepsilon}^p = \\Delta\\lambda\\, \\dfrac{\\partial f}{\\partial \\boldsymbol{\\sigma}}$。在共轭不变量对中，这意味着 $d\\varepsilon_v^p = \\Delta\\lambda\\, \\dfrac{\\partial f}{\\partial p'}$ 和 $d\\varepsilon_s^p = \\Delta\\lambda\\, \\dfrac{\\partial f}{\\partial q}$。\n- 各向同性硬化法则为 $d p_c' / p_c' = d\\varepsilon_v^p / (\\lambda - \\kappa)$，其中 $\\lambda$ 和 $\\kappa$ 分别是压缩指数和回弹指数（无量纲）。\n\n任务：\n1) 推导更新后的 $(p',q)$ 关于试探状态 $(p'^{tr}, q^{tr})$、塑性乘子增量 $\\Delta\\lambda$ 和更新后的先期固结压力 $p_c'$ 的隐式返回映射关系。您必须从弹性预测-塑性修正结构开始：\n- 预测步：假设为弹性增量以获得试探应力 $(p'^{tr}, q^{tr})$。\n- 修正步：通过使用 $\\Delta\\lambda$ 沿相关流动法向返回到屈服面，强制满足塑性许可条件。\n2) 在增量步结束时施加一致性条件 $f(p',q,p_c') = 0$，并将其与硬化法则结合，以获得关于 $\\Delta\\lambda$ 的单一标量方程。您必须消去 $(p',q)$ 以支持 $\\Delta\\lambda$ 和 $p_c'$，然后利用硬化法则消去 $p_c'$，从而得到一个一维非线性方程 $g(\\Delta\\lambda) = 0$。请提供推导出此标量方程的显式表达式。\n3) 实现一个程序，对每个测试用例，按如下方式计算 $\\Delta\\lambda$：\n- 如果试探状态是许可的，$f(p'^{tr}, q^{tr}, p_c'^{old}) \\le 0$，则设 $\\Delta\\lambda = 0$ 并保持试探状态（弹性步）。\n- 否则，使用一个稳健的求根方法求解非线性标量方程 $g(\\Delta\\lambda) = 0$，以获得 $\\Delta\\lambda > 0$。如果在推导过程中自然出现特殊函数，您可以使用它们。当涉及多值函数时，使用主实数分支。\n- 求解出 $\\Delta\\lambda$ 后，您可以计算更新后的 $(p', q, p_c')$ 以进行内部验证，但要求的输出仅为 $\\Delta\\lambda$。\n- 类应力量单位必须是千帕斯卡 (kPa)。塑性乘子 $\\Delta\\lambda$ 是无量纲的。角度单位不适用。此任务不涉及百分比。\n\n测试套件：\n对所有用例使用以下材料常数：$M = 1.2$，$K = 10000$ kPa，$G = 5000$ kPa，$\\lambda = 0.2$，$\\kappa = 0.05$，以及初始先期固结压力 $p_c'^{old} = 200$ kPa。提供以下试探状态 $(p'^{tr}, q^{tr})$：\n- 用例 A (弹性)：$p'^{tr} = 100$ kPa, $q^{tr} = 50$ kPa。\n- 用例 B (位于屈服面上)：$p'^{tr} = 150$ kPa, $q^{tr} = 1.2 \\sqrt{150 \\cdot (200 - 150)} \\approx 103.92304845$ kPa。\n- 用例 C (偏塑性)：$p'^{tr} = 120$ kPa, $q^{tr} = 200$ kPa。\n- 用例 D (近静水塑性)：$p'^{tr} = 220$ kPa, $q^{tr} = 10$ kPa。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含按顺序排列的用例 A–D 的四个 $\\Delta\\lambda$ 计算值，格式为用方括号括起来的逗号分隔列表。列表中的条目必须是浮点数。不应打印任何其他文本。", "solution": "该问题要求为 Modified Cam-Clay (MCC) 模型建立并实现一个单步返回映射算法。目标是推导出一个关于塑性乘子增量 $\\Delta\\lambda$ 的单一非线性标量方程，并针对一组给定的试探应力状态进行求解。整个推导将基于一个完全隐式的后向欧拉积分方案，这是有限元法中稳健本构更新的标准方法。\n\n材料状态由平均有效应力 $p'$、偏应力 $q$ 和先期固结压力 $p_c'$ 描述。所有应力量均以千帕斯卡 ($kPa$) 为单位。材料常数为临界状态斜率 $M$、体积模量 $K$、剪切模量 $G$、压缩指数 $\\lambda$ 和回弹指数 $\\kappa$。增量步开始时的状态已知，由 $p_c'^{old}$ 定义。给定的试探应力状态 $(p'^{tr}, q^{tr})$ 是假设纯弹性增量得到的结果。\n\n塑性修正步旨在找到更新后的状态 $(p', q, p_c')$ 和塑性乘子增量 $\\Delta\\lambda \\ge 0$，以同时满足增量步结束时的所有本构关系。\n\n单步更新的基本关系如下：\n1.  **屈服条件 (一致性)：** 最终应力状态必须位于屈服面上。\n    $$f(p',q,p_c') = \\frac{q^2}{M^2} + p'(p' - p_c') = 0$$\n2.  **弹性应力-应变关系 (返回映射)：** 更新后的应力是试探应力通过塑性应变增量修正得到。\n    $$p' = p'^{tr} - K \\Delta\\varepsilon_v^p$$\n    $$q = q^{tr} - 3G \\Delta\\varepsilon_s^p$$\n3.  **相关流动法则：** 塑性应变增量与在最终状态下评估的屈服函数梯度成正比。\n    $$\\Delta\\varepsilon_v^p = \\Delta\\lambda \\frac{\\partial f}{\\partial p'} = \\Delta\\lambda (2p' - p_c')$$\n    $$\\Delta\\varepsilon_s^p = \\Delta\\lambda \\frac{\\partial f}{\\partial q} = \\Delta\\lambda \\frac{2q}{M^2}$$\n4.  **各向同性硬化法则：** 先期固结压力的演化与体积塑性应变相关。对给定的微分法则积分可得：\n    $$p_c' = p_c'^{old} \\exp\\left( \\frac{\\Delta\\varepsilon_v^p}{\\lambda - \\kappa} \\right)$$\n\n推导过程通过系统地组合这些方程来分离出 $\\Delta\\lambda$。\n\n首先，我们推导更新后的偏应力 $q$ 关于试探状态和 $\\Delta\\lambda$ 的显式表达式。将 $\\Delta\\varepsilon_s^p$ 的流动法则代入 $q$ 的返回映射方程中：\n$$q = q^{tr} - 3G \\left( \\Delta\\lambda \\frac{2q}{M^2} \\right) = q^{tr} - \\frac{6G\\Delta\\lambda}{M^2}q$$\n对 $q$ 重新整理可得：\n$$q \\left( 1 + \\frac{6G\\Delta\\lambda}{M^2} \\right) = q^{tr}$$\n$$q(\\Delta\\lambda) = \\frac{q^{tr}}{1 + \\frac{6G\\Delta\\lambda}{M^2}}$$\n\n接下来，我们通过结合一致性条件和返回映射的体积部分，建立更新后的应力分量 $p'$ 和 $q$ 之间的关系。从一致性条件中，我们可以将更新后的先期固结压力 $p_c'$ 表示为：\n$$p_c' = p' + \\frac{q^2}{M^2 p'}$$\n这假设 $p' \\neq 0$，这是物理上必需的。\n现在，我们将这个 $p_c'$ 的表达式用于体积塑性应变的流动法则：\n$$\\frac{\\partial f}{\\partial p'} = 2p' - p_c' = 2p' - \\left(p' + \\frac{q^2}{M^2 p'}\\right) = p' - \\frac{q^2}{M^2 p'}$$\n因此体积塑性应变增量为：\n$$\\Delta\\varepsilon_v^p = \\Delta\\lambda \\left(p' - \\frac{q^2}{M^2 p'}\\right)$$\n将此代入 $p'$ 的返回映射方程：\n$$p' = p'^{tr} - K \\Delta\\varepsilon_v^p = p'^{tr} - K\\Delta\\lambda \\left(p' - \\frac{q^2}{M^2 p'}\\right)$$\n重新整理此方程以求解 $p'$：\n$$p' + K\\Delta\\lambda\\, p' = p'^{tr} + \\frac{K\\Delta\\lambda\\, q^2}{M^2 p'}$$\n$$p'(1 + K\\Delta\\lambda) = p'^{tr} + \\frac{K\\Delta\\lambda\\, q^2}{M^2 p'}$$\n两边乘以 $p'$ 可得一个关于 $p'$ 的二次方程：\n$$(1 + K\\Delta\\lambda)(p')^2 - p'^{tr} p' - \\frac{K\\Delta\\lambda\\, q^2}{M^2} = 0$$\n使用二次公式求解 $p'$，并选择正根（因为在压缩情况下平均有效应力 $p'$ 为正）：\n$$p'(\\Delta\\lambda) = \\frac{p'^{tr} + \\sqrt{(p'^{tr})^2 + 4(1 + K\\Delta\\lambda) \\frac{K\\Delta\\lambda\\, q(\\Delta\\lambda)^2}{M^2}}}{2(1 + K\\Delta\\lambda)}$$\n至此，$p'$ 和 $q$ 都表示为单一未知数 $\\Delta\\lambda$ 的函数。\n\n最后，我们使用硬化法则来构建关于 $\\Delta\\lambda$ 的单一标量方程。从 $p'$ 的返回映射中，我们有体积塑性应变增量的另一种表达式：\n$$\\Delta\\varepsilon_v^p = \\frac{p'^{tr} - p'}{K}$$\n将此代入积分后的硬化法则中：\n$$p_c' = p_c'^{old} \\exp\\left( \\frac{p'^{tr} - p'}{K(\\lambda - \\kappa)} \\right)$$\n通过令我们得到的两个关于 $p_c'$ 的表达式（一个来自一致性条件，一个来自硬化法则）相等，可以获得最终方程：\n$$p' + \\frac{q^2}{M^2 p'} = p_c'^{old} \\exp\\left( \\frac{p'^{tr} - p'}{K(\\lambda - \\kappa)} \\right)$$\n这就得到了所需的一维非线性方程 $g(\\Delta\\lambda) = 0$，其中：\n$$g(\\Delta\\lambda) \\equiv p'(\\Delta\\lambda) + \\frac{q(\\Delta\\lambda)^2}{M^2 p'(\\Delta\\lambda)} - p_c'^{old} \\exp\\left( \\frac{p'^{tr} - p'(\\Delta\\lambda)}{K(\\lambda - \\kappa)} \\right) = 0$$\n这里，$p'(\\Delta\\lambda)$ 和 $q(\\Delta\\lambda)$ 是上面推导出的函数。\n\n为了对每个测试用例求解 $\\Delta\\lambda$：\n1.  首先，在试探状态下计算屈服函数 $f_{tr} = f(p'^{tr}, q^{tr}, p_c'^{old})$。\n2.  如果 $f_{tr} \\le 0$，该步是弹性的（或中性加载）。不需要塑性修正。因此，$\\Delta\\lambda = 0$。\n3.  如果 $f_{tr} > 0$，试探状态是不可接受的，需要进行塑性修正。我们必须找到方程 $g(\\Delta\\lambda) = 0$ 的根 $\\Delta\\lambda > 0$。可以使用数值求根算法，例如 Brent-Dekker 方法。对于塑性步（$f_{tr}>0$），可以证明 $g(0) = f_{tr}/p'^{tr} > 0$ 且 $\\lim_{\\Delta\\lambda \\to \\infty} g(\\Delta\\lambda) < 0$, 这保证了正根的存在。\n\n这就完成了问题的公式化。实现将涉及编写函数 $g(\\Delta\\lambda)$，并使用数值求解器在发生塑性变形的情况下找到其根。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Solves for the plastic multiplier increment in the Modified Cam-Clay model.\n    \"\"\"\n    # Material constants\n    M = 1.2\n    K = 10000.0  # kPa\n    G = 5000.0   # kPa\n    lam = 0.2    # lambda (compression index)\n    kap = 0.05   # kappa (swelling index)\n    \n    # Initial state\n    pc_old = 200.0  # kPa\n\n    # Test cases: (p_tr, q_tr) in kPa\n    test_cases = [\n        (100.0, 50.0),                          # Case A (elastic)\n        (150.0, 103.92304845413264),            # Case B (on yield surface)\n        (120.0, 200.0),                         # Case C (deviatoric plastic)\n        (220.0, 10.0),                          # Case D (nearly hydrostatic plastic)\n    ]\n\n    results = []\n    \n    # Pre-calculate some constants\n    M2 = M * M\n    lam_minus_kap = lam - kap\n\n    for p_tr, q_tr in test_cases:\n        # Step 1: Check if the trial state is elastic\n        f_tr = (q_tr**2 / M2) + p_tr * (p_tr - pc_old)\n        \n        if f_tr <= 0:\n            # Elastic or neutral loading step\n            delta_lambda = 0.0\n            results.append(delta_lambda)\n            continue\n\n        # Step 2: Plastic step, define the residual function g(delta_lambda)\n        def g(delta_lambda):\n            \"\"\"\n            The scalar nonlinear equation g(delta_lambda) = 0.\n            \"\"\"\n            if delta_lambda < 0:\n                # Physically inadmissible, return a large positive value\n                # to guide the solver.\n                return 1e12\n\n            # Calculate q based on delta_lambda\n            q = q_tr / (1.0 + 6.0 * G * delta_lambda / M2)\n\n            # Coefficients of the quadratic equation for p':\n            # A*p'^2 + B*p' + C = 0\n            A = 1.0 + K * delta_lambda\n            B = -p_tr\n            C = - (K * delta_lambda * q**2) / M2\n\n            # Solve for p' using the quadratic formula (positive root)\n            discriminant = B**2 - 4 * A * C\n            if discriminant < 0:\n                # Should not happen for this problem formulation\n                # Return sentinel to indicate error\n                return np.nan\n            \n            p = (-B + np.sqrt(discriminant)) / (2.0 * A)\n            \n            # Evaluate the two expressions for the updated preconsolidation pressure\n            pc_from_consistency = p + (q**2) / (M2 * p)\n            pc_from_hardening = pc_old * np.exp((p_tr - p) / (K * lam_minus_kap))\n            \n            return pc_from_consistency - pc_from_hardening\n\n        # Step 3: Solve g(delta_lambda) = 0 for delta_lambda > 0\n        try:\n            # Search for the root in the interval (0, 1]. This interval\n            # is typically large enough for soil mechanics problems.\n            # brentq requires the function values at the endpoints of the\n            # interval to have opposite signs. We know g(0) > 0 and g(large) < 0.\n            # Find a suitable upper bound if g(1) is not negative.\n            a = 1e-12  # A small positive number to avoid division by zero in some cases\n            b = 1.0 # Initial guess for upper bound\n            \n            # Simple bracketing: increase upper bound until g(b) is negative\n            while g(b) > 0:\n                b *= 10\n                if b > 1e6: # Safety break\n                    raise RuntimeError(\"Could not find a valid bracket for root finding.\")\n                    \n            delta_lambda = brentq(g, a, b, xtol=1e-12, rtol=1e-12)\n        except (ValueError, RuntimeError) as e:\n            # Error in root finding\n            print(f\"Error during root finding for case ({p_tr}, {q_tr}): {e}\")\n            delta_lambda = np.nan # Use NaN to indicate failure\n\n        results.append(delta_lambda)\n\n    # Final print statement in the exact required format.\n    # Convert results to string representation for printing\n    formatted_results = [f\"{res:.10f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2612470"}]}