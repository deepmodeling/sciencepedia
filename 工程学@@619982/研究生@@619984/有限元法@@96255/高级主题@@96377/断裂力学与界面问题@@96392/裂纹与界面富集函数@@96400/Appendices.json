{"hands_on_practices": [{"introduction": "在扩展有限元法（XFEM）的实现中，最基础的一步是几何判断。在应用增强函数之前，我们必须能够稳健地确定哪些单元被裂纹所切割，并相应地划分数值积分所需的区域。本练习将引导您完成一项至关重要的实践任务：仅使用节点上的水平集函数值 $\\phi(\\mathbf{x})$，通过编程实现对裂纹-单元相交的判断以及对单元内部高斯积分点的分类 [@problem_id:2551479]。这项任务是成功实现XFEM中单位分解（partition of unity）思想的基石。", "problem": "给定一个用于扩展有限元法 (XFEM) 裂纹和界面富集任务的参考单元，该参考单元仅限于二维双线性四边形有限元。该参考单元具有局部等参坐标 $(\\xi,\\eta)\\in[-1,1]^2$ 和四个局部节点，从左下角开始逆时针排序：节点 $0$ 位于 $(\\xi,\\eta)=(-1,-1)$，节点 $1$ 位于 $(\\xi,\\eta)=(+1,-1)$，节点 $2$ 位于 $(\\xi,\\eta)=(+1,+1)$，节点 $3$ 位于 $(\\xi,\\eta)=(-1,+1)$。在每个节点 $i\\in\\{0,1,2,3\\}$ 上，有一个标量水平集函数值 $\\phi_i$，表示到裂纹面的有符号距离：$\\phi_i>0$ 表示一侧，$\\phi_i<0$ 表示另一侧，而 $\\phi_i=0$ 表示界面。符号约定是任意的，但必须保持一致使用。\n\n目标：仅使用节点水平集函数值和参考单元上的标准双线性插值，您的任务是稳健地检测裂纹是否与单元相交，并构建裂纹两侧的高斯积分点列表。\n\n需遵循的原则：\n- 插值：在单元内部，水平集场 $\\phi(\\xi,\\eta)$ 是利用标准双线性四边形形函数从 $\\{\\phi_i\\}$ 插值得到。\n- 裂纹相交检测必须对退化情况具有稳健性，包括节点值在零的一个小容差 $\\tau$ 范围内，以及裂纹尖端与节点重合或沿单元边分布的情况。使用容差 $\\tau=10^{-8}$。\n- 对于数值积分，使用具有 $2\\times 2$ 个点（位于 $(\\xi,\\eta)=\\left(\\pm 1/\\sqrt{3},\\pm 1/\\sqrt{3}\\right)$）和单位权重的张量积高斯法则。将高斯点按 $(-1/\\sqrt{3},-1/\\sqrt{3})$、$(+1/\\sqrt{3},-1/\\sqrt{3})$、$(+1/\\sqrt{3},+1/\\sqrt{3})$、$(-1/\\sqrt{3},+1/\\sqrt{3})$ 的顺序索引为 $0,1,2,3$。\n- 分类：如果 $\\phi(\\xi,\\eta)>\\tau$，则高斯点属于正侧；如果 $\\phi(\\xi,\\eta)<-\\tau$，则属于负侧；如果 $|\\phi(\\xi,\\eta)|\\le \\tau$，则认为其位于界面上（在此任务中，界面点应从两侧的列表中排除）。\n\n要实现的稳健裂纹相交判定准则：\n- 令 $\\operatorname{sgn}_\\tau(\\phi_i)$ 在 $\\phi_i>\\tau$ 时为 $+1$，在 $\\phi_i<-\\tau$ 时为 $-1$，否则为 $0$。\n- 在满足以下任一条件时，声明该单元为“被切割”：\n  - 在 $\\{\\operatorname{sgn}_\\tau(\\phi_i)\\}_{i=0}^3$ 中同时出现 $+1$ 和 $-1$ 符号，或者\n  - 在 $\\{(0-1),(1-2),(2-3),(3-0)\\}$ 这几条单元边中，至少有 $2$ 条不同的边出现界面事件，其中边 $(i-j)$ 上的“界面事件”定义为 $\\operatorname{sgn}_\\tau(\\phi_i)\\cdot \\operatorname{sgn}_\\tau(\\phi_j)<0$ 或 $\\operatorname{sgn}_\\tau(\\phi_i), \\operatorname{sgn}_\\tau(\\phi_j)$ 中恰好有一个等于 $0$。\n该准则必须将裂纹尖端在顶点、界面穿过节点或沿单元边的情况视为“被切割”。\n\n输出构建：\n- 对每个单元，构建两个高斯点索引的列表：根据上述分类规则，位于正侧的索引列表和位于负侧的索引列表。与界面点对应的索引（即在高斯点处 $|\\phi|\\le \\tau$）应从两个列表中排除。\n- 此外，以整数 $1$（被切割）或 $0$（未被切割）的形式输出单元是否被切割。\n\n测试套件：\n为以下 $4$ 个单元实现您的程序，每个单元由其节点水平集数组 $[\\phi_0,\\phi_1,\\phi_2,\\phi_3]$ 指定：\n- 情况 $1$ (对角线穿越): $[-1.0,\\,1.0,\\,1.0,\\,-1.0]$。\n- 情况 $2$ (未切割): $[2.0,\\,3.0,\\,2.5,\\,2.2]$。\n- 情况 $3$ (裂纹尖端在顶点): $[0.0,\\,1.0,\\,1.0,\\,-1.0]$。\n- 情况 $4$ (掠过但切割): $[-0.2,\\,-0.1,\\,0.1,\\,0.2]$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个长度为 $4$ 的列表。列表的第 $k$ 个条目对应情况 $k$，且本身是一个形如 $[c, P, N]$ 的列表，其中 $c\\in\\{0,1\\}$ 是切割标志，$P$ 是正侧高斯点索引的列表，$N$ 是负侧高斯点索引的列表。\n- 输出必须严格以方括号括起来的逗号分隔列表形式打印，不含任何空格。例如：\"[[1,[0,2],[1,3]],[0,[0,1,2,3],[]],...]\"。", "solution": "问题陈述具有科学依据、提法恰当且客观。它为在双线性四边形有限元内检测裂纹相交以及相对于裂纹对高斯积分点进行分类提供了一套完整且一致的规则。其中引用的原理——水平集表示法、使用双线性形函数的等参映射以及高斯求积——是扩展有限元法 (XFEM) 的基础。因此，我将直接着手构建解决方案。\n\n问题的核心在于在参考单元域 $(\\xi, \\eta) \\in [-1, 1]^2$ 内计算一个标量水平集场 $\\phi(\\xi, \\eta)$。该场是根据给定的节点值 $\\{\\phi_0, \\phi_1, \\phi_2, \\phi_3\\}$，使用标准双线性形函数 $N_i(\\xi, \\eta)$ 插值得到的：\n$$\n\\phi(\\xi, \\eta) = \\sum_{i=0}^{3} N_i(\\xi, \\eta) \\phi_i\n$$\n这四个形函数对应于从角点 $(\\xi, \\eta) = (-1, -1)$ 开始逆时针排序的节点 $0, 1, 2, 3$：\n\\begin{itemize}\n    \\item $N_0(\\xi, \\eta) = \\frac{1}{4}(1-\\xi)(1-\\eta)$\n    \\item $N_1(\\xi, \\eta) = \\frac{1}{4}(1+\\xi)(1-\\eta)$\n    \\item $N_2(\\xi, \\eta) = \\frac{1}{4}(1+\\xi)(1+\\eta)$\n    \\item $N_3(\\xi, \\eta) = \\frac{1}{4}(1-\\xi)(1+\\eta)$\n\\end{itemize}\n\n对于每个以节点值数组 $[\\phi_0, \\phi_1, \\phi_2, \\phi_3]$ 给出的测试用例，其处理过程分为两个主要阶段：裂纹相交检测和高斯点分类。\n\n**1. 裂纹相交检测**\n\n此阶段判断单元是否被由 $\\phi(\\xi, \\eta)=0$ 定义的裂纹界面“切割”。为此指定了一个稳健的判定准则，该准则能处理诸如裂纹尖端位于节点或沿单元边等退化情况。设零值容差 $\\tau = 10^{-8}$。\n\n首先，我们为节点值 $\\phi_i$ 定义一个带过滤的符号函数：\n$$\n\\operatorname{sgn}_\\tau(\\phi_i) = \\begin{cases} +1 & \\text{if } \\phi_i > \\tau \\\\ -1 & \\text{if } \\phi_i < -\\tau \\\\ 0 & \\text{if } |\\phi_i| \\le \\tau \\end{cases}\n$$\n如果满足以下两个条件中至少一个，则该单元被声明为“被切割”（输出标志 $c=1$）：\n\na) 节点符号集 $\\{\\operatorname{sgn}_\\tau(\\phi_i)\\}_{i=0}^3$ 中同时包含 $+1$ 和 $-1$。这是裂纹清晰地分割单元节点的标准情况。\n\nb) 单元的边（$(0-1)$, $(1-2)$, $(2-3)$, 和 $(3-0)$）中至少有两条不同的边出现“界面事件”。边 $(i-j)$ 上的界面事件是指 $\\operatorname{sgn}_\\tau(\\phi_i) \\cdot \\operatorname{sgn}_\\tau(\\phi_j) < 0$（符号改变）或者 $\\operatorname{sgn}_\\tau(\\phi_i)$ 与 $\\operatorname{sgn}_\\tau(\\phi_j)$ 中恰好有一个为零。这第二个条件能稳健地检测到位于节点上的裂纹尖端，否则条件(a)可能会漏掉这种情况。\n\n如果两个条件都不满足，则单元未被切割 ($c=0$)。\n\n**2. 高斯点分类**\n\n此阶段根据标准 $2 \\times 2$ 高斯求积点相对于裂纹的位置对其进行划分。四个高斯点索引为 $0, 1, 2, 3$，对应局部坐标，其中 $\\gamma = 1/\\sqrt{3}$：\n\\begin{itemize}\n    \\item 点 $0$: $(\\xi_0, \\eta_0) = (-\\gamma, -\\gamma)$\n    \\item 点 $1$: $(\\xi_1, \\eta_1) = (+\\gamma, -\\gamma)$\n    \\item 点 $2$: $(\\xi_2, \\eta_2) = (+\\gamma, +\\gamma)$\n    \\item 点 $3$: $(\\xi_3, \\eta_3) = (-\\gamma, +\\gamma)$\n\\end{itemize}\n\n对于每个高斯点 $k \\in \\{0, 1, 2, 3\\}$，通过双线性插值公式计算其水平集值 $\\phi_k = \\phi(\\xi_k, \\eta_k)$。然后根据以下分类规则，将该点的索引添加到两个列表之一，$P$（正侧）或 $N$（负侧）：\n\\begin{itemize}\n    \\item 如果 $\\phi_k > \\tau$，则将索引 $k$ 添加到列表 $P$。\n    \\item 如果 $\\phi_k < -\\tau$，则将索引 $k$ 添加到列表 $N$。\n    \\item 如果 $|\\phi_k| \\le \\tau$，则该点位于界面上，并从两个列表中排除。\n\\end{itemize}\n\n每个测试用例的最终输出是一个列表，包含切割标志 $c$、正侧高斯点索引列表 $P$ 以及负侧高斯点索引列表 $N$。以下程序实现了这一逻辑。", "answer": "```python\nimport numpy as np\n\ndef format_list_no_spaces(data):\n    \"\"\"\n    Recursively formats a list into a string representation without spaces.\n    This is required to match the exact output format string.\n    \"\"\"\n    if isinstance(data, list):\n        return f\"[{','.join(format_list_no_spaces(item) for item in data)}]\"\n    else:\n        return str(data)\n\ndef solve():\n    \"\"\"\n    Solves the XFEM enrichment problem for the given test cases.\n    \"\"\"\n    # Test cases defined as lists of nodal level set values [phi_0, phi_1, phi_2, phi_3]\n    test_cases = [\n        [-1.0, 1.0, 1.0, -1.0],   # Case 1: diagonal crossing\n        [2.0, 3.0, 2.5, 2.2],     # Case 2: no cut\n        [0.0, 1.0, 1.0, -1.0],    # Case 3: crack tip at a vertex\n        [-0.2, -0.1, 0.1, 0.2]    # Case 4: grazing but cutting\n    ]\n\n    # Tolerance for zero-checks\n    tau = 1.0e-8\n\n    # Gauss point coordinates for a 2x2 rule\n    gamma = 1.0 / np.sqrt(3.0)\n    gp_coords = [\n        (-gamma, -gamma),  # GP 0\n        (gamma, -gamma),   # GP 1\n        (gamma, gamma),    # GP 2\n        (-gamma, gamma)    # GP 3\n    ]\n    \n    # Bilinear shape functions, evaluated at (xi, eta)\n    def shape_functions(xi, eta):\n        return np.array([\n            0.25 * (1.0 - xi) * (1.0 - eta),  # N0\n            0.25 * (1.0 + xi) * (1.0 - eta),  # N1\n            0.25 * (1.0 + xi) * (1.0 + eta),  # N2\n            0.25 * (1.0 - xi) * (1.0 + eta)   # N3\n        ])\n\n    # Filtered sign function\n    def sgn_tau(x, tol):\n        if x > tol:\n            return 1\n        elif x < -tol:\n            return -1\n        else:\n            return 0\n\n    results = []\n    for phi_nodes in test_cases:\n        phi_nodes = np.array(phi_nodes)\n        \n        # --- 1. Crack Intersection Detection ---\n        is_cut = 0\n        phi_signs = [sgn_tau(p, tau) for p in phi_nodes]\n        \n        # Condition (a): Mixed signs at nodes\n        if 1 in phi_signs and -1 in phi_signs:\n            is_cut = 1\n        else:\n            # Condition (b): At least 2 interface events on edges\n            edges = [(0, 1), (1, 2), (2, 3), (3, 0)]\n            interface_event_count = 0\n            for i, j in edges:\n                s_i, s_j = phi_signs[i], phi_signs[j]\n                # Event: sign change or exactly one node on interface\n                if (s_i * s_j < 0) or ((s_i == 0) != (s_j == 0)):\n                    interface_event_count += 1\n            \n            if interface_event_count >= 2:\n                is_cut = 1\n\n        # --- 2. Gauss Point Classification ---\n        P, N = [], []\n        for k in range(len(gp_coords)):\n            xi, eta = gp_coords[k]\n            # Interpolate level set value at Gauss point\n            N_vals = shape_functions(xi, eta)\n            phi_gp = np.dot(N_vals, phi_nodes)\n            \n            # Classify the point\n            if phi_gp > tau:\n                P.append(k)\n            elif phi_gp < -tau:\n                N.append(k)\n        \n        results.append([is_cut, P, N])\n\n    # --- 3. Format and Print Output ---\n    formatted_results = [format_list_no_spaces(r) for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n\n```", "id": "2551479"}, {"introduction": "在实现了基本的几何处理逻辑之后，我们如何验证有限元方法的正确性？斑块检验（Patch Test）是一项基本而强大的验证工具，它确保我们所选的近似空间（包括标准形函数和增强函数）能够精确地再现一个已知的简单解。本练习要求您为一个包含强间断的区域设计一个斑块检验，并确定保证该检验能够通过所需的最低数值积分精度 [@problem_id:2551501]。完成这个练习有助于深刻理解保证XFEM方法收敛性和准确性的核心条件。", "problem": "考虑在一个有界多边形域 $\\Omega \\subset \\mathbb{R}^{2}$ 上的小应变线性弹性问题，该域中存在一条直裂纹 $\\Gamma_{c}$，它将 $\\Omega$ 划分为两个不相交的开子域 $\\Omega^{+}$ 和 $\\Omega^{-}$。该裂纹由符号距离水平集函数 $\\phi(\\mathbf{x}) = \\mathbf{n}\\cdot \\mathbf{x} - c$ 表示，其中 $\\mathbf{n}$ 为单位法向量，c 为常数 $c \\in \\mathbb{R}$。因此，当 $\\mathbf{x} \\in \\Omega^{+}$ 时，$H(\\phi(\\mathbf{x})) = +1$，当 $\\mathbf{x} \\in \\Omega^{-}$ 时，$H(\\phi(\\mathbf{x})) = -1$，其中 $H$ 表示 Heaviside 函数。假设材料的刚度张量 $\\mathbf{C}$ 是均匀、各向同性和线性弹性的，并且不存在体力。在斑块检验中需要再现的精确位移场是分段仿射的，\n$$\n\\mathbf{u}^{\\star}(\\mathbf{x}) = \n\\begin{cases}\n\\mathbf{A}^{+}\\mathbf{x} + \\mathbf{b}^{+}, & \\mathbf{x} \\in \\Omega^{+},\\\\\n\\mathbf{A}^{-}\\mathbf{x} + \\mathbf{b}^{-}, & \\mathbf{x} \\in \\Omega^{-},\n\\end{cases}\n$$\n其中 $\\mathbf{A}^{\\pm} \\in \\mathbb{R}^{2 \\times 2}$ 为常数矩阵，$\\mathbf{b}^{\\pm} \\in \\mathbb{R}^{2}$ 为常数向量。裂纹面是无牵引力的，并且在 $\\partial \\Omega$ 上的 Dirichlet 边界条件被设定为等于 $\\mathbf{u}^{\\star}$。\n\n使用一片协调的 $P_{1}$（线性）三角形有限元对 $\\Omega$ 进行离散化，其标准节点形函数为 $\\{N_{i}\\}$。使用扩展有限元方法（XFEM）的单位分解框架和 Heaviside 增强：对支集被 $\\Gamma_{c}$ 切割的节点，使用位移增强函数 $H(\\phi(\\mathbf{x})) - H(\\phi(\\mathbf{x}_{j}))$ 进行精确增强。于是，离散试探空间为\n$$\n\\mathbf{u}_{h}(\\mathbf{x}) = \\sum_{i \\in \\mathcal{I}} N_{i}(\\mathbf{x})\\, \\mathbf{d}_{i} \\;+\\; \\sum_{j \\in \\mathcal{J}} N_{j}(\\mathbf{x})\\, \\mathbf{a}_{j}\\,\\big(H(\\phi(\\mathbf{x})) - H(\\phi(\\mathbf{x}_{j}))\\big),\n$$\n其中 $\\mathcal{I}$ 是全节点集，$\\mathcal{J} \\subset \\mathcal{I}$ 是增强节点集，$\\mathbf{d}_{i}, \\mathbf{a}_{j} \\in \\mathbb{R}^{2}$ 分别是标准和增强节点未知量。弱形式使用双线性形式 $a(\\mathbf{u},\\mathbf{v}) = \\int_{\\Omega} \\boldsymbol{\\varepsilon}(\\mathbf{v})^{\\mathsf{T}} \\mathbf{C}\\, \\boldsymbol{\\varepsilon}(\\mathbf{u}) \\, \\mathrm{d}\\Omega$，其中 $\\boldsymbol{\\varepsilon}(\\cdot)$ 是小应变算子。\n\n设计一个强不连续斑块检验，用以验证 $\\mathbf{u}_{h}$ 能精确再现 $\\mathbf{u}^{\\star}$，并指定足以精确积分刚度贡献的求积法。特别地，请从第一性原理出发，论证为何 $\\mathbf{u}_{h}$ 能够表示 $\\mathbf{u}^{\\star}$，并确定在每个被切割的单元上，当该单元被直裂纹段划分为两个子域 $\\Omega^{+}$ 和 $\\Omega^{-}$ 时，单元刚度矩阵被积函数的多项式次数。然后，考虑对被切割单元采用以下求积策略：通过将直裂纹段作为内边插入，将每个被切割的三角形细分为两个子三角形，并对每个得到的子三角形应用标准 Gaussian 求积法。对于未被切割的单元，使用标准三角形 Gaussian 求积法。\n\n令 $n_{\\ast}$ 表示在该策略下，保证单元刚度贡献能被精确计算的每个（子）三角形所需的高斯点的最小整数数量。确定 $n_{\\ast}$。最终答案只需提供 $n_{\\ast}$ 的值。无需四舍五入，也无需单位。", "solution": "对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n- **域和裂纹**：一个有界多边形域 $\\Omega \\subset \\mathbb{R}^{2}$，带有一条直裂纹 $\\Gamma_{c}$，将 $\\Omega$ 划分为 $\\Omega^{+}$ 和 $\\Omega^{-}$。\n- **水平集函数**：$\\phi(\\mathbf{x}) = \\mathbf{n}\\cdot \\mathbf{x} - c$，其中 $\\mathbf{n}$ 是单位法向量，$c \\in \\mathbb{R}$。\n- **Heaviside 函数定义**：当 $\\mathbf{x} \\in \\Omega^{+}$ 时，$H(\\phi(\\mathbf{x})) = +1$；当 $\\mathbf{x} \\in \\Omega^{-}$ 时，$H(\\phi(\\mathbf{x})) = -1$。\n- **材料属性**：均匀、各向同性、线性弹性的刚度张量 $\\mathbf{C}$。\n- **载荷**：无体力。\n- **精确位移场**：\n$$\n\\mathbf{u}^{\\star}(\\mathbf{x}) = \n\\begin{cases}\n\\mathbf{A}^{+}\\mathbf{x} + \\mathbf{b}^{+}, & \\mathbf{x} \\in \\Omega^{+},\\\\\n\\mathbf{A}^{-}\\mathbf{x} + \\mathbf{b}^{-}, & \\mathbf{x} \\in \\Omega^{-},\n\\end{cases}\n$$\n其中 $\\mathbf{A}^{\\pm} \\in \\mathbb{R}^{2 \\times 2}$ 是常数矩阵，$\\mathbf{b}^{\\pm} \\in \\mathbb{R}^{2}$ 是常数向量。\n- **边界条件**：$\\Gamma_{c}$ 上无牵引力。$\\partial \\Omega$ 上的 Dirichlet 边界条件为 $\\mathbf{u}|_{\\partial \\Omega} = \\mathbf{u}^{\\star}$。\n- **离散化**：协调的 $P_{1}$（线性）三角形有限元斑块，节点基函数为 $\\{N_{i}\\}$。\n- **XFEM 近似**：离散试探空间为\n$$\n\\mathbf{u}_{h}(\\mathbf{x}) = \\sum_{i \\in \\mathcal{I}} N_{i}(\\mathbf{x})\\, \\mathbf{d}_{i} \\;+\\; \\sum_{j \\in \\mathcal{J}} N_{j}(\\mathbf{x})\\, \\mathbf{a}_{j}\\,\\big(H(\\phi(\\mathbf{x})) - H(\\phi(\\mathbf{x}_{j}))\\big)\n$$\n其中 $\\mathcal{I}$ 是全节点集，$\\mathcal{J} \\subset \\mathcal{I}$ 是增强节点集（其支集被 $\\Gamma_{c}$ 切割的节点），$\\mathbf{d}_{i}, \\mathbf{a}_{j} \\in \\mathbb{R}^{2}$ 是节点未知向量。\n- **弱形式**：双线性形式为 $a(\\mathbf{u},\\mathbf{v}) = \\int_{\\Omega} \\boldsymbol{\\varepsilon}(\\mathbf{v})^{\\mathsf{T}} \\mathbf{C}\\, \\boldsymbol{\\varepsilon}(\\mathbf{u}) \\, \\mathrm{d}\\Omega$，其中 $\\boldsymbol{\\varepsilon}(\\cdot)$ 是小应变算子。\n- **被切割单元的求积策略**：每个被切割的三角形由裂纹段细分为多个子三角形。在每个子三角形上应用标准 Gaussian 求积法。\n- **目标**：确定 $n_{\\ast}$，即为精确积分刚度矩阵贡献，每个子三角形所需的最小整数高斯点数。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据、是适定的且客观的。它描述了一个应用于强不连续（裂纹）问题的扩展有限元方法（XFEM）的标准斑块检验。其公式化表述与计算力学领域的既有文献一致。术语定义精确，目标是一个与数值实现相关的、特定的、可计算的量。未发现任何会妨碍求解的矛盾或信息缺失。问题有效。\n\n**步骤 3：结论与行动**\n问题有效。开始求解。\n\n**解**\n目标是确定在一个旨在再现分段仿射位移场的斑块检验中，为精确积分单元刚度矩阵所需的求积点最小数量 $n_{\\ast}$。如果解析解能被试探函数空间精确表示，即 $\\mathbf{u}^{\\star} \\in \\{\\mathbf{u}_h\\}$，并且双线性形式被精确积分，则通过 Galerkin 正交性可以保证斑块检验通过。\n\n首先，我们验证 $\\mathbf{u}^{\\star}$ 在 XFEM 空间中的可表示性。分段仿射解 $\\mathbf{u}^{\\star}$ 可以使用问题中定义的 Heaviside 函数 $H(\\phi(\\mathbf{x}))$ 进行全局表示。让我们定义一个平均场和一个跳跃场：\n$$\n\\mathbf{u}_{avg}(\\mathbf{x}) = \\frac{1}{2}\\big((\\mathbf{A}^{+}+\\mathbf{A}^{-})\\mathbf{x} + (\\mathbf{b}^{+}+\\mathbf{b}^{-})\\big)\n$$\n$$\n\\mathbf{u}_{jump}(\\mathbf{x}) = \\frac{1}{2}\\big((\\mathbf{A}^{+}-\\mathbf{A}^{-})\\mathbf{x} + (\\mathbf{b}^{+}-\\mathbf{b}^{-})\\big)\n$$\n$\\mathbf{u}_{avg}(\\mathbf{x})$ 和 $\\mathbf{u}_{jump}(\\mathbf{x})$ 都是仿射函数。精确解于是可以写为：\n$$\n\\mathbf{u}^{\\star}(\\mathbf{x}) = \\mathbf{u}_{avg}(\\mathbf{x}) + H(\\phi(\\mathbf{x}))\\mathbf{u}_{jump}(\\mathbf{x})\n$$\nXFEM 近似为：\n$$\n\\mathbf{u}_{h}(\\mathbf{x}) = \\sum_{i \\in \\mathcal{I}} N_{i}(\\mathbf{x})\\, \\mathbf{d}_{i} + \\sum_{j \\in \\mathcal{J}} N_{j}(\\mathbf{x})\\, \\mathbf{a}_{j}\\, H(\\phi(\\mathbf{x})) - \\sum_{j \\in \\mathcal{J}} N_{j}(\\mathbf{x})\\, \\mathbf{a}_{j}\\, H(\\phi(\\mathbf{x}_{j}))\n$$\n这可以被重排为 $\\mathbf{P}(\\mathbf{x}) + H(\\phi(\\mathbf{x}))\\mathbf{Q}(\\mathbf{x})$ 的形式，其中：\n$$\n\\mathbf{P}(\\mathbf{x}) = \\sum_{i \\in \\mathcal{I}} N_{i}(\\mathbf{x})\\, \\mathbf{d}_{i} - \\sum_{j \\in \\mathcal{J}} N_{j}(\\mathbf{x})\\, \\mathbf{a}_{j}\\, H(\\phi(\\mathbf{x}_{j}))\n$$\n$$\n\\mathbf{Q}(\\mathbf{x}) = \\sum_{j \\in \\mathcal{J}} N_{j}(\\mathbf{x})\\, \\mathbf{a}_{j}\n$$\n由于基函数 $N_{i}(\\mathbf{x})$ 是线性的（$P_1$ 单元），且求和构成了线性组合，因此 $\\mathbf{P}(\\mathbf{x})$ 和 $\\mathbf{Q}(\\mathbf{x})$ 都是其分量为线性多项式的向量场。通过适当地选择节点自由度 $\\mathbf{d}_i$ 和 $\\mathbf{a}_j$，可以张成线性多项式的全空间。由于 $\\mathbf{u}_{avg}(\\mathbf{x})$ 和 $\\mathbf{u}_{jump}(\\mathbf{x})$ 是仿射函数（线性多项式），因此存在系数集 $\\{\\mathbf{d}_i, \\mathbf{a}_j\\}$，使得 $\\mathbf{P}(\\mathbf{x}) = \\mathbf{u}_{avg}(\\mathbf{x})$ 和 $\\mathbf{Q}(\\mathbf{x}) = \\mathbf{u}_{jump}(\\mathbf{x})$。从而，$\\mathbf{u}^{\\star}$ 可由 $\\mathbf{u}_{h}$ 表示。\n\n为使斑块检验通过，刚度矩阵必须被精确计算。单元刚度矩阵的分量由形如 $k_{ab}^{el} = a(\\boldsymbol{\\psi}_a, \\boldsymbol{\\psi}_b)|_{K}$ 的积分给出，其中 $\\boldsymbol{\\psi}_a, \\boldsymbol{\\psi}_b$ 是向量值基函数，K 是一个单元。在 K 上的被积函数是 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_b)^{\\mathsf{T}} \\mathbf{C}\\, \\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_a)$。由于 $\\mathbf{C}$ 是一个常数张量，被积函数的多项式次数由应变场 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_a)$ 和 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_b)$ 各分量的乘积决定。\n\n让我们分析在一个被切割单元 K 上，一个一般基函数 $\\boldsymbol{\\psi}$ 的应变场 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi})$。基函数有两种类型：\n1.  标准基函数：$\\boldsymbol{\\psi}_i(\\mathbf{x}) = N_i(\\mathbf{x}) \\mathbf{e}_k$，其中 $\\mathbf{e}_k$ 是坐标基向量。由于对于 $P_1$ 单元，$N_i$ 是一个线性多项式，其梯度 $\\nabla N_i$ 在 K 上是一个常向量。因此，应变张量 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_i)$ 在整个单元 K 上是常数。\n2.  增强基函数：$\\boldsymbol{\\psi}_j(\\mathbf{x}) = N_j(\\mathbf{x}) E_j(\\mathbf{x}) \\mathbf{e}_k$，其中 $E_j(\\mathbf{x}) = H(\\phi(\\mathbf{x})) - H(\\phi(\\mathbf{x}_j))$ 是增强函数。\n\n增强函数的梯度为 $\\nabla E_j(\\mathbf{x}) = \\nabla H(\\phi(\\mathbf{x})) = \\delta(\\phi(\\mathbf{x}))\\mathbf{n}$，其中 $\\delta$ 是 Dirac delta 函数。在 XFEM 中，这种奇异性通过按照求积策略的规定，在子域 $\\Omega^+$ 和 $\\Omega^-$ 上分别执行积分来处理。\n\n考虑一个被切割的单元 K。它被划分为 $K^+ = K \\cap \\Omega^+$ 和 $K^- = K \\cap \\Omega^-$。\n- 在子域 $K^+$ 上, $\\phi(\\mathbf{x}) > 0$，因此 $H(\\phi(\\mathbf{x})) = +1$。增强函数变为 $E_j(\\mathbf{x}) = 1 - H(\\phi(\\mathbf{x}_j))$，这在 $K^+$ 上是一个常数值。\n- 在子域 $K^-$ 上, $\\phi(\\mathbf{x}) < 0$，因此 $H(\\phi(\\mathbf{x})) = -1$。增强函数变为 $E_j(\\mathbf{x}) = -1 - H(\\phi(\\mathbf{x}_j))$，这在 $K^-$ 上也是一个常数值。\n\n远离裂纹处，增强基函数 $\\boldsymbol{\\psi}_j$ 的梯度为：\n$$\n\\nabla \\boldsymbol{\\psi}_j(\\mathbf{x}) = \\nabla(N_j E_j)\\otimes \\mathbf{e}_k = (\\nabla N_j \\otimes \\mathbf{e}_k) E_j + (N_j \\nabla E_j \\otimes \\mathbf{e}_k)\n$$\n在 $K^+$ 或 $K^-$ 上分别来看，$\\nabla E_j = \\mathbf{0}$，且 $E_j$ 是常数。由于对于 $P_1$ 单元，$\\nabla N_j$ 是一个常向量，因此梯度 $\\nabla \\boldsymbol{\\psi}_j$ 在 $K^+$ 上是一个常数张量场，在 $K^-$ 上是另一个（通常不同的）常数张量场。\n\n因此，对于任何基函数 $\\boldsymbol{\\psi}$（标准的或增强的），其相应的应变张量 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi})$ 在被切割的单元 K 上是分段常数，其常数值取决于该点是在 $K^+$ 还是 $K^-$ 中。\n\n刚度矩阵的被积函数 $\\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_b)^{\\mathsf{T}} \\mathbf{C}\\, \\boldsymbol{\\varepsilon}(\\boldsymbol{\\psi}_a)$ 因此是常数的乘积。这意味着被积函数本身在 $K^+$ 上是一个常数函数，在 $K^-$ 上是另一个不同的常数函数。常数函数是 0 次多项式。\n\n求积策略是将 K 细分为多个子三角形，每个子三角形完全位于 $K^+$ 或 $K^-$ 内部。在每个子三角形上，被积函数是一个常数，即 0 次多项式。\n\n为了在一个三角形上精确地积分一个 d 次多项式，Gaussian 求积规则必须具有至少为 d 的精度阶。问题要求的是最小点数 $n_{\\ast}$。\n- 单点法则（在形心处求值）的精度阶为 $1$。它可以精确积分任何线性多项式。\n- 三点法则的精度阶为 $2$。\n\n为了精确积分一个次数为 $d=0$ 的多项式，精度阶为 0 的法则就足够了。精度阶为 1 的单点法则将是精确的。点数少于 1 的求积法则是不可行的。因此，每个子三角形所需的最小高斯点数为 $1$。\n\n因此，$n_{\\ast}=1$。这也适用于未被切割的单元，因为在未被切割的单元上，试探函数的应变场是常数，从而使得刚度矩阵的被积函数也是常数。", "answer": "$$\\boxed{1}$$", "id": "2551501"}, {"introduction": "扩展有限元法的一大优势是能够通过引入特殊的分支增强函数（Branch Enrichment Functions）来有效捕捉裂纹尖端的应力奇异性。然而，对这些奇异函数进行精确的数值积分在计算上是昂贵的，而积分不足则可能破坏刚度矩阵的对称性和正定性，导致数值解的崩溃。本练习通过一个假设情景，让您亲手分析积分不足如何引入伪模式（spurious mode）并破坏刚度矩阵的正定性，并进一步推导出一个稳定化方案以恢复其良好性质 [@problem_id:2551528]。这对于开发稳健的断裂力学模拟程序至关重要。", "problem": "考虑一个带有无牵引力裂纹的二维小应变线性弹性固体。设离散化通过扩展有限元法 (XFEM) 执行，使用单位分解框架和近尖端分支富集函数。记四阶弹性张量 $\\mathbb{C}$ 为一个对称正定的本构映射，双线性形式为 $a(u,v)=\\int_{\\Omega} \\varepsilon(v):\\mathbb{C}:\\varepsilon(u)\\,\\mathrm{d}\\Omega$，其中 $\\varepsilon(\\,\\cdot\\,)$ 是线性化应变算子，$\\Omega$ 是包含裂纹尖端的单元域。设富集自由度向量为 $d_{b}\\in\\mathbb{R}^{n_{b}}$，并将单元刚度矩阵的精确富集子块定义为\n$$\nS \\;=\\; \\int_{\\Omega} B_{b}^{\\mathsf{T}}\\,\\mathbb{C}\\,B_{b}\\,\\mathrm{d}\\Omega,\n$$\n其中 $B_{b}$ 是与分支富集形函数相关的应变-位移矩阵。根据其构造，$S$ 是对称正定的。\n\n假设富集项的单元级数值积分采用了一种无法解析裂纹尖端奇异场的降阶积分法，从而得到一个刚度子块近似\n$$\n\\widetilde{K}_{e} \\;=\\; S \\;-\\; \\beta\\, v\\,v^{\\mathsf{T}},\n$$\n其中 $\\beta>0$ 和 $v\\in\\mathbb{R}^{n_{b}}\\setminus\\{0\\}$ 分别表示由积分亏量引起的主导伪模式的大小和方向。假设降阶积分足够严重，以至于\n$$\n\\beta\\, v^{\\mathsf{T}} S^{-1} v \\;>\\; 1.\n$$\n\n1) 仅使用 $\\mathbb{C}$ 的对称性和 $S$作为伽辽金刚度块的定义，分析这种降阶积分如何影响 $\\widetilde{K}_{e}$ 的对称性和正定性。\n\n2) 作为一种补救措施，考虑一种基于一致性的稳定化方法，该方法通过添加精确被积函数刚度的倍数来重新缩放富集块，从而得到稳定化的子块\n$$\n\\widehat{K}_{e}(\\delta) \\;=\\; (1+\\delta)\\,S \\;-\\; \\beta\\, v\\,v^{\\mathsf{T}},\n$$\n其中 $\\delta>0$ 是一个标量稳定化参数。从第一性原理出发，推导使 $\\widehat{K}_{e}(\\delta)$ 成为正定的最小 $\\delta$。你的最终答案必须是仅含 $\\beta$ 和 $v^{\\mathsf{T}} S^{-1} v$ 的单个闭式解析表达式。不要引入任何额外的参数或数值。提供的表达式不带单位。", "solution": "所述问题具有科学依据，是自洽且适定的。它展示了计算力学中的一个标准场景，涉及在扩展有限元法 (XFEM) 背景下由降阶积分引起的数值不稳定性。参数和条件都经过了形式化定义，从而可以进行严格的数学分析。该问题是有效的。\n\n我们将按顺序解决问题的两个部分。\n\n第1部分：$\\widetilde{K}_{e}$ 的对称性和正定性分析。\n\n降阶积分的刚度子块定义为 $\\widetilde{K}_{e} = S - \\beta\\, v\\,v^{\\mathsf{T}}$。矩阵 $S$ 是单元刚度矩阵的精确富集子块。根据其作为由对称双线性形式（源于对称弹性张量 $\\mathbb{C}$）构造的伽辽金刚度矩阵，$S$ 是对称的。\n\n首先，我们分析 $\\widetilde{K}_{e}$ 的对称性。我们计算其转置：\n$$\n\\widetilde{K}_{e}^{\\mathsf{T}} \\;=\\; (S - \\beta\\, v\\,v^{\\mathsf{T}})^{\\mathsf{T}} \\;=\\; S^{\\mathsf{T}} - (\\beta\\, v\\,v^{\\mathsf{T}})^{\\mathsf{T}}\n$$\n由于 $S$ 是对称的，所以 $S^{\\mathsf{T}} = S$。项 $\\beta$ 是一个标量。外积 $v\\,v^{\\mathsf{T}}$ 的转置是：\n$$\n(v\\,v^{\\mathsf{T}})^{\\mathsf{T}} \\;=\\; (v^{\\mathsf{T}})^{\\mathsf{T}}v^{\\mathsf{T}} \\;=\\; v\\,v^{\\mathsf{T}}\n$$\n这表明 $v\\,v^{\\mathsf{T}}$ 是一个对称矩阵。因此，$\\widetilde{K}_{e}^{\\mathsf{T}} = S - \\beta\\, v\\,v^{\\mathsf{T}} = \\widetilde{K}_{e}$。无论是否进行降阶积分，矩阵 $\\widetilde{K}_{e}$ 都是对称的。对称性不受影响。\n\n接下来，我们分析 $\\widetilde{K}_{e}$ 的正定性。如果对于所有非零向量 $x$，二次型 $x^{\\mathsf{T}}Ax > 0$ 成立，则对称矩阵 $A$ 是正定的。对于 $\\widetilde{K}_{e}$，此条件为：\n$$\nx^{\\mathsf{T}}\\widetilde{K}_{e}x \\;=\\; x^{\\mathsf{T}}(S - \\beta\\, v\\,v^{\\mathsf{T}})x \\;=\\; x^{\\mathsf{T}}Sx - \\beta\\,x^{\\mathsf{T}}v v^{\\mathsf{T}}x > 0\n$$\n项 $v^{\\mathsf{T}}x$ 是一个标量，因此 $x^{\\mathsf{T}}v v^{\\mathsf{T}}x = (x^{\\mathsf{T}}v)(v^{\\mathsf{T}}x) = (v^{\\mathsf{T}}x)^2$。该条件变为：\n$$\nx^{\\mathsf{T}}Sx - \\beta\\,(v^{\\mathsf{T}}x)^2 > 0\n$$\n问题指出 $S$ 是正定的，因此对于任何 $x \\neq 0$，$x^{\\mathsf{T}}Sx > 0$。然而，由于 $\\beta > 0$，第二项 $-\\beta\\,(v^{\\mathsf{T}}x)^2$ 是非正的。我们必须检查对于某个 $x \\neq 0$，其和是否会变为非正。给定条件 $\\beta\\, v^{\\mathsf{T}} S^{-1} v > 1$。这表明我们应该检验一个与 $S^{-1}v$ 相关的特定向量。\n\n我们选择测试向量 $x_0 = S^{-1}v$。由于 $S$ 可逆且 $v \\neq 0$，因此 $x_0 \\neq 0$。将 $x_0$ 代入二次型：\n$$\nx_0^{\\mathsf{T}}\\widetilde{K}_{e}x_0 \\;=\\; (S^{-1}v)^{\\mathsf{T}}S(S^{-1}v) - \\beta\\,((v^{\\mathsf{T}}S^{-1})v)^2\n$$\n由于 $S$ 是对称的，其逆矩阵 $S^{-1}$ 也是对称的，因此 $(S^{-1})^{\\mathsf{T}} = S^{-1}$。\n$$\nx_0^{\\mathsf{T}}\\widetilde{K}_{e}x_0 \\;=\\; v^{\\mathsf{T}}S^{-1}SS^{-1}v - \\beta\\,(v^{\\mathsf{T}}S^{-1}v)^2\n$$\n$$\nx_0^{\\mathsf{T}}\\widetilde{K}_{e}x_0 \\;=\\; v^{\\mathsf{T}}S^{-1}v - \\beta\\,(v^{\\mathsf{T}}S^{-1}v)^2\n$$\n将项 $v^{\\mathsf{T}}S^{-1}v$ 因子分解出来：\n$$\nx_0^{\\mathsf{T}}\\widetilde{K}_{e}x_0 \\;=\\; (v^{\\mathsf{T}}S^{-1}v) (1 - \\beta\\, v^{\\mathsf{T}}S^{-1}v)\n$$\n由于 $S$ 是正定的，所以 $S^{-1}$ 也是正定的。因此，对于 $v \\neq 0$，二次型 $v^{\\mathsf{T}}S^{-1}v$ 是严格为正的。该表达式的符号由第二个因子 $(1 - \\beta\\, v^{\\mathsf{T}}S^{-1}v)$ 的符号决定。\n根据问题的假设，我们有 $\\beta\\, v^{\\mathsf{T}} S^{-1} v > 1$。这意味着 $1 - \\beta\\, v^{\\mathsf{T}} S^{-1} v < 0$。\n因此，对于特定的非零向量 $x_0 = S^{-1}v$，二次型 $x_0^{\\mathsf{T}}\\widetilde{K}_{e}x_0$ 是一个正项和一个负项的乘积，所以结果为负。\n$$\nx_0^{\\mathsf{T}}\\widetilde{K}_{e}x_0 < 0\n$$\n既然我们找到了一个使二次型为负的向量，矩阵 $\\widetilde{K}_{e}$ 就不是正定的。它是不定的。降阶积分破坏了刚度矩阵的正定性，这对于静力分析来说是一个灾难性的失败。\n\n第2部分：最小稳定化参数 $\\delta$ 的推导。\n\n稳定化的子块由 $\\widehat{K}_{e}(\\delta) = (1+\\delta)\\,S - \\beta\\, v\\,v^{\\mathsf{T}}$ 给出，其中 $\\delta > 0$。我们寻求使 $\\widehat{K}_{e}(\\delta)$ 成为正定的最小 $\\delta$。正定性的条件是：\n$$\nx^{\\mathsf{T}}\\widehat{K}_{e}(\\delta)x > 0 \\quad \\forall x \\in \\mathbb{R}^{n_b}\\setminus\\{0\\}\n$$\n代入 $\\widehat{K}_{e}(\\delta)$ 的定义：\n$$\nx^{\\mathsf{T}}((1+\\delta)\\,S - \\beta\\, v\\,v^{\\mathsf{T}})x > 0\n$$\n$$\n(1+\\delta)\\,x^{\\mathsf{T}}Sx - \\beta\\,(v^{\\mathsf{T}}x)^2 > 0\n$$\n此不等式必须对所有非零向量 $x$ 成立。如果 $v^{\\mathsf{T}}x = 0$，不等式变为 $(1+\\delta)\\,x^{\\mathsf{T}}Sx > 0$，这是成立的，因为 $\\delta>0$ 且 $S$ 是正定的。如果 $v^{\\mathsf{T}}x \\neq 0$，我们可以将不等式重新整理为：\n$$\n1+\\delta > \\beta\\,\\frac{(v^{\\mathsf{T}}x)^2}{x^{\\mathsf{T}}Sx}\n$$\n为使此条件对所有 $x \\neq 0$ 普遍成立，项 $1+\\delta$ 必须严格大于右侧的最大可能值。\n$$\n1+\\delta > \\max_{x\\neq 0} \\left( \\beta\\,\\frac{(v^{\\mathsf{T}}x)^2}{x^{\\mathsf{T}}Sx} \\right) = \\beta \\max_{x\\neq 0} \\left( \\frac{(v^{\\mathsf{T}}x)^2}{x^{\\mathsf{T}}Sx} \\right)\n$$\n我们必须找到广义瑞利商 $R(x) = \\frac{(v^{\\mathsf{T}}x)^2}{x^{\\mathsf{T}}Sx}$ 的最大值。由于 $S$ 是对称正定的，我们可以引入变量替换 $y = S^{1/2}x$，其中 $S^{1/2}$ 是 $S$ 唯一的对称正定平方根。则 $x = S^{-1/2}y$。\n$$\nR(x) = \\frac{(v^{\\mathsf{T}}S^{-1/2}y)^2}{(S^{-1/2}y)^{\\mathsf{T}}S(S^{-1/2}y)} = \\frac{((S^{-1/2}v)^{\\mathsf{T}}y)^2}{y^{\\mathsf{T}}S^{-1/2}SS^{-1/2}y} = \\frac{((S^{-1/2}v)^{\\mathsf{T}}y)^2}{y^{\\mathsf{T}}y}\n$$\n设 $u = S^{-1/2}v$。表达式变为 $\\frac{(u^{\\mathsf{T}}y)^2}{\\|y\\|^2_2}$。根据柯西-施瓦茨不等式， $|u^{\\mathsf{T}}y| \\leq \\|u\\|_2 \\|y\\|_2$，所以 $(u^{\\mathsf{T}}y)^2 \\leq \\|u\\|^2_2 \\|y\\|^2_2$。最大值为 $\\|u\\|^2_2$，当 $y$ 与 $u$ 共线时取得。\n$$\n\\max_{x\\neq 0} R(x) = \\|u\\|^2_2 = \\|S^{-1/2}v\\|^2_2 = (S^{-1/2}v)^{\\mathsf{T}}(S^{-1/2}v) = v^{\\mathsf{T}}S^{-1/2}S^{-1/2}v = v^{\\mathsf{T}}S^{-1}v\n$$\n将此最大值代回我们的稳定化不等式中：\n$$\n1+\\delta > \\beta\\,(v^{\\mathsf{T}}S^{-1}v)\n$$\n求解 $\\delta$：\n$$\n\\delta > \\beta\\,(v^{\\mathsf{T}}S^{-1}v) - 1\n$$\n问题要求保证正定性的最小 $\\delta$。这对应于有效 $\\delta$ 值集合的下确界。这个边界值是矩阵不再是严格正定而变为半正定（即其最小特征值变为零）的地方。因此，临界值是这个不等式的下界。\n所需的最小稳定化参数是\n$$\n\\delta_{min} = \\beta\\,(v^{\\mathsf{T}}S^{-1}v) - 1\n$$\n问题中给出的条件 $\\beta\\,(v^{\\mathsf{T}}S^{-1}v) > 1$ 确保了这个最小 $\\delta$ 确实是正的，符合要求。任何 $\\delta > \\delta_{min}$ 都会使矩阵 $\\widehat{K}_{e}(\\delta)$ 成为正定的。", "answer": "$$\\boxed{\\beta \\left(v^{\\mathsf{T}} S^{-1} v\\right) - 1}$$", "id": "2551528"}]}