{"hands_on_practices": [{"introduction": "在有限元分析中，我们选择的单元类型（例如，线性或二次）直接决定了自由度（Degrees of Freedom, DOFs）的数量和位置。这个练习将带你从第一性原理出发，推导不同多项式阶次下单元自由度的数量，从而巩固多项式近似空间与节点自由度这一核心概念之间的联系。理解这种关系是构建任何有限元模型，并确保其准确性的基础。[@problem_id:2583811]", "problem": "考虑在有界域 $\\Omega \\subset \\mathbb{R}^{3}$ 上的标量泊松问题 $-\\nabla \\cdot (\\kappa \\nabla u) = f$，该问题具有适当的边界条件，并由协调的四面体网格离散化。假设您在每个四面体单元 $T$ 上，使用总多项式次数为 $p \\in \\{1,2\\}$ 的标准拉格朗日形函数，构建了一个连续伽辽金(CG)有限元方法。在此设置中，一个节点自由度(DOF)对应于离散场 $u_{h}$ 在与 $T$ 相关联的插值节点上的值，而单元级自由度的数量等于 $T$ 上局部多项式逼近空间的维数。\n\n从第一性原理出发，完成以下任务：\n1. 从三变量单项式的刻画出发，对于 $p=1$（线性）和 $p=2$（二次）的情况，确定四面体上总次数至多为 $p$ 的线性无关多项式的数量，从而得出对于每个 $p$，每个四面体单元中标量未知数 $u$ 的节点自由度数量。\n2. 对于 $p=1$ 和 $p=2$ 的情况，确定这些节点自由度在四面体单元内的几何位置（即，与顶点、边、面和/或内部相关联），并与四面体上的标准拉格朗日插值保持一致。\n3. 基于您的推导，计算对于标量泊松问题，当从线性（$p=1$）四面体单元转为二次（$p=2$）四面体单元时，单元级自由度的增加量。\n\n最终答案只报告每个单元自由度的增加量。无需进行四舍五入，也无需报告单位。", "solution": "在尝试任何解答之前，需要对问题陈述进行验证。\n\n首先，按要求逐字提取给定条件。\n- 问题：标量泊松问题 $-\\nabla \\cdot (\\kappa \\nabla u) = f$。\n- 区域：一个有界域 $\\Omega \\subset \\mathbb{R}^{3}$。\n- 网格：一个协调的四面体网格。\n- 方法：连续伽辽金(CG)有限元法。\n- 形函数：总多项式次数为 $p \\in \\{1,2\\}$ 的标准拉格朗日形函数。\n- 单元类型：一个四面体单元 $T$。\n- 节点自由度定义：离散场 $u_{h}$ 在与 $T$ 相关联的插值节点上的值。\n- 单元级自由度数量：$T$ 上局部多项式逼近空间的维数。\n- 任务：\n    1. 对于 $p=1$ 和 $p=2$，确定四面体上总次数至多为 $p$ 的线性无关多项式的数量（即节点自由度的数量）。\n    2. 对于 $p=1$ 和 $p=2$，确定这些节点自由度的几何位置。\n    3. 计算从 $p=1$ 到 $p=2$ 时，单元级自由度的增加量。\n\n现在根据指定标准对问题进行验证。\n- **科学性**：该问题是有限元法理论中的一个基础练习。它涉及标准概念：泊松方程、四面体单元、拉格朗日多项式和自由度。所有前提都符合事实，并且是计算数学的核心内容。\n- **适定性**：问题陈述清晰，并提供了推导唯一、确定性答案所需的所有必要信息。\n- **客观性**：语言正式、精确，不含任何主观或非科学内容。\n\n因此，该问题是有效的。这是一个标准的、适定的问题，可以从第一性原理出发进行严格解答。我们开始进行解答。\n\n单个单元上标量未知数的节点自由度(DOF)数量，对应于用于逼近的局部多项式空间的维数。对于一个拉格朗日单元，该维数等于唯一确定一个给定次数多项式所需的节点数量。题目要求我们考虑在三维空间 $(x, y, z)$ 中，总次数至多为 $p$ 的多项式。\n\n$d$ 个变量中总次数至多为 $p$ 的多项式空间记为 $\\mathcal{P}_p(\\mathbb{R}^d)$。该空间的维数是形如 $x_1^{\\alpha_1} x_2^{\\alpha_2} \\cdots x_d^{\\alpha_d}$ 的不同单项式的数量，其中指数 $\\alpha_i$ 是非负整数，其和小于或等于 $p$：$\\sum_{i=1}^{d} \\alpha_i \\le p$。\n\n在我们的例子中，空间维度是 $d=3$。条件是 $\\alpha_1 + \\alpha_2 + \\alpha_3 \\le p$。为了计算此类整数解的数量，我们可以使用一种标准的组合论证，通常称为“隔板法”。通过引入一个松弛变量 $\\alpha_4 \\ge 0$，该不等式被转换为一个等式：$\\alpha_1 + \\alpha_2 + \\alpha_3 + \\alpha_4 = p$。问题现在等价于求将 $p$ 个相同的物品（星）分配到 $d+1=4$ 个不同的箱子（由 $d=3$ 个隔板隔开）中的方法数。其公式由二项式系数给出：\n$$ N_{\\text{dof}}(p, d) = \\binom{p+d}{d} $$\n对于我们特定的三维四面体单元，$d=3$，所以公式简化为：\n$$ N_{\\text{dof}}(p, 3) = \\binom{p+3}{3} $$\n\n我们现在对指定的多项式次数 $p=1$ 和 $p=2$ 应用此公式。\n\n1 . 对于线性单元, $p=1$。\n每个单元的自由度数量 $N_1$ 为：\n$$ N_{1} = \\binom{1+3}{3} = \\binom{4}{3} = \\frac{4!}{3!(4-3)!} = \\frac{4!}{3!1!} = 4 $$\n因此，一个线性四面体单元有 4 个自由度。对于一个拉格朗日单元，这 4 个自由度必须唯一地确定一个线性多项式 $P_1(x, y, z) = c_0 + c_1 x + c_2 y + c_3 z$。四面体是一个有 4 个顶点的几何形状。在 4 个顶点上各放置一个节点，提供了定义该多项式所需的 4 个充分必要条件。因此，对于 $p=1$，节点自由度位于四面体的 4 个顶点上。\n\n2 . 对于二次单元, $p=2$。\n每个单元的自由度数量 $N_2$ 为：\n$$ N_{2} = \\binom{2+3}{3} = \\binom{5}{3} = \\frac{5!}{3!(5-3)!} = \\frac{5!}{3!2!} = \\frac{5 \\times 4}{2 \\times 1} = 10 $$\n因此，一个二次四面体单元有 10 个自由度。为了在单元上唯一地确定一个二次多项式，我们需要放置 10 个节点。标准拉格朗日单元的几何布置由唯一可解性要求决定。为了保证单元间的连续性，节点必须足以唯一地确定多项式在每个面和每条边上的迹。一个三维二次多项式在一条边（一条线）上的迹是一个一维二次多项式。一个一维二次多项式需要 3 个点来唯一确定。一条边连接两个顶点，所以我们必须在每条边的内部增加一个节点。一个四面体有 4 个顶点和 6 条边。\n因此，这 10 个节点的位置是：\n- 4 个节点位于四面体的顶点。\n- 6 个节点位于 6 条边的中点。\n这总共得到 $4 + 6 = 10$ 个节点，与多项式空间的维数相匹配。对于标准的 $p=2$ 拉格朗日单元，面的内部（边上除外）没有节点，四面体的内部（体）也没有节点。\n\n最后，我们计算从线性（$p=1$）单元转为二次（$p=2$）单元时，单元级自由度数量的增加量。\n增加量 $\\Delta N$ 是二次和线性情况下自由度数量的差值：\n$$ \\Delta N = N_2 - N_1 = 10 - 4 = 6 $$\n单元级自由度的数量增加了 6。", "answer": "$$\\boxed{6}$$", "id": "2583811"}, {"introduction": "定义了单个单元上的自由度后，我们需要一种系统化的方法来描述这些单元如何连接成一个完整的网格。本练习引入节点-单元关联矩阵，这是一个强大的代数工具，用于精确表示网格的拓扑连接。通过分析这个矩阵，我们可以编程化地理解网格结构，例如确定哪些单元是相邻的，这对于全局刚度矩阵的组装过程至关重要。[@problem_id:2583822]", "problem": "考虑一根一维杆，使用$2$节点线性单元进行有限元法 (FEM) 离散化。全局节点集为 $\\mathcal{N} = \\{1,2,3\\}$，其坐标分别为 $x_1 = 0$、$x_2 = a$ 和 $x_3 = L$，其中 $0 < a < L$。单元集为 $\\mathcal{E} = \\{1,2\\}$，其连通性映射为 $\\mathcal{C}(1) = (1,2)$ 和 $\\mathcal{C}(2) = (2,3)$。每个节点带有一个标量自由度，即节点 $i$ 处的轴向位移 $u_i$。根据以下规则定义节点-单元关联矩阵 $B \\in \\{0,1\\}^{3 \\times 2}$\n$$\nb_{i e} = \\begin{cases}\n1, & \\text{如果节点 } i \\text{ 在单元 } e \\text{ 中},\\\\\n0, & \\text{否则}。\n\\end{cases}\n$$\n仅使用有限元法中关于节点、单元、自由度和连通性的基本定义，完成以下任务：\n\n- 构建矩阵 $B$ 的显式形式。\n- 从基本原理出发，通过分析乘积 $C = B^{\\top} B$，论证 $B$ 如何通过共享节点来编码单元邻接关系。\n\n最后，计算 $C$ 的行列式。将最终答案表示为一个无单位的精确整数。无需四舍五入。", "solution": "我们从有限元的基本抽象概念开始：\n\n- 节点是定义了未知量（自由度）的离散点 $\\{x_i\\}_{i \\in \\mathcal{N}}$。在此问题中，每个节点 $i \\in \\{1,2,3\\}$ 带有一个标量位移自由度 $u_i$。\n- 单元是具有连通性的子域，该连通性将每个单元编号映射到一个有序的节点编号元组。对于由线性段构成的一维杆，每个单元恰好连接 $2$ 个节点。给定的连通性为 $\\mathcal{C}(1) = (1,2)$ 和 $\\mathcal{C}(2) = (2,3)$。\n- 节点-单元关联矩阵 $B$ 记录了节点在单元中的隶属关系，其元素 $b_{i e} \\in \\{0,1\\}$ 指示节点 $i$ 是否属于单元 $e$。\n\n根据这些定义，我们逐列（每列对应一个单元）构建矩阵 $B$：\n\n- 对于单元 $e = 1$，连接的节点是 $1$ 和 $2$。因此，第一列为 $b_{1,1} = 1$，$b_{2,1} = 1$ 和 $b_{3,1} = 0$。\n- 对于单元 $e = 2$，连接的节点是 $2$ 和 $3$。因此，第二列为 $b_{1,2} = 0$，$b_{2,2} = 1$ 和 $b_{3,2} = 1$。\n\n因此，\n$$\nB = \\begin{pmatrix}\n1 & 0\\\\\n1 & 1\\\\\n0 & 1\n\\end{pmatrix}.\n$$\n\n为了论证 $B$ 如何通过共享节点编码单元邻接关系，我们考虑乘积 $C = B^{\\top} B$。其元素由下式给出\n$$\nC_{e e'} = \\sum_{i=1}^{3} b_{i e}\\, b_{i e'}.\n$$\n根据 $b_{i e}$ 的定义，当且仅当节点 $i$ 同时属于单元 $e$ 和单元 $e'$ 时，乘积 $b_{i e}\\, b_{i e'}$ 等于 $1$，否则等于 $0$。因此，$C_{e e'}$ 计算了单元 $e$ 和 $e'$ 共享的节点数量。具体来说：\n\n- 对角线元素满足 $C_{e e} = \\sum_{i=1}^{3} b_{i e}^2 = \\sum_{i=1}^{3} b_{i e}$，这等于单元 $e$ 中的节点数量。对于 $2$ 节点线性单元，$C_{e e} = 2$。\n- 非对角线元素 $C_{1 2} = C_{2 1}$ 等于单元 $1$ 和 $2$ 之间的公共节点数量。当且仅当 $C_{1 2} > 0$ 时，两个单元是邻接的。\n\n显式计算 $C$：\n$$\nC = B^{\\top} B\n= \\begin{pmatrix}\n1 & 1 & 0\\\\\n0 & 1 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0\\\\\n1 & 1\\\\\n0 & 1\n\\end{pmatrix}\n= \\begin{pmatrix}\n2 & 1\\\\\n1 & 2\n\\end{pmatrix}.\n$$\n解释 $C$：\n- $C_{1 1} = 2$ 和 $C_{2 2} = 2$ 确认了每个单元有 $2$ 个节点。\n- $C_{1 2} = C_{2 1} = 1$ 表明单元 $1$ 和 $2$ 共享了恰好 $1$ 个节点（即节点 $2$），因此它们是邻接的。\n\n最后，计算 $C$ 的行列式：\n$$\n\\det(C) = \\det\\!\\begin{pmatrix}\n2 & 1\\\\\n1 & 2\n\\end{pmatrix} = 2 \\cdot 2 - 1 \\cdot 1 = 3.\n$$\n这是一个精确整数，符合要求。", "answer": "$$\\boxed{3}$$", "id": "2583822"}, {"introduction": "单元的连接性直接决定了大型全局刚度矩阵的稀疏模式，而求解相应线性方程组的效率在很大程度上取决于这个模式。本练习将通过一个具体的网格案例，带你实践经典的 Cuthill-McKee 算法。你将通过重新排列节点顺序来减小矩阵的带宽，从而直观地理解如何利用网格的连接信息来显著提升计算性能。[@problem_id:2583821]", "problem": "考虑一个小型二维有限元网格，其节点集标记为 $\\{1,2,3,4,5,6,7,8\\}$，并使用一阶三角形单元。每个节点的节点自由度为平面线弹性问题中的自由度，即每个节点有 $2$ 个平移自由度。单元连接关系由以下列表给出；每个顶点为 $(i,j,k)$ 的三角形表示，在组装的全局刚度矩阵中，$\\{i,j,k\\}$ 中的所有节点对都是耦合的：\n- $e_{1}: (1,2,5)$\n- $e_{2}: (1,5,4)$\n- $e_{3}: (2,3,6)$\n- $e_{4}: (2,6,5)$\n- $e_{5}: (4,5,8)$\n- $e_{6}: (4,8,7)$\n- $e_{7}: (5,6,8)$\n\n全局刚度矩阵在节点（超节点）层级的图在节点 $i$ 和 $j$ 之间有一条无向边，如果存在至少一个单元，其连接关系同时包含 $i$ 和 $j$。你需要对节点图应用 Cuthill–McKee 重新排序（不是逆序），以获得一个能减小带宽的新节点编号。使用以下确定性规则使排序唯一：\n- 选择度最小的节点中索引最小的节点作为起始节点。\n- 在广度优先扩展中，当将当前节点的未编号邻居入队时，按度的非递减顺序对其进行排序；若度相同，则按原始节点索引的递增顺序排序。\n- 一个节点永不入队超过一次。\n\n对于一个标号 $\\pi:\\{1,\\dots,8\\}\\to\\{1,\\dots,8\\}$，将节点层级的半带宽定义为\n$$\nb_{\\text{node}} \\;=\\; \\max_{\\{i,j\\}\\in E} \\big|\\pi(i)-\\pi(j)\\big|,\n$$\n其中 $E$ 是由单元连接关系导出的边集。在获得 Cuthill–McKee 排序 $\\pi$ 后，通过将每个节点的 $2$ 个平移自由度按照 $\\pi$ 指定的节点顺序连续地分组，来形成自由度（DOF）层级的排序。假设采用标准有限元组装，因此如果两个节点在节点层级上相邻，则相应的 $2\\times 2$ 自由度块非零。\n\n在应用指定的 Cuthill–McKee 排序并将每个节点扩展为 $2$ 个自由度并进行连续分组后，组装的全局刚度矩阵在自由度层级的最终半带宽是多少？给出单个整数作为答案。无需四舍五入，也不需要报告单位。", "solution": "该问题要求在使用 Cuthill-McKee 算法对节点重新排序后，计算全局刚度矩阵的半带宽。分析过程分为三个主要阶段：首先，构建节点图并确定节点度；其次，应用 Cuthill-McKee 算法找到新的节点排序；第三，基于这个新排序计算自由度（DOF）层级的半带宽。\n\n首先，我们必须构建表示节点连接关系的无向图。节点集为 $V = \\{1, 2, 3, 4, 5, 6, 7, 8\\}$。如果节点 $i$ 和 $j$ 出现在同一个单元中，则边 $(i, j)$ 存在于边集 $E$ 中。单元连接关系列表为：\n- $e_1: (1,2,5) \\implies$ 导出边 $(1,2), (1,5), (2,5)$\n- $e_2: (1,5,4) \\implies$ 导出边 $(1,4), (1,5), (4,5)$\n- $e_3: (2,3,6) \\implies$ 导出边 $(2,3), (2,6), (3,6)$\n- $e_4: (2,6,5) \\implies$ 导出边 $(2,5), (2,6), (5,6)$\n- $e_5: (4,5,8) \\implies$ 导出边 $(4,5), (4,8), (5,8)$\n- $e_6: (4,8,7) \\implies$ 导出边 $(4,7), (4,8), (7,8)$\n- $e_7: (5,6,8) \\implies$ 导出边 $(5,6), (5,8), (6,8)$\n\n合并这些边并移除重复项，我们可以为每个节点建立邻接表并确定其度，即与它相连的其他节点的数量。\n- 节点 $1$：连接到 $\\{2, 4, 5\\}$。度为 $3$。\n- 节点 $2$：连接到 $\\{1, 3, 5, 6\\}$。度为 $4$。\n- 节点 $3$：连接到 $\\{2, 6\\}$。度为 $2$。\n- 节点 $4$：连接到 $\\{1, 5, 7, 8\\}$。度为 $4$。\n- 节点 $5$：连接到 $\\{1, 2, 4, 6, 8\\}$。度为 $5$。\n- 节点 $6$：连接到 $\\{2, 3, 5, 8\\}$。度为 $4$。\n- 节点 $7$：连接到 $\\{4, 8\\}$。度为 $2$。\n- 节点 $8$：连接到 $\\{4, 5, 6, 7\\}$。度为 $4$。\n\n接下来，我们应用 Cuthill-McKee (CM) 算法。\n1.  **选择起始节点：** 我们必须找到度最小的节点。最小度为 $2$，节点 $3$ 和 $7$ 具有此度。规则是选择原始索引最小的那个，即节点 $3$。\n\n2.  **执行广度优先搜索 (BFS)：** 我们维护一个结果列表 $R$ 和一个队列 $Q$。过程如下：\n- 初始化 $R = []$ 和 $Q = [3]$。将节点 $3$ 标记为已访问。\n- **层 0：** 出队 $3$。添加到 $R$。因此，$R = (3)$。找到其未访问的邻居：$\\{2, 6\\}$。\n    - 按度对邻居进行排序：度($2$) = $4$, 度($6$) = $4$。出现平局。\n    - 按原始索引打破平局：$2 < 6$。排序后的顺序是 $(2, 6)$。\n    - 将它们入队：$Q = [2, 6]$。将 $2, 6$ 标记为已访问。\n- **层 1：**\n    - 出队 $2$。添加到 $R$。$R = (3, 2)$。找到其未访问的邻居：$\\{1, 5\\}$。注意 $3$ 已被访问，而 $6$ 在 $Q$ 中（并已标记为已访问）。\n    - 按度对邻居进行排序：度($1$) = $3$, 度($5$) = $5$。排序后的顺序是 $(1, 5)$。\n    - 将它们入队：$Q = [6, 1, 5]$。将 $1, 5$ 标记为已访问。\n    - 出队 $6$。添加到 $R$。$R = (3, 2, 6)$。找到其未访问的邻居：$\\{8\\}$。注意 $2, 3$ 已被访问，而 $5$ 在 $Q$ 中。\n    - 对邻居排序：只有 $\\{8\\}$。顺序是 $(8)$。\n    - 将其入队：$Q = [1, 5, 8]$。将 $8$ 标记为已访问。\n- **层 2：**\n    - 出队 $1$。添加到 $R$。$R = (3, 2, 6, 1)$。找到其未访问的邻居：$\\{4\\}$。注意 $2, 5$ 已被访问/在队列中。\n    - 对邻居排序：只有 $\\{4\\}$。顺序是 $(4)$。\n    - 将其入队：$Q = [5, 8, 4]$。将 $4$ 标记为已访问。\n    - 出队 $5$。添加到 $R$。$R = (3, 2, 6, 1, 5)$。找到其未访问的邻居：无。其所有邻居 $\\{1, 2, 4, 6, 8\\}$ 都已被访问/在队列中。\n    - $Q = [8, 4]$.\n    - 出队 $8$。添加到 $R$。$R = (3, 2, 6, 1, 5, 8)$。找到其未访问的邻居：$\\{7\\}$。注意 $4, 5, 6$ 已被访问/在队列中。\n    - 对邻居排序：只有 $\\{7\\}$。顺序是 $(7)$。\n    - 将其入队：$Q = [4, 7]$。将 $7$ 标记为已访问。\n- **层 3：**\n    - 出队 $4$。添加到 $R$。$R = (3, 2, 6, 1, 5, 8, 4)$。找到其未访问的邻居：无。其所有邻居 $\\{1, 5, 7, 8\\}$ 都已被访问/在队列中。\n    - $Q = [7]$.\n    - 出队 $7$。添加到 $R$。$R = (3, 2, 6, 1, 5, 8, 4, 7)$。找到其未访问的邻居：无。其所有邻居 $\\{4, 8\\}$ 都已被访问。\n    - $Q = []$.\n\n队列为空，算法终止。Cuthill-McKee 排序为 $R = (3, 2, 6, 1, 5, 8, 4, 7)$。\n这个排序定义了一个从原始节点标签到新标签（它们在 R 中的位置，从 $1$ 到 $8$）的映射 $\\pi$：\n$\\pi(3)=1$, $\\pi(2)=2$, $\\pi(6)=3$, $\\pi(1)=4$, $\\pi(5)=5$, $\\pi(8)=6$, $\\pi(4)=7$, $\\pi(7)=8$。\n\n现在，我们计算节点半带宽，$b_{\\text{node}} = \\max_{\\{i,j\\}\\in E} |\\pi(i)-\\pi(j)|$。我们对 $E$ 中的所有边进行检查：\n- $(1,2): |\\pi(1)-\\pi(2)| = |4-2| = 2$\n- $(1,4): |\\pi(1)-\\pi(4)| = |4-7| = 3$\n- $(1,5): |\\pi(1)-\\pi(5)| = |4-5| = 1$\n- $(2,3): |\\pi(2)-\\pi(3)| = |2-1| = 1$\n- $(2,5): |\\pi(2)-\\pi(5)| = |2-5| = 3$\n- $(2,6): |\\pi(2)-\\pi(6)| = |2-3| = 1$\n- $(3,6): |\\pi(3)-\\pi(6)| = |1-3| = 2$\n- $(4,5): |\\pi(4)-\\pi(5)| = |7-5| = 2$\n- $(4,7): |\\pi(4)-\\pi(7)| = |7-8| = 1$\n- $(4,8): |\\pi(4)-\\pi(8)| = |7-6| = 1$\n- $(5,6): |\\pi(5)-\\pi(6)| = |5-3| = 2$\n- $(5,8): |\\pi(5)-\\pi(8)| = |5-6| = 1$\n- $(6,8): |\\pi(6)-\\pi(8)| = |3-6| = 3$\n- $(7,8): |\\pi(7)-\\pi(8)| = |8-6| = 2$\n这些差值的最大值为 $3$。因此，节点半带宽为 $b_{\\text{node}} = 3$。\n\n最后，我们确定全局刚度矩阵在自由度层级的半带宽，$B_{\\text{DOF}}$。每个节点有 $n_d = 2$ 个自由度。在新的节点排序下，新标签为 $k = \\pi(i)$ 的节点的自由度索引为 $2k-1$ 和 $2k$。\n矩阵的半带宽定义为 $B_{\\text{DOF}} = \\max_{K_{IJ} \\neq 0} |I-J|$。如果自由度 $I$ 和 $J$ 耦合，则会出现非零项 $K_{IJ}$。这在两种情况下发生：\n1.  自由度 $I$ 和 $J$ 属于同一个节点。对于新标签为 $k$ 的节点，其自由度为 $2k-1$ 和 $2k$。最大差值为 $|(2k)-(2k-1)| = 1$。\n2.  自由度 $I$ 属于节点 $i$，自由度 $J$ 属于节点 $j$，其中节点 $i$ 和 $j$ 通过一条边连接。设它们的新标签为 $k_i = \\pi(i)$ 和 $k_j = \\pi(j)$。不失一般性，假设 $k_i > k_j$。节点 $i$ 的自由度为 $\\{2k_i-1, 2k_i\\}$，节点 $j$ 的自由度为 $\\{2k_j-1, 2k_j\\}$。为了最大化差值 $|I-J|$，我们必须从节点 $i$ 中选择最大可能的索引，并从节点 $j$ 中选择最小可能的索引。这得到：\n$$|I-J|_{\\max} = (2k_i) - (2k_j-1) = 2(k_i - k_j) + 1$$\n全局半带宽 $B_{\\text{DOF}}$ 是所有连接对 $\\{i, j\\}$ 上该值的最大值。\n$$B_{\\text{DOF}} = \\max_{\\{i,j\\}\\in E} \\left( 2|\\pi(i) - \\pi(j)| + 1 \\right)$$\n$$B_{\\text{DOF}} = 2 \\left( \\max_{\\{i,j\\}\\in E} |\\pi(i) - \\pi(j)| \\right) + 1$$\n我们认出括号中的项是节点半带宽 $b_{\\text{node}}$。\n$$B_{\\text{DOF}} = 2 \\cdot b_{\\text{node}} + 1$$\n代入计算出的值 $b_{\\text{node}} = 3$：\n$$B_{\\text{DOF}} = 2 \\cdot 3 + 1 = 7$$\n\n组装的全局刚度矩阵在自由度层级的最终半带宽为 $7$。", "answer": "$$\\boxed{7}$$", "id": "2583821"}]}