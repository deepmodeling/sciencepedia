{"hands_on_practices": [{"introduction": "这个首个实践练习将作为一个基础性训练。我们将从一个简单且具体的系统入手：一根由两种不同材料组成的杆。通过仅用两个有限元对其进行建模，你将从第一性原理出发，推导出显式积分的临界时间步长。这个练习突出了如何为非均匀材料组装系统矩阵，如何应用边界条件，以及如何解析地确定主导稳定性极限的系统最高频率 [@problem_id:2557125]。这是建立关于材料属性和单元尺寸如何直接影响CFL条件的直观理解的绝佳方式。", "problem": "考虑一维小应变轴向弹性动力学问题，对象为一根由两种不同材料串联而成的杆件。A段的长度为 $h_{1} = 5.0\\times 10^{-2}\\ \\text{m}$，杨氏模量为 $E_{1} = 70\\times 10^{9}\\ \\text{Pa}$，质量密度为 $\\rho_{1} = 2.70\\times 10^{3}\\ \\text{kg/m}^{3}$。B段的长度为 $h_{2} = 5.0\\times 10^{-2}\\ \\text{m}$，杨氏模量为 $E_{2} = 200\\times 10^{9}\\ \\text{Pa}$，质量密度为 $\\rho_{2} = 7.80\\times 10^{3}\\ \\text{kg/m}^{3}$。杆件的横截面积是均匀的，等于 $A = 1.00\\times 10^{-4}\\ \\text{m}^{2}$。用一个线性两节点有限元对每一段进行离散化，并在两端施加固定的位移约束。假设没有外部载荷和阻尼。使用集中质量矩阵。时间积分采用显式中心差分法。\n\n仅从牛顿第二定律、线性轴向弹性的本构关系以及标准有限元半离散化框架出发，完成以下任务：\n\n1. 推导无阻尼半离散运动方程和显式中心差分法的时间步进关系。使用模态（特征向量）分解，推导出一个用半离散系统的最大固有圆频率表示的线性稳定性充要条件。清楚地将此条件表述为一种一旦最大圆频率已知即可进行评估的形式。\n\n2. 针对所述的双材料、双单元网格，组集全局刚度和集中质量贡献，施加两端固定边界条件，并对系统进行简化。证明该动力学问题简化为单自由度问题，并获得用 $E_{1}$、$E_{2}$、$\\rho_{1}$、$\\rho_{2}$、$h_{1}$、$h_{2}$ 和 $A$ 表示的最大稳定时间步长的封闭解表达式。\n\n3. 代入给定的数值，计算最大稳定时间步长。用微秒表示最终结果，并四舍五入到四位有效数字。", "solution": "在尝试求解之前，对问题进行验证。\n\n已知条件如下：\nA段的材料属性：长度 $h_{1} = 5.0\\times 10^{-2}\\ \\text{m}$，杨氏模量 $E_{1} = 70\\times 10^{9}\\ \\text{Pa}$，质量密度 $\\rho_{1} = 2.70\\times 10^{3}\\ \\text{kg/m}^{3}$。\nB段的材料属性：长度 $h_{2} = 5.0\\times 10^{-2}\\ \\text{m}$，杨氏模量 $E_{2} = 200\\times 10^{9}\\ \\text{Pa}$，质量密度 $\\rho_{2} = 7.80\\times 10^{3}\\ \\text{kg/m}^{3}$。\n共用属性：横截面积 $A = 1.00\\times 10^{-4}\\ \\text{m}^{2}$。\n离散化与约束：每段用一个线性两节点有限元建模，组合体的自由端位移固定。\n数值模型：对无阻尼、无外力系统，采用集中质量矩阵和显式中心差分法进行时间积分。\n\n该问题在科学上基于固体力学和数值分析的原理。这是一个适定问题，所有必要信息均已提供，且不存在矛盾。语言客观、精确。该问题是计算力学中的一个标准练习，旨在检验有限元分析和显式时间积分格式稳定性的基本概念。因此，该问题被认为是有效的，将提供解答。\n\n解答按要求分为三个部分进行。\n\n第1部分：稳定性条件的推导\n\n无阻尼、无外力线性弹性系统的半离散运动方程由牛顿第二定律和控制偏微分方程弱形式的有限元空间离散化推导得出。这产生了一个常微分方程组：\n$$ \\mathbf{M}\\ddot{\\mathbf{u}}(t) + \\mathbf{K}\\mathbf{u}(t) = \\mathbf{0} $$\n其中 $\\mathbf{M}$ 是质量矩阵，$\\mathbf{K}$ 是刚度矩阵，$\\mathbf{u}(t)$ 是节点位移向量。\n\n时间积分采用显式中心差分法。在时间步 $n$ （时间 $t_n = n\\Delta t$）的加速度由中心差分公式近似：\n$$ \\ddot{\\mathbf{u}}_n \\approx \\frac{\\mathbf{u}_{n+1} - 2\\mathbf{u}_n + \\mathbf{u}_{n-1}}{(\\Delta t)^2} $$\n其中 $\\mathbf{u}_n = \\mathbf{u}(t_n)$，$\\Delta t$ 是时间步长。将此代入时间 $t_n$ 的运动方程，可得：\n$$ \\mathbf{M}\\left(\\frac{\\mathbf{u}_{n+1} - 2\\mathbf{u}_n + \\mathbf{u}_{n-1}}{(\\Delta t)^2}\\right) + \\mathbf{K}\\mathbf{u}_n = \\mathbf{0} $$\n重新整理以求解下一时间步的位移 $\\mathbf{u}_{n+1}$，我们得到时间步进关系：\n$$ \\mathbf{M}\\mathbf{u}_{n+1} = 2\\mathbf{M}\\mathbf{u}_n - \\mathbf{M}\\mathbf{u}_{n-1} - (\\Delta t)^2\\mathbf{K}\\mathbf{u}_n $$\n由于使用集中（对角）质量矩阵 $\\mathbf{M}$，其逆矩阵 $\\mathbf{M}^{-1}$ 的计算非常简单，因此该格式是显式的：\n$$ \\mathbf{u}_{n+1} = 2\\mathbf{u}_n - \\mathbf{u}_{n-1} - (\\Delta t)^2\\mathbf{M}^{-1}\\mathbf{K}\\mathbf{u}_n $$\n为分析此格式的稳定性，我们进行模态分析。解 $\\mathbf{u}(t)$ 可以表示为系统特征向量（模态）$\\boldsymbol{\\phi}_i$ 的线性组合。问题解耦为关于每个模态坐标 $q_i(t)$ 的一组独立的标量方程：\n$$ \\ddot{q}_i(t) + \\omega_i^2 q_i(t) = 0 $$\n其中 $\\omega_i$ 是第 $i$ 个固有圆频率，从广义特征值问题 $\\mathbf{K}\\boldsymbol{\\phi}_i = \\omega_i^2\\mathbf{M}\\boldsymbol{\\phi}_i$ 中获得。将中心差分格式应用于单个模态方程，可得：\n$$ \\frac{q_{n+1} - 2q_n + q_{n-1}}{(\\Delta t)^2} + \\omega^2 q_n = 0 $$\n为清晰起见，省略了下标 $i$。这是一个线性递推关系。我们寻求形如 $q_n = \\lambda^n$ 的解。将其代入方程，得到关于放大因子 $\\lambda$ 的特征方程：\n$$ \\lambda^{n+1} - 2\\lambda^n + \\lambda^{n-1} + (\\omega\\Delta t)^2\\lambda^n = 0 $$\n当 $\\lambda \\neq 0$ 时，两边除以 $\\lambda^{n-1}$，我们得到一个关于 $\\lambda$ 的二次方程：\n$$ \\lambda^2 - \\left(2 - (\\omega\\Delta t)^2\\right)\\lambda + 1 = 0 $$\n为使数值解稳定，根 $\\lambda$ 的模不得超过1，即 $|\\lambda| \\le 1$。该二次方程的根为：\n$$ \\lambda_{1,2} = \\frac{(2 - (\\omega\\Delta t)^2) \\pm \\sqrt{(2 - (\\omega\\Delta t)^2)^2 - 4}}{2} $$\n稳定性条件要求判别式为非正数，这确保了根是模为1的共轭复数，或者是模至多为1的实数。正判别式可能导致模大于1的实根，从而引起不稳定。\n如果 $(2 - (\\omega\\Delta t)^2)^2 - 4 \\le 0$，则满足稳定性条件，可简化为：\n$$ |2 - (\\omega\\Delta t)^2| \\le 2 $$\n此不等式等价于 $-2 \\le 2 - (\\omega\\Delta t)^2 \\le 2$。\n不等式的右侧，$2 - (\\omega\\Delta t)^2 \\le 2$，意味着 $(\\omega\\Delta t)^2 \\ge 0$，对于实数 $\\omega$ 和 $\\Delta t$ 始终成立。\n不等式的左侧，$-2 \\le 2 - (\\omega\\Delta t)^2$，意味着 $(\\omega\\Delta t)^2 \\le 4$，从而得到 $|\\omega\\Delta t| \\le 2$。\n这个条件必须对系统的所有模态都成立。最严格的约束来自于具有最高频率的模态 $\\omega_{\\max}$。因此，线性稳定性的充要条件是：\n$$ \\omega_{\\max}\\Delta t \\le 2 $$\n这可以表述为：时间步长 $\\Delta t$ 必须小于或等于临界时间步长 $\\Delta t_{crit} = \\frac{2}{\\omega_{\\max}}$，其中 $\\omega_{\\max}$ 是半离散系统的最大固有圆频率。\n\n第2部分：最大稳定时间步长封闭解表达式的推导\n\n系统由两个串联的线性杆单元组成。节点从左到右标记为 $1$、$2$ 和 $3$。单元 $1$ 连接节点 $1$ 和 $2$，单元 $2$ 连接节点 $2$ 和 $3$。\n对于长度为 $h$、面积为 $A$、杨氏模量为 $E$ 的一维杆单元，其单元刚度矩阵为：\n$$ \\mathbf{k}^e = \\frac{AE}{h} \\begin{pmatrix} 1 & -1 \\\\ -1 & 1 \\end{pmatrix} $$\n对于密度为 $\\rho$ 的材料，其单元集中质量矩阵为：\n$$ \\mathbf{m}^e = \\frac{\\rho A h}{2} \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} $$\n通过将单元 $1$（材料 $1$，长度 $h_1$）和单元 $2$（材料 $2$，长度 $h_2$）的贡献相加，组集得到全局刚度矩阵 $\\mathbf{K}$：\n$$ \\mathbf{K} = \\begin{pmatrix} \\frac{AE_1}{h_1} & -\\frac{AE_1}{h_1} & 0 \\\\ -\\frac{AE_1}{h_1} & \\frac{AE_1}{h_1} + \\frac{AE_2}{h_2} & -\\frac{AE_2}{h_2} \\\\ 0 & -\\frac{AE_2}{h_2} & \\frac{AE_2}{h_2} \\end{pmatrix} $$\n类似地，组集得到全局集中质量矩阵 $\\mathbf{M}$：\n$$ \\mathbf{M} = \\begin{pmatrix} \\frac{\\rho_1 A h_1}{2} & 0 & 0 \\\\ 0 & \\frac{\\rho_1 A h_1}{2} + \\frac{\\rho_2 A h_2}{2} & 0 \\\\ 0 & 0 & \\frac{\\rho_2 A h_2}{2} \\end{pmatrix} $$\n边界条件为两端固定，意味着节点 $1$ 和节点 $3$ 的位移为零：$u_1 = 0$ 和 $u_3 = 0$。这只留下一个活动的自由度 $u_2$。通过仅考虑与此自由度对应的行和列，可以简化系统。\n简化后的 $1 \\times 1$ 刚度矩阵和质量矩阵是全局矩阵的中心项：\n$$ K_{red} = K_{22} = \\frac{AE_1}{h_1} + \\frac{AE_2}{h_2} = A\\left(\\frac{E_1}{h_1} + \\frac{E_2}{h_2}\\right) $$\n$$ M_{red} = M_{22} = \\frac{\\rho_1 A h_1}{2} + \\frac{\\rho_2 A h_2}{2} = \\frac{A}{2}(\\rho_1 h_1 + \\rho_2 h_2) $$\n这个单自由度系统的运动方程是 $M_{red}\\ddot{u}_2 + K_{red}u_2 = 0$。该系统的固有频率是唯一的频率，因此它就是 $\\omega_{\\max}$：\n$$ \\omega_{\\max}^2 = \\frac{K_{red}}{M_{red}} = \\frac{A\\left(\\frac{E_1}{h_1} + \\frac{E_2}{h_2}\\right)}{\\frac{A}{2}(\\rho_1 h_1 + \\rho_2 h_2)} = \\frac{2\\left(\\frac{E_1}{h_1} + \\frac{E_2}{h_2}\\right)}{\\rho_1 h_1 + \\rho_2 h_2} $$\n最大稳定时间步长 $\\Delta t_{crit}$ 由 $\\frac{2}{\\omega_{\\max}}$ 给出。代入 $\\omega_{\\max}$ 的表达式：\n$$ \\Delta t_{crit} = \\frac{2}{\\omega_{\\max}} = 2 \\sqrt{\\frac{\\rho_1 h_1 + \\rho_2 h_2}{2\\left(\\frac{E_1}{h_1} + \\frac{E_2}{h_2}\\right)}} = \\sqrt{\\frac{4(\\rho_1 h_1 + \\rho_2 h_2)}{2\\left(\\frac{E_1}{h_1} + \\frac{E_2}{h_2}\\right)}} $$\n因此，封闭解表达式为：\n$$ \\Delta t_{crit} = \\sqrt{\\frac{2(\\rho_1 h_1 + \\rho_2 h_2)}{\\frac{E_1}{h_1} + \\frac{E_2}{h_2}}} $$\n\n第3部分：数值计算\n\n现在我们将给定的数值代入推导出的表达式中。\n$h_{1} = 5.0\\times 10^{-2}\\ \\text{m}$，$E_{1} = 70\\times 10^{9}\\ \\text{Pa}$，$\\rho_{1} = 2.70\\times 10^{3}\\ \\text{kg/m}^{3}$。\n$h_{2} = 5.0\\times 10^{-2}\\ \\text{m}$，$E_{2} = 200\\times 10^{9}\\ \\text{Pa}$，$\\rho_{2} = 7.80\\times 10^{3}\\ \\text{kg/m}^{3}$。\n\n首先，我们计算被开方数中分子的各项：\n$$ \\rho_1 h_1 = (2.70\\times 10^{3}\\ \\text{kg/m}^{3}) \\times (5.0\\times 10^{-2}\\ \\text{m}) = 135\\ \\text{kg/m}^{2} $$\n$$ \\rho_2 h_2 = (7.80\\times 10^{3}\\ \\text{kg/m}^{3}) \\times (5.0\\times 10^{-2}\\ \\text{m}) = 390\\ \\text{kg/m}^{2} $$\n$$ 2(\\rho_1 h_1 + \\rho_2 h_2) = 2(135 + 390)\\ \\text{kg/m}^{2} = 2(525)\\ \\text{kg/m}^{2} = 1050\\ \\text{kg/m}^{2} $$\n接下来，我们计算被开方数中分母的各项：\n$$ \\frac{E_1}{h_1} = \\frac{70\\times 10^{9}\\ \\text{Pa}}{5.0\\times 10^{-2}\\ \\text{m}} = 1.4\\times 10^{12}\\ \\text{Pa/m} $$\n$$ \\frac{E_2}{h_2} = \\frac{200\\times 10^{9}\\ \\text{Pa}}{5.0\\times 10^{-2}\\ \\text{m}} = 4.0\\times 10^{12}\\ \\text{Pa/m} $$\n$$ \\frac{E_1}{h_1} + \\frac{E_2}{h_2} = (1.4\\times 10^{12} + 4.0\\times 10^{12})\\ \\text{Pa/m} = 5.4\\times 10^{12}\\ \\text{Pa/m} $$\n现在我们计算最大稳定时间步长：\n$$ \\Delta t_{crit} = \\sqrt{\\frac{1050\\ \\text{kg/m}^{2}}{5.4\\times 10^{12}\\ \\text{Pa/m}}} = \\sqrt{\\frac{1050}{5.4\\times 10^{12}}}\\ \\text{s} \\approx \\sqrt{1.9444... \\times 10^{-10}}\\ \\text{s} $$\n$$ \\Delta t_{crit} \\approx 1.394433 \\times 10^{-5}\\ \\text{s} $$\n结果要求以微秒（$\\mu$s）为单位，其中 $1\\ \\mu\\text{s} = 10^{-6}\\ \\text{s}$。\n$$ \\Delta t_{crit} \\approx 13.94433\\ \\mu\\text{s} $$\n四舍五入到四位有效数字，我们得到 $13.94\\ \\mu\\text{s}$。", "answer": "$$\\boxed{13.94}$$", "id": "2557125"}, {"introduction": "理论为我们提供了规则，但数值实验才能建立真正的理解。本实践将从解析推导过渡到计算验证。你将编写一个仿真程序，以观察 Courant-Friedrichs-Lewy (CFL) 稳定性条件的实际效果。你的任务是为一个多单元系统数值计算理论上的临界时间步长，然后分别运行稳定（$\\Delta t / \\Delta t_{\\text{crit}}  1$）、临界稳定（$\\Delta t / \\Delta t_{\\text{crit}} = 1$）和不稳定（$\\Delta t / \\Delta t_{\\text{crit}} > 1$）的仿真 [@problem_id:2557116]。这种动手验证将让你对数值不稳定性有具体的感受，并理解为何遵守CFL极限对于获得有意义的计算结果至关重要。", "problem": "考虑在区间 $\\left(0,L\\right)$ 上的无外力作用且两端均为齐次 Dirichlet 边界条件的一维线性弹性波方程。令 $u\\left(x,t\\right)$ 表示轴向位移，$\\rho$ 表示质量密度，$E$ 表示杨氏模量，$A$ 表示横截面积。其强形式为\n$$\n\\rho A\\,\\frac{\\partial^2 u}{\\partial t^2} - \\frac{\\partial}{\\partial x}\\left(EA\\,\\frac{\\partial u}{\\partial x}\\right) = 0,\\quad x\\in\\left(0,L\\right),\\ t0,\\quad u\\left(0,t\\right)=u\\left(L,t\\right)=0.\n$$\n令波速为 $c=\\sqrt{E/\\rho}$。\n\n使用标准 Galerkin 有限元方法，采用包含 $N_e$ 个双节点线性单元的均匀网格和质量集中近似，得到的半离散系统具有以下形式\n$$\n\\mathbf{M}\\,\\ddot{\\mathbf{u}}(t) + \\mathbf{K}\\,\\mathbf{u}(t) = \\mathbf{0},\n$$\n其中，在消除边界自由度后，$\\mathbf{M}\\in\\mathbb{R}^{n\\times n}$ 是对角正定矩阵，$\\mathbf{K}\\in\\mathbb{R}^{n\\times n}$ 是对称正定矩阵，而 $n=N_e-1$ 是内部自由度的数量。考虑在时间步长为 $\\Delta t$ 的均匀时间网格上定义的显式中心差分时间积分方法\n$$\n\\mathbf{u}^{k+1} = 2\\mathbf{u}^k - \\mathbf{u}^{k-1} - \\Delta t^2\\,\\mathbf{M}^{-1}\\mathbf{K}\\,\\mathbf{u}^k,\\quad k\\geq 1,\n$$\n其第一步通过以下方式计算\n$$\n\\mathbf{u}^1 = \\mathbf{u}^0 + \\Delta t\\,\\dot{\\mathbf{u}}^0 + \\frac{\\Delta t^2}{2}\\,\\ddot{\\mathbf{u}}^0,\\quad \\ddot{\\mathbf{u}}^0 = -\\mathbf{M}^{-1}\\mathbf{K}\\,\\mathbf{u}^0.\n$$\n\n你的任务是，通过使用从上述一维模型构建的规范问题，来验证显式中心差分格式的 Courant–Friedrichs–Lewy (CFL) 稳定性界限。从半离散系统和显式格式的基本定义出发，确定由无阻尼、无外力的离散系统的谱特性所决定的最大稳定时间步长。然后，为每个测试用例计算：\n- 临界时间步长 $\\Delta t_{\\text{crit}}$ (单位：秒)，\n- 比率 $r=\\Delta t/\\Delta t_{\\text{crit}}$ (无量纲)，\n- 仅从理论稳定性条件获得的预测稳定性标志 $\\in\\{0,1\\}$，\n- 通过使用显式中心差分格式进行直接模拟获得的观测稳定性标志 $\\in\\{0,1\\}$。\n\n对于观测稳定性，使用以下规范初始条件来创建最坏情况：将初始位移 $\\mathbf{u}^0$ 设置为与矩阵对 $\\left(\\mathbf{K},\\mathbf{M}\\right)$ 的最大广义特征值相关联的离散特征向量成正比（即最高离散频率模式），并将其归一化为单位 $\\mathbf{M}$-范数，同时设置初始速度 $\\dot{\\mathbf{u}}^0=\\mathbf{0}$。对格式进行指定步数的时间演化，如果在整个模拟时间内位移的最大 $\\mathbf{M}$-范数不超过初始 $\\mathbf{M}$-范数的预设阈值倍数，则将该次运行声明为“观测稳定”。使用等于 $20$ 的阈值因子（无量纲）。所有物理量必须使用国际单位制表示：$L$ 的单位为米，时间的单位为秒，$c$ 的单位为米/秒。以秒为单位报告 $\\Delta t_{\\text{crit}}$。\n\n实现以下测试套件。在所有情况下，取 $A=1$ (平方米)，$E=1$ (帕斯卡)，并选择 $\\rho=E/c^2$ 以使波速恰好为 $c$。在 $x=0$ 和 $x=L$ 处施加齐次 Dirichlet 边界条件。对于每种情况，构建均匀网格，组装 $\\mathbf{K}$ 和集中质量矩阵 $\\mathbf{M}$，计算离散谱以确定临界时间步长，按指示选择 $\\Delta t$，并模拟指定的步数。\n\n- 情况 $\\left(1\\right)$：$L=1$ (米)，$N_e=80$, $c=200$ (米/秒)，选择 $\\Delta t=0.8\\,\\Delta t_{\\text{crit}}$，并模拟 $4000$ 个时间步。\n- 情况 $\\left(2\\right)$：$L=1$ (米)，$N_e=80$, $c=200$ (米/秒)，选择 $\\Delta t=1.0\\,\\Delta t_{\\text{crit}}$，并模拟 $2000$ 个时间步。\n- 情况 $\\left(3\\right)$：$L=1$ (米)，$N_e=80$, $c=200$ (米/秒)，选择 $\\Delta t=1.05\\,\\Delta t_{\\text{crit}}$，并模拟 $800$ 个时间步。\n- 情况 $\\left(4\\right)$：$L=1$ (米)，$N_e=160$, $c=200$ (米/秒)，选择 $\\Delta t=0.8\\,\\Delta t_{\\text{crit}}$，并模拟 $4000$ 个时间步。\n\n你的程序必须：\n- 为由双节点线性单元组成的均匀网格组装 $\\mathbf{K}$ 和 $\\mathbf{M}$，\n- 通过消除边界自由度来施加 Dirichlet 边界条件，\n- 计算 $\\left(\\mathbf{K},\\mathbf{M}\\right)$ 的最大广义特征值，从而得到相应的最高离散角频率，\n- 确定理论临界时间步长和预测稳定性标志，\n- 构建最高频率的特征向量并将其归一化为单位 $\\mathbf{M}$-范数，\n- 在初始速度为零的情况下，运行显式中心差分格式，模拟指定的步数，\n- 在运行期间计算位移的最大 $\\mathbf{M}$-范数，并使用等于 $20$ 的阈值因子确定观测稳定性标志。\n\n每个案例必须生成的数值输出为：\n- $\\Delta t_{\\text{crit}}$ (单位：秒，浮点数)，\n- $r=\\Delta t/\\Delta t_{\\text{crit}}$ (浮点数)，\n- 预测稳定性标志，如果理论上稳定则为 $1$，否则为 $0$，\n- 观测稳定性标志，如果模拟被观测为稳定则为 $1$，否则为 $0$。\n\n最终输出格式：你的程序应生成单行输出，其中包含一个 Python 风格的列表，该列表由四个列表组成（每个测试用例一个），每个内部列表的形式为 $\\left[\\Delta t_{\\text{crit}}, r, \\text{predicted}, \\text{observed}\\right]$。例如，输出应如下所示\n$$\n\\left[\\left[d_1,r_1,p_1,o_1\\right],\\left[d_2,r_2,p_2,o_2\\right],\\left[d_3,r_3,p_3,o_3\\right],\\left[d_4,r_4,p_4,o_4\\right]\\right],\n$$\n其中每个 $d_i$ 的单位为秒，每个 $r_i$、$p_i$、$o_i$ 均为无量纲。程序必须完全自包含，且不得读取任何输入。", "solution": "该问题要求验证应用于通过有限元方法离散化的一维波动方程的显式中心差分时间积分格式的 Courant–Friedrichs–Lewy (CFL) 稳定性条件。解决方案是通过一种系统性的、基于原理的方法来建立的。\n\n首先，我们建立理论稳定性判据。半离散系统由无阻尼、无外力的常微分方程组 $\\mathbf{M}\\,\\ddot{\\mathbf{u}} + \\mathbf{K}\\,\\mathbf{u} = \\mathbf{0}$ 给出。该系统的显式中心差分格式为\n$$\n\\mathbf{u}^{k+1} = 2\\mathbf{u}^k - \\mathbf{u}^{k-1} - \\Delta t^2\\,\\mathbf{M}^{-1}\\mathbf{K}\\,\\mathbf{u}^k.\n$$\n为分析此格式的稳定性，我们考虑一个单一的振荡模式，其中位移向量形式为 $\\mathbf{u}(t) = \\mathbf{v}\\,e^{i\\omega t}$。将此代入半离散方程，得到广义特征值问题 $\\mathbf{K}\\mathbf{v} = \\omega^2\\mathbf{M}\\mathbf{v}$，其中 $\\omega$ 是离散系统的自然角频率，$\\mathbf{v}$ 是相应的振型。令 $\\lambda = \\omega^2$ 为一个特征值。我们寻求形式为 $\\mathbf{u}^k = g^k\\mathbf{v}$ 的数值解，其中 $g$ 是一个复数放大因子。将此代入差分方程，得到关于 $g$ 的特征二次方程：\n$$\ng^2 - (2 - \\Delta t^2 \\lambda)g + 1 = 0.\n$$\n为使格式稳定，该方程根的模不得超过 1，即 $|g| \\le 1$。如果根是共轭复数，则此条件得以满足，这要求该二次方程的判别式为非正：\n$$\n(2 - \\Delta t^2 \\lambda)^2 - 4 \\le 0.\n$$\n该不等式简化为 $-2 \\le 2 - \\Delta t^2 \\lambda \\le 2$，进而得到 $0 \\le \\Delta t^2 \\lambda \\le 4$，或 $\\Delta t \\sqrt{\\lambda} \\le 2$。由于此条件必须对系统的所有模式都成立，因此稳定性由最高频率的模式 $\\omega_{\\max} = \\sqrt{\\lambda_{\\max}}$ 决定。因此，稳定性条件（也称为该格式的 CFL 条件）为：\n$$\n\\Delta t \\le \\frac{2}{\\omega_{\\max}} = \\frac{2}{\\sqrt{\\lambda_{\\max}}}.\n$$\n临界时间步长是最大允许时间步长，即 $\\Delta t_{\\text{crit}} = 2/\\omega_{\\max}$。当时间步长 $\\Delta t  \\Delta t_{\\text{crit}}$ 时，将导致最高频率模式的数值解指数增长，从而引发不稳定。如果比率 $r = \\Delta t/\\Delta t_{\\text{crit}} \\le 1$，则理论预测的稳定性标志为 $1$，否则为 $0$。\n\n接下来，我们使用有限元方法构建系统矩阵 $\\mathbf{M}$ 和 $\\mathbf{K}$。长度为 $L$ 的域被离散化为 $N_e$ 个均匀的双节点线性单元，每个单元的长度为 $h = L/N_e$。对于杨氏模量为 $E$、横截面积为 $A$、质量密度为 $\\rho$ 的单元，其单元刚度矩阵 $\\mathbf{k}^e$ 和集中质量矩阵 $\\mathbf{m}^e$ 分别为：\n$$\n\\mathbf{k}^e = \\frac{EA}{h}\n\\begin{pmatrix}\n1  -1 \\\\\n-1  1\n\\end{pmatrix}, \\quad\n\\mathbf{m}^e = \\frac{\\rho A h}{2}\n\\begin{pmatrix}\n1  0 \\\\\n0  1\n\\end{pmatrix}.\n$$\n整个网格的全局矩阵是通过对每个单元的贡献求和来组装的。齐次 Dirichlet 边界条件 $u(0,t)=u(L,t)=0$ 是通过消除与边界节点（节点 $0$ 和节点 $N_e$）对应的行和列来施加的。这会得到大小为 $n \\times n$ 的缩减系统矩阵 $\\mathbf{K}$ 和 $\\mathbf{M}$，其中 $n = N_e-1$ 是内部自由度的数量。得到的质量矩阵 $\\mathbf{M}$ 是对角矩阵，其元素为 $M_{ii} = \\rho A h$，而刚度矩阵 $\\mathbf{K}$ 是对称三对角矩阵。\n\n数值任务的核心是求解广义特征值问题 $\\mathbf{K}\\mathbf{v} = \\lambda\\mathbf{M}\\mathbf{v}$ 的最大特征值 $\\lambda_{\\max}$。这可以通过使用数值特征值求解器来完成。在已知 $\\lambda_{\\max}$ 的情况下，我们计算 $\\omega_{\\max} = \\sqrt{\\lambda_{\\max}}$ 和 $\\Delta t_{\\text{crit}} = 2/\\omega_{\\max}$。\n\n最后，为了经验性地观察稳定性，我们执行直接时间积分。为了创建一种能够最大程度激发潜在不稳定模式的最坏情况，初始位移 $\\mathbf{u}^0$ 被设置为与 $\\lambda_{\\max}$ 对应的特征向量 $\\mathbf{v}_{\\max}$。该特征向量被缩放以具有单位 $\\mathbf{M}$-范数，即 $\\|\\mathbf{u}^0\\|_{\\mathbf{M}} = \\sqrt{(\\mathbf{u}^0)^T\\mathbf{M}\\mathbf{u}^0} = 1$。初始速度设置为零，即 $\\dot{\\mathbf{u}}^0 = \\mathbf{0}$。时间演化使用中心差分格式计算，并从特殊的第一步开始：\n$$\n\\mathbf{u}^1 = \\mathbf{u}^0 - \\frac{\\Delta t^2}{2}\\mathbf{M}^{-1}\\mathbf{K}\\,\\mathbf{u}^0.\n$$\n在指定步数的模拟过程中，我们监控位移的 $\\mathbf{M}$-范数 $\\|\\mathbf{u}^k\\|_{\\mathbf{M}}$。如果观测到的最大范数未超过初始范数的给定阈值倍数（此处为因子 $20$），则该模拟被声明为“观测稳定”（标志 $1$）。如果范数超过此阈值，则模拟被声明为不稳定（标志 $0$）。这个宽松的阈值可以轻松区分稳定运行的有界响应和不稳定运行的指数增长。对于问题陈述中指定的每个测试用例，都重复此过程。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import eigh\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite for CFL stability verification.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (L, Ne, c, r_target, num_steps)\n        (1.0, 80, 200.0, 0.8, 4000),\n        (1.0, 80, 200.0, 1.0, 2000),\n        (1.0, 80, 200.0, 1.05, 800),\n        (1.0, 160, 200.0, 0.8, 4000),\n    ]\n\n    stability_threshold_factor = 20.0\n    results = []\n\n    for case in test_cases:\n        L, Ne, c, r_target, num_steps = case\n        \n        # Setup physical and mesh parameters\n        E = 1.0\n        A = 1.0\n        rho = E / c**2\n        h = L / Ne\n        n_dof = Ne - 1\n\n        # Assemble stiffness (K) and lumped mass (M) matrices for interior DOFs\n        \n        # M is a diagonal matrix, stored as a 1D array of its diagonal entries\n        # M_ii = rho * A * h for each of the n_dof interior nodes\n        M_diag = np.full(n_dof, rho * A * h)\n        \n        # K is a tridiagonal matrix\n        # Diagonal entries: 2*E*A/h\n        # Off-diagonal entries: -E*A/h\n        main_diag_K = np.full(n_dof, 2 * E * A / h)\n        off_diag_K = np.full(n_dof - 1, -E * A / h)\n        K = np.diag(main_diag_K) + np.diag(off_diag_K, k=1) + np.diag(off_diag_K, k=-1)\n\n        # Solve the generalized eigenvalue problem: K v = lambda M v\n        # Using scipy.linalg.eigh for symmetric matrices. We pass M as a full diagonal matrix.\n        eigenvalues, eigenvectors = eigh(K, np.diag(M_diag))\n        \n        # The largest eigenvalue determines the stability limit\n        lambda_max = eigenvalues[-1]\n        \n        # The highest discrete angular frequency\n        omega_max = np.sqrt(lambda_max)\n        \n        # Compute the theoretical critical time step\n        dt_crit = 2.0 / omega_max\n\n        # --- Predicted Stability ---\n        # The chosen time step for the simulation\n        dt = r_target * dt_crit\n        # Predicted stability flag is 1 if dt = dt_crit (i.e., r_target = 1.0)\n        predicted_stability = 1 if r_target = 1.0 else 0\n        \n        # --- Observed Stability Simulation ---\n        # Set initial conditions based on the highest frequency mode\n        # The eigenvector corresponding to lambda_max\n        v_max = eigenvectors[:, -1]\n        \n        # Normalize the initial displacement vector u0 to have unit M-norm\n        m_norm_v_max_sq = v_max.T @ (M_diag * v_max)  # M is diagonal\n        u0 = v_max / np.sqrt(m_norm_v_max_sq)\n        \n        # Initial velocity is zero\n        udot0 = np.zeros(n_dof)\n\n        # Pre-calculate matrix for the update step to save computation\n        # Since M is diagonal, its inverse is simple\n        inv_M_diag = 1.0 / M_diag\n        C = dt**2 * (inv_M_diag[:, np.newaxis] * K) # Efficient since inv_M is diagonal\n\n        # First step of central difference scheme (special formula)\n        ddot0 = -(inv_M_diag * (K @ u0))\n        u1 = u0 + dt * udot0 + (dt**2 / 2.0) * ddot0\n        \n        u_prev = u0\n        u_curr = u1\n        \n        # Initial M-norm is 1 by normalization\n        max_m_norm_u = 1.0\n\n        # Main time-stepping loop\n        for k in range(1, num_steps):\n            # Central difference update\n            u_next = 2 * u_curr - u_prev - C @ u_curr\n            \n            u_prev, u_curr = u_curr, u_next\n            \n            # Calculate M-norm of the current displacement\n            current_m_norm_u = np.sqrt(u_curr.T @ (M_diag * u_curr))\n            \n            if current_m_norm_u > max_m_norm_u:\n                max_m_norm_u = current_m_norm_u\n            \n            # Early exit if solution has clearly blown up to avoid overflow/wasted computation\n            if not np.isfinite(max_m_norm_u) or max_m_norm_u > stability_threshold_factor * 10:\n                break\n        \n        # Determine observed stability based on the specified threshold\n        observed_stability = 1 if max_m_norm_u = stability_threshold_factor else 0\n        \n        # Store results for this case\n        results.append([dt_crit, r_target, predicted_stability, observed_stability])\n\n    # Final print statement in the exact required format.\n    print(results)\n\nsolve()\n```", "id": "2557116"}, {"introduction": "现实世界中的工程问题很少是线性的；材料属性常常会随着结构的变形而改变。这个高级实践将探讨非线性对显式动力学稳定性的关键影响。你将为一个具有非线性应力-应变关系的杆实现一个仿真，其中波速——因而临界时间步长——不再是一个常数，而是依赖于当前的应变状态 [@problem_id:2557122]。这要求你实现一种自适应时间步长策略，这是在计算力学中准确高效地求解复杂非线性动力学问题的一项强大且至关重要的技术。", "problem": "考虑一个一维小应变弹性动力学初边值问题，研究对象是一根长度为 $L$、横截面积恒为 $A$、质量密度为 $\\rho$ 的均匀杆。未知位移场 $u(x,t)$ 满足无体力情况下的单空间维度线性动量守恒，以及应力 $\\sigma$ 和应变 $\\varepsilon=\\partial u/\\partial x$ 之间的非线性本构关系。具体而言，本构律为 $\\sigma(\\varepsilon)=E\\,\\varepsilon+\\alpha\\,\\varepsilon^{3}$，其中 $E$ 是一个恒定的参考模量，$\\alpha$ 是控制非线性的常系数。假设切线模量 $E_{\\mathrm{t}}(\\varepsilon)=\\mathrm{d}\\sigma/\\mathrm{d}\\varepsilon=E+3\\alpha\\,\\varepsilon^{2}$ 在遇到的所有应变下都保持严格为正，以确保问题保持双曲型。杆具有齐次 Dirichlet 边界条件 $u(0,t)=0$ 和 $u(L,t)=0$，以及初始条件 $u(x,0)=u_{\\mathrm{amp}}\\sin(\\pi x/L)$ 和 $\\dot{u}(x,0)=0$，给定振幅为 $u_{\\mathrm{amp}}$。\n\n使用 $N$ 个均匀的线性有限元对杆进行离散化，并采用集中质量近似。使用显式中心差分时间积分方案将半离散系统从时间 $t_{n}$ 推进到 $t_{n+1}$，并通过 Courant–Friedrichs–Lewy (CFL) 条件（首次使用时定义缩写）来控制稳定性。瞬时时间步长 $\\Delta t_{n}$ 必须选择为固定安全因子 $s$（其中 $0s1$）乘以根据当前状态下非线性材料线性化计算出的最小单元信号传播时间。在所有时刻都强施加 Dirichlet 边界条件。未施加外部力。\n\n您的任务是：\n\n- 从一维动量守恒定律 $\\rho\\,\\ddot{u}=\\partial\\sigma/\\partial x$ 和给定的本构律出发，构建带有集中质量的标准线性有限元半离散方程，以及在当前位移 $u_{n}$ 下由单元贡献组装而成的相应内力向量。唯一的非线性是通过在当前单元应变下计算应力而引入的。\n- 以一种适用于每步可变时间步长 $\\Delta t_{n}$ 的形式实现显式中心差分更新，并且对于光滑解，该方法在时间上是二阶精确的。\n- 在每个步骤中，通过应力-应变曲线的斜率从当前状态确定瞬时单元线性波速，并如上所述选择 $\\Delta t_{n}$ 以满足带有安全因子 $s$ 的 Courant–Friedrichs–Lewy (CFL) 稳定性限制。使用此 $\\Delta t_{n}$ 更新速度和位移。\n- 在整个模拟时域 $[0,T]$ 内，跟踪遇到的最小临界时间步长，该步长定义为最小单元信号传播时间（不含安全因子 $s$）在时间上的下确界。以秒为单位报告此最小临界时间步长。\n\n使用以下测试套件，其中所有量均应在国际单位制（SI）下解释。对于每个案例，使用给定的安全因子 $s$ 模拟到指定的最终时间 $T$，并以秒为单位输出遇到的最小临界时间步长（不含安全因子）：\n\n- 案例 1（线性类钢响应，中等细化网格）：$E=2.10\\times 10^{11}$，$\\alpha=0$，$\\rho=7.80\\times 10^{3}$，$L=1$，$A=1$，$N=50$，$T=2.0\\times 10^{-4}$，$u_{\\mathrm{amp}}=1.0\\times 10^{-6}$，$s=0.9$。\n- 案例 2（非线性硬化，更细网格）：$E=1.0\\times 10^{7}$，$\\alpha=1.0\\times 10^{12}$，$\\rho=1.0\\times 10^{3}$，$L=1$，$A=1$，$N=100$，$T=2.0\\times 10^{-3}$，$u_{\\mathrm{amp}}=5.0\\times 10^{-3}$，$s=0.9$。\n- 案例 3（非线性软化，切线仍为正，中等网格）：$E=1.0\\times 10^{7}$，$\\alpha=-5.0\\times 10^{10}$，$\\rho=1.0\\times 10^{3}$，$L=1$，$A=1$，$N=80$，$T=1.0\\times 10^{-3}$，$u_{\\mathrm{amp}}=1.0\\times 10^{-3}$，$s=0.9$。\n- 案例 4（粗网格，线性）：$E=1.0\\times 10^{9}$，$\\alpha=0$，$\\rho=2.0\\times 10^{3}$，$L=1$，$A=1$，$N=2$，$T=1.0\\times 10^{-3}$，$u_{\\mathrm{amp}}=1.0\\times 10^{-4}$，$s=0.9$。\n\n您的程序必须生成单行输出，其中包含四个结果，格式为逗号分隔的 Python 浮点数列表（单位：秒），并按上述案例顺序排列，例如 $[\\mathrm{result}_{1},\\mathrm{result}_{2},\\mathrm{result}_{3},\\mathrm{result}_{4}]$。", "solution": "问题陈述是一个适定的一维非线性弹性动力学初边值问题。它具有科学依据，内部一致，并包含构建数值解所需的所有必要信息。物理参数是合理的，指定的数值方法——带集中质量的有限元空间离散化和显式中心差分时间积分——是解决此类问题的标准方法。因此，该问题被认为是有效的，并将提供一个解。\n\n任务是模拟具有非线性应力-应变关系的杆的动态响应，并找出模拟过程中遇到的、由 Courant–Friedrichs–Lewy (CFL) 稳定性条件控制的最小临界时间步长。\n\n控制方程是线性动量守恒：\n$$\n\\rho \\frac{\\partial^2 u}{\\partial t^2} = \\frac{\\partial \\sigma}{\\partial x}\n$$\n其中 $\\rho$ 是质量密度，$u(x,t)$ 是轴向位移，$\\sigma$ 是轴向应力。本构律为非线性：\n$$\n\\sigma(\\varepsilon) = E\\,\\varepsilon + \\alpha\\,\\varepsilon^3\n$$\n应变为 $\\varepsilon = \\partial u / \\partial x$。\n\n为了使用有限元法（FEM）推导运动的半离散方程，我们首先建立弱形式。我们将控制方程乘以一个满足齐次 Dirichlet 边界条件（即 $v(0)=v(L)=0$）的检验函数 $v(x)$，并在域 $[0, L]$ 上积分：\n$$\n\\int_0^L v \\left( \\rho \\frac{\\partial^2 u}{\\partial t^2} \\right) A \\,dx = \\int_0^L v \\left( \\frac{\\partial \\sigma}{\\partial x} \\right) A \\,dx\n$$\n此处，$A$ 是恒定的横截面积。总力是关键，所以我们考虑力这样的量，例如 $\\int \\sigma A \\, dx$。对右侧项应用分部积分法得到：\n$$\n\\int_0^L v \\rho A \\ddot{u} \\,dx = [v A \\sigma]_0^L - \\int_0^L \\frac{\\partial v}{\\partial x} A \\sigma \\,dx\n$$\n由于 $v(0) = v(L) = 0$，边界项 $[v A \\sigma]_0^L$ 为零。因此弱形式为：\n$$\n\\int_0^L v \\rho A \\ddot{u} \\,dx + \\int_0^L \\frac{\\partial v}{\\partial x} A \\sigma\\left(\\frac{\\partial u}{\\partial x}\\right) \\,dx = 0\n$$\n\n我们将域离散为 $N$ 个长度为 $h=L/N$ 的均匀线性有限元。位移场近似为 $u(x,t) \\approx \\sum_{i=0}^N N_i(x) d_i(t)$，其中 $N_i(x)$ 是线性“帽子”基函数，$d_i(t)$ 是节点位移。将此近似代入弱形式，得到半离散方程组：\n$$\n\\mathbf{M}\\ddot{\\mathbf{d}}(t) + \\mathbf{f}_{\\text{int}}(\\mathbf{d}(t)) = \\mathbf{0}\n$$\n其中 $\\mathbf{d}$ 是节点位移向量，$\\mathbf{M}$ 是质量矩阵，$\\mathbf{f}_{\\text{int}}$ 是内力向量。\n\n问题指定了集中质量近似。对于均匀网格，内部节点 $i$ 的质量是相邻两个单元质量一半的总和，即 $m_i = \\rho A h$（对于 $i=1, \\dots, N-1$）。边界节点获得此质量的一半，即 $m_0=m_N=\\rho A h/2$。质量矩阵 $\\mathbf{M}$ 是对角矩阵，其对角线元素为这些值。\n\n内力向量 $\\mathbf{f}_{\\text{int}}$ 由单元贡献组装而成。对于连接节点 $i$ 和 $i+1$ 的线性单元 $e$，其应变 $\\varepsilon^{(e)}$ 是恒定的：\n$$\n\\varepsilon^{(e)} = \\frac{d_{i+1} - d_i}{h}\n$$\n单元内的应力 $\\sigma^{(e)}$ 也是恒定的：\n$$\n\\sigma^{(e)} = E\\varepsilon^{(e)} + \\alpha(\\varepsilon^{(e)})^3\n$$\n该单元对节点 $i$ 和 $i+1$ 的内力贡献为 $\\begin{bmatrix} -A\\sigma^{(e)} \\\\ A\\sigma^{(e)} \\end{bmatrix}$。内部节点 $i$ 上的总内力是其左侧单元（单元 $i-1$）和右侧单元（单元 $i$）的力之和：\n$$\nf_{\\text{int}, i} = A\\sigma^{(i-1)} - A\\sigma^{(i)}\n$$\n其中 $\\sigma^{(i-1)}$ 是节点 $i-1$ 和 $i$ 之间单元的应力，$\\sigma^{(i)}$ 是节点 $i$ 和 $i+1$ 之间单元的应力。\n\n对于时间积分，我们使用显式中心差分格式，特别是其蛙跳（leapfrog）变体，该格式是二阶精确的，并且适用于可变时间步长。设 $\\mathbf{d}_n$、$\\mathbf{v}_n$ 和 $\\mathbf{a}_n$ 分别为时间 $t_n$ 的位移、速度和加速度向量。速度在半时间步 $t_{n \\pm 1/2}$ 处计算。更新过程如下：\n1.  更新速度：$\\mathbf{v}_{n+1/2} = \\mathbf{v}_{n-1/2} + \\mathbf{a}_n \\Delta t_n$\n2.  更新位移：$\\mathbf{d}_{n+1} = \\mathbf{d}_n + \\mathbf{v}_{n+1/2} \\Delta t_n$\n其中 $\\mathbf{a}_n = -\\mathbf{M}^{-1}\\mathbf{f}_{\\text{int}}(\\mathbf{d}_n)$。该格式在第一步需要一个“启动”过程，因为我们已知 $\\mathbf{d}_0$ 和 $\\mathbf{v}_0$。我们首先根据 $\\mathbf{d}_0$ 计算 $\\mathbf{a}_0$ 并确定初始时间步长 $\\Delta t_0$。然后通过后向步长找到第一个半时间步的速度：$\\mathbf{v}_{-1/2} = \\mathbf{v}_0 - \\mathbf{a}_0 \\Delta t_0/2$。\n\n这种显式格式的稳定性由 Courant–Friedrichs–Lewy (CFL) 条件控制，该条件要求数值依赖域必须包含物理依赖域。对于一维波动方程，这意味着信息在单个时间步长 $\\Delta t$ 内传播的距离不能超过一个单元长度 $h$：\n$$\n\\Delta t \\le \\frac{h}{c}\n$$\n其中 $c$ 是波传播速度。在我们的非线性材料中，波速取决于切线模量 $E_t = d\\sigma/d\\varepsilon$：\n$$\nc(\\varepsilon) = \\sqrt{\\frac{E_t(\\varepsilon)}{\\rho}} = \\sqrt{\\frac{E + 3\\alpha\\varepsilon^2}{\\rho}}\n$$\n由于应变 $\\varepsilon$ 在不同单元间变化，并随时间而改变，因此波速在空间和时间上也是可变的。为确保整个系统的稳定性，时间步长 $\\Delta t_n$ 必须基于时间 $t_n$ 时任何单元中存在的最大波速来选择：\n$$\nc_{\\max, n} = \\max_{e \\in \\{1,\\dots,N\\}} \\left\\{ c^{(e)}(\\varepsilon_n^{(e)}) \\right\\}\n$$\n在时间 $t_n$ 的临界时间步长为 $\\Delta t_{\\text{crit}, n} = h / c_{\\max, n}$。实际采用的时间步长为 $\\Delta t_n = s \\cdot \\Delta t_{\\text{crit}, n}$，其中 $s$ 是一个安全因子（$0  s  1$）。\n\n总体算法如下：\n1.  初始化节点位置、集中质量 $\\mathbf{m}$、初始位移 $\\mathbf{d}_0$ 和初始速度 $\\mathbf{v}_0$。\n2.  计算初始加速度 $\\mathbf{a}_0 = -\\mathbf{M}^{-1}\\mathbf{f}_{\\text{int}}(\\mathbf{d}_0)$。\n3.  根据 $\\mathbf{d}_0$ 的应变计算初始临界时间步长 $\\Delta t_{\\text{crit}, 0}$。令 $\\Delta t_0 = s \\cdot \\Delta t_{\\text{crit}, 0}$。\n4.  执行启动步骤：$\\mathbf{v}_{-1/2} = \\mathbf{v}_0 - \\mathbf{a}_0 \\Delta t_0/2$。\n5.  初始化一个列表，用于存储所有遇到的临界时间步长，以 $\\Delta t_{\\text{crit}, 0}$ 开始。\n6.  对时间步 $n=0, 1, 2, \\dots$ 进行循环，直到总时间 $t$ 达到最终时间 $T$：\n    a. 根据 $\\mathbf{d}_n$ 的应变确定当前最大波速 $c_{\\max, n}$。\n    b. 计算临界时间步长 $\\Delta t_{\\text{crit}, n} = h / c_{\\max, n}$ 并记录下来。\n    c. 设置时间步长 $\\Delta t_n = s \\cdot \\Delta t_{\\text{crit}, n}$，如有必要可进行调整以确保在 $T$ 时刻精确结束。\n    d. 将速度更新到下一个半时间步：$\\mathbf{v}_{n+1/2} = \\mathbf{v}_{n-1/2} + \\mathbf{a}_n \\Delta t_n$。\n    e. 将位移更新到下一个完整时间步：$\\mathbf{d}_{n+1} = \\mathbf{d}_n + \\mathbf{v}_{n+1/2} \\Delta t_n$。\n    f. 强施加 Dirichlet 边界条件：$d_{0, n+1} = 0$, $d_{N, n+1} = 0$。\n    g. 计算新的内力 $\\mathbf{f}_{\\text{int}}(\\mathbf{d}_{n+1})$ 和加速度 $\\mathbf{a}_{n+1}$。强施加 $a_{0, n+1}=a_{N, n+1}=0$。\n    h. 推进时间 $t_{n+1} = t_n + \\Delta t_n$。\n7.  模拟结束后，报告所记录的临界时间步长列表中的最小值。\n该过程将为四个测试案例中的每一个实施。", "answer": "```python\nimport numpy as np\n\ndef run_simulation(E, alpha, rho, L, A, N, T, u_amp, s):\n    \"\"\"\n    Solves the 1D nonlinear elastodynamics problem for one set of parameters.\n\n    Args:\n        E (float): Reference modulus.\n        alpha (float): Nonlinearity coefficient.\n        rho (float): Mass density.\n        L (float): Bar length.\n        A (float): Cross-sectional area.\n        N (int): Number of finite elements.\n        T (float): Final simulation time.\n        u_amp (float): Amplitude of initial displacement.\n        s (float): CFL safety factor.\n\n    Returns:\n        float: The minimum encountered critical time step.\n    \"\"\"\n    \n    # 1. Discretization and Material Properties\n    h = L / N\n    num_nodes = N + 1\n    x_nodes = np.linspace(0, L, num_nodes)\n\n    # Lumped mass vector\n    m_lumped = np.full(num_nodes, rho * A * h)\n    m_lumped[0] = rho * A * h / 2.0\n    m_lumped[-1] = rho * A * h / 2.0\n    \n    # Pre-calculate inverse of mass for acceleration computation\n    m_inv = 1.0 / m_lumped\n    m_inv[0] = 0.0  # Boundary nodes have prescribed motion (zero acceleration)\n    m_inv[-1] = 0.0\n\n    # Helper functions for acceleration and wave speed\n    def compute_acceleration(d_vec):\n        strains = (d_vec[1:] - d_vec[:-1]) / h\n        stresses = E * strains + alpha * strains**3\n        \n        f_int = np.zeros(num_nodes)\n        # Internal forces on interior nodes\n        f_int[1:-1] = A * (stresses[:-1] - stresses[1:])\n        \n        return -f_int * m_inv\n\n    def compute_max_wavespeed(d_vec):\n        strains = (d_vec[1:] - d_vec[:-1]) / h\n        # Tangent modulus E_t = E + 3*alpha*epsilon^2\n        tangent_moduli = E + 3.0 * alpha * strains**2\n        \n        if np.any(tangent_moduli = 0):\n            # This check is for robustness; problem statement assumes E_t > 0\n            raise ValueError(\"Non-positive tangent modulus encountered. Problem is no longer hyperbolic.\")\n            \n        wave_speeds_sq = tangent_moduli / rho\n        return np.sqrt(np.max(wave_speeds_sq))\n\n    # 2. Initial Conditions\n    d = u_amp * np.sin(np.pi * x_nodes / L)\n    v = np.zeros(num_nodes)\n    \n    d[0], d[-1] = 0.0, 0.0 # B.C.\n\n    # 3. Kick-start the central difference scheme\n    a = compute_acceleration(d)\n    \n    c_max_initial = compute_max_wavespeed(d)\n    dt_crit_initial = h / c_max_initial\n    dt = s * dt_crit_initial\n\n    # v at step -1/2 for the leapfrog integrator\n    v_half = v - a * dt / 2.0\n    \n    # 4. Time-stepping loop\n    t = 0.0\n    critical_dt_history = [dt_crit_initial]\n    \n    a_curr = a\n\n    while t  T:\n        # Determine current time step\n        c_max = compute_max_wavespeed(d)\n        dt_crit = h / c_max\n        critical_dt_history.append(dt_crit)\n        \n        dt = s * dt_crit\n        if t + dt > T:\n            dt = T - t\n\n        # Leapfrog integration step\n        v_half = v_half + a_curr * dt\n        d = d + v_half * dt\n        \n        # Enforce boundary conditions strongly\n        d[0], d[-1] = 0.0, 0.0\n\n        a_curr = compute_acceleration(d)\n        t += dt\n\n    return min(critical_dt_history)\n\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # (E, alpha, rho, L, A, N, T, u_amp, s)\n    test_cases = [\n        (2.10e11, 0.0, 7.80e3, 1.0, 1.0, 50, 2.0e-4, 1.0e-6, 0.9),\n        (1.0e7, 1.0e12, 1.0e3, 1.0, 1.0, 100, 2.0e-3, 5.0e-3, 0.9),\n        (1.0e7, -5.0e10, 1.0e3, 1.0, 1.0, 80, 1.0e-3, 1.0e-3, 0.9),\n        (1.0e9, 0.0, 2.0e3, 1.0, 1.0, 2, 1.0e-3, 1.0e-4, 0.9),\n    ]\n\n    results = []\n    for case in test_cases:\n        result = run_simulation(*case)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2557122"}]}