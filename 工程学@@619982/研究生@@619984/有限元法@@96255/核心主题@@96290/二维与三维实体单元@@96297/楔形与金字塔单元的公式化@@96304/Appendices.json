{"hands_on_practices": [{"introduction": "我们的第一个实践是实现任何新有限元的基石练习。我们将从第一性原理出发，为线性楔形单元推导应变-位移矩阵，即所谓的 $B$ 矩阵。这个过程 [@problem_id:2611736] 至关重要，因为它将抽象的形函数与单元内部具体的物理应变联系起来，构成了任何应力分析模拟中的关键环节。", "problem": "考虑在有限元法 (FEM) 中用于三维小应变弹性力学问题的等参线性楔形（三棱柱）有限元。设自然坐标为 $(\\xi,\\eta,\\zeta)$，其中 $(\\xi,\\eta)$ 是参考三角形上的面积（重心）坐标，满足 $\\xi \\ge 0$，$\\eta \\ge 0$，$\\xi+\\eta \\le 1$，而 $\\zeta \\in [-1,1]$ 是厚度坐标。使用三角形面积坐标 $L_1=\\xi$，$L_2=\\eta$，$L_3=1-\\xi-\\eta$，将线性楔形单元的形函数定义为\n$$\nN_1 = L_1 \\frac{1-\\zeta}{2},\\quad\nN_2 = L_2 \\frac{1-\\zeta}{2},\\quad\nN_3 = L_3 \\frac{1-\\zeta}{2},\\quad\nN_4 = L_1 \\frac{1+\\zeta}{2},\\quad\nN_5 = L_2 \\frac{1+\\zeta}{2},\\quad\nN_6 = L_3 \\frac{1+\\zeta}{2}.\n$$\n物理（笛卡尔）节点坐标给定如下\n- 节点 $1$：$(x_1,y_1,z_1)=(1,0,0)$，\n- 节点 $2$：$(x_2,y_2,z_2)=(0,1,0)$，\n- 节点 $3$：$(x_3,y_3,z_3)=(0,0,0)$，\n- 节点 $4$：$(x_4,y_4,z_4)=(1,0,1)$，\n- 节点 $5$：$(x_5,y_5,z_5)=(0,1,1)$，\n- 节点 $6$：$(x_6,y_6,z_6)=(0,0,1)$。\n\n任务：\n1) 仅从上述形函数定义和等参映射 $x(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{6} N_i x_i$，$y(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{6} N_i y_i$，$z(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{6} N_i z_i$ 出发，计算所有 $i \\in \\{1,\\dots,6\\}$ 的自然坐标导数 $\\partial N_i/\\partial \\xi$、$\\partial N_i/\\partial \\eta$ 和 $\\partial N_i/\\partial \\zeta$。\n2) 使用小应变张量的定义 $\\varepsilon=\\tfrac{1}{2}(\\nabla \\mathbf{u}+(\\nabla \\mathbf{u})^{\\top})$以及通过等参映射的雅可比矩阵关联 $(x,y,z)$ 和 $(\\xi,\\eta,\\zeta)$ 导数的链式法则，组装单元运动学矩阵 $B(\\xi,\\eta,\\zeta)$，使得 $\\boldsymbol{\\varepsilon} = B \\mathbf{d}$。其中，节点位移向量的顺序为 $\\mathbf{d}=[u_1\\ v_1\\ w_1\\ u_2\\ v_2\\ w_2\\ u_3\\ v_3\\ w_3\\ u_4\\ v_4\\ w_4\\ u_5\\ v_5\\ w_5\\ u_6\\ v_6\\ w_6]^{\\top}$，工程应变向量的顺序为 $[\\varepsilon_{xx}\\ \\varepsilon_{yy}\\ \\varepsilon_{zz}\\ \\gamma_{xy}\\ \\gamma_{yz}\\ \\gamma_{zx}]^{\\top}$。\n\n以 $\\xi$、$\\eta$ 和 $\\zeta$ 表示的 $6 \\times 18$ 矩阵 $B(\\xi,\\eta,\\zeta)$ 的单一紧凑解析表达式作为您的最终答案。不需要进行数值四舍五入。最终答案中不要包含单位。", "solution": "在尝试求解之前，对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 单元类型：等参线性楔形（三棱柱）有限元。\n- 物理背景：三维小应变弹性力学。\n- 自然坐标：$(\\xi, \\eta, \\zeta)$，其中 $\\xi \\ge 0$, $\\eta \\ge 0$, $\\xi+\\eta \\le 1$, 且 $\\zeta \\in [-1,1]$。\n- 三角形面积坐标：$L_1=\\xi$, $L_2=\\eta$, $L_3=1-\\xi-\\eta$。\n- 形函数：\n$$\n\\begin{aligned}\nN_1 &= L_1 \\frac{1-\\zeta}{2} = \\xi \\frac{1-\\zeta}{2} \\\\\nN_2 &= L_2 \\frac{1-\\zeta}{2} = \\eta \\frac{1-\\zeta}{2} \\\\\nN_3 &= L_3 \\frac{1-\\zeta}{2} = (1 - \\xi - \\eta) \\frac{1-\\zeta}{2} \\\\\nN_4 &= L_1 \\frac{1+\\zeta}{2} = \\xi \\frac{1+\\zeta}{2} \\\\\nN_5 &= L_2 \\frac{1+\\zeta}{2} = \\eta \\frac{1+\\zeta}{2} \\\\\nN_6 &= L_3 \\frac{1+\\zeta}{2} = (1 - \\xi - \\eta) \\frac{1+\\zeta}{2}\n\\end{aligned}\n$$\n- 物理节点坐标：\n  - 节点 $1$：$(1,0,0)$\n  - 节点 $2$：$(0,1,0)$\n  - 节点 $3$：$(0,0,0)$\n  - 节点 $4$：$(1,0,1)$\n  - 节点 $5$：$(0,1,1)$\n  - 节点 $6$：$(0,0,1)$\n- 等参映射：$x(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{6} N_i x_i$，$y(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{6} N_i y_i$，$z(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{6} N_i z_i$。\n- 应变定义：小应变张量 $\\boldsymbol{\\varepsilon}=\\tfrac{1}{2}(\\nabla \\mathbf{u}+(\\nabla \\mathbf{u})^{\\top})$。\n- 要求的关系式：$\\boldsymbol{\\varepsilon} = B \\mathbf{d}$，其中 $\\mathbf{d}$ 是节点位移向量 $[u_1, v_1, w_1, \\dots, u_6, v_6, w_6]^{\\top}$ 而 $\\boldsymbol{\\varepsilon}$ 是工程应变向量 $[\\varepsilon_{xx}, \\varepsilon_{yy}, \\varepsilon_{zz}, \\gamma_{xy}, \\gamma_{yz}, \\gamma_{zx}]^{\\top}$。\n\n**步骤2：验证**\n该问题具有科学依据，提法得当且客观。它代表了有限元法理论中的一个标准、典范的问题。所有定义、数据和条件都是标准、完整且一致的。指定的节点坐标定义了一个非退化的单元几何形状，确保了唯一、稳定且有意义的解的存在。该问题不违反任何无效性标准。\n\n**步骤3：结论**\n该问题是 **有效的**。将推导解答。\n\n**解答推导**\n\n工程应变向量 $\\boldsymbol{\\varepsilon}$ 由位移场 $\\mathbf{u} = (u,v,w)$ 的空间导数定义：\n$$\n\\boldsymbol{\\varepsilon} = \\begin{pmatrix} \\varepsilon_{xx} \\\\ \\varepsilon_{yy} \\\\ \\varepsilon_{zz} \\\\ \\gamma_{xy} \\\\ \\gamma_{yz} \\\\ \\gamma_{zx} \\end{pmatrix} = \\begin{pmatrix} \\frac{\\partial u}{\\partial x} \\\\ \\frac{\\partial v}{\\partial y} \\\\ \\frac{\\partial w}{\\partial z} \\\\ \\frac{\\partial u}{\\partial y} + \\frac{\\partial v}{\\partial x} \\\\ \\frac{\\partial v}{\\partial z} + \\frac{\\partial w}{\\partial y} \\\\ \\frac{\\partial w}{\\partial x} + \\frac{\\partial u}{\\partial z} \\end{pmatrix}\n$$\n位移场通过形函数 $N_i$ 从节点位移 $\\mathbf{d}$ 插值得到：\n$$\nu = \\sum_{i=1}^{6} N_i u_i, \\quad v = \\sum_{i=1}^{6} N_i v_i, \\quad w = \\sum_{i=1}^{6} N_i w_i\n$$\n将这些代入应变定义，得到关系式 $\\boldsymbol{\\varepsilon} = B \\mathbf{d}$，其中 $B$ 是 $6 \\times 18$ 的应变-位移矩阵。矩阵 $B$ 由 6 个分块 $B = [B_1, B_2, B_3, B_4, B_5, B_6]$ 构成，每个 $B_i$ 是与节点 $i$ 相关的 $6 \\times 3$ 矩阵：\n$$\nB_i = \\begin{pmatrix}\n\\frac{\\partial N_i}{\\partial x} & 0 & 0 \\\\\n0 & \\frac{\\partial N_i}{\\partial y} & 0 \\\\\n0 & 0 & \\frac{\\partial N_i}{\\partial z} \\\\\n\\frac{\\partial N_i}{\\partial y} & \\frac{\\partial N_i}{\\partial x} & 0 \\\\\n0 & \\frac{\\partial N_i}{\\partial z} & \\frac{\\partial N_i}{\\partial y} \\\\\n\\frac{\\partial N_i}{\\partial z} & 0 & \\frac{\\partial N_i}{\\partial x}\n\\end{pmatrix}\n$$\n为构造 $B_i$，我们需要形函数关于物理坐标 $(x,y,z)$ 的导数。这些导数可通过链式法则，由关于自然坐标 $(\\xi, \\eta, \\zeta)$ 的导数获得：\n$$\n\\begin{pmatrix} \\frac{\\partial N_i}{\\partial \\xi} \\\\ \\frac{\\partial N_i}{\\partial \\eta} \\\\ \\frac{\\partial N_i}{\\partial \\zeta} \\end{pmatrix} = \\begin{pmatrix} \\frac{\\partial x}{\\partial \\xi} & \\frac{\\partial y}{\\partial \\xi} & \\frac{\\partial z}{\\partial \\xi} \\\\ \\frac{\\partial x}{\\partial \\eta} & \\frac{\\partial y}{\\partial \\eta} & \\frac{\\partial z}{\\partial \\eta} \\\\ \\frac{\\partial x}{\\partial \\zeta} & \\frac{\\partial y}{\\partial \\zeta} & \\frac{\\partial z}{\\partial \\zeta} \\end{pmatrix} \\begin{pmatrix} \\frac{\\partial N_i}{\\partial x} \\\\ \\frac{\\partial N_i}{\\partial y} \\\\ \\frac{\\partial N_i}{\\partial z} \\end{pmatrix} = J \\begin{pmatrix} \\frac{\\partial N_i}{\\partial x} \\\\ \\frac{\\partial N_i}{\\partial y} \\\\ \\frac{\\partial N_i}{\\partial z} \\end{pmatrix}\n$$\n其中 $J$ 是等参映射的雅可比矩阵。所需物理导数则由下式给出：\n$$\n\\begin{pmatrix} \\frac{\\partial N_i}{\\partial x} \\\\ \\frac{\\partial N_i}{\\partial y} \\\\ \\frac{\\partial N_i}{\\partial z} \\end{pmatrix} = J^{-1} \\begin{pmatrix} \\frac{\\partial N_i}{\\partial \\xi} \\\\ \\frac{\\partial N_i}{\\partial \\eta} \\\\ \\frac{\\partial N_i}{\\partial \\zeta} \\end{pmatrix}\n$$\n首先，我们计算形函数关于自然坐标的导数：\n$$\n\\begin{array}{lll}\n\\frac{\\partial N_1}{\\partial \\xi}=\\frac{1-\\zeta}{2} & \\frac{\\partial N_1}{\\partial \\eta}=0 & \\frac{\\partial N_1}{\\partial \\zeta}=-\\frac{\\xi}{2} \\\\\n\\frac{\\partial N_2}{\\partial \\xi}=0 & \\frac{\\partial N_2}{\\partial \\eta}=\\frac{1-\\zeta}{2} & \\frac{\\partial N_2}{\\partial \\zeta}=-\\frac{\\eta}{2} \\\\\n\\frac{\\partial N_3}{\\partial \\xi}=-\\frac{1-\\zeta}{2} & \\frac{\\partial N_3}{\\partial \\eta}=-\\frac{1-\\zeta}{2} & \\frac{\\partial N_3}{\\partial \\zeta}=-\\frac{1-\\xi-\\eta}{2} \\\\\n\\frac{\\partial N_4}{\\partial \\xi}=\\frac{1+\\zeta}{2} & \\frac{\\partial N_4}{\\partial \\eta}=0 & \\frac{\\partial N_4}{\\partial \\zeta}=\\frac{\\xi}{2} \\\\\n\\frac{\\partial N_5}{\\partial \\xi}=0 & \\frac{\\partial N_5}{\\partial \\eta}=\\frac{1+\\zeta}{2} & \\frac{\\partial N_5}{\\partial \\zeta}=\\frac{\\eta}{2} \\\\\n\\frac{\\partial N_6}{\\partial \\xi}=-\\frac{1+\\zeta}{2} & \\frac{\\partial N_6}{\\partial \\eta}=-\\frac{1+\\zeta}{2} & \\frac{\\partial N_6}{\\partial \\zeta}=\\frac{1-\\xi-\\eta}{2}\n\\end{array}\n$$\n接着，我们计算雅可比矩阵 $J$。其分量为 $J_{kl} = \\frac{\\partial x_k}{\\partial \\xi_l} = \\sum_{i=1}^{6} \\frac{\\partial N_i}{\\partial \\xi_l} x_{i,k}$，其中 $(x_1, x_2, x_3)=(x,y,z)$ 且 $(\\xi_1, \\xi_2, \\xi_3)=(\\xi,\\eta,\\zeta)$。\n对于此特定几何形状，映射为：\n$x = \\sum N_i x_i = N_1(1) + N_4(1) = \\xi\\frac{1-\\zeta}{2} + \\xi\\frac{1+\\zeta}{2} = \\xi$\n$y = \\sum N_i y_i = N_2(1) + N_5(1) = \\eta\\frac{1-\\zeta}{2} + \\eta\\frac{1+\\zeta}{2} = \\eta$\n$z = \\sum N_i z_i = N_4(1) + N_5(1) + N_6(1) = (\\xi+\\eta+1-\\xi-\\eta)\\frac{1+\\zeta}{2} = \\frac{1+\\zeta}{2}$\n因此，雅可比矩阵为：\n$$\nJ = \\begin{pmatrix} \\frac{\\partial x}{\\partial \\xi} & \\frac{\\partial y}{\\partial \\xi} & \\frac{\\partial z}{\\partial \\xi} \\\\ \\frac{\\partial x}{\\partial \\eta} & \\frac{\\partial y}{\\partial \\eta} & \\frac{\\partial z}{\\partial \\eta} \\\\ \\frac{\\partial x}{\\partial \\zeta} & \\frac{\\partial y}{\\partial \\zeta} & \\frac{\\partial z}{\\partial \\zeta} \\end{pmatrix} = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & \\frac{1}{2} \\end{pmatrix}\n$$\n逆雅可比矩阵为：\n$$\nJ^{-1} = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 2 \\end{pmatrix}\n$$\n现在我们求 $N_i$ 的物理导数：$\\frac{\\partial N_i}{\\partial x} = \\frac{\\partial N_i}{\\partial \\xi}$、$\\frac{\\partial N_i}{\\partial y} = \\frac{\\partial N_i}{\\partial \\eta}$ 和 $\\frac{\\partial N_i}{\\partial z} = 2\\frac{\\partial N_i}{\\partial \\zeta}$。\n$$\n\\begin{array}{lll}\n\\frac{\\partial N_1}{\\partial x}=\\frac{1-\\zeta}{2} & \\frac{\\partial N_1}{\\partial y}=0 & \\frac{\\partial N_1}{\\partial z}=-\\xi \\\\\n\\frac{\\partial N_2}{\\partial x}=0 & \\frac{\\partial N_2}{\\partial y}=\\frac{1-\\zeta}{2} & \\frac{\\partial N_2}{\\partial z}=-\\eta \\\\\n\\frac{\\partial N_3}{\\partial x}=-\\frac{1-\\zeta}{2} & \\frac{\\partial N_3}{\\partial y}=-\\frac{1-\\zeta}{2} & \\frac{\\partial N_3}{\\partial z}=-(1-\\xi-\\eta) \\\\\n\\frac{\\partial N_4}{\\partial x}=\\frac{1+\\zeta}{2} & \\frac{\\partial N_4}{\\partial y}=0 & \\frac{\\partial N_4}{\\partial z}=\\xi \\\\\n\\frac{\\partial N_5}{\\partial x}=0 & \\frac{\\partial N_5}{\\partial y}=\\frac{1+\\zeta}{2} & \\frac{\\partial N_5}{\\partial z}=\\eta \\\\\n\\frac{\\partial N_6}{\\partial x}=-\\frac{1+\\zeta}{2} & \\frac{\\partial N_6}{\\partial y}=-\\frac{1+\\zeta}{2} & \\frac{\\partial N_6}{\\partial z}=1-\\xi-\\eta\n\\end{array}\n$$\n最后，我们组装 $B$ 矩阵。其列按节点编号 $(1 \\dots 6)$ 分组，每个节点对应其 $(u,v,w)$ 位移的三列。\n$$\nB(\\xi,\\eta,\\zeta) = [B_1 \\ B_2 \\ B_3 \\ B_4 \\ B_5 \\ B_6]\n$$\n代入这些导数，即可得到 $B$ 矩阵的最终表达式。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{1-\\zeta}{2} & 0 & 0 & 0 & 0 & 0 & -\\frac{1-\\zeta}{2} & 0 & 0 & \\frac{1+\\zeta}{2} & 0 & 0 & 0 & 0 & 0 & -\\frac{1+\\zeta}{2} & 0 & 0 \\\\\n0 & 0 & 0 & 0 & \\frac{1-\\zeta}{2} & 0 & 0 & -\\frac{1-\\zeta}{2} & 0 & 0 & 0 & 0 & 0 & \\frac{1+\\zeta}{2} & 0 & 0 & -\\frac{1+\\zeta}{2} & 0 \\\\\n0 & 0 & -\\xi & 0 & 0 & -\\eta & 0 & 0 & - (1-\\xi-\\eta) & 0 & 0 & \\xi & 0 & 0 & \\eta & 0 & 0 & 1-\\xi-\\eta \\\\\n0 & \\frac{1-\\zeta}{2} & 0 & \\frac{1-\\zeta}{2} & 0 & 0 & -\\frac{1-\\zeta}{2} & -\\frac{1-\\zeta}{2} & 0 & 0 & \\frac{1+\\zeta}{2} & 0 & \\frac{1+\\zeta}{2} & 0 & 0 & -\\frac{1+\\zeta}{2} & -\\frac{1+\\zeta}{2} & 0 \\\\\n0 & -\\xi & 0 & 0 & -\\eta & \\frac{1-\\zeta}{2} & 0 & - (1-\\xi-\\eta) & -\\frac{1-\\zeta}{2} & 0 & \\xi & 0 & 0 & \\eta & \\frac{1+\\zeta}{2} & 0 & 1-\\xi-\\eta & -\\frac{1+\\zeta}{2} \\\\\n-\\xi & 0 & \\frac{1-\\zeta}{2} & -\\eta & 0 & 0 & - (1-\\xi-\\eta) & 0 & -\\frac{1-\\zeta}{2} & \\xi & 0 & \\frac{1+\\zeta}{2} & \\eta & 0 & 0 & 1-\\xi-\\eta & 0 & -\\frac{1+\\zeta}{2}\n\\end{pmatrix}\n}\n$$", "id": "2611736"}, {"introduction": "像金字塔单元这样的过渡单元常用于连接不同类型的网格，例如六面体和四面体。本练习将探讨单元退化这一巧妙概念，我们将看到一个五节点金字塔单元如何通过合并其底部两个节点而转变为一个四节点四面体单元。通过推导其形函数的极限形式 [@problem_id:2611714]，您将对等参格式的灵活性以及不同单元拓扑之间的内在联系有更深入的理解。", "problem": "考虑在有限元法（FEM）中使用的标准五节点线性金字塔单元，其自然坐标由三元组 $(\\xi,\\eta,\\zeta)$ 给出。设其顶点位于 $\\zeta=1$，底面位于 $\\zeta=0$。定义缩放的截面坐标 $\\alpha$ 和 $\\beta$ 为 $\\alpha = \\xi/(1-\\zeta)$ 和 $\\beta = \\eta/(1-\\zeta)$，因此对于每个固定的 $\\zeta \\in [0,1)$，面内域为方形区域 $-1 \\le \\alpha,\\beta \\le 1$，且侧面为三角形。形函数需要满足节点上的克罗内克-德尔塔（Kronecker-delta）性质、单位分解性、沿每条边的线性变化以及在每个三角形面上的线性变化，这与等参插值相一致。\n\n按如下方式用 $(\\alpha,\\beta)$ 对 $\\zeta=0$ 处的底面节点进行编号：节点1位于 $(-1,-1)$，节点2位于 $(+1,-1)$，节点3位于 $(+1,+1)$，节点4位于 $(-1,+1)$，顶点节点5位于 $\\zeta=1$。\n\n现在考虑一种几何退化，其中节点1和节点2之间的物理底边收缩，使得这两个节点在物理空间中合并。在极限情况下，该金字塔退化为一个四节点四面体，其顶点为合并后的底面节点 $\\{1,2\\}$、底面上的节点3和4，以及顶点节点5。利用上述对形函数的基本要求和等参观点，推导该四面体极限情况下的极限形函数，并将其表示为 $(\\xi,\\eta,\\zeta)$ 的函数。将您的最终结果表示为行向量 $\\big[N_{\\{1,2\\}}^{\\mathrm{lim}},\\,N_{3}^{\\mathrm{lim}},\\,N_{4}^{\\mathrm{lim}},\\,N_{5}^{\\mathrm{lim}}\\big]$。\n\n您的最终答案必须是单一的闭合形式解析表达式。不涉及单位。无需四舍五入。", "solution": "对所提出的问题陈述进行验证。\n\n逐字提取给定的条件如下：\n- 单元类型：五节点线性金字塔单元。\n- 自然坐标：$(\\xi, \\eta, \\zeta)$。\n- 顶点位于 $\\zeta=1$，底面位于 $\\zeta=0$。\n- 缩放截面坐标：$\\alpha = \\xi/(1-\\zeta)$ 和 $\\beta = \\eta/(1-\\zeta)$。\n- 对于固定的 $\\zeta \\in [0,1)$，面内域为方形区域 $-1 \\le \\alpha,\\beta \\le 1$。\n- 节点编号：在 $(\\xi,\\eta,\\zeta)$ 坐标系中，节点1位于 $(-1,-1,0)$，节点2位于 $(1,-1,0)$，节点3位于 $(1,1,0)$，节点4位于 $(-1,1,0)$；节点5位于顶点，即 $\\zeta=1$。金字塔的顶点对应于 $(\\xi,\\eta,\\zeta) = (0,0,1)$。\n- 形函数性质：节点上的克罗内克-德尔塔性质、单位分解性、沿边的线性变化、在三角形面上的线性变化。\n- 退化：节点1和2之间的物理底边收缩，导致它们合并。\n- 最终单元：四节点四面体，顶点为合并节点 $\\{1,2\\}$、节点3、节点4和节点5。\n- 任务：推导该四面体极限情况下的极限形函数，并将其表示为 $(\\xi, \\eta, \\zeta)$ 的函数。\n\n该问题在科学上基于有限元方法的理论，特别是关于等参单元公式和退化技术。该问题是适定的、客观的，并包含足够的信息以获得唯一解。不存在矛盾或事实错误。因此，该问题被认定为**有效**。\n\n求解过程如下。首先，根据所提供的定义，建立五节点金字塔单元的形函数。设底面节点（$i=1, 2, 3, 4$）的形函数用 $N_i$ 表示，顶点节点的形函数用 $N_5$ 表示。\n顶点形函数 $N_5$ 在节点5（$\\zeta=1$ 处）必须为1，在底面（$\\zeta=0$ 处）必须为0。满足此条件的最简单函数是：\n$$N_5(\\xi, \\eta, \\zeta) = \\zeta$$\n根据单位分解性，$\\sum_{i=1}^5 N_i = 1$，这意味着 $\\sum_{i=1}^4 N_i = 1 - N_5 = 1 - \\zeta$。\n底面节点的形函数在顶点（$\\zeta=1$）必须为零，因此它们必须包含因子 $(1-\\zeta)$。问题定义了缩放坐标 $\\alpha = \\xi/(1-\\zeta)$ 和 $\\beta = \\eta/(1-\\zeta)$，它将任何 $\\zeta$ 处的横截面映射到一个单位正方形。这表明可以通过取四节点四边形在 $(\\alpha, \\beta)$ 坐标系中的标准双线性形函数，再乘以 $(1-\\zeta)$ 来构造底面形函数。\n顶点位于 $(\\pm 1, \\pm 1)$ 的正方形的标准双线性形函数 $\\hat{N}_i(\\alpha, \\beta)$ 为：\n$$ \\hat{N}_1(\\alpha, \\beta) = \\frac{1}{4}(1-\\alpha)(1-\\beta) $$\n$$ \\hat{N}_2(\\alpha, \\beta) = \\frac{1}{4}(1+\\alpha)(1-\\beta) $$\n$$ \\hat{N}_3(\\alpha, \\beta) = \\frac{1}{4}(1+\\alpha)(1+\\beta) $$\n$$ \\hat{N}_4(\\alpha, \\beta) = \\frac{1}{4}(1-\\alpha)(1+\\beta) $$\n因此，金字塔形函数定义为 $N_i = \\hat{N}_i(\\alpha, \\beta) (1-\\zeta)$（对于 $i=1,2,3,4$）：\n$$ N_1(\\xi, \\eta, \\zeta) = \\frac{1}{4}(1-\\alpha)(1-\\beta)(1-\\zeta) = \\frac{1}{4}\\left(1-\\frac{\\xi}{1-\\zeta}\\right)\\left(1-\\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) $$\n$$ N_2(\\xi, \\eta, \\zeta) = \\frac{1}{4}(1+\\alpha)(1-\\beta)(1-\\zeta) = \\frac{1}{4}\\left(1+\\frac{\\xi}{1-\\zeta}\\right)\\left(1-\\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) $$\n$$ N_3(\\xi, \\eta, \\zeta) = \\frac{1}{4}(1+\\alpha)(1+\\beta)(1-\\zeta) = \\frac{1}{4}\\left(1+\\frac{\\xi}{1-\\zeta}\\right)\\left(1+\\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) $$\n$$ N_4(\\xi, \\eta, \\zeta) = \\frac{1}{4}(1-\\alpha)(1+\\beta)(1-\\zeta) = \\frac{1}{4}\\left(1-\\frac{\\xi}{1-\\zeta}\\right)\\left(1+\\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) $$\n这些函数满足所有规定的要求，包括单位分解性、节点上的克罗内克-德尔塔性质，以及当自然参数化时在单元面上的线性变化。\n\n问题描述了一种几何退化，其中节点1和2的物理坐标合并，即 $\\boldsymbol{x}_1 = \\boldsymbol{x}_2 = \\boldsymbol{x}_{\\{1,2\\}}$。在等参公式中，一个点的物理坐标 $\\boldsymbol{x}$ 是使用形函数从节点坐标 $\\boldsymbol{x}_i$ 插值得到的：\n$$ \\boldsymbol{x}(\\xi, \\eta, \\zeta) = \\sum_{i=1}^5 N_i(\\xi, \\eta, \\zeta) \\boldsymbol{x}_i = N_1 \\boldsymbol{x}_1 + N_2 \\boldsymbol{x}_2 + N_3 \\boldsymbol{x}_3 + N_4 \\boldsymbol{x}_4 + N_5 \\boldsymbol{x}_5 $$\n应用退化条件 $\\boldsymbol{x}_1 = \\boldsymbol{x}_2 = \\boldsymbol{x}_{\\{1,2\\}}$，插值变为：\n$$ \\boldsymbol{x}(\\xi, \\eta, \\zeta) = N_1 \\boldsymbol{x}_{\\{1,2\\}} + N_2 \\boldsymbol{x}_{\\{1,2\\}} + N_3 \\boldsymbol{x}_3 + N_4 \\boldsymbol{x}_4 + N_5 \\boldsymbol{x}_5 $$\n$$ \\boldsymbol{x}(\\xi, \\eta, \\zeta) = (N_1 + N_2) \\boldsymbol{x}_{\\{1,2\\}} + N_3 \\boldsymbol{x}_3 + N_4 \\boldsymbol{x}_4 + N_5 \\boldsymbol{x}_5 $$\n这表明新的合并节点 $\\{1,2\\}$ 的形函数，记为 $N_{\\{1,2\\}}^{\\mathrm{lim}}$，是原始形函数 $N_1$ 和 $N_2$ 的和。其余节点的形函数相对于自然坐标 $(\\xi, \\eta, \\zeta)$ 的函数形式保持不变。\n$$ N_{\\{1,2\\}}^{\\mathrm{lim}} = N_1 + N_2 $$\n$$ N_{3}^{\\mathrm{lim}} = N_3 $$\n$$ N_{4}^{\\mathrm{lim}} = N_4 $$\n$$ N_{5}^{\\mathrm{lim}} = N_5 $$\n现在我们计算 $N_{\\{1,2\\}}^{\\mathrm{lim}}$ 的显式表达式：\n$$ N_{\\{1,2\\}}^{\\mathrm{lim}} = \\frac{1}{4}(1-\\alpha)(1-\\beta)(1-\\zeta) + \\frac{1}{4}(1+\\alpha)(1-\\beta)(1-\\zeta) $$\n$$ N_{\\{1,2\\}}^{\\mathrm{lim}} = \\frac{1}{4}(1-\\beta)(1-\\zeta) \\left[ (1-\\alpha) + (1+\\alpha) \\right] = \\frac{1}{4}(1-\\beta)(1-\\zeta)(2) = \\frac{1}{2}(1-\\beta)(1-\\zeta) $$\n代入 $\\beta = \\eta / (1-\\zeta)$：\n$$ N_{\\{1,2\\}}^{\\mathrm{lim}} = \\frac{1}{2}\\left(1 - \\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) = \\frac{1}{2}(1-\\zeta-\\eta) $$\n其他极限形函数已知。我们通过简化乘积将它们表示为 $(\\xi, \\eta, \\zeta)$ 的函数：\n$$ N_{3}^{\\mathrm{lim}} = \\frac{1}{4}\\left(1+\\frac{\\xi}{1-\\zeta}\\right)\\left(1+\\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) = \\frac{1}{4(1-\\zeta)^2}(1-\\zeta+\\xi)(1-\\zeta+\\eta)(1-\\zeta) = \\frac{1}{4(1-\\zeta)}(1-\\zeta+\\xi)(1-\\zeta+\\eta) $$\n$$ N_{4}^{\\mathrm{lim}} = \\frac{1}{4}\\left(1-\\frac{\\xi}{1-\\zeta}\\right)\\left(1+\\frac{\\eta}{1-\\zeta}\\right)(1-\\zeta) = \\frac{1}{4(1-\\zeta)^2}(1-\\zeta-\\xi)(1-\\zeta+\\eta)(1-\\zeta) = \\frac{1}{4(1-\\zeta)}(1-\\zeta-\\xi)(1-\\zeta+\\eta) $$\n$$ N_{5}^{\\mathrm{lim}} = \\zeta $$\n退化后的四面体单元的四个形函数集，用原始金字塔的自然坐标表示，为：\n$N_{\\{1,2\\}}^{\\mathrm{lim}} = \\frac{1}{2}(1-\\zeta-\\eta)$，\n$N_{3}^{\\mathrm{lim}} = \\frac{(1-\\zeta+\\xi)(1-\\zeta+\\eta)}{4(1-\\zeta)}$，\n$N_{4}^{\\mathrm{lim}} = \\frac{(1-\\zeta-\\xi)(1-\\zeta+\\eta)}{4(1-\\zeta)}$，\n$N_{5}^{\\mathrm{lim}} = \\zeta$。\n这些函数构成了所要求的行向量。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{1}{2}(1-\\zeta-\\eta) & \\frac{(1-\\zeta+\\xi)(1-\\zeta+\\eta)}{4(1-\\zeta)} & \\frac{(1-\\zeta-\\xi)(1-\\zeta+\\eta)}{4(1-\\zeta)} & \\zeta \\end{pmatrix}}\n$$", "id": "2611714"}, {"introduction": "从解析推导转向计算实践，这最后一个练习将挑战您使用数值积分来实现楔形单元的一致质量矩阵的组装。除了简单的组装，您还将对矩阵的特征值相对于单元的纵横比进行敏感性分析 [@problem_id:2611725]。这项实践研究将帮助您建立关于单元几何质量如何影响系统数值特性的直觉，这对动态模拟的准确性和稳定性具有直接影响。", "problem": "考虑有限元法 (FEM) 中的线性楔形（三棱柱）单元。令自然坐标为 $(\\xi,\\eta,\\zeta)$，其中 $(\\xi,\\eta)$ 位于由 $\\xi \\ge 0$、$\\eta \\ge 0$、$\\xi+\\eta \\le 1$ 定义的参考三角形上，且 $\\zeta \\in [-1,1]$。该线性楔形单元有 $6$ 个节点，索引为底面（$\\zeta=-1$ 处）的节点 $1,2,3$ 和顶面（$\\zeta=+1$ 处）的节点 $4,5,6$。形函数由标准的线性三角形重心坐标 $L_1=1-\\xi-\\eta$、$L_2=\\xi$、$L_3=\\eta$ 与关于 $\\zeta$ 的线性函数组合而成：\n$$\nN_1 = L_1 \\frac{1-\\zeta}{2},\\quad\nN_2 = L_2 \\frac{1-\\zeta}{2},\\quad\nN_3 = L_3 \\frac{1-\\zeta}{2},\\quad\nN_4 = L_1 \\frac{1+\\zeta}{2},\\quad\nN_5 = L_2 \\frac{1+\\zeta}{2},\\quad\nN_6 = L_3 \\frac{1+\\zeta}{2}.\n$$\n考虑一个棱柱物理映射，其中底面三角形位于平面 $z=0$ 上，节点为\n$$\n\\mathbf{x}_1=(0,0,0),\\quad \\mathbf{x}_2=(s,0,0),\\quad \\mathbf{x}_3=(0,s,0),\n$$\n顶面三角形位于平面 $z=h$ 上，节点为\n$$\n\\mathbf{x}_4=(0,0,h),\\quad \\mathbf{x}_5=(s,0,h),\\quad \\mathbf{x}_6=(0,s,h),\n$$\n其中 $s>0$ 是三角形底面的尺寸标量，而 $h>0$ 是楔形在 $\\zeta$ 方向的长度。设材料密度为常数，其值为 $\\rho=1$（无量纲）。一致质量矩阵 $M \\in \\mathbb{R}^{6 \\times 6}$ 定义为\n$$\nM = \\int_{V} \\rho\\, \\mathbf{N}^T \\mathbf{N}\\, dV,\n$$\n其中 $\\mathbf{N} = [N_1,\\dots,N_6]$，$V$ 是通过等参法则 $\\mathbf{x}(\\xi,\\eta,\\zeta)=\\sum_{a=1}^6 N_a(\\xi,\\eta,\\zeta)\\mathbf{x}_a$ 从参考域映射得到的物理楔形体积。\n\n任务：根据上述基本定义和域映射，推导并实现一个数值精确算法（对 $(\\xi,\\eta)$ 中最高 $2$ 次、$\\zeta$ 中最高 $2$ 次的多项式精确），使用可分离的高斯求积（Gaussian Quadrature, GQ）来组装 $M$：在 $(\\xi,\\eta)$ 上使用一个精度至少为 $2$ 次的三角形求积法则，在 $\\zeta$ 上使用一个精度至少为 $3$ 次的一维 Gauss-Legendre 求积法则。计算 $M$ 的特征值，并分析它们对由下式定义的纵横比的敏感度\n$$\n\\mathrm{AR} = \\frac{h}{s}.\n$$\n使用以下事实作为您推导的起点：\n- 对于上述棱柱映射，Jacobian 行列式 $|\\!J|$ 在单元上是恒定的，等于底面积与高度的乘积，即 $|\\!J| = A\\,h$，其中 $A$ 是底面三角形的物理面积。\n- 对于指定的顶点为 $(0,0)$、$(s,0)$、$(0,s)$ 的直角三角形底面，其面积为 $A = \\frac{s^2}{2}$。\n\n您的程序必须通过求积实现 $M$ 的组装，计算其特征值，然后评估以下测试套件。所有量均为无量纲。角度不出现。最终的程序输出必须是单行文本，包含一个逗号分隔的 Python 列表，其中每个测试用例对应一个浮点数，并按下列顺序列出。\n\n测试套件：\n- 测试用例 1（固定底面尺寸下，归一化特征值在不同纵横比下的不变性）：设置 $s=1$，并计算 $\\mathrm{AR}=0.5$ 和 $\\mathrm{AR}=3.0$ (即 $h=\\mathrm{AR}\\cdot s$) 时的归一化特征值 $\\lambda_i / (A h)$。将每组特征值按升序排序，并返回两个归一化谱之间的最大绝对差值。预期结果是一个接近 $0$ 的小浮点数。\n- 测试用例 2（固定底面尺寸下的对数敏感度）：在 $s=1$ 的条件下，使用对称扰动 $\\delta=10^{-4}$ 来评估 $\\mathrm{AR}_0=1.2$ 时的最大特征值 $\\lambda_{\\max}$，以近似计算对数导数\n$$\nS_{\\mathrm{fixed}\\,s} \\approx \\frac{\\ln \\lambda_{\\max}(\\mathrm{AR}_0+\\delta)-\\ln \\lambda_{\\max}(\\mathrm{AR}_0-\\delta)}{\\ln(\\mathrm{AR}_0+\\delta)-\\ln(\\mathrm{AR}_0-\\delta)}.\n$$\n返回这个浮点数。预期值接近 $1$。\n- 测试用例 3（固定体积下的对数敏感度）：设定固定体积 $V_0=1$ 和 $\\mathrm{AR}_0=1.2$，并使用相同的对称扰动 $\\delta=10^{-4}$。对于每个扰动后的纵横比 $\\mathrm{AR}$，选择 $s=(2 V_0 / \\mathrm{AR})^{1/3}$ 和 $h=\\mathrm{AR}\\cdot s$，以确保 $A h = V_0$ 精确成立。计算\n$$\nS_{\\mathrm{fixed}\\,V} \\approx \\frac{\\ln \\lambda_{\\max}(\\mathrm{AR}_0+\\delta)-\\ln \\lambda_{\\max}(\\mathrm{AR}_0-\\delta)}{\\ln(\\mathrm{AR}_0+\\delta)-\\ln(\\mathrm{AR}_0-\\delta)}.\n$$\n返回这个浮点数。预期值接近 $0$。\n- 测试用例 4（近简并几何缩放检查）：比较在 $(s,\\mathrm{AR})=(1,1)$ 和 $(s,\\mathrm{AR})=(10^{-3},10^{3})$ 时的归一化特征值。对于每种情况，计算归一化谱 $\\lambda_i/(A h)$，按升序排序，并返回两个归一化谱之差的欧几里得范数。预期结果是一个接近 $0$ 的小浮点数。\n\n您的程序应生成单行输出，其中包含一个方括号括起来的逗号分隔列表（例如 $[x_1,x_2,x_3,x_4]$）。每个 $x_k$ 必须是对应于上述顺序中测试用例 $k$ 的浮点数。", "solution": "问题陈述已经过验证，被认为是合理的。它具有科学依据、是适定的且客观的。它提出了有限元法中的一个标准问题，具有清晰的定义和约束，从而允许得出唯一且可验证的解。\n\n任务是计算线性楔形单元的一致质量矩阵 $\\mathbf{M}$ 并分析其特征值。质量矩阵由以下积分定义：\n$$\nM_{ab} = \\int_{V} \\rho N_a N_b dV\n$$\n其中 $a, b \\in \\{1, \\dots, 6\\}$ 是节点索引，$\\mathbf{N} = [N_1, \\dots, N_6]$ 是形函数向量，$V$ 是单元的物理体积，密度 $\\rho$ 给定为 $1$。\n\n等参映射将该积分从物理域转换到参考域 $(\\xi, \\eta, \\zeta)$，其中 $(\\xi, \\eta)$是参考三角形上的坐标，$\\zeta \\in [-1, 1]$。体积元变换为 $dV = |\\!J| d\\xi d\\eta d\\zeta$，其中 $|\\!J|$ 是映射的 Jacobian 矩阵的行列式。问题指出，对于此特定棱柱映射，$|\\!J|$ 是恒定的，且等于 $A h = \\frac{s^2 h}{2}$。质量矩阵的积分变为：\n$$\nM_{ab} = \\frac{s^2 h}{2} \\int_{-1}^{1} \\int_{A_{\\text{ref}}} N_a(\\xi, \\eta, \\zeta) N_b(\\xi, \\eta, \\zeta) \\,d\\xi d\\eta \\,d\\zeta\n$$\n其中 $A_{\\text{ref}}$ 是参考三角形的面积，其值为 $\\frac{1}{2}$。\n\n被积函数 $N_a N_b$ 是形函数的乘积。形函数定义为 $N_i = L_k \\frac{1 \\pm \\zeta}{2}$，其中 $L_k$ 是三角形上的线性重心坐标。具体来说，$L_1 = 1-\\xi-\\eta$，$L_2 = \\xi$，$L_3 = \\eta$。因此，项 $N_a N_b$ 是一个在三角形坐标 $(\\xi,\\eta)$ 上最高为 $2$ 次、在坐标 $\\zeta$ 上最高为 $2$ 次的多项式。\n\n为了数值上精确地（在机器精度范围内）计算这个积分，我们使用一个对所需次数的多项式精确的 Gaussian Quadrature 方案。\n1.  对于 $(\\xi, \\eta)$ 上参考三角形的积分，被积函数是二次的。一个对最高 $2$ 次多项式精确的 $3$ 点求积法则是足够的。对于顶点在 $(0,0), (1,0), (0,1)$ 的参考三角形，其求积点 $(\\xi_i, \\eta_i)$ 和权 $w_i^{\\text{tri}}$ 为：\n    *   点：$(1/2, 0), (0, 1/2), (1/2, 1/2)$\n    *   权：每个点的权为 $w_i^{\\text{tri}} = 1/6$。这些权对应于面积为 $1/2$ 的积分域。\n2.  对于 $\\zeta \\in [-1, 1]$ 上的积分，被积函数是二次的。问题要求使用一个精度至少为 $3$ 次的法则。一个 $2$ 点的 Gauss-Legendre 求积法则对最高 $2(2)-1 = 3$ 次的多项式是精确的，这满足了要求。其点 $\\zeta_j$ 和权 $w_j^{\\zeta}$ 为：\n    *   点：$\\pm 1/\\sqrt{3}$\n    *   权：每个点的权为 $w_j^{\\zeta} = 1$。\n\n然后，通过对每个求积点的贡献求和来组装质量矩阵：\n$$\nM_{ab} \\approx |\\!J| \\sum_{j} w_j^{\\zeta} \\sum_{i} w_i^{\\text{tri}} N_a(\\xi_i, \\eta_i, \\zeta_j) N_b(\\xi_i, \\eta_i, \\zeta_j)\n$$\n这可以通过遍历所有 $3 \\times 2 = 6$ 个求积点来实现。在每个点上，计算形函数向量 $\\mathbf{N}$，其外积 $\\mathbf{N}^T \\mathbf{N}$ 按相应的总权重进行缩放，然后加到质量矩阵 $\\mathbf{M}$ 上。一个求积点 $(\\xi_i, \\eta_i, \\zeta_j)$ 的总权重为 $|\\!J| \\cdot w_i^{\\text{tri}} \\cdot w_j^{\\zeta}$。\n\n然后，数值计算所得的对称正定矩阵 $\\mathbf{M}$ 的特征值 $\\lambda_i$。\n\n在测试用例的分析中，认识到质量矩阵的缩放行为至关重要。矩阵 $\\mathbf{M}$ 可以表示为：\n$$\n\\mathbf{M} = \\frac{s^2 h}{2} \\mathbf{M}_{\\text{ref}} = (A h) \\mathbf{M}_{\\text{ref}}\n$$\n其中 $\\mathbf{M}_{\\text{ref}}$ 是一个与几何参数 $s$ 和 $h$ 无关的常数参考质量矩阵。因此，$\\mathbf{M}$ 的特征值 $\\lambda_i$ 与单元体积 $V = A h$ 成正比：\n$$\n\\lambda_i = (A h) \\lambda_{i, \\text{ref}}\n$$\n其中 $\\lambda_{i, \\text{ref}}$ 是 $\\mathbf{M}_{\\text{ref}}$ 的常数特征值。这意味着归一化特征值 $\\lambda_i / (A h)$ 相对于单元的几何形状是不变的。这一原则解释了测试用例的预期结果：\n*   **测试用例 1 和 4**：归一化的特征值谱与纵横比和尺寸无关，因此它们的差值应接近于零。\n*   **测试用例 2**：当 $s=1$ 固定时，体积 $A h = \\frac{s^3}{2} \\mathrm{AR} = \\frac{1}{2} \\mathrm{AR}$。因此，$\\lambda_{\\max} \\propto \\mathrm{AR}$。对数导数 $\\frac{d(\\ln \\lambda_{\\max})}{d(\\ln \\mathrm{AR})} = 1$。\n*   **测试用例 3**：当体积固定为 $A h = V_0 = 1$ 时，特征值 $\\lambda_{\\max} = V_0 \\lambda_{\\max, \\text{ref}}$ 是恒定的。因此，它们相对于任何参数（包括 $\\mathrm{AR}$）的导数都为 $0$。\n\n实现将遵循这一稳健的理论和数值框架。", "answer": "```python\nimport numpy as np\nimport math\n\ndef get_quadrature_data():\n    \"\"\"\n    Provides quadrature points and weights for the reference wedge element.\n    - Triangle: 3-point rule, exact for degree 2 polynomials.\n    - Line: 2-point Gauss-Legendre rule, exact for degree 3 polynomials.\n    \"\"\"\n    # Triangle (xi, eta) quadrature for reference triangle with area 1/2\n    # Vertices at (0,0), (1,0), (0,1)\n    tri_points = np.array([\n        [0.5, 0.0],\n        [0.0, 0.5],\n        [0.5, 0.5]\n    ])\n    # Weights for a domain of area 1/2\n    tri_weights = np.array([1/6.0, 1/6.0, 1/6.0])\n\n    # 1D Gauss-Legendre quadrature for interval [-1, 1]\n    zeta_points = np.array([-1.0 / math.sqrt(3.0), 1.0 / math.sqrt(3.0)])\n    zeta_weights = np.array([1.0, 1.0])\n    \n    return tri_points, tri_weights, zeta_points, zeta_weights\n\ndef assemble_mass_matrix(s, h, quad_data):\n    \"\"\"\n    Assembles the 6x6 consistent mass matrix for a linear wedge element.\n    \n    Args:\n        s (float): Base scale of the triangular face.\n        h (float): Height of the wedge.\n        quad_data (tuple): Quadrature points and weights.\n\n    Returns:\n        numpy.ndarray: The 6x6 mass matrix.\n    \"\"\"\n    tri_points, tri_weights, zeta_points, zeta_weights = quad_data\n    mass_matrix = np.zeros((6, 6))\n    \n    # The Jacobian determinant is constant for this prismatic mapping.\n    # |J| = s^2 * h / 2.\n    jac_det = (s**2 * h) / 2.0\n    \n    # Pre-calculate shape function vector at each quadrature point\n    N_qp = np.zeros(6)\n    \n    for i in range(len(tri_points)):\n        xi, eta = tri_points[i]\n        w_tri = tri_weights[i]\n        \n        # Barycentric coordinates\n        L = np.array([1.0 - xi - eta, xi, eta])\n        \n        for j in range(len(zeta_points)):\n            zeta = zeta_points[j]\n            w_zeta = zeta_weights[j]\n            \n            # Linear functions in zeta direction\n            f_zeta = np.array([(1.0 - zeta) / 2.0, (1.0 + zeta) / 2.0])\n            \n            # Shape functions N_1 to N_6\n            N_qp[0:3] = L * f_zeta[0]  # Bottom face (zeta=-1)\n            N_qp[3:6] = L * f_zeta[1]  # Top face (zeta=+1)\n            \n            # Total weight for the current quadrature point\n            total_weight = jac_det * w_tri * w_zeta\n            \n            # Add contribution to the mass matrix\n            mass_matrix += np.outer(N_qp, N_qp) * total_weight\n            \n    return mass_matrix\n\ndef compute_sorted_eigs(s, h, quad_data):\n    \"\"\"Computes and sorts the eigenvalues of the mass matrix.\"\"\"\n    M = assemble_mass_matrix(s, h, quad_data)\n    # The mass matrix is symmetric, use eigvalsh for numerical stability and efficiency.\n    eigs = np.linalg.eigvalsh(M)\n    return np.sort(eigs)\n\ndef solve():\n    \"\"\"\n    Executes the test suite for the wedge element eigenvalue analysis.\n    \"\"\"\n    quad_data = get_quadrature_data()\n    results = []\n\n    # Test Case 1: Normalized eigenvalue invariance\n    s = 1.0\n    ar_a, ar_b = 0.5, 3.0\n    h_a, h_b = ar_a * s, ar_b * s\n    vol_a, vol_b = (s**2 / 2.0) * h_a, (s**2 / 2.0) * h_b\n    \n    eigs_a = compute_sorted_eigs(s, h_a, quad_data)\n    eigs_b = compute_sorted_eigs(s, h_b, quad_data)\n    \n    norm_eigs_a = eigs_a / vol_a\n    norm_eigs_b = eigs_b / vol_b\n  \n    result1 = np.max(np.abs(norm_eigs_a - norm_eigs_b))\n    results.append(result1)\n\n    # Test Case 2: Logarithmic sensitivity at fixed base scale\n    s = 1.0\n    ar0 = 1.2\n    delta = 1.0e-4\n    ar_plus, ar_minus = ar0 + delta, ar0 - delta\n\n    h_plus, h_minus = ar_plus * s, ar_minus * s\n\n    lambda_max_plus = compute_sorted_eigs(s, h_plus, quad_data)[-1]\n    lambda_max_minus = compute_sorted_eigs(s, h_minus, quad_data)[-1]\n\n    log_deriv_num = math.log(lambda_max_plus) - math.log(lambda_max_minus)\n    log_deriv_den = math.log(ar_plus) - math.log(ar_minus)\n    result2 = log_deriv_num / log_deriv_den\n    results.append(result2)\n\n    # Test Case 3: Logarithmic sensitivity at fixed volume\n    v0 = 1.0\n    ar0 = 1.2\n    delta = 1.0e-4\n    ar_plus, ar_minus = ar0 + delta, ar0 - delta\n\n    def get_geom_from_vol_ar(v, ar):\n        s = (2.0 * v / ar)**(1.0/3.0)\n        h = ar * s\n        return s, h\n\n    s_plus, h_plus = get_geom_from_vol_ar(v0, ar_plus)\n    s_minus, h_minus = get_geom_from_vol_ar(v0, ar_minus)\n\n    lambda_max_plus = compute_sorted_eigs(s_plus, h_plus, quad_data)[-1]\n    lambda_max_minus = compute_sorted_eigs(s_minus, h_minus, quad_data)[-1]\n\n    log_deriv_num = math.log(lambda_max_plus) - math.log(lambda_max_minus)\n    log_deriv_den = math.log(ar_plus) - math.log(ar_minus)\n    result3 = log_deriv_num / log_deriv_den\n    results.append(result3)\n\n    # Test Case 4: Near-degenerate geometric scaling check\n    s_a, ar_a = 1.0, 1.0\n    h_a = s_a * ar_a\n    vol_a = (s_a**2 / 2.0) * h_a\n    eigs_a = compute_sorted_eigs(s_a, h_a, quad_data)\n    norm_eigs_a = eigs_a / vol_a\n\n    s_b, ar_b = 1.0e-3, 1.0e3\n    h_b = s_b * ar_b  # h_b = 1.0\n    vol_b = (s_b**2 / 2.0) * h_b # vol_b = 0.5e-6\n    eigs_b = compute_sorted_eigs(s_b, h_b, quad_data)\n    norm_eigs_b = eigs_b / vol_b\n   \n    result4 = np.linalg.norm(norm_eigs_a - norm_eigs_b)\n    results.append(result4)\n\n    # Format the final output\n    print(f\"[{','.join(f'{r:.15f}' for r in results)}]\")\n\nsolve()\n```", "id": "2611725"}]}