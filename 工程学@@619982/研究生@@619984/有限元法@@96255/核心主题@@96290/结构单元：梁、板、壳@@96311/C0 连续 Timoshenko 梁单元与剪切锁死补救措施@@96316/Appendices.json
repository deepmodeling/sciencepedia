{"hands_on_practices": [{"introduction": "在应用有限元方法解决任何工程问题之前，首要步骤是定义整个系统的自由度和约束条件。本练习聚焦于这一基础任务，要求您为一个离散化的铁木辛柯梁模型计算未知数的总数。通过处理不同的经典边界条件，您将具体理解一个连续的物理问题是如何被转化为一个可计算的代数系统的，这是进行任何有限元分析的起点 [@problem_id:2543386]。", "problem": "一根长度为 $L$ 的直棱柱 Timoshenko 梁被一个由 $n$ 个相同的线性 $C^0$ 有限元组成的网格离散化，每个单元有 $2$ 个节点。Timoshenko 理论的基本运动学场是横向位移 $w(x)$ 和横截面转角 $\\theta(x)$，工程剪切应变为 $\\gamma(x)=w'(x)-\\theta(x)$，曲率为 $\\kappa(x)=\\theta'(x)$。在标准的 $C^0$ 有限元格式中，$w(x)$ 和 $\\theta(x)$ 都由全局 $C^0$ 形函数进行插值，并由网格节点处的节点值表示。\n\n从 Timoshenko 梁的弱（变分）形式的角度来看，本质（Dirichlet）边界数据是位移类型的量 $w$ 和 $\\theta$，而自然（Neumann）边界数据是剪力 $V$ 和弯矩 $M$。固支端规定 $w=0$ 和 $\\theta=0$；自由端不规定本质条件；简支端规定 $w=0$，而 $M$ 是自由的（因此是自然的）。\n\n假设除了 $w$ 和 $\\theta$ 的单元间 $C^0$ 连续性之外，没有多点约束和内部约束。设 $n\\in\\mathbb{N}$ 且 $n\\ge 1$。\n\n从这些基本定义和边界条件的弱形式分类出发，在施加本质边界条件后，确定在整个梁跨度上应用的以下每种支座配置的全局未知向量的维度：\n- 固支-自由（悬臂），\n- 两端简支，\n- 两端固支。\n\n通过确定 $C^0$ Timoshenko 离散化所隐含的总无约束节点未知量，并减去每种情况下的独立本质约束的数量，来推导您的计数。简要说明在每种支座情况下施加了哪些约束。\n\n将您的最终答案表示为一个单行矩阵，按上述顺序列出全局未知量的数量，以关于 $n$ 的闭式表达式表示。不需要单位（无量纲）。不需要四舍五入。", "solution": "该问题陈述在应用于结构力学的有限元方法框架内提出了一个有效且定义明确的问题。它具有科学依据，内容自洽，没有任何模糊或矛盾之处。它要求在各种支座条件下，确定离散化的 Timoshenko 梁系统中的活动自由度数量。这是计算力学中的一个基本计算。\n\n问题陈述说明一根 Timoshenko 梁使用 $n$ 个线性有限元进行离散化。一个由 $n$ 个顺序排列的线性单元组成的网格共有 $n+1$ 个节点。我们用索引 $i$ 来表示这些节点，其中 $i=1, 2, \\dots, n+1$。\n\n对于一个 $C^0$ Timoshenko 梁单元格式，每个节点 $i$ 的节点自由度（DOFs）是横向位移 $w_i$ 和横截面转角 $\\theta_i$。因此，每个节点拥有 $2$ 个自由度。\n\n无约束系统的总自由度数，即施加任何边界条件之前的全局未知向量的维度，是节点数与每个节点自由度数的乘积。\n总无约束自由度 = (节点数) $\\times$ (每节点自由度数) $= (n+1) \\times 2 = 2(n+1)$。\n\n待求解的最终全局方程组的维度，是通过从该总数中减去施加的本质（Dirichlet）边界条件的数量得出的。自然（Neumann）边界条件不直接约束节点变量；它们被并入全局力向量中，并通过弱形式的解自动满足。我们按规定分析每种支座配置。\n\n情况 1：固支-自由（悬臂）梁。\n假设梁在节点 $i=1$ 处固支，在节点 $i=n+1$ 处自由。\n- 在固支端（$i=1$），梁不能平移或转动。问题将固支端定义为本质条件 $w=0$ 和 $\\theta=0$。因此，在节点 1，我们施加 $w_1=0$ 和 $\\theta_1=0$。这构成了 $2$ 个独立的本质约束。\n- 在自由端（$i=n+1$），没有本质条件。零剪力条件 $V=0$ 和零弯矩条件 $M=0$ 是自然边界条件，不会减少未知向量的大小。\n约束总数为 $2$。\n全局未知向量的维度是总无约束自由度减去本质约束的数量：\n维度 = $2(n+1) - 2 = 2n + 2 - 2 = 2n$。\n\n情况 2：两端简支梁。\n假设梁在节点 $i=1$ 和 $i=n+1$ 处为简支。\n- 简支端由本质条件 $w=0$ 定义。零弯矩条件 $M=0$ 是自然的。\n- 在节点 $i=1$ 的支座处，我们施加本质条件 $w_1=0$。这是 $1$ 个约束。转角 $\\theta_1$ 仍然是未知量。\n- 在节点 $i=n+1$ 的支座处，我们施加本质条件 $w_{n+1}=0$。这是第二个约束。转角 $\\theta_{n+1}$ 仍然是未知量。\n两端的本质约束总数为 $1 + 1 = 2$。\n全局未知向量的维度是：\n维度 = $2(n+1) - 2 = 2n + 2 - 2 = 2n$。\n\n情况 3：两端固支梁。\n梁在两端，即节点 $i=1$ 和 $i=n+1$ 处被固支。\n- 在节点 $i=1$ 的固支端，本质边界条件是 $w_1=0$ 和 $\\theta_1=0$。这施加了 $2$ 个约束。\n- 在节点 $i=n+1$ 的固支端，本质边界条件是 $w_{n+1}=0$ 和 $\\theta_{n+1}=0$。这又施加了 $2$ 个约束。\n本质约束的总数为 $2 + 2 = 4$。\n全局未知向量的维度是：\n维度 = $2(n+1) - 4 = 2n + 2 - 4 = 2n - 2$。\n\n总之，这三种情况下全局未知向量的维度分别为 $2n$、$2n$ 和 $2n-2$。按要求，这些结果被汇编成一个单行矩阵。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n2n & 2n & 2n-2\n\\end{pmatrix}\n}\n$$", "id": "2543386"}, {"introduction": "标准的线性 $C^0$ 铁木辛柯梁单元在模拟细长梁时会产生数值上的“剪切自锁”（shear locking）问题，导致结果过于刚硬。本实践将引导您使用“单元检验法”（patch test），这是一种检验单元性能的强大诊断工具。通过对单个单元施加一个纯弯曲状态（理论上剪切应变为零），您将亲自计算并揭示标准单元为何会产生非零的伪剪切能，并验证减缩积分技术如何巧妙地修正这一缺陷 [@problem_id:2543362]。", "problem": "考虑一根长度为 $L$、抗弯刚度为 $E I$、抗剪刚度为 $k_{s} G A$ 的均匀等截面 Timoshenko 梁，用一个具有节点自由度 $\\{w_{1}, \\theta_{1}, w_{2}, \\theta_{2}\\}$ 的 $C^{0}$ 两节点 Timoshenko 梁有限元进行离散。该单元采用线性形函数 $N_{1}(x)=1-x/L$ 和 $N_{2}(x)=x/L$，使得 $w_{h}(x)=N_{1}(x) w_{1}+N_{2}(x) w_{2}$ 且 $\\theta_{h}(x)=N_{1}(x) \\theta_{1}+N_{2}(x) \\theta_{2}$。Timoshenko 梁的运动学关系由横向剪切应变 $\\gamma(x)=w'(x)-\\theta(x)$ 和弯曲曲率 $\\kappa_{b}(x)=\\theta'(x)$ 给出。Timoshenko 梁的应变能为\n$$\n\\Pi=\\frac{1}{2}\\int_{0}^{L}\\left(E I\\,\\kappa_{b}(x)^{2}+k_{s} G A\\,\\gamma(x)^{2}\\right)\\,\\mathrm{d}x.\n$$\n通过指定精确场\n$$\n\\theta^{\\star}(x)=\\theta_{0}+\\kappa_{0}\\,x,\\qquad \\gamma^{\\star}(x)=0,\\qquad w^{\\star}(x)=w_{0}+\\theta_{0}\\,x+\\frac{1}{2}\\kappa_{0}\\,x^{2},\n$$\n构造对应于常弯曲曲率和零剪切的单单元斑块检验，其中 $\\kappa_{0}\\neq 0$、$\\theta_{0}$ 和 $w_{0}$ 为给定常数。将此斑块检验应用于该单元，方法是令该单元的节点值等于精确场在 $x=0$ 和 $x=L$ 处的值，即\n$$\nw_{1}=w^{\\star}(0),\\quad \\theta_{1}=\\theta^{\\star}(0),\\quad w_{2}=w^{\\star}(L),\\quad \\theta_{2}=\\theta^{\\star}(L).\n$$\n定义单元“通过”斑块检验的条件是：在没有外部荷载的情况下，施加节点值后，单元计算出的应变能剪切贡献部分精确为零。使用 (i) $[-1,1]$ 上的 $2$ 点 Gauss 积分（映射到 $[0,L]$）和 (ii) $[-1,1]$ 上的 $1$ 点 Gauss 积分（映射到 $[0,L]$）计算该单元贡献的剪切应变能。然后定义通过指示符\n$$\nP_{\\mathrm{full}}=\\begin{cases}1,&\\text{若 }U_{s}^{\\mathrm{full}}=0,\\\n$$4pt]0,&\\text{若 }U_{s}^{\\mathrm{full}}\\neq 0,\\end{cases}\\qquad\nP_{\\mathrm{red}}=\\begin{cases}1,&\\text{若 }U_{s}^{\\mathrm{red}}=0,\\\n$$4pt]0,&\\text{若 }U_{s}^{\\mathrm{red}}\\neq 0,\\end{cases}\n$$\n其中 $U_{s}$ 表示单元能量的剪切部分，即 $U_{s}=\\frac{1}{2}\\int_{0}^{L}k_{s} G A\\,\\gamma_{h}(x)^{2}\\,\\mathrm{d}x$，并用各自的积分规则进行计算。将最终答案表示为行矩阵 $\\big(P_{\\mathrm{full}}\\;\\;P_{\\mathrm{red}}\\big)$。无需四舍五入，指示符不附带单位。", "solution": "该问题要求对一个两节点 $C^0$ Timoshenko 梁有限元执行斑块检验。该检验对应于常弯曲曲率和零剪切应变的状态。检验的结果取决于在使用两种不同的数值积分方案——$2$ 点（完全）和 $1$ 点（减缩）Gauss 积分——进行计算时，所得到的剪切应变能是零还是非零。\n\n首先，我们通过在单元节点 $x=0$ 和 $x=L$ 处计算指定的精确场来确定节点自由度 $\\{w_1, \\theta_1, w_2, \\theta_2\\}$。\n\n精确场由以下公式给出：\n$$\nw^{\\star}(x) = w_0 + \\theta_0 x + \\frac{1}{2} \\kappa_0 x^2\n$$\n$$\n\\theta^{\\star}(x) = \\theta_0 + \\kappa_0 x\n$$\n\n在第一个节点（$x=0$）处：\n$$\nw_1 = w^{\\star}(0) = w_0 + \\theta_0(0) + \\frac{1}{2}\\kappa_0(0)^2 = w_0\n$$\n$$\n\\theta_1 = \\theta^{\\star}(0) = \\theta_0 + \\kappa_0(0) = \\theta_0\n$$\n\n在第二个节点（$x=L$）处：\n$$\nw_2 = w^{\\star}(L) = w_0 + \\theta_0 L + \\frac{1}{2}\\kappa_0 L^2\n$$\n$$\n\\theta_2 = \\theta^{\\star}(L) = \\theta_0 + \\kappa_0 L\n$$\n\n接下来，我们使用线性形函数 $N_1(x) = 1 - x/L$ 和 $N_2(x) = x/L$ 以及计算出的节点值来构造插值场 $w_h(x)$ 和 $\\theta_h(x)$。\n\n插值横向位移为：\n$$\nw_h(x) = N_1(x)w_1 + N_2(x)w_2 = \\left(1 - \\frac{x}{L}\\right)w_0 + \\frac{x}{L}\\left(w_0 + \\theta_0 L + \\frac{1}{2}\\kappa_0 L^2\\right)\n$$\n$$\nw_h(x) = w_0 - \\frac{x}{L}w_0 + \\frac{x}{L}w_0 + \\theta_0 x + \\frac{1}{2}\\kappa_0 L x = w_0 + \\theta_0 x + \\frac{1}{2}\\kappa_0 L x\n$$\n\n插值转角为：\n$$\n\\theta_h(x) = N_1(x)\\theta_1 + N_2(x)\\theta_2 = \\left(1 - \\frac{x}{L}\\right)\\theta_0 + \\frac{x}{L}\\left(\\theta_0 + \\kappa_0 L\\right)\n$$\n$$\n\\theta_h(x) = \\theta_0 - \\frac{x}{L}\\theta_0 + \\frac{x}{L}\\theta_0 + \\kappa_0 x = \\theta_0 + \\kappa_0 x\n$$\n可以观察到，线性插值恢复了精确的转角场 $\\theta_h(x) = \\theta^{\\star}(x)$，但未能恢复二次的精确位移场 $w^{\\star}(x)$。\n\n剪切应变的有限元近似为 $\\gamma_h(x) = w_h'(x) - \\theta_h(x)$。我们首先计算插值位移的导数：\n$$\nw_h'(x) = \\frac{d}{dx}\\left(w_0 + \\theta_0 x + \\frac{1}{2}\\kappa_0 L x\\right) = \\theta_0 + \\frac{1}{2}\\kappa_0 L\n$$\n现在，我们求出剪切应变：\n$$\n\\gamma_h(x) = \\left(\\theta_0 + \\frac{1}{2}\\kappa_0 L\\right) - \\left(\\theta_0 + \\kappa_0 x\\right) = \\kappa_0 \\left(\\frac{L}{2} - x\\right)\n$$\n这个非零应变 $\\gamma_h(x)$ 被称为寄生剪切，因为它在有限元近似中出现，即使精确场的剪切应变为零，即 $\\gamma^{\\star}(x)=0$。\n\n单元的剪切应变能由 $U_s = \\frac{1}{2}\\int_{0}^{L}k_s G A\\,\\gamma_h(x)^2\\,\\mathrm{d}x$ 给出。代入 $\\gamma_h(x)$ 的表达式：\n$$\nU_s = \\frac{1}{2} k_s G A \\int_{0}^{L} \\left[\\kappa_0 \\left(\\frac{L}{2} - x\\right)\\right]^2 \\mathrm{d}x = \\frac{1}{2} k_s G A \\kappa_0^2 \\int_{0}^{L} \\left(x - \\frac{L}{2}\\right)^2 \\mathrm{d}x\n$$\n为了执行 Gauss 积分，我们使用变换 $x(\\xi) = \\frac{L}{2}(1+\\xi)$ 将积分域从 $x \\in [0, L]$ 映射到自然坐标 $\\xi \\in [-1, 1]$。该变换的雅可比为 $J = \\frac{dx}{d\\xi} = \\frac{L}{2}$。项 $(x - L/2)$ 变为：\n$$\nx - \\frac{L}{2} = \\frac{L}{2}(1+\\xi) - \\frac{L}{2} = \\frac{L}{2}\\xi\n$$\n剪切能量的积分变换为：\n$$\nU_s = \\frac{1}{2} k_s G A \\kappa_0^2 \\int_{-1}^{1} \\left(\\frac{L}{2}\\xi\\right)^2 \\left(\\frac{L}{2}\\right) \\mathrm{d}\\xi = \\frac{k_s G A \\kappa_0^2 L^3}{16} \\int_{-1}^{1} \\xi^2 \\mathrm{d}\\xi\n$$\n\n我们现在使用两种指定的积分规则来计算这个积分。\n\n(i) 使用 $2$ 点 Gauss 积分进行完全积分：\n积分点为 $\\xi_{1,2} = \\mp 1/\\sqrt{3}$，权重为 $w_{1,2} = 1$。\n该积分近似为：\n$$\n\\int_{-1}^{1} \\xi^2 \\mathrm{d}\\xi \\approx \\sum_{i=1}^2 w_i \\xi_i^2 = (1)\\left(-\\frac{1}{\\sqrt{3}}\\right)^2 + (1)\\left(\\frac{1}{\\sqrt{3}}\\right)^2 = \\frac{1}{3} + \\frac{1}{3} = \\frac{2}{3}\n$$\n这个结果是精确的，因为 $2$ 点 Gauss 积分对于次数最高为 $2(2)-1=3$ 的多项式是精确的。\n剪切能量为：\n$$\nU_s^{\\mathrm{full}} = \\frac{k_s G A \\kappa_0^2 L^3}{16} \\left(\\frac{2}{3}\\right) = \\frac{k_s G A \\kappa_0^2 L^3}{24}\n$$\n由于 $\\kappa_0 \\neq 0$ 且材料和几何属性为正，所以 $U_s^{\\mathrm{full}} \\neq 0$。该单元在完全积分下未能通过斑块检验。因此，通过指示符为 $P_{\\mathrm{full}}=0$。\n\n(ii) 使用 $1$ 点 Gauss 积分进行减缩积分：\n积分点为 $\\xi_1 = 0$，权重为 $w_1 = 2$。\n该积分近似为：\n$$\n\\int_{-1}^{1} \\xi^2 \\mathrm{d}\\xi \\approx \\sum_{i=1}^1 w_i \\xi_i^2 = (2)(0)^2 = 0\n$$\n剪切能量为：\n$$\nU_s^{\\mathrm{red}} = \\frac{k_s G A \\kappa_0^2 L^3}{16} (0) = 0\n$$\n由于 $U_s^{\\mathrm{red}} = 0$，该单元在减缩积分下通过了斑块检验。这是因为位于 $\\xi=0$（对应于 $x=L/2$）的单个积分点，恰好是寄生剪切应变 $\\gamma_h(x)$ 为零的点。因此，通过指示符为 $P_{\\mathrm{red}}=1$。\n\n最终答案是通过指示符的行矩阵 $(P_{\\mathrm{full}}\\;\\;P_{\\mathrm{red}})$。\n$$\n\\big(P_{\\mathrm{full}}\\;\\;P_{\\mathrm{red}}\\big) = \\big(0\\;\\;1\\big)\n$$", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0 & 1\n\\end{pmatrix}\n}\n$$", "id": "2543362"}, {"introduction": "本项综合性实践将理论付诸代码，让您在一个完整的模拟中直面剪切自锁的影响并实施修正。您将为一根悬臂梁分别实现标准的“自锁”单元和采用减缩积分的“无自锁”单元。通过将您的数值结果与不同长细比下梁的精确解析解进行定量比较，您将深刻体会到为何处理剪切自锁对于保证工程分析的准确性至关重要 [@problem_id:2543367]。", "problem": "使用季莫申科梁理论，对一根均匀矩形截面的悬臂梁进行建模。梁的轴向坐标为 $x \\in [0,L]$，横向位移场为 $w(x)$，截面转动场为 $\\theta(x)$。本构关系为 $M(x) = E I \\, \\theta'(x)$ 和 $Q(x) = \\kappa G A \\, \\big(w'(x) - \\theta(x)\\big)$，其中 $M$ 是弯矩，$Q$ 是剪力，$E$ 是杨氏模量，$G$ 是剪切模量，$I$ 是面积惯性矩，$A$ 是截面面积，$\\kappa$ 是剪切修正系数。梁在 $x=0$ 处固支，满足 $w(0) = 0$ 和 $\\theta(0) = 0$；在 $x=L$ 处承受大小为 $P$ 的集中末端荷载（横向剪力），且无施加的末端弯矩。使用季莫申科梁的弱形式，推导一个每个节点具有节点自由度 $\\{w_i,\\theta_i\\}$ 的 $\\mathcal{C}^0$ 双节点有限元，其中 $w$ 和 $\\theta$ 均采用线性插值。然后，计算在包含 $N_e$ 个单元的均匀网格下，梁的全局响应。\n\n必须实现两种单元变体：\n- 一种标准单元，其中每个单元的剪切能项和弯曲能项都采用完全高斯积分。\n- 一种采用选择性减缩积分的无闭锁单元，其中每个单元的剪切能项采用单个高斯点积分，而弯曲能项则完全积分。\n\n从第一性原理出发，始于虚功方程，展示单元刚度贡献如何从弯曲能项和剪切能项中产生，并需特别注意形函数、其导数以及从母单元到物理坐标的映射。然后，对于如上所述承受尖端荷载的悬臂梁，推导用 $(E,G,A,I,\\kappa,L,P)$ 表示的尖端转角和尖端挠度的精确季莫申科解。\n\n你的程序必须：\n- 使用上述两种单元变体，为悬臂梁组集全局刚度矩阵。\n- 在 $x=0$ 处对 $w$ 和 $\\theta$ 施加固支边界条件。\n- 将节点末端荷载 $P$ 施加在 $x=L$ 处最后一个节点的横向位移自由度上。\n- 求解所得的线性系统，以获得以米为单位的尖端挠度 $w(L)$ 和以弧度为单位的尖端转角 $\\theta(L)$。\n- 计算季莫申科尖端挠度和转角的解析解，并评估有限元预测值相对于精确解的绝对相对误差。\n\n所有物理量必须以国际单位制 (SI) 表示。挠度以米为单位，转角以弧度为单位报告。\n\n测试套件：\n- 使用 $E = 210 \\times 10^{9}$ Pa，泊松比 $\\nu = 0.3$，因此 $G = \\dfrac{E}{2(1+\\nu)}$，剪切系数 $\\kappa = \\dfrac{5}{6}$，梁宽 $b = 1$ m，梁长 $L = 1$ m，具有 $N_e = 4$ 个单元的均匀网格，以及尖端荷载 $P = 1$ N。对于厚度为 $t$ 的矩形截面，使用 $A = b t$ 和 $I = \\dfrac{b t^{3}}{12}$。\n- 评估长细比 $L/t \\in \\{5, 10, 50, 100\\}$ 的四种情况。对于每种情况，确定 $t = L/(L/t)$，然后相应地计算 $A$ 和 $I$。\n- 对于每种情况，计算四个浮点数：使用标准单元的尖端挠度绝对相对误差、使用标准单元的尖端转角绝对相对误差、使用无闭锁单元的尖端挠度绝对相对误差，以及使用无闭锁单元的尖端转角绝对相对误差。\n\n角度单位要求：所有角度必须以弧度为单位。物理单位要求：所有挠度必须以米为单位。\n\n最终输出格式：\n- 你的程序应生成单行输出，其中包含一个由方括号括起来的、针对每个测试用例的四元素列表的逗号分隔列表。每个内部列表必须按 $[L/t, \\varepsilon_{w}^{\\mathrm{std}}, \\varepsilon_{\\theta}^{\\mathrm{std}}, \\varepsilon_{w}^{\\mathrm{lf}}, \\varepsilon_{\\theta}^{\\mathrm{lf}}]$ 的顺序排列，其中每个 $\\varepsilon$ 是一个以小数（而非百分比）表示的绝对相对误差。例如：$[[5,0.001,0.002,0.0001,0.0002],[10, \\dots ],\\dots]$。", "solution": "问题要求使用季莫申科梁理论对悬臂梁进行有限元分析。我们必须构造两种类型的 $\\mathcal{C}^0$ 双节点单元：一种是表现出剪切闭锁的标准完全积分单元，另一种是采用选择性减缩积分的无闭锁单元。分析结果将与承受尖端荷载的悬臂梁的精确解析解进行比较。\n\n我们从基本原理开始。季莫申科梁的应变能 $U$ 由弯曲和剪切两部分贡献组成：\n$$ U = \\frac{1}{2} \\int_{0}^{L} \\left( E I \\left(\\frac{d\\theta}{dx}\\right)^2 + \\kappa G A \\left(\\frac{dw}{dx} - \\theta\\right)^2 \\right) dx $$\n此处，$w(x)$ 是横向位移，$\\theta(x)$ 是截面转角，$E$ 是杨氏模量，$G$ 是剪切模量，$I$ 是面积惯性矩，$A$ 是截面面积，$\\kappa$ 是剪切修正系数，$L$ 是梁的长度。\n\n虚功原理指出，对于一个处于平衡状态的系统，内力的虚功等于外力的虚功。对于本问题，在 $x=L$ 处施加了尖端荷载 $P$，其弱形式由 $\\delta U = \\delta W_{\\text{ext}}$ 给出，即：\n$$ \\int_{0}^{L} E I \\frac{d\\theta}{dx} \\frac{d(\\delta\\theta)}{dx} dx + \\int_{0}^{L} \\kappa G A \\left(\\frac{dw}{dx} - \\theta\\right) \\left(\\frac{d(\\delta w)}{dx} - \\delta\\theta\\right) dx = P \\delta w(L) $$\n此方程对所有运动学上容许的虚位移 $\\delta w$ 和虚转角 $\\delta\\theta$ 均成立。第一个积分代表弯曲能的贡献，第二个积分代表剪切能的贡献。\n\n现在我们将域离散为 $N_e$ 个有限元。对于长度为 $h_e$ 的单个双节点单元，我们引入一个局部坐标 $\\xi \\in [-1, 1]$。物理坐标 $x$ 通过 $x(\\xi) = x_c + \\frac{h_e}{2}\\xi$ 进行映射，其中 $x_c$ 是单元的中心。此变换的雅可比为 $J = \\frac{dx}{d\\xi} = \\frac{h_e}{2}$。\n\n单元内的位移场 $w(x)$ 和转动场 $\\theta(x)$ 是通过使用线性拉格朗日形函数 $N_1$ 和 $N_2$ 从节点自由度 $\\mathbf{d}^e = \\{w_1, \\theta_1, w_2, \\theta_2\\}^T$ 插值得到的：\n$$ N_1(\\xi) = \\frac{1}{2}(1-\\xi), \\quad N_2(\\xi) = \\frac{1}{2}(1+\\xi) $$\n$$ w(\\xi) = N_1(\\xi)w_1 + N_2(\\xi)w_2 $$\n$$ \\theta(\\xi) = N_1(\\xi)\\theta_1 + N_2(\\xi)\\theta_2 $$\n\n对 $x$ 的导数为 $\\frac{d(\\cdot)}{dx} = \\frac{d\\xi}{dx}\\frac{d(\\cdot)}{d\\xi} = \\frac{2}{h_e}\\frac{d(\\cdot)}{d\\xi}$。我们定义应变-位移矩阵。曲率为 $\\frac{d\\theta}{dx} = \\mathbf{B}_b \\mathbf{d}^e$，剪应变为 $\\gamma = \\frac{dw}{dx} - \\theta = \\mathbf{B}_s \\mathbf{d}^e$。\n用于弯曲的矩阵 $\\mathbf{B}_b$ 由 $\\theta$ 的导数推导得出：\n$$ \\frac{d\\theta}{dx} = \\frac{2}{h_e} \\left( \\frac{dN_1}{d\\xi}\\theta_1 + \\frac{dN_2}{d\\xi}\\theta_2 \\right) = \\frac{2}{h_e} \\left( -\\frac{1}{2}\\theta_1 + \\frac{1}{2}\\theta_2 \\right) = \\frac{1}{h_e}(-\\theta_1 + \\theta_2) $$\n$$ \\mathbf{B}_b = \\frac{1}{h_e} \\begin{bmatrix} 0 & -1 & 0 & 1 \\end{bmatrix} $$\n用于剪切的矩阵 $\\mathbf{B}_s$ 由 $\\frac{dw}{dx} - \\theta$ 推导得出：\n$$ \\frac{dw}{dx} = \\frac{1}{h_e}(-w_1 + w_2) $$\n$$ \\gamma = \\frac{1}{h_e}(-w_1 + w_2) - (N_1(\\xi)\\theta_1 + N_2(\\xi)\\theta_2) $$\n$$ \\mathbf{B}_s(\\xi) = \\begin{bmatrix} -\\frac{1}{h_e} & -N_1(\\xi) & \\frac{1}{h_e} & -N_2(\\xi) \\end{bmatrix} = \\begin{bmatrix} -\\frac{1}{h_e} & -\\frac{1}{2}(1-\\xi) & \\frac{1}{h_e} & -\\frac{1}{2}(1+\\xi) \\end{bmatrix} $$\n单元刚度矩阵 $\\mathbf{k}^e = \\mathbf{k}_b^e + \\mathbf{k}_s^e$ 是通过将这些离散形式代入弱形式并在单元域上积分得到的：\n$$ \\mathbf{k}_b^e = \\int_{-1}^{1} \\mathbf{B}_b^T E I \\mathbf{B}_b \\, J \\, d\\xi $$\n$$ \\mathbf{k}_s^e = \\int_{-1}^{1} \\mathbf{B}_s(\\xi)^T \\kappa G A \\mathbf{B}_s(\\xi) \\, J \\, d\\xi $$\n\n对于弯曲刚度 $\\mathbf{k}_b^e$，由于 $\\mathbf{B}_b$ 是常数，因此被积函数也是常数。积分为：\n$$ \\mathbf{k}_b^e = E I \\mathbf{B}_b^T \\mathbf{B}_b h_e = \\frac{E I}{h_e} \\begin{bmatrix} 0 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & -1 \\\\ 0 & 0 & 0 & 0 \\\\ 0 & -1 & 0 & 1 \\end{bmatrix} $$\n这个结果是精确的，可以通过单个高斯点获得。\n\n对于剪切刚度 $\\mathbf{k}_s^e$，被积函数 $\\mathbf{B}_s^T \\mathbf{B}_s$ 是一个 $4 \\times 4$ 矩阵，其中包含 $\\xi$ 的最高2次多项式。完全精确积分需要一个2点高斯求积法则（$n$ 点法则可以精确积分最高 $2n-1$ 次的多项式；对于2次多项式，我们需要 $n=2$ 个点）。\n标准单元使用这种2点法则。对于剪切变形可以忽略不计的细长梁，$\\kappa G A$ 项会变得非常大。数值积分在两个点上强制施加了条件 $\\frac{dw}{dx} - \\theta \\approx 0$，这对于使用线性形函数的单元来说是过度约束，导致了一种被称为剪切闭锁的人为刚性响应。\n\n无闭锁单元使用选择性减缩积分。我们用1点高斯求积法则（$\\xi=0$，权 $w=2$）对剪切项进行积分。这仅在单元中心施加了约束 $\\frac{dw}{dx} - \\theta = 0$，从而减弱了人为刚度。在 $\\xi=0$ 处，$\\mathbf{B}_s(0) = [-\\frac{1}{h_e}, -\\frac{1}{2}, \\frac{1}{h_e}, -\\frac{1}{2}]$。\n$$ \\mathbf{k}_s^e(\\text{reduced}) = \\kappa G A (\\mathbf{B}_s(0)^T \\mathbf{B}_s(0)) \\frac{h_e}{2} (2) = \\frac{\\kappa G A}{h_e} \\begin{bmatrix} 1 & h_e/2 & -1 & h_e/2 \\\\ h_e/2 & h_e^2/4 & -h_e/2 & h_e^2/4 \\\\ -1 & -h_e/2 & 1 & -h_e/2 \\\\ h_e/2 & h_e^2/4 & -h_e/2 & h_e^2/4 \\end{bmatrix} $$\n\n接下来，我们推导精确的解析解。控制微分方程可以通过势能的一次变分得到，从而导出其强形式。使用与我们的弱形式一致的符号约定，可得：\n$$ \\frac{dM}{dx} = -Q, \\quad \\frac{dQ}{dx} = 0 $$\n其中 $M = EI \\frac{d\\theta}{dx}$ 是弯矩，$Q = \\kappa G A (\\frac{dw}{dx} - \\theta)$ 是剪力。\n对于在 $x=L$ 处承受尖端荷载 $P$ 的悬臂梁，其边界条件为 $w(0)=0, \\theta(0)=0, M(L)=0, Q(L)=P$。\n由 $Q'=0$ 和 $Q(L)=P$ 可得，对所有 $x$ 都有 $Q(x)=P$。\n由 $M' = -Q = -P$，积分可得 $M(x) = -Px + C_1$。利用 $M(L)=0$，我们发现 $-PL+C_1=0 \\Rightarrow C_1=PL$。因此，$M(x)=P(L-x)$。\n现在我们求解 $\\theta(x)$ 和 $w(x)$：\n$$ \\frac{d\\theta}{dx} = \\frac{M(x)}{EI} = \\frac{P(L-x)}{EI} $$\n积分并利用 $\\theta(0)=0$：\n$$ \\theta(x) = \\frac{P}{EI}\\left(Lx - \\frac{x^2}{2}\\right) $$\n接下来，根据剪切本构关系：\n$$ \\frac{dw}{dx} = \\theta(x) + \\frac{Q(x)}{\\kappa G A} = \\frac{P}{EI}\\left(Lx - \\frac{x^2}{2}\\right) + \\frac{P}{\\kappa G A} $$\n积分并利用 $w(0)=0$：\n$$ w(x) = \\frac{P}{EI}\\left(\\frac{Lx^2}{2} - \\frac{x^3}{6}\\right) + \\frac{Px}{\\kappa G A} $$\n在尖端 $x=L$ 处求值，我们得到精确的尖端挠度和转角：\n$$ w_{\\text{ex}}(L) = \\frac{P}{EI}\\left(\\frac{L^3}{2} - \\frac{L^3}{6}\\right) + \\frac{PL}{\\kappa G A} = \\frac{PL^3}{3EI} + \\frac{PL}{\\kappa G A} $$\n$$ \\theta_{\\text{ex}}(L) = \\frac{P}{EI}\\left(L^2 - \\frac{L^2}{2}\\right) = \\frac{PL^2}{2EI} $$\n这些公式提供了用于验证有限元解的基准。这些项分别代表了弯曲和剪切对挠度的贡献，以及纯弯曲对转角的贡献。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Timoshenko beam problem using two different finite element formulations\n    and compares the results to the exact analytical solution.\n    \"\"\"\n\n    # --- Problem Parameters ---\n    E = 210e9  # Young's modulus in Pa\n    nu = 0.3    # Poisson's ratio\n    G = E / (2 * (1 + nu))  # Shear modulus in Pa\n    kappa_s = 5.0 / 6.0  # Shear correction factor\n    b = 1.0     # Beam width in m\n    L = 1.0     # Beam length in m\n    P = 1.0     # Tip load in N\n    Ne = 4      # Number of elements\n    h = L / Ne  # Element length\n\n    # --- Test Cases ---\n    slenderness_ratios = [5, 10, 50, 100]\n    test_cases = []\n    for s_ratio in slenderness_ratios:\n        t = L / s_ratio\n        A = b * t\n        I = (b * t**3) / 12\n        test_cases.append({\n            \"slenderness\": s_ratio,\n            \"A\": A,\n            \"I\": I\n        })\n    \n    # Gauss quadrature points and weights\n    # 2-point rule for full integration of shear term\n    gauss_points_2 = [-1.0 / np.sqrt(3.0), 1.0 / np.sqrt(3.0)]\n    gauss_weights_2 = [1.0, 1.0]\n\n    all_results = []\n\n    def get_element_stiffness(A, I, integration_type):\n        \"\"\"Calculates the 4x4 element stiffness matrix.\"\"\"\n        # Bending stiffness matrix (k_b)\n        # This is constant and integration is exact with one point.\n        k_b = (E * I / h) * np.array([\n            [0, 0, 0, 0],\n            [0, 1, 0, -1],\n            [0, 0, 0, 0],\n            [0, -1, 0, 1]\n        ])\n\n        # Shear stiffness matrix (k_s)\n        k_s = np.zeros((4, 4))\n        if integration_type == 'full':\n            # Full integration (2-point Gauss quadrature)\n            for xi, w in zip(gauss_points_2, gauss_weights_2):\n                N1 = 0.5 * (1 - xi)\n                N2 = 0.5 * (1 + xi)\n                # Shear strain-displacement matrix B_s\n                B_s = np.array([-1.0/h, -N1, 1.0/h, -N2])\n                k_s += w * np.outer(B_s, B_s)\n            k_s *= kappa_s * G * A * h / 2.0\n        \n        elif integration_type == 'reduced':\n            # Reduced integration (1-point Gauss quadrature at xi=0)\n            # Analytically derived formula for efficiency\n            factor = kappa_s * G * A / h\n            k_s = factor * np.array([\n                [1,         h/2,       -1,      h/2],\n                [h/2,   h**2/4,  -h/2,   h**2/4],\n                [-1,     -h/2,        1,     -h/2],\n                [h/2,   h**2/4,  -h/2,   h**2/4]\n            ])\n        \n        return k_b + k_s\n\n    def run_fem(A, I, integration_type):\n        \"\"\"Assembles and solves the global finite element system.\"\"\"\n        num_dofs = 2 * (Ne + 1)\n        K_global = np.zeros((num_dofs, num_dofs))\n        F_global = np.zeros(num_dofs)\n\n        # Get element stiffness matrix\n        k_e = get_element_stiffness(A, I, integration_type)\n\n        # Assemble global stiffness matrix\n        for i in range(Ne):\n            dof_indices = np.array([2*i, 2*i + 1, 2*i + 2, 2*i + 3])\n            K_global[np.ix_(dof_indices, dof_indices)] += k_e\n\n        # Apply force boundary condition\n        # A positive force P is applied to the transverse displacement DOF of the last node.\n        F_global[2 * Ne] = P\n\n        # Apply displacement boundary conditions (clamped at x=0)\n        # w(0) = 0 and theta(0) = 0\n        K_global[0, :] = 0\n        K_global[:, 0] = 0\n        K_global[0, 0] = 1.0\n        F_global[0] = 0\n\n        K_global[1, :] = 0\n        K_global[:, 1] = 0\n        K_global[1, 1] = 1.0\n        F_global[1] = 0\n\n        # Solve the system\n        d = np.linalg.solve(K_global, F_global)\n\n        # Extract tip deflection and rotation\n        tip_deflection = d[2 * Ne]\n        tip_rotation = d[2 * Ne + 1]\n        \n        return tip_deflection, tip_rotation\n\n    for case in test_cases:\n        s_ratio = case['slenderness']\n        A = case['A']\n        I = case['I']\n\n        # --- Exact Solution ---\n        w_exact = (P * L**3) / (3 * E * I) + (P * L) / (kappa_s * G * A)\n        theta_exact = (P * L**2) / (2 * E * I)\n\n        # --- FEM Solutions ---\n        # Standard Element (Full Integration)\n        w_std, theta_std = run_fem(A, I, 'full')\n\n        # Locking-Free Element (Reduced Integration)\n        w_lf, theta_lf = run_fem(A, I, 'reduced')\n\n        # --- Calculate Relative Errors ---\n        err_w_std = abs((w_std - w_exact) / w_exact)\n        err_theta_std = abs((theta_std - theta_exact) / theta_exact)\n        err_w_lf = abs((w_lf - w_exact) / w_exact)\n        err_theta_lf = abs((theta_lf - theta_exact) / theta_exact)\n        \n        all_results.append([s_ratio, err_w_std, err_theta_std, err_w_lf, err_theta_lf])\n\n    # Final print statement in the exact required format.\n    print(str(all_results).replace(\" \", \"\"))\n\nsolve()\n```", "id": "2543367"}]}