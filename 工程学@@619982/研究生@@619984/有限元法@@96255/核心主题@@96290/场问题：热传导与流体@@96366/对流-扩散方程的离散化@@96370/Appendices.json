{"hands_on_practices": [{"introduction": "中心差分格式因其二阶精度而广受欢迎，但在求解对流占主导的问题时可能会产生非物理的振荡。本练习将引导你亲手推导出一个关键条件，揭示当网格佩克莱数（$Pe$）超过某个阈值时，离散后的线性系统将失去保证解稳定性的重要性质——对角占优性。通过这个实践，你将从根本上理解数值振荡的来源，并认识到佩克莱数在选择数值格式时的核心作用。[@problem_id:1127364]", "problem": "考虑如下给定的一维稳态平流-扩散-反应方程：\n$$u \\frac{d\\phi}{dx} - \\Gamma \\frac{d^2\\phi}{dx^2} + k\\phi = 0$$\n其中，$\\phi(x)$ 是待求变量，$u$ 是一个常数正速度（$u>0$），$\\Gamma$ 是一个常数正扩散系数（$\\Gamma>0$），$k$ 是一个非负常数反应速率（$k \\ge 0$）。\n\n该方程将在一个间距为 $\\Delta x$ 的均匀网格上进行数值求解。空间导数采用二阶中心差分格式进行近似：\n$$ \\left(\\frac{d\\phi}{dx}\\right)_i \\approx \\frac{\\phi_{i+1} - \\phi_{i-1}}{2\\Delta x} $$\n$$ \\left(\\frac{d^2\\phi}{dx^2}\\right)_i \\approx \\frac{\\phi_{i+1} - 2\\phi_i + \\phi_{i-1}}{(\\Delta x)^2} $$\n其中 $\\phi_i = \\phi(x_i)$ 是 $\\phi$ 在网格节点 $i$ 处的值。应用这些离散化方法会得到一个线性代数方程组，可以表示为矩阵形式 $A\\mathbf{\\phi} = \\mathbf{b}$。对于一个内部节点 $i$，矩阵 $A$ 中对应的行将有三个非零元素：$A_{i,i-1}$、$A_{i,i}$ 和 $A_{i,i+1}$。\n\n如果对于矩阵 $A$ 的每一行 $i$，对角元素的绝对值大于或等于该行所有非对角元素的绝对值之和，则称该矩阵为对角占优：\n$$ |A_{i,i}| \\ge \\sum_{j \\neq i} |A_{i,j}| $$\n该性质对于许多迭代数值求解器的稳定性和收敛性至关重要。\n\n我们定义两个无量纲参数：\n- 单元佩克莱数 (cell Péclet number)：$Pe = \\frac{u \\Delta x}{\\Gamma}$\n- 单元丹科勒数 (cell Damköhler number)：$Da = \\frac{k (\\Delta x)^2}{\\Gamma}$\n\n假设 $Pe \\ge 0$，推导佩克莱数的临界值 $Pe_{crit}$，该值是丹科勒数 $Da$ 的函数。当佩克莱数大于此临界值时（$Pe > Pe_{crit}$），所得到的矩阵 $A$ 将不再保证是对角占优的。", "solution": "我们将稳态一维平流-扩散-反应方程\n$$u\\frac{d\\phi}{dx}-\\Gamma\\frac{d^2\\phi}{dx^2}+k\\phi=0$$\n在一个间距为 $\\Delta x$ 的均匀网格上，使用中心差分格式进行离散化：\n$$\\frac{d\\phi}{dx}\\Big|_i\\approx\\frac{\\phi_{i+1}-\\phi_{i-1}}{2\\Delta x},\\quad\n\\frac{d^2\\phi}{dx^2}\\Big|_i\\approx\\frac{\\phi_{i+1}-2\\phi_i+\\phi_{i-1}}{(\\Delta x)^2}.$$\n代入偏微分方程，得到在节点 $i$ 处：\n$$u\\frac{\\phi_{i+1}-\\phi_{i-1}}{2\\Delta x}\n-\\Gamma\\frac{\\phi_{i+1}-2\\phi_i+\\phi_{i-1}}{(\\Delta x)^2}\n+k\\,\\phi_i=0.$$\n将其重排为模板形式 $A_{i,i-1}\\phi_{i-1}+A_{i,i}\\phi_i+A_{i,i+1}\\phi_{i+1}=0$，我们可确定\n$$A_{i,i-1}=-\\frac{u}{2\\Delta x}-\\frac{\\Gamma}{(\\Delta x)^2},\\quad\nA_{i,i}=\\frac{2\\Gamma}{(\\Delta x)^2}+k,\\quad\nA_{i,i+1}=\\frac{u}{2\\Delta x}-\\frac{\\Gamma}{(\\Delta x)^2}.$$\n对角占优要求每一行都满足\n$$|A_{i,i}|\\ge|A_{i,i-1}|+|A_{i,i+1}|.$$\n由于 $u,\\Gamma>0$, $k \\ge 0$，我们有\n$$\\bigl|\\tfrac{2\\Gamma}{(\\Delta x)^2}+k\\bigr|\n\\ge\\Bigl|\\text{-}\\tfrac{u}{2\\Delta x}-\\tfrac{\\Gamma}{(\\Delta x)^2}\\Bigr|\n+\\Bigl|\\tfrac{u}{2\\Delta x}-\\tfrac{\\Gamma}{(\\Delta x)^2}\\Bigr|.$$\n因为括号内的项都是正的，这可以简化为：\n$$\\tfrac{2\\Gamma}{(\\Delta x)^2}+k\n\\ge\\Bigl(\\tfrac{u}{2\\Delta x}+\\tfrac{\\Gamma}{(\\Delta x)^2}\\Bigr)\n+\\Bigl|\\tfrac{u}{2\\Delta x}-\\tfrac{\\Gamma}{(\\Delta x)^2}\\Bigr|.$$\n引入无量纲数\n$$Pe=\\frac{u\\Delta x}{\\Gamma},\\quad Da=\\frac{k(\\Delta x)^2}{\\Gamma}.$$\n将不等式两边同除以 $\\Gamma/(\\Delta x)^2$ 得到\n$$2+Da\\ge\\frac{Pe}{2}+1+\\Bigl|\\frac{Pe}{2}-1\\Bigr|,$$\n等价于\n$$Da+1-\\frac{Pe}{2}\\ge\\Bigl|\\frac{Pe}{2}-1\\Bigr|.$$\n由此可分两种情况：\n1. 若 $Pe2$，则 $|\\tfrac{Pe}{2}-1|=1-\\tfrac{Pe}{2}$，不等式简化为 $Da\\ge0$，此式恒成立。\n2. 若 $Pe\\ge2$，则 $|\\tfrac{Pe}{2}-1|=\\tfrac{Pe}{2}-1$，可得\n$$Da+1-\\frac{Pe}{2}\\ge\\frac{Pe}{2}-1\\quad\\Longrightarrow\\quad Pe\\le Da+2.$$\n因此，失去对角占优的临界佩克莱数为\n$$Pe_{crit}=Da+2.$$", "answer": "$$\\boxed{2 + Da}$$", "id": "1127364"}, {"introduction": "在诊断了简单格式的缺陷之后，我们来构建一个更稳健的解决方案。本练习将指导你推导著名的一维 Scharfetter-Gummel 通量公式，这是许多专为解决高佩克莱数问题而设计的“指数拟合”格式的基石。通过在单元内部嵌入局部问题的精确解，该方法能够提供一个在物理上更精确且高度稳定的通量表达式，从而有效抑制数值振荡。[@problem_id:2540928]", "problem": "考虑一个长度为 $h$ 的一维线性有限元上标量场 $u(x)$ 的稳态一维对流-扩散问题，其中对流速度 $a0$ 和扩散率 $D0$ 均为常数。单元内部的局部强形式为 $- \\frac{d}{dx}\\!\\left(D \\frac{du}{dx}\\right) + a \\frac{du}{dx} = 0$。设单元跨度为 $x \\in [0,h]$，节点值分别为 $u(0)=u_i$ 和 $u(h)=u_{i+1}$。本着作为 Scharfetter–Gummel 离散化基础的指数拟合精神，假设此单元上两点边值问题的局部精确解，并用它来获得单元内常数通量 $J = - D \\frac{du}{dx} + a u$。\n\n从给定的强形式和边界条件出发，推导 $J$ 的闭式表达式，使其仅包含 $u_i$、$u_{i+1}$、$a$、$D$ 和 $h$ （无其他未知数）。然后，使用无量纲数据 $u_i = 1.3$、$u_{i+1} = 0.6$、$a = 2.7$、$D = 0.15$ 和 $h = 0.4$ 计算 $J$。将 $J$ 的最终数值四舍五入到 $4$ 位有效数字。所有量均为无量纲；只报告标量值。", "solution": "所给问题是关于稳态一维常系数对流-扩散方程的一个标准两点边值问题。该问题是适定的且在科学上是合理的，因此可以进行分析。我们接下来进行推导。\n\n单元内控制方程的局部强形式为：\n$$\n- \\frac{d}{dx}\\!\\left(D \\frac{du}{dx}\\right) + a \\frac{du}{dx} = 0\n$$\n其中 $a > 0$ 和 $D > 0$ 是常数。由于 $D$ 是常数，该式可简化为：\n$$\n-D \\frac{d^2u}{dx^2} + a \\frac{du}{dx} = 0\n$$\n该方程可以在域 $[0, x]$ 上对 $x$ 积分一次：\n$$\n\\int_0^x \\left( -D u''(\\xi) + a u'(\\xi) \\right) d\\xi = \\int_0^x 0 \\, d\\xi\n$$\n$$\n\\left[ -D u'(\\xi) + a u(\\xi) \\right]_0^x = \\text{常数}\n$$\n这表明，对于所有 $x \\in [0, h]$，量 $J(x) = -D \\frac{du}{dx} + a u(x)$ 必须是一个常数，我们称之为 $J$。这个常数 $J$ 代表了穿过单元的总通量（扩散通量加对流通量）。\n\n为了找到这个常数通量 $J$ 的表达式，我们必须首先求解满足给定边界条件的控制常微分方程 (ODE) 的精确解 $u(x)$。该 ODE 是一个二阶线性齐次常系数方程。其特征方程为：\n$$\n-D r^2 + a r = 0 \\implies r(a - Dr) = 0\n$$\n特征方程的根是 $r_1 = 0$ 和 $r_2 = \\frac{a}{D}$。由于 $a > 0$ 且 $D > 0$，这两个根是实数且不相等。因此，$u(x)$ 的通解是：\n$$\nu(x) = C_1 e^{r_1 x} + C_2 e^{r_2 x} = C_1 + C_2 \\exp\\left(\\frac{a}{D}x\\right)\n$$\n其中 $C_1$ 和 $C_2$ 是积分常数。这些常数由单元上的边界条件确定，即节点值 $u(0) = u_i$ 和 $u(h) = u_{i+1}$。\n\n应用 $x=0$ 处的边界条件：\n$$\nu(0) = C_1 + C_2 \\exp(0) = C_1 + C_2 = u_i\n$$\n应用 $x=h$ 处的边界条件：\n$$\nu(h) = C_1 + C_2 \\exp\\left(\\frac{ah}{D}\\right) = u_{i+1}\n$$\n我们得到了一个关于 $C_1$ 和 $C_2$ 的二元线性方程组。从第一个方程，我们得到 $C_1 = u_i - C_2$。将其代入第二个方程得到：\n$$\n(u_i - C_2) + C_2 \\exp\\left(\\frac{ah}{D}\\right) = u_{i+1}\n$$\n求解 $C_2$：\n$$\nC_2 \\left(\\exp\\left(\\frac{ah}{D}\\right) - 1\\right) = u_{i+1} - u_i\n$$\n$$\nC_2 = \\frac{u_{i+1} - u_i}{\\exp\\left(\\frac{ah}{D}\\right) - 1}\n$$\n现在，我们可以找到常数通量 $J$ 的表达式。对通解 $u(x)$ 求导，我们得到：\n$$\n\\frac{du}{dx} = C_2 \\frac{a}{D} \\exp\\left(\\frac{a}{D}x\\right)\n$$\n将此式以及 $u(x)$ 的通解代入通量 $J$ 的定义中：\n$$\nJ = -D \\left(C_2 \\frac{a}{D} \\exp\\left(\\frac{a}{D}x\\right)\\right) + a \\left(C_1 + C_2 \\exp\\left(\\frac{a}{D}x\\right)\\right)\n$$\n$$\nJ = -a C_2 \\exp\\left(\\frac{a}{D}x\\right) + a C_1 + a C_2 \\exp\\left(\\frac{a}{D}x\\right)\n$$\n$$\nJ = a C_1\n$$\n这是一个简洁的结果。常数通量与积分常数 $C_1$ 成正比。我们可以使用前面推导出的表达式来求解 $C_1$：\n$$\nC_1 = u_i - C_2 = u_i - \\frac{u_{i+1} - u_i}{\\exp\\left(\\frac{ah}{D}\\right) - 1}\n$$\n合并各项：\n$$\nC_1 = \\frac{u_i \\left(\\exp\\left(\\frac{ah}{D}\\right) - 1\\right) - (u_{i+1} - u_i)}{\\exp\\left(\\frac{ah}{D}\\right) - 1} = \\frac{u_i \\exp\\left(\\frac{ah}{D}\\right) - u_i - u_{i+1} + u_i}{\\exp\\left(\\frac{ah}{D}\\right) - 1} = \\frac{u_i \\exp\\left(\\frac{ah}{D}\\right) - u_{i+1}}{\\exp\\left(\\frac{ah}{D}\\right) - 1}\n$$\n因此，常数通量 $J$ 的闭式表达式为：\n$$\nJ = a \\left( \\frac{u_i \\exp\\left(\\frac{ah}{D}\\right) - u_{i+1}}{\\exp\\left(\\frac{ah}{D}\\right) - 1} \\right)\n$$\n这就是所要求的解析表达式，在计算物理学中被称为 Scharfetter-Gummel 通量公式。\n\n现在，我们用给定的无量纲数据计算这个表达式：$u_i = 1.3$，$u_{i+1} = 0.6$，$a = 2.7$，$D = 0.15$，和 $h = 0.4$。\n首先，我们计算指数的参数，即网格佩克莱数，$P_e$：\n$$\nP_e = \\frac{ah}{D} = \\frac{2.7 \\times 0.4}{0.15} = \\frac{1.08}{0.15} = 7.2\n$$\n将数值代入 $J$ 的表达式中：\n$$\nJ = 2.7 \\left( \\frac{1.3 \\exp(7.2) - 0.6}{\\exp(7.2) - 1} \\right)\n$$\n为了提高计算的数值准确性，我们可以重写这个分数：\n$$\n\\frac{1.3 \\exp(7.2) - 0.6}{\\exp(7.2) - 1} = \\frac{1.3 (\\exp(7.2) - 1) + 1.3 - 0.6}{\\exp(7.2) - 1} = 1.3 + \\frac{0.7}{\\exp(7.2) - 1}\n$$\n使用数值 $\\exp(7.2) \\approx 1339.430562$：\n$$\nJ \\approx 2.7 \\left( 1.3 + \\frac{0.7}{1339.430562 - 1} \\right) = 2.7 \\left( 1.3 + \\frac{0.7}{1338.430562} \\right)\n$$\n$$\nJ \\approx 2.7 (1.3 + 0.000522999) = 2.7 \\times 1.300522999 \\approx 3.5114120973\n$$\n将最终数值四舍五入到 $4$ 位有效数字，我们得到 $J \\approx 3.511$。", "answer": "$$\n\\boxed{3.511}\n$$", "id": "2540928"}, {"introduction": "理论上的优雅固然重要，但在实际工程和科研中，计算效率才是王道。最后一个练习是一个计算性实践，你将建立一个模型来量化比较不同数值格式的综合性能，权衡其精度、稳定性和计算成本。这项实践将使你能够基于佩克莱数从扩散主导到对流主导的变化，为特定问题做出明智的格式选择，将理论知识转化为实用的决策能力。[@problem_id:2423016]", "problem": "你将编写一个完整的、可运行的程序，通过第一性原理推导，比较几种求解一维线性平流-扩散方程的显式有限差分格式的计算效率：\n$$\nu_t + a\\,u_x = \\nu\\,u_{xx},\n$$\n其中 $u = u(x,t)$，$a$ 是平流速度，$\\nu$ 是运动粘度。目标是探明对于不同的Péclet数，哪种数值格式（以及哪种阶数）最为高效。Péclet数的定义为：\n$$\n\\mathrm{Pe} = \\frac{a L}{\\nu},\n$$\n其中 $L$ 是特征长度。在本问题中，取 $L = 1$ 米，最终时间 $T = 1$ 秒，并且固定 $\\nu = 1$ 平方米/秒。对于每个测试用例，使用 $a = \\mathrm{Pe}$ 米/秒，从而通过改变 $a$ 同时保持 $\\nu$ 不变来实现指定的Péclet数。\n\n你的程序必须从以下四种由整数标识符编码的显式格式中进行选择，每种格式都耦合了一个用于平流项 $u_x$ 的 $p$ 阶迎风空间离散、一个用于扩散项 $u_{xx}$ 的二阶中心空间离散，以及一个 $r$ 阶的显式Runge–Kutta时间积分器：\n- 格式 $0$：$p=1$，$r=1$（时间上为前向欧拉法），每步成本因子 $c = 5$。\n- 格式 $1$：$p=2$，$r=2$（2阶显式Runge–Kutta法），每步成本因子 $c = 12$。\n- 格式 $2$：$p=3$，$r=3$（3阶显式Runge–Kutta法），每步成本因子 $c = 21$。\n- 格式 $3$：$p=4$，$r=4$（4阶显式Runge–Kutta法），每步成本因子 $c = 32$。\n\n假设以下基本且经过充分检验的事实：\n1. 用于 $u_x$ 的 $p$ 阶迎风近似的局部截断误差量级为 $O(h^p)$，其中 $h$ 是网格间距。用于 $u_{xx}$ 的中心离散是二阶的，因此其空间误差量级为 $O(h^2)$。一个 $r$ 阶的显式Runge–Kutta法的时间误差量级为 $O(\\Delta t^r)$，其中 $\\Delta t$ 是时间步长。\n2. 为了模拟在最终时间 $T$ 的全局误差，将主要贡献项视为可加的，并与算子系数成正比。使用量纲一致的缩放关系，将三个主要贡献项建模为：\n$$\ne_{\\text{adv,space}} \\sim a\\,T\\,h^p,\\quad e_{\\text{diff,space}} \\sim \\nu\\,T\\,h^2,\\quad e_{\\text{time}} \\sim T\\,\\Delta t^r.\n$$\n将所有隐藏常数归一化为1。\n3. 对于显式稳定性，采用Courant–Friedrichs–Lewy (CFL) 型限制和扩散限制。令 $\\sigma = a\\,\\Delta t/h$ 和 $\\mu = \\nu\\,\\Delta t/h^2$。对所有四种格式使用 $\\sigma_{\\max} = 1$。对于扩散数限制，根据每个Runge–Kutta法稳定性区域沿负实轴的范围，使用不同的 $\\mu_{\\max}$ 值：对于 $r=1$，$\\mu_{\\max} = 0.5$；对于 $r=2$，$\\mu_{\\max} = 0.5$；对于 $r=3$，$\\mu_{\\max} \\approx 0.628$；对于 $r=4$，$\\mu_{\\max} \\approx 0.696$。\n\n需要实现的决策规则和成本模型：\n- 施加精度约束，要求每个贡献项不大于目标容差 $\\varepsilon$ 的三分之一：\n$$\na\\,T\\,h^p \\le \\frac{\\varepsilon}{3},\\qquad \\nu\\,T\\,h^2 \\le \\frac{\\varepsilon}{3},\\qquad T\\,\\Delta t^r \\le \\frac{\\varepsilon}{3}.\n$$\n- 施加稳定性约束：\n$$\n\\Delta t \\le \\frac{\\sigma_{\\max}\\,h}{a},\\qquad \\Delta t \\le \\frac{\\mu_{\\max}\\,h^2}{\\nu}.\n$$\n- 对于给定的格式 $(p,r)$，选择满足所有约束的最大 $h$ 和 $\\Delta t$：\n$$\nh^\\star = \\min\\!\\left[\\left(\\frac{\\varepsilon}{3\\,a\\,T}\\right)^{\\!1/p},\\;\\sqrt{\\frac{\\varepsilon}{3\\,\\nu\\,T}}\\right],\\qquad \\Delta t^\\star = \\min\\!\\left[\\left(\\frac{\\varepsilon}{3\\,T}\\right)^{\\!1/r},\\;\\frac{\\sigma_{\\max}\\,h^\\star}{a},\\;\\frac{\\mu_{\\max}\\,(h^\\star)^2}{\\nu}\\right].\n$$\n- 令空间点数为 $N_x = \\lceil L/h^\\star \\rceil$，时间步数为 $N_t = \\lceil T/\\Delta t^\\star \\rceil$。将计算量定义为\n$$\nW = c \\, N_x \\, N_t,\n$$\n其中 $c$ 是上面为每种格式给出的每步成本因子。选择使 $W$ 最小化的格式标识符；如果出现平局，选择最小的标识符。\n\n物理单位：$L$ 使用米，$a$ 使用米/秒，$\\nu$ 使用平方米/秒，$T$ 使用秒。目标容差 $\\varepsilon$ 是一个无量纲的误差幅值。所有中间量必须按规定使用一致的国际单位制（SI）单位处理。程序的最终输出仅包含整数格式标识符，这些标识符是无单位的。\n\n测试套件：\n- 所有测试用例均使用 $L = 1$ 米，$T = 1$ 秒，以及 $\\nu = 1$ 平方米/秒。\n- 使用以下Péclet数和容差：\n    1. $\\mathrm{Pe} = 0.1$, $\\varepsilon = 10^{-4}$,\n    2. $\\mathrm{Pe} = 1$, $\\varepsilon = 10^{-4}$,\n    3. $\\mathrm{Pe} = 10$, $\\varepsilon = 10^{-4}$,\n    4. $\\mathrm{Pe} = 100$, $\\varepsilon = 10^{-4}$,\n    5. $\\mathrm{Pe} = 10000$, $\\varepsilon = 10^{-4}$,\n    6. $\\mathrm{Pe} = 100$, $\\varepsilon = 10^{-6}$。\n\n要求的最终输出格式：\n- 你的程序应生成单行输出，其中包含六个测试用例所选出的格式标识符，形式为一个用方括号括起来的逗号分隔列表（例如，“[0,1,2,3,1,0]”）。\n- 本问题不使用角度，因此不需要角度单位。\n- 本问题不使用百分比；所有容差都是无量纲的实数。\n\n你的任务：\n- 精确地实现上述模型，使用给定的稳定性界限、精度缩放关系和成本因子。\n- 对每个测试用例，计算使 $W$ 最小化的最有效格式标识符。\n- 以确切要求的格式打印列表。", "solution": "所呈现的问题是对几种用于一维线性平流-扩散方程的数值格式的计算效率进行对比分析。该分析基于一个明确定义的计算成本模型，该模型源于数值分析中关于精度和稳定性的基本原理。该问题是有效的，因为它具有科学依据、内容自洽且算法明确。我们将继续进行解的详细推导。\n\n控制偏微分方程是平流-扩散方程：\n$$\n\\frac{\\partial u}{\\partial t} + a \\frac{\\partial u}{\\partial x} = \\nu \\frac{\\partial^2 u}{\\partial x^2}\n$$\n这里，$u(x,t)$ 是被输运的量，$a$ 是恒定的平流速度，$\\nu$ 是恒定的运动粘度。平流相对于扩散的重要性由无量纲佩克莱数 $\\mathrm{Pe} = \\frac{a L}{\\nu}$ 来表征，其中 $L$ 是特征长度尺度。在本问题中，给定 $L=1$ 米，最终时间 $T=1$ 秒，固定粘度 $\\nu=1$ m$^2$/s。平流速度通过关系式 $a = \\mathrm{Pe}$ m/s 与佩克莱数耦合。\n\n目标是对于给定的佩克莱数 $\\mathrm{Pe}$ 和目标误差容差 $\\varepsilon$，在四个候选数值格式中找到计算效率最高的一个。这些格式都是显式的，并基于线法（method of lines），其中空间和时间离散被分开处理。每个格式由一个三元组 $(p, r, c)$ 定义：平流项的迎风空间离散阶数（$p$）、显式龙格-库塔（Runge-Kutta）时间积分器的阶数（$r$），以及每个网格点每个时间步的相对计算成本因子（$c$）。扩散项统一使用二阶中心差分格式进行离散。\n\n总计算量 $W$ 被建模为成本因子、空间网格点数 $N_x$ 和时间步数 $N_t$ 的乘积：\n$$\nW = c \\, N_x \\, N_t\n$$\n为了最小化 $W$，我们必须确定满足精度和稳定性要求的 $N_x$ 和 $N_t$ 的最小必要值。这些数值与空间网格间距 $h$ 和时间步长 $\\Delta t$ 相关，关系为 $N_x = \\lceil L/h \\rceil$ 和 $N_t = \\lceil T/\\Delta t \\rceil$。因此，问题的核心是找到满足所有约束的尽可能大的 $h$ 和 $\\Delta t$。\n\n首先，我们分析精度约束。问题陈述提供了一个在最终时间 $T$ 的全局误差模型，该模型假设为来自每个项的主要误差贡献之和。在所有比例常数归一化为1的情况下，通过将目标容差 $\\varepsilon$ 分配给三个误差源来实现该容差：平流-空间、扩散-空间和时间。每个贡献项必须小于或等于 $\\varepsilon/3$。\n\n1. 平流项 ($a\\,u_x$) 的空间精度：该格式使用 $p$ 阶迎风离散，其误差量级为 $a\\,T\\,h^p$。我们必须满足：\n$$\na\\,T\\,h^p \\le \\frac{\\varepsilon}{3} \\implies h \\le \\left(\\frac{\\varepsilon}{3\\,a\\,T}\\right)^{1/p}\n$$\n\n2. 扩散项 ($\\nu\\,u_{xx}$) 的空间精度：该格式使用二阶中心离散，其误差量级为 $\\nu\\,T\\,h^2$。我们必须满足：\n$$\n\\nu\\,T\\,h^2 \\le \\frac{\\varepsilon}{3} \\implies h \\le \\sqrt{\\frac{\\varepsilon}{3\\,\\nu\\,T}}\n$$\n为了同时满足这两个空间精度要求，网格间距 $h$ 不能大于这两个上界中的最小值。因此，对于 $h$ 的最优（最大）选择，记为 $h^\\star$，是：\n$$\nh^\\star = \\min\\left[ \\left(\\frac{\\varepsilon}{3\\,a\\,T}\\right)^{1/p}, \\sqrt{\\frac{\\varepsilon}{3\\,\\nu\\,T}} \\right]\n$$\n\n接下来，我们确定时间步长 $\\Delta t$。它受到时间精度和数值稳定性的约束。\n\n3. 时间精度：时间积分由一个 $r$ 阶龙格-库塔方法执行。误差量级为 $T\\,\\Delta t^r$。这施加了以下约束：\n$$\nT\\,\\Delta t^r \\le \\frac{\\varepsilon}{3} \\implies \\Delta t \\le \\left(\\frac{\\varepsilon}{3\\,T}\\right)^{1/r}\n$$\n\n4. 平流稳定性（CFL条件）：对于显式平流格式，时间步长受到库朗-弗里德里希-列维（CFL）条件的限制，该条件指出数值依赖域必须包含物理依赖域。这通过库朗数 $\\sigma = a\\,\\Delta t/h$ 来表示。约束是：\n$$\n\\frac{a\\,\\Delta t}{h} \\le \\sigma_{\\max} \\implies \\Delta t \\le \\frac{\\sigma_{\\max}\\,h}{a}\n$$\n这里，对所有格式均使用 $\\sigma_{\\max} = 1$。\n\n5. 扩散稳定性：对于显式扩散格式，时间步长受到与扩散数 $\\mu = \\nu\\,\\Delta t/h^2$ 相关的稳定性条件的限制。约束是：\n$$\n\\frac{\\nu\\,\\Delta t}{h^2} \\le \\mu_{\\max} \\implies \\Delta t \\le \\frac{\\mu_{\\max}\\,h^2}{\\nu}\n$$\n$\\mu_{\\max}$ 的值取决于特定龙格-库塔方法稳定性区域沿负实轴的范围。问题为每种格式提供了这些值。\n\n所选的时间步长 $\\Delta t$ 必须满足所有这三个上界。为了使用尽可能大的时间步长（从而使用最少的步数 $N_t$），我们在先前确定的最优网格间距 $h^\\star$ 处评估稳定性约束，并取所有三个界限的最小值。最优时间步长 $\\Delta t^\\star$ 是：\n$$\n\\Delta t^\\star = \\min\\left[ \\left(\\frac{\\varepsilon}{3\\,T}\\right)^{1/r}, \\frac{\\sigma_{\\max}\\,h^\\star}{a}, \\frac{\\mu_{\\max}\\,(h^\\star)^2}{\\nu} \\right]\n$$\n\n对于特定格式 $(p, r, c)$ 和特定测试用例 $(\\mathrm{Pe}, \\varepsilon)$，在确定了 $h^\\star$ 和 $\\Delta t^\\star$ 后，计算量 $W$ 的计算方法如下：\n$$\nN_x = \\left\\lceil \\frac{L}{h^\\star} \\right\\rceil, \\quad N_t = \\left\\lceil \\frac{T}{\\Delta t^\\star} \\right\\rceil, \\quad W = c \\cdot N_x \\cdot N_t\n$$\n\n最后一步是为给定测试用例的四种格式中的每一种执行此过程。产生最小 $W$ 值的格式被宣布为最有效。在 $W$ 值相同的情况下，选择具有较小整数标识符的格式。对所提供的六个测试用例中的每一个都重复这整个过程。\n\n每个测试用例的算法如下：\n对于一个给定的测试用例 $(\\mathrm{Pe}, \\varepsilon)$：\n1. 设置 $a = \\mathrm{Pe}$，使用固定值 $L=1$, $T=1$, $\\nu=1$。\n2. 对于每个格式 $i \\in \\{0, 1, 2, 3\\}$ 及其参数 $(p_i, r_i, c_i, \\mu_{\\max,i})$：\n    a. 计算 $h^\\star_i = \\min\\left[ (\\frac{\\varepsilon}{3aT})^{1/p_i}, \\sqrt{\\frac{\\varepsilon}{3\\nu T}} \\right]$。\n    b. 计算 $\\Delta t^\\star_i = \\min\\left[ (\\frac{\\varepsilon}{3T})^{1/r_i}, \\frac{\\sigma_{\\max} h^\\star_i}{a}, \\frac{\\mu_{\\max,i} (h^\\star_i)^2}{\\nu} \\right]$。\n    c. 计算 $N_{x,i} = \\lceil L/h^\\star_i \\rceil$ 和 $N_{t,i} = \\lceil T/\\Delta t^\\star_i \\rceil$。\n    d. 计算工作量 $W_i = c_i \\cdot N_{x,i} \\cdot N_{t,i}$。\n3. 找到使 $W_i$ 最小化的索引 $i_{\\text{opt}}$。如果存在平局，则选择最小的索引。\n4. 最优格式标识符是 $i_{\\text{opt}}$。\n\n这个过程系统地权衡了高阶方法（在给定精度下允许更大的步长 $h, \\Delta t$）与它们每步更高的计算成本（$c$）和可能更严格的稳定性约束之间的利弊。最优选择关键取决于问题参数，特别是佩克莱数，它决定了系统是平流主导还是扩散主导。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# from scipy import ...\n\ndef solve():\n    \"\"\"\n    Compares the computational efficiency of several explicit finite difference schemes\n    for the 1D linear advection-diffusion equation.\n    \"\"\"\n    \n    # Define physical constants and problem parameters from the statement.\n    L = 1.0  # Characteristic length in meters\n    T = 1.0  # Final time in seconds\n    NU = 1.0 # Kinematic viscosity in m^2/s\n\n    # Define the four numerical schemes with their properties:\n    # (p: advection order, r: time order, c: cost factor, mu_max: diffusion stability limit)\n    schemes = [\n        # Scheme 0: p=1, r=1 (FE)\n        {'p': 1, 'r': 1, 'c': 5, 'mu_max': 0.5},\n        # Scheme 1: p=2, r=2 (RK2)\n        {'p': 2, 'r': 2, 'c': 12, 'mu_max': 0.5},\n        # Scheme 2: p=3, r=3 (RK3)\n        {'p': 3, 'r': 3, 'c': 21, 'mu_max': 0.628},\n        # Scheme 3: p=4, r=4 (RK4)\n        {'p': 4, 'r': 4, 'c': 32, 'mu_max': 0.696},\n    ]\n    SIGMA_MAX = 1.0 # CFL stability limit for all schemes\n\n    # Define the test cases from the problem statement.\n    # Each test case is a tuple (Péclet number, tolerance epsilon).\n    test_cases = [\n        (0.1, 1e-4),\n        (1.0, 1e-4),\n        (10.0, 1e-4),\n        (100.0, 1e-4),\n        (10000.0, 1e-4),\n        (100.0, 1e-6),\n    ]\n\n    results = []\n    \n    # Iterate through each test case\n    for pe_number, epsilon in test_cases:\n        # Calculate advection speed 'a' based on Péclet number\n        a = pe_number * NU / L\n\n        min_work = float('inf')\n        best_scheme_id = -1\n\n        # Iterate through each scheme to find the most efficient one\n        for i, scheme in enumerate(schemes):\n            p = scheme['p']\n            r = scheme['r']\n            c = scheme['c']\n            mu_max = scheme['mu_max']\n\n            # --- Step 1: Calculate optimal spatial step h_star ---\n            # Accuracy constraint from advection term\n            # using np.power for consistency and to handle potential fractional exponents\n            h_adv_acc = np.power(epsilon / (3.0 * a * T), 1.0 / p)\n            \n            # Accuracy constraint from diffusion term\n            h_diff_acc = np.sqrt(epsilon / (3.0 * NU * T))\n            \n            # h_star is the minimum of the two to satisfy both constraints\n            h_star = min(h_adv_acc, h_diff_acc)\n\n            # --- Step 2: Calculate optimal time step dt_star ---\n            # Constraint from time integration accuracy\n            dt_acc = np.power(epsilon / (3.0 * T), 1.0 / r)\n            \n            # Constraint from advective (CFL) stability\n            dt_adv_stab = (SIGMA_MAX * h_star) / a\n            \n            # Constraint from diffusive stability\n            dt_diff_stab = (mu_max * h_star**2) / NU\n            \n            # dt_star is the minimum to satisfy all three constraints\n            dt_star = min(dt_acc, dt_adv_stab, dt_diff_stab)\n\n            # --- Step 3: Calculate computational work W ---\n            # Number of spatial points\n            nx = int(np.ceil(L / h_star))\n            \n            # Number of time steps\n            nt = int(np.ceil(T / dt_star))\n            \n            # Total computational work\n            work = c * nx * nt\n\n            # --- Step 4: Update the best scheme ---\n            # If current scheme is more efficient, update min_work and best_scheme_id\n            # Tie-breaking rule: select the smallest identifier.\n            # This is naturally handled by checking for strict inequality.\n            if work  min_work:\n                min_work = work\n                best_scheme_id = i\n        \n        results.append(best_scheme_id)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2423016"}]}