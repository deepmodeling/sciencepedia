{"hands_on_practices": [{"introduction": "在有限元分析中，一项至关重要的技能是验证单元的行为。本练习旨在挑战您设计一种特定的“单元检验”，用以分离并激发沙漏模式。通过构建一个在常应变场上不做功的自平衡力模式，您将学会如何诊断一个单元是否易于产生这些伪零能变形。", "problem": "考虑一个用于有限元法 (FEM) 的、具有 $4$ 个节点的单​​个等参双线性四边形单元。该单元是一个平面应力状态下的正方形，边长为 $L$，厚度为 $t$，节点从左下角开始按 $1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4$ 逆时针编号。在全局笛卡尔坐标系中，节点坐标为\n$$\n(x_1,y_1)=\\left(-\\frac{L}{2},-\\frac{L}{2}\\right),\\quad\n(x_2,y_2)=\\left(+\\frac{L}{2},-\\frac{L}{2}\\right),\\quad\n(x_3,y_3)=\\left(+\\frac{L}{2},+\\frac{L}{2}\\right),\\quad\n(x_4,y_4)=\\left(-\\frac{L}{2},+\\frac{L}{2}\\right).\n$$\n假设该单元的刚度采用减缩（$1$点）数值积分，众所周知，这种方法容易产生沙漏（零能）模式。要求您为一种单元检验的变体设计一种自平衡的节点载荷，以揭示其沙漏敏感性：具体来说，该载荷应 (i) 合力为零，(ii) 绕单元中心的合力矩为零，以及 (iii) 对任何刚体位移场或常应变位移场做功可忽略不计（从而主要激发沙漏模式）。\n\n设 $\\mathbf{f}_i=(F_{x,i},F_{y,i})$ 表示施加在节点 $i$ 上的力，并设 $F>0$ 为一个给定的参考量值。以下哪种节点载荷分配满足上述三个要求，从而构成一种适用于沙漏模式的单元检验风格的激励？选择所有适用项。\n\nA. $\\mathbf{f}_1=(+F,0)$, $\\mathbf{f}_2=(-F,0)$, $\\mathbf{f}_3=(+F,0)$, $\\mathbf{f}_4=(-F,0)$.\n\nB. $\\mathbf{f}_1=(0,+F)$, $\\mathbf{f}_2=(0,-F)$, $\\mathbf{f}_3=(0,+F)$, $\\mathbf{f}_4=(0,-F)$.\n\nC. $\\mathbf{f}_1=(+F,0)$, $\\mathbf{f}_2=(0,+F)$, $\\mathbf{f}_3=(-F,0)$, $\\mathbf{f}_4=(0,-F)$.\n\nD. $\\mathbf{f}_1=(+F,0)$, $\\mathbf{f}_2=(-F,0)$, $\\mathbf{f}_3=(-F,0)$, $\\mathbf{f}_4=(+F,0)$.\n\n您的答案应对应于这样的载荷模式：当在一个 $2\\times 2$ 的单元片上进行一致拼接时，会产生一个棋盘格交替模式，在该单元片上净力和净力矩为零，并能在减缩积分单元中选择性地激发沙漏模式。", "solution": "一个能激发沙漏模式的合适载荷必须满足三个主要要求。设节点力向量为 $\\mathbf{f} = (F_{x,1}, F_{y,1}, F_{x,2}, F_{y,2}, F_{x,3}, F_{y,3}, F_{x,4}, F_{y,4})^T$。\n\n**要求 (i)：合力为零**\n这确保力系在平移上是自平衡的。\n$$ \\sum_{i=1}^4 F_{x,i} = 0 $$\n$$ \\sum_{i=1}^4 F_{y,i} = 0 $$\n\n**要求 (ii)：合力矩为零**\n这确保力系在旋转上是自平衡的。单元中心位于 $(0,0)$。绕 z 轴的力矩为：\n$$ M_z = \\sum_{i=1}^4 (x_i F_{y,i} - y_i F_{x,i}) = 0 $$\n\n**要求 (iii)：对刚体和常应变模式做功可忽略不计**\n在二维中，一个一般线性位移场可以写为 $\\mathbf{u}(x,y) = (u(x,y), v(x,y))$，其中：\n$$ u(x,y) = a_1 + a_2 x + a_3 y $$\n$$ v(x,y) = b_1 + b_2 x + b_3 y $$\n这个场代表了所有的刚体运动和常应变状态。由节点力 $\\mathbf{f}$ 对一个由节点位移 $\\mathbf{d}$ 定义的位移场做的功为 $W = \\mathbf{f}^T \\mathbf{d}$。要求 (iii) 规定，对于由线性基函数 $(1,0)$, $(x,0)$, $(y,0)$, $(0,1)$, $(0,x)$, $(0,y)$ 生成的任何位移场，都有 $W=0$。\n这得出了以下六个正交条件：\n1.  对 $\\mathbf{u}=(1,0)$ 做的功：$\\sum_{i=1}^4 F_{x,i} = 0$。（与要求 (i) 相同）\n2.  对 $\\mathbf{u}=(0,1)$ 做的功：$\\sum_{i=1}^4 F_{y,i} = 0$。（与要求 (i) 相同）\n3.  对 $\\mathbf{u}=(x,0)$ 做的功：$\\sum_{i=1}^4 x_i F_{x,i} = 0$。\n4.  对 $\\mathbf{u}=(y,0)$ 做的功：$\\sum_{i=1}^4 y_i F_{x,i} = 0$。\n5.  对 $\\mathbf{u}=(0,x)$ 做的功：$\\sum_{i=1}^4 x_i F_{y,i} = 0$。\n6.  对 $\\mathbf{u}=(0,y)$ 做的功：$\\sum_{i=1}^4 y_i F_{y,i} = 0$。\n\n注意到要求 (ii)，即 $M_z = \\sum x_i F_{y,i} - \\sum y_i F_{x,i} = 0$，是条件 4 和 5 的线性组合。因此，满足这六个正交条件就会自动满足所有三个陈述的要求。力向量必须与线性场空间正交，但在沙漏模式空间上具有非零投影。主要的沙漏位移模式由节点模式 $\\mathbf{d}_{h1} = (\\delta, 0, -\\delta, 0, \\delta, 0, -\\delta, 0)^T$ (x-沙漏) 和 $\\mathbf{d}_{h2} = (0, \\delta, 0, -\\delta, 0, \\delta, 0, -\\delta)^T$ (y-沙漏) 给出，其中 $\\delta$ 是一个任意位移。如果 $\\mathbf{f}^T \\mathbf{d}_{h1} \\neq 0$ 或 $\\mathbf{f}^T \\mathbf{d}_{h2} \\neq 0$，则力模式 $\\mathbf{f}$ 会激发这些模式。\n\n我们现在评估每个选项。为方便起见，我们使用坐标向量 $\\mathbf{x} = (x_1, x_2, x_3, x_4) = \\frac{L}{2}(-1, 1, 1, -1)$ 和 $\\mathbf{y} = (y_1, y_2, y_3, y_4) = \\frac{L}{2}(-1, -1, 1, 1)$。\n\n**评估选项 A**\n$\\mathbf{f}_1=(+F,0)$, $\\mathbf{f}_2=(-F,0)$, $\\mathbf{f}_3=(+F,0)$, $\\mathbf{f}_4=(-F,0)$.\n力分量向量为 $\\mathbf{F}_x = (F, -F, F, -F)$ 和 $\\mathbf{F}_y = (0, 0, 0, 0)$。\n1.  $\\sum F_{x,i} = F - F + F - F = 0$。\n2.  $\\sum F_{y,i} = 0$。\n3.  $\\sum x_i F_{x,i} = \\frac{L}{2}(-1(F) + 1(-F) + 1(F) - 1(-F)) = \\frac{FL}{2}(-1 - 1 + 1 + 1) = 0$。\n4.  $\\sum y_i F_{x,i} = \\frac{L}{2}(-1(F) - 1(-F) + 1(F) + 1(-F)) = \\frac{FL}{2}(-1 + 1 + 1 - 1) = 0$。\n5.  $\\sum x_i F_{y,i} = 0$。\n6.  $\\sum y_i F_{y,i} = 0$。\n所有条件都满足。该力系对任何线性位移场做功为零。\n现在，检查在 $\\delta=1$ 时对 x-沙漏模式 $\\mathbf{d}_{h1}$ 做的功：\n$W = \\sum F_{x,i} u_i = F(1) + (-F)(-1) + F(1) + (-F)(-1) = 4F$。由于 $F>0$，所以 $W \\neq 0$。\n该力模式激发了 x-沙漏模式。因此，选项 A 是**正确的**。\n\n**评估选项 B**\n$\\mathbf{f}_1=(0,+F)$, $\\mathbf{f}_2=(0,-F)$, $\\mathbf{f}_3=(0,+F)$, $\\mathbf{f}_4=(0,-F)$.\n力分量向量为 $\\mathbf{F}_x = (0, 0, 0, 0)$ 和 $\\mathbf{F}_y = (F, -F, F, -F)$。\n1.  $\\sum F_{x,i} = 0$。\n2.  $\\sum F_{y,i} = F - F + F - F = 0$。\n3.  $\\sum x_i F_{x,i} = 0$。\n4.  $\\sum y_i F_{x,i} = 0$。\n5.  $\\sum x_i F_{y,i} = \\frac{L}{2}(-1(F) + 1(-F) + 1(F) - 1(-F)) = \\frac{FL}{2}(-1 - 1 + 1 + 1) = 0$。\n6.  $\\sum y_i F_{y,i} = \\frac{L}{2}(-1(F) - 1(-F) + 1(F) + 1(-F)) = \\frac{FL}{2}(-1 + 1 + 1 - 1) = 0$。\n所有条件都满足。该力系对任何线性位移场做功为零。\n现在，检查在 $\\delta=1$ 时对 y-沙漏模式 $\\mathbf{d}_{h2}$ 做的功：\n$W = \\sum F_{y,i} v_i = F(1) + (-F)(-1) + F(1) + (-F)(-1) = 4F$。由于 $F>0$，所以 $W \\neq 0$。\n该力模式激发了 y-沙漏模式。因此，选项 B 是**正确的**。\n\n**评估选项 C**\n$\\mathbf{f}_1=(+F,0)$, $\\mathbf{f}_2=(0,+F)$, $\\mathbf{f}_3=(-F,0)$, $\\mathbf{f}_4=(0,-F)$.\n力分量向量为 $\\mathbf{F}_x = (F, 0, -F, 0)$ 和 $\\mathbf{F}_y = (0, F, 0, -F)$。\n我们检查力矩（要求 (ii)）：\n$M_z = \\sum (x_i F_{y,i} - y_i F_{x,i})$\n$\\sum x_i F_{y,i} = x_2 F_{y,2} + x_4 F_{y,4} = (\\frac{L}{2})(F) + (-\\frac{L}{2})(-F) = FL$。\n$\\sum y_i F_{x,i} = y_1 F_{x,1} + y_3 F_{x,3} = (-\\frac{L}{2})(F) + (\\frac{L}{2})(-F) = -FL$。\n$M_z = FL - (-FL) = 2FL$。\n由于 $F>0$ 且 $L>0$，所以 $M_z \\neq 0$。这违反了要求 (ii)。该力系不是自平衡的。因此，选项 C 是**不正确的**。\n\n**评估选项 D**\n$\\mathbf{f}_1=(+F,0)$, $\\mathbf{f}_2=(-F,0)$, $\\mathbf{f}_3=(-F,0)$, $\\mathbf{f}_4=(+F,0)$.\n力分量向量为 $\\mathbf{F}_x = (F, -F, -F, F)$ 和 $\\mathbf{F}_y = (0, 0, 0, 0)$。\n让我们检查要求 (iii) 的条件 3，即对一个常应变 $\\epsilon_x$ 场做的功：\n$\\sum x_i F_{x,i} = x_1 F_{x,1} + x_2 F_{x,2} + x_3 F_{x,3} + x_4 F_{x,4}$\n$= (-\\frac{L}{2})(F) + (\\frac{L}{2})(-F) + (\\frac{L}{2})(-F) + (-\\frac{L}{2})(F)$\n$= -\\frac{FL}{2} - \\frac{FL}{2} - \\frac{FL}{2} - \\frac{FL}{2} = -2FL$。\n这是一个非零值，违反了要求 (iii)。该力模式对应于纯弯矩，并对线性位移场做功。它不是一种针对沙漏的载荷。因此，选项 D 是**不正确的**。", "answer": "$$\\boxed{AB}$$", "id": "2565928"}, {"introduction": "在了解了如何激发沙漏模式之后，我们现在将深入探究其数学根源。这个练习要求您从第一性原理出发，推导三维六面体单元的沙漏形函数。通过施加积分点应变为零的条件，您将构建出定义这些有问题的、非物理变形模式的函数。", "problem": "考虑参考立方体上的一个八节点三线性六面体单元 ($\\text{Hex8}$)，其母坐标为 $(\\xi,\\eta,\\zeta) \\in [-1,1]^3$。节点顺序和坐标如下：\n- 节点 $1$: $(\\xi_1,\\eta_1,\\zeta_1)=(-1,-1,-1)$,\n- 节点 $2$: $(\\xi_2,\\eta_2,\\zeta_2)=(1,-1,-1)$,\n- 节点 $3$: $(\\xi_3,\\eta_3,\\zeta_3)=(1,1,-1)$,\n- 节点 $4$: $(\\xi_4,\\eta_4,\\zeta_4)=(-1,1,-1)$,\n- 节点 $5$: $(\\xi_5,\\eta_5,\\zeta_5)=(-1,-1,1)$,\n- 节点 $6$: $(\\xi_6,\\eta_6,\\zeta_6)=(1,-1,1)$,\n- 节点 $7$: $(\\xi_7,\\eta_7,\\zeta_7)=(1,1,1)$,\n- 节点 $8$: $(\\xi_8,\\eta_8,\\zeta_8)=(-1,1,1)$.\n\n假设物理映射为恒等映射，因此有 $\\partial/\\partial x=\\partial/\\partial \\xi$、$\\partial/\\partial y=\\partial/\\partial \\eta$ 和 $\\partial/\\partial z=\\partial/\\partial \\zeta$。标准三线性形函数为\n$$\nN_i(\\xi,\\eta,\\zeta)=\\frac{1}{8}\\left(1+\\xi_i \\xi\\right)\\left(1+\\eta_i \\eta\\right)\\left(1+\\zeta_i \\zeta\\right),\\quad i=1,\\dots,8.\n$$\n设位移场近似为 $u^x(\\xi,\\eta,\\zeta)=\\sum_{i=1}^{8} N_i(\\xi,\\eta,\\zeta)\\,u_i^x$，对于 $u^y$ 和 $u^z$ 也有类似的表达式。在单个高斯点 $(\\xi,\\eta,\\zeta)=(0,0,0)$ 处，Voigt 形式的小应变张量涉及该点上形函数的导数 $\\partial N_i/\\partial \\xi$、$\\partial N_i/\\partial \\eta$ 和 $\\partial N_i/\\partial \\zeta$。\n\n定义四个标量沙漏形函数 $\\gamma^{\\alpha}(\\xi,\\eta,\\zeta)$（$\\alpha=1,2,3,4$），使得对于任意标量幅值 $a$，相关的节点沙漏位移模式\n$$\nu_i^x=\\gamma^{\\alpha}(\\xi_i,\\eta_i,\\zeta_i)\\,a,\\quad u_i^y=0,\\quad u_i^z=0,\\quad i=1,\\dots,8,\n$$\n在高斯点处产生零应变。对每个 $\\alpha$ 施加附加约束 $\\sum_{i=1}^{8}\\gamma^{\\alpha}(\\xi_i,\\eta_i,\\zeta_i)=0$，以排除刚体平移。使用满足这些条件的、具有最小总次数的 $(\\xi,\\eta,\\zeta)$ 多项式函数。\n\n构造这样一组四个线性无关的 $\\gamma^{\\alpha}(\\xi,\\eta,\\zeta)$，并使用上述节点顺序，为每个 $\\alpha$ 组装相应的节点沙漏向量 $g^{\\alpha}=\\big(\\gamma^{\\alpha}(\\xi_1,\\eta_1,\\zeta_1),\\dots,\\gamma^{\\alpha}(\\xi_8,\\eta_8,\\zeta_8)\\big)$。您的推导必须从三线性形函数和高斯点处的小应变-位移关系的定义开始，并论证您为何选择的函数会产生零应变。\n\n将您的最终答案以行矩阵 $\\big(\\gamma^{1}(\\xi,\\eta,\\zeta)\\ \\gamma^{2}(\\xi,\\eta,\\zeta)\\ \\gamma^{3}(\\xi,\\eta,\\zeta)\\ \\gamma^{4}(\\xi,\\eta,\\zeta)\\big)$ 的形式给出。无需进行四舍五入。无需提供物理单位。", "solution": "$x$方向的位移场由 $u^x(\\xi,\\eta,\\zeta) = \\sum_{i=1}^{8} N_i(\\xi,\\eta,\\zeta) u_i^x$ 给出。小应变张量的分量是位移场空间导数的函数。由于是恒等映射，物理导数等于母坐标导数。我们关注的是单个高斯点 $(\\xi, \\eta, \\zeta) = (0,0,0)$ 处的应变。对于给定的位移模式（其中只有 $u_i^x$ 分量非零），相关的应变分量为 $\\epsilon_{xx}$、$\\gamma_{xy}$ 和 $\\gamma_{zx}$（工程剪切应变）。\n\n应变分量为：\n$$\n\\epsilon_{xx} = \\frac{\\partial u^x}{\\partial x} = \\frac{\\partial u^x}{\\partial \\xi} = \\sum_{i=1}^{8} \\frac{\\partial N_i}{\\partial \\xi} u_i^x\n$$\n$$\n\\gamma_{xy} = \\frac{\\partial u^x}{\\partial y} + \\frac{\\partial u^y}{\\partial x} = \\frac{\\partial u^x}{\\partial \\eta} = \\sum_{i=1}^{8} \\frac{\\partial N_i}{\\partial \\eta} u_i^x\n$$\n$$\n\\gamma_{zx} = \\frac{\\partial u^x}{\\partial z} + \\frac{\\partial u^z}{\\partial x} = \\frac{\\partial u^x}{\\partial \\zeta} = \\sum_{i=1}^{8} \\frac{\\partial N_i}{\\partial \\zeta} u_i^x\n$$\n其他应变分量 $\\epsilon_{yy}$、$\\epsilon_{zz}$ 和 $\\gamma_{yz}$ 恒为零，因为 $u^y$ 和 $u^z$ 为零。\n\n为了计算这些在高斯点 $(\\xi,\\eta,\\zeta)=(0,0,0)$ 处的应变，我们必须首先计算该点处形函数的导数。节点 $i$ 的形函数为：\n$$\nN_i(\\xi,\\eta,\\zeta) = \\frac{1}{8}(1+\\xi_i\\xi)(1+\\eta_i\\eta)(1+\\zeta_i\\zeta)\n$$\n其导数为：\n$$\n\\frac{\\partial N_i}{\\partial \\xi} = \\frac{1}{8}\\xi_i(1+\\eta_i\\eta)(1+\\zeta_i\\zeta)\n$$\n$$\n\\frac{\\partial N_i}{\\partial \\eta} = \\frac{1}{8}\\eta_i(1+\\xi_i\\xi)(1+\\zeta_i\\zeta)\n$$\n$$\n\\frac{\\partial N_i}{\\partial \\zeta} = \\frac{1}{8}\\zeta_i(1+\\xi_i\\xi)(1+\\eta_i\\eta)\n$$\n在 $(\\xi, \\eta, \\zeta) = (0,0,0)$ 处计算这些导数，得到：\n$$\n\\left.\\frac{\\partial N_i}{\\partial \\xi}\\right|_{(0,0,0)} = \\frac{1}{8}\\xi_i\n$$\n$$\n\\left.\\frac{\\partial N_i}{\\partial \\eta}\\right|_{(0,0,0)} = \\frac{1}{8}\\eta_i\n$$\n$$\n\\left.\\frac{\\partial N_i}{\\partial \\zeta}\\right|_{(0,0,0)} = \\frac{1}{8}\\zeta_i\n$$\n因此，中心点处的应变为：\n$$\n\\epsilon_{xx}|_{(0,0,0)} = \\frac{1}{8} \\sum_{i=1}^{8} \\xi_i u_i^x, \\quad\n\\gamma_{xy}|_{(0,0,0)} = \\frac{1}{8} \\sum_{i=1}^{8} \\eta_i u_i^x, \\quad\n\\gamma_{zx}|_{(0,0,0)} = \\frac{1}{8} \\sum_{i=1}^{8} \\zeta_i u_i^x\n$$\n沙漏模式是一种在积分点处产生零应变的节点位移模式 $\\{u_i^x\\}$。因此，必须满足以下条件：\n$$\n\\sum_{i=1}^{8} \\xi_i u_i^x = 0\n$$\n$$\n\\sum_{i=1}^{8} \\eta_i u_i^x = 0\n$$\n$$\n\\sum_{i=1}^{8} \\zeta_i u_i^x = 0\n$$\n问题通过一个在节点坐标处求值的标量函数 $\\gamma^{\\alpha}(\\xi,\\eta,\\zeta)$ 来定义节点位移模式：$u_i^x = \\gamma^{\\alpha}(\\xi_i, \\eta_i, \\zeta_i) a$。忽略任意幅值 $a$，我们要求：\n$$\n\\sum_{i=1}^{8} \\xi_i \\gamma^{\\alpha}(\\xi_i, \\eta_i, \\zeta_i) = 0\n$$\n$$\n\\sum_{i=1}^{8} \\eta_i \\gamma^{\\alpha}(\\xi_i, \\eta_i, \\zeta_i) = 0\n$$\n$$\n\\sum_{i=1}^{8} \\zeta_i \\gamma^{\\alpha}(\\xi_i, \\eta_i, \\zeta_i) = 0\n$$\n此外，问题要求这些模式与刚体平移正交，这可转化为：\n$$\n\\sum_{i=1}^{8} (1) \\cdot \\gamma^{\\alpha}(\\xi_i, \\eta_i, \\zeta_i) = 0\n$$\n我们在 $\\mathbb{R}^8$ 中定义四个节点向量：\n$\\mathbf{h}_0 = (1, 1, ..., 1)^T$ (代表常数场)\n$\\mathbf{h}_1 = (\\xi_1, \\xi_2, ..., \\xi_8)^T = (-1, 1, 1, -1, -1, 1, 1, -1)^T$ (代表 $\\xi$ 方向的线性场)\n$\\mathbf{h}_2 = (\\eta_1, \\eta_2, ..., \\eta_8)^T = (-1, -1, 1, 1, -1, -1, 1, 1)^T$ (代表 $\\eta$ 方向的线性场)\n$\\mathbf{h}_3 = (\\zeta_1, \\zeta_2, ..., \\zeta_8)^T = (-1, -1, -1, -1, 1, 1, 1, 1)^T$ (代表 $\\zeta$ 方向的线性场)\n\n节点沙漏向量 $\\mathbf{g}^{\\alpha} = (\\gamma^{\\alpha}(\\xi_1, \\eta_1, \\zeta_1), ..., \\gamma^{\\alpha}(\\xi_8, \\eta_8, \\zeta_8))^T$ 必须与这四个向量中的每一个都正交：\n$\\mathbf{g}^{\\alpha} \\cdot \\mathbf{h}_0 = 0$, $\\mathbf{g}^{\\alpha} \\cdot \\mathbf{h}_1 = 0$, $\\mathbf{g}^{\\alpha} \\cdot \\mathbf{h}_2 = 0$, $\\mathbf{g}^{\\alpha} \\cdot \\mathbf{h}_3 = 0$.\n\n向量 $\\mathbf{h}_0, \\mathbf{h}_1, \\mathbf{h}_2, \\mathbf{h}_3$ 相互正交，因为 $\\sum \\xi_i = \\sum \\eta_i = \\sum \\zeta_i = \\sum \\xi_i\\eta_i = \\sum \\eta_i\\zeta_i = \\sum \\zeta_i\\xi_i = 0$。因此，它们张成了 $\\mathbb{R}^8$ 的一个 4 维子空间。沙漏模式必须属于此子空间的正交补空间，该补空间也是 4 维的。我们需要找到四个线性无关的多项式函数 $\\gamma^{\\alpha}(\\xi, \\eta, \\zeta)$，当在节点上求值时，它们能为该补空间生成一个基。\n\n我们寻找最小次数的多项式。\n一个 0 次多项式 $\\gamma(\\xi,\\eta,\\zeta) = c$ 给出节点向量 $c\\mathbf{h}_0$。正交条件 $\\mathbf{g} \\cdot \\mathbf{h}_0 = 0$ 给出 $c \\mathbf{h}_0 \\cdot \\mathbf{h}_0 = 8c = 0$，因此 $c=0$。\n一个 1 次多项式 $\\gamma(\\xi,\\eta,\\zeta) = c_0 + c_1\\xi + c_2\\eta + c_3\\zeta$ 生成节点向量 $\\mathbf{g} = c_0\\mathbf{h}_0 + c_1\\mathbf{h}_1 + c_2\\mathbf{h}_2 + c_3\\mathbf{h}_3$。要使 $\\mathbf{g}$ 成为沙漏模式，它必须与 $\\mathbf{h}_0, \\mathbf{h}_1, \\mathbf{h}_2, \\mathbf{h}_3$ 正交。与 $\\mathbf{h}_1$ 做点积：$\\mathbf{g} \\cdot \\mathbf{h}_1 = c_1(\\mathbf{h}_1 \\cdot \\mathbf{h}_1) = 8c_1 = 0$，所以 $c_1=0$。类似地，$c_2=0, c_3=0, c_0=0$。唯一的线性多项式是平凡解。\n\n因此，我们寻找至少 2 次的多项式。考虑单项式 $\\xi\\eta$、$\\eta\\zeta$ 和 $\\zeta\\xi$。\n令 $\\gamma^1(\\xi, \\eta, \\zeta) = \\xi\\eta$。对应的节点向量 $\\mathbf{g}^1$ 的分量为 $g_i^1 = \\xi_i \\eta_i$。我们来检查其正交性：\n$\\mathbf{g}^1 \\cdot \\mathbf{h}_0 = \\sum \\xi_i\\eta_i = 0$。\n$\\mathbf{g}^1 \\cdot \\mathbf{h}_1 = \\sum \\xi_i(\\xi_i\\eta_i) = \\sum \\xi_i^2\\eta_i = \\sum \\eta_i = 0$ (因为 $\\xi_i^2 = 1$)。\n$\\mathbf{g}^1 \\cdot \\mathbf{h}_2 = \\sum \\eta_i(\\xi_i\\eta_i) = \\sum \\xi_i\\eta_i^2 = \\sum \\xi_i = 0$ (因为 $\\eta_i^2=1$)。\n$\\mathbf{g}^1 \\cdot \\mathbf{h}_3 = \\sum \\zeta_i(\\xi_i\\eta_i) = \\sum \\xi_i\\eta_i\\zeta_i = (-1)+1+(-1)+1+1+(-1)+1+(-1) = 0$。\n因此，$\\gamma^1(\\xi,\\eta,\\zeta) = \\xi\\eta$ 是一个有效的选择。\n\n根据对称性，$\\gamma^2(\\xi,\\eta,\\zeta) = \\eta\\zeta$ 和 $\\gamma^3(\\xi,\\eta,\\zeta) = \\zeta\\xi$ 也是有效的选择。我们来验证 $\\gamma^2=\\eta\\zeta$：\n$\\mathbf{g}^2 \\cdot \\mathbf{h}_0=\\sum\\eta_i\\zeta_i = 0$。\n$\\mathbf{g}^2 \\cdot \\mathbf{h}_1=\\sum\\xi_i\\eta_i\\zeta_i = 0$。\n$\\mathbf{g}^2 \\cdot \\mathbf{h}_2=\\sum\\eta_i^2\\zeta_i = \\sum\\zeta_i = 0$。\n$\\mathbf{g}^2 \\cdot \\mathbf{h}_3=\\sum\\zeta_i^2\\eta_i = \\sum\\eta_i = 0$。\n同样的逻辑也适用于 $\\gamma^3 = \\zeta\\xi$。\n\n对于第四种模式，我们寻找一个与前三种线性无关的简单多项式。下一个合理的选择是 3 次单项式 $\\gamma^4(\\xi,\\eta,\\zeta) = \\xi\\eta\\zeta$。其节点向量 $\\mathbf{g}^4$ 的分量为 $g_i^4 = \\xi_i\\eta_i\\zeta_i$。检查正交性：\n$\\mathbf{g}^4 \\cdot \\mathbf{h}_0 = \\sum \\xi_i\\eta_i\\zeta_i = 0$。\n$\\mathbf{g}^4 \\cdot \\mathbf{h}_1 = \\sum \\xi_i(\\xi_i\\eta_i\\zeta_i) = \\sum \\eta_i\\zeta_i = 0$。\n$\\mathbf{g}^4 \\cdot \\mathbf{h}_2 = \\sum \\eta_i(\\xi_i\\eta_i\\zeta_i) = \\sum \\xi_i\\zeta_i = 0$。\n$\\mathbf{g}^4 \\cdot \\mathbf{h}_3 = \\sum \\zeta_i(\\xi_i\\eta_i\\zeta_i) = \\sum \\xi_i\\eta_i = 0$。\n这也是一个有效的沙漏模式。\n\n这四个函数 $\\gamma^1=\\xi\\eta$、$\\gamma^2=\\eta\\zeta$、$\\gamma^3=\\zeta\\xi$ 和 $\\gamma^4=\\xi\\eta\\zeta$ 是线性无关的多项式。它们满足问题提出的所有条件，并代表了单点积分三线性六面体的标准沙漏模式集。这些多项式满足最小次数要求，因为 1 次模式已被证明是平凡的。\n\n因此，所要求的四个线性无关的沙漏形函数集就建立起来了。\n节点向量为：\n对于 $\\gamma^1 = \\xi\\eta$: $\\mathbf{g}^1 = (1, -1, 1, -1, 1, -1, 1, -1)^T$\n对于 $\\gamma^2 = \\eta\\zeta$: $\\mathbf{g}^2 = (1, 1, -1, -1, -1, -1, 1, 1)^T$\n对于 $\\gamma^3 = \\zeta\\xi$: $\\mathbf{g}^3 = (1, -1, -1, 1, -1, 1, 1, -1)^T$\n对于 $\\gamma^4 = \\xi\\eta\\zeta$: $\\mathbf{g}^4 = (-1, 1, -1, 1, 1, -1, 1, -1)^T$\n这四个向量相互正交，从而证实了它们的线性无关性。\n\n最终答案是这些函数本身组成的集合。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\xi\\eta & \\eta\\zeta & \\zeta\\xi & \\xi\\eta\\zeta\n\\end{pmatrix}\n}\n$$", "id": "2565900"}, {"introduction": "理论通过实践得以具体化。这最后一个练习将指导您编写一个悬臂梁测试程序，以亲眼见证沙漏现象的显著影响以及稳定化策略的成功。通过比较完全积分、减缩积分和稳定化减缩积分单元的结果，您将对为何稳定化不仅是一个理论概念，更是确保模拟准确性的实践必需品，获得一个坚实的理解。", "problem": "考虑一个用于模拟悬臂梁的有限元方法 (FEM) 公式，该悬臂梁长为 $L$，高为 $H$，处于平面应力状态，具有恒定的平面外厚度 $t$，并使用单个四节点双线性四边形单元 (Q4) 进行建模。左侧边缘 ($x=0$) 为固支，一个竖向尖端载荷 $P$ 施加在右上角节点上。材料为线弹性，其杨氏模量为 $E$，泊松比为 $\\nu$。单元节点按逆时针方向排序为 $(0,0)$、$(L,0)$、$(L,H)$、$(0,H)$，标记为 $1,2,3,4$。每个节点有两个位移分量：$u_x$ 和 $u_y$。\n\n从虚功原理和标准的双线性等参公式出发。对于平面应力，使用本构矩阵\n$$\n\\mathbf{C} \\;=\\; \\frac{E}{1-\\nu^2}\\begin{bmatrix}\n1 & \\nu & 0\\\\\n\\nu & 1 & 0\\\\\n0 & 0 & \\tfrac{1-\\nu}{2}\n\\end{bmatrix}.\n$$\n令 $\\mathbf{B}(\\xi,\\eta)$ 为由等参坐标 $(\\xi,\\eta)$ 处的形函数导数构建的应变-位移矩阵，$\\mathbf{J}(\\xi,\\eta)$ 为雅可比矩阵。数值积分下的单元刚度为\n$$\n\\mathbf{K} \\;=\\; \\int_{\\Omega_e} \\mathbf{B}^T \\mathbf{C} \\,\\mathbf{B}\\; t \\, d\\Omega \\;\\approx\\; \\sum_{g} \\mathbf{B}(\\xi_g,\\eta_g)^T \\mathbf{C}\\,\\mathbf{B}(\\xi_g,\\eta_g)\\; t\\;\\det\\big(\\mathbf{J}(\\xi_g,\\eta_g)\\big)\\; w_g.\n$$\n使用两种积分方案：\n- 完全积分：一个 $2\\times 2$ 高斯积分法则，积分点位于 $\\xi,\\eta=\\pm 1/\\sqrt{3}$，权重为 $w_g=1$。\n- 减缩积分：一个 $1\\times 1$ 高斯积分法则，单个积分点位于 $(\\xi,\\eta)=(0,0)$，权重为 $w_g=4$。\n\n众所周知，减缩积分 Q4 单元在弯曲作用下会产生伪零能“沙漏”模式，导致严重的刚度软化。为了控制沙漏，通过一个简单的基于刚度的 Flanagan–Belytschko 型沙漏控制来增强减缩积分刚度。为四个节点定义两种节点沙漏模式：\n$$\n\\mathbf{s}^{(1)} \\;=\\; [\\,1,\\,-1,\\,1,\\,-1\\,],\\quad \\mathbf{s}^{(2)} \\;=\\; [\\,1,\\,1,\\,-1,\\,-1\\,].\n$$\n通过交错 $x$ 和 $y$ 分量，将每种模式嵌入到单元的 $8$ 分量位移向量中，以形成四个沙漏向量：\n$$\n\\mathbf{h}_{x}^{(k)} \\;=\\; [\\,s^{(k)}_1,\\,0,\\,s^{(k)}_2,\\,0,\\,s^{(k)}_3,\\,0,\\,s^{(k)}_4,\\,0\\,]^T,\\quad\n\\mathbf{h}_{y}^{(k)} \\;=\\; [\\,0,\\,s^{(k)}_1,\\,0,\\,s^{(k)}_2,\\,0,\\,s^{(k)}_3,\\,0,\\,s^{(k)}_4\\,]^T,\n$$\n对于 $k\\in\\{1,2\\}$。令沙漏刚度为\n$$\n\\mathbf{K}_{\\mathrm{hg}} \\;=\\; k_0 \\sum_{k=1}^{2}\\big(\\,\\mathbf{h}_{x}^{(k)} \\mathbf{h}_{x}^{(k)T} \\;+\\; \\mathbf{h}_{y}^{(k)} \\mathbf{h}_{y}^{(k)T}\\,\\big),\n$$\n缩放因子为\n$$\nk_0 \\;=\\; c_{\\alpha}\\, G\\, t,\\qquad G \\;=\\; \\frac{E}{2(1+\\nu)},\n$$\n其中 $c_{\\alpha}\\ge 0$ 是一个无量纲稳定化参数。则减缩积分稳定化刚度为\n$$\n\\mathbf{K}_{\\mathrm{RI,stab}}(c_{\\alpha}) \\;=\\; \\mathbf{K}_{\\mathrm{RI}} \\;+\\; \\mathbf{K}_{\\mathrm{hg}}(c_{\\alpha}).\n$$\n\n边界条件：通过固定节点 $1$ 和 $4$ 的 $u_x$ 和 $u_y$ 来实现左侧边缘固支。载荷：在节点 $3$ 上施加一个向下的竖向点载荷 $P$（作用于其 $y$ 自由度）。\n\n为展示沙漏软化和刚度恢复，计算比率\n$$\nr(c_{\\alpha}) \\;=\\; \\frac{u_{y,\\,\\text{node }3}^{\\mathrm{(RI+hg)}}(c_{\\alpha})}{u_{y,\\,\\text{node }3}^{\\mathrm{(FI)}}},\n$$\n其中分母使用完全积分刚度，分子使用由参数为 $c_{\\alpha}$ 的沙漏控制增强的减缩积分刚度。比率 $r(c_{\\alpha})>1$ 表明相对于完全积分参考存在软化；增加 $c_{\\alpha}$ 应能恢复刚度，并使 $r(c_{\\alpha})$ 趋向于 $1$ 或更低，具体取决于是否过度稳定。\n\n因为当 $c_{\\alpha}=0$ 时 $\\mathbf{K}_{\\mathrm{RI}}$ 是秩亏的，所以仅对减缩积分分支在自由度上引入一个微小的 Tikhonov 正则化，以确保线性系统的可解性：\n$$\n\\mathbf{K}_{\\mathrm{RI,stab}}^{\\epsilon}(c_{\\alpha}) \\;=\\; \\mathbf{K}_{\\mathrm{RI,stab}}(c_{\\alpha}) \\;+\\; \\epsilon\\, E\\, t\\, \\mathbf{I}_{\\text{free}},\n$$\n其中 $\\epsilon = 10^{-9}$，$\\mathbf{I}_{\\text{free}}$ 是自由度子空间上的单位矩阵。对于 $c_{\\alpha}>0$ 的情况，此扰动可以忽略不计，仅用于正则化 $c_{\\alpha}=0$ 的情况。\n\n使用以下物理一致的参数：\n- $E = 2.10\\times 10^{11}\\,\\text{Pa}$，\n- $\\nu = 0.30$，\n- $t = 1.0\\times 10^{-2}\\,\\text{m}$，\n- $L = 1.0\\,\\text{m}$，\n- $H = 2.0\\times 10^{-1}\\,\\text{m}$，\n- $P = 1.0\\times 10^{3}\\,\\text{N}$。\n\n稳定化参数的测试组：\n- 情况 1：$c_{\\alpha} = 0.0$（带有微小正则化的纯减缩积分），\n- 情况 2：$c_{\\alpha} = 0.05$，\n- 情况 3：$c_{\\alpha} = 0.5$，\n- 情况 4：$c_{\\alpha} = 5.0$。\n\n您的任务是实现一个完整的程序，该程序：\n- 通过 $2\\times 2$ 高斯积分法则组装 $\\mathbf{K}_{\\mathrm{FI}}$，\n- 通过 $1\\times 1$ 高斯积分法则组装 $\\mathbf{K}_{\\mathrm{RI}}$，\n- 按规定使用 $\\mathbf{K}_{\\mathrm{hg}}(c_{\\alpha})$ 和 $\\epsilon$-正则化来增强 $\\mathbf{K}_{\\mathrm{RI}}$，\n- 施加边界条件和载荷，\n- 求解每种情况下的位移向量，\n- 提取节点 $3$ 的 $u_{y}$ 并计算 $r(c_{\\alpha})$。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，结果采用科学记数法，保留 $6$ 位有效数字，并按测试组的顺序列出。例如，输出格式必须为\n$$\n[\\text{r}(0.0),\\text{r}(0.05),\\text{r}(0.5),\\text{r}(5.0)].\n$$\n所有输出均为无量纲比率，因此不需要物理单位。", "solution": "分析从四节点四边形单元的标准等参公式开始。该单元有八个自由度 (DOF)，包含在节点位移向量 $\\mathbf{d} = [u_1, v_1, u_2, v_2, u_3, v_3, u_4, v_4]^T$ 中。\n\n**1. 等参公式**\n\n物理坐标 $(x,y)$ 通过双线性形函数 $N_i(\\xi, \\eta)$ 从等参坐标 $(\\xi, \\eta)$ 映射而来，其中 $\\xi, \\eta \\in [-1, 1]$：\n$$\nN_1(\\xi, \\eta) = \\frac{1}{4}(1-\\xi)(1-\\eta) \\quad N_2(\\xi, \\eta) = \\frac{1}{4}(1+\\xi)(1-\\eta) \\\\\nN_3(\\xi, \\eta) = \\frac{1}{4}(1+\\xi)(1+\\eta) \\quad N_4(\\xi, \\eta) = \\frac{1}{4}(1-\\xi)(1+\\eta)\n$$\n坐标变换为 $x(\\xi, \\eta) = \\sum_{i=1}^4 N_i(\\xi, \\eta) x_i$ 和 $y(\\xi, \\eta) = \\sum_{i=1}^4 N_i(\\xi, \\eta) y_i$。对于指定的、节点位于 $(0,0)$、$(L,0)$、$(L,H)$ 和 $(0,H)$ 的矩形单元，这简化为：\n$$\nx(\\xi, \\eta) = \\frac{L}{2}(1+\\xi) \\quad y(\\xi, \\eta) = \\frac{H}{2}(1+\\eta)\n$$\n此变换的雅可比矩阵是一个常数矩阵：\n$$\n\\mathbf{J} = \\begin{pmatrix} \\partial x / \\partial\\xi & \\partial y / \\partial\\xi \\\\ \\partial x / \\partial\\eta & \\partial y / \\partial\\eta \\end{pmatrix} = \\begin{pmatrix} L/2 & 0 \\\\ 0 & H/2 \\end{pmatrix}\n$$\n雅可比矩阵的行列式为 $\\det(\\mathbf{J}) = L H / 4$。\n\n应变场 $\\boldsymbol{\\varepsilon} = [\\varepsilon_{xx}, \\varepsilon_{yy}, \\gamma_{xy}]^T$ 通过应变-位移矩阵 $\\mathbf{B}(\\xi, \\eta)$ 与节点位移 $\\mathbf{d}$ 相关联：$\\boldsymbol{\\varepsilon} = \\mathbf{B}(\\xi, \\eta) \\mathbf{d}$。矩阵 $\\mathbf{B}$ 是使用形函数的导数来构建的。对于节点 $i$，矩阵 $\\mathbf{B}_i$ 为：\n$$\n\\mathbf{B}_i(\\xi, \\eta) = \\begin{pmatrix} \\frac{\\partial N_i}{\\partial x} & 0 \\\\ 0 & \\frac{\\partial N_i}{\\partial y} \\\\ \\frac{\\partial N_i}{\\partial y} & \\frac{\\partial N_i}{\\partial x} \\end{pmatrix}\n$$\n其中，关于 $x$ 和 $y$ 的导数通过链式法则求得：\n$$\n\\begin{Bmatrix} \\frac{\\partial N_i}{\\partial x} \\\\ \\frac{\\partial N_i}{\\partial y} \\end{Bmatrix} = \\mathbf{J}^{-1} \\begin{Bmatrix} \\frac{\\partial N_i}{\\partial \\xi} \\\\ \\frac{\\partial N_i}{\\partial \\eta} \\end{Bmatrix} = \\begin{pmatrix} 2/L & 0 \\\\ 0 & 2/H \\end{pmatrix} \\begin{Bmatrix} \\frac{\\partial N_i}{\\partial \\xi} \\\\ \\frac{\\partial N_i}{\\partial \\eta} \\end{Bmatrix}\n$$\n完整的 $3 \\times 8$ 矩阵 $\\mathbf{B}$ 是通过拼接各个 $\\mathbf{B}_i$ 矩阵构成的：$\\mathbf{B} = [\\mathbf{B}_1, \\mathbf{B}_2, \\mathbf{B}_3, \\mathbf{B}_4]$。\n\n**2. 刚度矩阵组装**\n\n单元刚度矩阵由积分 $\\mathbf{K} = \\int_{V_e} \\mathbf{B}^T \\mathbf{C} \\mathbf{B} \\, dV$ 给出。对于恒定厚度 $t$，这变为 $\\mathbf{K} = t \\int_{A_e} \\mathbf{B}^T \\mathbf{C} \\mathbf{B} \\, dA$。在等参坐标下，这是：\n$$\n\\mathbf{K} = t \\int_{-1}^{1} \\int_{-1}^{1} \\mathbf{B}(\\xi, \\eta)^T \\mathbf{C} \\,\\mathbf{B}(\\xi, \\eta) \\det(\\mathbf{J}) \\, d\\xi d\\eta\n$$\n该积分使用高斯求积进行数值计算。\n\n- **完全积分刚度 ($\\mathbf{K}_{\\mathrm{FI}}$)**：使用 $2 \\times 2$ 高斯积分法则。四个积分点是 $(\\xi_g, \\eta_g) = (\\pm 1/\\sqrt{3}, \\pm 1/\\sqrt{3})$，所有权重都是 $w_g=1$。\n$$\n\\mathbf{K}_{\\mathrm{FI}} = t \\cdot \\det(\\mathbf{J}) \\sum_{g=1}^{4} \\mathbf{B}(\\xi_g, \\eta_g)^T \\mathbf{C} \\,\\mathbf{B}(\\xi_g, \\eta_g) \\cdot (1)\n$$\n对于矩形单元，该方案能精确地积分刚度项，并产生一个稳健的非奇异刚度矩阵。\n\n- **减缩积分刚度 ($\\mathbf{K}_{\\mathrm{RI}}$)**：使用 $1 \\times 1$ 高斯积分法则，单个积分点位于单元中心 $(\\xi_g, \\eta_g) = (0, 0)$，权重为 $w_g=4$。\n$$\n\\mathbf{K}_{\\mathrm{RI}} = t \\cdot \\det(\\mathbf{J}) \\cdot \\mathbf{B}(0, 0)^T \\mathbf{C} \\,\\mathbf{B}(0, 0) \\cdot (4)\n$$\n该方案计算效率高，但无法捕捉某些变形模式，即所谓的沙漏或零能模式，导致刚度矩阵秩亏。\n\n**3. 沙漏稳定化**\n\n为了抵消 $\\mathbf{K}_{\\mathrm{RI}}$ 的秩亏，增加了一个人工刚度项 $\\mathbf{K}_{\\mathrm{hg}}$。所规定的方法是 Flanagan-Belytschko 类型。为 $k \\in \\{1,2\\}$ 构建的沙漏向量 $\\mathbf{h}_{x}^{(k)}$ 和 $\\mathbf{h}_{y}^{(k)}$ 与减缩积分所捕捉到的常应变模式正交。沙漏刚度为：\n$$\n\\mathbf{K}_{\\mathrm{hg}}(c_{\\alpha}) = k_0 \\sum_{k=1}^{2}\\big(\\,\\mathbf{h}_{x}^{(k)} \\mathbf{h}_{x}^{(k)T} \\;+\\; \\mathbf{h}_{y}^{(k)} \\mathbf{h}_{y}^{(k)T}\\,\\big)\n$$\n缩放因子 $k_0 = c_{\\alpha} G t$ 取决于剪切模量 $G = E / (2(1+\\nu))$、厚度 $t$ 和无量纲稳定化参数 $c_{\\alpha}$。减缩积分情况下的总稳定化刚度为：\n$$\n\\mathbf{K}_{\\mathrm{RI,stab}}(c_{\\alpha}) = \\mathbf{K}_{\\mathrm{RI}} + \\mathbf{K}_{\\mathrm{hg}}(c_{\\alpha})\n$$\n\n**4. 系统求解**\n\n控制静力平衡方程为 $\\mathbf{K}\\mathbf{d} = \\mathbf{F}$。\n- **边界条件 (BCs)**：左侧边缘是固支的，因此节点 $1$ 和 $4$ 是固定的。这意味着自由度 $u_1, v_1, u_4, v_4$（索引 $0, 1, 6, 7$）为零。自由自由度是 $u_2, v_2, u_3, v_3$（索引 $2, 3, 4, 5$）。系统被划分为自由和固定分量。令 $\\mathbf{d}_{\\text{free}} = [u_2, v_2, u_3, v_3]^T$。简化系统是 $\\mathbf{K}_{\\text{free}} \\mathbf{d}_{\\text{free}} = \\mathbf{F}_{\\text{free}}$。$\\mathbf{K}_{\\text{free}}$ 是 $\\mathbf{K}$ 中对应于自由自由度的 $4 \\times 4$ 子矩阵。\n- **载荷向量**：一个竖向载荷 $P$ 向下作用在节点 $3$ 上。作用于自由自由度的力向量为 $\\mathbf{F}_{\\text{free}} = [0, 0, 0, -P]^T$。\n- **正则化**：对于 RI 情况，在已划分的自由刚度矩阵的对角线上增加一个小扰动，以确保当 $c_{\\alpha} = 0$ 时的可逆性：\n$$\n\\mathbf{K}_{\\text{free, stab}}^{\\epsilon}(c_{\\alpha}) = \\mathbf{K}_{\\text{free, (RI+hg)}}(c_{\\alpha}) + \\epsilon E t \\mathbf{I}_{4 \\times 4}\n$$\n- **求解**：求解系统以获得位移向量 $\\mathbf{d}_{\\text{free}}$。节点 $3$ 的竖向位移 $u_{y, \\text{node } 3}$ 对应于解向量 $\\mathbf{d}_{\\text{free}}$ 的第四个分量。\n\n步骤如下：\n1.  计算 $\\mathbf{K}_{\\mathrm{FI}}$，对其进行划分，求解 $\\mathbf{d}_{\\text{free}}^{\\mathrm{(FI)}}$，并提取参考位移 $u_{y, \\text{node } 3}^{\\mathrm{(FI)}}$。\n2.  对于 $c_{\\alpha}$ 的每个测试值：\n    a. 计算 $\\mathbf{K}_{\\mathrm{RI}}$ 和 $\\mathbf{K}_{\\mathrm{hg}}(c_{\\alpha})$。\n    b. 形成 $\\mathbf{K}_{\\mathrm{RI,stab}}(c_{\\alpha}) = \\mathbf{K}_{\\mathrm{RI}} + \\mathbf{K}_{\\mathrm{hg}}(c_{\\alpha})$。\n    c. 划分子矩阵得到 $\\mathbf{K}_{\\text{free, (RI+hg)}}$。\n    d. 添加正则化：$\\mathbf{K}_{\\text{free, stab}}^{\\epsilon} = \\mathbf{K}_{\\text{free, (RI+hg)}} + (\\epsilon E t) \\mathbf{I}$。\n    e. 求解 $\\mathbf{K}_{\\text{free, stab}}^{\\epsilon} \\mathbf{d}_{\\text{free}}^{\\mathrm{(RI+hg)}} = \\mathbf{F}_{\\text{free}}$。\n    f. 提取 $u_{y, \\text{node } 3}^{\\mathrm{(RI+hg)}}(c_{\\alpha})$。\n    g. 计算比率 $r(c_{\\alpha}) = u_{y, \\text{node } 3}^{\\mathrm{(RI+hg)}}(c_{\\alpha}) / u_{y, \\text{node } 3}^{\\mathrm{(FI)}}$。\n\n当 $c_{\\alpha}=0$ 时，单元过于柔性，因此预计 $r(0)$会很大。随着 $c_{\\alpha}$ 的增加，增加的刚度控制了伪模式， $r(c_{\\alpha})$ 应该会减小，趋近于 $1.0$ 附近的值。一个非常大的 $c_{\\alpha}$ 可能导致过度刚化（闭锁），从而使 $r(c_{\\alpha}) < 1$。", "answer": "```python\nimport numpy as np\nimport scipy.linalg\n\ndef solve():\n    \"\"\"\n    Computes the tip deflection ratio for a Q4 element under different\n    hourglass stabilization schemes.\n    \"\"\"\n    # 1. Define physical and geometric parameters from the problem\n    E = 2.10e11  # Pa\n    nu = 0.30\n    t = 1.0e-2   # m\n    L = 1.0      # m\n    H = 0.2      # m\n    P = 1.0e3    # N\n    epsilon = 1.0e-9\n\n    c_alpha_cases = [0.0, 0.05, 0.5, 5.0]\n\n    # Node coordinates (counter-clockwise from bottom-left)\n    nodes = np.array([\n        [0, 0],  # Node 1\n        [L, 0],  # Node 2\n        [L, H],  # Node 3\n        [0, H]   # Node 4\n    ])\n    \n    # Material properties\n    G = E / (2 * (1 + nu))\n    # Plane stress constitutive matrix\n    C = (E / (1 - nu**2)) * np.array([\n        [1, nu, 0],\n        [nu, 1, 0],\n        [0, 0, (1 - nu) / 2]\n    ])\n\n    # 2. Define helper functions for FEA\n    def get_shape_func_derivatives(xi, eta):\n        \"\"\"Derivatives of N_i with respect to xi and eta at a point (xi, eta).\"\"\"\n        dN_dxi = 0.25 * np.array([-(1 - eta), (1 - eta), (1 + eta), -(1 + eta)])\n        dN_deta = 0.25 * np.array([-(1 - xi), -(1 + xi), (1 + xi), (1 - xi)])\n        return dN_dxi, dN_deta\n\n    def get_B_matrix_and_detJ(xi, eta, node_coords):\n        \"\"\"Computes the B matrix and Jacobian determinant at (xi, eta).\"\"\"\n        dN_dxi, dN_deta = get_shape_func_derivatives(xi, eta)\n        \n        # Jacobian for a rectangular element is constant\n        J = np.zeros((2, 2))\n        J[0, 0] = np.dot(dN_dxi, node_coords[:, 0])  # dx/dxi\n        J[0, 1] = np.dot(dN_dxi, node_coords[:, 1])  # dy/dxi\n        J[1, 0] = np.dot(dN_deta, node_coords[:, 0]) # dx/deta\n        J[1, 1] = np.dot(dN_deta, node_coords[:, 1]) # dy/deta\n        \n        detJ = np.linalg.det(J)\n        invJ = np.linalg.inv(J)\n\n        dN_dx = invJ[0, 0] * dN_dxi + invJ[0, 1] * dN_deta\n        dN_dy = invJ[1, 0] * dN_dxi + invJ[1, 1] * dN_deta\n\n        B = np.zeros((3, 8))\n        for i in range(4):\n            B[0, 2*i]     = dN_dx[i]\n            B[1, 2*i + 1] = dN_dy[i]\n            B[2, 2*i]     = dN_dy[i]\n            B[2, 2*i + 1] = dN_dx[i]\n            \n        return B, detJ\n\n    def build_stiffness_matrix(integration_points, weights, node_coords, C_mat, t_thick):\n        \"\"\"Builds the element stiffness matrix using Gauss quadrature.\"\"\"\n        K = np.zeros((8, 8))\n        for (xi, eta), w in zip(integration_points, weights):\n            B, detJ = get_B_matrix_and_detJ(xi, eta, node_coords)\n            K += B.T @ C_mat @ B * detJ * w * t_thick\n        return K\n\n    def build_hourglass_stiffness(c_alpha, G_mod, t_thick):\n        \"\"\"Builds the Flanagan-Belytschko hourglass stiffness matrix.\"\"\"\n        s1 = np.array([1, -1, 1, -1])\n        s2 = np.array([1, 1, -1, -1])\n        \n        h_x1 = np.zeros(8)\n        h_y1 = np.zeros(8)\n        h_x2 = np.zeros(8)\n        h_y2 = np.zeros(8)\n        \n        for i in range(4):\n            h_x1[2*i] = s1[i]\n            h_y1[2*i+1] = s1[i]\n            h_x2[2*i] = s2[i]\n            h_y2[2*i+1] = s2[i]\n\n        k0 = c_alpha * G_mod * t_thick\n        \n        K_hg = k0 * (np.outer(h_x1, h_x1) + np.outer(h_y1, h_y1) +\n                     np.outer(h_x2, h_x2) + np.outer(h_y2, h_y2))\n        return K_hg\n\n    # 3. Define integration schemes\n    # Full Integration (2x2 Gauss)\n    gp_loc = 1.0 / np.sqrt(3.0)\n    fi_points = [(-gp_loc, -gp_loc), (gp_loc, -gp_loc), (gp_loc, gp_loc), (-gp_loc, gp_loc)]\n    fi_weights = [1.0, 1.0, 1.0, 1.0]\n    \n    # Reduced Integration (1x1 Gauss)\n    ri_points = [(0.0, 0.0)]\n    ri_weights = [4.0]\n\n    # 4. Set up boundary conditions and force vector\n    # DOFs: [u1, v1, u2, v2, u3, v3, u4, v4]\n    # Indices: 0   1   2   3   4   5   6   7\n    # Fixed DOFs (nodes 1 and 4): 0, 1, 6, 7\n    # Free DOFs (nodes 2 and 3): 2, 3, 4, 5\n    free_dofs = [2, 3, 4, 5]\n    n_free = len(free_dofs)\n    \n    # Force vector for the free DOFs\n    # F on free DOFs [u2, v2, u3, v3]: [0, 0, 0, -P]\n    F_free = np.zeros(n_free)\n    F_free[3] = -P\n\n    # 5. Compute reference displacement with Full Integration\n    K_fi = build_stiffness_matrix(fi_points, fi_weights, nodes, C, t)\n    K_fi_free = K_fi[np.ix_(free_dofs, free_dofs)]\n    d_fi_free = scipy.linalg.solve(K_fi_free, F_free)\n    u_y3_fi = d_fi_free[3]  # Displacement v3\n\n    # 6. Compute displacements for Reduced Integration cases\n    results = []\n    K_ri = build_stiffness_matrix(ri_points, ri_weights, nodes, C, t)\n    \n    for c_alpha in c_alpha_cases:\n        K_hg = build_hourglass_stiffness(c_alpha, G, t)\n        K_ri_stab = K_ri + K_hg\n        \n        K_ri_stab_free = K_ri_stab[np.ix_(free_dofs, free_dofs)]\n        \n        # Apply Tikhonov regularization\n        K_ri_stab_free += epsilon * E * t * np.eye(n_free)\n        \n        d_ri_stab_free = scipy.linalg.solve(K_ri_stab_free, F_free)\n        u_y3_ri_stab = d_ri_stab_free[3]\n        \n        ratio = u_y3_ri_stab / u_y3_fi\n        results.append(ratio)\n\n    # 7. Format and print the final output\n    formatted_results = [f\"{r:.6e}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2565868"}]}