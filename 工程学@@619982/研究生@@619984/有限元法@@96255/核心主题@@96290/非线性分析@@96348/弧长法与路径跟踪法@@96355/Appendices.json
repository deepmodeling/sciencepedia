{"hands_on_practices": [{"introduction": "我们实践的第一步是理解弧长法要解决的核心问题：极限点（limit points）。在标准的载荷控制方法中，当结构的刚度矩阵变为奇异时，计算就会失败，这恰好发生在载荷-位移路径的转折点处。这个练习将带你通过一个经典的非线性弹簧模型，从第一性原理出发，解析地推导出第一个极限点对应的临界载荷因子 $\\lambda_{\\mathrm{cr}}$。通过这个过程，你将清晰地看到平衡路径、切向刚度 $K_T$ 和结构失稳之间的内在联系 [@problem_id:2541468]。", "problem": "考虑有限元法 (FEM) 框架内一个标量、单自由度的非线性弹簧，其内力定律由 $f_{\\mathrm{int}}(u)=k\\,u+\\beta\\,u^{3}$ 给出（其中 $k>0$ 且 $\\beta<0$），承受形状恒定、幅值比例为 $p>0$ 的静载荷，因此外力为 $f_{\\mathrm{ext}}(\\lambda)=\\lambda\\,p$。在 Riks（弧长）路径跟踪设定中，将载荷因子 $\\lambda$ 和位移 $u$ 作为未知量。\n\n从静力平衡控制原理 $f_{\\mathrm{int}}(u)=f_{\\mathrm{ext}}(\\lambda)$ 出发，并将平衡路径视为 $(u,\\lambda)$ 平面中的一条隐式定义曲线，请完成以下任务：明确表达残差 $r(u,\\lambda)$，用 $r(u,\\lambda)$ 陈述平衡条件，并通过分析平衡路径的转折点，确定第一个极限点（即 $\\lambda(u)$ 的第一个极值点）处的正临界载荷因子 $\\lambda_{\\mathrm{cr}}$。您的推导必须从静力平衡陈述和切线刚度的定义出发，不得假定任何预先推导的路径跟踪公式。\n\n请以 $k$、$ \\beta$ 和 $p$ 的单个闭式代数表达式形式提供 $\\lambda_{\\mathrm{cr}}$ 的最终答案。最终答案中不应包含单位。无需进行数值四舍五入。", "solution": "此问题需进行验证。已知条件为：内力 $f_{\\mathrm{int}}(u) = k\\,u + \\beta\\,u^{3}$（其中 $k>0$, $\\beta<0$）；外力 $f_{\\mathrm{ext}}(\\lambda) = \\lambda\\,p$（其中 $p>0$）；以及静力平衡条件 $f_{\\mathrm{int}}(u) = f_{\\mathrm{ext}}(\\lambda)$。任务是求解第一个极限点处的临界载荷因子 $\\lambda_{\\mathrm{cr}}$。该问题具有科学依据，是适定的、客观的，并包含足够的信息以获得唯一解。这是非线性力学中的一个典型问题。该问题被认定为有效。\n\n求解过程从静力平衡基本原理出发。\n\n静力平衡的控制方程由内力和外力的平衡给出：\n$$f_{\\mathrm{int}}(u) = f_{\\mathrm{ext}}(\\lambda)$$\n代入指定的力定律，我们得到：\n$$k\\,u + \\beta\\,u^{3} = \\lambda\\,p$$\n该方程将平衡路径定义为 $(u, \\lambda)$ 平面中的一条隐式曲线。\n\n根据要求，我们将残差函数 $r(u, \\lambda)$ 定义为内力和外力之差：\n$$r(u, \\lambda) = f_{\\mathrm{int}}(u) - f_{\\mathrm{ext}}(\\lambda) = k\\,u + \\beta\\,u^{3} - \\lambda\\,p$$\n因此，平衡条件可表述为平衡路径上所有点的残差为零：\n$$r(u, \\lambda) = 0$$\n\n平衡路径上的转折点或极限点，是指载荷因子 $\\lambda$ 相对于位移 $u$ 达到局部极值的点。在此点，$(u, \\lambda)$ 平面中路径的切线是垂直的，这意味着载荷因子对位移的导数为零，即 $\\frac{d\\lambda}{du}=0$。\n\n为求此导数，我们可以考虑残差 $r(u, \\lambda)$ 沿平衡路径的全微分。由于路径上任意点 $(u, \\lambda)$ 均满足 $r(u, \\lambda) = 0$，其全微分 $dr$ 也必须为零：\n$$dr = \\frac{\\partial r}{\\partial u} du + \\frac{\\partial r}{\\partial \\lambda} d\\lambda = 0$$\n偏导数 $\\frac{\\partial r}{\\partial u}$ 是系统的切线刚度，记作 $K_T(u)$：\n$$K_T(u) = \\frac{\\partial}{\\partial u} (k\\,u + \\beta\\,u^{3} - \\lambda\\,p) = k + 3\\beta u^2$$\n关于载荷因子 $\\lambda$ 的偏导数为：\n$$\\frac{\\partial r}{\\partial \\lambda} = \\frac{\\partial}{\\partial \\lambda} (k\\,u + \\beta\\,u^{3} - \\lambda\\,p) = -p$$\n将这些代入 $dr$ 的表达式中，得到：\n$$(k + 3\\beta u^2) du - p\\,d\\lambda = 0$$\n由此，我们可以表示出平衡路径的斜率 $\\frac{d\\lambda}{du}$：\n$$\\frac{d\\lambda}{du} = \\frac{k + 3\\beta u^2}{p} = \\frac{K_T(u)}{p}$$\n极限点的条件 $\\frac{d\\lambda}{du}=0$ 要求分子为零，因为已知 $p>0$：\n$$K_T(u) = k + 3\\beta u^2 = 0$$\n此结果表明，极限点的特征是切线刚度的奇异性（在此标量情况下，即为零）。\n\n我们现在求解极限点处的位移 $u$，记为 $u_{\\mathrm{cr}}$：\n$$3\\beta u_{\\mathrm{cr}}^2 = -k$$\n$$u_{\\mathrm{cr}}^2 = -\\frac{k}{3\\beta}$$\n由于已知 $k>0$ 且 $\\beta<0$，项 $-\\frac{k}{3\\beta}$ 为正，因此 $u_{\\mathrm{cr}}$ 存在实数解：\n$$u_{\\mathrm{cr}} = \\pm \\sqrt{-\\frac{k}{3\\beta}}$$\n问题要求解第一个极限点处的正临界载荷因子。从无变形状态 $(u, \\lambda) = (0, 0)$ 开始，并施加正载荷（$p>0, \\lambda>0$），位移 $u$ 最初将是正的。因此，第一个极限点将出现在正临界位移处：\n$$u_{\\mathrm{cr}} = \\sqrt{-\\frac{k}{3\\beta}}$$\n为求临界载荷因子 $\\lambda_{\\mathrm{cr}}$，我们将这个 $u_{\\mathrm{cr}}$ 的值代回平衡方程 $k\\,u + \\beta\\,u^{3} = \\lambda\\,p$：\n$$\\lambda_{\\mathrm{cr}} = \\frac{k\\,u_{\\mathrm{cr}} + \\beta\\,u_{\\mathrm{cr}}^{3}}{p} = \\frac{u_{\\mathrm{cr}} (k + \\beta\\,u_{\\mathrm{cr}}^2)}{p}$$\n代入 $u_{\\mathrm{cr}}$ 和 $u_{\\mathrm{cr}}^2$ 的表达式：\n$$\\lambda_{\\mathrm{cr}} = \\frac{1}{p} \\left(\\sqrt{-\\frac{k}{3\\beta}}\\right) \\left(k + \\beta \\left(-\\frac{k}{3\\beta}\\right)\\right)$$\n简化第二个括号中的项：\n$$k + \\beta \\left(-\\frac{k}{3\\beta}\\right) = k - \\frac{k}{3} = \\frac{2k}{3}$$\n将其代回 $\\lambda_{\\mathrm{cr}}$ 的表达式：\n$$\\lambda_{\\mathrm{cr}} = \\frac{1}{p} \\left(\\sqrt{-\\frac{k}{3\\beta}}\\right) \\left(\\frac{2k}{3}\\right)$$\n这就给出了临界载荷因子的最终闭式表达式：\n$$\\lambda_{\\mathrm{cr}} = \\frac{2k}{3p} \\sqrt{-\\frac{k}{3\\beta}}$$\n由于 $k>0$、$p>0$ 和 $\\beta<0$，该值为正。这是给定系统在突弹情景中遇到的第一个极限点的正确值。", "answer": "$$\\boxed{\\frac{2k}{3p}\\sqrt{-\\frac{k}{3\\beta}}}$$", "id": "2541468"}, {"introduction": "在理解了极限点的概念后，我们将深入了解弧长法在数值上是如何工作的。弧长法的核心是在每个增量步的校正阶段求解一个“扩展系统”（bordered system），该系统同时包含线性化的平衡方程和弧长约束方程。这个练习为你提供了一个具体的数值算例，让你亲手组装并求解这个关键的扩展线性系统，从而得到位移增量 $\\delta u$ 和载荷增量 $\\delta \\lambda$。完成这个实践将帮助你掌握弧长法求解器中最核心的代数运算步骤 [@problem_id:2541431]。", "problem": "考虑有限元法（FEM）中一个带比例加载的非线性准静态平衡问题，其平衡残差定义为 $r(u,\\lambda) = f_{\\mathrm{int}}(u) - \\lambda f_{\\mathrm{ext}}$。在当前迭代点 $(u^{(i)},\\lambda^{(i)})$ 进行 Newton-Raphson 线性化，得到线性化平衡方程 $K_{\\mathrm{T}} \\,\\delta u - f_{\\mathrm{ext}} \\,\\delta \\lambda = -R$，其中 $K_{\\mathrm{T}} = \\partial f_{\\mathrm{int}}/\\partial u$ 是切线刚度，$R = r(u^{(i)},\\lambda^{(i)})$ 是当前残差。在 Riks/Crisfield 弧长框架中，施加一个形式为 $a^{\\mathsf{T}} \\delta u + c\\, \\delta \\lambda = \\Delta s_{\\mathrm{t}}$ 的线性化约束，其中 $a \\in \\mathbb{R}^{n}$，$c \\in \\mathbb{R}$ 和 $\\Delta s_{\\mathrm{t}} \\in \\mathbb{R}$ 在当前迭代步由所选的路径跟踪策略确定。\n\n对于一个二自由度系统（$n = 2$），假设在当前迭代步已知以下数据（所有量均为无量纲）：\n- 切线刚度 $K_{\\mathrm{T}} \\in \\mathbb{R}^{2 \\times 2}$ 为\n$$\nK_{\\mathrm{T}} = \\begin{bmatrix} 4 & -1 \\\\ -1 & 2 \\end{bmatrix}。\n$$\n- 比例载荷向量 $f_{\\mathrm{ext}} \\in \\mathbb{R}^{2}$ 为\n$$\nf_{\\mathrm{ext}} = \\begin{bmatrix} 3 \\\\ 1 \\end{bmatrix}。\n$$\n- 残差向量 $R \\in \\mathbb{R}^{2}$ 为\n$$\nR = \\begin{bmatrix} 2 \\\\ -1 \\end{bmatrix}。\n$$\n- 线性化弧长行由 $a^{\\mathsf{T}} \\delta u + c\\, \\delta \\lambda = \\Delta s_{\\mathrm{t}}$ 给出，其中\n$$\na = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}, \\quad c = 1, \\quad \\Delta s_{\\mathrm{t}} = 1。\n$$\n\n针对未知数 $(\\delta u,\\delta \\lambda)$ 组装增广线性系统，并进行一次增广求解，以精确形式获得显式增量 $(\\delta u_{1},\\delta u_{2},\\delta \\lambda)$。将有序三元组 $(\\delta u_{1},\\delta u_{2},\\delta \\lambda)$ 以精确有理数形式报告。无需四舍五入。将最终答案以精确形式的行矩阵表示，不带单位。", "solution": "所述问题需进行验证。\n\n**步骤 1：提取已知条件**\n- 线性化平衡方程：$K_{\\mathrm{T}} \\,\\delta u - f_{\\mathrm{ext}} \\,\\delta \\lambda = -R$。\n- 线性化弧长约束：$a^{\\mathsf{T}} \\delta u + c\\, \\delta \\lambda = \\Delta s_{\\mathrm{t}}$。\n- 自由度数量：$n = 2$。\n- 切线刚度矩阵：$K_{\\mathrm{T}} = \\begin{bmatrix} 4 & -1 \\\\ -1 & 2 \\end{bmatrix}$。\n- 比例载荷向量：$f_{\\mathrm{ext}} = \\begin{bmatrix} 3 \\\\ 1 \\end{bmatrix}$。\n- 残差向量：$R = \\begin{bmatrix} 2 \\\\ -1 \\end{bmatrix}$。\n- 弧长约束向量：$a = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}$。\n- 弧长约束标量：$c = 1$。\n- 弧长增量：$\\Delta s_{\\mathrm{t}} = 1$。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据，描述了非线性计算力学中一种称为 Riks/Crisfield 弧长法的标准程序。这些方程是在带有路径跟踪约束的 Newton-Raphson 迭代中使用的正确线性化形式。该问题是适定的；组建关于增量 $(\\delta u, \\delta \\lambda)$ 的线性方程组所需的所有数据均已提供。所有矩阵和向量的维数都是一致的。语言客观且明确。它没有违反任何关于科学性、完整性或客观性的标准。\n\n**步骤 3：结论与行动**\n问题有效。将提供解答。\n\n求解需要组装并求解一个结合了线性化平衡方程和弧长约束的增广线性系统。该系统的一般形式为：\n$$\n\\begin{bmatrix}\nK_{\\mathrm{T}} & -f_{\\mathrm{ext}} \\\\\na^{\\mathsf{T}} & c\n\\end{bmatrix}\n\\begin{bmatrix}\n\\delta u \\\\\n\\delta \\lambda\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-R \\\\\n\\Delta s_{\\mathrm{t}}\n\\end{bmatrix}\n$$\n未知增量向量为 $\\begin{pmatrix} \\delta u_1 & \\delta u_2 & \\delta \\lambda \\end{pmatrix}^{\\mathsf{T}}$，其中 $\\delta u = \\begin{pmatrix} \\delta u_1 & \\delta u_2 \\end{pmatrix}^{\\mathsf{T}}$。\n\n将给定数据代入此结构：\n- $K_{\\mathrm{T}} = \\begin{bmatrix} 4 & -1 \\\\ -1 & 2 \\end{bmatrix}$\n- $-f_{\\mathrm{ext}} = \\begin{bmatrix} -3 \\\\ -1 \\end{bmatrix}$\n- $a^{\\mathsf{T}} = \\begin{bmatrix} 2 & 1 \\end{bmatrix}$\n- $c = 1$\n- $-R = \\begin{bmatrix} -2 \\\\ 1 \\end{bmatrix}$\n- $\\Delta s_{\\mathrm{t}} = 1$\n\n由此可组装成以下 $3 \\times 3$ 线性系统：\n$$\n\\begin{bmatrix}\n4 & -1 & -3 \\\\\n-1 & 2 & -1 \\\\\n2 & 1 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n\\delta u_1 \\\\\n\\delta u_2 \\\\\n\\delta \\lambda\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-2 \\\\\n1 \\\\\n1\n\\end{bmatrix}\n$$\n设系统矩阵为 $A_{\\mathrm{bordered}}$。为使唯一解存在，该矩阵必须是非奇异的。我们计算其行列式：\n$$\n\\det(A_{\\mathrm{bordered}}) = 4(2 \\cdot 1 - (-1) \\cdot 1) - (-1)((-1) \\cdot 1 - (-1) \\cdot 2) + (-3)((-1) \\cdot 1 - 2 \\cdot 2)\n$$\n$$\n\\det(A_{\\mathrm{bordered}}) = 4(2 + 1) + 1(-1 + 2) - 3(-1 - 4) = 4(3) + 1(1) - 3(-5) = 12 + 1 + 15 = 28\n$$\n由于 $\\det(A_{\\mathrm{bordered}}) = 28 \\neq 0$，该系统有唯一解。我们可以使用任何标准方法（如 Cramer 法则）来求解该系统。\n\n每个变量的解由 $\\delta x_i = \\frac{\\det(A_i)}{\\det(A)}$ 给出，其中 $A_i$ 是用右端向量替换 $A$ 的第 $i$ 列所形成的矩阵。\n\n对于 $\\delta u_1$：\n$$\n\\det(A_1) = \\det \\begin{pmatrix} -2 & -1 & -3 \\\\ 1 & 2 & -1 \\\\ 1 & 1 & 1 \\end{pmatrix} = -2(2+1) - (-1)(1+1) - 3(1-2) = -6 + 2 + 3 = -1\n$$\n$$\n\\delta u_1 = \\frac{-1}{28}\n$$\n\n对于 $\\delta u_2$：\n$$\n\\det(A_2) = \\det \\begin{pmatrix} 4 & -2 & -3 \\\\ -1 & 1 & -1 \\\\ 2 & 1 & 1 \\end{pmatrix} = 4(1+1) - (-2)(-1+2) - 3(-1-2) = 8 + 2 + 9 = 19\n$$\n$$\n\\delta u_2 = \\frac{19}{28}\n$$\n\n对于 $\\delta \\lambda$：\n$$\n\\det(A_3) = \\det \\begin{pmatrix} 4 & -1 & -2 \\\\ -1 & 2 & 1 \\\\ 2 & 1 & 1 \\end{pmatrix} = 4(2-1) - (-1)(-1-2) - 2(-1-4) = 4 - 3 + 10 = 11\n$$\n$$\n\\delta \\lambda = \\frac{11}{28}\n$$\n增量的解是有序三元组 $(\\delta u_1, \\delta u_2, \\delta \\lambda) = \\left(-\\frac{1}{28}, \\frac{19}{28}, \\frac{11}{28}\\right)$。这些即为所要求的精确有理数。", "answer": "$$\n\\boxed{\\begin{pmatrix} -\\frac{1}{28} & \\frac{19}{28} & \\frac{11}{28} \\end{pmatrix}}\n$$", "id": "2541431"}, {"introduction": "最后一个实践练习将所有概念融会贯通，要求你编写一个程序来执行一个完整的弧长法计算步。这包括从一个已知的平衡点 $(u_0, \\lambda_0)$ 出发，首先通过“预测”（predictor）步骤来估计下一个平衡点的位置，然后通过迭代的“校正”（corrector）步骤精确地收敛到路径上的新点。通过模拟这个“预测-校正”的过程来追踪一个经典的 von Mises 桁架模型的突越（snap-through）行为，你将把理论知识转化为可工作的算法，并对非线性路径跟踪的完整流程建立起直观且深刻的理解 [@problem_id:2541443]。", "problem": "考虑一个经典的 von Mises 两杆桁架的简化单自由度模型，该模型通过一个三次内力法则来捕捉突跳现象。设标量位移为 $u$（无量纲），载荷因子为 $\\lambda$（无量纲）。参考载荷为 $P_0$（无量纲）。平衡方程被设定为残差的根\n$$\nR(u,\\lambda) \\equiv F_{\\text{int}}(u) - \\lambda P_0 = 0,\n$$\n其中内力由一个三次定律建模\n$$\nF_{\\text{int}}(u) = k\\,u - \\gamma\\,u^3,\n$$\n其中 $k &gt; 0$ 和 $\\gamma &gt; 0$ 是实常数。这个范式代理模型捕捉了浅 von Mises 桁架在突跳附近的褶皱点（极限点）结构。定义切向分量\n$$\n\\frac{\\partial R}{\\partial u}(u,\\lambda) = k - 3\\gamma u^2, \\qquad \\frac{\\partial R}{\\partial \\lambda}(u,\\lambda) = -P_0.\n$$\n您将使用带有 Riks 球面约束的弧长法，从一个给定的平衡状态 $(u_0,\\lambda_0)$ 执行一个载荷-位移步。未知的步增量为 $(\\Delta u, \\Delta \\lambda)$，该步结束时的试探状态为 $(u,\\lambda) = (u_0 + \\Delta u, \\lambda_0 + \\Delta \\lambda)$。Riks 约束为\n$$\ng(\\Delta u,\\Delta \\lambda) \\equiv (\\Delta u)^2 + \\alpha\\,(\\Delta \\lambda)^2 - \\Delta s^2 = 0,\n$$\n其中 $\\alpha &gt; 0$ 是载荷缩放参数，$\\Delta s &gt; 0$ 是弧长半径。\n\n实现以下算法，计算从给定的初始平衡点开始、越过极限点的单个步长的 $(\\Delta u,\\Delta \\lambda)$：\n\n- 预测方向：求解在 $(u_0,\\lambda_0)$ 处的齐次线性化平衡方程，以获得满足\n$$\n\\left(k - 3\\gamma u_0^2\\right)\\,\\hat{\\Delta u} - P_0\\,\\hat{\\Delta \\lambda} = 0,\n$$\n的方向 $(\\hat{\\Delta u},\\hat{\\Delta \\lambda})$，并选择 $(\\hat{\\Delta u},\\hat{\\Delta \\lambda})$ 的符号，使载荷因子增量的符号与局部斜率的符号相反，即选择符号使得 $\\operatorname{sign}(\\hat{\\Delta \\lambda}) = -\\operatorname{sign}(k - 3\\gamma u_0^2)$。然后将此方向归一化，以满足半径为 $\\Delta s$ 的 Riks 约束：\n$$\n\\Delta u^{(0)} = c\\,\\hat{\\Delta u}, \\quad \\Delta \\lambda^{(0)} = c\\,\\hat{\\Delta \\lambda}, \\quad c = \\frac{\\Delta s}{\\sqrt{(\\hat{\\Delta u})^2 + \\alpha(\\hat{\\Delta \\lambda})^2}}.\n$$\n\n- 对增广系统进行牛顿校正：\n$$\n\\begin{bmatrix}\n\\frac{\\partial R}{\\partial u}(u,\\lambda) & \\frac{\\partial R}{\\partial \\lambda}(u,\\lambda) \\\\\n2\\Delta u & 2\\alpha \\Delta \\lambda\n\\end{bmatrix}\n\\begin{bmatrix}\n\\delta u \\\\ \\delta \\lambda\n\\end{bmatrix}\n= -\n\\begin{bmatrix}\nR(u,\\lambda) \\\\ g(\\Delta u,\\Delta \\lambda)\n\\end{bmatrix},\n$$\n其中 $(u,\\lambda) = (u_0 + \\Delta u, \\lambda_0 + \\Delta \\lambda)$，并且 $(\\Delta u,\\Delta \\lambda)$ 按 $(\\Delta u,\\Delta \\lambda) \\leftarrow (\\Delta u,\\Delta \\lambda) + (\\delta u,\\delta \\lambda)$ 进行更新，直到收敛到指定的容差。必须对 $|R|$ 和 $|g|$ 同时强制施加一个小的正收敛容差。您可以假设给定的 $(u_0,\\lambda_0)$ 精确满足平衡方程。\n\n所有量均为无量纲；不涉及物理单位。不出现角度。不使用百分比。\n\n测试套件与要求输出：\n- 使用以下三组参数集 $(k,\\gamma,P_0,u_0,\\alpha,\\Delta s)$。对于每种情况，根据平衡条件计算 $\\lambda_0 = \\big(k\\,u_0 - \\gamma\\,u_0^3\\big)/P_0$，然后使用上述步骤执行恰好一个弧长步，并仅报告收敛后的 $(\\Delta u,\\Delta \\lambda)$。\n\n  1. 情况A：$k=10.0$，$\\gamma=10.0$，$P_0=1.0$，$u_0=0.55$，$\\alpha=0.01$，$\\Delta s=0.10$。\n  2. 情况B：$k=10.0$，$\\gamma=10.0$，$P_0=1.0$，$u_0=0.575$，$\\alpha=0.001$，$\\Delta s=0.05$。\n  3. 情况C：$k=5.0$，$\\gamma=2.0$，$P_0=2.0$，$u_0=0.90$，$\\alpha=0.02$，$\\Delta s=0.12$。\n\n- 数值答案格式：您的程序应生成单行输出，其中包含三种情况的结果，格式为逗号分隔的数对列表，每个数对的顺序为 $(\\Delta u,\\Delta \\lambda)$，每个值四舍五入到六位小数。确切格式必须为\n$$\n[\\,[\\Delta u_A,\\Delta \\lambda_A],[\\Delta u_B,\\Delta \\lambda_B],[\\Delta u_C,\\Delta \\lambda_C]\\,],\n$$\n例如，`[[0.123456,-0.012345],[\\dots],[\\dots]]`。\n\n您的程序必须是自包含的，不接受任何输入，并确定性地计算这三个输出。", "solution": "所提出的问题是计算力学中标准数值延拓方法的一个适定应用。它在科学上是合理的，包含了自身求解所需的所有信息，并且没有歧义。任务是使用 Riks 弧长法为非线性平衡路径计算单个求解步。我们将继续进行指定算法的推导和实现。\n\n系统的状态由位移 $u$ 和载荷因子 $\\lambda$ 定义。当残差 $R(u,\\lambda)$ 为零时，系统处于平衡状态，并且从初始平衡点 $(u_0, \\lambda_0)$ 开始的一个步长受到弧长方程 $g(\\Delta u, \\Delta \\lambda)=0$ 的约束。因此，问题在于找到能够求解以下非线性增广方程组的增量 $(\\Delta u, \\Delta \\lambda)$：\n$$\n\\begin{cases}\nR(u_0 + \\Delta u, \\lambda_0 + \\Delta \\lambda) = k(u_0 + \\Delta u) - \\gamma(u_0 + \\Delta u)^3 - (\\lambda_0 + \\Delta \\lambda)P_0 = 0 \\\\\ng(\\Delta u, \\Delta \\lambda) = (\\Delta u)^2 + \\alpha(\\Delta \\lambda)^2 - \\Delta s^2 = 0\n\\end{cases}\n$$\n解是通过预测-校正格式求得的。\n\n首先，对于每个测试用例，必须计算初始载荷因子 $\\lambda_0$，以确保起始状态 $(u_0, \\lambda_0)$ 是一个平衡点。根据条件 $R(u_0, \\lambda_0) = 0$, 我们有：\n$$\n\\lambda_0 = \\frac{F_{\\text{int}}(u_0)}{P_0} = \\frac{k u_0 - \\gamma u_0^3}{P_0}\n$$\n\n接下来，预测步为增量 $(\\Delta u, \\Delta \\lambda)$ 提供一个初始猜测值。预测方向 $(\\hat{\\Delta u}, \\hat{\\Delta \\lambda})$ 与点 $(u_0, \\lambda_0)$ 处的平衡路径相切。该切线通过求解线性化的平衡方程得到：\n$$\n\\frac{\\partial R}{\\partial u}\\bigg|_{(u_0, \\lambda_0)} \\hat{\\Delta u} + \\frac{\\partial R}{\\partial \\lambda}\\bigg|_{(u_0, \\lambda_0)} \\hat{\\Delta \\lambda} = 0\n$$\n代入给定的导数，我们得到：\n$$\n(k - 3\\gamma u_0^2)\\hat{\\Delta u} - P_0 \\hat{\\Delta \\lambda} = 0\n$$\n设 $K_T = k - 3\\gamma u_0^2$ 为初始点的切线刚度。方程变为 $K_T \\hat{\\Delta u} - P_0 \\hat{\\Delta \\lambda} = 0$。平衡路径的斜率为 $\\frac{d\\lambda}{du} = \\frac{K_T}{P_0}$。问题为预测方向指定了一个符号约定，以确保沿路径前进，尤其是在极限点附近：$\\operatorname{sign}(\\hat{\\Delta \\lambda}) = -\\operatorname{sign}(K_T/P_0)$。由于给定的 $P_0$ 为正，这可简化为 $\\operatorname{sign}(\\hat{\\Delta \\lambda}) = -\\operatorname{sign}(K_T)$。\n\n为满足此条件，我们可以设置 $\\hat{\\Delta \\lambda} = -\\operatorname{sign}(K_T)$ 并求解 $\\hat{\\Delta u}$：\n$$\n\\hat{\\Delta u} = \\frac{P_0 \\hat{\\Delta \\lambda}}{K_T} = \\frac{P_0 (-\\operatorname{sign}(K_T))}{K_T} = -\\frac{P_0}{|K_T|}\n$$\n增量的初始猜测值 $(\\Delta u^{(0)}, \\Delta \\lambda^{(0)})$，是通过缩放预测方向使其位于约束曲面上来获得的，即满足 $g(\\Delta u^{(0)}, \\Delta \\lambda^{(0)}) = 0$：\n$$\n\\Delta u^{(0)} = c\\,\\hat{\\Delta u}, \\quad \\Delta \\lambda^{(0)} = c\\,\\hat{\\Delta \\lambda}, \\quad \\text{where} \\quad c = \\frac{\\Delta s}{\\sqrt{(\\hat{\\Delta u})^2 + \\alpha(\\hat{\\Delta \\lambda})^2}}\n$$\n\n最后，校正步使用牛顿-拉夫逊过程对完整的非线性增广系统进行迭代，以修正此初始猜测值。令 $(\\Delta u^{(k)}, \\Delta \\lambda^{(k)})$ 为第 $k$ 次迭代时的增量。我们寻求校正量 $(\\delta u, \\delta \\lambda)$，使得 $(\\Delta u^{(k+1)}, \\Delta \\lambda^{(k+1)}) = (\\Delta u^{(k)} + \\delta u, \\Delta \\lambda^{(k)} + \\delta \\lambda)$ 是解的更好近似。用于校正的线性化系统是：\n$$\n\\mathbf{J}^{(k)} \\begin{bmatrix} \\delta u \\\\ \\delta \\lambda \\end{bmatrix} = - \\begin{bmatrix} R(u^{(k)}, \\lambda^{(k)}) \\\\ g(\\Delta u^{(k)}, \\Delta \\lambda^{(k)}) \\end{bmatrix}\n$$\n其中 $(u^{(k)}, \\lambda^{(k)}) = (u_0 + \\Delta u^{(k)}, \\lambda_0 + \\Delta \\lambda^{(k)})$。雅可比矩阵 $\\mathbf{J}^{(k)}$ 由下式给出：\n$$\n\\mathbf{J}^{(k)} = \\begin{bmatrix} \\frac{\\partial R}{\\partial u} & \\frac{\\partial R}{\\partial \\lambda} \\\\ \\frac{\\partial g}{\\partial (\\Delta u)} & \\frac{\\partial g}{\\partial (\\Delta \\lambda)} \\end{bmatrix}_{\\text{at } (u^{(k)}, \\Delta u^{(k)}, \\Delta \\lambda^{(k)})} = \\begin{bmatrix} k - 3\\gamma (u^{(k)})^2 & -P_0 \\\\ 2\\Delta u^{(k)} & 2\\alpha \\Delta \\lambda^{(k)} \\end{bmatrix}\n$$\n求解这个 $2 \\times 2$ 线性系统以得到 $(\\delta u, \\delta \\lambda)$，然后更新增量。重复此过程，直到残差的量值 $|R|$ 和 $|g|$ 小于指定的小容差 $\\epsilon$。对于实现而言，$\\epsilon=10^{-12}$ 的容差是足够的。收敛后的值 $(\\Delta u, \\Delta \\lambda)$ 即为弧长步的结果。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the arc-length step increments (delta_u, delta_lambda)\n    for three test cases of a 1-DOF nonlinear system.\n    \"\"\"\n    # Test cases parameters: (k, gamma, P0, u0, alpha, ds)\n    test_cases = [\n        (10.0, 10.0, 1.0, 0.55, 0.01, 0.10),\n        (10.0, 10.0, 1.0, 0.575, 0.001, 0.05),\n        (5.0, 2.0, 2.0, 0.90, 0.02, 0.12),\n    ]\n\n    results = []\n    # Convergence tolerance and maximum iterations for Newton's method\n    tol = 1e-12\n    max_iter = 20\n\n    for case in test_cases:\n        k, gamma, P0, u0, alpha, ds = case\n        \n        # 1. Calculate the initial load factor for equilibrium\n        lambda0 = (k * u0 - gamma * u0**3) / P0\n        \n        # 2. Predictor Step\n        # Calculate the tangent stiffness at the initial point\n        KT = k - 3 * gamma * u0**2\n        \n        # Determine the predictor direction (d_u_hat, d_lambda_hat)\n        # The sign convention requires sign(d_lambda_hat) = -sign(KT)\n        # We set d_lambda_hat and solve for d_u_hat from the linearized equilibrium.\n        d_lambda_hat = -np.sign(KT)\n        d_u_hat = P0 * d_lambda_hat / KT\n        \n        # Normalize the direction vector to satisfy the Riks constraint\n        c = ds / np.sqrt(d_u_hat**2 + alpha * d_lambda_hat**2)\n        \n        # Initial guess for the increments (delta_u, delta_lambda)\n        delta_u = c * d_u_hat\n        delta_lambda = c * d_lambda_hat\n        \n        # 3. Corrector Step (Newton-Raphson iteration)\n        for _ in range(max_iter):\n            # Current state (u, lambda) based on the current increments\n            u = u0 + delta_u\n            lambda_ = lambda0 + delta_lambda\n            \n            # Calculate the residuals of the augmented system\n            R = k * u - gamma * u**3 - lambda_ * P0\n            g = delta_u**2 + alpha * delta_lambda**2 - ds**2\n            \n            # Check for convergence against the tolerance\n            if np.abs(R)  tol and np.abs(g)  tol:\n                break\n            \n            # Assemble the Jacobian matrix for the augmented system\n            dR_du = k - 3 * gamma * u**2\n            dR_dlambda = -P0\n            dg_du = 2 * delta_u\n            dg_dlambda = 2 * alpha * delta_lambda\n            \n            J = np.array([\n                [dR_du, dR_dlambda],\n                [dg_du, dg_dlambda]\n            ])\n            \n            # Define the right-hand side vector (negative residuals)\n            F = -np.array([R, g])\n            \n            # Solve the linear system J * corrections = F for the corrections\n            corrections = np.linalg.solve(J, F)\n            du_corr, dlambda_corr = corrections\n            \n            # Update the increments with the calculated corrections\n            delta_u += du_corr\n            delta_lambda += dlambda_corr\n            \n        # Append the converged and rounded results for the case\n        results.append([round(delta_u, 6), round(delta_lambda, 6)])\n\n    # Print the final result in the specified format: [[du_A,dl_A],[du_B,dl_B],[du_C,dl_C]]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2541443"}]}