{"hands_on_practices": [{"introduction": "在深入进行复杂的编程之前，对基本运动学量有扎实的理解至关重要。本练习通过让您从第一性原理出发，为一个简单的均匀变形推导变形梯度（$F$）、右柯西-格林张量（$C$）和雅可比行列式（$J$），从而巩固您对这些概念的掌握。掌握这一计算并理解变形的物理容许性条件，是进行任何总拉格朗日分析的关键第一步。[@problem_id:2607122]", "problem": "考虑一个处于 $\\mathbb{R}^{3}$ 中参考构型的物体，其物质点位置为 $X \\in \\Omega_{0} \\subset \\mathbb{R}^{3}$。一个均匀变形由映射 $\\varphi:\\Omega_{0}\\to\\mathbb{R}^{3}$ 指定，该映射由 $\\varphi(X)=\\mathrm{diag}(\\lambda_{1},\\lambda_{2},\\lambda_{3})\\,X$ 给出，其中 $\\lambda_{1},\\lambda_{2},\\lambda_{3}\\in\\mathbb{R}$ 是常数。使用有限变形的总拉格朗日（TL）列式的运动学，从第一性原理推导变形梯度 $F$、右 Cauchy–Green 张量 $C$ 以及变形的雅可比行列式 $J$。然后，基于总拉格朗日有限元分析中的基本物理和数学容许性要求（包括方向保持、物质不可侵入性和变形的可逆性），确定产生容许变形的三元组集合 $\\{\\lambda_{i}\\}_{i=1}^{3}$，并证明你的答案。\n\n从 $F$、$C$ 和 $J$ 在参考构型中的核心定义开始，给出你推导的所有步骤。为了评分，仅需报告你得到的以 $\\lambda_{1}$、$\\lambda_{2}$ 和 $\\lambda_{3}$ 表示的 $J$ 的闭式解析表达式作为最终答案。无需四舍五入，最终报告的量不涉及单位。", "solution": "问题陈述已经过验证，并被认定为有效。它在科学上基于连续介质力学原理，是适定的、客观的，并包含获得唯一解所需的所有必要信息。我们将开始推导。\n\n问题描述了一个物体从参考构型 $\\Omega_{0}$ 到当前构型的均匀变形。一个位置矢量为 $X \\in \\Omega_{0}$ 的物质点通过函数 $\\varphi$ 映射到空间位置 $x \\in \\Omega$。$X$ 的分量是 $(X_{1}, X_{2}, X_{3})$，$x$ 的分量是 $(x_{1}, x_{2}, x_{3})$。指定的变形映射由下式给出：\n$$\nx = \\varphi(X) = \\mathbf{A} X\n$$\n其中 $\\mathbf{A}$ 是一个常数矩阵，表示为 $\\mathrm{diag}(\\lambda_{1}, \\lambda_{2}, \\lambda_{3})$。用分量形式表示为：\n$$\n\\begin{pmatrix} x_{1} \\\\ x_{2} \\\\ x_{3} \\end{pmatrix} = \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix} \\begin{pmatrix} X_{1} \\\\ X_{2} \\\\ X_{3} \\end{pmatrix}\n$$\n展开为 $x_{1} = \\lambda_{1} X_{1}$、$x_{2} = \\lambda_{2} X_{2}$ 和 $x_{3} = \\lambda_{3} X_{3}$，其中 $\\lambda_{1}, \\lambda_{2}, \\lambda_{3}$ 为常实数。\n\n首先，我们推导变形梯度张量 $F$。根据定义，$F$ 是变形映射 $\\varphi$ 相对于参考坐标 $X$ 的物质梯度。其分量由 $F_{ij} = \\frac{\\partial \\varphi_{i}}{\\partial X_{j}} = \\frac{\\partial x_{i}}{\\partial X_{j}}$ 给出。我们计算每个分量：\n$$\nF_{11} = \\frac{\\partial x_{1}}{\\partial X_{1}} = \\frac{\\partial (\\lambda_{1} X_{1})}{\\partial X_{1}} = \\lambda_{1}\n$$\n$$\nF_{22} = \\frac{\\partial x_{2}}{\\partial X_{2}} = \\frac{\\partial (\\lambda_{2} X_{2})}{\\partial X_{2}} = \\lambda_{2}\n$$\n$$\nF_{33} = \\frac{\\partial x_{3}}{\\partial X_{3}} = \\frac{\\partial (\\lambda_{3} X_{3})}{\\partial X_{3}} = \\lambda_{3}\n$$\n所有非对角分量均为零。例如，对于 $i \\neq j$：\n$$\nF_{ij} = \\frac{\\partial x_{i}}{\\partial X_{j}} = \\frac{\\partial (\\lambda_{i} X_{i})}{\\partial X_{j}} = 0\n$$\n因此，变形梯度张量是一个对角矩阵：\n$$\nF = \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix}\n$$\n\n其次，我们推导右 Cauchy–Green 张量 $C$。该张量度量参考构型中的变形，定义为 $C = F^{T}F$，其中 $F^{T}$ 是 $F$ 的转置。由于 $F$ 是一个对角矩阵，其转置与自身相同，即 $F^{T} = F$。因此：\n$$\nC = F^{T}F = F F = F^{2}\n$$\n两个对角矩阵的乘积是一个对角矩阵，其元素是原始矩阵相应对角元素的乘积。\n$$\nC = \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix} \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix} = \\begin{pmatrix} \\lambda_{1}^{2} & 0 & 0 \\\\ 0 & \\lambda_{2}^{2} & 0 \\\\ 0 & 0 & \\lambda_{3}^{2} \\end{pmatrix}\n$$\n\n第三，我们推导变形的雅可比行列式 $J$。雅可比行列式定义为变形梯度张量的行列式，$J = \\det(F)$。它表示从参考构型到当前构型的局部体积变化比率，即 $J = \\frac{dV}{dV_{0}}$。对于推导出的 $F$：\n$$\nJ = \\det \\begin{pmatrix} \\lambda_{1} & 0 & 0 \\\\ 0 & \\lambda_{2} & 0 \\\\ 0 & 0 & \\lambda_{3} \\end{pmatrix}\n$$\n对角矩阵的行列式是其对角元素的乘积。因此：\n$$\nJ = \\lambda_{1} \\lambda_{2} \\lambda_{3}\n$$\n\n最后，我们必须确定产生容许变形的三元组集合 $\\{\\lambda_{i}\\}_{i=1}^{3}$。如果一个变形满足以下几个基本要求，那么它在物理和数学上就是容许的：\n1.  **变形映射的可逆性**：映射 $\\varphi$ 必须是一对一的，以确保每个空间点 $x$ 对应一个唯一的物质点 $X$。这要求变形梯度 $F$ 是一个可逆矩阵，这当且仅当其行列式非零时成立。因此，我们必须有 $J \\neq 0$。这个条件防止了有限体积坍缩成一个面、一条线或一个点（此时 $J=0$），或从低维对象创造出有限体积（此时 $J$ 将是无穷大）。\n2.  **物质的不可侵入性**：这个物理公理指出，两个不同的物质粒子不可能同时占据同一个空间位置。如果映射是可逆的，即 $J \\neq 0$，这一点就能得到保证。\n3.  **方向的保持**：此要求规定局部物质基的“手性”必须保持不变。参考构型中的右手基必须映射到当前构型中的右手基。这当且仅当雅可比行列式严格为正时才满足：$J > 0$。$J < 0$ 的变形对应于物质的局部翻转或反射，这对于一个从无变形状态（此时 $J=1$）开始经历连续变形过程的真实物体来说，被认为是物理上不可能的。\n\n综合这些，一个容许的最终状态的必要条件是 $J = \\lambda_{1} \\lambda_{2} \\lambda_{3} > 0$。这意味着要么所有三个 $\\lambda_{i}$ 都为正，要么一个为正，两个为负。\n\n然而，我们必须考虑整个变形过程。在总拉格朗日列式中，变形通常被视为一个从参考的、无变形状态开始的连续过程，在该状态下 $X=x$，因此 $F = I$（单位矩阵），且 $\\lambda_{1} = \\lambda_{2} = \\lambda_{3} = 1$。初始时，雅可比行列式为 $J=1$。对于一个连续且物理上合理的变形路径，雅可比行列式 $J(t)$ 在过程中的所有时间 $t$ 内都必须保持为正。它不能穿过零变为负值。这施加了一个更严格的约束。主伸长率 $\\lambda_{i}$ 本身必须从其初始值 1 连续变化。任何一个 $\\lambda_{i}$ 要变为负值，都必须经过值 0。在单个 $\\lambda_{i}$ 变为 0 的瞬间，雅可比行列式 $J = \\lambda_{1} \\lambda_{2} \\lambda_{3}$ 变为 0，这对应于一个奇异的、物理上不容许的状态。\n\n因此，为了使变形能够通过从参考状态出发的连续物理路径达到，每个主伸长率在整个过程中都必须保持为正。这导致了最终的容许性条件：\n$$\n\\lambda_{1} > 0, \\quad \\lambda_{2} > 0, \\quad \\lambda_{3} > 0\n$$\n因此，容许的三元组集合是 $\\{\\lambda_{1}, \\lambda_{2}, \\lambda_{3}\\} \\in \\mathbb{R}^{3}$，使得对于 $i \\in \\{1, 2, 3\\}$ 都有 $\\lambda_{i} > 0$。这个更严格的条件自动满足了必要的数学条件 $J > 0$。", "answer": "$$\\boxed{\\lambda_{1} \\lambda_{2} \\lambda_{3}}$$", "id": "2607122"}, {"introduction": "回顾了理论运动学之后，下一步便是将这些概念转化为一个可工作的有限元实现。本练习将引导您完成计算超弹性单元内力向量的过程，这是任何非线性结构分析的核心任务。通过验证刚体旋转正确地产生零应力和零内力，您将执行一项关键的健全性检查，以确认您的实现尊重了材料坐标系无关性这一基本原则。[@problem_id:2607108]", "problem": "要求您在全拉格朗日列式中，为一个二维线性三角形有限元（三节点三角形）实现内力向量的计算，并数值验证对于一个标架无关的可压缩超弹性本构模型，刚体转动产生的内力向量为零。您的程序必须使用参考构型和第二 Piola–Kirchhoff 应力来计算节点内力，并测试这些力在刚性转动下（在数值容差范围内）是否消失。\n\n理论基础：\n- 从参考构型中的虚功原理出发：内虚功为 $\\delta W_{\\mathrm{int}} = \\int_{\\Omega_0} \\mathbf{P} : \\nabla_0 \\delta \\mathbf{u} \\, \\mathrm{d}\\Omega_0$，其中 $\\mathbf{P}$ 是第一 Piola–Kirchhoff 应力，$\\nabla_0$表示关于参考坐标的梯度，$\\delta \\mathbf{u}$ 是虚位移。\n- 有限变形梯度为 $\\mathbf{F} = \\partial \\mathbf{x} / \\partial \\mathbf{X}$，其中 $\\mathbf{x}$ 是当前位置，$\\mathbf{X}$ 是参考位置。\n- 对于应变能密度仅依赖于右 Cauchy–Green 张量 $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$（即标架无关）的超弹性材料，第二 Piola–Kirchhoff 应力为 $\\mathbf{S} = 2 \\, \\partial W / \\partial \\mathbf{C}$，且 $\\mathbf{P} = \\mathbf{F} \\, \\mathbf{S}$。\n- 对于二维可压缩 Neo–Hookean 超弹性模型，使用以下本构选择\n  $$\n  W(\\mathbf{F}) = \\frac{\\mu}{2} \\left( \\mathrm{tr}(\\mathbf{C}) - 2 \\right) - \\mu \\ln J + \\frac{\\lambda}{2} \\left( \\ln J \\right)^2,\n  $$\n  其中 $\\mu$ 和 $\\lambda$ 是 Lamé 参数，$\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$，以及 $J = \\det \\mathbf{F}$。相关的第二 Piola–Kirchhoff 应力为\n  $$\n  \\mathbf{S} = \\mu \\left( \\mathbf{I} - \\mathbf{C}^{-1} \\right) + \\lambda \\, \\ln J \\, \\mathbf{C}^{-1}。\n  $$\n- 对于刚性转动，$\\mathbf{F} = \\mathbf{R}$，其中 $\\mathbf{R}^{\\mathsf{T}}\\mathbf{R} = \\mathbf{I}$ 且 $\\det \\mathbf{R} = 1$，因此 $\\mathbf{C} = \\mathbf{I}$，$J = 1$，$\\mathbf{S} = \\mathbf{0}$，$\\mathbf{P} = \\mathbf{0}$，内力向量为零。\n\n需遵循的单元和数值实现细节：\n- 使用单个二维线性三角形（三节点单元）。参考节点坐标 $\\mathbf{X}_a$ 以米为单位给出。形函数是线性的，满足单位分解性和线性完备性，因此可以精确表示均匀变形。\n- 设当前节点坐标为 $\\mathbf{x}_a = \\mathbf{A} \\, \\mathbf{X}_a$，其中 $\\mathbf{A}$ 是一个恒定的 $2 \\times 2$ 变形映射。对于纯刚性转动，$\\mathbf{A} = \\mathbf{R}(\\theta)$，其中 $\\theta$ 以弧度为单位。对于非刚性测试，使用一个与旋转复合的拉伸，$\\mathbf{A} = \\mathbf{R}(\\theta) \\, \\mathrm{diag}(s, 1/s)$，其中 $s > 1$。\n- 在全拉格朗日列式中，根据参考三角形的几何形状计算形函数的常数参考梯度 $\\nabla_0 N_a$。然后按如下方式组装变形梯度\n  $$\n  \\mathbf{F} = \\sum_{a=1}^{3} \\mathbf{x}_a \\otimes \\left( \\nabla_0 N_a \\right)^{\\mathsf{T}},\n  $$\n  对于均匀变形下的线性三角形，该值是恒定的。计算 $\\mathbf{C}$、$J$、$\\mathbf{S}$ 和 $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$。\n- 节点 $a$ 的节点内力为\n  $$\n  \\mathbf{r}_a = \\int_{\\Omega_0} \\mathbf{P} \\, \\nabla_0 N_a \\, \\mathrm{d}\\Omega_0,\n  $$\n  对于线性三角形，这简化为 $\\mathbf{r}_a = \\mathbf{P} \\, \\nabla_0 N_a \\, A_0$，其中 $A_0$ 是参考面积。使用单位厚度且不考虑体力。所有材料参数 $\\mu$ 和 $\\lambda$ 的单位是帕斯卡，坐标单位是米。\n\n验证目标：\n- 对于刚性转动映射，结果应为一个数值上为零的内力向量（所有分量在指定的容差范围内等于 $0$）。您必须计算所有节点和分量上节点内力向量的最大绝对值分量，如果该最大值不超过容差 $\\varepsilon$，则判定为成功。\n- 使用容差 $\\varepsilon = 10^{-10}$。\n\n测试套件：\n- 使用以下具有节点坐标（单位：米）的单个参考单元：\n  - $\\mathbf{X}_1 = (0, 0)$，$\\mathbf{X}_2 = (1.2, 0.1)$，$\\mathbf{X}_3 = (0.2, 0.9)$。\n- 定义五个测试用例，每个用例产生一个布尔结果，指示该用例的内力向量是否（在数值上）为零：\n  1. 纯刚性转动，角度 $\\theta = \\pi/3$，材料参数 $\\mu = 8.0 \\times 10^{4}$ 和 $\\lambda = 1.2 \\times 10^{5}$。\n  2. 纯刚性转动，角度 $\\theta = 0$，材料参数 $\\mu = 1.0 \\times 10^{5}$ 和 $\\lambda = 2.0 \\times 10^{5}$。\n  3. 纯刚性转动，角度 $\\theta = \\pi/2$，材料参数 $\\mu = 5.0 \\times 10^{4}$ 和 $\\lambda = 1.0 \\times 10^{5}$。\n  4. 纯刚性转动，角度 $\\theta = \\pi$，材料参数 $\\mu = 3.3 \\times 10^{4}$ 和 $\\lambda = 7.7 \\times 10^{4}$。\n  5. 非刚性均匀变形，角度 $\\theta = \\pi/6$，施加拉伸 $s = 1.05$，形式为 $\\mathbf{A} = \\mathbf{R}(\\theta) \\, \\mathrm{diag}(s, 1/s)$，材料参数 $\\mu = 8.0 \\times 10^{4}$ 和 $\\lambda = 1.2 \\times 10^{5}$。该用例应产生非零内力，因此布尔值为 false。\n- 角度单位为弧度，材料参数单位为帕斯卡，坐标单位为米。将布尔结果表示为 Python 风格的字面量。\n\n您的程序必须：\n- 为单个三角形实现所述的全拉格朗日残差计算。\n- 对于每个测试用例，根据指定的映射构建当前节点位置，组装内力向量，计算最大绝对值分量，并将其与 $\\varepsilon = 10^{-10}$ 进行比较以生成一个布尔值。\n- 生成单行输出，其中包含用方括号括起来的逗号分隔的结果列表（例如，“[true,false,true,true,true]”，但使用 Python 布尔值的大小写和精确的列表格式：“[True,False,True,...]”）。\n\n最终输出必须是严格遵守指定格式的单行布尔值列表。不允许有任何附加文本。", "solution": "该问题陈述经过了严格验证，被认定为有效。它在科学上基于连续介质力学和有限元方法的原理，问题是适定的，提供了所有必要的数据和定义，并以客观、正式的语言表述。没有发现可识别的缺陷、矛盾或模糊之处。该任务是计算固体力学中的一个标准验证程序。因此，我们可以着手解决。\n\n目标是在全拉格朗日框架内，为单个二维三节点线性三角形单元计算节点内力向量，并数值验证对于指定的标架无关可压缩超弹性材料模型，刚体转动产生的内力为零。\n\n该列式的基础是在参考构型 $\\Omega_0$ 中表述的虚功原理。内虚功 $\\delta W_{\\mathrm{int}}$ 由下式给出：\n$$\n\\delta W_{\\mathrm{int}} = \\int_{\\Omega_0} \\mathbf{P} : \\delta(\\nabla_0 \\mathbf{u}) \\, \\mathrm{d}\\Omega_0\n$$\n其中 $\\mathbf{P}$ 是第一 Piola-Kirchhoff 应力张量，$\\mathbf{u}$ 是位移场 ($\\mathbf{u} = \\mathbf{x} - \\mathbf{X}$)，$\\nabla_0$ 是关于参考坐标 $\\mathbf{X}$ 的梯度算子。对于有限元离散化，该积分导出了节点内力向量的定义。\n\n变形由变形梯度 $\\mathbf{F} = \\partial \\mathbf{x} / \\partial \\mathbf{X}$ 来表征，其中 $\\mathbf{x}$ 是当前坐标。由此，我们定义右 Cauchy-Green 变形张量 $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}} \\mathbf{F}$ 以及体积变形雅可比 $J = \\det \\mathbf{F}$。\n\n问题指定了一个可压缩 Neo-Hookean 超弹性模型，其应变能密度函数 $W$ 由下式给出：\n$$\nW(\\mathbf{C}, J) = \\frac{\\mu}{2} \\left( \\mathrm{tr}(\\mathbf{C}) - 2 \\right) - \\mu \\ln J + \\frac{\\lambda}{2} \\left( \\ln J \\right)^2\n$$\n这里，$\\mu$ 和 $\\lambda$ 是 Lamé 材料参数。该材料模型是标架无关的，因为 $W$ 对变形的依赖仅通过 $\\mathbf{C}$ 和 $J$。第二 Piola-Kirchhoff 应力张量 $\\mathbf{S}$ 由 $W$ 导出，即 $\\mathbf{S} = 2 \\frac{\\partial W}{\\partial \\mathbf{C}}$。对于给定的 $W$，这得到：\n$$\n\\mathbf{S} = \\mu \\left( \\mathbf{I} - \\mathbf{C}^{-1} \\right) + \\lambda (\\ln J) \\mathbf{C}^{-1}\n$$\n第一和第二 Piola-Kirchhoff 应力张量通过前推运算 $\\mathbf{P} = \\mathbf{F} \\mathbf{S}$ 相关联。\n\n对于线性三角形单元，单元内任意点的位置由节点位置通过线性形函数 $N_a$ 插值得到：\n$$\n\\mathbf{X} = \\sum_{a=1}^{3} N_a \\mathbf{X}_a \\quad \\text{和} \\quad \\mathbf{x} = \\sum_{a=1}^{3} N_a \\mathbf{x}_a\n$$\n形函数关于参考坐标的梯度 $\\nabla_0 N_a$ 在单元内是常数。变形梯度 $\\mathbf{F}$ 也是常数，计算如下：\n$$\n\\mathbf{F} = \\frac{\\partial \\mathbf{x}}{\\partial \\mathbf{X}} = \\frac{\\partial}{\\partial \\mathbf{X}} \\left( \\sum_{a=1}^{3} N_a \\mathbf{x}_a \\right) = \\sum_{a=1}^{3} \\mathbf{x}_a \\otimes (\\nabla_0 N_a)^{\\mathsf{T}}\n$$\n我们已知节点变形遵循一个均匀映射 $\\mathbf{x}_a = \\mathbf{A} \\mathbf{X}_a$，其中 $\\mathbf{A}$ 是一个常数 $2 \\times 2$ 矩阵。将此代入 $\\mathbf{F}$ 的表达式中，得到一个关键的简化：\n$$\n\\mathbf{F} = \\sum_{a=1}^{3} (\\mathbf{A} \\mathbf{X}_a) \\otimes (\\nabla_0 N_a)^{\\mathsf{T}} = \\mathbf{A} \\left( \\sum_{a=1}^{3} \\mathbf{X}_a \\otimes (\\nabla_0 N_a)^{\\mathsf{T}} \\right)\n$$\n括号中的项是恒等映射 $\\mathbf{X} = \\sum N_a \\mathbf{X}_a$ 对其自身的梯度，即单位张量 $\\mathbf{I}$：\n$$\n\\sum_{a=1}^{3} \\mathbf{X}_a \\otimes (\\nabla_0 N_a)^{\\mathsf{T}} = \\frac{\\partial}{\\partial \\mathbf{X}} \\left( \\sum_{a=1}^{3} N_a \\mathbf{X}_a \\right) = \\frac{\\partial \\mathbf{X}}{\\partial \\mathbf{X}} = \\mathbf{I}\n$$\n因此，对于承受均匀变形的线性单元，变形梯度就是 $\\mathbf{F} = \\mathbf{A}$。\n\n内力向量 $\\mathbf{r}$ 由节点贡献 $\\mathbf{r}_a$ 组装而成。对于节点 $a$，力由下式给出：\n$$\n\\mathbf{r}_a = \\int_{\\Omega_0} (\\nabla_0 N_a)^{\\mathsf{T}} \\mathbf{P}^{\\mathsf{T}} \\, \\mathrm{d}\\Omega_0 = \\left( \\int_{\\Omega_0} \\mathrm{d}\\Omega_0 \\right) \\mathbf{P} (\\nabla_0 N_a) = A_0 \\mathbf{P} (\\nabla_0 N_a)\n$$\n其中 $A_0$ 是单元在参考构型中的面积，并且我们利用了 $\\mathbf{P}$ 和 $\\nabla_0 N_a$ 是常数这一事实。我们假设单位厚度。\n\n理论验证依赖于刚体转动下的行为。在这种情况下，变形映射 $\\mathbf{A}$ 是一个正交旋转矩阵 $\\mathbf{R}$，因此 $\\mathbf{F} = \\mathbf{R}$。根据定义, $\\mathbf{R}^{\\mathsf{T}}\\mathbf{R} = \\mathbf{I}$ 且 $\\det(\\mathbf{R}) = 1$。这意味着 $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F} = \\mathbf{I}$ 且 $J = \\det \\mathbf{F} = 1$。将这些代入 $\\mathbf{S}$ 的本构律中：\n$$\n\\mathbf{S} = \\mu \\left( \\mathbf{I} - \\mathbf{I}^{-1} \\right) + \\lambda (\\ln 1) \\mathbf{I}^{-1} = \\mu(\\mathbf{I} - \\mathbf{I}) + \\mathbf{0} = \\mathbf{0}\n$$\n当 $\\mathbf{S} = \\mathbf{0}$ 时，立即得出 $\\mathbf{P} = \\mathbf{F}\\mathbf{S} = \\mathbf{R}\\mathbf{0} = \\mathbf{0}$。因此，节点内力 $\\mathbf{r}_a = A_0 \\mathbf{P} (\\nabla_0 N_a)$ 必定为零。对于任何非刚性变形，通常 $\\mathbf{C} \\neq \\mathbf{I}$，导致 $\\mathbf{S} \\neq \\mathbf{0}$ 和非零内力。\n\n计算步骤如下：\n1.  对于给定的参考节点坐标 $\\mathbf{X}_1, \\mathbf{X}_2, \\mathbf{X}_3$，计算常数单元属性：参考面积 $A_0$ 和形函数梯度矩阵 $\\mathbf{B}_0 = [\\nabla_0 N_1 | \\nabla_0 N_2 | \\nabla_0 N_3]$。\n2.  对于每个测试用例：\n    a. 根据指定的旋转角度 $\\theta$ 和拉伸 $s$ 构建变形映射矩阵 $\\mathbf{A}$。对于刚性旋转，$\\mathbf{A} = \\mathbf{R}(\\theta)$。对于非刚性情况，$\\mathbf{A} = \\mathbf{R}(\\theta) \\mathrm{diag}(s, 1/s)$。\n    b. 设定变形梯度 $\\mathbf{F} = \\mathbf{A}$。\n    c. 计算 $\\mathbf{C} = \\mathbf{F}^{\\mathsf{T}}\\mathbf{F}$、$J = \\det \\mathbf{F}$ 和 $\\mathbf{C}^{-1}$。\n    d. 计算第二 Piola-Kirchhoff 应力 $\\mathbf{S} = \\mu(\\mathbf{I} - \\mathbf{C}^{-1}) + \\lambda(\\ln J)\\mathbf{C}^{-1}$。\n    e. 计算第一 Piola-Kirchhoff 应力 $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$。\n    f. 计算节点内力矩阵 $\\mathbf{R}_{\\text{forces}} = A_0 \\mathbf{P} \\mathbf{B}_0$。这是一个 $2 \\times 3$ 矩阵，其中第 $a$ 列对应于 $\\mathbf{r}_a$。\n    g. 找出 $\\mathbf{R}_{\\text{forces}}$ 中所有分量的最大绝对值。\n    h. 将此最大值与容差 $\\varepsilon = 10^{-10}$ 进行比较。如果它小于或等于 $\\varepsilon$，则结果为 True；否则为 False。\n3.  将所有测试用例的布尔结果收集到列表中作为最终输出。\n将实施此程序以产生所需的验证。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements the Total Lagrangian internal force calculation for a 2D linear\n    triangular element and verifies that rigid body rotations produce zero\n    internal forces for a compressible Neo-Hookean material.\n    \"\"\"\n\n    # --- Element and Material Properties ---\n    # Reference nodal coordinates (m)\n    X_coords = np.array([\n        [0.0, 0.0],  # Node 1\n        [1.2, 0.1],  # Node 2\n        [0.2, 0.9]   # Node 3\n    ]).T  # Transpose to get a 2x3 matrix [X; Y]\n\n    # Tolerance for numerical zero\n    epsilon = 1e-10\n\n    # --- Pre-computation of Constant Element Properties ---\n    X1, Y1 = X_coords[:, 0]\n    X2, Y2 = X_coords[:, 1]\n    X3, Y3 = X_coords[:, 2]\n\n    # Reference area of the triangle\n    A0 = 0.5 * ((X2 - X1) * (Y3 - Y1) - (X3 - X1) * (Y2 - Y1))\n    \n    # Check for degenerate element\n    if abs(A0) < 1e-12:\n        raise ValueError(\"Reference element is degenerate (zero area).\")\n\n    # Matrix of reference shape function gradients (B0-matrix)\n    # B0 = [dN1/dX, dN2/dX, dN3/dX]\n    #      [dN1/dY, dN2/dY, dN3/dY]\n    B0_matrix = (1.0 / (2.0 * A0)) * np.array([\n        [Y2 - Y3, Y3 - Y1, Y1 - Y2],\n        [X3 - X2, X1 - X3, X2 - X1]\n    ])\n\n    # --- Test Cases ---\n    test_cases = [\n        {'theta': np.pi / 3, 's': 1.0, 'mu': 8.0e4, 'lambda': 1.2e5}, # Case 1: Rigid rotation\n        {'theta': 0.0, 's': 1.0, 'mu': 1.0e5, 'lambda': 2.0e5},       # Case 2: Identity (zero rotation)\n        {'theta': np.pi / 2, 's': 1.0, 'mu': 5.0e4, 'lambda': 1.0e5}, # Case 3: Rigid rotation\n        {'theta': np.pi, 's': 1.0, 'mu': 3.3e4, 'lambda': 7.7e4},     # Case 4: Rigid rotation\n        {'theta': np.pi / 6, 's': 1.05, 'mu': 8.0e4, 'lambda': 1.2e5} # Case 5: Non-rigid deformation\n    ]\n\n    results = []\n\n    # --- Main Calculation Loop ---\n    for case in test_cases:\n        theta = case['theta']\n        s = case['s']\n        mu = case['mu']\n        lmbda = case['lambda'] # 'lambda' is a keyword in Python\n\n        # 1. Construct the deformation mapping matrix A\n        # Rotation matrix\n        R = np.array([\n            [np.cos(theta), -np.sin(theta)],\n            [np.sin(theta),  np.cos(theta)]\n        ])\n        # Stretch matrix\n        U = np.diag([s, 1.0 / s])\n        # Deformation mapping\n        A = R @ U\n\n        # 2. For a linear element under homogeneous deformation, F = A\n        F = A\n        \n        # 3. Compute kinematic quantities\n        C = F.T @ F  # Right Cauchy-Green tensor\n        J = np.linalg.det(F) # Jacobian of deformation\n\n        # Check for unphysical deformation\n        if J <= 0:\n            raise ValueError(f\"Unphysical deformation with J = {J} <= 0.\")\n            \n        C_inv = np.linalg.inv(C)\n        I = np.identity(2)\n        \n        # 4. Compute Second Piola-Kirchhoff stress S\n        S = mu * (I - C_inv) + lmbda * np.log(J) * C_inv\n        \n        # 5. Compute First Piola-Kirchhoff stress P\n        P = F @ S\n        \n        # 6. Compute internal nodal forces\n        # r_a = A0 * P * (nabla_0 N_a)\n        # We can compute all nodal forces at once:\n        # R_forces is a 2x3 matrix where column 'a' is the force vector for node 'a'\n        R_forces = A0 * P @ B0_matrix\n        \n        # 7. Verification\n        # Find the maximum absolute component of the internal force vector\n        max_force_component = np.max(np.abs(R_forces))\n        \n        # Compare with tolerance\n        is_zero = (max_force_component <= epsilon)\n        results.append(is_zero)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2607108"}, {"introduction": "有了一个可靠的计算内力向量（即残差 $\\mathbf{R}$）的函数后，您现在可以构建一个完整的非线性求解器了。这项高级实践要求您实现完整的牛顿-拉弗森算法，以求解大变形的控制平衡方程。通过比较使用持续更新的切线矩阵（consistent tangent）和使用固定割线矩阵（secant tangent）的求解器的性能，您将对非线性求解器的收敛特性以及计算开销与收敛速度之间的权衡获得深刻的实践见解。[@problem_id:2607090]", "problem": "考虑一个用于模拟悬臂梁的二维平面应变、单双线性四边形有限元的总拉格朗日列式。悬臂梁长度为 $L$，高度为 $H$，由可压缩 neo-Hookean 超弹性材料制成。其左边缘完全固定，一个向下的集中荷载施加在右侧边缘的两个节点上（在它们之间平均分配）。该列式必须基于虚功原理以及运动学和本构量的定义来建立，除了这些定义之外，不得依赖任何简化公式。\n\n从参考构型中的虚功原理开始：\n$$\n\\delta W_{\\text{int}} = \\int_{\\Omega_0} \\mathbf{S} : \\delta \\mathbf{E} \\, dV_0,\n$$\n其中 $\\mathbf{S}$ 是第二 Piola–Kirchhoff 应力，$\\mathbf{E}$ 是 Green–Lagrange 应变。使用基于变形梯度 $\\mathbf{F}$ 的总拉格朗日运动学，该变形梯度由等参映射 $\\mathbf{x}(\\mathbf{X}) \\approx \\sum_{a=1}^4 N_a(\\mathbf{X}) \\, \\mathbf{x}_a$ 定义，因此\n$$\n\\mathbf{F} = \\frac{\\partial \\mathbf{x}}{\\partial \\mathbf{X}} = \\sum_{a=1}^4 \\mathbf{x}_a \\otimes \\nabla_0 N_a,\n\\quad\n\\mathbf{C} = \\mathbf{F}^\\mathsf{T}\\mathbf{F},\n\\quad\nJ = \\det \\mathbf{F},\n\\quad\n\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I}).\n$$\n采用可压缩 neo-Hookean 储存能量函数\n$$\nW(\\mathbf{C}) = \\frac{\\mu}{2} (I_1 - 3) - \\mu \\ln J + \\frac{\\lambda}{2} (\\ln J)^2,\n$$\n其中 $I_1 = \\operatorname{tr}(\\mathbf{C})$，$\\mu$ 和 $\\lambda$ 是 Lamé 参数。由此，得到本构关系\n$$\n\\mathbf{S} = \\mu \\left(\\mathbf{I} - \\mathbf{C}^{-1}\\right) + \\lambda \\ln J \\, \\mathbf{C}^{-1}.\n$$\n使用等价关系 $\\mathbf{S} : \\delta \\mathbf{E} = \\mathbf{P} : \\nabla_0 \\delta \\mathbf{u}$，其中第一 Piola–Kirchhoff 应力为 $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$，将单元层级的内力表示为\n$$\n\\mathbf{f}_{\\text{int},a} = \\int_{\\Omega_0} \\mathbf{P} \\, \\nabla_0 N_a \\, dV_0,\n$$\n对于节点索引 $a \\in \\{1,2,3,4\\}$，其中 $\\nabla_0 N_a$ 是形函数相对于参考坐标的梯度。该单元在父域上使用 $2 \\times 2$ 高斯（Gaussian）积分。假设单位厚度。\n\n实施两种非线性求解策略，用于在每个荷载步求解离散平衡方程 $\\mathbf{R}(\\mathbf{u}) = \\mathbf{f}_{\\text{int}}(\\mathbf{u}) - \\mathbf{f}_{\\text{ext}} = \\mathbf{0}$：\n\n1.  一种使用一致切线的方法，即在每次迭代时通过数值微分（精确残差的有限差分）重新计算残差的雅可比矩阵，从而在当前迭代步形成一个一致算法切线。\n\n2.  一种在每个荷载步使用割线（弦）切线的方法：在当前荷载步的第一次迭代时计算一次切线（通过同样对残差进行数值微分的方法），然后在此荷载步的剩余迭代中保持其不变。\n\n两种方法都必须使用以下形式的 Newton 更新：\n$$\n\\mathbf{K}(\\mathbf{u}_k) \\, \\Delta \\mathbf{u}_k = -\\mathbf{R}(\\mathbf{u}_k), \\quad \\mathbf{u}_{k+1} = \\mathbf{u}_k + \\Delta \\mathbf{u}_k,\n$$\n二者的区别仅在于在一个增量步内如何更新 $\\mathbf{K}$。\n\n设置几何和材料参数如下：长度 $L = 1.0$ 米，高度 $H = 0.1$ 米，杨氏模量 $E = 1.0 \\times 10^6$ 帕斯卡，泊松比 $\\nu = 0.3$。使用平面应变 Lamé 参数的标准关系式：\n$$\n\\mu = \\frac{E}{2(1+\\nu)},\n\\quad\n\\lambda = \\frac{E \\nu}{(1+\\nu)(1-2\\nu)}.\n$$\n参考构型中的节点坐标（单位：米）为\n$$\n\\mathbf{X}_1 = (0, -H/2), \\quad \\mathbf{X}_2 = (L, -H/2), \\quad \\mathbf{X}_3 = (L, H/2), \\quad \\mathbf{X}_4 = (0, H/2).\n$$\n通过完全约束节点1和4的两个位移分量来施加边界条件。将总的向下点荷载 $P$（单位：牛顿）平均施加在节点2和3的垂直方向上。使用每种非线性求解器，通过从零荷载到目标荷载的 $n_{\\text{inc}}$ 个相等增量步进行荷载步进求解。每个增量步使用基于残差的停止准则：\n$$\n\\|\\mathbf{R}\\|_2 \\le \\text{tol}_{\\text{abs}} + \\text{tol}_{\\text{rel}} \\, \\|\\mathbf{f}_{\\text{ext}}\\|_2,\n$$\n其中 $\\text{tol}_{\\text{abs}} = 10^{-6}$ 牛顿，$\\text{tol}_{\\text{rel}} = 10^{-9}$。将每个增量步的最大迭代次数限制在 $k_{\\max} = 100$。使用中心有限差分法，扰动量为 $h = 10^{-8} L$，来计算残差的数值雅可比矩阵。问题不涉及角度，不需要角度单位。在适用时，力以牛顿表示，长度以米表示，应力以帕斯卡表示。要求的输出是迭代次数，因此是无单位的。\n\n测试套件：对于下面的每一对 $(P, n_{\\text{inc}})$，计算一致切线法和割线-弦法在所有荷载增量上累积的 Newton 迭代总数。\n\n-   案例A（顺利路径）：$P = 1000.0$ 牛顿, $n_{\\text{inc}} = 10$。\n-   案例B（中等荷载）：$P = 5000.0$ 牛顿, $n_{\\text{inc}} = 20$。\n-   案例C（更大荷载，更细步进）：$P = 10000.0$ 牛顿, $n_{\\text{inc}} = 40$。\n\n要求的最终输出格式：您的程序应生成一行输出，其中包含一个逗号分隔的列表，用方括号括起来，内含六个整数，按以下顺序对应于总迭代次数：\n$$\n[\\text{iters\\_consistent\\_A}, \\text{iters\\_secant\\_A}, \\text{iters\\_consistent\\_B}, \\text{iters\\_secant\\_B}, \\text{iters\\_consistent\\_C}, \\text{iters\\_secant\\_C}].\n$$", "solution": "问题陈述经过严格验证。\n\n**步骤1：提取已知条件**\n-   **列式**：二维平面应变、单双线性四边形单元的总拉格朗日列式。\n-   **材料**：可压缩 neo-Hookean 超弹性模型，储存能量为 $W(\\mathbf{C}) = \\frac{\\mu}{2} (I_1 - 3) - \\mu \\ln J + \\frac{\\lambda}{2} (\\ln J)^2$。\n-   **运动学**：$\\mathbf{F} = \\sum_{a=1}^4 \\mathbf{x}_a \\otimes \\nabla_0 N_a$，$\\mathbf{C} = \\mathbf{F}^\\mathsf{T}\\mathbf{F}$，$J = \\det \\mathbf{F}$，$\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I})$。\n-   **本构定律**：$\\mathbf{S} = \\mu \\left(\\mathbf{I} - \\mathbf{C}^{-1}\\right) + \\lambda \\ln J \\, \\mathbf{C}^{-1}$。\n-   **内力**：$\\mathbf{f}_{\\text{int},a} = \\int_{\\Omega_0} \\mathbf{P} \\, \\nabla_0 N_a \\, dV_0$，其中 $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$。\n-   **数值积分**：$2 \\times 2$ 高斯（Gaussian）求积，单位厚度。\n-   **平衡方程**：$\\mathbf{R}(\\mathbf{u}) = \\mathbf{f}_{\\text{int}}(\\mathbf{u}) - \\mathbf{f}_{\\text{ext}} = \\mathbf{0}$。\n-   **非线性求解器**：\n    1.  **一致切线**：每次迭代时通过数值微分重新计算雅可比矩阵。\n    2.  **割线切线**：在每个荷载增量开始时计算一次雅可比矩阵，并在该增量步内保持不变。\n-   **Newton 更新**：$\\mathbf{K}(\\mathbf{u}_k) \\, \\Delta \\mathbf{u}_k = -\\mathbf{R}(\\mathbf{u}_k)$，$\\mathbf{u}_{k+1} = \\mathbf{u}_k + \\Delta \\mathbf{u}_k$。\n-   **参数**：\n    -   几何：$L = 1.0$ 米, $H = 0.1$ 米。\n    -   节点坐标：$\\mathbf{X}_1 = (0, -H/2)$, $\\mathbf{X}_2 = (L, -H/2)$, $\\mathbf{X}_3 = (L, H/2)$, $\\mathbf{X}_4 = (0, H/2)$。\n    -   材料常数：$E = 1.0 \\times 10^6$ 帕, $\\nu = 0.3$。\n    -   平面应变 Lamé 参数：$\\mu = \\frac{E}{2(1+\\nu)}$, $\\lambda = \\frac{E \\nu}{(1+\\nu)(1-2\\nu)}$。\n-   **边界条件**：节点1和4完全固定。总向下荷载 $P$ 平均施加于节点2和3。\n-   **求解器控制**：\n    -   使用 $n_{\\text{inc}}$ 个增量步进行荷载步进。\n    -   收敛准则：$\\|\\mathbf{R}\\|_2 \\le \\text{tol}_{\\text{abs}} + \\text{tol}_{\\text{rel}} \\, \\|\\mathbf{f}_{\\text{ext}}\\|_2$。\n    -   容差：$\\text{tol}_{\\text{abs}} = 10^{-6}$ N, $\\text{tol}_{\\text{rel}} = 10^{-9}$。\n    -   每个增量步的最大迭代次数：$k_{\\max} = 100$。\n    -   数值雅可比矩阵扰动：$h = 10^{-8} L$。\n-   **测试用例**：\n    -   案例 A: $P = 1000.0$ N, $n_{\\text{inc}} = 10$。\n    -   案例 B: $P = 5000.0$ N, $n_{\\text{inc}} = 20$。\n    -   案例 C: $P = 10000.0$ N, $n_{\\text{inc}} = 40$。\n\n**步骤2：使用提取的已知条件进行验证**\n对问题进行有效性评估。\n-   **科学基础**：该问题基于连续介质力学和有限元方法的基本原理。总拉格朗日列式、neo-Hookean 材料模型、虚功原理以及牛顿-拉夫逊（Newton-Raphson）方法都是计算力学中的标准课题。所给定的第二 Piola-Kirchhoff 应力 $\\mathbf{S}$ 的本构关系是通过 $\\mathbf{S} = 2 \\frac{\\partial W}{\\partial \\mathbf{C}}$ 从给定的应变能函数 $W$ 正确推导出来的。\n-   **适定的**：该问题是一个定义明确的边值问题。几何形状、材料属性、边界条件和荷载都已完全指定，允许在给定的静荷载下计算出唯一的位移场。\n-   **客观性**：问题以客观、技术性的语言陈述，并带有精确的数值和公式。它不含主观性。\n-   **其他缺陷**：问题是完整的、一致的并且计算上是可行的。它代表了非线性有限元分析中一个标准的、有一定难度练习。\n\n**步骤3：结论与行动**\n此问题是 **有效的**。将提供一个解答。\n\n### 基于原理的解答设计\n\n问题的核心是实现一个用于大变形下单元素的有限元求解器。这涉及到将内力计算为节点位移的非线性函数，并使用牛顿-拉夫逊（Newton-Raphson）迭代法求解由此产生的非线性方程组。我们将按照规定，从第一性原理构建解答。\n\n**1. 单元运动学与离散化**\n\n四节点双线性四边形单元在父域中由坐标 $(\\xi, \\eta) \\in [-1, 1] \\times [-1, 1]$ 定义。形函数为：\n$$\n\\begin{aligned}\nN_1(\\xi, \\eta) = \\frac{1}{4}(1-\\xi)(1-\\eta) \\quad & \\quad N_2(\\xi, \\eta) = \\frac{1}{4}(1+\\xi)(1-\\eta) \\\\\nN_3(\\xi, \\eta) = \\frac{1}{4}(1+\\xi)(1+\\eta) \\quad & \\quad N_4(\\xi, \\eta) = \\frac{1}{4}(1-\\xi)(1+\\eta)\n\\end{aligned}\n$$\n等参映射将参考坐标 $\\mathbf{X}$ 与父坐标 $\\boldsymbol{\\xi} = (\\xi, \\eta)$ 关联起来：$\\mathbf{X}(\\boldsymbol{\\xi}) = \\sum_{a=1}^4 N_a(\\boldsymbol{\\xi}) \\mathbf{X}_a$。此映射的雅可比矩阵为 $\\mathbf{J}_0 = \\frac{\\partial \\mathbf{X}}{\\partial \\boldsymbol{\\xi}}$。对于指定的矩形单元几何形状，此雅可比矩阵是常数：\n$$\n\\mathbf{J}_0 = \\begin{bmatrix} L/2 & 0 \\\\ 0 & H/2 \\end{bmatrix}\n$$\n形函数相对于参考坐标 $\\mathbf{X}$ 的梯度使用链式法则计算：$\\nabla_0 N_a = \\mathbf{J}_0^{-\\mathsf{T}} \\nabla_\\xi N_a$。\n\n变形梯度 $\\mathbf{F}$ 是核心的运动学量。它将一个微分线元从参考构型映射到当前构型。在离散形式中，它在每个高斯点计算如下：\n$$\n\\mathbf{F} = \\frac{\\partial \\mathbf{x}}{\\partial \\mathbf{X}} = \\sum_{a=1}^4 \\frac{\\partial N_a}{\\partial \\mathbf{X}} \\otimes \\mathbf{x}_a = \\sum_{a=1}^4 \\mathbf{x}_a \\otimes \\nabla_0 N_a\n$$\n其中 $\\mathbf{x}_a = \\mathbf{X}_a + \\mathbf{u}_a$ 是当前的节点位置。从 $\\mathbf{F}$，我们计算右柯西-格林（Cauchy-Green）变形张量 $\\mathbf{C} = \\mathbf{F}^\\mathsf{T}\\mathbf{F}$ 及其行列式 $J = \\det(\\mathbf{F})$。\n\n**2. 内力与本构定律**\n\n内力源自虚功原理。节点 $a$ 处的内力向量由下式给出：\n$$\n\\mathbf{f}_{\\text{int},a} = \\int_{\\Omega_0} \\mathbf{P}^\\mathsf{T} \\nabla_0 N_a \\, dV_0\n$$\n其中 $\\mathbf{P} = \\mathbf{F}\\mathbf{S}$ 是第一 Piola-Kirchhoff 应力张量。第二 Piola-Kirchhoff 应力张量 $\\mathbf{S}$ 由可压缩 neo-Hookean 本构定律定义：\n$$\n\\mathbf{S} = \\mu \\left(\\mathbf{I} - \\mathbf{C}^{-1}\\right) + \\lambda \\ln J \\, \\mathbf{C}^{-1}\n$$\n内力积分通过在父单元域上使用 $2 \\times 2$ 高斯（Gaussian）求积进行数值计算：\n$$\n\\mathbf{f}_{\\text{int}} = \\sum_{i=1}^{4} \\left( \\mathbf{P}^\\mathsf{T}(\\boldsymbol{\\xi}_i) \\mathbf{B}_0(\\boldsymbol{\\xi}_i) \\right) w_i \\det(\\mathbf{J}_0) t\n$$\n其中 $\\boldsymbol{\\xi}_i$ 和 $w_i$ 是高斯点和权重，$t=1$ 是厚度，$\\mathbf{B}_0$ 是形函数梯度的矩阵。单元的总内力向量 $\\mathbf{f}_{\\text{int}}$ 是一个由节点贡献组装而成的 $8 \\times 1$ 向量。\n\n**3. 使用牛顿-拉夫逊（Newton-Raphson）方法的非线性求解**\n\n目标是找到满足静态平衡方程 $\\mathbf{R}(\\mathbf{U}) = \\mathbf{f}_{\\text{int}}(\\mathbf{U}) - \\mathbf{f}_{\\text{ext}} = \\mathbf{0}$ 的位移向量 $\\mathbf{U}$。我们采用一个增量-迭代的牛顿-拉夫逊（Newton-Raphson）方案。总荷载 $\\mathbf{f}_{\\text{ext}}$ 在 $n_{\\text{inc}}$ 个相等的增量步中施加。对于每个增量，我们迭代以找到相应的位移平衡。\n\n从一个猜测值 $\\mathbf{U}_k$ 开始，计算残差 $\\mathbf{R}(\\mathbf{U}_k)$。如果它不够小，我们求解位移修正量 $\\Delta\\mathbf{U}_k$：\n$$\n\\mathbf{K}(\\mathbf{U}_k) \\Delta\\mathbf{U}_k = -\\mathbf{R}(\\mathbf{U}_k)\n$$\n其中 $\\mathbf{K} = \\frac{\\partial \\mathbf{R}}{\\partial \\mathbf{U}} = \\frac{\\partial \\mathbf{f}_{\\text{int}}}{\\partial \\mathbf{U}}$ 是切线刚度矩阵（残差的雅可比矩阵）。然后更新位移：$\\mathbf{U}_{k+1} = \\mathbf{U}_k + \\Delta\\mathbf{U}_k$。\n\n**边界条件**：节点1和4的自由度（DOFs）是固定的。方程组被划分为自由（$f$）和约束（$c$）自由度。我们求解自由自由度的简化系统：\n$$\n\\mathbf{K}_{ff} \\Delta\\mathbf{U}_f = -\\mathbf{R}_f\n$$\n收敛性检查是对自由自由度对应的残差范数 $\\|\\mathbf{R}_f\\|_2$ 进行的。\n\n**切线矩阵计算**：根据题目要求，切线刚度矩阵 $\\mathbf{K}$ 通过数值有限差分计算。$\\mathbf{K}$ 对应于自由自由度的第 $j$ 列近似为：\n$$\n\\mathbf{K}_{:,j} = \\frac{\\partial \\mathbf{R}_f}{\\partial U_j} \\approx \\frac{\\mathbf{R}_f(\\mathbf{U} + h \\mathbf{e}_j) - \\mathbf{R}_f(\\mathbf{U} - h \\mathbf{e}_j)}{2h}\n$$\n其中 $\\mathbf{e}_j$ 是第 $j$ 个自由自由度的标准基向量，而 $h$ 是一个小的扰动量。\n\n**求解器变体**：\n1.  **一致切线**：在一个荷载步内的每一次迭代 $k$ 中都重新计算 $\\mathbf{K}_{ff}$，确保在解附近具有二次收敛性。\n2.  **割线（弦）切线**：仅在每个荷载步的第一次迭代时计算 $\\mathbf{K}_{ff}$，然后在该步骤的所有后续迭代中重复使用。这降低了每次迭代的计算成本，但通常需要更多次迭代才能收敛。\n\n对于每种求解器策略和测试用例，记录在所有荷载增量上累积的总迭代次数。", "answer": "```python\nimport numpy as np\nfrom numpy.linalg import inv, det, norm\n\ndef solve():\n    \"\"\"\n    Solves a nonlinear finite element problem for a cantilever beam\n    modeled with a single 2D plane-strain bilinear quadrilateral element.\n    Compares two Newton-Raphson variants: consistent tangent and secant tangent.\n    \"\"\"\n\n    # --- Problem Parameters ---\n    L, H = 1.0, 0.1\n    E, nu = 1.0e6, 0.3\n    tol_abs, tol_rel = 1e-6, 1e-9\n    k_max = 100\n    h_pert = 1e-8 * L\n\n    # --- Material Parameters (Plane Strain) ---\n    mu = E / (2 * (1 + nu))\n    lambda_ = (E * nu) / ((1 + nu) * (1 - 2 * nu))\n\n    # --- Element Geometry and DOFs ---\n    X_nodes = np.array([\n        [0.0, -H / 2], [L, -H / 2], [L, H / 2], [0.0, H / 2]\n    ])\n    free_dofs = [2, 3, 4, 5]  # DOFs of nodes 2 (u2x, u2y) and 3 (u3x, u3y)\n    \n    # --- Gauss Quadrature ---\n    gauss_loc = 1 / np.sqrt(3)\n    gauss_points = [-gauss_loc, gauss_loc]\n    gauss_weights = [1.0, 1.0]\n\n    def compute_internal_forces(u_vec):\n        \"\"\"Computes the internal force vector for a given displacement vector.\"\"\"\n        f_int = np.zeros(8)\n        u_nodes = u_vec.reshape(4, 2)\n        x_nodes = X_nodes + u_nodes\n\n        J0 = np.array([[L / 2, 0], [0, H / 2]])\n        det_J0 = det(J0)\n        J0_inv_T = inv(J0).T\n        \n        for w_xi_idx, xi in enumerate(gauss_points):\n            w_xi = gauss_weights[w_xi_idx]\n            for w_eta_idx, eta in enumerate(gauss_points):\n                w_eta = gauss_weights[w_eta_idx]\n\n                grad_N_xi_eta = 0.25 * np.array([\n                    [-(1 - eta), -(1 - xi)],\n                    [ (1 - eta), -(1 + xi)],\n                    [ (1 + eta),  (1 + xi)],\n                    [-(1 + eta),  (1 - xi)]\n                ])\n\n                F = np.zeros((2, 2))\n                grads_N_ref = np.zeros((4, 2))\n                for a in range(4):\n                    grads_N_ref[a, :] = J0_inv_T @ grad_N_xi_eta[a]\n                    F += np.outer(x_nodes[a], grads_N_ref[a])\n\n                J = det(F)\n                if J <= 0:\n                    raise RuntimeError(f\"Element inversion (J = {J:.4f} <= 0).\")\n                \n                C = F.T @ F\n                C_inv = inv(C)\n                I = np.identity(2)\n\n                S = mu * (I - C_inv) + lambda_ * np.log(J) * C_inv\n                P = F @ S\n\n                for a in range(4):\n                    f_a = P @ grads_N_ref[a]\n                    f_int[2*a : 2*a+2] += f_a * det_J0 * w_xi * w_eta # Unit thickness t=1\n        \n        return f_int\n\n    def compute_tangent_numerically(u_vec, f_ext_vec):\n        \"\"\"Computes the tangent stiffness matrix using central finite differences.\"\"\"\n        num_free_dofs = len(free_dofs)\n        K_ff = np.zeros((num_free_dofs, num_free_dofs))\n\n        for j in range(num_free_dofs):\n            dof_idx = free_dofs[j]\n            \n            u_p, u_m = u_vec.copy(), u_vec.copy()\n            u_p[dof_idx] += h_pert\n            u_m[dof_idx] -= h_pert\n\n            f_int_p = compute_internal_forces(u_p)\n            f_int_m = compute_internal_forces(u_m)\n\n            R_p_f = (f_int_p - f_ext_vec)[free_dofs]\n            R_m_f = (f_int_m - f_ext_vec)[free_dofs]\n            \n            K_ff[:, j] = (R_p_f - R_m_f) / (2 * h_pert)\n        return K_ff\n\n    test_cases = [\n        (1000.0, 10),   # Case A\n        (5000.0, 20),   # Case B\n        (10000.0, 40),  # Case C\n    ]\n    solver_types = ['consistent', 'secant']\n    \n    results = []\n\n    for P_total, n_inc in test_cases:\n        f_ext_total = np.zeros(8)\n        f_ext_total[3] = -P_total / 2.0  # Node 2, y-dir\n        f_ext_total[5] = -P_total / 2.0  # Node 3, y-dir\n        \n        for solver_type in solver_types:\n            U = np.zeros(8)\n            total_iterations = 0\n            \n            for i in range(1, n_inc + 1):\n                f_ext_current = (i / n_inc) * f_ext_total\n                f_ext_norm = norm(f_ext_current[free_dofs])\n                \n                U_inc = U.copy()\n                K_ff = None\n\n                for k in range(1, k_max + 1):\n                    f_int = compute_internal_forces(U_inc)\n                    R = f_int - f_ext_current\n                    R_f = R[free_dofs]\n                    \n                    residual_norm = norm(R_f)\n                    stop_tol = tol_abs + tol_rel * f_ext_norm\n\n                    if residual_norm <= stop_tol:\n                        total_iterations += k - 1\n                        break\n                    \n                    if k == k_max:\n                        raise RuntimeError(f\"Solver did not converge for P={P_total}, inc={i}, type={solver_type}\")\n\n                    if solver_type == 'consistent' or (solver_type == 'secant' and k == 1):\n                        K_ff = compute_tangent_numerically(U_inc, f_ext_current)\n                    \n                    delta_U_f = np.linalg.solve(K_ff, -R_f)\n                    U_inc[free_dofs] += delta_U_f\n                \n                U = U_inc\n            \n            results.append(total_iterations)\n    \n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2607090"}]}