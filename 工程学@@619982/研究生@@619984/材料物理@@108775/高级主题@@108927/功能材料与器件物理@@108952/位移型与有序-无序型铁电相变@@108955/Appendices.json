{"hands_on_practices": [{"introduction": "朗道理论为相变提供了强大的唯象描述。本练习将通过一个基础性的推导，来实践朗道-金兹堡-德文郡（LGD）理论，即计算二级相变点处比热容$c$的跃变。这个实践活动旨在将LGD自由能$f(T,P)$中的抽象系数与一个可测量的宏观热力学量联系起来，从而加深对连续位移型铁电相变的理解[@problem_id:2815634]。", "problem": "一个中心对称的顺电晶体在临界温度 $T_{c}$ 处，经历一次连续位移型铁电相变，转变为极性相。在 $T_{c}$ 附近，对于一个空间均匀的单畴样品，在零外电场下，其 Landau–Ginzburg–Devonshire (LGD) Helmholtz自由能密度可由以下模型描述：\n$$\nf(T,P)=f_{b}(T)+\\frac{a}{2}\\bigl(T-T_{0}\\bigr)P^{2}+\\frac{b}{4}P^{4},\n$$\n其中，$P$ 是标量极化序参量，$a>0$ 和 $b>0$ 是临界区内与温度无关的系数，$T_{0}$ 是平均场临界温度，$f_{b}(T)$ 包含了不依赖于 $P$ 的光滑背景贡献。假设这是一个位移型相变，因此 $T_{c}=T_{0}$，并且在临界区内， $P$ 的高阶项和空间梯度可以忽略不计。\n\n根据以下原理：在固定温度下，平衡态使Helmholtz自由能最小化；以及根据标准热力学关系，热容密度可以通过对平衡Helmholtz自由能密度对温度求导得到。请基于这些原理，确定由极化序参量引起的在 $T_{c}$ 处的体积热容密度的异常跳变。将此跳变定义为\n$$\n\\Delta c \\equiv \\lim_{T\\to T_{c}^{-}}\\delta c(T)-\\lim_{T\\to T_{c}^{+}}\\delta c(T),\n$$\n其中 $\\delta c(T)$ 是 $f(T,P)$ 中依赖于 $P$ 的部分（即减去了光滑背景 $f_{b}(T)$ 后）对热容密度的贡献。请用 $a$、$b$ 和 $T_{c}$ 将你的最终答案表示为一个完全简化的解析表达式。最终答案必须是单个闭合形式表达式。不要报告任何来自 $f_{b}(T)$ 的背景贡献，也不要假设系数有任何具体的数值。", "solution": "该问题陈述具有科学依据，提法恰当且客观。这是Landau二阶相变理论中的一个标准问题。所有必要信息均已提供，且假设与已确立的物理原理一致。因此，我们开始求解。\n\n在临界温度 $T_{c}$ 附近，Helmholtz自由能密度 $f$ 由下式给出\n$$\nf(T,P) = f_{b}(T) + \\frac{a}{2}(T-T_{c})P^{2} + \\frac{b}{4}P^{4}\n$$\n其中，问题指明 $T_{c} = T_{0}$，且常数 $a$ 和 $b$ 均为正。$f_{b}(T)$ 项是与序参量 $P$ 无关的背景贡献，因此对热容的异常跳变没有贡献。我们关注的是自由能中依赖于 $P$ 的部分，我们将其记为 $\\delta f(T,P)$：\n$$\n\\delta f(T,P) = \\frac{a}{2}(T-T_{c})P^{2} + \\frac{b}{4}P^{4}\n$$\n当自由能密度在固定温度 $T$ 下相对于序参量 $P$ 达到最小值时，系统处于热力学平衡状态。这个条件表示为 $\\frac{\\partial f}{\\partial P} = 0$。由于 $f_{b}(T)$ 与 $P$ 无关，这等价于 $\\frac{\\partial (\\delta f)}{\\partial P} = 0$。\n$$\n\\frac{\\partial (\\delta f)}{\\partial P} = a(T-T_{c})P + bP^{3} = P [a(T-T_{c}) + bP^{2}] = 0\n$$\n该方程对于平衡极化强度 $P_{eq}$ 有两个可能的解：\n1. $P_{eq} = 0$\n2. $P_{eq}^{2} = -\\frac{a}{b}(T-T_{c}) = \\frac{a}{b}(T_{c}-T)$\n\n为了确定哪个解对应于稳定平衡（自由能的极小值），我们必须检查二阶导数 $\\frac{\\partial^{2} f}{\\partial P^{2}}$ 的符号。\n$$\n\\frac{\\partial^{2} f}{\\partial P^{2}} = a(T-T_{c}) + 3bP^{2}\n$$\n\n情况1：高温（顺电）相，$T > T_{c}$。\n在此区域，$T-T_{c} > 0$。方程 $P^{2} = \\frac{a}{b}(T_{c}-T)$ 对于 $P \\neq 0$ 没有实数解。唯一可能的平衡态是 $P_{eq} = 0$。\n在 $P_{eq}=0$ 处，二阶导数为 $\\frac{\\partial^{2} f}{\\partial P^{2}} = a(T-T_{c}) > 0$。由于二阶导数为正，$P_{eq}=0$ 代表一个稳定极小值。\n因此，对于 $T > T_{c}$，平衡极化强度为 $P_{eq}(T) = 0$。\n\n情况2：低温（铁电）相，$T < T_{c}$。\n在此区域，$T-T_{c} < 0$。\n对于解 $P_{eq}=0$，二阶导数为 $\\frac{\\partial^{2} f}{\\partial P^{2}} = a(T-T_{c}) < 0$。这对应一个局域极大值，所以零极化状态是不稳定的。\n对于解 $P_{eq}^{2} = \\frac{a}{b}(T_{c}-T)$，二阶导数为：\n$$\n\\frac{\\partial^{2} f}{\\partial P^{2}} = a(T-T_{c}) + 3b \\left( \\frac{a}{b}(T_{c}-T) \\right) = a(T-T_{c}) - 3a(T-T_{c}) = -2a(T-T_{c}) = 2a(T_{c}-T)\n$$\n因为 $a>0$ 且 $T < T_{c}$，我们有 $2a(T_{c}-T) > 0$。此解对应一个稳定极小值。\n因此，对于 $T < T_{c}$，平衡态具有自发极化，由 $P_{eq}^{2}(T) = \\frac{a}{b}(T_{c}-T)$ 给出。\n\n接下来，我们求平衡自由能密度的贡献，$\\delta f_{eq}(T) = \\delta f(T, P_{eq}(T))$。\n对于 $T > T_{c}$，$P_{eq}(T) = 0$，所以 $\\delta f_{eq}(T) = 0$。\n对于 $T \\leq T_{c}$，我们将 $P_{eq}^{2}(T) = \\frac{a}{b}(T_{c}-T)$ 代入 $\\delta f$ 的表达式：\n$$\n\\delta f_{eq}(T) = \\frac{a}{2}(T-T_{c}) \\left(\\frac{a}{b}(T_{c}-T)\\right) + \\frac{b}{4} \\left(\\frac{a}{b}(T_{c}-T)\\right)^{2}\n$$\n$$\n\\delta f_{eq}(T) = -\\frac{a^{2}}{2b}(T_{c}-T)^{2} + \\frac{b}{4}\\frac{a^{2}}{b^{2}}(T_{c}-T)^{2} = -\\frac{a^{2}}{2b}(T_{c}-T)^{2} + \\frac{a^{2}}{4b}(T_{c}-T)^{2}\n$$\n$$\n\\delta f_{eq}(T) = -\\frac{a^{2}}{4b}(T_{c}-T)^{2}\n$$\n熵密度的异常贡献 $\\delta s(T)$ 可由热力学关系 $s = -\\frac{\\partial f}{\\partial T}$ 求得。我们将其应用于平衡自由能贡献：$\\delta s(T) = -\\frac{d(\\delta f_{eq}(T))}{dT}$。\n对于 $T > T_{c}$，$\\delta f_{eq}(T) = 0$，所以 $\\delta s(T) = 0$。\n对于 $T \\leq T_{c}$：\n$$\n\\delta s(T) = -\\frac{d}{dT} \\left( -\\frac{a^{2}}{4b}(T_{c}-T)^{2} \\right) = \\frac{a^{2}}{4b} \\cdot 2(T_{c}-T) \\cdot (-1) = -\\frac{a^{2}}{2b}(T_{c}-T) = \\frac{a^{2}}{2b}(T-T_{c})\n$$\n体积热容的异常贡献 $\\delta c(T)$ 由 $\\delta c(T) = T \\frac{d(\\delta s(T))}{dT}$ 给出。\n对于 $T > T_{c}$，$\\delta s(T) = 0$，所以 $\\delta c(T) = 0$。\n对于 $T < T_{c}$：\n$$\n\\delta c(T) = T \\frac{d}{dT} \\left( \\frac{a^{2}}{2b}(T-T_{c}) \\right) = T \\left( \\frac{a^{2}}{2b} \\right)\n$$\n问题将热容的跳变定义为 $\\Delta c \\equiv \\lim_{T\\to T_{c}^{-}}\\delta c(T)-\\lim_{T\\to T_{c}^{+}}\\delta c(T)$。\n我们计算这两个极限：\n$T$ 从 $T_{c}$ 上方趋近的极限为：\n$$\n\\lim_{T\\to T_{c}^{+}}\\delta c(T) = \\lim_{T\\to T_{c}^{+}} (0) = 0\n$$\n$T$ 从 $T_{c}$ 下方趋近的极限为：\n$$\n\\lim_{T\\to T_{c}^{-}}\\delta c(T) = \\lim_{T\\to T_{c}^{-}} \\left( T \\frac{a^{2}}{2b} \\right) = T_{c} \\frac{a^{2}}{2b}\n$$\n最后，在临界温度下热容密度的跳变为：\n$$\n\\Delta c = T_{c} \\frac{a^{2}}{2b} - 0 = \\frac{a^{2}T_{c}}{2b}\n$$\n这就是用给定系数 $a$、$b$ 和临界温度 $T_{c}$ 表示的所求表达式。它代表了在该平均场模型下，二阶相变所特有的热容不连续性。", "answer": "$$\n\\boxed{\\frac{a^{2}T_{c}}{2b}}\n$$", "id": "2815634"}, {"introduction": "从宏观唯象理论转向微观物理图像，现代第一性原理计算能够揭示离子所处的势能面貌。本练习要求根据给出的两种钙钛矿铁电体（BaTiO$_3$和KNbO$_3$）的假设性DFT计算数据，通过比较势垒高度$E_b$与相变点处的热能$k_{\\mathrm{B}}T_C$来判断相变的类型。这个实践将理论模型与计算结果联系起来，帮助你掌握区分位移型和有序-无序型相变特征的关键物理判据[@problem_id:2815581]。", "problem": "对于两种钙钛矿铁电体——钛酸钡 (BaTiO$_3$) 和铌酸钾 (KNbO$_3$)，通过密度泛函理论 (DFT) 获得了沿对称性匹配的极性软模坐标 $Q$ 的一维能量图景。坐标 $Q$ 经过质量加权和归一化，使得小位移对应于 $Q=0$ 处立方参考结构附近的谐振区。DFT 总能量 $E(Q)$ 是相对于立方鞍点 $E(0)=0$ 报告的。对于 BaTiO$_3$，$E(Q)$ 呈现一个浅双势阱，极小值点位于 $Q=\\pm Q_0$，深度为 $E_b^{\\mathrm{BTO}}\\approx 15\\,\\mathrm{meV}$/化学式单位，在 $Q=0$ 处有一个小幅度的负曲率（一个不稳定的软模），其绝对值比 $Q=\\pm Q_0$ 处的曲率小一个数量级。对于 KNbO$_3$，$E(Q)$ 显示一个更深的双势阱，极小值点位于 $Q=\\pm Q_0$，深度为 $E_b^{\\mathrm{KNO}}\\approx 90\\,\\mathrm{meV}$/化学式单位，在 $Q=0$ 处有更强的负曲率，并且在极小值点处有更大的曲率。立方相到四方相的居里温度分别为 $T_C^{\\mathrm{BTO}}\\approx 393\\,\\mathrm{K}$ 和 $T_C^{\\mathrm{KNO}}\\approx 708\\,\\mathrm{K}$。使用玻尔兹曼因子和玻尔兹曼常数 $k_{\\mathrm{B}}$，比较势垒高度 $E_b$ 与 $T_C$ 附近的热能 $k_{\\mathrm{B}} T$。依据以下基本原理：(i) 在位移型相变中，随着温度接近 $T_C$，一个集体软声子模的频率会软化至零，其动力学主要由围绕单一平均位置的谐振/非谐振动主导；(ii) 在有序-无序型相变中，原子处于由势垒隔开的局域偏离中心的位置，其动力学主要由在准简并极小值之间的热激活跳跃主导，并表现为中心峰或强准弹性散射的出现；(iii) 对于双势阱，热力学上越过高度为 $E_b$ 的势垒的概率与 $\\exp(-E_b/k_{\\mathrm{B}}T)$ 成正比，并且在 $T_C$ 附近的相变特性受到比率 $E_b/(k_{\\mathrm{B}}T_C)$ 的影响。\n\n哪个选项最能准确地推断出 BaTiO$_3$ 和 KNbO$_3$ 在各自 $T_C$ 附近的主导特性，以及在非弹性散射中可以预期的相应动力学特征信号？\n\nA. 在 $T_C$ 附近，BaTiO$_3$ 主要表现为位移型，而 KNbO$_3$ 更偏向有序-无序型：因为 $E_b^{\\mathrm{BTO}}\\ll k_{\\mathrm{B}}T_C^{\\mathrm{BTO}}$ 但 $E_b^{\\mathrm{KNO}}\\gtrsim k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}$，BaTiO$_3$ 表现出一个界定清晰的软横向光学声子，其频率随温度强烈软化且线宽相对较窄，而 KNbO$_3$ 则由于在偏离中心的状态之间跳跃而表现出强烈的准弹性（中心峰）散射和相干性较差的软模行为。\n\nB. 在 $T_C$ 附近，BaTiO$_3$ 和 KNbO$_3$ 都是纯粹的位移型，因为 $Q=0$ 处的负曲率表明存在谐振不稳定性；两者都应该只显示一个尖锐的软模声子，而没有任何中心峰。\n\nC. 在 $T_C$ 附近，BaTiO$_3$ 和 KNbO$_3$ 都是有序-无序型，因为任何双势阱的存在都意味着存在跳跃；两者都不应表现出明显的声子软化，只应表现出弛豫动力学。\n\nD. 在所有温度下，BaTiO$_3$ 都比 KNbO$_3$ 更具有有序-无序特性，因为它的势垒更小；因此，BaTiO$_3$ 应该比 KNbO$_3$ 显示出更强的中心峰。\n\nE. KNbO$_3$ 是位移型，而 BaTiO$_3$ 是有序-无序型，因为 KNbO$_3$ 极小值点处更大的曲率意味着更强的谐振性，从而表现为位移型行为，而与势垒高度无关。", "solution": "问题陈述已经过严格验证，被认为是有效的。它在科学上植根于固态物理学中关于铁电相变的原理，提法恰当，数据充分且一致，并经过客观表述。因此，我们可以着手求解。\n\n该问题要求确定钛酸钡 (BaTiO$_3$) 和铌酸钾 (KNbO$_3$) 在其各自的居里温度 $T_C$ 附近的铁电相变的主导特性——位移型或有序-无序型。所提供的定义为这种分类建立了一个明确的标准，该标准基于双势阱中的能垒高度 $E_b$ 与可用热能 $k_{\\mathrm{B}}T_C$ 的比值。\n\n根据所提供的基本原理：\n(i) 位移型相变的特征是围绕单一平均位置的集体振动，表现为软声子模。当势垒与热能相比可以忽略不计时，预计会出现这种行为，从而使系统能够轻易地在 $Q=0$ 附近区域进行采样。\n(ii) 有序-无序型相变的特征是原子局域在不同的势阱中，并在它们之间进行热激活跳跃，表现为准弹性（中心峰）散射。当势垒足够大以限制系统时，即 $E_b \\gtrsim k_{\\mathrm{B}}T$ 时，会发生这种情况。\n\n我们必须计算每种材料的热能 $k_{\\mathrm{B}}T_C$，并将其与给定的势垒高度 $E_b$进行比较。玻尔兹曼常数为 $k_{\\mathrm{B}} \\approx 8.617 \\times 10^{-5} \\, \\mathrm{eV} \\cdot \\mathrm{K}^{-1}$，这等效于 $k_{\\mathrm{B}} \\approx 0.08617 \\, \\mathrm{meV} \\cdot \\mathrm{K}^{-1}$。\n\n**对 BaTiO$_3$ (BTO) 的分析：**\n给定参数为 $T_C^{\\mathrm{BTO}} \\approx 393\\,\\mathrm{K}$ 和 $E_b^{\\mathrm{BTO}} \\approx 15\\,\\mathrm{meV}$。\n居里温度下的热能为：\n$$k_{\\mathrm{B}}T_C^{\\mathrm{BTO}} \\approx (0.08617 \\, \\mathrm{meV} \\cdot \\mathrm{K}^{-1}) \\times (393\\,\\mathrm{K}) \\approx 33.87\\,\\mathrm{meV}$$\n我们将势垒高度与该热能进行比较：\n$$E_b^{\\mathrm{BTO}} \\approx 15\\,\\mathrm{meV} < 33.87\\,\\mathrm{meV} \\approx k_{\\mathrm{B}}T_C^{\\mathrm{BTO}}$$\n该比率为 $\\frac{E_b^{\\mathrm{BTO}}}{k_{\\mathrm{B}}T_C^{\\mathrm{BTO}}} \\approx \\frac{15}{33.87} \\approx 0.44$。\n由于在相变温度下能垒远小于热能，离子并未被强局域在势阱中。动力学并非由跳跃主导。相反，其行为更像一个高度非谐的振子，这是主要是位移型相变的特征。预期的实验特征信号是一个软化的光学声子模。\n\n**对 KNbO$_3$ (KNO) 的分析：**\n给定参数为 $T_C^{\\mathrm{KNO}} \\approx 708\\,\\mathrm{K}$ 和 $E_b^{\\mathrm{KNO}} \\approx 90\\,\\mathrm{meV}$。\n居里温度下的热能为：\n$$k_{\\mathrm{B}}T_C^{\\mathrm{KNO}} \\approx (0.08617 \\, \\mathrm{meV} \\cdot \\mathrm{K}^{-1}) \\times (708\\,\\mathrm{K}) \\approx 61.01\\,\\mathrm{meV}$$\n我们将势垒高度与该热能进行比较：\n$$E_b^{\\mathrm{KNO}} \\approx 90\\,\\mathrm{meV} > 61.01\\,\\mathrm{meV} \\approx k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}$$\n该比率为 $\\frac{E_b^{\\mathrm{KNO}}}{k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}} \\approx \\frac{90}{61.01} \\approx 1.48$。\n在这里，能垒显著大于相变温度下的热能。这表明离子被很好地局域在偏离中心的势能极小值点。向顺电相转变的主导动力学过程是越过势垒的热激活跳跃。这对应于一个主要是有序-无序型的相变。预期的实验特征信号是强准弹性散射，即中心峰。\n\n基于这些结论，我们评估每个选项。\n\n**A. 在 $T_C$ 附近，BaTiO$_3$ 主要表现为位移型，而 KNbO$_3$ 更偏向有序-无序型：因为 $E_b^{\\mathrm{BTO}}\\ll k_{\\mathrm{B}}T_C^{\\mathrm{BTO}}$ 但 $E_b^{\\mathrm{KNO}}\\gtrsim k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}$，BaTiO$_3$ 表现出一个界定清晰的软横向光学声子，其频率随温度强烈软化且线宽相对较窄，而 KNbO$_3$ 则由于在偏离中心的状态之间跳跃而表现出强烈的准弹性（中心峰）散射和相干性较差的软模行为。**\n该选项正确地指出了 BaTiO$_3$ 主要为位移型，因为 $E_b^{\\mathrm{BTO}}$ 小于 $k_{\\mathrm{B}}T_C^{\\mathrm{BTO}}$ (使用 $\\ll$ 是一个定性陈述，但不等式成立)。它正确地指出了 KNbO$_3$ 更偏向有序-无序型，因为 $E_b^{\\mathrm{KNO}}$ 大于 $k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}$。对相应动力学特征信号的描述——BaTiO$_3$ 的声子软化和 KNbO$_3$ 的中心峰——分别与位移型和有序-无序型相变的物理学相符。其推理和结论完全得到我们分析的支持。\n**结论：正确**\n\n**B. 在 $T_C$ 附近，BaTiO$_3$ 和 KNbO$_3$ 都是纯粹的位移型，因为 $Q=0$ 处的负曲率表明存在谐振不稳定性；两者都应该只显示一个尖锐的软模声子，而没有任何中心峰。**\n这种推理是有缺陷的。$Q=0$ 处的负曲率表明存在一个不稳定的模式，这是相变的必要条件，但整个势阱的形状，特别是势垒高度 $E_b$ 相对于 $k_{\\mathrm{B}}T_C$ 的值，决定了相变的特性。它错误地忽视了势垒的重要性，并将 KNbO$_3$ 归类为纯位移型，这与我们发现的 $E_b^{\\mathrm{KNO}} > k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}$ 相矛盾。\n**结论：错误**\n\n**C. 在 $T_C$ 附近，BaTiO$_3$ 和 KNbO$_3$ 都是有序-无序型，因为任何双势阱的存在都意味着存在跳跃；两者都不应表现出明显的声子软化，只应表现出弛豫动力学。**\n这种推理同样有缺陷。仅仅存在双势阱并不足以决定其为有序-无序特性。如果势垒与热能相比很小，如 BaTiO$_3$ ($E_b^{\\mathrm{BTO}} < k_{\\mathrm{B}}T_C^{\\mathrm{BTO}}$)，跳跃就不是主导机制。系统更像一个单一且高度非谐的振子。该选项错误地将 BaTiO$_3$ 归类为有序-无序型。\n**结论：错误**\n\n**D. 在所有温度下，BaTiO$_3$ 都比 KNbO$_3$ 更具有有序-无序特性，因为它的势垒更小；因此，BaTiO$_3$ 应该比 KNbO$_3$ 显示出更强的中心峰。**\n这个前提根本上是错误的。更显著的有序-无序特性与*更大*的势垒（相对于热能）相关，这促进了局域化和跳跃。由于 $E_b^{\\mathrm{KNO}}/(k_{\\mathrm{B}}T_C^{\\mathrm{KNO}}) > E_b^{\\mathrm{BTO}}/(k_{\\mathrm{B}}T_C^{\\mathrm{BTO}})$，KNbO$_3$ 比 BaTiO$_3$ 更具有有序-无序特性。因此结论是相反的。\n**结论：错误**\n\n**E. KNbO$_3$ 是位移型，而 BaTiO$_3$ 是有序-无序型，因为 KNbO$_3$ 极小值点处更大的曲率意味着更强的谐振性，从而表现为位移型行为，而与势垒高度无关。**\n这个选项颠倒了两种材料的分类。极小值点的曲率与低温铁电态*内部*的声子频率有关，而与相变本身的机制无关。决定相变特性的关键因素是分隔势阱的势垒，而该选项明确且错误地建议忽略这一点（“而与势垒高度无关”）。\n**结论：错误**", "answer": "$$\\boxed{A}$$", "id": "2815581"}, {"introduction": "静态的势能面貌固然重要，但原子在有限温度下的真实运动，即动力学行为，为我们区分相变类型提供了最直接的证据。本计算练习模拟了一项真实的研究任务：分析来自*从头算*分子动力学（AIMD）的模拟数据。通过处理代表原子位移的时间序列数据$u(t)$，你将学习如何从概率分布、自相关函数和功率谱等多个维度来判断相变动力学是更接近位移型还是有序-无序型[@problem_id:2815586]。", "problem": "您必须编写一个完整、可运行的程序，该程序实现一个基于原理、受第一性原理启发的计算协议，以判断钛酸钡 (BaTiO$_3$) 从立方相到四方相转变过程中观察到的动力学更接近位移型机制还是有序-无序机制。该判断基于局域极化模（钛离子的偏心坐标）的时间序列轨迹，这些轨迹模拟了第一性原理从头算分子动力学的片段。程序将实现该协议，生成一组代表不同物理上合理情景的合成轨迹，使用相同的协议分析每个轨迹，并将每种情况分类为有序-无序 ($1$) 或位移型 ($0$)。最终输出必须是包含一个 Python 整数列表的单行。所有量均为无量纲，因此不需要进行物理单位转换。\n\n该协议必须基于以下基本原理：\n- 局域软模坐标 $u(t)$ 是沿四方轴的离子偏心运动的粗粒化表示，并且是该相变的主要序参量。在位移型情景中，高对称相附近的自由能形貌近似为谐波的，临界行为与一个具有欠阻尼振荡动力学的软横向光学声子相关联。在有序-无序情景中，自由能形貌是多阱的，动力学由准稳定偏心位置之间的热激活跳跃主导。\n- 时间自相关函数 $C(\\tau) = \\langle u(t) u(t+\\tau) \\rangle$ 及其傅里叶变换 $S(\\omega) = \\int_{-\\infty}^{\\infty} \\mathrm{d}\\tau \\, e^{i \\omega \\tau} C(\\tau)$（功率谱密度）提供了一个动力学特征：一个尖锐的有限频率峰（软声子）表示位移型行为，而一个主导的零频（中心）峰表示有序-无序的弛豫动力学。\n- 平衡分布 $P(u)$ 揭示了平均力势 $W(u) = -\\ln P(u)$：单峰的 $P(u)$ 与单阱的位移型形貌一致，而双峰或多峰的 $P(u)$ 表明存在多个与对称性相关的势阱，这是有序-无序的特征。\n\n您必须实现以下步骤：\n1) 对于在均匀时间步长 $\\Delta t$ 采样的给定标量时间序列 $\\{u_n\\}_{n=0}^{N-1}$，使用平滑估计器估计概率密度 $P(u)$，并确定统计上显著的模（峰）的数量。此操作必须对噪声和有限采样具有鲁棒性。\n2) 对于整数延迟 $k$ 计算归一化自相关函数 $\\tilde{C}(k) = C(k)/C(0)$，使用一致的离散时间估计器，其中 $C(k) = \\frac{1}{N-k} \\sum_{n=0}^{N-k-1} u_n u_{n+k}$。确定 $\\tilde{C}(k)$ 是振荡的（多次过零）还是纯弛豫的（无过零）。\n3) 从同一时间序列估计的功率谱密度 $S(f)$（可使用任何一致的无偏估计器）计算一个低频中心峰比率，定义为\n$$\nR_{\\mathrm{low}} = \\frac{\\langle S(f) \\rangle_{0 \\le f \\le f_0}}{\\max_{f \\ge f_1} S(f)} ,\n$$\n其中有两个非零频率截止值 $f_0$ 和 $f_1$ 满足 $0 < f_0 < f_1 \\le 1/(2\\Delta t)$，用以将中心峰与任何有限频率的软模峰分离开。\n\n您必须将这些诊断方法组合成一个与物理预期一致的二元分类规则：\n- 如果 $P(u)$ 是双峰或多峰的（两个或更多个鲁棒的峰），则分类为有序-无序 ($1$)。\n- 否则，如果 $P(u)$ 是单峰的，但动力学表现出主导的中心峰（具有较大的 $R_{\\mathrm{low}}$）和非振荡的自相关，则分类为有序-无序 ($1$)。\n- 否则分类为位移型 ($0$)。\n\n为使任务自包含且可测试，不要读取外部数据。相反，使用以下参数化的随机过程生成合成轨迹，以模拟位移型和有序-无序情景的粗粒化物理过程：\n\nA) 类位移型的振荡动力学（软声子代理）。生成一个平稳的、零均值的二阶自回归过程，\n$$\nu_n = \\phi_1 \\, u_{n-1} + \\phi_2 \\, u_{n-2} + \\varepsilon_n ,\n$$\n其中 $\\varepsilon_n \\sim \\mathcal{N}(0,\\sigma^2)$ 是独立同分布的高斯新息，系数的选择旨在通过共轭复数极点 $r e^{\\pm i \\theta}$ 产生欠阻尼振荡自相关，即\n$$\n\\phi_1 = 2 r \\cos \\theta, \\quad \\phi_2 = - r^2 ,\n$$\n其中 $0 < r < 1$ 且 $0 < \\theta < \\pi$。这里 $r$ 控制阻尼，$\\theta$ 控制离散时间中的振荡频率。这是由热噪声驱动的阻尼谐波软模的离散时间代理。\n\nB) 类有序-无序的跳跃动力学（带阱内涨落的电报过程）。生成一个对称双态马尔可夫链 $s_n \\in \\{-1, +1\\}$，每个时间步的切换概率为 $p_{\\mathrm{switch}}$。坐标为\n$$\nu_n = u_0 \\, s_n + y_n ,\n$$\n其中阱内涨落 $y_n$ 遵循一个相关过程，例如一阶自回归过程，\n$$\ny_n = \\alpha \\, y_{n-1} + \\eta_n , \\quad \\eta_n \\sim \\mathcal{N}(0,\\sigma^2) ,\n$$\n其中 $|\\alpha| < 1$。\n\nC) 相变点以上的类位移型过阻尼弛豫动力学。生成一个零均值的一阶自回归过程，\n$$\nu_n = \\varphi \\, u_{n-1} + \\varepsilon_n , \\quad \\varepsilon_n \\sim \\mathcal{N}(0,\\sigma^2) ,\n$$\n其中 $|\\varphi| < 1$，它产生单峰分布和无振荡的纯弛豫自相关。\n\n使用固定的随机数生成器种子以确保可复现性。对所有情况使用共同的轨迹长度 $N$ 和采样间隔 $\\Delta t$。所有量均为无量纲。\n\n测试套件。您的程序必须实现该协议并将其应用于以下五个测试用例，每个用例由 $(\\text{类型}, \\text{参数})$ 定义。在所有情况下均使用 $N = 4096$ 个样本和 $\\Delta t = 1$。\n- 案例1（类位移型振荡）：类型 A，参数为 $r = 0.98$, $\\theta = 0.8$, $\\sigma = 0.5$。\n- 案例2（类有序-无序型，稀有跳跃）：类型 B，参数为 $u_0 = 1.0$, $p_{\\mathrm{switch}} = 0.001$, $\\alpha = 0.95$, $\\sigma = 0.05$。\n- 案例3（类有序-无序型，接近交叉区域，具有浅势阱和更快的跳跃）：类型 B，参数为 $u_0 = 0.4$, $p_{\\mathrm{switch}} = 0.01$, $\\alpha = 0.90$, $\\sigma = 0.10$。\n- 案例4（相变点以上的类位移型弛豫）：类型 C，参数为 $\\varphi = 0.5$, $\\sigma = 0.5$。\n- 案例5（类有序-无序型，中等跳跃）：类型 B，参数为 $u_0 = 0.8$, $p_{\\mathrm{switch}} = 0.02$, $\\alpha = 0.95$, $\\sigma = 0.05$。\n\n对估计器和决策阈值的要求：\n- 对 $P(u)$ 使用平滑的密度估计器和鲁棒的寻峰标准，以避免将噪声涨落计数为峰。在您的代码中记录带宽或平滑度的选择以及相对显著性阈值。\n- 在估计 $S(f)$ 时，确保足够的频率分辨率并通过分段平均来保证鲁棒性。选择 $f_0$ 和 $f_1$ 使得 $0 < f_0 < f_1 \\le 1/(2\\Delta t)$；例如，任何能够清晰区分极低频内容和有限频率峰的值都是可接受的，只要在所有案例中保持一致使用。\n- 为 $R_{\\mathrm{low}}$ 设置一个保守的决策阈值，使得单峰的、纯弛豫的类位移型动力学（案例4）不会被错误分类为有序-无序，而接近交叉区域的有序-无序（案例3）即使 $P(u)$ 看起来是单峰的也能被识别出来。在解决方案中证明您的阈值是合理的。\n- 对所有测试用例使用相同、固定的阈值和分析参数。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含五个测试用例的结果，形式为一个以逗号分隔的Python整数列表，按案例1到5的顺序排列，其中 $1$ 表示类有序-无序型，$0$ 表示类位移型。例如，输出必须类似于\n\"[r1,r2,r3,r4,r5]\"\n不含空格也无附加文本。\n\n不提供用户输入；您的程序在给定固定随机种子的情况下必须是完全自包含和确定性的。", "solution": "我们从物理图像出发：钛酸钡中铁电性的主要序参量是一个局域极化模 $u(t)$，代表钛离子沿四方轴的偏心运动。在位移型相变中，高温相由一个单阱势描述，其中一个软横向光学声子的频率在接近相变点时降低。在相变点附近，$u(t)$ 的动力学是欠阻尼和振荡的。在有序-无序相变中，有效势是多阱的，具有与对称性相关的多个偏心位置，动力学由势阱之间的热激活跳跃主导，导致缓慢的弛豫行为和主导的零频响应。\n\n根据线性响应理论，功率谱密度 $S(\\omega)$ 是自相关函数 $C(\\tau) = \\langle u(t) u(t+\\tau) \\rangle$ 的傅里叶变换，即\n$$\nS(\\omega) = \\int_{-\\infty}^{\\infty} \\mathrm{d}\\tau \\, e^{i \\omega \\tau} C(\\tau) .\n$$\n一个阻尼谐振子（位移型情景）在有限频率处（软模频率）产生一个类洛伦兹峰，而一个弛豫跳跃过程（有序-无序情景）在 $\\omega \\approx 0$ 处产生一个中心峰。平衡分布 $P(u)$ 与平均力势 $W(u) = -\\ln P(u)$ 相关；$P(u)$ 中的多个峰表示多个势阱，这与有序-无序情景一致。\n\n算法设计：\n1) 分布的模态。我们使用平滑的核密度估计器 $\\hat{P}(u)$ 估计 $P(u)$，并通过寻找具有鲁棒显著性阈值的局部最大值来确定模态数。多个峰（两个或更多）表示有序-无序。这一步通过 $W(u) = -\\ln \\hat{P}(u)$ 反映了底层的自由能分布。\n2) 自相关的振荡。我们计算离散自相关\n$$\nC(k) = \\frac{1}{N-k} \\sum_{n=0}^{N-k-1} u_n u_{n+k} ,\n$$\n归一化 $\\tilde{C}(k) = C(k)/C(0)$，并计算 $k \\ge 1$ 时 $\\tilde{C}(k)$ 的过零次数。多次过零是欠阻尼振荡（位移型）的典型特征，而纯弛豫动力学则表现为没有过零的非振荡衰减。\n3) 中心峰比率。使用一致的谱估计器估计 $S(f)$，我们计算\n$$\nR_{\\mathrm{low}} = \\frac{\\langle S(f) \\rangle_{0 \\le f \\le f_0}}{\\max_{f \\ge f_1} S(f)} ,\n$$\n其中两个频率阈值 $f_0$ 和 $f_1$ 的选择满足 $0 < f_0 < f_1 \\le 1/(2 \\Delta t)$。一个大的 $R_{\\mathrm{low}}$ 值表明零频（中心）分量相比任何有限频率峰都占主导地位，这是有序-无序动力学的特征。\n\n决策规则：\n- 如果估计的密度至少有两个鲁棒的峰，则返回有序-无序 ($1$)。\n- 否则，如果密度是单峰的但 $R_{\\mathrm{low}}$ 足够大且自相关最多只有少量过零（表明非振荡弛豫），则返回有序-无序 ($1$)。\n- 否则返回位移型 ($0$)。\n\n综合测试生成：\n为避免依赖外部数据，同时保留核心物理特征，我们按如下方式生成 $N = 4096$ 和 $\\Delta t = 1$ 的合成轨迹 $\\{u_n\\}$。\n\nA) 类位移型的振荡过程。我们构建一个具有共轭复数根 $r e^{\\pm i \\theta}$ 的二阶自回归过程：\n$$\nu_n = \\phi_1 u_{n-1} + \\phi_2 u_{n-2} + \\varepsilon_n, \\quad \\varepsilon_n \\sim \\mathcal{N}(0, \\sigma^2), \\quad \\phi_1 = 2 r \\cos \\theta, \\ \\phi_2 = -r^2 ,\n$$\n其中 $0 < r < 1$ 且 $0 < \\theta < \\pi$。这会产生一个具有几何阻尼（$\\propto r^k$）和由 $\\theta$ 设定的伪频率的振荡自相关。这是有阻尼软模振荡器的离散代理。\n\nB) 类有序-无序的电报过程。我们生成一个对称双态马尔可夫链 $s_n \\in \\{-1, +1\\}$，每个时间步的切换概率为 $p_{\\mathrm{switch}}$，并通过 $y_n = \\alpha y_{n-1} + \\eta_n$, $\\eta_n \\sim \\mathcal{N}(0, \\sigma^2)$ 添加阱内相关噪声。总坐标为 $u_n = u_0 s_n + y_n$。当 $u_0$ 相对于 $\\sigma$ 足够大时，这会产生双峰性；当 $p_{\\mathrm{switch}}$很小（长停留时间）时，会产生一个主导的中心谱分量。\n\nC) 类位移型的过阻尼弛豫过程。我们生成 $u_n = \\varphi u_{n-1} + \\varepsilon_n$, $\\varepsilon_n \\sim \\mathcal{N}(0,\\sigma^2)$，它产生单峰分布和无振荡的纯弛豫自相关，代表高温位移型状态。\n\n估计器选择和阈值：\n- 对于 $\\hat{P}(u)$，我们使用高斯核密度估计器和自动带宽（例如，Scott 法则），并在一个均匀网格上进行评估。通过设定一个相对于最大密度的固定比例的相对显著性阈值来检测峰值，以避免将噪声引起的波纹计为峰。这在所有案例中保持一致，并且对有限样本效应具有鲁棒性。\n- 对于 $S(f)$，我们使用 Welch 平均周期图法和重叠段来获得可靠的估计。我们减去样本均值以消除在 $f=0$ 处的任何有限样本偏差，同时保留低频内容。我们选择 $f_0 = 0.02$ 和 $f_1 = 0.05$（单位为每个时间步的周期数，$\\Delta t = 1$），这在我们合成过程的设定下，能够将极低频带与有限频率峰分开。如果 $R_{\\mathrm{low}} > 10$，我们将中心峰归类为主导峰。\n- 对于振荡，我们计算 $\\tilde{C}(k)$ 在中等延迟范围内的过零次数，并要求最多1次过零才认为过程是非振荡的。\n\n这些阈值平衡了两个相互竞争的要求：避免将单峰、纯弛豫的位移型动力学（案例4）错误分类为有序-无序，以及即便是双峰性较弱或被模糊（案例3）时也能正确识别出有序-无序。一个较大的阈值 $R_{\\mathrm{low}} > 10$ 确保了只有在单峰性占主导的情况下，具有压倒性主导低频功率的轨迹才被标记为有序-无序。\n\n测试套件参数：\n- 案例1（类位移型振荡）：$r = 0.98$, $\\theta = 0.8$, $\\sigma = 0.5$。\n- 案例2（类有序-无序型，稀有跳跃）：$u_0 = 1.0$, $p_{\\mathrm{switch}} = 0.001$, $\\alpha = 0.95$, $\\sigma = 0.05$。\n- 案例3（类有序-无序型，接近交叉区域）：$u_0 = 0.4$, $p_{\\mathrm{switch}} = 0.01$, $\\alpha = 0.90$, $\\sigma = 0.10$。\n- 案例4（类位移型弛豫）：$\\varphi = 0.5$, $\\sigma = 0.5$。\n- 案例5（类有序-无序型，中等跳跃）：$u_0 = 0.8$, $p_{\\mathrm{switch}} = 0.02$, $\\alpha = 0.95$, $\\sigma = 0.05$。\n\n预期的定性结果：\n- 案例1：$P(u)$ 单峰，自相关振荡，有限频率谱峰；分类为位移型 ($0$)。\n- 案例2：$P(u)$ 双峰且低频谱占主导；分类为有序-无序 ($1$)。\n- 案例3：由于浅势阱和噪声，$P(u)$ 可能为单峰，但具有非常强的中心峰和非振荡衰减；分类为有序-无序 ($1$)。\n- 案例4：$P(u)$ 单峰，非振荡弛豫动力学，但中心峰不够强以超过保守阈值；分类为位移型 ($0$)。\n- 案例5：$P(u)$ 双峰，伴有中等程度的跳跃；分类为有序-无序 ($1$)。\n\n因此，当协议按规定实现，并使用固定的随机种子、一致的估计器和阈值时，最终输出列表应为 $[0, 1, 1, 0, 1]$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import signal, stats\n\ndef simulate_displacive_ar2(N, r, theta, sigma, rng):\n    \"\"\"\n    Simulate a stationary AR(2) process with complex-conjugate poles r*exp(±i*theta).\n    u_n = phi1 u_{n-1} + phi2 u_{n-2} + eps_n\n    \"\"\"\n    phi1 = 2.0 * r * np.cos(theta)\n    phi2 = -r**2\n    u = np.zeros(N, dtype=float)\n    # Initialize with small random values to avoid startup bias\n    u[0] = rng.normal(scale=sigma)\n    u[1] = rng.normal(scale=sigma)\n    eps = rng.normal(loc=0.0, scale=sigma, size=N)\n    for n in range(2, N):\n        u[n] = phi1 * u[n-1] + phi2 * u[n-2] + eps[n]\n    # Discard initial transient by high-pass filtering via mean subtraction\n    u -= np.mean(u)\n    return u\n\ndef simulate_order_disorder_telegraph(N, u0, p_switch, alpha, sigma, rng):\n    \"\"\"\n    Simulate a telegraph process s_n in {-1,+1} with switching probability p_switch,\n    with intra-well AR(1) fluctuations y_n = alpha y_{n-1} + eta_n, eta ~ N(0, sigma^2).\n    u_n = u0 * s_n + y_n\n    \"\"\"\n    s = np.ones(N, dtype=int)\n    # Generate switching events\n    flips = rng.uniform(size=N)  p_switch\n    for n in range(1, N):\n        if flips[n]:\n            s[n] = -s[n-1]\n        else:\n            s[n] = s[n-1]\n    # Intra-well noise\n    y = np.zeros(N, dtype=float)\n    eta = rng.normal(loc=0.0, scale=sigma, size=N)\n    for n in range(1, N):\n        y[n] = alpha * y[n-1] + eta[n]\n    u = u0 * s + y\n    u -= np.mean(u)\n    return u\n\ndef simulate_displacive_relaxational_ar1(N, phi, sigma, rng):\n    \"\"\"\n    Simulate an AR(1) process: u_n = phi * u_{n-1} + eps_n\n    \"\"\"\n    u = np.zeros(N, dtype=float)\n    eps = rng.normal(loc=0.0, scale=sigma, size=N)\n    u[0] = eps[0]\n    for n in range(1, N):\n        u[n] = phi * u[n-1] + eps[n]\n    u -= np.mean(u)\n    return u\n\ndef estimate_kde_peaks(u, grid_points=401, rel_prominence=0.2):\n    \"\"\"\n    Estimate KDE with Gaussian kernel and count robust peaks using relative prominence.\n    Returns (num_peaks, grid, density, peaks_indices).\n    \"\"\"\n    kde = stats.gaussian_kde(u)\n    umin, umax = np.min(u), np.max(u)\n    # Pad the range slightly to avoid boundary issues\n    pad = 0.1 * (umax - umin + 1e-12)\n    x = np.linspace(umin - pad, umax + pad, grid_points)\n    p = kde.evaluate(x)\n    # Find peaks with prominence relative to max density\n    if p.size == 0 or np.all(p == 0):\n        return 0, x, p, np.array([], dtype=int)\n    max_p = np.max(p)\n    prominence = rel_prominence * max_p\n    peaks, _ = signal.find_peaks(p, prominence=prominence)\n    return len(peaks), x, p, peaks\n\ndef autocorrelation(u, max_lag=None):\n    \"\"\"\n    Compute unbiased autocorrelation up to max_lag using FFT for efficiency.\n    Returns lags, normalized autocorrelation (C(k)/C(0)).\n    \"\"\"\n    N = len(u)\n    if max_lag is None:\n        max_lag = min(N - 1, 1024)\n    u = u - np.mean(u)\n    # Next power of two for zero-padding\n    nfft = 1\n    while nfft  2 * N:\n        nfft = 1\n    U = np.fft.rfft(u, n=nfft)\n    S = U * np.conjugate(U)\n    c = np.fft.irfft(S, n=nfft)[:N]\n    # Unbiased normalization by number of terms contributing to each lag\n    denom = np.arange(N, 0, -1, dtype=float)\n    c = c / denom\n    c0 = c[0] if c[0] != 0 else 1.0\n    acf = c[:max_lag + 1] / c0\n    lags = np.arange(max_lag + 1)\n    return lags, acf\n\ndef count_zero_crossings(acf):\n    \"\"\"\n    Count zero crossings in the autocorrelation for lags >= 1.\n    \"\"\"\n    if len(acf) = 2:\n        return 0\n    x = acf[1:]  # exclude lag 0\n    signs = np.sign(x)\n    # Treat exact zeros as positive to avoid counting noise around zero\n    signs[signs == 0] = 1\n    crossings = np.where(np.diff(signs) != 0)[0]\n    return crossings.size\n\ndef central_peak_ratio(u, fs=1.0, f0=0.02, f1=0.05):\n    \"\"\"\n    Compute low-frequency central-peak ratio R_low = mean S(f in [0,f0]) / max S(f in [f1, Nyquist]).\n    PSD estimated via Welch; subtract mean to avoid DC bias.\n    \"\"\"\n    u = u - np.mean(u)\n    # Welch's method for robust PSD\n    # Choose segment length to ensure fine frequency resolution\n    nperseg = min(512, len(u))\n    noverlap = nperseg // 2\n    f, Pxx = signal.welch(u, fs=fs, nperseg=nperseg, noverlap=noverlap, detrend='constant')\n    if f.size == 0:\n        return 0.0\n    # Ensure f and Pxx are numpy arrays\n    f = np.asarray(f)\n    Pxx = np.asarray(Pxx)\n    # Low-frequency average\n    low_mask = (f >= 0.0)  (f = f0)\n    high_mask = (f >= f1)\n    if not np.any(high_mask) or not np.any(low_mask):\n        return 0.0\n    P_low = np.mean(Pxx[low_mask])\n    P_high_max = np.max(Pxx[high_mask])\n    if P_high_max = 0:\n        return np.inf\n    return float(P_low / P_high_max)\n\ndef classify_trajectory(u, fs=1.0, f0=0.02, f1=0.05,\n                        rel_prominence=0.2, acf_max_lag=300,\n                        r_threshold_high=10.0, zero_crossing_threshold=1):\n    \"\"\"\n    Apply the combined protocol to classify a trajectory.\n    Returns 1 for order-disorder-like, 0 for displacive-like.\n    \"\"\"\n    # Distribution modality\n    num_peaks, _, _, _ = estimate_kde_peaks(u, rel_prominence=rel_prominence)\n    # Autocorrelation\n    _, acf = autocorrelation(u, max_lag=acf_max_lag)\n    zc = count_zero_crossings(acf)\n    # Spectral central peak ratio\n    r_low = central_peak_ratio(u, fs=fs, f0=f0, f1=f1)\n    # Decision\n    if num_peaks >= 2:\n        return 1\n    if (r_low > r_threshold_high) and (zc = zero_crossing_threshold):\n        return 1\n    return 0\n\ndef solve():\n    rng = np.random.default_rng(123456)  # Fixed seed for reproducibility\n    N = 4096\n    dt = 1.0\n    fs = 1.0 / dt\n\n    # Define the test cases\n    test_cases = [\n        # Case 1: Displacive-like oscillatory (AR(2))\n        (\"A\", {\"r\": 0.98, \"theta\": 0.8, \"sigma\": 0.5}),\n        # Case 2: Order-disorder-like, rare hopping (telegraph + AR(1) intra-well)\n        (\"B\", {\"u0\": 1.0, \"p_switch\": 0.001, \"alpha\": 0.95, \"sigma\": 0.05}),\n        # Case 3: Order-disorder-like, near-crossover (shallower wells, faster hopping)\n        (\"B\", {\"u0\": 0.4, \"p_switch\": 0.01, \"alpha\": 0.90, \"sigma\": 0.10}),\n        # Case 4: Displacive-like relaxational AR(1)\n        (\"C\", {\"phi\": 0.5, \"sigma\": 0.5}),\n        # Case 5: Order-disorder-like, moderate hopping\n        (\"B\", {\"u0\": 0.8, \"p_switch\": 0.02, \"alpha\": 0.95, \"sigma\": 0.05}),\n    ]\n\n    # Analysis parameters (fixed across all cases)\n    rel_prominence = 0.2\n    acf_max_lag = 300\n    f0 = 0.02  # low-frequency band upper bound\n    f1 = 0.05  # high-frequency band lower bound\n    r_threshold_high = 10.0\n    zero_crossing_threshold = 1\n\n    results = []\n    for case in test_cases:\n        ctype, params = case\n        if ctype == \"A\":\n            u = simulate_displacive_ar2(N, r=params[\"r\"], theta=params[\"theta\"],\n                                        sigma=params[\"sigma\"], rng=rng)\n        elif ctype == \"B\":\n            u = simulate_order_disorder_telegraph(\n                N,\n                u0=params[\"u0\"],\n                p_switch=params[\"p_switch\"],\n                alpha=params[\"alpha\"],\n                sigma=params[\"sigma\"],\n                rng=rng,\n            )\n        elif ctype == \"C\":\n            u = simulate_displacive_relaxational_ar1(\n                N,\n                phi=params[\"phi\"],\n                sigma=params[\"sigma\"],\n                rng=rng,\n            )\n        else:\n            # Unknown type; classify as displacive by default\n            u = np.zeros(N, dtype=float)\n\n        label = classify_trajectory(\n            u,\n            fs=fs,\n            f0=f0,\n            f1=f1,\n            rel_prominence=rel_prominence,\n            acf_max_lag=acf_max_lag,\n            r_threshold_high=r_threshold_high,\n            zero_crossing_threshold=zero_crossing_threshold,\n        )\n        results.append(label)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2815586"}]}