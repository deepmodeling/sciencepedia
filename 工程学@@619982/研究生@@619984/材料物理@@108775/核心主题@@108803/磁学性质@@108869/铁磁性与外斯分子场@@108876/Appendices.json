{"hands_on_practices": [{"introduction": "魏斯分子场理论的核心思想在于将复杂的量子多体交换作用简化为一个等效的“分子场”。本练习将引导你完成这一关键的理论步骤，从微观的交换积分 $J$ 和晶格配位数 $z$ 出发，推导出宏观的居里温度 $T_C$。通过这项实践，你将深刻理解铁磁性相变的微观起源，并掌握平均场近似的基本应用方法。[@problem_id:1777547]", "id": "1777547", "problem": "一个凝聚态物理学家团队正在研究一种用于自旋电子学应用的新型合成铁磁性化合物。该材料被建模为具有一个晶格结构，其中每个磁性离子具有自旋量子数 $S=1$。主要的磁相互作用是最近邻交换相互作用，由海森堡模型哈密顿量 $H = -2J \\sum_{\\langle i,j \\rangle} \\vec{S}_i \\cdot \\vec{S}_j$ 描述，其中 $J$ 是正的交换积分，求和遍历所有最近邻对。每个离子的配位数为 $z$，代表最近邻的数量。\n\n在魏斯分子场理论的框架内，复杂的多体交换相互作用被近似为一个作用于每个自旋的有效“分子”磁场 $\\vec{B}_{mol}$。您的任务是确定临界温度，高于此温度时，材料会失去其自发磁化强度。\n\n推导该材料的居里温度 $T_C$ 的表达式。用交换积分 $J$、配位数 $z$ 和玻尔兹曼常数 $k_B$ 来表示您的答案，形式为一个封闭的解析表达式。", "solution": "最近邻交换的海森堡哈密顿量为 $H=-2J\\sum_{\\langle i,j\\rangle}\\vec{S}_{i}\\cdot\\vec{S}_{j}$，其中 $J>0$。在魏斯平均场理论中，每个自旋 $\\vec{S}_{i}$ 受到其 $z$ 个邻居的平均作用，因此我们用 $\\langle\\vec{S}\\rangle$ 替换 $\\vec{S}_{j}$。选择 $z$ 轴沿着磁化方向，并记 $m\\equiv\\langle S^{z}\\rangle$，单格点平均场哈密顿量变为\n$$\nH_{i}^{\\mathrm{MF}}=-2J\\sum_{j\\in\\mathrm{nn}(i)}\\vec{S}_{i}\\cdot\\langle\\vec{S}\\rangle+\\text{const}=-2Jzm\\,S_{i}^{z}+\\text{const}.\n$$\n这等效于 $H_{i}^{\\mathrm{MF}}=-h\\,S_{i}^{z}+\\text{const}$，其中分子场参数为 $h\\equiv 2J z m$。对于小磁场 $h$ 中的单个自旋 $S$，其热平均值对 $h$ 的线性项为\n$$\nm=\\langle S^{z}\\rangle=\\beta\\,h\\,\\frac{S(S+1)}{3},\n$$\n这可由 $\\langle(S^{z})^{2}\\rangle_{h=0}=S(S+1)/3$ 得到。代入 $h=2J z m$ 得到接近 $T_{C}$ 时的自洽方程，\n$$\nm=\\beta\\left(\\frac{S(S+1)}{3}\\right)(2J z m).\n$$\n一个非平凡解 $m\\neq 0$ 要求\n$$\n1=\\beta_{C}\\,\\frac{2J z\\,S(S+1)}{3},\\quad\\text{所以}\\quad k_{B}T_{C}=\\frac{2}{3}zJ\\,S(S+1).\n$$\n对于 $S=1$，我们有 $S(S+1)=2$，因此\n$$\nT_{C}=\\frac{4zJ}{3k_{B}}.\n$$", "answer": "$$\\boxed{\\frac{4 z J}{3 k_{B}}}$$"}, {"introduction": "当温度低于居里温度 $T_C$ 时，铁磁体即使在没有外部磁场的情况下也会产生自发磁化。自发磁化的大小由一个非线性的自洽方程决定，其非零解对应于铁磁态。本练习要求你求解在特定温度（$T = T_C / 2$）下的自发磁化强度，这能让你亲身体验求解魏斯模型核心方程的过程，并加深对有序相形成的理解。[@problem_id:1777538]", "id": "1777538", "problem": "我们使用魏斯(Weiss)平均场理论构建一个铁磁材料的简化模型。该材料被建模为一个原子晶格，每个原子携带一个与自旋量子数 $S=1/2$ 相关联的磁矩。在此框架内，复杂的量子力学交换相互作用被一个经典的“分子场” $B_{mol} = \\lambda M$ 所近似，其中 $M$ 是材料的宏观磁化强度，$\\lambda$ 是一个被称为分子场常数的正常数。\n\n一个由自旋为 $1/2$ 的磁矩组成的系统，在绝对温度 $T$ 和总有效磁场 $B_{eff}$ 中，其磁化强度 $M$ 由以下关系式给出：\n$$M = N \\mu \\tanh\\left(\\frac{\\mu B_{eff}}{k_B T}\\right)$$\n此处，$N$ 是单位体积内的磁矩数量，$\\mu$ 是单个磁矩的大小，而 $k_B$ 是玻尔兹曼常数。\n\n对于低于临界值，即居里(Curie)温度 $T_C$ 的温度，即使在没有外部磁场的情况下，该材料也能维持一个非零的自发磁化强度。对于这个特定模型，居里温度定义为 $T_C = \\frac{N \\mu^2 \\lambda}{k_B}$。\n\n假设材料保持在温度 $T = \\frac{1}{2} T_C$ 下，请确定自发磁化强度 $M$ 与饱和磁化强度 $M_{sat}$ 的比值。从提供的选项中选择最接近的值。\n\nA. 0.500\nB. 0.707\nC. 0.880\nD. 0.957\nE. 1.000", "solution": "我们在具有自旋-$\\frac{1}{2}$ 磁矩的魏斯平均场理论框架下进行计算。在零外部磁场中，有效场完全由分子场产生，因此 $B_{eff}=B_{mol}=\\lambda M$。磁化强度由下式给出\n$$\nM = N \\mu \\tanh\\!\\left(\\frac{\\mu B_{eff}}{k_{B} T}\\right) = N \\mu \\tanh\\!\\left(\\frac{\\mu \\lambda M}{k_{B} T}\\right).\n$$\n定义饱和磁化强度 $M_{sat} = N \\mu$ 和约化磁化强度 $m = \\frac{M}{M_{sat}}$。那么自洽方程变为\n$$\nm = \\tanh\\!\\left(\\frac{N \\mu^{2} \\lambda}{k_{B} T}\\, m\\right).\n$$\n使用给定的居里温度 $T_{C} = \\frac{N \\mu^{2} \\lambda}{k_{B}}$，该式可简化为\n$$\nm = \\tanh\\!\\left(\\frac{T_{C}}{T}\\, m\\right).\n$$\n在 $T = \\frac{1}{2} T_{C}$ 时，我们有 $\\frac{T_{C}}{T} = 2$，因此\n$$\nm = \\tanh(2m).\n$$\n对两边取 $\\arctanh$ 可得到等价方程\n$$\n\\arctanh(m) = 2m.\n$$\n数值求解这个超越方程可得 $m \\approx 0.9575$。因此，在 $T=\\frac{1}{2}T_{C}$ 时，比率 $M/M_{sat}$ 约等于 $0.9575$，最接近选项 D ($0.957$)。", "answer": "$$\\boxed{D}$$"}, {"introduction": "物理系统在临界点附近的行为由普适的临界指数所描述，这是凝聚态物理学的核心议题之一，而平均场理论预言磁化临界指数 $\\beta=1/2$。这项高阶实践将理论与计算相结合，要求你通过编写程序来数值验证这一理论预测。通过对数值求解的数据进行幂律拟合，你将能亲手验证临界行为，建立起连接解析理论与现代计算物理方法的桥梁。[@problem_id:2823748]", "id": "2823748", "problem": "您的任务是使用平均场理论（MFT）中的自旋-$1/2$ Brillouin 函数，对铁磁性的 Weiss 分子场模型中自发磁化强度的近临界幂律行为进行数值验证。请使用无量纲温度 $t \\equiv T/T_C$ 进行计算，其中 $T_C$ 是居里温度。在零外场中，约化自发磁化强度 $m(t)$ 定义为 $m(t) \\equiv M(T)/M_s$，其中 $M_s$ 是零温下的饱和磁化强度。对于自旋-$1/2$ 系统，Brillouin 函数为 $B_{1/2}(x) = \\tanh(x)$，MFT 的自洽方程以无量纲形式简化为以下非线性方程：\n$$\nm(t) = \\tanh\\!\\left(\\frac{m(t)}{t}\\right),\n$$\n其中 $0 < t < 1$。近临界区为 $t \\rightarrow 1^{-}$。在此区域内，预期的行为是幂律 $M(T) \\propto (1 - t)^{\\beta}$，其中临界指数 $\\beta$ 必须通过拟合进行数值确定。\n\n您的任务是：\n- 对于近临界区中每个指定的 $t$ 区间，在 $t \\in [t_{\\min}, t_{\\max}]$（其中 $t_{\\max} < 1$）上均匀采样一个包含 $N$ 个点的网格，在每个网格点上数值求解自洽方程以得到 $m(t)$，并将数据 $\\{(1-t_i, m(t_i))\\}$ 拟合到模型\n$$\nm(t) \\approx A\\,(1 - t)^{\\beta},\n$$\n其中将 $A$ 和 $\\beta$ 作为拟合参数。\n- 提取并报告每个测试用例的拟合指数 $\\beta$。您必须通过对 $\\ln m$ 与 $\\ln(1-t)$ 进行回归来拟合 $\\beta$。\n\n实现要求：\n- 使用上述自洽方程作为唯一的模型输入，并在网格中的每个 $t$ 点上数值求解它以得到 $m(t)$。不允许使用任何 $m(t)$ 的闭合形式捷径。\n- 对于每个 $t \\in (0,1)$，使用一个鲁棒的求根方法来求解非线性方程，确保 $m(t) \\in (0,1)$。\n- 在变换后的变量 $(x_i,y_i) = (\\ln(1-t_i),\\ln m(t_i))$ 上执行最小二乘法拟合，返回斜率作为 $\\beta$，并在最终输出中忽略截距 $ \\ln A $。\n- 所有温度都以无量纲单位 $t = T/T_C$ 处理，因此不需要进行物理单位转换。\n\n测试套件：\n- 使用以下三个测试用例，每个用例以元组 $(t_{\\min}, t_{\\max}, N)$ 的形式给出：\n    - 用例 1：$(0.90, 0.99, 80)$。\n    - 用例 2：$(0.95, 0.999, 120)$。\n    - 用例 3：$(0.99, 0.9999, 200)$。\n\n输出内容：\n- 您的程序应生成单行输出，其中包含三个用例的拟合指数 $\\beta$，形式为用方括号括起来的逗号分隔列表，顺序与测试用例相同。最终输出必须只有一行，例如：$[\\,\\beta_1,\\beta_2,\\beta_3\\,]$。每个 $\\beta$ 应以浮点数形式打印。\n\n您的实现必须是完全自包含的，不得接受任何用户输入。它必须仅依赖于指定的数值库。", "solution": "对问题进行验证。\n\n从问题陈述中提取的已知条件：\n- **模型**：自旋-1/2 体系的 Weiss 分子场理论。\n- **自洽方程**：$m(t) = \\tanh(m(t)/t)$，其中 $m(t)$ 为约化自发磁化强度，$t = T/T_C$ 为无量纲温度。此方程在零外磁场条件下对 $t \\in (0, 1)$ 有效。\n- **近临界行为**：当 $t \\rightarrow 1^{-}$ 时，假定磁化强度遵循幂律 $m(t) \\approx A(1 - t)^{\\beta}$。\n- **目标**：数值确定临界指数 $\\beta$。\n- **方法论**：\n    1. 对于给定的区间 $[t_{\\min}, t_{\\max}]$ 和点数 $N$，创建 $t_i$ 值的均匀网格。\n    2. 对每个 $t_i$，数值求解自洽方程以找到 $m(t_i)$。\n    3. 对变换后的数据点 $(\\ln(1-t_i), \\ln m(t_i))$ 执行线性最小二乘回归。拟合线的斜率即为所求的指数 $\\beta$。\n- **数值约束**：$m(t)$ 的解必须通过对超越方程本身使用鲁棒的求根方法来找到。主计算中不得使用 $m(t)$ 的任何闭合形式近似。\n- **测试用例**：\n    - 用例 1：$(t_{\\min}, t_{\\max}, N) = (0.90, 0.99, 80)$\n    - 用例 2：$(t_{\\min}, t_{\\max}, N) = (0.95, 0.999, 120)$\n    - 用例 3：$(t_{\\min}, t_{\\max}, N) = (0.99, 0.9999, 200)$\n- **输出格式**：包含三个拟合得到的 $\\beta$ 值的单行输出，形式为用方括号括起来的逗号分隔列表。\n\n验证结论：\n此问题是 **有效的**。\n1.  **科学依据充分**：Weiss 分子场理论、Brillouin 函数的使用、由此产生的自洽方程以及临界指数的概念，都是磁性物质统计力学中的基本和标准课题。该问题是此领域一个经典的数值练习。\n2.  **适定性良好**：问题陈述精确。对于任何给定的 $t \\in (0, 1)$，自洽方程 $m = \\tanh(m/t)$ 在 $m \\in (0, 1)$ 上有唯一的非平凡解。确定 $\\beta$ 的过程是明确的（对数变换变量的线性回归）。\n3.  **客观性**：问题使用客观、技术性的语言表述，没有任何主观性或含糊之处。\n4.  **完整性**：所有必需的参数和方法都已指定。问题是自包含的。\n\n该问题不违反任何指定的无效标准。因此，将提供一个解决方案。\n\n问题的核心是求解约化磁化强度 $m(t)$ 的非线性自洽方程，然后利用这些数值数据来确定临界指数 $\\beta$。\n\n在 Weiss 平均场理论中，自旋-$1/2$ 系统的自洽方程由下式给出：\n$$\nm(t) = \\tanh\\left(\\frac{m(t)}{t}\\right)\n$$\n其中 $t = T/T_C$ 是约化温度。必须在近临界区（定义为 $t \\rightarrow 1^{-}$）对不同的 $t$ 值求解此方程以得到 $m(t)$。\n\n为了对给定的 $t$ 数值求解此方程，我们可以将其重新表述为一个求根问题。我们寻求函数 $f(m; t)$ 的根：\n$$\nf(m; t) = m - \\tanh\\left(\\frac{m}{t}\\right) = 0\n$$\n对于任何 $t \\in (0, 1)$，存在一个平凡解 $m=0$（顺磁态）和一个唯一的非平凡解 $m \\in (0, 1)$（铁磁态）。我们关心的是后者。我们可以证明这个根的存在性。函数 $\\tanh(m/t)$ 在 $m=0$ 处对 $m$ 的导数是 $1/t$。由于 $t < 1$，这个斜率大于 1，而函数 $y=m$ 的斜率是 1。这保证了对于小的正数 $m$，有 $\\tanh(m/t) > m$，即 $f(m; t) < 0$。当 $m \\rightarrow 1$ 时，$\\tanh(m/t) < 1$，因此 $f(m; t)$ 可能为正。例如，在 $m=1$ 处，$f(1; t) = 1 - \\tanh(1/t) > 0$，因为 $1/t > 1$ 且对于任何有限的 $x$，$\\tanh(x) < 1$。由于 $f(m; t)$ 在 $m \\in (0,1)$ 上是连续的并且变号，所以在该区间内必定存在一个根。像 Brent-Dekker 方法这样的鲁棒的区间求根算法是合适的。我们将在区间 $[\\epsilon, 1]$ 中寻找根，其中 $\\epsilon$ 是一个小的正数，以避免 $m=0$ 的平凡解。\n\n问题指出，在临界点附近，磁化强度遵循幂律：\n$$\nm(t) \\approx A(1 - t)^{\\beta}\n$$\n其中 $A$ 是一个振幅，$\\beta$ 是临界指数。为了从我们的数值数据中找到 $\\beta$，我们通过对两边取自然对数来线性化这个关系：\n$$\n\\ln(m(t)) \\approx \\ln(A) + \\beta \\ln(1 - t)\n$$\n这个方程具有直线形式 $y = c + \\beta x$，其中 $y = \\ln(m(t))$，$x = \\ln(1 - t)$，截距 $c = \\ln(A)$。通过对数据集 $\\{(x_i, y_i)\\} = \\{(\\ln(1-t_i), \\ln(m(t_i)))\\}$ 执行线性最小二乘回归，我们可以确定斜率，它对应于临界指数 $\\beta$。\n\n对于每个测试用例 $(t_{\\min}, t_{\\max}, N)$，总体流程如下：\n1.  在区间 $[t_{\\min}, t_{\\max}]$ 内生成一个包含 $N$ 个均匀间隔的温度点 $t_i$ 的数组。\n2.  对于每个 $t_i$，使用数值求根器求解方程 $m_i - \\tanh(m_i/t_i) = 0$ 以得到 $m_i$。\n3.  构造用于线性回归的数组：$x = \\ln(1 - t_i)$ 和 $y = \\ln(m_i)$。\n4.  对 $(x, y)$ 数据进行线性拟合以找到斜率 $\\beta$。\n\n在平均场理论中，$\\beta$ 的理论值恰好是 $1/2$。这可以通过对 $\\tanh$ 函数在小 $m$ 和 $t \\approx 1$ 条件下进行泰勒展开来证明。\n$m \\approx \\frac{m}{t} - \\frac{1}{3}\\left(\\frac{m}{t}\\right)^3 + \\dots$\n两边除以 $m \\neq 0$：\n$1 \\approx \\frac{1}{t} - \\frac{m^2}{3t^3}$\n$m^2 \\approx 3t^3\\left(\\frac{1}{t} - 1\\right) = 3t^2(1-t)$\n当 $t \\rightarrow 1$ 时，这简化为 $m^2 \\approx 3(1-t)$，这意味着 $m(t) \\approx \\sqrt{3}(1-t)^{1/2}$。\n因此，$\\beta$ 的期望值是 $0.5$。随着温度区间 $[t_{\\min}, t_{\\max}]$ 越来越接近 $1$，数值结果应该趋近于这个值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import optimize\n\ndef solve():\n    \"\"\"\n    Numerically confirms the critical exponent for spontaneous magnetization\n    in the Weiss molecular field model for a spin-1/2 system.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (t_min, t_max, N_points).\n    test_cases = [\n        (0.90, 0.99, 80),\n        (0.95, 0.999, 120),\n        (0.99, 0.9999, 200),\n    ]\n\n    results = []\n    \n    # A small positive number to set the lower bound for root finding,\n    # ensuring we find the non-trivial ferromagnetic solution (m > 0).\n    # The upper bound is 1, as reduced magnetization cannot exceed 1.\n    root_finding_bracket = [1e-9, 1.0]\n\n    for case in test_cases:\n        t_min, t_max, N = case\n\n        # 1. Generate a uniform grid of dimensionless temperatures t = T/T_C.\n        # We use a small epsilon in t_max to ensure 1-t is never zero.\n        t_grid = np.linspace(t_min, t_max, N)\n        \n        magnetizations = []\n\n        # 2. For each temperature, numerically solve the self-consistency equation.\n        for t in t_grid:\n            # The equation to solve is m - tanh(m/t) = 0.\n            # We define it as a lambda function for the solver.\n            equation_to_solve = lambda m: m - np.tanh(m / t)\n            \n            try:\n                # Use the robust Brent's method for root finding.\n                m_solution = optimize.brentq(\n                    equation_to_solve, \n                    a=root_finding_bracket[0], \n                    b=root_finding_bracket[1]\n                )\n                magnetizations.append(m_solution)\n            except ValueError:\n                # This should not happen for t < 1, but is included for robustness.\n                # It indicates no root was found in the bracket.\n                magnetizations.append(np.nan)\n\n        # Convert lists to NumPy arrays for vectorized operations.\n        t_array = np.array(t_grid)\n        m_array = np.array(magnetizations)\n        \n        # Filter out any potential NaN values from failed root-finding.\n        valid_indices = ~np.isnan(m_array)\n        t_array = t_array[valid_indices]\n        m_array = m_array[valid_indices]\n\n        # 3. Transform the data for linear regression:\n        # Power law: m = A * (1 - t)^beta\n        # Linearized form: log(m) = log(A) + beta * log(1 - t)\n        # We define x = log(1 - t) and y = log(m).\n        x_fit = np.log(1 - t_array)\n        y_fit = np.log(m_array)\n\n        # 4. Perform a linear least-squares fit.\n        # np.polyfit(x, y, 1) returns [slope, intercept].\n        # The slope is the critical exponent beta.\n        beta, log_A = np.polyfit(x_fit, y_fit, 1)\n        \n        results.append(beta)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```"}]}