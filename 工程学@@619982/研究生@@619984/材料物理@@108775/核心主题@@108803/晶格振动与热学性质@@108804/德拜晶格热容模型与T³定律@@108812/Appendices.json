{"hands_on_practices": [{"introduction": "任何物理模型都建立在一系列核心假设之上，德拜模型也不例外。在应用该模型解决实际问题之前，我们必须首先理解其根基，这项练习将我们带回模型的起点：通过对声子模式进行计数，为晶格振动的所有自由度（总共 $3N$ 个）在波矢空间中划定一个边界。我们将从第一性原理出发，推导德拜波矢 $k_D$ 的表达式，从而揭示原子数密度 $n$ 是如何决定这个动量空间截断半径的。[@problem_id:2813025]", "problem": "考虑一个在德拜近似下建模的单原子晶体。该晶体占据体积 $V$ 并包含 $N$ 个原子，因此原子数密度为 $n = N/V$。假设在长波长下为各向同性弹性连续介质，具有三种声学极化。施加玻恩-冯·卡门周期性边界条件，并通过一个波矢空间中半径为 $k_{D}$ 的球来近似真实的布里渊区，该半径的选择应使声学简正模式的总数等于 $3N$。\n\n仅从这些原理出发（波矢空间中的周期性边界量子化、各向同性以及声学模式总数等于 $3N$ 的要求），推导德拜波矢 $k_{D}$ 关于数密度 $n$ 的封闭形式解析表达式。请以 $k_{D}$ 关于 $n$ 的单个符号表达式的形式给出最终答案。不要使用任何预先引用的 $k$ 空间态密度表达式；相反，应从边界条件和计数论证来证明它们。\n\n你的最终答案必须是单个解析表达式。不需要进行数值计算。", "solution": "该问题要求推导单原子晶体的德拜波矢 $k_D$ 作为数密度 $n$ 的函数表达式。该推导必须源于所指定的基本原理。\n\n第一个原理是对晶格应用玻恩-冯·卡门周期性边界条件。考虑一个形状为长方体的晶体，其边长分别为 $L_x$、$L_y$ 和 $L_z$，体积为 $V = L_x L_y L_z$。振动模式的波函数是形式为 $\\exp(i\\mathbf{k} \\cdot \\mathbf{r})$ 的平面波，必须满足晶格的周期性。这对波矢 $\\mathbf{k} = (k_x, k_y, k_z)$ 的分量施加了以下条件：\n$$ \\exp(i k_x L_x) = 1 $$\n$$ \\exp(i k_y L_y) = 1 $$\n$$ \\exp(i k_z L_z) = 1 $$\n如果波矢的分量按如下方式量子化，则这些条件得到满足：\n$$ k_x = \\frac{2\\pi}{L_x} n_x $$\n$$ k_y = \\frac{2\\pi}{L_y} n_y $$\n$$ k_z = \\frac{2\\pi}{L_z} n_z $$\n其中 $n_x$、$n_y$ 和 $n_z$ 是整数。这些允许的波矢在三维波矢空间（或称k空间）中形成一个离散的网格。\n\n该网格上相邻点之间的间距为 $\\Delta k_x = 2\\pi/L_x$、$\\Delta k_y = 2\\pi/L_y$ 和 $\\Delta k_z = 2\\pi/L_z$。因此，在k空间中，单个允许态（单个 $\\mathbf{k}$ 矢量）所占据的体积为：\n$$ V_{\\mathbf{k}} = \\Delta k_x \\Delta k_y \\Delta k_z = \\left(\\frac{2\\pi}{L_x}\\right) \\left(\\frac{2\\pi}{L_y}\\right) \\left(\\frac{2\\pi}{L_z}\\right) = \\frac{(2\\pi)^3}{L_x L_y L_z} = \\frac{(2\\pi)^3}{V} $$\n这是k空间中每个模式所占的体积。\n\n为了找到k空间中某个区域内的模式数量，对于足够大的体积 $V$，我们可以将这些离散点的分布视为一个均匀的连续体。k空间中的态密度，即k空间单位体积内允许的 $\\mathbf{k}$ 矢量数量，是每个态所占体积的倒数：\n$$ \\rho(\\mathbf{k}) = \\frac{1}{V_{\\mathbf{k}}} = \\frac{V}{(2\\pi)^3} $$\n\n德拜模型将真实的、具有复杂多面体形状的第一布里渊区近似为一个半径为 $k_D$ 的球，称为德拜球。半径 $k_D$ 的选择是为了使该球内的简正模式总数等于晶体的总振动自由度数。对于一个含有 $N$ 个原子的单原子晶体，有 $3N$ 个自由度。\n\nk空间中德拜球的体积为：\n$$ V_{\\text{sphere}} = \\frac{4}{3}\\pi k_D^3 $$\n该球内允许的 $\\mathbf{k}$ 矢量总数，我们称之为 $N_{\\mathbf{k}}$，是k空间中的态密度与该球体积的乘积：\n$$ N_{\\mathbf{k}} = \\rho(\\mathbf{k}) \\times V_{\\text{sphere}} = \\left(\\frac{V}{(2\\pi)^3}\\right) \\left(\\frac{4}{3}\\pi k_D^3\\right) = \\frac{V}{8\\pi^3} \\frac{4\\pi}{3} k_D^3 = \\frac{V k_D^3}{6\\pi^2} $$\n这个表达式计算了不同波矢的数量。对于固体中每个允许的波矢 $\\mathbf{k}$，存在三种声学极化模式（一个纵向和两个横向）。因此，声学简正模式的总数是允许的 $\\mathbf{k}$ 矢量数量的三倍。\n$$ N_{\\text{modes}} = 3 \\times N_{\\mathbf{k}} = 3 \\left(\\frac{V k_D^3}{6\\pi^2}\\right) = \\frac{V k_D^3}{2\\pi^2} $$\n德拜模型的基本假设是将这个模式总数等同于晶体的总自由度数，对于 $N$ 个原子来说，即为 $3N$。\n$$ 3N = N_{\\text{modes}} = \\frac{V k_D^3}{2\\pi^2} $$\n我们现在求解这个方程以得到德拜波矢 $k_D$。\n$$ 3N = \\frac{V k_D^3}{2\\pi^2} $$\n$$ k_D^3 = \\frac{3N \\cdot 2\\pi^2}{V} = 6\\pi^2 \\frac{N}{V} $$\n问题将原子数密度定义为 $n = N/V$。将此定义代入 $k_D^3$ 的表达式中：\n$$ k_D^3 = 6\\pi^2 n $$\n对两边取立方根，得到德拜波矢的最终表达式：\n$$ k_D = (6\\pi^2 n)^{\\frac{1}{3}} $$\n该表达式将德拜模型的截止波矢与晶体中的原子数密度直接联系起来，它严格地从倒易空间中的模式量子化以及对模式总数的约束推导得出。", "answer": "$$\\boxed{\\left(6\\pi^2 n\\right)^{\\frac{1}{3}}}$$", "id": "2813025"}, {"introduction": "掌握了德拜模型的理论基础后，我们可以进一步探索其强大的预测能力。该模型在低温下的一个关键成果是著名的德拜 $T^3$ 定律，它将晶格热容与温度的立方 $T^3$ 联系起来。通过这项练习，我们将应用该定律来计算铅和金刚石这两种物理性质迥异的材料在极低温度下的热容之比，直观地理解德拜温度 $\\Theta_D$ 是如何反映材料“刚度”并决定其热力学行为的。[@problem_id:1813233]", "problem": "在固态物理学中，德拜模型为理解晶格振动（声子）对固体热容的贡献提供了一个理论框架。在远低于材料特有的特征温度，即德拜温度（$\\Theta_D$）时，恒定体积下的摩尔热容 $C_V$ 遵循一个简单的幂律。\n\n考虑两种截然不同的晶体固体：铅（Pb）和金刚石（C）。铅是一种柔软的金属元素，而金刚石是碳的一种极其坚硬的同素异形体。它们都被放置在低温恒温器中，并冷却到 $T = 4.20 \\, \\text{K}$ 的温度。铅的德拜温度为 $\\Theta_{D, \\text{Pb}} = 105 \\, \\text{K}$，金刚石的德拜温度为 $\\Theta_{D, \\text{C}} = 2230 \\, \\text{K}$。\n\n计算在此低温下，铅的摩尔晶格热容与金刚石的摩尔晶格热容之比，$\\frac{C_{V, \\text{Pb}}}{C_{V, \\text{C}}}$。\n\n将您的答案以无量纲数的形式给出，并四舍五入到三位有效数字。", "solution": "问题要求计算在低温 $T = 4.20 \\, \\text{K}$ 下，铅（Pb）和金刚石（C）的摩尔晶格热容之比。我们已知两种材料的德拜温度：$\\Theta_{D, \\text{Pb}} = 105 \\, \\text{K}$ 和 $\\Theta_{D, \\text{C}} = 2230 \\, \\text{K}$。\n\n首先，我们必须检查是否满足德拜模型的低温近似条件。这个近似通常被称为德拜 $T^3$ 定律，在温度 $T \\ll \\Theta_D$ 时有效。\n\n对于铅：$T = 4.20 \\, \\text{K}$ 且 $\\Theta_{D, \\text{Pb}} = 105 \\, \\text{K}$。其比值为 $T/\\Theta_{D, \\text{Pb}} = 4.20 / 105 = 0.04$。由于 $0.04 \\ll 1$，因此铅满足该条件。\n\n对于金刚石：$T = 4.20 \\, \\text{K}$ 且 $\\Theta_{D, \\text{C}} = 2230 \\, \\text{K}$。其比值为 $T/\\Theta_{D, \\text{C}} = 4.20 / 2230 \\approx 0.00188$。由于 $0.00188 \\ll 1$，因此金刚石也满足该条件。\n\n德拜 $T^3$ 定律指出，在低温下，恒定体积下的摩尔热容（$C_V$）由以下公式给出：\n$$\nC_V(T) \\approx \\frac{12 \\pi^4 R}{5} \\left(\\frac{T}{\\Theta_D}\\right)^3\n$$\n其中 $R$ 是理想气体常数，$T$ 是绝对温度，$\\Theta_D$ 是德拜温度。\n\n我们需要求出比值 $\\frac{C_{V, \\text{Pb}}}{C_{V, \\text{C}}}$。让我们使用德拜 $T^3$ 定律写出每种材料的摩尔热容表达式。\n\n对于铅：\n$$\nC_{V, \\text{Pb}} = \\frac{12 \\pi^4 R}{5} \\left(\\frac{T}{\\Theta_{D, \\text{Pb}}}\\right)^3\n$$\n\n对于金刚石：\n$$\nC_{V, \\text{C}} = \\frac{12 \\pi^4 R}{5} \\left(\\frac{T}{\\Theta_{D, \\text{C}}}\\right)^3\n$$\n\n现在，我们可以构建这两个表达式的比值：\n$$\n\\frac{C_{V, \\text{Pb}}}{C_{V, \\text{C}}} = \\frac{\\frac{12 \\pi^4 R}{5} \\left(\\frac{T}{\\Theta_{D, \\text{Pb}}}\\right)^3}{\\frac{12 \\pi^4 R}{5} \\left(\\frac{T}{\\Theta_{D, \\text{C}}}\\right)^3}\n$$\n\n常数前因子 $\\frac{12 \\pi^4 R}{5}$ 在分子和分母中被消去。温度项 $T^3$ 也被消去，因为两种材料处于相同的温度下。\n$$\n\\frac{C_{V, \\text{Pb}}}{C_{V, \\text{C}}} = \\frac{\\left(\\frac{1}{\\Theta_{D, \\text{Pb}}}\\right)^3}{\\left(\\frac{1}{\\Theta_{D, \\text{C}}}\\right)^3}\n$$\n\n这可以简化为：\n$$\n\\frac{C_{V, \\text{Pb}}}{C_{V, \\text{C}}} = \\left(\\frac{\\Theta_{D, \\text{C}}}{\\Theta_{D, \\text{Pb}}}\\right)^3\n$$\n\n现在我们代入给定的德拜温度数值：\n$$\n\\frac{C_{V, \\text{Pb}}}{C_{V, \\text{C}}} = \\left(\\frac{2230 \\, \\text{K}}{105 \\, \\text{K}}\\right)^3\n$$\n\n首先，计算德拜温度的比值：\n$$\n\\frac{2230}{105} \\approx 21.238095\n$$\n\n然后，计算这个值的立方：\n$$\n\\left(21.238095\\right)^3 \\approx 9579.54\n$$\n\n问题要求答案保留三位有效数字。用科学记数法表示，这是 $9.57954 \\times 10^3$。四舍五入到三位有效数字得到 $9.58 \\times 10^3$。\n\n这个结果在物理上意味着，在 4.20 K 时，铅的摩尔热容几乎是金刚石的 10,000 倍。这是因为金刚石是一种“更硬”的材料（声速更高，化学键更强），因此其振动模式在低温下更难被激发，导致其热容非常低。", "answer": "$$\\boxed{9.58 \\times 10^{3}}$$", "id": "1813233"}, {"introduction": "理论模型的最终检验标准在于其描述和解释实验数据的能力。最后一个实践练习将带领我们扮演实验物理学家或计算科学家的角色，直面一个核心挑战：如何从真实的低温热容数据中提取出关键物理参数。在这个计算任务中，我们将通过非线性最小二乘法拟合，将包含晶格和电子贡献的完整热容模型与合成数据进行比对，从而精确确定材料的德拜温度 $\\Theta_D$。[@problem_id:2408089]", "problem": "你的任务是通过使用最小二乘数据拟合，将低温摩尔热容数据与德拜模型进行拟合，从而确定晶体固体的德拜温度（用 $\\Theta_{D}$ 表示）。\n\n请从晶体固体中晶格振动的基本原理出发：假设声子色散关系在截止角频率 $\\omega_{D}$ 以下是线性的，即 $\\omega = v_{s} k$，并使用声子的玻色-爱因斯坦分布。在德拜近似中，声子态密度在 $\\omega_{D}$ 以下与 $\\omega^{2}$ 成正比。请将每摩尔内能表示为对所有声子模式进行积分的形式，其中包含玻色-爱因斯坦占据数，然后通过对温度 $T$ 求导得到定容摩尔热容 $C_{V}(T)$。在本任务所关注的低温区，你可以假设定压摩尔热容 $C_{P}(T)$ 近似等于 $C_{V}(T)$，因为对于低温固体，二者之差可以忽略不计。对于金属，需要包含一个独立的传导电子贡献项，该项与 $T$ 成线性关系，并由系数 $\\gamma$ 参数化。\n\n你的程序必须以科学上合理且数值上稳定的方式实现以下步骤：\n1. 从第一性原理推导出德拜模型中摩尔晶格热容 $C_{\\text{lat}}(T,\\Theta_{D})$ 的表达式，该表达式为一个包含无量纲变量和德拜温度 $\\Theta_{D}$ 的积分。然后构建总的低温摩尔热容模型\n   $$C_{\\text{model}}(T;\\Theta_{D},\\gamma) = C_{\\text{lat}}(T,\\Theta_{D}) + \\gamma\\,T,$$\n   其中 $\\gamma$ 是电子系数（对于绝缘体，$\\gamma = 0$）。\n2. 使用提供的合成数据集 $(T_{i}, C_{i}, \\sigma_{i})$，为参数 $\\Theta_{D}$ 和 $\\gamma$ 建立一个加权非线性最小二乘拟合。其中 $T_{i}$ 是温度，$C_{i}$ 是观测到的摩尔热容，$\\sigma_{i}$ 是已知的标准不确定度，用作权重。\n3. 为确保数值稳定性，选择合理的参数边界以强制 $\\Theta_{D} > 0$ 和 $\\gamma \\ge 0$，并提供有物理动机的初始猜测值。利用德拜模型在低温下的三次方行为来构建 $\\Theta_{D}$ 的初始猜测值，并利用在极低温下 $C(T)/T$ 中的近线性项来构建 $\\gamma$ 的初始猜测值。\n4. 使用可靠的数值积分方法来计算 $C_{\\text{lat}}(T,\\Theta_{D})$ 中的德拜积分，并根据数值稳定性的需要，谨慎处理大的积分限和大小参数。\n\n物理常数和单位：\n- 使用摩尔气体常数 $R$，单位为焦耳每摩尔每开尔文（$\\mathrm{J \\, mol^{-1} \\, K^{-1}}$）。\n- 温度 $T$ 和德拜温度 $\\Theta_{D}$ 必须以开尔文（$\\mathrm{K}$）为单位。\n- 热容 $C$ 必须以焦耳每摩尔每开尔文（$\\mathrm{J \\, mol^{-1} \\, K^{-1}}$）为单位。\n- 电子系数 $\\gamma$ 必须以焦耳每摩尔每开尔文平方（$\\mathrm{J \\, mol^{-1} \\, K^{-2}}$）为单位。\n- 以开尔文（$\\mathrm{K}$）为单位表示最终拟合的 $\\Theta_{D}$ 值。\n\n测试套件（合成数据集将完全按照规定生成）：\n对于每个数据集，使用真实参数从模型中构建 $C_{i}$，并添加一个小的确定性扰动 $\\varepsilon_{i}$ 来模拟测量噪声。具体来说，对于每个温度 $T_{i}$，\n$$C_{i} = C_{\\text{lat}}(T_{i},\\Theta_{D}^{\\ast}) + \\gamma^{\\ast} T_{i} + \\varepsilon_{i},$$\n其中已知的 $\\sigma_{i}$ 将在拟合中用作权重。使用以下三个数据集：\n\n- 数据集 A（绝缘体）：\n  - 真实参数：$\\Theta_{D}^{\\ast} = 220.0\\,\\mathrm{K}$，$\\gamma^{\\ast} = 0.0\\,\\mathrm{J \\, mol^{-1} \\, K^{-2}}$。\n  - 温度（开尔文）：$T = [\\,4,\\,6,\\,8,\\,10,\\,12,\\,14,\\,16,\\,18,\\,20,\\,22,\\,24,\\,26,\\,28\\,]$。\n  - 确定性扰动：$\\varepsilon_{i} = a \\sin(b T_{i})$，其中 $a = 0.003\\,\\mathrm{J \\, mol^{-1} \\, K^{-1}}$，$b = 0.25\\,\\mathrm{rad\\,K^{-1}}$。\n  - 不确定度：对所有 $i$，$\\sigma_{i} = 0.003\\,\\mathrm{J \\, mol^{-1} \\, K^{-1}}$。\n\n- 数据集 B（金属）：\n  - 真实参数：$\\Theta_{D}^{\\ast} = 310.0\\,\\mathrm{K}$，$\\gamma^{\\ast} = 0.0012\\,\\mathrm{J \\, mol^{-1} \\, K^{-2}}$。\n  - 温度（开尔文）：$T = [\\,2,\\,3,\\,4,\\,5,\\,6,\\,7,\\,8,\\,9,\\,10,\\,11,\\,12\\,]$。\n  - 确定性扰动：$\\varepsilon_{i} = a \\cos(b T_{i})$，其中 $a = 0.001\\,\\mathrm{J \\, mol^{-1} \\, K^{-1}}$，$b = 0.20\\,\\mathrm{rad\\,K^{-1}}$。\n  - 不确定度：对所有 $i$，$\\sigma_{i} = 0.001\\,\\mathrm{J \\, mol^{-1} \\, K^{-1}}$。\n\n- 数据集 C（绝缘体，极低温，稀疏数据）：\n  - 真实参数：$\\Theta_{D}^{\\ast} = 150.0\\,\\mathrm{K}$，$\\gamma^{\\ast} = 0.0\\,\\mathrm{J \\, mol^{-1} \\, K^{-2}}$。\n  - 温度（开尔文）：$T = [\\,1,\\,2,\\,3,\\,4,\\,5,\\,6\\,]$。\n  - 确定性扰动：$\\varepsilon_{i} = a \\sin(b T_{i})$，其中 $a = 0.0005\\,\\mathrm{J \\, mol^{-1} \\, K^{-1}}$，$b = 0.50\\,\\mathrm{rad\\,K^{-1}}$。\n  - 不确定度：对所有 $i$，$\\sigma_{i} = 0.0005\\,\\mathrm{J \\, mol^{-1} \\, K^{-1}}$。\n\n算法和数值要求：\n- 使用鲁棒的非线性最小二乘法独立估计每个数据集的 $(\\Theta_{D},\\gamma)$，将提供的 $\\sigma_{i}$ 视为加权拟合中的绝对标准差。\n- 使用有物理意义的参数边界，强制要求 $\\Theta_{D} > 0$ 和 $\\gamma \\ge 0$。\n- 根据德拜模型的低温渐近行为推导初始猜测值，但不在问题陈述中透露明确的快捷公式。\n\n最终输出规格：\n- 你的程序必须生成单行输出，其中包含数据集 A、B 和 C 的拟合德拜温度，按此顺序排列，每个值都四舍五入到恰好两位小数，单位为开尔文（$\\mathrm{K}$），格式为逗号分隔的 Python 风格列表。例如，程序输出必须类似于\n  $$[\\,\\Theta_{D,A}, \\Theta_{D,B}, \\Theta_{D,C}\\,],$$\n  其中每个条目都是一个四舍五入到两位小数的浮点数，不打印单位。", "solution": "问题陈述已经过严格审阅，并被确定为有效。它在科学上基于固态物理学的原理，特别是晶格热容的德拜模型和电子热容的自由电子模型。该问题是适定的，为执行加权非线性最小二乘拟合提供了所有必要的数据、模型定义和约束条件。其语言客观、精确，要求可进行算法形式化。因此，我们可以着手解决。\n\n主要目标是通过将摩尔热容 $C(T)$ 的实验数据与一个理论模型进行拟合，来确定固体的德拜温度 $\\Theta_D$。该模型必须同时考虑晶格振动（声子）和（对于金属而言）传导电子。\n\n首先，我们从基本原理推导摩尔晶格热容 $C_{\\text{lat}}(T, \\Theta_D)$ 的表达式。一摩尔固体的晶格振动总内能 $U$ 是所有 $3 N_A$ 个声子模式的平均能量之和，其中 $N_A$ 是阿伏伽德罗常数。在德拜模型中，假设声子谱在截止频率 $\\omega_D$ 以下是连续的，这个和就变成了对声子态密度 $g(\\omega)$ 的积分：\n$$ U = \\int_{0}^{\\omega_D} \\hbar\\omega \\, \\langle n(\\omega, T) \\rangle \\, g(\\omega) \\, d\\omega $$\n这里，$\\hbar$ 是约化普朗克常数，$\\langle n(\\omega, T) \\rangle = (e^{\\hbar\\omega/k_BT} - 1)^{-1}$ 是频率为 $\\omega$ 的声子模式在温度 $T$ 下的平均占据数，由玻色-爱因斯坦分布给出，其中 $k_B$ 是玻尔兹曼常数。\n\n德拜模型假设态密度为 $g(\\omega) = A\\omega^2$。归一化常数 $A$ 通过要求每摩尔的总模式数为 $3N_A$ 来确定：\n$$ \\int_{0}^{\\omega_D} g(\\omega) \\, d\\omega = \\int_{0}^{\\omega_D} A\\omega^2 \\, d\\omega = A\\frac{\\omega_D^3}{3} = 3N_A \\implies A = \\frac{9N_A}{\\omega_D^3} $$\n因此，摩尔内能为：\n$$ U = \\frac{9N_A\\hbar}{\\omega_D^3} \\int_{0}^{\\omega_D} \\frac{\\omega^3}{e^{\\hbar\\omega/k_BT} - 1} \\, d\\omega $$\n定容摩尔热容为 $C_V = (\\partial U / \\partial T)_V$。对 $U$ 的表达式关于 $T$ 求导，可以得到一个对于数值计算是鲁棒的标准形式。引入无量纲积分变量 $x = \\hbar\\omega/k_BT$ 和德拜温度 $\\Theta_D = \\hbar\\omega_D/k_B$，我们得到：\n$$ C_{\\text{lat}}(T, \\Theta_D) = 9R \\left(\\frac{T}{\\Theta_D}\\right)^3 \\int_{0}^{\\Theta_D/T} \\frac{x^4 e^x}{(e^x-1)^2} \\, dx $$\n其中 $R = N_A k_B$ 是摩尔气体常数。在该问题关注的低温下，定压热容和定容热容之差可以忽略不计，因此我们可以将 $C_{\\text{lat}}$ 等同于测量的晶格热容。\n\n对于金属，我们必须加上电子贡献项，该项与温度成线性关系：$C_{\\text{el}}(T) = \\gamma T$，其中 $\\gamma$ 是索末菲系数。因此，总的摩尔热容模型是：\n$$ C_{\\text{model}}(T; \\Theta_D, \\gamma) = C_{\\text{lat}}(T, \\Theta_D) + \\gamma T $$\n对于绝缘体，$\\gamma = 0$。\n\n参数 $\\Theta_D$ 和 $\\gamma$ 通过最小化模型与带测量不确定度 $\\sigma_i$ 的实验数据点 $(T_i, C_i)$ 之间的加权残差平方和 $\\chi^2$ 来确定：\n$$ \\chi^2(\\Theta_D, \\gamma) = \\sum_{i=1}^{N} \\left( \\frac{C_i - C_{\\text{model}}(T_i; \\Theta_D, \\gamma)}{\\sigma_i} \\right)^2 $$\n这是一个标准的加权非线性最小二乘问题，我们使用 `scipy.optimize.curve_fit` 函数并遵守物理约束 $\\Theta_D > 0$ 和 $\\gamma \\ge 0$ 来求解。\n\n非线性拟合算法的稳定收敛需要良好的初始参数估计值。这些值可以从模型的低温渐近行为推导出来。对于 $T \\ll \\Theta_D$，德拜积分的上限 $\\Theta_D/T \\to \\infty$，积分收敛于常数 $\\int_0^\\infty [x^4 e^x / (e^x-1)^2] dx = 4\\pi^4/15$。因此，晶格热容遵循著名的德拜 $T^3$ 定律：\n$$ C_{\\text{lat}}(T, \\Theta_D) \\approx \\left(\\frac{12\\pi^4 R}{5\\Theta_D^3}\\right) T^3 = A_D T^3 $$\n总热容为 $C_{\\text{model}} \\approx A_D T^3 + \\gamma T$。整理此表达式可揭示一个线性关系：\n$$ \\frac{C_{\\text{model}}}{T} \\approx \\gamma + A_D T^2 $$\n通过对变换后的实验数据 $(T_i^2, C_i/T_i)$ 进行线性回归，我们可以获得初始猜测值。直线 $y=mx+c$ 的截距为 $\\gamma_0$ 提供了估计值，而斜率则通过关系 $A_D = m$ 提供了 $\\Theta_{D,0}$ 的估计值：\n$$ \\gamma_0 = c \\quad ; \\quad \\Theta_{D,0} = \\left(\\frac{12\\pi^4 R}{5m}\\right)^{1/3} $$\n这种方法为非线性优化提供了鲁棒的、有物理动机的初值。\n\n实现过程包括为 $C_{\\text{model}}(T, \\Theta_D, \\gamma)$ 创建一个 Python 函数，该函数使用 `scipy.integrate.quad` 来数值计算德拜积分。对于每个数据集，按规定生成合成数据。然后，计算初始猜测值，并使用数据、不确定度、初始猜测值和参数边界执行 `scipy.optimize.curve_fit`。然后收集每个数据集拟合得到的 $\\Theta_D$ 值，并以要求的格式打印。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import constants, integrate, optimize\n\ndef solve():\n    \"\"\"\n    Solves for the Debye temperature by fitting heat capacity data.\n    \"\"\"\n    # Define physical constant R\n    R = constants.R  # Molar gas constant in J/(mol K)\n\n    def debye_integrand(x):\n        \"\"\"\n        Numerically stable integrand for the Debye heat capacity formula.\n        \"\"\"\n        # The term np.expm1(x) is equivalent to np.exp(x) - 1, but is\n        # more numerically stable for small x.\n        if np.isclose(x, 0.0):\n            return 0.0\n        return (x**4 * np.exp(x)) / (np.expm1(x))**2\n\n    def C_lat(T, Theta_D):\n        \"\"\"\n        Molar lattice heat capacity from the Debye model.\n        Args:\n            T (float or np.ndarray): Temperature(s) in Kelvin.\n            Theta_D (float): Debye temperature in Kelvin.\n        Returns:\n            float or np.ndarray: Lattice heat capacity in J/(mol K).\n        \"\"\"\n        if Theta_D <= 0:\n            return np.inf\n        \n        T_arr = np.atleast_1d(T)\n        results = np.zeros_like(T_arr, dtype=float)\n\n        for i, temp in enumerate(T_arr):\n            if temp <= 0:\n                results[i] = 0.0\n                continue\n            \n            upper_limit = Theta_D / temp\n            integral_val, _ = integrate.quad(debye_integrand, 0, upper_limit)\n            \n            prefactor = 9.0 * R * (temp / Theta_D)**3\n            results[i] = prefactor * integral_val\n        \n        return results if len(results) > 1 else results[0]\n\n    def C_model(T, Theta_D, gamma):\n        \"\"\"\n        Total molar heat capacity model (lattice + electronic).\n        \"\"\"\n        return C_lat(T, Theta_D) + gamma * T\n\n    def get_initial_guesses(T, C_obs):\n        \"\"\"\n        Calculates initial guesses for Theta_D and gamma based on the\n        low-temperature limit C/T = gamma + A*T^2.\n        \"\"\"\n        x_fit = T**2\n        y_fit = C_obs / T\n        \n        # Perform a linear fit: y = intercept + slope * x\n        slope, intercept = np.polyfit(x_fit, y_fit, 1)\n\n        # Initial guess for gamma is the intercept\n        gamma_0 = max(0.0, intercept)\n\n        # Initial guess for Theta_D comes from the slope\n        # slope = (12 * pi^4 * R) / (5 * Theta_D^3)\n        if slope <= 1e-9:\n            # If slope is non-positive or very small, use a default guess\n            Theta_D_0 = 200.0\n        else:\n            Theta_D_0 = ((12.0 * np.pi**4 * R) / (5.0 * slope))**(1.0/3.0)\n        \n        # Sanity check for Theta_D_0\n        if not np.isfinite(Theta_D_0) or Theta_D_0 <= 1.0 or Theta_D_0 > 2000.0:\n            Theta_D_0 = 200.0\n\n        return Theta_D_0, gamma_0\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"Theta_D_star\": 220.0, \"gamma_star\": 0.0,\n            \"T_vals\": np.array([4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28], dtype=float),\n            \"noise_a\": 0.003, \"noise_b\": 0.25,\n            \"noise_func\": lambda t, a, b: a * np.sin(b * t),\n            \"sigma_val\": 0.003\n        },\n        {\n            \"Theta_D_star\": 310.0, \"gamma_star\": 0.0012,\n            \"T_vals\": np.array([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype=float),\n            \"noise_a\": 0.001, \"noise_b\": 0.20,\n            \"noise_func\": lambda t, a, b: a * np.cos(b * t),\n            \"sigma_val\": 0.001\n        },\n        {\n            \"Theta_D_star\": 150.0, \"gamma_star\": 0.0,\n            \"T_vals\": np.array([1, 2, 3, 4, 5, 6], dtype=float),\n            \"noise_a\": 0.0005, \"noise_b\": 0.50,\n            \"noise_func\": lambda t, a, b: a * np.sin(b * t),\n            \"sigma_val\": 0.0005\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        T = case[\"T_vals\"]\n        sigma_val = case[\"sigma_val\"]\n        sigma = np.full_like(T, sigma_val, dtype=float)\n\n        # Generate synthetic experimental data\n        C_true = C_model(T, case[\"Theta_D_star\"], case[\"gamma_star\"])\n        epsilon = case[\"noise_func\"](T, case[\"noise_a\"], case[\"noise_b\"])\n        C_obs = C_true + epsilon\n\n        # Get initial guesses for the fit\n        p0 = get_initial_guesses(T, C_obs)\n\n        # Set parameter bounds: Theta_D > 0 and gamma >= 0\n        bounds = ([1E-3, 0.0], [np.inf, np.inf])\n\n        # Perform the weighted nonlinear least-squares fit\n        popt, _ = optimize.curve_fit(\n            C_model,\n            T,\n            C_obs,\n            p0=p0,\n            sigma=sigma,\n            bounds=bounds,\n            absolute_sigma=True,\n            method='trf'\n        )\n        \n        theta_d_fit = popt[0]\n        results.append(theta_d_fit)\n    \n    # Final print statement in the exact required format.\n    formatted_results = [f\"{val:.2f}\" for val in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2408089"}]}