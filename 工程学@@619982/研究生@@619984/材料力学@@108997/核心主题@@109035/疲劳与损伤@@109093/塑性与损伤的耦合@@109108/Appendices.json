{"hands_on_practices": [{"introduction": "在计算固体力学中，将本构模型付诸实践的核心是开发一个稳健的应力更新算法。本练习将引导你为耦合了损伤的J2弹塑性模型推导并应用一个完全隐式的返回映射算法。通过在有效应力空间中执行塑性计算，本实践旨在巩固你对应用应变等效原理和掌握计算塑性力学中基本数值程序的理解。", "problem": "一个小应变、各向同性的、损伤耦合的 von Mises (J2) 弹塑性实体遵循应变等效假设。令 $d \\in [0,1)$ 表示标量损伤变量。未损伤（有效）应力由 $\\tilde{\\boldsymbol{\\sigma}} = \\mathbb{C} : \\boldsymbol{\\varepsilon}^{e}$ 定义，其中 $\\boldsymbol{\\varepsilon}^{e} = \\boldsymbol{\\varepsilon} - \\boldsymbol{\\varepsilon}^{p}$，各向同性线弹性刚度 $\\mathbb{C}$ 由杨氏模量 $E$ 和泊松比 $\\nu$ 决定。Cauchy 应力遵循应变等效，即 $\\boldsymbol{\\sigma} = (1-d)\\,\\tilde{\\boldsymbol{\\sigma}}$。塑性行为由一个以有效应力表示并包含线性各向同性硬化的 von Mises 屈服条件控制，\n$$\nf(\\tilde{\\boldsymbol{\\sigma}},\\bar{\\varepsilon}^{p}) = \\left\\| \\tilde{\\boldsymbol{s}} \\right\\| - \\sqrt{\\frac{2}{3}}\\left(\\sigma_{y0} + H\\,\\bar{\\varepsilon}^{p}\\right) \\le 0,\n$$\n其中 $\\tilde{\\boldsymbol{s}} = \\tilde{\\boldsymbol{\\sigma}} - \\tfrac{1}{3}(\\operatorname{tr}\\tilde{\\boldsymbol{\\sigma}})\\boldsymbol{I}$ 是偏量部分，$\\|\\cdot\\|$ 是 Frobenius 范数，$\\sigma_{y0}$ 是初始屈服应力，$H$ 是各向同性硬化模量，$\\bar{\\varepsilon}^{p}$ 是累积等效塑性应变。相关联流动法则和硬化法则为\n$$\n\\dot{\\boldsymbol{\\varepsilon}}^{p} = \\dot{\\gamma}\\,\\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}, \n\\qquad\n\\dot{\\bar{\\varepsilon}}^{p} = \\sqrt{\\frac{2}{3}}\\,\\dot{\\gamma},\n\\qquad\n\\dot{\\gamma} \\ge 0,\n\\qquad\n\\dot{\\gamma}\\, f = 0.\n$$\n损伤根据由累积等效塑性应变驱动的线性软化定律进行演化，\n$$\nd = a\\,\\bar{\\varepsilon}^{p},\n$$\n其中 $a>0$ 为已知常数，且在所考虑的加载历史中 $d<1$。\n\n考虑从状态 $n$ 到状态 $n+1$ 的单个隐式时间步，给定总应变增量和已知的先前内变量。假设在该步开始时给出以下数据：\n- $E = 210{,}000$ $\\mathrm{MPa}$，$\\nu = 0.3$，$\\sigma_{y0} = 250$ $\\mathrm{MPa}$，$H = 1{,}000$ $\\mathrm{MPa}$，$a = 0.2$。\n- $\\boldsymbol{\\varepsilon}^{p}_{n} = \\boldsymbol{0}$，$\\bar{\\varepsilon}^{p}_{n} = 0$，$d_{n} = 0$。\n- $n+1$ 时刻施加的小应变张量是纯偏量的，\n$$\n\\boldsymbol{\\varepsilon}_{n+1} = \n\\begin{pmatrix}\n1.5 \\times 10^{-3} & 0 & 0 \\\\\n0 & -7.5 \\times 10^{-4} & 0 \\\\\n0 & 0 & -7.5 \\times 10^{-4}\n\\end{pmatrix}.\n$$\n\n任务：\n1) 从应变等效原理、线弹性和上述 von Mises (J2) 框架出发，推导一个在有效应力空间中的全隐式返回映射应力更新算法，其中包括：试探有效状态的构建、屈服检查和塑性修正（如果需要）。清晰地陈述定义塑性乘子增量 $\\Delta \\gamma$、更新后的有效应力、更新后的累积等效塑性应变以及 $n+1$ 时刻更新后的损伤的方程。\n\n2) 使用你推导的更新算法，计算给定时间步的塑性乘子增量 $\\Delta \\gamma$。将 $\\Delta \\gamma$ 的最终数值答案表示为一个纯数（无量纲），并四舍五入到四位有效数字。无需其他输出。使用以 MPa 为单位的给定材料常数，并注意应变是无量纲的。", "solution": "首先对问题陈述进行严格验证。\n\n**步骤 1：提取给定条件**\n\n- **本构关系**:\n    - 应变等效：$\\boldsymbol{\\sigma} = (1-d)\\,\\tilde{\\boldsymbol{\\sigma}}$\n    - 有效应力-应变 (Hooke 定律)：$\\tilde{\\boldsymbol{\\sigma}} = \\mathbb{C} : \\boldsymbol{\\varepsilon}^{e}$\n    - 应变分解：$\\boldsymbol{\\varepsilon}^{e} = \\boldsymbol{\\varepsilon} - \\boldsymbol{\\varepsilon}^{p}$\n    - 各向同性弹性刚度 $\\mathbb{C}$ 由杨氏模量 $E$ 和泊松比 $\\nu$ 定义。\n    - 损伤变量：$d \\in [0,1)$\n- **塑性模型**:\n    - 屈服函数：$f(\\tilde{\\boldsymbol{\\sigma}},\\bar{\\varepsilon}^{p}) = \\left\\| \\tilde{\\boldsymbol{s}} \\right\\| - \\sqrt{\\frac{2}{3}}\\left(\\sigma_{y0} + H\\,\\bar{\\varepsilon}^{p}\\right) \\le 0$，其中 $\\tilde{\\boldsymbol{s}} = \\operatorname{dev}(\\tilde{\\boldsymbol{\\sigma}})$。\n    - 相关联流动法则：$\\dot{\\boldsymbol{\\varepsilon}}^{p} = \\dot{\\gamma}\\,\\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}$\n    - 硬化定律：$\\dot{\\bar{\\varepsilon}}^{p} = \\sqrt{\\frac{2}{3}}\\,\\dot{\\gamma}$\n    - Kuhn-Tucker 条件：$\\dot{\\gamma} \\ge 0, \\quad \\dot{\\gamma}\\, f = 0$\n- **损伤演化**:\n    - $d = a\\,\\bar{\\varepsilon}^{p}$，其中 $a>0$ 为常数。\n- **材料常数**:\n    - $E = 210,000$ $\\mathrm{MPa}$\n    - $\\nu = 0.3$\n    - $\\sigma_{y0} = 250$ $\\mathrm{MPa}$\n    - $H = 1,000$ $\\mathrm{MPa}$\n    - $a = 0.2$\n- **初始条件（状态 $n$）**:\n    - $\\boldsymbol{\\varepsilon}^{p}_{n} = \\boldsymbol{0}$\n    - $\\bar{\\varepsilon}^{p}_{n} = 0$\n    - $d_{n} = 0$\n- **施加应变（状态 $n+1$）**:\n    - $\\boldsymbol{\\varepsilon}_{n+1} = \\begin{pmatrix} 1.5 \\times 10^{-3} & 0 & 0 \\\\ 0 & -7.5 \\times 10^{-4} & 0 \\\\ 0 & 0 & -7.5 \\times 10^{-4} \\end{pmatrix}$\n\n**步骤 2：使用提取的给定条件进行验证**\n\n评估问题的有效性。\n- **科学合理性**：该问题描述了计算固体力学中一个标准的、广泛使用的模型，具体是一个通过应变等效原理与各向同性损伤耦合的 J2 弹塑性模型。控制方程基于连续介质力学的基本原理。所有方面都具有科学依据。\n- **适定性与完整性**：该问题被构建为一个标准的隐式时间积分步。它提供了计算下一步状态变量所需的所有本构律、材料参数和初始/边界条件（以规定的总应变形式）。目标明确。该问题是自洽且适定的。\n- **客观性**：语言精确，使用了标准的数学和工程术语。没有主观或模糊的陈述。\n\n**步骤 3：结论与行动**\n\n问题有效。将制定严谨的解决方案。\n\n---\n\n**第 1 部分：隐式应力更新算法的推导**\n\n更新过程遵循标准的弹性预测、塑性修正方法，用于从状态 $n$ 到 $n+1$ 的单个隐式时间步。除非特别指明，所有在 $n+1$ 时刻的量都是未知的。我们使用 $\\Delta(\\cdot) = (\\cdot)_{n+1} - (\\cdot)_{n}$。\n\n首先，观察模型的结构至关重要。塑性演化（屈服函数、流动法则、硬化）完全在有效应力空间中建立，并且独立于损伤变量 $d$。损伤演化由塑性应变驱动，但它不会反馈到塑性状态的确定中。这表示一个从塑性到损伤的单向耦合，从而简化了算法：可以首先执行塑性返回映射，然后更新损伤变量。\n\n**1. 弹性预测（试探状态）**\n假设该步是纯弹性的，因此 $\\Delta\\boldsymbol{\\varepsilon}^{p} = \\boldsymbol{0}$ 且 $\\Delta\\bar{\\varepsilon}^{p} = 0$。$n+1$ 步的内变量被冻结在它们在 $n$ 步的值上：\n$\\boldsymbol{\\varepsilon}^{p,\\text{trial}} = \\boldsymbol{\\varepsilon}^{p}_{n}$ 且 $\\bar{\\varepsilon}^{p,\\text{trial}} = \\bar{\\varepsilon}^{p}_{n}$。\n\n试探弹性应变为 $\\boldsymbol{\\varepsilon}^{e,\\text{trial}} = \\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n}$。\n试探有效应力使用 Hooke 定律计算：\n$$\n\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} = \\mathbb{C} : \\boldsymbol{\\varepsilon}^{e,\\text{trial}} = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n})\n$$\n偏量部分为 $\\tilde{\\boldsymbol{s}}^{\\text{trial}} = \\operatorname{dev}(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}})$。\n\n**2. 屈服检查**\n根据屈服条件检查试探状态：\n$$\nf^{\\text{trial}} = f(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}, \\bar{\\varepsilon}^{p}_{n}) = \\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - \\sqrt{\\frac{2}{3}} (\\sigma_{y0} + H \\bar{\\varepsilon}^{p}_{n})\n$$\n如果 $f^{\\text{trial}} \\le 0$，则弹性假设正确。该步是弹性的，$\\Delta\\gamma = 0$。最终状态即为试探状态：$\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}$，$\\boldsymbol{\\varepsilon}^{p}_{n+1} = \\boldsymbol{\\varepsilon}^{p}_{n}$，$\\bar{\\varepsilon}^{p}_{n+1} = \\bar{\\varepsilon}^{p}_{n}$，$d_{n+1} = d_{n}$。\n如果 $f^{\\text{trial}} > 0$，则发生塑性流动。需要进行塑性修正。\n\n**3. 塑性修正（返回映射）**\n如果发生塑性，则 $n+1$ 时刻的状态必须满足积分后的演化方程和一致性条件 $f(\\tilde{\\boldsymbol{\\sigma}}_{n+1}, \\bar{\\varepsilon}^{p}_{n+1}) = 0$。我们使用后向欧拉积分方案。\n\n塑性应变增量为 $\\Delta\\boldsymbol{\\varepsilon}^{p} = \\Delta\\gamma \\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}\\Big|_{n+1}$。von Mises 屈服面的法向量为 $\\boldsymbol{N}_{n+1} = \\frac{\\partial f}{\\partial \\tilde{\\boldsymbol{\\sigma}}}\\Big|_{n+1} = \\frac{\\tilde{\\boldsymbol{s}}_{n+1}}{\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|}$。因此，$\\Delta\\boldsymbol{\\varepsilon}^{p} = \\Delta\\gamma \\frac{\\tilde{\\boldsymbol{s}}_{n+1}}{\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|}$。\n$n+1$ 时刻的应力与试探应力相关：\n$$\n\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n+1}) = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}^{p}_{n} - \\Delta\\boldsymbol{\\varepsilon}^{p}) = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} - \\mathbb{C} : \\Delta\\boldsymbol{\\varepsilon}^{p}\n$$\n对于各向同性弹性，$\\mathbb{C}:\\Delta\\boldsymbol{\\varepsilon}^{p} = 2G \\Delta\\boldsymbol{\\varepsilon}^{p} + \\lambda \\operatorname{tr}(\\Delta\\boldsymbol{\\varepsilon}^{p})\\boldsymbol{I}$。由于 $\\boldsymbol{N}_{n+1}$ 是偏量，$\\operatorname{tr}(\\Delta\\boldsymbol{\\varepsilon}^{p}) = 0$，所以 $\\mathbb{C}:\\Delta\\boldsymbol{\\varepsilon}^{p} = 2G \\Delta\\boldsymbol{\\varepsilon}^{p}$，其中 $G = \\frac{E}{2(1+\\nu)}$ 是剪切模量。\n$$\n\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} - 2G \\Delta\\boldsymbol{\\varepsilon}^{p}\n$$\n此方程的偏量部分为 $\\tilde{\\boldsymbol{s}}_{n+1} = \\tilde{\\boldsymbol{s}}^{\\text{trial}} - 2G \\Delta\\boldsymbol{\\varepsilon}^{p} = \\tilde{\\boldsymbol{s}}^{\\text{trial}} - 2G \\Delta\\gamma \\frac{\\tilde{\\boldsymbol{s}}_{n+1}}{\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|}$。\n该方程表明 $\\tilde{\\boldsymbol{s}}_{n+1}$ 和 $\\tilde{\\boldsymbol{s}}^{\\text{trial}}$ 是共轴的。取 Frobenius 范数可得到偏应力大小的标准径向返回映射：\n$$\n\\|\\tilde{\\boldsymbol{s}}_{n+1}\\| = \\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - 2G \\Delta\\gamma\n$$\n累积塑性应变更新为 $\\bar{\\varepsilon}^{p}_{n+1} = \\bar{\\varepsilon}^{p}_{n} + \\Delta\\bar{\\varepsilon}^{p} = \\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma$。\n将 $\\|\\tilde{\\boldsymbol{s}}_{n+1}\\|$ 和 $\\bar{\\varepsilon}^{p}_{n+1}$ 代入一致性条件 $f_{n+1} = 0$：\n$$\n\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - 2G \\Delta\\gamma - \\sqrt{\\frac{2}{3}}[\\sigma_{y0} + H(\\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma)] = 0\n$$\n求解这个关于 $\\Delta\\gamma$ 的线性方程：\n$$\n\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - \\sqrt{\\frac{2}{3}}(\\sigma_{y0} + H\\bar{\\varepsilon}^{p}_{n}) = \\Delta\\gamma (2G + \\frac{2}{3}H)\n$$\n左侧恰好是试探屈服函数值 $f^{\\text{trial}}$。因此，塑性乘子增量为：\n$$\n\\Delta\\gamma = \\frac{f^{\\text{trial}}}{2G + \\frac{2}{3}H}\n$$\n一旦 $\\Delta\\gamma$ 已知，即可更新 $n+1$ 时刻的内变量：\n- 累积等效塑性应变：$\\bar{\\varepsilon}^{p}_{n+1} = \\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma$\n- 有效应力：$\\tilde{\\boldsymbol{s}}_{n+1} = (1 - \\frac{2G\\Delta\\gamma}{\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\|})\\tilde{\\boldsymbol{s}}^{\\text{trial}}$。静水压力部分保持不变，$\\operatorname{tr}(\\tilde{\\boldsymbol{\\sigma}}_{n+1})=\\operatorname{tr}(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}})$，因此 $\\tilde{\\boldsymbol{\\sigma}}_{n+1} = \\tilde{\\boldsymbol{s}}_{n+1} + \\frac{1}{3}\\operatorname{tr}(\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}})\\boldsymbol{I}$。\n- 损伤：$d_{n+1} = a\\,\\bar{\\varepsilon}^{p}_{n+1} = a(\\bar{\\varepsilon}^{p}_{n} + \\sqrt{\\frac{2}{3}}\\Delta\\gamma)$\n\n至此完成了更新算法的推导。\n\n**第 2 部分：针对给定步骤的数值计算**\n\n我们将推导出的公式应用于给定的数据。\n\n**1. 弹性常数**\n$E = 210000$ $\\mathrm{MPa}$，$\\nu = 0.3$。\n剪切模量：$G = \\frac{E}{2(1+\\nu)} = \\frac{210000}{2(1+0.3)} = \\frac{210000}{2.6} = \\frac{105000}{1.3}$ $\\mathrm{MPa}$。\n\n**2. 试探状态计算**\n初始条件：$\\boldsymbol{\\varepsilon}^{p}_{n} = \\boldsymbol{0}$ 且 $\\bar{\\varepsilon}^{p}_{n}=0$。\n施加的应变 $\\boldsymbol{\\varepsilon}_{n+1}$ 的迹为 $\\operatorname{tr}(\\boldsymbol{\\varepsilon}_{n+1}) = 1.5 \\times 10^{-3} - 7.5 \\times 10^{-4} - 7.5 \\times 10^{-4} = 0$，因此是纯偏量的。\n试探弹性应变为 $\\boldsymbol{\\varepsilon}^{e,\\text{trial}} = \\boldsymbol{\\varepsilon}_{n+1}$。\n试探有效应力为 $\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}} = 2G \\boldsymbol{\\varepsilon}_{n+1} + \\lambda \\operatorname{tr}(\\boldsymbol{\\varepsilon}_{n+1})\\boldsymbol{I} = 2G \\boldsymbol{\\varepsilon}_{n+1}$。\n由于 $\\boldsymbol{\\varepsilon}_{n+1}$ 是偏量的，$\\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}$ 也是偏量的，因此 $\\tilde{\\boldsymbol{s}}^{\\text{trial}} = \\tilde{\\boldsymbol{\\sigma}}^{\\text{trial}}$。\n\n试探偏应力的 Frobenius 范数为 $\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| = 2G \\|\\boldsymbol{\\varepsilon}_{n+1}\\|$。\n$\\|\\boldsymbol{\\varepsilon}_{n+1}\\| = \\sqrt{(1.5 \\times 10^{-3})^2 + (-7.5 \\times 10^{-4})^2 + (-7.5 \\times 10^{-4})^2}$\n$\\|\\boldsymbol{\\varepsilon}_{n+1}\\| = \\sqrt{2.25 \\times 10^{-6} + 0.5625 \\times 10^{-6} + 0.5625 \\times 10^{-6}} = \\sqrt{3.375 \\times 10^{-6}}$。\n\n$\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| = 2 \\left(\\frac{105000}{1.3}\\right) \\sqrt{3.375 \\times 10^{-6}} = \\frac{210000}{1.3} \\times \\sqrt{3.375} \\times 10^{-3} = \\frac{210 \\sqrt{3.375}}{1.3}$ $\\mathrm{MPa}$。\n$\\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| \\approx 296.730349$ $\\mathrm{MPa}$。\n\n**3. 屈服检查**\n当 $\\bar{\\varepsilon}^{p}_{n}=0$ 时，试探屈服函数为：\n$f^{\\text{trial}} = \\|\\tilde{\\boldsymbol{s}}^{\\text{trial}}\\| - \\sqrt{\\frac{2}{3}}\\sigma_{y0}$\n$f^{\\text{trial}} \\approx 296.730349 - \\sqrt{\\frac{2}{3}}(250) \\approx 296.730349 - 204.124145 = 92.606204$ $\\mathrm{MPa}$。\n由于 $f^{\\text{trial}} > 0$，该步是弹塑性的。\n\n**4. 塑性乘子增量 $\\Delta\\gamma$**\n塑性乘子增量计算如下：\n$$\n\\Delta\\gamma = \\frac{f^{\\text{trial}}}{2G + \\frac{2}{3}H}\n$$\n分母为：\n$2G + \\frac{2}{3}H = 2\\left(\\frac{105000}{1.3}\\right) + \\frac{2}{3}(1000) = \\frac{210000}{1.3} + \\frac{2000}{3} \\approx 161538.4615 + 666.6667 = 162205.1282$ $\\mathrm{MPa}$。\n\n现在，我们计算 $\\Delta\\gamma$：\n$$\n\\Delta\\gamma = \\frac{92.606204}{162205.1282} \\approx 0.0005709218\n$$\n塑性乘子增量是无量纲的。四舍五入到四位有效数字，我们得到 $\\Delta\\gamma = 0.0005709$。", "answer": "$$\\boxed{0.0005709}$$", "id": "2626285"}, {"introduction": "当材料进入软化阶段时，简单的局部本构模型在数值模拟中会暴露出一个根本性的缺陷——即模拟结果（如耗散能）会随着网格的细化而发生非物理性的改变。本练习旨在从第一性原理出发，揭示这种病态的网格敏感性，并展示如何通过引入梯度损伤正则化来解决这个问题。通过对比局部模型和非局部梯度模型的计算结果，你将深刻理解引入“内禀长度尺度”$ \\ell $对于客观预测材料失效的重要性。", "problem": "考虑一根长度为 $L$、横截面积恒为 $A$ 的一维杆，该杆由率无关小应变可损伤弹塑性实体构成。设轴向应变为 $\\varepsilon$，塑性应变为 $\\varepsilon_p$，标量损伤变量为 $d \\in [0,1]$。Cauchy 应力通过有效应力概念定义为 $\\sigma = (1-d)\\,E\\,(\\varepsilon - \\varepsilon_p)$，其中 $E$ 是杨氏模量。假设在位移控制下进行纯拉伸加载，因此在软化开始后允许发生局部化。对于塑性，采用一维理想化模型，其中未损伤的屈服应力为 $\\sigma_y$，并因损伤而退化为 $(1-d)\\,\\sigma_y$。对于损伤，假设其演化是率无关的，由一个单调递增的历史变量驱动，并且一旦损伤开始，就会在局部应力-应变响应中产生负切线（应变软化）。该杆通过有限元法（FEM）离散为 $N$ 个尺寸为 $h=L/N$ 的相等线性单元。\n\n您的任务是从基本原理出发，形式化地论证为何纯粹的局部应变软化损伤本构在有限元法中会产生病态的网格敏感性，并说明如何通过添加梯度损伤项引入非局部正则化，从而引入一个内禀长度尺度 $\\ell$ 来解决此问题。然后，使用推导出的表达式，为一组给定的参数计算定量预测值。\n\n使用以下基本依据和建模假设来推导必要的表达式，不得使用任何未经证明的捷径：\n- 一维线性动量平衡、能量平衡和最小势能原理。\n- 小应变运动学，其中 $\\varepsilon = u'(x)$，$u$ 是位移，$x$ 是轴向坐标。\n- 单位体积的局部自由能密度形式为 $\\psi_{\\text{loc}}(\\varepsilon,\\varepsilon_p,d) = (1-d)\\,\\tfrac{1}{2}E\\,(\\varepsilon - \\varepsilon_p)^2 + \\phi_p(\\varepsilon_p) + \\phi_d(d)$，其中率无关耗散保证了不可逆性 $\\dot d \\ge 0$ 和标准热力学力。\n- 软化开始后的网格局部化，即在位移控制下，非弹性变形局部化在尺寸为 $h$ 的单个单元内。\n- 对于梯度正则化，通过一个形式为 $\\psi_{\\nabla d} = \\tfrac{1}{2}\\,c_d\\,\\ell^2\\,|\\nabla d|^2 + \\tfrac{1}{2}\\,k_d\\,d^2$ 的二次损伤梯度贡献项来增广自由能，其中 $c_d$ 和 $k_d$ 是正的材料常数，将被标定以满足给定的单位面积断裂能 $G_c$，而 $\\ell$ 是内禀长度。证明由损伤驻值条件所蕴含的 Euler–Lagrange 方程必然包含 $\\ell$，从而强制损伤带宽度与 $\\ell$ 成比例，形成有限宽度。\n\n分三步进行：\n1. 对于单轴拉伸下的纯局部线性软化本构，其中应力在阈值应变 $\\varepsilon_0=\\sigma_y/E$ 时从 $\\sigma_y$ 线性下降到最终应变 $\\varepsilon_f>\\varepsilon_0$ 时的 $0$，推导出一个材料点在完全破坏时单位体积所耗散的能量等于软化分支下的面积，并将其表示为 $\\sigma_y$、$\\varepsilon_0$ 和 $\\varepsilon_f$ 的函数。利用此结果证明，当局部化发生在尺寸为 $h$ 的单个单元中时，杆在完全破坏时耗散的总结构能量与 $A\\,h$ 乘以逐点耗散成正比。根据此比例关系，断定局部模型中计算的耗散和峰后响应具有网格依赖性。\n2. 对于梯度损伤模型，从增广自由能密度出发，推导损伤过程区中 $d(x)$ 的一维 Euler–Lagrange 方程。证明非均匀 $d(x)$ 的特征宽度必然与 $\\ell$ 成比例，并且当 $c_d$ 和 $k_d$ 的选择能够再现目标单位面积断裂能 $G_c$ 时，结构破坏时的总耗散能变为 $A\\,G_c$，与 $h$ 无关（只要网格能够解析损伤带），从而使问题得到正则化。\n3. 使用在步骤 1 和 2 中获得的表达式，为下面的参数集计算局部模型和梯度正则化模型的达到破坏时的结构耗散，并计算每个网格的无量纲解析度参数 $h/\\ell$。您必须使用国际单位制（SI）。能量以焦耳（J）报告，解析度参数以无量纲浮点数报告。\n\n使用以下数值参数值：\n- $E = 210\\times 10^9\\,\\mathrm{Pa}$, $\\sigma_y = 400\\times 10^6\\,\\mathrm{Pa}$, $\\varepsilon_f - \\varepsilon_0 = 0.004$ 其中 $\\varepsilon_0 = \\sigma_y/E$。\n- $A = 1.0\\times 10^{-4}\\,\\mathrm{m}^2$, $L = 1.0\\,\\mathrm{m}$。\n- $G_c = 1000\\,\\mathrm{J}/\\mathrm{m}^2$, $\\ell = 0.02\\,\\mathrm{m}$。\n\n测试组（选择以下三种不同的均匀网格）：\n- 情况 1：$N=5$（粗网格），$h=L/N$。\n- 情况 2：$N=50$（网格尺寸与 $\\ell$ 相当）。\n- 情况 3：$N=500$（相对于 $\\ell$ 的细网格）。\n\n对于每种情况 $i\\in\\{1,2,3\\}$，计算：\n- $G^{\\text{loc}}_i$：局部模型预测的达到破坏时的总结构耗散，单位为 $\\mathrm{J}$。\n- $G^{\\text{grad}}_i$：梯度模型预测的达到破坏时的总结构耗散，单位为 $\\mathrm{J}$。\n- $(h/\\ell)_i$：无量纲比率 $h/\\ell$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果 $[G^{\\text{loc}}_1,G^{\\text{grad}}_1,(h/\\ell)_1,G^{\\text{loc}}_2,G^{\\text{grad}}_2,(h/\\ell)_2,G^{\\text{loc}}_3,G^{\\text{grad}}_3,(h/\\ell)_3]$，能量单位为 $\\mathrm{J}$，比率为无量纲。", "solution": "问题陈述已经过分析并确定为有效。它在科学上基于连续介质损伤力学，是良定的，并为严格的推导和后续计算提供了一套完整且一致的数据和假设。该问题探讨了材料失效计算模型中网格敏感性及其正则化这一基本问题，这是一个经典且重要的话题。\n\n我们按要求分三步进行推导和求解。\n\n步骤1：纯局部软化模型分析。\n\n在纯局部连续介质模型中，一个点 $x$ 处的材料行为仅取决于该点的状态变量。问题指定了单轴拉伸下的线性应变软化本构。在达到应变为 $\\varepsilon_0 = \\sigma_y / E$ 时的屈服应力 $\\sigma_y$ 之前，响应为初始线弹性；此后，假定应力随应变线性下降，在最终应变 $\\varepsilon_f$ 时降至零。\n\n材料点完全破坏过程中单位体积耗散的能量 $w_{\\text{loc}}$ 是在非弹性软化过程中所做的功。这对应于应力-应变曲线上从软化开始点 $(\\varepsilon_0, \\sigma_y)$ 到完全破坏点 $(\\varepsilon_f, 0)$ 之间的曲线下面积。该软化分支的形状是一个高为 $\\sigma_y$、底为 $(\\varepsilon_f - \\varepsilon_0)$ 的三角形。因此，单位体积的耗散能量为：\n$$\nw_{\\text{loc}} = \\frac{1}{2} \\sigma_y (\\varepsilon_f - \\varepsilon_0)\n$$\n在有限元法（FEM）模拟中，一旦软化开始，解就不再唯一。一个常见的数值结果是应变局部化，即所有后续变形都集中在强度最低（或最先进入软化）的单元中。问题陈述要求我们必须假设这种局部化发生在尺寸为 $h = L/N$ 的单个单元中。该单元的体积为 $V_{\\text{elem}} = A h$。杆的其余部分（长度为 $L-h$）则弹性卸载。\n\n整个结构在完全破坏时耗散的总能量 $G^{\\text{loc}}$ 是在这个单一破坏单元内耗散的能量。所有其他单元由于是弹性卸载，对耗散没有贡献。因此，总的结构耗散为：\n$$\nG^{\\text{loc}} = w_{\\text{loc}} \\times V_{\\text{elem}} = \\left( \\frac{1}{2} \\sigma_y (\\varepsilon_f - \\varepsilon_0) \\right) A h\n$$\n该方程揭示了局部软化模型的根本缺陷。预测的结构能量耗散 $G^{\\text{loc}}$ 与单元尺寸 $h$ 成正比。当网格加密时（$h \\to 0$），数值预测的断裂能 $G^{\\text{loc}}$ 会伪收敛至零。这是一种病态的网格敏感性，使得数值结果依赖于离散化方案而不是材料属性，从而变得物理上无意义。结构的峰后荷载-位移曲线也会表现出类似的对 $h$ 的病态依赖性。\n\n步骤2：梯度正则化损伤模型分析。\n\n为了修正病态的网格依赖性，引入了非局部正则化。在此，这是通过在自由能密度中添加一个损伤梯度项来实现的。杆中存储的总自由能包含来自损伤场 $d(x)$ 及其空间梯度 $d'(x) = \\nabla d$ 的贡献。根据问题陈述，对于一维静态情况，该能量的形式为：\n$$\n\\Pi_d[d(x)] = \\int_0^L A \\left( \\phi_d(d) + \\frac{1}{2} c_d \\ell^2 (d'(x))^2 \\right) dx\n$$\n其中 $\\phi_d(d)$ 是与损伤相关的能量的局部部分（例如，按规定为 $\\frac{1}{2} k_d d^2$），$c_d$ 是一个材料参数，$\\ell$ 是一个内禀长度尺度参数。为了使损伤过程发生，必须使该势能相对于损伤场 $d(x)$ 最小化，通常这受损伤演化准则的约束。驻值条件导出 Euler-Lagrange 方程。对于包含 $F(d, d') = \\phi_d(d) + \\frac{1}{2} c_d \\ell^2 (d')^2$ 的泛函，其 Euler-Lagrange 方程为 $\\frac{\\partial F}{\\partial d} - \\frac{d}{dx}\\left(\\frac{\\partial F}{\\partial d'}\\right) = Y_d$，其中 $Y_d$ 代表损伤的热力学驱动力。这得到：\n$$\n\\frac{d\\phi_d}{dd} - c_d \\ell^2 d''(x) = Y_d\n$$\n整理齐次部分可得 $d''(x) - \\frac{1}{c_d \\ell^2}\\frac{d\\phi_d}{dd} = 0$。对于像 $\\phi_d = \\frac{1}{2} k_d d^2$ 这样的简单形式，方程变为 $d''(x) - \\frac{k_d}{c_d \\ell^2} d(x) = 0$。此微分方程的通解包含指数函数，其特征长度与 $\\ell\\sqrt{c_d/k_d}$ 成正比。根据此类模型的构造，该特征长度被认同为材料的内禀长度尺度 $\\ell$。因此，穿过断裂过程区的损伤剖面 $d(x)$ 将具有一个与 $\\ell$ 成比例的有限宽度，而与网格尺寸 $h$ 无关。\n\n单位面积断裂能 $G_c$ 是一项基本的材料属性，代表了创建单位面积新断裂面所需的能量。在连续介质损伤力学的背景下，它是指当损伤带完全发展时，横截面单位面积上耗散的总能量。梯度模型的标定方式是使在整个断裂过程区上积分的总耗散能等于 $G_c$：\n$$\nG_c = \\int_{-\\infty}^{\\infty} \\left( D_{\\text{loc}}(d(x)) + D_{\\text{nonloc}}(d(x), d'(x)) \\right) dx\n$$\n其中各项代表耗散密度的局部和非局部部分。根据构造，模型参数（例如 $c_d$、 $k_d$ 和控制 $d$ 演化的参数）的选择是为了满足这一条件。因此，结构为实现完全破坏所耗散的总能量 $G^{\\text{grad}}$ 是该材料属性 $G_c$ 与横截面积 $A$ 的乘积：\n$$\nG^{\\text{grad}} = G_c A\n$$\n这个结果与网格尺寸 $h$ 无关，前提是网格足够精细以解析损伤剖面，即 $h < \\ell$。这解决了局部模型的病态网格依赖性问题。\n\n步骤3：定量预测。\n\n我们现在使用推导出的表达式和给定的数值参数来计算所需的量。\n给定参数：\n$E = 210 \\times 10^9\\,\\mathrm{Pa}$，$\\sigma_y = 400 \\times 10^6\\,\\mathrm{Pa}$，$\\varepsilon_f - \\varepsilon_0 = 0.004$，$A = 1.0 \\times 10^{-4}\\,\\mathrm{m}^2$，$L = 1.0\\,\\mathrm{m}$，$G_c = 1000\\,\\mathrm{J}/\\mathrm{m}^2$，$ \\ell = 0.02\\,\\mathrm{m}$。\n\n局部能量耗散密度为：\n$$\nw_{\\text{loc}} = \\frac{1}{2} \\sigma_y (\\varepsilon_f - \\varepsilon_0) = \\frac{1}{2} (400 \\times 10^6\\,\\mathrm{Pa}) (0.004) = 8.0 \\times 10^5\\,\\mathrm{J/m^3}\n$$\n梯度模型的结构耗散是恒定的：\n$$\nG^{\\text{grad}} = G_c A = (1000\\,\\mathrm{J/m^2}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) = 0.1\\,\\mathrm{J}\n$$\n我们针对三种网格情况评估这些量。\n\n情况 1：$N=5$\n单元尺寸：$h_1 = L/N = 1.0\\,\\mathrm{m} / 5 = 0.2\\,\\mathrm{m}$。\n局部模型耗散：$G^{\\text{loc}}_1 = w_{\\text{loc}} A h_1 = (8.0 \\times 10^5\\,\\mathrm{J/m^3}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) \\times (0.2\\,\\mathrm{m}) = 16.0\\,\\mathrm{J}$。\n梯度模型耗散：$G^{\\text{grad}}_1 = 0.1\\,\\mathrm{J}$。\n解析度参数：$(h/\\ell)_1 = 0.2\\,\\mathrm{m} / 0.02\\,\\mathrm{m} = 10.0$。\n\n情况 2：$N=50$\n单元尺寸：$h_2 = L/N = 1.0\\,\\mathrm{m} / 50 = 0.02\\,\\mathrm{m}$。\n局部模型耗散：$G^{\\text{loc}}_2 = w_{\\text{loc}} A h_2 = (8.0 \\times 10^5\\,\\mathrm{J/m^3}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) \\times (0.02\\,\\mathrm{m}) = 1.6\\,\\mathrm{J}$。\n梯度模型耗散：$G^{\\text{grad}}_2 = 0.1\\,\\mathrm{J}$。\n解析度参数：$(h/\\ell)_2 = 0.02\\,\\mathrm{m} / 0.02\\,\\mathrm{m} = 1.0$。\n\n情况 3：$N=500$\n单元尺寸：$h_3 = L/N = 1.0\\,\\mathrm{m} / 500 = 0.002\\,\\mathrm{m}$。\n局部模型耗散：$G^{\\text{loc}}_3 = w_{\\text{loc}} A h_3 = (8.0 \\times 10^5\\,\\mathrm{J/m^3}) \\times (1.0 \\times 10^{-4}\\,\\mathrm{m}^2) \\times (0.002\\,\\mathrm{m}) = 0.16\\,\\mathrm{J}$。\n梯度模型耗散：$G^{\\text{grad}}_3 = 0.1\\,\\mathrm{J}$。\n解析度参数：$(h/\\ell)_3 = 0.002\\,\\mathrm{m} / 0.02\\,\\mathrm{m} = 0.1$。\n\n结果清楚地表明 $G^{\\text{loc}}$ 随 $h$ 线性减小，证实了病态的网格敏感性。相比之下，$G^{\\text{grad}}$ 保持恒定且具有物理意义。随着网格的加密，局部模型的预测值伪趋近于零；而对于最精细的网格，其中 $h < \\ell$，局部模型的预测值恰好接近正则化的值，尽管这对于给定的参数而言是巧合，并非收敛的迹象。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes structural dissipation for local and gradient-regularized damage models\n    to demonstrate the concept of mesh sensitivity and regularization.\n    \"\"\"\n    # Define physical and material constants from the problem statement (SI units).\n    # E is given but not needed for the dissipation calculation itself.\n    sigma_y = 400e6  # Yield stress in Pa\n    eps_f_minus_eps_0 = 0.004  # Strain difference for softening, dimensionless\n    A = 1.0e-4  # Cross-sectional area in m^2\n    L = 1.0  # Bar length in m\n    G_c = 1000.0  # Fracture energy per unit area in J/m^2\n    ell = 0.02  # Internal length scale in m\n\n    # Define the test cases by the number of elements N.\n    test_cases_N = [5, 50, 500]\n\n    # --- Calculation for the local model ---\n    # The energy dissipated per unit volume in the failing material point, w_loc,\n    # is the area of the softening triangle in the local stress-strain diagram.\n    w_loc = 0.5 * sigma_y * eps_f_minus_eps_0\n    \n    # --- Calculation for the gradient-regularized model ---\n    # The total structural energy dissipation, G_grad, is regularized to a \n    # mesh-independent value by construction of the model, which is calibrated \n    # using the material property G_c. G_grad = G_c * A.\n    G_grad = G_c * A\n    \n    # List to store the results for all test cases.\n    results = []\n    \n    # Iterate through the specified mesh configurations.\n    for N in test_cases_N:\n        # Calculate the element size h for the current uniform mesh.\n        h = L / N\n        \n        # 1. Compute G_loc_i: predicted total structural dissipation for the local model.\n        # Dissipation is assumed to localize in a single element of volume A*h.\n        G_loc_i = w_loc * A * h\n        \n        # 2. Assign G_grad_i: predicted total dissipation for the gradient model.\n        # This value is constant (mesh-independent) by design.\n        G_grad_i = G_grad\n        \n        # 3. Compute (h/l)_i: the dimensionless resolution parameter.\n        # This ratio indicates whether the mesh is fine enough to resolve the\n        # internal length scale of the material.\n        h_over_ell_i = h / ell\n        \n        # Append the three computed values for the current case to the results list.\n        results.extend([G_loc_i, G_grad_i, h_over_ell_i])\n\n    # Final print statement in the exact required format:\n    # [G_loc_1,G_grad_1,(h/l)_1,G_loc_2,G_grad_2,(h/l)_2,G_loc_3,G_grad_3,(h/l)_3]\n    print(f\"[{','.join(map(str, results))}]\")\n\n# Execute the solver function.\nsolve()\n```", "id": "2626375"}, {"introduction": "一个成功的数值模拟不仅需要精确的单步积分算法，还需要能够应对模型中强耦合与软化行为带来的数值不稳定性。本压轴练习要求你构建一个包含自适应子步长策略的完整仿真程序，以确保在整个加载路径上的数值稳定性和物理真实性。通过实施基于能量耗散和损伤可容许性的步长控制，你将掌握处理高度非线性材料行为的高级计算技术，这是确保仿真结果可靠性的关键。", "problem": "考虑一个承受规定单调拉伸应变历史的小应变、率无关、弹塑性-损伤耦合的固体。该材料具有标量各向同性损伤和线性各向同性硬化塑性。假设基于以下基本且被广泛接受的原则：\n\n- Cauchy应力 $\\sigma$ 通过热力学共轭关系从标量Helmholtz自由能密度 $\\psi$ 导出，其中等温过程的Clausius-Duhem不等式要求非负的力学耗散。\n- 弹性应变为 $\\epsilon_{\\mathrm{e}} = \\epsilon - \\epsilon_{\\mathrm{p}}$，其中 $\\epsilon$ 是总应变，$\\epsilon_{\\mathrm{p}}$ 是塑性应变。\n- 适用小应变运动学和单轴应力状态。\n- 损伤变量 $D$ 是一个在 $[0,1)$ 区间内的标量，它以乘法形式降低弹性刚度且不会愈合，即 $\\dot{D} \\ge 0$。\n\n使用的模型定义：\n\n- 每单位参考体积的自由能密度 $\\,\\psi\\,$：\n$$\n\\psi(\\epsilon,\\epsilon_{\\mathrm{p}},\\kappa,D) = (1 - D)\\,\\frac{1}{2}\\,E\\,(\\epsilon - \\epsilon_{\\mathrm{p}})^2 + \\frac{1}{2}\\,H\\,\\kappa^2,\n$$\n其中 $E$ 是杨氏模量，$H$ 是线性各向同性硬化模量，$\\kappa$ 是累积塑性应变，且有 $\\dot{\\kappa} = |\\dot{\\epsilon}_{\\mathrm{p}}|$。\n\n- 有效应力（应变等效假设）：\n$$\n\\tilde{\\sigma} = E\\,(\\epsilon - \\epsilon_{\\mathrm{p}}).\n$$\n\n- 可观测应力：\n$$\n\\sigma = (1 - D)\\,\\tilde{\\sigma}.\n$$\n\n- 带有各向同性硬化的屈服函数（损伤不直接软化屈服应力）：\n$$\nf(\\tilde{\\sigma},\\kappa) = \\tilde{\\sigma} - \\left(\\sigma_{y0} + H\\,\\kappa\\right) \\le 0,\n$$\n其中 $\\sigma_{y0}$ 是初始屈服应力。\n\n- 单调拉伸下率无关塑性的相关联流动法则和Kuhn-Tucker条件：\n$$\n\\dot{\\epsilon}_{\\mathrm{p}} = \\dot{\\lambda},\\quad \\dot{\\kappa} = \\dot{\\lambda},\\quad \\dot{\\lambda} \\ge 0,\\quad f \\le 0,\\quad \\dot{\\lambda}\\,f = 0.\n$$\n\n- 驱动损伤的能量释放率：\n$$\nY = -\\frac{\\partial \\psi}{\\partial D} = \\frac{1}{2} E\\,(\\epsilon - \\epsilon_{\\mathrm{p}})^2 = \\frac{1}{2}\\,\\tilde{\\sigma}\\,(\\epsilon - \\epsilon_{\\mathrm{p}}).\n$$\n\n- 由塑性流动激活的耦合损伤演化律（单调拉伸，因此 $\\dot{\\epsilon}_{\\mathrm{p}} \\ge 0$）：\n$$\n\\dot{D} = \\left(\\frac{Y}{S}\\right)\\,\\dot{\\lambda},\\quad D \\in [0,D_{\\max}),\n$$\n其中 $S$ 是一个正的损伤抗力参数，$D_{\\max} \\in (0,1)$ 是为避免椭圆性丧失而设定的容许上限。\n\n离散化要求：\n\n- 总应变历史是在固定数量的宏观增量步 $M$ 内，从 $0$ 到规定的最终值 $\\epsilon_{\\mathrm{final}}$ 的单调线性加载。在每个宏观增量步内，对塑性使用隐式后向欧拉时间积分和标准的回映算法。使用增量步末端的驱动力的全隐式值来评估损伤增量。如果某个尝试的子步违反了下文定义的容许性或稳定性，则自适应地细分该宏观增量步（二分法），直到子步被接受。\n\n每个子步从 $\\epsilon_n$ 到 $\\epsilon_{n+1}$ 的数值稳定性和接受准则：\n\n- 容许性：更新后的损伤 $D_{n+1}$ 必须满足 $D_{n+1} \\le D_{\\max}$ 和 $D_{n+1} \\ge 0$。\n- 能量一致性：通过梯形法则定义增量外力功\n$$\nW_{n\\to n+1} = \\frac{1}{2}\\,(\\sigma_n + \\sigma_{n+1})\\,(\\epsilon_{n+1}-\\epsilon_n),\n$$\n并令储存能增量为 $\\Delta \\psi = \\psi_{n+1} - \\psi_n$。增量耗散为\n$$\n\\mathcal{D}_{n\\to n+1} = W_{n\\to n+1} - \\Delta \\psi.\n$$\n要求 $\\mathcal{D}_{n\\to n+1} \\ge -\\text{tol}$，其中 $\\text{tol} > 0$ 是一个指定的很小的容差。如果不满足此条件，则将子步减半并重试。整个加载路径上的总耗散为\n$$\n\\mathcal{D}_{\\mathrm{tot}} = \\sum \\mathcal{D}_{n\\to n+1} = W_{\\mathrm{tot}} - (\\psi_{\\mathrm{final}} - \\psi_0),\n$$\n其中在零应变和零内变量时，$\\psi_0 = 0$。\n\n实现约束：\n\n- 对所有内变量的更新使用隐式后向欧拉方法。\n- 在塑性区，在子步结束时强制执行屈服一致性条件。\n- 在每个宏观增量步内使用自适应子步来满足接受准则。\n- 假设单调拉伸，因此 $\\dot{\\epsilon}_{\\mathrm{p}} \\ge 0$ 且 $\\dot{\\kappa} \\ge 0$。\n- 从无应力无损伤状态开始：$\\epsilon_{\\mathrm{p}}(0)=0$, $\\kappa(0)=0$, $D(0)=0$, $\\sigma(0)=0$, $\\psi(0)=0$。\n\n单位：\n\n- 对类应力量和能量密度使用兆帕（因为 $1\\,\\text{MPa} = 1\\,\\text{MJ}/\\text{m}^3$）。\n- 应变为无量纲。\n- 以 $\\text{MPa}$ 为单位报告最终应力，以无量纲数报告应变。\n\n每个测试用例的必需输出：\n\n- 最终应力 $\\sigma_{\\mathrm{final}}$，以 $\\text{MPa}$ 为单位的浮点数。\n- 最终塑性应变 $\\epsilon_{\\mathrm{p,final}}$，一个浮点数。\n- 最终损伤 $D_{\\mathrm{final}}$，一个浮点数。\n- 一个布尔值，指示总耗散是否满足 $\\mathcal{D}_{\\mathrm{tot}} \\ge -\\text{tol}$。\n- 在整个加载路径中使用的已接受子步的总数，一个整数。\n\n测试套件：\n\n对于每个测试用例，参数以元组 $(E, H, \\sigma_{y0}, S, D_{\\max}, \\epsilon_{\\mathrm{final}}, M, \\text{tol})$ 的形式给出，其中 $E$、$H$、$\\sigma_{y0}$、$S$ 的单位为 $\\text{MPa}$，$D_{\\max}$ 无量纲，$\\epsilon_{\\mathrm{final}}$ 无量纲，$M$ 为宏观增量步的整数数量，$\\text{tol}$ 的单位为 $\\text{MPa}$。\n\n- 用例 $\\,$$1$ (纯弹性目标): $(210000, 10000, 250, 500, 0.95, 0.0005, 10, 1\\times 10^{-8})$。\n- 用例 $\\,$$2$ (中等塑性和轻度损伤): $(210000, 10000, 250, 500, 0.95, 0.003, 20, 1\\times 10^{-8})$。\n- 用例 $\\,$$3$ (大步长，强耦合，预期需要自适应加密): $(210000, 5000, 200, 200, 0.90, 0.02, 5, 1\\times 10^{-8})$。\n- 用例 $\\,$$4$ (极强硬化，塑性被抑制): $(70000, 1000000, 300, 800, 0.95, 0.005, 10, 1\\times 10^{-8})$。\n\n任务：\n\n- 实现一个程序，该程序对每个测试用例执行所描述的、带有自适应子步和稳定性检查的积分，并输出结果。\n\n最终输出格式：\n\n- 您的程序应生成一行输出，其中包含一个逗号分隔的列表，用方括号括起来。每个元素对应一个测试用例，其本身是一个按 $[\\sigma_{\\mathrm{final}}, \\epsilon_{\\mathrm{p,final}}, D_{\\mathrm{final}}, \\text{dissipation\\_ok}, \\text{substeps}]$ 顺序排列的列表。例如： $[[\\dots],[\\dots],[\\dots],[\\dots]]$。", "solution": "该问题是有效的，因为它提出了一个在计算连续介质力学领域中定义明确、有科学依据且不简单的任务。我将继续进行数值解的推导和实现。\n\n问题的核心是，对于给定的单调拉伸应变历史 $\\epsilon(t)$，求解内状态变量——塑性应变 $\\epsilon_{\\mathrm{p}}$、累积塑性应变 $\\kappa$ 和损伤 $D$——的演化。数值解是使用后向欧拉隐式积分方案，针对从 $t_n$ 到 $t_{n+1}$ 的时间增量来构建的。在时间 $t_n$ 的状态（用下标 $n$ 表示）是已知的：$(\\epsilon_n, \\sigma_n, \\epsilon_{\\mathrm{p},n}, \\kappa_n, D_n)$。增量步结束时的总应变 $\\epsilon_{n+1}$ 是给定的。我们必须求解 $t_{n+1}$ 时刻的状态。\n\n单个应变增量 $\\Delta\\epsilon = \\epsilon_{n+1} - \\epsilon_n$ 的求解过程遵循标准的回映算法，我们首先预测一个弹性响应，然后在必要时进行塑性流动修正。\n\n**1. 弹性试探步**\n\n我们首先假设该步是纯弹性的。这意味着内变量不发生变化。在 $t_{n+1}$ 时刻的试探状态（用上标 `trial` 表示）是：\n$$ \\epsilon_{\\mathrm{p},n+1}^{\\text{trial}} = \\epsilon_{\\mathrm{p},n} $$\n$$ \\kappa_{n+1}^{\\text{trial}} = \\kappa_n $$\n$$ D_{n+1}^{\\text{trial}} = D_n $$\n\n试探有效应力 $\\tilde{\\sigma}_{n+1}^{\\text{trial}}$ 基于总应变 $\\epsilon_{n+1}$ 和冻结的塑性应变 $\\epsilon_{\\mathrm{p},n}$ 计算：\n$$ \\tilde{\\sigma}_{n+1}^{\\text{trial}} = E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n}) $$\n其中 $E$ 是杨氏模量。\n\n然后，我们检查这个试探状态是否违反屈服条件。使用试探有效应力和上一步已知的硬化状态 $\\kappa_n$ 来评估屈服函数 $f$：\n$$ f_{n+1}^{\\text{trial}} = \\tilde{\\sigma}_{n+1}^{\\text{trial}} - (\\sigma_{y0} + H \\kappa_n) $$\n其中 $\\sigma_{y0}$ 是初始屈服应力，$H$ 是硬化模量。\n\n如果 $f_{n+1}^{\\text{trial}} \\le 0$，则弹性假设是正确的。此增量内不发生塑性流动。$t_{n+1}$ 时刻的状态最终确定为：\n$$ \\epsilon_{\\mathrm{p},n+1} = \\epsilon_{\\mathrm{p},n} $$\n$$ \\kappa_{n+1} = \\kappa_n $$\n$$ D_{n+1} = D_n $$\n然后，可观测的Cauchy应力 $\\sigma_{n+1}$ 为：\n$$ \\sigma_{n+1} = (1 - D_{n+1}) \\tilde{\\sigma}_{n+1}^{\\text{trial}} = (1 - D_n) E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n}) $$\n\n**2. 塑性修正步（回映算法）**\n\n如果 $f_{n+1}^{\\text{trial}} > 0$，则发生塑性变形。$t_{n+1}$ 时刻的状态必须位于屈服面上，满足一致性条件 $f_{n+1} = 0$。内变量的演化方程使用隐式后向欧拉方法进行积分。对于单调拉伸，塑性应变增量 $\\Delta\\epsilon_{\\mathrm{p}}$ 和累积塑性应变增量 $\\Delta\\kappa$ 等于塑性乘子增量 $\\Delta\\lambda \\ge 0$。\n$$ \\epsilon_{\\mathrm{p},n+1} = \\epsilon_{\\mathrm{p},n} + \\Delta\\lambda $$\n$$ \\kappa_{n+1} = \\kappa_n + \\Delta\\lambda $$\n\n$t_{n+1}$ 时刻的有效应力可以用试探应力和 $\\Delta\\lambda$ 来表示：\n$$ \\tilde{\\sigma}_{n+1} = E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n+1}) = E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n} - \\Delta\\lambda) = \\tilde{\\sigma}_{n+1}^{\\text{trial}} - E \\Delta\\lambda $$\n\n我们在一致性条件 $f_{n+1} = 0$ 中使用这些更新后的变量：\n$$ \\tilde{\\sigma}_{n+1} - (\\sigma_{y0} + H \\kappa_{n+1}) = 0 $$\n$$ (\\tilde{\\sigma}_{n+1}^{\\text{trial}} - E \\Delta\\lambda) - (\\sigma_{y0} + H (\\kappa_n + \\Delta\\lambda)) = 0 $$\n重新整理以求解 $\\Delta\\lambda$：\n$$ \\tilde{\\sigma}_{n+1}^{\\text{trial}} - (\\sigma_{y0} + H \\kappa_n) = (E + H) \\Delta\\lambda $$\n左侧恰好是试探屈服函数值 $f_{n+1}^{\\text{trial}}$。因此，塑性乘子增量为：\n$$ \\Delta\\lambda = \\frac{f_{n+1}^{\\text{trial}}}{E + H} $$\n由于 $f_{n+1}^{\\text{trial}} > 0$ 且 $E+H > 0$，我们有 $\\Delta\\lambda > 0$，这与塑性的发生相符。\n\n在确定了 $\\Delta\\lambda$ 后，更新内变量 $\\epsilon_{\\mathrm{p},n+1}$ 和 $\\kappa_{n+1}$。模型指定了一个耦合损伤演化律 $\\dot{D} = (Y/S)\\dot{\\lambda}$，需要进行隐式积分。这意味着我们使用步末的损伤驱动力 $Y$，即 $Y_{n+1}$。\n$$ D_{n+1} = D_n + \\frac{Y_{n+1}}{S} \\Delta\\lambda $$\n能量释放率 $Y_{n+1}$ 是：\n$$ Y_{n+1} = \\frac{1}{2} E (\\epsilon_{n+1} - \\epsilon_{\\mathrm{p},n+1})^2 = \\frac{1}{2E} \\tilde{\\sigma}_{n+1}^2 $$\n步末的有效应力 $\\tilde{\\sigma}_{n+1}$ 使用现已知的 $\\Delta\\lambda$ 计算：\n$$ \\tilde{\\sigma}_{n+1} = \\tilde{\\sigma}_{n+1}^{\\text{trial}} - E \\Delta\\lambda $$\n这使我们能够计算 $Y_{n+1}$，并随后将损伤更新为 $D_{n+1}$。这对应于一种交错或算子分裂的方法，其中首先解决塑性问题，然后使用得到的塑性增量更新损伤。\n\n最后，用更新后的损伤计算可观测应力 $\\sigma_{n+1}$：\n$$ \\sigma_{n+1} = (1 - D_{n+1}) \\tilde{\\sigma}_{n+1} $$\n\n**3. 自适应子步与接受准则**\n\n从 $0$ 到 $\\epsilon_{\\mathrm{final}}$ 的总应变路径被划分为 $M$ 个宏观增量步。每个宏观增量步都通过一个或多个自适应子步来完成。对于每个尝试的子步，必须满足两个接受准则：\n1.  **容许性：** 更新后的损伤 $D_{n+1}$ 必须保持在有效范围内，即 $D_{n+1} < D_{\\max}$。鉴于 $D(0)=0$ 且 $\\dot{D}\\ge 0$，我们只需检查上限。\n2.  **能量一致性：** 增量耗散 $\\mathcal{D}_{n\\to n+1}$ 必须为非负，在一个很小的数值容差 $\\text{tol}$ 范围内。耗散根据热力学第一定律计算：外力功减去储存能的变化。\n    $$ \\mathcal{D}_{n\\to n+1} = W_{n\\to n+1} - \\Delta\\psi_{n\\to n+1} \\ge -\\text{tol} $$\n    其中增量功 $W_{n\\to n+1}$ 通过梯形法则计算：\n    $$ W_{n\\to n+1} = \\frac{1}{2}(\\sigma_n + \\sigma_{n+1})(\\epsilon_{n+1}-\\epsilon_n) $$\n    Helmholtz自由能的变化 $\\Delta\\psi$ 是：\n    $$ \\Delta\\psi_{n\\to n+1} = \\psi_{n+1} - \\psi_n $$\n    自由能密度 $\\psi$ 定义为：\n    $$ \\psi = (1 - D)\\frac{1}{2}E(\\epsilon - \\epsilon_{\\mathrm{p}})^2 + \\frac{1}{2}H\\kappa^2 $$\n\n如果尝试的子步大小违反了任一准则，则拒绝该子步，将其大小减半（二分法），然后重试计算。这个过程持续进行，直到找到一个足够小的子步满足两个准则。然后更新状态，并重复该过程，直到达到宏观增量步的末端。\n\n**4. 整体算法**\n\n对于给定的测试用例，完整的算法流程如下：\n- 初始化状态变量为零：$\\epsilon_0=0, \\sigma_0=0, \\epsilon_{\\mathrm{p},0}=0, \\kappa_0=0, D_0=0, \\psi_0=0$。\n- 初始化累加器：总接受子步数、总功和总耗散。\n- 循环遍历 $M$ 个宏观增量步。\n    - 在每个宏观增量步内，使用一个内循环进行自适应子步。\n        - 尝试一个覆盖宏观增量步中剩余应变的子步。\n        - 进入一个二分循环：\n            - 使用回映算法逻辑计算当前子步末端的暂定状态。\n            - 检查容许性和能量一致性。\n            - 如果被接受，则跳出二分循环。\n            - 如果被拒绝，则将子步大小减半并继续二分循环。\n        - 在一个子步成功后，更新全局状态变量和累加器。\n- 在所有宏观增量步完成后，计算总耗散的布尔值，$\\mathcal{D}_{\\mathrm{tot}} \\ge -\\text{tol}$。\n- 整理最终所需的输出：$\\sigma_{\\mathrm{final}}$、$\\epsilon_{\\mathrm{p,final}}$、$D_{\\mathrm{final}}$、耗散布尔值和总接受子步数。\n\n这个数值过程在以下Python代码中实现。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function that runs simulations for all test cases and prints the results.\n    \"\"\"\n    test_cases = [\n        # Case 1 (purely elastic target)\n        (210000., 10000., 250., 500., 0.95, 0.0005, 10, 1e-8),\n        # Case 2 (moderate plasticity and mild damage)\n        (210000., 10000., 250., 500., 0.95, 0.003, 20, 1e-8),\n        # Case 3 (large step, strong coupling, adaptive refinement expected)\n        (210000., 5000., 200., 200., 0.90, 0.02, 5, 1e-8),\n        # Case 4 (very strong hardening, plasticity suppressed)\n        (70000., 1000000., 300., 800., 0.95, 0.005, 10, 1e-8),\n    ]\n\n    results = []\n    for params in test_cases:\n        result = _run_simulation(*params)\n        results.append(result)\n\n    # Format the output as a list of lists string\n    inner_parts = [f\"[{','.join(map(str, res))}]\" for res in results]\n    final_output = f\"[{','.join(inner_parts)}]\"\n    print(final_output)\n\ndef _run_simulation(E, H, sigma_y0, S, D_max, epsilon_final, M, tol):\n    \"\"\"\n    Performs the coupled damage-plasticity simulation for a single test case.\n    \"\"\"\n    # Initial state\n    strain = 0.0\n    stress = 0.0\n    ep = 0.0  # Plastic strain\n    kappa = 0.0  # Accumulated plastic strain\n    D = 0.0  # Damage\n    \n    # Calculate initial free energy\n    psi = (1 - D) * 0.5 * E * (strain - ep)**2 + 0.5 * H * kappa**2\n\n    total_substeps = 0\n    total_dissipation = 0.0\n    max_bisections = 20  # Safeguard against infinite loops\n\n    # Strain-controlled loading\n    macro_strain_increment = epsilon_final / M\n\n    for i in range(M):\n        macro_strain_end = (i + 1) * macro_strain_increment\n        substep_strain_start = strain\n\n        while substep_strain_start < macro_strain_end:\n            remaining_strain = macro_strain_end - substep_strain_start\n            delta_eps_try = remaining_strain\n            \n            accepted = False\n            for _ in range(max_bisections):\n                next_strain = substep_strain_start + delta_eps_try\n\n                # Store current state for potential rejection\n                current_strain = substep_strain_start\n                current_stress = stress\n                current_ep = ep\n                current_kappa = kappa\n                current_D = D\n                current_psi = psi\n\n                # 1. Elastic trial step\n                trial_eff_stress = E * (next_strain - current_ep)\n                yield_stress = sigma_y0 + H * current_kappa\n                trial_f = trial_eff_stress - yield_stress\n\n                # 2. State update (elastic or plastic)\n                if trial_f <= 0:  # Elastic step\n                    next_ep = current_ep\n                    next_kappa = current_kappa\n                    next_D = current_D\n                    next_eff_stress = trial_eff_stress\n                else:  # Plastic step\n                    delta_lambda = trial_f / (E + H)\n                    next_ep = current_ep + delta_lambda\n                    next_kappa = current_kappa + delta_lambda\n                    next_eff_stress = trial_eff_stress - E * delta_lambda\n                    \n                    Y_next = 0.5 * E * (next_strain - next_ep)**2\n                    next_D = current_D + (Y_next / S) * delta_lambda\n\n                next_stress = (1 - next_D) * next_eff_stress\n\n                # 3. Acceptance criteria check\n                admissible = (next_D < D_max)\n\n                next_psi = (1 - next_D) * 0.5 * E * (next_strain - next_ep)**2 + 0.5 * H * next_kappa**2\n                delta_psi = next_psi - current_psi\n                delta_work = 0.5 * (current_stress + next_stress) * delta_eps_try\n                delta_dissipation = delta_work - delta_psi\n                energy_ok = (delta_dissipation >= -tol)\n\n                if admissible and energy_ok:\n                    # Step accepted\n                    strain = next_strain\n                    stress = next_stress\n                    ep = next_ep\n                    kappa = next_kappa\n                    D = next_D\n                    psi = next_psi\n                    \n                    total_substeps += 1\n                    total_dissipation += delta_dissipation\n                    accepted = True\n                    break\n                else:\n                    # Step rejected, bisect\n                    delta_eps_try /= 2.0\n            \n            if not accepted:\n                raise RuntimeError(f\"Substep failed to converge after {max_bisections} bisections.\")\n            \n            substep_strain_start = strain\n\n    # Final results\n    dissipation_ok = total_dissipation >= -tol\n    \n    # Python's default str() for bool is 'True'/'False'\n    return [stress, ep, D, dissipation_ok, total_substeps]\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2874214"}]}