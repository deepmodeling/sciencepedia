{"hands_on_practices": [{"introduction": "在计算塑性力学中，将连续介质理论离散化为数值算法是核心挑战之一。这个练习旨在通过一个单轴弹塑性模型，推导“一致性切线模量” $C^{ep}$ [@problem_id:2899889]，它对于确保牛顿-拉夫逊法等非线性求解器实现二次收敛至关重要。更进一步，此练习将该数值算法的切线刚度与材料的物理稳定性（Drucker公设）直接联系起来，揭示了算法的稳定性和材料本构的内在稳定性之间的深刻关联。", "problem": "一个具有线性各向同性硬化的小应变、率无关单轴弹塑性实体，在时间步 $n$到 $n+1$ 之间经受单个载荷增量。弹性定律为 $ \\sigma = E \\left( \\varepsilon - \\varepsilon^{p} \\right)$，其中杨氏模量 $E > 0$。屈服函数为 $ f(\\sigma,\\alpha) = |\\sigma| - \\left( \\sigma_{y0} + H \\alpha \\right)$，其中 $\\sigma_{y0} > 0$ 是初始屈服应力， $H \\ge 0$ 是线性硬化模量，$\\alpha$ 是累积塑性应变。假设单调拉伸，因此 $\\sigma \\ge 0$ 且 $|\\sigma| = \\sigma$，并采用关联流动法则，满足正交性和一致性条件：$d\\varepsilon^{p} = d\\lambda \\, \\partial f / \\partial \\sigma$ 和 $d\\alpha = d\\lambda$，其中 $d\\lambda \\ge 0$ 是塑性乘子。采用返回映射算法：首先形成一个弹性预测值 $\\sigma_{\\mathrm{tr}} = E \\left( \\varepsilon_{n+1} - \\varepsilon^{p}_{n} \\right)$，如果 $f(\\sigma_{\\mathrm{tr}},\\alpha_{n}) > 0$，则执行塑性修正，使得最终状态满足 $f(\\sigma_{n+1},\\alpha_{n+1}) = 0$。假设试探状态处于超应力状态并发生塑性修正，且在整个增量步中应力符号保持非负。\n\n任务：\n1) 仅从小应变运动学、弹性定律、屈服函数以及关联流动和一致性条件出发，推导返回映射步骤结束时的一致弹塑性切线模量 $ C^{ep} = \\partial \\sigma_{n+1} / \\partial \\varepsilon_{n+1}$。\n2) 使用在更新状态下对任意虚应变增量 $\\delta \\varepsilon$ 求值的二阶功定义 $\\delta^{2} W = \\delta \\sigma \\, \\delta \\varepsilon$，将 $\\delta^{2} W$ 用 $C^{ep}$ 和 $\\delta \\varepsilon$ 表示。然后，确定在所有单位范数（即 $|\\delta \\varepsilon| = 1$）的虚应变增量上 $\\delta^{2} W$ 的最小值。陈述在该状态下，根据 Drucker 材料稳定性公设，材料增量稳定的条件。\n\n给出在所有 $|\\delta \\varepsilon| = 1$ 条件下最小二阶功的封闭形式解析表达式作为最终答案。不带单位，也不要近似。", "solution": "该问题经过严格的验证过程。所有给定条件都已被提取并审查其科学合理性、一致性和完整性。\n\n**提取的已知条件：**\n- **模型**：小应变、率无关、具有线性各向同性硬化的单轴弹塑性实体。\n- **弹性定律**：$ \\sigma = E \\left( \\varepsilon - \\varepsilon^{p} \\right)$，杨氏模量 $E > 0$。\n- **屈服函数**：$ f(\\sigma,\\alpha) = |\\sigma| - \\left( \\sigma_{y0} + H \\alpha \\right)$，初始屈服应力 $\\sigma_{y0} > 0$，硬化模量 $H \\ge 0$，累积塑性应变 $\\alpha$。\n- **假设**：单调拉伸（$\\sigma \\ge 0$，因此 $|\\sigma| = \\sigma$），关联流动法则，发生塑性修正步骤。\n- **流动法则**：$d\\varepsilon^{p} = d\\lambda \\, \\partial f / \\partial \\sigma$。\n- **硬化法则**：$d\\alpha = d\\lambda$，其中 $d\\lambda \\ge 0$。\n- **返回映射**：使用弹性预测值 $\\sigma_{\\mathrm{tr}} = E \\left( \\varepsilon_{n+1} - \\varepsilon^{p}_{n} \\right)$，塑性修正确保 $f(\\sigma_{n+1},\\alpha_{n+1}) = 0$。\n- **任务1**：推导一致弹塑性切线模量 $ C^{ep} = \\partial \\sigma_{n+1} / \\partial \\varepsilon_{n+1}$。\n- **任务2**：分析二阶功 $\\delta^{2} W = \\delta \\sigma \\, \\delta \\varepsilon$，找到其在 $|\\delta \\varepsilon| = 1$ 条件下的最小值，并陈述材料稳定性条件。\n\n**验证结论：**\n该问题科学基础扎实，提法得当，且客观。它描述了塑性理论中的一个标准模型，并提出了一个标准的、不平凡的任务。其表述自成体系，没有矛盾或含糊之处。该问题被认定为**有效**。我们继续进行求解。\n\n解答按要求分为两部分。\n\n**第一部分：一致弹塑性切线模量 $C^{ep}$ 的推导**\n\n对于率无关材料，状态变量是增量式演变的。我们考虑在塑性加载事件中本构方程的率（或增量）形式。\n\n总应变率 $d\\varepsilon$ 可加法分解为弹性部分 $d\\varepsilon^{e}$ 和塑性部分 $d\\varepsilon^{p}$：\n$$d\\varepsilon = d\\varepsilon^{e} + d\\varepsilon^{p}$$\n应力率 $d\\sigma$ 通过弹性模量 $E$ 与弹性应变率相关联：\n$$d\\sigma = E \\, d\\varepsilon^{e} = E(d\\varepsilon - d\\varepsilon^{p})$$\n在单调拉伸（$\\sigma \\ge 0$）的假设下，屈服函数为 $f(\\sigma, \\alpha) = \\sigma - (\\sigma_{y0} + H\\alpha)$。\n关联流动法则规定塑性应变率垂直于屈服面：\n$$d\\varepsilon^{p} = d\\lambda \\frac{\\partial f}{\\partial \\sigma}$$\n对于我们的屈服函数，$\\partial f / \\partial \\sigma = 1$。因此，\n$$d\\varepsilon^{p} = d\\lambda$$\n硬化法则为 $d\\alpha = d\\lambda$。由于材料处于塑性加载状态，其状态必须保持在屈服面上。这由一致性条件 $df = 0$ 强制执行：\n$$df = \\frac{\\partial f}{\\partial \\sigma} d\\sigma + \\frac{\\partial f}{\\partial \\alpha} d\\alpha = 0$$\n偏导数分别为 $\\partial f / \\partial \\sigma = 1$ 和 $\\partial f / \\partial \\alpha = -H$。将这些以及 $d\\alpha = d\\lambda$ 代入一致性条件，得到：\n$$(1) d\\sigma + (-H) d\\lambda = 0 \\implies d\\sigma = H \\, d\\lambda$$\n这个方程将应力增量与塑性乘子增量联系起来。对于硬化材料（$H > 0$），需要增加应力才能产生进一步的塑性流动。对于理想塑性材料（$H=0$），$d\\sigma = 0$。\n\n现在我们有了一个方程组。从 $d\\sigma = H \\, d\\lambda$，对于 $H>0$ 我们得到 $d\\lambda = d\\sigma / H$。\n我们将 $d\\varepsilon^p=d\\lambda=d\\sigma/H$ 代入应力-应变率方程：\n$$d\\sigma = E \\left(d\\varepsilon - \\frac{d\\sigma}{H}\\right)$$\n$$d\\sigma = E \\, d\\varepsilon - \\frac{E}{H} d\\sigma$$\n我们重排方程以求解比率 $d\\sigma / d\\varepsilon$：\n$$d\\sigma \\left(1 + \\frac{E}{H}\\right) = E \\, d\\varepsilon$$\n$$d\\sigma \\left(\\frac{H+E}{H}\\right) = E \\, d\\varepsilon$$\n$$\\frac{d\\sigma}{d\\varepsilon} = \\frac{EH}{E+H}$$\n这个比率就是弹塑性切线模量。对于应用于线性硬化问题的后向欧拉积分格式这一简单情况，一致切线模量 $C^{ep}$ 与连续介质切线模量相同。\n$$C^{ep} = \\frac{\\partial \\sigma_{n+1}}{\\partial \\varepsilon_{n+1}} = \\frac{EH}{E+H}$$\n该公式对于理想塑性情况（$H=0$）也有效，此时它正确地得出 $C^{ep} = 0$。\n\n**第二部分：二阶功与稳定性分析**\n\n二阶功 $\\delta^{2} W$ 定义为在状态 $(\\sigma_{n+1}, \\varepsilon_{n+1})$ 下，虚应力增量 $\\delta \\sigma$ 与虚应变增量 $\\delta \\varepsilon$ 的乘积：\n$$\\delta^{2} W = \\delta \\sigma \\, \\delta \\varepsilon$$\n问题要求我们将 $\\delta^{2} W$ 用 $C^{ep}$ 表示。这意味着我们要使用推导出的切线模量来线性化对虚应变增量的响应，这对于引起持续塑性加载的扰动是合适的。\n$$\\delta \\sigma = C^{ep} \\delta \\varepsilon$$\n将此代入二阶功的定义中：\n$$\\delta^{2} W = (C^{ep} \\delta \\varepsilon) \\delta \\varepsilon = C^{ep} (\\delta \\varepsilon)^2$$\n我们被要求找出在所有单位范数（$|\\delta \\varepsilon| = 1$）的虚应变增量下 $\\delta^{2} W$ 的最小值。在这个单轴问题中，应变 $\\delta \\varepsilon$ 是一个标量，所以它的范数就是其绝对值。条件 $|\\delta \\varepsilon| = 1$ 意味着 $\\delta \\varepsilon = 1$ 或 $\\delta \\varepsilon = -1$。在这两种情况下，$(\\delta \\varepsilon)^2 = 1$。\n因此，对于任何此类虚增量，二阶功为：\n$$\\delta^{2} W = C^{ep} (1) = C^{ep}$$\n由于对于所有容许的虚增量，该值是恒定的，所以其最小值就是 $C^{ep}$。\n$$\\min_{|\\delta \\varepsilon|=1} (\\delta^{2} W) = C^{ep} = \\frac{EH}{E+H}$$\nDrucker 材料稳定性公设要求，对于从平衡状态开始的任何过程，二阶功必须为正。用率形式表示，即 $\\delta \\sigma \\, \\delta \\varepsilon > 0$。\n材料的稳定性是通过考虑从当前塑性状态出发的所有可能的虚扰动 $\\delta\\varepsilon$ 来评估的。\n- 如果扰动对应于持续加载（在这种情况下，$\\delta\\varepsilon > 0$），相关的切线模量是 $C^{ep}$。稳定性要求 $\\delta^{2} W = C^{ep}(\\delta\\varepsilon)^2 > 0$。由于 $(\\delta\\varepsilon)^2>0$，这意味着 $C^{ep} > 0$。\n- 如果扰动对应于弹性卸载（在这种情况下，$\\delta\\varepsilon < 0$），相关的切线模量是弹性模量 $E$。稳定性要求 $\\delta^{2} W = E(\\delta\\varepsilon)^2 > 0$。由于已知 $E>0$，此条件对于卸载总是满足的。\n\n材料的整体稳定性由“最弱”路径决定。由于我们知道 $0 \\le C^{ep} \\le E$（因为 $E>0, H \\ge 0$），临界条件是 $C^{ep} > 0$。这导致：\n$$\\frac{EH}{E+H} > 0$$\n给定 $E>0$，此不等式当且仅当 $H>0$ 时成立。因此，如果材料表现出硬化（$H>0$），则它是稳定的；如果是理想塑性（$H=0$，导致 $C^{ep}=0$ 和 $\\delta^2W=0$），则是中性稳定的。软化（$H<0$）将导致不稳定（$C^{ep}<0$）。问题限制 $H \\ge 0$。严格稳定的条件是 $H>0$。\n\n最终要求的答案是在 $|\\delta \\varepsilon| = 1$ 条件下的最小二阶功。", "answer": "$$\\boxed{\\frac{EH}{E+H}}$$", "id": "2899889"}, {"introduction": "塑性力学中的返回映射算法（return-mapping algorithm）依赖于对激活的屈服面进行正确判断。这个实践练习提供了一个具体的数值算例，旨在警示如果在算法中错误地识别了激活面会发生什么 [@problem_id:2899914]。通过动手计算，你将会发现一个看似微小的算法失误，却会导致物理上不可能出现的结果——负的塑性耗散 $D^{n+1}$，这直接违背了热力学第二定律，从而深刻理解保证数值算法正确性的重要性。", "problem": "在应力向量为 $\\boldsymbol{\\sigma} = (\\sigma_{1}, \\sigma_{2})$ 的广义应力空间中，考虑一个相关的理想塑性材料的二维理想化模型。屈服函数是分段线性映射\n$$\nf(\\boldsymbol{\\sigma}) = \\max\\left(|\\sigma_{1}|,\\,|\\sigma_{2}|\\right) - k \\le 0,\n$$\n其中 $k>0$ 是屈服应力。弹性定律是线性的，并且在分量上是对角阵，\n$$\n\\Delta \\boldsymbol{\\sigma} = \\mathbf{C}\\,(\\Delta \\boldsymbol{\\varepsilon} - \\Delta \\boldsymbol{\\varepsilon}^{p}), \\quad \\mathbf{C} = \\operatorname{diag}(K_{1}, K_{2}),\n$$\n塑性流动是相关的，流动方向 $\\boldsymbol{n} = \\partial f/\\partial \\boldsymbol{\\sigma}$ 等于激活面的外单位法向量（例如，如果激活面是 $\\sigma_{1}=k$ 且 $\\sigma_{1}>0$，则 $\\boldsymbol{n}=(1,0)$；如果激活面是 $\\sigma_{2}=k$ 且 $\\sigma_{2}>0$，则 $\\boldsymbol{n}=(0,1)$）。从时间 $t^{n}$ 到 $t^{n+1}$ 的一个步长内的后向欧拉（Backward Euler (BE)）时间离散更新使用试探应力 $\\boldsymbol{\\sigma}^{\\text{tr}} = \\boldsymbol{\\sigma}^{n} + \\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon}$，并且如果发生屈服，则使用一个返回映射，该映射在 $t^{n+1}$ 时刻强制执行激活面一致性以及 $\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\gamma\\,\\boldsymbol{n}$，其中 $\\Delta \\gamma$ 是塑性乘子增量。\n\n考虑以下数据：\n- 屈服应力 $k = 200\\,\\text{MPa}$。\n- 弹性模量 $K_{1} = K_{2} = 200{,}000\\,\\text{MPa}$。\n- 上一步的应力 $\\boldsymbol{\\sigma}^{n} = (200,\\,190)\\,\\text{MPa}$，该应力位于 $\\sigma_{1}=k$ 且 $\\sigma_{1}>0$ 的面上。\n- 应变增量 $\\Delta \\boldsymbol{\\varepsilon} = \\big(-1.5\\times 10^{-4},\\,1.0\\times 10^{-4}\\big)$。\n\n算法中使用的时间离散塑性耗散度量定义为\n$$\nD^{n+1} := \\boldsymbol{\\sigma}^{n+1} : \\Delta \\boldsymbol{\\varepsilon}^{p}.\n$$\n对于一个相关的、稳定的材料和正确识别的激活面，$D^{n+1}$ 预期为非负值。\n\n使用上述数据，计算如果算法错误地将 $t^{n+1}$ 时的激活面识别为 $\\sigma_{1}=k$ 且 $\\sigma_{1}>0$（即，它保留了上一步的面），而不是被试探应力实际激活的面，那么将会得到的 $D^{n+1}$ 值，这与正确的物理过程相悖。使用这个被错误识别的面进行后向欧拉返回映射，以确定 $\\Delta \\boldsymbol{\\varepsilon}^{p}$ 和 $\\boldsymbol{\\sigma}^{n+1}$，然后计算 $D^{n+1}$。以 $\\text{MPa}$ 为单位表示您的最终答案。最终答案中不要包含单位，并提供一个单独的数字。除了给定数字所隐含的精确算术外，不需要进行四舍五-入。", "solution": "所陈述的问题是有效的。它提出了一个计算塑性力学中定义明确的练习，该练习对具有分段线性屈服面的理想塑性材料使用标准的后向欧拉返回映射算法。所提供的数据是完整的且科学上一致的。问题的核心是计算一个故意错误的算法选择所带来的后果——具体来说，是错误识别激活屈服面——这是一个用于分析数值方案性质和稳定性的合法方法。我们将按要求进行计算。\n\n目标是在假设 $t^{n+1}$ 时刻的激活屈服面被错误地假定为 $\\sigma_{1}=k$（即与 $t^{n}$ 时刻应力状态所在的同一个面）的条件下，计算塑性耗散度量 $D^{n+1} := \\boldsymbol{\\sigma}^{n+1} : \\Delta \\boldsymbol{\\varepsilon}^{p}$。\n\n首先，我们计算试探应力 $\\boldsymbol{\\sigma}^{\\text{tr}}$，如果增量内的响应是纯弹性的，将会达到该应力状态。\n$$\n\\boldsymbol{\\sigma}^{\\text{tr}} = \\boldsymbol{\\sigma}^{n} + \\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon}\n$$\n给定的数据是：\n- 上一步的应力: $\\boldsymbol{\\sigma}^{n} = (200, 190)\\,\\text{MPa}$。\n- 弹性矩阵: $\\mathbf{C} = \\operatorname{diag}(K_{1}, K_{2})$，其中 $K_{1} = K_{2} = 200{,}000\\,\\text{MPa}$。\n- 应变增量: $\\Delta \\boldsymbol{\\varepsilon} = (-1.5\\times 10^{-4}, 1.0\\times 10^{-4})$。\n\n弹性应力增量为：\n$$\n\\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon} = \\begin{pmatrix} 200000 & 0 \\\\ 0 & 200000 \\end{pmatrix} \\begin{pmatrix} -1.5\\times 10^{-4} \\\\ 1.0\\times 10^{-4} \\end{pmatrix} = \\begin{pmatrix} -30 \\\\ 20 \\end{pmatrix}\\,\\text{MPa}\n$$\n因此，试探应力为：\n$$\n\\boldsymbol{\\sigma}^{\\text{tr}} = \\begin{pmatrix} 200 \\\\ 190 \\end{pmatrix} + \\begin{pmatrix} -30 \\\\ 20 \\end{pmatrix} = \\begin{pmatrix} 170 \\\\ 210 \\end{pmatrix}\\,\\text{MPa}\n$$\n接下来，我们检查这个试探应力状态是否违反了屈服条件 $f(\\boldsymbol{\\sigma}) = \\max(|\\sigma_{1}|, |\\sigma_{2}|) - k \\le 0$，其中 $k = 200\\,\\text{MPa}$。\n$$\nf(\\boldsymbol{\\sigma}^{\\text{tr}}) = \\max(|170|, |210|) - 200 = 210 - 200 = 10\n$$\n由于 $f(\\boldsymbol{\\sigma}^{\\text{tr}}) > 0$，发生塑性屈服，需要一个返回映射将应力状态恢复到屈服面上。\n\n问题要求我们假设激活面是 $\\sigma_{1}=k$ 并继续进行。对于这个面，外单位法向量是 $\\boldsymbol{n} = (1, 0)$。根据相关流动法则，塑性应变增量由 $\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\gamma\\,\\boldsymbol{n}$ 给出，其中 $\\Delta \\gamma$ 是塑性乘子。应力的后向欧拉更新为：\n$$\n\\boldsymbol{\\sigma}^{n+1} = \\boldsymbol{\\sigma}^{\\text{tr}} - \\mathbf{C}\\,\\Delta \\boldsymbol{\\varepsilon}^{p} = \\boldsymbol{\\sigma}^{\\text{tr}} - \\Delta \\gamma\\,\\mathbf{C}\\,\\boldsymbol{n}\n$$\n代入已知量：\n$$\n\\boldsymbol{\\sigma}^{n+1} = \\begin{pmatrix} 170 \\\\ 210 \\end{pmatrix} - \\Delta \\gamma \\begin{pmatrix} 200000 & 0 \\\\ 0 & 200000 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 170 - 200000\\,\\Delta \\gamma \\\\ 210 \\end{pmatrix}\n$$\n一致性条件要求最终应力 $\\boldsymbol{\\sigma}^{n+1}$ 位于假定的激活面上，即其第一个分量必须等于 $k$。\n$$\n\\sigma_{1}^{n+1} = 200\n$$\n通过令分量相等，我们求解塑性乘子 $\\Delta \\gamma$：\n$$\n170 - 200000\\,\\Delta \\gamma = 200\n$$\n$$\n-200000\\,\\Delta \\gamma = 30\n$$\n$$\n\\Delta \\gamma = -\\frac{30}{200000} = -1.5 \\times 10^{-4}\n$$\n塑性乘子为负值，$\\Delta \\gamma < 0$，表明激活面的选择是错误的。对于一个物理上一致的过程，我们必须有 $\\Delta \\gamma \\ge 0$。然而，问题陈述指示我们用这个结果继续计算。\n\n使用这个 $\\Delta\\gamma$ 值，我们确定塑性应变增量和最终应力状态。\n塑性应变增量为：\n$$\n\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\gamma\\,\\boldsymbol{n} = (-1.5 \\times 10^{-4}) \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -1.5 \\times 10^{-4} \\\\ 0 \\end{pmatrix}\n$$\n最终应力状态为：\n$$\n\\boldsymbol{\\sigma}^{n+1} = \\begin{pmatrix} 170 - 200000(-1.5 \\times 10^{-4}) \\\\ 210 \\end{pmatrix} = \\begin{pmatrix} 170 + 30 \\\\ 210 \\end{pmatrix} = \\begin{pmatrix} 200 \\\\ 210 \\end{pmatrix}\\,\\text{MPa}\n$$\n我们注意到，这个最终应力状态 $\\boldsymbol{\\sigma}^{n+1}$ 本身违反了屈服条件，因为 $f(\\boldsymbol{\\sigma}^{n+1}) = \\max(|200|,|210|) - 200 = 10 > 0$。这证实了使用错误面的算法失败了。\n\n最后，我们计算塑性耗散 $D^{n+1}$：\n$$\nD^{n+1} = \\boldsymbol{\\sigma}^{n+1} : \\Delta \\boldsymbol{\\varepsilon}^{p} = \\sigma_{1}^{n+1}\\,\\Delta\\varepsilon_{1}^{p} + \\sigma_{2}^{n+1}\\,\\Delta\\varepsilon_{2}^{p}\n$$\n代入计算出的值：\n$$\nD^{n+1} = (200) \\times (-1.5 \\times 10^{-4}) + (210) \\times (0)\n$$\n$$\nD^{n+1} = -300 \\times 10^{-4} = -0.03\n$$\n结果的单位是 MPa。耗散的负值违反了应用于塑性变形的热力学第二定律（Drucker 稳定性公设的一个推论），该定律要求任何塑性过程的耗散都为非负。这是强制返回到一个并非由试探应力实际激活的屈服面的预期结果。", "answer": "$$\n\\boxed{-0.03}\n$$", "id": "2899914"}, {"introduction": "在掌握了材料稳定性的基本理论和数值算法中的潜在陷阱后，本练习将引导你完成一个更高级的综合性任务。你将为一个在岩土工程和材料科学中广泛应用的三维 Drucker-Prager 材料模型，推导并实现一个完整的预测-校正返回映射算法 [@problem_id:2899915]。此练习不仅要求你推导塑性乘子 $\\Delta \\lambda$ 的封闭解，还需要你编写代码来处理基于试探应力的加载-卸载判断，是连接理论推导与实际编程应用的关键一步。", "problem": "实现一个小应变、关联Drucker–Prager预测-校正步，用于计算算法塑性乘子增量。从弹性试应力开始，并强制执行离散一致性方程以及由Drucker稳定性公设所蕴含的加载-卸载条件。你的程序必须为每个测试用例返回该荷载步的塑性乘子增量 $\\Delta \\lambda$。\n\n定义与假设：\n- 小应变线性各向同性弹性，其刚度张量为 $\\mathbb{C}$，体积模量为 $K$，剪切模量为 $G$。弹性预测器定义为 $\\boldsymbol{\\sigma}_{\\mathrm{tr}} = \\mathbb{C} : \\left(\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}_{n}^{p} \\right)$，校正器更新为 $\\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\mathbb{C} : \\Delta \\boldsymbol{\\varepsilon}^{p}$。\n- 关联流动法则和理想塑性，采用Drucker–Prager屈服函数 $f(\\boldsymbol{\\sigma}) = \\alpha I_{1}(\\boldsymbol{\\sigma}) + \\sqrt{J_{2}(\\boldsymbol{\\sigma})} - k$，其中 $I_{1}(\\boldsymbol{\\sigma}) = \\mathrm{tr}(\\boldsymbol{\\sigma})$，$ \\boldsymbol{s} = \\boldsymbol{\\sigma} - \\frac{1}{3} I_{1}(\\boldsymbol{\\sigma}) \\boldsymbol{I}$ 为偏应力， $J_{2}(\\boldsymbol{\\sigma}) = \\frac{1}{2} \\boldsymbol{s}:\\boldsymbol{s}$。标量参数为 $\\alpha \\ge 0$ 和 $k \\ge 0$。\n- 热力学一致性和Drucker稳定性公设强制要求塑性功的增量非负性，其离散形式要求该步满足互补条件：$\\Delta \\lambda \\ge 0$，$f(\\boldsymbol{\\sigma}) \\le 0$ 和 $\\Delta \\lambda \\, f(\\boldsymbol{\\sigma}) = 0$。\n- 离散正交性（关联流动）为 $\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\lambda \\, \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}}$，在更新后的应力处进行计算。\n\n计算任务：\n- 给定弹性试应力 $\\boldsymbol{\\sigma}_{\\mathrm{tr}}$ 及参数 $K$、$G$、$\\alpha$ 和 $k$，在发生塑性加载时，通过强制执行离散一致性方程 $f(\\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\mathbb{C} : \\Delta \\boldsymbol{\\varepsilon}^{p}) = 0$ 来计算塑性乘子增量 $\\Delta \\lambda$；同时应用Drucker稳定性公设所引出的加载-卸载准则（即，若试探状态是严格弹性的，则 $\\Delta \\lambda = 0$）。\n- 在计算中使用应力不变量：$I_{1}(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$ 和 $J_{2}(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$。你可以假设 $K > 0$ 和 $G > 0$。\n- 每个测试用例的输入应力将以对称张量的6个独立分量 $(\\sigma_{11}, \\sigma_{22}, \\sigma_{33}, \\sigma_{12}, \\sigma_{23}, \\sigma_{13})$ 的形式提供，单位为帕斯卡 (Pa)。你的程序必须在内部使用 $\\sigma_{ij} = \\sigma_{ji}$ 重构这个 $3 \\times 3$ 的张量。\n- 你必须实现预测-校正逻辑，以根据试探状态判断是弹性响应还是塑性响应，并相应地计算 $\\Delta \\lambda$。每个用例的输出是标量 $\\Delta \\lambda$（无量纲）。\n\n角度单位不适用。所有输入均以帕斯卡 (Pa) 为单位。输出 $\\Delta \\lambda$ 是无量纲的。最终输出必须为单行文本，包含所有测试用例的结果，形式为方括号内以逗号分隔的列表。\n\n测试套件 (请为以下所有用例提供结果):\n- 用例1 (弹性，中等静水拉伸伴有小剪切): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, 应力分量 $(50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 10 \\times 10^{6},\\, 0,\\, 0)$。\n- 用例2 (塑性，偏应力主导): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, 应力分量 $(50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 50 \\times 10^{6},\\, 250 \\times 10^{6},\\, 0,\\, 0)$。\n- 用例3 (塑性，静水拉伸): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, 应力分量 $(400 \\times 10^{6},\\, 400 \\times 10^{6},\\, 400 \\times 10^{6},\\, 0,\\, 0,\\, 0)$。\n- 用例4 (中性，位于屈服面上): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, 应力分量 $\\left(\\frac{10^{9}}{3},\\, \\frac{10^{9}}{3},\\, \\frac{10^{9}}{3},\\, 0,\\, 0,\\, 0\\right)$。\n- 用例5 (弹性，静水压缩): $K = 166 \\times 10^{9}$ Pa, $G = 80 \\times 10^{9}$ Pa, $\\alpha = 0.2$, $k = 200 \\times 10^{6}$ Pa, 应力分量 $(-400 \\times 10^{6},\\, -400 \\times 10^{6},\\, -400 \\times 10^{6},\\, 0,\\, 0,\\, 0)$。\n\n最终输出格式：\n- 你的程序应生成单行输出，其中包含一个方括号括起来的逗号分隔列表（例如，$[r_{1},r_{2},r_{3},r_{4},r_{5}]$），其中每个 $r_{i}$ 是按上述顺序列出的用例 $i$ 所计算出的 $\\Delta \\lambda$。", "solution": "问题陈述已经过严格验证，被认为是科学上合理、适定且完整的。它描述了计算固体力学中的一个典型问题：为率无关的关联Drucker-Prager塑性模型实现回映算法。所提供的数据和定义是一致且充分的，足以获得唯一且稳定的解。因此，我们可以进行形式推导。\n\n问题的核心是确定给定荷载步的塑性乘子增量 $\\Delta \\lambda$。这由Karush-Kuhn-Tucker (KKT) 互补条件所控制，对于此率无关模型，这些条件为：\n$$\n\\Delta \\lambda \\ge 0, \\quad f(\\boldsymbol{\\sigma}_{n+1}) \\le 0, \\quad \\Delta \\lambda \\, f(\\boldsymbol{\\sigma}_{n+1}) = 0\n$$\n此处，$f$ 是Drucker-Prager屈服函数，$f(\\boldsymbol{\\sigma}) = \\alpha I_{1}(\\boldsymbol{\\sigma}) + \\sqrt{J_{2}(\\boldsymbol{\\sigma})} - k$，且 $\\boldsymbol{\\sigma}_{n+1}$ 是时间步 $t_{n+1}$ 结束时的应力张量。\n\n预测-校正算法首先计算一个弹性试应力 $\\boldsymbol{\\sigma}_{\\mathrm{tr}}$，假设整个应变增量都是弹性的。\n$$\n\\boldsymbol{\\sigma}_{\\mathrm{tr}} = \\mathbb{C} : (\\boldsymbol{\\varepsilon}_{n+1} - \\boldsymbol{\\varepsilon}_{n}^{p})\n$$\n使用该试应力来评估加载-卸载准则。我们计算在试探状态下的屈服函数值，$f_{\\mathrm{tr}} = f(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$。\n\n情况1：弹性步或中性加载\n若 $f_{\\mathrm{tr}} \\le 0$，则试应力状态位于弹性域内部或其边界上。根据KKT条件，没有塑性流动发生。猜测是正确的。\n$$\nf_{\\mathrm{tr}} \\le 0 \\implies \\Delta \\lambda = 0\n$$\n在这种情况下，塑性应变增量 $\\Delta \\boldsymbol{\\varepsilon}^{p}$为零，最终应力与试应力相同：$\\boldsymbol{\\sigma}_{n+1} = \\boldsymbol{\\sigma}_{\\mathrm{tr}}$。\n\n情况2：塑性步（回映）\n若 $f_{\\mathrm{tr}} > 0$，则试应力状态位于弹性域之外，这在物理上是不可接受的。这表明在该步中必然发生了塑性变形。KKT条件规定 $\\Delta \\lambda > 0$，且最终应力状态 $\\boldsymbol{\\sigma}_{n+1}$ 必须位于屈服面上，满足一致性条件 $f(\\boldsymbol{\\sigma}_{n+1}) = 0$。\n\n通过流动法则将应力校正回屈服面：\n$$\n\\boldsymbol{\\sigma}_{n+1} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\Delta \\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\mathbb{C} : \\Delta \\boldsymbol{\\varepsilon}^{p}\n$$\n对于关联流动法则，塑性应变增量垂直于屈服面：\n$$\n\\Delta \\boldsymbol{\\varepsilon}^{p} = \\Delta \\lambda \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} \\bigg|_{\\boldsymbol{\\sigma}_{n+1}}\n$$\n屈服函数的梯度为：\n$$\n\\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} = \\alpha \\frac{\\partial I_{1}}{\\partial \\boldsymbol{\\sigma}} + \\frac{\\partial \\sqrt{J_{2}}}{\\partial \\boldsymbol{\\sigma}} = \\alpha \\boldsymbol{I} + \\frac{\\boldsymbol{s}}{2\\sqrt{J_{2}}}\n$$\n其中 $\\boldsymbol{I}$ 是二阶单位张量，$\\boldsymbol{s}$ 是偏应力张量。\n\n对于线性各向同性弹性材料，作用于二阶张量上的四阶刚度张量 $\\mathbb{C}$ 可用体积模量 $K$ 和剪切模量 $G$ 表示为：\n$$\n\\mathbb{C} : \\boldsymbol{A} = 3K \\left(\\frac{1}{3}\\mathrm{tr}(\\boldsymbol{A})\\right) \\boldsymbol{I} + 2G \\left(\\boldsymbol{A} - \\frac{1}{3}\\mathrm{tr}(\\boldsymbol{A})\\boldsymbol{I}\\right)\n$$\n我们将此应用于梯度张量 $\\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}}$：\n$$\n\\mathbb{C} : \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} = \\mathbb{C} : \\left(\\alpha \\boldsymbol{I} + \\frac{\\boldsymbol{s}_{n+1}}{2\\sqrt{J_{2,n+1}}}\\right)\n$$\n$\\alpha\\boldsymbol{I}$的迹是$3\\alpha$，而偏量部分 $\\frac{\\boldsymbol{s}_{n+1}}{2\\sqrt{J_{2,n+1}}}$ 的迹为零。\n$$\n\\mathbb{C} : \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}} = \\left(3K \\alpha\\right) \\boldsymbol{I} + 2G \\left(\\frac{\\boldsymbol{s}_{n+1}}{2\\sqrt{J_{2,n+1}}}\\right) = 3K\\alpha\\boldsymbol{I} + \\frac{G}{\\sqrt{J_{2,n+1}}} \\boldsymbol{s}_{n+1}\n$$\n将此代入应力更新方程得出：\n$$\n\\boldsymbol{\\sigma}_{n+1} = \\boldsymbol{\\sigma}_{\\mathrm{tr}} - \\Delta \\lambda \\left( 3K\\alpha\\boldsymbol{I} + \\frac{G}{\\sqrt{J_{2,n+1}}}\\boldsymbol{s}_{n+1} \\right)\n$$\n这个关于 $\\boldsymbol{\\sigma}_{n+1}$ 的隐式方程可以通过将其分解为体积部分和偏量部分来求解。\n\n分解：\n$\\boldsymbol{\\sigma}_{n+1}$ 的迹给出第一不变量 $I_{1,n+1}$：\n$$\nI_{1,n+1} = \\mathrm{tr}(\\boldsymbol{\\sigma}_{n+1}) = \\mathrm{tr}(\\boldsymbol{\\sigma}_{\\mathrm{tr}}) - \\Delta \\lambda \\left( 3K\\alpha \\cdot \\mathrm{tr}(\\boldsymbol{I}) \\right) = I_{1,\\mathrm{tr}} - 9K\\alpha \\Delta \\lambda\n$$\n偏量部分通过分离偏量张量得到：\n$$\n\\boldsymbol{s}_{n+1} = \\boldsymbol{s}_{\\mathrm{tr}} - \\Delta \\lambda \\frac{G}{\\sqrt{J_{2,n+1}}}\\boldsymbol{s}_{n+1}\n$$\n重新整理得到 $\\boldsymbol{s}_{n+1}$：\n$$\n\\boldsymbol{s}_{n+1} \\left(1 + \\frac{G\\Delta\\lambda}{\\sqrt{J_{2,n+1}}}\\right) = \\boldsymbol{s}_{\\mathrm{tr}}\n$$\n该方程表明，更新后的偏应力 $\\boldsymbol{s}_{n+1}$ 与试探偏应力 $\\boldsymbol{s}_{\\mathrm{tr}}$ 共线。我们可以对两边取von Mises等效范数（$\\sqrt{J_2}$）。\n$$\n\\sqrt{J_{2,n+1}} \\left(1 + \\frac{G\\Delta\\lambda}{\\sqrt{J_{2,n+1}}}\\right) = \\sqrt{J_{2,\\mathrm{tr}}}\n$$\n$$\n\\sqrt{J_{2,n+1}} + G\\Delta\\lambda = \\sqrt{J_{2,\\mathrm{tr}}} \\implies \\sqrt{J_{2,n+1}} = \\sqrt{J_{2,\\mathrm{tr}}} - G\\Delta\\lambda\n$$\n现在我们得到了更新后的不变量 $I_{1,n+1}$ 和 $\\sqrt{J_{2,n+1}}$ 关于 $\\Delta\\lambda$ 的显式表达式。我们强制执行一致性条件 $f(\\boldsymbol{\\sigma}_{n+1})=0$：\n$$\n\\alpha I_{1,n+1} + \\sqrt{J_{2,n+1}} - k = 0\n$$\n代入我们推导出的表达式：\n$$\n\\alpha \\left(I_{1,\\mathrm{tr}} - 9K\\alpha\\Delta\\lambda\\right) + \\left(\\sqrt{J_{2,\\mathrm{tr}}} - G\\Delta\\lambda\\right) - k = 0\n$$\n我们重新整理各项以求解 $\\Delta\\lambda$：\n$$\n\\left(\\alpha I_{1,\\mathrm{tr}} + \\sqrt{J_{2,\\mathrm{tr}}} - k\\right) - 9K\\alpha^2\\Delta\\lambda - G\\Delta\\lambda = 0\n$$\n括号中的项恰好是在试探状态下计算的屈服函数，$f_{\\mathrm{tr}}$。\n$$\nf_{\\mathrm{tr}} - (9K\\alpha^2 + G)\\Delta\\lambda = 0\n$$\n这给出了塑性乘子增量的闭式解：\n$$\n\\Delta\\lambda = \\frac{f_{\\mathrm{tr}}}{9K\\alpha^2 + G}\n$$\n\n计算算法总结：\n1.  给定试应力分量 $(\\sigma_{11}, \\sigma_{22}, \\sigma_{33}, \\sigma_{12}, \\sigma_{23}, \\sigma_{13})$，构建试应力张量 $\\boldsymbol{\\sigma}_{\\mathrm{tr}}$。\n2.  计算试探不变量：$I_{1,\\mathrm{tr}} = \\mathrm{tr}(\\boldsymbol{\\sigma}_{\\mathrm{tr}})$ 和 $J_{2,\\mathrm{tr}} = \\frac{1}{2}\\boldsymbol{s}_{\\mathrm{tr}}:\\boldsymbol{s}_{\\mathrm{tr}}$。\n3.  计算试探屈服函数 $f_{\\mathrm{tr}} = \\alpha I_{1,\\mathrm{tr}} + \\sqrt{J_{2,\\mathrm{tr}}} - k$。\n4.  如果 $f_{\\mathrm{tr}} \\le 0$，该步为弹性步，$\\Delta\\lambda = 0$。\n5.  如果 $f_{\\mathrmtr} > 0$，该步为塑性步。使用推导出的公式计算 $\\Delta\\lambda$：\n    $$\n    \\Delta\\lambda = \\frac{f_{\\mathrm{tr}}}{9K\\alpha^2 + G}\n    $$\n该算法被用于所提供的测试用例。对于塑性步，所有用例的分母都是一个常数：$9K\\alpha^2 + G = 9(166 \\times 10^9)(0.2)^2 + (80 \\times 10^9) = 1.3976 \\times 10^{11}$ Pa。\n\n- 用例1: $I_{1,\\mathrm{tr}}=150 \\times 10^6$ Pa, $\\sqrt{J_{2,\\mathrm{tr}}}=10 \\times 10^6$ Pa. $f_{\\mathrm{tr}} = 0.2(150 \\times 10^6) + 10 \\times 10^6 - 200 \\times 10^6 = (30+10-200) \\times 10^6 = -160 \\times 10^6 < 0 \\implies \\Delta\\lambda=0$。\n- 用例2: $I_{1,\\mathrm{tr}}=150 \\times 10^6$ Pa, $\\sqrt{J_{2,\\mathrm{tr}}}=250 \\times 10^6$ Pa. $f_{\\mathrm{tr}} = 0.2(150 \\times 10^6) + 250 \\times 10^6 - 200 \\times 10^6 = (30+250-200) \\times 10^6 = 80 \\times 10^6 > 0 \\implies \\Delta\\lambda = \\frac{80 \\times 10^6}{1.3976 \\times 10^{11}} \\approx 0.00057241$。\n- 用例3: $I_{1,\\mathrm{tr}}=1200 \\times 10^6$ Pa, $\\sqrt{J_{2,\\mathrm{tr}}}=0$ Pa. $f_{\\mathrm{tr}} = 0.2(1200 \\times 10^6) + 0 - 200 \\times 10^6 = (240-200) \\times 10^6 = 40 \\times 10^6 > 0 \\implies \\Delta\\lambda = \\frac{40 \\times 10^6}{1.3976 \\times 10^{11}} \\approx 0.000286205$。\n- 用例4: $I_{1,\\mathrm{tr}}=10^9$ Pa, $\\sqrt{J_{2,\\mathrm{tr}}}=0$ Pa. $f_{\\mathrm{tr}} = 0.2(10^9) + 0 - 200 \\times 10^6 = 200 \\times 10^6 - 200 \\times 10^6 = 0 \\implies \\Delta\\lambda=0$。\n- 用例5: $I_{1,\\mathrmtr}=-1200 \\times 10^6$ Pa, $\\sqrt{J_{2,\\mathrm{tr}}}=0$ Pa. $f_{\\mathrmtr} = 0.2(-1200 \\times 10^6) + 0 - 200 \\times 10^6 = (-240-200) \\times 10^6 = -440 \\times 10^6 < 0 \\implies \\Delta\\lambda=0$。\n最终的程序将执行此逻辑。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_delta_lambda(K, G, alpha, k, sigma_vec):\n    \"\"\"\n    Computes the plastic multiplier increment for a Drucker-Prager material.\n\n    Args:\n        K (float): Bulk modulus in Pa.\n        G (float): Shear modulus in Pa.\n        alpha (float): Drucker-Prager material parameter (dimensionless).\n        k (float): Drucker-ager material parameter (cohesion) in Pa.\n        sigma_vec (list or tuple): 6 independent components of the trial stress\n                                    tensor (s11, s22, s33, s12, s23, s13) in Pa.\n\n    Returns:\n        float: The plastic multiplier increment, delta_lambda (dimensionless).\n    \"\"\"\n    s11, s22, s33, s12, s23, s13 = sigma_vec\n\n    # 1. Construct the 3x3 trial stress tensor\n    sigma_tr = np.array([\n        [s11, s12, s13],\n        [s12, s22, s23],\n        [s13, s23, s33]\n    ])\n\n    # 2. Calculate trial invariants I1_tr and J2_tr\n    I1_tr = np.trace(sigma_tr)\n    \n    # Deviatoric trial stress tensor\n    s_tr = sigma_tr - (I1_tr / 3.0) * np.eye(3)\n    \n    # Second invariant of the deviatoric stress tensor\n    # J2 = 0.5 * s_ij * s_ij\n    J2_tr = 0.5 * np.sum(s_tr * s_tr)\n\n    # 3. Evaluate the trial yield function f_tr\n    # A small epsilon is added to sqrt(J2_tr) for numerical stability in edge cases where J2_tr is near zero,\n    # though for the given test cases it's not strictly necessary.\n    sqrt_J2_tr = np.sqrt(J2_tr)\n    f_tr = alpha * I1_tr + sqrt_J2_tr - k\n\n    # 4. Apply loading-unloading criterion\n    # A small tolerance for floating point comparisons near zero.\n    if f_tr <= 1e-9:\n        # Elastic or neutral loading step\n        delta_lambda = 0.0\n    else:\n        # Plastic step: Compute delta_lambda using the derived formula\n        denominator = 9.0 * K * alpha**2 + G\n        delta_lambda = f_tr / denominator\n        \n    return delta_lambda\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: (K, G, alpha, k, [s11, s22, s33, s12, s23, s13])\n        (166e9, 80e9, 0.2, 200e6, [50e6, 50e6, 50e6, 10e6, 0.0, 0.0]),\n        # Case 2\n        (166e9, 80e9, 0.2, 200e6, [50e6, 50e6, 50e6, 250e6, 0.0, 0.0]),\n        # Case 3\n        (166e9, 80e9, 0.2, 200e6, [400e6, 400e6, 400e6, 0.0, 0.0, 0.0]),\n        # Case 4\n        (166e9, 80e9, 0.2, 200e6, [1e9/3.0, 1e9/3.0, 1e9/3.0, 0.0, 0.0, 0.0]),\n        # Case 5\n        (166e9, 80e9, 0.2, 200e6, [-400e6, -400e6, -400e6, 0.0, 0.0, 0.0]),\n    ]\n\n    results = []\n    for case in test_cases:\n        K, G, alpha, k, sigma_vec = case\n        result = compute_delta_lambda(K, G, alpha, k, sigma_vec)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    # Using 'g' format specifier for clean representation of small numbers.\n    print(f\"[{','.join(f'{r:.6e}' for r in results)}]\")\n\nsolve()\n```", "id": "2899915"}]}