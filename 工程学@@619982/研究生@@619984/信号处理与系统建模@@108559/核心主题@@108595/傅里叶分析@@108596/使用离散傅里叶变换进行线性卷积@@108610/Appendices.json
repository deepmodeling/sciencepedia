{"hands_on_practices": [{"introduction": "理论教学常以从索引 $n=0$ 开始的信号为例，但在实际应用中，信号的支撑区间可能是任意的。本练习旨在将您从简化场景中解放出来，通过处理具有任意起始和结束索引的信号，掌握实现线性卷积的通用方法。您将学习如何严谨地确定最小 DFT 长度，对信号进行重新索引和零填充，并最终将结果映射回正确的时间索引，这是编写任何稳健卷积代码的基础 [@problem_id:2880468]。", "problem": "给定具有任意支撑区间的有限长离散时间信号。仅从线性卷积和离散傅里叶变换（DFT）的定义出发，构建一个严格的、分步的过程，用于在信号支撑于任意索引区间时通过DFT计算线性卷积。您的过程必须明确包括：(i) 如何确定最小变换长度，(ii) 如何将支撑于非 $[0,L-1]$ 区间的信号重新索引到从零开始的数组，(iii) 如何以及为何补零可以避免混叠，以及 (iv) 如何将逆变换结果映射回原始时间索引。\n\n然后，将您的过程应用于以下支撑于任意索引区间的信号：\n- $x[n]$ 支撑于 $[-2,1]$，其值为 $x[-2]=2$, $x[-1]=-1$, $x[0]=3$, $x[1]=1$。\n- $h[n]$ 支撑于 $[3,6]$，其值为 $h[3]=1$, $h[4]=0$, $h[5]=-2$, $h[6]=4$。\n\n使用最小有效DFT长度，并计算线性卷积输出样本 $y[4]$。请以精确数值形式提供最终结果，无需四舍五入。最终答案必须是单个数字。", "solution": "该问题是有效的。这是一个数字信号处理领域中定义明确（well-posed）的问题，具有科学性和客观性。我们首先构建通用过程，然后将其应用于所给出的具体信号。\n\n目标是使用离散傅里叶变换（DFT）计算两个有限长离散时间信号 $x[n]$ 和 $h[n]$ 的线性卷积。这些信号定义在任意整数支撑区间上。\n\n线性卷积定义为：\n$$y[n] = (x * h)[n] = \\sum_{k=-\\infty}^{\\infty} x[k] h[n-k]$$\n对于一个长度为 $N$（支撑于 $[0, N-1]$）的信号 $x[n]$，$N$ 点DFT及其逆变换（IDFT）定义为：\n$$X[k] = \\sum_{n=0}^{N-1} x[n] e^{-j\\frac{2\\pi}{N}nk}, \\quad k \\in [0, N-1]$$\n$$x[n] = \\frac{1}{N} \\sum_{k=0}^{N-1} X[k] e^{j\\frac{2\\pi}{N}nk}, \\quad n \\in [0, N-1]$$\n其中 $j = \\sqrt{-1}$。DFT的卷积定理指出，两个信号的循环卷积的DFT等于它们各自DFT的乘积。设 $x_N[n]$ 和 $h_N[n]$ 为两个长度为 $N$ 的信号。它们的 $N$ 点循环卷积定义为：\n$$(x_N \\circledast_N h_N)[n] = \\sum_{m=0}^{N-1} x_N[m] h_N[(n-m) \\pmod N]$$\n该定理表明：\n$$DFT\\{(x_N \\circledast_N h_N)[n]\\} = X_N[k] H_N[k]$$\n这意味着我们可以通过将信号变换到频域、相乘、再变换回时域来计算循环卷积：\n$$(x_N \\circledast_N h_N)[n] = IDFT\\{X_N[k] H_N[k]\\}$$\n该过程的核心是利用此性质来计算线性卷积。\n\n以下是分步过程：\n\n**(i) 最小变换长度与 (iii) 为避免混叠而进行的补零**\n\n假设信号 $x[n]$ 的支撑区间从索引 $n_{x,min}$ 开始，到 $n_{x,max}$ 结束。信号的长度为 $L_x = n_{x,max} - n_{x,min} + 1$。类似地，设 $h[n]$ 的支撑区间为 $[n_{h,min}, n_{h,max}]$，长度为 $L_h = n_{h,max} - n_{h,min} + 1$。\n\n线性卷积 $y[n] = (x * h)[n]$ 是一个有限长信号。其支撑区间从 $n_{y,min} = n_{x,min} + n_{h,min}$ 开始，到 $n_{y,max} = n_{x,max} + n_{h,max}$ 结束。所得信号 $y[n]$ 的长度为 $L_y = n_{y,max} - n_{y,min} + 1 = L_x + L_h - 1$。\n\n长度为 $N$ 的循环卷积与线性卷积的关系由下式给出：\n$$(x_N \\circledast_N h_N)[n] = \\sum_{m=-\\infty}^{\\infty} y[n-mN]$$\n这表明循环卷积是线性卷积的时域混叠（time-aliased）版本。为确保 $N$ 点循环卷积的结果在其整个持续时间内与线性卷积相同，我们必须防止移位后的副本 $y[n-mN]$ 的非零部分发生重叠。由于线性卷积 $y[n]$ 的长度为 $L_y = L_x + L_h - 1$，我们必须选择一个变换长度 $N$，使得 $N \\ge L_y$。\n\n因此，最小有效DFT长度为：\n$$N_{min} = L_x + L_h - 1$$\n要使用满足 $N \\ge N_{min}$ 的 $N$ 点DFT，我们必须将原始信号 $x[n]$ 和 $h[n]$ 扩展到这个长度。这通过补零（zero-padding）来实现。\n\n**(ii) 重新索引到从零开始的数组**\n\nDFT在形式上是为索引区间 $[0, N-1]$ 上的信号定义的。我们的信号 $x[n]$ 和 $h[n]$ 具有任意支撑区间。我们必须对它们进行重新索引，以创建新的从零开始的信号，记为 $x_p[n]$ 和 $h_p[n]$，长度为 $N$。\n\n对于支撑于 $[n_{x,min}, n_{x,max}]$ 的 $x[n]$，我们创建长度为 $N$ 的 $x_p[n]$：\n$$x_p[n] = \\begin{cases} x[n + n_{x,min}] & \\text{for } 0 \\le n < L_x \\\\ 0 & \\text{for } L_x \\le n < N \\end{cases}$$\n类似地，对于支撑于 $[n_{h,min}, n_{h,max}]$ 的 $h[n]$，我们创建长度为 $N$ 的 $h_p[n]$：\n$$h_p[n] = \\begin{cases} h[n + n_{h,min}] & \\text{for } 0 \\le n < L_h \\\\ 0 & \\text{for } L_h \\le n < N \\end{cases}$$\n这些补零后的信号 $x_p[n]$ 和 $h_p[n]$ 是DFT的输入。\n\n完整的计算序列是：\n1. 计算 $N$ 点DFT：$X_p[k] = DFT\\{x_p[n]\\}$ 和 $H_p[k] = DFT\\{h_p[n]\\}$。\n2. 在频域中相乘：$Y_p[k] = X_p[k] H_p[k]$。\n3. 计算 $N$ 点逆DFT：$y_p[n] = IDFT\\{Y_p[k]\\}$。得到的信号 $y_p[n]$ 包含了 $n \\in [0, L_y-1]$ 范围内的线性卷积值。\n\n**(iv) 将逆变换结果映射回原始时间索引**\n\n计算出的信号 $y_p[n]$ 支撑于 $[0, N-1]$，其非零部分包含在 $[0, L_y-1]$ 内。该信号代表了真实线性卷积输出 $y[n]$ 的值，但是基于从零开始的索引。我们必须将这些值映射回 $y[n]$ 的正确支撑区间，即 $[n_{y,min}, n_{y,max}]$。\n\n卷积的起始索引是 $n_{y,min} = n_{x,min} + n_{h,min}$。该映射是一个简单的索引平移：\n$$y[n] = y_p[n - n_{y,min}] = y_p[n - (n_{x,min} + n_{h,min})]$$\n这就得到了在其正确支撑区间上的最终线性卷积结果 $y[n]$。\n\n**应用于具体问题**\n\n给定信号：\n- $x[n]$ 支撑于 $[-2, 1]$，其值为 $\\{x[-2]=2, x[-1]=-1, x[0]=3, x[1]=1\\}$。\n- $h[n]$ 支撑于 $[3, 6]$，其值为 $\\{h[3]=1, h[4]=0, h[5]=-2, h[6]=4\\}$。\n\n首先，我们确定信号的属性：\n- 对于 $x[n]$：$n_{x,min} = -2$, $n_{x,max} = 1$。长度为 $L_x = 1 - (-2) + 1 = 4$。\n- 对于 $h[n]$：$n_{h,min} = 3$, $n_{h,max} = 6$。长度为 $L_h = 6 - 3 + 1 = 4$。\n\n接下来，我们应用该过程：\n\n1.  **确定最小DFT长度：**\n    $N_{min} = L_x + L_h - 1 = 4 + 4 - 1 = 7$。我们将使用 $N=7$。\n\n2.  **重新索引和补零：**\n    我们创建长度为 $N=7$ 的从零开始的信号 $x_p[n]$ 和 $h_p[n]$。\n    - 对于 $x_p[n]$，当 $n \\in [0,3]$ 时，其值为 $x[n-2]$：\n      $x_p[0] = x[-2] = 2$\n      $x_p[1] = x[-1] = -1$\n      $x_p[2] = x[0] = 3$\n      $x_p[3] = x[1] = 1$\n      $x_p[4]=x_p[5]=x_p[6]=0$。\n      因此，序列为 $x_p = \\{2, -1, 3, 1, 0, 0, 0\\}$。\n    - 对于 $h_p[n]$，当 $n \\in [0,3]$ 时，其值为 $h[n+3]$：\n      $h_p[0] = h[3] = 1$\n      $h_p[1] = h[4] = 0$\n      $h_p[2] = h[5] = -2$\n      $h_p[3] = h[6] = 4$\n      $h_p[4]=h_p[5]=h_p[6]=0$。\n      因此，序列为 $h_p = \\{1, 0, -2, 4, 0, 0, 0\\}$。\n\n3.  **确定输出映射：**\n    我们需要计算样本 $y[4]$。首先，我们找到输出 $y[n]$ 的支撑区间。\n    $n_{y,min} = n_{x,min} + n_{h,min} = -2 + 3 = 1$。\n    从计算出的序列 $y_p[n]$到 $y[n]$ 的映射是 $y[n] = y_p[n-1]$。\n    因此，所求样本 $y[4]$ 对应于 $y_p[4-1] = y_p[3]$。\n\n4.  **计算所需样本：**\n    序列 $y_p[n]$ 是 $x_p[n]$ 和 $h_p[n]$ 的 $7$ 点循环卷积的结果。我们根据此定义直接计算 $y_p[3]$：\n    $$y_p[3] = (x_p \\circledast_7 h_p)[3] = \\sum_{m=0}^{6} x_p[m] h_p[(3-m) \\pmod 7]$$\n    我们对 $m=0, 1, ..., 6$ 逐项展开求和。由于当 $m > 3$ 时 $x_p[m]=0$，所以求和仅在 $m \\in [0,3]$ 时非零。\n    - $m=0$: $x_p[0] h_p[(3-0) \\pmod 7] = x_p[0] h_p[3] = (2)(4) = 8$。\n    - $m=1$: $x_p[1] h_p[(3-1) \\pmod 7] = x_p[1] h_p[2] = (-1)(-2) = 2$。\n    - $m=2$: $x_p[2] h_p[(3-2) \\pmod 7] = x_p[2] h_p[1] = (3)(0) = 0$。\n    - $m=3$: $x_p[3] h_p[(3-3) \\pmod 7] = x_p[3] h_p[0] = (1)(1) = 1$。\n    - $m=4,5,6$：这些项为零，因为 $x_p[m]=0$。\n\n    将各项贡献相加：\n    $$y_p[3] = 8 + 2 + 0 + 1 = 11$$\n    由于 $y[4] = y_p[3]$，最终答案是 $11$。这个结果与通过直接计算线性卷积和得到的结果相同，从而证实了该过程的正确性。", "answer": "$$\\boxed{11}$$", "id": "2880468"}, {"introduction": "虽然基于 DFT 的卷积方法具有 $\\Theta(N \\log N)$ 的高效算法复杂度，但其实际性能对实现选择极为敏感。本练习揭示了一个关键的性能优化秘诀：变换长度 $N$ 的选择至关重要。通过比较一个“FFT 友好”的高度复合数长度和一个素数长度的计算成本，您将量化地理解为何仅仅增加少量零填充以获得一个“平滑”的变换长度，就能带来数量级的速度提升 [@problem_id:2880481]。", "problem": "要求您使用补零的离散傅里叶变换 (DFT) 方法计算两个复值序列的线性卷积。设输入长度为 $L_x = 65000$ 和 $L_h = 35000$。您需要选择一个变换长度 $N \\geq L_x + L_h - 1$，并通过执行两次正向 DFT 和一次逆向 DFT，然后在频域中进行逐元素相乘来实现卷积。\n\n请使用以下基础且广为接受的事实作为您的出发点：\n- 长度为 $L_x$ 和 $L_h$ 的序列的线性卷积可以通过循环卷积计算，方法是将两个序列都补零到任意长度 $N \\geq L_x + L_h - 1$，计算两个长度为 $N$ 的正向 DFT 和一个逆向 DFT，并在此之间进行逐点相乘；总成本主要由三个长度为 $N$ 的 DFT 决定。\n- 一个高度复合或“平滑”的 $N$（具有许多小的素因子）可以使用高效的混合基 Cooley–Tukey 快速傅里叶变换 (FFT) 算法，其运算量级为 $\\Theta(N \\log N)$ 且常数相对较小。\n- 对于素数 $N$，标准方法如 Bluestein 算法将 $N$ 点 DFT 简化为长度至少为 $2N - 1$ 的线性卷积，通常通过补零到 2 的幂次长度 $P$ 并执行长度为 $P$ 的 FFT 来实现。因此，通过 Bluestein 算法计算每个素数长度的 DFT，在不考虑低阶项的情况下，其成本约为 3 个长度为 $P$ 的 FFT。\n\n考虑两种可行的变换长度选择：\n- $N_1 = 100000$，这是一个高度复合数（例如，$100000 = 2^5 \\cdot 5^5$）。\n- $N_2 = 100003$，这是一个素数。\n\n对于您的运行时间模型，假设如下：\n- 一个平滑长度 $N$ 的复数 FFT 大约需要 $c \\, N \\log_2 N$ 次浮点运算，其中常数 $c > 0$。\n- 一个通过 Bluestein 算法计算的素数长度 $N$ 的复数 DFT 大约需要 $3 c \\, P \\log_2 P$ 次浮点运算，其中 $P$ 是满足 $P \\geq 2N - 1$ 的最小的 2 的幂次方。\n- 在这些尺寸下，逐点相乘和 chirp 相乘的 $O(N)$ 成本与 FFT 成本相比可以忽略不计。\n\n仅使用这些原理和定义，判断哪个陈述最能描述选择 $N_1$ 与 $N_2$ 对此任务中 FFT 运行时间及整体卷积复杂度的影响。\n\n- A. 选择 $N_1 = 100000$ 而不是 $N_2 = 100003$ 会在 FFT 部分产生大约一个数量级的加速（约 $8\\times$ 到 $9\\times$），这直接转化为在这些尺寸下整体卷积运行时间的类似加速。\n- B. 两种选择产生的运行时间基本相同，因为它们都是 $\\Theta(N \\log N)$；在这些尺寸下，渐近和实际上的差异不显著。\n- C. 素数选择 $N_2$ 更快，因为它避免了混合基分解的开销并减少了旋转因子的乘法次数。\n- D. FFT 速度的任何差异都可以忽略不计，因为在这些尺寸下，逐点相乘主导了成本，所以 $N_1$ 和 $N_2$ 的整体卷积运行时间几乎相同。", "solution": "对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n-   两个复值序列的线性卷积。\n-   输入序列长度：$L_x = 65000$ 和 $L_h = 35000$。\n-   方法：使用补零的离散傅里叶变换 (DFT)。\n-   变换长度要求：$N \\geq L_x + L_h - 1$。\n-   计算结构：两次正向 DFT，一次逆向 DFT，以及逐点相乘。总成本主要由三个长度为 $N$ 的 DFT 决定。\n-   平滑长度 $N$ 的 FFT 成本：大约 $c \\, N \\log_2 N$ 次运算，其中常数 $c > 0$。\n-   素数长度 $N$ 的 DFT 成本：使用 Bluestein 算法，大约 $3 c \\, P \\log_2 P$ 次运算，其中 $P$ 是满足 $P \\geq 2N - 1$ 的最小的 2 的幂次方。\n-   其他成本（逐点相乘）可以忽略不计。\n-   两种变换长度选择：$N_1 = 100000$（高度复合数）和 $N_2 = 100003$（素数）。\n\n**步骤 2：验证已知条件**\n该问题在科学上基于数字信号处理的原理，特别是卷积定理和快速傅里叶变换 (FFT) 算法。关于平滑长度与素数长度的 FFT 性能描述是标准且正确的。问题是良态的：它提供了具体、无矛盾的数据和一个清晰、客观的成本模型，从而可以对指定的两个选项进行唯一且有意义的比较。所需的最小变换长度为 $L_x + L_h - 1 = 65000 + 35000 - 1 = 99999$。两个建议的长度，$N_1 = 100000$ 和 $N_2 = 100003$，都满足条件 $N \\geq 99999$，因此它们都是有效的选择。问题没有歧义，并为逻辑推导提供了所有必要的信息。\n\n**步骤 3：结论与行动**\n问题有效。将推导解决方案。\n\n任务是比较使用两种不同 DFT 长度 $N_1$ 和 $N_2$ 进行线性卷积的计算成本。卷积的总成本 $C_{conv}$ 据称主要由三个长度为 $N$ 的 DFT 成本决定。因此，我们可以写出：\n$$C_{conv}(N) \\approx 3 \\cdot C_{DFT}(N)$$\n其中 $C_{DFT}(N)$ 是单个长度为 $N$ 的 DFT 的成本。我们现在将分析每种选择的成本。\n\n**情况 1：高度复合长度 $N_1 = 100000$**\n对于像 $N_1 = 100000 = 2^5 \\cdot 5^5$ 这样的高度复合（“平滑”）长度，可以使用高效的混合基 FFT 算法。根据提供的运行时间模型，一次此类 FFT 的成本为：\n$$C_{DFT}(N_1) \\approx c \\, N_1 \\log_2 N_1$$\n因此，卷积的总成本为：\n$$C_{conv}(N_1) \\approx 3 c \\, N_1 \\log_2 N_1$$\n代入 $N_1 = 100000 = 10^5$：\n$$C_{conv}(N_1) \\approx 3 c \\cdot 10^5 \\cdot \\log_2(10^5) = 3 c \\cdot 10^5 \\cdot 5 \\log_2(10)$$\n使用近似值 $\\log_2(10) \\approx 3.3219$：\n$$C_{conv}(N_1) \\approx 15 c \\cdot 10^5 \\cdot (3.3219) \\approx 4.983 \\times 10^6 \\cdot c$$\n\n**情况 2：素数长度 $N_2 = 100003$**\n对于像 $N_2 = 100003$ 这样的素数长度，必须使用像 Bluestein 这样的算法来计算 DFT。一次此类 DFT 的成本模型给出为：\n$$C_{DFT}(N_2) \\approx 3 c \\, P \\log_2 P$$\n其中 $P$ 是满足 $P \\geq 2N_2 - 1$ 的最小的 2 的幂次方。首先，我们计算 $P$ 的要求值：\n$$2N_2 - 1 = 2(100003) - 1 = 200006 - 1 = 200005$$\n我们必须找到最小的整数 $k$ 使得 $2^k \\geq 200005$。我们知道 $2^{17} = 131072$ 且 $2^{18} = 262144$。\n因此，最小的 2 的幂次方是 $P = 2^{18} = 262144$。\n单个素数长度为 $N_2$ 的 DFT 成本为：\n$$C_{DFT}(N_2) \\approx 3 c \\cdot P \\cdot \\log_2(P) = 3 c \\cdot 262144 \\cdot \\log_2(2^{18}) = 3 c \\cdot 262144 \\cdot 18 = 14155776c$$\n使用此素数长度进行卷积的总成本是这个数量的三倍：\n$$C_{conv}(N_2) \\approx 3 \\cdot C_{DFT}(N_2) = 3 \\cdot (3 c \\, P \\log_2 P) = 9 c \\, P \\log_2 P$$\n$$C_{conv}(N_2) \\approx 9 c \\cdot 262144 \\cdot 18 = 42467328c \\approx 4.247 \\times 10^7 \\cdot c$$\n\n**运行时间比较**\n为了量化差异，我们计算两种成本的比率：\n$$\\frac{C_{conv}(N_2)}{C_{conv}(N_1)} = \\frac{9 c \\, P \\log_2 P}{3 c \\, N_1 \\log_2 N_1} = \\frac{3 P \\log_2 P}{N_1 \\log_2 N_1}$$\n代入计算出的值：\n$$\\frac{C_{conv}(N_2)}{C_{conv}(N_1)} \\approx \\frac{4.247 \\times 10^7 \\cdot c}{4.983 \\times 10^6 \\cdot c} \\approx 8.52$$\n这个结果表明，选择素数长度 $N_2$ 会使计算比选择高度复合长度 $N_1$ 慢大约 $8.5$ 倍。换句话说，选择 $N_1$ 会带来大约 $8.5$ 倍的加速。\n\n**选项评估**\n\n-   **A. 选择 $N_1 = 100000$ 而不是 $N_2 = 100003$ 会在 FFT 部分产生大约一个数量级的加速（约 $8\\times$ 到 $9\\times$），这直接转化为在这些尺寸下整体卷积运行时间的类似加速。**\n    我们的计算显示加速因子约为 $8.5$，这正好处在“$8\\times$ 到 $9\\times$”的范围内。这可以合理地描述为“大约一个数量级”。问题陈述指出，总卷积成本主要由 FFT 成本决定，因此 FFT 部分的加速直接决定了整体的加速。这个陈述与我们的推导一致。\n    **结论：正确。**\n\n-   **B. 两种选择产生的运行时间基本相同，因为它们都是 $\\Theta(N \\log N)$；在这些尺寸下，渐近和实际上的差异不显著。**\n    这是对渐近符号的幼稚解释。虽然许多 DFT 算法被宽泛地归类为 $\\Theta(N \\log N)$，但符号中隐藏的常数因子在实践中至关重要。素数长度 DFT 的成本模型不是 $\\Theta(N_2 \\log N_2)$，而是 $\\Theta(P \\log P)$，其中 $P$ 大约是 $N_2$ 的两倍，并且它带有一个更大的乘法常数（总卷积成本中为 $9c$ 对比 $3c$）。$8.5$ 倍的运行时间差异绝非“基本相同”。\n    **结论：错误。**\n\n-   **C. 素数选择 $N_2$ 更快，因为它避免了混合基分解的开销并减少了旋转因子的乘法次数。**\n    这种说法与 FFT 算法的既定事实相反，并与我们的计算直接矛盾。用于素数长度的 Bluestein 算法通过将 DFT 转换为卷积，然后使用更大的 FFT 求解，从而引入了巨大的计算开销。它比直接在平滑长度序列上进行高度优化的 FFT 要慢得多。该选项的前提是错误的。\n    **结论：错误。**\n\n-   **D. FFT 速度的任何差异都可以忽略不计，因为在这些尺寸下，逐点相乘主导了成本，所以 $N_1$ 和 $N_2$ 的整体卷积运行时间几乎相同。**\n    这一说法直接与问题的一个前提相矛盾：“逐点相乘的 $O(N)$ 成本...与 FFT 成本相比可以忽略不计”。FFT 的成本为 $\\Theta(N \\log N)$，比乘法的 $\\Theta(N)$ 成本增长得更快，并且对于如此处考虑的大 $N$ 来说，它占绝对主导地位。\n    **结论：错误。**", "answer": "$$\\boxed{A}$$", "id": "2880481"}, {"introduction": "理论算法与实际软件实现之间存在差距，可能会出现诸如缩放因子不正确之类的细微错误。本练习将展示如何利用离散傅里叶变换的内在数学属性（例如时域样本总和与频率域直流分量之间的关系）来验证结果和诊断问题。这不仅是关于计算，更是关于构建可靠的系统；它教会我们如何运用理论知识来创建自检机制或识别常见的实现错误 [@problem_id:2880462]。", "problem": "考虑两个长度分别为 $L_{x}$ 和 $L_{h}$ 的实数、有限长离散时间信号 $x[n]$ 和 $h[n]$。将它们零填充至一个公共长度 $N \\geq L_{x}+L_{h}-1$，定义为 $x_{N}[n]$ 和 $h_{N}[n]$，其中当 $0 \\leq n \\leq L_{x}-1$ 时，$x_{N}[n]=x[n]$，否则 $x_{N}[n]=0$；$h_{N}[n]$ 的定义类似。设长度为 $N$ 的离散傅里叶变换 (DFT) 定义为\n$$\nX[k] \\triangleq \\sum_{n=0}^{N-1} x_{N}[n] \\exp\\!\\left(-j \\frac{2\\pi}{N}kn\\right), \\quad H[k] \\triangleq \\sum_{n=0}^{N-1} h_{N}[n] \\exp\\!\\left(-j \\frac{2\\pi}{N}kn\\right),\n$$\n其中 $k=0,1,\\ldots,N-1$；相应的逆离散傅里叶变换 (IDFT) 定义为\n$$\nx_{N}[n] \\triangleq \\frac{1}{N} \\sum_{k=0}^{N-1} X[k] \\exp\\!\\left(j \\frac{2\\pi}{N}kn\\right), \\quad h_{N}[n] \\triangleq \\frac{1}{N} \\sum_{k=0}^{N-1} H[k] \\exp\\!\\left(j \\frac{2\\pi}{N}kn\\right),\n$$\n其中 $n=0,1,\\ldots,N-1$。真实的线性卷积为 $y[n] \\triangleq (x*h)[n]$，其中 $n=0,1,\\ldots,L_{x}+L_{h}-2$。\n\n一位工程师使用 DFT 和快速傅里叶变换 (FFT)，通过循环卷积嵌入来计算线性卷积，但在应用逆快速傅里叶变换 (IFFT) 时，因忽略了 $1/N$ 因子而导致缩放错误。具体来说，他们生成了\n$$\n\\tilde{y}[n] \\triangleq \\sum_{k=0}^{N-1} X[k]\\,H[k]\\,\\exp\\!\\left(j \\frac{2\\pi}{N}kn\\right), \\quad n=0,1,\\ldots,N-1,\n$$\n然后保留前 $L_{x}+L_{h}-1$ 个样本作为所谓的线性卷积。\n\n严格根据上述定义及其推导出的标准属性，完成以下任务：\n\n1. 推导精确的标量幅度偏差 $\\alpha$，使得对于所有 $n \\in \\{0,1,\\ldots,L_{x}+L_{h}-2\\}$，都有 $\\tilde{y}[n] = \\alpha\\, y[n]$，并用 $N$ 表示 $\\alpha$。\n\n2. 提出一个检测与校正流程，该流程不假定对 $N$ 或任何特定库的缩放约定有先验知识。你的流程必须仅依赖于从 $x[n]$、$h[n]$ 和计算出的 $\\tilde{y}[n]$ 中直接可观察的量。具体来说，推导一个标量校正因子 $\\hat{c}$，当它与 $\\tilde{y}[n]$ 相乘时，能够对所有 $n \\in \\{0,1,\\ldots,L_{x}+L_{h}-2\\}$ 产生真实的线性卷积 $y[n]$。请用 $\\sum_{n=0}^{L_{x}-1} x[n]$、$\\sum_{m=0}^{L_{h}-1} h[m]$ 和 $\\sum_{n=0}^{L_{x}+L_{h}-2} \\tilde{y}[n]$ 来纯粹地表示 $\\hat{c}$。\n\n给出校正因子 $\\hat{c}$ 的显式闭式解析表达式作为最终答案。不需要数值近似，也不涉及单位。", "solution": "对问题陈述的有效性进行审查。\n\n**步骤 1：提取已知条件**\n- 两个长度分别为 $L_x$ 和 $L_h$ 的实数、有限长信号 $x[n]$ 和 $h[n]$。\n- 零填充版本 $x_N[n]$ 和 $h_N[n]$，其公共长度 $N \\geq L_x+L_h-1$。\n- 长度为$N$的离散傅里叶变换 (DFT) 定义：$X[k] \\triangleq \\sum_{n=0}^{N-1} x_{N}[n] \\exp(-j \\frac{2\\pi}{N}kn)$。\n- 长度为$N$的逆离散傅里叶变换 (IDFT) 定义：$x_{N}[n] \\triangleq \\frac{1}{N} \\sum_{k=0}^{N-1} X[k] \\exp(j \\frac{2\\pi}{N}kn)$。\n- 线性卷积定义：$y[n] \\triangleq (x*h)[n]$，其中 $n=0,1,\\ldots,L_{x}+L_{h}-2$。\n- 错误计算的信号：$\\tilde{y}[n] \\triangleq \\sum_{k=0}^{N-1} X[k]\\,H[k]\\,\\exp(j \\frac{2\\pi}{N}kn)$。\n- 任务 1：找到标量偏差 $\\alpha$ 使得 $\\tilde{y}[n] = \\alpha\\, y[n]$。\n- 任务 2：用 $\\sum_{n=0}^{L_{x}-1} x[n]$、$\\sum_{m=0}^{L_{h}-1} h[m]$ 和 $\\sum_{n=0}^{L_{x}+L_{h}-2} \\tilde{y}[n]$ 表示校正因子 $\\hat{c}$。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据，因为它涉及使用离散傅里叶变换进行线性卷积的标准定义和应用，这是数字信号处理的基石。该问题是适定的，提供了所有必要的定义和约束，例如 $N \\geq L_x+L_h-1$, 这是确保通过 DFT 实现的循环卷积等同于线性卷积的精确条件。在 IFFT 实现中缺少缩放因子的情况是一个实际且常见的错误。该问题是客观的，使用精确的数学语言并要求进行形式化推导。它没有表现出验证清单中列出的任何缺陷。\n\n**步骤 3：结论与行动**\n问题被判定为**有效**。将提供完整解答。\n\n使用 DFT 执行线性卷积的基本原理是卷积定理。对于两个离散时间信号 $x_N[n]$ 和 $h_N[n]$，它们的循环卷积（表示为 $y_c[n] = (x_N \\circledast h_N)[n]$）的 DFT 是各自 DFT 的乘积：$Y_c[k] = X[k]H[k]$。\n原始信号 $x[n]$ 和 $h[n]$ 的线性卷积 $y[n]$ 的长度为 $L_y = L_x+L_h-1$。通过将输入信号零填充到长度 $N \\geq L_y$，我们确保对于前 $L_y$ 个样本，循环卷积 $y_c[n]$ 等同于线性卷积 $y[n]$，即对于 $n \\in \\{0, 1, \\ldots, L_y-1\\}$ 有 $y_c[n] = y[n]$，而对于 $n \\geq L_y$ 有 $y_c[n]=0$。\n\n让我们将正确流程的结果称为 $y_N[n]$。它是通过对乘积 $X[k]H[k]$ 进行正确的逆 DFT 得到的。根据所提供的 IDFT 定义：\n$$\ny_N[n] = \\frac{1}{N} \\sum_{k=0}^{N-1} X[k]H[k] \\exp\\left(j \\frac{2\\pi}{N}kn\\right)\n$$\n对于 $n \\in \\{0, 1, \\ldots, L_x+L_h-2\\}$，这个 $y_N[n]$ 与真实的线性卷积 $y[n]$ 相同。\n\n**第 1 部分：标量幅度偏差 $\\alpha$ 的推导**\n\n工程师计算的量 $\\tilde{y}[n]$ 定义为：\n$$\n\\tilde{y}[n] \\triangleq \\sum_{k=0}^{N-1} X[k]H[k] \\exp\\left(j \\frac{2\\pi}{N}kn\\right)\n$$\n通过直接比较正确结果 $y_N[n]$ 和错误计算的 $\\tilde{y}[n]$ 的表达式，我们立即可以看出它们之间的关系：\n$$\n\\tilde{y}[n] = N \\cdot y_N[n]\n$$\n由于对于相关索引 $n \\in \\{0, 1, \\ldots, L_x+L_h-2\\}$，有 $y_N[n]=y[n]$，因此可得：\n$$\n\\tilde{y}[n] = N \\cdot y[n]\n$$\n因此，标量幅度偏差为 $\\alpha = N$。\n\n**第 2 部分：校正因子 $\\hat{c}$ 的推导**\n\n任务是找到一个校正因子 $\\hat{c}$，使得 $\\hat{c} \\cdot \\tilde{y}[n] = y[n]$。从第 1 部分可知，$\\tilde{y}[n] = N y[n]$，所以我们必须有 $\\hat{c} \\cdot (N y[n]) = y[n]$，这意味着 $\\hat{c} = \\frac{1}{N}$。然而，$N$ 是未知的。我们必须仅使用可观察的量来表示 $N$：输入信号 $x[n]$ 和 $h[n]$，以及计算出的输出 $\\tilde{y}[n]$。\n\n我们使用 DFT 在频率索引 $k=0$ 处的性质。$k=0$ 处的 DFT 是时域样本的总和。对于输入信号 $x[n]$ 和 $h[n]$，其零填充版本 $x_N[n]$ 和 $h_N[n]$ 的 DFT 分别为 $X[k]$ 和 $H[k]$。\n在 $k=0$ 时：\n$$\nX[0] = \\sum_{n=0}^{N-1} x_N[n] \\exp(0) = \\sum_{n=0}^{N-1} x_N[n] = \\sum_{n=0}^{L_x-1} x[n]\n$$\n$$\nH[0] = \\sum_{m=0}^{N-1} h_N[m] \\exp(0) = \\sum_{m=0}^{N-1} h_N[m] = \\sum_{m=0}^{L_h-1} h[m]\n$$\n现在考虑计算信号 $\\tilde{y}[n]$ 的样本之和。我们对从 $n=0$ 到 $N-1$ 的整个周期求和：\n$$\n\\sum_{n=0}^{N-1} \\tilde{y}[n] = \\sum_{n=0}^{N-1} \\left( \\sum_{k=0}^{N-1} X[k]H[k] \\exp\\left(j \\frac{2\\pi}{N}kn\\right) \\right)\n$$\n通过交换求和顺序：\n$$\n\\sum_{n=0}^{N-1} \\tilde{y}[n] = \\sum_{k=0}^{N-1} X[k]H[k] \\left( \\sum_{n=0}^{N-1} \\exp\\left(j \\frac{2\\pi}{N}kn\\right) \\right)\n$$\n内部的和是 DFT 基向量的一个基本恒等式。当 $k=0$（或 $N$ 的任何整数倍）时，其值为 $N$，否则为 0。对于 $k \\in \\{0, 1, \\ldots, N-1\\}$，该和仅在 $k=0$ 时非零。\n$$\n\\sum_{n=0}^{N-1} \\exp\\left(j \\frac{2\\pi}{N}kn\\right) = N \\delta[k]\n$$\n其中 $\\delta[k]$ 是 Kronecker delta 函数。\n将此代入 $\\tilde{y}[n]$ 的和的表达式中，可得：\n$$\n\\sum_{n=0}^{N-1} \\tilde{y}[n] = \\sum_{k=0}^{N-1} X[k]H[k] (N \\delta[k]) = N \\cdot X[0]H[0]\n$$\n正如已确定的，真实的线性卷积 $y[n]$ 仅在 $n \\in \\{0, 1, \\ldots, L_x+L_h-2\\}$ 区间内非零。由于 $\\tilde{y}[n] = N y[n]$，$\\tilde{y}[n]$ 在 $n \\geq L_x+L_h-1$ 时也必须为零。因此，$\\tilde{y}[n]$ 从 $n=0$ 到 $N-1$ 的和与从 $n=0$ 到 $L_x+L_h-2$ 的和是相同的：\n$$\n\\sum_{n=0}^{L_x+L_h-2} \\tilde{y}[n] = \\sum_{n=0}^{N-1} \\tilde{y}[n]\n$$\n结合这些结果，我们在可观察量之间建立了一个关系：\n$$\n\\sum_{n=0}^{L_x+L_h-2} \\tilde{y}[n] = N \\cdot X[0]H[0] = N \\left( \\sum_{n=0}^{L_x-1} x[n] \\right) \\left( \\sum_{m=0}^{L_h-1} h[m] \\right)\n$$\n在输入信号之和的乘积非零的非平凡条件下，我们可以从此方程中解出 $N$：\n$$\nN = \\frac{\\sum_{n=0}^{L_x+L_h-2} \\tilde{y}[n]}{\\left( \\sum_{n=0}^{L_x-1} x[n] \\right) \\left( \\sum_{m=0}^{L_h-1} h[m] \\right)}\n$$\n所需的校正因子是 $\\hat{c} = \\frac{1}{N}$。因此：\n$$\n\\hat{c} = \\frac{\\left( \\sum_{n=0}^{L_x-1} x[n] \\right) \\left( \\sum_{m=0}^{L_h-1} h[m] \\right)}{\\sum_{n=0}^{L_x+L_h-2} \\tilde{y}[n]}\n$$\n如要求所述，此表达式仅依赖于已知输入信号 $x[n]$ 和 $h[n]$ 的样本之和，以及错误计算的输出 $\\tilde{y}[n]$ 的样本之和。将 $\\tilde{y}[n]$ 乘以该因子 $\\hat{c}$ 将校正缩放误差并产生真实的线性卷积 $y[n]$。", "answer": "$$\n\\boxed{\\frac{\\left( \\sum_{n=0}^{L_x-1} x[n] \\right) \\left( \\sum_{m=0}^{L_h-1} h[m] \\right)}{\\sum_{n=0}^{L_x+L_h-2} \\tilde{y}[n]}}\n$$", "id": "2880462"}]}