{"hands_on_practices": [{"introduction": "线性相位FIR滤波器的核心特性源于其脉冲响应的对称性。本练习将引导你从第一性原理出发，通过一个具体的I型滤波器（脉冲响应长度为奇数且偶对称）的例子，亲手推导其频率响应。这个过程将清晰地揭示时间域的对称性如何转化为频率域中一个实值幅度函数和一个线性相位项，从而让你深入理解群延迟恒定的根本原因。[@problem_id:2881290]", "problem": "考虑一个长度为 $N=7$ 的实值有限冲激响应 (FIR) 滤波器，其对于所有整数 $n$ 具有偶对称性 $h[n]=h[6-n]$，并具有以下指定的系数：\n- $h[0]=\\frac{1}{16}$，$h[1]=-\\frac{1}{8}$，$h[2]=\\frac{3}{16}$，$h[3]=\\frac{1}{4}$，并根据对称性得到 $h[4]=\\frac{3}{16}$，$h[5]=-\\frac{1}{8}$，$h[6]=\\frac{1}{16}$。\n\n仅从冲激响应的离散时间傅里叶变换 (DTFT) 的定义和给定的对称性出发，推导频率响应的线性相位分解形式 $H(\\omega)=e^{-j \\omega M}\\,A(\\omega)$ 的显式表达式，并将实振幅函数 $A(\\omega)$ 识别为余弦项之和。然后，使用以相位定义的群延迟的定义，确定该滤波器的恒定群延迟。\n\n所有角度量均使用弧度，群延迟以采样点数为单位表示。将您的最终答案以单行矩阵中的两个条目的形式给出，其中第一个条目是显式的 $A(\\omega)$，第二个条目是群延迟。无需四舍五入。", "solution": "对问题陈述进行有效性验证。\n\n提取的已知条件如下：\n1.  滤波器为实值有限冲激响应 (FIR) 滤波器。\n2.  滤波器长度为 $N=7$。\n3.  冲激响应具有偶对称性：$h[n]=h[6-n]$，对所有整数 $n$ 成立。\n4.  系数指定为： $h[0]=\\frac{1}{16}$，$h[1]=-\\frac{1}{8}$，$h[2]=\\frac{3}{16}$，$h[3]=\\frac{1}{4}$。其余系数由对称性确定：$h[4]=h[6-4]=h[2]=\\frac{3}{16}$，$h[5]=h[6-5]=h[1]=-\\frac{1}{8}$，以及 $h[6]=h[6-6]=h[0]=\\frac{1}{16}$。\n\n该问题具有科学依据，提法恰当且客观。它涉及数字信号处理中的标准概念，特别是对 I 型线性相位 FIR 滤波器的分析。所有提供的数据都一致且足以得出唯一解。因此，该问题被视为有效。下面将进行求解。\n\n具有冲激响应 $h[n]$ 的离散时间滤波器的频率响应 $H(\\omega)$ 由其离散时间傅里叶变换 (DTFT) 给出。对于长度为 $N$ 的滤波器，其定义为：\n$$H(\\omega) = \\sum_{n=0}^{N-1} h[n] e^{-j \\omega n}$$\n给定滤波器长度 $N=7$，求和范围是从 $n=0$到 $n=6$：\n$$H(\\omega) = \\sum_{n=0}^{6} h[n] e^{-j \\omega n}$$\n展开此求和式可得：\n$$H(\\omega) = h[0] + h[1]e^{-j\\omega} + h[2]e^{-j2\\omega} + h[3]e^{-j3\\omega} + h[4]e^{-j4\\omega} + h[5]e^{-j5\\omega} + h[6]e^{-j6\\omega}$$\n问题陈述指出冲激响应具有偶对称性，$h[n]=h[6-n]$。我们将此性质应用于系数：\n$h[6] = h[0]$，$h[5] = h[1]$，以及 $h[4] = h[2]$。\n将这些代入 $H(\\omega)$ 的表达式中：\n$$H(\\omega) = h[0] + h[1]e^{-j\\omega} + h[2]e^{-j2\\omega} + h[3]e^{-j3\\omega} + h[2]e^{-j4\\omega} + h[1]e^{-j5\\omega} + h[0]e^{-j6\\omega}$$\n为揭示线性相位结构，我们必须围绕冲激响应的中心对称地对各项进行分组。对于长度为 $N=7$ 的滤波器，其对称中心位于索引 $n=\\frac{N-1}{2} = \\frac{7-1}{2}=3$ 处。\n$$H(\\omega) = h[3]e^{-j3\\omega} + \\left( h[0] + h[0]e^{-j6\\omega} \\right) + \\left( h[1]e^{-j\\omega} + h[1]e^{-j5\\omega} \\right) + \\left( h[2]e^{-j2\\omega} + h[2]e^{-j4\\omega} \\right)$$\n我们提取出对应于对称中心的相位项 $e^{-j3\\omega}$：\n$$H(\\omega) = e^{-j3\\omega} \\left[ h[3] + h[0]\\left(e^{j3\\omega} + e^{-j3\\omega}\\right) + h[1]\\left(e^{j2\\omega} + e^{-j2\\omega}\\right) + h[2]\\left(e^{j\\omega} + e^{-j\\omega}\\right) \\right]$$\n使用欧拉恒等式 $2\\cos(\\theta) = e^{j\\theta} + e^{-j\\theta}$，我们可以将括号内的项表示为余弦形式：\n$$H(\\omega) = e^{-j3\\omega} \\left[ h[3] + 2h[0]\\cos(3\\omega) + 2h[1]\\cos(2\\omega) + 2h[2]\\cos(\\omega) \\right]$$\n此表达式即为所求的线性相位形式 $H(\\omega)=e^{-j \\omega M}A(\\omega)$，其中 $M=3$ 且 $A(\\omega)$ 是实值振幅函数：\n$$A(\\omega) = h[3] + 2h[2]\\cos(\\omega) + 2h[1]\\cos(2\\omega) + 2h[0]\\cos(3\\omega)$$\n现在，我们代入给定的系数值：$h[0]=\\frac{1}{16}$，$h[1]=-\\frac{1}{8}$，$h[2]=\\frac{3}{16}$，$h[3]=\\frac{1}{4}$。\n$$A(\\omega) = \\frac{1}{4} + 2\\left(\\frac{3}{16}\\right)\\cos(\\omega) + 2\\left(-\\frac{1}{8}\\right)\\cos(2\\omega) + 2\\left(\\frac{1}{16}\\right)\\cos(3\\omega)$$\n$$A(\\omega) = \\frac{1}{4} + \\frac{3}{8}\\cos(\\omega) - \\frac{1}{4}\\cos(2\\omega) + \\frac{1}{8}\\cos(3\\omega)$$\n这就是实振幅函数 $A(\\omega)$ 的显式表达式。\n\n接下来，我们确定群延迟 $\\tau_g(\\omega)$。群延迟定义为频率响应的相位对角频率 $\\omega$ 的导数的相反数：\n$$\\tau_g(\\omega) = -\\frac{d}{d\\omega} \\arg\\{H(\\omega)\\}$$\n频率响应为 $H(\\omega) = A(\\omega)e^{-j3\\omega}$。函数 $A(\\omega)$ 是实数，因此其相位 $\\arg\\{A(\\omega)\\}$ 为 $0$ (如果 $A(\\omega) > 0$) 或 $\\pi$ (如果 $A(\\omega) < 0$)。\n$H(\\omega)$ 的总相位，记为 $\\phi(\\omega)$，是：\n$$\\phi(\\omega) = \\arg\\{H(\\omega)\\} = \\arg\\{A(\\omega)e^{-j3\\omega}\\} = \\arg\\{A(\\omega)\\} + \\arg\\{e^{-j3\\omega}\\} = \\arg\\{A(\\omega)\\} - 3\\omega$$\n对于线性相位滤波器，群延迟通常由相位的线性分量定义。在 $A(\\omega)$ 符号不变的 $\\omega$ 区域内，$\\arg\\{A(\\omega)\\}$ 是一个常数（$0$ 或 $\\pi$），其导数为零。因此，相位的导数为：\n$$\\frac{d\\phi(\\omega)}{d\\omega} = \\frac{d}{d\\omega}(-3\\omega) = -3$$\n因此，群延迟是恒定的：\n$$\\tau_g(\\omega) = -(-3) = 3$$\n群延迟为 $3$ 个采样点。这与 I 型线性相位 FIR 滤波器的一般理论是一致的，对于这类滤波器，群延迟是恒定的，且等于 $(N-1)/2$。\n\n最终答案由 $A(\\omega)$ 的表达式和群延迟的恒定值组成。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{1}{4} + \\frac{3}{8}\\cos(\\omega) - \\frac{1}{4}\\cos(2\\omega) + \\frac{1}{8}\\cos(3\\omega) & 3\n\\end{pmatrix}\n}\n$$", "id": "2881290"}, {"introduction": "并非所有线性相位滤波器的群延迟都是整数个采样点。II型FIR滤波器（脉冲响应长度为偶数且偶对称）就是一个重要的例子，其对称中心落在采样点之间，导致了分数延迟。通过分析一个具体的II型滤波器，你将计算出其非整数的群延迟，从而直观地理解这一概念。这项实践有助于澄清分数延迟的物理和数学含义，这对于理解信号重建和插值等高级主题至关重要。[@problem_id:1733196]", "problem": "一个因果有限冲激响应（FIR）滤波器的特征是其冲激响应 $h[n]$ 仅在有限时长内非零。考虑一个特定的因果FIR滤波器，其冲激响应由以下表达式给出：\n$$h[n] = 2\\delta[n] + 5\\delta[n-1] + 5\\delta[n-2] + 2\\delta[n-3]$$\n其中 $\\delta[n]$ 是克罗内克δ函数，当 $n=0$ 时其值为1，其他情况下为0。\n\n已知此类滤波器具有广义线性相位，这意味着其频率响应 $H(e^{j\\omega})$ 可以写成 $H(e^{j\\omega}) = A(e^{j\\omega}) e^{-j\\omega\\tau_g}$ 的形式，其中 $A(e^{j\\omega})$ 是角频率 $\\omega$ 的实值函数，而 $\\tau_g$ 是滤波器的恒定群延迟。\n\n确定群延迟 $\\tau_g$ 的精确值。答案以采样点为单位表示。", "solution": "给定的因果FIR冲激响应为\n$$\nh[n] = 2\\delta[n] + 5\\delta[n-1] + 5\\delta[n-2] + 2\\delta[n-3],\n$$\n这意味着非零采样点为 $h[0]=2$、$h[1]=5$、$h[2]=5$、$h[3]=2$，其余点均为零。其长度为 $N=4$。观察其对称性\n$$\nh[n]=h[N-1-n], \\quad \\text{for } n=0,1,2,3,\n$$\n因为 $h[0]=h[3]$ 且 $h[1]=h[2]$。这是一个长度 $N$ 为偶数的偶对称FIR，即II型线性相位FIR滤波器。\n\n离散时间傅里叶变换（频率响应）是\n$$\nH(e^{j\\omega})=\\sum_{n=0}^{N-1} h[n]e^{-j\\omega n}.\n$$\n通过围绕中点 $(N-1)/2$ 对求和进行变换，可以提出一个线性相位项：\n$$\nH(e^{j\\omega})=e^{-j\\omega\\frac{N-1}{2}}\\sum_{n=0}^{N-1} h[n]e^{-j\\omega(n-\\frac{N-1}{2})}.\n$$\n利用对称性 $h[n]=h[N-1-n]$，将求和中的第 $n$ 项与第 $N-1-n$ 项配对，得到一个实的偶对称被加项：\n$$\n\\sum_{n=0}^{N-1} h[n]e^{-j\\omega(n-\\frac{N-1}{2})}\n= \\sum_{n=0}^{\\frac{N}{2}-1} 2h[n]\\cos\\left(\\omega\\left(n-\\frac{N-1}{2}\\right)\\right),\n$$\n上式对于所有 $\\omega$ 都是纯实数。因此，\n$$\nH(e^{j\\omega}) = A(e^{j\\omega})\\,e^{-j\\omega\\tau_{g}},\n$$\n其中\n$$\n\\tau_{g}=\\frac{N-1}{2}\n$$\n且 $A(e^{j\\omega})$ 是实值的。对于给定的滤波器，$N=4$，因此\n$$\n\\tau_{g}=\\frac{4-1}{2}=\\frac{3}{2} \\text{ 采样点}.\n$$\n\n等价地，我们可以直接引用线性相位FIR滤波器的通用结论：对于对称系数且长度为 $N$ 的滤波器，其相位是线性的，斜率为 $-(N-1)/2$，因此恒定群延迟为 $\\tau_{g}=(N-1)/2$。\n\n因此，精确的群延迟是 $\\frac{3}{2}$ 个采样点。", "answer": "$$\\boxed{\\frac{3}{2}}$$", "id": "1733196"}, {"introduction": "理论的优雅最终需要在计算实践中得到验证。本练习将带你从纸笔推导走向计算机编程，学习如何使用快速傅里叶变换（FFT）这一核心工具来分析和验证线性相位FIR滤波器的特性。你将通过编程实现对四种不同类型滤波器的频率响应进行采样，并通过相位校正来检验其幅频特性的对称性，同时通过线性拟合来精确估计群延迟。这项实践旨在将理论知识转化为实际的计算技能，这对于现代信号处理工程师的设计与分析工作至关重要。[@problem_id:2881267]", "problem": "您的任务是，使用离散角频率网格和对补零序列的快速傅里叶变换，以编程方式计算具有线性相位的实数有限冲激响应的离散时间傅里叶变换，同时保持其线性相位结构。目标是展示如何选择角频率网格，以及如何校正固有的线性相位，从而使残余频谱能够揭示由时域对称性所暗示的偶对称或奇对称结构。您必须实现该计算过程，并返回定量指标以验证预期的结构和群延迟。角度必须以弧度为单位。不涉及物理单位。\n\n请使用以下基本定义作为起点：\n- 序列 $h[n]$ 的离散时间傅里叶变换 (DTFT) 为 $H\\!\\left(e^{j\\omega}\\right)=\\sum_{n=0}^{M-1} h[n]\\,e^{-j\\omega n}$，其中 $M$ 是 $h[n]$ 的长度，$\\omega$ 是角频率，单位为弧度。\n- 一个线性相位有限冲激响应 $h[n]$ 满足 $h[n]=h[M-1-n]$ (对称) 或 $h[n]=-h[M-1-n]$ (反对称)，这意味着 $H\\!\\left(e^{j\\omega}\\right)=e^{-j\\omega\\tau}\\,A(\\omega)$，其中 $\\tau=(M-1)/2$ 是一个实数值群延迟，而 $A(\\omega)$ 是一个实偶或纯虚奇的残余谱，具体取决于对称类型。\n- 对长度为 $N$ 的序列进行快速傅里叶变换 (FFT) 会在网格 $\\omega_m=\\frac{2\\pi m}{N}$（其中 $m\\in\\{0,1,\\dots,N-1\\}$）上产生 $2\\pi$ 周期的离散时间傅里叶变换的样本。将 $h[n]$ 补零至长度 $N\\ge M$ 会在不改变底层频谱的情况下增加频率采样密度。\n\n您的程序必须针对每个测试用例，基于这些原则实现以下步骤：\n1. 设有限冲激响应的长度为 $M$。选择一个每个测试用例指定的整数填充因子 $S>0$。将 FFT 长度 $N$ 定义为满足 $N\\ge S\\,M$ 的最小的 2 的幂。这个 $N$ 决定了一个均匀的频率网格 $\\omega_m=\\frac{2\\pi m}{N}$，其中 $m\\in\\{0,1,\\dots,\\lfloor N/2\\rfloor\\}$，该网格以弧度为单位覆盖了 $[0,\\pi]$。角度以弧度为单位。\n2. 将 $h[n]$ 补零至长度 $N$，并使用 FFT 计算索引为 k 的离散傅里叶变换样本 $H_k$，这对应于 $\\omega_k=\\frac{2\\pi k}{N}$ 处的 $H\\!\\left(e^{j\\omega_k}\\right)$。\n3. 设群延迟为 $\\tau=\\frac{M-1}{2}$。构建线性相位校正后的频谱 $G_k=H_k\\,e^{j\\omega_k\\tau}$。对于对称的 $h[n]$，理想的 $G_k$ 是实数值的；对于反对称的 $h[n]$，理想的 $G_k$ 是纯虚数的。\n4. 定义一个轴泄漏度量，用于量化与预期轴的偏差：\n   - 如果 $h[n]$ 是对称的，将泄漏定义为 $\\frac{\\max_k |\\operatorname{Im}\\{G_k\\}|}{\\max_k |G_k|+\\varepsilon}$。\n   - 如果 $h[n]$ 是反对称的，将泄漏定义为 $\\frac{\\max_k |\\operatorname{Re}\\{G_k\\}|}{\\max_k |G_k|+\\varepsilon}$。\n   使用 $\\varepsilon=10^{-12}$ 以避免除以零。\n5. 从 $H_k$ 在 $\\omega\\in[0,\\pi]$ 上的展开相位估计线性相位斜率，需排除 $|H_k|$ 极小的索引：选择满足 $|H_k|\\ge 10^{-6}\\,\\max_k |H_k|$ 的索引。使用最小二乘法将直线 $\\phi(\\omega)\\approx a+b\\,\\omega$ 拟合到所选索引的展开相位样本 $\\phi(\\omega_k)=\\arg H_k$ 上。预期斜率应为 $b\\approx -\\tau$。报告斜率误差 $|b+\\tau|$。\n\n为以下测试套件实现上述步骤。每个测试用例提供一个长度为 $M$ 的冲激响应 $h[n]$、一个对称性标签和一个过采样因子 $S$。序列明确给出：\n- 测试用例 1 (对称, I 型): $h[n]=[\\,0.2,\\,0.3,\\,0.4,\\,0.5,\\,0.4,\\,0.3,\\,0.2\\,]$, $S=16$。\n- 测试用例 2 (对称, II 型): $h[n]=[\\,0.1,\\,0.05,\\,0.2,\\,0.25,\\,0.25,\\,0.2,\\,0.05,\\,0.1\\,]$, $S=8$。\n- 测试用例 3 (反对称, III 型): $h[n]=[\\,0.3,\\,0.2,\\,-0.1,\\,0.0,\\,0.1,\\,-0.2,\\,-0.3\\,]$, $S=32$。\n- 测试用例 4 (反对称, IV 型): $h[n]=[\\,0.4,\\,0.1,\\,-0.2,\\,0.3,\\,-0.3,\\,0.2,\\,-0.1,\\,-0.4\\,]$, $S=4$。\n\n对于每个测试用例，您的程序必须计算并返回一对浮点数：\n- 步骤 4 中描述的轴泄漏度量。\n- 步骤 5 中描述的斜率误差 $|b+\\tau|$。\n\n最终输出格式要求：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。列表中的每个元素对应一个测试用例，并且本身是一个双元素列表 $[\\,\\text{leakage},\\,\\text{slope\\_error}\\,]$。例如，格式必须类似于 $[[x_1,y_1],[x_2,y_2],[x_3,y_3],[x_4,y_4]]$，不含任何额外文本。所有角度必须以弧度为单位，所有报告的量必须是十进制浮点数。", "solution": "该问题是数字信号处理基本原理的数值验证方面一个定义明确的练习。它在科学上是合理的，内部是一致的，并且是完整的。所有给出的定义和步骤在该学科中都是标准且正确的。因此，解决方案不仅是可能的，而且是已建立理论的直接应用。我们现在将对解决方案进行系统的推导和解释。\n\n问题的核心在于具有线性相位的实数值有限冲激响应 (FIR) 滤波器 $h[n]$ 的特性。离散时间傅里叶变换 (DTFT) $H\\!\\left(e^{j\\omega}\\right) = \\sum_{n=0}^{M-1} h[n]\\,e^{-j\\omega n}$ 的相位是角频率 $\\omega$ 的线性函数。此特性源于长度为 $M$ 的冲激响应 $h[n]$ 的时域对称性。根据其对称性和长度，存在四种类型的此类滤波器。\n\n如果序列 $h[n]$ 是对称的 ($h[n] = h[M-1-n]$) 或反对称的 ($h[n] = -h[M-1-n]$)，则它具有线性相位。这种对称性意味着其 DTFT 可以表示为：\n$$H\\!\\left(e^{j\\omega}\\right) = A(\\omega)\\,e^{-j\\omega\\tau}$$\n其中 $\\tau = \\frac{M-1}{2}$ 是滤波器的群延迟。函数 $A(\\omega)$ 是一个实值函数，通常被称为幅度函数或零相位响应。$A(\\omega)$ 的性质取决于滤波器类型：\n1.  **I 型**：对称 ($h[n] = h[M-1-n]$)，奇数长度 ($M$) 。$\\tau$ 是一个整数。$A(\\omega)$ 是一个关于 $\\omega$ 的实偶函数。\n2.  **II 型**：对称 ($h[n] = h[M-1-n]$)，偶数长度 ($M$) 。$\\tau$ 是一个半整数。$A(\\omega)$ 是一个关于 $\\omega$ 的实偶函数。\n3.  **III 型**：反对称 ($h[n] = -h[M-1-n]$)，奇数长度 ($M$) 。$\\tau$ 是一个整数。$A(\\omega)$ 是一个关于 $\\omega$ 的纯虚奇函数。请注意，要使 $A(\\omega)$ 为虚数，我们可以写成 $A(\\omega)=jB(\\omega)$，其中 $B(\\omega)$ 是实奇函数。因此，$H\\!\\left(e^{j\\omega}\\right) = B(\\omega) e^{-j(\\omega\\tau - \\pi/2)}$。\n4.  **IV 型**：反对称 ($h[n] = -h[M-1-n]$)，偶数长度 ($M$) 。$\\tau$ 是一个半整数。$A(\\omega)$ 是一个关于 $\\omega$ 的纯虚奇函数。\n\n该问题要求使用快速傅里叶变换 (FFT) 以编程方式验证这些属性。步骤如下。\n\n**步骤 1：FFT 长度和频率网格**\n对于长度为 $M$ 的冲激响应 $h[n]$ 和给定的整数填充因子 $S > 0$，FFT 长度 $N$ 被选为满足 $N \\ge S \\cdot M$ 的最小的 2 的幂。这种选择有两个目的：首先，2 的幂对于 FFT 算法来说计算效率高；其次，大的 $N$（通过补零和足够大的 $S$ 实现）提供了对底层连续 DTFT 频谱的细粒度采样。FFT 在均匀的频率网格 $\\omega_k = \\frac{2\\pi k}{N}$（其中 $k \\in \\{0, 1, \\dots, N-1\\}$）上计算 DTFT 的样本。由于 $h[n]$ 是实数，其 DTFT 是共轭对称的，$H(e^{j\\omega}) = H^*(e^{-j\\omega})$，所以我们只需要分析频率范围 $[0, \\pi]$，这对应于索引 $k \\in \\{0, 1, \\dots, \\lfloor N/2 \\rfloor\\}$。\n\n**步骤 2：FFT 计算**\n序列 $h[n]$ 被补零至总长度 $N$。然后对此补零序列应用 FFT。这会产生离散频率样本 $H_k = H\\!\\left(e^{j\\omega_k}\\right)$。使用针对实值输入优化的 FFT（例如 `numpy.fft.rfft`）效率更高，因为它只计算非负频率的唯一频谱点。\n\n**步骤 3：线性相位校正**\n为了验证幅度函数 $A(\\omega)$ 的特性，我们必须从计算出的频谱 $H_k$ 中移除线性相位项 $e^{-j\\omega\\tau}$。这通过计算校正后的频谱 $G_k$ 来实现：\n$$G_k = H_k \\, e^{j\\omega_k\\tau}$$\n根据理论，对于对称滤波器 ($h[n] = h[M-1-n]$)，得到的 $G_k$ 应该是纯实数的，因为它代表了实值函数 $A(\\omega)$ 的样本。对于反对称滤波器 ($h[n] = -h[M-1-n]$)，得到的 $G_k$ 应该是纯虚数的，因为它代表了虚值函数 $A(\\omega)$ 的样本。由于有限精度算术，这些值不会是完美的实数或虚数。\n\n**步骤 4：轴泄漏度量**\n为了量化与理想实轴或虚轴的偏差，定义了一个泄漏度量。对于对称滤波器，其中 $G_k$ 预期是实数，任何非零的虚部 $\\operatorname{Im}\\{G_k\\}$ 都被视为泄漏。该度量定义为最大绝对虚部，并通过 $G_k$ 的最大幅值进行归一化，使其成为一个相对度量：\n$$\\text{leakage}_{\\text{sym}} = \\frac{\\max_k |\\operatorname{Im}\\{G_k\\}|}{\\max_k |G_k|+\\varepsilon}$$\n相反，对于反对称滤波器，其中 $G_k$ 预期是虚数，任何非零的实部 $\\operatorname{Re}\\{G_k\\}$ 都是泄漏。度量为：\n$$\\text{leakage}_{\\text{anti}} = \\frac{\\max_k |\\operatorname{Re}\\{G_k\\}|}{\\max_k |G_k|+\\varepsilon}$$\n为了数值稳定性，加入了小常数 $\\varepsilon = 10^{-12}$，以防止在滤波器为全零序列时发生除以零的情况。\n\n**步骤 5：群延迟估计与误差**\n系统的群延迟定义为 $\\tau(\\omega) = -\\frac{d}{d\\omega} \\arg\\{H(e^{j\\omega})\\}$。对于线性相位滤波器，相位近似为 $\\phi(\\omega) = \\phi_0 - \\omega\\tau$，其中 $\\phi_0$ 是一个常数相位偏移（0 或 $\\pm\\pi/2$）。因此，群延迟是恒定的，$\\tau(\\omega) = \\tau = \\frac{M-1}{2}$。我们可以通过估计相位响应的斜率来验证这一点。\n首先，我们必须计算 $H_k$ 的展开相位以移除 $2\\pi$ 的跳跃。然后，我们对展开的相位样本 $\\phi(\\omega_k)$ 与频率样本 $\\omega_k$ 进行线性最小二乘拟合，得到一个模型 $\\phi(\\omega) \\approx a + b\\,\\omega$。估计的斜率 $b$ 应该约等于 $-\\tau$。然后将斜率误差计算为 $|b+\\tau|$。\n至关重要的是，仅在幅度 $|H_k|$ 显著的频率索引上执行此拟合。在 $|H_k|$ 接近零的频率处（即，在滤波器的阻带或频谱零点处），相位是病态且数值不稳定的。因此，我们仅使用满足 $|H_k| \\ge 10^{-6}\\,\\max_k |H_k|$ 的索引。此过程提供了对滤波器真实群延迟的稳健估计。\n\n针对每个测试用例实施这些步骤，将定量地确认线性相位 FIR 滤波器的四种典范类型的理论特性。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Evaluates the properties of linear-phase FIR filters based on the problem statement.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {'h': np.array([0.2, 0.3, 0.4, 0.5, 0.4, 0.3, 0.2]), 'symmetry': 'symmetric', 'S': 16},\n        {'h': np.array([0.1, 0.05, 0.2, 0.25, 0.25, 0.2, 0.05, 0.1]), 'symmetry': 'symmetric', 'S': 8},\n        {'h': np.array([0.3, 0.2, -0.1, 0.0, 0.1, -0.2, -0.3]), 'symmetry': 'antisymmetric', 'S': 32},\n        {'h': np.array([0.4, 0.1, -0.2, 0.3, -0.3, 0.2, -0.1, -0.4]), 'symmetry': 'antisymmetric', 'S': 4},\n    ]\n\n    results = []\n    for case in test_cases:\n        h_n = case['h']\n        symmetry = case['symmetry']\n        S = case['S']\n        \n        # FIR filter length M and group delay tau\n        M = len(h_n)\n        tau = (M - 1) / 2.0\n        \n        # Step 1: Choose FFT length N\n        min_N = S * M\n        if min_N <= 0:\n            N = 1\n        else:\n            # Calculate the next power of two >= min_N\n            N = 1 << (min_N - 1).bit_length()\n\n        # Step 2: Compute FFT\n        # Use rfft for real-valued input, which is more efficient.\n        # It computes the transform for frequencies up to the Nyquist frequency.\n        H_k = np.fft.rfft(h_n, n=N)\n        # Corresponding angular frequencies\n        omega_k = 2 * np.pi * np.fft.rfftfreq(N)\n\n        # Step 3: Form the linear-phase-corrected spectrum G_k\n        G_k = H_k * np.exp(1j * omega_k * tau)\n\n        # Step 4: Calculate axis leakage metric\n        epsilon = 1e-12\n        max_abs_G = np.max(np.abs(G_k))\n        \n        if symmetry == 'symmetric':\n            # For symmetric filters, G_k should be real. Leakage is the imaginary part.\n            leakage = np.max(np.abs(np.imag(G_k))) / (max_abs_G + epsilon)\n        else:  # antisymmetric\n            # For antisymmetric filters, G_k should be purely imaginary. Leakage is the real part.\n            leakage = np.max(np.abs(np.real(G_k))) / (max_abs_G + epsilon)\n\n        # Step 5: Estimate slope error\n        abs_H_k = np.abs(H_k)\n        # Select indices where magnitude is significant to avoid noise in phase\n        threshold = 1e-6 * np.max(abs_H_k)\n        valid_indices = np.where(abs_H_k >= threshold)[0]\n        \n        if len(valid_indices) < 2:\n            # Cannot fit a line with less than 2 points; this case is unlikely with given filters\n            slope_error = float('nan') \n        else:\n            omega_filtered = omega_k[valid_indices]\n            # Unwrap phase to get a continuous phase curve\n            phase_filtered = np.unwrap(np.angle(H_k[valid_indices]))\n            \n            # Perform linear least-squares fit: phase = b*omega + a\n            # np.polyfit returns coefficients of highest power first: [slope, intercept]\n            b, a = np.polyfit(omega_filtered, phase_filtered, 1)\n            \n            # The expected slope is -tau. The error is |b - (-tau)| = |b + tau|.\n            slope_error = np.abs(b + tau)\n            \n        results.append([leakage, slope_error])\n\n    # Final print statement in the exact required format.\n    # Manually format the string to avoid extra spaces from str(list).\n    formatted_results = [f\"[{l},{s}]\" for l, s in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2881267"}]}