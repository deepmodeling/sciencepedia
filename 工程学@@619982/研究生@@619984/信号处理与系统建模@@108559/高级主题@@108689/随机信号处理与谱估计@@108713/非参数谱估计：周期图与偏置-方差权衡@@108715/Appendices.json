{"hands_on_practices": [{"introduction": "我们实践的第一步是揭穿一个关于谱估计的常见误解。通过零填充增加傅里叶变换（DFT）的点数，看似提高了频谱的“分辨率”，但这个练习将通过计算实验清晰地表明，这种方法仅仅是增加了频率网格的密度，而并未降低谱估计的方差。这个实践 [@problem_id:2887395] 对于理解周期图的真实能力和局限性至关重要，帮助我们区分插值（interpolation）和真正的分辨率提升（resolution enhancement）。", "problem": "您的任务是使用可复现的计算，通过经验性地证明，在计算离散傅里叶变换（DFT）之前对有限长度的离散时间信号进行补零，会增加频率网格的密度（表观分辨率），但不会降低在未补零和补零DFT网格上共有的频率点处周期图的方差。您的推理和实现必须基于以下基本定义：\n- 离散时间序列的长度为 $N$ 个样本。\n- 长度为 $N$ 的序列在索引 $k$ 处的离散傅里叶变换（DFT）值，对应于归一化弧度频率 $\\omega_k = 2\\pi k/N$。\n- 补零至长度 $M = zN$（其中整数补零因子 $z \\ge 1$）后，进行 $M$ 点DFT，其频率网格为 $\\omega^{(M)}_k = 2\\pi k/M$。\n- 频率 $\\omega$ 处的周期图是有限长度离散时间傅里叶变换（DTFT）的幅度平方，并按观测样本数 $N$ 进行归一化。具体而言，对于序列 $x[n]$，在对应于DFT索引 $k$ 的网格频率处的周期图为 $I(\\omega_k) = \\frac{1}{N}\\lvert X[k]\\rvert^2$，其中 $X[k]$ 是 $x[n]$ 在索引 $k$ 处的DFT值。\n\n您的程序必须实现以下内容，并严格遵守这些定义：\n- 在每次独立试验中，使用以下两种过程之一生成一个长度为 $N$ 的实值离散时间序列 $x[n]$：\n  1. 零均值、独立同分布的高斯（正态）噪声，方差为 $\\sigma^2$，记为 $\\mathcal{N}(0,\\sigma^2)$。\n  2. 一个形式为 $A\\cos(2\\pi m_0 n/N + \\phi)$ 的实余弦音，加上独立高斯噪声 $\\mathcal{N}(0,\\sigma^2)$。其中，随机相位 $\\phi$ 在每次试验中独立地在 $[0,2\\pi)$ 内均匀分布。所有信号均在离散时间 $n=0,1,\\dots,N-1$ 上定义。角度单位为弧度。\n- 在进行DFT前，使用矩形窗（无额外加权）。\n- 在每次试验中，对于选定的整数 $m$，在相同的归一化弧度频率 $\\omega_m = 2\\pi m/N$ 处计算两个周期图值：\n  - 未补零：计算 $x[n]$ 的 $N$ 点DFT $X_N[k]$，并构造 $I_N(\\omega_m)=\\frac{1}{N}\\lvert X_N[m]\\rvert^2$。\n  - 补零：计算将 $x[n]$ 附加 $M-N$ 个零后形成的序列的 $M$ 点DFT $X_M[k]$，并构造 $I_M(\\omega_m)=\\frac{1}{N}\\lvert X_M[z\\,m]\\rvert^2$。其中 $k=z\\,m$ 是为了在更密集的网格上对齐到相同的频率。请注意，两种情况下的归一化因子均为 $N$。\n- 在 $T$ 次独立试验中，计算序列 $\\{I_N(\\omega_m)\\}$ 和 $\\{I_M(\\omega_m)\\}$ 在各次试验间的无偏样本方差（除数为 $T-1$）。然后计算方差比 $r = \\mathrm{Var}[I_M(\\omega_m)] / \\mathrm{Var}[I_N(\\omega_m)]$。\n- 同时计算频率网格间距比 $g = \\Delta\\omega_M / \\Delta\\omega_N = (2\\pi/M)/(2\\pi/N) = N/M = 1/z$。\n\n您的程序必须处理以下测试套件。对于每个案例，请精确使用指定的参数，并假设高斯噪声的方差 $\\sigma^2 = 1$，除非另有说明：\n- 案例1（理想情况，仅噪声）：$N=256$, $z=8$, $T=400$，过程为 $\\mathcal{N}(0,1)$，频率索引 $m=37$。\n- 案例2（音调加噪声，网格上正弦波）：$N=256$, $z=8$, $T=300$，过程为 $x[n] = \\cos(2\\pi m_0 n/N + \\phi) + w[n]$，其中 $m_0=45$, $A=1$, $w[n]\\sim \\mathcal{N}(0,1)$，且 $\\phi\\sim \\mathrm{Uniform}[0,2\\pi)$ 在每次试验中独立抽取；在 $m=m_0$ 处进行评估。\n- 案例3（边缘情况，记录非常短，大量补零）：$N=16$, $z=16$, $T=1000$，过程为 $\\mathcal{N}(0,1)$，频率索引 $m=3$。\n- 案例4（边界条件，不补零）：$N=128$, $z=1$, $T=300$，过程为 $\\mathcal{N}(0,1)$，频率索引 $m=17$。\n\n对于每个案例，计算：\n- 方差比 $r$。\n- 网格间距比 $g$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔的浮点数列表，顺序为 $[r_1, g_1, r_2, g_2, r_3, g_3, r_4, g_4]$，其中下标表示案例索引。所有值都是无量纲的。不应打印任何其他文本。", "solution": "所呈现的问题陈述是计算信号处理领域一个标准的、合理设定的练习。它在科学上是合理的，不包含任何矛盾，并为进行可复现的经验性研究提供了所有必要的参数。其目标是展示关于补零的周期图谱估计器的一个基本性质。因此，该问题是有效的，我将着手解决它。\n\n这个问题的核心在于离散傅里叶变换（DFT）、离散时间傅里叶变换（DTFT）和补零之间的数学关系。学生中一个常见的误解是，认为通过对信号进行补零来增加DFT的点数，可以在统计意义上提高所得频谱的“分辨率”。本练习旨在通过直接计算来证明这是错误的。补零增加了频率网格的*密度*，这可以看作是一种插值形式，但它并不会降低谱估计的方差，也不会提高分辨密集正弦波的基本能力，后者是由原始信号长度 $N$ 决定的。\n\n让我们首先建立理论基础。一个长度为 $N$ 的离散时间信号 $x[n]$，定义在 $n \\in \\{0, 1, \\dots, N-1\\}$ 上，其DTFT由下式给出：\n$$\nX(e^{j\\omega}) = \\sum_{n=0}^{N-1} x[n] e^{-j\\omega n}\n$$\nDTFT是关于归一化弧度频率 $\\omega$ 的连续函数。该信号的 $N$ 点DFT，记为 $X_N[k]$，是其DTFT在频率点 $\\omega_k = \\frac{2\\pi k}{N}$（其中 $k \\in \\{0, 1, \\dots, N-1\\}$）上的一组采样。即：\n$$\nX_N[k] = X(e^{j\\omega}) \\Big|_{\\omega = \\frac{2\\pi k}{N}} = \\sum_{n=0}^{N-1} x[n] e^{-j\\frac{2\\pi kn}{N}}\n$$\n现在，考虑一个新序列 $x_p[n]$，其长度为 $M = zN$（其中 $z \\ge 1$ 是一个整数补零因子），它是通过在 $x[n]$ 后附加 $M-N$ 个零形成的。它的 $M$ 点DFT, $X_M[k]$ 是：\n$$\nX_M[k] = \\sum_{n=0}^{M-1} x_p[n] e^{-j\\frac{2\\pi kn}{M}} = \\sum_{n=0}^{N-1} x[n] e^{-j\\frac{2\\pi kn}{M}}\n$$\n注意到求和上限是 $N-1$，因为当 $n \\ge N$ 时 $x_p[n]$ 为零。通过将其与DTFT的定义进行比较，我们发现 $X_M[k]$ 就是*原始*序列 $x[n]$ 的DTFT在新且更密集的频率网格 $\\omega^{(M)}_k = \\frac{2\\pi k}{M}$ 上的采样：\n$$\nX_M[k] = X(e^{j\\omega}) \\Big|_{\\omega = \\frac{2\\pi k}{M}}\n$$\n问题要求我们比较在两个网格共有的特定频率 $\\omega_m = \\frac{2\\pi m}{N}$ 处的周期图值。对于未补零的情况，这对应于DFT索引 $m$。对于补零的情况，我们必须在 $M$ 点网格上找到索引 $k'$，使得 $\\frac{2\\pi k'}{M} = \\frac{2\\pi m}{N}$。解出 $k'$ 得到 $k' = m \\frac{M}{N} = m \\cdot z$。\n\n因此，补零序列在索引 $k' = zm$ 处的DFT值为：\n$$\nX_M[zm] = \\sum_{n=0}^{N-1} x[n] e^{-j\\frac{2\\pi (zm)n}{M}} = \\sum_{n=0}^{N-1} x[n] e^{-j\\frac{2\\pi (zm)n}{zN}} = \\sum_{n=0}^{N-1} x[n] e^{-j\\frac{2\\pi mn}{N}} = X_N[m]\n$$\n这个恒等式是问题的关键。对于任何给定的信号实现 $x[n]$，无论是在频率 $\\omega_m$ 处计算 $N$ 点DFT，还是计算补零信号的 $M$ 点DFT，其值都完全相同。\n\n根据问题中的定义，周期图为 $I(\\omega_k) = \\frac{1}{N} \\lvert X[k] \\rvert^2$。因此，对于任何单次试验，周期图的值必须是相同的：\n$$\nI_N(\\omega_m) = \\frac{1}{N} \\lvert X_N[m] \\rvert^2 = \\frac{1}{N} \\lvert X_M[zm] \\rvert^2 = I_M(\\omega_m)\n$$\n由于在 $T$ 次试验中获得的值序列 $\\{I_N(\\omega_m)\\}$ 与序列 $\\{I_M(\\omega_m)\\}$ 完全相同，它们的样本方差也必须相同。\n$$\n\\mathrm{Var}[\\{I_N(\\omega_m)\\}] = \\frac{1}{T-1} \\sum_{i=1}^{T} (I_N(\\omega_m)^{(i)} - \\bar{I}_N)^2 = \\frac{1}{T-1} \\sum_{i=1}^{T} (I_M(\\omega_m)^{(i)} - \\bar{I}_M)^2 = \\mathrm{Var}[\\{I_M(\\omega_m)\\}]\n$$\n因此，方差比 $r = \\mathrm{Var}[I_M(\\omega_m)] / \\mathrm{Var}[I_N(\\omega_m)]$ 的理论值恰好为 1。计算结果中的任何偏差都将归因于浮点数的数值不精确性，这应该是可以忽略的。频率网格间距比 $g = \\Delta\\omega_M / \\Delta\\omega_N = (2\\pi/M)/(2\\pi/N) = N/M = 1/z$ 是一个简单的计算。\n\n实现将按以下步骤进行：\n1. 对于四个测试案例中的每一个，根据指定的参数 $N$、$z$、$T$、$m$ 和信号生成过程，我们将进行蒙特卡洛模拟。\n2. 我们将循环 $T$ 次。在每次迭代中，我们生成一个长度为 $N$ 的随机信号 $x[n]$ 的新实现。\n3. 对于仅噪声的过程，从 $\\mathcal{N}(0, 1)$ 中抽取 $x[n]$。\n4. 对于音调加噪声的过程，我们生成 $x[n] = A\\cos(2\\pi m_0 n/N + \\phi) + w[n]$，其中 $w[n] \\sim \\mathcal{N}(0, 1)$，并且相位 $\\phi$ 在每次试验中从 $\\mathrm{Uniform}[0, 2\\pi)$ 中重新抽取。\n5. 对于每个生成的 $x[n]$，我们在感兴趣的频率 $\\omega_m = 2\\pi m/N$ 处计算两个周期图值：\n    a. 未补零值 $I_N(\\omega_m) = \\frac{1}{N}\\lvert X_N[m] \\rvert^2$，其中 $X_N$ 是 $x[n]$ 的 $N$ 点DFT。\n    b. 补零值 $I_M(\\omega_m) = \\frac{1}{N}\\lvert X_M[zm] \\rvert^2$，其中 $X_M$ 是 $x[n]$ 附加 $M-N$ 个零后的 $M$ 点DFT。\n6. 我们存储这两个值，总共收集 $T$ 对。\n7. 在所有试验结束后，我们计算收集到的 $\\{I_N(\\omega_m)\\}$ 值和 $\\{I_M(\\omega_m)\\}$ 值的无偏样本方差（除数为 $T-1$）。\n8. 我们计算它们的比率 $r$ 和网格间距比 $g=1/z$。\n9. 然后将结果 $[r_1, g_1, r_2, g_2, r_3, g_3, r_4, g_4]$ 格式化为所需的输出字符串。\n\n这个过程将通过计算验证 $r=1$ 的理论结论，从而证明补零不会降低周期图的方差。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Empirically demonstrates the effect of zero-padding on the periodogram variance\n    and frequency grid density.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (happy path, noise only): N=256, z=8, T=400, process is N(0,1), frequency index m=37.\n        {'N': 256, 'z': 8, 'T': 400, 'process': 'noise', 'm': 37, 'A': None, 'm0': None},\n        # Case 2 (tone plus noise, on-grid sinusoid): N=256, z=8, T=300, process is cos(...) + N(0,1), m0=45, A=1, m=m0.\n        {'N': 256, 'z': 8, 'T': 300, 'process': 'tone', 'm': 45, 'A': 1.0, 'm0': 45},\n        # Case 3 (edge case, very short record, heavy padding): N=16, z=16, T=1000, process is N(0,1), m=3.\n        {'N': 16, 'z': 16, 'T': 1000, 'process': 'noise', 'm': 3, 'A': None, 'm0': None},\n        # Case 4 (boundary condition, no padding): N=128, z=1, T=300, process is N(0,1), m=17.\n        {'N': 128, 'z': 1, 'T': 300, 'process': 'noise', 'm': 17, 'A': None, 'm0': None}\n    ]\n\n    results = []\n    # Default noise variance sigma^2 = 1, so standard deviation sigma = 1.\n    sigma = 1.0\n\n    for case in test_cases:\n        N = case['N']\n        z = case['z']\n        T = case['T']\n        process = case['process']\n        m = case['m']\n        A = case['A']\n        m0 = case['m0']\n\n        M = z * N\n\n        # Arrays to store periodogram values from each trial\n        periodograms_N = np.zeros(T, dtype=np.float64)\n        periodograms_M = np.zeros(T, dtype=np.float64)\n\n        for i in range(T):\n            # Step 1: Generate the signal x[n] of length N.\n            noise = np.random.normal(loc=0.0, scale=sigma, size=N)\n            \n            if process == 'noise':\n                x = noise\n            elif process == 'tone':\n                n_vec = np.arange(N)\n                # Random phase phi is drawn independently for each trial.\n                phi = np.random.uniform(0, 2 * np.pi)\n                # Signal is a cosine tone plus Gaussian noise.\n                x = A * np.cos(2 * np.pi * m0 * n_vec / N + phi) + noise\n\n            # Step 2: Compute the unpadded periodogram value.\n            # The N-point DFT is computed.\n            X_N = np.fft.fft(x)\n            # Periodogram at frequency index m, normalized by N.\n            I_N = (1 / N) * np.abs(X_N[m])**2\n            periodograms_N[i] = I_N\n\n            # Step 3: Compute the zero-padded periodogram value.\n            # The M-point DFT is computed by specifying n=M, which zero-pads automatically.\n            X_M = np.fft.fft(x, n=M)\n            # The frequency index that corresponds to the unpadded grid is zm.\n            I_M = (1 / N) * np.abs(X_M[z * m])**2\n            periodograms_M[i] = I_M\n\n        # Step 4: Compute the ratio of unbiased sample variances.\n        # ddof=1 computes the sample variance (division by T-1).\n        var_N = np.var(periodograms_N, ddof=1)\n        var_M = np.var(periodograms_M, ddof=1)\n\n        # The theoretical analysis shows periodograms_N and periodograms_M are identical,\n        # so var_N and var_M should be identical, and their ratio 1.\n        # A check for var_N == 0 is robust but unlikely to be needed.\n        if var_N == 0:\n            # If var_N is zero, var_M must also be zero. Their ratio is 1.\n            r = 1.0\n        else:\n            r = var_M / var_N\n\n        # Step 5: Compute the frequency grid spacing ratio.\n        g = N / M  # This is equivalent to 1/z.\n\n        results.extend([r, g])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2887395"}, {"introduction": "在了解了周期图的基本性质后，我们转向一个更深层次的问题：如何确保我们得到的谱估计在物理上是有效的。这个练习 [@problem_id:2887459] 使用一个精心设计的具体数据集，来展示一个在估计自相关序列时看似无偏的方法，在经过简单的截断后，如何可能导致物理上不可能出现的负谱密度值。通过对比不同窗函数的应用，我们直观地理解了保证谱估计非负性的重要性，并认识到窗函数在谱估计中的关键作用。", "problem": "非参数谱估计中的一个核心挑战是，无偏样本自协方差在较大延迟时方差可能很大，而朴素的截断方法可能导致谱估计不满足非负性。考虑以下具体示例。\n\n观测到一个长度为 $N=4$ 的零均值实值离散时间序列：\n$x[0]=2$, $x[1]=-2$, $x[2]=2$, $x[3]=-2$。对于 $k \\in \\{0,1,2,3\\}$，无偏样本自协方差定义为\n$$\n\\widehat{\\gamma}(k) \\triangleq \\frac{1}{N-k}\\sum_{n=0}^{N-1-k} x[n]\\,x[n+k],\n$$\n并且根据偶对称性有 $\\widehat{\\gamma}(-k)\\triangleq \\widehat{\\gamma}(k)$。朴素截断的 Blackman–Tukey 估计量使用矩形延迟窗 $w_{\\mathrm{rect}}(k)=1$（对于 $|k|\\leq M$）和 $0$（其他情况），其中 $M=N-1=3$，并构造出\n$$\n\\widehat{S}_{\\mathrm{rect}}(f)\\triangleq \\sum_{k=-M}^{M} \\widehat{\\gamma}(k)\\,\\exp\\!\\big(-j\\,2\\pi f k\\big).\n$$\n在频率 $f_{0}=\\frac{1}{4}$ 周期/样本处，计算 $\\widehat{S}_{\\mathrm{rect}}(f)$ 的值。\n\n然后，为修正此病态问题，选择一个有效的（非负定）延迟窗，即 Bartlett 窗\n$$\nw_{\\mathrm{Bart}}(k)\\triangleq \\begin{cases}\n1-\\dfrac{|k|}{M+1}, & |k|\\leq M,\\\\\n0, & \\text{otherwise},\n\\end{cases}\n$$\n其中 $M=3$，并构造 Bartlett 窗加权的 Blackman–Tukey 估计\n$$\n\\widehat{S}_{\\mathrm{Bart}}(f)\\triangleq \\sum_{k=-M}^{M} w_{\\mathrm{Bart}}(k)\\,\\widehat{\\gamma}(k)\\,\\exp\\!\\big(-j\\,2\\pi f k\\big).\n$$\n在相同频率 $f_{0}=\\frac{1}{4}$ 处计算 $\\widehat{S}_{\\mathrm{Bart}}(f)$ 的值。\n\n将您的最终答案以有序对 $\\big(\\widehat{S}_{\\mathrm{rect}}(f_{0}),\\,\\widehat{S}_{\\mathrm{Bart}}(f_{0})\\big)$ 的形式报告。无需四舍五入。不提供单位。", "solution": "所述问题是有效的。这是一个关于非参数谱估计的定义明确、有科学依据的练习，而非参数谱估计是信号处理领域的核心课题之一。所有定义和数据都是标准的、完整的和一致的。我们接下来开始计算。\n\n第一步是为给定的数据序列计算无偏样本自协方差 $\\widehat{\\gamma}(k)$。该序列为 $x[0]=2$, $x[1]=-2$, $x[2]=2$, $x[3]=-2$，长度 $N=4$。其定义为：\n$$\n\\widehat{\\gamma}(k) = \\frac{1}{N-k}\\sum_{n=0}^{N-1-k} x[n]\\,x[n+k]\n$$\n我们计算当 $k \\in \\{0, 1, 2, 3\\}$ 时的值。\n\n对于 $k=0$：\n$$\n\\widehat{\\gamma}(0) = \\frac{1}{4-0}\\sum_{n=0}^{3} x[n]^{2} = \\frac{1}{4}\\left(x[0]^{2} + x[1]^{2} + x[2]^{2} + x[3]^{2}\\right) = \\frac{1}{4}\\left(2^{2} + (-2)^{2} + 2^{2} + (-2)^{2}\\right) = \\frac{1}{4}(4+4+4+4) = 4\n$$\n\n对于 $k=1$：\n$$\n\\widehat{\\gamma}(1) = \\frac{1}{4-1}\\sum_{n=0}^{2} x[n]x[n+1] = \\frac{1}{3}\\left(x[0]x[1] + x[1]x[2] + x[2]x[3]\\right) = \\frac{1}{3}\\left((2)(-2) + (-2)(2) + (2)(-2)\\right) = \\frac{1}{3}(-4-4-4) = -4\n$$\n\n对于 $k=2$：\n$$\n\\widehat{\\gamma}(2) = \\frac{1}{4-2}\\sum_{n=0}^{1} x[n]x[n+2] = \\frac{1}{2}\\left(x[0]x[2] + x[1]x[3]\\right) = \\frac{1}{2}\\left((2)(2) + (-2)(-2)\\right) = \\frac{1}{2}(4+4) = 4\n$$\n\n对于 $k=3$：\n$$\n\\widehat{\\gamma}(3) = \\frac{1}{4-3}\\sum_{n=0}^{0} x[n]x[n+3] = \\frac{1}{1}\\left(x[0]x[3]\\right) = (2)(-2) = -4\n$$\n\n根据定义，自协方差是一个偶函数，因此 $\\widehat{\\gamma}(-k) = \\widehat{\\gamma}(k)$。\n\n接下来，我们在频率 $f_{0}=\\frac{1}{4}$ 处计算朴素截断的 Blackman–Tukey 估计量 $\\widehat{S}_{\\mathrm{rect}}(f)$。截断参数为 $M=N-1=3$。\n$$\n\\widehat{S}_{\\mathrm{rect}}(f_{0}) = \\sum_{k=-3}^{3} \\widehat{\\gamma}(k)\\,\\exp\\!\\left(-j\\,2\\pi f_{0} k\\right) = \\sum_{k=-3}^{3} \\widehat{\\gamma}(k)\\,\\exp\\!\\left(-j\\,2\\pi \\frac{1}{4} k\\right) = \\sum_{k=-3}^{3} \\widehat{\\gamma}(k)\\,\\exp\\!\\left(-j\\,\\frac{\\pi}{2} k\\right)\n$$\n利用 $\\widehat{\\gamma}(k)$ 的偶对称性以及性质 $\\exp(j\\theta) + \\exp(-j\\theta) = 2\\cos(\\theta)$，我们可以将求和式改写为：\n$$\n\\widehat{S}_{\\mathrm{rect}}(f_{0}) = \\widehat{\\gamma}(0) + \\sum_{k=1}^{3} \\left(\\widehat{\\gamma}(k)\\exp\\!\\left(-j\\frac{\\pi k}{2}\\right) + \\widehat{\\gamma}(-k)\\exp\\!\\left(j\\frac{\\pi k}{2}\\right)\\right) = \\widehat{\\gamma}(0) + 2\\sum_{k=1}^{3} \\widehat{\\gamma}(k)\\cos\\!\\left(\\frac{\\pi k}{2}\\right)\n$$\n展开求和式：\n$$\n\\widehat{S}_{\\mathrm{rect}}(f_{0}) = \\widehat{\\gamma}(0) + 2\\widehat{\\gamma}(1)\\cos\\!\\left(\\frac{\\pi}{2}\\right) + 2\\widehat{\\gamma}(2)\\cos\\!\\left(\\pi\\right) + 2\\widehat{\\gamma}(3)\\cos\\!\\left(\\frac{3\\pi}{2}\\right)\n$$\n我们知道 $\\cos(\\frac{\\pi}{2})=0$，$\\cos(\\pi)=-1$，以及 $\\cos(\\frac{3\\pi}{2})=0$。代入这些值：\n$$\n\\widehat{S}_{\\mathrm{rect}}(f_{0}) = \\widehat{\\gamma}(0) + 2\\widehat{\\gamma}(1)(0) + 2\\widehat{\\gamma}(2)(-1) + 2\\widehat{\\gamma}(3)(0) = \\widehat{\\gamma}(0) - 2\\widehat{\\gamma}(2)\n$$\n代入计算出的值 $\\widehat{\\gamma}(0)=4$ 和 $\\widehat{\\gamma}(2)=4$：\n$$\n\\widehat{S}_{\\mathrm{rect}}(f_{0}) = 4 - 2(4) = -4\n$$\n这个结果展示了此病态问题：谱密度估计不能为负。\n\n现在，我们应用 Bartlett 延迟窗来修正这个问题。首先，我们计算当 $M=3$ 时的窗系数 $w_{\\mathrm{Bart}}(k)$，使用公式 $w_{\\mathrm{Bart}}(k) = 1 - \\frac{|k|}{M+1} = 1 - \\frac{|k|}{4}$：\n$$\nw_{\\mathrm{Bart}}(0) = 1 - \\frac{0}{4} = 1\n$$\n$$\nw_{\\mathrm{Bart}}(1) = w_{\\mathrm{Bart}}(-1) = 1 - \\frac{1}{4} = \\frac{3}{4}\n$$\n$$\nw_{\\mathrm{Bart}}(2) = w_{\\mathrm{Bart}}(-2) = 1 - \\frac{2}{4} = \\frac{1}{2}\n$$\n$$\nw_{\\mathrm{Bart}}(3) = w_{\\mathrm{Bart}}(-3) = 1 - \\frac{3}{4} = \\frac{1}{4}\n$$\n我们在 $f_{0}=\\frac{1}{4}$ 处计算 Bartlett 窗加权的估计量 $\\widehat{S}_{\\mathrm{Bart}}(f)$：\n$$\n\\widehat{S}_{\\mathrm{Bart}}(f_{0}) = \\sum_{k=-3}^{3} w_{\\mathrm{Bart}}(k)\\,\\widehat{\\gamma}(k)\\,\\exp\\!\\left(-j\\,\\frac{\\pi}{2} k\\right)\n$$\n与前面的情况类似，这可以简化为：\n$$\n\\widehat{S}_{\\mathrm{Bart}}(f_{0}) = w_{\\mathrm{Bart}}(0)\\widehat{\\gamma}(0) + 2\\sum_{k=1}^{3} w_{\\mathrm{Bart}}(k)\\widehat{\\gamma}(k)\\cos\\!\\left(\\frac{\\pi k}{2}\\right)\n$$\n$$\n\\widehat{S}_{\\mathrm{Bart}}(f_{0}) = w_{\\mathrm{Bart}}(0)\\widehat{\\gamma}(0) + 2w_{\\mathrm{Bart}}(1)\\widehat{\\gamma}(1)\\cos\\!\\left(\\frac{\\pi}{2}\\right) + 2w_{\\mathrm{Bart}}(2)\\widehat{\\gamma}(2)\\cos\\!\\left(\\pi\\right) + 2w_{\\mathrm{Bart}}(3)\\widehat{\\gamma}(3)\\cos\\!\\left(\\frac{3\\pi}{2}\\right)\n$$\n代入余弦值：\n$$\n\\widehat{S}_{\\mathrm{Bart}}(f_{0}) = w_{\\mathrm{Bart}}(0)\\widehat{\\gamma}(0) - 2w_{\\mathrm{Bart}}(2)\\widehat{\\gamma}(2)\n$$\n代入窗系数和自协方差值：\n$$\n\\widehat{S}_{\\mathrm{Bart}}(f_{0}) = (1)(4) - 2\\left(\\frac{1}{2}\\right)(4) = 4 - 4 = 0\n$$\n正如预期的那样，Bartlett 窗加权的估计是非负的。最终结果是有序对 $\\left(\\widehat{S}_{\\mathrm{rect}}(f_{0}), \\widehat{S}_{\\mathrm{Bart}}(f_{0})\\right)$。\n$$\n\\left(-4, 0\\right)\n$$", "answer": "$$\n\\boxed{\\begin{pmatrix} -4 & 0 \\end{pmatrix}}\n$$", "id": "2887459"}, {"introduction": "最后的实践环节将理论与设计选择直接联系起来，重点关注如何主动管理谱估计中的偏差-方差权衡。通过实现一个丹尼尔平滑器（Daniell smoother），我们学习如何通过在频域上对周期图进行平均来降低其高方差。这个练习 [@problem_id:2887402] 不仅涉及算法的实现，还要求我们推导平滑宽度、有效自由度（effective degrees of freedom）和方差减小之间的关系，并利用该关系选择一个合适的平滑参数以达到预设的性能目标，这是谱分析中的一个核心工程任务。", "problem": "您的任务是实现一个在离散傅里叶变换 (DFT) 频点上操作的丹尼尔平滑器，并用它来分析平滑周期图的偏差-方差权衡。您的推导和算法必须基于以下经过充分检验的事实：一个离散时间、零均值、宽平稳高斯过程的离散傅里叶变换 (DFT) 所产生的周期图，其在不同傅里叶频率上的归一化纵坐标是渐近独立的，并近似服从指数分布；对独立的指数分布纵坐标进行线性平滑会按权重平方和的比例减小方差。除这些基本依据外，您不能假定任何简便公式。\n\n任务所需的定义：\n- 长度为 $N$ 的序列 $x[n]$ 的 DFT 为 $X[k] = \\sum_{n=0}^{N-1} x[n] e^{-j 2\\pi kn / N}$，其中 $k \\in \\{0,1,\\dots,N-1\\}$，并且周期图为 $I_N[\\omega_k] = \\frac{1}{N} \\lvert X[k] \\rvert^2$，其中傅里叶频率为 $\\omega_k = 2\\pi k / N$。\n- 宽度为 $m$ 的丹尼尔平滑器在 $W = 2m + 1$ 个相邻的 DFT 频点上使用等权重移动平均。记权重为 $w_j = 1/W$（对于 $j \\in \\{-m,\\dots,+m\\}$）否则 $w_j = 0$。在频点 $k$ 处的平滑谱估计为 $\\widehat{S}[\\omega_k] = \\sum_{j=-m}^{m} w_j \\, I_N[\\omega_{k-j}]$，其中 DFT 索引 $k$ 进行循环绕回处理。\n- 正谱估计量的有效自由度 (EDF) $\\nu_{\\mathrm{eff}}$ 的定义使得 $\\widehat{S}[\\omega_k]/S[\\omega_k]$ 近似服从 $\\frac{1}{\\nu_{\\mathrm{eff}}} \\chi^2_{\\nu_{\\mathrm{eff}}}$ 分布，其中 $\\chi^2_{\\nu}$ 表示一个具有 $\\nu$ 个自由度的卡方随机变量。等价地，其相对方差满足 $\\mathrm{Var}\\{\\widehat{S}[\\omega_k]\\}/S[\\omega_k]^2 \\approx 2 / \\nu_{\\mathrm{eff}}$。\n\n您的任务：\n- 实现一个丹尼尔平滑器，该平滑器对任意整数宽度参数 $m \\ge 0$（其中 $W = 2m + 1$）在 DFT 频点上执行循环平滑。在频谱边缘附近使用频点索引的绕回处理以保持窗口宽度 $W$。\n- 根据提供的基本事实，推导连接宽度 $m$（等价于 $W = 2m+1$）与 $\\nu_{\\mathrm{eff}}$ 的关系，以及由此产生的作为 $m$ 的函数的相对方差。\n- 使用此关系，为给定长度为 $N$ 的周期图选择满足目标相对方差 $r_{\\mathrm{target}}$ 的最小整数 $m$，并遵循以下约束：丹尼尔窗口长度 $W = 2m + 1$ 必须是奇数，且不得超过可用的 DFT 频点数。如果 $N$ 是偶数，则最大允许的奇数 $W$ 为 $N - 1$；如果 $N$ 是奇数，则最大允许的 $W$ 为 $N$。如果因所需 $W$ 大于允许的最大值而无法达到目标，您必须选择允许的最大 $W$。\n\n为了验证并确保规范与实现之间的清晰映射，您的程序必须为每个测试用例计算：\n- 所选的 $m$，\n- 隐含的有效自由度 $\\nu_{\\mathrm{eff}}$，\n- 隐含的实现相对方差 $r_{\\mathrm{achieved}}$。\n\n您必须实现循环平滑，但无需输出平滑后的频谱本身。\n\n测试套件：\n为以下参数集 $(N, r_{\\mathrm{target}})$ 提供输出：\n- 情况 A: $N = 1024$, $r_{\\mathrm{target}} = 0.08$,\n- 情况 B: $N = 300$, $r_{\\mathrm{target}} = 0.01$,\n- 情况 C: $N = 65$, $r_{\\mathrm{target}} = 0.5$,\n- 情况 D (边缘情况，不可行目标): $N = 31$, $r_{\\mathrm{target}} = 0.001$。\n\n答案规范：\n- 对于每种情况，返回由您基于推导的算法计算出的三元组 $[m, \\nu_{\\mathrm{eff}}, r_{\\mathrm{achieved}}]$；然后按 A, B, C, D 的顺序将它们聚合到一个扁平列表中。\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果。具体来说，最终输出必须是\n$[m_A,\\nu_{\\mathrm{eff},A},r_{\\mathrm{achieved},A},m_B,\\nu_{\\mathrm{eff},B},r_{\\mathrm{achieved},B},m_C,\\nu_{\\mathrm{eff},C},r_{\\mathrm{achieved},C},m_D,\\nu_{\\mathrm{eff},D},r_{\\mathrm{achieved},D}]$ 的形式。\n所有量必须是无量纲的实数或整数。不要打印任何额外文本。", "solution": "问题陈述已经过严格验证，并被确定为是健全的。它在科学上基于非参数谱估计的原理，问题设定良好，目标和约束清晰，并以客观、正式的语言表述。不存在矛盾、歧义或事实错误。因此，我们可以进行推导和求解。\n\n任务是确定用于周期图的丹尼尔平滑器的参数，以满足指定的方差目标。推导必须源于问题陈述中提供的基本性质。\n\n首先，我们确定谱估计量的统计特性。问题陈述指出，对于零均值、宽平稳高斯过程，在不同傅里叶频率 $\\omega_k$ 处的归一化周期图纵坐标（我们表示为 $Y_k = I_N[\\omega_k]/S[\\omega_k]$）是近似独立的随机变量。它们服从一个分布，使得 $Y_k$ 的期望值 $E[Y_k] \\approx 1$ 且方差 $\\mathrm{Var}(Y_k) \\approx 1$。这对应于具有两个自由度的经过缩放的卡方分布 $\\chi^2_2$ 的行为。因此，原始周期图估计量 $I_N[\\omega_k]$ 的相对方差为：\n$$ \\frac{\\mathrm{Var}(I_N[\\omega_k])}{(E[I_N[\\omega_k]])^2} = \\frac{\\mathrm{Var}(S[\\omega_k] Y_k)}{(S[\\omega_k] E[Y_k])^2} = \\frac{S[\\omega_k]^2 \\mathrm{Var}(Y_k)}{S[\\omega_k]^2 (E[Y_k])^2} \\approx \\frac{1}{1^2} = 1 $$\n根据给定的有效自由度 $\\nu_{\\mathrm{eff}}$ 的定义，此相对方差也等于 $2/\\nu_{\\mathrm{eff}}$。对于原始周期图，这意味着 $1 = 2/\\nu_{\\mathrm{eff}}$，得出 $\\nu_{\\mathrm{eff}} = 2$，这与 $\\chi^2_2$ 分布一致。\n\n接下来，我们分析由宽度为 $m$ 的丹尼尔平滑器产生的平滑谱估计量 $\\widehat{S}[\\omega_k]$。该平滑器在 $W = 2m+1$ 个相邻的频率频点上应用具有均匀权重的移动平均：\n$$ \\widehat{S}[\\omega_k] = \\sum_{j=-m}^{m} w_j I_N[\\omega_{k-j}] $$\n其中权重为 $w_j = 1/W$（对于 $j \\in \\{-m, \\dots, m\\}$），且总和为 1，即 $\\sum w_j = 1$。\n\n为分析估计量的性质，我们假设真实的功率谱密度 $S(\\omega)$ 在平滑窗口上近似恒定，即对于小的 $j$ 范围，$S[\\omega_{k-j}] \\approx S[\\omega_k]$。平滑估计量的期望值为：\n$$ E[\\widehat{S}[\\omega_k]] = \\sum_{j=-m}^{m} w_j E[I_N[\\omega_{k-j}]] \\approx \\sum_{j=-m}^{m} w_j S[\\omega_k] = S[\\omega_k] \\sum_{j=-m}^{m} w_j = S[\\omega_k] $$\n因此，在局部平坦的假设下，平滑估计量是近似无偏的。\n\n$\\widehat{S}[\\omega_k]$ 的方差是基于所述的周期图纵坐标的渐近独立性计算的：\n$$ \\mathrm{Var}(\\widehat{S}[\\omega_k]) = \\mathrm{Var}\\left(\\sum_{j=-m}^{m} w_j I_N[\\omega_{k-j}]\\right) = \\sum_{j=-m}^{m} \\mathrm{Var}(w_j I_N[\\omega_{k-j}]) = \\sum_{j=-m}^{m} w_j^2 \\mathrm{Var}(I_N[\\omega_{k-j}]) $$\n使用 $\\mathrm{Var}(I_N[\\omega_{k-j}]) \\approx S[\\omega_{k-j}]^2 \\approx S[\\omega_k]^2$ 和 $w_j=1/W$，我们得到：\n$$ \\mathrm{Var}(\\widehat{S}[\\omega_k]) \\approx \\sum_{j=-m}^{m} \\left(\\frac{1}{W}\\right)^2 S[\\omega_k]^2 = W \\cdot \\frac{1}{W^2} S[\\omega_k]^2 = \\frac{1}{W}S[\\omega_k]^2 $$\n实现的相对方差 $r_{\\mathrm{achieved}}$ 是方差与均值平方的比值：\n$$ r_{\\mathrm{achieved}} = \\frac{\\mathrm{Var}(\\widehat{S}[\\omega_k])}{(E[\\widehat{S}[\\omega_k]])^2} \\approx \\frac{(1/W)S[\\omega_k]^2}{S[\\omega_k]^2} = \\frac{1}{W} $$\n代入 $W=2m+1$，我们得到第一个所需的关系：$r_{\\mathrm{achieved}} = 1/(2m+1)$。\n\n第二个关系将其与有效自由度 $\\nu_{\\mathrm{eff}}$ 联系起来。使用提供的公式 $r_{\\mathrm{achieved}} \\approx 2/\\nu_{\\mathrm{eff}}$：\n$$ \\frac{1}{W} = \\frac{2}{\\nu_{\\mathrm{eff}}} \\implies \\nu_{\\mathrm{eff}} = 2W = 2(2m+1) $$\n推导至此完成。\n\n最后，我们构建算法，为给定的数据长度 $N$ 和目标相对方差 $r_{\\mathrm{target}}$ 选择参数 $m$。目标是找到最小的整数 $m \\ge 0$，使得 $r_{\\mathrm{achieved}} \\le r_{\\mathrm{target}}$ 且窗口长度 $W=2m+1$ 有效。\n\n1. 条件 $r_{\\mathrm{achieved}} \\le r_{\\mathrm{target}}$ 转化为 $1/W \\le r_{\\mathrm{target}}$，即 $W \\ge 1/r_{\\mathrm{target}}$。由于 $W$ 必须是奇数，我们必须找到满足此不等式的最小奇数 $W_{\\mathrm{req}}$。设 $W^* = 1/r_{\\mathrm{target}}$。如果 $W^* \\le 1$，则所需的最小奇数为 $W_{\\mathrm{req}}=1$。否则，我们计算 $W_c = \\lceil W^* \\rceil$。如果 $W_c$ 是奇数，则 $W_{\\mathrm{req}} = W_c$。如果 $W_c$ 是偶数，则 $W_{\\mathrm{req}} = W_c + 1$。\n\n2. 窗口长度 $W$ 受数据长度 $N$ 的约束。最大允许的奇数窗口长度 $W_{\\mathrm{max}}$ 如下给出：\n-   若 $N$ 为偶数，$W_{\\mathrm{max}} = N - 1$。\n-   若 $N$ 为奇数，$W_{\\mathrm{max}} = N$。\n\n3. 如果所需的窗口 $W_{\\mathrm{req}}$ 超过了允许的最大值 $W_{\\mathrm{max}}$，则目标方差无法实现。在这种情况下，我们必须使用可能的最大窗口 $W_{\\mathrm{max}}$。因此，最终使用的窗口长度是 $W_{\\mathrm{final}} = \\min(W_{\\mathrm{req}}, W_{\\mathrm{max}})$。\n\n4. 从 $W_{\\mathrm{final}}$，我们计算所需的输出量：\n-   平滑器宽度参数：$m = (W_{\\mathrm{final}} - 1)/2$。\n-   有效自由度：$\\nu_{\\mathrm{eff}} = 2W_{\\mathrm{final}}$。\n-   实现的相对方差：$r_{\\mathrm{achieved}} = 1/W_{\\mathrm{final}}$。\n\n现在实现该算法以解决指定的测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    It calculates the Daniell smoother parameters based on a target relative variance\n    and constraints on the data length.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (N, r_target)\n        (1024, 0.08),  # Case A\n        (300, 0.01),   # Case B\n        (65, 0.5),     # Case C\n        (31, 0.001),   # Case D\n    ]\n\n    results = []\n    for N, r_target in test_cases:\n        m, nu_eff, r_achieved = calculate_smoother_params(N, r_target)\n        results.extend([m, float(nu_eff), r_achieved])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef calculate_smoother_params(N, r_target):\n    \"\"\"\n    Calculates the Daniell smoother parameters (m, nu_eff, r_achieved).\n\n    Args:\n        N (int): The length of the periodogram sequence.\n        r_target (float): The target relative variance.\n\n    Returns:\n        tuple: A tuple containing the calculated (m, nu_eff, r_achieved).\n    \"\"\"\n    \n    # 1. Determine the required window width W_req to meet the target variance.\n    # We need r_achieved <= r_target, which means 1/W <= r_target, or W >= 1/r_target.\n    # W must be an odd integer.\n    w_star = 1.0 / r_target\n    \n    if w_star <= 1.0:\n        # If the target variance is 1 or more, no smoothing is needed.\n        # W=1 is the smallest odd integer.\n        w_req = 1\n    else:\n        # Find the smallest odd integer >= w_star.\n        w_c = int(np.ceil(w_star))\n        if w_c % 2 != 0:\n            w_req = w_c\n        else:\n            w_req = w_c + 1\n\n    # 2. Determine the maximum admissible odd window length W_max.\n    if N % 2 == 0:\n        w_max = N - 1\n    else:\n        w_max = N\n\n    # 3. Choose the final window length, respecting the constraint.\n    # If the target is infeasible, use the maximum possible width.\n    w_final = min(w_req, w_max)\n\n    # 4. Calculate the output parameters from the final window length.\n    # m = (W - 1) / 2\n    m = (w_final - 1) // 2\n    \n    # nu_eff = 2 * W\n    nu_eff = 2 * w_final\n    \n    # r_achieved = 1 / W\n    r_achieved = 1.0 / w_final\n\n    return m, float(nu_eff), r_achieved\n\nsolve()\n```", "id": "2887402"}]}