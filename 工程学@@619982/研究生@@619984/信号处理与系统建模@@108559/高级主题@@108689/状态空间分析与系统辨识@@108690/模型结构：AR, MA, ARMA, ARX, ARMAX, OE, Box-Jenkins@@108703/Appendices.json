{"hands_on_practices": [{"introduction": "在构建复杂的动态系统模型之前，理解和确保模型的稳定性是至关重要的一步。一个不稳定的模型会产生无界输出，使其在预测和控制等实际应用中毫无用处。本练习将引导你从第一性原理出发，推导二阶自回归（AR(2)）模型参数必须满足的精确代数条件，以保证其有界输入-有界输出（BIBO）稳定性，这些条件在参数空间中构成了一个著名的“稳定三角形”[@problem_id:2884705]。", "problem": "考虑一个由后移算子 $q^{-1}$ 定义的 $2$ 阶离散时间自回归 (AR) 模型，该模型由多项式 $A(q^{-1}) = 1 + a_{1} q^{-1} + a_{2} q^{-2}$ 和差分方程 $A(q^{-1}) y_{t} = e_{t}$ 定义，其中 $e_{t}$ 是有界输入。使用线性时不变 (LTI) 系统的基本原理和有界输入有界输出 (BIBO) 稳定性的定义，从特征方程 $A(z^{-1}) = 0$ 的根的位置出发，推导保证 BIBO 稳定性的关于 $(a_{1}, a_{2})$ 的显式代数不等式（即所有极点严格位于单位圆内）。\n\n然后，将这些不等式在 $(a_{1}, a_{2})$ 平面中几何地解释为一个区域。计算该稳定区域的精确面积。\n\n将最终面积表示为一个没有单位的精确值。无需四舍五入。您的最终答案必须是单一实数。", "solution": "问题陈述具有科学依据，提法恰当且客观。没有可识别的缺陷。我们可以着手求解。\n\n该问题要求推导二阶自回归 (AR(2)) 过程的稳定性条件。该离散时间系统由以下线性差分方程描述：\n$$y_{t} + a_{1} y_{t-1} + a_{2} y_{t-2} = e_{t}$$\n其中 $y_{t}$ 是输出，$e_{t}$ 是有界输入，$a_{1}, a_{2}$ 是实值系数。使用后移算子 $q^{-1}$（其中 $q^{-k} y_{t} = y_{t-k}$），该方程可写作：\n$$(1 + a_{1} q^{-1} + a_{2} q^{-2}) y_{t} = e_{t}$$\n这对应一个线性时不变 (LTI) 系统。该类系统的稳定性由其传递函数的极点位置决定。对差分方程进行 Z 变换可得：\n$$(1 + a_{1} z^{-1} + a_{2} z^{-2}) Y(z) = E(z)$$\n因此，传递函数 $H(z) = \\frac{Y(z)}{E(z)}$ 为：\n$$H(z) = \\frac{1}{1 + a_{1} z^{-1} + a_{2} z^{-2}}$$\n系统的极点是使分母为零的 $z$ 值。为求极点，我们求解特征方程 $1 + a_{1} z^{-1} + a_{2} z^{-2} = 0$。两边乘以 $z^2$（对于 $z \\neq 0$）可得到更方便形式的特征多项式：\n$$P(z) = z^2 + a_{1} z + a_{2} = 0$$\n对于有界输入有界输出 (BIBO) 稳定性，系统的所有极点（即 $P(z)$ 的根）必须严格位于复平面的单位圆内。也就是说，如果 $p_1$ 和 $p_2$ 是根，则必须满足 $|p_1| < 1$ 和 $|p_2| < 1$。\n\n我们通过分析这个二次方程的根来推导实系数 $(a_{1}, a_{2})$ 需满足的条件。根的性质取决于判别式 $\\Delta = a_{1}^2 - 4a_{2}$。\n\n情况 1：实根 ($\\Delta \\ge 0$)\n根是实数，由 $p_{1,2} = \\frac{-a_{1} \\pm \\sqrt{a_{1}^2 - 4a_{2}}}{2}$ 给出。为保证稳定性，两个根都必须位于区间 $(-1, 1)$ 内。\n二次函数 $P(z)$ 表示一个开口向上的抛物线。要使其根位于 $-1$ 和 $1$ 之间，必须满足以下条件：\n1. 函数在区间边界处必须为正： $P(1) > 0$ 和 $P(-1) > 0$。\n   $$P(1) = 1 + a_{1} + a_{2} > 0 \\implies a_{2} > -a_{1} - 1$$\n   $$P(-1) = 1 - a_{1} + a_{2} > 0 \\implies a_{2} > a_{1} - 1$$\n2. 抛物线的顶点（位于 $z = -a_1/2$）必须在两根之间。要使根位于 $(-1,1)$ 内，顶点也必须位于此区间内：$-1 < -a_{1}/2 < 1$，这意味着 $-2 < a_{1} < 2$。\n\n这些条件是充分的。我们将其与实根条件 $a_{1}^2 - 4a_{2} \\ge 0$（即 $a_{2} \\le \\frac{a_{1}^2}{4}$）结合起来。因此，实根的稳定区域由以下条件刻画：\n$$a_2 \\le \\frac{a_1^2}{4}$$\n$$a_2 > -a_1 - 1$$\n$$a_2 > a_1 - 1$$\n后两个不等式可以合并为 $a_2 > |a_1| - 1$。\n\n情况 2：共轭复根 ($\\Delta < 0$)\n根是一对共轭复数 $p$ 和 $\\bar{p}$，由 $p = \\frac{-a_{1}}{2} + i \\frac{\\sqrt{4a_{2} - a_{1}^2}}{2}$ 给出。\n为保证稳定性，我们需要 $|p| < 1$。由于 $|p|=|\\bar{p}|$，我们只需检查一个根。模的平方为：\n$$|p|^2 = \\left(\\frac{-a_{1}}{2}\\right)^2 + \\left(\\frac{\\sqrt{4a_{2} - a_{1}^2}}{2}\\right)^2 = \\frac{a_{1}^2}{4} + \\frac{4a_{2} - a_{1}^2}{4} = \\frac{4a_{2}}{4} = a_{2}$$\n稳定性条件 $|p|^2 < 1$ 直接转化为 $a_{2} < 1$。\n复根的条件是 $a_{1}^2 - 4a_{2} < 0$，即 $a_{2} > \\frac{a_{1}^2}{4}$。由于 $a_1$ 是实数，$a_1^2 \\ge 0$，这意味着 $a_2 > 0$。\n因此，对于复根，稳定性条件是 $a_{2} > \\frac{a_{1}^2}{4}$ 和 $a_2 < 1$。\n可以证明这些条件蕴含了 $P(1) > 0$ 和 $P(-1) > 0$：\n$1 \\pm a_1 + a_2 > 1 \\pm a_1 + \\frac{a_1^2}{4} = (1 \\pm \\frac{a_1}{2})^2 \\ge 0$。由于等式仅在边界抛物线 $a_2 = a_1^2/4$ 上成立，因此在区域内部严格不等式成立。\n\n结合两种情况的条件，我们得到 BIBO 稳定性的完整充要条件。这些被称为二阶系统的 Jury 稳定性判据。\n1. 来自情况 1：$1 + a_{1} + a_{2} > 0 \\implies a_{2} > -a_{1} - 1$\n2. 来自情况 1：$1 - a_{1} + a_{2} > 0 \\implies a_{2} > a_{1} - 1$\n3. 根据 Vieta's formulas，根的乘积为 $p_1 p_2 = a_2$。为保证稳定性，$|p_1|<1$ 和 $|p_2|<1$，这意味着 $|p_1 p_2| = |a_2| < 1$。这意味着 $-1 < a_2 < 1$。这个条件在情况 2 中至关重要 ($a_2<1$)，并且在情况 1 中也已蕴含，因为 $a_2 > |a_1|-1$ 和 $|a_1|<2$ 得到 $a_2 > -1$。\n\n在 $(a_{1}, a_{2})$ 平面中的完整稳定区域由这三个不等式的交集定义：\n$$a_{2} > -a_{1} - 1$$\n$$a_{2} > a_{1} - 1$$\n$$a_{2} < 1$$\n不等式 $a_{2} > -1$ 是多余的，因为它已由 $a_2 > |a_1| - 1 \\ge -1$ 蕴含。严格不等式成立，因为如果 $a_2 = -1$，那么 $|a_1|=0$，导致 $a_1=0$。点 $(a_1, a_2) = (0, -1)$ 位于区域的边界上，而不是其内部。\n\n在几何上，这三个线性不等式在 $(a_{1}, a_{2})$ 平面中定义了一个三角形区域。为了找到这个三角形的顶点，我们求出边界线的交点。\n- $a_{2} = -a_{1} - 1$ 和 $a_{2} = a_{1} - 1$ 的交点：\n  $-a_{1} - 1 = a_{1} - 1 \\implies 2a_{1} = 0 \\implies a_{1} = 0$。这得到 $a_{2} = -1$。顶点是 $(0, -1)$。\n- $a_{2} = a_{1} - 1$ 和 $a_{2} = 1$ 的交点：\n  $1 = a_{1} - 1 \\implies a_{1} = 2$。顶点是 $(2, 1)$。\n- $a_{2} = -a_{1} - 1$ 和 $a_{2} = 1$ 的交点：\n  $1 = -a_{1} - 1 \\implies a_{1} = -2$。顶点是 $(-2, 1)$。\n\n稳定区域是一个顶点为 $(0, -1)$、$(2, 1)$ 和 $(-2, 1)$ 的三角形。\n\n最后，我们计算这个三角形的面积。我们可以将连接 $(-2, 1)$ 和 $(2, 1)$ 的边视为底。这个底是一条水平线段，长度为：\n$$b = |2 - (-2)| = 4$$\n三角形的高是第三个顶点 $(0, -1)$ 到包含底的直线 $a_{2} = 1$ 的垂直距离。高是：\n$$h = |1 - (-1)| = 2$$\n三角形的面积由公式 $A = \\frac{1}{2} b h$ 给出。\n$$A = \\frac{1}{2} \\times 4 \\times 2 = 4$$\n稳定区域的面积恰好是 $4$。", "answer": "$$\\boxed{4}$$", "id": "2884705"}, {"introduction": "在系统辨识中，选择正确的模型阶数是一项核心挑战，而模型过参数化是一个常见陷阱。当模型过于复杂时，它可能会开始拟合数据中的噪声，导致参数估计不稳定且物理意义不明确。本练习模拟了这一场景，要求你分析过参数化如何体现为传递函数中近似的极点-零点对消，并评估多种用于诊断和使用正则化方法来修正此问题的先进技术[@problem_id:2884669]。", "problem": "考虑自回归外源输入 (ARX) 模型\n$$\nA(q^{-1})\\,y(t) \\;=\\; B(q^{-1})\\,u(t-n_k) \\;+\\; e(t),\n$$\n其中 $A(q^{-1}) \\;=\\; 1 \\;+\\; a_1 q^{-1} \\;+\\; \\cdots \\;+\\; a_{n_a} q^{-n_a}$，$B(q^{-1}) \\;=\\; b_1 \\;+\\; \\cdots \\;+\\; b_{n_b} q^{-(n_b-1)}$，$u(t)$ 是已知输入，$y(t)$ 是输出，$e(t)$ 是方差为 $\\sigma^2$ 的零均值白噪声，且 $n_k \\in \\mathbb{N}$ 是输入延迟。假设 $u(t)$ 是足够高阶的持续激励。通过最小化单步预测误差的平方和，可以得到系数向量 $\\theta$ 的预测误差估计或最小二乘估计 $\\hat{\\theta}$。\n\n已知一个 $n_a \\;=\\; 5$ 和 $n_b \\;=\\; 5$ 的过参数化ARX模型被用于拟合一个低阶稳定系统产生的数据。从拟合中报告了以下经验观察结果：\n- 估计的多项式 $\\hat{A}(q^{-1})$ 在 $q \\;=\\; 0.82$ 处有一个根，估计的 $\\hat{B}(q^{-1})$ 在 $q \\;=\\; 0.81$ 处有一个零点（两者都在单位圆盘内）。\n- 样本回归器格拉姆矩阵 $\\Phi^\\top \\Phi$（其中 $\\Phi$ 包含了回归向量）的条件数约为 $10^7$。\n- 残差 $e(t)$ 近似为白噪声，且 $\\hat{A}$ 和 $\\hat{B}$ 没有严格的公共因子。\n\n从线性回归和多项式代数的基本原理出发，论证ARX模型中的过参数化如何表现为 $A(q^{-1})$ 和 $B(q^{-1})$ 中的近似公共因子，以及正则化如何缓解该问题。下列哪些程序是检测过参数化并使用正则化进行修正的可靠方法？\n\nA. 构建估计多项式 $\\hat{A}$ 和 $\\hat{B}$ 的西尔维斯特矩阵 $S(\\hat{A},\\hat{B})$ 并计算其最小奇异值。一个非常小的值表明存在近似公共因子。为解决此问题，对参数向量采用Tikhonov正则化，使用一个能促进平滑、稳定脉冲响应的核（例如，稳定样条先验），从而压缩虚假的近似对消因子。\n\nB. 依赖于单步预测残差 $e(t)$ 的白性。如果 $e(t)$ 是白噪声，则不可能存在带有近似公共因子的过参数化，因此不需要正则化。\n\nC. 检查 $\\hat{A}(q^{-1})$ 的根与 $\\hat{B}(q^{-1})$ 的零点之间的距离。如果任何极点-零点对的距离在一个小容差范围内（例如，幅值小于 $0.02$），则判断存在近似公共因子。作为补救措施，对过程脉冲响应的汉克尔矩阵施加核范数惩罚，以促进低麦克米兰阶并消除冗余因子。\n\nD. 仅从 $\\Phi^\\top \\Phi$ 的大条件数来诊断过参数化。补救方法是继续使用普通最小二乘法，不加任何惩罚，但收集更多数据，这总能消除由近似公共因子引起的病态问题。\n\nE. 检查经验费雪信息矩阵 $\\hat{I}(\\theta) \\;=\\; \\frac{1}{\\hat{\\sigma}^2}\\frac{1}{N}\\Phi^\\top \\Phi$ 的谱。一个接近零的特征值表示由于近似公共因子导致的近似不可辨识性。补救措施是在预测误差代价中添加 $\\ell_2$ 或弹性网络惩罚，这可以稳定求逆过程，并偏向于更简单的、近似互质的因子对。\n\n选择所有适用项。", "solution": "首先应验证问题陈述的科学性和逻辑完整性。\n\n### 步骤1：提取已知条件\n问题提供了以下信息：\n- 模型是自回归外源输入 (ARX) 模型：\n$$A(q^{-1})\\,y(t) \\;=\\; B(q^{-1})\\,u(t-n_k) \\;+\\; e(t)$$\n- 多项式定义为：\n$$A(q^{-1}) \\;=\\; 1 \\;+\\; a_1 q^{-1} \\;+\\; \\cdots \\;+\\; a_{n_a} q^{-n_a}$$\n$$B(q^{-1}) \\;=\\; b_1 \\;+\\; \\cdots \\;+\\; b_{n_b} q^{-(n_b-1)}$$\n- $u(t)$ 是已知输入，$y(t)$ 是输出，$e(t)$ 是方差为 $\\sigma^2$ 的零均值白噪声。\n- $n_k \\in \\mathbb{N}$ 是输入延迟。\n- 输入 $u(t)$ 是“足够高阶的持续激励”。\n- 通过最小化单步预测误差的平方和（最小二乘法）获得参数估计 $\\hat{\\theta}$。\n- 一个阶数为 $n_a = 5$ 和 $n_b = 5$ 的过参数化模型被用于拟合来自一个“低阶稳定系统”的数据。\n- 经验观察：\n    1. 估计的多项式 $\\hat{A}(q^{-1})$ 在 $q=0.82$ 处有一个根。\n    2. 估计的多项式 $\\hat{B}(q^{-1})$ 在 $q=0.81$ 处有一个零点。\n    3. 样本回归器格拉姆矩阵 $\\Phi^\\top \\Phi$ 的条件数约为 $10^7$。\n    4. 残差 $e(t)$ 近似为白噪声。\n    5. $\\hat{A}$ 和 $\\hat{B}$ 没有严格的公共因子。\n\n### 步骤2：使用提取的已知条件进行验证\n该问题要求基于一个给定的场景，评估检测和修正ARX模型中过参数化的方法。\n\n- **科学依据**：该问题设置在系统辨识的背景下，这是控制理论和信号处理的核心学科。ARX模型、最小二乘估计、过参数化、极零点对消和正则化都是标准的、成熟的概念。所描述的场景——一个过参数化模型导致近似极零点对消和一个病态回归问题——是典型的。\n- **适定性**：这个问题是适定的。它呈现了一个现实的场景，并要求从给定列表中识别出可靠的程序。可以从系统辨识理论的原理中推导出确定的答案。\n- **客观性**：问题使用了该领域精确、标准的术语来陈述。提供的数值（$n_a=5$，$n_b=5$，根在 $0.82$ 和 $0.81$，条件数 $\\sim 10^7$）是一致的，并使场景具体化。\n- **无其他缺陷**：该问题与信号处理中的模型结构主题直接相关，它并非微不足道，并且其前提不包含矛盾。观察到残差“近似为白噪声”而模型却是病态的，这是该问题的一个关键特征，而非矛盾。\n\n### 步骤3：结论与行动\n问题陈述是有效的。这是一个在系统辨识理论中被良好阐述的问题。我将继续进行解答。\n\n### 从第一性原理推导\nARX模型可以写成一个线性回归问题。$y(t)$ 的单步预测器是：\n$$ \\hat{y}(t|\\theta) = -a_1 y(t-1) - \\dots - a_{n_a} y(t-n_a) + b_1 u(t-n_k) + \\dots + b_{n_b} u(t-n_k-n_b+1) $$\n这可以表示为 $y(t) = \\varphi(t)^\\top \\theta + e(t)$，其中回归向量是\n$$ \\varphi(t)^\\top = [-y(t-1), \\dots, -y(t-n_a), u(t-n_k), \\dots, u(t-n_k-n_b+1)] $$\n参数向量是\n$$ \\theta = [a_1, \\dots, a_{n_a}, b_1, \\dots, b_{n_b}]^\\top $$\n最小二乘估计 $\\hat{\\theta}$ 最小化代价函数 $V_N(\\theta) = \\frac{1}{N}\\sum_{t=1}^N (y(t) - \\varphi(t)^\\top \\theta)^2$。解由正规方程给出：$(\\Phi^\\top \\Phi) \\hat{\\theta} = \\Phi^\\top \\mathbf{y}$，其中 $\\Phi$ 是以 $\\varphi(t)^\\top$ 为行的矩阵，$\\mathbf{y}$ 是输出 $y(t)$ 向量。\n\n现在，考虑真实系统是更低阶的，即 $A_0(q^{-1})y(t) = B_0(q^{-1})u(t-n_k) + e(t)$，其中 $\\deg(A_0) < n_a$ 且 $\\deg(B_0) < n_b$。传递函数是 $G_0(q^{-1}) = \\frac{B_0(q^{-1})}{A_0(q^{-1})}$。\n如果我们拟合一个更高阶 $(n_a, n_b)$ 的模型，估计过程会寻找多项式 $A(q^{-1})$ 和 $B(q^{-1})$，使得传递函数 $G(q^{-1}) = \\frac{B(q^{-1})}{A(q^{-1})}$ 接近 $G_0(q^{-1})$。\n这意味着一个理想的解将具有 $A(q^{-1}) = C(q^{-1})A_0(q^{-1})$ 和 $B(q^{-1}) = C(q^{-1})B_0(q^{-1})$ 的形式，其中 $C(q^{-1})$ 是某个“公共因子”多项式。\n\n如果存在这样一个精确的公共因子，那么 $\\theta$ 中的参数之间就存在线性关系。这意味着回归矩阵 $\\Phi$ 的列将近似线性相关。其结果是格拉姆矩阵 $\\Phi^\\top \\Phi$ 变得奇异或近奇异。一个近奇异矩阵具有非常大的条件数和至少一个非常小的特征值。这是一种近似不可辨识的状态：许多不同的参数向量 $\\theta$（对应于不同的公共因子 $C(q^{-1})$）产生几乎相同的代价函数值。\n\n在实践中，对于有限数据和噪声 $e(t)$，估计的多项式 $\\hat{A}(q^{-1})$ 和 $\\hat{B}(q^{-1})$ 不会有精确的公共因子。相反，它们会有一个“近似公共因子”，表现为 $\\hat{A}(q^{-1})$ 的一个根（一个极点）非常接近 $\\hat{B}(q^{-1})$ 的一个根（一个零点）。问题陈述给出了一个例子：一个在 $q=0.82$ 的极点和一个在 $q=0.81$ 的零点。这种近似对消是过参数化的标志。\n\n处理这种病态逆问题的标准方法是正则化。不是仅仅最小化平方误差和，而是最小化一个带惩罚的代价函数：\n$$ \\min_{\\theta} V_N(\\theta) + \\lambda J(\\theta) $$\n其中 $J(\\theta)$ 是一个惩罚函数，$\\lambda > 0$ 是一个正则化参数。惩罚项在估计中引入了偏差，但减少了其方差，从而稳定了解，并从众多可能性中选择一个唯一的、“更简单”的模型。\n\n### 逐项分析\n\n**A. 构建估计多项式 $\\hat{A}$ 和 $\\hat{B}$ 的西尔维斯特矩阵 $S(\\hat{A},\\hat{B})$ 并计算其最小奇异值。一个非常小的值表明存在近似公共因子。为解决此问题，对参数向量采用Tikhonov正则化，使用一个能促进平滑、稳定脉冲响应的核（例如，稳定样条先验），从而压缩虚假的近似对消因子。**\n\n- **检测**：两个多项式 $A$ 和 $B$ 的西尔维斯特矩阵 $S(A, B)$ 是奇异的，当且仅当这两个多项式共享一个公共根。对于从含噪声数据中得到的估计多项式 $\\hat{A}$ 和 $\\hat{B}$，该矩阵不会是严格奇异的。最小奇异值 $\\sigma_{\\min}(S(\\hat{A}, \\hat{B}))$ 衡量了与最近的奇异矩阵的距离。因此，一个接近于零的 $\\sigma_{\\min}$ 值是近似公共因子的一个鲁棒且理论上可靠的指标。这种检测方法是正确的。\n- **补救**：Tikhonov正则化是惩罚模型复杂性的通用框架。使用一个专门的二次惩罚（“核”），例如从稳定样条先验导出的核，是一种先进且有效的技术。这类先验编码了对“简单”模型的偏好，例如具有平滑脉冲响应的系统。带有近似对消极零点对的过参数化对应于复杂的脉冲响应。惩罚这种复杂性可以有效地压缩或消除这些虚假因子。这种补救方法是可靠的。\n- **结论**：正确。\n\n**B. 依赖于单步预测残差 $e(t)$ 的白性。如果 $e(t)$ 是白噪声，则不可能存在带有近似公共因子的过参数化，因此不需要正则化。**\n\n- 最小二乘法的正规方程 $(\\Phi^\\top \\Phi)\\hat{\\theta} = \\Phi^\\top \\mathbf{y}$ 意味着残差向量 $\\mathbf{e} = \\mathbf{y} - \\Phi\\hat{\\theta}$ 与回归矩阵 $\\Phi$ 的列正交。由于 $\\Phi$ 包含 $y(t)$ 和 $u(t)$ 的过去值，这种正交性强制了残差与过去数据之间的低相关性。因此，最小二乘拟合的残差根据其构造通常会呈现白噪声或近似白噪声，特别是当模型阶数足够高时。问题陈述本身就指出，尽管存在明显的过参数化迹象，残差仍然近似为白噪声。因此，残差的白性是检测过参数化的一个很差的指标；它主要表明模型阶数不是太低。残差白性可以排除过参数化的核心论点是一个根本性的误解。\n- **结论**：不正确。\n\n**C. 检查 $\\hat{A}(q^{-1})$ 的根与 $\\hat{B}(q^{-1})$ 的零点之间的距离。如果任何极点-零点对的距离在一个小容差范围内（例如，幅值小于 $0.02$），则判断存在近似公共因子。作为补救措施，对过程脉冲响应的汉克尔矩阵施加核范数惩罚，以促进低麦克米兰阶并消除冗余因子。**\n\n- **检测**：这是近似公共因子定义的一个直接而直观的应用。一个公共因子意味着一个极点-零点对消。因此，检查是否存在紧密的极点-零点对是检测过参数化的一种有效且广泛使用的启发式方法。问题中给出的根在 $0.82$ 和 $0.81$（距离 $0.01$）的例子就是一个完美的例证。\n- **补救**：由系统脉冲响应系数构成的汉克尔矩阵的秩等于系统的麦克米兰阶（最小阶）。过参数化引入了冗余动态，这不会增加真实的麦克米兰阶。核范数是奇异值的和，可作为矩阵秩的凸代理。对脉冲响应的汉克尔矩阵的核范数施加惩罚是一种现代的、有原则的正则化技术，它鼓励低秩汉克尔矩阵，从而得到低阶（低麦克米兰阶）模型。这直接针对消除冗余因子。这种补救方法是可靠的。\n- **结论**：正确。\n\n**D. 仅从 $\\Phi^\\top \\Phi$ 的大条件数来诊断过参数化。补救方法是继续使用普通最小二乘法，不加任何惩罚，但收集更多数据，这总能消除由近似公共因子引起的病态问题。**\n\n- **检测**：如原理部分所述，过参数化导致回归量中出现近似线性相关，这使得格拉姆矩阵 $\\Phi^\\top \\Phi$ 病态（即具有大条件数）。这是一个主要且可靠的症状。\n- **补救**：所提出的补救措施是不正确的。病态是一个由使用不可辨识模型结构引起的结构性问题。随着数据量 $N \\to \\infty$，样本格拉姆矩阵 $\\frac{1}{N}\\Phi^\\top\\Phi$ 会收敛到一个理论协方差矩阵，而该矩阵本身就是奇异（对于精确公共因子）或近奇异（对于近似公共因子）的。收集更多数据不会使奇异矩阵变得可逆。它只会使样本矩阵更好地逼近病态的理论矩阵。不可辨识性问题不能通过更多数据来解决，而应通过改变模型结构或使用正则化来解决。声称更多数据“总能消除”这个问题的说法是错误的。\n- **结论**：不正确。\n\n**E. 检查经验费雪信息矩阵 $\\hat{I}(\\theta) \\;=\\; \\frac{1}{\\hat{\\sigma}^2}\\frac{1}{N}\\Phi^\\top \\Phi$ 的谱。一个接近零的特征值表示由于近似公共因子导致的近似不可辨识性。补救措施是在预测误差代价中添加 $\\ell_2$ 或弹性网络惩罚，这可以稳定求逆过程，并偏向于更简单的、近似互质的因子对。**\n\n- **检测**：对于这个高斯回归问题，费雪信息矩阵(FIM)与格拉姆矩阵 $\\Phi^\\top\\Phi$ 成比例。一个病态的格拉姆矩阵，其最大与最小特征值之比很大，必然有至少一个相对于其他特征值非常小的特征值。FIM的一个接近零的特征值表示在参数空间中存在一个方向，似然函数在该方向上几乎是平坦的，这意味着参数没有被数据很好地确定。这就是近似不可辨识性的定义，它是由近似公共因子引起的。这种检测方法是正确的，并且等同于检查条件数。\n- **补救**：添加 $\\ell_2$ 惩罚（岭回归）或弹性网络惩罚（$\\ell_1$ 和 $\\ell_2$ 结合）是标准且有效的正则化形式。$\\ell_2$ 惩罚在求逆前向矩阵 $\\Phi^\\top\\Phi$ 添加一项 $\\lambda I$，直接将其所有特征值增加 $\\lambda$，从而消除了接近零的特征值问题。这可以稳定解。这些惩罚引入了对更小或更稀疏参数向量的偏置，有效地从众多近似最优的复杂解的流形中选择一个简单的解。这个过程偏好于不包含那些常用于创建虚假近似对消极零点对的大幅值系数的模型。所描述的补救方法是可靠的。\n- **结论**：正确。", "answer": "$$\\boxed{ACE}$$", "id": "2884669"}, {"introduction": "将理论模型应用于实际的最终目的之一是进行预测。本练习旨在通过要求你亲手实现一个核心的时间序列预测算法——新息算法（innovation algorithm），来弥合理论与实践之间的鸿沟。你将从已知的沃尔德（Wold）分解系数出发，生成合成数据，恢复新息序列，进行多步预测，并批判性地评估你所实现算法的预测精度和数值稳定性[@problem_id:2884710]。", "problem": "构建一个完整、可运行的程序，该程序实现新息算法，用于从给定的标量、零均值、弱平稳过程的有限沃尔德移动平均系数序列中获取$k$步最优线性预测器，并评估递归求逆的数值稳定性。仅使用基本原理：沃尔德分解、线性最小均方误差投影的正交性原理，以及卷积和谱的基本性质。\n\n给定以下基础知识：任何零均值、纯非确定性、弱平稳的标量过程 $y_t$ 都具有沃尔德分解 $y_t = \\sum_{j=0}^{\\infty} c_j e_{t-j}$，其中 $e_t$ 是方差为 $\\sigma_e^2$ 的单步预测新息（白噪声），系数满足 $c_0 = 1$ 和 $\\sum_{j=0}^{\\infty} c_j^2 &lt; \\infty$，并且序列 $\\{e_t\\}$ 与过去的 $\\{y_{t-1}, y_{t-2}, \\dots\\}$ 正交。对于阶数为 $M$ 的有限移动平均截断，$j &gt; M$ 时 $c_j = 0$。给定信息集 $\\mathcal{I}_t = \\sigma\\{y_t, y_{t-1}, \\dots\\}$ 时，$k$步最优线性预测器是 $y_{t+k}$ 在 $\\mathcal{I}_t$ 上的正交投影。因为 $\\{e_t\\}$ 是新息，当存在因果逆时，最优预测器可以直接用过去的新息表示。\n\n您的程序必须实现以下任务：\n\n- 通过对因果关系求逆以从数据中恢复新息，实现针对已知沃尔德移动平均系数的专用新息算法：对于给定的有限集合 $\\{c_0, c_1, \\dots, c_M\\}$（其中 $c_0 = 1$）和已实现的数据记录 $\\{y_t\\}_{t=0}^{T-1}$，通过因果求逆定义递归计算的新息估计 $\\hat e_t$\n  $$\n  \\hat e_t \\equiv y_t - \\sum_{j=1}^{\\min(M,t)} c_j \\hat e_{t-j}, \\quad \\text{其中} \\quad \\hat e_t = 0 \\ \\text{for} \\ t < 0.\n  $$\n  在可逆性的条件下，此递归等于由相同系数生成的真实新息 $e_t$。\n\n- 使用 $\\{\\hat e_t\\}$，构造 $k$ 步预测器 $\\hat y_{t+k\\mid t}$ 为\n  $$\n  \\hat y_{t+k\\mid t} \\equiv \\sum_{j=k}^{M} c_j \\hat e_{t+k-j},\n  $$\n  这可由新息的正交性和沃尔德表示推得。当 $c_j$ 已知时，这是用于多步预测的新息方法的算法输出。\n\n- 为进行实证评估，通过将方差为 $\\sigma_e^2$ 的独立同分布的高斯新息 $\\{e_t\\}$ 与系数 $\\{c_j\\}$ 进行卷积来模拟 $\\{y_t\\}$，对 $t<0$ 使用零初始条件。计算经验性的 $k$ 步预测均方误差\n  $$\n  \\widehat{\\mathrm{MSE}} \\equiv \\frac{1}{N}\\sum_{t\\in\\mathcal{T}} \\left(y_{t+k} - \\hat y_{t+k\\mid t}\\right)^2,\n  $$\n  其中 $\\mathcal{T}$ 是所有量都有定义的时间索引集合，并有 $M$ 个样本的预烧期以避免边界效应；$N$ 是 $\\mathcal{T}$ 的基数。\n\n- 推导并计算由沃尔德系数所蕴含的理论 $k$ 步预测误差方差，\n  $$\n  V_k \\equiv \\sigma_e^2 \\sum_{j=0}^{\\min(M,k-1)} c_j^2,\n  $$\n  并将其用作基准真值。报告绝对相对误差\n  $$\n  r \\equiv \\frac{\\left|\\widehat{\\mathrm{MSE}} - V_k\\right|}{V_k}.\n  $$\n\n- 通过由 $\\{c_j\\}$ 导出的相关下三角托普利兹算子的谱条件估计，分析求逆 $\\hat e_t = y_t - \\sum_{j=1}^{M} c_j \\hat e_{t-j}$ 的数值稳定性。通过对频率响应进行采样来近似谱条件数\n  $$\n  C\\!\\left(e^{\\mathrm{i}\\omega}\\right) \\equiv \\sum_{j=0}^{M} c_j e^{-\\mathrm{i}\\omega j}, \\quad \\omega \\in [0, 2\\pi),\n  $$\n  在一个密集的 $\\omega$ 均匀网格上，并计算\n  $$\n  \\kappa \\approx \\frac{\\max_{\\omega} \\left|C\\!\\left(e^{\\mathrm{i}\\omega}\\right)\\right|}{\\min_{\\omega} \\left|C\\!\\left(e^{\\mathrm{i}\\omega}\\right)\\right|}.\n  $$\n  返回 $\\log_{10}(\\kappa)$ 作为稳定性指标：值越大表明数值条件越差。\n\n测试套件和要求的输出：\n\n通过为新息生成器固定随机种子来实现一个确定性的测试套件。对于每个测试用例，进行模拟、预测，并报告数据对 $\\left[r, \\log_{10}(\\kappa)\\right]$。\n\n使用以下测试用例；在每个案例中，$T$ 是预烧期后用于评估的样本数，种子 $s$ 必须用于初始化伪随机数生成器：\n\n- 测试 A（正常路径）：$c = [1.0, 0.5, 0.2]$，$\\sigma_e^2 = 1.3$，$k = 2$，$T = 20000$，$s = 20231119$。\n\n- 测试 B（接近不可逆边缘）：$c = [1.0, 0.99]$，$\\sigma_e^2 = 0.75$，$k = 2$，$T = 20000$，$s = 20231120$。\n\n- 测试 C（超出记忆范围的长时域）：$c = [1.0, -0.8, 0.64]$，$\\sigma_e^2 = 1.0$，$k = 5$，$T = 20000$，$s = 20231121$。\n\n您的程序应生成单行输出，其中包含一个由三个列表组成的逗号分隔列表形式的结果，每个内部列表按 $\\left[r, \\log_{10}(\\kappa)\\right]$ 顺序排列。例如，语法正确的输出如下所示\n\"[ [0.00123,2.45],[0.00456,1.98],[0.00078,0.30] ]\"\n但数值必须是您实现所计算出的值。\n\n角度单位（如有）均为弧度。不涉及物理单位。所有数值输出必须是标准十进制表示的机器浮点数。确保随机数生成器完全按照规定进行初始化，以使结果具有确定性。", "solution": "对所述问题进行验证。\n\n**步骤 1：提取的既定条件**\n-   **过程模型**：由阶数为 $M$ 的有限沃尔德移动平均表示定义的零均值、弱平稳、纯非确定性标量过程 $y_t$，$y_t = \\sum_{j=0}^{M} c_j e_{t-j}$，其中 $c_0=1$。序列 $\\{e_t\\}$ 是方差为 $\\sigma_e^2$ 的白噪声。\n-   **新息恢复**：从数据记录 $\\{y_t\\}$ 中估计新息 $\\{\\hat e_t\\}$ 的递归公式：$\\hat e_t = y_t - \\sum_{j=1}^{\\min(M,t)} c_j \\hat e_{t-j}$，对于 $t<0$ 有 $\\hat e_t=0$。\n-   **最优线性预测器**：给定直至时间 $t$ 的信息，$y_{t+k}$ 的 $k$ 步预测器为 $\\hat y_{t+k\\mid t} = \\sum_{j=k}^{M} c_j \\hat e_{t+k-j}$。\n-   **性能指标**：\n    1.  经验均方误差：$\\widehat{\\mathrm{MSE}} = \\frac{1}{N}\\sum_{t\\in\\mathcal{T}} (y_{t+k} - \\hat y_{t+k\\mid t})^2$，在 $M$ 个样本的预烧期后，对 $N=T$ 个样本进行计算。\n    2.  理论预测误差方差：$V_k = \\sigma_e^2 \\sum_{j=0}^{\\min(M,k-1)} c_j^2$。\n    3.  绝对相对误差：$r = |\\widehat{\\mathrm{MSE}} - V_k|/V_k$。\n-   **稳定性分析**：数值稳定性指标 $\\log_{10}(\\kappa)$，其中 $\\kappa$ 是过程传递函数的谱条件数，近似为 $\\kappa \\approx \\frac{\\max_{\\omega} |C(e^{\\mathrm{i}\\omega})|}{\\min_{\\omega} |C(e^{\\mathrm{i}\\omega})|}$，其中 $C(e^{\\mathrm{i}\\omega}) = \\sum_{j=0}^{M} c_j e^{-\\mathrm{i}\\omega j}$。\n-   **测试用例**：\n    -   A: $c=[1.0, 0.5, 0.2]$, $\\sigma_e^2=1.3$, $k=2$, $T=20000$, 种子 $s=20231119$。\n    -   B: $c=[1.0, 0.99]$, $\\sigma_e^2=0.75$, $k=2$, $T=20000$, 种子 $s=20231120$。\n    -   C: $c=[1.0, -0.8, 0.64]$, $\\sigma_e^2=1.0$, $k=5$, $T=20000$, 种子 $s=20231121$。\n-   **输出格式**：单行列表的列表：`[[r_A, log10_kappa_A], [r_B, log10_kappa_B], [r_C, log10_kappa_C]]`。\n\n**步骤 2：验证**\n对照指定标准对问题进行分析。\n-   **科学依据**：该问题建立在时间序列分析的基本原理之上，特别是沃尔德分解、平稳过程的线性预测理论以及移动平均模型的可逆性概念。所有提供的公式都是标准且正确的。\n-   **适定性**：该问题具有数学上的精确规定。所有参数、算法和评估指标都有明确的定义。固定的随机种子确保了唯一的、确定性的数值结果，使解决方案可被验证。\n-   **客观性**：语言正式且客观。不存在主观或推测性的断言。\n\n**步骤 3：结论**\n该问题被判定为 **有效**。这是一个在计算信号处理和系统辨识领域中，适定且具有科学依据的练习。现在将构建一个解决方案。\n\n**基于原理的解决方案设计**\n\n该任务要求实现一个完整的流程：数据生成、滤波、预测和分析。这将通过遵守问题陈述中概述的基本原理来执行。\n\n**1. 过程生成与新息恢复**\n一个具有 MA($M$) 表示的零均值弱平稳过程 $y_t$ 由卷积给出：\n$$\ny_t = \\sum_{j=0}^{M} c_j e_{t-j} = (c * e)_t\n$$\n其中 $\\{e_t\\}$ 是一个均值为 $0$、方差为 $\\sigma_e^2$ 的白噪声序列。在 $z$ 域中，这表示为 $Y(z) = C(z)E(z)$，其中 $C(z) = \\sum_{j=0}^M c_j z^{-j}$ 是有限脉冲响应（FIR）滤波器的传递函数。\n\n从观测过程 $\\{y_t\\}$ 中恢复新息 $\\{\\hat e_t\\}$ 构成了对此滤波器的求逆。关系由 $\\hat E(z) = \\frac{1}{C(z)} Y(z)$ 给出，这对应于一个无限脉冲响应（IIR）滤波器。时域递归为：\n$$\n\\hat e_t = y_t - \\sum_{j=1}^{M} c_j \\hat e_{t-j}\n$$\n这假设对于 $t < 0$ 有 $\\hat e_t = 0$。对于足够长的数据记录，并且如果 MA 过程是可逆的，$\\hat e_t$ 将是真实新息 $e_t$ 的一个紧密近似。因此，模拟将需要：\n-   生成一个足够长度的高斯白噪声序列 $\\{e_t\\}$。\n-   应用具有系数 $\\{c_j\\}$ 的 FIR 滤波器来生成 $\\{y_t\\}$。\n-   应用具有反馈系数 $\\{c_1, \\dots, c_M\\}$ 的 IIR 滤波器来恢复 $\\{\\hat e_t\\}$。\n\n**2. 最优线性预测**\n$k$ 步预测器 $\\hat y_{t+k|t}$ 是 $y_{t+k}$ 在由过程历史所张成的希尔伯特空间 $\\mathcal{H}_t = \\overline{\\text{span}}\\{y_s, s \\le t\\}$ 上的正交投影。假设可逆性，该空间等价于由过去的新息所张成的空间 $\\overline{\\text{span}}\\{e_s, s \\le t\\}$。\n未来值 $y_{t+k}$ 为\n$$\ny_{t+k} = \\sum_{j=0}^{M} c_j e_{t+k-j} = \\underbrace{\\sum_{j=0}^{k-1} c_j e_{t+k-j}}_{\\text{未来新息}} + \\underbrace{\\sum_{j=k}^{M} c_j e_{t+k-j}}_{\\text{过去新息}}\n$$\n第一项，涉及未来新息 $\\{e_{t+1}, \\dots, e_{t+k}\\}$，与 $\\mathcal{H}_t$ 正交。第二项已在 $\\mathcal{H}_t$ 中。因此，$y_{t+k}$ 在 $\\mathcal{H}_t$ 上的投影恰好是第二项。用真实新息 $e_t$ 的估计值 $\\hat e_t$ 替换，我们得到预测器：\n$$\n\\hat y_{t+k|t} = \\sum_{j=k}^{M} c_j \\hat e_{t+k-j}\n$$\n如果 $k > M$，则求和为空，预测器为 $\\hat y_{t+k|t} = 0$，即过程的无条件均值。\n\n**3. 预测误差分析**\n理论上的 $k$ 步预测误差为 $y_{t+k} - \\hat y_{t+k|t} = \\sum_{j=0}^{k-1} c_j e_{t+k-j}$。由于新息是正交的且方差为 $\\sigma_e^2$，该误差的方差 $V_k$ 为：\n$$\nV_k = E\\left[\\left(\\sum_{j=0}^{k-1} c_j e_{t+k-j}\\right)^2\\right] = \\sum_{j=0}^{k-1} c_j^2 E[e_{t+k-j}^2] = \\sigma_e^2 \\sum_{j=0}^{k-1} c_j^2\n$$\n这在 $k-1 \\le M$ 时成立。如果 $k-1 > M$，则系数的求和仅延伸至 $j=M$。因此，通用形式为 $V_k = \\sigma_e^2 \\sum_{j=0}^{\\min(M, k-1)} c_j^2$。经验 MSE $\\widehat{\\mathrm{MSE}}$ 是根据模拟计算得出的，并通过相对误差 $r$ 与 $V_k$ 进行比较。对于大样本量 $T$，我们期望 $r$ 很小，这表明了一致性。\n\n**4. 数值稳定性**\n如果特征多项式 $C(Z) = \\sum_{j=0}^M c_j Z^j$ 的所有根都严格位于单位圆 $|Z|=1$ 之外，则 MA($M$) 过程的可逆性得到保证。如果一个根接近单位圆，则该过程接近不可逆。\n频率响应的最小幅值 $\\min_{\\omega} |C(e^{\\mathrm{i}\\omega})|$ 对应于 $|Z_0|-1$，其中 $Z_0$ 是最接近单位圆的根。接近于零的值表示根靠近单位圆。\n相关托普利兹卷积矩阵的条件数 $\\kappa$ 受其符号 $C(e^{\\mathrm{i}\\omega})$ 的最大幅值与最小幅值之比的限制。因此，给定的近似\n$$\n\\kappa \\approx \\frac{\\max_{\\omega} |C(e^{\\mathrm{i}\\omega})|}{\\min_{\\omega} |C(e^{\\mathrm{i}\\omega})|}\n$$\n可作为衡量条件的一个鲁棒指标。大的 $\\kappa$ 意味着求逆过程（恢复 $\\hat e_t$）对数值扰动敏感，这是数值不稳定性的一个标志。问题要求报告 $\\log_{10}(\\kappa)$ 作为稳定性指标。这种对数尺度恰当地捕捉了病态条件的严重程度。\n\n实现将遵循这些原则，使用 `numpy` 进行数值数组和运算，并使用 `scipy.signal.lfilter` 来高效实现 FIR 和 IIR 滤波步骤。", "answer": "```python\nimport numpy as np\nfrom scipy.signal import lfilter\n\ndef execute_case(c_coeffs, sigma_e_sq, k, T, seed):\n    \"\"\"\n    Executes a single test case for the innovation algorithm.\n\n    Args:\n        c_coeffs (list): List of Wold moving-average coefficients [c_0, c_1, ..., c_M].\n        sigma_e_sq (float): Variance of the innovations.\n        k (int): Prediction horizon.\n        T (int): Number of samples for MSE evaluation.\n        seed (int): Seed for the random number generator.\n\n    Returns:\n        list: A list containing [relative_error, log10_kappa].\n    \"\"\"\n    # === Step 1: Initialization ===\n    c = np.array(c_coeffs, dtype=np.float64)\n    sigma_e = np.sqrt(sigma_e_sq)\n    M = len(c) - 1\n    # Total simulation length to accommodate burn-in and k-step lookahead for the last evaluation point\n    simulation_length = M + T + k\n    rng = np.random.default_rng(seed)\n\n    # === Step 2: Data Simulation (y_t = C(z)e_t) ===\n    # Generate i.i.d. Gaussian innovations e_t\n    e = rng.normal(loc=0.0, scale=sigma_e, size=simulation_length)\n    # Generate process y_t by filtering innovations with c\n    # This corresponds to y_t = sum_{j=0 to M} c_j * e_{t-j}\n    y = lfilter(c, [1.0], e)\n\n    # === Step 3: Innovation Recovery (e_hat_t = 1/C(z) * y_t) ===\n    # Recover innovations e_hat_t by inverse filtering y_t\n    # This corresponds to e_hat_t = y_t - sum_{j=1 to M} c_j * e_hat_{t-j}\n    e_hat = lfilter([1.0], c, y)\n\n    # === Step 4: k-Step Ahead Prediction ===\n    prediction_errors_sq = np.zeros(T, dtype=np.float64)\n    evaluation_indices = range(M, M + T)\n\n    for i, t in enumerate(evaluation_indices):\n        # The predictor is y_hat_{t+k|t} = sum_{j=k to M} c_j * e_hat_{t+k-j}\n        # If k > M, the sum is empty and the predictor is 0 (the process mean).\n        if k > M:\n            y_pred = 0.0\n        else:\n            # Let l = j-k. Sum is sum_{l=0 to M-k} c_{k+l} * e_hat_{t-l}\n            # This is a dot product of predictor coefficients and a segment of past innovations.\n            predictor_coeffs = c[k:]\n            innov_segment = e_hat[t - (M - k) : t + 1]\n            y_pred = np.dot(predictor_coeffs, innov_segment[::-1])\n        \n        # The true value is y_{t+k}.\n        y_true = y[t + k]\n        prediction_errors_sq[i] = (y_true - y_pred)**2\n\n    # === Step 5: Empirical MSE Calculation ===\n    empirical_mse = np.mean(prediction_errors_sq)\n\n    # === Step 6: Theoretical MSE Calculation ===\n    # V_k = sigma_e^2 * sum_{j=0 to min(M,k-1)} c_j^2\n    sum_limit = min(M, k - 1)\n    theoretical_mse = sigma_e_sq * np.sum(c[0 : sum_limit + 1]**2)\n\n    # === Step 7: Relative Error Calculation ===\n    if theoretical_mse < np.finfo(float).eps:\n        relative_error = np.inf if np.abs(empirical_mse) > np.finfo(float).eps else 0.0\n    else:\n        relative_error = np.abs(empirical_mse - theoretical_mse) / theoretical_mse\n\n    # === Step 8: Stability Analysis ===\n    # Approximate condition number via frequency response on a dense grid.\n    # A large N_fft provides a dense grid for omega in [0, 2*pi).\n    N_fft = 8192\n    C_freq = np.fft.fft(c, n=N_fft)\n    mag_C = np.abs(C_freq)\n    \n    min_mag = np.min(mag_C)\n    max_mag = np.max(mag_C)\n    \n    # Handle non-invertible case where a zero is on the unit circle.\n    if min_mag < np.finfo(float).eps:\n        log10_kappa = np.inf\n    else:\n        kappa = max_mag / min_mag\n        log10_kappa = np.log10(kappa)\n        \n    return [relative_error, log10_kappa]\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print the final results.\n    \"\"\"\n    test_cases = [\n        # Test A: Happy path, well-behaved invertible process.\n        {'c_coeffs': [1.0, 0.5, 0.2], 'sigma_e_sq': 1.3, 'k': 2, 'T': 20000, 's': 20231119},\n        # Test B: Near non-invertible edge, expect high condition number.\n        {'c_coeffs': [1.0, 0.99], 'sigma_e_sq': 0.75, 'k': 2, 'T': 20000, 's': 20231120},\n        # Test C: Long horizon prediction beyond process memory.\n        {'c_coeffs': [1.0, -0.8, 0.64], 'sigma_e_sq': 1.0, 'k': 5, 'T': 20000, 's': 20231121}\n    ]\n\n    results = []\n    for case in test_cases:\n        result = execute_case(\n            case['c_coeffs'],\n            case['sigma_e_sq'],\n            case['k'],\n            case['T'],\n            case['s']\n        )\n        results.append(result)\n\n    # Format the output as a single-line string representation of a list of lists,\n    # as specified by the problem's output structure template.\n    # e.g., [[val1, val2],[val3, val4]]\n    # Python's default str(list) format matches the requirements.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2884710"}]}