{"hands_on_practices": [{"introduction": "掌握 $\\varepsilon$-NTU 方法的第一步是能够运用其进行正向计算。本练习旨在巩固这一核心技能。您将为一个给定的并流换热器，利用已知的热容率比 $C_r$ 和传热单元数 $\\mathrm{NTU}$，通过标准的 $\\varepsilon$-NTU 关系式来预测换热器出口温度，从而评估其热力性能 [@problem_id:2492801]。这项基本功是进行更复杂换热器设计与分析的基础。", "problem": "一台紧凑、良好绝热的并流换热器在稳态下运行，其轴向导热可忽略不计且物性恒定。热流体入口温度为 $T_{h,i} = 410 \\,\\mathrm{K}$，冷流体入口温度为 $T_{c,i} = 300 \\,\\mathrm{K}$。热流体的热容率大于冷流体的热容率。最小热容率与最大热容率之比（即热容率比）为 $C_{r} = C_{\\min}/C_{\\max} = 0.50$。传热单元数 ($\\mathrm{NTU}$) 为 $\\mathrm{NTU} = 1.20$。请仅使用热容率的定义、能量平衡、换热器效能的定义，以及经过充分验证的并流换热器效能-NTU关系，确定出口温度 $T_{h,o}$ 和 $T_{c,o}$。\n\n然后，确定夹点位置，该位置定义为热、冷流体之间温差达到最小值的轴向端。使用二元指示符 $p$ 来编码夹点位置，如果夹点在出口处，则 $p=1$；如果夹点在入口处，则 $p=0$。\n\n以 $\\mathrm{K}$ 为单位表示 $T_{h,o}$ 和 $T_{c,o}$，$p$ 为无量纲。将温度四舍五入至四位有效数字。请将最终答案表示为单个行向量 $\\big[T_{h,o},\\,T_{c,o},\\,p\\big]$。", "solution": "所提出的问题是换热器分析中的一道标准练习题，其提法明确，具有科学依据，并包含了获得唯一解的充分信息。我们将采用效能-传热单元数（$\\epsilon$-NTU）法进行分析。\n\n问题指明这是一个并流换热器。给定参数如下：\n热流体入口温度，$T_{h,i} = 410 \\,\\mathrm{K}$。\n冷流体入口温度，$T_{c,i} = 300 \\,\\mathrm{K}$。\n热容率比，$C_{r} = C_{\\min}/C_{\\max} = 0.50$。\n传热单元数，$\\mathrm{NTU} = 1.20$。\n\n问题陈述热流体具有较大的热容率。设 $C_h$ 和 $C_c$ 分别为热流体和冷流体的热容率，这意味着 $C_h > C_c$。根据定义，$C_{\\max}$ 是两种热容率中较大者，$C_{\\min}$ 是较小者。因此，我们有 $C_{\\max} = C_h$ 和 $C_{\\min} = C_c$。热容率比为 $C_r = C_c/C_h = 0.50$。\n\n第一步是计算换热器的效能 $\\epsilon$。对于并流配置，效能由以下关系式给出：\n$$ \\epsilon = \\frac{1 - \\exp[-\\mathrm{NTU}(1 + C_r)]}{1 + C_r} $$\n代入给定值 $\\mathrm{NTU} = 1.20$ 和 $C_r = 0.50$：\n$$ \\epsilon = \\frac{1 - \\exp[-1.20(1 + 0.50)]}{1 + 0.50} = \\frac{1 - \\exp[-1.20(1.5)]}{1.5} = \\frac{1 - \\exp(-1.8)}{1.5} $$\n指数项的值为 $\\exp(-1.8) \\approx 0.165299$。\n$$ \\epsilon \\approx \\frac{1 - 0.165299}{1.5} = \\frac{0.834701}{1.5} \\approx 0.556467 $$\n\n接下来，我们使用效能的定义来求出实际传热速率 $q$。效能是实际传热速率与最大可能传热速率 $q_{\\max}$ 的比值：\n$$ \\epsilon = \\frac{q}{q_{\\max}} $$\n其中 $q_{\\max}$ 定义为：\n$$ q_{\\max} = C_{\\min}(T_{h,i} - T_{c,i}) $$\n因此，实际传热速率为：\n$$ q = \\epsilon C_{\\min}(T_{h,i} - T_{c,i}) $$\n\n传热速率 $q$ 也可以通过对每股流体的能量平衡来表示。\n对于冷流体：\n$$ q = C_c(T_{c,o} - T_{c,i}) $$\n因为我们已经确定 $C_c = C_{\\min}$，所以可以写出：\n$$ q = C_{\\min}(T_{c,o} - T_{c,i}) $$\n令 $q$ 的两个表达式相等：\n$$ C_{\\min}(T_{c,o} - T_{c,i}) = \\epsilon C_{\\min}(T_{h,i} - T_{c,i}) $$\n$C_{\\min}$ 项被消去，我们可以解出冷流体出口温度 $T_{c,o}$：\n$$ T_{c,o} = T_{c,i} + \\epsilon (T_{h,i} - T_{c,i}) $$\n代入已知值：\n$$ T_{c,o} = 300 + (0.556467)(410 - 300) = 300 + (0.556467)(110) \\approx 300 + 61.2114 = 361.2114 \\,\\mathrm{K} $$\n\n对于热流体，能量平衡为：\n$$ q = C_h(T_{h,i} - T_{h,o}) $$\n再次将其与由效能定义得出的 $q$ 的表达式相等：\n$$ C_h(T_{h,i} - T_{h,o}) = \\epsilon C_{\\min}(T_{h,i} - T_{c,i}) $$\n解出热流体出口温度 $T_{h,o}$：\n$$ T_{h,o} = T_{h,i} - \\epsilon \\frac{C_{\\min}}{C_h}(T_{h,i} - T_{c,i}) $$\n考虑到 $C_{\\min}/C_h = C_r$：\n$$ T_{h,o} = T_{h,i} - \\epsilon C_r(T_{h,i} - T_{c,i}) $$\n代入已知值：\n$$ T_{h,o} = 410 - (0.556467)(0.50)(410 - 300) = 410 - (0.556467)(0.50)(110) \\approx 410 - 30.6057 = 379.3943 \\,\\mathrm{K} $$\n按要求将出口温度四舍五入至四位有效数字：\n$T_{c,o} \\approx 361.2 \\,\\mathrm{K}$\n$T_{h,o} \\approx 379.4 \\,\\mathrm{K}$\n\n最后，我们必须确定夹点位置。这是热、冷流体之间温差达到最小值的轴向端。我们来计算入口和出口处的温差。\n入口处的温差为：\n$$ \\Delta T_i = T_{h,i} - T_{c,i} = 410 - 300 = 110 \\,\\mathrm{K} $$\n出口处的温差为：\n$$ \\Delta T_o = T_{h,o} - T_{c,o} \\approx 379.3943 - 361.2114 = 18.1829 \\,\\mathrm{K} $$\n比较这两个值，$\\Delta T_o < \\Delta T_i$。最小温差出现在出口处。这是并流换热器的一个基本特征；由于两种流体沿同一方向流动，它们的温度会渐近地相互接近，导致沿流动路径的温差持续减小。因此，最小值必然出现在出口处。\n问题定义了一个二元指示符 $p$：如果夹点在出口处，则 $p=1$；如果在入口处，则 $p=0$。由于夹点位于出口处，所以 $p=1$。\n\n最终结果为 $T_{h,o} \\approx 379.4 \\,\\mathrm{K}$，$T_{c,o} \\approx 361.2 \\,\\mathrm{K}$，以及 $p=1$。", "answer": "$$ \\boxed{\\begin{pmatrix} 379.4 & 361.2 & 1 \\end{pmatrix}} $$", "id": "2492801"}, {"introduction": "在工程实践中，我们常常需要反向工作：利用运行中测得的温度数据来评估现有换热器的性能参数。这个逆向问题对于设备诊断、性能验证和老化评估至关重要。本练习模拟了这一真实场景，要求您根据一组出口和入口温度测量值，推算出逆流换热器的总传热导率 $UA$ 和热容率比 $C_r$ [@problem_id:2492772]。通过这个练习，您可以将理论知识应用于解决实际的工程表征问题。", "problem": "一个稳态逆流换热器将能量从热油流传递到较冷的水流。在运行期间进行以下单程测量：热流入口温度 $T_{h,\\mathrm{in}} = 150\\,^{\\circ}\\mathrm{C}$，热流出口温度 $T_{h,\\mathrm{out}} = 100\\,^{\\circ}\\mathrm{C}$，冷流入口温度 $T_{c,\\mathrm{in}} = 20\\,^{\\circ}\\mathrm{C}$，以及冷流出口温度 $T_{c,\\mathrm{out}} = 80\\,^{\\circ}\\mathrm{C}$。质量流量和定压比热已知：热流 $\\dot{m}_{h} = 2.0\\,\\mathrm{kg/s}$，$c_{p,h} = 2.4\\,\\mathrm{kJ/(kg\\cdot K)}$；冷流 $\\dot{m}_{c} = 1.0\\,\\mathrm{kg/s}$，$c_{p,c} = 4.0\\,\\mathrm{kJ/(kg\\cdot K)}$。假设为恒定物性的单相操作，轴向热传导可忽略，且无热量损失到周围环境。\n\n仅使用基本定义（总能量平衡、热容率和换热器效能）以及适用于逆流换热器的标准效能-传热单元数（NTU）关系，提出并解决逆参数估计问题，以确定：\n- 总传热导 $(UA)$，以及\n- 热容率之比 $C_{r}$，定义为 $C_{r} = C_{\\min}/C_{\\max}$，其中 $C = \\dot{m} c_{p}$。\n\n将 $UA$ 以 $\\mathrm{kW/K}$ 为单位表示，$C_{r}$ 表示为纯数。按 $(UA,\\,C_{r})$ 的顺序报告这两个值。将两者均四舍五入至 $4$ 位有效数字。", "solution": "题目陈述已经过严格的验证过程。所有提供的数据、条件和假设都已被提取和审查，以确保其科学合理性、一致性和完整性。\n\n**验证：**\n首先，必须根据给定数据计算热流体 ($C_h$) 和冷流体 ($C_c$) 的热容率。\n热容率定义为 $C = \\dot{m} c_p$。\n对于热流：\n$$C_h = \\dot{m}_h c_{p,h} = (2.0\\,\\mathrm{kg/s}) \\times (2.4\\,\\mathrm{kJ/(kg\\cdot K)}) = 4.8\\,\\mathrm{kW/K}$$\n对于冷流：\n$$C_c = \\dot{m}_c c_{p,c} = (1.0\\,\\mathrm{kg/s}) \\times (4.0\\,\\mathrm{kJ/(kg\\cdot K)}) = 4.0\\,\\mathrm{kW/K}$$\n\n接下来，进行能量平衡以验证所提供的温度测量值的一致性，前提是假设没有热量损失到周围环境。从热流传出的传热速率 $q_h$ 必须等于传递给冷流的传热速率 $q_c$。注意，以摄氏度为单位的温差等于以开尔文为单位的温差（$\\Delta T\\,[^\\circ\\mathrm{C}] = \\Delta T\\,[\\mathrm{K}]$）。\n$$q_h = C_h (T_{h,\\mathrm{in}} - T_{h,\\mathrm{out}}) = (4.8\\,\\mathrm{kW/K}) \\times (150 - 100)\\,\\mathrm{K} = (4.8)(50)\\,\\mathrm{kW} = 240\\,\\mathrm{kW}$$\n$$q_c = C_c (T_{c,\\mathrm{out}} - T_{c,\\mathrm{in}}) = (4.0\\,\\mathrm{kW/K}) \\times (80 - 20)\\,\\mathrm{K} = (4.0)(60)\\,\\mathrm{kW} = 240\\,\\mathrm{kW}$$\n由于 $q_h = q_c$，测量结果在指定条件下与热力学第一定律一致。因此，该问题是科学上合理的、自洽的且提法得当的。我们可以继续进行求解。\n\n**求解：**\n该问题构成一个逆参数估计任务。我们将使用给定的运行数据来确定换热器的内在参数，特别是热容率之比 $C_r$ 和总传热导 $UA$。\n\n1.  **确定 $C_{\\min}$、$C_{\\max}$ 和 $C_r$：**\n    根据计算出的热容率，我们确定最小值和最大值：\n    $$C_c = 4.0\\,\\mathrm{kW/K} = C_{\\min}$$\n    $$C_h = 4.8\\,\\mathrm{kW/K} = C_{\\max}$$\n    热容率之比 $C_r$ 定义为最小热容率与最大热容率的比值：\n    $$C_r = \\frac{C_{\\min}}{C_{\\max}} = \\frac{4.0}{4.8} = \\frac{5}{6}$$\n    这是第一个要求的值。\n\n2.  **计算换热器效能 ($\\epsilon$)：**\n    效能 $\\epsilon$ 是实际传热速率 $q$ 与最大可能传热速率 $q_{\\max}$ 的比值。\n    实际传热速率 $q$ 为 $240\\,\\mathrm{kW}$，这是由能量平衡确定的。\n    最大可能传热速率发生在一个假设的无限长逆流换热器中，其中具有最小热容率的流体经历最大的可能温度变化，即热流和冷流的入口温度之差。\n    $$q_{\\max} = C_{\\min} (T_{h,\\mathrm{in}} - T_{c,\\mathrm{in}}) = (4.0\\,\\mathrm{kW/K}) \\times (150 - 20)\\,\\mathrm{K} = (4.0)(130)\\,\\mathrm{kW} = 520\\,\\mathrm{kW}$$\n    因此，效能为：\n    $$\\epsilon = \\frac{q}{q_{\\max}} = \\frac{240\\,\\mathrm{kW}}{520\\,\\mathrm{kW}} = \\frac{24}{52} = \\frac{6}{13}$$\n\n3.  **确定传热单元数 (NTU)：**\n    问题指定了是一个逆流换热器。对于 $C_r \\neq 1$ 的逆流换热器，其效能 ($\\epsilon$)、NTU 和热容率之比 ($C_r$) 之间的关系是：\n    $$\\epsilon = \\frac{1 - \\exp[-\\mathrm{NTU}(1 - C_r)]}{1 - C_r \\exp[-\\mathrm{NTU}(1 - C_r)]}$$\n    我们必须重新整理这个表达式以求解 NTU。\n    $$\\epsilon (1 - C_r \\exp[-\\mathrm{NTU}(1 - C_r)]) = 1 - \\exp[-\\mathrm{NTU}(1 - C_r)]$$\n    $$\\epsilon - 1 = \\epsilon C_r \\exp[-\\mathrm{NTU}(1 - C_r)] - \\exp[-\\mathrm{NTU}(1 - C_r)]$$\n    $$\\epsilon - 1 = (\\epsilon C_r - 1) \\exp[-\\mathrm{NTU}(1 - C_r)]$$\n    $$\\exp[-\\mathrm{NTU}(1 - C_r)] = \\frac{\\epsilon - 1}{\\epsilon C_r - 1}$$\n    取两边的自然对数：\n    $$-\\mathrm{NTU}(1 - C_r) = \\ln\\left(\\frac{\\epsilon - 1}{\\epsilon C_r - 1}\\right)$$\n    $$\\mathrm{NTU} = \\frac{1}{C_r - 1} \\ln\\left(\\frac{\\epsilon - 1}{\\epsilon C_r - 1}\\right)$$\n    代入 $\\epsilon = 6/13$ 和 $C_r = 5/6$ 的精确分数值：\n    $$\\mathrm{NTU} = \\frac{1}{\\frac{5}{6} - 1} \\ln\\left(\\frac{\\frac{6}{13} - 1}{\\frac{6}{13} \\cdot \\frac{5}{6} - 1}\\right) = \\frac{1}{-1/6} \\ln\\left(\\frac{-7/13}{5/13 - 1}\\right)$$\n    $$\\mathrm{NTU} = -6 \\ln\\left(\\frac{-7/13}{-8/13}\\right) = -6 \\ln\\left(\\frac{7}{8}\\right)$$\n    使用对数性质 $\\ln(a/b) = -\\ln(b/a)$：\n    $$\\mathrm{NTU} = 6 \\ln\\left(\\frac{8}{7}\\right)$$\n\n4.  **计算总传热导 ($UA$)：**\n    传热单元数的定义为 $\\mathrm{NTU} = UA / C_{\\min}$。因此，总传热导为：\n    $$UA = \\mathrm{NTU} \\times C_{\\min}$$\n    代入 NTU 的表达式和 $C_{\\min}$ 的值：\n    $$UA = \\left[6 \\ln\\left(\\frac{8}{7}\\right)\\right] \\times (4.0\\,\\mathrm{kW/K})$$\n    现在，我们计算数值，并按要求四舍五入到 $4$ 位有效数字。\n    $$C_r = \\frac{5}{6} \\approx 0.83333... \\implies C_r \\approx 8.333 \\times 10^{-1}$$\n    $$UA = 6 \\ln\\left(\\frac{8}{7}\\right) \\times 4.0 \\approx 6 \\times (0.13353) \\times 4.0 \\approx 3.2047\\,\\mathrm{kW/K}$$\n    四舍五入到 $4$ 位有效数字，我们得到：\n    $$C_r \\approx 0.8333$$\n    $$UA \\approx 3.205\\,\\mathrm{kW/K}$$\n    最终答案包含按指定顺序排列的这两个值。", "answer": "$$\\boxed{\\begin{pmatrix} 3.205 & 0.8333 \\end{pmatrix}}$$", "id": "2492772"}, {"introduction": "理想化的模型假设物性恒定，但在许多实际应用中，流体的热物理性质（如粘度、热导率、比热）会随温度显著变化。本练习将引导您应对这一挑战，构建一个更接近真实的计算模型。您需要设计一个迭代算法，将 $\\varepsilon$-NTU 方法与复杂的、依赖于温度的物性关联式相结合，以精确求解气-气换热器的性能 [@problem_id:2492821]，这是通往高级计算热流体分析的关键一步。", "problem": "一个逆流式单程气-气换热器在运行，其两侧流体均在紧凑通道内流动。通道的水力直径和主流流动面积已知。两侧由一块厚度均匀、导热系数已知的扁平隔墙隔开。气体的热物理性质是随温度变化的，必须进行显式建模。两侧的对流传热系数需通过无量纲湍流内流关联式计算得到，这些关联式需在适当的平均主流温度下求值，而该温度又取决于未知的出口温度。您的任务是设计一个算法并实现一个完整的程序，该程序将对流关联式与效率-传热单元数（ε-NTU）方法耦合，进行迭代计算，直到出口温度和换热器整体性能收敛。\n\n该程序必须仅使用以下有物理依据的基础和模型。\n\n- 能量守恒与定义：\n  - 定义热容率 $C_{\\mathrm{h}} = \\dot{m}_{\\mathrm{h}}\\,c_{p,\\mathrm{h}}$ 和 $C_{\\mathrm{c}} = \\dot{m}_{\\mathrm{c}}\\,c_{p,\\mathrm{c}}$，其中 $\\dot{m}$ 是质量流量，$c_p$ 是定压比热容。\n  - 定义 $C_{\\min} = \\min\\{C_{\\mathrm{h}}, C_{\\mathrm{c}}\\}$ 和 $C_{\\max} = \\max\\{C_{\\mathrm{h}}, C_{\\mathrm{c}}\\}$ 以及热容率比 $C_r = C_{\\min}/C_{\\max}$。\n  - 根据两侧对流和壁面导热的串联热阻，定义总传热系数 $U$。\n\n- 每侧的内部强制对流：\n  - 雷诺数：$\\mathrm{Re} = \\dfrac{\\rho\\,V\\,D_{\\mathrm{h}}}{\\mu}$，其中主流速度 $V = \\dfrac{\\dot{m}}{\\rho A_{\\mathrm{flow}}}$，$\\rho$ 为密度，$\\mu$ 为动力粘度，$D_{\\mathrm{h}}$ 为水力直径。\n  - 普朗特数由随温度变化的函数给出（见下文）。\n  - 摩擦系数（适用于湍流的光滑管道 Petukhov 关联式）：$f = \\left(0.790\\ln \\mathrm{Re} - 1.64\\right)^{-2}$，适用于 $\\mathrm{Re} \\gtrsim 3000$。\n  - 努塞尔数（适用于湍流的 Gnielinski 关联式）：$\\mathrm{Nu} = \\dfrac{f/8\\,(\\mathrm{Re}-1000)\\,\\mathrm{Pr}}{1 + 12.7\\,(f/8)^{1/2}\\,(\\mathrm{Pr}^{2/3}-1)}$，适用于 $3000 \\lesssim \\mathrm{Re} \\lesssim 5\\times 10^6$ 和 $0.5 \\lesssim \\mathrm{Pr} \\lesssim 2000$。\n  - 对于层流充分发展的恒定壁温流动，使用 $\\mathrm{Nu} = 3.66$。在过渡区 $2300 \\le \\mathrm{Re} \\le 3000$ 内，在层流和湍流预测值之间进行线性插值。\n\n- 气体物性模型（在每次迭代中，根据每侧的平均主流温度 $T_{\\mathrm{mean}} = \\tfrac{1}{2}(T_{\\mathrm{in}} + T_{\\mathrm{out}})$ 进行计算）：\n  - 理想气体密度：$\\rho = \\dfrac{p}{R T_{\\mathrm{mean}}}$，其中 $p$ 为绝对压力，$R = \\dfrac{R_{\\mathrm{u}}}{M}$ 为比气体常数，普适气体常数为 $R_{\\mathrm{u}} = 8.314462618\\,\\mathrm{J/(mol\\cdot K)}$，$M$ 为摩尔质量。\n  - 动力粘度（Sutherland 定律）：$\\mu(T) = \\mu_{\\mathrm{ref}}\\left(\\dfrac{T}{T_{\\mathrm{ref}}}\\right)^{3/2}\\dfrac{T_{\\mathrm{ref}} + S}{T + S}$。\n  - 使用 Shomate 多项式计算定压热容，以 $t = T/1000$ 表示：$c_{p,\\mathrm{molar}}(T) = A + B t + C t^2 + D t^3 + \\dfrac{E}{t^2}$，单位为 $\\mathrm{J/(mol\\cdot K)}$。通过 $c_p = \\dfrac{c_{p,\\mathrm{molar}}}{M}$ 将其转换为质量比热容 $c_p$。\n  - 普朗特数（随温度变化的经验近似值，并限制在物理上合理的区间内）：$\\mathrm{Pr}(T)$ 对各组分分别给出如下。\n  - 导热系数根据 Eucken 关系式计算：$k(T) = \\dfrac{\\mu(T)\\,c_p(T)}{\\mathrm{Pr}(T)}$。\n\n- 组分数据（使用指定的有效温度范围；如果温度 $T$ 超出范围，则在计算 $c_p$ 时钳位至最近的边界值）：\n  - 氮气 ($\\mathrm{N_2}$): $M = 0.0280134\\,\\mathrm{kg/mol}$，Sutherland 参数 $T_{\\mathrm{ref}} = 300\\,\\mathrm{K}$、$\\mu_{\\mathrm{ref}} = 1.663\\times 10^{-5}\\,\\mathrm{Pa\\cdot s}$、$S = 107\\,\\mathrm{K}$。在 $200 \\le T \\le 1000\\,\\mathrm{K}$ 范围内的 Shomate 系数：$A=28.98641$，$B=1.853978$，$C=-9.647459$，$D=16.63537$，$E=0.000117$。普朗特数近似式 $\\mathrm{Pr}_{\\mathrm{N_2}}(T) = \\max\\{0.64, \\min\\{0.82, 0.72 - 1.0\\times 10^{-4}(T - 300)\\}\\}$，其中 $T$ 的单位为 $\\mathrm{K}$。\n  - 二氧化碳 ($\\mathrm{CO_2}$): $M = 0.0440095\\,\\mathrm{kg/mol}$，Sutherland 参数 $T_{\\mathrm{ref}} = 300\\,\\mathrm{K}$、$\\mu_{\\mathrm{ref}} = 1.480\\times 10^{-5}\\,\\mathrm{Pa\\cdot s}$、$S = 240\\,\\mathrm{K}$。在 $298 \\le T \\le 1200\\,\\mathrm{K}$ 范围内的 Shomate 系数：$A=24.99735$，$B=55.18696$，$C=-33.69137$，$D=7.948387$，$E=-0.136638$。普朗特数近似式 $\\mathrm{Pr}_{\\mathrm{CO_2}}(T) = \\max\\{0.66, \\min\\{0.85, 0.77 - 1.5\\times 10^{-4}(T - 300)\\}\\}$。\n\n- 公共传热面积 $A$ 上的总热阻：使用两侧面积一致的平壁串联模型：\n$$ \\dfrac{1}{U} = \\dfrac{1}{h_{\\mathrm{h}}} + \\dfrac{\\delta}{k_{\\mathrm{w}}} + \\dfrac{1}{h_{\\mathrm{c}}} $$\n其中 $h_{\\mathrm{h}}$ 和 $h_{\\mathrm{c}}$ 是两侧各自的对流系数，$\\delta$ 是壁厚，$k_{\\mathrm{w}}$ 是壁面导热系数。忽略污垢。\n\n算法要求：\n\n- 对出口温度对 $(T_{\\mathrm{h,out}}, T_{\\mathrm{c,out}})$ 实现不动点迭代，每次迭代执行以下操作：\n  - 在特定于侧的 $T_{\\mathrm{mean}}$ 下计算物性。\n  - 计算每侧的 $\\mathrm{Re}$、$\\mathrm{Pr}$、$\\mathrm{Nu}$ 和 $h$，然后计算 $U$。\n  - 根据 $\\varepsilon$、$\\mathrm{NTU}$ 和 $C_r$ 之间的标准关系式，构建 $\\mathrm{NTU} = \\dfrac{U A}{C_{\\min}}$ 并计算逆流换热效率 $\\varepsilon$。\n  - 计算热负荷 $q = \\varepsilon\\,C_{\\min}\\,(T_{\\mathrm{h,in}} - T_{\\mathrm{c,in}})$，并根据能量平衡更新出口温度：$T_{\\mathrm{h,out}} \\leftarrow T_{\\mathrm{h,in}} - q/C_{\\mathrm{h}}$，$T_{\\mathrm{c,out}} \\leftarrow T_{\\mathrm{c,in}} + q/C_{\\mathrm{c}}$。\n  - 应用一个恒定的阻尼因子 $\\theta \\in (0,1]$ 进行松弛以增强鲁棒性：在两侧均应用 $T_{\\mathrm{out}}^{\\mathrm{new}} \\leftarrow \\theta\\,T_{\\mathrm{out}}^{\\mathrm{new}} + (1-\\theta)\\,T_{\\mathrm{out}}^{\\mathrm{old}}$。\n- 当出口温度的最大绝对变化量低于 $10^{-6}\\,\\mathrm{K}$ 的容差，或最多迭代 $200$ 次后停止。使用 $\\theta = 0.6$。\n- 使用从具有恒定 $U$ 和两侧恒定 $C$ 的稳态一维能量平衡推导出的效率、传热单元数与热容率比之间的逆流关系式。\n\n测试套件：\n\n提供一个程序，为以下三个案例中的每一个计算输出四元组 $[T_{\\mathrm{h,out}}, T_{\\mathrm{c,out}}, \\varepsilon, \\mathrm{NTU}]$，结果为浮点数，温度以 $\\mathrm{K}$ 为单位并四舍五入到小数点后六位。最终输出必须是单行文本，包含这三个四元组的 Python 风格列表，例如 $[[\\cdot,\\cdot,\\cdot,\\cdot],[\\cdot,\\cdot,\\cdot,\\cdot],[\\cdot,\\cdot,\\cdot,\\cdot]]$。\n\n- 案例1（通用“理想路径”）：\n  - 热侧：组分 $\\mathrm{N_2}$，$\\dot{m}_{\\mathrm{h}} = 1.5\\,\\mathrm{kg/s}$，$T_{\\mathrm{h,in}} = 700\\,\\mathrm{K}$，$p_{\\mathrm{h}} = 200\\,\\mathrm{kPa}$，$A_{\\mathrm{flow,h}} = 0.025\\,\\mathrm{m^2}$，$D_{\\mathrm{h,h}} = 0.020\\,\\mathrm{m}$。\n  - 冷侧：组分 $\\mathrm{CO_2}$，$\\dot{m}_{\\mathrm{c}} = 2.0\\,\\mathrm{kg/s}$，$T_{\\mathrm{c,in}} = 300\\,\\mathrm{K}$，$p_{\\mathrm{c}} = 200\\,\\mathrm{kPa}$，$A_{\\mathrm{flow,c}} = 0.020\\,\\mathrm{m^2}$，$D_{\\mathrm{h,c}} = 0.015\\,\\mathrm{m}$。\n  - 壁面与面积：$A = 60.0\\,\\mathrm{m^2}$，$\\delta = 0.002\\,\\mathrm{m}$，$k_{\\mathrm{w}} = 16.0\\,\\mathrm{W/(m\\cdot K)}$。\n\n- 案例2（热容率比 $C_r$ 接近1且面积较小）：\n  - 热侧：组分 $\\mathrm{N_2}$，$\\dot{m}_{\\mathrm{h}} = 1.0\\,\\mathrm{kg/s}$，$T_{\\mathrm{h,in}} = 800\\,\\mathrm{K}$，$p_{\\mathrm{h}} = 300\\,\\mathrm{kPa}$，$A_{\\mathrm{flow,h}} = 0.015\\,\\mathrm{m^2}$，$D_{\\mathrm{h,h}} = 0.018\\,\\mathrm{m}$。\n  - 冷侧：组分 $\\mathrm{N_2}$，$\\dot{m}_{\\mathrm{c}} = 1.2\\,\\mathrm{kg/s}$，$T_{\\mathrm{c,in}} = 600\\,\\mathrm{K}$，$p_{\\mathrm{c}} = 300\\,\\mathrm{kPa}$，$A_{\\mathrm{flow,c}} = 0.018\\,\\mathrm{m^2}$，$D_{\\mathrm{h,c}} = 0.018\\,\\mathrm{m}$。\n  - 壁面与面积：$A = 25.0\\,\\mathrm{m^2}$，$\\delta = 0.0015\\,\\mathrm{m}$，$k_{\\mathrm{w}} = 20.0\\,\\mathrm{W/(m\\cdot K)}$。\n\n- 案例3（$C_r$ 较小的边缘情况，冷侧热容率大）：\n  - 热侧：组分 $\\mathrm{CO_2}$，$\\dot{m}_{\\mathrm{h}} = 0.2\\,\\mathrm{kg/s}$，$T_{\\mathrm{h,in}} = 600\\,\\mathrm{K}$，$p_{\\mathrm{h}} = 250\\,\\mathrm{kPa}$，$A_{\\mathrm{flow,h}} = 0.004\\,\\mathrm{m^2}$，$D_{\\mathrm{h,h}} = 0.010\\,\\mathrm{m}$。\n  - 冷侧：组分 $\\mathrm{N_2}$，$\\dot{m}_{\\mathrm{c}} = 5.0\\,\\mathrm{kg/s}$，$T_{\\mathrm{c,in}} = 300\\,\\mathrm{K}$，$p_{\\mathrm{c}} = 300\\,\\mathrm{kPa}$，$A_{\\mathrm{flow,c}} = 0.050\\,\\mathrm{m^2}$，$D_{\\mathrm{h,c}} = 0.030\\,\\mathrm{m}$。\n  - 壁面与面积：$A = 12.0\\,\\mathrm{m^2}$，$\\delta = 0.0010\\,\\mathrm{m}$，$k_{\\mathrm{w}} = 15.0\\,\\mathrm{W/(m\\cdot K)}$。\n\n角度单位不适用。所有温度必须以 $\\mathrm{K}$ 表示。效率 $\\varepsilon$ 和传热单元数 $\\mathrm{NTU}$ 是无量纲的。您的程序必须生成单行输出，其中包含一个用方括号括起来的、由逗号分隔的三个案例结果列表，每个案例结果是一个四元素列表 $[T_{\\mathrm{h,out}}, T_{\\mathrm{c,out}}, \\varepsilon, \\mathrm{NTU}]$，每个浮点数四舍五入到小数点后六位，例如 $[[700.000000,300.000000,0.000000,0.000000],[\\dots],[\\dots]]$。", "solution": "所述问题是计算传热学中一个有科学依据且适定的问题。该问题描述了对一个逆流式气-气换热器的分析，其中流体的热物理性质强烈依赖于温度。流体力学、传热学和热力学之间的这种耦合关系，使得采用数值迭代求解成为必要。问题提供了一整套物理模型、几何数据、运行参数，以及一个用于求解稳态性能的指定迭代算法。所提供的信息是自洽、一致的，并且没有科学或逻辑上的缺陷。因此，可以构建一个有效的解决方案。\n\n所采用的方法是作用于热、冷流体出口温度 $T_{\\mathrm{h,out}}$ 和 $T_{\\mathrm{c,out}}$ 的不动点迭代方案。其核心原理是重复求解方程组，直到出口温度收敛到一个稳定的解。使用了一个欠松弛因子 $\\theta$ 来抑制振荡并提高迭代过程的稳定性。\n\n每个测试案例的算法流程如下：\n\n1.  **初始化**：\n    迭代从出口温度的初始猜测开始。一个鲁棒的选择是将初始出口温度设置为各自的入口温度：$T_{\\mathrm{h,out}}^{(k=0)} = T_{\\mathrm{h,in}}$ 和 $T_{\\mathrm{c,out}}^{(k=0)} = T_{\\mathrm{c,in}}$，其中 $k$ 是迭代索引。迭代计数器设置为 $k=0$。\n\n2.  **迭代循环**：\n    循环持续进行，直到达到收敛或达到指定的最大迭代次数 $200$。收敛的定义是，连续两次迭代中任一出口温度的最大绝对变化量低于 $10^{-6}\\,\\mathrm{K}$ 的容差。在每次迭代 $k$ 中：\n\n    a.  **物性计算**：使用上一次迭代的温度 $T_{\\mathrm{out}}^{(k-1)}$ 计算每股流体的平均主流温度：\n        $$ T_{\\mathrm{h,mean}} = \\frac{1}{2}(T_{\\mathrm{h,in}} + T_{\\mathrm{h,out}}^{(k-1)}) $$\n        $$ T_{\\mathrm{c,mean}} = \\frac{1}{2}(T_{\\mathrm{c,in}} + T_{\\mathrm{c,out}}^{(k-1)}) $$\n        所有随温度变化的物性——密度($\\rho$)、动力粘度($\\mu$)、比热容($c_p$)和普朗特数($\\mathrm{Pr}$)——都使用提供的物理模型在这些平均温度下进行计算：用理想气体定律计算 $\\rho$，用 Sutherland 定律计算 $\\mu$，用 Shomate 多项式计算 $c_p$（从给定的摩尔基准转换为质量基准），用经验函数计算 $\\mathrm{Pr}$。然后根据 Eucken 关系式 $k = \\mu c_p / \\mathrm{Pr}$ 推导出导热系数 $k$。\n\n    b.  **对流传热系数**：对于换热器的每一侧，计算雷诺数($\\mathrm{Re}$)以确定流态：\n        $$ \\mathrm{Re} = \\frac{\\rho V D_{\\mathrm{h}}}{\\mu} = \\frac{\\dot{m} D_{\\mathrm{h}}}{A_{\\mathrm{flow}} \\mu} $$\n        然后根据流态确定努塞尔数($\\mathrm{Nu}$)：\n        - 对于层流($\\mathrm{Re} < 2300$)，使用一个恒定值：$\\mathrm{Nu} = 3.66$。\n        - 对于湍流($\\mathrm{Re} > 3000$)，使用 Gnielinski 关联式，该关联式依赖于由 Petukhov 关联式计算出的摩擦系数 $f$：\n          $$ f = \\left(0.790\\ln \\mathrm{Re} - 1.64\\right)^{-2} $$\n          $$ \\mathrm{Nu} = \\frac{(f/8)(\\mathrm{Re}-1000)\\mathrm{Pr}}{1 + 12.7(f/8)^{1/2}(\\mathrm{Pr}^{2/3}-1)} $$\n        - 对于过渡流($2300 \\le \\mathrm{Re} \\le 3000$)，$\\mathrm{Nu}$ 通过在 $\\mathrm{Re}=2300$ 时的层流值和由 Gnielinski 关联式在 $\\mathrm{Re}=3000$ 时计算出的湍流值之间随 $\\mathrm{Re}$ 进行线性插值得到。\n        最后，计算对流传热系数 $h$：\n        $$ h = \\frac{\\mathrm{Nu} \\cdot k}{D_{\\mathrm{h}}} $$\n\n    c.  **总传热系数($U$)**：总系数基于平壁的串联热阻模型计算，考虑了两侧的对流和壁面的导热：\n        $$ \\frac{1}{U} = \\frac{1}{h_{\\mathrm{h}}} + \\frac{\\delta}{k_{\\mathrm{w}}} + \\frac{1}{h_{\\mathrm{c}}} $$\n\n    d.  **效率-NTU 计算**：热、冷流体的热容率分别为 $C_{\\mathrm{h}} = \\dot{m}_{\\mathrm{h}} c_{p,\\mathrm{h}}$ 和 $C_{\\mathrm{c}} = \\dot{m}_{\\mathrm{c}} c_{p,\\mathrm{c}}$。由此确定 $C_{\\min}$ 和 $C_{\\max}$，并求得热容率比：$C_r = C_{\\min}/C_{\\max}$。然后计算传热单元数($\\mathrm{NTU}$)：\n        $$ \\mathrm{NTU} = \\frac{U A}{C_{\\min}} $$\n        计算逆流配置下的换热器效率 $\\varepsilon$。对于 $C_r \\neq 1$ 的情况：\n        $$ \\varepsilon = \\frac{1 - \\exp[-\\mathrm{NTU}(1 - C_r)]}{1 - C_r \\exp[-\\mathrm{NTU}(1 - C_r)]} $$\n        对于 $C_r = 1$ 的平衡情况：\n        $$ \\varepsilon = \\frac{\\mathrm{NTU}}{1 + \\mathrm{NTU}} $$\n\n    e.  **出口温度更新**：根据效率计算传热速率 $q$：\n        $$ q = \\varepsilon C_{\\min} (T_{\\mathrm{h,in}} - T_{\\mathrm{c,in}}) $$\n        通过每股流体的能量平衡确定新的候选出口温度 $T_{\\mathrm{out}}^{\\mathrm{new}}$：\n        $$ T_{\\mathrm{h,out}}^{\\mathrm{new}} = T_{\\mathrm{h,in}} - \\frac{q}{C_{\\mathrm{h}}} $$\n        $$ T_{\\mathrm{c,out}}^{\\mathrm{new}} = T_{\\mathrm{c,in}} + \\frac{q}{C_{\\mathrm{c}}} $$\n\n    f.  **松弛**：为确保稳定收敛，使用指定的松弛因子 $\\theta = 0.6$ 将新计算的温度与上一次迭代的值相结合：\n        $$ T_{\\mathrm{h,out}}^{(k)} = \\theta T_{\\mathrm{h,out}}^{\\mathrm{new}} + (1-\\theta) T_{\\mathrm{h,out}}^{(k-1)} $$\n        $$ T_{\\mathrm{c,out}}^{(k)} = \\theta T_{\\mathrm{c,out}}^{\\mathrm{new}} + (1-\\theta) T_{\\mathrm{c,out}}^{(k-1)} $$\n        这些值 $T_{\\mathrm{out}}^{(k)}$ 将成为下一次迭代的输入。\n\n3.  **终止**：\n    当 $|\\Delta T_{\\mathrm{h,out}}|$ 和 $|\\Delta T_{\\mathrm{c,out}}|$ 均小于 $10^{-6}\\,\\mathrm{K}$ 时，循环终止。最终收敛的出口温度，以及最后一次迭代得到的相应效率 $\\varepsilon$ 和 $\\mathrm{NTU}$，构成了给定案例的解。\n\n这个结构化的迭代过程正确地模拟了物理上的相互依赖关系，并能稳健地收敛到换热器的工作点。具体实现将把这些步骤封装在一个程序中，该程序处理每个指定的测试案例。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the heat exchanger problem for all test cases.\n    \"\"\"\n    R_u = 8.314462618  # J/(mol.K)\n    \n    SPECIES_DATA = {\n        \"N2\": {\n            \"M\": 0.0280134,  # kg/mol\n            \"sutherland\": {\"T_ref\": 300, \"mu_ref\": 1.663e-5, \"S\": 107},\n            \"shomate\": {\n                \"T_range\": (200, 1000),\n                \"coeffs\": [28.98641, 1.853978, -9.647459, 16.63537, 0.000117]\n            },\n            \"prandtl_func\": lambda T: np.clip(0.72 - 1.0e-4 * (T - 300), 0.64, 0.82)\n        },\n        \"CO2\": {\n            \"M\": 0.0440095,  # kg/mol\n            \"sutherland\": {\"T_ref\": 300, \"mu_ref\": 1.480e-5, \"S\": 240},\n            \"shomate\": {\n                \"T_range\": (298, 1200),\n                \"coeffs\": [24.99735, 55.18696, -33.69137, 7.948387, -0.136638]\n            },\n            \"prandtl_func\": lambda T: np.clip(0.77 - 1.5e-4 * (T - 300), 0.66, 0.85)\n        }\n    }\n\n    test_cases = [\n        {  # Case 1\n            \"hot\": {\"species\": \"N2\", \"mdot\": 1.5, \"T_in\": 700.0, \"p\": 200e3, \"A_flow\": 0.025, \"D_h\": 0.020},\n            \"cold\": {\"species\": \"CO2\", \"mdot\": 2.0, \"T_in\": 300.0, \"p\": 200e3, \"A_flow\": 0.020, \"D_h\": 0.015},\n            \"geom\": {\"A\": 60.0, \"delta\": 0.002, \"k_w\": 16.0}\n        },\n        {  # Case 2\n            \"hot\": {\"species\": \"N2\", \"mdot\": 1.0, \"T_in\": 800.0, \"p\": 300e3, \"A_flow\": 0.015, \"D_h\": 0.018},\n            \"cold\": {\"species\": \"N2\", \"mdot\": 1.2, \"T_in\": 600.0, \"p\": 300e3, \"A_flow\": 0.018, \"D_h\": 0.018},\n            \"geom\": {\"A\": 25.0, \"delta\": 0.0015, \"k_w\": 20.0}\n        },\n        {  # Case 3\n            \"hot\": {\"species\": \"CO2\", \"mdot\": 0.2, \"T_in\": 600.0, \"p\": 250e3, \"A_flow\": 0.004, \"D_h\": 0.010},\n            \"cold\": {\"species\": \"N2\", \"mdot\": 5.0, \"T_in\": 300.0, \"p\": 300e3, \"A_flow\": 0.050, \"D_h\": 0.030},\n            \"geom\": {\"A\": 12.0, \"delta\": 0.001, \"k_w\": 15.0}\n        }\n    ]\n\n    def get_fluid_properties(species_name, T_mean, p):\n        s_data = SPECIES_DATA[species_name]\n        M = s_data[\"M\"]\n        R_spec = R_u / M\n\n        # Viscosity (Sutherland's Law)\n        suth = s_data[\"sutherland\"]\n        mu = suth[\"mu_ref\"] * (T_mean / suth[\"T_ref\"])**1.5 * (suth[\"T_ref\"] + suth[\"S\"]) / (T_mean + suth[\"S\"])\n\n        # Specific heat (Shomate equation)\n        shom = s_data[\"shomate\"]\n        T_clamped = np.clip(T_mean, shom[\"T_range\"][0], shom[\"T_range\"][1])\n        t = T_clamped / 1000.0\n        A, B, C, D, E = shom[\"coeffs\"]\n        cp_molar = A + B*t + C*t**2 + D*t**3 + E/t**2\n        cp = cp_molar / M\n\n        # Prandtl number\n        Pr = s_data[\"prandtl_func\"](T_mean)\n\n        # Density (Ideal Gas Law)\n        rho = p / (R_spec * T_mean)\n        \n        # Thermal conductivity (Eucken relation)\n        k = mu * cp / Pr\n        \n        return rho, mu, cp, Pr, k\n\n    def get_nusselt(Re, Pr):\n        def petukhov_friction(Re_val):\n            return (0.790 * np.log(Re_val) - 1.64)**-2\n\n        def gnielinski_nusselt(Re_val, Pr_val):\n            f = petukhov_friction(Re_val)\n            num = (f / 8) * (Re_val - 1000) * Pr_val\n            den = 1 + 12.7 * (f / 8)**0.5 * (Pr_val**(2/3) - 1)\n            return num / den\n\n        if Re < 2300:\n            return 3.66\n        elif Re <= 3000:\n            Nu_lam_at_2300 = 3.66\n            Nu_turb_at_3000 = gnielinski_nusselt(3000.0, Pr)\n            return np.interp(Re, [2300.0, 3000.0], [Nu_lam_at_2300, Nu_turb_at_3000])\n        else:\n            return gnielinski_nusselt(Re, Pr)\n\n    def compute_case(case_params):\n        hot, cold, geom = case_params[\"hot\"], case_params[\"cold\"], case_params[\"geom\"]\n        \n        T_h_out, T_c_out = hot[\"T_in\"], cold[\"T_in\"] # Initial guess\n\n        max_iter = 200\n        tolerance = 1e-6\n        theta = 0.6  # Relaxation factor\n\n        for _ in range(max_iter):\n            T_h_out_old, T_c_out_old = T_h_out, T_c_out\n            \n            # 1. Property Evaluation\n            T_h_mean = (hot[\"T_in\"] + T_h_out_old) / 2\n            T_c_mean = (cold[\"T_in\"] + T_c_out_old) / 2\n            \n            rho_h, mu_h, cp_h, Pr_h, k_h = get_fluid_properties(hot[\"species\"], T_h_mean, hot[\"p\"])\n            rho_c, mu_c, cp_c, Pr_c, k_c = get_fluid_properties(cold[\"species\"], T_c_mean, cold[\"p\"])\n            \n            # 2. Convective Coefficients\n            Re_h = (hot[\"mdot\"] * hot[\"D_h\"]) / (hot[\"A_flow\"] * mu_h)\n            Re_c = (cold[\"mdot\"] * cold[\"D_h\"]) / (cold[\"A_flow\"] * mu_c)\n            \n            Nu_h = get_nusselt(Re_h, Pr_h)\n            Nu_c = get_nusselt(Re_c, Pr_c)\n            \n            h_h = Nu_h * k_h / hot[\"D_h\"]\n            h_c = Nu_c * k_c / cold[\"D_h\"]\n\n            # 3. Overall Coefficient\n            U = 1.0 / (1.0/h_h + geom[\"delta\"]/geom[\"k_w\"] + 1.0/h_c)\n            \n            # 4. Effectiveness-NTU\n            C_h = hot[\"mdot\"] * cp_h\n            C_c = cold[\"mdot\"] * cp_c\n            \n            C_min = min(C_h, C_c)\n            C_max = max(C_h, C_c)\n            \n            if C_max == 0: continue # Avoid division by zero\n            C_r = C_min / C_max if C_max != 0 else 0\n            \n            NTU = U * geom[\"A\"] / C_min if C_min != 0 else np.inf\n            \n            if abs(C_r - 1.0) < 1e-9:\n                eps = NTU / (1.0 + NTU)\n            else:\n                exp_term = np.exp(-NTU * (1.0 - C_r))\n                eps = (1.0 - exp_term) / (1.0 - C_r * exp_term)\n\n            # 5. Update Temperatures\n            q = eps * C_min * (hot[\"T_in\"] - cold[\"T_in\"])\n            \n            if C_h == 0 or C_c == 0: continue\n            T_h_out_new = hot[\"T_in\"] - q / C_h\n            T_c_out_new = cold[\"T_in\"] + q / C_c\n            \n            # 6. Relaxation\n            T_h_out = theta * T_h_out_new + (1 - theta) * T_h_out_old\n            T_c_out = theta * T_c_out_new + (1 - theta) * T_c_out_old\n\n            # 7. Check Convergence\n            if max(abs(T_h_out - T_h_out_old), abs(T_c_out - T_c_out_old)) < tolerance:\n                break\n        \n        return [T_h_out, T_c_out, eps, NTU]\n\n    results = []\n    for case in test_cases:\n        result = compute_case(case)\n        results.append(result)\n\n    # Format output string\n    formatted_cases = []\n    for res in results:\n        formatted_cases.append(f\"[{res[0]:.6f},{res[1]:.6f},{res[2]:.6f},{res[3]:.6f}]\")\n    \n    final_output_str = f\"[{','.join(formatted_cases)}]\"\n    print(final_output_str)\n\nsolve()\n```", "id": "2492821"}]}