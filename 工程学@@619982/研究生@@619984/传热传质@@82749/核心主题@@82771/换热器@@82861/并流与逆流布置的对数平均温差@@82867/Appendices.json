{"hands_on_practices": [{"introduction": "在工程分析中，量纲一致性是验证物理模型正确性的基本要求。本练习旨在通过检验对数平均温差（LMTD）法的核心方程 $Q=UA\\Delta T_{lm}$，来巩固您对其中每个物理量的理解。通过仔细辨析热流率 $Q$、总传热系数 $U$、换热面积 $A$ 以及对数平均温差 $\\Delta T_{lm}$ 的国际单位制（SI）单位和物理意义，您将为准确应用该方法解决复杂问题奠定坚实的基础 [@problem_id:2501366]。", "id": "2501366", "problem": "一个在稳态下运行的单程换热器在两种不混合的流体流之间进行能量交换。根据对一股流体的微分能量平衡和总传热系数的定义，总传热速率可以建模为总传热系数、适当的换热面积以及两股流体之间的特征平均温差的乘积。在对数平均温差（LMTD）法中，该特征平均值是对数平均温差。仅使用能量、功率、面积、温度和热通量的基本量纲定义，验证该关系式在量纲上是否一致，并确定每个物理量的正确国际单位制（SI）单位。哪个选项正确地陈述了传热速率、总传热系数、传热面积和对数平均温差的SI单位，并正确地描述了对数平均温差因其定义中存在对数而在量纲上的状态？\n\nA. 传热速率 $Q$ 的单位为 $\\mathrm{J}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-1}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m}$，对数平均温差 $\\Delta T_{lm}$ 是无量纲的，因为其定义中出现对数。\n\nB. 传热速率 $Q$ 的单位为 $\\mathrm{W}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-2}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m^{2}}$，对数平均温差 $\\Delta T_{lm}$ 的单位为 $\\mathrm{K}$；其定义中的对数作用于一个无量纲的比值，因此 $\\Delta T_{lm}$ 保留了温度单位，并且 $U$ 的单位不因选择内侧或外侧面积为基准而改变。\n\nC. 传热速率 $Q$ 的单位为 $\\mathrm{J\\,s^{-1}}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-1}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m}$，对数平均温差 $\\Delta T_{lm}$ 的单位为 $\\mathrm{K}$；此外，$U$ 的单位取决于使用的是内侧还是外侧面积基准。\n\nD. 传热速率 $Q$ 的单位为 $\\mathrm{W}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-2}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m^{2}}$，对数平均温差 $\\Delta T_{lm}$ 是无量纲的，因为它是温差比率的平均值。", "solution": "在尝试求解之前，对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 系统是一个处于稳态的单程换热器。\n- 总传热速率 $Q$ 被建模为总传热系数 $U$、换热面积 $A$ 和一个特征平均温差的乘积。\n- 该特征平均温差是对数平均温差 $\\Delta T_{lm}$。\n- 因此，控制关系式为 $Q = U A \\Delta T_{lm}$。\n- 任务是：\n    1. 验证该关系式的量纲一致性。\n    2. 确定 $Q$、$U$、$A$ 和 $\\Delta T_{lm}$ 的正确国际单位制（SI）单位。\n    3. 描述 $\\Delta T_{lm}$ 因其定义中存在对数而在量纲上的状态。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题陈述具有科学依据、提法得当且客观。它基于传热学的基本原理，特别是对数平均温差（LMTD）法，这是工程热力学与传热学中的一个标准课题。问题描述清晰、自洽，并且没有违反任何物理定律或数学原理。它要求进行标准的量纲分析，这是一项可解且有意义的任务。未发现任何缺陷。\n\n**步骤3：结论与行动**\n问题有效。将进行完整的推导和分析。\n\n**单位推导与量纲分析**\n\n控制传热的关系式为：\n$$Q = U A \\Delta T_{lm}$$\n\n我们将根据基本定义确定每一项的SI单位。\n\n1.  **传热速率 ($Q$)**: “速率”一词意味着该物理量是单位时间内的能量。\n    - 在SI单位制中，能量以焦耳（$J$）为单位。\n    - 时间以秒（$s$）为单位。\n    - 因此，传热速率的单位是焦耳每秒（$J \\cdot s^{-1}$）。\n    - 单位 $J \\cdot s^{-1}$ 被定义为瓦特（$W$）。\n    - 所以，$Q$ 的SI单位是瓦特（$W$）。其量纲为功率，$[P] = [M][L]^2[T]^{-3}$。\n\n2.  **传热面积 ($A$)**: 这是进行热交换的表面积。\n    - 在SI单位制中，面积是二维表面的度量。\n    - 长度的单位是米（$m$）。\n    - 因此，面积的SI单位是平方米（$m^2$）。其量纲为 $[L]^2$。\n\n3.  **对数平均温差 ($\\Delta T_{lm}$)**: 该量定义为：\n    $$\\Delta T_{lm} = \\frac{\\Delta T_1 - \\Delta T_2}{\\ln\\left(\\frac{\\Delta T_1}{\\Delta T_2}\\right)}$$\n    其中 $\\Delta T_1$ 和 $\\Delta T_2$ 是换热器两端热流体和冷流体之间的温差。\n    - $\\Delta T_1$ 和 $\\Delta T_2$ 是温差。热力学温度的SI单位是开尔文（$K$）。温差的单位也是开尔文。\n    - 因此，分子 $\\Delta T_1 - \\Delta T_2$ 的单位是开尔文（$K$）。\n    - 自然对数函数 $\\ln(\\dots)$ 的参数必须是一个无量纲的量。这里，参数是比值 $\\frac{\\Delta T_1}{\\Delta T_2}$。由于 $\\Delta T_1$ 和 $\\Delta T_2$ 的单位都是开尔文，它们的比值是无量纲的：$\\frac{[K]}{[K]} = 1$。\n    - 当 $x$ 是无量纲的时，函数 $\\ln(x)$ 的结果也是一个无量纲数。\n    - 因此，$\\Delta T_{lm}$ 的单位是分子的单位除以分母的单位：$\\frac{[K]}{[\\text{无量纲}]} = [K]$。\n    - $\\Delta T_{lm}$ 的SI单位是开尔文（$K$）。对数的存在并不会使该量变为无量纲；相反，对数函数必须作用于一个无量纲的参数，其输出也是无量纲的，从而使分子的单位保持不变。\n\n4.  **总传热系数 ($U$)**: $U$ 的单位可以通过重排控制方程来推导：\n    $$U = \\frac{Q}{A \\Delta T_{lm}}$$\n    代入其他量的SI单位：\n    - $Q$ 的单位: $W$\n    - $A$ 的单位: $m^2$\n    - $\\Delta T_{lm}$ 的单位: $K$\n    - 因此，$U$ 的SI单位是 $\\frac{W}{m^2 \\cdot K}$，写作 $W \\cdot m^{-2} \\cdot K^{-1}$。\n    - 原始方程 $Q = U A \\Delta T_{lm}$ 的量纲一致性得到验证：\n      $$[W] = \\left[\\frac{W}{m^2 \\cdot K}\\right] \\cdot [m^2] \\cdot [K]$$\n      $$[W] = [W]$$\n      该关系式在量纲上是一致的。\n\n**逐项分析**\n\nA. 传热速率 $Q$ 的单位为 $\\mathrm{J}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-1}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m}$，对数平均温差 $\\Delta T_{lm}$ 是无量纲的，因为其定义中出现对数。\n- $Q$ 的单位为 $J$：错误。$Q$ 是速率（功率），而不是能量。单位应为 $W$。\n- $U$ 的单位为 $W \\cdot m^{-1} \\cdot K^{-1}$：错误。面积的单位是 $m^2$，而不是 $m$，所以 $U$ 的单位是 $W \\cdot m^{-2} \\cdot K^{-1}$。\n- $A$ 的单位为 $m$：错误。面积的单位是 $m^2$。\n- $\\Delta T_{lm}$ 是无量纲的：错误。如推导所示，它具有温度单位（$K$）。\n**结论：错误。**\n\nB. 传热速率 $Q$ 的单位为 $\\mathrm{W}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-2}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m^{2}}$，对数平均温差 $\\Delta T_{lm}$ 的单位为 $\\mathrm{K}$；其定义中的对数作用于一个无量纲的比值，因此 $\\Delta T_{lm}$ 保留了温度单位，并且 $U$ 的单位不因选择内侧或外侧面积为基准而改变。\n- $Q$ 的单位为 $W$：正确。\n- $U$ 的单位为 $W \\cdot m^{-2} \\cdot K^{-1}$：正确。\n- $A$ 的单位为 $m^2$：正确。\n- $\\Delta T_{lm}$ 的单位为 $K$：正确。所提供的理由也完全正确；对数作用于一个无量纲的比值。\n- “并且 $U$ 的单位不因选择内侧或外侧面积为基准而改变”：正确。总传热系数通常基于换热器中管子的内表面积 ($A_i$) 或外表面积 ($A_o$) 来指定。乘积 $U \\cdot A$ 必须是恒定的，因此 $U_i A_i = U_o A_o$。如果 $A_i \\neq A_o$，那么 $U$ 的数值 *大小* 将根据参考面积而改变 ($U_i \\neq U_o$)。然而，无论以哪个面积为基准，$U$ 的 *单位* 始终是 $W \\cdot m^{-2} \\cdot K^{-1}$。该陈述是关于单位，而非数值大小。\n**结论：正确。**\n\nC. 传热速率 $Q$ 的单位为 $\\mathrm{J\\,s^{-1}}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-1}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m}$，对数平均温差 $\\Delta T_{lm}$ 的单位为 $\\mathrm{K}$；此外，$U$ 的单位取决于使用的是内侧还是外侧面积基准。\n- $Q$ 的单位为 $J \\cdot s^{-1}$：正确，因为这是瓦特（$W$）的定义。\n- $U$ 的单位为 $W \\cdot m^{-1} \\cdot K^{-1}$：错误。这意味着面积的单位是长度，这是错误的。\n- $A$ 的单位为 $m$：错误。面积的单位是 $m^2$。\n- “此外，$U$ 的单位取决于使用的是内侧还是外侧面积基准”：错误。如选项B中所解释，单位是不变的；只有数值大小取决于基准。\n**结论：错误。**\n\nD. 传热速率 $Q$ 的单位为 $\\mathrm{W}$，总传热系数 $U$ 的单位为 $\\mathrm{W\\,m^{-2}\\,K^{-1}}$，面积 $A$ 的单位为 $\\mathrm{m^{2}}$，对数平均温差 $\\Delta T_{lm}$ 是无量纲的，因为它是温差比率的平均值。\n- $Q$ 的单位为 $W$：正确。\n- $U$ 的单位为 $W \\cdot m^{-2} \\cdot K^{-1}$：正确。\n- $A$ 的单位为 $m^2$：正确。\n- $\\Delta T_{lm}$ 是无量纲的：错误。它具有温度单位（$K$）。给出的理由也是错误的，并且不合逻辑。它是一个涉及对数的比值，而不是比率的平均值。\n**结论：错误。**", "answer": "$$\\boxed{B}$$"}, {"introduction": "掌握了基本方程后，下一步是将其应用于实际的换热器设计与可行性分析中。本练习将引导您运用能量守恒定律和热力学第二定律，评估一个给定的换热任务是否可以通过平行流布置实现 [@problem_id:2501368]。通过计算出口温度并检查是否存在“温度交叉”这一违背物理规律的现象，您将深刻理解为何逆流布置在热力学上通常更具优势，并学会如何为可行的设计方案确定必要的换热器尺寸。", "id": "2501368", "problem": "一个单程管式换热器用于使用液态水冷却热油流，其中轴向传导可忽略不计，物性恒定，且无热量损失到周围环境。热油以温度 $T_{h,\\mathrm{in}} = 140\\,^{\\circ}\\mathrm{C}$ 进入，热容率 $C_{h} = 4\\,\\mathrm{kW/K}$；水以温度 $T_{c,\\mathrm{in}} = 20\\,^{\\circ}\\mathrm{C}$ 进入，热容率 $C_{c} = 6\\,\\mathrm{kW/K}$。工艺要求热油出口温度 $T_{h,\\mathrm{out}} = 50\\,^{\\circ}\\mathrm{C}$。设计团队提出了并流布置方案。\n\n仅使用基本原理——即稳态能量平衡、给定流体布置的端点温差定义，以及热力学第二定律关于显热换热器局部温度驱动力符号不得改变的要求——判断所提出的并流设计方案是否可行，即可行性在于对数平均温差 (LMTD) 保持为非负实数。如果所提出的布置方案不可行，请确定一个能够实现所述目标的可行替代方案（如有），并确定在稳态下满足该热负荷所需的相应最小总热导 $U A$。\n\n假设总传热系数 $U$ 和换热面积 $A$ 是均匀的，并且总传热速率通过标准的LMTD方法与对数平均温差相关联。\n\n选择所有正确的陈述：\n\n- A. 并流设计是可行的；对数平均温差为正，且所需的 $U A$ 等于 $8.31\\,\\mathrm{kW/K}$。\n- B. 并流设计是不可行的，因为出口端温差将为负，导致对数平均温差为非实数（违反热力学第二定律）。\n- C. 对于所述目标，并流和逆流布置都是可行的，且所需的 $U A$ 相同。\n- D. 逆流布置是可行的；所需的 $U A$ 约等于 $8.31\\,\\mathrm{kW/K}$。", "solution": "首先将对问题陈述进行科学性和逻辑完整性验证。\n\n### 步骤 1：提取已知条件\n- 热流体入口温度：$T_{h,\\mathrm{in}} = 140\\,^{\\circ}\\mathrm{C}$\n- 热流体热容率：$C_{h} = 4\\,\\mathrm{kW/K}$\n- 冷流体入口温度：$T_{c,\\mathrm{in}} = 20\\,^{\\circ}\\mathrm{C}$\n- 冷流体热容率：$C_{c} = 6\\,\\mathrm{kW/K}$\n- 要求的热流体出口温度：$T_{h,\\mathrm{out}} = 50\\,^{\\circ}\\mathrm{C}$\n- 提议的布置方式：并流。\n- 假设：单程管式换热器，轴向传导可忽略，物性恒定，无热量损失到周围环境，总传热系数 $U$ 和面积 $A$ 均匀。\n- 分析要求：使用基本原理（包括第二定律约束）确定并流设计的可行性。如果不可行，则评估一个可行的替代方案及其所需的总热导 $UA$。\n\n### 步骤 2：使用提取的已知条件进行验证\n该问题具有科学依据，因为它涉及基于热力学第一和第二定律的标准热工分析。问题陈述清晰，提供了足够的数据来进行所需的可行性分析和计算。语言客观精确。物理数值是现实的。没有矛盾或含糊之处。\n\n### 步骤 3：结论与行动\n问题有效。将继续进行求解。\n\n### 推导\n\n分析始于稳态能量平衡，这是热力学第一定律的应用。由于热损失可忽略不计，从热流体传递的热量必须等于冷流体吸收的热量。\n\n总传热速率 $\\dot{Q}$ 由热流体的指定条件确定：\n$$ \\dot{Q} = C_{h} (T_{h,\\mathrm{in}} - T_{h,\\mathrm{out}}) $$\n代入给定值：\n$$ \\dot{Q} = (4\\,\\mathrm{kW/K}) \\times (140\\,^{\\circ}\\mathrm{C} - 50\\,^{\\circ}\\mathrm{C}) = 4 \\times 90 \\,\\mathrm{kW} = 360\\,\\mathrm{kW} $$\n\n利用此热量速率，我们可以通过冷流的能量平衡确定冷流体的出口温度 $T_{c,\\mathrm{out}}$：\n$$ \\dot{Q} = C_{c} (T_{c,\\mathrm{out}} - T_{c,\\mathrm{in}}) $$\n$$ 360\\,\\mathrm{kW} = (6\\,\\mathrm{kW/K}) \\times (T_{c,\\mathrm{out}} - 20\\,^{\\circ}\\mathrm{C}) $$\n求解 $T_{c,\\mathrm{out}}$：\n$$ T_{c,\\mathrm{out}} - 20\\,^{\\circ}\\mathrm{C} = \\frac{360\\,\\mathrm{kW}}{6\\,\\mathrm{kW/K}} = 60\\,\\mathrm{K} = 60\\,^{\\circ}\\mathrm{C} $$\n$$ T_{c,\\mathrm{out}} = 20\\,^{\\circ}\\mathrm{C} + 60\\,^{\\circ}\\mathrm{C} = 80\\,^{\\circ}\\mathrm{C} $$\n\n**并流布置的可行性**\n\n现在我们评估所提出的并流布置方案的可行性。在并流换热器中，两种流体在同一端（我们称之为“1”端）进入，在另一端（“2”端）流出。为了使换热器内每一点都有热量从热流体传递到冷流体，热力学第二定律要求对于所有位置 $x$ 都有 $T_h(x) \\ge T_c(x)$。这也必须在边界上成立。\n\n在入口（1端）：\n$T_{h,1} = T_{h,\\mathrm{in}} = 140\\,^{\\circ}\\mathrm{C}$\n$T_{c,1} = T_{c,\\mathrm{in}} = 20\\,^{\\circ}\\mathrm{C}$\n温差为 $\\Delta T_1 = T_{h,1} - T_{c,1} = 140 - 20 = 120\\,^{\\circ}\\mathrm{C}$。此处，$T_h > T_c$，是有效的。\n\n在出口（2端）：\n$T_{h,2} = T_{h,\\mathrm{out}} = 50\\,^{\\circ}\\mathrm{C}$\n$T_{c,2} = T_{c,\\mathrm{out}} = 80\\,^{\\circ}\\mathrm{C}$\n温差为 $\\Delta T_2 = T_{h,2} - T_{c,2} = 50 - 80 = -30\\,^{\\circ}\\mathrm{C}$。\n\n热流体的出口温度（$50\\,^{\\circ}\\mathrm{C}$）低于冷流体的出口温度（$80\\,^{\\circ}\\mathrm{C}$）。这种情况在并流布置中是物理上不可能的，因为它需要在出口附近发生从较冷流体到较热流体的传热，这直接违反了热力学第二定律。这种情况被称为“温度交叉”，使设计方案不可行。因此，该配置的对数平均温差 (LMTD)，由公式 $\\Delta T_{\\mathrm{lm}} = (\\Delta T_1 - \\Delta T_2) / \\ln(\\Delta T_1 / \\Delta T_2)$ 给出，将涉及一个负数的对数（$\\ln(120/(-30))$），这不是一个实数。因此，并流设计是不可行的。\n\n**逆流布置的可行性**\n\n我们现在研究替代的逆流布置方案。在这种配置中，流体从相对的两端进入。假设“1”端是热流体入口和冷流体出口，“2”端是热流体出口和冷流体入口。\n\n在1端：\n$T_{h,1} = T_{h,\\mathrm{in}} = 140\\,^{\\circ}\\mathrm{C}$\n$T_{c,1} = T_{c,\\mathrm{out}} = 80\\,^{\\circ}\\mathrm{C}$\n温差为 $\\Delta T_1 = T_{h,1} - T_{c,1} = 140 - 80 = 60\\,^{\\circ}\\mathrm{C}$。\n\n在2端：\n$T_{h,2} = T_{h,\\mathrm{out}} = 50\\,^{\\circ}\\mathrm{C}$\n$T_{c,2} = T_{c,\\mathrm{in}} = 20\\,^{\\circ}\\mathrm{C}$\n温差为 $\\Delta T_2 = T_{h,2} - T_{c,2} = 50 - 20 = 30\\,^{\\circ}\\mathrm{C}$。\n\n两个端点的温差都为正。对于一个物性恒定的逆流换热器，如果 $\\Delta T_1 > 0$ 和 $\\Delta T_2 > 0$ 同时成立，那么整个换热器内的局部温差 $T_h(x) - T_c(x)$ 将始终为正。因此，逆流布置在热力学上是可行的。\n\n现在，我们计算逆流情况下的 LMTD：\n$$ \\Delta T_{\\mathrm{lm, counter}} = \\frac{\\Delta T_1 - \\Delta T_2}{\\ln(\\Delta T_1 / \\Delta T_2)} = \\frac{60\\,\\mathrm{K} - 30\\,\\mathrm{K}}{\\ln(60/30)} = \\frac{30\\,\\mathrm{K}}{\\ln(2)} $$\n使用 $\\ln(2) \\approx 0.693147$：\n$$ \\Delta T_{\\mathrm{lm, counter}} \\approx \\frac{30}{0.693147} \\,\\mathrm{K} \\approx 43.28\\,\\mathrm{K} $$\n\n在确定了 LMTD 后，可以从基本换热器方程 $\\dot{Q} = (UA) \\Delta T_{\\mathrm{lm}}$ 计算所需的总热导 $UA$：\n$$ UA = \\frac{\\dot{Q}}{\\Delta T_{\\mathrm{lm, counter}}} = \\frac{360\\,\\mathrm{kW}}{30/\\ln(2)\\,\\mathrm{K}} = \\frac{360}{30} \\ln(2) \\,\\mathrm{kW/K} = 12 \\ln(2) \\,\\mathrm{kW/K} $$\n$$ UA \\approx 12 \\times 0.693147 \\,\\mathrm{kW/K} \\approx 8.31776\\,\\mathrm{kW/K} $$\n该值约等于 $8.31\\,\\mathrm{kW/K}$。\n\n### 逐项分析\n\n- **A. 并流设计是可行的；对数平均温差为正，且所需的 $U A$ 等于 $8.31\\,\\mathrm{kW/K}$。**\n并流设计因出现温度交叉而被证明在热力学上是不可行的，这违反了第二定律。因此，该陈述是**错误的**。\n\n- **B. 并流设计是不可行的，因为出口端温差将为负，导致对数平均温差为非实数（违反热力学第二定律）。**\n我们的分析表明，对于并流布置，出口温差为 $T_{h,\\mathrm{out}} - T_{c,\\mathrm{out}} = 50\\,^{\\circ}\\mathrm{C} - 80\\,^{\\circ}\\mathrm{C} = -30\\,^{\\circ}\\mathrm{C}$。负温差意味着在显热换热器中违反了热力学第二定律。LMTD 计算将涉及一个负数的对数，这是一个非实数（复数）值。该陈述是严格正确的。结论是**正确的**。\n\n- **C. 对于所述目标，并流和逆流布置都是可行的，且所需的 $UA$ 相同。**\n并流布置是不可行的。这直接证伪了该陈述。此外，即使两者都可行，逆流的 LMTD 总是大于或等于并流的 LMTD，这意味着逆流情况下所需的 $UA$ 会更小，而不是相同。该陈述是**错误的**。\n\n- **D. 逆流布置是可行的；所需的 $U A$ 约等于 $8.31\\,\\mathrm{kW/K}$。**\n我们的分析证实了逆流布置在热力学上是可行的。所需总热导的计算得出 $UA = 12 \\ln(2)\\,\\mathrm{kW/K}$，约等于 $8.318\\,\\mathrm{kW/K}$。陈述中给出的值 $8.31\\,\\mathrm{kW/K}$ 是一个正确的近似值。该陈述与从基本原理出发的推导完全一致。结论是**正确的**。", "answer": "$$\\boxed{BD}$$"}, {"introduction": "在现代工程实践中，许多复杂问题需要通过数值方法求解。本练习是理论与计算的终极结合，要求您构建一个能够预测换热器性能的数值工具 [@problem_id:2501348]。您将把能量守恒方程与对数平均温差的定义耦合起来，形成一个非线性方程组，并运用牛顿法（Newton's method）这一强大的迭代算法来求解未知的出口温度，这不仅能锻炼您的编程和数值分析能力，更让您体验到如何将基础科学原理转化为实用的工程设计软件。", "id": "2501348", "problem": "您将开发一个程序，用于计算双流换热器中的两个未知出口温度，一个用于热流体，一个用于冷流体，并适用于并流和逆流两种布置方式。计算必须通过使用牛顿法求解一个耦合非线性系统来执行。这种非线性耦合源于同时对每个流体强制执行能量守恒，以及根据对数平均温差定义传热速率。您的程序必须使用以下基于物理的模型，该模型源自基本能量平衡和对数平均温差的定义，不得使用简化关联式或预先制表的效能公式。\n\n未知数为热流体出口温度 $T_{h,o}$ 和冷流体出口温度 $T_{c,o}$。给定条件为热流体入口温度 $T_{h,i}$、冷流体入口温度 $T_{c,i}$、总传热系数 $U$、传热面积 $A$ 以及热流体和冷流体的热容率 $C_{h}$ 和 $C_{c}$。使用基本能量平衡和对数平均温差的定义，其中传热速率定义为 $Q = U A \\Delta T_{lm}$，并且 $Q = C_{h} (T_{h,i} - T_{h,o}) = C_{c} (T_{c,o} - T_{c,i})$。对于具有恒定 $U$ 和 $A$ 的单程换热器，对数平均温差使用两端的温差。对于并流布置：\n- $\\Delta T_{1} = T_{h,i} - T_{c,i}$，\n- $\\Delta T_{2} = T_{h,o} - T_{c,o}$。\n对于逆流布置：\n- $\\Delta T_{1} = T_{h,i} - T_{c,o}$，\n- $\\Delta T_{2} = T_{h,o} - T_{c,i}$。\n对数平均温差在两端温差严格为正（$\\Delta T_{1} > 0$ 和 $\\Delta T_{2} > 0$）的情况下定义为\n$$\n\\Delta T_{lm} = \\frac{\\Delta T_{1} - \\Delta T_{2}}{\\ln\\left(\\frac{\\Delta T_{1}}{\\Delta T_{2}}\\right)}。\n$$\n当 $\\Delta T_{1}$ 和 $\\Delta T_{2}$ 近似相等时，您的实现必须使用由连续性良好定义的极限值，即当 $\\Delta T_{2} \\to \\Delta T_{1}$ 时 $\\Delta T_{lm} \\to \\Delta T_{1}$，并且必须使用一致的极限导数，以保持数值稳定性。\n\n您的牛顿迭代必须通过对两个流向的能量平衡强制使用一个由 $U A \\Delta T_{lm}$ 计算出的一致传热速率 $Q$，来求解未知数 $T_{h,o}$ 和 $T_{c,o}$ 的耦合系统。您必须解析地计算雅可比矩阵，包括 $\\Delta T_{lm}$ 相对于未知出口温度的偏导数，并使用全局化策略（例如，回溯线搜索）来强制执行物理约束，确保两端温差保持严格为正。当残差向量的范数和牛顿步长足够小时，迭代应终止；请明确说明并实现您的收敛容差。\n\n所有计算必须使用以下单位：\n- $U$ 的单位为 $\\mathrm{W\\,m^{-2}\\,K^{-1}}$，\n- $A$ 的单位为 $\\mathrm{m^{2}}$，\n- $C_h$ 和 $C_c$ 的单位为 $\\mathrm{W\\,K^{-1}}$，\n- 温度单位为 $\\mathrm{^{\\circ}C}$，\n- 传热速率 $Q$ 的单位为 $\\mathrm{W}$。\n报告 $T_{h,o}$ 和 $T_{c,o}$，单位为 $\\mathrm{^{\\circ}C}$，四舍五入到小数点后六位。\n\n测试套件和要求输出：\n- 实现您的求解器，并对以下五个案例进行评估。每个案例以元组 $(\\text{arrangement}, U, A, C_h, C_c, T_{h,i}, T_{c,i})$ 的形式给出，其中 $\\text{arrangement}$ 是字符串 \"parallel\" 或 \"counter\"。\n    1. $(\\text{\"parallel\"},\\, 400.0,\\, 20.0,\\, 5000.0,\\, 8000.0,\\, 120.0,\\, 20.0)$\n    2. $(\\text{\"counter\"},\\, 300.0,\\, 30.0,\\, 6000.0,\\, 6000.0,\\, 150.0,\\, 50.0)$\n    3. $(\\text{\"parallel\"},\\, 50.0,\\, 0.5,\\, 4000.0,\\, 6000.0,\\, 90.0,\\, 30.0)$\n    4. $(\\text{\"counter\"},\\, 1000.0,\\, 100.0,\\, 2000.0,\\, 6000.0,\\, 200.0,\\, 40.0)$\n    5. $(\\text{\"parallel\"},\\, 150.0,\\, 10.0,\\, 5000.0,\\, 5000.0,\\, 170.0,\\, 70.0)$\n- 您的程序必须生成单行输出，其中包含每个案例的出口温度列表，格式为逗号分隔的数对列表，每个数对是两个温度 $[T_{h,o}, T_{c,o}]$，四舍五入到六位小数。确切要求的格式是：\n\"[ [Th1,Tc1],[Th2,Tc2],[Th3,Tc3],[Th4,Tc4],[Th5,Tc5] ]\"\n其中每个 $T$ 是一个小数点后有六位数字的十进制数（无单位，无多余空格）。", "solution": "我们通过从第一性原理出发，推导并实现一个稳健的牛顿法来计算 $T_{h,o}$ 和 $T_{c,o}$。其基本依据包括流向能量平衡和对数平均温差的定义。\n\n1. 基本控制关系。对于一个总传热系数 $U$ 和面积 $A$ 恒定的单程换热器，假设轴向热传导可忽略不计且无相变，传热速率 $Q$ 满足每个流体的能量守恒：\n$$\nQ = C_h \\left(T_{h,i} - T_{h,o}\\right) = C_c \\left(T_{c,o} - T_{c,i}\\right).\n$$\n根据终端点处严格为正的端点温差的对数平均温差定义，\n$$\nQ = U A \\Delta T_{lm}, \\quad \\Delta T_{lm} = \\frac{\\Delta T_1 - \\Delta T_2}{\\ln\\left(\\frac{\\Delta T_1}{\\Delta T_2}\\right)}.\n$$\n对于并流，\n$$\n\\Delta T_1 = T_{h,i} - T_{c,i}, \\quad \\Delta T_2 = T_{h,o} - T_{c,o},\n$$\n对于逆流，\n$$\n\\Delta T_1 = T_{h,i} - T_{c,o}, \\quad \\Delta T_2 = T_{h,o} - T_{c,i}.\n$$\n这些关系将两个未知的出口温度与定义对数平均温差的端点温差耦合起来。\n\n2. 非线性系统构建。未知向量为\n$$\n\\mathbf{x} =\n\\begin{bmatrix}\nT_{h,o} \\\\ T_{c,o}\n\\end{bmatrix}.\n$$\n将对数平均温差定义为函数 $L(\\Delta T_1, \\Delta T_2)$，并定义 $Q(\\mathbf{x}) = U A \\, L(\\Delta T_1(\\mathbf{x}), \\Delta T_2(\\mathbf{x}))$。两个残差方程通过使用相同的 $Q$ 来强制每个流体满足能量守恒：\n$$\nF_1(\\mathbf{x}) = C_h \\left(T_{h,i} - T_{h,o}\\right) - Q(\\mathbf{x}) = 0,\n$$\n$$\nF_2(\\mathbf{x}) = C_c \\left(T_{c,o} - T_{c,i}\\right) - Q(\\mathbf{x}) = 0.\n$$\n如果我们强制端点温差为正，求解 $\\mathbf{F}(\\mathbf{x}) = \\mathbf{0}$ 将得到物理上允许的出口温度：对于并流，除了 $\\Delta T_1>0$ 外，还需 $\\Delta T_2 = T_{h,o} - T_{c,o} > 0$；对于逆流，我们要求 $\\Delta T_1 = T_{h,i} - T_{c,o} > 0$ 和 $\\Delta T_2 = T_{h,o} - T_{c,i} > 0$。此外，对于无内热源的显热交换，物理边界要求 $T_{h,i} \\ge T_{h,o} \\ge T_{c,i}$ 和 $T_{h,i} \\ge T_{c,o} \\ge T_{c,i}$。\n\n3. 对数平均温差及其导数。设 $f(a,b) = \\dfrac{a-b}{\\ln\\left(a/b\\right)}$，其中 $a>0$, $b>0$, $a\\neq b$。其偏导数可通过商法则，利用 $\\partial \\ln(a/b)/\\partial a = 1/a$ 和 $\\partial \\ln(a/b)/\\partial b = -1/b$ 求得：\n$$\n\\frac{\\partial f}{\\partial a} = \\frac{\\ln\\left(\\frac{a}{b}\\right) - \\frac{a-b}{a}}{\\left[\\ln\\left(\\frac{a}{b}\\right)\\right]^2}, \\qquad\n\\frac{\\partial f}{\\partial b} = \\frac{-\\ln\\left(\\frac{a}{b}\\right) + \\frac{a-b}{b}}{\\left[\\ln\\left(\\frac{a}{b}\\right)\\right]^2}.\n$$\n当 $a \\to b$ 时，我们使用极限值。二阶展开显示\n$$\n\\lim_{a\\to b} f(a,b) = a, \\qquad \\lim_{a\\to b} \\frac{\\partial f}{\\partial a} = \\frac{1}{2}, \\qquad \\lim_{a\\to b} \\frac{\\partial f}{\\partial b} = \\frac{1}{2}.\n$$\n在实现中必须使用这些极限，以避免当 $|a-b|$ 相对于 $\\max(a,b)$ 很小时出现数值精度损失。\n\n对于并流，\n$$\na = \\Delta T_1 = T_{h,i} - T_{c,i}, \\quad b = \\Delta T_2 = T_{h,o} - T_{c,o},\n$$\n因此\n$$\n\\frac{\\partial \\Delta T_{lm}}{\\partial T_{h,o}} = \\frac{\\partial f}{\\partial b}\\cdot \\frac{\\partial b}{\\partial T_{h,o}} = \\frac{\\partial f}{\\partial b} \\cdot 1, \\qquad\n\\frac{\\partial \\Delta T_{lm}}{\\partial T_{c,o}} = \\frac{\\partial f}{\\partial b}\\cdot \\frac{\\partial b}{\\partial T_{c,o}} = \\frac{\\partial f}{\\partial b} \\cdot (-1).\n$$\n对于逆流，\n$$\na = \\Delta T_1 = T_{h,i} - T_{c,o}, \\quad b = \\Delta T_2 = T_{h,o} - T_{c,i},\n$$\n因此\n$$\n\\frac{\\partial \\Delta T_{lm}}{\\partial T_{h,o}} = \\frac{\\partial f}{\\partial b}\\cdot 1, \\qquad\n\\frac{\\partial \\Delta T_{lm}}{\\partial T_{c,o}} = \\frac{\\partial f}{\\partial a}\\cdot \\frac{\\partial a}{\\partial T_{c,o}} = \\frac{\\partial f}{\\partial a} \\cdot (-1).\n$$\n\n4. 牛顿迭代。设 $\\mathbf{F}(\\mathbf{x})$如上文所述。雅可比矩阵为\n$$\nJ(\\mathbf{x}) =\n\\begin{bmatrix}\n\\frac{\\partial F_1}{\\partial T_{h,o}} & \\frac{\\partial F_1}{\\partial T_{c,o}}\\\\\n\\frac{\\partial F_2}{\\partial T_{h,o}} & \\frac{\\partial F_2}{\\partial T_{c,o}}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n- C_h - U A \\frac{\\partial \\Delta T_{lm}}{\\partial T_{h,o}} & - U A \\frac{\\partial \\Delta T_{lm}}{\\partial T_{c,o}}\\\\\n- U A \\frac{\\partial \\Delta T_{lm}}{\\partial T_{h,o}} & \\phantom{-} C_c - U A \\frac{\\partial \\Delta T_{lm}}{\\partial T_{c,o}}\n\\end{bmatrix}.\n$$\n牛顿法更新\n$$\n\\mathbf{x}_{k+1} = \\mathbf{x}_k + \\alpha_k \\Delta \\mathbf{x}_k, \\quad \\text{其中} \\quad J(\\mathbf{x}_k)\\,\\Delta \\mathbf{x}_k = -\\mathbf{F}(\\mathbf{x}_k),\n$$\n其中全局化因子 $0 < \\alpha_k \\le 1$ 通过回溯线搜索选取，以确保新的迭代点满足物理可行性（端点温差的严格正性）并减小残差的范数，例如欧几里得范数 $\\|\\mathbf{F}\\|_2$。\n\n5. 收敛标准。当以下两条均满足时终止：\n- $\\|\\mathbf{F}(\\mathbf{x}_k)\\|_2 \\le \\varepsilon_{res}$,\n- $\\|\\Delta \\mathbf{x}_k\\|_2 \\le \\varepsilon_{step}$.\n一个稳健的选择是 $\\varepsilon_{res} = 10^{-9}$（单位 W）和 $\\varepsilon_{step} = 10^{-10}$（单位 K）。设置最大迭代次数（例如 50），如果在此限制内未收敛，则声明失败。回溯法以几何级数方式减小 $\\alpha_k$（例如，重复乘以 1/2），直到满足可行性和充分下降条件。如果回溯法将 $\\alpha_k$ 减小到最小阈值（例如 $10^{-10}$）以下，则终止并报告失败；但是，所提供的测试套件经过选择以避免此类失败。\n\n6. 初始化。一个物理上可行的初始猜测能确保可行性：选择一个保守的初始传热速率\n$$\nQ_0 = \\frac{1}{2}\\,\\min\\left( U A \\, (T_{h,i} - T_{c,i}),\\, \\min(C_h,C_c)\\,(T_{h,i} - T_{c,i}) \\right),\n$$\n并设置\n$$\nT_{h,o}^{(0)} = T_{h,i} - \\frac{Q_0}{C_h}, \\quad T_{c,o}^{(0)} = T_{c,i} + \\frac{Q_0}{C_c}.\n$$\n通过构造，这保证了 $T_{h,i} \\ge T_{h,o}^{(0)} > T_{c,i}$ 和 $T_{c,o}^{(0)} > T_{c,i}$，并且通常是两种布置方式的一个良好起点。\n\n7. 输出规格。对于每个测试案例，计算收敛后的 $(T_{h,o}, T_{c,o})$，并以单行、精确格式输出五个出口温度对的列表：\n\"[ [Th1,Tc1],[Th2,Tc2],[Th3,Tc3],[Th4,Tc4],[Th5,Tc5] ]\"\n所有温度必须四舍五入到小数点后六位，并且打印时不带单位，也没有任何多余的空格。\n\n所述算法通过推导和使用解析雅可比矩阵，通过线搜索强制可行性，并应用严格的收敛标准，将基本原理（能量守恒和对数平均定义）整合到一个稳定的牛顿迭代中。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef log_mean_and_partials(a: float, b: float):\n    \"\"\"\n    Compute the log-mean temperature difference L(a,b) and its partial derivatives\n    with respect to a and b, using stable limits when a ~ b.\n\n    Parameters:\n        a, b: positive end temperature differences (must be > 0)\n\n    Returns:\n        L, dL_da, dL_db\n    \"\"\"\n    if a <= 0.0 or b <= 0.0:\n        raise ValueError(\"End temperature differences must be positive.\")\n    # Relative closeness threshold\n    # Use a symmetric measure to detect near-equality\n    maxab = max(abs(a), abs(b))\n    if maxab == 0.0:\n        # both zero not allowed; but handle defensively\n        return 0.0, 0.5, 0.5\n    rel = abs(a - b) / maxab\n    # Threshold for switching to series limit\n    if rel < 1e-10:\n        # L -> a (or b), partial derivatives -> 1/2, 1/2\n        return a, 0.5, 0.5\n    # General case\n    d = np.log(a / b)\n    n = (a - b)\n    L = n / d\n    dL_da = (d - n / a) / (d * d)\n    dL_db = (-d + n / b) / (d * d)\n    return L, dL_da, dL_db\n\ndef residual_and_jacobian(arrangement: str, U: float, A: float, Ch: float, Cc: float,\n                          Thi: float, Tci: float, Tho: float, Tco: float):\n    \"\"\"\n    Compute residual vector F and Jacobian J for the two-equation system.\n\n    F1 = Ch*(Thi - Tho) - U*A*LMTD\n    F2 = Cc*(Tco - Tci) - U*A*LMTD\n\n    The LMTD depends on the arrangement via the end differences:\n        Parallel:   a = Thi - Tci,             b = Tho - Tco\n        Counter:    a = Thi - Tco,             b = Tho - Tci\n    \"\"\"\n    if arrangement == \"parallel\":\n        a = Thi - Tci\n        b = Tho - Tco\n        L, dL_da, dL_db = log_mean_and_partials(a, b)\n        # Chain rule for partials w.r.t Tho, Tco\n        dL_dTho = dL_db * 1.0\n        dL_dTco = dL_db * (-1.0)\n    elif arrangement == \"counter\":\n        a = Thi - Tco\n        b = Tho - Tci\n        L, dL_da, dL_db = log_mean_and_partials(a, b)\n        dL_dTho = dL_db * 1.0\n        dL_dTco = dL_da * (-1.0)\n    else:\n        raise ValueError(\"Unknown arrangement\")\n    Q = U * A * L\n    F1 = Ch * (Thi - Tho) - Q\n    F2 = Cc * (Tco - Tci) - Q\n    # Jacobian entries\n    UA = U * A\n    J11 = -Ch - UA * dL_dTho\n    J12 = -UA * dL_dTco\n    J21 = -UA * dL_dTho\n    J22 = Cc - UA * dL_dTco\n    J = np.array([[J11, J12],\n                  [J21, J22]], dtype=float)\n    F = np.array([F1, F2], dtype=float)\n    return F, J, a, b, L, Q\n\ndef feasible(arrangement: str, Thi: float, Tci: float, Tho: float, Tco: float, eps: float = 1e-12):\n    \"\"\"\n    Check physical feasibility: positivity of end differences and sensible bounds.\n    \"\"\"\n    if arrangement == \"parallel\":\n        a = Thi - Tci\n        b = Tho - Tco\n        if a <= eps or b <= eps:\n            return False\n        # Bounds: Tho <= Thi, Tco >= Tci, and Tho >= Tci, Tco <= Thi\n        if not (Tci - 1e-9 <= Tho <= Thi + 1e-9):\n            return False\n        if not (Tci - 1e-9 <= Tco <= Thi + 1e-9):\n            return False\n        return True\n    elif arrangement == \"counter\":\n        a = Thi - Tco\n        b = Tho - Tci\n        if a <= eps or b <= eps:\n            return False\n        # Bounds: Tho <= Thi, Tco >= Tci\n        if not (Tci - 1e-9 <= Tho <= Thi + 1e-9):\n            return False\n        if not (Tci - 1e-9 <= Tco <= Thi + 1e-9):\n            return False\n        return True\n    return False\n\ndef newton_solve(arrangement: str, U: float, A: float, Ch: float, Cc: float,\n                 Thi: float, Tci: float,\n                 tol_res: float = 1e-9, tol_step: float = 1e-10, max_iter: int = 50):\n    \"\"\"\n    Solve for Tho and Tco using Newton's method with backtracking line search.\n    \"\"\"\n    # Conservative initial guess via energy capacity and UA caps\n    dT_in = Thi - Tci\n    Q_cap = min(U * A * max(dT_in, 0.0), min(Ch, Cc) * max(dT_in, 0.0))\n    Q0 = 0.5 * Q_cap\n    Tho = Thi - (Q0 / Ch if Ch > 0 else 0.0)\n    Tco = Tci + (Q0 / Cc if Cc > 0 else 0.0)\n\n    # Ensure initial feasibility by slight damping if needed\n    alpha_try = 1.0\n    for _ in range(20):\n        if feasible(arrangement, Thi, Tci, Tho, Tco):\n            break\n        alpha_try *= 0.5\n        Tho = Thi - alpha_try * (Q0 / Ch if Ch > 0 else 0.0)\n        Tco = Tci + alpha_try * (Q0 / Cc if Cc > 0 else 0.0)\n\n    # Newton iterations\n    for _iter in range(max_iter):\n        F, J, a, b, L, Q = residual_and_jacobian(arrangement, U, A, Ch, Cc, Thi, Tci, Tho, Tco)\n        normF = np.linalg.norm(F, ord=2)\n        if normF <= tol_res:\n            return Tho, Tco\n        # Solve linear system for Newton step\n        try:\n            step = np.linalg.solve(J, -F)\n        except np.linalg.LinAlgError:\n            # Regularize by adding small diagonal if singular\n            J_reg = J + 1e-12 * np.eye(2)\n            step = np.linalg.solve(J_reg, -F)\n        step_norm = np.linalg.norm(step, ord=2)\n        if step_norm <= tol_step:\n            return Tho, Tco\n        # Backtracking line search with feasibility enforcement\n        alpha = 1.0\n        Tho_new = Tho + alpha * step[0]\n        Tco_new = Tco + alpha * step[1]\n        # Enforce bounds by shrinking alpha until feasible and residual decreases\n        # Sufficient decrease parameter\n        c1 = 1e-4\n        # Current merit function\n        phi = 0.5 * normF * normF\n        success = False\n        for _ls in range(60):\n            if feasible(arrangement, Thi, Tci, Tho_new, Tco_new):\n                F_new, _, _, _, _, _ = residual_and_jacobian(arrangement, U, A, Ch, Cc, Thi, Tci, Tho_new, Tco_new)\n                phi_new = 0.5 * np.dot(F_new, F_new)\n                if phi_new <= phi - c1 * alpha * np.dot(step, step):\n                    success = True\n                    break\n            alpha *= 0.5\n            Tho_new = Tho + alpha * step[0]\n            Tco_new = Tco + alpha * step[1]\n            if alpha < 1e-12:\n                break\n        if not success:\n            # As a fallback, accept the best feasible found if any, else break\n            if feasible(arrangement, Thi, Tci, Tho_new, Tco_new):\n                Tho, Tco = Tho_new, Tco_new\n                continue\n            else:\n                break\n        Tho, Tco = Tho_new, Tco_new\n    # If did not converge, return current iterate (should not occur for provided tests)\n    return Tho, Tco\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case: (arrangement, U, A, Ch, Cc, Thi, Tci)\n    test_cases = [\n        (\"parallel\", 400.0, 20.0, 5000.0, 8000.0, 120.0, 20.0),\n        (\"counter\", 300.0, 30.0, 6000.0, 6000.0, 150.0, 50.0),\n        (\"parallel\", 50.0, 0.5, 4000.0, 6000.0, 90.0, 30.0),\n        (\"counter\", 1000.0, 100.0, 2000.0, 6000.0, 200.0, 40.0),\n        (\"parallel\", 150.0, 10.0, 5000.0, 5000.0, 170.0, 70.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        arrangement, U, A, Ch, Cc, Thi, Tci = case\n        Tho, Tco = newton_solve(arrangement, U, A, Ch, Cc, Thi, Tci)\n        # Round to six decimals\n        Tho_r = f\"{Tho:.6f}\"\n        Tco_r = f\"{Tco:.6f}\"\n        results.append(f\"[{Tho_r},{Tco_r}]\")\n\n    # Final print statement in the exact required format (no extra spaces).\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```"}]}