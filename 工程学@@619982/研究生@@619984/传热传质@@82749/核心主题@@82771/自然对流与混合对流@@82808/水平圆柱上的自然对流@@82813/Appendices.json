{"hands_on_practices": [{"introduction": "在实验传热学中，准确测量对流换热系数 $h$ 是基础。然而，对于流体中被加热的表面，热量会同时通过对流和热辐射散失，分离这两种模式可能具有挑战性，尤其是在辐射变得显著的高表面温度下。本练习将演示一种强大的实验技术：利用在真空中的独立测量来精确确定辐射分量，从而分离出真实的对流传热，并量化因简单地忽略辐射而产生的误差 [@problem_id:2510203]。", "problem": "一个直径为 $D = 0.010\\ \\mathrm{m}$、加热长度为 $L = 0.200\\ \\mathrm{m}$ 的细长水平圆柱体，在温度为 $T_{\\infty} = 300\\ \\mathrm{K}$ 的大尺寸静止空气环境中被电阻加热至均匀的表面温度 $T_{w} = 500\\ \\mathrm{K}$。周围的封闭空间很大且等温，温度为 $T_{\\mathrm{sur}} = 300\\ \\mathrm{K}$，有效角系数为 $F = 1$。通过支架的传导损失可忽略不计，端部效应也可忽略不计，因此相关面积为侧面积 $A = \\pi D L$。圆柱体表面表现为漫-灰发射体和反射体，其半球发射率 $\\varepsilon(T)$（可能与温度相关）。\n\n在相同的 $T_{w}$ 下进行了两个实验：\n- 在高真空（对流可忽略）中，测得维持 $T_{w}$ 所需的电功率为 $P_{\\mathrm{vac}} = 1.200\\ \\mathrm{W}$。\n- 在 $1\\ \\mathrm{atm}$ 的环境空气中，测得维持 $T_{w}$ 所需的电功率为 $P_{\\mathrm{air}} = 9.00\\ \\mathrm{W}$。\n\n仅使用第一性原理：圆柱体的能量平衡、对流热通量的定义以及斯蒂芬-玻尔兹曼定律，其中斯蒂芬-玻尔兹曼常数 $\\sigma = 5.670374419 \\times 10^{-8}\\ \\mathrm{W}\\ \\mathrm{m}^{-2}\\ \\mathrm{K}^{-4}$。\n\n任务：\n1. 从能量平衡出发，解释在数据处理中忽略辐射会如何导致推断出的水平圆柱体自然对流传热系数 $h_{\\mathrm{conv}}$ 产生偏差，并说明如何在相同的 $T_{w}$ 下通过在真空中进行独立的辐射校准来校正该偏差，而无需援引任何经验性对流关联式。\n2. 使用所提供的测量数据，计算相对误差，其定义为\n$$\n\\mathcal{E} \\equiv \\frac{h_{\\mathrm{naive}} - h_{\\mathrm{true}}}{h_{\\mathrm{true}}},\n$$\n其中，$h_{\\mathrm{naive}}$ 是将所有 $P_{\\mathrm{air}}$ 归因于对流而得到的，$h_{\\mathrm{true}}$ 是通过减去校准后的辐射损失而得到的。将您计算出的 $\\mathcal{E}$ 最终数值结果四舍五入到四位有效数字。以纯小数形式表示最终答案（无单位且无百分号）。", "solution": "所述问题具有科学依据、提法明确且客观。所有必要的数据均已提供，且其前提与热力学和传热学的基本原理一致。该问题是应用第一性原理来分离耦合传热模式的有效练习。我们将着手进行解答。\n\n分析始于对水平圆柱体的稳态能量平衡。输入的电功率 $P_{\\mathrm{in}}$ 必须与从圆柱体表面散失的总热量相平衡。在一般情况下，即圆柱体处于流体环境（空气）中时，热量通过自然对流 $q_{\\mathrm{conv}}$ 和热辐射 $q_{\\mathrm{rad}}$ 两种方式散失。传导损失据称可以忽略不计。因此，能量平衡方程为：\n$$\nP_{\\mathrm{in}} = q_{\\mathrm{conv}} + q_{\\mathrm{rad}}\n$$\n在环境空气中进行的实验中，输入功率为 $P_{\\mathrm{air}}$，因此平衡方程为：\n$$\nP_{\\mathrm{air}} = q_{\\mathrm{conv}} + q_{\\mathrm{rad}}\n$$\n对流热通量由牛顿冷却定律定义，$q_{\\mathrm{conv}} = h_{\\mathrm{conv}} A (T_{w} - T_{\\infty})$，其中 $h_{\\mathrm{conv}}$ 是对流传热系数，$A = \\pi D L$ 是圆柱体的侧表面积，$T_{w}$ 是均匀的表面温度，$T_{\\infty}$ 是静止空气的温度。灰体表面与大的等温环境之间的辐射热通量由斯蒂芬-玻尔兹曼定律给出，$q_{\\mathrm{rad}} = \\varepsilon A \\sigma (T_{w}^4 - T_{\\mathrm{sur}}^4)$，其中 $\\varepsilon$ 是表面发射率，$\\sigma$ 是斯蒂芬-玻尔兹曼常数，$T_{\\mathrm{sur}}$ 是环境的温度。鉴于 $T_{\\infty} = T_{\\mathrm{sur}}$，完整的能量平衡方程为：\n$$\nP_{\\mathrm{air}} = h_{\\mathrm{conv}} A (T_w - T_{\\infty}) + \\varepsilon A \\sigma (T_w^4 - T_{\\infty}^4)\n$$\n\n任务1：偏差与校正的解释\n对圆柱体在空气中的实验数据进行的“朴素”分析会忽略辐射的贡献。这种分析错误地将全部热损失归因于对流。在这种有缺陷的方法中，我们假设 $P_{\\mathrm{air}} \\approx q_{\\mathrm{conv,naive}}$。由此假设推断出的对流系数，我们称之为 $h_{\\mathrm{naive}}$，计算如下：\n$$\nP_{\\mathrm{air}} = h_{\\mathrm{naive}} A (T_w - T_{\\infty})\n$$\n求解 $h_{\\mathrm{naive}}$ 可得：\n$$\nh_{\\mathrm{naive}} = \\frac{P_{\\mathrm{air}}}{A (T_w - T_{\\infty})}\n$$\n这个值是有偏差的，因为它源于包含辐射分量的总功耗 $P_{\\mathrm{air}}$。通过将其与“真实”的对流传热 $q_{\\mathrm{conv,true}} = P_{\\mathrm{air}} - q_{\\mathrm{rad}}$ 进行比较，可以清楚地看到，$h_{\\mathrm{naive}}$ 是基于一个比实际对流功率更大的功率项。因此，$h_{\\mathrm{naive}}$ 总是会大于真实的对流系数 $h_{\\mathrm{true}}$。这种偏差是将辐射热损失不恰当地归入对流热损失的人为结果。\n\n在相同表面温度 $T_w$ 下，在高真空中进行独立的辐射校准实验，可以直接确定辐射热损失，从而校正这种偏差，而无需借助任何经验性关联式。在真空中，对流传热可以忽略不计（$q_{\\mathrm{conv}} \\approx 0$）。能量平衡简化为输入电功率 $P_{\\mathrm{vac}}$ 与辐射热损失之间的简单等式：\n$$\nP_{\\mathrm{vac}} = q_{\\mathrm{rad}} = \\varepsilon A \\sigma (T_w^4 - T_{\\mathrm{sur}}^4)\n$$\n由于这个真空实验与空气中的实验在相同的表面温度 $T_w$ 和环境温度 $T_{\\mathrm{sur}}$ 下进行，因此辐射热损失项 $q_{\\mathrm{rad}}$ 在两个实验中是相同的。即使发射率 $\\varepsilon$ 是温度的函数 $\\varepsilon(T_w)$，这一结论也成立，因为 $T_w$ 在两个实验之间是不变的。因此，我们可以直接用 $P_{\\mathrm{vac}}$ 替换空气实验能量平衡中的辐射热损失项：\n$$\nP_{\\mathrm{air}} = q_{\\mathrm{conv,true}} + P_{\\mathrm{vac}}\n$$\n因此，真实的对流传热被分离出来：\n$$\nq_{\\mathrm{conv,true}} = P_{\\mathrm{air}} - P_{\\mathrm{vac}}\n$$\n然后，真实的自然对流传热系数 $h_{\\mathrm{true}}$ 可以根据其定义正确计算：\n$$\nh_{\\mathrm{true}} = \\frac{q_{\\mathrm{conv,true}}}{A (T_w - T_{\\infty})} = \\frac{P_{\\mathrm{air}} - P_{\\mathrm{vac}}}{A (T_w - T_{\\infty})}\n$$\n此过程使用真空测量来解耦辐射和对流模式，从而完全消除了 $h_{\\mathrm{naive}}$ 中存在的偏差。\n\n任务2：相对误差的计算\n相对误差 $\\mathcal{E}$ 定义为：\n$$\n\\mathcal{E} \\equiv \\frac{h_{\\mathrm{naive}} - h_{\\mathrm{true}}}{h_{\\mathrm{true}}}\n$$\n这可以改写为：\n$$\n\\mathcal{E} = \\frac{h_{\\mathrm{naive}}}{h_{\\mathrm{true}}} - 1\n$$\n使用上面推导出的 $h_{\\mathrm{naive}}$ 和 $h_{\\mathrm{true}}$ 的表达式：\n$$\nh_{\\mathrm{naive}} = \\frac{P_{\\mathrm{air}}}{A (T_w - T_{\\infty})}\n$$\n$$\nh_{\\mathrm{true}} = \\frac{P_{\\mathrm{air}} - P_{\\mathrm{vac}}}{A (T_w - T_{\\infty})}\n$$\n我们将这些代入 $\\mathcal{E}$ 的表达式中：\n$$\n\\mathcal{E} = \\frac{\\frac{P_{\\mathrm{air}}}{A (T_w - T_{\\infty})}}{\\frac{P_{\\mathrm{air}} - P_{\\mathrm{vac}}}{A (T_w - T_{\\infty})}} - 1\n$$\n项 $A (T_w - T_{\\infty})$ 被消掉，这表明误差计算与圆柱体的几何形状和温差无关，仅依赖于功率测量值。这极大地简化了 $\\mathcal{E}$ 的表达式：\n$$\n\\mathcal{E} = \\frac{P_{\\mathrm{air}}}{P_{\\mathrm{air}} - P_{\\mathrm{vac}}} - 1\n$$\n通分后合并各项：\n$$\n\\mathcal{E} = \\frac{P_{\\mathrm{air}} - (P_{\\mathrm{air}} - P_{\\mathrm{vac}})}{P_{\\mathrm{air}} - P_{\\mathrm{vac}}} = \\frac{P_{\\mathrm{vac}}}{P_{\\mathrm{air}} - P_{\\mathrm{vac}}}\n$$\n现在，我们代入给定的数值：$P_{\\mathrm{vac}} = 1.200\\ \\mathrm{W}$ 和 $P_{\\mathrm{air}} = 9.00\\ \\mathrm{W}$。\n$$\n\\mathcal{E} = \\frac{1.200}{9.00 - 1.200} = \\frac{1.200}{7.80}\n$$\n进行除法计算：\n$$\n\\mathcal{E} \\approx 0.15384615...\n$$\n根据题目要求，将结果四舍五入到四位有效数字，我们得到：\n$$\n\\mathcal{E} \\approx 0.1538\n$$\n这个结果表明，忽略辐射会导致对自然对流系数的高估约 $15.4\\%$。", "answer": "$$\n\\boxed{0.1538}\n$$", "id": "2510203"}, {"introduction": "一旦获得了可靠的对流换热数据，下一步就是建立预测模型。Oberbeck-Boussinesq 近似是自然对流分析的基石，但其假设流体性质恒定（除浮力项中的密度外）有其局限性。本实践要求您通过计算，将简化的 Boussinesq 模型与更符合物理实际的可变物性模型进行比较，从而量化建模误差。这将帮助您深入理解这一关键近似的有效范围，尤其是在大温差情况下 [@problem_id:2510139]。", "problem": "请考虑一个直径为 $D$ 的等温水平圆柱体，在环境温度为 $T_{\\infty}$、压力均匀为 $p$ 的静止空气中的外部自然对流。圆柱体表面温度均匀，为 $T_{s}$。假设流动在平均意义上是稳态和二维的。您必须通过与一个可变属性模型进行比较，量化当相对温差满足 $\\lvert \\beta \\Delta T \\rvert \\sim 0.2$ 时，采用 Oberbeck–Boussinesq 近似（密度变化仅在浮力项中考虑，所有其他流体属性均视为常数）所引入的建模误差。在可变属性模型中，所有材料属性的温度依赖性在整个无量纲群中都得到了一致的体现。\n\n您的推导和算法必须从牛顿流体在重力体力作用下的质量、动量和能量守恒定律出发，并且仅对基准模型调用 Oberbeck–Boussinesq 近似。使用的基本依据包括：\n- 守恒方程（质量、含浮力的动量和能量）。\n- 水平圆柱体自然对流问题无量纲化后的瑞利数 $Ra_{D}$ 和普朗特数 $Pr$ 的定义。\n- 存在一个被广泛接受的、单一的、通用的关于水平圆柱体平均努塞尔数 $\\overline{Nu}$ 的关联式，该关联式在宽泛的 $Ra_{D}$ 和 $Pr$ 范围内有效。\n\n在您的推导中，不要假设或陈述任何目标关联式；而是要从第一性原理出发，清晰地论证您算法的结构，然后在您实现的解法中，用一个合适的通用关联式来封闭模型。\n\n定义以下物理量：\n- 理想气体密度 $ \\rho(T) = \\dfrac{p}{R\\,T} $，其中 $ R = 287.058 \\ \\mathrm{J/(kg \\cdot K)} $。\n- 理想气体的等压热膨胀系数 $ \\beta(T) = \\dfrac{1}{T} $。\n- 通过 Sutherland 公式的空气动力粘度 $ \\mu(T) = \\mu_{0} \\left(\\dfrac{T}{T_{0}}\\right)^{3/2} \\dfrac{T_{0} + S_{\\mu}}{T + S_{\\mu}} $，其中 $ \\mu_{0} = 1.716 \\times 10^{-5} \\ \\mathrm{Pa \\cdot s}$，$ T_{0} = 273.15 \\ \\mathrm{K}$，$ S_{\\mu} = 110.4 \\ \\mathrm{K}$。\n- 通过修正的 Sutherland 型拟合的空气热导率 $ k(T) = k_{0} \\left(\\dfrac{T}{T_{0}}\\right)^{3/2} \\dfrac{T_{0} + S_{k}}{T + S_{k}} $，其中 $ k_{0} = 0.0241 \\ \\mathrm{W/(m \\cdot K)}$，$ T_{0} = 273.15 \\ \\mathrm{K}$，$ S_{k} = 194.0 \\ \\mathrm{K}$。\n- 定压比热 $ c_{p}(T) = c_{p0} + a_{cp}\\, (T - T_{ref}) $，其中 $ c_{p0} = 1006.0 \\ \\mathrm{J/(kg \\cdot K)}$，$ a_{cp} = 0.1 \\ \\mathrm{J/(kg \\cdot K^{2})}$，$ T_{ref} = 300.0 \\ \\mathrm{K}$。\n- 运动粘度 $ \\nu(T) = \\dfrac{\\mu(T)}{\\rho(T)} $ 和热扩散率 $ \\alpha(T) = \\dfrac{k(T)}{\\rho(T) c_{p}(T)} $。\n- 普朗特数 $ Pr(T) = \\dfrac{\\nu(T)}{\\alpha(T)} = \\dfrac{c_{p}(T)\\,\\mu(T)}{k(T)} $。\n- 重力加速度 $ g = 9.81 \\ \\mathrm{m/s^{2}} $。\n- 温差 $ \\Delta T = T_{s} - T_{\\infty} $ 及其绝对值 $ \\lvert \\Delta T \\rvert = \\lvert T_{s} - T_{\\infty} \\rvert $。\n- 基于直径的瑞利数 $ Ra_{D} = \\dfrac{g \\, \\beta(T_{ref}) \\, \\lvert \\Delta T \\rvert \\, D^{3}}{\\nu(T_{ref}) \\, \\alpha(T_{ref})} $，其中 $T_{ref}$ 是用于评估计入 $Ra_{D}$ 的属性的参考温度。\n\n定义两个用于预测平均传热的预测模型：\n1. 基准 Oberbeck–Boussinesq 模型 (Boussinesq)：在 $ T_{ref} = T_{\\infty} $ 下评估 $ \\beta, \\nu, \\alpha, Pr, k $，在 $ Ra_{D} $ 中使用 $ \\lvert \\Delta T \\rvert $，并从一个单一的通用关联式计算平均努塞尔数 $ \\overline{Nu}_{B} $。然后计算平均传热系数 $ \\overline{h}_{B} = \\dfrac{\\overline{Nu}_{B} \\, k(T_{\\infty})}{D} $。\n2. 可变属性模型 (VP)：在膜层温度 $ T_{f} = \\dfrac{T_{s} + T_{\\infty}}{2} $ 下评估 $ \\beta, \\nu, \\alpha, Pr, k $，在 $ Ra_{D} $ 中使用 $ \\lvert \\Delta T \\rvert $，并从同一个单一的通用关联式计算 $ \\overline{Nu}_{VP} $。然后计算 $ \\overline{h}_{VP} = \\dfrac{\\overline{Nu}_{VP} \\, k(T_{f})}{D} $。\n\n将预测的平均传热系数中的相对建模误差定义为无量纲量\n$$\n\\varepsilon = \\dfrac{\\overline{h}_{B} - \\overline{h}_{VP}}{\\overline{h}_{VP}}.\n$$\n\n您必须实现一个程序，该程序：\n- 推导出一个与上述定义和基本定律一致的算法，然后使用一个被广泛接受的、适用于宽 $Ra_{D}$ 和 $Pr$ 范围的水平圆柱体的单一关联式来封闭平均努塞尔数模型。\n- 对每个测试用例，计算出 $ \\varepsilon $，结果为实数，不带百分号，并四舍五入到六位有效数字。\n- 温度输入使用 $ \\mathrm{K} $，长度输入使用 $ \\mathrm{m} $。压力单位为 $ \\mathrm{Pa} $。最终要求的输出是无量纲的，并且报告时不得带单位。\n\n使用以下参数值测试套件 $(D, T_{\\infty}, T_{s})$，所有测试均在 $ p = 101325 \\ \\mathrm{Pa} $ 下进行：\n- 测试 1 (目标 $ \\lvert \\beta \\Delta T \\rvert \\approx 0.2 $ 在 $ T_{\\infty} = 300 \\ \\mathrm{K} $ 时)：$ (D, T_{\\infty}, T_{s}) = (0.01, 300.0, 360.0) $。\n- 测试 2 (小直径，相同 $ \\Delta T $): $ (D, T_{\\infty}, T_{s}) = (0.002, 300.0, 360.0) $。\n- 测试 3 (大直径，相同 $ \\Delta T $): $ (D, T_{\\infty}, T_{s}) = (0.1, 300.0, 360.0) $。\n- 测试 4 (较小的 $ \\lvert \\beta \\Delta T \\rvert \\approx 0.1 $): $ (D, T_{\\infty}, T_{s}) = (0.01, 300.0, 330.0) $。\n- 测试 5 (冷却情况，$ \\Delta T < 0 $ 且 $ \\lvert \\beta \\Delta T \\rvert \\approx 0.2 $): $ (D, T_{\\infty}, T_{s}) = (0.05, 300.0, 240.0) $。\n\n最终输出格式：您的程序应生成单行输出，其中包含按上述测试顺序排列的五个 $ \\varepsilon $ 值，以逗号分隔的列表形式，并用方括号括起来，例如 $ [\\varepsilon_{1},\\varepsilon_{2},\\varepsilon_{3},\\varepsilon_{4},\\varepsilon_{5}] $，每个条目都四舍五入到六位有效数字，并以不带单位的小数形式打印。", "solution": "该问题陈述已经过严格验证，并被确定为有效。它具有科学依据，问题设定良好、客观且内部一致。它提出了一个对流传热领域的标准且非平凡的问题：在 Oberbeck-Boussinesq 近似的基础假设受到挑战的条件下（特别是对于较大的相对温差 $\\lvert \\beta \\Delta T \\rvert \\sim 0.2$），量化与其相关的建模误差。我们现在将进行正式的推导和求解。\n\n该物理过程由可压缩牛顿流体在重力体力作用下的质量、动量和能量守恒定律控制。对于稳态二维流动，这些方程为：\n质量守恒（连续性方程）：\n$$ \\nabla \\cdot (\\rho \\vec{u}) = 0 $$\n动量守恒（Navier-Stokes 方程）：\n$$ \\rho (\\vec{u} \\cdot \\nabla) \\vec{u} = -\\nabla p + \\nabla \\cdot \\vec{\\tau} + \\rho \\vec{g} $$\n能量守恒：\n$$ \\rho c_p (\\vec{u} \\cdot \\nabla) T = \\nabla \\cdot (k \\nabla T) $$\n此处，$\\rho$ 是密度，$\\vec{u}$ 是速度矢量，$p$ 是压力，$\\vec{\\tau}$ 是粘性应力张量，$\\vec{g}$ 是重力加速度矢量，$c_p$ 是定压比热，$T$ 是温度，$k$ 是热导率。\n\nOberbeck-Boussinesq (OB) 近似在温度变化适中的自然对流问题中简化了此方程组。OB 模型的主要假设是：\n1. 除重力体力项（浮力）外，在所有项中都忽略密度变化。\n2. 浮力项中的密度变化与温度变化呈线性关系：$\\rho - \\rho_{\\infty} \\approx -\\rho_{\\infty} \\beta (T - T_{\\infty})$，其中 $\\beta$ 是热膨胀系数，下标 $\\infty$ 表示参考条件，此处取为环境流体。\n3. 所有其他流体属性（$\\mu$, $k$, $c_p$）均假定为常数，并在参考温度 $T_{\\infty}$ 下进行评估。\n\n在这些假设下，不可压缩流体的控制方程变为：\n连续性方程：$\\nabla \\cdot \\vec{u} = 0$\n动量方程：$\\rho_{\\infty} (\\vec{u} \\cdot \\nabla) \\vec{u} = -\\nabla p' + \\mu \\nabla^2 \\vec{u} - \\rho_{\\infty} \\beta (T - T_{\\infty}) \\vec{g}$\n能量方程：$\\rho_{\\infty} c_p (\\vec{u} \\cdot \\nabla) T = k \\nabla^2 T$\n其中 $p'$ 是动压，不包括静水压力分量。\n\n通过使用圆柱直径 $D$ 作为长度尺度，$\\Delta T = T_s - T_\\infty$ 作为温度尺度，以及导出的速度和压力尺度对这些方程进行无量纲化，出现了两个主导流动和传热的主要无量纲群组：\n瑞利数，$Ra_D$，它代表浮力与粘性力和热扩散力之比：\n$$ Ra_D = \\frac{g \\beta \\lvert \\Delta T \\rvert D^3}{\\nu \\alpha} = Gr_D \\cdot Pr $$\n以及普朗特数，$Pr$，它是动量扩散率与热扩散率之比：\n$$ Pr = \\frac{\\nu}{\\alpha} = \\frac{c_p \\mu}{k} $$\n对于给定的几何形状，无量纲传热的解（由平均努塞尔数 $\\overline{Nu}_D = \\frac{\\overline{h}D}{k}$ 表示）是这两个参数的函数：\n$$ \\overline{Nu}_D = f(Ra_D, Pr) $$\n该问题要求使用一个单一的、通用的 $\\overline{Nu}_D$ 关联式，该关联式在宽泛的 $Ra_D$ 和 $Pr$ 范围内有效。Churchill 和 Chu 提出的用于水平圆柱体的关联式是一个公认且合适的选择，在 $10^{-5} < Ra_D < 10^{12}$ 范围内有效：\n$$ \\overline{Nu}_D = \\left\\{ 0.60 + \\frac{0.387 Ra_D^{1/6}}{\\left[1 + \\left(\\frac{0.559}{Pr}\\right)^{9/16}\\right]^{8/27}} \\right\\}^2 $$\n这个关联式将用于两个模型，以确保一致的比较。\n\n问题定义了两个模型来评估 OB 近似的误差。\n\n模型 1：基准 Oberbeck-Boussinesq 模型 (B)\n此模型严格遵守 OB 框架。计算 $Ra_D$ 和 $\\overline{h}$ 所需的所有流体属性（$\\beta, \\nu, \\alpha, Pr, k$）均在环境温度 $T_{\\infty}$ 下评估。\n- 参考温度：$T_{ref\\_B} = T_{\\infty}$。\n- 无量纲群组的属性：$\\beta_B = \\beta(T_{\\infty})$，$\\nu_B = \\nu(T_{\\infty})$，$\\alpha_B = \\alpha(T_{\\infty})$，$Pr_B = Pr(T_{\\infty})$。\n- 瑞利数：$Ra_{D,B} = \\frac{g \\beta_B \\lvert T_s - T_\\infty \\rvert D^3}{\\nu_B \\alpha_B}$。\n- 努塞尔数：使用 Churchill-Chu 关联式以及 $Ra_{D,B}$ 和 $Pr_B$ 计算 $\\overline{Nu}_B$。\n- 传热系数：$\\overline{h}_B = \\frac{\\overline{Nu}_B k(T_{\\infty})}{D}$。\n\n模型 2：可变属性模型 (VP)\n此模型通过考虑流体属性的温度依赖性来提供更准确的预测。在工程实践中，通常在平均膜层温度 $T_f = (T_s + T_{\\infty})/2$ 下评估属性，以近似热边界层上属性变化的影响。\n- 参考温度：$T_{ref\\_VP} = T_f = \\frac{T_s + T_{\\infty}}{2}$。\n- 无量纲群组的属性：$\\beta_{VP} = \\beta(T_f)$，$\\nu_{VP} = \\nu(T_f)$，$\\alpha_{VP} = \\alpha(T_f)$，$Pr_{VP} = Pr(T_f)$。\n- 瑞利数：$Ra_{D,VP} = \\frac{g \\beta_{VP} \\lvert T_s - T_\\infty \\rvert D^3}{\\nu_{VP} \\alpha_{VP}}$。\n- 努塞尔数：使用 Churchill-Chu 关联式以及 $Ra_{D,VP}$ 和 $Pr_{VP}$ 计算 $\\overline{Nu}_{VP}$。\n- 传热系数：$\\overline{h}_{VP} = \\frac{\\overline{Nu}_{VP} k(T_f)}{D}$。\n\n相对建模误差 $\\varepsilon$ 定义为由简化的 Boussinesq 模型预测的传热系数与更准确的可变属性模型预测的传热系数之间的分数差异：\n$$ \\varepsilon = \\frac{\\overline{h}_B - \\overline{h}_{VP}}{\\overline{h}_{VP}} = \\frac{\\overline{Nu}_B k(T_{\\infty})}{\\overline{Nu}_{VP} k(T_f)} - 1 $$\n\n为每个测试用例 $(D, T_{\\infty}, T_s)$ 在给定压力 $p$ 下解决该问题的算法如下：\n1. 根据所提供的公式定义所有物理常数和属性函数：$\\rho(T, p)$, $\\mu(T)$, $k(T)$, $c_p(T)$。这些用于推导 $\\nu(T, p)$, $\\alpha(T, p)$ 和 $Pr(T)$。理想气体的等压热膨胀系数为 $\\beta(T) = 1/T$。\n2. 对于 Boussinesq 模型 (B)：\n    a. 在 $T_{\\infty}$ 下评估属性：$k_B = k(T_{\\infty})$, $Pr_B = Pr(T_{\\infty})$, 以及群组 $(\\nu \\alpha)_B = \\nu(T_{\\infty}, p) \\alpha(T_{\\infty}, p)$。\n    b. 评估 $\\beta_B = 1/T_{\\infty}$。\n    c. 计算 $Ra_{D,B} = \\frac{g \\beta_B \\lvert T_s - T_{\\infty} \\rvert D^3}{(\\nu \\alpha)_B}$。\n    d. 使用 Churchill-Chu 关联式计算 $\\overline{Nu}_B$。\n    e. 存储 $\\overline{Nu}_B$ 和 $k_B$。\n3. 对于可变属性模型 (VP)：\n    a. 计算膜层温度 $T_f = (T_s + T_{\\infty})/2$。\n    b. 在 $T_f$ 下评估属性：$k_{VP} = k(T_f)$, $Pr_{VP} = Pr(T_f)$, 以及群组 $(\\nu \\alpha)_{VP} = \\nu(T_f, p) \\alpha(T_f, p)$。\n    c. 评估 $\\beta_{VP} = 1/T_f$。\n    d. 计算 $Ra_{D,VP} = \\frac{g \\beta_{VP} \\lvert T_s - T_{\\infty} \\rvert D^3}{(\\nu \\alpha)_{VP}}$。\n    e. 使用 Churchill-Chu 关联式计算 $\\overline{Nu}_{VP}$。\n    f. 存储 $\\overline{Nu}_{VP}$ 和 $k_{VP}$。\n4. 计算相对误差 $\\varepsilon = (\\overline{Nu}_B k_B) / (\\overline{Nu}_{VP} k_{VP}) - 1$。\n5. 将得到的 $\\varepsilon$ 值格式化为六位有效数字，并对所有测试用例重复此过程。最终的汇编将以数值结果列表的形式呈现。此程序现已实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the heat transfer problem by comparing the Boussinesq and\n    variable-property models for natural convection from a horizontal cylinder.\n    \"\"\"\n\n    # --- Constants ---\n    G = 9.81  # Gravitational acceleration, m/s^2\n    R_AIR = 287.058  # Specific gas constant for air, J/(kg.K)\n    P_ATM = 101325.0  # Atmospheric pressure, Pa\n\n    # Viscosity constants (Sutherland's formula)\n    MU_0 = 1.716e-5  # Pa.s\n    T0_MU = 273.15  # K\n    S_MU = 110.4  # K\n\n    # Thermal conductivity constants (modified Sutherland-type)\n    K_0 = 0.0241  # W/(m.K)\n    T0_K = 273.15  # K\n    S_K = 194.0  # K\n\n    # Specific heat constants (linear fit)\n    CP_0 = 1006.0  # J/(kg.K)\n    A_CP = 0.1  # J/(kg.K^2)\n    T_REF_CP = 300.0  # K\n\n    # --- Property Functions ---\n    def rho(T, p):\n        \"\"\"Ideal gas density.\"\"\"\n        return p / (R_AIR * T)\n\n    def mu(T):\n        \"\"\"Dynamic viscosity via Sutherland's formula.\"\"\"\n        return MU_0 * (T / T0_MU)**(1.5) * (T0_MU + S_MU) / (T + S_MU)\n\n    def k(T):\n        \"\"\"Thermal conductivity via modified Sutherland-type fit.\"\"\"\n        return K_0 * (T / T0_K)**(1.5) * (T0_K + S_K) / (T + S_K)\n\n    def cp(T):\n        \"\"\"Specific heat at constant pressure, linear fit.\"\"\"\n        return CP_0 + A_CP * (T - T_REF_CP)\n\n    def nu(T, p):\n        \"\"\"Kinematic viscosity.\"\"\"\n        return mu(T) / rho(T, p)\n\n    def alpha(T, p):\n        \"\"\"Thermal diffusivity.\"\"\"\n        return k(T) / (rho(T, p) * cp(T))\n\n    def prandtl(T):\n        \"\"\"Prandtl number.\"\"\"\n        return cp(T) * mu(T) / k(T)\n\n    def beta(T):\n        \"\"\"Isobaric thermal expansion coefficient for an ideal gas.\"\"\"\n        return 1.0 / T\n\n    def churchill_chu_nu(Ra_D, Pr):\n        \"\"\"\n        Calculates the average Nusselt number for a horizontal cylinder\n        using the Churchill and Chu correlation.\n        \"\"\"\n        term1 = 0.60\n        term2_num = 0.387 * Ra_D**(1.0/6.0)\n        term2_den = (1.0 + (0.559 / Pr)**(9.0/16.0))**(8.0/27.0)\n        return (term1 + term2)**2\n\n    def calculate_epsilon(D, T_inf, T_s, p):\n        \"\"\"\n        Calculates the relative modeling error epsilon for a given case.\n        \"\"\"\n        delta_T_abs = abs(T_s - T_inf)\n\n        # 1. Boussinesq Model (B)\n        T_ref_B = T_inf\n        beta_B = beta(T_ref_B)\n        nu_B = nu(T_ref_B, p)\n        alpha_B = alpha(T_ref_B, p)\n        Pr_B = prandtl(T_ref_B)\n        k_B = k(T_ref_B)\n        \n        Ra_D_B = (G * beta_B * delta_T_abs * D**3) / (nu_B * alpha_B)\n        Nu_B = churchill_chu_nu(Ra_D_B, Pr_B)\n        \n        # 2. Variable-Property Model (VP)\n        T_f = (T_s + T_inf) / 2.0\n        T_ref_VP = T_f\n        beta_VP = beta(T_ref_VP)\n        nu_VP = nu(T_ref_VP, p)\n        alpha_VP = alpha(T_ref_VP, p)\n        Pr_VP = prandtl(T_ref_VP)\n        k_VP = k(T_ref_VP)\n        \n        Ra_D_VP = (G * beta_VP * delta_T_abs * D**3) / (nu_VP * alpha_VP)\n        Nu_VP = churchill_chu_nu(Ra_D_VP, Pr_VP)\n\n        # 3. Error calculation\n        h_B = Nu_B * k_B / D\n        h_VP = Nu_VP * k_VP / D\n        \n        epsilon = (h_B - h_VP) / h_VP\n        \n        return epsilon\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (0.01, 300.0, 360.0),  # Test 1\n        (0.002, 300.0, 360.0), # Test 2\n        (0.1, 300.0, 360.0),   # Test 3\n        (0.01, 300.0, 330.0),   # Test 4\n        (0.05, 300.0, 240.0)   # Test 5\n    ]\n\n    results = []\n    for case in test_cases:\n        D, T_inf, T_s = case\n        result = calculate_epsilon(D, T_inf, T_s, P_ATM)\n        results.append(\"{:.6g}\".format(result))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n\n```", "id": "2510139"}, {"introduction": "在精确建模的基础上，许多工程应用会遇到一个“设计”问题：给定表面的热通量，需要确定其最终的温度。这个计算并不简单，因为对流和辐射的换热系数都依赖于我们试图求解的这个未知表面温度。本练习将指导您建立一个迭代定点方案来解决这个耦合的非线性问题，这是热工设计中一项基础且广泛应用的技能 [@problem_id:2510151]。", "problem": "一个直径为 $D$ 的长水平等温圆柱与环境温度为 $T_{\\infty}$ 的静止空气以及温度为 $T_{surr}$ 的大面积周围表面进行热交换。给定的均匀表面净热通量为 $q''$（加热流体），圆柱表面发射率为 $\\varepsilon$。假设 Boussinesq 近似对浮力有效，并且空气在恒定压力 $p$ 下表现为理想气体。目标是计算未知的稳态表面温度 $T_{w}$，该温度满足水平圆柱上自然对流的对流与辐射耦合传热平衡。\n\n从第一性原理出发，步骤如下。\n\n- 使用圆柱表面的局部稳态能量平衡：给定的热通量等于从表面到环境的对流热通量和辐射热通量之和。即 $q'' = q''_{\\text{conv}} + q''_{\\text{rad}}$。\n- 使用牛顿冷却定律对对流进行建模：$q''_{\\text{conv}} = h\\,(T_{w} - T_{\\infty})$，其中 $h$ 为对流系数。\n- 通过 $h = \\dfrac{Nu_{D}\\,k}{D}$ 将 $h$ 与圆柱上的无量纲努塞尔数 $Nu_{D}$ 相关联，其中 $k$ 是在合适的膜温下评估的空气导热系数。\n- 使用一个全面的、经过充分测试的 Churchill–Chu 型关联式，用于水平圆柱上的自然对流，以获得作为瑞利数 $Ra_{D}$ 和普朗特数 $Pr$ 的函数的 $Nu_{D}$：\n$$\nNu_{D} = \\left[0.60 + \\frac{0.387\\,Ra_{D}^{1/6}}{\\left(1 + (0.559/Pr)^{9/16}\\right)^{8/27}}\\right]^2,\n$$\n该公式在广泛的 $Ra_{D}$ 和 $Pr$ 范围内对空气有效。\n- 将基于直径 $D$ 的瑞利数定义为\n$$\nRa_{D} = \\frac{g\\,\\beta\\,|T_{w} - T_{\\infty}|\\,D^{3}}{\\nu\\,\\alpha},\n$$\n其中 $g$ 是重力加速度，$\\beta$ 是体积热膨胀系数，$\\nu$ 是运动粘度，$\\alpha$ 是热扩散率。所有与温度相关的物性都在膜温 $T_{f} = \\dfrac{T_{w} + T_{\\infty}}{2}$ 下进行评估。\n- 对于在压力 $p$ 下、于 $T_{f}$ 时被视为理想气体的空气：\n  - 使用理想气体定律计算密度 $\\rho = \\dfrac{p}{R\\,T_{f}}$，其中 $R = 287.058\\ \\text{J/(kg K)}$。\n  - 使用萨瑟兰定律计算动力粘度：\n  $$\n  \\mu(T) = \\mu_{0}\\left(\\frac{T}{T_{0}}\\right)^{3/2}\\frac{T_{0} + S}{T + S},\\quad \\mu_{0} = 1.716\\times 10^{-5}\\ \\text{Pa s},\\ T_{0} = 273.15\\ \\text{K},\\ S = 110.4\\ \\text{K}.\n  $$\n  - 假设定压比热 $c_{p} = 1006\\ \\text{J/(kg K)}$ 和普朗特数 $Pr = 0.71$ 为常数，并设 $k = \\dfrac{\\mu\\,c_{p}}{Pr}$。则 $\\nu = \\dfrac{\\mu}{\\rho}$ 且 $\\alpha = \\dfrac{k}{\\rho\\,c_{p}}$。使用 $\\beta = \\dfrac{1}{T_{f}}$。\n- 通过在平均温度附近对斯特藩-玻尔兹曼定律进行线性化来对热辐射进行建模，以定义一个有效的辐射传热系数 $h_{r}$：\n  - 令 $T_{m} = \\dfrac{T_{w} + T_{surr}}{2}$ 为用于线性化的平均温度，\n  - 令 $h_{r} = 4\\,\\varepsilon\\,\\sigma\\,T_{m}^{3}$，其中 $\\sigma = 5.670374419\\times 10^{-8}\\ \\mathrm{W}\\ \\mathrm{m}^{-2}\\ \\mathrm{K}^{-4}$，\n  - 则近似 $q''_{\\text{rad}} \\approx h_{r}\\,(T_{w} - T_{surr})$。\n\n由于 $h$ 和 $h_{r}$ 分别通过在 $T_{f}$ 和 $T_{m}$ 下的物性评估而依赖于未知的 $T_{w}$，因此设计一个迭代不动点方案，通过将对流关联式与线性化辐射模型耦合来更新 $T_{w}$，直至收敛。明确说明更新和停止准则。\n\n实现一个程序，为以下独立案例的测试套件执行此迭代计算。在所有案例中，使用 $g = 9.81\\ \\text{m/s}^{2}$ 和 $p = 101325\\ \\text{Pa}$。报告每个案例收敛后的表面温度 $T_{w}$，单位为开尔文，四舍五入到三位小数。\n\n测试套件（所有温度单位为开尔文，热通量单位为 $\\mathrm{W/m}^2$，直径单位为米，发射率为无量纲）：\n- 案例 1：$D = 0.02$, $q'' = 1000$, $T_{\\infty} = 300$, $T_{surr} = 300$, $\\varepsilon = 0.8$。\n- 案例 2：$D = 0.02$, $q'' = 5000$, $T_{\\infty} = 300$, $T_{surr} = 290$, $\\varepsilon = 0.9$。\n- 案例 3：$D = 0.05$, $q'' = 50$, $T_{\\infty} = 310$, $T_{surr} = 310$, $\\varepsilon = 0.2$。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，例如 $[T_{w,1},T_{w,2},T_{w,3}]$，其中每个 $T_{w,i}$ 均以开尔文为单位，四舍五入到三位小数。", "solution": "我们从圆柱表面的能量平衡开始。对于给定的向外热通量 $q''$ 以及通过对流向温度为 $T_{\\infty}$ 的环境和通过辐射向温度为 $T_{surr}$ 的周围环境的损失，稳态平衡为\n$$\nq'' = q''_{\\text{conv}} + q''_{\\text{rad}}.\n$$\n对于自然对流，牛顿定律给出\n$$\nq''_{\\text{conv}} = h\\,(T_{w} - T_{\\infty}),\n$$\n其中 $h$ 是对流系数。对于辐射，精确的净辐射热通量为 $\\varepsilon\\,\\sigma\\,(T_{w}^{4} - T_{surr}^{4})$。为将辐射嵌入迭代线性系统耦合中，我们在平均温度 $T_{m} = \\dfrac{T_{w} + T_{surr}}{2}$ 附近进行线性化，以定义一个有效的辐射系数\n$$\nh_{r}(T_{m}) = 4\\,\\varepsilon\\,\\sigma\\,T_{m}^{3},\n$$\n因此\n$$\nq''_{\\text{rad}} \\approx h_{r}(T_{m})\\,(T_{w} - T_{surr}).\n$$\n将这些代入平衡方程，\n$$\nq'' \\approx h\\,(T_{w} - T_{\\infty}) + h_{r}(T_{m})\\,(T_{w} - T_{surr}).\n$$\n$h$ 和 $h_{r}$ 分别通过 $T_{f} = \\dfrac{T_{w} + T_{\\infty}}{2}$ 和 $T_{m} = \\dfrac{T_{w} + T_{surr}}{2}$ 依赖于 $T_{w}$。因此，我们构建一个由 $n$ 索引的不动点迭代：\n1. 给定一个迭代值 $T_{w}^{(n)}$，计算膜温和平均温度\n$$\nT_{f}^{(n)} = \\frac{T_{w}^{(n)} + T_{\\infty}}{2}, \\qquad T_{m}^{(n)} = \\frac{T_{w}^{(n)} + T_{surr}}{2}.\n$$\n2. 在 $T_{f}^{(n)}$ 下评估空气物性。使用压力为 $p$ 的理想气体，密度为\n$$\n\\rho^{(n)} = \\frac{p}{R\\,T_{f}^{(n)}},\n$$\n其中 $R = 287.058\\ \\text{J/(kg K)}$。通过萨瑟兰定律计算的动力粘度为\n$$\n\\mu^{(n)} = \\mu_{0}\\left(\\frac{T_{f}^{(n)}}{T_{0}}\\right)^{3/2}\\frac{T_{0} + S}{T_{f}^{(n)} + S},\n$$\n其中 $\\mu_{0} = 1.716\\times 10^{-5}\\ \\text{Pa s}$，$T_{0} = 273.15\\ \\text{K}$，$S = 110.4\\ \\text{K}$。采用常数 $c_{p} = 1006\\ \\text{J/(kg K)}$ 和 $Pr = 0.71$。则导热系数和输运性质为\n$$\nk^{(n)} = \\frac{\\mu^{(n)}\\,c_{p}}{Pr}, \\quad \\nu^{(n)} = \\frac{\\mu^{(n)}}{\\rho^{(n)}}, \\quad \\alpha^{(n)} = \\frac{k^{(n)}}{\\rho^{(n)}\\,c_{p}}, \\quad \\beta^{(n)} = \\frac{1}{T_{f}^{(n)}}.\n$$\n3. 使用绝对温差构建基于直径 $D$ 的瑞利数，以捕捉浮力驱动的大小：\n$$\nRa_{D}^{(n)} = \\frac{g\\,\\beta^{(n)}\\,\\left|T_{w}^{(n)} - T_{\\infty}\\right|\\,D^{3}}{\\nu^{(n)}\\,\\alpha^{(n)}},\n$$\n其中 $g = 9.81\\ \\text{m/s}^{2}$。\n4. 根据水平圆柱的 Churchill–Chu 关联式计算努塞尔数 $Nu_{D}^{(n)}$\n$$\nNu_{D}^{(n)} = \\left[0.60 + \\frac{0.387\\,(Ra_{D}^{(n)})^{1/6}}{\\left(1 + (0.559/Pr)^{9/16}\\right)^{8/27}}\\right]^2.\n$$\n则\n$$\nh^{(n)} = \\frac{Nu_{D}^{(n)}\\,k^{(n)}}{D}.\n$$\n5. 在 $T_{m}^{(n)}$ 处计算线性化的辐射系数，\n$$\nh_{r}^{(n)} = 4\\,\\varepsilon\\,\\sigma\\,\\left(T_{m}^{(n)}\\right)^{3},\n$$\n其中 $\\sigma = 5.670374419\\times 10^{-8}\\ \\mathrm{W}\\ \\mathrm{m}^{-2}\\ \\mathrm{K}^{-4}$。\n6. 通过求解 $T_{w}^{(n+1)}$ 的线性化平衡方程来更新表面温度：\n$$\nq'' = h^{(n)}\\left(T_{w}^{(n+1)} - T_{\\infty}\\right) + h_{r}^{(n)}\\left(T_{w}^{(n+1)} - T_{surr}\\right)\n\\;\\;\\Rightarrow\\;\\;\nT_{w}^{(n+1)} = \\frac{q'' + h^{(n)}\\,T_{\\infty} + h_{r}^{(n)}\\,T_{surr}}{h^{(n)} + h_{r}^{(n)}}.\n$$\n\n收敛和停止准则：迭代直至 $\\left|T_{w}^{(n+1)} - T_{w}^{(n)}\\right| < \\epsilon$（使用一个严格的容差，如 $\\epsilon = 10^{-6}\\ \\text{K}$），或直至达到最大迭代次数（例如 1000 次）。该不动点方案在典型范围内是收缩的，因为右侧是 $T_{w}$ 的一个光滑函数，其灵敏度有界，源于 $h$ 的温和温度依赖性和 $h_{r}$ 的多项式依赖性；每一步的线性求解都嵌入了平衡方程对 $T_{w}$ 的主导依赖性，有助于鲁棒收敛。\n\n实现的算法设计：\n- 对于每个案例，将 $T_{w}^{(0)}$ 初始化为一个合理的猜测值，例如 $T_{w}^{(0)} = \\max(T_{\\infty},T_{surr}) + q''/20$。\n- 循环应用步骤 1-6 直至收敛。\n- 在所有案例中均使用常数 $g = 9.81\\ \\text{m/s}^{2}$ 和 $p = 101325\\ \\text{Pa}$。\n- 通过保护除法并在 $Ra_{D}$ 中使用 $\\left|T_{w}^{(n)} - T_{\\infty}\\right|$ 来确保正定性和数值稳定性。\n- 输出每个案例收敛后的 $T_{w}$，单位为开尔文，四舍五入到三位小数。\n\n将此方法应用于指定的测试套件，会得到一个包含三个浮点数的列表 $[T_{w,1}, T_{w,2}, T_{w,3}]$，单位为开尔文，每个值都四舍五入到三位小数，并打印在由方括号包围的单行上。确切的数值由耦合的物性评估、Churchill–Chu 关联式以及所实现的辐射线性化决定。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# Physical constants\nSIGMA = 5.670374419e-8  # Stefan-Boltzmann constant, W/(m^2 K^4)\nR_AIR = 287.058         # Specific gas constant for dry air, J/(kg K)\nG = 9.81                # Gravity, m/s^2\nP_ATM = 101325.0        # Pressure, Pa\n\n# Air property models\ndef mu_sutherland(T):\n    \"\"\"\n    Dynamic viscosity of air via Sutherland's law.\n    T in K, returns mu in Pa*s.\n    \"\"\"\n    mu0 = 1.716e-5  # Pa*s\n    T0 = 273.15     # K\n    S = 110.4       # K\n    return mu0 * (T / T0) ** 1.5 * (T0 + S) / (T + S)\n\ndef air_properties(T, p=P_ATM, cp=1006.0, Pr=0.71):\n    \"\"\"\n    Compute air properties at temperature T (K) and pressure p (Pa).\n    Returns tuple (rho, mu, k, nu, alpha, beta, Pr)\n    where:\n        rho: density (kg/m^3)\n        mu: dynamic viscosity (Pa*s)\n        k: thermal conductivity (W/m K)\n        nu: kinematic viscosity (m^2/s)\n        alpha: thermal diffusivity (m^2/s)\n        beta: volumetric thermal expansion coefficient (1/K)\n        Pr: Prandtl number (dimensionless)\n    \"\"\"\n    rho = p / (R_AIR * T)\n    mu = mu_sutherland(T)\n    k = mu * cp / Pr\n    nu = mu / rho\n    alpha = k / (rho * cp)\n    beta = 1.0 / T\n    return rho, mu, k, nu, alpha, beta, Pr\n\ndef Nu_churchill_chu_horizontal_cylinder(Ra, Pr):\n    \"\"\"\n    Churchill–Chu correlation for natural convection around a horizontal cylinder.\n    Ra: Rayleigh number based on diameter (dimensionless), use absolute value.\n    Pr: Prandtl number (dimensionless)\n    Returns Nu (dimensionless).\n    \"\"\"\n    # Guard against extremely small Ra to avoid underflow issues\n    Ra = max(Ra, 0.0)\n    term = (1.0 + (0.559 / Pr) ** (9.0 / 16.0)) ** (8.0 / 27.0)\n    Nu = (0.60 + (0.387 * Ra ** (1.0 / 6.0)) / term) ** 2\n    return Nu\n\ndef solve_Tw_for_case(D, qpp, T_inf, T_surr, emissivity,\n                      p=P_ATM, g=G, tol=1e-6, max_iter=1000):\n    \"\"\"\n    Iteratively solve for surface temperature Tw (K) given prescribed heat flux qpp (W/m^2),\n    cylinder diameter D (m), ambient T_inf (K), surrounding temperature T_surr (K),\n    emissivity (dimensionless), pressure p (Pa), and gravity g (m/s^2).\n    Uses:\n      - Air properties at film temperature Tf\n      - Churchill–Chu correlation for Nu_D(Ra_D,Pr)\n      - Linearized radiation with hr = 4*epsilon*sigma*Tm^3 at mean temperature Tm\n    \"\"\"\n    # Initial guess\n    Tw = max(T_inf, T_surr) + qpp / 20.0\n\n    # Constants for air property model\n    cp = 1006.0\n    Pr = 0.71\n\n    for _ in range(max_iter):\n        Tf = 0.5 * (Tw + T_inf)\n        Tm = 0.5 * (Tw + T_surr)\n\n        # Air properties at film temperature\n        rho, mu, k, nu, alpha, beta, Pr_eff = air_properties(Tf, p=p, cp=cp, Pr=Pr)\n\n        # Rayleigh number magnitude\n        Ra = g * beta * abs(Tw - T_inf) * D**3 / (nu * alpha + 1e-300)  # avoid divide-by-zero\n\n        # Nusselt number and convection coefficient\n        Nu = Nu_churchill_chu_horizontal_cylinder(Ra, Pr_eff)\n        h = Nu * k / D\n\n        # Linearized radiation coefficient\n        hr = 4.0 * emissivity * SIGMA * (Tm ** 3)\n\n        denom = h + hr\n        # Guard against pathological zero denominator\n        if denom <= 0.0:\n            # Fall back to small positive denominator to avoid crash; not expected physically\n            denom = 1e-12\n\n        Tw_new = (qpp + h * T_inf + hr * T_surr) / denom\n\n        if abs(Tw_new - Tw) < tol:\n            Tw = Tw_new\n            break\n        Tw = Tw_new\n\n    return Tw\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case: (D [m], qpp [W/m^2], T_inf [K], T_surr [K], emissivity)\n    test_cases = [\n        (0.02, 1000.0, 300.0, 300.0, 0.8),  # Case 1\n        (0.02, 5000.0, 300.0, 290.0, 0.9),  # Case 2\n        (0.05, 50.0, 310.0, 310.0, 0.2),    # Case 3\n    ]\n\n    results = []\n    for case in test_cases:\n        D, qpp, T_inf, T_surr, eps = case\n        Tw = solve_Tw_for_case(D, qpp, T_inf, T_surr, eps, p=P_ATM, g=G)\n        results.append(f\"{Tw:.3f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2510151"}]}