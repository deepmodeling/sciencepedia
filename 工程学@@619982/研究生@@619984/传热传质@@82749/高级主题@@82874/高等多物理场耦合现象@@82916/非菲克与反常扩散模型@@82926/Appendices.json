{"hands_on_practices": [{"introduction": "时间分数阶扩散方程（TFDE）是描述亚扩散现象的基石模型。其最重要的物理预测之一是均方（MSD）随时间呈幂律增长。这项练习将引导你直接从控制方程出发，通过数学推导，揭示分数阶导数的阶数 $\\alpha$ 如何直接决定MSD的时间标度律，从而深刻理解分数阶算子与反常扩散统计特征之间的内在联系 [@problem_id:2512376]。", "problem": "考虑一个阶数为 $0<\\alpha<1$ 的 Caputo 时间导数的一维时间分数阶扩散方程 (TFDE)，\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} C(x,t) = D\\,\\frac{\\partial^{2} C(x,t)}{\\partial x^{2}}, \\quad x\\in\\mathbb{R},\\; t>0,\n$$\n该方程满足点源初始条件 $C(x,0^{+})=\\delta(x)$ 和对所有 $t>0$ 成立的归一化约束 $\\int_{-\\infty}^{\\infty} C(x,t)\\,dx = 1$。广义扩散系数 $D>0$ 的单位是 $\\mathrm{m^{2}\\,s^{-\\alpha}}$。对于一个足够光滑的函数 $f$，Caputo 导数定义为\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} f(t) = \\frac{1}{\\Gamma(1-\\alpha)} \\int_{0}^{t} \\frac{f'(\\tau)}{(t-\\tau)^{\\alpha}}\\,d\\tau.\n$$\n设均方位移定义为\n$$\n\\langle x^{2}(t)\\rangle = \\int_{-\\infty}^{\\infty} x^{2}\\,C(x,t)\\,dx.\n$$\n仅从控制方程、初始条件和归一化约束出发，推导 $\\langle x^{2}(t)\\rangle$ 作为 $D$、$\\alpha$ 和 $t$ 的函数的闭式解析表达式。你可以使用 Fourier 变换和 Laplace 变换的标准性质，包括 Caputo 导数的 Laplace 变换。以单个闭式表达式的形式给出最终结果。假设如果 $D$ 的单位是 $\\mathrm{m^{2}\\,s^{-\\alpha}}$，$t$ 的单位是 $\\mathrm{s}$，那么 $\\langle x^{2}(t)\\rangle$ 的单位是 $\\mathrm{m^{2}}$；不要在最终方框内的表达式中包含单位。不需要进行数值舍入；请提供精确的符号表达式。", "solution": "该问题是有效的，因为它具有科学依据、是适定的且客观的。它描述了数学物理中一个标准的异常亚扩散模型。我们的任务是求出均方位移 (MSD)，其定义为：\n$$\n\\langle x^{2}(t)\\rangle = \\int_{-\\infty}^{\\infty} x^{2}\\,C(x,t)\\,dx\n$$\n我们将直接从控制时间分数阶扩散方程 (TFDE) 出发，推导关于 $\\langle x^{2}(t)\\rangle$ 的微分方程。控制方程为：\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} C(x,t) = D\\,\\frac{\\partial^{2} C(x,t)}{\\partial x^{2}}\n$$\n我们首先将 Caputo 时间导数算子 ${}^{\\mathrm{C}}D_{t}^{\\alpha}$ 应用于 $\\langle x^{2}(t)\\rangle$ 的定义。\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} \\langle x^{2}(t)\\rangle = {}^{\\mathrm{C}}D_{t}^{\\alpha} \\left[ \\int_{-\\infty}^{\\infty} x^{2}\\,C(x,t)\\,dx \\right]\n$$\n假设浓度分布 $C(x,t)$ 及其导数在 $|x| \\to \\infty$ 时足够快地衰减——这对于一个在无限域中从点源扩散的守恒量是物理上必需的——我们可以交换微分和积分算子。\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} \\langle x^{2}(t)\\rangle = \\int_{-\\infty}^{\\infty} x^{2}\\,\\left({}^{\\mathrm{C}}D_{t}^{\\alpha} C(x,t)\\right)\\,dx\n$$\n现在，我们将 TFDE 的右侧代入被积函数中：\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} \\langle x^{2}(t)\\rangle = \\int_{-\\infty}^{\\infty} x^{2}\\,\\left(D\\,\\frac{\\partial^{2} C(x,t)}{\\partial x^{2}}\\right)\\,dx = D \\int_{-\\infty}^{\\infty} x^{2}\\,\\frac{\\partial^{2} C(x,t)}{\\partial x^{2}}\\,dx\n$$\n我们使用分部积分法计算右侧的积分。令 $u = x^{2}$ 且 $dv = \\frac{\\partial^{2} C}{\\partial x^{2}}\\,dx$。则 $du = 2x\\,dx$ 且 $v = \\frac{\\partial C}{\\partial x}$。\n$$\n\\int_{-\\infty}^{\\infty} x^{2}\\,\\frac{\\partial^{2} C}{\\partial x^{2}}\\,dx = \\left[ x^{2}\\,\\frac{\\partial C}{\\partial x} \\right]_{-\\infty}^{\\infty} - \\int_{-\\infty}^{\\infty} 2x\\,\\frac{\\partial C}{\\partial x}\\,dx\n$$\n对于一个有物理意义的解，浓度及其梯度在无穷远处必须趋于零，因此边界项 $\\left[ x^{2}\\,\\frac{\\partial C}{\\partial x} \\right]_{-\\infty}^{\\infty}$ 为零。于是，我们得到：\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} \\langle x^{2}(t)\\rangle = -2D \\int_{-\\infty}^{\\infty} x\\,\\frac{\\partial C}{\\partial x}\\,dx\n$$\n我们对剩余的积分再次使用分部积分法。令 $u = x$ 且 $dv = \\frac{\\partial C}{\\partial x}\\,dx$。则 $du = dx$ 且 $v = C(x,t)$。\n$$\n\\int_{-\\infty}^{\\infty} x\\,\\frac{\\partial C}{\\partial x}\\,dx = \\left[ x\\,C(x,t) \\right]_{-\\infty}^{\\infty} - \\int_{-\\infty}^{\\infty} C(x,t)\\,dx\n$$\n同样，边界项 $\\left[ x\\,C(x,t) \\right]_{-\\infty}^{\\infty}$ 为零。这剩下：\n$$\n\\int_{-\\infty}^{\\infty} x\\,\\frac{\\partial C}{\\partial x}\\,dx = - \\int_{-\\infty}^{\\infty} C(x,t)\\,dx\n$$\n将此结果代回，我们得到：\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} \\langle x^{2}(t)\\rangle = -2D \\left( - \\int_{-\\infty}^{\\infty} C(x,t)\\,dx \\right) = 2D \\int_{-\\infty}^{\\infty} C(x,t)\\,dx\n$$\n问题提供了对所有 $t>0$ 成立的归一化约束 $\\int_{-\\infty}^{\\infty} C(x,t)\\,dx = 1$。应用此约束可得到一个关于 $\\langle x^{2}(t)\\rangle$ 的简单分数阶常微分方程：\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} \\langle x^{2}(t)\\rangle = 2D\n$$\n为了解这个方程，我们需要 $\\langle x^{2}(t)\\rangle$ 的一个初始条件。我们可以从浓度的初始条件 $C(x,0^{+})=\\delta(x)$ 得到它。\n$$\n\\langle x^{2}(0^{+})\\rangle = \\int_{-\\infty}^{\\infty} x^{2}\\,C(x,0^{+})\\,dx = \\int_{-\\infty}^{\\infty} x^{2}\\,\\delta(x)\\,dx = 0\n$$\n所以我们必须求解以下初值问题：\n$$\n{}^{\\mathrm{C}}D_{t}^{\\alpha} y(t) = 2D, \\quad y(0) = 0\n$$\n其中 $y(t) = \\langle x^{2}(t)\\rangle$。方程 ${}^{\\mathrm{C}}D_{t}^{\\alpha} y(t) = f(t)$ 在初始条件 $y(0) = 0$ 下的解，是通过将 Riemann-Liouville 分数阶积分算子 $J^{\\alpha}$ 应用于 $f(t)$ 得到的。\n$$\ny(t) = J^{\\alpha}[f(t)] = \\frac{1}{\\Gamma(\\alpha)} \\int_{0}^{t} (t-\\tau)^{\\alpha-1} f(\\tau)\\,d\\tau\n$$\n在我们的情况下，$f(t)$ 是常数 $2D$。\n$$\n\\langle x^{2}(t)\\rangle = \\frac{1}{\\Gamma(\\alpha)} \\int_{0}^{t} (t-\\tau)^{\\alpha-1} (2D)\\,d\\tau = \\frac{2D}{\\Gamma(\\alpha)} \\int_{0}^{t} (t-\\tau)^{\\alpha-1}\\,d\\tau\n$$\n为了计算该积分，我们进行换元，令 $u = t - \\tau$，这意味着 $du = -d\\tau$。积分上下限从 $\\tau=0$ 变为 $u=t$，从 $\\tau=t$ 变为 $u=0$。\n$$\n\\int_{0}^{t} (t-\\tau)^{\\alpha-1}\\,d\\tau = \\int_{t}^{0} u^{\\alpha-1} (-du) = \\int_{0}^{t} u^{\\alpha-1}\\,du = \\left[ \\frac{u^{\\alpha}}{\\alpha} \\right]_{0}^{t} = \\frac{t^{\\alpha}}{\\alpha}\n$$\n将此结果代回，得到 MSD 的表达式：\n$$\n\\langle x^{2}(t)\\rangle = \\frac{2D}{\\Gamma(\\alpha)} \\left( \\frac{t^{\\alpha}}{\\alpha} \\right) = \\frac{2D t^{\\alpha}}{\\alpha \\Gamma(\\alpha)}\n$$\n最后，使用 Gamma 函数的性质 $\\Gamma(z+1)=z\\Gamma(z)$，我们有 $\\alpha\\Gamma(\\alpha) = \\Gamma(\\alpha+1)$。这将表达式简化为：\n$$\n\\langle x^{2}(t)\\rangle = \\frac{2D t^{\\alpha}}{\\Gamma(\\alpha+1)}\n$$\n该表达式描述了亚扩散现象，其中均方位移随时间呈幂律增长，且幂指数 $\\alpha$ 小于 $1$。对于 $\\alpha=1$ 的正常扩散情况，我们恢复了经典结果 $\\langle x^{2}(t)\\rangle = \\frac{2D t}{\\Gamma(2)} = 2Dt$。", "answer": "$$\n\\boxed{\\frac{2D t^{\\alpha}}{\\Gamma(\\alpha+1)}}\n$$", "id": "2512376"}, {"introduction": "非菲克模型不仅限于描述简单扩散，在模拟溶质于多孔介质等复杂环境中的输运过程时也至关重要，其中对流、弥散和质量交换等多种过程相互交织。本练习 [@problem_id:2512377] 让你挑战一个包含分数阶多速率质量传递（MRMT）的复杂输运模型。通过运用拉普拉斯变换和渐近分析等方法推导穿透曲线的长时间行为，你将学会分数阶动力学如何体现为实验中广泛观测到的特征性幂律“拖尾”现象。", "problem": "考虑在横截面积恒定、系数恒定的饱和均质多孔柱中，稀释溶质的一维平流-弥散过程。流动水相浓度用 $c(x,t)$ 表示，表观孔隙流速用 $u&gt;0$ 表示，水动力弥散系数用 $D&gt;0$ 表示，流动孔隙度用 $\\phi_{m}\\in(0,1)$ 表示。向非流动域的多速率传质（MRMT）由一个幂律记忆函数表示，在连续介质极限下，该函数由一个阶数为 $\\beta\\in(0,1)$、强度为 $\\kappa&gt;0$ 的Caputo分数阶导数来描述。控制流动相的质量平衡方程为\n$$\n\\phi_{m}\\,\\frac{\\partial c}{\\partial t}+u\\,\\frac{\\partial c}{\\partial x}-D\\,\\frac{\\partial^{2}c}{\\partial x^{2}}+\\kappa\\,\\prescript{C}{}{D}_{t}^{\\beta} c \\;=\\; 0,\\qquad x>0,\\; t>0,\n$$\n初始条件为 $c(x,0)=0$，远场条件为当 $x\\to +\\infty$ 时 $c(x,t)\\to 0$。此处，$\\prescript{C}{}{D}_{t}^{\\beta}$ 表示阶数为 $\\beta$ 的Caputo分数阶导数，对于足够光滑的 $c$，其定义为\n$$\n\\prescript{C}{}{D}_{t}^{\\beta} c(x,t)\\;=\\;\\frac{1}{\\Gamma(1-\\beta)}\\int_{0}^{t}\\frac{\\partial c}{\\partial \\tau}(x,\\tau)\\,(t-\\tau)^{-\\beta}\\,d\\tau,\n$$\n其中 $\\Gamma(\\cdot)$ 是伽马函数。一个总注入质量为 $M&gt;0$ 的单位面积脉冲以质量通量边界条件的形式施加在入口 $x=0$ 处\n$$\nJ(0,t)\\;=\\;u\\,c(0,t)-D\\,\\frac{\\partial c}{\\partial x}(0,t)\\;=\\;M\\,\\delta(t),\n$$\n其中 $\\delta(t)$ 是狄拉克δ分布。设 $L&gt;0$ 为一个固定的出口位置，并将穿透曲线定义为在 $x=L$ 处观测到的流动相浓度，即 $c(L,t)$。\n\n从质量守恒、线性平流和 Fickian 弥散原理，以及上述分数阶 MRMT 闭合模型出发，完成以下任务：\n\n1) 对时间变量 $t$ 使用单边拉普拉斯变换，对问题进行变换，并推导出 $c(L,t)$ 的拉普拉斯变换 $\\widehat{c}(L,s)$ 在拉普拉斯空间中的闭合表达式。\n\n2) 使用您得到的拉普拉斯空间表达式的小 $s$ 渐近行为和适当的 Tauberian 推理，确定当 $t\\to\\infty$ 时，前导阶的代数长时行为 $c(L,t)\\sim C\\,t^{-\\alpha}$，其中 $C$ 是一个可能依赖于 $M,\\,u,\\,D,\\,\\phi_{m},\\,\\kappa,\\,L$ 和 $\\beta$ 的常数，而 $\\alpha&gt;0$ 是拖尾指数。\n\n3) 将拖尾指数 $\\alpha$ 明确地表示为 $\\beta$ 的函数。最终答案只报告该指数，形式为一个无单位的、单一的闭合解析表达式。不要四舍五入。", "solution": "首先对问题陈述进行验证。\n\n问题提供了一套完整的已知条件：一个控制溶质运移的线性分数阶偏微分方程，所有必要的物理参数（$u$, $D$, $\\phi_m$, $\\kappa$, $\\beta$），一个明确定义的域（$x&gt;0, t&gt;0$），一个零初始条件（$c(x,0)=0$），以及两个边界条件（无穷远处浓度为零和入口 $x=0$ 处的通量条件）。该模型是时间分数阶平流-弥散方程，这是水文地质学和多孔介质运移领域中一个标准的、有科学依据的模型，用于描述由具有幂律记忆的多速率传质引起的非 Fickian 运移现象。问题以客观的数学语言表述，是适定的，并存在唯一解。任务是该领域的标准解析步骤：应用积分变换和渐近分析。因此，该问题被认为是有效的，并将提供解答。\n\n按照要求，解答过程分三个阶段进行：首先，推导在位置 $L$ 处浓度的拉普拉斯空间解；其次，对该解在拉普拉斯变量 $s$ 较小时进行渐近分析，以确定长时行为；第三，确定拖尾指数 $\\alpha$。\n\n1) $\\widehat{c}(L,s)$ 的推导：\n我们对控制方程应用单边拉普拉斯变换，其定义为 $\\widehat{f}(s) = \\mathcal{L}\\{f(t)\\} = \\int_{0}^{\\infty} f(t) \\exp(-st) dt$：\n$$\n\\phi_{m}\\,\\frac{\\partial c}{\\partial t}+u\\,\\frac{\\partial c}{\\partial x}-D\\,\\frac{\\partial^{2}c}{\\partial x^{2}}+\\kappa\\,\\prescript{C}{}{D}_{t}^{\\beta} c \\;=\\; 0\n$$\n利用拉普拉斯变换的标准性质和初始条件 $c(x,0)=0$，我们对每一项进行变换：\n$\\mathcal{L}\\{\\frac{\\partial c}{\\partial t}\\} = s \\widehat{c}(x,s) - c(x,0) = s \\widehat{c}(x,s)$。\n$\\mathcal{L}\\{\\prescript{C}{}{D}_{t}^{\\beta} c\\} = s^\\beta \\widehat{c}(x,s) - s^{\\beta-1}c(x,0) = s^\\beta \\widehat{c}(x,s)$。\n空间导数变换为关于 $x$ 的常导数。因此，该偏微分方程被转化为关于空间变量 $x$ 的二阶常微分方程：\n$$\n\\phi_{m}\\,s \\widehat{c}(x,s)+u\\,\\frac{d\\widehat{c}}{dx}(x,s)-D\\,\\frac{d^{2}\\widehat{c}}{dx^{2}}(x,s)+\\kappa\\,s^{\\beta} \\widehat{c}(x,s) \\;=\\; 0\n$$\n整理成标准形式，我们得到：\n$$\nD\\,\\frac{d^{2}\\widehat{c}}{dx^{2}} - u\\,\\frac{d\\widehat{c}}{dx} - (\\phi_{m} s + \\kappa s^{\\beta})\\,\\widehat{c} \\;=\\; 0\n$$\n这是一个关于 $x$ 的线性、齐次、常系数常微分方程（ODE）。其特征方程为 $D r^{2} - u r - (\\phi_{m} s + \\kappa s^{\\beta}) = 0$。根为：\n$$\nr_{\\pm} = \\frac{u \\pm \\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})}}{2D}\n$$\n通解为 $\\widehat{c}(x,s) = A(s) \\exp(r_{+} x) + B(s) \\exp(r_{-} x)$。远场边界条件 $x \\to +\\infty$ 时 $c(x,t) \\to 0$ 意味着其变换 $\\widehat{c}(x,s) \\to 0$ 当 $x \\to +\\infty$ 时。由于 $u&gt;0$ 和 $D&gt;0$，对于 $\\text{Re}(s)&gt;0$，$r_{+}$ 总是正的，因此我们必须设 $A(s)=0$ 以确保解保持有界。因此，解的形式为 $\\widehat{c}(x,s) = B(s) \\exp(r_{-} x)$。\n\n系数 $B(s)$ 由入口通量边界条件 $u\\,c(0,t)-D\\,\\frac{\\partial c}{\\partial x}(0,t) = M\\,\\delta(t)$ 确定。其拉普拉斯变换为：\n$$\nu\\,\\widehat{c}(0,s) - D\\,\\frac{d\\widehat{c}}{dx}(0,s) = M\n$$\n将 $\\widehat{c}(x,s) = B(s) \\exp(r_{-} x)$ 及其导数 $\\frac{d\\widehat{c}}{dx} = B(s) r_{-} \\exp(r_{-} x)$ 代入 $x=0$：\n$$\nu\\,B(s) - D\\,B(s)r_{-} = B(s)(u - D r_{-}) = M\n$$\n$$\nB(s) = \\frac{M}{u - D r_{-}} = \\frac{M}{u - D \\frac{u - \\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})}}{2D}} = \\frac{2M}{u + \\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})}}\n$$\n拉普拉斯空间中的完整解是：\n$$\n\\widehat{c}(x,s) = \\frac{2M}{u + \\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})}} \\exp\\left( \\frac{u - \\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})}}{2D} x \\right)\n$$\n在出口位置 $x=L$ 处计算此表达式，得到穿透曲线的拉普拉斯变换：\n$$\n\\widehat{c}(L,s) = \\frac{2M}{u + \\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})}} \\exp\\left( \\frac{uL}{2D} - \\frac{L}{2D}\\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})} \\right)\n$$\n\n2) 长时渐近行为：\n当 $t \\to \\infty$ 时 $c(L,t)$ 的长时行为通过 Tauberian 定理与当 $s \\to 0$ 时 $\\widehat{c}(L,s)$ 的小 $s$ 行为相关联。我们分析小 $s$ 时 $\\widehat{c}(L,s)$ 的行为。由于 $\\beta \\in (0,1)$，当 $s \\to 0$ 时，$s$ 是比 $s^{\\beta}$ 更高阶的无穷小量，所以 $s \\ll s^{\\beta}$。因此，项 $\\phi_m s + \\kappa s^\\beta$ 由 $\\kappa s^\\beta$ 主导：\n$$\n\\phi_{m} s + \\kappa s^{\\beta} \\approx \\kappa s^{\\beta} \\quad \\text{for } s \\to 0\n$$\n让我们使用泰勒展开式分析小 $s$ 时的平方根项：\n$$\n\\sqrt{u^2 + 4D(\\phi_{m} s + \\kappa s^{\\beta})} = u \\sqrt{1 + \\frac{4D}{u^2}(\\phi_{m} s + \\kappa s^{\\beta})} \\approx u \\left( 1 + \\frac{1}{2} \\frac{4D}{u^2}(\\kappa s^{\\beta}) \\right) = u + \\frac{2D\\kappa}{u}s^{\\beta}\n$$\n记作 $g(s) \\approx u + \\delta(s)$，其中 $\\delta(s) = \\frac{2D\\kappa}{u} s^{\\beta}$。\n我们将此近似代入 $\\widehat{c}(L,s)$ 的表达式中。指数前因子变为：\n$$\n\\frac{2M}{u + g(s)} \\approx \\frac{2M}{u + (u + \\delta(s))} = \\frac{2M}{2u + \\delta(s)} = \\frac{M}{u(1 + \\frac{\\delta(s)}{2u})} \\approx \\frac{M}{u}\\left(1 - \\frac{\\delta(s)}{2u}\\right)\n$$\n指数因子变为：\n$$\n\\exp\\left( \\frac{L(u-g(s))}{2D} \\right) \\approx \\exp\\left( \\frac{L(-\\delta(s))}{2D} \\right) \\approx 1 - \\frac{L\\delta(s)}{2D}\n$$\n结合这些展开式：\n$$\n\\widehat{c}(L,s) \\approx \\frac{M}{u}\\left(1 - \\frac{\\delta(s)}{2u}\\right)\\left(1 - \\frac{L\\delta(s)}{2D}\\right) \\approx \\frac{M}{u}\\left(1 - \\frac{\\delta(s)}{2u} - \\frac{L\\delta(s)}{2D} \\right) = \\frac{M}{u} - \\frac{M}{u}\\left(\\frac{1}{2u} + \\frac{L}{2D}\\right)\\delta(s)\n$$\n常数项是 $\\widehat{c}(L,0) = \\frac{M}{u}$，这与总质量守恒 ($u \\int_0^\\infty c(L,t) dt = M$) 一致。小 $s$ 时与此值的偏差决定了长时拖尾：\n$$\n\\widehat{c}(L,s) - \\widehat{c}(L,0) \\sim -\\frac{M}{u}\\left(\\frac{D+uL}{2uD}\\right)\\delta(s) = -\\frac{M(D+uL)}{2u^2 D} \\left(\\frac{2D\\kappa}{u} s^{\\beta}\\right) = -\\frac{M\\kappa(D+uL)}{u^3} s^{\\beta}\n$$\n因此，当 $s \\to 0$ 时，我们有 $\\widehat{c}(L,s) - \\widehat{c}(L,0) \\sim A s^{\\beta}$，其中 $A = -\\frac{M\\kappa(D+uL)}{u^3}$ 是一个负常数，且 $\\beta \\in (0,1)$。\nTauberian 定理指出，如果当 $s \\to 0$ 时 $\\widehat{f}(s) - \\widehat{f}(0) \\sim A s^{\\nu}$ 且 $\\nu \\in (0,1)$，那么当 $t \\to \\infty$ 时 $f(t) \\sim \\frac{A}{\\Gamma(-\\nu)} t^{-(\\nu+1)}$。此处，$f(t)=c(L,t)$ 且 $\\nu=\\beta$。\n因此，穿透曲线的长时行为是：\n$$\nc(L,t) \\sim \\frac{A}{\\Gamma(-\\beta)} t^{-(\\beta+1)}\n$$\n系数为 $\\frac{A}{\\Gamma(-\\beta)} = \\frac{-M\\kappa(D+uL)/u^3}{\\Gamma(-\\beta)}$。由于当 $\\beta \\in (0,1)$ 时 $A&lt;0$ 且 $\\Gamma(-\\beta)&lt;0$，浓度是正的，符合要求。拖尾的形式是 $c(L,t) \\sim C t^{-(\\beta+1)}$。\n\n3) 拖尾指数 $\\alpha$ 的确定：\n通过将推导出的渐近行为 $c(L,t) \\sim C t^{-(\\beta+1)}$ 与要求的形式 $c(L,t) \\sim C t^{-\\alpha}$ 进行比较，我们可以直接确定拖尾指数 $\\alpha$。\n$$\n\\alpha = \\beta + 1\n$$\n此结果表明，阶数为 $\\beta$ 的分数阶传质项的存在，导致穿透曲线出现幂律拖尾，其指数移动了一个单位。", "answer": "$$\\boxed{\\beta + 1}$$", "id": "2512377"}, {"introduction": "分数阶模型虽然在解析上功能强大，但其具有记忆效应的“非局域”特性也带来了巨大的计算挑战，因为计算每一时间步都需要利用整个过程的历史信息。最后一个实践练习 [@problem_id:2512393] 将指导你掌握一种克服此计算瓶颈的有效技术。你将学习并实现一种算法，用一组指数函数的和来近似幂律记忆核，从而将一个计算成本高昂且耗费内存的问题转变为一个高效的问题，这是在实际模拟中应用分数阶模型的关键技能。", "problem": "时间分数阶非菲克扩散模型用遗传核取代了经典的菲克无记忆通量。阶数为 $\\,\\alpha\\in(0,1)\\,$ 的 Caputo 时间分数阶导数使用了记忆核 $\\,K(t)=\\dfrac{t^{-\\alpha}}{\\Gamma(1-\\alpha)}\\,$，该核出现在卷积 $\\,\\int_{0}^{t}K(t-\\tau)\\,g(\\tau)\\,d\\tau\\,$ 中。使用这种幂律核 $\\,K(t)\\,$ 进行直接时间步进的内存开销很大，因为它需要在每一步存储和重用整个历史记录。一种广泛使用的加速策略是用指数和来近似 $\\,K(t)\\,$，这样卷积就可以在每个步长以恒定的成本进行递归更新。\n\n您的任务是推导并实现一个对幂律核的快速指数和近似，该近似在有限时间窗 $[t_{\\min},t_{\\max}]$ 上是一致精确的，并通过直接采样来估计其在该时间窗上的近似误差。\n\n仅从以下基本事实出发。\n\n- 对于 $\\,t>0\\,$，阶数为 $\\,\\alpha\\in(0,1)\\,$ 的 Caputo 记忆核是 $\\,K(t)=\\dfrac{t^{-\\alpha}}{\\Gamma(1-\\alpha)}\\,$，其中 $\\,\\Gamma(\\cdot)\\,$ 是伽马函数。\n- 对于 $\\,\\alpha\\in(0,1)\\,$ 有效的拉普拉斯变换恒等式是\n$$\n\\int_{0}^{\\infty} s^{\\alpha-1}\\,e^{-s t}\\,ds \\;=\\; \\Gamma(\\alpha)\\,t^{-\\alpha},\\quad t>0.\n$$\n\nA部分（推导）。\n\n- 使用上述恒等式，推导出积分表示\n$$\nK(t)\\;=\\;\\frac{1}{\\Gamma(1-\\alpha)\\,\\Gamma(\\alpha)}\\int_{0}^{\\infty} s^{\\alpha-1}e^{-s t}\\,ds,\\quad t>0.\n$$\n- 进行变量替换 $\\,s=e^{x}\\,$ 以证明\n$$\nK(t)\\;=\\;c_{\\alpha}\\int_{-\\infty}^{\\infty} e^{\\alpha x}\\,e^{-t e^{x}}\\,dx,\\quad\\text{其中}\\quad c_{\\alpha}=\\frac{1}{\\Gamma(1-\\alpha)\\,\\Gamma(\\alpha)}.\n$$\n- 通过在均匀网格 $\\,x_{k}=x_{\\min}+k h\\,$（其中 $\\,k=0,1,\\dots,N-1\\,$，间距 $\\,h>0\\,$）上使用梯形法则，并将积分截断到有限区间 $[x_{\\min},x_{\\max}]$，来近似 $\\,x\\in\\mathbb{R}\\,$ 上的积分。证明这会产生在 $[t_{\\min},t_{\\max}]$ 上的一个指数和近似，其形式为\n$$\nK(t)\\;\\approx\\;\\sum_{k=0}^{N-1} w_{k}\\,e^{-\\lambda_{k}\\,t},\\quad\n\\lambda_{k}=e^{x_{k}},\\quad\nw_{k}=c_{\\alpha}\\,h\\,e^{\\alpha x_{k}}.\n$$\n- 基于被积函数在 $\\,s\\sim \\alpha/t\\,$ 处的峰值，提出一个根据 $\\,\\alpha\\,$, $\\,t_{\\min}\\,$, $\\,t_{\\max}\\,$ 和一个无量纲安全裕度 $\\,M>0\\,$ 来选择 $\\,x_{\\min}\\,$ 和 $\\,x_{\\max}\\,$ 的确定性规则。一个可接受的选择是\n$$\ns_{\\min}=\\frac{\\alpha}{t_{\\max}}\\,e^{-M},\\quad\ns_{\\max}=\\frac{\\alpha}{t_{\\min}}\\,e^{+M},\\quad\nx_{\\min}=\\log s_{\\min},\\quad\nx_{\\max}=\\log s_{\\max},\\quad\nN=1+\\left\\lceil\\frac{x_{\\max}-x_{\\min}}{h}\\right\\rceil.\n$$\n解释为什么对于所有 $\\,t\\in[t_{\\min},t_{\\max}]$，这个选择能一致地捕捉到对积分的主要贡献部分。\n\nB部分（算法和误差估计）。\n\n- 实现一个函数，给定 $\\,\\alpha\\in(0,1)\\,$, $\\,t_{\\min}>0\\,$, $\\,t_{\\max}>t_{\\min}\\,$, 网格间距 $\\,h>0\\,$ 和裕度 $\\,M>0\\,$，该函数返回按上述方法构造的指数和参数 $\\{(\\lambda_{k},w_{k})\\}_{k=0}^{N-1}$。\n- 实现一个函数，用于在 $[t_{\\min},t_{\\max}]$ 区间内一个包含 $\\,J\\,$ 个点的对数间隔网格 $\\,\\{t_{j}\\}\\,$ 上，评估近似的最大相对误差：\n$$\n\\varepsilon_{\\max}\\;=\\;\\max_{1\\le j\\le J}\\frac{\\left|\\sum_{k=0}^{N-1}w_{k}e^{-\\lambda_{k} t_{j}}-K(t_{j})\\right|}{K(t_{j})}.\n$$\n量 $\\,\\varepsilon_{\\max}\\,$ 是无量纲的，不需要单位。\n- 对于下面的每个测试用例，您的程序必须报告数值对 $[N,\\varepsilon_{\\max}]$，其中 $\\,N\\,$ 是指数项的数量，$\\,\\varepsilon_{\\max}\\,$ 是在 $\\,J$ 个对数间隔点上计算出的最大相对误差。\n\n测试套件。\n\n- 所有用例均使用 $\\,J=1000\\,$ 个评估点。\n- 用例 1：$\\alpha=0.5$, $t_{\\min}=10^{-3}$, $t_{\\max}=10^{0}$, $h=0.5$, $M=6$。\n- 用例 2：$\\alpha=0.1$, $t_{\\min}=10^{-4}$, $t_{\\max}=10^{1}$, $h=0.4$, $M=8$。\n- 用例 3：$\\alpha=0.9$, $t_{\\min}=10^{-3}$, $t_{\\max}=10^{0}$, $h=0.4$, $M=8$。\n\n最终输出格式。\n\n- 您的程序应生成一行输出，其中包含用方括号括起来的逗号分隔列表形式的结果。每个条目本身必须是如上所述的双元素列表 $[N,\\varepsilon_{\\max}]$，并与测试套件的顺序相同。例如，打印的行应如下所示：$[\\,[N_{1},\\varepsilon_{\\max,1}],[N_{2},\\varepsilon_{\\max,2}],[N_{3},\\varepsilon_{\\max,3}]\\,]$。", "solution": "问题陈述已经过严格验证，被认为是科学上合理、适定且客观的。它提出了分数阶微分方程数值分析中一个标准且重要的问题。其前提在事实上是正确的，定义是明确的，所描述的任务可以形式化为一个可解问题。它既不平凡也非不适定。因此，我将按要求进行完整的推导和算法说明。\n\nCaputo 核 $K(t)$ 的指数和近似的推导过程如前所述，分为四个步骤。\n\n首先，我们建立核的积分表示。问题给出了阶数为 $\\alpha \\in (0,1)$ 的时间分数阶导数的核定义为\n$$\nK(t) = \\frac{t^{-\\alpha}}{\\Gamma(1-\\alpha)}, \\quad t>0,\n$$\n其中 $\\Gamma(\\cdot)$ 是欧拉伽马函数。我们还得到了拉普拉斯变换恒等式\n$$\n\\Gamma(\\alpha) t^{-\\alpha} = \\int_{0}^{\\infty} s^{\\alpha-1} e^{-st} ds, \\quad t>0.\n$$\n根据这个恒等式，我们可以将 $t^{-\\alpha}$ 表示为 $t^{-\\alpha} = \\frac{1}{\\Gamma(\\alpha)} \\int_{0}^{\\infty} s^{\\alpha-1} e^{-st} ds$。将此式直接代入 $K(t)$ 的定义，即可得到所需的积分表示：\n$$\nK(t) = \\frac{1}{\\Gamma(1-\\alpha)} \\left( \\frac{1}{\\Gamma(\\alpha)} \\int_{0}^{\\infty} s^{\\alpha-1} e^{-st} ds \\right) = \\frac{1}{\\Gamma(1-\\alpha)\\Gamma(\\alpha)} \\int_{0}^{\\infty} s^{\\alpha-1} e^{-st} ds.\n$$\n\n其次，我们进行变量替换，将积分转换为更适合数值积分的形式。设积分变量通过替换 $s = e^x$ 从 $s$ 变为 $x$。这意味着 $ds = e^x dx$。当 $s$ 从 $0$ 变化到 $\\infty$ 时，新变量 $x$ 从 $-\\infty$ 变化到 $\\infty$。项 $s^{\\alpha-1}$ 变为 $(e^x)^{\\alpha-1} = e^{(\\alpha-1)x}$。积分变换如下：\n$$\n\\int_{0}^{\\infty} s^{\\alpha-1} e^{-st} ds = \\int_{-\\infty}^{\\infty} e^{(\\alpha-1)x} e^{-t e^x} (e^x dx) = \\int_{-\\infty}^{\\infty} e^{\\alpha x - x} e^{-t e^x} e^x dx = \\int_{-\\infty}^{\\infty} e^{\\alpha x} e^{-t e^x} dx.\n$$\n因此，核 $K(t)$ 表示为在整个实线上的积分：\n$$\nK(t) = c_{\\alpha} \\int_{-\\infty}^{\\infty} e^{\\alpha x} e^{-t e^x} dx,\n$$\n其中常数 $c_{\\alpha}$ 定义为 $c_{\\alpha} = \\frac{1}{\\Gamma(1-\\alpha)\\Gamma(\\alpha)}$。\n\n第三，我们使用数值积分法则来近似这个无穷积分。问题指定了在均匀网格上使用梯形法则，当被积函数在 $\\pm\\infty$ 处足够快地衰减到零时，这是一种在 $\\mathbb{R}$ 上求解积分的高效方法。积分被截断到有限区间 $[x_{\\min}, x_{\\max}]$，并以均匀步长 $h$ 进行离散化。设网格点为 $x_k = x_{\\min} + kh$，其中 $k=0, 1, \\dots, N-1$，$N$ 是点的数量。梯形法则（对于在 $\\mathbb{R}$ 上的指数衰减被积函数，它简化为权重等于步长 $h$ 的矩形法则）将积分近似为：\n$$\n\\int_{x_{\\min}}^{x_{\\max}} f(x) dx \\approx h \\sum_{k=0}^{N-1} f(x_k).\n$$\n将此应用于我们的被积函数 $f(x, t) = e^{\\alpha x} e^{-t e^x}$，我们得到 $K(t)$ 的近似：\n$$\nK(t) \\approx c_{\\alpha} h \\sum_{k=0}^{N-1} e^{\\alpha x_k} e^{-t e^{x_k}}.\n$$\n这个表达式正是关于变量 $t$ 的指数和。通过定义求积节点 $\\lambda_k = e^{x_k}$ 和相应的权重 $w_k = c_{\\alpha} h e^{\\alpha x_k}$，我们得到了所需的形式：\n$$\nK(t) \\approx \\sum_{k=0}^{N-1} w_k e^{-\\lambda_k t}.\n$$\n\n第四，我们必须证明截断积分域 $[x_{\\min}, x_{\\max}]$ 选择的合理性。对于给定窗口 $[t_{\\min}, t_{\\max}]$ 内的所有 $t$，近似必须是一致精确的。对于任何固定的 $t>0$，被积函数 $f(x, t) = e^{\\alpha x} e^{-t e^x}$ 关于 $x$ 有一个单峰。为了找到这个峰值的位置，我们将其关于 $x$ 的偏导数设为零：\n$$\n\\frac{\\partial f}{\\partial x} = \\alpha e^{\\alpha x} e^{-t e^x} - t e^x e^{\\alpha x} e^{-t e^x} = f(x,t) (\\alpha - t e^x) = 0.\n$$\n这给出了峰值位置 $e^x = \\alpha/t$，或 $x_{\\text{peak}}(t) = \\log(\\alpha/t)$。当 $t$ 从 $t_{\\min}$ 变化到 $t_{\\max}$ 时，被积函数的峰值在区间 $[\\log(\\alpha/t_{\\max}), \\log(\\alpha/t_{\\min})]$ 上移动。为了使求积精确，积分域 $[x_{\\min}, x_{\\max}]$ 必须包含峰值位置的整个范围。被积函数在远离其峰值时迅速衰减。所提出的规则...，构建了一个包含峰值位置范围的区间，并通过一个无量纲安全裕度 $M$ 对其进行对称扩展。这确保了对于任何 $t \\in [t_{\\min}, t_{\\max}]$，被积函数的峰值都很好地落在求积域内，并且只要 $M$ 足够大，$[x_{\\min}, x_{\\max}]$ 之外的尾部贡献可以忽略不计。求积点数 $N$ 的选择是为了用指定的间距 $h$ 覆盖这个域：$N = 1 + \\lceil(x_{\\max}-x_{\\min})/h\\rceil$。\n\n对于实现部分，我们基于此推导定义一个算法。首先，一个函数计算指数和参数。给定 $\\alpha, t_{\\min}, t_{\\max}, h, M$，它计算 $c_{\\alpha}, x_{\\min}, x_{\\max}$ 和 $N$。然后它生成网格 $x_k$ 并根据推导出的公式计算集合 $\\{\\lambda_k\\}$ 和 $\\{w_k\\}$。其次，一个误差估计函数接收这些参数并评估近似的质量。它在 $[t_{\\min}, t_{\\max}]$ 上构建一个包含 $J$ 个点的精细对数间隔网格 $\\{t_j\\}$。在每个点 $t_j$，它使用伽马函数计算精确的核值 $K(t_j)$，并通过对指数级数求和来计算近似值。然后确定该网格上的最大相对误差 $\\varepsilon_{\\max}$。这个过程为近似在目标时间窗内的准确性提供了一个可靠的估计。所需的特殊函数 $\\Gamma(\\cdot)$ 可在 `scipy.special` 库中找到。为了提高效率，所有数组操作都使用 `numpy` 进行矢量化。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import gamma\n\ndef solve():\n    \"\"\"\n    Derives and implements a sum-of-exponentials approximation for the\n    Caputo fractional derivative kernel and evaluates its accuracy.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (alpha, t_min, t_max, h, M)\n        (0.5, 1e-3, 1.0, 0.5, 6),\n        (0.1, 1e-4, 10.0, 0.4, 8),\n        (0.9, 1e-3, 1.0, 0.4, 8),\n    ]\n\n    # Number of evaluation points for error estimation.\n    J = 1000\n\n    results = []\n    for case in test_cases:\n        alpha, t_min, t_max, h, M = case\n\n        # Part A: Derive sum-of-exponentials parameters {lambda_k, w_k}\n        \n        # Calculate the integration bounds in the s-domain and x-domain\n        s_min = (alpha / t_max) * np.exp(-M)\n        s_max = (alpha / t_min) * np.exp(M)\n        x_min = np.log(s_min)\n        x_max = np.log(s_max)\n        \n        # Determine the number of quadrature points, N, to cover the interval [x_min, x_max]\n        # The number of points is the number of intervals plus one.\n        num_intervals = int(np.ceil((x_max - x_min) / h))\n        N = num_intervals + 1\n        \n        # Construct the uniform grid for the trapezoidal rule\n        k = np.arange(N)\n        x_k = x_min + k * h\n        \n        # Calculate the constant c_alpha\n        c_alpha = 1.0 / (gamma(alpha) * gamma(1.0 - alpha))\n        \n        # Calculate the exponents (lambda_k) and weights (w_k)\n        lambdas = np.exp(x_k)\n        weights = c_alpha * h * np.exp(alpha * x_k)\n        \n        # Part B: Estimate the maximal relative error\n\n        # Create a logarithmically spaced grid of J points for t\n        t_grid = np.logspace(np.log10(t_min), np.log10(t_max), J)\n        \n        # Calculate the exact kernel values, K(t)\n        K_exact = (t_grid**(-alpha)) / gamma(1.0 - alpha)\n        \n        # Calculate the approximate kernel values using the sum-of-exponentials\n        # This is vectorized for efficiency: weights are (N,1), exp term is (N,J)\n        K_approx = np.sum(weights[:, np.newaxis] * np.exp(-lambdas[:, np.newaxis] * t_grid[np.newaxis, :]), axis=0)\n        \n        # Compute the relative error at each point in t_grid\n        relative_errors = np.abs(K_approx - K_exact) / K_exact\n        \n        # Find the maximum relative error over the interval\n        max_relative_error = np.max(relative_errors)\n        \n        results.append([N, max_relative_error])\n\n    # Final print statement in the exact required format.\n    # The format [[N1,eps1],[N2,eps2],...] without extra spaces is achieved\n    # by constructing the string representation for each pair manually.\n    formatted_results = [f\"[{N},{eps}]\" for N, eps in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2512393"}]}