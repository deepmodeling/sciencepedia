{"hands_on_practices": [{"introduction": "分析解在辐射传输领域中扮演着至关重要的角色，它们不仅为复杂的数值方法提供了基准，也揭示了控制辐射场的基本物理原理。本练习将引导你从第一性原理出发，为一个经典场景——均匀、等温、无散射的平板——推导辐射强度和热流的精确解析解。通过这个实践，你将加深对辐射传输方程微分形式与最终可观测物理量之间内在联系的理解，并掌握求解这类问题的核心数学技巧。[@problem_id:2529717]", "problem": "一块厚度为 $L$ 的平面平行、均匀、无散射的参与性介质板占据 $0 \\le x \\le L$ 的空间。该介质板两侧均为真空。折射率为1，且界面处的折射可以忽略。该介质在均匀温度 $T_0$ 下，处于局域热动平衡（LTE）状态，表现为纯吸收和热发射。设光谱吸收系数为常数 $\\kappa_{\\nu}$，且根据 Kirchhoff 定律，LTE下的光谱源函数由 $S_{\\nu} = B_{\\nu}(T_0)$ 给出，其中 $B_{\\nu}$ 是频率为 $\\nu$ 时的 Planck 函数。考虑光谱比辐射强度 $I_{\\nu}(x,\\mu)$，其中 $\\mu = \\cos\\theta \\in (-1,1)$，$\\theta$ 是从 $+x$ 轴（以弧度为单位）测量的极角。不存在外部辐照：对于 $\\mu \\in (0,1]$ 有 $I_{\\nu}(0,\\mu) = 0$，对于 $\\mu \\in [-1,0)$ 有 $I_{\\nu}(L,\\mu) = 0$。从参与性介质中沿射线的辐射能量守恒以及LTE下吸收和发射的定义出发，推导以下物理量的精确闭式表达式：\n- 针对 $\\mu \\in (0,1]$ 和 $\\mu \\in [-1,0)$ 的内部角向辐射强度 $I_{\\nu}(x,\\mu)$，以及\n- 从两个边界出射的半球光谱通量，\n$$F_{\\nu,\\text{out}}(0) = 2\\pi \\int_{-1}^{0} \\big(-\\mu\\big)\\, I_{\\nu}(0,\\mu)\\, d\\mu,\\qquad F_{\\nu,\\text{out}}(L) = 2\\pi \\int_{0}^{1} \\mu\\, I_{\\nu}(L,\\mu)\\, d\\mu.$$\n用指数积分 $E_3(\\tau)$ 表示最终的通量结果，其中光学厚度 $\\tau = \\kappa_{\\nu} L$。您的推导必须从沿特征线的辐射能量守恒开始，不得引用任何现成的辐射传输解。用 $B_{\\nu}(T_0)$、$\\kappa_{\\nu}$、$L$ 和 $\\mu$ 表示您的最终表达式。最终答案必须是闭式解析表达式。通量单位以 $\\mathrm{W\\, m^{-2}\\, Hz^{-1}}$ 表示。不要进行任何数值计算或四舍五入。", "solution": "所述问题在物理上和数学上是合理的、自洽的且适定的。我们将着手求解。\n\n控制辐射能量传输的基本原理是沿射线路径的能量守恒。在参与性介质中，沿微分路径长度 $ds$ 的光谱比辐射强度变化量 $dI_{\\nu}$ 是发射增益和吸收损耗之和。表示为：\n$$ \\frac{dI_{\\nu}}{ds} = -\\alpha_{\\nu}I_{\\nu} + j_{\\nu} $$\n其中 $\\alpha_{\\nu}$ 是吸收系数，$j_{\\nu}$ 是发射系数。问题指出介质是无散射的，因此不存在散射项。在局域热动平衡（LTE）条件下，Kirchhoff 定律通过 Planck 函数 $B_{\\nu}(T)$ 将发射系数和吸收系数联系起来。对于折射率为1的介质，该关系为 $j_{\\nu} = \\alpha_{\\nu} B_{\\nu}(T)$。问题给出的光谱吸收系数为 $\\kappa_{\\nu}$，它是 $\\alpha_{\\nu}$ 的同义词。因此，$j_{\\nu} = \\kappa_{\\nu} B_{\\nu}(T_0)$，其中温度 $T_0$ 在整个介质板内是均匀的。\n\n传输方程变为：\n$$ \\frac{dI_{\\nu}}{ds} = -\\kappa_{\\nu}I_{\\nu} + \\kappa_{\\nu}B_{\\nu}(T_0) $$\n对于平面平行几何结构，沿射线的路径长度 $ds$ 与垂直于板的坐标 $x$ 之间的关系为 $ds = \\frac{dx}{\\mu}$，其中 $\\mu = \\cos\\theta$，$\\theta$ 是相对于 $+x$ 轴的极角。将此代入方程，得到该问题的一维辐射传输方程（RTE）：\n$$ \\mu \\frac{dI_{\\nu}(x, \\mu)}{dx} = -\\kappa_{\\nu}I_{\\nu}(x, \\mu) + \\kappa_{\\nu}B_{\\nu}(T_0) $$\n这是一个关于 $x$ 的 $I_{\\nu}$ 的一阶线性常微分方程，我们将在给定的边界条件下求解它。该方程可以重新排列为：\n$$ \\frac{dI_{\\nu}}{dx} + \\frac{\\kappa_{\\nu}}{\\mu} I_{\\nu} = \\frac{\\kappa_{\\nu}}{\\mu} B_{\\nu}(T_0) $$\n我们使用积分因子法。积分因子是 $\\exp\\left(\\int \\frac{\\kappa_{\\nu}}{\\mu} dx\\right) = \\exp\\left(\\frac{\\kappa_{\\nu}x}{\\mu}\\right)$，因为 $\\kappa_{\\nu}$ 和 $\\mu$ 相对于 $x$ 是常数。将RTE乘以积分因子，得到：\n$$ \\frac{d}{dx}\\left[I_{\\nu}(x,\\mu)\\exp\\left(\\frac{\\kappa_{\\nu}x}{\\mu}\\right)\\right] = \\frac{\\kappa_{\\nu}}{\\mu} B_{\\nu}(T_0) \\exp\\left(\\frac{\\kappa_{\\nu}x}{\\mu}\\right) $$\n对 $x$ 从参考位置 $x_0$ 积分到 $x$：\n$$ I_{\\nu}(x,\\mu)\\exp\\left(\\frac{\\kappa_{\\nu}x}{\\mu}\\right) - I_{\\nu}(x_0,\\mu)\\exp\\left(\\frac{\\kappa_{\\nu}x_0}{\\mu}\\right) = \\int_{x_0}^{x} \\frac{\\kappa_{\\nu}}{\\mu} B_{\\nu}(T_0) \\exp\\left(\\frac{\\kappa_{\\nu}x'}{\\mu}\\right) dx' $$\n由于 $B_{\\nu}(T_0)$ 是常数，该积分很简单：\n$$ \\int_{x_0}^{x} \\frac{\\kappa_{\\nu}}{\\mu} B_{\\nu}(T_0) \\exp\\left(\\frac{\\kappa_{\\nu}x'}{\\mu}\\right) dx' = B_{\\nu}(T_0) \\left[\\exp\\left(\\frac{\\kappa_{\\nu}x'}{\\mu}\\right)\\right]_{x_0}^{x} = B_{\\nu}(T_0)\\left[\\exp\\left(\\frac{\\kappa_{\\nu}x}{\\mu}\\right) - \\exp\\left(\\frac{\\kappa_{\\nu}x_0}{\\mu}\\right)\\right] $$\n因此，形式解为：\n$$ I_{\\nu}(x,\\mu) = I_{\\nu}(x_0,\\mu)\\exp\\left(-\\frac{\\kappa_{\\nu}(x-x_0)}{\\mu}\\right) + B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}(x-x_0)}{\\mu}\\right)\\right] $$\n现在，我们对两种不同的传播方向分别应用具体的边界条件。\n\n**第1部分：内部角向辐射强度 $I_{\\nu}(x,\\mu)$**\n\n情况1：辐射沿正向传播，$\\mu \\in (0,1]$。\n辐射源自 $x=0$ 处的边界。我们设定参考位置 $x_0 = 0$。边界条件为 $I_{\\nu}(0,\\mu)=0$。\n将其代入形式解：\n$$ I_{\\nu}(x,\\mu) = 0 \\cdot \\exp\\left(-\\frac{\\kappa_{\\nu}x}{\\mu}\\right) + B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}x}{\\mu}\\right)\\right] $$\n$$ I_{\\nu}(x,\\mu) = B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}x}{\\mu}\\right)\\right] \\quad \\text{for } \\mu \\in (0,1] $$\n\n情况2：辐射沿反向传播，$\\mu \\in [-1,0)$。\n辐射源自 $x=L$ 处的边界。我们设定参考位置 $x_0 = L$。边界条件为 $I_{\\nu}(L,\\mu)=0$。\n将其代入形式解：\n$$ I_{\\nu}(x,\\mu) = I_{\\nu}(L,\\mu)\\exp\\left(-\\frac{\\kappa_{\\nu}(x-L)}{\\mu}\\right) + B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}(x-L)}{\\mu}\\right)\\right] $$\n$$ I_{\\nu}(x,\\mu) = 0 \\cdot \\exp\\left(-\\frac{\\kappa_{\\nu}(x-L)}{\\mu}\\right) + B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}(x-L)}{\\mu}\\right)\\right] $$\n$$ I_{\\nu}(x,\\mu) = B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}(x-L)}{\\mu}\\right)\\right] \\quad \\text{for } \\mu \\in [-1,0) $$\n注意，对于 $\\mu < 0$，由于 $x < L$，指数的参数 $(x-L)/\\mu$ 是正的，这确保了辐射强度在从 $x=L$ 处传播进入介质时，会从零开始增加。\n\n**第2部分：出射半球光谱通量**\n\n边界 $x=L$ 处的通量：\n$x=L$ 处的出射通量是由沿方向 $\\mu \\in (0,1]$ 传播的辐射引起的。提供的表达式为：\n$$ F_{\\nu,\\text{out}}(L) = 2\\pi \\int_0^1 \\mu I_{\\nu}(L,\\mu) d\\mu $$\n我们使用 $\\mu > 0$ 时 $I_{\\nu}(x,\\mu)$ 的表达式，并计算其在 $x=L$ 处的值：\n$$ I_{\\nu}(L,\\mu) = B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}L}{\\mu}\\right)\\right] $$\n将此代入通量积分：\n$$ F_{\\nu,\\text{out}}(L) = 2\\pi B_{\\nu}(T_0) \\int_0^1 \\mu \\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}L}{\\mu}\\right)\\right] d\\mu $$\n$$ F_{\\nu,\\text{out}}(L) = 2\\pi B_{\\nu}(T_0) \\left[ \\int_0^1 \\mu d\\mu - \\int_0^1 \\mu \\exp\\left(-\\frac{\\kappa_{\\nu}L}{\\mu}\\right) d\\mu \\right] $$\n第一个积分是初等的：$\\int_0^1 \\mu d\\mu = \\left[\\frac{\\mu^2}{2}\\right]_0^1 = \\frac{1}{2}$。\n第二个积分与指数积分函数 $E_n(z)$ 有关。一个标准定义是 $E_n(z) = \\int_0^1 u^{n-2} \\exp(-z/u) du$。\n令光学厚度为 $\\tau = \\kappa_{\\nu}L$。该积分为 $\\int_0^1 \\mu \\exp(-\\tau/\\mu) d\\mu$。\n与定义相比较，我们设 $u=\\mu$，$z=\\tau$ 且 $n-2=1$，这意味着 $n=3$。\n因此，$\\int_0^1 \\mu \\exp(-\\tau/\\mu) d\\mu = E_3(\\tau) = E_3(\\kappa_{\\nu}L)$。\n代回后，通量为：\n$$ F_{\\nu,\\text{out}}(L) = 2\\pi B_{\\nu}(T_0) \\left[ \\frac{1}{2} - E_3(\\kappa_{\\nu}L) \\right] = \\pi B_{\\nu}(T_0) \\left[ 1 - 2E_3(\\kappa_{\\nu}L) \\right] $$\n\n边界 $x=0$ 处的通量：\n$x=0$ 处的出射通量是由沿方向 $\\mu \\in [-1,0)$ 传播的辐射引起的。表达式为：\n$$ F_{\\nu,\\text{out}}(0) = 2\\pi \\int_{-1}^0 (-\\mu) I_{\\nu}(0,\\mu) d\\mu $$\n我们使用 $\\mu < 0$ 时 $I_{\\nu}(x,\\mu)$ 的表达式，并计算其在 $x=0$ 处的值：\n$$ I_{\\nu}(0,\\mu) = B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}(0-L)}{\\mu}\\right)\\right] = B_{\\nu}(T_0)\\left[1 - \\exp\\left(\\frac{\\kappa_{\\nu}L}{\\mu}\\right)\\right] $$\n为了计算该积分，我们进行变量代换。令 $\\mu' = -\\mu$。则 $d\\mu = -d\\mu'$。积分限从 $[-1,0)$ 变为 $(1,0]$。\n$$ F_{\\nu,\\text{out}}(0) = 2\\pi \\int_1^0 \\mu' I_{\\nu}(0,-\\mu') (-d\\mu') = 2\\pi \\int_0^1 \\mu' I_{\\nu}(0,-\\mu') d\\mu' $$\n以 $\\mu'$ 表示的强度为：\n$$ I_{\\nu}(0,-\\mu') = B_{\\nu}(T_0)\\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}L}{\\mu'}\\right)\\right] $$\n将此代入 $F_{\\nu,\\text{out}}(0)$ 的积分中：\n$$ F_{\\nu,\\text{out}}(0) = 2\\pi B_{\\nu}(T_0) \\int_0^1 \\mu' \\left[1 - \\exp\\left(-\\frac{\\kappa_{\\nu}L}{\\mu'}\\right)\\right] d\\mu' $$\n该积分的形式与 $F_{\\nu,\\text{out}}(L)$ 的积分形式相同，只是哑积分变量是 $\\mu'$ 而不是 $\\mu$。因此，计算过程是相同的。\n$$ F_{\\nu,\\text{out}}(0) = \\pi B_{\\nu}(T_0) \\left[ 1 - 2E_3(\\kappa_{\\nu}L) \\right] $$\n出射通量相等，$F_{\\nu,\\text{out}}(0) = F_{\\nu,\\text{out}}(L)$，这是该问题物理对称性的必然结果：一个均匀、等温且边界条件对称的介质板必然从两侧同等地辐射。光谱通量的单位确实是 $\\mathrm{W \\cdot m^{-2} \\cdot Hz^{-1}}$，因为 $B_{\\nu}(T_0)$ 的单位是 $\\mathrm{W \\cdot m^{-2} \\cdot sr^{-1} \\cdot Hz^{-1}}$，而乘以因子 $\\mu$ 并对立体角进行积分消除了对球面度的依赖。", "answer": "$$ \\boxed{\\begin{pmatrix} B_{\\nu}(T_0)\\left(1 - \\exp\\left(-\\frac{\\kappa_{\\nu} x}{\\mu}\\right)\\right) & B_{\\nu}(T_0)\\left(1 - \\exp\\left(-\\frac{\\kappa_{\\nu}(x-L)}{\\mu}\\right)\\right) & \\pi B_{\\nu}(T_0) \\left( 1 - 2E_3(\\kappa_{\\nu} L) \\right) & \\pi B_{\\nu}(T_0) \\left( 1 - 2E_3(\\kappa_{\\nu} L) \\right) \\end{pmatrix}} $$", "id": "2529717"}, {"introduction": "离散纵标法（Discrete Ordinates Method, DOM 或 $S_N$）是求解辐射传输方程最常用和最强大的确定性数值方法之一。然而，仅仅实现一个数值算法只是第一步，验证其正确性同样至关重要。本练习将指导你完成一次正式的收敛性研究，包括空间网格和角度剖分的精细化分析，这是验证数值方案准确性并理解其理论收敛阶的标准化流程。这项实践对于任何开发或使用科学计算程序的人来说都是一项关键技能。[@problem_id:2529728]", "problem": "考虑一个厚度为 $L$ 的均匀平行平板中的稳态、一维、灰体辐射输运，该平板具有各向同性散射和等温发射特性。设 $x \\in [0,L]$ 表示位置，$\\mu \\in [-1,1]$ 表示相对于平板法线的方向余弦。比辐射强度 $I(x,\\mu)$ 满足稳态辐射输运方程 (RTE)\n$$\n\\mu \\frac{d I(x,\\mu)}{dx} + \\sigma_t I(x,\\mu) = \\sigma_a B + \\frac{\\sigma_s}{2} \\phi(x),\n$$\n其中 $\\sigma_t = \\sigma_a + \\sigma_s$ 是总消光系数，$\\sigma_a$ 是吸收系数，$\\sigma_s$ 是散射系数，$B$ 是一个给定的常数黑体源（等温、灰体），$\\phi(x)$ 是标量通量，定义为\n$$\n\\phi(x) = \\int_{-1}^{1} I(x,\\mu) \\, d\\mu.\n$$\n假设边界为真空（无入射辐射）：对于 $\\mu > 0$，有 $I(0,\\mu) = 0$；对于 $\\mu < 0$，有 $I(L,\\mu) = 0$。系数 $\\sigma_a$、$\\sigma_s$ 和 $\\sigma_t$ 的单位为 $\\mathrm{m}^{-1}$，$x$ 和 $L$ 的单位为 $\\mathrm{m}$，$B$ 的单位为一致的辐射度量单位。\n\n您的任务是：\n- 使用离散纵标法（也称为 $S_N$ 法）对角度进行离散化，在区间 $[-1,1]$ 上采用 $N_\\mu$ 阶的 Gauss–Legendre 求积，其节点为 $\\{\\mu_k\\}_{k=1}^{N_\\mu}$，权重为 $\\{w_k\\}_{k=1}^{N_\\mu}$。\n- 使用包含 $N_x$ 个宽度为 $\\Delta x = L/N_x$ 的单元的均匀网格对空间进行离散化，并使用步进特征线格式沿特征线演化强度；该格式来源于在每个单元内对源项为分片常数的情况下的RTE进行精确积分。对于每个方向 $\\mu_k$，在一个单元内，当等效体积源 $S_i = \\sigma_a B + \\frac{\\sigma_s}{2} \\phi_i$ 被视为常数时，单元平均强度 $\\bar I_{i,k}$ 必须从该线性常微分方程的单元内精确解中获得，并在扫描方向上于平板两端施加真空边界条件。对于 $\\mu_k > 0$ 和 $\\mu_k < 0$ 的情况，从相应的边界开始进行定向扫描。\n- 使用源项迭代法通过各向同性散射耦合角度：给定 $\\{\\bar I_{i,k}^{(m)}\\}$，更新 $\\phi_i^{(m)} = \\sum_{k=1}^{N_\\mu} w_k \\bar I_{i,k}^{(m)}$，然后更新源项 $S_i^{(m)} = \\sigma_a B + \\frac{\\sigma_s}{2}\\phi_i^{(m)}$，并再次扫描以获得 $\\{\\bar I_{i,k}^{(m+1)}\\}$。迭代直至标量通量变化的无穷范数满足 $\\max_i |\\phi_i^{(m+1)} - \\phi_i^{(m)}| < \\varepsilon$。如果需要，您可以使用一个固定的 $\\lambda \\in (0,1]$ 进行简单松弛 $\\phi^{(m+1)} \\leftarrow \\lambda \\phi^{(m+1)} + (1-\\lambda)\\phi^{(m)}$。使用 $\\varepsilon = 10^{-8}$。\n- 通过选择最接近 $x^\\star$ 的单元中心来定义平板中心 $x^\\star = L/2$ 处的标量通量。将 $x^\\star$ 处的角度分辨强度定义为向量 $\\{\\bar I_k^\\star\\}_{k=1}^{N_\\mu}$，该向量汇集了 $x^\\star$ 处所有求积节点的单元平均强度。\n\n进行两项加密研究以构建观测收敛阶 (OOC)。\n- 在固定角度阶数下进行网格加密：固定一个高阶角度求积 $N_\\mu^{\\mathrm{ref}}$ 和一个精细空间参考网格 $N_x^{\\mathrm{ref}}$。对于一系列使用相同 $N_\\mu^{\\mathrm{ref}}$ 的较粗 $N_x$ 值，计算在 $x^\\star$ 处相对于精细网格上参考解的误差。使用：\n  - 标量通量误差 $e_\\phi(N_x) = \\big|\\phi^\\star(N_x) - \\phi^\\star(N_x^{\\mathrm{ref}})\\big|$。\n  - 强度误差 $e_I(N_x) = \\left(\\frac{\\sum_{k=1}^{N_\\mu^{\\mathrm{ref}}} w_k \\left(\\bar I_k^\\star(N_x) - \\bar I_k^\\star(N_x^{\\mathrm{ref}})\\right)^2}{\\sum_{k=1}^{N_\\mu^{\\mathrm{ref}}} w_k}\\right)^{1/2}$。\n  - 两个连续网格 $N_x^{(c)}$ （较粗）和 $N_x^{(f)}$ （较细）之间的观测收敛阶为\n    $$\n    p_x = \\frac{\\ln\\left(e(N_x^{(c)})/e(N_x^{(f)})\\right)}{\\ln\\left(h_x^{(c)}/h_x^{(f)}\\right)}, \\quad h_x = \\frac{L}{N_x}.\n    $$\n  使用列表中最精细的两个网格，分别为 $e_\\phi$ 和 $e_I$ 单独计算 $p_x$。\n- 在固定空间分辨率下进行角度加密：固定一个精细空间网格 $N_x^{\\mathrm{ref}}$ 和一个高阶角度参考 $N_\\mu^{\\mathrm{ref}}$。对于一系列较粗的 $N_\\mu$ 值，计算在 $x^\\star$ 处相对于参考解的误差。使用：\n  - 标量通量误差 $e_\\phi(N_\\mu) = \\big|\\phi^\\star(N_\\mu) - \\phi^\\star(N_\\mu^{\\mathrm{ref}})\\big|$。\n  - 强度误差 $e_I(N_\\mu)$ 定义为对角度的加权 $L^2$ 范数，通过首先将粗角度强度 $\\{\\bar I_k^\\star(N_\\mu)\\}$ 从其节点 $\\{\\mu_k\\}$ 插值到参考节点 $\\{\\mu_j^{\\mathrm{ref}}\\}$，然后计算\n    $$\n    e_I(N_\\mu) = \\left(\\frac{\\sum_{j=1}^{N_\\mu^{\\mathrm{ref}}} w_j^{\\mathrm{ref}} \\left(\\tilde I^\\star(\\mu_j^{\\mathrm{ref}}; N_\\mu) - \\bar I_j^\\star(N_\\mu^{\\mathrm{ref}})\\right)^2}{\\sum_{j=1}^{N_\\mu^{\\mathrm{ref}}} w_j^{\\mathrm{ref}}}\\right)^{1/2},\n    $$\n    其中 $\\tilde I^\\star(\\mu_j^{\\mathrm{ref}}; N_\\mu)$ 是在 $\\mu_j^{\\mathrm{ref}}$ 处求值的作为 $\\mu$ 函数的粗角度强度的分片线性插值。\n  - 将角度观测阶定义为\n    $$\n    p_\\mu = \\frac{\\ln\\left(e(N_\\mu^{(c)})/e(N_\\mu^{(f)})\\right)}{\\ln\\left(h_\\mu^{(c)}/h_\\mu^{(f)}\\right)}, \\quad h_\\mu = \\frac{1}{N_\\mu}.\n    $$\n  使用列表中最精细的两个角度集，分别为 $e_\\phi$ 和 $e_I$ 单独计算 $p_\\mu$。\n\n使用以下两个物理上合理的基准情景（单位为 $\\mathrm{m}$ 和 $\\mathrm{m}^{-1}$，$B$ 的单位为任意但一致的辐射度量单位）。对于每个情景，按照规定执行两项加密研究，并计算四个观测收敛阶：标量通量的空间收敛阶、强度的空间收敛阶、标量通量的角度收敛阶和强度的角度收敛阶。\n- 情景 $\\mathcal{A}$ （中等光学厚度，中等散射）：$L = 1$, $\\sigma_t = 2$, $\\sigma_s = 1$, $B = 1$。\n- 情景 $\\mathcal{B}$ （光学上更厚，散射更强）：$L = 1$, $\\sigma_t = 5$, $\\sigma_s = 3.5$, $B = 1$。\n\n对测试套件使用以下离散化参数：\n- 参考分辨率：$N_x^{\\mathrm{ref}} = 400$, $N_\\mu^{\\mathrm{ref}} = 64$。\n- 在固定 $N_\\mu^{\\mathrm{ref}}$ 下的网格加密列表：$N_x \\in \\{50, 100, 200\\}$。\n- 在固定 $N_x^{\\mathrm{ref}}$ 下的角度加密列表：$N_\\mu \\in \\{8, 16, 32\\}$。\n- 迭代容差：$\\varepsilon = 10^{-8}$，并且您可以取松弛因子 $\\lambda = 1$。\n\n您的程序必须：\n- 以数值稳定和自包含的方式实现上述方法。\n- 对于每个情景，计算标量通量和强度的观测收敛阶 $p_x$（使用 $N_x$ 列表中的两个最精细网格），以及标量通量和强度的观测收敛阶 $p_\\mu$（使用 $N_\\mu$ 列表中的两个最高阶角度）。\n- 输出单行，包含一个含8个浮点数的列表，顺序如下：\n  - $\\left[p_x^{\\phi}(\\mathcal{A}), p_x^{I}(\\mathcal{A}), p_\\mu^{\\phi}(\\mathcal{A}), p_\\mu^{I}(\\mathcal{A}), p_x^{\\phi}(\\mathcal{B}), p_x^{I}(\\mathcal{B}), p_\\mu^{\\phi}(\\mathcal{B}), p_\\mu^{I}(\\mathcal{B})\\right]$。\n不得打印任何其他文本。因为这些是收敛阶，它们是无量纲的，所以最终输出中不需要物理单位。\n\n角度说明：方向余弦 $\\mu$ 是无量纲的，不需要角度单位。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔的结果列表（例如，$\\left[\\text{result}_1,\\text{result}_2,\\dots\\right]$）。", "solution": "问题陈述已被解析和验证。该问题被认定为具有科学依据、适定、客观且自包含。它描述了辐射传热领域的一个标准基准问题，并概述了求解该问题及其后续收敛性分析的有效数值方法。因此，该问题被确认为有效。\n\n该问题要求对具有各向同性散射和等温发射的平行平板内的稳态、一维、灰体辐射输运方程 (RTE) 进行数值求解。比辐射强度 $I(x, \\mu)$ 的控制方程为：\n$$\n\\mu \\frac{d I(x,\\mu)}{dx} + \\sigma_t I(x,\\mu) = \\sigma_a B + \\frac{\\sigma_s}{2} \\int_{-1}^{1} I(x,\\mu') \\, d\\mu' = S(x)\n$$\n其中 $x \\in [0, L]$ 是空间坐标，$\\mu \\in [-1, 1]$ 是方向余弦，$\\sigma_t$ 是消光系数，$\\sigma_a$ 是吸收系数，$\\sigma_s$ 是散射系数，$B$ 是常数黑体源项，$S(x)$ 是总体积源。该平板受真空边界条件约束，意味着没有辐射从外部进入：\n$$\nI(0, \\mu) = 0 \\quad \\text{for } \\mu > 0, \\quad \\text{and} \\quad I(L, \\mu) = 0 \\quad \\text{for } \\mu < 0.\n$$\n求解方法遵循一种结构化的数值方法，该方法涉及角度和空间的离散化，并通过一个迭代格式进行耦合。\n\n首先，使用离散纵标 ($S_N$) 法对角度依赖性进行离散化。源项中的积分被替换为具有节点 $\\{\\mu_k\\}$ 和权重 $\\{w_k\\}$ 的 $N_\\mu$ 阶 Gauss-Legendre 求积和。这将单个积分-微分方程转化为一个由 $N_\\mu$ 个常微分方程组成的耦合系统，每个方程对应一个离散方向 $\\mu_k$：\n$$\n\\mu_k \\frac{d I_k(x)}{dx} + \\sigma_t I_k(x) = \\sigma_a B + \\frac{\\sigma_s}{2} \\sum_{j=1}^{N_\\mu} w_j I_j(x), \\quad k=1, \\dots, N_\\mu\n$$\n其中 $I_k(x) \\equiv I(x, \\mu_k)$。\n\n其次，将空间域 $[0, L]$ 离散化为由 $N_x$ 个单元组成的均匀网格，每个单元的宽度为 $\\Delta x = L/N_x$。所采用的数值格式是步进特征线法。该方法假设总体源项在每个单元 $i$ 内是分片常数，取值为 $S_i$。在此假设下，每个方向 $k$ 和单元 $i$ 的常微分方程可以被精确求解。设 $I_{\\text{in},k}$ 为单元入射面上的强度。在穿过路径长度 $\\Delta x / |\\mu_k|$ 后，出射面上的强度 $I_{\\text{out},k}$ 由下式给出：\n$$\nI_{\\text{out},k} = I_{\\text{in},k} \\exp\\left(-\\frac{\\sigma_t \\Delta x}{|\\mu_k|}\\right) + \\frac{S_i}{\\sigma_t} \\left(1 - \\exp\\left(-\\frac{\\sigma_t \\Delta x}{|\\mu_k|}\\right)\\right)\n$$\n迭代更新所需的量是单元平均强度 $\\bar{I}_{i,k}$。通过将 $I_k(x)$ 的单元内精确解在单元宽度 $\\Delta x$ 上积分，我们得到以下关系：\n$$\n\\bar{I}_{i,k} = I_{\\text{in},k} \\left(\\frac{1 - \\exp(-\\tau_k)}{\\tau_k}\\right) + \\frac{S_i}{\\sigma_t} \\left(1 - \\frac{1 - \\exp(-\\tau_k)}{\\tau_k}\\right)\n$$\n其中 $\\tau_k = \\sigma_t \\Delta x / |\\mu_k|$ 是沿方向 $\\mu_k$ 的单元光学厚度。这些关系构成了输运扫描的基础。\n\n通过散射源项实现的角度间耦合采用源项迭代法求解。算法流程如下：\n1. 初始化所有单元 $i=1, \\dots, N_x$ 的标量通量场 $\\phi_i^{(0)}$（例如，设为零）。\n2. 对迭代次数 $m = 0, 1, 2, \\dots$：\n   a. 计算逐单元的常数源项 $S_i^{(m)} = \\sigma_a B + \\frac{\\sigma_s}{2} \\phi_i^{(m)}$。\n   b. 执行一次输运扫描以找到新的单元平均强度 $\\bar{I}_{i,k}^{(m+1)}$。对于每个方向 $\\mu_k > 0$，从 $x=0$ 扫描到 $x=L$（单元索引从 $i=1$ 到 $N_x$），使用真空边界条件 $I(0, \\mu_k)=0$。对于每个 $\\mu_k < 0$，从 $x=L$ 扫描到 $x=0$（单元索引从 $i=N_x$ 到 $1$），使用 $I(L, \\mu_k)=0$。在每个单元中，计算出射面强度，它将成为扫描方向上一个单元的入射强度，同时单元平均强度被存储。\n   c. 使用新的强度更新每个单元的标量通量：$\\phi_i^{\\text{new}} = \\sum_{k=1}^{N_\\mu} w_k \\bar{I}_{i,k}^{(m+1)}$。\n   d. 应用 $\\lambda=1$ 的简单松弛，因此 $\\phi_i^{(m+1)} = \\phi_i^{\\text{new}}$。\n   e. 通过比较新旧标量通量场来检查收敛性：$\\max_i |\\phi_i^{(m+1)} - \\phi_i^{(m)}| < \\varepsilon$。如果未收敛，则从步骤 2a 重复。\n\n最后，执行收敛性分析以确定空间和角度离散化的观测收敛阶 (OOC)。这是通过在一系列逐渐加密的网格/求积点上运行模拟，并将其与高分辨率参考解进行比较来完成的。OOC ($p$) 使用在两个连续的加密级别（一个较粗(c)，一个较细(f)）上的解，通过以下公式计算：\n$$\np = \\frac{\\ln(e_c / e_f)}{\\ln(h_c / h_f)}\n$$\n其中 $e$ 是误差范数，$h$ 是离散化参数（$\\Delta x$ 或 $1/N_\\mu$）。对于此问题，加密比 $h_c/h_f$ 始终为 $2$。平板中心处的标量通量 ($e_\\phi$) 和强度 ($e_I$) 的误差按问题中的规定计算。对于角度加密研究，强度误差的计算需要在计算加权均方根误差之前，将粗角度强度剖面通过分片线性插值到精细参考角度集上。\n\n提供的 Python 代码实现了这整个过程。一个主函数 `rte_solver` 封装了源项迭代和输运扫描的逻辑。主函数 `solve` 则为每个物理情景协调加密研究，为每个所需的 $(N_x, N_\\mu)$ 组合调用 `rte_solver`，计算误差，并最终计算每个情景所需的四个 OOC 值。", "answer": "```python\nimport numpy as np\nfrom numpy.polynomial.legendre import leggauss\n\ndef rte_solver(L, sigma_t, sigma_s, B, Nx, Nmu, tol=1e-8, relax=1.0):\n    \"\"\"\n    Solves the 1D RTE using Discrete Ordinates and Step Characteristics.\n\n    Args:\n        L (float): Slab thickness.\n        sigma_t (float): Total extinction coefficient.\n        sigma_s (float): Scattering coefficient.\n        B (float): Blackbody source term.\n        Nx (int): Number of spatial cells.\n        Nmu (int): Order of Gauss-Legendre quadrature.\n        tol (float): Convergence tolerance for source iteration.\n        relax (float): Relaxation factor for source iteration.\n\n    Returns:\n        tuple: (phi_center, I_center, mu, w)\n            - phi_center (float): Scalar flux at the central cell.\n            - I_center (np.ndarray): Angular intensity at the central cell.\n            - mu (np.ndarray): Quadrature nodes (sorted).\n            - w (np.ndarray): Quadrature weights (sorted).\n    \"\"\"\n    sigma_a = sigma_t - sigma_s\n    dx = L / Nx\n\n    # Get Gauss-Legendre quadrature nodes and weights on [-1, 1]\n    mu, w = leggauss(Nmu)\n    \n    # Sort mu for easier separation and for interpolation later.\n    # Weights must be reordered accordingly.\n    idx_sort = np.argsort(mu)\n    mu = mu[idx_sort]\n    w = w[idx_sort]\n\n    neg_mu_idx = np.where(mu < 0)[0]\n    pos_mu_idx = np.where(mu > 0)[0]\n\n    phi = np.zeros(Nx)\n    I_avg = np.zeros((Nx, Nmu))\n\n    # Source Iteration\n    for _ in range(4000):  # Maximum iterations\n        phi_old = np.copy(phi)\n        \n        source = sigma_a * B + 0.5 * sigma_s * phi\n        \n        # Transport Sweep\n        # Forward sweep for mu > 0\n        for k in pos_mu_idx:\n            muk = mu[k]\n            tau_cell = sigma_t * dx / muk\n            \n            if tau_cell < 1e-6:\n                exp_term_coeff = 1.0 - tau_cell / 2.0\n            else:\n                exp_term_coeff = (1.0 - np.exp(-tau_cell)) / tau_cell\n            \n            exp_tau = np.exp(-tau_cell)\n            source_term_prop = (1.0 - exp_tau) / sigma_t\n            source_term_avg = (1.0 - exp_term_coeff) / sigma_t\n\n            I_face = 0.0  # BC at x=0\n            for i in range(Nx):\n                I_avg[i, k] = source[i] * source_term_avg + I_face * exp_term_coeff\n                I_face = I_face * exp_tau + source[i] * source_term_prop\n        \n        # Backward sweep for mu < 0\n        for k in neg_mu_idx:\n            muk = mu[k]\n            tau_cell = sigma_t * dx / abs(muk)\n            \n            if tau_cell < 1e-6:\n                exp_term_coeff = 1.0 - tau_cell / 2.0\n            else:\n                exp_term_coeff = (1.0 - np.exp(-tau_cell)) / tau_cell\n            \n            exp_tau = np.exp(-tau_cell)\n            source_term_prop = (1.0 - exp_tau) / sigma_t\n            source_term_avg = (1.0 - exp_term_coeff) / sigma_t\n\n            I_face = 0.0  # BC at x=L\n            for i in range(Nx - 1, -1, -1):\n                I_avg[i, k] = source[i] * source_term_avg + I_face * exp_term_coeff\n                I_face = I_face * exp_tau + source[i] * source_term_prop\n\n        phi_new = np.dot(I_avg, w)\n        \n        phi = relax * phi_new + (1.0 - relax) * phi_old\n        \n        err = np.max(np.abs(phi - phi_old))\n        if err < tol:\n            break\n    \n    idx_center = int(np.round(Nx / 2.0)) - 1\n    \n    phi_center = phi[idx_center]\n    I_center = I_avg[idx_center, :]\n    \n    return phi_center, I_center, mu, w\n\ndef solve():\n    scenarios = [\n        {'L': 1.0, 'sigma_t': 2.0, 'sigma_s': 1.0, 'B': 1.0},  # Scenario A\n        {'L': 1.0, 'sigma_t': 5.0, 'sigma_s': 3.5, 'B': 1.0}, # Scenario B\n    ]\n\n    Nx_ref = 400\n    Nmu_ref = 64\n    Nx_list = [50, 100, 200]\n    Nmu_list = [8, 16, 32]\n    tol = 1e-8\n\n    all_results = []\n\n    for params in scenarios:\n        L, sigma_t, sigma_s, B = params['L'], params['sigma_t'], params['sigma_s'], params['B']\n\n        # Run reference case for both studies\n        phi_ref, I_ref, mu_ref, w_ref = rte_solver(L, sigma_t, sigma_s, B, Nx_ref, Nmu_ref, tol)\n        sum_w_ref = np.sum(w_ref)\n\n        # --- Mesh refinement study ---\n        errors_phi_x = []\n        errors_I_x = []\n        for Nx in Nx_list:\n            phi_center, I_center, _, _ = rte_solver(L, sigma_t, sigma_s, B, Nx, Nmu_ref, tol)\n            \n            e_phi = abs(phi_center - phi_ref)\n            e_I = np.sqrt(np.sum(w_ref * (I_center - I_ref)**2) / sum_w_ref)\n            \n            errors_phi_x.append(e_phi)\n            errors_I_x.append(e_I)\n\n        p_x_phi = np.log(errors_phi_x[-2] / errors_phi_x[-1]) / np.log(2)\n        p_x_I = np.log(errors_I_x[-2] / errors_I_x[-1]) / np.log(2)\n        \n        # --- Angular refinement study ---\n        errors_phi_mu = []\n        errors_I_mu = []\n        for Nmu in Nmu_list:\n            phi_center, I_center, mu_coarse, _ = rte_solver(L, sigma_t, sigma_s, B, Nx_ref, Nmu, tol)\n            \n            e_phi = abs(phi_center - phi_ref)\n            \n            I_interp = np.interp(mu_ref, mu_coarse, I_center)\n            e_I = np.sqrt(np.sum(w_ref * (I_interp - I_ref)**2) / sum_w_ref)\n            \n            errors_phi_mu.append(e_phi)\n            errors_I_mu.append(e_I)\n\n        p_mu_phi = np.log(errors_phi_mu[-2] / errors_phi_mu[-1]) / np.log(2)\n        p_mu_I = np.log(errors_I_mu[-2] / errors_I_mu[-1]) / np.log(2)\n        \n        all_results.extend([p_x_phi, p_x_I, p_mu_phi, p_mu_I])\n\n    print(f\"[{','.join(map(str, all_results))}]\")\n\nsolve()\n```", "id": "2529728"}]}