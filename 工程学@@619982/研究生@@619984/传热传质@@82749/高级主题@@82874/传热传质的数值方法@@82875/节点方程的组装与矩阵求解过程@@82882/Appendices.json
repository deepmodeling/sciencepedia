{"hands_on_practices": [{"introduction": "在计算科学中，保证代码的正确性至关重要。“人造解方法”（Method of Manufactured Solutions, MMS）是测试数值求解器正确性和精度的强大技术。本练习将引导您推导一个人造解测试案例所需的各个组成部分，从连续的偏微分方程到离散的代数系统，从而巩固理论与计算实践之间的联系[@problem_id:2468857]。", "problem": "考虑在一个具有光滑边界 $\\Gamma$ 的单连通域 $\\Omega \\subset \\mathbb{R}^{2}$ 中的稳态二维热传导问题。该区域的热导率 $k>0$ 为常数且各向同性，存在体积热源 $S(x,y)$，温度场为 $T(x,y)$，边界 $\\Gamma$ 上的单位外法向量为 $\\boldsymbol{n}$。其控制平衡律基于局部能量守恒和 Fourier 热传导定律。您的任务是采用“人造解法”（method of manufactured solutions）来设计一个验证案例，用以检验节点方程组装和矩阵求解程序的正确性。\n\n设单位正方形域 $\\Omega=(0,1)\\times(0,1)$ 上的人造温度场为 $T_{m}(x,y)=\\sin(\\pi x)\\sinh(\\pi y)$。在整个边界 $\\Gamma$ 上施加 Dirichlet 边界条件 $T|_{\\Gamma}=T_{m}|_{\\Gamma}$，使得人造场与边界数据完全相容。\n\n任务：\n- 从能量守恒的局部形式和 Fourier 定律出发，推导强形式的控制偏微分方程，并求出源项 $S(x,y)$ 的闭式表达式，使得 $T_{m}(x,y)$ 在 $\\Omega$ 内满足 $\\nabla \\cdot \\big(k \\nabla T\\big)=S$。\n- 从第一性原理出发，为该边界值问题推导其弱（变分）形式，其中试函数在 Dirichlet 边界上为零。并确定在标准 Galerkin 有限元方法中，使用协调网格上的双线性四边形形函数时，定义组装后全局矩阵和右端向量的双线性和线性形式。\n- 在间距为 $\\Delta x=\\Delta y=h$ 的均匀笛卡尔网格上，使用控制体有限体积法（请明确选择单元中心法或节点中心法）推导标准的五点节点方程，其中通量采用二阶中心差分格式。确定内部节点的组装矩阵模板系数。\n- 使用 Taylor 一致性论证，解释为什么将人造节点值与您推导的 $S(x,y)$ 一同代入离散算子后，在均匀网格的内部节点上会产生一个与 $\\mathcal{O}(h^{2})$ 同阶的离散残差。\n\n答案规范：\n- 您最终报告的答案必须是与人造场 $T_{m}(x,y)$ 对应的 $S(x,y)$ 的单一闭式解析表达式。\n- $S(x,y)$ 需以符号形式表示，无需进行数值取整。\n- $S(x,y)$ 在国际单位制（SI）中的物理单位是瓦特/立方米，但不要在最终的方框答案中包含单位。", "solution": "问题陈述已经过分析，被认为是有效的。它为人造解法提供了一个标准练习，用于验证求解泊松方程（Poisson equation）的数值格式。该问题具有科学依据，是适定的，并包含足够的信息以获得完整解。我们将按要求进行推导。\n\n其基本物理原理是稳态传热过程中的局部能量守恒。在没有流体运动的情况下，这表示为\n$$-\\nabla \\cdot \\boldsymbol{q} = S$$\n其中 $\\boldsymbol{q}$ 是热通量矢量，$S$ 是体积热源。Fourier 热传导定律给出了热通量的本构关系：\n$$\\boldsymbol{q} = -k \\nabla T$$\n其中 $k$ 是热导率，$T$ 是温度场。结合这两个定律，得到强形式的控制偏微分方程（PDE）：\n$$\\nabla \\cdot (k \\nabla T) = S$$\n鉴于热导率 $k$ 是一个正常数，该方程简化为泊松方程（Poisson equation）：\n$$k \\nabla^2 T = S$$\n其中 $\\nabla^2 = \\nabla \\cdot \\nabla$ 是拉普拉斯算子（Laplace operator）。人造解法包括假设一个解析解 $T_m(x,y)$，并将其代入控制偏微分方程，以推导出相应的源项 $S(x,y)$，从而使该人造函数成为一个精确解。\n\n**1. 源项的推导**\n\n人造温度场在域 $\\Omega=(0,1) \\times (0,1)$ 上由 $T_{m}(x,y) = \\sin(\\pi x)\\sinh(\\pi y)$ 给出。为了找到相应的源项 $S(x,y)$，我们必须计算 $k \\nabla^2 T_{m}(x,y)$。在笛卡尔坐标系中，拉普拉斯算子为 $\\nabla^2 = \\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}$。\n\n首先，我们计算关于 $x$ 的偏导数：\n$$ \\frac{\\partial T_m}{\\partial x} = \\frac{\\partial}{\\partial x} \\left( \\sin(\\pi x)\\sinh(\\pi y) \\right) = \\pi \\cos(\\pi x)\\sinh(\\pi y) $$\n$$ \\frac{\\partial^2 T_m}{\\partial x^2} = \\frac{\\partial}{\\partial x} \\left( \\pi \\cos(\\pi x)\\sinh(\\pi y) \\right) = -\\pi^2 \\sin(\\pi x)\\sinh(\\pi y) $$\n接下来，我们计算关于 $y$ 的偏导数：\n$$ \\frac{\\partial T_m}{\\partial y} = \\frac{\\partial}{\\partial y} \\left( \\sin(\\pi x)\\sinh(\\pi y) \\right) = \\pi \\sin(\\pi x)\\cosh(\\pi y) $$\n$$ \\frac{\\partial^2 T_m}{\\partial y^2} = \\frac{\\partial}{\\partial y} \\left( \\pi \\sin(\\pi x)\\cosh(\\pi y) \\right) = \\pi^2 \\sin(\\pi x)\\sinh(\\pi y) $$\n$T_m$ 的拉普拉斯算子是这些二阶偏导数之和：\n$$ \\nabla^2 T_m(x,y) = \\frac{\\partial^2 T_m}{\\partial x^2} + \\frac{\\partial^2 T_m}{\\partial y^2} = -\\pi^2 \\sin(\\pi x)\\sinh(\\pi y) + \\pi^2 \\sin(\\pi x)\\sinh(\\pi y) = 0 $$\n人造函数 $T_m(x,y)$ 是一个调和函数，这意味着它是拉普拉斯方程 $\\nabla^2 T = 0$ 的解。因此，为满足控制方程 $k \\nabla^2 T_m = S$ 所需的源项 $S(x,y)$ 是：\n$$ S(x,y) = k \\cdot 0 = 0 $$\n因此，该人造解对应于一个没有内部热生成的系统。\n\n**2. 弱（变分）形式的推导**\n\n弱形式是通过将强形式的偏微分方程乘以一个合适的试函数 $v$ 并在域 $\\Omega$ 上积分得到的。容许试函数的空间由足够光滑且在指定 Dirichlet 条件的边界部分上为零的函数组成。在此问题中，Dirichlet 条件施加于整个边界 $\\Gamma$ 上，因此我们从 Sobolev 空间 $H_0^1(\\Omega)$ 中选择试函数 $v$。\n\n从强形式 $\\nabla \\cdot (k \\nabla T) = S$ 出发：\n$$ \\int_{\\Omega} v \\left[ \\nabla \\cdot (k \\nabla T) \\right] d\\Omega = \\int_{\\Omega} v S d\\Omega $$\n我们对左侧应用 Green 第一恒等式（多维分部积分）：\n$$ \\int_{\\Omega} v \\left[ \\nabla \\cdot (k \\nabla T) \\right] d\\Omega = \\int_{\\Gamma} v (k \\nabla T \\cdot \\boldsymbol{n}) d\\Gamma - \\int_{\\Omega} k (\\nabla v \\cdot \\nabla T) d\\Omega $$\n这里，$\\boldsymbol{n}$ 是边界 $\\Gamma$ 上的单位外法向量。由于试函数 $v$ 必须在 Dirichlet 边界上为零（$v|_{\\Gamma} = 0$），边界积分变为零：\n$$ \\int_{\\Gamma} v (k \\nabla T \\cdot \\boldsymbol{n}) d\\Gamma = 0 $$\n这给我们留下了问题的弱形式表述：寻找一个温度场 $T$，使其满足 Dirichlet 边界条件 $T|_{\\Gamma} = T_m|_{\\Gamma}$，并且对于所有试函数 $v \\in H_0^1(\\Omega)$，下式成立：\n$$ -\\int_{\\Omega} k \\nabla v \\cdot \\nabla T d\\Omega = \\int_{\\Omega} v S d\\Omega $$\n在标准的 Galerkin 有限元方法中，这表示为 $B(T,v) = L(v)$ 的形式。通过重新整理方程，我们可以确定双线性和线性形式。我们将其写作：\n$$ \\int_{\\Omega} k \\nabla T \\cdot \\nabla v d\\Omega = -\\int_{\\Omega} S v d\\Omega $$\n双线性形式 $B(u,v)$ 将在有限元组装中定义刚度矩阵，其表达式为：\n$$ B(T,v) = \\int_{\\Omega} k \\nabla T \\cdot \\nabla v d\\Omega $$\n线性形式 $L(v)$ 将定义载荷向量，其表达式为：\n$$ L(v) = -\\int_{\\Omega} S v d\\Omega $$\n由于我们已经发现 $S(x,y)=0$，线性形式简化为 $L(v)=0$。Dirichlet 边界条件的实施则通过在组装后修改线性系统来处理。\n\n**3. 五点节点方程的推导（FVM）**\n\n我们将采用节点中心有限体积法，在间距为 $\\Delta x = \\Delta y = h$ 的均匀笛卡尔网格上进行。对于位于 $(x_i, y_j)$ 的每个内部节点 $(i,j)$，我们定义一个以该节点为中心、边长为 $h$ 的正方形控制体 $V_{i,j}$。该控制体的各面位于 $x = x_i \\pm h/2$ 和 $y = y_j \\pm h/2$。\n\n我们将控制偏微分方程 $\\nabla \\cdot (k \\nabla T) = S$ 在控制体 $V_{i,j}$ 上积分：\n$$ \\int_{V_{i,j}} \\nabla \\cdot (k \\nabla T) dV = \\int_{V_{i,j}} S dV $$\n对左侧应用散度定理，将体积分转换为对控制体边界 $\\partial V_{i,j}$ 的面积分：\n$$ \\int_{\\partial V_{i,j}} (k \\nabla T) \\cdot \\boldsymbol{n} dA = \\int_{V_{i,j}} S dV $$\n该方程表明，流出控制体的净通量等于其内部的总源项。我们对积分进行近似。源项近似为 $\\int_{V_{i,j}} S dV \\approx S(x_i, y_j) \\cdot h^2 = S_{i,j}h^2$。面积分是控制体四个面（东、西、北、南）的通量之和：\n$$ (F_e - F_w) + (F_n - F_s) = S_{i,j}h^2 $$\n其中 $F_e, F_w, F_n, F_s$ 分别是通过相应面的总通量。我们考虑通过东面（位于 $x_{i+1/2}=x_i+h/2$）的通量：\n$$ F_e = \\left( k \\frac{\\partial T}{\\partial x} \\right)_{i+1/2, j} \\cdot (\\text{面面积}) = \\left( k \\frac{\\partial T}{\\partial x} \\right)_{e} h $$\n在面心处使用二阶中心差分来近似导数：\n$$ F_e \\approx k \\frac{T_{i+1,j} - T_{i,j}}{h} h = k(T_{i+1,j} - T_{i,j}) $$\n其他面类似：\n$$ F_w \\approx k \\frac{T_{i,j} - T_{i-1,j}}{h} h = k(T_{i,j} - T_{i-1,j}) $$\n$$ F_n \\approx k \\frac{T_{i,j+1} - T_{i,j}}{h} h = k(T_{i,j+1} - T_{i,j}) $$\n$$ F_s \\approx k \\frac{T_{i,j} - T_{i,j-1}}{h} h = k(T_{i,j} - T_{i,j-1}) $$\n将这些近似代入平衡方程：\n$$ k(T_{i+1,j} - T_{i,j}) - k(T_{i,j} - T_{i-1,j}) + k(T_{i,j+1} - T_{i,j}) - k(T_{i,j} - T_{i,j-1}) = S_{i,j}h^2 $$\n合并各项，我们得到五点节点方程：\n$$ k(T_{i+1,j} + T_{i-1,j} + T_{i,j+1} + T_{i,j-1} - 4T_{i,j}) = S_{i,j}h^2 $$\n该方程将节点 $(i,j)$ 的温度与其四个最近邻居的温度联系起来。作用于温度向量的左侧算子，其组装后的矩阵模板系数为：\n-   $T_{i,j}$（中心节点）的系数：$-4k$\n-   $T_{i+1,j}$（东侧节点）的系数：$k$\n-   $T_{i-1,j}$（西侧节点）的系数：$k$\n-   $T_{i,j+1}$（北侧节点）的系数：$k$\n-   $T_{i,j-1}$（南侧节点）的系数：$k$\n通常，该方程会被 $k$ 除，使得中心点的系数为 $-4$，邻近点的系数为 $1$，右端项则为 $S_{i,j}h^2/k$。\n\n**4. 关于 $\\mathcal{O}(h^2)$ 阶收敛的 Taylor 一致性论证**\n\n一致性分析确定离散算子对连续微分算子的近似程度。从有限体积法推导出的离散算子是：\n$$ L_h(T)_{i,j} = \\frac{k}{h^2}(T_{i+1,j} + T_{i-1,j} + T_{i,j+1} + T_{i,j-1} - 4T_{i,j}) $$\n连续算子是 $L(T) = k\\nabla^2 T$。截断误差 $\\tau$ 定义为将连续问题的精确解 $T_{ex}(x,y)$ 代入离散方程后得到的残差：$\\tau_{i,j} = L_h(T_{ex})_{i,j} - (L(T_{ex}))_{i,j}$。\n\n我们使用 Taylor 级数将邻近节点的温度值在中心节点 $(x_i, y_j)$ 附近展开：\n$$ T_{ex}(x_i \\pm h, y_j) = T_{i,j} \\pm h \\frac{\\partial T_{ex}}{\\partial x} + \\frac{h^2}{2!} \\frac{\\partial^2 T_{ex}}{\\partial x^2} \\pm \\frac{h^3}{3!} \\frac{\\partial^3 T_{ex}}{\\partial x^3} + \\frac{h^4}{4!} \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\mathcal{O}(h^5) $$\n对 $T_{i+1,j}$ 和 $T_{i-1,j}$ 的展开式求和，会使奇次幂项相互抵消：\n$$ T_{i+1,j} + T_{i-1,j} = 2T_{i,j} + h^2 \\frac{\\partial^2 T_{ex}}{\\partial x^2} + \\frac{h^4}{12} \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\mathcal{O}(h^6) $$\n这给出了二阶导数的中心差分近似表达式：\n$$ \\frac{T_{i+1,j} - 2T_{i,j} + T_{i-1,j}}{h^2} = \\frac{\\partial^2 T_{ex}}{\\partial x^2} + \\frac{h^2}{12} \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\mathcal{O}(h^4) $$\n对于 $y$ 方向，存在一个完全相同的表达式。将这些代入离散算子 $L_h(T_{ex})$：\n$$ L_h(T_{ex})_{i,j} = k \\left( \\frac{T_{i+1,j} + T_{i-1,j} - 2T_{i,j}}{h^2} + \\frac{T_{i,j+1} + T_{i,j-1} - 2T_{i,j}}{h^2} \\right) $$\n$$ L_h(T_{ex})_{i,j} = k \\left( \\frac{\\partial^2 T_{ex}}{\\partial x^2} + \\frac{h^2}{12} \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\dots \\right) + k \\left( \\frac{\\partial^2 T_{ex}}{\\partial y^2} + \\frac{h^2}{12} \\frac{\\partial^4 T_{ex}}{\\partial y^2} + \\dots \\right) $$\n$$ L_h(T_{ex})_{i,j} = k \\left( \\frac{\\partial^2 T_{ex}}{\\partial x^2} + \\frac{\\partial^2 T_{ex}}{\\partial y^2} \\right) + k \\frac{h^2}{12} \\left( \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\frac{\\partial^4 T_{ex}}{\\partial y^4} \\right) + \\mathcal{O}(h^4) $$\n我们认识到 $k(\\frac{\\partial^2 T_{ex}}{\\partial x^2} + \\frac{\\partial^2 T_{ex}}{\\partial y^2}) = k \\nabla^2 T_{ex} = L(T_{ex})$，于是有：\n$$ L_h(T_{ex})_{i,j} = L(T_{ex})_{i,j} + k \\frac{h^2}{12} \\left( \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\frac{\\partial^4 T_{ex}}{\\partial y^4} \\right)_{i,j} + \\mathcal{O}(h^4) $$\n因此，截断误差为：\n$$ \\tau_{i,j} = L_h(T_{ex})_{i,j} - L(T_{ex})_{i,j} = k \\frac{h^2}{12} \\left( \\frac{\\partial^4 T_{ex}}{\\partial x^4} + \\frac{\\partial^4 T_{ex}}{\\partial y^4} \\right)_{i,j} + \\mathcal{O}(h^4) $$\n由于截断误差的主项与 $h^2$ 成正比，只要解的四阶导数有界，该离散格式就是二阶精确的，即 $\\tau = \\mathcal{O}(h^2)$。\n在人造解法中，代码求解离散系统 $L_h(T_h) = S_h$，其中 $S_h$ 是在网格点上计算的源项。通过将精确的人造解 $T_m$ 代入离散算子，并与源项进行比较来检验其正确性。离散残差为 $R_h = L_h(T_m) - S_h$。根据一致性分析，我们知道 $L_h(T_m) = L(T_m) + \\tau$。根据构造，有 $L(T_m) = S$，因此在网格点上，$(L(T_m))_h = S_h$。所以，离散残差恰好就是截断误差：\n$$ R_h = (L(T_m) + \\tau) - S_h = S_h + \\tau - S_h = \\tau $$\n因此，通过测量离散残差的范数，并观察到它在网格细化时以 $\\mathcal{O}(h^2)$ 的速率衰减，就可以验证离散算子的实现是正确的，并且具有预期的精度阶。", "answer": "$$\n\\boxed{0}\n$$", "id": "2468857"}, {"introduction": "在建立了离散方程的基本概念后，本练习将深入探讨有限体积法实施过程中的具体细节。它侧重于如何将各种物理边界条件（如狄利克雷（Dirichlet）、诺伊曼（Neumann）和罗宾（Robin）边界条件）准确地转化为代数方程组中的系数。这项实践对于开发能够处理实际工程问题的稳健求解器至关重要[@problem_id:2468813]。", "problem": "一个二维稳态热传导问题将使用有限体积法在均匀笛卡尔网格上进行离散，并组装成形式为 $a_P T_P - \\sum a_{nb} T_{nb} = b_P$ 的代数节点方程，其中 $a_P$ 是主对角系数，$a_{nb}$ 是相邻系数，$b_P$ 是右侧源项。计算域是一个宽度为 $L_x$、高度为 $L_y$ 的矩形，其热导率为 $k$（假定为常数且各向同性），均匀体积生热率为 $\\dot{q}$（单位 $\\mathrm{W/m^3}$），平面外方向上的厚度为单位1。网格由 $n_x \\times n_y$ 个大小相等的控制体组成，尺寸为 $\\Delta x$ 和 $\\Delta y$，因此 $L_x = n_x \\Delta x$ 且 $L_y = n_y \\Delta y$。您将使用能量守恒的积分形式为每个控制体组装节点方程，并通过与一组能够涵盖每种边界类型的代表性单元的独立计算期望值进行比较，来验证组装的系数 $a_P$、$a_{nb}$ 和 $b_P$ 的正确性。\n\n从有源稳态热传导的基本能量守恒定律开始，\n$$-\\nabla \\cdot \\left(k \\nabla T \\right) = \\dot{q},$$\n在每个控制体上进行积分，并通过单元中心之间或单元中心与边界表面之间的距离上的线性分布来近似垂直于表面的梯度。假设表面积为 $A_e = \\Delta y$、$A_w = \\Delta y$、$A_n = \\Delta x$ 和 $A_s = \\Delta x$（单位厚度）。使用以下有限体积原理处理表面通量和边界条件，这些原理源自守恒声明，不使用任何捷径公式作为目标：\n\n- 对于由距离 $\\Delta x$ 分隔的相邻控制体 $P$ 和 $E$ 之间的内部表面，扩散导纳为 $D_e = k A_e / \\Delta x$，它对 $P$ 的方程贡献 $a_E = D_e$，对其东侧邻居的方程贡献 $a_W = D_e$。类似的定义适用于西、北、南面，其扩散导纳分别为 $D_w = k A_w / \\Delta x$、$D_n = k A_n / \\Delta y$ 和 $D_s = k A_s / \\Delta y$。\n\n- 对于具有给定边界温度 $T_b$ 的狄利克雷（Dirichlet）边界，通过在半个单元距离上进行线性外插来消除虚拟温度，使得表面贡献表现为主系数和右侧项的增加：将 $2 k A / \\delta$ 加到 $a_P$ 上，将 $2 k A T_b / \\delta$ 加到 $b_P$ 上，其中 $\\delta$ 是从单元中心到边界表面的距离，对于垂直表面等于 $\\Delta x/2$，对于水平表面等于 $\\Delta y/2$。\n\n- 对于具有给定法向热通量 $q''$（定义为进入计算域为正）的诺伊曼（Neumann）边界，将 $q'' A$ 加到该面的 $b_P$ 上，该面的相邻系数不变。\n\n- 对于面上的对流罗宾（Robin）边界，其中表面热通量满足 $q'' = h (T_\\infty - T_\\text{face})$，$h$ 为传热系数，$T_\\infty$ 为环境温度。将跨越半个单元的线性传导关系 $q'' = k (T_P - T_\\text{face})/\\delta$ 与对流条件结合，以消除 $T_\\text{face}$，并获得形式为 $q'' = G (T_\\infty - T_P)$ 的有效线性贡献，其中\n$$G = \\frac{\\left( k/\\delta \\right) h}{h + \\left( k/\\delta \\right)} A.$$\n通过将 $G$ 加到 $a_P$ 上，将 $G T_\\infty$ 加到 $b_P$ 上来表示这一点。\n\n- 通过将 $\\dot{q} V$ 加到 $b_P$ 上来处理体积源，其中 $V = \\Delta x \\Delta y$ 是控制体体积。\n\n以规范形式 $a_P T_P - \\sum a_{nb} T_{nb} = b_P$ 实现代数方程，相邻集为 $\\{E,W,N,S\\}$。对于因边界而缺失的任何相邻点，相应的 $a_{nb}$ 必须为 $0$。\n\n您的任务：\n\n- 针对给定物理参数和边界条件的 $n_x \\times n_y$ 网格中的每个控制体，以编程方式组装系数 $a_P$、$a_W$、$a_E$、$a_S$、$a_N$ 和 $b_P$。\n\n- 对选定的、能说明每种边界类型的控制体，使用上述逐面公式独立计算这些系数的期望值。\n\n- 对每个选定的控制体，验证组装的系数和期望的系数在绝对容差 $\\varepsilon = 10^{-10}$ 内匹配。\n\n边界条件说明：\n\n- 位于 $x=0$ 的西边界为狄利克雷边界，给定温度为 $T_W$。\n\n- 位于 $x=L_x$ 的东边界为诺伊曼边界，给定热通量为 $q''_E$（进入域内为正）。\n\n- 位于 $y=0$ 的南边界为诺伊曼边界，给定热通量为 $q''_S$（进入域内为正；对于绝热条件可能为 $0$）。\n\n- 位于 $y=L_y$ 的北边界为罗宾（对流）边界，系数为 $h_N$，环境温度为 $T_{\\infty,N}$。\n\n几何和材料参数：\n\n- 网格是均匀的，有 $n_x \\times n_y$ 个控制体，间距为 $\\Delta x$ 和 $\\Delta y$（单位 $\\mathrm{m}$），各向同性热导率为 $k$（单位 $\\mathrm{W/(m\\cdot K)}$），体积生热率为 $\\dot{q}$（单位 $\\mathrm{W/m^3}$）。厚度为 $1$（在米单位下无量纲），因此表面积为 $A_e = A_w = \\Delta y$ 和 $A_n = A_s = \\Delta x$（单位 $\\mathrm{m^2}$），单元体积为 $V = \\Delta x \\Delta y$（单位 $\\mathrm{m^3}$）。\n\n为每个测试用例验证的代表性单元：\n\n- 内部中心单元 $(i,j) = (1,1)$，其中 $i=0,\\dots,n_x-1$ 从西到东，$j=0,\\dots,n_y-1$ 从南到北。\n\n- 西边缘中间单元 $(0,1)$（存在狄利克雷边界）。\n\n- 东边缘中间单元 $(n_x-1,1)$（存在诺伊曼边界）。\n\n- 北边缘中间单元 $(1,n_y-1)$（存在罗宾边界）。\n\n- 南边缘中间单元 $(1,0)$（存在诺伊曼边界，可能为绝热）。\n\n- 西北角单元 $(0,n_y-1)$（同时存在狄利克雷和罗宾边界）。\n\n测试套件：\n\n提供三个测试用例；所有数据均采用指定的国际单位制（SI）单位。\n\n- 测试用例A：\n    - $n_x = 3$, $n_y = 3$, $\\Delta x = 0.1\\,\\mathrm{m}$, $\\Delta y = 0.1\\,\\mathrm{m}$,\n    - $k = 20\\,\\mathrm{W/(m\\cdot K)}$, $\\dot{q} = 1.0\\times 10^{5}\\,\\mathrm{W/m^3}$,\n    - 西边界狄利克雷条件 $T_W = 400\\,\\mathrm{K}$,\n    - 东边界诺伊曼条件 $q''_E = 5000\\,\\mathrm{W/m^2}$,\n    - 南边界诺伊曼条件 $q''_S = 0\\,\\mathrm{W/m^2}$ (绝热),\n    - 北边界罗宾条件 $h_N = 25\\,\\mathrm{W/(m^2\\cdot K)}$, $T_{\\infty,N} = 300\\,\\mathrm{K}$。\n\n- 测试用例B：\n    - $n_x = 3$, $n_y = 3$, $\\Delta x = 0.05\\,\\mathrm{m}$, $\\Delta y = 0.2\\,\\mathrm{m}$,\n    - $k = 50\\,\\mathrm{W/(m\\cdot K)}$, $\\dot{q} = 0\\,\\mathrm{W/m^3}$,\n    - 西边界狄利克雷条件 $T_W = 310\\,\\mathrm{K}$,\n    - 东边界诺伊曼条件 $q''_E = -2000\\,\\mathrm{W/m^2}$,\n    - 南边界诺伊曼条件 $q''_S = 0\\,\\mathrm{W/m^2}$,\n    - 北边界罗宾条件 $h_N = 100\\,\\mathrm{W/(m^2\\cdot K)}$, $T_{\\infty,N} = 350\\,\\mathrm{K}$。\n\n- 测试用例C：\n    - $n_x = 3$, $n_y = 3$, $\\Delta x = 0.08\\,\\mathrm{m}$, $\\Delta y = 0.12\\,\\mathrm{m}$,\n    - $k = 10\\,\\mathrm{W/(m\\cdot K)}$, $\\dot{q} = 2.0\\times 10^{4}\\,\\mathrm{W/m^3}$,\n    - 西边界狄利克雷条件 $T_W = 300\\,\\mathrm{K}$,\n    - 东边界诺伊曼条件 $q''_E = 0\\,\\mathrm{W/m^2}$,\n    - 南边界诺伊曼条件 $q''_S = 1000\\,\\mathrm{W/m^2}$,\n    - 北边界罗宾条件 $h_N = 10^{4}\\,\\mathrm{W/(m^2\\cdot K)}$, $T_{\\infty,N} = 330\\,\\mathrm{K}$。\n\n最终输出规格：\n\n- 您的程序必须为每个测试用例组装系数，并按 $(1,1)$, $(0,1)$, $(2,1)$, $(1,2)$, $(1,0)$, $(0,2)$ 的顺序，对六个指定的控制体，使用 $\\varepsilon = 10^{-10}$ 的绝对容差，将组装的系数与独立计算的期望值进行比较。\n\n- 对于每个单元，如果所有六个系数 $a_P$, $a_W$, $a_E$, $a_S$, $a_N$ 和 $b_P$ 都在容差范围内匹配，则生成一个布尔值 $true$；否则为 $false$。\n\n- 将所有三个测试用例的所有布尔值聚合，保留每个测试用例的测试用例顺序和单元顺序，形成一个扁平列表，并打印包含此列表的单行，格式为方括号括起来的逗号分隔列表，例如 $[\\text{true},\\text{true},\\dots]$。\n\n角度单位不适用。物理输入采用指定的国际单位制单位，而最终的布尔值是无单位的。", "solution": "问题陈述经过严格审查，被认为是有效的。它在科学上基于传热学原理，在数学上是自洽的，并且是客观制定的。它提出了一个在计算传热学领域中定义明确的任务：组装并验证从有限体积法推导出的节点代数方程。\n\n基本原理是稳态系统的能量守恒，其带有源项的热传导微分形式为：\n$$-\\nabla \\cdot \\left(k \\nabla T \\right) = \\dot{q}$$\n其中 $k$ 是热导率（单位 $\\mathrm{W/(m\\cdot K)}$），$T$ 是温度场（单位 $\\mathrm{K}$），$\\dot{q}$ 是体积生热率（单位 $\\mathrm{W/m^3}$）。\n\n为使用有限体积法离散此方程，我们在以节点 $P$ 为中心的控制体 $V_P$ 上对其进行积分：\n$$ \\int_{V_P} -\\nabla \\cdot \\left(k \\nabla T \\right) dV = \\int_{V_P} \\dot{q} dV $$\n对左侧应用散度定理，将体积积分转换为控制体各个表面上的通量之和：\n$$ -\\sum_{f} \\int_{A_f} (k \\nabla T) \\cdot \\mathbf{n} \\, dA = \\dot{q} V_P $$\n其中求和遍历控制体的所有表面 $f$（东、西、南、北），$A_f$ 是表面的面积，$\\mathbf{n}$ 是向外的单位法向量。令 $q''_f$ 为通过表面 $f$ 流出控制体的热通量。方程变为：\n$$ \\sum_{f \\in \\{e,w,n,s\\}} q''_f A_f = \\dot{q} V_P $$\n该方法的核心在于近似热通量项 $q''_f A_f$。每个节点 $P$ 的最终代数方程以规范形式表示：\n$$ a_P T_P - \\sum_{nb} a_{nb} T_{nb} = b_P $$\n其中 $T_P$ 是节点 $P$ 的温度，$T_{nb}$ 是相邻节点的温度，$a_P$ 是中心系数，$a_{nb}$ 是相邻系数，$b_P$ 是源项。通过考虑控制体每个面的贡献来组装这些系数。\n\n**1. 内部面：**\n对于一个内部面，例如节点 $P$ 和 $E$ 之间的东面 'e'，热通量使用单元中心之间的线性温度分布来近似。离开 $P$ 并通过 'e' 面的热量率为：\n$$ q_e = k A_e \\frac{T_P - T_E}{\\delta x_{PE}} $$\n此处，$A_e = \\Delta y$ 是表面积（假设单位深度），$\\delta x_{PE} = \\Delta x$ 是单元中心之间的距离。这个贡献可以写成 $D_e(T_P - T_E)$，其中 $D_e = k A_e / \\Delta x$ 是扩散导纳。项 $-D_e T_E$ 移动到最终方程的左侧，得到 $a_E = D_e$。项 $D_e T_P$ 贡献给中心系数，因此 $a_P$ 增加 $D_e$。类似的表达式适用于其他内部面，其中 $a_W = D_w = k \\Delta y / \\Delta x$，$a_N = D_n = k \\Delta x / \\Delta y$，以及 $a_S = D_s = k \\Delta x / \\Delta y$。对于边界表面，相应的相邻系数 $a_{nb}$ 为零。\n\n**2. 狄利克雷边界（给定温度）：**\n在具有指定温度 $T_b$ 的边界表面上，例如西面，通量使用从单元中心 $P$ 到边界的距离 $\\delta = \\Delta x/2$ 来近似。热量率为：\n$$ q_w = k A_w \\frac{T_P - T_b}{\\delta} = \\frac{2k A_w}{\\Delta x}(T_P - T_b) $$\n将其重排为标准形式 $a_P T_P - \\dots = b_P$，项 $\\frac{2k A_w}{\\Delta x} T_P$ 贡献给左侧，项 $\\frac{2k A_w}{\\Delta x} T_b$ 移动到右侧。因此，对于狄利克雷边界表面，我们将 $\\frac{2kA}{\\delta}$ 加到 $a_P$ 上，将 $\\frac{2kAT_b}{\\delta}$ 加到 $b_P$ 上，其中 $A$ 是表面积，$\\delta$ 是半个单元的宽度。\n\n**3. 诺伊曼边界（给定热通量）：**\n在具有进入域内的指定热通量 $q''$ 的边界表面上，进入控制体的热量率就是 $q'' A$。因此，通过该表面流出控制体的热量率为 $-q'' A$。这是一个常数项，仅对源项 $b_P$ 有贡献。因此，对于诺伊曼边界表面，我们将 $q''_{bnd} A$ 加到 $b_P$ 上。\n\n**4. 罗宾边界（对流）：**\n对于对流边界，流入域内的通量由 $q''=h(T_{\\infty}-T_{\\text{face}})$ 给出。从单元中心 $P$ 到表面的通量为 $q''=k(T_P-T_{\\text{face}})/\\delta$。消除未知的表面温度 $T_{\\text{face}}$ 会得到一个仅用 $T_P$ 和已知的环境温度 $T_{\\infty}$ 表示的通量表达式：\n$$ q'' = G(T_{\\infty}-T_P)/A \\quad \\text{其中} \\quad G = \\frac{1}{\\frac{\\delta}{kA} + \\frac{1}{hA}} = \\frac{(k/\\delta)h}{h + (k/\\delta)}A $$\n通过该表面进入的总热量率为 $q''A=G(T_{\\infty}-T_P)$。重新整理后，项 $G T_P$ 贡献给方程的左侧，因此我们将 $G$ 加到 $a_P$ 上。项 $G T_{\\infty}$ 贡献给右侧，因此我们将 $G T_{\\infty}$ 加到 $b_P$ 上。\n\n**5. 体积源：**\n积分后的体积热源 $\\dot{q} V_P = \\dot{q} \\Delta x \\Delta y$ 是对源项 $b_P$ 的一个常数贡献。\n\n**组装与验证流程：**\n该实现分为两部分进行。首先，一个通用例程通过遍历每个单元 $(i,j)$（其中 $i=0, \\dots, n_x-1$ 和 $j=0, \\dots, n_y-1$）并根据单元位置应用上述规则，以编程方式组装六个系数数组（$a_P, a_W, a_E, a_S, a_N, b_P$）。其次，为了验证此通用实现，一个单独的函数通过直接应用相同的公式集来计算单个指定单元的期望系数，这些公式是针对该单元特定的边界和内部面组合进行硬编码的。最后，对于选定的代表性单元，将通用组装的结果与特定的、独立计算的期望值进行比较。当且仅当给定单元的所有六个系数在绝对容差 $\\varepsilon = 10^{-10}$ 内匹配时，返回布尔值 `true`。对所有指定的测试用例重复此过程。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Assembles and verifies finite volume nodal equation coefficients for a 2D heat conduction problem.\n    \"\"\"\n    test_cases = [\n        # Test Case A\n        {\n            \"nx\": 3, \"ny\": 3, \"dx\": 0.1, \"dy\": 0.1,\n            \"k\": 20.0, \"q_dot\": 1.0e5,\n            \"T_W\": 400.0, \"q_E\": 5000.0, \"q_S\": 0.0,\n            \"h_N\": 25.0, \"T_inf_N\": 300.0,\n        },\n        # Test Case B\n        {\n            \"nx\": 3, \"ny\": 3, \"dx\": 0.05, \"dy\": 0.2,\n            \"k\": 50.0, \"q_dot\": 0.0,\n            \"T_W\": 310.0, \"q_E\": -2000.0, \"q_S\": 0.0,\n            \"h_N\": 100.0, \"T_inf_N\": 350.0,\n        },\n        # Test Case C\n        {\n            \"nx\": 3, \"ny\": 3, \"dx\": 0.08, \"dy\": 0.12,\n            \"k\": 10.0, \"q_dot\": 2.0e4,\n            \"T_W\": 300.0, \"q_E\": 0.0, \"q_S\": 1000.0,\n            \"h_N\": 1.0e4, \"T_inf_N\": 330.0,\n        },\n    ]\n\n    verification_cells = [(1, 1), (0, 1), (2, 1), (1, 2), (1, 0), (0, 2)]\n    tolerance = 1e-10\n    all_results = []\n\n    def assemble_coefficients(params):\n        nx, ny, dx, dy = params[\"nx\"], params[\"ny\"], params[\"dx\"], params[\"dy\"]\n        k, q_dot = params[\"k\"], params[\"q_dot\"]\n        T_W, q_E, q_S = params[\"T_W\"], params[\"q_E\"], params[\"q_S\"]\n        h_N, T_inf_N = params[\"h_N\"], params[\"T_inf_N\"]\n        \n        a_P = np.zeros((ny, nx))\n        a_W = np.zeros((ny, nx))\n        a_E = np.zeros((ny, nx))\n        a_S = np.zeros((ny, nx))\n        a_N = np.zeros((ny, nx))\n        b_P = np.zeros((ny, nx))\n\n        V = dx * dy\n        \n        for j in range(ny):\n            for i in range(nx):\n                # Volumetric source term\n                b_P[j, i] += q_dot * V\n\n                # West face\n                if i == 0:  # West boundary (Dirichlet)\n                    delta_w = dx / 2\n                    A_w = dy\n                    term = 2 * k * A_w / delta_w\n                    a_P[j, i] += term\n                    b_P[j, i] += term * T_W\n                else:  # Internal face\n                    D_w = k * dy / dx\n                    a_P[j, i] += D_w\n                    a_W[j, i] = D_w\n                \n                # East face\n                if i == nx - 1:  # East boundary (Neumann)\n                    A_e = dy\n                    b_P[j, i] += q_E * A_e\n                else:  # Internal face\n                    D_e = k * dy / dx\n                    a_P[j, i] += D_e\n                    a_E[j, i] = D_e\n\n                # South face\n                if j == 0:  # South boundary (Neumann)\n                    A_s = dx\n                    b_P[j, i] += q_S * A_s\n                else:  # Internal face\n                    D_s = k * dx / dy\n                    a_P[j, i] += D_s\n                    a_S[j, i] = D_s\n\n                # North face\n                if j == ny - 1:  # North boundary (Robin)\n                    delta_n = dy / 2\n                    A_n = dx\n                    G = (k / delta_n * h_N) / (h_N + k / delta_n) * A_n\n                    a_P[j, i] += G\n                    b_P[j, i] += G * T_inf_N\n                else:  # Internal face\n                    D_n = k * dx / dy\n                    a_P[j, i] += D_n\n                    a_N[j, i] = D_n\n\n        return a_P, a_W, a_E, a_S, a_N, b_P\n\n    def get_expected_coeffs(i, j, params):\n        nx, ny, dx, dy = params[\"nx\"], params[\"ny\"], params[\"dx\"], params[\"dy\"]\n        k, q_dot = params[\"k\"], params[\"q_dot\"]\n        T_W, q_E, q_S = params[\"T_W\"], params[\"q_E\"], params[\"q_S\"]\n        h_N, T_inf_N = params[\"h_N\"], params[\"T_inf_N\"]\n        \n        aP, aW, aE, aS, aN, bP = 0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n        \n        V = dx * dy\n        bP += q_dot * V\n\n        # West Face Contribution\n        if i > 0:\n            D_w = k * dy / dx\n            aP += D_w\n            aW = D_w\n        else: # i == 0\n            delta_w = dx / 2\n            A_w = dy\n            term = 2 * k * A_w / delta_w\n            aP += term\n            bP += term * T_W\n            aW = 0.0\n            \n        # East Face Contribution\n        if i  nx - 1:\n            D_e = k * dy / dx\n            aP += D_e\n            aE = D_e\n        else: # i == nx - 1\n            A_e = dy\n            bP += q_E * A_e\n            aE = 0.0\n\n        # South Face Contribution\n        if j > 0:\n            D_s = k * dx / dy\n            aP += D_s\n            aS = D_s\n        else: # j == 0\n            A_s = dx\n            bP += q_S * A_s\n            aS = 0.0\n            \n        # North Face Contribution\n        if j  ny - 1:\n            D_n = k * dx / dy\n            aP += D_n\n            aN = D_n\n        else: # j == ny - 1\n            delta_n = dy / 2\n            A_n = dx\n            G = (k / delta_n * h_N) / (h_N + k / delta_n) * A_n\n            aP += G\n            bP += G * T_inf_N\n            aN = 0.0\n\n        return aP, aW, aE, aS, aN, bP\n\n    for case in test_cases:\n        assembled_coeffs = assemble_coefficients(case)\n        aP_arr, aW_arr, aE_arr, aS_arr, aN_arr, bP_arr = assembled_coeffs\n        \n        case_results = []\n        for i, j in verification_cells:\n            # Map (i,j) which is (col, row) to numpy's (row, col) indexing\n            assembled_vals = np.array([\n                aP_arr[j, i],\n                aW_arr[j, i],\n                aE_arr[j, i],\n                aS_arr[j, i],\n                aN_arr[j, i],\n                bP_arr[j, i]\n            ])\n            \n            expected_vals = np.array(get_expected_coeffs(i, j, case))\n            \n            is_match = np.allclose(assembled_vals, expected_vals, rtol=0, atol=tolerance)\n            case_results.append(str(is_match).lower())\n        \n        all_results.extend(case_results)\n\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2468813"}, {"introduction": "当方程组装配完成后，理解其数学特性是选择和实施高效求解策略的关键。本练习介绍如何应用格什戈林圆盘定理（Gershgorin Circle Theorem）来分析装配后的矩阵，以揭示其对角占优性和特征值分布等重要性质。这些性质对于许多矩阵求解过程的稳定性和收敛性至关重要[@problem_id:2468727]。", "problem": "一个一维瞬态热扩散问题在两端带有狄利克雷边界条件的非均匀网格上通过有限体积法 (FVM) 进行离散化。该杆具有恒定的各向同性导热系数 $k$、恒定密度 $\\rho$、恒定比热容 $c_p$ 和恒定横截面积 $A$。控制定律为傅里叶热传导定律以及每个控制体积上的能量守恒定律。采用时间步长为 $\\Delta t$ 的隐式（后向欧拉）时间积分方法，从时间层 $n$ 推进到 $n+1$。节点未知量为三个内部节点的温度 $\\{T_1^{n+1},T_2^{n+1},T_3^{n+1}\\}$；左端和右端的边界温度是给定的，并被移项到方程组的右侧。\n\n网格几何结构如下。沿杆的距离为：从左边界到节点 $1$ 为 $d_L = 0.02\\,\\text{m}$，节点 $1$ 和 $2$ 之间为 $d_{12} = 0.03\\,\\text{m}$，节点 $2$ 和 $3$ 之间为 $d_{23} = 0.02\\,\\text{m}$，从节点 $3$ 到右边界为 $d_R = 0.01\\,\\text{m}$。横截面积为 $A = 0.02\\,\\text{m}^2$，导热系数为 $k = 50\\,\\text{W}\\,\\text{m}^{-1}\\,\\text{K}^{-1}$，密度为 $\\rho = 7800\\,\\text{kg}\\,\\text{m}^{-3}$，比热容为 $c_p = 500\\,\\text{J}\\,\\text{kg}^{-1}\\,\\text{K}^{-1}$，时间步长为 $\\Delta t = 2\\,\\text{s}$。每个内部节点 $i$ 周围的控制体积占据了到其相邻节点或边界距离的一半，因此节点 $1$ 的控制体积长度为 $0.5\\,(d_L + d_{12})$，节点 $2$ 为 $0.5\\,(d_{12}+d_{23})$，节点 $3$ 为 $0.5\\,(d_{23}+d_R)$。\n\n从每个控制体积的能量守恒和傅里叶定律出发，组装与时间层 $n+1$ 的未知温度向量相乘的 $3\\times 3$ 线性系统矩阵 $\\mathbf{A}$。使用这个组装好的矩阵，执行以下操作：\n\n1. 计算 $\\mathbf{A}$ 的 Gershgorin 圆盘，并指明每个行圆盘的圆心和半径。\n2. 使用 Gershgorin 圆盘界定谱的范围，并论证 $\\mathbf{A}$ 的严格对角占优性。\n3. 根据 Gershgorin 圆盘，确定 $\\mathbf{A}$ 的最小特征值的最大可靠下界。\n\n最终答案仅报告最小特征值的最大可靠下界的单个数值，四舍五入到四位有效数字。在您的计算过程中，数值以 $\\text{W}\\,\\text{K}^{-1}$ 为单位表示，但最终的方框答案中不包含单位。", "solution": "问题陈述需经过验证。\n\n**第 1 步：提取已知条件**\n- **问题类型**: 一维瞬态热扩散。\n- **离散化方法**: 在非均匀网格上使用有限体积法 (FVM)。\n- **时间积分**: 隐式（后向欧拉），时间步长 $\\Delta t = 2\\,\\text{s}$。\n- **边界条件**: 两端均为狄利克雷边界条件。\n- **未知量**: 三个内部节点的节点温度 $\\{T_1^{n+1}, T_2^{n+1}, T_3^{n+1}\\}$。\n- **材料属性（恒定，各向同性）**:\n  - 导热系数: $k = 50\\,\\text{W}\\,\\text{m}^{-1}\\,\\text{K}^{-1}$。\n  - 密度: $\\rho = 7800\\,\\text{kg}\\,\\text{m}^{-3}$。\n  - 比热容: $c_p = 500\\,\\text{J}\\,\\text{kg}^{-1}\\,\\text{K}^{-1}$。\n- **几何属性**:\n  - 横截面积: $A = 0.02\\,\\text{m}^2$。\n  - 节点间距: $d_L = 0.02\\,\\text{m}$ (左边界到节点 1)，$d_{12} = 0.03\\,\\text{m}$ (节点 1 到 2)，$d_{23} = 0.02\\,\\text{m}$ (节点 2 到 3)，$d_R = 0.01\\,\\text{m}$ (节点 3 到右边界)。\n- **控制体积长度**: $\\Delta x_1 = 0.5(d_L + d_{12})$，$\\Delta x_2 = 0.5(d_{12} + d_{23})$，$\\Delta x_3 = 0.5(d_{23} + d_R)$。\n- **任务**: 组装 $3 \\times 3$ 线性系统矩阵 $\\mathbf{A}$，计算其 Gershgorin 圆盘，用它们来界定谱范围并证明严格对角占优性，并求出 $\\mathbf{A}$ 的最小特征值的最大可靠下界。\n\n**第 2 步：使用提取的已知条件进行验证**\n- **科学依据**: 该问题基于傅里叶热传导定律和能量守恒原理，这些是热传递的基础。采用隐式时间格式的有限体积法是一种标准的、科学上合理的数值技术。\n- **适定性**: 该问题提供了所有必要的材料属性、几何数据和数值参数，以唯一地构建系统矩阵 $\\mathbf{A}$。任务在数学上是精确的。\n- **客观性**: 问题陈述使用客观、定量的语言，没有歧义或主观论断。\n\n该问题不违反任何无效标准。它科学合理、适定、客观、完整且可行。\n\n**第 3 步：结论与行动**\n问题有效。将构建解答。\n\n**解答推导**\n一维瞬态热传导的控制方程为：\n$$ \\rho c_p \\frac{\\partial T}{\\partial t} = \\frac{\\partial}{\\partial x} \\left( k \\frac{\\partial T}{\\partial x} \\right) $$\n我们应用有限体积法。围绕节点 $i$ 的控制体积 (CV) 的能量守恒方程的积分形式为：\n$$ \\int_{CV_i} \\rho c_p \\frac{\\partial T}{\\partial t} \\, dV = \\int_{\\partial CV_i} k \\frac{\\partial T}{\\partial x} \\hat{n} \\cdot d\\mathbf{S} $$\n对于横截面积恒为 $A$ 的一维杆，第 $i$ 个控制体积的体积为 $V_i = A \\Delta x_i$。方程变为：\n$$ \\rho c_p A \\Delta x_i \\frac{dT_i}{dt} = q_w - q_e $$\n其中 $q_w$ 和 $q_e$ 分别是通过控制体积西面和东面的传热率。使用时间步长为 $\\Delta t$ 的隐式（后向欧拉）时间离散化，我们近似时间导数并在未来的时间层 $n+1$ 评估空间通量：\n$$ \\rho c_p A \\Delta x_i \\frac{T_i^{n+1} - T_i^n}{\\Delta t} = q_w^{n+1} - q_e^{n+1} $$\n根据傅里叶定律，相距 $d_{ab}$ 的两点 $a$ 和 $b$ 之间的热通量由下式给出：$q_{ab} = k A \\frac{T_a - T_b}{d_{ab}}$。\n\n现在我们为三个内部节点中的每一个推导具体方程。\n\n**节点 1：**\n节点 1 的控制体积长度为 $\\Delta x_1 = 0.5(d_L + d_{12})$。能量平衡方程为：\n$$ \\rho c_p A \\Delta x_1 \\frac{T_1^{n+1} - T_1^n}{\\Delta t} = k A \\frac{T_L^{n+1} - T_1^{n+1}}{d_L} - k A \\frac{T_1^{n+1} - T_2^{n+1}}{d_{12}} $$\n其中 $T_L$ 是左边界的给定温度。重新整理方程，将未知温度 $\\{T_1^{n+1}, T_2^{n+1}, T_3^{n+1}\\}$ 组合到左侧 (LHS)：\n$$ \\left( \\frac{\\rho c_p \\Delta x_1}{\\Delta t} + \\frac{k}{d_L} + \\frac{k}{d_{12}} \\right) A T_1^{n+1} - \\left( \\frac{k}{d_{12}} \\right) A T_2^{n+1} = \\text{RHS}_1 $$\n右侧 (RHS) 包含来自前一时间步长和边界条件的已知量。由此，我们确定矩阵 $\\mathbf{A}$ 第一行的系数：\n$A_{11} = \\left( \\frac{\\rho c_p \\Delta x_1}{\\Delta t} + \\frac{k}{d_L} + \\frac{k}{d_{12}} \\right) A$\n$A_{12} = -\\frac{k A}{d_{12}}$\n$A_{13} = 0$\n\n**节点 2：**\n节点 2 的控制体积长度为 $\\Delta x_2 = 0.5(d_{12} + d_{23})$。能量平衡方程为：\n$$ \\rho c_p A \\Delta x_2 \\frac{T_2^{n+1} - T_2^n}{\\Delta t} = k A \\frac{T_1^{n+1} - T_2^{n+1}}{d_{12}} - k A \\frac{T_2^{n+1} - T_3^{n+1}}{d_{23}} $$\n重新整理得到：\n$$ -\\left( \\frac{k}{d_{12}} \\right) A T_1^{n+1} + \\left( \\frac{\\rho c_p \\Delta x_2}{\\Delta t} + \\frac{k}{d_{12}} + \\frac{k}{d_{23}} \\right) A T_2^{n+1} - \\left( \\frac{k}{d_{23}} \\right) A T_3^{n+1} = \\text{RHS}_2 $$\n第二行的系数为：\n$A_{21} = -\\frac{k A}{d_{12}}$\n$A_{22} = \\left( \\frac{\\rho c_p \\Delta x_2}{\\Delta t} + \\frac{k}{d_{12}} + \\frac{k}{d_{23}} \\right) A$\n$A_{23} = -\\frac{k A}{d_{23}}$\n\n**节点 3：**\n节点 3 的控制体积长度为 $\\Delta x_3 = 0.5(d_{23} + d_R)$。能量平衡方程为：\n$$ \\rho c_p A \\Delta x_3 \\frac{T_3^{n+1} - T_3^n}{\\Delta t} = k A \\frac{T_2^{n+1} - T_3^{n+1}}{d_{23}} - k A \\frac{T_3^{n+1} - T_R^{n+1}}{d_R} $$\n重新整理得到：\n$$ -\\left( \\frac{k}{d_{23}} \\right) A T_2^{n+1} + \\left( \\frac{\\rho c_p \\Delta x_3}{\\Delta t} + \\frac{k}{d_{23}} + \\frac{k}{d_R} \\right) A T_3^{n+1} = \\text{RHS}_3 $$\n第三行的系数为：\n$A_{31} = 0$\n$A_{32} = -\\frac{k A}{d_{23}}$\n$A_{33} = \\left( \\frac{\\rho c_p \\Delta x_3}{\\Delta t} + \\frac{k}{d_{23}} + \\frac{k}{d_R} \\right) A$\n\n**矩阵 A 的数值组装**\n我们代入给定的数值。首先，我们计算辅助项。所有单位均为国际单位制 (SI)。\n$\\rho c_p = 7800 \\times 500 = 3.9 \\times 10^6$\n$\\frac{\\rho c_p}{\\Delta t} = \\frac{3.9 \\times 10^6}{2} = 1.95 \\times 10^6$\n$\\Delta x_1 = 0.5(0.02 + 0.03) = 0.025$\n$\\Delta x_2 = 0.5(0.03 + 0.02) = 0.025$\n$\\Delta x_3 = 0.5(0.02 + 0.01) = 0.015$\n\n现在我们计算矩阵元素。每个元素的单位是 $\\text{W}\\,\\text{K}^{-1}$。\n$A_{11} = \\left( (1.95 \\times 10^6 \\times 0.025) + \\frac{50}{0.02} + \\frac{50}{0.03} \\right) \\times 0.02 = \\left( 48750 + 2500 + \\frac{5000}{3} \\right) \\times 0.02 = \\left( 51250 + \\frac{5000}{3} \\right) \\times 0.02 = \\left( \\frac{153750+5000}{3} \\right) \\times 0.02 = \\frac{158750}{3} \\times 0.02 = \\frac{3175}{3}$。\n$A_{12} = -\\frac{50 \\times 0.02}{0.03} = -\\frac{1}{0.03} = -\\frac{100}{3}$。\n$A_{13} = 0$。\n\n$A_{21} = A_{12} = -\\frac{100}{3}$。\n$A_{22} = \\left( (1.95 \\times 10^6 \\times 0.025) + \\frac{50}{0.03} + \\frac{50}{0.02} \\right) \\times 0.02 = \\left( 48750 + \\frac{5000}{3} + 2500 \\right) \\times 0.02 = \\frac{3175}{3}$。\n$A_{23} = -\\frac{50 \\times 0.02}{0.02} = -50$。\n\n$A_{31} = 0$。\n$A_{32} = A_{23} = -50$。\n$A_{33} = \\left( (1.95 \\times 10^6 \\times 0.015) + \\frac{50}{0.02} + \\frac{50}{0.01} \\right) \\times 0.02 = (29250 + 2500 + 5000) \\times 0.02 = 36750 \\times 0.02 = 735$。\n\n组装后的矩阵 $\\mathbf{A}$ 是对称的：\n$$ \\mathbf{A} = \\begin{pmatrix} \\frac{3175}{3}  -\\frac{100}{3}  0 \\\\ -\\frac{100}{3}  \\frac{3175}{3}  -50 \\\\ 0  -50  735 \\end{pmatrix} \\approx \\begin{pmatrix} 1058.33  -33.33  0 \\\\ -33.33  1058.33  -50 \\\\ 0  -50  735.00 \\end{pmatrix} $$\n\n**Gershgorin 圆盘分析**\nGershgorin 圆盘定理指出，矩阵 $\\mathbf{A}$ 的每个特征值都位于其至少一个 Gershgorin 圆盘内。第 $i$ 个圆盘 $G_i$ 以对角元素 $A_{ii}$ 为圆心，半径为 $R_i = \\sum_{j \\neq i} |A_{ij}|$。\n\n1. **计算 Gershgorin 圆盘：**\n   - 对于行 1：圆心 $C_1 = A_{11} = \\frac{3175}{3}$。半径 $R_1 = |A_{12}| + |A_{13}| = |-\\frac{100}{3}| + |0| = \\frac{100}{3}$。\n   - 对于行 2：圆心 $C_2 = A_{22} = \\frac{3175}{3}$。半径 $R_2 = |A_{21}| + |A_{23}| = |-\\frac{100}{3}| + |-50| = \\frac{100}{3} + 50 = \\frac{250}{3}$。\n   - 对于行 3：圆心 $C_3 = A_{33} = 735$。半径 $R_3 = |A_{31}| + |A_{32}| = |0| + |-50| = 50$。\n\n2. **界定谱范围并论证严格对角占优性：**\n   由于 $\\mathbf{A}$ 是实对称矩阵，其特征值均为实数。特征值必须位于由圆盘定义的实数区间的并集内：\n   - 区间 1：$[C_1 - R_1, C_1 + R_1] = [\\frac{3075}{3}, \\frac{3275}{3}] = [1025, 1091.\\overline{6}]$\n   - 区间 2：$[C_2 - R_2, C_2 + R_2] = [\\frac{2925}{3}, \\frac{3425}{3}] = [975, 1141.\\overline{6}]$\n   - 区间 3：$[C_3 - R_3, C_3 + R_3] = [735 - 50, 735 + 50] = [685, 785]$\n   谱 $\\sigma(\\mathbf{A})$ 包含在并集 $[685, 785] \\cup [975, 1141.\\overline{6}]$ 中。\n\n   如果对所有 $i$ 都有 $|A_{ii}|  R_i$，则矩阵是严格对角占优 (SDD) 的。\n   - 行 1：$|\\frac{3175}{3}| \\approx 1058.33  \\frac{100}{3} \\approx 33.33$。成立。\n   - 行 2：$|\\frac{3175}{3}| \\approx 1058.33  \\frac{250}{3} \\approx 83.33$。成立。\n   - 行 3：$|735|  50$。成立。\n   矩阵 $\\mathbf{A}$ 是严格对角占优的。对于具有正对角元素的对称矩阵，严格对角占优意味着它是正定的，即其所有特征值都严格为正。我们的区间证实了这一点。\n\n3. **最小特征值的最大可靠下界：**\n   根据 Gershgorin 定理，对于任意特征值 $\\lambda \\in \\sigma(\\mathbf{A})$，存在某个 $i$ 使得 $|\\lambda - A_{ii}| \\le R_i$。这意味着 $\\lambda \\ge A_{ii} - R_i$。因此，所有特征值都必须大于或等于这些下界的最小值：\n   $$ \\lambda_{min} \\ge \\min_{i} (A_{ii} - R_i) $$\n   每个圆盘的下界为：\n   - $C_1 - R_1 = 1025$\n   - $C_2 - R_2 = 975$\n   - $C_3 - R_3 = 685$\n   因此，$\\lambda_{min} \\ge \\min(1025, 975, 685) = 685$。\n\n   此外，该定理的第二部分指出，如果 $k$ 个圆盘的并集与其余 $n-k$ 个圆盘的并集不相交，则第一个并集恰好包含 $k$ 个特征值。在这里，$G_1 \\cup G_2$（对应于区间 $[975, 1141.\\overline{6}]$）与 $G_3$（区间 $[685, 785]$）不相交。这证明了在 $[685, 785]$ 中恰好有一个特征值，在 $[975, 1141.\\overline{6}]$ 中有两个特征值。因此，最小特征值 $\\lambda_{min}$ 必须位于区间 $[685, 785]$ 内。\n   从 Gershgorin 圆盘可以确定的 $\\lambda_{min}$ 的最大可靠下界是此范围内的最小值，即 $685$。该定理不允许我们证明一个大于 $685$ 的下界，因为特征值有可能正好位于这个边界上。\n\n最小特征值的最大可靠下界是 $685$。题目要求四舍五入到四位有效数字，即 $685.0$。", "answer": "$$\\boxed{685.0}$$", "id": "2468727"}]}