{"hands_on_practices": [{"introduction": "对偏微分方程进行离散化似乎是直接了当的，但看似合理的选择也可能导致不符合物理规律的结果。本练习将探讨各向异性热传导的离散化，这是材料科学和地球物理学中的常见情景。你将发现标准的中心差分格式如何违反基本的离散最大值原理，从而产生伪振荡，并将这种数值假象与离散矩阵的深层属性联系起来 [@problem_id:2485931]。", "problem": "在单位正方形上，设有一个二维稳态热传导问题，其边界条件为齐次狄利克雷边界条件。温度场 $u(x,y)$ 满足能量守恒定律和傅里叶定律，其导热张量 $\\boldsymbol{K}$ 是一个恒定的对称正定张量，主导热率为 $k_1$ 和 $k_2$，主轴相对于笛卡尔网格坐标轴旋转了角度 $\\phi$。控制方程为 $-\\nabla \\cdot (\\boldsymbol{K}\\nabla u)=f$，在单位正方形内成立，且在边界上 $u=0$。假设源项为均匀的 $f(x,y)\\equiv 1$。\n\n1) 从能量守恒定律和傅里叶定律出发，推导该算子在笛卡尔坐标系下的旋转张量形式，即\n$$\n-\\left(k_{xx}\\,u_{xx} + 2\\,k_{xy}\\,u_{xy} + k_{yy}\\,u_{yy}\\right)=f,\n$$\n并用 $k_1$、$k_2$ 和 $\\phi$ 表示 $k_{xx}$、$k_{yy}$ 和 $k_{xy}$。\n\n2) 在两个方向上间距均为 $h$ 的均匀正方形网格上，使用二阶中心差分对 $u_{xx}$ 和 $u_{yy}$ 进行离散，并使用标准的中心交叉差分对 $u_{xy}$ 进行离散。写出由此得到的九点差分格式，并确定边系数和角系数的符号。\n\n3) 利用你得到的符号模式，从离散极值原理和M矩阵的逆正性刻画方面，严格解释为何只要 $k_{xy}\\neq 0$，这种九点中心差分离散格式就是非单调的，并因此可能表现出在网格加密下仍然存在的伪空间振荡（尽管其振幅可能随 $h$ 减小）。\n\n4) 通过指定数值 $k_1=10$、$k_2=1$ 和 $\\phi=\\pi/4$，以及 $f(x,y)\\equiv 1$ 和齐次狄利克雷边界条件，构建一个具体的反例。在此设定下，显式地确定离散刚度矩阵行中的正角系数（即值为正的角点非对角元的大小），将其表示为 $h$ 的函数。以仅含 $h$ 的闭式解析表达式给出最终答案。不需要单位。不要对答案进行四舍五入。", "solution": "所给问题是一个关于偏微分方程数值分析的多部分理论和计算练习，具体涉及用于各向异性椭圆问题的有限差分法。这个问题具有科学依据，是适定的、客观的且内部一致的。它探讨了在离散化带有混合导数项的偏微分方程时一个已知的基本问题。因此，该问题是有效的，将提供完整的解答。\n\n1) 算子和张量分量的推导\n\n控制方程是能量守恒定律，在稳态下且有源项 $f$ 时，其形式为 $-\\nabla \\cdot \\mathbf{q} = f$，其中 $\\mathbf{q}$ 是热通量矢量。各向异性介质的傅里叶定律指出 $\\mathbf{q} = -\\boldsymbol{K} \\nabla u$，其中 $u$ 是温度，$\\boldsymbol{K}$ 是导热张量。结合这两个定律，得到控制偏微分方程：\n$$\n-\\nabla \\cdot (-\\boldsymbol{K} \\nabla u) = \\nabla \\cdot (\\boldsymbol{K} \\nabla u) = f\n$$\n题目陈述中包含一个负号，因此我们以 $-\\nabla \\cdot (\\boldsymbol{K}\\nabla u)=f$ 进行推导。\n\n在笛卡尔坐标系 $(x,y)$ 中，标量场 $u(x,y)$ 的梯度是矢量 $\\nabla u = \\begin{pmatrix} \\frac{\\partial u}{\\partial x} \\\\ \\frac{\\partial u}{\\partial y} \\end{pmatrix}$。令 $u_x = \\frac{\\partial u}{\\partial x}$ 且 $u_y = \\frac{\\partial u}{\\partial y}$。导热张量 $\\boldsymbol{K}$ 是一个恒定的对称矩阵：\n$$\n\\boldsymbol{K} = \\begin{pmatrix} k_{xx} & k_{xy} \\\\ k_{xy} & k_{yy} \\end{pmatrix}\n$$\n于是矢量场 $\\boldsymbol{K}\\nabla u$ 为：\n$$\n\\boldsymbol{K}\\nabla u = \\begin{pmatrix} k_{xx} & k_{xy} \\\\ k_{xy} & k_{yy} \\end{pmatrix} \\begin{pmatrix} u_x \\\\ u_y \\end{pmatrix} = \\begin{pmatrix} k_{xx}u_x + k_{xy}u_y \\\\ k_{xy}u_x + k_{yy}u_y \\end{pmatrix}\n$$\n该矢量场的散度为：\n$$\n\\nabla \\cdot (\\boldsymbol{K}\\nabla u) = \\frac{\\partial}{\\partial x}(k_{xx}u_x + k_{xy}u_y) + \\frac{\\partial}{\\partial y}(k_{xy}u_x + k_{yy}u_y)\n$$\n由于张量分量 $k_{xx}$、$k_{xy}$ 和 $k_{yy}$ 是常数，我们可以应用求导的乘法法则：\n$$\n\\nabla \\cdot (\\boldsymbol{K}\\nabla u) = k_{xx} \\frac{\\partial^2 u}{\\partial x^2} + k_{xy} \\frac{\\partial^2 u}{\\partial x \\partial y} + k_{xy} \\frac{\\partial^2 u}{\\partial y \\partial x} + k_{yy} \\frac{\\partial^2 u}{\\partial y^2}\n$$\n假设解 $u$ 足够光滑（例如，$u \\in C^2$），根据 Clairaut 关于混合偏导数相等的定理，我们有 $u_{xy} = \\frac{\\partial^2 u}{\\partial x \\partial y} = \\frac{\\partial^2 u}{\\partial y \\partial x} = u_{yx}$。表达式简化为：\n$$\n\\nabla \\cdot (\\boldsymbol{K}\\nabla u) = k_{xx}u_{xx} + 2k_{xy}u_{xy} + k_{yy}u_{yy}\n$$\n因此，控制方程 $-\\nabla \\cdot (\\boldsymbol{K}\\nabla u)=f$ 的形式为：\n$$\n-\\left(k_{xx}u_{xx} + 2k_{xy}u_{xy} + k_{yy}u_{yy}\\right) = f\n$$\n推导的第一部分至此完成。\n\n接下来，我们用主导热率 $k_1$、$k_2$ 和旋转角 $\\phi$ 来表示 $\\boldsymbol{K}$ 的分量。在主坐标系中，该张量是对角阵：$\\boldsymbol{K}' = \\begin{pmatrix} k_1 & 0 \\\\ 0 & k_2 \\end{pmatrix}$。从主轴到笛卡尔轴的变换通过旋转矩阵 $\\boldsymbol{R}(\\phi) = \\begin{pmatrix} \\cos\\phi & -\\sin\\phi \\\\ \\sin\\phi & \\cos\\phi \\end{pmatrix}$ 实现。张量变换定律为 $\\boldsymbol{K} = \\boldsymbol{R} \\boldsymbol{K}' \\boldsymbol{R}^T$。\n$$\n\\boldsymbol{K} = \\begin{pmatrix} \\cos\\phi & -\\sin\\phi \\\\ \\sin\\phi & \\cos\\phi \\end{pmatrix} \\begin{pmatrix} k_1 & 0 \\\\ 0 & k_2 \\end{pmatrix} \\begin{pmatrix} \\cos\\phi & \\sin\\phi \\\\ -\\sin\\phi & \\cos\\phi \\end{pmatrix}\n$$\n$$\n\\boldsymbol{K} = \\begin{pmatrix} \\cos\\phi & -\\sin\\phi \\\\ \\sin\\phi & \\cos\\phi \\end{pmatrix} \\begin{pmatrix} k_1\\cos\\phi & k_1\\sin\\phi \\\\ -k_2\\sin\\phi & k_2\\cos\\phi \\end{pmatrix}\n$$\n$$\n\\boldsymbol{K} = \\begin{pmatrix} k_1\\cos^2\\phi + k_2\\sin^2\\phi & k_1\\cos\\phi\\sin\\phi - k_2\\sin\\phi\\cos\\phi \\\\ k_1\\sin\\phi\\cos\\phi - k_2\\sin\\phi\\cos\\phi & k_1\\sin^2\\phi + k_2\\cos^2\\phi \\end{pmatrix}\n$$\n将此矩阵与 $\\boldsymbol{K}$ 的一般形式进行比较，我们确定其分量为：\n$$\nk_{xx} = k_1\\cos^2\\phi + k_2\\sin^2\\phi\n$$\n$$\nk_{yy} = k_1\\sin^2\\phi + k_2\\cos^2\\phi\n$$\n$$\nk_{xy} = (k_1 - k_2)\\sin\\phi\\cos\\phi = \\frac{1}{2}(k_1 - k_2)\\sin(2\\phi)\n$$\n\n2) 有限差分离散化和差分格式\n\n我们在间距为 $h$ 的均匀正方形网格上对算子 $L(u) = -k_{xx}u_{xx} - 2k_{xy}u_{xy} - k_{yy}u_{yy}$ 进行离散化。令 $u_{i,j}$ 表示在网格点 $(x_i, y_j) = (ih, jh)$ 处的近似解。我们使用标准的二阶中心差分近似：\n$$\nu_{xx}\\bigg|_{i,j} \\approx \\frac{u_{i+1,j} - 2u_{i,j} + u_{i-1,j}}{h^2}\n$$\n$$\nu_{yy}\\bigg|_{i,j} \\approx \\frac{u_{i,j+1} - 2u_{i,j} + u_{i,j-1}}{h^2}\n$$\n$$\nu_{xy}\\bigg|_{i,j} \\approx \\frac{u_{i+1,j+1} - u_{i-1,j+1} - u_{i+1,j-1} + u_{i-1,j-1}}{4h^2}\n$$\n将这些近似代入离散方程 $L_h(u_{i,j}) = f_{i,j}$，得到：\n$$\n-k_{xx}\\frac{u_{i+1,j} - 2u_{i,j} + u_{i-1,j}}{h^2} - k_{yy}\\frac{u_{i,j+1} - 2u_{i,j} + u_{i,j-1}}{h^2} - 2k_{xy}\\frac{u_{i+1,j+1} - u_{i-1,j+1} - u_{i+1,j-1} + u_{i-1,j-1}}{4h^2} = f_{i,j}\n$$\n为了构建离散刚度矩阵 $A$，我们将其写成线性系统 $A\\mathbf{u} = \\mathbf{f}$ 的形式。对应于网格点 $(i,j)$ 的矩阵行的元素是各项 $u$ 的系数。为了清晰起见乘以 $h^2$ 对矩阵本身而言是不正确的，所以我们保留 $1/h^2$ 因子。矩阵行的系数为：\n\\begin{itemize}\n    \\item 中心点 ($u_{i,j}$): $\\frac{2(k_{xx}+k_{yy})}{h^2}$ (对角元)\n    \\item 东/西 ($u_{i\\pm1,j}$): $-\\frac{k_{xx}}{h^2}$ (非对角元)\n    \\item 南/北 ($u_{i,j\\pm1}$): $-\\frac{k_{yy}}{h^2}$ (非对角元)\n    \\item 东北/西南 ($u_{i+1,j+1}, u_{i-1,j-1}$): $-\\frac{k_{xy}}{2h^2}$ (非对角元)\n    \\item 西北/东南 ($u_{i-1,j+1}, u_{i+1,j-1}$): $+\\frac{k_{xy}}{2h^2}$ (非对角元)\n\\end{itemize}\n算子 $L_h$ 对应的九点差分格式由所涉及的 $u$ 变量的系数表示为：\n$$\n\\frac{1}{h^2} \\begin{pmatrix}\nk_{xy}/2 & -k_{yy} & -k_{xy}/2 \\\\\n-k_{xx} & 2(k_{xx}+k_{yy}) & -k_{xx} \\\\\n-k_{xy}/2 & -k_{yy} & k_{xy}/2\n\\end{pmatrix}\n$$\n对于刚度矩阵行中系数的符号（这对应于将上述表达式设为等于 $f_{i,j}$ 并将除中心项外的所有项移到等号右边，从而反转它们的符号）：\n\\begin{itemize}\n    \\item 对角系数 $\\frac{2(k_{xx}+k_{yy})}{h^2}$ 是正的，因为 $\\boldsymbol{K}$ 是正定的，这意味着 $k_{xx}>0$ 且 $k_{yy}>0$。\n    \\item 最近邻点的边系数 $-\\frac{k_{xx}}{h^2}$ 和 $-\\frac{k_{yy}}{h^2}$ 是负的。\n    \\item 角系数 $-\\frac{k_{xy}}{2h^2}$ 和 $+\\frac{k_{xy}}{2h^2}$ 的符号取决于 $k_{xy}$ 的符号。如果 $k_{xy} \\neq 0$，一些角系数是正的，另一些是负的。\n\\end{itemize}\n\n3) 非单调性的解释\n\n如果所得到的矩阵 $A$ 是逆正的，即其逆矩阵 $A^{-1}$ 的所有元素都是非负的，那么该有限差分格式称为单调的。对于一个不可约矩阵 $A$，其逆正性的一个充分且通常是必要的条件是 $A$ 是一个 M 矩阵。\n\n如果一个矩阵 $A$ 是 Z 矩阵且其逆矩阵是非负的，那么 $A$ 就是一个 M 矩阵。Z 矩阵是指其所有非对角元均为非正的矩阵（即对于 $i \\neq j$，有 $A_{ij} \\le 0$）。\n\n根据第 (2) 部分的分析，我们的刚度矩阵 $A$ 的非对角元为：\n$$\nA_{(i,j),(i \\pm 1, j)} = -\\frac{k_{xx}}{h^2} \\le 0\n$$\n$$\nA_{(i,j),(i, j \\pm 1)} = -\\frac{k_{yy}}{h^2} \\le 0\n$$\n$$\nA_{(i,j),(i+1,j+1)} = A_{(i,j),(i-1,j-1)} = -\\frac{k_{xy}}{2h^2}\n$$\n$$\nA_{(i,j),(i-1,j+1)} = A_{(i,j),(i+1,j-1)} = +\\frac{k_{xy}}{2h^2}\n$$\n如果 $k_{xy} \\neq 0$，那么一半的角系数是正的，另一半是负的。例如，如果 $k_{xy} > 0$，则 $A_{(i,j),(i-1,j+1)}$ 和 $A_{(i,j),(i+1,j-1)}$ 严格为正。这违反了 $A$ 成为 Z 矩阵的条件。因此，$A$ 不可能是 M 矩阵。由于 $A$ 不是 M 矩阵，该格式不是单调的。\n\n单调性的缺失与违反离散极值原理 (DMP) 直接相关。弱离散极值原理指出，对于算子 $L_h$，如果在区域内部处处有 $L_h u \\le 0$，那么 $u$ 的最大值必须出现在边界上。如果差分格式可以写成 $u_{i,j} = \\sum_{(k,l)\\neq(i,j)} \\omega_{kl} u_{kl} + \\gamma$ 的形式，其中所有权重 $\\omega_{kl}$ 都是非负的，则该原理成立。从我们的格式中，我们可以将 $u_{i,j}$ 表示为：\n$$\nu_{i,j} = \\sum_{(k,l)\\neq(i,j)} \\left(-\\frac{A_{(i,j),(k,l)}}{A_{(i,j),(i,j)}}\\right) u_{k,l} + \\frac{h^2}{2(k_{xx}+k_{yy})} f_{i,j}\n$$\n权重为 $\\omega_{(k,l)} = -A_{(i,j),(k,l)}/A_{(i,j),(i,j)}$。由于对角元 $A_{(i,j),(i,j)}$ 是正的，权重的非负性要求所有非对角元满足 $A_{(i,j),(k,l)} \\le 0$。这恰好是 Z 矩阵的条件。因为当 $k_{xy} \\neq 0$ 时，这个条件被违反，所以有些权重是负的。负权重允许一个相邻值被“减去”，这可能在内部产生局部最大值或最小值，即使源项或边界条件并不支持这样做。这表现为数值解中伪的、网格尺度的振荡，这些振荡并不代表问题的物理实质。尽管该格式在形式上仍然是二阶精确的（即在合适的范数下，误差大小随 $h^2$ 减小），但这些非物理的振荡在网格加密下仍然存在。\n\n4) 具体反例\n\n给定 $k_1=10$、$k_2=1$ 和 $\\phi=\\pi/4$。首先，我们计算张量分量。\n$$\n\\cos(\\pi/4) = \\frac{1}{\\sqrt{2}}, \\quad \\sin(\\pi/4) = \\frac{1}{\\sqrt{2}}\n$$\n$$\nk_{xx} = k_1\\cos^2\\phi + k_2\\sin^2\\phi = 10\\left(\\frac{1}{2}\\right) + 1\\left(\\frac{1}{2}\\right) = 5.5 = \\frac{11}{2}\n$$\n$$\nk_{yy} = k_1\\sin^2\\phi + k_2\\cos^2\\phi = 10\\left(\\frac{1}{2}\\right) + 1\\left(\\frac{1}{2}\\right) = 5.5 = \\frac{11}{2}\n$$\n$$\nk_{xy} = (k_1-k_2)\\sin\\phi\\cos\\phi = (10 - 1)\\left(\\frac{1}{\\sqrt{2}}\\right)\\left(\\frac{1}{\\sqrt{2}}\\right) = 9\\left(\\frac{1}{2}\\right) = 4.5 = \\frac{9}{2}\n$$\n由于 $k_{xy} = 9/2 > 0$，离散刚度矩阵行中的正角系数是 $A_{(i,j),(i-1,j+1)}$ 和 $A_{(i,j),(i+1,j-1)}$。它们的值由第 (2) 部分的公式给出：\n$$\n+\\frac{k_{xy}}{2h^2}\n$$\n代入 $k_{xy} = 9/2$ 的值，正角系数为：\n$$\n\\frac{9/2}{2h^2} = \\frac{9}{4h^2}\n$$\n这是刚度矩阵中的一个正的非对角元，明确地展示了在这种配置下对 Z 矩阵性质的违反。", "answer": "$$\n\\boxed{\\frac{9}{4h^2}}\n$$", "id": "2485931"}, {"introduction": "在了解了一种格式可能出现的定性失效后，我们现在需要工具来量化其性能。本练习将介绍一种强大的技术——修正波数分析，用以研究经典的拉普拉斯算子五点模板的离散误差。通过分析数值格式如何表示不同方向的平面波，你将揭示一个微妙但关键的概念——数值各向异性，即计算网格本身会给解的误差带来方向性偏差 [@problem_id:2486059]。", "problem": "一个无界均匀介质中的二维、各向同性、稳态热传导问题由偏微分方程 (PDE) $-\\kappa \\nabla^{2} T = 0$ 描述，其中 $\\kappa$ 是一个正常数热导率，$T(x,y)$ 是温度场。考虑在一个间距为 $h$ 的均匀、轴对齐的笛卡尔网格上，使用标准五点有限差分格式来离散化拉普拉斯算子 $\\nabla^{2}$。为了量化离散误差的方向依赖性，请分析离散算子对以下形式的平面波温度场的响应：\n$$\nT(x,y) = \\exp\\!\\big(i k (x \\cos\\theta + y \\sin\\theta)\\big),\n$$\n其中 $k>0$ 是一个固定的空间波数，$\\theta \\in [0,\\pi/2]$ 是波矢量与 $x$ 轴之间的夹角，$i$ 是虚数单位。\n\n将离散符号 $\\lambda_{d}(k,h,\\theta)$ 定义为五点差分格式作用于某个网格节点上的 $T$ 的结果与该节点上 $T$ 的值之比。作用于 $T$ 的 $-\\nabla^{2}$ 的精确连续符号是 $k^{2}$。仅使用基本的泰勒展开，并且不借助任何预先制表的修正方程结果，推导当 $h \\to 0$ 且 $k$ 和 $\\theta$ 保持固定时，领头阶（关于 $h$）的方向依赖的相对特征值误差：\n$$\n\\varepsilon(\\theta) \\equiv \\frac{\\lambda_{d}(k,h,\\theta) + k^{2}}{k^{2}},\n$$\n\n请以 $\\varepsilon(\\theta)$ 的单个闭式解析表达式的形式给出最终答案，表达式应经过简化，并保留到 $(k h)^{2}$ 阶（包括此阶）的项。无需进行数值计算。最终答案不带单位。", "solution": "所述问题在科学上是合理的、适定的，且无内在矛盾。它代表了对有限差分格式离散误差的一种标准分析，通常称为修正波数分析或截断误差分析。我将进行严谨的推导。\n\n目标是确定当应用于平面波时，用于拉普拉斯算子 $\\nabla^{2}$ 的五点有限差分格式的领头阶方向依赖的相对误差 $\\varepsilon(\\theta)$。\n\n给定的偏微分方程 $-\\kappa \\nabla^{2} T = 0$ 提供了背景。然而，问题的核心在于分析拉普拉斯算子 $\\nabla^{2} = \\frac{\\partial^{2}}{\\partial x^{2}} + \\frac{\\partial^{2}}{\\partial y^{2}}$ 的离散近似。\n\n标准五点有限差分格式使用一个间距为 $h$ 的均匀笛卡尔网格上某个网格节点 $(x,y)$ 的邻近点来近似该函数 $T(x,y)$ 的拉普拉斯值。我们记此离散算子为 $\\nabla_{h}^{2}$，其定义如下：\n$$\n(\\nabla_{h}^{2} T)(x,y) = \\frac{T(x+h, y) + T(x-h, y) + T(x, y+h) + T(x, y-h) - 4T(x,y)}{h^{2}}\n$$\n\n给定平面波温度场 $T(x,y) = \\exp(i k (x \\cos\\theta + y \\sin\\theta))$。我们分析离散算子 $\\nabla_{h}^{2}$ 在此函数上的作用。让我们在差分格式所要求的点上计算 $T$ 的值：\n\\begin{align*} T(x+h, y) &= \\exp(i k ((x+h) \\cos\\theta + y \\sin\\theta)) = \\exp(i k (x \\cos\\theta + y \\sin\\theta)) \\exp(i k h \\cos\\theta) = T(x,y) \\exp(i k h \\cos\\theta) \\\\ T(x-h, y) &= T(x,y) \\exp(-i k h \\cos\\theta) \\\\ T(x, y+h) &= T(x,y) \\exp(i k h \\sin\\theta) \\\\ T(x, y-h) &= T(x,y) \\exp(-i k h \\sin\\theta) \\end{align*}\n将这些代入离散拉普拉斯算子的定义中，得到：\n$$\n(\\nabla_{h}^{2} T)(x,y) = \\frac{T(x,y)}{h^{2}} \\left[ \\exp(i k h \\cos\\theta) + \\exp(-i k h \\cos\\theta) + \\exp(i k h \\sin\\theta) + \\exp(-i k h \\sin\\theta) - 4 \\right]\n$$\n问题将离散符号 $\\lambda_{d}(k,h,\\theta)$ 定义为比率 $(\\nabla_{h}^{2} T)/T$。从上面的表达式，我们得到：\n$$\n\\lambda_{d}(k,h,\\theta) = \\frac{1}{h^{2}} \\left[ \\big(\\exp(i k h \\cos\\theta) + \\exp(-i k h \\cos\\theta)\\big) + \\big(\\exp(i k h \\sin\\theta) + \\exp(-i k h \\sin\\theta)\\big) - 4 \\right]\n$$\n使用欧拉恒等式 $\\exp(iz) + \\exp(-iz) = 2 \\cos(z)$，我们简化离散符号的表达式：\n$$\n\\lambda_{d}(k,h,\\theta) = \\frac{1}{h^{2}} \\left[ 2 \\cos(k h \\cos\\theta) + 2 \\cos(k h \\sin\\theta) - 4 \\right] = \\frac{2}{h^{2}} \\left[ \\cos(k h \\cos\\theta) + \\cos(k h \\sin\\theta) - 2 \\right]\n$$\n这就是五点拉普拉斯算子的精确离散符号。\n\n精确连续符号对应于连续算子 $\\nabla^{2}$ 作用于给定平面波时的特征值。将 $\\nabla^{2}$ 作用于 $T(x,y)$：\n$$\n\\nabla^{2}T = \\frac{\\partial^{2}T}{\\partial x^{2}} + \\frac{\\partial^{2}T}{\\partial y^{2}} = (i k \\cos\\theta)^{2} T + (i k \\sin\\theta)^{2} T = (-k^{2}\\cos^{2}\\theta - k^{2}\\sin^{2}\\theta)T = -k^{2}(\\cos^{2}\\theta + \\sin^{2}\\theta)T = -k^{2}T\n$$\n因此，精确特征值为 $-k^{2}$。问题陈述正确地指出 $-\\nabla^{2}$ 的符号是 $k^{2}$。\n\n为了找到领头阶误差，我们必须对 $\\lambda_{d}$ 进行关于小量 $h$ 的泰勒展开，因为我们考虑的是在 $k$ 和 $\\theta$ 固定的情况下 $h \\to 0$ 的极限。余弦函数在 $z=0$ 附近的泰勒级数是：\n$$\n\\cos(z) = 1 - \\frac{z^{2}}{2!} + \\frac{z^{4}}{4!} - O(z^{6})\n$$\n我们将此展开应用于 $\\lambda_{d}$ 中的各项。问题要求在最终误差表达式中保留到 $(kh)^{2}$ 阶的项，这意味着我们必须将余弦项展开到至少其自变量的四次方，以捕捉 $\\lambda_d$ 中的领头误差项。\n令 $u = k h \\cos\\theta$ 且 $v = k h \\sin\\theta$。\n$$\n\\cos(u) = 1 - \\frac{u^{2}}{2} + \\frac{u^{4}}{24} + O(u^{6}) = 1 - \\frac{k^{2}h^{2}\\cos^{2}\\theta}{2} + \\frac{k^{4}h^{4}\\cos^{4}\\theta}{24} + O((kh)^{6})\n$$\n$$\n\\cos(v) = 1 - \\frac{v^{2}}{2} + \\frac{v^{4}}{24} + O(v^{6}) = 1 - \\frac{k^{2}h^{2}\\sin^{2}\\theta}{2} + \\frac{k^{4}h^{4}\\sin^{4}\\theta}{24} + O((kh)^{6})\n$$\n将这些展开式代回 $\\lambda_{d}$ 的表达式中：\n$$\n\\lambda_{d} = \\frac{2}{h^{2}} \\left[ \\left(1 - \\frac{k^{2}h^{2}\\cos^{2}\\theta}{2} + \\frac{k^{4}h^{4}\\cos^{4}\\theta}{24}\\right) + \\left(1 - \\frac{k^{2}h^{2}\\sin^{2}\\theta}{2} + \\frac{k^{4}h^{4}\\sin^{4}\\theta}{24}\\right) - 2 + O((kh)^{6}) \\right]\n$$\n合并各项：\n$$\n\\lambda_{d} = \\frac{2}{h^{2}} \\left[ (1+1-2) - \\frac{k^{2}h^{2}}{2}(\\cos^{2}\\theta + \\sin^{2}\\theta) + \\frac{k^{4}h^{4}}{24}(\\cos^{4}\\theta + \\sin^{4}\\theta) + O((kh)^{6}) \\right]\n$$\n使用恒等式 $\\cos^{2}\\theta + \\sin^{2}\\theta = 1$：\n$$\n\\lambda_{d} = \\frac{2}{h^{2}} \\left[ -\\frac{k^{2}h^{2}}{2} + \\frac{k^{4}h^{4}}{24}(\\cos^{4}\\theta + \\sin^{4}\\theta) + O(k^{6}h^{6}) \\right]\n$$\n$$\n\\lambda_{d} = -k^{2} + \\frac{k^{4}h^{2}}{12}(\\cos^{4}\\theta + \\sin^{4}\\theta) + O(k^{6}h^{4})\n$$\n此表达式表明，离散特征值 $\\lambda_{d}$ 在领头阶上与精确特征值 $-k^{2}$ 相匹配，下一项是领头阶截断误差，其阶数为 $O(h^{2})$。\n\n现在，我们计算问题中定义的相对特征值误差：\n$$\n\\varepsilon(\\theta) \\equiv \\frac{\\lambda_{d}(k,h,\\theta) + k^{2}}{k^{2}}\n$$\n代入我们对 $\\lambda_{d}$ 的展开式：\n$$\n\\varepsilon(\\theta) = \\frac{\\left(-k^{2} + \\frac{k^{4}h^{2}}{12}(\\cos^{4}\\theta + \\sin^{4}\\theta) + O(k^{6}h^{4})\\right) + k^{2}}{k^{2}}\n$$\n$$\n\\varepsilon(\\theta) = \\frac{\\frac{k^{4}h^{2}}{12}(\\cos^{4}\\theta + \\sin^{4}\\theta) + O(k^{6}h^{4})}{k^{2}} = \\frac{k^{2}h^{2}}{12}(\\cos^{4}\\theta + \\sin^{4}\\theta) + O(k^{4}h^{4})\n$$\n问题要求最终答案经过简化，并保留到 $(kh)^{2}$ 阶的项。因此，领头阶误差为：\n$$\n\\varepsilon(\\theta) = \\frac{k^{2}h^{2}}{12}(\\cos^{4}\\theta + \\sin^{4}\\theta)\n$$\n为简化与方向相关的部分，我们使用三角恒等式：\n$$\n\\cos^{4}\\theta + \\sin^{4}\\theta = (\\cos^{2}\\theta + \\sin^{2}\\theta)^{2} - 2\\sin^{2}\\theta\\cos^{2}\\theta = 1 - 2(\\sin\\theta\\cos\\theta)^{2} = 1 - 2\\left(\\frac{\\sin(2\\theta)}{2}\\right)^{2} = 1 - \\frac{\\sin^{2}(2\\theta)}{2}\n$$\n使用恒等式 $\\sin^{2}(A) = \\frac{1 - \\cos(2A)}{2}$，我们有 $\\sin^{2}(2\\theta) = \\frac{1 - \\cos(4\\theta)}{2}$。\n$$\n\\cos^{4}\\theta + \\sin^{4}\\theta = 1 - \\frac{1}{2}\\left(\\frac{1 - \\cos(4\\theta)}{2}\\right) = 1 - \\frac{1}{4} + \\frac{\\cos(4\\theta)}{4} = \\frac{3}{4} + \\frac{\\cos(4\\theta)}{4} = \\frac{1}{4}(3 + \\cos(4\\theta))\n$$\n将这个简化形式代入我们的 $\\varepsilon(\\theta)$ 表达式中：\n$$\n\\varepsilon(\\theta) = \\frac{k^{2}h^{2}}{12} \\left[ \\frac{1}{4}(3 + \\cos(4\\theta)) \\right] = \\frac{k^{2}h^{2}}{48}(3 + \\cos(4\\theta))\n$$\n这就是领头阶相对特征值误差的最终表达式，其阶数如要求为 $(kh)^{2}$。", "answer": "$$\\boxed{\\frac{k^{2}h^{2}}{48}(3 + \\cos(4\\theta))}$$", "id": "2486059"}, {"introduction": "从稳态问题转向瞬态问题，增加了时间离散化的复杂性。最后一个练习聚焦于一项至关重要的工程技能——验证：我们如何确信我们的代码已正确实现？你将设计并执行一个数值实验，以验证 Crank-Nicolson 格式的二阶时间精度，并学习如何系统地分离空间和时间误差，从而对代码性能做出明确的评估 [@problem_id:2486032]。", "problem": "您的任务是设计、实现并进行一项数值实验，用于在一维瞬态热传导模拟中分离空间和时间离散误差，并验证 Crank–Nicolson (CN) 方法的二阶时间精度。\n\n出发点与控制原理：从一维均匀杆的局部能量守恒定律出发，该杆具有恒定的热扩散系数 $\\alpha$ 且无内部热源，由此可导出热方程\n$$\n\\frac{\\partial u}{\\partial t} = \\alpha \\frac{\\partial^2 u}{\\partial x^2},\n$$\n对于 $x \\in (0,L)$ 及 $t \\ge 0$，其中 $u(x,t)$ 是温度。施加 Dirichlet 边界条件 $u(0,t)=0$ 和 $u(L,t)=0$，以及初始条件 $u(x,0)=\\sin\\!\\left(\\pi x/L\\right)$。\n\n离散化要求（您需要根据给定的控制方程和原理自行推导和实现，而非直接引用现成公式）：在 $[0,L]$ 上使用均匀空间网格，该网格包含 $N$ 个等长段（即 $N+1$ 个节点，包括边界），并对空间二阶导数使用标准的二阶中心差分格式。对于时间推进，使用 Crank–Nicolson (CN) 方法。在每个时间步，使用适用于三对角系统的算法，精确地（在浮点运算精度内）组装并求解所产生的三对角线性系统。\n\n误差分离策略：通过以下两种互补的方式将时间误差与空间误差分离。\n- 策略 A（时空解析解）：利用精确解\n$$\nu_{\\text{exact}}(x,t) = \\sin\\!\\left(\\pi x/L\\right)\\, \\exp\\!\\left(-\\alpha \\left(\\pi/L\\right)^2 t\\right),\n$$\n并通过使用非常精细的空间网格来确保空间误差可以忽略不计。在空间误差可忽略的情况下，当 $\\Delta t \\to 0$ 时，观测到的误差将揭示时间精度阶数。\n- 策略 B（同网格时间参考解）：在固定的空间网格上（即 $N$ 固定），通过比较一个以时间步长 $\\Delta t$ 计算的解与另一个在相同空间网格上以更小的时间步长 $\\Delta t_{\\text{ref}} = \\Delta t / 2^r$（对于给定的加密因子 $r$）计算的参考解，来估计时间误差。由于两个解共享相同的空间离散格式，将它们相减可以消除主导的空间误差，从而分离出时间误差。\n\n误差度量与观测阶数：对于一个时间步长序列 $\\{\\Delta t_j\\}$（其中 $\\Delta t_{j+1} = \\Delta t_j/2$），在固定的最终时刻 $T$，计算在 $N-1$ 个内部节点 $\\{x_i\\}_{i=1}^{N-1}$ 上的误差离散 $L^2$ 范数，\n$$\n\\|e(\\Delta t_j)\\|_{L^2_h} = \\left( h \\sum_{i=1}^{N-1} \\left( u_i^{\\text{num}}(T;\\Delta t_j) - u_i^{\\text{ref}}(T) \\right)^2 \\right)^{1/2},\n$$\n其中 $h = L/N$，并且 $u_i^{\\text{ref}}(T)$ 对于策略 A 是 $u_{\\text{exact}}(x_i,T)$，对于策略 B 则是同网格参考解。通过下式估计连续两对解之间的观测时间阶数\n$$\n\\hat{p}_j = \\frac{\\log\\!\\left(\\|e(\\Delta t_j)\\|_{L^2_h} / \\|e(\\Delta t_{j+1})\\|_{L^2_h}\\right)}{\\log\\!\\left(\\Delta t_j / \\Delta t_{j+1}\\right)}.\n$$\n每个测试案例报告一个单一的阶数估计值 $\\hat{p}$，取成对 $\\hat{p}_j$ 中的最小值，以防止非渐近效应的影响。\n\n科学真实性与单位：$L$ 的单位为 $\\mathrm{m}$，$\\alpha$ 的单位为 $\\mathrm{m^2/s}$，$t$ 的单位为 $\\mathrm{s}$，$u$ 的单位为 $\\mathrm{K}$。所有计算出的观测阶数 $\\hat{p}$ 都是无量纲的。在为给定的 $T$ 构建时间步长序列时，使用的步长应能精确划分 $T$；如有必要，内部应将每个 $\\Delta t$ 调整为 $T/M$，其中 $M$ 为整数。\n\n您的程序必须实现以上内容并运行以下测试套件，每个案例产生一个标量值 $\\hat{p}$。使用指定的单位。所有案例共享相同的边界条件 $u(0,t)=0\\,\\mathrm{K}$ 和 $u(L,t)=0\\,\\mathrm{K}$，以及初始条件 $u(x,0)=\\sin(\\pi x/L)\\,\\mathrm{K}$。\n\n测试套件：\n- 案例 A（理想情况：使用解析解作为参考，空间误差可忽略）：$L=1\\,\\mathrm{m}$，$\\alpha=0.1\\,\\mathrm{m^2/s}$，$T=0.1\\,\\mathrm{s}$，$N=4096$。使用策略 A，以精确解为参考。使用时间步长序列 $\\Delta t \\in \\{T/10,\\, T/20,\\, T/40,\\, T/80\\}$。\n- 案例 B（同网格时间参考解以消除空间误差）：$L=1\\,\\mathrm{m}$，$\\alpha=0.1\\,\\mathrm{m^2/s}$，$T=0.1\\,\\mathrm{s}$，$N=64$。使用策略 B，加密因子 $r=6$，因此 $\\Delta t_{\\text{ref}} = \\Delta t / 2^6$。使用相同的时间步长序列 $\\Delta t \\in \\{T/10,\\, T/20,\\, T/40,\\, T/80\\}$。\n- 案例 C（边缘案例，展示当空间误差不可忽略时使用解析解参考所带来的污染）：$L=1\\,\\mathrm{m}$，$\\alpha=0.1\\,\\mathrm{m^2/s}$，$T=0.1\\,\\mathrm{s}$，$N=16$。使用策略 A，以精确解为参考。使用相同的时间步长序列 $\\Delta t \\in \\{T/10,\\, T/20,\\, T/40,\\, T/80\\}$。\n\n数值输出：\n- 对每个测试案例，按前述方法计算标量 $\\hat{p}$。将每个 $\\hat{p}$ 四舍五入到三位小数。\n\n最终输出格式：\n- 您的程序应产生单行输出，其中包含三个结果，以逗号分隔并用方括号括起，顺序为 [案例 A, 案例 B, 案例 C]，例如，“[$\\text{pA}$,$\\text{pB}$,$\\text{pC}$]”。打印的行必须包含纯十进制数字，不带 LaTeX 标记。观测阶数是无量纲的，应作为浮点数打印，并四舍五入到三位小数。", "solution": "所提出的问题是一个定义明确的练习，旨在验证一个偏微分方程的数值方法。它要求实现一维瞬态热方程的 Crank-Nicolson 格式，并随后通过数值实验来确认其二阶时间精度。问题陈述在科学上是合理的，内部逻辑是一致的，并且是完整的。所有参数和方法都以足够的精度被指定，从而可以得到唯一且可验证的解。因此，我们着手进行推导和实现。\n\n控制方程是一维热方程，适用于均匀介质，其热扩散系数 $\\alpha$ 为恒定值且无内部热源：\n$$\n\\frac{\\partial u}{\\partial t} = \\alpha \\frac{\\partial^2 u}{\\partial x^2}\n$$\n计算域被指定为 $x \\in [0, L]$ 和 $t \\ge 0$。分析是在空间域的内部 $x \\in (0, L)$ 上进行的。该系统受齐次 Dirichlet 边界条件 $u(0, t) = 0$ 和 $u(L, t) = 0$ 以及正弦初始条件 $u(x, 0) = \\sin(\\pi x/L)$ 的约束。\n\n我们的首要任务是构建有限差分近似。我们定义一个包含 $N+1$ 个节点的均匀空间网格，$x_i = i h$，其中 $i = 0, 1, \\dots, N$，网格间距为 $h = L/N$。时间被离散化为大小为 $\\Delta t$ 的步长，使得 $t_n = n \\Delta t$。离散点 $(x_i, t_n)$ 处的温度记作 $u_i^n \\approx u(x_i, t_n)$。\n\n空间二阶导数通过二阶中心差分格式来近似：\n$$\n\\frac{\\partial^2 u}{\\partial x^2} \\bigg|_{x_i} \\approx \\frac{u_{i-1} - 2u_i + u_{i+1}}{h^2} + O(h^2)\n$$\nCrank-Nicolson 方法是一种隐式格式，可达到二阶时间精度。其构造方式是将有限差分近似的中心定在半个时间步 $t_{n+1/2} = t_n + \\Delta t/2$ 处。时间导数通过关于该点的中心差分来近似：\n$$\n\\frac{\\partial u}{\\partial t} \\bigg|_{t_{n+1/2}} \\approx \\frac{u_i^{n+1} - u_i^n}{\\Delta t} + O(\\Delta t^2)\n$$\n空间导数项则计算为它在时间层 $n$ 和 $n+1$ 值的平均值：\n$$\n\\frac{\\partial^2 u}{\\partial x^2} \\bigg|_{t_{n+1/2}} \\approx \\frac{1}{2} \\left( \\frac{u_{i-1}^n - 2u_i^n + u_{i+1}^n}{h^2} + \\frac{u_{i-1}^{n+1} - 2u_i^{n+1} + u_{i+1}^{n+1}}{h^2} \\right)\n$$\n将这些近似代入控制偏微分方程，可得到每个内部节点 $i = 1, \\dots, N-1$ 的离散方程：\n$$\n\\frac{u_i^{n+1} - u_i^n}{\\Delta t} = \\frac{\\alpha}{2h^2} \\left[ (u_{i-1}^n - 2u_i^n + u_{i+1}^n) + (u_{i-1}^{n+1} - 2u_i^{n+1} + u_{i+1}^{n+1}) \\right]\n$$\n为了求解时间层 $n+1$ 的未知温度，我们重排该方程，将 $t_{n+1}$ 时刻的项置于左侧，将 $t_n$ 时刻的已知项置于右侧。令 $\\lambda = \\alpha \\Delta t / h^2$ 为无量纲网格傅里叶数。方程变为：\n$$\n-\\frac{\\lambda}{2} u_{i-1}^{n+1} + (1 + \\lambda) u_i^{n+1} - \\frac{\\lambda}{2} u_{i+1}^{n+1} = \\frac{\\lambda}{2} u_{i-1}^n + (1 - \\lambda) u_i^n + \\frac{\\lambda}{2} u_{i+1}^n\n$$\n这代表了一个包含 $N-1$ 个线性方程的方程组，用于求解未知的内部节点温度 $\\{u_i^{n+1}\\}_{i=1}^{N-1}$。边界条件 $u_0^{n+1} = 0$ 和 $u_N^{n+1} = 0$ 被并入第一个（$i=1$）和最后一个（$i=N-1$）内部节点的方程中。该系统可以写成矩阵形式：\n$$\nA \\mathbf{u}^{n+1} = B \\mathbf{u}^{n}\n$$\n其中 $\\mathbf{u}^n$ 是内部温度向量 $[u_1^n, u_2^n, \\dots, u_{N-1}^n]^T$。矩阵 $A$ 和 $B$ 是 $(N-1) \\times (N-1)$ 的三对角矩阵，其系数为常数：\n$$\nA = \n\\begin{pmatrix}\n1+\\lambda & -\\frac{\\lambda}{2} & & \\\\\n-\\frac{\\lambda}{2} & 1+\\lambda & -\\frac{\\lambda}{2} & \\\\\n& \\ddots & \\ddots & \\ddots & \\\\\n& & -\\frac{\\lambda}{2} & 1+\\lambda & -\\frac{\\lambda}{2} \\\\\n& & & -\\frac{\\lambda}{2} & 1+\\lambda\n\\end{pmatrix}\n, \\quad\nB = \n\\begin{pmatrix}\n1-\\lambda & \\frac{\\lambda}{2} & & \\\\\n\\frac{\\lambda}{2} & 1-\\lambda & \\frac{\\lambda}{2} & \\\\\n& \\ddots & \\ddots & \\ddots & \\\\\n& & \\frac{\\lambda}{2} & 1-\\lambda & \\frac{\\lambda}{2} \\\\\n& & & \\frac{\\lambda}{2} & 1-\\lambda\n\\end{pmatrix}\n$$\n首先计算右端向量 $\\mathbf{d}^n = B \\mathbf{u}^n$，然后求解系统 $A \\mathbf{u}^{n+1} = \\mathbf{d}^n$ 以得到 $\\mathbf{u}^{n+1}$。由于 $A$ 是三对角、对称且正定的矩阵，使用 Thomas 算法（一种特殊的高斯消元法）可以高效地求解，其计算成本为 $O(N)$。\n\n为验证二阶时间精度，我们必须度量误差并计算其收敛率。误差在最终时刻 $T$ 使用离散 $L^2$ 范数进行度量：\n$$\n\\|e(\\Delta t_j)\\|_{L^2_h} = \\left( h \\sum_{i=1}^{N-1} \\left( u_i^{\\text{num}}(T;\\Delta t_j) - u_i^{\\text{ref}}(T) \\right)^2 \\right)^{1/2}\n$$\n此处，$u_i^{\\text{num}}$ 是数值解，$u_i^{\\text{ref}}$ 是参考解。\n策略 A 使用精确解析解作为参考：$u_{\\text{ref}}(x_i, T) = u_{\\text{exact}}(x_i, T) = \\sin(\\pi x_i/L) \\exp(-\\alpha (\\pi/L)^2 T)$。此策略仅在空间离散误差与时间误差相比可以忽略不计时才有效。\n策略 B 在相同的空间网格上，但使用一个更小得多的时间步长 $\\Delta t_{\\text{ref}} = \\Delta t / 2^r$ 来构建参考解。所度量的误差为 $e = u^{\\text{num}}(\\Delta t) - u^{\\text{num}}(\\Delta t_{\\text{ref}})$。由于两个解共享相同的空间离散格式，将它们相减可以消除主导的空间误差项，从而分离出时间误差。\n\n给定一个时间步长序列 $\\Delta t_j$，其中 $\\Delta t_{j+1} = \\Delta t_j/2$，我们计算相应的误差 $\\|e(\\Delta t_j)\\|_{L^2_h}$。两次连续加密之间的观测收敛阶数为：\n$$\n\\hat{p}_j = \\frac{\\log\\!\\left(\\|e(\\Delta t_j)\\|_{L^2_h} / \\|e(\\Delta t_{j+1})\\|_{L^2_h}\\right)}{\\log\\!\\left(\\Delta t_j / \\Delta t_{j+1}\\right)} = \\frac{\\log\\!\\left(\\|e(\\Delta t_j)\\|_{L^2_h} / \\|e(\\Delta t_{j+1})\\|_{L^2_h}\\right)}{\\log(2)}\n$$\n报告的阶数 $\\hat{p}$ 是这些成对阶数中的最小值，旨在为渐近行为提供一个保守的估计。\n\n三个测试案例被设计用来阐释这些原理：\n案例 A：使用非常精细的网格（$N=4096$），空间误差被最小化，策略 A 应能揭示理论上的时间阶数 $\\hat{p} \\approx 2.0$。\n案例 B：使用较粗的网格（$N=64$），空间误差是显著的。然而，策略 B 被用来消除这个空间误差，因此我们同样期望观测到 $\\hat{p} \\approx 2.0$。\n案例 C：使用粗糙网格（$N=16$）和策略 A，不可忽略的空间误差不会被消除，并且当 $\\Delta t$ 变小时，它最终会主导总误差。这种“误差平台”效应阻止了总误差随 $\\Delta t$ 的减小而减小，导致观测阶数 $\\hat{p}$ 显著下降到 2.0 以下并趋近于 0.0。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import solve_banded\n\n# from scipy import ...\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n\n    def run_cn_simulation(L, alpha, N, T, dt_nominal):\n        \"\"\"\n        Solves the 1D heat equation using the Crank-Nicolson method.\n\n        Args:\n            L (float): Length of the rod.\n            alpha (float): Thermal diffusivity.\n            N (int): Number of spatial segments.\n            T (float): Final time.\n            dt_nominal (float): Nominal time step size.\n\n        Returns:\n            numpy.ndarray: Temperature distribution at the interior nodes at time T.\n        \"\"\"\n        # Adjust dt to partition T exactly\n        num_steps = int(round(T / dt_nominal))\n        dt = T / num_steps\n\n        h = L / N\n        x = np.linspace(0, L, N + 1)\n        x_interior = x[1:-1]\n\n        # Initial condition on interior nodes\n        u = np.sin(np.pi * x_interior / L)\n\n        # Mesh Fourier number\n        lambda_val = alpha * dt / h**2\n\n        # Tridiagonal matrix A for the LHS\n        m = N - 1  # Size of the system\n        A_banded = np.zeros((3, m))\n        A_banded[0, 1:] = -lambda_val / 2.0\n        A_banded[1, :] = 1.0 + lambda_val\n        A_banded[2, :-1] = -lambda_val / 2.0\n\n        for _ in range(num_steps):\n            # Construct the RHS vector d = B * u\n            d = np.zeros(m)\n            # Inner points\n            d[1:-1] = (lambda_val / 2.0) * u[:-2] + \\\n                      (1.0 - lambda_val) * u[1:-1] + \\\n                      (lambda_val / 2.0) * u[2:]\n            \n            # Boundary-adjacent points (u_0 and u_N are 0)\n            if m > 0:\n                d[0] = (1.0 - lambda_val) * u[0] + (lambda_val / 2.0) * u[1] if m > 1 else (1.0 - lambda_val) * u[0]\n            if m > 1:\n                d[-1] = (lambda_val / 2.0) * u[-2] + (1.0 - lambda_val) * u[-1]\n\n            # Solve the tridiagonal system A * u_next = d\n            u = solve_banded((1, 1), A_banded, d, overwrite_ab=False, overwrite_b=False)\n\n        return u\n\n    def calculate_order(params, strategy, r=None):\n        \"\"\"\n        Calculates the observed order of convergence for a given case.\n        \"\"\"\n        L, alpha, T, N, dt_sequence = params\n\n        h = L / N\n        x = np.linspace(0, L, N + 1)\n        x_interior = x[1:-1]\n        \n        errors = []\n        for dt in dt_sequence:\n            u_num = run_cn_simulation(L, alpha, N, T, dt)\n\n            if strategy == 'A':\n                # Strategy A: Reference is the exact solution\n                u_ref = np.sin(np.pi * x_interior / L) * np.exp(-alpha * (np.pi / L)**2 * T)\n            elif strategy == 'B':\n                # Strategy B: Reference is from a much smaller dt\n                dt_ref = dt / (2**r)\n                u_ref = run_cn_simulation(L, alpha, N, T, dt_ref)\n            else:\n                raise ValueError(\"Unknown strategy\")\n\n            # Calculate discrete L2 norm of the error\n            error_norm = np.sqrt(h * np.sum((u_num - u_ref)**2))\n            errors.append(error_norm)\n\n        # Calculate pairwise orders\n        orders = []\n        for i in range(len(errors) - 1):\n            # Ratio of time steps is 2\n            order = np.log(errors[i] / errors[i+1]) / np.log(2.0)\n            orders.append(order)\n\n        # Return the minimum of the pairwise orders, as per problem spec\n        return min(orders)\n\n    # Common parameters\n    L = 1.0  # m\n    alpha = 0.1  # m^2/s\n    T = 0.1  # s\n    dt_sequence = [T / 10.0, T / 20.0, T / 40.0, T / 80.0]\n\n    # Test Suite\n    # Case A: happy path (analytic reference, negligible spatial error)\n    params_A = (L, alpha, T, 4096, dt_sequence)\n    p_A = calculate_order(params_A, strategy='A')\n\n    # Case B: same-grid temporal reference\n    params_B = (L, alpha, T, 64, dt_sequence)\n    p_B = calculate_order(params_B, strategy='B', r=6)\n\n    # Case C: edge case (spatial error contamination)\n    params_C = (L, alpha, T, 16, dt_sequence)\n    p_C = calculate_order(params_C, strategy='A')\n\n    results = [round(p_A, 3), round(p_B, 3), round(p_C, 3)]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2486032"}]}