{"hands_on_practices": [{"introduction": "蒸发冷却的核心是在降低系统温度与损失粒子数之间取得平衡。本练习将通过一个简化的微分方程模型，帮助你从根本上理解这一权衡关系。通过求解这个模型，你将能够推导出在给定冷却效率下，从初始温度冷却到最终温度所必须牺牲的原子分数，这是理解并优化原子冷却实验的第一步。", "problem": "蒸发冷却是实现诸如玻色-爱因斯坦凝聚 (Bose-Einstein Condensation, BEC) 等现象所需极低温度的一项关键技术。该方法包括捕获一团原子，然后选择性地移除其中能量最高的原子。随着“最热”的原子逃逸，剩余的原子会再热化至一个更低的温度。\n\n考虑该过程的一个简化模型，其中被捕获的原子气体的温度 $T$ 与陷阱中的原子数 $N$ 之间的关系由以下微分方程描述：\n$$\n\\frac{dT}{T} = \\gamma \\frac{dN}{N}\n$$\n此处，$\\gamma$ 是一个量化冷却过程效率的无量纲正数常量。假设在整个冷却过程中 $\\gamma$ 保持不变。\n\n一项实验始于一团初始温度为 $T_i$ 的原子云，当原子云达到最终温度 $T_f$ 时实验结束，其中 $T_f < T_i$。\n\n为实现此温度降低，必须牺牲的原子占总数的比例是多少？请用 $T_i$、$T_f$ 和 $\\gamma$ 将答案表示为一个解析表达式。", "solution": "我们从给定的温度 $T$ 和原子数 $N$ 之间的微分关系式出发：\n$$\n\\frac{dT}{T} = \\gamma \\frac{dN}{N},\n$$\n其中 $\\gamma>0$ 为常数。我们假设在整个过程中 $T>0$ 且 $N>0$，以保证对数有定义。\n\n分离变量并从初始状态 $(T_{i},N_{i})$ 积分至最终状态 $(T_{f},N_{f})$：\n$$\n\\int_{T_{i}}^{T_{f}} \\frac{dT}{T} = \\gamma \\int_{N_{i}}^{N_{f}} \\frac{dN}{N}.\n$$\n计算积分可得\n$$\n\\ln\\!\\left(\\frac{T_{f}}{T_{i}}\\right) = \\gamma \\ln\\!\\left(\\frac{N_{f}}{N_{i}}\\right).\n$$\n对两边取指数并利用 $\\exp(\\alpha \\ln x)=x^{\\alpha}$，得到\n$$\n\\frac{T_{f}}{T_{i}} = \\left(\\frac{N_{f}}{N_{i}}\\right)^{\\gamma}.\n$$\n解出最终与初始原子数之比：\n$$\n\\frac{N_{f}}{N_{i}} = \\left(\\frac{T_{f}}{T_{i}}\\right)^{\\frac{1}{\\gamma}}.\n$$\n因此，牺牲的原子所占的总比例为：\n$$\n\\frac{N_{i}-N_{f}}{N_{i}} = 1 - \\frac{N_{f}}{N_{i}} = 1 - \\left(\\frac{T_{f}}{T_{i}}\\right)^{\\frac{1}{\\gamma}}.\n$$\n因为 $T_{f}<T_{i}$ 且 $\\gamma>0$，此比例介于 $0$ 和 $1$ 之间，与预期相符。", "answer": "$$\\boxed{1 - \\left(\\frac{T_{f}}{T_{i}}\\right)^{\\frac{1}{\\gamma}}}$$", "id": "1990914"}, {"introduction": "仅仅降低温度并不足以实现玻色-爱因斯坦凝聚（Bose-Einstein Condensate, BEC），关键在于提高相空间密度。这个练习让你直接计算蒸发冷却单个步骤后相空间密度的变化，从而深入理解冷却效率的重要性。你会发现，如果原子损失的比例过高，即使温度下降，相空间密度也可能不增反降，这揭示了实现量子简并所面临的实际挑战。", "problem": "为了制备玻色-爱因斯坦凝聚 (BEC)，必须将一团原子云冷却到超冷温度。实现这一目标的一项关键技术是蒸发冷却。在这个过程中，能量最高的原子被选择性地从磁阱或光阱中移除，而剩余的原子则重新热化至更低的温度。\n\n考虑对一团原子云进行的单次、理想化的蒸发冷却步骤。冷却过程的效率通过一个称为相空间密度 $\\rho$ 的无量纲品质因数来评估。对于三维理想气体，相空间密度正比于 $N T^{-3/2}$，其中 $N$ 是阱中原子的数量，而 $T$ 是它们的绝对温度。\n\n假设在这一次冷却步骤中，原子数 $N$ 减少了 $25.0\\%$，而剩余原子的温度 $T$ 降低了 $10.0\\%$。计算相空间密度 $\\rho$ 变化的乘法因子。答案以实数形式表示，并保留三位有效数字。", "solution": "问题要求计算经过一步蒸发冷却后，相空间密度 $\\rho$ 变化的乘法因子。这个因子是最终相空间密度 $\\rho_f$ 与初始相空间密度 $\\rho_i$ 的比值。\n\n根据题意，相空间密度正比于 $N T^{-3/2}$，其中 $N$ 是原子数，$T$ 是温度。我们可以用一个比例常数 $k$ 来写出这个关系式：\n$$\n\\rho = k N T^{-3/2}\n$$\n\n设初始原子数为 $N_i$，初始温度为 $T_i$。初始相空间密度为：\n$$\n\\rho_i = k N_i T_i^{-3/2}\n$$\n\n冷却步骤之后，原子数为 $N_f$，温度为 $T_f$。最终相空间密度为：\n$$\n\\rho_f = k N_f T_f^{-3/2}\n$$\n\n我们需要求出比值 $\\frac{\\rho_f}{\\rho_i}$：\n$$\n\\frac{\\rho_f}{\\rho_i} = \\frac{k N_f T_f^{-3/2}}{k N_i T_i^{-3/2}}\n$$\n比例常数 $k$ 被消掉了：\n$$\n\\frac{\\rho_f}{\\rho_i} = \\left(\\frac{N_f}{N_i}\\right) \\left(\\frac{T_f}{T_i}\\right)^{-3/2} = \\left(\\frac{N_f}{N_i}\\right) \\left(\\frac{T_i}{T_f}\\right)^{3/2}\n$$\n\n现在，我们利用题目中给出的信息来求出比值 $\\frac{N_f}{N_i}$ 和 $\\frac{T_f}{T_i}$。\n\n原子数减少了 $25.0\\%$。这意味着最终原子数是初始原子数的 $75.0\\%$：\n$$\nN_f = N_i - 0.250 N_i = 0.750 N_i\n$$\n因此，原子数的比值为：\n$$\n\\frac{N_f}{N_i} = 0.750\n$$\n\n温度降低了 $10.0\\%$。这意味着最终温度是初始温度的 $90.0\\%$：\n$$\nT_f = T_i - 0.100 T_i = 0.900 T_i\n$$\n因此，温度的比值为：\n$$\n\\frac{T_f}{T_i} = 0.900\n$$\n\n现在我们可以将这些值代回相空间密度比值的表达式中：\n$$\n\\frac{\\rho_f}{\\rho_i} = (0.750) \\left(0.900\\right)^{-3/2}\n$$\n\n让我们计算其数值：\n$$\n\\left(0.900\\right)^{-3/2} = \\frac{1}{(0.900)^{3/2}} = \\frac{1}{0.900 \\sqrt{0.900}}\n$$\n计算各项：\n$$\n\\sqrt{0.900} \\approx 0.948683\n$$\n$$\n(0.900)^{3/2} \\approx 0.900 \\times 0.948683 \\approx 0.853815\n$$\n所以该因子为：\n$$\n\\frac{\\rho_f}{\\rho_i} \\approx \\frac{0.750}{0.853815} \\approx 0.878414\n$$\n\n题目要求答案保留三位有效数字。\n$$\n\\frac{\\rho_f}{\\rho_i} \\approx 0.878\n$$\n因此，相空间密度乘以了大约 0.878 的因子。要使冷却在“更接近凝聚”的意义上是“有效”的，需要一个大于1的因子。在这个特定的理想化步骤中，原子损失的影响超过了冷却带来的增益，导致相空间密度下降。", "answer": "$$\\boxed{0.878}$$", "id": "1990935"}, {"introduction": "蒸发冷却的原理不仅限于超冷原子物理，它在宏观工程领域，如常见的湿表面干燥过程中，也扮演着核心角色。这个高级练习将引导你应用双膜理论来处理一个实际的传热传质问题，通过建立和求解复杂的非线性方程，来计算沿平板的界面温度。此练习旨在将微观世界的冷却概念与宏观工程应用联系起来，展示了在不同尺度下应用同一物理原理时，所需模型和分析工具的巨大差异。", "problem": "考虑一种由干燥空气和水蒸气组成的二元理想气体混合物的稳态、层流、外掠流，流经一个完全润湿、等温、等厚且液侧导热热阻可忽略的平板。界面处有充足的液态水，使得界面组分由界面温度下的相平衡所确定。假设气膜中垂直于板面的输运为一维，辐射可忽略，气体物性在主体气体温度下为常数，且总压均匀。气侧采用双膜模型，液侧阻力可忽略。平板与流向对齐，坐标 $x$ 测量从前缘开始的距离。目标是通过耦合气膜中的传热与传质来确定界面温度 $T_i(x)$。\n\n从基本定律出发，使用以下基础：\n- 气侧热通量采用牛顿冷却定律，$q_g''(x) = h_g(x)\\bigl(T_\\infty - T_i(x)\\bigr)$，其中 $h_g(x)$ 是局部对流传热系数。\n- 在具有斯特藩流（水蒸气为组分 A，扩散通过干燥空气组分 B）的稀二元气体中，使用菲克定律和组分连续性，以在总摩尔浓度 $C$ 在膜中均匀时，获得摩尔蒸发通量 $N_A''(x)$ 与界面和主体摩尔分数之间的精确关系。\n- 理想气体行为，$C = p/\\bigl(R\\,T_\\infty\\bigr)$，其中 $p$ 是总压，$R$ 是普适气体常数。\n- 纯水界面的相平衡，$y_{A,i}(x) = p_{\\mathrm{sat}}\\bigl(T_i(x)\\bigr)/p$，其中 $y_{A,i}$ 是气体中水蒸气的界面摩尔分数。\n- 界面处的能量守恒，将气侧对流热通量等同于蒸发所需的潜能，$h_g(x)\\bigl(T_\\infty - T_i(x)\\bigr) = N_A''(x)\\,\\overline{L}(T_i)$，其中 $\\overline{L}(T)$ 是水在温度 $T$ 下的摩尔蒸发潜热。相对于潜热效应，忽略扩散组分携带的显焓，当空气-水蒸气混合物的路易斯数在当前条件下接近于 1 时，此假设是合理的。\n\n使用经过充分检验的层流平板相似性解结果，通过无量纲群来表示局部膜系数：\n- 局部努塞尔数：$\\mathrm{Nu}_x = 0.332\\,\\mathrm{Re}_x^{1/2}\\,\\mathrm{Pr}^{1/3}$，其中 $h_g(x) = \\dfrac{\\mathrm{Nu}_x\\,k_g}{x}$。\n- 局部舍伍德数：$\\mathrm{Sh}_x = 0.332\\,\\mathrm{Re}_x^{1/2}\\,\\mathrm{Sc}^{1/3}$，其中 $k_c(x) = \\dfrac{\\mathrm{Sh}_x\\,D_{AB}}{x}$。\n此处 $\\mathrm{Re}_x = \\dfrac{U_\\infty\\,x}{\\nu}$，$\\mathrm{Pr} = \\dfrac{\\nu}{\\alpha}$，以及 $\\mathrm{Sc} = \\dfrac{\\nu}{D_{AB}}$。对流传质系数 $k_c(x)$ 将摩尔通量与摩尔浓度驱动力关联起来。从界面到气体的经斯特藩流修正的精确水蒸气摩尔通量为\n$$\nN_A''(x) = k_c(x)\\,C\\,\\ln\\!\\left(\\dfrac{1 - y_{A,\\infty}}{1 - y_{A,i}(x)}\\right),\n$$\n其中 $y_{A,\\infty}$ 是主体气体中水蒸气的摩尔分数。将此式与界面能量平衡相结合，以求解 $T_i(x)$。\n\n对于液态水的有效范围内，使用安托Antoine方程计算水的饱和压力，其中 $T$ 的单位为摄氏度：\n$$\n\\log_{10}\\!\\bigl(p_{\\mathrm{sat}}\\,[\\mathrm{mmHg}]\\bigr) = A - \\dfrac{B}{C + T_{^\\circ\\mathrm{C}}},\n$$\n常数为 $A = 8.07131$，$B = 1730.63$，$C = 233.426$。使用 $1\\,\\mathrm{mmHg} = 133.322\\,\\mathrm{Pa}$ 转换为帕斯卡。摩尔蒸发潜热可通过 Watson 关联式建模，\n$$\n\\overline{L}(T) = \\overline{L}(T_{\\mathrm{ref}})\\,\\left(\\dfrac{1 - T/T_c}{1 - T_{\\mathrm{ref}}/T_c}\\right)^{n},\n$$\n其中 $T_c = 647.096\\,\\mathrm{K}$，$T_{\\mathrm{ref}} = 373.15\\,\\mathrm{K}$，指数 $n = 0.38$，且 $\\overline{L}(T_{\\mathrm{ref}}) = 40650\\,\\mathrm{J/mol}$。\n\n在主体温度下，对气体混合物使用以下恒定物性：\n- 总压 $p = 101325\\,\\mathrm{Pa}$。\n- 普适气体常数 $R = 8.314462618\\,\\mathrm{J/(mol\\cdot K)}$。\n- 干燥空气比气体常数 $R_{\\mathrm{air}} = 287.05\\,\\mathrm{J/(kg\\cdot K)}$。\n- 动力粘度 $\\mu = 1.85\\times 10^{-5}\\,\\mathrm{Pa\\cdot s}$。\n- 导热系数 $k_g = 0.026\\,\\mathrm{W/(m\\cdot K)}$。\n- 干燥空气定压比热 $c_{p,\\mathrm{air}} = 1007\\,\\mathrm{J/(kg\\cdot K)}$。\n- 水蒸气在空气中的二元扩散系数 $D_{AB} = 2.50\\times 10^{-5}\\,\\mathrm{m^2/s}$。\n\n计算密度 $\\rho = \\dfrac{p}{R_{\\mathrm{air}}\\,T_\\infty}$，运动粘度 $\\nu = \\dfrac{\\mu}{\\rho}$，热扩散率 $\\alpha = \\dfrac{k_g}{\\rho\\,c_{p,\\mathrm{air}}}$，然后计算 $\\mathrm{Pr} = \\dfrac{\\nu}{\\alpha}$ 和 $\\mathrm{Sc} = \\dfrac{\\nu}{D_{AB}}$。假设局部层流相似性依然有效；以下所有测试案例均满足 $\\mathrm{Re}_x \\le 5\\times 10^{5}$。\n\n对于每个测试案例，求解非线性方程\n$$\nh_g(x)\\,\\bigl(T_\\infty - T_i(x)\\bigr) - k_c(x)\\,C\\,\\ln\\!\\left(\\dfrac{1 - y_{A,\\infty}}{1 - \\dfrac{p_{\\mathrm{sat}}(T_i)}{p}}\\right)\\,\\overline{L}\\bigl(T_i(x)\\bigr) = 0\n$$\n以获得界面温度 $T_i(x)$，约束条件为 $T_i \\in [273.15\\,\\mathrm{K},\\,T_\\infty)$。将每个结果以开尔文为单位表示为浮点数，并四舍五入到三位小数。\n\n测试套件：\n- 案例 1：$(U_\\infty,\\,x,\\,T_\\infty,\\,y_{A,\\infty}) = \\bigl(2.0\\,\\mathrm{m/s},\\,0.10\\,\\mathrm{m},\\,303.15\\,\\mathrm{K},\\,0.010\\bigr)$。\n- 案例 2：$(U_\\infty,\\,x,\\,T_\\infty,\\,y_{A,\\infty}) = \\bigl(2.0\\,\\mathrm{m/s},\\,0.50\\,\\mathrm{m},\\,303.15\\,\\mathrm{K},\\,0.010\\bigr)$。\n- 案例 3：$(U_\\infty,\\,x,\\,T_\\infty,\\,y_{A,\\infty}) = \\bigl(2.0\\,\\mathrm{m/s},\\,0.10\\,\\mathrm{m},\\,303.15\\,\\mathrm{K},\\,0.035\\bigr)$。\n- 案例 4：$(U_\\infty,\\,x,\\,T_\\infty,\\,y_{A,\\infty}) = \\bigl(3.0\\,\\mathrm{m/s},\\,0.20\\,\\mathrm{m},\\,315.15\\,\\mathrm{K},\\,0.005\\bigr)$。\n- 案例 5：$(U_\\infty,\\,x,\\,T_\\infty,\\,y_{A,\\infty}) = \\bigl(5.0\\,\\mathrm{m/s},\\,0.90\\,\\mathrm{m},\\,300.15\\,\\mathrm{K},\\,0.010\\bigr)$。\n\n最终输出格式：\n- 您的程序应生成单行输出，包含案例 1 到 5 的界面温度，按顺序排列，格式为逗号分隔的列表，四舍五入到三位小数，并用方括号括起来，例如 $\\bigl[300.123,299.876, \\dots\\bigr]$。", "solution": "该问题要求确定空气和水蒸气混合物流经平板上特定位置 $x$ 处的界面温度 $T_i(x)$。该温度由来自气体的对流传热与板表面液态水蒸发所消耗的能量之间的平衡所决定。该问题在科学上是有效的且适定的。解决方案是通过数值求解界面能量平衡方程来进行的。\n\n基本原理是液-气界面处的能量守恒。从较热气体传递到界面的热量 $q_g''(x)$ 必须等于蒸发水带走的能量，后者是水蒸气的摩尔通量 $N_A''(x)$ 与摩尔蒸发潜热 $\\overline{L}(T_i)$ 的乘积。这表示为：\n$$\nq_g''(x) = N_A''(x) \\, \\overline{L}(T_i)\n$$\n问题为每一项提供了具体的模型：\n-   对流热通量由牛顿冷却定律给出：$q_g''(x) = h_g(x)(T_\\infty - T_i(x))$，其中 $h_g(x)$ 是局部传热系数，$T_\\infty$ 是主体气体温度。\n-   考虑斯特藩流的摩尔蒸发通量由下式给出：$N_A''(x) = k_c(x) C \\ln\\left(\\frac{1 - y_{A,\\infty}}{1 - y_{A,i}(x)}\\right)$。此处，$k_c(x)$ 是局部传质系数，$C$ 是总摩尔浓度，$y_{A,\\infty}$ 是主体水蒸气摩尔分数，$y_{A,i}(x)$ 是界面摩尔分数。\n\n界面摩尔分数由相平衡确定，假设液体是纯水且总压为 $p$。因此，$y_{A,i}(x) = p_{\\mathrm{sat}}(T_i(x))/p$，其中 $p_{\\mathrm{sat}}(T_i)$ 是水在界面温度 $T_i$ 下的饱和压力。\n\n将这些表达式代入能量平衡，得到关于 $T_i(x)$ 的控制性超越方程：\n$$\nh_g(x)(T_\\infty - T_i(x)) = k_c(x) C \\ln\\left(\\frac{1 - y_{A,\\infty}}{1 - p_{\\mathrm{sat}}(T_i(x))/p}\\right) \\overline{L}(T_i(x))\n$$\n为了求解该方程以得到 $T_i(x)$，我们必须首先为每个具体的测试案例 $(U_\\infty, x, T_\\infty, y_{A,\\infty})$ 计算所有其他项。\n\n求解算法如下：\n\n步骤 1：计算热物理性质。\n对于每个测试案例，气体物性在主体温度 $T_\\infty$ 下进行评估。\n-   气体密度 $\\rho$ 近似为干燥空气的密度：$\\rho = p / (R_{\\mathrm{air}} T_\\infty)$。\n-   运动粘度为 $\\nu = \\mu / \\rho$。\n-   热扩散率为 $\\alpha = k_g / (\\rho c_{p,\\mathrm{air}})$。\n-   普朗特数为 $\\mathrm{Pr} = \\nu / \\alpha$。\n-   施密特数为 $\\mathrm{Sc} = \\nu / D_{AB}$。\n-   气体混合物的总摩尔浓度为 $C = p / (R T_\\infty)$，这是理想气体定律的应用。\n所有常数（$p$, $R_{\\mathrm{air}}$, $\\mu$, $k_g$, $c_{p,\\mathrm{air}}$, $D_{AB}$, $R$）均已提供。\n\n步骤 2：确定传递系数。\n流动是层流，因此我们使用平板的相似性解。\n-   计算局部雷诺数：$\\mathrm{Re}_x = U_\\infty x / \\nu$。\n-   使用给定的关联式找到局部努塞尔数：$\\mathrm{Nu}_x = 0.332 \\, \\mathrm{Re}_x^{1/2} \\, \\mathrm{Pr}^{1/3}$。\n-   局部传热系数则为 $h_g(x) = (\\mathrm{Nu}_x k_g) / x$。\n-   类似地，局部舍伍德数为 $\\mathrm{Sh}_x = 0.332 \\, \\mathrm{Re}_x^{1/2} \\, \\mathrm{Sc}^{1/3}$。\n-   局部传质系数为 $k_c(x) = (\\mathrm{Sh}_x D_{AB}) / x$。\n\n步骤 3：定义依赖于温度的物性函数。\n求解需要水的饱和压力和潜热的函数。\n-   **饱和压力, $p_{\\mathrm{sat}}(T_i)$**：安托Antoine方程被实现：$\\log_{10}(p_{\\mathrm{sat}}[\\mathrm{mmHg}]) = A - B/(C_{const} + T_{^\\circ\\mathrm{C}})$，使用给定的常数 $A=8.07131$，$B=1730.63$ 和 $C_{const}=233.426$。输入的开尔文温度 $T_i$ 被转换为摄氏度，输出的毫米汞柱压力使用因子 $1\\,\\mathrm{mmHg} = 133.322\\,\\mathrm{Pa}$ 转换为帕斯卡。\n-   **摩尔潜热, $\\overline{L}(T_i)$**：Watson 关联式被实现：$\\overline{L}(T_i) = \\overline{L}(T_{\\mathrm{ref}}) \\left( \\frac{1 - T_i/T_c}{1 - T_{\\mathrm{ref}}/T_c} \\right)^n$，使用提供的参考值 $\\overline{L}(T_{\\mathrm{ref}}) = 40650\\,\\mathrm{J/mol}$ 于 $T_{\\mathrm{ref}} = 373.15\\,\\mathrm{K}$，临界温度 $T_c = 647.096\\,\\mathrm{K}$，及指数 $n = 0.38$。输入的温度 $T_i$ 必须是开尔文单位。\n\n步骤 4：控制方程的数值解法。\n我们定义一个函数 $F(T_i)$来表示界面处的能量不平衡：\n$$\nF(T_i) = h_g(x)(T_\\infty - T_i) - k_c(x) C \\ln\\left(\\frac{1 - y_{A,\\infty}}{1 - p_{\\mathrm{sat}}(T_i)/p}\\right) \\overline{L}(T_i)\n$$\n问题简化为求解 $F(T_i) = 0$ 的根。该函数在物理相关域 $T_i \\in [273.15\\,\\mathrm{K}, T_\\infty)$ 上是连续且单调的。采用数值求根算法，特别是 Brent-Dekker 方法（在 SciPy 库中以 `brentq` 形式提供），来求解 $T_i$。搜索区间设置为 $[273.15\\,\\mathrm{K}, T_\\infty)$，分析证实对于给定的测试案例，$F(273.15) > 0$ 且 $F(T_\\infty) < 0$，保证了在此区间内存在唯一解。\n\n对测试套件中的每个案例执行此程序。得到的 $T_i$ 值四舍五入到三位小数并存储。最终输出是这些温度的列表。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Solves for the interfacial temperature in a series of evaporative cooling\n    problems on a flat plate.\n    \"\"\"\n\n    # Define physical and chemical constants from the problem statement.\n    P_TOTAL = 101325.0  # Pa\n    R_UNIV = 8.314462618  # J/(mol.K)\n    R_AIR = 287.05  # J/(kg.K)\n    MU = 1.85e-5  # Pa.s\n    K_G = 0.026  # W/(m.K)\n    CP_AIR = 1007.0  # J/(kg.K)\n    D_AB = 2.50e-5  # m^2/s\n    MMHG_TO_PA = 133.322\n\n    # Antoine equation constants for water\n    A_ANT = 8.07131\n    B_ANT = 1730.63\n    C_ANT = 233.426\n\n    # Watson correlation constants for water latent heat\n    L_REF = 40650.0  # J/mol at T_ref\n    T_REF = 373.15  # K\n    T_CRIT = 647.096  # K\n    N_WATSON = 0.38\n\n    def p_sat_func(T_k):\n        \"\"\"Calculates water saturation pressure using Antoine equation.\"\"\"\n        # T_k is in Kelvin, formula needs Celsius.\n        T_c = T_k - 273.15\n        log10_p_mmhg = A_ANT - (B_ANT / (C_ANT + T_c))\n        p_mmhg = 10**log10_p_mmhg\n        return p_mmhg * MMHG_TO_PA\n\n    def l_vapor_func(T_k):\n        \"\"\"Calculates molar latent heat of vaporization using Watson correlation.\"\"\"\n        # T_k is in Kelvin.\n        frac = (1 - T_k / T_CRIT) / (1 - T_REF / T_CRIT)\n        return L_REF * (frac**N_WATSON)\n\n    test_cases = [\n        (2.0, 0.10, 303.15, 0.010),\n        (2.0, 0.50, 303.15, 0.010),\n        (2.0, 0.10, 303.15, 0.035),\n        (3.0, 0.20, 315.15, 0.005),\n        (5.0, 0.90, 300.15, 0.010),\n    ]\n\n    results = []\n\n    for case in test_cases:\n        U_inf, x, T_inf, y_A_inf = case\n\n        # Step 1: Calculate thermophysical properties at the bulk temperature T_inf.\n        rho = P_TOTAL / (R_AIR * T_inf)\n        nu = MU / rho\n        alpha = K_G / (rho * CP_AIR)\n        Pr = nu / alpha\n        Sc = nu / D_AB\n        C_total = P_TOTAL / (R_UNIV * T_inf)\n\n        # Step 2: Calculate Reynolds number and transfer coefficients.\n        Re_x = U_inf * x / nu\n        Nu_x = 0.332 * (Re_x**0.5) * (Pr**(1/3))\n        h_g = Nu_x * K_G / x\n        Sh_x = 0.332 * (Re_x**0.5) * (Sc**(1/3))\n        k_c = Sh_x * D_AB / x\n\n        # Step 3: Define the nonlinear equation for interfacial temperature T_i.\n        def equation_to_solve(T_i):\n            \"\"\"Represents the interfacial energy balance, F(T_i) = 0.\"\"\"\n            p_sat_i = p_sat_func(T_i)\n            y_A_i = p_sat_i / P_TOTAL\n            \n            # Check for physical consistency.\n            if y_A_i >= 1.0 or (1 - y_A_i) <= 0:\n                # Should not be reached with the chosen search interval\n                return np.inf\n\n            convective_heat = h_g * (T_inf - T_i)\n            log_term = np.log((1 - y_A_inf) / (1 - y_A_i))\n            latent_heat = k_c * C_total * log_term * l_vapor_func(T_i)\n            \n            return convective_heat - latent_heat\n\n        # Step 4: Solve for T_i using a numerical root-finder.\n        # The physical bounds for T_i are [273.15, T_inf).\n        lower_bound = 273.15\n        upper_bound = T_inf - 1e-9 # Epsilon to avoid T_i = T_inf exactly.\n        \n        # Brent's method is robust for a bracketed root.\n        T_i_sol = brentq(equation_to_solve, lower_bound, upper_bound)\n        \n        results.append(f\"{T_i_sol:.3f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2483038"}]}