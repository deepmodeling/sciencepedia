{"hands_on_practices": [{"introduction": "福赫海默方程通过引入渗透率 $K$ 和惯性系数 $\\beta$ 来描述多孔介质中的非达西流。然而，这些宏观参数如何与介质的微观结构（如孔隙率和颗粒尺寸）相关联？本练习旨在通过将现象学的福赫海默方程与经典的厄尔冈 (Ergun) 经验关联式进行对比，来推导 $K$ 和 $\\beta$ 的具体表达式。这项实践不仅能加深你对这些参数物理意义的理解，还能让你掌握从实验数据和经验模型中提取关键物理参数的核心技能 [@problem_id:2488985]。", "problem": "一种动力粘度为 $\\mu$、密度为 $\\rho$ 的稳态、等温、不可压缩牛顿流体，在一个与长度为 $L$、横截面积为 $A$ 的柱体轴向一致的宏观压力梯度驱动下，流经一个由直径为 $d_p$ 的单分散球体构成的均匀、各向同性的填充床，其孔隙率为 $\\varepsilon$。设表观（Darcy）速度为 $u_s = Q/A$，其中 $Q$ 是体积流率。考虑多孔介质中的体积平均动量平衡，以及球形填充床中一维压降的经典半经验关系式，这两者均适用于中等孔隙尺度雷诺数范围内的稳态、受惯性影响的非 Darcy 条件。\n\n1. 从适用于无体力情况下的刚性、静止多孔基质的体积平均动量平衡方程出发，并采用在平均表观速度中以二次惯性阻力增补线性粘性阻力的双项拖曳力封闭模型，将宏观压力梯度表示为如下形式：\n$$-\\nabla \\langle p \\rangle = \\frac{\\mu}{K}\\,u_s + \\beta\\,\\rho\\,|u_s|\\,u_s,$$\n其中 $K$ 是固有渗透率，$\\beta$ 是惯性阻力系数。\n\n2. 另外，使用球形填充床中单位长度压降的已有关系式，该关系式将粘性贡献和惯性贡献关联为 $u_s$ 和 $|u_s|u_s$ 的线性组合，其前置因子依赖于孔隙率和颗粒尺寸。通过要求在相同条件下、且 $u_s$ 定义相同的情况下，两种描述代表相同的宏观压力梯度，来确定 $K(\\varepsilon,d_p)$ 和 $\\beta(\\varepsilon,d_p)$。\n\n3. 验证你所得 $K$ 和 $\\beta$ 的量纲一致性，并简要阐明这些相关式预期有效所依据的主要假设，包括几何理想化、流体流变性、流动状态以及平均化过程中隐含的尺度分离。\n\n请以 $\\varepsilon$ 和 $d_p$ 的闭式解析表达式形式给出 $K$ 和 $\\beta$ 的最终结果。不要在最终答案框中附加单位。无需进行数值计算。", "solution": "该问题是适定的且有科学依据，可以直接进行推导。我们的任务是通过令填充床中压力梯度的两种表示相等，来求出渗透率 $K$ 和惯性阻力系数 $\\beta$ 的表达式。\n\n第一种表示是沿某一轴（比如 $x$ 轴）的一维流动的宏观 Darcy-Forchheimer 方程。问题中以矢量形式给出了此方程。对于表观速度大小 $u_s$ 为正的单向流动，该方程简化为：\n$$-\\frac{d\\langle p \\rangle}{dx} = \\frac{\\mu}{K} u_s + \\beta \\rho u_s^2$$\n该方程将压降分为线性粘性贡献（Darcy 项）和二次惯性贡献（Forchheimer 项）。此处，$\\mu$ 是动力粘度，$\\rho$ 是密度， $K$ 是固有渗透率，$\\beta$ 是惯性阻力系数。\n\n第二种表示是关于流经单分散球体填充床时单位长度压降 $\\frac{\\Delta p}{L}$ 的“经典半经验关系式”。这个关系式就是著名的 Ergun 方程。物理上，量 $\\frac{\\Delta p}{L}$ 与宏观压力梯度的模 $-\\frac{d\\langle p \\rangle}{dx}$ 是相同的。Ergun 方程表述为：\n$$-\\frac{d\\langle p \\rangle}{dx} = 150 \\frac{(1-\\varepsilon)^2}{\\varepsilon^3} \\frac{\\mu u_s}{d_p^2} + 1.75 \\frac{(1-\\varepsilon)}{\\varepsilon^3} \\frac{\\rho u_s^2}{d_p}$$\n在此方程中，$\\varepsilon$ 是床层孔隙率， $d_p$ 是球体直径。常数 $150$ 和 $1.75$ 是经验确定的因子。\n\n为了求出 $K$ 和 $\\beta$，我们令 $-\\frac{d\\langle p \\rangle}{dx}$ 的两个表达式相等，因为它们必须是同一物理系统的等效描述：\n$$ \\frac{\\mu}{K} u_s + \\beta \\rho u_s^2 = \\left( 150 \\frac{(1-\\varepsilon)^2}{\\varepsilon^3} \\frac{\\mu}{d_p^2} \\right) u_s + \\left( 1.75 \\frac{(1-\\varepsilon)}{\\varepsilon^3} \\frac{\\rho}{d_p} \\right) u_s^2 $$\n在适用范围内，该恒等式必须对任意 $u_s$ 值都成立。因此，我们可以分别令 $u_s$ 同次幂项的系数相等。\n\n通过比较 $u_s$ 一次项（粘性贡献）的系数：\n$$ \\frac{\\mu}{K} = 150 \\frac{(1-\\varepsilon)^2}{\\varepsilon^3} \\frac{\\mu}{d_p^2} $$\n我们通过消去两边的粘度 $\\mu$ 来求解渗透率 $K$：\n$$ K = \\frac{\\varepsilon^3 d_p^2}{150 (1-\\varepsilon)^2} $$\n这个渗透率表达式是 Kozeny-Carman 相关式的一种形式。\n\n通过比较 $u_s$ 二次项（惯性贡献）的系数：\n$$ \\beta \\rho = 1.75 \\frac{(1-\\varepsilon)}{\\varepsilon^3} \\frac{\\rho}{d_p} $$\n我们通过消去密度 $\\rho$ 来求解惯性阻力系数 $\\beta$：\n$$ \\beta = \\frac{1.75 (1-\\varepsilon)}{\\varepsilon^3 d_p} $$\n该表达式对应于惯性损失的 Burke-Plummer 项。\n\n按照要求，我们验证所推导参数的量纲一致性。\n对于渗透率 $K$：孔隙率 $\\varepsilon$ 和数字 $150$ 是无量纲的。颗粒直径 $d_p$ 具有长度量纲 $[L]$。因此 $K$ 的量纲为：\n$[K] = \\frac{[1]^3 [L]^2}{[1] \\cdot ([1]-[1])^2} = [L^2]$。 这是渗透率的正确量纲（面积）。\n对于惯性系数 $\\beta$：数字 $1.75$ 和孔隙率 $\\varepsilon$ 是无量纲的。$\\beta$ 的量纲为：\n$[\\beta] = \\frac{[1]-[1]}{[1]^3 [L]} = [L^{-1}]$。 为验证这一点，我们检查 Forchheimer 压力梯度项 $\\beta \\rho u_s^2$ 的量纲，它必须是 $[M L^{-2} T^{-2}]$。\n$[\\beta][\\rho][u_s]^2 = [L^{-1}] \\cdot [M L^{-3}] \\cdot ([L T^{-1}])^2 = [M L^{-1-3+2} T^{-2}] = [M L^{-2} T^{-2}]$。\n量纲分析是一致的。\n\n此推导及其所得相关式的有效性所依据的主要假设是：\n$1$. 多孔介质是由刚性、单分散球形颗粒组成的、在统计上均匀且各向同性的填充床。\n$2$. 流体是牛顿流体（粘度恒定）且不可压缩（密度恒定）。\n$3$. 流动处于稳态，且宏观上是一维的。\n$4$. 流动状态处于非 Darcy 区域，在该区域中粘性效应和惯性效应均显著。Ergun 方程是覆盖此流动状态的经验模型。\n$5$. 体积平均原理适用，这意味着微观孔隙尺寸 ($d_p$) 和宏观系统尺寸 ($L$) 之间存在明确的尺度分离，从而可以定义一个代表性单元体积 (REV)。", "answer": "$$\\boxed{\\begin{pmatrix} \\frac{\\varepsilon^3 d_p^2}{150 (1-\\varepsilon)^2} & \\frac{1.75 (1-\\varepsilon)}{\\varepsilon^3 d_p} \\end{pmatrix}}$$", "id": "2488985"}, {"introduction": "理解了渗透率 $K$ 和惯性系数 $\\beta$ 的来源后，下一步是应用它们来量化非达西效应的重要性。从达西流到非达西流的过渡是渐进的，存在一个特征速度，在该速度下，流体惯性引起的压降变得与粘性阻力引起的压降相当。本练习旨在通过计算这两个贡献项达到平衡时的临界表面速度，帮助你建立一个关于非达西流何时“变得重要”的直观认识 [@problem_id:2488981]。这个简单的计算是评估在特定工程应用中是否必须考虑福赫海默修正项的关键第一步。", "problem": "一个饱和的、各向同性的多孔介质中，液态水在 $20\\,^{\\circ}\\mathrm{C}$ 下进行稳态、一维、水平流动。其固有渗透率为 $K = 1.0 \\times 10^{-9}\\ \\mathrm{m^{2}}$，在中等雷诺数下表征二次曳力的惯性阻力系数为 $\\beta = 3000\\ \\mathrm{m^{-1}}$。取水在 $20\\,^{\\circ}\\mathrm{C}$ 的热物理性质为 $\\rho = 998\\ \\mathrm{kg/m^{3}}$ 和 $\\mu = 1.002 \\times 10^{-3}\\ \\mathrm{Pa \\cdot s}$。\n\n从多孔介质流动的宏观动量平衡出发，并引用代表黏性曳力和惯性（非线性）曳力的广泛使用的封闭模型，确定当惯性项对压力梯度的贡献等于黏性项贡献时的表观速度 $u_{s}$ 的大小。假设为正向流动，因此最后可以省略绝对值。\n\n请用单位 $\\mathrm{m/s}$ 表示您的最终答案 $u_{s}$，并四舍五入到三位有效数字。", "solution": "所提出的问题是有效的。它具有科学依据，提法明确，并包含获得唯一解所需的所有必要信息。我们将开始推导过程。\n\n对于饱和、各向同性多孔介质中的稳态、一维、不可压缩、水平流动，同时考虑黏性效应和惯性效应的宏观动量平衡由 Forchheimer 方程描述。该方程将达西定律扩展到惯性效应变得显著的更高流速情况。对于沿 $x$ 正方向的流动，该方程将压力梯度 $-\\frac{dp}{dx}$ 与表观速度 $u_{s}$ 联系起来，如下所示：\n$$\n-\\frac{dp}{dx} = \\frac{\\mu}{K} u_{s} + \\rho \\beta u_{s}^{2}\n$$\n此处，$p$ 是压力，$x$ 是空间坐标，$\\mu$ 是流体的动力黏度，$K$ 是介质的固有渗透率，$\\rho$ 是流体密度，$\\beta$ 是惯性阻力系数，也称为 Forchheimer 系数。\n\n该方程的右侧由两个不同的项组成，代表多孔介质骨架对流体施加的单位体积总曳力。\n第一项 $\\frac{\\mu}{K} u_{s}$ 代表对压力梯度的黏性贡献。这是达西定律中的线性曳力项，在低雷诺数时占主导地位。\n第二项 $\\rho \\beta u_{s}^{2}$ 代表对压力梯度的惯性贡献。这是非线性的二次曳力项，在高流速时变得重要。\n\n问题要求我们找出惯性贡献的大小与黏性贡献的大小相等时的特定表观速度 $u_{s}$。已知流动是正向的，因此 $u_{s} > 0$。所以，我们可以将这两项设为相等，而无需考虑绝对值：\n$$\n\\text{黏性贡献} = \\text{惯性贡献}\n$$\n$$\n\\frac{\\mu}{K} u_{s} = \\rho \\beta u_{s}^{2}\n$$\n为了求解 $u_{s}$，我们可以将方程两边同时除以 $u_{s}$。这样做是允许的，因为速度 $u_{s} = 0$ 对应于无流动的平凡状态，此时两项贡献均为零，但它们的比值未定义。我们感兴趣的是存在流动的非平凡情况。\n$$\n\\frac{\\mu}{K} = \\rho \\beta u_{s}\n$$\n分离出表观速度 $u_{s}$，得到以下符号表达式：\n$$\nu_{s} = \\frac{\\mu}{\\rho \\beta K}\n$$\n现在，我们将给定的数值代入此表达式中。已知条件如下：\n- 动力黏度, $\\mu = 1.002 \\times 10^{-3}\\ \\mathrm{Pa \\cdot s}$\n- 密度, $\\rho = 998\\ \\mathrm{kg/m^{3}}$\n- 惯性阻力系数, $\\beta = 3000\\ \\mathrm{m^{-1}}$\n- 固有渗透率, $K = 1.0 \\times 10^{-9}\\ \\mathrm{m^{2}}$\n\n代入这些值可得：\n$$\nu_{s} = \\frac{1.002 \\times 10^{-3}}{(998) \\times (3000) \\times (1.0 \\times 10^{-9})}\n$$\n首先计算分母：\n$$\n\\rho \\beta K = (998) \\times (3 \\times 10^{3}) \\times (1.0 \\times 10^{-9}) = 2994 \\times 10^{-6} = 2.994 \\times 10^{-3}\\ \\mathrm{kg \\cdot m^{-2}}\n$$\n现在我们计算 $u_{s}$ 的最终值：\n$$\nu_{s} = \\frac{1.002 \\times 10^{-3}\\ \\mathrm{Pa \\cdot s}}{2.994 \\times 10^{-3}\\ \\mathrm{kg \\cdot m^{-2}}} = \\frac{1.002}{2.994}\\ \\mathrm{m/s}\n$$\n$$\nu_{s} \\approx 0.334669338677\\ \\mathrm{m/s}\n$$\n问题要求答案四舍五入到三位有效数字。第四位有效数字是 $6$，因此我们将第三位数字向上取整。\n$$\nu_{s} \\approx 0.335\\ \\mathrm{m/s}\n$$\n这就是黏性压降和惯性压降大小相等时的表观速度。", "answer": "$$\n\\boxed{0.335}\n$$", "id": "2488981"}, {"introduction": "虽然福赫海默方程在形式上是一个简单的代数方程，但其非线性特性使得在实际工程问题中求解并不总是那么直接。当该方程作为更庞大多物理场耦合系统的一部分时，拥有一个稳健的求解器至关重要。本练习将引导你从理论分析转向计算实践，设计一个带有回溯线搜索的牛顿-拉夫逊 (Newton-Raphson) 算法，以数值方式精确求解一维稳态福赫海默方程 [@problem_id:2488962]。通过这个过程，你将不仅掌握解决非线性方程的实用技能，而且能更深入地理解数值方法在现代多孔介质流动分析中的核心作用。", "problem": "考虑密度为 $\\rho$、动力粘度为 $\\mu$ 的单相不可压缩流体，在一维稳态下流过厚度为 $L$、固有渗透率为 $K$ 的均质、各向同性多孔板。设宏观（表观）速度 $u$ 与压力梯度方向一致，板两端的压降为 $\\Delta p = p_{\\text{in}} - p_{\\text{out}}$。在多孔介质中蠕流至惯性流区的常规体积平均假设下，并忽略体积力和非稳态性，宏观动量平衡表明，流向压力梯度与固体骨架施加于流体上的界面拖曳力相平衡。经验和量纲分析论证确定了主要的拖曳力贡献，包括一个关于 $u$ 的线性项和一个与 $|u|u$ 成正比的项，其系数取决于 $\\mu$、$K$、$\\rho$ 以及一个与几何相关的惯性系数 $\\beta$。\n\n任务：\n- 从上述宏观动量平衡以及已确定的线性和二次速度阻力项出发，推导未知数 $u$ 关于给定 $\\rho$、$\\mu$、$K$、$\\beta$、$L$ 和 $\\Delta p$ 的一维稳态代数方程。不要用闭合形式求解此方程；相反，您必须对其进行数值求解。\n- 为推导出的标量方程设计一个牛顿-拉夫逊求根算法，使用优值函数 $m(u) = \\tfrac{1}{2} r(u)^2$，其中 $r(u)$ 是您代数方程的残差，并实现一个回溯线搜索，对 $m(u)$ 强制执行 Armijo 下降条件，以在颗粒雷诺数 $Re_p = \\dfrac{\\rho d_p |u|}{\\mu}$ 较大时实现全局化收敛（您可以将 $d_p$ 概念上视为一个参数；计算 $u$ 时不需要它）。\n- 当绝对残差 $|r(u)|$ 相对于单位长度驱动压力梯度足够小，或当牛顿步长相对于当前迭代值足够小时，您的实现必须终止。\n\n物理单位和输出：\n- 对于每个测试用例，计算表观速度 $u$，并以 $\\text{m/s}$ 为单位表示答案，精确到六位小数。\n\n测试套件：\n- 使用以下五个案例，每个案例指定为 $(\\rho,\\ \\mu,\\ K,\\ \\beta,\\ L,\\ \\Delta p)$，单位为 $(\\text{kg/m}^3,\\ \\text{Pa}\\cdot \\text{s},\\ \\text{m}^2,\\ \\text{m}^{-1},\\ \\text{m},\\ \\text{Pa})$：\n    - 案例 1：$(1000,\\ 1.0\\times 10^{-3},\\ 1.0\\times 10^{-9},\\ 1.0\\times 10^{4},\\ 0.1,\\ 1.0\\times 10^{5})$。\n    - 案例 2：$(1000,\\ 1.0\\times 10^{-3},\\ 1.0\\times 10^{-9},\\ 1.0\\times 10^{4},\\ 0.1,\\ 100)$。\n    - 案例 3：$(1.2,\\ 1.8\\times 10^{-5},\\ 1.0\\times 10^{-10},\\ 5.0\\times 10^{4},\\ 0.05,\\ 1000)$。\n    - 案例 4：$(1000,\\ 1.0\\times 10^{-3},\\ 1.0\\times 10^{-9},\\ 1.0\\times 10^{4},\\ 0.1,\\ -1.0\\times 10^{5})$。\n    - 案例 5：$(1000,\\ 1.0\\times 10^{-3},\\ 1.0\\times 10^{-9},\\ 1.0\\times 10^{4},\\ 0.1,\\ 0)$。\n\n最终输出格式：\n- 您的程序应产生单行输出，其中包含五个计算出的速度，以逗号分隔的列表形式并用方括号括起来，顺序与测试套件相同，每个值都四舍五入到恰好六位小数并以 $\\text{m/s}$ 表示。例如，输出必须类似于 $[u_1,u_2,u_3,u_4,u_5]$，不含任何附加文本。", "solution": "该问题陈述具有科学依据、适定、客观且自洽。它描述了用于多孔介质中一维、稳态、不可压缩流动的 Forchheimer 方程，这是流体力学及传热传质领域中的一个标准且有效的模型。所有必要的参数都已提供，并且所需的数值方法也定义明确。因此，该问题是有效的，将提供解答。\n\n基本原理是流经多孔板的稳态流宏观动量平衡。问题陈述指出，驱动流动的压力梯度由多孔基质施加于流体上的拖曳力来平衡。在一维情况下，速度 $u$ 与正 $x$ 轴方向一致，压力梯度为 $-\\frac{dp}{dx}$。对于厚度为 $L$、总压降为 $\\Delta p = p_{\\text{in}} - p_{\\text{out}}$ 的均质介质，该梯度是恒定的，等于 $\\frac{\\Delta p}{L}$。\n\n总拖曳力由一个粘性（线性）项和一个惯性（二次）项组成。\n与达西定律相对应的粘性拖曳力由 $\\frac{\\mu}{K} u$ 给出，其中 $\\mu$ 是动力粘度，$K$ 是固有渗透率。\n由 Forchheimer 扩展描述的惯性拖曳力由 $\\rho \\beta |u| u$ 给出，其中 $\\rho$ 是流体密度，$\\beta$ 是惯性系数（也称为非达西因子或可过性）。$|u|u$ 的形式确保了惯性拖曳力始终与流动方向相反。\n\n将单位体积的驱动压力与单位体积的总拖曳力相等，得到控制方程：\n$$\n-\\frac{dp}{dx} = \\frac{\\mu}{K} u + \\rho \\beta |u| u\n$$\n代入恒定的压力梯度，我们得到表观速度 $u$ 的代数方程：\n$$\n\\frac{\\Delta p}{L} = \\frac{\\mu}{K} u + \\rho \\beta |u| u\n$$\n为了使用求根算法对该方程进行数值求解，我们定义一个残差函数 $r(u)$，使得我们寻求 $r(u) = 0$ 的根：\n$$\nr(u) = \\left( \\frac{\\mu}{K} \\right) u + (\\rho \\beta) |u| u - \\frac{\\Delta p}{L} = 0\n$$\n该问题要求使用牛顿-拉夫逊方法。牛顿法的迭代格式为：\n$$\nu_{k+1} = u_k - \\frac{r(u_k)}{r'(u_k)}\n$$\n其中 $u_k$ 是第 $k$ 次迭代时根的估计值，$r'(u)$ 是残差关于 $u$ 的导数。我们必须计算这个导数：\n$$\nr'(u) = \\frac{d}{du} \\left( \\frac{\\mu}{K} u + \\rho \\beta |u| u - \\frac{\\Delta p}{L} \\right)\n$$\n项 $|u|u$ 的导数是 $2|u|$。这可以通过考虑 $u>0$（此时 $|u|u = u^2$，其导数为 $2u = 2|u|$）和 $u<0$（此时 $|u|u = -u^2$，其导数为 $-2u = 2|u|$）来证明。在 $u=0$ 时，导数为 $0$。因此，对于所有 $u$，$\\frac{d}{du}(|u|u) = 2|u|$。\n因此，残差的导数为：\n$$\nr'(u) = \\frac{\\mu}{K} + 2 \\rho \\beta |u|\n$$\n由于 $\\mu, K, \\rho, \\beta$ 都是正的物理常数，所以对于所有 $u$，$r'(u) > 0$。这证明了 $r(u)$ 是一个严格单调递增函数，从而保证对于任何给定的参数集都存在唯一的实根。\n\n第 $k$ 次迭代的牛顿步长 $\\delta u_k$ 为：\n$$\n\\delta u_k = -\\frac{r(u_k)}{r'(u_k)} = - \\frac{(\\frac{\\mu}{K}) u_k + (\\rho \\beta) |u_k| u_k - \\frac{\\Delta p}{L}}{\\frac{\\mu}{K} + 2 \\rho \\beta |u_k|}\n$$\n为确保全局收敛，将实现回溯线搜索。更新由 $u_{k+1} = u_k + \\alpha_k \\delta u_k$ 给出，其中步长 $\\alpha_k \\in (0, 1]$ 的选择需满足 Armijo 条件。该条件确保优值函数 $m(u) = \\frac{1}{2} r(u)^2$ 有足够的下降。该条件是：\n$$\nm(u_k + \\alpha \\delta u_k) \\le m(u_k) + c_1 \\alpha \\nabla m(u_k) \\cdot \\delta u_k\n$$\n其中 $c_1$ 是一个小的正常数（例如 $10^{-4}$）。优值函数的梯度为 $\\nabla m(u) = r(u) r'(u)$。代入此式以及牛顿步长的定义 $\\delta u_k = -r(u_k)/r'(u_k)$，Armijo 条件简化为：\n$$\n\\frac{1}{2} r(u_k + \\alpha \\delta u_k)^2 \\le \\frac{1}{2} r(u_k)^2 - c_1 \\alpha r(u_k)^2\n$$\n线搜索算法从 $\\alpha=1$ 开始，并将其乘以一个因子 $\\tau \\in (0, 1)$（例如 $\\tau=0.5$）进行缩减，直到满足此不等式。\n\n对于初始猜测值 $u_0$，我们可以使用达西速度，即忽略惯性项时得到的解。这在物理上是有意义的，尤其是在低流速时。\n$$\n\\frac{\\Delta p}{L} = \\frac{\\mu}{K} u_0 \\implies u_0 = \\frac{K}{\\mu} \\frac{\\Delta p}{L}\n$$\n这个猜测值根据压降的符号正确地捕捉了速度的符号。如果 $\\Delta p = 0$，则 $u_0 = 0$，这是精确解。\n\n迭代过程在满足以下任一条件时终止：\n1. 残差的量级相对于驱动力足够小：$|r(u_k)| \\le \\epsilon_{\\text{rel}} \\left| \\frac{\\Delta p}{L} \\right|$。\n2. 更新步长的量级相对于当前迭代值足够小：$|\\alpha_k \\delta u_k| \\le \\epsilon_{\\text{abs}} + \\epsilon_{\\text{rel}} |u_k|$。\n同时也会设置最大迭代次数以防止无限循环。\n\n实现过程将处理每个测试用例，通过给定的物理参数设置残差函数的系数，计算初始猜测值，并执行带有回溯线搜索的牛顿-拉夫逊算法，直到满足收敛准则。然后，每个案例的最终速度将按要求四舍五入到六位小数。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the Forchheimer flow problem for a suite of test cases.\n    \"\"\"\n    # Test cases: (rho, mu, k, beta, L, delta_p)\n    # Units: (kg/m^3, Pa.s, m^2, m^-1, m, Pa)\n    test_cases = [\n        (1000.0, 1.0e-3, 1.0e-9, 1.0e4, 0.1, 1.0e5),\n        (1000.0, 1.0e-3, 1.0e-9, 1.0e4, 0.1, 100.0),\n        (1.2, 1.8e-5, 1.0e-10, 5.0e4, 0.05, 1000.0),\n        (1000.0, 1.0e-3, 1.0e-9, 1.0e4, 0.1, -1.0e5),\n        (1000.0, 1.0e-3, 1.0e-9, 1.0e4, 0.1, 0.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        u_final = solve_forchheimer_case(*case)\n        # Format the result to exactly six decimal places\n        results.append(f\"{u_final:.6f}\")\n    \n    # Print the final output in the required format\n    print(f\"[{','.join(results)}]\")\n\ndef solve_forchheimer_case(rho, mu, k, beta, L, delta_p):\n    \"\"\"\n    Solves the 1D steady Forchheimer equation for superficial velocity u\n    using Newton-Raphson with a backtracking line search.\n\n    Equation: (mu/k)*u + rho*beta*|u|*u - delta_p/L = 0\n    \"\"\"\n    # Trivial case: no pressure drop means no flow\n    if delta_p == 0.0:\n        return 0.0\n\n    # Numerical solver parameters\n    max_iter = 50          # Maximum iterations for Newton's method\n    max_ls_iter = 10       # Maximum iterations for line search\n    c1 = 1e-4              # Armijo condition parameter\n    tau = 0.5              # Backtracking factor\n    tol_res_rel = 1e-10    # Relative tolerance on the residual\n    tol_upd_abs = 1e-12    # Absolute tolerance on the update step\n    tol_upd_rel = 1e-10    # Relative tolerance on the update step\n\n    # Pre-calculate coefficients for the residual function r(u) = B*u + A*|u|*u - C\n    # This avoids repeated calculations inside the loop.\n    A = rho * beta\n    B = mu / k\n    C = delta_p / L\n\n    # Define the residual function and its derivative\n    def r(u):\n        return B * u + A * np.abs(u) * u - C\n\n    def dr_du(u):\n        return B + 2.0 * A * np.abs(u)\n\n    # Initial guess: Darcy velocity (solution when inertial term is zero)\n    u_k = C / B\n    \n    for i in range(max_iter):\n        res_k = r(u_k)\n        \n        # Check for convergence based on the residual\n        # The tolerance is scaled by the driving pressure gradient\n        if np.abs(res_k) <= tol_res_rel * np.abs(C):\n            return u_k\n\n        dr_k = dr_du(u_k)\n        \n        # The derivative dr_k is always positive for the given physical constraints\n        # so no check for zero division is necessary.\n        delta_u = -res_k / dr_k\n\n        # --- Backtracking line search with Armijo condition ---\n        alpha = 1.0\n        m_k = 0.5 * res_k**2\n        \n        for j in range(max_ls_iter):\n            u_trial = u_k + alpha * delta_u\n            res_trial = r(u_trial)\n            m_trial = 0.5 * res_trial**2\n            \n            # Armijo condition: check for sufficient decrease in the merit function\n            if m_trial <= m_k - c1 * alpha * res_k**2:\n                break  # Step length alpha is acceptable\n            \n            # Reduce step length if condition is not met\n            alpha *= tau\n        else:\n            # Line search failed to find a suitable step, exit main loop\n            break\n\n        update_step = alpha * delta_u\n        u_k += update_step\n\n        # Check for convergence based on the update step size\n        if np.abs(update_step) <= tol_upd_abs + tol_upd_rel * np.abs(u_k):\n            return u_k\n\n    # If the loop completes without converging, return the last computed value.\n    # For a robust industrial code, an exception would be raised here.\n    return u_k\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2488962"}]}