{"hands_on_practices": [{"introduction": "To truly grasp the geometric meaning of Jacobi fields, we begin in the most intuitive setting: flat Euclidean space, $\\mathbb{R}^n$. This foundational exercise asks you to solve the Jacobi equation where the Riemann curvature tensor is zero. By working through this problem, you will derive the simple, linear form of geodesic deviation, providing an essential baseline for understanding how the introduction of curvature complicates this picture. [@problem_id:2981933]", "problem": "Let $(\\mathbb{R}^{n}, g)$ be the $n$-dimensional Euclidean space with the standard Riemannian metric $g$, and let $\\gamma : I \\to \\mathbb{R}^{n}$ be a geodesic given by $\\gamma(t) = x_{0} + t v$, where $x_{0} \\in \\mathbb{R}^{n}$ and $v \\in \\mathbb{R}^{n}$ is a constant nonzero vector. A vector field $J$ along $\\gamma$ that arises from a smooth one-parameter variation through geodesics is called a Jacobi field. Using only fundamental definitions and properties of the Levi-Civita connection, the Riemann curvature tensor, and the Jacobi equation, determine the general closed-form expression for $J(t)$ along $\\gamma$ in terms of constant vectors in $\\mathbb{R}^{n}$. Your final answer must be a single analytic expression for $J(t)$.", "solution": "The user-provided problem is evaluated as valid. It is a well-posed, scientifically grounded problem in differential geometry.\n\nThe problem asks for the general expression of a Jacobi field $J(t)$ along a geodesic $\\gamma(t)$ in $n$-dimensional Euclidean space $(\\mathbb{R}^{n}, g)$. The fundamental equation governing a Jacobi field is the Jacobi equation:\n$$D_t D_t J + R(J, \\dot{\\gamma})\\dot{\\gamma} = 0$$\nwhere $D_t$ is the covariant derivative along the geodesic $\\gamma$, $\\dot{\\gamma}$ is the tangent vector to the geodesic, and $R$ is the Riemann curvature tensor. To solve this equation for the given context, we must first characterize these components for Euclidean space.\n\n1.  **The Manifold and its Connection:**\n    The manifold is Euclidean space $\\mathbb{R}^{n}$ equipped with the standard metric $g$. In standard Cartesian coordinates $(x^1, x^2, \\ldots, x^n)$, the metric tensor components are given by the Kronecker delta, $g_{ij} = \\delta_{ij}$. The Levi-Civita connection is defined by the Christoffel symbols, which are calculated from the derivatives of the metric tensor:\n    $$\\Gamma^k_{ij} = \\frac{1}{2} g^{kl} \\left( \\frac{\\partial g_{jl}}{\\partial x^i} + \\frac{\\partial g_{il}}{\\partial x^j} - \\frac{\\partial g_{ij}}{\\partial x^l} \\right)$$\n    Since the components $g_{ij} = \\delta_{ij}$ are constant throughout $\\mathbb{R}^n$, all their partial derivatives are zero. Consequently, all Christoffel symbols are zero: $\\Gamma^k_{ij} = 0$.\n\n2.  **The Covariant Derivative:**\n    The covariant derivative of a vector field $J(t)$ with components $J^k(t)$ along the curve $\\gamma(t)$ is given by:\n    $$(D_t J)^k = \\frac{dJ^k}{dt} + \\sum_{i,j=1}^{n} \\Gamma^k_{ij}(\\gamma(t)) \\frac{d\\gamma^i}{dt} J^j(t)$$\n    Since all $\\Gamma^k_{ij}$ are zero in Euclidean space, the covariant derivative simplifies to the ordinary time derivative of the vector's components. In vector notation, this is:\n    $$D_t J = \\frac{dJ}{dt}$$\n    Applying the operator twice gives the second covariant derivative:\n    $$D_t D_t J = D_t \\left(\\frac{dJ}{dt}\\right) = \\frac{d^2J}{dt^2}$$\n\n3.  **The Riemann Curvature Tensor:**\n    The Riemann curvature tensor measures the non-commutativity of second covariant derivatives and is defined in terms of the Christoffel symbols and their derivatives. A space for which the Riemann curvature tensor is identically zero is called a flat space. Since all Christoffel symbols for the standard metric on $\\mathbb{R}^n$ are zero, their derivatives are also zero, which means the Riemann curvature tensor is identically zero: $R=0$.\n    Therefore, the curvature term in the Jacobi equation vanishes:\n    $$R(J, \\dot{\\gamma})\\dot{\\gamma} = 0$$\n\n4.  **Solving the Jacobi Equation:**\n    Substituting the simplified expressions for the second covariant derivative and the curvature term into the Jacobi equation, we obtain a simple second-order ordinary differential equation for the vector field $J(t)$:\n    $$\\frac{d^2J}{dt^2} + 0 = 0$$\n    $$\\frac{d^2J}{dt^2} = 0$$\n    This is an equation for each component of the vector $J(t)$. We can solve this by integrating twice with respect to the parameter $t$.\n    Integrating once yields:\n    $$\\frac{dJ}{dt} = A$$\n    where $A$ is a constant vector of integration in $\\mathbb{R}^n$.\n    Integrating a second time yields the general solution for $J(t)$:\n    $$J(t) = At + B$$\n    where $B$ is a second constant vector of integration in $\\mathbb{R}^n$.\n\n    This result is consistent with the geometric interpretation of Jacobi fields. A Jacobi field measures the infinitesimal deviation between nearby geodesics. In Euclidean space, geodesics are straight lines. A one-parameter family of geodesics can be described, for instance, by $\\gamma_s(t) = \\gamma(t) + s(At+B)$. The Jacobi field along $\\gamma_0(t) = \\gamma(t)$ is then $J(t) = \\frac{\\partial \\gamma_s(t)}{\\partial s}|_{s=0} = At+B$.\n    The expression $J(t) = At+B$ is the general closed-form solution for a Jacobi field along a geodesic in $\\mathbb{R}^n$, expressed in terms of constant vectors $A, B \\in \\mathbb{R}^n$.", "answer": "$$\n\\boxed{J(t) = At + B}\n$$", "id": "2981933"}, {"introduction": "Having established the baseline in a flat world, we now introduce curvature, the central character in Riemannian geometry. This practice moves to the fundamental case of a manifold with constant sectional curvature $K$, allowing us to isolate and precisely quantify its effect on a family of geodesics. By solving the Jacobi equation for a variation of radial geodesics, you will discover the classic scaling functions that govern how nearby geodesics converge ($K \\gt 0$) or diverge ($K \\lt 0$), a cornerstone result in global Riemannian geometry. [@problem_id:2977508]", "problem": "Let $(M,g)$ be a complete $n$-dimensional Riemannian manifold of constant sectional curvature $K \\in \\mathbb{R}$. Fix a point $p \\in M$ and a unit vector $v \\in T_{p}M$. For a fixed radius $r>0$, consider the base geodesic $\\gamma(t)=\\exp_{p}(t\\,r\\,v)$ defined for $t \\in [0,1]$, so that $\\gamma(1)=\\exp_{p}(r v)$ lies on the geodesic sphere of radius $r$ centered at $p$.\n\nLet $Z \\in v^{\\perp} \\subset T_{p}M$ be a nonzero vector orthogonal to $v$. Consider a smooth curve $v(s)$ in the unit sphere of $T_{p}M$ with $v(0)=v$ and $v'(0)=\\frac{1}{r}Z$, and form the geodesic variation $F(s,t)=\\exp_{p}(t\\,r\\,v(s))$. This variation consists of radial geodesics whose endpoints $F(s,1)$ remain on the geodesic sphere $S_{r}(p)$.\n\nLet $J(t)=\\left.\\frac{\\partial}{\\partial s}\\right|_{s=0}F(s,t)$ denote the associated variational field along $\\gamma$. Using only the definitions of geodesic variation and Jacobi fields, the Jacobi equation, and the form of the Riemann curvature tensor in constant sectional curvature, derive the unique scalar function $f(K,r)$ such that\n$$\nJ(1)=f(K,r)\\,P_{1}(Z),\n$$\nwhere $P_{1}:T_{p}M \\to T_{\\gamma(1)}M$ denotes parallel transport along $\\gamma$ from $t=0$ to $t=1$.\n\nYour final answer must be the closed-form analytic expression for $f(K,r)$, written solely in terms of $K$ and $r$. Do not provide intermediate steps. No numerical approximation is required.", "solution": "The problem asks for a scalar function $f(K,r)$ that relates a specific Jacobi field $J(t)$ at $t=1$ to the parallel transport of an initial vector $Z$. We must derive this function based on first principles.\n\nLet $(M,g)$ be a complete $n$-dimensional Riemannian manifold with constant sectional curvature $K \\in \\mathbb{R}$. The base geodesic is $\\gamma(t) = \\exp_{p}(t\\,r\\,v)$ for $t \\in [0,1]$, where $p \\in M$ and $v \\in T_{p}M$ is a unit vector. The tangent vector to this geodesic is $\\dot{\\gamma}(t)$, and its speed is constant: $\\|\\dot{\\gamma}(t)\\| = \\|d(\\exp_p)_{trv}(rv)\\| = \\|rv\\| = r\\|v\\| = r$. Let $T(t) = \\dot{\\gamma}(t)$.\n\nThe Jacobi field $J(t)$ is the variational field of the geodesic variation $F(s,t)=\\exp_{p}(t\\,r\\,v(s))$, where $v(s)$ is a curve in the unit sphere of $T_p M$ with $v(0)=v$ and $v'(0)=\\frac{1}{r}Z$ for a nonzero vector $Z \\in v^\\perp$.\nThe Jacobi field is defined as $J(t) = \\left.\\frac{\\partial}{\\partial s}\\right|_{s=0}F(s,t)$.\n\nFirst, we establish the initial conditions for $J(t)$ at $t=0$.\nAt $t=0$, $F(s,0) = \\exp_p(0) = p$ for all $s$. Thus, the Jacobi field at $t=0$ is\n$$J(0) = \\left.\\frac{\\partial}{\\partial s}\\right|_{s=0} p = 0.$$\nThe initial velocity of the Jacobi field is $J'(0) = \\nabla_t J(t)|_{t=0}$, where $\\nabla_t$ denotes the covariant derivative along $\\gamma$. By the symmetry of the connection, we can interchange the order of differentiation:\n$$J'(0) = \\nabla_t \\left(\\left.\\frac{\\partial F}{\\partial s}\\right|_{s=0}\\right)\\!\\bigg|_{t=0} = \\nabla_s \\left(\\left.\\frac{\\partial F}{\\partial t}\\right|_{s=0}\\right)\\!\\bigg|_{t=0}.$$\nThe vector field $\\frac{\\partial F}{\\partial t}(s,t)$ is the tangent vector field to the geodesics $t \\mapsto F(s,t)$. At $t=0$, its value is $d(\\exp_p)_0(r v(s)) = r v(s)$, which is a vector in $T_p M$. We are taking the covariant derivative $\\nabla_s$ of the curve $s \\mapsto r v(s)$ in the manifold $T_p M$ (a vector space), which is simply the ordinary derivative.\n$$J'(0) = \\left.\\frac{d}{ds}\\right|_{s=0} (r v(s)) = r v'(0) = r \\left(\\frac{1}{r}Z\\right) = Z.$$\nSo, the Jacobi field $J(t)$ is the unique solution to the Jacobi equation with initial conditions $J(0)=0$ and $J'(0)=Z$.\n\nSince $Z \\in v^\\perp$, we have $g(J'(0), \\dot{\\gamma}(0)) = g(Z, rv) = r g(Z,v) = 0$. Because $J(0)=0$, this implies that $J(t)$ is a normal Jacobi field, i.e., $g(J(t), \\dot{\\gamma}(t))=0$ for all $t$.\n\nThe Jacobi equation is $\\nabla_T \\nabla_T J + R(J,T)T = 0$, where $T = \\dot{\\gamma}$.\nFor a manifold of constant sectional curvature $K$, the Riemann curvature tensor is given by $R(X,Y)W = K(g(Y,W)X - g(X,W)Y)$.\nSubstituting this into the Jacobi equation gives\n$$R(J,T)T = K(g(T,T)J - g(J,T)T).$$\nWe have $\\|T(t)\\|^2 = r^2$, so $g(T,T) = r^2$. Since $J(t)$ is a normal field, $g(J(t),T(t))=0$.\nThus, the Jacobi equation simplifies to\n$$\\nabla_T \\nabla_T J(t) + K r^2 J(t) = 0.$$\n\nTo solve this vector differential equation, we introduce a parallel vector field $E(t)$ along $\\gamma(t)$. Let $E(t)$ be the parallel transport of the unit vector $E(0) = Z/\\|Z\\|$ along $\\gamma$. Since $g(J'(0), \\dot{\\gamma}(0)) = 0$, $E(t)$ remains orthogonal to $\\dot{\\gamma}(t)$ for all $t$. The Jacobi field $J(t)$ must be of the form $J(t) = a(t) E(t)$ for some scalar function $a(t)$, because its initial velocity $J'(0)=Z$ is in the direction of $E(0)$.\n\nWe compute the covariant derivatives of $J(t) = a(t)E(t)$. Since the parameter of the curve is $t$, the operator $\\nabla_T$ is $\\nabla_{\\dot{\\gamma}} = \\nabla_t$.\n$$\\nabla_T J(t) = \\nabla_t (a(t)E(t)) = a'(t)E(t) + a(t)\\nabla_t E(t).$$\nSince $E(t)$ is a parallel vector field, $\\nabla_t E(t) = 0$. So, $\\nabla_T J(t) = a'(t)E(t)$.\nTaking the second covariant derivative:\n$$\\nabla_T \\nabla_T J(t) = \\nabla_t(a'(t)E(t)) = a''(t)E(t) + a'(t)\\nabla_t E(t) = a''(t)E(t).$$\nSubstituting these into the simplified Jacobi equation:\n$$a''(t)E(t) + K r^2 a(t)E(t) = 0.$$\nSince $E(t)$ is a non-zero vector field, the scalar function $a(t)$ must satisfy the second-order linear ordinary differential equation:\n$$a''(t) + K r^2 a(t) = 0.$$\n\nThe initial conditions for $a(t)$ are derived from those of $J(t)$.\n$J(0) = a(0)E(0) = 0 \\implies a(0)=0$.\n$J'(0) = a'(0)E(0)$. We know $J'(0)=Z$ and $E(0)=Z/\\|Z\\|$. So, $Z = a'(0) (Z/\\|Z\\|)$, which implies $a'(0) = \\|Z\\|$.\n\nWe now solve the ODE for $a(t)$ based on the sign of $K$.\n\nCase 1: $K>0$.\nThe equation is $a''(t) + (r\\sqrt{K})^2 a(t) = 0$. The general solution is $a(t) = C_1 \\cos(r t\\sqrt{K}) + C_2 \\sin(r t\\sqrt{K})$.\n$a(0)=0 \\implies C_1 = 0$.\n$a'(t) = C_2 r\\sqrt{K} \\cos(r t\\sqrt{K})$.\n$a'(0)=\\|Z\\| \\implies C_2 r\\sqrt{K} = \\|Z\\| \\implies C_2 = \\frac{\\|Z\\|}{r\\sqrt{K}}$.\nThe solution is $a(t) = \\frac{\\|Z\\|}{r\\sqrt{K}} \\sin(r t\\sqrt{K})$.\n\nCase 2: $K=0$.\nThe equation is $a''(t)=0$. The general solution is $a(t) = C_1 t + C_2$.\n$a(0)=0 \\implies C_2=0$.\n$a'(t)=C_1$.\n$a'(0)=\\|Z\\| \\implies C_1=\\|Z\\|$.\nThe solution is $a(t) = \\|Z\\|t$.\n\nCase 3: $K<0$. Let $k = \\sqrt{-K} > 0$.\nThe equation is $a''(t) - (rk)^2 a(t) = 0$. The general solution is $a(t) = C_1 \\cosh(r t k) + C_2 \\sinh(r t k)$.\n$a(0)=0 \\implies C_1=0$.\n$a'(t) = C_2 rk \\cosh(r t k)$.\n$a'(0)=\\|Z\\| \\implies C_2 rk = \\|Z\\| \\implies C_2 = \\frac{\\|Z\\|}{rk} = \\frac{\\|Z\\|}{r\\sqrt{-K}}$.\nThe solution is $a(t) = \\frac{\\|Z\\|}{r\\sqrt{-K}} \\sinh(r t\\sqrt{-K})$.\n\nThe problem asks for $J(1)$. We evaluate $J(t)=a(t)E(t)$ at $t=1$:\n$$J(1) = a(1)E(1).$$\nBy definition, $E(1)$ is the parallel transport of $E(0)=Z/\\|Z\\|$ along $\\gamma$ from $t=0$ to $t=1$. This is precisely $P_1(Z/\\|Z\\|) = P_1(Z)/\\|Z\\|$.\nSo, $J(1) = a(1) \\frac{P_1(Z)}{\\|Z\\|} = \\frac{a(1)}{\\|Z\\|} P_1(Z)$.\nThe function $f(K,r)$ is therefore $\\frac{a(1)}{\\|Z\\|}$.\n\nLet's compute this function from our solutions for $a(t)$:\nFor $K>0$: $f(K,r) = \\frac{a(1)}{\\|Z\\|} = \\frac{1}{\\|Z\\|} \\left(\\frac{\\|Z\\|}{r\\sqrt{K}} \\sin(r\\sqrt{K})\\right) = \\frac{\\sin(r\\sqrt{K})}{r\\sqrt{K}}$.\nFor $K=0$: $f(K,r) = \\frac{a(1)}{\\|Z\\|} = \\frac{1}{\\|Z\\|} (\\|Z\\|\\cdot 1) = 1$.\nFor $K<0$: $f(K,r) = \\frac{a(1)}{\\|Z\\|} = \\frac{1}{\\|Z\\|} \\left(\\frac{\\|Z\\|}{r\\sqrt{-K}} \\sinh(r\\sqrt{-K})\\right) = \\frac{\\sinh(r\\sqrt{-K})}{r\\sqrt{-K}}$.\n\nThese three expressions define a single real analytic function of $K$ for any fixed $r>0$. We can express this function in a piecewise form.", "answer": "$$\n\\boxed{\nf(K,r) = \\begin{cases} \\frac{\\sin(r\\sqrt{K})}{r\\sqrt{K}} & \\text{if } K>0 \\\\ 1 & \\text{if } K=0 \\\\ \\frac{\\sinh(r\\sqrt{-K})}{r\\sqrt{-K}} & \\text{if } K<0 \\end{cases}\n}\n$$", "id": "2977508"}, {"introduction": "Analytical solutions for the Jacobi equation are rare, typically confined to highly symmetric spaces. This final practice bridges the gap between idealized theory and practical application by tackling the general case of variable curvature along a geodesic. You will derive the component form of the Jacobi equation in a parallel frame and then outline a numerical scheme to solve it, a powerful technique used in computational geometry and general relativity. This exercise solidifies your understanding by translating abstract equations into a concrete, computational workflow. [@problem_id:2977476]", "problem": "Consider a smooth Riemannian manifold $(M,g)$ and a unit-speed geodesic $\\gamma:[0,T]\\to M$ with $\\lVert \\dot{\\gamma}(t)\\rVert_g=1$. A smooth variation of $\\gamma$ through geodesics determines a Jacobi field $J(t)$ along $\\gamma$ as the variational vector field. The Jacobi field is characterized by a second-order linear ordinary differential equation obtained from the curvature tensor and the Levi-Civita connection, and its geometric meaning is that it encodes infinitesimal separation of nearby geodesics in a variation. Let $\\{E_1(t),\\dots,E_{m}(t)\\}$ be a parallel orthonormal frame along $\\gamma$ that is everywhere orthogonal to $\\dot{\\gamma}(t)$, where $m=\\dim(M)-1$. Suppose that at each $t$, the Jacobi operator along $\\gamma$, which maps a vector $V$ orthogonal to $\\dot{\\gamma}(t)$ to the vector $R(V,\\dot{\\gamma}(t))\\dot{\\gamma}(t)$, is diagonalizable with respect to the chosen frame with known eigenvalues $\\kappa_i(t)$ along $\\gamma$. The geometric interpretation is that each $\\kappa_i(t)$ is the curvature experienced by infinitesimal deviations in the $E_i(t)$ direction, and that for an orthogonal geodesic variation the Jacobi field can be written as $J(t)=\\sum_{i=1}^{m} j_i(t)\\,E_i(t)$ for scalar component functions $j_i(t)$.\n\nTask:\n1. Starting from the Jacobi equation expressed using the Levi-Civita covariant derivative and the Riemann curvature tensor, together with the properties of parallel frames along a geodesic and the pointwise diagonalization hypothesis described above, derive the scalar component equations governing the functions $j_i(t)$ along $\\gamma$ as a decoupled system. Do not assume or assert any pre-specified formulas beyond the fundamental definitions; derive them carefully and justify the decoupling and the role of the known $\\kappa_i(t)$.\n2. Outline a principled numerical scheme to integrate the decoupled second-order scalar equations for the $j_i(t)$ given $t\\mapsto \\kappa_i(t)$, unit-speed parameter $t$ (angles for any trigonometric functions must be taken in radians), and initial conditions $j_i(0)$ and $\\frac{d}{dt}j_i(0)$. Reduce the second-order system to a first-order system that is suitable for a robust Runge–Kutta method, discuss stability considerations, and explain how to reconstruct the Jacobi field $J(t)$ from the integrated components and the parallel frame.\n3. Implement the outlined numerical scheme in a program that, for each test case in the test suite below, integrates the component equations on $[0,T]$, reconstructs $J(T)$, and returns the Euclidean norm $\\lVert J(T)\\rVert$ in the chosen parallel frame. For simplicity and computational definiteness, assume Fermi normal coordinates along $\\gamma$ so that the parallel frame is constant in the chosen coordinates; in particular, take $E_i(t)$ to be coordinate unit vectors, so that reconstruction reduces to concatenating the component values.\n\nAngle unit specification: whenever trigonometric functions of $t$ are used, treat $t$ in radians.\n\nTest suite:\n- Case A (boundary/oscillatory, one component): $m=1$, $\\kappa_1(t)=1$, $j_1(0)=0$, $\\frac{d}{dt}j_1(0)=1$, $T=\\pi$.\n- Case B (flat, one component): $m=1$, $\\kappa_1(t)=0$, $j_1(0)=2$, $\\frac{d}{dt}j_1(0)=-1$, $T=3$.\n- Case C (mixed curvature, two components): $m=2$, $\\kappa_1(t)=0.5+0.3\\sin(t)$, $\\kappa_2(t)=-1.0$, $(j_1(0),j_2(0))=(0.1,0.0)$, $\\left(\\frac{d}{dt}j_1(0),\\frac{d}{dt}j_2(0)\\right)=(0.0,1.0)$, $T=2.5$.\n- Case D (variable curvature, three components): $m=3$, $\\kappa_1(t)=0.2$, $\\kappa_2(t)=0.2\\cos(2t)$, $\\kappa_3(t)=1.5+0.1\\sin(3t)$, $(j_1(0),j_2(0),j_3(0))=(0.0,0.2,-0.05)$, $\\left(\\frac{d}{dt}j_1(0),\\frac{d}{dt}j_2(0),\\frac{d}{dt}j_3(0)\\right)=(1.0,0.0,0.0)$, $T=1.0$.\n\nRequired final output format:\nYour program should produce a single line of output containing the Euclidean norms of $J(T)$ for the four cases as a comma-separated list enclosed in square brackets (for example, \"[r_A,r_B,r_C,r_D]\"), where each entry is a floating-point number. No other output is permitted.", "solution": "The problem is assessed to be valid. It is a well-posed problem in Riemannian geometry and numerical analysis, grounded in established scientific principles. It is self-contained, with all necessary data and conditions provided, and is free of contradictions, ambiguities, or pseudo-scientific claims.\n\nThe problem is structured as a three-part task. The first part requires the derivation of a system of ordinary differential equations from the fundamental Jacobi equation. The second part requires the formulation of a numerical integration scheme for this system. The third part requires the implementation of this scheme to solve a set of concrete test cases.\n\n**Part 1: Derivation of the Scalar Component Equations**\n\nThe starting point is the Jacobi equation along a geodesic $\\gamma(t)$, which describes the evolution of a Jacobi field $J(t)$:\n$$\n\\nabla_{\\dot{\\gamma}}\\nabla_{\\dot{\\gamma}}J + R(J, \\dot{\\gamma})\\dot{\\gamma} = 0\n$$\nHere, $\\nabla$ is the Levi-Civita connection, $\\dot{\\gamma}$ is the velocity vector of the geodesic $\\gamma$, and $R$ is the Riemann curvature tensor. A Jacobi field $J(t)$ represents the infinitesimal separation vector between $\\gamma$ and a nearby geodesic in a variation. The field $J(t)$ is orthogonal to $\\dot{\\gamma}(t)$ if it is so initially. We consider such orthogonal Jacobi fields.\n\nWe are given a parallel orthonormal frame $\\{E_1(t), \\dots, E_m(t)\\}$ along $\\gamma(t)$ that is orthogonal to $\\dot{\\gamma}(t)$. The term \"parallel\" means that the covariant derivative of each frame vector along $\\gamma$ is zero:\n$$\n\\nabla_{\\dot{\\gamma}}E_i(t) = 0 \\quad \\text{for } i=1, \\dots, m\n$$\nThe Jacobi field $J(t)$ can be expressed in this frame with scalar component functions $j_i(t)$:\n$$\nJ(t) = \\sum_{i=1}^{m} j_i(t) E_i(t)\n$$\nWe now compute the first term of the Jacobi equation, $\\nabla_{\\dot{\\gamma}}\\nabla_{\\dot{\\gamma}}J$. First, we compute the first covariant derivative $\\nabla_{\\dot{\\gamma}}J$. Using the product rule for covariant differentiation (Leibniz rule) and the fact that the frame is parallel:\n$$\n\\nabla_{\\dot{\\gamma}}J = \\nabla_{\\dot{\\gamma}}\\left(\\sum_{i=1}^{m} j_i(t) E_i(t)\\right) = \\sum_{i=1}^{m} \\left( (\\nabla_{\\dot{\\gamma}}j_i) E_i + j_i (\\nabla_{\\dot{\\gamma}}E_i) \\right)\n$$\nSince $j_i(t)$ are scalar functions, their covariant derivative along $\\gamma$ is simply their ordinary derivative with respect to the parameter $t$, i.e., $\\nabla_{\\dot{\\gamma}}j_i = \\frac{d j_i}{dt}$. The second term in the sum vanishes because $\\nabla_{\\dot{\\gamma}}E_i = 0$. Thus,\n$$\n\\nabla_{\\dot{\\gamma}}J = \\sum_{i=1}^{m} \\frac{d j_i}{dt} E_i(t)\n$$\nNext, we compute the second covariant derivative by applying $\\nabla_{\\dot{\\gamma}}$ again and repeating the same steps:\n$$\n\\nabla_{\\dot{\\gamma}}\\nabla_{\\dot{\\gamma}}J = \\nabla_{\\dot{\\gamma}}\\left(\\sum_{i=1}^{m} \\frac{d j_i}{dt} E_i(t)\\right) = \\sum_{i=1}^{m} \\left( (\\nabla_{\\dot{\\gamma}}\\frac{d j_i}{dt}) E_i + \\frac{d j_i}{dt} (\\nabla_{\\dot{\\gamma}}E_i) \\right) = \\sum_{i=1}^{m} \\frac{d^2 j_i}{dt^2} E_i(t)\n$$\nNow we analyze the second term of the Jacobi equation, the curvature term $R(J, \\dot{\\gamma})\\dot{\\gamma}$. Substituting the expansion of $J(t)$ and using the linearity of the Riemann tensor in its first slot:\n$$\nR(J, \\dot{\\gamma})\\dot{\\gamma} = R\\left(\\sum_{i=1}^{m} j_i(t) E_i(t), \\dot{\\gamma}\\right)\\dot{\\gamma} = \\sum_{i=1}^{m} j_i(t) R(E_i(t), \\dot{\\gamma})\\dot{\\gamma}\n$$\nThe problem states that the Jacobi operator, which maps a vector $V \\perp \\dot{\\gamma}$ to $R(V, \\dot{\\gamma})\\dot{\\gamma}$, is diagonalized by the frame $\\{E_i(t)\\}$ with eigenvalues $\\kappa_i(t)$. This means:\n$$\nR(E_i(t), \\dot{\\gamma}(t))\\dot{\\gamma}(t) = \\kappa_i(t) E_i(t)\n$$\nThe eigenvalues $\\kappa_i(t)$ are the sectional curvatures of the $2$-planes spanned by $E_i(t)$ and $\\dot{\\gamma}(t)$. Substituting this into the expression for the curvature term:\n$$\nR(J, \\dot{\\gamma})\\dot{\\gamma} = \\sum_{i=1}^{m} j_i(t) (\\kappa_i(t) E_i(t)) = \\sum_{i=1}^{m} \\kappa_i(t) j_i(t) E_i(t)\n$$\nFinally, we substitute both computed terms back into the Jacobi equation:\n$$\n\\sum_{i=1}^{m} \\frac{d^2 j_i}{dt^2} E_i(t) + \\sum_{i=1}^{m} \\kappa_i(t) j_i(t) E_i(t) = 0\n$$\nCombining the sums gives:\n$$\n\\sum_{i=1}^{m} \\left( \\frac{d^2 j_i}{dt^2} + \\kappa_i(t) j_i(t) \\right) E_i(t) = 0\n$$\nSince the vectors $\\{E_1(t), \\dots, E_m(t)\\}$ form an orthonormal basis for the orthogonal complement of $\\dot{\\gamma}(t)$, they are linearly independent. Therefore, for the sum to be the zero vector, each coefficient must be zero. This yields the desired system of decoupled second-order linear ordinary differential equations:\n$$\n\\frac{d^2 j_i}{dt^2} + \\kappa_i(t) j_i(t) = 0, \\quad \\text{for } i=1, \\dots, m.\n$$\nThe decoupling is a direct consequence of the crucial hypothesis that the parallel frame $\\{E_i\\}$ simultaneously diagonalizes the Jacobi operator $V \\mapsto R(V, \\dot{\\gamma})\\dot{\\gamma}$ at all points along the geodesic $\\gamma$.\n\n**Part 2: Numerical Integration Scheme**\n\nTo solve the system of $m$ second-order ODEs numerically, we first convert it into a system of $2m$ first-order ODEs. For each component $i \\in \\{1, \\dots, m\\}$, we define a state vector with two components:\nLet $y_{i,1}(t) = j_i(t)$ and $y_{i,2}(t) = \\frac{d j_i}{dt}(t)$.\nThe second-order equation for $j_i$ can then be rewritten as a first-order system for $y_{i,1}$ and $y_{i,2}$:\n$$\n\\frac{d y_{i,1}}{dt} = y_{i,2}\n$$\n$$\n\\frac{d y_{i,2}}{dt} = \\frac{d^2 j_i}{dt^2} = -\\kappa_i(t) j_i(t) = -\\kappa_i(t) y_{i,1}\n$$\nWe can concatenate these variables for all $m$ components into a single state vector $\\mathbf{y}(t)$ of dimension $2m$:\n$$\n\\mathbf{y}(t) = [y_{1,1}(t), y_{1,2}(t), y_{2,1}(t), y_{2,2}(t), \\dots, y_{m,1}(t), y_{m,2}(t)]^T\n$$\nThe entire system is then expressed in the standard form $\\frac{d\\mathbf{y}}{dt} = \\mathbf{f}(t, \\mathbf{y})$, where the function $\\mathbf{f}$ is:\n$$\n\\mathbf{f}(t, \\mathbf{y}) = [y_{1,2}, -\\kappa_1(t) y_{1,1}, y_{2,2}, -\\kappa_2(t) y_{2,1}, \\dots, y_{m,2}, -\\kappa_m(t) y_{m,1}]^T\n$$\nThe initial conditions $j_i(0)$ and $\\frac{d j_i}{dt}(0)$ directly specify the initial state vector $\\mathbf{y}(0)$.\n\nFor numerical integration, a robust choice is an adaptive-step Runge-Kutta method, such as the Dormand-Prince pair (RK45). Such methods are implemented in standard scientific computing libraries, like `scipy.integrate.solve_ivp` in Python. They automatically adjust the step size to control the local error, ensuring accuracy and efficiency.\n\nRegarding stability, the behavior of the solution for the $i$-th component depends on the sign of $\\kappa_i(t)$.\n- If $\\kappa_i(t) > 0$, the equation $j_i'' + \\kappa_i j_i = 0$ is analogous to a harmonic oscillator. The solutions are oscillatory and remain bounded. This represents stable behavior, corresponding to geodesics re-focusing in positively curved directions.\n- If $\\kappa_i(t) < 0$, the equation $j_i'' - |\\kappa_i| j_i = 0$ has solutions that grow exponentially. This represents unstable behavior, corresponding to geodesics diverging in negatively curved directions.\n- If $\\kappa_i(t) = 0$, the equation is $j_i''=0$, which yields linear growth in separation.\nThe given ODEs are linear and non-stiff, making explicit Runge-Kutta methods perfectly suitable.\n\nUpon integrating the system from $t=0$ to the final time $t=T$, the numerical solver provides the final state vector $\\mathbf{y}(T)$. The components of the Jacobi field $J(T)$ are the values $j_i(T)$, which correspond to the odd-indexed elements of $\\mathbf{y}(T)$: $j_i(T) = y_{2i-1}(T)$.\nThe problem simplifies reconstruction by assuming coordinates where the parallel frame vectors $E_i(t)$ are constant coordinate unit vectors. In this basis, the vector $J(T)$ is simply the vector of its components:\n$$\nJ(T) = (j_1(T), j_2(T), \\dots, j_m(T))\n$$\nThe required output, the Euclidean norm $\\lVert J(T) \\rVert$, is then computed as:\n$$\n\\lVert J(T) \\rVert = \\sqrt{\\sum_{i=1}^{m} (j_i(T))^2}\n$$\n\n**Part 3: Implementation**\n\nThe implementation will follow the scheme outlined above. For each test case, a function for the ODE system $\\mathbf{f}(t, \\mathbf{y})$ will be defined based on the provided $\\kappa_i(t)$ functions. The `scipy.integrate.solve_ivp` function will be used to integrate the system. The final state vector will be used to compute the norm of the reconstructed Jacobi field at $t=T$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Solves for the Euclidean norm of the Jacobi field J(T) for four test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A\n        {\n            \"m\": 1,\n            \"kappas_func\": [lambda t: 1.0],\n            \"j0\": [0.0],\n            \"dj0\": [1.0],\n            \"T\": np.pi,\n        },\n        # Case B\n        {\n            \"m\": 1,\n            \"kappas_func\": [lambda t: 0.0],\n            \"j0\": [2.0],\n            \"dj0\": [-1.0],\n            \"T\": 3.0,\n        },\n        # Case C\n        {\n            \"m\": 2,\n            \"kappas_func\": [\n                lambda t: 0.5 + 0.3 * np.sin(t),\n                lambda t: -1.0\n            ],\n            \"j0\": [0.1, 0.0],\n            \"dj0\": [0.0, 1.0],\n            \"T\": 2.5,\n        },\n        # Case D\n        {\n            \"m\": 3,\n            \"kappas_func\": [\n                lambda t: 0.2,\n                lambda t: 0.2 * np.cos(2 * t),\n                lambda t: 1.5 + 0.1 * np.sin(3 * t)\n            ],\n            \"j0\": [0.0, 0.2, -0.05],\n            \"dj0\": [1.0, 0.0, 0.0],\n            \"T\": 1.0,\n        },\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        m = case[\"m\"]\n        kappas_func = case[\"kappas_func\"]\n        T = case[\"T\"]\n        \n        # Define the system of first-order ODEs dy/dt = f(t, y)\n        def dydt(t, y):\n            \"\"\"\n            Computes the derivative of the state vector y at time t.\n            The state vector y is a flat array of size 2m:\n            [j_1, j'_1, j_2, j'_2, ..., j_m, j'_m]\n            \"\"\"\n            dydt_array = np.zeros_like(y)\n            for i in range(m):\n                j_i = y[2 * i]\n                dj_i_dt = y[2 * i + 1]\n                \n                # Equation 1: d(j_i)/dt = j'_i\n                dydt_array[2 * i] = dj_i_dt\n                \n                # Equation 2: d(j'_i)/dt = -kappa_i(t) * j_i\n                kappa_i_t = kappas_func[i](t)\n                dydt_array[2 * i + 1] = -kappa_i_t * j_i\n            \n            return dydt_array\n\n        # Set up the initial conditions vector y0\n        y0 = np.zeros(2 * m)\n        y0[0::2] = case[\"j0\"]\n        y0[1::2] = case[\"dj0\"]\n        \n        # Define the time span for integration\n        t_span = [0, T]\n        \n        # Use a high-quality ODE solver (RK45 is the default)\n        # Set rtol and atol for high precision\n        sol = solve_ivp(\n            dydt, \n            t_span, \n            y0, \n            method='RK45', \n            dense_output=False,\n            rtol=1e-12, \n            atol=1e-12\n        )\n        \n        # The solution at the final time T is the last column of sol.y\n        y_final = sol.y[:, -1]\n        \n        # The components of the Jacobi field J(T) are the even-indexed elements\n        # (0, 2, 4, ...) of the final state vector.\n        j_components_at_T = y_final[0::2]\n        \n        # Calculate the Euclidean norm of the vector J(T)\n        norm_J_T = np.linalg.norm(j_components_at_T)\n        results.append(norm_J_T)\n\n    # Format and print the final results\n    print(f\"[{','.join(f'{r:.10f}' for r in results)}]\")\n\n# Execute the main function\nsolve()\n```", "id": "2977476"}]}