{"hands_on_practices": [{"introduction": "At the heart of proving that convex surfaces remain convex under mean curvature flow lies the maximum principle applied to a carefully chosen \"pinching quantity\". This exercise guides you through a foundational calculation to derive a critical pinching constant for surfaces in $\\mathbb{R}^3$, mirroring the seminal work of Gerhard Huisken. By analyzing the evolution of the second fundamental form, you will see precisely how the maximum principle acts as an engine to control the geometry of the flow, a cornerstone technique in the field [@problem_id:3027219].", "problem": "Let $\\{M_{t}\\}_{t \\in [0,T)}$ be a smooth family of closed, embedded hypersurfaces evolving by mean curvature flow (MCF) in $\\mathbb{R}^{3}$, that is, by a one-parameter family of immersions $X(\\cdot,t):M \\to \\mathbb{R}^{3}$ satisfying $\\partial_{t} X = - H \\nu$, where $H$ is the mean curvature and $\\nu$ the outward unit normal. Denote by $g_{ij}$ the induced metric, by $h_{ij}$ the second fundamental form, by $A$ the shape operator, by $H = g^{ij} h_{ij}$ the mean curvature, and by $|A|^{2} = g^{ik} g^{jl} h_{ij} h_{kl}$ the squared norm of the second fundamental form. Consider the pinching quantity $f_{\\alpha} = |A|^{2} - \\alpha H^{2}$ for a constant $\\alpha > 0$.\n\nWork in the low-dimensional case $n=2$ (so that $M_{t}$ are surfaces in $\\mathbb{R}^{3}$). Starting from fundamental definitions and well-tested formulas governing the geometry and the evolution under mean curvature flow, determine the smallest constant $\\alpha$ with the following two properties:\n\n1) The quantity $f_{\\alpha}$ vanishes identically along the shrinking round sphere solution for all times of its existence.\n\n2) At any spacetime point at which the hypersurface is umbilic (that is, $h_{ij} = \\frac{H}{2} g_{ij}$) and $f_{\\alpha}$ attains a spatial maximum with value $0$, the parabolic maximum principle is consistent with preservation of the inequality $f_{\\alpha} \\le 0$, in the sense that the operator $(\\partial_{t} - \\Delta)$ applied to $f_{\\alpha}$ is nonpositive at that point.\n\nExpress your final answer as an exact number. No rounding is required.", "solution": "To solve this problem, we will first use Property 1 to determine the value of $\\alpha$ from the geometry of a shrinking sphere. Then, we will verify that this value of $\\alpha$ also satisfies Property 2 by analyzing the evolution equation for the pinching quantity $f_\\alpha$ at an umbilic point.\n\n**Step 1: Determine $\\alpha$ from the Shrinking Sphere (Property 1)**\n\nA round sphere of radius $R$ in $\\mathbb{R}^3$ ($n=2$) is an umbilic surface with its two principal curvatures being equal: $\\lambda_1 = \\lambda_2 = 1/R$.\n\nThe mean curvature $H$ is the sum of the principal curvatures:\n$$ H = \\lambda_1 + \\lambda_2 = \\frac{1}{R} + \\frac{1}{R} = \\frac{2}{R} $$\n\nThe squared norm of the second fundamental form, $|A|^2$, is the sum of the squares of the principal curvatures:\n$$ |A|^2 = \\lambda_1^2 + \\lambda_2^2 = \\left(\\frac{1}{R}\\right)^2 + \\left(\\frac{1}{R}\\right)^2 = \\frac{2}{R^2} $$\n\nProperty 1 states that the quantity $f_\\alpha = |A|^2 - \\alpha H^2$ vanishes identically for a shrinking sphere. We set $f_\\alpha = 0$ and substitute our expressions for $H$ and $|A|^2$:\n$$ \\frac{2}{R^2} - \\alpha \\left(\\frac{2}{R}\\right)^2 = 0 $$\n$$ \\frac{2}{R^2} - \\alpha \\frac{4}{R^2} = 0 $$\nSince $R \\neq 0$, we can cancel the $1/R^2$ term:\n$$ 2 - 4\\alpha = 0 \\implies 4\\alpha = 2 \\implies \\alpha = \\frac{1}{2} $$\nThus, Property 1 uniquely determines the constant to be $\\alpha = 1/2$.\n\n**Step 2: Verify the Maximum Principle Condition (Property 2)**\n\nNow we must check if $\\alpha=1/2$ satisfies the second property. We need to analyze the sign of $(\\partial_t - \\Delta)f_{1/2}$ at a spacetime point where the surface is umbilic ($h_{ij} = \\frac{H}{2}g_{ij}$) and $f_{1/2}=0$.\n\nThe standard evolution equations for geometric quantities under mean curvature flow in $\\mathbb{R}^3$ ($n=2$) are:\n1.  Evolution of mean curvature $H$: $(\\partial_t - \\Delta)H = |A|^2 H$\n2.  Evolution of the squared norm of the second fundamental form $|A|^2$: $(\\partial_t - \\Delta)|A|^2 = -2|\\nabla A|^2 + 2|A|^4$\n\nFrom the first equation, we can derive the evolution for $H^2$:\n$$ (\\partial_t - \\Delta)H^2 = 2H(\\partial_t - \\Delta)H - 2|\\nabla H|^2 = 2H(|A|^2 H) - 2|\\nabla H|^2 = 2H^2|A|^2 - 2|\\nabla H|^2 $$\n\nNow we can write the evolution equation for $f_\\alpha = |A|^2 - \\alpha H^2$:\n$$ (\\partial_t - \\Delta)f_\\alpha = (\\partial_t - \\Delta)|A|^2 - \\alpha((\\partial_t - \\Delta)H^2) $$\n$$ (\\partial_t - \\Delta)f_\\alpha = (-2|\\nabla A|^2 + 2|A|^4) - \\alpha(2H^2|A|^2 - 2|\\nabla H|^2) $$\n$$ (\\partial_t - \\Delta)f_\\alpha = -2|\\nabla A|^2 + 2\\alpha|\\nabla H|^2 + 2|A|^4 - 2\\alpha H^2|A|^2 $$\n\nWe evaluate this expression under the conditions given in Property 2, using $\\alpha=1/2$:\n-   The point is umbilic, which for $n=2$ means $\\lambda_1 = \\lambda_2 = H/2$. This implies $|A|^2 = (H/2)^2 + (H/2)^2 = H^2/2$.\n-   At this point, $f_{1/2} = |A|^2 - \\frac{1}{2}H^2 = 0$, which is consistent with the umbilic condition.\n-   A key identity for umbilic surfaces in $\\mathbb{R}^3$ ($n=2$) is that the gradients of $A$ and $H$ are related by $|\\nabla H|^2 = 2|\\nabla A|^2$.\n\nLet's substitute these conditions into the evolution equation for $f_{1/2}$:\n$$ (\\partial_t - \\Delta)f_{1/2} = -2|\\nabla A|^2 + 2\\left(\\frac{1}{2}\\right)|\\nabla H|^2 + 2|A|^4 - 2\\left(\\frac{1}{2}\\right)H^2|A|^2 $$\n$$ = (-2|\\nabla A|^2 + |\\nabla H|^2) + (2|A|^4 - H^2|A|^2) $$\n\nNow we analyze the two parts separately:\n-   The gradient term: $-2|\\nabla A|^2 + |\\nabla H|^2 = -2|\\nabla A|^2 + (2|\\nabla A|^2) = 0$.\n-   The reaction term: Using $|A|^2=H^2/2$, we get $2(H^2/2)^2 - H^2(H^2/2) = 2(H^4/4) - H^4/2 = H^4/2 - H^4/2 = 0$.\n\nBoth terms are zero, so $(\\partial_t - \\Delta)f_{1/2} = 0$ at such a point. This value is nonpositive ($\\le 0$), so the condition from the parabolic maximum principle is satisfied.\n\n**Conclusion**\n\nThe constant $\\alpha=1/2$ is determined by Property 1 and verified to satisfy Property 2. Therefore, the smallest constant satisfying both properties is $1/2$.", "answer": "$$ \\boxed{\\frac{1}{2}} $$", "id": "3027219"}, {"introduction": "Translating solitons are special solutions to mean curvature flow that move by pure translation, and they serve as critical models for understanding singularity formation. This exercise focuses on the geometry of a rotationally symmetric translating soliton, often called a \"bowl soliton,\" at its tip. You will use the defining equation of a soliton, $H = \\langle V, \\nu \\rangle$, along with a local geometric analysis, to determine the precise ratio of the smallest principal curvature to the mean curvature, revealing a fundamental structural property of these canonical solutions [@problem_id:3027212].", "problem": "Let $M^{n} \\subset \\mathbb{R}^{n+1}$ be a strictly convex, complete translating soliton of the mean curvature flow (MCF), moving with translation vector $V \\in \\mathbb{R}^{n+1}$ of unit length, $|V|=1$. By definition, a translating soliton satisfies $H=\\langle V,\\nu \\rangle$, where $H$ is the mean curvature and $\\nu$ is the unit normal. Assume $M^{n}$ is rotationally symmetric about the axis spanned by $V$ and has a unique tip point $p_{0}$ at which the height function in the $V$-direction attains its global minimum and where $\\nu(p_{0})=V$. Let $\\lambda_{1}(p) \\leq \\cdots \\leq \\lambda_{n}(p)$ denote the principal curvatures at $p \\in M^{n}$ and $H(p)=\\sum_{i=1}^{n}\\lambda_{i}(p)$.\n\nUsing only the foundational definitions of the second fundamental form and the translating soliton condition $H=\\langle V,\\nu \\rangle$, together with the geometric consequences of strict convexity and rotational symmetry near the tip, determine the value of\n$$\n\\lim_{p \\to p_{0}} \\frac{\\lambda_{1}(p)}{H(p)}\n$$\nas a closed-form expression in $n$. Your final answer must be a single analytic expression. No rounding is required and no units are involved.", "solution": "Let us establish a coordinate system to analyze the geometry of the surface $M^n$ near the tip point $p_0$. We can align our coordinate system such that the tip point $p_0$ is at the origin $(0, \\dots, 0)$ of $\\mathbb{R}^{n+1}$, and the translation vector $V$ is aligned with the positive $(n+1)$-th axis, so $V = e_{n+1} = (0, \\dots, 0, 1)$. The axis of rotational symmetry is the $x_{n+1}$-axis.\n\nThe condition that $p_0$ is the point where the height function in the $V$-direction, $f(p) = \\langle p, V \\rangle = x_{n+1}$, attains its global minimum implies that the tangent space to $M^n$ at $p_0$, denoted $T_{p_0}M^n$, must be the hyperplane $x_{n+1}=0$. This is consistent with the given condition $\\nu(p_0)=V=e_{n+1}$, as the normal vector is orthogonal to the tangent space.\n\nNear the origin $p_0$, we can represent the surface $M^n$ as the graph of a smooth function $u: D \\to \\mathbb{R}$, where $D$ is a domain in $\\mathbb{R}^n \\cong T_{p_0}M^n$. The surface is given by points $(x, u(x))$ where $x=(x_1, \\dots, x_n) \\in D$. Since $p_0$ is the origin, we have $u(0)=0$. As the tangent plane at $p_0$ is horizontal, the gradient of $u$ at the origin must be zero, i.e., $\\nabla u(0) = 0$.\n\nThe rotational symmetry about the $x_{n+1}$-axis implies that the function $u$ must be invariant under rotations in the $(x_1, \\dots, x_n)$ coordinates. This means $u(x)$ depends only on the radial distance $r = |x| = \\sqrt{x_1^2 + \\dots + x_n^2}$. So, we can write $u(x) = f(r)$ for some smooth function $f$ (for $r \\ge 0$).\n\nThe Taylor expansion of $f(r)$ around $r=0$ can be written as $f(r) = f(0) + f'(0)r + \\frac{1}{2}f''(0)r^2 + O(r^3)$. Since $u(x)$ must be smooth as a function of $(x_1, \\dots, x_n)$ at the origin, its Taylor series can only contain even powers of $r$. This implies that coefficients of odd powers of $r$ in the expansion of $f(r)$ must be zero. In particular, $f'(0)=0$. This is consistent with $\\nabla u(0) = 0$.\nThus, for small $r$, the function $u(x)$ is given by:\n$$\nu(x) = f(r) \\approx \\frac{1}{2} f''(0) r^2 = \\frac{c}{2} \\sum_{i=1}^n x_i^2\n$$\nwhere we define $c = f''(0)$. The strict convexity of the surface at $p_0$ implies that the Hessian matrix of $u$ at the origin, $D^2u(0)$, must be positive definite. The entries of the Hessian are given by $u_{ij}(0) = \\frac{\\partial^2 u}{\\partial x_i \\partial x_j}(0)$. From the quadratic approximation above, we find that $D^2u(0)$ is a diagonal matrix with all diagonal entries equal to $c$. Thus, $D^2u(0) = c \\cdot I_n$, where $I_n$ is the $n \\times n$ identity matrix. Strict convexity implies $c>0$.\n\nThe principal curvatures $\\lambda_i(p)$ are the eigenvalues of the shape operator (or Weingarten map). For a surface defined as a graph $x_{n+1} = u(x)$, the matrix of the second fundamental form in the basis $\\partial/\\partial x_i$ is $A_{ij} = \\frac{u_{ij}}{\\sqrt{1+|\\nabla u|^2}}$. At the tip $p_0$, we have $\\nabla u(0)=0$. The metric tensor is $g_{ij}(p_0) = \\delta_{ij}$, and the second fundamental form matrix is $A(p_0)_{ij} = u_{ij}(0) = c \\delta_{ij}$. The principal curvatures at $p_0$ are the eigenvalues of this matrix. Since $A(p_0)$ is a scalar multiple of the identity matrix, all its eigenvalues are equal to $c$.\n$$\n\\lambda_1(p_0) = \\lambda_2(p_0) = \\dots = \\lambda_n(p_0) = c\n$$\nThis shows that the tip point $p_0$ is an umbilic point.\n\nThe mean curvature $H(p)$ is the sum of the principal curvatures. At $p_0$, it is:\n$$\nH(p_0) = \\sum_{i=1}^n \\lambda_i(p_0) = \\sum_{i=1}^n c = nc\n$$\nNow we use the translating soliton equation, $H = \\langle V, \\nu \\rangle$. We evaluate this equation at the tip point $p_0$:\n$$\nH(p_0) = \\langle V, \\nu(p_0) \\rangle\n$$\nWe are given that $\\nu(p_0) = V$ and $|V|=1$. Therefore, the inner product becomes:\n$$\n\\langle V, \\nu(p_0) \\rangle = \\langle V, V \\rangle = |V|^2 = 1^2 = 1\n$$\nThis implies that the mean curvature at the tip is exactly $1$:\n$$\nH(p_0) = 1\n$$\nBy equating our two expressions for $H(p_0)$, we find the value of $c$:\n$$\nnc = 1 \\implies c = \\frac{1}{n}\n$$\nSo, all the principal curvatures at the tip $p_0$ are equal to $1/n$. In particular, the smallest principal curvature is $\\lambda_1(p_0) = 1/n$.\n\nThe problem asks for the limit $\\lim_{p \\to p_0} \\frac{\\lambda_{1}(p)}{H(p)}$. Since $M^n$ is a smooth manifold, the principal curvatures $\\lambda_i(p)$ and the mean curvature $H(p)$ are continuous functions of the point $p \\in M^n$. Therefore, we can evaluate the limit by direct substitution of the values at $p_0$:\n$$\n\\lim_{p \\to p_0} \\frac{\\lambda_{1}(p)}{H(p)} = \\frac{\\lambda_1(p_0)}{H(p_0)}\n$$\nSubstituting the values we found: $\\lambda_1(p_0) = 1/n$ and $H(p_0) = 1$.\n$$\n\\lim_{p \\to p_0} \\frac{\\lambda_{1}(p)}{H(p)} = \\frac{1/n}{1} = \\frac{1}{n}\n$$\nThis result holds for any dimension $n \\ge 1$. For instance, for the 1D grim reaper soliton, $n=1$ and the ratio is $1$. For the 2D bowl soliton, $n=2$ and the ratio is $1/2$. Our general result is consistent with these known examples.", "answer": "$$\\boxed{\\frac{1}{n}}$$", "id": "3027212"}, {"introduction": "Bridging the gap between abstract theorems and concrete examples is a vital skill in geometric analysis. This practice shifts the focus to computation, asking you to implement a numerical procedure to verify the convexity pinching conditions you have studied analytically. You will translate the definitions of the metric tensor $g$, the second fundamental form $h$, and principal curvatures into a working algorithm, reinforcing your understanding of these concepts and providing a tangible sense of how theoretical estimates apply to specific, numerically-defined hypersurfaces [@problem_id:3027220].", "problem": "Let $n \\in \\mathbb{N}$ and let a smooth hypersurface in $\\mathbb{R}^{n+1}$ be represented at a point by its induced metric $g_{ij}$ and second fundamental form $h_{ij}$. Define the shape operator $S^{i}{}_{j}$ by the relation $h_{ij} = g_{ik} S^{k}{}_{j}$, that is, $S = g^{-1} h$ in matrix form. The principal curvatures are the eigenvalues $\\{\\lambda_{1},\\dots,\\lambda_{n}\\}$ of the generalized eigenvalue problem $h v = \\lambda g v$. The mean curvature is $H = \\operatorname{tr}_{g} h = \\sum_{i=1}^{n} \\lambda_{i}$. \n\nA convexity pinching condition widely used in the study of Mean Curvature Flow (MCF) asserts that, for some fixed $\\sigma \\in [0,1)$ and a threshold $H_{0} \\ge 0$, one has the quadratic form inequality\n$$\nh + \\sigma H g \\succeq 0\n$$\nat a space-time point whenever $H \\ge H_{0}$. Equivalently, in terms of principal curvatures,\n$$\n\\lambda_{\\min} + \\sigma H \\ge 0\n$$\nwhenever $H \\ge H_{0}$.\n\nYour task is to write a program that, given a finite list of test cases consisting of pairs $(g, h)$ at a single point and several times, numerically verifies the convexity pinching condition above. Each test case specifies:\n- a dimension $n$,\n- a fixed $\\sigma \\in [0,1)$,\n- a threshold $H_{0} \\ge 0$,\n- and a list of time slices, each slice being a pair of real symmetric matrices $(g, h)$ with $g$ symmetric positive definite, both of size $n \\times n$.\n\nFor each time slice, compute the principal curvatures as the generalized eigenvalues of $h v = \\lambda g v$, the mean curvature $H = \\sum_{i=1}^{n} \\lambda_{i}$, and verify the pinching inequality $\\lambda_{\\min} + \\sigma H \\ge 0$ whenever $H \\ge H_{0}$. A test case passes if and only if the inequality holds for every time slice in the test case at which $H \\ge H_{0}$.\n\nImplement a numerically stable procedure appropriate for symmetric positive definite $g$ and symmetric $h$ to obtain the generalized eigenvalues, and treat the inequality with a small nonnegative tolerance $\\tau$ to mitigate floating-point roundoff, i.e., accept $\\lambda_{\\min} + \\sigma H \\ge -\\tau$ whenever $H \\ge H_{0}$. You may choose $\\tau = 10^{-10}$.\n\nTest suite to be hard-coded in the program:\n- Test case 1 (shrinking spheres in $\\mathbb{R}^{3}$ at a point): $n=2$, $\\sigma = 0.05$, $H_{0}=0$. Three time slices with $g = I_{2}$ and $h = k I_{2}$, where $k \\in \\{1.0, 2.0, 4.0\\}$.\n- Test case 2 (cylinders $S^{1}\\times \\mathbb{R}$ in $\\mathbb{R}^{3}$ at a point): $n=2$, $\\sigma = 0.1$, $H_{0}=0$. Three time slices with $g = I_{2}$ and $h = \\operatorname{diag}(k, 0)$, where $k \\in \\{0.5, 1.0, 2.0\\}$.\n- Test case 3 (nontrivial metric with thresholding): $n=3$, $\\sigma = 0.03$, $H_{0}=10$. Two time slices with \n  - $g = \\operatorname{diag}(2.0, 1.5, 1.0)$, \n  - slice A: $h = \\operatorname{diag}(-0.6, 0.6, 0.7)$, \n  - slice B: $h = \\operatorname{diag}(-0.6, 13.5, 9.0)$. \n  These correspond to shape operators $S = g^{-1} h$ with eigenvalues $(-0.3, 0.4, 0.7)$ and $(-0.3, 9.0, 9.0)$ respectively; only the second slice must be checked since the first has $H < H_{0}$.\n- Test case 4 (boundary equality): $n=3$, $\\sigma = 0.2$, $H_{0}=0$. One time slice with $g = I_{3}$ and $h = \\operatorname{diag}(-0.5, 1.0, 2.0)$.\n- Test case 5 (failure case): $n=2$, $\\sigma = 0.05$, $H_{0}=0$. One time slice with $g = I_{2}$ and $h = \\operatorname{diag}(-1.0, 5.0)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the five test cases, with each entry a boolean indicating whether the respective test case passes (for example, \"[True,False,True,True,False]\"). No other output should be produced.", "solution": "The problem statement has been evaluated and is determined to be **valid**. It is scientifically grounded in the field of differential geometry, specifically the study of mean curvature flow, and poses a well-defined, objective, and solvable numerical task. All necessary data and conditions are provided, and there are no internal contradictions or ambiguities.\n\nThe problem requires the numerical verification of a convexity pinching condition for a set of hypersurfaces defined locally by their metric tensor $g$ and second fundamental form $h$. The core of this task involves computing geometric invariants from these matrices and checking an inequality.\n\nLet us briefly review the mathematical foundation. A hypersurface in $\\mathbb{R}^{n+1}$ is locally characterized by two fundamental quadratic forms: the first fundamental form (or induced metric) $g_{ij}$ and the second fundamental form $h_{ij}$. The metric $g$ is a symmetric positive-definite tensor, while $h$ is a symmetric tensor. The principal curvatures, denoted $\\{\\lambda_1, \\dots, \\lambda_n\\}$, describe the bending of the hypersurface in different directions. They are the eigenvalues of the shape operator $S$, which is defined by the relation $S = g^{-1}h$ in matrix notation. This means the principal curvatures are the solutions $\\lambda$ to the generalized eigenvalue problem\n$$h v = \\lambda g v$$\nwhere $v$ is a principal direction vector. The mean curvature $H$ is the trace of the shape operator, which is the sum of the principal curvatures:\n$$H = \\sum_{i=1}^{n} \\lambda_i$$\nThe problem specifies a convexity pinching condition, a concept central to proving regularity and convergence results in mean curvature flow. The condition states that for a given constant $\\sigma \\in [0, 1)$ and a threshold $H_0 \\ge 0$, the inequality\n$$ \\lambda_{\\min} + \\sigma H \\ge 0 $$\nmust hold whenever the mean curvature $H$ exceeds the threshold, i.e., $H \\ge H_0$. Here, $\\lambda_{\\min}$ is the smallest principal curvature.\n\nThe primary computational step is to solve the generalized symmetric definite eigenvalue problem $h v = \\lambda g v$ for a real symmetric matrix $h$ and a real symmetric positive-definite matrix $g$. A numerically stable algorithm for this problem is as follows:\n1.  Perform a Cholesky decomposition of the positive-definite matrix $g$, yielding $g = L L^T$, where $L$ is a lower-triangular matrix.\n2.  Substitute this into the eigenvalue equation: $h v = \\lambda L L^T v$.\n3.  Pre-multiply by $L^{-1}$: $L^{-1} h v = \\lambda L^T v$.\n4.  Define a new vector $y = L^T v$. This implies $v = (L^T)^{-1} y$. Substituting this gives $L^{-1} h (L^T)^{-1} y = \\lambda y$.\n5.  This transforms the original generalized eigenvalue problem into a standard eigenvalue problem $C y = \\lambda y$ for the matrix $C = L^{-1} h (L^T)^{-1}$. Since $h$ is symmetric and $L$ is real, the resulting matrix $C$ is also symmetric.\n6.  The eigenvalues of $C$ can be found using standard, stable numerical methods for symmetric matrices. These eigenvalues are the principal curvatures $\\{\\lambda_1, \\dots, \\lambda_n\\}$.\n\nScientific libraries such as `scipy` provide robust functions that implement such stable algorithms directly. We will use `scipy.linalg.eigh(h, g, eigvals_only=True)` for this purpose, as it is designed for symmetric/Hermitian generalized eigenvalue problems and is highly numerically reliable.\n\nThe overall algorithm for each test case is as follows:\n1.  Initialize a boolean flag, `case_passes`, to `True`.\n2.  For each time slice, represented by a matrix pair $(g, h)$, in the test case:\n    a.  Compute the principal curvatures $\\{\\lambda_i\\}$ by solving the generalized eigenvalue problem $h v = \\lambda g v$. The function `scipy.linalg.eigh` conveniently returns these eigenvalues sorted in non-decreasing order.\n    b.  The minimum principal curvature $\\lambda_{\\min}$ is the first element of the sorted list of eigenvalues.\n    c.  The mean curvature $H$ is calculated as the sum of all eigenvalues: $H = \\sum_{i=1}^{n} \\lambda_i$.\n    d.  Check if the threshold condition $H \\ge H_0$ is met.\n    e.  If it is, verify the pinching inequality $\\lambda_{\\min} + \\sigma H \\ge -\\tau$, where $\\tau = 10^{-10}$ is the specified floating-point tolerance.\n    f.  If this inequality is violated, the time slice fails. Consequently, the entire test case fails. Set `case_passes` to `False` and terminate the evaluation for the current test case.\n3.  If all time slices in a test case pass (or are not subject to the check because $H < H_0$), the value of `case_passes` remains `True`.\n4.  The final result for the test case is the final state of the `case_passes` flag.\n\nThis procedure will be applied to each of the five test cases provided in the problem statement. The results will be collected and formatted into the specified output string.", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import eigh\n\ndef solve():\n    \"\"\"\n    Numerically verifies the convexity pinching condition for a suite of test cases\n    in the context of Mean Curvature Flow.\n    \"\"\"\n    \n    # Numerical tolerance for floating-point comparisons\n    TOLERANCE = 1e-10\n\n    # Test suite as defined in the problem statement\n    test_cases = [\n        {\n            \"n\": 2, \"sigma\": 0.05, \"H0\": 0.0,\n            \"slices\": [\n                (np.identity(2), 1.0 * np.identity(2)),\n                (np.identity(2), 2.0 * np.identity(2)),\n                (np.identity(2), 4.0 * np.identity(2)),\n            ]\n        },\n        {\n            \"n\": 2, \"sigma\": 0.1, \"H0\": 0.0,\n            \"slices\": [\n                (np.identity(2), np.diag([0.5, 0.0])),\n                (np.identity(2), np.diag([1.0, 0.0])),\n                (np.identity(2), np.diag([2.0, 0.0])),\n            ]\n        },\n        {\n            \"n\": 3, \"sigma\": 0.03, \"H0\": 10.0,\n            \"slices\": [\n                (np.diag([2.0, 1.5, 1.0]), np.diag([-0.6, 0.6, 0.7])),\n                (np.diag([2.0, 1.5, 1.0]), np.diag([-0.6, 13.5, 9.0])),\n            ]\n        },\n        {\n            \"n\": 3, \"sigma\": 0.2, \"H0\": 0.0,\n            \"slices\": [\n                (np.identity(3), np.diag([-0.5, 1.0, 2.0])),\n            ]\n        },\n        {\n            \"n\": 2, \"sigma\": 0.05, \"H0\": 0.0,\n            \"slices\": [\n                (np.identity(2), np.diag([-1.0, 5.0])),\n            ]\n        },\n    ]\n\n    results = []\n\n    for case in test_cases:\n        sigma = case[\"sigma\"]\n        H0 = case[\"H0\"]\n        slices = case[\"slices\"]\n        case_passes = True\n\n        for g, h in slices:\n            # Solve the generalized eigenvalue problem h v = lambda g v\n            # eigh returns eigenvalues in ascending order for symmetric matrices.\n            # This is a numerically stable way to compute principal curvatures.\n            principal_curvatures = eigh(h, g, eigvals_only=True)\n            \n            # The smallest principal curvature is the first eigenvalue\n            lambda_min = principal_curvatures[0]\n            \n            # Mean curvature is the sum of principal curvatures\n            H = np.sum(principal_curvatures)\n\n            # Check the condition only if H is above the threshold H0\n            if H >= H0:\n                # Verify the pinching inequality with the given tolerance\n                pinch_value = lambda_min + sigma * H\n                if pinch_value  -TOLERANCE:\n                    case_passes = False\n                    # A single failing slice fails the entire test case\n                    break\n        \n        results.append(case_passes)\n\n    # Format the output as specified: a comma-separated list in brackets.\n    output_str = f\"[{','.join(map(str, results))}]\"\n    print(output_str)\n\nsolve()\n```", "id": "3027220"}]}