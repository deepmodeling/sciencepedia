{"hands_on_practices": [{"introduction": "The rich arithmetic structure of an elliptic curve stems from its group law. Before delving into advanced topics like rank and torsion, it is essential to have a firm grasp of the fundamental operation of point addition. This first practice invites you to apply the geometric chord-and-tangent method, the very definition of the group law, to two rational points on a specific curve. By working through this simple case [@problem_id:3022293], you will solidify your understanding of how collinearity on the cubic curve translates directly into the algebraic identity $P + Q + R = \\mathcal{O}$.", "problem": "Consider the elliptic curve over the field of rational numbers ($\\mathbb{Q}$) given by $$E: y^2=x^3-4x.$$ Let $P=(2,0)$ and $Q=(0,0)$, which are rational points on $E$. Using the geometric chord-tangent law that defines the group structure on a nonsingular cubic, compute the sum $P+Q$ in affine coordinates by intersecting the line through $P$ and $Q$ with $E$ and reflecting the third intersection point across the $x$-axis. Then, determine the unique affine line containing the three points $P$, $Q$, and $-(P+Q)$ and verify their collinearity by computing its slope. Provide as your final answer the slope $m$ of this line. No rounding is necessary.", "solution": "The problem statement is first validated to ensure it is scientifically grounded, well-posed, and objective.\n\n**1. Extraction of Givens:**\nThe problem provides the following data and definitions:\n- The elliptic curve $E$ is defined over the rational numbers $\\mathbb{Q}$ by the equation $y^2=x^3-4x$.\n- Point $P = (2,0)$.\n- Point $Q = (0,0)$.\n- The group law on the elliptic curve is the geometric chord-tangent law.\n- The task is to compute the sum $P+Q$, identify the line containing $P$, $Q$, and $-(P+Q)$, and find its slope $m$.\n\n**2. Validation:**\n- **Scientific and Factual Soundness:** The equation $y^2=x^3-4x$ is a valid Weierstrass equation for an elliptic curve. To be a non-singular elliptic curve, its discriminant must be non-zero. The general form is $y^2 = x^3 + Ax + B$. Here, $A=-4$ and $B=0$. The discriminant is $\\Delta = -16(4A^3 + 27B^2) = -16(4(-4)^3 + 27(0)^2) = -16(4(-64)) = -16(-256) = 4096$. Since $\\Delta \\neq 0$, the curve is non-singular.\nWe must verify that the given points $P$ and $Q$ lie on the curve $E$.\nFor $P=(2,0)$: $y^2 = 0^2 = 0$ and $x^3 - 4x = 2^3 - 4(2) = 8-8 = 0$. The equation holds.\nFor $Q=(0,0)$: $y^2 = 0^2 = 0$ and $x^3 - 4x = 0^3 - 4(0) = 0$. The equation holds.\nThe problem uses the standard definition of the group law on an elliptic curve. The problem is mathematically and scientifically sound.\n- **Well-Posedness and Completeness:** The problem is well-posed. It provides all necessary information to uniquely determine the sum $P+Q$ and subsequently the line and its slope. The operations are well-defined in the theory of elliptic curves.\n- **Objectivity:** The problem is stated using precise mathematical language, free from any subjective or ambiguous terminology.\n\n**Verdict:** The problem is valid.\n\n**Solution:**\nThe problem requires us to compute the slope of the line containing the three points $P$, $Q$, and $-(P+Q)$ on the elliptic curve $E$ defined by $y^2=x^3-4x$. The points are $P=(2,0)$ and $Q=(0,0)$.\n\nThe group law for adding two distinct points $P=(x_P, y_P)$ and $Q=(x_Q, y_Q)$ on an elliptic curve is defined geometrically.\nFirst, we find the equation of the line $L$ passing through $P$ and $Q$.\nSecond, we find the third point of intersection of $L$ with the curve $E$. Let this point be $R$. The three points $P$, $Q$, and $R$ are collinear by construction.\nThird, the sum $P+Q$ is defined as the reflection of $R$ across the $x$-axis, denoted as $-R$. From this definition, it follows that $P+Q+R = \\mathcal{O}$, where $\\mathcal{O}$ is the identity element of the group (the point at infinity). This implies that $R = -(P+Q)$.\n\nThe problem asks for the line containing the three points $P$, $Q$, and $-(P+Q)$. As established, the point $-(P+Q)$ is precisely the third point of intersection $R$. Therefore, the problem is asking for the slope of the line $L$ that passes through $P$ and $Q$.\n\nLet's compute this slope, which we will call $m$. The points are $P=(x_P, y_P)=(2,0)$ and $Q=(x_Q, y_Q)=(0,0)$.\nThe slope $m$ of the line passing through $P$ and $Q$ is given by the formula:\n$$m = \\frac{y_P - y_Q}{x_P - x_Q}$$\nSubstituting the coordinates of $P$ and $Q$:\n$$m = \\frac{0 - 0}{2 - 0} = \\frac{0}{2} = 0$$\n\nThe equation of the line $L$ is $y - 0 = 0(x-0)$, which simplifies to $y=0$. This is the equation of the $x$-axis.\n\nTo verify the collinearity and the full procedure as requested, let's find the third intersection point $R$. We substitute $y=0$ into the equation of the elliptic curve $E$:\n$$0^2 = x^3 - 4x$$\n$$x^3 - 4x = 0$$\n$$x(x^2 - 4) = 0$$\n$$x(x-2)(x+2) = 0$$\nThe roots of this cubic equation give the $x$-coordinates of the three intersection points: $x_1=0$, $x_2=2$, and $x_3=-2$.\nThe $x$-coordinates $x_1=0$ and $x_2=2$ correspond to our initial points $Q$ and $P$, respectively.\nThe third intersection point $R$ has $x$-coordinate $x_3=-2$. Since this point lies on the line $y=0$, its coordinates are $R=(-2,0)$.\nBy the group law, $R = -(P+Q)$.\nThe three points specified in the problem are $P=(2,0)$, $Q=(0,0)$, and $-(P+Q)=(-2,0)$.\nThese three points, $(2,0)$, $(0,0)$, and $(-2,0)$, are indeed collinear, as they all lie on the line $y=0$.\nThe problem asks for the slope of this unique affine line containing them. As calculated, the slope of the line $y=0$ is $0$.", "answer": "$$\\boxed{0}$$", "id": "3022293"}, {"introduction": "The method of $2$-descent is a powerful algorithm for determining the rank of an elliptic curve by examining its covering spaces. A central part of this process involves testing whether these spaces have points over the real numbers and over the $p$-adic numbers for all primes $p$. This exercise [@problem_id:3022295] focuses on this critical \"local solubility\" test, introducing the Hilbert symbol as the decisive tool. By computing a specific Hilbert symbol at the tricky prime $p=2$, you will see firsthand how a local obstruction can prove that a particular element of the Selmer group does not arise from a rational point on the curve.", "problem": "Let $E$ be the elliptic curve $E \\colon y^{2} = x(x+1)(x+2)$ over $\\mathbb{Q}$. In a $2$-descent on $E$, one encounters a genus one covering given (up to scaling by a nonzero rational square) by the binary quadratic form\n$$\n- X^{2} - 2 Y^{2} \\;=\\; Z^{2}.\n$$\nFor a prime $p$, the Hilbert symbol $(a,b)_{p} \\in \\{\\pm 1\\}$ attached to $a,b \\in \\mathbb{Q}_{p}^{\\times}$ is defined by the condition that $(a,b)_{p} = 1$ if and only if the conic $a X^{2} + b Y^{2} = Z^{2}$ has a nontrivial point over the $p$-adic numbers $\\mathbb{Q}_{p}$. This provides the standard local solubility test for the conic in the context of $2$-descent.\n\nUsing only $2$-adic valuations and residue classes modulo $8$, compute the value of the Hilbert symbol $(u,v)_{2}$ for $u = -1$ and $v = -2$, and use it to decide whether the conic $-X^{2} - 2 Y^{2} = Z^{2}$ has a nontrivial point over $\\mathbb{Q}_{2}$, hence whether the corresponding $2$-covering is locally soluble at $p=2$.\n\nYour final answer must be the single value of $(u,v)_{2}$ as a number in $\\{\\pm 1\\}$. No rounding is required.", "solution": "The problem requires the computation of the Hilbert symbol $(u,v)_{2}$ for $u = -1$ and $v = -2$. The value of this symbol determines whether the conic section $-X^{2} - 2Y^{2} = Z^{2}$ possesses a nontrivial solution in the field of $2$-adic numbers, $\\mathbb{Q}_{2}$. A nontrivial solution is one where $(X,Y,Z) \\neq (0,0,0)$. The problem specifies that the calculation should be based on $2$-adic valuations and residue classes modulo $8$. This points directly to the standard explicit formula for the Hilbert symbol at the prime $p=2$.\n\nLet $a, b \\in \\mathbb{Q}_{2}^{\\times}$. We can uniquely write them in the form $a = 2^{\\alpha} a'$ and $b = 2^{\\beta} b'$, where $\\alpha = v_{2}(a)$ and $\\beta = v_{2}(b)$ are the $2$-adic valuations of $a$ and $b$, and $a'$ and $b'$ are $2$-adic units (i.e., $v_{2}(a') = v_{2}(b')=0$). The formula for the Hilbert symbol $(a,b)_{2}$ is given by:\n$$\n(a,b)_{2} = (-1)^{ \\frac{a'-1}{2} \\frac{b'-1}{2} + \\alpha \\frac{b'^{2}-1}{8} + \\beta \\frac{a'^{2}-1}{8} }\n$$\nwhere the exponent is considered modulo $2$. The terms $\\frac{a'-1}{2}$ and $\\frac{a'^{2}-1}{8}$ are well-defined for any $2$-adic unit $a'$ because, as an integer, if $a'$ is odd, then $a'-1$ is even and $a'^{2}-1 = (a'-1)(a'+1)$ is divisible by $8$ (since one factor is divisible by $2$ and the other by $4$).\n\nWe are asked to compute $(u,v)_{2}$ for $u = -1$ and $v = -2$. Let's identify the components required for the formula.\n\nFor $a = u = -1$:\nThe $2$-adic valuation is $\\alpha = v_{2}(-1) = 0$, since $-1$ is a $2$-adic unit.\nThe unit part is $a' = \\frac{-1}{2^{0}} = -1$.\n\nFor $b = v = -2$:\nThe $2$-adic valuation is $\\beta = v_{2}(-2) = v_2(2 \\cdot (-1)) = v_2(2) + v_2(-1) = 1 + 0 = 1$.\nThe unit part is $b' = \\frac{-2}{2^{1}} = -1$.\n\nNow, we compute the components of the exponent in the formula. These depend on the residue classes of $a'$ and $b'$ modulo appropriate powers of $2$. Here, both $a' = -1$ and $b' = -1$.\nWe compute the necessary expressions:\n\\begin{itemize}\n    \\item For $a'=-1$:\n    $$ \\frac{a'-1}{2} = \\frac{-1-1}{2} = \\frac{-2}{2} = -1 $$\n    $$ \\frac{a'^{2}-1}{8} = \\frac{(-1)^{2}-1}{8} = \\frac{1-1}{8} = 0 $$\n    \\item For $b'=-1$:\n    $$ \\frac{b'-1}{2} = \\frac{-1-1}{2} = \\frac{-2}{2} = -1 $$\n    $$ \\frac{b'^{2}-1}{8} = \\frac{(-1)^{2}-1}{8} = \\frac{1-1}{8} = 0 $$\n\\end{itemize}\n\nWe can now substitute these values along with $\\alpha=0$ and $\\beta=1$ into the formula for the Hilbert symbol:\n$$\n(-1, -2)_{2} = (-1)^{ \\left(\\frac{-1-1}{2}\\right) \\left(\\frac{-1-1}{2}\\right) + (0) \\left(\\frac{(-1)^{2}-1}{8}\\right) + (1) \\left(\\frac{(-1)^{2}-1}{8}\\right) }\n$$\n$$\n(-1, -2)_{2} = (-1)^{ (-1)(-1) + 0 \\cdot 0 + 1 \\cdot 0 }\n$$\n$$\n(-1, -2)_{2} = (-1)^{1 + 0 + 0} = (-1)^{1} = -1\n$$\nThe value of the Hilbert symbol is $(-1, -2)_{2} = -1$.\n\nAccording to the definition provided in the problem, $(a,b)_{p} = 1$ if and only if the conic $a X^{2} + b Y^{2} = Z^{2}$ has a nontrivial point over $\\mathbb{Q}_{p}$. In our case, with $a=-1$, $b=-2$, and $p=2$, we have found that $(-1, -2)_{2} = -1$.\nThis means that the conic $-X^{2} - 2Y^{2} = Z^{2}$ does not have a nontrivial point over the field of $2$-adic numbers, $\\mathbb{Q}_{2}$. The equation can be rewritten as $X^{2} + 2Y^{2} + Z^{2} = 0$. Our result demonstrates that this equation has only the trivial solution $(X,Y,Z)=(0,0,0)$ in $\\mathbb{Q}_{2}$.\n\nIn the context of the $2$-descent on the elliptic curve $E$, this result signifies that the given $2$-covering is not locally soluble at the prime $p=2$. A necessary condition for a global rational point to exist on the covering (which would correspond to a rational point of infinite order on $E$) is that it must have points locally in every $\\mathbb{Q}_{p}$ (and in $\\mathbb{R}$). Since this condition fails for $p=2$, this specific element of the Selmer group does not come from a rational point on $E$.\nThe question, however, only asks for the value of the Hilbert symbol and the immediate conclusion about local solubility. The computed value is $-1$.", "answer": "$$\\boxed{-1}$$", "id": "3022295"}, {"introduction": "Determining the precise rank of an elliptic curve remains one of the major open problems in number theory. In practice, number theorists often combine rigorous results with powerful conjectures and computational evidence. This capstone practice [@problem_id:3022323] immerses you in this modern approach by asking you to write a program that conjectures the rank of several elliptic curves. You will synthesize a theoretical upper bound derived from $2$-descent, an analytic prediction from the Birch and Swinnerton-Dyer conjecture by numerically evaluating the curve's $L$-function, and a lower bound from a direct point search, showcasing how different facets of the theory are woven together to attack a single, difficult problem.", "problem": "Consider the elliptic curve over the rational numbers defined by the short Weierstrass equation $$E_A:\\ y^2 = x^3 - A x,$$ where $A$ is a positive integer. The Mordell–Weil theorem asserts that $E_A(\\mathbb{Q})$ is a finitely generated abelian group, isomorphic to $$E_A(\\mathbb{Q}) \\cong E_A(\\mathbb{Q})_{\\mathrm{tors}} \\oplus \\mathbb{Z}^r,$$ where $E_A(\\mathbb{Q})_{\\mathrm{tors}}$ is the torsion subgroup and $r$ is the rank. The Birch and Swinnerton–Dyer conjecture relates the rank $r$ to the order of vanishing of the $L$-function $L(E_A,s)$ at $s=1$.\n\nYour task is to write a complete, runnable program that, for the specific curve $$E:\\ y^2 = x^3 - 36 x,$$ combines a $2$-descent rank upper bound with a numerical approximation of the $L$-function near $s=1$ to conjecture the exact rank. To assess robustness, your program must also process a small test suite of related curves in the family $E_{n^2}:\\ y^2 = x^3 - n^2 x$.\n\nBegin your derivation from the following foundational principles:\n- The definition of an elliptic curve over $\\mathbb{Q}$ and the Mordell–Weil group structure.\n- The existence of a $2$-Selmer group and the inequality $$r \\leq \\dim_{\\mathbb{F}_2} \\mathrm{Sel}_2(E_A) - \\dim_{\\mathbb{F}_2} E_A[2](\\mathbb{Q}).$$\n- For curves with full rational $2$-torsion, specifically the family $E_{n^2}:\\ y^2 = x(x - n)(x + n)$, the $2$-Selmer group is controlled by local conditions at primes dividing $2n$, so that a practical bound of the form $$\\dim_{\\mathbb{F}_2} \\mathrm{Sel}_2(E_{n^2}) \\leq \\omega(n) + 2$$ is obtainable by analyzing squareclasses and local solubility at the finite set of places dividing $2n$, where $\\omega(n)$ denotes the number of distinct prime divisors of $n$. Conclude the $2$-descent rank upper bound $$r \\leq \\omega(n).$$\n- The $L$-function $L(E,s)$ is defined by a Dirichlet series with coefficients $a_n$ multiplicative and determined by local point counts, with Euler product at good primes $p$ given by $$L_p(E,s) = \\left(1 - a_p p^{-s} + p^{1-2s}\\right)^{-1},$$ where $a_p = p + 1 - \\#E(\\mathbb{F}_p)$ for primes of good reduction. Near $s=1$, one may numerically approximate $L(E,s)$ via truncated Dirichlet series or truncated Euler products over good primes to heuristically assess whether $L(E,1)$ is near zero and whether there is a first-order vanishing.\n\nDesign your algorithm as follows:\n- For each test curve $E_{n^2}$, compute the $2$-descent upper bound $r_{\\mathrm{upper}} = \\omega(n)$ using prime factorization of $n$.\n- Numerically approximate $L(E_{n^2},s)$ near $s=1$ by:\n  1. Computing $a_p$ for primes $p$ of good reduction (primes not dividing $2n$) from $\\#E(\\mathbb{F}_p)$ via counting solutions to $y^2 \\equiv x^3 - n^2 x \\pmod{p}$ and using $a_p = p + 1 - \\#E(\\mathbb{F}_p)$.\n  2. Constructing a truncated Dirichlet series $$S_N(s) = \\sum_{\\substack{1 \\leq m \\leq N \\\\ \\gcd(m,2n)=1}} \\frac{a_m}{m^s} e^{-m/N},$$ for a suitable cutoff $N$, where $a_m$ is built multiplicatively from $a_p$ using the Hecke recursion for prime powers at good primes, $$a_{p^k} = a_p a_{p^{k-1}} - p\\, a_{p^{k-2}},\\quad k\\ge 2,$$ and $a_1=1$, while omitting terms with prime factors of bad reduction to keep the approximation consistent.\n  3. Evaluating $S_N(s)$ at $s \\in \\{1-\\varepsilon, 1, 1+\\varepsilon\\}$ with a small $\\varepsilon$ to heuristically detect whether the central value looks like a first-order zero, i.e., $|S_N(1)|$ is substantially smaller than neighboring values and a finite-difference slope is nontrivial, thereby predicting an analytic rank in $\\{0,1\\}$.\n- Optionally, search for small integral rational points with nonzero $y$ to provide a lower bound $r_{\\mathrm{lower}} \\in \\{0,1\\}$; combine bounds by setting $$r_{\\mathrm{conj}} = \\min\\left(r_{\\mathrm{upper}}, \\max\\left(r_{\\mathrm{lower}}, r_{\\mathrm{analytic}}\\right)\\right).$$\n\nYour test suite must include the following parameter values for $n$:\n- $n=6$ (the target curve $E:y^2=x^3-36x$),\n- $n=1$,\n- $n=2$,\n- $n=3$.\n\nFor each $n$ in the test suite, your program must produce the conjectured rank $r_{\\mathrm{conj}}$ as an integer. The final output must be a single line containing the list of conjectured ranks, in the exact format of a comma-separated list enclosed in square brackets, for example, \"[r1,r2,r3,r4]\". No physical units or angles are involved; all outputs are pure integers. Your program must require no input and must run as-is under the specified environment.", "solution": "The task is to conjecture the rank of elliptic curves from the family $E_{n^2}: y^2 = x^3 - n^2 x$ for a given set of parameters $n \\in \\{6, 1, 2, 3\\}$. The conjecture for the rank, denoted $r_{\\mathrm{conj}}$, is to be formed by combining three distinct approaches: a theoretical upper bound from $2$-descent, a numerical lower bound from a point search, and a numerical estimate of the analytic rank from the curve's $L$-function. The final rank conjecture is determined by the formula $r_{\\mathrm{conj}} = \\min(r_{\\mathrm{upper}}, \\max(r_{\\mathrm{lower}}, r_{\\mathrm{analytic}}))$.\n\nHerein, we detail the step-by-step derivation and methodology for computing each component for a given integer $n$.\n\n### 1. Rank Upper Bound ($r_{\\mathrm{upper}}$)\n\nThe problem provides a framework for deriving an upper bound on the rank $r$ of the Mordell-Weil group $E_{n^2}(\\mathbb{Q})$.\nThe foundational inequality relating the rank to the $2$-Selmer group $\\mathrm{Sel}_2(E_{n^2})$ is:\n$$r \\leq \\dim_{\\mathbb{F}_2} \\mathrm{Sel}_2(E_{n^2}) - \\dim_{\\mathbb{F}_2} E_{n^2}[2](\\mathbb{Q})$$\nwhere $E_{n^2}[2](\\mathbb{Q})$ is the group of rational points of order dividing $2$.\nThe equation for our curve is $y^2 = x^3 - n^2 x = x(x-n)(x+n)$. The points of order $2$ are those with $y$-coordinate $y=0$, which occur at $x \\in \\{0, n, -n\\}$. These three points, along with the point at infinity $\\mathcal{O}$, form the rational $2$-torsion subgroup $E_{n^2}[2](\\mathbb{Q})$. This group is isomorphic to the Klein four-group $\\mathbb{Z}/2\\mathbb{Z} \\times \\mathbb{Z}/2\\mathbb{Z}$, and its dimension as a vector space over the finite field with two elements, $\\mathbb{F}_2$, is $2$.\n$$\\dim_{\\mathbb{F}_2} E_{n^2}[2](\\mathbb{Q}) = 2$$\nThe problem states that a practical upper bound for the dimension of the $2$-Selmer group for this family is:\n$$\\dim_{\\mathbb{F}_2} \\mathrm{Sel}_2(E_{n^2}) \\leq \\omega(n) + 2$$\nwhere $\\omega(n)$ is the number of distinct prime divisors of $n$.\nSubstituting these two results into the rank inequality, we conclude:\n$$r \\leq (\\omega(n) + 2) - 2 = \\omega(n)$$\nThis gives us our computable upper bound, $r_{\\mathrm{upper}} = \\omega(n)$. We calculate this for each $n$ in the test suite:\n- For $n=6=2 \\cdot 3$, $\\omega(6)=2$, so $r_{\\mathrm{upper}} = 2$.\n- For $n=1$, which has no prime divisors, $\\omega(1)=0$, so $r_{\\mathrm{upper}} = 0$.\n- For $n=2$, which is prime, $\\omega(2)=1$, so $r_{\\mathrm{upper}} = 1$.\n- For $n=3$, which is prime, $\\omega(3)=1$, so $r_{\\mathrm{upper}} = 1$.\n\n### 2. Rank Lower Bound ($r_{\\mathrm{lower}}$)\n\nA lower bound for the rank can be established by finding rational points of infinite order. For the family $E_{n^2}$, the torsion subgroup consists only of points with $y$-coordinate $y=0$ (for $n>2$). Any rational point with a non-zero $y$-coordinate must be of infinite order. Finding just one such point proves that $r \\ge 1$.\nWe perform a search for integral points $(x,y)$ with $y \\ne 0$. This involves checking, for a range of integers $x$, whether the value $x^3 - n^2 x$ is a perfect square. We need only check integers $x$ for which $x^3 - n^2 x > 0$. This occurs for $x \\in (-n, 0) \\cup (n, \\infty)$. We will search for integer $x$ in the ranges $[-n+1, -1]$ and $[n+1, 200]$.\n- If a point is found, we set $r_{\\mathrm{lower}}=1$.\n- If the search is unsuccessful in this range, we set $r_{\\mathrm{lower}}=0$.\n\n### 3. Analytic Rank ($r_{\\mathrm{analytic}}$)\n\nThe Birch and Swinnerton-Dyer (BSD) conjecture states that the rank $r$ of an elliptic curve equals the order of vanishing of its Hasse-Weil $L$-function, $L(E, s)$, at the central point $s=1$. We will numerically approximate $L(E_{n^2}, s)$ to heuristically determine if its value at $s=1$ is zero, and if so, whether the zero is of first order. This gives a conjectured analytic rank, $r_{\\mathrm{analytic}} \\in \\{0, 1\\}$.\n\nThe procedure is as follows:\n1.  **Identify Bad Primes**: The primes of bad reduction for $E_{n^2}: y^2 = x^3 - n^2 x$ are the primes dividing the discriminant $\\Delta = 2^8 n^6$. These are precisely the prime factors of $2n$.\n2.  **Compute $a_p$ Coefficients**: For each prime $p$ of good reduction, we calculate the coefficient $a_p$ of the $L$-function, defined by $a_p = p + 1 - \\#E_{n^2}(\\mathbb{F}_p)$. The size of the point group over the finite field $\\mathbb{F}_p$, $\\#E_{n^2}(\\mathbb{F}_p)$, is given by $1 + \\sum_{x=0}^{p-1} (1 + (\\frac{x^3 - n^2 x}{p}))$, where $(\\frac{\\cdot}{p})$ is the Legendre symbol. This leads to the formula:\n    $$a_p = -\\sum_{x=0}^{p-1} \\left(\\frac{x^3 - n^2 x}{p}\\right)$$\n3.  **Compute $a_m$ Coefficients**: The coefficients $a_m$ are multiplicative for coprime arguments. For prime powers, they obey the Hecke recurrence relation:\n    $$a_{p^k} = a_p a_{p^{k-1}} - p a_{p^{k-2}} \\quad (k \\ge 2)$$\n    with initial conditions $a_{p^0} = a_1 = 1$ and $a_{p^1} = a_p$. For a general integer $m = p_1^{k_1} \\cdots p_r^{k_r}$, we have $a_m = a_{p_1^{k_1}} \\cdots a_{p_r^{k_r}}$. We implement a sieve-like method to compute $a_m$ for all $m \\le N$ such that $\\gcd(m, 2n) = 1$.\n4.  **Evaluate Truncated $L$-series**: We approximate $L(E_{n^2}, s)$ using the smoothed, truncated Dirichlet series:\n    $$S_N(s) = \\sum_{\\substack{1 \\leq m \\leq N \\\\ \\gcd(m,2n)=1}} \\frac{a_m}{m^s} e^{-m/N}$$\n    We choose a cutoff $N=10000$ and a small parameter $\\varepsilon=10^{-5}$. We evaluate the sum at three points near the center: $s=1-\\varepsilon$, $s=1$, and $s=1+\\varepsilon$.\n5.  **Determine Analytic Rank**:\n    -   If $|S_N(1)|$ is close to zero (e.g., $< 10^{-3}$), and the values $S_N(1-\\varepsilon)$ and $S_N(1+\\varepsilon)$ have opposite signs and are significantly different from zero, we have numerical evidence for a simple zero. In this case, we conjecture $r_{\\mathrm{analytic}}=1$.\n    -   Otherwise, we assume the $L$-function does not vanish at $s=1$ and conjecture $r_{\\mathrm{analytic}}=0$.\n\n### 4. Final Rank Conjecture ($r_{\\mathrm{conj}}$)\n\nFinally, we synthesize the information from the three methods using the specified formula:\n$$r_{\\mathrm{conj}} = \\min(r_{\\mathrm{upper}}, \\max(r_{\\mathrm{lower}}, r_{\\mathrm{analytic}}))$$\nThis provides a robust conjecture by ensuring the rank does not exceed the rigorous upper bound, while allowing numerical evidence (either from finding a point or from the $L$-function) to suggest a positive rank. This process is repeated for each value of $n$ in the test suite.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport math\n\ndef solve():\n    \"\"\"\n    Main function to conjecture the rank of elliptic curves y^2 = x^3 - n^2*x.\n    \"\"\"\n\n    def get_distinct_prime_factors(num):\n        \"\"\"Computes the set of distinct prime factors of a positive integer.\"\"\"\n        if num <= 1:\n            return set()\n        factors = set()\n        d = 2\n        temp_num = num\n        while d * d <= temp_num:\n            if temp_num % d == 0:\n                factors.add(d)\n                while temp_num % d == 0:\n                    temp_num //= d\n            d += 1\n        if temp_num > 1:\n            factors.add(temp_num)\n        return factors\n\n    def legendre_symbol(a, p):\n        \"\"\"Computes the Legendre symbol (a/p).\"\"\"\n        if p < 3 or p % 2 == 0:\n            return 0 # Not a valid prime for this simple implementation\n        ls = pow(a, (p - 1) // 2, p)\n        if ls == p - 1:\n            return -1\n        return ls\n\n    def compute_ap(p, n_sq):\n        \"\"\"Computes the coefficient a_p for the L-series.\"\"\"\n        # a_p = -sum_{x=0}^{p-1} (x^3 - n^2*x / p)\n        return -sum(legendre_symbol(x**3 - n_sq * x, p) for x in range(p))\n\n    def get_lower_bound(n):\n        \"\"\"\n        Searches for an integral point with y != 0 to find a lower bound for the rank.\n        if found, r_lower = 1, else 0.\n        \"\"\"\n        n_sq = n * n\n        # Search space x in (-n, 0) U (n, some_bound)\n        # Check negative x: x in [-n+1, -1]\n        for x in range(-n + 1, 0):\n            val = x**3 - n_sq * x\n            if val > 0:\n                y = math.isqrt(val)\n                if y * y == val:\n                    return 1\n        # Check positive x: x in [n+1, 201]\n        for x in range(n + 1, 201):\n            val = x**3 - n_sq * x\n            if val > 0:\n                y = math.isqrt(val)\n                if y * y == val:\n                    return 1\n        return 0\n\n    def conjecture_rank_analytic(n):\n        \"\"\"Numerically estimates the analytic rank (0 or 1).\"\"\"\n        N_CUTOFF = 10000\n        EPSILON = 1e-5\n        \n        n_sq = n * n\n        bad_primes = get_distinct_prime_factors(2 * n)\n        \n        # Sieve to find primes up to N_CUTOFF and their smallest prime factor\n        min_prime_factor = np.zeros(N_CUTOFF + 1, dtype=int)\n        primes = []\n        for i in range(2, N_CUTOFF + 1):\n            if min_prime_factor[i] == 0:\n                min_prime_factor[i] = i\n                primes.append(i)\n            for p in primes:\n                if p > min_prime_factor[i] or i * p > N_CUTOFF:\n                    break\n                min_prime_factor[i * p] = p\n        \n        # Compute a_p for good primes\n        ap_vals = {p: compute_ap(p, n_sq) for p in primes if p not in bad_primes}\n\n        # Compute a_m for m up to N_CUTOFF using a sieve-like method\n        am_vals = np.zeros(N_CUTOFF + 1, dtype=float)\n        am_vals[1] = 1.0\n\n        for p in primes:\n            if p in bad_primes:\n                continue\n            ap = ap_vals[p]\n            # Set a_{p^k}\n            pp = p\n            apk_prev = 1\n            apk_curr = ap\n            while pp <= N_CUTOFF:\n                am_vals[pp] = apk_curr\n                apk_next = ap * apk_curr - p * apk_prev\n                apk_prev = apk_curr\n                apk_curr = apk_next\n                if pp > N_CUTOFF // p: break\n                pp *= p\n        \n        for m in range(2, N_CUTOFF + 1):\n            if am_vals[m] != 0: # a_m is nonzero only if m is a prime power (for now)\n                continue\n            \n            p = min_prime_factor[m]\n            if p in bad_primes:\n                am_vals[m] = 0.0\n                continue\n            \n            pp = p\n            while (m // pp) % p == 0:\n                pp *= p\n            \n            m_rem = m // pp\n            am_vals[m] = am_vals[pp] * am_vals[m_rem]\n            \n        # Compute the truncated L-series sum S_N(s) at s=1-eps, 1, 1+eps\n        s_vals = [1.0 - EPSILON, 1.0, 1.0 + EPSILON]\n        L_approx = [0.0, 0.0, 0.0]\n        \n        m_vals = np.arange(1, N_CUTOFF + 1)\n        exp_term = np.exp(-m_vals / N_CUTOFF)\n\n        for i, s in enumerate(s_vals):\n            terms = am_vals[1:] / (m_vals**s) * exp_term\n            L_approx[i] = np.sum(terms)\n\n        s_left, s_center, s_right = L_approx\n        \n        # Heuristic for analytic rank 1: central value is small, and there's a sign change\n        is_zero = abs(s_center) < 1e-3\n        has_slope = abs(s_left - s_right) > 1e-2\n        sign_change = s_left * s_right < 0\n\n        if is_zero and has_slope and sign_change:\n            return 1\n        return 0\n\n    def get_rank_conjecture(n):\n        \"\"\"Computes the final rank conjecture for a given n.\"\"\"\n\n        # 1. Upper bound\n        if n == 1:\n            r_upper = 0\n        else:\n            r_upper = len(get_distinct_prime_factors(n))\n\n        # Short-circuit if upper bound is 0\n        if r_upper == 0:\n            return 0\n            \n        # 2. Lower bound from point search\n        r_lower = get_lower_bound(n)\n        \n        # 3. Analytic rank\n        r_analytic = conjecture_rank_analytic(n)\n        \n        # 4. Combine results\n        r_conj = min(r_upper, max(r_lower, r_analytic))\n        return r_conj\n\n    # Test cases from the problem statement\n    test_cases = [6, 1, 2, 3]\n    results = []\n\n    for n in test_cases:\n        rank = get_rank_conjecture(n)\n        results.append(rank)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3022323"}]}