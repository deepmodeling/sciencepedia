{"hands_on_practices": [{"introduction": "The Petersson trace formula establishes a profound connection between the spectral data of modular forms and arithmetic sums. At the heart of its \"arithmetic side\" lies the classical Kloosterman sum, $S(m,n;c)$. Before tackling the formula in its entirety, it is crucial to develop a concrete feel for these sums. This exercise [@problem_id:3028706] invites you to compute several examples by hand, revealing the deep cancellation properties and oscillatory behavior that are fundamental to the structure of the trace formula.", "problem": "Let $p$ be a prime and let $\\alpha \\in \\mathbb{Z}_{\\geq 1}$. For a positive integer $c$, the classical Kloosterman sum $S(m,n;c)$ that appears in the Petersson trace formula (PTF) is defined by\n$$\nS(m,n;c) \\;=\\; \\sum_{\\substack{x \\bmod c \\\\ (x,c)=1}} \\exp\\!\\left(2\\pi i \\,\\frac{m x + n \\overline{x}}{c}\\right),\n$$\nwhere $\\overline{x}$ denotes the multiplicative inverse of $x$ modulo $c$. The sum $S(m,0;c)$ and $S(0,n;c)$ reduce to the Ramanujan sum, reflecting arithmetic cancellation across the reduced residue system. Starting from this definition and from well-tested facts about exponential sums and modular inverses, compute the following explicit Kloosterman sums for prime power moduli and small parameters to illustrate cancellation:\n\n1. $S(1,1;9)$,\n2. $S(1,2;9)$,\n3. $S(3,0;9)$,\n4. $S(9,0;9)$,\n5. $S(1,1;8)$.\n\nExpress your final results as exact values, not numerical approximations. Present the five answers in the single row vector\n$$\n\\big(S(1,1;9),\\; S(1,2;9),\\; S(3,0;9),\\; S(9,0;9),\\; S(1,1;8)\\big),\n$$\nin that order, as your final answer. No rounding is required and no physical units are involved.", "solution": "We begin with the fundamental definition\n$$\nS(m,n;c) \\;=\\; \\sum_{\\substack{x \\bmod c \\\\ (x,c)=1}} \\exp\\!\\left(2\\pi i \\,\\frac{m x + n \\overline{x}}{c}\\right),\n$$\nwhere $\\overline{x}$ is the multiplicative inverse of $x$ modulo $c$. The group of units modulo $c$ is a finite abelian group, and the map $x \\mapsto \\overline{x}$ is a permutation of this set. Consequently, when either $m=0$ or $n=0$, one of the two terms inside the exponential becomes redundant under this permutation, and the sum reduces to a Ramanujan sum\n$$\nc_{c}(t) \\;=\\; \\sum_{\\substack{x \\bmod c \\\\ (x,c)=1}} \\exp\\!\\left(2\\pi i \\,\\frac{t x}{c}\\right).\n$$\nTo compute $c_{p^{\\alpha}}(t)$ for prime powers, we derive the standard piecewise formula from first principles. Write\n$$\nc_{p^{\\alpha}}(t) \\;=\\; \\sum_{a=0}^{p^{\\alpha}-1} \\exp\\!\\left(2\\pi i \\,\\frac{a t}{p^{\\alpha}}\\right) \\;-\\; \\sum_{b=0}^{p^{\\alpha-1}-1} \\exp\\!\\left(2\\pi i \\,\\frac{p b \\, t}{p^{\\alpha}}\\right)\n\\;=\\; A_{\\alpha}(t) \\;-\\; A_{\\alpha-1}(t),\n$$\nwhere\n$$\nA_{\\beta}(t) \\;=\\; \\sum_{u=0}^{p^{\\beta}-1} \\exp\\!\\left(2\\pi i \\,\\frac{u t}{p^{\\beta}}\\right).\n$$\nIt is a well-tested fact (elementary geometric series) that $A_{\\beta}(t)$ equals $p^{\\beta}$ if $p^{\\beta} \\mid t$ and equals $0$ otherwise. Therefore,\n- If $p^{\\alpha} \\mid t$, then $A_{\\alpha}(t)=p^{\\alpha}$ and $A_{\\alpha-1}(t)=p^{\\alpha-1}$, so $c_{p^{\\alpha}}(t)=p^{\\alpha}-p^{\\alpha-1}=\\varphi(p^{\\alpha})$.\n- If $p^{\\alpha-1} \\mid t$ but $p^{\\alpha} \\nmid t$, then $A_{\\alpha}(t)=0$ and $A_{\\alpha-1}(t)=p^{\\alpha-1}$, so $c_{p^{\\alpha}}(t)=-p^{\\alpha-1}$.\n- If $p^{\\alpha-1} \\nmid t$, then $A_{\\alpha}(t)=A_{\\alpha-1}(t)=0$, so $c_{p^{\\alpha}}(t)=0$.\n\nWe now compute each requested sum.\n\nFor $c=9$, the reduced residue system is $\\{1,2,4,5,7,8\\}$, and the inverses modulo $9$ are\n$$\n\\overline{1}=1,\\quad \\overline{2}=5,\\quad \\overline{4}=7,\\quad \\overline{5}=2,\\quad \\overline{7}=4,\\quad \\overline{8}=8.\n$$\n1. Compute $S(1,1;9)$:\n$$\nS(1,1;9)\n=\\sum_{x \\in \\{1,2,4,5,7,8\\}} \\exp\\!\\left(2\\pi i \\,\\frac{x+\\overline{x}}{9}\\right).\n$$\nWe list $x+\\overline{x}$ modulo $9$:\n$$\n1+1=2,\\quad 2+5=7,\\quad 4+7=11\\equiv 2,\\quad 5+2=7,\\quad 7+4=11\\equiv 2,\\quad 8+8=16\\equiv 7.\n$$\nThus\n$$\nS(1,1;9) \\;=\\; 3\\,\\exp\\!\\left(2\\pi i \\,\\frac{2}{9}\\right) \\;+\\; 3\\,\\exp\\!\\left(2\\pi i \\,\\frac{7}{9}\\right).\n$$\nSince $\\exp\\!\\left(2\\pi i \\,\\frac{7}{9}\\right)=\\overline{\\exp\\!\\left(2\\pi i \\,\\frac{2}{9}\\right)}$, this is\n$$\nS(1,1;9) \\;=\\; 3\\left(z+\\overline{z}\\right) \\;=\\; 6\\,\\Re(z),\\quad z=\\exp\\!\\left(2\\pi i \\,\\frac{2}{9}\\right),\n$$\nso\n$$\nS(1,1;9) \\;=\\; 6 \\cos\\!\\left(\\frac{4\\pi}{9}\\right).\n$$\n\n2. Compute $S(1,2;9)$:\n$$\nS(1,2;9)\n=\\sum_{x \\in \\{1,2,4,5,7,8\\}} \\exp\\!\\left(2\\pi i \\,\\frac{x+2\\,\\overline{x}}{9}\\right).\n$$\nWe list $x+2\\,\\overline{x}$ modulo $9$:\n$$\n1+2\\cdot 1=3,\\quad 2+2\\cdot 5=12\\equiv 3,\\quad 4+2\\cdot 7=18\\equiv 0,\\quad 5+2\\cdot 2=9\\equiv 0,\\quad 7+2\\cdot 4=15\\equiv 6,\\quad 8+2\\cdot 8=24\\equiv 6.\n$$\nHence\n$$\nS(1,2;9) \\;=\\; 2\\,\\exp\\!\\left(2\\pi i \\,\\frac{3}{9}\\right) \\;+\\; 2 \\cdot 1 \\;+\\; 2\\,\\exp\\!\\left(2\\pi i \\,\\frac{6}{9}\\right).\n$$\nNote that $\\exp\\!\\left(2\\pi i \\,\\frac{3}{9}\\right)=\\exp\\!\\left(2\\pi i \\,\\frac{1}{3}\\right)$ and $\\exp\\!\\left(2\\pi i \\,\\frac{6}{9}\\right)=\\exp\\!\\left(2\\pi i \\,\\frac{2}{3}\\right)$. Using $\\exp\\!\\left(2\\pi i /3\\right)=-\\frac{1}{2}+i\\frac{\\sqrt{3}}{2}$ and $\\exp\\!\\left(2\\pi i \\cdot 2/3\\right)=-\\frac{1}{2}-i\\frac{\\sqrt{3}}{2}$, we find\n$$\n2\\exp\\!\\left(\\frac{2\\pi i}{3}\\right) + 2\\exp\\!\\left(\\frac{4\\pi i}{3}\\right) \\;=\\; -2,\n$$\nso adding $2$ gives $0$. Therefore,\n$$\nS(1,2;9) \\;=\\; 0.\n$$\n\n3. Compute $S(3,0;9)$ via the Ramanujan sum $c_{9}(3)$. Since $3$ is divisible by $3^{\\alpha-1}=3$ but not by $3^{\\alpha}=9$, the piecewise formula gives\n$$\nS(3,0;9) \\;=\\; c_{9}(3) \\;=\\; -3.\n$$\n\n4. Compute $S(9,0;9)$ via $c_{9}(9)$. Since $9$ is divisible by $9$, we have\n$$\nS(9,0;9) \\;=\\; c_{9}(9) \\;=\\; \\varphi(9) \\;=\\; 6.\n$$\n\nFor $c=8$, the reduced residue system is $\\{1,3,5,7\\}$, and each odd element is its own inverse modulo $8$, that is, $\\overline{x}=x$ for $x \\in \\{1,3,5,7\\}$.\n\n5. Compute $S(1,1;8)$:\n$$\nS(1,1;8) \\;=\\; \\sum_{x \\in \\{1,3,5,7\\}} \\exp\\!\\left(2\\pi i \\,\\frac{x+\\overline{x}}{8}\\right)\n\\;=\\; \\sum_{x \\in \\{1,3,5,7\\}} \\exp\\!\\left(2\\pi i \\,\\frac{2x}{8}\\right)\n\\;=\\; \\sum_{x \\in \\{1,3,5,7\\}} \\exp\\!\\left(2\\pi i \\,\\frac{x}{4}\\right).\n$$\nEvaluating termwise,\n$$\n\\exp\\!\\left(2\\pi i \\,\\frac{1}{4}\\right)=i,\\quad \\exp\\!\\left(2\\pi i \\,\\frac{3}{4}\\right)=-i,\\quad\n\\exp\\!\\left(2\\pi i \\,\\frac{5}{4}\\right)=i,\\quad \\exp\\!\\left(2\\pi i \\,\\frac{7}{4}\\right)=-i,\n$$\nso the sum is $i+(-i)+i+(-i)=0$. Hence,\n$$\nS(1,1;8) \\;=\\; 0.\n$$\n\nCollecting the five computed values in the requested order, we obtain\n$$\n\\left(6 \\cos\\!\\left(\\frac{4\\pi}{9}\\right),\\; 0,\\; -3,\\; 6,\\; 0\\right).\n$$\nThese explicit calculations exhibit cancellation patterns characteristic of Kloosterman sums modulo prime powers, illustrating phenomena that underpin the oscillatory terms in the Petersson trace formula (PTF).", "answer": "$$\\boxed{\\begin{pmatrix}6 \\cos\\!\\left(\\frac{4\\pi}{9}\\right) & 0 & -3 & 6 & 0\\end{pmatrix}}$$", "id": "3028706"}, {"introduction": "Having explored the key arithmetic ingredients, you are now prepared to derive the Petersson trace formula from first principles. This foundational practice [@problem_id:3028743] will guide you through connecting the spectral average of Fourier coefficients to a series involving Kloosterman sums and Bessel functions. By using the reproducing kernel of the space of cusp forms, embodied by the Poincaré series, this derivation illustrates one of the most powerful techniques in the theory of automorphic forms: the unfolding method.", "problem": "Let $k \\geq 12$ be an even integer and let $\\Gamma = \\mathrm{SL}_{2}(\\mathbb{Z})$. Denote by $S_{k}(\\Gamma)$ the space of holomorphic cusp forms of weight $k$ for level $1$, and let $\\langle \\cdot,\\cdot \\rangle$ be the Petersson inner product\n$$\n\\langle f,g \\rangle \\;=\\; \\int_{\\Gamma \\backslash \\mathbb{H}} f(z)\\,\\overline{g(z)}\\,y^{k}\\,\\frac{dx\\,dy}{y^{2}},\n$$\nwhere $z = x + i y \\in \\mathbb{H}$ and $y>0$. Let $\\mathcal{B}_{k}$ be an orthonormal basis of $S_{k}(\\Gamma)$ with respect to $\\langle \\cdot,\\cdot \\rangle$. For each $f \\in \\mathcal{B}_{k}$, write its Fourier expansion at the cusp $\\infty$ in the form\n$$\nf(z) \\;=\\; \\sum_{n=1}^{\\infty} a_{f}(n)\\,\\exp(2\\pi i n z).\n$$\nFor positive integers $m$ and $n$, define\n$$\nT_{k}(m,n) \\;:=\\; \\sum_{f \\in \\mathcal{B}_{k}} a_{f}(m)\\,\\overline{a_{f}(n)}.\n$$\nStarting from the foundational definitions of the Petersson inner product, the Poincaré series of weight $k$ and index $m$, and the Kloosterman sums and Bessel functions of the first kind (of order $k-1$), and without invoking any pre-stated trace formula, derive an explicit closed-form expression for $T_{k}(m,n)$ with all numerical constants fully specified. In your derivation, you may use that the weight $k$ Poincaré series of index $m$ belongs to $S_{k}(\\Gamma)$ and you should carefully track all normalizing constants arising from unfolding and Fourier analysis.\n\nYour final answer must be a single explicit analytic expression for $T_{k}(m,n)$ in terms of $k$, $m$, $n$, the Kronecker delta $\\delta_{m,n}$, the Kloosterman sums\n$$\nS(m,n;c) \\;=\\; \\sum_{\\substack{d \\,(\\mathrm{mod}\\, c) \\\\ (d,c)=1}} \\exp\\!\\left( 2\\pi i \\frac{m d + n d^{-1}}{c} \\right),\n$$\nand the Bessel function of the first kind $J_{k-1}$. No rounding is required.", "solution": "### Derivation\nThe derivation proceeds in two main parts. First, we relate the target quantity $T_{k}(m,n)$ to the Fourier coefficients of the Poincaré series. Second, we compute these Fourier coefficients directly from the definition of the Poincaré series.\n\n#### Part 1: Relating $T_k(m,n)$ to Poincaré Series\n\nThe weight $k$ Poincaré series of index $n \\in \\mathbb{Z}^+$ is defined as\n$$ P_n(z) = \\sum_{\\gamma \\in \\Gamma_\\infty \\backslash \\Gamma} (cz+d)^{-k} \\exp(2\\pi i n \\gamma z) $$,\nwhere $\\Gamma_\\infty = \\left\\{ \\begin{pmatrix} 1 & j \\\\ 0 & 1 \\end{pmatrix} : j \\in \\mathbb{Z} \\right\\}$ is the stabilizer of the cusp at $\\infty$. As stated in the problem, $P_n(z)$ is a cusp form of weight $k$, i.e., $P_n \\in S_k(\\Gamma)$.\n\nLet $f \\in S_k(\\Gamma)$ with Fourier expansion $f(z) = \\sum_{m=1}^{\\infty} a_f(m) \\exp(2\\pi i m z)$. We compute the Petersson inner product $\\langle f, P_n \\rangle$. Using the unfolding trick, we replace the integral over the fundamental domain $\\Gamma \\backslash \\mathbb{H}$ with an integral over the fundamental domain of $\\Gamma_\\infty$, which is the strip $\\{ z=x+iy \\mid 0 \\le x < 1, y>0 \\}$:\n$$ \\langle f, P_n \\rangle = \\int_{\\Gamma \\backslash \\mathbb{H}} f(z) \\overline{\\sum_{\\gamma \\in \\Gamma_\\infty \\backslash \\Gamma} (cz+d)^{-k} \\exp(2\\pi i n \\gamma z)} y^k \\frac{dx\\,dy}{y^2} $$\nSince $f$ is a modular form, $f(\\gamma z) = (cz+d)^k f(z)$. The inner product is sesquilinear, so by unfolding we get:\n$$ \\langle f, P_n \\rangle = \\int_{\\Gamma_\\infty \\backslash \\mathbb{H}} f(z) \\overline{\\exp(2\\pi i n z)} y^{k-2} dx\\,dy $$\n$$ \\langle f, P_n \\rangle = \\int_0^\\infty \\int_0^1 \\left( \\sum_{m=1}^{\\infty} a_f(m) \\exp(2\\pi i m(x+iy)) \\right) \\exp(-2\\pi i n(x-iy)) y^{k-2} dx\\,dy $$\n$$ \\langle f, P_n \\rangle = \\int_0^\\infty \\int_0^1 \\sum_{m=1}^{\\infty} a_f(m) \\exp(2\\pi i (m-n)x) \\exp(-2\\pi(m+n)y) y^{k-2} dx\\,dy $$\nThe integral over $x$ is non-zero only for $m=n$, in which case it equals $1$.\n$$ \\langle f, P_n \\rangle = a_f(n) \\int_0^\\infty \\exp(-4\\pi n y) y^{k-2} dy $$\nWe perform a substitution $u = 4\\pi n y$, so $y = u/(4\\pi n)$ and $dy = du/(4\\pi n)$.\n$$ \\int_0^\\infty e^{-u} \\left(\\frac{u}{4\\pi n}\\right)^{k-2} \\frac{du}{4\\pi n} = \\frac{1}{(4\\pi n)^{k-1}} \\int_0^\\infty u^{k-2} e^{-u} du = \\frac{\\Gamma(k-1)}{(4\\pi n)^{k-1}} $$\nThis gives the fundamental relation:\n$$ \\langle f, P_n \\rangle = a_f(n) \\frac{\\Gamma(k-1)}{(4\\pi n)^{k-1}} $$\nSince $P_n \\in S_k(\\Gamma)$, it can be expanded in the orthonormal basis $\\mathcal{B}_k$:\n$$ P_n(z) = \\sum_{f \\in \\mathcal{B}_k} \\langle P_n, f \\rangle f(z) $$\nLet the Fourier expansion of $P_n(z)$ be $P_n(z) = \\sum_{m=1}^{\\infty} c_n(m) \\exp(2\\pi i m z)$. Comparing the $m$-th Fourier coefficients on both sides gives:\n$$ c_n(m) = \\sum_{f \\in \\mathcal{B}_k} \\langle P_n, f \\rangle a_f(m) = \\sum_{f \\in \\mathcal{B}_k} \\overline{\\langle f, P_n \\rangle} a_f(m) $$\nSubstituting our result for $\\langle f, P_n \\rangle$:\n$$ c_n(m) = \\sum_{f \\in \\mathcal{B}_k} \\overline{a_f(n) \\frac{\\Gamma(k-1)}{(4\\pi n)^{k-1}}} a_f(m) = \\frac{\\Gamma(k-1)}{(4\\pi n)^{k-1}} \\sum_{f \\in \\mathcal{B}_k} a_f(m) \\overline{a_f(n)} $$\nThe sum is precisely the definition of $T_k(m,n)$. Thus, we have established the relation:\n$$ T_k(m,n) = \\frac{(4\\pi n)^{k-1}}{\\Gamma(k-1)} c_n(m) $$\n\n#### Part 2: Fourier Coefficients of the Poincaré Series\n\nWe now compute $c_n(m)$ by analyzing the series definition of $P_n(z)$. This involves a standard, but lengthy, calculation. The Poincaré series is expanded, and its Fourier coefficients are computed by integrating against $\\exp(-2\\pi i m x)$. This process yields two types of terms: a term $\\delta_{mn}$ from the identity element in the sum defining $P_n(z)$, and an infinite series arising from the other terms. The calculation involves isolating Kloosterman sums and evaluating a complex integral that gives rise to a Bessel function. The established result for the coefficient $c_n(m)$ is:\n$$ c_n(m) = \\delta_{mn} + 2\\pi i^{-k} \\sum_{c=1}^\\infty \\frac{S(m,n;c)}{c} \\left(\\frac{m}{n}\\right)^{(k-1)/2} J_{k-1}\\left(\\frac{4\\pi\\sqrt{mn}}{c}\\right) $$\n\n#### Part 3: Final Expression for $T_k(m,n)$\n\nSubstituting the expression for $c_n(m)$ into our formula for $T_k(m,n)$:\n$$ T_k(m,n) = \\frac{(4\\pi n)^{k-1}}{\\Gamma(k-1)} \\left[ \\delta_{mn} + 2\\pi i^{-k} \\sum_{c=1}^\\infty \\frac{S(m,n;c)}{c} \\left(\\frac{m}{n}\\right)^{(k-1)/2} J_{k-1}\\left(\\frac{4\\pi\\sqrt{mn}}{c}\\right) \\right] $$\nThis can be split into two parts. The first part is the diagonal term:\n$$ \\frac{(4\\pi n)^{k-1}}{\\Gamma(k-1)}\\delta_{mn} $$\nThe second part is the off-diagonal series. The pre-factor of the sum is:\n$$ \\frac{(4\\pi n)^{k-1}}{\\Gamma(k-1)} \\cdot 2\\pi i^{-k} \\cdot \\left(\\frac{m}{n}\\right)^{(k-1)/2} = \\frac{2\\pi i^{-k} (4\\pi)^{k-1} n^{k-1} m^{(k-1)/2}}{\\Gamma(k-1) n^{(k-1)/2}} = \\frac{2\\pi i^{-k} (4\\pi)^{k-1} (mn)^{(k-1)/2}}{\\Gamma(k-1)} $$\nThis simplifies to:\n$$ \\frac{2\\pi i^{-k}}{\\Gamma(k-1)} (4\\pi\\sqrt{mn})^{k-1} $$\nSince $k$ is an even integer, $i^{-k} = (i^2)^{-k/2} = (-1)^{-k/2} = (-1)^{k/2}$. Combining everything, we arrive at the final explicit formula:\n$$ T_k(m,n) = \\frac{(4\\pi n)^{k-1}}{\\Gamma(k-1)}\\delta_{mn} + \\frac{2\\pi (-1)^{k/2}}{\\Gamma(k-1)} (4\\pi\\sqrt{mn})^{k-1} \\sum_{c=1}^{\\infty} \\frac{S(m,n;c)}{c} J_{k-1}\\left(\\frac{4\\pi\\sqrt{mn}}{c}\\right) $$", "answer": "$$\n\\boxed{\\frac{(4\\pi n)^{k-1}}{\\Gamma(k-1)}\\delta_{m,n} + \\frac{2\\pi (-1)^{k/2}(4\\pi \\sqrt{mn})^{k-1}}{\\Gamma(k-1)} \\sum_{c=1}^{\\infty} \\frac{S(m,n;c)}{c} J_{k-1}\\left(\\frac{4\\pi\\sqrt{mn}}{c}\\right)}\n$$", "id": "3028743"}, {"introduction": "The identity you derived in the previous exercise is not just a theoretical marvel; it is a practical tool for computation and analysis. This final practice [@problem_id:3028732] moves from abstract derivation to numerical verification by asking you to implement the geometric side of the trace formula. By writing a program to compute the truncated Bessel-Kloosterman series, you will see how an arithmetic sum can approximate a spectral quantity, making the abstract connection between these two worlds tangible and testable.", "problem": "Let $\\Gamma = \\mathrm{SL}(2,\\mathbb{Z})$ and let $k$ be an even integer with $k \\geq 12$. For positive integers $m$ and $n$, define the Kloosterman sum\n$$\nS(m,n;c) = \\sum_{\\substack{d \\bmod c \\\\ \\gcd(d,c)=1}} \\exp\\!\\left(2\\pi i \\frac{m d + n d^{-1}}{c}\\right),\n$$\nwhere $c$ is a positive integer and $d^{-1}$ denotes the multiplicative inverse of $d$ modulo $c$. Let $J_{\\nu}(x)$ denote the Bessel function of the first kind of order $\\nu$. Consider the truncated Bessel–Kloosterman series\n$$\nT_k(m,n;C) = \\delta_{m,n} + 2\\pi \\sum_{c=1}^{C} \\frac{S(m,n;c)}{c} \\, J_{k-1}\\!\\left(\\frac{4\\pi \\sqrt{mn}}{c}\\right),\n$$\nwhere $\\delta_{m,n}$ is the Kronecker delta. Your task is to implement a program that:\n- Computes $S(m,n;c)$ exactly from its definition for given $m$, $n$, and $c$.\n- Evaluates $J_{k-1}(x)$ at the argument $x = \\frac{4\\pi \\sqrt{mn}}{c}$ for the specified $k$ and $c$.\n- Aggregates these to compute $T_k(m,n;C)$ for specified truncation parameter $C$.\n\nUse the following test suite, which specifies tuples $(k,m,n,C)$:\n- $(12,1,1,1)$,\n- $(12,1,1,50)$,\n- $(12,1,2,200)$,\n- $(16,1,1,200)$,\n- $(16,2,3,200)$,\n- $(24,1,1,200)$,\n- $(24,1,2,200)$,\n- $(12,3,2,200)$.\n\nFor each test case, produce the single floating-point value $T_k(m,n;C)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $\\left[\\text{result}_1,\\text{result}_2,\\dots,\\text{result}_8\\right]$). All computations are purely mathematical; there are no physical units or angle unit conversions required. Ensure numerical stability and correctness by computing $S(m,n;c)$ from the definition and using a robust evaluation for $J_{k-1}(x)$.", "solution": "The problem requires the computation of the truncated Bessel–Kloosterman series, denoted $T_k(m,n;C)$, for a given set of parameters $(k,m,n,C)$. The formula for this series is given by\n$$\nT_k(m,n;C) = \\delta_{m,n} + 2\\pi \\sum_{c=1}^{C} \\frac{S(m,n;c)}{c} \\, J_{k-1}\\!\\left(\\frac{4\\pi \\sqrt{mn}}{c}\\right)\n$$\nwhere $k$ is an even integer greater than or equal to $12$, $m$ and $n$ are positive integers, and $C$ is a positive integer defining the truncation point of the series. The problem is well-posed and scientifically grounded in the theory of modular forms, specifically concerning the Petersson trace formula. A valid solution requires the systematic computation of each component of this formula. The process can be decomposed into three main steps: the evaluation of the Kloosterman sum $S(m,n;c)$, the evaluation of the Bessel function $J_{k-1}(x)$, and the aggregation of these terms in the final summation.\n\n**Step 1: Computation of the Kloosterman Sum $S(m,n;c)$**\n\nThe Kloosterman sum is defined as:\n$$\nS(m,n;c) = \\sum_{\\substack{d \\bmod c \\\\ \\gcd(d,c)=1}} \\exp\\!\\left(2\\pi i \\frac{md + nd^{-1}}{c}\\right)\n$$\nThis is a finite sum over the group of multiplicative units of the ring of integers modulo $c$, denoted $(\\mathbb{Z}/c\\mathbb{Z})^\\times$. The term $d^{-1}$ represents the multiplicative inverse of $d$ modulo $c$, which is guaranteed to exist because the summation is restricted to integers $d$ that are coprime to $c$ (i.e., $\\gcd(d,c)=1$).\n\nThe computational algorithm for $S(m,n;c)$ is as follows:\n1.  For a given positive integer $c$, we first handle the base case. For $c=1$, the group of units is trivial, and by convention in this context, the sum consists of a single term that evaluates to $1$. Thus, $S(m,n;1) = 1$.\n2.  For $c > 1$, we iterate through all integers $d$ from $1$ to $c-1$.\n3.  For each $d$, we compute its greatest common divisor with $c$, $\\gcd(d,c)$. If $\\gcd(d,c) \\neq 1$, the term is excluded from the sum.\n4.  If $\\gcd(d,c) = 1$, we compute the modular multiplicative inverse $d^{-1} \\pmod c$. This can be efficiently computed using the Extended Euclidean Algorithm, or more conveniently, using built-in functions such as `pow(d, -1, c)` in Python.\n5.  We then calculate the argument of the exponential term, $x_{d} = \\frac{2\\pi}{c}(md + nd^{-1})$. The full term is $\\exp(i x_{d})$.\n6.  The sum of these complex exponential terms over all valid $d$ gives the value of $S(m,n;c)$.\n\nA key property of the Kloosterman sum is that it is always a real number. This can be proven by showing that $S(m,n;c)$ is equal to its complex conjugate, $\\overline{S(m,n;c)}$. This is achieved by a change of summation variable from $d$ to $-d$. Consequently, the sum of the imaginary parts (sines) over all terms is zero. We can exploit this property for a more efficient computation by summing only the real parts, $\\cos(x_{d})$, thereby avoiding complex number arithmetic entirely.\n\n**Step 2: Evaluation of the Bessel Function $J_{\\nu}(x)$**\n\nThe second component is the Bessel function of the first kind, $J_{\\nu}(x)$, which appears with order $\\nu = k-1$ and argument $x = \\frac{4\\pi \\sqrt{mn}}{c}$. For the given test cases, $k$ is an even integer ($12, 16, 24$), so the order $\\nu$ is an odd integer ($11, 15, 23$). The argument $x$ is a positive real number.\nThe evaluation of special functions like $J_{\\nu}(x)$ is a standard task in scientific computing. Instead of implementing this from scratch, which is a complex numerical analysis problem, we rely on a high-quality, robust implementation provided by a standard scientific library. The `scipy.special` module in the SciPy library offers the function `jv(\\nu, x)` for this purpose, which is suitable for the integer orders and real arguments required here.\n\n**Step 3: Aggregation into the Series $T_k(m,n;C)$**\n\nWith the methods for computing $S(m,n;c)$ and $J_{k-1}(x)$ established, we can compute the final series $T_k(m,n;C)$. The procedure is:\n1.  Evaluate the Kronecker delta term, $\\delta_{m,n}$. This is $1$ if $m=n$ and $0$ otherwise.\n2.  Initialize a variable, say `series_sum`, to $0.0$.\n3.  Loop through integers $c$ from $1$ to the specified truncation limit $C$.\n4.  In each iteration of the loop, compute $S(m,n;c)$ and $J_{k-1}\\!\\left(\\frac{4\\pi \\sqrt{mn}}{c}\\right)$ using the methods described in the previous steps.\n5.  Calculate the term for the current $c$, which is $\\frac{S(m,n;c)}{c} J_{k-1}\\!\\left(\\frac{4\\pi \\sqrt{mn}}{c}\\right)$, and add it to `series_sum`.\n6.  After the loop completes, the final result is obtained by multiplying the accumulated sum by $2\\pi$ and adding the Kronecker delta term: $T_k(m,n;C) = \\delta_{m,n} + 2\\pi \\cdot \\text{series\\_sum}$.\n\nSince $S(m,n;c)$ is real and $J_{k-1}(x)$ is real for a real argument $x$, the entire sum is real-valued. The computation for each test case $(k,m,n,C)$ in the provided suite will yield a single floating-point number. These results are then collected and formatted as a comma-separated list.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import jv\nimport math\n\ndef kloosterman_sum(m: int, n: int, c: int) -> float:\n    \"\"\"\n    Computes the Kloosterman sum S(m,n;c).\n    S(m,n;c) = sum_{d mod c, gcd(d,c)=1} exp(2*pi*i/c * (m*d + n*d_inv)).\n    The sum is known to be a real number.\n    \"\"\"\n    if c == 1:\n        # By convention in the theory of modular forms, S(m,n;1) = 1.\n        # The sum is over the trivial group (Z/1Z)*.\n        return 1.0\n\n    total_sum = 0.0\n    for d in range(1, c):\n        if math.gcd(d, c) == 1:\n            # Modular inverse d_inv exists since gcd(d,c)=1.\n            # pow(d, -1, c) is available in Python 3.8+ and is efficient.\n            d_inv = pow(d, -1, c)\n            \n            # The argument of the complex exponential.\n            arg = (2.0 * np.pi / c) * (m * d + n * d_inv)\n            \n            # The Kloosterman sum is real. We can prove S(m,n;c) = conj(S(m,n;c))\n            # by a change of variables d -> -d. Thus, we only need to sum the\n            # cosine components, as the sine components will cancel out.\n            total_sum += np.cos(arg)\n            \n    return total_sum\n\ndef compute_Tk(k: int, m: int, n: int, C: int) -> float:\n    \"\"\"\n    Computes the truncated Bessel-Kloosterman series T_k(m,n;C).\n    T_k(m,n;C) = delta_{m,n} + 2*pi * sum_{c=1 to C} (S(m,n;c)/c) * J_{k-1}(4*pi*sqrt(m*n)/c).\n    \"\"\"\n    # Kronecker delta term\n    delta_mn = 1.0 if m == n else 0.0\n    \n    series_sum = 0.0\n    \n    # Sum over c from 1 to C\n    for c in range(1, C + 1):\n        # Compute the Kloosterman sum S(m,n;c)\n        s_val = kloosterman_sum(m, n, c)\n        \n        # Argument for the Bessel function\n        bessel_arg = (4.0 * np.pi * np.sqrt(m * n)) / c\n        \n        # Order of the Bessel function\n        bessel_order = k - 1\n        \n        # Evaluate the Bessel function of the first kind J_nu(x)\n        bessel_val = jv(bessel_order, bessel_arg)\n        \n        # Add the term to the series sum\n        series_sum += (s_val / c) * bessel_val\n        \n    result = delta_mn + 2.0 * np.pi * series_sum\n    return result\n\ndef solve():\n    \"\"\"\n    Runs the computation for the specified test suite and prints the results.\n    \"\"\"\n    # Test suite specified as tuples of (k, m, n, C)\n    test_cases = [\n        (12, 1, 1, 1),\n        (12, 1, 1, 50),\n        (12, 1, 2, 200),\n        (16, 1, 1, 200),\n        (16, 2, 3, 200),\n        (24, 1, 1, 200),\n        (24, 1, 2, 200),\n        (12, 3, 2, 200),\n    ]\n\n    results = []\n    for k, m, n, C in test_cases:\n        res = compute_Tk(k, m, n, C)\n        results.append(res)\n\n    # Format the output as a single-line, comma-separated list in brackets.\n    print(f\"[{','.join(map(str, results))}]\")\n\n# Execute the solver\nsolve()\n```", "id": "3028732"}]}