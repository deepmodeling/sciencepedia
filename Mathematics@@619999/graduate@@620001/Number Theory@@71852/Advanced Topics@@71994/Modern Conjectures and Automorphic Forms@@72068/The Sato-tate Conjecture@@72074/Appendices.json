{"hands_on_practices": [{"introduction": "The foundation of the Sato-Tate conjecture lies in the behavior of the Frobenius traces, $a_p(E)$. This first practice problem takes you back to basics, guiding you through the direct computation of $a_p(E)$ for a specific elliptic curve over several small finite fields. By manually counting points, you will gain a tangible understanding of these important invariants and numerically verify the crucial Hasse bound, $|a_p(E)| \\le 2\\sqrt{p}$, which makes their statistical study possible [@problem_id:3029366].", "problem": "Let $E$ be the elliptic curve over $\\mathbb{Q}$ given by $E: y^2 = x^3 - x$. For a prime $p$ of good reduction (that is, $p \\nmid \\Delta(E)$), the Frobenius trace $a_p(E)$ is defined by the relation $a_p(E) := p + 1 - \\#E(\\mathbb{F}_p)$, where $\\#E(\\mathbb{F}_p)$ denotes the number of $\\mathbb{F}_p$-rational points on $E$. The Sato-Tate conjecture concerns the statistical distribution of the normalized quantities $\\frac{a_p(E)}{2\\sqrt{p}}$ as $p$ varies, and for any elliptic curve over $\\mathbb{Q}$ the Hasse bound $|a_p(E)| \\le 2\\sqrt{p}$ holds. The curve $E$ has Complex Multiplication (CM) by $\\mathbb{Z}[i]$, so its Sato-Tate behavior is non-generic, but the Hasse bound remains valid.\n\nStarting from the foundational definitions of elliptic curves over finite fields and the counting of points via quadratic residues, compute $a_p(E)$ for the primes $p \\in \\{3, 5, 7, 11, 13\\}$, all of which are good primes for $E$. Explicitly determine $\\#E(\\mathbb{F}_p)$ by counting solutions $(x,y) \\in \\mathbb{F}_p \\times \\mathbb{F}_p$ to $y^2 = x^3 - x$ together with the point at infinity, and then calculate $a_p(E) = p + 1 - \\#E(\\mathbb{F}_p)$. Verify numerically that for each of these primes the Hasse bound $|a_p(E)| \\le 2\\sqrt{p}$ holds.\n\nReport your computed values as a single row vector $\\bigl(a_3(E), a_5(E), a_7(E), a_{11}(E), a_{13}(E)\\bigr)$.", "solution": "The problem is to compute the Frobenius trace $a_p(E)$ for the elliptic curve $E: y^2 = x^3 - x$ for a set of primes $p \\in \\{3, 5, 7, 11, 13\\}$.\n\nFirst, we validate the problem statement. The curve is $E: y^2 = x^3 - x$. The discriminant is $\\Delta = -16(4A^3 + 27B^2)$, where $A=-1$ and $B=0$. Thus, $\\Delta = -16(4(-1)^3) = 64 = 2^6$. The primes of bad reduction are the prime divisors of $\\Delta$, which is only $p=2$. All primes in the given set $\\{3, 5, 7, 11, 13\\}$ are primes of good reduction. The problem statement is scientifically sound, self-contained, and well-posed. We may proceed with the solution.\n\nThe number of $\\mathbb{F}_p$-rational points on $E$, denoted by $\\#E(\\mathbb{F}_p)$, is the number of pairs $(x, y) \\in \\mathbb{F}_p \\times \\mathbb{F}_p$ satisfying the curve's equation, plus the point at infinity, $\\mathcal{O}$. For each $x \\in \\mathbb{F}_p$, we evaluate the quantity $f(x) = x^3 - x$. The number of solutions for $y$ to the equation $y^2 = f(x)$ depends on whether $f(x)$ is a quadratic residue modulo $p$, a quadratic non-residue, or zero.\n- If $f(x) = 0$, there is one solution for $y$, namely $y=0$.\n- If $f(x)$ is a non-zero quadratic residue modulo $p$, there are two solutions for $y$.\n- If $f(x)$ is a quadratic non-residue modulo $p$, there are no solutions for $y$.\n\nThe number of affine points is the sum of the number of solutions for $y$ over all possible values of $x \\in \\mathbb{F}_p$.\n$\\#E(\\mathbb{F}_p) = 1 + (\\text{number of affine points})$.\nThe Frobenius trace is then calculated as $a_p(E) = p + 1 - \\#E(\\mathbb{F}_p)$.\n\nWe now compute $a_p(E)$ for each specified prime.\n\n**Case 1: $p=3$**\nWe work in $\\mathbb{F}_3 = \\{0, 1, 2\\}$.\nThe values of $f(x) = x^3 - x$ are:\n- $x=0: f(0)=0^3 - 0 = 0$. This gives one solution for $y$, $y=0$. Point: $(0,0)$.\n- $x=1: f(1)=1^3 - 1 = 0$. This gives one solution for $y$, $y=0$. Point: $(1,0)$.\n- $x=2: f(2)=2^3 - 2 = 8-2 = 6 \\equiv 0 \\pmod 3$. This gives one solution for $y$, $y=0$. Point: $(2,0)$.\nThe number of affine points is $1+1+1=3$.\n$\\#E(\\mathbb{F}_3) = 1 + 3 = 4$.\n$a_3(E) = 3 + 1 - \\#E(\\mathbb{F}_3) = 4 - 4 = 0$.\nHasse bound verification: $|a_3(E)| \\le 2\\sqrt{3} \\implies 0 \\le 2\\sqrt{3} \\approx 3.46$. This is true.\n\n**Case 2: $p=5$**\nWe work in $\\mathbb{F}_5 = \\{0, 1, 2, 3, 4\\}$. The quadratic residues are $\\{1^2, 2^2\\} \\pmod 5 = \\{1, 4\\}$.\nThe values of $f(x) = x^3 - x$ are:\n- $x=0: f(0)=0$. One solution for $y$: $(0,0)$.\n- $x=1: f(1)=0$. One solution for $y$: $(1,0)$.\n- $x=2: f(2)=2^3 - 2 = 6 \\equiv 1 \\pmod 5$. Quadratic residue. Two solutions for $y$: $y=\\pm 1 \\equiv 1, 4$. Points: $(2,1), (2,4)$.\n- $x=3: f(3)=3^3 - 3 = 24 \\equiv 4 \\pmod 5$. Quadratic residue. Two solutions for $y$: $y=\\pm 2 \\equiv 2, 3$. Points: $(3,2), (3,3)$.\n- $x=4: f(4)=4^3 - 4 = 60 \\equiv 0 \\pmod 5$. One solution for $y$: $(4,0)$.\nThe number of affine points is $1+1+2+2+1=7$.\n$\\#E(\\mathbb{F}_5) = 1 + 7 = 8$.\n$a_5(E) = 5 + 1 - \\#E(\\mathbb{F}_5) = 6 - 8 = -2$.\nHasse bound verification: $|a_5(E)| \\le 2\\sqrt{5} \\implies |-2| \\le 2\\sqrt{5} \\implies 2 \\le 2(2.236...) \\approx 4.47$. This is true.\n\n**Case 3: $p=7$**\nWe work in $\\mathbb{F}_7 = \\{0, ..., 6\\}$. The quadratic residues are $\\{1^2, 2^2, 3^2\\} \\pmod 7 = \\{1, 4, 2\\}$.\nThe values of $f(x) = x^3 - x$ are:\n- $x=0: f(0)=0$. One solution for $y$.\n- $x=1: f(1)=0$. One solution for $y$.\n- $x=2: f(2)=2^3 - 2 = 6$. Quadratic non-residue. Zero solutions.\n- $x=3: f(3)=3^3 - 3 = 24 \\equiv 3 \\pmod 7$. Quadratic non-residue. Zero solutions.\n- $x=4: f(4)=4^3 - 4 = 60 \\equiv 4 \\pmod 7$. Quadratic residue. Two solutions for $y$.\n- $x=5: f(5)=5^3 - 5 = 120 \\equiv 1 \\pmod 7$. Quadratic residue. Two solutions for $y$.\n- $x=6: f(6)=6^3 - 6 = 210 \\equiv 0 \\pmod 7$. One solution for $y$.\nThe number of affine points is $1+1+0+0+2+2+1=7$.\n$\\#E(\\mathbb{F}_7) = 1 + 7 = 8$.\n$a_7(E) = 7 + 1 - \\#E(\\mathbb{F}_7) = 8 - 8 = 0$.\nHasse bound verification: $|a_7(E)| \\le 2\\sqrt{7} \\implies 0 \\le 2\\sqrt{7} \\approx 5.29$. This is true.\n\n**Case 4: $p=11$**\nWe work in $\\mathbb{F}_{11}$. The quadratic residues are $\\{1^2, 2^2, 3^2, 4^2, 5^2\\} \\pmod{11} = \\{1, 4, 9, 5, 3\\}$.\nThe values of $f(x) = x^3 - x$ are:\n- $x=0: f(0)=0$. One solution for $y$.\n- $x=1: f(1)=0$. One solution for $y$.\n- $x=2: f(2)=6$. Non-residue. Zero solutions.\n- $x=3: f(3)=24 \\equiv 2$. Non-residue. Zero solutions.\n- $x=4: f(4)=60 \\equiv 5$. Residue. Two solutions.\n- $x=5: f(5)=120 \\equiv 10$. Non-residue. Zero solutions.\n- $x=6: f(6)=210 \\equiv 1$. Residue. Two solutions.\n- $x=7: f(7)=336 \\equiv 6$. Non-residue. Zero solutions.\n- $x=8: f(8)=504 \\equiv 9$. Residue. Two solutions.\n- $x=9: f(9)=720 \\equiv 5$. Residue. Two solutions.\n- $x=10: f(10)=990 \\equiv 0$. One solution for $y$.\nThe number of affine points is $1+1+0+0+2+0+2+0+2+2+1=11$.\n$\\#E(\\mathbb{F}_{11}) = 1 + 11 = 12$.\n$a_{11}(E) = 11 + 1 - \\#E(\\mathbb{F}_{11}) = 12 - 12 = 0$.\nHasse bound verification: $|a_{11}(E)| \\le 2\\sqrt{11} \\implies 0 \\le 2\\sqrt{11} \\approx 6.63$. This is true.\n\n**Case 5: $p=13$**\nWe work in $\\mathbb{F}_{13}$. The quadratic residues are $\\{1^2,...,6^2\\} \\pmod{13} = \\{1, 4, 9, 3, 12, 10\\}$.\nThe values of $f(x) = x^3 - x$ are:\n- $x=0: f(0)=0$. One solution.\n- $x=1: f(1)=0$. One solution.\n- $x=2: f(2)=6$. Non-residue. Zero solutions.\n- $x=3: f(3)=24 \\equiv 11$. Non-residue. Zero solutions.\n- $x=4: f(4)=60 \\equiv 8$. Non-residue. Zero solutions.\n- $x=5: f(5)=120 \\equiv 3$. Residue. Two solutions.\n- $x=6: f(6)=210 \\equiv 2$. Non-residue. Zero solutions.\n- $x=7: f(7)=336 \\equiv 11$. Non-residue. Zero solutions.\n- $x=8: f(8)=504 \\equiv 10$. Residue. Two solutions.\n- $x=9: f(9)=720 \\equiv 5$. Non-residue. Zero solutions.\n- $x=10: f(10)=990 \\equiv 2$. Non-residue. Zero solutions.\n- $x=11: f(11)=1320 \\equiv 11$. Non-residue. Zero solutions.\n- $x=12: f(12)=(-1)^3 - (-1)=0$. One solution.\nThe number of affine points is $1+1+0+0+0+2+0+0+2+0+0+0+1=7$.\n$\\#E(\\mathbb{F}_{13}) = 1 + 7 = 8$.\n$a_{13}(E) = 13 + 1 - \\#E(\\mathbb{F}_{13}) = 14 - 8 = 6$.\nHasse bound verification: $|a_{13}(E)| \\le 2\\sqrt{13} \\implies |6| \\le 2\\sqrt{13} \\implies 6 \\le 2(3.605...) \\approx 7.21$. This is true.\n\nThe computed values are:\n$a_3(E) = 0$\n$a_5(E) = -2$\n$a_7(E) = 0$\n$a_{11}(E) = 0$\n$a_{13}(E) = 6$\n\nThe final result is the row vector $(a_3(E), a_5(E), a_7(E), a_{11}(E), a_{13}(E))$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0 & -2 & 0 & 0 & 6\n\\end{pmatrix}\n}\n$$", "id": "3029366"}, {"introduction": "The Sato-Tate conjecture famously describes the distribution of Frobenius traces for non-CM elliptic curves. This exercise explores the fascinating and distinct behavior of curves with complex multiplication (CM), where the statistics are governed by the arithmetic of the CM field itself. You will connect the arithmetic condition $a_p = 0$ to the algebraic concept of supersingular reduction and, using Deuring's criterion and the Chebotarev density theorem, calculate the precise density of such primes, revealing a striking contrast to the generic case [@problem_id:3029344].", "problem": "Let $E/\\mathbf{Q}$ be an elliptic curve with Complex Multiplication (CM) by the full ring of integers $\\mathcal{O}_{K}$ of an imaginary quadratic field $K$. Denote by $N$ the conductor of $E$, and for each rational prime $p \\nmid N$, write $a_{p} := p + 1 - |E(\\mathbf{F}_{p})|$, which is the trace of the Frobenius endomorphism acting on the first \\'etale cohomology group $H^{1}_{\\mathrm{\\'et}}(E_{\\overline{\\mathbf{Q}}}, \\mathbf{Q}_{\\ell})$ for any prime $\\ell \\neq p$. Consider the natural density\n$$\nd := \\lim_{x \\to \\infty} \\frac{\\#\\{\\, p \\leq x \\text{ prime} : p \\nmid N \\text{ and } a_{p} = 0 \\,\\}}{\\#\\{\\, p \\leq x \\text{ prime} \\,\\}}.\n$$\nStarting from foundational facts about CM elliptic curves, Hecke (Gr\\\"ossen-)characters of $K$, and the Chebotarev density theorem for the extension $K/\\mathbf{Q}$, determine the exact value of $d$ by relating the condition $a_{p} = 0$ to the splitting behavior of $p$ in $K/\\mathbf{Q}$ and then computing the density via Chebotarev. Express your final answer as a single rational number in simplest form. No rounding is required, and no units are to be reported.", "solution": "The problem asks for the natural density, denoted by $d$, of rational primes $p$ for which the trace of Frobenius $a_p$ of an elliptic curve $E/\\mathbf{Q}$ with Complex Multiplication (CM) by the full ring of integers $\\mathcal{O}_K$ of an imaginary quadratic field $K$ is zero. The set of primes is restricted to those of good reduction for $E$, i.e., $p \\nmid N$, where $N$ is the conductor of $E$.\n\nThe trace of Frobenius, $a_p$, is defined as $a_p = p + 1 - \\#E(\\mathbf{F}_p)$, where $E(\\mathbf{F}_p)$ is the group of points on the reduction of $E$ modulo $p$. A fundamental result in the theory of complex multiplication, due to Max Deuring, connects the value of $a_p$ to the arithmetic of the CM field $K$.\n\nFor a prime $p$ where $E$ has good reduction, the condition $a_p = 0$ is equivalent to the statement that the reduced curve $E_p := E \\pmod{p}$ over the finite field $\\mathbf{F}_p$ is supersingular.\n\nDeuring's criterion for supersingularity states that for an elliptic curve with CM by an order in an imaginary quadratic field $K$, its reduction $E_p$ at a prime $p$ of good reduction is supersingular if and only if the prime $p$ does not split in the field $K$.\n\nThe primes $p$ under consideration do not divide the conductor $N$. A standard result in the theory of CM elliptic curves is that any prime factor of the discriminant of the field $K$ must be a factor of the conductor $N$. Consequently, if $p \\nmid N$, then $p$ is unramified in the extension $K/\\mathbf{Q}$.\n\nFor an unramified prime $p$ in a quadratic extension $K/\\mathbf{Q}$, there are two possibilities for its behavior: either $p$ splits into two distinct prime ideals in $\\mathcal{O}_K$, or $p$ remains prime (it is inert). The condition that $p$ does not split, for an unramified prime, is therefore equivalent to the condition that $p$ is inert in $K$.\n\nCombining these facts, the condition $a_p = 0$ for a prime $p \\nmid N$ is equivalent to the condition that $p$ is an inert prime in the quadratic extension $K/\\mathbf{Q}$. The problem is thus reduced to computing the density of primes that are inert in $K$.\n\nThis density can be determined using the Chebotarev density theorem. The extension $K/\\mathbf{Q}$ is a Galois extension since it is a quadratic extension. Its degree is $[K:\\mathbf{Q}] = 2$. The associated Galois group $G := \\text{Gal}(K/\\mathbf{Q})$ is a group of order $2$, containing the identity element $e$ and a non-trivial element $\\sigma$, which corresponds to complex conjugation.\n\nThe Chebotarev density theorem states that for a Galois extension of number fields $L/F$ with Galois group $G$, the set of unramified primes $\\mathfrak{p}$ of $F$ whose Frobenius conjugacy class in $G$ is a given class $C$ has a natural density equal to $|C|/|G|$.\n\nIn our case, $F = \\mathbf{Q}$ and $L = K$. The group $G$ is abelian, so every conjugacy class consists of a single element. The group $G$ has two such classes: $\\{e\\}$ and $\\{\\sigma\\}$.\nThe splitting behavior of an unramified rational prime $p$ in $K$ is determined by its Frobenius element, $\\text{Frob}_p \\in G$:\n- A prime $p$ splits in $K$ if and only if its Frobenius element is the identity: $\\text{Frob}_p = e$.\n- A prime $p$ is inert in $K$ if and only if its Frobenius element is the non-trivial element: $\\text{Frob}_p = \\sigma$.\n\nAccording to the Chebotarev density theorem, the density of inert primes is the density of primes $p$ for which $\\text{Frob}_p = \\sigma$. This density is given by:\n$$\n\\text{density of inert primes} = \\frac{|\\{\\sigma\\}|}{|G|} = \\frac{1}{2}\n$$\nSimilarly, the density of split primes is $\\frac{|\\{e\\}|}{|G|} = \\frac{1}{2}$. The ramified primes form a finite set and thus have density $0$.\n\nThe problem states that $E$ is defined over $\\mathbf{Q}$ and has CM by the full ring of integers $\\mathcal{O}_K$. This implies that the Hilbert class field of $K$ is contained in $\\mathbf{Q}(j(E))$, which is $\\mathbf{Q}$. This is only possible if the class number $h_K$ of $K$ is $1$. The imaginary quadratic fields with class number $1$ are $K = \\mathbf{Q}(\\sqrt{-m})$ for $m \\in \\{1, 2, 3, 7, 11, 19, 43, 67, 163\\}$. However, the calculation of the density of inert primes depends only on the degree of the extension $K/\\mathbf{Q}$, which is $2$ for any imaginary quadratic field. The specific choice of $K$ (from the allowed list) does not alter the result.\n\nThe density $d$ is the density of primes $p$ (excluding a finite set dividing $N$) for which $a_p=0$. This is equivalent to the density of primes that are inert in $K$. Therefore, the value of $d$ is $1/2$.", "answer": "$$\\boxed{\\frac{1}{2}}$$", "id": "3029344"}, {"introduction": "Theory comes to life through experimental verification, a cornerstone of modern number theory. This advanced computational practice guides you through numerically testing the Sato-Tate conjecture by generating a large sample of Frobenius angles and applying rigorous statistical tests [@problem_id:3029347]. By investigating different data binning strategies and using goodness-of-fit statistics like the Kolmogorov-Smirnov test, you will gain a practical understanding of the nuances involved in observing a deep statistical law in finite data.", "problem": "You will implement a complete, runnable program that numerically tests the empirical distribution of angles associated with normalized Frobenius traces of an elliptic curve against the theoretical Sato–Tate distribution. Your implementation must be based on the following foundational definitions and well-tested facts:\n\n1. An elliptic curve over a finite field is given in short Weierstrass form by the affine equation $y^2 = x^3 + a x + b$ with integer coefficients $a$ and $b$, such that the discriminant $\\Delta = -16 (4 a^3 + 27 b^2)$ is nonzero. For a prime $p \\ge 5$ of good reduction (that is, $p \\nmid \\Delta$), the number of $\\mathbb{F}_p$-points on $E$ satisfies the Hasse bound, and the Frobenius trace $a_p$ is defined by $a_p = p + 1 - \\# E(\\mathbb{F}_p)$.\n\n2. For non-complex multiplication (non-CM) elliptic curves, the Sato–Tate conjecture (now theorem for many cases) describes the asymptotic equidistribution of the angles $\\theta_p \\in [0,\\pi]$ defined by normalizing $a_p$ via $\\frac{a_p}{2 \\sqrt{p}} = \\cos(\\theta_p)$, where the angles are distributed with density $f(\\theta) = \\frac{2}{\\pi} \\sin^2(\\theta)$ on the interval $[0,\\pi]$. The corresponding cumulative distribution function (CDF) is\n$$\nF(\\theta) = \\int_0^\\theta \\frac{2}{\\pi} \\sin^2(t) \\, dt = \\frac{\\theta}{\\pi} - \\frac{\\sin(2\\theta)}{2\\pi}.\n$$\n\n3. For $p \\ge 5$, the number of points on $E(\\mathbb{F}_p)$ can be computed efficiently by the identity\n$$\n\\#E(\\mathbb{F}_p) = 1 + \\sum_{x \\in \\mathbb{F}_p} \\left(1 + \\chi\\big(x^3 + a x + b\\big)\\right),\n$$\nwhere $\\chi$ is the Legendre symbol extended by $\\chi(0) = 0$, and $\\chi(u)$ equals $1$ if $u$ is a quadratic residue modulo $p$, equals $-1$ if $u$ is a non-residue, and equals $0$ if $u \\equiv 0 \\pmod{p}$. This counts the number of $y$ satisfying $y^2 = x^3 + a x + b$ for each $x \\in \\mathbb{F}_p$, plus the point at infinity.\n\nYour program must:\n- Generate primes in a given range $[P_{\\min}, P_{\\max}]$, exclude primes dividing the discriminant $\\Delta$, and for the remaining primes compute $a_p$, then $\\theta_p$ in radians via $\\theta_p = \\arccos\\!\\left(\\frac{a_p}{2\\sqrt{p}}\\right)$.\n- Implement two binning strategies for the interval $[0,\\pi]$:\n  1. Uniform-angle binning: $B$ equal-width bins with edges $\\left\\{0, \\frac{\\pi}{B}, \\frac{2\\pi}{B}, \\ldots, \\pi\\right\\}$.\n  2. Sato–Tate equal-mass binning: $B$ bins with edges defined by the quantiles of $F(\\theta)$, i.e., edges $\\{\\theta_k\\}_{k=0}^B$ with $F(\\theta_k) = k/B$. These edges must be computed numerically by monotone root finding on $[0,\\pi]$ for each $k$ using a deterministic method such as bisection. \n- Compute, for each sample realization of $\\{\\theta_p\\}$:\n  1. The Kolmogorov–Smirnov (KS) statistic defined as the supremum of the absolute difference between the empirical cumulative distribution function (CDF) and the theoretical Sato–Tate CDF $F(\\theta)$. Concretely, if $\\theta_{(1)} \\le \\theta_{(2)} \\le \\cdots \\le \\theta_{(n)}$ are the sorted angles, define the empirical CDF $\\widehat{F}_n$ by $\\widehat{F}_n(\\theta_{(j)}) = j/n$ for $j=1,\\ldots,n$, and compute\n  $$\n  D_n = \\max\\Bigg\\{\\max_{1 \\leq j \\leq n}\\left(\\frac{j}{n} - F(\\theta_{(j)})\\right), \\; \\max_{1 \\leq j \\leq n}\\left(F(\\theta_{(j)}) - \\frac{j-1}{n}\\right)\\Bigg\\}.\n  $$\n  2. The Pearson chi-square statistic comparing bin counts to expected counts under the Sato–Tate law. If observed counts are $O_i$ and expected counts are $E_i = n \\cdot p_i$, where $p_i$ is the exact Sato–Tate mass of bin $i$ computed by $p_i = F(\\text{right edge}) - F(\\text{left edge})$, then\n  $$\n  \\chi^2 = \\sum_{i=1}^B \\frac{(O_i - E_i)^2}{E_i}.\n  $$\n  3. The maximum standardized residual across bins defined by\n  $$\n  R_{\\max} = \\max_{1 \\leq i \\leq B} \\frac{|O_i - E_i|}{\\sqrt{E_i}}.\n  $$\n\nAll angles must be computed and reported in radians. No physical units are involved. Percentages must not be used; all probabilities must be represented as decimals (floats).\n\nYou must design your program to produce a single line of output containing the list of results for a fixed test suite. For each test case, the program must output the list $[D_n, \\chi^2, R_{\\max}]$ as floats. Aggregate these per-test-case lists into a single list in the final output.\n\nTest Suite:\n- Test Case 1 (happy path, non-CM curve, uniform binning): $a = 0$, $b = -2$ (curve $y^2 = x^3 - 2$), $P_{\\min} = 5$, $P_{\\max} = 1500$, $B = 20$, binning strategy = uniform-angle.\n- Test Case 2 (small sample boundary, non-CM curve, uniform binning): $a = 0$, $b = -2$, $P_{\\min} = 5$, $P_{\\max} = 100$, $B = 10$, binning strategy = uniform-angle.\n- Test Case 3 (equal-mass binning coverage, non-CM curve): $a = 0$, $b = -2$, $P_{\\min} = 5$, $P_{\\max} = 1500$, $B = 20$, binning strategy = Sato–Tate equal-mass.\n- Test Case 4 (edge case illustrating failure under CM, uniform binning): $a = -1$, $b = 0$ (curve $y^2 = x^3 - x$, which has complex multiplication), $P_{\\min} = 5$, $P_{\\max} = 1500$, $B = 20$, binning strategy = uniform-angle.\n\nFinal Output Format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each test case corresponds to a sub-list of three floats $[D_n, \\chi^2, R_{\\max}]$, so the final output must look like:\n\"[[d1,chi1,r1],[d2,chi2,r2],[d3,chi3,r3],[d4,chi4,r4]]\"\nwhere $d_i$, $chi_i$, and $r_i$ are floats for test case $i$ computed exactly as specified above.", "solution": "The provided problem requires the implementation of a numerical procedure to test the Sato–Tate conjecture for elliptic curves. The solution involves generating a sample of Sato–Tate angles, $\\{\\theta_p\\}$, from an elliptic curve over various finite fields $\\mathbb{F}_p$, and then applying goodness-of-fit statistical tests to compare the empirical distribution of these angles against the theoretical Sato–Tate distribution. The implementation will be divided into modular components, each corresponding to a specific mathematical principle.\n\n### Principle 1: Generation of Sato–Tate Angles\n\nThe first step is to generate the data sample. For a given elliptic curve $E$ defined by the Weierstrass equation $y^2 = x^3 + ax + b$ with integer coefficients $a$ and $b$, we compute the Sato–Tate angles $\\theta_p$ for a set of primes $p$.\n\n**1.1. Elliptic Curve and Primes of Good Reduction**\nThe curve is defined by $E: y^2 = x^3 + ax + b$. For this to be a valid elliptic curve, its discriminant, $\\Delta = -16(4a^3 + 27b^2)$, must be non-zero. The Sato–Tate conjecture applies to primes $p$ of good reduction, which are primes that do not divide the discriminant $\\Delta$. The problem specifies considering primes $p \\ge 5$. We begin by generating a list of all prime numbers within the given range $[P_{\\min}, P_{\\max}]$ using a sieve of Eratosthenes. From this list, we exclude any prime $p$ such that $p | \\Delta$.\n\n**1.2. Point Counting and the Frobenius Trace**\nFor each prime $p$ of good reduction, we must compute the number of points on the curve over the finite field $\\mathbb{F}_p$, denoted $\\#E(\\mathbb{F}_p)$. This is accomplished using the formula involving the Legendre symbol:\n$$\n\\#E(\\mathbb{F}_p) = 1 + \\sum_{x \\in \\mathbb{F}_p} \\left(1 + \\chi_p(x^3 + ax + b)\\right)\n$$\nHere, the sum is over all elements $x$ in $\\mathbb{F}_p = \\{0, 1, \\ldots, p-1\\}$. The $1$ outside the sum accounts for the point at infinity. The Legendre symbol $\\chi_p(u)$ determines if $u$ is a quadratic residue modulo $p$. It is computed as:\n$$\n\\chi_p(u) =\n\\begin{cases}\n1 & \\text{if } u \\text{ is a non-zero quadratic residue mod } p \\\\\n-1 & \\text{if } u \\text{ is a quadratic non-residue mod } p \\\\\n0 & \\text{if } u \\equiv 0 \\pmod p\n\\end{cases}\n$$\ncomputationally, this is efficiently found via Euler's criterion: $\\chi_p(u) \\equiv u^{(p-1)/2} \\pmod p$. The result modulo $p$ will be $1$, $p-1$ (which is equivalent to $-1$), or $0$.\n\nOnce $\\#E(\\mathbb{F}_p)$ is known, the Frobenius trace $a_p$ is defined as:\n$$\na_p = p + 1 - \\#E(\\mathbb{F}_p)\n$$\n\n**1.3. Normalization and Angle Calculation**\nThe Hasse bound guarantees that $|a_p| \\le 2\\sqrt{p}$. This allows for the normalization of the trace to define an angle $\\theta_p \\in [0, \\pi]$:\n$$\n\\cos(\\theta_p) = \\frac{a_p}{2\\sqrt{p}} \\implies \\theta_p = \\arccos\\left(\\frac{a_p}{2\\sqrt{p}}\\right)\n$$\nThe collection of these angles $\\{\\theta_p\\}$ for all valid primes $p$ in the range constitutes our statistical sample.\n\n### Principle 2: Goodness-of-Fit Statistics\n\nThe second step is to compare the empirical distribution of the collected angles $\\{\\theta_p\\}$ with the theoretical Sato–Tate distribution. For a non-Complex Multiplication (non-CM) elliptic curve, the angles are conjectured to be distributed according to the probability density function $f(\\theta) = \\frac{2}{\\pi}\\sin^2(\\theta)$. The corresponding cumulative distribution function (CDF) is:\n$$\nF(\\theta) = \\int_0^\\theta \\frac{2}{\\pi}\\sin^2(t)\\,dt = \\frac{\\theta}{\\pi} - \\frac{\\sin(2\\theta)}{2\\pi}\n$$\nWe use this theoretical CDF to compute three statistics. Let $n$ be the total number of angles in our sample.\n\n**2.1. Kolmogorov–Smirnov (KS) Statistic ($D_n$)**\nThe KS test is a non-parametric test that compares a sample with a reference probability distribution. It quantifies the distance between the empirical CDF of the sample and the theoretical CDF. First, the $n$ angles are sorted: $\\theta_{(1)} \\le \\theta_{(2)} \\le \\cdots \\le \\theta_{(n)}$. The empirical CDF, $\\widehat{F}_n(\\theta)$, is a step function that increases by $1/n$ at each data point. The KS statistic $D_n$ is the maximum difference between $\\widehat{F}_n$ and $F$:\n$$\nD_n = \\max\\Bigg\\{\\max_{1 \\leq j \\leq n}\\left(\\frac{j}{n} - F(\\theta_{(j)})\\right), \\; \\max_{1 \\leq j \\leq n}\\left(F(\\theta_{(j)}) - \\frac{j-1}{n}\\right)\\Bigg\\}\n$$\nThis value captures the largest vertical deviation between the two CDFs. A smaller $D_n$ indicates a better fit.\n\n**2.2. Chi-Square ($\\chi^2$) Statistic and Maximum Standardized Residual ($R_{\\max}$)**\nThese statistics are based on binning the data. The interval $[0, \\pi]$ is partitioned into $B$ bins.\n- **Binning Strategies:** Two methods are required:\n    1.  **Uniform-angle binning:** The interval $[0, \\pi]$ is divided into $B$ bins of equal width $\\pi/B$. The edges are $\\{0, \\pi/B, 2\\pi/B, \\ldots, \\pi\\}$.\n    2.  **Sato–Tate equal-mass binning:** The bins are chosen such that each contains an equal amount of theoretical probability mass, i.e., $1/B$. The bin edges $\\{\\theta_k\\}_{k=0}^B$ are determined by solving the equation $F(\\theta_k) = k/B$ for $k \\in \\{0, 1, \\ldots, B\\}$. This is a root-finding problem. Since $F(\\theta)$ is strictly increasing on $[0, \\pi]$, a robust method like the bisection algorithm is suitable. We seek the root of $g_k(\\theta) = F(\\theta) - k/B = 0$ for each $k$.\n\n- **Calculating Statistics:**\n    Once the bin edges are determined, we count the number of observed angles, $O_i$, that fall into each bin $i$. The expected number of angles, $E_i$, for bin $i$ (with left edge $\\theta_{L,i}$ and right edge $\\theta_{R,i}$) is given by:\n    $$\n    E_i = n \\cdot p_i = n \\cdot \\left(F(\\theta_{R,i}) - F(\\theta_{L,i})\\right)\n    $$\n    The Pearson chi-square statistic is then calculated as the sum of squared, normalized differences between observed and expected counts:\n    $$\n    \\chi^2 = \\sum_{i=1}^B \\frac{(O_i - E_i)^2}{E_i}\n    $$\n    The maximum standardized residual, $R_{\\max}$, identifies the bin with the largest deviation from expectation, scaled by the expected standard deviation:\n    $$\n    R_{\\max} = \\max_{1 \\leq i \\leq B} \\frac{|O_i - E_i|}{\\sqrt{E_i}}\n    $$\n    Smaller values of $\\chi^2$ and $R_{\\max}$ suggest a better fit to the theoretical distribution.\n\n### Algorithmic Implementation\n\nThe solution is implemented as a Python program. A primary function processes each test case by sequentially executing the steps outlined above.\n1.  Input parameters for a test case ($a, b, P_{\\min}, P_{\\max}, B$, binning strategy) are passed to a core computational function.\n2.  A helper function generates primes up to $P_{\\max}$ using a sieve.\n3.  A loop over the primes filters for those of good reduction. For each such prime $p$, it calls a point-counting function.\n4.  The point-counting function iterates $x$ from $0$ to $p-1$, calculates $u = x^3+ax+b \\pmod p$, and computes the Legendre symbol $\\chi_p(u)$ using `pow(u, (p-1)//2, p)`. It sums the contributions to find $\\#E(\\mathbb{F}_p)$.\n5.  This is used to compute $a_p$ and then $\\theta_p = \\arccos(a_p/(2\\sqrt{p}))$. All valid angles are collected.\n6.  The sorted list of angles is used to calculate the KS statistic $D_n$.\n7.  Bin edges are generated based on the specified strategy. For equal-mass binning, a bisection root-finder is implemented to solve for the quantiles of the Sato-Tate CDF.\n8.  With the bins defined, `numpy.histogram` calculates observed counts $O_i$. Expected counts $E_i$ are calculated from the Sato-Tate CDF.\n9.  The $\\chi^2$ and $R_{\\max}$ statistics are computed from $O_i$ and $E_i$.\n10. The three statistics $[D_n, \\chi^2, R_{\\max}]$ are returned. The main function collects these results from all test cases and formats them into the required single-line string output.\n\nThe fourth test case, using a CM curve ($y^2 = x^3 - x$), serves as a crucial control. Its angle distribution is known to be different from the generic Sato–Tate law. The implementation is expected to produce large statistical values for this case, correctly indicating a poor fit and thereby validating the entire methodology.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite for the Sato-Tate conjecture.\n    \"\"\"\n\n    def generate_primes(min_val, max_val):\n        \"\"\"Generates primes in [min_val, max_val] using a sieve.\"\"\"\n        sieve = np.ones(max_val + 1, dtype=bool)\n        sieve[0:2] = False\n        for i in range(2, int(np.sqrt(max_val)) + 1):\n            if sieve[i]:\n                sieve[i*i::i] = False\n        return [p for p in range(min_val, max_val + 1) if sieve[p]]\n\n    def legendre_symbol(n, p):\n        \"\"\"Computes the Legendre symbol (n/p).\"\"\"\n        ls = pow(n, (p - 1) // 2, p)\n        if ls == p - 1:\n            return -1\n        return ls\n\n    def count_points(a, b, p):\n        \"\"\"Counts the number of F_p-points on y^2 = x^3 + ax + b.\"\"\"\n        count = 1  # For the point at infinity\n        for x in range(p):\n            y_squared = (pow(x, 3, p) + a * x + b) % p\n            count += (1 + legendre_symbol(y_squared, p))\n        return count\n\n    def sato_tate_cdf(theta):\n        \"\"\"Computes the Sato-Tate CDF F(theta).\"\"\"\n        return theta / np.pi - np.sin(2 * theta) / (2 * np.pi)\n\n    def bisection_solve(func, x_min, x_max, tol=1e-12, max_iter=100):\n        \"\"\"Finds a root of func(x)=0 in [x_min, x_max] via bisection.\"\"\"\n        f_min = func(x_min)\n        for _ in range(max_iter):\n            x_mid = (x_min + x_max) / 2\n            if (x_max - x_min) / 2 < tol:\n                return x_mid\n            f_mid = func(x_mid)\n            if np.sign(f_mid) == np.sign(f_min):\n                x_min = x_mid\n                f_min = f_mid\n            else:\n                x_max = x_mid\n        return (x_min + x_max) / 2\n\n    def compute_statistics(a, b, p_min, p_max, B, binning_strategy):\n        \"\"\"\n        Computes the KS, Chi-Square, and max residual statistics.\n        \"\"\"\n        delta = -16 * (4 * a**3 + 27 * b**2)\n        if delta == 0:\n            return [np.nan, np.nan, np.nan]\n\n        primes = generate_primes(p_min, p_max)\n        if not primes:\n            return [0.0, 0.0, 0.0]\n\n        angles = []\n        for p in primes:\n            if p < 5 or delta % p == 0:\n                continue\n            \n            num_points = count_points(a, b, p)\n            ap = p + 1 - num_points\n            ratio = ap / (2 * np.sqrt(p))\n            \n            # Clamp ratio to [-1, 1] to handle potential float precision errors\n            ratio = np.clip(ratio, -1.0, 1.0)\n            \n            theta_p = np.arccos(ratio)\n            angles.append(theta_p)\n\n        n = len(angles)\n        if n == 0:\n            return [0.0, 0.0, 0.0]\n        \n        angles = np.array(angles)\n\n        # 1. Kolmogorov-Smirnov (KS) statistic D_n\n        sorted_angles = np.sort(angles)\n        F_values = sato_tate_cdf(sorted_angles)\n        j_values = np.arange(1, n + 1)\n        \n        term1 = np.max(j_values / n - F_values)\n        term2 = np.max(F_values - (j_values - 1) / n)\n        D_n = np.max([term1, term2])\n\n        # 2. Chi-square and Max Residual\n        # Generate bin edges\n        if binning_strategy == 'uniform-angle':\n            bin_edges = np.linspace(0, np.pi, B + 1)\n        elif binning_strategy == 'Sato–Tate equal-mass':\n            bin_edges = [0.0]\n            for k in range(1, B):\n                target_prob = k / B\n                func_to_solve = lambda theta: sato_tate_cdf(theta) - target_prob\n                edge = bisection_solve(func_to_solve, 0, np.pi)\n                bin_edges.append(edge)\n            bin_edges.append(np.pi)\n            bin_edges = np.array(bin_edges)\n        else:\n            raise ValueError(\"Unknown binning strategy\")\n\n        # Observed counts O_i\n        O_i, _ = np.histogram(angles, bins=bin_edges)\n        \n        # Expected counts E_i\n        bin_probabilities = sato_tate_cdf(bin_edges[1:]) - sato_tate_cdf(bin_edges[:-1])\n        E_i = n * bin_probabilities\n\n        # Filter out bins where E_i is zero to avoid division by zero\n        valid_bins = E_i > 1e-9 # Use a small tolerance for floating point\n        O_i_valid = O_i[valid_bins]\n        E_i_valid = E_i[valid_bins]\n        \n        if len(E_i_valid) == 0:\n            chi2_stat = 0.0\n            R_max = 0.0\n        else:\n            standardized_residuals = (O_i_valid - E_i_valid) / np.sqrt(E_i_valid)\n            chi2_stat = np.sum(standardized_residuals**2)\n            R_max = np.max(np.abs(standardized_residuals))\n\n        return [D_n, chi2_stat, R_max]\n\n    # Test suite from the problem statement\n    test_cases = [\n        {'a': 0, 'b': -2, 'p_min': 5, 'p_max': 1500, 'B': 20, 'binning_strategy': 'uniform-angle'},\n        {'a': 0, 'b': -2, 'p_min': 5, 'p_max': 100, 'B': 10, 'binning_strategy': 'uniform-angle'},\n        {'a': 0, 'b': -2, 'p_min': 5, 'p_max': 1500, 'B': 20, 'binning_strategy': 'Sato–Tate equal-mass'},\n        {'a': -1, 'b': 0, 'p_min': 5, 'p_max': 1500, 'B': 20, 'binning_strategy': 'uniform-angle'}\n    ]\n\n    all_results = []\n    for case in test_cases:\n        stats = compute_statistics(**case)\n        # Format results for consistent string representation\n        all_results.append(f\"[{stats[0]},{stats[1]},{stats[2]}]\")\n\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "3029347"}]}