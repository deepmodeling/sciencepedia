{"hands_on_practices": [{"introduction": "The Hasse-Weil $L$-function, $L(E, s)$, is the central analytic object in the Birch and Swinnerton-Dyer conjecture. Its definition relies on a sequence of integers $a_p$, known as the Frobenius traces, which encode the arithmetic of the curve over finite fields. This first practice challenges you to compute these coefficients from first principles by counting points on an elliptic curve modulo various primes, providing a concrete understanding of how the $L$-function is constructed. [@problem_id:3024995]", "problem": "Let $E/\\mathbf{Q}$ be the elliptic curve given by the generalized Weierstrass equation $y^2 + y = x^3 - x$. This curve has discriminant $\\Delta = 37$ and hence has good reduction at every prime $p \\neq 37$. For a prime $p \\neq 37$, let $N_p = \\#E(\\mathbf{F}_p)$ denote the number of $\\mathbf{F}_p$-rational points on the reduction of $E$ mod $p$ (including the point at infinity), and define the Frobenius trace $a_p = p + 1 - N_p$. The coefficients $a_p$ enter the Euler product of the Hasse–Weil $L$-function that appears in the Birch and Swinnerton–Dyer (BSD) conjecture, and by modularity they agree with the $p$-th Fourier coefficients of the weight-$2$ newform attached to $E$.\n\nUsing only first principles (finite field point counting), compute $a_2$, $a_3$, and $a_5$ via\n$$\na_p \\;=\\; p + 1 \\;-\\; \\#E(\\mathbf{F}_p).\n$$\nThen, using the conceptual content of the modularity theorem and the Eichler–Shimura relation, explain why these values are expected to match the corresponding Fourier coefficients of the unique normalized cuspidal eigenform of weight $2$ and level $37$ attached to $E$.\n\nFinally, compute the single integer\n$$\nS \\;=\\; a_2 + a_3 + a_5.\n$$\nReport only the value of $S$ as your final answer. No rounding is required; express your answer as an exact integer.", "solution": "The problem is valid as it is scientifically grounded in number theory, well-posed, and all provided data and definitions are consistent and complete.\n\nThe problem asks for three tasks: first, to compute the Frobenius traces $a_p$ for $p=2, 3, 5$ for the elliptic curve $E/\\mathbf{Q}$ given by $y^2 + y = x^3 - x$; second, to explain the connection between these values and the Fourier coefficients of a modular form; and third, to compute the sum $S = a_2 + a_3 + a_5$.\n\nWe begin by computing the values of $a_p = p + 1 - N_p$, where $N_p = \\#E(\\mathbf{F}_p)$ is the number of points on the curve over the finite field $\\mathbf{F}_p$, including the point at infinity.\n\n**1. Computation of $a_2$**\nWe consider the curve $E$ over the field $\\mathbf{F}_2$. The equation is $y^2 + y = x^3 - x$. The elements of $\\mathbf{F}_2$ are $\\{0, 1\\}$.\nThe map $\\phi(y) = y^2 + y$ for $y \\in \\mathbf{F}_2$ takes the values:\n$\\phi(0) = 0^2 + 0 = 0$.\n$\\phi(1) = 1^2 + 1 = 1 + 1 = 0$.\nThus, the equation $y^2+y=c$ has two solutions for $y$ if $c=0$, and no solutions if $c=1$.\n\nWe now evaluate the right-hand side, $c = x^3 - x$, for each $x \\in \\mathbf{F}_2$:\n- For $x=0$: $c = 0^3 - 0 = 0$. The equation for $y$ is $y^2+y=0$, which has $2$ solutions ($y=0, 1$). This gives the points $(0, 0)$ and $(0, 1)$.\n- For $x=1$: $c = 1^3 - 1 = 0$. The equation for $y$ is again $y^2+y=0$, which has $2$ solutions ($y=0, 1$). This gives the points $(1, 0)$ and $(1, 1)$.\n\nThe total number of finite points is $2+2=4$. Including the point at infinity, the total number of points on $E(\\mathbf{F}_2)$ is $N_2 = 4 + 1 = 5$.\nThe Frobenius trace $a_2$ is:\n$$a_2 = 2 + 1 - N_2 = 3 - 5 = -2$$\n\n**2. Computation of $a_3$**\nWe consider the curve $E$ over the field $\\mathbf{F}_3$. The equation is $y^2 + y = x^3 - x$. The elements of $\\mathbf{F}_3$ are $\\{0, 1, 2\\}$.\nBy Fermat's Little Theorem, $x^3 \\equiv x \\pmod{3}$ for all $x \\in \\mathbf{F}_3$. Therefore, the right-hand side $x^3 - x$ is always $0$.\nSo for every $x \\in \\{0, 1, 2\\}$, the equation for $y$ is $y^2 + y = 0$. This can be factored as $y(y+1)=0$. The solutions in $\\mathbf{F}_3$ are $y=0$ and $y=-1 \\equiv 2$.\n- For $x=0$, solutions are $y=0, 2$. Points: $(0, 0), (0, 2)$.\n- For $x=1$, solutions are $y=0, 2$. Points: $(1, 0), (1, 2)$.\n- For $x=2$, solutions are $y=0, 2$. Points: $(2, 0), (2, 2)$.\nThe total number of finite points is $3 \\times 2 = 6$. Including the point at infinity, $N_3 = 6 + 1 = 7$.\nThe Frobenius trace $a_3$ is:\n$$a_3 = 3 + 1 - N_3 = 4 - 7 = -3$$\n\n**3. Computation of $a_5$**\nWe consider the curve $E$ over the field $\\mathbf{F}_5$. The equation is $y^2 + y = x^3 - x$. For a prime $p>2$, we can analyze the number of solutions to $y^2+y-c=0$ by completing the square. The equation is equivalent to $(y + 1/2)^2 = c + 1/4$, or $4(y+1/2)^2 = 4c+1$, which simplifies to $(2y+1)^2 = 4c+1$. The number of solutions for $y$ for a given $c=x^3-x$ is $1 + \\left(\\frac{4c+1}{p}\\right)$, where $\\left(\\frac{\\cdot}{p}\\right)$ is the Legendre symbol.\nWe iterate through all possible values of $x \\in \\mathbf{F}_5 = \\{0, 1, 2, 3, 4\\}$.\n- For $x=0$: $c = x^3-x = 0$. Number of $y$ solutions is $1 + \\left(\\frac{4(0)+1}{5}\\right) = 1 + \\left(\\frac{1}{5}\\right) = 1+1=2$.\n- For $x=1$: $c = x^3-x = 1^3-1=0$. Number of $y$ solutions is $1 + \\left(\\frac{4(0)+1}{5}\\right) = 1 + \\left(\\frac{1}{5}\\right) = 1+1=2$.\n- For $x=2$: $c = x^3-x = 2^3-2 = 8-2 = 6 \\equiv 1 \\pmod 5$. Number of $y$ solutions is $1 + \\left(\\frac{4(1)+1}{5}\\right) = 1 + \\left(\\frac{5}{5}\\right) = 1 + \\left(\\frac{0}{5}\\right) = 1+0=1$.\n- For $x=3$: $c = x^3-x = 3^3-3 = 27-3=24 \\equiv 4 \\pmod 5$. Number of $y$ solutions is $1 + \\left(\\frac{4(4)+1}{5}\\right) = 1 + \\left(\\frac{17}{5}\\right) = 1 + \\left(\\frac{2}{5}\\right) = 1-1=0$.\n- For $x=4$: $c = x^3-x = 4^3-4 = 64-4=60 \\equiv 0 \\pmod 5$. Number of $y$ solutions is $1 + \\left(\\frac{4(0)+1}{5}\\right) = 1 + \\left(\\frac{1}{5}\\right) = 1+1=2$.\n\nThe total number of finite points is the sum of the numbers of $y$ solutions: $2+2+1+0+2=7$. Including the point at infinity, $N_5 = 7 + 1 = 8$.\nThe Frobenius trace $a_5$ is:\n$$a_5 = 5 + 1 - N_5 = 6 - 8 = -2$$\n\n**4. Connection to Modular Forms**\nThe Modularity Theorem (formerly the Taniyama-Shimura-Weil conjecture) states that every elliptic curve $E$ over the rational numbers $\\mathbf{Q}$ is modular. This provides the conceptual basis for why the computed values $a_p$ are expected to match Fourier coefficients of a modular form.\n\nAn elliptic curve $E/\\mathbf{Q}$ is modular if its Hasse-Weil $L$-function, $L(E, s)$, is equal to the $L$-function, $L(f, s)$, of a certain type of modular form $f$. The $L$-function of the elliptic curve is an Euler product over all primes:\n$$L(E,s) = \\prod_{p\\mid\\Delta_E} (1 - a_p p^{-s})^{-1} \\prod_{p \\nmid \\Delta_E} (1 - a_p p^{-s} + p^{1-2s})^{-1}$$\nHere, the coefficients $a_p = p + 1 - \\#E(\\mathbf{F}_p)$ for primes $p$ of good reduction are precisely the Frobenius traces we computed.\n\nThe corresponding modular form $f$ is a normalized cuspidal eigenform of weight $2$ for the congruence subgroup $\\Gamma_0(N)$, where $N$ is the conductor of the elliptic curve $E$. The Fourier series expansion of such a form is $f(z) = \\sum_{n=1}^{\\infty} c_n q^n$, where $q = \\exp(2\\pi i z)$ and $c_1=1$. The $L$-function of this form is the Dirichlet series $L(f,s) = \\sum_{n=1}^{\\infty} \\frac{c_n}{n^s}$.\n\nThe deep connection between the curve and the form is established by the Eichler-Shimura relation, which relates the Hecke operators $T_p$ acting on the space of modular forms to the Frobenius endomorphism $\\pi_p$ of the elliptic curve. A direct consequence of this relation, and the essence of modularity, is the equality of the $L$-functions $L(E,s) = L(f,s)$. This equality implies that the coefficients that define these functions must match. Specifically, for every prime $p$ where $E$ has good reduction (i.e., $p$ does not divide the conductor $N$), the Frobenius trace $a_p$ of the curve is equal to the $p$-th Fourier coefficient $c_p$ of the modular form:\n$$a_p = c_p$$\n\nFor the given curve $y^2+y=x^3-x$, the discriminant is $\\Delta = 37$. Since $37$ is a prime number, the conductor of the curve is $N = 37$. The Modularity Theorem thus asserts the existence of a unique normalized newform $f$ of weight $2$ and level $37$ such that its Fourier coefficients $c_p$ for $p \\neq 37$ are equal to the traces of Frobenius $a_p$ of the curve $E$. This is why the values $a_2, a_3, a_5$ are expected to be the Fourier coefficients $c_2, c_3, c_5$ of this modular form.\n\n**5. Computation of S**\nFinally, we compute the sum $S = a_2 + a_3 + a_5$ using the values derived above.\n$$S = (-2) + (-3) + (-2) = -7$$", "answer": "$$\\boxed{-7}$$", "id": "3024995"}, {"introduction": "We now turn to a key player on the arithmetic side of the conjecture: the rational torsion subgroup, $E(\\mathbb{Q})_{\\text{tors}}$. The order of this finite group, $|E(\\mathbb{Q})_{\\text{tors}}|$, is a crucial algebraic invariant that appears squared in the denominator of the conjectural leading term formula. This exercise will guide you through a systematic application of the powerful Nagell–Lutz theorem to precisely determine the structure of the torsion subgroup for a given elliptic curve. [@problem_id:3025023]", "problem": "Let $E$ be the elliptic curve over $\\mathbb{Q}$ given by the short Weierstrass equation $E: y^{2} = x^{3} - x$. In the context of the Birch and Swinnerton-Dyer (BSD) conjecture, the order of the rational torsion subgroup $|E(\\mathbb{Q})_{\\mathrm{tors}}|$ appears squared in the denominator of the conjectural leading term at $s=1$. Working from first principles about elliptic curves and torsion points, and invoking only standard facts and the Nagell–Lutz theorem as needed, do the following:\n\n1. Justify that $E$ is given by a minimal integral short Weierstrass model, compute its discriminant, and use the Nagell–Lutz theorem to explain why any torsion point of $E(\\mathbb{Q})$ must have integer coordinates and either have $y=0$ or satisfy $y^{2}$ dividing the discriminant.\n\n2. Enumerate all integral points of $E$ that can occur as torsion under the Nagell–Lutz constraints, and determine the structure of $E(\\mathbb{Q})_{\\mathrm{tors}}$ from these points.\n\nProvide, as your final numerical answer, the exact value of $|E(\\mathbb{Q})_{\\mathrm{tors}}|$. No rounding is required. Do not include units.", "solution": "We begin with the elliptic curve $E: y^{2} = x^{3} - x$. This is a short Weierstrass model $y^{2} = x^{3} + A x + B$ with $A = -1$ and $B = 0$, and its coefficients are integers. The discriminant of a short Weierstrass equation is given by\n$$\n\\Delta = -16\\bigl(4A^{3} + 27B^{2}\\bigr).\n$$\nFor $A = -1$ and $B = 0$, we obtain\n$$\n4A^{3} + 27B^{2} = 4(-1)^{3} + 27\\cdot 0 = -4,\n$$\nand hence\n$$\n\\Delta = -16 \\cdot (-4) = 64.\n$$\nIn particular, $E$ is nonsingular because $\\Delta \\neq 0$. Moreover, the given integral model is minimal at all primes for this curve, so we may apply the Nagell–Lutz theorem in its standard form for minimal integral short Weierstrass equations.\n\nWe recall the Nagell–Lutz theorem: for an elliptic curve given by a minimal integral short Weierstrass equation $y^{2} = x^{3} + A x + B$ with integer $A, B$ and discriminant $\\Delta \\neq 0$, any torsion point $P \\in E(\\mathbb{Q})_{\\mathrm{tors}}$ has $x(P), y(P) \\in \\mathbb{Z}$, and either $y(P) = 0$ or $y(P)^{2}$ divides $\\Delta$. Applying this to our $E$, any torsion point has $x, y \\in \\mathbb{Z}$ and either $y = 0$ or $y^{2} \\mid 64$. Since positive divisors of $64$ that are perfect squares are $1, 4, 16, 64$, it follows that the only possibilities for $y$ are\n$$\ny \\in \\{0, \\pm 1, \\pm 2, \\pm 4, \\pm 8\\}.\n$$\n\nWe now analyze the possibilities case by case.\n\n1. Case $y = 0$. Then the curve equation gives\n$$\nx^{3} - x = 0 \\quad \\Longleftrightarrow \\quad x(x-1)(x+1) = 0,\n$$\nso $x \\in \\{-1, 0, 1\\}$. Thus we obtain the finite set of rational points\n$$\n(-1, 0), \\quad (0, 0), \\quad (1, 0),\n$$\nin addition to the point at infinity $\\mathcal{O}$. Each of these three affine points has $y=0$, which implies they are of order $2$ in the group $E(\\mathbb{Q})$ because $2P = \\mathcal{O}$ if and only if $y(P)=0$ on a short Weierstrass model.\n\n2. Case $y \\neq 0$. Then $y^{2} \\in \\{1, 4, 16, 64\\}$. In all such cases, we must have\n$$\nx^{3} - x = y^{2}.\n$$\nHowever, note that\n$$\nx^{3} - x = x(x-1)(x+1),\n$$\nthe product of three consecutive integers. It is a standard fact that the product of three consecutive integers is divisible by $3! = 6$. Hence $x^{3} - x$ is divisible by $6$ for every integer $x$. Therefore, for $y \\neq 0$, we require $y^{2}$ to be divisible by $6$.\n\nBut $y^{2} \\in \\{1, 4, 16, 64\\}$ are not divisible by $3$, hence not divisible by $6$. This contradicts $x^{3} - x = y^{2}$ for any integer $x$ in the $y \\neq 0$ cases. Thus there are no integer solutions with $y \\neq 0$ that satisfy the Nagell–Lutz divisibility condition, and consequently there are no rational torsion points on $E$ other than those with $y=0$ found above.\n\nWe conclude that the set of torsion points in $E(\\mathbb{Q})$ is exactly\n$$\nE(\\mathbb{Q})_{\\mathrm{tors}} = \\{\\mathcal{O}, (-1, 0), (0, 0), (1, 0)\\}.\n$$\nThese consist of the identity and three distinct points of order $2$, so the torsion subgroup has group structure\n$$\nE(\\mathbb{Q})_{\\mathrm{tors}} \\cong \\mathbb{Z}/2\\mathbb{Z} \\times \\mathbb{Z}/2\\mathbb{Z},\n$$\nand in particular\n$$\n|E(\\mathbb{Q})_{\\mathrm{tors}}| = 4.\n$$\n\nIn light of the Birch and Swinnerton-Dyer conjecture, for this curve the torsion factor that appears squared in the denominator of the conjectural leading term at $s=1$ is $|E(\\mathbb{Q})_{\\mathrm{tors}}|^{2} = 16$. The requested numerical value of the torsion order is $4$.", "answer": "$$\\boxed{4}$$", "id": "3025023"}, {"introduction": "Our final practice bridges the gap between theory, computation, and conjecture to tackle the primary unknown: the rank. You will implement a powerful strategy used by number theorists to estimate the rank of an elliptic curve by combining a theoretical upper bound from 2-descent with the parity predicted by the global root number. This capstone exercise demonstrates how different facets of the theory are synergistically used to make concrete predictions about the structure of the Mordell-Weil group. [@problem_id:3024967]", "problem": "You are asked to implement a program that, for a specific family of elliptic curves over the rational numbers, performs a principled, multi-step analysis inspired by a two-descent, root number parity, and numerical approximation of the associated $L$-function at $s=1$. The family under consideration is the congruent-number family of elliptic curves given by the short Weierstrass model\n$$\nE_n: y^2 = x^3 - n^2 x,\n$$\nwhere $n$ is a fixed odd, squarefree positive integer. The goal is to use a combination of theoretical bounds and parity information to deduce a rank estimate for $E_n(\\mathbb{Q})$ (the Mordell–Weil group of rational points), and to support this estimate with a numerical approximation to $L(E_n, 1)$.\n\nFundamental base and core definitions to use:\n- An elliptic curve $E$ over $\\mathbb{Q}$ is a smooth projective curve of genus $1$ with a specified rational point, and the Mordell–Weil theorem states $E(\\mathbb{Q})$ is a finitely generated abelian group of the form $E(\\mathbb{Q}) \\cong E(\\mathbb{Q})_{\\mathrm{tors}} \\oplus \\mathbb{Z}^r$, where $r$ is the rank.\n- A $2$-descent analyzes $E(\\mathbb{Q})/2E(\\mathbb{Q})$ via the $2$-Selmer group, which is a finite-dimensional vector space over $\\mathbb{F}_2$ that bounds the rank: specifically, if $\\dim_{\\mathbb{F}_2} \\operatorname{Sel}^{(2)}(E/\\mathbb{Q}) = s_2$, then $r \\le s_2 - \\dim_{\\mathbb{F}_2} E(\\mathbb{Q})[2]$.\n- For curves $E_n$ of the above form, there is full rational $2$-torsion: the points with $x=0$, $x=n$, and $x=-n$ are of order $2$, so $\\#E_n(\\mathbb{Q})[2] = 4$ and $\\dim_{\\mathbb{F}_2} E_n(\\mathbb{Q})[2] = 2$.\n- The $2$-Selmer group is controlled by local conditions only at the finite set of places $S = \\{\\infty\\} \\cup \\{p \\mid 2n\\}$. A standard dimension count in $2$-descent for curves with full rational $2$-torsion shows that the dimension $s_2$ is bounded above by the number of independent squareclasses supported at $S$, which yields the general inequality\n$$\ns_2 \\le \\omega(n) + 2,\n$$\nwhere $\\omega(n)$ is the number of distinct prime divisors of $n$ and the “$+2$” accounts for the contributions of the place at infinity and the prime $2$. Consequently,\n$$\nr \\le s_2 - 2 \\le (\\omega(n) + 2) - 2 = \\omega(n).\n$$\nThis upper bound is the only fact about $2$-descent you should use; do not attempt to compute the exact $2$-Selmer group.\n\n- The analytic $L$-function $L(E, s)$ of an elliptic curve $E$ is defined by a Dirichlet series $L(E, s) = \\sum_{m \\ge 1} a_m m^{-s}$ where $a_m$ are multiplicative coefficients determined by local point counts at primes of good reduction and standard Hecke recursions. Specifically, for an odd prime $p$ of good reduction,\n$$\na_p = p + 1 - \\#E(\\mathbb{F}_p),\n$$\nand for $k \\ge 2$,\n$$\na_{p^k} = a_p a_{p^{k-1}} - p \\, a_{p^{k-2}},\n$$\nwhile $a_{mn} = a_m a_n$ when $\\gcd(m, n) = 1$. You should only use these relations at odd primes of good reduction for $E_n$, that is, odd primes $p$ with $p \\nmid 2n$. You will approximate $L(E_n, 1)$ using a smoothed partial sum over indices $m$ supported away from the bad primes using\n$$\nL_{\\mathrm{approx}}(E_n, 1; M) = \\sum_{\\substack{1 \\le m \\le M \\\\ \\gcd(m,\\,2n)=1 \\\\ m \\text{ odd}}} \\frac{a_m}{m} \\exp\\!\\left(-\\frac{m}{M}\\right).\n$$\nThis is a numerically stable heuristic approximation and is used in computational practice to gather evidence on whether $L(E_n, 1)$ is plausibly nonzero; it is not a proof.\n\n- The functional equation for $L(E, s)$ has a sign called the global root number $W(E) \\in \\{\\pm 1\\}$. For $E_n$ with $n$ odd and squarefree, the root number is given by the classical formula\n$$\nW(E_n) =\n\\begin{cases}\n+1, & \\text{if } n \\equiv 1, 3 \\pmod{8},\\\\\n-1, & \\text{if } n \\equiv 5, 7 \\pmod{8}.\n\\end{cases}\n$$\nThis follows from the local root number computations for quadratic twists of the complex multiplication curve $y^2 = x^3 - x$ together with the behavior at the prime $2$ and at odd primes dividing $n$. The global root number determines the parity of the analytic rank: $W(E) = +1$ forces an even order of vanishing at the center, and $W(E) = -1$ forces an odd order of vanishing.\n\nYour task:\n1. Implement the computation of the upper bound $r_{\\mathrm{upper}} = \\omega(n)$ as justified above by the general $2$-descent dimension bound for $E_n$ with full rational $2$-torsion.\n2. Implement the parity computation via the global root number $W(E_n)$ using the stated congruence formula modulo $8$.\n3. Implement a heuristic numerical approximation $L_{\\mathrm{approx}}(E_n, 1; M)$ for a fixed truncation parameter $M$ by:\n   - Computing $a_p$ for odd primes $p \\le M$ with $p \\nmid 2n$ via point counts $\\#E_n(\\mathbb{F}_p)$ and the relation $a_p = p+1-\\#E_n(\\mathbb{F}_p)$.\n   - Computing $a_m$ for $m \\le M$ supported on odd integers coprime to $2n$ using the multiplicativity and the Hecke recursion.\n   - Forming the smoothed sum above.\n4. Combine the information from (1) and (2) to produce a definitive rank estimate by choosing the smallest nonnegative integer $r$ consistent with parity $r \\equiv \\frac{1-W(E_n)}{2} \\pmod{2}$ and the upper bound $r \\le r_{\\mathrm{upper}}$. The numerical approximation from (3) should be computed and can be used as supporting evidence, but your final decision rule must be based on (1)–(2) alone to ensure mathematical soundness.\n\nTest suite:\n- Use the parameter set $n \\in \\{1, 3, 5, 13, 15\\}$, all odd and squarefree.\n- For each $n$ in the test suite, produce one integer: the rank estimate determined by the above rule.\n- Coverage rationale:\n  - $n=1$ tests the boundary case with no odd prime divisors, ensuring $r_{\\mathrm{upper}} = 0$.\n  - $n=3$ tests an even parity case ($W=+1$) with $r_{\\mathrm{upper}} = 1$, forcing $r=0$.\n  - $n=5$ and $n=13$ test odd parity cases ($W=-1$) with $r_{\\mathrm{upper}} = 1$, forcing $r=1$.\n  - $n=15$ tests an odd parity case with composite $n$ and $r_{\\mathrm{upper}} = 2$, forcing $r=1$.\nAll outputs are integers. No physical units or angles are involved.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the test suite $[n=1, n=3, n=5, n=13, n=15]$. For example, an output could look like\n$$\n[0,0,1,1,1].\n$$\nYour implementation must be fully self-contained and require no user input.", "solution": "The user wants to implement a program to estimate the rank of elliptic curves from the congruent number family, $E_n: y^2 = x^3 - n^2 x$, for an odd, squarefree positive integer $n$. The estimation process is based on a combination of a theoretical upper bound, a parity prediction, and a supportive numerical calculation.\n\nThe solution proceeds in four main steps as outlined in the problem description.\n\n### Step 1: Upper Bound from $2$-Descent ($r_{\\text{upper}}$)\nThe Mordell-Weil theorem states that the group of rational points on an elliptic curve, $E(\\mathbb{Q})$, is a finitely generated abelian group: $E(\\mathbb{Q}) \\cong E(\\mathbb{Q})_{\\mathrm{tors}} \\oplus \\mathbb{Z}^r$. The integer $r$ is the rank of the curve. The method of $2$-descent provides an upper bound on this rank.\n\nFor the family of curves $E_n: y^2 = x^3 - n^2 x$, it is known that the rank $r$ is bounded above by the number of distinct prime divisors of $n$. This quantity is denoted by $\\omega(n)$.\n$$\nr \\le \\omega(n)\n$$\nThis bound arises from an analysis of the $2$-Selmer group $\\operatorname{Sel}^{(2)}(E_n/\\mathbb{Q})$. The dimension of this group, $s_2$, is related to the rank by $r \\le s_2 - \\dim_{\\mathbb{F}_2} E_n(\\mathbb{Q})[2]$. For the curves $E_n$, the group of rational $2$-torsion points $E_n(\\mathbb{Q})[2]$ has dimension $2$. The dimension $s_2$ is bounded by $s_2 \\le \\omega(n) + 2$. Combining these facts gives the stated upper bound:\n$$\nr \\le (\\omega(n) + 2) - 2 = \\omega(n)\n$$\nWe define our upper bound as $r_{\\text{upper}} = \\omega(n)$. To compute $\\omega(n)$ for a given $n$, we find its distinct prime factors and count them. For $n=1$, which has no prime factors, $\\omega(1) = 0$.\n\n### Step 2: Rank Parity from the Root Number ($W(E_n)$)\nThe Birch and Swinnerton-Dyer (BSD) conjecture connects the algebraic rank $r$ to the analytic rank, defined as the order of vanishing of the Hasse-Weil $L$-function $L(E_n, s)$ at the central point $s=1$. A weaker consequence of the conjecture, which is now a theorem in many cases, is the \"parity conjecture\": the parity of the rank $r$ is determined by the sign of the functional equation of the $L$-function. This sign is called the global root number, $W(E_n) \\in \\{+1, -1\\}$.\n- If $W(E_n) = +1$, the analytic rank is even, so the rank $r$ is predicted to be even.\n- If $W(E_n) = -1$, the analytic rank is odd, so the rank $r$ is predicted to be odd.\n\nThis relationship can be succinctly written as $r \\equiv \\frac{1 - W(E_n)}{2} \\pmod{2}$.\n\nFor the family $E_n$ with $n$ being an odd, squarefree positive integer, the root number is given by a simple congruence condition on $n$:\n$$\nW(E_n) =\n\\begin{cases}\n+1, & \\text{if } n \\equiv 1, 3 \\pmod{8} \\\\\n-1, & \\text{if } n \\equiv 5, 7 \\pmod{8}\n\\end{cases}\n$$\nThus, we can determine the predicted parity of the rank by checking $n$ modulo $8$.\n\n### Step 3: Rank Estimation\nThe rank estimate is determined by finding the smallest non-negative integer $r$ that satisfies both the upper bound from Step 1 and the parity from Step 2.\n- $r \\le r_{\\text{upper}} = \\omega(n)$\n- $r \\equiv \\frac{1 - W(E_n)}{2} \\pmod{2}$\n\nIf the predicted parity is even ($W(E_n) = +1$), the smallest non-negative even integer is $0$. Since $r_{\\text{upper}} = \\omega(n) \\ge 0$, the rank estimate is $r=0$.\nIf the predicted parity is odd ($W(E_n) = -1$), the smallest non-negative odd integer is $1$. This estimate is valid provided $r_{\\text{upper}} = \\omega(n) \\ge 1$, which is true for any $n > 1$ that has at least one prime factor. For the special case $n=1$, $\\omega(1)=0$ and $n \\equiv 1 \\pmod 8$, leading to an even parity prediction and an estimate of $r=0$, which is consistent.\n\n### Step 4: Numerical Approximation of $L(E_n, 1)$\nAs supporting evidence, we implement a numerical approximation of the $L$-function at $s=1$. This value is not used in the final rank decision but is a standard heuristic in the field. A non-zero value of $L(E_n, 1)$ suggests rank $0$, while a value close to zero suggests a positive rank. The approximation is given by a smoothed partial sum:\n$$\nL_{\\mathrm{approx}}(E_n, 1; M) = \\sum_{\\substack{1 \\le m \\le M \\\\ \\gcd(m,\\,2n)=1 \\\\ m \\text{ odd}}} \\frac{a_m}{m} \\exp\\!\\left(-\\frac{m}{M}\\right)\n$$\nwhere $M$ is a truncation parameter. The coefficients $a_m$ are computed as follows:\n1.  **For a prime $p$ of good reduction** (i.e., $p$ is an odd prime and $p \\nmid n$):\n    $a_p = p + 1 - \\#E_n(\\mathbb{F}_p)$. The number of points on the curve over the finite field $\\mathbb{F}_p$ is given by $\\#E_n(\\mathbb{F}_p) = 1 + \\sum_{x=0}^{p-1} \\left(1 + \\left(\\frac{x^3 - n^2 x}{p}\\right)\\right)$, where $\\left(\\frac{\\cdot}{p}\\right)$ is the Legendre symbol. This simplifies the expression for $a_p$ to $a_p = -\\sum_{x=0}^{p-1} \\left(\\frac{x^3 - n^2 x}{p}\\right)$.\n2.  **For prime powers $p^k$ of good primes $p$ (with $k \\ge 2$):**\n    The coefficients are determined by the Hecke recursion: $a_{p^k} = a_p a_{p^{k-1}} - p a_{p^{k-2}}$.\n3.  **For composite numbers $m = m_1 m_2$ with $\\gcd(m_1, m_2)=1$:**\n    The sequence $a_m$ is multiplicative: $a_{m_1 m_2} = a_{m_1} a_{m_2}$.\n\nThese rules allow for the computation of all necessary $a_m$ values up to $M$. We use a sieve-based method for an efficient implementation.\n\nBy applying these steps for each $n$ in the test suite $\\{1, 3, 5, 13, 15\\}$, we obtain the final rank estimates. For example, for $n=15$:\n1.  $n=15=3 \\times 5$, so $\\omega(15)=2$. The upper bound is $r_{\\text{upper}}=2$.\n2.  $15 \\equiv 7 \\pmod 8$, so $W(E_{15})=-1$. The parity is odd.\n3.  The smallest non-negative odd integer $r$ with $r \\le 2$ is $r=1$. The rank estimate for $E_{15}$ is $1$.\n\nThe final program will execute this logic for all specified values of $n$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n# from scipy import ...\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    It calculates the rank estimate for each elliptic curve E_n\n    and optionally computes the L-function approximation as supporting evidence.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [1, 3, 5, 13, 15]\n    \n    # M for L-function approximation, as required by the implementation task.\n    # The final rank estimate does not depend on this calculation.\n    M = 10000 \n\n    results = []\n    for n in test_cases:\n        # Step 1: Compute the upper bound r_upper = omega(n)\n        r_upper = get_omega(n)\n        \n        # Step 2: Compute the rank parity from the root number W(E_n)\n        # parity = 0 for even, 1 for odd\n        parity = get_rank_parity(n)\n        \n        # Step 3: Combine bound and parity to get the rank estimate\n        rank_estimate = get_rank_estimate(r_upper, parity)\n        \n        # Step 4: Implement numerical approximation of L(E_n, 1) as required.\n        # This part is for implementation completeness; its result is not used in the final answer.\n        # l_approx = calculate_l_approx(n, M)\n        \n        results.append(rank_estimate)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\n\ndef get_prime_factors(num):\n    \"\"\"Returns a set of distinct prime factors of num.\"\"\"\n    factors = set()\n    d = 2\n    temp_num = num\n    while d * d <= temp_num:\n        while temp_num % d == 0:\n            factors.add(d)\n            temp_num //= d\n        d += 1\n    if temp_num > 1:\n        factors.add(temp_num)\n    return factors\n\ndef get_omega(n):\n    \"\"\"Computes omega(n), the number of distinct prime divisors of n.\"\"\"\n    if n == 1:\n        return 0\n    return len(get_prime_factors(n))\n\ndef get_rank_parity(n):\n    \"\"\"\n    Determines the rank parity based on n mod 8.\n    Returns 0 for even parity, 1 for odd parity.\n    \"\"\"\n    rem = n % 8\n    if rem in {1, 3}: # Corresponds to W(E_n) = +1\n        return 0\n    elif rem in {5, 7}: # Corresponds to W(E_n) = -1\n        return 1\n    else: # Should not happen for odd n\n        raise ValueError(\"n must be an odd integer.\")\n\ndef get_rank_estimate(r_upper, parity):\n    \"\"\"\n    Finds the smallest non-negative integer r <= r_upper with the given parity.\n    \"\"\"\n    if parity == 0: # Smallest non-negative even number is 0\n        return 0\n    else: # Smallest non-negative odd number is 1\n        return 1 if r_upper >= 1 else -1 # The -1 case is a theoretical inconsistency not expected here.\n\ndef legendre_symbol(a, p):\n    \"\"\"Computes the Legendre symbol (a/p).\"\"\"\n    ls = pow(a, (p - 1) // 2, p)\n    if ls == p - 1:\n        return -1\n    return ls\n\ndef compute_a_coeffs(n, M):\n    \"\"\"\n    Computes the L-function coefficients a_m for m <= M using a sieve method.\n    \"\"\"\n    bad_primes = get_prime_factors(2 * n)\n\n    spf = np.arange(M + 1, dtype=int)\n    for i in range(2, int(M**0.5) + 1):\n        if spf[i] == i:\n            for j in range(i * i, M + 1, i):\n                if spf[j] == j:\n                    spf[j] = i\n    \n    a_coeffs = np.zeros(M + 1, dtype=np.int64)\n    a_coeffs[1] = 1\n    \n    ap_values = {}\n    for p in range(2, M + 1):\n        if spf[p] == p and p not in bad_primes:\n            n_sq_mod_p = (n * n) % p\n            leg_sum = 0\n            for x in range(p):\n                val = (pow(x, 3, p) - n_sq_mod_p * x) % p\n                leg_sum += legendre_symbol(val, p)\n            ap_values[p] = -leg_sum\n\n    for m in range(2, M + 1):\n        p = spf[m]\n        if p in bad_primes:\n            a_coeffs[m] = 0\n            continue\n            \n        rem = m // p\n        if rem == 1: # m is a prime p\n            a_coeffs[m] = ap_values[p]\n        elif spf[rem] == p: # m is a prime power p^k, k>1\n            # a_p^k = a_p * a_p^(k-1) - p * a_p^(k-2)\n            # m = p^k, m//p = p^(k-1), m//p//p = p^(k-2)\n            a_coeffs[m] = ap_values[p] * a_coeffs[m // p] - p * a_coeffs[m // p // p]\n        else: # m has at least two distinct prime factors\n            # a_m = a_{p^k} * a_{rem}\n            ppart = p\n            temp_rem = rem\n            while temp_rem % p == 0:\n                ppart *= p\n                temp_rem //= p\n            final_rem = m // ppart\n            a_coeffs[m] = a_coeffs[ppart] * a_coeffs[final_rem]\n\n    return a_coeffs\n\ndef calculate_l_approx(n, M):\n    \"\"\"\n    Calculates the numerical approximation of L(E_n, 1) up to M.\n    \"\"\"\n    coeffs = compute_a_coeffs(n, M)\n    bad_primes_n = get_prime_factors(n)\n    \n    l_sum = 0.0\n    for m in range(1, M + 1, 2): # Iterate over odd m\n        is_coprime_to_n = True\n        for p in bad_primes_n:\n            if m % p == 0:\n                is_coprime_to_n = False\n                break\n        \n        if is_coprime_to_n:\n            l_sum += coeffs[m] / m * np.exp(-m / M)\n            \n    return l_sum\n\nsolve()\n```", "id": "3024967"}]}