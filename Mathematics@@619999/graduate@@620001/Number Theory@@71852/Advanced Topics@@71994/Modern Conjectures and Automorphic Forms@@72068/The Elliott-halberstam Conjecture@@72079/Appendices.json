{"hands_on_practices": [{"introduction": "The prime number theorem for arithmetic progressions posits that, on average, prime numbers are distributed uniformly among permissible residue classes. This exercise invites you to explore this principle computationally, providing a tangible sense of the fluctuations, denoted by the error term $E(x;q,a)$, around the expected average. By implementing the Chebyshev function $\\psi(x;q,a)$ and comparing the error to the heuristic size $\\sqrt{x}$ [@problem_id:3025852], you will develop crucial intuition for the central question addressed by the Elliott-Halberstam conjecture: precisely how small are these errors when averaged over different moduli?", "problem": "Let $q$ be a positive integer, let $a$ be an integer residue class modulo $q$, and let $\\Lambda(n)$ denote the von Mangoldt function defined by $$\\Lambda(n)=\\begin{cases}\\log p & \\text{if } n=p^k \\text{ for some prime } p \\text{ and integer } k\\geq 1,\\\\ 0 & \\text{otherwise.}\\end{cases}$$ Define the Chebyshev function in arithmetic progressions by $$\\psi(x;q,a)=\\sum_{\\substack{1\\leq n\\leq x\\\\ n\\equiv a\\ (\\mathrm{mod}\\ q)}}\\Lambda(n).$$ Let $\\varphi(q)$ be Euler's totient function, and define the expected main term $$M(x;q,a)=\\begin{cases}\\dfrac{x}{\\varphi(q)} & \\text{if } \\gcd(a,q)=1,\\\\ 0 & \\text{if } \\gcd(a,q)>1.\\end{cases}$$ Define the discrepancy $$E(x;q,a)=\\psi(x;q,a)-M(x;q,a).$$ The Elliott-Halberstam conjecture (EH) concerns the average size of such discrepancies over moduli $q$ up to $x^{1-\\varepsilon}$, and heuristics suggest square-root cancellation scales such as $|E(x;q,a)|$ being comparable to $\\sqrt{x}$ on average in many settings.\n\nYour task is to implement a computational model of $\\Lambda(n)$ using the natural logarithm and compute $\\psi(x;q,a)$, the discrepancy $E(x;q,a)$, and compare $|E(x;q,a)|$ against the heuristic size $\\sqrt{x}$ for the specified test suite. For each test case, you must output the list $$\\big[\\psi(x;q,a),\\ E(x;q,a),\\ |E(x;q,a)|/\\sqrt{x},\\ |E(x;q,a)|\\leq \\sqrt{x}\\big],$$ where the last entry is a boolean indicating whether the observed discrepancy is at most the heuristic benchmark.\n\nUse only purely mathematical and algorithmic reasoning; do not rely on any external data. All logarithms must be natural logarithms. No physical units are involved. Angles are not involved. All percentages, if any, must be expressed as decimals or fractions, but none are required here.\n\nThe required test suite consists of the following parameter sets:\n- Happy path, prime modulus and reduced residue classes: $(x,q,a)=(10^4,5,1)$, $(10^4,5,2)$, $(10^4,5,3)$, $(10^4,5,4)$.\n- Boundary condition with minimal $x$: $(x,q,a)=(1,5,1)$.\n- Edge case with a non-coprime residue class: $(x,q,a)=(100,5,0)$.\n- Composite modulus with both coprime and non-coprime residues: $(x,q,a)=(10^4,8,1)$ and $(10^4,8,2)$.\n- Alternate prime modulus: $(x,q,a)=(10^3,7,3)$.\n- Large modulus relative to $x$: $(x,q,a)=(200,97,1)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element corresponds to one test case in the same order as listed above, and each element is itself a comma-separated list in square brackets of the form $[\\psi,E,|E|/\\sqrt{x},\\text{boolean}]$. For example, the output format must be $$\\big[[\\cdots],[\\cdots],\\ldots,[\\cdots]\\big],$$ with no additional text.", "solution": "The problem is valid. It is a well-posed computational problem in analytic number theory based on standard, universally accepted definitions and a famous conjecture. All necessary data and definitions are provided, and the problem is self-contained and objective.\n\n### **Problem Validation**\n\n#### **Step 1: Extract Givens**\n-   **Von Mangoldt function, $\\Lambda(n)$**:\n    $$\\Lambda(n)=\\begin{cases}\\log p & \\text{if } n=p^k \\text{ for some prime } p \\text{ and integer } k\\geq 1,\\\\ 0 & \\text{otherwise.}\\end{cases}$$\n-   **Chebyshev function, $\\psi(x;q,a)$**:\n    $$\\psi(x;q,a)=\\sum_{\\substack{1\\leq n\\leq x\\\\ n\\equiv a\\ (\\mathrm{mod}\\ q)}}\\Lambda(n).$$\n-   **Euler's totient function, $\\varphi(q)$**.\n-   **Expected main term, $M(x;q,a)$**:\n    $$M(x;q,a)=\\begin{cases}\\dfrac{x}{\\varphi(q)} & \\text{if } \\gcd(a,q)=1,\\\\ 0 & \\text{if } \\gcd(a,q)>1.\\end{cases}$$\n-   **Discrepancy, $E(x;q,a)$**:\n    $$E(x;q,a)=\\psi(x;q,a)-M(x;q,a).$$\n-   **Heuristic benchmark**: $|E(x;q,a)|$ is compared against $\\sqrt{x}$.\n-   **Required output per test case**: A list of four values:\n    $$\\big[\\psi(x;q,a),\\ E(x;q,a),\\ |E(x;q,a)|/\\sqrt{x},\\ |E(x;q,a)|\\leq \\sqrt{x}\\big].$$\n-   **Test suite**:\n    1.  $(x,q,a)=(10^4,5,1)$\n    2.  $(x,q,a)=(10^4,5,2)$\n    3.  $(x,q,a)=(10^4,5,3)$\n    4.  $(x,q,a)=(10^4,5,4)$\n    5.  $(x,q,a)=(1,5,1)$\n    6.  $(x,q,a)=(100,5,0)$\n    7.  $(x,q,a)=(10^4,8,1)$\n    8.  $(x,q,a)=(10^4,8,2)$\n    9.  $(x,q,a)=(10^3,7,3)$\n    10. $(x,q,a)=(200,97,1)$\n\n#### **Step 2: Validate Using Extracted Givens**\n-   **Scientifically Grounded**: The problem is based on fundamental concepts of analytic number theory: the von Mangoldt function, the Chebyshev psi function for arithmetic progressions, and Euler's totient function. The reference to the Elliott-Halberstam conjecture and the square-root cancellation heuristic are central topics in the study of prime number distribution. All definitions and principles are scientifically sound.\n-   **Well-Posed**: For any valid set of inputs $(x,q,a)$, the quantities to be computed are uniquely defined. The computational task is clear and has a single, verifiable solution for each test case.\n-   **Objective**: The problem is stated using precise mathematical language and definitions, free of any subjectivity or ambiguity.\n\nThe problem does not exhibit any of the invalidity flaws. It is a well-defined computational task within the domain of number theory.\n\n#### **Step 3: Verdict and Action**\nThe problem statement is **valid**. A solution will be provided.\n\n### **Methodology and Solution**\n\nThe objective is to compute four quantities for each test case $(x,q,a)$: $\\psi(x;q,a)$, $E(x;q,a)$, the ratio $|E(x;q,a)|/\\sqrt{x}$, and a boolean comparison $|E(x;q,a)| \\le \\sqrt{x}$. This requires the implementation of several number-theoretic functions.\n\n#### **1. Pre-computation of the von Mangoldt function $\\Lambda(n)$**\n\nTo efficiently calculate $\\psi(x;q,a)$, which involves a sum of $\\Lambda(n)$ values, it is best to pre-compute $\\Lambda(n)$ for all integers $n$ up to the maximum value of $x$ in the test suite, which is $10^4$. A sieve-based method, analogous to the Sieve of Eratosthenes, is suitable for this purpose.\n\nThe algorithm is as follows:\n1.  Initialize an array `lambda_vals` of size $x_{max}+1$ with zeros, where $x_{max} = 10^4$.\n2.  Initialize a boolean array `is_prime` of size $x_{max}+1$ to `True` for all entries from $2$ onwards. Mark $0$ and $1$ as not prime.\n3.  Iterate through integers $p$ from $2$ up to $x_{max}$.\n4.  If `is_prime[p]` is `True`, then $p$ is a prime number.\n    a.  First, mark all multiples of $p$ ($2p, 3p, ...$) as not prime in the `is_prime` array.\n    b.  Next, calculate $\\log p$. This value is assigned to $\\Lambda(n)$ for all powers of this prime, $n = p^k$. Iterate through powers $p^k = p, p^2, p^3, \\dots$ as long as $p^k \\le x_{max}$, and set `lambda_vals[p^k] = log(p)`.\n\nThis process efficiently populates the `lambda_vals` array. For any composite number $n$ that is not a prime power, `lambda_vals[n]` will remain $0$, consistent with the definition of $\\Lambda(n)$.\n\n#### **2. Computation of Auxiliary Functions**\n\nThe calculation of the main term $M(x;q,a)$ requires Euler's totient function $\\varphi(q)$ and the greatest common divisor $\\gcd(a,q)$.\n\n**Euler's totient function $\\varphi(q)$:**\nFor an integer $q > 1$, $\\varphi(q)$ is the number of positive integers up to $q$ that are relatively prime to $q$. It can be calculated using its product formula over the distinct prime factors of $q$:\n$$ \\varphi(q) = q \\prod_{p|q, p \\text{ is prime}} \\left(1 - \\frac{1}{p}\\right) $$\nAn effective algorithm to compute this is:\n1.  Initialize `result = q`.\n2.  Iterate through prime candidates $p$ starting from $2$.\n3.  If $p$ divides the remaining part of $q$, update the result by `result = result - result/p` and divide out all factors of $p$ from $q$.\n4.  Repeat until the remaining part of $q$ is $1$ or the square of $p$ exceeds it. If a prime factor greater than $\\sqrt{q}$ remains, one final update is needed for that factor.\n\n**Greatest common divisor $\\gcd(a,q)$:**\nThis is computed using the standard Euclidean algorithm, which is available in Python's `math` library. For the test case $(100, 5, 0)$, we note that $\\gcd(0,q) = q$.\n\n#### **3. Calculation of Principal Quantities**\n\nFor each test case $(x,q,a)$:\n\n1.  **Chebyshev function $\\psi(x;q,a)$**:\n    $$\\psi(x;q,a)=\\sum_{\\substack{1\\leq n\\leq x\\\\ n\\equiv a\\ (\\mathrm{mod}\\ q)}}\\Lambda(n)$$\n    This sum is computed by iterating through all integers $n$ from $1$ to $x$ that satisfy the congruence $n \\equiv a \\pmod{q}$. An efficient way to do this is to establish the first term of the arithmetic progression, $n_{start}$, which is the smallest positive integer such that $n_{start} \\equiv a \\pmod{q}$. This can be calculated as $n_{start} = (a-1) \\pmod q + 1$. The sum then becomes an iteration over $n = n_{start}, n_{start}+q, n_{start}+2q, \\dots$ up to $x$, summing the pre-computed `lambda_vals[n]`.\n\n2.  **Expected main term $M(x;q,a)$**:\n    $$M(x;q,a)=\\begin{cases}\\dfrac{x}{\\varphi(q)} & \\text{if } \\gcd(a,q)=1,\\\\ 0 & \\text{if } \\gcd(a,q)>1.\\end{cases}$$\n    First, compute $g = \\gcd(a,q)$. If $g=1$, compute $\\varphi_q = \\varphi(q)$ and set $M(x;q,a) = x / \\varphi_q$. Otherwise, $M(x;q,a)=0$.\n\n3.  **Discrepancy $E(x;q,a)$**:\n    This is the direct difference: $E(x;q,a) = \\psi(x;q,a) - M(x;q,a)$.\n\n4.  **Ratio and Heuristic Check**:\n    The final two values are derived from $E(x;q,a)$:\n    -   The ratio is $|E(x;q,a)| / \\sqrt{x}$.\n    -   The boolean check is the result of the comparison $|E(x;q,a)| \\le \\sqrt{x}$.\n\nThis structured approach ensures that each component is calculated correctly and efficiently, leading to the final four-element list for each test case. The results from all test cases are then aggregated into a single list of lists for the final output.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport math\n\ndef sieve_for_lambda(limit):\n    \"\"\"\n    Computes von Mangoldt function Lambda(n) for n up to limit using a sieve.\n    \"\"\"\n    lambda_vals = np.zeros(limit + 1)\n    is_prime = np.ones(limit + 1, dtype=bool)\n    is_prime[0] = is_prime[1] = False\n    for p in range(2, limit + 1):\n        if is_prime[p]:\n            log_p = np.log(p)\n            # Sieve out multiples\n            for multiple in range(2 * p, limit + 1, p):\n                is_prime[multiple] = False\n            # Assign log(p) to powers of p\n            p_power = p\n            while p_power <= limit:\n                lambda_vals[p_power] = log_p\n                # Prevent overflow before multiplication\n                if p_power > limit // p:\n                    break\n                p_power *= p\n    return lambda_vals\n\ndef phi(q):\n    \"\"\"\n    Computes Euler's totient function phi(q).\n    \"\"\"\n    if q == 1:\n        return 1\n    result = q\n    p = 2\n    temp_q = q\n    while p * p <= temp_q:\n        if temp_q % p == 0:\n            while temp_q % p == 0:\n                temp_q //= p\n            result -= result // p\n        p += 1\n    if temp_q > 1:\n        result -= result // temp_q\n    return result\n\ndef calculate_psi(x, q, a, lambda_vals):\n    \"\"\"\n    Computes the Chebyshev function psi(x; q, a).\n    \"\"\"\n    x_int = int(x)\n    psi_val = 0.0\n    \n    # Start iteration from the first positive integer n = a (mod q)\n    # The formula (a-1)%q + 1 works for a >= 0 in Python.\n    # e.g., a=5, q=5 -> (4%5)+1 = 5. a=0, q=5 -> (-1%5)+1 = 4+1=5. a=1, q=5 -> (0%5)+1=1.\n    n_start = (a - 1) % q + 1\n    \n    for n in range(n_start, x_int + 1, q):\n        psi_val += lambda_vals[n]\n        \n    return psi_val\n\ndef solve():\n    \"\"\"\n    Main solver function to process test cases and produce the final output.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (10**4, 5, 1),\n        (10**4, 5, 2),\n        (10**4, 5, 3),\n        (10**4, 5, 4),\n        (1, 5, 1),\n        (100, 5, 0),\n        (10**4, 8, 1),\n        (10**4, 8, 2),\n        (10**3, 7, 3),\n        (200, 97, 1),\n    ]\n\n    max_x = 0\n    if test_cases:\n        max_x = int(max(tc[0] for tc in test_cases))\n\n    # Pre-compute Lambda values\n    lambda_vals = sieve_for_lambda(max_x)\n    \n    results = []\n    for x, q, a in test_cases:\n        # 1. Compute psi(x; q, a)\n        psi = calculate_psi(x, q, a, lambda_vals)\n        \n        # 2. Compute M(x; q, a)\n        g = math.gcd(a, q)\n        if g == 1:\n            phi_q = phi(q)\n            m_xaq = x / phi_q\n        else:\n            m_xaq = 0.0\n            \n        # 3. Compute E(x; q, a)\n        e_xaq = psi - m_xaq\n        \n        # 4. Compute ratio and boolean check\n        sqrt_x = np.sqrt(x)\n        ratio = np.abs(e_xaq) / sqrt_x if sqrt_x > 0 else 0.0\n        is_le_heuristic = np.abs(e_xaq) <= sqrt_x\n        \n        results.append([psi, e_xaq, ratio, is_le_heuristic])\n\n    # Final print statement in the exact required format without spaces.\n    inner_strings = []\n    for r in results:\n        # Convert boolean to lowercase 'true'/'false' if required, but str(bool) gives 'True'/'False'\n        # The example format [...,boolean] suggests str(bool) is fine.\n        inner_strings.append(f\"[{r[0]},{r[1]},{r[2]},{r[3]}]\")\n    \n    print(f\"[{','.join(inner_strings)}]\")\n\nsolve()\n```", "id": "3025852"}, {"introduction": "Establishing profound results on prime distribution, like the Bombieri-Vinogradov theorem, involves decomposing the von Mangoldt function $\\Lambda(n)$ into structurally simpler pieces. A key technique involves using Dirichlet characters to analyze functions defined on residue classes. This exercise guides you through this fundamental transformation, showing how to express the error term $E(x;q,a)$ for an arithmetic progression in terms of sums involving characters, $\\psi(x,\\chi)$. Mastering this \"duality\" [@problem_id:3025892] is the essential first step toward applying powerful tools like the large sieve inequality and understanding how individual errors are linked to the collective behavior of character sums.", "problem": "Let $q \\geq 1$ be an integer and let $\\varphi(q)$ denote Euler's totient function. For a Dirichlet character modulo $q$, write $\\chi \\pmod q$, and denote the principal character by $\\chi_{0}$. Define the Chebyshev function twisted by a character by\n$$\n\\psi(x,\\chi) \\;=\\; \\sum_{n \\leq x} \\Lambda(n)\\,\\chi(n),\n$$\nand the Chebyshev function in the reduced residue class $a \\pmod q$ (with $(a,q)=1$) by\n$$\n\\psi(x;q,a) \\;=\\; \\sum_{\\substack{n \\leq x \\\\ n \\equiv a \\,(\\bmod q)}} \\Lambda(n).\n$$\nDefine the error term in the prime number theorem for arithmetic progressions by\n$$\nE(x;q,a) \\;=\\; \\psi(x;q,a) \\;-\\; \\frac{x}{\\varphi(q)}.\n$$\n\nAssume the orthogonality of Dirichlet characters:\n$$\n\\frac{1}{\\varphi(q)} \\sum_{\\chi \\,(\\bmod q)} \\overline{\\chi}(a)\\,\\chi(n)\n\\;=\\;\n\\begin{cases}\n1, & \\text{if } n \\equiv a \\pmod q \\text{ and } (n,q)=1,\\\\\n0, & \\text{otherwise},\n\\end{cases}\n$$\nand suppose that for some function $\\mathcal{B}(x,Q)$ and for all moduli $q \\leq Q$ one has the uniform bound\n$$\n\\sum_{\\chi \\,(\\bmod q)} \\big|\\psi(x,\\chi)\\big| \\;\\leq\\; \\mathcal{B}(x,Q).\n$$\n\nUsing only these inputs and fundamental properties of Dirichlet characters and the von Mangoldt function, derive an average bound for the error term of the shape\n$$\n\\frac{1}{\\varphi(q)} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} \\big|E(x;q,a)\\big|\n\\;\\leq\\; C(q)\\, \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_{0}}} \\big|\\psi(x,\\chi)\\big| \\;+\\; \\text{(explicit principal-character correction)},\n$$\nidentifying the exact multiplicative constant $C(q)$ that arises deterministically from the translation between residue-class sums and character sums. Compute $C(q)$ explicitly as a closed-form expression in $q$.\n\nYour final answer must be only the expression for $C(q)$, with no units. If you choose to simplify, provide an exact symbolic expression (no numerical approximation).", "solution": "The problem is to derive a bound for the average of the error term in the prime number theorem for arithmetic progressions and to determine the multiplicative constant $C(q)$ that arises.\n\nFirst, we express the Chebyshev function for an arithmetic progression, $\\psi(x;q,a)$, in terms of the twisted Chebyshev functions, $\\psi(x,\\chi)$. The problem provides the orthogonality relation for Dirichlet characters modulo $q$: for $(a,q)=1$,\n$$\n\\frac{1}{\\varphi(q)} \\sum_{\\chi \\,(\\bmod q)} \\overline{\\chi}(a)\\,\\chi(n)\n\\;=\\;\n\\begin{cases}\n1, & \\text{if } n \\equiv a \\pmod q,\\\\\n0, & \\text{otherwise}.\n\\end{cases}\n$$\nNote that for $n \\equiv a \\pmod q$ with $(a,q)=1$, it is necessary that $(n,q)=1$. The von Mangoldt function $\\Lambda(n)$ is zero unless $n$ is a prime power, $n=p^k$. For a character $\\chi \\pmod q$, it is standard to define $\\chi(n)=0$ if $(n,q)>1$. Thus, the sum $\\sum_{n \\leq x} \\Lambda(n)\\chi(n)$ implicitly includes the condition $(n,q)=1$ for any term to be non-zero, unless $q$ is a prime power and $n$ is a power of that prime. However, with the standard definition of characters induced from primitive characters, $\\chi(n) = 0$ for $(n,q)>1$ for all characters $\\chi \\pmod q$ except possibly when $q=1$. The problem statement implies we are using characters defined on $\\mathbb{Z}$ in this standard way.\n\nUsing the orthogonality relation, we can write $\\psi(x;q,a)$ as:\n$$\n\\psi(x;q,a) \\;=\\; \\sum_{\\substack{n \\leq x \\\\ n \\equiv a \\,(\\bmod q)}} \\Lambda(n) \\;=\\; \\sum_{n \\leq x} \\Lambda(n) \\left( \\frac{1}{\\varphi(q)} \\sum_{\\chi \\,(\\bmod q)} \\overline{\\chi}(a)\\chi(n) \\right).\n$$\nWe can swap the order of summation:\n$$\n\\psi(x;q,a) \\;=\\; \\frac{1}{\\varphi(q)} \\sum_{\\chi \\,(\\bmod q)} \\overline{\\chi}(a) \\sum_{n \\leq x} \\Lambda(n)\\chi(n) \\;=\\; \\frac{1}{\\varphi(q)} \\sum_{\\chi \\,(\\bmod q)} \\overline{\\chi}(a) \\psi(x,\\chi).\n$$\n\nNext, we form the error term $E(x;q,a)$:\n$$\nE(x;q,a) \\;=\\; \\psi(x;q,a) \\;-\\; \\frac{x}{\\varphi(q)} \\;=\\; \\frac{1}{\\varphi(q)} \\sum_{\\chi \\,(\\bmod q)} \\overline{\\chi}(a) \\psi(x,\\chi) \\;-\\; \\frac{x}{\\varphi(q)}.\n$$\nWe separate the contribution from the principal character, $\\chi_0$. Since $(a,q)=1$, we have $\\overline{\\chi_0}(a)=1$.\n$$\nE(x;q,a) \\;=\\; \\frac{1}{\\varphi(q)} \\left( \\overline{\\chi_0}(a)\\psi(x,\\chi_0) + \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right) \\;-\\; \\frac{x}{\\varphi(q)}\n$$\n$$\nE(x;q,a) \\;=\\; \\frac{1}{\\varphi(q)} \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\;+\\; \\frac{\\psi(x,\\chi_0) - x}{\\varphi(q)}.\n$$\nThe problem requires deriving a bound for the average of $|E(x;q,a)|$ over all reduced residue classes $a \\pmod q$. The required form of the bound is a sum of two terms, which suggests using the triangle inequality $|A+B| \\leq |A|+|B|$.\n$$\n|E(x;q,a)| \\;\\leq\\; \\left| \\frac{1}{\\varphi(q)} \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right| \\;+\\; \\left| \\frac{\\psi(x,\\chi_0) - x}{\\varphi(q)} \\right|.\n$$\nNow, we average this inequality over the $\\varphi(q)$ values of $a$ such that $(a,q)=1$:\n$$\n\\frac{1}{\\varphi(q)} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} |E(x;q,a)| \\;\\leq\\; \\frac{1}{\\varphi(q)} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} \\left| \\frac{1}{\\varphi(q)} \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right| \\;+\\; \\frac{|\\psi(x,\\chi_0) - x|}{\\varphi(q)}.\n$$\nThe second term, $\\frac{|\\psi(x,\\chi_0) - x|}{\\varphi(q)}$, is the \"explicit principal-character correction\" mentioned in the problem statement, as its average over $a$ is itself.\n\nWe now focus on an upper bound for the first term, which must take the form $C(q) \\sum_{\\chi \\neq \\chi_0} |\\psi(x,\\chi)|$. Let this term be denoted by $M$:\n$$\nM \\;=\\; \\frac{1}{\\varphi(q)} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} \\left| \\frac{1}{\\varphi(q)} \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right| \\;=\\; \\frac{1}{\\varphi(q)^2} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} \\left| \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right|.\n$$\nTo obtain a bound in terms of $\\sum |\\psi(x,\\chi)|$, we apply the triangle inequality to the inner sum over characters:\n$$\n\\left| \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right| \\;\\leq\\; \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} |\\overline{\\chi}(a)\\psi(x,\\chi)|.\n$$\nSince $|\\overline{\\chi}(a)| = 1$ for any character $\\chi$ and any $a$ with $(a,q)=1$, this simplifies to:\n$$\n\\left| \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} \\overline{\\chi}(a)\\psi(x,\\chi) \\right| \\;\\leq\\; \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} |\\psi(x,\\chi)|.\n$$\nSubstituting this back into the expression for $M$:\n$$\nM \\;\\leq\\; \\frac{1}{\\varphi(q)^2} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} \\left( \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} |\\psi(x,\\chi)| \\right).\n$$\nThe inner sum over $\\chi \\neq \\chi_0$ does not depend on $a$. The outer sum over $a$ consists of $\\varphi(q)$ identical terms.\n$$\nM \\;\\leq\\; \\frac{1}{\\varphi(q)^2} \\cdot \\varphi(q) \\left( \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} |\\psi(x,\\chi)| \\right) \\;=\\; \\frac{1}{\\varphi(q)} \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} |\\psi(x,\\chi)|.\n$$\nThis derivation yields a bound of the required form. By comparing this result with the target expression\n$$\nM \\leq C(q)\\, \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_{0}}} \\big|\\psi(x,\\chi)\\big|,\n$$\nwe can identify the constant $C(q)$ that arises \"deterministically\" from this standard sequence of steps.\nThe constant is:\n$$\nC(q) \\;=\\; \\frac{1}{\\varphi(q)}.\n$$\nThe full inequality derived is:\n$$\n\\frac{1}{\\varphi(q)} \\sum_{\\substack{a \\,(\\bmod q) \\\\ (a,q)=1}} |E(x;q,a)| \\;\\leq\\; \\frac{1}{\\varphi(q)} \\sum_{\\substack{\\chi \\,(\\bmod q) \\\\ \\chi \\neq \\chi_0}} |\\psi(x,\\chi)| \\;+\\; \\frac{|\\psi(x,\\chi_0) - x|}{\\varphi(q)}.\n$$\nThe problem asks for the explicit closed-form expression for $C(q)$, which we have found.", "answer": "$$\\boxed{\\frac{1}{\\varphi(q)}}$$", "id": "3025892"}, {"introduction": "Establishing profound results on prime distribution, like the Bombieri-Vinogradov theorem, involves decomposing the von Mangoldt function $\\Lambda(n)$ into structurally simpler pieces. Vaughan's identity offers a flexible method for this decomposition, but its success depends on the strategic choice of its truncation parameters, $U$ and $V$. This problem challenges you to think about the delicate balancing act required to optimize this complex proof machinery. By analyzing these trade-offs [@problem_id:3025857], you gain a deeper appreciation for the architecture of a major theorem and understand the origins of analytical barriers, such as the famous level of distribution $\\theta = \\frac{1}{2}$.", "problem": "Let $x$ be a large parameter and let $\\Lambda(n)$ denote the von Mangoldt function. For a modulus $q \\geq 1$ and residue class $a$ with $(a,q)=1$, define the discrepancy\n$$\n\\Delta(x;q,a) \\coloneqq \\sum_{\\substack{n \\leq x \\\\ n \\equiv a \\, (\\mathrm{mod}\\, q)}} \\Lambda(n) \\;-\\; \\frac{x}{\\varphi(q)} \\,,\n$$\nand the aggregated discrepancy\n$$\nE(x,Q) \\coloneqq \\sum_{q \\leq Q} \\max_{(a,q)=1} \\left| \\Delta(x;q,a) \\right| \\,.\n$$\nThe Bombieri–Vinogradov theorem gives a distribution level of $\\theta = 1/2$ for the primes, meaning that for any fixed $A>0$ one has $E(x,Q) \\ll x (\\log x)^{-A}$ uniformly for $Q \\leq x^{1/2} (\\log x)^{-B}$ with some $B=B(A)>0$. The Elliott–Halberstam conjecture (EH) predicts essentially $\\theta=1-\\varepsilon$ for any $\\varepsilon>0$.\n\nA standard approach to bounding $E(x,Q)$ uses Vaughan’s identity, which expresses $\\Lambda(n)$ as a sum of convolutions organized into “Type I,” “Type II,” and “Type III” components, with truncation parameters $U$ and $V$ controlling the sizes of these components. In particular, the Type II contribution is a bilinear sum with lengths $M$ and $N$ that are determined by $U$ and $V$ and are constrained by the ambient scale $x$; likewise, Type III is a trilinear sum with three lengths whose product is constrained by $x$. These decompositions are then treated by a dispersion method and the large sieve inequality to control $E(x,Q)$.\n\nStarting from these principles—definitions of $\\Delta(x;q,a)$ and $E(x,Q)$, the structure of Vaughan’s identity with truncation parameters $U$ and $V$, and the use of the large sieve in the dispersion method—reason how the choice of $U$ and $V$ affects the attainable level of distribution $\\theta$ and articulate the main trade-offs involved in choosing $U$ and $V$. Which of the following statements most accurately captures this relationship?\n\nA. Choosing $U \\approx V \\approx x^{1/3}$ balances Type III sums and, with only classical large sieve inputs, pushes the attainable level of distribution beyond $\\theta=1/2$ to $\\theta=2/3$ unconditionally; the trade-off is a minor increase in logarithmic losses.\n\nB. Selecting $U$ and $V$ so that the dominant bilinear Type II lengths are comparable (e.g., $M \\approx N \\approx x^{1/2}$ in the aggregate constraint) optimizes large sieve savings but does not break the large sieve barrier $Q \\ll x^{1/2}$ without additional cancellation; moving away from balance inflates coefficient norms and worsens Type II bounds, while shrinking $U$ excessively shifts weight to Type I/III sums that are harder to control, so the exponent $\\theta=1/2$ is best possible unconditionally and parameter choice mainly optimizes constants.\n\nC. Taking $U$ extremely small, e.g. $U = (\\log x)^2$, and $V$ very large, e.g. $V = x^{9/10}$, maximizes the bilinear product length and thereby allows $Q$ up to $x^{9/10}$ unconditionally; the trade-off is that Type I sums become negligible.\n\nD. Under the Elliott–Halberstam conjecture one can choose $U$ and $V$ arbitrarily without any impact on the level of distribution, which then holds uniformly up to $Q \\leq x$; in particular, parameter selection is irrelevant once EH is assumed.", "solution": "The user wants me to analyze the role of the parameters $U$ and $V$ in Vaughan's identity when proving a Bombieri-Vinogradov type result for the distribution of primes in arithmetic progressions. I must first validate the problem statement and then, if valid, provide a detailed solution evaluating the given options.\n\n### Problem Validation\n\n**Step 1: Extract Givens**\n-   Let $x$ be a large parameter.\n-   Let $\\Lambda(n)$ be the von Mangoldt function.\n-   For a modulus $q \\geq 1$ and residue class $a$ with $(a,q)=1$, the discrepancy is defined as:\n    $$\n    \\Delta(x;q,a) \\coloneqq \\sum_{\\substack{n \\leq x \\\\ n \\equiv a \\, (\\mathrm{mod}\\, q)}} \\Lambda(n) \\;-\\; \\frac{x}{\\varphi(q)}\n    $$\n-   The aggregated discrepancy is defined as:\n    $$\n    E(x,Q) \\coloneqq \\sum_{q \\leq Q} \\max_{(a,q)=1} \\left| \\Delta(x;q,a) \\right|\n    $$\n-   The Bombieri–Vinogradov theorem states that for any fixed $A>0$, one has $E(x,Q) \\ll x (\\log x)^{-A}$ uniformly for $Q \\leq x^{1/2} (\\log x)^{-B}$ with some $B=B(A)>0$. This gives a level of distribution $\\theta = 1/2$.\n-   The Elliott–Halberstam conjecture (EH) predicts a level of distribution $\\theta=1-\\varepsilon$ for any $\\varepsilon>0$.\n-   A standard proof approach involves:\n    1.  Decomposing $\\Lambda(n)$ using Vaughan’s identity, which has truncation parameters $U$ and $V$.\n    2.  This decomposition yields \"Type I,\" \"Type II,\" and \"Type III\" sums.\n    3.  Type II sums are bilinear with lengths $M$ and $N$. Type III sums are trilinear.\n    4.  These sums are bounded using the dispersion method and the large sieve inequality.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem statement describes a standard and central topic in analytic number theory.\n-   **Scientifically Grounded:** All definitions ($\\Lambda(n)$, $\\Delta(x;q,a)$, $E(x,Q)$), theorems (Bombieri-Vinogradov), conjectures (Elliott-Halberstam), and methods (Vaughan's identity, dispersion method, large sieve) are standard and correctly stated. The anaylsis is fully within the established framework of number theory.\n-   **Well-Posed:** The question asks for a qualitative analysis of the trade-offs in choosing parameters $U$ and $V$ in a specific proof strategy. This is a meaningful conceptual question that has a definite answer within the context of the mathematical literature on the subject.\n-   **Objective:** The language is technical and precise, free from subjectivity.\n-   **Completeness and Consistency:** The problem provides sufficient conceptual background to reason about the trade-offs without requiring a full quantitative derivation. The information is self-consistent and accurately reflects the structure of the mathematical arguments.\n\n**Step 3: Verdict and Action**\nThe problem statement is valid. I will proceed with deriving the solution and evaluating the options.\n\n### Solution Derivation\n\nThe problem requires an analysis of the trade-offs involved in choosing the parameters $U$ and $V$ in Vaughan's identity to bound the aggregated discrepancy $E(x,Q)$. The goal is to maximize the level of distribution $Q = x^\\theta$.\n\nVaughan's identity is a combinatorial identity for the von Mangoldt function $\\Lambda(n)$, which decomposes it into sums of convolutions. For $n > U$, a typical variant splits $\\Lambda(n)$ into several terms that, when summed over $n$, lead to sums of three general types:\n\n1.  **Type I sums:** These are of the form $\\sum_{m \\le D} a_m \\sum_{k \\le x/m} b_k$, where $b_k$ is a simple sequence (like $b_k=1$ or $b_k=\\log k$) and $a_m$ is a more complex arithmetic function. In Vaughan's identity, the length of the outer sum $D$ is typically related to $U$ and $V$, for example $D=U$ or $D=UV$. For these sums to be controllable up to a large level $Q$, the length $D$ must not be too large. A standard treatment shows these sums are acceptable if, roughly, $Q^2 D \\ll x$.\n\n2.  **Type II sums:** These are bilinear forms of the type $\\sum_{m \\sim M} a_m \\sum_{k \\sim K} b_k$ where $mk \\le x$. Here, both sequences $a_m$ and $b_k$ can be complex. The dispersion method and the large sieve inequality are most effective on these sums. The ranges for $M$ and $K$ are determined by $U$ and $V$. For instance, they might be constrained by $M, K > U$ or $M > U, K > V$.\n\n3.  **Type III sums:** These are trilinear convolutions, which can often be reduced to Type I or Type II sums by grouping variables. The balancing act of choosing $U$ and $V$ is critical to ensure all resulting sums are manageable.\n\nThe core of the proof of the Bombieri-Vinogradov theorem is to show that for an appropriate choice of $U$ and $V$, all resulting sums contribute an amount less than $x(\\log x)^{-A}$ for $Q \\le x^{1/2}(\\log x)^{-B}$.\n\nLet's analyze the constraints:\n-   **From Type I sums:** The requirement $Q^2 D \\ll x$ implies that if we want $Q \\approx x^{1/2}$, we need $x D \\ll x$, meaning $D$ must be small (e.g., bounded by a power of $\\log x$). In Vaughan's identity, $D$ can be as large as $UV$. This suggests we cannot make $U$ and $V$ too large. This is a key trade-off.\n\n-   **From Type II sums:** The large sieve inequality, when applied to a bilinear form with variables of length $M$ and $K$ (with $MK \\approx x$), yields a satisfactory bound for $Q \\le x^{1/2-\\epsilon}$ provided that $M$ and $K$ are not too \"lopsided\". That is, we must avoid cases where one variable is very short and the other is very long. The large sieve performs best when the lengths are comparable, i.e., $M \\approx K \\approx x^{1/2}$. The parameters $U$ and $V$ in Vaughan's identity control the ranges of $M$ and $K$. Choosing $U$ and $V$ too small (e.g., small powers of $\\log x$) would allow for Type II sums with one variable being small (just above $U$ or $V$) and the other being large (close to $x/U$ or $x/V$), making them difficult to bound. Thus, $U$ and $V$ must be sufficiently large, typically a power of $x$, like $x^\\delta$ for some $\\delta>0$.\n\nA successful choice of $U$ and $V$ must balance these conflicting requirements. A standard choice that works for proving the Bombieri-Vinogradov theorem is $U=V=x^{1/3}$. With this choice:\n-   The most problematic Type I sums have length $D \\approx UV = x^{2/3}$. The condition $Q^2 D \\ll x$ would imply $Q^2 x^{2/3} \\ll x$, or $Q \\ll x^{1/6}$, which is too restrictive. However, a more refined analysis shows that these sums can also be handled.\n-   The Type II sums involve variables $m,k$ in ranges constrained by $m,k > x^{1/3}$, which implies $x^{1/3} < m, k < x^{2/3}$. These ranges are not pathologically lopsided and are treatable with the large sieve up to $Q \\approx x^{1/2}$.\n\nThe upshot is that a careful balancing act, with parameters like $U=V=x^{1/3}$ or other similar choices, allows all parts of the combinatorial decomposition to be controlled, ultimately yielding the Bombieri-Vinogradov theorem with $\\theta = 1/2$. This level of distribution is considered the limit of what can be proven using these \"classical\" large sieve methods. Going beyond $\\theta=1/2$ would likely require fundamentally new ideas, such as exploiting cancellation in families of $L$-functions beyond what the large sieve provides. Within this framework, the choice of $U$ and $V$ does not change the exponent $\\theta=1/2$ but is critical for making the proof work and for optimizing the constants and logarithmic factors in the final bound.\n\n### Option-by-Option Analysis\n\n**A. Choosing $U \\approx V \\approx x^{1/3}$ balances Type III sums and, with only classical large sieve inputs, pushes the attainable level of distribution beyond $\\theta=1/2$ to $\\theta=2/3$ unconditionally; the trade-off is a minor increase in logarithmic losses.**\nThis statement is incorrect. While the choice $U \\approx V \\approx x^{1/3}$ is indeed a standard and effective one for balancing the different sum types, it leads to the Bombieri-Vinogradov theorem with level of distribution $\\theta=1/2$. Attaining a level of $\\theta=2/3$ unconditionally is a major open problem in number theory and is far beyond the reach of current methods.\n\n**B. Selecting $U$ and $V$ so that the dominant bilinear Type II lengths are comparable (e.g., $M \\approx N \\approx x^{1/2}$ in the aggregate constraint) optimizes large sieve savings but does not break the large sieve barrier $Q \\ll x^{1/2}$ without additional cancellation; moving away from balance inflates coefficient norms and worsens Type II bounds, while shrinking $U$ excessively shifts weight to Type I/III sums that are harder to control, so the exponent $\\theta=1/2$ is best possible unconditionally and parameter choice mainly optimizes constants.**\nThis statement accurately captures the central trade-offs and the state of the art.\n-   \"Selecting $U$ and $V$ so that the dominant bilinear Type II lengths are comparable... optimizes large sieve savings\": This is a correct heuristic. The large sieve works best on \"balanced\" bilinear forms.\n-   \"...but does not break the large sieve barrier $Q \\ll x^{1/2}$ without additional cancellation\": This correctly identifies $\\theta=1/2$ as the limit of this method.\n-   The description of the trade-offs is precise: making $U, V$ unbalanced or too small creates sum types that are difficult to estimate.\n-   The conclusion that $\\theta=1/2$ is the best known unconditional exponent and that parameter choice within this framework is about optimization is also correct.\n\n**C. Taking $U$ extremely small, e.g. $U = (\\log x)^2$, and $V$ very large, e.g. $V = x^{9/10}$, maximizes the bilinear product length and thereby allows $Q$ up to $x^{9/10}$ unconditionally; the trade-off is that Type I sums become negligible.**\nThis statement is incorrect. First, a level of distribution of $\\theta=9/10$ would be a monumental result, essentially proving the Elliott-Halberstam conjecture, and is not known unconditionally. Second, the proposed parameter choice is poor. A very small $U$ leads to Type II sums $\\sum_{m>U, k>V} \\dots$ where $m$ can be very small, creating a highly unbalanced and difficult-to-estimate bilinear form. Furthermore, with $V=x^{9/10}$, Type I sums involving convolutions up to length $V$ become intractable with standard methods.\n\n**D. Under the Elliott–Halberstam conjecture one can choose $U$ and $V$ arbitrarily without any impact on the level of distribution, which then holds uniformly up to $Q \\leq x$; in particular, parameter selection is irrelevant once EH is assumed.**\nThis statement is incorrect. The Elliott-Halberstam conjecture is a statement about the behavior of primes, not a tool that makes proof machinery obsolete. Even when assuming EH to prove other results (as in the Polymath8 project on prime gaps), the underlying sieve methods and combinatorial identities (like Vaughan's) must still be carefully applied. An arbitrary choice of $U$ and $V$ (e.g., $U=1, V=x$) would create sums that the method cannot handle, so parameter selection remains a crucial part of the argument structure, even when conditional on EH. Also, EH predicts $Q \\le x^{1-\\varepsilon}$, not $Q \\le x$.\n\nBased on this analysis, option B is the only one that provides a correct and nuanced description of the role of $U$ and $V$ in this context.", "answer": "$$\\boxed{B}$$", "id": "3025857"}]}