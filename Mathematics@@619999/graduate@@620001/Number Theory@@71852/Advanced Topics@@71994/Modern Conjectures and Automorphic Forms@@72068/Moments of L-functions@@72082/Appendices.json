{"hands_on_practices": [{"introduction": "Our exploration into the hands-on practice of moments begins with the most fundamental $L$-function, the Riemann zeta function $\\zeta(s)$. This exercise uses a truncated Dirichlet polynomial as a simplified model for $\\zeta(s)$ on the critical line, a common starting point in the 'recipe' for moment calculations. By explicitly computing the second moment of this toy model, you will uncover the core 'diagonal method' that generates the leading term of the asymptotic, and importantly, you will see why this simple model captures only part of the true behavior, hinting at the deeper structure revealed by the approximate functional equation [@problem_id:3018839].", "problem": "Let $\\zeta(s)$ denote the Riemann zeta function, and let $T \\geq 2$ be a large parameter. Consider the Dirichlet polynomial approximation on the critical line given by\n$$\nS(t) \\coloneqq \\sum_{n \\leq T^{1/2}} n^{-1/2 - i t},\n$$\nas a model for $\\zeta\\!\\left(\\tfrac{1}{2} + i t\\right)$ for $t \\in [0,T]$. Define the model second moment\n$$\nM_{\\mathrm{model}}(T) \\coloneqq \\int_{0}^{T} \\left| S(t) \\right|^{2} \\, dt.\n$$\nStarting from first principles, compute the leading-order asymptotic of $M_{\\mathrm{model}}(T)$ as $T \\to \\infty$, up to and including the coefficient of the $T \\ln T$ term. You may use the well-tested fact that the harmonic sum satisfies\n$$\n\\sum_{n \\leq x} \\frac{1}{n} = \\ln x + \\gamma + o(1),\n$$\nwhere $\\gamma$ is the Eulerâ€“Mascheroni constant. For comparison, it is a classical fact that the true second moment satisfies\n$$\nM_{\\mathrm{true}}(T) \\coloneqq \\int_{0}^{T} \\left| \\zeta\\!\\left(\\tfrac{1}{2} + i t\\right) \\right|^{2} dt = T \\ln T + (2 \\gamma - 1) T + o(T).\n$$\nDetermine the ratio of the coefficients multiplying the leading term $T \\ln T$ in $M_{\\mathrm{model}}(T)$ and $M_{\\mathrm{true}}(T)$. Express your final answer as a simplified rational number.", "solution": "The problem asks for the leading-order asymptotic of a model second moment for the Riemann zeta function and the ratio of its leading coefficient to that of the true second moment.\n\nThe model second moment is defined as $M_{\\mathrm{model}}(T) \\coloneqq \\int_{0}^{T} \\left| S(t) \\right|^{2} \\, dt$, where $S(t) \\coloneqq \\sum_{n \\leq T^{1/2}} n^{-1/2 - i t}$. We are interested in the behavior as $T \\to \\infty$.\n\nFirst, we expand the integrand, $|S(t)|^2$. Recalling that for any complex number $z$, $|z|^2 = z \\overline{z}$, we have:\n$$\n|S(t)|^2 = S(t) \\overline{S(t)} = \\left(\\sum_{m \\leq T^{1/2}} m^{-1/2 - i t}\\right) \\left(\\overline{\\sum_{n \\leq T^{1/2}} n^{-1/2 - i t}}\\right)\n$$\nThe conjugate of the sum is the sum of the conjugates. The conjugate of $n^{-1/2 - it} = n^{-1/2} n^{-it} = n^{-1/2} \\exp(-it \\ln n)$ is $n^{-1/2} \\exp(it \\ln n) = n^{-1/2+it}$. Thus,\n$$\n|S(t)|^2 = \\left(\\sum_{m \\leq T^{1/2}} m^{-1/2 - i t}\\right) \\left(\\sum_{n \\leq T^{1/2}} n^{-1/2 + i t}\\right)\n$$\nWe can express this as a double summation:\n$$\n|S(t)|^2 = \\sum_{m \\leq T^{1/2}} \\sum_{n \\leq T^{1/2}} m^{-1/2} n^{-1/2} m^{-it} n^{it} = \\sum_{m,n \\leq T^{1/2}} (mn)^{-1/2} \\left(\\frac{n}{m}\\right)^{it}\n$$\nNow, we substitute this back into the integral for $M_{\\mathrm{model}}(T)$:\n$$\nM_{\\mathrm{model}}(T) = \\int_{0}^{T} \\left( \\sum_{m,n \\leq T^{1/2}} (mn)^{-1/2} \\left(\\frac{n}{m}\\right)^{it} \\right) \\, dt\n$$\nSince the summation is finite, we can interchange the order of integration and summation:\n$$\nM_{\\mathrm{model}}(T) = \\sum_{m,n \\leq T^{1/2}} (mn)^{-1/2} \\int_{0}^{T} \\left(\\frac{n}{m}\\right)^{it} \\, dt\n$$\nThe integral $\\int_{0}^{T} (n/m)^{it} dt = \\int_{0}^{T} \\exp(it \\ln(n/m)) dt$ behaves differently depending on whether $m=n$ or $m \\neq n$. We separate the sum into two parts: the diagonal terms where $m=n$, and the off-diagonal terms where $m \\neq n$.\n\nCase 1: Diagonal terms ($m=n$).\nWhen $m=n$, we have $n/m = 1$, so $\\ln(n/m) = 0$. The integrand becomes $\\exp(0)=1$. The integral is:\n$$\n\\int_{0}^{T} 1 \\, dt = T\n$$\nThe contribution of the diagonal terms to $M_{\\mathrm{model}}(T)$, let's call it $D(T)$, is:\n$$\nD(T) = \\sum_{n \\leq T^{1/2}} (n \\cdot n)^{-1/2} \\cdot T = \\sum_{n \\leq T^{1/2}} (n^2)^{-1/2} T = T \\sum_{n \\leq T^{1/2}} \\frac{1}{n}\n$$\nThe problem provides the asymptotic expansion for the harmonic sum: $\\sum_{n \\leq x} \\frac{1}{n} = \\ln x + \\gamma + o(1)$. We apply this with $x = T^{1/2}$:\n$$\n\\sum_{n \\leq T^{1/2}} \\frac{1}{n} = \\ln(T^{1/2}) + \\gamma + o(1) = \\frac{1}{2} \\ln T + \\gamma + o(1)\n$$\nSubstituting this into our expression for $D(T)$:\n$$\nD(T) = T \\left( \\frac{1}{2} \\ln T + \\gamma + o(1) \\right) = \\frac{1}{2} T \\ln T + \\gamma T + o(T)\n$$\nThis gives the leading-order behavior.\n\nCase 2: Off-diagonal terms ($m \\neq n$).\nWhen $m \\neq n$, $\\ln(n/m)$ is a non-zero real number. The integral is:\n$$\n\\int_{0}^{T} \\exp(it \\ln(n/m)) \\, dt = \\left[ \\frac{\\exp(it \\ln(n/m))}{i \\ln(n/m)} \\right]_{0}^{T} = \\frac{\\exp(iT \\ln(n/m)) - 1}{i \\ln(n/m)}\n$$\nThe magnitude of this term is bounded:\n$$\n\\left| \\frac{\\exp(iT \\ln(n/m)) - 1}{i \\ln(n/m)} \\right| \\leq \\frac{|\\exp(iT \\ln(n/m))| + |1|}{|i \\ln(n/m)|} = \\frac{2}{|\\ln(n/m)|}\n$$\nThe total contribution from off-diagonal terms, let's call it $O(T)$, is:\n$$\nO(T) = \\sum_{\\substack{m,n \\leq T^{1/2} \\\\ m \\neq n}} (mn)^{-1/2} \\frac{\\exp(iT \\ln(n/m)) - 1}{i \\ln(n/m)}\n$$\nThe magnitude of $O(T)$ is bounded by:\n$$\n|O(T)| \\leq \\sum_{\\substack{m,n \\leq T^{1/2} \\\\ m \\neq n}} \\frac{2(mn)^{-1/2}}{|\\ln(n/m)|}\n$$\nA careful analysis shows this sum is of order $O(T^{1/2} \\ln T)$. Since $\\lim_{T \\to \\infty} \\frac{T^{1/2} \\ln T}{T \\ln T} = \\lim_{T \\to \\infty} \\frac{1}{T^{1/2}} = 0$, the off-diagonal contribution is a lower-order term, i.e., $O(T) = o(T \\ln T)$.\n\nCombining both contributions, we find the asymptotic for $M_{\\mathrm{model}}(T)$:\n$$\nM_{\\mathrm{model}}(T) = D(T) + O(T) = \\frac{1}{2} T \\ln T + \\gamma T + o(T) + o(T \\ln T)\n$$\nThe leading-order asymptotic is therefore:\n$$\nM_{\\mathrm{model}}(T) = \\frac{1}{2} T \\ln T + O(T)\n$$\nThe coefficient of the $T \\ln T$ term in $M_{\\mathrm{model}}(T)$ is $C_{\\mathrm{model}} = \\frac{1}{2}$.\n\nFor comparison, the problem states the true second moment asymptotic:\n$$\nM_{\\mathrm{true}}(T) = \\int_{0}^{T} \\left| \\zeta(\\tfrac{1}{2} + i t) \\right|^{2} dt = T \\ln T + (2 \\gamma - 1) T + o(T)\n$$\nThe coefficient of the $T \\ln T$ term in $M_{\\mathrm{true}}(T)$ is $C_{\\mathrm{true}} = 1$.\n\nThe problem asks for the ratio of these coefficients:\n$$\n\\text{Ratio} = \\frac{C_{\\mathrm{model}}}{C_{\\mathrm{true}}} = \\frac{1/2}{1} = \\frac{1}{2}\n$$\nThis result illustrates that this simple Dirichlet polynomial model only captures half of the main term of the true second moment of the Riemann zeta function. The other half arises from the second sum in the more complete approximate functional equation for $\\zeta(s)$.", "answer": "$$\\boxed{\\frac{1}{2}}$$", "id": "3018839"}, {"introduction": "Having seen the basic mechanism for a single $L$-function, we now generalize to a family of $L$-functions, a central object of study in modern number theory. This problem concerns the family of quadratic twists of a GL(2) automorphic $L$-function, and it explores the crucial relationship between the analytic conductor, the size of the family, and the expected magnitude of its moments [@problem_id:3018821]. This practice will hone your skills in 'analytic bookkeeping' by tracking how parameters scale, building intuition for the principle that the main power-law growth of a family's moment is dictated by the number of its members.", "problem": "Let $f$ be a fixed holomorphic Hecke newform of even integer weight $k \\geq 2$, squarefree level $N \\geq 1$, and trivial nebentypus on the General Linear group of degree two (GL(2)) over $\\mathbb{Q}$. For each fundamental discriminant $d$, let $\\chi_{d}$ denote the associated primitive quadratic Dirichlet character of conductor $\\lvert d \\rvert$, and define the twisted $L$-function $L(s,f \\otimes \\chi_{d})$. Assume throughout that $(d,N)=1$.\n\nAdopt the standard definition of the analytic conductor $C(s,f \\otimes \\chi_{d})$ as the product of the arithmetic conductor $q(f \\otimes \\chi_{d})$ and the archimedean factor contributed by the gamma factors at infinity, evaluated at $s=\\tfrac{1}{2}+it$. For holomorphic forms, the completed $L$-function has a single gamma factor, so the archimedean contribution to the analytic conductor is equivalent (up to a constant depending only on $f$) to a factor of the shape $1+\\lvert t \\rvert$.\n\nWorking at the central point $s=\\tfrac{1}{2}$ (that is, $t=0$), and considering the family of quadratic twists $\\{L(s,f \\otimes \\chi_{d}) : \\lvert d \\rvert \\leq D, (d,N)=1\\}$ with $D \\to \\infty$, do the following:\n\n1. Using only local conductor exponents and standard properties of twists of automorphic representations on GL(2), determine the dependence on $N$ and $\\lvert d \\rvert$ of the analytic conductor $C\\!\\left(\\tfrac{1}{2}, f \\otimes \\chi_{d}\\right)$, up to multiplicative constants depending only on $f$.\n\n2. Let $M_{k}(D)$ denote the $k$-th moment of the central values over the family, defined by\n$$\nM_{k}(D) \\;=\\; \\sum_{\\substack{\\lvert d \\rvert \\leq D \\\\ (d,N)=1}} \\left(L\\!\\left(\\tfrac{1}{2}, f \\otimes \\chi_{d}\\right)\\right)^{k}.\n$$\nDeduce, from first principles about conductor growth and family size (and without invoking unproved moment conjectures), the natural $D$-scale of $M_{k}(D)$ in the sense of its main power of $D$ (that is, the exponent of $D$ governing the magnitude as $D \\to \\infty$, ignoring constants depending only on $f$ and logarithmic factors).\n\nGive your final answer as a pair consisting of:\n- the leading-order dependence on $D$ of the analytic conductor at the center across the family (in terms of $N$ and $D$), and\n- the natural $D$-scale of $M_{k}(D)$.\n\nExpress your final answer as a single row matrix with two entries, in exact symbolic form. Suppress all multiplicative constants depending only on $f$ and all powers of $\\ln D$; your answer should record only the powers of $N$ and $D$ that determine the principal scaling in $D$. No numerical rounding is required.", "solution": "The problem asks for two quantities related to the family of quadratic twists of a GL(2) L-function. First, the scaling of the analytic conductor, and second, the scaling of the $k$-th moment of central values.\n\n**Part 1: Analytic Conductor Dependence**\n\nThe analytic conductor $C(s, f \\otimes \\chi_{d})$ is the product of the arithmetic conductor $q(f \\otimes \\chi_{d})$ and an archimedean component. The problem states that we are at the central point $s = \\frac{1}{2}$, corresponding to $t=0$. The archimedean factor is given to be proportional to $1+\\lvert t \\rvert$, which evaluates to $1$ at $t=0$. Therefore, up to constants depending only on $f$, the analytic conductor at the central point is equal to the arithmetic conductor:\n$$\nC\\left(\\frac{1}{2}, f \\otimes \\chi_{d}\\right) \\propto q(f \\otimes \\chi_{d}).\n$$\nThe arithmetic conductor of an automorphic representation is the product of its local conductor exponents over all primes $p$:\n$$\nq(f \\otimes \\chi_d) = \\prod_{p} p^{a_p(f \\otimes \\chi_d)}.\n$$\nWe analyze the local conductor exponent $a_p(f \\otimes \\chi_d)$ by considering the ramification of the automorphic representation $\\pi_f$ associated with $f$ and the character $\\chi_d$ at each prime $p$.\n\n1.  **Case $p \\nmid Nd$**: At such primes, both the representation $\\pi_f$ (since $p \\nmid N$) and the character $\\chi_d$ (since $p \\nmid d$) are unramified. Their tensor product is also unramified, so the local conductor exponent is $a_p(f \\otimes \\chi_d) = 0$.\n\n2.  **Case $p | N$**: Since $f$ is a newform of squarefree level $N$, the representation $\\pi_f$ is ramified at $p$, and its local conductor exponent is $a_p(f) = 1$. The problem states $(d,N)=1$, so $p \\nmid d$, which means the character $\\chi_d$ is unramified at $p$. Twisting a representation by an unramified character does not change its conductor. Thus, $a_p(f \\otimes \\chi_d) = a_p(f) = 1$.\n\n3.  **Case $p | d$**: The problem states $(d,N)=1$, so $p \\nmid N$. This means the representation $\\pi_f$ is unramified at $p$. The character $\\chi_d$ is ramified at $p$ since $p$ divides its conductor $\\lvert d \\rvert$. For a GL($n$) representation that is unramified at $p$, its twist by a character $\\chi$ ramified at $p$ has a local conductor equal to the $n$-th power of the local conductor of $\\chi$. Here, $n=2$. The local conductor of $\\pi_f \\otimes \\chi_d$ at $p$ is $p^{a_p(f \\otimes \\chi_d)} = (p^{a_p(\\chi_d)})^{2}$. Therefore, the local exponent is $a_p(f \\otimes \\chi_d) = 2a_p(\\chi_d)$.\n\nCombining these results, the arithmetic conductor is:\n$$\nq(f \\otimes \\chi_d) = \\left( \\prod_{p | N} p^{a_p(f \\otimes \\chi_d)} \\right) \\left( \\prod_{p | d} p^{a_p(f \\otimes \\chi_d)} \\right) = \\left( \\prod_{p | N} p^1 \\right) \\left( \\prod_{p | d} p^{2a_p(\\chi_d)} \\right).\n$$\nThe first product is simply the level $N$. The second product can be rewritten as:\n$$\n\\prod_{p | d} (p^{a_p(\\chi_d)})^2 = \\left( \\prod_{p | d} p^{a_p(\\chi_d)} \\right)^2.\n$$\nThe term inside the parentheses is the product of all local conductors of $\\chi_d$ at primes dividing $d$. Since $\\chi_d$ is unramified at primes not dividing its conductor $\\lvert d \\rvert$, this product is precisely the full conductor of the character, which is $\\lvert d \\rvert$.\nThus, we have:\n$$\nq(f \\otimes \\chi_d) = N \\cdot \\lvert d \\rvert^2.\n$$\nThe problem asks for the leading-order dependence on $D$ across the family where $\\lvert d \\rvert \\le D$. The conductor grows with $\\lvert d \\rvert$, reaching its maximum scale when $\\lvert d \\rvert$ is of order $D$. Therefore, the characteristic dependence of the analytic conductor on $N$ and $D$ for this family is $N D^2$.\n\n**Part 2: Natural D-scale of the Moment**\n\nThe $k$-th moment is given by\n$$\nM_{k}(D) = \\sum_{\\substack{\\lvert d \\rvert \\leq D \\\\ (d,N)=1}} \\left(L(\\frac{1}{2}, f \\otimes \\chi_{d})\\right)^{k}.\n$$\nTo deduce the natural $D$-scale from first principles, we analyze the structure of this sum. The size of the moment depends on two factors: the number of terms in the sum (the family size) and the average size of each term.\n\n1.  **Family Size**: The sum is over fundamental discriminants $d$ such that $\\lvert d \\rvert \\leq D$ and $(d,N)=1$. The number of fundamental discriminants $d$ with $\\lvert d \\rvert \\leq D$ is known to be asymptotically proportional to $D$, i.e., $\\sim c_1 D$ for a constant $c_1 = 6/\\pi^2$. The condition $(d,N)=1$ selects a subset of these discriminants with a certain density, which modifies the constant to $c_2$ (depending on $N$) but does not change the linear dependence on $D$. Thus, the number of terms in the sum is of order $D$.\n\n2.  **Average Value**: We consider the average value of $(L(\\frac{1}{2}, f \\otimes \\chi_{d}))^k$ over the family. A fundamental principle in the theory of L-functions is that, for a natural family, the main power-law growth of the moments comes from the size of the family itself. While the analytic conductor of individual L-functions in our family grows polynomially like $D^2$, the L-values themselves are not expected to grow polynomially. This is captured by the LindelÃ¶f Hypothesis, which predicts $L(\\frac{1}{2}, f \\otimes \\chi_d) \\ll (N\\lvert d \\rvert^2)^{\\epsilon}$ for any $\\epsilon > 0$. The significant conductor growth is responsible for the appearance of logarithmic factors in the asymptotic formulas for moments (e.g., via the length of the approximate functional equation), but it does not contribute to the main power of $D$. All known proven results (for small $k$) and general conjectures (for any $k$) for such families show that the average value of $(L(\\frac{1}{2}))^k$ grows as a polynomial in $\\log D$.\n\nThe problem asks for the \"natural $D$-scale,\" which means we should ignore these logarithmic factors and multiplicative constants. Therefore, the average value of $(L(\\frac{1}{2}, f \\otimes \\chi_{d}))^k$ is taken to be of order $1$ with respect to powers of $D$.\n\nCombining these principles:\n$$\nM_k(D) \\approx (\\text{Family Size}) \\times \\text{Average}((L(\\frac{1}{2}))^k) \\propto D \\times (\\text{poly-log factors}).\n$$\nIgnoring the logarithmic factors as requested, the natural $D$-scale of $M_k(D)$ is $D^1$.\n\n**Final Answer Summary**\n-   The leading-order dependence of the analytic conductor is $N D^2$.\n-   The natural $D$-scale of the $k$-th moment $M_k(D)$ is $D$.\nWe present these as a single row matrix as required.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\nN D^2 & D\n\\end{pmatrix}\n}\n$$", "id": "3018821"}, {"introduction": "The final practice bridges the gap between theoretical prediction and computational verification, a vital activity in contemporary number theory. Here, you will design and implement a numerical experiment to estimate the second moment of Dirichlet $L$-functions by constructing a high-fidelity surrogate based on the approximate functional equation (AFE) [@problem_id:3018766]. This capstone exercise requires you to translate abstract conceptsâ€”such as characters, Gauss sums, and root numbersâ€”into concrete computational steps, providing an invaluable, hands-on understanding of how theoretical conjectures about $L$-functions are tested and explored.", "problem": "Let $q$ be an odd prime and consider Dirichlet characters modulo $q$. For a fixed primitive root $g \\pmod{q}$, every residue $a \\in \\{1,2,\\dots,q-1\\}$ can be uniquely written as $a \\equiv g^t \\pmod{q}$ with $t \\in \\{0,1,\\dots,q-2\\}$, and the multiplicative characters may be indexed by $k \\in \\{0,1,\\dots,q-2\\}$ via the rule $\\chi_k(a) = \\exp\\!\\left(\\frac{2\\pi i k t}{q-1}\\right)$ and $\\chi_k(0)=0$. For prime $q$, the character with $k=0$ is the principal character (imprimitive); all other characters are primitive. A Dirichlet $L$-function is defined by $L(s,\\chi) = \\sum_{n \\ge 1} \\chi(n) n^{-s}$ for $\\operatorname{Re}(s) > 1$ and admits analytic continuation and a functional equation relating $s$ and $1-s$ through a root number that depends on $\\chi$. The approximate functional equation (AFE) is a widely used numerical tool to evaluate $L(s,\\chi)$ near the central point $s=\\tfrac{1}{2}$ by expressing it as two complementary Dirichlet-type sums with smooth weights whose effective length scales like $\\sqrt{q}$.\n\nStarting from the definitions of Dirichlet characters modulo $q$, Gauss sums, and the functional equation for Dirichlet $L$-functions, design and implement a numerical experiment to approximate the second moment at the central point,\n$$\nM_2(q) \\coloneqq \\frac{1}{q-2} \\sum_{\\substack{\\chi \\bmod q \\\\ \\chi \\text{ primitive}}} \\left|L\\!\\left(\\tfrac{1}{2},\\chi\\right)\\right|^2,\n$$\nby replacing $L\\!\\left(\\tfrac{1}{2},\\chi\\right)$ with a symmetric AFE-inspired numerical surrogate constructed from the following principled components:\n\n- Use the Gauss sum $\\tau(\\chi) = \\sum_{a=1}^{q-1} \\chi(a) \\exp\\!\\left(\\frac{2\\pi i a}{q}\\right)$ and the parity parameter $a \\in \\{0,1\\}$ determined by $\\chi(-1) = (-1)^a$ to define the root number $\\varepsilon(\\chi) = i^{-a} \\,\\tau(\\chi)/\\sqrt{q}$.\n\n- Construct a smooth, rapidly decaying weight $W(n,q)$ that mirrors the AFEâ€™s effective length at $s=\\tfrac{1}{2}$, and make the explicit numerical choice $W(n,q) = \\exp\\!\\left(-\\pi \\frac{n^2}{q}\\right)$ to ensure decay on the scale $n \\asymp \\sqrt{q}$.\n\n- Form the symmetric surrogate\n$$\nL_{\\mathrm{num}}\\!\\left(\\tfrac{1}{2},\\chi\\right) \\coloneqq \\sum_{n \\ge 1} \\frac{\\chi(n)}{\\sqrt{n}}\\, W(n,q)\\;+\\;\\varepsilon(\\chi)\\, \\sum_{n \\ge 1} \\frac{\\overline{\\chi(n)}}{\\sqrt{n}}\\, W(n,q),\n$$\nand evaluate both sums with a finite truncation chosen to control the tail in view of the decay of $W(n,q)$.\n\nCompute $M_2(q)$ by averaging $\\left|L_{\\mathrm{num}}\\!\\left(\\tfrac{1}{2},\\chi\\right)\\right|^2$ over all primitive characters modulo $q$ (i.e., all characters except the principal one). Your implementation must:\n- Construct characters $\\chi_k$ using a primitive root $g \\pmod{q}$ and discrete logarithms with respect to $g$.\n- Compute $\\tau(\\chi)$ and $\\varepsilon(\\chi)$ for each primitive character.\n- Use the specified weight $W(n,q)$ and a truncation depending on $\\sqrt{q}$ to approximate the symmetric AFE sums.\n- Aggregate the squared magnitudes to approximate $M_2(q)$.\n\nDiscuss, within your algorithmic design and implementation comments, how the expected numerical accuracy behaves as a function of the conductor (here essentially $q$ for primitive characters). In particular, relate the choice of truncation length and the decay of $W(n,q)$ to the error and to the heuristic main term behavior of the second moment, which is known to grow like a slowly varying function of $q$ (for example, a logarithm).\n\nTest Suite:\n- Evaluate the experiment for the following primes, which probe a small-size edge case, a moderate-size case, and a larger but still computationally tractable case: $q=3$, $q=17$, and $q=53$.\n- For each $q$, return the single float $M_2(q)$ computed as above.\n\nFinal Output Format:\n- Your program should produce a single line of output containing the three results as a comma-separated list enclosed in square brackets, in the order $[M_2(3), M_2(17), M_2(53)]$.\n- Each entry must be a standard floating-point number. No physical units or angles apply in this problem.", "solution": "The problem requires the design and implementation of a numerical experiment to approximate the second moment of Dirichlet $L$-functions at the central point, $s=\\tfrac{1}{2}$, for primitive characters modulo an odd prime $q$. The quantity to be computed is\n$$\nM_2(q) \\coloneqq \\frac{1}{q-2} \\sum_{\\substack{\\chi \\bmod q \\\\ \\chi \\text{ primitive}}} \\left|L\\!\\left(\\tfrac{1}{2},\\chi\\right)\\right|^2.\n$$\nThe core of the task is to replace the true value $L(\\tfrac{1}{2},\\chi)$ with a well-defined numerical surrogate $L_{\\mathrm{num}}(\\tfrac{1}{2},\\chi)$ inspired by the approximate functional equation (AFE). The following steps outline the theoretical foundation and algorithmic design for this computation.\n\n### 1. Generation of Dirichlet Characters\nA Dirichlet character $\\chi$ modulo a prime $q$ is a homomorphism from the multiplicative group of integers modulo $q$, $(\\mathbb{Z}/q\\mathbb{Z})^\\times$, to the complex numbers of unit modulus. For a prime $q$, there are $q-1$ such characters. They can be systematically constructed using a primitive root $g$ modulo $q$. Every residue $a \\in \\{1, 2, \\dots, q-1\\}$ is uniquely represented as a power of $g$, i.e., $a \\equiv g^t \\pmod{q}$ for a unique exponent $t \\in \\{0, 1, \\dots, q-2\\}$. The exponent $t$ is the discrete logarithm of $a$ to the base $g$, denoted $t = \\operatorname{ind}_g(a)$.\n\nThe $q-1$ characters are indexed by an integer $k \\in \\{0, 1, \\dots, q-2\\}$. The character $\\chi_k$ is defined by its action on $a \\equiv g^t \\pmod q$ as:\n$$\n\\chi_k(a) = \\exp\\!\\left(\\frac{2\\pi i k t}{q-1}\\right) = \\exp\\!\\left(\\frac{2\\pi i k \\,\\operatorname{ind}_g(a)}{q-1}\\right).\n$$\nBy convention, $\\chi_k(n) = 0$ if $q$ divides $n$. For a prime modulus $q$, the character $\\chi_0$ (with $k=0$) is the principal character, which is imprimitive. All other characters $\\chi_k$ for $k \\in \\{1, 2, \\dots, q-2\\}$ are primitive. The summation in $M_2(q)$ thus runs over these $q-2$ characters.\n\nThe algorithm begins by finding a primitive root $g$ for each prime $q$ and pre-computing a table of discrete logarithms $\\operatorname{ind}_g(a)$ for all $a \\in \\{1, \\dots, q-1\\}$.\n\n### 2. Construction of the Numerical Surrogate $L_{\\mathrm{num}}(\\tfrac{1}{2},\\chi)$\nThe problem defines a specific surrogate for $L(\\tfrac{1}{2},\\chi)$, which is based on its functional equation. The surrogate is:\n$$\nL_{\\mathrm{num}}\\!\\left(\\tfrac{1}{2},\\chi\\right) \\coloneqq \\sum_{n \\ge 1} \\frac{\\chi(n)}{\\sqrt{n}}\\, W(n,q)\\;+\\;\\varepsilon(\\chi)\\, \\sum_{n \\ge 1} \\frac{\\overline{\\chi(n)}}{\\sqrt{n}}\\, W(n,q),\n$$\nwhere $W(n,q)$ is a smooth weight function and $\\varepsilon(\\chi)$ is the root number. Let us define the sum $S(\\chi) = \\sum_{n \\ge 1} \\frac{\\chi(n)}{\\sqrt{n}} W(n,q)$. Since the weight function $W(n,q) = \\exp(-\\pi n^2/q)$ is real-valued, the second sum is the complex conjugate of the first, i.e., $\\sum_{n \\ge 1} \\frac{\\overline{\\chi(n)}}{\\sqrt{n}} W(n,q) = \\overline{S(\\chi)}$. The surrogate simplifies to:\n$$\nL_{\\mathrm{num}}\\!\\left(\\tfrac{1}{2},\\chi\\right) = S(\\chi) + \\varepsilon(\\chi) \\overline{S(\\chi)}.\n$$\nThe computation involves two main components: the root number $\\varepsilon(\\chi)$ and the truncated sum $S(\\chi)$.\n\n#### 2.1. Root Number $\\varepsilon(\\chi)$\nThe root number $\\varepsilon(\\chi)$ is constructed from the Gauss sum $\\tau(\\chi)$ and the character's parity.\nThe Gauss sum for a character $\\chi$ modulo $q$ is defined as:\n$$\n\\tau(\\chi) = \\sum_{a=1}^{q-1} \\chi(a) \\exp\\!\\left(\\frac{2\\pi i a}{q}\\right).\n$$\nThe parity of $\\chi$ is determined by its value at $-1$. A parameter $a \\in \\{0,1\\}$ is defined such that $\\chi(-1) = (-1)^a$. For our construction $\\chi=\\chi_k$, we can find $\\operatorname{ind}_g(-1) = \\operatorname{ind}_g(q-1) = (q-1)/2$. Thus,\n$$\n\\chi_k(-1) = \\exp\\left(\\frac{2\\pi i k (q-1)/2}{q-1}\\right) = \\exp(\\pi i k) = (-1)^k.\n$$\nThis implies the parity parameter is simply $a_k = k \\pmod 2$.\nThe root number is then given by:\n$$\n\\varepsilon(\\chi_k) = i^{-a_k} \\frac{\\tau(\\chi_k)}{\\sqrt{q}}.\n$$\nFor a primitive character, it is a known result that $|\\tau(\\chi)| = \\sqrt{q}$, which ensures that the root number has unit modulus, $|\\varepsilon(\\chi)|=1$.\n\n#### 2.2. Truncated Sum $S(\\chi)$\nThe sums in the definition of $L_{\\mathrm{num}}$ are infinite. For a numerical computation, they must be truncated. The weight function $W(n,q) = \\exp(-\\pi n^2/q)$ is chosen specifically because it decays very rapidly for $n \\gg \\sqrt{q}$. This allows for an effective truncation. We calculate a finite sum up to a limit $N_{\\text{trunc}}$:\n$$\nS(\\chi) \\approx \\sum_{n=1}^{N_{\\text{trunc}}} \\frac{\\chi(n)}{\\sqrt{n}} \\exp\\left(-\\pi \\frac{n^2}{q}\\right).\n$$\nThe truncation length $N_{\\text{trunc}}$ must be chosen to balance accuracy and computational cost. A suitable choice ensures that the first neglected term, at $n=N_{\\text{trunc}}+1$, is smaller than the desired precision (e.g., machine epsilon for double precision, $\\approx 10^{-16}$). The magnitude of this term is approximately $\\frac{1}{\\sqrt{N_{\\text{trunc}}}} \\exp(-\\pi N_{\\text{trunc}}^2/q)$. Setting $N_{\\text{trunc}} = C \\sqrt{q}$ for some constant $C$, the exponential factor becomes $\\exp(-\\pi C^2)$, which can be made arbitrarily small by choosing $C$ large enough. A choice of $C=4$ yields $\\exp(-16\\pi) \\approx 10^{-22}$, which is sufficient for high precision. Therefore, we set $N_{\\text{trunc}} = \\lceil 4\\sqrt{q} \\rceil$.\n\n### 3. Aggregation and Final Result\nThe algorithm proceeds by iterating through all primitive characters, i.e., for $k$ from $1$ to $q-2$. For each $\\chi_k$:\n1.  Compute the Gauss sum $\\tau(\\chi_k)$.\n2.  Determine the parity $a_k=k \\pmod 2$ and compute the root number $\\varepsilon(\\chi_k)$.\n3.  Compute the truncated sum $S(\\chi_k)$.\n4.  Assemble the surrogate $L_{\\mathrm{num}}(\\tfrac{1}{2}, \\chi_k) = S(\\chi_k) + \\varepsilon(\\chi_k) \\overline{S(\\chi_k)}$.\n5.  Calculate its squared magnitude $|L_{\\mathrm{num}}(\\tfrac{1}{2}, \\chi_k)|^2$ and add it to a running total.\n\nAfter summing over all $q-2$ primitive characters, the total is divided by $q-2$ to obtain the final average $M_2(q)$. This process is repeated for each prime $q$ in the test suite. The computational complexity is dominated by iterating through $q-2$ characters and, for each, computing a sum of length $N_{\\text{trunc}} \\propto \\sqrt{q}$, leading to a total complexity of roughly $O(q^{3/2})$. The use of vectorized operations in `numpy` makes this feasible for the specified values of $q$.\n\nThe expected behavior of $M_2(q)$ for large $q$ is governed by conjectures in random matrix theory and number theory, which predict $M_2(q) \\sim c \\log q$ for some constant $c$. The numerical experiment provides data points that can be compared against this predicted slow growth.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom math import gcd\n\ndef _get_prime_factors(num):\n    \"\"\"Computes the set of prime factors of a given integer.\"\"\"\n    factors = set()\n    d = 2\n    temp = num\n    while d * d <= temp:\n        if temp % d == 0:\n            factors.add(d)\n            while temp % d == 0:\n                temp //= d\n        d += 1\n    if temp > 1:\n        factors.add(temp)\n    return list(factors)\n\ndef _find_primitive_root(p):\n    \"\"\"Finds a primitive root modulo a prime p.\"\"\"\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n\n    phi = p - 1\n    prime_factors_phi = _get_prime_factors(phi)\n    \n    for g in range(2, p):\n        is_primitive = True\n        for factor in prime_factors_phi:\n            # Check if order of g is a proper divisor of phi\n            if pow(g, phi // factor, p) == 1:\n                is_primitive = False\n                break\n        if is_primitive:\n            return g\n    return -1  # Should not be reached for a prime p\n\ndef _compute_discrete_logs(g, p):\n    \"\"\"Computes a mapping from residue to discrete logarithm base g mod p.\"\"\"\n    log_map = {1: 0}\n    val = 1\n    for i in range(1, p - 1):\n        val = (val * g) % p\n        log_map[val] = i\n    return log_map\n\ndef solve():\n    \"\"\"\n    Computes an approximation of the second moment of Dirichlet L-functions\n    at the central point for primitive characters modulo q.\n    \"\"\"\n    test_cases = [3, 17, 53]\n    results = []\n\n    # --- Discussion on Accuracy and Truncation ---\n    # The accuracy of the approximation depends on the truncation of the series.\n    # The weight W(n,q) = exp(-pi*n^2/q) decays rapidly. We truncate the sum\n    # at N_trunc such that the terms for n > N_trunc are negligible.\n    # W(N_trunc, q) < 10^-16 => exp(-pi*N_trunc^2/q) < 10^-16\n    # => -pi*N_trunc^2/q < -16*ln(10) ~= -36.8\n    # => N_trunc^2 > (36.8/pi)*q ~= 11.7*q\n    # => N_trunc > sqrt(11.7*q) ~= 3.42 * sqrt(q).\n    # We choose a constant C=4 for safety, setting N_trunc = ceil(4*sqrt(q)).\n    # The error in the sum S(chi) is dominated by the first omitted term, whose\n    # magnitude is ~ 1/sqrt(N_trunc) * W(N_trunc, q). For N_trunc ~ C*sqrt(q),\n    # this error scales roughly as q^(-1/4) * exp(-pi*C^2). The exponential\n    # factor ensures high accuracy, though the q^(-1/4) prefactor indicates a\n    # slow degradation of accuracy with increasing q for a fixed C.\n    # The moment itself is conjectured to grow as log(q), a very slow growth.\n    # Our numerical experiment provides data points to observe this trend at small q.\n    TRUNCATION_C = 4\n\n    for q in test_cases:\n        # Step 1: Find a primitive root and pre-compute discrete logarithms\n        g = _find_primitive_root(q)\n        log_g_map = _compute_discrete_logs(g, q)\n        # Convert dict to numpy array for fast vectorized lookup\n        log_g_array = np.zeros(q, dtype=int)\n        for val, log in log_g_map.items():\n            log_g_array[val] = log\n\n        # Step 2: Set numerical parameters\n        N_trunc = int(np.ceil(TRUNCATION_C * np.sqrt(q)))\n        \n        # Step 3: Pre-compute values for efficiency\n        # For the surrogate L_num sum S(chi)\n        n_vals = np.arange(1, N_trunc + 1)\n        weights = np.exp(-np.pi * n_vals**2 / q)\n        sqrt_n_inv = 1.0 / np.sqrt(n_vals)\n        n_mod_q = n_vals % q\n        \n        # For the Gauss sum\n        exp_vals_gauss = np.exp(2j * np.pi * np.arange(q) / q)\n        a_gauss_sum = np.arange(1, q)\n        t_gauss = log_g_array[a_gauss_sum]\n\n        total_sq_mag = 0.0\n        \n        # Step 4: Iterate over all primitive characters (k=1 to q-2)\n        for k in range(1, q - 1):\n            # A. Compute the character values chi_k(n) for n = 1..N_trunc\n            t_vals = log_g_array[n_mod_q]\n            chi_vals_s = np.exp(2j * np.pi * k * t_vals / (q - 1))\n            chi_vals_s[n_mod_q == 0] = 0.0  # chi(n)=0 if q|n\n\n            # B. Compute the sum S(chi_k)\n            S_k = np.sum(chi_vals_s * sqrt_n_inv * weights)\n            \n            # C. Compute the Gauss sum tau(chi_k)\n            chi_vals_gauss = np.exp(2j * np.pi * k * t_gauss / (q - 1))\n            tau_k = np.sum(chi_vals_gauss * exp_vals_gauss[1:])\n\n            # D. Compute the parity and root number epsilon(chi_k)\n            # Parity a_k is determined by chi_k(-1) = (-1)^a_k.\n            # Since log_g(-1) = (q-1)/2, chi_k(-1) = exp(pi*i*k) = (-1)^k.\n            # Thus, the parity parameter a_k is k mod 2.\n            a_k = k % 2\n            epsilon_k = (1j)**(-a_k) * tau_k / np.sqrt(q)\n\n            # E. Compute the numerical surrogate L_num and its squared magnitude\n            # L_num = S(chi) + epsilon(chi) * S(bar(chi))\n            # S(bar(chi)) is sum over bar(chi(n)), which is conj(S(chi)) as W,n are real.\n            L_num_k = S_k + epsilon_k * np.conj(S_k)\n            total_sq_mag += np.abs(L_num_k)**2\n\n        # Step 5: Calculate the final average M_2(q)\n        if q > 2:\n            M2_q = total_sq_mag / (q - 2)\n        else: # For q=3, q-2=1. Handles this case correctly.\n            M2_q = total_sq_mag\n            \n        results.append(M2_q)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "3018766"}]}