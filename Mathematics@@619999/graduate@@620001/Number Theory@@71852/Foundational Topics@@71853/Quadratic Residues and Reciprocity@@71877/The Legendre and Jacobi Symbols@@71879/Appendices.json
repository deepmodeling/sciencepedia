{"hands_on_practices": [{"introduction": "To truly understand the Jacobi symbol, we must first be comfortable with its computation. This initial exercise provides a direct, hands-on opportunity to apply the fundamental properties—multiplicativity, the supplementary laws for $(\\frac{-1}{n})$ and $(\\frac{2}{n})$, and the law of quadratic reciprocity. By working through a concrete example [@problem_id:1441656], you will develop fluency in the mechanical steps that allow for the efficient evaluation of the symbol without factoring the denominator.", "problem": "In cryptographic algorithms and primality testing, such as the Solovay-Strassen primality test, the efficient computation of the Jacobi symbol is a fundamental operation. The Jacobi symbol, denoted as $(\\frac{a}{n})$, is defined for an integer $a$ and a positive odd integer $n$. A key advantage of the Jacobi symbol is that its value can be determined rapidly without needing to find the prime factorization of the denominator $n$. This is accomplished by applying a set of transformation rules that are analogous in spirit to the steps of the Euclidean algorithm for finding the greatest common divisor.\n\nGiven these computational properties, your task is to compute the value of the Jacobi symbol $(\\frac{38}{105})$. Your final answer should be a single integer.", "solution": "We are asked to compute the Jacobi symbol $(\\frac{38}{105})$. We will use the properties of the Jacobi symbol to simplify the expression until a final value is reached.\n\nThe main properties we will use are:\n1.  Multiplicativity in the numerator: $(\\frac{ab}{n}) = (\\frac{a}{n})(\\frac{b}{n})$.\n2.  The value of $(\\frac{2}{n})$: $(\\frac{2}{n}) = (-1)^{(n^2 - 1)/8}$, which evaluates to $1$ if $n \\equiv 1, 7 \\pmod{8}$ and $-1$ if $n \\equiv 3, 5 \\pmod{8}$.\n3.  Law of Quadratic Reciprocity: For odd coprime integers $m$ and $n$, $(\\frac{m}{n}) = (\\frac{n}{m})(-1)^{\\frac{m-1}{2}\\frac{n-1}{2}}$. The sign term $(-1)^{\\frac{m-1}{2}\\frac{n-1}{2}}$ is $-1$ only if both $m$ and $n$ are congruent to $3 \\pmod{4}$, and is $1$ otherwise.\n4.  Reduction of the numerator: If $a \\equiv b \\pmod{n}$, then $(\\frac{a}{n}) = (\\frac{b}{n})$.\n5.  Perfect square: If $\\gcd(a, n) = 1$, then $(\\frac{a^2}{n}) = 1$.\n\nLet's begin the calculation of $(\\frac{38}{105})$.\n\nStep 1: Apply the multiplicativity property to the numerator.\n$38 = 2 \\times 19$.\n$$\n\\left(\\frac{38}{105}\\right) = \\left(\\frac{2 \\cdot 19}{105}\\right) = \\left(\\frac{2}{105}\\right)\\left(\\frac{19}{105}\\right)\n$$\n\nStep 2: Evaluate the term $(\\frac{2}{105})$.\nWe need to determine the value of $105$ modulo $8$.\n$105 = 13 \\times 8 + 1$, so $105 \\equiv 1 \\pmod{8}$.\nAccording to the rule for $(\\frac{2}{n})$, when $n \\equiv 1 \\pmod{8}$, the value is $1$.\n$$\n\\left(\\frac{2}{105}\\right) = 1\n$$\nSubstituting this back into our expression gives:\n$$\n\\left(\\frac{38}{105}\\right) = 1 \\cdot \\left(\\frac{19}{105}\\right) = \\left(\\frac{19}{105}\\right)\n$$\n\nStep 3: Apply the Law of Quadratic Reciprocity to $(\\frac{19}{105})$.\nWe can flip the numerator and denominator, introducing a potential sign change. The sign depends on the values of the numerator and denominator modulo $4$.\n$m = 19$, $n = 105$.\n$19 = 4 \\times 4 + 3$, so $19 \\equiv 3 \\pmod{4}$.\n$105 = 26 \\times 4 + 1$, so $105 \\equiv 1 \\pmod{4}$.\nSince only one of the numbers ($m=19$) is congruent to $3 \\pmod{4}$, the sign term is $(-1)^{\\frac{19-1}{2}\\frac{105-1}{2}} = (-1)^{9 \\cdot 52} = 1$. Thus, there is no sign change.\n$$\n\\left(\\frac{19}{105}\\right) = \\left(\\frac{105}{19}\\right)\n$$\n\nStep 4: Reduce the numerator by taking it modulo the denominator.\nWe compute $105$ modulo $19$.\n$105 = 5 \\times 19 + 10 = 95 + 10$. So, $105 \\equiv 10 \\pmod{19}$.\nBy the reduction property:\n$$\n\\left(\\frac{105}{19}\\right) = \\left(\\frac{10}{19}\\right)\n$$\n\nStep 5: The calculation is now reduced to finding $(\\frac{10}{19})$. We again use the multiplicativity property.\n$10 = 2 \\times 5$.\n$$\n\\left(\\frac{10}{19}\\right) = \\left(\\frac{2}{19}\\right)\\left(\\frac{5}{19}\\right)\n$$\n\nStep 6: Evaluate the two resulting symbols separately. First, $(\\frac{2}{19})$.\nWe need to determine $19$ modulo $8$.\n$19 = 2 \\times 8 + 3$, so $19 \\equiv 3 \\pmod{8}$.\nAccording to the rule for $(\\frac{2}{n})$, when $n \\equiv 3 \\pmod{8}$, the value is $-1$.\n$$\n\\left(\\frac{2}{19}\\right) = -1\n$$\n\nStep 7: Next, evaluate $(\\frac{5}{19})$. We apply Quadratic Reciprocity again.\n$m = 5$, $n = 19$.\n$5 = 1 \\times 4 + 1$, so $5 \\equiv 1 \\pmod{4}$.\n$19 = 4 \\times 4 + 3$, so $19 \\equiv 3 \\pmod{4}$.\nAgain, only one number is congruent to $3 \\pmod{4}$, so there is no sign change upon flipping.\n$$\n\\left(\\frac{5}{19}\\right) = \\left(\\frac{19}{5}\\right)\n$$\n\nStep 8: Reduce the numerator $19$ modulo $5$.\n$19 = 3 \\times 5 + 4$, so $19 \\equiv 4 \\pmod{5}$.\n$$\n\\left(\\frac{19}{5}\\right) = \\left(\\frac{4}{5}\\right)\n$$\n\nStep 9: Evaluate $(\\frac{4}{5})$.\nSince $4 = 2^2$ is a perfect square and $\\gcd(2, 5) = 1$, its Jacobi symbol is $1$.\n$$\n\\left(\\frac{4}{5}\\right) = \\left(\\frac{2^2}{5}\\right) = 1\n$$\nSo, from Step 7, we have $(\\frac{5}{19}) = 1$.\n\nStep 10: Combine the results from Step 6 and Step 9.\nFrom Step 5, we had $(\\frac{10}{19}) = (\\frac{2}{19})(\\frac{5}{19})$.\n$$\n\\left(\\frac{10}{19}\\right) = (-1)(1) = -1\n$$\n\nStep 11: Trace back our calculations to find the final answer.\nFrom Step 4, $(\\frac{105}{19}) = (\\frac{10}{19}) = -1$.\nFrom Step 3, $(\\frac{19}{105}) = (\\frac{105}{19}) = -1$.\nFrom Step 2, $(\\frac{38}{105}) = (\\frac{19}{105}) = -1$.\n\nThus, the final value of the Jacobi symbol is $-1$.", "answer": "$$\\boxed{-1}$$", "id": "1441656"}, {"introduction": "While the Jacobi symbol $(\\frac{a}{n})$ generalizes the Legendre symbol, it does not fully inherit its properties regarding solvability. This practice explores a crucial distinction: a Jacobi symbol value of $1$ does not guarantee that $a$ is a quadratic residue modulo a composite $n$. This exercise [@problem_id:3027697] challenges you to identify and analyze a \"pseudo-square\"—a case where $(\\frac{a}{n})=1$ but the congruence $x^2 \\equiv a \\pmod{n}$ has no solution—thereby deepening your understanding of the symbol's true meaning.", "problem": "Let $p$ and $q$ be distinct odd primes, and let $n=pq$. The Legendre symbol $(a/p)$ for odd prime $p$ is defined by $(a/p)=1$ if and only if the congruence $x^2\\equiv a \\pmod p$ has a solution with $p\\nmid a$, and $(a/p)=-1$ if and only if the congruence $x^2\\equiv a \\pmod p$ has no solution with $p\\nmid a$, and $(a/p)=0$ if $p\\mid a$. The Jacobi symbol $(a/n)$ for odd $n$ with prime factorization $n=\\prod_{i=1}^k p_i^{e_i}$ is defined by $(a/n)=\\prod_{i=1}^k (a/p_i)^{e_i}$, and for squarefree $n=pq$ it simplifies to $(a/n)=(a/p)(a/q)$. The Chinese Remainder Theorem (CRT) states that for $\\gcd(p,q)=1$, the system of congruences $x\\equiv x_1\\pmod p$, $x\\equiv x_2\\pmod q$ has a solution $x\\pmod{pq}$ for any given $x_1$ and $x_2$, and in particular $x^2\\equiv a\\pmod{pq}$ is solvable if and only if $x^2\\equiv a\\pmod p$ and $x^2\\equiv a\\pmod q$ are both solvable.\n\nUsing only these foundational definitions and facts, identify a concrete pair $(n,a)$ with $n=pq$ and $p\\equiv q\\equiv 3\\bmod 4$ such that the Jacobi symbol $(a/n)=1$ but the congruence $x^2\\equiv a\\pmod n$ has no solution. Your choice must satisfy the modular condition on $p$ and $q$, and you must recognize the obstruction that prevents solvability despite $(a/n)=1$.\n\nWhich option satisfies all of these requirements?\n\nA. $n=21$, $a=5$.\n\nB. $n=33$, $a=4$.\n\nC. $n=77$, $a=2$.\n\nD. $n=35$, $a=6$.", "solution": "The task is to identify a pair $(n,a)$ from the given options that satisfies a specific set of conditions. Let us first analyze these conditions to establish a clear criterion for evaluation.\n\nThe conditions are:\n1.  $n = pq$, where $p$ and $q$ are distinct odd primes.\n2.  $p \\equiv 3 \\pmod 4$ and $q \\equiv 3 \\pmod 4$.\n3.  The Jacobi symbol $(a/n) = 1$.\n4.  The congruence $x^2 \\equiv a \\pmod n$ has no solution.\n\nThe problem provides that $x^2 \\equiv a \\pmod n$ is solvable if and only if both congruences $x^2 \\equiv a \\pmod p$ and $x^2 \\equiv a \\pmod q$ are solvable. In terms of the Legendre symbol, this means that $x^2 \\equiv a \\pmod n$ is solvable if and only if $(a/p) = 1$ and $(a/q) = 1$. Note that we must have $p \\nmid a$ and $q \\nmid a$ for the Legendre symbol to be $\\pm 1$; if $p \\mid a$, then $(a/p)=0$, the congruence $x^2 \\equiv a \\pmod p$ becomes $x^2 \\equiv 0 \\pmod p$ which has solution $x=0$. If this were the case for $a \\neq 0$, then $a$ would be a multiple of $p$, and the problem of solvability modulo $n=pq$ becomes more complex. We shall assume $\\gcd(a,n)=1$, which is typical for this type of problem and true for all provided options.\n\nThe requirement that $x^2 \\equiv a \\pmod n$ has no solution implies that it is not the case that both $(a/p)=1$ and $(a/q)=1$. Thus, at least one of $(a/p)$ or $(a/q)$ must be $-1$.\n\nThe requirement on the Jacobi symbol is $(a/n) = 1$. Given the definition $(a/n) = (a/p)(a/q)$, we have $(a/p)(a/q) = 1$.\n\nCombining these two logical consequences, the only way to satisfy $(a/p)(a/q) = 1$ while at least one of the symbols is $-1$ is for both to be $-1$. That is, we must have:\n$$(\\frac{a}{p}) = -1 \\quad \\text{and} \\quad (\\frac{a}{q}) = -1$$\nThis is the \"obstruction\" the problem refers to: despite the product of the Legendre symbols being $1$, yielding a Jacobi symbol of $1$, the individual non-solvability of the congruences modulo the prime factors prevents a solution modulo the composite number $n$.\n\nTherefore, we must find an option $(n, a)$ such that $n=pq$ with $p, q \\equiv 3 \\pmod 4$, and where $(a/p) = -1$ and $(a/q) = -1$. We will evaluate each option against these criteria, using the definition of the Legendre symbol by enumerating the quadratic residues modulo each prime factor.\n\n**A. $n=21$, $a=5$.**\nFirst, we check the prime factors of $n = 21$. We have $n=3 \\times 7$. Let $p=3$ and $q=7$. Both are distinct odd primes.\nWe check the modular condition:\n$p=3 \\equiv 3 \\pmod 4$. This is satisfied.\n$q=7 \\equiv 3 \\pmod 4$. This is satisfied.\nNext, we evaluate the Legendre symbols $(5/3)$ and $(5/7)$.\nFor $(5/3)$: $5 \\equiv 2 \\pmod 3$. We check if $2$ is a quadratic residue modulo $3$. The non-zero residues are $1$ and $2$. Squaring them gives $1^2 \\equiv 1 \\pmod 3$ and $2^2 \\equiv 4 \\equiv 1 \\pmod 3$. The set of quadratic residues modulo $3$ is $\\{1\\}$. Since $2$ is not in this set, $(2/3) = -1$. Thus, $(5/3) = -1$.\nFor $(5/7)$: We check if $5$ is a quadratic residue modulo $7$. The quadratic residues modulo $7$ are $1^2 \\equiv 1$, $2^2 \\equiv 4$, $3^2 \\equiv 9 \\equiv 2$. The set of quadratic residues is $\\{1, 2, 4\\}$. Since $5$ is not in this set, $(5/7)=-1$.\nBoth conditions $(a/p)=-1$ and $(a/q)=-1$ are met.\nThis implies that the Jacobi symbol $(5/21) = (5/3)(5/7) = (-1)(-1) = 1$, satisfying condition 3.\nAlso, since $(5/3)=-1$, the congruence $x^2 \\equiv 5 \\pmod 3$ has no solution, which in turn means $x^2 \\equiv 5 \\pmod{21}$ has no solution, satisfying condition 4.\nThis option satisfies all requirements.\nVerdict: **Correct**.\n\n**B. $n=33$, $a=4$.**\nFirst, we check the prime factors of $n = 33$. We have $n=3 \\times 11$. Let $p=3$ and $q=11$. Both are distinct odd primes.\nWe check the modular condition:\n$p=3 \\equiv 3 \\pmod 4$. This is satisfied.\n$q=11 \\equiv 3 \\pmod 4$. This is satisfied.\nNext, we examine the congruence $x^2 \\equiv 4 \\pmod{33}$.\nThis congruence is clearly solvable, as $x=2$ is a solution ($2^2 = 4$). The problem requires that the congruence $x^2 \\equiv a \\pmod n$ has no solution. This option fails this crucial condition. For completeness, $(4/3) = (1/3) = 1$ and $(4/11) = 1$, so $(4/33)=1$. This is the case of a true quadratic residue, not a pseudo-square.\nVerdict: **Incorrect**.\n\n**C. $n=77$, $a=2$.**\nFirst, we check the prime factors of $n = 77$. We have $n=7 \\times 11$. Let $p=7$ and $q=11$. Both are distinct odd primes.\nWe check the modular condition:\n$p=7 \\equiv 3 \\pmod 4$. This is satisfied.\n$q=11 \\equiv 3 \\pmod 4$. This is satisfied.\nNext, we evaluate the Legendre symbols $(2/7)$ and $(2/11)$.\nFor $(2/7)$: The quadratic residues modulo $7$ are $\\{1^2, 2^2, 3^2\\} \\pmod 7 = \\{1, 4, 2\\}$. Since $2$ is in this set, $(2/7)=1$.\nFor $(2/11)$: The quadratic residues modulo $11$ are $\\{1^2, 2^2, 3^2, 4^2, 5^2\\} \\pmod{11} = \\{1, 4, 9, 16 \\equiv 5, 25 \\equiv 3\\}$. Since $2$ is not in this set, $(2/11)=-1$.\nThe Jacobi symbol is $(2/77) = (2/7)(2/11) = (1)(-1) = -1$. This fails the condition that $(a/n)=1$.\nVerdict: **Incorrect**.\n\n**D. $n=35$, $a=6$.**\nFirst, we check the prime factors of $n = 35$. We have $n=5 \\times 7$. Let $p=5$ and $q=7$.\nWe check the modular condition:\n$p=5 \\equiv 1 \\pmod 4$.\n$q=7 \\equiv 3 \\pmod 4$.\nThe condition that both prime factors must be congruent to $3 \\pmod 4$ is not met. Therefore, this option is invalid from the start.\nVerdict: **Incorrect**.\n\nBased on the systematic analysis, only option A satisfies all the stipulated conditions of the problem.", "answer": "$$\\boxed{A}$$", "id": "3027697"}, {"introduction": "The theoretical elegance of the Jacobi symbol's properties translates directly into powerful computational tools essential for applications like primality testing and cryptography. This practice guides you to formalize the calculation process into a complete algorithm, similar in structure to the binary Euclidean algorithm for computing the greatest common divisor. By designing and implementing this algorithm [@problem_id:3027698], you will bridge the gap between abstract theory and practical, efficient computation.", "problem": "Let $n$ be a positive odd integer and let $a$ be an arbitrary integer. The Jacobi symbol $(a/n)$ is a generalization of the Legendre symbol $(a/p)$ from an odd prime $p$ to an odd composite $n$. The goal is to derive, justify, and implement a binary greatest common divisor (GCD)-like algorithm that computes $(a/n)$ using only fundamental properties of quadratic residues and reciprocity, without factoring $n$.\n\nStarting point and constraints:\n- Use only the following foundational facts:\n  - The definition of the Legendre symbol $(a/p)$ for odd prime $p$ and of the Jacobi symbol $(a/n)$ for odd $n$, together with its multiplicativity in the numerator and denominator.\n  - The quadratic reciprocity law: for odd coprime integers $a$ and $n$, $(a/n)\\,(n/a)=(-1)^{\\frac{(a-1)(n-1)}{4}}$.\n  - The supplementary laws: $(-1/n)=(-1)^{\\frac{n-1}{2}}$ and $(2/n)=(-1)^{\\frac{n^2-1}{8}}$ for odd $n$.\n  - The reduction property: $(a/n)=(a \\bmod n\\,/\\,n)$.\n- Design a reduction process on the pair $(a,n)$ that mimics the binary GCD approach:\n  - Repeatedly remove factors of $2$ from the numerator using $(2/n)$ to update the accumulated sign.\n  - Apply reciprocity to swap the roles of $a$ and $n$ whenever advantageous, updating the sign according to the parity condition implied by reciprocity.\n  - Reduce the new numerator by modulus to ensure progress.\n- Track sign changes explicitly so that the algorithm maintains an invariant expressing the current value of $(a/n)$ as a product of the accumulated sign and a reduced-symbol to be further processed.\n- Terminate with a well-defined rule that returns an integer in the set $\\{-1,0,1\\}$:\n  - If $\\gcd(a,n)>1$ at termination, the result must be $0$.\n  - If the denominator has been reduced to $1$, the result must be the accumulated sign.\n- Do not use factorization of $n$ or any non-fundamental \"black-box\" shortcuts.\n\nImplement a complete, runnable program that:\n- Computes $(a/n)$ using the above design for each test case.\n- Uses only integer arithmetic.\n- Produces a single line of output containing the results as a comma-separated list enclosed in square brackets.\n\nTest suite:\n- Case $1$: $a=5$, $n=11$.\n- Case $2$: $a=2$, $n=21$.\n- Case $3$: $a=10$, $n=21$.\n- Case $4$: $a=0$, $n=33$.\n- Case $5$: $a=7$, $n=15$.\n- Case $6$: $a=-3$, $n=35$.\n- Case $7$: $a=21$, $n=35$.\n- Case $8$: $a=1234567$, $n=1$.\n- Case $9$: $a=5$, $n=289$.\n- Case $10$: $a=3$, $n=11$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,\\dots,r_{10}]$), where each $r_i$ is the integer value of the Jacobi symbol in $\\{-1,0,1\\}$ for the corresponding case.", "solution": "The problem requires the derivation and implementation of an algorithm to compute the Jacobi symbol $(a/n)$ for an integer $a$ and a positive odd integer $n$. The algorithm must be designed in a style similar to the binary GCD algorithm and must rely solely on a given set of fundamental properties of the Jacobi symbol, without factoring $n$.\n\nThe core principle behind such an algorithm is to define a set of transformations on a state, which reduce the complexity of the problem at each step while preserving the final result. For the Jacobi symbol $(a/n)$, the state can be represented by a triplet $(a, n, s)$, where the quantity to be computed is $s \\cdot (a/n)$. The algorithm starts with an initial state and iteratively applies transformation rules until it reaches a terminal state where the value is known.\n\nThe initial state is $(a_0, n_0, 1)$, where $a_0$ and $n_0$ are the inputs to the problem. We want to find the value of $1 \\cdot (a_0/n_0)$. The algorithm proceeds as follows:\n\n1.  **Base Cases:** The definition specifies that $(a/1)=1$ for any integer $a$. Therefore, if $n=1$, the result is $1$. Also, by definition, if $\\gcd(a,n) > 1$, then $(a/n) = 0$. This case is handled by observing that if the algorithm's state evolves such that $a$ becomes $0$ while $n>1$, it implies that an earlier pair $(a', n')$ in the reduction sequence had $n'$ as a divisor of $a'$, which preserves the greatest common divisor. Thus, the original $\\gcd(a_0, n_0)$ must have been greater than $1$.\n\n2.  **Handling Negative Numerator:** The problem statement includes negative values for $a$. We can handle this using the supplementary law for $(-1/n)$. Using the multiplicative property $(ab/n)=(a/n)(b/n)$, we can write $(-|a|/n) = (-1/n)(|a|/n)$. The law states $(-1/n) = (-1)^{\\frac{n-1}{2}}$. This factor is $-1$ if $(n-1)/2$ is odd (i.e., $n \\equiv 3 \\pmod 4$) and $1$ if $(n-1)/2$ is even (i.e., $n \\equiv 1 \\pmod 4$). Thus, if $a$ is negative, we make it positive and multiply the accumulated sign $s$ by $-1$ if $n \\equiv 3 \\pmod 4$.\n\n3.  **Reduction of Numerator:** The property $(a/n) = (a \\bmod n\\,/\\,n)$ allows us to reduce the magnitude of $a$. We can replace $a$ with $a \\bmod n$ at any time. This step is crucial for ensuring the algorithm terminates, as it reduces the size of the numbers involved.\n\n4.  **Extracting Factors of 2:** This step gives the algorithm its \"binary GCD\" character. Any even numerator $a$ can be written as $a=2^k \\cdot a'$ where $a'$ is odd. Using multiplicativity, $(a/n) = (2^k a'/n) = (2/n)^k (a'/n)$. For each factor of $2$, we multiply the accumulated sign $s$ by $(2/n)$. The second supplementary law gives $(2/n) = (-1)^{\\frac{n^2-1}{8}}$. This factor is $-1$ if $(n^2-1)/8$ is odd (i.e., $n \\equiv 3, 5 \\pmod 8$) and $1$ otherwise (i.e., $n \\equiv 1, 7 \\pmod 8$). We can therefore remove all factors of $2$ from $a$, count them, say $k$ factors, and if $k$ is odd, multiply $s$ by $-1$ if $n \\equiv 3, 5 \\pmod 8$.\n\n5.  **Quadratic Reciprocity:** After the previous steps, $a$ is positive, odd, and less than $n$. If $a=1$, the symbol $(1/n)=1$, and the value is the accumulated sign $s$. If $a>1$, we apply the law of quadratic reciprocity: $(a/n)(n/a) = (-1)^{\\frac{(a-1)(n-1)}{4}}$. This allows us to swap the numerator and denominator: $(a/n) = (n/a) \\cdot (-1)^{\\frac{(a-1)(n-1)}{4}}$. The exponent is odd if and only if both $(a-1)/2$ and $(n-1)/2$ are odd, which means $a \\equiv 3 \\pmod 4$ and $n \\equiv 3 \\pmod 4$. So, if both $a$ and $n$ are congruent to $3 \\pmod 4$, we multiply $s$ by $-1$. We then swap $a$ and $n$. The new problem is to evaluate $(n_{old}/a_{old})$, which we can again reduce using the modulo property: $(n_{old} \\bmod a_{old} \\,/\\, a_{old})$.\n\nThe complete algorithm combines these steps in a loop that terminates because the pair of integers $(a,n)$ decreases in magnitude with each application of reciprocity and reduction, similar to the Euclidean algorithm.\n\nThe algorithm is structured as follows:\n- Initialize sign $s=1$.\n- Handle negative $a$ and apply initial reduction $a \\leftarrow a \\bmod n$.\n- Enter a loop that continues as long as $a \\neq 0$:\n    - Remove all factors of $2$ from $a$, updating $s$ according to the law for $(2/n)$.\n    - After this, $a$ is odd. If $a=1$, the loop terminates and the answer is $s$.\n    - Apply the reciprocity law to swap $a$ and $n$, updating $s$ if necessary.\n    - Reduce the new $a$ modulo the new $n$.\n- If the loop terminates because $a$ becomes $0$, the result is $0$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the Jacobi symbol for a list of test cases and prints the results.\n    \"\"\"\n    test_cases = [\n        (5, 11),\n        (2, 21),\n        (10, 21),\n        (0, 33),\n        (7, 15),\n        (-3, 35),\n        (21, 35),\n        (1234567, 1),\n        (5, 289),\n        (3, 11),\n    ]\n\n    def jacobi(a, n):\n        \"\"\"\n        Computes the Jacobi symbol (a/n) using a binary GCD-like algorithm.\n\n        Args:\n            a: An arbitrary integer.\n            n: A positive odd integer.\n        \n        Returns:\n            An integer in {-1, 0, 1}.\n        \"\"\"\n        # Per the problem statement, n is a positive odd integer.\n        # Rule: (a/1) = 1\n        if n == 1:\n            return 1\n\n        # State initialization: the desired value is s * (a/n)\n        s = 1\n\n        # Step 1: Handle negative a using (-1/n) = (-1)^((n-1)/2)\n        if a  0:\n            a = -a\n            # Sign flips if n = 3 (mod 4)\n            if (n  3) == 3:  # n % 4 == 3\n                s = -s\n        \n        # Step 2: Initial reduction\n        a %= n\n\n        # Main loop: reduces (a,n) until a is 0 or 1\n        while a != 0:\n            # Step 3: Remove factors of 2 from a, using (2/n) = (-1)^((n^2-1)/8)\n            # k is the number of factors of 2 in a.\n            # (a  -a) isolates the lowest set bit. Its bit_length - 1 is the number of trailing zeros.\n            k = (a  -a).bit_length() - 1\n            a >>= k\n            \n            # If k is odd, update sign based on n mod 8.\n            if (k  1):  # k % 2 == 1\n                n_mod_8 = n  7  # n % 8\n                if n_mod_8 == 3 or n_mod_8 == 5:\n                    s = -s\n            \n            # Base case for termination\n            if a == 1:\n                return s\n\n            # Step 4: Apply quadratic reciprocity: (a/n) = (n/a) * (-1)^(((a-1)/2)*((n-1)/2))\n            # Sign flips if a = 3 (mod 4) and n = 3 (mod 4)\n            if (a  3) == 3 and (n  3) == 3:\n                s = -s\n            \n            # Step 5: Swap a and n, and reduce. This ensures progress.\n            a, n = n, a\n            a %= n\n        \n        # If loop terminates, a became 0, which implies gcd(original_a, original_n) > 1.\n        return 0\n\n    results = [jacobi(a, n) for a, n in test_cases]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3027698"}]}