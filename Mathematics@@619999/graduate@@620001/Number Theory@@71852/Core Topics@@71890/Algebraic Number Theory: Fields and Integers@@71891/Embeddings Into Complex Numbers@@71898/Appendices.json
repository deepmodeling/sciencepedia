{"hands_on_practices": [{"introduction": "Our first practice grounds the abstract concept of embeddings in the most accessible setting: quadratic number fields. This exercise [@problem_id:3019969] asks you to determine the signature $(r_1, r_2)$ of $K=\\mathbb{Q}(\\sqrt{d})$ based on the sign of the squarefree integer $d$. By working from first principles—linking the embeddings to the roots of the minimal polynomial—you will build a crucial intuition for how the arithmetic of a field's definition dictates the geometric nature of its embeddings into the complex numbers.", "problem": "Let $d\\in\\mathbb{Z}$ be a squarefree integer with $d\\neq 1$. Consider the quadratic number field $K=\\mathbb{Q}(\\sqrt{d})$. Using only the core definitions and facts of algebraic number theory—specifically, the definition of the signature $(r_{1},r_{2})$ of a number field (where $r_{1}$ is the number of field embeddings of $K$ into $\\mathbb{R}$ and $r_{2}$ is the number of conjugate pairs of field embeddings of $K$ into $\\mathbb{C}\\setminus\\mathbb{R}$), the characterization of field embeddings of a simple extension by the roots of the minimal polynomial, and the irreducibility of $x^{2}-d$ over $\\mathbb{Q}$ when $d$ is squarefree and not a square in $\\mathbb{Q}$, determine the signature $(r_{1},r_{2})$ of $K$ in terms of the sign of $d$. Present the final answer as a single row vector $\\begin{pmatrix}r_{1}  r_{2}\\end{pmatrix}$ expressed exactly and justified by first principles.", "solution": "The problem statement is subjected to validation.\n\n### Step 1: Extract Givens\n-   $d \\in \\mathbb{Z}$\n-   $d$ is a squarefree integer.\n-   $d \\neq 1$.\n-   $K = \\mathbb{Q}(\\sqrt{d})$ is a quadratic number field.\n-   The signature of a number field is $(r_{1}, r_{2})$.\n-   $r_{1}$ is the number of field embeddings of $K$ into $\\mathbb{R}$.\n-   $r_{2}$ is the number of conjugate pairs of field embeddings of $K$ into $\\mathbb{C} \\setminus \\mathbb{R}$.\n-   The field embeddings of a simple extension are characterized by the roots of the minimal polynomial.\n-   The polynomial $x^{2}-d$ is irreducible over $\\mathbb{Q}$.\n-   The task is to determine $(r_{1}, r_{2})$ in terms of the sign of $d$.\n-   The final answer must be a single row vector $\\begin{pmatrix} r_{1}  r_{2} \\end{pmatrix}$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is well-defined and mathematically sound. It is a standard problem in introductory algebraic number theory.\n1.  **Scientific or Factual Unsoundness**: The premises are factually correct within the framework of modern algebra and number theory. The irreducibility of $x^2-d$ for a squarefree integer $d \\neq 1$ over $\\mathbb{Q}$ is a standard result, ensuring that $K=\\mathbb{Q}(\\sqrt{d})$ is a degree-$2$ extension of $\\mathbb{Q}$. The definitions of embeddings and signature are standard. The problem does not violate any scientific or mathematical principles.\n2.  **Non-Formalizable or Irrelevant**: The problem is formal and directly pertains to the specified topic of number fields.\n3.  **Incomplete or Contradictory Setup**: The problem is self-contained and provides all necessary conditions and definitions. The conditions on $d$ are consistent and standard for defining a quadratic field.\n4.  **Unrealistic or Infeasible**: Not applicable, as the problem is purely mathematical.\n5.  **Ill-Posed or Poorly Structured**: The problem is well-posed, leading to a unique solution that depends on the specified parameter $d$.\n6.  **Pseudo-Profound, Trivial, or Tautological**: The problem is a fundamental exercise that requires a clear application of core definitions, making it neither trivial nor pseudo-profound.\n7.  **Outside Scientific Verifiability**: The problem is a mathematical derivation, verifiable by logical proof.\n\n### Step 3: Verdict and Action\nThe problem is deemed valid. A solution will be provided.\n\nThe number field is $K = \\mathbb{Q}(\\sqrt{d})$, where $d$ is a squarefree integer and $d \\neq 1$. Since $d$ is not a square in $\\mathbb{Q}$, the polynomial $p(x) = x^{2} - d$ is irreducible over $\\mathbb{Q}$ and is the minimal polynomial of $\\sqrt{d}$. Consequently, the degree of the field extension is $[K:\\mathbb{Q}] = 2$.\n\nThe field embeddings of $K$ into the complex numbers $\\mathbb{C}$ are field homomorphisms $\\sigma: K \\to \\mathbb{C}$ that fix the base field $\\mathbb{Q}$. Any such embedding is completely determined by its action on the generator $\\sqrt{d}$. Let $\\sigma$ be such an embedding. Applying $\\sigma$ to the equation $(\\sqrt{d})^{2} - d = 0$ yields:\n$$ \\sigma((\\sqrt{d})^{2} - d) = \\sigma((\\sqrt{d})^{2}) - \\sigma(d) = (\\sigma(\\sqrt{d}))^{2} - d = 0 $$\nThis shows that $\\sigma(\\sqrt{d})$ must be a root of the polynomial $p(x) = x^{2}-d$. The roots of this polynomial in $\\mathbb{C}$ are $\\sqrt{d}$ and $-\\sqrt{d}$. Since the degree of the extension is $2$, there are exactly $2$ distinct embeddings of $K$ into $\\mathbb{C}$. Let us denote them by $\\sigma_1$ and $\\sigma_2$:\n1.  $\\sigma_1$, defined by $\\sigma_1(\\sqrt{d}) = \\sqrt{d}$. This is the identity embedding.\n2.  $\\sigma_2$, defined by $\\sigma_2(\\sqrt{d}) = -\\sqrt{d}$. This is the conjugation embedding.\n\nThe signature of the number field $K$ is the pair $(r_{1}, r_{2})$, where $r_{1}$ is the number of real embeddings (homomorphisms $\\sigma: K \\to \\mathbb{R}$) and $r_{2}$ is the number of conjugate pairs of non-real complex embeddings (homomorphisms $\\sigma: K \\to \\mathbb{C}\\setminus\\mathbb{R}$). The total number of embeddings into $\\mathbb{C}$ is given by the degree of the extension, related by the formula $r_{1} + 2r_{2} = [K:\\mathbb{Q}]$. For our case, this is:\n$$ r_{1} + 2r_{2} = 2 $$\nAn embedding $\\sigma$ is a real embedding if and only if its image $\\sigma(K)$ is a subfield of $\\mathbb{R}$. For an element $\\alpha = a + b\\sqrt{d} \\in K$ (with $a, b \\in \\mathbb{Q}$), its image is $\\sigma(\\alpha) = a + b\\sigma(\\sqrt{d})$. The image $\\sigma(K)$ is contained in $\\mathbb{R}$ if and only if $\\sigma(\\sqrt{d})$ is a real number. This depends on the sign of $d$. We analyze the two possible cases for the sign of $d$ (note that $d \\neq 0$ since $d$ is squarefree).\n\n**Case 1: $d > 0$**\nIf $d$ is a positive integer, its square root $\\sqrt{d}$ is a positive real number. The two roots of $p(x) = x^{2}-d$ are $\\sqrt{d}$ and $-\\sqrt{d}$, both of which are real numbers.\n-   For the embedding $\\sigma_1$, we have $\\sigma_1(\\sqrt{d}) = \\sqrt{d} \\in \\mathbb{R}$. Thus, $\\sigma_1$ is a real embedding.\n-   For the embedding $\\sigma_2$, we have $\\sigma_2(\\sqrt{d}) = -\\sqrt{d} \\in \\mathbb{R}$. Thus, $\\sigma_2$ is also a real embedding.\nIn this case, there are $2$ real embeddings, so $r_{1} = 2$. Substituting this into the degree equation $r_{1} + 2r_{2} = 2$, we get $2 + 2r_{2} = 2$, which implies $r_{2} = 0$.\nThe signature of $K$ for $d > 0$ is $(2, 0)$.\n\n**Case 2: $d  0$**\nIf $d$ is a negative integer, let $d = -n$ for some positive integer $n > 0$. The square root of $d$ is an imaginary number: $\\sqrt{d} = \\sqrt{-n} = i\\sqrt{n}$, where $i$ is the imaginary unit and $\\sqrt{n}$ is a real number. The two roots of $p(x) = x^2 - d$ are $i\\sqrt{n}$ and $-i\\sqrt{n}$, neither of which is a real number.\n-   For the embedding $\\sigma_1$, we have $\\sigma_1(\\sqrt{d}) = i\\sqrt{n} \\in \\mathbb{C}\\setminus\\mathbb{R}$. Thus, $\\sigma_1$ is a non-real complex embedding.\n-   For the embedding $\\sigma_2$, we have $\\sigma_2(\\sqrt{d}) = -i\\sqrt{n} \\in \\mathbb{C}\\setminus\\mathbb{R}$. Thus, $\\sigma_2$ is also a non-real complex embedding.\nIn this case, there are no real embeddings, so $r_{1} = 0$. Substituting this into the degree equation $r_{1} + 2r_{2} = 2$, we get $0 + 2r_{2} = 2$, which implies $r_{2} = 1$.\nThe two non-real embeddings $\\sigma_1$ and $\\sigma_2$ form a conjugate pair. For any element $\\alpha = a + b\\sqrt{d} \\in K$, we have $\\sigma_1(\\alpha) = a + b(i\\sqrt{n})$ and $\\sigma_2(\\alpha) = a - b(i\\sqrt{n}) = \\overline{a + b(i\\sqrt{n})} = \\overline{\\sigma_1(\\alpha)}$. This confirms that there is $1$ pair of complex conjugate embeddings.\nThe signature of $K$ for $d  0$ is $(0, 1)$.\n\nTo express the signature $(r_{1}, r_{2})$ as a single formula in terms of the sign of $d$, we can use the signum function, $\\text{sgn}(d)$, which is $1$ for $d > 0$ and $-1$ for $d  0$.\nIf $d > 0$, we have $(r_{1}, r_{2}) = (2, 0)$.\nIf $d  0$, we have $(r_{1}, r_{2}) = (0, 1)$.\nWe can write $r_1$ and $r_2$ as:\n$$ r_{1} = 1 + \\text{sgn}(d) $$\n$$ r_{2} = \\frac{1 - \\text{sgn}(d)}{2} $$\nChecking these expressions:\n-   If $d>0$, $\\text{sgn}(d)=1$: $r_1 = 1+1=2$, $r_2 = \\frac{1-1}{2}=0$. Correct.\n-   If $d0$, $\\text{sgn}(d)=-1$: $r_1 = 1-1=0$, $r_2 = \\frac{1-(-1)}{2}=1$. Correct.\n\nTherefore, the signature $(r_{1}, r_{2})$ can be expressed in terms of the sign of $d$.", "answer": "$$\n\\boxed{\\begin{pmatrix} 1+\\text{sgn}(d)  \\frac{1-\\text{sgn}(d)}{2} \\end{pmatrix}}\n$$", "id": "3019969"}, {"introduction": "Having explored quadratic fields, we now turn to a richer example, a cyclotomic field. This exercise [@problem_id:3013298] challenges you to explore the embeddings of $K=\\mathbb{Q}(\\zeta_{8})$, a field where all non-trivial embeddings are complex. This practice will solidify your understanding of conjugate pairs of embeddings and demonstrate their power in computing fundamental invariants like the norm and trace directly from their definitions as sums and products over the set of all embeddings.", "problem": "Let $K=\\mathbb{Q}(\\zeta_{8})$, where $\\zeta_{8}$ denotes a fixed primitive eighth root of unity, i.e., $\\zeta_{8}=\\exp\\!\\left(\\frac{2\\pi i}{8}\\right)$. Use the following fundamental definitions:\n- An embedding $\\sigma:K\\hookrightarrow\\mathbb{C}$ is a field homomorphism that fixes $\\mathbb{Q}$ and sends $\\zeta_{8}$ to another complex root of its minimal polynomial over $\\mathbb{Q}$.\n- The trace $\\mathrm{Tr}_{K/\\mathbb{Q}}(\\alpha)$ of an element $\\alpha\\in K$ is the sum of $\\sigma(\\alpha)$ over all embeddings $\\sigma:K\\hookrightarrow\\mathbb{C}$.\n- The norm $\\mathrm{N}_{K/\\mathbb{Q}}(\\alpha)$ of an element $\\alpha\\in K$ is the product of $\\sigma(\\alpha)$ over all embeddings $\\sigma:K\\hookrightarrow\\mathbb{C}$.\n\nProceed from first principles to:\n1. Identify the minimal polynomial of $\\zeta_{8}$ over $\\mathbb{Q}$ and determine all embeddings $K\\hookrightarrow\\mathbb{C}$ explicitly by their action on $\\zeta_{8}$.\n2. Separate these embeddings into conjugate pairs under complex conjugation on $\\mathbb{C}$ and justify the pairing.\n3. Using only the above foundational definitions, compute $\\mathrm{Tr}_{K/\\mathbb{Q}}(\\zeta_{8})$ and $\\mathrm{N}_{K/\\mathbb{Q}}(\\zeta_{8})$.\n\nExpress your final answer as a two-entry row matrix containing first the trace and then the norm. No rounding is required.", "solution": "The problem is well-posed and grounded in the fundamental principles of algebraic number theory. It is self-contained and free of any scientific or logical flaws. We may therefore proceed with a complete solution.\n\nThe field in question is $K = \\mathbb{Q}(\\zeta_8)$, the cyclotomic field generated by a primitive eighth root of unity, $\\zeta_8 = \\exp(\\frac{2\\pi i}{8}) = \\exp(\\frac{i\\pi}{4})$. An element $\\alpha \\in K$ can be expressed as a polynomial in $\\zeta_8$ with coefficients in $\\mathbb{Q}$.\n\n**1. Minimal Polynomial and Embeddings**\n\nFirst, we identify the minimal polynomial of $\\zeta_8$ over $\\mathbb{Q}$. This is the eighth cyclotomic polynomial, denoted by $\\Phi_8(x)$. The roots of $\\Phi_8(x)$ are the primitive eighth roots of unity. A root of unity $\\zeta_8^k = \\exp(\\frac{2\\pi i k}{8})$ is primitive if and only if the greatest common divisor $\\gcd(k, 8) = 1$. For $k \\in \\{0, 1, \\dots, 7\\}$, the integers coprime to $8$ are $1, 3, 5, 7$. Thus, there are $\\phi(8) = 4$ primitive eighth roots of unity: $\\zeta_8^1, \\zeta_8^3, \\zeta_8^5, \\zeta_8^7$.\n\nThe minimal polynomial $\\Phi_8(x)$ can be calculated using the relation $x^n - 1 = \\prod_{d|n} \\Phi_d(x)$. For $n=8$, the divisors are $1, 2, 4, 8$.\nWe have:\n$\\Phi_1(x) = x-1$\n$\\Phi_2(x) = \\frac{x^2-1}{\\Phi_1(x)} = x+1$\n$\\Phi_4(x) = \\frac{x^4-1}{\\Phi_1(x)\\Phi_2(x)} = \\frac{x^4-1}{x^2-1} = x^2+1$\nTherefore,\n$$ \\Phi_8(x) = \\frac{x^8-1}{\\Phi_1(x)\\Phi_2(x)\\Phi_4(x)} = \\frac{x^8-1}{(x-1)(x+1)(x^2+1)} = \\frac{x^8-1}{x^4-1} = x^4+1 $$\nThe polynomial $\\Phi_8(x) = x^4+1$ is monic, has rational coefficients, and has $\\zeta_8$ as a root. It is irreducible over $\\mathbb{Q}$ (by Eisenstein's criterion applied to $\\Phi_8(x+1) = (x+1)^4+1 = x^4+4x^3+6x^2+4x+2$, which is irreducible for $p=2$). Thus, $\\Phi_8(x)=x^4+1$ is the minimal polynomial of $\\zeta_8$ over $\\mathbb{Q}$. The degree of the extension is $[K:\\mathbb{Q}] = 4$.\n\nAccording to the provided definition, an embedding $\\sigma: K \\hookrightarrow \\mathbb{C}$ is a field homomorphism fixing $\\mathbb{Q}$. The action of such an embedding is completely determined by its action on the generator $\\zeta_8$. The image $\\sigma(\\zeta_8)$ must be another root of the minimal polynomial $x^4+1$. As we have established, the roots are $\\{\\zeta_8^1, \\zeta_8^3, \\zeta_8^5, \\zeta_8^7\\}$. This gives rise to four distinct embeddings, which we can label by the exponent of the image of $\\zeta_8$:\n\\begin{itemize}\n    \\item $\\sigma_1: \\zeta_8 \\mapsto \\zeta_8^1 = \\zeta_8$. This is the identity embedding.\n    \\item $\\sigma_3: \\zeta_8 \\mapsto \\zeta_8^3$.\n    \\item $\\sigma_5: \\zeta_8 \\mapsto \\zeta_8^5$.\n    \\item $\\sigma_7: \\zeta_8 \\mapsto \\zeta_8^7$.\n\\end{itemize}\nThe set of all embeddings is $\\{\\sigma_1, \\sigma_3, \\sigma_5, \\sigma_7\\}$.\n\n**2. Conjugate Pairs of Embeddings**\n\nComplex conjugation on $\\mathbb{C}$ is the map $c: z \\mapsto \\bar{z}$. For any embedding $\\sigma: K \\hookrightarrow \\mathbb{C}$, its complex conjugate is the embedding $\\bar{\\sigma}$ defined by the composition $\\bar{\\sigma} = c \\circ \\sigma$. Thus, for any $\\alpha \\in K$, $\\bar{\\sigma}(\\alpha) = \\overline{\\sigma(\\alpha)}$.\nWe apply this to our four embeddings by examining their action on the generator $\\zeta_8$:\n\\begin{itemize}\n    \\item For $\\sigma_1$: $\\bar{\\sigma}_1(\\zeta_8) = \\overline{\\sigma_1(\\zeta_8)} = \\overline{\\zeta_8^1} = \\zeta_8^{-1} = \\zeta_8^7$. This means $\\bar{\\sigma}_1 = \\sigma_7$.\n    \\item For $\\sigma_7$: $\\bar{\\sigma}_7(\\zeta_8) = \\overline{\\sigma_7(\\zeta_8)} = \\overline{\\zeta_8^7} = \\zeta_8^{-7} = \\zeta_8^1$. This means $\\bar{\\sigma}_7 = \\sigma_1$.\n\\end{itemize}\nThus, $(\\sigma_1, \\sigma_7)$ form a conjugate pair.\n\n\\begin{itemize}\n    \\item For $\\sigma_3$: $\\bar{\\sigma}_3(\\zeta_8) = \\overline{\\sigma_3(\\zeta_8)} = \\overline{\\zeta_8^3} = \\zeta_8^{-3} = \\zeta_8^5$. This means $\\bar{\\sigma}_3 = \\sigma_5$.\n    \\item For $\\sigma_5$: $\\bar{\\sigma}_5(\\zeta_8) = \\overline{\\sigma_5(\\zeta_8)} = \\overline{\\zeta_8^5} = \\zeta_8^{-5} = \\zeta_8^3$. This means $\\bar{\\sigma}_5 = \\sigma_3$.\n\\end{itemize}\nThus, $(\\sigma_3, \\sigma_5)$ form a second conjugate pair.\n\nAn embedding is real if $\\sigma = \\bar{\\sigma}$, which would imply $\\sigma_k = \\sigma_{-k \\pmod 8}$. This requires $k \\equiv -k \\pmod 8$, or $2k \\equiv 0 \\pmod 8$. For $k \\in \\{1, 3, 5, 7\\}$, none satisfy this congruence. Therefore, none of the embeddings are real, and they must group into distinct conjugate pairs. The two pairs are $(\\sigma_1, \\sigma_7)$ and $(\\sigma_3, \\sigma_5)$.\n\n**3. Trace and Norm Calculation**\n\nWe proceed using the explicit definitions provided.\n\n**Trace:** The trace of $\\zeta_8$ is the sum of its images under all embeddings:\n$$ \\mathrm{Tr}_{K/\\mathbb{Q}}(\\zeta_8) = \\sum_{k \\in \\{1,3,5,7\\}} \\sigma_k(\\zeta_8) = \\sigma_1(\\zeta_8) + \\sigma_3(\\zeta_8) + \\sigma_5(\\zeta_8) + \\sigma_7(\\zeta_8) $$\n$$ \\mathrm{Tr}_{K/\\mathbb{Q}}(\\zeta_8) = \\zeta_8^1 + \\zeta_8^3 + \\zeta_8^5 + \\zeta_8^7 $$\nThis is the sum of the roots of the minimal polynomial $\\Phi_8(x) = x^4+1$. By Vieta's formulas, this sum is the negative of the coefficient of the $x^3$ term, which is $0$.\nAlternatively, we calculate the sum directly. First, we express the roots in Cartesian form: $\\zeta_8 = \\frac{\\sqrt{2}}{2} + i\\frac{\\sqrt{2}}{2}$.\n\\begin{itemize}\n    \\item $\\zeta_8^1 = \\frac{\\sqrt{2}}{2} + i\\frac{\\sqrt{2}}{2}$\n    \\item $\\zeta_8^3 = -\\frac{\\sqrt{2}}{2} + i\\frac{\\sqrt{2}}{2}$\n    \\item $\\zeta_8^5 = -\\frac{\\sqrt{2}}{2} - i\\frac{\\sqrt{2}}{2}$\n    \\item $\\zeta_8^7 = \\frac{\\sqrt{2}}{2} - i\\frac{\\sqrt{2}}{2}$\n\\end{itemize}\nSumming these values:\n$$ \\mathrm{Tr}_{K/\\mathbb{Q}}(\\zeta_8) = \\left(\\frac{\\sqrt{2}}{2} - \\frac{\\sqrt{2}}{2} - \\frac{\\sqrt{2}}{2} + \\frac{\\sqrt{2}}{2}\\right) + i\\left(\\frac{\\sqrt{2}}{2} + \\frac{\\sqrt{2}}{2} - \\frac{\\sqrt{2}}{2} - \\frac{\\sqrt{2}}{2}\\right) = 0 + i(0) = 0 $$\n\n**Norm:** The norm of $\\zeta_8$ is the product of its images under all embeddings:\n$$ \\mathrm{N}_{K/\\mathbb{Q}}(\\zeta_8) = \\prod_{k \\in \\{1,3,5,7\\}} \\sigma_k(\\zeta_8) = \\sigma_1(\\zeta_8) \\cdot \\sigma_3(\\zeta_8) \\cdot \\sigma_5(\\zeta_8) \\cdot \\sigma_7(\\zeta_8) $$\n$$ \\mathrm{N}_{K/\\mathbb{Q}}(\\zeta_8) = \\zeta_8^1 \\cdot \\zeta_8^3 \\cdot \\zeta_8^5 \\cdot \\zeta_8^7 = \\zeta_8^{1+3+5+7} = \\zeta_8^{16} $$\nSince $\\zeta_8$ is an eighth root of unity, we have $\\zeta_8^8 = 1$. Therefore,\n$$ \\mathrm{N}_{K/\\mathbb{Q}}(\\zeta_8) = (\\zeta_8^8)^2 = 1^2 = 1 $$\nThis result is consistent with Vieta's formulas, which state that the product of the roots of a monic polynomial of degree $n$ is $(-1)^n$ times the constant term. For $\\Phi_8(x)=x^4+1$, $n=4$ and the constant term is $1$, so the product of roots is $(-1)^4(1) = 1$.\n\nIn summary, the trace is $0$ and the norm is $1$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0  1\n\\end{pmatrix}\n}\n$$", "id": "3013298"}, {"introduction": "In our final practice, we bridge the gap between abstract theory and concrete computation by calculating a deep invariant of a number field. This capstone exercise [@problem_id:3022842] guides you through designing an algorithm to compute the regulator, $R_K$, a value that measures the 'size' of the unit group. This task requires you to translate the theoretical machinery of embeddings and the logarithmic map into a practical, numerical tool, offering a powerful perspective on the geometry of numbers and the computational aspects of modern number theory.", "problem": "Let $K$ be a number field of degree $n$ with $r_1$ real embeddings and $r_2$ pairs of complex embeddings, so $n = r_1 + 2 r_2$. The Dirichlet unit theorem implies that the unit group $\\mathcal{O}_K^\\times$ has rank $r = r_1 + r_2 - 1$. Design and implement an algorithm to approximate the regulator $R_K$ according to the standard definition:\n\n- Compute all embeddings of $K$ into the complex numbers by finding all complex roots of a defining minimal polynomial $f(x) \\in \\mathbb{Z}[x]$ of a primitive element $\\theta$ such that $K = \\mathbb{Q}(\\theta)$. Classify the embeddings into the $r_1$ real embeddings and the $r_2$ complex embeddings (represented by one root from each complex conjugate pair).\n- For each fundamental unit $u_i$ (given as a polynomial $p_{u_i}(x) \\in \\mathbb{Z}[x]$ evaluated at $\\theta$), compute its logarithmic embedding vector $\\ell(u_i) \\in \\mathbb{R}^{r_1+r_2}$. This vector's components are $(\\log|\\sigma_1(u_i)|, \\dots, \\log|\\sigma_{r_1}(u_i)|, 2\\log|\\tau_1(u_i)|, \\dots, 2\\log|\\tau_{r_2}(u_i)|)$, where the $\\sigma$ are the real embeddings and the $\\tau$ are representatives for the complex conjugate pairs.\n- Construct the $(r_1+r_2) \\times r$ matrix $L$ whose columns are the logarithmic embedding vectors $\\ell(u_1), \\dots, \\ell(u_r)$. The regulator $R_K$ is then computed as the absolute value of the determinant of the $r \\times r$ matrix obtained by deleting any single row from $L$.\n- If $r = 0$, output $1$ by convention.\n\nInput representation and computational model:\n\n- Each field is specified by the minimal polynomial $f(x)$ of $\\theta$ as a list of integer coefficients in ascending powers of $x$, that is, $[a_0, a_1, \\dots, a_n]$ for $f(x) = a_0 + a_1 x + \\cdots + a_n x^n$, with $a_n = 1$ for a monic minimal polynomial.\n- Each unit $u$ is specified by a polynomial $p_u(x)$ with integer coefficients in ascending powers as a list $[b_0, b_1, \\dots, b_m]$ representing $p_u(x) = b_0 + b_1 x + \\cdots + b_m x^m$, and $u = p_u(\\theta)$.\n- Embeddings are computed by numerically approximating all complex roots of $f(x)$ and selecting one representative per complex conjugate pair (e.g., those with strictly positive imaginary part).\n\nYour program must implement this algorithm and produce numerical approximations of $R_K$ for the following test suite. In every case, use the natural logarithm.\n\nTest suite:\n\n- Case $A$: $K = \\mathbb{Q}(\\sqrt{2})$, with $\\theta$ a root of $f(x) = x^2 - 2$. Units are given by $u_1 = 1 + \\theta$, represented by $p_{u_1}(x) = x + 1$.\n- Case $B$: $K = \\mathbb{Q}(\\sqrt{3})$, with $\\theta$ a root of $f(x) = x^2 - 3$. Units are given by $u_1 = 2 + \\theta$, represented by $p_{u_1}(x) = x + 2$.\n- Case $C$: $K = \\mathbb{Q}(\\theta)$ with $\\theta$ a root of $f(x) = x^2 - x - 1$. Units are given by $u_1 = \\theta$, represented by $p_{u_1}(x) = x$.\n- Case $D$: $K = \\mathbb{Q}(i)$, with $\\theta$ a root of $f(x) = x^2 + 1$. There are no infinite-order units, so provide an empty unit list, and by convention output $1$.\n\nOutput specification:\n\n- Your program should produce a single line of output containing the results for Cases $A$, $B$, $C$, and $D$, in that order, as a comma-separated list enclosed in square brackets, for example, `[r_A,r_B,r_C,r_D]`, where each $r_\\cdot$ is a floating-point number representing the approximate regulator $R_K$ computed by your algorithm.\n\nEdge cases and robustness requirements:\n\n- Use a numerical tolerance to classify roots as real or complex, grouping complex conjugate pairs reliably.\n- Handle the boundary case $r = 0$ by outputting $1$.", "solution": "The user has requested the design and implementation of an algorithm to compute the regulator of a number field $K$. The problem statement is validated as scientifically sound, well-posed, and objective. It is based on fundamental principles of algebraic number theory and provides a clear, formalizable procedure for the computation.\n\nThe regulator, $R_K$, is a fundamental invariant of a number field $K$. Let $K = \\mathbb{Q}(\\theta)$ be a number field of degree $n$ over $\\mathbb{Q}$, where $\\theta$ is a root of a minimal polynomial $f(x) \\in \\mathbb{Z}[x]$. The field $K$ has $n$ distinct embeddings into the complex numbers $\\mathbb{C}$. These are classified into $r_1$ real embeddings ($\\sigma: K \\to \\mathbb{R}$) and $r_2$ pairs of complex conjugate embeddings ($\\sigma, \\bar{\\sigma}: K \\to \\mathbb{C} \\setminus \\mathbb{R}$), such that $n = r_1 + 2r_2$.\n\nBy Dirichlet's Unit Theorem, the group of units of the ring of integers of $K$, denoted $\\mathcal{O}_K^\\times$, is a finitely generated abelian group of rank $r = r_1 + r_2 - 1$. Specifically, $\\mathcal{O}_K^\\times \\cong \\mu(K) \\times \\mathbb{Z}^r$, where $\\mu(K)$ is the finite group of roots of unity in $K$.\n\nThe regulator is defined via the logarithmic embedding, a group homomorphism $\\ell: \\mathcal{O}_K^\\times \\to \\mathbb{R}^{r_1+r_2}$. Let us order the embeddings by taking the $r_1$ real embeddings first, followed by selecting one representative from each of the $r_2$ complex conjugate pairs. For a unit $u \\in \\mathcal{O}_K^\\times$, the logarithmic embedding vector $\\ell(u)$ is defined as:\n$$\n\\ell(u) = (\\log|\\sigma_1(u)|, \\dots, \\log|\\sigma_{r_1}(u)|, 2\\log|\\sigma_{r_1+1}(u)|, \\dots, 2\\log|\\sigma_{r_1+r_2}(u)|)\n$$\nFor any unit $u$, its norm is $\\pm 1$, and the product formula implies that the components of $\\ell(u)$ sum to zero. This means the image $\\ell(\\mathcal{O}_K^\\times)$ lies within the trace-zero hyperplane $H = \\{\\mathbf{x} \\in \\mathbb{R}^{r_1+r_2} \\mid \\sum x_k = 0\\}$, which is a vector space of dimension $r=r_1+r_2-1$. The image of the free part of the unit group forms a lattice in this hyperplane.\n\nThe regulator $R_K$ is the covolume of this lattice. The standard algorithm to compute $R_K$ proceeds as follows:\n\n1.  **Determine Field Signature:** Given the minimal polynomial $f(x)$, its complex roots are computed numerically. These roots correspond to the values of $\\theta$ under the embeddings. Roots with an imaginary part close to zero (within a small tolerance) are classified as real. The remaining complex roots are grouped into conjugate pairs. We count the number of real roots, $r_1$, and complex conjugate pairs, $r_2$. The rank of the unit group is then $r = r_1+r_2-1$. If $r=0$, the regulator is $1$ by convention.\n\n2.  **Construct Logarithmic Embedding Vectors:** For each provided basis unit $u_i = p_{u_i}(\\theta)$, we first compute its image under each embedding. If a root of $f(x)$ is $z_j$, the corresponding embedding maps $u_i$ to $p_{u_i}(z_j)$. This value is computed using polynomial evaluation. We then construct the logarithmic vector $\\ell(u_i) \\in \\mathbb{R}^{r_1+r_2}$ using the formula above.\n\n3.  **Compute Regulator via Determinant:** A matrix $L$ of size $(r_1+r_2) \\times r$ is formed, whose columns are the logarithmic embedding vectors $\\{\\ell(u_1), \\dots, \\ell(u_r)\\}$ for a basis of fundamental units. The product formula implies that the sum of the rows of this matrix is the zero vector. The regulator $R_K$ is the covolume of the lattice spanned by these column vectors in the trace-zero hyperplane. It is computed by removing any single row from the matrix $L$ to form a square $r \\times r$ matrix, and then taking the absolute value of its determinant.\n    $$ R_K = |\\det(L')| $$\n    where $L'$ is the matrix $L$ with one row removed. For the rank-1 case ($r=1$), this simplifies to taking the absolute value of any component of the single logarithmic embedding vector.\n\nThis procedure provides a complete and numerically stable algorithm for approximating the regulator as defined in the problem statement.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_regulator(poly_f_asc, poly_units_asc):\n    \"\"\"\n    Computes the regulator of a number field K specified by a minimal polynomial\n    and a set of fundamental units.\n\n    Args:\n        poly_f_asc (list): Coefficients of the minimal polynomial f(x) of a\n                           primitive element theta, in ascending powers.\n        poly_units_asc (list): A list of polynomials representing the units.\n                               Each polynomial is a list of coefficients in\n                               ascending powers. u_i = p_i(theta).\n\n    Returns:\n        float: The computed regulator R_K.\n    \"\"\"\n    # Numpy expects coefficients in descending order of powers.\n    poly_f_desc = np.array(poly_f_asc[::-1], dtype=float)\n\n    # Step 1: Compute embeddings and find the signature (r1, r2)\n    roots = np.roots(poly_f_desc)\n\n    real_roots = []\n    complex_reps = []\n    # A tolerance for classifying roots as real\n    tol = 1e-9\n\n    # Sort roots to have a canonical order\n    sorted_roots = sorted(roots, key=lambda z: (z.real, z.imag))\n    \n    processed_roots = set()\n    for z in sorted_roots:\n        if z in processed_roots:\n            continue\n        \n        if abs(z.imag)  tol:\n            real_roots.append(z.real)\n            processed_roots.add(z)\n        elif z.imag > 0: # Take only one from a conjugate pair\n            complex_reps.append(z)\n            processed_roots.add(z)\n            processed_roots.add(z.conjugate())\n\n    r1 = len(real_roots)\n    r2 = len(complex_reps)\n    rank = r1 + r2 - 1\n\n    # Handle r=0 case\n    if rank == 0:\n        return 1.0\n\n    # These are the specific roots corresponding to our chosen embeddings\n    embedding_roots = real_roots + complex_reps\n\n    # Step 2: Construct Logarithmic Embedding Vectors\n    log_vectors_cols = []\n    for p_u_asc in poly_units_asc:\n        p_u_desc = np.array(p_u_asc[::-1], dtype=float)\n        log_vec = np.zeros(r1 + r2)\n\n        for i, z in enumerate(embedding_roots):\n            # Evaluate u = p_u(z)\n            u_val = np.polyval(p_u_desc, z)\n            \n            # Take log of absolute value\n            log_abs_u = np.log(np.abs(u_val))\n\n            # Weight by 1 for real, 2 for complex embeddings\n            weight = 1 if i  r1 else 2\n            log_vec[i] = weight * log_abs_u\n        \n        log_vectors_cols.append(log_vec)\n    \n    if len(log_vectors_cols) != rank:\n        raise ValueError(f\"Expected {rank} units for rank {rank} field, but got {len(log_vectors_cols)}.\")\n\n    # Step 3: Compute Regulator via Determinant\n    # Form the matrix L with log vectors as columns\n    L = np.array(log_vectors_cols).T\n\n    # Delete any one row to get a square r x r matrix\n    L_sub = np.delete(L, 0, axis=0)\n\n    # The regulator is the absolute value of the determinant\n    regulator = np.abs(np.linalg.det(L_sub))\n\n    return regulator\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    test_cases = [\n        # Case A: K = Q(sqrt(2)), f(x) = x^2 - 2, u1 = 1 + theta\n        ([-2, 0, 1], [[1, 1]]),\n        \n        # Case B: K = Q(sqrt(3)), f(x) = x^2 - 3, u1 = 2 + theta\n        ([-3, 0, 1], [[2, 1]]),\n\n        # Case C: K = Q(theta), f(x) = x^2 - x - 1, u1 = theta\n        ([-1, -1, 1], [[0, 1]]),\n\n        # Case D: K = Q(i), f(x) = x^2 + 1, no infinite order units\n        ([1, 0, 1], []),\n    ]\n\n    results = []\n    for case in test_cases:\n        poly_f, poly_units = case\n        result = compute_regulator(poly_f, poly_units)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{results[0]},{results[1]},{results[2]},{results[3]}]\")\n\nsolve()\n\n```", "id": "3022842"}]}