{"hands_on_practices": [{"introduction": "The power of sieve methods lies in combining local information about primes to derive a global conclusion. Our first practice focuses on a crucial local component: understanding how a single prime $p$ affects the set we are sifting. This exercise [@problem_id:3009398] asks you to compute the \"local density\" for the exceptional prime $p=2$ in the context of the twin prime problem. Mastering this calculation provides insight into the fundamental building blocks of the sieve's main term and clarifies why certain primes require special attention.", "problem": "Consider the binary pattern $\\mathcal{H}=\\{0,2\\}$ that encodes the twin prime constraint for integers $n$ with the requirement that both $n$ and $n+2$ avoid small prime divisors. In the framework of Brun's pure sieve, one studies the sifting of the sequence $\\{n \\leq x\\}$ by removing $n$ for which $p \\mid n(n+2)$ for any prime $p$ below a threshold. For a prime $p$, let $r(p)$ denote the number of residue classes $a \\pmod{p}$ for which $a(a+2) \\equiv 0 \\pmod{p}$. The local multiplicative factor associated to $p$ in the normalized sieve density for the $k=2$ pattern is defined by\n$$\nf_{p} \\;=\\; \\frac{1-\\frac{r(p)}{p}}{\\left(1-\\frac{1}{p}\\right)^{2}} \\, .\n$$\nThe prime $p=2$ is exceptional in this context because the two shifts in $\\mathcal{H}$ coincide modulo $2$. Using only the definition of $r(p)$ and basic modular arithmetic, compute the exact value of the factor $f_{2}$.\n\nGive your answer as a single exact number.", "solution": "The problem asks for the computation of the local multiplicative factor $f_{2}$ associated with the twin prime problem in the context of Brun's pure sieve. The factor is defined for a prime $p$ as:\n$$\nf_{p} \\;=\\; \\frac{1-\\frac{r(p)}{p}}{\\left(1-\\frac{1}{p}\\right)^{2}}\n$$\nwhere $r(p)$ is the number of residue classes $a$ modulo $p$ for which the polynomial representing the prime pattern, in this case $a(a+2)$, is congruent to zero.\n\nTo find the value of $f_{2}$, we must first determine the value of $r(2)$. According to the definition provided, $r(2)$ is the number of distinct solutions to the congruence\n$$\na(a+2) \\equiv 0 \\pmod{2}\n$$\nwhere $a$ is a residue class modulo $2$. The integers modulo $2$ consist of two residue classes, represented by $a=0$ and $a=1$. We test each case:\n\nCase 1: $a \\equiv 0 \\pmod{2}$\nSubstituting $a=0$ into the congruence, we get:\n$$\n0 \\cdot (0+2) \\equiv 0 \\cdot 2 \\equiv 0 \\pmod{2}\n$$\nThis congruence is true. Therefore, $a \\equiv 0 \\pmod{2}$ is a solution.\n\nCase 2: $a \\equiv 1 \\pmod{2}$\nSubstituting $a=1$ into the congruence, we get:\n$$\n1 \\cdot (1+2) \\equiv 1 \\cdot 3 \\equiv 3 \\pmod{2}\n$$\nSince $3 \\equiv 1 \\pmod{2}$, the congruence becomes $1 \\equiv 0 \\pmod{2}$, which is false. Therefore, $a \\equiv 1 \\pmod{2}$ is not a solution.\n\nFrom these two cases, we find that there is only one residue class modulo $2$ that satisfies the condition, namely $a \\equiv 0 \\pmod{2}$. Thus, the number of such residue classes is $r(2) = 1$.\n\nThis result illuminates why $p=2$ is considered an exceptional prime for the twin prime problem. For any other prime $p>2$, the congruence $a(a+2) \\equiv 0 \\pmod{p}$ has two distinct solutions: $a \\equiv 0 \\pmod{p}$ and $a \\equiv -2 \\pmod{p}$ (since $p>2$, $0 \\not\\equiv -2 \\pmod{p}$). Thus, for $p>2$, we have $r(p)=2$. For $p=2$, the two potential roots $0$ and $-2$ become congruent modulo $2$, so they merge into a single root, yielding $r(2)=1$.\n\nNow, we can substitute $p=2$ and $r(2)=1$ into the formula for $f_{p}$:\n$$\nf_{2} = \\frac{1-\\frac{r(2)}{2}}{\\left(1-\\frac{1}{2}\\right)^{2}} = \\frac{1-\\frac{1}{2}}{\\left(1-\\frac{1}{2}\\right)^{2}}\n$$\nThe expression can be simplified. The numerator is:\n$$\n1-\\frac{1}{2} = \\frac{1}{2}\n$$\nThe denominator is:\n$$\n\\left(1-\\frac{1}{2}\\right)^{2} = \\left(\\frac{1}{2}\\right)^{2} = \\frac{1}{4}\n$$\nTherefore, the value of $f_{2}$ is the ratio of the numerator to the denominator:\n$$\nf_{2} = \\frac{\\frac{1}{2}}{\\frac{1}{4}} = \\frac{1}{2} \\cdot \\frac{4}{1} = 2\n$$\nThe exact value of the factor $f_{2}$ is $2$.", "answer": "$$\n\\boxed{2}\n$$", "id": "3009398"}, {"introduction": "Having examined the local behavior at a single prime, we now scale up to a full implementation of a simplified Brun sieve. This computational practice [@problem_id:3009401] guides you through building a program that sifts a set of integers to find an upper bound for the number of twin primes. By generating the sifted set, comparing it to a heuristic multiplicative model, and checking it against the true count of twin primes, you will gain a concrete, numerical understanding of how the sieve works in practice and appreciate the subtle but critical distinction between an upper bound and an asymptotic formula.", "problem": "Consider the twin prime problem within the framework of Brun's pure sieve. Let $x \\in \\mathbb{N}$ be a magnitude parameter and let $z \\in \\mathbb{N}$ be a sieve level. Define the base set of candidates for twin primes as the odd integers\n$$\n\\mathcal{A}(x) := \\{ n \\in \\mathbb{N} : 3 \\le n \\le x-2, \\; n \\text{ odd} \\}.\n$$\nFor each prime $p$, define the elimination set\n$$\n\\mathcal{A}_p := \\{ n \\in \\mathcal{A}(x) : p \\mid n \\text{ or } p \\mid (n+2) \\}.\n$$\nLet $\\mathbb{P}_{\\le z}$ denote the set of primes at most $z$. To avoid trivial annihilation by the prime $p=2$, the sieve will only use odd primes, i.e.,\n$$\n\\mathbb{P}^{\\text{odd}}_{\\le z} := \\{ p \\in \\mathbb{P}_{\\le z} : p \\ge 3 \\}.\n$$\nDefine the sifted set at level $z$ by\n$$\nS_z(x) := \\left| \\mathcal{A}(x) \\setminus \\bigcup_{p \\in \\mathbb{P}^{\\text{odd}}_{\\le z}} \\mathcal{A}_p \\right|,\n$$\ni.e., the number of $n \\in \\mathcal{A}(x)$ such that, for every odd prime $p \\le z$, neither $p \\mid n$ nor $p \\mid (n+2)$ holds.\n\nThe fundamental base for modeling $S_z(x)$ via Brun's pure sieve is the residue-class elimination principle: for a fixed odd prime $p$, there are exactly two residue classes modulo $p$ that are eliminated by the condition $p \\mid n$ or $p \\mid (n+2)$, namely $n \\equiv 0 \\pmod{p}$ and $n \\equiv -2 \\pmod{p}$. Under a uniformity assumption (the combinatorial independence idealization underlying the pure sieve), the expected surviving density per prime $p$ is therefore $1 - \\frac{2}{p}$, and the heuristic product for the survival factor up to level $z$ is\n$$\nW(z) := \\prod_{p \\in \\mathbb{P}^{\\text{odd}}_{\\le z}} \\left(1 - \\frac{2}{p}\\right).\n$$\nLet\n$$\nX(x) := |\\mathcal{A}(x)| = \\max\\!\\left( \\left\\lfloor \\frac{x-1}{2} \\right\\rfloor - 1, \\, 0 \\right),\n$$\nwhich counts the odd $n$ in $[3, x-2]$. The corresponding multiplicative model prediction for the sifted count is then\n$$\nU_{\\text{prod}}(x,z) := X(x) \\cdot W(z).\n$$\n\nTo connect to twin primes, define the exact twin prime counting function up to $x$,\n$$\nT(x) := \\left| \\{ n \\in \\mathbb{N} : 3 \\le n \\le x-2, \\; n \\text{ and } n+2 \\text{ are both prime} \\} \\right|.\n$$\nObserve that any twin prime pair with both primes exceeding $z$ necessarily survives the elimination by all odd primes $\\le z$, hence belongs to the sifted set. However, twin prime pairs with at least one prime $\\le z$ may be excluded by the sieve. To restore an upper bound, define\n$$\nB_z(x) := \\left| \\{ n \\in \\mathbb{N} : 3 \\le n \\le \\min(x-2, z), \\; n \\text{ and } n+2 \\text{ are both prime} \\} \\right|,\n$$\nthe number of twin prime pairs whose smaller member is at most $z$. Then the quantity\n$$\nU_{\\text{bound}}(x,z) := S_z(x) + B_z(x)\n$$\nis an explicit, computable upper bound for $T(x)$, i.e., $T(x) \\le U_{\\text{bound}}(x,z)$ for all $x$ and $z$.\n\nYour task is to implement a complete, runnable program that, for each test case $(x,z)$, computes the quintuple\n$$\n\\left[ S_z(x), \\; U_{\\text{prod}}(x,z), \\; U_{\\text{bound}}(x,z), \\; T(x), \\; \\big( T(x) \\le U_{\\text{bound}}(x,z) \\big) \\right].\n$$\nAll computations must be carried out exactly where appropriate (counts) and numerically to a reasonable precision where multiplicative products are involved; your program should round the floating-point value $U_{\\text{prod}}(x,z)$ to $6$ decimal places.\n\nTest Suite:\n- Case $1$: $(x,z) = (200,13)$, a moderate magnitude with a nontrivial sieve level.\n- Case $2$: $(x,z) = (1000,37)$, a larger magnitude and medium sieve level.\n- Case $3$: $(x,z) = (50,2)$, a boundary sieve level with no odd primes $\\le z$, checking base-set behavior.\n- Case $4$: $(x,z) = (10000,97)$, a larger magnitude with a substantial sieve level.\n\nFinal Output Format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each element of the outer list must be the list\n$$\n\\left[ S_z(x), \\; U_{\\text{prod}}(x,z), \\; U_{\\text{bound}}(x,z), \\; T(x), \\; \\big( T(x) \\le U_{\\text{bound}}(x,z) \\big) \\right]\n$$\nfor the corresponding test case, in the order they are listed above. For example, the output format should look like\n$$\n\\big[ [\\cdots], [\\cdots], [\\cdots], [\\cdots] \\big].\n$$", "solution": "The user has provided a well-defined computational problem in number theory, specifically related to the application of Brun's pure sieve to the twin prime problem. I will first validate the problem's integrity before proceeding to a full solution.\n\n### Step 1: Extract Givens\n-   **Magnitude parameter**: $x \\in \\mathbb{N}$\n-   **Sieve level**: $z \\in \\mathbb{N}$\n-   **Base set**: $\\mathcal{A}(x) := \\{ n \\in \\mathbb{N} : 3 \\le n \\le x-2, \\; n \\text{ odd} \\}$\n-   **Elimination set**: $\\mathcal{A}_p := \\{ n \\in \\mathcal{A}(x) : p \\mid n \\text{ or } p \\mid (n+2) \\}$ for a prime $p$.\n-   **Sieving primes**: $\\mathbb{P}^{\\text{odd}}_{\\le z} := \\{ p \\in \\mathbb{P}_{\\le z} : p \\ge 3 \\}$, where $\\mathbb{P}_{\\le z}$ is the set of primes at most $z$.\n-   **Sifted set count**: $S_z(x) := \\left| \\mathcal{A}(x) \\setminus \\bigcup_{p \\in \\mathbb{P}^{\\text{odd}}_{\\le z}} \\mathcal{A}_p \\right|$\n-   **Heuristic survival factor**: $W(z) := \\prod_{p \\in \\mathbb{P}^{\\text{odd}}_{\\le z}} \\left(1 - \\frac{2}{p}\\right)$\n-   **Base set size**: $X(x) := |\\mathcal{A}(x)| = \\max\\!\\left( \\left\\lfloor \\frac{x-1}{2} \\right\\rfloor - 1, \\, 0 \\right)$\n-   **Multiplicative model prediction**: $U_{\\text{prod}}(x,z) := X(x) \\cdot W(z)$\n-   **Twin prime counting function**: $T(x) := |\\{ n \\in \\mathbb{N} : 3 \\le n \\le x-2, \\; n \\text{ and } n+2 \\text{ are both prime} \\}|$\n-   **Boundary twin prime count**: $B_z(x) := |\\{ n \\in \\mathbb{N} : 3 \\le n \\le \\min(x-2, z), \\; n \\text{ and } n+2 \\text{ are both prime} \\}|$\n-   **Upper bound on twin primes**: $U_{\\text{bound}}(x,z) := S_z(x) + B_z(x)$\n-   **Constraint**: $T(x) \\le U_{\\text{bound}}(x,z)$ for all $x, z$.\n-   **Task**: For each test case $(x,z)$, compute the quintuple $[ S_z(x), \\; U_{\\text{prod}}(x,z), \\; U_{\\text{bound}}(x,z), \\; T(x), \\; ( T(x) \\le U_{\\text{bound}}(x,z) ) ]$.\n-   **Output specification**: $U_{\\text{prod}}(x,z)$ must be rounded to $6$ decimal places. The final output is a list of these quintuples.\n-   **Test Suite**: $(200,13)$, $(1000,37)$, $(50,2)$, $(10000,97)$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is scientifically grounded in sieve theory, a standard branch of analytic number theory. All definitions are formal, internally consistent, and correspond to established concepts. The premise of the upper bound, $T(x) \\le S_z(x) + B_z(x)$, is logically sound: $T(x)$ counts all twin prime pairs $(n, n+2)$ with $n \\le x-2$. These can be partitioned into pairs where $n \\le z$ (counted by $B_z(x)$) and pairs where $n > z$. For a pair $(n, n+2)$ with $n>z$ and both elements prime, $n$ must survive the sieve by all odd primes $p \\le z$, as such primes are smaller than $n$ and $n+2$. Thus, the count of such pairs is bounded above by $S_z(x)$. The sum $S_z(x) + B_z(x)$ is therefore a valid upper bound for $T(x)$. The problem is well-posed, objective, and computationally feasible for the given test cases.\n\n### Step 3: Verdict and Action\nThe problem statement is **valid**. A solution will be developed and implemented.\n\n### Solution and Algorithm Design\n\nThe task requires the computation of five distinct quantities for each given pair $(x,z)$. The overall strategy is to implement separate procedures for each quantity, leveraging pre-computed prime numbers for efficiency.\n\n**1. Prime Number Generation**\nA Sieve of Eratosthenes is the most efficient method for generating all prime numbers up to a given limit. Since the largest value of $x$ in the test suite is $10000$, and primality tests are needed for numbers up to $x$, we will pre-compute all primes up to a safe limit (e.g., $10002$). This pre-computation yields both a boolean array for constant-time primality testing and a sorted list of primes.\n\n**2. Computing $S_z(x)$**\n$S_z(x)$ is the count of elements in the base set $\\mathcal{A}(x)$ that survive the sieving process.\n-   The base set is $\\mathcal{A}(x) = \\{ n \\mid 3 \\le n \\le x-2, n \\text{ is odd} \\}$. The size of this set is $X(x) = \\max(\\lfloor (x-1)/2 \\rfloor - 1, 0)$.\n-   We can represent the elements of $\\mathcal{A}(x)$ by an array of booleans, `survivors`, of size $X(x)$, initially all `true`. An index $k$ in this array can be mapped to an integer $n_k = 2k+3$. This covers all odd numbers starting from $3$.\n-   The sieving primes are the odd primes $p \\le z$.\n-   For each such prime $p$, we must eliminate all $n_k$ where $p \\mid n_k$ or $p \\mid (n_k+2)$. These conditions translate to two residue classes for $n_k$ modulo $p$: $n_k \\equiv 0 \\pmod p$ and $n_k \\equiv -2 \\pmod p$.\n-   Using the mapping $n_k = 2k+3$, these conditions become linear congruences for the index $k$:\n    -   $2k+3 \\equiv 0 \\pmod p \\implies 2k \\equiv -3 \\pmod p \\implies k \\equiv -3 \\cdot 2^{-1} \\pmod p$.\n    -   $2k+3 \\equiv -2 \\pmod p \\implies 2k \\equiv -5 \\pmod p \\implies k \\equiv -5 \\cdot 2^{-1} \\pmod p$.\n    The modular inverse $2^{-1} \\pmod p$ for an odd prime $p$ is $(p+1)/2$.\n-   For each $p$, we calculate the two starting indices $k_0, k_1 \\in [0, p-1]$ and mark `survivors[k]` as `false` for all $k$ in the arithmetic progressions $k_0+j p$ and $k_1+j p$.\n-   The final count $S_z(x)$ is the number of remaining `true` values in the `survivors` array.\n\n**3. Computing $U_{\\text{prod}}(x,z)$**\nThis is a direct calculation based on its definition: $U_{\\text{prod}}(x,z) = X(x) \\cdot W(z)$.\n-   $X(x)$ is computed as above.\n-   $W(z) = \\prod_{p \\in \\mathbb{P}^{\\text{odd}}_{\\le z}} \\left(1 - \\frac{2}{p}\\right)$ is computed by iterating through the pre-computed list of odd primes up to $z$ and multiplying the factors. If no such primes exist (e.g., $z < 3$), the empty product is $1$.\n-   The final result is rounded to $6$ decimal places.\n\n**4. Computing $T(x)$ and $B_z(x)$**\nThese are direct counting problems.\n-   $T(x)$: We iterate through all odd integers $n$ from $3$ to $x-2$. For each $n$, we use the pre-computed primality test to check if both $n$ and $n+2$ are prime. A counter is incremented for each such twin prime pair found.\n-   $B_z(x)$: The procedure is identical to that for $T(x)$, but the iteration for $n$ stops at $\\min(x-2, z)$.\n\n**5. Assembling the Quintuple**\nWith all components computed, we assemble the final list:\n-   $U_{\\text{bound}}(x,z)$ is calculated as the sum $S_z(x) + B_z(x)$.\n-   The boolean check $(T(x) \\le U_{\\text{bound}}(x,z))$ is performed.\n-   The five values—$S_z(x)$, $U_{\\text{prod}}(x,z)$, $U_{\\text{bound}}(x,z)$, $T(x)$, and the boolean result—are collected into a list, which forms the result for one test case. This is repeated for all test cases.\n\nThis structured approach ensures correctness and efficiency, meeting all requirements of the problem statement.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef sieve_eratosthenes(n_max):\n    \"\"\"\n    Generates primes up to n_max using the Sieve of Eratosthenes.\n    Returns:\n        is_prime (np.ndarray): A boolean array where is_prime[i] is True if i is prime.\n        primes (list): A list of prime numbers up to n_max.\n    \"\"\"\n    if n_max  2:\n        return np.zeros(n_max + 1, dtype=bool), []\n    \n    is_prime = np.ones(n_max + 1, dtype=bool)\n    is_prime[0:2] = False\n    for i in range(2, int(np.sqrt(n_max)) + 1):\n        if is_prime[i]:\n            is_prime[i*i::i] = False\n    \n    primes = np.where(is_prime)[0].tolist()\n    return is_prime, primes\n\ndef compute_quintuple(x, z, all_primes, is_prime):\n    \"\"\"\n    Computes the quintuple [S_z(x), U_prod(x,z), U_bound(x,z), T(x), check]\n    for a given (x, z) test case.\n    \"\"\"\n    # Calculate X(x): size of the base set A(x) = {n odd: 3 = n = x-2}\n    X = max(((x - 1) // 2) - 1, 0)\n\n    # Calculate S_z(x): sifted set count\n    if X = 0:\n        S_z_x = 0\n    else:\n        # Array of booleans representing n_k = 2k+3 for k in [0, X-1]\n        survivors = np.ones(X, dtype=bool)\n        sieve_primes = [p for p in all_primes if 3 = p = z]\n        \n        for p in sieve_primes:\n            # Modular inverse of 2 mod p is (p+1)/2 for odd prime p\n            inv2 = (p + 1) // 2\n            \n            # Find starting index k for n = 0 (mod p)\n            # 2k + 3 = 0 (mod p) => 2k = -3 (mod p) => k = -3 * inv2 (mod p)\n            k0 = (-3 * inv2) % p\n            \n            # Find starting index k for n = -2 (mod p)\n            # 2k + 3 = -2 (mod p) => 2k = -5 (mod p) => k = -5 * inv2 (mod p)\n            k1 = (-5 * inv2) % p\n            \n            # Sieve the candidates array\n            if k0  X:\n                survivors[k0::p] = False\n            # k0 != k1 for odd p, so no need to check for double-sieving the same progression\n            if k1  X:\n                survivors[k1::p] = False\n                \n        S_z_x = int(np.sum(survivors))\n\n    # Calculate W(z) and U_prod(x, z)\n    sieve_primes_for_W = [p for p in all_primes if 3 = p = z]\n    W_z = 1.0\n    if sieve_primes_for_W:\n        factors = [1.0 - 2.0/p for p in sieve_primes_for_W]\n        W_z = np.prod(factors)\n    \n    U_prod_x_z = round(X * W_z, 6)\n\n    # Calculate T(x): twin prime counting function up to x\n    T_x = 0\n    upper_n_T = x - 2\n    # n must be odd so we can step by 2\n    for n in range(3, upper_n_T + 1, 2):\n        if n + 2  len(is_prime) and is_prime[n] and is_prime[n+2]:\n            T_x += 1\n\n    # Calculate B_z(x): twin primes with smaller member = min(x-2, z)\n    B_z_x = 0\n    upper_n_B = min(x - 2, z)\n    for n in range(3, upper_n_B + 1, 2):\n        if n + 2  len(is_prime) and is_prime[n] and is_prime[n+2]:\n            B_z_x += 1\n            \n    # Calculate U_bound(x, z)\n    U_bound_x_z = S_z_x + B_z_x\n    \n    # Check the inequality T(x) = U_bound(x, z)\n    bound_check = (T_x = U_bound_x_z)\n    \n    return [S_z_x, U_prod_x_z, U_bound_x_z, T_x, bound_check]\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (200, 13),\n        (1000, 37),\n        (50, 2),\n        (10000, 97),\n    ]\n\n    max_x = 0\n    if test_cases:\n        max_x = max(case[0] for case in test_cases)\n\n    # Pre-compute primes up to a safe limit. Primality of n+2 for n up to x-2 is needed.\n    # The largest n+2 is max_x.\n    prime_limit = max_x\n    is_prime, all_primes = sieve_eratosthenes(prime_limit)\n\n    results = []\n    for x, z in test_cases:\n        result = compute_quintuple(x, z, all_primes, is_prime)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    result_strings = [str(r).replace(' ', '') for r in results]\n    print(f\"[{','.join(result_strings)}]\")\n\nsolve()\n```", "id": "3009401"}, {"introduction": "The effectiveness of any sieve method hinges on a delicate balance between its main term and its error term, a trade-off governed by the sifting level $z$. This final practice [@problem_id:3009399] elevates our perspective from implementation to theoretical optimization. You will analyze a standard model for the Brun sieve's upper bound and determine the asymptotically optimal choice of $z$ that minimizes this bound. This exercise provides a hands-on experience with the analytical techniques used to evaluate the performance of a sieve and reveals the fundamental limitations that prevent the pure Brun sieve from proving the twin prime conjecture.", "problem": "Let $x \\geq \\exp(\\exp(1))$ be a large real parameter. Consider the application of Brun's pure sieve to the set $\\mathcal{A} = \\{n \\leq x : n \\text{ and } n+2 \\text{ are both prime}\\}$, with sifting set $\\mathcal{P}$ equal to the set of all primes and sifting level $z \\in [2,x)$. The sieve has dimension $\\kappa = 2$ for the polynomial $n(n+2)$, and its upper bound in the classical pure sieve framework separates into a main term and an error term. Using the dimension $\\kappa = 2$ and Mertens-type product estimates over primes, the main term can be uniformly modeled by a factor of order $(\\ln z)^{-2}$, and the truncation error can be dominated by a term polynomial in $z$. In particular, under these widely accepted sieve heuristics, one arrives at an upper bound of the form\n$$\nU(x,z) \\leq \\frac{A\\,x}{(\\ln z)^{2}} + B\\,z^{2},\n$$\nwhere $A0$ and $B0$ are absolute constants arising respectively from the local weights of the sieve (for $\\kappa = 2$) and from the combinatorial truncation remainder, independent of $x$ and $z$.\n\nTreating $U(x,z)$ as a function of $z$ for fixed large $x$, determine an asymptotically optimal choice $z = z^{\\ast}(x)$ that minimizes $U(x,z)$ as $x \\to \\infty$, expressed in closed form in terms of $x$, $A$, and $B$. Your final answer must be a single analytic expression. No rounding is required.", "solution": "The problem requires us to find the asymptotically optimal choice of the sifting level $z$, denoted $z^{\\ast}(x)$, that minimizes the upper bound function $U(x,z)$ for a fixed large $x$. The function is given by:\n$$U(x,z) = \\frac{A x}{(\\ln z)^{2}} + B z^{2}$$\nwhere $x$ is a large parameter, $z \\in [2, x)$ is the variable to be optimized, and $A  0, B  0$ are absolute constants.\n\nTo find the value of $z$ that minimizes $U(x,z)$, we treat $U$ as a function of $z$ and use calculus to find its critical points. We compute the first derivative of $U(x,z)$ with respect to $z$ and set it to zero.\n\nLet $f(z) = U(x,z)$. The derivative of $f(z)$ with respect to $z$ is:\n$$\\frac{d f}{dz} = \\frac{d}{dz} \\left( A x (\\ln z)^{-2} + B z^{2} \\right)$$\nUsing the chain rule and power rule for differentiation:\n$$\\frac{d}{dz} \\left( A x (\\ln z)^{-2} \\right) = A x \\cdot (-2) (\\ln z)^{-3} \\cdot \\frac{d}{dz}(\\ln z) = -2 A x (\\ln z)^{-3} \\cdot \\frac{1}{z} = -\\frac{2 A x}{z (\\ln z)^{3}}$$\nAnd the derivative of the second term is:\n$$\\frac{d}{dz} (B z^{2}) = 2 B z$$\nCombining these, the derivative of $f(z)$ is:\n$$\\frac{d f}{dz} = 2 B z - \\frac{2 A x}{z (\\ln z)^{3}}$$\nTo find the minimum, we set the derivative to zero, which occurs at $z = z^{\\ast}$:\n$$2 B z^{\\ast} - \\frac{2 A x}{z^{\\ast} (\\ln z^{\\ast})^{3}} = 0$$\n$$2 B z^{\\ast} = \\frac{2 A x}{z^{\\ast} (\\ln z^{\\ast})^{3}}$$\nMultiplying by $z^{\\ast}$ and dividing by $2$, we obtain the equation that defines the optimal $z^{\\ast}$:\n$$B (z^{\\ast})^{2} (\\ln z^{\\ast})^{3} = A x$$\n$$(z^{\\ast})^{2} (\\ln z^{\\ast})^{3} = \\frac{A x}{B}$$\nThis equation cannot be solved for $z^{\\ast}$ in terms of elementary functions. However, the problem asks for an asymptotically optimal choice as $x \\to \\infty$. We can find an asymptotic solution for $z^{\\ast}$.\n\nAs $x \\to \\infty$, the right side, $\\frac{A x}{B}$, grows, which implies $z^{\\ast}$ must also grow. Let's take the natural logarithm of both sides of the equation:\n$$\\ln\\left((z^{\\ast})^{2} (\\ln z^{\\ast})^{3}\\right) = \\ln\\left(\\frac{A x}{B}\\right)$$\n$$2 \\ln(z^{\\ast}) + 3 \\ln(\\ln z^{\\ast}) = \\ln(x) + \\ln\\left(\\frac{A}{B}\\right)$$\nFor large $x$, $z^{\\ast}$ is large, and $\\ln(z^{\\ast})$ grows much faster than $\\ln(\\ln z^{\\ast})$. Therefore, the dominant terms in the equation are $2 \\ln(z^{\\ast})$ on the left and $\\ln(x)$ on the right. This gives us a first-order asymptotic approximation:\n$$2 \\ln(z^{\\ast}) \\approx \\ln(x)$$\n$$\\ln(z^{\\ast}) \\approx \\frac{1}{2} \\ln(x)$$\nNow we can use this approximation to find an asymptotic expression for $z^{\\ast}$. From the equation $(z^{\\ast})^{2} (\\ln z^{\\ast})^{3} = \\frac{A x}{B}$, we can write:\n$$(z^{\\ast})^{2} = \\frac{A x}{B(\\ln z^{\\ast})^{3}}$$\n$$z^{\\ast} = \\sqrt{\\frac{A x}{B(\\ln z^{\\ast})^{3}}} = \\left(\\frac{A x}{B}\\right)^{1/2} (\\ln z^{\\ast})^{-3/2}$$\nSubstituting our approximation $\\ln(z^{\\ast}) \\approx \\frac{1}{2} \\ln(x)$ into this expression:\n$$z^{\\ast} \\approx \\left(\\frac{A x}{B}\\right)^{1/2} \\left(\\frac{1}{2} \\ln x\\right)^{-3/2}$$\n$$z^{\\ast} \\approx \\left(\\frac{A}{B}\\right)^{1/2} x^{1/2} \\left(\\frac{1}{2}\\right)^{-3/2} (\\ln x)^{-3/2}$$\nSince $(\\frac{1}{2})^{-3/2} = (2^{ -1})^{-3/2} = 2^{3/2} = 2\\sqrt{2}$, we have:\n$$z^{\\ast} \\approx \\left(\\frac{A}{B}\\right)^{1/2} x^{1/2} (2\\sqrt{2}) (\\ln x)^{-3/2}$$\n$$z^{\\ast} \\approx 2\\sqrt{2} \\sqrt{\\frac{A}{B}} \\frac{x^{1/2}}{(\\ln x)^{3/2}}$$\nThis can be written more compactly as:\n$$z^{\\ast} \\approx \\sqrt{\\frac{8A}{B}} \\frac{x^{1/2}}{(\\ln x)^{3/2}}$$\nThis is the leading-order asymptotic expression for the optimal sifting level $z^{\\ast}(x)$.\n\nTo confirm this is a minimum, we can check the sign of the second derivative of $f(z)$:\n$$\\frac{d^2 f}{dz^2} = \\frac{d}{dz} \\left( 2 B z - 2 A x z^{-1} (\\ln z)^{-3} \\right)$$\n$$\\frac{d^2 f}{dz^2} = 2 B - 2 A x \\left( (-1)z^{-2}(\\ln z)^{-3} + z^{-1}(-3)(\\ln z)^{-4} \\frac{1}{z} \\right)$$\n$$\\frac{d^2 f}{dz^2} = 2 B + 2 A x \\left( z^{-2}(\\ln z)^{-3} + 3 z^{-2}(\\ln z)^{-4} \\right)$$\n$$\\frac{d^2 f}{dz^2} = 2 B + \\frac{2 A x}{z^2 (\\ln z)^3} \\left( 1 + \\frac{3}{\\ln z} \\right)$$\nAt the critical point $z^{\\ast}$, we know that $B(z^{\\ast})^2(\\ln z^{\\ast})^3 = Ax$. So, $\\frac{Ax}{(z^{\\ast})^2(\\ln z^{\\ast})^3} = B$. Substituting this into the second derivative expression evaluated at $z=z^{\\ast}$:\n$$\\left. \\frac{d^2 f}{dz^2} \\right|_{z=z^{\\ast}} = 2 B + 2 B \\left( 1 + \\frac{3}{\\ln z^{\\ast}} \\right) = 4 B + \\frac{6 B}{\\ln z^{\\ast}}$$\nSince $B  0$ and $z^{\\ast}$ is large (so $\\ln z^{\\ast}  0$), the second derivative is positive. Thus, the critical point $z^{\\ast}$ corresponds to a local minimum, which is also the global minimum for $z$ in the specified range due to the function's shape.\nThe asymptotically optimal choice $z = z^{\\ast}(x)$ is therefore given by the derived expression.", "answer": "$$\\boxed{\\sqrt{\\frac{8A}{B}} \\frac{x^{1/2}}{(\\ln x)^{3/2}}}$$", "id": "3009399"}]}