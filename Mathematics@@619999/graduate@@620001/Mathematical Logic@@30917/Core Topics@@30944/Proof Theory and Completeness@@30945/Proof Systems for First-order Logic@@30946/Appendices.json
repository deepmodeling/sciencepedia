{"hands_on_practices": [{"introduction": "Before we can reason about proofs, we must be certain of how to determine the truth of a formula in a given \"structure.\" This exercise provides a concrete first-order structure and asks for the evaluation of a simple sentence, directly applying Tarski's definition of truth. It serves as a crucial check on understanding the foundational interplay between syntax and semantics [@problem_id:2979687].", "problem": "Let $\\mathcal{L}$ be a first-order language with a constant symbol $a$, a unary predicate symbol $P(\\cdot)$, and a binary predicate symbol $R(\\cdot,\\cdot)$. Consider the standard Tarskian semantics of first-order logic with the following interpretations and conditions.\n\nFundamental base and setup:\n- A structure $\\mathcal{M} = \\langle D, I \\rangle$ where the domain $D = \\{d_0, d_1, d_2\\}$.\n- The interpretation $I$ maps the constant symbol $a$ to $d_0$, i.e., $I(a) = d_0$.\n- The interpretation of the unary predicate $P$ is $I(P) = \\{d_1\\}$.\n- The interpretation of the binary predicate $R$ is identity on $D$, i.e., $I(R) = \\{(d,d) : d \\in D\\}$.\n- A variable assignment $g$ is arbitrary but fixed.\n\nSemantic clauses (classical Tarskian semantics):\n- For any variable assignment $g$ and term $t$, the value $I(t)^g$ is the interpretation of $t$ under $I$ and $g$.\n- For any formula $\\varphi$, satisfaction $\\mathcal{M}, g \\models \\varphi$ is defined by the standard recursive clauses: for atomic formulas, $\\mathcal{M}, g \\models P(t)$ iff $I(t)^g \\in I(P)$, and $\\mathcal{M}, g \\models R(t_1,t_2)$ iff $(I(t_1)^g, I(t_2)^g) \\in I(R)$; for connectives, the classical truth conditions apply; for quantifiers, $\\mathcal{M}, g \\models \\exists x\\, \\varphi$ iff there exists $d \\in D$ such that $\\mathcal{M}, g[x \\mapsto d] \\models \\varphi$, and $\\mathcal{M}, g \\models \\forall x\\, \\varphi$ iff for every $d \\in D$, $\\mathcal{M}, g[x \\mapsto d] \\models \\varphi$.\n\nNatural Deduction (ND) rule under consideration:\n- Existential elimination ($\\exists$-elimination): from $\\exists x\\, \\varphi(x)$, together with a subderivation that assumes $\\varphi(c)$ for a fresh constant $c$ (witness condition) and derives $\\psi$ while discharging the assumption $\\varphi(c)$ such that $c$ does not occur free in $\\psi$ and does not occur in any undischarged assumption except possibly $\\varphi(c)$ (discharge condition), one may infer $\\psi$.\n\nIn the given language and structure, consider the premises $\\exists x\\, P(x)$ and $\\forall x\\, \\big(P(x) \\rightarrow R(a,a)\\big)$, and the ND subderivation that assumes $P(c)$ for a fresh constant $c$ and derives the sentence $R(a,a)$, discharging the assumption $P(c)$, and obeying the witness and discharge conditions described above.\n\nDefine the semantic evaluation $v_{\\mathcal{M}}(\\chi)$ of a sentence $\\chi$ in $\\mathcal{M}$ by $v_{\\mathcal{M}}(\\chi) = 1$ if $\\mathcal{M}, g \\models \\chi$ and $v_{\\mathcal{M}}(\\chi) = 0$ otherwise. Compute the value of $v_{\\mathcal{M}}(R(a,a))$ as a real number in $\\{0,1\\}$ by evaluating under the described structure and conditions. Return $1$ if the sentence is satisfied and $0$ otherwise. No rounding is required. Express your final answer as a single number.", "solution": "The problem will first be subjected to a rigorous validation process.\n\n### Step 1: Extract Givens\n- **Language $\\mathcal{L}$**: Contains a constant symbol $a$, a unary predicate symbol $P(\\cdot)$, and a binary predicate symbol $R(\\cdot,\\cdot)$.\n- **Structure $\\mathcal{M}$**: $\\mathcal{M} = \\langle D, I \\rangle$.\n- **Domain $D$**: $D = \\{d_0, d_1, d_2\\}$.\n- **Interpretation $I$**:\n    - $I(a) = d_0$.\n    - $I(P) = \\{d_1\\}$.\n    - $I(R) = \\{(d,d) : d \\in D\\}$.\n- **Variable Assignment $g$**: Arbitrary but fixed.\n- **Semantics**: Standard Tarskian semantics for first-order logic.\n    - $\\mathcal{M}, g \\models P(t)$ iff $I(t)^g \\in I(P)$.\n    - $\\mathcal{M}, g \\models R(t_1,t_2)$ iff $(I(t_1)^g, I(t_2)^g) \\in I(R)$.\n    - $\\mathcal{M}, g \\models \\exists x\\, \\varphi$ iff there exists $d \\in D$ such that $\\mathcal{M}, g[x \\mapsto d] \\models \\varphi$.\n    - $\\mathcal{M}, g \\models \\forall x\\, \\varphi$ iff for every $d \\in D$, $\\mathcal{M}, g[x \\mapsto d] \\models \\varphi$.\n- **Natural Deduction (ND) Context**:\n    - Rule: Existential elimination ($\\exists$-elimination) is described with its standard witness and discharge conditions.\n    - Premises: $\\exists x\\, P(x)$ and $\\forall x\\, \\big(P(x) \\rightarrow R(a,a)\\big)$.\n    - Subderivation: A correct ND subderivation from the assumption $P(c)$ to the conclusion $R(a,a)$ is described.\n- **Semantic Evaluation Function $v_{\\mathcal{M}}$**: For a sentence $\\chi$, $v_{\\mathcal{M}}(\\chi) = 1$ if $\\mathcal{M}, g \\models \\chi$ and $v_{\\mathcal{M}}(\\chi) = 0$ otherwise.\n- **Task**: Compute the value of $v_{\\mathcal{M}}(R(a,a))$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is assessed for validity.\n1.  **Scientifically Grounded**: The problem is set within the formal framework of first-order logic, specifically model theory. All definitions (language, structure, Tarskian semantics) are standard and mathematically sound. No scientific or factual unsoundness is present.\n2.  **Well-Posed**: The problem asks for the computation of a specific value, $v_{\\mathcal{M}}(R(a,a))$, based on a completely specified logical structure and semantic rules. The structure is finite and the interpretations are explicit, guaranteeing that the truth value of any sentence is uniquely determinable. A unique solution exists.\n3.  **Objective**: The language is precise, formal, and free of ambiguity or subjective claims.\n4.  **Completeness**: All necessary information (domain, interpretations of all non-logical symbols, semantic rules) is provided to evaluate the truth of the sentence in question. The problem is self-contained.\n5.  **Distractions vs. Contradictions**: The contextual information regarding the Natural Deduction proof is not essential for the direct semantic evaluation of $R(a,a)$, but it is not contradictory. In fact, it serves as a consistency check. The premises $\\exists x\\, P(x)$ and $\\forall x\\, \\big(P(x) \\rightarrow R(a,a)\\big)$ are true in the given structure $\\mathcal{M}$, and $R(a,a)$ is a logical consequence of these premises. The soundness of first-order logic implies that if the premises are true in a model, the conclusion must also be true. This confirms the result obtained by direct evaluation, rather than creating a contradiction.\n\nThe problem is consistent, complete, and mathematically well-defined.\n\n### Step 3: Verdict and Action\nThe problem is **valid**. A solution will be provided.\n\n### Solution\nThe objective is to compute the value of $v_{\\mathcal{M}}(R(a,a))$, which is defined as $1$ if the sentence $R(a,a)$ is true in the structure $\\mathcal{M}$ (written $\\mathcal{M} \\models R(a,a)$), and $0$ otherwise. The truth of a sentence is independent of any particular variable assignment $g$, so we need to determine if $\\mathcal{M} \\models R(a,a)$.\n\nThe sentence $R(a,a)$ is an atomic formula of the form $R(t_1, t_2)$, where both terms $t_1$ and $t_2$ are the constant symbol $a$.\n\nAccording to the provided Tarskian semantic rules, a structure $\\mathcal{M}$ satisfies an atomic formula $R(t_1, t_2)$ if and only if the pair of interpretations of the terms $(I(t_1), I(t_2))$ is a member of the interpretation of the predicate symbol $R$, which is $I(R)$. Since the terms are constants, their interpretation is independent of the variable assignment $g$. Thus, the condition is:\n$$ \\mathcal{M} \\models R(a,a) \\iff (I(a), I(a)) \\in I(R) $$\nWe are given the specific interpretations for the constant $a$ and the predicate $R$ in the structure $\\mathcal{M}$:\n1.  The interpretation of the constant symbol $a$ is $I(a) = d_0$.\n2.  The interpretation of the binary predicate symbol $R$ is the identity relation on the domain $D$. The domain is $D = \\{d_0, d_1, d_2\\}$.\n\nThe identity relation on $D$ is the set of all pairs $(d,d)$ where $d$ is an element of $D$. Therefore, the interpretation of $R$ is explicitly:\n$$ I(R) = \\{(d,d) : d \\in D\\} = \\{(d_0, d_0), (d_1, d_1), (d_2, d_2)\\} $$\nNow, we can substitute the interpretation of $a$ into the satisfaction condition:\n$$ (I(a), I(a)) = (d_0, d_0) $$\nWe must check if this pair is in the set $I(R)$:\n$$ (d_0, d_0) \\in \\{(d_0, d_0), (d_1, d_1), (d_2, d_2)\\} $$\nThis condition is manifestly true. The pair $(d_0, d_0)$ is indeed an element of the set $I(R)$.\n\nSince the condition $(I(a), I(a)) \\in I(R)$ is satisfied, we conclude that the sentence $R(a,a)$ is true in the structure $\\mathcal{M}$.\n$$ \\mathcal{M} \\models R(a,a) $$\nBy the definition of the function $v_{\\mathcal{M}}$, if a sentence is satisfied in $\\mathcal{M}$, its value is $1$.\n$$ v_{\\mathcal{M}}(R(a,a)) = 1 $$\n\nThe contextual information about the premises $\\exists x\\, P(x)$, $\\forall x\\, (P(x) \\rightarrow R(a,a))$, and the Natural Deduction proof is consistent with this result. As a check, we can verify that $\\mathcal{M}$ is a model for the premises.\n- $\\mathcal{M} \\models \\exists x\\, P(x)$ because there exists $d \\in D$ such that $d \\in I(P)$. Specifically, for $d=d_1$, we have $d_1 \\in I(P)=\\{d_1\\}$.\n- $\\mathcal{M} \\models \\forall x\\, (P(x) \\rightarrow R(a,a))$ because for every $d \\in D$, the implication $P(d) \\rightarrow R(a,a)$ is true. We have already established that $R(a,a)$ is true in $\\mathcal{M}$. An implication with a true consequent is always true, regardless of the truth value of the antecedent.\nSince $\\mathcal{M}$ is a model of the premises and $R(a,a)$ is formally derivable from them, the soundness of first-order logic requires that $\\mathcal{M} \\models R(a,a)$, which confirms our direct evaluation.\nThe final answer is the numerical value assigned to a true sentence.", "answer": "$$\\boxed{1}$$", "id": "2979687"}, {"introduction": "A core skill in logic is not just proving theorems but also demonstrating when a line of reasoning is flawed by constructing a counterexample. This practice challenges a common misconception about Skolemization, a powerful technique in automated deduction, by showing why it cannot be naively applied inside the scope of other logical operators. This exercise sharpens your ability to build models that falsify invalid claims, a fundamental aspect of logical analysis [@problem_id:2979700].", "problem": "Let $\\sigma$ be a first-order signature with one binary predicate symbol $P$ and one constant symbol $c$. Consider the non-prenex formula $\\varphi := \\neg \\exists y \\, \\forall x \\, P(x,y)$. A naive but incorrect practice is to Skolemize directly inside non-prenex contexts (such as under a negation) by replacing the existentially quantified variable $y$ with the new constant $c$ and dropping its quantifier, yielding the formula $\\psi := \\neg \\forall x \\, P(x,c)$, equivalently $\\exists x \\, \\neg P(x,c)$. \n\nTasks:\n- Using only foundational definitions of first-order semantics, prenex transformation, and Skolemization, provide a precise argument that this naive Skolemization may change truth values. Construct an explicit structure over a fixed two-element domain witnessing that $\\varphi$ and $\\psi$ can have different truth values. Then, state the correct general procedure to first transform a formula into prenex normal form and then Skolemize in a way that is sound for satisfiability.\n- Let the domain be $D = \\{0,1\\}$, and let structures over $D$ interpret $P$ as an arbitrary subset $P^{\\mathcal{M}} \\subseteq D \\times D$ and $c$ as an arbitrary element of $D$. Denote by $N$ the number of pairs $(P^{\\mathcal{M}}, c^{\\mathcal{M}})$ such that $\\varphi$ is false while its naive Skolemization $\\psi$ is true. Compute $N$. \n\nExpress your final answer as an exact integer (no rounding).", "solution": "The problem presents two tasks: first, to demonstrate the invalidity of a \"naive Skolemization\" procedure and describe the correct one; second, to compute the number of specific structures on a two-element domain where the original and naively transformed formulas have a particular truth-value relationship.\n\n### Problem Validation\n\n**Step 1: Extract Givens**\n- Signature $\\sigma$: one binary predicate symbol $P$ and one constant symbol $c$.\n- Formula $\\varphi := \\neg \\exists y \\, \\forall x \\, P(x,y)$.\n- Naively generated formula $\\psi := \\neg \\forall x \\, P(x,c)$.\n- Domain for the second task: $D = \\{0,1\\}$.\n- Interpretations: $P$ is interpreted as an arbitrary subset $P^{\\mathcal{M}} \\subseteq D \\times D$, and $c$ as an arbitrary element $c^{\\mathcal{M}} \\in D$.\n- Quantity to compute: $N$, the number of pairs $(P^{\\mathcal{M}}, c^{\\mathcal{M}})$ for which $\\varphi$ is false and $\\psi$ is true.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is well-defined and grounded in the principles of first-order logic, specifically model theory and proof theory concerning Skolemization and normal forms.\n- **Scientifically Grounded:** The concepts of first-order semantics, prenex normal form, and Skolemization are foundational in mathematical logic. The problem investigates a common misconception about the application of Skolemization, which is a valid pedagogical and theoretical exercise.\n- **Well-Posed:** The formulas $\\varphi$ and $\\psi$ are syntactically correct. The task to construct a counterexample is clearly stated. The combinatorial task of computing $N$ is well-defined with a specific domain and clear conditions. A unique integer solution for $N$ exists.\n- **Objective:** The problem is stated using formal mathematical language, devoid of ambiguity or subjectivity.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A full solution will be provided.\n\n### Part 1: Analysis of Naive Skolemization\n\nThe naive procedure transforms $\\varphi := \\neg \\exists y \\, \\forall x \\, P(x,y)$ into $\\psi := \\neg \\forall x \\, P(x,c)$. This transformation is unsound because it does not preserve logical equivalence, nor does it correctly follow the rules for creating an equisatisfiable formula.\n\n**Argument for Invalidity**\nThe core of the error lies in misapplying a rule inside the scope of a negation.\n1.  The formula $\\varphi$ is $\\neg \\exists y \\, \\forall x \\, P(x,y)$. By the standard equivalence for quantifiers and negation $\\neg \\exists z \\, \\Phi \\equiv \\forall z \\, \\neg \\Phi$, $\\varphi$ is logically equivalent to $\\forall y \\, \\neg (\\forall x \\, P(x,y))$.\n2.  Applying the dual equivalence $\\neg \\forall z \\, \\Phi \\equiv \\exists z \\, \\neg \\Phi$ inside, we get $\\varphi \\equiv \\forall y \\, \\exists x \\, \\neg P(x,y)$. This is the Prenex Normal Form (PNF) of $\\varphi$. This formula asserts that for *every* element $y$ in the domain, there exists some element $x$ (which may depend on $y$) such that $P(x,y)$ is false.\n3.  The formula $\\psi$ is $\\neg \\forall x \\, P(x,c)$, which is equivalent to $\\exists x \\, \\neg P(x,c)$. This formula asserts that for the *specific* element denoted by $c$, there exists some $x$ such that $P(x,c)$ is false.\n4.  The formula $\\varphi$ implies $\\psi$. This is because $\\varphi$ makes a universal claim about all $y$, so it must hold for the particular element $c$. Formally, $\\forall y \\, \\exists x \\, \\neg P(x,y) \\models \\exists x \\, \\neg P(x,c)$ by universal instantiation.\n5.  However, the converse is not true: $\\psi$ does not imply $\\varphi$. The fact that the property holds for a single element $c$ does not guarantee it holds for all elements $y$. A transformation is sound only if it preserves some essential logical property, like equivalence or satisfiability. Since equivalence is not preserved, the naive procedure is invalid as a general substitution rule.\n\n**Counterexample Structure**\nTo demonstrate that $\\varphi$ and $\\psi$ can have different truth values, we need to find a structure $\\mathcal{M} = (D, P^{\\mathcal{M}}, c^{\\mathcal{M}})$ where one is true and the other is false. As $\\varphi \\models \\psi$, the only possibility is for $\\psi$ to be true and $\\varphi$ to be false.\nLet the domain be $D = \\{0,1\\}$.\nLet the interpretation of the constant $c$ be $c^{\\mathcal{M}} = 0$.\nLet the interpretation of the predicate $P$ be $P^{\\mathcal{M}} = \\{(0,1), (1,1)\\}$.\n\nWe now evaluate $\\varphi$ and $\\psi$ in this structure $\\mathcal{M}$.\n- **Truth of $\\varphi$**: $\\varphi$ is $\\neg \\exists y \\, \\forall x \\, P(x,y)$. This is false if $\\exists y \\, \\forall x \\, P(x,y)$ is true. Let's check $\\exists y \\in \\{0,1\\}$.\n    - For $y=0$: Is $\\forall x \\in \\{0,1\\}, P(x,0)$ true? This requires $(0,0) \\in P^{\\mathcal{M}}$ and $(1,0) \\in P^{\\mathcal{M}}$. Neither is in $P^{\\mathcal{M}}$, so this fails.\n    - For $y=1$: Is $\\forall x \\in \\{0,1\\}, P(x,1)$ true? This requires $(0,1) \\in P^{\\mathcal{M}}$ and $(1,1) \\in P^{\\mathcal{M}}$. Both are in $P^{\\mathcal{M}}$, so this holds.\n    - Since we found a witness $y=1$, the formula $\\exists y \\, \\forall x \\, P(x,y)$ is true in $\\mathcal{M}$.\n    - Therefore, $\\varphi$ is **false** in $\\mathcal{M}$.\n- **Truth of $\\psi$**: $\\psi$ is $\\neg \\forall x \\, P(x,c)$. With $c^{\\mathcal{M}}=0$, this is $\\neg \\forall x \\, P(x,0)$. This is true if $\\forall x \\, P(x,0)$ is false.\n    - $\\forall x \\, P(x,0)$ requires $(0,0) \\in P^{\\mathcal{M}}$ and $(1,0) \\in P^{\\mathcal{M}}$. As established before, this is false.\n    - Therefore, $\\neg \\forall x \\, P(x,0)$ is **true** in $\\mathcal{M}$.\n\nThus, in this structure $\\mathcal{M}$, $\\varphi$ is false while $\\psi$ is true, proving they are not logically equivalent.\n\n**Correct Skolemization Procedure**\nSkolemization is a procedure that eliminates existential quantifiers to produce an equisatisfiable formula. It must be applied to a formula in Prenex Normal Form.\n1.  **Convert to PNF**: As shown, $\\varphi := \\neg \\exists y \\, \\forall x \\, P(x,y)$ is equivalent to $\\varphi' := \\forall y \\, \\exists x \\, \\neg P(x,y)$.\n2.  **Skolemize**: The existential quantifier $\\exists x$ is within the scope of the universal quantifier $\\forall y$. To eliminate $\\exists x$, we must introduce a *new* function symbol, say $f$, whose arity matches the number of universal quantifiers governing it. Here, $x$ depends on $y$, so we use a unary function $f(y)$. The Skolem form is obtained by dropping $\\exists x$ and replacing all free occurrences of $x$ in its scope with $f(y)$.\n3.  **Result**: The correct Skolem form of $\\varphi$ is $\\forall y \\, \\neg P(f(y),y)$. This formula is satisfiable if and only if the original formula $\\varphi$ is satisfiable. The naive procedure fails on two counts: it does not start from PNF, and it incorrectly uses a constant instead of a function to replace the dependent variable.\n\n### Part 2: Computation of `N`\n\nWe need to compute the number $N$ of pairs $(P^{\\mathcal{M}}, c^{\\mathcal{M}})$ for which $\\varphi$ is false and $\\psi$ is true, over the domain $D = \\{0,1\\}$.\n- The condition \"`$\\varphi$` is false\" means $\\neg\\varphi$ is true. $\\neg\\varphi \\equiv \\exists y \\, \\forall x \\, P(x,y)$.\n- The condition \"`$\\psi$` is true\" means $\\psi \\equiv \\exists x \\, \\neg P(x,c)$ is true.\n\nLet's analyze these two conditions over $D=\\{0,1\\}$. An interpretation of $P$ is a subset of $D \\times D = \\{(0,0), (0,1), (1,0), (1,1)\\}$. There are $2^4=16$ possible relations $P^{\\mathcal{M}}$.\n\n**Condition 1: $\\exists y \\, \\forall x \\, P(x,y)$ is true.**\nThis means there exists a $y \\in \\{0,1\\}$ such that for all $x \\in \\{0,1\\}$, the pair $(x,y)$ is in $P^{\\mathcal{M}}$.\n- For $y=0$: $(0,0) \\in P^{\\mathcal{M}}$ and $(1,0) \\in P^{\\mathcal{M}}$. Let's denote this proposition by $C_0$.\n- For $y=1$: $(0,1) \\in P^{\\mathcal{M}}$ and $(1,1) \\in P^{\\mathcal{M}}$. Let's denote this proposition by $C_1$.\nCondition 1 is $C_0 \\lor C_1$.\n\n**Condition 2: $\\exists x \\, \\neg P(x,c)$ is true.**\nThis means there exists an $x \\in \\{0,1\\}$ such that the pair $(x, c^{\\mathcal{M}})$ is *not* in $P^{\\mathcal{M}}$. This is equivalent to saying that $\\forall x \\, P(x, c^{\\mathcal{M}})$ is false.\nWe must consider the two possible interpretations of $c$.\n\n**Case A: $c^{\\mathcal{M}} = 0$**\n- Condition 2 becomes $\\exists x \\, \\neg P(x,0)$, which is the negation of $\\forall x \\, P(x,0)$. In our notation, this is $\\neg C_0$.\n- We need to count the number of relations $P^{\\mathcal{M}}$ that satisfy $(C_0 \\lor C_1) \\land \\neg C_0$.\n- By propositional logic, this is equivalent to $\\neg C_0 \\land C_1$.\n    - $C_1$ being true means $(0,1) \\in P^{\\mathcal{M}}$ and $(1,1) \\in P^{\\mathcal{M}}$. This determines the truth values for these two pairs. There is $1$ way for this.\n    - $\\neg C_0$ being true means that it's not the case that both $(0,0) \\in P^{\\mathcal{M}}$ and $(1,0) \\in P^{\\mathcal{M}}$. There are $2^2=4$ possibilities for the pairs $((0,0), (1,0))$. The condition $C_0$ excludes only the case where both are true. Thus, there are $4-1=3$ ways to satisfy $\\neg C_0$.\n- The number of relations $P^{\\mathcal{M}}$ in this case is $3 \\times 1 = 3$.\n\n**Case B: $c^{\\mathcal{M}} = 1$**\n- Condition 2 becomes $\\exists x \\, \\neg P(x,1)$, which is the negation of $\\forall x \\, P(x,1)$. In our notation, this is $\\neg C_1$.\n- We need to count the number of relations $P^{\\mathcal{M}}$ that satisfy $(C_0 \\lor C_1) \\land \\neg C_1$.\n- This is equivalent to $C_0 \\land \\neg C_1$.\n    - $C_0$ being true means $(0,0) \\in P^{\\mathcal{M}}$ and $(1,0) \\in P^{\\mathcal{M}}$. This gives $1$ way.\n    - $\\neg C_1$ being true means it's not the case that both $(0,1) \\in P^{\\mathcal{M}}$ and $(1,1) \\in P^{\\mathcal{M}}$. Similar to the above, there are $2^2-1=3$ ways for this.\n- The number of relations $P^{\\mathcal{M}}$ in this case is $1 \\times 3 = 3$.\n\n**Total Count $N$**\nThe total number $N$ is the sum of counts from all possible interpretations of $c$. There are $2$ choices for $c^{\\mathcal{M}}$.\n$N =` (Number of pairs `(P^{\\mathcal{M}}, c^{\\mathcal{M}})` with `c^{\\mathcal{M}}=0`) + (Number of pairs `(P^{\\mathcal{M}}, c^{\\mathcal{M}})` with `c^{\\mathcal{M}}=1`)\n$N = 3 + 3 = 6$.\n\nThere are $6$ pairs of $(P^{\\mathcal{M}}, c^{\\mathcal{M}})$ for which $\\varphi$ is false and $\\psi$ is true.", "answer": "$$\n\\boxed{6}\n$$", "id": "2979700"}, {"introduction": "Why is first-order logic considered \"undecidable\"? This exercise provides a hands-on feel for the answer by exploring the limits of a systematic but resource-bounded proof-search procedure. You will demonstrate that for any fixed computational resource, like the complexity of terms allowed, there exist valid theorems the procedure cannot prove, revealing the necessity of unbounded search in first-order logic [@problem_id:2979699].", "problem": "Let $\\mathcal{L}$ be a first-order language with a constant symbol $0$, a unary function symbol $s$, and a unary predicate symbol $P$. For a ground term $t$ in $\\mathcal{L}$, define its depth $\\mathrm{dp}(t)$ inductively by $\\mathrm{dp}(0) = 0$ and $\\mathrm{dp}(s(t)) = \\mathrm{dp}(t) + 1$. For $k \\in \\mathbb{N}$ with $k \\geq 1$, consider the $\\mathcal{L}$-sequent\n$$\n\\Sigma_k \\;:\\; P(0),\\; \\forall x\\,(P(x) \\rightarrow P(s(x))) \\;\\;\\Rightarrow\\;\\; \\exists x\\, P(s^{k}(x)),\n$$\nwhere $s^{k}(x)$ denotes the $k$-fold iterate of $s$ applied to $x$.\n\nWe work in Gentzen’s cut-free sequent calculus for classical first-order logic (LK without the cut rule). Consider the following naive depth-bounded proof search procedure: restrict all quantifier instantiations to ground terms built from $0$ and $s$ of depth at most $d$, where $d \\in \\mathbb{N}$, and restrict existential-right witnesses to the same set of ground terms. That is, in applications of the universal-left rule, the quantified variable may be instantiated only by ground terms $t$ with $\\mathrm{dp}(t) \\leq d$, and in applications of the existential-right rule, the witness must be a ground term $t$ with $\\mathrm{dp}(t) \\leq d$.\n\nTask:\n1. Starting only from the standard rules of cut-free LK and the definition of $\\mathrm{dp}(\\cdot)$ above, give a logically complete argument that $\\Sigma_k$ is valid for each $k \\geq 1$.\n2. Prove that there is a minimal bound $d(k)$ such that the naive depth-bounded proof search succeeds for $\\Sigma_k$ if and only if $d \\geq d(k)$.\n3. Compute the exact closed-form expression for $d(k)$ as a function of $k$.\n\nExplain why your computation exhibits a counterexample to completeness of naive depth-bounded proof search for any fixed bound $d$: namely, that for the valid sequent $\\Sigma_{d+1}$, the procedure with bound $d$ fails.\n\nYour final answer should be a single closed-form expression for $d(k)$.", "solution": "We first justify the validity of the sequents $\\Sigma_k$ and then determine the minimal instantiation depth bound $d(k)$ required by naive depth-bounded proof search to obtain a cut-free proof.\n\nStep 1: Validity of $\\Sigma_k$.\nFix any $\\mathcal{L}$-structure $\\mathfrak{M}$ with interpretation of $0$, $s$, and $P$. Assume $\\mathfrak{M} \\models P(0)$ and $\\mathfrak{M} \\models \\forall x\\,(P(x) \\rightarrow P(s(x)))$. By iterating the implication, we obtain $\\mathfrak{M} \\models P(s(0))$, then $\\mathfrak{M} \\models P(s(s(0)))$, and inductively $\\mathfrak{M} \\models P(s^{n}(0))$ for every $n \\in \\mathbb{N}$. In particular, $\\mathfrak{M} \\models P(s^{k}(0))$. Hence $\\mathfrak{M} \\models \\exists x\\, P(s^{k}(x))$ (witness $x = 0$). Therefore, in every $\\mathfrak{M}$ satisfying the antecedents, the succedent $\\exists x\\, P(s^{k}(x))$ holds, so the sequent $\\Sigma_k$ is valid.\n\nStep 2: Upper bound on the needed instantiation depth.\nWe exhibit a cut-free derivation that uses only quantifier instantiations with terms of depth at most $k-1$ and an existential witness of depth $0$.\n\nIn cut-free LK, to derive $\\exists x\\,P(s^{k}(x))$ on the right, it suffices to derive $P(s^{k}(0))$ and then apply $\\exists$-right with the witness term $0$ (which has $\\mathrm{dp}(0)=0$). We use the universal-left rule on $\\forall x\\,(P(x) \\rightarrow P(s(x)))$ instantiated at the following ground terms:\n$$\nx := 0,\\; s(0),\\; s^{2}(0),\\; \\dots,\\; s^{k-1}(0).\n$$\nEach of these ground terms has depth bounded by $k-1$. The instances are the formulas\n$$\nP(s^{i}(0)) \\rightarrow P(s^{i+1}(0)) \\quad \\text{for } i = 0,1,\\dots,k-1.\n$$\nUsing $P(0)$ and these $k$ implications on the left, $k$ applications of the implication-left rule (together with weakening and contraction as needed) yield $P(s^{k}(0))$ on the right. Concretely, one performs a forward-chaining of the form\n$$\nP(0),\\; P(0)\\rightarrow P(s(0)) \\;\\vdash\\; P(s(0)),\n$$\nthen\n$$\nP(s(0)),\\; P(s(0))\\rightarrow P(s^{2}(0)) \\;\\vdash\\; P(s^{2}(0)),\n$$\nand so on, up to $P(s^{k}(0))$. This establishes that there is a cut-free derivation of the sequent using only universal instantiations at depths $\\leq k-1$ and an existential witness of depth $0$. Therefore, the naive depth-bounded search with bound $d = k-1$ succeeds. Hence\n$$\nd(k) \\leq k-1.\n$$\n\nStep 3: Lower bound on the needed instantiation depth.\nWe now argue that no smaller bound can suffice. Consider any cut-free LK derivation of $\\Sigma_k$ in which all quantifier instantiations are restricted to ground terms of depth at most $d$, and all existential-right witnesses are restricted to ground terms of depth at most $d$. We show that if $d \\leq k-2$, then no such derivation can exist.\n\nDefine the $s$-height of a ground term $t$ to be $h(t) := \\mathrm{dp}(t)$. We claim the following invariant for cut-free derivations from the multiset of left formulas $\\{P(0)\\} \\cup \\{\\forall x(P(x)\\rightarrow P(s(x)))\\}$ to a right atomic goal $P(s^{m}(0))$.\n\nInvariant: Along any branch of a cut-free proof, to derive a right-hand atomic formula of the form $P(s^{m}(0))$, there must exist at least one application of the universal-left rule instantiating $\\forall x\\,(P(x)\\rightarrow P(s(x)))$ at the term $s^{m-1}(0)$ (hence of depth $m-1$), and, more generally, the branch contains instances at $0, s(0), \\dots, s^{m-1}(0)$ in order to incrementally advance from $P(0)$ to $P(s^{m}(0))$ via repeated uses of implication-left.\n\nJustification of the invariant: The only left formula that can grow the $s$-height of a right-hand $P(\\cdot)$-goal is an instance of $P(u)\\rightarrow P(s(u))$ obtained from the universal formula. The implication-left rule, applied to $P(u)\\rightarrow P(s(u))$, creates subgoals in which one premise is to derive the antecedent $P(u)$ (possibly by earlier steps) and the other branch continues with the target $P(s(u))$. If the target is $P(s^{m}(0))$, the only way to match this shape is to take $u = s^{m-1}(0)$, so that $P(s(u)) = P(s^{m}(0))$. Proceeding inductively down the branch, to derive $P(s^{m-1}(0))$ one similarly requires the instance with $u = s^{m-2}(0)$, and so on, down to $u=0$ to connect with $P(0)$. Thus, along a successful branch producing $P(s^{m}(0))$, the proof necessarily uses the instance at $s^{m-1}(0)$, whose depth is $m-1$.\n\nApplying the invariant with $m = k$, any cut-free derivation of $P(s^{k}(0))$ requires a universal-left instantiation at $x = s^{k-1}(0)$, a term of depth $k-1$. Therefore, if all allowable instantiation terms must have depth at most $d$, we need $d \\geq k-1$. Equivalently,\n$$\nd(k) \\geq k-1.\n$$\n\nCombining the upper and lower bounds, we obtain the exact value\n$$\nd(k) = k-1.\n$$\n\nConsequence for incompleteness of fixed-depth search: For any fixed bound $d \\in \\mathbb{N}$, the valid sequent $\\Sigma_{d+1}$ requires $d(d+1) = (d+1)-1 = d$ as a minimal bound, hence any bound strictly less than $d$ fails. In particular, the naive depth-bounded proof search with bound $d$ cannot find a proof of $\\Sigma_{d+1}$, even though $\\Sigma_{d+1}$ is valid. This demonstrates that naive depth-bounded proof search is incomplete for first-order logic when the depth bound is fixed a priori and not allowed to increase.\n\nTherefore, the minimal instantiation depth bound as a function of $k$ is\n$$\nd(k) = k-1.\n$$", "answer": "$$\\boxed{k-1}$$", "id": "2979699"}]}