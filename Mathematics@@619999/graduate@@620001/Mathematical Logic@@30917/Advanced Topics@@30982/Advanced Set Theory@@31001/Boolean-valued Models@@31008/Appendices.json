{"hands_on_practices": [{"introduction": "This exercise introduces the fundamental concept of \"canonical names,\" which are the representations of objects from our ground model $V$ inside the Boolean-valued universe $V^{\\mathbb{B}}$. By calculating the Boolean truth values for basic statements about ordinals, we will verify that the embedding of $V$ into $V^{\\mathbb{B}}$ preserves fundamental set-theoretic truths. This practice is the first step in understanding how $V^{\\mathbb{B}}$ acts as a consistent extension of our standard mathematical universe. [@problem_id:2969551]", "problem": "Let $\\mathbb{B}$ be a complete Boolean algebra with top element $\\mathbb{1}$ and bottom element $\\mathbb{0}$, and let $V^{\\mathbb{B}}$ denote the Boolean-valued universe built over $\\mathbb{B}$ by transfinite recursion on rank. In $V^{\\mathbb{B}}$, a name is a set of pairs $(\\sigma,b)$ where $\\sigma$ is a name and $b \\in \\mathbb{B}$. Using only the foundational recursive semantics for Boolean-valued models, define the canonical name $\\dot{\\alpha}$ for an ordinal $\\alpha$ and, for ordinals $\\alpha,\\beta$, derive the Boolean truth values $\\llbracket\\dot{\\alpha}\\in\\dot{\\beta}\\rrbracket$ and $\\llbracket\\dot{\\alpha}=\\dot{\\beta}\\rrbracket$ in $V^{\\mathbb{B}}$ in terms of the ground-model ordinal relations between $\\alpha$ and $\\beta$. Then explicitly evaluate these two Boolean truth values for the particular case $\\alpha=3$ and $\\beta=\\omega$, where $\\omega$ is the first infinite von Neumann ordinal. Express the final answer as a row matrix whose first entry is $\\llbracket\\dot{3}\\in\\dot{\\omega}\\rrbracket$ and whose second entry is $\\llbracket\\dot{3}=\\dot{\\omega}\\rrbracket$. No rounding is required, and no physical units are involved.", "solution": "We begin from the foundational construction of the Boolean-valued universe $V^{\\mathbb{B}}$ and its valuation $\\llbracket\\cdot\\rrbracket$ into the complete Boolean algebra $\\mathbb{B}$. A name is a set $\\tau \\subseteq V^{\\mathbb{B}} \\times \\mathbb{B}$; elements of $\\tau$ are pairs $(\\sigma,b)$ with $\\sigma$ a name and $b \\in \\mathbb{B}$. The valuation $\\llbracket\\cdot\\rrbracket$ of formulas is defined by transfinite recursion on rank, with the atomic clauses for membership and equality given by the standard Tarskian recursion adapted to $\\mathbb{B}$:\n\n$$\n\\llbracket\\tau \\in \\sigma\\rrbracket \\;=\\; \\bigvee_{(\\rho,b)\\in \\sigma} \\big( b \\wedge \\llbracket\\rho = \\tau\\rrbracket \\big),\n$$\n\n\n$$\n\\llbracket\\tau = \\sigma\\rrbracket \\;=\\; \\left( \\bigwedge_{(\\rho,b)\\in \\tau} \\big( b \\rightarrow \\llbracket\\rho \\in \\sigma\\rrbracket \\big) \\right) \\wedge \\left( \\bigwedge_{(\\rho,b)\\in \\sigma} \\big( b \\rightarrow \\llbracket\\rho \\in \\tau\\rrbracket \\big) \\right),\n$$\n\nwhere $a \\rightarrow c$ abbreviates $\\neg a \\vee c$, and $\\bigvee$ and $\\bigwedge$ denote the join and meet in $\\mathbb{B}$.\n\nCanonical names for ground-model sets are defined by the usual check-embedding, which we present here specifically for ordinals. For an ordinal $\\alpha$ (a transitive set of ordinals), define its canonical name $\\dot{\\alpha}$ by transfinite recursion:\n\n$$\n\\dot{\\alpha} \\;=\\; \\{\\, (\\dot{\\gamma}, \\mathbb{1}) \\mid \\gamma \\in \\alpha \\,\\}.\n$$\n\nThis definition ensures that ground-model membership is reflected at full Boolean truth $\\mathbb{1}$ among canonical names, while non-membership is reflected as $\\mathbb{0}$. We shall derive these facts from the valuation clauses.\n\nFirst, we prove the equality lemma for canonical names of ground-model sets: for ground-model sets $x,y$,\n\n$$\n\\llbracket\\dot{x} = \\dot{y}\\rrbracket \\;=\\; \n\\begin{cases}\n\\mathbb{1} & \\text{if } x=y,\\\\\n\\mathbb{0} & \\text{if } x\\neq y.\n\\end{cases}\n$$\n\nProof: Suppose $x=y$. Consider the first conjunct in the equality clause,\n\n$$\n\\bigwedge_{(\\rho,b)\\in \\dot{x}} \\big( b \\rightarrow \\llbracket\\rho \\in \\dot{y}\\rrbracket \\big).\n$$\n\nSince $(\\rho,b)\\in \\dot{x}$ means $\\rho=\\dot{z}$ for some $z\\in x$ and $b=\\mathbb{1}$, we need $\\llbracket\\dot{z} \\in \\dot{y}\\rrbracket=\\mathbb{1}$ for every $z\\in x$. But $x=y$, so $z\\in y$. By the membership clause,\n\n$$\n\\llbracket\\dot{z} \\in \\dot{y}\\rrbracket \\;=\\; \\bigvee_{(\\rho',b')\\in \\dot{y}} \\big( b' \\wedge \\llbracket\\rho' = \\dot{z}\\rrbracket \\big)\n\\;=\\; \\bigvee_{z'\\in y} \\big( \\mathbb{1} \\wedge \\llbracket\\dot{z'} = \\dot{z}\\rrbracket \\big)\n\\;=\\; \\mathbb{1},\n$$\n\nbecause taking $z'=z$ yields the join including $\\mathbb{1}\\wedge \\llbracket\\dot{z}=\\dot{z}\\rrbracket=\\mathbb{1}$. Hence each implication $\\mathbb{1} \\rightarrow \\mathbb{1}$ evaluates to $\\mathbb{1}$, and the meet is $\\mathbb{1}$. The symmetric conjunct is the same, so $\\llbracket\\dot{x}=\\dot{y}\\rrbracket=\\mathbb{1}$. Conversely, if $x\\neq y$, then either there is $z\\in x\\setminus y$ or $z\\in y\\setminus x$. Assume $z\\in x\\setminus y$. In the first conjunct, one of the factors is $b\\rightarrow \\llbracket\\dot{z}\\in \\dot{y}\\rrbracket$ with $b=\\mathbb{1}$ and $\\llbracket\\dot{z}\\in \\dot{y}\\rrbracket=\\mathbb{0}$ (since $z\\notin y$), which yields $\\mathbb{1}\\rightarrow \\mathbb{0}=\\mathbb{0}$. Thus the meet is $\\mathbb{0}$, and hence $\\llbracket\\dot{x}=\\dot{y}\\rrbracket=\\mathbb{0}$. This proves the equality lemma.\n\nNext, we compute membership between canonical names of ground-model sets:\n\n$$\n\\llbracket\\dot{x} \\in \\dot{y}\\rrbracket \\;=\\; \\bigvee_{(\\rho,b)\\in \\dot{y}} \\big( b \\wedge \\llbracket\\rho = \\dot{x}\\rrbracket \\big)\n\\;=\\; \\bigvee_{z\\in y} \\big( \\mathbb{1} \\wedge \\llbracket\\dot{z} = \\dot{x}\\rrbracket \\big).\n$$\n\nBy the equality lemma, each summand is $\\mathbb{1}$ exactly when $z=x$, and is $\\mathbb{0}$ otherwise. Therefore\n\n$$\n\\llbracket\\dot{x} \\in \\dot{y}\\rrbracket \\;=\\;\n\\begin{cases}\n\\mathbb{1} & \\text{if } x\\in y,\\\\\n\\mathbb{0} & \\text{if } x\\notin y.\n\\end{cases}\n$$\n\n\nSpecializing to ordinals and using the von Neumann convention, for ordinals $\\alpha,\\beta$ we have $\\alpha\\in \\beta$ if and only if $\\alpha<\\beta$, and $\\alpha=\\beta$ if and only if they are the same ordinal. Hence the general formulas for ordinals are\n\n$$\n\\llbracket\\dot{\\alpha} \\in \\dot{\\beta}\\rrbracket \\;=\\;\n\\begin{cases}\n\\mathbb{1} & \\text{if } \\alpha<\\beta,\\\\\n\\mathbb{0} & \\text{otherwise},\n\\end{cases}\n\\quad\\text{and}\\quad\n\\llbracket\\dot{\\alpha} = \\dot{\\beta}\\rrbracket \\;=\\;\n\\begin{cases}\n\\mathbb{1} & \\text{if } \\alpha=\\beta,\\\\\n\\mathbb{0} & \\text{otherwise}.\n\\end{cases}\n$$\n\n\nFinally, evaluate these for the specific case $\\alpha=3$ and $\\beta=\\omega$. Here $3$ is the finite ordinal $\\{0,1,2\\}$ and $\\omega$ is the set of all finite ordinals. Therefore $3\\in \\omega$ and $3\\neq \\omega$. By the above, we obtain\n\n$$\n\\llbracket\\dot{3}\\in \\dot{\\omega}\\rrbracket \\;=\\; \\mathbb{1}\n\\quad\\text{and}\\quad\n\\llbracket\\dot{3} = \\dot{\\omega}\\rrbracket \\;=\\; \\mathbb{0}.\n$$\n\nWe will present these two values as a row matrix with the membership value first and the equality value second.", "answer": "$$\\boxed{\\begin{pmatrix}\\mathbb{1} & \\mathbb{0}\\end{pmatrix}}$$", "id": "2969551"}, {"introduction": "Moving beyond the \"all-or-nothing\" truth values associated with ground model objects, this practice explores the construction of more nuanced $\\mathbb{B}$-names. We will build a simple name from scratch using arbitrary Boolean coefficients and calculate the truth value of a statement about it. This exercise is crucial for understanding how the specific elements of the Boolean algebra $\\mathbb{B}$ directly encode the properties of the object a name represents. [@problem_id:2969558]", "problem": "Let $\\mathbb{B}$ be a complete Boolean algebra. The Boolean-valued universe $V^{\\mathbb{B}}$ is formed by transfinite recursion on ranks: a $\\mathbb{B}$-name is a set of pairs $(\\dot{y}, b)$ where $\\dot{y}$ is a $\\mathbb{B}$-name and $b \\in \\mathbb{B}$. The rank function $\\operatorname{rk}$ on names is defined by\n$$\n\\operatorname{rk}(\\dot{x}) \\;=\\; \\sup\\bigl\\{ \\operatorname{rk}(\\dot{y}) + 1 \\,:\\, (\\dot{y}, b) \\in \\dot{x} \\bigr\\}.\n$$\nThe truth valuation $\\llbracket\\cdot\\rrbracket$ for formulas in $V^{\\mathbb{B}}$ is defined by recursion on complexity, in particular\n$$\n\\llbracket\\dot{u} \\in \\dot{v}\\rrbracket \\;=\\; \\bigvee_{(\\dot{z}, c) \\in \\dot{v}} \\, c \\wedge \\llbracket\\dot{u} = \\dot{z}\\rrbracket, \\quad\n\\llbracket\\dot{u} = \\dot{v}\\rrbracket \\;=\\; \\Bigl( \\bigwedge_{(\\dot{z}, c) \\in \\dot{u}} \\bigl( c \\Rightarrow \\llbracket\\dot{z} \\in \\dot{v}\\rrbracket \\bigr) \\Bigr) \\wedge \\Bigl( \\bigwedge_{(\\dot{z}, c) \\in \\dot{v}} \\bigl( c \\Rightarrow \\llbracket\\dot{z} \\in \\dot{u}\\rrbracket \\bigr) \\Bigr),\n$$\nwhere $c \\Rightarrow d$ denotes Boolean implication, given by $c \\Rightarrow d = \\neg c \\vee d$, and $\\bigvee$ and $\\bigwedge$ denote the (possibly infinitary) join and meet in $\\mathbb{B}$. Let $0_{\\mathbb{B}}$ and $1_{\\mathbb{B}}$ denote the bottom and top elements of $\\mathbb{B}$, respectively, and let $\\emptyset$ denote the empty $\\mathbb{B}$-name (the name with no pairs).\n\nFix a finite index set $I = \\{1, 2, \\dots, n\\}$, an ordinal $\\alpha$, $\\mathbb{B}$-names $\\dot{y}_{i}$ with $\\operatorname{rk}(\\dot{y}_{i}) < \\alpha$ for each $i \\in I$, and coefficients $b_{i} \\in \\mathbb{B}$. Define the $\\mathbb{B}$-name\n$$\n\\dot{x} \\;=\\; \\bigl\\{ (\\dot{y}_{i}, b_{i}) : i \\in I \\bigr\\}.\n$$\nUsing only the foundational definitions above, first justify that every member $\\dot{y}_{i}$ of $\\dot{x}$ has strictly lower rank than $\\dot{x}$, and then compute the Boolean truth value $\\llbracket\\dot{x} = \\emptyset\\rrbracket$ in terms of the coefficients $\\{b_{i} : i \\in I\\}$. Your final answer must be a single closed-form expression in the language of $\\mathbb{B}$; do not approximate or round.", "solution": "The problem asks for two things: first, to justify that for the specified $\\mathbb{B}$-name $\\dot{x}$, the rank of any of its constituent names $\\dot{y}_i$ is strictly less than the rank of $\\dot{x}$ itself; and second, to compute the Boolean truth value of the statement that $\\dot{x}$ is the empty set, $\\llbracket\\dot{x} = \\emptyset\\rrbracket$. We will address these in order, using only the provided foundational definitions.\n\nFirst, we justify the rank inequality. The given definition of the rank function is\n$$\n\\operatorname{rk}(\\dot{x}) \\;=\\; \\sup\\bigl\\{ \\operatorname{rk}(\\dot{y}) + 1 \\,:\\, (\\dot{y}, b) \\in \\dot{x} \\bigr\\}.\n$$\nThe specific name in question is $\\dot{x} = \\{ (\\dot{y}_{i}, b_{i}) : i \\in I \\}$, where $I = \\{1, 2, \\dots, n\\}$. Applying the definition to this $\\dot{x}$, we have\n$$\n\\operatorname{rk}(\\dot{x}) \\;=\\; \\sup\\bigl\\{ \\operatorname{rk}(\\dot{y}_{i}) + 1 \\,:\\, i \\in I \\bigr\\}.\n$$\nLet us consider an arbitrary member $\\dot{y}_{j}$ of the set of names defining $\\dot{x}$, for some fixed index $j \\in I$. The rank of this name is $\\operatorname{rk}(\\dot{y}_{j})$. By the properties of ordinals, for any ordinal $\\gamma$, it is always true that $\\gamma < \\gamma + 1$. Thus, we have\n$$\n\\operatorname{rk}(\\dot{y}_{j}) < \\operatorname{rk}(\\dot{y}_{j}) + 1.\n$$\nThe term $\\operatorname{rk}(\\dot{y}_{j}) + 1$ is an element of the set $\\{ \\operatorname{rk}(\\dot{y}_{i}) + 1 : i \\in I \\}$ over which the supremum is taken to define $\\operatorname{rk}(\\dot{x})$. By the definition of a supremum, for any element $s$ in a set of ordinals $S$, it must be that $s \\le \\sup(S)$. Applying this, we get\n$$\n\\operatorname{rk}(\\dot{y}_{j}) + 1 \\;\\le\\; \\sup\\bigl\\{ \\operatorname{rk}(\\dot{y}_{i}) + 1 \\,:\\, i \\in I \\bigr\\} \\;=\\; \\operatorname{rk}(\\dot{x}).\n$$\nCombining our two inequalities, we have $\\operatorname{rk}(\\dot{y}_{j}) < \\operatorname{rk}(\\dot{y}_{j}) + 1 \\le \\operatorname{rk}(\\dot{x})$. This implies $\\operatorname{rk}(\\dot{y}_{j}) < \\operatorname{rk}(\\dot{x})$. Since $j$ was an arbitrary index in $I$, this holds for all $i \\in I$. This completes the justification. The condition that $\\operatorname{rk}(\\dot{y}_i) < \\alpha$ for all $i$ ensures that $\\operatorname{rk}(\\dot{x})$ is a well-defined ordinal (specifically, $\\operatorname{rk}(\\dot{x}) \\le \\alpha$).\n\nNext, we compute the Boolean truth value $\\llbracket\\dot{x} = \\emptyset\\rrbracket$. The definition of the truth valuation for equality is\n$$\n\\llbracket\\dot{u} = \\dot{v}\\rrbracket \\;=\\; \\Bigl( \\bigwedge_{(\\dot{z}, c) \\in \\dot{u}} \\bigl( c \\Rightarrow \\llbracket\\dot{z} \\in \\dot{v}\\rrbracket \\bigr) \\Bigr) \\wedge \\Bigl( \\bigwedge_{(\\dot{z}, c) \\in \\dot{v}} \\bigl( c \\Rightarrow \\llbracket\\dot{z} \\in \\dot{u}\\rrbracket \\bigr) \\Bigr).\n$$\nWe set $\\dot{u} = \\dot{x}$ and $\\dot{v} = \\emptyset$. The name $\\emptyset$ is the empty set, meaning it contains no pairs $(\\dot{z}, c)$. The formula becomes\n$$\n\\llbracket\\dot{x} = \\emptyset\\rrbracket \\;=\\; \\underbrace{\\Biggl( \\bigwedge_{(\\dot{y}_i, b_i) \\in \\dot{x}} \\bigl( b_i \\Rightarrow \\llbracket\\dot{y}_i \\in \\emptyset\\rrbracket \\bigr) \\Biggr)}_{\\text{Part A}} \\wedge \\underbrace{\\Biggl( \\bigwedge_{(\\dot{z}, c) \\in \\emptyset} \\bigl( c \\Rightarrow \\llbracket\\dot{z} \\in \\dot{x}\\rrbracket \\bigr) \\Biggr)}_{\\text{Part B}}.\n$$\nLet's analyze Part B first. This is a meet ($\\bigwedge$) taken over an empty index set, since there are no pairs in $\\emptyset$. In any complete Boolean algebra, the meet over an empty set of elements is defined as the top element, $1_{\\mathbb{B}}$. Thus, Part B evaluates to $1_{\\mathbb{B}}$.\nOur expression for the total truth value simplifies to\n$$\n\\llbracket\\dot{x} = \\emptyset\\rrbracket \\;=\\; (\\text{Part A}) \\wedge 1_{\\mathbb{B}} \\;=\\; \\text{Part A}.\n$$\nNow we analyze Part A, which is\n$$\n\\text{Part A} \\;=\\; \\bigwedge_{i \\in I} \\bigl( b_i \\Rightarrow \\llbracket\\dot{y}_i \\in \\emptyset\\rrbracket \\bigr).\n$$\nTo evaluate this, we need to compute the truth value $\\llbracket\\dot{y}_i \\in \\emptyset\\rrbracket$ for each $i \\in I$. The definition for the truth valuation of membership is\n$$\n\\llbracket\\dot{u} \\in \\dot{v}\\rrbracket \\;=\\; \\bigvee_{(\\dot{z}, c) \\in \\dot{v}} \\, c \\wedge \\llbracket\\dot{u} = \\dot{z}\\rrbracket.\n$$\nWe set $\\dot{u} = \\dot{y}_i$ and $\\dot{v} = \\emptyset$. The expression for $\\llbracket\\dot{y}_i \\in \\emptyset\\rrbracket$ requires taking a join ($\\bigvee$) over the pairs in $\\emptyset$. As before, the set of pairs is empty. In any complete Boolean algebra, the join over an empty set of elements is defined as the bottom element, $0_{\\mathbb{B}}$. Therefore, for any name $\\dot{y}_i$,\n$$\n\\llbracket\\dot{y}_i \\in \\emptyset\\rrbracket \\;=\\; 0_{\\mathbb{B}}.\n$$\nSubstituting this result back into our expression for Part A, we get\n$$\n\\llbracket\\dot{x} = \\emptyset\\rrbracket \\;=\\; \\bigwedge_{i \\in I} \\bigl( b_i \\Rightarrow 0_{\\mathbb{B}} \\bigr).\n$$\nFinally, we use the definition of Boolean implication, $c \\Rightarrow d = \\neg c \\vee d$. This gives\n$$\nb_i \\Rightarrow 0_{\\mathbb{B}} \\;=\\; \\neg b_i \\vee 0_{\\mathbb{B}} \\;=\\; \\neg b_i.\n$$\nSubstituting this simplification, we arrive at the final expression for the truth value:\n$$\n\\llbracket\\dot{x} = \\emptyset\\rrbracket \\;=\\; \\bigwedge_{i \\in I} \\neg b_i.\n$$\nSince the index set is $I = \\{1, 2, \\dots, n\\}$, this can be written explicitly as\n$$\n\\llbracket\\dot{x} = \\emptyset\\rrbracket \\;=\\; \\bigwedge_{i=1}^{n} \\neg b_i \\;=\\; \\neg b_1 \\wedge \\neg b_2 \\wedge \\dots \\wedge \\neg b_n.\n$$\nThis expression is in the language of the Boolean algebra $\\mathbb{B}$ and depends only on the coefficients $\\{b_i\\}$, as required.", "answer": "$$\n\\boxed{\\bigwedge_{i=1}^{n} \\neg b_i}\n$$", "id": "2969558"}, {"introduction": "This final practice tackles one of the primary applications of Boolean-valued models: creating \"generic\" objects that do not exist in the ground model. We will construct the canonical name for a generic function from $\\omega$ to $2$—a cornerstone of Cohen forcing—and compute the Boolean values of its defining properties. This exercise demonstrates the powerful mechanism by which the structure of the Boolean algebra dictates the features of new mathematical objects. [@problem_id:2969554]", "problem": "Let $\\mathbb{B}$ be the complete Boolean algebra of regular open subsets of the Cantor space $2^{\\omega}$ (equivalently, the completion of Cohen forcing on the poset $2^{<\\omega}$ ordered by reverse inclusion). For each $n \\in \\omega$ and $i \\in \\{0,1\\}$, let $U_{n,i} \\subseteq 2^{\\omega}$ be the basic cylinder set $U_{n,i} = \\{ x \\in 2^{\\omega} : x(n) = i \\}$, and write $b_{n,i} \\in \\mathbb{B}$ for the corresponding element of $\\mathbb{B}$ represented by the regular open set $U_{n,i}$. Note that for each fixed $n \\in \\omega$, one has $b_{n,0} \\vee b_{n,1} = 1$ and $b_{n,0} \\wedge b_{n,1} = 0$ in $\\mathbb{B}$.\n\nWork in the Boolean-valued model $V^{\\mathbb{B}}$. Recall that a $\\mathbb{B}$-name is a set of pairs $\\langle \\sigma, b \\rangle$ with $\\sigma$ a $\\mathbb{B}$-name and $b \\in \\mathbb{B}$. For $x \\in V$, its canonical check name $\\check{x}$ is the $\\mathbb{B}$-name that mirrors the transitive closure of $x$ (so, in particular, $\\check{\\omega}$ is the canonical name for $\\omega$ and $\\check{i}$ is the canonical name for $i \\in \\{0,1\\}$). Ordered pairs are represented by the Kuratowski definition $\\langle x,y\\rangle = \\{\\{x\\},\\{x,y\\}\\}$.\n\nConstruct the canonical $\\mathbb{B}$-name $\\dot{c}$ for a generic function $\\omega \\to 2$ by specifying its graph as a $\\mathbb{B}$-valued set. Using only the recursive definitions of Boolean truth values in $V^{\\mathbb{B}}$ for membership and equality, compute the Boolean truth value $\\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket \\in \\mathbb{B}$ for each $n \\in \\omega$ and $i \\in \\{0,1\\}$. Your final answer must be a single closed-form analytic expression in terms of $n$, $i$, and the elements $b_{n,i} \\in \\mathbb{B}$ defined above. No rounding is required and no physical units are involved.", "solution": "The problem asks for the computation of the Boolean truth value $\\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket$ in the Boolean-valued model $V^{\\mathbb{B}}$, where $\\dot{c}$ is the canonical name for a generic function from $\\omega$ to $2$. The computation must proceed from the fundamental recursive definitions of the Boolean-valued semantics.\n\nFirst, we must construct the canonical name $\\dot{c}$. A function is formally equivalent to its graph, which is a set of ordered pairs. The generic function $c: \\omega \\to 2$ is characterized by the property that for each $n \\in \\omega$, the value $c(n)$ is either $0$ or $1$, determined by the generic filter. In the Boolean-valued model, this probabilistic nature is captured by assigning a Boolean value to the proposition that a certain pair belongs to the graph. The canonical name for the generic function $c$ is therefore a name for its graph, defined such that the proposition \"$\\langle n, i \\rangle$ is in the graph of $c$\" has the Boolean value $b_{n,i}$. Let $\\check{\\langle n, i \\rangle}$ denote the canonical name for the Kuratowski ordered pair $\\langle n, i \\rangle = \\{\\{n\\}, \\{n,i\\}\\}$. The name $\\dot{c}$ is then defined as:\n$$ \\dot{c} = \\{ \\langle \\check{\\langle n, i \\rangle}, b_{n,i} \\rangle \\mid n \\in \\omega, i \\in \\{0,1\\} \\} $$\nThis is a $\\mathbb{B}$-name, as each element is a pair consisting of another $\\mathbb{B}$-name and a value from $\\mathbb{B}$.\n\nThe expression $\\dot{c}(\\check{n}) = \\check{i}$ is a statement about the value of the function $\\dot{c}$ at the argument $\\check{n}$. The standard definition for the Boolean value of such a statement is given by a supremum over all possible values:\n$$ \\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket = \\bigvee_{\\dot{y} \\in V^{\\mathbb{B}}} (\\llbracket\\langle \\check{n}, \\dot{y} \\rangle \\in \\dot{c}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket) $$\nHere, the supremum is taken over all $\\mathbb{B}$-names $\\dot{y}$. Our task reduces to computing the terms on the right-hand side.\n\nLet's first analyze the membership term $\\llbracket\\langle \\check{n}, \\dot{y} \\rangle \\in \\dot{c}\\rrbracket$. The recursive definition for the Boolean value of membership in a name $\\dot{x} = \\{ \\langle \\sigma, b \\rangle, \\dots \\}$ is:\n$$ \\llbracket\\tau \\in \\dot{x}\\rrbracket = \\bigvee_{\\langle \\sigma, b \\rangle \\in \\dot{x}} (\\llbracket\\tau = \\sigma\\rrbracket \\wedge b) $$\nApplying this to our name $\\dot{c}$, with $\\tau = \\langle \\check{n}, \\dot{y} \\rangle$:\n$$ \\llbracket\\langle \\check{n}, \\dot{y} \\rangle \\in \\dot{c}\\rrbracket = \\bigvee_{m \\in \\omega, k \\in \\{0,1\\}} (\\llbracket\\langle \\check{n}, \\dot{y} \\rangle = \\check{\\langle m, k \\rangle}\\rrbracket \\wedge b_{m,k}) $$\nThe term $\\llbracket\\langle \\check{n}, \\dot{y} \\rangle = \\check{\\langle m, k \\rangle}\\rrbracket$ involves equality of two names for ordered pairs. The semantics of equality for Kuratowski pairs implies that $\\llbracket\\langle \\dot{u}, \\dot{v} \\rangle = \\langle \\dot{x}, \\dot{y} \\rangle\\rrbracket = \\llbracket\\dot{u}=\\dot{x}\\rrbracket \\wedge \\llbracket\\dot{v}=\\dot{y}\\rrbracket$. For $\\langle \\check{n}, \\dot{y} \\rangle$ and $\\check{\\langle m, k \\rangle}$, we have:\n$$ \\llbracket\\langle \\check{n}, \\dot{y} \\rangle = \\check{\\langle m, k \\rangle}\\rrbracket = \\llbracket\\check{n} = \\check{m}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{k}\\rrbracket $$\nThe value $\\llbracket\\check{n} = \\check{m}\\rrbracket$ is $1_{\\mathbb{B}}$ if $n=m$ and $0_{\\mathbb{B}}$ if $n \\neq m$. Consequently, the conjunction $(\\llbracket\\check{n} = \\check{m}\\rrbracket \\wedge \\dots)$ is non-zero only for the term where $m=n$. The supremum over $m \\in \\omega$ collapses to this single case:\n$$ \\llbracket\\langle \\check{n}, \\dot{y} \\rangle \\in \\dot{c}\\rrbracket = \\bigvee_{k \\in \\{0,1\\}} ( (\\llbracket\\check{n} = \\check{n}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{k}\\rrbracket) \\wedge b_{n,k}) = \\bigvee_{k \\in \\{0,1\\}} (\\llbracket\\dot{y} = \\check{k}\\rrbracket \\wedge b_{n,k}) $$\nThis expands to:\n$$ \\llbracket\\langle \\check{n}, \\dot{y} \\rangle \\in \\dot{c}\\rrbracket = (\\llbracket\\dot{y} = \\check{0}\\rrbracket \\wedge b_{n,0}) \\vee (\\llbracket\\dot{y} = \\check{1}\\rrbracket \\wedge b_{n,1}) $$\n\nNow, we substitute this result back into the original expression for $\\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket$:\n$$ \\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket = \\bigvee_{\\dot{y}} \\left( \\left[ (\\llbracket\\dot{y} = \\check{0}\\rrbracket \\wedge b_{n,0}) \\vee (\\llbracket\\dot{y} = \\check{1}\\rrbracket \\wedge b_{n,1}) \\right] \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket \\right) $$\nUsing the distributivity of the meet ($\\wedge$) over the join ($\\vee$) in the Boolean algebra $\\mathbb{B}$:\n$$ = \\bigvee_{\\dot{y}} \\left( (\\llbracket\\dot{y} = \\check{0}\\rrbracket \\wedge b_{n,0} \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket) \\vee (\\llbracket\\dot{y} = \\check{1}\\rrbracket \\wedge b_{n,1} \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket) \\right) $$\nThe supremum over all names $\\dot{y}$ distributes over the join inside the parenthesis:\n$$ = \\left( \\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{0}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket \\wedge b_{n,0}) \\right) \\vee \\left( \\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{1}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket \\wedge b_{n,1}) \\right) $$\nWe can factor out the terms $b_{n,k}$ which do not depend on $\\dot{y}$:\n$$ = \\left( b_{n,0} \\wedge \\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{0}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket) \\right) \\vee \\left( b_{n,1} \\wedge \\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{1}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket) \\right) $$\nLet's analyze the term $\\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{k}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket)$ for $k \\in \\{0,1\\}$.\nIf $k=i$, the term becomes $\\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{i}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket) = \\bigvee_{\\dot{y}} \\llbracket\\dot{y} = \\check{i}\\rrbracket$. This is the Boolean value of the statement $\\exists y (y = i)$, which is true in $V^{\\mathbb{B}}$, so its value is $1_{\\mathbb{B}}$.\nIf $k \\neq i$, the term is $\\bigvee_{\\dot{y}} (\\llbracket\\dot{y} = \\check{k}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket)$. The inner conjunction implies equality of $\\check{k}$ and $\\check{i}$, i.e., $\\llbracket\\dot{y} = \\check{k}\\rrbracket \\wedge \\llbracket\\dot{y} = \\check{i}\\rrbracket \\leq \\llbracket\\check{k} = \\check{i}\\rrbracket$. Since $k$ and $i$ are distinct elements of $\\{0,1\\}$, $\\llbracket\\check{k} = \\check{i}\\rrbracket = 0_{\\mathbb{B}}$. Thus, the entire expression evaluates to $0_{\\mathbb{B}}$.\n\nWe now evaluate the full expression for $\\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket$. The result depends on which of the two terms in the main disjunction is non-zero. This is determined by the value of $i$.\nIf we are computing $\\llbracket\\dot{c}(\\check{n}) = \\check{0}\\rrbracket$ (i.e., $i=0$):\nThe expression becomes $(b_{n,0} \\wedge 1_{\\mathbb{B}}) \\vee (b_{n,1} \\wedge 0_{\\mathbb{B}}) = b_{n,0} \\vee 0_{\\mathbb{B}} = b_{n,0}$.\nIf we are computing $\\llbracket\\dot{c}(\\check{n}) = \\check{1}\\rrbracket$ (i.e., $i=1$):\nThe expression becomes $(b_{n,0} \\wedge 0_{\\mathbb{B}}) \\vee (b_{n,1} \\wedge 1_{\\mathbb{B}}) = 0_{\\mathbb{B}} \\vee b_{n,1} = b_{n,1}$.\n\nIn both cases, the result is $b_{n,i}$. Therefore, we can write a single closed-form expression for the demanded Boolean value.\n\n$$ \\llbracket\\dot{c}(\\check{n}) = \\check{i}\\rrbracket = b_{n,i} $$\nThis result confirms the intuition that the Boolean value of a basic proposition about the generic object is the corresponding element of the Boolean algebra used to construct it. The rigorous derivation from first principles validates this intuition.", "answer": "$$\\boxed{b_{n,i}}$$", "id": "2969554"}]}