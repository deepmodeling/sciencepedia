{"hands_on_practices": [{"introduction": "To master back-and-forth systems, we first need to understand the fundamental mechanics of the Ehrenfeucht–Fraïssé game. This initial practice focuses on the role of Spoiler, whose objective is to expose a difference between two structures by choosing a sequence of elements that Duplicator cannot match. This exercise [@problem_id:2969043] will sharpen your ability to identify simple, local combinatorial properties—like the presence of a small cycle—that distinguish non-isomorphic graphs and to translate these properties into a winning strategy for Spoiler.", "id": "2969043", "problem": "Work in the language of simple undirected graphs with a single binary relation symbol $E(x,y)$ interpreted as an irreflexive, symmetric adjacency relation. Recall that the Ehrenfeucht–Fraïssé (EF) game of length $k$ (Ehrenfeucht–Fraïssé is spelled out for the acronym EF) on two structures $M$ and $N$, denoted $\\mathrm{EF}_k(M,N)$, is played by two players, Spoiler and Duplicator, for $k$ rounds. In each round, Spoiler selects one element from either $M$ or $N$, and Duplicator responds by selecting one element from the other structure. After $k$ rounds, this yields two $k$-tuples $(a_1,\\dots,a_k)\\in M^k$ and $(b_1,\\dots,b_k)\\in N^k$. Duplicator wins if the map $a_i\\mapsto b_i$ is a partial isomorphism, meaning that for all $i,j\\le k$ one has $E^M(a_i,a_j)$ if and only if $E^N(b_i,b_j)$; otherwise, Spoiler wins.\n\nIdentify which of the following items correctly specify a pair of graphs $(M,N)$ and an integer $k$ for which Spoiler has a winning strategy in $\\mathrm{EF}_k(M,N)$ by forcing, within at most $k$ moves, a finite local combinatorial configuration on the pebbled vertices that does not occur in the other graph, so that no size-$k$ partial isomorphism can match it. Select all that apply.\n\nA. Let $M$ be the $4$-cycle $C_4$ and $N$ be the infinite binary tree $T_2$. For $k=4$, Spoiler wins by creating a $4$-cycle.\n\nB. Let $M$ be the triangle $K_3$ and $N$ be the $4$-cycle $C_4$. For $k=3$, Spoiler wins by creating a triangle.\n\nC. Let $M$ be the disjoint union of two edges $2K_2$ and $N$ be the path $P_4$. For $k=2$, Spoiler wins by isolating an induced matching that $P_4$ cannot match.\n\nD. Let $M$ be the countable Rado graph $R$ (also called the countably infinite random graph) and $N$ be the complete bipartite graph $K_{\\aleph_0,\\aleph_0}$. For $k=3$, Spoiler wins by creating a triangle.\n\nE. Let $M=C_{10}$ and $N=C_{11}$. For $k=2$, Spoiler wins by exposing the parity of the cycle length.", "solution": "The problem asks to identify which of the given options correctly specify a pair of graphs $(M,N)$ and an integer $k$ for which Spoiler has a winning strategy in the Ehrenfeucht–Fraïssé game $\\mathrm{EF}_k(M,N)$. A winning strategy for Spoiler exists if and only if the two structures $M$ and $N$ are not $k$-equivalent, denoted $M \\not\\equiv_k N$. This means Spoiler can choose a sequence of $k$ vertices in one graph to demonstrate a property that cannot be replicated by Duplicator's choices in the other graph. The property in question is the isomorphism type of the induced subgraph on the $k$ chosen (\"pebbled\") vertices.\n\nLet's analyze each option:\n\n**A. Let $M$ be the $4$-cycle $C_4$ and $N$ be the infinite binary tree $T_2$. For $k=4$, Spoiler wins by creating a $4$-cycle.**\n\nThe graph $M=C_4$ is a cycle on $4$ vertices. The graph $N=T_2$ is an infinite tree. A fundamental property of a tree is that it is acyclic. Therefore, $N$ does not contain any cycles, including a $4$-cycle.\n\nThe existence of a $4$-cycle can be expressed with a first-order sentence using $4$ variables, for instance: $\\exists x_1 \\exists x_2 \\exists x_3 \\exists x_4 (E(x_1, x_2) \\wedge E(x_2, x_3) \\wedge E(x_3, x_4) \\wedge E(x_4, x_1) \\wedge \\bigwedge_{i<j, (i,j) \\neq (1,3), (2,4)} x_i \\neq x_j)$. Since this property distinguishes $M$ from $N$ and uses $4$ variables, Spoiler is guaranteed a winning strategy in $\\mathrm{EF}_4(M,N)$.\n\nSpoiler's winning strategy is as follows:\n$1$. Spoiler chooses the vertices of the $4$-cycle in $M=C_4$, let's call them $a_1, a_2, a_3, a_4$ in cyclic order.\n$2$. In Round $1$, Spoiler picks $a_1$. Duplicator responds with some vertex $b_1 \\in N$.\n$3$. In Round $2$, Spoiler picks $a_2$, a neighbor of $a_1$. Duplicator must respond with a neighbor $b_2$ of $b_1$.\n$4$. In Round $3$, Spoiler picks $a_3$, the neighbor of $a_2$ which is not $a_1$. Duplicator must choose a neighbor $b_3$ of $b_2$ such that $b_3 \\neq b_1$ (since $a_3 \\neq a_1$). At this stage, $(b_1, b_2, b_3)$ is a path of length $2$ in $N$.\n$5$. In Round $4$, Spoiler picks $a_4$. This vertex is adjacent to both $a_1$ and $a_3$. Duplicator must find a vertex $b_4$ in $N$ that is adjacent to both $b_1$ and $b_3$. The existence of such a $b_4$ would imply a cycle $(b_1, b_2, b_3, b_4, b_1)$ of length $4$ in $N$. Since $N$ is a tree and has no cycles, no such vertex $b_4$ exists.\nSpoiler wins because Duplicator cannot complete the partial isomorphism. The description of the strategy is accurate.\n\nVerdict for A: **Correct**.\n\n**B. Let $M$ be the triangle $K_3$ and $N$ be the $4$-cycle $C_4$. For $k=3$, Spoiler wins by creating a triangle.**\n\nThe graph $M=K_3$ is a $3$-cycle (triangle). The graph $N=C_4$ is a $4$-cycle. $C_4$ is a bipartite graph, which means it contains no cycles of odd length. In particular, $C_4$ is triangle-free.\n\nThe existence of a triangle can be expressed with a sentence using $3$ variables: $\\exists x_1 \\exists x_2 \\exists x_3 (E(x_1, x_2) \\wedge E(x_2, x_3) \\wedge E(x_3, x_1))$. As this property holds in $M$ but not in $N$, Spoiler has a winning strategy in $\\mathrm{EF}_3(M,N)$.\n\nSpoiler's winning strategy involves picking all three vertices of $K_3$, say $a_1, a_2, a_3$.\n$1$. In Round $1$, Spoiler picks $a_1 \\in M$. Duplicator picks some $b_1 \\in N$.\n$2$. In Round $2$, Spoiler picks $a_2 \\in M$. Since $M=K_3$, $E(a_1, a_2)$ is true. Duplicator responds with a neighbor $b_2$ of $b_1$.\n$3$. In Round $3$, Spoiler picks $a_3 \\in M$. In $K_3$, $a_3$ is adjacent to both $a_1$ and $a_2$. Duplicator must find a vertex $b_3 \\in N$ that is adjacent to both $b_1$ and $b_2$. In $C_4$, any pair of adjacent vertices has no common neighbor. Thus, no such $b_3$ exists.\nSpoiler wins. The description of the strategy is accurate.\n\nVerdict for B: **Correct**.\n\n**C. Let $M$ be the disjoint union of two edges $2K_2$ and $N$ be the path $P_4$. For $k=2$, Spoiler wins by isolating an induced matching that $P_4$ cannot match.**\n\nLet us determine if $M \\equiv_2 N$. If they are $2$-equivalent, Duplicator wins. The graph $M=2K_2$ has $4$ vertices, each of degree $1$. The graph $N=P_4$ has $4$ vertices, two of degree $1$ and two of degree $2$.\n\nDuplicator has a winning strategy in $\\mathrm{EF}_2(M,N)$. The strategy is to maintain the invariant that vertices of degree $1$ in one graph are mapped to vertices of degree $1$ in the other.\n$1$. Round $1$: Spoiler can start in either graph.\n   - If Spoiler picks a vertex $a_1 \\in M$, all vertices have degree $1$. Duplicator picks a degree-$1$ vertex in $N$, say $b_1$.\n   - If Spoiler picks a degree-$1$ vertex $a_1 \\in N$, Duplicator picks any vertex $b_1 \\in M$.\n   - If Spoiler picks a degree-$2$ vertex $a_1 \\in N$, Duplicator picks any vertex $b_1 \\in M$. Spoiler will win in this case, but let's assume Duplicator plays optimally. A winning strategy for Duplicator only needs to exist.\nLet's analyze Duplicator's best course of action. Duplicator must anticipate Spoiler's moves.\nDuplicator's winning strategy:\n$1$. Round $1$: Let Spoiler pick $a_1$. Duplicator picks $b_1$ such that $\\deg(a_1) = \\deg(b_1)$ is not possible for all choices. Duplicator can try to match local structure. A better approach for Duplicator is simply to respond to Spoiler's choices to preserve the partial isomorphism.\nLet's trace a game where Duplicator tries to win:\n- Round $1$: Spoiler picks $a_1$ in $P_4$, let's say the vertex of degree $2$. Duplicator picks $b_1$ in $2K_2$. All vertices in $2K_2$ have degree $1$.\n- Round $2$: Spoiler picks $a_2$, a neighbor of $a_1$ in $P_4$. Duplicator must pick $b_2$, a neighbor of $b_1$ in $2K_2$. This is possible. The partial map $\\{a_1 \\mapsto b_1, a_2 \\mapsto b_2\\}$ is an isomorphism (it's a single edge in both induced subgraphs). Duplicator has not lost yet.\nThe game ends after $k=2$ rounds. The final map $a_i \\mapsto b_i$ for $i \\in \\{1,2\\}$ must be a partial isomorphism.\nLet's test all of Spoiler's moves for $k=2$:\n$1$. Spoiler picks $a_1$. Duplicator picks $b_1$.\n$2$. Spoiler picks $a_2$.\n   - If $a_1, a_2$ are adjacent: Duplicator must pick $b_2$ adjacent to $b_1$. This is always possible in both graphs provided Duplicator's first choice $b_1$ was not an isolated vertex (neither graph has one).\n   - If $a_1, a_2$ are not adjacent: Duplicator must pick $b_2$ not adjacent to $b_1$. This is also always possible as neither graph is a complete graph.\nIn all cases for a $k=2$ game, Duplicator can ensure the atomic relations (adjacency) between the chosen pairs are the same. Thus, Duplicator has a winning strategy in $\\mathrm{EF}_2(M,N)$, and $M \\equiv_2 N$.\nSpoiler can win in $\\mathrm{EF}_3(M,N)$ by picking the three vertices of the path of length $2$ in $P_4$. $2K_2$ has no paths of length $2$. Since the option states $k=2$, it is incorrect. Furthermore, \"isolating an induced matching\" of size $2$ would require pebbling $4$ vertices, which is impossible with $k=2$.\n\nVerdict for C: **Incorrect**.\n\n**D. Let $M$ be the countable Rado graph $R$ and $N$ be the complete bipartite graph $K_{\\aleph_0,\\aleph_0}$. For $k=3$, Spoiler wins by creating a triangle.**\n\nThe Rado graph $R$ is characterized by the extension property: for any two disjoint finite sets of vertices $U$ and $V$, there exists a vertex $z$ adjacent to all vertices in $U$ and no vertices in $V$. A consequence is that $R$ contains every finite graph as an induced subgraph. In particular, $R$ contains $K_3$ (a triangle).\nThe graph $N = K_{\\aleph_0,\\aleph_0}$ is the countably infinite complete bipartite graph. By definition, bipartite graphs are those that do not contain any odd-length cycles. Thus, $N$ is triangle-free.\nThe situation is identical in principle to Option B. The existence of a triangle distinguishes the two graphs, and this can be demonstrated with $k=3$ pebbles.\n\nSpoiler's winning strategy:\n$1$. Spoiler plays in $M=R$ and picks the three vertices of a triangle, $a_1, a_2, a_3$.\n$2$. Round $1$: Spoiler picks $a_1 \\in R$. Duplicator picks $b_1 \\in N$. Let the partitions of $N$ be $X$ and $Y$. Let's say $b_1 \\in X$.\n$3$. Round $2$: Spoiler picks $a_2 \\in R$, a neighbor of $a_1$. Duplicator must pick a neighbor $b_2$ of $b_1$. All neighbors of a vertex in $X$ are in $Y$, so $b_2 \\in Y$.\n$4$. Round $3$: Spoiler picks $a_3 \\in R$, which is adjacent to both $a_1$ and $a_2$. Duplicator must find a vertex $b_3 \\in N$ adjacent to both $b_1$ and $b_2$. Since $b_1 \\in X$, $b_3$ must be in $Y$. Since $b_2 \\in Y$, $b_3$ must be in $X$. These conditions are contradictory as $X \\cap Y = \\emptyset$. No such $b_3$ exists.\nSpoiler wins. The description of the strategy is accurate.\n\nVerdict for D: **Correct**.\n\n**E. Let $M=C_{10}$ and $N=C_{11}$. For $k=2$, Spoiler wins by exposing the parity of the cycle length.**\n\nWe need to determine if $C_{10} \\not\\equiv_2 C_{11}$. It is a standard result of EF games that two cycles $C_m$ and $C_n$ are $k$-equivalent if $m, n \\ge 2k$. Here, $k=2$, so $2k=4$. Since $m=10 \\ge 4$ and $n=11 \\ge 4$, it follows that $C_{10} \\equiv_2 C_{11}$. This means Duplicator has a winning strategy in $\\mathrm{EF}_2(C_{10}, C_{11})$.\n\nLet's confirm this by outlining Duplicator's strategy.\nIn a $k=2$ game, Spoiler and Duplicator choose a total of two vertices. The only property to check is whether they are adjacent.\n$1$. Round $1$: Spoiler picks a vertex $a_1$ (in $C_{10}$ or $C_{11}$). Since both graphs are vertex-transitive, we can assume $a_1 \\in C_{10}$ without loss of generality. Duplicator picks any vertex $b_1 \\in C_{11}$.\n$2$. Round $2$: Spoiler picks a second vertex $a_2 \\in C_{10}$.\n   - If $a_2$ is adjacent to $a_1$: Duplicator must pick a vertex $b_2 \\in C_{11}$ adjacent to $b_1$. This is possible since every vertex in $C_{11}$ has degree $2$. The map $a_1 \\mapsto b_1, a_2 \\mapsto b_2$ preserves the adjacency relation.\n   - If $a_2$ is not adjacent to $a_1$: Duplicator must pick a vertex $b_2 \\in C_{11}$ not adjacent to $b_1$. This is possible since $C_{11}$ has $11-1-2=8$ such vertices. The map preserves the non-adjacency relation.\nIn either case, Duplicator can make a move such that the resulting map on two vertices is a partial isomorphism. Therefore, Duplicator wins. The statement that Spoiler wins for $k=2$ is false. To distinguish $C_{10}$ from $C_{11}$ (e.g., by $C_{10}$ being bipartite while $C_{11}$ is not), Spoiler needs to exhibit an odd cycle. The shortest odd cycle in $C_{11}$ has length $11$, so Spoiler needs significantly more than $2$ rounds.\n\nVerdict for E: **Incorrect**.\n\nSummary: The correct options are A, B, and D.", "answer": "$$\\boxed{ABD}$$"}, {"introduction": "Having explored Spoiler's strategies, we now turn to a profound scenario where Duplicator holds the advantage in every finite game. This exercise [@problem_id:2969082] uses the classic example of the rational numbers $(\\mathbb{Q}, \\lt)$ versus the real numbers $(\\mathbb{R}, \\lt)$ to demonstrate the concept of elementary equivalence. By constructing Duplicator's winning strategy, you will see firsthand why these two structures are indistinguishable to first-order logic, even though they are clearly not isomorphic—a fact that reveals the expressive limitations of the logic itself.", "id": "2969082", "problem": "Let $M=(\\mathbb{Q},<)$ and $N=(\\mathbb{R},<)$ in the language of linear orders $\\mathcal{L}=\\{<\\}$. Using only the core definitions of dense linear order without endpoints and the rules of the Ehrenfeucht–Fraïssé (EF) game, analyze the EF game of length $k$ between $M$ and $N$. Specifically, starting from the definition of a dense linear order without endpoints and the definition of a partial isomorphism in the EF game, argue whether Duplicator has a winning strategy in $\\mathrm{EF}_{k}(M,N)$ for arbitrary finite $k \\in \\mathbb{N}$. Then, define the indicator function $\\chi:\\mathbb{N}\\to\\{0,1\\}$ by setting $\\chi(k)=1$ if Duplicator has a winning strategy in $\\mathrm{EF}_{k}(M,N)$ and $\\chi(k)=0$ otherwise, and compute the exact value of\n$$\nS \\;=\\; \\sum_{k=1}^{\\infty} 2^{-k}\\,\\chi(k).\n$$\nFinally, explain from first principles why a full back-and-forth leading to an isomorphism fails between $M$ and $N$, despite Duplicator’s success in all finite-length EF games. Your explanation must be grounded in definability and cardinality considerations internal to first-order logic for $\\mathcal{L}=\\{<\\}$.", "solution": "The problem asks for a three-part analysis concerning the Ehrenfeucht-Fraïssé (EF) game between the structures $M=(\\mathbb{Q},<)$ and $N=(\\mathbb{R},<)$. First, we must determine if Duplicator has a winning strategy in the game $\\mathrm{EF}_{k}(M,N)$ for any arbitrary finite $k \\in \\mathbb{N}$. Second, we must compute the sum $S = \\sum_{k=1}^{\\infty} 2^{-k}\\,\\chi(k)$, where $\\chi(k)$ is an indicator function based on Duplicator's success. Third, we must explain why an isomorphism between $M$ and $N$ does not exist despite Duplicator's success in all finite-length games.\n\nFirst, we validate the problem.\n**Step 1: Extract Givens**\n- Structure $M = (\\mathbb{Q}, <)$, the set of rational numbers with the standard less-than ordering.\n- Structure $N = (\\mathbb{R}, <)$, the set of real numbers with the standard less-than ordering.\n- The language is $\\mathcal{L}=\\{<\\}$, consisting of a single binary relation symbol.\n- The game is the Ehrenfeucht-Fraïssé game of length $k$, denoted $\\mathrm{EF}_{k}(M,N)$.\n- The analysis must be based on the core definitions of a dense linear order without endpoints (DLO) and the EF game.\n- An indicator function $\\chi:\\mathbb{N}\\to\\{0,1\\}$ is defined as $\\chi(k)=1$ if Duplicator has a winning strategy in $\\mathrm{EF}_{k}(M,N)$ and $\\chi(k)=0$ otherwise.\n- A sum to compute: $S = \\sum_{k=1}^{\\infty} 2^{-k}\\,\\chi(k)$.\n- An explanation is required for why a full back-and-forth leading to an isomorphism fails, grounded in definability and cardinality considerations internal to first-order logic for $\\mathcal{L}=\\{<\\}$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is well-defined and scientifically grounded within mathematical logic and model theory. Both $(\\mathbb{Q}, <)$ and $(\\mathbb{R}, <)$ are standard examples of structures that are dense linear orders without endpoints. The Ehrenfeucht-Fraïssé game is a fundamental tool for studying elementary equivalence. The question is a standard exercise in this field, testing the understanding of the relationship between EF games, elementary equivalence, and isomorphism. The problem is self-contained, objective, and contains no scientific or logical flaws.\n\n**Step 3: Verdict and Action**\nThe problem is valid. We proceed with a full solution.\n\n**Part 1: Analysis of the $\\mathrm{EF}_{k}(M,N)$ Game**\n\nThe theory of dense linear orders without endpoints (DLO) is defined by the following first-order axioms in the language $\\mathcal{L}=\\{<\\}$:\n1.  Irreflexivity: $\\forall x \\, \\neg(x < x)$\n2.  Transitivity: $\\forall x \\forall y \\forall z \\, ((x < y \\land y < z) \\to x < z)$\n3.  Totality (Linearity): $\\forall x \\forall y \\, (x < y \\lor x = y \\lor y < x)$\n4.  Density: $\\forall x \\forall y \\, (x < y \\to \\exists z \\, (x < z \\land z < y))$\n5.  No least element: $\\forall x \\, \\exists y \\, (y < x)$\n6.  No greatest element: $\\forall x \\, \\exists y \\, (x < y)$\n\nBoth structures $M=(\\mathbb{Q},<)$ and $N=(\\mathbb{R},<)$ are models of this theory.\n\nThe Ehrenfeucht-Fraïssé game $\\mathrm{EF}_{k}(M,N)$ is played by two players, Spoiler and Duplicator, over $k$ rounds. In each round $i \\in \\{1, \\dots, k\\}$, Spoiler chooses an element from either $M$ or $N$, and Duplicator must respond by choosing an element from the other structure. After $k$ rounds, let the chosen elements be $a_1, \\dots, a_k \\in \\mathbb{Q}$ and $b_1, \\dots, b_k \\in \\mathbb{R}$, where $(a_i, b_i)$ is the pair chosen in the round where Spoiler picked from $\\mathbb{Q}$ and Duplicator from $\\mathbb{R}$, or vice-versa.\n\nDuplicator wins the game if the map $f: \\{a_1, \\dots, a_k\\} \\to \\{b_1, \\dots, b_k\\}$ defined by $f(a_i) = b_i$ for all $i$ is a partial isomorphism. In the language $\\mathcal{L}=\\{<\\}$, this means that for any pair of indices $i, j \\in \\{1, \\dots, k\\}$, the condition $a_i < a_j$ holds in $M$ if and only if $b_i < b_j$ holds in $N$.\n\nDuplicator has a winning strategy in $\\mathrm{EF}_{k}(M,N)$ for any finite $k \\in \\mathbb{N}$. The strategy is as follows: Duplicator maintains the invariant that after round $i$, the map on the $i$ pairs of chosen elements is a partial isomorphism.\n\nLet's describe the strategy for round $i$ ($1 \\le i \\le k$), assuming the invariant holds for the first $i-1$ rounds. Let the elements chosen so far be $(a_1, \\dots, a_{i-1})$ from $\\mathbb{Q}$ and $(b_1, \\dots, b_{i-1})$ from $\\mathbb{R}$. Let the ordered set of unique values among these be $\\{a'_{1}, \\dots, a'_{m}\\}$ and $\\{b'_{1}, \\dots, b'_{m}\\}$ respectively, where $m < i$. By the invariant, $a'_{j} < a'_{j+1}$ if and only if $b'_{j} < b'_{j+1}$ for all $j \\in \\{1, \\dots, m-1\\}$.\n\nThese points partition their respective number lines into $m+1$ open intervals:\nIn $\\mathbb{Q}$: $(-\\infty, a'_{1})_{\\mathbb{Q}}$, $(a'_{1}, a'_{2})_{\\mathbb{Q}}$, ..., $(a'_{m-1}, a'_{m})_{\\mathbb{Q}}$, $(a'_{m}, \\infty)_{\\mathbb{Q}}$.\nIn $\\mathbb{R}$: $(-\\infty, b'_{1})_{\\mathbb{R}}$, $(b'_{1}, b'_{2})_{\\mathbb{R}}$, ..., $(b'_{m-1}, b'_{m})_{\\mathbb{R}}$, $(b'_{m}, \\infty)_{\\mathbb{R}}$.\n\nNow, in round $i$, suppose Spoiler chooses a new element $a_i \\in \\mathbb{Q}$. There are three possibilities for the location of $a_i$ relative to $\\{a'_{1}, \\dots, a'_{m}\\}$:\n1.  $a_i = a'_j$ for some $j$. Duplicator must choose $b_i = b'_j$. The partial isomorphism is trivially maintained.\n2.  $a_i$ falls into one of the open intervals, say $a_i \\in (a'_{j}, a'_{j+1})_{\\mathbb{Q}}$. Duplicator must choose an element $b_i \\in (b'_{j}, b'_{j+1})_{\\mathbb{R}}$. Because $(\\mathbb{R},<)$ is a dense linear order, the interval $(b'_{j}, b'_{j+1})_{\\mathbb{R}}$ is non-empty. Duplicator can pick any element from this interval, for instance, $b_i = (b'_{j} + b'_{j+1})/2$.\n3.  $a_i$ falls into an unbounded interval, say $a_i < a'_{1}$. Duplicator must choose $b_i < b'_{1}$. As $(\\mathbb{R},<)$ has no minimum element, such a $b_i$ always exists (e.g., $b_i = b'_{1} - 1$). A similar argument applies if $a_i > a'_{m}$.\n\nA symmetrical argument holds if Spoiler chooses an element $b_i \\in \\mathbb{R}$ first. Duplicator's response $a_i \\in \\mathbb{Q}$ is guaranteed to exist because $(\\mathbb{Q},<)$ is also a dense linear order without endpoints.\n\nSince this strategy allows Duplicator to successfully respond to any of Spoiler's moves for $k$ rounds while maintaining the order-isomorphism between the chosen finite subsets, Duplicator has a winning strategy for $\\mathrm{EF}_{k}(M,N)$ for any finite $k \\in \\mathbb{N}$.\n\n**Part 2: Computation of the Sum $S$**\n\nThe indicator function $\\chi(k)$ is defined as $\\chi(k)=1$ if Duplicator has a winning strategy in $\\mathrm{EF}_{k}(M,N)$ and $\\chi(k)=0$ otherwise. From the analysis in Part 1, we have concluded that Duplicator has a winning strategy for all finite $k \\ge 1$. Therefore, $\\chi(k) = 1$ for all $k \\in \\mathbb{N}$ with $k \\ge 1$.\n\nThe sum to be computed is\n$$S \\;=\\; \\sum_{k=1}^{\\infty} 2^{-k}\\,\\chi(k)$$\nSubstituting $\\chi(k) = 1$ for all $k \\ge 1$, we get\n$$S \\;=\\; \\sum_{k=1}^{\\infty} 2^{-k} \\cdot 1 \\;=\\; \\sum_{k=1}^{\\infty} \\left(\\frac{1}{2}\\right)^k$$\nThis is a standard geometric series with first term $a = 1/2$ and common ratio $r = 1/2$. The sum of an infinite geometric series is given by $a / (1-r)$ for $|r| < 1$.\n$$S \\;=\\; \\frac{\\frac{1}{2}}{1 - \\frac{1}{2}} \\;=\\; \\frac{\\frac{1}{2}}{\\frac{1}{2}} \\;=\\; 1$$\nThe exact value of the sum is $1$.\n\n**Part 3: Failure of Isomorphism**\n\nThe Ehrenfeucht-Fraïssé theorem states that two structures are elementarily equivalent (i.e., satisfy the same first-order sentences) if and only if Duplicator has a winning strategy in $\\mathrm{EF}_{k}$ for all finite $k \\in \\mathbb{N}$. Our result from Part 1 implies that $M \\equiv N$.\n\nAn isomorphism between $M=(\\mathbb{Q},<)$ and $N=(\\mathbb{R},<)$ would be a bijective function $f: \\mathbb{Q} \\to \\mathbb{R}$ that is order-preserving, i.e., for all $q_1, q_2 \\in \\mathbb{Q}$, $q_1 < q_2 \\iff f(q_1) < f(q_2)$. A \"full back-and-forth\" refers to Duplicator having a winning strategy in the infinite-length game $\\mathrm{EF}_{\\omega}(M,N)$. For countable languages, this is equivalent to the existence of an isomorphism between the structures.\n\nThe fundamental reason for the non-existence of an isomorphism is the difference in cardinality between the two sets. The set of rational numbers $\\mathbb{Q}$ is countable, i.e., $|\\mathbb{Q}| = \\aleph_0$. The set of real numbers $\\mathbb{R}$ is uncountable, with $|\\mathbb{R}| = 2^{\\aleph_0}$. A bijection between two sets can only exist if they have the same cardinality. Since $|\\mathbb{Q}| \\neq |\\mathbb{R}|$, no such bijection exists, and therefore, no isomorphism can exist.\n\nThe problem asks for an explanation grounded in definability within first-order logic. First-order logic, in a countable language like $\\mathcal{L}=\\{<\\}$, is not powerful enough to distinguish between all non-isomorphic structures. The success of Duplicator in all finite games demonstrates this limitation. At any finite stage of the game, only a finite number of points have been selected. The density property, which is first-order definable, ensures that Duplicator can always find a suitable point to place in the corresponding interval. The game never \"sees\" the global structure of the number line, only the local relative ordering of a finite set of points.\n\nThe property that distinguishes $\\mathbb{R}$ from $\\mathbb{Q}$ is completeness: every non-empty subset of $\\mathbb{R}$ that is bounded above has a least upper bound (supremum) in $\\mathbb{R}$. This property is not possessed by $\\mathbb{Q}$. For example, the set $A = \\{x \\in \\mathbb{Q} \\mid x^2 < 2\\}$ is non-empty and bounded above in $\\mathbb{Q}$ (e.g., by $2$), but its supremum, $\\sqrt{2}$, is not in $\\mathbb{Q}$.\n\nThe completeness property cannot be expressed by any sentence in first-order logic. To express it, one would need to quantify over all subsets of the domain, e.g., \"For every subset $S$...\". Quantification over sets is a feature of second-order logic, not first-order logic. Since completeness is not a first-order property, there is no first-order sentence $\\phi$ that is true in $(\\mathbb{R},<)$ but false in $(\\mathbb{Q},<)$ on account of this difference. This is precisely why they are elementarily equivalent ($M \\equiv N$), and why Duplicator wins all finite EF games.\n\nIn summary, the full back-and-forth fails because it would imply the existence of a bijection, which is impossible due to the cardinality difference ($|\\mathbb{Q}| = \\aleph_0$ vs. $|\\mathbb{R}| = 2^{\\aleph_0}$). Duplicator's success in all finite games reveals that first-order logic is too weak to detect this cardinality difference or the related second-order property of completeness. The finite game only tests properties expressible by first-order formulas, and with respect to those, $(\\mathbb{Q},<)$ and $(\\mathbb{R},<)$ are indistinguishable.", "answer": "$$\n\\boxed{1}\n$$"}, {"introduction": "We have seen that winning all finite-length games does not guarantee isomorphism. To fully capture a structure's isomorphism type, we must sometimes extend the back-and-forth process into the transfinite, giving rise to the concept of Scott rank. This problem [@problem_id:2969050] challenges you to analyze a computable structure that is so intricate its back-and-forth analysis requires iterating through stages corresponding to all computable ordinals. This provides a hands-on look at how transfinite-length games and the Scott Isomorphism Theorem are used to classify complex structures beyond the reach of simpler methods.", "id": "2969050", "problem": "A countable structure in a countable language is analyzed via the infinitary logic $\\mathcal{L}_{\\omega_1,\\omega}$, which permits countable conjunctions and disjunctions but only finite strings of quantifiers. For tuples $\\bar{a}$ in a structure $\\mathcal{A}$ and $\\bar{b}$ in a structure $\\mathcal{B}$, the transfinite back-and-forth relations $\\equiv_\\alpha$ (for ordinals $\\alpha$) are defined by recursion as follows: at stage $0$, $\\bar{a}\\equiv_0 \\bar{b}$ if and only if $\\bar{a}$ and $\\bar{b}$ satisfy the same quantifier-free formulas; at successor stage $\\alpha+1$, $\\bar{a}\\equiv_{\\alpha+1}\\bar{b}$ if and only if for every $a'\\in A$ there exists $b'\\in B$ with $(\\bar{a},a')\\equiv_\\alpha (\\bar{b},b')$ and for every $b'\\in B$ there exists $a'\\in A$ with $(\\bar{a},a')\\equiv_\\alpha (\\bar{b},b')$; and at limit stage $\\lambda$, $\\bar{a}\\equiv_\\lambda \\bar{b}$ if and only if for all $\\beta<\\lambda$ we have $\\bar{a}\\equiv_\\beta \\bar{b}$. The Scott rank $\\mathrm{SR}(\\mathcal{A})$ of $\\mathcal{A}$ is the least ordinal $\\alpha$ such that for every tuple $\\bar{a}$ from $A$, the orbit of $\\bar{a}$ under $\\mathrm{Aut}(\\mathcal{A})$ is definable by an $\\mathcal{L}_{\\omega_1,\\omega}$ formula of quantifier rank at most $\\alpha$, equivalently the least $\\alpha$ such that the equivalence $\\equiv_\\alpha$ coincides with the isomorphism relation on finite tuples of $\\mathcal{A}$. A structure is said to have high Scott rank if its Scott rank is at least the Church-Kleene (CK) ordinal $\\omega_1^{\\mathrm{CK}}$, the least non-computable ordinal.\n\nSelect the option that correctly provides a concrete countable computable example of a structure of high Scott rank and accurately outlines the transfinite back-and-forth steps required to approximate its isomorphism type, including the correct value of its Scott rank.\n\nA. Consider the Harrison linear order $(H,<)$, a computable linear order of order type $\\omega_1^{\\mathrm{CK}}\\cdot(1+\\eta)$, where $\\eta$ is the order type of the dense linear order without endpoints. A back-and-forth system is built from finite order-preserving partial isomorphisms. For each ordinal $\\alpha<\\omega_1^{\\mathrm{CK}}$, the $\\equiv_\\alpha$-equivalence cannot distinguish any two points lying in the ill-founded dense tail $\\,\\omega_1^{\\mathrm{CK}}\\cdot\\eta\\,$, and it aligns the initial well-ordered segment of type $\\omega_1^{\\mathrm{CK}}$ by matching ranks below $\\alpha$. At limit stages $\\lambda<\\omega_1^{\\mathrm{CK}}$, unions of coherent chains of partial isomorphisms yield extensions that preserve $\\equiv_\\lambda$. The isomorphism type is only captured at one successor stage beyond all computable stages, and the Scott rank satisfies $\\mathrm{SR}(H)=\\omega_1^{\\mathrm{CK}}+1$.\n\nB. Consider the countable dense linear order without endpoints $(\\mathbb{Q},<)$. A back-and-forth system is again formed from finite order-preserving partial maps. To approximate its isomorphism type, one must iterate the back-and-forth through all countable ordinals; the Scott rank is $\\omega$, since infinite disjunctions are needed to separate cut types.\n\nC. Consider a computable well-founded tree $(T,\\prec)$ in a language with a single binary relation $\\prec$, whose rank function assigns to each node an ordinal less than $\\omega_1^{\\mathrm{CK}}$ and such that the height of the tree is exactly $\\omega_1^{\\mathrm{CK}}$. The transfinite back-and-forth proceeds by matching nodes of equal rank at each stage and requires two extra successor steps beyond $\\omega_1^{\\mathrm{CK}}$ to separate non-isomorphic tuples, so $\\mathrm{SR}(T)=\\omega_1^{\\mathrm{CK}}+2$.\n\nD. Consider the disjoint union $(M;S,P)$ of countably many copies of the successor structure $(\\mathbb{N},S)$, with a unary predicate $P$ naming the least element in each copy. The back-and-forth must traverse unboundedly many limit stages to correctly identify the component of a tuple, yielding a Scott rank of $\\omega_1^{\\mathrm{CK}}$ because components cannot be $\\mathcal{L}_{\\omega_1,\\omega}$-distinguished below that bound.", "solution": "The user has provided a problem statement in the field of mathematical logic, specifically computable model theory, concerning the Scott rank of countable structures.\n\n### Problem Validation\n\n**Step 1: Extract Givens**\n\nThe problem statement provides the following definitions and context:\n-   **Logic:** Infinitary logic $\\mathcal{L}_{\\omega_1,\\omega}$, which allows countable conjunctions/disjunctions and finite quantifier strings.\n-   **Structures:** Countable structures in a countable language.\n-   **Back-and-Forth Relations:** A transfinite sequence of equivalence relations $\\equiv_\\alpha$ on tuples, defined for ordinals $\\alpha$.\n    -   **Base Case ($\\alpha=0$):** $\\bar{a}\\equiv_0 \\bar{b}$ if and only if $\\bar{a}$ and $\\bar{b}$ satisfy the same quantifier-free formulas.\n    -   **Successor Stage ($\\alpha+1$):** $\\bar{a}\\equiv_{\\alpha+1}\\bar{b}$ if and only if for every $a'\\in A$ there exists $b'\\in B$ such that $(\\bar{a},a')\\equiv_\\alpha (\\bar{b},b')$, and for every $b'\\in B$ there exists $a'\\in A$ such that $(\\bar{a},a')\\equiv_\\alpha (\\bar{b},b')$.\n    -   **Limit Stage ($\\lambda$):** $\\bar{a}\\equiv_\\lambda \\bar{b}$ if and only if for all $\\beta < \\lambda$, we have $\\bar{a}\\equiv_\\beta \\bar{b}$.\n-   **Scott Rank:** The Scott rank of a structure $\\mathcal{A}$, denoted $\\mathrm{SR}(\\mathcal{A})$, is given two equivalent definitions:\n    1.  The least ordinal $\\alpha$ such that for every tuple $\\bar{a}$ from $A$, the orbit of $\\bar{a}$ under the automorphism group $\\mathrm{Aut}(\\mathcal{A})$ is definable by an $\\mathcal{L}_{\\omega_1,\\omega}$ formula of quantifier rank at most $\\alpha$.\n    2.  The least ordinal $\\alpha$ such that the equivalence $\\equiv_\\alpha$ on finite tuples of $\\mathcal{A}$ coincides with the relation of being in the same automorphism orbit.\n-   **High Scott Rank:** A structure has high Scott rank if its Scott rank is at least the Church-Kleene ordinal, $\\omega_1^{\\mathrm{CK}}$.\n-   **Church-Kleene Ordinal ($\\omega_1^{\\mathrm{CK}}$):** The least non-computable ordinal.\n\n**Step 2: Validate Using Extracted Givens**\n\nThe problem statement is scrutinized based on the validation criteria:\n-   **Scientifically Grounded:** All concepts presented—infinitary logic $\\mathcal{L}_{\\omega_1,\\omega}$, the transfinite back-and-forth relations, Scott rank, the Church-Kleene ordinal $\\omega_1^{\\mathrm{CK}}$, and computable structures—are standard, rigorously defined topics within advanced mathematical logic, specifically model theory and computability theory. The relationship between these concepts is central to the field of computable structure theory.\n-   **Well-Posed:** The question is unambiguous. It asks to identify, from a list of options, a specific type of mathematical object (a computable structure with high Scott rank) and a correct description of its properties. A unique, correct answer is expected to exist based on established theorems.\n-   **Objective:** The language is formal and technical. The definitions are standard mathematical ones, leaving no room for subjective interpretation.\n-   **Completeness and Consistency:** The problem provides sufficient definitions for a logician to understand the question precisely. The two provided definitions for Scott rank are indeed equivalent, a result known as the Scott Isomorphism Theorem. There are no internal contradictions.\n\n**Step 3: Verdict and Action**\n\nThe problem statement is **valid**. It is a well-formulated question on a standard topic in mathematical logic. The analysis of the provided options may now proceed.\n\n### Solution Derivation and Option Analysis\n\nThe task is to find an option that presents a computable countable structure with Scott rank $\\mathrm{SR}(\\mathcal{A}) \\ge \\omega_1^{\\mathrm{CK}}$, along with an accurate description of its analysis via the back-and-forth method. A key result from computable model theory is that a computable structure $\\mathcal{A}$ has Scott rank less than $\\omega_1^{\\mathrm{CK}}$ if and only if it is *computably categorical* (i.e., any computable structure isomorphic to $\\mathcal{A}$ is computably isomorphic to it). Therefore, we are looking for a computable structure that is not computably categorical.\n\n**Option A: The Harrison linear order $(H,<)$**\n\nThis option proposes the Harrison linear order, a well-known object in computable model theory. It is a computable linear ordering on $\\mathbb{N}$ constructed specifically to be an example of a non-computably categorical structure.\n\n-   **Structure and Scott Rank:** The description of the order type as $\\omega_1^{\\mathrm{CK}}\\cdot(1+\\eta)$ is a common, if slightly informal, way to refer to the Harrison order's properties. A key feature is that it possesses initial segments isomorphic to every computable ordinal $\\alpha < \\omega_1^{\\mathrm{CK}}$, but it is not a well-ordering itself. It is a canonical example of a computable structure whose Scott rank is precisely $\\omega_1^{\\mathrm{CK}}+1$. This value is greater than or equal to $\\omega_1^{\\mathrm{CK}}$, so it is a structure of high Scott rank.\n-   **Back-and-Forth Analysis:** The description of the process is accurate. For any computable ordinal $\\alpha < \\omega_1^{\\mathrm{CK}}$, the $\\equiv_\\alpha$ relation is insufficient to capture all automorphism orbits. The game must proceed through all stages $\\alpha < \\omega_1^{\\mathrm{CK}}$. At the limit stage $\\lambda = \\omega_1^{\\mathrm{CK}}$, the relation $\\equiv_{\\omega_1^{\\mathrm{CK}}}$ is formed by taking the intersection of all preceding relations $\\equiv_\\beta$ for $\\beta < \\omega_1^{\\mathrm{CK}}$. For the Harrison order, this limit relation $\\equiv_{\\omega_1^{\\mathrm{CK}}}$ is still not fine enough to coincide with the automorphism orbits. One final successor step is required. The relation $\\equiv_{\\omega_1^{\\mathrm{CK}}+1}$ is the first to do so. This implies that there exist non-automorphic tuples $\\bar{a}, \\bar{b}$ in $H$ such that $\\bar{a} \\equiv_{\\omega_1^{\\mathrm{CK}}} \\bar{b}$ but $\\bar{a} \\not\\equiv_{\\omega_1^{\\mathrm{CK}}+1} \\bar{b}$. The option's claim that the isomorphism type is captured \"at one successor stage beyond all computable stages\" correctly identifies this phenomenon, and the stated Scott rank $\\mathrm{SR}(H)=\\omega_1^{\\mathrm{CK}}+1$ is correct.\n\n**Verdict for Option A:** **Correct**.\n\n**Option B: The countable dense linear order without endpoints $(\\mathbb{Q},<)$**\n\nThis option proposes the structure of rational numbers with their usual order.\n\n-   **Structure and Scott Rank:** The structure $(\\mathbb{Q}, <)$ is famously $\\omega$-categorical and highly symmetric. An automorphism orbit of a finite tuple $\\bar{a} = (a_1, \\dots, a_n)$ is determined entirely by its quantifier-free type, i.e., the ordering of the elements $a_i$. For example, the orbit of $(q_1, q_2)$ where $q_1 < q_2$ contains all pairs $(r_1, r_2)$ with $r_1 < r_2$. The condition $v_1 < v_2$ is a quantifier-free formula. Two tuples $\\bar{a}$ and $\\bar{b}$ are automorphic if and only if they satisfy the same quantifier-free formulas over the language of orders. By definition, this means that the relation of being automorphic is identical to the $\\equiv_0$ relation. Therefore, the Scott rank of $(\\mathbb{Q},<)$ is $0$.\n-   **Evaluation of Claims:** The claim that $\\mathrm{SR}((\\mathbb{Q},<))=\\omega$ is false. The reasoning about \"separating cut types\" pertains to axiomatizing the theory of dense linear orders, not to the automorphism group of a single model like $(\\mathbb{Q},<)$. Since $\\mathrm{SR}((\\mathbb{Q},<))=0$, it is not a structure of high Scott rank.\n\n**Verdict for Option B:** **Incorrect**.\n\n**Option C: A computable well-founded tree $(T,\\prec)$**\n\nThis option proposes a computable well-founded tree whose height is $\\omega_1^{\\mathrm{CK}}$.\n\n-   **Structure and Scott Rank:** A computable tree whose height is $\\omega_1^{\\mathrm{CK}}$ means that the ranks of its nodes are precisely the computable ordinals. Such structures are indeed known to have high Scott rank (they are not computably categorical). However, the option claims the Scott rank is exactly $\\omega_1^{\\mathrm{CK}}+2$. While it is possible to construct structures with Scott rank $\\omega_1^{\\mathrm{CK}}+n$ for $n \\in \\mathbb{N}$, the value depends on the fine details of the tree's construction (e.g., branching behavior). A simple computable tree encoding the computable ordinals, analogous to a computable well-ordering, would have Scott rank $\\omega_1^{\\mathrm{CK}}+1$. The claim of $\\omega_1^{\\mathrm{CK}}+2$ is highly specific and requires a particular, non-trivial construction which is not provided. Without this justification, the claim is unsubstantiated.\n-   **Evaluation of Claims:** While this is the correct *type* of structure to have high Scott rank, the specifics are questionable. Compared to Option A, which uses a canonical example with a well-established Scott rank, this option is less certain. The assertion that it \"requires two extra successor steps\" is not justified.\n\n**Verdict for Option C:** **Incorrect**. The example class is appropriate, but the specific Scott rank value provided is not justified and is not the most common value for such examples. Option A is superior in its accuracy and use of a canonical example.\n\n**Option D: The disjoint union $(M;S,P)$**\n\nThis option proposes a structure consisting of a countable number of disjoint copies of $(\\mathbb{N}, S)$, where $P$ marks the first element of each copy.\n\n-   **Structure and Scott Rank:** Let's analyze the automorphism orbits. Two elements $(i, n)$ and $(j, m)$ (where $i,j$ are copy indices and $n,m$ are positions) are automorphic if and only if $n=m$. The orbit of an element at position $n$ can be defined by a first-order formula: an element $y$ is at position $n$ if there is a path of length $n$ from a $P$-element to $y$. This formula uses $n$ existential quantifiers. A tuple's orbit is similarly definable by a first-order formula, with quantifier depth depending on the positions of its elements and their component structure. To distinguish any two non-automorphic tuples, a finite number of back-and-forth rounds suffices. The maximum number of rounds needed over all possible tuples is the supremum of the natural numbers, which is $\\omega$. Thus, the Scott rank of this structure is $\\omega$.\n-   **Evaluation of Claims:** The claim that the Scott rank is $\\omega_1^{\\mathrm{CK}}$ is false. The structure is relatively simple from a logical complexity standpoint. Since $\\omega < \\omega_1^{\\mathrm{CK}}$, this is not an example of a structure with high Scott rank.\n\n**Verdict for Option D:** **Incorrect**.\n\n**Conclusion**\n\nOnly Option A provides a correct example of a computable structure with high Scott rank, gives the correct value for its Scott rank, and accurately summarizes the reasoning based on the transfinite back-and-forth construction.", "answer": "$$\\boxed{A}$$"}]}