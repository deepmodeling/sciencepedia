{"hands_on_practices": [{"introduction": "The ability to convert a logical formula into a standard or \"normal\" form is a cornerstone of mathematical logic. This exercise [@problem_id:2971857] provides fundamental practice by asking you to derive both the Disjunctive Normal Form (DNF) and Conjunctive Normal Form (CNF) for the exclusive-or ($p \\oplus q$) operator, starting from its basic semantic definition. This process reinforces your understanding of core logical equivalences and introduces the critical concept of minimality, forcing you to reason about prime implicants and the most efficient representation of a formula.", "problem": "Let $p$ and $q$ be propositional variables. Using only the connectives negation $\\lnot$, conjunction $\\land$, and disjunction $\\lor$, derive from first principles a conjunctive normal form (CNF) and a disjunctive normal form (DNF) that are logically equivalent to the exclusive-or formula $p \\oplus q$, starting from the semantic definition that $p \\oplus q$ is true if and only if exactly one of $p$ and $q$ is true. Your derivations must be based solely on the core truth-functional laws of classical propositional logic, including associativity, commutativity, distributivity, De Morgan dualities, and the definitions of clause and term. Prove that your CNF and DNF are prime and irredundant, and that, among all CNFs and DNFs equivalent to $p \\oplus q$, they simultaneously minimize both (i) the number of clauses or terms and (ii) the total number of literal occurrences.\n\nLet $c$ denote the minimal number of clauses among all CNFs equivalent to $p \\oplus q$, and let $t$ denote the minimal number of terms among all DNFs equivalent to $p \\oplus q$. Compute the binomial coefficient $\\binom{c+t}{c}$ and report it as a single exact number. No rounding is required.", "solution": "The problem statement has been validated and is deemed valid. It is a well-posed problem in classical propositional logic, free of scientific unsoundness, ambiguity, or contradiction. All necessary definitions and constraints are provided to proceed with a rigorous derivation and proof.\n\nThe core of the problem is to derive and validate minimal normal forms for the exclusive-or operator, $p \\oplus q$, based on its semantic definition.\n\n**1. Derivation and Minimality of the Disjunctive Normal Form (DNF)**\n\nThe semantic definition states that $p \\oplus q$ is true if and only if exactly one of the propositional variables $p$ or $q$ is true. This can be expressed as a disjunction of the two cases where this condition holds:\nCase 1: $p$ is true and $q$ is false. This corresponds to the conjunction $p \\land \\lnot q$.\nCase 2: $p$ is false and $q$ is true. This corresponds to the conjunction $\\lnot p \\land q$.\n\nCombining these two mutually exclusive cases with a disjunction ($\\lor$) gives the logical expression equivalent to $p \\oplus q$:\n$$ (p \\land \\lnot q) \\lor (\\lnot p \\land q) $$\nThis formula is in Disjunctive Normal Form (DNF), as it is a disjunction of conjunctive terms. Let the terms be $T_1 = p \\land \\lnot q$ and $T_2 = \\lnot p \\land q$.\n\nTo prove that this is a minimal DNF, we must show that it is an irredundant disjunction of all the prime implicants of $p \\oplus q$.\n\nAn implicant of a formula $F$ is a term $T$ such that $T \\Rightarrow F$. A prime implicant is an implicant from which no literal can be removed without it ceasing to be an implicant.\n\nLet's analyze the term $T_1 = p \\land \\lnot q$.\nBy construction, $(p \\land \\lnot q) \\Rightarrow (p \\oplus q)$, so $T_1$ is an implicant.\nTo check if it is prime, we test removing each literal:\n- Removing $p$ leaves $\\lnot q$. The statement $\\lnot q \\Rightarrow (p \\oplus q)$ is false. A counterexample is when $p$ is false and $q$ is false. In this case, $\\lnot q$ is true, but $p \\oplus q$ is false.\n- Removing $\\lnot q$ leaves $p$. The statement $p \\Rightarrow (p \\oplus q)$ is false. A counterexample is when $p$ is true and $q$ is true. In this case, $p$ is true, but $p \\oplus q$ is false.\nSince no literal can be removed, $T_1 = p \\land \\lnot q$ is a prime implicant.\n\nBy symmetry, the same reasoning applies to the term $T_2 = \\lnot p \\land q$. It is also a prime implicant.\n\nAre there any other prime implicants? We can analyze the truth table for $p \\oplus q$:\n| $p$ | $q$ | $p \\oplus q$ | Minterms |\n|---|---|---|---|\n| $0$ | $0$ | $0$ | |\n| $0$ | $1$ | $1$ | $\\lnot p \\land q$ |\n| $1$ | $0$ | $1$ | $p \\land \\lnot q$ |\n| $1$ | $1$ | $0$ | |\nThe function $p \\oplus q$ is the disjunction of its minterms, which are precisely $T_1$ and $T_2$. In a Karnaugh map, these two '1's are isolated and cannot be combined into larger groups. This visually confirms that $\\lnot p \\land q$ and $p \\land \\lnot q$ are the only prime implicants.\n\nThe minimal DNF is formed by the disjunction of a set of prime implicants that is both complete (covers all true cases) and irredundant (no term can be removed). The set {$p \\land \\lnot q, \\lnot p \\land q$} contains all prime implicants of the function. Removing either term would cause the expression to no longer be equivalent to $p \\oplus q$. For example, removing $\\lnot p \\land q$ would make the expression false for $p=0, q=1$. Therefore, the DNF $(p \\land \\lnot q) \\lor (\\lnot p \\land q)$ is irredundant.\n\nThis DNF has $2$ terms. Since any equivalent DNF must be built from prime implicants, and we have shown there are exactly two, no equivalent DNF can have fewer than $2$ terms. Thus, this DNF is minimal in the number of terms. We denote this minimal number by $t$, so $t=2$.\nFurthermore, it contains a total of $4$ literals. Since the two prime implicants each require two literals, any DNF with $2$ terms must have at least $4$ literals. Therefore, this DNF also minimizes the total number of literal occurrences.\n\n**2. Derivation and Minimality of the Conjunctive Normal Form (CNF)**\n\nA Conjunctive Normal Form (CNF) can be derived by considering the negation of the formula, $\\lnot(p \\oplus q)$. A formula is false if and only if its negation is true. $p \\oplus q$ is false if and only if $p$ and $q$ have the same truth value. This gives two cases:\nCase 1: $p$ is true and $q$ is true, corresponding to $p \\land q$.\nCase 2: $p$ is false and $q$ is false, corresponding to $\\lnot p \\land \\lnot q$.\nThus, the DNF for $\\lnot(p \\oplus q)$ is $(p \\land q) \\lor (\\lnot p \\land \\lnot q)$.\n\nTo find the CNF for $p \\oplus q$, we negate the DNF of its negation and apply De Morgan's laws:\n$$ p \\oplus q \\equiv \\lnot(\\lnot(p \\oplus q)) \\equiv \\lnot( (p \\land q) \\lor (\\lnot p \\land \\lnot q) ) $$\nApplying De Morgan's law $\\lnot(A \\lor B) \\equiv \\lnot A \\land \\lnot B$:\n$$ \\equiv \\lnot(p \\land q) \\land \\lnot(\\lnot p \\land \\lnot q) $$\nApplying De Morgan's law $\\lnot(A \\land B) \\equiv \\lnot A \\lor \\lnot B$ to both conjuncts:\n$$ \\equiv (\\lnot p \\lor \\lnot q) \\land (\\lnot(\\lnot p) \\lor \\lnot(\\lnot q)) $$\nApplying the law of double negation $\\lnot(\\lnot A) \\equiv A$:\n$$ \\equiv (\\lnot p \\lor \\lnot q) \\land (p \\lor q) $$\nThis expression is in CNF. It is the conjunction of two clauses: $C_1 = \\lnot p \\lor \\lnot q$ and $C_2 = p \\lor q$.\n\nTo prove minimality, we show that these are the only prime implicates of $p \\oplus q$. An implicate of a formula $F$ is a clause $C$ such that $F \\Rightarrow C$. A prime implicate is one from which no literal can be removed without it ceasing to be an implicate.\n\nLet's analyze the clause $C_1 = \\lnot p \\lor \\lnot q$.\nThe statement $(p \\oplus q) \\Rightarrow (\\lnot p \\lor \\lnot q)$ is true, because if $p \\oplus q$ is true, it is not the case that both $p$ and $q$ are true, which is exactly what $\\lnot p \\lor \\lnot q$ asserts.\nTo check if it is prime, we remove literals:\n- Removing $\\lnot p$ leaves $\\lnot q$. The statement $(p \\oplus q) \\Rightarrow \\lnot q$ is false. A counterexample is $p=0, q=1$. Here, $p \\oplus q$ is true, but $\\lnot q$ is false.\n- Removing $\\lnot q$ leaves $\\lnot p$. The statement $(p \\oplus q) \\Rightarrow \\lnot p$ is false. A counterexample is $p=1, q=0$. Here, $p \\oplus q$ is true, but $\\lnot p$ is false.\nThus, $C_1$ is a prime implicate.\n\nLet's analyze the clause $C_2 = p \\lor q$.\nThe statement $(p \\oplus q) \\Rightarrow (p \\lor q)$ is true, because if $p \\oplus q$ is true, at least one of $p$ or $q$ must be true.\nTo check if it is prime, we remove literals:\n- Removing $p$ leaves $q$. The statement $(p \\oplus q) \\Rightarrow q$ is false. A counterexample is $p=1, q=0$.\n- Removing $q$ leaves $p$. The statement $(p \\oplus q) \\Rightarrow p$ is false. A counterexample is $p=0, q=1$.\nThus, $C_2$ is also a prime implicate.\n\nThe minimal CNF is the conjunction of all prime implicates. The two false entries in the truth table for $p \\oplus q$ occur at $p=0, q=0$ and $p=1, q=1$. These correspond to the maxterms $(p \\lor q)$ and $(\\lnot p \\lor \\lnot q)$, respectively. Analysis of a Karnaugh map for the '0's shows they are isolated, confirming these are the only two prime implicates.\nThe CNF $(\\lnot p \\lor \\lnot q) \\land (p \\lor q)$ is irredundant because removing either clause would make the expression true for an input where it should be false (e.g., removing $p \\lor q$ makes it true for $p=0, q=0$).\n\nThis CNF has $2$ clauses. Since there are exactly two prime implicates, no equivalent CNF can have fewer clauses. Thus, it is minimal in the number of clauses. We denote this minimal number by $c$, so $c=2$.\nIt contains $4$ literals. Since the two prime implicates have two literals each, no $2$-clause CNF can have fewer literals. The CNF is therefore minimal in both clause count and literal count.\n\n**3. Final Calculation**\n\nWe have determined the minimal number of clauses in a CNF for $p \\oplus q$ to be $c=2$, and the minimal number of terms in a DNF to be $t=2$.\nThe problem asks for the computation of the binomial coefficient $\\binom{c+t}{c}$.\nSubstituting the values:\n$$ \\binom{c+t}{c} = \\binom{2+2}{2} = \\binom{4}{2} $$\nThe value of $\\binom{4}{2}$ is calculated as:\n$$ \\binom{4}{2} = \\frac{4!}{2!(4-2)!} = \\frac{4!}{2!2!} = \\frac{4 \\times 3 \\times 2 \\times 1}{(2 \\times 1)(2 \\times 1)} = \\frac{24}{4} = 6 $$\nThe result is a single exact number, $6$.", "answer": "$$ \\boxed{6} $$", "id": "2971857"}, {"introduction": "Once a formula is in Conjunctive Normal Form, it can often be simplified to improve the efficiency of automated reasoning systems. This practice focuses on subsumption, a key technique for eliminating redundant clauses. By analyzing the relationship between the clauses in the formula $F = (p \\lor q) \\land (p \\lor q \\lor r)$, you will explore how a purely syntactic property—one clause's set of literals being a subset of another's—translates directly into a powerful logical simplification based on the absorption law [@problem_id:2971839].", "problem": "Consider propositional logic with the usual truth-function semantics: a valuation assigns each propositional variable a truth value in $\\{\\text{true}, \\text{false}\\}$, compound formulas are evaluated under the standard semantics for $\\lor$, $\\land$, and $\\neg$. A literal is either an atom $p$ or its negation $\\neg p$. A clause is a finite disjunction of literals. Conjunctive Normal Form (CNF) is a finite conjunction of clauses. Define subsumption as follows: given clauses $C$ and $D$, $C$ subsumes $D$ if the set of literals of $C$ is a subset of the set of literals of $D$. Consider the CNF formula\n$$F \\;=\\; (p \\lor q) \\land (p \\lor q \\lor r),$$\nwhere $p$, $q$, and $r$ are distinct propositional variables. Which of the following statements are correct?\n\nA. Under the given definition, the clause $(p \\lor q)$ subsumes the clause $(p \\lor q \\lor r)$ in $F$.\n\nB. Under the given definition, the clause $(p \\lor q \\lor r)$ subsumes the clause $(p \\lor q)$ in $F$.\n\nC. The CNF $F$ is logically equivalent to $(p \\lor q)$.\n\nD. The CNF $F$ is logically equivalent to $(p \\lor q \\lor r)$.\n\nE. Eliminating the subsumed clause $(p \\lor q \\lor r)$ from $F$ preserves logical equivalence, whereas eliminating $(p \\lor q)$ from $F$ does not.", "solution": "The problem statement will first be validated for its scientific soundness, well-posedness, and objectivity.\n\n### Step 1: Extract Givens\n- **Logic System:** Propositional logic with standard truth-function semantics. Valuations assign a truth value from $\\{\\text{true}, \\text{false}\\}$ to each propositional variable. The connectives $\\lor$ (disjunction), $\\land$ (conjunction), and $\\neg$ (negation) have their standard meanings.\n- **Definitions:**\n    - A **literal** is either an atom $p$ or its negation $\\neg p$.\n    - A **clause** is a finite disjunction of literals.\n    - **Conjunctive Normal Form (CNF)** is a finite conjunction of clauses.\n    - **Subsumption:** A clause $C$ subsumes a clause $D$ if the set of literals of $C$ is a subset of the set of literals of $D$.\n- **Formula:** The CNF formula under consideration is $F = (p \\lor q) \\land (p \\lor q \\lor r)$.\n- **Variables:** $p$, $q$, and $r$ are distinct propositional variables.\n- **Question:** Identify which of the provided statements are correct.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is set within the formal framework of propositional logic. All terms, such as \"literal\", \"clause\", and \"CNF\", are standard. The provided definition of \"subsumption\" is a standard one used in automated reasoning and logic programming (specifically, it's often called $\\theta$-subsumption, which simplifies to this set-based definition in propositional logic). The formula $F$ is a well-formed formula in CNF. The question is a direct query about the properties of this formula based on the given definitions.\n\n- **Scientific Grounding (Critical):** The problem is firmly grounded in mathematical logic. All definitions and concepts are standard and correct. It does not violate any logical principles.\n- **Well-Posed:** The problem is well-posed. It provides all necessary definitions and a specific formula to analyze. The questions asked are unambiguous and have definite answers within the logical system.\n- **Objective (Critical):** The problem is stated in precise, objective mathematical language.\n- **Other Flaws:** The problem is self-contained, consistent, and does not exhibit any of the other flaws listed in the validation checklist (e.g., it is not trivial, ill-posed, or metaphorical).\n\n### Step 3: Verdict and Action\nThe problem statement is **valid**. The solution process will now proceed.\n\n### Solution Derivation\n\nThe given CNF formula is $F = (p \\lor q) \\land (p \\lor q \\lor r)$.\nLet us define the two clauses in $F$:\n- Clause $C_1 = (p \\lor q)$. The set of its literals is $L(C_1) = \\{p, q\\}$.\n- Clause $C_2 = (p \\lor q \\lor r)$. The set of its literals is $L(C_2) = \\{p, q, r\\}$.\n\nThe core of this problem relates the syntactic notion of subsumption to the semantic concept of logical equivalence. Specifically, if a clause $C_1$ subsumes a clause $C_2$, it means that any valuation that satisfies $C_1$ also satisfies $C_2$. To see this, if $C_1$ is true, at least one of its literals is true. Since all literals of $C_1$ are also in $C_2$, that same literal is true in $C_2$, making $C_2$ true as well. This means $C_1 \\models C_2$, or equivalently, $(C_1 \\rightarrow C_2)$ is a tautology.\n\nThe formula $F$ is a conjunction of two clauses, $C_1 \\land C_2$. If $C_1 \\models C_2$, then $C_1 \\land C_2 \\equiv C_1$. This is a form of the absorption law in Boolean algebra: $A \\land (A \\lor B) \\equiv A$.\nLet $A = (p \\lor q)$ and $B=r$. Then the formula $F$ is of the form $A \\land (A \\lor r)$. By the absorption law, $F$ is logically equivalent to $A$, which is $(p \\lor q)$.\n\nWe will now analyze each option based on these principles.\n\n### Option-by-Option Analysis\n\n**A. Under the given definition, the clause $(p \\lor q)$ subsumes the clause $(p \\lor q \\lor r)$ in $F$.**\n\nLet $C = (p \\lor q)$ and $D = (p \\lor q \\lor r)$.\nThe set of literals for $C$ is $L(C) = \\{p, q\\}$.\nThe set of literals for $D$ is $L(D) = \\{p, q, r\\}$.\nThe definition of subsumption states that $C$ subsumes $D$ if $L(C) \\subseteq L(D)$.\nIn this case, $\\{p, q\\} \\subseteq \\{p, q, r\\}$ is true.\nTherefore, the statement is correct according to the provided definition.\n\nVerdict: **Correct**.\n\n**B. Under the given definition, the clause $(p \\lor q \\lor r)$ subsumes the clause $(p \\lor q)$ in $F$.**\n\nLet $C = (p \\lor q \\lor r)$ and $D = (p \\lor q)$.\nThe set of literals for $C$ is $L(C) = \\{p, q, r\\}$.\nThe set of literals for $D$ is $L(D) = \\{p, q\\}$.\nThe condition for subsumption is $L(C) \\subseteq L(D)$.\nIn this case, we must check if $\\{p, q, r\\} \\subseteq \\{p, q\\}$. This is false, because the literal $r$ is an element of $L(C)$ but not of $L(D)$.\nTherefore, the statement is incorrect.\n\nVerdict: **Incorrect**.\n\n**C. The CNF $F$ is logically equivalent to $(p \\lor q)$.**\n\nThe formula is $F = (p \\lor q) \\land (p \\lor q \\lor r)$.\nAs established in the initial derivation, this formula is a direct instance of the absorption law $A \\land (A \\lor B) \\equiv A$, where $A=(p \\lor q)$ and $B=r$.\nTherefore, $F \\equiv (p \\lor q)$.\nAlternatively, we can reason from the truth values.\nSuppose a valuation makes $(p \\lor q)$ true. Then the first conjunct of $F$ is true. Since $(p \\lor q)$ is true, $(p \\lor q \\lor r)$ must also be true. Thus, $F$ is true.\nSuppose a valuation makes $(p \\lor q)$ false. Then the first conjunct of $F$ is false, making the entire conjunction $F$ false.\nSince $F$ is true if and only if $(p \\lor q)$ is true, the two formulas are logically equivalent.\n\nVerdict: **Correct**.\n\n**D. The CNF $F$ is logically equivalent to $(p \\lor q \\lor r)$.**\n\nFrom the analysis of option C, we know $F \\equiv (p \\lor q)$. For this option to be correct, it would require $(p \\lor q) \\equiv (p \\lor q \\lor r)$.\nThese two formulas are not logically equivalent. Consider a valuation where $p = \\text{false}$, $q = \\text{false}$, and $r = \\text{true}$.\n- The formula $(p \\lor q)$ evaluates to $(\\text{false} \\lor \\text{false})$, which is $\\text{false}$.\n- The formula $(p \\lor q \\lor r)$ evaluates to $(\\text{false} \\lor \\text{false} \\lor \\text{true})$, which is $\\text{true}$.\nSince the formulas have different truth values for this valuation, they are not logically equivalent. Thus, $F$ is not logically equivalent to $(p \\lor q \\lor r)$.\n\nVerdict: **Incorrect**.\n\n**E. Eliminating the subsumed clause $(p \\lor q \\lor r)$ from $F$ preserves logical equivalence, whereas eliminating $(p \\lor q)$ from $F$ does not.**\n\nThis statement consists of two claims.\nClaim 1: \"Eliminating the subsumed clause $(p \\lor q \\lor r)$ from $F$ preserves logical equivalence\".\nFrom option A, we know that $(p \\lor q \\lor r)$ is the subsumed clause (it is subsumed by $(p \\lor q)$).\nThe original formula is $F = (p \\lor q) \\land (p \\lor q \\lor r)$.\nEliminating the clause $(p \\lor q \\lor r)$ results in the formula $(p \\lor q)$.\nThe claim is that $F \\equiv (p \\lor q)$. As proven for option C, this is true. So, the first part of the statement is correct.\n\nClaim 2: \"...whereas eliminating $(p \\lor q)$ from $F$ does not.\"\nEliminating the clause $(p \\lor q)$ from $F$ results in the formula $(p \\lor q \\lor r)$.\nThe claim is that $F \\not\\equiv (p \\lor q \\lor r)$. As proven for option D, this is true. So, the second part of the statement is also correct.\n\nSince both claims in the compound statement are correct, the entire statement is correct. This option correctly describes the consequence of subsumption: removing the subsumed (logically weaker) clause from a CNF formula preserves logical equivalence.\n\nVerdict: **Correct**.", "answer": "$$\\boxed{\\text{ACE}}$$", "id": "2971839"}, {"introduction": "The primary motivation for converting formulas into CNF is to enable the use of powerful, uniform proof procedures. This exercise [@problem_id:2971844] provides hands-on experience with one such method: resolution refutation, which is the engine behind many modern automated theorem provers. By systematically applying the resolution rule to a set of clauses, you will work towards deriving the empty clause, thereby constructing a formal proof that the original formula is unsatisfiable.", "problem": "Consider the propositional formula in Conjunctive Normal Form (CNF), given by $(p \\lor q) \\land (\\lnot p \\lor r) \\land (\\lnot q \\lor r) \\land (\\lnot r)$. A clause is a disjunction of literals, and the width of a clause is defined as the number of literals in it. Using only the standard resolution rule for propositional clauses—that from clauses of the form $(A \\lor x)$ and $(B \\lor \\lnot x)$ one may infer the resolvent $(A \\lor B)$—construct a resolution refutation of the above CNF (derive the empty clause) and, across the entire derivation, determine the maximum clause width that appears (considering both the initial clauses and all resolvents produced). Express your final answer as a single integer indicating this maximum width. No rounding is required.", "solution": "The problem is first validated to ensure it is well-posed, scientifically grounded, and objective.\n\n**Step 1: Extract Givens**\n- Propositional formula in Conjunctive Normal Form (CNF): $(p \\lor q) \\land (\\lnot p \\lor r) \\land (\\lnot q \\lor r) \\land (\\lnot r)$.\n- Definition of CNF: A conjunction of disjunctions of literals.\n- Definition of a clause: A disjunction of literals.\n- Definition of clause width: The number of literals in a clause.\n- The resolution rule: From clauses $(A \\lor x)$ and $(B \\lor \\lnot x)$, one may infer the resolvent $(A \\lor B)$.\n- The task is to construct a resolution refutation (derive the empty clause) and determine the maximum clause width that appears in the entire derivation (initial and derived clauses).\n- The final answer must be a single integer.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientifically Grounded:** The problem is a standard exercise in propositional logic, specifically in the area of automated theorem proving using the resolution principle. All concepts (CNF, clause, literal, resolution) are standard and well-defined in mathematical logic.\n- **Well-Posed:** The problem provides a specific unsatisfiable CNF formula and asks for a concrete property (maximum clause width) of a resolution refutation. A resolution refutation is guaranteed to exist for any unsatisfiable set of clauses. The problem asks for the maximum width in a single constructed derivation, not the minimum possible maximum width over all possible derivations, making the task unambiguous. To confirm a refutation exists, we check for satisfiability:\n    1. The clause $(\\lnot r)$ implies that for the entire formula to be true, $r$ must be false.\n    2. Substituting $r = \\text{false}$ into $(\\lnot p \\lor r)$ gives $(\\lnot p \\lor \\text{false})$, which simplifies to $(\\lnot p)$. Thus, $p$ must be false.\n    3. Substituting $r = \\text{false}$ into $(\\lnot q \\lor r)$ gives $(\\lnot q \\lor \\text{false})$, which simplifies to $(\\lnot q)$. Thus, $q$ must be false.\n    4. We now have the assignment $p=\\text{false}$, $q=\\text{false}$, $r=\\text{false}$. Testing this on the first clause $(p \\lor q)$ gives $(\\text{false} \\lor \\text{false})$, which is false.\n    5. Since this assignment, forced by three of the clauses, falsifies the first clause, no satisfying assignment exists. The formula is unsatisfiable. Therefore, a resolution refutation can be constructed.\n- **Objective:** The problem is stated in precise, formal language without ambiguity or subjectivity.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A solution will be constructed.\n\n**Solution Construction**\nThe given CNF formula corresponds to the following set of initial clauses. We list each clause and its width, defined as the number of literals it contains.\n- $C_1: (p \\lor q)$, width $w(C_1) = 2$\n- $C_2: (\\lnot p \\lor r)$, width $w(C_2) = 2$\n- $C_3: (\\lnot q \\lor r)$, width $w(C_3) = 2$\n- $C_4: (\\lnot r)$, width $w(C_4) = 1$\n\nThe maximum width among the initial clauses is $2$. We now proceed to construct a resolution refutation, which is a sequence of applications of the resolution rule, culminating in the derivation of the empty clause, denoted by $\\Box$. We must track the width of every clause generated.\n\nA common and efficient strategy for resolution is to prioritize resolutions involving unit clauses (clauses of width $1$). Our initial set contains one such clause, $C_4$.\n\n**Step 1:** Resolve $C_2$ and $C_4$.\nWe take clause $C_2 = (\\lnot p \\lor r)$ and clause $C_4 = (\\lnot r)$. We resolve on the variable $r$. In the rule $(A \\lor x)$ and $(B \\lor \\lnot x) \\vdash (A \\lor B)$, we have $x = r$, $A = (\\lnot p)$, and $B$ is the empty disjunction. The resolvent is $(A \\lor B) = (\\lnot p)$.\n- $C_5 = (\\lnot p)$.\n- The width of this new clause is $w(C_5) = 1$.\n\n**Step 2:** Resolve $C_3$ and $C_4$.\nWe take clause $C_3 = (\\lnot q \\lor r)$ and clause $C_4 = (\\lnot r)$. We resolve on the variable $r$. Here, $x=r$, $A=(\\lnot q)$, and $B$ is empty. The resolvent is $(\\lnot q)$.\n- $C_6 = (\\lnot q)$.\n- The width is $w(C_6) = 1$.\n\nOur set of clauses now effectively includes $C_1, C_2, C_3, C_4, C_5, C_6$. We have more unit clauses to work with.\n\n**Step 3:** Resolve $C_1$ and $C_5$.\nWe take clause $C_1 = (p \\lor q)$ and our derived clause $C_5 = (\\lnot p)$. We resolve on the variable $p$. Here, $x=p$, $A=(q)$, and $B$ is empty. The resolvent is $(q)$.\n- $C_7 = (q)$.\n- The width is $w(C_7) = 1$.\n\n**Step 4:** Resolve $C_7$ and $C_6$.\nWe take our derived clauses $C_7 = (q)$ and $C_6 = (\\lnot q)$. We resolve on the variable $q$. Here, $x=q$, and both $A$ and $B$ are empty disjunctions. The resolvent is the empty clause.\n- $C_8 = \\Box$.\n- The width of the empty clause is $w(C_8) = 0$.\n\nThe derivation of the empty clause completes the refutation. The set of all clauses that appeared across the entire derivation includes the initial clauses and all resolvents:\n- Initial clauses: $C_1, C_2, C_3, C_4$. Their widths are $\\{2, 2, 2, 1\\}$.\n- Derived resolvents: $C_5, C_6, C_7, C_8$. Their widths are $\\{1, 1, 1, 0\\}$.\n\nThe collection of all clause widths that appeared in the derivation is the set $\\{2, 1, 0\\}$. The maximum value in this set is $2$.\nTherefore, the maximum clause width that appears across the entire derivation is $2$.", "answer": "$$\\boxed{2}$$", "id": "2971844"}]}