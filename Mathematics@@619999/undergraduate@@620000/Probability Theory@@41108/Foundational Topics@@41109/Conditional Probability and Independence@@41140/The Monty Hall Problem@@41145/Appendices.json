{"hands_on_practices": [{"introduction": "To begin our hands-on exploration, we'll tackle a variation of the classic Monty Hall problem that expands the number of choices. This exercise invites you to apply the foundational principle of conditional probability in a slightly more complex scenario with five doors instead of three. By calculating the odds of winning when you switch, you will reinforce the core insight of the Monty Hall problem: the host's action provides crucial information that dramatically shifts the probabilities in favor of switching. [@problem_id:1402148]", "problem": "A popular game show presents a contestant with a choice of five identical, closed doors. Behind one door is a brand new car, and behind the other four doors are goats. The contestant's goal is to select the door with the car.\n\nThe game proceeds in the following stages:\n1.  The contestant makes an initial selection, choosing one of the five doors.\n2.  The game show host, who knows the location of the car, then opens two of the other four doors. The host always chooses doors that contain goats.\n3.  After the host reveals the two goats, three doors remain closed: the contestant's initial choice and two other unopened doors.\n4.  The contestant is given the option to either stick with their original choice or switch to one of the two other unopened doors.\n\nSuppose the contestant decides to switch. Their switching strategy is to choose one of the two other available closed doors, with each of those two doors having an equal probability of being chosen. What is the probability that the contestant wins the car?\n\nExpress your answer as an exact fraction in simplest form.", "solution": "Let $A$ be the event that the initial selection is the car and $B$ be the event that the initial selection is a goat. Let $W$ be the event that the contestant wins under the stated switching strategy (choosing uniformly at random between the two other unopened doors). The initial probabilities are $P(A)=\\frac{1}{5}$ and $P(B)=\\frac{4}{5}$.\n\nIf $A$ occurs, then all four other doors contain goats. The host opens two goat doors, leaving two unopened doors that are both goats. Switching to one of these yields a loss, so $P(W \\mid A)=0$.\n\nIf $B$ occurs, then among the other four doors there is exactly one car and three goats. The host opens two goat doors, leaving two unopened doors among which exactly one is the car. The contestant then chooses uniformly between these two, so $P(W \\mid B)=\\frac{1}{2}$.\n\nBy the law of total probability,\n$$\nP(W)=P(W \\mid A)P(A)+P(W \\mid B)P(B)=0 \\cdot \\frac{1}{5}+\\frac{1}{2}\\cdot \\frac{4}{5}=\\frac{2}{5}.\n$$", "answer": "$$\\boxed{\\frac{2}{5}}$$", "id": "1402148"}, {"introduction": "Having tackled a specific numerical case, we now move to a more abstract challenge by generalizing the game to an arbitrary number of doors, $N$. This practice requires you to move beyond arithmetic and use algebraic reasoning to derive a general formula for the probability of winning. Developing this expression will deepen your understanding of how the strategic advantage of switching scales as the number of initial options increases. [@problem_id:1402141]", "problem": "A futuristic game show, 'Galaxy of Gates', has become the most popular broadcast in the known universe. The rules are a cosmic-scale version of a classic probability puzzle. There are $N$ identical, opaque portals arranged in a circle, where $N$ is an integer and $N \\ge 3$. Behind exactly one portal lies the grand prize: a hyperspace-capable starship. Behind the other $N-1$ portals are valueless comets.\n\nYou, the contestant, choose one portal. After you have made your choice, the host of the show, a nigh-omniscient being named 'The Arbiter', who knows where the starship is, opens *exactly one* of the other portals. The Arbiter will always open a portal to reveal a comet. After this revelation, there are $N-2$ other closed portals remaining besides your initial choice.\n\nYou are now given the option to switch your choice. You decide to always employ a 'switching' strategy: you will abandon your initial portal and choose one of the $N-2$ other unopened portals uniformly at random.\n\nDerive a general expression for your probability of winning the starship as a function of $N$.", "solution": "Let there be $N$ portals with exactly one prize. You initially choose one portal. The Arbiter opens exactly one other portal to show a comet and leaves $N-2$ unopened portals besides your initial choice. You then switch by choosing uniformly at random among these $N-2$ portals.\n\nCompute the winning probability by conditioning on whether your initial choice was correct.\n\nIf the initial choice is the prize (probability $\\frac{1}{N}$), then after the Arbiter opens a comet, all $N-2$ other unopened portals are comets. Switching selects among these $N-2$ comets, so the conditional probability of winning in this case is $0$.\n\nIf the initial choice is a comet (probability $\\frac{N-1}{N}$), then among the $N-2$ unopened portals (excluding your initial and the one opened by the Arbiter), exactly one hides the prize. Since you choose uniformly at random among these $N-2$ portals, the conditional probability of winning is $\\frac{1}{N-2}$.\n\nBy the law of total probability, the overall winning probability when switching is\n$$\n\\frac{1}{N}\\cdot 0+\\frac{N-1}{N}\\cdot\\frac{1}{N-2}=\\frac{N-1}{N(N-2)}.\n$$", "answer": "$$\\boxed{\\frac{N-1}{N\\left(N-2\\right)}}$$", "id": "1402141"}, {"introduction": "Our final practice bridges the gap between theoretical derivation and computational verification. You are tasked with designing a Monte Carlo simulation, a powerful technique used to approximate probabilities through repeated random sampling. This exercise will challenge you to translate the rules and constraints of the generalized Monty Hall problem into a precise algorithm, reinforcing the importance of the host's knowledge in a tangible, programmable way. [@problem_id:1402172]", "problem": "A famous game show is generalized to involve $N$ identical doors. Behind one door is a valuable prize, and behind the other $N-1$ doors are goats. The contestant does not know where the prize is. The game proceeds as follows:\n1.  The contestant makes an initial choice, picking one of the $N$ doors.\n2.  The host, who knows the location of the prize, then opens $k$ other doors, where $1 \\le k \\le N-2$. The doors the host opens are guaranteed to reveal goats.\n3.  The contestant is then given a choice: either stick with their initial selection or switch to a different, still-closed door.\n\nWe are interested in the \"switching strategy,\" where the contestant always abandons their initial choice and randomly picks one of the other doors that remains closed. Your task is to identify the correct algorithm for a Monte Carlo simulation designed to estimate the probability of winning when a contestant employs this switching strategy.\n\nLet `num_trials` be the total number of times the simulation is run. Which of the following algorithms correctly estimates the winning probability?\n\nA. Initialize `wins = 0`. For `i` from 1 to `num_trials`:\n   1. Randomly assign the prize to a door from 1 to $N$.\n   2. Randomly select the contestant's initial door.\n   3. Identify the set of $N-1$ doors that are not the contestant's choice. The host randomly opens $k$ doors from this set.\n   4. Identify the set of remaining closed doors. The contestant randomly selects a new door from this set.\n   5. If the contestant's new door has the prize, increment `wins`.\n   The estimated probability is `wins / num_trials`.\n\nB. Initialize `wins = 0`. For `i` from 1 to `num_trials`:\n   1. Randomly assign the prize to a door from 1 to $N$.\n   2. Randomly select the contestant's initial door.\n   3. Identify the set of doors that do not contain the prize and are not the contestant's choice. The host randomly opens $k$ doors from this set.\n   4. Identify the set of all doors not opened by the host. The contestant randomly selects a new door from this set.\n   5. If the contestant's new door has the prize, increment `wins`.\n   The estimated probability is `wins / num_trials`.\n\nC. Initialize `wins = 0`. Initialize `valid_trials = 0`. While `valid_trials < num_trials`:\n   1. Randomly assign the prize to a door from 1 to $N$.\n   2. Randomly select the contestant's initial door.\n   3. If the contestant's initial choice is the prize door, discard this trial and continue to the next iteration.\n   4. Identify the set of doors that do not contain the prize and are not the contestant's choice. The host randomly opens $k$ doors from this set.\n   5. Identify the set of doors not opened by the host and not the contestant's initial choice. The contestant randomly selects one door from this set.\n   6. If the contestant's new door has the prize, increment `wins`.\n   7. Increment `valid_trials`.\n   The estimated probability is `wins / valid_trials`.\n\nD. Initialize `wins = 0`. For `i` from 1 to `num_trials`:\n   1. Randomly assign the prize to a door from 1 to $N$.\n   2. Randomly select the contestant's initial door.\n   3. Identify the set of doors that do not contain the prize and are not the contestant's choice. The host randomly opens $k$ doors from this set.\n   4. Identify the set of doors not opened by the host and not the contestant's initial choice. The contestant randomly selects one door from this set.\n   5. If the contestant's new door has the prize, increment `wins`.\n   The estimated probability is `wins / num_trials`.", "solution": "Let the doors be labeled by the set $D=\\{1,2,\\dots,N\\}$. The prize location $P$ is chosen uniformly on $D$ and the contestant’s initial choice $C$ is chosen uniformly on $D$, independent of $P$. The host knows $P$ and opens $k$ doors, each guaranteed to reveal goats; therefore every opened door must lie in $D\\setminus\\{C,P\\}$. After the host opens $k$ such doors, the set of still-closed doors is $D$ minus those $k$ opened doors. The switching strategy requires that the contestant abandon $C$ and select uniformly at random from the remaining closed doors excluding $C$.\n\nThe win probability under the switching strategy is derived as follows. If $C=P$, then no door other than $C$ contains the prize, so switching loses with probability $1$. If $C\\neq P$, then among the doors that remain closed and are not $C$, exactly one door contains the prize. The number of such doors is $N-k-1$, so the conditional win probability given $C\\neq P$ is $1/(N-k-1)$. Using the law of total probability with $\\Pr(C\\neq P)=(N-1)/N$, the unconditional win probability is\n$$\n\\Pr(\\text{win by switching})=\\frac{N-1}{N}\\cdot\\frac{1}{N-k-1}.\n$$\nA correct Monte Carlo algorithm must reproduce the host’s constraint and the switching rule to estimate this probability.\n\nAlgorithm A is incorrect because step 3 allows the host to open $k$ doors chosen from $D\\setminus\\{C\\}$ without excluding $P$. This assigns positive probability to the host opening the prize door when $C\\neq P$, which violates the rule that the host’s opened doors are guaranteed goats, and therefore biases the simulation.\n\nAlgorithm B correctly restricts the host’s opened doors to $D\\setminus\\{C,P\\}$ in step 3, but step 4 has the contestant choose uniformly from all doors not opened by the host, i.e., from $D$ minus the $k$ opened doors. This set has size $N-k$ and includes the original choice $C$. Therefore, the contestant will with probability $1/(N-k)$ inadvertently “stick” to $C$, creating a mixture of stick and switch behaviors and not the pure switching strategy. Hence it does not estimate the desired probability.\n\nAlgorithm C conditions the simulation on $C\\neq P$ by discarding trials with $C=P$. In that case, the measured success rate converges to the conditional probability $1/(N-k-1)$ rather than the unconditional win probability $\\frac{N-1}{N}\\cdot\\frac{1}{N-k-1}$. Since the requested estimate is unconditional, this algorithm is incorrect as stated.\n\nAlgorithm D enforces both necessary conditions: the host opens $k$ doors from $D\\setminus\\{C,P\\}$ (guaranteed goats) and the contestant then selects uniformly from the closed doors excluding both the host-opened doors and the initial choice $C$, i.e., from a set of size $N-k-1$. This implements the pure switching strategy and produces a consistent Monte Carlo estimate of the correct win probability $\\frac{N-1}{N}\\cdot\\frac{1}{N-k-1}$.\n\nTherefore, the correct algorithm is D.", "answer": "$$\\boxed{D}$$", "id": "1402172"}]}