{"hands_on_practices": [{"introduction": "We begin with the fundamental calculation at the heart of the Birthday Problem. This exercise, framed in the practical context of computer data hashing, will guide you through calculating the probability that no \"collisions\" occur when distributing a set number of items into available slots. By focusing on the complementary event where all items occupy distinct slots, you will build the foundational skills needed to tackle more complex probability scenarios. [@problem_id:1404644]", "problem": "A computer science student is experimenting with a simple hashing function designed to map data keys to a hash table. The hash table has $M=12$ available slots, indexed 0 through 11. The student assumes their hashing function distributes keys uniformly and randomly across these slots, meaning any key has an equal probability of being mapped to any of the 12 slots.\n\nIf the student inserts $N=5$ distinct keys into the initially empty hash table, what is the probability that no two keys are mapped to the same slot (i.e., no collisions occur)?\n\nCalculate your answer as a decimal, and round it to four significant figures.", "solution": "Each key is mapped independently and uniformly to one of $M=12$ slots. For no collisions with $N=5$ distinct keys, the second key must avoid the first keyâ€™s slot, the third must avoid the first two, and so on. Thus the probability is the product of conditional probabilities:\n$$\nP=\\frac{12}{12}\\cdot\\frac{11}{12}\\cdot\\frac{10}{12}\\cdot\\frac{9}{12}\\cdot\\frac{8}{12}.\n$$\nSimplifying,\n$$\nP=\\frac{12\\cdot 11\\cdot 10\\cdot 9\\cdot 8}{12^{5}}=\\frac{11\\cdot 10\\cdot 9\\cdot 8}{12^{4}}=\\frac{7920}{20736}=\\frac{55}{144}.\n$$\nAs a decimal rounded to four significant figures,\n$$\nP=\\frac{55}{144}\\approx 0.3819.\n$$", "answer": "$$\\boxed{0.3819}$$", "id": "1404644"}, {"introduction": "Now, let's explore the counter-intuitive nature of the Birthday Problem that makes it a famous paradox. Instead of calculating a probability for a given number of items, this practice asks you to find the minimum number of items required to ensure the probability of a collision is greater than $0.5$. This exercise demonstrates how quickly collision chances rise and is a vital concept in risk assessment and system capacity planning. [@problem_id:1404642]", "problem": "A large-scale distributed database system uses a simple hashing scheme to distribute data keys across its servers. There are $N=64$ servers in the cluster. When a new key is added, a hash function is applied to it, and the key is stored on the server indexed by the result of `hash(key) mod N`. Assume that the hash function is ideal, meaning it distributes keys uniformly and randomly across the servers. What is the minimum number of keys that must be inserted into the database such that the probability of at least one \"collision\" (i.e., at least two keys being assigned to the same server) is strictly greater than $0.5$?", "solution": "Let $N=64$ be the number of servers and $m$ be the number of keys. We want to find the smallest integer $m$ such that the probability of at least one collision, $P(\\text{collision}, m)$, is strictly greater than 0.5. This is equivalent to finding the smallest $m$ such that the probability of no collisions, $P(\\text{no collision}, m)$, is less than 0.5.\n\nThe probability of no collisions is given by:\n$$P(\\text{no collision}, m) = \\frac{N}{N} \\times \\frac{N-1}{N} \\times \\dots \\times \\frac{N-m+1}{N} = \\prod_{i=0}^{m-1} \\frac{N-i}{N}$$\nWe need to find the smallest $m$ such that $P(\\text{no collision}, m)  0.5$. We can test values of $m$ sequentially.\n- For $m=9$: $P(\\text{no collision}, 9) = \\frac{64 \\cdot 63 \\cdot \\dots \\cdot 56}{64^9} = \\frac{P(64, 9)}{64^9} \\approx 0.5483$\n- For $m=10$: $P(\\text{no collision}, 10) = P(\\text{no collision}, 9) \\times \\frac{64-9}{64} \\approx 0.5483 \\times \\frac{55}{64} \\approx 0.4708$\n\nSince $P(\\text{no collision}, 9) > 0.5$ and $P(\\text{no collision}, 10)  0.5$, the minimum number of keys required for the collision probability to exceed 0.5 is $m=10$.\n\nAlternatively, we can use the approximation derived in the main article: $P(\\text{collision}) \\approx 1 - e^{-m(m-1)/(2N)}$. We need $1 - e^{-m(m-1)/(2N)} > 0.5$, which means $e^{-m(m-1)/(2N)}  0.5$. Taking the natural logarithm of both sides:\n$$-\\frac{m(m-1)}{2N}  \\ln(0.5) = -\\ln(2)$$\n$$\\frac{m(m-1)}{2N} > \\ln(2) \\approx 0.693$$\n$$m(m-1) > 2N \\ln(2) = 2 \\times 64 \\times 0.693 \\approx 88.7$$\nWe need to find the smallest integer $m$ that satisfies this. We can approximate $m(m-1) \\approx m^2$.\n$$m^2 > 88.7 \\implies m > \\sqrt{88.7} \\approx 9.42$$\nThe smallest integer $m$ satisfying this is $m=10$. Checking this integer:\nFor $m=10$: $10 \\times 9 = 90 > 88.7$.\nFor $m=9$: $9 \\times 8 = 72  88.7$.\nBoth methods confirm that the minimum number of keys is 10.", "answer": "$$\\boxed{10}$$", "id": "1404642"}, {"introduction": "Real-world systems rarely exhibit perfect uniformity, and this final practice challenges you to adapt the birthday problem to a more realistic scenario. Here, we discard the assumption of equally likely outcomes and explore a situation with weighted probabilities, such as biased server assignments in a computer network. This problem will enhance your modeling skills by requiring you to generalize the core counting principles to accommodate non-uniform distributions. [@problem_id:1404690]", "problem": "In a distributed computing system, there are 7 servers available for processing tasks. These servers are categorized into two types: 3 high-priority servers and 4 standard-priority servers. A central scheduler assigns incoming jobs to one of these servers. The scheduler is programmed with a bias: any given job is twice as likely to be assigned to any one of the high-priority servers as it is to be assigned to any one of the standard-priority servers. Within each category (high-priority or standard-priority), the servers are chosen with equal likelihood.\n\nSuppose that 4 independent jobs arrive and are assigned to servers according to this scheduling rule. What is the probability that at least two of these jobs are assigned to the same server?\n\nExpress your answer as a single fraction in its simplest form.", "solution": "Let $p_{H}$ denote the probability a job is assigned to a specific high-priority server and $p_{S}$ denote the probability a job is assigned to a specific standard-priority server. The scheduler bias gives $p_{H}=2p_{S}$, and normalization over the $3$ high and $4$ standard servers gives\n$$3p_{H}+4p_{S}=1.$$\nSubstituting $p_{H}=2p_{S}$ yields\n$$3(2p_{S})+4p_{S}=10p_{S}=1 \\implies p_{S}=\\frac{1}{10},\\quad p_{H}=\\frac{1}{5}.$$\n\nFor $4$ independent jobs, the probability that all are assigned to distinct servers is\n$$P(\\text{all distinct})=4!\\sum_{A:\\,|A|=4}\\prod_{i\\in A}p_{i},$$\nwhere the sum is over all $4$-element subsets $A$ of the $7$ servers and $p_{i}$ is the per-server assignment probability.\n\nGroup subsets by the number $k$ of high-priority servers in $A$ (with $k=0,1,2,3$). There are $\\binom{3}{k}\\binom{4}{4-k}$ such subsets, and each contributes a product $(\\frac{1}{5})^{k}(\\frac{1}{10})^{4-k}$. Hence\n$$\\sum_{A:\\,|A|=4}\\prod_{i\\in A}p_{i}=\\sum_{k=0}^{3}\\binom{3}{k}\\binom{4}{4-k}\\left(\\frac{1}{5}\\right)^{k}\\left(\\frac{1}{10}\\right)^{4-k}.$$\nFactor $\\left(\\frac{1}{10}\\right)^{4}$ and note $\\frac{1/5}{1/10}=2$ to obtain\n$$\\sum_{A:\\,|A|=4}\\prod_{i\\in A}p_{i}=\\left(\\frac{1}{10}\\right)^{4}\\sum_{k=0}^{3}\\binom{3}{k}\\binom{4}{4-k}2^{k}.$$\nCompute the finite sum:\n$$\\sum_{k=0}^{3}\\binom{3}{k}\\binom{4}{4-k}2^{k}= \\binom{3}{0}\\binom{4}{4}2^{0}+\\binom{3}{1}\\binom{4}{3}2^{1}+\\binom{3}{2}\\binom{4}{2}2^{2}+\\binom{3}{3}\\binom{4}{1}2^{3}$$\n$$=1\\cdot 1\\cdot 1+3\\cdot 4\\cdot 2+3\\cdot 6\\cdot 4+1\\cdot 4\\cdot 8=1+24+72+32=129.$$\nTherefore\n$$P(\\text{all distinct})=4!\\left(\\frac{1}{10}\\right)^{4}\\cdot 129=\\frac{24\\cdot 129}{10000}=\\frac{3096}{10000}=\\frac{387}{1250}.$$\nThe desired probability that at least two jobs are assigned to the same server is\n$$P(\\text{collision})=1-P(\\text{all distinct})=1-\\frac{387}{1250}=\\frac{863}{1250}.$$", "answer": "$$\\boxed{\\frac{863}{1250}}$$", "id": "1404690"}]}