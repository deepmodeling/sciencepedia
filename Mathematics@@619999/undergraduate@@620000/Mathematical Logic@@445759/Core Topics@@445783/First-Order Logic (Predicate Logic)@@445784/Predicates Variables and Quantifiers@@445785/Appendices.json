{"hands_on_practices": [{"introduction": "The abstract symbols of logic gain meaning when interpreted within a specific mathematical \"structure.\" This first practice makes these concepts tangible by providing a simple, finite universe where you can see how formulas are evaluated. By calculating the truth value of a formula under different variable assignments, you will gain a hands-on understanding of how the meaning of an open formula depends on the values assigned to its free variables [@problem_id:3048953].", "problem": "Consider a first-order structure $\\mathcal{A}$ for the language with one binary function symbol $+$ and one unary predicate symbol $E$, together with equality. The universe of discourse is $$A = \\{0,1,2,3,4,5\\}.$$ The binary function symbol is interpreted by addition modulo $6$: for all $a,b \\in A$, $$+^{\\mathcal{A}}(a,b) = (a+b) \\bmod 6.$$ The unary predicate symbol $E$ is interpreted as the subset of even elements: $$E^{\\mathcal{A}} = \\{0,2,4\\}.$$\n\nDefine the formula with free variables $$\\varphi(x,y) := \\exists z\\,\\big(x = y + z \\,\\wedge\\, E(z)\\big),$$ where $+$ is the function symbol of the language and $E$ is the predicate symbol.\n\nUsing the fundamental semantics of first-order logic—namely, that terms are evaluated under a variable assignment into the structure, quantifiers bind variables, and a formula’s truth value is determined relative to a structure and an assignment—carry out the following:\n\n1. Identify which variables of $\\varphi(x,y)$ are free and which are bound, and explain (from first principles) why the truth value of $\\varphi$ can change under different assignments for the free variables in the fixed structure $\\mathcal{A}$.\n\n2. Let $s_{1}$ and $s_{2}$ be two variable assignments with $s_{1}(x)=5$, $s_{1}(y)=1$, and $s_{2}(x)=4$, $s_{2}(y)=3$ (the values of any other variables under these assignments may be arbitrary elements of $A$). Evaluate the truth values of $\\varphi$ under $\\mathcal{A}$ and these assignments.\n\n3. Compute the total number of ordered pairs $(a,b) \\in A \\times A$ such that, under the assignment $s$ with $s(x)=a$ and $s(y)=b$, the formula $\\varphi$ is true in $\\mathcal{A}$. Your final answer must be this count as a single integer. No rounding is required.", "solution": "The problem provides a first-order structure $\\mathcal{A}$ for a language with a binary function symbol $+$, a unary predicate symbol $E$, and equality $=$. The universe of discourse is $A = \\{0,1,2,3,4,5\\}$. The interpretation of $+$ is addition modulo $6$, $+^{\\mathcal{A}}(a,b) = (a+b) \\bmod 6$, and the interpretation of $E$ is the set of even numbers in $A$, $E^{\\mathcal{A}} = \\{0,2,4\\}$. The formula to analyze is $\\varphi(x,y) := \\exists z\\,\\big(x = y + z \\,\\wedge\\, E(z)\\big)$.\n\nThe problem is valid as it is a well-defined exercise in applying the standard Tarskian semantics of first-order logic to a finite structure. All terms are clearly defined, and the questions posed are unambiguous and have determinate answers based on the provided definitions.\n\n### Part 1: Free and Bound Variables\n\nThe formula is $\\varphi(x,y) := \\exists z\\,\\big(x = y + z \\,\\wedge\\, E(z)\\big)$.\nA variable in a formula is said to be *bound* if it occurs within the scope of a quantifier that binds it. In this formula, the variable $z$ is introduced by the existential quantifier $\\exists z$. The scope of this quantifier is the subformula $\\big(x = y + z \\,\\wedge\\, E(z)\\big)$. The occurrences of $z$ within this subformula are therefore bound.\n\nA variable is *free* if it has an occurrence in the formula that is not bound. The variables $x$ and $y$ appear in the formula, but they are not introduced by any quantifier. Therefore, $x$ and $y$ are the free variables of $\\varphi(x,y)$.\n\nA formula with free variables, often called an open formula, does not express a proposition with a fixed truth value. Instead, it defines a relation on the domain of the structure. The truth value of such a formula is evaluated relative to a variable assignment $s$, which maps the free variables to elements of the universe $A$. The notation $\\mathcal{A} \\models \\varphi[s]$ denotes that the structure $\\mathcal{A}$ satisfies the formula $\\varphi$ under the assignment $s$. The formula $\\varphi(x,y)$ is true for an assignment $s$ if the relation it defines holds for the elements $s(x)$ and $s(y)$. Since the relation may hold for some pairs of elements from $A$ and not for others, the truth value of $\\varphi(x,y)$ can change under different assignments for its free variables $x$ and $y$.\n\n### Part 2: Evaluation of Truth Values\n\nWe evaluate the truth of $\\varphi(x,y)$ in $\\mathcal{A}$ for two given assignments, $s_1$ and $s_2$.\n\n**For assignment $s_1$:**\nThe assignment is $s_1(x) = 5$ and $s_1(y) = 1$. We need to determine if $\\mathcal{A} \\models \\varphi[s_1]$. According to the semantics of the existential quantifier, this is true if and only if there exists an element $c \\in A$ such that the formula inside the quantifier is true when $z$ is assigned the value $c$. That is, we must find a $c \\in \\{0,1,2,3,4,5\\}$ that satisfies both conditions:\n$1.$ $s_1(x) = s_1(y) +^{\\mathcal{A}} c$\n$2.$ $c \\in E^{\\mathcal{A}}$\n\nSubstituting the values from $s_1$ and the interpretations from $\\mathcal{A}$:\n$1.$ $5 = (1 + c) \\bmod 6$\n$2.$ $c \\in \\{0,2,4\\}$\n\nFrom the first equation, we solve for $c$:\n$5 - 1 = c \\bmod 6$\n$4 = c \\bmod 6$\nSince $c \\in A$, the only solution is $c=4$.\nNow we check if this value for $c$ satisfies the second condition. The set $E^{\\mathcal{A}}$ is $\\{0,2,4\\}$. Since $4 \\in \\{0,2,4\\}$, a suitable element $c=4$ exists. Therefore, the formula $\\varphi$ is true under the assignment $s_1$.\n\n**For assignment $s_2$:**\nThe assignment is $s_2(x) = 4$ and $s_2(y) = 3$. We check if $\\mathcal{A} \\models \\varphi[s_2]$. We look for a $c \\in A$ such that:\n$1.$ $s_2(x) = s_2(y) +^{\\mathcal{A}} c$\n$2.$ $c \\in E^{\\mathcal{A}}$\n\nSubstituting the values from $s_2$:\n$1.$ $4 = (3 + c) \\bmod 6$\n$2.$ $c \\in \\{0,2,4\\}$\n\nFrom the first equation, we solve for $c$:\n$4 - 3 = c \\bmod 6$\n$1 = c \\bmod 6$\nThe only solution in $A$ is $c=1$.\nNow we check if this value for $c$ satisfies the second condition. The set $E^{\\mathcal{A}}$ is $\\{0,2,4\\}$. Since $1 \\notin \\{0,2,4\\}$, the value $c=1$ does not satisfy the second condition. As $c=1$ is the only value satisfying the equality, there is no element $c \\in A$ that satisfies both conditions simultaneously. Therefore, the formula $\\varphi$ is false under the assignment $s_2$.\n\n### Part 3: Counting Satisfying Pairs\n\nWe must find the total number of ordered pairs $(a,b) \\in A \\times A$ for which the formula $\\varphi$ is true under an assignment $s$ with $s(x)=a$ and $s(y)=b$.\nThe condition for a pair $(a,b)$ to satisfy $\\varphi$ is:\n$\\exists z \\in A \\big( a = (b+z) \\bmod 6 \\wedge z \\in E^{\\mathcal{A}} \\big)$\n\nThis is equivalent to saying that there exists a $z \\in \\{0,2,4\\}$ such that $a = (b+z) \\bmod 6$.\nThis equation can be rewritten in terms of modular arithmetic as $a - b \\equiv z \\pmod{6}$.\nSo, a pair $(a,b)$ satisfies the formula if and only if the value $(a-b) \\bmod 6$ is one of the elements in $E^{\\mathcal{A}} = \\{0,2,4\\}$.\n\nLet $d = (a-b) \\bmod 6$. We need to count the number of pairs $(a,b)$ where $a, b \\in \\{0,1,2,3,4,5\\}$ such that $d \\in \\{0,2,4\\}$.\nWe can analyze this by considering the number of pairs $(a,b)$ that produce each required value of $d$.\nFor any fixed value $d \\in \\{0,1,2,3,4,5\\}$, the equation $a = (b+d) \\bmod 6$ establishes a one-to-one correspondence between $a$ and $b$. For each of the $6$ possible choices for $b$, there is a unique value for $a$. Thus, for any given $d$, there are exactly $6$ pairs $(a,b)$ such that $(a-b) \\bmod 6 = d$.\n\nWe are interested in the cases where $d$ is $0$, $2$, or $4$.\n-   Case $d=0$: There are $6$ pairs $(a,b)$ such that $(a-b) \\bmod 6 = 0$. These are the pairs where $a=b$: $(0,0), (1,1), (2,2), (3,3), (4,4), (5,5)$.\n-   Case $d=2$: There are $6$ pairs $(a,b)$ such that $(a-b) \\bmod 6 = 2$. These are $(2,0), (3,1), (4,2), (5,3), (0,4), (1,5)$.\n-   Case $d=4$: There are $6$ pairs $(a,b)$ such that $(a-b) \\bmod 6 = 4$. These are $(4,0), (5,1), (0,2), (1,3), (2,4), (3,5)$.\n\nThe total number of satisfying pairs is the sum of the counts for these three disjoint cases.\nTotal count $= (\\text{number of pairs for } d=0) + (\\text{number of pairs for } d=2) + (\\text{number of pairs for } d=4)$\nTotal count $= 6 + 6 + 6 = 18$.\n\nThere are $18$ ordered pairs $(a,b)$ in $A \\times A$ that make the formula $\\varphi(x,y)$ true.", "answer": "$$\n\\boxed{18}\n$$", "id": "3048953"}, {"introduction": "Beyond evaluating formulas, a key skill in logic is transforming them into different, yet equivalent, forms. This is essential for simplifying complex statements and for many applications in automated reasoning. This exercise will guide you through the process of converting a formula into Negation Normal Form (NNF) by systematically applying the quantifier-negation equivalences and De Morgan’s laws, reinforcing your mastery of these fundamental rules [@problem_id:3048945].", "problem": "In classical first-order logic, an atomic formula is a predicate symbol applied to terms, and negation normal form (NNF) is any formula in which every occurrence of negation is applied directly to an atomic formula. Consider the formula $\\neg \\forall x\\,\\bigl(\\varphi(x) \\lor \\exists y\\,\\psi(x,y)\\bigr)$, where $\\varphi$ and $\\psi$ are predicate symbols and $x,y$ are variables. Using only equivalence laws that follow from the core semantics of first-order logic—specifically, the quantifier-negation equivalences and De Morgan’s laws for propositional connectives—transform this formula into an equivalent formula in which every negation is directly in front of an atomic formula. Then, in your resulting formula, let $N$ be the total number of occurrences of the negation symbol $\\neg$, and let $Q$ be the total number of occurrences of quantifier symbols ($\\forall$ or $\\exists$). Compute the single number $S = 3N + 2Q$. Provide the value of $S$ as an exact integer.", "solution": "The problem requires the transformation of a given first-order logic formula into its equivalent negation normal form (NNF) and the subsequent calculation of a value $S$ based on the number of negation and quantifier symbols in the resulting formula.\n\nThe initial formula is:\n$$ \\neg \\forall x\\,\\bigl(\\varphi(x) \\lor \\exists y\\,\\psi(x,y)\\bigr) $$\nA formula is in NNF if all negation symbols $\\neg$ are applied directly to atomic formulas. We will use standard logical equivalences to push the initial negation symbol inwards.\n\nStep 1: Apply the quantifier-negation equivalence.\nThe outermost operator is a negation applied to a universally quantified formula. We use the equivalence $\\neg \\forall z\\,P(z) \\equiv \\exists z\\,\\neg P(z)$. In our case, the variable $z$ is $x$ and the predicate $P(x)$ is the subformula $\\bigl(\\varphi(x) \\lor \\exists y\\,\\psi(x,y)\\bigr)$. Applying this equivalence transforms the formula into:\n$$ \\exists x\\,\\neg\\bigl(\\varphi(x) \\lor \\exists y\\,\\psi(x,y)\\bigr) $$\n\nStep 2: Apply De Morgan's Law for propositional connectives.\nThe negation symbol is now applied to a disjunction ($\\lor$). We use De Morgan's law, which states $\\neg(A \\lor B) \\equiv (\\neg A \\land \\neg B)$. Here, the term $A$ corresponds to the atomic formula $\\varphi(x)$ and the term $B$ corresponds to the subformula $\\exists y\\,\\psi(x,y)$. Applying this law yields:\n$$ \\exists x\\,\\bigl(\\neg\\varphi(x) \\land \\neg(\\exists y\\,\\psi(x,y))\\bigr) $$\nThe first negation $\\neg\\varphi(x)$ is now correctly positioned in front of an atomic formula. However, the second negation $\\neg(\\exists y\\,\\psi(x,y))$ is not, so a further step is required.\n\nStep 3: Apply the quantifier-negation equivalence again.\nThe remaining subformula that is not in NNF is $\\neg(\\exists y\\,\\psi(x,y))$. We use the second quantifier-negation equivalence, $\\neg \\exists z\\,P(z) \\equiv \\forall z\\,\\neg P(z)$. In this case, the variable $z$ is $y$ and the predicate $P(y)$ is $\\psi(x,y)$. Applying this equivalence transforms the subformula into $\\forall y\\,\\neg\\psi(x,y)$. Substituting this result back into the main formula gives us the final NNF formula:\n$$ \\exists x\\,\\bigl(\\neg\\varphi(x) \\land \\forall y\\,\\neg\\psi(x,y)\\bigr) $$\nThis formula is now in negation normal form, as both occurrences of the negation symbol $\\neg$ are immediately followed by an atomic formula ($\\varphi(x)$ and $\\psi(x,y)$).\n\nNext, we must count the number of negation symbols ($N$) and quantifier symbols ($Q$) in this final NNF formula.\nThe formula is $\\exists x\\,\\bigl(\\neg\\varphi(x) \\land \\forall y\\,\\neg\\psi(x,y)\\bigr)$.\n\n-   The number of negation symbols, $N$, is the count of occurrences of $\\neg$. We have $\\neg\\varphi(x)$ and $\\neg\\psi(x,y)$. Therefore, $N = 2$.\n-   The number of quantifier symbols, $Q$, is the count of occurrences of $\\forall$ and $\\exists$. We have $\\exists x$ and $\\forall y$. Therefore, $Q = 2$.\n\nFinally, we compute the value of $S$ using the given expression $S = 3N + 2Q$.\nSubstituting the values $N=2$ and $Q=2$ into the expression:\n$$ S = 3(2) + 2(2) $$\n$$ S = 6 + 4 $$\n$$ S = 10 $$\nThe value of $S$ is an exact integer, $10$.", "answer": "$$\n\\boxed{10}\n$$", "id": "3048945"}, {"introduction": "Substitution is one of the most fundamental and powerful operations in logic, but it comes with a critical pitfall known as \"variable capture.\" This advanced exercise challenges you to navigate this subtlety by first defining capture-avoiding substitution and then applying it to a classic case where a naive approach would fail. Mastering this technique is crucial for understanding the mechanics of formal proofs and the foundations of programming language semantics [@problem_id:3048920].", "problem": "Let the ambient logic be standard first-order logic (FOL) over a signature that includes variables, function symbols, and predicate symbols. Work with a unary function symbol $f$ and binary predicate symbols $P$ and $Q$. Recall the syntactic notions of free and bound variables in FOL.\n\n1) Define the capture-avoiding substitution of a term $t$ for a variable $x$ in a formula $\\varphi$, written $\\varphi[t/x]$, by structural induction on terms and formulas. Your definition must include:\n- The base cases for variables and for function applications on terms.\n- The atomic cases for predicate applications on formulas.\n- The inductive cases for Boolean connectives.\n- The quantifier cases, specifying precisely when $\\alpha$-conversion (renaming of bound variables) is required to avoid capture of free variables of $t$. In particular, state the condition under which, for a quantifier $\\forall v$ or $\\exists v$, one must first replace $v$ by a fresh variable $w$ before proceeding with the substitution.\n\n2) Using your inductive definition, perform the capture-avoiding substitution of the term $f(y)$ for the variable $x$ in the formula\n$$\n\\varphi \\;=\\; \\exists x\\,P(x,y)\\;\\lor\\;\\forall y\\,Q(x,y).\n$$\nCarry out any necessary $\\alpha$-conversion steps explicitly to avoid variable capture, and present the resulting formula in a standard $\\alpha$-equivalent form using a fresh variable that does not occur in the term $f(y)$ or as a free variable of any subformula to which the substitution is applied.\n\n3) Finally, compute the total number of free occurrences of the variable $y$ in the resulting formula from part (2). Report this number as your final answer. No rounding is required.", "solution": "The problem is well-posed, scientifically grounded in mathematical logic, and all necessary components for its solution are provided. The problem is therefore deemed valid.\n\nThe solution is presented in three parts, corresponding to the three tasks in the problem description.\n\n### 1) Definition of Capture-Avoiding Substitution\n\nThe capture-avoiding substitution of a term $t$ for a variable $x$ in a formula $\\varphi$, denoted $\\varphi[t/x]$, is defined by structural induction. The definition relies on a preliminary definition of substitution on terms. Let $\\text{FreeVars}(s)$ denote the set of free variables in any expression $s$ (term or formula).\n\n**Substitution on Terms**\n\nLet $s$ be a term. The substitution of a term $t$ for a variable $x$ in $s$, denoted $s[t/x]$, is defined as follows:\n- If $s$ is a variable $z$:\n  $$\n  z[t/x] = \\begin{cases} t  \\text{if } z \\text{ is identical to } x \\\\ z  \\text{if } z \\text{ is different from } x \\end{cases}\n  $$\n- If $s$ is a function application $g(s_1, \\dots, s_k)$:\n  $$\n  g(s_1, \\dots, s_k)[t/x] = g(s_1[t/x], \\dots, s_k[t/x])\n  $$\n\n**Substitution on Formulas**\n\nLet $\\varphi$ be a formula. The substitution $\\varphi[t/x]$ is defined by induction on the structure of $\\varphi$:\n- **Atomic Case**: If $\\varphi$ is an atomic formula of the form $R(s_1, \\dots, s_k)$, where $R$ is a predicate symbol:\n  $$\n  R(s_1, \\dots, s_k)[t/x] = R(s_1[t/x], \\dots, s_k[t/x])\n  $$\n- **Boolean Connectives**:\n  - If $\\varphi = \\neg \\psi$:\n    $$\n    (\\neg \\psi)[t/x] = \\neg (\\psi[t/x])\n    $$\n  - If $\\varphi = \\psi_1 \\circ \\psi_2$ for a binary connective $\\circ \\in \\{\\land, \\lor, \\rightarrow, \\leftrightarrow\\}$:\n    $$\n    (\\psi_1 \\circ \\psi_2)[t/x] = (\\psi_1[t/x]) \\circ (\\psi_2[t/x])\n    $$\n- **Quantifier Cases**: Let $\\mathcal{Q}$ be a quantifier, either $\\forall$ or $\\exists$. Consider $\\varphi = \\mathcal{Q} v \\, \\psi$.\n  - **Case 1**: The quantified variable $v$ is identical to $x$. The free occurrences of $x$ in $\\psi$ are bound by the quantifier $\\mathcal{Q} x$. The substitution has no effect on the formula.\n    $$\n    (\\mathcal{Q} x \\, \\psi)[t/x] = \\mathcal{Q} x \\, \\psi\n    $$\n  - **Case 2**: The quantified variable $v$ is different from $x$.\n    - **Subcase 2a (No Capture)**: The quantified variable $v$ is not a free variable in the term $t$ (i.e., $v \\notin \\text{FreeVars}(t)$). In this case, no variable in $t$ will be \"captured\" by the quantifier $\\mathcal{Q} v$. The substitution can proceed into the subformula $\\psi$.\n      $$\n      (\\mathcal{Q} v \\, \\psi)[t/x] = \\mathcal{Q} v \\, (\\psi[t/x])\n      $$\n    - **Subcase 2b (Capture Avoidance)**: The quantified variable $v$ is a free variable in the term $t$ (i.e., $v \\in \\text{FreeVars}(t)$). Direct substitution would result in variable capture, altering the meaning of the formula. To avoid this, an $\\alpha$-conversion (renaming of the bound variable) is required. A fresh variable $w$ is chosen such that $w \\notin \\text{FreeVars}(t) \\cup \\text{FreeVars}(\\psi)$. The formula $\\mathcal{Q} v \\, \\psi$ is first replaced by the logically equivalent formula $\\mathcal{Q} w \\, (\\psi[w/v])$. The substitution for $x$ is then performed on this new formula.\n      $$\n      (\\mathcal{Q} v \\, \\psi)[t/x] = \\mathcal{Q} w \\, ((\\psi[w/v])[t/x])\n      $$\n\n### 2) Performing the Substitution\n\nWe are asked to compute $\\varphi[t/x]$ for:\n- Term $t = f(y)$\n- Variable $x$\n- Formula $\\varphi = \\exists x\\,P(x,y) \\lor \\forall y\\,Q(x,y)$\n\nFirst, we apply the rule for disjunction ($\\lor$):\n$$\n\\varphi[f(y)/x] = (\\exists x\\,P(x,y))[f(y)/x] \\;\\lor\\; (\\forall y\\,Q(x,y))[f(y)/x]\n$$\nWe evaluate each side of the disjunction separately.\n\n**Left-hand side**: $(\\exists x\\,P(x,y))[f(y)/x]$\n- The quantifier is $\\exists x$.\n- The quantified variable is $x$, which is identical to the variable being substituted for.\n- This falls under **Case 1** of the quantifier rule. The quantifier $\\exists x$ binds the variable $x$ within its scope, so the substitution for free occurrences of $x$ does not affect this subformula.\n- Therefore, $(\\exists x\\,P(x,y))[f(y)/x] = \\exists x\\,P(x,y)$.\n\n**Right-hand side**: $(\\forall y\\,Q(x,y))[f(y)/x]$\n- The quantifier is $\\forall y$.\n- The quantified variable is $y$, which is different from $x$. This is **Case 2**.\n- The term being substituted is $t = f(y)$. The set of free variables in this term is $\\text{FreeVars}(f(y)) = \\{y\\}$.\n- We must check if the quantified variable $y$ is in $\\text{FreeVars}(t)$. Indeed, $y \\in \\{y\\}$.\n- This corresponds to **Subcase 2b (Capture Avoidance)**. A direct substitution would result in $\\forall y\\,Q(f(y),y)$, where the $y$ from the term $f(y)$ would be incorrectly bound (captured) by the quantifier $\\forall y$.\n- To prevent this, we must perform an $\\alpha$-conversion on $\\forall y\\,Q(x,y)$. We choose a fresh variable, let us call it $w$, such that $w$ is not free in $f(y)$ and not free in $Q(x,y)$. Since $\\text{FreeVars}(f(y))=\\{y\\}$ and $\\text{FreeVars}(Q(x,y))=\\{x,y\\}$, we can choose any $w$ such that $w \\ne x$ and $w \\ne y$.\n- We first rename $y$ to $w$ in $\\forall y\\,Q(x,y)$ to get the equivalent formula $\\forall w\\,(Q(x,y)[w/y]) = \\forall w\\,Q(x,w)$.\n- Now we perform the substitution on this new formula:\n  $$ (\\forall w\\,Q(x,w))[f(y)/x] $$\n- The quantified variable is now $w$. We have $w \\ne x$ and $w \\notin \\text{FreeVars}(f(y))$. This now falls under **Subcase 2a (No Capture)**.\n- We can substitute into the body of the quantifier:\n  $$ \\forall w \\, (Q(x,w)[f(y)/x]) = \\forall w \\, Q(x[f(y)/x], w[f(y)/x]) = \\forall w \\, Q(f(y),w) $$\n- So, $(\\forall y\\,Q(x,y))[f(y)/x] = \\forall w\\,Q(f(y),w)$.\n\n**Combining both parts**, the final formula is:\n$$\n\\exists x\\,P(x,y) \\;\\lor\\; \\forall w\\,Q(f(y),w)\n$$\nwhere $w$ is a fresh variable distinct from $x$ and $y$.\n\n### 3) Counting Free Occurrences of y\n\nThe resulting formula from part (2) is $\\psi' = \\exists x\\,P(x,y) \\lor \\forall w\\,Q(f(y),w)$. We must count the total number of free occurrences of the variable $y$ in this formula.\n\nAn occurrence of a variable is free if it is not within the scope of a quantifier that binds that variable.\n\n- **In the subformula $\\exists x\\,P(x,y)$**:\n  - There is one occurrence of the variable $y$.\n  - The only quantifier is $\\exists x$, which binds $x$, not $y$.\n  - Therefore, this occurrence of $y$ is free. This gives $1$ free occurrence.\n\n- **In the subformula $\\forall w\\,Q(f(y),w)$**:\n  - There is one occurrence of the variable $y$, inside the term $f(y)$.\n  - The quantifier is $\\forall w$, which binds $w$, not $y$.\n  - Therefore, this occurrence of $y$ is free. This gives $1$ free occurrence.\n\nThe total number of free occurrences of $y$ in the entire formula is the sum of the free occurrences in each part.\nTotal free occurrences of $y = 1 + 1 = 2$.", "answer": "$$\n\\boxed{2}\n$$", "id": "3048920"}]}