{"hands_on_practices": [{"introduction": "Mastering mathematical logic begins with a firm grasp of how variables are managed within a formula. The first step is learning to distinguish between 'free' variables, which act as placeholders for specific objects, and 'bound' variables, which are tied to a quantifier like $\\forall$ or $\\exists$. This exercise ([@problem_id:3051488]) provides a foundational practice in applying the formal, inductive definitions of scope and free variables to parse a formula and methodically determine which variables are which.", "problem": "Consider the first-order logic (FOL) formula\n$$\\varphi \\;=\\; \\big(\\forall x\\, (P(x) \\land Q(y))\\big) \\lor \\big(\\exists x\\, R(x,z)\\big).$$\nAll predicate symbols are as displayed, with $P$ and $Q$ unary and $R$ binary, and the only variables that appear are $x$, $y$, and $z$. Using only the standard foundational definitions of scope, bound occurrence, free occurrence, and the inductive definition of the set of free variables $FV(\\,\\cdot\\,)$ for first-order formulas, do the following:\n1. Identify which occurrences of $x$ in $\\varphi$ are bound and which, if any, are free.\n2. Compute the set $FV(\\varphi)$.\n3. To produce a single numeric final answer, use the following encoding of a finite set of variables $S \\subseteq \\{x,y,z\\}$:\n   - Assign weights $w(x)=2$, $w(y)=3$, $w(z)=5$.\n   - Define the encoding $E(S)=\\prod_{v\\in S} w(v)$, and by convention $E(\\varnothing)=1$.\nReport as your final answer the integer $E\\big(FV(\\varphi)\\big)$. No rounding is required, and no units are involved. Your reasoning must start from the core definitions of scope and binding in FOL and the inductive definition of $FV(\\,\\cdot\\,)$, without appealing to any shortcut rules not derivable from these definitions.", "solution": "The problem requires a rigorous analysis of the first-order logic formula $\\varphi \\;=\\; \\big(\\forall x\\, (P(x) \\land Q(y))\\big) \\lor \\big(\\exists x\\, R(x,z)\\big)$ to determine its set of free variables and then compute a corresponding numerical encoding. The analysis must be founded on the formal definitions of scope, binding, and the inductive definition for the set of free variables, $FV(\\cdot)$.\n\nFirst, let us state the foundational definitions:\n1.  **Scope**: The scope of a quantifier, such as $\\forall v$ or $\\exists v$, in a formula of the form $\\forall v\\, \\psi$ or $\\exists v\\, \\psi$ is the subformula $\\psi$.\n2.  **Bound and Free Occurrences**: An occurrence of a variable $v$ in a formula $\\phi$ is *bound* if it appears within the scope of a quantifier $\\forall v$ or $\\exists v$. An occurrence is *free* if it is not bound. The occurrences of $v$ in $\\forall v$ and $\\exists v$ themselves are binding occurrences, distinct from bound or free occurrences within the scope.\n3.  **Free Variables $FV(\\phi)$**: The set of free variables of a formula $\\phi$ is defined inductively:\n    -   If $\\phi$ is an atomic formula $A(t_1, \\dots, t_n)$, then $FV(\\phi)$ is the set of all variables occurring in the terms $t_1, \\dots, t_n$.\n    -   $FV(\\neg\\psi) = FV(\\psi)$.\n    -   $FV(\\psi_1 \\circ \\psi_2) = FV(\\psi_1) \\cup FV(\\psi_2)$ for any binary connective $\\circ \\in \\{\\land, \\lor, \\rightarrow, \\leftrightarrow\\}$.\n    -   $FV(\\forall v\\, \\psi) = FV(\\psi) \\setminus \\{v\\}$.\n    -   $FV(\\exists v\\, \\psi) = FV(\\psi) \\setminus \\{v\\}$.\n\nThe given formula is $\\varphi \\;=\\; \\varphi_1 \\lor \\varphi_2$, where $\\varphi_1 = \\forall x\\, (P(x) \\land Q(y))$ and $\\varphi_2 = \\exists x\\, R(x,z)$. We will analyze each part as required.\n\n**Part 1: Identify bound and free occurrences of $x$.**\n\nThere are two occurrences of the variable $x$ as an argument to a predicate in the formula $\\varphi$: one in $P(x)$ and one in $R(x,z)$.\n\n-   Consider the first occurrence of $x$ in the subformula $\\varphi_1 = \\forall x\\, (P(x) \\land Q(y))$. The quantifier is $\\forall x$, and its scope is the subformula $\\psi_1 = (P(x) \\land Q(y))$. The occurrence of $x$ in $P(x)$ lies within this scope. Therefore, by definition, this occurrence of $x$ is a **bound occurrence**.\n\n-   Consider the second occurrence of $x$ in the subformula $\\varphi_2 = \\exists x\\, R(x,z)$. The quantifier is $\\exists x$, and its scope is the subformula $\\psi_2 = R(x,z)$. The occurrence of $x$ in $R(x,z)$ lies within this scope. Therefore, this occurrence of $x$ is also a **bound occurrence**.\n\nConsequently, both occurrences of the variable $x$ in $\\varphi$ are bound. There are no free occurrences of $x$ in $\\varphi$.\n\n**Part 2: Compute the set $FV(\\varphi)$.**\n\nWe apply the inductive definition of $FV(\\cdot)$ to the formula $\\varphi$.\n\nFirst, since $\\varphi$ is a disjunction, we have:\n$$FV(\\varphi) \\;=\\; FV\\big(\\big(\\forall x\\, (P(x) \\land Q(y))\\big) \\lor \\big(\\exists x\\, R(x,z)\\big)\\big) \\;=\\; FV\\big(\\forall x\\, (P(x) \\land Q(y))\\big) \\cup FV\\big(\\exists x\\, R(x,z)\\big)$$\n\nWe compute the set of free variables for each subformula separately.\n\nFor the first subformula, $\\varphi_1 = \\forall x\\, (P(x) \\land Q(y))$:\nAccording to the rule for universal quantification:\n$$FV(\\forall x\\, (P(x) \\land Q(y))) \\;=\\; FV(P(x) \\land Q(y)) \\setminus \\{x\\}$$\nNext, we find the free variables of the conjunction $P(x) \\land Q(y)$:\n$$FV(P(x) \\land Q(y)) \\;=\\; FV(P(x)) \\cup FV(Q(y))$$\nFor the atomic formulas $P(x)$ and $Q(y)$, the free variables are simply the variables they contain:\n$$FV(P(x)) = \\{x\\}$$\n$$FV(Q(y)) = \\{y\\}$$\nSubstituting back, we get:\n$$FV(P(x) \\land Q(y)) = \\{x\\} \\cup \\{y\\} = \\{x, y\\}$$\nFinally, we complete the calculation for $\\varphi_1$:\n$$FV(\\varphi_1) = FV(\\forall x\\, (P(x) \\land Q(y))) = \\{x, y\\} \\setminus \\{x\\} = \\{y\\}$$\n\nFor the second subformula, $\\varphi_2 = \\exists x\\, R(x,z)$:\nAccording to the rule for existential quantification:\n$$FV(\\exists x\\, R(x,z)) \\;=\\; FV(R(x,z)) \\setminus \\{x\\}$$\nFor the atomic formula $R(x,z)$, the free variables are the variables it contains:\n$$FV(R(x,z)) = \\{x, z\\}$$\nSubstituting back, we get:\n$$FV(\\varphi_2) = FV(\\exists x\\, R(x,z)) = \\{x, z\\} \\setminus \\{x\\} = \\{z\\}$$\n\nNow, we combine the results to find $FV(\\varphi)$:\n$$FV(\\varphi) = FV(\\varphi_1) \\cup FV(\\varphi_2) = \\{y\\} \\cup \\{z\\} = \\{y, z\\}$$\nThe set of free variables in $\\varphi$ is $\\{y, z\\}$.\n\n**Part 3: Compute the encoding $E\\big(FV(\\varphi)\\big)$.**\n\nThe problem defines an encoding for a set of variables $S \\subseteq \\{x,y,z\\}$. The weights assigned to the variables are $w(x)=2$, $w(y)=3$, and $w(z)=5$. The encoding function is $E(S)=\\prod_{v\\in S} w(v)$.\n\nWe are asked to compute $E\\big(FV(\\varphi)\\big)$. From Part 2, we found that $FV(\\varphi) = \\{y, z\\}$.\nTherefore, we must compute $E(\\{y, z\\})$.\nUsing the definition of the encoding function:\n$$E(\\{y, z\\}) = \\prod_{v \\in \\{y, z\\}} w(v) = w(y) \\cdot w(z)$$\nSubstituting the given weights:\n$$E(\\{y, z\\}) = 3 \\cdot 5 = 15$$\nThe final numeric answer is $15$.", "answer": "$$\\boxed{15}$$", "id": "3051488"}, {"introduction": "Formulas can become more complex when quantifiers are nested, particularly when the same variable name is reused. This creates a situation known as 'shadowing,' where an inner quantifier's scope is contained within an outer one's. The 'innermost binder' rule governs these cases, and this practice ([@problem_id:3051484]) challenges you to apply it precisely by delineating the exact scope of each quantifier and determining which one binds each variable occurrence.", "problem": "Consider the first-order formula in First-Order Logic (FOL)\n$$\\forall x \\big(P(x) \\to (\\exists x\\, Q(x) \\land R(x))\\big).$$\nWork within the standard syntactic conventions of FOL, where the scope of a quantifier is the formula that immediately follows it, and parentheses determine grouping of connectives and can extend or limit the scope accordingly. Using the core definitions of free and bound variables and the notion of scope as induced by quantifier binding, delineate precisely the scopes of the quantifiers in the given formula and identify, for each occurrence of $x$, which quantifier (if any) binds it.\n\nLet $n_{\\forall}$ denote the number of occurrences of $x$ that are bound by the outer quantifier $\\forall x$, and let $n_{\\exists}$ denote the number of occurrences of $x$ that are bound by the inner quantifier $\\exists x$. Compute $n_{\\forall}$ and $n_{\\exists}$.\n\nProvide your final answer as the row matrix $(n_{\\forall}\\; n_{\\exists})$. No rounding is needed.", "solution": "The problem requires us to analyze the binding of variables in the first-order logic formula\n$$ \\forall x \\big(P(x) \\to (\\exists x\\, Q(x) \\land R(x))\\big). $$\nThis analysis is based on the standard definitions of quantifier scope and variable binding in First-Order Logic (FOL).\n\nFirst, we must meticulously delineate the scope of each quantifier. The scope of a quantifier is the part of the formula over which it has authority. A variable occurrence is said to be bound if it falls within the scope of a quantifier that quantifies that variable. If a variable is not bound, it is free.\n\nThe given formula has two quantifiers for the same variable name, $x$. This creates a situation of nested scopes. The governing rule in such cases is that an occurrence of a variable is bound by the innermost quantifier whose scope contains that occurrence. This is often referred to as variable shadowing or the \"hole in scope\" rule.\n\nLet's analyze the formula structure, which can be explicitly parenthesized according to standard operator precedence (where quantifiers bind more tightly than logical connectives) as:\n$$ \\forall x \\Big(P(x) \\to \\big( (\\exists x\\, Q(x)) \\land R(x) \\big)\\Big) $$\n\n1.  **The Outer Quantifier, $\\forall x$**:\n    The scope of this universal quantifier is the entire formula that immediately follows it. Let's denote this scope as $S_{\\forall}$.\n    $$ S_{\\forall} = \\Big(P(x) \\to \\big( (\\exists x\\, Q(x)) \\land R(x) \\big)\\Big) $$\n    Every occurrence of $x$ within this scope $S_{\\forall}$ is a candidate to be bound by this $\\forall x$.\n\n2.  **The Inner Quantifier, $\\exists x$**:\n    The scope of this existential quantifier is the formula that immediately follows it. According to standard syntactic rules, the scope of $\\exists x$ in the subformula $(\\exists x\\, Q(x)) \\land R(x)$ is only $Q(x)$. The conjunction $\\land$ is outside the scope of this quantifier. Let's denote this scope as $S_{\\exists}$.\n    $$ S_{\\exists} = Q(x) $$\n    The scope $S_{\\exists}$ is a sub-formula within the larger scope $S_{\\forall}$. This means that $S_{\\exists}$ acts as a \"hole\" in the scope $S_{\\forall}$ for the variable $x$. Any occurrence of $x$ inside this hole, $S_{\\exists}$, will be bound by the inner quantifier $\\exists x$, not the outer one $\\forall x$.\n\nNow, we can identify which quantifier binds each of the three occurrences of the variable $x$ in the formula:\n\n*   **Occurrence 1: $x$ in $P(x)$**\n    This occurrence of $x$ is within the scope $S_{\\forall}$ of the universal quantifier $\\forall x$.\n    It is *not* within the scope $S_{\\exists}$ of the existential quantifier $\\exists x$.\n    Therefore, this occurrence of $x$ is bound by the outer quantifier, $\\forall x$.\n\n*   **Occurrence 2: $x$ in $Q(x)$**\n    This occurrence of $x$ is within the scope $S_{\\forall}$ of $\\forall x$.\n    It is also within the scope $S_{\\exists}$ of $\\exists x$.\n    According to the rule of the innermost binder, this occurrence of $x$ is bound by the inner quantifier, $\\exists x$.\n\n*   **Occurrence 3: $x$ in $R(x)$**\n    This occurrence of $x$ is within the scope $S_{\\forall}$ of $\\forall x$.\n    It is *not* within the scope $S_{\\exists}$ of $\\exists x$, as the scope of $\\exists x$ extends only to $Q(x)$.\n    Therefore, this occurrence of $x$ is bound by the outer quantifier, $\\forall x$.\n\nFinally, we compute the requested values, $n_{\\forall}$ and $n_{\\exists}$.\n\n*   $n_{\\forall}$ is the number of occurrences of $x$ bound by the outer quantifier $\\forall x$. Based on our analysis, these are the occurrences in $P(x)$ and $R(x)$. Thus, $n_{\\forall} = 2$.\n*   $n_{\\exists}$ is the number of occurrences of $x$ bound by the inner quantifier $\\exists x$. This is the occurrence in $Q(x)$. Thus, $n_{\\exists} = 1$.\n\nThe resulting pair is $(n_{\\forall}, n_{\\exists}) = (2, 1)$.", "answer": "$$\\boxed{\\begin{pmatrix} 2  1 \\end{pmatrix}}$$", "id": "3051484"}, {"introduction": "The concepts of scope and binding are not merely for classification; they have profound implications for formal operations like substitution. A crucial rule in logic is that substitution, the act of replacing a variable with a term, only applies to *free* occurrences of that variable. This exercise ([@problem_id:3051441]) provides a clear demonstration of this principle, illustrating how a quantifier effectively 'protects' the variables within its scope from being altered by an external substitution.", "problem": "Work within first-order logic (FOL) over a signature with a unary function symbol $h$, binary relation symbols $R$ and $S$, and variables drawn from $\\{x,y,z,w,\\dots\\}$. Consider the formula\n$$\\varphi := \\forall z\\bigl(\\exists x\\, R(x,z) \\land S(z,y)\\bigr)$$\nand the term $h(w)$. Using capture-avoiding substitution, compute the result of substituting the term $h(w)$ for the variable $z$ in $\\varphi$, denoted $\\varphi[h(w)/z]$. Provide a justification that makes explicit how the quantifier that binds $z$ constrains the scope of the substitution and whether any replacement can occur.\n\nFinally, let $N$ be the total number of free variable occurrences in the resulting formula $\\varphi[h(w)/z]$ (counting multiple occurrences if a variable appears more than once free). Determine $N$ and report it as an integer. No rounding is required and no units are needed.", "solution": "The problem asks for two results: the outcome of a capture-avoiding substitution and the number of free variable occurrences in the resulting formula.\n\nFirst, we must compute the substitution $\\varphi[h(w)/z]$, where the formula $\\varphi$ is given by\n$$ \\varphi := \\forall z\\bigl(\\exists x\\, R(x,z) \\land S(z,y)\\bigr) $$\nand the term to be substituted is $h(w)$.\n\nThe definition of substitution, $\\psi[t/v]$, specifies the replacement of all **free** occurrences of a variable $v$ in a formula $\\psi$ with a term $t$. A variable occurrence is free if it is not within the scope of a quantifier that binds it. Conversely, a variable occurrence is bound if it is within the scope of a quantifier ($\\forall$ or $\\exists$) that uses the same variable name.\n\nLet's analyze the formula $\\varphi$. The variable targeted for substitution is $z$. The formula begins with the universal quantifier $\\forall z$. The scope of this quantifier is the entire subformula that follows it:\n$$ \\exists x\\, R(x,z) \\land S(z,y) $$\nWithin this scope, the variable $z$ appears twice: once in the atomic formula $R(x,z)$ and once in the atomic formula $S(z,y)$. Both of these occurrences fall within the scope of the quantifier $\\forall z$. Therefore, both occurrences of $z$ in $\\varphi$ are **bound** variables.\n\nSince the substitution operation $\\varphi[h(w)/z]$ only affects the *free* occurrences of the variable $z$, and there are no free occurrences of $z$ in the formula $\\varphi$, the substitution has no effect. The formula remains unchanged.\n\nThus, the result of the substitution is the original formula itself:\n$$ \\varphi[h(w)/z] = \\forall z\\bigl(\\exists x\\, R(x,z) \\land S(z,y)\\bigr) $$\n\nThe justification turns on the fact that the variable $z$ is bound at the top level of the formula. The quantifier $\\forall z$ \"captures\" all instances of $z$ within its scope, making them unavailable for substitution.\n\nSecond, we must determine $N$, the total number of free variable occurrences in the resulting formula, which we have determined is simply $\\varphi$. Let's identify the set of free variables, $\\text{FV}(\\varphi)$, by analyzing each variable in the formula $\\varphi = \\forall z\\bigl(\\exists x\\, R(x,z) \\land S(z,y)\\bigr)$.\n\nThe variables present in the formula are $x$, $y$, and $z$.\n\\begin{enumerate}\n    \\item The variable $z$: As established, all occurrences of $z$ are bound by the quantifier $\\forall z$. So, $z \\notin \\text{FV}(\\varphi)$.\n    \\item The variable $x$: The variable $x$ appears once in the atomic formula $R(x,z)$. This occurrence is within the scope of the existential quantifier $\\exists x$. Therefore, the occurrence of $x$ is bound. So, $x \\notin \\text{FV}(\\varphi)$.\n    \\item The variable $y$: The variable $y$ appears once in the atomic formula $S(z,y)$. This occurrence is not within the scope of any quantifier $\\forall y$ or $\\exists y$. Therefore, this occurrence of $y$ is **free**. So, $y \\in \\text{FV}(\\varphi)$.\n\\end{enumerate}\n\nThe only free variable in the formula is $y$, and it appears exactly once. The problem asks for $N$, the total number of free variable occurrences. Since only one such occurrence exists (the variable $y$ in $S(z,y)$), the value of $N$ is $1$.", "answer": "$$\\boxed{1}$$", "id": "3051441"}]}