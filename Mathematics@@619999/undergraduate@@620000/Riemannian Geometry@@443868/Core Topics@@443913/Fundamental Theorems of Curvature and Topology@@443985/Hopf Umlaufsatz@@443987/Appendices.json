{"hands_on_practices": [{"introduction": "The Hopf Umlaufsatz connects a curve's geometry, measured by its total curvature, to its topology, captured by the rotation number. This first exercise provides a powerful way to build intuition by working from a constructive perspective: instead of analyzing a given curve, you will build one with a predetermined rotation number. By directly prescribing the behavior of the tangent vector, you will see how its winding number, an integer $k$, dictates that the total curvature must be exactly $2\\pi k$ [@problem_id:3050426].", "problem": "Let $\\mathbb{C}$ be identified with $\\mathbb{R}^{2}$ via $z=x+iy$. Fix an integer $k$ and let $\\rho:[0,2\\pi]\\to(0,\\infty)$ be a smooth function. Define a plane curve $z:[0,2\\pi]\\to\\mathbb{C}$ by prescribing its velocity\n$$\nz'(t)=\\rho(t)\\,\\exp(i k t)\n$$\nand choosing any initial point $z(0)\\in\\mathbb{C}$, so that\n$$\nz(t)=z(0)+\\int_{0}^{t}\\rho(\\tau)\\,\\exp(i k \\tau)\\,d\\tau.\n$$\nLet $s(t)$ denote the arc-length parameter measured from $t=0$, so $ds=|z'(t)|\\,dt=\\rho(t)\\,dt$. Using only the foundational definitions that the signed curvature $\\kappa$ of a regular plane curve satisfies $\\kappa=\\frac{d\\theta}{ds}$, where $\\theta(s)$ is the angle of the unit tangent with respect to a fixed axis, and that the total curvature over an interval is $\\int\\kappa\\,ds$, compute the total curvature of $z$ over $t\\in[0,2\\pi]$. Express your final answer in radians and as a single closed-form analytic expression in terms of $k$.", "solution": "The problem asks for the total curvature of a plane curve $z(t)$ for $t \\in [0, 2\\pi]$. The total curvature is defined as the integral of the signed curvature $\\kappa$ with respect to the arc-length parameter $s$.\n$$\n\\text{Total Curvature} = \\int_{C} \\kappa \\, ds\n$$\nThe signed curvature is given by the relation $\\kappa = \\frac{d\\theta}{ds}$, where $\\theta(s)$ is the angle of the unit tangent vector with respect to a fixed axis. The curve $C$ is traced as the parameter $t$ varies from $0$ to $2\\pi$. Let the arc length at the start be $s_0=s(0)$ and at the end be $s_f=s(2\\pi)$.\n\nBy the fundamental theorem of calculus, the total curvature is the total change in the angle $\\theta$:\n$$\n\\text{Total Curvature} = \\int_{s_0}^{s_f} \\frac{d\\theta}{ds} \\, ds = \\theta(s_f) - \\theta(s_0)\n$$\nThis is equivalent to finding the difference between the final tangent angle, $\\theta(t=2\\pi)$, and the initial tangent angle, $\\theta(t=0)$.\n\nTo determine the tangent angle, we first find the unit tangent vector. The velocity vector of the curve is given in complex form as:\n$$\nz'(t) = \\rho(t) \\exp(i k t)\n$$\nHere, $\\rho(t)$ is a smooth function with $\\rho(t) \\in (0, \\infty)$ for all $t \\in [0, 2\\pi]$, and $k$ is a fixed integer. The speed of the curve is the magnitude of the velocity vector:\n$$\n|z'(t)| = |\\rho(t) \\exp(i k t)| = |\\rho(t)| |\\exp(i k t)|\n$$\nSince $\\rho(t)$ is strictly positive, $|\\rho(t)| = \\rho(t)$. The magnitude of the complex exponential is always $1$, i.e., $|\\exp(i k t)| = \\sqrt{\\cos^2(kt) + \\sin^2(kt)} = 1$.\nTherefore, the speed is $|z'(t)| = \\rho(t)$. This is consistent with the given arc-length element $ds = |z'(t)| \\, dt = \\rho(t) \\, dt$. The condition $\\rho(t) > 0$ ensures the curve is regular (its speed is never zero).\n\nThe unit tangent vector, $U(t)$, is found by normalizing the velocity vector:\n$$\nU(t) = \\frac{z'(t)}{|z'(t)|} = \\frac{\\rho(t) \\exp(i k t)}{\\rho(t)} = \\exp(i k t)\n$$\nIdentifying the complex plane $\\mathbb{C}$ with $\\mathbb{R}^2$, the unit tangent vector is $U(t) = \\cos(k t) + i \\sin(k t)$. The angle $\\theta(t)$ this vector makes with the positive real axis is given by its argument. We can choose a continuous branch for the angle function:\n$$\n\\theta(t) = \\arg(U(t)) = \\arg(\\exp(i k t)) = k t\n$$\nNow, we can find the total change in this angle over the interval $t \\in [0, 2\\pi]$.\nThe initial angle at $t=0$ is:\n$$\n\\theta(0) = k \\cdot 0 = 0\n$$\nThe final angle at $t=2\\pi$ is:\n$$\n\\theta(2\\pi) = k \\cdot (2\\pi) = 2\\pi k\n$$\nThe total curvature is the difference between these angles:\n$$\n\\text{Total Curvature} = \\theta(2\\pi) - \\theta(0) = 2\\pi k - 0 = 2\\pi k\n$$\nAlternatively, we could compute the integral $\\int \\kappa ds$ more directly. From $\\theta(t) = kt$, we have $\\frac{d\\theta}{dt} = k$. We are also given $\\frac{ds}{dt} = \\rho(t)$. Using the chain rule, the signed curvature is:\n$$\n\\kappa(t) = \\frac{d\\theta}{ds} = \\frac{d\\theta/dt}{ds/dt} = \\frac{k}{\\rho(t)}\n$$\nThe total curvature is then calculated by integrating over the parameter $t$:\n$$\n\\text{Total Curvature} = \\int_{C} \\kappa \\, ds = \\int_{0}^{2\\pi} \\kappa(t) \\frac{ds}{dt} \\, dt = \\int_{0}^{2\\pi} \\frac{k}{\\rho(t)} \\rho(t) \\, dt\n$$\nThe term $\\rho(t)$ cancels, simplifying the integral significantly:\n$$\n\\text{Total Curvature} = \\int_{0}^{2\\pi} k \\, dt = k [t]_{0}^{2\\pi} = k(2\\pi - 0) = 2\\pi k\n$$\nBoth methods confirm that the total curvature of the curve over the specified interval is $2\\pi k$. The calculation naturally yields a result in radians.", "answer": "$$\n\\boxed{2\\pi k}\n$$", "id": "3050426"}, {"introduction": "Simple closed curves like circles have a rotation index of $+1$ or $-1$, but what about curves that intersect themselves? This practice explores a classic figure-eight Lissajous curve, which is closed but not simple. By analyzing its tangent vector, you will discover how the contributions from its two loops, which are traversed with opposite orientations relative to the regions they enclose, cause the net rotation of the tangent to be zero [@problem_id:3050391].", "problem": "Let $\\,\\gamma : [0,2\\pi] \\to \\mathbb{R}^{2}\\,$ be the smooth closed curve defined by $\\,\\gamma(t) = \\big(\\sin(2t),\\, \\sin(t)\\big)\\,$. Let $\\,v(t) = \\gamma'(t)\\,$ denote its velocity (tangent) vector, and write $\\,v(t) = |v(t)|\\big(\\cos\\theta(t),\\,\\sin\\theta(t)\\big)\\,$, where $\\,\\theta(t)\\,$ is a continuous choice of the argument of the tangent vector along $[0,2\\pi]$. By definition, the rotation index $\\,r(\\gamma)\\,$ is the degree of the Gauss map $\\,t \\mapsto v(t)/|v(t)| \\in \\mathbb{S}^{1}\\,$, equivalently $\\,r(\\gamma) = \\big(\\theta(2\\pi) - \\theta(0)\\big)/(2\\pi)\\,$.\n\nTasks:\n1. Verify that $\\,\\gamma\\,$ is a closed immersed curve; that is, $\\,\\gamma(0) = \\gamma(2\\pi)\\,$ and $\\,\\gamma'(t) \\neq 0\\,$ for all $\\,t \\in [0,2\\pi]\\,$.\n2. Using only fundamental definitions and well-tested facts about plane curves, compute the total change $\\,\\Delta\\theta = \\theta(2\\pi) - \\theta(0)\\,$ of the tangent argument over one traversal of the curve. Your computation of $\\,\\Delta\\theta\\,$ must be in radians.\n3. Deduce the rotation index $\\,r(\\gamma)\\,$ and give a precise qualitative description of how the tangent vector $\\,v(t)\\,$ winds around the origin in the velocity plane over $\\,t \\in [0,2\\pi]\\,$.\n\nProvide your final answer as the integer value of $\\,r(\\gamma)\\,$. No rounding is needed, and no units should be included in the final answer. The angle $\\,\\Delta\\theta\\,$ should be understood in radians throughout.", "solution": "This solution addresses the three tasks required to analyze the curve $\\gamma(t) = (\\sin(2t), \\sin(t))$ and find its rotation index.\n\n**Task 1: Verify that $\\gamma$ is a closed immersed curve**\n\nFirst, we check if the curve is closed by evaluating $\\gamma(t)$ at the endpoints $t=0$ and $t=2\\pi$.\n$$ \\gamma(0) = (\\sin(0), \\sin(0)) = (0, 0) $$\n$$ \\gamma(2\\pi) = (\\sin(4\\pi), \\sin(2\\pi)) = (0, 0) $$\nSince $\\gamma(0) = \\gamma(2\\pi)$, the curve is closed.\n\nNext, we check if the curve is an immersion, which requires that its tangent vector $\\gamma'(t)$ is never zero. We compute the tangent vector $v(t) = \\gamma'(t)$:\n$$ v(t) = \\frac{d}{dt} (\\sin(2t), \\sin(t)) = (2\\cos(2t), \\cos(t)) $$\nFor the curve to fail to be an immersion, both components of $v(t)$ must be zero simultaneously:\n1. $2\\cos(2t) = 0 \\implies \\cos(2t) = 0$\n2. $\\cos(t) = 0$\n\nFrom condition 2, for $t \\in [0, 2\\pi]$, we have $t = \\frac{\\pi}{2}$ or $t = \\frac{3\\pi}{2}$. We test these values in condition 1:\n- For $t = \\frac{\\pi}{2}$: $\\cos(2t) = \\cos(\\pi) = -1 \\neq 0$.\n- For $t = \\frac{3\\pi}{2}$: $\\cos(2t) = \\cos(3\\pi) = -1 \\neq 0$.\nSince the two components are never simultaneously zero, $\\gamma'(t) \\neq (0,0)$ for all $t \\in [0, 2\\pi]$. Thus, the curve is an immersion.\n\n**Task 2: Compute the total change $\\Delta\\theta = \\theta(2\\pi) - \\theta(0)$**\n\nThe total change in the tangent angle is the integral of its rate of change, $\\frac{d\\theta}{dt}$, over the interval $[0, 2\\pi]$. For a vector $(x(t), y(t))$, this rate is given by $\\frac{d\\theta}{dt} = \\frac{xy' - yx'}{x^2+y^2}$. Here, our vector is the velocity $v(t) = (x_v(t), y_v(t))$ with $x_v(t) = 2\\cos(2t)$ and $y_v(t) = \\cos(t)$.\nTheir derivatives are $x_v'(t) = -4\\sin(2t)$ and $y_v'(t) = -\\sin(t)$.\n\nThe numerator of the integrand is:\n$$ x_v y_v' - y_v x_v' = (2\\cos(2t))(-\\sin(t)) - (\\cos(t))(-4\\sin(2t)) $$\n$$ = -2\\cos(2t)\\sin(t) + 4\\sin(2t)\\cos(t) $$\nUsing double angle identities $\\sin(2t) = 2\\sin(t)\\cos(t)$ and $\\cos(2t) = 2\\cos^2(t) - 1$:\n$$ = -2(2\\cos^2(t)-1)\\sin(t) + 4(2\\sin(t)\\cos(t))\\cos(t) $$\n$$ = (-4\\cos^2(t)+2)\\sin(t) + 8\\sin(t)\\cos^2(t) $$\n$$ = (4\\cos^2(t)+2)\\sin(t) $$\nLet the integrand be $f(t) = \\frac{d\\theta}{dt}$. We can analyze its symmetry. Let's evaluate $f(t+\\pi)$:\n- The numerator becomes $(4\\cos^2(t+\\pi)+2)\\sin(t+\\pi) = (4(-\\cos t)^2+2)(-\\sin t) = -(4\\cos^2(t)+2)\\sin(t)$.\n- The denominator is $x_v(t+\\pi)^2 + y_v(t+\\pi)^2 = (2\\cos(2(t+\\pi)))^2 + (\\cos(t+\\pi))^2 = (2\\cos(2t))^2 + (-\\cos t)^2$, which is unchanged.\nThus, the integrand has the property $f(t+\\pi) = -f(t)$.\n\nWe can now compute the total angle change $\\Delta\\theta = \\int_0^{2\\pi} f(t) dt$ by splitting the integral:\n$$ \\Delta\\theta = \\int_0^\\pi f(t) dt + \\int_\\pi^{2\\pi} f(t) dt $$\nUsing the substitution $u = t - \\pi$ in the second integral:\n$$ \\int_\\pi^{2\\pi} f(t) dt = \\int_0^\\pi f(u+\\pi) du = \\int_0^\\pi -f(u) du = -\\int_0^\\pi f(t) dt $$\nTherefore, the total change in angle is:\n$$ \\Delta\\theta = \\int_0^\\pi f(t) dt - \\int_0^\\pi f(t) dt = 0 $$\nThe total change in the tangent angle is $0$ radians.\n\n**Task 3: Deduce the rotation index $r(\\gamma)$ and describe the winding**\n\nThe rotation index $r(\\gamma)$ is defined as the total angle change divided by $2\\pi$:\n$$ r(\\gamma) = \\frac{\\Delta\\theta}{2\\pi} = \\frac{0}{2\\pi} = 0 $$\nThe rotation index of the curve is 0.\n\nQualitatively, the tangent vector $v(t)$ traverses a closed path in the velocity plane. The symmetry property $f(t+\\pi) = -f(t)$ for the rate of angle change $\\frac{d\\theta}{dt}$ means that the rotation accumulated by the tangent vector over the first half of the curve's traversal, $t \\in [0, \\pi]$, is precisely unwound over the second half, $t \\in [\\pi, 2\\pi]$. This corresponds to the figure-eight shape of the curve $\\gamma(t)$, which traces one loop in a counter-clockwise sense and the second loop in a clockwise sense, causing their contributions to the total rotation of the tangent vector to cancel out perfectly. The net rotation is zero.", "answer": "$$\\boxed{0}$$", "id": "3050391"}, {"introduction": "Theoretical understanding is best solidified through practical application. This final exercise challenges you to move from pen-and-paper calculation to computational implementation by creating a numerical algorithm to compute the turning number for any regular closed curve. You will learn the crucial technique of \"angle unwrapping\" to correctly sum the total change in the tangent's angle and apply your algorithm to a diverse suite of curves, from simple circles to more complex epicycles [@problem_id:3050398].", "problem": "You are given the following task grounded in the turning tangent theorem (Hopf's Umlaufsatz). Let $\\gamma:[0,2\\pi]\\to\\mathbb{R}^2$ be a regular closed plane curve with complex representation $z(t)=x(t)+\\mathrm{i}y(t)\\in\\mathbb{C}$, where $\\mathrm{i}^2=-1$. The regularity assumption means $z'(t)\\neq 0$ for all $t\\in[0,2\\pi]$. Define the unit tangent vector $T(t)=\\dfrac{z'(t)}{\\lvert z'(t)\\rvert}$ and write $T(t)=(\\cos\\theta(t),\\sin\\theta(t))$ for a continuous angle function $\\theta(t)$ (angles must be in radians). The turning number $r(\\gamma)$ of $\\gamma$ is the integer\n$$\nr(\\gamma)=\\frac{\\theta(2\\pi)-\\theta(0)}{2\\pi}.\n$$\nThe turning tangent theorem (Hopf's Umlaufsatz) guarantees that $r(\\gamma)\\in\\mathbb{Z}$ and is invariant under regular homotopies of $\\gamma$.\n\nYour task is to implement a numerical method to compute $r(\\gamma)$ from the derivative $z'(t)$ by sampling the argument of $z'(t)$ over a partition of $[0,2\\pi]$, unwrapping the sampled angles to remove $2\\pi$-jumps, summing the unwrapped differences, and dividing by $2\\pi$ to obtain an integer. Angles must be treated in radians. The method must:\n- Sample $t$ uniformly on $[0,2\\pi]$ with a sufficiently fine partition.\n- Compute $\\arg(z'(t_j))$ at the sample points in radians.\n- Perform angle unwrapping to produce a continuous angle profile over $[0,2\\pi]$; that is, adjust successive differences by adding or subtracting integer multiples of $2\\pi$ to keep local jumps within $(-\\pi,\\pi]$.\n- Compute the total change in the unwrapped angle and then compute $r(\\gamma)$ as the nearest integer to this total change divided by $2\\pi$.\n\nImplement a program that computes $r(\\gamma)$ for each of the following test curves. In each case, the parametrization is given via $z(t)$, and you must use its derivative $z'(t)$ in the algorithm. All functions are $2\\pi$-periodic in $t$, and all angles are in radians.\n\nTest suite (each case is a separate curve on $[0,2\\pi]$):\n- Case 1 (unit circle counterclockwise): $z(t)=e^{\\mathrm{i}t}$, so $z'(t)=\\mathrm{i}e^{\\mathrm{i}t}$.\n- Case 2 (unit circle clockwise): $z(t)=e^{-\\mathrm{i}t}$, so $z'(t)=-\\mathrm{i}e^{-\\mathrm{i}t}$.\n- Case 3 (double wrap counterclockwise): $z(t)=e^{\\mathrm{i}(2t)}$, so $z'(t)=2\\mathrm{i}e^{\\mathrm{i}(2t)}$.\n- Case 4 (triple wrap clockwise): $z(t)=e^{-\\mathrm{i}(3t)}$, so $z'(t)=-3\\mathrm{i}e^{-\\mathrm{i}(3t)}$.\n- Case 5 (ellipse counterclockwise): $z(t)=2\\cos t+\\mathrm{i}\\,0.5\\sin t$, so $z'(t)=-2\\sin t+\\mathrm{i}\\,0.5\\cos t$.\n- Case 6 (wavy circle counterclockwise, no vanishing derivative): $z(t)=e^{\\mathrm{i}t}+0.2\\,e^{\\mathrm{i}(3t)}$, so $z'(t)=\\mathrm{i}\\,e^{\\mathrm{i}t}+0.6\\,\\mathrm{i}\\,e^{\\mathrm{i}(3t)}$.\n- Case 7 (wavy circle clockwise, no vanishing derivative): $z(t)=e^{-\\mathrm{i}t}+0.2\\,e^{-\\mathrm{i}(3t)}$, so $z'(t)=-\\mathrm{i}\\,e^{-\\mathrm{i}t}-0.6\\,\\mathrm{i}\\,e^{-\\mathrm{i}(3t)}$.\n- Case 8 (double wrap wavy counterclockwise, no vanishing derivative): $z(t)=e^{\\mathrm{i}(2t)}+0.1\\,e^{\\mathrm{i}(4t)}$, so $z'(t)=2\\mathrm{i}\\,e^{\\mathrm{i}(2t)}+0.4\\,\\mathrm{i}\\,e^{\\mathrm{i}(4t)}$.\n\nAlgorithmic requirements:\n- Use a uniform partition of $[0,2\\pi]$ with a sufficiently large number of subintervals to ensure numerical stability for all cases.\n- Use radians throughout.\n- Return the integer turning number for each case by rounding to the nearest integer after dividing the total unwrapped angle change by $2\\pi$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[r1,r2,r3,r4,r5,r6,r7,r8]\").\n- Each $r_k$ must be an integer.\n\nNo physical units are involved. Angles must be handled in radians. The output must be fully determined by the definitions above and the numerical method described, without requiring any user input or external data.", "solution": "The problem requires the numerical computation of the turning number $r(\\gamma)$ for several regular closed plane curves. The turning number is an integer that quantifies the total number of rotations made by the curve's tangent vector. The algorithm is based on calculating the total change in the angle of the tangent vector over the parameter interval $[0, 2\\pi]$.\n\nThe core idea is to approximate the continuous change in the tangent's angle by summing small, discrete changes. The angle of the tangent vector at a point $t$ is given by the argument of its complex derivative, $\\theta(t) = \\arg(z'(t))$. The numerical procedure is as follows:\n\n1.  **Discretization**: The interval $[0, 2\\pi]$ is partitioned into $N$ equally spaced points, $t_j = j \\frac{2\\pi}{N-1}$ for $j=0, 1, \\dots, N-1$. A large value of $N$ (e.g., 10000) is chosen to ensure that the change in angle between consecutive points is well under $\\pi$, which is crucial for the next step.\n\n2.  **Angle Calculation**: For each test curve, the complex derivative $z'(t)$ is evaluated at each sample point $t_j$. The principal argument (angle) of each resulting complex number, $\\phi_j = \\arg(z'(t_j))$, is then computed. Standard library functions (like `numpy.angle`) return this value in the range $(-\\pi, \\pi]$.\n\n3.  **Angle Unwrapping**: As the tangent vector rotates, its continuous angle $\\theta(t)$ will increase or decrease monotonically, while the computed principal angle $\\phi_j$ will jump by $\\pm 2\\pi$ each time it crosses the boundary of the $(-\\pi, \\pi]$ interval. The \"unwrapping\" process reconstructs the continuous angle profile by adding or subtracting multiples of $2\\pi$ to eliminate these jumps. For example, a jump from an angle near $\\pi$ to one near $-\\pi$ is corrected by adding $2\\pi$ to the second angle and all subsequent ones. This creates a sequence of unwrapped angles $\\{\\theta_j\\}$ that represents the continuous total rotation.\n\n4.  **Turning Number Computation**: The total change in the continuous angle is approximated by the difference between the last and first elements of the unwrapped sequence, $\\Delta\\theta \\approx \\theta_{N-1} - \\theta_0$. According to the definition, the turning number is this total change divided by $2\\pi$:\n    $$\n    r(\\gamma) \\approx \\frac{\\theta_{N-1} - \\theta_0}{2\\pi}\n    $$\n    Since the Hopf Umlaufsatz guarantees that $r(\\gamma)$ is an integer, the numerical result is rounded to the nearest integer to correct for any floating-point approximation errors.\n\nThis algorithm is implemented in Python using the NumPy library, which provides efficient functions for array operations, complex number handling (`numpy.angle`), and angle unwrapping (`numpy.unwrap`). The procedure is applied to each of the eight provided test cases to produce the final list of integer turning numbers.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the turning number for a list of complex-valued curves.\n    \"\"\"\n\n    # The problem defines z'(t), the derivative of the curve's complex representation z(t).\n    # The turning number can be computed from the argument of z'(t).\n    # Each function in the list corresponds to a test case for z'(t).\n    # Note: 1j is the Python syntax for the imaginary unit i.\n    z_prime_functions = [\n        # Case 1: Unit circle counterclockwise, z'(t) = i*e^(it)\n        lambda t: 1j * np.exp(1j * t),\n        # Case 2: Unit circle clockwise, z'(t) = -i*e^(-it)\n        lambda t: -1j * np.exp(-1j * t),\n        # Case 3: Double wrap counterclockwise, z'(t) = 2i*e^(i(2t))\n        lambda t: 2j * np.exp(1j * 2 * t),\n        # Case 4: Triple wrap clockwise, z'(t) = -3i*e^(-i(3t))\n        lambda t: -3j * np.exp(-1j * 3 * t),\n        # Case 5: Ellipse counterclockwise, z'(t) = -2sin(t) + i*0.5cos(t)\n        lambda t: -2 * np.sin(t) + 1j * 0.5 * np.cos(t),\n        # Case 6: Wavy circle counterclockwise, z'(t) = i*e^(it) + 0.6i*e^(i(3t))\n        lambda t: 1j * np.exp(1j * t) + 0.6j * np.exp(1j * 3 * t),\n        # Case 7: Wavy circle clockwise, z'(t) = -i*e^(-it) - 0.6i*e^(-i(3t))\n        lambda t: -1j * np.exp(-1j * t) - 0.6j * np.exp(-1j * 3 * t),\n        # Case 8: Double wrap wavy counterclockwise, z'(t) = 2i*e^(i(2t)) + 0.4i*e^(i(4t))\n        lambda t: 2j * np.exp(1j * 2 * t) + 0.4j * np.exp(1j * 4 * t),\n    ]\n\n    results = []\n    \n    # Use a sufficiently large number of points for numerical stability.\n    # This ensures that the angle change between samples is less than pi.\n    num_points = 10000\n    \n    # Create a uniform partition of the interval [0, 2*pi].\n    t = np.linspace(0, 2 * np.pi, num_points)\n\n    for z_prime_func in z_prime_functions:\n        # Step 1: Compute z'(t) at each sample point.\n        z_prime_values = z_prime_func(t)\n        \n        # Step 2: Compute the argument (angle) of each complex value.\n        # np.angle returns values in the interval (-pi, pi].\n        angles = np.angle(z_prime_values)\n        \n        # Step 3: Unwrap the angles to get a continuous angle profile.\n        # This removes the 2*pi jumps that occur when the angle crosses the -pi/pi boundary.\n        unwrapped_angles = np.unwrap(angles)\n        \n        # Step 4: Compute the total change in the unwrapped angle.\n        total_angle_change = unwrapped_angles[-1] - unwrapped_angles[0]\n        \n        # Step 5: Calculate the turning number by dividing by 2*pi and rounding.\n        # The turning number is guaranteed to be an integer by Hopf's Umlaufsatz.\n        turning_number = total_angle_change / (2 * np.pi)\n        \n        # Round to the nearest integer to account for floating-point inaccuracies.\n        results.append(int(np.round(turning_number)))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3050398"}]}