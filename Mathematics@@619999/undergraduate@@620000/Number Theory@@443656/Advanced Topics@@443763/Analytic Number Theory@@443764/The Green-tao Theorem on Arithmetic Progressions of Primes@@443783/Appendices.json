{"hands_on_practices": [{"introduction": "While the Green-Tao theorem guarantees that long arithmetic progressions of primes exist, not just any sequence will do. This exercise reveals the \"local obstructions\" that constrain them, using basic modular arithmetic to derive a fundamental rule governing the common difference $d$ of any 3-term prime progression [@problem_id:3091314]. This practice is a crucial first step in understanding the interplay between additive structure and primality.", "problem": "Let $p_1,p_2,p_3$ be three prime numbers in an arithmetic progression (AP), meaning $p_2-p_1=p_3-p_2$. The Greenâ€“Tao theorem asserts that the prime numbers contain arbitrarily long arithmetic progressions, but local congruence obstructions still restrict possible common differences when all terms are primes. Work from first principles (definitions of primes, arithmetic progressions, and basic modular arithmetic) to address the following:\n\n1. Using only the definitions, verify that $3,5,7$ is a three-term arithmetic progression of primes.\n\n2. Let $p,p+d,p+2d$ be a three-term arithmetic progression of primes with all three terms strictly greater than $3$. Derive necessary congruence conditions on the common difference $d$ modulo $2$ and modulo $3$ that ensure none of the three terms is composite for these moduli. Conclude a structural restriction on $d$.\n\n3. Determine the least positive integer $d$ satisfying the restrictions you derived in part $2$ and exhibit one explicit example of a three-term arithmetic progression of primes $p,p+d,p+2d$ with all entries greater than $3$ that uses this minimal $d$.\n\nYour final answer must be the single number equal to the least positive common difference $d$ found in part $3$; no rounding is required.", "solution": "The problem asks for an analysis of three-term arithmetic progressions of prime numbers. The validation process confirms the problem is scientifically grounded, well-posed, objective, and contains no logical flaws. We may proceed with the solution, addressing each part in sequence.\n\nPart 1: Verification of the arithmetic progression $3, 5, 7$.\nAn arithmetic progression (AP) is a sequence of numbers such that the difference between consecutive terms is constant. Let the sequence be denoted by $p_1, p_2, p_3$. For this to be an AP, we must have $p_2 - p_1 = p_3 - p_2$.\nThe given sequence is $p_1=3$, $p_2=5$, $p_3=7$.\nFirst, we verify that each term is a prime number.\n- The number $3$ is prime as its only positive divisors are $1$ and $3$.\n- The number $5$ is prime as its only positive divisors are $1$ and $5$.\n- The number $7$ is prime as its only positive divisors are $1$ and $7$.\nNext, we verify the arithmetic progression property. The common difference is calculated as:\n$p_2 - p_1 = 5 - 3 = 2$.\n$p_3 - p_2 = 7 - 5 = 2$.\nSince the differences are equal, the sequence $3, 5, 7$ is an arithmetic progression with a common difference of $d=2$. Thus, it is a three-term arithmetic progression of primes.\n\nPart 2: Derivation of necessary congruence conditions on the common difference $d$.\nWe are given a three-term arithmetic progression of primes $p, p+d, p+2d$, where each term is strictly greater than $3$. Let the three primes be $p_1=p$, $p_2=p+d$, and $p_3=p+2d$.\nThe condition that all terms are primes greater than $3$ imposes strong constraints on the common difference $d$.\n\nCondition modulo $2$:\nSince $p, p+d, p+2d$ are all primes greater than $3$, they must all be odd numbers. The only even prime is $2$, which is not greater than $3$.\nThe first term, $p$, is a prime greater than $3$, so $p$ must be odd. This can be written as $p \\equiv 1 \\pmod{2}$.\nThe second term, $p+d$, must also be odd. So, $p+d \\equiv 1 \\pmod{2}$. Substituting $p \\equiv 1 \\pmod{2}$, we get $1+d \\equiv 1 \\pmod{2}$, which implies $d \\equiv 0 \\pmod{2}$. Therefore, the common difference $d$ must be an even number.\nLet's check the third term, $p+2d$. If $d$ is even, $d=2k$ for some integer $k$. Then $p+2d = p+2(2k) = p+4k$. Since $p$ is odd, $p+4k$ is also odd. This is consistent with $p+2d$ being a prime greater than $3$. The condition $d \\equiv 0 \\pmod{2}$ is necessary.\n\nCondition modulo $3$:\nThe terms $p, p+d, p+2d$ are primes strictly greater than $3$. This means none of them can be divisible by $3$.\nSo, $p \\not\\equiv 0 \\pmod{3}$, $p+d \\not\\equiv 0 \\pmod{3}$, and $p+2d \\not\\equiv 0 \\pmod{3}$.\nLet's consider the possible values of the common difference $d$ modulo $3$.\nCase 1: $d \\equiv 1 \\pmod{3}$.\nThe three terms of the progression, modulo $3$, are $p$, $p+1$, and $p+2$. The set $\\{p, p+1, p+2\\}$ forms a complete residue system modulo $3$. This means that regardless of the value of $p$, one of these three terms must be congruent to $0 \\pmod{3}$.\n- If $p \\equiv 1 \\pmod{3}$, then $p+2d \\equiv p+2(1) \\equiv 1+2 = 3 \\equiv 0 \\pmod{3}$.\n- If $p \\equiv 2 \\pmod{3}$, then $p+d \\equiv p+1 \\equiv 2+1 = 3 \\equiv 0 \\pmod{3}$.\n(Note that $p \\not\\equiv 0 \\pmod{3}$ as $p$ is a prime greater than $3$.)\nIn either subcase, one term of the progression is a multiple of $3$. Since all terms are strictly greater than $3$, that term must be composite. This contradicts the premise that all terms are prime. Therefore, we must have $d \\not\\equiv 1 \\pmod{3}$.\n\nCase 2: $d \\equiv 2 \\pmod{3}$.\nThe three terms of the progression, modulo $3$, are $p$, $p+2$, and $p+2d \\equiv p+2(2) = p+4 \\equiv p+1 \\pmod{3}$.\nThe set of terms modulo $3$ is $\\{p, p+1, p+2\\}$, which is again a complete residue system modulo $3$.\n- If $p \\equiv 1 \\pmod{3}$, then $p+d \\equiv p+2 \\equiv 1+2 = 3 \\equiv 0 \\pmod{3}$.\n- If $p \\equiv 2 \\pmod{3}$, then $p+2d \\equiv p+1 \\equiv 2+1 = 3 \\equiv 0 \\pmod{3}$.\nAgain, one term must be a multiple of $3$ and greater than $3$, which is a contradiction. Therefore, we must have $d \\not\\equiv 2 \\pmod{3}$.\n\nCase 3: $d \\equiv 0 \\pmod{3}$.\nThe only remaining possibility is that $d$ is a multiple of $3$.\nThe three terms of the progression, modulo $3$, are $p$, $p+0$, and $p+2(0)$. That is, all three terms are congruent to $p \\pmod{3}$.\nThe condition that no term is divisible by $3$ simply reduces to the single condition $p \\not\\equiv 0 \\pmod{3}$. This is already guaranteed by the fact that $p$ is a prime strictly greater than $3$.\nThus, for a three-term AP of primes all greater than $3$ to exist, the common difference $d$ must be divisible by $3$. So, $d \\equiv 0 \\pmod{3}$ is a necessary condition.\n\nStructural restriction on $d$:\nWe have derived two necessary conditions:\n1. $d \\equiv 0 \\pmod{2}$\n2. $d \\equiv 0 \\pmod{3}$\nSince $2$ and $3$ are coprime, these two congruences can be combined using the Chinese Remainder Theorem. A number is divisible by both $2$ and $3$ if and only if it is divisible by their product, $2 \\times 3 = 6$.\nTherefore, the structural restriction on $d$ is that it must be a multiple of $6$. This can be written as $d \\equiv 0 \\pmod{6}$.\n\nPart 3: Determine the least positive integer $d$ and provide an example.\nThe necessary condition on $d$ is that it must be a positive multiple of $6$. The set of possible values for $d$ is $\\{6, 12, 18, \\dots\\}$. The least positive integer satisfying this condition is $d=6$.\n\nNow, we must exhibit an explicit example of a three-term arithmetic progression of primes $p, p+d, p+2d$ with $d=6$ and all terms greater than $3$. The progression is of the form $p, p+6, p+12$. We need to find a prime $p > 3$ for which $p+6$ and $p+12$ are also prime.\nWe can test prime values for $p$ starting from the smallest prime greater than $3$.\n- Let $p=5$. The sequence is $5, 5+6, 5+12$, which is $5, 11, 17$. All three numbers ($5, 11, 17$) are prime, and all are greater than $3$. This is a valid example.\n- For completeness, let's check the next prime. Let $p=7$. The sequence is $7, 7+6, 7+12$, which is $7, 13, 19$. All three numbers are prime. This is another valid example.\n- Let's check $p=11$. The sequence is $11, 11+6, 11+12$, which is $11, 17, 23$. All three are prime.\n- Let's check $p=13$. The sequence is $13, 13+6, 13+12$, which is $13, 19, 25$. Here, $25 = 5^2$ is composite, so this is not an AP of primes.\n\nWe were asked for one explicit example. The first one we found, $5, 11, 17$, suffices.\nThe least positive integer $d$ satisfying the derived restrictions is $6$.", "answer": "$$\\boxed{6}$$", "id": "3091314"}, {"introduction": "Theoretical insights, like the divisibility rules for the common difference, become more concrete when we see them in action. This practice shifts our focus from abstract derivation to computational discovery, tasking you with designing an algorithm to count all 3-term prime arithmetic progressions up to a given limit $N$ [@problem_id:3091302]. By implementing a systematic search, you will gain an empirical feel for the frequency of these progressions and directly verify their existence.", "problem": "Let $A$ be the set of the first $N$ positive integers, $A = \\{1,2,\\dots,N\\}$. A $3$-term arithmetic progression is an ordered triple $(a, a+d, a+2d)$ with $a \\in \\mathbb{N}$, $d \\in \\mathbb{N}$, and $d > 0$. A number $p \\in \\mathbb{N}$ is prime if $p \\geq 2$ and the only positive divisors of $p$ are $1$ and $p$.\n\nThe Green-Tao theorem on arithmetic progressions of primes states that the prime numbers contain arbitrarily long arithmetic progressions. In this problem, you will address a finite-range instance inspired by this theorem: count, for a given $N$, the number of $3$-term arithmetic progressions $(a, a+d, a+2d)$ contained in $\\{1,2,\\dots,N\\}$ for which each of $a$, $a+d$, and $a+2d$ is prime.\n\nStarting from the foundational definitions above, design and implement an algorithm that, for each specified $N$, computes the number of triples $(a, a+d, a+2d)$ such that:\n- $a$, $a+d$, and $a+2d$ are all prime numbers,\n- $a \\in \\{1,2,\\dots,N\\}$,\n- $a+d \\in \\{1,2,\\dots,N\\}$,\n- $a+2d \\in \\{1,2,\\dots,N\\}$,\n- $d \\in \\mathbb{N}$ and $d > 0$.\n\nThe computation must be performed exactly and deterministically, without heuristic shortcuts, and must rely on first-principles properties of primes and arithmetic progressions. Your program should use the provided test suite of values of $N$ and produce counts as integers.\n\nTest suite (the values of $N$ to evaluate):\n- $N = 5$,\n- $N = 7$,\n- $N = 30$,\n- $N = 100$,\n- $N = 1000$.\n\nFinal output specification:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite values of $N$ (i.e., $N = 5$, $7$, $30$, $100$, $1000$). For example, the output should have the form $[r_1,r_2,r_3,r_4,r_5]$, where each $r_i$ is the integer count of $3$-term prime arithmetic progressions for the corresponding $N$.", "solution": "The user-provided problem has been analyzed and is deemed valid. It is scientifically grounded in number theory, well-posed with clear and consistent constraints, and expressed in objective mathematical language. A solution can be deterministically computed.\n\n### Problem Formulation\nThe objective is to count the number of $3$-term arithmetic progressions $(a, a+d, a+2d)$ where all three terms are prime numbers and are contained within the set of the first $N$ positive integers, $\\{1, 2, \\dots, N\\}$. The constraints are:\n1. $a$, $a+d$, and $a+2d$ are prime numbers.\n2. $a \\in \\{1, 2, \\dots, N\\}$, $a+d \\in \\{1, 2, \\dots, N\\}$, and $a+2d \\in \\{1, 2, \\dots, N\\}$.\n3. The common difference $d$ is a positive integer, $d > 0$.\n\nThe condition $a+2d \\leq N$, combined with $a > 0$ and $d > 0$, automatically ensures that $a$ and $a+d$ are also within the set $\\{1, 2, \\dots, N\\}$.\n\n### Algorithmic Strategy\nA direct and exact algorithm to solve this problem consists of two main stages:\n1.  **Prime Generation:** Efficiently find all prime numbers up to the limit $N$. This pre-computation allows for constant-time primality testing for any number in the range.\n2.  **Systematic Search:** Iterate through the generated primes to identify all pairs that can serve as the first two terms of a valid arithmetic progression, and then verify the third term.\n\n### Step 1: Prime Number Generation via Sieve of Eratosthenes\nThe most suitable algorithm for generating all primes up to a given limit $N$ is the Sieve of Eratosthenes. This method is highly efficient, with a time complexity of approximately $O(N \\log \\log N)$.\n\nThe procedure is as follows:\n- Create a boolean array, `is_prime`, of size $N+1$, and initialize all entries from index $2$ to $N$ as `true`. Mark indices $0$ and $1$ as `false`.\n- Iterate through numbers $p$ from $2$ up to $\\sqrt{N}$.\n- If `is_prime[p]` is `true`, it means $p$ is a prime number. For each such prime $p$, iterate through its multiples (starting from $p^2$) and mark them as not prime by setting `is_prime[p*p]`, `is_prime[p*p + p]`, etc., to `false`.\n\nAfter the sieve completes, `is_prime[k]` will be `true` if $k$ is a prime number and `false` otherwise, providing an $O(1)$ lookup for primality testing within our range. This boolean array is then used to generate an ordered list of all primes less than or equal to $N$, which we can denote as $P_N$.\n\n### Step 2: Searching for Arithmetic Progressions\nWith the list of primes $P_N$ and the `is_prime` array, we can systematically search for all qualifying $3$-term arithmetic progressions. Let such a progression be $(p_1, p_2, p_3)$. We can identify it by finding its first two terms.\n\nThe algorithm proceeds by iterating through all ordered pairs of primes $(p_i, p_j)$ from the list $P_N$ such that $p_i  p_j$.\n- Let the first term of the progression be $a = p_i$.\n- Let the second term be $a+d = p_j$.\n- From these, the common difference is uniquely determined as $d = p_j - p_i$. Since we ensure $p_i  p_j$, the condition $d > 0$ is automatically satisfied.\n- The third term of the progression must then be $a+2d = p_j + d = p_j + (p_j - p_i) = 2p_j - p_i$. Let this candidate third term be $p_k$.\n\nFor each pair $(p_i, p_j)$, we calculate $p_k$ and check if it forms a valid progression:\n1.  **Range Check:** We must verify that $p_k \\leq N$. If this condition fails, the third term is outside the allowed set.\n2.  **Primality Check:** We must verify that $p_k$ is a prime number. This is done in constant time by checking `is_prime[p_k]`.\n\nIf both conditions are met, the triple $(p_i, p_j, p_k)$ is a valid $3$-term prime arithmetic progression. We increment a counter for each such triple found.\n\nAn optimization can be made during the search. Since the list of primes $P_N$ is sorted, for a fixed first term $p_i$, as the second term $p_j$ increases, the third term $p_k = 2p_j - p_i$ also increases. If we find a $p_j$ for which $p_k > N$, then any subsequent choice for the second term (with the same $p_i$) will also result in a third term greater than $N$. Therefore, we can break the inner loop and proceed to the next value of $p_i$.\n\nAdditionally, it can be shown that the smallest $3$-term arithmetic progression of primes is $(3, 5, 7)$. This requires $N \\geq 7$. For any $N  7$, the count is zero. This can be handled as a base case.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef count_progressions(N: int) - int:\n    \"\"\"\n    Counts the number of 3-term arithmetic progressions of primes up to N.\n\n    A 3-term arithmetic progression is (a, a+d, a+2d) where a  0, d  0,\n    and all three terms are prime and less than or equal to N.\n    \"\"\"\n    # The smallest 3-term AP of primes is (3, 5, 7), which requires N = 7.\n    if N  7:\n        return 0\n\n    # Step 1: Generate primes up to N using the Sieve of Eratosthenes.\n    # is_prime[i] will be True if i is prime, False otherwise.\n    is_prime = np.ones(N + 1, dtype=bool)\n    is_prime[0] = is_prime[1] = False\n    for p in range(2, int(np.sqrt(N)) + 1):\n        if is_prime[p]:\n            # Mark all multiples of p (starting from p*p) as not prime.\n            is_prime[p * p::p] = False\n\n    # Step 2: Extract the prime numbers into a sorted list.\n    primes = np.where(is_prime)[0]\n\n    # Step 3: Iterate through pairs of primes to find progressions.\n    count = 0\n    num_primes = len(primes)\n    \n    # We can skip p1=2 because (2, 2+d, 2+2d) cannot be an all-prime\n    # progression for d0. If d is odd, 2+d is odd but 2+2d=2(1+d) is even  2.\n    # If d is even, 2+d is even  2. Thus the first term must be an odd prime.\n    start_index = 1 # Start from prime 3.\n    \n    for i in range(start_index, num_primes):\n        for j in range(i + 1, num_primes):\n            p1 = primes[i]\n            p2 = primes[j]\n            \n            # The first two terms p1 and p2 define the progression.\n            # a = p1, a+d = p2  = d = p2 - p1\n            # The third term is a+2d = p2 + d.\n            d = p2 - p1\n            p3 = p2 + d\n\n            # Since the primes list is sorted, if p3  N, all subsequent\n            # p3 for this p1 will also be  N. We can break the inner loop.\n            if p3  N:\n                break\n            \n            # Check if the third term is also prime using our sieve.\n            if is_prime[p3]:\n                # Found a valid 3-term prime arithmetic progression.\n                count += 1\n    \n    return count\n\ndef solve():\n    \"\"\"\n    Main function to run the computation for the specified test suite\n    and print the results in the required format.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [5, 7, 30, 100, 1000]\n\n    results = []\n    for n_val in test_cases:\n        # Calculate the result for each value of N.\n        result = count_progressions(n_val)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\n# Execute the solver.\nsolve()\n```", "id": "3091302"}, {"introduction": "The local constraints we've explored hint at a deeper structure, which the proof of the Green-Tao theorem handles with a powerful technique known as the **W-trick**. This exercise provides a hands-on introduction to this essential concept, which systematically removes integers that are guaranteed to be composite based on their residues modulo small primes [@problem_id:3091310]. By computing the set of \"admissible\" residues, you will be performing a key step in preparing a set of numbers for the application of more advanced analytic methods.", "problem": "In the Greenâ€“Tao framework for studying arithmetic progressions within the prime numbers, one begins by eliminating small prime divisibility obstructions via the so-called $W$-trick. Fix an integer parameter $w \\geq 2$ and define\n$$\nW \\;=\\; \\prod_{p \\leq w} p,\n$$\nwhere the product runs over all prime numbers $p$ with $p \\leq w$. For a residue $b \\in \\{0,1,\\dots,W-1\\}$, call $b$ admissible if and only if $\\gcd(b,W)=1$. Admissibility is motivated by the observation that if $\\gcd(b,W) \\neq 1$, then every integer of the form $Wn+b$ is divisible by a prime factor of $W$ and is therefore composite, so such residue classes cannot contain primes other than possibly a single trivial small prime.\n\nStarting from these definitions and basic properties of primes, greatest common divisors, and modular arithmetic, compute $W$ for $w=5$ and list all admissible residues $b$ modulo $W$ for which integers of the form $Wn+b$ could be prime. Express your final answer as a single row matrix, where the first entry is $W$ and the remaining entries are the admissible residues in increasing order.", "solution": "The problem requires the computation of the integer parameter $W$ and the identification of all admissible residues $b$ modulo $W$ for the specific case where the parameter $w$ is set to $5$. The definitions and conditions are provided within the problem statement.\n\nFirst, we address the calculation of $W$. The definition provided is\n$$\nW = \\prod_{p \\leq w} p\n$$\nwhere the product is taken over all prime numbers $p$ that are less than or equal to $w$. The problem specifies that $w=5$. The prime numbers $p$ satisfying the condition $p \\leq 5$ are $2$, $3$, and $5$. Therefore, we can compute $W$ as the product of these primes:\n$$\nW = 2 \\times 3 \\times 5 = 30\n$$\n\nSecond, we must identify all admissible residues $b$ modulo $W$. A residue $b \\in \\{0, 1, \\dots, W-1\\}$ is defined as admissible if and only if $\\gcd(b, W) = 1$. With our calculated value of $W=30$, this condition becomes:\n$$\n\\gcd(b, 30) = 1, \\quad \\text{for } b \\in \\{0, 1, \\dots, 29\\}\n$$\nFor the greatest common divisor of $b$ and $30$ to be $1$, $b$ must not share any prime factors with $30$. The prime factorization of $W=30$ is $2 \\times 3 \\times 5$. Thus, a residue $b$ is admissible if and only if it is not divisible by $2$, not divisible by $3$, and not divisible by $5$.\n\nWe now systematically check each integer $b$ in the specified range $\\{0, 1, \\dots, 29\\}$.\nThe set of integers $b$ such that $1 \\leq b  W$ and $\\gcd(b,W)=1$ are the elements of the multiplicative group of integers modulo $W$, denoted $(\\mathbb{Z}/W\\mathbb{Z})^\\times$. The number of such elements is given by Euler's totient function, $\\phi(W)$. For $W=30$, we can calculate this as:\n$$\n\\phi(30) = \\phi(2 \\times 3 \\times 5) = \\phi(2) \\times \\phi(3) \\times \\phi(5) = (2-1)(3-1)(5-1) = 1 \\times 2 \\times 4 = 8\n$$\nThis confirms that there are exactly $8$ admissible residues in the range $1 \\leq b \\leq 29$. Note that for $b=0$, $\\gcd(0, 30) = 30 \\neq 1$, so $0$ is not an admissible residue.\n\nWe now list the integers $b$ in the range $1 \\leq b \\leq 29$ that are coprime to $30$:\n- $b=1$: $\\gcd(1, 30) = 1$. Admissible.\n- $b=2, 3, 4, 5, 6$: All have a common factor with $30$. Not admissible.\n- $b=7$: No common factors with $30$. Admissible.\n- $b=8, 9, 10$: Not admissible.\n- $b=11$: No common factors with $30$. Admissible.\n- $b=12$: Not admissible.\n- $b=13$: No common factors with $30$. Admissible.\n- $b=14, 15, 16$: Not admissible.\n- $b=17$: No common factors with $30$. Admissible.\n- $b=18$: Not admissible.\n- $b=19$: No common factors with $30$. Admissible.\n- $b=20, 21, 22$: Not admissible.\n- $b=23$: No common factors with $30$. Admissible.\n- $b=24, 25, 26, 27, 28$: Not admissible.\n- $b=29$: No common factors with $30$. Admissible.\n\nThe set of all admissible residues $b$ is therefore $\\{1, 7, 11, 13, 17, 19, 23, 29\\}$.\n\nThe problem requests the final answer as a single row matrix where the first entry is $W$ and the subsequent entries are the admissible residues in increasing order. Combining our results, we have $W=30$ and the ordered list of admissible residues.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n30  1  7  11  13  17  19  23  29\n\\end{pmatrix}\n}\n$$", "id": "3091310"}]}