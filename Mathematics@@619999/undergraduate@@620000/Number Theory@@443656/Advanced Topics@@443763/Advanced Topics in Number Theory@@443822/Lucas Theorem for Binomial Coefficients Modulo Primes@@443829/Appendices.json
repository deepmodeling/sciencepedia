{"hands_on_practices": [{"introduction": "The best way to master a powerful theorem is not to memorize it, but to understand where it comes from. This first practice exercise guides you through the foundational logic of Lucas's theorem from first principles. By working through a concrete example, you will see how properties of polynomials over finite fields and the base-$p$ representation of integers naturally lead to the theorem's elegant, digit-wise conclusion [@problem_id:3087050].", "problem": "In the ring of integers modulo a prime, congruences of binomial coefficients can be analyzed via expansions in a prime base. Working entirely modulo the prime $p$, and starting only from the binomial theorem and the fact that for a prime $p$ the binomial coefficients $\\binom{p}{r}$ are divisible by $p$ for $0<r<p$, determine the least nonnegative residue modulo $5$ of the binomial coefficient $\\binom{83}{27}$.\n\nYour solution must:\n- Express the integers $n=83$ and $k=27$ in base $5$, and explain how the coefficient of $x^{k}$ in $(1+x)^{n}$ modulo $5$ decomposes according to the base-$5$ digits of $n$ and $k$.\n- Justify each reduction step from the binomial theorem and basic properties of arithmetic modulo a prime, without assuming any higher-level theorems.\n- Conclude with the exact residue of $\\binom{83}{27}$ in $\\{0,1,2,3,4\\}$.\n\nProvide the final answer as a single integer in $\\{0,1,2,3,4\\}$. No rounding is required.", "solution": "The objective is to determine the least nonnegative residue of the binomial coefficient $\\binom{83}{27}$ modulo the prime $p=5$. We are restricted to using the binomial theorem and the fact that for a prime $p$, $\\binom{p}{r}$ is divisible by $p$ for all integers $r$ such that $0 < r < p$.\n\nLet's begin by analyzing the polynomial $(1+x)^p$ in the ring of polynomials with integer coefficients modulo $p$, denoted $\\mathbb{Z}_p[x]$. The binomial theorem states that $(1+x)^p = \\sum_{r=0}^{p} \\binom{p}{r} x^r$.\nExpanding this sum gives:\n$$(1+x)^p = \\binom{p}{0}x^0 + \\binom{p}{1}x^1 + \\dots + \\binom{p}{p-1}x^{p-1} + \\binom{p}{p}x^p$$\nWe know that $\\binom{p}{0} = 1$ and $\\binom{p}{p} = 1$. The problem statement provides that for $0 < r < p$, the coefficient $\\binom{p}{r}$ is divisible by $p$, which means $\\binom{p}{r} \\equiv 0 \\pmod{p}$.\nTherefore, when considering the polynomial modulo $p=5$, all intermediate terms vanish:\n$$(1+x)^5 \\equiv 1 \\cdot x^0 + 0 \\cdot x^1 + \\dots + 0 \\cdot x^4 + 1 \\cdot x^5 \\pmod{5}$$\n$$(1+x)^5 \\equiv 1 + x^5 \\pmod{5}$$\nThis result is sometimes referred to as the \"Freshman's Dream\". We can extend this property to higher powers of the prime $p$. For instance, for $p^2$:\n$$(1+x)^{p^2} = ((1+x)^p)^p \\equiv (1+x^p)^p \\pmod{p}$$\nApplying the same property to the polynomial with variable $y=x^p$, we find $(1+y)^p \\equiv 1+y^p \\pmod{p}$. Substituting back $y=x^p$:\n$$(1+x^p)^p \\equiv 1 + (x^p)^p = 1 + x^{p^2} \\pmod{p}$$\nBy induction, this generalizes to $(1+x)^{p^j} \\equiv 1+x^{p^j} \\pmod{p}$ for any non-negative integer $j$. With $p=5$, we have $(1+x)^{5^j} \\equiv 1+x^{5^j} \\pmod{5}$.\n\nThe next step is to express the integers $n=83$ and $k=27$ in base $p=5$.\nFor $n=83$:\n$83 = 3 \\times 25 + 8 = 3 \\times 5^2 + 8$\n$8 = 1 \\times 5 + 3 = 1 \\times 5^1 + 3$\n$3 = 3 \\times 1 = 3 \\times 5^0$\nSo, the base-$5$ expansion of $n=83$ is $n = 3 \\cdot 5^2 + 1 \\cdot 5^1 + 3 \\cdot 5^0$. We can write this as $n=(313)_5$. Let the digits be $n_2=3$, $n_1=1$, and $n_0=3$.\n\nFor $k=27$:\n$27 = 1 \\times 25 + 2 = 1 \\times 5^2 + 2$\n$2 = 0 \\times 5 + 2 = 0 \\times 5^1 + 2$\n$2 = 2 \\times 1 = 2 \\times 5^0$\nSo, the base-$5$ expansion of $k=27$ is $k = 1 \\cdot 5^2 + 0 \\cdot 5^1 + 2 \\cdot 5^0$. We can write this as $k=(102)_5$. Let the digits be $k_2=1$, $k_1=0$, and $k_0=2$.\n\nThe binomial coefficient $\\binom{n}{k} = \\binom{83}{27}$ is, by definition, the coefficient of the term $x^k=x^{27}$ in the expansion of $(1+x)^n = (1+x)^{83}$. We will find this coefficient by working modulo $5$.\nWe use the base-$5$ expansion of $n=83$ to decompose the polynomial:\n$$(1+x)^{83} = (1+x)^{3 \\cdot 5^2 + 1 \\cdot 5^1 + 3 \\cdot 5^0} = (1+x)^{3 \\cdot 25} (1+x)^{1 \\cdot 5} (1+x)^{3}$$\n$$(1+x)^{83} = \\left((1+x)^{25}\\right)^3 \\left((1+x)^5\\right)^1 (1+x)^3$$\nUsing the congruence $(1+x)^{5^j} \\equiv 1+x^{5^j} \\pmod{5}$, we can simplify this expression modulo $5$:\n$$(1+x)^{83} \\equiv (1+x^{25})^3 (1+x^5)^1 (1+x)^3 \\pmod{5}$$\nWe now need to find the coefficient of $x^{27}$ in the expansion of the right-hand side. Let's expand each factor using the binomial theorem:\n\\begin{itemize}\n    \\item $(1+x^{25})^3 = \\sum_{i_2=0}^{3} \\binom{3}{i_2} (x^{25})^{i_2} = \\binom{3}{0} + \\binom{3}{1}x^{25} + \\binom{3}{2}x^{50} + \\binom{3}{3}x^{75}$\n    \\item $(1+x^5)^1 = \\sum_{i_1=0}^{1} \\binom{1}{i_1} (x^5)^{i_1} = \\binom{1}{0} + \\binom{1}{1}x^5$\n    \\item $(1+x)^3 = \\sum_{i_0=0}^{3} \\binom{3}{i_0} x^{i_0} = \\binom{3}{0} + \\binom{3}{1}x + \\binom{3}{2}x^2 + \\binom{3}{3}x^3$\n\\end{itemize}\nA general term in the product of these three polynomial expansions is formed by picking one term from each expansion. Such a term has the form:\n$$\\left( \\binom{3}{i_2} x^{25 i_2} \\right) \\left( \\binom{1}{i_1} x^{5 i_1} \\right) \\left( \\binom{3}{i_0} x^{i_0} \\right) = \\binom{3}{i_2} \\binom{1}{i_1} \\binom{3}{i_0} x^{25 i_2 + 5 i_1 + i_0}$$\nwhere the indices must be in the ranges $0 \\le i_2 \\le 3$, $0 \\le i_1 \\le 1$, and $0 \\le i_0 \\le 3$.\n\nWe are looking for the coefficient of $x^{27}$. This requires the exponent to be $27$:\n$$25 i_2 + 5 i_1 + i_0 = 27$$\nThis equation is a representation of the number $27$ in a base-$5$ system. Because the representation of an integer in a given base is unique, and we know that $27 = 1 \\cdot 25 + 0 \\cdot 5 + 2$, the only integer solution for $(i_2, i_1, i_0)$ with $0 \\le i_j < 5$ is $i_2=1$, $i_1=0$, and $i_0=2$.\nWe must verify that this unique solution is valid within the binomial expansion index constraints:\n\\begin{itemize}\n    \\item $i_2 = 1$ is in the range $0 \\le i_2 \\le 3$.\n    \\item $i_1 = 0$ is in the range $0 \\le i_1 \\le 1$.\n    \\item $i_0 = 2$ is in the range $0 \\le i_0 \\le 3$.\n\\end{itemize}\nAll constraints are satisfied. Thus, there is only one combination of terms in the product that yields $x^{27}$. The coefficient of $x^{27}$ is the product of the coefficients of these specific terms. This corresponds to the product of binomial coefficients $\\binom{n_j}{k_j}$ associated with the base-$5$ digits of $n=(n_2 n_1 n_0)_5$ and $k=(k_2 k_1 k_0)_5$.\nThe coefficient is:\n$$C = \\binom{3}{1} \\binom{1}{0} \\binom{3}{2}$$\nWe calculate each binomial coefficient:\n$$\\binom{3}{1} = \\frac{3!}{1!(3-1)!} = 3$$\n$$\\binom{1}{0} = \\frac{1!}{0!(1-0)!} = 1$$\n$$\\binom{3}{2} = \\frac{3!}{2!(3-2)!} = \\frac{3 \\times 2}{2 \\times 1} = 3$$\nThe product is $C = 3 \\times 1 \\times 3 = 9$.\nWe have shown that $\\binom{83}{27} \\equiv C \\pmod{5}$. Now we find the least non-negative residue of $9$ modulo $5$:\n$$9 = 1 \\times 5 + 4$$\nTherefore, $9 \\equiv 4 \\pmod{5}$.\n\nThe final result is that the least nonnegative residue of $\\binom{83}{27}$ modulo $5$ is $4$.", "answer": "$$\\boxed{4}$$", "id": "3087050"}, {"introduction": "Lucas's theorem provides more than just a computational shortcut; it reveals deep structural information about binomial coefficients. This exercise focuses on one of its most practical consequences: a simple test for divisibility by a prime $p$. You will investigate how comparing the base-$p$ digits of $n$ and $k$ directly determines whether $\\binom{n}{k}$ is divisible by $p$, building a strong intuition for this powerful diagnostic tool [@problem_id:3087022].", "problem": "Let $p$ be the prime $7$. For integers $n$ and $k$ with base-$p$ expansions $n=\\sum_{i=0}^{r} n_i p^i$ and $k=\\sum_{i=0}^{r} k_i p^i$ where each digit $n_i,k_i\\in\\{0,1,\\dots,p-1\\}$, it is known that divisibility properties of the binomial coefficient $\\binom{n}{k}$ modulo $p$ reflect the digit-wise comparison between the $p$-adic digits $k_i$ and $n_i$. Using only fundamental definitions of base-$p$ expansion, the definition of the binomial coefficient $\\binom{n}{k}=\\dfrac{n!}{k!(n-k)!}$, and standard properties of modular arithmetic with a prime modulus, analyze the following three binomial coefficients at the prime $p=7$ to illustrate the necessity and sufficiency of the digit-wise condition $k_i\\le n_i$ for $\\binom{n}{k}\\not\\equiv 0 \\pmod{p}$, and to test the boundary cases where some $k_i=n_i$.\n\n1. Let $n_1=124$ and $k_1=60$. Express $n_1$ and $k_1$ in base $7$, compare corresponding digits, and determine the residue of $\\binom{n_1}{k_1}$ modulo $7$.\n\n2. Let $n_2=66$ and $k_2=61$. Express $n_2$ and $k_2$ in base $7$, compare corresponding digits, and determine the residue of $\\binom{n_2}{k_2}$ modulo $7$.\n\n3. Let $n_3=137$ and $k_3=116$. Express $n_3$ and $k_3$ in base $7$, compare corresponding digits, and determine the residue of $\\binom{n_3}{k_3}$ modulo $7$, paying special attention to positions where $k_i=n_i$.\n\nFinally, define $R$ to be the unique integer in $\\{0,1,2,3,4,5,6\\}$ congruent to\n$$\\binom{n_1}{k_1}+\\binom{n_2}{k_2}+\\binom{n_3}{k_3}\\pmod{7}.$$\nCompute $R$. Your final answer must be a single integer with no units.", "solution": "The problem requires an analysis of three binomial coefficients modulo the prime $p=7$. The core principle, as stated in the problem, is that for a prime $p$, the value of a binomial coefficient $\\binom{n}{k}$ modulo $p$ is determined by the base-$p$ expansions of $n$ and $k$. Let the base-$p$ expansions be $n = \\sum_{i=0}^{r} n_i p^i$ and $k = \\sum_{i=0}^{r} k_i p^i$, where $0 \\le n_i, k_i < p$. The relevant theorem, known as Lucas's theorem, states that\n$$ \\binom{n}{k} \\equiv \\prod_{i=0}^{r} \\binom{n_i}{k_i} \\pmod{p} $$\nA direct consequence of this theorem is that $\\binom{n}{k} \\not\\equiv 0 \\pmod{p}$ if and only if $\\binom{n_i}{k_i} \\not\\equiv 0 \\pmod{p}$ for all $i$. Since $n_i$ and $k_i$ are single digits less than the prime $p$, the term $\\binom{n_i}{k_i}$ is non-zero if and only if $k_i \\le n_i$. Thus, $\\binom{n}{k} \\not\\equiv 0 \\pmod{p}$ if and only if $k_i \\le n_i$ for all $i$. We will use this principle to analyze each case with $p=7$.\n\nFirst, we analyze the case of $n_1=124$ and $k_1=60$.\nTo find the base-$7$ expansion of $n_1=124$, we perform successive divisions by $7$:\n$124 = 17 \\times 7 + 5$\n$17 = 2 \\times 7 + 3$\n$2 = 0 \\times 7 + 2$\nReading the remainders from bottom to top, we get $n_1 = (235)_7$. So, $n_1 = 2 \\cdot 7^2 + 3 \\cdot 7^1 + 5 \\cdot 7^0$. The digits are $n_{1,2}=2$, $n_{1,1}=3$, and $n_{1,0}=5$.\nNext, for $k_1=60$:\n$60 = 8 \\times 7 + 4$\n$8 = 1 \\times 7 + 1$\n$1 = 0 \\times 7 + 1$\nSo, $k_1 = (114)_7$. The digits are $k_{1,2}=1$, $k_{1,1}=1$, and $k_{1,0}=4$.\nWe compare the digits: $k_{1,2}=1 \\le n_{1,2}=2$, $k_{1,1}=1 \\le n_{1,1}=3$, and $k_{1,0}=4 \\le n_{1,0}=5$. Since $k_{1,i} \\le n_{1,i}$ for all $i$, we expect $\\binom{124}{60} \\not\\equiv 0 \\pmod{7}$. Applying Lucas's theorem:\n$$ \\binom{124}{60} \\equiv \\binom{2}{1} \\binom{3}{1} \\binom{5}{4} \\pmod{7} $$\n$$ \\binom{124}{60} \\equiv (2)(3)(5) = 30 \\pmod{7} $$\nSince $30 = 4 \\times 7 + 2$, we have $\\binom{124}{60} \\equiv 2 \\pmod{7}$. This illustrates the sufficiency of the condition.\n\nSecond, we analyze the case of $n_2=66$ and $k_2=61$.\nFor $n_2=66$:\n$66 = 9 \\times 7 + 3$\n$9 = 1 \\times 7 + 2$\n$1 = 0 \\times 7 + 1$\nSo, $n_2 = (123)_7$. The digits are $n_{2,2}=1$, $n_{2,1}=2$, and $n_{2,0}=3$.\nFor $k_2=61$:\n$61 = 8 \\times 7 + 5$\n$8 = 1 \\times 7 + 1$\n$1 = 0 \\times 7 + 1$\nSo, $k_2 = (115)_7$. The digits are $k_{2,2}=1$, $k_{2,1}=1$, and $k_{2,0}=5$.\nWe compare the digits: $k_{2,2}=1 \\le n_{2,2}=1$, $k_{2,1}=1 \\le n_{2,1}=2$, but $k_{2,0}=5 > n_{2,0}=3$. Since there is an index $i=0$ where the condition $k_{2,i} \\le n_{2,i}$ fails, we expect $\\binom{66}{61} \\equiv 0 \\pmod{7}$. Applying Lucas's theorem:\n$$ \\binom{66}{61} \\equiv \\binom{1}{1} \\binom{2}{1} \\binom{3}{5} \\pmod{7} $$\nSince $3 < 5$, the coefficient $\\binom{3}{5}$ is defined to be $0$. Therefore:\n$$ \\binom{66}{61} \\equiv (1)(2)(0) = 0 \\pmod{7} $$\nThis illustrates the necessity of the condition: if it fails for any digit, the binomial coefficient is divisible by the prime.\n\nThird, we analyze the case of $n_3=137$ and $k_3=116$, which tests boundary conditions.\nFor $n_3=137$:\n$137 = 19 \\times 7 + 4$\n$19 = 2 \\times 7 + 5$\n$2 = 0 \\times 7 + 2$\nSo, $n_3 = (254)_7$. The digits are $n_{3,2}=2$, $n_{3,1}=5$, and $n_{3,0}=4$.\nFor $k_3=116$:\n$116 = 16 \\times 7 + 4$\n$16 = 2 \\times 7 + 2$\n$2 = 0 \\times 7 + 2$\nSo, $k_3 = (224)_7$. The digits are $k_{3,2}=2$, $k_{3,1}=2$, and $k_{3,0}=4$.\nWe compare the digits: $k_{3,2}=2 \\le n_{3,2}=2$, $k_{3,1}=2 \\le n_{3,1}=5$, and $k_{3,0}=4 \\le n_{3,0}=4$. The condition holds for all digits, including two positions where $k_i=n_i$. We expect a non-zero result.\n$$ \\binom{137}{116} \\equiv \\binom{2}{2} \\binom{5}{2} \\binom{4}{4} \\pmod{7} $$\nWe compute the individual coefficients: $\\binom{2}{2}=1$, $\\binom{5}{2} = \\frac{5 \\cdot 4}{2 \\cdot 1} = 10$, and $\\binom{4}{4}=1$.\n$$ \\binom{137}{116} \\equiv (1)(10)(1) = 10 \\pmod{7} $$\nSince $10 = 1 \\times 7 + 3$, we have $\\binom{137}{116} \\equiv 3 \\pmod{7}$. This shows that the boundary cases $k_i=n_i$ contribute a factor of $\\binom{n_i}{n_i}=1$ and do not cause the overall result to be zero.\n\nFinally, we compute the value of $R$.\n$R$ is defined as the unique integer in $\\{0,1,2,3,4,5,6\\}$ congruent to the sum of the three residues modulo $7$.\n$$ R \\equiv \\left(\\binom{n_1}{k_1} + \\binom{n_2}{k_2} + \\binom{n_3}{k_3}\\right) \\pmod{7} $$\nSubstituting the values we calculated:\n$$ R \\equiv (2 + 0 + 3) \\pmod{7} $$\n$$ R \\equiv 5 \\pmod{7} $$\nThe unique integer in the specified set is $5$.", "answer": "$$\\boxed{5}$$", "id": "3087022"}, {"introduction": "The ultimate test of understanding a mathematical process is to translate it into a functional algorithm. This final practice challenges you to convert the theoretical framework of Lucas's theorem into a working computer program. This exercise solidifies your knowledge by requiring you to handle every detail, from base conversion to the computation of modular inverses, transforming a beautiful piece of number theory into a practical computational tool [@problem_id:3087055].", "problem": "Design and implement a program that, given integers $n$, $k$, and a prime $p$, computes the residue of the binomial coefficient $ \\binom{n}{k} $ modulo $p$ by decomposing $n$ and $k$ into their base-$p$ digits and combining the contributions of corresponding digits. Your solution should be derived from fundamental principles, starting from the definitions of modular arithmetic and binomial coefficients, and the base-$p$ expansion of integers. Your derivation must not assume any specialized theorems beyond widely accepted number theoretic facts such as properties of modular arithmetic and primality.\n\nYour algorithmic design should:\n- Begin from the base-$p$ representations $ n = \\sum_{i \\ge 0} n_i p^i $ and $ k = \\sum_{i \\ge 0} k_i p^i $ with digits $ 0 \\le n_i, k_i < p $.\n- Use only properties that follow from the definition of the binomial coefficient, properties of modular arithmetic for a prime modulus, and the binomial expansion, to justify a digit-wise decomposition that reduces the computation of $ \\binom{n}{k} \\bmod p $ to a product of terms depending only on pairs $(n_i,k_i)$.\n- Describe how to compute each digit-level binomial coefficient $ \\binom{a}{b} \\bmod p $ for $ 0 \\le a,b < p $ efficiently using multiplicative inverses modulo $p$, justified by a property that holds when $p$ is prime. Clearly state how to handle $ b > a $.\n\nImplementation requirements:\n- Implement a function that computes $ \\binom{n}{k} \\bmod p $ according to your derivation.\n- The program must be self-contained and must not read any input; it should execute a fixed test suite and print the results.\n- All answers are integers.\n\nTest suite:\nEvaluate your program on the following parameter triples $(n,k,p)$:\n- $(123,58,7)$\n- $(100,35,13)$\n- $(12345,0,101)$\n- $(50,60,5)$\n- $(10,6,3)$\n- $(29,13,2)$\n- $(10,3,101)$\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite (for example, $[r_1,r_2,\\dots]$). No extra text should be printed.", "solution": "The problem is to compute the binomial coefficient $\\binom{n}{k}$ modulo a prime number $p$. The derivation will proceed from first principles, specifically the properties of polynomials over the finite field $\\mathbb{Z}_p$, to establish a digit-wise computational formula. This result is known as Lucas's theorem.\n\nOur starting point is the binomial theorem, which states that $\\binom{n}{k}$ is the coefficient of the term $x^k$ in the polynomial expansion of $(1+x)^n$:\n$$ (1+x)^n = \\sum_{i=0}^{n} \\binom{n}{i} x^i $$\nWe wish to find the value of this coefficient modulo $p$. This is equivalent to finding the coefficient of $x^k$ in the polynomial $(1+x)^n$ where the coefficients are considered elements of the finite field $\\mathbb{Z}_p$.\n\nFirst, we establish a fundamental property of polynomials in $\\mathbb{Z}_p[x]$. For a prime $p$, we have the congruence:\n$$ (a+b)^p \\equiv a^p + b^p \\pmod{p} $$\nThis can be seen from the binomial expansion of $(a+b)^p$:\n$$ (a+b)^p = \\sum_{i=0}^{p} \\binom{p}{i} a^{p-i} b^i = \\binom{p}{0}a^p + \\binom{p}{1}a^{p-1}b + \\dots + \\binom{p}{p-1}ab^{p-1} + \\binom{p}{p}b^p $$\nThe terminal coefficients are $\\binom{p}{0}=1$ and $\\binom{p}{p}=1$. For any intermediate integer $i$ such that $1 \\le i \\le p-1$, the binomial coefficient is given by $\\binom{p}{i} = \\frac{p!}{i!(p-i)!}$. Since $p$ is prime, the numerator $p!$ is divisible by $p$. The denominator $i!(p-i)!$ is not divisible by $p$, because all its prime factors are smaller than $p$. Therefore, $\\binom{p}{i}$ is an integer multiple of $p$ for $1 \\le i \\le p-1$. This means:\n$$ \\binom{p}{i} \\equiv 0 \\pmod{p} \\quad \\text{for } 1 \\le i \\le p-1 $$\nThus, all intermediate terms in the expansion vanish modulo $p$, leaving $(a+b)^p \\equiv a^p + b^p \\pmod{p}$.\nBy repeatedly applying this property, it can be extended to powers of $p$. For any integer $j \\ge 1$:\n$$ (a+b)^{p^j} \\equiv (a^{p^{j-1}} + b^{p^{j-1}})^p \\equiv (a^{p^{j-1}})^p + (b^{p^{j-1}})^p \\equiv a^{p^j} + b^{p^j} \\pmod{p} $$\nSetting $a=1$ and $b=x$, we obtain a crucial identity for our polynomial $(1+x)^n$:\n$$ (1+x)^{p^j} \\equiv 1 + x^{p^j} \\pmod{p} $$\n\nNow, we express the integer $n$ in its base-$p$ representation:\n$$ n = \\sum_{i=0}^{m} n_i p^i = n_m p^m + \\dots + n_1 p + n_0 $$\nwhere $0 \\le n_i < p$ are the digits of $n$ in base $p$.\nWe can now decompose the polynomial $(1+x)^n$ modulo $p$ as follows:\n$$ (1+x)^n = (1+x)^{\\sum_{i=0}^{m} n_i p^i} = \\prod_{i=0}^{m} (1+x)^{n_i p^i} = \\prod_{i=0}^{m} \\left((1+x)^{p^i}\\right)^{n_i} $$\nApplying the congruence we derived:\n$$ (1+x)^n \\equiv \\prod_{i=0}^{m} (1+x^{p^i})^{n_i} \\pmod{p} $$\nBy the binomial theorem, each term in the product can be expanded:\n$$ (1+x^{p^i})^{n_i} = \\sum_{j=0}^{n_i} \\binom{n_i}{j} (x^{p^i})^j = \\sum_{j=0}^{n_i} \\binom{n_i}{j} x^{j \\cdot p^i} $$\nSince $0 \\le n_i < p$, the coefficients $\\binom{n_i}{j}$ are a priori integers. We are interested in their values modulo $p$.\nThe full expression for $(1+x)^n$ modulo $p$ is:\n$$ (1+x)^n \\equiv \\prod_{i=0}^{m} \\left( \\sum_{k_i=0}^{n_i} \\binom{n_i}{k_i} x^{k_i p^i} \\right) \\pmod{p} $$\nWe are looking for the coefficient of $x^k$. We also express $k$ in its base-$p$ representation, with the same number of digits as $n$ (padding with leading zeros if necessary):\n$$ k = \\sum_{i=0}^{m} k_i p^i = k_m p^m + \\dots + k_1 p + k_0 $$\nwhere $0 \\le k_i < p$.\nWhen we expand the product of sums, a generic term is formed by choosing one term from each sum in the product:\n$$ \\left( \\binom{n_0}{k_0} x^{k_0 p^0} \\right) \\left( \\binom{n_1}{k_1} x^{k_1 p^1} \\right) \\dots \\left( \\binom{n_m}{k_m} x^{k_m p^m} \\right) = \\left( \\prod_{i=0}^{m} \\binom{n_i}{k_i} \\right) x^{\\sum_{i=0}^{m} k_i p^i} $$\nThe exponent of $x$ in this generic term is $\\sum_{i=0}^{m} k_i p^i$. Since $0 \\le k_i < p$, this is the unique base-$p$ representation of some integer. For this exponent to be equal to $k$, we must match the digits, i.e., the index $k_i$ for each term in the sum must be equal to the $i$-th digit of $k$.\nTherefore, the coefficient of $x^k$ in the expansion of $(1+x)^n$ modulo $p$ is the product of the coefficients from each part, where the choice of term corresponds to the digits of $k$. This gives the final result:\n$$ \\binom{n}{k} \\equiv \\prod_{i=0}^{m} \\binom{n_i}{k_i} \\pmod{p} $$\n\nThe algorithmic approach is to iterate through the base-$p$ digits of $n$ and $k$, compute $\\binom{n_i}{k_i} \\pmod{p}$ for each pair of digits $(n_i, k_i)$, and multiply these results together modulo $p$.\n\nTo compute $\\binom{a}{b} \\pmod{p}$ for the digits $0 \\le a,b < p$:\n1.  If $b > a$, the binomial coefficient $\\binom{a}{b}$ is defined as $0$. This makes sense, as it is impossible to choose $b$ items from a set of $a$ items.\n2.  If $b \\le a$, we have $\\binom{a}{b} = \\frac{a!}{b!(a-b)!}$. To compute this modulo $p$, we cannot perform division directly. Instead, we use modular multiplicative inverses.\n    $$ \\binom{a}{b} \\equiv a! \\cdot (b!)^{-1} \\cdot ((a-b)! )^{-1} \\pmod{p} $$\n    The modular inverse of an integer $x$ modulo a prime $p$ exists if and only if $x$ is not a multiple of $p$. Since $b \\le a < p$, all factors in $b!$ and $(a-b)!$ are less than $p$ and thus not divisible by $p$. Consequently, the factorials themselves are not divisible by $p$, and their inverses exist.\n    By Fermat's Little Theorem, for any integer $x$ not divisible by a prime $p$, we have $x^{p-1} \\equiv 1 \\pmod{p}$. This implies that the modular inverse is $x^{-1} \\equiv x^{p-2} \\pmod{p}$. This can be computed efficiently using modular exponentiation (binary exponentiation).\n    A more direct computation is:\n    $$ \\binom{a}{b} = \\frac{a \\cdot (a-1) \\cdots (a-b+1)}{b \\cdot (b-1) \\cdots 1} \\equiv \\left( \\prod_{i=0}^{b-1} (a-i) \\right) \\cdot \\left( \\left( \\prod_{i=1}^{b} i \\right)^{-1} \\right) \\pmod{p} $$\n    This avoids computing large factorials.\n\nThe overall algorithm is:\n1.  Initialize a result variable to $1$.\n2.  If $k > n$, return $0$.\n3.  Loop while $n > 0$:\n    a. Extract the least significant digits of $n$ and $k$ in base $p$: $n_i = n \\pmod p$ and $k_i = k \\pmod p$.\n    b. Compute $c = \\binom{n_i}{k_i} \\pmod p$. If $k_i > n_i$, $c=0$, and the final product will be $0$.\n    c. Update the result: `result = (result * c) % p`.\n    d. Remove the least significant digits by integer division: $n = n // p$ and $k = k // p$.\n4.  Return the final result.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\n\ndef solve():\n    \"\"\"\n    Computes binomial coefficients modulo a prime for a suite of test cases\n    based on a first-principles derivation of Lucas's theorem.\n    \"\"\"\n\n    # === Helper Functions ===\n\n    def mod_inverse(n, modulus):\n        \"\"\"\n        Computes the modular multiplicative inverse of n modulo modulus.\n        It is assumed that modulus is a prime number.\n        The inverse is computed using Fermat's Little Theorem: n^(p-2) mod p.\n        \"\"\"\n        return pow(n, modulus - 2, modulus)\n\n    def small_binom_mod_p(n, k, p):\n        \"\"\"\n        Computes C(n, k) mod p for 0 <= n, k < p.\n        p is assumed to be a prime number.\n        \"\"\"\n        # C(n, k) = 0 if k > n\n        if k < 0 or k > n:\n            return 0\n        \n        # C(n, 0) = 1, C(n, n) = 1\n        if k == 0 or k == n:\n            return 1\n        \n        # Use symmetry C(n, k) = C(n, n-k) to minimize calculations\n        if k > n // 2:\n            k = n - k\n\n        # Calculate numerator: n * (n-1) * ... * (n-k+1) mod p\n        numerator = 1\n        for i in range(k):\n            numerator = (numerator * (n - i)) % p\n\n        # Calculate denominator: k! mod p\n        denominator = 1\n        for i in range(1, k + 1):\n            denominator = (denominator * i) % p\n\n        # Result is numerator * (denominator)^(-1) mod p\n        return (numerator * mod_inverse(denominator, p)) % p\n\n    def lucas_theorem_binom(n, k, p):\n        \"\"\"\n        Computes C(n, k) mod p using Lucas's theorem.\n        n, k are non-negative integers, p is a prime number.\n        \"\"\"\n        # Base case: if k is negative or larger than n, C(n, k) is 0.\n        if k < 0 or k > n:\n            return 0\n        \n        # If p is not a prime, or n, k are small, this might not be the best method,\n        # but problem statement guarantees p is prime.\n\n        result = 1\n        # Loop until both n and k are 0\n        while n > 0 or k > 0:\n            ni = n % p\n            ki = k % p\n\n            # Compute C(ni, ki) mod p\n            term = small_binom_mod_p(ni, ki, p)\n            \n            # If any term is 0, the whole product is 0.\n            if term == 0:\n                return 0\n\n            result = (result * term) % p\n            \n            # Move to the next digits\n            n //= p\n            k //= p\n            \n        return result\n\n    # === Test Suite Execution ===\n\n    test_cases = [\n        (123, 58, 7),\n        (100, 35, 13),\n        (12345, 0, 101),\n        (50, 60, 5),\n        (10, 6, 3),\n        (29, 13, 2),\n        (10, 3, 101),\n    ]\n\n    results = []\n    for n, k, p in test_cases:\n        res = lucas_theorem_binom(n, k, p)\n        results.append(res)\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "3087055"}]}