{"hands_on_practices": [{"introduction": "The security of the RSA cryptosystem begins with the careful generation of a public and private key pair. A crucial step in this process is calculating the private exponent, $d$, which is the modular multiplicative inverse of the public exponent, $e$, modulo Euler's totient function $\\phi(n)$. This first exercise provides hands-on practice with this fundamental calculation, reinforcing your understanding of modular arithmetic and the extended Euclidean algorithm. [@problem_id:1397827]", "problem": "Chloe, a computer science student, is implementing the Rivest-Shamir-Adleman (RSA) public-key cryptosystem for a project. She begins by selecting two distinct prime numbers, $p=5$ and $q=11$. She calculates the modulus $n = pq$ and Euler's totient function $\\phi(n) = (p-1)(q-1)$. For her public key, she chooses the encryption exponent $e=3$.\n\nTo complete the key generation process, Chloe must compute her private key decryption exponent, $d$. The value of $d$ is the smallest positive integer that serves as the multiplicative inverse of $e$ modulo $\\phi(n)$.\n\nDetermine the value of the private key exponent $d$ that Chloe must use.", "solution": "We are given distinct primes $p=5$ and $q=11$. The RSA modulus is $n=pq$, and Euler's totient is $\\phi(n)=(p-1)(q-1)$ because $p$ and $q$ are distinct primes. With $e=3$ as the public exponent, the private exponent $d$ must satisfy the modular inverse condition\n$$\ned \\equiv 1 \\pmod{\\phi(n)}.\n$$\n\nFirst compute $n$ and $\\phi(n)$:\n$$\nn=pq=5\\cdot 11=55,\\qquad \\phi(n)=(p-1)(q-1)=4\\cdot 10=40.\n$$\nWe need $d$ such that\n$$\n3d \\equiv 1 \\pmod{40}.\n$$\nSince $\\gcd(3,40)=1$, an inverse exists. Use the extended Euclidean algorithm to find integers $x,y$ with\n$$\n3x+40y=1.\n$$\nFrom the Euclidean division,\n$$\n40=13\\cdot 3+1 \\implies 1=40-13\\cdot 3.\n$$\nThus\n$$\n3(-13)+40(1)=1 \\implies 3(-13) \\equiv 1 \\pmod{40}.\n$$\nTherefore, a modular inverse of $3$ modulo $40$ is $-13 \\equiv 27 \\pmod{40}$, and the smallest positive solution is\n$$\nd=27.\n$$\nThis $d$ satisfies $3\\cdot 27=81 \\equiv 1 \\pmod{40}$, as required.", "answer": "$$\\boxed{27}$$", "id": "1397827"}, {"introduction": "Having practiced the key generation, let's now walk through the entire RSA workflow from start to finish. In this comprehensive exercise, you will not only generate the public and private keys but also use them to encrypt a plaintext message and then decrypt the resulting ciphertext. Completing this full cycle will solidify your understanding of how these mathematical components work together to ensure secure communication. [@problem_id:3093259]", "problem": "In the Rivest–Shamir–Adleman (RSA) cryptosystem, public and private keys are generated from two primes, and encryption and decryption are performed via modular exponentiation grounded in basic number-theoretic principles. Work with the following concrete parameters to illustrate the full pipeline.\n\nLet $p=47$ and $q=59$. Define $n=pq$ and Euler’s totient $\\phi(n)=(p-1)(q-1)$. Choose a public exponent $e=3$ and verify that $\\gcd(e,\\phi(n))=1$. Compute the decryption exponent $d$ defined by the modular inverse condition $ed\\equiv 1 \\pmod{\\phi(n)}$, using a first-principles method such as the extended Euclidean algorithm. Consider the message $m=123$ with $0\\le mn$. Encrypt $m$ to obtain the ciphertext $c\\equiv m^{e}\\pmod{n}$ using fast modular exponentiation grounded in repeated squaring and reduction. Then decrypt by computing $m'\\equiv c^{d}\\pmod{n}$, and justify that decryption inverts encryption by appealing to the foundational modular arithmetic facts used in RSA.\n\nProvide all intermediate justifications, starting from the definitions of $\\phi(n)$, congruence, greatest common divisor, modular inverse, and modular exponentiation, and using only well-tested facts such as Fermat’s little theorem and Euler’s theorem as needed. You must clearly demonstrate each computation step, including the modular inverse and both the encryption and decryption computations, with explicit reductions.\n\nReport as your final answer only the exact integer value of the ciphertext $c$ (no rounding is required and no units are involved).", "solution": "The problem requires a full demonstration of the RSA cryptosystem, from key generation to encryption and decryption, using a specific set of parameters. We must provide all intermediate steps and justifications based on fundamental principles of number theory.\n\nFirst, we define the necessary concepts.\nA congruence relation $a \\equiv b \\pmod{n}$ means that $n$ divides the difference $a-b$, or equivalently, $a$ and $b$ have the same remainder when divided by $n$.\nThe greatest common divisor, $\\gcd(a,b)$, is the largest positive integer that divides both $a$ and $b$.\nThe modular multiplicative inverse of an integer $e$ modulo $m$ is an integer $d$ such that $ed \\equiv 1 \\pmod{m}$. Such an inverse exists if and only if $\\gcd(e, m) = 1$.\nEuler's totient function, $\\phi(n)$, counts the number of positive integers up to a given integer $n$ that are relatively prime to $n$. For a product of two distinct primes $n=pq$, the formula is $\\phi(n)=(p-1)(q-1)$.\nEuler's Theorem states that if $a$ and $n$ are relatively prime integers, then $a^{\\phi(n)} \\equiv 1 \\pmod{n}$.\n\nThe problem is valid as it is a standard application of the RSA algorithm, grounded in established number theory, with a complete and consistent set of parameters.\n\nThe full pipeline consists of three stages: key generation, encryption, and decryption.\n\n**1. Key Generation**\n\nThe first step is to generate the public and private keys from the given primes $p$ and $q$.\nThe given primes are $p=47$ and $q=59$.\n\nFirst, we compute the modulus $n$:\n$$n = pq = 47 \\times 59 = 2773$$\n\nNext, we compute Euler's totient function $\\phi(n)$:\n$$\\phi(n) = (p-1)(q-1) = (47-1)(59-1) = 46 \\times 58 = 2668$$\n$\\phi(n)$ is the size of the multiplicative group of integers modulo $n$, $(\\mathbb{Z}/n\\mathbb{Z})^\\times$.\n\nThe public exponent is given as $e=3$. We must verify that $e$ is a valid choice, which requires that $\\gcd(e, \\phi(n))=1$.\nWe need to check if $\\gcd(3, 2668) = 1$. An integer is divisible by $3$ if the sum of its digits is divisible by $3$. For $2668$, the sum of digits is $2+6+6+8 = 22$. Since $22$ is not divisible by $3$, $2668$ is not divisible by $3$. As $3$ is a prime number, this is sufficient to conclude that:\n$$\\gcd(3, 2668) = 1$$\nThus, the public exponent $e=3$ is valid. The public key is the pair $(n, e) = (2773, 3)$.\n\nNext, we compute the private exponent $d$, which is the modular multiplicative inverse of $e$ modulo $\\phi(n)$. It is defined by the congruence:\n$$ed \\equiv 1 \\pmod{\\phi(n)} \\implies 3d \\equiv 1 \\pmod{2668}$$\nWe use the extended Euclidean algorithm to find integers $x$ and $y$ such that $3x + 2668y = \\gcd(3, 2668) = 1$.\nThe Euclidean algorithm for $\\gcd(2668, 3)$ proceeds as follows:\n$$2668 = 889 \\times 3 + 1$$\n$$3 = 3 \\times 1 + 0$$\nThe gcd is indeed $1$. Now we work backwards to express $1$ as a linear combination of $2668$ and $3$:\nFrom the first line, we have:\n$$1 = 2668 - 889 \\times 3$$\nThis can be written as:\n$$(-889) \\times 3 + (1) \\times 2668 = 1$$\nFrom this equation, we see that $x=-889$ is a solution to $3x \\equiv 1 \\pmod{2668}$. The decryption exponent $d$ must be in the range $1  d  \\phi(n)$. We find the smallest positive value for $d$ by taking $-889$ modulo $2668$:\n$$d \\equiv -889 \\pmod{2668} \\implies d = -889 + 2668 = 1779$$\nSo, the decryption exponent is $d=1779$. The private key is the pair $(n, d) = (2773, 1779)$.\nTo verify: $3 \\times 1779 = 5337$. $5337 = 2 \\times 2668 + 1$, so $3 \\times 1779 \\equiv 1 \\pmod{2668}$.\n\n**2. Encryption**\n\nThe message to be encrypted is $m=123$. The condition $0 \\le m  n$ is satisfied as $0 \\le 123  2773$.\nEncryption is performed by computing the ciphertext $c$ using the public key $(n,e)$:\n$$c \\equiv m^e \\pmod{n}$$\nSubstituting the values:\n$$c \\equiv 123^3 \\pmod{2773}$$\nWe compute this by steps to keep the numbers manageable:\n$$123^2 = 15129$$\nNow, we find the remainder of $15129$ when divided by $2773$:\n$$15129 = 5 \\times 2773 + 1264$$\nSo, $123^2 \\equiv 1264 \\pmod{2773}$.\nNow we compute $123^3$:\n$$c = 123^3 = 123^2 \\times 123 \\equiv 1264 \\times 123 \\pmod{2773}$$\n$$1264 \\times 123 = 155472$$\nWe find the remainder of $155472$ when divided by $2773$:\n$$155472 = 56 \\times 2773 + 184$$\nThus, the ciphertext is:\n$$c = 184$$\n\n**3. Decryption and Justification**\n\nTo verify the process, we now decrypt the ciphertext $c=184$ using the private key $(n, d)=(2773, 1779)$. The decrypted message $m'$ is computed as:\n$$m' \\equiv c^d \\pmod{n} \\equiv 184^{1779} \\pmod{2773}$$\nTo compute this large exponentiation efficiently, we use the binary (left-to-right) method of modular exponentiation. First, the exponent $d=1779$ is written in binary:\n$$1779 = 1024 + 512 + 128 + 64 + 32 + 16 + 2 + 1$$\n$$1779 = 2^{10} + 2^9 + 2^7 + 2^6 + 2^5 + 2^4 + 2^1 + 2^0$$\n$$1779 = (11011110011)_2$$\nThe algorithm starts with a result of $1$ and iterates through the bits of the exponent from left to right (most significant to least significant). In each step, the result is squared. If the bit is $1$, the result is also multiplied by the base.\nLet $d=(d_{10}d_9...d_0)_2$.\n$m' \\leftarrow 1$.\nFor $i$ from $10$ down to $0$:\n  $m' \\leftarrow (m')^2 \\pmod{2773}$\n  If $d_i = 1$, $m' \\leftarrow m' \\times 184 \\pmod{2773}$\n\nLet's trace the calculation:\nInitial: $m' = 1$\n$i=10$, $d_{10}=1$: $m' \\leftarrow 1^2 = 1$; $m' \\leftarrow 1 \\times 184 = 184$\n$i=9$, $d_9=1$: $m' \\leftarrow 184^2 \\equiv 580$; $m' \\leftarrow 580 \\times 184 \\equiv 1346$\n$i=8$, $d_8=0$: $m' \\leftarrow 1346^2 \\equiv 947$\n$i=7$, $d_7=1$: $m' \\leftarrow 947^2 \\equiv 1130$; $m' \\leftarrow 1130 \\times 184 \\equiv 2718$\n$i=6$, $d_6=1$: $m' \\leftarrow 2718^2 \\equiv (-55)^2 = 3025 \\equiv 252$; $m' \\leftarrow 252 \\times 184 \\equiv 2000$\n$i=5$, $d_5=1$: $m' \\leftarrow 2000^2 \\equiv 1334$; $m' \\leftarrow 1334 \\times 184 \\equiv 1432$\n$i=4$, $d_4=1$: $m' \\leftarrow 1432^2 \\equiv 1377$; $m' \\leftarrow 1377 \\times 184 \\equiv 1025$\n$i=3$, $d_3=0$: $m' \\leftarrow 1025^2 \\equiv 2431$\n$i=2$, $d_2=0$: $m' \\leftarrow 2431^2 \\equiv (-342)^2 = 116964 \\equiv 498$\n$i=1$, $d_1=1$: $m' \\leftarrow 498^2 \\equiv 1207$; $m' \\leftarrow 1207 \\times 184 \\equiv 248$\n$i=0$, $d_0=1$: $m' \\leftarrow 248^2 \\equiv 498$; $m' \\leftarrow 498 \\times 184 = 91632 \\equiv 123$\n\nThe final result is $m' = 123$, which is the original message $m$.\n\n**Justification of Decryption:**\nThe decryption process works because of the relationship between $e$, $d$, and $\\phi(n)$. By construction, $ed \\equiv 1 \\pmod{\\phi(n)}$, which means $ed = k\\phi(n) + 1$ for some integer $k$. For our values, $k=2$.\nThe decryption calculation is:\n$$m' \\equiv c^d \\equiv (m^e)^d = m^{ed} = m^{k\\phi(n)+1} = m \\cdot (m^{\\phi(n)})^k \\pmod{n}$$\nThere are two cases:\n1. $\\gcd(m, n) = 1$: In this case, by Euler's Theorem, $m^{\\phi(n)} \\equiv 1 \\pmod{n}$.\n   $$m' \\equiv m \\cdot (1)^k \\equiv m \\pmod{n}$$\n   Since $0 \\le m  n$, the decrypted message $m'$ is exactly $m$. This holds for our message $m=123$ as $\\gcd(123, 2773)=\\gcd(3 \\times 41, 47 \\times 59)=1$.\n2. $\\gcd(m, n) \\ne 1$: This means $m$ is a multiple of $p$ or $q$. Let $m=ap$ for some integer $a$ (and $m$ is not a multiple of $q$). Then $m \\equiv 0 \\pmod{p}$.\n   $$m^{ed} \\equiv 0^{ed} \\equiv 0 \\pmod{p}$$\n   So $m^{ed} \\equiv m \\pmod{p}$. Since $\\gcd(m,q)=1$, by Fermat's Little Theorem (a special case of Euler's), $m^{q-1} \\equiv 1 \\pmod{q}$.\n   $$m^{ed} = m^{k(p-1)(q-1)+1} = m \\cdot (m^{q-1})^{k(p-1)} \\equiv m \\cdot (1)^{k(p-1)} \\equiv m \\pmod{q}$$\n   We have $m^{ed} \\equiv m \\pmod{p}$ and $m^{ed} \\equiv m \\pmod{q}$. Since $p$ and $q$ are distinct primes, the Chinese Remainder Theorem guarantees a unique solution for $m^{ed}$ modulo $n=pq$. Since $m$ itself satisfies both congruences, it must be that $m^{ed} \\equiv m \\pmod{n}$.\nThus, decryption correctly reverses encryption for all messages $m$ in the range $0 \\le m  n$.\n\nThe problem asks for the exact integer value of the ciphertext $c$.\nBased on our calculation:\n$c = 184$.", "answer": "$$\\boxed{184}$$", "id": "3093259"}, {"introduction": "While direct modular exponentiation works for decryption, real-world applications of RSA often require greater efficiency. This advanced practice introduces a powerful optimization using the Chinese Remainder Theorem (CRT) to significantly speed up the decryption of ciphertexts. You will decrypt a message using both the direct method and the CRT method, allowing you to verify their equivalence and appreciate the practical power of this number-theoretic tool. [@problem_id:3093278]", "problem": "Consider the Rivest–Shamir–Adleman (RSA) public-key cryptosystem (RSA) over the ring of integers modulo $n$, with primes $p$ and $q$, modulus $n = pq$, Euler totient $\\phi(n) = (p-1)(q-1)$, public exponent $e$ satisfying $ed \\equiv 1 \\pmod{\\phi(n)}$, and private exponent $d$. A ciphertext $c$ is decrypted to a message $m$ by computing $m \\equiv c^{d} \\pmod{n}$. The Chinese Remainder Theorem (CRT) can be used to accelerate the computation by working modulo $p$ and $q$ separately and combining the results. In this exercise, you will derive the same plaintext both directly modulo $n$ and via the Chinese Remainder Theorem (CRT) from first principles of number theory.\n\nLet $p = 101$, $q = 113$, $n = pq$, and $\\phi(n) = (p-1)(q-1)$. Suppose the private exponent is $d = 373$, and the public exponent $e$ is defined implicitly by $ed \\equiv 1 \\pmod{\\phi(n)}$. A ciphertext $c = 4321$ is observed.\n\nUsing only fundamental properties of modular arithmetic, Euler’s theorem and Fermat’s little theorem, and the Chinese Remainder Theorem (CRT), perform the following:\n\n- Verify that $e$ exists by showing $d$ is coprime to $\\phi(n)$ and computing the unique $e$ with $1 \\le e  \\phi(n)$ satisfying $ed \\equiv 1 \\pmod{\\phi(n)}$.\n- Compute the decryption $m$ directly as $m \\equiv c^{d} \\pmod{n}$.\n- Independently compute the same decryption via CRT by first finding $m_{p} \\equiv c^{d} \\pmod{p}$ and $m_{q} \\equiv c^{d} \\pmod{q}$ (you may reduce the exponent modulo $p-1$ and $q-1$ when appropriate), and then combining $m_{p}$ and $m_{q}$ to obtain $m \\pmod{n}$.\n\nExpress the final decrypted message $m$ as a single integer in the range $0 \\le m  n$. No rounding is required. Confirm that both methods yield the identical $m$, and provide that value as your final answer.", "solution": "We begin from the foundational definitions of the RSA cryptosystem and core number-theoretic facts. Let $p = 101$, $q = 113$, $n = pq$, and $\\phi(n) = (p-1)(q-1)$. The condition $ed \\equiv 1 \\pmod{\\phi(n)}$ ensures that exponentiation by $d$ in $\\mathbb{Z}_{n}$ correctly inverts exponentiation by $e$ on messages $m$ coprime to $n$, due to Euler’s theorem in $\\mathbb{Z}_{n}^{\\times}$ and the Chinese Remainder Theorem for handling the moduli $p$ and $q$.\n\nCompute the modulus and the totient:\n$$\nn = pq = 101 \\cdot 113 = 11413, \\quad \\phi(n) = (p-1)(q-1) = 100 \\cdot 112 = 11200.\n$$\nWe are given $d = 373$. First confirm that $d$ is coprime to $\\phi(n)$ and find $e$ with $ed \\equiv 1 \\pmod{11200}$. Using the extended Euclidean algorithm:\n\n$$\n11200 = 373 \\cdot 30 + 10, \\quad 373 = 10 \\cdot 37 + 3, \\quad 10 = 3 \\cdot 3 + 1.\n$$\n\nBack-substitution yields\n\n$$\n1 = 10 - 3 \\cdot 3 = 10 - 3(373 - 10 \\cdot 37) = 10(1 + 3 \\cdot 37) - 3 \\cdot 373 = 10 \\cdot 112 - 3 \\cdot 373.\n$$\n\nThen substituting $10 = 11200 - 373 \\cdot 30$ gives\n\n$$\n1 = (11200 - 373 \\cdot 30) \\cdot 112 - 3 \\cdot 373 = 112 \\cdot 11200 - 373 \\cdot (30 \\cdot 112 + 3) = 112 \\cdot 11200 - 373 \\cdot 3363.\n$$\n\nHence $\\gcd(373,11200)=1$, and the inverse of $d$ modulo $\\phi(n)$ is\n\n$$\ne \\equiv -3363 \\pmod{11200} \\quad \\Rightarrow \\quad e = 11200 - 3363 = 7837.\n$$\n\nThis verifies existence and computes $e$ with $ed \\equiv 1 \\pmod{11200}$.\n\nDirect decryption modulo $n$ proceeds by modular exponentiation:\n\n$$\nm \\equiv c^{d} \\pmod{n}, \\quad \\text{with } c = 4321, \\ d = 373, \\ n = 11413.\n$$\n\nUse repeated squaring to compute $c^{373} \\pmod{11413}$. Compute successive squares modulo $11413$:\n\n$$\nc^{2} \\equiv 4321^{2} \\equiv 10786 \\pmod{11413}\n$$\n$$\nc^{4} \\equiv 10786^{2} \\equiv 5087 \\pmod{11413}\n$$\n$$\nc^{8} \\equiv 5087^{2} \\equiv 4298 \\pmod{11413}\n$$\n$$\nc^{16} \\equiv 4298^{2} \\equiv 6570 \\pmod{11413}\n$$\n$$\nc^{32} \\equiv 6570^{2} \\equiv 934 \\pmod{11413}\n$$\n$$\nc^{64} \\equiv 934^{2} \\equiv 4968 \\pmod{11413}\n$$\n$$\nc^{128} \\equiv 4968^{2} \\equiv 6118 \\pmod{11413}\n$$\n$$\nc^{256} \\equiv 6118^{2} \\equiv 6697 \\pmod{11413}\n$$\nSince $373 = 256 + 64 + 32 + 16 + 4 + 1$, we multiply the corresponding factors modulo $11413$:\n\n$$\nc^{373} \\equiv c^{256} \\cdot c^{64} \\cdot c^{32} \\cdot c^{16} \\cdot c^{4} \\cdot c \\pmod{11413}.\n$$\n\nCompute stepwise modulo $11413$:\n\n$$\nc^{256} \\cdot c^{64} \\equiv 6697 \\cdot 4968 \\equiv 1801 \\pmod{11413}\n$$\n$$\n(1801) \\cdot c^{32} \\equiv 1801 \\cdot 934 \\equiv 4423 \\pmod{11413}\n$$\n$$\n(4423) \\cdot c^{16} \\equiv 4423 \\cdot 6570 \\equiv 1612 \\pmod{11413}\n$$\n$$\n(1612) \\cdot c^{4} \\equiv 1612 \\cdot 5087 \\equiv 5710 \\pmod{11413}\n$$\n$$\n(5710) \\cdot c \\equiv 5710 \\cdot 4321 \\equiv 9417 \\pmod{11413}\n$$\nThus the direct computation gives\n\n$$\nm \\equiv 9417 \\pmod{11413}.\n$$\n\n\nNow decrypt via the Chinese Remainder Theorem (CRT). First compute the residues modulo $p$ and $q$.\n\nReduce $c$ modulo $p$ and $q$:\n\n$$\nc \\pmod p = 4321 \\pmod{101} = 79, \\quad c \\pmod q = 4321 \\pmod{113} = 27.\n$$\n\nReduce the exponent using Fermat’s little theorem when applicable:\n\n$$\nd \\pmod{p-1} = 373 \\pmod{100} = 73, \\quad d \\pmod{q-1} = 373 \\pmod{112} = 37.\n$$\n\nHence\n\n$$\nm_{p} \\equiv c^{d} \\equiv 79^{73} \\pmod{101}, \\quad m_{q} \\equiv c^{d} \\equiv 27^{37} \\pmod{113}.\n$$\n\nCompute $m_{p}$ via repeated squaring modulo $101$. Powers of $79$ modulo $101$:\n\n$$\n79^{2} \\equiv 80, \\quad 79^{4} \\equiv 37, \\quad 79^{8} \\equiv 56, \\quad 79^{16} \\equiv 5, \\quad 79^{32} \\equiv 25, \\quad 79^{64} \\equiv 19.\n$$\n\nSince $73 = 64 + 8 + 1$,\n\n$$\n79^{73} \\equiv 79^{64} \\cdot 79^{8} \\cdot 79 \\equiv 19 \\cdot 56 \\cdot 79 \\pmod{101}.\n$$\n\nCompute:\n\n$$\n19 \\cdot 56 \\equiv 54 \\pmod{101}, \\quad 54 \\cdot 79 \\equiv 24 \\pmod{101},\n$$\n\nso $m_{p} \\equiv 24$.\n\nCompute $m_{q}$ similarly modulo $113$. Powers of $27$ modulo $113$:\n\n$$\n27^{2} \\equiv 51, \\quad 27^{4} \\equiv 2, \\quad 27^{8} \\equiv 4, \\quad 27^{16} \\equiv 16, \\quad 27^{32} \\equiv 30.\n$$\n\nSince $37 = 32 + 4 + 1$,\n\n$$\n27^{37} \\equiv 27^{32} \\cdot 27^{4} \\cdot 27 \\equiv 30 \\cdot 2 \\cdot 27 \\equiv 38 \\pmod{113},\n$$\n\nso $m_{q} \\equiv 38$.\n\nCombine $m_{p}$ and $m_{q}$ via CRT to obtain $m \\bmod n$. Solve\n\n$$\nm \\equiv 24 \\pmod{101}, \\quad m \\equiv 38 \\pmod{113}.\n$$\n\nWrite $m = 24 + 101 t$ and enforce $24 + 101 t \\equiv 38 \\pmod{113}$, that is\n\n$$\n101 t \\equiv 14 \\pmod{113}.\n$$\n\nCompute the inverse of $101$ modulo $113$. Since $101 \\equiv -12 \\pmod{113}$ and $12 \\cdot 66 \\equiv 1 \\pmod{113}$, the inverse of $-12$ is $-66 \\equiv 47 \\pmod{113}$. Thus $101^{-1} \\equiv 47 \\pmod{113}$, and\n\n$$\nt \\equiv 14 \\cdot 47 \\equiv 658 \\equiv 93 \\pmod{113}.\n$$\n\nTherefore,\n\n$$\nm = 24 + 101 \\cdot 93 = 24 + 9393 = 9417.\n$$\n\nThis agrees with the direct computation modulo $n$. Since $0 \\le 9417  11413$, the decrypted message is\n\n$$\nm = 9417.\n$$\n\nBoth decryption methods yield the identical $m$, as required.", "answer": "$$\\boxed{9417}$$", "id": "3093278"}]}