{"hands_on_practices": [{"introduction": "One of the most celebrated applications of Lagrange's theorem is its connection to solving Diophantine equations. This first exercise will guide you through this connection using the foundational example of $\\sqrt{2}$. You will compute its simple continued fraction, observe its periodic nature, and discover how its convergents systematically generate integer solutions to the famous Pell's equation, $x^2 - 2y^2 = 1$. This practice provides a concrete bridge from the abstract structure of continued fractions to the tangible world of integer equations. [@problem_id:3086645]", "problem": "Let $\\,\\alpha \\in \\mathbb{R}\\,$ be a quadratic irrational, meaning $\\,\\alpha\\,$ is a real root of a quadratic polynomial with integer coefficients and is not rational. A simple continued fraction (SCF) of a real number $\\,\\alpha\\,$ is an expression of the form\n$$\n\\alpha = a_{0} + \\cfrac{1}{a_{1} + \\cfrac{1}{a_{2} + \\cfrac{1}{\\ddots}}}\n$$\nwhere $\\,a_{0} \\in \\mathbb{Z}\\,$ and $\\,a_{k} \\in \\mathbb{Z}_{\\geq 1}\\,$ for all $\\,k \\geq 1\\,$. The $\\,k$th convergent $\\,\\frac{p_{k}}{q_{k}}\\,$ is obtained by truncating the SCF at depth $\\,k\\,$ and evaluating the finite fraction. Lagrangeâ€™s theorem for quadratic irrationals states that the SCF of any quadratic irrational is eventually periodic.\n\nStarting from the definitions above, do the following for $\\,\\sqrt{2}\\,$:\n1. Compute the simple continued fraction expansion of $\\,\\sqrt{2}\\,$ by algorithmic reduction and identify its period.\n2. Using the structure of the convergents $\\,\\frac{p_{k}}{q_{k}}\\,$ of $\\,\\sqrt{2}\\,$, prove that infinitely many pairs $\\,\\bigl(x,y\\bigr) \\in \\mathbb{Z}^{2}\\,$ solve the Pell equation $\\,x^2 - 2y^2 = 1\\,$, and describe how these solutions arise from successive convergents.\n3. Derive, from first principles and without assuming any pre-existing closed-form, a closed-form expression for the $\\,n$th positive solution $\\,\\bigl(x_{n}, y_{n}\\bigr)\\,$ of $\\,x^2 - 2y^2 = 1\\,$ ordered by strictly increasing $\\,x_{n}\\,$, with $\\,n \\geq 1\\,$. Express your final answer as a single analytic expression for $\\,x_{n} + y_{n} \\sqrt{2}\\,$ in terms of $\\,n\\,$. No rounding is required.", "solution": "The problem is valid as it is a well-posed and self-contained question within the established mathematical field of number theory, concerning the relationship between continued fractions, quadratic irrationals, and Pell's equation. All premises and definitions are standard and correct.\n\nThe solution is divided into the three parts as requested.\n\n**1. Simple Continued Fraction of $\\sqrt{2}$**\n\nTo find the simple continued fraction (SCF) of $\\sqrt{2}$, we use the standard algorithm. Let $\\alpha_0 = \\sqrt{2}$. The algorithm proceeds as follows:\n$a_k = \\lfloor \\alpha_k \\rfloor$\n$\\alpha_{k+1} = \\frac{1}{\\alpha_k - a_k}$\n\nFor $k=0$:\n$\\alpha_0 = \\sqrt{2}$. Since $1  \\sqrt{2}  2$, the integer part is $a_0 = \\lfloor \\sqrt{2} \\rfloor = 1$.\nThe remainder is $\\alpha_0 - a_0 = \\sqrt{2} - 1$.\n\nFor $k=1$:\n$\\alpha_1 = \\frac{1}{\\sqrt{2} - 1}$. To find its integer part, we rationalize the denominator:\n$\\alpha_1 = \\frac{1}{\\sqrt{2} - 1} \\times \\frac{\\sqrt{2} + 1}{\\sqrt{2} + 1} = \\frac{\\sqrt{2} + 1}{2-1} = \\sqrt{2} + 1$.\nSince $1  \\sqrt{2}  2$, we have $2  \\sqrt{2} + 1  3$. So, the integer part is $a_1 = \\lfloor \\sqrt{2} + 1 \\rfloor = 2$.\nThe remainder is $\\alpha_1 - a_1 = (\\sqrt{2}+1) - 2 = \\sqrt{2} - 1$.\n\nFor $k=2$:\n$\\alpha_2 = \\frac{1}{\\alpha_1 - a_1} = \\frac{1}{\\sqrt{2} - 1}$.\nThis is the same expression as $\\alpha_1$. Therefore, $\\alpha_2 = \\alpha_1 = \\sqrt{2}+1$, which means $a_2 = a_1 = 2$.\nSince $\\alpha_{k+1}$ depends only on $\\alpha_k$, the sequence of $\\alpha_k$ values, and thus the sequence of partial quotients $a_k$, will be periodic from this point on. We have $\\alpha_k = \\sqrt{2}+1$ and $a_k = 2$ for all $k \\ge 1$.\n\nThe sequence of partial quotients is $a_0 = 1, a_1 = 2, a_2 = 2, a_3 = 2, \\dots$.\nThe simple continued fraction expansion of $\\sqrt{2}$ is:\n$$ \\sqrt{2} = 1 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\ddots}}} $$\nThis is commonly written as $[1; 2, 2, 2, \\dots]$ or $[1; \\overline{2}]$.\nThe period of the continued fraction is the repeating block, which is $\\{2\\}$. The length of the period is $1$.\n\n**2. Pell's Equation and the Convergents of $\\sqrt{2}$**\n\nThe convergents $\\frac{p_k}{q_k}$ of the SCF are calculated using the recurrence relations:\n$p_k = a_k p_{k-1} + p_{k-2}$\n$q_k = a_k q_{k-1} + q_{k-2}$\nwith initial values $p_{-1}=1, q_{-1}=0, p_0=a_0=1, q_0=1$.\n\nLet's compute the first few convergents for $\\sqrt{2}=[1; \\overline{2}]$, where $a_0=1$ and $a_k=2$ for $k \\ge 1$:\n- $k=0$: $\\frac{p_0}{q_0} = \\frac{1}{1}$\n- $k=1$: $p_1 = a_1 p_0 + p_{-1} = 2(1) + 1 = 3$; $q_1 = a_1 q_0 + q_{-1} = 2(1) + 0 = 2$. Convergent is $\\frac{3}{2}$.\n- $k=2$: $p_2 = a_2 p_1 + p_0 = 2(3) + 1 = 7$; $q_2 = a_2 q_1 + q_0 = 2(2) + 1 = 5$. Convergent is $\\frac{7}{5}$.\n- $k=3$: $p_3 = a_3 p_2 + p_1 = 2(7) + 3 = 17$; $q_3 = a_3 q_2 + q_1 = 2(5) + 2 = 12$. Convergent is $\\frac{17}{12}$.\n- $k=4$: $p_4 = a_4 p_3 + p_2 = 2(17) + 7 = 41$; $q_4 = a_4 q_3 + q_2 = 2(12) + 5 = 29$. Convergent is $\\frac{41}{29}$.\n\nNow, let's substitute these pairs $(p_k, q_k)$ into the expression $x^2 - 2y^2$:\n- $(p_0, q_0)=(1,1): 1^2 - 2(1^2) = 1 - 2 = -1$.\n- $(p_1, q_1)=(3,2): 3^2 - 2(2^2) = 9 - 8 = 1$.\n- $(p_2, q_2)=(7,5): 7^2 - 2(5^2) = 49 - 50 = -1$.\n- $(p_3, q_3)=(17,12): 17^2 - 2(12^2) = 289 - 2(144) = 289 - 288 = 1$.\n- $(p_4, q_4)=(41,29): 41^2 - 2(29^2) = 1681 - 2(841) = 1681 - 1682 = -1$.\n\nThe pattern observed is $p_k^2 - 2q_k^2 = (-1)^{k+1}$. This is a known property of convergents of $\\sqrt{D}$. For any solution to the Pell equation $x^2 - 2y^2 = 1$, we must have $p_k^2 - 2q_k^2 = 1$. This occurs when the exponent $k+1$ is even, which means $k$ must be odd.\n\nTherefore, the pairs $(x,y) = (p_k, q_k)$ for $k=1, 3, 5, \\dots$ provide solutions to the Pell equation $x^2 - 2y^2 = 1$.\nThe sequences of numerators $p_k$ and denominators $q_k$ of the convergents are strictly increasing for $k \\ge 1$. Since there are infinitely many odd integers $k$, there are infinitely many distinct convergents $\\frac{p_k}{q_k}$ with $k$ odd. Each of these convergents provides a distinct solution $(x,y)=(p_k,q_k)$ to the equation. This proves that there are infinitely many integer pairs $(x,y)$ that solve $x^2 - 2y^2 = 1$.\nThese solutions are the numerators and denominators of the convergents with odd indices: $(p_1,q_1), (p_3,q_3), (p_5,q_5), \\ldots$.\n\n**3. Closed-Form Expression for Solutions**\n\nWe seek a closed-form expression for the $n$-th positive solution $(x_n, y_n)$, ordered by increasing $x_n$, for $n \\ge 1$. From Part 2, these solutions are given by $(x_n,y_n) = (p_{2n-1}, q_{2n-1})$. To find a closed form, we solve the recurrence relations for $p_k$ and $q_k$.\n\nFor $k \\ge 2$, the partial quotient is always $a_k=2$. The recurrence relations become:\n$p_k = 2 p_{k-1} + p_{k-2}$\n$q_k = 2 q_{k-1} + q_{k-2}$\nThese are linear homogeneous recurrence relations with constant coefficients. The characteristic equation for both is $r^2 - 2r - 1 = 0$.\nThe roots are given by the quadratic formula: $r = \\frac{2 \\pm \\sqrt{4 - 4(1)(-1)}}{2} = \\frac{2 \\pm \\sqrt{8}}{2} = 1 \\pm \\sqrt{2}$.\nLet the roots be $\\lambda_1 = 1+\\sqrt{2}$ and $\\lambda_2 = 1-\\sqrt{2}$.\n\nThe general solution for $p_k$ is $p_k = A\\lambda_1^k + B\\lambda_2^k$ for $k \\ge 1$. We use the initial values $p_1=3$ and $p_2=7$ to find the constants $A$ and $B$.\nFor $k=1: 3 = A(1+\\sqrt{2}) + B(1-\\sqrt{2})$.\nFor $k=2: 7 = A(1+\\sqrt{2})^2 + B(1-\\sqrt{2})^2 = A(3+2\\sqrt{2}) + B(3-2\\sqrt{2})$.\nThis can be written as a system:\n$3 = (A+B) + (A-B)\\sqrt{2}$\n$7 = 3(A+B) + 2(A-B)\\sqrt{2}$\nLet $U=A+B$ and $V=(A-B)\\sqrt{2}$. The system is $3 = U+V$ and $7 = 3U+2V$.\nMultiplying the first equation by $2$ gives $6 = 2U+2V$. Subtracting this from the second equation gives $1=U$, so $A+B=1$.\nThen $V = 3-U = 2$, which implies $(A-B)\\sqrt{2}=2$, so $A-B=\\sqrt{2}$.\nSolving for $A$ and $B$: $2A = 1+\\sqrt{2} \\implies A = \\frac{1+\\sqrt{2}}{2}$, and $2B = 1-\\sqrt{2} \\implies B = \\frac{1-\\sqrt{2}}{2}$.\nThe closed form for $p_k$ for $k \\ge 1$ is:\n$p_k = \\frac{1+\\sqrt{2}}{2}(1+\\sqrt{2})^k + \\frac{1-\\sqrt{2}}{2}(1-\\sqrt{2})^k = \\frac{1}{2}\\left((1+\\sqrt{2})^{k+1} + (1-\\sqrt{2})^{k+1}\\right)$.\n\nSimilarly, for $q_k$, the general solution is $q_k = C\\lambda_1^k + D\\lambda_2^k$ for $k \\ge 1$. We use initial values $q_1=2$ and $q_2=5$.\nFor $k=1: 2 = C(1+\\sqrt{2}) + D(1-\\sqrt{2})$.\nFor $k=2: 5 = C(3+2\\sqrt{2}) + D(3-2\\sqrt{2})$.\nSystem: $2 = (C+D) + (C-D)\\sqrt{2}$ and $5 = 3(C+D) + 2(C-D)\\sqrt{2}$.\nLet $U'=C+D$ and $V'=(C-D)\\sqrt{2}$. The system is $2 = U'+V'$ and $5 = 3U'+2V'$.\n$4 = 2U'+2V'$. Subtracting gives $1=U'$, so $C+D=1$. Then $V'=1$, so $(C-D)\\sqrt{2}=1 \\implies C-D = \\frac{1}{\\sqrt{2}}$.\nSolving for $C$ and $D$: $2C = 1+\\frac{1}{\\sqrt{2}} \\implies C = \\frac{\\sqrt{2}+1}{2\\sqrt{2}}$.\n$2D = 1-\\frac{1}{\\sqrt{2}} \\implies D = \\frac{\\sqrt{2}-1}{2\\sqrt{2}}$.\nThe closed form for $q_k$ for $k \\ge 1$ is:\n$q_k = \\frac{\\sqrt{2}+1}{2\\sqrt{2}}(1+\\sqrt{2})^k + \\frac{\\sqrt{2}-1}{2\\sqrt{2}}(1-\\sqrt{2})^k = \\frac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{k+1} - (1-\\sqrt{2})^{k+1}\\right)$, where we used $(\\sqrt{2}-1) = -(1-\\sqrt{2})$.\n\nThe $n$-th positive solution is $(x_n, y_n) = (p_{2n-1}, q_{2n-1})$. We substitute $k=2n-1$ into the formulas for $p_k$ and $q_k$:\n$x_n = p_{2n-1} = \\frac{1}{2}\\left((1+\\sqrt{2})^{(2n-1)+1} + (1-\\sqrt{2})^{(2n-1)+1}\\right) = \\frac{1}{2}\\left((1+\\sqrt{2})^{2n} + (1-\\sqrt{2})^{2n}\\right)$.\n$y_n = q_{2n-1} = \\frac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{(2n-1)+1} - (1-\\sqrt{2})^{(2n-1)+1}\\right) = \\frac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{2n} - (1-\\sqrt{2})^{2n}\\right)$.\n\nWe are asked for an expression for $x_n + y_n\\sqrt{2}$:\n$x_n + y_n\\sqrt{2} = \\frac{1}{2}\\left((1+\\sqrt{2})^{2n} + (1-\\sqrt{2})^{2n}\\right) + \\sqrt{2} \\cdot \\frac{1}{2\\sqrt{2}}\\left((1+\\sqrt{2})^{2n} - (1-\\sqrt{2})^{2n}\\right)$\n$x_n + y_n\\sqrt{2} = \\frac{1}{2}\\left((1+\\sqrt{2})^{2n} + (1-\\sqrt{2})^{2n}\\right) + \\frac{1}{2}\\left((1+\\sqrt{2})^{2n} - (1-\\sqrt{2})^{2n}\\right)$\n$x_n + y_n\\sqrt{2} = \\frac{1}{2}\\left( (1+\\sqrt{2})^{2n} + (1-\\sqrt{2})^{2n} + (1+\\sqrt{2})^{2n} - (1-\\sqrt{2})^{2n} \\right)$\n$x_n + y_n\\sqrt{2} = \\frac{1}{2}\\left( 2(1+\\sqrt{2})^{2n} \\right) = (1+\\sqrt{2})^{2n}$.\n\nThis expression can be simplified by evaluating $(1+\\sqrt{2})^2$:\n$(1+\\sqrt{2})^2 = 1^2 + 2(1)\\sqrt{2} + (\\sqrt{2})^2 = 1 + 2\\sqrt{2} + 2 = 3+2\\sqrt{2}$.\nTherefore, the expression for the $n$-th solution is:\n$x_n + y_n\\sqrt{2} = ((1+\\sqrt{2})^2)^n = (3+2\\sqrt{2})^n$.\nThis corresponds to taking powers of the fundamental solution $(x_1,y_1) = (p_1,q_1) = (3,2)$, for which $x_1+y_1\\sqrt{2} = 3+2\\sqrt{2}$.", "answer": "$$ \\boxed{(3+2\\sqrt{2})^n} $$", "id": "3086645"}, {"introduction": "Having seen how to analyze the continued fraction of a given number, we now reverse the process to build a number with a specific structure. This practice challenges you to construct a quadratic irrational that has a predetermined preperiod and periodic part. By starting with a \"reduced\" quadratic irrational (which has a purely periodic expansion) and working backward, you will gain a much deeper intuition for the distinction between purely periodic and eventually periodic continued fractions. [@problem_id:3086647]", "problem": "Let $x$ be a real quadratic irrational, meaning that $x$ is a real root of a quadratic equation with integer coefficients that is not rational. The simple continued fraction of $x$ is obtained by iterating the map $T(x) = \\dfrac{1}{x - \\lfloor x \\rfloor}$, producing the sequence of partial quotients $a_{0} = \\lfloor x \\rfloor$, $a_{1} = \\lfloor T(x) \\rfloor$, and so on. A continued fraction is said to have a preperiod of length $k$ if after $k$ applications of $T$ one reaches a real quadratic irrational whose continued fraction is purely periodic. A real quadratic irrational $y$ is called reduced if $y  1$ and its algebraic conjugate $y'$ satisfies $-1  y'  0$, and in this case the simple continued fraction of $y$ is purely periodic.\n\nUsing only these definitions and the iterative construction of simple continued fractions, construct an explicit example of a real quadratic irrational whose simple continued fraction has preperiod of length $k = 3$. Do this by selecting a reduced representative $y$ with pure period and then forming a nonreduced representative $x$ by precomposing $k$ shifts. Concretely, take the purely periodic target to be the quadratic irrational with simple continued fraction $\\left[\\overline{1,2}\\right]$, and prepend exactly three shifts with digits $a_{0} = 2$, $a_{1} = 3$, and $a_{2} = 4$ to obtain a nonreduced representative $x$.\n\nCompute $x$ in exact, simplified radical form, and verify that three applications of the continued fraction shift recover the reduced representative with pure period. Your final answer must be the exact expression you obtain for $x$, written in simplest radical form. Do not provide any intermediate values, only the final exact expression.", "solution": "The problem requires the construction of a real quadratic irrational, denoted as $x$, whose simple continued fraction has a preperiod of length $k=3$ with digits $a_0 = 2$, $a_1 = 3$, and $a_2 = 4$, followed by a purely periodic part corresponding to the reduced quadratic irrational $y = [\\overline{1,2}]$. After finding the value of $x$ in simplified radical form, we must verify that three applications of the continued fraction algorithm recover $y$.\n\nFirst, we determine the value of the purely periodic part, $y$. The continued fraction $y = [\\overline{1,2}]$ can be written as:\n$$y = [1; 2, 1, 2, \\dots] = 1 + \\cfrac{1}{2 + \\cfrac{1}{1 + \\cfrac{1}{2 + \\dots}}}$$\nThis structure implies that $y$ satisfies the equation:\n$$y = 1 + \\frac{1}{2 + \\frac{1}{y}}$$\nWe simplify this expression to find the quadratic equation for $y$:\n$$y = 1 + \\frac{y}{2y + 1} = \\frac{(2y + 1) + y}{2y + 1} = \\frac{3y + 1}{2y + 1}$$\nMultiplying by the denominator $(2y + 1)$ gives:\n$$y(2y + 1) = 3y + 1$$\n$$2y^2 + y = 3y + 1$$\n$$2y^2 - 2y - 1 = 0$$\nUsing the quadratic formula, $y = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$, with $a=2$, $b=-2$, and $c=-1$:\n$$y = \\frac{-(-2) \\pm \\sqrt{(-2)^2 - 4(2)(-1)}}{2(2)} = \\frac{2 \\pm \\sqrt{4 + 8}}{4} = \\frac{2 \\pm 2\\sqrt{3}}{4} = \\frac{1 \\pm \\sqrt{3}}{2}$$\nSince $y = [1; \\dots]$, its value must be greater than $1$. We therefore choose the positive root:\n$$y = \\frac{1 + \\sqrt{3}}{2}$$\nAs a check, we confirm that $y$ is a reduced quadratic irrational. We have $y = \\frac{1 + \\sqrt{3}}{2} \\approx \\frac{1+1.732}{2} = 1.366  1$. Its algebraic conjugate is $y' = \\frac{1 - \\sqrt{3}}{2} \\approx -0.366$, which satisfies $-1  y'  0$. Thus, $y$ is indeed reduced.\n\nNext, we construct $x$ using the prepended digits $a_0 = 2$, $a_1 = 3$, $a_2 = 4$ and the periodic part $y$. The continued fraction for $x$ is $[a_0; a_1, a_2, y]$.\n$$x = [2; 3, 4, y] = 2 + \\cfrac{1}{3 + \\cfrac{1}{4 + \\cfrac{1}{y}}}$$\nWe compute this value by substituting $y = \\frac{1 + \\sqrt{3}}{2}$ and simplifying from the inside out.\nFirst, we find the value of $4 + \\frac{1}{y}$:\n$$4 + \\frac{1}{y} = 4 + \\frac{2}{1 + \\sqrt{3}} = 4 + \\frac{2(1 - \\sqrt{3})}{(1 + \\sqrt{3})(1 - \\sqrt{3})} = 4 + \\frac{2(1 - \\sqrt{3})}{1 - 3} = 4 + \\frac{2(1 - \\sqrt{3})}{-2} = 4 - (1 - \\sqrt{3}) = 3 + \\sqrt{3}$$\nNext, we substitute this into the next level of the fraction:\n$$3 + \\frac{1}{4 + \\frac{1}{y}} = 3 + \\frac{1}{3 + \\sqrt{3}} = 3 + \\frac{3 - \\sqrt{3}}{(3 + \\sqrt{3})(3 - \\sqrt{3})} = 3 + \\frac{3 - \\sqrt{3}}{9 - 3} = 3 + \\frac{3 - \\sqrt{3}}{6} = \\frac{18 + 3 - \\sqrt{3}}{6} = \\frac{21 - \\sqrt{3}}{6}$$\nFinally, we compute $x$:\n$$x = 2 + \\frac{1}{\\frac{21 - \\sqrt{3}}{6}} = 2 + \\frac{6}{21 - \\sqrt{3}}$$\nTo simplify, we rationalize the denominator of the fraction:\n$$\\frac{6}{21 - \\sqrt{3}} = \\frac{6(21 + \\sqrt{3})}{(21 - \\sqrt{3})(21 + \\sqrt{3})} = \\frac{6(21 + \\sqrt{3})}{21^2 - (\\sqrt{3})^2} = \\frac{6(21 + \\sqrt{3})}{441 - 3} = \\frac{6(21 + \\sqrt{3})}{438}$$\nSince $438 = 6 \\times 73$, we can simplify the fraction:\n$$\\frac{6(21 + \\sqrt{3})}{438} = \\frac{21 + \\sqrt{3}}{73}$$\nNow, we substitute this back into the expression for $x$:\n$$x = 2 + \\frac{21 + \\sqrt{3}}{73} = \\frac{2 \\times 73 + 21 + \\sqrt{3}}{73} = \\frac{146 + 21 + \\sqrt{3}}{73} = \\frac{167 + \\sqrt{3}}{73}$$\nThis is the exact value of $x$ in simplified radical form.\n\nTo complete the problem, we verify that three applications of the continued fraction map $T(z) = \\frac{1}{z - \\lfloor z \\rfloor}$ on $x$ recover $y$. Let $x_0 = x$.\n\nStep 1:\n$$x_0 = \\frac{167 + \\sqrt{3}}{73}$$\nSince $1  \\sqrt{3}  2$, we have $168  167 + \\sqrt{3}  169$. Thus, $\\frac{168}{73}  x_0  \\frac{169}{73}$, which is approximately $2.301  x_0  2.315$.\nSo, $a_0 = \\lfloor x_0 \\rfloor = 2$, which matches the first given digit.\nThe first remainder is $x_1$:\n$$x_1 = \\frac{1}{x_0 - a_0} = \\frac{1}{\\frac{167 + \\sqrt{3}}{73} - 2} = \\frac{1}{\\frac{167 + \\sqrt{3} - 146}{73}} = \\frac{73}{21 + \\sqrt{3}}$$\n$$x_1 = \\frac{73(21 - \\sqrt{3})}{(21 + \\sqrt{3})(21 - \\sqrt{3})} = \\frac{73(21 - \\sqrt{3})}{438} = \\frac{21 - \\sqrt{3}}{6}$$\n\nStep 2:\n$$x_1 = \\frac{21 - \\sqrt{3}}{6}$$\nSince $1  \\sqrt{3}  2$, we have $19  21 - \\sqrt{3}  20$. Thus, $\\frac{19}{6}  x_1  \\frac{20}{6}$, which is approximately $3.16  x_1  3.34$.\nSo, $a_1 = \\lfloor x_1 \\rfloor = 3$, which matches the second given digit.\nThe second remainder is $x_2$:\n$$x_2 = \\frac{1}{x_1 - a_1} = \\frac{1}{\\frac{21 - \\sqrt{3}}{6} - 3} = \\frac{1}{\\frac{21 - \\sqrt{3} - 18}{6}} = \\frac{6}{3 - \\sqrt{3}}$$\n$$x_2 = \\frac{6(3 + \\sqrt{3})}{(3 - \\sqrt{3})(3 + \\sqrt{3})} = \\frac{6(3 + \\sqrt{3})}{9 - 3} = \\frac{6(3 + \\sqrt{3})}{6} = 3 + \\sqrt{3}$$\n\nStep 3:\n$$x_2 = 3 + \\sqrt{3}$$\nSince $1.7  \\sqrt{3}  1.8$, we have $4.7  x_2  4.8$.\nSo, $a_2 = \\lfloor x_2 \\rfloor = 4$, which matches the third given digit.\nThe third remainder is $x_3$:\n$$x_3 = \\frac{1}{x_2 - a_2} = \\frac{1}{(3 + \\sqrt{3}) - 4} = \\frac{1}{\\sqrt{3} - 1}$$\n$$x_3 = \\frac{1(\\sqrt{3} + 1)}{(\\sqrt{3} - 1)(\\sqrt{3} + 1)} = \\frac{\\sqrt{3} + 1}{3 - 1} = \\frac{1 + \\sqrt{3}}{2}$$\nThis resulting value $x_3$ is precisely the value of $y$ we started with. The verification is successful. The number $x = \\frac{167 + \\sqrt{3}}{73}$ has the continued fraction $[2; 3, 4, \\overline{1,2}]$.", "answer": "$$\\boxed{\\frac{167 + \\sqrt{3}}{73}}$$", "id": "3086647"}, {"introduction": "How can we compute the continued fraction of a number like $\\sqrt{D}$ efficiently and without the precision errors of floating-point arithmetic? This final practice focuses on the computational engine that makes the theory practical. You will derive an elegant algorithm that finds the partial quotients of $\\sqrt{D}$ using only integer arithmetic, revealing the robust algebraic machinery that guarantees the process is exact and will always terminate by finding the period. [@problem_id:3086643]", "problem": "Given a fixed non-square positive integer $D$, the continued fraction expansion of $\\sqrt{D}$ is periodic. This is a special case of Lagrange's theorem for quadratic irrationals. The goal is to derive, justify, and implement an integer-only algorithm that computes the continued fraction of $\\sqrt{D}$ by maintaining and updating a triple of integers $(m_n,d_n,a_n)$ at each step, based only on the foundational definitions of simple continued fractions and the algebra of quadratic irrationals. You must analyze the per-step bit complexity of the arithmetic operations in terms of the binary length of the integers manipulated. Your final program must use only integer arithmetic, must not rely on floating-point operations, and must never require external input.\n\nYour derivation should begin from the definition of a simple continued fraction and the identity that produces the next complete quotient by inverting the fractional part. From this starting point and the algebraic identity for quadratic irrationals, derive an integer-only update for a triple $(m_n,d_n,a_n)$ that yields successive partial quotients of $\\sqrt{D}$. You must establish that the updates preserve integrality and positivity where required, and that this process detects the periodicity guaranteed by Lagrange's theorem without any floating-point approximation. You must also reason about the bit complexity per iteration step: in particular, express the cost of a single iteration in terms of the binary length of integers of size depending on $D$, and explain why the per-step bit complexity is bounded by a constant multiple of the number of bits needed to represent $D$.\n\nYour program must implement the derived integer-only algorithm. For each test case, it must:\n- Accept a pair $(D,k)$ from a fixed test suite hardcoded in the program, where $D$ is a positive integer and $k$ is a positive integer.\n- If $D$ is a perfect square, output the trivial continued fraction consisting only of the integer part $a_0=\\lfloor \\sqrt{D}\\rfloor$, and report period length $0$.\n- If $D$ is not a perfect square, compute:\n  - The period length $L$ of the continued fraction of $\\sqrt{D}$.\n  - The first $k$ partial quotients of $\\sqrt{D}$ using strictly integer arithmetic, beginning with the integer part $a_0$.\n  - The maximum observed binary length across all integers $m_n$ and $d_n$ encountered while detecting one full period (you must include all $m_n$ and $d_n$ up to and including the step that first detects a repeat of the state needed to conclude periodicity).\n  - A boolean indicator that this observed maximum binary length does not exceed the bound $\\lceil \\log_2(4\\lfloor \\sqrt{D}\\rfloor)\\rceil$. This bound serves as a practical certificate that the integers involved per step are small relative to $D$. For perfect squares, use the convention that only $a_0$ is considered and this boolean must be reported accordingly.\n\nYour program must produce a single line of output containing the results for all test cases in the following structured format. For each test case $(D,k)$ in the given order, output a list\n$[L,\\ \\text{partials},\\ M,\\ B,\\ \\text{ok}]$\nwhere:\n- $L$ is the period length (an integer, with $L=0$ when $D$ is a perfect square),\n- $\\text{partials}$ is the list of the first $k$ partial quotients for non-square $D$ and the singleton list $[a_0]$ for perfect squares,\n- $M$ is the maximum observed binary length across all $m_n$ and $d_n$ used during period detection (an integer; for perfect squares, take $M$ to be the binary length of $a_0$),\n- $B=\\lceil \\log_2(4\\lfloor \\sqrt{D}\\rfloor)\\rceil$ (an integer),\n- $\\text{ok}$ is the boolean value of $M\\le B$.\n\nYour program must aggregate the results for all test cases into a single list and print it as one line, for example:\n$[[L_1,\\ \\text{partials}_1,\\ M_1,\\ B_1,\\ \\text{ok}_1],\\ [L_2,\\ \\text{partials}_2,\\ M_2,\\ B_2,\\ \\text{ok}_2],\\ \\ldots]$.\n\nTest suite to be used (hardcoded in the program, in this order):\n- $(D,k)=(2,10)$,\n- $(D,k)=(3,8)$,\n- $(D,k)=(4,5)$,\n- $(D,k)=(7,12)$,\n- $(D,k)=(13,15)$,\n- $(D,k)=(61,18)$,\n- $(D,k)=(991,20),\n- $(D,k)=(2000,25)$.\n\nAll outputs must be pure numbers or booleans. There are no physical units involved. Angles do not appear. Do not print any text other than the specified single-line list of results. The program must be fully deterministic and self-contained. The only permissible libraries are those allowed by the execution environment. The final output must be exactly one line in the specified format.", "solution": "The problem is assessed to be valid. It constitutes a well-defined task in computational number theory, grounded in established mathematical principles (Lagrange's theorem on periodic continued fractions), with a clear, objective, and internally consistent set of requirements. The problem asks for the derivation, implementation, and complexity analysis of an integer-only algorithm to compute the continued fraction expansion of $\\sqrt{D}$.\n\n### 1. Derivation of the Integer-Only Algorithm\n\nThe simple continued fraction of a real number $\\xi$ is defined by the recurrence relation:\nLet $\\xi_0 = \\xi$. For $n \\ge 0$, define $a_n = \\lfloor \\xi_n \\rfloor$ and $\\xi_{n+1} = \\frac{1}{\\xi_n - a_n}$, provided $\\xi_n$ is not an integer. The sequence $a_0, a_1, a_2, \\ldots$ is the sequence of partial quotients.\n\nWe are interested in $\\xi = \\sqrt{D}$ where $D$ is a positive non-square integer. We seek to represent each complete quotient $\\xi_n$ in the form of a quadratic irrational:\n$$\n\\xi_n = \\frac{m_n + \\sqrt{D}}{d_n}\n$$\nwhere $m_n$ and $d_n$ are integers.\n\n**Initialization (n=0):**\nFor the initial term $\\xi_0 = \\sqrt{D}$, we can write it as $\\xi_0 = \\frac{0 + \\sqrt{D}}{1}$. We therefore initialize our integer triple with $m_0 = 0$ and $d_0 = 1$. Both are integers. The first partial quotient is $a_0 = \\lfloor \\xi_0 \\rfloor = \\lfloor \\sqrt{D} \\rfloor$.\n\n**Derivation of the Recurrence Relations:**\nAssuming at step $n$ we have $\\xi_n = \\frac{m_n + \\sqrt{D}}{d_n}$, we derive the form for $\\xi_{n+1}$:\n$$\n\\xi_{n+1} = \\frac{1}{\\xi_n - a_n} = \\frac{1}{\\frac{m_n + \\sqrt{D}}{d_n} - a_n} = \\frac{d_n}{m_n + \\sqrt{D} - a_n d_n} = \\frac{d_n}{(m_n - a_n d_n) + \\sqrt{D}}\n$$\nTo rationalize the denominator and match our target form, we multiply the numerator and denominator by the conjugate of the denominator, which is $(m_n - a_n d_n) - \\sqrt{D}$. For algebraic convenience, we write the denominator as $\\sqrt{D} - (a_n d_n - m_n)$ and its conjugate as $\\sqrt{D} + (a_n d_n - m_n)$.\n$$\n\\xi_{n+1} = \\frac{d_n \\left( (a_n d_n - m_n) + \\sqrt{D} \\right)}{\\left(\\sqrt{D} - (a_n d_n - m_n)\\right)\\left(\\sqrt{D} + (a_n d_n - m_n)\\right)} = \\frac{d_n( (a_n d_n - m_n) + \\sqrt{D})}{D - (a_n d_n - m_n)^2}\n$$\nWe define a new integer $m_{n+1}$ from the numerator:\n$$\nm_{n+1} = a_n d_n - m_n\n$$\nSubstituting this into the expression for $\\xi_{n+1}$ gives:\n$$\n\\xi_{n+1} = \\frac{d_n (m_{n+1} + \\sqrt{D})}{D - m_{n+1}^2}\n$$\nTo match the form $\\xi_{n+1} = \\frac{m_{n+1} + \\sqrt{D}}{d_{n+1}}$, we must have:\n$$\n\\frac{1}{d_{n+1}} = \\frac{d_n}{D - m_{n+1}^2}\n$$\nThis yields the update rule for $d_{n+1}$:\n$$\nd_{n+1} = \\frac{D - m_{n+1}^2}{d_n}\n$$\nThe partial quotient $a_n$ itself needs to be computed using integer arithmetic. Since $a_n = \\lfloor \\xi_n \\rfloor = \\left\\lfloor \\frac{m_n + \\sqrt{D}}{d_n} \\right\\rfloor$, we use the integer part of $\\sqrt{D}$, which is $a_0 = \\lfloor \\sqrt{D} \\rfloor$. We compute $a_n$ as:\n$$\na_n = \\left\\lfloor \\frac{m_n + a_0}{d_n} \\right\\rfloor\n$$\nThis is correct because it can be shown that for the sequence generated for $\\sqrt{D}$, this integer-only calculation yields the same $a_n$ as the floating-point version.\n\n**Proof of Integrality and Positivity:**\nThe algorithm is an \"integer-only\" algorithm if $m_n$ and $d_n$ remain integers for all $n$.\n- **Base Case:** $m_0=0$ and $d_0=1$ are integers.\n- **Inductive Step:** Assume at step $n$, $m_n, d_n$ are integers. $a_n = \\lfloor (m_n+a_0)/d_n \\rfloor$ is an integer by definition. Then $m_{n+1} = a_n d_n - m_n$ is clearly an integer. For $d_{n+1}$ to be an integer, $d_n$ must divide $D - m_{n+1}^2$. We show this by relating it to the previous step's value $d_n = (D - m_n^2)/d_{n-1}$, which means $D-m_n^2 = d_n d_{n-1}$.\n$$\nD - m_{n+1}^2 = D - (a_n d_n - m_n)^2 = D - m_n^2 - (a_n d_n)^2 + 2a_n d_n m_n = d_{n-1} d_n - a_n^2 d_n^2 + 2a_n d_n m_n\n$$\n$$\nD - m_{n+1}^2 = d_n (d_{n-1} - a_n^2 d_n + 2a_n m_n)\n$$\nThis demonstrates that $D - m_{n+1}^2$ is an integer multiple of $d_n$, hence $d_{n+1} = (D-m_{n+1}^2)/d_n$ is an integer. By induction, all $m_n$ and $d_n$ are integers.\n\nFurthermore, for $n \\ge 1$, $\\xi_n = 1/(\\xi_{n-1}-a_{n-1})  1$. As $\\xi_n = (m_n+\\sqrt{D})/d_n$, and it can be shown that the conjugate $\\xi'_n = (m_n-\\sqrt{D})/d_n$ satisfies $-1  \\xi'_n  0$ for $n \\ge 1$, we can deduce that $d_n0$. Specifically, $\\xi_n - \\xi'_n = 2\\sqrt{D}/d_n  1 - (-1) = 2$ is not strictly guaranteed, but $\\xi_n  1$ and $\\xi'_n  0$ which implies their product $\\xi_n\\xi'_n = (m_n^2-D)/d_n^2  0$, so $m_n^2  D$. This implies $D-m_n^2  0$. Since $d_{n+1} = (D-m_{n+1}^2)/d_n$ and $d_0=10$, it follows by induction that if $d_n  0$, then $d_{n+1}  0$. Thus, all $d_n$ are positive integers.\n\n### 2. Periodicity and Boundedness\n\nThe continued fraction of $\\sqrt{D}$ is known to be periodic for non-square $D$, of the form $[a_0; \\overline{a_1, a_2, \\ldots, a_L}]$. The algorithm detects this period by observing a repetition in the sequence of integer pairs $(m_n, d_n)$.\nFor $n \\ge 1$, the values of $m_n$ and $d_n$ are bounded:\n$$\n0  m_n \\le \\lfloor\\sqrt{D}\\rfloor \\quad \\text{and} \\quad 0  d_n \\le 2\\lfloor\\sqrt{D}\\rfloor\n$$\nSince there are only a finite number of possible integer pairs $(m_n, d_n)$, the sequence must eventually repeat. By the pigeonhole principle, there exist indices $i  j$ such that $(m_i, d_i) = (m_j, d_j)$. Since the recurrence relations uniquely determine the next state, this implies that the sequence of triples $(m_k, d_k, a_k)$ is periodic for $k \\ge i$. For $\\sqrt{D}$, the period is known to begin at $n=1$. Thus, the first repetition occurs when $(m_{L+1}, d_{L+1}) = (m_1, d_1)$ for some period length $L \\ge 1$.\n\n### 3. Per-Step Bit Complexity Analysis\n\nLet $k = \\lceil \\log_2 D \\rceil$ be the number of bits required to represent $D$.\nThe bounds on $m_n$ and $d_n$ imply that their magnitudes are $O(\\sqrt{D})$. The bit length of these integers is therefore $O(\\log(\\sqrt{D})) = O(\\frac{1}{2} \\log D) = O(k)$. The partial quotients $a_n$ are also of size $O(\\sqrt{D})$, so their bit length is also $O(k)$.\n\nWe analyze the complexity of the arithmetic operations in a single iteration of the algorithm:\n1.  $a_n = \\lfloor (m_n + a_0) / d_n \\rfloor$: This involves an addition of two $O(k)$-bit integers, which takes $O(k)$ time, followed by a division of an $O(k)$-bit integer by another $O(k)$-bit integer. Using standard long division, this takes $O(k^2)$ time.\n2.  $m_{n+1} = a_n d_n - m_n$: This involves a multiplication of two $O(k)$-bit integers, $a_n$ and $d_n$. The product $a_n d_n$ can be of size up to $O(D)$, meaning its bit length is $O(k)$. The multiplication takes $O(k^2)$ time. The subsequent subtraction takes $O(k)$ time.\n3.  $d_{n+1} = (D - m_{n+1}^2) / d_n$: This step involves squaring an $O(k)$-bit integer, $m_{n+1}$, which costs $O(k^2)$ and produces an $O(k)$-bit result (since $m_{n+1}^2  D$). The subtraction from $D$ takes $O(k)$. The final division of the $O(k)$-bit result by the $O(k)$-bit integer $d_n$ takes $O(k^2)$.\n\nEach step is dominated by multiplication and division operations on numbers with bit length proportional to $\\log D$. Therefore, the per-step bit complexity is $O((\\log D)^2)$.\n\nThe problem's query about why the complexity is bounded by a \"constant multiple of the number of bits needed to represent $D$\" is likely a reference to the size of the operands, not the time complexity of the operations. As shown, all integers manipulated within the loop ($m_n, d_n, a_n$, and intermediate products like $a_n d_n$ or $m_{n+1}^2$) have a bit length that is $O(\\log D)$, which is a constant multiple of the bit length of $D$ itself. This property is critical, as it prevents the numbers from growing indefinitely, ensuring the per-step cost remains stable.\n\nThe program will verify the practical bound $M \\le B$, where $M$ is the observed maximum bit length of $m_n, d_n$ and $B = \\lceil \\log_2(4\\lfloor \\sqrt{D}\\rfloor)\\rceil$. The theoretical bounds on $m_n$ and $d_n$ suggest this inequality should hold.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport math\n\ndef solve():\n    \"\"\"\n    Solves the continued fraction problem for a suite of test cases.\n    \"\"\"\n    test_cases = [\n        (2, 10),\n        (3, 8),\n        (4, 5),\n        (7, 12),\n        (13, 15),\n        (61, 18),\n        (991, 20),\n        (2000, 25),\n    ]\n\n    all_results = []\n    for D, k in test_cases:\n        result = compute_cf_sqrt_d(D, k)\n        all_results.append(result)\n\n    # Final print statement in the exact required format.\n    # Convert bools to lowercase for standard JSON-like output.\n    # The problem implies a python list `repr` output.\n    # [[L1, partials1, M1, B1, True], [L2, partials2, M2, B2, False], ...]\n    print(str(all_results).replace(\"'\", \"\"))\n\n\ndef compute_cf_sqrt_d(D, k):\n    \"\"\"\n    Computes the continued fraction of sqrt(D) using an integer-only algorithm.\n\n    Args:\n        D (int): A positive integer.\n        k (int): The number of partial quotients to compute.\n\n    Returns:\n        list: A list containing [L, partials, M, B, ok].\n    \"\"\"\n    if D = 0:\n        raise ValueError(\"D must be a positive integer.\")\n\n    a0 = math.isqrt(D)\n    \n    # Calculate the bound B = ceil(log2(4*a0))\n    # (N-1).bit_length() computes ceil(log2(N)) for N0.\n    # If a0 is 0 (only if D=0, which is ruled out), this would be ill-defined.\n    # Since D is positive, a0 = 1 if D is a perfect square = 1.\n    # if a0=0 for D1, then this would fail. But D is a positive integer.\n    # for D=1, a0 = 1.\n    B = (4 * a0 - 1).bit_length() if a0  0 else 0\n\n\n    # Case 1: D is a perfect square\n    if a0 * a0 == D:\n        L = 0\n        partials = [a0]\n        # Per problem, for perfect squares, M is bit length of a0\n        M = a0.bit_length()\n        ok = M = B\n        return [L, partials, M, B, ok]\n\n    # Case 2: D is not a perfect square\n    partials_list = [a0]\n    period_partials = []\n\n    m = 0\n    d = 1\n    \n    # Track m_n, d_n for period detection and bit length analysis.\n    # We must include m0, d0, and all subsequent pairs up to the one that\n    # detects the period.\n    m_history = [m]\n    d_history = [d]\n\n    # seen stores (m_n, d_n) - n\n    seen_states = {}\n\n    # The period of sqrt(D) starts from a_1. So we look for a repeat of (m_n, d_n)\n    # where the first occurrence is n=1.\n    n = 0\n    while True:\n        n += 1\n        \n        # Calculate m_{n}, d_{n}\n        # Note: the a used here is a_{n-1}\n        m = partials_list[-1] * d - m\n        d = (D - m * m) // d\n        \n        m_history.append(m)\n        d_history.append(d)\n\n        state = (m, d)\n        if state in seen_states:\n            # Period detected\n            start_index = seen_states[state]\n            L = n - start_index\n            break\n        \n        seen_states[state] = n\n\n        #Calculate a_n\n        a_n = (m + a0) // d\n        partials_list.append(a_n)\n        if n  0: # a_1 onwards forms the periodic part\n          period_partials.append(a_n)\n\n    # After finding the period, construct the list of first k partials.\n    final_partials = [a0]\n    periodic_part = partials_list[1:1+L]\n\n    # Append periodic parts until at least k-1 more elements are added\n    idx = 0\n    while len(final_partials)  k:\n        final_partials.append(periodic_part[idx % L])\n        idx += 1\n    \n    # Calculate M: maximum observed binary length of any m_n or d_n\n    # up to and including the step that detected the period.\n    max_val = 0\n    for val in m_history + d_history:\n        if val  max_val:\n            max_val = val\n    M = max_val.bit_length()\n    \n    ok = M = B\n\n    return [L, final_partials, M, B, ok]\n\nsolve()\n```", "id": "3086643"}]}