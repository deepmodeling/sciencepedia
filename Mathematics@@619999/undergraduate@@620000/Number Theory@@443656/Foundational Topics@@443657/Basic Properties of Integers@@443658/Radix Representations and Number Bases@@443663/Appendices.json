{"hands_on_practices": [{"introduction": "Understanding the structure of numbers in a given base is a cornerstone of number theory. This practice explores a fundamental property of integers of the form $b^k-1$, revealing a simple and elegant pattern in their base-$b$ representation. By applying the formula for a finite geometric series, you will rigorously justify why these numbers consist of a string of the largest possible digit, $b-1$, providing a deeper insight into the polynomial nature of radix systems. [@problem_id:3089136]", "problem": "Let $b \\geq 2$ be an integer base and let $k \\in \\mathbb{N}$ be a positive integer. Define $n = b^{k} - 1$. Using only the definition of base-$b$ expansion for nonnegative integers and standard facts about finite geometric series, determine the base-$b$ representation of $n$ and rigorously justify why each of its $k$ digits equals $b-1$. Then, for the base-$b$ digit-sum function $s_{b}(m)$, defined by $s_{b}(m) = \\sum_{i=0}^{t} d_{i}$ where $m = \\sum_{i=0}^{t} d_{i} b^{i}$ with $0 \\leq d_{i} \\leq b-1$, compute $s_{b}(n)$. Express your final answer as a single closed-form expression. No rounding is required.", "solution": "The user wants to find the base-$b$ representation of the integer $n = b^k - 1$ and then compute its digit-sum, $s_b(n)$. The problem is well-defined and requires justification based on the definition of base-$b$ expansions and the formula for a finite geometric series.\n\nFirst, we will establish the base-$b$ representation of $n = b^k - 1$. The problem statement directs us to use the formula for a finite geometric series, which is given by $\\sum_{i=0}^{m-1} r^i = \\frac{r^m - 1}{r-1}$ for $r \\neq 1$.\n\nLet us consider a number whose base-$b$ representation consists of $k$ digits, each equal to the value $b-1$. The value of such a number is given by the polynomial in $b$:\n$$ \\sum_{i=0}^{k-1} (b-1)b^i $$\nWe can factor out the constant term $(b-1)$ from the summation:\n$$ (b-1) \\sum_{i=0}^{k-1} b^i $$\nThe sum $\\sum_{i=0}^{k-1} b^i$ is a finite geometric series with the first term being $b^0 = 1$, the common ratio being $b$, and there being $k$ terms in the sum (from $i=0$ to $i=k-1$). Since the problem specifies $b \\geq 2$, the ratio $b$ is not equal to $1$. We can apply the standard formula for the sum of a geometric series:\n$$ \\sum_{i=0}^{k-1} b^i = \\frac{b^k - 1}{b - 1} $$\nSubstituting this result back into our expression for the number's value, we get:\n$$ (b-1) \\left( \\frac{b^k - 1}{b - 1} \\right) $$\nSince $b \\geq 2$, $b-1 \\neq 0$, so we can cancel the $(b-1)$ terms in the numerator and denominator, which yields:\n$$ b^k - 1 $$\nThis is precisely the definition of the integer $n$. Thus, we have shown that $n = \\sum_{i=0}^{k-1} (b-1)b^i$.\n\nNow, we must rigorously justify why this is the unique base-$b$ representation of $n$. A base-$b$ representation of a non-negative integer $m$ is an expression of the form $m = \\sum_{i=0}^{t} d_i b^i$, where the coefficients $d_i$, called the digits, must satisfy the condition $0 \\leq d_i \\leq b-1$ for all $i$. The fundamental theorem of arithmetic for number bases guarantees that for any given integer base $b \\geq 2$, every non-negative integer has a unique such representation.\n\nIn our expression $n = \\sum_{i=0}^{k-1} (b-1)b^i$, the coefficients are $d_i = b-1$ for $i = 0, 1, \\dots, k-1$. We must check if these coefficients are valid digits in base $b$. The condition is $0 \\leq d_i \\leq b-1$. For our coefficients, $d_i = b-1$. Since $b$ is an integer and $b \\geq 2$, we have $b-1 \\geq 1$. Thus, the inequality $0 \\leq b-1 \\leq b-1$ is satisfied.\nSince we have found an expansion for $n$ in the form of a sum of powers of $b$ with coefficients that are valid digits, and since this representation is unique, we have successfully determined the base-$b$ representation of $n$. This representation consists of $k$ digits (as the highest power of $b$ is $b^{k-1}$), and each digit $d_i$ for $i=0, \\dots, k-1$ is equal to $b-1$. In positional notation, this would be written as the string of $k$ digits $(b-1)(b-1)\\dots(b-1)_b$.\n\nNext, we are asked to compute the base-$b$ digit-sum of $n$, denoted by $s_b(n)$. The function $s_b(m)$ is defined as the sum of the digits of $m$ in its base-$b$ representation: $s_b(m) = \\sum_{i=0}^{t} d_i$.\nFor our integer $n$, the representation is $n = \\sum_{i=0}^{k-1} (b-1)b^i$. The digits are $d_i = b-1$ for $i=0, 1, \\dots, k-1$.\nTherefore, the digit-sum is:\n$$ s_b(n) = \\sum_{i=0}^{k-1} d_i = \\sum_{i=0}^{k-1} (b-1) $$\nThis is a sum of the constant value $(b-1)$ repeated $k$ times. The value of this sum is simply the product of the constant term and the number of terms:\n$$ s_b(n) = k \\times (b-1) $$\nThis is a closed-form expression for the digit-sum of $n = b^k - 1$ in base $b$.", "answer": "$$\n\\boxed{k(b-1)}\n$$", "id": "3089136"}, {"introduction": "This practice challenges the conventional notion that number bases must be positive integers by introducing the base $-2$ system, also known as negabinary. You will explore how this system can uniquely represent all integers, both positive and negative, using only the digits $\\{0,1\\}$ without needing a separate sign. The exercise guides you through deriving the representation algorithm from first principles and performing arithmetic in this unfamiliar but powerful system. [@problem_id:3089124]", "problem": "Let $b$ be an integer with $|b| \\geq 2$. A positional radix representation of an integer $n$ in base $b$ is an expression of the form $n = \\sum_{k=0}^{m} d_{k} b^{k}$ with digits $d_{k}$ drawn from a fixed finite digit set. In standard base $10$ one uses digits $\\{0,1,\\dots,9\\}$, and negative numbers are indicated by an external sign bit or minus symbol. In contrast, for base $-2$, one can attempt to use the digit set $\\{0,1\\}$ without any external sign bit.\n\nUsing only the division algorithm in the ring of integers $\\mathbb{Z}$ and the basic definition of positional representations, derive from first principles that every integer $n \\in \\mathbb{Z}$ admits a representation in base $-2$ of the form $n = \\sum_{k=0}^{m} d_{k} (-2)^{k}$ with $d_{k} \\in \\{0,1\\}$, and that this representation is unique. Explain why this implies there is no separate sign bit in base $-2$; that is, the same digit set $\\{0,1\\}$ suffices to represent both positive and negative integers.\n\nThen, compute explicitly the base $-2$ expansion of the integer $n = 137$ by deriving its digits $d_{k} \\in \\{0,1\\}$.\n\nNext, perform and verify the following operations in base $-2$ using the standard column-wise addition and long multiplication adapted to base $-2$:\n- Compute $A = 10101_{(-2)} + 1101_{(-2)}$ and confirm its base $10$ value by direct evaluation.\n- Compute $B = 1011_{(-2)} \\cdot 1001_{(-2)}$ and confirm its base $10$ value by direct evaluation.\n\nFinally, let $E$ denote the base $-2$ numeral found for $137$. Define $\\mathrm{val}_{10}$ to be the evaluation map that sends a base $-2$ numeral $\\sum_{k=0}^{m} d_{k} (-2)^{k}$ to its corresponding base $10$ integer $\\sum_{k=0}^{m} d_{k} (-2)^{k}$. Compute the single numerical quantity\n$$\nS \\;=\\; \\mathrm{val}_{10}(A) \\;+\\; 2\\,\\mathrm{val}_{10}(B) \\;+\\; \\mathrm{val}_{10}(E).\n$$\nExpress the final answer $S$ as an exact integer in base $10$ (no rounding is needed).", "solution": "**Part 1: Existence and Uniqueness of Base $-2$ Representation**\n\nWe must show that for any integer $n \\in \\mathbb{Z}$, there exists a unique sequence of digits $(d_k)_{k=0}^m$ with $d_k \\in \\{0, 1\\}$ such that $n = \\sum_{k=0}^{m} d_{k} (-2)^{k}$.\n\n**Existence:**\nThe proof is constructive, based on the Euclidean division algorithm. The division algorithm states that for any integers $a$ and $c$ with $c \\neq 0$, there exist unique integers $q$ and $r$ such that $a = qc + r$ and $0 \\leq r  |c|$.\nLet us apply this to our base $b = -2$. For any integer $n_k$, we can write:\n$n_k = q (-2) + r$, where the remainder $r$ satisfies $0 \\leq r  |-2|=2$. Thus, $r$ must be in the set $\\{0, 1\\}$, which is our desired digit set.\nLet $n_0 = n$. We generate a sequence of quotients $n_k$ and remainders $d_k$ as follows:\n$n_0 = n_{1}(-2) + d_0$\n$n_1 = n_{2}(-2) + d_1$\n...\n$n_k = n_{k+1}(-2) + d_k$\n...\nwhere at each step $d_k \\in \\{0, 1\\}$. From this recurrence, we can write $n_k = d_k - 2n_{k+1}$.\n\nTo show this process generates a finite expansion, we must prove that the sequence of quotients $n_k$ eventually reaches $0$. Let's analyze the magnitude of the quotients. The next quotient $n_{k+1}$ is given by $n_{k+1} = (d_k - n_k)/2$.\n- If $n_k  0$, then $n_{k+1} = (d_k - n_k)/2 \\leq (1 - n_k)/2 \\leq 0$.\n- If $n_k  0$, then $n_{k+1} = (d_k - n_k)/2 \\geq (0 - n_k)/2 = -n_k/2  0$.\nThe quotients alternate in sign (or are zero). Let's examine their magnitudes.\n- If $|n_k|  1$, then $|n_{k+1}| = |(d_k - n_k)/2| \\leq (|d_k| + |n_k|)/2 \\leq (1 + |n_k|)/2$. Since $|n_k|  1$, we have $1  |n_k|$, which implies $1 + |n_k|  2|n_k|$, so $(1 + |n_k|)/2  |n_k|$. Thus, for $|n_k|  1$, the magnitude $|n_{k+1}|$ is strictly smaller than $|n_k|$.\n- The only cases where the magnitude might not strictly decrease are $|n_k| \\leq 1$, i.e., $n_k \\in \\{-1, 0, 1\\}$.\n  - If $n_k = 0$, the process terminates ($d_k=0, n_{k+1}=0$).\n  - If $n_k = 1$, then $1 = (-2) \\cdot 0 + 1$. So $d_k=1$ and $n_{k+1}=0$. The process terminates.\n  - If $n_k = -1$, then $-1 = (-2) \\cdot 1 + 1$. So $d_k=1$ and $n_{k+1}=1$. The next step will then be $n_{k+1}=1$, which we have just shown leads to termination.\nSince the magnitude of the non-zero quotients strictly decreases until it reaches $1$, the sequence of quotients must eventually become $0$. This guarantees that the process terminates for any integer $n$, establishing the existence of a finite base $-2$ expansion.\n\n**Uniqueness:**\nSuppose an integer $n$ has two different representations in base $-2$:\n$n = \\sum_{k=0}^{m} d_k (-2)^k = \\sum_{k=0}^{m} c_k (-2)^k$, with $d_k, c_k \\in \\{0, 1\\}$. We can assume the length $m$ is the same by padding with leading zeros.\nLet $j$ be the smallest index for which $d_j \\neq c_j$. Then\n$\\sum_{k=j}^{m} d_k (-2)^k = \\sum_{k=j}^{m} c_k (-2)^k$.\n$(d_j - c_j)(-2)^j + \\sum_{k=j+1}^{m} (d_k - c_k)(-2)^k = 0$.\nDividing by $(-2)^j$, we get:\n$d_j - c_j = -\\sum_{k=j+1}^{m} (d_k - c_k)(-2)^{k-j} = -(-2)\\sum_{k=j+1}^{m} (d_k - c_k)(-2)^{k-j-1}$.\nThe right-hand side is an integer multiple of $2$, so it is an even number.\nThe left-hand side, $d_j - c_j$, can only take values in $\\{-1, 0, 1\\}$ since $d_j, c_j \\in \\{0, 1\\}$. By our assumption, $d_j \\neq c_j$, so $d_j - c_j$ must be either $1$ or $-1$.\nAn odd number ($1$ or $-1$) cannot be equal to an even number. This is a contradiction. Therefore, our initial assumption must be false, and there cannot be any index $j$ where the digits differ. Thus, $d_k = c_k$ for all $k$, and the representation is unique.\n\n**Part 2: Absence of a Sign Bit**\nThe constructive proof of existence provided above applies to any integer $n \\in \\mathbb{Z}$, whether it is positive, negative, or zero. The algorithm $n_{k+1}=(d_k-n_k)/2$ with $d_k=n_k \\pmod 2$ produces a valid, unique sequence of digits $\\{0,1\\}$ for any starting integer. This is in contrast to standard positive bases (like base $10$ or base $2$), where the standard division algorithm only produces representations for non-negative integers, necessitating an external symbol (a minus sign, '$-$') to represent negative numbers. In base $-2$, the sign is implicitly encoded within the sequence of digits itself.\n\n**Part 3: Base $-2$ Expansion of $n=137$**\nWe apply the algorithm $n_{k+1} = (d_k - n_k)/2$, where $d_k = n_k \\pmod 2$ (with remainder in $\\{0,1\\}$).\n$n_0 = 137$: $d_0 = 137 \\pmod 2 = 1$; $n_1 = (1 - 137)/2 = -68$.\n$n_1 = -68$: $d_1 = -68 \\pmod 2 = 0$; $n_2 = (0 - (-68))/2 = 34$.\n$n_2 = 34$: $d_2 = 34 \\pmod 2 = 0$; $n_3 = (0 - 34)/2 = -17$.\n$n_3 = -17$: $d_3 = -17 \\pmod 2 = 1$; $n_4 = (1 - (-17))/2 = 9$.\n$n_4 = 9$: $d_4 = 9 \\pmod 2 = 1$; $n_5 = (1 - 9)/2 = -4$.\n$n_5 = -4$: $d_5 = -4 \\pmod 2 = 0$; $n_6 = (0 - (-4))/2 = 2$.\n$n_6 = 2$: $d_6 = 2 \\pmod 2 = 0$; $n_7 = (0 - 2)/2 = -1$.\n$n_7 = -1$: $d_7 = -1 \\pmod 2 = 1$; $n_8 = (1 - (-1))/2 = 1$.\n$n_8 = 1$: $d_8 = 1 \\pmod 2 = 1$; $n_9 = (1 - 1)/2 = 0$.\nThe process terminates. The representation is formed by the digits from last to first: $(d_8 d_7 d_6 d_5 d_4 d_3 d_2 d_1 d_0)_{-2}$.\nSo, $137_{10} = 110011001_{(-2)}$.\nThe numeral $E$ is $110011001_{(-2)}$, so $\\mathrm{val}_{10}(E) = 137$.\n\n**Part 4: Arithmetic in Base $-2$**\nFor column-wise arithmetic, we need rules for handling carries. If the sum in a column is $S$, we write $S = d_{out} + (-2)c_{out}$, where $d_{out}$ is the digit for that column and $c_{out}$ is the carry to the next column.\n- $S=0: 0 = 0 + (-2) \\cdot 0 \\implies d_{out}=0, c_{out}=0$.\n- $S=1: 1 = 1 + (-2) \\cdot 0 \\implies d_{out}=1, c_{out}=0$.\n- $S=2: 2 = 0 + (-2) \\cdot (-1) \\implies d_{out}=0, c_{out}=-1$.\n- $S=-1: -1 = 1 + (-2) \\cdot 1 \\implies d_{out}=1, c_{out}=1$.\n- $S=3: 3 = 1 + (-2) \\cdot (-1) \\implies d_{out}=1, c_{out}=-1$.\n\n**Addition: $A = 10101_{(-2)} + 1101_{(-2)}$**\nWe align the numerals and add column by column from right to left (index $k=0$).\n```\n  Carries:   1  -1   1  -1\n             1  0  1  0  1\n           +   0  1  1  0  1\n--------------------------\n           1  0  1  1  0\n```\n- $k=0$: $1+1 = 2 \\implies$ sum is $0$, carry is $-1$.\n- $k=1$: $0+0+(-1) = -1 \\implies$ sum is $1$, carry is $1$.\n- $k=2$: $1+1+1 = 3 \\implies$ sum is $1$, carry is $-1$.\n- $k=3$: $0+1+(-1) = 0 \\implies$ sum is $0$, carry is $0$.\n- $k=4$: $1+0+0 = 1 \\implies$ sum is $1$, carry is $0$.\nSo, $A = 10110_{(-2)}$.\n\nVerification:\n$\\mathrm{val}_{10}(10101_{(-2)}) = 1(-2)^4 + 0(-2)^3 + 1(-2)^2 + 0(-2)^1 + 1(-2)^0 = 16 + 4 + 1 = 21$.\n$\\mathrm{val}_{10}(1101_{(-2)}) = 1(-2)^3 + 1(-2)^2 + 0(-2)^1 + 1(-2)^0 = -8 + 4 + 1 = -3$.\nThe sum is $21 + (-3) = 18$.\nThe result is $\\mathrm{val}_{10}(10110_{(-2)}) = 1(-2)^4 + 0(-2)^3 + 1(-2)^2 + 1(-2)^1 + 0(-2)^0 = 16 + 4 - 2 = 18$.\nThe calculation is correct. $\\mathrm{val}_{10}(A) = 18$.\n\n**Multiplication: $B = 1011_{(-2)} \\cdot 1001_{(-2)}$**\nWe use long multiplication.\n```\n          1  0  1  1\n        x 1  0  0  1\n-----------------\n          1  0  1  1   (1011 * 1)\n        0  0  0  0     (1011 * 0, shifted)\n      0  0  0  0       (1011 * 0, shifted)\n+   1  0  1  1         (1011 * 1, shifted)\n-----------------\n```\nWe now sum the partial products: $1011000_{(-2)} + 1011_{(-2)}$.\n```\n  Carries:    -1  0  0  -1\n             1  0  1  1  0  0  0\n           +      0  0  1  0  1  1\n--------------------------------\n           1  0  0  0  0  1  1\n```\n- $k=0: 0+1=1 \\implies$ sum $1$, carry $0$.\n- $k=1: 0+1=1 \\implies$ sum $1$, carry $0$.\n- $k=2: 0+0=0 \\implies$ sum $0$, carry $0$.\n- $k=3: 1+1=2 \\implies$ sum $0$, carry $-1$.\n- $k=4: 1+0+(-1)=0 \\implies$ sum $0$, carry $0$.\n- $k=5: 0+0+0=0 \\implies$ sum $0$, carry $0$.\n- $k=6: 1+0+0=1 \\implies$ sum $1$, carry $0$.\nSo, $B = 1000011_{(-2)}$.\n\nVerification:\n$\\mathrm{val}_{10}(1011_{(-2)}) = 1(-2)^3 + 0(-2)^2 + 1(-2)^1 + 1(-2)^0 = -8 - 2 + 1 = -9$.\n$\\mathrm{val}_{10}(1001_{(-2)}) = 1(-2)^3 + 0(-2)^2 + 0(-2)^1 + 1(-2)^0 = -8 + 1 = -7$.\nThe product is $(-9) \\cdot (-7) = 63$.\nThe result is $\\mathrm{val}_{10}(1000011_{(-2)}) = 1(-2)^6 + 1(-2)^1 + 1(-2)^0 = 64 - 2 + 1 = 63$.\nThe calculation is correct. $\\mathrm{val}_{10}(B) = 63$.\n\n**Part 5: Final Calculation of $S$**\nWe are asked to compute $S = \\mathrm{val}_{10}(A) + 2\\,\\mathrm{val}_{10}(B) + \\mathrm{val}_{10}(E)$.\nUsing the values derived above:\n- $\\mathrm{val}_{10}(A) = 18$\n- $\\mathrm{val}_{10}(B) = 63$\n- $\\mathrm{val}_{10}(E) = 137$\n\nSubstituting these values into the expression for $S$:\n$S = 18 + 2(63) + 137$\n$S = 18 + 126 + 137$\n$S = 144 + 137$\n$S = 281$", "answer": "$$\n\\boxed{281}\n$$", "id": "3089124"}, {"introduction": "Moving from representation to computation, this practice analyzes the familiar schoolbook addition algorithm from a probabilistic perspective. When adding two random numbers, the propagation of carries behaves like a stochastic process. This exercise asks you to model this process to derive the expected length of a carry chain, offering a quantitative understanding of the average-case performance of a fundamental arithmetic operation. [@problem_id:3089140]", "problem": "Let $b \\geq 2$ and $m \\geq 1$ be integers. Consider the standard positional (radix) representation in base $b$, where an $m$-digit base-$b$ word is a sequence of $m$ digits from $\\{0,1,\\dots,b-1\\}$. Let two independent random $m$-digit base-$b$ words be formed by choosing each digit independently and uniformly from $\\{0,1,\\dots,b-1\\}$. These two words are added using the schoolbook algorithm from the least significant digit (index $0$) to the most significant digit (index $m-1$), producing carries that propagate leftward.\n\nDefine the outgoing carry from position $i$ by $C_i \\in \\{0,1\\}$, with the convention that the incoming carry to position $0$ is $0$. Define the carry chain length $L$ to be the number of consecutive positions starting at index $0$ for which the outgoing carry is $1$, truncated at $m$:\n$$\nL \\;=\\; \\max\\Big\\{\\ell \\in \\{0,1,\\dots,m\\} \\;:\\; C_0 = C_1 = \\cdots = C_{\\ell-1} = 1\\Big\\}.\n$$\nStarting from the foundational definitions of base-$b$ addition and elementary probability for independent uniform digits, derive a closed-form expression for the expected carry chain length $\\mathbb{E}[L]$ as a function of $b$ and $m$. In addition, provide a closed-form probabilistic bound, in terms of $b$, $m$, and an integer $k \\in \\{1,\\dots,m\\}$, on the event that the carry propagates through at least $k$ positions (that is, the event $L \\geq k$). Express your final answer as analytic expressions depending on $b$, $m$, and $k$. No numerical rounding is required.", "solution": "Let the two $m$-digit base-$b$ numbers be represented by the sequences of their digits, $(X_{m-1}, \\dots, X_0)$ and $(Y_{m-1}, \\dots, Y_0)$. According to the problem statement, each digit $X_i$ and $Y_i$ for $i \\in \\{0, 1, \\dots, m-1\\}$ is an independent random variable uniformly distributed on the set $\\{0, 1, \\dots, b-1\\}$.\n\nThe schoolbook addition algorithm computes the sum digit $S_i$ and the outgoing carry $C_i$ at each position $i$ based on the input digits $X_i, Y_i$ and the incoming carry $C_{i-1}$:\n$$X_i + Y_i + C_{i-1} = S_i + b \\cdot C_i$$\nHere, $S_i \\in \\{0, 1, \\dots, b-1\\}$ and the carry $C_i \\in \\{0, 1\\}$. The incoming carry to the least significant digit position is defined to be zero, i.e., $C_{-1} = 0$.\n\nThe outgoing carry $C_i$ is $1$ if and only if $X_i + Y_i + C_{i-1} \\ge b$. To analyze the propagation of carries, we define two key probabilities related to the sum of two independent digits, $X_i$ and $Y_i$. Let the sample space of pairs $(X_i, Y_i)$ consist of $b^2$ equally likely outcomes.\n\nWe can count the number of pairs $(x,y)$ where $x, y \\in \\{0, \\dots, b-1\\}$ that sum to a given integer $s$. The number of such pairs is $s+1$ for $0 \\le s \\le b-1$, and $2b-1-s$ for $b \\le s \\le 2b-2$.\n\n1.  The probability of generating a carry, $p_g$, is the probability that a carry is produced at position $i$ assuming no incoming carry ($C_{i-1}=0$). This occurs if $X_i + Y_i \\ge b$.\n    The number of pairs $(X_i, Y_i)$ satisfying this is $\\sum_{s=b}^{2b-2} (2b-1-s)$. This sum evaluates to $\\frac{(b-1)b}{2}$.\n    Thus, the probability is:\n    $$p_g = P(X_i + Y_i \\ge b) = \\frac{b(b-1)/2}{b^2} = \\frac{b-1}{2b}$$\n\n2.  The probability of propagating a carry, $p_p$, is the probability that a carry is produced at position $i$ only if there is an incoming carry ($C_{i-1}=1$). This occurs if $X_i + Y_i + 1 \\ge b$ and $X_i + Y_i  b$, which simplifies to $X_i + Y_i = b-1$.\n    The number of pairs satisfying this is $(b-1)+1=b$.\n    Thus, the probability is:\n    $$p_p = P(X_i + Y_i = b-1) = \\frac{b}{b^2} = \\frac{1}{b}$$\n\nThe event that an outgoing carry $C_i=1$ is produced, given an incoming carry $C_{i-1}=1$, occurs if $X_i+Y_i \\ge b-1$. The probability of this event, which we shall call $p_{\\text{prop}}$, is:\n$$p_{\\text{prop}} = P(X_i + Y_i \\ge b-1) = P(X_i+Y_i=b-1) + P(X_i+Y_i \\ge b) = p_p + p_g$$\n$$p_{\\text{prop}} = \\frac{1}{b} + \\frac{b-1}{2b} = \\frac{2 + b-1}{2b} = \\frac{b+1}{2b}$$\n\nThe problem defines the carry chain length $L$ as the number of consecutive carries of $1$ starting from position $0$. The event $L \\ge k$ for $k \\in \\{1, \\dots, m\\}$ is equivalent to the event that $C_0=1, C_1=1, \\dots, C_{k-1}=1$.\n\nWe can calculate the probability of this event, $P(L \\ge k)$.\nThe event $C_0=1$ occurs if $X_0+Y_0+C_{-1} \\ge b$. Since $C_{-1}=0$, this is $X_0+Y_0 \\ge b$. The probability is $P(C_0=1) = p_g$.\nGiven $C_0=1$, the event $C_1=1$ occurs if $X_1+Y_1+1 \\ge b$, i.e., $X_1+Y_1 \\ge b-1$. The probability is $p_{\\text{prop}}$.\nIn general, for any $i \\in \\{1, \\dots, k-1\\}$, the event $C_i=1$ given $C_{i-1}=1$ occurs if $X_i+Y_i \\ge b-1$, with probability $p_{\\text{prop}}$.\n\nThe probability of the joint event $P(C_0=1, \\dots, C_{k-1}=1)$ can be calculated using the chain rule of probability:\n$$P(L \\ge k) = P(C_0=1) P(C_1=1|C_0=1) \\cdots P(C_{k-1}=1|C_0=1,\\dots,C_{k-2}=1)$$\nSince the carry $C_i$ only depends on the digits at position $i$ and the immediately preceding carry $C_{i-1}$, this simplifies due to the Markovian nature of the carry propagation process.\n$P(C_{i}=1|C_{i-1}=1, \\dots) = P(C_i=1|C_{i-1}=1)$.\nAdditionally, the pairs of digits $(X_i, Y_i)$ are independent across different positions $i$.\n$$P(L \\ge k) = P(X_0+Y_0 \\ge b) \\prod_{i=1}^{k-1} P(X_i+Y_i \\ge b-1) = p_g (p_{\\text{prop}})^{k-1}$$\n\nThis expression provides the exact probability for the event $L \\ge k$. As an exact value, it is also the tightest possible probabilistic bound on the event. Substituting the expressions for $p_g$ and $p_{\\text{prop}}$:\n$$P(L \\ge k) = \\frac{b-1}{2b} \\left(\\frac{b+1}{2b}\\right)^{k-1}$$\nThis is the closed-form expression for the second part of the problem.\n\nNow, we derive the expected carry chain length, $\\mathbb{E}[L]$. For a non-negative integer-valued random variable, the expectation can be computed as the sum of the tail probabilities:\n$$\\mathbb{E}[L] = \\sum_{k=1}^{\\infty} P(L \\ge k)$$\nSince the maximum value of $L$ is $m$, this sum is truncated at $m$:\n$$\\mathbb{E}[L] = \\sum_{k=1}^{m} P(L \\ge k) = \\sum_{k=1}^{m} p_g (p_{\\text{prop}})^{k-1}$$\nThis is a finite geometric series. Factoring out $p_g$:\n$$\\mathbb{E}[L] = p_g \\sum_{j=0}^{m-1} (p_{\\text{prop}})^j = p_g \\left( \\frac{1 - (p_{\\text{prop}})^m}{1 - p_{\\text{prop}}} \\right)$$\nLet us evaluate the term $1 - p_{\\text{prop}}$:\n$$1 - p_{\\text{prop}} = 1 - \\frac{b+1}{2b} = \\frac{2b - (b+1)}{2b} = \\frac{b-1}{2b}$$\nWe observe that $1 - p_{\\text{prop}} = p_g$. This leads to a significant simplification:\n$$\\mathbb{E}[L] = p_g \\left( \\frac{1 - (p_{\\text{prop}})^m}{p_g} \\right) = 1 - (p_{\\text{prop}})^m$$\nSubstituting the expression for $p_{\\text{prop}}$ gives the final closed-form expression for the expected carry chain length:\n$$\\mathbb{E}[L] = 1 - \\left(\\frac{b+1}{2b}\\right)^m$$\nThis is the solution to the first part of the problem.\n\nThe problem asks for two analytic expressions. The first is $\\mathbb{E}[L]$, which depends on $b$ and $m$. The second is a bound for $P(L \\ge k)$, which depends on $b$, $m$, and $k$. The derived exact expression for $P(L \\ge k)$ is independent of $m$, as the event $L \\ge k$ (for $k \\le m$) only involves digits up to position $k-1$. This expression is the most precise answer for the bound.", "answer": "$$\\boxed{\\begin{pmatrix} 1 - \\left(\\frac{b+1}{2b}\\right)^{m}  \\frac{b-1}{2b} \\left(\\frac{b+1}{2b}\\right)^{k-1} \\end{pmatrix}}$$", "id": "3089140"}]}