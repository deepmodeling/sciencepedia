{"hands_on_practices": [{"introduction": "A deep understanding of any mathematical theorem is built not just on knowing what it says, but on understanding why it is true. This exercise takes you back to the foundations, tasking you with deriving a powerful property of prime factorizations from first principles [@problem_id:3084819]. By starting only with basic definitions of divisibility and Bézout's identity, you will build the logic for how prime powers behave in products, reinforcing the crucial link between coprimality and prime divisibility that is the essence of Euclid's Lemma.", "problem": "Let $p$ be a prime and let $a$ and $b$ be nonzero integers. Define the exact multiplicity of $p$ in $a$ to be the largest nonnegative integer $\\alpha$ such that $p^{\\alpha} \\mid a$ and $p^{\\alpha+1} \\nmid a$, and similarly define $\\beta$ to be the largest nonnegative integer such that $p^{\\beta} \\mid b$ and $p^{\\beta+1} \\nmid b$. Let $m$ and $n$ be positive integers. Using only core definitions of divisibility, the properties of primes, the existence and basic properties of the Greatest Common Divisor (GCD), and Bézout’s identity (which states that for integers $x$ and $y$, there exist integers $r$ and $s$ such that $rx+sy=\\gcd(x,y)$), determine a closed-form expression for the largest integer $k$ such that $p^{k} \\mid a^{m} b^{n}$. Express your answer solely in terms of $\\alpha$, $\\beta$, $m$, and $n$. The final answer must be a single analytic expression.", "solution": "The problem requires the determination of the largest integer $k$ such that $p^{k} \\mid a^{m} b^{n}$. This integer $k$ is, by definition, the exact multiplicity of the prime $p$ in the integer $a^m b^n$. For any nonzero integer $z$ and prime $p$, let us denote this multiplicity by $\\nu_p(z)$. The problem provides that $\\nu_p(a) = \\alpha$ and $\\nu_p(b) = \\beta$. Our goal is to find an expression for $k = \\nu_p(a^m b^n)$ in terms of $\\alpha$, $\\beta$, $m$, and $n$.\n\nThe derivation proceeds by first establishing the fundamental properties of the function $\\nu_p$ using the allowed tools: core definitions of divisibility and properties of primes, including the consequences of Bézout's identity.\n\nBy the definition given, $\\nu_p(z) = \\gamma$ means that $p^{\\gamma} \\mid z$ and $p^{\\gamma+1} \\nmid z$. This implies that $z$ can be written in the form $z = p^{\\gamma}z'$, where $z'$ is an integer not divisible by $p$. Consequently, we can write $a = p^{\\alpha}a'$ and $b = p^{\\beta}b'$, where $a'$ and $b'$ are integers such that $p \\nmid a'$ and $p \\nmid b'$.\n\nFirst, we establish the additive property of the $p$-adic valuation: $\\nu_p(xy) = \\nu_p(x) + \\nu_p(y)$ for any nonzero integers $x$ and $y$.\nLet $\\nu_p(x) = u$ and $\\nu_p(y) = v$. We can write $x = p^u x'$ and $y = p^v y'$, where $p \\nmid x'$ and $p \\nmid y'$.\nThe product $xy$ is then:\n$$xy = (p^u x')(p^v y') = p^{u+v} x'y'$$\nTo determine $\\nu_p(xy)$, we must analyze the divisibility of the term $x'y'$ by $p$. For this, we use a fundamental property of primes, often referred to as Euclid's Lemma: if a prime divides a product of two integers, it must divide at least one of them. This lemma is a direct consequence of Bézout's identity, which is an allowed tool. If $p \\mid cd$ and $p \\nmid c$, then because $p$ is prime, $\\gcd(p, c) = 1$. By Bézout's identity, integers $r$ and $s$ exist such that $rp + sc = 1$. Multiplying by $d$ yields $rpd + scd = d$. Since $p$ divides $rpd$ and $p$ divides $scd$ (as $p \\mid cd$), $p$ must divide their sum, which is $d$.\n\nNow, let us assume for contradiction that $p \\mid x'y'$. Applying Euclid's Lemma, we must have $p \\mid x'$ or $p \\mid y'$. This, however, contradicts the established conditions that $p \\nmid x'$ and $p \\nmid y'$. Therefore, the assumption $p \\mid x'y'$ must be false.\nWith $p \\nmid x'y'$, the expression $xy = p^{u+v}(x'y')$ shows that the highest power of $p$ that divides $xy$ is $p^{u+v}$. By definition, this means $\\nu_p(xy) = u+v$. We have thus formally shown that:\n$$\\nu_p(xy) = \\nu_p(x) + \\nu_p(y)$$\n\nSecond, we establish the power rule: $\\nu_p(z^j) = j \\cdot \\nu_p(z)$ for any positive integer $j$. This follows from the additive property by induction.\nBase Case: For $j=1$, $\\nu_p(z^1) = \\nu_p(z) = 1 \\cdot \\nu_p(z)$, which is correct.\nInductive Step: Assume the property holds for some positive integer $j=i$, so $\\nu_p(z^i) = i \\cdot \\nu_p(z)$. We then examine the case for $j=i+1$:\n$$\\nu_p(z^{i+1}) = \\nu_p(z^i \\cdot z)$$\nUsing the additive property derived above:\n$$\\nu_p(z^i \\cdot z) = \\nu_p(z^i) + \\nu_p(z)$$\nApplying the inductive hypothesis:\n$$\\nu_p(z^i) + \\nu_p(z) = i \\cdot \\nu_p(z) + \\nu_p(z) = (i+1)\\nu_p(z)$$\nThus, $\\nu_p(z^{i+1}) = (i+1)\\nu_p(z)$. By the principle of mathematical induction, the power rule $\\nu_p(z^j) = j \\cdot \\nu_p(z)$ is valid for all positive integers $j$.\n\nWith these two properties, we can now determine the required value $k = \\nu_p(a^m b^n)$.\nUsing the additive property on the product of $a^m$ and $b^n$:\n$$k = \\nu_p(a^m b^n) = \\nu_p(a^m) + \\nu_p(b^n)$$\nUsing the power rule for each term:\n$$\\nu_p(a^m) = m \\cdot \\nu_p(a)$$\n$$\\nu_p(b^n) = n \\cdot \\nu_p(b)$$\nSubstituting these into the expression for $k$:\n$$k = m \\cdot \\nu_p(a) + n \\cdot \\nu_p(b)$$\nFinally, using the given values $\\nu_p(a) = \\alpha$ and $\\nu_p(b) = \\beta$:\n$$k = m\\alpha + n\\beta$$\nThis is the closed-form expression for the largest integer $k$ satisfying the condition.", "answer": "$$\n\\boxed{m\\alpha + n\\beta}\n$$", "id": "3084819"}, {"introduction": "With the theoretical groundwork in place, we now shift to applying these principles in a concrete problem-solving context. This practice presents a numerical puzzle where you must find the smallest integer satisfying a set of conditions involving divisibility and coprimality [@problem_id:3084815]. The solution hinges on your ability to strategically apply the generalized version of Euclid's Lemma to deduce properties of the unknown integer, showcasing the lemma's utility as a practical tool in number-theoretic investigations.", "problem": "Let $p=13$, $q=17$, $r=5$, and $s=11$ be primes. Define the integers $a$ and $b$ by $a=p^{2}q^{3}rs$ and $b=p^{2}q^{3}$. Consider positive integers $c$ that satisfy $\\gcd(c,pqr)=1$, where $\\gcd$ denotes the greatest common divisor (gcd). Determine the smallest positive integer $c$ such that $a \\mid b(p+q)c$. Express your final answer as an integer. Justify your computation starting from the definitions of divisibility and prime numbers, and widely accepted foundational facts such as the existence of the greatest common divisor and Bézout’s identity, without invoking any pre-stated shortcut results. No rounding is required.", "solution": "The problem asks for the smallest positive integer $c$ that satisfies two conditions:\n$1$. $\\gcd(c, pqr) = 1$, where $p=13$, $q=17$, and $r=5$ are prime numbers.\n$2$. $a \\mid b(p+q)c$, where $a = p^{2}q^{3}rs$, $b = p^{2}q^{3}$, and $s=11$ is a prime number.\n\nLet us begin by analyzing the divisibility condition, $a \\mid b(p+q)c$. By the definition of divisibility, this means there exists an integer $k$ such that $b(p+q)c = ka$.\nSubstituting the given expressions for $a$ and $b$:\n$$\n(p^{2}q^{3})(p+q)c = k(p^{2}q^{3}rs)\n$$\nSince $p$ and $q$ are prime numbers, $p=13$ and $q=17$, they are non-zero. Thus, the term $p^{2}q^{3}$ is non-zero, and we can legally divide both sides of the equation by it:\n$$\n(p+q)c = k(rs)\n$$\nThis equation is equivalent to the divisibility condition $rs \\mid (p+q)c$.\n\nThe integers $r=5$ and $s=11$ are distinct prime numbers. A fundamental property of divisibility is that if two coprime integers divide a number, their product also divides that number. Since $r$ and $s$ are distinct primes, their greatest common divisor is $\\gcd(r,s)=1$. Therefore, the condition $rs \\mid (p+q)c$ is equivalent to the simultaneous conditions $r \\mid (p+q)c$ and $s \\mid (p+q)c$.\n\nLet's analyze the first of these conditions: $r \\mid (p+q)c$.\nWe are given that $\\gcd(c, pqr) = 1$. A direct consequence of the definition of the greatest common divisor is that if an integer is coprime to a product of integers, it is coprime to each of those integers. Since $r$ is a factor of $pqr$, the condition $\\gcd(c, pqr)=1$ implies that $\\gcd(c, r) = 1$.\n\nNow we use a foundational result of number theory that follows from Bézout's identity. If an integer $m$ divides a product $nk$ and is coprime to one of the factors, say $\\gcd(m, n) = 1$, then $m$ must divide the other factor $k$. We shall justify this. By Bézout's identity, $\\gcd(m, n) = 1$ implies there exist integers $x$ and $y$ such that $mx + ny = 1$. Multiplying this entire equation by $k$ gives $mkx + nky = k$. We are given that $m \\mid nk$, so there exists an integer $j$ such that $nk = jm$. Substituting this into our equation yields $mkx + (jm)y = k$. Factoring out $m$, we get $m(kx + jy) = k$. Since $k$, $x$, $j$, and $y$ are all integers, the term $(kx+jy)$ is also an integer. By the definition of divisibility, this means $m \\mid k$.\n\nApplying this principle to our condition $r \\mid (p+q)c$, we identify $m=r$, $n=c$, and $k=(p+q)$. We have already established that $\\gcd(r, c) = 1$. Therefore, it must be true that $r \\mid (p+q)$.\nLet's verify this with the given numerical values: $r=5$, $p=13$, $q=17$.\n$p+q = 13 + 17 = 30$.\nThe condition becomes $5 \\mid 30$, which is true since $30 = 6 \\times 5$. This part of the divisibility requirement is satisfied by the given numbers and imposes no further constraints on the integer $c$.\n\nNext, let's analyze the second condition: $s \\mid (p+q)c$.\nWe apply the same principle as before. We will check the relationship between $s$ and $(p+q)$. The integer $s$ is the prime number $11$, and $p+q=30$. Since $11$ is prime, its only positive divisors are $1$ and $11$. As $11$ does not divide $30$, their greatest common divisor is $\\gcd(s, p+q) = \\gcd(11, 30) = 1$.\n\nApplying the principle derived from Bézout's identity to $s \\mid (p+q)c$, we identify $m=s$, $n=(p+q)$, and $k=c$. Since we have just shown that $\\gcd(s, p+q) = 1$, it must be that $s \\mid c$.\n\nSo, we have deduced that any integer $c$ that satisfies the given conditions must be a multiple of $s$. The problem asks for the smallest positive integer $c$. The positive multiples of $s=11$ are $11, 22, 33, \\dots$. The smallest of these is $c=s=11$.\n\nWe must verify that this candidate, $c=11$, satisfies all the initial conditions.\n$1$. $c$ must be a positive integer. $c=11$ is a positive integer.\n$2$. The divisibility condition $a \\mid b(p+q)c$ must hold. We showed this is equivalent to $rs \\mid (p+q)c$. With $c=s=11$, this becomes $rs \\mid (p+q)s$. Since $s \\neq 0$, this simplifies to $r \\mid (p+q)$, which we have already verified is true ($5 \\mid 30$).\n$3$. The condition $\\gcd(c, pqr)=1$ must hold. For $c=s=11$, this condition is $\\gcd(11, 13 \\times 17 \\times 5) = 1$. The integer $c=11$ is a prime number. The other integers $p=13$, $q=17$, and $r=5$ are also prime numbers, all distinct from $11$. Therefore, $c=11$ shares no common prime factors with the product $pqr$. The greatest common divisor is thus $1$. This condition is satisfied.\n\nSince any valid $c$ must be a multiple of $11$, and $c=11$ itself satisfies all conditions, it is the smallest such positive integer.\nThe smallest positive integer $c$ is $11$.", "answer": "$$\n\\boxed{11}\n$$", "id": "3084815"}, {"introduction": "To round out your practice, this final exercise bridges the gap between abstract theory and computational logic. You are challenged to implement Euclid's Lemma and its generalization as an algorithm, testing their validity across various cases [@problem_id:3084821]. This hands-on coding task encourages you to think about these theorems as formal logical implications, developing a tangible intuition for how their premises and consequences interact and appreciating their robustness in a computational setting.", "problem": "Design and implement a complete program that evaluates two logically formulated divisibility implications, derived from foundational number-theoretic principles, and computes a constructive quotient when applicable. The goal is to connect the abstract statement about when a divisor of a product must divide a factor to concrete computational checks. Your implementation must rely on the following fundamental base only: the definitions of divisibility for integers, the definition of a prime number, the existence and computation of the greatest common divisor via the Euclidean algorithm, and the basic laws of propositional logic (material implication). You must not assume any specialized divisibility theorems as given; instead, derive the algorithmic behavior from these fundamentals.\n\nDefinitions to be used as the starting point:\n- For integers $a$ and $b$ with $a \\neq 0$, say that $a$ divides $b$, written $a \\mid b$, if there exists an integer $t$ such that $b = a t$.\n- A prime is an integer $p \\ge 2$ whose only positive divisors are $1$ and $p$.\n- The greatest common divisor of integers $x$ and $y$, denoted $\\gcd(x,y)$, is the largest nonnegative integer $d$ such that $d \\mid x$ and $d \\mid y$. The Euclidean algorithm computes $\\gcd(x,y)$ by repeated division with remainder.\n\nFor each test case, you are given a sextuple $(p,a,b,m,n,k)$ of integers with $p \\ge 2$. For each case, compute the following three outputs:\n- $E_1$: the truth value (as a boolean) of the material implication, “if $p \\mid ab$ then $p \\mid a$ or $p \\mid b$,” evaluated for the given specific integers $p, a, b$. That is, $E_1$ is true exactly when either $p \\nmid ab$ or $(p \\mid a \\lor p \\mid b)$ holds.\n- $E_2$: the truth value (as a boolean) of the material implication, “if $\\gcd(m,n)=1$ and $m \\mid nk$, then $m \\mid k$,” evaluated for the given specific integers $m, n, k$. That is, $E_2$ is true exactly when either $\\gcd(m,n) \\ne 1$ or $m \\nmid nk$ or $m \\mid k$ holds.\n- $Q$: an integer defined as follows. If the antecedent of the second implication holds, namely if $\\gcd(m,n)=1$ and $m \\mid nk$, then $Q$ must be the exact integer quotient $k/m$. Otherwise, set $Q=-1$.\n\nYour program must implement the Euclidean algorithm to compute $\\gcd(\\cdot,\\cdot)$ and use only the definitions above to determine divisibility and implication truth values. No user input is required or permitted.\n\nUse the following fixed test suite of sextuples $(p,a,b,m,n,k)$:\n- Test $1$: $(7,14,9,8,27,20)$.\n- Test $2$: $(13,25,52,9,14,81)$.\n- Test $3$: $(6,2,3,10,21,5)$.\n- Test $4$: $(11,8,15,35,16,49)$.\n- Test $5$: $(101,2020,303,12,35,42)$.\n- Test $6$: $(4,0,5,7,5,0)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element corresponds to one test case in the same order, and is itself a list of the form $[E_1,E_2,Q]$. For example, the overall output format must be\n\"[[E1_case1,E2_case1,Q_case1],[E1_case2,E2_case2,Q_case2],...,[E1_case6,E2_case6,Q_case6]]\"\nwith booleans written in their programming-language literal form and integers in base-$10$ notation.", "solution": "The posed problem has been carefully examined and is determined to be valid. It is scientifically grounded in elementary number theory, well-posed with unambiguous definitions and objectives, and free from contradictions or subjective language. The task is to computationally evaluate specific instances of two fundamental implications in number theory and to compute a related quotient.\n\nThe solution will be constructed from first principles as required, namely the definitions of divisibility and the greatest common divisor (GCD), the Euclidean algorithm for computing the GCD, and the rules of propositional logic.\n\n### 1. Algorithmic Primitives\n\nThe problem solution rests upon two elementary computational components: a function to test for divisibility and a function to compute the greatest common divisor.\n\n**1.1. Divisibility**\nThe problem defines that for integers $a$ and $b$ with $a \\neq 0$, we say $a$ divides $b$, written $a \\mid b$, if there exists an integer $t$ such that $b = at$. For computational purposes within the domain of integers, this is equivalent to the condition that the remainder of the Euclidean division of $b$ by $a$ is $0$. Therefore, the check for $a \\mid b$ is implemented by verifying if $b \\pmod a = 0$. The problem constraints ($p \\ge 2$, and the values of $m$ in the test suite are all non-zero) ensure that the divisor is never zero, aligning with the definition. A function `divides(a, b)` will implement this check.\n\n**1.2. Greatest Common Divisor (GCD)**\nThe problem requires the implementation of the Euclidean algorithm to compute $\\gcd(x, y)$. For two non-negative integers $x$ and $y$, not both zero, the algorithm is based on the principle that $\\gcd(x, y) = \\gcd(y, x \\pmod y)$. The recursion terminates when one argument is zero, with the base case being $\\gcd(x, 0) = x$. The GCD of two integers $x$ and $y$ is always non-negative, so we can compute it using their absolute values, i.e., $\\gcd(x,y) = \\gcd(|x|,|y|)$. A function `gcd(x, y)` will be implemented following this recursive definition.\n\n### 2. Evaluation of Implication $E_1$\n\nThe first output, $E_1$, is the truth value of the material implication: \"if $p \\mid ab$ then $p \\mid a$ or $p \\mid b$\". Let the proposition $P_1$ be \"$p \\mid ab$\" and the proposition $Q_1$ be \"$p \\mid a \\lor p \\mid b$\". The logical statement is $P_1 \\implies Q_1$.\n\nIn classical logic, an implication $P \\implies Q$ is equivalent to $\\neg P \\lor Q$. This means the implication is only false when the antecedent $P$ is true and the consequent $Q$ is false. Otherwise, it is true.\nThe algorithm to compute $E_1$ for a given triplet $(p, a, b)$ is as follows:\n1.  Compute the product $ab$.\n2.  Evaluate the antecedent $P_1$: check if $p \\mid ab$ using the `divides` function.\n3.  If $P_1$ is false, the implication $E_1$ is vacuously true.\n4.  If $P_1$ is true, evaluate the consequent $Q_1$: check if $(p \\mid a)$ or $(p \\mid b)$.\n5.  $E_1$ is the truth value of $\\neg P_1 \\lor Q_1$.\n\nThis statement is a formulation of Euclid's Lemma, which holds universally if $p$ is a prime number. The problem requires evaluating the implication for specific integers, which includes cases where $p$ is composite (e.g., $p=6, p=4$), where the implication may be false.\n\n### 3. Evaluation of Implication $E_2$ and Quotient $Q$\n\nThe second and third outputs, $E_2$ and $Q$, are based on the implication: \"if $\\gcd(m,n)=1$ and $m \\mid nk$, then $m \\mid k$\".\n\n**3.1. Evaluation of $E_2$**\nLet the proposition $P_2$ be \"$(\\gcd(m,n)=1) \\land (m \\mid nk)$\" and the proposition $Q_2$ be \"$m \\mid k$\". The logical statement is $P_2 \\implies Q_2$. The evaluation of its truth value, $E_2$, follows the same logical structure as for $E_1$:\n1.  Evaluate the antecedent $P_2$:\n    a. Compute $g = \\gcd(m, n)$ using the `gcd` function. Check if $g=1$.\n    b. Compute the product $nk$. Check if $m \\mid nk$.\n    c. $P_2$ is true if and only if both conditions (a) and (b) are met.\n2.  If $P_2$ is false, the implication $E_2$ is vacuously true.\n3.  If $P_2$ is true, evaluate the consequent $Q_2$: check if $m \\mid k$.\n4.  $E_2$ is the truth value of $\\neg P_2 \\lor Q_2$.\n\nThis statement is a formulation of Gauss's Lemma, which is a theorem in number theory and is always true for any integers $m, n, k$. Our evaluation for any specific integers must therefore always yield `True`.\n\n**3.2. Computation of $Q$**\nThe value of $Q$ is defined based on the antecedent of the second implication, $P_2$.\n- If $P_2$ (i.e., $\\gcd(m,n)=1$ and $m \\mid nk$) is true, then $Q$ is the integer quotient $k/m$.\n- Otherwise, $Q = -1$.\n\nSince Gauss's Lemma guarantees that if the antecedent $P_2$ is true, the consequent $Q_2$ ($m \\mid k$) must also be true, the division $k/m$ will always result in an exact integer. The computation of $Q$ simply requires checking the truth value of $P_2$ and performing the integer division $k // m$ if it is true.\n\n### 4. Walkthrough of Test Case 1\n\nLet's apply this logic to the first test case: $(p,a,b,m,n,k)=(7,14,9,8,27,20)$.\n\n**For $E_1$**: with $(p,a,b) = (7,14,9)$.\n- Antecedent $P_1$: Is $7 \\mid (14 \\times 9)$? $14 \\times 9 = 126$. $126 = 7 \\times 18$. So, $7 \\mid 126$ is true. $P_1$ is true.\n- Consequent $Q_1$: Is $(7 \\mid 14)$ or $(7 \\mid 9)$? $14 = 7 \\times 2$, so $7 \\mid 14$ is true. The disjunction is true. $Q_1$ is true.\n- Implication $E_1$: $P_1 \\implies Q_1$ is $\\text{True} \\implies \\text{True}$, which is $\\text{True}$.\n\n**For $E_2$ and $Q$**: with $(m,n,k) = (8,27,20)$.\n- Antecedent $P_2$: Is $(\\gcd(8,27)=1)$ and $(8 \\mid 27 \\times 20)$?\n    - $\\gcd(8,27)$: $8=2^3$ and $27=3^3$. They share no prime factors, so $\\gcd(8,27)=1$. This part is true.\n    - $8 \\mid (27 \\times 20)$? $27 \\times 20 = 540$. $540 \\div 8 = 67.5$. The division is not exact. So, $8 \\nmid 540$. This part is false.\n- Since one part of the conjunction is false, the entire antecedent $P_2$ is false.\n- Implication $E_2$: $P_2 \\implies Q_2$ is $\\text{False} \\implies Q_2$, which is vacuously true regardless of $Q_2$. $E_2 = \\text{True}$.\n- Quotient $Q$: The antecedent $P_2$ is false, so by definition, $Q=-1$.\n\nThe result for Test Case 1 is $[\\text{True}, \\text{True}, -1]$. The same procedure is applied to all other test cases.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\n\ndef solve():\n    \"\"\"\n    Solves the number theory problem by evaluating two divisibility implications\n    and computing a conditional quotient for a given set of test cases.\n    \"\"\"\n\n    def gcd(a, b):\n        \"\"\"\n        Computes the greatest common divisor of two integers a and b using the\n        Euclidean algorithm. Handles non-negative inputs as per the standard\n        recursive definition.\n        \"\"\"\n        x, y = abs(a), abs(b)\n        while y:\n            x, y = y, x % y\n        return x\n\n    def divides(a, b):\n        \"\"\"\n        Checks if integer a divides integer b.\n        Based on the definition, a must be non-zero. The problem's constraints\n        (p >= 2 and m being non-zero in tests) ensure this.\n        \"\"\"\n        if a == 0:\n            # According to the problem's definition, the divisor a is non-zero.\n            # This case should not be reached with the given test data.\n            return False \n        return b % a == 0\n\n    # Define the fixed test suite of sextuples (p, a, b, m, n, k).\n    test_cases = [\n        (7, 14, 9, 8, 27, 20),\n        (13, 25, 52, 9, 14, 81),\n        (6, 2, 3, 10, 21, 5),\n        (11, 8, 15, 35, 16, 49),\n        (101, 2020, 303, 12, 35, 42),\n        (4, 0, 5, 7, 5, 0),\n    ]\n\n    results = []\n    for case in test_cases:\n        p, a, b, m, n, k = case\n\n        # --- E1: Evaluate \"if p | ab then p | a or p | b\" ---\n        \n        # Antecedent: p | ab\n        p1_antecedent = divides(p, a * b)\n        \n        # Consequent: p | a or p | b\n        q1_consequent = divides(p, a) or divides(p, b)\n        \n        # An implication P => Q is equivalent to (not P) or Q\n        e1 = (not p1_antecedent) or q1_consequent\n\n        # --- E2 and Q: Evaluate \"if gcd(m,n)=1 and m|nk, then m|k\" ---\n\n        # Antecedent: gcd(m,n)=1 and m | nk\n        g = gcd(m, n)\n        p2_antecedent = (g == 1) and divides(m, n * k)\n        \n        # Consequent: m | k\n        q2_consequent = divides(m, k)\n\n        # Implication E2\n        e2 = (not p2_antecedent) or q2_consequent\n\n        # Quotient Q\n        q = k // m if p2_antecedent else -1\n\n        results.append([e1, e2, q])\n\n    # Final print statement in the exact required format.\n    # The string representation of a list uses ', ' as a separator,\n    # so we build the final string manually.\n    formatted_results = [f\"[{'True' if e1 else 'False'},{'True' if e2 else 'False'},{q}]\" for e1, e2, q in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "3084821"}]}