{"hands_on_practices": [{"introduction": "宇宙中氦-4的最终丰度是热大爆炸宇宙学模型的一个基石性预测。这个练习旨在揭示在“弱相互作用冻结”时刻的中子-质子比与最终氦元素丰度之间的根本联系。通过一个简化的解析模型，您将直接洞察弱相互作用速率与宇宙膨胀速率之间的竞争如何为整个太初核合成过程奠定基础，并基于冻结温度 $T_f$ 和中子-质子质量差 $Q$ 从第一性原理出发推导出氦丰度。[@problem_id:1878012]", "problem": "在极早期宇宙，当温度远高于 $10^{10} \\text{ K}$ 时，宇宙是一锅由基本粒子组成的、炽热而稠密的汤。质子和中子处于热平衡状态，通过弱相互作用过程（例如，$n + \\nu_e \\leftrightarrow p + e^-$）不断地相互转化。在这种平衡状态下，中子与质子的数量比由玻尔兹曼因子决定，该因子取决于它们的质量差。\n\n随着宇宙的膨胀和冷却，这些弱相互作用的速率下降了。当温度低于一个临界温度，即“弱相互作用冻结温度”$T_f$ 时，相互转化过程实际上停止了，中子与质子的比例也因此固定下来。很久以后，当宇宙冷却到足以形成原子核时，发生了一系列快速的核反应，这一过程被称为太初核合成。\n\n考虑一个包含以下假设的简化模型：\n1. 冻结时刻的中子与质子数量比由在温度 $T_f$ 下计算的玻尔兹曼分布给出。\n2. 所有在冻结后存在的中子最终都通过总反应 $2n + 2p \\rightarrow {}^4\\text{He}$ 完全并入稳定的氦-4（${}^4\\text{He}$）原子核中。\n3. 从冻结时刻到核合成开始这段时间内，自由中子的衰变可以忽略不计。\n\n令 $Q = (m_n - m_p)c^2$ 为中子（$m_n$）和质子（$m_p$）之间的静止质能差，其中 $c$ 是光速。令 $k_B$ 为玻尔兹曼常数。\n\n推导氦-4最终摩尔分数的封闭形式解析表达式。摩尔分数的定义是氦-4原子核的摩尔数除以所有最终生成的原子核（即氦-4原子核加上剩余未反应的质子）的总摩尔数。你的答案应仅用 $Q$、$k_B$ 和 $T_f$ 表示。", "solution": "在弱相互作用冻结时，中子与质子的数量比由能量差为 $Q=(m_n-m_p)c^2$ 的粒子之间的热平衡决定，给出玻尔兹曼比如下\n$$\n\\frac{N_n}{N_p}=\\exp\\!\\left(-\\frac{Q}{k_{B}T_{f}}\\right)\\equiv r.\n$$\n在冻结之后并忽略中子衰变，所有中子最终都通过反应 $2n+2p\\rightarrow{}^{4}\\text{He}$ 并入 ${}^{4}\\text{He}$。如果在冻结时的初始数量分别为 $N_n$ 和 $N_p$，那么每个氦核消耗2个中子，因此形成的氦核数量为\n$$\nN_{\\text{He}}=\\frac{N_n}{2}.\n$$\n每个氦核也消耗2个质子，因此剩余未结合的质子数量为\n$$\nN_{p,\\text{final}}=N_p-N_n.\n$$\n核合成后原子核的总数（氦核加上剩余的质子）为\n$$\nN_{\\text{tot}}=N_{\\text{He}}+N_{p,\\text{final}}=\\frac{N_n}{2}+N_p-N_n=N_p-\\frac{N_n}{2}.\n$$\n氦-4的摩尔分数（等于氦核在所有原子核中的数量分数）为\n$$\nX_{\\text{He}}=\\frac{N_{\\text{He}}}{N_{\\text{tot}}}=\\frac{\\frac{N_n}{2}}{N_p-\\frac{N_n}{2}}.\n$$\n用比率 $r=N_n/N_p$ 来表示，\n$$\nX_{\\text{He}}=\\frac{\\frac{r}{2}}{1-\\frac{r}{2}}=\\frac{r}{2-r}.\n$$\n代入 $r=\\exp\\!\\left(-\\frac{Q}{k_{B}T_{f}}\\right)$ 得到封闭形式的解析表达式\n$$\nX_{\\text{He}}=\\frac{\\exp\\!\\left(-\\frac{Q}{k_{B}T_{f}}\\right)}{2-\\exp\\!\\left(-\\frac{Q}{k_{B}T_{f}}\\right)}.\n$$", "answer": "$$\\boxed{\\frac{\\exp\\!\\left(-\\frac{Q}{k_{B}T_{f}}\\right)}{2-\\exp\\!\\left(-\\frac{Q}{k_{B}T_{f}}\\right)}}$$", "id": "1878012"}, {"introduction": "太初核合成（BBN）的预测对自然界的基本常数极为敏感。这个问题要求您探究氘的束缚能 $B_D$ 的一个假设性变化将如何影响整个 BBN 的时间线，特别是核合成的起始时间以及在此之前发生的中子衰变量。“氘瓶颈”是这里的关键物理概念，因为它决定了核合成何时能够有效开始。这项微扰分析有力地证明了 BBN 作为基础物理探针所扮演的角色，展示了精确的宇宙学观测如何能够约束标准模型内外的物理参数。[@problem_id:839213]", "problem": "在标准大爆炸核合成（BBN）模型中，原初氦质量分数 $Y_p$ 由核合成开始时的中子-质子比 $x = n_n/n_p$ 决定。BBN的一个关键要素是“氘瓶颈”：在温度下降到足以使氘（$D$）稳定、不发生光致蜕变之前，核合成无法有效进行。发生这一过程的温度 $T_{BBN}$，决定了主要核合成链开始的时间 $t_{BBN}$。\n\n氦质量分数 $Y_p$ 由下式给出\n$$Y_p = \\frac{2x_{BBN}}{1+x_{BBN}}$$\n其中 $x_{BBN}$ 是时间 $t_{BBN}$ 时的中子-质子比。\n\n这个比值从其在弱相互作用冻结时的值 $x_f$ 开始，因自由中子的衰变而演化：\n$$x_{BBN} = x_f \\exp\\left(-\\frac{t_{BBN} - t_f}{\\tau_n}\\right)$$\n此处，$t_f$ 是冻结时间，$\\tau_n$ 是中子平均寿命。\n\n核合成的开始从根本上与氘的结合能 $B_D$ 相关。一个能够抓住其基本物理的可靠近似是，核合成温度与氘结合能成正比，即 $T_{BBN} \\propto B_D$。在早期宇宙的辐射主导时期，时间和温度通过标度关系 $t \\propto T^{-2}$ 相关联。\n\n考虑一个假设情景，其中氘结合能增加了一个小比例 $\\delta \\ll 1$，使得新的结合能为 $B_D' = B_D(1+\\delta)$。计算由此导致的氦质量分数的变化 $\\Delta Y_p = Y_p' - Y_p$，其中 $Y_p'$ 是新的氦分数。请用 $\\delta$、初始中子-质子冻结比 $x_f$、冻结时间 $t_f$、未受扰动的核合成时间 $t_{BBN}$ 和中子寿命 $\\tau_n$ 来表示你的答案。", "solution": "1. 未受扰动的BBN时的中子-质子比为\n$$x_{BBN}=x_f\\exp\\Bigl(-\\frac{t_{BBN}-t_f}{\\tau_n}\\Bigr)\\,. $$\n\n2. 如果 $B_D\\to B_D(1+\\delta)$，则 $T_{BBN}\\to T_{BBN}(1+\\delta)$，并且由于 $t\\propto T^{-2}$，\n$$t'_{BBN}=t_{BBN}(1+\\delta)^{-2}\\approx t_{BBN}(1-2\\delta)\\,.$$\n\n3. 受扰动的比值为\n\n$$\nx'_{BBN}\n=x_f\\exp\\Bigl(-\\frac{t'_{BBN}-t_f}{\\tau_n}\\Bigr)\n=x_f\\exp\\!\\Bigl(-\\frac{t_{BBN}-t_f-2\\delta\\,t_{BBN}}{\\tau_n}\\Bigr)\n=x_{BBN}\\exp\\!\\Bigl(\\frac{2\\delta\\,t_{BBN}}{\\tau_n}\\Bigr).\n$$\n\n对 $\\delta$ 取一阶近似，\n$$x'_{BBN}\\approx x_{BBN}\\Bigl(1+\\frac{2\\delta\\,t_{BBN}}{\\tau_n}\\Bigr),\\quad\n\\Delta x_{BBN}=x'_{BBN}-x_{BBN}=x_{BBN}\\frac{2\\delta\\,t_{BBN}}{\\tau_n}.$$\n\n4. 氦分数为 $Y_p=2x_{BBN}/(1+x_{BBN})$，因此\n$$\\frac{dY_p}{dx_{BBN}}\n=\\frac{2}{(1+x_{BBN})^2},$$\n从而\n$$\\Delta Y_p=\\frac{dY_p}{dx_{BBN}}\\Delta x_{BBN}\n=\\frac{2}{(1+x_{BBN})^2}\\;x_{BBN}\\frac{2\\delta\\,t_{BBN}}{\\tau_n}\n=\\frac{4\\delta\\,x_{BBN}\\,t_{BBN}}{\\tau_n(1+x_{BBN})^2}.$$\n\n5. 将 $x_{BBN}=x_f\\exp[-(t_{BBN}-t_f)/\\tau_n]$ 代回，得到\n$$\n\\Delta Y_p\n=\\frac{4\\,\\delta\\,x_f\\exp\\!\\bigl(-\\frac{t_{BBN}-t_f}{\\tau_n}\\bigr)\\,t_{BBN}}\n{\\tau_n\\Bigl[1+x_f\\exp\\!\\bigl(-\\frac{t_{BBN}-t_f}{\\tau_n}\\bigr)\\Bigr]^2}\\,.\n$$", "answer": "$$\\boxed{\\frac{4\\,\\delta\\,x_f\\exp\\!\\bigl(-\\frac{t_{BBN}-t_f}{\\tau_n}\\bigr)\\,t_{BBN}}\n{\\tau_n\\Bigl[1+x_f\\exp\\!\\bigl(-\\frac{t_{BBN}-t_f}{\\tau_n}\\bigr)\\Bigr]^2}}$$", "id": "839213"}, {"introduction": "尽管解析模型能提供关键的物理洞察，但要完整理解太初核合成，则需要对整个核反应网络进行数值求解。这项计算练习要求您将一个简化的 BBN 反应网络建模为一个刚性常微分方程组。您将通过实现一个稳定的隐式数值求解器，来追踪当宇宙冷却时氘和氦丰度的演化过程。这项实践超越了简化的假设，为您提供了处理现代宇宙学和天体物理学研究中必不可少的强大数值技术的实践经验，特别是对于涉及巨大时间尺度差异的问题。[@problem_id:2442938]", "problem": "要求您构建并求解一个简化的、模拟宇宙早期温度迅速下降时太初核合成的刚性反应网络。您需要在一种能够捕捉刚性和守恒定律的、物理上合理的粗粒度近似下工作，并实现一种数值稳定的隐式方法来随时间演化该系统。您必须编写一个完整、可运行的程序，为指定的测试套件计算所要求的输出。\n\n考虑由其重子质量分数追踪的三种核素：氘 $X_{\\mathrm{D}}(t)$、氦-4 $X_{\\mathrm{He}}(t)$ 和质子 $X_{\\mathrm{p}}(t)$。假设在简化网络中重子数守恒，因此对于所有 $t \\ge 0$，有 $X_{\\mathrm{p}}(t) + 2 X_{\\mathrm{D}}(t) + 4 X_{\\mathrm{He}}(t) = 1$。在 $t = 0$ 时初始化为 $X_{\\mathrm{D}}(0) = 0$，$X_{\\mathrm{He}}(0) = 0$，$X_{\\mathrm{p}}(0) = 1$。\n\n对以下有效反应进行建模：\n- $2\\,\\mathrm{p} \\rightleftarrows \\mathrm{D}$，\n- $2\\,\\mathrm{D} \\rightleftarrows \\mathrm{He}$，\n\n其中正向和逆向反应速率依赖于温度 $T(t)$ 和通过质量作用动力学的核素分数。\n\n假设一个辐射主导的冷却定律\n$$\nT(t) = \\frac{T_0}{\\sqrt{1 + t/\\tau}},\n$$\n其中 $T_0$ 是初始温度，单位为兆电子伏特 (MeV)，$t$ 是时间，单位为秒，$\\tau$ 是冷却时间尺度，单位为秒。采用以下与温度相关的速率系数：\n- 质子正向聚变为氘：$k_{1f}(T) = a_1\\, \\sqrt{T}\\, \\exp\\!\\left(-\\frac{Q_1}{T}\\right)$，\n- 氘逆向光致蜕变：$k_{1r}(T) = a_{1r}\\, T^3$，\n- 氘正向聚变为氦-4：$k_{2f}(T) = a_2\\, \\sqrt{T}\\, \\exp\\!\\left(-\\frac{Q_2}{T}\\right)$，\n- 氦-4逆向蜕变为氘：$k_{2r}(T) = a_{2r}\\, T^3$，\n\n其中常数为 $a_1 = 10$，$a_{1r} = 3$，$a_2 = 5$，$a_{2r} = 1$，$Q_1 = 0.2$ MeV，$Q_2 = 0.1$ MeV。此处所有数值均为无量纲，但温度单位为 MeV，时间单位为秒。将 $k_B$ 视为 1 (自然单位制)，因此指数函数的参数是无量纲的。\n\n令 $X_{\\mathrm{p}}(t) = 1 - 2 X_{\\mathrm{D}}(t) - 4 X_{\\mathrm{He}}(t)$。单位时间的反应速率为\n$$\nR_{1f} = k_{1f}(T)\\, X_{\\mathrm{p}}^2, \\quad R_{1r} = k_{1r}(T)\\, X_{\\mathrm{D}}, \\quad R_{2f} = k_{2f}(T)\\, X_{\\mathrm{D}}^2, \\quad R_{2r} = k_{2r}(T)\\, X_{\\mathrm{He}}.\n$$\n使用质量作用动力学和化学计量学，推导常微分方程 (ODEs)\n$$\n\\frac{dX_{\\mathrm{D}}}{dt} = R_{1f} - R_{1r} - 2 R_{2f} + 2 R_{2r}, \\qquad\n\\frac{dX_{\\mathrm{He}}}{dt} = R_{2f} - R_{2r}.\n$$\n在广泛的 $T(t)$ 和参数范围内，该 ODE 系统是刚性的。\n\n您的任务：\n1. 根据上述定义和守恒定律，推导在固定的 $t$ 和 $T(t)$ 下，方程右侧关于状态向量 $\\mathbf{y} = [X_{\\mathrm{D}}, X_{\\mathrm{He}}]^T$ 的雅可比矩阵。\n2. 使用后向（隐式）欧拉法，以均匀的时间步长 $\\Delta t$ 离散化 ODE 系统，并在每一步中使用带有线性搜索的牛顿法求解得到的非线性系统，该线性搜索强制所有核素分数以及 $X_{\\mathrm{p}} \\ge 0$ 均为非负值。使用 $10^{-12}$ 的绝对牛顿残差容差，并且每一步最多进行 20 次牛顿迭代。如果一个完整的牛顿步会违反任何非负性约束，则通过连续减半步长进行回溯，直到恢复可行性。\n3. 使用固定的时间步长 $\\Delta t = 10^{-2}$ 秒。对于下面的每个测试用例，从 $t = 0$ 积分到指定的最终时间 $t_f$。报告每种情况下的 $X_{\\mathrm{He}}(t_f)$。质量分数是无量纲的；将其报告为四舍五入到六位小数的浮点数。\n\n测试套件（每个用例是一个元组 $(T_0,\\tau,t_f)$）：\n- 用例 A：$(1.0, 200.0, 500.0)$，\n- 用例 B：$(1.0, 50.0, 500.0)$，\n- 用例 C：$(0.8, 200.0, 500.0)$，\n- 用例 D：$(1.0, 200.0, 50.0)$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含按 A、B、C、D 顺序排列的结果，格式为逗号分隔的列表并用方括号括起，例如 $[r_A,r_B,r_C,r_D]$，其中每个 $r_\\cdot$ 是相应情况下 $X_{\\mathrm{He}}(t_f)$ 的值，四舍五入到六位小数。", "solution": "用户提供了一个计算物理学中有效且适定的问题。任务是使用隐式数值方法求解一个代表简化版太初核合成网络的刚性常微分方程（ODE）组。\n\n该问题的有效性验证如下：\n- 科学依据：该模型是大爆炸核合成的简化表示，采用了质量作用动力学的标准原理、一个合理的宇宙学冷却定律以及与温度相关的反应速率。对此类系统使用刚性求解器（隐式欧拉法）是计算科学中的一项基本技术。该问题在科学上是合理的。\n- 适定性：这是一个定义明确的初值问题，具有给定的 ODE、参数和初始条件。预计存在唯一解。\n- 客观性和完整性：问题的所有方面都以数学精度明确指定，没有歧义。所有需要的数据和约束都已提供。\n\n该问题被认为是有效的，并将提供完整的解决方案。\n\n**1. 常微分方程组**\n\n系统的状态由核素丰度向量 $\\mathbf{y}(t) = [X_{\\mathrm{D}}(t), X_{\\mathrm{He}}(t)]^T$ 描述。质子的丰度 $X_{\\mathrm{p}}(t)$ 由重子数守恒定律确定：\n$$\nX_{\\mathrm{p}}(t) = 1 - 2 X_{\\mathrm{D}}(t) - 4 X_{\\mathrm{He}}(t)\n$$\n系统的演化由以下两个耦合的 ODE 组成的方程组控制，可以写成向量形式 $\\frac{d\\mathbf{y}}{dt} = \\mathbf{F}(t, \\mathbf{y})$：\n$$\n\\frac{dX_{\\mathrm{D}}}{dt} = F_1(t, \\mathbf{y}) = R_{1f} - R_{1r} - 2 R_{2f} + 2 R_{2r}\n$$\n$$\n\\frac{dX_{\\mathrm{He}}}{dt} = F_2(t, \\mathbf{y}) = R_{2f} - R_{2r}\n$$\n其中反应速率 $R$ 依赖于温度 $T(t)$ 和状态变量。代入速率和 $X_{\\mathrm{p}}$ 的定义，得到方程右侧（RHS）函数的显式形式：\n$$\nF_1(t, \\mathbf{y}) = k_{1f}(T)(1 - 2X_{\\mathrm{D}} - 4X_{\\mathrm{He}})^2 - k_{1r}(T)X_{\\mathrm{D}} - 2k_{2f}(T)X_{\\mathrm{D}}^2 + 2k_{2r}(T)X_{\\mathrm{He}}\n$$\n$$\nF_2(t, \\mathbf{y}) = k_{2f}(T)X_{\\mathrm{D}}^2 - k_{2r}(T)X_{\\mathrm{He}}\n$$\n温度 $T$ 本身是时间 $t$ 的函数，由 $T(t) = T_0 / \\sqrt{1 + t/\\tau}$ 给出。函数 $k(T)$ 是给定的与温度相关的速率系数。此系统是刚性的，因为随着温度下降，反应的时间尺度会发生巨大变化。\n\n**2. 雅可比矩阵推导**\n\n为实现牛顿法，我们必须计算方程右侧（RHS）向量 $\\mathbf{F}$ 相对于状态向量 $\\mathbf{y} = [X_{\\mathrm{D}}, X_{\\mathrm{He}}]^T$ 的雅可比矩阵。雅可比矩阵 $J$ 是一个 $2 \\times 2$ 矩阵，其元素为 $J_{ij} = \\frac{\\partial F_i}{\\partial y_j}$，其中 $y_1=X_D$ 且 $y_2=X_{He}$。\n\n偏导数为：\n$$\nJ_{11} = \\frac{\\partial F_1}{\\partial X_{\\mathrm{D}}} = \\frac{\\partial}{\\partial X_{\\mathrm{D}}} \\left( k_{1f}X_{\\mathrm{p}}^2 - k_{1r}X_{\\mathrm{D}} - 2k_{2f}X_{\\mathrm{D}}^2 + 2k_{2r}X_{\\mathrm{He}} \\right)\n$$\n使用链式法则，$\\frac{\\partial X_{\\mathrm{p}}}{\\partial X_{\\mathrm{D}}} = -2$。\n$$\nJ_{11} = k_{1f}(2X_{\\mathrm{p}})\\frac{\\partial X_{\\mathrm{p}}}{\\partial X_{\\mathrm{D}}} - k_{1r} - 4k_{2f}X_{\\mathrm{D}} = -4k_{1f}X_{\\mathrm{p}} - k_{1r} - 4k_{2f}X_{\\mathrm{D}}\n$$\n$$\nJ_{12} = \\frac{\\partial F_1}{\\partial X_{\\mathrm{He}}} = \\frac{\\partial}{\\partial X_{\\mathrm{He}}} \\left( k_{1f}X_{\\mathrm{p}}^2 - k_{1r}X_{\\mathrm{D}} - 2k_{2f}X_{\\mathrm{D}}^2 + 2k_{2r}X_{\\mathrm{He}} \\right)\n$$\n使用链式法则，$\\frac{\\partial X_{\\mathrm{p}}}{\\partial X_{\\mathrm{He}}} = -4$。\n$$\nJ_{12} = k_{1f}(2X_{\\mathrm{p}})\\frac{\\partial X_{\\mathrm{p}}}{\\partial X_{\\mathrm{He}}} + 2k_{2r} = -8k_{1f}X_{\\mathrm{p}} + 2k_{2r}\n$$\n$$\nJ_{21} = \\frac{\\partial F_2}{\\partial X_{\\mathrm{D}}} = \\frac{\\partial}{\\partial X_{\\mathrm{D}}} \\left( k_{2f}X_{\\mathrm{D}}^2 - k_{2r}X_{\\mathrm{He}} \\right) = 2k_{2f}X_{\\mathrm{D}}\n$$\n$$\nJ_{22} = \\frac{\\partial F_2}{\\partial X_{\\mathrm{He}}} = \\frac{\\partial}{\\partial X_{\\mathrm{He}}} \\left( k_{2f}X_{\\mathrm{D}}^2 - k_{2r}X_{\\mathrm{He}} \\right) = -k_{2r}\n$$\n因此，雅可比矩阵为：\n$$\nJ(t, \\mathbf{y}) = \\begin{pmatrix} -4k_{1f}X_{\\mathrm{p}} - k_{1r} - 4k_{2f}X_{\\mathrm{D}} & -8k_{1f}X_{\\mathrm{p}} + 2k_{2r} \\\\ 2k_{2f}X_{\\mathrm{D}} & -k_{2r} \\end{pmatrix}\n$$\n速率系数 $k(T)$ 在目标时间 $t$ 进行评估。\n\n**3. 数值积分：使用牛顿法的隐式欧拉法**\n\n像前向欧拉法这样的显式方法需要极小的时间步长才能使这个刚性系统保持稳定。我们采用 A-稳定的后向（隐式）欧拉法。对于一个时间步长 $\\Delta t$，在 $t_{n+1} = t_n + \\Delta t$ 的状态近似为：\n$$\n\\mathbf{y}_{n+1} = \\mathbf{y}_n + \\Delta t \\, \\mathbf{F}(t_{n+1}, \\mathbf{y}_{n+1})\n$$\n这是一个关于未知数 $\\mathbf{y}_{n+1}$ 的非线性代数方程。我们使用牛顿法通过寻找残差函数 $\\mathbf{G}(\\mathbf{z}) = \\mathbf{0}$ 的根来求解它，其中 $\\mathbf{z} = \\mathbf{y}_{n+1}$：\n$$\n\\mathbf{G}(\\mathbf{z}) = \\mathbf{z} - \\mathbf{y}_n - \\Delta t \\, \\mathbf{F}(t_{n+1}, \\mathbf{z}) = \\mathbf{0}\n$$\n从初始猜测 $\\mathbf{z}_0 = \\mathbf{y}_n$ 开始，牛顿法生成一系列近似值 $\\mathbf{z}_{k+1} = \\mathbf{z}_k + \\Delta \\mathbf{z}_k$。更新步长 $\\Delta \\mathbf{z}_k$ 通过求解线性系统得到：\n$$\nJ_G(\\mathbf{z}_k) \\Delta \\mathbf{z}_k = - \\mathbf{G}(\\mathbf{z}_k)\n$$\n残差函数 $J_G$ 的雅可比矩阵为：\n$$\nJ_G(\\mathbf{z}) = \\frac{\\partial \\mathbf{G}}{\\partial \\mathbf{z}} = I - \\Delta t \\frac{\\partial \\mathbf{F}(t_{n+1}, \\mathbf{z})}{\\partial \\mathbf{z}} = I - \\Delta t \\, J(t_{n+1}, \\mathbf{z})\n$$\n其中 $I$ 是 $2 \\times 2$ 单位矩阵， $J$ 是先前推导出的 ODE 系统的雅可比矩阵。迭代过程持续进行，直到残差的范数 $\\|\\mathbf{G}(\\mathbf{z}_k)\\|$ 低于 $10^{-12}$ 的容差。\n\n**4. 可行性约束和线性搜索**\n\n核素丰度必须保持物理意义，这意味着非负性：$X_{\\mathrm{D}} \\ge 0$，$X_{\\mathrm{He}} \\ge 0$ 以及 $X_{\\mathrm{p}} \\ge 0$。最后一个约束可转化为 $1 - 2X_{\\mathrm{D}} - 4X_{\\mathrm{He}} \\ge 0$。一个完整的牛顿步 $\\Delta \\mathbf{z}_k$ 可能会产生一个违反这些约束的候选状态 $\\mathbf{z}_k + \\Delta \\mathbf{z}_k$。为防止这种情况，我们实现了一个回溯线性搜索。在计算出 $\\Delta \\mathbf{z}_k$ 后，我们寻找最大的步长 $\\lambda \\in \\{1, 1/2, 1/4, \\ldots\\}$，使得更新后的状态 $\\mathbf{z}_{k+1} = \\mathbf{z}_k + \\lambda \\Delta \\mathbf{z}_k$ 是可行的。我们从 $\\lambda=1$ 开始，并连续将其减半，直到所有三个非负性条件都得到满足。这确保了求解器永远不会进入状态空间的非物理区域。\n\n整个算法以固定的步长 $\\Delta t = 10^{-2}$ 从 $t=0$ 积分到 $t_f$。在每个时间步，调用带有回溯线性搜索的牛顿-拉弗森求解器来找到下一个时间点的状态。对于每个测试用例，报告最终的 $X_{\\mathrm{He}}(t_f)$ 值。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the primordial nucleosynthesis problem for the given test suite.\n    \"\"\"\n    \n    # Test suite: (T0, tau, tf)\n    test_cases = [\n        (1.0, 200.0, 500.0),  # Case A\n        (1.0, 50.0, 500.0),   # Case B\n        (0.8, 200.0, 500.0),  # Case C\n        (1.0, 200.0, 50.0),   # Case D\n    ]\n\n    results = []\n    for params in test_cases:\n        T0, tau, tf = params\n        final_X_He = run_integration(T0, tau, tf)\n        results.append(final_X_He)\n\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef run_integration(T0, tau, tf):\n    \"\"\"\n    Integrates the stiff ODE system for a single test case.\n\n    Args:\n        T0 (float): Initial temperature in MeV.\n        tau (float): Cooling timescale in seconds.\n        tf (float): Final integration time in seconds.\n\n    Returns:\n        float: The final mass fraction of Helium-4, X_He(tf).\n    \"\"\"\n    # Physical and numerical parameters\n    a1, a1r = 10.0, 3.0\n    a2, a2r = 5.0, 1.0\n    Q1, Q2 = 0.2, 0.1  # in MeV\n\n    # Timestepping parameters\n    dt = 1.0e-2\n    newton_tol = 1.0e-12\n    newton_max_iter = 20\n\n    # Initial conditions\n    y = np.array([0.0, 0.0])  # y = [X_D, X_He]\n    t = 0.0\n\n    num_steps = round(tf / dt)\n\n    # Time integration loop\n    for n in range(num_steps):\n        t_next = (n + 1) * dt\n        y_current = y\n\n        # --- Newton-Raphson solver for implicit Euler step ---\n        z = np.copy(y_current)  # Guess for y_next\n\n        for k in range(newton_max_iter):\n            # Evaluate temperature and rate coefficients at t_next\n            T = T0 / np.sqrt(1.0 + t_next / tau)\n            sqrt_T = np.sqrt(T)\n\n            # Avoid division by zero if T approaches 0, though unlikely with given params\n            if T < 1.0e-9: T = 1.0e-9\n\n            k1f = a1 * sqrt_T * np.exp(-Q1 / T)\n            k1r = a1r * T**3\n            k2f = a2 * sqrt_T * np.exp(-Q2 / T)\n            k2r = a2r * T**3\n            \n            # Unpack current Newton iterate z = [X_D, X_He]\n            XD, XHe = z[0], z[1]\n            Xp = 1.0 - 2.0 * XD - 4.0 * XHe\n\n            # Ensure proton fraction is non-negative for rate calculations\n            if Xp < 0: Xp = 0.0\n\n            # Reaction rates\n            R1f = k1f * Xp**2\n            R1r = k1r * XD\n            R2f = k2f * XD**2\n            R2r = k2r * XHe\n\n            # ODE right-hand side vector F(t_next, z)\n            F = np.array([\n                R1f - R1r - 2.0 * R2f + 2.0 * R2r,\n                R2f - R2r\n            ])\n\n            # Newton residual vector G(z)\n            G = z - y_current - dt * F\n\n            # Check for convergence\n            if np.linalg.norm(G) < newton_tol:\n                break\n            \n            # Jacobian of F\n            J11 = -4.0 * k1f * Xp - k1r - 4.0 * k2f * XD\n            J12 = -8.0 * k1f * Xp + 2.0 * k2r\n            J21 = 2.0 * k2f * XD\n            J22 = -k2r\n            J = np.array([[J11, J12], [J21, J22]])\n\n            # Solve the linear system for the Newton step: (I - dt*J) * dz = -G\n            A = np.identity(2) - dt * J\n            dz = np.linalg.solve(A, -G)\n\n            # --- Backtracking line search to ensure feasibility ---\n            lam = 1.0\n            for _ in range(10):  # Max 10 halvings\n                z_new = z + lam * dz\n                XD_new, XHe_new = z_new[0], z_new[1]\n                Xp_new = 1.0 - 2.0 * XD_new - 4.0 * XHe_new\n\n                if XD_new >= 0 and XHe_new >= 0 and Xp_new >= 0:\n                    break  # Feasible step found\n                lam /= 2.0\n            \n            z = z + lam * dz\n\n        y = z  # Update state vector\n        \n    return y[1]  # Return final X_He\n\nsolve()\n```", "id": "2442938"}]}