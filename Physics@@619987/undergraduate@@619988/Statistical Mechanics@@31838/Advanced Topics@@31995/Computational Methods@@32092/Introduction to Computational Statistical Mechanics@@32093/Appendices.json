{"hands_on_practices": [{"introduction": "Our journey into computational statistical mechanics begins with the cornerstone of Monte Carlo methods: the Metropolis algorithm. This exercise provides a direct, hands-on experience with the algorithm's core logic by simulating a simple one-dimensional chain of spins. By manually performing each step—proposing a change, calculating the energy difference, and applying the probabilistic acceptance rule—you will build an intuition for how systems evolve towards thermal equilibrium [@problem_id:1971585]. This foundational practice is essential for understanding how we use computational methods to sample configurations from the Boltzmann distribution.", "problem": "Consider a simplified one-dimensional model of a polymer chain consisting of $N=4$ segments arranged in a circle, such that the last segment is connected to the first (periodic boundary conditions). Each segment $i$ can exist in one of three conformational states, represented by a variable $S_i \\in \\{-1, 0, +1\\}$. The total energy of the polymer chain is described by the Hamiltonian:\n$$H = -J \\sum_{i=1}^{4} S_i S_{i+1}$$\nwhere the index is taken modulo 4 (i.e., $S_5 \\equiv S_1$). The parameter $J$ is a positive coupling constant representing the interaction energy between adjacent segments. We are given $J = 1.0 \\text{ eV}$. The system is in thermal equilibrium with a heat bath at a temperature $T$ such that the thermal energy is $k_B T = 1.5 \\text{ eV}$, where $k_B$ is the Boltzmann constant.\n\nThe system's configuration evolves through a series of discrete time steps, which can be simulated using a Monte Carlo (MC) procedure. At each step, a single segment is chosen, and a new state for it is proposed. The proposed change is accepted or rejected based on the following rules:\n1. Calculate the energy change $\\Delta E = E_{\\text{new}} - E_{\\text{current}}$, where $E_{\\text{current}}$ is the energy before the change and $E_{\\text{new}}$ is the energy of the proposed new configuration.\n2. If $\\Delta E \\le 0$, the change is always accepted.\n3. If $\\Delta E > 0$, the change is accepted with a probability $P = \\exp(-\\Delta E / (k_B T))$. To implement this, a random number $r$ uniformly distributed in $[0, 1)$ is generated. If $r < P$, the change is accepted; otherwise, it is rejected, and the system remains in its current state.\n\nSuppose the system starts in the initial configuration $(S_1, S_2, S_3, S_4) = (+1, -1, +1, -1)$. You are to manually perform 4 sequential update steps as detailed in the table below.\n\n| Step ($k$) | Segment to Update | Proposed New State | Random Number ($r_k$) |\n| :---: | :---: | :---: | :---: |\n| 1 | $S_2$ | $0$ | N/A |\n| 2 | $S_4$ | $+1$ | N/A |\n| 3 | $S_1$ | $0$ | $0.80$ |\n| 4 | $S_3$ | $-1$ | $0.10$ |\n\nCalculate the average energy of the system, defined as the arithmetic mean of the energies of the initial state and the states after each of the four update steps. Express your final answer in eV, rounded to three significant figures.", "solution": "The Hamiltonian is $H=-J\\sum_{i=1}^{4}S_{i}S_{i+1}$ with $S_{5}\\equiv S_{1}$. For a single-spin change at site $i$, only the two bonds involving $S_{i}$ change, so the energy change is\n$$\n\\Delta E=-J\\left[\\left(S_{i-1}S_{i}^{\\text{new}}+S_{i}^{\\text{new}}S_{i+1}\\right)-\\left(S_{i-1}S_{i}^{\\text{old}}+S_{i}^{\\text{old}}S_{i+1}\\right)\\right].\n$$\nMoves with $\\Delta E\\leq 0$ are accepted; if $\\Delta E>0$, they are accepted with probability $P=\\exp\\!\\left(-\\frac{\\Delta E}{k_{B}T}\\right)$ and rejected otherwise.\n\nInitial configuration $(S_{1},S_{2},S_{3},S_{4})=(+1,-1,+1,-1)$.\nCompute the initial energy:\n$$\n\\sum_{i}S_{i}S_{i+1}=(-1)+(-1)+(-1)+(-1)=-4,\\quad E_{0}=-J(-4)=4J.\n$$\n\nStep 1: Update $S_{2}:-1\\to 0$. Neighbors are $S_{1}=+1$, $S_{3}=+1$.\nOld sum: $(+1)(-1)+(-1)(+1)=-2$. New sum: $(+1)(0)+(0)(+1)=0$.\n$$\n\\Delta E_{1}=-J\\left[0-(-2)\\right]=-2J\\leq 0\\ \\Rightarrow\\ \\text{accept}.\n$$\nHence $E_{1}=E_{0}+\\Delta E_{1}=4J-2J=2J$ and the state is $(+1,0,+1,-1)$.\n\nStep 2: Update $S_{4}:-1\\to +1$. Neighbors are $S_{3}=+1$, $S_{1}=+1$.\nOld sum: $(+1)(-1)+(-1)(+1)=-2$. New sum: $(+1)(+1)+(+1)(+1)=2$.\n$$\n\\Delta E_{2}=-J\\left[2-(-2)\\right]=-4J\\leq 0\\ \\Rightarrow\\ \\text{accept}.\n$$\nHence $E_{2}=E_{1}+\\Delta E_{2}=2J-4J=-2J$ and the state is $(+1,0,+1,+1)$.\n\nStep 3: Update $S_{1}:+1\\to 0$ with $r_{3}=0.80$. Neighbors are $S_{4}=+1$, $S_{2}=0$.\nOld sum: $(+1)(+1)+(+1)(0)=1$. New sum: $(+1)(0)+(0)(0)=0$.\n$$\n\\Delta E_{3}=-J\\left[0-1\\right]=+J>0,\\quad P=\\exp\\!\\left(-\\frac{J}{k_{B}T}\\right)=\\exp\\!\\left(-\\frac{1}{1.5}\\right)=\\exp\\!\\left(-\\frac{2}{3}\\right)\\approx 0.513.\n$$\nSince $r_{3}=0.80>P$, reject. Thus $E_{3}=E_{2}=-2J$ and the state remains $(+1,0,+1,+1)$.\n\nStep 4: Update $S_{3}:+1\\to -1$ with $r_{4}=0.10$. Neighbors are $S_{2}=0$, $S_{4}=+1$.\nOld sum: $(0)(+1)+(+1)(+1)=1$. New sum: $(0)(-1)+(-1)(+1)=-1$.\n$$\n\\Delta E_{4}=-J\\left[(-1)-1\\right]=+2J>0,\\quad P=\\exp\\!\\left(-\\frac{2J}{k_{B}T}\\right)=\\exp\\!\\left(-\\frac{2}{1.5}\\right)=\\exp\\!\\left(-\\frac{4}{3}\\right)\\approx 0.264.\n$$\nSince $r_{4}=0.10<P$, accept. Hence $E_{4}=E_{3}+\\Delta E_{4}=-2J+2J=0$ and the state is $(+1,0,-1,+1)$.\n\nEnergies of the five configurations (initial plus four steps) are\n$$\nE_{0}=4J,\\quad E_{1}=2J,\\quad E_{2}=-2J,\\quad E_{3}=-2J,\\quad E_{4}=0.\n$$\nThe average energy is\n$$\n\\bar{E}=\\frac{E_{0}+E_{1}+E_{2}+E_{3}+E_{4}}{5}=\\frac{4J+2J-2J-2J+0}{5}=\\frac{2}{5}J.\n$$\nWith $J=1.0\\ \\text{eV}$, $\\bar{E}=\\frac{2}{5}\\ \\text{eV}=0.4\\ \\text{eV}$, which to three significant figures is $0.400\\ \\text{eV}$.", "answer": "$$\\boxed{0.400}$$", "id": "1971585"}, {"introduction": "Having grasped the basics of the Metropolis algorithm, we now explore its versatility by applying it to a different physical scenario: a single particle moving on a lattice under an external potential. This problem illustrates how the same fundamental principles can model particle dynamics, not just spin systems, and introduces practical considerations like boundary conditions [@problem_id:1971599]. Working through this simulation will deepen your understanding of how Monte Carlo methods can be adapted to study a wide variety of systems and physical constraints.", "problem": "A single particle is studied using a computational simulation. The particle is constrained to move on a one-dimensional discrete lattice with four sites located at positions $x=0, 1, 2, 3$. The particle is in a system maintained at a constant temperature $T$ and is subject to an asymmetric potential energy function given by $U(x) = \\alpha x$, where $\\alpha$ is a positive energy constant. The thermal energy of the system is set to be $k_B T = \\alpha$, where $k_B$ is the Boltzmann constant.\n\nThe particle's motion is simulated using the Metropolis algorithm. The particle is initially located at the position $x_{initial} = 2$. The simulation proceeds in discrete time steps. At each step, a trial move is proposed to an adjacent site, $x_{trial} = x_{current} \\pm 1$. The direction of the proposal is determined by a pseudo-random number $r_p$ drawn from a uniform distribution on $[0, 1)$. If $r_p < 0.5$, the proposed move is to the left ($x \\to x-1$); if $r_p \\ge 0.5$, the proposed move is to the right ($x \\to x+1$). If the proposed position is outside the allowed lattice sites $\\{0, 1, 2, 3\\}$, the move is automatically rejected, and the particle's position for the next step is the same as its current position.\n\nIf the proposed move is to a valid site, the change in potential energy, $\\Delta U = U(x_{trial}) - U(x_{current})$, is computed. The move is accepted with a probability $P_{acc} = \\min(1, \\exp(-\\Delta U / (k_B T)))$. To implement this, a second pseudo-random number, $r_a$, is drawn from a uniform distribution on $[0, 1)$. If $r_a < P_{acc}$, the move is accepted, and the particle's new position is $x_{trial}$. Otherwise, the move is rejected, and the particle remains at $x_{current}$.\n\nYou are to perform a simulation for 3 steps, starting from $x_0 = x_{initial} = 2$. The sequences of pseudo-random numbers to be used are:\nFor move proposals: $r_{p,1} = 0.60$, $r_{p,2} = 0.25$, $r_{p,3} = 0.82$.\nFor acceptance decisions: $r_{a,1} = 0.40$, $r_{a,2} = 0.90$, $r_{a,3} = 0.30$.\n\nCalculate the time-averaged position $\\langle x \\rangle$ of the particle over the entire simulation trace, which includes the initial position and the positions after each of the 3 steps. Express your answer as a single real number, rounded to three significant figures.", "solution": "The particle moves on sites $x \\in \\{0,1,2,3\\}$ with potential $U(x)=\\alpha x$ and thermal energy $k_{B}T=\\alpha$. The Metropolis acceptance probability for a proposed move is\n$$\nP_{\\text{acc}}=\\min\\left(1,\\exp\\!\\left(-\\frac{\\Delta U}{k_{B}T}\\right)\\right).\n$$\nFor a nearest-neighbor move from $x$ to $x\\pm 1$, the energy change is\n$$\n\\Delta U=U(x\\pm 1)-U(x)=\\alpha[(x\\pm 1)-x]=\\pm \\alpha,\n$$\nso, using $k_{B}T=\\alpha$,\n$$\nP_{\\text{acc}}=\\begin{cases}\n\\min\\left(1,\\exp(-(+\\alpha)/\\alpha)\\right)=\\exp(-1), & \\text{for } x\\to x+1,\\\\[4pt]\n\\min\\left(1,\\exp(-(-\\alpha)/\\alpha)\\right)=\\min(1,\\exp(1))=1, & \\text{for } x\\to x-1.\n\\end{cases}\n$$\nThus left moves are always accepted (if within bounds), and right moves are accepted with probability $\\exp(-1)$.\n\nThe simulation starts at $x_{0}=2$ and proceeds for three steps using the given pseudo-random numbers.\n\nStep 1: Current $x=2$. Proposal random $r_{p,1}=0.60\\geq 0.5$ implies propose right: $x_{\\text{trial}}=3$ (valid). For a right move, $P_{\\text{acc}}=\\exp(-1)$. With $r_{a,1}=0.40$ and $\\exp(-1)\\approx 0.368$, we have $r_{a,1}>\\exp(-1)$, so the move is rejected. Therefore $x_{1}=2$.\n\nStep 2: Current $x=2$. Proposal random $r_{p,2}=0.25<0.5$ implies propose left: $x_{\\text{trial}}=1$ (valid). For a left move, $P_{\\text{acc}}=1$. With $r_{a,2}=0.90<1$, the move is accepted. Therefore $x_{2}=1$.\n\nStep 3: Current $x=1$. Proposal random $r_{p,3}=0.82\\geq 0.5$ implies propose right: $x_{\\text{trial}}=2$ (valid). For a right move, $P_{\\text{acc}}=\\exp(-1)$. With $r_{a,3}=0.30<\\exp(-1)\\approx 0.368$, the move is accepted. Therefore $x_{3}=2$.\n\nThe trajectory including the initial position and the three subsequent positions is $\\{x_{0},x_{1},x_{2},x_{3}\\}=\\{2,2,1,2\\}$. The time-averaged position over these four entries is\n$$\n\\langle x \\rangle=\\frac{2+2+1+2}{4}=\\frac{7}{4}=1.75.\n$$\nRounded to three significant figures, the result is $1.75$.", "answer": "$$\\boxed{1.75}$$", "id": "1971599"}, {"introduction": "While the Metropolis algorithm is fundamental, its local nature can be inefficient for studying collective phenomena like phase transitions. This practice introduces a more advanced and powerful tool: the Wolff cluster algorithm, which performs non-local updates by identifying and flipping entire clusters of correlated spins. By manually constructing a cluster and executing a Wolff update step, you will gain insight into how these sophisticated algorithms overcome the limitations of simple sampling and dramatically improve simulation efficiency [@problem_id:1971630]. This exercise provides a glimpse into the active field of algorithm development in computational physics.", "problem": "In computational statistical mechanics, the Wolff algorithm is a powerful Monte Carlo method used to simulate the Ising model, particularly near the critical temperature. Consider a 4x4 square lattice of spins, where each spin $s_i$ can be either up (+1) or down (-1). The system is governed by the Ising model with nearest-neighbor interactions. We will apply periodic boundary conditions, meaning the lattice wraps around from top to bottom and left to right.\n\nThe initial configuration of spins on the lattice is given as follows, where `+` denotes spin up (+1) and `-` denotes spin down (-1), and we use (row, column) 1-based indexing:\n\n```\n+ - + +\n- - + -\n+ - - +\n- + + -\n```\n\nA single update step of the Wolff algorithm proceeds as follows:\n1.  A single spin site is chosen at random to be the \"seed\" of a cluster.\n2.  The algorithm then examines the nearest neighbors of the seed spin. For each neighbor with the same spin orientation as the seed, a bond is \"activated\" with a probability $p = 1 - \\exp(-2\\beta J)$, where $J$ is the coupling constant and $\\beta$ is the inverse temperature.\n3.  If a bond is activated, the neighboring spin is added to the cluster. This process is repeated recursively: the neighbors of each newly added spin are also considered for addition to the cluster under the same rule. A spin is only considered for addition once.\n4.  Once no more spins can be added, the cluster is complete. All spins within the final cluster are flipped (from +1 to -1, or -1 to +1).\n\nFor this problem, we will perform a single, deterministic Wolff update step. The seed spin is chosen to be the spin at site (2, 2). The physical parameters are such that $2\\beta J = \\ln(4)$. To remove the stochastic element for this problem, you must use the following pre-determined sequence of pseudo-random numbers for each probabilistic decision you need to make, in the order they are required: `0.21, 0.89, 0.45, 0.60, 0.92, 0.15, 0.77, 0.33`. A bond is activated if the corresponding pseudo-random number is less than the probability $p$.\n\nDetermine the total number of spins that are flipped during this single update step.", "solution": "We use the Wolff cluster-update rule: for a bond between nearest neighbors with the same spin orientation, activate with probability $p=1-\\exp(-2\\beta J)$. Given $2\\beta J=\\ln(4)$,\n$$\np=1-\\exp(-\\ln(4))=1-\\frac{1}{4}=\\frac{3}{4}.\n$$\nThe seed is at site $(2,2)$, which from the lattice is $s_{2,2}=-1$. We fix a deterministic neighbor processing order for each site as up, right, down, left (with periodic boundary conditions), and we process sites in the order they are added to the cluster (breadth-first). A spin is considered for addition at most once; if it is already in the cluster or has already been tested, it is skipped with no random number drawn. A bond is activated if and only if the next pseudo-random number in the given sequence is less than $p=\\frac{3}{4}$.\n\nInitialize the cluster with the seed: cluster $C=\\{(2,2)\\}$.\n\nProcess $(2,2)$ (spin $-1$); examine neighbors in the order up, right, down, left:\n- Up $(1,2)$ has spin $-1$ (same). Draw $0.21<\\frac{3}{4}$, bond activates; add $(1,2)$ to $C$.\n- Right $(2,3)$ has spin $+1$ (opposite). Skip, no draw.\n- Down $(3,2)$ has spin $-1$ (same). Draw $0.89\\geq\\frac{3}{4}$, bond does not activate; do not add; mark as considered.\n- Left $(2,1)$ has spin $-1$ (same). Draw $0.45<\\frac{3}{4}$, bond activates; add $(2,1)$ to $C$.\n\nQueue now has $(1,2)$ then $(2,1)$.\n\nProcess $(1,2)$ (spin $-1$); neighbors up, right, down, left with periodic boundary conditions:\n- Up $(4,2)$ has spin $+1$ (opposite). Skip.\n- Right $(1,3)$ has spin $+1$ (opposite). Skip.\n- Down $(2,2)$ is already in $C$. Skip with no draw.\n- Left $(1,1)$ has spin $+1$ (opposite). Skip.\nNo additions and no draws used here.\n\nProcess $(2,1)$ (spin $-1$); neighbors up, right, down, left:\n- Up $(1,1)$ has spin $+1$ (opposite). Skip.\n- Right $(2,2)$ is already in $C$. Skip.\n- Down $(3,1)$ has spin $+1$ (opposite). Skip.\n- Left $(2,4)$ (periodic wrap) has spin $-1$ (same) and has not been considered. Draw $0.60<\\frac{3}{4}$, bond activates; add $(2,4)$ to $C$.\n\nProcess $(2,4)$ (spin $-1$); neighbors up, right, down, left:\n- Up $(1,4)$ has spin $+1$ (opposite). Skip.\n- Right $(2,1)$ is already in $C$. Skip.\n- Down $(3,4)$ has spin $+1$ (opposite). Skip.\n- Left $(2,3)$ has spin $+1$ (opposite). Skip.\nNo additions.\n\nThe cluster-building terminates. The final cluster is $C=\\{(2,2),(1,2),(2,1),(2,4)\\}$, containing $4$ spins. All spins in $C$ are flipped in the Wolff update. Therefore, the total number of spins flipped is $4$.", "answer": "$$\\boxed{4}$$", "id": "1971630"}]}