{"hands_on_practices": [{"introduction": "Calculating expectation values can sometimes be simplified by exploiting the properties of the state. This first exercise explores a scenario where the system is in an energy eigenstate, a stationary state with a definite energy. For such states, we can often relate the expectation value of one operator to the eigenvalue of another, bypassing the need for direct integration. You will calculate the expectation value of the momentum squared, $\\langle p^2 \\rangle$, for a particle in the ground state of an infinite potential well, a common model for a confined quantum particle, by cleverly connecting it to the system's total energy. [@problem_id:1991471]", "problem": "Consider a simplified one-dimensional model for an electron trapped within a semiconductor quantum wire of length $L$. We can approximate this system by treating the electron as a particle of mass $m_e$ confined to an infinite potential well, where the potential energy $V(x)$ is zero for $0 < x < L$ and infinite elsewhere. The electron is known to be in its lowest possible energy state, also known as the ground state. In this quantum state, the electron does not have a definite momentum, but we can determine a statistical average for the square of its momentum.\n\nCalculate the expectation value of the momentum squared operator, $\\langle p^2 \\rangle$, for this electron in the ground state. Express your final answer as an analytic expression in terms of the length of the wire $L$, the mass of the electron $m_e$, and the reduced Planck constant $\\hbar$.", "solution": "The expectation value of an observable corresponding to an operator $\\hat{A}$ for a system in a normalized state $\\psi$ is given by $\\langle A \\rangle = \\int \\psi^* \\hat{A} \\psi \\, dx$. However, for energy eigenstates, there is often a more direct method.\n\nThe Hamiltonian operator $\\hat{H}$ for a particle of mass $m_e$ in a one-dimensional potential $V(x)$ is given by the sum of the kinetic and potential energy operators:\n$$\n\\hat{H} = \\frac{\\hat{p}^2}{2m_e} + V(x)\n$$\nwhere $\\hat{p}$ is the momentum operator.\n\nFor the given scenario, the particle is in an infinite potential well. Inside the well, where the particle can exist ($0 < x < L$), the potential energy $V(x)$ is zero. Therefore, within this region, the Hamiltonian simplifies to just the kinetic energy operator:\n$$\n\\hat{H} = \\frac{\\hat{p}^2}{2m_e}\n$$\nThe ground state is an eigenstate of the Hamiltonian, meaning $\\hat{H}\\psi_1 = E_1\\psi_1$, where $E_1$ is the ground state energy eigenvalue. The expectation value of the Hamiltonian for an energy eigenstate is simply the energy eigenvalue itself.\n$$\n\\langle H \\rangle = E_1\n$$\nWe can also write the expectation value of the Hamiltonian using its definition in terms of the momentum operator:\n$$\n\\langle H \\rangle = \\left\\langle \\frac{\\hat{p}^2}{2m_e} \\right\\rangle\n$$\nSince $m_e$ is a constant, it can be taken out of the expectation value:\n$$\n\\langle H \\rangle = \\frac{1}{2m_e} \\langle p^2 \\rangle\n$$\nBy equating the two expressions for $\\langle H \\rangle$, we get a direct relationship between the ground state energy and the expectation value of the momentum squared:\n$$\nE_1 = \\frac{\\langle p^2 \\rangle}{2m_e}\n$$\nRearranging this equation gives an expression for $\\langle p^2 \\rangle$:\n$$\n\\langle p^2 \\rangle = 2m_e E_1\n$$\nNow, we need to find the ground state energy $E_1$ for a particle in a one-dimensional infinite square well of length $L$. The quantized energy levels for this system are given by the well-known formula:\n$$\nE_n = \\frac{n^2 \\pi^2 \\hbar^2}{2m_e L^2}\n$$\nwhere $n=1, 2, 3, \\dots$ is the principal quantum number.\n\nThe ground state corresponds to the lowest energy level, which is for $n=1$. Substituting $n=1$ into the energy formula gives:\n$$\nE_1 = \\frac{(1)^2 \\pi^2 \\hbar^2}{2m_e L^2} = \\frac{\\pi^2 \\hbar^2}{2m_e L^2}\n$$\nFinally, we substitute this expression for $E_1$ back into our equation for $\\langle p^2 \\rangle$:\n$$\n\\langle p^2 \\rangle = 2m_e \\left( \\frac{\\pi^2 \\hbar^2}{2m_e L^2} \\right)\n$$\nThe $2m_e$ terms cancel out, leaving the final result:\n$$\n\\langle p^2 \\rangle = \\frac{\\pi^2 \\hbar^2}{L^2}\n$$\nNote that although the problem specifies the mass $m_e$, it cancels out of the final expression for the expectation value of the momentum squared.", "answer": "$$\\boxed{\\frac{\\pi^2 \\hbar^2}{L^2}}$$", "id": "1991471"}, {"introduction": "While some states have definite values for certain observables, a quantum system is often in a superposition of multiple eigenstates. In this case, the expectation value represents the weighted average of all possible measurement outcomes. This practice moves beyond the simple eigenstate case to illustrate the general method for calculating an expectation value. You will determine $\\langle \\hat{L}_z \\rangle$ for a particle on a ring whose state is a non-trivial superposition, which requires you to first normalize the wavefunction and then apply the fundamental definition of the expectation value integral. [@problem_id:1991448]", "problem": "A particle of mass $\\mu$ is constrained to move on a circle of radius $R$. Its quantum state at time $t=0$ is described by the unnormalized wavefunction $\\Psi(\\phi) = C(\\cos(m\\phi) + i\\alpha\\sin(m\\phi))$, where $\\phi \\in [0, 2\\pi]$ is the angular coordinate. In this expression, $C$ is a normalization constant, $m$ is a non-zero integer, and $\\alpha$ is a real-valued dimensionless constant. The operator for the z-component of the angular momentum is given by $\\hat{L}_z = -i\\hbar \\frac{d}{d\\phi}$, where $\\hbar$ is the reduced Planck constant.\n\nDetermine the expectation value of the z-component of the angular momentum, $\\langle \\hat{L}_z \\rangle$, for this particle. Express your answer as a closed-form analytic expression in terms of $\\hbar$, $m$, and $\\alpha$.", "solution": "The expectation value of an operator $\\hat{A}$ for a state described by a wavefunction $\\Psi$ is given by the formula $\\langle \\hat{A} \\rangle = \\int \\Psi^* \\hat{A} \\Psi \\, d\\tau$, where the integration is over all space. For this problem, the operator is $\\hat{L}_z = -i\\hbar \\frac{d}{d\\phi}$ and the spatial coordinate is the angle $\\phi$, which ranges from $0$ to $2\\pi$.\n\nFirst, we must normalize the wavefunction $\\Psi(\\phi) = C(\\cos(m\\phi) + i\\alpha\\sin(m\\phi))$ to find the constant $C$. The normalization condition is $\\int_0^{2\\pi} \\Psi^*(\\phi)\\Psi(\\phi) \\, d\\phi = 1$. Let's assume $C$ is a real number.\n\nThe complex conjugate of the wavefunction is $\\Psi^*(\\phi) = C(\\cos(m\\phi) - i\\alpha\\sin(m\\phi))$.\nThus, the product $\\Psi^*\\Psi$ is:\n$$\n\\Psi^*(\\phi)\\Psi(\\phi) = |C|^2 (\\cos(m\\phi) - i\\alpha\\sin(m\\phi))(\\cos(m\\phi) + i\\alpha\\sin(m\\phi))\n$$\n$$\n= C^2 (\\cos^2(m\\phi) - (i\\alpha)^2\\sin^2(m\\phi))\n$$\n$$\n= C^2 (\\cos^2(m\\phi) + \\alpha^2\\sin^2(m\\phi))\n$$\nNow, we integrate this expression from $0$ to $2\\pi$:\n$$\n\\int_0^{2\\pi} C^2 (\\cos^2(m\\phi) + \\alpha^2\\sin^2(m\\phi)) \\, d\\phi = 1\n$$\n$$\nC^2 \\left( \\int_0^{2\\pi} \\cos^2(m\\phi) \\, d\\phi + \\alpha^2 \\int_0^{2\\pi} \\sin^2(m\\phi) \\, d\\phi \\right) = 1\n$$\nUsing the standard definite integrals $\\int_0^{2\\pi} \\cos^2(k x) \\, dx = \\pi$ and $\\int_0^{2\\pi} \\sin^2(k x) \\, dx = \\pi$ for any non-zero integer $k$:\n$$\nC^2 (\\pi + \\alpha^2 \\pi) = 1\n$$\n$$\nC^2 \\pi (1 + \\alpha^2) = 1 \\implies C^2 = \\frac{1}{\\pi(1+\\alpha^2)}\n$$\nWe will keep $C^2$ in this symbolic form for the expectation value calculation.\n\nNext, we calculate $\\langle \\hat{L}_z \\rangle = \\int_0^{2\\pi} \\Psi^*(\\phi) \\hat{L}_z \\Psi(\\phi) \\, d\\phi$.\nFirst, let's apply the operator $\\hat{L}_z$ to $\\Psi(\\phi)$:\n$$\n\\hat{L}_z \\Psi(\\phi) = -i\\hbar \\frac{d}{d\\phi} [C(\\cos(m\\phi) + i\\alpha\\sin(m\\phi))]\n$$\n$$\n= -i\\hbar C [ -m\\sin(m\\phi) + i\\alpha m\\cos(m\\phi) ]\n$$\n$$\n= C m \\hbar [ -i(-1)\\sin(m\\phi) + (-i)(i\\alpha)\\cos(m\\phi) ]\n$$\n$$\n= C m \\hbar [ i\\sin(m\\phi) + \\alpha\\cos(m\\phi) ]\n$$\nNow we can form the integrand for the expectation value:\n$$\n\\Psi^* \\hat{L}_z \\Psi = [C(\\cos(m\\phi) - i\\alpha\\sin(m\\phi))] [C m \\hbar ( \\alpha\\cos(m\\phi) + i\\sin(m\\phi) )]\n$$\n$$\n= C^2 m \\hbar (\\cos(m\\phi) - i\\alpha\\sin(m\\phi)) (\\alpha\\cos(m\\phi) + i\\sin(m\\phi))\n$$\nLet's expand the product of the complex terms:\n$$\n(\\cos(m\\phi) - i\\alpha\\sin(m\\phi)) (\\alpha\\cos(m\\phi) + i\\sin(m\\phi))\n$$\n$$\n= \\alpha\\cos^2(m\\phi) + i\\cos(m\\phi)\\sin(m\\phi) - i\\alpha^2\\sin(m\\phi)\\cos(m\\phi) - i^2\\alpha\\sin^2(m\\phi)\n$$\n$$\n= \\alpha\\cos^2(m\\phi) + \\alpha\\sin^2(m\\phi) + i(1-\\alpha^2)\\sin(m\\phi)\\cos(m\\phi)\n$$\n$$\n= \\alpha(\\cos^2(m\\phi)+\\sin^2(m\\phi)) + i\\frac{1-\\alpha^2}{2} (2\\sin(m\\phi)\\cos(m\\phi))\n$$\n$$\n= \\alpha + i\\frac{1-\\alpha^2}{2}\\sin(2m\\phi)\n$$\nNow, substitute this back into the integral for $\\langle \\hat{L}_z \\rangle$:\n$$\n\\langle \\hat{L}_z \\rangle = \\int_0^{2\\pi} C^2 m \\hbar \\left( \\alpha + i\\frac{1-\\alpha^2}{2}\\sin(2m\\phi) \\right) d\\phi\n$$\n$$\n= C^2 m \\hbar \\left[ \\int_0^{2\\pi} \\alpha \\, d\\phi + i\\frac{1-\\alpha^2}{2} \\int_0^{2\\pi} \\sin(2m\\phi) \\, d\\phi \\right]\n$$\nThe first integral is $\\int_0^{2\\pi} \\alpha \\, d\\phi = [\\alpha\\phi]_0^{2\\pi} = 2\\pi\\alpha$.\nThe second integral is $\\int_0^{2\\pi} \\sin(2m\\phi) \\, d\\phi = [-\\frac{\\cos(2m\\phi)}{2m}]_0^{2\\pi} = -\\frac{1}{2m}(\\cos(4m\\pi)-\\cos(0)) = -\\frac{1}{2m}(1-1) = 0$.\nSo the expression in the brackets evaluates to $2\\pi\\alpha$.\n$$\n\\langle \\hat{L}_z \\rangle = C^2 m \\hbar (2\\pi\\alpha)\n$$\nFinally, we substitute the value of $C^2 = \\frac{1}{\\pi(1+\\alpha^2)}$:\n$$\n\\langle \\hat{L}_z \\rangle = \\frac{1}{\\pi(1+\\alpha^2)} m \\hbar (2\\pi\\alpha)\n$$\n$$\n\\langle \\hat{L}_z \\rangle = \\frac{2\\alpha m \\hbar}{1+\\alpha^2}\n$$\nThe mass $\\mu$ and radius $R$ of the ring do not appear in the final answer, as the angular momentum operator and wavefunction were defined only in terms of the angular coordinate $\\phi$.", "answer": "$$\\boxed{\\frac{2\\alpha m \\hbar}{1+\\alpha^{2}}}$$", "id": "1991448"}, {"introduction": "Bridging the gap between analytic theory and practical application is a crucial skill in modern science. Many quantum systems have wavefunctions that are too complex for pen-and-paper integration, demanding computational approaches. This hands-on coding practice guides you through the numerical calculation of the momentum expectation value, $\\langle p_x \\rangle$, for a Gaussian wave packet. You will implement the core concepts of quantum mechanics on a discrete grid, using finite differences to approximate operators and Riemann sums to approximate integrals, mirroring the techniques used in professional research software. [@problem_id:2459784]", "problem": "You are asked to write a complete and runnable program that computes the expectation value of the momentum operator in one dimension for a complex wavefunction using a discrete spatial grid and a finite difference approximation for the spatial derivative. Work within atomic units, where the reduced Planck’s constant is set to $\\hbar = 1$, distances are measured in Bohr radii $a_0$, and momentum is measured in inverse Bohr $a_0^{-1}$.\n\nConsider the complex wavefunction\n$$\n\\psi(x) = N e^{-x^2/a^2} e^{i k x},\n$$\nwhere $N$ is the normalization constant, $a > 0$ is a real width parameter with units of $a_0$, and $k$ is a real wave number with units of $a_0^{-1}$. The expectation value of the momentum operator in the position representation is\n$$\n\\langle p_x \\rangle = \\int_{-\\infty}^{\\infty} \\psi(x)^{*} \\left(-i \\hbar \\frac{\\partial}{\\partial x}\\right) \\psi(x) \\, dx.\n$$\n\nYour program must:\n- Construct a uniform grid $x_j$ on the interval $[-L, L]$ with $N_x$ grid points, where $L > 0$ and $N_x \\ge 3$ are provided. Use spacing $\\Delta x = \\frac{2L}{N_x - 1}$.\n- Build the unnormalized wavefunction on the grid as $\\psi_j = e^{-x_j^2/a^2} e^{i k x_j}$ and then determine $N$ numerically by enforcing the discrete normalization $\\sum_j |\\psi_j|^2 \\Delta x = 1$. Replace $\\psi_j \\leftarrow N \\psi_j$ after normalization.\n- Approximate the spatial derivative $\\frac{\\partial \\psi}{\\partial x}$ on the grid by a finite difference formula consistent with a uniform grid.\n- Approximate the expectation value $\\langle p_x \\rangle$ by the Riemann sum\n$$\n\\langle p_x \\rangle \\approx \\sum_{j=0}^{N_x-1} \\psi_j^* \\left(-i \\hbar \\left.\\frac{\\partial \\psi}{\\partial x}\\right|_{x_j}\\right) \\Delta x,\n$$\nand report the real part of this value as the result for each test case. Use $\\hbar = 1$.\n\nPhysical units requirement: express the final results in inverse Bohr $a_0^{-1}$ as floating-point numbers.\n\nTest suite (each case specifies $L$, $N_x$, $a$, $k$ in that order; all $L$ and $a$ in $a_0$, all $k$ in $a_0^{-1}$):\n- Test case A: $L = 10.0$, $N_x = 20001$, $a = 1.0$, $k = 2.0$.\n- Test case B: $L = 10.0$, $N_x = 20001$, $a = 1.5$, $k = 0.0$.\n- Test case C: $L = 10.0$, $N_x = 20001$, $a = 0.8$, $k = -3.0$.\n- Test case D: $L = 3.0$, $N_x = 6001$, $a = 0.2$, $k = 5.0$.\n- Test case E: $L = 10.0$, $N_x = 1001$, $a = 1.0$, $k = 2.0$.\n\nFinal output format: your program should produce a single line of output containing the computed $\\langle p_x \\rangle$ values for the test cases A through E, in this order, as a comma-separated list enclosed in square brackets. Each value must be rounded to $8$ decimal places. For example, `[value_A,value_B,value_C,value_D,value_E]`.", "solution": "The problem statement is parsed and validated. It is scientifically sound, well-posed, and contains all necessary information for a unique solution. It is a standard exercise in computational quantum mechanics. We will proceed with the solution.\n\nThe objective is to compute the expectation value of the one-dimensional momentum operator, $\\hat{p}_x$, for a particle described by a Gaussian wave packet. The wavefunction is given by\n$$\n\\psi(x) = N e^{-x^2/a^2} e^{i k x}\n$$\nwhere $N$ is the normalization constant, $a$ is a real width parameter, and $k$ is the wave number. In atomic units, the reduced Planck constant $\\hbar = 1$, and the momentum operator in the position representation is\n$$\n\\hat{p}_x = -i \\frac{\\partial}{\\partial x}\n$$\nThe expectation value is defined by the integral\n$$\n\\langle p_x \\rangle = \\int_{-\\infty}^{\\infty} \\psi(x)^* \\hat{p}_x \\psi(x) \\, dx\n$$\nwhere $\\psi(x)^*$ is the complex conjugate of $\\psi(x)$.\n\nAnalytically, for a properly normalized wavefunction, the expectation value is exactly $\\langle p_x \\rangle = \\hbar k$. With $\\hbar = 1$, we expect $\\langle p_x \\rangle = k$. This provides a fundamental check for our numerical implementation. Any deviation from this result will be attributable to the numerical errors inherent in the discretization of a continuous problem, namely the truncation of the integration domain and the approximation of the derivative.\n\nThe numerical solution requires discretizing the problem onto a spatial grid.\n\n1.  **Grid Construction**: A uniform grid $x_j$ is constructed on the finite interval $[-L, L]$, which approximates the infinite domain $(-\\infty, \\infty)$. The grid consists of $N_x$ points, indexed by $j = 0, 1, \\dots, N_x-1$. The grid points are given by $x_j = -L + j \\Delta x$, with a constant spacing of $\\Delta x = \\frac{2L}{N_x - 1}$. The choice of $L$ must be sufficiently large compared to the width parameter $a$ to ensure the Gaussian envelope $e^{-x^2/a^2}$ is negligible at the boundaries $x = \\pm L$.\n\n2.  **Wavefunction Discretization and Normalization**: The continuous wavefunction $\\psi(x)$ is evaluated at each grid point $x_j$ to obtain a discrete complex vector $\\psi_j$. Initially, we compute an unnormalized vector, $\\psi_{\\text{un}, j} = e^{-x_j^2/a^2} e^{i k x_j}$. The normalization condition $\\int_{-\\infty}^{\\infty} |\\psi(x)|^2 dx = 1$ is approximated by the Riemann sum $\\sum_{j=0}^{N_x-1} |\\psi_j|^2 \\Delta x = 1$. The normalization constant $N$ is thus determined numerically:\n    $$\n    N^2 \\sum_{j=0}^{N_x-1} |\\psi_{\\text{un}, j}|^2 \\Delta x = 1 \\implies N = \\frac{1}{\\sqrt{\\sum_{j=0}^{N_x-1} |\\psi_{\\text{un}, j}|^2 \\Delta x}}\n    $$\n    The normalized discrete wavefunction is then $\\psi_j = N \\psi_{\\text{un}, j}$.\n\n3.  **Derivative Approximation**: The spatial derivative $\\frac{\\partial \\psi}{\\partial x}$ is approximated using a finite difference method. For high accuracy on a uniform grid, a second-order central difference scheme is a standard and appropriate choice for all interior points. For the boundary points, corresponding second-order forward and backward difference formulas should be used to maintain overall accuracy. The `numpy.gradient` function implements precisely this logic. It computes the derivative of the discrete function $\\psi_j$ with respect to the grid spacing $\\Delta x$.\n\n4.  **Expectation Value Calculation**: The integral for $\\langle p_x \\rangle$ is approximated by a Riemann sum over the grid. We first apply the discretized momentum operator to the wavefunction vector $\\psi_j$:\n    $$\n    (\\hat{p}_x \\psi)_j = -i \\left. \\frac{\\partial \\psi}{\\partial x} \\right|_{x_j}\n    $$\n    where the derivative is the vector obtained from the finite difference calculation. The expectation value is then computed as:\n    $$\n    \\langle p_x \\rangle \\approx \\sum_{j=0}^{N_x-1} \\psi_j^* (\\hat{p}_x \\psi)_j \\Delta x\n    $$\n    The problem requires reporting the real part of this complex-valued sum. Due to the properties of the operator and the wavefunction, the analytical result is purely real. The imaginary part of the numerical result should be close to zero, representing numerical noise.\n\nThe implementation will follow these steps for each test case provided. The accuracy of the result is expected to be higher for finer grids (larger $N_x$ and smaller $\\Delta x$). We will observe this by comparing Test Case A and Test Case E, which differ only in the number of grid points $N_x$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the expectation value of the momentum operator for a Gaussian\n    wave packet on a discrete grid, according to the problem specification.\n    \"\"\"\n\n    # Test cases: (L, Nx, a, k)\n    # L in a_0, a in a_0, k in a_0^-1\n    test_cases = [\n        (10.0, 20001, 1.0, 2.0),   # Test case A\n        (10.0, 20001, 1.5, 0.0),   # Test case B\n        (10.0, 20001, 0.8, -3.0),  # Test case C\n        (3.0, 6001, 0.2, 5.0),    # Test case D\n        (10.0, 1001, 1.0, 2.0),    # Test case E\n    ]\n\n    results = []\n    \n    # Atomic units are used, so hbar = 1.\n    hbar = 1.0\n\n    for case in test_cases:\n        L, Nx, a, k = case\n\n        # Step 1: Construct the uniform grid\n        x = np.linspace(-L, L, Nx)\n        dx = (2 * L) / (Nx - 1)\n\n        # Step 2: Build the unnormalized wavefunction\n        # psi_unnormalized = exp(-x^2/a^2) * exp(i*k*x)\n        psi_unnormalized = np.exp(-x**2 / a**2) * np.exp(1j * k * x)\n\n        # Step 3: Numerically determine the normalization constant N\n        # The normalization condition is integral(|psi|^2)dx = 1.\n        # N^2 * sum(|psi_unnormalized|^2) * dx = 1\n        prob_density_un = np.abs(psi_unnormalized)**2\n        norm_integral = np.sum(prob_density_un) * dx\n        N = 1.0 / np.sqrt(norm_integral)\n        \n        # Normalize the wavefunction\n        psi = N * psi_unnormalized\n\n        # Optional check: verify normalization\n        # check_norm = np.sum(np.abs(psi)**2) * dx\n        # print(f\"Normalization check for case {case}: {check_norm}\")\n\n        # Step 4: Approximate the spatial derivative\n        # Use a second-order accurate finite difference scheme.\n        # np.gradient is suitable as it uses central differences for interior\n        # points and second-order one-sided differences at the boundaries.\n        dpsi_dx = np.gradient(psi, dx)\n\n        # Step 5: Apply the momentum operator a_hat = -i*hbar*d/dx\n        p_psi = -1j * hbar * dpsi_dx\n\n        # Step 6: Approximate the expectation value integral by a Riemann sum\n        # <p_x> = integral(psi* * a_hat * psi) dx\n        integrand = np.conj(psi) * p_psi\n        px_expectation_value = np.sum(integrand) * dx\n\n        # The problem asks for the real part of the result.\n        # Analytically, the expectation value should be k, which is real.\n        result = np.real(px_expectation_value)\n        results.append(result)\n\n    # Format the results as specified: a list of strings rounded to 8 decimal places.\n    formatted_results = [f\"{res:.8f}\" for res in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2459784"}]}