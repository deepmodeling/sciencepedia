{"hands_on_practices": [{"introduction": "Let's begin with a classic arrangement that illustrates the core concept of mutual inductance. This exercise asks you to find the coupling between a large loop and a much smaller one at its center, where the small loop is tilted by an angle $\\theta$. By leveraging an approximation based on the disparate scales ($r \\ll R$), you can calculate the mutual inductance using the basic definition of magnetic flux, providing a solid intuitive foundation before tackling more complex integrals [@problem_id:1594773].", "problem": "A large circular wire loop of radius $R$ and a very small circular wire loop of radius $r$, with the condition $r \\ll R$, are placed such that they are concentric. The plane of the small loop is tilted, forming an angle $\\theta$ with the plane of the large loop. Your goal is to determine the mutual inductance $M$ between this pair of loops. Derive an expression for $M$ in terms of the given parameters $R$, $r$, $\\theta$, and the permeability of free space, $\\mu_0$.", "solution": "Mutual inductance is defined as $M=\\frac{\\Phi_{21}}{I_{1}}$, where $\\Phi_{21}$ is the magnetic flux through loop 2 (the small loop) due to current $I_{1}$ in loop 1 (the large loop).\n\nThe magnetic field at the center of a circular loop of radius $R$ carrying current $I_{1}$ is, by the Biot–Savart law result,\n$$\nB=\\frac{\\mu_{0} I_{1}}{2R}.\n$$\nFor $r \\ll R$, the small loop samples the field of the large loop over a region where the field is approximately uniform and equal to its value at the common center. The flux through the small loop is\n$$\n\\Phi_{21}=\\int \\mathbf{B}\\cdot d\\mathbf{a}=B\\,A_{2}\\cos\\theta,\n$$\nwhere $A_{2}=\\pi r^{2}$ is the area of the small loop and $\\theta$ is the angle between the normal to the small loop and the direction of $\\mathbf{B}$ (which is along the normal to the large loop). Substituting $B$ and $A_{2}$,\n$$\n\\Phi_{21}=\\left(\\frac{\\mu_{0} I_{1}}{2R}\\right)\\left(\\pi r^{2}\\right)\\cos\\theta.\n$$\nTherefore, the mutual inductance is\n$$\nM=\\frac{\\Phi_{21}}{I_{1}}=\\frac{\\mu_{0}\\pi r^{2}}{2R}\\cos\\theta.\n$$\nThis result holds to leading order in the approximation $r \\ll R$.", "answer": "$$\\boxed{\\frac{\\mu_{0}\\pi r^{2}}{2R}\\cos\\theta}$$", "id": "1594773"}, {"introduction": "Building on the foundational concepts, this next practice challenges you to move beyond simple approximations. Here, you'll calculate the mutual inductance between a straight wire and a coplanar \"pie-slice\" loop by directly integrating the magnetic flux over the loop's area [@problem_id:1594743]. This problem is an excellent exercise in applying vector calculus to find the total flux from a non-uniform magnetic field, a crucial skill in electromagnetism.", "problem": "An infinitely long, straight wire carries a steady current $I$. A rigid, closed conducting loop, shaped like a sector of a circle (a \"pie slice\"), lies in the same plane as the wire. The vertex of the sector is located on the straight wire. One of the two straight radial edges of the sector, of length $R$, is oriented to be perpendicular to the wire. The other radial edge also has length $R$, and the angle between the two radial edges is $\\alpha$, with $0 < \\alpha < \\pi/2$ radians. The entire area of the sector lies on one side of the perpendicular radial edge. Determine the mutual inductance $M$ between the wire and the loop. Express your answer in terms of $R$, $\\alpha$, and the permeability of free space, $\\mu_0$.", "solution": "Let the infinitely long straight wire carry current $I$ along the $x$-axis, and let the rigid conducting loop lie in the $x$-$y$ plane with its vertex at the origin on the wire. Choose polar coordinates $(r,\\theta)$ in the plane with the angle $\\theta$ measured from the $+y$-axis toward the $+x$-axis, so that the two radial edges of the sector are at $\\theta=0$ and $\\theta=\\alpha$, and $0<\\alpha<\\frac{\\pi}{2}$. The sector occupies $0\\leq r\\leq R$ and $0\\leq \\theta\\leq \\alpha$.\n\nBy Ampere’s law (or Biot–Savart law), the magnetic field magnitude due to an infinite straight wire at perpendicular distance $\\rho$ is\n$$\nB(\\rho)=\\frac{\\mu_{0} I}{2\\pi \\rho}.\n$$\nFor a point $(x,y,0)$ in the plane with the wire along the $x$-axis, the perpendicular distance to the wire is $\\rho=|y|$. With the above coordinates, $y=r\\cos\\theta$, and since $0\\leq\\theta\\leq\\alpha<\\frac{\\pi}{2}$, we have $\\cos\\theta>0$, so $\\rho=r\\cos\\theta$. The magnetic field at $z=0$ is normal to the loop (along $\\pm\\hat{z}$), hence its normal component magnitude through the loop is\n$$\nB_{n}(r,\\theta)=\\frac{\\mu_{0} I}{2\\pi r\\cos\\theta}.\n$$\n\nThe magnetic flux through the sector is\n$$\n\\Phi=\\int_{0}^{\\alpha}\\int_{0}^{R} B_{n}(r,\\theta)\\,r\\,dr\\,d\\theta\n=\\int_{0}^{\\alpha}\\int_{0}^{R}\\frac{\\mu_{0} I}{2\\pi r\\cos\\theta}\\,r\\,dr\\,d\\theta\n=\\frac{\\mu_{0} I}{2\\pi}\\int_{0}^{\\alpha}\\frac{1}{\\cos\\theta}\\left(\\int_{0}^{R}dr\\right)d\\theta.\n$$\nEvaluating the inner integral gives\n$$\n\\Phi=\\frac{\\mu_{0} I R}{2\\pi}\\int_{0}^{\\alpha}\\sec\\theta\\,d\\theta.\n$$\nUsing $\\int \\sec\\theta\\,d\\theta=\\ln|\\sec\\theta+\\tan\\theta|$, and noting $\\sec 0+\\tan 0=1$, we obtain\n$$\n\\Phi=\\frac{\\mu_{0} I R}{2\\pi}\\ln\\!\\bigl(\\sec\\alpha+\\tan\\alpha\\bigr).\n$$\n\nThe mutual inductance $M$ is defined by $M=\\Phi/I$, hence\n$$\nM=\\frac{\\mu_{0} R}{2\\pi}\\ln\\!\\bigl(\\sec\\alpha+\\tan\\alpha\\bigr).\n$$\nThis expression is finite for $0<\\alpha<\\frac{\\pi}{2}$, as required.", "answer": "$$\\boxed{\\frac{\\mu_{0} R}{2\\pi}\\ln\\!\\bigl(\\sec\\alpha+\\tan\\alpha\\bigr)}$$", "id": "1594743"}, {"introduction": "While flux calculations are powerful, many real-world scenarios involve complex geometries where an analytical approach is intractable. This practice introduces the full Neumann formula, a general and elegant expression for mutual inductance, and challenges you to apply it to arbitrarily oriented loops using numerical methods [@problem_id:2419641]. Tackling this problem will bridge the gap between abstract theory and practical, computational physics, demonstrating how engineers and scientists solve for inductance in complex systems.", "problem": "You are given two thin, closed, circular wire loops in free space, modeled as curves $\\mathcal{C}_1$ and $\\mathcal{C}_2$ in three-dimensional Euclidean space. Each loop $i \\in \\{1,2\\}$ is characterized by a radius $R_i$ (in meters), a center position vector $\\mathbf{c}_i$ (in meters), and a unit normal vector $\\mathbf{n}_i$ indicating the orientation of its plane. The magnetic constant $\\mu_0$ equals $4\\pi \\times 10^{-7}$ henry per meter in the International System of Units (SI). The mutual inductance $M$ (in henries) between the two loops is defined from first principles by the Neumann formula:\n$$\nM \\;=\\; \\frac{\\mu_0}{4\\pi}\\;\\oint_{\\mathcal{C}_1}\\;\\oint_{\\mathcal{C}_2}\\;\\frac{\\mathrm{d}\\boldsymbol{\\ell}_1 \\cdot \\mathrm{d}\\boldsymbol{\\ell}_2}{\\|\\mathbf{r}_1 - \\mathbf{r}_2\\|}\\,,\n$$\nwhere $\\mathbf{r}_1 \\in \\mathcal{C}_1$, $\\mathbf{r}_2 \\in \\mathcal{C}_2$, and $\\mathrm{d}\\boldsymbol{\\ell}_1$, $\\mathrm{d}\\boldsymbol{\\ell}_2$ are the differential line elements along the loops. Model each loop as an ideal circular filament. Any angular parameter used must be interpreted in radians.\n\nWrite a program that evaluates $M$ numerically for each of the following test cases. All input data are given in meters for geometric quantities and are to be treated exactly as stated. You must assume free space everywhere and no magnetic materials are present. The final answers must be expressed in henries as floating-point numbers.\n\nTest suite (process in the given order):\n\n- Case $1$ (general non-coaxial, non-coplanar, moderate separation):\n  - $R_1 = 0.10$, $\\mathbf{c}_1 = (0.00,\\,0.00,\\,0.00)$, $\\mathbf{n}_1 = (0,\\,0,\\,1)$.\n  - $R_2 = 0.08$, $\\mathbf{c}_2 = (0.05,\\,0.02,\\,0.03)$, $\\mathbf{n}_2 = \\frac{1}{\\sqrt{3}}(1,\\,1,\\,1)$.\n\n- Case $2$ (large separation, small coupling):\n  - $R_1 = 0.20$, $\\mathbf{c}_1 = (0.20,\\,-0.10,\\,0.00)$, $\\mathbf{n}_1 = (0,\\,1,\\,0)$.\n  - $R_2 = 0.15$, $\\mathbf{c}_2 = (1.00,\\,-0.50,\\,0.80)$, $\\mathbf{n}_2 = (0,\\,0,\\,1)$.\n\n- Case $3$ (nearly intersecting orientation, small offset to avoid intersection):\n  - $R_1 = 0.10$, $\\mathbf{c}_1 = (0.00,\\,0.00,\\,0.00)$, $\\mathbf{n}_1 = (0,\\,0,\\,1)$.\n  - $R_2 = 0.10$, $\\mathbf{c}_2 = (0.005,\\,0.00,\\,0.00)$, $\\mathbf{n}_2 = (0,\\,1,\\,0)$.\n\n- Case $4$ (arbitrary oblique orientations and offsets):\n  - $R_1 = 0.12$, $\\mathbf{c}_1 = (-0.03,\\,0.04,\\,0.02)$, $\\mathbf{n}_1 = \\frac{1}{\\sqrt{(0.2)^2+(0.9)^2+(0.4)^2}}(0.2,\\,0.9,\\,0.4)$.\n  - $R_2 = 0.07$, $\\mathbf{c}_2 = (0.06,\\,-0.02,\\,0.05)$, $\\mathbf{n}_2 = \\frac{1}{\\sqrt{(-0.3)^2+(0.1)^2+(0.95)^2}}(-0.3,\\,0.1,\\,0.95)$.\n\nRequirements:\n\n- Treat each loop as a perfect circle lying in the plane orthogonal to $\\mathbf{n}_i$, centered at $\\mathbf{c}_i$, with radius $R_i$.\n- You must evaluate the defining double line integral of $M$ over the angular parameters that traverse each circle once over the interval $[0,\\,2\\pi]$, with angles in radians.\n- Output unit: henries. Each result must be a floating-point number.\n- Final output format: your program should produce a single line containing a comma-separated list of the four numerical results enclosed in square brackets, in the order of cases $1$ through $4$, for example, $[m_1,m_2,m_3,m_4]$. Each $m_i$ must be formatted in scientific notation with at least $10$ significant digits (for example, $1.234567890\\times 10^{-6}$ should be printed as $1.234567890e-06$). No extra text or spaces are allowed in the output line.", "solution": "The problem as stated is scientifically sound, self-contained, and well-posed. It is a standard problem in computational electromagnetics, grounded in the fundamental principles of magnetostatics. All necessary data are provided, and the problem is objective and free of ambiguity. Therefore, a solution will be provided.\n\nThe mutual inductance $M$ between two closed current loops $\\mathcal{C}_1$ and $\\mathcal{C}_2$ is defined by the Neumann formula:\n$$\nM \\;=\\; \\frac{\\mu_0}{4\\pi}\\;\\oint_{\\mathcal{C}_1}\\;\\oint_{\\mathcal{C}_2}\\;\\frac{\\mathrm{d}\\boldsymbol{\\ell}_1 \\cdot \\mathrm{d}\\boldsymbol{\\ell}_2}{\\|\\mathbf{r}_1 - \\mathbf{r}_2\\|}\\\n$$\nHere, $\\mu_0 = 4\\pi \\times 10^{-7}$ henry per meter is the magnetic constant, which simplifies the leading factor to $\\frac{\\mu_0}{4\\pi} = 10^{-7}$ in SI units. The vectors $\\mathbf{r}_1$ and $\\mathbf{r}_2$ are position vectors pointing to points on loops $\\mathcal{C}_1$ and $\\mathcal{C}_2$, respectively, and $\\mathrm{d}\\boldsymbol{\\ell}_1$, $\\mathrm{d}\\boldsymbol{\\ell}_2$ are the differential vector line elements along these loops.\n\nTo evaluate this double line integral, we must first parameterize the circular loops. A circle $\\mathcal{C}_i$ in three-dimensional space is specified by its center $\\mathbf{c}_i$, its radius $R_i$, and a unit normal vector to its plane $\\mathbf{n}_i$. To describe points on the circle, it is convenient to establish a local right-handed orthonormal basis $(\\mathbf{u}_i, \\mathbf{v}_i, \\mathbf{n}_i)$, where the vectors $\\mathbf{u}_i$ and $\\mathbf{v}_i$ span the plane containing the circle.\n\nA robust procedure for constructing these basis vectors for a given $\\mathbf{n}_i$ is as follows:\n$1$. Select an auxiliary vector $\\mathbf{t}$ that is not collinear with $\\mathbf{n}_i$. A standard choice is $\\mathbf{t} = (0, 0, 1)$. If $\\mathbf{n}_i$ is parallel to the $z$-axis (i.e., $\\mathbf{n}_i = (0, 0, \\pm 1)$), a different vector, such as $\\mathbf{t} = (1, 0, 0)$, must be used to ensure the cross product is non-zero.\n$2$. The first planar basis vector $\\mathbf{u}_i$ is obtained by computing the cross product of $\\mathbf{n}_i$ and $\\mathbf{t}$ and normalizing the result:\n$$\n\\mathbf{u}_i = \\frac{\\mathbf{n}_i \\times \\mathbf{t}}{\\|\\mathbf{n}_i \\times \\mathbf{t}\\|}\n$$\n$3$. The second planar basis vector $\\mathbf{v}_i$ is then found by the cross product of $\\mathbf{n}_i$ and $\\mathbf{u}_i$, which completes the orthonormal set:\n$$\n\\mathbf{v}_i = \\mathbf{n}_i \\times \\mathbf{u}_i\n$$\nWith this basis, any point $\\mathbf{r}_i$ on the circle $\\mathcal{C}_i$ can be parameterized by an angular variable $\\theta_i \\in [0, 2\\pi]$:\n$$\n\\mathbf{r}_i(\\theta_i) = \\mathbf{c}_i + R_i (\\cos(\\theta_i) \\mathbf{u}_i + \\sin(\\theta_i) \\mathbf{v}_i)\n$$\nThe differential line element $\\mathrm{d}\\boldsymbol{\\ell}_i$ is found by differentiating $\\mathbf{r}_i(\\theta_i)$ with respect to its parameter $\\theta_i$:\n$$\n\\mathrm{d}\\boldsymbol{\\ell}_i = \\frac{\\mathrm{d}\\mathbf{r}_i}{\\mathrm{d}\\theta_i} \\mathrm{d}\\theta_i = R_i (-\\sin(\\theta_i) \\mathbf{u}_i + \\cos(\\theta_i) \\mathbf{v}_i) \\mathrm{d}\\theta_i\n$$\nBy substituting these expressions for both loops (with indices $1$ and $2$) into the Neumann formula, the double line integral is converted into a double definite integral over the parameters $\\theta_1$ and $\\theta_2$:\n$$\nM = \\frac{\\mu_0}{4\\pi} \\int_{0}^{2\\pi} \\int_{0}^{2\\pi} \\frac{\\left(\\frac{\\mathrm{d}\\mathbf{r}_1(\\theta_1)}{\\mathrm{d}\\theta_1}\\right) \\cdot \\left(\\frac{\\mathrm{d}\\mathbf{r}_2(\\theta_2)}{\\mathrm{d}\\theta_2}\\right)}{\\|\\mathbf{r}_1(\\theta_1) - \\mathbf{r}_2(\\theta_2)\\|} \\mathrm{d}\\theta_1 \\mathrm{d}\\theta_2\n$$\nThe integrand's numerator is the dot product of the two tangent vectors:\n$$\n\\left(\\frac{\\mathrm{d}\\mathbf{r}_1}{\\mathrm{d}\\theta_1}\\right) \\cdot \\left(\\frac{\\mathrm{d}\\mathbf{r}_2}{\\mathrm{d}\\theta_2}\\right) = R_1 R_2 \\left( -\\sin(\\theta_1)\\mathbf{u}_1 + \\cos(\\theta_1)\\mathbf{v}_1 \\right) \\cdot \\left(-\\sin(\\theta_2)\\mathbf{u}_2 + \\cos(\\theta_2)\\mathbf{v}_2 \\right)\n$$\nThe denominator is the magnitude of the vector separating the two points on the loops:\n$$\n\\|\\mathbf{r}_1(\\theta_1) - \\mathbf{r}_2(\\theta_2)\\| = \\|(\\mathbf{c}_1 - \\mathbf{c}_2) + R_1(\\cos(\\theta_1)\\mathbf{u}_1 + \\sin(\\theta_1)\\mathbf{v}_1) - R_2(\\cos(\\theta_2)\\mathbf{u}_2 + \\sin(\\theta_2)\\mathbf{v}_2)\\|\n$$\nThis integral does not generally have a closed-form solution and must be evaluated numerically. The program will implement this computation using a standard numerical quadrature library. The algorithm proceeds as follows for each test case:\n$1$. The loop parameters ($R_i, \\mathbf{c}_i, \\mathbf{n}_i$) are defined. Any provided normal vectors are normalized to ensure they are unit vectors.\n$2$. The orthonormal basis vectors $(\\mathbf{u}_i, \\mathbf{v}_i)$ for each loop are pre-computed.\n$3$. An integrand function is defined, which takes the integration variables $(\\theta_2, \\theta_1)$ and returns the value of the kernel. This argument order aligns with the requirements of numerical integration routines in `scipy`, which evaluate the inner integral first.\n$4$. The double integral over the domain $[0, 2\\pi] \\times [0, 2\\pi]$ is computed using `scipy.integrate.dblquad`. High precision tolerances are set to ensure accuracy, particularly for cases where the loops are in close proximity.\n$5$. The result of the integration is multiplied by the constant factor $\\frac{\\mu_0}{4\\pi} = 10^{-7}$ to yield the final mutual inductance $M$ in units of henries.\n\nThis procedure is systematically applied to all provided test cases, and the results are formatted as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import dblquad\n\ndef solve():\n    \"\"\"\n    Calculates the mutual inductance between two circular loops for several test cases.\n    \"\"\"\n    \n    # Magnetic constant mu_0 / (4*pi) in H/m\n    MU0_OVER_4PI = 1e-7\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: General non-coaxial, non-coplanar, moderate separation\n        {\n            \"R1\": 0.10, \"c1\": (0.00, 0.00, 0.00), \"n1\": (0.0, 0.0, 1.0),\n            \"R2\": 0.08, \"c2\": (0.05, 0.02, 0.03), \"n2\": (1.0, 1.0, 1.0),\n        },\n        # Case 2: Large separation, small coupling\n        {\n            \"R1\": 0.20, \"c1\": (0.20, -0.10, 0.00), \"n1\": (0.0, 1.0, 0.0),\n            \"R2\": 0.15, \"c2\": (1.00, -0.50, 0.80), \"n2\": (0.0, 0.0, 1.0),\n        },\n        # Case 3: Nearly intersecting orientation\n        {\n            \"R1\": 0.10, \"c1\": (0.00, 0.00, 0.00), \"n1\": (0.0, 0.0, 1.0),\n            \"R2\": 0.10, \"c2\": (0.005, 0.00, 0.00), \"n2\": (0.0, 1.0, 0.0),\n        },\n        # Case 4: Arbitrary oblique orientations and offsets\n        {\n            \"R1\": 0.12, \"c1\": (-0.03, 0.04, 0.02), \"n1\": (0.2, 0.9, 0.4),\n            \"R2\": 0.07, \"c2\": (0.06, -0.02, 0.05), \"n2\": (-0.3, 0.1, 0.95),\n        },\n    ]\n\n    results = []\n\n    def setup_loop_basis(n_vec):\n        \"\"\"\n        Given a normal vector n, creates an orthonormal basis (u, v, n).\n        \"\"\"\n        n = np.array(n_vec, dtype=float)\n        n /= np.linalg.norm(n)\n        \n        # Choose an auxiliary vector t not parallel to n\n        if np.abs(np.dot(n, [0.0, 0.0, 1.0])) > 1.0 - 1e-9:\n            # n is parallel to the z-axis, so choose t along the x-axis\n            t = np.array([1.0, 0.0, 0.0])\n        else:\n            # n is not parallel to the z-axis, so choose t along the z-axis\n            t = np.array([0.0, 0.0, 1.0])\n            \n        u = np.cross(n, t)\n        u /= np.linalg.norm(u)\n        \n        v = np.cross(n, u)\n        return u, v\n\n    for case in test_cases:\n        # Unpack parameters\n        R1, c1, n1 = case[\"R1\"], np.array(case[\"c1\"]), np.array(case[\"n1\"])\n        R2, c2, n2 = case[\"R2\"], np.array(case[\"c2\"]), np.array(case[\"n2\"])\n        \n        # Normalize normal vectors\n        n1 /= np.linalg.norm(n1)\n        n2 /= np.linalg.norm(n2)\n        \n        # Setup local coordinate systems for loops\n        u1, v1 = setup_loop_basis(n1)\n        u2, v2 = setup_loop_basis(n2)\n        \n        # Define the integrand for dblquad\n        def integrand(theta2, theta1):\n            # Position vectors on each loop\n            r1 = c1 + R1 * (np.cos(theta1) * u1 + np.sin(theta1) * v1)\n            r2 = c2 + R2 * (np.cos(theta2) * u2 + np.sin(theta2) * v2)\n            \n            # Differential line elements (tangent vectors scaled by R)\n            dl1_dth1 = R1 * (-np.sin(theta1) * u1 + np.cos(theta1) * v1)\n            dl2_dth2 = R2 * (-np.sin(theta2) * u2 + np.cos(theta2) * v2)\n            \n            # Numerator of the Neumann formula kernel\n            numerator = np.dot(dl1_dth1, dl2_dth2)\n            \n            # Denominator of the Neumann formula kernel\n            distance = np.linalg.norm(r1 - r2)\n            \n            # The problem setup ensures distance is never zero\n            return numerator / distance\n\n        # Perform numerical integration over theta1 from 0 to 2*pi and theta2 from 0 to 2*pi\n        integral_val, _ = dblquad(\n            integrand,\n            0, 2 * np.pi,  # Outer integral limits (theta1)\n            0, 2 * np.pi,  # Inner integral limits (theta2)\n            epsabs=1e-12, epsrel=1e-12 # Strict tolerance for high accuracy\n        )\n        \n        mutual_inductance = MU0_OVER_4PI * integral_val\n        results.append(mutual_inductance)\n\n    # Format the final output string as required\n    output_str = f\"[{','.join(f'{r:.15e}' for r in results)}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2419641"}]}