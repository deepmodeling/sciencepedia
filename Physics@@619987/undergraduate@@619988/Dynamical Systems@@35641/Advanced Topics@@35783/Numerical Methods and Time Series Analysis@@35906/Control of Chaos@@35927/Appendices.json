{"hands_on_practices": [{"introduction": "Before we can control a chaotic system, we must first understand its behavior in the immediate vicinity of the orbits we wish to stabilize. This exercise introduces the essential technique of linearization, which forms the bedrock of most chaos control methods. By calculating the Jacobian matrix for the classic Hénon map at a fixed point [@problem_id:1669879], you will practice approximating complex nonlinear dynamics with a simpler linear system, a foundational skill for analyzing stability and designing control strategies.", "problem": "The Hénon map is a discrete-time dynamical system that serves as a classic example of chaotic behavior. It is defined by the mapping $(x_n, y_n) \\to (x_{n+1}, y_{n+1})$ according to the equations:\n$$x_{n+1} = 1 - a x_n^2 + y_n$$\n$$y_{n+1} = b x_n$$\nFor this problem, consider the canonical parameters $a = 1.4$ and $b = 0.3$.\n\nA crucial step in analyzing the stability of a dynamical system is to linearize its behavior around a fixed point. A fixed point $(\\bar{x}, \\bar{y})$ is a point that remains unchanged by the map, such that $(\\bar{x}, \\bar{y}) = (1 - a \\bar{x}^2 + \\bar{y}, b \\bar{x})$.\n\nCalculate the Jacobian matrix of the Hénon map evaluated at the system's fixed point that lies in the first quadrant (i.e., where $\\bar{x} > 0$ and $\\bar{y} > 0$).\n\nPresent your answer as a 2x2 matrix. For any element in the matrix that is not an integer, round it to three significant figures.", "solution": "The Hénon map is defined by\n$$x_{n+1} = 1 - a x_{n}^{2} + y_{n}, \\quad y_{n+1} = b x_{n}.$$\nThe Jacobian matrix of the map is the matrix of partial derivatives\n$$J(x,y) = \\begin{pmatrix}\n\\frac{\\partial x_{n+1}}{\\partial x_{n}} & \\frac{\\partial x_{n+1}}{\\partial y_{n}} \\\\\n\\frac{\\partial y_{n+1}}{\\partial x_{n}} & \\frac{\\partial y_{n+1}}{\\partial y_{n}}\n\\end{pmatrix} = \\begin{pmatrix}\n-2 a x & 1 \\\\\nb & 0\n\\end{pmatrix}.$$\nA fixed point $(\\bar{x},\\bar{y})$ satisfies\n$$\\bar{x} = 1 - a \\bar{x}^{2} + \\bar{y}, \\quad \\bar{y} = b \\bar{x}.$$\nSubstituting $\\bar{y} = b \\bar{x}$ into the first equation gives\n$$\\bar{x} = 1 - a \\bar{x}^{2} + b \\bar{x} \\quad \\Longrightarrow \\quad a \\bar{x}^{2} + (1 - b)\\bar{x} - 1 = 0.$$\nFor $a = 1.4$ and $b = 0.3$, this becomes\n$$1.4\\,\\bar{x}^{2} + 0.7\\,\\bar{x} - 1 = 0,$$\nwhose solutions are\n$$\\bar{x} = \\frac{-(1 - b) \\pm \\sqrt{(1 - b)^{2} + 4 a}}{2 a} = \\frac{-0.7 \\pm \\sqrt{6.09}}{2.8}.$$\nThe fixed point in the first quadrant uses the positive root:\n$$\\bar{x} = \\frac{-0.7 + \\sqrt{6.09}}{2.8} > 0, \\quad \\bar{y} = b \\bar{x} = 0.3\\,\\bar{x} > 0.$$\nEvaluating the Jacobian at $(\\bar{x},\\bar{y})$ gives\n$$J(\\bar{x},\\bar{y}) = \\begin{pmatrix}\n-2 a \\bar{x} & 1 \\\\\nb & 0\n\\end{pmatrix} = \\begin{pmatrix}\n-2.8\\,\\bar{x} & 1 \\\\\n0.3 & 0\n\\end{pmatrix}.$$\nUsing $\\bar{x} = \\frac{-0.7 + \\sqrt{6.09}}{2.8}$, the top-left entry simplifies exactly to\n$$-2.8\\,\\bar{x} = -\\left(-0.7 + \\sqrt{6.09}\\right) = 0.7 - \\sqrt{6.09} \\approx -1.77,$$\nrounded to three significant figures. The other non-integer entry is $0.3$, which to three significant figures is $0.300$. Therefore, the Jacobian matrix at the first-quadrant fixed point, with required rounding, is\n$$\\begin{pmatrix}\n-1.77 & 1 \\\\\n0.300 & 0\n\\end{pmatrix}.$$", "answer": "$$\\boxed{\\begin{pmatrix}-1.77 & 1 \\\\ 0.300 & 0\\end{pmatrix}}$$", "id": "1669879"}, {"introduction": "With the tool of linearization in hand, we can now design a precise control strategy. This practice takes you to the very heart of the Ott-Grebogi-Yorke (OGY) method by applying it to the famous logistic map [@problem_id:862534]. You will derive the feedback gain $K$ required for \"deadbeat control\", a technique that aims to steer the system directly onto the desired fixed point in a single step, illustrating the core logic of how tiny, intelligent perturbations can tame chaos.", "problem": "The logistic map, a paradigmatic example of a system exhibiting chaos, is given by the one-dimensional recurrence relation:\n$$\nx_{n+1} = f(x_n, r) = r x_n (1 - x_n)\n$$\nwhere $x_n \\in [0, 1]$ is the state of the system at time $n$ and $r$ is a control parameter. For $r > 3$, this map has a non-trivial unstable fixed point, $x_F$, which satisfies $x_F = f(x_F, r)$.\n\nThe Ott-Grebogi-Yorke (OGY) method provides a way to stabilize such unstable periodic orbits (including fixed points) by applying small, judiciously chosen perturbations to an accessible system parameter. In this case, the parameter is $r$. We assume the system is operating at a nominal parameter value $r_0 > 3$, but at each iteration $n$, we can adjust it slightly, setting $r_n = r_0 + \\delta r_n$.\n\nThe core of the OGY method is to use linear feedback control. For small deviations from the fixed point, $\\xi_n = x_n - x_F$, the dynamics can be linearized as:\n$$\n\\xi_{n+1} \\approx \\lambda \\xi_n + g \\, \\delta r_n\n$$\nwhere $\\lambda = \\frac{\\partial f}{\\partial x}\\big|_{(x_F, r_0)}$ is the local multiplier (eigenvalue) of the map and $g = \\frac{\\partial f}{\\partial r}\\big|_{(x_F, r_0)}$ represents the sensitivity of the system to parameter changes.\n\nThe OGY control law is given by $\\delta r_n = -K \\xi_n$, where $K$ is the feedback gain. The goal is to choose $K$ such that the controlled system becomes stable. A specific and powerful choice for $K$ is one that achieves \"deadbeat control,\" meaning the controlled multiplier $\\lambda' = \\lambda - gK$ is zero. This forces the state to converge to the fixed point in a single step within the linearized approximation.\n\nDetermine the deadbeat control feedback gain $K$ required to stabilize the non-trivial fixed point $x_F$ of the logistic map. Express your answer as a function of the nominal parameter $r_0$.", "solution": "1. The non‐trivial fixed point $x_F$ satisfies \n$$x_F = r_0\\,x_F(1 - x_F)\\,. $$\nSolving gives \n$$x_F = 1 - \\frac{1}{r_0}\\quad(r_0>1)\\,. $$\n\n2. Compute the linearization coefficients at $(x_F,r_0)$:\n$$\\lambda \\;=\\;\\frac{\\partial f}{\\partial x}\\Big|_{(x_F,r_0)}\n= r_0\\bigl(1 - 2x_F\\bigr)\n= r_0\\Bigl(1 - 2\\Bigl(1 - \\frac1{r_0}\\Bigr)\\Bigr)\n=2 - r_0,$$\n$$g \\;=\\;\\frac{\\partial f}{\\partial r}\\Big|_{(x_F,r_0)}\n= x_F(1 - x_F)\n=\\Bigl(1 - \\frac1{r_0}\\Bigr)\\frac1{r_0}\n=\\frac{r_0 - 1}{r_0^2}\\,. $$\n\n3. The deadbeat condition $\\lambda - gK = 0$ gives\n$$K = \\frac{\\lambda}{g}\n= \\frac{2 - r_0}{\\dfrac{r_0 - 1}{r_0^2}}\n= \\frac{r_0^2(2 - r_0)}{r_0 - 1}\\,. $$", "answer": "$$\\boxed{\\frac{r_0^2(2 - r_0)}{r_0 - 1}}$$", "id": "862534"}, {"introduction": "Applying a control law locally is one thing, but understanding its global impact is the true measure of success. This final practice moves from the local control algorithm to its large-scale consequences, challenging you to think like a computational physicist [@problem_id:1669873]. You will evaluate different numerical procedures for mapping the \"effective basin of attraction\" created by OGY control, learning how to design an experiment that verifies the practical reach and effectiveness of your control scheme within the system's phase space.", "problem": "Consider a two-dimensional chaotic dynamical system described by the discrete map $z_{n+1} = G(z_n, p)$, where $z_n = (x_n, y_n)$ is the state vector in phase space and $p$ is an accessible and controllable system parameter. For a nominal parameter value $p_0$, the system possesses a chaotic attractor which contains an unstable period-1 fixed point at location $z_f$.\n\nThe Ott-Grebogi-Yorke (OGY) method is employed to stabilize this fixed point. The control protocol is as follows:\n1.  The control is only activated when the system's state $z_n$ falls within a small circular neighborhood of radius $\\delta_{max}$ around the fixed point, i.e., when the condition $\\|z_n - z_f\\| \\leq \\delta_{max}$ is met.\n2.  When the control is activated, a small parameter perturbation, $\\delta p_n = p_n - p_0$, is computed based on the state $z_n$ using the standard OGY control law, designed to steer the next state $z_{n+1}$ onto the stable manifold of the fixed point.\n3.  Due to physical limitations, this perturbation is only applied if its magnitude does not exceed a threshold $p_{max}$. That is, the parameter is set to $p_n = p_0 + \\delta p_n$ only if $|\\delta p_n| \\leq p_{max}$.\n4.  If the state is outside the control neighborhood (i.e., $\\|z_n - z_f\\| > \\delta_{max}$) or if the required perturbation is too large (i.e., $|\\delta p_n| > p_{max}$), no control is applied, and the system evolves with the nominal parameter value, $p_n = p_0$.\n\nThe goal is to numerically estimate the area of the *effective basin of attraction* for the stabilized fixed point. This basin is defined as the set of all initial conditions $z_0$ in a large, predefined rectangular region $R$ of the phase space that, under the rules of the control scheme described above, eventually have their trajectories captured and made to converge to $z_f$.\n\nYou are presented with several proposed numerical algorithms to perform this estimation. For each algorithm, assume a set of initial points is chosen from the region $R$, and each point's trajectory is iterated for a maximum of $N_{max}$ steps to check for convergence to $z_f$. Which of the following algorithms are valid for estimating the area of this effective basin of attraction?\n\nA. Define a fine, regular grid of initial points covering the region $R$. For each initial point $z_0$, iterate the map $z_{n+1} = G(z_n, p_n)$. At each step $n$, first check if $\\|z_n - z_f\\| \\leq \\delta_{max}$. If true, calculate the required control $\\delta p_n$. If $|\\delta p_n| \\leq p_{max}$, set $p_n = p_0 + \\delta p_n$. In all other cases (if $\\|z_n - z_f\\| > \\delta_{max}$ or if $|\\delta p_n| > p_{max}$), set $p_n = p_0$. If the trajectory converges to $z_f$ within $N_{max}$ iterations, the initial point $z_0$ is counted as \"captured\". The basin area is estimated as the fraction of captured points multiplied by the area of $R$.\n\nB. Define a fine, regular grid of initial points covering the region $R$. For each initial point $z_0$, check only the initial condition: if $\\|z_0 - z_f\\| \\leq \\delta_{max}$, count the point as \"captured\". Otherwise, it is not. The basin area is estimated as the fraction of captured points multiplied by the area of $R$.\n\nC. Define a fine, regular grid of initial points covering the region $R$. For each initial point $z_0$, iterate the map $z_{n+1} = G(z_n, p_n)$. At each step $n$, check if $\\|z_n - z_f\\| \\leq \\delta_{max}$. If true, calculate the control $\\delta p_n$. If $|\\delta p_n| \\leq p_{max}$, set $p_n = p_0 + \\delta p_n$ and continue iteration. However, if $|\\delta p_n| > p_{max}$, immediately classify the initial point $z_0$ as \"not captured\" and terminate the iteration for this point. If the trajectory converges to $z_f$, count $z_0$ as \"captured\". The basin area is estimated from the fraction of captured points.\n\nD. Define a fine, regular grid of initial points covering the region $R$. For each initial point $z_0$, iterate the linearized map $z_{n+1} - z_f = M(z_n - z_f) + g \\delta p_n$, where $M$ is the Jacobian matrix of $G$ at $z_f$ and $g$ is the control sensitivity vector. The control perturbation $\\delta p_n$ is computed and applied (if $|\\delta p_n| \\leq p_{max}$) only when $\\|z_n - z_f\\| \\leq \\delta_{max}$. If the trajectory converges to the origin (representing $z_f$), the initial point is counted as \"captured\". The basin area is estimated from the fraction of captured points.\n\nE. Generate a large number of initial points $z_0$ chosen randomly with a uniform probability distribution over the region $R$. For each initial point, follow the exact same iteration and decision logic as described in algorithm A. The basin area is estimated as the fraction of initial points whose trajectories are captured, multiplied by the area of $R$.", "solution": "The problem asks to identify the valid numerical algorithms for estimating the area of the effective basin of attraction for a UPO stabilized by the OGY method. To be valid, an algorithm must correctly model both the natural chaotic dynamics of the system far from the fixed point and the specific conditions under which the control is applied near the fixed point.\n\nLet's analyze each proposed algorithm:\n\n**Analysis of Algorithm A:**\nThis algorithm accurately describes the required procedure.\n1.  It uses the full nonlinear map $G(z_n, p_n)$ to evolve the system state, which is correct because the global dynamics are typically nonlinear and chaotic.\n2.  It correctly identifies the control region as a necessary condition for activating control (i.e., $\\|z_n - z_f\\| \\leq \\delta_{max}$).\n3.  It correctly implements the second condition for control application: the magnitude of the parameter perturbation must be within the limit ($|\\delta p_n| \\leq p_{max}$).\n4.  Crucially, if a state is in the control region but the required perturbation is too large, it correctly defaults to the uncontrolled dynamics ($p_n = p_0$). This allows the trajectory to evolve further, with the possibility of re-entering the control region at a later time in a state that *is* controllable. This behavior is essential for capturing the full extent of the effective basin, which consists of all points that *eventually* find a controllable state.\n5.  It uses a grid-based sampling method, which is a standard and valid way to estimate the area.\nTherefore, algorithm A is a valid method.\n\n**Analysis of Algorithm B:**\nThis algorithm is incorrect. It only tests if the initial condition $z_0$ is already inside the small control region. The effective basin of attraction for a chaotic system is typically much larger and more complex than the control region itself. The defining feature of chaos control is that the natural dynamics of the system will transport points from remote parts of the phase space into the control region. This algorithm completely fails to account for this transport and would drastically underestimate the basin area, effectively only measuring the area of the control region itself.\n\n**Analysis of Algorithm C:**\nThis algorithm is subtly incorrect. It correctly iterates the nonlinear map and checks for entry into the control region. However, it makes a critical logic error: if a trajectory enters the control region but the required parameter change $|\\delta p_n|$ exceeds the limit $p_{max}$, the algorithm immediately discards the entire trajectory by labeling the initial point \"not captured\". This is wrong because a chaotic trajectory can leave and re-enter the neighborhood of the fixed point many times. A state that is temporarily uncontrollable might, after a few more iterations under the uncontrolled dynamics, re-enter the control region at a point where the required perturbation is within the allowed limit. By prematurely terminating, this algorithm would miss a significant portion of the true effective basin.\n\n**Analysis of Algorithm D:**\nThis algorithm is fundamentally incorrect. The OGY control law is derived from a linear approximation of the dynamics, $z_{n+1} - z_f \\approx M(z_n - z_f) + g \\delta p_n$, which is only valid in a very small neighborhood of the fixed point $z_f$. The algorithm incorrectly proposes to use this linearized map for the *entire* evolution of the trajectory, even when the state $z_n$ is far from $z_f$. The global dynamics that bring a trajectory towards the control region are governed by the full nonlinear map $G$. Using a linear approximation globally will not reproduce the chaotic behavior of the system and will lead to a completely erroneous estimation of the basin of attraction.\n\n**Analysis of Algorithm E:**\nThis algorithm employs the exact same logical steps for iterating a trajectory and applying control as algorithm A. The only difference is the sampling method for initial conditions: it uses a random (Monte Carlo) sampling instead of a regular grid. Monte Carlo integration is a standard and valid numerical technique for estimating areas (or volumes), and for high-dimensional systems, it is often more efficient than grid-based methods. Since the core logic for determining if a point is \"captured\" is identical to the correct logic in A, this algorithm is also a valid method.\n\n**Conclusion:**\nAlgorithms A and E correctly implement the logic of OGY control within a chaotic system and use valid sampling methods (grid-based and Monte Carlo, respectively) to estimate the basin area. Algorithms B, C, and D contain fundamental errors in their logic regarding the nature of chaotic dynamics or the OGY control protocol. Therefore, both A and E are valid procedures.", "answer": "A, E", "id": "1669873"}]}