{"hands_on_practices": [{"introduction": "A cornerstone of analyzing any dynamical system is identifying its fixed points, which represent states of equilibrium. To understand whether these equilibria are attractors, we examine the system's behavior nearby using linear stability analysis. This exercise [@problem_id:1662823] guides you through this fundamental process, where you will use the Jacobian matrix and its eigenvalues to classify the fixed points and pinpoint the system's attractor.", "problem": "Consider a two-dimensional autonomous dynamical system describing the evolution of two state variables, $x(t)$ and $y(t)$, governed by the following coupled nonlinear ordinary differential equations:\n$$\n\\begin{aligned}\n\\frac{dx}{dt} = 4 - x^2 \\\\\n\\frac{dy}{dt} = y(x-y)\n\\end{aligned}\n$$\nA fixed point (or equilibrium point) of the system is a point $(x^*, y^*)$ in the phase plane where the rates of change of both state variables are zero. An attracting fixed point is a fixed point such that trajectories starting in its vicinity converge to it as $t \\to \\infty$. In the context of linear stability analysis, this corresponds to a stable node or a stable spiral, where all eigenvalues of the Jacobian matrix evaluated at the fixed point have negative real parts.\n\nThis system possesses multiple fixed points, but only one of them is an attractor. Determine the coordinates $(x, y)$ of this unique attracting fixed point.", "solution": "An attracting fixed point requires both $dx/dt$ and $dy/dt$ to vanish and the Jacobian at that point to have eigenvalues with negative real parts.\n\nFirst, set the right-hand sides to zero to find fixed points:\n$$\n\\frac{dx}{dt}=4-x^{2}=0 \\;\\;\\Rightarrow\\;\\; x^{2}=4 \\;\\;\\Rightarrow\\;\\; x\\in\\{2,-2\\},\n$$\n$$\n\\frac{dy}{dt}=y(x-y)=0 \\;\\;\\Rightarrow\\;\\; y=0 \\;\\;\\text{or}\\;\\; y=x.\n$$\nCombining these gives the four fixed points:\n$$\n(2,0),\\quad (2,2),\\quad (-2,0),\\quad (-2,-2).\n$$\n\nTo classify their stability, compute the Jacobian matrix. With $f_{1}(x,y)=4-x^{2}$ and $f_{2}(x,y)=y(x-y)=xy-y^{2}$,\n$$\nJ(x,y)=\\begin{pmatrix}\n\\frac{\\partial f_{1}}{\\partial x}  \\frac{\\partial f_{1}}{\\partial y}\\\\[4pt]\n\\frac{\\partial f_{2}}{\\partial x}  \\frac{\\partial f_{2}}{\\partial y}\n\\end{pmatrix}\n=\\begin{pmatrix}\n-2x  0\\\\\ny  x-2y\n\\end{pmatrix}.\n$$\nThis Jacobian is lower triangular, so its eigenvalues are the diagonal entries:\n$$\n\\lambda_{1}=-2x,\\qquad \\lambda_{2}=x-2y.\n$$\nEvaluate at each fixed point:\n\n1) At $(2,0)$:\n$$\n\\lambda_{1}=-40,\\qquad \\lambda_{2}=2>0,\n$$\none positive and one negative eigenvalue, hence a saddle (not attracting).\n\n2) At $(2,2)$:\n$$\n\\lambda_{1}=-40,\\qquad \\lambda_{2}=2-4=-20,\n$$\nboth eigenvalues negative, hence a stable node (attracting).\n\n3) At $(-2,0)$:\n$$\n\\lambda_{1}=4>0,\\qquad \\lambda_{2}=-20,\n$$\none positive and one negative eigenvalue, hence a saddle (not attracting).\n\n4) At $(-2,-2)$:\n$$\n\\lambda_{1}=4>0,\\qquad \\lambda_{2}=-2-(-4)=2>0,\n$$\nboth eigenvalues positive, hence an unstable node (repelling).\n\nTherefore, the unique attracting fixed point is $(2,2)$.", "answer": "$$\\boxed{(2, 2)}$$", "id": "1662823"}, {"introduction": "While linearization is a powerful tool, it provides only a local picture and can sometimes be inconclusive. For a more robust analysis of nonlinear systems, we can turn to Lyapunov's direct method, which involves finding a special \"energy-like\" function that decreases along all trajectories near an equilibrium. This practice [@problem_id:1662845] demonstrates how to use a candidate Lyapunov function to prove that an equilibrium point is an attractor, even when the dynamics are complex.", "problem": "Consider a two-dimensional dynamical system described by the following set of coupled ordinary differential equations:\n$$\n\\begin{aligned}\n\\frac{dx}{dt} = -x + y^2 \\\\\n\\frac{dy}{dt} = -y\n\\end{aligned}\n$$\nIt can be verified that the origin, $(x,y)=(0,0)$, is an equilibrium point for this system. To analyze the stability of this equilibrium point, we propose a candidate Lyapunov function:\n$$\nV(x,y) = x^2 + 2y^2\n$$\nBased on an analysis of this function and its time derivative, $\\frac{dV}{dt}$, along the trajectories of the system, determine which of the following statements correctly describes the stability of the origin.\n\nA. The origin is an attractor, and its basin of attraction is the entire plane $\\mathbb{R}^2$, as confirmed by $V(x,y)$ being a global strict Lyapunov function.\n\nB. The origin is an attractor, which can be concluded because $V(x,y)$ acts as a strict Lyapunov function in a neighborhood of the origin.\n\nC. The origin is not an attractor, because the time derivative $\\frac{dV}{dt}$ can be positive for certain points $(x,y)$, meaning trajectories can move away from the origin.\n\nD. The origin is unstable, because the time derivative $\\frac{dV}{dt}$ is not strictly negative for all non-zero points in any neighborhood of the origin.\n\nE. The stability of the origin cannot be determined using the function $V(x,y)$ because it does not satisfy the necessary conditions.", "solution": "We consider the system\n$$\n\\frac{dx}{dt}=-x+y^{2},\\qquad \\frac{dy}{dt}=-y,\n$$\nwith the candidate Lyapunov function\n$$\nV(x,y)=x^{2}+2y^{2}.\n$$\nFirst, $V(x,y)>0$ for all $(x,y)\\neq (0,0)$ and $V(0,0)=0$, so $V$ is positive definite.\n\nCompute the time derivative of $V$ along trajectories using the chain rule:\n$$\n\\frac{dV}{dt}=\\frac{\\partial V}{\\partial x}\\frac{dx}{dt}+\\frac{\\partial V}{\\partial y}\\frac{dy}{dt}\n=2x(-x+y^{2})+4y(-y)\n=-2x^{2}+2xy^{2}-4y^{2}.\n$$\nFor a fixed $y$, view this as a quadratic function of $x$,\n$$\nf(x)=-2x^{2}+2xy^{2}-4y^{2},\n$$\nwhich is concave in $x$ and attains its maximum at $x=\\frac{y^{2}}{2}$. Substituting this value gives the maximal value\n$$\n\\max_{x}\\frac{dV}{dt}=f\\!\\left(\\frac{y^{2}}{2}\\right)\n=-2\\left(\\frac{y^{2}}{2}\\right)^{2}+2\\left(\\frac{y^{2}}{2}\\right)y^{2}-4y^{2}\n=\\frac{1}{2}y^{4}-4y^{2}=y^{2}\\!\\left(\\frac{1}{2}y^{2}-4\\right).\n$$\nHence, if $|y|2\\sqrt{2}$, then $\\frac{1}{2}y^{2}-40$, and therefore\n$$\n\\frac{dV}{dt}0 \\quad \\text{for all }(x,y)\\neq(0,0)\\text{ with }|y|2\\sqrt{2}.\n$$\nThis shows that there exists a neighborhood of the origin (e.g., any open ball contained in the strip $\\{(x,y):|y|2\\sqrt{2}\\}$) in which $\\frac{dV}{dt}$ is strictly negative for all nonzero $(x,y)$. Therefore, $V$ is a strict Lyapunov function in a neighborhood of the origin, and the origin is (locally) asymptotically stable, i.e., a local attractor.\n\nMoreover, for $|y|>2\\sqrt{2}$, choosing $x=\\frac{y^{2}}{2}$ yields\n$$\n\\frac{dV}{dt}=y^{2}\\!\\left(\\frac{1}{2}y^{2}-4\\right)>0,\n$$\nso $V$ is not a global strict Lyapunov function and cannot establish global attraction. Consequently:\n- A is false because $V$ is not a global strict Lyapunov function.\n- B is true because $V$ is strict in a neighborhood of the origin, proving local attraction.\n- C is false; positivity of $\\frac{dV}{dt}$ somewhere does not preclude the origin from being an attractor.\n- D is false because there is a neighborhood where $\\frac{dV}{dt}0$ for all nonzero points.\n- E is false since $V$ suffices to conclude local asymptotic stability.\n\nThus, the correct choice is B.", "answer": "$$\\boxed{B}$$", "id": "1662845"}, {"introduction": "Knowing the location of attractors is only part of the story; we also want to know which initial conditions lead to which attractor. This leads to the concept of a basin of attraction, a map of the system's long-term fate from any starting point. This problem [@problem_id:1662826] shifts a \"hands-on\" focus from pure calculation to computational thinking, asking you to design the logic for an algorithm that can visually render these often intricate and beautiful structures.", "problem": "A two-dimensional discrete-time dynamical system is described by the map $F: \\mathbb{R}^2 \\to \\mathbb{R}^2$, where a point $(x_n, y_n)$ is mapped to $(x_{n+1}, y_{n+1}) = F(x_n, y_n)$. This system is known to have exactly two stable fixed point attractors located at $A = (1, 1)$ and $B = (-1, -1)$. The basin of attraction for an attractor is the set of all initial points $(x_0, y_0)$ such that the sequence of iterated points, $(x_n, y_n) = F^n(x_0, y_0)$, converges to that attractor as $n \\to \\infty$.\n\nAn algorithm is required to generate a \"basin map\" for a square grid of initial points in the plane. This map visualizes the basins of attraction by assigning a specific color to each point on the grid. Color 1 is to be assigned to initial points in the basin of attractor $A$, and Color 2 is for initial points in the basin of attractor $B$.\n\nThe algorithm must computationally approximate the long-term behavior by iterating the map a large, fixed number of times, $N_{max}$. The Euclidean distance between two points $P_1$ and $P_2$ is denoted by $d(P_1, P_2)$.\n\nWhich of the following computational procedures correctly describes the algorithm to generate the basin map?\n\nA. For each initial point $(x_0, y_0)$ in the grid:\n1. Let a working point $(x, y)$ be initialized to $(x_0, y_0)$.\n2. Iterate $N_{max}$ times by repeatedly applying the map: $(x, y) \\leftarrow F(x, y)$.\n3. If the distance from the final point $(x, y)$ to $A$ is less than the distance from $(x, y)$ to $B$, assign Color 1 to the initial point $(x_0, y_0)$.\n4. Otherwise, assign Color 2 to the initial point $(x_0, y_0)$.\n\nB. For each initial point $(x_0, y_0)$ in the grid:\n1. Let a working point $(x, y)$ be initialized to $(x_0, y_0)$.\n2. Iterate $N_{max}$ times by repeatedly applying the map: $(x, y) \\leftarrow F(x, y)$.\n3. If the distance from the final point $(x, y)$ to $A$ is less than the distance from $(x, y)$ to $B$, assign Color 1 to the final point $(x, y)$.\n4. Otherwise, assign Color 2 to the final point $(x, y)$.\n\nC. For each initial point $(x_0, y_0)$ in the grid:\n1. If the distance from the initial point $(x_0, y_0)$ to $A$ is less than the distance from $(x_0, y_0)$ to $B$, assign Color 1 to $(x_0, y_0)$.\n2. Otherwise, assign Color 2 to $(x_0, y_0)$.\n\nD. For each initial point $(x_0, y_0)$ in the grid:\n1. Apply the map once to get $(x_1, y_1) = F(x_0, y_0)$.\n2. If the distance from $(x_1, y_1)$ to $A$ is less than the distance from $(x_1, y_1)$ to $B$, assign Color 1 to the initial point $(x_0, y_0)$.\n3. Otherwise, assign Color 2 to the initial point $(x_0, y_0)$.\n\nE. For each initial point $(x_0, y_0)$ in the grid:\n1. Let a working point $(x, y)$ be initialized to $(x_0, y_0)$.\n2. Iterate $N_{max}$ times by repeatedly applying the map: $(x, y) \\leftarrow F(x, y)$.\n3. If the distance from the initial point $(x_0, y_0)$ to $A$ is less than the distance from the final point $(x, y)$ to $B$, assign Color 1 to the initial point $(x_0, y_0)$.\n4. Otherwise, assign Color 2 to the initial point $(x_0, y_0)$.", "solution": "The problem asks for the correct computational algorithm to generate a basin of attraction map for a 2D dynamical system with two fixed point attractors, $A$ and $B$. A basin map is a visualization of the initial conditions space, where each initial point is colored according to the attractor its trajectory converges to.\n\nThe core principle behind finding the basin of attraction is to simulate the forward time evolution of the system for each initial point in a given region. If an initial point $(x_0, y_0)$ lies in the basin of attractor $A$, its trajectory, generated by repeated application of the map $F$, will approach $A$.\n\nLet's analyze each proposed algorithm:\n\n**Analysis of Option A:**\nThis algorithm correctly implements the core principle.\n1.  For each initial point $(x_0, y_0)$, it simulates the system's trajectory by iterating the map $F$ for a large number of steps, $N_{max}$. This process generates a final point $(x, y)$ that is expected to be very close to one of the attractors.\n2.  It then classifies the trajectory by determining which attractor the *final point* $(x, y)$ is closer to. The condition $d((x, y), A)  d((x, y), B)$ is a standard and reliable method for deciding which attractor the trajectory has converged to, assuming $N_{max}$ is sufficiently large.\n3.  Crucially, it assigns the determined color to the *initial point* $(x_0, y_0)$. This is the correct procedure for creating a basin map, as the map is a property of the initial conditions space.\nTherefore, this algorithm is correct.\n\n**Analysis of Option B:**\nThis algorithm correctly simulates the trajectory and classifies its destination. However, the final step is flawed. It assigns the color to the *final point* $(x, y)$ of the trajectory. Since all initial points in a given basin converge towards the same attractor, this algorithm would result in coloring only two small regions around the attractors $A$ and $B$. It fails to color the grid of initial points, which is the objective of creating a basin map. Thus, this algorithm is incorrect.\n\n**Analysis of Option C:**\nThis algorithm entirely omits the simulation of the system's dynamics. It makes the classification based solely on which attractor the *initial point* $(x_0, y_0)$ is closer to. This procedure simply partitions the plane with the perpendicular bisector of the line segment connecting $A$ and $B$. The basin boundaries of nonlinear dynamical systems are typically complex, often fractal, curves and are not simple geometric constructs like a perpendicular bisector. This algorithm ignores the effect of the map $F$ and is therefore fundamentally incorrect.\n\n**Analysis of Option D:**\nThis algorithm performs only a single iteration of the map $F$. While this is a step in the right direction compared to Option C, a single iteration is generally insufficient for a trajectory to approach its final attractor. The point $(x_1, y_1)$ may still be far from both attractors, and its relative proximity to $A$ or $B$ may not be indicative of its long-term destination. For a reliable classification, the system must be iterated many times until it has effectively settled onto an attractor. Thus, this algorithm is incorrect.\n\n**Analysis of Option E:**\nThis algorithm performs the correct simulation by iterating $N_{max}$ times. However, the classification step is nonsensical. It compares the distance from the *initial point* $(x_0, y_0)$ to attractor $A$ with the distance from the *final point* $(x, y)$ to attractor $B$. This comparison is inconsistent and has no logical basis for determining which basin the point $(x_0, y_0)$ belongs to. A valid classification must be based on a consistent test applied to the final state of the simulated trajectory. Thus, this algorithm is incorrect.\n\nBased on this analysis, Option A is the only procedure that correctly describes the standard algorithm for generating a basin of attraction map.", "answer": "$$\\boxed{A}$$", "id": "1662826"}]}