{"hands_on_practices": [{"introduction": "Solitons in the sine-Gordon model are not just mathematical curiosities; they are particle-like excitations with well-defined physical properties. The most fundamental of these is the soliton's rest energy, or mass. This first exercise [@problem_id:1197461] provides a hands-on calculation of this energy by integrating the classical energy functional over the static kink profile. This practice is essential for understanding how continuous fields can give rise to discrete, massive objects and reveals the direct relationship between the model's parameters and the emergent particle's mass.", "problem": "The sine-Gordon model in (1+1) dimensions describes a real scalar field $\\phi(t,x)$ and is defined by the Lagrangian density:\n$$\n\\mathcal{L} = \\frac{1}{2} (\\partial_\\mu \\phi)(\\partial^\\mu \\phi) - V(\\phi)\n$$\nwhere we use the metric signature $(+,-)$ and natural units $c=1, \\hbar=1$. The potential is given by:\n$$\nV(\\phi) = \\frac{m^2}{\\beta^2} (1 - \\cos(\\beta \\phi))\n$$\nHere, $m$ is a mass parameter and $\\beta$ is a dimensionless coupling constant. The potential has a series of degenerate vacua at $\\phi_n = \\frac{2\\pi n}{\\beta}$ for any integer $n$.\n\nThe model admits static, finite-energy solutions known as solitons or kinks, which interpolate between adjacent vacua. A single kink solution, centered at $x=0$, which connects the vacuum at $\\phi(-\\infty)=0$ to the vacuum at $\\phi(+\\infty)=2\\pi/\\beta$, is given by:\n$$\n\\phi_K(x) = \\frac{4}{\\beta} \\arctan(e^{mx})\n$$\nThe rest energy of this classical configuration corresponds to the mass of the soliton particle. Calculate this rest energy, $E_K$.", "solution": "We start from the static energy functional in (1+1) dimensions (with $c=1,\\hbar=1$):\n$$\nE[\\phi]=\\int_{-\\infty}^{\\infty}dx\\;\\Bigl[\\frac12\\bigl(\\phi'(x)\\bigr)^2+V(\\phi(x))\\Bigr],\n\\quad\nV(\\phi)=\\frac{m^2}{\\beta^2}\\bigl(1-\\cos(\\beta\\phi)\\bigr).\n$$\nFor the kink $\\phi_K(x)=\\tfrac4\\beta\\arctan(e^{mx})$ one finds\n$$\n\\phi'(x)=\\frac{4m}{\\beta}\\,\\frac{e^{mx}}{1+e^{2mx}}\n=\\frac{2m}{\\beta}\\sech(mx).\n$$\nNoting that\n$$\n\\sin\\!\\Bigl(\\tfrac{\\beta\\phi}{2}\\Bigr)\n=\\sin\\bigl(2\\arctan e^{mx}\\bigr)\n=\\frac{2e^{mx}}{1+e^{2mx}}\n=\\sech(mx),\n$$\nwe see that the kink saturates the Bogomolny bound:\n$$\n\\phi'=\\frac{2m}{\\beta}\\sin\\!\\Bigl(\\frac{\\beta\\phi}{2}\\Bigr).\n$$\nHence\n$$\nE_K\n=\\int dx\\;\\Bigl[\\tfrac12\\phi'^2+V(\\phi)\\Bigr]\n=\\int dx\\;\\Bigl[\\phi'\\,\\frac{2m}{\\beta}\\sin\\!\\bigl(\\tfrac{\\beta\\phi}{2}\\bigr)\\Bigr]\n=\\frac{2m}{\\beta}\\int_{\\phi(-\\infty)=0}^{\\phi(+\\infty)=2\\pi/\\beta}\\!d\\phi\\;\\sin\\!\\Bigl(\\tfrac{\\beta\\phi}{2}\\Bigr).\n$$\nCarrying out the integral,\n$$\n\\int_0^{2\\pi/\\beta}\\sin\\!\\Bigl(\\tfrac{\\beta\\phi}{2}\\Bigr)d\\phi\n=\\left[-\\frac{2}{\\beta}\\cos\\!\\Bigl(\\tfrac{\\beta\\phi}{2}\\Bigr)\\right]_0^{2\\pi/\\beta}\n=-\\frac{2}{\\beta}\\bigl(\\cos\\pi-\\cos0\\bigr)\n=-\\frac{2}{\\beta}(-2)\n=\\frac{4}{\\beta},\n$$\ngives\n$$\nE_K\n=\\frac{2m}{\\beta}\\,\\frac{4}{\\beta}\n=\\frac{8m}{\\beta^2}.\n$$", "answer": "$$\\boxed{\\frac{8m}{\\beta^2}}$$", "id": "1197461"}, {"introduction": "Having established that sine-Gordon kinks possess a finite energy, we now explore the deeper reason for their remarkable stability. The explanation is topological, captured by a conserved quantity called the topological charge. This exercise [@problem_id:1197533] asks you to compute this charge for a configuration representing a kink-antikink pair. By showing that the net charge is zero, you will understand why such pairs can be created from the vacuum and can annihilate, in stark contrast to a single, topologically protected kink, which cannot simply disappear.", "problem": "The sine-Gordon model in 1+1 spacetime dimensions describes a real scalar field $\\phi(t,x)$ with the Lagrangian density:\n$$ \\mathcal{L} = \\frac{1}{2} (\\partial_\\mu \\phi)(\\partial^\\mu \\phi) - \\frac{m^2}{\\beta^2} (1 - \\cos(\\beta \\phi)) $$\nwhere $m$ and $\\beta$ are real parameters. The potential term $V(\\phi) = \\frac{m^2}{\\beta^2} (1 - \\cos(\\beta \\phi))$ has an infinite set of degenerate vacua at values $\\phi_n = \\frac{2\\pi n}{\\beta}$ for any integer $n$.\n\nThe model possesses a conserved topological current defined as:\n$$ J^\\mu = \\frac{\\beta}{2\\pi} \\epsilon^{\\mu\\nu} \\partial_\\nu \\phi $$\nwhere $\\epsilon^{\\mu\\nu}$ is the Levi-Civita symbol in two dimensions with $\\epsilon^{01} = 1$. The total topological charge $Q$, a constant of motion, is obtained by integrating the charge density $J^0$ over all space:\n$$ Q = \\int_{-\\infty}^{\\infty} J^0(t,x) \\, dx $$\nA kink solution is a configuration that connects two adjacent vacua as $x$ goes from $-\\infty$ to $+\\infty$, for example $\\phi(-\\infty) = \\phi_0=0$ and $\\phi(+\\infty) = \\phi_1=2\\pi/\\beta$. An antikink connects them in the opposite direction.\n\nConsider a general classical field configuration $\\phi(x)$ that describes a stationary kink-antikink pair. Such a configuration is localized in space, meaning the field must settle into one of the vacuum states at spatial infinity. For a kink-antikink pair, the field starts in a vacuum at $x \\to -\\infty$ and returns to the *same* vacuum at $x \\to +\\infty$.\n\nCalculate the total topological charge $Q$ for such a configuration.", "solution": "The topological charge density is given by:\n\n$$ J^0 = \\frac{\\beta}{2\\pi} \\epsilon^{0\\nu} \\partial_\\nu \\phi $$\n\nUsing the Levi-Civita symbol properties in 1+1 dimensions ($\\epsilon^{00} = 0$, $\\epsilon^{01} = 1$):\n\n$$ J^0 = \\frac{\\beta}{2\\pi} \\left( \\epsilon^{00} \\partial_0 \\phi + \\epsilon^{01} \\partial_1 \\phi \\right) = \\frac{\\beta}{2\\pi} \\left( 0 \\cdot \\frac{\\partial \\phi}{\\partial t} + 1 \\cdot \\frac{\\partial \\phi}{\\partial x} \\right) = \\frac{\\beta}{2\\pi} \\frac{\\partial \\phi}{\\partial x} $$\n\nThe total topological charge is:\n\n$$ Q = \\int_{-\\infty}^{\\infty} J^0  dx = \\int_{-\\infty}^{\\infty} \\frac{\\beta}{2\\pi} \\frac{\\partial \\phi}{\\partial x}  dx $$\n\nThis integral simplifies to:\n\n$$ Q = \\frac{\\beta}{2\\pi} \\int_{\\phi(-\\infty)}^{\\phi(\\infty)} d\\phi = \\frac{\\beta}{2\\pi} \\left[ \\phi \\right]_{\\phi(-\\infty)}^{\\phi(\\infty)} = \\frac{\\beta}{2\\pi} \\left( \\phi(\\infty) - \\phi(-\\infty) \\right) $$\n\nFor a kink-antikink pair, the field starts and ends at the same vacuum:\n\n$$ \\phi(-\\infty) = \\phi(\\infty) = \\frac{2\\pi n}{\\beta} \\quad \\text{(for some integer $n$)} $$\n\nThus:\n\n$$ \\phi(\\infty) - \\phi(-\\infty) = 0 $$\n\nSubstituting:\n\n$$ Q = \\frac{\\beta}{2\\pi} \\cdot 0 = 0 $$", "answer": "$$ \\boxed{0} $$", "id": "1197533"}, {"introduction": "While analytical solutions provide profound insights, the complex dynamics of field theories are often explored through numerical simulation. This transition from continuous equations to discrete algorithms is a critical skill, but one that requires careful consideration of numerical stability. This capstone practice [@problem_id:2396353] challenges you to investigate the behavior of a static soliton under the Forward-Time Centered-Space (FTCS) scheme. You will perform a stability analysis to predict the scheme's failure and then confirm your prediction with a direct simulation, providing an essential, hands-on lesson on why seemingly straightforward numerical methods can be unsuitable for wave-like dynamics.", "problem": "Consider the one-dimensional Sine-Gordon equation, a nonlinear wave equation given by\n$$\nu_{tt}(x,t) - c^2 u_{xx}(x,t) + \\sin\\!\\big(u(x,t)\\big) = 0,\n$$\nwith wave speed parameter $c0$. Throughout this problem, take $c=1$. Angles must be treated in radians, and all quantities are dimensionless.\n\nYour objective is to investigate whether a stable soliton (topological kink) solution can survive for any finite duration under a Forward-Time Centered-Space (FTCS) explicit scheme, or whether numerical instability immediately destroys it.\n\nStart from a valid fundamental base: the equation of motion above, the definition of a soliton kink solution of the Sine-Gordon equation in the continuum limit, and standard finite-difference approximations to derivatives. Proceed as follows.\n\n- Recast the Sine-Gordon equation as a first-order system in time by introducing an auxiliary velocity field $v(x,t)$ satisfying $u_t = v$. This yields a system of two coupled first-order-in-time equations. Use forward Euler time discretization for the time derivatives and centered second-order finite differences for the spatial second derivative (that is, a Forward-Time Centered-Space scheme). Do not introduce any artificial dissipation or filtering.\n- Consider the static topological kink as initial data, centered at $x_0=0$:\n$$\nu(x,0) = 4 \\arctan\\!\\big( e^{x-x_0} \\big), \\quad v(x,0) = 0.\n$$\nThis is an exact time-independent solution of the continuum Sine-Gordon equation for $c=1$ with $u_{xx}=\\sin(u)$ when boundary effects are negligible. Impose Dirichlet boundary conditions $u(-L,t)=0$ and $u(L,t)=2\\pi$ and $v(-L,t)=v(L,t)=0$ on a finite domain $x\\in[-L,L]$ with $L=40$. Use a uniform spatial grid with $N_x$ points, and let $\\Delta x$ denote the spatial grid spacing. All trigonometric functions must be evaluated in radians.\n- Define the error observable at time $t_n=n\\Delta t$ as the maximum absolute deviation of the numerical solution from the exact static kink profile at the grid points:\n$$\n\\mathcal{E}(t_n) = \\max_j \\left| u_j^n - 4 \\arctan\\!\\big( e^{x_j-x_0} \\big) \\right|.\n$$\nHere $u_j^n$ denotes the numerical approximation to $u(x_j,t_n)$. Declare that the soliton has failed (been destroyed) at the first time $t_n$ at which $\\mathcal{E}(t_n)  \\varepsilon$, with the failure threshold set to $\\varepsilon = 0.1$ (in radians). Define the survival time as the earliest $t_n$ for which $\\mathcal{E}(t_n)  \\varepsilon$; if no failure occurs up to the final time $T$, report the survival time as $T$.\n- Your program must implement the FTCS scheme as specified above, simulate the dynamics for a given parameter set $(N_x,\\Delta t,T)$, and return the survival time.\n\nDerivation task:\n- From the governing equation and your chosen FTCS discretization, derive from first principles a linearized stability criterion about a homogeneous state. Use physically and mathematically sound reasoning that begins from the partial differential equation and the discrete approximations to show whether the FTCS scheme is expected to be stable or unstable when applied to oscillatory wave-like dynamics. Your derivation must be fully justified by the base model and should not rely on undocumented or shortcut formulas.\n\nNumerical experiment task:\n- Implement the FTCS scheme and run it on the following test suite. In every case, use $L=40$, $x_0=0$, and the above error criterion with $\\varepsilon=0.1$. The test suite comprises five parameter sets:\n    1. $N_x = 801$, $\\Delta t = 5\\times 10^{-4}$, $T = 0.5$.\n    2. $N_x = 801$, $\\Delta t = 5\\times 10^{-3}$, $T = 2.0$.\n    3. $N_x = 801$, $\\Delta t = 2.0\\times 10^{-2}$, $T = 0.5$.\n    4. $N_x = 201$, $\\Delta t = 2.0\\times 10^{-2}$, $T = 2.0$.\n    5. $N_x = 801$, $\\Delta t = 1.0\\times 10^{-5}$, $T = 0.05$.\n\nFinal output specification:\n- Your program should produce a single line of output containing the survival times for the five test cases, expressed as floating-point numbers in the same order as above, each rounded to six decimal places, as a comma-separated list enclosed in square brackets. For example, the output format must look like\n$$\n[\\text{survival}_1,\\text{survival}_2,\\text{survival}_3,\\text{survival}_4,\\text{survival}_5].\n$$\nNo other output is permitted.", "solution": "The problem presented is valid. It is scientifically grounded in the physics of nonlinear waves and the mathematics of numerical analysis. It is well-posed, providing all necessary equations, parameters, and conditions to perform the requested derivation and numerical simulation. The objective is clear and the methodology is precisely defined. We shall therefore proceed with the solution.\n\nThe governing equation is the Sine-Gordon equation in one spatial dimension:\n$$\nu_{tt}(x,t) - c^2 u_{xx}(x,t) + \\sin(u(x,t)) = 0\n$$\nwith wave speed specified as $c=1$. This second-order partial differential equation (PDE) is to be reformulated as a system of two first-order PDEs by introducing the auxiliary field $v(x,t) = u_t(x,t)$. This yields the system:\n$$\n\\begin{cases}\nu_t = v \\\\\nv_t = u_{xx} - \\sin(u)\n\\end{cases}\n$$\nThe problem demands a Forward-Time Centered-Space (FTCS) discretization. This implies using a forward Euler method for the time derivatives and a second-order centered difference approximation for the spatial derivative. Let $u_j^n$ and $v_j^n$ be the numerical approximations of $u(x_j, t_n)$ and $v(x_j, t_n)$ respectively, on a uniform grid with spatial step $\\Delta x$ and time step $\\Delta t$. The discrete scheme is thus:\n$$\n\\frac{u_j^{n+1} - u_j^n}{\\Delta t} = v_j^n\n$$\n$$\n\\frac{v_j^{n+1} - v_j^n}{\\Delta t} = \\frac{u_{j+1}^n - 2u_j^n + u_{j-1}^n}{(\\Delta x)^2} - \\sin(u_j^n)\n$$\nRearranging these equations gives the explicit update rules for the time evolution:\n$$\nu_j^{n+1} = u_j^n + \\Delta t \\, v_j^n\n$$\n$$\nv_j^{n+1} = v_j^n + \\Delta t \\left( \\frac{u_{j+1}^n - 2u_j^n + u_{j-1}^n}{(\\Delta x)^2} - \\sin(u_j^n) \\right)\n$$\n\nFirst, we address the mandatory derivation of a stability criterion. We perform a Von Neumann stability analysis on the linearized form of this scheme. The system is linearized around the trivial homogeneous stationary state $u(x,t)=0$ and $v(x,t)=0$. For small perturbations $\\delta u$ and $\\delta v$ around this state, we have $u = 0 + \\delta u$ and $v = 0 + \\delta v$. The nonlinear term is linearized as $\\sin(u) \\approx u$, so $\\sin(u_j^n) \\approx \\delta u_j^n$. The linearized discrete equations are:\n$$\n\\delta u_j^{n+1} = \\delta u_j^n + \\Delta t \\, \\delta v_j^n\n$$\n$$\n\\delta v_j^{n+1} = \\delta v_j^n + \\Delta t \\left( \\frac{\\delta u_{j+1}^n - 2\\delta u_j^n + \\delta u_{j-1}^n}{(\\Delta x)^2} - \\delta u_j^n \\right)\n$$\nWe analyze the evolution of a single Fourier mode for the perturbations, of the form:\n$$\n\\delta u_j^n = \\hat{u}_n e^{ikx_j}\n$$\n$$\n\\delta v_j^n = \\hat{v}_n e^{ikx_j}\n$$\nwhere $k$ is the wavenumber and $\\hat{u}_n, \\hat{v}_n$ are the complex amplitudes at time $t_n$. Substituting these into the linearized equations yields:\n$$\n\\hat{u}_{n+1} e^{ikx_j} = \\hat{u}_n e^{ikx_j} + \\Delta t \\, \\hat{v}_n e^{ikx_j}\n$$\n$$\n\\hat{v}_{n+1} e^{ikx_j} = \\hat{v}_n e^{ikx_j} + \\Delta t \\left( \\frac{\\hat{u}_n (e^{ik(x_j+\\Delta x)} - 2e^{ikx_j} + e^{ik(x_j-\\Delta x)})}{(\\Delta x)^2} - \\hat{u}_n e^{ikx_j} \\right)\n$$\nDividing by the common factor $e^{ikx_j}$ and simplifying the spatial difference term using $e^{ik\\Delta x} + e^{-ik\\Delta x} - 2 = 2\\cos(k\\Delta x) - 2 = -4\\sin^2(k\\Delta x/2)$, we obtain a system for the amplitudes:\n$$\n\\hat{u}_{n+1} = \\hat{u}_n + \\Delta t \\, \\hat{v}_n\n$$\n$$\n\\hat{v}_{n+1} = \\hat{v}_n + \\Delta t \\, \\hat{u}_n \\left( -\\frac{4}{(\\Delta x)^2}\\sin^2\\left(\\frac{k\\Delta x}{2}\\right) - 1 \\right)\n$$\nThis can be expressed in matrix form as $\\mathbf{w}_{n+1} = G \\mathbf{w}_n$, where $\\mathbf{w}_n = [\\hat{u}_n, \\hat{v}_n]^T$ and $G$ is the amplification matrix:\n$$\nG = \\begin{pmatrix} 1  \\Delta t \\\\ -\\Delta t \\left( \\frac{4}{(\\Delta x)^2}\\sin^2\\left(\\frac{k\\Delta x}{2}\\right) + 1 \\right)  1 \\end{pmatrix}\n$$\nLet $\\omega_k^2 = \\frac{4}{(\\Delta x)^2}\\sin^2(k\\Delta x/2) + 1$. Note that $\\omega_k^2 \\ge 1$. The matrix is $G = \\begin{pmatrix} 1  \\Delta t \\\\ -\\omega_k^2 \\Delta t  1 \\end{pmatrix}$. For the scheme to be stable, the spectral radius of $G$ must not exceed $1$. The eigenvalues $\\lambda$ of $G$ are found from the characteristic equation $\\det(G - \\lambda I) = 0$:\n$$\n(1-\\lambda)^2 + \\omega_k^2 (\\Delta t)^2 = 0\n$$\n$$\n\\lambda = 1 \\pm i \\omega_k \\Delta t\n$$\nThe magnitude of the eigenvalues is:\n$$\n|\\lambda|^2 = 1^2 + (\\omega_k \\Delta t)^2 = 1 + \\omega_k^2 (\\Delta t)^2\n$$\nSince $\\omega_k^2 \\ge 1$ and $\\Delta t  0$, we have $\\omega_k^2 (\\Delta t)^2  0$. Therefore, $|\\lambda|^2  1$, which implies $|\\lambda|1$ for all wavenumbers $k$ and any non-zero time step $\\Delta t$.\n\nThe conclusion of this analysis is categorical: the FTCS scheme, as specified by applying the forward Euler method to the first-order system representation of the Sine-Gordon equation, is **unconditionally unstable**. Any numerical perturbation, including the intrinsic discretization error from representing the initial condition on the grid, will be amplified at every time step, leading to exponential growth and eventually the destruction of the numerical solution. The highest frequency modes (where $k\\Delta x \\approx \\pi$) exhibit the fastest growth.\n\nThe numerical experiment serves to quantify the survival time of the soliton profile under this unstable scheme for various choices of discretization parameters. The initial condition, $u(x,0) = 4\\arctan(e^x)$, is a static solution to the continuum equation, meaning $u_{xx} = \\sin(u)$. However, the discrete Laplacian operator does not exactly satisfy this relation, creating an initial residual error on the order of $O((\\Delta x)^2)$. This error acts as the seed for the instability. A computer program is implemented to perform the time-stepping according to the derived discrete equations, enforcing Dirichlet boundary conditions $u(-L,t)=0$, $u(L,t)=2\\pi$, and $v(\\pm L,t)=0$. At each time step $t_n$, the error $\\mathcal{E}(t_n) = \\max_j | u_j^n - 4 \\arctan(e^{x_j}) |$ is computed. The simulation for a given parameter set terminates when this error first exceeds the threshold $\\varepsilon=0.1$, and the corresponding time is reported as the survival time. If the error does not exceed the threshold by the final time $T$, the survival time is reported as $T$. The results from the specified test cases will demonstrate that while the soliton can persist for a short duration if $\\Delta t$ is sufficiently small, it inevitably succumbs to the numerical instability, as predicted by the theory. Larger values of $\\Delta t$ and smaller values of $\\Delta x$ (which allow for higher frequency unstable modes) are expected to accelerate the failure.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve_case(Nx, dt, T):\n    \"\"\"\n    Solves the Sine-Gordon equation for one set of parameters.\n\n    Args:\n        Nx (int): Number of spatial grid points.\n        dt (float): Time step size.\n        T (float): Total simulation time.\n\n    Returns:\n        float: The survival time of the soliton.\n    \"\"\"\n    # Problem constants\n    L = 40.0\n    x0 = 0.0\n    c = 1.0\n    epsilon = 0.1\n\n    # Grid setup\n    dx = (2.0 * L) / (Nx - 1)\n    x = np.linspace(-L, L, Nx)\n\n    # Initial conditions\n    u = 4.0 * np.arctan(np.exp(x - x0))\n    v = np.zeros(Nx)\n\n    # Exact static solution for error calculation\n    u_exact = u.copy()\n    \n    # Boundary conditions on u are set by the initial condition.\n    # The update loop acts only on interior points, so a separate\n    # enforcement step for u is not required.\n    # u[-1] is approx 2*pi, u[0] is approx 0.\n    \n    # Boundary conditions on v must be maintained.\n    v[0] = 0.0\n    v[-1] = 0.0\n\n    current_time = 0.0\n    num_steps = int(T / dt)\n\n    for _ in range(num_steps):\n        # Make copies of the fields at time n\n        u_old = u.copy()\n        v_old = v.copy()\n\n        # Update interior points from n to n+1 using FTCS scheme\n        \n        # 1. Compute second spatial derivative of u at time n\n        u_xx = (u_old[2:] - 2.0 * u_old[1:-1] + u_old[:-2]) / (dx**2)\n        \n        # 2. Update v to time n+1 using fields from time n\n        v[1:-1] = v_old[1:-1] + dt * (c**2 * u_xx - np.sin(u_old[1:-1]))\n        \n        # 3. Update u to time n+1 using fields from time n\n        #    Note: Must use v_old, not the newly computed v, for a pure FTCS scheme.\n        u[1:-1] = u_old[1:-1] + dt * v_old[1:-1]\n        \n        current_time += dt\n\n        # Check for failure condition\n        error = np.max(np.abs(u - u_exact))\n        if error > epsilon:\n            return round(current_time, 6)\n\n    # If the loop completes without failure, the soliton survived for the full duration T.\n    return round(T, 6)\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (801, 5e-4, 0.5),   # Case 1\n        (801, 5e-3, 2.0),   # Case 2\n        (801, 2e-2, 0.5),   # Case 3\n        (201, 2e-2, 2.0),   # Case 4\n        (801, 1e-5, 0.05),  # Case 5\n    ]\n\n    results = []\n    for case in test_cases:\n        Nx, dt, T = case\n        survival_time = solve_case(Nx, dt, T)\n        results.append(f\"{survival_time:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2396353"}]}