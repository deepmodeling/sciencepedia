{"hands_on_practices": [{"introduction": "One of the most intuitive methods for proving query lower bounds is the hybrid argument. The core idea is to measure the distinguishability between the final states of an algorithm run on two different inputs, say $m$ and $l$. If the algorithm can tell them apart, the final states must be significantly different. The hybrid argument provides a limit on how fast this difference can build up, one query at a time. This practice ([@problem_id:107573]) asks you to calculate this fundamental one-step change for a quantum walk-based search, providing a direct glimpse into the engine of a lower-bound proof.", "problem": "A crucial method for establishing query complexity lower bounds in quantum computation is the hybrid argument. It relies on quantifying the distinguishability between the final states of an algorithm run on two different inputs. For a quantum walk-based search algorithm, this translates to bounding the one-step change in the state vector when the location of the marked item is shifted.\n\nConsider a quantum walk search on a directed, $d$-regular graph with $N$ vertices. The Hilbert space of the walk is $\\mathcal{H} = \\mathcal{H}_V \\otimes \\mathcal{H}_C = \\mathbb{C}^N \\otimes \\mathbb{C}^d$, with basis states $|v, j\\rangle$ representing an edge starting from vertex $v$ with label $j \\in \\{1, \\dots, d\\}$.\n\nThe search algorithm evolves an initial state using a walk operator $W_m = S C_m$, where $m$ is the index of the marked vertex. The operator consists of two parts:\n1.  A coin operator $C_m$ that acts on the second register (the \"coin\" space $\\mathcal{H}_C$) and depends on the vertex in the first register. We define it as:\n    $$C_m = (I_N - |m\\rangle\\langle m|) \\otimes C_U + |m\\rangle\\langle m| \\otimes C_M$$\n    where $I_N$ is the identity on the vertex space $\\mathcal{H}_V$. For simplicity, we choose the unmarked coin to be the identity, $C_U = I_d$, and the marked coin to be a phase flip, $C_M = -I_d$.\n2.  A shift operator $S$ that is independent of the marked vertex $m$. It describes the fixed connectivity of the underlying graph by permuting the basis states: $S|v, j\\rangle = |\\text{neighbor}(v, j), f_{v,j}\\rangle$, where $\\text{neighbor}(v, j)$ is the vertex at the other end of the j-th edge from $v$, and $f_{v,j}$ is the label of that same edge from the perspective of the neighbor. As a permutation, $S$ is unitary.\n\nThe initial state of the algorithm, $|\\Psi_0\\rangle$, is the uniform superposition over all possible edges:\n$$|\\Psi_0\\rangle = \\frac{1}{\\sqrt{Nd}} \\sum_{v=1}^N \\sum_{j=1}^d |v, j\\rangle$$\n\nTo find the lower bound on the number of steps (queries) required, we analyze how much the state vector can change in a single step if the marked item is at location $m$ versus location $l$ (where $m \\neq l$). This one-step distinguishability is given by the norm $D = \\|(W_m - W_l)|\\Psi_0\\rangle\\|$.\n\nDerive the value of $D\\sqrt{N}$. Your final answer should be a single real number.", "solution": "To derive $D\\sqrt{N}$, recall that $D = \\|(W_m - W_l)|\\Psi_0\\rangle\\|$ and $W_k = S C_k$ for $k \\in \\{m, l\\}$. The shift operator $S$ is unitary, so:\n\n$$\n\\|(W_m - W_l)|\\Psi_0\\rangle\\| = \\|S(C_m - C_l)|\\Psi_0\\rangle\\| = \\|(C_m - C_l)|\\Psi_0\\rangle\\|,\n$$\n\nsince unitary operators preserve the norm. Thus, $D = \\|(C_m - C_l)|\\Psi_0\\rangle\\|$.\n\nThe coin operator $C_k$ is defined as:\n\n$$\nC_k = (I_N - |k\\rangle\\langle k|) \\otimes C_U + |k\\rangle\\langle k| \\otimes C_M,\n$$\n\nwith $C_U = I_d$ and $C_M = -I_d$. Substituting these values:\n\n$$\nC_k = (I_N - |k\\rangle\\langle k|) \\otimes I_d + |k\\rangle\\langle k| \\otimes (-I_d) = I_N \\otimes I_d - 2|k\\rangle\\langle k| \\otimes I_d.\n$$\n\nTherefore:\n\n$$\nC_m - C_l = \\left(I_N \\otimes I_d - 2|m\\rangle\\langle m| \\otimes I_d\\right) - \\left(I_N \\otimes I_d - 2|l\\rangle\\langle l| \\otimes I_d\\right) = 2\\left(|l\\rangle\\langle l| - |m\\rangle\\langle m|\\right) \\otimes I_d.\n$$\n\nThe initial state is:\n\n$$\n|\\Psi_0\\rangle = \\frac{1}{\\sqrt{Nd}} \\sum_{v=1}^N \\sum_{j=1}^d |v, j\\rangle.\n$$\n\nApplying $C_m - C_l$:\n\n$$\n(C_m - C_l)|\\Psi_0\\rangle = 2\\left(|l\\rangle\\langle l| - |m\\rangle\\langle m|\\right) \\otimes I_d \\cdot \\frac{1}{\\sqrt{Nd}} \\sum_{v=1}^N \\sum_{j=1}^d |v, j\\rangle.\n$$\n\nThe operator $\\left(|l\\rangle\\langle l| - |m\\rangle\\langle m|\\right) \\otimes I_d$ acts as:\n\n$$\n\\left(|l\\rangle\\langle l| \\otimes I_d\\right) |v, j\\rangle = \\delta_{v,l} |l, j\\rangle, \\quad \\left(|m\\rangle\\langle m| \\otimes I_d\\right) |v, j\\rangle = \\delta_{v,m} |m, j\\rangle.\n$$\n\nThus:\n\n$$\n\\left(|l\\rangle\\langle l| - |m\\rangle\\langle m|\\right) \\otimes I_d \\cdot |\\Psi_0\\rangle = \\frac{1}{\\sqrt{Nd}} \\left( \\sum_{j=1}^d |l, j\\rangle - \\sum_{j=1}^d |m, j\\rangle \\right).\n$$\n\nLet $|A\\rangle = \\sum_{j=1}^d |l, j\\rangle$ and $|B\\rangle = \\sum_{j=1}^d |m, j\\rangle$, so:\n\n$$\n(C_m - C_l)|\\Psi_0\\rangle = \\frac{2}{\\sqrt{Nd}} \\left(|A\\rangle - |B\\rangle\\right).\n$$\n\nThe norm is:\n\n$$\nD = \\|(C_m - C_l)|\\Psi_0\\rangle\\| = \\left\\| \\frac{2}{\\sqrt{Nd}} \\left(|A\\rangle - |B\\rangle\\right) \\right\\| = \\frac{2}{\\sqrt{Nd}} \\left\\| |A\\rangle - |B\\rangle \\right\\|.\n$$\n\nCompute $\\left\\| |A\\rangle - |B\\rangle \\right\\|^2$:\n\n$$\n\\left\\| |A\\rangle - |B\\rangle \\right\\|^2 = \\langle A - B | A - B \\rangle = \\langle A|A\\rangle + \\langle B|B\\rangle - \\langle A|B\\rangle - \\langle B|A\\rangle.\n$$\n\nSince $l \\neq m$, the states $|l, j\\rangle$ and $|m, k\\rangle$ are orthogonal for all $j, k$. Thus:\n\n$$\n\\langle A|B\\rangle = \\sum_{j=1}^d \\sum_{k=1}^d \\langle l,j|m,k\\rangle = 0, \\quad \\langle B|A\\rangle = 0.\n$$\n\nAlso:\n\n$$\n\\langle A|A\\rangle = \\sum_{j=1}^d \\sum_{k=1}^d \\langle l,j|l,k\\rangle = \\sum_{j=1}^d \\langle l,j|l,j\\rangle = d, \\quad \\langle B|B\\rangle = d,\n$$\n\nsince the basis is orthonormal. Therefore:\n\n$$\n\\left\\| |A\\rangle - |B\\rangle \\right\\|^2 = d + d - 0 - 0 = 2d, \\quad \\left\\| |A\\rangle - |B\\rangle \\right\\| = \\sqrt{2d}.\n$$\n\nSubstituting:\n\n$$\nD = \\|(C_m - C_l)|\\Psi_0\\rangle\\| = \\frac{2}{\\sqrt{Nd}} \\cdot \\sqrt{2d} = \\frac{2\\sqrt{2d}}{\\sqrt{Nd}} = \\frac{2\\sqrt{2}}{\\sqrt{N}}.\n$$\n\nFinally:\n\n$$\nD\\sqrt{N} = \\frac{2\\sqrt{2}}{\\sqrt{N}} \\cdot \\sqrt{N} = 2\\sqrt{2}.\n$$", "answer": "$$\\boxed{2\\sqrt{2}}$$", "id": "107573"}, {"introduction": "The general adversary method provides a powerful and systematic way to derive quantum query lower bounds. It formalizes the notion of \"confusability\" between inputs by constructing an adversary matrix, $\\Gamma$, whose spectral norm measures the overall difficulty of the problem. This practice ([@problem_id:107691]) provides a concrete scenario—a promise problem on a cycle graph—to apply this sophisticated machinery. By calculating the adversary value, you will directly connect the structural properties of a computational problem to its fundamental quantum query complexity.", "problem": "Consider an unstructured database of $N$ items, indexed by the vertices of an $N$-vertex cycle graph $C_N$, labeled $0, 1, \\dots, N-1$. We can query the database using a quantum oracle $O_f$ that acts on a basis state $|i\\rangle$ as $O_f|i\\rangle = (-1)^{f(i)}|i\\rangle$, where $f: \\{0, 1, \\dots, N-1\\} \\to \\{0,1\\}$ is a marking function.\n\nWe are given a promise problem. We are guaranteed that the function $f$ belongs to one of two classes:\n1.  **Case 0 (No Marked Items):** The function is the all-zero function, $f(i) = 0$ for all $i \\in \\{0, 1, \\dots, N-1\\}$. There is only one such function.\n2.  **Case 1 (Adjacent Pair Marked):** The function marks exactly one pair of adjacent vertices on the cycle graph. That is, for some $j \\in \\{0, 1, \\dots, N-1\\}$, we have $f(i)=1$ if $i \\in \\{j, j+1 \\pmod N\\}$ and $f(i)=0$ otherwise. There are $N$ such possible functions.\n\nAny quantum algorithm that distinguishes between Case 0 and Case 1 with bounded error must perform at least $T$ queries to the oracle $O_f$. A tight lower bound on $T$ can be found using the general adversary method. The method states that the query complexity $Q(f)$ is lower-bounded by the adversary value $ADV(f)$, defined as:\n$$\nADV(f) = \\max_{\\Gamma} \\frac{\\|\\Gamma\\|_{op}}{\\max_{i \\in \\{0, \\dots, N-1\\}} \\|\\Gamma \\circ D_i\\|_{op}}\n$$\nHere, $\\Gamma$ is a complex matrix with $|X|$ rows and $|Y|$ columns, where $X$ is the set of functions in Case 1 and $Y$ is the set of functions in Case 0. The matrix $D_i$ has the same dimensions as $\\Gamma$, with entries $(D_i)_{x,y} = 1$ if the functions $x \\in X$ and $y \\in Y$ differ on input $i$ (i.e., $x(i) \\neq y(i)$), and $0$ otherwise. The operation $\\circ$ denotes the Hadamard (entry-wise) product, and $\\|\\cdot\\|_{op}$ is the spectral norm (largest singular value).\n\nYour task is to calculate the adversary value $ADV(f)$ for this promise problem as a function of $N$. Assume $N \\ge 3$.", "solution": "We need to compute the adversary value $ADV(f)$ for the given promise problem. The adversary value is defined as:\n\n$$\nADV(f) = \\max_{\\Gamma} \\frac{\\|\\Gamma\\|_{op}}{\\max_{i \\in \\{0, \\dots, N-1\\}} \\|\\Gamma \\circ D_i\\|_{op}}\n$$\n\nwhere:\n- $X$ is the set of functions in Case 1 (adjacent pair marked), with $|X| = N$.\n- $Y$ is the set of functions in Case 0 (no marked items), with $|Y| = 1$ (the all-zero function $y_0$).\n- $\\Gamma$ is a complex matrix with dimensions $|X| \\times |Y| = N \\times 1$, so $\\Gamma$ is a column vector.\n- $D_i$ is a matrix of the same dimensions as $\\Gamma$, with $(D_i)_{x,y_0} = 1$ if $x(i) \\neq y_0(i)$, and $0$ otherwise.\n\nFor a function $x \\in X$ corresponding to a marked pair $(j, j+1 \\mod N)$, $x(i) = 1$ if $i = j$ or $i = j+1 \\mod N$, and $x(i) = 0$ otherwise. The all-zero function $y_0$ satisfies $y_0(i) = 0$ for all $i$. Thus, $x(i) \\neq y_0(i)$ if and only if $x(i) = 1$, which occurs when $i$ is in the marked pair for $x$. For a fixed $i$, the functions $x$ that differ from $y_0$ on input $i$ are those with marked pairs covering $i$, which are $x$ corresponding to $j = i$ (pair $(i, i+1 \\mod N)$) and $j = i-1 \\mod N$ (pair $(i-1, i \\mod N)$).\n\nTherefore, the matrix $D_i$ has $(D_i)_{x,y_0} = 1$ for exactly two functions $x$: those with indices $j = i-1 \\mod N$ and $j = i \\mod N$. The Hadamard product $\\Gamma \\circ D_i$ is a vector with non-zero entries only at these two indices.\n\nLet $\\Gamma = [v_0, v_1, \\dots, v_{N-1}]^T$, where $v_j$ is the component for the function marking pair $(j, j+1 \\mod N)$. The spectral norm (which for a vector is the Euclidean norm) is:\n\n$$\n\\|\\Gamma\\|_{op} = \\sqrt{\\sum_{j=0}^{N-1} |v_j|^2}\n$$\n\nFor $\\Gamma \\circ D_i$, the spectral norm is:\n\n$$\n\\|\\Gamma \\circ D_i\\|_{op} = \\sqrt{|v_{i-1 \\mod N}|^2 + |v_i|^2}\n$$\n\nThe adversary value becomes:\n\n$$\nADV(f) = \\max_{v} \\frac{\\sqrt{\\sum_{j=0}^{N-1} |v_j|^2}}{\\max_{i} \\sqrt{|v_{i-1 \\mod N}|^2 + |v_i|^2}}\n$$\n\nTo maximize this ratio, we should choose $v_j$ to be uniform over $j$, as this minimizes the denominator for a fixed numerator. Let $v_j = c$ for some constant $c$. Then:\n\n$$\n\\|\\Gamma\\|_{op} = \\sqrt{\\sum_{j=0}^{N-1} |c|^2} = \\sqrt{N|c|^2} = |c|\\sqrt{N}\n$$\n\nAnd:\n\n$$\n\\max_{i} \\|\\Gamma \\circ D_i\\|_{op} = \\max_{i} \\sqrt{|c|^2 + |c|^2} = \\sqrt{2|c|^2} = |c|\\sqrt{2}\n$$\n\nThus, the adversary value is:\n$$\nADV(f) = \\frac{|c|\\sqrt{N}}{|c|\\sqrt{2}} = \\sqrt{\\frac{N}{2}}\n$$\n\nTherefore, the adversary value is $\\sqrt{\\frac{N}{2}}$.", "answer": "$$\\boxed{\\sqrt{\\frac{N}{2}}}$$", "id": "107691"}, {"introduction": "A surprising and remarkably powerful tool for proving query lower bounds is the polynomial method. It rests on the fact that the acceptance probability of a $T$-query quantum algorithm can be expressed as a real-valued polynomial of degree at most $2T$ in the input variables. This connection allows us to translate questions of computational complexity into problems in approximation theory. This exercise ([@problem_id:107677]) demonstrates the method's strength by showing that the $\\Omega(\\sqrt{N})$ lower bound for search remains intact even when an algorithm is given a significant head start, revealing half the database for free.", "problem": "A quantum algorithm is designed to find a single marked item, $w$, in an unstructured database of $N$ items, represented by a binary string $x = (x_1, \\dots, x_N)$ where $x_i = 1$ if $i=w$ and $x_i = 0$ otherwise.\n\nThe search algorithm is given a special advantage. Before the quantum part of the computation begins, a random subset of indices $S \\subset \\{1, \\dots, N\\}$ with size $|S| = N/2$ is chosen, and the values of $x_i$ for all $i \\in S$ are revealed to the algorithm at no cost. The algorithm must then use quantum queries to the oracle $O_x$, which acts as $O_x|i\\rangle = (-1)^{x_i}|i\\rangle$, to identify the marked item $w$.\n\nThe algorithm must succeed with a high probability (bounded by a constant greater than $1/2$ and less than 1), regardless of which item $w$ is marked and which subset $S$ is revealed. The worst-case query complexity $T$ for such an algorithm is defined as the minimum number of queries required to solve the problem for the most difficult combination of $w$ and $S$.\n\nFor large $N$, this lower bound on the query complexity scales as a power law: $T \\propto N^\\alpha$. Using the polynomial method for quantum query lower bounds, determine the value of the exponent $\\alpha$.", "solution": "We model the quantum algorithm’s acceptance probability on input $x \\in \\{0,1\\}^N$ as a real multilinear polynomial $p(x)$ of degree at most $2T$ (Beals et al., 1998). After revealing $x_i$ for $i \\in S$ with $|S|=N/2$, the algorithm still needs to decide which of the remaining $m = N/2$ unknown bits contains the unique 1 (assuming it was not in $S$). This subproblem is equivalent to approximating the Boolean OR function on $m$ bits to a constant, non-trivial error.\n\nIt is a known result from the theory of polynomial approximation of Boolean functions that any real polynomial $q$ that approximates $\\text{OR}_m$ to an error less than $1/2$ on all Boolean inputs must have a degree of at least $\\Omega(\\sqrt{m})$.\n$$\n\\deg(q) = \\Omega(\\sqrt{m}) = \\Omega(\\sqrt{N/2})\n$$\nSince the acceptance probability polynomial $p(x)$, when restricted to the unknown bits, must provide such an approximating polynomial, its degree is bounded by the same value. The degree of $p(x)$ is at most $2T$.\n$$\n2T \\ge \\deg(p) \\ge \\Omega(\\sqrt{N/2})\n$$\nThis implies that the number of queries must satisfy:\n$$\nT = \\Omega(\\sqrt{N})\n$$\nTherefore, the exponent $\\alpha$ in the scaling $T \\propto N^\\alpha$ is $1/2$.", "answer": "$$\\boxed{\\frac{1}{2}}$$", "id": "107677"}]}