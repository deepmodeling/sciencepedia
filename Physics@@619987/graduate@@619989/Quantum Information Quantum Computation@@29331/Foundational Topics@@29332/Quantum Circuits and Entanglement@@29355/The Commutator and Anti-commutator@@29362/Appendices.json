{"hands_on_practices": [{"introduction": "The Pauli matrices form the algebraic backbone of single-qubit quantum systems. An operator of the form $Q = \\vec{v} \\cdot \\vec{\\sigma}$ represents a physical observable corresponding to a spin measurement along an arbitrary direction defined by the classical vector $\\vec{v}$. This foundational exercise [@problem_id:2084986] reveals a remarkable and elegant connection between the quantum algebra of spin and classical vector geometry. By calculating $Q^2$, you will see how the anti-commutation relations of Pauli matrices cause the operator product to simplify to a scalar multiple of the identity, where the scalar is simply the squared magnitude of the vector $\\vec{v}$.", "problem": "In quantum mechanics, the Pauli matrices are a set of three $2 \\times 2$ complex matrices which are Hermitian and unitary. They are given by:\n$$\n\\sigma_x = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, \\quad \\sigma_y = \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix}, \\quad \\sigma_z = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}\n$$\nwhere $i^2 = -1$. These matrices are fundamental in the description of a particle's intrinsic angular momentum, known as spin. An arbitrary operator acting on the spin state can often be expressed as a linear combination of these matrices.\n\nConsider a classical vector with real components $\\vec{v} = (v_x, v_y, v_z)$. We can construct a matrix operator $Q$ by forming the dot product of this vector with the vector of Pauli matrices $\\vec{\\sigma} = (\\sigma_x, \\sigma_y, \\sigma_z)$:\n$$\nQ = \\vec{v} \\cdot \\vec{\\sigma} = v_x \\sigma_x + v_y \\sigma_y + v_z \\sigma_z\n$$\nNow, calculate the square of this operator, $Q^2$. It can be shown that the result is proportional to the $2 \\times 2$ identity matrix, $I = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$. Your task is to find the scalar factor of this proportionality.\n\nExpress this scalar factor as an analytic expression in terms of the components $v_x, v_y$, and $v_z$.", "solution": "The problem asks us to compute the square of the operator $Q = v_x \\sigma_x + v_y \\sigma_y + v_z \\sigma_z$ and identify the scalar factor $\\lambda$ in the expression $Q^2 = \\lambda I$.\n\nWe start by writing out the expression for $Q^2$:\n$$\nQ^2 = (v_x \\sigma_x + v_y \\sigma_y + v_z \\sigma_z)(v_x \\sigma_x + v_y \\sigma_y + v_z \\sigma_z)\n$$\nExpanding this product gives nine terms:\n$$\nQ^2 = v_x^2 \\sigma_x^2 + v_x v_y \\sigma_x \\sigma_y + v_x v_z \\sigma_x \\sigma_z + v_y v_x \\sigma_y \\sigma_x + v_y^2 \\sigma_y^2 + v_y v_z \\sigma_y \\sigma_z + v_z v_x \\sigma_z \\sigma_x + v_z v_y \\sigma_z \\sigma_y + v_z^2 \\sigma_z^2\n$$\nWe can group these terms. First, let's group the terms where the Pauli matrices are squared (the \"diagonal\" terms in terms of indices $x,y,z$), and then the cross-product terms.\n$$\nQ^2 = (v_x^2 \\sigma_x^2 + v_y^2 \\sigma_y^2 + v_z^2 \\sigma_z^2) + (v_x v_y \\sigma_x \\sigma_y + v_y v_x \\sigma_y \\sigma_x) + (v_y v_z \\sigma_y \\sigma_z + v_z v_y \\sigma_z \\sigma_y) + (v_z v_x \\sigma_z \\sigma_x + v_x v_z \\sigma_x \\sigma_z)\n$$\nSince the scalar components $v_i$ commute, we can factor them out:\n$$\nQ^2 = (v_x^2 \\sigma_x^2 + v_y^2 \\sigma_y^2 + v_z^2 \\sigma_z^2) + v_x v_y (\\sigma_x \\sigma_y + \\sigma_y \\sigma_x) + v_y v_z (\\sigma_y \\sigma_z + \\sigma_z \\sigma_y) + v_z v_x (\\sigma_z \\sigma_x + \\sigma_x \\sigma_z)\n$$\nThe terms in parentheses are the anti-commutators of the Pauli matrices, defined as $\\{A, B\\} = AB + BA$. So we can rewrite the expression as:\n$$\nQ^2 = v_x^2 \\sigma_x^2 + v_y^2 \\sigma_y^2 + v_z^2 \\sigma_z^2 + v_x v_y \\{\\sigma_x, \\sigma_y\\} + v_y v_z \\{\\sigma_y, \\sigma_z\\} + v_z v_x \\{\\sigma_z, \\sigma_x\\}\n$$\nNow, we use the fundamental properties of the Pauli matrices. First, the square of any Pauli matrix is the identity matrix $I$:\n$\\sigma_x^2 = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = I$\n$\\sigma_y^2 = \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix} \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix} = \\begin{pmatrix} -i^2 & 0 \\\\ 0 & -i^2 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = I$\n$\\sigma_z^2 = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix} \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = I$\nSo, $\\sigma_i^2 = I$ for $i \\in \\{x, y, z\\}$.\n\nThe first part of our expression for $Q^2$ becomes:\n$$\nv_x^2 I + v_y^2 I + v_z^2 I = (v_x^2 + v_y^2 + v_z^2)I\n$$\nNext, we evaluate the anti-commutators for distinct Pauli matrices ($i \\neq j$):\n$\\{\\sigma_x, \\sigma_y\\} = \\sigma_x \\sigma_y + \\sigma_y \\sigma_x = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix} + \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix} \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}$\n$= \\begin{pmatrix} i & 0 \\\\ 0 & -i \\end{pmatrix} + \\begin{pmatrix} -i & 0 \\\\ 0 & i \\end{pmatrix} = \\begin{pmatrix} 0 & 0 \\\\ 0 & 0 \\end{pmatrix} = 0 \\cdot I$\nIn general, the Pauli matrices obey the anti-commutation relation $\\{\\sigma_i, \\sigma_j\\} = 2\\delta_{ij}I$, where $\\delta_{ij}$ is the Kronecker delta. This means that if $i \\neq j$, the anti-commutator is the zero matrix.\nTherefore:\n$\\{\\sigma_x, \\sigma_y\\} = 0$\n$\\{\\sigma_y, \\sigma_z\\} = 0$\n$\\{\\sigma_z, \\sigma_x\\} = 0$\n\nSubstituting these results back into the expression for $Q^2$:\n$$\nQ^2 = (v_x^2 + v_y^2 + v_z^2)I + v_x v_y (0 \\cdot I) + v_y v_z (0 \\cdot I) + v_z v_x (0 \\cdot I)\n$$\n$$\nQ^2 = (v_x^2 + v_y^2 + v_z^2)I\n$$\nThe operator $Q^2$ is indeed proportional to the identity matrix $I$. The scalar factor of proportionality is the term in the parentheses.\n\nThe scalar factor is $v_x^2 + v_y^2 + v_z^2$.", "answer": "$$\\boxed{v_{x}^{2} + v_{y}^{2} + v_{z}^{2}}$$", "id": "2084986"}, {"introduction": "Digital quantum simulation is a key application of quantum computers, often relying on the Trotter-Suzuki formula to approximate the evolution of a complex Hamiltonian by breaking it into simpler, non-commuting parts. The accuracy of this method hinges on the degree to which these parts fail to commute. This practice [@problem_id:148291] delves into the core of this \"Trotter error\" by asking you to quantify the non-commutativity between two fundamental single-qubit gates. Calculating the Frobenius norm of their commutator provides a direct and practical measure of the error introduced in a single simulation step, highlighting why the ordering of quantum operations is critically important.", "problem": "In quantum computation, the Trotter-Suzuki decomposition is a fundamental technique for simulating the time evolution of a quantum system. The first-order Trotter approximation for a Hamiltonian $H = H_1 + H_2$ is given by $e^{-i(H_1+H_2)t} \\approx e^{-iH_1 t} e^{-iH_2 t}$. The error in this approximation is related to the degree to which the component evolution operators fail to commute. A quantitative measure of this non-commutativity is the Frobenius norm of their commutator.\n\nConsider a single-qubit system whose dynamics are governed by two non-commuting Hamiltonian components, proportional to the Pauli matrices $\\sigma_x$ and $\\sigma_z$. The corresponding unitary evolution operators (or quantum gates) for evolution by \"angles\" $\\alpha$ and $\\beta$ are given by:\n$$\nU_x(\\alpha) = e^{-i\\alpha \\sigma_x} \\quad \\text{and} \\quad U_z(\\beta) = e^{-i\\beta \\sigma_z}\n$$\nwhere $\\alpha$ and $\\beta$ are real parameters. The Pauli matrices are given by:\n$$\n\\sigma_x = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, \\quad \\sigma_y = \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix}, \\quad \\sigma_z = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}\n$$\nand $I$ denotes the $2 \\times 2$ identity matrix.\n\nThe Frobenius norm of a matrix $A$ is defined as $\\|A\\|_F = \\sqrt{\\text{Tr}(A^\\dagger A)}$, where $A^\\dagger$ is the conjugate transpose of $A$.\n\nYour task is to compute the Frobenius norm squared of the commutator of these two gates, $\\|[U_x(\\alpha), U_z(\\beta)]\\|_F^2$. This value provides a measure of the local error introduced by a single Trotter step. Express your answer as a function of the parameters $\\alpha$ and $\\beta$.", "solution": "To compute the Frobenius norm squared of the commutator $\\|[U_x(\\alpha), U_z(\\beta)]\\|_F^2$, we first express the unitary operators explicitly. The Pauli matrices are:\n\n$$\n\\sigma_x = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, \\quad \\sigma_z = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}.\n$$\n\nThe evolution operators are:\n\n$$\nU_x(\\alpha) = e^{-i\\alpha \\sigma_x} = \\cos(\\alpha) I - i \\sin(\\alpha) \\sigma_x, \\quad U_z(\\beta) = e^{-i\\beta \\sigma_z} = \\cos(\\beta) I - i \\sin(\\beta) \\sigma_z.\n$$\n\nIn matrix form:\n\n$$\nU_x(\\alpha) = \\begin{pmatrix} \\cos(\\alpha) & -i \\sin(\\alpha) \\\\ -i \\sin(\\alpha) & \\cos(\\alpha) \\end{pmatrix}, \\quad U_z(\\beta) = \\begin{pmatrix} \\cos(\\beta) - i \\sin(\\beta) & 0 \\\\ 0 & \\cos(\\beta) + i \\sin(\\beta) \\end{pmatrix}.\n$$\n\nThe commutator is:\n\n$$\nC = [U_x(\\alpha), U_z(\\beta)] = U_x(\\alpha) U_z(\\beta) - U_z(\\beta) U_x(\\alpha).\n$$\n\nCompute each product:\n\n$$\nU_x(\\alpha) U_z(\\beta) = \\begin{pmatrix} \\cos(\\alpha) & -i \\sin(\\alpha) \\\\ -i \\sin(\\alpha) & \\cos(\\alpha) \\end{pmatrix} \\begin{pmatrix} e^{-i\\beta} & 0 \\\\ 0 & e^{i\\beta} \\end{pmatrix} = \\begin{pmatrix} \\cos(\\alpha) e^{-i\\beta} & -i \\sin(\\alpha) e^{i\\beta} \\\\ -i \\sin(\\alpha) e^{-i\\beta} & \\cos(\\alpha) e^{i\\beta} \\end{pmatrix},\n$$\n\n\n$$\nU_z(\\beta) U_x(\\alpha) = \\begin{pmatrix} e^{-i\\beta} & 0 \\\\ 0 & e^{i\\beta} \\end{pmatrix} \\begin{pmatrix} \\cos(\\alpha) & -i \\sin(\\alpha) \\\\ -i \\sin(\\alpha) & \\cos(\\alpha) \\end{pmatrix} = \\begin{pmatrix} e^{-i\\beta} \\cos(\\alpha) & -i e^{-i\\beta} \\sin(\\alpha) \\\\ -i e^{i\\beta} \\sin(\\alpha) & e^{i\\beta} \\cos(\\alpha) \\end{pmatrix}.\n$$\n\nSubtract to find $C$:\n\n$$\nC = \\begin{pmatrix} \\cos(\\alpha) e^{-i\\beta} - e^{-i\\beta} \\cos(\\alpha) & -i \\sin(\\alpha) e^{i\\beta} + i e^{-i\\beta} \\sin(\\alpha) \\\\ -i \\sin(\\alpha) e^{-i\\beta} + i e^{i\\beta} \\sin(\\alpha) & \\cos(\\alpha) e^{i\\beta} - e^{i\\beta} \\cos(\\alpha) \\end{pmatrix} = \\begin{pmatrix} 0 & i \\sin(\\alpha) (e^{-i\\beta} - e^{i\\beta}) \\\\ i \\sin(\\alpha) (e^{i\\beta} - e^{-i\\beta}) & 0 \\end{pmatrix}.\n$$\n\nUsing $e^{i\\beta} - e^{-i\\beta} = 2i \\sin(\\beta)$ and $e^{-i\\beta} - e^{i\\beta} = -2i \\sin(\\beta)$:\n\n$$\nC = \\begin{pmatrix} 0 & i \\sin(\\alpha) (-2i \\sin(\\beta)) \\\\ i \\sin(\\alpha) (2i \\sin(\\beta)) & 0 \\end{pmatrix} = \\begin{pmatrix} 0 & 2 \\sin(\\alpha) \\sin(\\beta) \\\\ -2 \\sin(\\alpha) \\sin(\\beta) & 0 \\end{pmatrix}.\n$$\n\nThe Frobenius norm squared is $\\|C\\|_F^2 = \\operatorname{Tr}(C^\\dagger C)$. Since $C$ is real, $C^\\dagger = C^\\top$:\n\n$$\nC^\\top = \\begin{pmatrix} 0 & -2 \\sin(\\alpha) \\sin(\\beta) \\\\ 2 \\sin(\\alpha) \\sin(\\beta) & 0 \\end{pmatrix}.\n$$\n\nCompute $C^\\dagger C$:\n\n$$\nC^\\dagger C = \\begin{pmatrix} 0 & -2 \\sin(\\alpha) \\sin(\\beta) \\\\ 2 \\sin(\\alpha) \\sin(\\beta) & 0 \\end{pmatrix} \\begin{pmatrix} 0 & 2 \\sin(\\alpha) \\sin(\\beta) \\\\ -2 \\sin(\\alpha) \\sin(\\beta) & 0 \\end{pmatrix} = \\begin{pmatrix} [ -2 \\sin(\\alpha) \\sin(\\beta) ] [ -2 \\sin(\\alpha) \\sin(\\beta) ] & 0 \\\\ 0 & [ 2 \\sin(\\alpha) \\sin(\\beta) ] [ 2 \\sin(\\alpha) \\sin(\\beta) ] \\end{pmatrix} = \\begin{pmatrix} 4 \\sin^2(\\alpha) \\sin^2(\\beta) & 0 \\\\ 0 & 4 \\sin^2(\\alpha) \\sin^2(\\beta) \\end{pmatrix}.\n$$\n\nThe trace is:\n\n$$\n\\operatorname{Tr}(C^\\dagger C) = 4 \\sin^2(\\alpha) \\sin^2(\\beta) + 4 \\sin^2(\\alpha) \\sin^2(\\beta) = 8 \\sin^2(\\alpha) \\sin^2(\\beta).\n$$\n\nThus, $\\|C\\|_F^2 = 8 \\sin^2(\\alpha) \\sin^2(\\beta)$.", "answer": "$$ \\boxed{8 \\sin^{2}{\\left(\\alpha \\right)} \\sin^{2}{\\left(\\beta \\right)}} $$", "id": "148291"}, {"introduction": "We now shift our focus to the crucial field of quantum error correction, where stabilizer codes provide a framework for building fault-tolerant quantum computers. These codes define a protected logical subspace as the joint $+1$ eigenspace of a set of mutually commuting multi-qubit Pauli operators, known as stabilizer generators. This exercise [@problem_id:148239] explores the algebraic structure of these generators by having you compute their anti-commutator. The calculation elegantly demonstrates how the defining commutation property of stabilizers, $[S_1, S_2] = 0$, directly simplifies the anti-commutator $\\{S_1, S_2\\}$, offering valuable hands-on experience with the operator algebra that underpins the protection of quantum information.", "problem": "In the theory of quantum error correction, stabilizer codes play a crucial role. A stabilizer code is defined by a set of commuting Pauli operators, $\\{S_i\\}$, called the stabilizer generators. The codespace is the simultaneous +1 eigenspace of all these generators. The five-qubit perfect code is a prominent example, capable of correcting any single-qubit error. Its stabilizer group is generated by four operators.\n\nConsider two of these generators, defined as follows:\n$S_1 = X \\otimes Z \\otimes Z \\otimes X \\otimes I$\n$S_2 = I \\otimes X \\otimes Z \\otimes Z \\otimes X$\n\nHere, $I, X, Y, Z$ are the standard Pauli matrices, and the operators act on the Hilbert space of five qubits, $(\\mathbb{C}^2)^{\\otimes 5}$. For brevity, the tensor product symbol $\\otimes$ is often omitted, so the generators are written as $S_1 = XZZXI$ and $S_2 = IXZZX$.\n\nBy definition, stabilizer generators must commute with each other, so $[S_1, S_2] = S_1 S_2 - S_2 S_1 = 0$. Your task is to compute the anti-commutator of these two operators, defined as $\\{S_1, S_2\\} = S_1 S_2 + S_2 S_1$. Express the final result as a scalar multiple of a five-qubit Pauli string.", "solution": "The stabilizer generators are given as:\n\n$$\nS_1 = X \\otimes Z \\otimes Z \\otimes X \\otimes I = XZZXI\n$$\n\n\n$$\nS_2 = I \\otimes X \\otimes Z \\otimes Z \\otimes X = IXZZX\n$$\n\n\nThe anti-commutator is defined as:\n\n$$\n\\{S_1, S_2\\} = S_1 S_2 + S_2 S_1\n$$\n\n\nSince the operators commute ($[S_1, S_2] = 0$), it follows that $S_1 S_2 = S_2 S_1$. Therefore:\n\n$$\n\\{S_1, S_2\\} = 2 S_1 S_2\n$$\n\n\nNow compute $S_1 S_2$:\n\n$$\nS_1 S_2 = (X \\otimes Z \\otimes Z \\otimes X \\otimes I) (I \\otimes X \\otimes Z \\otimes Z \\otimes X)\n$$\n\n\nThis product is evaluated qubit-wise:\n- Qubit 1: $X \\cdot I = X$\n- Qubit 2: $Z \\cdot X = iY$ (since $Z X = iY$)\n- Qubit 3: $Z \\cdot Z = I$ (since $Z^2 = I$)\n- Qubit 4: $X \\cdot Z = -iY$ (since $X Z = -iY$)\n- Qubit 5: $I \\cdot X = X$\n\nThus:\n\n$$\nS_1 S_2 = X \\otimes (iY) \\otimes I \\otimes (-iY) \\otimes X\n$$\n\n\nThe phase factors are combined:\n\n$$\ni \\cdot (-i) = -i^2 = -(-1) = 1\n$$\n\n\nSo:\n\n$$\nS_1 S_2 = 1 \\cdot (X \\otimes Y \\otimes I \\otimes Y \\otimes X) = X \\otimes Y \\otimes I \\otimes Y \\otimes X\n$$\n\n\nTherefore:\n\n$$\n\\{S_1, S_2\\} = 2 \\cdot (X \\otimes Y \\otimes I \\otimes Y \\otimes X)\n$$\n\n\nIn Pauli string notation, this is $2 \\cdot XYIYX$.", "answer": "$$ \\boxed{2 \\, XYIYX} $$", "id": "148239"}]}