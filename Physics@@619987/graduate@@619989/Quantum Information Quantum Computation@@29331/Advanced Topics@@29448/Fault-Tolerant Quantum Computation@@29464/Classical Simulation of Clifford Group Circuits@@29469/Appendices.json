{"hands_on_practices": [{"introduction": "Understanding the structure of a stabilizer state is the first step towards simulating it efficiently. A stabilizer state is uniquely defined as the common $+1$ eigenstate of a set of commuting Pauli operators, the stabilizer generators. This practice problem [@problem_id:55671] bridges the gap between this abstract algebraic definition and the concrete state vector in the computational basis, revealing how a few generator constraints determine the specific superposition that forms the state.", "problem": "In the stabilizer formalism of quantum computation, an $n$-qubit stabilizer state $|\\psi\\rangle$ is uniquely defined by a set of $n$ mutually commuting and independent generators $\\{g_1, \\dots, g_n\\}$, which are elements of the $n$-qubit Pauli group $\\mathcal{P}_n$. The state $|\\psi\\rangle$ is the unique vector (up to a global phase) in the $2^n$-dimensional Hilbert space that is a simultaneous eigenstate with eigenvalue $+1$ for all generators, i.e., $g_i |\\psi\\rangle = |\\psi\\rangle$ for all $i=1, \\dots, n$.\n\nThe Pauli group $\\mathcal{P}_n$ consists of all tensor products of $n$ single-qubit Pauli matrices $\\{I, X, Y, Z\\}$, with overall phases $\\{\\pm 1, \\pm i\\}$. For example, an operator $X_i$ denotes the Pauli $X$ matrix acting on the $i$-th qubit and the identity matrix $I$ acting on all other $n-1$ qubits.\n\nConsider an $n$-qubit system where the stabilizer state $|\\psi\\rangle$ is defined by the following set of $n$ generators:\n- For the first $k$ qubits, the generators are the Pauli-X operators: $g_i = X_i$ for $i=1, \\dots, k$.\n- For the remaining $n-k$ qubits, the generators are the Pauli-Z operators: $g_j = Z_j$ for $j=k+1, \\dots, n$.\n\nHere, $n$ and $k$ are integer parameters satisfying $1 \\le k \\le n$.\n\nThe state vector $|\\psi\\rangle$ can be expanded in the computational basis $\\{|b\\rangle \\mid b \\in \\{0,1\\}^n\\}$ as $|\\psi\\rangle = \\sum_{b \\in \\{0,1\\}^n} c_b |b\\rangle$. Determine the number of non-zero coefficients $c_b$ in this expansion.", "solution": "The stabilizer state $|\\psi\\rangle$ is defined by $n$ generators:\n- $g_i = X_i$ for $i = 1, \\dots, k$,\n- $g_j = Z_j$ for $j = k+1, \\dots, n$.\n\nThe conditions $g_i |\\psi\\rangle = |\\psi\\rangle$ and $g_j |\\psi\\rangle = |\\psi\\rangle$ must hold for all $i$ and $j$.\n\nFirst, consider the generators $g_j = Z_j$ for $j = k+1, \\dots, n$. Since $Z_j |b\\rangle = (-1)^{b_j} |b\\rangle$ for a computational basis state $|b\\rangle$, the condition $Z_j |\\psi\\rangle = |\\psi\\rangle$ implies that the eigenvalue must be $+1$. Thus, $b_j = 0$ for all $j = k+1, \\dots, n$. Therefore, the last $n-k$ qubits are fixed to $|0\\rangle$.\n\nNow, the state can be written as $|\\psi\\rangle = |\\phi\\rangle \\otimes |0\\rangle^{\\otimes (n-k)}$, where $|\\phi\\rangle$ is a state on the first $k$ qubits.\n\nNext, consider the generators $g_i = X_i$ for $i = 1, \\dots, k$. The condition $X_i |\\psi\\rangle = |\\psi\\rangle$ becomes:\n\n$$\nX_i \\otimes I^{\\otimes (n-1)} \\left( |\\phi\\rangle \\otimes |0\\rangle^{\\otimes (n-k)} \\right) = |\\phi\\rangle \\otimes |0\\rangle^{\\otimes (n-k)}.\n$$\n\nSince $X_i$ acts only on the $i$-th qubit and the identity acts on the rest, and the last $n-k$ qubits are $|0\\rangle$, this simplifies to:\n\n$$\n\\left( X_i \\otimes I^{\\otimes (k-1)} \\right) |\\phi\\rangle \\otimes |0\\rangle^{\\otimes (n-k)} = |\\phi\\rangle \\otimes |0\\rangle^{\\otimes (n-k)}.\n$$\n\nThus, $|\\phi\\rangle$ must satisfy $\\left( X_i \\otimes I^{\\otimes (k-1)} \\right) |\\phi\\rangle = |\\phi\\rangle$ for each $i = 1, \\dots, k$. This means $|\\phi\\rangle$ is invariant under the application of $X_i$ for any $i$.\n\nThe state $|\\phi\\rangle$ on $k$ qubits that is invariant under $X_i$ for all $i$ is the uniform superposition:\n\n$$\n|\\phi\\rangle = \\frac{1}{\\sqrt{2^k}} \\sum_{x \\in \\{0,1\\}^k} |x\\rangle.\n$$\n\nVerification: applying $X_i$ to $|\\phi\\rangle$ flips the $i$-th bit of each basis state $|x\\rangle$, but since the sum is over all $x \\in \\{0,1\\}^k$, it remains unchanged. Thus, $X_i |\\phi\\rangle = |\\phi\\rangle$.\n\nTherefore, the full state is:\n\n$$\n|\\psi\\rangle = \\left( \\frac{1}{\\sqrt{2^k}} \\sum_{x \\in \\{0,1\\}^k} |x\\rangle \\right) \\otimes |0\\rangle^{\\otimes (n-k)} = \\frac{1}{\\sqrt{2^k}} \\sum_{x \\in \\{0,1\\}^k} |x\\rangle |0\\rangle^{\\otimes (n-k)}.\n$$\n\nIn the computational basis $\\{|b\\rangle \\mid b \\in \\{0,1\\}^n\\}$, the non-zero coefficients correspond to the basis states where the last $n-k$ bits are $0$, and the first $k$ bits are any bit string. The sum runs over all $x \\in \\{0,1\\}^k$, which has $2^k$ elements. Each basis state $|x, 0^{n-k}\\rangle$ has a non-zero coefficient of $1 / \\sqrt{2^k}$.\n\nHence, the number of non-zero coefficients $c_b$ is $2^k$.", "answer": "$$ \\boxed{2^{k}} $$", "id": "55671"}, {"introduction": "A key insight of the Gottesman-Knill theorem is that the evolution of stabilizer generators under Clifford gates can be tracked with simple linear algebra. Each Clifford gate corresponds to a binary symplectic matrix, $S$, that transforms the vector representation of a Pauli operator according to $v' = S v$. This practice problem [@problem_id:55705] asks you to derive the total symplectic matrix for a circuit, providing essential practice in composing these transformations, which is the core engine of classical simulation.", "problem": "The Gottesman-Knill theorem states that quantum circuits composed of gates from the Clifford group can be efficiently simulated on a classical computer. The simulation method is often based on the stabilizer formalism, where the evolution of an $n$-qubit state is tracked by its stabilizer group, which is a subgroup of the $n$-qubit Pauli group $P_n = \\{ \\pm 1, \\pm i \\} \\times \\{I, X, Y, Z\\}^{\\otimes n}$.\n\nThe action of a Clifford gate $U$ on a Pauli operator $P \\in P_n$ results in another Pauli operator $P' = UPU^\\dagger \\in P_n$. This transformation can be conveniently represented in a binary phase-space picture. Ignoring the overall phase, any Pauli operator can be written as $P(u) = \\bigotimes_{j=1}^n X_j^{x_j} Z_j^{z_j}$, where $u = (x_1, \\dots, x_n, z_1, \\dots, z_n)^T$ is a $2n$-dimensional binary vector. The action $P \\mapsto P'$ corresponds to a linear transformation on these vectors:\n$$ u' = S u \\pmod 2 $$\nwhere $S$ is a $2n \\times 2n$ binary matrix. For $U$ to be a valid Clifford operation, $S$ must be a symplectic matrix, satisfying the condition $S^T \\Omega S = \\Omega \\pmod 2$, where $\\Omega = \\begin{pmatrix} 0 & I_n \\\\ I_n & 0 \\end{pmatrix}$.\n\nThe two-qubit Quantum Fourier Transform (QFT) is a fundamental Clifford circuit, typically composed as $U_{QFT2} = \\text{SWAP} \\cdot (I \\otimes H) \\cdot \\text{CZ} \\cdot (H \\otimes I)$. This circuit combines several basic Clifford gates. Your task is to determine the $4 \\times 4$ binary symplectic matrix $S_{circ}$ for this circuit, which we will call $U_{circ}$:\n$$ U_{circ} = \\text{SWAP} \\cdot (I \\otimes H) \\cdot \\text{CZ} \\cdot (H \\otimes I) $$\nDetermine the matrix $S_{circ}$ that describes the action of $U_{circ}$ on the two-qubit Pauli operators. Use the basis ordering $(x_1, x_2, z_1, z_2)^T$ for the phase-space vector.", "solution": "We represent a Pauli operator by the binary vector $u=(x_1,x_2,z_1,z_2)^T$.  Conjugation by a Clifford gate $G$ induces \n$$u'\\;=\\;S_G\\,u\\pmod2,$$ \nwith $S_G$ a $4\\times4$ symplectic matrix.  \n\n1.  $(H\\otimes I)$ acts as $X_1\\!\\leftrightarrow\\!Z_1$, leaving qubit 2 fixed, so  \n$$S_{H\\otimes I}=\\begin{pmatrix}\n0&0&1&0\\\\\n0&1&0&0\\\\\n1&0&0&0\\\\\n0&0&0&1\n\\end{pmatrix}.$$  \n\n2.  $\\mathrm{CZ}$ maps \n$$X_1\\mapsto X_1Z_2,\\quad X_2\\mapsto Z_1X_2,\\quad Z_1\\mapsto Z_1,\\quad Z_2\\mapsto Z_2,$$ \ngiving  \n$$S_{\\rm CZ}=\\begin{pmatrix}\n1&0&0&0\\\\\n0&1&0&0\\\\\n0&1&1&0\\\\\n1&0&0&1\n\\end{pmatrix}.$$  \n\n3.  $(I\\otimes H)$ exchanges $X_2\\!\\leftrightarrow\\!Z_2$, so  \n$$S_{I\\otimes H}=\\begin{pmatrix}\n1&0&0&0\\\\\n0&0&0&1\\\\\n0&0&1&0\\\\\n0&1&0&0\n\\end{pmatrix}.$$  \n\n4.  $\\mathrm{SWAP}$ interchanges qubits 1 and 2:  \n$$S_{\\rm SWAP}=\\begin{pmatrix}\n0&1&0&0\\\\\n1&0&0&0\\\\\n0&0&0&1\\\\\n0&0&1&0\n\\end{pmatrix}.$$  \n\nComposing in circuit order,\n$$S_{circ}=S_{\\rm SWAP}\\,S_{I\\otimes H}\\,S_{\\rm CZ}\\,S_{H\\otimes I}.$$  \nMultiplying stepwise (all arithmetic mod 2) yields  \n$$S_{circ}=\\begin{pmatrix}\n0&0&1&1\\\\\n0&0&1&0\\\\\n0&1&0&0\\\\\n1&1&0&0\n\\end{pmatrix}.$$", "answer": "$$\\boxed{\\begin{pmatrix}\n0 & 0 & 1 & 1\\\\\n0 & 0 & 1 & 0\\\\\n0 & 1 & 0 & 0\\\\\n1 & 1 & 0 & 0\n\\end{pmatrix}}$$", "id": "55705"}, {"introduction": "The final piece of the simulation puzzle is predicting measurement outcomes. The stabilizer formalism provides an elegant way to compute outcome probabilities without ever writing down the full, and often exponentially large, state vector. This is achieved by analyzing the commutation relations between the measurement operator and the state's stabilizer generators. This practice problem [@problem_id:55644] provides a concrete scenario involving a linear cluster state, challenging you to use the algebraic properties of stabilizers to determine measurement probabilities.", "problem": "A graph state $|\\psi_G\\rangle$ is a type of multi-qubit entangled state defined by a graph $G=(V, E)$, where $V$ is a set of vertices representing qubits and $E$ is a set of edges representing connections. For each qubit $i \\in V$, we can define a Pauli operator $S_i$ as:\n$$S_i = X_i \\prod_{j \\in N(i)} Z_j$$\nwhere $X_i$ and $Z_j$ are the Pauli-X and Pauli-Z operators acting on qubits $i$ and $j$ respectively, and $N(i)$ is the set of neighboring vertices of $i$ in the graph $G$. The operators $\\{S_i\\}_{i \\in V}$ form a set of commuting generators for an abelian group $\\mathcal{S}$, known as the stabilizer group. The graph state $|\\psi_G\\rangle$ is the unique state that is a simultaneous eigenvector with eigenvalue $+1$ for all generators in $\\mathcal{S}$, i.e., $S_i |\\psi_G\\rangle = |\\psi_G\\rangle$ for all $i \\in V$.\n\nConsider a 4-qubit system, with qubits labeled $1, 2, 3, 4$. The system is prepared in a linear cluster state, which is a graph state where the graph is a line, $1-2-3-4$. The two central qubits, qubit 2 and qubit 3, are then measured in the computational basis. The computational basis states are the eigenstates of the Pauli-Z operator, with $|0\\rangle$ corresponding to eigenvalue $+1$ and $|1\\rangle$ corresponding to eigenvalue $-1$.\n\nCalculate the probability of obtaining the measurement outcome '01' on qubits $(2, 3)$, meaning qubit 2 is measured to be in state $|0\\rangle$ and qubit 3 is measured to be in state $|1\\rangle$.", "solution": "The graph state $|\\psi_G\\rangle$ for the linear cluster graph $1-2-3-4$ is stabilized by the generators:\n\n$$\nS_1 = X_1 Z_2, \\quad S_2 = Z_1 X_2 Z_3, \\quad S_3 = Z_2 X_3 Z_4, \\quad S_4 = Z_3 X_4.\n$$\n\nThe projector for measuring qubit 2 as $|0\\rangle$ (eigenvalue $+1$ for $Z_2$) and qubit 3 as $|1\\rangle$ (eigenvalue $-1$ for $Z_3$) is:\n\n$$\n\\Pi = \\frac{I + Z_2}{2} \\otimes \\frac{I - Z_3}{2} = \\frac{1}{4} (I + Z_2 - Z_3 - Z_2 Z_3).\n$$\n\nThe probability is:\n\n$$\nP(01) = \\langle \\psi_G | \\Pi | \\psi_G \\rangle = \\frac{1}{4} \\left( \\langle I \\rangle + \\langle Z_2 \\rangle - \\langle Z_3 \\rangle - \\langle Z_2 Z_3 \\rangle \\right).\n$$\n\nSince $|\\psi_G\\rangle$ is normalized, $\\langle I \\rangle = 1$. The expectation values of Pauli operators on a stabilizer state are determined by commutation with the stabilizer generators:\n- $\\langle Z_2 \\rangle$: $Z_2$ commutes with $S_1$, $S_3$, and $S_4$, but anticommutes with $S_2$ because $S_2 Z_2 = -Z_2 S_2$. Thus, $\\langle Z_2 \\rangle = 0$.\n- $\\langle Z_3 \\rangle$: $Z_3$ commutes with $S_1$, $S_2$, and $S_4$, but anticommutes with $S_3$ because $S_3 Z_3 = -Z_3 S_3$. Thus, $\\langle Z_3 \\rangle = 0$.\n- $\\langle Z_2 Z_3 \\rangle$: $Z_2 Z_3$ commutes with $S_1$ and $S_4$. It anticommutes with $S_2$ because $S_2(Z_2Z_3) = -(Z_2Z_3)S_2$. It also anticommutes with $S_3$. Since it anticommutes with at least one generator, its expectation value is 0. Thus, $\\langle Z_2 Z_3 \\rangle = 0$.\n\nSubstituting the values:\n\n$$\nP(01) = \\frac{1}{4} (1 + 0 - 0 - 0) = \\frac{1}{4}.\n$$", "answer": "$$ \\boxed{\\dfrac{1}{4}} $$", "id": "55644"}]}