{"hands_on_practices": [{"introduction": "The Iwahori-Hecke algebra is a \"quantum\" deformation of the symmetric group algebra, central to knot theory and representations of the braid group. This exercise focuses on its defining quadratic relation, which replaces the simpler relation $g_i^2=e$ and introduces a parameter $q$. By deriving the inverse of a generator, you will practice the fundamental algebraic manipulation that underpins its rich structure [@problem_id:146414].", "problem": "In theories of non-abelian anyons, the worldlines of $n$ identical particles in a 2D plane trace out braids in 2+1 dimensional spacetime. The transformations on the quantum state of the system due to these braids are described by representations of the braid group $B_n$. A closely related algebraic structure is the Iwahori-Hecke algebra $H_n(q)$, which can be thought of as a deformation of the group algebra of the symmetric group $S_n$.\n\nThe Iwahori-Hecke algebra $H_n(q)$ is an associative algebra over the field of rational functions $\\mathbb{C}(q)$, generated by elements $g_1, g_2, \\dots, g_{n-1}$ and the identity element $e$. These generators satisfy the following relations:\n1.  **Braid relations:**\n    $$\n    g_i g_j = g_j g_i \\quad \\text{for } |i - j| > 1\n    $$\n    $$\n    g_i g_{i+1} g_i = g_{i+1} g_i g_{i+1} \\quad \\text{for } 1 \\le i \\le n-2\n    $$\n2.  **Quadratic relation (skein relation):**\n    $$\n    g_i^2 = (q-1)g_i + q e\n    $$\nHere, $q$ is a non-zero complex parameter. The generators $g_i$ are invertible for $q \\neq 0$.\n\nYour task is to find the inverse, $g_i^{-1}$, of a generic generator $g_i$. Express your answer as a linear combination of $g_i$ and the identity element $e$.", "solution": "To find the inverse of the generator $g_i$, we start with the quadratic relation (skein relation):\n\n$$\ng_i^2 = (q - 1) g_i + q e\n$$\n\nWe assume that the inverse $g_i^{-1}$ can be expressed as a linear combination of $g_i$ and the identity $e$:\n\n$$\ng_i^{-1} = a g_i + b e\n$$\n\nwhere $a$ and $b$ are coefficients in $\\mathbb{C}(q)$ to be determined. The condition for the inverse is:\n\n$$\ng_i \\cdot g_i^{-1} = e\n$$\n\nSubstituting the expression for $g_i^{-1}$:\n\n$$\ng_i (a g_i + b e) = e\n$$\n\nExpanding the left-hand side:\n\n$$\na g_i^2 + b g_i = e\n$$\n\nNow substitute the quadratic relation for $g_i^2$:\n\n$$\na \\left[ (q - 1) g_i + q e \\right] + b g_i = e\n$$\n\n\n$$\na (q - 1) g_i + a q e + b g_i = e\n$$\n\n\n$$\n\\left[ a (q - 1) + b \\right] g_i + a q e = e\n$$\n\nSince $e$ is the identity element, the equation must hold for the coefficients of $g_i$ and $e$ separately. Equate coefficients:\n1. Coefficient of $g_i$:\n\n$$\na (q - 1) + b = 0\n$$\n\n2. Coefficient of $e$:\n\n$$\na q = 1\n$$\n\nSolve the system of equations. From the second equation:\n\n$$\na = \\frac{1}{q}\n$$\n\nSubstitute into the first equation:\n\n$$\n\\frac{1}{q} (q - 1) + b = 0\n$$\n\n\n$$\n\\frac{q - 1}{q} + b = 0\n$$\n\n\n$$\nb = -\\frac{q - 1}{q} = \\frac{1 - q}{q}\n$$\n\nThus, the inverse is:\n\n$$\ng_i^{-1} = \\frac{1}{q} g_i + \\frac{1 - q}{q} e\n$$\n\nTo verify, compute $g_i \\cdot g_i^{-1}$:\n\n$$\ng_i \\left( \\frac{1}{q} g_i + \\frac{1 - q}{q} e \\right) = \\frac{1}{q} g_i^2 + \\frac{1 - q}{q} g_i\n$$\n\nSubstitute $g_i^2 = (q - 1) g_i + q e$:\n\n$$\n= \\frac{1}{q} \\left[ (q - 1) g_i + q e \\right] + \\frac{1 - q}{q} g_i\n$$\n\n\n$$\n= \\frac{q - 1}{q} g_i + e + \\frac{1 - q}{q} g_i\n$$\n\n\n$$\n= \\left( \\frac{q - 1}{q} + \\frac{1 - q}{q} \\right) g_i + e\n$$\n\n\n$$\n= \\left( \\frac{q - 1 + 1 - q}{q} \\right) g_i + e\n$$\n\n\n$$\n= \\frac{0}{q} g_i + e = e\n$$\n\nThe inverse condition is satisfied. The expression for $g_i^{-1}$ is valid for $q \\neq 0$.", "answer": "$$\n\\boxed{g_i^{-1} = \\dfrac{1}{q} g_i + \\dfrac{1 - q}{q} e}\n$$", "id": "146414"}, {"introduction": "The Temperley-Lieb algebra, a quotient of the Hecke algebra, offers a powerful diagrammatic approach to braid group representations and statistical mechanics. This practice introduces its visual calculus, where algebraic operations correspond to manipulating diagrams of non-crossing strands. Calculating the trace of an element by closing loops will build your fluency in this intuitive and computationally effective language [@problem_id:145596].", "problem": "The Temperley-Lieb algebra, $TL_n(d)$, is an associative algebra defined for a positive integer $n$ and a complex parameter $d$. It can be described diagrammatically. The elements of the algebra are linear combinations of non-crossing partition diagrams on a rectangle with $n$ points on the top edge and $n$ points on the bottom edge.\n\nThe algebra is generated by elements $U_1, U_2, \\dots, U_{n-1}$. The diagram for the generator $U_i$ consists of non-crossing strands inside the rectangle connecting top points to bottom points. Specifically, for $U_i$:\n- The top points $i$ and $i+1$ are connected by an arc (a \"cup\").\n- The bottom points $i$ and $i+1$ are connected by an arc (a \"cap\").\n- All other top points $j$ (where $j \\neq i, i+1$) are connected by a straight line to the corresponding bottom point $j$.\n\nMultiplication of two diagrams $A$ and $B$ to form $AB$ is defined by placing diagram $A$ above diagram $B$ and connecting the bottom points of $A$ to the corresponding top points of $B$. Any closed loops formed in the middle region are removed, with each removed loop contributing a multiplicative factor of $d$ to the resulting diagram. The resulting diagram, which connects the top points of $A$ to the bottom points of $B$, is the product $AB$.\n\nA trace operation, $\\text{Tr}: TL_n(d) \\to \\mathbb{C}[d]$, is defined on the algebra. For any diagrammatic basis element $X \\in TL_n(d)$, its trace $\\text{Tr}(X)$ is calculated by connecting each top point $i$ to its corresponding bottom point $i$ with a new strand outside the rectangle. This procedure results in a set of disjoint closed loops. If $k$ is the number of closed loops, the trace is given by $\\text{Tr}(X) = d^k$. The trace extends linearly to all elements of the algebra.\n\nConsider the Temperley-Lieb algebra $TL_4(d)$ with generators $U_1, U_2, U_3$. Calculate the trace of the element $U_1 U_3$, expressed as a polynomial in the parameter $d$.", "solution": "To calculate the trace of $U_1 U_3$, we first need the diagram for the product element $U_1 U_3$, and then we apply the trace operation.\n\n1.  **Commutativity of Generators:** The generators $U_1$ and $U_3$ act on disjoint sets of strands (strands $\\{1,2\\}$ and strands $\\{3,4\\}$ respectively), since $|1-3| > 1$. Therefore, they commute: $U_1 U_3 = U_3 U_1$. The diagram for the product $U_1 U_3$ is a superposition of the individual diagrams for $U_1$ and $U_3$.\n    *   From $U_1$: A cup connects top points 1 and 2, and a cap connects bottom points 1 and 2.\n    *   From $U_3$: A cup connects top points 3 and 4, and a cap connects bottom points 3 and 4.\n    The resulting diagram for $U_1 U_3$ has these four arcs.\n\n2.  **Applying the Trace Operation:** The trace, $\\text{Tr}(X)$, is found by closing the diagram of $X$. This means we add strands connecting each top point $i$ to its corresponding bottom point $i$. We then count the number of resulting closed loops, $k$. The trace is $d^k$.\n\n3.  **Counting the Loops:**\n    *   **Loop 1 (Strands 1 & 2):** Let's follow a path starting at top point 1. It is connected by a cup to top point 2. The closure connects top point 2 to bottom point 2. Bottom point 2 is connected by a cap to bottom point 1. Finally, the closure connects bottom point 1 back to top point 1. This forms a single closed loop: Top 1 $\\to$ Top 2 $\\to$ Bottom 2 $\\to$ Bottom 1 $\\to$ Top 1.\n    *   **Loop 2 (Strands 3 & 4):** A similar path is formed on the other two strands. Starting at top point 3, it connects via a cup to top point 4. The closure connects top point 4 to bottom point 4. Bottom point 4 is connected via a cap to bottom point 3. Finally, the closure connects bottom point 3 back to top point 3. This forms a second closed loop: Top 3 $\\to$ Top 4 $\\to$ Bottom 4 $\\to$ Bottom 3 $\\to$ Top 3.\n\nIn total, closing the diagram of $U_1 U_3$ results in $k=2$ distinct loops.\n\nTherefore, the trace is:\n$$\n\\text{Tr}(U_1 U_3) = d^2\n$$", "answer": "$$\\boxed{d^2}$$", "id": "145596"}, {"introduction": "Cluster algebras provide a framework for studying positive Laurent polynomials and have revealed surprising connections to diverse areas of mathematics, including braid group theory. This problem explores the link between braid group words and sequences of \"mutations\" in a cluster algebra. By performing these mutations, you will gain hands-on experience with the mechanics of this modern algebraic structure and see how it relates to the combinatorial action of braids [@problem_id:145575].", "problem": "A **cluster algebra** is an algebraic structure defined by an initial \"seed\" $(x, Q)$ and a process called \"mutation\". A seed consists of a \"cluster\" $x = \\{x_1, \\dots, x_n\\}$, which is a set of commuting algebraic variables, and a \"quiver\" $Q$, which is a finite directed graph with vertices labeled $1, \\dots, n$ and no loops or 2-cycles.\n\nMutation can be applied at any vertex $k \\in \\{1, \\dots, n\\}$. This operation, denoted $\\mu_k$, transforms the seed $(x, Q)$ into a new seed $(x', Q')$. The new cluster $x'$ is given by $x' = (x \\setminus \\{x_k\\}) \\cup \\{x'_k\\}$, where the new cluster variable $x'_k$ is determined by the **exchange relation**:\n$$\nx'_k = \\frac{1}{x_k} \\left( \\prod_{i \\to k \\text{ in } Q} x_i + \\prod_{k \\to j \\text{ in } Q} x_j \\right)\n$$\nHere, the first product is over all vertices $i$ with an arrow to $k$, and the second product is over all vertices $j$ with an arrow from $k$. If there are no incoming or outgoing arrows, the corresponding product is taken to be $1$.\n\nThe new quiver $Q' = \\mu_k(Q)$ is obtained by the following three steps:\n1.  For every path of length two of the form $i \\to k \\to j$, add a new arrow $i \\to j$.\n2.  Reverse the direction of all arrows incident to vertex $k$.\n3.  Remove any 2-cycles that may have been created in the previous steps.\n\nFor cluster algebras of type $A_n$, there is a connection to the braid group $B_{n+1}$. A common convention associates a sequence of mutations to a word in the braid group generators $\\{\\sigma_1, \\dots, \\sigma_n\\}$. For this problem, we define the action of a braid word $w = \\sigma_{i_1} \\sigma_{i_2} \\dots \\sigma_{i_l}$ as the sequential application of mutations $\\mu_{i_l} \\circ \\dots \\circ \\mu_{i_2} \\circ \\mu_{i_1}$ (operators applied from right to left).\n\n**Problem:**\nConsider a cluster algebra of type $A_3$ with the initial seed $(x^{(0)}, Q^{(0)})$, where the initial cluster is $x^{(0)} = \\{x_1, x_2, x_3\\}$ and the initial quiver $Q^{(0)}$ is the linear quiver $1 \\to 2 \\to 3$.\nApply the sequence of mutations corresponding to the braid word $\\sigma_1 \\sigma_2 \\in B_3$. Following the convention mentioned, this corresponds to applying mutation $\\mu_1$ first, and then mutation $\\mu_2$.\nFind the Laurent polynomial for the cluster variable that is generated by the second mutation, $\\mu_2$. Express your answer in terms of the initial cluster variables $\\{x_1, x_2, x_3\\}$.", "solution": "The problem asks for the expression of a specific cluster variable obtained after a sequence of two mutations, starting from a type $A_3$ cluster algebra.\n\n**Step 1: Initial State**\n\nThe initial seed is $(x^{(0)}, Q^{(0)})$.\n*   Initial cluster: $x^{(0)} = \\{x_1, x_2, x_3\\}$.\n*   Initial quiver $Q^{(0)}$: A graph with vertices $\\{1, 2, 3\\}$ and directed edges $1 \\to 2$ and $2 \\to 3$.\n\n**Step 2: Apply the first mutation, $\\mu_1$**\n\nWe apply the mutation at vertex $k=1$ to the seed $(x^{(0)}, Q^{(0)})$ to get a new seed $(x^{(1)}, Q^{(1)})$.\n\n*   **Variable Mutation:** The new cluster variable, let's call it $x_4$, replaces $x_1$. We use the exchange relation:\n    $$x_4 = \\frac{1}{x_1} \\left( \\prod_{i \\to 1 \\text{ in } Q^{(0)}} x_i + \\prod_{1 \\to j \\text{ in } Q^{(0)}} x_j \\right)$$\n    In $Q^{(0)}$, there are no arrows pointing to vertex 1, so the first product is $1$. There is one arrow from vertex 1, which is $1 \\to 2$. The variable at vertex 2 is $x_2$. So, the second product is $x_2$.\n    $$x_4 = \\frac{1}{x_1} (1 + x_2) = \\frac{1+x_2}{x_1}$$\n    The new cluster is $x^{(1)} = \\{x_4, x_2, x_3\\}$, where $x_4$ is associated with vertex 1, $x_2$ with vertex 2, and $x_3$ with vertex 3.\n\n*   **Quiver Mutation:** We find the new quiver $Q^{(1)} = \\mu_1(Q^{(0)})$.\n    1.  **Add shortcuts:** There are no paths of the form $i \\to 1 \\to j$.\n    2.  **Reverse arrows at 1:** The arrow $1 \\to 2$ is reversed to become $2 \\to 1$.\n    3.  **Remove 2-cycles:** No 2-cycles were created.\n    The resulting quiver $Q^{(1)}$ has edges $2 \\to 1$ and $2 \\to 3$.\n\n**Step 3: Apply the second mutation, $\\mu_2$**\n\nWe now apply the mutation at vertex $k=2$ to the seed $(x^{(1)}, Q^{(1)})$ to obtain the final seed $(x^{(2)}, Q^{(2)})$. The problem asks for the cluster variable generated at this step.\n\n*   **Variable Mutation:** The new cluster variable, let's call it $x_5$, replaces $x_2$. We use the exchange relation on the current state:\n    $$x_5 = \\frac{1}{x_2} \\left( \\prod_{i \\to 2 \\text{ in } Q^{(1)}} x_i + \\prod_{2 \\to j \\text{ in } Q^{(1)}} x_j \\right)$$\n    In $Q^{(1)}$, there are no arrows pointing to vertex 2, so the first product is $1$. The arrows leaving vertex 2 are $2 \\to 1$ and $2 \\to 3$. The variables currently at vertices 1 and 3 are $x_4$ and $x_3$, respectively. The second product is therefore $x_4 x_3$.\n    $$x_5 = \\frac{1}{x_2} (1 + x_4 x_3)$$\n\n*   **Express in terms of initial variables:** This is the cluster variable generated by the second mutation. The final step is to express it solely in terms of the initial cluster variables $\\{x_1, x_2, x_3\\}$. We substitute the expression for $x_4$ we found in Step 2:\n    $$x_5 = \\frac{1}{x_2} \\left( 1 + \\left(\\frac{1+x_2}{x_1}\\right) x_3 \\right)$$\n    Now, we simplify the expression:\n    $$x_5 = \\frac{1}{x_2} \\left( \\frac{x_1}{x_1} + \\frac{x_3(1+x_2)}{x_1} \\right)$$\n    $$x_5 = \\frac{1}{x_2} \\left( \\frac{x_1 + x_3 + x_2 x_3}{x_1} \\right)$$\n    $$x_5 = \\frac{x_1 + x_3 + x_2 x_3}{x_1 x_2}$$\n\nThis is the Laurent polynomial for the cluster variable generated by the second mutation, $\\mu_2$.", "answer": "$$ \\boxed{\\frac{x_1 + x_3 + x_2 x_3}{x_1 x_2}} $$", "id": "145575"}]}