{"hands_on_practices": [{"introduction": "We begin with a foundational exercise to build your intuition for the $\\vec{E} \\times \\vec{B}$ drift. This problem presents a clear, hypothetical field configuration that results in a purely radial drift. By calculating the time required for a guiding center to travel between two points, you will directly apply the drift velocity formula, $\\vec{v}_E = (\\vec{E} \\times \\vec{B})/B^2$, and see how it translates into a macroscopic trajectory. [@problem_id:248592]", "problem": "A charged particle of mass $m$ and charge $q$ moves in a region of space containing both electric and magnetic fields. The magnetic field is uniform and static, directed along the z-axis, given in cylindrical coordinates $(\\rho, \\phi, z)$ by $\\vec{B} = B_0 \\hat{z}$. The electric field is static, purely azimuthal, and its magnitude varies inversely with the radial distance from the z-axis, given by $\\vec{E} = \\frac{K}{\\rho}\\hat{\\phi}$. Here, $B_0 > 0$ and $K > 0$ are positive constants. This form of the electric field is physically realizable in any region that does not enclose the z-axis.\n\nIn the guiding center approximation, the dominant motion of the particle's guiding center is the $\\vec{E} \\times \\vec{B}$ drift, described by the velocity vector $\\vec{v}_E = \\frac{\\vec{E} \\times \\vec{B}}{B^2}$. Assume that all other drifts (such as gradient, curvature, and polarization drifts) are negligible.\n\nDerive a symbolic expression for the time $T$ required for the particle's guiding center to drift from an initial radial position $\\rho_1$ to a final radial position $\\rho_2$, where $\\rho_2 > \\rho_1 > 0$.", "solution": "1. The $\\vec{E}\\times\\vec{B}$ drift velocity is given by\n$$\n\\vec{v}_E=\\frac{\\vec{E}\\times\\vec{B}}{B^2}\\,. \n$$\n2. With $\\vec{E}=\\frac{K}{\\rho}\\hat\\phi$ and $\\vec{B}=B_0\\hat z$, compute\n$$\n\\vec{E}\\times\\vec{B}\n=\\frac{K}{\\rho}\\,\\hat\\phi\\times B_0\\hat z\n=\\frac{K B_0}{\\rho}\\,\\hat\\rho\n\\quad\\Longrightarrow\\quad\n\\vec{v}_E=\\frac{K}{B_0\\,\\rho}\\,\\hat\\rho.\n$$\n3. The guiding center drifts radially outward with speed $v_\\rho=d\\rho/dt=K/(B_0\\rho)$.  Separate variables:\n$$\n\\rho\\,d\\rho=\\frac{K}{B_0}\\,dt.\n$$\n4. Integrate from $\\rho_1$ to $\\rho_2$ over time $0$ to $T$:\n$$\n\\int_{\\rho_1}^{\\rho_2}\\rho\\,d\\rho\n=\\frac{K}{B_0}\\int_0^Tdt\n\\quad\\Longrightarrow\\quad\n\\frac{1}{2}(\\rho_2^2-\\rho_1^2)=\\frac{K}{B_0}\\,T.\n$$\n5. Solve for $T$:\n$$\nT=\\frac{B_0}{2K}\\,(\\rho_2^2-\\rho_1^2).\n$$", "answer": "$$\\boxed{\\frac{B_0}{2K}(\\rho_2^2-\\rho_1^2)}$$", "id": "248592"}, {"introduction": "Moving beyond constant drifts, this next practice explores a more physically realistic scenario where a particle traverses a non-uniform electric field, a model often used for plasma sheaths or shocks. To find the particle's total transverse displacement, you must integrate its position-dependent drift velocity along its path. This requires combining the $\\vec{E} \\times \\vec{B}$ drift concept with the principle of guiding center energy conservation, a crucial skill for analyzing particle transport across boundaries in fusion and space plasmas. [@problem_id:248608]", "problem": "A particle with mass $m$ and charge $q$ moves in a region of space with a uniform, static magnetic field $\\vec{B} = B_0 \\hat{z}$ and a non-uniform, static electric potential given by $\\Phi(x) = \\Phi_0 \\tanh(x/L)$. This potential creates a localized electric field $\\vec{E} = E_x(x) \\hat{x}$ that drives an $\\vec{E}\\times\\vec{B}$ drift in the y-direction.\n\nThe motion of the particle can be described by its guiding center, whose trajectory is denoted by $\\vec{R}(t) = (X(t), Y(t), Z(t))$. We consider a guiding center that starts at $x \\to -\\infty$ with an initial velocity purely along the x-axis, $\\vec{V}_{gc, i} = V_0 \\hat{x}$. The particle has a constant magnetic moment $\\mu$. It is assumed that the initial kinetic energy is sufficient to overcome the potential barrier, i.e., $\\frac{1}{2}mV_0^2 > 2q\\Phi_0$.\n\nIn the drift approximation, which is valid when the kinetic energy of the $\\vec{E}\\times\\vec{B}$ drift is negligible compared to the guiding center's other kinetic energies, the energy of the guiding center is conserved according to the relation:\n$$W_{gc} \\approx \\frac{1}{2}m V_x^2 + \\mu B_0 + q\\Phi(x) = \\text{constant}$$\nwhere $V_x(t) = \\dot{X}(t)$ is the instantaneous velocity of the guiding center along the x-axis.\n\nDerive a closed-form expression for the total transverse displacement, $\\Delta Y$, of the guiding center after it has traveled from $x \\to -\\infty$ to $x \\to +\\infty$. Express your answer in terms of $m, q, B_0, V_0$, and $\\Phi_0$.", "solution": "We have$$\\vec{E}=-\\nabla\\Phi=-\\frac{\\Phi_0}{L}\\sech^2\\!\\bigl(\\tfrac xL\\bigr)\\,\\hat x,\\qquad\\vec{B}=B_0\\hat z$$so the $\\vec{E}\\times\\vec{B}$ drift is\n$$v_y=\\frac{E_x}{B_0}=-\\frac{\\Phi_0}{B_0L}\\sech^2\\!\\bigl(\\tfrac xL\\bigr)\\,. $$\nTotal transverse displacement is\n$$\\Delta Y=\\int_{-\\infty}^{\\infty}v_y\\,dt=\\int_{-\\infty}^{\\infty}\\frac{E_x/B_0}{V_x(x)}\\,dx\\,. $$\nFrom energy conservation \n$$\\frac12mV_x^2+q\\Phi(x)=\\frac12mV_0^2-q\\Phi_0,\\qquad\\Phi(x)=\\Phi_0\\tanh\\!\\bigl(\\tfrac xL\\bigr)$$\nwe get\n$$V_x^2=V_0^2-\\frac{2q\\Phi_0}{m}\\bigl[1+\\tanh(u)\\bigr],\\quad u=\\frac xL. $$\nThus\n$$\\Delta Y=-\\frac{\\Phi_0}{B_0}\\int_{-\\infty}^{\\infty}\\frac{\\sech^2(u)}{\\sqrt{V_0^2-A[1+\\tanh(u)]}}\\,du,\\quad A=\\frac{2q\\Phi_0}{m}. $$\nWith $s=\\tanh(u)$, $ds=\\sech^2(u)\\,du$, the limits $u=\\pm\\infty\\mapsto s=\\pm1$, so\n$$\\Delta Y=-\\frac{\\Phi_0}{B_0}\\int_{-1}^{1}\\frac{ds}{\\sqrt{B-As}},\\quad B=V_0^2-A. $$\nThe integral is elementary:\n$$\\int\\frac{ds}{\\sqrt{B-As}}=-\\frac{2}{A}\\sqrt{B-As}\\Big|_{-1}^{1}\n=\\frac{2}{A}\\bigl(\\sqrt{B+A}-\\sqrt{B-A}\\bigr).$$\nSince $B+A=V_0^2,\\;B-A=V_0^2-\\frac{4q\\Phi_0}{m},\\;A=\\frac{2q\\Phi_0}{m}$, one finds\n$$\\Delta Y=-\\frac{\\Phi_0}{B_0}\\,\\frac{2}{A}\\Bigl(V_0-\\sqrt{V_0^2-\\tfrac{4q\\Phi_0}{m}}\\Bigr)\n=-\\frac{m}{qB_0}\\Bigl(V_0-\\sqrt{V_0^2-\\tfrac{4q\\Phi_0}{m}}\\Bigr). $$\nThis is the final expression for the transverse displacement $\\Delta Y$.", "answer": "$$\\boxed{-\\frac{m}{qB_{0}}\\Bigl(V_{0}-\\sqrt{V_{0}^{2}-\\frac{4q\\Phi_{0}}{m}}\\Bigr)}$$", "id": "248608"}, {"introduction": "Our final practice is a computational problem that takes you from fundamental principles to numerical simulation. You will solve the full Lorentz force equation for a charged particle, observing its complex cycloidal motion, which is a superposition of rapid gyration and slow drift. The core task is to then filter out the fast gyromotion by calculating the guiding center's position, allowing you to isolate and measure the underlying $\\vec{E} \\times \\vec{B}$ drift and compare it with theory. This exercise not only validates the guiding center approximation but also provides hands-on experience with the numerical methods that are essential in modern plasma physics. [@problem_id:2390224]", "problem": "A non-relativistic point particle of charge $q$ and mass $m$ moves in uniform, mutually perpendicular electric and magnetic fields. Let the particle’s position be $\\mathbf{r}(t)$ in meters and its velocity be $\\mathbf{v}(t)$ in meters per second. The fundamental base is Newton’s second law and the Lorentz force law: the total force is $\\mathbf{F} = q\\left(\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}\\right)$, so the equations of motion are the coupled ordinary differential equations (ODEs): $\\dfrac{d\\mathbf{r}}{dt} = \\mathbf{v}$ and $m\\dfrac{d\\mathbf{v}}{dt} = q\\left(\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}\\right)$. Assume all fields are spatially and temporally constant and given in the International System of Units (SI).\n\nYour task is to implement and use Euler methods for solving ODEs to numerically demonstrate the existence of the $\\mathbf{E}\\times\\mathbf{B}$ drift. Specifically:\n\n1. Starting only from Newton’s second law and the Lorentz force (the fundamental base given above), derive the form of the time-continuous drift velocity that arises when a constant perpendicular electric field $\\mathbf{E}$ and magnetic field $\\mathbf{B}$ act on the particle. Explain why this drift is independent of $q$ and $m$.\n2. Derive the forward Euler method and a semi-implicit Euler variant (update velocity first, then update position using the updated velocity) for the above ODE system. You must explicitly state the update rules you will implement.\n3. For robust numerical extraction of the drift in finite time without waiting for many gyrations, use the guiding-center position to filter out the cyclotron motion and isolate the drift. Define the guiding-center coordinate\n   $$\\mathbf{R}(t) = \\mathbf{r}(t) - \\frac{m}{q\\|\\mathbf{B}\\|^2}\\,\\mathbf{v}(t) \\times \\mathbf{B},$$\n   and estimate the drift velocity as the finite-time difference quotient\n   $$\\widehat{\\mathbf{v}}_{\\text{drift}} = \\frac{\\mathbf{R}(T) - \\mathbf{R}(0)}{T}.$$\n   Explain how this follows from the continuous-time dynamics and why it removes the fast gyromotion.\n4. Implement both methods and compute, for each test case below, the Euclidean norm of the difference (in meters per second) between your numerically estimated drift velocity $\\widehat{\\mathbf{v}}_{\\text{drift}}$ and the drift velocity you derive analytically from the continuous equations in part 1. For each test case, report two floats: the error using forward Euler followed by the error using the semi-implicit Euler variant.\n\nPhysical and numerical units: All vector components for $\\mathbf{E}$ are in volts per meter, $\\mathbf{B}$ in tesla, time in seconds, $\\mathbf{r}$ in meters, $\\mathbf{v}$ in meters per second, charge $q$ in coulombs, and mass $m$ in kilograms. Express all requested error magnitudes in meters per second as floating-point numbers.\n\nTest suite and initial conditions:\n- Use initial position $\\mathbf{r}(0) = (0,0,0)$ in meters for all cases.\n- Use the following four parameter sets, covering a general case, a boundary case, an edge case with very small magnetic field, and a sign reversal of charge:\n  1. Case A (happy path): $q = 1.0\\times 10^{-15}$, $m = 1.0\\times 10^{-12}$, $\\mathbf{E} = (2.0,0.0,0.0)$, $\\mathbf{B} = (0.0,0.0,0.5)$, $T = 10.0$, $\\Delta t = 0.05$, and $\\mathbf{v}(0) = (0.0,0.0,0.0)$.\n  2. Case B (boundary, no electric field): $q = 1.0\\times 10^{-15}$, $m = 1.0\\times 10^{-12}$, $\\mathbf{E} = (0.0,0.0,0.0)$, $\\mathbf{B} = (0.0,0.0,0.5)$, $T = 1.0$, $\\Delta t = 0.1$, and $\\mathbf{v}(0) = (0.0,0.0,0.0)$.\n  3. Case C (edge, very small magnetic field): $q = 1.0\\times 10^{-15}$, $m = 1.0\\times 10^{-12}$, $\\mathbf{E} = (0.01,0.0,0.0)$, $\\mathbf{B} = (0.0,0.0,1.0\\times 10^{-4})$, $T = 50.0$, $\\Delta t = 0.5$, and $\\mathbf{v}(0) = (0.0,0.0,0.0)$.\n  4. Case D (sign reversal of charge): $q = -1.0\\times 10^{-15}$, $m = 1.0\\times 10^{-12}$, $\\mathbf{E} = (2.0,0.0,0.0)$, $\\mathbf{B} = (0.0,0.0,0.5)$, $T = 10.0$, $\\Delta t = 0.05$, and $\\mathbf{v}(0) = (0.0,0.0,0.0)$.\n\nFinal output format:\n- Your program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets.\n- The list must contain, in order, for each case, two floating-point numbers: first the forward Euler error (in meters per second), then the semi-implicit Euler error (in meters per second). For the four cases, the output must thus be $8$ numbers in total, in the order $\\left[\\text{A-FE},\\text{A-SE},\\text{B-FE},\\text{B-SE},\\text{C-FE},\\text{C-SE},\\text{D-FE},\\text{D-SE}\\right]$.", "solution": "The problem presented is valid. It is grounded in the fundamental principles of classical electrodynamics, namely the Lorentz force law and Newton's second law, and it poses a well-defined initial value problem in computational physics. All necessary parameters and conditions are provided, and there are no scientific or logical contradictions. We shall proceed with a rigorous solution.\n\nThe motion of a charged particle in crossed electric and magnetic fields is a canonical problem. The trajectory is a superposition of a uniform motion parallel to the magnetic field, a circular gyration in the plane perpendicular to the magnetic field, and a steady drift of the center of this gyration, also perpendicular to the magnetic field. Our objective is to first derive this drift velocity analytically and then to demonstrate its existence numerically using two variants of the Euler method.\n\n**1. Analytical Derivation of the Drift Velocity**\n\nThe equation of motion for a particle of charge $q$ and mass $m$ is given by a combination of Newton's second law and the Lorentz force:\n$$m\\frac{d\\mathbf{v}}{dt} = q(\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B})$$\nWe seek a solution for the velocity $\\mathbf{v}$. Let us decompose the velocity into components parallel and perpendicular to the magnetic field $\\mathbf{B}$: $\\mathbf{v} = \\mathbf{v}_{\\|} + \\mathbf{v}_{\\perp}$. The electric field is also decomposed as $\\mathbf{E} = \\mathbf{E}_{\\|} + \\mathbf{E}_{\\perp}$. The equation of motion separates into two parts:\n$$m\\frac{d\\mathbf{v}_{\\|}}{dt} = q\\mathbf{E}_{\\|}$$\n$$m\\frac{d\\mathbf{v}_{\\perp}}{dt} = q(\\mathbf{E}_{\\perp} + \\mathbf{v}_{\\perp} \\times \\mathbf{B})$$\nThe problem states that the fields are mutually perpendicular, so $\\mathbf{E} \\cdot \\mathbf{B} = 0$, which implies $\\mathbf{E}_{\\|} = 0$. Consequently, $\\frac{d\\mathbf{v}_{\\|}}{dt} = 0$, and the velocity component parallel to $\\mathbf{B}$ is constant.\n\nThe perpendicular motion is more complex. We hypothesize that the perpendicular velocity $\\mathbf{v}_{\\perp}$ can be expressed as a sum of a constant drift velocity $\\mathbf{v}_D$ and a time-varying gyration velocity $\\mathbf{u}(t)$: $\\mathbf{v}_{\\perp} = \\mathbf{v}_D + \\mathbf{u}(t)$. The drift velocity represents a steady-state solution where the net force in the perpendicular plane is, on average, zero. A specific constant velocity $\\mathbf{v}_D$ can exist for which the electric and magnetic forces perfectly balance. We find this velocity by setting the perpendicular acceleration to zero and replacing $\\mathbf{v}_{\\perp}$ with $\\mathbf{v}_D$:\n$$0 = q(\\mathbf{E}_{\\perp} + \\mathbf{v}_D \\times \\mathbf{B})$$\n$$\\mathbf{E}_{\\perp} = -(\\mathbf{v}_D \\times \\mathbf{B})$$\nTo solve for $\\mathbf{v}_D$, we take the cross product of this equation with $\\mathbf{B}$:\n$$\\mathbf{E}_{\\perp} \\times \\mathbf{B} = -(\\mathbf{v}_D \\times \\mathbf{B}) \\times \\mathbf{B}$$\nUsing the vector triple product identity $\\mathbf{A} \\times (\\mathbf{B} \\times \\mathbf{C}) = \\mathbf{B}(\\mathbf{A} \\cdot \\mathbf{C}) - \\mathbf{C}(\\mathbf{A} \\cdot \\mathbf{B})$, we get:\n$$\\mathbf{E}_{\\perp} \\times \\mathbf{B} = -[\\mathbf{B}(\\mathbf{v}_D \\cdot \\mathbf{B}) - \\mathbf{v}_D(\\mathbf{B} \\cdot \\mathbf{B})]$$\nThe drift velocity $\\mathbf{v}_D$ is a response to perpendicular forces, so it must be perpendicular to $\\mathbf{B}$, meaning $\\mathbf{v}_D \\cdot \\mathbf{B} = 0$. The equation simplifies to:\n$$\\mathbf{E}_{\\perp} \\times \\mathbf{B} = -[-\\mathbf{v}_D(\\mathbf{B} \\cdot \\mathbf{B})] = \\mathbf{v}_D \\|\\mathbf{B}\\|^2$$\nSince $\\mathbf{E}_{\\perp} = \\mathbf{E}$, we arrive at the expression for the $\\mathbf{E} \\times \\mathbf{B}$ drift velocity:\n$$\\mathbf{v}_D = \\frac{\\mathbf{E} \\times \\mathbf{B}}{\\|\\mathbf{B}\\|^2}$$\nThis derivation reveals that the drift velocity $\\mathbf{v}_D$ depends only on the electric and magnetic fields, $\\mathbf{E}$ and $\\mathbf{B}$. It is fundamentally independent of the particle's charge $q$ and mass $m$. The magnitude of the charge and mass only affect the characteristics of the superimposed gyromotion (its frequency and radius), not the velocity of the guiding center's drift. The sign of the charge $q$ reverses the direction of gyration, but the drift direction remains unchanged.\n\n**2. Derivation of Numerical Integration Schemes**\n\nThe system of equations to be solved is a set of two coupled first-order ordinary differential equations (ODEs):\n$$ \\frac{d\\mathbf{r}}{dt} = \\mathbf{v} $$\n$$ \\frac{d\\mathbf{v}}{dt} = \\frac{q}{m}(\\mathbf{E} + \\mathbf{v} \\times \\mathbf{B}) = \\mathbf{a}(\\mathbf{v}) $$\nWe discretize time with a constant step size $\\Delta t$, such that $t_n = n\\Delta t$. The state of the system at time $t_n$ is $(\\mathbf{r}_n, \\mathbf{v}_n)$.\n\nThe **Forward Euler (FE)** method is an explicit first-order method. It approximates the state at step $n+1$ using the derivative evaluated at step $n$:\n$$ \\mathbf{v}_{n+1} = \\mathbf{v}_n + \\Delta t \\cdot \\mathbf{a}(\\mathbf{v}_n) = \\mathbf{v}_n + \\Delta t \\frac{q}{m}(\\mathbf{E} + \\mathbf{v}_n \\times \\mathbf{B}) $$\n$$ \\mathbf{r}_{n+1} = \\mathbf{r}_n + \\Delta t \\cdot \\mathbf{v}_n $$\nThis method is simple but is known for its poor stability properties, especially for oscillatory systems where it artificially increases the system's energy.\n\nThe **Semi-Implicit Euler (SE)** method, also known as the Euler-Cromer method, is a variant that improves stability. As specified, we first update the velocity and then use this newly computed velocity to update the position. This introduces an element of implicitness which significantly improves energy conservation for Hamiltonian systems. The update rules are:\n$$ \\mathbf{v}_{n+1} = \\mathbf{v}_n + \\Delta t \\cdot \\mathbf{a}(\\mathbf{v}_n) = \\mathbf{v}_n + \\Delta t \\frac{q}{m}(\\mathbf{E} + \\mathbf{v}_n \\times \\mathbf{B}) $$\n$$ \\mathbf{r}_{n+1} = \\mathbf{r}_n + \\Delta t \\cdot \\mathbf{v}_{n+1} $$\nThis symplectic integrator is expected to yield a more accurate long-term trajectory for the gyrating particle compared to the forward Euler method.\n\n**3. Guiding-Center Position for Drift Estimation**\n\nThe full particle trajectory $\\mathbf{r}(t)$ is a complex cycloidal path resulting from the superposition of the fast gyromotion upon the slower guiding-center drift. To numerically extract the drift velocity, we must filter out the oscillatory gyromotion. The guiding-center position $\\mathbf{R}(t)$ represents the center of the particle's circular gyration. It is defined in the problem as:\n$$\\mathbf{R}(t) = \\mathbf{r}(t) - \\frac{m}{q\\|\\mathbf{B}\\|^2}\\,\\mathbf{v}(t) \\times \\mathbf{B}$$\nThe second term, $\\boldsymbol{\\rho}_{est}(t) = \\frac{m}{q\\|\\mathbf{B}\\|^2}\\,\\mathbf{v}(t) \\times \\mathbf{B}$, is an approximation of the gyroradius vector, which is the vector from the guiding center to the particle's position. By subtracting this term from the particle's instantaneous position $\\mathbf{r}(t)$, we obtain an estimate of the guiding center's position. This subtraction effectively removes the largest component of the oscillatory motion from the position data.\n\nThe instantaneous velocity of this estimated guiding center, $\\frac{d\\mathbf{R}}{dt}$, is not perfectly constant. It contains the true guiding-center velocity ($\\mathbf{v}_D$ in our case, since $\\mathbf{v}_{\\|}(0)=0$) plus a residual oscillatory term at the cyclotron frequency. To eliminate this residual oscillation, we average the guiding-center velocity over the total simulation time $T$. This is accomplished by computing the finite-difference quotient:\n$$\\widehat{\\mathbf{v}}_{\\text{drift}} = \\frac{\\mathbf{R}(T) - \\mathbf{R}(0)}{T}$$\nThis calculation is equivalent to $\\frac{1}{T}\\int_0^T \\frac{d\\mathbf{R}}{dt'} dt'$. Over a time $T$ that is long compared to the gyroperiod, the integral of the oscillatory part becomes negligible compared to the integral of the constant drift, yielding a numerically robust estimate of the average drift velocity. For the given initial conditions $\\mathbf{r}(0) = \\mathbf{0}$ and $\\mathbf{v}(0) = \\mathbf{0}$, the initial guiding-center position is $\\mathbf{R}(0) = \\mathbf{0}$, simplifying the estimate to $\\widehat{\\mathbf{v}}_{\\text{drift}} = \\mathbf{R}(T)/T$.\n\n**4. Computational Procedure**\n\nFor each test case, we perform the following steps:\n1.  Calculate the analytical drift velocity $\\mathbf{v}_D = \\frac{\\mathbf{E} \\times \\mathbf{B}}{\\|\\mathbf{B}\\|^2}$.\n2.  Run a simulation from $t=0$ to $t=T$ using the Forward Euler method to find the final state $(\\mathbf{r}_{FE}(T), \\mathbf{v}_{FE}(T))$.\n3.  Calculate the final guiding-center position $\\mathbf{R}_{FE}(T)$ and the numerical drift $\\widehat{\\mathbf{v}}_{\\text{drift, FE}} = (\\mathbf{R}_{FE}(T) - \\mathbf{R}(0))/T$.\n4.  Compute the error for the Forward Euler method as the Euclidean norm $E_{FE} = \\|\\widehat{\\mathbf{v}}_{\\text{drift, FE}} - \\mathbf{v}_D\\|$.\n5.  Repeat steps 2-4 using the Semi-Implicit Euler method to find $(\\mathbf{r}_{SE}(T), \\mathbf{v}_{SE}(T))$, $\\widehat{\\mathbf{v}}_{\\text{drift, SE}}$, and the corresponding error $E_{SE} = \\|\\widehat{\\mathbf{v}}_{\\text{drift, SE}} - \\mathbf{v}_D\\|$.\n6.  The pair of computed errors $(E_{FE}, E_{SE})$ constitutes the result for the test case. This procedure is repeated for all specified cases.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the error in numerically estimated E x B drift velocity\n    using Forward Euler and Semi-Implicit Euler methods.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A (happy path)\n        {\n            \"q\": 1.0e-15, \"m\": 1.0e-12, \"E\": np.array([2.0, 0.0, 0.0]),\n            \"B\": np.array([0.0, 0.0, 0.5]), \"T\": 10.0, \"dt\": 0.05,\n            \"v0\": np.array([0.0, 0.0, 0.0]), \"r0\": np.array([0.0, 0.0, 0.0])\n        },\n        # Case B (boundary, no electric field)\n        {\n            \"q\": 1.0e-15, \"m\": 1.0e-12, \"E\": np.array([0.0, 0.0, 0.0]),\n            \"B\": np.array([0.0, 0.0, 0.5]), \"T\": 1.0, \"dt\": 0.1,\n            \"v0\": np.array([0.0, 0.0, 0.0]), \"r0\": np.array([0.0, 0.0, 0.0])\n        },\n        # Case C (edge, very small magnetic field)\n        {\n            \"q\": 1.0e-15, \"m\": 1.0e-12, \"E\": np.array([0.01, 0.0, 0.0]),\n            \"B\": np.array([0.0, 0.0, 1.0e-4]), \"T\": 50.0, \"dt\": 0.5,\n            \"v0\": np.array([0.0, 0.0, 0.0]), \"r0\": np.array([0.0, 0.0, 0.0])\n        },\n        # Case D (sign reversal of charge)\n        {\n            \"q\": -1.0e-15, \"m\": 1.0e-12, \"E\": np.array([2.0, 0.0, 0.0]),\n            \"B\": np.array([0.0, 0.0, 0.5]), \"T\": 10.0, \"dt\": 0.05,\n            \"v0\": np.array([0.0, 0.0, 0.0]), \"r0\": np.array([0.0, 0.0, 0.0])\n        }\n    ]\n\n    results = []\n\n    for case in test_cases:\n        q, m, E, B = case[\"q\"], case[\"m\"], case[\"E\"], case[\"B\"]\n        T, dt, v0, r0 = case[\"T\"], case[\"dt\"], case[\"v0\"], case[\"r0\"]\n\n        B_norm_sq = np.dot(B, B)\n\n        # Calculate analytical drift velocity\n        if B_norm_sq > 0:\n            v_drift_analytical = np.cross(E, B) / B_norm_sq\n        else:\n            v_drift_analytical = np.array([0.0, 0.0, 0.0])\n            \n        num_steps = int(round(T / dt))\n\n        # --- Forward Euler Method ---\n        r = np.copy(r0)\n        v = np.copy(v0)\n        \n        for _ in range(num_steps):\n            a = (q / m) * (E + np.cross(v, B))\n            r_next = r + v * dt\n            v_next = v + a * dt\n            r, v = r_next, v_next\n        \n        r_final_fe, v_final_fe = r, v\n        \n        # --- Semi-Implicit Euler Method ---\n        r = np.copy(r0)\n        v = np.copy(v0)\n        \n        for _ in range(num_steps):\n            a = (q / m) * (E + np.cross(v, B))\n            v_next = v + a * dt\n            r_next = r + v_next * dt\n            r, v = r_next, v_next\n            \n        r_final_se, v_final_se = r, v\n\n        # --- Calculate errors ---\n        # Guiding center position R_0 at t=0 is r0 since v0 is zero\n        R0 = r0\n        \n        # Error for Forward Euler\n        if B_norm_sq > 0:\n            R_T_fe = r_final_fe - (m / (q * B_norm_sq)) * np.cross(v_final_fe, B)\n        else: # Handle B=0 case, though not in test suite\n            R_T_fe = r_final_fe\n            \n        v_drift_fe_numerical = (R_T_fe - R0) / T\n        error_fe = np.linalg.norm(v_drift_fe_numerical - v_drift_analytical)\n        results.append(error_fe)\n\n        # Error for Semi-Implicit Euler\n        if B_norm_sq > 0:\n            R_T_se = r_final_se - (m / (q * B_norm_sq)) * np.cross(v_final_se, B)\n        else: # Handle B=0 case\n            R_T_se = r_final_se\n\n        v_drift_se_numerical = (R_T_se - R0) / T\n        error_se = np.linalg.norm(v_drift_se_numerical - v_drift_analytical)\n        results.append(error_se)\n\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.12f}' for r in results)}]\")\n\nsolve()\n```", "id": "2390224"}]}