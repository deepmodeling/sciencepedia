{"hands_on_practices": [{"introduction": "The effective mass approximation is a cornerstone of semiconductor physics, transforming the complex problem of an electron in a periodic potential into a more manageable one resembling a free particle. This practice guides you through the fundamental derivation of the anisotropic effective-mass Schrödinger equation using the envelope-function formalism. By then solving this equation for an electron in a harmonic trap [@problem_id:2984374], you will gain hands-on experience in handling the anisotropic kinetic energy term and see how it governs quantum confinement.", "problem": "An electron in a crystalline solid is described by the time-independent Schrödinger equation with a periodic lattice potential $U_{\\text{lat}}(\\mathbf{r})$ and a slowly varying external potential $V_{\\text{ext}}(\\mathbf{r})$. Near a conduction-band minimum at crystal momentum $\\mathbf{k}_{0}$, the Bloch theorem implies that the eigenstates can be written as a Bloch function modulated by a slowly varying envelope function, a framework known as the envelope-function formalism (EFF). The conduction-band dispersion is anisotropic, and its curvature defines a symmetric, positive-definite effective mass tensor $M$ by\n$$\n\\left[M^{-1}\\right]_{ij} \\equiv \\frac{1}{\\hbar^{2}}\\left.\\frac{\\partial^{2} E_{c}(\\mathbf{k})}{\\partial k_{i}\\partial k_{j}}\\right|_{\\mathbf{k}_{0}} ,\n$$\nwhere $E_{c}(\\mathbf{k})$ is the conduction-band energy and $\\hbar$ is the reduced Planck constant.\n\nStarting from the Schrödinger equation in a periodic potential and using the Bloch theorem together with the assumption that $V_{\\text{ext}}(\\mathbf{r})$ varies slowly on the scale of the lattice, use the envelope-function approximation to derive the anisotropic effective-mass envelope-function equation valid to second order in the crystal momentum displacement from $\\mathbf{k}_{0}$. Assume a single conduction band dominates the dynamics and neglect interband coupling. Then, for a three-dimensional (3D) electron with a constant effective mass tensor $M$ and a harmonic confinement\n$$\nV_{\\text{ext}}(\\mathbf{r})=\\frac{1}{2}\\,\\mathbf{r}^{\\mathsf{T}}\\mathbf{K}\\,\\mathbf{r} ,\n$$\nwith $\\mathbf{K}$ a symmetric, positive-definite stiffness matrix, obtain a closed-form analytic expression for the ground-state energy measured relative to the conduction-band edge $E_{c}(\\mathbf{k}_{0})$. Your final expression must be written in terms of $\\hbar$ and the eigenvalues of the matrix $M^{-1/2} \\mathbf{K} M^{-1/2}$, and it must be a single analytic expression. No numerical approximation is required.", "solution": "The problem is divided into two parts. The first is to derive the anisotropic effective-mass envelope-function equation. The second part is to solve this equation for a specific harmonic potential to find the ground-state energy.\n\nPart 1: Derivation of the Effective-Mass Envelope-Function Equation\n\nWe begin with the time-independent Schrödinger equation for an electron in the crystal, subjected to both the periodic lattice potential $U_{\\text{lat}}(\\mathbf{r})$ and an external potential $V_{\\text{ext}}(\\mathbf{r})$:\n$$\n\\left[ -\\frac{\\hbar^2}{2m_0} \\nabla^2 + U_{\\text{lat}}(\\mathbf{r}) + V_{\\text{ext}}(\\mathbf{r}) \\right] \\Psi(\\mathbf{r}) = E \\Psi(\\mathbf{r})\n$$\nwhere $m_0$ is the free electron mass and $\\Psi(\\mathbf{r})$ is the total wavefunction.\n\nThe solutions to the problem without the external potential ($V_{\\text{ext}}(\\mathbf{r})=0$) are the Bloch functions $\\psi_{n,\\mathbf{k}}(\\mathbf{r})$, which are eigenfunctions of the periodic Hamiltonian:\n$$\n\\left[ -\\frac{\\hbar^2}{2m_0} \\nabla^2 + U_{\\text{lat}}(\\mathbf{r}) \\right] \\psi_{n,\\mathbf{k}}(\\mathbf{r}) = E_n(\\mathbf{k}) \\psi_{n,\\mathbf{k}}(\\mathbf{r})\n$$\nThe Bloch functions form a complete orthonormal basis. We can expand the total wavefunction $\\Psi(\\mathbf{r})$ in this basis. As we are interested in the dynamics dominated by a single conduction band (labeled $c$) near its minimum at $\\mathbf{k}_0$, we can write $\\Psi(\\mathbf{r})$ as a wavepacket of Bloch states from this band, peaked around $\\mathbf{k}_0$:\n$$\n\\Psi(\\mathbf{r}) = \\int d^3k \\, C(\\mathbf{k}) \\psi_{c,\\mathbf{k}}(\\mathbf{r})\n$$\nwhere the integration is over the first Brillouin zone, and the coefficient function $C(\\mathbf{k})$ is sharply peaked around $\\mathbf{k} = \\mathbf{k}_0$. Substituting this into the full Schrödinger equation gives:\n$$\n\\int d^3k \\, C(\\mathbf{k}) \\left[ E_c(\\mathbf{k}) + V_{\\text{ext}}(\\mathbf{r}) \\right] \\psi_{c,\\mathbf{k}}(\\mathbf{r}) = E \\int d^3k \\, C(\\mathbf{k}) \\psi_{c,\\mathbf{k}}(\\mathbf{r})\n$$\nThe assumption that $V_{\\text{ext}}(\\mathbf{r})$ is slowly varying means its Fourier transform $\\tilde{V}_{\\text{ext}}(\\mathbf{q})$ is significant only for small $\\mathbf{q}$. This property simplifies the matrix elements of $V_{\\text{ext}}$ between Bloch states, strongly favoring intraband transitions ($\\mathbf{k} \\approx \\mathbf{k}'$) and suppressing interband transitions. In the single-band approximation, this leads to an equation in $\\mathbf{k}$-space:\n$$\n(E_c(\\mathbf{k}) - E) C(\\mathbf{k}) + \\int d^3k' \\, \\tilde{V}_{\\text{ext}}(\\mathbf{k}-\\mathbf{k}') C(\\mathbf{k}') = 0\n$$\nwhere the convolution integral represents the action of the potential in $\\mathbf{k}$-space.\n\nWe are interested in energies near the conduction band minimum $E_c(\\mathbf{k}_0)$. We expand the dispersion relation $E_c(\\mathbf{k})$ in a Taylor series around $\\mathbf{k}_0$ up to the second order. Let $\\mathbf{q} = \\mathbf{k} - \\mathbf{k}_0$.\n$$\nE_c(\\mathbf{k}) = E_c(\\mathbf{k}_0) + \\left.\\nabla_{\\mathbf{k}}E_c\\right|_{\\mathbf{k}_0} \\cdot \\mathbf{q} + \\frac{1}{2} \\sum_{ij} \\left.\\frac{\\partial^2 E_c}{\\partial k_i \\partial k_j}\\right|_{\\mathbf{k}_0} q_i q_j + \\dots\n$$\nSince $\\mathbf{k}_0$ is a band minimum, the gradient term is zero. Using the definition of the inverse effective mass tensor $[M^{-1}]_{ij} = \\frac{1}{\\hbar^2}\\left.\\frac{\\partial^{2} E_{c}(\\mathbf{k})}{\\partial k_{i}\\partial k_{j}}\\right|_{\\mathbf{k}_{0}}$, the expansion becomes:\n$$\nE_c(\\mathbf{k}) \\approx E_c(\\mathbf{k}_0) + \\frac{\\hbar^2}{2} \\sum_{ij} q_i [M^{-1}]_{ij} q_j = E_c(\\mathbf{k}_0) + \\frac{\\hbar^2}{2}\\mathbf{q}^{\\mathsf{T}} M^{-1} \\mathbf{q}\n$$\nThe envelope function $F(\\mathbf{r})$ is defined as the Fourier transform of the coefficients $C(\\mathbf{k})$ shifted to be centered at $\\mathbf{q}=0$:\n$$\nF(\\mathbf{r}) = \\int d^3q \\, C(\\mathbf{k}_0+\\mathbf{q}) e^{i\\mathbf{q}\\cdot\\mathbf{r}}\n$$\nWe now Fourier transform the $\\mathbf{k}$-space Schrödinger equation to obtain a differential equation for $F(\\mathbf{r})$. The terms transform as follows:\n1. The energy term $E_c(\\mathbf{k}_0) C(\\mathbf{k}_0+\\mathbf{q})$ transforms to $E_c(\\mathbf{k}_0) F(\\mathbf{r})$.\n2. The kinetic energy term $\\frac{\\hbar^2}{2} (\\mathbf{q}^{\\mathsf{T}} M^{-1} \\mathbf{q}) C(\\mathbf{k}_0+\\mathbf{q})$ transforms using the property that multiplication by $q_i$ in Fourier space is equivalent to the operator $-i\\frac{\\partial}{\\partial x_i}$ in real space. Therefore, this term transforms to:\n   $$\n   \\frac{\\hbar^2}{2} \\sum_{ij} [M^{-1}]_{ij} \\left(-i\\frac{\\partial}{\\partial x_i}\\right) \\left(-i\\frac{\\partial}{\\partial x_j}\\right) F(\\mathbf{r}) = -\\frac{\\hbar^2}{2} \\sum_{ij} [M^{-1}]_{ij} \\frac{\\partial^2 F(\\mathbf{r})}{\\partial x_i \\partial x_j} = -\\frac{\\hbar^2}{2} \\nabla^{\\mathsf{T}} M^{-1} \\nabla F(\\mathbf{r})\n   $$\n3. The potential term is a convolution in $\\mathbf{k}$-space, which by the convolution theorem transforms to a product in real space: $\\int \\tilde{V}_{\\text{ext}}(\\mathbf{q}-\\mathbf{q}') C(\\mathbf{k}_0+\\mathbf{q}') d^3q'$ transforms to $V_{\\text{ext}}(\\mathbf{r})F(\\mathbf{r})$.\n4. The total energy term $E C(\\mathbf{k}_0+\\mathbf{q})$ transforms to $E F(\\mathbf{r})$.\n\nCombining these transformed terms, we obtain the effective-mass envelope-function equation in real space:\n$$\n\\left[ E_c(\\mathbf{k}_0) - \\frac{\\hbar^2}{2} \\nabla^{\\mathsf{T}} M^{-1} \\nabla + V_{\\text{ext}}(\\mathbf{r}) \\right] F(\\mathbf{r}) = E F(\\mathbf{r})\n$$\nRearranging and defining the energy relative to the band edge as $\\mathcal{E} = E - E_c(\\mathbf{k}_0)$, we arrive at the final form:\n$$\n\\left[ -\\frac{\\hbar^2}{2} \\nabla^{\\mathsf{T}} M^{-1} \\nabla + V_{\\text{ext}}(\\mathbf{r}) \\right] F(\\mathbf{r}) = \\mathcal{E} F(\\mathbf{r})\n$$\nThis is the anisotropic effective-mass equation, which concludes the first part of the problem.\n\nPart 2: Ground-State Energy for a Harmonic Potential\n\nWe now solve this equation for the specific external potential $V_{\\text{ext}}(\\mathbf{r}) = \\frac{1}{2}\\mathbf{r}^{\\mathsf{T}}\\mathbf{K}\\,\\mathbf{r}$, where $\\mathbf{K}$ is a symmetric, positive-definite stiffness matrix. The equation becomes:\n$$\n\\left[ -\\frac{\\hbar^2}{2} \\nabla^{\\mathsf{T}} M^{-1} \\nabla + \\frac{1}{2}\\mathbf{r}^{\\mathsf{T}}\\mathbf{K}\\,\\mathbf{r} \\right] F(\\mathbf{r}) = \\mathcal{E} F(\\mathbf{r})\n$$\nThis is the Schrödinger equation for a $3$D anisotropic harmonic oscillator. The problem is coupled by the off-diagonal terms in both the kinetic energy operator (from $M^{-1}$) and the potential energy operator (from $\\mathbf{K}$). To solve it, we must find a coordinate system that decouples the Hamiltonian into a sum of independent 1D harmonic oscillators.\n\nLet's perform a change of coordinates to simplify the kinetic energy term. Let $\\mathbf{r}' = M^{1/2}\\mathbf{r}$, where $M^{1/2}$ is the unique symmetric positive-definite square root of $M$. Then $\\mathbf{r} = M^{-1/2} \\mathbf{r}'$. The gradient operator transforms as $\\nabla = M^{1/2}\\nabla'$. The kinetic term becomes:\n$$\n-\\frac{\\hbar^2}{2} (M^{1/2}\\nabla')^{\\mathsf{T}} M^{-1} (M^{1/2}\\nabla') = -\\frac{\\hbar^2}{2} (\\nabla')^{\\mathsf{T}} M^{1/2} M^{-1} M^{1/2} \\nabla' = -\\frac{\\hbar^2}{2} (\\nabla')^{\\mathsf{T}} \\nabla' = -\\frac{\\hbar^2}{2} \\nabla'^2\n$$\nThe potential energy term transforms to:\n$$\n\\frac{1}{2}(M^{-1/2}\\mathbf{r}')^{\\mathsf{T}} \\mathbf{K} (M^{-1/2}\\mathbf{r}') = \\frac{1}{2} (\\mathbf{r}')^{\\mathsf{T}} (M^{-1/2} \\mathbf{K} M^{-1/2}) \\mathbf{r}'\n$$\nLet's define the matrix $A = M^{-1/2} \\mathbf{K} M^{-1/2}$. Since $M$ and $\\mathbf{K}$ are symmetric and positive-definite, $A$ is also symmetric and positive-definite. The Hamiltonian in the $\\mathbf{r}'$ coordinates is:\n$$\n\\hat{H} = -\\frac{\\hbar^2}{2} \\nabla'^2 + \\frac{1}{2} (\\mathbf{r}')^{\\mathsf{T}} A \\mathbf{r}'\n$$\nThe kinetic energy is now isotropic, but the potential is still coupled. We can decouple the potential by rotating to the principal axes of the quadratic form $(\\mathbf{r}')^{\\mathsf{T}} A \\mathbf{r}'$. Let $R$ be the orthogonal matrix ($R^{\\mathsf{T}}R=I$) whose columns are the normalized eigenvectors of $A$. Then $R^{\\mathsf{T}}AR = \\Lambda$, where $\\Lambda$ is the diagonal matrix of the eigenvalues of $A$. Let these eigenvalues be $\\lambda_1, \\lambda_2, \\lambda_3$.\nWe perform a second coordinate transformation (a rotation), $\\mathbf{r}'' = R^{\\mathsf{T}}\\mathbf{r}'$ or $\\mathbf{r}'=R\\mathbf{r}''$. The Laplacian is invariant under rotations, so $\\nabla'^2 = \\nabla''^2$. The potential energy term becomes:\n$$\n\\frac{1}{2} (\\mathbf{r}')^{\\mathsf{T}} A \\mathbf{r}' = \\frac{1}{2} (R\\mathbf{r}'')^{\\mathsf{T}} A (R\\mathbf{r}'') = \\frac{1}{2} (\\mathbf{r}'')^{\\mathsf{T}} (R^{\\mathsf{T}}AR) \\mathbf{r}'' = \\frac{1}{2} (\\mathbf{r}'')^{\\mathsf{T}} \\Lambda \\mathbf{r}'' = \\frac{1}{2} \\sum_{i=1}^3 \\lambda_i (x''_i)^2\n$$\nThe full Hamiltonian in the $\\mathbf{r}''$ coordinate system is now completely decoupled:\n$$\n\\hat{H} = \\sum_{i=1}^3 \\left( -\\frac{\\hbar^2}{2} \\frac{\\partial^2}{\\partial (x''_i)^2} + \\frac{1}{2} \\lambda_i (x''_i)^2 \\right)\n$$\nThis is the sum of three independent 1D quantum harmonic oscillators. The $i$-th oscillator has an effective mass $m_i=1$ and a spring constant $k_i=\\lambda_i$, which corresponds to an angular frequency $\\omega_i = \\sqrt{k_i/m_i} = \\sqrt{\\lambda_i}$.\n\nThe energy eigenvalues of a 1D quantum harmonic oscillator with frequency $\\omega_i$ are $E_i(n_i) = \\hbar\\omega_i(n_i + \\frac{1}{2})$, where $n_i = 0, 1, 2, \\dots$. The total energy $\\mathcal{E}$ is the sum of the energies of the three independent oscillators:\n$$\n\\mathcal{E}_{n_1,n_2,n_3} = \\sum_{i=1}^3 \\hbar\\omega_i\\left(n_i + \\frac{1}{2}\\right) = \\sum_{i=1}^3 \\hbar\\sqrt{\\lambda_i}\\left(n_i + \\frac{1}{2}\\right)\n$$\nThe problem asks for the ground-state energy, which corresponds to the case where all oscillators are in their lowest energy state, i.e., $n_1=n_2=n_3=0$.\n$$\n\\mathcal{E}_{\\text{gs}} = \\sum_{i=1}^3 \\hbar\\sqrt{\\lambda_i}\\left(0 + \\frac{1}{2}\\right) = \\frac{\\hbar}{2} \\sum_{i=1}^3 \\sqrt{\\lambda_i}\n$$\nThe values $\\lambda_i$ are the eigenvalues of the matrix $A = M^{-1/2} \\mathbf{K} M^{-1/2}$. Thus, the final expression for the ground-state energy, measured relative to the conduction-band edge, is expressed in terms of $\\hbar$ and the eigenvalues of the specified matrix, as required.", "answer": "$$\n\\boxed{\\frac{\\hbar}{2} \\sum_{i=1}^{3} \\sqrt{\\lambda_i}}\n$$", "id": "2984374"}, {"introduction": "While the parabolic band approximation is powerful, many real materials exhibit significant non-parabolicity, where the effective mass itself changes with energy. This exercise explores this crucial extension using the Kane model, a common description for narrow-gap semiconductors. By deriving the energy-dependent effective mass tensor [@problem_id:2984376], you will deepen your understanding of how band structure details beyond simple curvature affect electron dynamics.", "problem": "Consider a bulk semiconductor whose conduction band near the minimum is anisotropic and nonparabolic. In the principal-axis basis of the constant-energy ellipsoids, the dispersion is described implicitly by the Kane-type relation\n$$\\alpha E^{2} + E = \\frac{\\hbar^{2}}{2}\\,\\boldsymbol{k}^{\\mathsf{T}}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k},$$\nwhere $E$ is the electron energy measured from the band edge, $\\alpha$ is the nonparabolicity parameter, $\\hbar$ is the reduced Planck constant, $\\boldsymbol{k}$ is the crystal wave vector, and $\\mathbf{M}_{0} = \\mathrm{diag}(m_{x},m_{y},m_{z})$ is the symmetric positive-definite parabolic effective mass tensor in the principal axes. The group velocity is defined by $ \\boldsymbol{v} = \\frac{1}{\\hbar}\\nabla_{\\boldsymbol{k}} E(\\boldsymbol{k})$. Define the energy-dependent effective mass tensor $\\mathbf{M}(E)$ as the unique symmetric tensor that relates $\\boldsymbol{v}$ linearly to $\\boldsymbol{k}$ by\n$$\\boldsymbol{v} = \\hbar\\,\\mathbf{M}(E)^{-1}\\,\\boldsymbol{k}.$$\nStarting from fundamental definitions, derive a closed-form analytic expression for $\\mathbf{M}(E)$ in terms of $E$, $\\alpha$, and $\\mathbf{M}_{0}$. Express your final answer as a single analytic expression. No numerical evaluation or rounding is required.", "solution": "The objective is to derive an expression for the energy-dependent effective mass tensor $\\mathbf{M}(E)$ based on the provided definitions. The dispersion relation for an electron in the conduction band is given implicitly as:\n$$\n\\alpha E^{2} + E = \\frac{\\hbar^{2}}{2}\\,\\boldsymbol{k}^{\\mathsf{T}}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k}\n$$\nwhere $E$ is the energy, $\\alpha$ is the nonparabolicity parameter, $\\boldsymbol{k}$ is the wave vector, $\\hbar$ is the reduced Planck constant, and $\\mathbf{M}_{0}$ is the parabolic effective mass tensor at the band edge ($E=0$).\n\nThe group velocity $\\boldsymbol{v}$ of the electron is defined as:\n$$\n\\boldsymbol{v} = \\frac{1}{\\hbar}\\nabla_{\\boldsymbol{k}} E(\\boldsymbol{k})\n$$\nThe energy-dependent effective mass tensor $\\mathbf{M}(E)$ is defined through the relation:\n$$\n\\boldsymbol{v} = \\hbar\\,\\mathbf{M}(E)^{-1}\\,\\boldsymbol{k}\n$$\nOur strategy is to first compute the group velocity $\\boldsymbol{v}$ by finding the gradient of the energy, $\\nabla_{\\boldsymbol{k}} E(\\boldsymbol{k})$, from the implicit dispersion relation. We will then equate this result with the defining expression for $\\boldsymbol{v}$ involving $\\mathbf{M}(E)^{-1}$ to identify and subsequently solve for $\\mathbf{M}(E)$.\n\nTo find $\\nabla_{\\boldsymbol{k}} E$, we apply the gradient operator $\\nabla_{\\boldsymbol{k}}$ to both sides of the dispersion relation, treating $E$ as a function of $\\boldsymbol{k}$.\n$$\n\\nabla_{\\boldsymbol{k}} \\left( \\alpha E^{2} + E \\right) = \\nabla_{\\boldsymbol{k}} \\left( \\frac{\\hbar^{2}}{2}\\,\\boldsymbol{k}^{\\mathsf{T}}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k} \\right)\n$$\nUsing the chain rule on the left-hand side, we obtain:\n$$\n(2\\alpha E + 1) \\nabla_{\\boldsymbol{k}} E = \\nabla_{\\boldsymbol{k}} \\left( \\frac{\\hbar^{2}}{2}\\,\\boldsymbol{k}^{\\mathsf{T}}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k} \\right)\n$$\nThe right-hand side involves the gradient of a quadratic form. For a symmetric matrix $\\mathbf{A}$, the gradient of $\\boldsymbol{x}^{\\mathsf{T}}\\mathbf{A}\\boldsymbol{x}$ with respect to $\\boldsymbol{x}$ is $2\\mathbf{A}\\boldsymbol{x}$. The inverse of a symmetric matrix is also symmetric, thus $\\mathbf{M}_{0}^{-1}$ is symmetric. Applying this rule, we have:\n$$\n\\nabla_{\\boldsymbol{k}} \\left( \\frac{\\hbar^{2}}{2}\\,\\boldsymbol{k}^{\\mathsf{T}}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k} \\right) = \\frac{\\hbar^{2}}{2} \\left( 2\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k} \\right) = \\hbar^{2}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k}\n$$\nSubstituting this back into the equation for the gradient of $E$ gives:\n$$\n(2\\alpha E + 1) \\nabla_{\\boldsymbol{k}} E = \\hbar^{2}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k}\n$$\nWe can now solve for $\\nabla_{\\boldsymbol{k}} E$, assuming $2\\alpha E + 1 \\neq 0$. For typical semiconductors where $\\alpha  0$ and $E \\ge 0$, this condition is always met.\n$$\n\\nabla_{\\boldsymbol{k}} E = \\frac{\\hbar^{2}}{2\\alpha E + 1}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k}\n$$\nNext, we substitute this expression for the gradient into the definition of the group velocity $\\boldsymbol{v}$:\n$$\n\\boldsymbol{v} = \\frac{1}{\\hbar}\\nabla_{\\boldsymbol{k}} E = \\frac{1}{\\hbar} \\left( \\frac{\\hbar^{2}}{2\\alpha E + 1}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k} \\right) = \\frac{\\hbar}{2\\alpha E + 1}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k}\n$$\nWe now have a derived expression for $\\boldsymbol{v}$. We equate this with the definition of the energy-dependent effective mass tensor, $\\boldsymbol{v} = \\hbar\\,\\mathbf{M}(E)^{-1}\\,\\boldsymbol{k}$:\n$$\n\\hbar\\,\\mathbf{M}(E)^{-1}\\,\\boldsymbol{k} = \\frac{\\hbar}{2\\alpha E + 1}\\,\\mathbf{M}_{0}^{-1}\\,\\boldsymbol{k}\n$$\nCanceling the common factors $\\hbar$ and $\\boldsymbol{k}$ (since this relation must hold for any non-zero $\\boldsymbol{k}$), we can identify the inverse effective mass tensor $\\mathbf{M}(E)^{-1}$:\n$$\n\\mathbf{M}(E)^{-1} = \\frac{1}{2\\alpha E + 1}\\,\\mathbf{M}_{0}^{-1}\n$$\nTo find the effective mass tensor $\\mathbf{M}(E)$, we take the inverse of both sides of this equation. Using the property that $(\\lambda \\mathbf{A})^{-1} = \\lambda^{-1} \\mathbf{A}^{-1}$ for a scalar $\\lambda$ and an invertible matrix $\\mathbf{A}$, we get:\n$$\n\\mathbf{M}(E) = \\left( \\frac{1}{2\\alpha E + 1}\\,\\mathbf{M}_{0}^{-1} \\right)^{-1} = (2\\alpha E + 1) (\\mathbf{M}_{0}^{-1})^{-1}\n$$\nSince the inverse of the inverse of a matrix is the matrix itself, $(\\mathbf{M}_{0}^{-1})^{-1} = \\mathbf{M}_{0}$. This yields the final expression for the energy-dependent effective mass tensor:\n$$\n\\mathbf{M}(E) = (2\\alpha E + 1)\\mathbf{M}_{0}\n$$\nThis result demonstrates that for a Kane-type nonparabolic band, the effective mass tensor retains the same anisotropy as the parabolic tensor $\\mathbf{M}_{0}$, but its components are scaled by an energy-dependent factor $(2\\alpha E + 1)$, which captures the effect of nonparabolicity. At the band edge ($E=0$), $\\mathbf{M}(0) = \\mathbf{M}_{0}$, recovering the parabolic limit as expected.", "answer": "$$\\boxed{(1 + 2\\alpha E)\\mathbf{M}_{0}}$$", "id": "2984376"}, {"introduction": "The theoretical concepts of effective mass and band curvature are ultimately grounded in experimental and computational data. This practice bridges theory and application by tasking you with numerically extracting the effective mass tensor from a set of synthetic band structure measurements. By implementing a least-squares fitting procedure to determine the band's Hessian matrix [@problem_id:2984378], you will develop a practical skill set essential for modern computational materials science and data interpretation.", "problem": "Consider a crystalline solid with a single, non-degenerate electronic band that has a local extremum at wavevector $\\mathbf{k}_0$. Near $\\mathbf{k}_0$, the band energy $E(\\mathbf{k})$ is a smooth function of the wavevector $\\mathbf{k}$ and is well-approximated by its second-order Taylor expansion. The reduced Planck constant $\\hbar$ is treated in normalized units as $\\hbar = 1$, and all quantities are dimensionless ratios relative to the free-electron mass and a chosen energy scale. The semiclassical description of electrons in a periodic potential is taken as the fundamental base: the group velocity is $ \\mathbf{v}(\\mathbf{k}) = \\frac{1}{\\hbar} \\nabla_{\\mathbf{k}} E(\\mathbf{k})$, and the crystal momentum obeys $ \\hbar \\frac{d\\mathbf{k}}{dt} = \\mathbf{F}$ under a uniform external force $\\mathbf{F}$. The aim is to extract the tensor that encodes inertial response (the effective mass tensor) from the curvature of $E(\\mathbf{k})$ around $\\mathbf{k}_0$ without assuming a specific analytic expression for that tensor in terms of $E(\\mathbf{k})$.\n\nYour task is to write a complete, runnable program that performs the following steps for a set of synthetic test cases and produces a single-line aggregate output:\n\n- For each test case, construct a target symmetric, positive-definite effective mass tensor $\\mathbf{M}_{\\text{true}}$ in the laboratory basis using a diagonal tensor of principal values $\\mathbf{D} = \\mathrm{diag}(d_x, d_y, d_z)$ and a specified orthogonal rotation $\\mathbf{R}$, via $\\mathbf{M}_{\\text{true}} = \\mathbf{R}\\, \\mathbf{D}\\, \\mathbf{R}^\\top$. Angles used for $\\mathbf{R}$ must be interpreted in radians.\n\n- Using only the second-order Taylor expansion of $E(\\mathbf{k})$ near $\\mathbf{k}_0$, sample synthetic \"measurements\" of $E(\\mathbf{k})$ on a uniform cubic grid of offsets $\\mathbf{q} = \\mathbf{k} - \\mathbf{k}_0$ with spacing $s$ and a specified number of points $N$ along each axis. The synthetic data must be generated from a quadratic form in $\\mathbf{q}$ whose curvature is consistent with the inverse inertial response of the band at $\\mathbf{k}_0$ and may include an additive scalar offset $E_0$, which is not known a priori. Optionally include a small additive noise amplitude $\\eta$ to simulate numerical sampling uncertainty.\n\n- From the sampled $E(\\mathbf{k}_0 + \\mathbf{q})$ data, perform a least-squares fit to the most general symmetric second-order Taylor polynomial in the offsets $(q_x, q_y, q_z)$ with an unknown scalar offset. This identifies the Hessian matrix $\\mathbf{H}$ of second derivatives of $E$ at $\\mathbf{k}_0$.\n\n- From the fitted curvature, deduce the laboratory-basis effective mass tensor $\\mathbf{M}_{\\text{extr}}$ consistent with the semiclassical base. Do not assume any shortcut formulas beyond the fundamental base.\n\n- For each test case, compute the relative Frobenius-norm error $e = \\|\\mathbf{M}_{\\text{extr}} - \\mathbf{M}_{\\text{true}}\\|_F / \\|\\mathbf{M}_{\\text{true}}\\|_F$ as a floating-point number.\n\nYour program should produce a single line of output containing the errors for all test cases as a comma-separated list enclosed in square brackets (for example, \"[$e_1, e_2, e_3, e_4$]\"), with each $e_i$ computed as specified. No other text may be printed.\n\nUse the following test suite, which spans a \"happy path\" case, isotropy, rotations, and strong anisotropy. In all cases, use $\\mathbf{k}_0 = \\mathbf{0}$, $E_0 = 0$, and $\\hbar = 1$ in normalized units. Angles are in radians.\n\n- Test case $1$ (anisotropic, axis-aligned, no noise):\n  - Principal masses: $\\mathbf{D} = \\mathrm{diag}(0.2, 0.3, 0.5)$.\n  - Rotation: $\\mathbf{R} = \\mathbf{I}$.\n  - Grid: spacing $s = 0.02$, points per axis $N = 7$.\n  - Noise amplitude: $\\eta = 0$.\n\n- Test case $2$ (isotropic, axis-aligned, no noise):\n  - Principal masses: $\\mathbf{D} = \\mathrm{diag}(1.0, 1.0, 1.0)$.\n  - Rotation: $\\mathbf{R} = \\mathbf{I}$.\n  - Grid: spacing $s = 0.03$, points per axis $N = 5$.\n  - Noise amplitude: $\\eta = 0$.\n\n- Test case $3$ (anisotropic, rotated about the $z$ axis, small noise):\n  - Principal masses: $\\mathbf{D} = \\mathrm{diag}(0.1, 0.5, 0.9)$.\n  - Rotation: $\\mathbf{R} = \\mathbf{R}_z(\\theta)$ with $\\theta = \\pi/6$.\n  - Grid: spacing $s = 0.02$, points per axis $N = 7$.\n  - Noise amplitude: $\\eta = 10^{-8}$.\n\n- Test case $4$ (strongly anisotropic, composite rotation, no noise):\n  - Principal masses: $\\mathbf{D} = \\mathrm{diag}(0.05, 5.0, 50.0)$.\n  - Rotation: $\\mathbf{R} = \\mathbf{R}_z(\\pi/4)\\,\\mathbf{R}_x(\\pi/3)$.\n  - Grid: spacing $s = 0.005$, points per axis $N = 9$.\n  - Noise amplitude: $\\eta = 0$.\n\nFor each test case, your program must construct $\\mathbf{M}_{\\text{true}}$, generate the synthetic quadratic-band data with optional noise, fit the Hessian $\\mathbf{H}$, infer $\\mathbf{M}_{\\text{extr}}$ from the curvature and the semiclassical base, and report the relative Frobenius error as specified. The final output must be a single line of the form \"[$e_1, e_2, e_3, e_4$]\".", "solution": "The core of the problem lies in relating the inertial properties of a charge carrier, encapsulated by the effective mass tensor $\\mathbf{M}$, to the local geometry of its energy band $E(\\mathbf{k})$. The provided \"semiclassical base\" provides the necessary first principles for this derivation.\n\nThe fundamental principles are:\n$1$. The group velocity $\\mathbf{v}$ of an electron wavepacket is given by the gradient of the energy dispersion relation:\n$$ \\mathbf{v}(\\mathbf{k}) = \\frac{1}{\\hbar} \\nabla_{\\mathbf{k}} E(\\mathbf{k}) $$\n$2$. The crystal momentum $\\mathbf{k}$ of the electron evolves under an external force $\\mathbf{F}$ according to:\n$$ \\hbar \\frac{d\\mathbf{k}}{dt} = \\mathbf{F} $$\n$3$. The effective mass tensor $\\mathbf{M}$ is defined via the analogue of Newton's second law, relating the force to the resulting acceleration $\\mathbf{a} = d\\mathbf{v}/dt$:\n$$ \\mathbf{F} = \\mathbf{M}\\mathbf{a} $$\nOur objective is to derive an expression for $\\mathbf{M}$ in terms of the derivatives of $E(\\mathbf{k})$ using these principles.\n\nFirst, we compute the acceleration $\\mathbf{a}$ by taking the time derivative of the group velocity. Since $\\mathbf{v}$ is a function of $\\mathbf{k}$ and $\\mathbf{k}$ is a function of time $t$, we must apply the chain rule. The $i$-th component of acceleration, $a_i$, is:\n$$ a_i = \\frac{dv_i}{dt} = \\frac{d}{dt} \\left( \\frac{1}{\\hbar} \\frac{\\partial E}{\\partial k_i} \\right) = \\frac{1}{\\hbar} \\sum_{j=1}^{3} \\frac{\\partial}{\\partial k_j} \\left( \\frac{\\partial E}{\\partial k_i} \\right) \\frac{dk_j}{dt} $$\nThe term $\\frac{\\partial^2 E}{\\partial k_i \\partial k_j}$ represents the components of the Hessian matrix $\\mathbf{H}$ of the function $E(\\mathbf{k})$. Let $H_{ij} = \\frac{\\partial^2 E}{\\partial k_i \\partial k_j}$. The expression for acceleration becomes:\n$$ a_i = \\frac{1}{\\hbar} \\sum_{j=1}^{3} H_{ij} \\frac{dk_j}{dt} $$\nNext, we substitute the crystal momentum equation of motion, which gives $\\frac{dk_j}{dt} = \\frac{F_j}{\\hbar}$:\n$$ a_i = \\frac{1}{\\hbar} \\sum_{j=1}^{3} H_{ij} \\left( \\frac{F_j}{\\hbar} \\right) = \\frac{1}{\\hbar^2} \\sum_{j=1}^{3} H_{ij} F_j $$\nIn matrix-vector notation, this system of equations is written as:\n$$ \\mathbf{a} = \\frac{1}{\\hbar^2} \\mathbf{H} \\mathbf{F} $$\nTo find the effective mass tensor from its definition $\\mathbf{F} = \\mathbf{M}\\mathbf{a}$, we must express $\\mathbf{F}$ as a function of $\\mathbf{a}$. We can do this by inverting the relationship we just derived. Assuming the Hessian $\\mathbf{H}$ is invertible (which it is at a non-degenerate band extremum), we have:\n$$ \\mathbf{F} = \\hbar^2 \\mathbf{H}^{-1} \\mathbf{a} $$\nBy comparing this directly with the definition $\\mathbf{F} = \\mathbf{M}\\mathbf{a}$, we can identify the effective mass tensor:\n$$ \\mathbf{M} = \\hbar^2 \\mathbf{H}^{-1} $$\nGiven that the problem uses normalized units where $\\hbar = 1$, this relationship simplifies to the final expression used in our algorithm:\n$$ \\mathbf{M} = \\mathbf{H}^{-1} $$\nThis result shows that the effective mass tensor is the inverse of the Hessian matrix of the energy dispersion relation $E(\\mathbf{k})$.\n\nThe algorithm to solve the problem proceeds as follows:\n\nFor each test case:\n$1$. **Construct Target Tensor**: A target diagonal tensor of principal masses $\\mathbf{D} = \\mathrm{diag}(d_x, d_y, d_z)$ and a rotation matrix $\\mathbf{R}$ are used to construct the true effective mass tensor in the laboratory frame, $\\mathbf{M}_{\\text{true}} = \\mathbf{R} \\mathbf{D} \\mathbf{R}^\\top$.\n\n$2$. **Generate Synthetic Data**: Based on the derived relationship, the true Hessian is $\\mathbf{H}_{\\text{true}} = \\mathbf{M}_{\\text{true}}^{-1}$. The energy is approximated near the band extremum $\\mathbf{k}_0 = \\mathbf{0}$ by its second-order Taylor expansion. Since $\\mathbf{k}_0$ is an extremum, the gradient term is zero, and the energy relative to the band edge energy $E_0$ is a quadratic form in the wavevector offset $\\mathbf{q} = \\mathbf{k} - \\mathbf{k}_0$:\n$$ E(\\mathbf{q}) - E_0 = \\frac{1}{2} \\mathbf{q}^\\top \\mathbf{H}_{\\text{true}} \\mathbf{q} $$\nSynthetic energy values are generated by evaluating this expression on a uniform cubic grid of $\\mathbf{q}$ vectors with spacing $s$ and $N$ points per axis. A small amount of noise with amplitude $\\eta$ is added to simulate measurement uncertainty.\n\n$3$. **Extract Curvature via Least-Squares Fit**: To extract the Hessian from the synthetic data, we fit the data to the most general symmetric second-order polynomial in the components of $\\mathbf{q} = (q_x, q_y, q_z)$:\n$$ E_{\\text{fit}}(q_x, q_y, q_z) = c_0 + c_x q_x + c_y q_y + c_z q_z + c_{xx} q_x^2 + c_{yy} q_y^2 + c_{zz} q_z^2 + c_{xy} q_x q_y + c_{xz} q_x q_z + c_{yz} q_y q_z $$\nThis is a linear least-squares problem, which can be expressed as $\\mathbf{A}\\mathbf{c} = \\mathbf{E}_{\\text{data}}$, where $\\mathbf{c}$ is the vector of the $10$ unknown coefficients, $\\mathbf{E}_{\\text{data}}$ is the vector of synthetic energy values, and $\\mathbf{A}$ is the design matrix whose columns are the polynomial basis functions ($1, q_x, q_y, q_z, q_x^2, \\dots$) evaluated at each grid point. The coefficients $\\mathbf{c}$ are found using `numpy.linalg.lstsq`.\n\n$4$. **Reconstruct Tensors**: By comparing the fitted polynomial with the Taylor expansion $E(\\mathbf{q}) \\approx E_0 + \\nabla E \\cdot \\mathbf{q} + \\frac{1}{2}\\mathbf{q}^\\top \\mathbf{H} \\mathbf{q}$, we can construct the extracted Hessian, $\\mathbf{H}_{\\text{extr}}$, from the quadratic coefficients:\n$$ \\mathbf{H}_{\\text{extr}} = \\begin{pmatrix} 2c_{xx}  c_{xy}  c_{xz} \\\\ c_{xy}  2c_{yy}  c_{yz} \\\\ c_{xz}  c_{yz}  2c_{zz} \\end{pmatrix} $$\nThe extracted effective mass tensor is then found by inverting this Hessian: $\\mathbf{M}_{\\text{extr}} = \\mathbf{H}_{\\text{extr}}^{-1}$.\n\n$5$. **Calculate Error**: The accuracy of the procedure is quantified by the relative Frobenius-norm error between the extracted and true mass tensors:\n$$ e = \\frac{\\|\\mathbf{M}_{\\text{extr}} - \\mathbf{M}_{\\text{true}}\\|_F}{\\|\\mathbf{M}_{\\text{true}}\\|_F} $$\nThis process is repeated for all test cases, and the resulting errors are reported.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the effective mass tensor from synthetic band structure data\n    and computes the relative error for a suite of test cases.\n    \"\"\"\n\n    # Test cases defined in the problem statement.\n    # Format: (principal_masses, rotation_definition, grid_spacing, grid_points_per_axis, noise_amplitude)\n    # Rotation definition can be 'I' for identity, ('z', angle) for R_z, or a list of tuples for composite rotations.\n    test_cases = [\n        # Test case 1\n        ([0.2, 0.3, 0.5], 'I', 0.02, 7, 0.0),\n        # Test case 2\n        ([1.0, 1.0, 1.0], 'I', 0.03, 5, 0.0),\n        # Test case 3\n        ([0.1, 0.5, 0.9], ('z', np.pi / 6), 0.02, 7, 1e-8),\n        # Test case 4\n        ([0.05, 5.0, 50.0], [('z', np.pi / 4), ('x', np.pi / 3)], 0.005, 9, 0.0)\n    ]\n\n    results = []\n\n    for d_vals, rot_def, s, N, eta in test_cases:\n        # 1. Construct the true effective mass tensor M_true\n        D_true = np.diag(d_vals)\n\n        if rot_def == 'I':\n            R = np.identity(3)\n        else:\n            if isinstance(rot_def, tuple):\n                rotations = [rot_def]\n            else: # list of tuples for composite rotation\n                rotations = rot_def\n            \n            R = np.identity(3)\n            # The matrix product Rz*Rx applies Rx first, then Rz.\n            # To build this matrix, we must multiply in the order R = Rz @ Rx.\n            # The loop below calculates R_new = R_next @ R_old.\n            # By reversing the list, we get R = Rz @ Rx, as required.\n            for axis, angle in reversed(rotations):\n                c, s_val = np.cos(angle), np.sin(angle)\n                if axis == 'z':\n                    R_mat = np.array([[c, -s_val, 0], [s_val, c, 0], [0, 0, 1]])\n                elif axis == 'x':\n                    R_mat = np.array([[1, 0, 0], [0, c, -s_val], [0, s_val, c]])\n                else: \n                    R_mat = np.identity(3)\n                R = R_mat @ R\n\n        M_true = R @ D_true @ R.T\n\n        # 2. Generate synthetic energy data\n        # M = H^-1 -> H = M^-1 (with hbar=1)\n        H_true = np.linalg.inv(M_true)\n\n        # Create a uniform cubic grid of q = k - k0 vectors (with k0=0)\n        grid_coords_1d = np.linspace(-(N - 1) / 2, (N - 1) / 2, N) * s\n        qx, qy, qz = np.meshgrid(grid_coords_1d, grid_coords_1d, grid_coords_1d, indexing='ij')\n        \n        q_vectors = np.stack([qx.ravel(), qy.ravel(), qz.ravel()], axis=1)\n\n        # Calculate energies: E(q) = 1/2 * q^T * H * q\n        # This can be vectorized as 0.5 * sum((q @ H) * q, axis=1)\n        energies = 0.5 * np.sum((q_vectors @ H_true.T) * q_vectors, axis=1)\n\n        # Add optional noise\n        if eta > 0:\n            noise = np.random.uniform(-eta, eta, size=energies.shape)\n            energies += noise\n\n        # 3. Perform a least-squares fit to find the Hessian\n        # Model: E = c0 + c1*qx + c2*qy + ... + c_xx*qx^2 + ... + c_xy*qx*qy + ...\n        # Basis functions: 1, qx, qy, qz, qx^2, qy^2, qz^2, qx*qy, qx*qz, qy*qz\n        q_x, q_y, q_z = q_vectors[:, 0], q_vectors[:, 1], q_vectors[:, 2]\n        A = np.stack([\n            np.ones_like(q_x),\n            q_x, q_y, q_z,\n            q_x**2, q_y**2, q_z**2,\n            q_x*q_y, q_x*q_z, q_y*q_z\n        ], axis=1)\n\n        # Solve the linear system Ac = E for coefficients c\n        coeffs, _, _, _ = np.linalg.lstsq(A, energies, rcond=None)\n        \n        # Extract quadratic coefficients\n        c_xx, c_yy, c_zz = coeffs[4], coeffs[5], coeffs[6]\n        c_xy, c_xz, c_yz = coeffs[7], coeffs[8], coeffs[9]\n\n        # 4. From fitted coefficients, deduce the Hessian and then M_extr\n        # H_ij = d^2E / dqi dqi. From fit, c_xx = 0.5*H_11, c_xy = H_12, etc.\n        H_extr = np.array([\n            [2 * c_xx, c_xy,     c_xz],\n            [c_xy,     2 * c_yy, c_yz],\n            [c_xz,     c_yz,     2 * c_zz]\n        ])\n        \n        M_extr = np.linalg.inv(H_extr)\n\n        # 5. Compute the relative Frobenius-norm error\n        error_num = np.linalg.norm(M_extr - M_true, 'fro')\n        error_den = np.linalg.norm(M_true, 'fro')\n        \n        # Avoid division by zero, though not expected for this problem\n        relative_error = error_num / error_den if error_den > 0 else 0.0\n        results.append(relative_error)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.12g}' for r in results)}]\")\n\nsolve()\n```", "id": "2984378"}]}