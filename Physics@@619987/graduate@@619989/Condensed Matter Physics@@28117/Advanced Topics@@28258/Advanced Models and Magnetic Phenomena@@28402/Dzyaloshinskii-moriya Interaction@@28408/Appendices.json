{"hands_on_practices": [{"introduction": "The Dzyaloshinskii-Moriya interaction (DMI) introduces an antisymmetric exchange that favors a perpendicular alignment, or canting, of adjacent spins. This exercise provides a foundational understanding of this twisting mechanism in a simplified one-dimensional system, isolating the DMI's effect and allowing for a direct calculation of the resulting helical structure. By anchoring one end of the chain, you can see how this local twist accumulates into a global spiral. [@problem_id:1129721]", "problem": "Consider a one-dimensional chain of $N$ classical spins, $\\mathbf{S}_1, \\mathbf{S}_2, \\ldots, \\mathbf{S}_N$. The spins are treated as classical vectors of fixed magnitude $S$, and they are constrained to lie in the $xy$-plane. An individual spin $\\mathbf{S}_i$ can thus be described by a single angle $\\phi_i$ as $\\mathbf{S}_i = S(\\cos\\phi_i, \\sin\\phi_i, 0)$.\n\nThe interactions in the chain are described by the following Hamiltonian:\n$$H = H_{\\text{Heis}} + H_{\\text{DM}} + H_{\\text{an}}$$\nwhere:\n1.  $H_{\\text{Heis}}$ is the ferromagnetic Heisenberg interaction between nearest neighbors:\n    $$H_{\\text{Heis}} = -J \\sum_{i=1}^{N-1} \\mathbf{S}_i \\cdot \\mathbf{S}_{i+1}, \\quad \\text{with } J > 0$$\n2.  $H_{\\text{DM}}$ is the Dzyaloshinskii-Moriya (DM) interaction between nearest neighbors. The DM vector $\\mathbf{D}$ is uniform and points along the $z$-axis:\n    $$H_{\\text{DM}} = \\sum_{i=1}^{N-1} \\mathbf{D} \\cdot (\\mathbf{S}_i \\times \\mathbf{S}_{i+1}), \\quad \\text{with } \\mathbf{D} = D\\hat{z} \\text{ and } D > 0$$\n3.  $H_{\\text{an}}$ is a single-ion easy-axis anisotropy term that acts only on the first spin ($i=1$) of the chain. This term favors aligning the first spin along the $x$-axis:\n    $$H_{\\text{an}} = -K (\\mathbf{S}_1 \\cdot \\hat{x})^2, \\quad \\text{with } K > 0$$\n\nAssuming the system settles into its classical ground state, find the angle $\\phi_N$ of the last spin in the chain. Your answer should be expressed in terms of the parameters $J$, $D$, and $N$. To ensure a unique answer, provide the value of $\\phi_N$ in the range $(-\\pi(N-1), \\pi(N-1)]$.", "solution": "The total energy per nearest-neighbor bond (i,i+1) is\n$$E_{\\text{bond}}=-J\\,S^2\\cos(\\phi_{i+1}-\\phi_i)+D\\,S^2\\sin(\\phi_{i+1}-\\phi_i)\\,. $$\n1.  Introduce $\\Delta=\\phi_{i+1}-\\phi_i$ and minimize:\n$$\\frac{dE_{\\text{bond}}}{d\\Delta}\n=J\\,S^2\\sin\\Delta+D\\,S^2\\cos\\Delta=0\n\\quad\\Longrightarrow\\quad\n\\tan\\Delta=-\\frac{D}{J}\\,. $$\nHence the ground-state twist is\n$$\\Delta=-\\arctan\\!\\frac{D}{J}\\quad(\\text{mod }\\pi)\\,. $$\n2.  The easy-axis anisotropy on spin 1,\n$$H_{\\text{an}}=-K\\,S^2\\cos^2\\phi_1,$$\nis minimized by $\\phi_1=0$ (or $\\pi$). We choose $\\phi_1=0$.\n3.  The spins form a uniform spiral:\n$$\\phi_N=\\phi_1+(N-1)\\Delta=-(N-1)\\arctan\\!\\frac{D}{J}\\,. $$", "answer": "$$\\boxed{-(N-1)\\arctan\\frac{D}{J}}$$", "id": "1129721"}, {"introduction": "In realistic materials, the DMI coexists and competes with other magnetic interactions, such as magnetic anisotropy. This practice explores such a competition in a simple two-spin system, or dimer, where the DMI favors a canted state while an easy-axis anisotropy favors a collinear antiferromagnetic alignment. You will determine the critical DMI strength $D_c$ that overcomes the anisotropy, driving a first-order phase transition known as a spin-flop. [@problem_id:1129726]", "problem": "Consider a classical magnetic dimer consisting of two spins, $\\vec{S}_1$ and $\\vec{S}_2$, of fixed magnitude $S$. The interaction between the spins is described by an XXZ model with an easy-axis anisotropy and a Dzyaloshinskii-Moriya (DM) interaction. The total energy of the system is given by the Hamiltonian:\n\n$$ H = J(S_{1x}S_{2x} + S_{1y}S_{2y} + \\Delta S_{1z}S_{2z}) + \\vec{D} \\cdot (\\vec{S}_1 \\times \\vec{S}_2) $$\n\nHere, $J > 0$ is the antiferromagnetic exchange coupling, and $\\Delta > 1$ is the easy-axis anisotropy parameter, which favors spin alignment along the $z$-axis. The Dzyaloshinskii-Moriya vector is directed along the easy axis, $\\vec{D} = D\\hat{z}$.\n\nFor a weak DM interaction ($D$ is small), the ground state is an antiferromagnetic configuration with spins aligned along the $z$-axis. As the strength of the DM interaction $D$ increases, it can induce a first-order phase transition, known as a spin-flop transition, to a new ground state where the spins are primarily oriented in the $xy$-plane.\n\nDetermine the critical Dzyaloshinskii-Moriya strength, expressed as the dimensionless ratio $D_c/J$, at which this spin-flop transition occurs. Your answer should be in terms of the anisotropy parameter $\\Delta$.", "solution": "The Hamiltonian for the system is given by:\n\n$$ H = J(S_{1x}S_{2x} + S_{1y}S_{2y} + \\Delta S_{1z}S_{2z}) + \\vec{D} \\cdot (\\vec{S}_1 \\times \\vec{S}_2) $$\n\nwith $\\vec{D} = D\\hat{z}$, so the DM interaction term is $D (\\vec{S}_1 \\times \\vec{S}_2)_z = D (S_{1x}S_{2y} - S_{1y}S_{2x})$.\n\nThe ground state for weak $D$ is antiferromagnetic along the $z$-axis:\n\n$$ \\vec{S}_1 = (0, 0, S), \\quad \\vec{S}_2 = (0, 0, -S) $$\n\nwith energy:\n\n$$ E_{\\text{AF}} = J[\\Delta (S)(-S)] = -J \\Delta S^2 $$\n\n\nFor the spin-flop state, consider a symmetric configuration in the $xz$-plane with a relative angle $\\beta$ in the $xy$-components:\n\n$$ \\vec{S}_1 = (S \\sin\\theta, 0, S \\cos\\theta), \\quad \\vec{S}_2 = (-S \\sin\\theta \\cos\\beta, -S \\sin\\theta \\sin\\beta, -S \\cos\\theta) $$\n\nThe Hamiltonian becomes:\n\n$$ H = J[S_{1x}S_{2x} + S_{1y}S_{2y} + \\Delta S_{1z}S_{2z}] + D (S_{1x}S_{2y} - S_{1y}S_{2x}) $$\n\nSubstituting the spin components:\n\n$$ S_{1x}S_{2x} = (S \\sin\\theta)(-S \\sin\\theta \\cos\\beta) = -S^2 \\sin^2\\theta \\cos\\beta $$\n\n\n$$ S_{1y}S_{2y} = (0)(-S \\sin\\theta \\sin\\beta) = 0 $$\n\n\n$$ S_{1z}S_{2z} = (S \\cos\\theta)(-S \\cos\\theta) = -S^2 \\cos^2\\theta $$\n\n\n$$ S_{1x}S_{2y} - S_{1y}S_{2x} = (S \\sin\\theta)(-S \\sin\\theta \\sin\\beta) - (0)(-S \\sin\\theta \\cos\\beta) = -S^2 \\sin^2\\theta \\sin\\beta $$\n\nThus:\n\n$$ H = J[-S^2 \\sin^2\\theta \\cos\\beta - \\Delta S^2 \\cos^2\\theta] + D[-S^2 \\sin^2\\theta \\sin\\beta] = S^2 \\left[ -J \\sin^2\\theta \\cos\\beta - J \\Delta \\cos^2\\theta - D \\sin^2\\theta \\sin\\beta \\right] $$\n\n\nFor fixed $\\theta$, minimize the expression in $\\beta$. Define:\n\n$$ f(\\beta) = -J \\sin^2\\theta \\cos\\beta - D \\sin^2\\theta \\sin\\beta = -\\sin^2\\theta (J \\cos\\beta + D \\sin\\beta) $$\n\nThe minimum occurs when $g(\\beta) = J \\cos\\beta + D \\sin\\beta$ is maximized. The maximum of $g(\\beta)$ is $\\sqrt{J^2 + D^2}$, so:\n\n$$ \\min_\\beta f(\\beta) = -\\sin^2\\theta \\sqrt{J^2 + D^2} $$\n\nThe energy is then:\n\n$$ H = S^2 \\left[ -J \\Delta \\cos^2\\theta - \\sin^2\\theta \\sqrt{J^2 + D^2} \\right] $$\n\n\nMinimize the energy with respect to $\\theta$. Let $A = J \\Delta$ and $B = \\sqrt{J^2 + D^2}$, so:\n\n$$ E(\\theta) = -A \\cos^2\\theta - B \\sin^2\\theta $$\n\nThe derivative is:\n\n$$ \\frac{dE}{d\\theta} = 2A \\cos\\theta \\sin\\theta - 2B \\sin\\theta \\cos\\theta = 2 \\sin\\theta \\cos\\theta (A - B) $$\n\nSet to zero:\n\n$$ 2 \\sin\\theta \\cos\\theta (A - B) = 0 $$\n\nSolutions are $\\sin\\theta = 0$ ($\\theta = 0, \\pi$) or $\\cos\\theta = 0$ ($\\theta = \\pi/2, 3\\pi/2$).\n\nThe energies at these points are:\n- For $\\theta = 0$: $E_0 = -A S^2 = -J \\Delta S^2$,\n- For $\\theta = \\pi/2$: $E_{\\pi/2} = -B S^2 = -\\sqrt{J^2 + D^2} S^2$.\n\nThe spin-flop transition occurs when these energies are equal:\n\n$$ -J \\Delta S^2 = -\\sqrt{J^2 + D^2} S^2 $$\n\n\n$$ J \\Delta = \\sqrt{J^2 + D^2} $$\n\nSquaring both sides:\n\n$$ (J \\Delta)^2 = J^2 + D^2 $$\n\n\n$$ D^2 = J^2 \\Delta^2 - J^2 = J^2 (\\Delta^2 - 1) $$\n\n\n$$ D = J \\sqrt{\\Delta^2 - 1} $$\n\nThus, the critical dimensionless ratio is:\n\n$$ \\frac{D_c}{J} = \\sqrt{\\Delta^2 - 1} $$\n\n\nFor $D  D_c$, the antiferromagnetic state ($\\theta = 0$) has lower energy, and for $D > D_c$, the spin-flop state ($\\theta = \\pi/2$) has lower energy, confirming the first-order transition.", "answer": "$$ \\boxed{\\sqrt{\\Delta^2 - 1}} $$", "id": "1129726"}, {"introduction": "Beyond analytical models, understanding DMI in modern materials, particularly at interfaces, requires computational approaches. This advanced exercise guides you through the process of deriving the form of interfacial DMI from fundamental symmetry arguments and then translating that continuum theory into a concrete finite-difference numerical simulation. This practice is crucial for developing skills in modeling spintronic devices and verifying the correspondence between theoretical Hamiltonians and their behavior in discrete numerical codes. [@problem_id:2984011]", "problem": "Consider a classical unit-length magnetization field $\\mathbf{m}(x,y) = \\big(m_x(x,y), m_y(x,y), m_z(x,y)\\big)$ confined to a two-dimensional interface lying in the $xy$-plane, with structural inversion symmetry broken along the interface normal $\\hat{\\mathbf{z}}$. In this setting, the interfacial Dzyaloshinskii–Moriya interaction (DMI) energy density must be linear in spatial derivatives of $\\mathbf{m}$ and odd under inversion, and it must respect in-plane rotational symmetry about $\\hat{\\mathbf{z}}$. These constraints imply that the building blocks are the Lifshitz invariants $L_{ij}^{(k)} = m_i \\,\\partial_k m_j - m_j \\,\\partial_k m_i$, with $i,j \\in \\{x,y,z\\}$ and $k \\in \\{x,y\\}$.\n\nTask A (continuum form from first principles): Starting from the symmetry constraints above and the definition of the Lifshitz invariants, derive the continuum interfacial Dzyaloshinskii–Moriya interaction energy density $w_{\\mathrm{DM}}(\\mathbf{r})$ that is allowed for a flat interface with continuous rotational symmetry in the plane. Clearly state the resulting expression for $w_{\\mathrm{DM}}(\\mathbf{r})$ in terms of $m_x$, $m_y$, $m_z$, and their first-order derivatives $\\partial_x$ and $\\partial_y$, and then write the total continuum energy $E_{\\mathrm{cont}} = \\int_{\\Omega} w_{\\mathrm{DM}}(\\mathbf{r}) \\, d^2 r$ over a rectangular domain $\\Omega$ with periodic boundary conditions.\n\nTask B (finite-difference discretization): On a square grid with $N_x \\times N_y$ points, spacings $a_x = L_x/N_x$ and $a_y = L_y/N_y$, and periodic boundary conditions in both $x$ and $y$, construct a second-order accurate finite-difference approximation $E_{\\mathrm{FD}}$ to the total interfacial Dzyaloshinskii–Moriya interaction energy. Your discretization must:\n- Use the central-difference stencil for first derivatives, namely $\\partial_x f(x_i,y_j) \\approx \\big(f(x_{i+1},y_j)-f(x_{i-1},y_j)\\big)/(2 a_x)$ and $\\partial_y f(x_i,y_j) \\approx \\big(f(x_i,y_{j+1})-f(x_i,y_{j-1})\\big)/(2 a_y)$ with periodic wrapping of indices.\n- Approximate the integral by a Riemann sum with area element $a_x a_y$.\n- Be consistent with the continuum expression obtained in Task A.\n\nTask C (long-wavelength convergence verification): Consider the following two smooth, exactly unit-length test magnetization fields, parameterized by a scalar phase $\\theta(x,y)$:\n- Type X: $\\mathbf{m}(x,y) = \\big(\\cos \\theta(x,y),\\, 0,\\, \\sin \\theta(x,y)\\big)$.\n- Type Y: $\\mathbf{m}(x,y) = \\big(0,\\, \\cos \\theta(x,y),\\, \\sin \\theta(x,y)\\big)$.\nFor each type, take $\\theta(x,y) = k_x x + k_y y$ with integers $k_x, k_y$, so that the field is periodic on the domain.\n\nUsing the continuum expression from Task A, derive the exact continuum energy $E_{\\mathrm{cont}}$ for both Type X and Type Y fields in terms of $k_x$, $k_y$, the interfacial Dzyaloshinskii–Moriya interaction strength $D$, and the domain sizes $L_x$ and $L_y$. Then implement and evaluate your finite-difference expression $E_{\\mathrm{FD}}$ on uniform grids to verify its convergence to $E_{\\mathrm{cont}}$ in the long-wavelength limit (small $|k_x| a_x$ and $|k_y| a_y$). Quantitatively report, for each test case below, either the relative error $|E_{\\mathrm{FD}}-E_{\\mathrm{cont}}|/|E_{\\mathrm{cont}}|$ when $|E_{\\mathrm{cont}}| \\neq 0$, or the absolute error $|E_{\\mathrm{FD}}|$ when $E_{\\mathrm{cont}}=0$.\n\nUse dimensionless units throughout, set $L_x = L_y = 2\\pi$, and $D = 1$. Angles and wave numbers must be treated in radians. Assume periodic boundary conditions in both directions.\n\nTest suite (each tuple is of the form $(\\text{type}, k_x, k_y, N)$ with $N_x=N_y=N$):\n- Case $1$: $(\\text{\"X\"},\\, 1,\\, 0,\\, 32)$.\n- Case $2$: $(\\text{\"X\"},\\, 1,\\, 0,\\, 128)$.\n- Case $3$: $(\\text{\"Y\"},\\, 0,\\, 1,\\, 64)$.\n- Case $4$: $(\\text{\"X\"},\\, 0,\\, 0,\\, 64)$.\n- Case $5$: $(\\text{\"X\"},\\, 16,\\, 0,\\, 64)$.\n\nFinal output format: Your program should produce a single line of output containing a Python-style list of floating-point numbers representing the error metric for Cases $1$ through $5$ in order, as a comma-separated list enclosed in square brackets (for example, $[e_1,e_2,e_3,e_4,e_5]$).", "solution": "The problem is found to be valid as it is scientifically grounded in the principles of magnetism and symmetry, is well-posed with a clear objective, and provides all necessary information for a complete solution.\n\n### Task A: Continuum Dzyaloshinskii-Moriya Interaction Energy\n\nThe system is a two-dimensional magnetic interface in the $xy$-plane. The structural inversion symmetry is broken along the $\\hat{\\mathbf{z}}$ direction, but the system retains continuous rotational symmetry in the $xy$-plane (about the $\\hat{\\mathbf{z}}$ axis). The Dzyaloshinskii-Moriya interaction (DMI) energy density, $w_{\\mathrm{DM}}$, must be a scalar, linear in the first spatial derivatives of the magnetization $\\mathbf{m}$, and odd under the inversion operation $\\mathcal{I}: \\mathbf{r} \\to -\\mathbf{r}$.\n\nThe magnetization $\\mathbf{m}$ is a pseudovector, meaning it is invariant under inversion: $\\mathbf{m}(\\mathbf{r}) \\xrightarrow{\\mathcal{I}} \\mathbf{m}(-\\mathbf{r})$. The spatial derivative operator $\\nabla$ is a polar vector, so it is odd under inversion: $\\nabla \\to -\\nabla$.\nThe problem provides the Lifshitz invariants, $L_{ij}^{(k)} = m_i \\,\\partial_k m_j - m_j \\,\\partial_k m_i$, as the building blocks. Let us analyze their transformation under inversion:\n$$L_{ij}^{(k)} \\xrightarrow{\\mathcal{I}} m_i (-\\partial_k m_j) - m_j (-\\partial_k m_i) = -L_{ij}^{(k)}$$\nThe Lifshitz invariants are pseudoscalars, i.e., they are odd under inversion. Thus, any linear combination of them will also be odd under inversion, satisfying one of the constraints.\n\nThe second constraint is that $w_{\\mathrm{DM}}$ must be a scalar under continuous rotations about the $\\hat{\\mathbf{z}}$ axis. This means we must find a linear combination of the allowed Lifshitz invariants (with $k \\in \\{x,y\\}$) that is invariant under such rotations. The general form is $w_{\\mathrm{DM}} = \\sum_{i,j,k} c_{ijk} L_{ij}^{(k)}$. The coefficients $c_{ijk}$ are components of a third-rank tensor determined by the crystal symmetry. For continuous in-plane rotational symmetry (point group $C_{\\infty v}$), there is only one independent combination of Lifshitz invariants that forms a scalar.\n\nThis invariant is the sum $L_{zx}^{(x)} + L_{zy}^{(y)}$. Let's verify its rotational invariance. Under a rotation by an angle $\\phi$ about $\\hat{\\mathbf{z}}$, the components of $\\mathbf{m}$ and $\\nabla$ transform as:\n$$m_x' = m_x\\cos\\phi + m_y\\sin\\phi$$\n$$m_y' = -m_x\\sin\\phi + m_y\\cos\\phi$$\n$$m_z' = m_z$$\n$$\\partial_x' = \\partial_x\\cos\\phi + \\partial_y\\sin\\phi$$\n$$\\partial_y' = -\\partial_x\\sin\\phi + \\partial_y\\cos\\phi$$\n\nThe quantity $L_{zx}^{(x)} + L_{zy}^{(y)}$ can be written as $m_z(\\partial_x m_x + \\partial_y m_y) - (m_x \\partial_x m_z + m_y \\partial_y m_z)$.\nThe term $\\partial_x m_x + \\partial_y m_y = \\nabla_\\parallel \\cdot \\mathbf{m}_\\parallel$ is the in-plane divergence of the in-plane magnetization. The divergence of a vector field is a scalar invariant under rotations.\nThe term $m_x \\partial_x m_z + m_y \\partial_y m_z = \\mathbf{m}_\\parallel \\cdot \\nabla_\\parallel m_z$ is the scalar product of two in-plane vectors, which is also a scalar invariant under in-plane rotations.\nSince $m_z$ is also invariant, the entire expression is invariant under in-plane rotations.\n\nAny other combination, such as those that would form the Bloch-type DMI (e.g., $L_{yz}^{(x)} - L_{xz}^{(y)}$), is not invariant under continuous in-plane rotation and is therefore forbidden.\n\nThus, the interfacial DMI energy density, also known as Néel-type DMI, is proportional to this invariant:\n$$\nw_{\\mathrm{DM}}(\\mathbf{r}) = D \\left( L_{zx}^{(x)} + L_{zy}^{(y)} \\right)\n$$\nwhere $D$ is the DMI strength constant. Explicitly, this is:\n$$\nw_{\\mathrm{DM}}(\\mathbf{r}) = D \\left( m_z \\frac{\\partial m_x}{\\partial x} - m_x \\frac{\\partial m_z}{\\partial x} + m_z \\frac{\\partial m_y}{\\partial y} - m_y \\frac{\\partial m_z}{\\partial y} \\right)\n$$\nThe total continuum energy $E_{\\mathrm{cont}}$ over a rectangular domain $\\Omega = [0, L_x] \\times [0, L_y]$ is the integral of this density:\n$$\nE_{\\mathrm{cont}} = \\int_{\\Omega} w_{\\mathrm{DM}}(\\mathbf{r}) \\, d^2 r = D \\int_0^{L_y} \\int_0^{L_x} \\left( m_z \\frac{\\partial m_x}{\\partial x} - m_x \\frac{\\partial m_z}{\\partial x} + m_z \\frac{\\partial m_y}{\\partial y} - m_y \\frac{\\partial m_z}{\\partial y} \\right) dx \\, dy\n$$\n\n### Task B: Finite-Difference Discretization\n\nWe discretize the domain $\\Omega$ into a grid of $N_x \\times N_y$ points $(x_i, y_j) = (i a_x, j a_y)$, where $a_x = L_x/N_x$ and $a_y = L_y/N_y$ are the grid spacings. The magnetization field at each grid point is denoted by $\\mathbf{m}_{i,j} = \\mathbf{m}(x_i, y_j)$.\n\nThe problem specifies using a second-order accurate central-difference stencil for the first derivatives with periodic boundary conditions. For a function $f(x,y)$ evaluated on the grid as $f_{i,j}$, the derivatives are approximated as:\n$$\n\\left(\\frac{\\partial f}{\\partial x}\\right)_{i,j} \\approx \\frac{f_{i+1,j} - f_{i-1,j}}{2 a_x}\n$$\n$$\n\\left(\\frac{\\partial f}{\\partial y}\\right)_{i,j} \\approx \\frac{f_{i,j+1} - f_{i,j-1}}{2 a_y}\n$$\nThe indices are evaluated modulo $N_x$ and $N_y$ respectively to implement the periodicity.\n\nThe integral is approximated by a Riemann sum over the grid cells, with each cell having an area $d^2r \\approx a_x a_y$.\n\nApplying these rules to the expression for $w_{\\mathrm{DM}}$ at each grid point $(i,j)$:\n$$\n(w_{\\mathrm{DM}})_{i,j} \\approx D \\left( m_{z,i,j} \\frac{m_{x,i+1,j} - m_{x,i-1,j}}{2 a_x} - m_{x,i,j} \\frac{m_{z,i+1,j} - m_{z,i-1,j}}{2 a_x} + m_{z,i,j} \\frac{m_{y,i,j+1} - m_{y,i,j-1}}{2 a_y} - m_{y,i,j} \\frac{m_{z,i,j+1} - m_{z,i,j-1}}{2 a_y} \\right)\n$$\nThe total discretized energy $E_{\\mathrm{FD}}$ is the sum of these local energy densities multiplied by the area element $a_x a_y$:\n$$\nE_{\\mathrm{FD}} = \\sum_{j=0}^{N_y-1} \\sum_{i=0}^{N_x-1} (w_{\\mathrm{DM}})_{i,j} \\, a_x a_y\n$$\nSubstituting the expression for $(w_{\\mathrm{DM}})_{i,j}$ and simplifying gives:\n$$\nE_{\\mathrm{FD}} = \\frac{D}{2} \\sum_{j=0}^{N_y-1} \\sum_{i=0}^{N_x-1} \\left[ a_y \\left( m_{z,i,j}(m_{x,i+1,j} - m_{x,i-1,j}) - m_{x,i,j}(m_{z,i+1,j} - m_{z,i-1,j}) \\right) + a_x \\left( m_{z,i,j}(m_{y,i,j+1} - m_{y,i,j-1}) - m_{y,i,j}(m_{z,i,j+1} - m_{z,i,j-1}) \\right) \\right]\n$$\nThis is the second-order accurate finite-difference approximation for the total DMI energy.\n\n### Task C: Long-Wavelength Convergence Verification\n\nFirst, we derive the exact continuum energy $E_{\\mathrm{cont}}$ for the given test fields. The phase is $\\theta(x,y) = k_x x + k_y y$.\n\n**Type X field**: $\\mathbf{m}(x,y) = (\\cos\\theta, 0, \\sin\\theta)$.\nComponents and derivatives are:\n$m_x = \\cos\\theta$, $m_y = 0$, $m_z = \\sin\\theta$.\n$\\partial_x m_x = -k_x \\sin\\theta$, $\\partial_x m_z = k_x \\cos\\theta$.\nThe terms involving $m_y$ or $\\partial_y$ (inside the DMI expression for Type X) will have complicated forms, but let's check the DMI expression directly. The relevant terms for $w_{\\mathrm{DM}}$ are $D(m_z \\partial_x m_x - m_x \\partial_x m_z)$. All other terms are zero because $m_y=0$ and $\\partial_k m_y=0$.\n$$\nw_{\\mathrm{DM}}^{\\mathrm{X}} = D( (\\sin\\theta)(-k_x \\sin\\theta) - (\\cos\\theta)(k_x \\cos\\theta) ) = -D k_x (\\sin^2\\theta + \\cos^2\\theta) = -D k_x\n$$\nSince the energy density is constant, the total energy is:\n$$\nE_{\\mathrm{cont}}^{\\mathrm{X}} = \\int_0^{L_y} \\int_0^{L_x} (-D k_x) \\, dx \\, dy = -D k_x L_x L_y\n$$\n\n**Type Y field**: $\\mathbf{m}(x,y) = (0, \\cos\\theta, \\sin\\theta)$.\nComponents and derivatives are:\n$m_x = 0$, $m_y = \\cos\\theta$, $m_z = \\sin\\theta$.\n$\\partial_y m_y = -k_y \\sin\\theta$, $\\partial_y m_z = k_y \\cos\\theta$.\nThe relevant terms for $w_{\\mathrm{DM}}$ are $D(m_z \\partial_y m_y - m_y \\partial_y m_z)$. All other terms are zero because $m_x=0$ and $\\partial_k m_x=0$.\n$$\nw_{\\mathrm{DM}}^{\\mathrm{Y}} = D( (\\sin\\theta)(-k_y \\sin\\theta) - (\\cos\\theta)(k_y \\cos\\theta) ) = -D k_y (\\sin^2\\theta + \\cos^2\\theta) = -D k_y\n$$\nThe total energy is:\n$$\nE_{\\mathrm{cont}}^{\\mathrm{Y}} = \\int_0^{L_y} \\int_0^{L_x} (-D k_y) \\, dx \\, dy = -D k_y L_x L_y\n$$\n\nFor the numerical verification, we will implement the expression for $E_{\\mathrm{FD}}$ derived in Task B. For each test case, we construct the discrete magnetization field $\\mathbf{m}_{i,j}$ and compute the sum. The periodic boundary conditions are efficiently handled using array rolling operations (e.g., `numpy.roll`). The error is then computed as specified: relative error $|E_{\\mathrm{FD}}-E_{\\mathrm{cont}}|/|E_{\\mathrm{cont}}|$ if $E_{\\mathrm{cont}} \\neq 0$, and absolute error $|E_{\\mathrm{FD}}|$ if $E_{\\mathrm{cont}} = 0$.\n\nFor a plane wave with wavevector component $k_x$, the central difference approximation introduces a numerical error factor of $\\sin(k_x a_x)/(k_x a_x)$. The error is expected to be of second order in the grid spacing, i.e., proportional to $a_x^2$. For the test cases, we anticipate that the error will decrease quadratically as the grid resolution $N$ increases (for a fixed wavelength) and increase for shorter wavelengths (larger $k$). For the case with $k_x=k_y=0$, the magnetization is uniform, all derivatives are zero, and the calculated $E_{\\mathrm{FD}}$ should be exactly zero, resulting in zero absolute error.\nThe provided test suite allows verification of these properties:\n- Cases $1$ and $2$ test convergence with increasing grid resolution $N$.\n- Case $3$ tests the symmetric scenario for the $y$-direction.\n- Case $4$ tests the zero-energy (uniform) case.\n- Case $5$ tests the behavior for a short wavelength, where the discretization error is expected to be large.\n\nThe following Python code implements these calculations and computes the requested error metrics for the specified test suite.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Dzyaloshinskii-Moriya interaction problem by deriving the continuum energy,\n    discretizing it, and verifying the convergence of the discrete model against the \n    exact continuum solution for several test cases.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each tuple is of the form (type, k_x, k_y, N), where N_x=N_y=N.\n    test_cases = [\n        (\"X\", 1, 0, 32),\n        (\"X\", 1, 0, 128),\n        (\"Y\", 0, 1, 64),\n        (\"X\", 0, 0, 64),\n        (\"X\", 16, 0, 64),\n    ]\n\n    # Global parameters from the problem statement\n    D = 1.0\n    L_x = 2.0 * np.pi\n    L_y = 2.0 * np.pi\n\n    results = []\n    for case in test_cases:\n        m_type, k_x, k_y, N = case\n        N_x = N\n        N_y = N\n\n        # --- Task C: Analytical Continuum Energy ---\n        if m_type == \"X\":\n            E_cont = -D * k_x * L_x * L_y\n        elif m_type == \"Y\":\n            E_cont = -D * k_y * L_x * L_y\n        else:\n            raise ValueError(\"Invalid magnetization type specified.\")\n\n        # --- Task B  C: Finite-Difference Calculation ---\n        \n        # Grid setup\n        a_x = L_x / N_x\n        a_y = L_y / N_y\n        x = np.arange(N_x) * a_x\n        y = np.arange(N_y) * a_y\n        xx, yy = np.meshgrid(x, y, indexing='ij')\n        \n        # Note: numpy meshgrid with 'ij' indexing creates grids where the first\n        # index corresponds to x and the second to y. This is transposed\n        # relative to the convention where axis 0 is y (rows) and axis 1 is x (cols).\n        # We will use axis=0 for x-derivatives and axis=1 for y-derivatives.\n        \n        # Magnetization field on the grid\n        theta = k_x * xx + k_y * yy\n        \n        if m_type == \"X\":\n            m_x = np.cos(theta)\n            m_y = np.zeros_like(theta)\n            m_z = np.sin(theta)\n        elif m_type == \"Y\":\n            m_x = np.zeros_like(theta)\n            m_y = np.cos(theta)\n            m_z = np.sin(theta)\n            \n        m_x = m_x.T # Transpose to (y, x) convention for np.roll\n        m_y = m_y.T\n        m_z = m_z.T\n\n        # Calculate derivatives using central differences with periodic boundaries (via np.roll)\n        # axis=1 corresponds to x-direction (columns)\n        # axis=0 corresponds to y-direction (rows)\n        \n        # x-derivatives\n        dmx_dx = (np.roll(m_x, -1, axis=1) - np.roll(m_x, 1, axis=1)) / (2.0 * a_x)\n        dmz_dx = (np.roll(m_z, -1, axis=1) - np.roll(m_z, 1, axis=1)) / (2.0 * a_x)\n        \n        # y-derivatives\n        dmy_dy = (np.roll(m_y, -1, axis=0) - np.roll(m_y, 1, axis=0)) / (2.0 * a_y)\n        dmz_dy = (np.roll(m_z, -1, axis=0) - np.roll(m_z, 1, axis=0)) / (2.0 * a_y)\n\n        # Discretized energy density\n        w_dm_ij = D * (m_z * dmx_dx - m_x * dmz_dx + m_z * dmy_dy - m_y * dmz_dy)\n        \n        # Total finite-difference energy\n        E_fd = np.sum(w_dm_ij) * a_x * a_y\n\n        # --- Calculate error metric ---\n        if E_cont != 0:\n            # Relative error\n            error = np.abs(E_fd - E_cont) / np.abs(E_cont)\n        else:\n            # Absolute error\n            error = np.abs(E_fd)\n            \n        results.append(error)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.10f}' for r in results)}]\")\n\nsolve()\n```", "id": "2984011"}]}