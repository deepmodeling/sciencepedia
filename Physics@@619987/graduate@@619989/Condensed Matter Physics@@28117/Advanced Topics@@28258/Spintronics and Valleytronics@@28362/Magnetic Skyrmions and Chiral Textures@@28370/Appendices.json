{"hands_on_practices": [{"introduction": "The defining characteristic of a magnetic skyrmion is its topology, which is mathematically captured by an integer invariant called the topological charge or skyrmion number, $N_{\\mathrm{sk}}$. This quantity measures how the magnetization vectors wrap around the unit sphere. This exercise provides fundamental practice by requiring a first-principles calculation of $N_{\\mathrm{sk}}$ for a canonical radial skyrmion texture, starting from its standard integral definition [@problem_id:3003687]. Mastering this derivation solidifies the connection between the abstract concept of topological mapping and its concrete mathematical representation.", "problem": "Consider a two-dimensional chiral ferromagnet whose unit magnetization field is a radial NÃ©el texture parameterized in polar coordinates by $\\mathbf{n}(r,\\phi)=\\left(\\sin\\theta(r)\\cos\\phi,\\ \\sin\\theta(r)\\sin\\phi,\\ \\cos\\theta(r)\\right)$, where $r \\ge 0$ is the radial coordinate and $\\phi \\in [0,2\\pi)$ is the azimuthal angle. Assume the boundary conditions $\\theta(0)=\\pi$ and $\\theta(\\infty)=0$, and that $\\theta(r)$ is smooth and strictly monotone on $(0,\\infty)$. Work in a right-handed laboratory frame with $\\hat{\\mathbf{x}} \\times \\hat{\\mathbf{y}}=\\hat{\\mathbf{z}}$, and take $\\phi$ to increase counterclockwise.\n\nUsing only the standard topological charge (skyrmion number) definition for a smooth unit vector field $\\mathbf{n}:\\mathbb{R}^{2}\\to S^{2}$,\n$$\nN_{\\mathrm{sk}}=\\frac{1}{4\\pi}\\int_{\\mathbb{R}^{2}} \\mathbf{n}\\cdot\\left(\\partial_{x}\\mathbf{n}\\times\\partial_{y}\\mathbf{n}\\right)\\, d^{2}r,\n$$\nderive from first principles the exact value of $N_{\\mathrm{sk}}$ for the texture $\\mathbf{n}(r,\\phi)$ specified above. Express your final answer as a pure number with no units and no rounding required.", "solution": "The problem requires the calculation of the topological charge, or skyrmion number $N_{\\mathrm{sk}}$, for a specified two-dimensional magnetization texture $\\mathbf{n}(r,\\phi)$. The given definition is\n$$\nN_{\\mathrm{sk}}=\\frac{1}{4\\pi}\\int_{\\mathbb{R}^{2}} \\mathbf{n}\\cdot\\left(\\partial_{x}\\mathbf{n}\\times\\partial_{y}\\mathbf{n}\\right)\\, d^{2}r\n$$\nThe magnetization field $\\mathbf{n}$ is parameterized in polar coordinates $(r, \\phi)$ as\n$$\n\\mathbf{n}(r,\\phi)=\\left(\\sin\\theta(r)\\cos\\phi,\\ \\sin\\theta(r)\\sin\\phi,\\ \\cos\\theta(r)\\right)\n$$\nwith boundary conditions $\\theta(0)=\\pi$ and $\\theta(\\infty)=0$.\n\nThe integral is defined in Cartesian coordinates $(x, y)$, while the field $\\mathbf{n}$ is defined in polar coordinates $(r, \\phi)$. The most direct method is to transform the entire integral into polar coordinates. The differential area element in polar coordinates is $d^{2}r = dx\\,dy = r\\,dr\\,d\\phi$. The integration domain $\\mathbb{R}^2$ corresponds to $r \\in [0, \\infty)$ and $\\phi \\in [0, 2\\pi)$.\n\nWe must express the integrand, $\\mathbf{n}\\cdot\\left(\\partial_{x}\\mathbf{n}\\times\\partial_{y}\\mathbf{n}\\right)$, in polar coordinates. The term $\\mathbf{n}\\cdot(\\partial_x \\mathbf{n} \\times \\partial_y \\mathbf{n})$ is the Jacobian of the mapping from the $(x,y)$ plane to the surface of the unit sphere. A standard identity relates the Cartesian derivatives to polar coordinate derivatives:\n$$\n\\partial_{x}\\mathbf{n}\\times\\partial_{y}\\mathbf{n} = \\frac{1}{r}(\\partial_{r}\\mathbf{n}\\times\\partial_{\\phi}\\mathbf{n})\n$$\nSo the integrand becomes $\\frac{1}{r}\\mathbf{n}\\cdot(\\partial_{r}\\mathbf{n}\\times\\partial_{\\phi}\\mathbf{n})$. Now we compute this scalar triple product. The partial derivatives of $\\mathbf{n}$ with respect to $r$ and $\\phi$ are:\n$$\n\\partial_{r}\\mathbf{n} = \\frac{d\\theta}{dr}\\left(\\cos\\theta(r)\\cos\\phi, \\cos\\theta(r)\\sin\\phi, -\\sin\\theta(r)\\right)\n$$\n$$\n\\partial_{\\phi}\\mathbf{n} = \\left(-\\sin\\theta(r)\\sin\\phi, \\sin\\theta(r)\\cos\\phi, 0\\right)\n$$\nWe compute the cross product $\\partial_{r}\\mathbf{n}\\times\\partial_{\\phi}\\mathbf{n}$:\n\\begin{align*}\n\\hat{\\mathbf{x}} \\text{ comp: }  (\\frac{d\\theta}{dr}\\cos\\theta\\sin\\phi)(0) - (-\\frac{d\\theta}{dr}\\sin\\theta)(\\sin\\theta\\cos\\phi) = \\frac{d\\theta}{dr}\\sin^2\\theta\\cos\\phi \\\\\n\\hat{\\mathbf{y}} \\text{ comp: }  (-\\frac{d\\theta}{dr}\\sin\\theta)(-\\sin\\theta\\sin\\phi) - (\\frac{d\\theta}{dr}\\cos\\theta\\cos\\phi)(0) = \\frac{d\\theta}{dr}\\sin^2\\theta\\sin\\phi \\\\\n\\hat{\\mathbf{z}} \\text{ comp: }  (\\frac{d\\theta}{dr}\\cos\\theta\\cos\\phi)(\\sin\\theta\\cos\\phi) - (\\frac{d\\theta}{dr}\\cos\\theta\\sin\\phi)(-\\sin\\theta\\sin\\phi) = \\frac{d\\theta}{dr}\\sin\\theta\\cos\\theta(\\cos^2\\phi+\\sin^2\\phi) = \\frac{d\\theta}{dr}\\sin\\theta\\cos\\theta\n\\end{align*}\nSo, $\\partial_{r}\\mathbf{n}\\times\\partial_{\\phi}\\mathbf{n} = \\frac{d\\theta}{dr}(\\sin^2\\theta\\cos\\phi, \\sin^2\\theta\\sin\\phi, \\sin\\theta\\cos\\theta)$.\nNext, we take the dot product with $\\mathbf{n}$:\n$$\n\\mathbf{n}\\cdot(\\partial_{r}\\mathbf{n}\\times\\partial_{\\phi}\\mathbf{n}) = \\frac{d\\theta}{dr} \\left[ (\\sin\\theta\\cos\\phi)(\\sin^2\\theta\\cos\\phi) + (\\sin\\theta\\sin\\phi)(\\sin^2\\theta\\sin\\phi) + (\\cos\\theta)(\\sin\\theta\\cos\\theta) \\right]\n$$\n$$\n= \\frac{d\\theta}{dr} \\left[ \\sin^3\\theta(\\cos^2\\phi+\\sin^2\\phi) + \\sin\\theta\\cos^2\\theta \\right] = \\frac{d\\theta}{dr} \\left[ \\sin^3\\theta + \\sin\\theta\\cos^2\\theta \\right]\n$$\n$$\n= \\frac{d\\theta}{dr} \\sin\\theta(\\sin^2\\theta+\\cos^2\\theta) = \\sin\\theta(r)\\frac{d\\theta}{dr}\n$$\nNow, we substitute this back into the expression for the skyrmion number integral:\n$$\nN_{\\mathrm{sk}} = \\frac{1}{4\\pi}\\int_{0}^{2\\pi}\\int_{0}^{\\infty} \\left( \\frac{1}{r} \\mathbf{n}\\cdot(\\partial_{r}\\mathbf{n}\\times\\partial_{\\phi}\\mathbf{n}) \\right) (r\\,dr\\,d\\phi)\n$$\n$$\nN_{\\mathrm{sk}} = \\frac{1}{4\\pi}\\int_{0}^{2\\pi}\\int_{0}^{\\infty} \\left( \\frac{1}{r} \\sin\\theta(r)\\frac{d\\theta}{dr} \\right) (r\\,dr\\,d\\phi)\n$$\nThe factors of $r$ cancel:\n$$\nN_{\\mathrm{sk}} = \\frac{1}{4\\pi}\\int_{0}^{2\\pi}\\int_{0}^{\\infty} \\sin\\theta(r)\\frac{d\\theta}{dr} \\,dr\\,d\\phi\n$$\nThe integrand is independent of $\\phi$, so the integration over $\\phi$ yields a factor of $2\\pi$:\n$$\nN_{\\mathrm{sk}} = \\frac{2\\pi}{4\\pi}\\int_{0}^{\\infty} \\sin\\theta(r)\\frac{d\\theta}{dr} \\,dr = \\frac{1}{2}\\int_{0}^{\\infty} \\sin\\theta(r) \\frac{d\\theta}{dr} \\,dr\n$$\nTo evaluate the remaining integral, we perform a change of variables from $r$ to $\\theta$. Let $u=\\theta(r)$, so $du = \\frac{d\\theta}{dr}dr$. We must transform the limits of integration.\nWhen $r=0$, the lower limit is $\\theta(0)=\\pi$.\nWhen $r \\to \\infty$, the upper limit is $\\theta(\\infty)=0$.\nThe integral becomes:\n$$\nN_{\\mathrm{sk}} = \\frac{1}{2}\\int_{\\theta(0)}^{\\theta(\\infty)} \\sin(u) \\,du = \\frac{1}{2}\\int_{\\pi}^{0} \\sin(u) \\,du\n$$\nEvaluating the definite integral:\n$$\nN_{\\mathrm{sk}} = \\frac{1}{2} \\left[-\\cos(u)\\right]_{\\pi}^{0} = \\frac{1}{2} \\left( (-\\cos(0)) - (-\\cos(\\pi)) \\right)\n$$\n$$\nN_{\\mathrm{sk}} = \\frac{1}{2} \\left( -1 - (-(-1)) \\right) = \\frac{1}{2}(-1 - 1) = \\frac{1}{2}(-2)\n$$\n$$\nN_{\\mathrm{sk}} = -1\n$$\nThe topological charge of the given magnetic texture is exactly $-1$. This integer value is expected, as $N_{\\mathrm{sk}}$ represents the degree of the mapping from the compactified plane $\\mathbb{R}^2\\cup\\{\\infty\\} \\cong S^2$ to the target sphere of magnetization vectors $S^2$.", "answer": "$$\\boxed{-1}$$", "id": "3003687"}, {"introduction": "When transitioning from continuous field theory to numerical simulations, physical quantities must be discretized on a lattice. A naive finite-difference implementation of the integral for the topological charge can fail to produce the required integer values, especially for sharp spin textures. This practical exercise introduces a geometrically motivated and numerically robust method for calculating the skyrmion number by summing the oriented solid angles of elementary triangles on the magnetization sphere [@problem_id:3003666]. This technique is essential for computational studies, as it ensures that the simulated topology remains a well-defined integer invariant, free from lattice artifacts.", "problem": "You are asked to implement a robust computation of the skyrmion number using oriented areas on triangles to avoid lattice-induced artifacts and noninteger values. Consider a two-dimensional square lattice with periodic boundary conditions representing a unit-magnitude magnetization field. The magnetization field is given by a function $\\mathbf{n}(x,y)$ that maps each point in the plane to a unit vector on the two-dimensional sphere $S^2$. The skyrmion number $N_{\\mathrm{sk}}$ is defined in the continuum by the integral\n$$\nN_{\\mathrm{sk}} = \\frac{1}{4\\pi}\\int \\mathbf{n}(x,y) \\cdot \\left(\\partial_x \\mathbf{n}(x,y) \\times \\partial_y \\mathbf{n}(x,y)\\right)\\,\\mathrm{d}x\\,\\mathrm{d}y,\n$$\nwhere $\\mathbf{n}(x,y)$ is a unit vector for all $(x,y)$.\n\nOn a discrete mesh, the result of a naive finite difference approximation can suffer from lattice-induced artifacts and noninteger values when the mesh under-resolves sharp textures or when numerical derivatives are ill-conditioned. To eliminate these artifacts, your program must compute $N_{\\mathrm{sk}}$ by summing the oriented spherical areas of magnetization vectors over a triangulation of the lattice. Specifically, each square cell of the lattice must be split into two oriented triangles in a counterclockwise orientation, and the contribution of each triangle must be computed from the three unit vectors at its vertices in a way that represents the oriented spherical area enclosed by their image on $S^2$.\n\nThe computation should ensure numerical stability by:\n- Using periodic boundary conditions in both directions.\n- Normalizing $\\mathbf{n}$ at each lattice site to unit length.\n- Using a numerically robust oriented-area formula on $S^2$ that handles nearly collinear spins and avoids ambiguous branch cuts.\n\nYour program must implement the following test suite. For each test case, construct the magnetization field on a periodic grid and compute $N_{\\mathrm{sk}}$ using the oriented-triangle method described above. All angles must be in radians and all quantities are dimensionless, so no physical units are required.\n\nDefine the skyrmion texture as follows. In polar coordinates $(r,\\theta)$ around a specified center, let\n$$\nf(r) = 2\\arctan\\left(\\exp\\left(\\frac{R - r}{\\lambda}\\right)\\right),\n$$\nand define a NÃ©el-type skyrmion field with radial in-plane orientation by\n$$\n\\mathbf{n}(x,y) = \\left(\\sin f(r)\\,\\cos\\theta,\\;\\sin f(r)\\,\\sin\\theta,\\;\\cos f(r)\\right),\n$$\nwhere $r = \\sqrt{(x-x_0)^2+(y-y_0)^2}$ and $\\theta = \\operatorname{atan2}(y-y_0,x-x_0)$. This yields a core magnetization pointing down at $r=0$ and up far from the core, with a smooth profile controlled by radius $R$ and wall width $\\lambda$. To flip the overall topological charge and reverse the far-field orientation, you may use the field $-\\mathbf{n}(x,y)$ formed by pointwise negation.\n\nConstruct the following test cases:\n\n- Test case $1$: A single smooth NÃ©el skyrmion on a periodic grid with parameters $N_x = 128$, $N_y = 128$, domain length $L = 1.0$ in both directions, center $(x_0,y_0) = (0.5,0.5)$, skyrmion radius $R = 0.2$, wall width $\\lambda = 0.03$. Use the NÃ©el texture as given above.\n\n- Test case $2$: A uniform ferromagnetic state with $\\mathbf{n}(x,y) = (0,0,1)$ on a grid with $N_x = 64$, $N_y = 64$, domain length $L = 1.0$.\n\n- Test case $3$: A skyrmion with opposite topological charge to test sign robustness, constructed by pointwise negating the field from Test case $1$ (i.e., use $-\\mathbf{n}(x,y)$ of Test case $1$) on the same grid parameters $N_x = 128$, $N_y = 128$, $L = 1.0$, but with center $(x_0,y_0) = (0.35,0.5)$, keeping $R = 0.2$, $\\lambda = 0.03$.\n\n- Test case $4$: A weakly disordered ferromagnet obtained by taking the uniform state $\\mathbf{n}(x,y) = (0,0,1)$ and adding small random perturbations at each site, followed by renormalization to unit length. Use parameters $N_x = 64$, $N_y = 64$, $L = 1.0$, and random perturbations of amplitude $0.05$. Use a fixed random seed for reproducibility.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each entry being the computed skyrmion number for the corresponding test case, rounded to six decimal places. For example, the output must have the format\n$$\n[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4],\n$$\nwhere each $\\text{result}_i$ is a floating-point number rounded to six decimal places. No other text should be printed. The program must be self-contained and must not require any user input.", "solution": "The skyrmion number $N_{\\mathrm{sk}}$ is a topological invariant that counts the degree of the map from the physical two-dimensional space into the unit sphere $S^2$ formed by the magnetization field $\\mathbf{n}(x,y)$. The continuum definition,\n$$\nN_{\\mathrm{sk}} = \\frac{1}{4\\pi}\\int \\mathbf{n}(x,y)\\cdot\\left(\\partial_x\\mathbf{n}(x,y)\\times\\partial_y\\mathbf{n}(x,y)\\right)\\,\\mathrm{d}x\\,\\mathrm{d}y,\n$$\narises from the Jacobian determinant of the mapping $\\mathbf{n}: \\mathbb{R}^2 \\to S^2$, integrated over the plane. The quantity inside the integral is the topological charge density $\\rho(x,y) = \\mathbf{n}\\cdot(\\partial_x\\mathbf{n}\\times\\partial_y\\mathbf{n})/(4\\pi)$, which is invariant under smooth deformations that do not pass through singularities where $\\mathbf{n}$ is undefined.\n\nTo compute $N_{\\mathrm{sk}}$ on a discrete mesh robustly, we avoid finite difference approximations of derivatives $\\partial_x \\mathbf{n}$ and $\\partial_y \\mathbf{n}$. Instead, we approximate the surface integral by summing oriented spherical areas of the images of small triangles in the physical mesh. This approach is based on the observation that for three unit vectors $\\mathbf{s}_1$, $\\mathbf{s}_2$, and $\\mathbf{s}_3$ on $S^2$, the oriented area of the spherical triangle they define is equal to the solid angle $\\Omega(\\mathbf{s}_1,\\mathbf{s}_2,\\mathbf{s}_3)$ enclosed by the geodesic arcs joining these points. The contribution of each triangle to the total skyrmion number is $\\Omega/(4\\pi)$, and summing over a triangulation of the mesh approximates the integral.\n\nA numerically robust expression for the oriented spherical area $\\Omega$ is given by the formula\n$$\n\\Omega(\\mathbf{s}_1,\\mathbf{s}_2,\\mathbf{s}_3) = 2\\,\\arctan2\\!\\left(\\,\\mathbf{s}_1\\cdot(\\mathbf{s}_2\\times\\mathbf{s}_3),\\;1+\\mathbf{s}_1\\cdot\\mathbf{s}_2+\\mathbf{s}_2\\cdot\\mathbf{s}_3+\\mathbf{s}_3\\cdot\\mathbf{s}_1\\,\\right),\n$$\nwhere $\\arctan2(y,x)$ is the two-argument arctangent that returns an angle in $(-\\pi,\\pi]$ and handles the correct branch of the angle, and the dot and cross denote the scalar and vector products in $\\mathbb{R}^3$. This formula arises from spherical trigonometry and the stereographic projection of $S^2$; it is equivalent to summing the angles at the vertices and subtracting $\\pi$, but it is more stable in the presence of nearly collinear spins because it does not suffer from catastrophic cancellation. The numerator $\\mathbf{s}_1\\cdot(\\mathbf{s}_2\\times\\mathbf{s}_3)$ is the oriented volume (triple product) of the three vectors, and the denominator $1+\\mathbf{s}_1\\cdot\\mathbf{s}_2+\\mathbf{s}_2\\cdot\\mathbf{s}_3+\\mathbf{s}_3\\cdot\\mathbf{s}_1$ ensures that the formula remains well-defined except at configurations where the triangle spans more than a hemisphere, which are properly handled by the branch of $\\arctan2$.\n\nTo use this formula on a square lattice, we proceed as follows:\n- Use periodic boundary conditions so that indices wrap around: the neighbor of site $(i,j)$ in the positive $x$ direction is $(i+1 \\bmod N_x,j)$ and in the positive $y$ direction is $(i,j+1 \\bmod N_y)$.\n- Split each elementary square cell into two triangles with counterclockwise orientation. For a cell with corners at lattice indices $(i,j)$, $(i+1,j)$, $(i+1,j+1)$, and $(i,j+1)$, use the triangles $T_1 = \\left[(i,j)\\to(i+1,j)\\to(i+1,j+1)\\right]$ and $T_2 = \\left[(i,j)\\to(i+1,j+1)\\to(i,j+1)\\right]$, where the arrows indicate the ordering of the vertices that defines the orientation.\n- For each triangle, compute $\\Omega(\\mathbf{s}_1,\\mathbf{s}_2,\\mathbf{s}_3)$ using the three unit magnetization vectors at the vertices, and sum the contributions $N_{\\mathrm{sk}} = \\sum_{\\text{triangles}} \\Omega/(4\\pi)$.\n\nThis sum is equivalent to a Riemann sum of the continuum expression if the magnetization field varies smoothly on the scale of the lattice spacing. Because the formula uses oriented areas on $S^2$, it naturally yields integer values for well-resolved skyrmions and strongly suppresses noninteger artifacts that can occur in derivative-based discretizations, especially when a skyrmion core spans only a few lattice sites.\n\nFor numerical stability:\n- Normalize the magnetization vector field at every lattice site: given any computed vector $\\mathbf{v}$, replace it by $\\mathbf{v}/\\|\\mathbf{v}\\|$ so that $\\|\\mathbf{n}\\|=1$ holds throughout the mesh.\n- Use the $\\arctan2$-based solid angle formula directly, without ad hoc thresholding; it correctly handles cases where the denominator is small or negative and sums areas with the correct orientation.\n- Ensure consistent triangle orientation across the entire lattice so that contributions do not cancel erroneously.\n\nWe now specify the construction of the test fields.\n\nFor the NÃ©el-type skyrmion texture, define polar coordinates relative to a center $(x_0,y_0)$ as $r = \\sqrt{(x-x_0)^2+(y-y_0)^2}$ and $\\theta = \\operatorname{atan2}(y-y_0,x-x_0)$. Use the profile\n$$\nf(r) = 2\\arctan\\left(\\exp\\left(\\frac{R - r}{\\lambda}\\right)\\right).\n$$\nThen define\n$$\n\\mathbf{n}(x,y) = \\left(\\sin f(r)\\,\\cos\\theta,\\;\\sin f(r)\\,\\sin\\theta,\\;\\cos f(r)\\right),\n$$\nwhich yields $\\mathbf{n}(0) \\approx (0,0,-1)$ at $r=0$ and $\\mathbf{n} \\to (0,0,1)$ as $r\\to\\infty$. To obtain a field with opposite topological charge and reversed far-field orientation, simply use $-\\mathbf{n}(x,y)$ pointwise; this transformation flips the sign of the integrand $\\mathbf{n}\\cdot(\\partial_x\\mathbf{n}\\times\\partial_y\\mathbf{n})$ because each factor changes sign under $\\mathbf{n} \\mapsto -\\mathbf{n}$, yielding $N_{\\mathrm{sk}}\\mapsto -N_{\\mathrm{sk}}$.\n\nFor the uniform ferromagnetic test, use $\\mathbf{n}(x,y) = (0,0,1)$ everywhere. For the weakly disordered ferromagnet, add a small random vector $\\boldsymbol{\\eta}(x,y)$ with independent components in $[-\\epsilon,\\epsilon]$ to $(0,0,1)$ and renormalize, where $\\epsilon = 0.05$, and use a fixed random seed for reproducibility.\n\nAlgorithmic steps for the program:\n1. Construct the grid coordinates $x_i = i\\,L/N_x$ for $i=0,\\dots,N_x-1$ and $y_j = j\\,L/N_y$ for $j=0,\\dots,N_y-1$.\n2. Build the magnetization field $\\mathbf{n}_{i,j}$ according to the desired test case, normalize $\\mathbf{n}_{i,j}$ to unit length.\n3. For each cell $(i,j)$, define the two counterclockwise triangles $T_1$ and $T_2$ as above.\n4. For each triangle with vertex spins $(\\mathbf{s}_1,\\mathbf{s}_2,\\mathbf{s}_3)$, compute\n$$\n\\Omega = 2\\,\\arctan2\\!\\left(\\,\\mathbf{s}_1\\cdot(\\mathbf{s}_2\\times\\mathbf{s}_3),\\;1+\\mathbf{s}_1\\cdot\\mathbf{s}_2+\\mathbf{s}_2\\cdot\\mathbf{s}_3+\\mathbf{s}_3\\cdot\\mathbf{s}_1\\,\\right),\n$$\nand accumulate $N_{\\mathrm{sk}} \\leftarrow N_{\\mathrm{sk}} + \\Omega/(4\\pi)$.\n5. Round each resulting $N_{\\mathrm{sk}}$ to six decimal places and print them in the specified single-line bracketed list format.\n\nThis procedure is derived from the continuum definition by interpreting the skyrmion number as the total oriented area on $S^2$ covered by the magnetization field, normalized by $4\\pi$, which is the area of the unit sphere. The use of counterclockwise oriented triangles ensures consistent sign conventions. Periodic boundary conditions guarantee that the triangulation is topologically closed (a torus), so the summation of solid angles yields an integer for textures with integer topological degree when sufficiently resolved. The robustness of the $\\arctan2$ formula mitigates numerical issues such as noninteger summation caused by near-degenerate triangles or rounding errors, thereby achieving the directiveâs goal of avoiding lattice-induced artifacts and noninteger values.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solid_angle(s1, s2, s3):\n    \"\"\"\n    Compute the oriented spherical area (solid angle) Omega for the triangle\n    on the unit sphere defined by three unit vectors s1, s2, s3 using the\n    robust atan2-based formula:\n        Omega = 2 * atan2( s1 Â· (s2 Ã s3), 1 + s1Â·s2 + s2Â·s3 + s3Â·s1 )\n    \"\"\"\n    num = np.dot(s1, np.cross(s2, s3))\n    den = 1.0 + np.dot(s1, s2) + np.dot(s2, s3) + np.dot(s3, s1)\n    return 2.0 * np.arctan2(num, den)\n\ndef compute_Nsk(spins):\n    \"\"\"\n    Compute N_sk by summing oriented solid angles over a CCW triangular\n    decomposition of the periodic square lattice.\n    spins: array of shape (Nx, Ny, 3), unit vectors at lattice sites.\n    \"\"\"\n    Nx, Ny, _ = spins.shape\n    total_omega = 0.0\n    # Iterate over cells and split each into two CCW triangles\n    for i in range(Nx):\n        ip = (i + 1) % Nx\n        for j in range(Ny):\n            jp = (j + 1) % Ny\n            # Vertices\n            s00 = spins[i, j]\n            s10 = spins[ip, j]\n            s11 = spins[ip, jp]\n            s01 = spins[i, jp]\n            # Triangle 1: (i,j) - (i+1,j) - (i+1,j+1)  CCW\n            omega1 = solid_angle(s00, s10, s11)\n            # Triangle 2: (i,j) - (i+1,j+1) - (i,j+1)  CCW\n            omega2 = solid_angle(s00, s11, s01)\n            total_omega += (omega1 + omega2)\n    Nsk = total_omega / (4.0 * np.pi)\n    return Nsk\n\ndef normalize_field(spins):\n    \"\"\"\n    Normalize the spin field to unit length at every site.\n    \"\"\"\n    norms = np.linalg.norm(spins, axis=2, keepdims=True)\n    # Avoid division by zero by setting zero norms to 1 (should not occur)\n    norms[norms == 0.0] = 1.0\n    return spins / norms\n\ndef neel_skyrmion_field(Nx, Ny, L, center, R, lam):\n    \"\"\"\n    Construct a NÃ©el-type skyrmion magnetization field on a periodic grid.\n    The in-plane component points radially and the profile is\n        f(r) = 2 * arctan( exp( (R - r)/lam ) )\n    Field:\n        n = ( sin f(r) * cos(theta), sin f(r) * sin(theta), cos f(r) )\n    \"\"\"\n    x0, y0 = center\n    # Grid coordinates\n    xs = (np.arange(Nx) * L) / Nx\n    ys = (np.arange(Ny) * L) / Ny\n    X, Y = np.meshgrid(xs, ys, indexing='ij')\n    dx = X - x0\n    dy = Y - y0\n    # Account for periodic wrap so r is shortest distance on torus\n    # Map dx, dy into [-L/2, L/2)\n    dx = (dx + 0.5 * L) % L - 0.5 * L\n    dy = (dy + 0.5 * L) % L - 0.5 * L\n    r = np.sqrt(dx*dx + dy*dy)\n    theta = np.arctan2(dy, dx)\n    f = 2.0 * np.arctan(np.exp((R - r) / lam))\n    sinf = np.sin(f)\n    cosf = np.cos(f)\n    nx = sinf * np.cos(theta)\n    ny = sinf * np.sin(theta)\n    nz = cosf\n    spins = np.stack([nx, ny, nz], axis=2)\n    return normalize_field(spins)\n\ndef uniform_field(Nx, Ny, direction=(0.0, 0.0, 1.0)):\n    \"\"\"\n    Construct a uniform magnetization field pointing in 'direction'.\n    \"\"\"\n    spins = np.zeros((Nx, Ny, 3), dtype=float)\n    spins[:, :, 0] = direction[0]\n    spins[:, :, 1] = direction[1]\n    spins[:, :, 2] = direction[2]\n    return normalize_field(spins)\n\ndef noisy_uniform_field(Nx, Ny, eps=0.05, seed=12345, direction=(0.0, 0.0, 1.0)):\n    \"\"\"\n    Construct a weakly disordered ferromagnet by adding small random noise\n    to a uniform direction and renormalizing.\n    \"\"\"\n    rng = np.random.default_rng(seed)\n    noise = rng.uniform(low=-eps, high=eps, size=(Nx, Ny, 3))\n    base = np.zeros((Nx, Ny, 3), dtype=float)\n    base[:, :, 0] = direction[0]\n    base[:, :, 1] = direction[1]\n    base[:, :, 2] = direction[2]\n    spins = base + noise\n    return normalize_field(spins)\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Test case 1: Single NÃ©el skyrmion, periodic grid\n        (\"skyrmion\", {\"Nx\": 128, \"Ny\": 128, \"L\": 1.0, \"center\": (0.5, 0.5), \"R\": 0.2, \"lam\": 0.03, \"invert\": False}),\n        # Test case 2: Uniform ferromagnet up\n        (\"uniform\", {\"Nx\": 64, \"Ny\": 64, \"L\": 1.0, \"direction\": (0.0, 0.0, 1.0)}),\n        # Test case 3: Skyrmion with opposite topological charge (field negated),\n        (\"skyrmion\", {\"Nx\": 128, \"Ny\": 128, \"L\": 1.0, \"center\": (0.35, 0.5), \"R\": 0.2, \"lam\": 0.03, \"invert\": True}),\n        # Test case 4: Weakly disordered ferromagnet\n        (\"noisy_uniform\", {\"Nx\": 64, \"Ny\": 64, \"L\": 1.0, \"eps\": 0.05, \"seed\": 2023, \"direction\": (0.0, 0.0, 1.0)}),\n    ]\n\n    results = []\n    for kind, params in test_cases:\n        if kind == \"skyrmion\":\n            Nx = params[\"Nx\"]; Ny = params[\"Ny\"]; L = params[\"L\"]\n            center = params[\"center\"]; R = params[\"R\"]; lam = params[\"lam\"]\n            invert = params[\"invert\"]\n            spins = neel_skyrmion_field(Nx, Ny, L, center, R, lam)\n            if invert:\n                spins = -spins\n            Nsk = compute_Nsk(spins)\n            results.append(round(float(Nsk), 6))\n        elif kind == \"uniform\":\n            Nx = params[\"Nx\"]; Ny = params[\"Ny\"]\n            direction = params.get(\"direction\", (0.0, 0.0, 1.0))\n            spins = uniform_field(Nx, Ny, direction=direction)\n            Nsk = compute_Nsk(spins)\n            results.append(round(float(Nsk), 6))\n        elif kind == \"noisy_uniform\":\n            Nx = params[\"Nx\"]; Ny = params[\"Ny\"]\n            eps = params[\"eps\"]; seed = params[\"seed\"]\n            direction = params.get(\"direction\", (0.0, 0.0, 1.0))\n            spins = noisy_uniform_field(Nx, Ny, eps=eps, seed=seed, direction=direction)\n            Nsk = compute_Nsk(spins)\n            results.append(round(float(Nsk), 6))\n        else:\n            results.append(float('nan'))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(lambda x: ('{:.6f}'.format(x) if isinstance(x, float) else str(x)), results))}]\")\n\nsolve()\n```", "id": "3003666"}, {"introduction": "Magnetic skyrmions are not merely static objects; they exhibit rich and unique dynamics governed by their topology. A key consequence is the presence of a gyrotropic force, described by Thiele's equation, which acts perpendicular to a skyrmion's velocity and is proportional to its topological charge $Q$. This exercise explores the fundamental \"gyrotropic mode\" of a skyrmion confined in a potential, revealing how its topological nature dictates its response to external forces [@problem_id:3003735]. This derivation highlights that a skyrmion's dynamics are fundamentally different from those of a conventional massive particle, being dominated by its topological properties instead of inertia.", "problem": "Consider a two-dimensional ultrathin ferromagnetic film of thickness $t$ and saturation magnetization $M_s$ that hosts an isolated skyrmion with topological charge $Q=-1$. Depending on the form of the DzyaloshinskiiâMoriya interaction (DMI), the equilibrium texture is either a NÃ©el skyrmion (interfacial DMI) or a Bloch skyrmion (bulk DMI). Assume the static skyrmion profile is radially symmetric, and the film is otherwise homogeneous and isotropic. The dynamics of the unit magnetization field $\\mathbf{m}(\\mathbf{r},t)$ obey the dissipationless LandauâLifshitz equation,\n$$\n\\partial_t \\mathbf{m}(\\mathbf{r},t) \\;=\\; -\\gamma\\, \\mathbf{m}(\\mathbf{r},t) \\times \\mathbf{H}_{\\mathrm{eff}}(\\mathbf{r},t),\n$$\nwhere $\\gamma0$ is the (unsigned) gyromagnetic ratio and $\\mathbf{H}_{\\mathrm{eff}}(\\mathbf{r},t)$ is the effective magnetic field derived from the micromagnetic energy. Consider small-amplitude spin-wave excitations generated by rigid translations of the skyrmion core, described by a collective coordinate $\\mathbf{R}(t)=(X(t),Y(t))$ such that $\\mathbf{m}(\\mathbf{r},t)\\approx \\mathbf{m}_0(\\mathbf{r}-\\mathbf{R}(t))$ with $\\mathbf{m}_0$ the static skyrmion texture. Suppose the skyrmion experiences an isotropic weak pinning that can be modeled by a harmonic confinement potential $U(\\mathbf{R})=\\tfrac{1}{2}\\kappa\\,(X^2+Y^2)$, with stiffness $\\kappa0$ independent of the helicity of the skyrmion. Using linearization of the LandauâLifshitz dynamics about $\\mathbf{m}_0$ and the rigid-translational ansatz, derive the equations of motion for $\\mathbf{R}(t)$ and obtain the gyrotropic eigenfrequency associated with these translational modes. The gyrovector $\\mathbf{G}$ entering the dynamics is defined in terms of the static texture by\n$$\n\\mathbf{G} \\;=\\; -\\frac{M_s t}{\\gamma} \\int \\mathrm{d}^2 r \\;\\mathbf{m}_0(\\mathbf{r}) \\cdot \\left(\\partial_x \\mathbf{m}_0(\\mathbf{r}) \\times \\partial_y \\mathbf{m}_0(\\mathbf{r})\\right)\\,\\hat{\\mathbf{z}},\n$$\nwhich for a skyrmion reduces to $\\mathbf{G} = -4\\pi Q\\,\\frac{M_s t}{\\gamma}\\,\\hat{\\mathbf{z}}$. Under the stated assumptions, compare the spin-wave spectra around NÃ©el and Bloch skyrmions and identify the symmetry-protected gyrotropic modes. Then, compute the common gyrotropic eigenfrequency in closed form as a function of $\\kappa$, $\\gamma$, $M_s$, and $t$. Express the final frequency in radians per second. Do not provide any numerical evaluation and do not round; your final answer must be a single closed-form analytic expression.", "solution": "The dynamics of the skyrmion's center-of-mass position, or collective coordinate $\\mathbf{R}(t)$, can be derived from the LandauâLifshitz equation using the rigid-translational ansatz. This procedure leads to the well-known Thiele's equation. For a dissipationless system, Thiele's equation takes the form:\n$$\n\\mathbf{G} \\times \\frac{\\mathrm{d}\\mathbf{R}}{\\mathrm{d}t} + \\mathbf{F}_{\\text{ext}} = \\mathbf{0}\n$$\nwhere $\\mathbf{G}$ is the gyrovector and $\\mathbf{F}_{\\text{ext}}$ is the total external force acting on the skyrmion. In this problem, the only force is due to the harmonic pinning potential $U(\\mathbf{R})$. The force is conservative and can be calculated as the negative gradient of the potential:\n$$\n\\mathbf{F}_{\\text{ext}} = -\\nabla_{\\mathbf{R}} U(\\mathbf{R}) = -\\nabla_{\\mathbf{R}} \\left( \\frac{1}{2}\\kappa(X^2+Y^2) \\right)\n$$\nEvaluating the gradient gives:\n$$\n\\mathbf{F}_{\\text{ext}} = - \\left( \\frac{\\partial U}{\\partial X}\\hat{\\mathbf{x}} + \\frac{\\partial U}{\\partial Y}\\hat{\\mathbf{y}} \\right) = - (\\kappa X \\hat{\\mathbf{x}} + \\kappa Y \\hat{\\mathbf{y}}) = -\\kappa \\mathbf{R}\n$$\nThe gyrovector $\\mathbf{G}$ is given as $\\mathbf{G} = -4\\pi Q\\,\\frac{M_s t}{\\gamma}\\,\\hat{\\mathbf{z}}$. The problem specifies a skyrmion with topological charge $Q=-1$. Substituting this value, we get:\n$$\n\\mathbf{G} = -4\\pi (-1)\\,\\frac{M_s t}{\\gamma}\\,\\hat{\\mathbf{z}} = 4\\pi \\frac{M_s t}{\\gamma}\\,\\hat{\\mathbf{z}}\n$$\nLet's denote the magnitude of the gyrovector in the $\\hat{\\mathbf{z}}$-direction as $G_z = 4\\pi \\frac{M_s t}{\\gamma}$. Since $\\gamma$, $M_s$, and $t$ are all positive constants, $G_z  0$.\n\nNow, we substitute the expressions for $\\mathbf{G}$ and $\\mathbf{F}_{\\text{ext}}$ into Thiele's equation:\n$$\n\\left(G_z \\hat{\\mathbf{z}}\\right) \\times \\left(\\frac{\\mathrm{d}X}{\\mathrm{d}t}\\hat{\\mathbf{x}} + \\frac{\\mathrm{d}Y}{\\mathrm{d}t}\\hat{\\mathbf{y}}\\right) - \\kappa(X\\hat{\\mathbf{x}} + Y\\hat{\\mathbf{y}}) = \\mathbf{0}\n$$\nWe evaluate the cross product:\n$$\nG_z \\left( \\dot{X}(\\hat{\\mathbf{z}}\\times\\hat{\\mathbf{x}}) + \\dot{Y}(\\hat{\\mathbf{z}}\\times\\hat{\\mathbf{y}}) \\right) - \\kappa X\\hat{\\mathbf{x}} - \\kappa Y\\hat{\\mathbf{y}} = \\mathbf{0}\n$$\nUsing the cyclic relations for Cartesian unit vectors, $\\hat{\\mathbf{z}}\\times\\hat{\\mathbf{x}} = \\hat{\\mathbf{y}}$ and $\\hat{\\mathbf{z}}\\times\\hat{\\mathbf{y}} = -\\hat{\\mathbf{x}}$, the equation becomes:\n$$\nG_z \\left( \\dot{X}\\hat{\\mathbf{y}} - \\dot{Y}\\hat{\\mathbf{x}} \\right) - \\kappa X\\hat{\\mathbf{x}} - \\kappa Y\\hat{\\mathbf{y}} = \\mathbf{0}\n$$\nSeparating the equation into its $\\hat{\\mathbf{x}}$ and $\\hat{\\mathbf{y}}$ components gives a system of two coupled first-order linear differential equations for $X(t)$ and $Y(t)$:\n$$\n\\begin{cases}\n-G_z \\dot{Y} - \\kappa X = 0 \\\\\nG_z \\dot{X} - \\kappa Y = 0\n\\end{cases}\n$$\nThese can be rearranged as:\n$$\n\\dot{X} = \\frac{\\kappa}{G_z} Y\n$$\n$$\n\\dot{Y} = -\\frac{\\kappa}{G_z} X\n$$\nTo find the eigenfrequency of these translational modes, we can differentiate the first equation with respect to time and substitute the second equation into it:\n$$\n\\ddot{X} = \\frac{\\kappa}{G_z} \\dot{Y} = \\frac{\\kappa}{G_z} \\left(-\\frac{\\kappa}{G_z} X\\right) = -\\left(\\frac{\\kappa}{G_z}\\right)^2 X\n$$\nThis gives the equation for a simple harmonic oscillator:\n$$\n\\ddot{X} + \\left(\\frac{\\kappa}{G_z}\\right)^2 X = 0\n$$\nThe angular frequency of this oscillation, which is the gyrotropic eigenfrequency $\\omega_{\\text{gyro}}$, is given by:\n$$\n\\omega_{\\text{gyro}} = \\left| \\frac{\\kappa}{G_z} \\right|\n$$\nSince both $\\kappa$ and $G_z$ are positive, we can write:\n$$\n\\omega_{\\text{gyro}} = \\frac{\\kappa}{G_z}\n$$\nThe problem asks to compare the spectra for NÃ©el and Bloch skyrmions. The gyrotropic modes are precisely the translational modes we have analyzed. Their dynamics are governed by the gyrovector $\\mathbf{G}$ and the external potential. The problem states that the expression for $\\mathbf{G}$ depends only on the topological charge $Q$, and that the pinning potential stiffness $\\kappa$ is independent of the skyrmion's helicity (i.e., whether it is of NÃ©el or Bloch type). Consequently, the derived equations of motion for the collective coordinate $\\mathbf{R}$ are identical for both NÃ©el and Bloch skyrmions. This means that the gyrotropic eigenfrequency is a common feature for both skyrmion types under these assumptions. This mode is often referred to as a \"symmetry-protected\" or topologically governed mode because its existence is intrinsically linked to the non-zero topological charge ($Q\\neq 0$, which implies $G_z \\neq 0$). Other modes of excitation, such as deformations (breathing, elliptical distortions), would depend on the specific details of the micromagnetic interactions (e.g., the DMI constant, exchange stiffness), and their frequencies would differ between NÃ©el and Bloch skyrmions.\n\nFinally, we compute the common gyrotropic eigenfrequency in closed form by substituting the expression for $G_z$:\n$$\n\\omega_{\\text{gyro}} = \\frac{\\kappa}{4\\pi \\frac{M_s t}{\\gamma}}\n$$\nThis simplifies to the final expression for the gyrotropic eigenfrequency in radians per second:\n$$\n\\omega_{\\text{gyro}} = \\frac{\\kappa \\gamma}{4\\pi M_s t}\n$$", "answer": "$$\n\\boxed{\\frac{\\kappa \\gamma}{4\\pi M_s t}}\n$$", "id": "3003735"}]}