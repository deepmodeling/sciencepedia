{"hands_on_practices": [{"introduction": "The reciprocal lattice is the natural space for describing wave phenomena in crystals, and the Brillouin Zone is its fundamental building block. This first exercise provides a foundational, step-by-step guide to constructing the first Brillouin Zone for the simplest case, the simple cubic lattice. By deriving the Bragg plane equations from the Wigner-Seitz cell definition, you will solidify your understanding of this crucial geometric structure and its direct relationship to diffraction conditions [@problem_id:2974106].", "problem": "Consider a crystal with a simple cubic direct lattice of lattice constant $a$, with primitive direct lattice vectors $\\mathbf{a}_{1}=a\\,\\hat{\\mathbf{x}}$, $\\mathbf{a}_{2}=a\\,\\hat{\\mathbf{y}}$, and $\\mathbf{a}_{3}=a\\,\\hat{\\mathbf{z}}$. The reciprocal lattice is defined by the condition $\\mathbf{a}_{i}\\cdot\\mathbf{b}_{j}=2\\pi\\,\\delta_{ij}$. The first Brillouin zone (BZ) is defined as the Wignerâ€“Seitz cell in reciprocal space: the set of $\\mathbf{k}$ that are closer to the origin than to any other reciprocal lattice point.\n\nStarting from these definitions and the kinematic Bragg condition interpreted geometrically as the perpendicular bisectors (Bragg planes) between the origin and reciprocal lattice points $\\mathbf{G}$, do the following:\n\n$1.$ Determine the primitive reciprocal lattice vectors $\\mathbf{b}_{1}$, $\\mathbf{b}_{2}$, and $\\mathbf{b}_{3}$.\n\n$2.$ Using only the definition of a Bragg plane as the locus of points $\\mathbf{k}$ equidistant (in Euclidean metric) from the origin and a given reciprocal lattice point $\\mathbf{G}$, derive the general equation of the Bragg plane perpendicular to $\\mathbf{G}$ that bisects the segment from the origin to $\\mathbf{G}$.\n\n$3.$ Specialize this to the set of shortest nonzero reciprocal lattice vectors for the simple cubic reciprocal lattice and write explicitly the equations of all distinct Bragg planes determined by these vectors.\n\n$4.$ Prove that the intersection of the corresponding half-spaces that contain the origin is a convex polyhedron and identify its geometric shape. Explain why this intersection is precisely the boundary of the first Brillouin zone as defined above.\n\n$5.$ Compute the $k$-space volume $V_{\\mathrm{BZ}}$ of this first Brillouin zone in terms of $a$.\n\nProvide as your final answer only the analytic expression for $V_{\\mathrm{BZ}}$ in terms of $a$ and $\\pi$. Express the final $k$-space volume in reciprocal cubic meters $\\left(\\mathrm{m}^{-3}\\right)$, but omit units in the final boxed answer. No numerical evaluation or rounding is required.", "solution": "The problem is assessed to be valid. It is a well-posed, scientifically grounded, and standard problem in solid-state physics that tests fundamental knowledge of reciprocal space and Brillouin zones. The definitions are clear, and the tasks lead to a unique, verifiable solution. We proceed with the solution.\n\nThe solution is presented in five parts, following the structure of the problem statement.\n\n$1.$ Determination of the primitive reciprocal lattice vectors.\n\nThe primitive reciprocal lattice vectors $\\mathbf{b}_{1}$, $\\mathbf{b}_{2}$, and $\\mathbf{b}_{3}$ are defined by their relationship to the primitive direct lattice vectors $\\mathbf{a}_{1}$, $\\mathbf{a}_{2}$, and $\\mathbf{a}_{3}$ via the condition $\\mathbf{a}_{i} \\cdot \\mathbf{b}_{j} = 2\\pi\\delta_{ij}$, where $\\delta_{ij}$ is the Kronecker delta.\nThe given primitive direct lattice vectors for the simple cubic lattice are:\n$$ \\mathbf{a}_{1} = a\\,\\hat{\\mathbf{x}} $$\n$$ \\mathbf{a}_{2} = a\\,\\hat{\\mathbf{y}} $$\n$$ \\mathbf{a}_{3} = a\\,\\hat{\\mathbf{z}} $$\nLet us find $\\mathbf{b}_{1}$. We express it in the general form $\\mathbf{b}_{1} = b_{1x}\\hat{\\mathbf{x}} + b_{1y}\\hat{\\mathbf{y}} + b_{1z}\\hat{\\mathbf{z}}$.\nApplying the defining conditions:\nFor $j=1$: $\\mathbf{a}_{1} \\cdot \\mathbf{b}_{1} = (a\\,\\hat{\\mathbf{x}}) \\cdot (b_{1x}\\hat{\\mathbf{x}} + b_{1y}\\hat{\\mathbf{y}} + b_{1z}\\hat{\\mathbf{z}}) = a b_{1x} = 2\\pi$. This gives $b_{1x} = \\frac{2\\pi}{a}$.\nFor $j=2$: $\\mathbf{a}_{2} \\cdot \\mathbf{b}_{1} = (a\\,\\hat{\\mathbf{y}}) \\cdot (b_{1x}\\hat{\\mathbf{x}} + b_{1y}\\hat{\\mathbf{y}} + b_{1z}\\hat{\\mathbf{z}}) = a b_{1y} = 0$. This gives $b_{1y} = 0$.\nFor $j=3$: $\\mathbf{a}_{3} \\cdot \\mathbf{b}_{1} = (a\\,\\hat{\\mathbf{z}}) \\cdot (b_{1x}\\hat{\\mathbf{x}} + b_{1y}\\hat{\\mathbf{y}} + b_{1z}\\hat{\\mathbf{z}}) = a b_{1z} = 0$. This gives $b_{1z} = 0$.\nThus, the first primitive reciprocal lattice vector is $\\mathbf{b}_{1} = \\frac{2\\pi}{a}\\hat{\\mathbf{x}}$.\n\nDue to the cubic symmetry of the direct lattice, the other primitive reciprocal vectors can be found by cyclic permutation of the indices or by repeating the calculation.\nFor $\\mathbf{b}_{2}$:\n$\\mathbf{a}_{1} \\cdot \\mathbf{b}_{2} = 0 \\implies b_{2x} = 0$.\n$\\mathbf{a}_{2} \\cdot \\mathbf{b}_{2} = 2\\pi \\implies a b_{2y} = 2\\pi \\implies b_{2y} = \\frac{2\\pi}{a}$.\n$\\mathbf{a}_{3} \\cdot \\mathbf{b}_{2} = 0 \\implies b_{2z} = 0$.\nSo, $\\mathbf{b}_{2} = \\frac{2\\pi}{a}\\hat{\\mathbf{y}}$.\n\nFor $\\mathbf{b}_{3}$:\n$\\mathbf{a}_{1} \\cdot \\mathbf{b}_{3} = 0 \\implies b_{3x} = 0$.\n$\\mathbf{a}_{2} \\cdot \\mathbf{b}_{3} = 0 \\implies b_{3y} = 0$.\n$\\mathbf{a}_{3} \\cdot \\mathbf{b}_{3} = 2\\pi \\implies a b_{3z} = 2\\pi \\implies b_{3z} = \\frac{2\\pi}{a}$.\nSo, $\\mathbf{b}_{3} = \\frac{2\\pi}{a}\\hat{\\mathbf{z}}$.\n\nThe reciprocal lattice is also a simple cubic lattice with lattice constant $\\frac{2\\pi}{a}$.\n\n$2.$ Derivation of the general equation of a Bragg plane.\n\nA Bragg plane is defined as the locus of points $\\mathbf{k}$ in reciprocal space that are equidistant from the origin ($O$) and a specific reciprocal lattice point $\\mathbf{G}$. Let the position vector of a point on the plane be $\\mathbf{k}$.\nThe distance from the origin to $\\mathbf{k}$ is $|\\mathbf{k}|$.\nThe distance from $\\mathbf{G}$ to $\\mathbf{k}$ is $|\\mathbf{k} - \\mathbf{G}|$.\nThe condition is $|\\mathbf{k}| = |\\mathbf{k} - \\mathbf{G}|$.\nTo eliminate the square roots, we square both sides:\n$$ |\\mathbf{k}|^2 = |\\mathbf{k} - \\mathbf{G}|^2 $$\nExpanding the right-hand side using the dot product, $|\\mathbf{v}|^2 = \\mathbf{v} \\cdot \\mathbf{v}$:\n$$ \\mathbf{k} \\cdot \\mathbf{k} = (\\mathbf{k} - \\mathbf{G}) \\cdot (\\mathbf{k} - \\mathbf{G}) $$\n$$ \\mathbf{k} \\cdot \\mathbf{k} = \\mathbf{k} \\cdot \\mathbf{k} - 2(\\mathbf{k} \\cdot \\mathbf{G}) + \\mathbf{G} \\cdot \\mathbf{G} $$\nLet $k^2 = \\mathbf{k} \\cdot \\mathbf{k}$ and $G^2 = \\mathbf{G} \\cdot \\mathbf{G}$.\n$$ k^2 = k^2 - 2(\\mathbf{k} \\cdot \\mathbf{G}) + G^2 $$\nSubtracting $k^2$ from both sides gives:\n$$ 0 = -2(\\mathbf{k} \\cdot \\mathbf{G}) + G^2 $$\nRearranging gives the general equation of the Bragg plane:\n$$ 2(\\mathbf{k} \\cdot \\mathbf{G}) = G^2 $$\nThis equation describes a plane perpendicular to the vector $\\mathbf{G}$ and passing through the point $\\frac{1}{2}\\mathbf{G}$, thus bisecting the segment connecting the origin to $\\mathbf{G}$.\n\n$3.$ Equations of Bragg planes for the shortest nonzero reciprocal lattice vectors.\n\nA general reciprocal lattice vector is of the form $\\mathbf{G} = n_1\\mathbf{b}_1 + n_2\\mathbf{b}_2 + n_3\\mathbf{b}_3$, where $n_1, n_2, n_3$ are integers. For our simple cubic reciprocal lattice, this is:\n$$ \\mathbf{G} = \\frac{2\\pi}{a}(n_1\\hat{\\mathbf{x}} + n_2\\hat{\\mathbf{y}} + n_3\\hat{\\mathbf{z}}) $$\nThe shortest nonzero vectors $\\mathbf{G}$ are those with the smallest magnitude, which corresponds to minimizing $n_1^2 + n_2^2 + n_3^2$ for nonzero integer triplets $(n_1, n_2, n_3)$. The minimum value is $1$. This occurs for the following six vectors:\n$(\\pm 1, 0, 0) \\implies \\mathbf{G} = \\pm\\frac{2\\pi}{a}\\hat{\\mathbf{x}}$\n$(0, \\pm 1, 0) \\implies \\mathbf{G} = \\pm\\frac{2\\pi}{a}\\hat{\\mathbf{y}}$\n$(0, 0, \\pm 1) \\implies \\mathbf{G} = \\pm\\frac{2\\pi}{a}\\hat{\\mathbf{z}}$\nFor all these vectors, the squared magnitude is $G^2 = \\left(\\frac{2\\pi}{a}\\right)^2$. Let us find the equation of the plane for each. Let $\\mathbf{k} = k_x\\hat{\\mathbf{x}} + k_y\\hat{\\mathbf{y}} + k_z\\hat{\\mathbf{z}}$.\n\nFor $\\mathbf{G} = \\frac{2\\pi}{a}\\hat{\\mathbf{x}}$:\n$2(\\mathbf{k} \\cdot \\mathbf{G}) = G^2 \\implies 2\\left(k_x \\frac{2\\pi}{a}\\right) = \\left(\\frac{2\\pi}{a}\\right)^2 \\implies 2k_x = \\frac{2\\pi}{a} \\implies k_x = \\frac{\\pi}{a}$.\n\nFor $\\mathbf{G} = -\\frac{2\\pi}{a}\\hat{\\mathbf{x}}$:\n$2(\\mathbf{k} \\cdot \\mathbf{G}) = G^2 \\implies 2\\left(-k_x \\frac{2\\pi}{a}\\right) = \\left(\\frac{2\\pi}{a}\\right)^2 \\implies -2k_x = \\frac{2\\pi}{a} \\implies k_x = -\\frac{\\pi}{a}$.\n\nBy symmetry, for the vectors in the $\\hat{\\mathbf{y}}$ and $\\hat{\\mathbf{z}}$ directions, we obtain the remaining four plane equations. The full set of six distinct Bragg planes determined by the shortest nonzero reciprocal lattice vectors is:\n$k_x = \\frac{\\pi}{a}$, $k_x = -\\frac{\\pi}{a}$\n$k_y = \\frac{\\pi}{a}$, $k_y = -\\frac{\\pi}{a}$\n$k_z = \\frac{\\pi}{a}$, $k_z = -\\frac{\\pi}{a}$\n\n$4.$ Geometric shape and identification as the first Brillouin zone.\n\nThe first Brillouin zone (BZ) is defined as the Wigner-Seitz cell of the reciprocal lattice, which is the set of all points $\\mathbf{k}$ closer to the origin than to any other reciprocal lattice point $\\mathbf{G} \\neq 0$:\n$$ |\\mathbf{k}| < |\\mathbf{k} - \\mathbf{G}| \\quad \\forall \\mathbf{G} \\neq 0 $$\nAs shown in part 2, squaring this inequality and simplifying gives $2(\\mathbf{k} \\cdot \\mathbf{G}) < G^2$.\nEach such inequality defines an open half-space that contains the origin. The first BZ is the intersection of all these half-spaces, one for each $\\mathbf{G} \\neq 0$:\n$$ \\mathrm{BZ} = \\bigcap_{\\mathbf{G} \\neq 0} \\{ \\mathbf{k} \\in \\mathbb{R}^3 \\mid 2(\\mathbf{k} \\cdot \\mathbf{G}) < G^2 \\} $$\nA half-space is a convex set. The intersection of any collection of convex sets is also a convex set. Therefore, the first BZ is a convex polyhedron.\n\nThe boundary of this region is formed by the set of planes $2(\\mathbf{k} \\cdot \\mathbf{G}) = G^2$ that are not made redundant by others. These are precisely the Bragg planes corresponding to the shortest reciprocal lattice vectors. For any point $\\mathbf{k}$ inside the region bounded by these \"inner\" planes, the inequality $2(\\mathbf{k} \\cdot \\mathbf{G'}) < G'^2$ will automatically be satisfied for any \"outer\" plane corresponding to a larger vector $\\mathbf{G'}$.\nIn our case, the six planes derived in part 3, $k_x = \\pm \\frac{\\pi}{a}$, $k_y = \\pm \\frac{\\pi}{a}$, and $k_z = \\pm \\frac{\\pi}{a}$, form the boundaries. These six planes define a cube centered at the origin with vertices at $(\\pm \\frac{\\pi}{a}, \\pm \\frac{\\pi}{a}, \\pm \\frac{\\pi}{a})$. The region they enclose is the set of points $\\mathbf{k}$ such that $-\\frac{\\pi}{a} < k_x < \\frac{\\pi}{a}$, $-\\frac{\\pi}{a} < k_y < \\frac{\\pi}{a}$, and $-\\frac{\\pi}{a} < k_z < \\frac{\\pi}{a}$. This cube is the first Brillouin zone for the simple cubic lattice.\n\n$5.$ Computation of the k-space volume of the first Brillouin zone.\n\nThe first BZ is a cube in k-space. The side length $L$ of this cube is the distance between the parallel planes, for example, between $k_x = \\frac{\\pi}{a}$ and $k_x = -\\frac{\\pi}{a}$.\n$$ L = \\frac{\\pi}{a} - \\left(-\\frac{\\pi}{a}\\right) = \\frac{2\\pi}{a} $$\nThe volume $V_{\\mathrm{BZ}}$ of this cube is $L^3$:\n$$ V_{\\mathrm{BZ}} = \\left(\\frac{2\\pi}{a}\\right)^3 = \\frac{8\\pi^3}{a^3} $$\nThis result can be verified by calculating the volume of the primitive cell of the reciprocal lattice, which must be equal to the volume of the first BZ. The volume of the parallelepiped spanned by $\\mathbf{b}_1, \\mathbf{b}_2, \\mathbf{b}_3$ is given by the scalar triple product:\n$$ V_{\\mathrm{recip}} = |\\mathbf{b}_1 \\cdot (\\mathbf{b}_2 \\times \\mathbf{b}_3)| $$\nSubstituting the vectors from part 1:\n$$ \\mathbf{b}_2 \\times \\mathbf{b}_3 = \\left(\\frac{2\\pi}{a}\\hat{\\mathbf{y}}\\right) \\times \\left(\\frac{2\\pi}{a}\\hat{\\mathbf{z}}\\right) = \\left(\\frac{2\\pi}{a}\\right)^2 (\\hat{\\mathbf{y}} \\times \\hat{\\mathbf{z}}) = \\left(\\frac{2\\pi}{a}\\right)^2 \\hat{\\mathbf{x}} $$\n$$ V_{\\mathrm{recip}} = \\left| \\left(\\frac{2\\pi}{a}\\hat{\\mathbf{x}}\\right) \\cdot \\left( \\left(\\frac{2\\pi}{a}\\right)^2 \\hat{\\mathbf{x}} \\right) \\right| = \\left(\\frac{2\\pi}{a}\\right)^3 = \\frac{8\\pi^3}{a^3} $$\nThe results match, confirming the volume of the first Brillouin zone.", "answer": "$$ \\boxed{\\frac{8\\pi^{3}}{a^{3}}} $$", "id": "2974106"}, {"introduction": "The geometric boundaries of the Brillouin Zone have profound physical consequences for electrons moving within a crystal. This practice explores the origin of the electronic band gap using the nearly-free electron model, a cornerstone of solid-state theory. By applying degenerate perturbation theory at the zone boundary, you will directly calculate how a weak periodic potential splits the free-electron energy spectrum, revealing the essential physics behind metals, semiconductors, and insulators [@problem_id:2974077].", "problem": "An electron of mass $m$ moves in one spatial dimension under a weak periodic potential $V(x)$ with lattice constant $a$, where $V(x)$ admits a Fourier expansion $V(x)=\\sum_{G} V_{G}\\exp(i G x)$ and the reciprocal lattice vectors are $G=2\\pi n/a$ with integer $n$. The unperturbed Hamiltonian is $H_{0}=p^{2}/(2m)$ with eigenstates $\\exp(i k x)$ and dispersion $E^{(0)}(k)=\\hbar^{2}k^{2}/(2m)$. Using only the time-independent SchrÃ¶dinger equation, Blochâ€™s theorem, and degenerate perturbation theory applied in a plane-wave basis, determine the direct band gap at the first Brillouin zone boundary $k=\\pm \\pi/a$ in the nearly-free electron regime, retaining only the minimal plane-wave subspace required to capture the leading splitting at the degeneracy. Express the final gap as a closed-form analytic expression in terms of the single Fourier coefficient $V_{2\\pi/a}$. Provide the final result as an analytic expression with no units and no numerical approximation.", "solution": "The problem asks for the direct band gap at the first Brillouin zone boundary for a one-dimensional system described by the nearly-free electron model. The solution will be derived using degenerate perturbation theory as specified.\n\nThe total Hamiltonian of the system is $H = H_0 + V(x)$, where the unperturbed Hamiltonian is $H_0 = \\frac{p^2}{2m} = -\\frac{\\hbar^2}{2m}\\frac{d^2}{dx^2}$ and $V(x)$ is a weak periodic potential with lattice constant $a$. The unperturbed eigenstates of $H_0$ are plane waves $\\psi_k(x) = \\frac{1}{\\sqrt{L}}\\exp(ikx)$, where $L$ is the length of the system, with corresponding energies $E^{(0)}(k) = \\frac{\\hbar^2 k^2}{2m}$.\n\nWe are interested in the electronic states at the boundary of the first Brillouin zone, which for a one-dimensional lattice of constant $a$ occurs at wavevectors $k = \\pm \\frac{\\pi}{a}$. Let us consider the state at $k_1 = \\frac{\\pi}{a}$. Its unperturbed energy is $E^{(0)}(k_1) = \\frac{\\hbar^2}{2m}(\\frac{\\pi}{a})^2$.\n\nAccording to Bloch's theorem, the eigenstates in a periodic potential can be expressed as a superposition of plane waves whose wavevectors differ by a reciprocal lattice vector, $G_n = \\frac{2\\pi n}{a}$ for integer $n$. A key insight of the nearly-free electron model is that the potential $V(x)$ will most strongly mix states whose unperturbed energies are degenerate or nearly degenerate. At the zone boundary $k_1 = \\frac{\\pi}{a}$, we search for another plane wave state $|k_2\\rangle$ that is degenerate with $|k_1\\rangle$. Let $k_2 = k_1 - G$ for some non-zero reciprocal lattice vector $G$. The simplest choice is $G = G_1 = \\frac{2\\pi}{a}$. This gives $k_2 = \\frac{\\pi}{a} - \\frac{2\\pi}{a} = -\\frac{\\pi}{a}$.\n\nLet's verify the degeneracy. The energy of the state with wavevector $k_2 = -\\frac{\\pi}{a}$ is $E^{(0)}(k_2) = \\frac{\\hbar^2}{2m}(-\\frac{\\pi}{a})^2 = \\frac{\\hbar^2}{2m}(\\frac{\\pi}{a})^2$. Thus, $E^{(0)}(k_1) = E^{(0)}(k_2)$, and the two states $|k_1\\rangle = |\\frac{\\pi}{a}\\rangle$ and $|k_2\\rangle = |-\\frac{\\pi}{a}\\rangle$ are degenerate in the absence of the potential.\n\nWe apply degenerate perturbation theory to determine how the perturbation $V(x)$ lifts this degeneracy. We restrict our analysis to the two-dimensional subspace spanned by these degenerate states, $\\{|\\frac{\\pi}{a}\\rangle, |-\\frac{\\pi}{a}\\rangle\\}$. We must construct and diagonalize the Hamiltonian matrix in this basis. The matrix elements are $H_{ij} = \\langle k_i | H_0 + V | k_j \\rangle$. Since these are eigenstates of $H_0$, this simplifies to $H_{ij} = E^{(0)}(k_i)\\delta_{ij} + V_{ij}$, where $V_{ij} = \\langle k_i | V | k_j \\rangle$.\n\nLet $E_B \\equiv E^{(0)}(\\frac{\\pi}{a}) = E^{(0)}(-\\frac{\\pi}{a})$. The Hamiltonian matrix is:\n$$\n\\mathbf{H} =\n\\begin{pmatrix}\nE_B + V_{11} & V_{12} \\\\\nV_{21} & E_B + V_{22}\n\\end{pmatrix}\n$$\nThe matrix elements of the potential are calculated using its Fourier expansion $V(x) = \\sum_{G} V_G \\exp(iGx)$. The normalized plane wave states are $\\psi_k(x) = \\frac{1}{\\sqrt{L}}\\exp(ikx)$.\n\nThe diagonal elements are:\n$V_{11} = \\langle \\frac{\\pi}{a} | V | \\frac{\\pi}{a} \\rangle = \\frac{1}{L} \\int_0^L \\exp(-i\\frac{\\pi}{a}x) \\left( \\sum_G V_G \\exp(iGx) \\right) \\exp(i\\frac{\\pi}{a}x) dx = \\frac{1}{L} \\int_0^L \\sum_G V_G \\exp(iGx) dx$.\nThis integral is non-zero only for $G=0$, yielding $V_{11} = V_0$.\nSimilarly, $V_{22} = \\langle -\\frac{\\pi}{a} | V | -\\frac{\\pi}{a} \\rangle = V_0$. $V_0$ is the average potential, which uniformly shifts all energy levels.\n\nThe off-diagonal elements are:\n$V_{12} = \\langle \\frac{\\pi}{a} | V | -\\frac{\\pi}{a} \\rangle = \\frac{1}{L} \\int_0^L \\exp(-i\\frac{\\pi}{a}x) \\left( \\sum_G V_G \\exp(iGx) \\right) \\exp(-i\\frac{\\pi}{a}x) dx = \\frac{1}{L} \\sum_G V_G \\int_0^L \\exp(i(G-\\frac{2\\pi}{a})x) dx$.\nThis integral is non-zero only when the exponent vanishes, i.e., $G = \\frac{2\\pi}{a}$. Thus, $V_{12} = V_{2\\pi/a}$.\n\n$V_{21} = \\langle -\\frac{\\pi}{a} | V | \\frac{\\pi}{a} \\rangle = \\frac{1}{L} \\int_0^L \\exp(i\\frac{\\pi}{a}x) \\left( \\sum_G V_G \\exp(iGx) \\right) \\exp(i\\frac{\\pi}{a}x) dx = \\frac{1}{L} \\sum_G V_G \\int_0^L \\exp(i(G+\\frac{2\\pi}{a})x) dx$.\nThis integral is non-zero only when $G = -\\frac{2\\pi}{a}$. Thus, $V_{21} = V_{-2\\pi/a}$.\n\nThe Hamiltonian operator must be Hermitian, which implies that the potential energy function $V(x)$ must be real-valued, $V(x) = V(x)^*$. This reality condition imposes a constraint on its Fourier coefficients: $V_{-G} = V_G^*$. Therefore, $V_{21} = V_{-2\\pi/a} = V_{2\\pi/a}^*$.\n\nThe Hamiltonian matrix in the basis $\\{|\\frac{\\pi}{a}\\rangle, |-\\frac{\\pi}{a}\\rangle\\}$ is:\n$$\n\\mathbf{H} =\n\\begin{pmatrix}\nE_B + V_0 & V_{2\\pi/a} \\\\\nV_{2\\pi/a}^* & E_B + V_0\n\\end{pmatrix}\n$$\nTo find the new energy eigenvalues $E$, we solve the secular equation $\\det(\\mathbf{H} - E\\mathbf{I}) = 0$:\n$$\n\\det\n\\begin{pmatrix}\nE_B + V_0 - E & V_{2\\pi/a} \\\\\nV_{2\\pi/a}^* & E_B + V_0 - E\n\\end{pmatrix}\n= 0\n$$\nThis gives the characteristic equation:\n$(E_B + V_0 - E)^2 - V_{2\\pi/a} V_{2\\pi/a}^* = 0$\n$(E_B + V_0 - E)^2 - |V_{2\\pi/a}|^2 = 0$\nTaking the square root of both sides, we get:\n$E_B + V_0 - E = \\pm |V_{2\\pi/a}|$\nThe two energy eigenvalues at the zone boundary are:\n$E_{\\pm} = E_B + V_0 \\pm |V_{2\\pi/a}|$.\n\nThe potential $V(x)$ has lifted the degeneracy, splitting the energy level $E_B$ into two distinct levels, $E_+$ and $E_-$. The energy difference between these two levels is the direct band gap, $E_g$, at the first Brillouin zone boundary.\n$E_g = E_+ - E_- = (E_B + V_0 + |V_{2\\pi/a}|) - (E_B + V_0 - |V_{2\\pi/a}|)$\n$E_g = 2|V_{2\\pi/a}|$\n\nThis result represents the magnitude of the energy splitting created by the first significant Fourier component of the periodic potential, which connects the degenerate free-electron states at the edge of the Brillouin zone.", "answer": "$$\n\\boxed{2|V_{2\\pi/a}|}\n$$", "id": "2974077"}, {"introduction": "In modern computational physics, integrating physical quantities over the entire Brillouin Zone is often necessary but computationally prohibitive. This hands-on coding exercise demonstrates how to exploit a crystal's point group symmetry to reduce this task to a much smaller, irreducible portion of the zone. Implementing this $k$-point mapping and calculating the corresponding symmetry weights is a critical skill for performing and understanding state-of-the-art electronic structure calculations [@problem_id:2804328].", "problem": "Implement a program that, for a simple cubic Bravais lattice, maps arbitrary crystal wave vectors to a canonical representative in the irreducible Brillouin zone wedge using point-group operations and computes symmetry weights based on the size of the star of each wave vector. The setting and constraints are as follows.\n\n- Use a simple cubic real-space lattice with lattice parameter $a=1$. The primitive reciprocal lattice vectors then have magnitude $2\\pi$ along the Cartesian axes, so all wave vectors are expressed in units of $1/a$.\n- Let the First Brillouin Zone (BZ) be the cubic region defined componentwise by $(-\\pi,\\pi]$. Folding a vector $\\mathbf{k}$ to the BZ means adding a reciprocal lattice vector $2\\pi \\,\\mathbf{n}$, with $\\mathbf{n}\\in\\mathbb{Z}^3$, componentwise, to obtain a unique representative in $(-\\pi,\\pi]$.\n- The point group to be used is the full octahedral symmetry group $O_h$ of the cube, realized as all $3\\times 3$ orthogonal integer matrices with exactly one nonzero entry in each row and column, each nonzero being $\\pm 1$. There are $48$ such signed permutation matrices, each of which acts on $\\mathbf{k}$ by left multiplication. Two wave vectors $\\mathbf{k}$ and $\\mathbf{k}'$ are symmetry-equivalent if there exists a group element $R\\in O_h$ and a reciprocal lattice vector $2\\pi\\,\\mathbf{n}$ such that $\\mathbf{k}'=R\\mathbf{k}+2\\pi\\,\\mathbf{n}$.\n- Define the irreducible wedge $\\mathcal{W}$ as the set of $\\mathbf{k}$ in the BZ that satisfy the inequalities $k_x\\ge k_y\\ge k_z\\ge 0$, including boundaries. A canonical representative of the symmetry orbit (the star) of $\\mathbf{k}$ is the unique element of its star that lies in $\\mathcal{W}$. If multiple images lie on shared boundaries, use lexicographic ordering on the triple $(k_x,k_y,k_z)$ to choose the smallest such triple. Use a numerical tolerance $\\epsilon=10^{-9}$ when testing inequalities and boundary equivalences.\n- For a given $\\mathbf{k}$, define its star $\\mathcal{S}(\\mathbf{k})=\\{\\mathrm{fold}_{\\mathrm{BZ}}(R\\mathbf{k})\\,:\\,R\\in O_h\\}$ where $\\mathrm{fold}_{\\mathrm{BZ}}$ denotes folding into $(-\\pi,\\pi]$ componentwise. Let $m(\\mathbf{k})$ be the cardinality of $\\mathcal{S}(\\mathbf{k})$ after identifying points equal within the tolerance $\\epsilon$. Define the star weight $w_{\\star}(\\mathbf{k})=1/m(\\mathbf{k})$. Also define the group-normalized weight $\\widetilde{w}(\\mathbf{k})=m(\\mathbf{k})/|O_h|$, where $|O_h|=48$.\n- Your program must:\n  - Generate all point-group operations in $O_h$ as signed permutation matrices.\n  - Implement folding into $(-\\pi,\\pi]$ with the convention that any component equal to $-\\pi$ within numerical tolerance is mapped to $+\\pi$.\n  - For each input $\\mathbf{k}$, compute its full star, identify $m(\\mathbf{k})$, choose the canonical representative $\\mathbf{k}_{\\mathrm{rep}}$ in $\\mathcal{W}$ using the rule above, and compute $w_{\\star}(\\mathbf{k})$ and $\\widetilde{w}(\\mathbf{k})$.\n\nFundamental base to rely upon:\n- The definition of the reciprocal lattice, the First Brillouin Zone, and point-group symmetries as orthogonal mappings preserving the lattice.\n- The equivalence relation $\\mathbf{k}\\sim R\\mathbf{k}+2\\pi\\,\\mathbf{n}$ with $R$ in the point group and $\\mathbf{n}$ an integer vector.\n- The orbit-stabilizer relation for a finite group $G$: for the orbit $\\mathcal{O}(\\mathbf{k})$ of a point and its little group $G_{\\mathbf{k}}=\\{R\\in G\\,:\\,\\mathrm{fold}_{\\mathrm{BZ}}(R\\mathbf{k})=\\mathrm{fold}_{\\mathrm{BZ}}(\\mathbf{k})\\}$, one has $|\\mathcal{O}(\\mathbf{k})|=|G|/|G_{\\mathbf{k}}|$.\n\nInput test suite:\n- Use the following five input wave vectors $\\mathbf{k}$, expressed in units of $1/a$:\n  - Case A: $\\mathbf{k}_A=\\big(0.7\\pi,\\,0.2\\pi,\\,-0.4\\pi\\big)$.\n  - Case B: $\\mathbf{k}_B=\\big(\\frac{\\pi}{4},\\,\\frac{\\pi}{4},\\,\\frac{\\pi}{6}\\big)$.\n  - Case C: $\\mathbf{k}_C=\\big(0,\\,0,\\,0\\big)$.\n  - Case D: $\\mathbf{k}_D=\\big(\\pi,\\,0.1\\pi,\\,0\\big)$.\n  - Case E: $\\mathbf{k}_E=\\big(\\pi,\\,\\pi,\\,\\pi\\big)$.\n\nRequired output and units:\n- For each case, output a list [$k_{\\mathrm{rep},x},\\,k_{\\mathrm{rep},y},\\,k_{\\mathrm{rep},z},\\,m,\\,w_{\\star},\\,\\widetilde{w}$], where $k_{\\mathrm{rep},x}$, $k_{\\mathrm{rep},y}$, and $k_{\\mathrm{rep},z}$ are the Cartesian components of $\\mathbf{k}_{\\mathrm{rep}}$ in units of $1/a$, $m$ is the integer multiplicity, $w_{\\star}$ and $\\widetilde{w}$ are floats as defined above. Round all floating-point outputs to $10$ decimal places.\n- Your program should produce a single line of output containing the results for the five cases in the order A, B, C, D, E as a comma-separated list enclosed in square brackets, where each element is the list described above. For example, an output shape should be of the form $[[\\dots],[\\dots],[\\dots],[\\dots],[\\dots]]$ with no additional text.", "solution": "The construction proceeds from first principles of reciprocal space symmetry and equivalence. For a simple cubic lattice with lattice parameter $a=1$, the primitive reciprocal vectors are $\\mathbf{b}_1=2\\pi\\,\\hat{\\mathbf{x}}$, $\\mathbf{b}_2=2\\pi\\,\\hat{\\mathbf{y}}$, and $\\mathbf{b}_3=2\\pi\\,\\hat{\\mathbf{z}}$. The First Brillouin Zone (BZ) can be represented as the hypercube $(-\\pi,\\pi]$ taken componentwise. Any wave vector $\\mathbf{k}$ is equivalent to $\\mathbf{k}+2\\pi\\,\\mathbf{n}$ with $\\mathbf{n}\\in\\mathbb{Z}^3$, so folding to the BZ is defined by reducing each component modulo $2\\pi$ into $(-\\pi,\\pi]$. To ensure a unique representation, any component equal (within a tolerance) to $-\\pi$ is mapped to $+\\pi$.\n\nThe point group of the cube $O_h$ acts on wave vectors by orthogonal transformations $R$ that permute and sign-flip coordinates while preserving lengths, with entries $R_{ij}\\in\\{0,\\pm 1\\}$ and exactly one nonzero per row and column. There are $48$ such matrices, all of which represent symmetry operations for the cubic lattice in reciprocal space, including proper rotations and operations composed with inversion. Two wave vectors are symmetry equivalent if they are related by such an $R$ up to a reciprocal lattice vector $2\\pi\\,\\mathbf{n}$. This defines the orbit or star,\n$$\n\\mathcal{S}(\\mathbf{k})=\\left\\{\\,\\mathrm{fold}_{\\mathrm{BZ}}(R\\mathbf{k}) \\,:\\, R\\in O_h\\,\\right\\}.\n$$\n\nFrom group theory, for a finite group $G$ acting on a set, the size of the orbit $|\\mathcal{O}(\\mathbf{k})|$ times the size of the stabilizer (little group) $|G_{\\mathbf{k}}|$ equals $|G|$ through the orbit-stabilizer theorem,\n$$\n\\left|\\mathcal{O}(\\mathbf{k})\\right|=\\frac{|G|}{|G_{\\mathbf{k}}|}.\n$$\nIn our setting, $G=O_h$ with $|G|=48$, the orbit is the star $\\mathcal{S}(\\mathbf{k})$, and the little group $G_{\\mathbf{k}}$ comprises all $R\\in O_h$ such that $\\mathrm{fold}_{\\mathrm{BZ}}(R\\mathbf{k})=\\mathrm{fold}_{\\mathrm{BZ}}(\\mathbf{k})$.\n\nThe irreducible wedge $\\mathcal{W}$ is chosen as the set of folded $\\mathbf{k}$ satisfying the inequalities $k_x\\ge k_y\\ge k_z\\ge 0$, including boundaries. Because $O_h$ contains all signed permutations of coordinates, every orbit meets $\\mathcal{W}$. If the orbit intersects $\\mathcal{W}$ at multiple boundary points, a deterministic selection is needed; lexicographic ordering on $(k_x,k_y,k_z)$ provides a canonical choice. With a numerical tolerance $\\epsilon=10^{-9}$, we test inequalities $k_x\\ge k_y-\\epsilon$, $k_y\\ge k_z-\\epsilon$, and $k_z\\ge -\\epsilon$.\n\nAlgorithmic steps grounded in these principles:\n- Generate $O_h$ by enumerating all permutations of axes and all sign combinations. For each permutation $\\pi$ of the coordinate indices and each sign triple $(s_1,s_2,s_3)\\in\\{\\pm 1\\}^3$, form the matrix $R$ with entries $R_{i,\\pi(i)}=s_i$ and zeros elsewhere. This yields $6\\times 8=48$ distinct matrices.\n- Implement folding to $(-\\pi,\\pi]$ componentwise. For each scalar component $x$, compute $y=((x+\\pi) \\bmod 2\\pi)-\\pi$; if $y$ is within a small tolerance of $-\\pi$, replace it with $+\\pi$. This guarantees $y\\in(-\\pi,\\pi]$.\n- For a given $\\mathbf{k}$, compute all images $\\mathrm{fold}_{\\mathrm{BZ}}(R\\mathbf{k})$ over $R\\in O_h$. Identify unique vectors by rounding to a fixed number of decimal places (this realizes the tolerance $\\epsilon$ numerically) and counting distinct rounded triples. This count is $m(\\mathbf{k})$.\n- Among the unique images, select those satisfying the wedge inequalities with tolerance $\\epsilon$. From these, choose the lexicographically smallest rounded triple as $\\mathbf{k}_{\\mathrm{rep}}$. The existence of at least one such triple in the wedge follows from the ability of signed permutations to sort coordinates by magnitude and make them nonnegative after folding. If numerical rounding were to exclude candidates spuriously, a fallback would pick the lexicographically smallest across all images; however, with the adopted tolerance and the signed-permutation group, a wedge representative exists in practice for the stated cases.\n- The star weight is $w_{\\star}(\\mathbf{k})=1/m(\\mathbf{k})$. The group-normalized weight is $\\widetilde{w}(\\mathbf{k})=m(\\mathbf{k})/48$, consistent with $\\widetilde{w}(\\mathbf{k})=1/|G_{\\mathbf{k}}|$ by the orbit-stabilizer theorem.\n\nNumerical considerations:\n- Use $\\epsilon=10^{-9}$ for inequality tests and an internal rounding of $10$ decimal places to identify unique points and to output floats. This is consistent because all input coordinates are rational multiples of $\\pi$ and the group action preserves this structure; small floating-point errors are controlled by the rounding.\n\nThe program implements these steps, constructs the group, folds points, computes stars and weights, chooses the representative in $\\mathcal{W}$, and prints a single-line list of $5$ entries corresponding to the five test $\\mathbf{k}$ vectors, each entry containing [$k_{\\mathrm{rep},x},\\,k_{\\mathrm{rep},y},\\,k_{\\mathrm{rep},z},\\,m,\\,w_{\\star},\\,\\widetilde{w}$] rounded to $10$ decimals, in units of $1/a$ with $a=1$.", "answer": "```python\nimport numpy as np\nimport itertools\n\n# Execution environment: Python 3.12, numpy 1.23.5, scipy 1.11.4 (not used)\n\ndef generate_oh_group():\n    \"\"\"\n    Generate the full octahedral group Oh as all 3x3 signed permutation matrices.\n    Returns a list of numpy arrays (float type).\n    \"\"\"\n    mats = []\n    for perm in itertools.permutations([0, 1, 2]):\n        for signs in itertools.product([-1, 1], repeat=3):\n            M = np.zeros((3, 3), dtype=int)\n            for i, p in enumerate(perm):\n                M[i, p] = signs[i]\n            mats.append(M.astype(float))\n    # Deduplicate (though construction yields unique already)\n    unique = []\n    seen = set()\n    for M in mats:\n        key = tuple(M.flatten().tolist())\n        if key not in seen:\n            seen.add(key)\n            unique.append(M)\n    return unique  # Expect 48 matrices\n\ndef fold_to_bz(k, tol=1e-12):\n    \"\"\"\n    Fold vector k component-wise into (-pi, pi], mapping any -pi to +pi.\n    \"\"\"\n    L = 2.0 * np.pi\n    y = (k + np.pi) % L - np.pi\n    # Map components equal to -pi (within tol) to +pi to realize (-pi, pi]\n    y = np.where(np.isclose(y, -np.pi, atol=tol), np.pi, y)\n    return y\n\ndef in_wedge(k, eps=1e-9):\n    \"\"\"\n    Test if k lies in the irreducible wedge: kx >= ky >= kz >= 0 with tolerance eps.\n    \"\"\"\n    return (k[0] >= k[1] - eps) and (k[1] >= k[2] - eps) and (k[2] >= -eps)\n\ndef compute_star_and_rep(k, group, round_dec=10, eps=1e-9):\n    \"\"\"\n    For a given k and group (list of 3x3 matrices), compute:\n    - unique folded images (the star) with uniqueness via rounding to round_dec decimals\n    - multiplicity m = size of unique set\n    - representative in the irreducible wedge (lexicographically smallest among candidates)\n    Returns (k_rep, m, w_star, w_group_norm)\n    \"\"\"\n    # Generate all images under group and fold to BZ\n    images = []\n    for R in group:\n        k_img = fold_to_bz(R @ k)\n        images.append(k_img)\n    # Unique images via rounding\n    rounded_to_image = {}\n    for img in images:\n        key = tuple(np.round(img, round_dec))\n        rounded_to_image[key] = img  # last one kept; all approximately same\n    unique_keys = list(rounded_to_image.keys())\n    m = len(unique_keys)\n\n    # Candidates in the wedge\n    wedge_candidates = [key for key in unique_keys if in_wedge(np.array(key), eps=eps)]\n    if not wedge_candidates:\n        # Fallback: should not happen for Oh with defined wedge; pick lexicographically smallest overall\n        chosen_key = min(unique_keys)\n    else:\n        chosen_key = min(wedge_candidates)\n    # Use the rounded key as representative to ensure consistency with rounding\n    k_rep = np.array(chosen_key, dtype=float)\n\n    # Weights\n    w_star = 1.0 / float(m)\n    w_group_norm = float(m) / float(len(group))\n    return k_rep, m, w_star, w_group_norm\n\ndef solve():\n    # Define test cases (in units of 1/a with a=1)\n    test_cases = [\n        np.array([0.7*np.pi, 0.2*np.pi, -0.4*np.pi], dtype=float),              # Case A\n        np.array([0.25*np.pi, 0.25*np.pi, (1.0/6.0)*np.pi], dtype=float),       # Case B\n        np.array([0.0, 0.0, 0.0], dtype=float),                                 # Case C\n        np.array([np.pi, 0.1*np.pi, 0.0], dtype=float),                         # Case D\n        np.array([np.pi, np.pi, np.pi], dtype=float),                           # Case E\n    ]\n\n    # Generate Oh group\n    group = generate_oh_group()\n\n    results = []\n    for k in test_cases:\n        k_rep, m, w_star, w_group_norm = compute_star_and_rep(k, group, round_dec=10, eps=1e-9)\n        # Round outputs to 10 decimals as required\n        k_rep_rounded = np.round(k_rep, 10).tolist()\n        w_star_rounded = round(w_star, 10)\n        w_group_norm_rounded = round(w_group_norm, 10)\n        results.append([k_rep_rounded[0], k_rep_rounded[1], k_rep_rounded[2], int(m), w_star_rounded, w_group_norm_rounded])\n\n    # Print single-line output in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2804328"}]}