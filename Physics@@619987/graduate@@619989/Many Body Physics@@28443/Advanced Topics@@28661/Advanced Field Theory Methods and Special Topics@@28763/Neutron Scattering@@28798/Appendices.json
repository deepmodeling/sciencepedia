{"hands_on_practices": [{"introduction": "A cornerstone of neutron scattering is the ability to manipulate \"contrast,\" which arises from the differing neutron scattering lengths, $b$, of various nuclei. Unlike X-rays, where scattering power scales with electron number, the neutron scattering length varies erratically across the periodic table and even between isotopes of the same element. This exercise [@problem_id:1174153] explores how this unique property can be exploited to design a \"null-matrix\" alloy, a material engineered to be effectively transparent to coherent neutron scattering by carefully tuning its isotopic composition. Mastering this concept is fundamental for designing experiments, particularly in soft matter and materials science, where one often wishes to isolate the scattering from a specific component within a complex mixture.", "problem": "In neutron scattering, the interaction of a slow neutron with a nucleus at position $\\mathbf{R}_j$ is described by the Fermi pseudopotential $V(\\mathbf{r}) = \\frac{2\\pi\\hbar^2}{m} b_j \\delta(\\mathbf{r} - \\mathbf{R}_j)$, where $m$ is the neutron mass and $b_j$ is the coherent nuclear scattering length of the specific nucleus. For a crystal containing various isotopes and elements arranged in a disordered manner, the coherent elastic scattering is governed by the average coherent scattering length, $\\bar{b}$.\n\nConsider a disordered binary alloy A$_{1-x}$B$_x$, where A and B atoms are randomly distributed on the sites of a crystal lattice. The elements A and B are not monoisotopic. Instead, they are composed of naturally occurring isotopic mixtures:\n- Element A is a mixture of two stable isotopes, A' and A'', with respective natural abundances $c_{A'}$ and $c_{A''}$ (where $c_{A'} + c_{A''} = 1$). Their coherent nuclear scattering lengths are $b_{A'}$ and $b_{A''}$.\n- Element B is a mixture of two stable isotopes, B' and B'', with respective natural abundances $c_{B'}$ and $c_{B''}$ (where $c_{B'} + c_{B''} = 1$). Their coherent nuclear scattering lengths are $b_{B'}$ and $b_{B''}$.\n\nBy tuning the molar fraction $x$ of element B, it's possible to create a \"null-matrix\" alloy, for which the average coherent nuclear scattering length $\\bar{b}_{\\text{alloy}}$ is exactly zero. This makes the alloy effectively transparent to coherent neutron beams, allowing for the study of other scattering contributions.\n\nAssuming a completely random distribution of atoms, determine the specific molar fraction $x$ of element B that results in a null-matrix alloy, i.e., $\\bar{b}_{\\text{alloy}} = 0$. Express your answer in terms of the given scattering lengths ($b_{A'}, b_{A''}, b_{B'}, b_{B''}$) and the abundances of the primary isotopes ($c_{A'}, c_{B'}$).", "solution": "1. Define the isotope‐averaged scattering lengths  \n   $$\n   b_A = c_{A'}\\,b_{A'} + c_{A''}\\,b_{A''}, \n   \\quad \n   b_B = c_{B'}\\,b_{B'} + c_{B''}\\,b_{B''},\n   $$  \n   with $c_{A''}=1-c_{A'}$ and $c_{B''}=1-c_{B'}$.\n\n2. The alloy average scattering length is  \n   $$\n   \\bar b_{\\rm alloy} = (1-x)\\,b_A + x\\,b_B.\n   $$\n\n3. Null‐matrix condition $\\bar b_{\\rm alloy}=0$ gives  \n   $$\n   (1-x)\\,b_A + x\\,b_B = 0\n   \\;\\Longrightarrow\\;\n   x(b_B - b_A) = -\\,b_A\n   \\;\\Longrightarrow\\;\n   x = -\\,\\frac{b_A}{b_B - b_A}\n         = \\frac{b_A}{b_A - b_B}.\n   $$\n\n4. Substitute the isotope averages:\n   $$\n   x = \\frac{c_{A'}\\,b_{A'} + (1-c_{A'})\\,b_{A''}}\n            {\\bigl[c_{A'}\\,b_{A'} + (1-c_{A'})\\,b_{A''}\\bigr]\n             - \n             \\bigl[c_{B'}\\,b_{B'} + (1-c_{B'})\\,b_{B''}\\bigr]}.\n   $$", "answer": "$$\\boxed{\\frac{c_{A'}\\,b_{A'} + (1-c_{A'})\\,b_{A''}}{\\bigl[c_{A'}\\,b_{A'} + (1-c_{A'})\\,b_{A''}\\bigr]-\\bigl[c_{B'}\\,b_{B'} + (1-c_{B'})\\,b_{B''}\\bigr]}}$$", "id": "1174153"}, {"introduction": "In an experiment, what we measure directly are neutron counts in a detector as a function of time and position, not the physically rich dynamic structure factor $S(\\mathbf{Q}, \\omega)$. This problem [@problem_id:2493186] provides a hands-on simulation of the essential data reduction process required to bridge this gap for a time-of-flight spectrometer. You will transform raw data by applying the principles of non-relativistic kinematics and the necessary Jacobian factors for changing variables from time to energy. This practice is vital for understanding how the final, corrected data are obtained and for appreciating the instrumental effects that shape the measured signal.", "problem": "A direct-geometry time-of-flight inelastic neutron scattering experiment measures raw counts as a function of time-of-flight and detector angle. You must convert raw time-of-flight counts $C(t,2\\theta)$ into an estimate of the dynamic structure factor $S(Q,\\omega)$ using first principles: nonrelativistic kinematics for neutrons, time-of-flight geometry, Jacobian factors for variable changes, incident flux normalization, detector solid angle, and the kinematic prefactor. Then, verify energy conservation by testing that the elastic line occurs at zero energy transfer within a specified tolerance.\n\nFundamental starting points to use:\n- Neutron nonrelativistic kinetic energy: $E = \\tfrac{1}{2} m_{\\mathrm{n}} v^2$.\n- Neutron wavenumber: $k = \\sqrt{2 m_{\\mathrm{n}} E}/\\hbar$.\n- Time-of-flight geometry (direct-geometry): the total time-of-flight is $t = L_1/v_i + L_2/v_f$, where $L_1$ is source-to-sample distance, $L_2$ is sample-to-detector distance, $v_i$ is the incident speed determined by $E_i$, and $v_f$ is the final speed determined by $E_f$.\n- Energy transfer: $\\omega = E_i - E_f$.\n- Momentum transfer magnitude: $Q = \\sqrt{k_i^2 + k_f^2 - 2 k_i k_f \\cos(2\\theta)}$.\n- Variable-change Jacobian: going from counts per time to counts per energy must include $\\left|\\tfrac{\\mathrm{d}t}{\\mathrm{d}E_f}\\right|$.\n- Relation between the double-differential cross section and the dynamic structure factor: $\\tfrac{\\mathrm{d}^2 \\sigma}{\\mathrm{d}\\Omega\\,\\mathrm{d}E_f} \\propto \\tfrac{k_f}{k_i} S(Q,\\omega)$. Use this proportionality to remove kinematic factors when estimating $S(Q,\\omega)$ from the normalized, Jacobian-corrected counts. Treat the proportionality constant as unity so that the final $S(Q,\\omega)$ is in arbitrary but consistent dimensionless units.\n\nConstants and instrument parameters:\n- Neutron mass $m_{\\mathrm{n}} = 1.67492749804 \\times 10^{-27}\\ \\mathrm{kg}$.\n- Reduced Planck constant $\\hbar = 1.054571817 \\times 10^{-34}\\ \\mathrm{J\\cdot s}$.\n- Electron-volt conversion $1\\ \\mathrm{meV} = 1.602176634 \\times 10^{-22}\\ \\mathrm{J}$.\n- Source-to-sample distance $L_1 = 15.0\\ \\mathrm{m}$.\n- Sample-to-detector distance $L_2 = 5.0\\ \\mathrm{m}$.\n- Detector pixel area $A_{\\mathrm{det}} = 1.0\\times 10^{-4}\\ \\mathrm{m}^2$.\n- Pixel distance from sample $R = 5.0\\ \\mathrm{m}$, so the solid angle is $\\Delta \\Omega = A_{\\mathrm{det}}/R^2$.\n- Incident energy $E_i = 25.0\\ \\mathrm{meV}$.\n- Incident spectral flux at the sample (per unit energy): $\\Phi_i = 1.0\\times 10^9\\ \\mathrm{s^{-1}\\ meV^{-1}}$.\n- Time channel width $\\Delta t = 100\\ \\mu\\mathrm{s}$. Use $\\Delta t$ in seconds in all calculations.\n- Angles $2\\theta$ are given in degrees. Convert to radians for trigonometric functions.\n- For evaluating energy conservation at the elastic line, define the elastic time $t_{\\mathrm{el}} = L_1/v_i + L_2/v_i$ and require $|\\omega| \\le \\tau$ with tolerance $\\tau = 10^{-3}\\ \\mathrm{meV}$.\n\nYour tasks for each test case are:\n1. For each time channel center $t$ and detector angle $2\\theta$, compute $E_f$ from the time-of-flight constraint, then compute $\\omega = E_i - E_f$ and the corresponding $k_i$, $k_f$, and $Q$.\n2. Convert counts per time bin $C$ into intensity per unit final energy using the Jacobian: first form the rate $C/\\Delta t$, then multiply by $\\left|\\tfrac{\\mathrm{d}t}{\\mathrm{d}E_f}\\right|$ to get counts per energy. Ensure that the derivative is taken with respect to $E_f$ in the same energy unit used for $\\Phi_i$ (i.e., in meV).\n3. Normalize by the incident flux and solid angle to obtain a differential cross section estimate proportional to $S(Q,\\omega)$.\n4. Remove the kinematic prefactor to estimate $S(Q,\\omega)$: multiply by $k_i/k_f$.\n5. For each test case, report two outputs:\n   - The peak $S(Q,\\omega)$ value among the provided time channels, rounded to six decimals (dimensionless).\n   - A boolean indicating whether energy conservation holds at the elastic line: find the time channel whose $t$ is closest to $t_{\\mathrm{el}}$, compute its $\\omega$, and check whether $|\\omega| \\le 10^{-3}\\ \\mathrm{meV}$.\n\nAngle unit requirement: all input angles are in degrees and must be converted to radians internally. Energy unit requirement: all energies in the computation of $\\omega$ and the flux normalization must be in $\\mathrm{meV}$; round the reported $S$ values to six decimals; the boolean is unitless. No angles or energies are to be printed; only the requested quantities are printed.\n\nTest suite:\n- Test case 1: $2\\theta = 30^{\\circ}$, times $t$ (in $\\mu\\mathrm{s}$): $[9096.0,\\ 9146.0,\\ 9196.0]$, counts $C$: $[1000,\\ 2000,\\ 1000]$.\n- Test case 2: $2\\theta = 5^{\\circ}$, times $t$ (in $\\mu\\mathrm{s}$): $[9146.0,\\ 9246.0,\\ 9346.0]$, counts $C$: $[1500,\\ 3000,\\ 1500]$.\n- Test case 3: $2\\theta = 150^{\\circ}$, times $t$ (in $\\mu\\mathrm{s}$): $[9246.0,\\ 9296.0,\\ 9346.0]$, counts $C$: $[1000,\\ 2000,\\ 1000]$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets in the form\n  [[S_peak_1,energy_check_1],[S_peak_2,energy_check_2],[S_peak_3,energy_check_3]]\n  where each S_peak is rounded to six decimals and each energy_check is a boolean literal (True or False).", "solution": "The problem posed is valid, as it is scientifically grounded in the principles of non-relativistic mechanics and neutron scattering, is well-posed with sufficient data, and is formulated with objective, unambiguous language. A systematic solution can be constructed.\n\nThe task is to convert raw time-of-flight (ToF) neutron scattering data, $C(t, 2\\theta)$, into the dynamic structure factor, $S(Q, \\omega)$, and to verify energy conservation at the elastic line. This requires a step-by-step application of kinematic relations and normalization factors. All calculations will use the provided constants and instrument parameters.\n\nLet us begin by establishing the properties of the incident neutron beam. The incident energy is given as $E_i = 25.0\\ \\mathrm{meV}$. All energies must be converted to SI units (Joules) for kinematic calculations. The conversion is $1\\ \\mathrm{meV} = 1.602176634 \\times 10^{-22}\\ \\mathrm{J}$.\nThe incident energy in Joules is:\n$$E_{i, \\mathrm{J}} = E_i \\times (1.602176634 \\times 10^{-22}\\ \\mathrm{J/meV})$$\nFrom the non-relativistic kinetic energy formula, $E = \\frac{1}{2} m_{\\mathrm{n}} v^2$, the incident neutron speed $v_i$ is determined:\n$$v_i = \\sqrt{\\frac{2 E_{i, \\mathrm{J}}}{m_{\\mathrm{n}}}}$$\nwhere $m_{\\mathrm{n}} = 1.67492749804 \\times 10^{-27}\\ \\mathrm{kg}$ is the neutron mass. The corresponding incident wavenumber, $k_i$, is given by $k = \\frac{m_{\\mathrm{n}} v}{\\hbar}$:\n$$k_i = \\frac{m_{\\mathrm{n}} v_i}{\\hbar}$$\nwhere $\\hbar = 1.054571817 \\times 10^{-34}\\ \\mathrm{J\\cdot s}$ is the reduced Planck constant.\n\nFor elastic scattering, the neutron's energy does not change ($E_f = E_i$), so its speed also does not change ($v_f = v_i$). The time-of-flight for an elastically scattered neutron, $t_{\\mathrm{el}}$, is the total distance divided by the constant speed:\n$$t_{\\mathrm{el}} = \\frac{L_1 + L_2}{v_i}$$\nwhere $L_1 = 15.0\\ \\mathrm{m}$ is the source-to-sample distance and $L_2 = 5.0\\ \\mathrm{m}$ is the sample-to-detector distance. This value is used to identify the time channel corresponding to the elastic line for the energy conservation check.\n\nFor a general inelastic scattering event, a neutron arrives at a detector at time $t$. The total flight time is the sum of times for the two flight paths:\n$$t = \\frac{L_1}{v_i} + \\frac{L_2}{v_f}$$\nWe can solve for the final speed, $v_f$:\n$$v_f = \\frac{L_2}{t - L_1/v_i}$$\nThis requires that $t > L_1/v_i$, which is physically necessary.\nThe final kinetic energy in Joules, $E_{f, \\mathrm{J}}$, is then:\n$$E_{f, \\mathrm{J}} = \\frac{1}{2} m_{\\mathrm{n}} v_f^2$$\nAnd the final wavenumber is:\n$$k_f = \\frac{m_{\\mathrm{n}} v_f}{\\hbar}$$\nThe energy transfer, $\\omega$, is defined as the energy lost by the neutron, $\\omega = E_i - E_f$. For calculations, we use energies in units of meV:\n$$\\omega = E_i - E_{f, \\mathrm{J}} \\times (\\frac{1}{1.602176634 \\times 10^{-22}\\ \\mathrm{J/meV}})$$\nThe magnitude of the momentum transfer vector, $Q$, is given by the law of cosines for the vector difference $\\vec{Q} = \\vec{k_i} - \\vec{k_f}$:\n$$Q = \\sqrt{k_i^2 + k_f^2 - 2 k_i k_f \\cos(2\\theta)}$$\nwhere $2\\theta$ is the scattering angle, which must be converted from degrees to radians for the computation.\n\nTo convert the measured counts in a time bin, $C$, to a quantity proportional to the double-differential cross section, we follow the specified procedure. First, we determine the intensity per unit final energy. The rate of counts is approximated as $C/\\Delta t$, where $\\Delta t = 100 \\times 10^{-6}\\ \\mathrm{s}$. The conversion from a density in time to a density in energy requires the Jacobian factor $|\\frac{\\mathrm{d}t}{\\mathrm{d}E_f}|$.\nFrom $t = L_1/v_i + L_2/v_f$ and $E_f = \\frac{1}{2} m_{\\mathrm{n}} v_f^2$, we derive the Jacobian. It is simpler to use the chain rule: $\\frac{\\mathrm{d}t}{\\mathrm{d}E_f} = \\frac{\\mathrm{d}t}{\\mathrm{d}v_f} \\frac{\\mathrm{d}v_f}{\\mathrm{d}E_f}$.\n$$\\frac{\\mathrm{d}t}{\\mathrm{d}v_f} = -\\frac{L_2}{v_f^2} \\quad \\text{and} \\quad \\frac{\\mathrm{d}E_f}{\\mathrm{d}v_f} = m_{\\mathrm{n}}v_f \\implies \\frac{\\mathrm{d}v_f}{\\mathrm{d}E_f} = \\frac{1}{m_{\\mathrm{n}}v_f}$$\nThus, the derivative with respect to energy in Joules is:\n$$\\frac{\\mathrm{d}t}{\\mathrm{d}E_{f, \\mathrm{J}}} = \\left(-\\frac{L_2}{v_f^2}\\right) \\left(\\frac{1}{m_{\\mathrm{n}}v_f}\\right) = -\\frac{L_2}{m_{\\mathrm{n}}v_f^3}$$\nThe problem requires the derivative with respect to energy in meV. Let this be $\\frac{\\mathrm{d}t}{\\mathrm{d}E_{f, \\text{meV}}}$.\n$$\\frac{\\mathrm{d}t}{\\mathrm{d}E_{f, \\text{meV}}} = \\frac{\\mathrm{d}t}{\\mathrm{d}E_{f, \\mathrm{J}}} \\frac{\\mathrm{d}E_{f, \\mathrm{J}}}{\\mathrm{d}E_{f, \\text{meV}}} = \\frac{\\mathrm{d}t}{\\mathrm{d}E_{f, \\mathrm{J}}} \\times (1.602176634 \\times 10^{-22}\\ \\mathrm{J/meV})$$\nThe required Jacobian magnitude is:\n$$J = \\left|\\frac{\\mathrm{d}t}{\\mathrm{d}E_{f, \\text{meV}}}\\right| = \\frac{L_2}{m_{\\mathrm{n}}v_f^3} \\times (1.602176634 \\times 10^{-22})$$\nThe intensity per unit final energy, $I_{E_f}$, is given by the rate multiplied by this Jacobian:\n$$I_{E_f} = \\frac{C}{\\Delta t} \\times J$$\nThis quantity is then normalized by the incident spectral flux, $\\Phi_i = 1.0 \\times 10^9\\ \\mathrm{s^{-1}\\ meV^{-1}}$, and the detector solid angle, $\\Delta\\Omega = A_{\\mathrm{det}}/R^2 = (1.0 \\times 10^{-4}\\ \\mathrm{m}^2) / (5.0\\ \\mathrm{m})^2 = 4.0 \\times 10^{-6}\\ \\mathrm{sr}$. This gives an estimate proportional to the double-differential cross-section:\n$$\\frac{\\mathrm{d}^2\\sigma}{\\mathrm{d}\\Omega\\,\\mathrm{d}E_f} \\propto I_{\\text{norm}} = \\frac{I_{E_f}}{\\Phi_i \\Delta\\Omega}$$\nFinally, the dynamic structure factor $S(Q, \\omega)$ is extracted using the provided relation, with the proportionality constant set to unity:\n$$\\frac{\\mathrm{d}^2\\sigma}{\\mathrm{d}\\Omega\\,\\mathrm{d}E_f} = \\frac{k_f}{k_i} S(Q, \\omega)$$\nTherefore, our estimate for $S(Q, \\omega)$ is:\n$$S(Q, \\omega) = I_{\\text{norm}} \\times \\frac{k_i}{k_f} = \\frac{C J}{\\Delta t \\cdot \\Phi_i \\Delta\\Omega} \\frac{k_i}{k_f}$$\nThis calculation is performed for each time channel. The peak value of $S(Q, \\omega)$ for each test case is identified.\n\nFor the energy conservation check, the time channel $t$ closest to the calculated $t_{\\mathrm{el}}$ is found. The energy transfer $\\omega$ is computed for this specific channel. The condition is satisfied if $|\\omega| \\le \\tau$, where the tolerance is $\\tau = 10^{-3}\\ \\mathrm{meV}$.\n\nThe full procedure is implemented in the provided program, which processes each test case and formats the final output as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the inelastic neutron scattering data reduction problem.\n    \"\"\"\n\n    # --- Constants and Instrument Parameters ---\n    # Physical constants\n    M_N = 1.67492749804e-27  # Neutron mass in kg\n    HBAR = 1.054571817e-34    # Reduced Planck constant in J*s\n    MEV_TO_J = 1.602176634e-22 # Conversion factor from meV to Joules\n    J_TO_MEV = 1.0 / MEV_TO_J\n\n    # Instrument parameters\n    L1 = 15.0  # Source-to-sample distance in m\n    L2 = 5.0  # Sample-to-detector distance in m\n    R = 5.0   # Sample-to-detector pixel distance in m\n    A_DET = 1.0e-4 # Detector pixel area in m^2\n    DELTA_OMEGA = A_DET / R**2 # Solid angle in sr\n    EI_MEV = 25.0 # Incident energy in meV\n    PHI_I = 1.0e9 # Incident spectral flux in s^-1 meV^-1\n    DELTA_T_S = 100e-6 # Time channel width in s\n    TAU = 1e-3 # Energy conservation tolerance in meV\n\n    # --- Pre-computation of Incident Beam Properties ---\n    EI_J = EI_MEV * MEV_TO_J\n    VI = np.sqrt(2 * EI_J / M_N)\n    KI = M_N * VI / HBAR\n    T_EL_S = (L1 + L2) / VI\n    T_EL_MUS = T_EL_S * 1e6\n\n    # --- Test Suite ---\n    test_cases = [\n        # (angle_deg, times_mus, counts)\n        (30.0, [9096.0, 9146.0, 9196.0], [1000, 2000, 1000]),\n        (5.0,  [9146.0, 9246.0, 9346.0], [1500, 3000, 1500]),\n        (150.0,[9246.0, 9296.0, 9346.0], [1000, 2000, 1000]),\n    ]\n\n    results = []\n\n    for case in test_cases:\n        angle_deg, times_mus, counts = case\n        angle_rad = np.deg2rad(angle_deg)\n        \n        s_values = []\n        omega_values = []\n\n        for t_mus, c in zip(times_mus, counts):\n            t_s = t_mus * 1e-6\n            \n            # Check for physical time-of-flight\n            if t_s <= L1 / VI:\n                # This case is unphysical but should not occur with the given data\n                continue\n            \n            # --- Kinematics Calculation ---\n            vf = L2 / (t_s - L1 / VI)\n            ef_j = 0.5 * M_N * vf**2\n            ef_mev = ef_j * J_TO_MEV\n            omega_mev = EI_MEV - ef_mev\n            kf = M_N * vf / HBAR\n            \n            # --- Jacobian Calculation ---\n            # Jacobian |dt/dE_f| with E_f in meV\n            jacobian = (L2 / (M_N * vf**3)) * MEV_TO_J\n\n            # --- S(Q, omega) Calculation ---\n            # Intensity per unit final energy\n            intensity_per_energy = (c / DELTA_T_S) * jacobian\n            # Normalized intensity (proportional to cross-section)\n            i_norm = intensity_per_energy / (PHI_I * DELTA_OMEGA)\n            # Dynamic structure factor\n            s_q_omega = i_norm * (KI / kf)\n\n            s_values.append(s_q_omega)\n            omega_values.append(omega_mev)\n\n        # --- Task 5a: Find Peak S(Q, omega) ---\n        s_peak = np.max(s_values) if s_values else 0.0\n\n        # --- Task 5b: Energy Conservation Check ---\n        time_diffs = [abs(t_mus - T_EL_MUS) for t_mus in times_mus]\n        closest_idx = np.argmin(time_diffs)\n        omega_at_elastic = omega_values[closest_idx]\n        energy_check = abs(omega_at_elastic) <= TAU\n\n        # Append results for this case\n        results.append([round(s_peak, 6), energy_check])\n    \n    # --- Final Output Formatting ---\n    result_strings = [f\"[{s},{str(c)}]\" for s, c in results]\n    print(f\"[{','.join(result_strings)}]\")\n\nsolve()\n```", "id": "2493186"}, {"introduction": "Once the dynamic structure factor $S(\\mathbf{Q}, \\omega)$ has been determined, the next step is to interpret it using physical models. This exercise [@problem_id:129580] focuses on extracting microscopic dynamics from the quasielastic scattering signal—the broadening of the elastic peak—using the celebrated Chudley-Elliott model. You will derive the quasielastic linewidth $\\Gamma(\\mathbf{Q})$ for an atom hopping on a lattice, revealing how its functional form directly maps the geometry and frequency of atomic jumps. This powerful approach is a classic example of how quasielastic neutron scattering provides a unique window into stochastic processes like diffusion in solids and liquids.", "problem": "Incoherent quasielastic neutron scattering (QENS) is a powerful technique for investigating stochastic single-particle motion, such as diffusion in solids and liquids. The central quantity measured is the incoherent dynamic structure factor, $S_{inc}(\\mathbf{Q}, \\omega)$, where $\\hbar\\mathbf{Q}$ is the momentum transfer and $\\hbar\\omega$ is the energy transfer.\n\nFor a particle performing instantaneous, random jumps on a crystal lattice, the Chudley-Elliott model provides a framework to connect the microscopic jump parameters to the scattering signal. The model assumes a Markovian jump process, leading to an exponential decay of the incoherent intermediate scattering function, $I_s(\\mathbf{Q}, t) = \\exp(-\\Gamma(\\mathbf{Q})t)$. The dynamic structure factor is the time Fourier transform of $I_s(\\mathbf{Q}, t)$, resulting in a Lorentzian function of $\\omega$:\n$$\nS_{inc}(\\mathbf{Q}, \\omega) = \\frac{1}{\\pi} \\frac{\\Gamma(\\mathbf{Q})}{\\omega^2 + \\Gamma(\\mathbf{Q})^2}\n$$\nThe half-width at half-maximum (HWHM) of this Lorentzian, $\\Gamma(\\mathbf{Q})$, is called the quasielastic linewidth and contains detailed information about the jump geometry and frequency.\n\nThe probability $P(\\mathbf{l}, t)$ of finding the particle at a lattice site $\\mathbf{l}$ at time $t$ obeys a master equation. For multiple independent jump processes, the overall change in probability is the sum of contributions from each process.\n\nConsider a particle diffusing on a simple cubic lattice with lattice constant $a$. The particle can execute two types of instantaneous jumps from any given site, which are statistically independent:\n1.  Jumps to one of its nearest-neighbor (NN) sites. The total rate for a jump to any of the NN sites is given by $1/\\tau_1$.\n2.  Jumps to one of its next-nearest-neighbor (NNN) sites. The total rate for a jump to any of the NNN sites is given by $1/\\tau_2$.\n\nDerive the expression for the quasielastic linewidth $\\Gamma(\\mathbf{Q})$ as a function of the momentum transfer wavevector $\\mathbf{Q} = (Q_x, Q_y, Q_z)$, the lattice constant $a$, and the characteristic times $\\tau_1$ and $\\tau_2$.", "solution": "The quasielastic linewidth $\\Gamma(\\mathbf{Q})$ is derived from the master equation for the probability $P(\\mathbf{l}, t)$ of finding the particle at lattice site $\\mathbf{l}$ at time $t$. The particle jumps to nearest-neighbor (NN) sites with total rate $1/\\tau_1$ and to next-nearest-neighbor (NNN) sites with total rate $1/\\tau_2$. The master equation is:\n\n$$\n\\frac{\\partial P(\\mathbf{l}, t)}{\\partial t} = \\frac{1}{6\\tau_1} \\sum_{\\boldsymbol{\\delta}_1} \\left[ P(\\mathbf{l} - \\boldsymbol{\\delta}_1, t) - P(\\mathbf{l}, t) \\right] + \\frac{1}{12\\tau_2} \\sum_{\\boldsymbol{\\delta}_2} \\left[ P(\\mathbf{l} - \\boldsymbol{\\delta}_2, t) - P(\\mathbf{l}, t) \\right]\n$$\n\nwhere $\\boldsymbol{\\delta}_1$ are the NN vectors: $(\\pm a, 0, 0)$, $(0, \\pm a, 0)$, $(0, 0, \\pm a)$, and $\\boldsymbol{\\delta}_2$ are the NNN vectors: $(\\pm a, \\pm a, 0)$, $(\\pm a, 0, \\pm a)$, $(0, \\pm a, \\pm a)$.\n\nThe incoherent intermediate scattering function is the spatial Fourier transform:\n$$\nI_s(\\mathbf{Q}, t) = \\sum_{\\mathbf{l}} P(\\mathbf{l}, t) e^{i \\mathbf{Q} \\cdot \\mathbf{l}}\n$$\n\nTaking the time derivative and using the master equation:\n$$\n\\frac{\\partial I_s(\\mathbf{Q}, t)}{\\partial t} = \\sum_{\\mathbf{l}} \\frac{\\partial P(\\mathbf{l}, t)}{\\partial t} e^{i \\mathbf{Q} \\cdot \\mathbf{l}}\n$$\n\nSubstituting the master equation and simplifying:\n$$\n\\frac{\\partial I_s(\\mathbf{Q}, t)}{\\partial t} = \\left[ \\frac{1}{6\\tau_1} \\sum_{\\boldsymbol{\\delta}_1} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_1} + \\frac{1}{12\\tau_2} \\sum_{\\boldsymbol{\\delta}_2} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_2} - \\frac{1}{\\tau_1} - \\frac{1}{\\tau_2} \\right] I_s(\\mathbf{Q}, t)\n$$\n\nThe sums are evaluated:\n- For NN jumps ($6$ vectors):\n$$\n\\sum_{\\boldsymbol{\\delta}_1} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_1} = 2 \\left[ \\cos(a Q_x) + \\cos(a Q_y) + \\cos(a Q_z) \\right]\n$$\nso:\n$$\n\\frac{1}{6\\tau_1} \\sum_{\\boldsymbol{\\delta}_1} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_1} = \\frac{1}{3\\tau_1} \\left[ \\cos(a Q_x) + \\cos(a Q_y) + \\cos(a Q_z) \\right]\n$$\n\n- For NNN jumps ($12$ vectors), the sum is grouped by coordinate planes:\n$$\n\\sum_{\\boldsymbol{\\delta}_2} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_2} = 2 \\left[ \\cos(a(Q_x + Q_y)) + \\cos(a(Q_x - Q_y)) + \\cos(a(Q_x + Q_z)) + \\cos(a(Q_x - Q_z)) + \\cos(a(Q_y + Q_z)) + \\cos(a(Q_y - Q_z)) \\right]\n$$\nUsing the identity $\\cos(\\alpha + \\beta) + \\cos(\\alpha - \\beta) = 2 \\cos \\alpha \\cos \\beta$:\n$$\n\\sum_{\\boldsymbol{\\delta}_2} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_2} = 4 \\left[ \\cos(a Q_x) \\cos(a Q_y) + \\cos(a Q_x) \\cos(a Q_z) + \\cos(a Q_y) \\cos(a Q_z) \\right]\n$$\nso:\n$$\n\\frac{1}{12\\tau_2} \\sum_{\\boldsymbol{\\delta}_2} e^{i \\mathbf{Q} \\cdot \\boldsymbol{\\delta}_2} = \\frac{1}{3\\tau_2} \\left[ \\cos(a Q_x) \\cos(a Q_y) + \\cos(a Q_x) \\cos(a Q_z) + \\cos(a Q_y) \\cos(a Q_z) \\right]\n$$\n\nSubstituting into the derivative equation:\n$$\n\\frac{\\partial I_s(\\mathbf{Q}, t)}{\\partial t} = \\left[ \\frac{1}{3\\tau_1} \\left( \\cos(a Q_x) + \\cos(a Q_y) + \\cos(a Q_z) \\right) + \\frac{1}{3\\tau_2} \\left( \\cos(a Q_x) \\cos(a Q_y) + \\cos(a Q_x) \\cos(a Q_z) + \\cos(a Q_y) \\cos(a Q_z) \\right) - \\frac{1}{\\tau_1} - \\frac{1}{\\tau_2} \\right] I_s(\\mathbf{Q}, t)\n$$\n\nThis has the form $\\partial I_s / \\partial t = - \\Gamma(\\mathbf{Q}) I_s$, so:\n$$\n\\Gamma(\\mathbf{Q}) = \\frac{1}{\\tau_1} + \\frac{1}{\\tau_2} - \\frac{1}{3\\tau_1} \\left( \\cos(a Q_x) + \\cos(a Q_y) + \\cos(a Q_z) \\right) - \\frac{1}{3\\tau_2} \\left( \\cos(a Q_x) \\cos(a Q_y) + \\cos(a Q_x) \\cos(a Q_z) + \\cos(a Q_y) \\cos(a Q_z) \\right)\n$$\n\nFactoring:\n$$\n\\Gamma(\\mathbf{Q}) = \\frac{1}{\\tau_1} \\left( 1 - \\frac{1}{3} \\left( \\cos(a Q_x) + \\cos(a Q_y) + \\cos(a Q_z) \\right) \\right) + \\frac{1}{\\tau_2} \\left( 1 - \\frac{1}{3} \\left( \\cos(a Q_x) \\cos(a Q_y) + \\cos(a Q_x) \\cos(a Q_z) + \\cos(a Q_y) \\cos(a Q_z) \\right) \\right)\n$$", "answer": "$$\\boxed{ \\frac{1}{\\tau_1} \\left( 1 - \\frac{1}{3} \\left( \\cos(a Q_x) + \\cos(a Q_y) + \\cos(a Q_z) \\right) \\right) + \\frac{1}{\\tau_2} \\left( 1 - \\frac{1}{3} \\left( \\cos(a Q_x) \\cos(a Q_y) + \\cos(a Q_x) \\cos(a Q_z) + \\cos(a Q_y) \\cos(a Q_z) \\right) \\right) }$$", "id": "129580"}]}