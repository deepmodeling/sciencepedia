{"hands_on_practices": [{"introduction": "The ability to flow without dissipation is the defining characteristic of a superfluid. This remarkable property is not magical; it is a direct consequence of the quantum mechanical nature of the condensate's excitations. In this exercise, you will explore this connection by applying the famous Landau criterion for superfluidity, which links the macroscopic critical velocity for frictionless flow to the microscopic energy-momentum relation, $\\epsilon(k)$, of the system's elementary excitations. By linearizing the Gross-Pitaevskii equation, you will derive this excitation spectrum and calculate the critical velocity, which turns out to be the speed of sound in the condensate [@problem_id:229621].", "problem": "A uniform one-dimensional Bose-Einstein condensate (BEC) is described by the macroscopic wavefunction $\\Psi(x, t)$. Its dynamics are governed by the time-dependent Gross-Pitaevskii equation (GPE):\n$$\ni\\hbar \\frac{\\partial \\Psi}{\\partial t} = \\left(-\\frac{\\hbar^2}{2m} \\frac{\\partial^2}{\\partial x^2} + V_{ext}(x) + g_{1D} |\\Psi|^2 \\right) \\Psi\n$$\nHere, $m$ is the mass of a single atom, and $g_{1D}$ is the effective one-dimensional interaction strength, which is positive for repulsive interactions ($g_{1D} > 0$). The condensate has a uniform background density $n_0$.\n\nImagine this condensate flowing with a constant velocity $v$ past a weak, stationary, localized potential barrier $V_{ext}(x) = U_0 \\delta(x)$. For low velocities, the flow is superfluid and dissipationless. However, if the velocity exceeds a certain critical value $v_c$, the condensate can start to lose energy and momentum by creating elementary excitations (quasiparticles) through its interaction with the barrier. This marks the breakdown of superfluidity.\n\nAccording to the Landau criterion for superfluidity, this critical velocity is given by the minimum phase velocity of the elementary excitations:\n$$\nv_c = \\min_{k \\neq 0} \\frac{\\epsilon(k)}{\\hbar k}\n$$\nwhere $\\epsilon(k)$ is the energy of an elementary excitation as a function of its momentum $\\hbar k$.\n\nYour task is to determine the critical velocity $v_c$ for this 1D BEC. To do this, first derive the dispersion relation $\\epsilon(k)$ for the elementary excitations of the uniform condensate (i.e., with $V_{ext}(x)=0$) by linearizing the GPE around the stationary ground state. Then, apply the Landau criterion to find $v_c$. Express your final answer in terms of $m$, $g_{1D}$, and $n_0$.", "solution": "1. Stationary ground state: let $\\Psi_0(x,t)=\\sqrt{n_0}\\,e^{-i\\mu t/\\hbar}$.  From the time‐independent GPE with $V_{ext}=0$,\n$$\n\\mu\\,\\Psi_0 = \\Big(-\\frac{\\hbar^2}{2m}\\partial_x^2 + g_{1D}|\\Psi_0|^2\\Big)\\Psi_0\n\\quad\\Longrightarrow\\quad\n\\mu = g_{1D}n_0.\n$$\n\n2. Linearize GPE: set\n$$\n\\Psi(x,t)=\\Big[\\sqrt{n_0}+u\\,e^{i(kx-\\omega t)}+v^*\\,e^{-i(kx-\\omega t)}\\Big]e^{-i\\mu t/\\hbar},\n$$\nwith $|u|,|v|\\ll\\sqrt{n_0}$.  Inserting into the GPE and keeping terms linear in $u,v$ yields the Bogoliubov–de Gennes equations whose consistency condition gives the dispersion relation.\n\n3. Bogoliubov dispersion:\n$$\n\\epsilon(k)=\\hbar\\omega(k)\n=\\sqrt{\\frac{\\hbar^2k^2}{2m}\\Big(\\frac{\\hbar^2k^2}{2m}+2g_{1D}n_0\\Big)}.\n$$\n\n4. Landau criterion:\n$$\nv_c=\\min_{k\\neq0}\\frac{\\epsilon(k)}{\\hbar k}\n=\\min_{k}\\sqrt{\\frac{\\frac{\\hbar^2k^2}{2m}+2g_{1D}n_0}{2m}}\n\\ge\\sqrt{\\frac{2g_{1D}n_0}{2m}}\n=\\sqrt{\\frac{g_{1D}n_0}{m}}\\,,\n$$\nwith the minimum attained as $k\\to0$.", "answer": "$$\\boxed{\\sqrt{\\frac{g_{1D}n_0}{m}}}$$", "id": "229621"}, {"introduction": "While repulsive interactions lead to stable condensates, attractive forces introduce a delicate balance between the confining potential, quantum kinetic energy, and a self-focusing nonlinearity that can lead to collapse. To analyze this stability, we turn to the powerful variational method, approximating the ground state by minimizing the energy for a plausible trial wavefunction. This practice will guide you through a variational calculation using a Gaussian ansatz to determine the critical interaction strength, $g_c$, beyond which a harmonically trapped Bose-Einstein condensate becomes unstable, providing a hands-on look at a dramatic quantum phenomenon [@problem_id:229702].", "problem": "A Bose-Einstein condensate (BEC) of $N$ atoms, each of mass $m$, is confined in a three-dimensional isotropic harmonic potential $V(\\mathbf{r}) = \\frac{1}{2}m\\omega^2 r^2$. The inter-atomic interactions are described by a contact potential, leading to a nonlinear term in the energy functional. The total energy of the condensate, described by the macroscopic wavefunction $\\Psi(\\mathbf{r})$, is given by the Gross-Pitaevskii energy functional:\n$$E[\\Psi] = \\int \\left( \\frac{\\hbar^2}{2m} |\\nabla\\Psi|^2 + V(\\mathbf{r})|\\Psi|^2 + \\frac{g}{2}|\\Psi|^4 \\right) d^3r$$\nwhere $g$ is the interaction coupling constant. The wavefunction is normalized to the total number of atoms, $\\int |\\Psi|^2 d^3r = N$.\n\nFor attractive interactions ($g0$), the condensate can become unstable and collapse if the attraction is sufficiently strong. We can study this instability using a variational approach with a trial wavefunction. Assume the condensate wavefunction is well-approximated by a spherically symmetric Gaussian function:\n$$\\Psi(\\mathbf{r}) = \\left(\\frac{N}{\\pi^{3/2}\\sigma^3}\\right)^{1/2} \\exp\\left(-\\frac{r^2}{2\\sigma^2}\\right)$$\nwhere $\\sigma$ is a variational parameter representing the width of the condensate cloud.\n\nThe stability of the condensate depends on the shape of the energy functional $E(\\sigma)$. For weak attraction, $E(\\sigma)$ possesses a local minimum corresponding to a metastable state. As the attraction strength $|g|$ increases, this local minimum vanishes, leading to an inevitable collapse of the condensate ($\\sigma \\to 0$).\n\nDetermine the critical value of the interaction strength, $g_c$, at which this metastable state ceases to exist. Express your answer in terms of $N, m, \\omega, \\hbar$, and numerical constants.", "solution": "We start from the variational energy  \n$$E[\\Psi]=\\int\\!d^3r\\;\\Bigl[\\frac{\\hbar^2}{2m}|\\nabla\\Psi|^2+\\frac12m\\omega^2r^2|\\Psi|^2+\\frac g2|\\Psi|^4\\Bigr]$$  \nwith the Gaussian trial  \n$$\\Psi(r)=\\Bigl(\\frac{N}{\\pi^{3/2}\\sigma^3}\\Bigr)^{1/2}\\exp\\!\\Bigl(-\\frac{r^2}{2\\sigma^2}\\Bigr)\\,,\\qquad \n\\int|\\Psi|^2\\,d^3r=N\\,. $$\n\n1. Kinetic term  \n   $$E_{\\rm kin}\n   =\\int\\frac{\\hbar^2}{2m}|\\nabla\\Psi|^2d^3r\n   =\\frac{3N\\hbar^2}{4m\\sigma^2}\\,. $$\n\n2. Potential term  \n   $$E_{\\rm pot}\n   =\\int\\frac12m\\omega^2r^2|\\Psi|^2d^3r\n   =\\frac34m\\omega^2N\\sigma^2\\,, $$  \n   using $\\langle r^2\\rangle=3\\sigma^2/2$.\n\n3. Interaction term  \n   $$E_{\\rm int}\n   =\\frac g2\\int|\\Psi|^4d^3r\n   =\\frac{gN^2}{2\\,(2\\pi)^{3/2}\\,\\sigma^3}\\,, $$  \n   since $\\int e^{-2r^2/\\sigma^2}d^3r=\\pi^{3/2}(\\sigma^3/2^{3/2})$.\n\nThus the total energy  \n$$E(\\sigma)\n=\\frac{3N\\hbar^2}{4m\\sigma^2}+\\frac34m\\omega^2N\\sigma^2\n+\\frac{gN^2}{2(2\\pi)^{3/2}\\sigma^3}\\,. $$\n\nStability is lost when the extremum satisfies both  \n$$\\frac{dE}{d\\sigma}=0,\\qquad \\frac{d^2E}{d\\sigma^2}=0\\,. $$\n\nCompute  \n$$\\frac{dE}{d\\sigma}\n=-\\frac{3N\\hbar^2}{2m\\sigma^3}+\\frac{3}{2}m\\omega^2N\\sigma\n-\\frac{3gN^2}{2(2\\pi)^{3/2}\\sigma^4}=0, $$  \n$$\\frac{d^2E}{d\\sigma^2}\n=\\frac{9N\\hbar^2}{2m\\sigma^4}+\\frac{3}{2}m\\omega^2N\n+\\frac{6gN^2}{(2\\pi)^{3/2}\\sigma^5}=0\\,. $$\n\nFrom the first equation  \n$$\\frac{gN}{(2\\pi)^{3/2}}=m\\omega^2\\sigma^5-\\frac{\\hbar^2}{m}\\sigma\\,. $$  \nSubstitute into the second and eliminate $g$ gives  \n$$-\\,\\frac{3\\hbar^2}{m\\sigma^4}+15\\,m\\omega^2=0\n\\;\\Longrightarrow\\;\\sigma^4=\\frac{\\hbar^2}{5m^2\\omega^2}\\,. $$\n\nHence at the critical point  \n$$m\\omega^2\\sigma^5-\\frac{\\hbar^2}{m}\\sigma\n=-\\frac{4}{5^{5/4}}\\;\\frac{\\hbar^{5/2}}{m^{3/2}\\omega^{1/2}}\\,, $$\nso that  \n$$g_c\n=\\frac{(2\\pi)^{3/2}}{N}\\Bigl[m\\omega^2\\sigma^5-\\frac{\\hbar^2}{m}\\sigma\\Bigr]\n=-\\frac{4(2\\pi)^{3/2}}{5^{5/4}}\\;\\frac{\\hbar^{5/2}}{m^{3/2}\\omega^{1/2}\\,N}\n=-\\frac{2^{7/2}\\pi^{3/2}\\hbar^{5/2}}{5^{5/4}m^{3/2}\\omega^{1/2}N}\\,. $$", "answer": "$$\\boxed{g_c=-\\frac{2^{7/2}\\pi^{3/2}\\hbar^{5/2}}{5^{5/4}m^{3/2}\\omega^{1/2}N}}$$", "id": "229702"}, {"introduction": "Analytical methods like linearization and variational approximations provide crucial physical insight, but to find the precise shape of the ground-state wavefunction, we often must turn to computation. This practice bridges the gap between the abstract differential equation and a concrete numerical solution, a core skill in modern physics. You will discretize the time-independent Gross-Pitaevskii equation and implement an iterative solver to compute the condensate's density profile, effectively watching the wavefunction \"relax\" into its lowest energy state [@problem_id:2396656].", "problem": "You are to design and implement a Gauss–Seidel iteration to compute the ground state of a Bose–Einstein condensate (BEC) in a one-dimensional harmonic trap by solving the time-independent Gross–Pitaevskii equation (GPE) in dimensionless harmonic-oscillator units. Begin from the following fundamental base: the time-independent Gross–Pitaevskii equation (GPE) for a real-valued ground-state wavefunction $\\,\\psi(x)\\,$ in one dimension is\n$$\n\\left[-\\frac{1}{2}\\frac{d^2}{dx^2} + \\frac{1}{2}x^2 + g\\,\\psi(x)^2\\right]\\psi(x) = \\mu\\,\\psi(x),\n$$\nwith normalization\n$$\n\\int_{-\\infty}^{\\infty}\\psi(x)^2\\,dx = 1,\n$$\nand $\\psi(x)\\ge 0$ for the ground state. Here $\\,\\mu\\,$ is the chemical potential (eigenvalue), $\\,g\\,$ is a dimensionless interaction strength, and $\\,\\frac{1}{2}x^2\\,$ is the harmonic trapping potential. All quantities are dimensionless. For numerical computation, consider a finite domain $\\,x\\in[-L,L]\\,$ with homogeneous Dirichlet boundary conditions $\\,\\psi(-L)=\\psi(L)=0\\,$ and a uniform grid of $\\,N\\,$ points with spacing $\\,\\Delta x = \\frac{2L}{N-1}\\,$.\n\nYour tasks are:\n1) Derive a second-order central-difference discretization of the differential operator on the finite grid for interior points and write down the corresponding discrete nonlinear equations that the vector of nodal values $\\,\\psi_i\\,$ must satisfy. Ensure that the boundary values at $\\,i=0\\,$ and $\\,i=N-1\\,$ are fixed to zero.\n2) Starting from the definition of Gauss–Seidel iteration for linear systems, construct a nonlinear Gauss–Seidel fixed-point iteration suitable for these discrete equations by freezing the nonlinear coefficient $\\,g\\,\\psi_i^2\\,$ at the previous iterate, while updating each interior node sequentially using the most recently available neighbor values. Do not introduce any formulas not derivable from the discretization and the Gauss–Seidel principle itself. Explain how you will guarantee the ground-state normalization and non-negativity after each sweep.\n3) Define a discrete Rayleigh-quotient expression for the chemical potential $\\,\\mu\\,$ on the grid that is consistent with the continuous expression\n$$\n\\mu = \\frac{\\int \\psi(x)\\left[-\\frac{1}{2}\\frac{d^2}{dx^2}\\psi(x) + \\frac{1}{2}x^2\\psi(x) + g\\,\\psi(x)^3\\right]\\,dx}{\\int \\psi(x)^2\\,dx},\n$$\nwhere the second derivative is replaced by your finite-difference approximation. Use this discrete quantity to monitor convergence.\n4) Specify a stopping criterion based on simultaneous satisfaction of two conditions: the absolute change in $\\,\\mu\\,$ between successive sweeps is less than a tolerance $\\,\\varepsilon_\\mu\\,$ and the maximum absolute change in $\\,\\psi_i\\,$ across the grid is less than $\\,\\varepsilon_\\psi\\,$. Both tolerances are dimensionless. Also specify a maximum number of sweeps to prevent infinite loops.\n5) Implement the algorithm in code as a complete, runnable program. Your implementation must:\n   - Construct the grid and potential,\n   - Initialize $\\,\\psi\\,$ with a reasonable, normalized guess on $[-L,L]$,\n   - Perform nonlinear Gauss–Seidel sweeps with nonlinearity lagged to the previous iterate,\n   - Enforce $\\,\\psi\\ge 0\\,$ and normalization after each sweep,\n   - Compute the discrete $\\,\\mu\\,$ and check convergence.\n\nAngles are not used. No physical units are required since the formulation is dimensionless. All floating-point outputs should be rounded to six decimal places.\n\nTest suite:\nUse the following parameter sets $\\, (N,L,g)\\,$ with tolerances $\\,\\varepsilon_\\mu = 10^{-12}\\,$ and $\\,\\varepsilon_\\psi = 10^{-10}\\,$ and a maximum of $\\,20000\\,$ sweeps:\n- Case A (happy path): $\\,N=201\\,,\\,L=8\\,,\\,g=0.5.$\n- Case B (linear limit): $\\,N=201\\,,\\,L=8\\,,\\,g=0.$\n- Case C (stronger interaction): $\\,N=201\\,,\\,L=8\\,,\\,g=5.$\n- Case D (coarser grid, boundary-sensitive): $\\,N=41\\,,\\,L=8\\,,\\,g=0.$\n\nFor each case, return the final converged chemical potential $\\,\\mu\\,$ as a float rounded to six decimal places.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets in the order [Case A, Case B, Case C, Case D], for example\n[0.782100,0.500000,3.300000,0.500500]\nwith each entry rounded to six decimal places. The actual numerical values must be computed by your code.", "solution": "The problem posed is a standard exercise in computational physics. It is scientifically grounded, well-posed, objective, and complete. All necessary physical equations, numerical parameters, and algorithmic constraints are provided. The problem is valid, and we shall proceed with the derivation and implementation of the required numerical solution.\n\n### 1. Discretization of the Gross–Pitaevskii Equation\n\nThe continuous one-dimensional Gross–Pitaevskii equation is given by:\n$$\n\\left[-\\frac{1}{2}\\frac{d^2}{dx^2} + V(x) + g\\,\\psi(x)^2\\right]\\psi(x) = \\mu\\,\\psi(x)\n$$\nwhere the potential is $V(x) = \\frac{1}{2}x^2$. We discretize the spatial domain $x \\in [-L, L]$ into a uniform grid of $N$ points, denoted by $x_i = -L + i\\Delta x$ for $i = 0, 1, \\dots, N-1$. The grid spacing is $\\Delta x = \\frac{2L}{N-1}$. The wavefunction $\\psi(x)$ is represented by its nodal values $\\psi_i = \\psi(x_i)$.\n\nThe second derivative $\\frac{d^2\\psi}{dx^2}$ at an interior grid point $x_i$ (for $i=1, \\dots, N-2$) is approximated using a second-order central difference formula:\n$$\n\\frac{d^2\\psi}{dx^2}\\bigg|_{x_i} \\approx \\frac{\\psi(x_{i+1}) - 2\\psi(x_i) + \\psi(x_{i-1})}{(\\Delta x)^2} = \\frac{\\psi_{i+1} - 2\\psi_i + \\psi_{i-1}}{(\\Delta x)^2}\n$$\nSubstituting this into the GPE yields a system of $N-2$ coupled nonlinear algebraic equations for the interior points:\n$$\n-\\frac{1}{2(\\Delta x)^2}(\\psi_{i+1} - 2\\psi_i + \\psi_{i-1}) + \\left(\\frac{1}{2}x_i^2 + g\\psi_i^2\\right)\\psi_i = \\mu\\psi_i, \\quad i = 1, \\dots, N-2\n$$\nThe boundary conditions are $\\psi_0 = 0$ and $\\psi_{N-1} = 0$. We can rearrange the equation for each interior node $i$ by gathering terms involving $\\psi_i$:\n$$\n\\left(\\frac{1}{(\\Delta x)^2} + \\frac{1}{2}x_i^2 + g\\psi_i^2\\right)\\psi_i - \\frac{1}{2(\\Delta x)^2}(\\psi_{i-1} + \\psi_{i+1}) = \\mu\\psi_i\n$$\nThis system must be solved for the vector of nodal values $\\vec{\\psi} = (\\psi_1, \\dots, \\psi_{N-2})^T$ and the eigenvalue $\\mu$.\n\n### 2. Nonlinear Gauss–Seidel Fixed-Point Iteration\n\nThe problem specifies a nonlinear Gauss–Seidel iteration. This method treats the problem as a system of fixed-point equations to be solved iteratively. For the update of $\\psi_i$ at iteration step $k+1$, we use the most recently computed values of its neighbors. Critically, the nonlinear term $g\\psi_i^2$ and the chemical potential $\\mu$ are \"frozen\" at their values from the previous full sweep, denoted by superscript $(k)$.\n\nThe discrete equation at node $i$ is treated as an equation for the new value $\\psi_i^{(k+1)}$:\n$$\n-\\frac{1}{2(\\Delta x)^2}(\\psi_{i-1}^{(k+1)} - 2\\psi_i^{(k+1)} + \\psi_{i+1}^{(k)}) + \\left(\\frac{1}{2}x_i^2 + g(\\psi_i^{(k)})^2\\right)\\psi_i^{(k+1)} = \\mu^{(k)}\\psi_i^{(k+1)}\n$$\nNote that in the Gauss-Seidel scheme, we iterate through $i$ from $1$ to $N-2$. Thus, when we compute $\\psi_i^{(k+1)}$, the value $\\psi_{i-1}^{(k+1)}$ is already available from the current sweep, while $\\psi_{i+1}^{(k)}$ remains from the previous sweep.\n\nSolving for $\\psi_i^{(k+1)}$ gives the update formula:\n$$\n\\psi_i^{(k+1)} \\left[\\frac{1}{(\\Delta x)^2} + \\frac{1}{2}x_i^2 + g(\\psi_i^{(k)})^2 - \\mu^{(k)}\\right] = \\frac{1}{2(\\Delta x)^2}(\\psi_{i-1}^{(k+1)} + \\psi_{i+1}^{(k)})\n$$\n$$\n\\psi_i^{(k+1)} = \\frac{\\frac{1}{2(\\Delta x)^2} \\left(\\psi_{i-1}^{(k+1)} + \\psi_{i+1}^{(k)}\\right)}{\\frac{1}{(\\Delta x)^2} + \\frac{1}{2}x_i^2 + g(\\psi_i^{(k)})^2 - \\mu^{(k)}} = \\frac{\\psi_{i-1}^{(k+1)} + \\psi_{i+1}^{(k)}}{2 + 2(\\Delta x)^2 \\left(\\frac{1}{2}x_i^2 + g(\\psi_i^{(k)})^2 - \\mu^{(k)}\\right)}\n$$\nAfter a full sweep updating all interior nodes (from $i=1$ to $N-2$), we perform two additional steps:\n1.  **Enforce Non-negativity:** The ground state wavefunction is nodeless and can be chosen to be non-negative. We enforce this by setting $\\psi_i = \\max(0, \\psi_i)$ for all $i$.\n2.  **Enforce Normalization:** The continuous normalization condition $\\int \\psi(x)^2 dx = 1$ is discretized using the trapezoidal rule. Since $\\psi_0=\\psi_{N-1}=0$, the integral is $I = \\sum_{i=1}^{N-2} \\psi_i^2 \\Delta x \\approx \\Delta x \\sum_{i=0}^{N-1} \\psi_i^2$. The normalization constant is $C = 1/\\sqrt{I}$. The wavefunction is then renormalized via $\\psi_i \\to \\psi_i / C$.\n\n### 3. Discrete Rayleigh Quotient for the Chemical Potential\n\nThe chemical potential $\\mu$ is the expectation value of the GPE Hamiltonian $H = -\\frac{1}{2}\\frac{d^2}{dx^2} + \\frac{1}{2}x^2 + g\\psi^2$. For a normalized wavefunction, it is given by:\n$$\n\\mu = \\int_{-\\infty}^{\\infty} \\psi(x) H\\psi(x) \\,dx\n$$\nWe discretize this integral using the trapezoidal rule and our finite-difference approximation for $H$. After each sweep and renormalization of $\\psi$, a new value for $\\mu$ is computed:\n$$\n\\mu^{(k+1)} = \\Delta x \\sum_{i=1}^{N-2} \\psi_i^{(k+1)} \\left( H\\psi^{(k+1)} \\right)_i\n$$\nwhere $(H\\psi)_i$ is the discrete operator action:\n$$\n(H\\psi)_i = -\\frac{1}{2(\\Delta x)^2}(\\psi_{i+1} - 2\\psi_i + \\psi_{i-1}) + \\frac{1}{2}x_i^2\\psi_i + g\\psi_i^3\n$$\nSubstituting this into the sum gives the expression for the updated chemical potential:\n$$\n\\mu^{(k+1)} = \\Delta x \\sum_{i=1}^{N-2} \\psi_i^{(k+1)} \\left[ -\\frac{\\psi_{i+1}^{(k+1)} - 2\\psi_i^{(k+1)} + \\psi_{i-1}^{(k+1)}}{2(\\Delta x)^2} + \\frac{1}{2}x_i^2 \\psi_i^{(k+1)} + g(\\psi_i^{(k+1)})^3 \\right]\n$$\n\n### 4. Stopping Criterion\n\nThe iterative process is terminated when the solution has converged. Convergence is defined by the simultaneous satisfaction of two conditions:\n1.  The absolute change in the chemical potential between successive sweeps is less than a tolerance $\\varepsilon_\\mu$: $|\\mu^{(k+1)} - \\mu^{(k)}|  \\varepsilon_\\mu$.\n2.  The maximum absolute change in the wavefunction across all grid points is less than a tolerance $\\varepsilon_\\psi$: $\\max_{i} |\\psi_i^{(k+1)} - \\psi_i^{(k)}|  \\varepsilon_\\psi$.\n\nAn upper limit on the number of sweeps is imposed to prevent infinite loops in case of non-convergence.\n\n### 5. Algorithmic Procedure\n\nThe complete algorithm is as follows:\n1.  **Initialization:**\n    - Define the grid $x_i$ and the potential $V_i = \\frac{1}{2}x_i^2$.\n    - Construct a reasonable initial guess for the wavefunction $\\vec{\\psi}^{(0)}$, such as a normalized Gaussian function centered at $x=0$.\n    - Compute the initial chemical potential $\\mu^{(0)}$ using the discrete Rayleigh quotient with $\\vec{\\psi}^{(0)}$.\n2.  **Iterative Solver:**\n    - Begin a loop that continues until convergence or the maximum number of sweeps is reached.\n    - Store the current state for convergence checks: $\\vec{\\psi}_{old} \\leftarrow \\vec{\\psi}^{(k)}$ and $\\mu_{old} \\leftarrow \\mu^{(k)}$.\n    - Perform a nonlinear Gauss–Seidel sweep: for $i = 1, \\dots, N-2$, update $\\psi_i^{(k+1)}$ using the derived formula, the frozen values $\\vec{\\psi}_{old}$, $\\mu_{old}$, and the newest available neighbor value $\\psi_{i-1}^{(k+1)}$.\n    - Enforce non-negativity: $\\psi_i^{(k+1)} \\leftarrow \\max(0, \\psi_i^{(k+1)})$.\n    - Renormalize the new wavefunction vector $\\vec{\\psi}^{(k+1)}$.\n    - Compute the new chemical potential $\\mu^{(k+1)}$ using the updated $\\vec{\\psi}^{(k+1)}$ in the discrete Rayleigh quotient.\n    - Check for convergence by comparing $\\mu^{(k+1)}$ with $\\mu_{old}$ and $\\vec{\\psi}^{(k+1)}$ with $\\vec{\\psi}_{old}$ against the specified tolerances.\n3.  **Termination:**\n    - Upon convergence, the final value of $\\mu$ is the desired result.\n\nThis procedure constitutes a complete and robust method for finding the ground state solution of the Gross-Pitaevskii equation.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_gpe_ground_state(N, L, g, eps_mu, eps_psi, max_sweeps):\n    \"\"\"\n    Solves the 1D time-independent Gross-Pitaevskii equation using\n    a nonlinear Gauss-Seidel iteration.\n\n    Args:\n        N (int): Number of grid points.\n        L (float): Half-width of the spatial domain [-L, L].\n        g (float): Dimensionless interaction strength.\n        eps_mu (float): Convergence tolerance for the chemical potential.\n        eps_psi (float): Convergence tolerance for the wavefunction.\n        max_sweeps (int): Maximum number of iteration sweeps.\n\n    Returns:\n        float: The converged chemical potential, mu.\n    \"\"\"\n    # 1. Initialization\n    # Construct grid and potential\n    x = np.linspace(-L, L, N)\n    dx = x[1] - x[0]\n    V = 0.5 * x**2\n\n    # Initial guess for the wavefunction (normalized Gaussian)\n    psi = np.exp(-x**2 / 2.0)\n    norm_sq = np.sum(psi**2) * dx\n    psi = psi / np.sqrt(norm_sq)\n\n    # Function to compute chemical potential (mu) via Rayleigh quotient\n    def calculate_mu(p, v_pot, g_int, delta_x):\n        # Calculate mu only for interior points where psi is non-zero\n        psi_interior = p[1:-1]\n        \n        # Second derivative (kinetic energy term)\n        d2_psi = (p[2:] - 2*p[1:-1] + p[:-2]) / delta_x**2\n        \n        # Hamiltonian applied to psi\n        H_psi = -0.5 * d2_psi + v_pot[1:-1] * psi_interior + g_int * psi_interior**3\n        \n        # Discrete integral (trapezoidal rule)\n        mu_val = np.sum(psi_interior * H_psi) * delta_x\n        return mu_val\n\n    # Initial chemical potential\n    mu = calculate_mu(psi, V, g, dx)\n\n    # 2. Iterative Solver\n    for sweep in range(max_sweeps):\n        psi_old = psi.copy()\n        mu_old = mu\n\n        # Nonlinear Gauss-Seidel sweep for interior points\n        for i in range(1, N - 1):\n            # Using psi[i-1] (new) and psi_old[i+1] (old)\n            numerator = psi[i-1] + psi_old[i+1]\n            denominator = 2.0 + 2.0 * dx**2 * (V[i] + g * psi_old[i]**2 - mu_old)\n            if abs(denominator)  1e-14: # Avoid division by zero\n                # This case should not be hit with stable parameters\n                psi[i] = 0.0\n            else:\n                psi[i] = numerator / denominator\n\n        # Post-sweep processing\n        # Enforce non-negativity for the ground state\n        psi[psi  0] = 0.0\n\n        # Renormalize the wavefunction\n        norm_sq = np.sum(psi**2) * dx\n        if norm_sq  1e-14:\n            psi = psi / np.sqrt(norm_sq)\n        else:\n            # If psi collapses, reset to avoid NaN and break\n            psi.fill(0.0) \n            mu = 0.0\n            break\n\n        # Update mu using the new wavefunction\n        mu = calculate_mu(psi, V, g, dx)\n\n        # Check for convergence\n        d_psi = np.max(np.abs(psi - psi_old))\n        d_mu = abs(mu - mu_old)\n        \n        if d_mu  eps_mu and d_psi  eps_psi:\n            break\n            \n    return mu\n\n\ndef solve():\n    \"\"\"\n    Main driver function to run test cases and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    eps_mu = 1e-12\n    eps_psi = 1e-10\n    max_sweeps = 20000\n    \n    test_cases = [\n        # (N, L, g)\n        (201, 8.0, 0.5), # Case A\n        (201, 8.0, 0.0), # Case B\n        (201, 8.0, 5.0), # Case C\n        (41, 8.0, 0.0),  # Case D\n    ]\n\n    results = []\n    for N, L, g in test_cases:\n        mu_final = compute_gpe_ground_state(N, L, g, eps_mu, eps_psi, max_sweeps)\n        results.append(f\"{mu_final:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n\n```", "id": "2396656"}]}