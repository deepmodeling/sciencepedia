{"hands_on_practices": [{"introduction": "The remarkable properties of high-temperature superconductors like Yttrium Barium Copper Oxide ($\\mathrm{YBa}_2\\mathrm{Cu}_3\\mathrm{O}_7$) are intimately linked to their unique chemical composition and electronic structure. This practice explores the fundamental concept of charge balance that governs these materials. By applying this principle in the exercise [@problem_id:2257723], you will determine the average oxidation state of copper, revealing the non-integer value that signifies the presence of mobile charge carriers, or \"holes,\" essential for superconductivity.", "problem": "One of the most studied high-temperature superconductors is the ceramic material Yttrium Barium Copper Oxide (YBCO), which has the stoichiometric formula $\\mathrm{YBa}_2\\mathrm{Cu}_3\\mathrm{O}_7$. The fascinating properties of this material arise from the specific electronic structure, which is highly dependent on the oxidation states of its constituent elements. Assuming that yttrium (Y), barium (Ba), and oxygen (O) adopt their most common and stable oxidation states in ionic compounds (+3, +2, and -2, respectively), determine the average oxidation state of copper (Cu) in this compound. Express your answer as an exact fraction.", "solution": "In an electrically neutral compound, the sum of oxidation states weighted by their atom counts equals zero. Let the average oxidation state of copper be $x$. Using the given common oxidation states $+3$ for Y, $+2$ for Ba, and $-2$ for O, and the stoichiometry $\\mathrm{YBa}_{2}\\mathrm{Cu}_{3}\\mathrm{O}_{7}$, the charge balance is\n$$\n1\\cdot(+3)+2\\cdot(+2)+3\\cdot x+7\\cdot(-2)=0.\n$$\nExplicitly,\n$$\n3+4+3x-14=0 \\;\\;\\Rightarrow\\;\\; 3x-7=0 \\;\\;\\Rightarrow\\;\\; x=\\frac{7}{3}.\n$$\nThus, the average oxidation state of copper in $\\mathrm{YBa}_{2}\\mathrm{Cu}_{3}\\mathrm{O}_{7}$ is $\\frac{7}{3}$.", "answer": "$$\\boxed{\\frac{7}{3}}$$", "id": "2257723"}, {"introduction": "To understand superconductivity, we must first understand the electronic \"landscape\" where charge carriers move. This landscape is the material's band structure, which can be modeled using the tight-binding approximation and measured experimentally using techniques like Angle-Resolved Photoemission Spectroscopy (ARPES). This hands-on computational exercise [@problem_id:2828406] challenges you to connect theory with experiment by fitting a tight-binding model to synthetic ARPES data, allowing you to extract the crucial hopping parameters ($t$, $t'$, and $t''$) that define the electronic properties of the $\\mathrm{CuO}_2$ planes.", "problem": "You are given a single-band tight-binding model for the copper-oxygen plane in high-temperature cuprate superconductors, where the electronic band dispersion is modeled on a square lattice with lattice constant set to unity. The dispersion is\n$$\n\\epsilon(\\mathbf{k}) = -2t\\left(\\cos k_x + \\cos k_y\\right) - 4t'\\cos k_x \\cos k_y - 2t''\\left(\\cos 2k_x + \\cos 2k_y\\right),\n$$\nwhere $\\mathbf{k}=(k_x,k_y)$, $t$ is the nearest-neighbor hopping amplitude, $t'$ is the next-nearest-neighbor hopping amplitude, and $t''$ is the next-next-nearest-neighbor hopping amplitude. Angles $k_x$ and $k_y$ are in radians. Energies must be expressed in electronvolts (eV).\n\nAngle-Resolved Photoemission Spectroscopy (ARPES) measures the band dispersion $\\epsilon(\\mathbf{k})$ along momentum-space cuts. You will work with noise-free synthetic ARPES band maps generated from the above model at selected hole dopings $p$. For each doping $p$, a set of momenta $\\{\\mathbf{k}_i\\}$ along standard Brillouin zone (BZ) cuts is specified, and the corresponding energies $\\{E_i\\}$ are computed by the dispersion with doping-dependent parameters $(t,t',t'')$.\n\nYour task is to compute the ratio $t'/t$ for each doping by fitting the model to the synthetic data through least squares, starting from the following fundamental and well-tested bases:\n- The definition of momentum-space dispersion for a tight-binding Hamiltonian on a square lattice.\n- The principle of least squares: given data $\\{(\\mathbf{k}_i,E_i)\\}$ and a model $\\epsilon(\\mathbf{k};\\theta)$ linear in parameters $\\theta$, the best-fit parameters minimize the sum of squared residuals $\\sum_i \\left[E_i - \\epsilon(\\mathbf{k}_i;\\theta)\\right]^2$.\n\nImplement a program that performs the following steps:\n1. For each doping $p$ in a provided test suite, generate synthetic ARPES data by evaluating $\\epsilon(\\mathbf{k})$ on the union of the following three momentum-space cuts (angles in radians):\n   - $\\Gamma \\rightarrow X$ cut: $k_y = 0$, with $k_x$ sampled uniformly at $N = 51$ points from $-\\pi$ to $\\pi$ inclusive.\n   - $\\Gamma \\rightarrow M$ diagonal cut: $k_x = k_y$, sampled uniformly at $N = 51$ points with $k_x = k_y$ from $-\\pi$ to $\\pi$ inclusive.\n   - Zone boundary cut: $k_y = \\pi$, with $k_x$ sampled uniformly at $N = 51$ points from $-\\pi$ to $\\pi$ inclusive.\n   Use $a=1$ (lattice constant) so that $k_x$ and $k_y$ are in radians, within the first Brillouin zone $[-\\pi,\\pi]\\times[-\\pi,\\pi]$. For each sampled $\\mathbf{k}=(k_x,k_y)$, compute $E = \\epsilon(\\mathbf{k})$ in electronvolts using the dispersion above with the true parameters for that doping. Do not add noise.\n2. For each doping, estimate $(\\hat t,\\hat t',\\hat t'')$ by solving the linear least-squares problem that minimizes\n   $$\n   S(t,t',t'') = \\sum_i \\left[E_i - \\epsilon(\\mathbf{k}_i; t,t',t'')\\right]^2.\n   $$\n   Because the model is linear in the parameters $t$, $t'$, and $t''$, this can be solved by linear regression on the features\n   $$\n   f_1(\\mathbf{k}) = -2\\left(\\cos k_x + \\cos k_y\\right),\\quad\n   f_2(\\mathbf{k}) = -4\\cos k_x \\cos k_y,\\quad\n   f_3(\\mathbf{k}) = -2\\left(\\cos 2k_x + \\cos 2k_y\\right),\n   $$\n   so that $E = f_1 t + f_2 t' + f_3 t''$.\n3. Report the ratio $r = \\hat t'/\\hat t$ for each doping $p$.\n\nUnits and angle conventions:\n- Energies $E$ must be computed in electronvolts (eV).\n- Angles $k_x,k_y$ must be treated in radians.\n\nTest suite (doping and ground-truth parameters used to generate the synthetic data; all energies in electronvolts):\n- Case $1$: $p = 0.08$, $t = 0.32$, $t' = -0.12$, $t'' = 0.06$.\n- Case $2$: $p = 0.16$, $t = 0.34$, $t' = -0.10$, $t'' = 0.05$.\n- Case $3$: $p = 0.24$, $t = 0.36$, $t' = -0.09$, $t'' = 0.04$.\n- Case $4$: $p = 0.30$, $t = 0.38$, $t' = -0.08$, $t'' = 0.03$.\n\nYour program must:\n- Generate the synthetic datasets exactly as specified above, without randomness.\n- Solve the linear least-squares problem for each doping.\n- Compute $r = \\hat t'/\\hat t$ for each doping and round each $r$ to six decimal places.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite dopings. For example, the output must look like\n$[\\text{r}_1,\\text{r}_2,\\text{r}_3,\\text{r}_4]$\nwhere each $\\text{r}_i$ is a float rounded to six decimal places and contains no units.", "solution": "The problem has been subjected to rigorous validation and is determined to be scientifically sound, well-posed, and computationally tractable. It is a standard exercise in computational materials physics, involving the application of linear regression to a physical model. We shall proceed with the solution.\n\nThe problem requires the estimation of the ratio of hopping parameters, $t'/t$, for a single-band tight-binding model of a high-temperature cuprate superconductor. The electronic band dispersion $\\epsilon(\\mathbf{k})$ on a square lattice with unit lattice constant ($a=1$) is given by:\n$$\n\\epsilon(\\mathbf{k}) = -2t\\left(\\cos k_x + \\cos k_y\\right) - 4t'\\cos k_x \\cos k_y - 2t''\\left(\\cos 2k_x + \\cos 2k_y\\right)\n$$\nwhere $\\mathbf{k}=(k_x,k_y)$ is the momentum-space vector, and $(t, t', t'')$ are the nearest-neighbor, next-nearest-neighbor, and next-next-nearest-neighbor hopping amplitudes, respectively.\n\nThe core task is to recover these parameters from synthetic, noise-free energy data $E_i$ generated at a set of momentum points $\\{\\mathbf{k}_i\\}$. The model for $\\epsilon(\\mathbf{k})$ is linear in the parameters $(t, t', t'')$. This allows us to frame the problem as a linear least-squares fit. We can express the energy as:\n$$\nE(\\mathbf{k}) = t \\cdot f_1(\\mathbf{k}) + t' \\cdot f_2(\\mathbf{k}) + t'' \\cdot f_3(\\mathbf{k})\n$$\nThe features, or basis functions $f_j(\\mathbf{k})$, are defined by the dependencies on momentum $\\mathbf{k}$:\n$$\nf_1(\\mathbf{k}) = -2\\left(\\cos k_x + \\cos k_y\\right)\n$$\n$$\nf_2(\\mathbf{k}) = -4\\cos k_x \\cos k_y\n$$\n$$\nf_3(\\mathbf{k}) = -2\\left(\\cos 2k_x + \\cos 2k_y\\right)\n$$\nFor a set of $M$ measurements $(\\mathbf{k}_i, E_i)$, where $i=1, \\dots, M$, we can construct a system of linear equations. In matrix form, this is expressed as $\\mathbf{E} = \\mathbf{X} \\boldsymbol{\\beta}$, where:\n- $\\mathbf{E}$ is an $M \\times 1$ column vector of the observed energies $\\{E_i\\}$.\n- $\\boldsymbol{\\beta}$ is the $3 \\times 1$ column vector of the unknown parameters to be estimated, $\\boldsymbol{\\beta} = [\\hat t, \\hat t', \\hat t'']^T$.\n- $\\mathbf{X}$ is the $M \\times 3$ design matrix, where each element $X_{ij}$ corresponds to the value of the $j$-th feature for the $i$-th momentum point, $X_{ij} = f_j(\\mathbf{k}_i)$.\n\nThe solution $\\hat{\\boldsymbol{\\beta}}$ that minimizes the sum of squared residuals, $S = \\sum_i (E_i - \\epsilon(\\mathbf{k}_i; \\hat t, \\hat t', \\hat t''))^2 = ||\\mathbf{E} - \\mathbf{X}\\hat{\\boldsymbol{\\beta}}||_2^2$, is found by solving the normal equations, $\\mathbf{X}^T\\mathbf{X}\\hat{\\boldsymbol{\\beta}} = \\mathbf{X}^T\\mathbf{E}$. A numerically stable approach, such as Singular Value Decomposition (SVD), is employed to solve this overdetermined system.\n\nThe procedure for each test case, which is identified by a hole doping level $p$ and a corresponding set of true parameters $(t_{true}, t'_{true}, t''_{true})$, is as follows:\n\n1.  **Generate Synthetic Data:**\n    - A total of $M = 3 \\times 51 = 153$ momentum points $\\{\\mathbf{k}_i\\}$ are generated by sampling along $3$ specific cuts in the first Brillouin zone, $[-\\pi, \\pi] \\times [-\\pi, \\pi]$.\n    - **Cut 1 ($\\Gamma \\rightarrow X$ path):** $k_y = 0$, with $k_x$ sampled uniformly at $N = 51$ points from $-\\pi$ to $\\pi$.\n    - **Cut 2 ($\\Gamma \\rightarrow M$ path):** $k_x = k_y$, with both components sampled uniformly at $N = 51$ points from $-\\pi$ to $\\pi$.\n    - **Cut 3 (Zone Boundary path):** $k_y = \\pi$, with $k_x$ sampled uniformly at $N = 51$ points from $-\\pi$ to $\\pi$.\n    - For each $\\mathbf{k}_i$, the corresponding energy $E_i$ is calculated using the dispersion relation with the true parameters $(t_{true}, t'_{true}, t''_{true})$ for that case. This constitutes our synthetic ARPES data.\n\n2.  **Perform Linear Least-Squares Fit:**\n    - Construct the design matrix $\\mathbf{X}$ by evaluating the $3$ features $f_1, f_2, f_3$ at each of the $M=153$ momentum points.\n    - The vector of synthetic energies $\\mathbf{E}$ serves as the target variable.\n    - Solve the linear system $\\mathbf{X}\\hat{\\boldsymbol{\\beta}} = \\mathbf{E}$ for $\\hat{\\boldsymbol{\\beta}} = [\\hat{t}, \\hat{t'}, \\hat{t''}]^T$ using a standard linear least-squares solver. Since the data is noise-free and generated from the same model, the fit is expected to recover the true parameters to within machine precision, i.e., $\\hat{\\boldsymbol{\\beta}} \\approx \\boldsymbol{\\beta}_{true}$.\n\n3.  **Compute the Ratio:**\n    - From the estimated parameter vector $\\hat{\\boldsymbol{\\beta}}$, extract the first two components, $\\hat{t}$ and $\\hat{t'}$.\n    - Calculate the desired ratio $r = \\hat{t'}/\\hat{t}$.\n    - Round the result to $6$ decimal places as specified.\n\nThis procedure is repeated for each of the $4$ test cases provided. The doping parameter $p$ serves only as an identifier for each parameter set and is not used in the calculations.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the tight-binding parameter ratio t'/t for several doping cases.\n    \"\"\"\n    # Test suite (doping p, t, t', t''). Doping p is only for context.\n    # Energies are in eV.\n    test_cases = [\n        # p, t, t', t''\n        (0.08, 0.32, -0.12, 0.06),\n        (0.16, 0.34, -0.10, 0.05),\n        (0.24, 0.36, -0.09, 0.04),\n        (0.30, 0.38, -0.08, 0.03),\n    ]\n\n    results = []\n\n    for _, t_true, t_prime_true, t_prime2_true in test_cases:\n        # Step 1: Generate synthetic ARPES data\n        \n        # Define momentum sampling\n        N = 51\n        kx_range = np.linspace(-np.pi, np.pi, N, dtype=np.float64)\n\n        # Cut 1: Gamma -> X path (ky=0)\n        k_cut1 = np.zeros((N, 2), dtype=np.float64)\n        k_cut1[:, 0] = kx_range\n\n        # Cut 2: Gamma -> M path (kx=ky)\n        k_cut2 = np.zeros((N, 2), dtype=np.float64)\n        k_cut2[:, 0] = kx_range\n        k_cut2[:, 1] = kx_range\n\n        # Cut 3: Zone boundary path (ky=pi)\n        k_cut3 = np.zeros((N, 2), dtype=np.float64)\n        k_cut3[:, 0] = kx_range\n        k_cut3[:, 1] = np.pi\n\n        # Combine momentum points from all cuts\n        k_points = np.vstack((k_cut1, k_cut2, k_cut3))\n        kx = k_points[:, 0]\n        ky = k_points[:, 1]\n\n        # Define the features (basis functions) of the linear model\n        # f1 for t, f2 for t', f3 for t''\n        f1 = -2.0 * (np.cos(kx) + np.cos(ky))\n        f2 = -4.0 * np.cos(kx) * np.cos(ky)\n        f3 = -2.0 * (np.cos(2 * kx) + np.cos(2 * ky))\n        \n        # Construct the design matrix X\n        X = np.stack((f1, f2, f3), axis=1)\n\n        # Generate synthetic energy data E using the true parameters\n        true_params = np.array([t_true, t_prime_true, t_prime2_true])\n        E = X @ true_params\n\n        # Step 2: Solve the linear least-squares problem\n        # The model is E = X @ [t, t', t'']\n        # We solve for the parameters [t, t', t'']\n        # Since the data is noise-free, the fit should be exact.\n        estimated_params, _, _, _ = np.linalg.lstsq(X, E, rcond=None)\n        \n        t_hat = estimated_params[0]\n        t_prime_hat = estimated_params[1]\n        \n        # Step 3: Compute the ratio r = t'/t\n        ratio = t_prime_hat / t_hat\n        \n        # Round to six decimal places and store the result\n        results.append(round(ratio, 6))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2828406"}, {"introduction": "A key distinction of cuprate superconductors is their \"unconventional\" nature, characterized by a $d$-wave pairing state which is profoundly sensitive to impurities. While conventional $s$-wave superconductors are robust against non-magnetic scatterers, the sign-changing structure of the $d$-wave gap means even non-magnetic impurities can break Cooper pairs and suppress superconductivity. This exercise [@problem_id:121053] provides a hands-on application of the Abrikosov-Gor'kov theory to quantify this effect, allowing you to calculate the initial rate at which the critical temperature, $T_c$, is suppressed by impurities, a hallmark experimental signature of unconventional pairing.", "problem": "In the theory of unconventional superconductors, the presence of non-magnetic impurities can be pair-breaking and lead to a suppression of the critical temperature, $T_c$. Consider a d-wave superconductor, characterized by a pairing gap $\\Delta(\\mathbf{k}) = \\Delta_0 g(\\mathbf{k})$ where the form factor $g(\\mathbf{k})$ averages to zero over the Fermi surface, $\\langle g(\\mathbf{k}) \\rangle_{FS} = 0$, but its square averages to unity, $\\langle g(\\mathbf{k})^2 \\rangle_{FS} = 1$.\n\nThe superconductor contains a concentration $n_{imp}$ of randomly distributed, non-magnetic impurities. The impurities are assumed to be isotropic (s-wave) scatterers, with a scattering matrix element denoted by $u$. The normal state single-particle scattering time $\\tau$ due to these impurities is given by\n$$ \\frac{1}{\\tau} = \\frac{2\\pi}{\\hbar} n_{imp} N_0 |u|^2 $$\nwhere $N_0$ is the constant density of states per spin at the Fermi level, and $\\hbar$ is the reduced Planck constant.\n\nThe suppression of the critical temperature $T_c$ from its value $T_{c0}$ in the clean limit ($n_{imp}=0$) is described by the Abrikosov-Gor'kov equation:\n$$ \\ln\\left(\\frac{T_{c0}}{T_c}\\right) = \\psi\\left(\\frac{1}{2} + \\frac{\\hbar}{4\\pi\\tau k_B T_c}\\right) - \\psi\\left(\\frac{1}{2}\\right) $$\nHere, $k_B$ is the Boltzmann constant and $\\psi(z)$ is the digamma function, which is the logarithmic derivative of the gamma function, $\\psi(z) = d(\\ln \\Gamma(z))/dz$.\n\nYour task is to calculate the initial rate of suppression of the critical temperature with respect to the impurity concentration, $\\left.\\frac{dT_c}{dn_{imp}}\\right|_{n_{imp}=0}$. Express your answer in terms of $N_0$, $|u|^2$, $k_B$, and fundamental mathematical constants.", "solution": "1. Write the Abrikosov–Gor’kov equation as\n$$\\ln\\frac{T_{c0}}{T_c} \\;=\\;\\psi\\!\\Bigl(\\tfrac12 + X\\Bigr)\\;-\\;\\psi\\!\\bigl(\\tfrac12\\bigr)\\,,\\quad\nX\\equiv\\frac{\\hbar}{4\\pi\\tau\\,k_B\\,T_c}.$$\n2. Substitute $1/\\tau= \\tfrac{2\\pi}{\\hbar}n_{imp}N_0|u|^2$ to get\n$$X \\;=\\;\\frac{\\hbar}{4\\pi k_B T_c}\\,\\frac{2\\pi}{\\hbar}\\,n_{imp}N_0|u|^2\n\\;=\\;\\frac{N_0|u|^2}{2\\,k_B}\\,\\frac{n_{imp}}{T_c}\n\\;\\equiv\\;\\beta\\,\\frac{n_{imp}}{T_c},\\quad\n\\beta\\equiv\\frac{N_0|u|^2}{2k_B}.$$\n3. For small $n_{imp}$ expand to first order.  Let $T_c=T_{c0}-\\delta T$ with $\\delta T\\ll T_{c0}$.  Then\nLHS $\\approx\\ln(T_{c0}/T_c)\\approx\\frac{\\delta T}{T_{c0}}$,\nRHS $\\approx\\psi'(\\tfrac12)\\,X\n=\\psi'(\\tfrac12)\\,\\beta\\,\\frac{n_{imp}}{T_{c0}}$.\n4. Equate linear terms:\n$$\\frac{\\delta T}{T_{c0}} \\;=\\;\\psi'\\bigl(\\tfrac12\\bigr)\\,\\beta\\,\\frac{n_{imp}}{T_{c0}}\n\\quad\\Longrightarrow\\quad\n\\delta T \\;=\\;\\psi'\\bigl(\\tfrac12\\bigr)\\,\\beta\\,n_{imp}.$$\nSince $T_c=T_{c0}-\\delta T$, one finds\n$$\\frac{dT_c}{dn_{imp}}\\Big|_{0} \\;=\\;-\\,\\psi'\\bigl(\\tfrac12\\bigr)\\,\\beta.$$\n5. Use the known trigamma value $\\psi'(\\tfrac12)=\\tfrac{\\pi^2}{2}$ to obtain\n$$\\frac{dT_c}{dn_{imp}}\\Big|_{0}\n=-\\;\\frac{\\pi^2}{2}\\;\\frac{N_0|u|^2}{2k_B}\n=-\\;\\frac{\\pi^2\\,N_0\\,|u|^2}{4\\,k_B}\\,. $$", "answer": "$$\\boxed{-\\frac{\\pi^2\\,N_0\\,|u|^2}{4\\,k_B}}$$", "id": "121053"}]}