{"hands_on_practices": [{"introduction": "The Random Wave Model (RWM) provides a powerful statistical description of eigenfunctions in classically chaotic systems. It hypothesizes that at high energies, these wavefunctions behave like a random superposition of plane waves. This practice guides you through a foundational derivation within the RWM framework to calculate the variance of the wavefunction's spatial gradient, a quantity directly related to the local kinetic energy density [@problem_id:872573].", "problem": "In the field of quantum chaos, the statistical properties of wavefunctions in classically chaotic systems are of great interest. These systems can be experimentally realized using, for example, two-dimensional microwave cavities or semiconductor quantum dots. In both cases, the stationary wavefunctions (or the corresponding component of the electromagnetic field) $\\psi(\\mathbf{r})$ for a two-dimensional chaotic billiard of area $A$ are described by the Helmholtz equation, $(\\nabla^2 + k^2)\\psi(\\mathbf{r}) = 0$, with appropriate boundary conditions. The quantity $k$ is the wavenumber.\n\nA powerful theoretical tool for studying such wavefunctions is the Random Wave Model (RWM). In this model, a real-valued wavefunction $\\psi(\\mathbf{r})$ at high energies is conjectured to behave like a random superposition of a large number of plane waves with the same wavenumber $k$ but with random directions and phases. For a two-dimensional system, this can be represented by the following integral over all possible wavevector directions $\\theta \\in [0, 2\\pi)$:\n$$ \\psi(\\mathbf{r}) = \\mathcal{N} \\int_0^{2\\pi} [a(\\theta) \\cos(\\mathbf{k}(\\theta)\\cdot\\mathbf{r}) + b(\\theta) \\sin(\\mathbf{k}(\\theta)\\cdot\\mathbf{r})] \\, d\\theta $$\nHere, $\\mathbf{r}=(x,y)$ is the position vector, and $\\mathbf{k}(\\theta) = (k\\cos\\theta, k\\sin\\theta)$ is the wavevector. The coefficients $a(\\theta)$ and $b(\\theta)$ are independent, zero-mean Gaussian random functions of the angle $\\theta$, satisfying the correlation properties:\n$$ \\langle a(\\theta) a(\\theta') \\rangle = \\delta(\\theta - \\theta') $$\n$$ \\langle b(\\theta) b(\\theta') \\rangle = \\delta(\\theta - \\theta') $$\n$$ \\langle a(\\theta) b(\\theta') \\rangle = 0 $$\nwhere $\\langle \\cdot \\rangle$ denotes an ensemble average over the random coefficients. The constant $\\mathcal{N}$ is a normalization factor.\n\nThe wavefunction is normalized to unity over the area $A$ of the billiard: $\\int_A \\psi^2(\\mathbf{r}) \\, d^2r = 1$. The spatial average of any quantity $f(\\mathbf{r})$ is defined as $\\langle f \\rangle_{space} = \\frac{1}{A} \\int_A f(\\mathbf{r}) \\, d^2r$. For chaotic systems, the ergodic hypothesis allows equating spatial averages with ensemble averages, $\\langle \\cdot \\rangle_{space} = \\langle \\cdot \\rangle_{ens}$.\n\nBased on this random wave model, determine the variance of a single component of the wavefunction's spatial gradient, for example, the $x$-component. This variance is defined as the spatial average $\\text{Var}(\\partial_x \\psi) = \\langle (\\partial_x \\psi - \\langle \\partial_x \\psi \\rangle_{space})^2 \\rangle_{space}$. Express your answer in terms of the wavenumber $k$ and the area $A$.", "solution": "We start from the Random Wave representation in two dimensions,\n$$\n\\psi(\\mathbf r)\n= \\mathcal N\\int_0^{2\\pi}\\Bigl[a(\\theta)\\cos\\!\\bigl(\\mathbf k(\\theta)\\!\\cdot\\!\\mathbf r\\bigr)\n + b(\\theta)\\sin\\!\\bigl(\\mathbf k(\\theta)\\!\\cdot\\!\\mathbf r\\bigr)\\Bigr]\\,d\\theta,\n\\quad\n\\mathbf k(\\theta)=k(\\cos\\theta,\\sin\\theta).\n$$\n1.  First, we compute the $x$‚Äêderivative of the wavefunction:\n$$\n\\partial_x\\psi\n= \\mathcal N\\int_0^{2\\pi}\\Bigl[-\\,k\\cos\\theta\\;a(\\theta)\\,\n\\sin(\\mathbf k(\\theta)\\!\\cdot\\!\\mathbf r)\n\\;+\\;k\\cos\\theta\\;b(\\theta)\\,\\cos(\\mathbf k(\\theta)\\!\\cdot\\!\\mathbf r)\n\\Bigr]\\,d\\theta.\n$$\n2.  By ergodicity, the spatial variance equals the ensemble average. Since the random coefficients have zero mean, the ensemble average $\\langle\\partial_x\\psi\\rangle=0$. Therefore, $\\text{Var}(\\partial_x\\psi) = \\langle(\\partial_x\\psi)^2\\rangle$. We compute this by squaring the expression for $\\partial_x\\psi$ and taking the ensemble average. The delta-function correlations simplify the resulting double integral to a single integral:\n$$\n\\langle(\\partial_x\\psi)^2\\rangle = \\mathcal N^2 k^2 \\int_0^{2\\pi} (\\cos^2\\theta) \\left[ \\langle a(\\theta)^2 \\rangle \\sin^2(\\mathbf k \\cdot \\mathbf r) + \\langle b(\\theta)^2 \\rangle \\cos^2(\\mathbf k \\cdot \\mathbf r) \\right] d\\theta\n$$\n3.  Averaging over all positions $\\mathbf{r}$, the terms $\\sin^2(\\mathbf k \\cdot \\mathbf r)$ and $\\cos^2(\\mathbf k \\cdot \\mathbf r)$ both average to $\\frac{1}{2}$. Using $\\langle a(\\theta)^2 \\rangle = 1$ and $\\langle b(\\theta)^2 \\rangle = 1$ (in the sense of distributions), we get:\n$$\n\\langle(\\partial_x\\psi)^2\\rangle\n=\\mathcal N^2\\,k^2\n\\int_0^{2\\pi}\\cos^2\\theta \\left( \\frac{1}{2} + \\frac{1}{2} \\right) \\,d\\theta\n=\\mathcal N^2\\,k^2 \\int_0^{2\\pi}\\cos^2\\theta\\,d\\theta\n=\\mathcal N^2\\,k^2\\;\\pi.\n$$\n4.  Next, we find the normalization constant $\\mathcal{N}$ from the condition $\\int_A \\psi^2 \\, d^2r = 1$. This implies $\\langle\\psi^2\\rangle_{space} = 1/A$. Equating this to the ensemble average:\n$$\n\\langle\\psi^2\\rangle_{ens}\n=\\mathcal N^2\\int_0^{2\\pi}d\\theta \\left(\\langle a(\\theta)^2 \\rangle \\cos^2(\\dots)+\\langle b(\\theta)^2 \\rangle \\sin^2(\\dots) \\right)\n=\\mathcal N^2 \\int_0^{2\\pi}d\\theta \\left(\\frac{1}{2} + \\frac{1}{2}\\right) = 2\\pi\\,\\mathcal N^2.\n$$\nSetting $\\langle\\psi^2\\rangle = 1/A$ gives $2\\pi\\,\\mathcal N^2 = 1/A$, so $\\mathcal N^2 = \\frac{1}{2\\pi A}$.\n\n5.  Finally, we substitute the normalization constant back into our expression for the variance:\n$$\n\\text{Var}(\\partial_x\\psi)\n=\\frac{1}{2\\pi\\,A}\\;k^2\\;\\pi\n=\\frac{k^2}{2A}.\n$$", "answer": "$$\\boxed{\\frac{k^2}{2A}}$$", "id": "872573"}, {"introduction": "While the RWM describes spatial characteristics, Random Matrix Theory (RMT) predicts statistical properties of eigenfunctions in a generic basis, foretelling complete delocalization for chaotic systems. This exercise employs the Inverse Participation Ratio (IPR), a standard measure of localization, to make this concept concrete. You will calculate the expected IPR for a typical eigenstate, confirming the RMT prediction that it scales inversely with the system size $N$ [@problem_id:908234].", "problem": "In the study of quantum chaos, the statistical properties of quantum systems whose classical counterparts are chaotic are often modeled using Random Matrix Theory (RMT). For systems that do not possess time-reversal symmetry, the appropriate ensemble of random Hamiltonians is the Gaussian Unitary Ensemble (GUE). A central prediction of RMT is that the eigenfunctions of such chaotic systems are \"ergodic\" or \"fully delocalized\" in any generic basis. This means the eigenfunctions behave like random vectors.\n\nSpecifically, an eigenfunction $|\\psi\\rangle$ of an $N \\times N$ GUE Hamiltonian, when expanded in an orthonormal basis $\\{|n\\rangle\\}_{n=1}^N$ as $|\\psi\\rangle = \\sum_{n=1}^N c_n |n\\rangle$, has components $c_n$ that are statistically equivalent to the components of a vector chosen uniformly at random from the surface of the unit hypersphere in $\\mathbb{C}^N$ (a property known as Haar-randomness).\n\nA useful measure to quantify the degree of delocalization of an eigenfunction is the Inverse Participation Ratio (IPR), denoted by $P_2$. For a normalized state $|\\psi\\rangle$, it is defined as:\n$$P_2 = \\sum_{n=1}^{N} |c_n|^4$$\nThe IPR is small for delocalized states (where many $|c_n|^2$ are of order $1/N$) and of order 1 for localized states (where one $|c_n|^2$ is close to 1).\n\nAssuming the statistical properties of an eigenfunction are described by a Haar-random unit vector in $\\mathbb{C}^N$, compute the exact ensemble average of the Inverse Participation Ratio, $\\langle P_2 \\rangle$. The result should be expressed as a function of the Hilbert space dimension $N$.\n\nFor your derivation, you may use the fact that for a Haar-random unit vector in $\\mathbb{C}^N$, the probability distribution of the squared magnitude of any single component, $x = |c_k|^2$, is given by $p(x) = (N-1)(1-x)^{N-2}$ for $x \\in [0, 1]$.", "solution": "We wish to compute the ensemble average of the Inverse Participation Ratio, $\\langle P_2 \\rangle$.\nBy the linearity of the expectation operator, we can write:\n$$\n\\langle P_2\\rangle = \\left\\langle\\sum_{n=1}^N |c_n|^4\\right\\rangle = \\sum_{n=1}^N \\langle |c_n|^4\\rangle.\n$$ \nDue to the statistical equivalence of all components of the Haar-random vector, the expectation $\\langle |c_n|^4\\rangle$ is the same for all $n$. Thus, we have:\n$$\n\\langle P_2\\rangle = N\\,\\langle |c_1|^4\\rangle.\n$$ \nThe problem provides the probability density function (PDF) for the squared magnitude of a single component, $x=|c_1|^2$, as $p(x)=(N-1)(1-x)^{N-2}$ for $x\\in[0,1]$. We can use this to compute the required moment $\\langle |c_1|^4\\rangle = \\langle x^2 \\rangle$:\n$$\n\\langle |c_1|^4\\rangle = \\int_0^1 x^2\\,p(x)\\,dx = (N-1)\\int_0^1 x^2(1-x)^{N-2}\\,dx.\n$$ \nThis integral is an instance of the Beta function, $B(z_1, z_2) = \\int_0^1 t^{z_1-1}(1-t)^{z_2-1} dt = \\frac{\\Gamma(z_1)\\Gamma(z_2)}{\\Gamma(z_1+z_2)}$.\nWith $z_1-1=2$ and $z_2-1=N-2$, we have $z_1=3$ and $z_2=N-1$. The integral is:\n$$\n\\int_0^1 x^2(1-x)^{N-2}\\,dx = B(3, N-1) = \\frac{\\Gamma(3)\\,\\Gamma(N-1)}{\\Gamma(N+2)}.\n$$\nUsing the property $\\Gamma(n)=(n-1)!$ for integer $n$:\n$$\nB(3, N-1) = \\frac{2!\\,(N-2)!}{(N+1)!} = \\frac{2}{(N+1)N(N-1)}.\n$$ \nNow, we can find $\\langle |c_1|^4\\rangle$:\n$$\n\\langle |c_1|^4\\rangle = (N-1) \\cdot B(3, N-1) = (N-1)\\,\\frac{2}{(N+1)N(N-1)} = \\frac{2}{N(N+1)}.\n$$\nFinally, we substitute this back into the expression for $\\langle P_2 \\rangle$:\n$$\n\\langle P_2\\rangle = N\\cdot\\langle |c_1|^4\\rangle = N\\cdot\\frac{2}{N(N+1)} = \\frac{2N}{N(N+1)}.\n$$", "answer": "$$\\boxed{\\frac{2N}{N(N+1)}}$$", "id": "908234"}, {"introduction": "The ergodic picture of chaotic eigenfunctions has fascinating exceptions, most notably \"quantum scars,\" discovered by Eric Heller. These are enhancements of wavefunction probability density along the paths of unstable classical periodic orbits. This computational exercise provides a hands-on approach to bridge theory and analysis, requiring you to model a scarred wavefunction and implement a statistical metric to quantify its presence [@problem_id:2425412].", "problem": "Construct a self-contained program that evaluates whether enhanced probability density aligned with a specified curve is present in two-dimensional eigenfunction-like fields modeled for a chaotic quantum billiard. The fields are defined on a square domain and built from a superposition of plane waves modulated by a localized enhancement (\"scar\") near a specified curve. Your program must produce a single scalar indicator for each test case that quantifies the enhancement along the given curve relative to the global background.\n\nThe spatial domain is the square $\\left[0,1\\right]\\times\\left[0,1\\right]$ with dimensionless coordinates $\\left(x,y\\right)$. For each test case, define a uniform grid with $N$ points along each axis. Let $M$ be the number of plane waves, $k$ be a positive constant wave number (in radians per unit length), and let the directions $\\theta_m$ be evenly spaced as $\\theta_m = 2\\pi m/M$ for $m\\in\\{0,1,\\dots,M-1\\}$. Define phases $\\phi_m = 2\\pi \\left(\\left(a m + b\\right) \\bmod M\\right)/M$ with integers $a$ and $b$ such that $a$ is coprime to $M$. Let the background real-valued field be\n$$\nR(x,y) = \\frac{1}{\\sqrt{M}} \\sum_{m=0}^{M-1} \\cos\\!\\left(k\\left(\\cos\\theta_m\\, x + \\sin\\theta_m\\, y\\right) + \\phi_m\\right).\n$$\nFor a line segment $\\gamma$ specified by endpoints $\\mathbf{p}_1=(x_1,y_1)$ and $\\mathbf{p}_2=(x_2,y_2)$, define the distance from a point $\\mathbf{r}=(x,y)$ to the segment as\n$$\nd(\\mathbf{r},\\gamma)=\\min_{t\\in[0,1]}\\left\\|\\mathbf{r}-\\left(\\mathbf{p}_1 + t\\left(\\mathbf{p}_2-\\mathbf{p}_1\\right)\\right)\\right\\|_2.\n$$\nGiven a nonnegative amplitude $A$ and a positive width parameter $\\sigma$, define the modulation\n$$\nS(x,y) = 1 + A \\exp\\!\\left(-\\frac{d(x,y,\\gamma)^2}{2\\sigma^2}\\right).\n$$\nDefine the complex-valued wavefunction surrogate as $\\psi(x,y)=S(x,y)\\,R(x,y)$ and the corresponding probability density as $\\rho(x,y)=|\\psi(x,y)|^2$. Normalize $\\psi$ so that the discrete approximation to the integral of $\\rho$ over the domain equals $1$, using the uniform grid cell area.\n\nFor each test case, compute the following scalar indicator of enhancement along $\\gamma$:\n- Define the tube weight\n$$\nw(x,y)=\\exp\\!\\left(-\\frac{d(x,y,\\gamma)^2}{2\\sigma^2}\\right).\n$$\n- Let the spatial averages be computed with uniform weights over the grid. Define\n$$\n\\bar{\\rho}=\\text{mean of }\\rho(x,y),\\qquad \\sigma_\\rho=\\text{standard deviation of }\\rho(x,y),\n$$\nand the tube-weighted mean\n$$\n\\langle\\rho\\rangle_{\\gamma}=\\frac{\\sum \\rho(x,y)\\,w(x,y)}{\\sum w(x,y)}.\n$$\n- The required indicator is the standardized enhancement\n$$\nZ=\\frac{\\langle\\rho\\rangle_{\\gamma}-\\bar{\\rho}}{\\sigma_\\rho}.\n$$\n\nUse the following fixed global parameters for all test cases: $M=64$, $k=100$, $a=37$, $b=13$. Angles $\\theta_m$ and phases $\\phi_m$ are in radians. All lengths are dimensionless. For the line segment endpoints and widths below, interpret them in the same dimensionless units as the domain coordinates.\n\nTest suite (four cases), each given as $\\left(N,\\mathbf{p}_1,\\mathbf{p}_2,A,\\sigma\\right)$:\n1. $\\left(128,(0.1,0.1),(0.9,0.9),0.5,0.02\\right)$\n2. $\\left(128,(0.5,0.1),(0.5,0.9),0.0,0.02\\right)$\n3. $\\left(64,(0.1,0.9),(0.9,0.1),0.08,0.02\\right)$\n4. $\\left(160,(0.5,0.05),(0.5,0.95),0.3,0.015\\right)$\n\nYour program must:\n- Construct $\\rho(x,y)$ for each test case as defined above, including normalization of $\\psi$ so that the discrete integral of $\\rho$ equals $1$.\n- Compute $Z$ for each case exactly as defined above.\n- Produce a single line of output containing the list of the four $Z$ values, each rounded to three decimal places, as a comma-separated list enclosed in square brackets, e.g., $\\left[\\text{z}_1,\\text{z}_2,\\text{z}_3,\\text{z}_4\\right]$.\n\nAll computations must be performed in dimensionless units. Angles are in radians. The final outputs are dimensionless real numbers.", "solution": "This is a well-posed challenge in computational physics, firmly rooted in the established theory of quantum chaos. The objective is to numerically construct and analyze a two-dimensional scalar field that models a quantum \"scar\"‚Äîan enhancement of probability density along a classical unstable periodic orbit within a chaotic system. The solution will be derived through a direct numerical implementation of the provided mathematical formalism.\n\nThe procedure is executed as follows. First, the spatial domain is discretized. Subsequently, the background field, relevant geometric quantities, and the modulated wavefunction are computed on this discrete grid. Finally, the resulting probability density is normalized, and the specified statistical indicator is calculated. Each step of this process is detailed below.\n\n**1. Domain Discretization and Fixed Parameters**\n\nThe continuous domain $\\left[0,1\\right]\\times\\left[0,1\\right]$ is discretized into a uniform grid of $N \\times N$ points. The grid coordinates are generated with a uniform spacing of $1/(N-1)$ along each axis, ensuring complete coverage of the domain, including its boundaries. The global parameters are fixed for all test cases: the number of plane waves is $M=64$, the wave number is $k=100$, and the coefficients for phase generation are $a=37$ and $b=13$. The plane wave directions $\\theta_m$ and their corresponding phases $\\phi_m$ are pre-computed according to the specified formulae:\n$$\n\\theta_m = \\frac{2\\pi m}{M}, \\quad m \\in \\{0, 1, \\dots, M-1\\}\n$$\n$$\n\\phi_m = \\frac{2\\pi}{M} \\left( (a m + b) \\pmod{M} \\right)\n$$\nThe condition that $a=37$ is coprime to $M=64$ is satisfied, which is necessary for generating a suitable pseudo-random sequence for the phases.\n\n**2. Background Field Construction**\n\nThe real-valued background field $R(x,y)$ is constructed as a superposition of plane waves. This is a standard formulation in the study of quantum chaos, often referred to as the random wave model. The field is computed at each grid point $(x,y)$ using the given expression:\n$$\nR(x,y) = \\frac{1}{\\sqrt{M}} \\sum_{m=0}^{M-1} \\cos\\!\\left(k\\left(x \\cos\\theta_m + y \\sin\\theta_m \\right) + \\phi_m\\right)\n$$\nComputationally, this is efficiently realized by creating two $N \\times N$ arrays representing the $x$ and $y$ coordinates of the grid, and then, for each wave component $m$, calculating the argument of the cosine function and summing the results over all $m$.\n\n**3. Distance to the Line Segment**\n\nThe analysis requires computing the shortest Euclidean distance from each grid point $\\mathbf{r}=(x,y)$ to the specified line segment $\\gamma$, which is defined by its endpoints $\\mathbf{p}_1=(x_1, y_1)$ and $\\mathbf{p}_2=(x_2, y_2)$. Let $\\mathbf{u} = \\mathbf{p}_2 - \\mathbf{p}_1$ be the vector defining the segment's direction and length. Any point on the infinite line containing the segment can be parameterized as $\\mathbf{p}(t) = \\mathbf{p}_1 + t \\mathbf{u}$. The parameter $t$ corresponding to the orthogonal projection of a grid point $\\mathbf{r}$ onto this line is given by:\n$$\nt = \\frac{(\\mathbf{r} - \\mathbf{p}_1) \\cdot \\mathbf{u}}{\\|\\mathbf{u}\\|^2}\n$$\nTo find the closest point on the *segment* $\\gamma$, this parameter must be clamped to the interval $\\left[0,1\\right]$. Let $t' = \\max(0, \\min(1, t))$. The closest point on the segment is then $\\mathbf{p}_{\\text{closest}} = \\mathbf{p}_1 + t' \\mathbf{u}$. The required distance is then calculated as:\n$$\nd(\\mathbf{r}, \\gamma) = \\|\\mathbf{r} - \\mathbf{p}_{\\text{closest}}\\|_2\n$$\nThis calculation is performed for every point on the grid, producing an $N \\times N$ distance field. The special case where $\\mathbf{p}_1 = \\mathbf{p}_2$ (a zero-length segment) must be handled separately; in this instance, the distance is simply $\\|\\mathbf{r} - \\mathbf{p}_1\\|_2$.\n\n**4. Wavefunction, Probability Density, and Normalization**\n\nThe background field $R(x,y)$ is modulated to introduce an enhancement, or \"scar,\" along the segment $\\gamma$. The modulation factor $S(x,y)$ is defined as:\n$$\nS(x,y) = 1 + A \\exp\\!\\left(-\\frac{d(x,y,\\gamma)^2}{2\\sigma^2}\\right)\n$$\nwhere $A$ is the scar amplitude and $\\sigma$ is its characteristic width. The unnormalized, real-valued wavefunction is then $\\psi(x,y) = S(x,y) R(x,y)$. Consequently, the probability density is $\\rho(x,y) = |\\psi(x,y)|^2 = (S(x,y) R(x,y))^2$.\n\nThis density must be normalized so that its integral over the unit square domain equals $1$. Using a discrete sum over the grid as an approximation of the integral, the normalization condition is:\n$$\n\\sum_{i=1}^{N} \\sum_{j=1}^{N} \\rho_{\\text{norm}}(x_i, y_j) \\Delta A = 1\n$$\nwhere the area of a single grid cell is $\\Delta A = (1/(N-1))^2$. The normalized density is therefore obtained from the unnormalized density $\\rho_{\\text{unnorm}}$ as follows:\n$$\n\\rho_{\\text{norm}}(x,y) = \\frac{\\rho_{\\text{unnorm}}(x,y)}{\\left(\\sum_{i,j} \\rho_{\\text{unnorm}}(x_i, y_j)\\right) \\Delta A}\n$$\n\n**5. Enhancement Indicator Calculation**\n\nThe final step is to compute the standardized enhancement indicator, $Z$. This requires three statistical quantities derived from the normalized probability density field $\\rho(x,y)$:\n- The global mean density, computed over all grid points: $\\bar{\\rho} = \\frac{1}{N^2} \\sum_{i,j} \\rho(x_i, y_j)$.\n- The global standard deviation of the density: $\\sigma_\\rho = \\sqrt{\\frac{1}{N^2} \\sum_{i,j} (\\rho(x_i, y_j) - \\bar{\\rho})^2}$.\n- The tube-weighted mean density, $\\langle\\rho\\rangle_{\\gamma}$. This is the average of $\\rho$ weighted by proximity to the scar, using the weight function $w(x,y) = \\exp\\left(-\\frac{d(x,y,\\gamma)^2}{2\\sigma^2}\\right)$. The weighted average is given by:\n$$\n\\langle\\rho\\rangle_{\\gamma} = \\frac{\\sum_{i,j} \\rho(x_i,y_j) w(x_i,y_j)}{\\sum_{i,j} w(x_i,y_j)}\n$$\nThe indicator $Z$ is a form of Z-score, which quantifies the significance of the density enhancement within the scar region relative to the background fluctuations. It is defined as:\n$$\nZ = \\frac{\\langle\\rho\\rangle_{\\gamma} - \\bar{\\rho}}{\\sigma_\\rho}\n$$\nThis entire computational procedure is to be applied to each of the four test cases provided, and the resulting $Z$ values are reported as the final answer.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the quantum scar analysis problem for a set of test cases.\n    \"\"\"\n\n    # --- Fixed Global Parameters ---\n    M = 64\n    k = 100.0\n    a = 37\n    b = 13\n\n    # --- Pre-calculate angle and phase arrays ---\n    m_vals = np.arange(M)\n    thetas = 2.0 * np.pi * m_vals / M\n    phis = 2.0 * np.pi * ((a * m_vals + b) % M) / M\n    cos_thetas = np.cos(thetas)\n    sin_thetas = np.sin(thetas)\n\n    # --- Test Suite ---\n    test_cases = [\n        (128, (0.1, 0.1), (0.9, 0.9), 0.5, 0.02),\n        (128, (0.5, 0.1), (0.5, 0.9), 0.0, 0.02),\n        (64,  (0.1, 0.9), (0.9, 0.1), 0.08, 0.02),\n        (160, (0.5, 0.05), (0.5, 0.95), 0.3, 0.015)\n    ]\n\n    results = []\n\n    for case in test_cases:\n        N, p1_coords, p2_coords, A, sigma = case\n\n        # 1. Domain Discretization\n        grid_1d = np.linspace(0.0, 1.0, N)\n        X, Y = np.meshgrid(grid_1d, grid_1d)\n\n        # 2. Background Field R(x,y) Construction\n        R = np.zeros_like(X, dtype=np.float64)\n        for m in range(M):\n            R += np.cos(k * (X * cos_thetas[m] + Y * sin_thetas[m]) + phis[m])\n        R /= np.sqrt(M)\n\n        # 3. Distance d(x,y,gamma) Calculation\n        p1 = np.array(p1_coords, dtype=np.float64)\n        p2 = np.array(p2_coords, dtype=np.float64)\n        segment_vec = p2 - p1\n        segment_len_sq = np.dot(segment_vec, segment_vec)\n\n        if segment_len_sq == 0.0:\n            # Distance to a point\n            dist_sq = (X - p1[0])**2 + (Y - p1[1])**2\n        else:\n            # Project grid points onto the line defined by the segment\n            t = ((X - p1[0]) * segment_vec[0] + (Y - p1[1]) * segment_vec[1]) / segment_len_sq\n            # Clamp t to the [0, 1] interval to find the closest point on the segment\n            t_clipped = np.clip(t, 0.0, 1.0)\n            \n            # Coordinates of the closest point on the segment for each grid point\n            closest_x = p1[0] + t_clipped * segment_vec[0]\n            closest_y = p1[1] + t_clipped * segment_vec[1]\n            \n            # Calculate squared Euclidean distance\n            dist_sq = (X - closest_x)**2 + (Y - closest_y)**2\n        \n        # 4. Modulation S(x,y) and Weight w(x,y)\n        w = np.exp(-dist_sq / (2.0 * sigma**2))\n        S = 1.0 + A * w\n\n        # 5. Wavefunction psi, Density rho, and Normalization\n        psi = S * R\n        rho_unnorm = psi**2\n        \n        # The discrete integral is sum(rho) * cell_area\n        cell_area = (1.0 / (N - 1))**2 if N > 1 else 1.0\n        integral_rho = np.sum(rho_unnorm) * cell_area\n        rho = rho_unnorm / integral_rho\n        \n        # 6. Enhancement Indicator Z Calculation\n        rho_mean = np.mean(rho)\n        rho_std = np.std(rho)\n        \n        if rho_std == 0.0:\n            # Avoid division by zero in the unlikely case of a flat field\n            Z = 0.0\n        else:\n            # Calculate tube-weighted mean density\n            rho_weighted_mean = np.sum(rho * w) / np.sum(w)\n            # Calculate the standardized enhancement Z\n            Z = (rho_weighted_mean - rho_mean) / rho_std\n            \n        results.append(Z)\n\n    # Format the final output string as specified\n    formatted_results = [f\"{z:.3f}\" for z in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\n\nsolve()\n\n```", "id": "2425412"}]}