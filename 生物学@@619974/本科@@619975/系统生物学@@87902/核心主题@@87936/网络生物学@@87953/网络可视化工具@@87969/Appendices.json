{"hands_on_practices": [{"introduction": "生物网络并非随机连接，其中一些蛋白质比其他蛋白质扮演着更核心的角色。这个练习将引导你掌握一个基本但极其重要的概念：将原始的相互作用数据转化为“网络度”($degree$)，并借此识别出网络中的“枢纽”(hub)蛋白质。通过这种方式，你可以快速定位在复杂生物系统中可能起着关键调控作用的分子 [@problem_id:1453252]。", "problem": "在系统生物学中，蛋白质-蛋白质相互作用（PPI）网络常被用来理解细胞内复杂的功能关系。在这些网络中，蛋白质被表示为节点，而两个蛋白质之间的物理相互作用则被表示为连接它们的边。拥有显著大量相互作用伙伴的蛋白质被称为“枢纽蛋白”（hubs），它们通常在细胞过程中扮演关键角色。\n\n一位研究人员正在分析一个来自酿酒酵母 *Saccharomyces cerevisiae* 的、通过计算推导的小型 PPI 子网络。下面列出了观察到的相互作用。每一行代表两个蛋白质之间的一次独立相互作用。\n\n相互作用列表：\n- NSP1 – NUP1\n- NSP1 – NUP57\n- NSP1 – KAP95\n- NSP1 – SEC13\n- NSP1 – ACT1\n- ACT1 – ARP2\n- ACT1 – CAP2\n- ACT1 – MYO2\n- CDC28 – CLN2\n- CDC28 – SWI6\n- CDC28 – FAR1\n- KAP95 – NUP1\n- ARP2 – ARC40\n\n根据此数据集，找出该子网络中连接数最多的三个“枢纽蛋白”，并按连接数从多到少排序。\n\nA. NSP1, ACT1, CDC28\n\nB. ACT1, NSP1, KAP95\n\nC. NSP1, CDC28, ARP2\n\nD. ARP2, KAP95, NUP1\n\nE. ACT1, CDC28, FAR1", "solution": "将该 PPI 子网络建模为一个无向简单图，其顶点集为 $V$（蛋白质），边集为 $E$（相互作用）。对于每个蛋白质 $u \\in V$，其连接性由其度 $\\deg(u)$ 来量化，定义为\n$$\n\\deg(u)=\\left|\\{v \\in V:\\{u,v\\} \\in E\\}\\right|.\n$$\n根据相互作用列表，边如下：\nNSP1–NUP1, NSP1–NUP57, NSP1–KAP95, NSP1–SEC13, NSP1–ACT1, ACT1–ARP2, ACT1–CAP2, ACT1–MYO2, CDC28–CLN2, CDC28–SWI6, CDC28–FAR1, KAP95–NUP1, ARP2–ARC40.\n\n具体计算每个蛋白质的度：\n- 对于 NSP1，其相邻节点为 NUP1, NUP57, KAP95, SEC13, ACT1，因此\n$$\n\\deg(\\text{NSP1})=5.\n$$\n- 对于 ACT1，其相邻节点为 NSP1, ARP2, CAP2, MYO2，因此\n$$\n\\deg(\\text{ACT1})=4.\n$$\n- 对于 CDC28，其相邻节点为 CLN2, SWI6, FAR1，因此\n$$\n\\deg(\\text{CDC28})=3.\n$$\n- 对于 KAP95，其相邻节点为 NSP1, NUP1，因此 $\\deg(\\text{KAP95})=2$。\n- 对于 NUP1，其相邻节点为 NSP1, KAP95，因此 $\\deg(\\text{NUP1})=2$。\n- 对于 ARP2，其相邻节点为 ACT1, ARC40，因此 $\\deg(\\text{ARP2})=2$。\n- 所有其余的蛋白质 (NUP57, SEC13, CAP2, MYO2, CLN2, SWI6, FAR1, ARC40) 的度均为 $1$。\n\n因此，连接数最多的三个枢纽蛋白，按连接数从多到少排序，是 NSP1、ACT1、CDC28，这对应于选项 A。", "answer": "$$\\boxed{A}$$", "id": "1453252"}, {"introduction": "在理解了单个节点的重要性之后，我们进一步探索网络如何传递信息，例如在细胞信号转导通路中。这个练习将信号通路抽象为一个有向图，其中“最短路径”代表了信号从受体到效应器最直接、最高效的传递路线。通过手动追踪这条路径，你将学会分析网络中的信息流，这是理解生物过程动态性的关键一步 [@problem_id:1453233]。", "problem": "一个系统生物学家团队正在研究一条新近表征的细胞内信号通路。该通路始于细胞表面受体“胰高血糖素样肽受体 (GLP-R)”的激活，并最终导致关键转录因子“锌指E-box结合同源异形盒1 (ZEB-1)”的激活，后者负责调控基因表达。\n\n该团队已经确定了参与此信号级联的一系列蛋白质，并确定了以下直接的激活相互作用（其中蛋白质 X -> 蛋白质 Y 表示 X 激活或导致 Y 的激活）：\n\n1.  GLP-R -> Adaptin\n2.  GLP-R -> Signalase-A\n3.  Adaptin -> Signalase-B\n4.  Signalase-A -> Kinase-X\n5.  Signalase-B -> ZEB-1\n6.  Kinase-X -> Kinase-Y\n7.  Signalase-A -> Scaffold-P\n8.  Kinase-Y -> ZEB-1\n9.  Scaffold-P -> Kinase-Y\n\n假设每次相互作用代表信号传导过程中的一个步骤，请找出从受体到转录因子的最直接（即最短）激活级联所对应的蛋白质序列。\n\nA. GLP-R -> Adaptin -> Signalase-B -> ZEB-1\n\nB. GLP-R -> Signalase-A -> Kinase-X -> Kinase-Y -> ZEB-1\n\nC. GLP-R -> Signalase-A -> Scaffold-P -> Kinase-Y -> ZEB-1\n\nD. GLP-R -> Kinase-X -> Kinase-Y -> ZEB-1\n\nE. GLP-R -> Adaptin -> Scaffold-P -> ZEB-1", "solution": "我们将该信号网络建模为一个有向图，其中每个列出的激活相互作用都是一条有向边。任务是找到从源节点 GLP-R 到目标节点 ZEB-1 的最短有向路径（即边最少的路径），因为每次相互作用都算一个步骤。\n\n从 GLP-R 出发，直接的传出边指向 Adaptin 和 Signalase-A：\n- 第1步可达：Adaptin, Signalase-A。\n\n从这些节点出发，计算下一层：\n- 从 Adaptin 出发：Signalase-B。\n- 从 Signalase-A 出发：Kinase-X 和 Scaffold-P。\n因此，第2步可达：Signalase-B, Kinase-X, Scaffold-P。\n\n接下来的转换：\n- 从 Signalase-B 出发：ZEB-1。\n- 从 Kinase-X 出发：Kinase-Y。\n- 从 Scaffold-P 出发：Kinase-Y。\n因此，第3步可达：ZEB-1（通过 Signalase-B）和 Kinase-Y。\n\n最后，从 Kinase-Y 出发：ZEB-1 在下一步可达，这使得沿 Signalase-A 分支的路径长度为 4。\n\n因此，通过序列 GLP-R 到 Adaptin 到 Signalase-B 到 ZEB-1，ZEB-1 最早可以在 $3$ 步内到达，所以最短路径长度为 $\\ell=3$，对应的级联反应为：GLP-R → Adaptin → Signalase-B → ZEB-1。\n\n检查选项：\n- A: GLP-R → Adaptin → Signalase-B → ZEB-1 有 $3$ 个步骤，有效。\n- B: GLP-R → Signalase-A → Kinase-X → Kinase-Y → ZEB-1 有 $4$ 个步骤；不是最短。\n- C: GLP-R → Signalase-A → Scaffold-P → Kinase-Y → ZEB-1 有 $4$ 个步骤；不是最短。\n- D: GLP-R → Kinase-X → Kinase-Y → ZEB-1 使用了不存在的边 GLP-R → Kinase-X；无效。\n- E: GLP-R → Adaptin → Scaffold-P → ZEB-1 使用了不存在的边 Adaptin → Scaffold-P 和 Scaffold-P → ZEB-1；无效。\n\n因此，最直接的级联反应是选项A。", "answer": "$$\\boxed{A}$$", "id": "1453233"}, {"introduction": "现代系统生物学研究通常涉及整合和分析大规模数据集，自动化工作流程因此变得至关重要。本练习模拟了一个典型的生物信息学分析任务：利用脚本整合基因突变数据和蛋白质相互作用网络，以定位关键的子网络。通过这个模拟的计算流程，你将体验如何以编程方式查询网络数据并提出可检验的科学假设，这是当今生物研究的一项核心技能 [@problem_id:1453217]。", "problem": "您是一名计算生物学家，任务是探索特定癌症类型中频繁突变基因的局部网络邻域。您收到了两个数据文件：一个包含在患者队列中发现的体细胞突变列表，另一个定义了一个通用的人类蛋白质-蛋白质相互作用（PPI）网络。\n\n您的目标是使用一个名为 `NetSciKit` 的假设性脚本库来执行自动化分析。该库提供了一组用于与网络数据交互和分析的功能函数。\n\n**提供的数据：**\n\n1.  **突变数据 (`mutations.txt`):** 一个两列的逗号分隔列表，其中每一行代表在一个患者身上发现的一个突变。列名为 `Patient_ID` 和 `Gene_Symbol`。其内容如下：\n    ```\n    P01,TP53\n    P02,PIK3CA\n    P03,KRAS\n    P04,TP53\n    P05,PIK3CA\n    P06,EGFR\n    P07,TP53\n    P08,BRCA1\n    P09,PIK3CA\n    P10,TP53\n    P11,KRAS\n    P12,EGFR\n    P13,EGFR\n    P14,TP53\n    P15,EGFR\n    ```\n\n2.  **PPI 网络 (`interactions.sif`):** 一个简单的相互作用文件，其中每一行代表两种蛋白质（通过其基因符号识别）之间的相互作用。格式为 `ProteinA <interaction_type> ProteinB`。对于本问题，您只需考虑 `A pp B` 这样的行表示蛋白质 A 和 B 相互作用。其内容如下：\n    ```\n    TP53 pp MDM2\n    TP53 pp CHEK2\n    TP53 pp ATM\n    EGFR pp GRB2\n    EGFR pp SOS1\n    EGFR pp CBL\n    GRB2 pp SOS1\n    KRAS pp RAF1\n    KRAS pp PIK3CA\n    PIK3CA pp AKT1\n    PIK3CA pp PTEN\n    PIK3CA pp MTOR\n    BRCA1 pp BARD1\n    BRCA1 pp PALB2\n    APC pp CTNNB1\n    CHEK2 pp BRCA1\n    AKT1 pp MTOR\n    ```\n\n**可用的 `NetSciKit` 函数：**\n\n*   `load_network(file)`: 从一个 `.sif` 文件加载网络到当前会话中。\n*   `load_table(file)`: 从一个 `.txt` 文件加载表格数据。\n*   `get_column(table, column_name)`: 从一个已加载的表中，以列表形式返回指定列的所有值。\n*   `count_frequencies(data_list)`: 接受一个字符串列表，并返回一个将每个唯一字符串映射到其频率（计数）的字典。\n*   `rank_by_frequency(counts_dict)`: 接受一个频率字典，并返回一个按从高到低频率排序的基因符号列表。如果频率相同，则按字母顺序靠前的基因排名更高。\n*   `create_first_neighbor_subnetwork(seed_gene, network)`: 给定一个种子基因符号和一个源网络，该函数会创建并返回一个新的子网络。该子网络包含种子基因及其在源网络中所有的直接（一级）相互作用伙伴。\n*   `get_node_count(subnetwork)`: 返回给定子网络中的节点总数。\n\n**您的任务：**\n您必须遵循系统性步骤，使用所描述的 `NetSciKit` 函数，首先从 `mutations.txt` 文件中识别出最频繁突变的基因。然后，您需要找出在频率排名中位列**第三**的基因。使用这个基因作为种子，从完整的 `interactions.sif` PPI 网络中生成其一级邻居子网络。\n\n这个最终的子网络中节点的总数是多少？", "solution": "我们严格遵循所描述的 NetSciKit 工作流程进行操作。\n\n1) 加载突变表并提取基因符号：\n- 调用 `load_table` 处理 `mutations.txt` 文件以获取表格。\n- 对加载的表格调用 `get_column`，并将 `column_name` 设置为 `Gene_Symbol`，以获取所有患者的突变基因列表。\n\n根据提供的内容，基因符号的序列是：\nTP53, PIK3CA, KRAS, TP53, PIK3CA, EGFR, TP53, BRCA1, PIK3CA, TP53, KRAS, EGFR, EGFR, TP53, EGFR.\n\n2) 统计频率：\n- 对该列表调用 `count_frequencies` 以获取一个将每个基因符号映射到其出现次数的字典。我们将频率函数表示为 $f(\\cdot)$。\n\n具体的计数如下：\n$$\n\\begin{aligned}\nf(\\text{TP53})&=5,\\\\\nf(\\text{EGFR})&=4,\\\\\nf(\\text{PIK3CA})&=3,\\\\\nf(\\text{KRAS})&=2,\\\\\nf(\\text{BRCA1})&=1.\n\\end{aligned}\n$$\n\n3) 按频率排序：\n- 对频率字典调用 `rank_by_frequency`。该函数主要按 $f(\\cdot)$ 的降序排序，并使用字母顺序作为决胜规则。这些频率中没有并列情况，因此排名为：\n$$\n(\\text{TP53},\\,\\text{EGFR},\\,\\text{PIK3CA},\\,\\text{KRAS},\\,\\text{BRCA1}).\n$$\n因此，排名第三的基因是 $\\text{PIK3CA}$。\n\n4) 加载 PPI 网络：\n- 调用 `load_network` 处理 `interactions.sif` 文件以获取完整的网络。\n\n5) 为种子 $\\text{PIK3CA}$ 创建一级邻居子网络：\n- 调用 `create_first_neighbor_subnetwork`，将 `seed_gene` 设置为 `PIK3CA`，并传入已加载的网络。根据定义，此子网络包含种子节点及其所有有直接相互作用的节点（一级邻居），这些相互作用基于形如 $A\\ \\text{pp}\\ B$ 的行。\n\n根据提供的相互作用数据：\n- $\\text{KRAS pp PIK3CA} \\Rightarrow$ 邻居 $\\text{KRAS}$。\n- $\\text{PIK3CA pp AKT1} \\Rightarrow$ 邻居 $\\text{AKT1}$。\n- $\\text{PIK3CA pp PTEN} \\Rightarrow$ 邻居 $\\text{PTEN}$。\n- $\\text{PIK3CA pp MTOR} \\Rightarrow$ 邻居 $\\text{MTOR}$。\n\n因此，子网络的节点集是\n$$\n\\{\\text{PIK3CA},\\,\\text{KRAS},\\,\\text{AKT1},\\,\\text{PTEN},\\,\\text{MTOR}\\}.\n$$\n\n6) 获取节点计数：\n- 对该子网络调用 `get_node_count`。节点的总数为\n$$\n|\\{\\text{PIK3CA},\\,\\text{KRAS},\\,\\text{AKT1},\\,\\text{PTEN},\\,\\text{MTOR}\\}|=5.\n$$", "answer": "$$\\boxed{5}$$", "id": "1453217"}]}