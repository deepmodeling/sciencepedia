{"hands_on_practices": [{"introduction": "为了系统地研究密码子使用偏好，我们首先需要一种量化方法。相对同义密码子使用度（$RSCU$）是一个标准化的核心指标，它揭示了一个密码子被使用的频率是高于还是低于均等使用的预期。通过这个练习，你将亲手计算 $RSCU$ 值，这是分析任何基因或基因组密码子偏好的基础技能。[@problem_id:1477967]", "problem": "在分子遗传学研究中，密码子使用偏好是指编码相同氨基酸的同义密码子（即不同的密码子）以不均等的频率被使用的现象。为了量化这种偏好，通常会计算相对同义密码子使用度 (RSCU) 值。RSCU 是一个密码子的观测频率除以当该氨基酸的所有同义密码子被均等使用时的期望频率。\n\n一名研究人员对一种新分离细菌中的一个高表达基因进行了测序，并获得了编码甘氨酸 (Gly) 的四个密码子的以下计数：\n\n| 密码子 |   氨基酸   | 计数 |\n| :---: | :--------: | :---: |\n| GGU   |    Gly     |  52   |\n| GGC   |    Gly     |  78   |\n| GGA   |    Gly     |  23   |\n| GGG   |    Gly     |  11   |\n\n根据这些数据，计算GGC密码子的相对同义密码子使用度 (RSCU)。将您的答案以数值形式给出，并四舍五入到三位有效数字。", "solution": "目标是计算GGC密码子的相对同义密码子使用度 (RSCU)。特定密码子 $i$ 的 RSCU 计算公式如下：\n$$\nRSCU_i = \\frac{X_i}{\\frac{1}{k} \\sum_{j=1}^{k} X_j}\n$$\n其中：\n- $X_i$ 是密码子 $i$ 被观测到的次数。\n- $k$ 是所讨论的氨基酸的同义密码子数量。\n- $\\sum_{j=1}^{k} X_j$ 是该氨基酸所有同义密码子计数的总和。\n\n分母中的项 $\\frac{1}{k} \\sum_{j=1}^{k} X_j$ 表示当所有同义密码子被均等使用时，任意给定密码子的期望计数（即平均计数）。\n\n**第一步：从题目陈述中确定必要的值。**\n该氨基酸是甘氨酸，由四个同义密码子编码。因此，同义密码子的数量 $k$ 为 4。\n我们关注的密码子是GGC。该密码子的观测计数 $X_{GGC}$ 为 78。\n\n**第二步：计算甘氨酸所有同义密码子的总计数。**\n我们将GGU、GGC、GGA和GGG的计数相加。\n$$\n\\sum_{j=1}^{4} X_j = (\\text{GGU的计数}) + (\\text{GGC的计数}) + (\\text{GGA的计数}) + (\\text{GGG的计数})\n$$\n$$\n\\sum_{j=1}^{4} X_j = 52 + 78 + 23 + 11 = 164\n$$\n\n**第三步：计算期望频率（平均计数）。**\n这是总计数除以同义密码子的数量。\n$$\n\\text{期望计数} = \\frac{1}{k} \\sum_{j=1}^{k} X_j = \\frac{1}{4} \\times 164 = 41\n$$\n这意味着如果所有四个密码子被均等使用，我们期望每个密码子出现41次。\n\n**第四步：计算GGC密码子的RSCU。**\n现在我们将GGC的观测计数除以期望计数。\n$$\nRSCU_{GGC} = \\frac{X_{GGC}}{\\text{期望计数}} = \\frac{78}{41}\n$$\n$$\nRSCU_{GGC} \\approx 1.902439...\n$$\n\n**第五步：将最终答案四舍五入到三位有效数字。**\n前三位有效数字是1、9和0。第四位数字是2，小于5，所以我们向下舍入（即保留0）。\n$$\nRSCU_{GGC} \\approx 1.90\n$$\nRSCU值大于1.0表示该密码子的使用频率高于偶然期望，而小于1.0的值表示其使用频率较低。在本例中，GGC是一个偏好密码子。", "answer": "$$\\boxed{1.90}$$", "id": "1477967"}, {"introduction": "密码子使用偏好在生物体间存在显著差异，这一现象对合成生物学具有重要意义。当我们将一个物种的基因（例如人类基因）转移到另一个宿主（例如大肠杆菌）中进行表达时，为了提高蛋白质产量，通常需要进行“密码子优化”。这个练习模拟了基因工程师如何根据宿主的偏好来重新设计基因序列，以解决异源表达的效率问题。[@problem_id:2026544]", "problem": "在合成生物学中，将一个生物体的基因在不同的宿主生物中表达（这一过程称为异源表达）通常需要进行密码子优化。这是因为不同的生物体表现出密码子使用偏好，意味着它们对于编码同一种氨基酸，会倾向于使用某些特定的密码子而非其他密码子。为了提高蛋白质产量，宿主中的稀有密码子通常会被替换为更常用的同义密码子。\n\n一位研究人员正尝试在*Escherichia coli* (*E. coli*)宿主中表达一个人类基因。他们正在分析该人类基因的一个片段，并特别关注编码氨基酸精氨酸的密码子。精氨酸有六个同义密码子。\n\n在特定的人类基因片段中，每种精氨酸密码子的计数如下：\n- CGU: 5\n- CGC: 7\n- CGA: 2\n- CGG: 3\n- AGA: 12\n- AGG: 11\n\n在*E. coli*基因组中，精氨酸密码子的典型频率（以每1000个密码子中的出现次数表示）为：\n- CGU: 21.5\n- CGC: 20.4\n- CGA: 3.5\n- CGG: 5.1\n- AGA: 2.5\n- AGG: 1.4\n\n研究人员注意到，在人类基因片段中常见的密码子AGA和AGG，在*E. coli*中非常稀有。为了优化该基因的表达，研究人员决定通过计算方式，将人类基因片段中所有的AGA和AGG密码子实例，替换为*E. coli*使用的单个最频繁的精氨酸密码子。\n\n应用此替换策略后，在修改后的基因片段中，CGC密码子在所有精氨酸密码子中的新相对频率是多少？一个密码子的相对频率定义为它的计数除以该氨基酸所有同义密码子的总计数。\n\n请将你的答案以小数形式表示，并四舍五入到三位有效数字。", "solution": "我们已知一个人类基因片段中精氨酸密码子的计数，以及它们在*Escherichia coli*宿主中的典型使用频率。研究人员将所有的AGA和AGG实例替换为*Escherichia coli*中最频繁的单个精氨酸密码子。我们首先根据每1000个密码子中的出现次数，确定*Escherichia coli*中最频繁的精氨酸密码子：\n$$\n\\text{CGU: }21.5,\\quad \\text{CGC: }20.4,\\quad \\text{CGA: }3.5,\\quad \\text{CGG: }5.1,\\quad \\text{AGA: }2.5,\\quad \\text{AGG: }1.4.\n$$\n最大值是CGU，频率为 $21.5$，因此所有的AGA和AGG密码子都被替换为CGU。\n\n人类基因片段中的原始计数是：\n$$\n\\text{CGU: }5,\\quad \\text{CGC: }7,\\quad \\text{CGA: }2,\\quad \\text{CGG: }3,\\quad \\text{AGA: }12,\\quad \\text{AGG: }11.\n$$\n精氨酸密码子的总数是：\n$$\n5+7+2+3+12+11=40.\n$$\n用CGU替换AGA和AGG后，修改后的计数是：\n$$\n\\text{CGU: }5+(12+11)=28,\\quad \\text{CGC: }7,\\quad \\text{CGA: }2,\\quad \\text{CGG: }3,\\quad \\text{AGA: }0,\\quad \\text{AGG: }0.\n$$\n总数仍为$40$。CGC在所有精氨酸密码子中的新相对频率是其计数除以总数：\n$$\n\\frac{7}{40}=0.175.\n$$\n四舍五入到三位有效数字，结果是$0.175$。", "answer": "$$\\boxed{0.175}$$", "id": "2026544"}, {"introduction": "简单的密码子频率替换并不总是优化的万能钥匙，有时甚至会带来意想不到的负面效果。此练习探讨了一个看似矛盾的真实场景：经过“优化”的基因表达水平反而下降了。通过分析 $mRNA$ 二级结构（如发夹环）的稳定性，我们将揭示同义突变如何通过影响翻译起始来间接调控蛋白质合成，这展示了基因设计中需要考虑的更深层次的物理和生物学约束。[@problem_id:2026563]", "problem": "一位合成生物学家正致力于在*大肠杆菌*（*Escherichia coli*）中表达一种外源蛋白。初始构建体，质粒 `pWT`，能以较低水平产生该蛋白。为改善此情况，该生物学家通过进行“密码子优化”创建了一个新的构建体 `pOPT`。这涉及到进行同义突变（改变DNA序列而不改变最终的氨基酸序列），以使密码子与*大肠杆菌*中最常用的密码子相匹配。目标蛋白的N端氨基酸序列为 Met-Gly-Val。\n\n对于两种构建体，mRNA的5'非翻译区（5' UTR）是相同的，它位于蛋白质编码序列的上游。该区域包含一个关键序列 `5'-CACCC-3'`，位于核糖体结合位点（RBS）的正前方。蛋白质编码序列（CDS）在5' UTR之后立即以起始密码子 `AUG` 开始。\n\n具体的密码子改变如下：\n- **`pWT` 构建体：** 甘氨酸（Glycine）使用密码子 `GGU`，缬氨酸（Valine）使用 `GUU`。\n- **`pOPT` 构建体：** 甘氨酸使用优化后的密码子 `GGG`，缬氨酸使用 `GUG`。\n\n与直觉相反，该生物学家观察到 `pOPT` 构建体产生的蛋白显著*少于* `pWT` 构建体。推测的原因是意外形成了一个稳定的mRNA发夹环结构，该结构隔离了RBS，从而阻止了翻译起始。\n\n提出了一个简化模型来评估这个潜在发夹环的稳定性。一个茎（stem）可以通过5' UTR中的 `5'-CACCC-3'` 序列与CDS中从+4位置开始（其中 `AUG` 起始密码子的A为+1位置）的相应五核苷酸序列之间的分子内相互作用而形成。\n\n这个5个碱基对的茎的形成吉布斯自由能 $\\Delta G_{stem}$ 是各个碱基对能量的总和：\n- 鸟嘌呤-胞嘧啶（G-C）对：$\\Delta G_{GC} = -3.4 \\text{ kJ/mol}$\n- 腺嘌呤-尿嘧啶（A-U）对：$\\Delta G_{AU} = -2.1 \\text{ kJ/mol}$\n- 鸟嘌呤-尿嘧啶（G-U）摆动对：$\\Delta G_{GU} = -1.1 \\text{ kJ/mol}$\n- 错配对对稳定性的贡献为 $0 \\text{ kJ/mol}$。\n\n计算由密码子优化引起的发夹茎稳定性的变化，定义为 $\\Delta (\\Delta G_{stem}) = \\Delta G_{stem, pOPT} - \\Delta G_{stem, pWT}$。以 kJ/mol 为单位给出最终答案，并保留两位有效数字。", "solution": "编码序列从+1位置的`AUG` (Met)开始。+4到+8的五个核苷酸窗口包含了完整的甘氨酸密码子（+4到+6）和缬氨酸密码子的前两个碱基（+7和+8）。\n\n对于 `pWT` 构建体：\n- Gly = `GGU`, Val = `GUU`，所以+4到+8的序列是 `5'-GGUGU-3'`。\n对于 `pOPT` 构建体：\n- Gly = `GGG`, Val = `GUG`，所以+4到+8的序列是 `5'-GGGGU-3'`。\n\n5' UTR序列是 `5'-CACCC-3'`。茎是通过该序列与CDS片段之间的反向平行碱基配对形成的，因此我们将 `5'-CACCC-3'` 与CDS片段的反向（3' 到 5'）序列进行配对。\n\n**对于 `pWT` 构建体：**\n- 相应的CDS序列是 `5'-GGUGU-3'`。其反向序列为 `3'-UGUGG-5'`。\n- 将 `5'-CACCC-3'` 与 `3'-UGUGG-5'` 进行反向平行配对，我们发现形成了2个稳定的G-C碱基对。其余3个位置为错配，对稳定性贡献为0。\n- 因此，`pWT`发夹茎的能量贡献为：\n$$\n\\Delta G_{stem, pWT} = 2 \\times \\Delta G_{GC} = 2 \\times (-3.4 \\text{ kJ/mol}) = -6.8 \\text{ kJ/mol}.\n$$\n\n**对于 `pOPT` 构建体：**\n- 相应的CDS序列是 `5'-GGGGU-3'`。其反向序列为 `3'-UGGGG-5'`。\n- 将 `5'-CACCC-3'` 与 `3'-UGGGG-5'` 进行反向平行配对，我们发现形成了3个稳定的G-C碱基对。其余2个位置为错配。\n- 因此，`pOPT`发夹茎的能量贡献为：\n$$\n\\Delta G_{stem, pOPT} = 3 \\times \\Delta G_{GC} = 3 \\times (-3.4 \\text{ kJ/mol}) = -10.2 \\text{ kJ/mol}.\n$$\n\n发夹茎稳定性的变化定义为：\n$$\n\\Delta(\\Delta G_{stem}) = \\Delta G_{stem, pOPT} - \\Delta G_{stem, pWT} = (-10.2) - (-6.8) = -3.4 \\text{ kJ/mol}.\n$$\n保留两位有效数字，结果仍为 $-3.4$。", "answer": "$$\\boxed{-3.4}$$", "id": "2026563"}]}