{"hands_on_practices": [{"introduction": "任何生物信息学项目的第一步都是确保您的工具能够读取输入数据。在基因组学中，序列存储在特定的文本格式中，其中FASTA是最常见的一种。本练习将考验您识别标准 FASTA 格式的能力，这是处理基因组数据的一项至关重要的基本技能 [@problem_id:1493807]。", "problem": "一位计算生物学家正在处理一个新分离细菌的全基因组测序项目的数据。测序核心设施提供了几个文本文件，每个文件包含组装好的基因组的一部分。分析软件要求输入的DNA序列数据为标准的FASTA格式。以下是来自五个不同文件的节选。您的任务是识别哪个节选代表了以正确的FASTA格式存储的序列。\n\n**A.**\n```\n>Contig_1_B.anthracis_strain_Ames_length=5227295\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTG\nAACTGGTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATACTTTAACCAATATAGGCATA\n```\n\n**B.**\n```\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTG\nAACTGGTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATACTTTAACCAATATAGGCATA\n```\n\n**C.**\n```\n@Contig_1_B.anthracis\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTG\n+\n!''*((((***+))%%%++)(%%%%).1***-+*''))**5(5-2*./....-/2234'44555666655....\n```\n\n**D.**\n```\nLOCUS       Contig_1      5227295 bp    DNA     linear   CON 26-JUL-2024\nDEFINITION  B. anthracis strain Ames, complete genome.\nACCESSION   AE016879\nORIGIN\n        1 agcttttcattctgactgcaacgggcaatatgtctctgtgtggattaaaaaaagagtgtc\n       61 tgatagcagcttctgaactggttacctgccgtgagtaaattaaaattttattgacttag\n```\n\n**E.**\n```\nContig_1,AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAA,B.anthracis_Ames\n```", "solution": "要识别正确的FASTA格式，我们需要了解其特定结构。FASTA格式是一种基于文本的格式，用于表示核苷酸序列或肽序列，其中碱基对或氨基酸使用单字母代码表示。FASTA格式的序列包含两个主要部分：\n\n1.  **标题行**：这是一个必须以大于号（`>`）开头的单行。该行的其余部分包含序列的唯一标识符，并且通常还包括其他描述性信息。对于`>`符号之后的内容没有严格的规定。\n2.  **序列数据**：标题行后面的行包含序列本身。序列可以写在单行上，也可以分布在多行上。包含序列数据的行不能以`>`开头。\n\n现在，我们根据这个定义来分析每个选项。\n\n**选项A：** 该节选以一个大于号（`>`）开头的行（`>Contig_1_B.anthracis...`）开始。这作为标题行。随后的行包含一系列字符（A、C、G、T），代表核苷酸序列。这个结构完全符合FASTA格式的定义。\n\n**选项B：** 该节选只包含序列数据。它缺少必须以`>`开头的强制性标题行。这通常被称为“原始”或“纯文本”序列格式，而不是FASTA格式。\n\n**选项C：** 该节选以一个@符号（`@`）开头的行开始，而不是`>`。其后是一个序列行，一个只包含加号（`+`）的行，以及一行代表质量得分的ASCII字符。这种四行结构是FASTQ格式的特征，该格式通常用于原始测序读数，并包含每个碱基的质量信息。它不是FASTA格式。\n\n**选项D：** 该节选展示了一种高度结构化的格式，带有`LOCUS`、`DEFINITION`、`ACCESSION`和`ORIGIN`等关键字。序列数据本身也用行号进行了注释。这是一个GenBank文件的典型格式，该文件除了序列外还包含丰富的注释。它不是FASTA格式。\n\n**选项E：** 该节选显示了信息由逗号分隔的单行。这是一种分隔格式，例如逗号分隔值（CSV）文件。它不遵循FASTA格式所要求的`>`标题行和随后的序列行结构。\n\n基于这一逐步分析，只有选项A遵守了FASTA格式的规则。", "answer": "$$\\boxed{A}$$", "id": "1493807"}, {"introduction": "将数百万条短测序读段进行组装后，我们得到一组称为重叠群（contigs）的较长序列，但我们如何判断这次组装的质量呢？N50 统计量是衡量组装连续性的一个广泛使用的指标，它提供了一个单一数值来帮助我们比较不同的组装结果。通过亲手计算 N50，您将对我们如何评估基因组项目最重要的成果之一有一个具体的理解 [@problem_id:1493824]。", "problem": "一个生物信息学团队正在对一种新发现的古菌物种进行基因组组装。测序后，他们使用了两种不同的组装算法，得到了两组不同的连续DNA序列（重叠群，contigs）。为了评估和比较这两个组装结果的质量，该团队需要计算几个指标，其中最重要的一项是N50统计量。\n\nN50统计量是衡量组装连续性的一个指标。其定义为：能够构成总组装长度至少50%的最小重叠群集合中，最短那个重叠群的长度。\n\n现给出其中一个输出结果“Assembly Alpha”的完整contig长度列表。这些contig的长度（单位：千碱基，kb）为：\n`110, 15, 95, 6, 25, 45, 70, 4`\n\n计算“Assembly Alpha”的N50统计量。请以千碱基（kb）为单位，将您的答案表示为单个数字。", "solution": "目标是为来自“Assembly Alpha”的给定contig长度集计算N50统计量。所提供的contig长度（单位：千碱基，kb）为：`110, 15, 95, 6, 25, 45, 70, 4`。\n\n步骤1：计算组装的总长度。\n我们将所有contig的长度相加：\n$$ \\text{Total Length} = 110 + 15 + 95 + 6 + 25 + 45 + 70 + 4 $$\n$$ \\text{Total Length} = 370 \\text{ kb} $$\n\n步骤2：确定总组装长度的50%阈值。\n这是我们的contig长度累积和必须达到或超过的目标值。\n$$ 50\\% \\text{ of Total Length} = 0.5 \\times 370 \\text{ kb} = 185 \\text{ kb} $$\n\n步骤3：将contig长度按降序排序。\n将contig从最长到最短排列对于N50的计算至关重要。\n排序后的列表：`110, 95, 70, 45, 25, 15, 6, 4`\n\n步骤4：计算排序后contig长度的累积和。\n我们从最大的contig开始，逐一将其长度相加，直到累积和大于或等于步骤2中计算出的50%阈值。\n\n- 添加第一个（最长的）contig：\n  累积和 = `110` kb。这小于 `185` kb。\n\n- 添加第二个最长的contig：\n  累积和 = `110 + 95 = 205` kb。\n\n这个累积和（`205` kb）是第一个大于或等于50%阈值（`185` kb）的和。\n\n步骤5：确定N50值。\nN50统计量定义为：在为达到该阈值而累加的contig集合中，最短contig的长度。在我们的例子中，这个contig集合是 `{110, 95}`。这个集合中最短的contig是 `95` kb。因此，N50值就是我们加入到总和中的最后一个contig的长度。\n\n“Assembly Alpha”的N50值为 `95` kb。", "answer": "$$\\boxed{95}$$", "id": "1493824"}, {"introduction": "一旦我们有了组装好的基因组，下一个挑战就是进行注释：识别基因等功能性元件。最基本的方法是扫描 DNA 中的“开放阅读框”（Open Reading Frames, ORFs）——即不包含终止信号、并可能编码蛋白质的长序列。本实践模拟了一种简单的基因发现算法，要求您将一段 DNA 序列从其起始信号翻译到终止信号，这正是预测蛋白质编码基因的核心逻辑 [@problem_id:1493765]。", "problem": "一位生物信息学家正在开发一个简化的基因注释流程。该流程的第一步是扫描原始的脱氧核糖核酸（DNA）测序读段，以寻找潜在的蛋白质编码序列。该算法通过从第一次出现的 `ATG` 起始密码子开始，并翻译随后的核苷酸三联体，直到遇到第一个框内终止密码子，来识别一个开放阅读框（ORF）。\n\n该流程接收到以下 DNA 序列片段，它代表编码链，并从 5' 端到 3' 端读取：\n\n`5'-ATGGGCCGATTATGGTGTTAGGACCGTTA-3'`\n\n对于翻译过程，请使用下面提供的标准 RNA 密码子表。在使用此 RNA 密码子表时，您应将 DNA 编码链中的胸腺嘧啶（T）视为尿嘧啶（U）。\n\n**标准 RNA 密码子表：**\n- **Phe (F):** `UUU`, `UUC`\n- **Leu (L):** `UUA`, `UUG`, `CUU`, `CUC`, `CUA`, `CUG`\n- **Ile (I):** `AUU`, `AUC`, `AUA`\n- **Met (M) / 起始:** `AUG`\n- **Val (V):** `GUU`, `GUC`, `GUA`, `GUG`\n- **Ser (S):** `UCU`, `UCC`, `UCA`, `UCG`, `AGU`, `AGC`\n- **Pro (P):** `CCU`, `CCC`, `CCA`, `CCG`\n- **Thr (T):** `ACU`, `ACC`, `ACA`, `ACG`\n- **Ala (A):** `GCU`, `GCC`, `GCA`, `GCG`\n- **Tyr (Y):** `UAU`, `UAC`\n- **His (H):** `CAU`, `CAC`\n- **Gln (Q):** `CAA`, `CAG`\n- **Asn (N):** `AAU`, `AAC`\n- **Lys (K):** `AAA`, `AAG`\n- **Asp (D):** `GAU`, `GAC`\n- **Glu (E):** `GAA`, `GAG`\n- **Cys (C):** `UGU`, `UGC`\n- **Trp (W):** `UGG`\n- **Arg (R):** `CGU`, `CGC`, `CGA`, `CGG`, `AGA`, `AGG`\n- **Gly (G):** `GGU`, `GGC`, `GGA`, `GGG`\n- **终止:** `UAA`, `UAG`, `UGA`\n\n从给定的 DNA 片段中，该流程预测的多肽链将包含多少个氨基酸？请以单个整数形式提供您的答案。", "solution": "该流程从编码链中第一次出现的起始密码子开始翻译，即位于 5' 端的三联体 ATG。为了使用 RNA 密码子表，在映射到氨基酸时，需将胸腺嘧啶（T）替换为尿嘧啶（U）。\n\n从第一个 ATG 开始，将 DNA 序列分割成框内三联体：\nATG-GGC-CGA-TTA-TGG-TGT-TAG-GAC-CGT-...\n\n将每个 DNA 三联体转换为其对应的 RNA（T 替换为 U），并使用提供的表进行翻译：\nATG → AUG → Met (起始)\nGGC → GGC → Gly\nCGA → CGA → Arg\nTTA → UUA → Leu\nTGG → UGG → Trp\nTGT → UGU → Cys\nTAG → UAG → 终止\n\n遇到的第一个框内终止密码子是第七个密码子 UAG，因此翻译在此停止。所以，该多肽包含从前六个密码子翻译而来的六个氨基酸。", "answer": "$$\\boxed{6}$$", "id": "1493765"}]}