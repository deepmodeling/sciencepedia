{"hands_on_practices": [{"introduction": "合成Notch（synNotch）受体的核心优势在于其模块化设计，这使得我们能够像组装乐高积木一样，通过替换不同的功能域来改变其功能。这个“即插即用”的特性是合成生物学的基石。本练习旨在通过一个思想实验，检验您对synNotch系统基本模块化原则的理解，即如何通过修改特定蛋白域来重新编程细胞的输出响应 [@problem_id:2073081]。", "problem": "合成Notch（synNotch）受体是工程化的、模块化的蛋白质，它能使细胞感知其他细胞上的特定配体，并通过激活定制的基因表达程序来做出响应。一个典型的synNotch受体包含一个识别特定外部配体的胞外域，一个将其锚定在细胞膜上的跨膜域，以及一个作为合成转录因子的定制胞内域。\n\n当胞外域与相邻“发送”细胞上的目标配体结合时，会发生构象变化。这种变化会暴露一个切割位点，使蛋白酶能够切断该受体并释放胞内域。这个被释放的胞内域随后进入细胞核，在那里它与一个特定的启动子序列结合，并激活“接收”细胞中所选目标基因的表达。\n\n一位合成生物学家设计了一个细胞间通讯系统。在这个系统中，一个接收细胞含有一个synNotch受体，当与发送细胞上的配体X结合时，该受体会导致接收细胞表达绿色荧光蛋白（GFP）。这位生物学家现在想重新改造这个接收细胞。目标是让该细胞在检测到相同的配体X时，表达红色荧光蛋白mCherry的基因，而不是GFP。为此，该生物学家将用由一个新的、不同的启动子驱动的mCherry基因，来替换原来的GFP基因及其启动子。\n\n为了使该系统再次起作用，原始synNotch受体构建体中的哪一个蛋白域必须被修改或替换，才能特异性地激活新的mCherry基因？\n\nA. 胞外识别域\n\nB. 跨膜域\n\nC. 胞内转录域\n\nD. 蛋白酶切割位点\n\nE. 信号肽序列", "solution": "我们确定synNotch系统中的关键功能映射关系：配体识别由胞外域决定；膜锚定由跨膜域决定；蛋白水解释放由蛋白酶切割位点决定；转录特异性由胞内转录域决定，它是一个与特定启动子序列结合的合成转录因子。当配体结合后，胞内域被释放并转移到细胞核中，以激活含有其同源结合位点的启动子的转录。\n\n生物学家保留了相同的配体（配体X），因此胞外识别域必须保持不变，以保持对发送细胞的结合特异性。跨膜域和蛋白酶切割位点分别用于膜锚定和受调控的释放，但它们不决定启动子的特异性。信号肽序列参与靶向分泌途径，并且不控制哪个启动子被激活。\n\n引入的改变是替换报告基因及其启动子：GFP及其启动子被替换为由一个新启动子驱动的mCherry。为了确保被释放的胞内域能特异性地激活控制mCherry的新启动子，胞内转录域必须被修改，以使其DNA结合特异性与新启动子相匹配（例如，将一个基于Gal4的激活子换成一个基于TetR或LexA的激活子，或以其他方式确保该DNA结合域能识别新启动子的操纵子位点）。因此，唯一必须被修改或替换的域是胞内转录域。\n\n因此，正确选项是C。", "answer": "$$\\boxed{C}$$", "id": "2073081"}, {"introduction": "掌握了模块化原理后，下一步就是将其付诸实践。合成生物学家通常会从一个包含标准兼容组件的“零件库”中进行选择，来构建新的生物回路。这个练习模拟了一个真实的设计挑战：您需要从一系列遗传“零件”中，为细胞内信号释放部分（细胞内域，ICD）和报告基因的启动子，选择一个功能兼容的配对，以构建一个仅在细胞接触时才激活的信号通路 [@problem_id:2073136]。", "problem": "一位合成生物学家旨在设计一个哺乳动物细胞间的通讯系统，其中“接收”细胞仅在与特定的“发送”细胞发生物理接触时才会发出红色荧光。“发送”细胞经过工程改造，使其表面展示一种独特的、表面锚定的配体。\n\n该生物学家为“接收”细胞设计的策略涉及两个关键的遗传构建体：\n1.  一个合成Notch（synNotch）受体，其被设计用于结合“发送”细胞的配体。配体结合后，蛋白酶会切割synNotch受体，将其胞内结构域（ICD）释放到细胞质中。随后，ICD进入细胞核，作为转录因子发挥作用。\n2.  一个报告质粒，其中红色荧光蛋白（RFP）的表达由一个特定的启动子控制。\n\n为构建一个功能性系统，该生物学家必须为RFP基因选择一对兼容的synNotch ICD和启动子。目标是确保RFP*仅*在受体激活后才被产生。以下是可用的遗传元件列表：\n-   **Gal4**：来自酵母的转录因子的DNA结合域。\n-   **LexA**：来自*大肠杆菌*的转录阻遏蛋白的DNA结合域。\n-   **VP64**：源自一种病毒蛋白的强效转录激活域。\n-   **UAS**：来自酵母的上游激活序列，是Gal4的DNA结合位点。\n-   **LexA_Operator**：LexA的DNA结合位点。\n-   **P_min**：一个最小核心启动子，其自身活性可忽略不计，但如果被一个激活域招募，则可启动转录。\n-   **P_CMV**：来自巨细胞病毒（Cytomegalovirus）的强组成型启动子，在哺乳动物细胞中始终处于活性状态。\n\n下列哪种synNotch胞内结构域（ICD）和驱动RFP基因的启动子的组合将产生预期的行为？\n\nA. ICD: `VP64` | RFP启动子: `UAS - P_min`\n\nB. ICD: `Gal4-VP64` | RFP启动子: `P_CMV`\n\nC. ICD: `LexA-VP64` | RFP启动子: `UAS - P_min`\n\nD. ICD: `Gal4-VP64` | RFP启动子: `UAS - P_min`\n\nE. ICD: `Gal4` | RFP启动子: `LexA_Operator - P_min`", "solution": "设计原则是，受体激活后释放的synNotch胞内结构域（ICD）必须作为一种诱导型转录因子发挥作用，该转录因子仅在其存在时特异性地激活RFP报告基因。这需要：\n- ICD中含有一个DNA结合域（DBD），以靶向报告基因上游的特定算子。\n- 一个转录激活域（AD），如VP64，以招募转录机器。\n- 报告基因中的启动子结构，其中最小核心启动子$P_{\\text{min}}$与能被ICD的DBD识别的正确算子序列相偶联，以确保基础表达可忽略不计，并且仅在ICD结合后才激活。\n\n相关的分子特异性如下：\n- Gal4 DBD结合UAS序列；它不结合LexA算子。\n- LexA DBD结合LexA算子；它不结合UAS。\n- VP64是一个激活域；没有DBD，它无法定位到正确的DNA位点。\n- $P_{\\text{min}}$需要一个拴在DNA上的激活因子来启动转录；$P_{\\text{CMV}}$具有组成型活性，因此不适合用于诱导型表达。\n\n对每个选项进行评估：\n- A. ICD: `VP64` | 启动子: `UAS - P_min`。`VP64`缺少DBD，因此无法结合`UAS`。不会发生靶向激活；即使在激活后，表达仍保持关闭。不适合。\n- B. ICD: `Gal4-VP64` | 启动子: `P_CMV`。`P_CMV`是组成型的，因此无论synNotch是否激活，RFP都会表达。不适合。\n- C. ICD: `LexA-VP64` | 启动子: `UAS - P_min`。`LexA`结合`LexA_Operator`，而不是`UAS`；这种错配阻止了激活。不适合。\n- D. ICD: `Gal4-VP64` | 启动子: `UAS - P_min`。`Gal4`靶向`UAS`，而`VP64`在$P_{\\text{min}}$处激活转录。这使得RFP仅在synNotch激活时才表达。适合。\n- E. ICD: `Gal4` | 启动子: `LexA_Operator - P_min`。`Gal4`不结合`LexA_Operator`，并且没有激活域的`Gal4`无法有效激活$P_{\\text{min}}$。不适合。\n\n因此，唯一能确保RFP仅在受体激活后才产生的组合是ICD为Gal4-VP64，并配以UAS - $P_{\\text{min}}$启动子。", "answer": "$$\\boxed{D}$$", "id": "2073136"}, {"introduction": "简单的“开-关”开关虽然强大，但synNotch系统的真正潜力在于能够构建更复杂的细胞逻辑和信息处理能力。此高级练习将挑战您设计一个可以感知并区分不同邻居细胞密度的“细胞计数器”。通过巧妙地设计启动子对转录因子$TF_A$的响应灵敏度以及构建级联抑制回路，您可以引导细胞在低、中、高密度环境下分别表达不同的荧光蛋白，从而实现对环境信号的精细解读和分级响应 [@problem_id:2073113]。", "problem": "一个合成生物学研究团队旨在设计一种细胞系，该细胞系能够感知其局部环境的密度，并用三种不同的颜色进行报告。目标是创建“邻居计数”细胞，当与少量信号邻居接触时表达绿色荧光蛋白（GFP），中等数量时表达黄色荧光蛋白（YFP），大量时表达红色荧光蛋白（RFP）。\n\n该团队拥有以下分子元件和能力：\n1.  一种“接收”细胞系，可持续表达一种合成Notch（synNotch）受体。\n2.  一种“发送”细胞系，在其表面表达相应的配体。\n3.  当synNotch受体与相邻发送细胞表面的配体结合时，该受体被切割，释放出一种单一类型的合成转录因子，我们称之为$TF_A$。假定活性$TF_A$的细胞内浓度与接触接收细胞的发送细胞数量成正比。\n4.  三种报告基因：`gfp`、`yfp` 和 `rfp`。\n5.  能够设计可被$TF_A$激活的合成启动子。这些启动子的灵敏度和响应可以被调节。具有单个$TF_A$结合位点的启动子将具有高灵敏度（低激活阈值）。具有多个$TF_A$结合位点的启动子将表现出协同结合，导致灵敏度较低（激活阈值较高）和更陡峭、更像开关的响应。\n6.  能够创建合成阻遏蛋白（$TF_{Rep}$）并设计被它们阻遏的启动子。阻遏蛋白可以作为与报告基因相同的转录本的一部分进行表达。\n\n以下哪种基因线路设计，在被工程化到接收细胞中后，能最有效地实现所需的三级、排他性的邻居密度报告（即低密度为绿色，中等密度为黄色，高密度为红色）？\n\nA. 该线路由三个模块组成。\n    - 启动子 `P1` 有一个针对$TF_A$的单个高亲和力结合位点，并驱动`gfp`的表达。\n    - 启动子 `P2` 有多个$TF_A$的协同结合位点，使其具有中等激活阈值。它驱动`yfp`和一个阻遏蛋白`TF_Rep1`的表达。`TF_Rep1`被设计为阻遏`P1`。\n    - 启动子 `P3` 有更多$TF_A$的协同结合位点，使其具有高激活阈值。它驱动`rfp`和一个阻遏蛋白`TF_Rep2`的表达。`TF_Rep2`被设计为阻遏`P2`。\n\nB. 该线路由三个独立的模块组成。\n    - 启动子 `P1` 有一个$TF_A$的结合位点，并驱动`gfp`。\n    - 启动子 `P2` 有两个$TF_A$的结合位点，并驱动`yfp`。\n    - 启动子 `P3` 有四个$TF_A$的结合位点，并驱动`rfp`。\n    - 这三个模块之间没有交叉调节或阻遏。\n\nC. 该线路使用一个反向阻遏级联。\n    - 启动子 `P1` 有一个$TF_A$的结合位点。它驱动`gfp`和一个靶向`P2`的阻遏蛋白`TF_Rep1`的表达。\n    - 启动子 `P2` 有多个$TF_A$的协同结合位点。它驱动`yfp`和一个靶向`P3`的阻遏蛋白`TF_Rep2`的表达。\n    - 启动子 `P3` 有非常多的$TF_A$协同结合位点，并驱动`rfp`的表达。\n\nD. 该线路依赖于不同的蛋白质生产速率。\n    - 使用三个相同的启动子（`P1`、`P2`、`P3`），每个都有一个$TF_A$结合位点。\n    - `P1` 驱动 `gfp` 基因，`P2` 驱动 `yfp` 基因，`P3` 驱动 `rfp` 基因。\n    - 通过将不同拷贝数的各报告基因整合到基因组中（例如，20个`gfp`拷贝，5个`yfp`拷贝和1个`rfp`拷贝）来实现期望的行为。", "solution": "设接触的发送邻居数量为 $n$，活性转录因子的细胞内浓度为 $c=\\alpha n$，比例常数为 $\\alpha$。每个启动子被 $TF_A$ 激活的过程可以用一个希尔函数建模：\n$$\nf_{i}(c)=\\frac{c^{h_{i}}}{K_{i}^{h_{i}}+c^{h_{i}}},\n$$\n其中，$K_{i}$ 是激活阈值，$h_{i}$ 是反映协同性的希尔系数（单个位点：$h_{i}=1$；多个协同位点：$h_{i}>1$ 且转变更陡峭）。由阻遏蛋白 $R$ 作用于启动子 $P$ 的阻遏作用，可以通过一个阻遏项进行乘法建模：\n$$\ng(R)=\\frac{1}{1+\\left(\\frac{R}{K_{R}}\\right)^{m}},\n$$\n其中，$K_{R}$ 是阻遏常数，$m$ 是阻遏的协同性。因此，在 $TF_A$ 激活和阻遏蛋白阻遏下的启动子产生的报告蛋白输出遵循\n$$\n\\text{Output}\\propto f_{i}(c)\\,g(R).\n$$\n\n我们寻求在 $c$（等同于 $n$）中存在三个排他性的区间：低 $c$ 仅产生 GFP，中等 $c$ 仅产生 YFP，高 $c$ 仅产生 RFP。这需要 (i) 错开的激活阈值 $K_{1}<K_{2}<K_{3}$，并增加 $h_{i}$ 以使转变更陡峭，以及 (ii) 交叉阻遏，以便在更高层级开启时主动沉默较低层级的输出，从而防止分级激活固有的重叠。\n\n设计分析：\n- 设计A实现了带有前馈交叉阻遏的分级激活。选择 $K_{1}<K_{2}<K_{3}$，且 $h_{1}=1$，$h_{2}>1$，$h_{3}>1$ 足够大以实现类似开关的响应。\n  • 低 $c$：$f_{1}(c)\\approx 1$，$f_{2}(c)\\approx 0$，$f_{3}(c)\\approx 0$。没有阻遏蛋白产生，因此对所有启动子 $g(\\cdot)\\approx 1$。结果：`gfp`开启，`yfp`关闭，`rfp`关闭。\n  • 中等 $c$：$f_{2}(c)$ 越过其阈值，产生YFP和$TF_{Rep1}$。然后 $g_{P1}(TF_{Rep1})\\ll 1$，所以即使 $f_{1}(c)$ 仍然很高，`P1` 也被阻遏。由于 $f_{3}(c)\\approx 0$ 仍然成立，结果：`gfp`关闭，`yfp`开启，`rfp`关闭。\n  • 高 $c$：$f_{3}(c)$ 越过其阈值，产生RFP和$TF_{Rep2}$，这使得 $g_{P2}(TF_{Rep2})\\ll 1$，从而关闭`P2`。由于`P2`关闭会减少$TF_{Rep1}$，可以通过残留的$TF_{Rep1}$和/或在需要时设计`P3`也编码对`P1`的阻遏来确保`P1`保持关闭状态；然而，在给定的设计A中，`P1`保持关闭是因为$TF_{Rep1}$在中等到高$c$区间都存在，直到`P3`占主导。通过适当调节阻遏蛋白强度和降解率，高 $c$ 时的稳态只有RFP。因此，设计A通过阈值设定加上前馈阻遏（在更高层级激活时沉默较低层级）实现了排他性的分级输出。\n\n- 设计B使用独立的希尔激活，没有交叉调节。当 $K_{1}<K_{2}<K_{3}$ 且 $h_{1}\\leq h_{2}\\leq h_{3}$ 时，函数 $f_{1}(c)$、$f_{2}(c)$ 和 $f_{3}(c)$ 在 $c$ 轴上不可避免地会重叠，导致在阈值附近共表达；没有阻遏项 $g(\\cdot)$ 来强制实现排他性，就无法防止绿色-黄色或黄色-红色的重叠。\n\n- 设计C使`P1`阻遏`P2`，`P2`阻遏`P3`，但没有包含更高层级对`P1`的阻遏。由于`P1`的阈值最低，对于中等和高 $c$，$f_{1}(c)$ 仍然很高。因此$TF_{Rep1}$持续存在，$g_{P2}(TF_{Rep1})\\ll 1$，这会在`P2`必须被激活的区间内抑制`P2`。这会阻碍向黄色和红色状态的进展，或者需要非常弱的阻遏才能工作，从而导致排他性失效。因此，C对于所需的分级排他性来说不够鲁棒。\n\n- 设计D使用具有相同阈值的相同启动子，仅改变基因拷贝数。由于激活阈值相等，一旦 $c$ 越过该阈值，所有三种报告基因都会以不同幅度表达，而不是处于排他状态。低于阈值时，所有基因都关闭；高于阈值时，所有基因都以不同程度开启。这不能产生三个不同的、排他性的层级。\n\n因此，只有设计A结合了错开的激活阈值和前馈交叉阻遏，以强制实现清晰、排他性的状态转换：低 $c$ 时只有GFP，中等 $c$ 时只有YFP，高 $c$ 时只有RFP。", "answer": "$$\\boxed{A}$$", "id": "2073113"}]}