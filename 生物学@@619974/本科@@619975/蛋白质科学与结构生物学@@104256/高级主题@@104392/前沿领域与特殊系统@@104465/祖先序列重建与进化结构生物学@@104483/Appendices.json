{"hands_on_practices": [{"introduction": "祖先序列重建的核心是利用现存物种的序列信息来推断过去的序列。最简约原则 (maximum parsimony) 是这一过程的基石，它主张最可能的进化路径是需要最少演化改变（如氨基酸替换）的那一条。这个练习旨在通过一个简洁的四序列场景，让你亲手体验简约法如何运作，并理解当不同进化分支提供相互矛盾的信号时，为何会对祖先状态的推断产生“模糊性”[@problem_id:2099385]。这不仅是理论学习，更是培养你像进化生物学家一样思考，从数据模式中解读进化故事的第一步。", "problem": "在进化生物学领域，祖先序列重建是一种计算方法，用于推断已灭绝祖先的蛋白质或核酸序列。执行此任务最简单、最基本的方法之一是最大简约性原则。该原则指出，最优的进化历史是需要最少进化变化（例如氨基酸替换）来解释在现代生物体中观察到的序列的那种。\n\n考虑一组四个同源蛋白：P1、P2、P3 和 P4。它们的进化关系由系统发育树 `((P1, P2)Anc1, (P3, P4)Anc2)Anc-Root` 描述。这种表示法意味着 P1 和 P2 共享一个近期共同祖先 Anc1。同样，P3 和 P4 共享一个近期共同祖先 Anc2。而 Anc1 和 Anc2 又都源自所有这四种蛋白质的最后共同祖先 Anc-Root。\n\n我们正在研究这四个蛋白质序列比对中的一个单一位置。对于树中的任何给定祖先，如果单个氨基酸状态能使其到后代的总替换次数最小化，那么该位置氨基酸的重建被认为是“无歧义的”。相反，如果两个或更多不同的氨基酸状态同样简约，即它们导致的最小替换次数相同，那么重建就是“有歧义的”。\n\n下面的选项列出了在四个现代蛋白质（P1、P2、P3、P4）的该特定位置上发现的氨基酸，使用其标准的单字母代码表示。以下哪种情况会导致根祖先 Anc-Root 的重建是有歧义的，同时确保*两个*中间祖先 Anc1 和 Anc2 的重建都是无歧义的？\n\nA. P1: 丙氨酸 (A), P2: 丙氨酸 (A), P3: 甘氨酸 (G), P4: 甘氨酸 (G)\n\nB. P1: 半胱氨酸 (C), P2: 半胱氨酸 (C), P3: 半胱氨酸 (C), P4: 半胱氨酸 (C)\n\nC. P1: 亮氨酸 (L), P2: 亮氨酸 (L), P3: 亮氨酸 (L), P4: 缬氨酸 (V)\n\nD. P1: 脯氨酸 (P), P2: 丝氨酸 (S), P3: 脯氨酸 (P), P4: 丝氨酸 (S)\n\nE. P1: 苏氨酸 (T), P2: 天冬氨酸 (D), P3: 谷氨酸 (E), P4: 苯丙氨酸 (F)", "solution": "我们对有根二叉树 $((P1,P2)\\,\\text{Anc1},\\,(P3,P4)\\,\\text{Anc2})\\,\\text{Anc-Root}$ 使用 Fitch 简约法。对于任何具有子节点状态集 $S_{L}$ 和 $S_{R}$ 的节点，其最小状态集为\n$$\nS=\\begin{cases}\nS_{L}\\cap S_{R}, & \\text{if } S_{L}\\cap S_{R}\\neq \\varnothing,\\\\\nS_{L}\\cup S_{R}, & \\text{if } S_{L}\\cap S_{R}=\\varnothing.\n\\end{cases}\n$$\n如果一个节点的状态集大小为 $1$，则该节点是无歧义的；如果其状态集大小至少为 $2$，则该节点是有歧义的。\n\n选项 A：P1=A, P2=A, P3=G, P4=G。\nAnc1: $S_{1}=\\{A\\}\\cap\\{A\\}=\\{A\\}$ (无歧义的)。\nAnc2: $S_{2}=\\{G\\}\\cap\\{G\\}=\\{G\\}$ (无歧义的)。\n根节点: $S_{R}=\\{A\\}\\cap\\{G\\}=\\varnothing \\Rightarrow S_{R}=\\{A,G\\}$ (有歧义的)。\n这满足了要求。\n\n选项 B：全部为 C。\nAnc1: $\\{C\\}$；Anc2: $\\{C\\}$；根节点: $\\{C\\}\\cap\\{C\\}=\\{C\\}$ (无歧义的)。不满足要求。\n\n选项 C：P1=L, P2=L; P3=L, P4=V。\nAnc1: $\\{L\\}$ (无歧义的)。\nAnc2: $\\{L\\}\\cap\\{V\\}=\\varnothing \\Rightarrow \\{L,V\\}$ (有歧义的)。\n根节点: $\\{L\\}\\cap\\{L,V\\}=\\{L\\}$ (无歧义的)。不满足要求。\n\n选项 D：P1=P, P2=S; P3=P, P4=S。\nAnc1: $\\{P,S\\}$ (有歧义的)。\nAnc2: $\\{P,S\\}$ (有歧义的)。\n根节点: $\\{P,S\\}\\cap\\{P,S\\}=\\{P,S\\}$ (有歧义的)。不满足要求。\n\n选项 E：P1=T, P2=D; P3=E, P4=F。\nAnc1: $\\{T,D\\}$ (有歧义的)。\nAnc2: $\\{E,F\\}$ (有歧义的)。\n根节点: $\\{T,D\\}\\cap\\{E,F\\}=\\varnothing \\Rightarrow \\{T,D,E,F\\}$ (有歧义的)。不满足要求。\n\n因此，只有选项 A 产生了一个有歧义的根节点，且 Anc1 和 Anc2 都是无歧义的。", "answer": "$$\\boxed{A}$$", "id": "2099385"}, {"introduction": "理论模型是强大的，但真实世界的数据充满了复杂性和潜在的错误。“输入的是垃圾，输出的也是垃圾”这句名言在计算生物学中至关重要。这个实践将带你思考一个在祖先序列重建中常见的实际问题：当一个不相关的、无功能的序列（如伪基因）被错误地包含在分析数据中时，会发生什么 [@problem_id:2099381]？通过这个思想实验，你将深刻理解数据筛选和质量控制的重要性，并认识到一个被污染的数据集如何系统性地扭曲我们的推断，甚至可能“复活”出一个没有生物学功能的“假”祖先蛋白。", "problem": "一个生物化学家团队正在研究一个微生物半胱氨酸蛋白酶家族的进化起源。这些酶的蛋白水解功能依赖于一个关键的催化二联体，该二联体由一个半胱氨酸 (Cysteine, Cys) 和一个组氨酸 (Histidine, His) 残基组成。为了重建并研究该酶家族最近共同祖先的特性，研究人员采用了一种名为祖先序列重建 (Ancestral Sequence Reconstruction, ASR) 的方法。该过程的第一步是利用来自不同物种的现代蛋白酶序列创建一个多序列比对 (Multiple Sequence Alignment, MSA)。\n\n在团队不知情的情况下，他们的自动化序列检索流程错误地从其中一个物种中纳入了一条旁系同源序列。这个旁系同源基因是一个无功能的假基因。在遥远的进化历史中发生一次基因复制事件后，这个基因拷贝失去了其功能，并从此一直在松弛的选择压力下进化。结果，在这个假基因序列中，编码催化性半胱氨酸的密码子突变成了编码丝氨酸 (Serine, Ser) 的密码子，而编码催化性组氨酸的密码子则突变成了编码精氨酸 (Arginine, Arg) 的密码子。数据集中的所有其他功能性蛋白酶都保留了Cys-His二联体。\n\n研究人员使用一个标准的最大似然模型继续进行ASR分析，所用的MSA包含了功能性序列和那条单一的无功能假基因序列。考虑到最大似然ASR的原理，纳入这个假基因对所重建的祖先蛋白质的两个催化位点上推断出的氨基酸身份，最可能产生什么样的系统性影响？\n\nA. 假基因序列将被识别为离群值并被ASR算法自动排除，因此对最终的祖先序列没有影响。\n\nB. 纳入假基因将悖论性地增加祖先中正确催化残基 (Cys和His) 的统计支持度（例如，后验概率），因为进化模型会严重惩罚在假基因中观察到的突变。\n\nC. ASR算法将无法解决这一冲突，并可能因错误而终止，从而无法生成祖先序列。\n\nD. 祖先Cys和His残基的重建将不受影响，因为与大量正确的序列相比，单个假基因序列的影响在统计上不显著。\n\nE. 纳入假基因将降低正确催化残基 (Cys和His) 的统计支持度，并增加对非功能性残基 (Ser和Arg) 的支持度，可能导致推断出的祖先蛋白质催化活性受损或丧失。", "solution": "问题要求确定在用于祖先序列重建 (ASR) 的数据集中无意中包含一个无功能假基因所产生的系统性影响。\n\n首先，让我们明确几个关键概念。祖先序列重建，特别是使用最大似然框架的方法，旨在推断祖先蛋白质最可能的氨基酸序列。它通过考虑一个系统发育树、一个现代（现存）序列的多序列比对 (MSA) 以及一个随进化时间变化的氨基酸替换概率模型来实现这一目标。该算法评估树中每个内部节点上不同的可能祖先状态，并找出能够最大化在树的末端观察到给定现存序列的似然性的状态组合。\n\n此过程的输入数据是MSA。MSA将同源序列进行比对，将据信源自一个共同祖先残基的残基们放在同一列中。在给定列中，每个现存序列的状态都为该位置的祖先状态提供了证据。\n\n在本情景中，该酶家族依赖于一个半胱氨酸-组氨酸 (Cys-His) 催化二联体。这意味着在该家族所有功能性成员中，这两个位置都处于强烈的负选择（纯化选择）压力下，以保留Cys和His残基。因此，MSA中绝大多数序列将在相应的列中显示为Cys和His。\n\n假基因是已失去其功能的基因拷贝。因为它不再对生物体的适应度有贡献，所以它不受相同的选择压力约束。它进行中性进化或近乎中性进化，以更高的速率积累突变。在本案例中，关键的催化性Cys突变成了Ser，而His突变成了Arg。\n\n当这个假基因序列被包含在MSA中时，它在对应于催化二联体的列中引入了冲突数据。对于第一个催化位点，比对列将包含许多Cys残基和一个Ser残基。对于第二个催化位点，该列将包含许多His残基和一个Arg残基。\n\n最大似然ASR算法必须考虑MSA中提供的*所有*数据。它通过对所有可能导致后代序列中观察到的状态的进化路径进行求和，来计算一个祖先状态的似然性。来自假基因的Ser和Arg的存在迫使算法考虑祖先*不*具有典型Cys-His二联体的进化路径。例如，为了解释假基因中的Ser，算法必须考虑一个祖先Cys沿着通往假基因的分支突变为Ser的概率，或者祖先本身就是Ser，然后在所有其他谱系中突变为Cys的可能性。\n\n尽管数量占压倒性优势的Cys和His残基仍将使它们成为最可能的祖先状态，但假基因中的Ser和Arg的存在，为替代的祖先状态提供了证据，无论这一证据多么微弱。因此，似然性计算将为祖先在这些位置上拥有Ser或Arg的可能性分配一个非零的概率。这必然意味着总概率（其总和必须为1）被分配到更多的可能性之中。因此，正确的Cys和His残基的后验概率或统计支持度将会*低于*排除假基因时的水平。这是一种系统性偏差，因为它将推断结果（即使是轻微地）从真实的功能状态推向由错误序列所代表的非功能状态。如果包含了足够多的此类假基因或其他比对错误的序列，甚至可能导致推断出一个非功能的祖先。\n\n让我们评估给出的选项：\nA. 这是不正确的。标准ASR算法没有自动的“离群值检测”功能。它们会使用MSA中提供的所有数据来进行计算。\nB. 这是不正确的。冲突的性状状态（Ser而不是Cys，Arg而不是His）的存在，提供了*反对*共有状态是祖先状态的证据，而不是支持。它会降低，而不是提高统计支持度。\nC. 这是不正确的。算法被设计用来处理冲突数据，并且会产生一个结果。即使输入数据有噪声，它们也会为每个位点输出带有相关概率的重建序列。\nD. 这是不正确的。虽然单个假基因的影响可能很小，但它不是零。它仍然会系统性地影响推断出的祖先状态的概率分布。问题问的是系统性影响，即使是一个微小的、持续向一个方向的推动也是一种系统性偏差。在某些情况下，特别是如果假基因位于一个长分支上或靠近根部，其影响可能是不可忽略的。\nE. 这是正确的。如上所述，算法必须考虑来自假基因的Ser和Arg。这增加了分配给这些非功能性残基作为潜在祖先状态的概率，从而降低了分配给功能上必不可少的Cys和His残基的概率（和统计支持度）。这种偏差可能导致重建出的祖先酶在合成后，其催化能力会受损或丧失功能。", "answer": "$$\\boxed{E}$$", "id": "2099381"}, {"introduction": "祖先序列重建并非终点，而是实验验证的起点。当计算方法给出一个模棱两可的答案时，我们该如何抉择？这个练习完美地展示了计算预测与实验室工作的结合，将你置于一个真实的研究情境中 [@problem_id:2099358]。面对一个在关键活性位点具有两种可能氨基酸的祖先酶，你需要利用酶动力学数据来做出判断。通过计算催化效率（$k_{cat}/K_M$），你将学习如何量化评估不同祖先变体的“适应性”，从而将抽象的进化假说转化为可以用实验数据检验的具体问题。", "problem": "研究人员正在使用祖先序列重建 (ASR) 方法，研究一种细菌酶（一种酮还原酶）的进化史。他们的分析揭示了一条支持度很高的祖先序列，但在结合底物的活性位点内有一个关键位置例外。在这个位置上，统计重建表明两种不同的氨基酸——赖氨酸 (Lys) 和精氨酸 (Arg)——具有几乎相等的后验概率，分别为 $P_{Lys} = 0.55$ 和 $P_{Arg} = 0.45$。\n\n为了解决这种不确定性，该团队合成了重建祖先酶的两种变体：一种在不确定位置上为赖氨酸 (Anc-Lys)，另一种为精氨酸 (Anc-Arg)。随后，他们使用该酶的主要底物对这两种变体进行了稳态动力学分析。测得的米氏动力学参数如下：\n\n- 对于 Anc-Lys 变体：\n  - 催化速率常数，$k_{cat, Lys} = 155 \\text{ s}^{-1}$\n  - 米氏常数，$K_{M, Lys} = 62.0 \\text{ µM}$\n\n- 对于 Anc-Arg 变体：\n  - 催化速率常数，$k_{cat, Arg} = 98.0 \\text{ s}^{-1}$\n  - 米氏常数，$K_{M, Arg} = 85.0 \\text{ µM}$\n\n假设祖先酶在选择压力下进化，以在低底物浓度下最大化其反应速率，其功能性能可以通过酶与底物之间反应的表观二级速率常数来衡量。为确定在此假设下哪种变体是更合理的祖先，请计算 Anc-Lys 变体的此速率常数与 Anc-Arg 变体的此速率常数之比。\n\n请将您的答案以无量纲数的形式报告，并四舍五入到三位有效数字。", "solution": "在稳态米氏动力学中，当底物浓度很低（$[S] \\to 0$）时，初始速率由下式给出\n$$\nv_{0} \\approx \\frac{k_{cat}}{K_{M}}[E][S],\n$$\n因此，量化催化效率的表观二级速率常数为\n$$\nk_{\\text{app}}=\\frac{k_{cat}}{K_{M}}.\n$$\n对于这两种变体，它们分别是\n$$\nk_{\\text{app,Lys}}=\\frac{k_{cat,\\text{Lys}}}{K_{M,\\text{Lys}}}, \\quad k_{\\text{app,Arg}}=\\frac{k_{cat,\\text{Arg}}}{K_{M,\\text{Arg}}}.\n$$\n所要求的比率是\n$$\nR=\\frac{k_{\\text{app,Lys}}}{k_{\\text{app,Arg}}}=\\frac{\\frac{k_{cat,\\text{Lys}}}{K_{M,\\text{Lys}}}}{\\frac{k_{cat,\\text{Arg}}}{K_{M,\\text{Arg}}}}=\\frac{k_{cat,\\text{Lys}}\\,K_{M,\\text{Arg}}}{k_{cat,\\text{Arg}}\\,K_{M,\\text{Lys}}}.\n$$\n使用给定值，并注意到两个 $K_{M}$ 值均以相同浓度单位报告（因此单位在比率计算中会抵消），\n$$\nR=\\frac{155 \\times 85.0}{98.0 \\times 62.0}=\\frac{13175}{6076}\\approx 2.16837.\n$$\n四舍五入到三位有效数字，得到\n$$\nR \\approx 2.17.\n$$\n这表明 Anc-Lys 变体具有更高的表观二级速率常数，在针对低底物效率的选择压力下，它是一个更合理的祖先。", "answer": "$$\\boxed{2.17}$$", "id": "2099358"}]}