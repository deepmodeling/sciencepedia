{"hands_on_practices": [{"introduction": "本节练习将理论付诸实践，首先从生态学的基本单元——生物体对环境的响应——开始。我们将探讨如何将抽象的生态位概念与一个可量化的指标，即物种的性能广度，联系起来。通过计算一个假设物种在经历适应后其性能曲线的变化，您将亲手量化表型可塑性在决定物种如何应对环境梯度中的作用。这个练习旨在阐明，沿环境梯度的群落结构变化，其根源在于构成群落的各个物种生理和适应能力的差异。[@problem_id:2477002]", "problem": "考虑一个变温物种，其所处的环境存在一个以摄氏度为单位测量的温度梯度。设其性能随温度 $T$ 的变化在最适温度附近可由一条高斯热性能曲线来近似。定义基于耐受度的温度生态位宽度为这样一个温度子集的勒贝格测度（长度），在该子集内，物种的性能至少达到其处理内最大性能的一个固定比例 $\\theta$。设未驯化个体的性能为\n$$\nP_{\\mathrm{N}}(T) \\;=\\; \\exp\\!\\Big(-\\frac{(T - T_{\\mathrm{opt,N}})^{2}}{2\\sigma_{\\mathrm{N}}^{2}}\\Big),\n$$\n设已驯化个体的性能为\n$$\nP_{\\mathrm{A}}(T) \\;=\\; \\exp\\!\\Big(-\\frac{(T - T_{\\mathrm{opt,A}})^{2}}{2\\sigma_{\\mathrm{A}}^{2}}\\Big).\n$$\n假设这些曲线是无量纲的，并经过缩放，使其在 $T_{\\mathrm{opt,N}}$ 和 $T_{\\mathrm{opt,A}}$ 处分别达到最大值1。取性能比例阈值为 $\\theta = 0.25$。参数如下：\n- $T_{\\mathrm{opt,N}} = 20$, $\\sigma_{\\mathrm{N}} = 2.5$,\n- $T_{\\mathrm{opt,A}} = 23$, $\\sigma_{\\mathrm{A}} = 3.0$。\n\n仅使用基于耐受度的生态位宽度（即性能至少达到处理内最大值阈值比例的温度集合 $T$）的定义，以及指数函数和自然对数的标准性质，计算由可塑性引起的生态位宽度的变化。该变化定义为驯化后的生态位宽度减去未驯化时的生态位宽度，结果以摄氏度表示。将最终答案四舍五入到四位有效数字，并以摄氏度为单位表示结果。", "solution": "该问题要求计算由表型可塑性引起的生态位宽度的变化，该变化定义为驯化生态位宽度 $B_{\\mathrm{A}}$ 与未驯化生态位宽度 $B_{\\mathrm{N}}$ 之间的差值。整个分析将以摄氏度为单位进行，这与温度梯度的定义是一致的。\n\n首先，我们必须将所给的生态位宽度定义形式化。生态位宽度 $B$ 是这样一个温度集合 $T$ 的勒贝格测度（长度），在该集合中，性能 $P(T)$ 至少为其最大值的比例 $\\theta$。鉴于性能曲线 $P_{\\mathrm{N}}(T)$ 和 $P_{\\mathrm{A}}(T)$ 经过缩放，其最大值为1，因此该条件为 $P(T) \\ge \\theta$。\n\n让我们为形式为 $P(T) = \\exp(-\\frac{(T - T_{\\mathrm{opt}})^{2}}{2\\sigma^{2}})$ 的性能曲线推导生态位宽度的通用表达式。我们必须对不等式 $P(T) \\ge \\theta$ 求解 $T$。\n$$\n\\exp\\!\\Big(-\\frac{(T - T_{\\mathrm{opt}})^{2}}{2\\sigma^{2}}\\Big) \\ge \\theta\n$$\n自然对数函数 $\\ln(x)$ 在 $x>0$ 时是单调递增的。由于性能 $P(T)$ 和阈值 $\\theta = 0.25$ 均为正值，我们可以对不等式两边取自然对数而不改变不等号的方向。\n$$\n\\ln\\left(\\exp\\!\\Big(-\\frac{(T - T_{\\mathrm{opt}})^{2}}{2\\sigma^{2}}\\Big)\\right) \\ge \\ln(\\theta)\n$$\n$$\n-\\frac{(T - T_{\\mathrm{opt}})^{2}}{2\\sigma^{2}} \\ge \\ln(\\theta)\n$$\n两边同乘以-1会使不等号反向。注意，对于 $\\theta = 0.25 < 1$，$ln(\\theta)$ 是负数，所以 $-\\ln(\\theta)$ 是正数。\n$$\n\\frac{(T - T_{\\mathrm{opt}})^{2}}{2\\sigma^{2}} \\le -\\ln(\\theta)\n$$\n$$\n(T - T_{\\mathrm{opt}})^{2} \\le -2\\sigma^{2}\\ln(\\theta)\n$$\n对两边取平方根，我们得到一个包含绝对值的不等式：\n$$\n|T - T_{\\mathrm{opt}}| \\le \\sqrt{-2\\sigma^{2}\\ln(\\theta)}\n$$\n$$\n|T - T_{\\mathrm{opt}}| \\le \\sigma\\sqrt{-2\\ln(\\theta)}\n$$\n这个不等式定义了 $T$ 的一个闭区间：\n$$\nT_{\\mathrm{opt}} - \\sigma\\sqrt{-2\\ln(\\theta)} \\le T \\le T_{\\mathrm{opt}} + \\sigma\\sqrt{-2\\ln(\\theta)}\n$$\n生态位宽度 $B$ 是该区间的长度。它通过上限减去下限来计算。最适温度 $T_{\\mathrm{opt}}$ 被消掉了。\n$$\nB = \\left(T_{\\mathrm{opt}} + \\sigma\\sqrt{-2\\ln(\\theta)}\\right) - \\left(T_{\\mathrm{opt}} - \\sigma\\sqrt{-2\\ln(\\theta)}\\right) = 2\\sigma\\sqrt{-2\\ln(\\theta)}\n$$\n这个通用公式表明，生态位宽度与高斯性能曲线的标准差 $\\sigma$ 成正比。\n\n现在，我们将此公式分别应用于未驯化 (N) 和已驯化 (A) 的情况，并使用它们各自的参数。\n未驯化的生态位宽度 $B_{\\mathrm{N}}$ 为：\n$$\nB_{\\mathrm{N}} = 2\\sigma_{\\mathrm{N}}\\sqrt{-2\\ln(\\theta)}\n$$\n驯化后的生态位宽度 $B_{\\mathrm{A}}$ 为：\n$$\nB_{\\mathrm{A}} = 2\\sigma_{\\mathrm{A}}\\sqrt{-2\\ln(\\theta)}\n$$\n由可塑性引起的生态位宽度变化 $\\Delta B$ 定义为 $B_{\\mathrm{A}} - B_{\\mathrm{N}}$。\n$$\n\\Delta B = B_{\\mathrm{A}} - B_{\\mathrm{N}} = 2\\sigma_{\\mathrm{A}}\\sqrt{-2\\ln(\\theta)} - 2\\sigma_{\\mathrm{N}}\\sqrt{-2\\ln(\\theta)}\n$$\n提取公因式得到：\n$$\n\\Delta B = 2(\\sigma_{\\mathrm{A}} - \\sigma_{\\mathrm{N}})\\sqrt{-2\\ln(\\theta)}\n$$\n给定的参数值如下：\n- $\\sigma_{\\mathrm{N}} = 2.5$\n- $\\sigma_{\\mathrm{A}} = 3.0$\n- $\\theta = 0.25$\n\n将这些值代入 $\\Delta B$ 的表达式中：\n$$\n\\Delta B = 2(3.0 - 2.5)\\sqrt{-2\\ln(0.25)}\n$$\n首先，简化各项：\n$$\n\\sigma_{\\mathrm{A}} - \\sigma_{\\mathrm{N}} = 0.5\n$$\n$$\n\\ln(0.25) = \\ln\\left(\\frac{1}{4}\\right) = \\ln(4^{-1}) = -\\ln(4) = -\\ln(2^2) = -2\\ln(2)\n$$\n将这些结果代回 $\\Delta B$ 的表达式中：\n$$\n\\Delta B = 2(0.5)\\sqrt{-2(-2\\ln(2))}\n$$\n$$\n\\Delta B = 1 \\cdot \\sqrt{4\\ln(2)}\n$$\n$$\n\\Delta B = 2\\sqrt{\\ln(2)}\n$$\n这是生态位宽度变化的精确解析表达式。题目要求一个四舍五入到四位有效数字的数值答案。使用 $\\ln(2) \\approx 0.69314718$ 的值：\n$$\n\\Delta B \\approx 2\\sqrt{0.69314718} \\approx 2(0.8325546) \\approx 1.6651092\n$$\n将此结果四舍五入到四位有效数字，得到 $1.665$。单位是摄氏度。", "answer": "$$\n\\boxed{1.665}\n$$", "id": "2477002"}, {"introduction": "在理解了单个物种如何响应环境梯度之后，我们现在将视角扩展到整个群落层面。本练习的核心问题是：我们如何量化沿环境梯度发生的物种组成变化？您将利用强大的希尔数（Hill numbers）框架，通过计算多度数据来量化物种周转或β多样性。这个练习将引导您将原始的物种多度数据转化为一个简洁而直观的指标，它能量化不同生境间群落组成的差异程度，这是理解梯度上生物多样性分布模式的关键一步。[@problem_id:2477029]", "problem": "一个高程样带包含$5$个森林样地（站点），从低海拔延伸到高海拔。下面给出了$6$个物种（$A$–$F$）的物种-样地丰度（个体数量）矩阵。假设所有个体都已正确识别，且各样地间的抽样努力相等。\n\n- 样地$1$：$A=50$, $B=30$, $C=20$, $D=0$, $E=0$, $F=0$。\n- 样地$2$：$A=40$, $B=25$, $C=20$, $D=10$, $E=5$, $F=0$。\n- 样地$3$：$A=20$, $B=20$, $C=20$, $D=20$, $E=20$, $F=0$。\n- 样地$4$：$A=10$, $B=10$, $C=15$, $D=25$, $E=25$, $F=15$。\n- 样地$5$：$A=0$, $B=5$, $C=15$, $D=30$, $E=30$, $F=20$。\n\n使用$q=1$阶多样性的Hill数框架（对应于香农熵指数的有效物种数），按以下步骤进行：\n\n1. 对每个样地，根据计数计算样地内的相对丰度$\\{p_{i}\\}$和香农熵$H_{\\alpha}=-\\sum_{i} p_{i}\\ln p_{i}$（使用自然对数，并约定当$p_{i}=0$时，该项根据连续性贡献为$0$）。将每个$H_{\\alpha}$转换为有效物种数$\\,^{1}D_{\\alpha}=\\exp(H_{\\alpha})$。令$\\bar{\\alpha}$表示这五个样地内有效物种数的算术平均值。\n\n2. 合并所有样地以获得整个样带的相对丰度$\\{P_{i}\\}$，计算合并后的香农熵$H_{\\gamma}=-\\sum_{i} P_{i}\\ln P_{i}$，并将其转换为gamma有效数$\\,^{1}D_{\\gamma}=\\exp(H_{\\gamma})$。\n\n3. 计算$q=1$时的乘性beta多样性，公式为$\\beta = \\,^{1}D_{\\gamma}/\\bar{\\alpha}$。\n\n以纯数字形式报告$\\beta$的最终值，四舍五入至四位有效数字。然后，根据环境梯度上多样性划分的基本原理，在您的计算过程中，根据$\\beta$相对于样地数量的大小，解释沿高程梯度的物种周转是高还是低。", "solution": "该问题陈述在科学上是有效的。这是一个在定量群落生态学中定义明确的问题，基于使用Hill数框架进行多样性测量的既定原则。所有必要的数据和定义都已提供，没有矛盾或含糊之处。我们可以开始解题。\n\n该问题要求为一个包含$S=6$个物种、$K=5$个样地的数据集计算乘性beta多样性$\\beta = \\,^{1}D_{\\gamma} / \\bar{\\alpha}$。多样性阶数指定为$q=1$。\n\n首先，我们必须计算每个样地（$k=1, \\dots, 5$）的样地内alpha多样性$\\,^{1}D_{\\alpha,k}$。这涉及到计算香农熵$H_{\\alpha,k} = -\\sum_{i=1}^{S} p_{ik} \\ln p_{ik}$，其中$p_{ik}$是物种$i$在样地$k$的相对丰度。然后，有效物种数为$\\,^{1}D_{\\alpha,k} = \\exp(H_{\\alpha,k})$。\n\n对于样地$1$：\n总个体数 $N_1 = 50+30+20=100$。\n相对丰度 $\\{p_{i,1}\\} = \\{0.5, 0.3, 0.2\\}$。\n$H_{\\alpha,1} = -(0.5 \\ln(0.5) + 0.3 \\ln(0.3) + 0.2 \\ln(0.2)) \\approx 1.029653$。\n$\\,^{1}D_{\\alpha,1} = \\exp(H_{\\alpha,1}) \\approx 2.799998$。\n\n对于样地$2$：\n总个体数 $N_2 = 40+25+20+10+5=100$。\n相对丰度 $\\{p_{i,2}\\} = \\{0.4, 0.25, 0.2, 0.1, 0.05\\}$。\n$H_{\\alpha,2} = -(0.4 \\ln(0.4) + 0.25 \\ln(0.25) + 0.2 \\ln(0.2) + 0.1 \\ln(0.1) + 0.05 \\ln(0.05)) \\approx 1.414024$。\n$\\,^{1}D_{\\alpha,2} = \\exp(H_{\\alpha,2}) \\approx 4.112412$。\n\n对于样地$3$：\n总个体数 $N_3 = 20+20+20+20+20=100$。\n相对丰度 $\\{p_{i,3}\\} = \\{0.2, 0.2, 0.2, 0.2, 0.2\\}$。这是一个包含$5$个物种的完全均匀的群落。\n$H_{\\alpha,3} = -\\sum_{i=1}^{5} 0.2 \\ln(0.2) = -5(0.2 \\ln(0.2)) = -\\ln(0.2) = \\ln(5) \\approx 1.609438$。\n$\\,^{1}D_{\\alpha,3} = \\exp(\\ln(5)) = 5$。\n\n对于样地$4$：\n总个体数 $N_4 = 10+10+15+25+25+15=100$。\n相对丰度 $\\{p_{i,4}\\} = \\{0.1, 0.1, 0.15, 0.25, 0.25, 0.15\\}$。\n$H_{\\alpha,4} = -(2 \\times 0.1 \\ln(0.1) + 2 \\times 0.15 \\ln(0.15) + 2 \\times 0.25 \\ln(0.25)) \\approx 1.722799$。\n$\\,^{1}D_{\\alpha,4} = \\exp(H_{\\alpha,4}) \\approx 5.599986$。\n\n对于样地$5$：\n总个体数 $N_5 = 5+15+30+30+20=100$。\n相对丰度 $\\{p_{i,5}\\} = \\{0.05, 0.15, 0.3, 0.3, 0.2\\}$。\n$H_{\\alpha,5} = -(0.05 \\ln(0.05) + 0.15 \\ln(0.15) + 2 \\times 0.3 \\ln(0.3) + 0.2 \\ln(0.2)) \\approx 1.478627$。\n$\\,^{1}D_{\\alpha,5} = \\exp(H_{\\alpha,5}) \\approx 4.386689$。\n\n接下来，我们计算平均alpha多样性$\\bar{\\alpha}$，即各个样地多样性的算术平均值。\n$$\n\\bar{\\alpha} = \\frac{1}{5} \\sum_{k=1}^{5} \\,^{1}D_{\\alpha,k} \\approx \\frac{1}{5} (2.799998 + 4.112412 + 5.000000 + 5.599986 + 4.386689)\n$$\n$$\n\\bar{\\alpha} \\approx \\frac{21.899085}{5} \\approx 4.379817\n$$\n现在，我们计算gamma多样性$\\,^{1}D_{\\gamma}$。这需要合并所有样地的丰度以获得区域相对丰度$\\{P_i\\}$。\n物种A到F的总计数为：\n$N_{A} = 50+40+20+10+0 = 120$\n$N_{B} = 30+25+20+10+5 = 90$\n$N_{C} = 20+20+20+15+15 = 90$\n$N_{D} = 0+10+20+25+30 = 85$\n$N_{E} = 0+5+20+25+30 = 80$\n$N_{F} = 0+0+0+15+20 = 35$\n该区域的总个体数为 $N_{\\gamma} = 120+90+90+85+80+35 = 500$。\n区域相对丰度$\\{P_i\\}$为：\n$\\{P_i\\} = \\{\\frac{120}{500}, \\frac{90}{500}, \\frac{90}{500}, \\frac{85}{500}, \\frac{80}{500}, \\frac{35}{500}\\} = \\{0.24, 0.18, 0.18, 0.17, 0.16, 0.07\\}$。\n区域香农熵为$H_{\\gamma} = -\\sum_{i=1}^{6} P_i \\ln P_i$：\n$H_{\\gamma} = -(0.24 \\ln(0.24) + 2 \\times 0.18 \\ln(0.18) + 0.17 \\ln(0.17) + 0.16 \\ln(0.16) + 0.07 \\ln(0.07)) \\approx 1.740429$。\ngamma多样性为 $\\,^{1}D_{\\gamma} = \\exp(H_{\\gamma}) \\approx \\exp(1.740429) \\approx 5.699635$。\n\n最后，我们计算乘性beta多样性$\\beta$。\n$$\n\\beta = \\frac{\\,^{1}D_{\\gamma}}{\\bar{\\alpha}} \\approx \\frac{5.699635}{4.379817} \\approx 1.301342\n$$\n四舍五入到四位有效数字，得到$\\beta = 1.301$。\n\n解释：beta多样性指标$\\beta$量化了不同群落的有效数量。其取值范围从最小值$1$（所有样地完全相同）到最大值等于样地数量（本例中为$5$）（所有样地完全不同，即没有物种重叠）。计算出的值$\\beta \\approx 1.301$非常接近$1$。这个低值表明，这五个样地的物种组成和相对丰度高度相似。因此，沿高程梯度的物种周转率很低。该样带更像是一个单一的、略具异质性的群落，而不是一系列组成上截然不同的群落。", "answer": "$$\n\\boxed{1.301}\n$$", "id": "2477029"}, {"introduction": "在真实生态系统中，群落格局通常由多种相互关联的因素共同塑造。这个最终的进阶练习将带您深入到一个强大的统计技术——变异分区（variation partitioning）——的核心。您将学习如何从基本原理出发，亲自实现这一方法，以区分环境过滤（物种根据环境条件分布）与空间过程（如扩散限制）对群落变异的相对贡献。通过这个练习，您将掌握一项关键技能，即将观测到的群落变异分解为由纯环境、纯空间以及两者共同解释的部分，从而更深刻地理解驱动生态群落沿梯度分布的复杂机制。[@problem_id:2477009]", "problem": "给定一个群落数据矩阵和两组沿气候梯度变化的预测变量：一个环境矩阵和一个空间矩阵。您的任务是编写一个完整的、可运行的程序，使用偏冗余分析执行变异分解，以量化群落变异中的纯环境、纯空间、共享和未解释的组分。\n\n基本原理与定义如下：\n1) 考虑一个中心化的群落响应矩阵 $\\mathbf{Y} \\in \\mathbb{R}^{n \\times p}$，其中 $n$ 是样点数，$p$ 是分类单元（物种）数。中心化意味着减去列均值，使得 $\\mathbf{Y}$ 的每一列均值为 $0$。\n2) 考虑一个中心化的预测变量矩阵 $\\mathbf{X} \\in \\mathbb{R}^{n \\times q}$，其中 $q$ 是预测变量的数量。不使用截距项；所有矩阵在分析前都进行列中心化。\n3) $\\mathbf{Y}$ 在 $\\mathbf{X}$ 上的列空间投影由 $\\hat{\\mathbf{Y}} = \\mathbf{Q}\\mathbf{Q}^{\\top}\\mathbf{Y}_{c}$ 给出，其中 $\\mathbf{Y}_{c}$ 是中心化后的 $\\mathbf{Y}$，而 $\\mathbf{Q} \\in \\mathbb{R}^{n \\times m}$ 具有标准正交列，这些列张成中心化 $\\mathbf{X}$ 的列空间，且 $m = \\operatorname{rank}(\\mathbf{X})$。获取 $\\mathbf{Q}$ 的一种方法是对中心化 $\\mathbf{X}$ 进行奇异值分解。\n4) $\\mathbf{Y}$ 的总中心化平方和为 $\\mathrm{SST} = \\lVert \\mathbf{Y}_{c} \\rVert_{F}^{2} = \\operatorname{trace}(\\mathbf{Y}_{c}^{\\top}\\mathbf{Y}_{c})$。\n5) 冗余分析的决定系数为 $R^{2} = \\lVert \\hat{\\mathbf{Y}} \\rVert_{F}^{2} / \\lVert \\mathbf{Y}_{c} \\rVert_{F}^{2}$。\n6) 冗余分析的调整后决定系数 (Peres-Neto et al.) 为\n$$\nR_{\\mathrm{adj}}^{2} \\;=\\; 1 - \\left(1 - R^{2}\\right)\\frac{n - 1}{n - m - 1},\n$$\n前提是 $n - m - 1 > 0$。如果 $m = 0$，则定义 $R_{\\mathrm{adj}}^{2} = 0$。\n7) 对于使用环境矩阵 $\\mathbf{E}$ 和空间矩阵 $\\mathbf{S}$ 进行的变异分解，定义以下调整后系数：\n- $R_{\\mathrm{adj}}^{2}[\\mathbf{E}]$ 对应模型 $\\mathbf{Y} \\sim \\mathbf{E}$，\n- $R_{\\mathrm{adj}}^{2}[\\mathbf{S}]$ 对应模型 $\\mathbf{Y} \\sim \\mathbf{S}$，\n- $R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}]$ 对应模型 $\\mathbf{Y} \\sim [\\mathbf{E},\\mathbf{S}]$ (按列拼接)。\n在分解之前，将这三个调整后系数中的每一个都裁剪到区间 $[0,1]$ 内，即将负值替换为 $0$，将大于 $1$ 的值替换为 $1$。\n8) 将变异组分定义为：\n- 纯环境组分 $[a] = \\max\\{0, R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}] - R_{\\mathrm{adj}}^{2}[\\mathbf{S}]\\}$，\n- 纯空间组分 $[b] = \\max\\{0, R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}] - R_{\\mathrm{adj}}^{2}[\\mathbf{E}]\\}$，\n- 共享组分 $[c] = \\max\\{0, R_{\\mathrm{adj}}^{2}[\\mathbf{E}] + R_{\\mathrm{adj}}^{2}[\\mathbf{S}] - R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}]\\}$，\n- 未解释组分 $[d] = \\max\\{0, 1 - R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}]\\}$。\n这种裁剪产生非负的组分，其总和不超过 $1$，并且当 $[a] + [b] + [c] = R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}]$ 且无需额外裁剪时，其总和恰好等于 $1$。\n\n角度单位不适用。所有结果都是无量纲的，因此没有物理单位适用。\n\n您的程序必须使用线性代数实现上述内容。具体来说，使用奇异值分解从中心化的预测变量计算 $\\mathbf{Q}$，使用弗罗贝尼乌斯范数计算投影和范数，并使用提供的公式计算调整后系数。不要使用任何直接执行冗余分析的库例程；应基于上述原理进行构建。\n\n测试套件：\n您的程序必须为以下四种情况计算 $[a],[b],[c],[d]$。在所有情况下，用 $n$ 表示样点数，用 $p$ 表示物种数（$\\mathbf{Y}$ 的列数），并确保所有矩阵在分析前都进行列中心化。\n\n情况1（一般情况，部分共线性但可识别）：\n- 设 $n = 10$，$p = 4$。定义一个样点梯度 $t_{i} = -1 + 2\\frac{i-1}{n-1}$，其中 $i \\in \\{1,\\ldots,n\\}$。\n- 环境预测变量 $\\mathbf{E} \\in \\mathbb{R}^{n \\times 2}$，其列为 $E_{1} = t$ 和 $E_{2} = 0.5\\,t^{2}$。\n- 空间预测变量 $\\mathbf{S} \\in \\mathbb{R}^{n \\times 2}$，其列为 $S_{1} = \\sin\\!\\big(\\pi\\frac{t+1}{2}\\big)$ 和 $S_{2} = \\cos\\!\\big(\\pi\\frac{t+1}{2}\\big)$。\n- 群落矩阵 $\\mathbf{Y} \\in \\mathbb{R}^{n \\times p}$，其列为：\n  $Y_{1} = 1.0\\,E_{1} + 0.3\\,E_{2} + 0.2\\,S_{1} + 0.05\\sin(3\\pi t)$,\n  $Y_{2} = -0.5\\,E_{1} + 0.6\\,E_{2} + 0.3\\,S_{2} + 0.03\\cos(5\\pi t)$,\n  $Y_{3} = 0.2\\,E_{1} + 0.1\\,S_{1} - 0.2\\,S_{2} + 0.04\\sin(2\\pi t)$,\n  $Y_{4} = 0.8\\,E_{1} - 0.4\\,E_{2} + 0.2\\,S_{1} + 0.03\\cos(4\\pi t)$.\n\n情况2（由环境完美拟合）：\n- 设 $n = 8$，$p = 3$。定义 $t_{i} = -1 + 2\\frac{i-1}{n-1}$。\n- 环境预测变量 $\\mathbf{E} \\in \\mathbb{R}^{n \\times 3}$，其列为 $E_{1} = t$，$E_{2} = t^{2}$，$E_{3} = t^{3}$。\n- 空间预测变量 $\\mathbf{S} \\in \\mathbb{R}^{n \\times 2}$，其列为 $S_{1} = \\sin(\\pi t)$，$S_{2} = \\cos(\\pi t)$。\n- 定义一个系数矩阵 $\\mathbf{B} \\in \\mathbb{R}^{3 \\times p}$，其条目为 $B = \\begin{bmatrix} 1.2 & -0.7 & 0.5 \\\\ -0.3 & 0.4 & -1.1 \\\\ 0.9 & 0.2 & 0.6 \\end{bmatrix}$，并设置 $\\mathbf{Y} = \\mathbf{E}\\mathbf{B}$。这会产生由 $\\mathbf{E}$ 的精确拟合。\n\n情况3（完全共享的梯度）：\n- 设 $n = 9$，$p = 2$。定义一个单一梯度 $g_{i} = -1 + 2\\frac{i-1}{n-1}$。\n- 环境预测变量 $\\mathbf{E} \\in \\mathbb{R}^{n \\times 1}$，其列为 $E_{1} = g$。\n- 空间预测变量 $\\mathbf{S} \\in \\mathbb{R}^{n \\times 1}$，其列为 $S_{1} = g$（与 $E_{1}$ 相同）。\n- 群落矩阵 $\\mathbf{Y} \\in \\mathbb{R}^{n \\times p}$，其列为 $Y_{1} = 2.0\\,g$ 和 $Y_{2} = -1.5\\,g$。\n\n情况4（通过构造无信号）：\n- 设 $n = 12$，$p = 3$。定义 $t_{i} = -1 + 2\\frac{i-1}{n-1}$。\n- 环境预测变量 $\\mathbf{E} \\in \\mathbb{R}^{n \\times 2}$，其列为 $E_{1} = t$，$E_{2} = t^{2}$。\n- 空间预测变量 $\\mathbf{S} \\in \\mathbb{R}^{n \\times 2}$，其列为 $S_{1} = \\sin(\\pi t)$，$S_{2} = \\cos(\\pi t)$。\n- 构造一个基矩阵 $\\mathbf{Z} \\in \\mathbb{R}^{n \\times p}$，其列为 $Z_{1} = \\sin(3\\pi t)$，$Z_{2} = \\cos(5\\pi t)$，$Z_{3} = t^{3}$。令 $\\mathbf{X} = [\\mathbf{E}, \\mathbf{S}]$ 表示按列拼接的矩阵。令 $\\mathbf{P}_{\\mathbf{X}}$ 为到 $\\mathbf{X}$ 的中心化列空间上的正交投影算子。定义 $\\mathbf{Y} = (\\mathbf{I}_{n} - \\mathbf{P}_{\\mathbf{X}})\\mathbf{Z}$。这确保了 $\\mathbf{Y}$ 与预测变量的精确正交性，因此在裁剪之前，对于 $\\mathbf{E}$、$\\mathbf{S}$ 和 $\\mathbf{E}+\\mathbf{S}$，都有 $R^{2} = 0$。\n\n所需输出：\n- 对于四种情况中的每一种，计算上面定义的列表 $[a,b,c,d]$，每个条目四舍五入到小数点后六位。\n- 您的程序应生成单行输出，其中包含四个结果，格式为方括号括起来的、以逗号分隔的列表，按情况1到4的顺序排列，例如：“[[a1,b1,c1,d1],[a2,b2,c2,d2],[a3,b3,c3,d3],[a4,b4,c4,d4]]”。确保输出中没有空格。\n\n所有计算都必须根据上述线性代数原理实现。不允许用户输入或外部文件。程序必须是确定性的。", "solution": "该问题是有效的。它基于多元统计学的既定原则，特别是冗余分析（RDA）和变异分解，提出了一个明确定义的计算任务。所有必要的定义、公式以及四个不同测试用例的数据都已提供。该问题具有科学依据，内部一致，且没有歧义。可以计算出唯一的、确定性的解。\n\n解题步骤是根据指定的基本线性代数运算实现变异分解。对每个测试用例的总体过程包括三个主要步骤：\n1. 计算群落矩阵 $\\mathbf{Y}$ 与环境矩阵 $\\mathbf{E}$ 相关模型的调整后决定系数 $R_{\\mathrm{adj}}^{2}$，记为 $R_{\\mathrm{adj}}^{2}[\\mathbf{E}]$。\n2. 计算 $\\mathbf{Y}$ 与空间矩阵 $\\mathbf{S}$ 相关模型的 $R_{\\mathrm{adj}}^{2}$，记为 $R_{\\mathrm{adj}}^{2}[\\mathbf{S}]$。\n3. 计算 $\\mathbf{Y}$ 与组合矩阵 $[\\mathbf{E}, \\mathbf{S}]$ 相关模型的 $R_{\\mathrm{adj}}^{2}$，记为 $R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}]$。\n\n根据这三个系数，计算变异组分。核心部分是一个函数，用于为一般的响应矩阵 $\\mathbf{Y} \\in \\mathbb{R}^{n \\times p}$ 和预测变量矩阵 $\\mathbf{X} \\in \\mathbb{R}^{n \\times q}$ 计算 $R_{\\mathrm{adj}}^{2}$。此计算严格遵守所提供的定义。\n\n我们详细说明计算 $R_{\\mathrm{adj}}^{2}(\\mathbf{Y}, \\mathbf{X})$ 的步骤：\n\n首先，通过减去每列的均值来中心化矩阵。令 $\\mathbf{Y}_c$ 和 $\\mathbf{X}_c$ 为中心化后的矩阵。\n$$\n\\mathbf{Y}_c = \\mathbf{Y} - \\mathbf{1}(\\mathbf{1}^{\\top}\\mathbf{1})^{-1}\\mathbf{1}^{\\top}\\mathbf{Y}\n$$\n$$\n\\mathbf{X}_c = \\mathbf{X} - \\mathbf{1}(\\mathbf{1}^{\\top}\\mathbf{1})^{-1}\\mathbf{1}^{\\top}\\mathbf{X}\n$$\n其中 $\\mathbf{1}$ 是长度为 $n$ 的全一列向量。\n\n其次，确定秩 $m = \\operatorname{rank}(\\mathbf{X}_c)$。如果 $m=0$，根据定义，$R_{\\mathrm{adj}}^{2} = 0$。否则，继续。观测数量为 $n$。必须满足条件 $n - m - 1 > 0$。\n\n第三，找到 $\\mathbf{X}_c$ 列空间的一个标准正交基。这通过对 $\\mathbf{X}_c$ 进行奇异值分解（SVD）实现：\n$$\n\\mathbf{X}_c = \\mathbf{U}\\mathbf{\\Sigma}\\mathbf{V}^{\\top}\n$$\n包含标准正交基向量的矩阵 $\\mathbf{Q} \\in \\mathbb{R}^{n \\times m}$ 由 $\\mathbf{U}$ 的前 $m$ 列构成。\n\n第四，将中心化的响应矩阵 $\\mathbf{Y}_c$ 投影到由 $\\mathbf{Q}$ 张成的列空间上。投影矩阵 $\\hat{\\mathbf{Y}}$ 为：\n$$\n\\hat{\\mathbf{Y}} = \\mathbf{Q}\\mathbf{Q}^{\\top}\\mathbf{Y}_c\n$$\n\n第五，计算响应的总平方和（SST）和由投影解释的平方和（SSR）。这些分别对应于 $\\mathbf{Y}_c$ 和 $\\hat{\\mathbf{Y}}$ 的弗罗贝尼乌斯范数的平方。\n$$\n\\mathrm{SST} = \\lVert \\mathbf{Y}_c \\rVert_{F}^{2} = \\operatorname{trace}(\\mathbf{Y}_c^{\\top}\\mathbf{Y}_c)\n$$\n$$\n\\mathrm{SSR} = \\lVert \\hat{\\mathbf{Y}} \\rVert_{F}^{2} = \\operatorname{trace}(\\hat{\\mathbf{Y}}^{\\top}\\hat{\\mathbf{Y}})\n$$\n如果 $\\mathrm{SST} = 0$，则 $R^2$ 未定义，但这种情况在测试用例中不会出现。我们假设 $\\mathrm{SST} > 0$。\n\n第六，计算未调整的决定系数 $R^2$：\n$$\nR^{2} = \\frac{\\mathrm{SSR}}{\\mathrm{SST}}\n$$\n\n第七，使用Peres-Neto公式计算调整后决定系数：\n$$\nR_{\\mathrm{adj}}^{2} = 1 - (1 - R^{2})\\frac{n - 1}{n - m - 1}\n$$\n\n获得所需的三个系数 $R_{\\mathrm{adj}}^{2}[\\mathbf{E}]$、$R_{\\mathrm{adj}}^{2}[\\mathbf{S}]$ 和 $R_{\\mathrm{adj}}^{2}[\\mathbf{E}+\\mathbf{S}]$ 后，将它们裁剪到区间 $[0, 1]$ 内。令裁剪后的值为 $r_{E}$、$r_{S}$ 和 $r_{ES}$。\n\n最后，按定义计算四个变异组分：\n- 纯环境组分：$[a] = \\max\\{0, r_{ES} - r_{S}\\}$\n- 纯空间组分：$[b] = \\max\\{0, r_{ES} - r_{E}\\}$\n- 共享组分：$[c] = \\max\\{0, r_{E} + r_{S} - r_{ES}\\}$\n- 未解释组分：$[d] = \\max\\{0, 1 - r_{ES}\\}$\n\n将此完整过程应用于问题陈述中指定的四个测试用例，生成所需的输出。实现必须为每个案例构建矩阵，应用所述算法，并格式化结果。对于情况4，$\\mathbf{Y}$ 的构建明确使用了从中心化的总预测变量矩阵 $\\mathbf{X} = [\\mathbf{E}, \\mathbf{S}]$ 导出的投影算子 $\\mathbf{P}_{\\mathbf{X}} = \\mathbf{Q}\\mathbf{Q}^{\\top}$，定义了 $\\mathbf{Y} = (\\mathbf{I}_n - \\mathbf{P}_{\\mathbf{X}})\\mathbf{Z}$，这通过构造确保了正交性。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the variation partitioning problem for the four specified test cases.\n    \"\"\"\n\n    def center_matrix(mat):\n        \"\"\"Column-centers a matrix.\"\"\"\n        return mat - mat.mean(axis=0)\n\n    def calculate_adj_r_squared(Y, X):\n        \"\"\"\n        Calculates the adjusted R-squared for redundancy analysis from first principles.\n\n        Args:\n            Y (np.ndarray): The response matrix (sites x species).\n            X (np.ndarray): The predictor matrix (sites x predictors).\n\n        Returns:\n            float: The adjusted R-squared value.\n        \"\"\"\n        n, p = Y.shape\n        if X.shape[1] == 0:\n            return 0.0\n\n        Yc = center_matrix(Y)\n        Xc = center_matrix(X)\n        \n        # If Xc is all zeros, its rank is 0.\n        if np.allclose(Xc, 0):\n            return 0.0\n\n        m = np.linalg.matrix_rank(Xc)\n\n        if m == 0:\n            return 0.0\n\n        if not (n - m - 1 > 0):\n            # This case implies an ill-posed model, but it is not expected for the given problems.\n            # R-adj would be undefined. A value of 0 is a reasonable fallback, \n            # as the model has no predictive power with this many parameters.\n            return 0.0\n\n        # SVD to get orthonormal basis Q\n        # U has shape (n, k), where k = min(n, q)\n        U, s, Vt = np.linalg.svd(Xc, full_matrices=False)\n        Q = U[:, :m]\n\n        # Project Yc onto the column space of Xc\n        Y_hat = Q @ (Q.T @ Yc)\n        \n        # Calculate sums of squares using Frobenius norms squared\n        sst = np.sum(Yc**2)\n        ssr = np.sum(Y_hat**2)\n\n        if sst == 0:\n            # If there is no variation in Y, R-squared is ambiguous.\n            # If SSR is also 0, R^2 could be 1. If SSR > 0, it's an error.\n            # Assuming 1.0 if perfectly constant and predicted.\n            return 1.0 if ssr == 0 else 0.0\n\n        r_squared = ssr / sst\n        \n        # Clamp R^2 to handle potential floating point inaccuracies\n        r_squared = np.clip(r_squared, 0, 1)\n\n        adj_r_squared = 1 - (1 - r_squared) * (n - 1) / (n - m - 1)\n        \n        return adj_r_squared\n\n    def perform_variation_partitioning(Y, E, S):\n        \"\"\"\n        Performs variation partitioning and returns the four fractions [a, b, c, d].\n        \n        Args:\n            Y (np.ndarray): The response matrix.\n            E (np.ndarray): The environmental predictor matrix.\n            S (np.ndarray): The spatial predictor matrix.\n\n        Returns:\n            list: A list containing the four fractions [a, b, c, d].\n        \"\"\"\n        X_ES = np.hstack((E, S))\n\n        r2_E = calculate_adj_r_squared(Y, E)\n        r2_S = calculate_adj_r_squared(Y, S)\n        r2_ES = calculate_adj_r_squared(Y, X_ES)\n        \n        # Clip adjusted R-squared values to [0, 1]\n        r_E_clipped = np.clip(r2_E, 0, 1)\n        r_S_clipped = np.clip(r2_S, 0, 1)\n        r_ES_clipped = np.clip(r2_ES, 0, 1)\n\n        # Calculate variation fractions\n        a = max(0, r_ES_clipped - r_S_clipped) # Pure environmental\n        b = max(0, r_ES_clipped - r_E_clipped) # Pure spatial\n        c = max(0, r_E_clipped + r_S_clipped - r_ES_clipped) # Shared\n        d = max(0, 1 - r_ES_clipped) # Unexplained\n        \n        return [round(v, 6) for v in [a, b, c, d]]\n\n    results = []\n\n    # Case 1\n    n1, p1 = 10, 4\n    t1 = np.linspace(-1, 1, n1)\n    E1 = np.vstack((t1, 0.5 * t1**2)).T\n    S1 = np.vstack((np.sin(np.pi * (t1 + 1) / 2), np.cos(np.pi * (t1 + 1) / 2))).T\n    Y1 = np.zeros((n1, p1))\n    Y1[:, 0] = 1.0 * E1[:, 0] + 0.3 * E1[:, 1] + 0.2 * S1[:, 0] + 0.05 * np.sin(3 * np.pi * t1)\n    Y1[:, 1] = -0.5 * E1[:, 0] + 0.6 * E1[:, 1] + 0.3 * S1[:, 1] + 0.03 * np.cos(5 * np.pi * t1)\n    Y1[:, 2] = 0.2 * E1[:, 0] + 0.1 * S1[:, 0] - 0.2 * S1[:, 1] + 0.04 * np.sin(2 * np.pi * t1)\n    Y1[:, 3] = 0.8 * E1[:, 0] - 0.4 * E1[:, 1] + 0.2 * S1[:, 0] + 0.03 * np.cos(4 * np.pi * t1)\n    results.append(perform_variation_partitioning(Y1, E1, S1))\n    \n    # Case 2\n    n2, p2 = 8, 3\n    t2 = np.linspace(-1, 1, n2)\n    E2 = np.vstack((t2, t2**2, t2**3)).T\n    S2 = np.vstack((np.sin(np.pi * t2), np.cos(np.pi * t2))).T\n    B2 = np.array([[1.2, -0.7, 0.5], [-0.3, 0.4, -1.1], [0.9, 0.2, 0.6]])\n    Y2 = E2 @ B2\n    results.append(perform_variation_partitioning(Y2, E2, S2))\n\n    # Case 3\n    n3, p3 = 9, 2\n    g3 = np.linspace(-1, 1, n3)\n    E3 = g3.reshape(-1, 1)\n    S3 = g3.reshape(-1, 1)\n    Y3 = np.zeros((n3, p3))\n    Y3[:, 0] = 2.0 * g3\n    Y3[:, 1] = -1.5 * g3\n    results.append(perform_variation_partitioning(Y3, E3, S3))\n\n    # Case 4\n    n4, p4 = 12, 3\n    t4 = np.linspace(-1, 1, n4)\n    E4 = np.vstack((t4, t4**2)).T\n    S4 = np.vstack((np.sin(np.pi * t4), np.cos(np.pi * t4))).T\n    Z4 = np.vstack((np.sin(3 * np.pi * t4), np.cos(5 * np.pi * t4), t4**3)).T\n    \n    X4 = np.hstack((E4, S4))\n    Xc4 = center_matrix(X4)\n    m4 = np.linalg.matrix_rank(Xc4)\n    U4, s4, Vt4 = np.linalg.svd(Xc4, full_matrices=False)\n    Q4 = U4[:, :m4]\n    PX4 = Q4 @ Q4.T\n    I_n4 = np.identity(n4)\n    Y4 = (I_n4 - PX4) @ Z4\n    results.append(perform_variation_partitioning(Y4, E4, S4))\n\n    # Format the final output string\n    output_str = \"[\" + \",\".join([f\"[{','.join(map(str, res))}]\" for res in results]) + \"]\"\n    print(output_str)\n\nsolve()\n```", "id": "2477009"}]}