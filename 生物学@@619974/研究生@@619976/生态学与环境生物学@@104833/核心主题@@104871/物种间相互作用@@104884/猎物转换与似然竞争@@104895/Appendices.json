{"hands_on_practices": [{"introduction": "本练习将引导你完成数学生态学的基础步骤。你将建立一个包含猎物转换的 Rosenzweig-MacArthur 模型，这是本文讨论的核心机制。通过推导平衡条件，你将更深入地理解捕食者和猎物种群如何共存，以及哪些因素决定了它们的稳定密度。这项实践对于掌握描述多物种相互作用的动态系统至关重要。", "problem": "考虑一个在同质生境中捕食两种可替代猎物的捕食者。设 $N_{1}$ 和 $N_{2}$ 表示两种猎物的密度， $P$ 表示捕食者的密度。在没有捕食的情况下，每种猎物都以其内禀增长率 $r_{i}$ 和环境承载量 $K_{i}$（其中 $i \\in \\{1,2\\}$）进行逻辑斯谛增长。捕食者以攻击率 $a_{i}$ 和处理时间 $h_{i}$ 捕食猎物 $i$，以效率 $e_{i}$ 将消耗的猎物 $i$ 转化为捕食者后代，并具有人均死亡率 $d$。捕食者表现出猎物转换行为，这由以下多猎物 $m$ 型功能反应所描述\n$$\nf_{i}(N_{1},N_{2}) \\;=\\; \\frac{a_{i} N_{i}^{m}}{1+\\sum_{j=1}^{2} a_{j} h_{j} N_{j}^{m}},\n$$\n其中 $m \\geq 1$ 是转换（希尔）指数。假设所有参数均为正数，且系统是封闭的，没有迁入或迁出。\n\n- 使用上述对猎物 $i$ 的人均消耗量的功能反应，写出相应的包含两种猎物和一种捕食者的 Rosenzweig–MacArthur 捕食者-猎物系统。\n- 在对称参数化 $r_{1}=r_{2}=r$, $K_{1}=K_{2}=K$, $a_{1}=a_{2}=a$, $h_{1}=h_{2}=h$ 及 $e_{1}=e_{2}=e$ 的情况下，从第一性原理推导存在内部平衡点 $N_{1}^{\\ast}=N_{2}^{\\ast}=N^{\\ast}>0$ 和 $P^{\\ast}>0$ 的条件。您的条件必须以参数间的明确不等式给出，并且必须包含一个用 $a$, $h$, $e$, $d$ 和 $m$ 表示的 $N^{\\ast}$ 的显式闭式表达式。\n- 在相同的对称设置下，用 $r$, $K$, $a$, $h$, $e$, $d$ 和 $m$ 的闭式表达式表示 $P^{\\ast}$，然后计算当 $r = 0.8$, $K = 150$ 个体/公顷, $a = 0.02$, $h = 1.5$, $e = 0.1$, $d = 0.05$ 和 $m = 2$ 时的 $P^{\\ast}$ 数值。最终的捕食者密度 $P^{\\ast}$ 以 个体/公顷 为单位表示，并将您的答案保留4位有效数字。", "solution": "Rosenzweig–MacArthur 框架建立在两个基本生态学组成部分之上：(i) 在没有捕食的情况下猎物的逻辑斯谛增长，由 $r_{i} N_{i} \\left(1 - N_{i}/K_{i}\\right)$ 表示；以及 (ii) 捕食者的增长，即猎物消耗带来的增长减去死亡率，由 $P \\left(\\sum_{i} e_{i} f_{i}(N_{1},N_{2}) - d\\right)$ 表示，其中 $f_{i}$ 是对猎物 $i$ 的人均捕食率。猎物 $i$ 的捕食损失等于 $f_{i}(N_{1},N_{2}) P$。\n\n因此，使用多猎物转换功能反应的两种猎物、一种捕食者的 Rosenzweig–MacArthur 系统是\n$$\n\\frac{dN_{i}}{dt} \\;=\\; r_{i} N_{i} \\left(1 - \\frac{N_{i}}{K_{i}}\\right) \\;-\\; f_{i}(N_{1},N_{2})\\, P, \\quad i \\in \\{1,2\\},\n$$\n$$\n\\frac{dP}{dt} \\;=\\; P \\left( \\sum_{i=1}^{2} e_{i}\\, f_{i}(N_{1},N_{2}) \\;-\\; d \\right),\n$$\n其中\n$$\nf_{i}(N_{1},N_{2}) \\;=\\; \\frac{a_{i} N_{i}^{m}}{1+\\sum_{j=1}^{2} a_{j} h_{j} N_{j}^{m}}, \\quad m \\geq 1.\n$$\n\n在对称参数化 $r_{1}=r_{2}=r$, $K_{1}=K_{2}=K$, $a_{1}=a_{2}=a$, $h_{1}=h_{2}=h$ 及 $e_{1}=e_{2}=e$ 的情况下，我们寻找一个满足 $N_{1}^{\\ast}=N_{2}^{\\ast}=N^{\\ast}>0$ 和 $P^{\\ast}>0$ 的内部平衡点。根据对称性，在这样的平衡点上，$f_{1}=f_{2}$ 且 $N_{1}=N_{2}=N$。将 $N_{1}=N_{2}=N$ 代入功能反应，得到\n$$\nf_{1}(N,N) \\;=\\; f_{2}(N,N) \\;=\\; \\frac{a N^{m}}{1 + a h N^{m} + a h N^{m}} \\;=\\; \\frac{a N^{m}}{1 + 2 a h N^{m}}.\n$$\n在内部平衡点，捕食者方程要求\n$$\n0 \\;=\\; P^{\\ast} \\left( e f_{1}(N^{\\ast},N^{\\ast}) + e f_{2}(N^{\\ast},N^{\\ast}) - d \\right) \\;\\;\\Rightarrow\\;\\; e \\left(f_{1}+f_{2}\\right) \\;=\\; d.\n$$\n因为根据对称性 $f_{1}=f_{2}$，我们得到\n$$\n2 e\\, f_{1}(N^{\\ast},N^{\\ast}) \\;=\\; d \\;\\;\\Rightarrow\\;\\; f_{1}(N^{\\ast},N^{\\ast}) \\;=\\; \\frac{d}{2 e}.\n$$\n将此结果与 $f_{1}$ 的显式形式相等，得到关于 $N^{\\ast}$ 的标量方程：\n$$\n\\frac{a \\left(N^{\\ast}\\right)^{m}}{1 + 2 a h \\left(N^{\\ast}\\right)^{m}} \\;=\\; \\frac{d}{2 e}.\n$$\n交叉相乘并求解 $\\left(N^{\\ast}\\right)^{m}$，\n$$\na \\left(N^{\\ast}\\right)^{m} \\;=\\; \\frac{d}{2 e} \\left( 1 + 2 a h \\left(N^{\\ast}\\right)^{m} \\right)\n\\;\\;\\Rightarrow\\;\\;\na \\left(N^{\\ast}\\right)^{m} \\;-\\; \\frac{d a h}{e} \\left(N^{\\ast}\\right)^{m} \\;=\\; \\frac{d}{2 e},\n$$\n$$\na \\left(1 - \\frac{d h}{e}\\right) \\left(N^{\\ast}\\right)^{m} \\;=\\; \\frac{d}{2 e}\n\\;\\;\\Rightarrow\\;\\;\n\\left(N^{\\ast}\\right)^{m} \\;=\\; \\frac{d}{2 a \\left(e - d h\\right)}.\n$$\n因此，$N^{\\ast}$ 的显式闭式表达式为\n$$\nN^{\\ast} \\;=\\; \\left( \\frac{d}{2 a \\left(e - d h\\right)} \\right)^{\\frac{1}{m}}.\n$$\n为保证正性，要求 $e - d h > 0$，从而使右侧为正且有限。这就得出了内部平衡点的第一个充要不等式条件：\n$$\ne \\;>\\; d h.\n$$\n在平衡状态下，对于每个 $i$，猎物方程要求\n$$\n0 \\;=\\; r N^{\\ast} \\left(1 - \\frac{N^{\\ast}}{K}\\right) \\;-\\; f_{i}(N^{\\ast},N^{\\ast})\\, P^{\\ast}.\n$$\n由于根据上述结果 $f_{i}(N^{\\ast},N^{\\ast}) = d/(2 e)$，我们求解 $P^{\\ast}$：\n$$\nP^{\\ast} \\;=\\; \\frac{r N^{\\ast} \\left(1 - \\frac{N^{\\ast}}{K}\\right)}{f_{i}(N^{\\ast},N^{\\ast})}\n\\;=\\;\n\\frac{r N^{\\ast} \\left(1 - \\frac{N^{\\ast}}{K}\\right)}{d/(2 e)}\n\\;=\\;\n\\frac{2 e r}{d}\\, N^{\\ast} \\left(1 - \\frac{N^{\\ast}}{K}\\right).\n$$\n为使 $P^{\\ast}>0$，我们要求 $0 < N^{\\ast} < K$，这给出了第二个存在性条件：\n$$\n\\left( \\frac{d}{2 a \\left(e - d h\\right)} \\right)^{\\frac{1}{m}} \\;<\\; K.\n$$\n总结来说，在对称条件下，内部平衡点 $N_{1}^{\\ast}=N_{2}^{\\ast}=N^{\\ast}>0$ 和 $P^{\\ast}>0$ 存在当且仅当\n$$\ne \\;>\\; d h\n\\quad\\text{且}\\quad\n\\left( \\frac{d}{2 a \\left(e - d h\\right)} \\right)^{\\frac{1}{m}} \\;<\\; K,\n$$\n其中\n$$\nN^{\\ast} \\;=\\; \\left( \\frac{d}{2 a \\left(e - d h\\right)} \\right)^{\\frac{1}{m}},\n\\qquad\nP^{\\ast} \\;=\\; \\frac{2 e r}{d}\\, N^{\\ast} \\left(1 - \\frac{N^{\\ast}}{K}\\right).\n$$\n\n我们现在对 $r = 0.8$, $K = 150$, $a = 0.02$, $h = 1.5$, $e = 0.1$, $d = 0.05$ 和 $m = 2$ 的情况进行 $P^{\\ast}$ 的数值计算。\n\n首先，检查 $e - d h$：\n$$\ne - d h \\;=\\; 0.1 \\;-\\; 0.05 \\cdot 1.5 \\;=\\; 0.1 \\;-\\; 0.075 \\;=\\; 0.025 \\;>\\; 0,\n$$\n所以第一个条件成立。接下来计算 $\\left(N^{\\ast}\\right)^{m}$：\n$$\n\\left(N^{\\ast}\\right)^{2} \\;=\\; \\frac{d}{2 a \\left(e - d h\\right)} \\;=\\; \\frac{0.05}{2 \\cdot 0.02 \\cdot 0.025} \\;=\\; \\frac{0.05}{0.001} \\;=\\; 50,\n$$\n因此\n$$\nN^{\\ast} \\;=\\; \\sqrt{50} \\;=\\; 5 \\sqrt{2} \\;\\approx\\; 7.071067811865.\n$$\n验证第二个条件 $N^{\\ast} < K$：\n$$\n7.071067811865 \\;<\\; 150,\n$$\n该条件成立。现在计算 $P^{\\ast}$：\n$$\nP^{\\ast} \\;=\\; \\frac{2 e r}{d}\\, N^{\\ast} \\left(1 - \\frac{N^{\\ast}}{K}\\right)\n\\;=\\;\n\\frac{2 \\cdot 0.1 \\cdot 0.8}{0.05} \\cdot \\sqrt{50} \\left(1 - \\frac{\\sqrt{50}}{150}\\right).\n$$\n计算前置因子和乘积：\n$$\n\\frac{2 \\cdot 0.1 \\cdot 0.8}{0.05} \\;=\\; \\frac{0.16}{0.05} \\;=\\; 3.2,\n$$\n因此\n$$\nP^{\\ast} \\;=\\; 3.2 \\left(\\sqrt{50} - \\frac{50}{150}\\right) \\;=\\; 3.2 \\left(\\sqrt{50} - \\frac{1}{3}\\right).\n$$\n使用 $\\sqrt{50} \\approx 7.071067811865$，\n$$\nP^{\\ast} \\;\\approx\\; 3.2 \\times \\left(7.071067811865 - 0.333333333333\\right)\n\\;=\\; 3.2 \\times 6.737734478532\n\\;\\approx\\; 21.5607503313.\n$$\n保留4位有效数字，平衡捕食者密度为\n$$\nP^{\\ast} \\;\\approx\\; 21.56\n$$\n个体/公顷。", "answer": "$$\\boxed{21.56}$$", "id": "2525208"}, {"introduction": "在相互作用种群概念的基础上，本练习旨在探讨食物网中的间接效应。你将使用群落矩阵——一种分析系统稳定性的强大工具——来计算环境变化对一个未受直接影响的猎物物种的冲击。这个练习生动地展示了表观竞争可能导致的非直观结果，并强化了你对生态系统连锁反应的理解。[@problem_id:2525276]", "problem": "一个捕食者-双猎物系统表现出捕食者介导的表观竞争和猎物转换，这反映在共存平衡点处的局部群落矩阵中。考虑三个状态变量，依次为猎物1的密度$N_1$、猎物2的密度$N_2$和捕食者的密度$P$，所有密度单位为个体/公顷，时间单位为月。在一个可行平衡点附近，群落矩阵（即矢量场关于状态变量的雅可比矩阵）为\n$$\n\\mathbf{A} \\;=\\;\n\\begin{pmatrix}\n-0.5 & 0 & -0.3 \\\\\n0 & -0.4 & -0.2 \\\\\n0.25 & 0.15 & -0.6\n\\end{pmatrix},\n$$\n其中，对角线上的负值项表示各种群的自我调节，负值项$a_{13}$和$a_{23}$表示捕食者抑制了猎物密度，正值项$a_{31}$和$a_{32}$表示猎物支持了捕食者的增长。在此平衡点，猎物1-捕食者关联项的绝对值大于猎物2-捕食者关联项，这表明捕食者对猎物1存在偏好（猎物转换）。\n\n假设猎物1经历逻辑斯谛增长，其内禀增长率为$r_1$，环境容纳量为$K_1$，因此其密度动态包含$r_1 N_1(1 - N_1/K_1)$这一项。在所关注的平衡点处，参数值为$r_1 = 0.8$ 月$^{-1}$，$K_1^{\\ast} = 200$ 个体/公顷，以及$N_1^{\\ast} = 120$ 个体/公顷。一个持续的环境压力使猎物1的环境容纳量增加了$K_1^{\\ast}$的$0.10$。\n\n使用平衡点附近的线性压力扰动框架和群落矩阵的定义，计算由于$K_1$增加了$\\Delta K_1 = 0.10 K_1^{\\ast}$而导致的猎物2平衡密度的变化量$\\Delta N_2$。给出$\\Delta N_2$的最终数值答案，保留四位有效数字。最终的变化量以个体/公顷为单位表示。此外，在你的解答中，用生态学术语简要解释结果的符号的意义。", "solution": "该问题要求计算因对猎物1的环境容纳量$K_1$施加持续的压力扰动而导致的猎物2平衡密度的变化量，记为$\\Delta N_2$。此分析的框架是动力系统中的压力扰动线性理论。\n\n首先，我们验证问题陈述的有效性。\n给定的状态变量是猎物1的密度$N_1$、猎物2的密度$N_2$和捕食者的密度$P$。\n在指定的共存平衡点$(\\mathbf{N}^{\\ast})$处的群落矩阵由下式给出：\n$$\n\\mathbf{A} \\;=\\;\n\\begin{pmatrix}\n-0.5 & 0 & -0.3 \\\\\n0 & -0.4 & -0.2 \\\\\n0.25 & 0.15 & -0.6\n\\end{pmatrix}\n$$\n猎物1的动态包含一个逻辑斯谛增长项$r_1 N_1(1 - N_1/K_1)$。\n在平衡点处，相关参数为$r_1 = 0.8$ 月$^{-1}$，初始环境容纳量$K_1^{\\ast} = 200$ 个体/公顷，以及猎物1的平衡密度$N_1^{\\ast} = 120$ 个体/公顷。\n扰动是$K_1$增加$\\Delta K_1 = 0.10 K_1^{\\ast}$。\n该问题在生态学理论上具有科学依据，提法明确，信息充分且一致，并且表述客观。因此，该问题是有效的，我们可以继续解答。\n\n设微分方程组为$\\frac{d\\mathbf{N}}{dt} = \\mathbf{f}(\\mathbf{N}, K_1)$，其中$\\mathbf{N} = (N_1, N_2, P)^T$。在平衡点处，$\\mathbf{f}(\\mathbf{N}^{\\ast}, K_1^{\\ast}) = \\mathbf{0}$。一个小的持续扰动$\\Delta K_1$导致一个新的平衡点$\\mathbf{N}^{\\ast} + \\Delta \\mathbf{N}$，使得$\\mathbf{f}(\\mathbf{N}^{\\ast} + \\Delta \\mathbf{N}, K_1^{\\ast} + \\Delta K_1) = \\mathbf{0}$。将此表达式线性化得到：\n$$\n\\mathbf{A} \\Delta \\mathbf{N} + \\frac{\\partial \\mathbf{f}}{\\partial K_1} \\bigg|_{\\mathbf{N}^{\\ast}, K_1^{\\ast}} \\Delta K_1 \\approx \\mathbf{0}\n$$\n其中$\\mathbf{A}$是群落矩阵。整理后，我们得到需求解平衡密度变化量$\\Delta \\mathbf{N} = (\\Delta N_1, \\Delta N_2, \\Delta P)^T$的方程组：\n$$\n\\mathbf{A} \\Delta \\mathbf{N} = -\\mathbf{b}\n$$\n其中$\\mathbf{b}$是直接扰动效应向量，由$\\mathbf{b} = \\frac{\\partial \\mathbf{f}}{\\partial K_1} \\Delta K_1$给出。\n\n首先，我们计算向量$\\mathbf{b}$的分量。\n扰动为$\\Delta K_1 = 0.10 \\times K_1^{\\ast} = 0.10 \\times 200 = 20$。\n系统动态为$\\frac{dN_1}{dt} = f_1$、$\\frac{dN_2}{dt} = f_2$和$\\frac{dP}{dt} = f_3$。根据问题描述，只有猎物1的方程$f_1$是$K_1$的显式函数。项$r_1 N_1 (1 - N_1/K_1)$是$f_1$的一部分。因此，矢量场对$K_1$的偏导数为：\n$$\n\\frac{\\partial \\mathbf{f}}{\\partial K_1} = \\begin{pmatrix} \\frac{\\partial f_1}{\\partial K_1} \\\\ \\frac{\\partial f_2}{\\partial K_1} \\\\ \\frac{\\partial f_3}{\\partial K_1} \\end{pmatrix} = \\begin{pmatrix} \\frac{\\partial}{\\partial K_1} \\left( r_1 N_1 - \\frac{r_1 N_1^2}{K_1} \\right) \\\\ 0 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} \\frac{r_1 N_1^2}{K_1^2} \\\\ 0 \\\\ 0 \\end{pmatrix}\n$$\n我们在平衡点值$r_1 = 0.8$、$N_1^{\\ast} = 120$和$K_1^{\\ast} = 200$处计算非零分量：\n$$\n\\frac{\\partial f_1}{\\partial K_1}\\bigg|_{\\ast} = \\frac{(0.8)(120)^2}{(200)^2} = \\frac{0.8 \\times 14400}{40000} = 0.8 \\times 0.36 = 0.288\n$$\n那么，直接效应向量为：\n$$\n\\mathbf{b} = \\begin{pmatrix} 0.288 \\\\ 0 \\\\ 0 \\end{pmatrix} \\times 20 = \\begin{pmatrix} 5.76 \\\\ 0 \\\\ 0 \\end{pmatrix}\n$$\n现在我们构建线性系统$\\mathbf{A} \\Delta \\mathbf{N} = -\\mathbf{b}$：\n$$\n\\begin{pmatrix}\n-0.5 & 0 & -0.3 \\\\\n0 & -0.4 & -0.2 \\\\\n0.25 & 0.15 & -0.6\n\\end{pmatrix}\n\\begin{pmatrix}\n\\Delta N_1 \\\\ \\Delta N_2 \\\\ \\Delta P\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n-5.76 \\\\\n0 \\\\\n0\n\\end{pmatrix}\n$$\n这对应于一个三元线性方程组：\n1. $-0.5 \\Delta N_1 - 0.3 \\Delta P = -5.76$\n2. $-0.4 \\Delta N_2 - 0.2 \\Delta P = 0$\n3. $0.25 \\Delta N_1 + 0.15 \\Delta N_2 - 0.6 \\Delta P = 0$\n\n从方程(2)中，我们可以用$\\Delta N_2$表示$\\Delta P$：\n$$\n-0.4 \\Delta N_2 = 0.2 \\Delta P \\implies \\Delta P = -2 \\Delta N_2\n$$\n接下来，我们将此关系代入方程(3)，以找到$\\Delta N_1$和$\\Delta N_2$之间的联系：\n$$\n0.25 \\Delta N_1 + 0.15 \\Delta N_2 - 0.6 (-2 \\Delta N_2) = 0\n$$\n$$\n0.25 \\Delta N_1 + 0.15 \\Delta N_2 + 1.2 \\Delta N_2 = 0\n$$\n$$\n0.25 \\Delta N_1 + 1.35 \\Delta N_2 = 0 \\implies \\Delta N_1 = -\\frac{1.35}{0.25} \\Delta N_2 = -5.4 \\Delta N_2\n$$\n最后，我们将$\\Delta N_1$和$\\Delta P$的表达式都代入方程(1)，以求解$\\Delta N_2$：\n$$\n-0.5 (-5.4 \\Delta N_2) - 0.3 (-2 \\Delta N_2) = -5.76\n$$\n$$\n2.7 \\Delta N_2 + 0.6 \\Delta N_2 = -5.76\n$$\n$$\n3.3 \\Delta N_2 = -5.76\n$$\n$$\n\\Delta N_2 = \\frac{-5.76}{3.3} = -\\frac{19.2}{11} \\approx -1.74545...\n$$\n问题要求数值答案保留四位有效数字。\n$$\n\\Delta N_2 \\approx -1.745\n$$\n猎物2的平衡密度最终变化量为-1.745个体/公顷。\n\n$\\Delta N_2$的负号表示增加猎物1的环境容纳量会导致猎物2的平衡丰度下降。这是捕食者介导的表观竞争的一个经典例证。猎物1的资源增加（即$K_1$更高）导致猎物1种群数量增加，这反过来又支持了更大规模的捕食者种群。更大规模的捕食者种群随后对猎物2施加了更大的捕食压力，导致其种群数量下降。这两种猎物实际上是通过其共同的捕食者作为媒介进行“竞争”。", "answer": "$$\n\\boxed{-1.745}\n$$", "id": "2525276"}, {"introduction": "理论模型固然强大，但必须通过真实世界的观察进行验证。本练习将重点转向数据分析，要求你将不同的功能反应模型（II 型与 III 型）拟合到给定的实验数据中。通过使用关键的统计工具——赤池信息准则（Akaike Information Criterion, AIC），你将学习如何正式比较竞争性假说，并判断数据是否支持猎物转换的存在。[@problem_id:2525211]", "problem": "捕食者在独立的捕食实验中捕食两种类型的猎物。假设单个捕食者在搜索和处理猎物时遵循经典的时间-预算约束，实验期间猎物没有被耗尽，且捕食者与猎物的相遇在不同实验间是随机且独立的。每次实验的觅食时间已知且固定，捕食者的数量也已知且固定。对每种猎物类型的单位捕食者捕食率由一个功能性反应（functional response）决定。你将比较体现了猎物转换（prey switching）和表观竞争（apparent competition）的两种功能性反应假说，并使用赤池信息准则（Akaike Information Criterion, AIC）来评估模型的支持度。\n\n需要使用的基本原理和假设：\n- 时间-预算论证：捕食者单位时间内的预算被划分为搜索和处理。搜索时间比例、每次相遇的处理时间以及相遇过程共同决定了实际的单位捕食者消耗率。\n- 源于具有密度依赖性相遇的时间-预算平衡的Holling风格多猎物功能性反应。对于II型，相遇率与猎物密度成线性关系。对于III型，相遇率与猎物密度成非线性关系，这种方式能够体现向丰富猎物转换的特性。\n- 观测模型：以潜在的期望消耗数量为条件，实际观测到的计数是从泊松分布中抽取的独立样本。\n- 似然原理和最大似然估计：通过最大化所有实验的联合似然函数来估计参数。\n- 通过赤池信息准则进行模型选择：对于每个模型，计算 AIC = $2k - 2\\log \\hat{L}$，其中 $k$ 是自由参数的数量，$\\log \\hat{L}$ 是最大化的对数似然值。\n\n任务：\n1) 严格从时间-预算平衡出发，推导在以下两种假说下，一个双猎物系统中的单位捕食者消耗率。\n   - II型（无转换）：与猎物 $i$ 的相遇与 $N_i$ 成比例。\n   - III型（有转换）：与猎物 $i$ 的相遇与 $N_i^m$ ($m>1$)成比例；对于此任务，取固定整数 $m=2$。\n   为每种猎物设定独立的参数：攻击系数 $a_1, a_2$ 和处理时间 $h_1, h_2$，所有参数均为严格正数。推导过程必须与“搜索时间会随着在两种猎物上累积处理时间的增加而减少”这一时间-预算恒等式保持一致。根据这些条件，得出将用于似然函数的函数形式。\n\n2) 观测模型与似然函数：在由 $r$ 索引的各次实验中，已知猎物密度 $(N_{1,r},N_{2,r})$、实验持续时间 $T_r$ 和捕食者数量 $P_r$，观测到的消耗计数 $(C_{1,r},C_{2,r})$ 被建模为条件独立的泊松随机变量，其均值为 $\\lambda_{i,r} = P_r T_r f_i(N_{1,r},N_{2,r})$，其中 $f_i$ 是在任务1中推导出的单位捕食者捕食率。联合对数似然函数为：\n$$\n\\log L = \\sum_{r} \\sum_{i \\in \\{1,2\\}} \\left( C_{i,r} \\log \\lambda_{i,r} - \\lambda_{i,r} - \\log(C_{i,r}!) \\right).\n$$\n对于每个模型（II型，$m=1$；III型，$m=2$），在约束条件 $a_i>0$ 和 $h_i>0$ 下，通过最大似然法估计参数 $(a_1,a_2,h_1,h_2)$。两个模型均使用相同的观测模型和相同的参数数量 $k=4$。\n\n3) 模型比较：对于下面测试套件中的每个数据集，计算II型（$m=1$）和III型（$m=2$）的最大化对数似然值，并在两种情况下都使用 $k=4$ 来计算它们的AIC值，然后判断哪个模型得到了更好的支持（即AIC值严格更小）。\n\n程序要求：\n- 实现一个求解器，该求解器在正值约束下通过最大似然法拟合两个模型，并为每个模型计算AIC值。使用数值稳定的泊松对数似然实现（例如，通过gamma函数处理阶乘）。\n- 你的程序必须生成单行输出，其中包含一个方括号内的逗号分隔列表，表示对每个数据集的决策。对于每个数据集，如果III型的AIC值严格小于II型，则输出整数 $1$，否则输出 $0$。例如，针对三个数据集的输出应如 `[0,1,0]` 所示。\n- 不提供用户输入；请在代码中硬编码以下测试套件。\n\n测试套件：\n每个数据集包含一系列独立的实验。每次实验指定了猎物密度 $(N_1,N_2)$、实验持续时间 $T$、捕食者数量 $P$ 和观测到的消耗计数 $(C_1,C_2)$。除 $T$ 为正实数外，所有数字均为非负整数。时间单位是任意但一致的（在所有实验中，$T$ 均为 $1.0$），输出中无须包含物理单位。\n\n- 数据集 A（平衡密度和单猎物缺失的边界情况）：\n  - 实验 1: $(N_1,N_2,P,T,C_1,C_2)=(50,50,8,1.0,6,3)$\n  - 实验 2: $(N_1,N_2,P,T,C_1,C_2)=(100,100,8,1.0,7,4)$\n  - 实验 3: $(N_1,N_2,P,T,C_1,C_2)=(0,120,8,1.0,0,7)$\n  - 实验 4: $(N_1,N_2,P,T,C_1,C_2)=(200,20,8,1.0,12,1)$\n  - 实验 5: $(N_1,N_2,P,T,C_1,C_2)=(20,200,8,1.0,1,8)$\n\n- 数据集 B（强调转换和似然竞争的频率对比）：\n  - 实验 1: $(N_1,N_2,P,T,C_1,C_2)=(40,40,6,1.0,11,3)$\n  - 实验 2: $(N_1,N_2,P,T,C_1,C_2)=(20,80,6,1.0,2,8)$\n  - 实验 3: $(N_1,N_2,P,T,C_1,C_2)=(80,20,6,1.0,15,0)$\n  - 实验 4: $(N_1,N_2,P,T,C_1,C_2)=(0,100,6,1.0,0,10)$\n  - 实验 5: $(N_1,N_2,P,T,C_1,C_2)=(100,0,6,1.0,15,0)$\n\n- 数据集 C（对称猎物、混合密度和单猎物缺失的边界情况）：\n  - 实验 1: $(N_1,N_2,P,T,C_1,C_2)=(30,30,10,1.0,6,6)$\n  - 实验 2: $(N_1,N_2,P,T,C_1,C_2)=(60,60,10,1.0,8,8)$\n  - 实验 3: $(N_1,N_2,P,T,C_1,C_2)=(60,0,10,1.0,12,0)$\n  - 实验 4: $(N_1,N_2,P,T,C_1,C_2)=(0,60,10,1.0,0,12)$\n  - 实验 5: $(N_1,N_2,P,T,C_1,C_2)=(15,120,10,1.0,2,15)$\n\n最终输出格式：\n你的程序应生成单行输出，其中包含一个方括号内的逗号分隔列表，顺序为 [数据集 A 决策, 数据集 B 决策, 数据集 C 决策]。对于每个数据集，如果III型的AIC严格小于II型，则打印整数1，否则打印0。例如：[0,1,0]。", "solution": "所陈述的问题在科学上是合理的、定义明确的，并包含了完整解决方案所需的所有信息。它提出了量化生态学中的一个标准任务：使用经验数据和统计原理推导和比较数学模型。因此，我将开始提供解决方案。\n\n解决方案分为两部分。第一部分，从基本原理出发推导功能性反应模型。第二部分，描述用于参数估计和模型选择的统计方法，这构成了计算解决方案的基础。\n\n### 第一部分：功能性反应模型的推导\n\n推导始于单个捕食者在两种猎物类型（由索引 $i \\in \\{1, 2\\}$ 指定）上觅食的时间-预算论证。捕食者的总可用时间 $T_{total}$ 被划分为搜索时间 $T_s$ 和处理时间 $T_h$。\n\n$$\nT_{total} = T_s + T_h\n$$\n\n总处理时间 $T_h$ 是处理每个捕获的猎物所花费时间的总和。如果 $C_i$ 是消耗的 $i$ 型猎物数量，而 $h_i$ 是处理每个 $i$ 型猎物的单位时间，那么：\n\n$$\nT_h = h_1 C_1 + h_2 C_2\n$$\n\n消耗的 $i$ 型猎物数量 $C_i$ 是捕食者搜索时间 $T_s$ 与成功捕获 $i$ 型猎物的速率的乘积。相遇率是猎物密度 $N_i$ 和物种特异性攻击系数 $a_i$ 的函数。我们将此相遇率表示为 $a_i g_i(N_i)$，其中 $g_i(N_i)$ 定义了相遇率如何随猎物密度变化。\n\n$$\nC_i = a_i g_i(N_i) T_s\n$$\n\n通过将 $T_h$ 的表达式代入时间-预算方程，我们得到：\n\n$$\nT_{total} = T_s + h_1 C_1 + h_2 C_2\n$$\n\n现在，将 $C_1$ 和 $C_2$ 的表达式代入此方程：\n\n$$\nT_{total} = T_s + h_1 (a_1 g_1(N_1) T_s) + h_2 (a_2 g_2(N_2) T_s)\n$$\n\n我们可以提取公因子搜索时间 $T_s$：\n\n$$\nT_{total} = T_s (1 + a_1 h_1 g_1(N_1) + a_2 h_2 g_2(N_2))\n$$\n\n解出 $T_s$：\n\n$$\nT_s = \\frac{T_{total}}{1 + a_1 h_1 g_1(N_1) + a_2 h_2 g_2(N_2)}\n$$\n\n单位捕食者对猎物 $i$ 的消耗率，即功能性反应 $f_i$，定义为单位总时间内消耗的猎物 $i$ 的数量，即 $f_i = C_i / T_{total}$。使用 $C_i$ 的表达式：\n\n$$\nf_i = \\frac{a_i g_i(N_i) T_s}{T_{total}}\n$$\n\n代入已推导出的 $T_s$ 表达式：\n\n$$\nf_i(N_1, N_2) = \\frac{a_i g_i(N_i)}{T_{total}} \\left( \\frac{T_{total}}{1 + a_1 h_1 g_1(N_1) + a_2 h_2 g_2(N_2)} \\right)\n$$\n\n这简化为双猎物功能性反应的一般形式：\n\n$$\nf_i(N_1, N_2) = \\frac{a_i g_i(N_i)}{1 + a_1 h_1 g_1(N_1) + a_2 h_2 g_2(N_2)}\n$$\n\n我们现在将此一般形式应用于两个具体的假说。\n\n**假说1：II型功能性反应（无转换）**\n对于II型反应，相遇率与猎物密度成线性关系。这对应于设置 $g_i(N_i) = N_i$。将此代入通用公式，得到双猎物Holling II型功能性反应：\n\n$$\nf_1^{II}(N_1, N_2) = \\frac{a_1 N_1}{1 + a_1 h_1 N_1 + a_2 h_2 N_2}\n$$\n$$\nf_2^{II}(N_1, N_2) = \\frac{a_2 N_2}{1 + a_1 h_1 N_1 + a_2 h_2 N_2}\n$$\n\n**假说2：III型功能性反应（有转换）**\n对于表现出猎物转换的III型反应，相遇率与猎物密度呈非线性关系。问题指定使用二次关系，这对应于设置 $g_i(N_i) = N_i^2$（即 $m=2$）。将此代入通用公式，得到：\n\n$$\nf_1^{III}(N_1, N_2) = \\frac{a_1 N_1^2}{1 + a_1 h_1 N_1^2 + a_2 h_2 N_2^2}\n$$\n$$\nf_2^{III}(N_1, N_2) = \\frac{a_2 N_2^2}{1 + a_1 h_1 N_1^2 + a_2 h_2 N_2^2}\n$$\n\n这些推导出的形式，$f_i^{II}$ 和 $f_i^{III}$，是后续统计分析中使用的单位捕食者消耗率。\n\n### 第二部分：统计估计与模型选择\n\n问题要求将两个模型拟合到实验数据并比较它们的性能。这是通过最大似然估计（MLE）和赤池信息准则（AIC）实现的。\n\n**观测模型与似然函数**\n在给定实验 $r$ 中消耗的猎物数量 $C_i$ 是一个随机过程。它被建模为从泊松分布中的一次独立抽取。该分布的均值 $\\lambda_{i,r}$ 是期望消耗的猎物数量，由下式给出：\n\n$$\n\\lambda_{i,r} = P_r T_r f_i(N_{1,r}, N_{2,r})\n$$\n\n其中 $P_r$ 是捕食者数量，$T_r$ 是实验 $r$ 的持续时间。函数 $f_i$ 根据所测试的模型为 $f_i^{II}$ 或 $f_i^{III}$。需要估计的参数是 $\\theta = (a_1, a_2, h_1, h_2)$。\n\n在给定均值 $\\lambda_{i,r}$ 的条件下，观测到计数 $C_{i,r}$ 的对数似然为：\n\n$$\n\\log \\mathcal{L}_{i,r}(\\theta | C_{i,r}) = C_{i,r} \\log(\\lambda_{i,r}) - \\lambda_{i,r} - \\log(C_{i,r}!)\n$$\n\n假设各次实验之间以及同一次实验中不同猎物类型之间是独立的，数据集的总对数似然是所有实验 $r$ 和两种猎物类型 $i \\in \\{1,2\\}$ 的对数似然之和：\n\n$$\n\\log \\mathcal{L}(\\theta) = \\sum_{r} \\sum_{i=1}^{2} \\left( C_{i,r} \\log(\\lambda_{i,r}) - \\lambda_{i,r} - \\log(C_{i,r}!) \\right)\n$$\n\n**最大似然估计（MLE）**\n每个模型的参数 $\\theta = (a_1, a_2, h_1, h_2)$ 通过找到在约束条件 $a_i > 0$ 和 $h_i > 0$ 下使总对数似然 $\\log \\mathcal{L}(\\theta)$ 最大化的值来估计。这是一个数值优化问题。在实践中，我们最小化负对数似然 $-\\log \\mathcal{L}(\\theta)$。得到的最大化对数似然值表示为 $\\log \\hat{\\mathcal{L}}$。一个稳健的优化过程包括使用有界数值优化器（例如，L-BFGS-B）和可能使用多个起始点以避免局部最小值。\n\n**使用AIC进行模型比较**\n赤池信息准则（AIC）通过平衡拟合优度（由 $\\log \\hat{\\mathcal{L}}$ 表示）与模型复杂性（自由参数的数量 $k$），提供了一种比较两个模型的方法。AIC的公式为：\n\n$$\n\\text{AIC} = 2k - 2 \\log \\hat{\\mathcal{L}}\n$$\n\n对于II型和III型模型，估计的参数数量均为 $k=4$ ($a_1, a_2, h_1, h_2$)。AIC值严格更小的模型被认为得到了数据更好的支持。程序将为每个数据集计算 $\\text{AIC}_{II}$ 和 $\\text{AIC}_{III}$，并判断是否 $\\text{AIC}_{III} < \\text{AIC}_{II}$。\n\n以下程序实现了这整个过程。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import minimize\nfrom scipy.special import gammaln\n\ndef solve():\n    \"\"\"\n    Main solver function that processes all datasets and prints the final result.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = {\n        'A': [\n            # (N1, N2, P, T, C1, C2)\n            (50, 50, 8, 1.0, 6, 3),\n            (100, 100, 8, 1.0, 7, 4),\n            (0, 120, 8, 1.0, 0, 7),\n            (200, 20, 8, 1.0, 12, 1),\n            (20, 200, 8, 1.0, 1, 8),\n        ],\n        'B': [\n            (40, 40, 6, 1.0, 11, 3),\n            (20, 80, 6, 1.0, 2, 8),\n            (80, 20, 6, 1.0, 15, 0),\n            (0, 100, 6, 1.0, 0, 10),\n            (100, 0, 6, 1.0, 15, 0),\n        ],\n        'C': [\n            (30, 30, 10, 1.0, 6, 6),\n            (60, 60, 10, 1.0, 8, 8),\n            (60, 0, 10, 1.0, 12, 0),\n            (0, 60, 10, 1.0, 0, 12),\n            (15, 120, 10, 1.0, 2, 15),\n        ]\n    }\n\n    results = []\n    # Process datasets in specified order A, B, C\n    for key in ['A', 'B', 'C']:\n        dataset = test_cases[key]\n        decision = solve_for_dataset(dataset)\n        results.append(decision)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef functional_response(params, N1, N2, model_type):\n    \"\"\"\n    Calculates the per-capita consumption rates for both prey types.\n    \"\"\"\n    a1, a2, h1, h2 = params\n    \n    if model_type == 'type_II':\n        g1, g2 = N1, N2\n    elif model_type == 'type_III':\n        g1, g2 = N1**2, N2**2\n    else:\n        raise ValueError(\"Unknown model type\")\n\n    denominator = 1.0 + a1 * h1 * g1 + a2 * h2 * g2\n    \n    # Denominator is guaranteed to be >= 1 due to positivity constraints on parameters.\n    f1 = (a1 * g1) / denominator\n    f2 = (a2 * g2) / denominator\n    \n    return f1, f2\n\ndef neg_log_likelihood(params, data, model_type):\n    \"\"\"\n    Calculates the negative log-likelihood for the Poisson observation model.\n    \"\"\"\n    N1, N2, P, T, C1, C2 = data.T\n    \n    f1, f2 = functional_response(params, N1, N2, model_type)\n    \n    lambda1 = P * T * f1\n    lambda2 = P * T * f2\n    \n    # Use a small epsilon for numerical stability to avoid log(0).\n    # This correctly handles cases where C=0 and lambda approaches 0.\n    eps = 1e-12 \n    \n    # Calculate Poisson log-likelihood for each prey type across all trials\n    logL1 = C1 * np.log(lambda1 + eps) - lambda1 - gammaln(C1 + 1)\n    logL2 = C2 * np.log(lambda2 + eps) - lambda2 - gammaln(C2 + 1)\n    \n    # Sum over all trials and both prey types\n    total_logL = np.sum(logL1) + np.sum(logL2)\n\n    # If the calculation results in a non-finite number, return infinity\n    # to guide the optimizer away from invalid parameter regions.\n    if not np.isfinite(total_logL):\n        return np.inf\n\n    return -total_logL\n\ndef fit_model(data, model_type):\n    \"\"\"\n    Fits a model by minimizing the negative log-likelihood to find the best parameters.\n    Uses multiple random starting points for robustness against local minima.\n    \"\"\"\n    best_neg_log_L = np.inf\n\n    # For reproducibility of random starting points\n    np.random.seed(42)\n    num_starts = 10 \n    \n    bounds = [(1e-9, None), (1e-9, None), (1e-9, None), (1e-9, None)]\n\n    for _ in range(num_starts):\n        # Sample initial guess from a log-uniform distribution\n        # This explores the parameter space more effectively.\n        initial_guess = np.exp(np.random.uniform(-8, 1, 4))\n        \n        res = minimize(\n            neg_log_likelihood,\n            initial_guess,\n            args=(data, model_type),\n            method='L-BFGS-B',\n            bounds=bounds,\n            options={'ftol': 1e-12, 'gtol': 1e-8}\n        )\n        \n        if res.success and res.fun < best_neg_log_L:\n            best_neg_log_L = res.fun\n    \n    # Fallback to a fixed initial guess if all random starts fail\n    if not np.isfinite(best_neg_log_L):\n        initial_guess = np.array([1e-3, 1e-3, 1e-2, 1e-2])\n        res = minimize(\n            neg_log_likelihood, initial_guess, args=(data, model_type),\n            method='L-BFGS-B', bounds=bounds, options={'ftol': 1e-12, 'gtol': 1e-8}\n        )\n        if res.success:\n            best_neg_log_L = res.fun\n\n    return best_neg_log_L\n\ndef solve_for_dataset(dataset):\n    \"\"\"\n    Performs model fitting and comparison for a single dataset.\n    \"\"\"\n    k = 4 # Number of free parameters\n    data = np.array(dataset, dtype=np.float64)\n    \n    # Fit Type II model\n    min_neg_log_L_II = fit_model(data, 'type_II')\n    if not np.isfinite(min_neg_log_L_II): return 0 # Assume Type II wins if III fails\n    AIC_II = 2 * k + 2 * min_neg_log_L_II\n    \n    # Fit Type III model\n    min_neg_log_L_III = fit_model(data, 'type_III')\n    if not np.isfinite(min_neg_log_L_III): return 0 # Assume Type II wins if III fails\n    AIC_III = 2 * k + 2 * min_neg_log_L_III\n    \n    # Decide which model is better supported (strictly lower AIC)\n    return 1 if AIC_III < AIC_II else 0\n\nsolve()\n```", "id": "2525211"}]}