{"hands_on_practices": [{"introduction": "掌握最大可持续产量 (MSY) 的第一步是理解其数学基础。本练习将引导你通过一个经典场景——对一个符合逻辑斯谛增长的种群施加一个恒定的捕捞配额 $H$——来推导 MSY 的概念。通过求解常微分方程的平衡点并分析其稳定性，你将亲手揭示一个种群在被持续捕捞时所能承受的最大极限，这个练习对于理解渔业管理中“产量-生物量”关系的基础至关重要 [@problem_id:2506172]。", "problem": "一个单一、混合均匀的鱼类种群，其生物量为 $B(t)$（单位：生物量），根据密度制约动态增长，并以恒定配额 $H \\geq 0$（单位：生物量每单位时间）进行捕捞。该种群动态在连续时间内由以下模型描述：\n$$\n\\frac{\\mathrm{d}B}{\\mathrm{d}t} \\;=\\; r\\,B\\left(1 - \\frac{B}{K}\\right) - H,\n$$\n其中 $r>0$ 是内禀人均增长率（单位：时间的倒数），$K>0$ 是环境承载力（单位：生物量）。假设生物量状态空间为 $B \\geq 0$。\n\n从一维自治微分方程和密度制约增长的基本原理出发，完成以下任务：\n\n(a) 通过求解 $\\frac{\\mathrm{d}B}{\\mathrm{d}t}=0$ 推导所有平衡生物量 $B^{\\ast}$，并确定对于给定的恒定配额 $H$，哪些平衡点是生物学上可行的（即满足 $B^{\\ast}\\geq 0$）。\n\n(b) 使用一维自治系统的线性化方法，根据方程右侧对 $B$ 的导数在 $B^{\\ast}$ 处取值的符号，对每个可行平衡点 $B^{\\ast}$ 的局部稳定性进行分类。\n\n(c) 根据您的分析，陈述存在至少一个正的、局部渐近稳定平衡点时，捕捞配额 $H$ 需满足的充分必要条件。解释当 $H$ 变化并穿过您确定的阈值时发生的质变。\n\n(d) 将上确界配额 $H_{\\mathrm{sup}}$ 定义为所有使得至少存在一个正的、局部渐近稳定平衡点的恒定配额 $H$ 的最小上界。以 $r$ 和 $K$ 的形式明确报告 $H_{\\mathrm{sup}}$。该值通常与最大可持续产量（MSY）相关，即在恒定配额捕捞下的最大可持续产量（MSY）。请用 $r$ 和 $K$ 的闭式解析表达式给出最终答案。无需四舍五入。在方框内的最终答案中不要包含单位；在您的推理过程中适当解释单位。", "solution": "对鱼类种群动态的分析始于所给出的关于生物量 $B(t)$ 的常微分方程：$\\frac{\\mathrm{d}B}{\\mathrm{d}t} = rB(1 - \\frac{B}{K}) - H$。此处，$r > 0$ 是内禀增长率，$K > 0$ 是环境承载力，$H \\geq 0$ 是恒定捕捞配额。设方程右侧为 $f(B) = rB - \\frac{r}{K}B^2 - H$。\n\n首先，我们通过求解方程 $\\frac{\\mathrm{d}B}{\\mathrm{d}t} = 0$ 来推导平衡生物量，记作 $B^{\\ast}$。该条件得出一个关于 $B^{\\ast}$ 的二次方程：\n$$\nrB^{\\ast}\\left(1 - \\frac{B^{\\ast}}{K}\\right) - H = 0\n$$\n将其整理为标准形式，我们得到：\n$$\n\\frac{r}{K}(B^{\\ast})^2 - rB^{\\ast} + H = 0\n$$\n应用二次公式求解 $B^{\\ast}$：\n$$\nB^{\\ast} = \\frac{-(-r) \\pm \\sqrt{(-r)^2 - 4\\left(\\frac{r}{K}\\right)H}}{2\\left(\\frac{r}{K}\\right)} = \\frac{r \\pm \\sqrt{r^2 - \\frac{4rH}{K}}}{\\frac{2r}{K}}\n$$\n化简表达式得到两个可能的平衡解：\n$$\nB^{\\ast} = \\frac{K}{2r} \\left( r \\pm r \\sqrt{1 - \\frac{4H}{rK}} \\right) = \\frac{K}{2} \\left( 1 \\pm \\sqrt{1 - \\frac{4H}{rK}} \\right)\n$$\n为使这些平衡点为实数值，判别式必须为非负，这对捕捞配额 $H$ 施加了一个条件：\n$$\n1 - \\frac{4H}{rK} \\geq 0 \\implies H \\leq \\frac{rK}{4}\n$$\n题目规定平衡点必须是生物学上可行的，即 $B^{\\ast} \\geq 0$。鉴于 $K > 0$ 且对于范围在 $0 \\leq H \\leq \\frac{rK}{4}$ 内的 $H$，平方根下的项在 $0$ 和 $1$ 之间。因此，$\\sqrt{1 - \\frac{4H}{rK}} \\leq 1$。\n这两个平衡点，我们记为 $B_{+}^{\\ast}$ 和 $B_{-}^{\\ast}$，分别是：\n$$\nB_{+}^{\\ast} = \\frac{K}{2} \\left( 1 + \\sqrt{1 - \\frac{4H}{rK}} \\right)\n$$\n$$\nB_{-}^{\\ast} = \\frac{K}{2} \\left( 1 - \\sqrt{1 - \\frac{4H}{rK}} \\right)\n$$\n对两个解而言，括号内的项均为非负。因此，对于所有满足 $0 \\leq H \\leq \\frac{rK}{4}$ 的 $H$，$B_{+}^{\\ast}$ 和 $B_{-}^{\\ast}$ 都是生物学上可行的（即 $B^{\\ast} \\geq 0$）。如果 $H > \\frac{rK}{4}$，则不存在实数平衡点。\n\n接下来，我们使用线性化方法分析这些平衡点的局部稳定性。平衡点 $B^{\\ast}$ 的稳定性由导数 $f'(B) = \\frac{\\mathrm{d}f}{\\mathrm{d}B}$ 在 $B^{\\ast}$ 处取值的符号决定。如果 $f'(B^{\\ast}) < 0$，平衡点是局部渐近稳定的；如果 $f'(B^{\\ast}) > 0$，平衡点是不稳定的。$f(B)$ 的导数是：\n$$\nf'(B) = \\frac{\\mathrm{d}}{\\mathrm{d}B} \\left( rB - \\frac{r}{K}B^2 - H \\right) = r - \\frac{2r}{K}B\n$$\n我们在 $0 \\leq H < \\frac{rK}{4}$ 的条件下，对每个平衡点计算该导数的值。\n对于较大的平衡点 $B_{+}^{\\ast}$：\n$$\nf'(B_{+}^{\\ast}) = r - \\frac{2r}{K} B_{+}^{\\ast} = r - \\frac{2r}{K} \\left[ \\frac{K}{2} \\left( 1 + \\sqrt{1 - \\frac{4H}{rK}} \\right) \\right] = r - r \\left( 1 + \\sqrt{1 - \\frac{4H}{rK}} \\right) = -r \\sqrt{1 - \\frac{4H}{rK}}\n$$\n由于 $r > 0$ 且当 $H < \\frac{rK}{4}$ 时平方根下的项为正，我们有 $f'(B_{+}^{\\ast}) < 0$。因此，平衡点 $B_{+}^{\\ast}$ 是局部渐近稳定的。\n\n对于较小的平衡点 $B_{-}^{\\ast}$：\n$$\nf'(B_{-}^{\\ast}) = r - \\frac{2r}{K} B_{-}^{\\ast} = r - \\frac{2r}{K} \\left[ \\frac{K}{2} \\left( 1 - \\sqrt{1 - \\frac{4H}{rK}} \\right) \\right] = r - r \\left( 1 - \\sqrt{1 - \\frac{4H}{rK}} \\right) = r \\sqrt{1 - \\frac{4H}{rK}}\n$$\n对于 $0 \\leq H < \\frac{rK}{4}$，该导数为正，即 $f'(B_{-}^{\\ast}) > 0$。因此，平衡点 $B_{-}^{\\ast}$ 是不稳定的。\n\n从此稳定性分析中，我们可以陈述存在至少一个正的、局部渐近稳定平衡点的充分必要条件。这样的平衡点 $B_{+}^{\\ast}$ 存在且稳定的充分必要条件是 $0 \\leq H < \\frac{rK}{4}$。平衡点 $B_{+}^{\\ast}$ 在存在时总是正的。当 $H=0$ 时，$B_{+}^{\\ast} = K > 0$。当 $H > 0$ 时，$B_{+}^{\\ast} > \\frac{K}{2} > 0$。因此，条件是 $0 \\leq H < \\frac{rK}{4}$。在阈值 $H_{crit} = \\frac{rK}{4}$ 处，系统动态发生关键的质变。当 $H$ 增加并趋近于该值时，稳定平衡点 $B_{+}^{\\ast}$ 和不稳定平衡点 $B_{-}^{\\ast}$ 相互靠近，并在 $H = \\frac{rK}{4}$ 时合并于 $B^{\\ast} = \\frac{K}{2}$。这一事件是鞍结分岔。对于任何捕捞配额 $H > \\frac{rK}{4}$，不存在平衡点，种群生物量 $B(t)$ 将不可避免地下降至零，因为捕捞率超过了种群可能的最大增长率。\n\n最后，我们确定上确界配额 $H_{\\mathrm{sup}}$。它被定义为所有使得至少存在一个正的、局部渐近稳定平衡点的恒定配额 $H$ 的最小上界。这类配额的集合是区间 $[0, \\frac{rK}{4})$。该集合的上确界是其上边界的值。\n$$\nH_{\\mathrm{sup}} = \\sup \\left[ 0, \\frac{rK}{4} \\right) = \\frac{rK}{4}\n$$\n这个值 $H_{\\mathrm{sup}}$ 是恒定配额捕捞策略下的最大可持续产量（MSY）。它代表了种群能够无限期维持的最大生物量提取率。该最大产量对应于将种群维持在平衡生物量 $B^{\\ast} = \\frac{K}{2}$，这是产生最高自然增长率的水平。", "answer": "$$\n\\boxed{\\frac{rK}{4}}\n$$", "id": "2506172"}, {"introduction": "在现实世界的渔业管理中，我们常常通过控制捕捞努力量（如出海天数或渔船数量）而非一个固定的捕捞量来管理种群。这种方法在数学上被建模为施加一个恒定的捕捞死亡率 $F$。本练习将让你在“恒定捕捞死亡率”这一更贴近实践的框架下，重新推导最大可持续产量，并得出关键的管理参考点——$F_{\\text{MSY}}$。这个过程将帮助你理解不同管理策略如何影响 MSY 的计算，并突显出种群内在增长率 $r$ 在确定最优捕捞强度中的核心作用 [@problem_id:2506123]。", "problem": "一个单一物种的鱼类种群，其生物量为 $B(t)$，在没有捕捞的情况下呈逻辑斯谛增长，其内禀增长率为 $r$，环境承载力为 $K$。在持续的捕捞压力下（该压力被建模为均匀施加于生物量的瞬时捕捞死亡率 $F$），生物量的动态由以下微分方程给出：\n$$\n\\frac{dB}{dt} \\;=\\; r\\,B\\left(1-\\frac{B}{K}\\right) \\;-\\; F\\,B \\, .\n$$\n假设 $r>0$，$K>0$，且仅考虑恒定的 $F \\geq 0$。对于给定的固定 $F$，可持续平衡定义为一个非零的平衡生物量 $B^{\\ast}(F)$，满足 $\\frac{dB}{dt}=0$ 且 $B^{\\ast}(F)>0$。根据广泛使用的连续死亡率约定，平衡状态下的瞬时捕捞产量定义为 $Y(F) = F\\,B^{\\ast}(F)$。最大可持续产量 (Maximum Sustainable Yield, MSY) 是在所有允许正平衡生物量的可行 $F$ 值上，$Y(F)$ 的上确界。\n\n在此连续时间捕捞死亡率框架下，推导实现最大可持续产量 的捕捞死亡率，记为 $F_{\\text{MSY}}$，并仅用 $r$ 以闭合解析表达式的形式表示最终结果。不要进行任何数值计算。您的最终答案应为单个表达式。最终表达式中不需要四舍五入，也不需要单位。", "solution": "鱼类生物量 $B(t)$ 的动态由以下方程描述：\n$$\n\\frac{dB}{dt} = rB\\left(1 - \\frac{B}{K}\\right) - FB\n$$\n当种群生物量为常数时，存在可持续平衡，因此 $\\frac{dB}{dt} = 0$。\n$$\nrB\\left(1 - \\frac{B}{K}\\right) - FB = 0\n$$\n我们可以提出生物量 $B$ 的公因子：\n$$\nB\\left[r\\left(1 - \\frac{B}{K}\\right) - F\\right] = 0\n$$\n该方程产生两个可能的平衡点：$B=0$（灭绝）和使方括号内表达式为零的 $B$ 值。问题指定了一个*非零*的平衡生物量，$B^{\\ast}(F) > 0$。因此，我们从第二个因子解出 $B$：\n$$\nr\\left(1 - \\frac{B^{\\ast}}{K}\\right) - F = 0\n$$\n我们求解 $B^{\\ast}$，它将是捕捞死亡率 $F$ 的函数：\n$$\n1 - \\frac{B^{\\ast}}{K} = \\frac{F}{r}\n$$\n$$\n\\frac{B^{\\ast}}{K} = 1 - \\frac{F}{r}\n$$\n$$\nB^{\\ast}(F) = K\\left(1 - \\frac{F}{r}\\right)\n$$\n为了使该平衡生物量为正，根据可持续平衡的定义（$B^{\\ast}(F) > 0$），我们必须有：\n$$\nK\\left(1 - \\frac{F}{r}\\right) > 0\n$$\n由于 $K > 0$，这要求 $1 - \\frac{F}{r} > 0$，意味着 $\\frac{F}{r} < 1$，即 $F < r$。考虑到约束条件 $F \\geq 0$，允许正平衡的 $F$ 的可行范围是 $0 \\leq F < r$。\n\n平衡状态下的可持续捕捞产量 $Y(F)$ 定义为 $Y(F) = F B^{\\ast}(F)$。代入 $B^{\\ast}(F)$ 的表达式：\n$$\nY(F) = F \\cdot K\\left(1 - \\frac{F}{r}\\right)\n$$\n这可以展开为：\n$$\nY(F) = K F - \\frac{K}{r} F^2\n$$\n为了找到最大可持续产量 (MSY)，我们必须找到在区间 $[0, r)$ 内使函数 $Y(F)$ 最大化的 $F$ 值。我们使用微分法。我们计算 $Y(F)$ 对 $F$ 的一阶导数，并将其设为零以找到临界点。\n$$\n\\frac{dY}{dF} = \\frac{d}{dF}\\left(K F - \\frac{K}{r} F^2\\right) = K - \\frac{K}{r}(2F) = K\\left(1 - \\frac{2F}{r}\\right)\n$$\n将导数设为零：\n$$\nK\\left(1 - \\frac{2F}{r}\\right) = 0\n$$\n由于 $K>0$，括号内的项必须为零：\n$$\n1 - \\frac{2F}{r} = 0\n$$\n$$\n1 = \\frac{2F}{r}\n$$\n求解 $F$ 得到对应于最大产量的捕捞死亡率，我们将其记为 $F_{\\text{MSY}}$：\n$$\nF_{\\text{MSY}} = \\frac{r}{2}\n$$\n为了确认这是一个最大值，我们考察 $Y(F)$ 的二阶导数：\n$$\n\\frac{d^2Y}{dF^2} = \\frac{d}{dF}\\left(K - \\frac{2KF}{r}\\right) = -\\frac{2K}{r}\n$$\n由于 $K > 0$ 且 $r > 0$，二阶导数 $\\frac{d^2Y}{dF^2}$ 严格为负。根据二阶导数判别法，这证实了 $F = \\frac{r}{2}$ 产生一个局部最大值。由于产量函数 $Y(F)$ 是一个开口向下的抛物线，这个局部最大值也是全局最大值。因为 $r>0$，所以值 $F_{\\text{MSY}} = \\frac{r}{2}$ 在可行范围 $0 \\leq F < r$ 之内。\n\n最终得到的实现最大可持续产量的捕捞死亡率仅用内禀增长率 $r$ 来表示。", "answer": "$$\n\\boxed{\\frac{r}{2}}\n$$", "id": "2506123"}, {"introduction": "理论模型为我们提供了深刻的见解，但现实世界的生态系统充满了不确定性。本练习将引领你从确定性的分析世界迈向随机性的模拟世界，这是现代资源管理的核心实践。你将通过编写计算机代码，模拟一个受环境随机波动影响的渔业种群，并比较三种不同收获控制规则（恒定配额、恒定捕捞率和恒定补充量）的长期表现。这个实践不仅能让你直观地看到理论在现实中的局限性，更能让你学会如何在产量和风险之间进行权衡，体验制定稳健管理策略的挑战与精髓 [@problem_id:2506185]。", "problem": "考虑一个具有密度依赖性增长和环境变异性的单一物种鱼类种群。令 $X_t$ 表示第 $t$ 年初的捕捞前生物量（单位：公吨）。渔业应用三种捕捞控制规则之一来根据 $X_t$ 确定捕捞量 $H_t$（单位：公吨），剩余的为逃逸量 $E_t = X_t - H_t$。随后，环境变异性作用于 $E_t$，根据一个随机的密度依赖性增长模型，产生下一年的捕捞前生物量 $X_{t+1}$。你需要实现一个模拟，比较三种捕捞规则在多种参数设置下，于环境随机性影响下的性能。\n\n基本基础：我们假设通过应用于捕捞后生物量的 Ricker 公式来实现离散时间的密度依赖性增长。具体来说，生物量动态为：\n$$\nX_{t+1} \\;=\\; E_t \\, \\exp\\!\\left( r \\left( 1 - \\frac{E_t}{K} \\right) + \\varepsilon_t \\right),\n$$\n其中 $r$ 是内禀增长率（每年），$K$ 是承载能力（公吨），而 $\\varepsilon_t$ 是环境过程噪声。假设 $\\varepsilon_t \\sim \\mathcal{N}(-\\sigma^2/2, \\sigma^2)$ 在时间 $t$ 上独立同分布，从而使得 $\\mathbb{E}\\left[\\exp(\\varepsilon_t)\\right] = 1$。\n\n待比较的三种捕捞控制规则定义如下：\n- 恒定配额（索引 $0$）：每年捕捞一个固定的配额 $q$，但不能超过现有种群量，\n$$\nH_t \\;=\\; \\min\\{q,\\, X_t\\}.\n$$\n- 恒定捕捞率（索引 $1$）：捕捞捕捞前生物量的一个恒定比例 $u$，\n$$\nH_t \\;=\\; u\\, X_t.\n$$\n- 恒定逃逸量（索引 $2$）：捕捞超过一个固定逃逸目标 $S$ 的所有部分，\n$$\nH_t \\;=\\; \\max\\{0,\\, X_t - S\\}.\n$$\n\n性能指标：对于给定的规则和参数集，模拟 $M$ 个独立的重复时间序列，每个序列长度为 $T$ 年，并从相同的初始条件 $X_0$ 开始。舍弃前 $B$ 年作为“预烧期”（burn-in）。令 $n = T - B$ 表示评估窗口的长度。在评估窗口内，计算：\n1. 长期平均渔获量（单位：公吨/年），\n$$\n\\bar{Y} \\;=\\; \\frac{1}{M\\, n} \\sum_{m=1}^{M} \\sum_{t=B}^{T-1} H_t^{(m)}.\n$$\n2. 在阈值 $x_{\\mathrm{th}}$ 下的准灭绝概率（无单位），定义为在评估窗口期间生物量曾低于 $x_{\\mathrm{th}}$ 的重复模拟所占的比例，\n$$\np_{\\mathrm{qe}} \\;=\\; \\frac{1}{M} \\sum_{m=1}^{M} \\mathbb{I}\\!\\left\\{ \\min_{t \\in \\{B,\\dots,T-1\\}} X_t^{(m)} < x_{\\mathrm{th}} \\right\\}.\n$$\n\n决策规则：给定一个风险阈值 $\\alpha$（以小数表示），从三个策略中选择在满足 $p_{\\mathrm{qe}} \\le \\alpha$ 的前提下，$\\bar{Y}$ 最大的那个策略。如果没有策略满足 $p_{\\mathrm{qe}} \\le \\alpha$，则选择 $p_{\\mathrm{qe}}$ 最小的策略。若出现平局，首先按较大的 $\\bar{Y}$ 决定，然后按较小的策略索引决定。每个参数集的输出必须是所选策略的索引，为一个在 $\\{0,1,2\\}$ 中的整数。\n\n为确保公平性和可复现性的实施细节：\n- 在同一参数集内，对三种策略使用相同的环境噪声路径（共同随机数）。即，对每个参数集，生成一个形状为 $T \\times M$ 的 $\\varepsilon_t$ 矩阵一次，并为所有三种策略重复使用。\n- 对伪随机数生成器使用固定的随机种子 $12345$。\n- 生物量和捕捞量以公吨计量。时间以年计量。最终输出是无单位的整数。\n\n测试套件（四个参数集，涵盖不同情况）：\n对每个测试用例 $i \\in \\{1,2,3,4\\}$，使用 $M = 2000$ 个重复模拟，风险阈值 $\\alpha = 0.1$，以及准灭绝阈值 $x_{\\mathrm{th}} = 0.1 K$ 进行模拟。参数如下：\n\n- 用例 1（中等生产力，中等变异性；理想情况）：\n  - $r = 0.6$，$K = 1000$，$\\sigma = 0.2$，$X_0 = 800$，$T = 200$，$B = 50$，\n  - $q = 200$，$u = 0.3$，$S = 400$。\n\n- 用例 2（中等生产力，高变异性）：\n  - $r = 0.6$，$K = 1000$，$\\sigma = 0.6$，$X_0 = 800$，$T = 200$，$B = 50$，\n  - $q = 200$，$u = 0.3$，$S = 400$。\n\n- 用例 3（低生产力，中等变异性；安全捕捞的边界情况）：\n  - $r = 0.2$，$K = 1000$，$\\sigma = 0.25$，$X_0 = 700$，$T = 250$，$B = 50$，\n  - $q = 150$，$u = 0.2$，$S = 500$。\n\n- 用例 4（高生产力，较小种群规模；测试饱和效应）：\n  - $r = 0.8$，$K = 300$，$\\sigma = 0.25$，$X_0 = 250$，$T = 180$，$B = 40$，\n  - $q = 120$，$u = 0.35$，$S = 150$。\n\n最终输出格式要求：你的程序应生成单行输出，其中包含四个参数集的四个选定策略索引，格式为方括号内以逗号分隔的列表（例如，“[0,2,1,2]”）。", "solution": "### 1. 种群与捕捞动态模型\n\n种群动态由一个离散时间的随机 Ricker 模型描述。第 $t+1$ 年的捕捞前生物量，记为 $X_{t+1}$，是前一年捕捞后生物量（逃逸量）$E_t$ 的函数：\n$$\nX_{t+1} = E_t \\exp\\left( r \\left( 1 - \\frac{E_t}{K} \\right) + \\varepsilon_t \\right)\n$$\n此处，$r$ 代表种群的内禀增长率，$K$ 是环境承载能力。$\\varepsilon_t \\sim \\mathcal{N}(-\\sigma^2/2, \\sigma^2)$ 项引入了环境随机性，代表影响补充成功率的不可预测的波动。正态分布的特定参数化确保了随机乘数 $\\exp(\\varepsilon_t)$ 的期望值为 $1$，这意味着噪声不会对种群的长期平均生产力引入系统性偏差。\n\n逃逸量 $E_t$ 是从捕捞前种群 $X_t$ 中移除捕捞量 $H_t$ 后剩余的生物量，即 $E_t = X_t - H_t$。问题指定了三种不同的捕捞控制规则（HCRs）：\n\n- **恒定配额（索引 $0$）**：$H_t = \\min\\{q, X_t\\}$。每年设定一个固定的捕捞目标量 $q$，但捕捞量不能超过可用生物量。该规则易于实施，但如果种群规模 $X_t$ 长期低于配额 $q$，可能导致过度捕捞和种群崩溃。\n\n- **恒定捕捞率（索引 $1$）**：$H_t = u X_t$。捕捞捕捞前生物量的一个固定比例 $u$。该规则对种群规模的变化有响应，但在生物量极低时可能无法提供足够的保护，因为捕捞量会下降但不会停止。\n\n- **恒定逃逸量（索引 $2$）**：$H_t = \\max\\{0, X_t - S\\}$。捕捞量是超过预定逃逸目标 $S$ 的剩余生物量。该规则本质上是保守的，因为它优先保留固定的生物量 $E_t = S$（当 $X_t > S$ 时）用于繁殖，从而在低丰度时保护种群。\n\n### 2. 模拟与性能评估\n\n为了比较这些 HCRs，我们采用蒙特卡洛模拟。对于每个参数集，我们模拟 $M$ 个独立的种群轨迹，历时 $T$ 年。为确保公平比较，每个重复轨迹中的所有三种 HCRs 都受到相同的环境冲击序列（$\\varepsilon_t$）的影响。这是通过共同随机数技术实现的。一个初始的“预烧期”（B年）被舍弃，以使系统达到统计稳态，确保性能指标不受初始条件 $X_0$ 的偏见影响。\n\n每种 HCR 的性能由两个指标来评判，这些指标是在从第 $B$ 年到第 $T-1$ 年的评估窗口内计算的：\n\n1.  **平均渔获量（$\\bar{Y}$）**：该指标量化了年均捕捞量，代表了渔业的经济产出。其计算公式为：\n    $$\n    \\bar{Y} = \\frac{1}{M(T-B)} \\sum_{m=1}^{M} \\sum_{t=B}^{T-1} H_t^{(m)}\n    $$\n2.  **准灭绝概率（$p_{\\mathrm{qe}}$）**：该指标量化了保护风险。它是指在评估期间，生物量 $X_t$ 至少有一次低于临界阈值 $x_{\\mathrm{th}}$ 的模拟轨迹所占的比例。\n    $$\n    p_{\\mathrm{qe}} = \\frac{1}{M} \\sum_{m=1}^{M} \\mathbb{I}\\left\\{ \\min_{t \\in \\{B,\\dots,T-1\\}} X_t^{(m)} < x_{\\mathrm{th}} \\right\\}\n    $$\n\n### 3. 策略选择的决策算法\n\n最优策略是基于一个优先考虑安全性而非渔获量的字典序决策规则来选择的。\n\n1.  **识别安全策略**：首先，我们识别出准灭绝风险不超过指定容忍水平 $\\alpha$ 的策略子集。如果一个策略 $i$ 的 $p_{\\mathrm{qe}}^{(i)} \\le \\alpha$，则它被认为是“安全的”。\n\n2.  **从安全策略中选择**：如果存在一个或多个安全策略，我们选择提供最高平均渔获量 $\\bar{Y}$ 的那个。任何渔获量的平局都通过选择索引较小的策略（$0, 1,$ 或 $2$）来解决。\n\n3.  **从不安全策略中选择**：如果没有策略满足安全标准（即所有 $i$ 的 $p_{\\mathrm{qe}}^{(i)} > \\alpha$），目标则转为最小化风险。我们选择具有最低准灭绝概率 $p_{\\mathrm{qe}}$ 的策略。平局首先通过选择具有较高平均渔获量 $\\bar{Y}$ 的策略解决，然后通过较小的策略索引解决。\n\n### 4. 计算实现\n\n该解决方案被实现为一个 Python 脚本。对于每个测试用例：\n1.  用固定的种子初始化一个伪随机数生成器以保证可复现性。\n2.  一次性生成一个 $T \\times M$ 的环境噪声值（$\\varepsilon_t$）矩阵。\n3.  对于三种策略中的每一种，运行一个历时 $T$ 年、横跨 $M$ 个重复的模拟。在每个时间步骤存储生物量 $X_t$ 和捕捞量 $H_t$。\n4.  模拟结束后，使用评估窗口内的轨迹数据为每个策略计算性能指标 $\\bar{Y}$ 和 $p_{\\mathrm{qe}}$。\n5.  将结构化的决策算法应用于计算出的指标，以确定胜出的策略索引。\n6.  对所有四个测试用例重复此过程，并将结果索引收集起来并格式化以进行最终输出。使用 NumPy 库来高效地进行模拟动态和指标的向量化计算。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef select_policy(policy_stats, alpha):\n    \"\"\"\n    Selects the best policy based on the specified decision rule.\n\n    Args:\n        policy_stats (list): A list of dictionaries, where each dictionary\n                             contains 'policy' index, 'yield', and 'p_qe'.\n        alpha (float): The risk threshold for quasi-extinction probability.\n\n    Returns:\n        int: The index of the selected policy (0, 1, or 2).\n    \"\"\"\n    safe_pols = [p for p in policy_stats if p['p_qe'] = alpha]\n\n    if safe_pols:\n        # If safe policies exist, choose the one with the maximum yield.\n        # Tie-breaking: larger yield, then smaller policy index.\n        # This is achieved by maximizing the tuple (yield, -index).\n        best_policy_stat = max(safe_pols, key=lambda p: (p['yield'], -p['policy']))\n        return best_policy_stat['policy']\n    else:\n        # If no safe policies, choose the one with the minimum p_qe.\n        # Tie-breaking: smaller p_qe, then larger yield, then smaller policy index.\n        # This is achieved by minimizing the tuple (p_qe, -yield, index).\n        best_policy_stat = min(policy_stats, key=lambda p: (p['p_qe'], -p['yield'], p['policy']))\n        return best_policy_stat['policy']\n\ndef run_simulation(r, K, sigma, X_0, T, M, B, q, u, S, alpha, x_th_frac):\n    \"\"\"\n    Runs the full simulation for one parameter set and selects the best policy.\n\n    Returns:\n        int: The index of the selected policy for the given parameter set.\n    \"\"\"\n    # Initialize the pseudo-random number generator with a fixed seed for reproducibility.\n    rng = np.random.default_rng(12345)\n    \n    # Generate the common random numbers for environmental noise for all replicates and time steps.\n    # The simulation runs for T years, requiring T-1 transitions from X_0 to X_{T-1}.\n    eps_matrix = rng.normal(loc=-sigma**2 / 2, scale=sigma, size=(T - 1, M))\n\n    policy_params = {'q': q, 'u': u, 'S': S}\n    policy_stats = []\n\n    for i in range(3):  # Iterate through the three policies: 0, 1, 2.\n        # Pre-allocate arrays to store biomass and harvest trajectories.\n        # biomass array stores X_0, ..., X_{T-1}\n        # harvest array stores H_0, ..., H_{T-1}\n        biomass = np.zeros((T, M))\n        harvest = np.zeros((T, M))\n        biomass[0, :] = X_0\n\n        # Simulate population dynamics over time.\n        for t in range(T - 1):\n            X_t = biomass[t, :]\n\n            # Apply the corresponding harvest control rule.\n            if i == 0:  # Constant quota\n                H_t = np.minimum(policy_params['q'], X_t)\n            elif i == 1:  # Constant exploitation fraction\n                H_t = policy_params['u'] * X_t\n            else:  # Constant escapement\n                H_t = np.maximum(0, X_t - policy_params['S'])\n            \n            E_t = X_t - H_t\n            harvest[t, :] = H_t\n            \n            # Project biomass to the next year using the Ricker model.\n            biomass[t + 1, :] = E_t * np.exp(r * (1 - E_t / K) + eps_matrix[t, :])\n            # Ensure biomass does not become negative due to numerical precision issues, although analytically it shouldn't.\n            biomass[t + 1, :] = np.maximum(0, biomass[t + 1, :])\n\n\n        # Calculate harvest for the final year of the evaluation period (t=T-1).\n        X_T_minus_1 = biomass[T - 1, :]\n        if i == 0:\n            H_T_minus_1 = np.minimum(policy_params['q'], X_T_minus_1)\n        elif i == 1:\n            H_T_minus_1 = policy_params['u'] * X_T_minus_1\n        else:\n            H_T_minus_1 = np.maximum(0, X_T_minus_1 - policy_params['S'])\n        harvest[T - 1, :] = H_T_minus_1\n        \n        # Calculate performance metrics over the evaluation window [B, T-1].\n        eval_harvest = harvest[B:T, :]\n        mean_yield = np.mean(eval_harvest)\n\n        eval_biomass = biomass[B:T, :]\n        min_biomass_per_rep = np.min(eval_biomass, axis=0)\n        x_th = x_th_frac * K\n        p_qe = np.mean(min_biomass_per_rep  x_th)\n        \n        policy_stats.append({'policy': i, 'yield': mean_yield, 'p_qe': p_qe})\n\n    return select_policy(policy_stats, alpha)\n\ndef solve():\n    \"\"\"\n    Main function to define test cases, run simulations, and print results.\n    \"\"\"\n    test_cases = [\n        # Case 1: moderate productivity, moderate variability\n        {'r': 0.6, 'K': 1000, 'sigma': 0.2, 'X_0': 800, 'T': 200, 'B': 50, 'q': 200, 'u': 0.3, 'S': 400},\n        # Case 2: moderate productivity, high variability\n        {'r': 0.6, 'K': 1000, 'sigma': 0.6, 'X_0': 800, 'T': 200, 'B': 50, 'q': 200, 'u': 0.3, 'S': 400},\n        # Case 3: low productivity, moderate variability\n        {'r': 0.2, 'K': 1000, 'sigma': 0.25, 'X_0': 700, 'T': 250, 'B': 50, 'q': 150, 'u': 0.2, 'S': 500},\n        # Case 4: high productivity, smaller stock size\n        {'r': 0.8, 'K': 300, 'sigma': 0.25, 'X_0': 250, 'T': 180, 'B': 40, 'q': 120, 'u': 0.35, 'S': 150},\n    ]\n\n    # Shared parameters for all test cases\n    M = 2000\n    alpha = 0.1\n    x_th_frac = 0.1\n    \n    results = []\n    for case in test_cases:\n        selected_policy = run_simulation(\n            r=case['r'], K=case['K'], sigma=case['sigma'], X_0=case['X_0'],\n            T=case['T'], M=M, B=case['B'],\n            q=case['q'], u=case['u'], S=case['S'],\n            alpha=alpha, x_th_frac=x_th_frac\n        )\n        results.append(selected_policy)\n        \n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2506185"}]}