{"hands_on_practices": [{"introduction": "此练习是理解渔业管理理论的基石。我们将从经典的Schaefer模型出发，它结合了逻辑斯谛种群增长与与捕捞努力成正比的捕捞率。通过从基本原理出发进行推导，您将掌握计算最大可持续产量（$MSY$）的核心分析技能，这是评估渔业潜力和过度捕捞风险的传统基准。[@problem_id:2516838]", "problem": "一个被渔业开发的单一物种鱼类种群，其种群（生物量）水平由带有连续捕捞的 Verhulst 逻辑斯谛方程描述。设生物量为 $B$，内禀增长率为 $r$。在环境承载力为 $K$ 的密度制约下，未捕捞时的动态为 $dB/dt = r B \\left(1 - B/K\\right)$。在比例捕捞下，年捕捞量为 $H = q E B$，其中 $q$ 是可捕系数，$E$ 是捕捞努力量。假设所有参数均为正常数，且渔业长期以恒定的努力量 $E$ 进行作业，从而存在一个非平凡的平衡生物量 $B^{*}  0$，并由此定义了可持续捕捞。\n\n仅从这些定义出发，利用非平凡平衡条件 $dB/dt=0$ 推导可持续产量 $Y(E)$ 作为 $E$ 的函数，然后用微积分确定使 $Y(E)$ 最大化的努力量 $E_{MSY}$。使用您推导出的表达式，根据参数值 $r = 0.3\\,\\text{y}^{-1}$、$K = 5000\\,\\text{t}$ 和 $q = 2 \\times 10^{-4}\\,\\text{y}^{-1}\\,\\text{effort}^{-1}$ 计算以下各项：\n- 最大可持续产量 (MSY)，以吨/年 ($\\text{t}\\,\\text{y}^{-1}$) 为单位，\n- 实现最大产量的努力量 $E_{MSY}$，以给定的努力量单位表示，\n- 在 $E_{MSY}$ 下的相应平衡生物量 $B^{*}$，以吨 ($\\text{t}$) 为单位。\n\n按照 $\\left(MSY,\\,E_{MSY},\\,B^{*}\\right)$ 的顺序报告你的最终数值结果。无需四舍五入；请根据给定参数提供精确值。", "solution": "该问题陈述具有科学依据、提法恰当、客观，并提供了一套完整且一致的定义和参数。这是理论生态学和渔业管理中的一个标准问题。因此，该问题是有效的，并将推导求解。\n\n被捕捞鱼类种群的动态由带有比例捕捞项的逻辑斯谛增长方程描述。设 $B(t)$ 为时间 $t$ 时的种群生物量。控制微分方程为：\n$$\n\\frac{dB}{dt} = \\text{Growth} - \\text{Harvest}\n$$\n增长项由 Verhulst 逻辑斯谛模型给出，即 $rB(1 - B/K)$，其中 $r$ 是内禀增长率，$K$ 是环境承载力。捕捞项为 $H = qEB$，其中 $q$ 是可捕系数，$E$ 是捕捞努力量。完整的模型是：\n$$\n\\frac{dB}{dt} = rB\\left(1 - \\frac{B}{K}\\right) - qEB\n$$\n可持续产量 $Y$ 是在稳定的、非平凡的平衡生物量 $B^{*}$ 下的捕捞率。通过设置 $\\frac{dB}{dt} = 0$ 来找到平衡点：\n$$\nrB^{*}\\left(1 - \\frac{B^{*}}{K}\\right) - qEB^{*} = 0\n$$\n问题指定了一个非平凡平衡，所以我们假设 $B^{*}  0$，并可以用 $B^{*}$ 除等式两边：\n$$\nr\\left(1 - \\frac{B^{*}}{K}\\right) - qE = 0\n$$\n求解平衡生物量 $B^{*}$ 作为努力量 $E$ 的函数：\n$$\n1 - \\frac{B^{*}}{K} = \\frac{qE}{r}\n$$\n$$\n\\frac{B^{*}}{K} = 1 - \\frac{qE}{r}\n$$\n$$\nB^{*}(E) = K\\left(1 - \\frac{qE}{r}\\right)\n$$\n为使 $B^{*}$ 为正，努力量 $E$ 必须满足约束条件 $E  \\frac{r}{q}$。\n\n可持续产量 $Y(E)$ 是在此平衡生物量下的捕捞率：\n$$\nY(E) = qEB^{*} = qE K\\left(1 - \\frac{qE}{r}\\right)\n$$\n这个表达式可以展开成一个关于 $E$ 的二次函数：\n$$\nY(E) = qKE - \\frac{q^{2}K}{r}E^{2}\n$$\n为了找到使可持续产量最大化的努力量 $E_{MSY}$，我们必须求函数 $Y(E)$ 的最大值。这可以通过求 $Y(E)$ 关于 $E$ 的一阶导数并令其为零来实现：\n$$\n\\frac{dY}{dE} = \\frac{d}{dE}\\left(qKE - \\frac{q^{2}K}{r}E^{2}\\right) = qK - \\frac{2q^{2}K}{r}E\n$$\n将导数设为零，我们求解 $E_{MSY}$：\n$$\nqK - \\frac{2q^{2}K}{r}E_{MSY} = 0\n$$\n$$\nqK = \\frac{2q^{2}K}{r}E_{MSY}\n$$\n由于 $q$ 和 $K$ 均为正常数，我们可以简化以求得 $E_{MSY}$：\n$$\nE_{MSY} = \\frac{r}{2q}\n$$\n二阶导数 $\\frac{d^{2}Y}{dE^{2}} = -\\frac{2q^{2}K}{r}$ 为负（因为 $r, q, K  0$），这证实了 $E_{MSY}$ 对应一个最大值。\n\n接下来，我们求在此最优努力量下的平衡生物量，记作 $B^{*}_{MSY}$：\n$$\nB^{*}_{MSY} = B^{*}(E_{MSY}) = K\\left(1 - \\frac{q E_{MSY}}{r}\\right) = K\\left(1 - \\frac{q(r/2q)}{r}\\right) = K\\left(1 - \\frac{1}{2}\\right) = \\frac{K}{2}\n$$\n最大可持续产量 (MSY) 是在 $E_{MSY}$ 和 $B^{*}_{MSY}$ 下的产量：\n$$\nMSY = Y(E_{MSY}) = q E_{MSY} B^{*}_{MSY} = q \\left(\\frac{r}{2q}\\right) \\left(\\frac{K}{2}\\right) = \\frac{rK}{4}\n$$\n现在，我们代入给定的数值参数：$r = 0.3\\,\\text{y}^{-1}$，$K = 5000\\,\\text{t}$，以及 $q = 2 \\times 10^{-4}\\,\\text{y}^{-1}\\,\\text{effort}^{-1}$。\n\n使可持续产量最大化的努力量是：\n$$\nE_{MSY} = \\frac{r}{2q} = \\frac{0.3}{2 \\times (2 \\times 10^{-4})} = \\frac{0.3}{4 \\times 10^{-4}} = \\frac{3 \\times 10^{-1}}{4 \\times 10^{-4}} = 0.75 \\times 10^{3} = 750\n$$\n在 $E_{MSY}$ 下的相应平衡生物量是：\n$$\nB^{*}_{MSY} = \\frac{K}{2} = \\frac{5000}{2} = 2500\n$$\n最大可持续产量是：\n$$\nMSY = \\frac{rK}{4} = \\frac{0.3 \\times 5000}{4} = \\frac{1500}{4} = 375\n$$\n问题要求按 $(MSY, E_{MSY}, B^{*})$ 的顺序给出最终结果。计算出的值为 $MSY = 375\\,\\text{t}\\,\\text{y}^{-1}$、$E_{MSY} = 750\\,\\text{努力量单位}$，以及 $B^{*} = 2500\\,\\text{t}$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 375  750  2500 \\end{pmatrix}}\n$$", "id": "2516838"}, {"introduction": "在掌握了简单的生物量动态模型后，本练习将引导您进入更符合生物学现实的年龄结构模型。通过单位补充量分析（per-recruit analysis），您将学习如何评估不同捕捞策略（如最小尺寸限制与捕捞窗限制）对渔业产量（$YPR$）和种群繁殖能力（$SPR$）的影响。这项实践对于理解在渔业管理中，如何在产量最大化与种群保护之间做出权衡至关重要。[@problem_id:2516876]", "problem": "单一物种的鱼类种群受到单位时间内恒定捕捞死亡率的连续捕捞。请使用基于年龄结构种群统计学的标准单位补充量框架，比较在相同瞬时捕捞死亡率下应用的两种捕捞法规。\n\n基本原理：\n- 年龄为 $a$ 时的单位补充量存活率，记作 $l(a)$，满足 $\\frac{d}{da} l(a) = -\\left(M + F s(a)\\right) l(a)$，且 $l(0)=1$，其中 $M$ 是与年龄无关的自然死亡率，$F$ 是完全选择的瞬时捕捞死亡率，$s(a)$ 是年龄选择性。\n- 单位补充量渔获量 (YPR) 是积分 $YPR = \\int_{0}^{\\infty} F s(a) l(a) W(a) \\, da$，其中 $W(a)$ 是年龄别重量。\n- 产卵潜力比 (SPR) 是 $SPR = \\frac{\\int_{0}^{\\infty} m(a) l(a) f(a) \\, da}{\\int_{0}^{\\infty} m(a) l_{0}(a) f(a) \\, da}$，其中 $m(a)$ 是年龄别性成熟度，$f(a)$ 是年龄别繁殖力（假定与体型成正比），$l_{0}(a)$ 是满足 $\\frac{d}{da} l_{0}(a) = -M l_{0}(a)$ 且 $l_{0}(0)=1$ 的未捕捞存活率。\n\n生活史与渔业参数设定：\n- Von Bertalanffy 体长生长模型：$L(a) = L_{\\infty} \\left(1 - \\exp(-k (a - t_{0}))\\right)$，其中 $L_{\\infty} = 100$，$k = 0.2$，$t_{0} = 0$。\n- 年龄别重量与体长成正比：$W(a) = \\omega \\left(1 - \\exp(-k a)\\right)$，其中 $\\omega = 100$。\n- 自然死亡率为常数：$M = 0.2$。\n- 捕捞死亡率在不同法规下为常数且相等：$F = 0.5$。\n- 性成熟为在体长 $L_{\\mathrm{mat}} = 50$ 处的刀刃式选择：如果 $L(a)  L_{\\mathrm{mat}}$ 则 $m(a) = 0$，如果 $L(a) \\geq L_{\\mathrm{mat}}$ 则 $m(a) = 1$。\n- 年龄别繁殖力与体长成正比：$f(a) \\propto L(a)$；比例常数在 $SPR$ 中被消去。\n- 两种法规定义了基于体长的选择性：\n  1. 最小尺寸限制 $L_{\\min} = 60$：如果 $L(a)  L_{\\min}$ 则 $s_{\\min}(a) = 0$，如果 $L(a) \\geq L_{\\min}$ 则 $s_{\\min}(a) = 1$。\n  2. 开窗尺寸限制 $[L_{\\min}, L_{\\max}]$，其中 $L_{\\max} = 80$：如果 $L(a)  L_{\\min}$ 则 $s_{\\mathrm{slot}}(a) = 0$，如果 $L_{\\min} \\leq L(a) \\leq L_{\\max}$ 则 $s_{\\mathrm{slot}}(a) = 1$，如果 $L(a)  L_{\\max}$ 则 $s_{\\mathrm{slot}}(a) = 0$。\n\n任务：\n- 从以上定义出发，推导在最小尺寸限制和开窗尺寸限制下的 $YPR$ 和 $SPR$ 表达式。利用 $L(a)$ 的单调性，确定当 $L(a) = x$ (其中 $x \\in \\{L_{\\mathrm{mat}}, L_{\\min}, L_{\\max}\\}$) 时的年龄 $a_{x}$。\n- 使用提供的参数值对所得表达式进行数值计算。\n- 根据计算出的 $YPR$ 和 $SPR$，简要解释两种法规之间的权衡关系。\n\n答案规格：\n- 对于你的最终数值答案，请报告比率 $R = \\frac{YPR_{\\mathrm{slot}}}{YPR_{\\min}}$，形式为一个无量纲小数。\n- 将答案四舍五入到四位有效数字。\n- 在最终报告的值中不要包含任何单位。", "solution": "我们从单位补充量的定义出发，其中的分段恒定风险率由基于体长的选择性通过 von Bertalanffy 生长模型确定。\n\n步骤1：根据 von Bertalanffy 生长模型计算阈值年龄。\n年龄别体长为 $L(a) = L_{\\infty} \\left(1 - \\exp(-k a)\\right)$ (因为 $t_{0} = 0$)。求解 $L(a) = x$ 关于 $a$ 的方程可得\n$$\na_{x} = -\\frac{1}{k} \\ln\\!\\left(1 - \\frac{x}{L_{\\infty}}\\right).\n$$\n在 $L_{\\infty} = 100$ 和 $k = 0.2$ 的条件下，我们得到\n$$\na_{50} = -\\frac{1}{0.2} \\ln\\!\\left(1 - \\frac{50}{100}\\right) = -5 \\ln(0.5),\n$$\n$$\na_{60} = -5 \\ln(0.4), \\qquad a_{80} = -5 \\ln(0.2).\n$$\n注意到以下使用 $k = 0.2$ 和 $M = 0.2$ 的指数形式将为后续计算带来方便：\n$$\n\\exp(-k a_{60}) = \\exp(-M a_{60}) = 0.4, \\quad \\exp(-k a_{80}) = \\exp(-M a_{80}) = 0.2,\n$$\n并且有 $\\Delta \\equiv a_{80} - a_{60} = -5 \\ln(0.5)$,\n$$\n\\exp\\!\\left(-(M+F)\\Delta\\right) = \\exp(-0.7 \\Delta) = \\left(\\frac{1}{2}\\right)^{3.5}, \\quad \\exp\\!\\left(-(M+F+k)\\Delta\\right) = \\exp(-0.9 \\Delta) = \\left(\\frac{1}{2}\\right)^{4.5}.\n$$\n\n步骤2：存活率和选择性结构。\n设 $l(a)$ 表示在给定选择性模式 $s(a)$ 下的存活率。在所有情况下，\n$$\n\\frac{d}{da} l(a) = -\\left(M + F s(a)\\right) l(a), \\quad l(0) = 1.\n$$\n对于最小尺寸限制：\n- 当 $a  a_{60}$ 时，$s_{\\min}(a) = 0$，所以 $l_{\\min}(a) = \\exp(-M a)$。\n- 当 $a \\geq a_{60}$ 时，$s_{\\min}(a) = 1$，所以 $l_{\\min}(a) = \\exp(-M a_{60}) \\exp\\!\\left(-(M+F)(a - a_{60})\\right)$。\n\n对于开窗尺寸限制：\n- 当 $a  a_{60}$ 时，$s_{\\mathrm{slot}}(a) = 0$，所以 $l_{\\mathrm{slot}}(a) = \\exp(-M a)$。\n- 当 $a_{60} \\leq a \\leq a_{80}$ 时，$s_{\\mathrm{slot}}(a) = 1$，所以 $l_{\\mathrm{slot}}(a) = \\exp(-M a_{60}) \\exp\\!\\left(-(M+F)(a - a_{60})\\right)$。\n- 当 $a  a_{80}$ 时，$s_{\\mathrm{slot}}(a) = 0$，所以 $l_{\\mathrm{slot}}(a) = \\exp(-M a_{60}) \\exp\\!\\left(-(M+F)(a_{80} - a_{60})\\right) \\exp\\!\\left(-M (a - a_{80})\\right)$。\n\n步骤3：各法规下的单位补充量渔获量。\n根据定义，\n$$\nYPR = \\int_{0}^{\\infty} F s(a) l(a) W(a) \\, da, \\qquad W(a) = \\omega \\left(1 - \\exp(-k a)\\right), \\quad \\omega = 100.\n$$\n\n最小尺寸限制。由于当 $a  a_{60}$ 时 $s_{\\min}(a) = 0$，当 $a \\geq a_{60}$ 时 $s_{\\min}(a) = 1$，\n$$\nYPR_{\\min} = \\int_{a_{60}}^{\\infty} F \\, l_{\\min}(a) \\, \\omega \\left(1 - \\exp(-k a)\\right) \\, da.\n$$\n将在 $[a_{60}, \\infty)$ 上的 $l_{\\min}(a)$ 代入并换元 $t = a - a_{60}$：\n$$\nYPR_{\\min} = F \\exp(-M a_{60}) \\, \\omega \\int_{0}^{\\infty} \\exp\\!\\left(-(M+F) t\\right) \\left(1 - \\exp(-k (a_{60} + t))\\right) dt.\n$$\n分割积分：\n$$\nYPR_{\\min} = F \\exp(-M a_{60}) \\, \\omega \\left[\\int_{0}^{\\infty} \\exp\\!\\left(-(M+F) t\\right) dt - \\exp(-k a_{60}) \\int_{0}^{\\infty} \\exp\\!\\left(-(M+F+k) t\\right) dt \\right].\n$$\n计算几何积分：\n$$\nYPR_{\\min} = F \\exp(-M a_{60}) \\, \\omega \\left[\\frac{1}{M+F} - \\frac{\\exp(-k a_{60})}{M+F+k}\\right].\n$$\n当 $M = 0.2$, $F = 0.5$, $k = 0.2$, $\\exp(-M a_{60}) = 0.4$, $\\exp(-k a_{60}) = 0.4$, 且 $\\omega = 100$ 时，\n$$\nYPR_{\\min} = (0.5)(0.4)(100) \\left[\\frac{1}{0.7} - \\frac{0.4}{0.9}\\right] = 20 \\left[\\frac{10}{7} - \\frac{4}{9}\\right] = 20 \\left(\\frac{62}{63}\\right) \\approx 19.6825396825.\n$$\n\n开窗尺寸限制。捕捞仅发生在 $a \\in [a_{60}, a_{80}]$，因此\n$$\nYPR_{\\mathrm{slot}} = \\int_{a_{60}}^{a_{80}} F \\, l_{\\mathrm{slot}}(a) \\, \\omega \\left(1 - \\exp(-k a)\\right) \\, da.\n$$\n在此区间上，$l_{\\mathrm{slot}}(a) = \\exp(-M a_{60}) \\exp\\!\\left(-(M+F)(a - a_{60})\\right)$。设 $t = a - a_{60}$ 且 $\\Delta = a_{80} - a_{60}$，\n$$\nYPR_{\\mathrm{slot}} = F \\exp(-M a_{60}) \\, \\omega \\int_{0}^{\\Delta} \\exp\\!\\left(-(M+F) t\\right) \\left(1 - \\exp(-k (a_{60} + t))\\right) dt.\n$$\n如前所述，\n$$\nYPR_{\\mathrm{slot}} = F \\exp(-M a_{60}) \\, \\omega \\left[\\frac{1 - \\exp\\!\\left(-(M+F)\\Delta\\right)}{M+F} - \\exp(-k a_{60}) \\frac{1 - \\exp\\!\\left(-(M+F+k)\\Delta\\right)}{M+F+k}\\right].\n$$\n代入数值 $\\exp(-M a_{60}) = 0.4$, $\\exp(-k a_{60}) = 0.4$, $\\exp\\!\\left(-(M+F)\\Delta\\right) = \\left(\\tfrac{1}{2}\\right)^{3.5}$, $\\exp\\!\\left(-(M+F+k)\\Delta\\right) = \\left(\\tfrac{1}{2}\\right)^{4.5}$：\n$$\nYPR_{\\mathrm{slot}} = 20 \\left[\\frac{1 - 2^{-3.5}}{0.7} - 0.4 \\frac{1 - 2^{-4.5}}{0.9}\\right].\n$$\n数值上，$2^{-3.5} \\approx 0.0883883476483$ 且 $2^{-4.5} \\approx 0.0441941738242$，得到\n$$\nYPR_{\\mathrm{slot}} \\approx 20 \\left[1.3023023605024 - 0.4248025894115\\right] \\approx 20 \\times 0.8774997710909 \\approx 17.5499954218.\n$$\n\n因此，所求比率为\n$$\nR \\equiv \\frac{YPR_{\\mathrm{slot}}}{YPR_{\\min}} \\approx \\frac{17.5499954218}{19.6825396825} \\approx 0.891653.\n$$\n\n步骤4：各法规下的产卵潜力比。\n根据定义，性成熟为在 $a_{50}$（$L_{\\mathrm{mat}} = 50$ 时的年龄）处的刀刃式选择，繁殖力与体长成正比 ($f(a) \\propto L(a)$)，且分子分母中具有相同的比例常数，我们有\n$$\nSPR = \\frac{\\int_{a_{50}}^{\\infty} l(a) \\, \\omega \\left(1 - \\exp(-k a)\\right) \\, da}{\\int_{a_{50}}^{\\infty} l_{0}(a) \\, \\omega \\left(1 - \\exp(-k a)\\right) \\, da}.\n$$\n因子 $\\omega$ 可以消去，但为了清晰起见我们保留它。\n\n未捕捞基线：\n$$\nl_{0}(a) = \\exp(-M a), \\quad S_{0} \\equiv \\int_{a_{50}}^{\\infty} \\exp(-M a) \\omega \\left(1 - \\exp(-k a)\\right) da\n= \\omega \\left[\\frac{\\exp(-M a_{50})}{M} - \\frac{\\exp(-(M+k)a_{50})}{M+k}\\right].\n$$\n当 $a_{50} = -5 \\ln(0.5)$ 时，我们有 $\\exp(-M a_{50}) = \\exp(-k a_{50}) = 0.5$，所以\n$$\nS_{0} = \\omega \\left[\\frac{0.5}{0.2} - \\frac{0.25}{0.4}\\right] = \\omega (2.5 - 0.625) = \\omega \\times 1.875 = 187.5.\n$$\n\n最小尺寸限制：\n在捕捞开始的 $a_{60}$ 处分割积分：\n$$\nS_{\\min} = \\omega \\left[\\int_{a_{50}}^{a_{60}} \\exp(-M a)\\left(1 - \\exp(-k a)\\right) da + \\exp(-M a_{60}) \\int_{a_{60}}^{\\infty} \\exp\\!\\left(-(M+F)(a - a_{60})\\right)\\left(1 - \\exp(-k a)\\right) da \\right].\n$$\n第一部分计算结果为\n$$\nJ_{1} = \\left[\\frac{\\exp(-M a_{50}) - \\exp(-M a_{60})}{M}\\right] - \\left[\\frac{\\exp(-(M+k)a_{50}) - \\exp(-(M+k)a_{60})}{M+k}\\right].\n$$\n使用 $\\exp(-M a_{50}) = 0.5$, $\\exp(-M a_{60}) = 0.4$, $\\exp(-(M+k)a_{50}) = 0.25$, $\\exp(-(M+k)a_{60}) = 0.16$,\n$$\nJ_{1} = \\frac{0.1}{0.2} - \\frac{0.09}{0.4} = 0.5 - 0.225 = 0.275.\n$$\n第二部分是\n$$\nJ_{2} = \\exp(-M a_{60}) \\left[\\frac{1}{M+F} - \\frac{\\exp(-k a_{60})}{M+F+k}\\right] = 0.4 \\left[\\frac{1}{0.7} - \\frac{0.4}{0.9}\\right] = 0.4 \\times \\frac{62}{63} \\approx 0.39365079365.\n$$\n因此\n$$\nS_{\\min} = \\omega (J_{1} + J_{2}) \\approx 100 \\times (0.275 + 0.39365079365) \\approx 66.865079365.\n$$\n所以\n$$\nSPR_{\\min} = \\frac{S_{\\min}}{S_{0}} \\approx \\frac{66.865079365}{187.5} \\approx 0.356613733.\n$$\n\n开窗尺寸限制：\n在 $[a_{50}, a_{60}]$, $[a_{60}, a_{80}]$ 和 $[a_{80}, \\infty)$ 上分割积分：\n$$\nS_{\\mathrm{slot}} = \\omega \\left[J_{1} + J_{2}^{\\mathrm{slot}} + J_{3}^{\\mathrm{slot}}\\right],\n$$\n其中 $J_{1}$ 如上所述，且\n$$\nJ_{2}^{\\mathrm{slot}} = \\exp(-M a_{60}) \\left[\\frac{1 - \\exp\\!\\left(-(M+F)\\Delta\\right)}{M+F} - \\exp(-k a_{60}) \\frac{1 - \\exp\\!\\left(-(M+F+k)\\Delta\\right)}{M+F+k}\\right],\n$$\n$$\nJ_{3}^{\\mathrm{slot}} = \\exp(-M a_{60}) \\exp\\!\\left(-(M+F)\\Delta\\right) \\left[\\frac{1}{M} - \\frac{\\exp(-k a_{80})}{M+k}\\right].\n$$\n代入数值：$\\exp(-M a_{60}) = 0.4$, $\\exp(-k a_{60}) = 0.4$, $\\exp\\!\\left(-(M+F)\\Delta\\right) = 2^{-3.5}$, $\\exp\\!\\left(-(M+F+k)\\Delta\\right) = 2^{-4.5}$, 且 $\\exp(-k a_{80}) = 0.2$:\n$$\nJ_{2}^{\\mathrm{slot}} \\approx 0.4 \\left[\\frac{1 - 2^{-3.5}}{0.7} - 0.4 \\frac{1 - 2^{-4.5}}{0.9}\\right] \\approx 0.350999908436,\n$$\n$$\nJ_{3}^{\\mathrm{slot}} \\approx 0.4 \\cdot 2^{-3.5} \\left[\\frac{1}{0.2} - \\frac{0.2}{0.4}\\right] = 0.4 \\cdot 2^{-3.5} \\cdot 4.5 \\approx 0.159099025767.\n$$\n因此，\n$$\nS_{\\mathrm{slot}} \\approx 100 \\times \\left(0.275 + 0.350999908436 + 0.159099025767\\right) \\approx 78.5098934203,\n$$\n并且\n$$\nSPR_{\\mathrm{slot}} \\approx \\frac{78.5098934203}{187.5} \\approx 0.418719431.\n$$\n\n步骤5：权衡关系的解释。\n在相同的瞬时捕捞死亡率 F 下，相对于最小尺寸限制，开窗尺寸限制降低了最大个体鱼类的可捕性，这通过保护更多大型、高繁殖力的产卵者来降低 YPR 但增加 SPR。数值上，$YPR_{\\mathrm{slot}} \\approx 17.55$ 且 $YPR_{\\min} \\approx 19.68$，而 $SPR_{\\mathrm{slot}} \\approx 0.419$ 且 $SPR_{\\min} \\approx 0.357$。因此，开窗尺寸限制牺牲了大约一部分渔获量（约 $1 - R \\approx 0.108$）以换取更高的繁殖潜力，这说明了经典的渔获量-保育权衡关系。\n\n最终，所求比率为\n$$\nR = \\frac{YPR_{\\mathrm{slot}}}{YPR_{\\min}} \\approx 0.891653.\n$$\n四舍五入到四位有效数字，$R \\approx 0.8917$。", "answer": "$$\\boxed{0.8917}$$", "id": "2516876"}, {"introduction": "现实世界的生态系统充满了不确定性。这个高级计算练习将挑战您在一个随机变化的环境中寻找最优的捕捞策略。您将运用随机动态规划（stochastic dynamic programming）和价值迭代（value iteration）算法，亲手构建一个能够应对环境波动的最优决策模型。完成此练习将使您对现代渔业管理中预防性方法和适应性策略的理论基础有深刻的理解。[@problem_id:2516796]", "problem": "考虑一个在环境随机性下、按离散时间捕捞的单物种鱼类种群。设 $x_t$ 为时间 $t$ 的生物量，$h_t$ 为时间 $t$ 的捕捞量，$s_t$ 为时间 $t$ 捕捞后剩余的逃逸量，其中 $s_t = x_t - h_t$，且可行性约束为 $0 \\le s_t \\le x_t$。该种群动态遵循带有乘性环境噪声的密度依赖逻辑斯谛增长模型：\n$$x_{t+1} = \\Big(s_t + r s_t \\big(1 - \\tfrac{s_t}{K}\\big)\\Big)\\, \\exp(\\varepsilon_t),$$\n其中 $r  0$ 是内禀增长率，$K  0$ 是环境承载力，$\\varepsilon_t \\sim \\mathcal{N}(\\mu, \\sigma^2)$ 是独立同分布的环境冲击，其中 $\\mu = -\\tfrac{1}{2}\\sigma^2$ 以使得 $\\mathbb{E}[\\exp(\\varepsilon_t)] = 1$。捕捞者是风险规避的，其当期效用函数为 $u(h_t) = \\sqrt{h_t}$，并以折扣因子 $\\beta \\in (0,1)$ 对未来进行折现。管理问题是选择一个逃逸规则，以最大化期望折扣效用：\n$$\\max_{\\{s_t\\}} \\ \\mathbb{E}\\Bigg[\\sum_{t=0}^{\\infty} \\beta^t\\, u(h_t)\\Bigg] \\quad \\text{约束条件为} \\quad h_t = x_t - s_t,\\ 0 \\le s_t \\le x_t,$$\n以及上述种群动态。\n\n将此问题构建为一个平稳马尔可夫决策过程，并使用值迭代法（动态规划，DP）在均匀的种群规模网格上求解，利用贝尔曼方程：\n$$V(x) = \\max_{0 \\le s \\le x} \\left\\{ u(x - s) + \\beta\\, \\mathbb{E}\\left[V\\Big(\\big(s + r s (1 - s/K)\\big)\\, \\exp(\\varepsilon)\\Big)\\right] \\right\\}.$$\n使用具有 $n$ 个节点的高斯-埃尔米特求积法来近似期望值，并通过在种群网格上的线性插值来近似续存价值。计算平稳最优逃逸规则 $s^{\\star}(x)$，并通过一个估计的最优恒定逃逸目标 $\\hat{s}^{\\star}$ 对其进行总结，该目标定义为在高存量状态下 $s^{\\star}(x)$ 的中位数。\n\n在所有计算中使用以下参数化和数值规格：\n- 生物学和经济学参数：$r = 0.6$，$K = 100$，$\\beta = 0.95$，$u(h) = \\sqrt{h}$。\n- 冲击分布：$\\varepsilon \\sim \\mathcal{N}(\\mu, \\sigma^2)$，其中 $\\mu = -\\tfrac{1}{2}\\sigma^2$，方差 $\\sigma^2$ 在测试套件中指定。\n- 状态网格：在 $[0, X_{\\max}]$ 上均匀分布的 $N_x = 301$ 个点，其中 $X_{\\max} = 200$。\n- 行动网格：逃逸量网格与状态网格相同。\n- 期望近似：使用具有 $n = 15$ 个节点的高斯-埃尔米特求积法。\n- 值迭代停止准则：$\\|V^{(k+1)} - V^{(k)}\\|_{\\infty}  10^{-8}$ 或达到 $2000$ 次迭代的硬上限，以先发生者为准。\n- 插值：在状态网格上对值函数进行线性插值；对于超出网格的下一状态，钳位到网格最近的端点。\n\n测试套件。针对以下环境标准差求解问题（所有值均为纯小数，而非百分比）：\n- 情况 A：$\\sigma = 0.0$（确定性边界情况）。\n- 情况 B：$\\sigma = 0.1$（低方差）。\n- 情况 C：$\\sigma = 0.3$（中等方差）。\n- 情况 D：$\\sigma = 0.6$（高方差）。\n\n对于每种情况，计算平稳最优逃逸规则 $s^{\\star}(x)$，并报告一个单一标量摘要 $\\hat{s}^{\\star}$，其定义为在所有 $x \\ge K$ 的状态下 $s^{\\star}(x)$ 的中位数。您的程序应生成单行输出，包含四个摘要，按 [情况 A, 情况 B, 情况 C, 情况 D] 的顺序排列，形式为逗号分隔的列表，并用方括号括起，每个数字四舍五入到三位小数（无单位生物量）。例如，输出格式必须类似于：\n\"[12.345,67.890,23.456,78.901]\"。", "solution": "对问题陈述进行验证。\n\n**第1步：提取给定信息**\n- **种群动态：**\n  - 状态变量：$x_t$（时间 $t$ 的生物量）。\n  - 控制变量：$s_t$（时间 $t$ 的逃逸量）。\n  - 捕捞量：$h_t = x_t - s_t$。\n  - 状态转移（亲体-补充量）：$x_{t+1} = G(s_t, \\varepsilon_t) = \\Big(s_t + r s_t \\big(1 - \\tfrac{s_t}{K}\\big)\\Big)\\, \\exp(\\varepsilon_t)$。\n  - 约束：$0 \\le s_t \\le x_t$。\n- **经济模型：**\n  - 当期效用函数：$u(h_t) = \\sqrt{h_t}$。\n  - 折扣因子：$\\beta \\in (0,1)$。\n  - 目标：最大化 $\\mathbb{E}\\Bigg[\\sum_{t=0}^{\\infty} \\beta^t\\, u(h_t)\\Bigg]$。\n- **随机冲击：**\n  - $\\varepsilon_t$ 是从 $\\mathcal{N}(\\mu, \\sigma^2)$ 中抽取的独立同分布样本。\n  - 均值设定：$\\mu = -\\tfrac{1}{2}\\sigma^2$，以确保 $\\mathbb{E}[\\exp(\\varepsilon_t)] = 1$。\n- **参数：**\n  - 内禀增长率：$r = 0.6$。\n  - 环境承载力：$K = 100$。\n  - 折扣因子：$\\beta = 0.95$。\n- **数值方法：动态规划**\n  - 贝尔曼方程：$V(x) = \\max_{0 \\le s \\le x} \\left\\{ u(x - s) + \\beta\\, \\mathbb{E}_{\\varepsilon}\\left[V\\big(G(s, \\varepsilon)\\big)\\right] \\right\\}$。\n  - 状态网格：在 $[0, X_{\\max}]$ 上均匀分布的 $N_x = 301$ 个点，其中 $X_{\\max} = 200$。\n  - 行动网格：与状态网格相同。\n  - 期望近似：使用具有 $n = 15$ 个节点的高斯-埃尔米特求积法。\n  - 值函数近似：在状态网格上进行线性插值。超出网格的值被钳位到最近的边界值。\n  - 值迭代收敛准则：$\\|V^{(k+1)} - V^{(k)}\\|_{\\infty}  10^{-8}$ 或 $2000$ 次迭代。\n- **测试案例：**\n  - 环境标准差 $\\sigma$ 的值：$0.0$，$0.1$，$0.3$，$0.6$。\n- **输出要求：**\n  - 对于每个 $\\sigma$，计算在状态 $x \\ge K$ 上最优逃逸策略 $s^{\\star}(x)$ 的中位数。记为 $\\hat{s}^{\\star}$。\n  - 将四个 $\\hat{s}^{\\star}$ 值报告为方括号内的逗号分隔列表，四舍五入到三位小数。\n\n**第2步：使用提取的给定信息进行验证**\n该问题是一个标准的、形式完善的随机动态规划问题，属于生物经济学和可再生资源管理领域。\n\n- **科学依据：** 该模型建立在公认的原则之上。离散时间逻辑斯谛增长函数是密度依赖种群动态的典范模型。引入乘性的对数正态分布噪声是表示环境随机性的标准方法。最大化捕捞效用的期望现值的目标是资源经济学的基石。所有组成部分在科学上都是合理的。\n- **适定性：** 该问题是适定的。对于一个有界回报函数（此处成立，因为状态空间实际上受网格限制，且捕捞量不能超过最大种群量）的折扣、无限期问题，贝尔曼算子是一个压缩映射。标准定理保证了唯一值函数 $V(x)$ 的存在以及值迭代算法向其收敛。\n- **完整性与一致性：** 该问题是自洽的。所有模型参数、函数形式和数值规格都已明确无误地提供。设置中没有矛盾之处。\n\n**第3步：结论与操作**\n该问题有效。我们着手进行求解。\n\n**求解方法**\n\n该问题旨在找到一个最优平稳逃逸策略 $s^{\\star}(x)$，以最大化期望折扣效用之和。这是一个经典的马尔可夫决策过程，我们按照规定使用值函数迭代法来求解。该方法的核心是递归的贝尔曼方程：\n$$V(x) = \\max_{0 \\le s \\le x} \\left\\{ \\sqrt{x - s} + \\beta\\, \\mathbb{E}_{\\varepsilon}\\left[V\\left(G(s, \\varepsilon)\\right)\\right] \\right\\}$$\n此处，$V(x)$ 是从种群量 $x$ 开始可获得的最大价值，而 $G(s, \\varepsilon) = (s + r s (1 - s/K)) \\exp(\\varepsilon)$ 是下一时期的种群量。\n\n由于状态空间 $x \\in [0, \\infty)$ 是连续的，我们无法解析地求解此方程。必须采用在有限网格上的数值近似方法。\n\n1.  **离散化：** 将连续状态变量 $x$ 离散化为一个从 $x=0$ 到 $x=X_{\\max}=200$ 的均匀网格，共 $N_x = 301$ 个点。可能采取的行动（逃逸量 $s$）的集合也采用相同的网格，并附加约束条件：对于给定的状态 $x$，只有行动 $s \\le x$ 是可行的。\n\n2.  **期望近似：** 对随机冲击 $\\varepsilon$ 的期望使用高斯-埃尔米特求积法进行近似。冲击 $\\varepsilon$ 服从正态分布 $\\mathcal{N}(-\\sigma^2/2, \\sigma^2)$。我们可以将 $\\varepsilon$ 表示为 $\\varepsilon = \\mu + \\sigma Z$，其中 $Z \\sim \\mathcal{N}(0,1)$。期望变为：\n    $$\\mathbb{E}_{\\varepsilon}[V(G(s, \\varepsilon))] = \\mathbb{E}_{Z}\\left[V\\left(G(s, -\\tfrac{1}{2}\\sigma^2 + \\sigma Z)\\right)\\right]$$\n    该期望通过在 $n=15$ 个求积节点上的加权和来近似：\n    $$\\mathbb{E}_{Z}[f(Z)] \\approx \\sum_{i=1}^{n} \\tilde{w}_i f(\\tilde{z}_i)$$\n    其中 $\\tilde{z}_i$ 和 $\\tilde{w}_i$ 是标准正态分布的节点和权重，它们由标准的（用于权重函数 $e^{-z^2}$ 的）高斯-埃尔米特求积节点 $z_i$ 和权重 $w_i$ 通过变换 $\\tilde{z}_i = \\sqrt{2}z_i$ 和 $\\tilde{w}_i = w_i/\\sqrt{\\pi}$ 得到。\n\n3.  **值函数插值：** 在迭代期间，下一时期的种群量 $G(s, \\varepsilon)$ 通常不会落在网格点上。因此，我们必须根据网格上的值来近似 $V(G(s, \\varepsilon))$。按照规定，我们使用线性插值。对于任何落在网格点 $x_j$ 和 $x_{j+1}$ 之间的值 $x'$，我们近似 $V(x')$ 为：\n    $$V(x') \\approx V(x_j) + \\frac{V(x_{j+1}) - V(x_j)}{x_{j+1} - x_j} (x' - x_j)$$\n    对于超出网格 $[0, X_{\\max}]$ 的值，该值被钳位到最近端点处的值，即当 $x'  0$ 时 $V(x') = V(0)$，当 $x'  X_{\\max}$ 时 $V(x') = V(X_{\\max})$。\n\n4.  **值迭代算法：** 我们初始化值函数，通常对于网格上所有的 $x$，令 $V^{(0)}(x) = 0$。然后，我们迭代贝尔曼方程：\n    $$V^{(k+1)}(x_i) = \\max_{s_j \\in \\text{网格}, s_j \\le x_i} \\left\\{ \\sqrt{x_i - s_j} + \\beta \\sum_{l=1}^{n} \\tilde{w}_l V^{(k)}_{\\text{interp}}\\left(G(s_j, \\varepsilon_l)\\right) \\right\\}$$\n    对网格上的每个状态 $x_i$ 进行计算。这里，$V^{(k)}_{\\text{interp}}$ 表示对值向量 $V^{(k)}$ 进行插值的函数。在每一步中，我们还存储为每个 $x_i$ 实现最大值的逃逸量 $s_j$；这定义了第 $k+1$ 次迭代的策略 $s^{(k+1)}(x_i)$。该过程持续进行，直到连续值函数之间的差异可以忽略不计，即 $\\|V^{(k+1)} - V^{(k)}\\|_{\\infty}  10^{-8}$。\n\n5.  **最终答案的推导：** 收敛后，得到最终策略 $s^{\\star}(x)$。所需的摘要统计量 $\\hat{s}^{\\star}$ 是该策略函数在所有 $x \\ge K$ 的网格状态上评估值的中位数。这为策略的预防水平提供了一个单一数字的总结，特别是对于种群充裕的渔业。对每个指定的 $\\sigma$ 值重复此过程。然后按要求格式化结果。", "answer": "```python\nimport numpy as np\nfrom scipy import interpolate\n\ndef solve():\n    \"\"\"\n    Solves a stochastic dynamic programming problem for optimal fishery management\n    using value iteration for different levels of environmental stochasticity.\n    \"\"\"\n    #\n    # --- Model and Numerical Parameters ---\n    #\n    r = 0.6          # Intrinsic growth rate\n    K = 100.0        # Carrying capacity\n    beta = 0.95      # Discount factor\n    \n    Nx = 301         # Number of state grid points\n    X_max = 200.0    # Maximum stock level in the grid\n    n_quad = 15      # Number of Gauss-Hermite quadrature nodes\n    \n    tol = 1e-8       # Convergence tolerance for value iteration\n    max_iter = 2000  # Maximum number of iterations\n\n    # Test cases for environmental standard deviation\n    sigmas = [0.0, 0.1, 0.3, 0.6]\n\n    final_results = []\n\n    #\n    # --- State and Action Space Discretization ---\n    #\n    # The state grid for stock 'x' and action grid for escapement 's' are identical.\n    x_grid = np.linspace(0, X_max, Nx)\n\n    #\n    # --- Gauss-Hermite Quadrature Setup ---\n    #\n    # Get standard nodes and weights for integral with weight func exp(-x^2)\n    nodes_h, weights_h = np.polynomial.hermite.hermgauss(n_quad)\n    # Transform for standard normal distribution N(0,1) with PDF (1/sqrt(2pi))exp(-x^2/2)\n    quad_nodes_std_norm = np.sqrt(2) * nodes_h\n    quad_weights_std_norm = weights_h / np.sqrt(np.pi)\n\n    #\n    # --- Main Loop over Test Cases ---\n    #\n    for sigma in sigmas:\n        #\n        # --- Pre-calculate shock multipliers ---\n        #\n        # The shock is eps ~ N(mu, sigma^2) with mu = -0.5*sigma^2\n        # The multiplicative factor on growth is exp(eps). We pre-calculate\n        # this for each quadrature node.\n        mu_eps = -0.5 * sigma**2\n        exp_eps_nodes = np.exp(mu_eps + sigma * quad_nodes_std_norm)\n        \n        #\n        # --- Value Iteration Initialization ---\n        #\n        V = np.zeros(Nx)  # Initial guess for the value function\n        policy = np.zeros(Nx) # To store the optimal escapement policy\n\n        for k in range(max_iter):\n            V_old = V.copy()\n\n            # Create an interpolant for the current value function.\n            # This is faster than calling np.interp repeatedly inside the loop.\n            # 'bounds_error=False' and 'fill_value=(V_old[0], V_old[-1])'\n            # ensures clamping to the grid endpoints.\n            V_interp_func = interpolate.interp1d(x_grid, V_old, kind='linear', \n                                                 bounds_error=False, \n                                                 fill_value=(V_old[0], V_old[-1]))\n            \n            # Loop through each state on the grid\n            for i, x in enumerate(x_grid):\n                # Possible escapement levels 's' are those = current stock 'x'\n                s_options = x_grid[x_grid = x]\n                if s_options.size == 0:\n                    # This case handles x=0, where only s=0 is possible.\n                    # Value is 0 if starting stock is 0.\n                    V[i] = 0.0\n                    policy[i] = 0.0\n                    continue\n\n                # --- Calculate Q-values for all feasible actions 's' ---\n\n                # 1. Current-period utility: u(h) = sqrt(x-s)\n                harvest = x - s_options\n                # Ensure harvest is non-negative due to float precision\n                harvest[harvest  0] = 0\n                utility = np.sqrt(harvest)\n\n                # 2. Expected continuation value\n                # Growth function part: g(s) = s + r*s*(1-s/K)\n                g_s = s_options + r * s_options * (1 - s_options / K)\n                \n                # Next-period stock under all shock scenarios\n                # Shape: (num_s_options, num_quad_nodes)\n                next_x_matrix = np.outer(g_s, exp_eps_nodes)\n                \n                # Interpolate the value function at all next-period stock levels\n                V_interp = V_interp_func(next_x_matrix)\n                \n                # Calculate the expectation by taking a weighted sum over shocks\n                # This is a matrix-vector product.\n                expected_V = V_interp @ quad_weights_std_norm\n\n                # Bellman evaluation (Q-values)\n                q_values = utility + beta * expected_V\n                \n                # Find the best action and update V and policy\n                best_q_idx = np.argmax(q_values)\n                V[i] = q_values[best_q_idx]\n                policy[i] = s_options[best_q_idx]\n\n            # --- Check for convergence ---\n            if np.max(np.abs(V - V_old))  tol:\n                break\n        \n        #\n        # --- Post-processing: Calculate Summary Statistic ---\n        #\n        # Find indices where stock x >= K\n        high_stock_indices = np.where(x_grid >= K)[0]\n        # Get the optimal escapement policy for these high-stock states\n        high_stock_policy = policy[high_stock_indices]\n        # Compute the median as the summary statistic\n        s_hat_star = np.median(high_stock_policy)\n        \n        final_results.append(s_hat_star)\n\n    #\n    # --- Format and Print Final Output ---\n    #\n    formatted_results = [f\"{res:.3f}\" for res in final_results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2516796"}]}