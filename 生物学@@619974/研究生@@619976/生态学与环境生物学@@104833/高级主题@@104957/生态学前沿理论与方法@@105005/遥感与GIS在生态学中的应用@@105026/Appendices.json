{"hands_on_practices": [{"introduction": "本实践深入探讨遥感探测的物理基础。我们将探索传感器设计（特别是其光谱带宽 $σ_R$）与其探测特定生态信号（宽度为 $σ_L$）能力之间的关系。这项练习为理解为何选择合适的传感器对研究成功至关重要，以及传感器限制如何影响数据质量提供了理论基础。[@problem_id:2528013]", "problem": "一台高光谱成像仪用于一项生态应用（例如，探测湿地中叶绿素浓度的梯度），绘制以波长 $\\lambda_{0}$ 为中心的植被色素吸收特征。传感器的光谱响应函数被建模为高斯函数\n$$\nR(\\lambda) \\;=\\; \\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big),\n$$\n其中 $\\sigma_{R}$ 是传感器的光谱标准差（一种带宽的度量）。传感器上的入射光谱辐亮度被建模为一个连续谱辐亮度 $L_{c}$，其上叠加一个相对深度为 $d$、生态特征宽度为 $\\sigma_{L}$ 的高斯吸收凹陷，\n$$\nL_{\\lambda} \\;=\\; L_{c}\\,\\Big[\\,1 \\;-\\; d\\,\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{L}^{2}}\\Big)\\Big], \\quad \\text{其中 } 0<d<1.\n$$\n你将使用传感器波段平均辐亮度的定义\n$$\n\\bar{L} \\;=\\; \\frac{\\displaystyle \\int_{-\\infty}^{\\infty} L_{\\lambda}\\,R(\\lambda)\\,d\\lambda}{\\displaystyle \\int_{-\\infty}^{\\infty} R(\\lambda)\\,d\\lambda}.\n$$\n任务：\n- 推导出 $\\bar{L}$ 关于 $L_{c}$、$d$、$\\sigma_{L}$ 和 $\\sigma_{R}$ 的闭式表达式。\n- 为量化生态吸收特征的可探测性，假设仪器受光子散粒噪声限制，因此探测到的光电子的方差等于其均值。设探测到的光电子为 $C \\,=\\, \\kappa \\int_{-\\infty}^{\\infty} L_{\\lambda}\\,R(\\lambda)\\,d\\lambda$，其中 $\\kappa>0$ 是一个包含了光学通量、积分时间和物理常数的常数。将对比度噪声比（CNR）定义为\n$$\n\\mathrm{CNR} \\;=\\; \\frac{C_{\\mathrm{cont}} - C_{\\mathrm{feat}}}{\\sqrt{C_{\\mathrm{feat}}}},\n$$\n其中 $C_{\\mathrm{cont}}$ 是当 $L_{\\lambda}=L_{c}$ 时（无特征）的计数，而 $C_{\\mathrm{feat}}$ 是存在吸收特征时的计数。在简化 $\\mathrm{CNR}$ 时，假设 $d$ 足够小，使得 $\\sqrt{C_{\\mathrm{feat}}}\\approx \\sqrt{C_{\\mathrm{cont}}}$。从第一性原理和经过充分检验的高斯积分恒等式出发，推导出 $\\mathrm{CNR}(\\sigma_{R})$（结果可包含不依赖于 $\\sigma_{R}$ 的乘法常数），然后确定使 $\\mathrm{CNR}(\\sigma_{R})$ 最大化的 $\\sigma_{R}$ 的值。\n将你的最终答案报告为最优 $\\sigma_{R}$ 的闭式解析表达式，记作 $\\sigma_{R}^{\\star}$，仅用 $\\sigma_{L}$ 表示。最终报告的表达式中不要包含单位。", "solution": "我们从传感器波段平均辐亮度的定义开始，\n$$\n\\bar{L} \\;=\\; \\frac{\\displaystyle \\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda}{\\displaystyle \\int_{-\\infty}^{\\infty} R(\\lambda)\\,d\\lambda}.\n$$\n已知\n$$\nR(\\lambda)=\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big),\\quad\nL_{\\lambda}=L_{c}\\Big[1-d\\,\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{L}^{2}}\\Big)\\Big],\n$$\n分母是标准的高斯积分\n$$\n\\int_{-\\infty}^{\\infty} R(\\lambda)\\,d\\lambda \\;=\\; \\int_{-\\infty}^{\\infty} \\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big)\\,d\\lambda \\;=\\; \\sqrt{2\\pi}\\,\\sigma_{R}.\n$$\n对于分子，\n\\begin{align*}\n\\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda\n&= L_{c}\\int_{-\\infty}^{\\infty}\\Big[1-d\\,\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{L}^{2}}\\Big)\\Big]\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big)\\,d\\lambda\\\\\n&= L_{c}\\int_{-\\infty}^{\\infty}\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big)\\,d\\lambda \\;-\\; L_{c}d \\int_{-\\infty}^{\\infty}\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2}\\Big[\\frac{1}{\\sigma_{R}^{2}}+\\frac{1}{\\sigma_{L}^{2}}\\Big]\\Big)\\,d\\lambda.\n\\end{align*}\n定义组合方差 $\\sigma_{C}^{2}$ 为\n$$\n\\frac{1}{\\sigma_{C}^{2}} \\;=\\; \\frac{1}{\\sigma_{R}^{2}}+\\frac{1}{\\sigma_{L}^{2}}\n\\quad\\Longrightarrow\\quad\n\\sigma_{C}^{2} \\;=\\; \\frac{\\sigma_{R}^{2}\\sigma_{L}^{2}}{\\sigma_{R}^{2}+\\sigma_{L}^{2}},\\qquad\n\\sigma_{C} \\;=\\; \\frac{\\sigma_{R}\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}.\n$$\n因此，\n$$\n\\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda \\;=\\; L_{c}\\,\\sqrt{2\\pi}\\,\\sigma_{R} \\;-\\; L_{c}d\\,\\sqrt{2\\pi}\\,\\sigma_{C}.\n$$\n因此，波段平均辐亮度为\n\\begin{align*}\n\\bar{L}\n&= \\frac{L_{c}\\sqrt{2\\pi}\\,\\sigma_{R} - L_{c}d\\,\\sqrt{2\\pi}\\,\\sigma_{C}}{\\sqrt{2\\pi}\\,\\sigma_{R}}\n\\;=\\; L_{c}\\Big[1 - d\\,\\frac{\\sigma_{C}}{\\sigma_{R}}\\Big]\n\\;=\\; L_{c}\\Big[1 - d\\,\\frac{\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}\\Big].\n\\end{align*}\n这个表达式表明，随着 $\\sigma_{R}$ 减小，特征引起的 $\\bar{L}$ 的减小量会增加，当 $\\sigma_{R}\\to 0$ 时接近其内在深度 $d$；而当 $\\sigma_{R}\\to\\infty$ 时，该特征被平均掉了。\n\n接下来，我们形式化地表示可探测性。在散粒噪声模型下，探测到的光电子为\n$$\nC \\;=\\; \\kappa \\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda,\\qquad \\kappa>0,\n$$\n其方差等于均值。连续谱和特征之间的计数对比度为\n\\begin{align*}\nS \\;=\\; C_{\\mathrm{cont}} - C_{\\mathrm{feat}}\n&= \\kappa\\Big(\\int L_{c}R\\,d\\lambda - \\int L_{\\lambda}R\\,d\\lambda\\Big)\n= \\kappa \\Big(L_{c}\\sqrt{2\\pi}\\,\\sigma_{R} - [L_{c}\\sqrt{2\\pi}\\,\\sigma_{R} - L_{c}d\\sqrt{2\\pi}\\,\\sigma_{C}]\\Big)\\\\\n&= \\kappa L_{c}d\\,\\sqrt{2\\pi}\\,\\sigma_{C}\n\\;=\\; \\kappa L_{c}d\\,\\sqrt{2\\pi}\\,\\frac{\\sigma_{R}\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}.\n\\end{align*}\n特征测量的噪声标准差为 $\\sqrt{C_{\\mathrm{feat}}}$。在小深度近似下（$d$ 足够小），\n$$\n\\sqrt{C_{\\mathrm{feat}}} \\;\\approx\\; \\sqrt{C_{\\mathrm{cont}}} \\;=\\; \\sqrt{\\kappa L_{c}\\int R\\,d\\lambda} \\;=\\; \\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}\\,\\sigma_{R}}.\n$$\n因此，对比度噪声比（CNR）为\n\\begin{align*}\n\\mathrm{CNR}(\\sigma_{R})\n&= \\frac{S}{\\sqrt{C_{\\mathrm{feat}}}}\n\\;\\approx\\; \\frac{\\kappa L_{c}d\\,\\sqrt{2\\pi}\\,\\dfrac{\\sigma_{R}\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}}{\\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}\\,\\sigma_{R}}}\\\\\n&= d\\,\\sigma_{L}\\;\\frac{\\sqrt{\\sigma_{R}}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}\\;\\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}}.\n\\end{align*}\n乘法因子 $\\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}}$ 与 $\\sigma_{R}$ 无关，因此最大化 $\\mathrm{CNR}(\\sigma_{R})$ 相对于 $\\sigma_{R}$ 等价于最大化\n$$\ng(\\sigma_{R}) \\;=\\; \\frac{\\sqrt{\\sigma_{R}}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}.\n$$\n为方便起见，我们转而最大化 $g^{2}(\\sigma_{R})$：\n$$\ng^{2}(\\sigma_{R}) \\;=\\; \\frac{\\sigma_{R}}{\\sigma_{R}^{2}+\\sigma_{L}^{2}}.\n$$\n对 $\\sigma_{R}$ 求导并令其为零：\n\\begin{align*}\n\\frac{d}{d\\sigma_{R}} g^{2}(\\sigma_{R})\n&= \\frac{(\\sigma_{R}^{2}+\\sigma_{L}^{2}) - \\sigma_{R}(2\\sigma_{R})}{(\\sigma_{R}^{2}+\\sigma_{L}^{2})^{2}}\n= \\frac{\\sigma_{L}^{2}-\\sigma_{R}^{2}}{(\\sigma_{R}^{2}+\\sigma_{L}^{2})^{2}}\n\\;=\\; 0\n\\quad\\Longrightarrow\\quad \\sigma_{R}^{2} \\;=\\; \\sigma_{L}^{2}.\n\\end{align*}\n二阶导数检验，或通过观察 $g^{2}(\\sigma_{R})$ 的形式，可以确认这是一个最大值。因此，\n$$\n\\sigma_{R}^{\\star} \\;=\\; \\sigma_{L}.\n$$\n对生态信号可探测性的解释：减小 $\\sigma_{R}$ 会增强 $\\bar{L}$ 中的特征对比度，但会减少光子通量，从而增加散粒噪声；增大 $\\sigma_{R}$ 会增加光子数，但会稀释光谱特征。当传感器的光谱标准差与生态特征的光谱标准差相匹配时，这两种相反效应会产生一个最优带宽，从而使对比度噪声比最大化。", "answer": "$$\\boxed{\\sigma_{L}}$$", "id": "2528013"}, {"introduction": "在掌握了基本原理之后，本实践将引导您完成一个完整且真实的遥感工作流程。您将实施一个算法来绘制野火火烧烈度图，这是生态系统管理中的一项关键任务。此过程涉及校正地形对反射率的影响，计算专门的光谱指数，并根据实地数据验证您的结果，从而将物理学、数据处理和统计验证整合到一个项目中。[@problem_id:2527969]", "problem": "本问题提供小型的合成栅格瓦片，代表火前和火后的多光谱反射率，以及地形坡度、坡向和太阳几何参数。您的任务是实现一个物理上一致的算法，该算法对反射率波段执行地形光照校正，计算一个源自归一化差异指数变化的燃烧严重度度量，并通过定标和留出法评估，使用实地综合燃烧指数（CBI）样地测量数据对其进行验证。\n\n本问题的基本原理如下。\n\n- 在朗伯体表面假设下，倾斜表面上的入射辐照度与局部太阳入射角的余弦成正比。如果太阳天顶角表示为 $\\theta_{z}$，地形坡度为 $\\alpha$，坡向为 $\\gamma$，太阳方位角为 $\\phi_{s}$，那么入射角的余弦由下式给出\n$$\n\\cos i \\;=\\; \\cos \\alpha \\,\\cos \\theta_{z} \\;+\\; \\sin \\alpha \\,\\sin \\theta_{z} \\,\\cos(\\phi_{s}-\\gamma).\n$$\n在计算中，所有角度都必须以弧度处理。太阳天顶角 $\\theta_{z}$ 与太阳高度角 $\\varepsilon_{s}$ 的关系为 $\\theta_{z} = \\pi/2 - \\varepsilon_{s}$。$\\cos i \\le 0$ 的像素处于相对于太阳的自阴影中，必须从进一步的分析中排除。\n\n- 对于朗伯体表面，一个简单的余弦地形校正通过下式将观测到的反射率 $R_{\\text{obs}}$ 缩放为地形归一化反射率 $R_{\\text{corr}}$\n$$\nR_{\\text{corr}} \\;=\\; R_{\\text{obs}} \\cdot \\frac{\\cos \\theta_{z}}{\\cos i},\n$$\n仅在 $\\cos i > 0$ 时应用；否则，该像素的反射率应被视为无效。\n\n- 近红外波段 $R_{N}$ 和短波红外波段 $R_{S}$ 之间的双波段归一化差异指数定义为\n$$\nI \\;=\\; \\frac{R_{N} - R_{S}}{R_{N} + R_{S}},\n$$\n仅在分母不为零时计算。\n\n- 时序指数变化为 $\\Delta I = I_{\\text{pre}} - I_{\\text{post}}$。通过火前事件的数值大小对变化进行归一化的相对差异指数由下式获得\n$$\nI_{R} \\;=\\; \\frac{\\Delta I}{\\sqrt{\\lvert I_{\\text{pre}} \\rvert + \\epsilon}},\n$$\n其中有一个小的稳定项 $\\epsilon = 10^{-6}$ 以避免除以零。在此任务中，$I$ 是根据地形校正后的近红外和短波红外反射率计算得出的，而 $I_{R}$ 是待与综合燃烧指数（CBI）进行验证的燃烧严重度度量。\n\n- 为使用CBI验证 $I_{R}$，在样地位置的定标子集上拟合一个线性模型，\n$$\n\\widehat{\\mathrm{CBI}} \\;=\\; a \\, I_{R} \\;+\\; b,\n$$\n通过普通最小二乘法，并在验证子集上报告留出法的均方根误差（RMSE），\n$$\n\\mathrm{RMSE} \\;=\\; \\sqrt{\\frac{1}{n}\\sum_{k=1}^{n} \\left(\\mathrm{CBI}_{k} - \\widehat{\\mathrm{CBI}}_{k}\\right)^{2}}.\n$$\n\n角度单位和反射率单位。\n\n- 所有输入角度均以度为单位提供。您的实现必须将其转换为弧度以进行三角函数计算。任何中间推导所需的角度单位均为弧度。太阳高度角和方位角遵循遥感领域的通用惯例：方位角从地理北方向顺时针测量，坡向从北方向顺时针测量，坡度是与水平面的倾角。\n- 反射率值为 $[0,1]$ 范围内的无量纲分数。\n\n数值要求与掩膜。\n\n- 对火前和火后图像中的近红外和短波红外波段独立进行地形校正。\n- 任何满足 $\\cos i \\le 0$ 的像素，或在归一化差异计算中分母为零的像素，都必须被视为无效；在样地提取中不要包含无效像素。\n- 在相对差异指数归一化中使用 $\\epsilon = 10^{-6}$ 。\n\n测试套件。\n\n实现您的程序来处理以下三种情况。每种情况都提供了火前和火后近红外（NIR）和短波红外（SWIR）反射率的 $3 \\times 3$ 数组、地形坡度和坡向、标量的太阳高度角和方位角、作为从零开始的行列对的样地位置列表、相应的CBI值列表，以及定标和验证子集的划分。\n\n情况 A。\n\n- 火前NIR反射率 $R_{N,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.45 & 0.42 & 0.40 \\\\\n0.43 & 0.41 & 0.44 \\\\\n0.46 & 0.40 & 0.42\n\\end{bmatrix}\n$$\n- 火前SWIR反射率 $R_{S,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.14 & 0.15 & 0.16 \\\\\n0.13 & 0.17 & 0.15 \\\\\n0.14 & 0.16 & 0.13\n\\end{bmatrix}\n$$\n- 火后NIR反射率 $R_{N,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.30 & 0.28 & 0.26 \\\\\n0.27 & 0.29 & 0.25 \\\\\n0.28 & 0.26 & 0.24\n\\end{bmatrix}\n$$\n- 火后SWIR反射率 $R_{S,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.22 & 0.24 & 0.23 \\\\\n0.25 & 0.22 & 0.24 \\\\\n0.26 & 0.23 & 0.25\n\\end{bmatrix}\n$$\n- 坡度（度） $\\alpha$:\n$$\n\\begin{bmatrix}\n15 & 20 & 10 \\\\\n25 & 15 & 30 \\\\\n12 & 18 & 22\n\\end{bmatrix}\n$$\n- 坡向（度） $\\gamma$:\n$$\n\\begin{bmatrix}\n90 & 120 & 150 \\\\\n135 & 180 & 210 \\\\\n60 & 75 & 105\n\\end{bmatrix}\n$$\n- 太阳高度角（度） $\\varepsilon_{s} = 45$，太阳方位角（度） $\\phi_{s} = 135$。\n- 样地位置（从零开始的索引）： $\\{(0,0), (0,2), (1,1), (1,2), (2,0), (2,2)\\}$，对应的CBI值为 $\\{0.90, 0.80, 1.10, 1.20, 0.85, 1.00\\}$。\n- 定标子集位置： $\\{(0,0), (0,2), (1,1), (2,2)\\}$。验证子集位置： $\\{(1,2), (2,0)\\}$。\n\n情况 B。\n\n- 火前NIR反射率 $R_{N,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.50 & 0.48 & 0.47 \\\\\n0.49 & 0.51 & 0.50 \\\\\n0.48 & 0.47 & 0.49\n\\end{bmatrix}\n$$\n- 火前SWIR反射率 $R_{S,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.12 & 0.13 & 0.12 \\\\\n0.14 & 0.12 & 0.13 \\\\\n0.15 & 0.13 & 0.14\n\\end{bmatrix}\n$$\n- 火后NIR反射率 $R_{N,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.46 & 0.45 & 0.44 \\\\\n0.45 & 0.47 & 0.46 \\\\\n0.46 & 0.44 & 0.45\n\\end{bmatrix}\n$$\n- 火后SWIR反射率 $R_{S,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.13 & 0.14 & 0.13 \\\\\n0.15 & 0.13 & 0.14 \\\\\n0.16 & 0.14 & 0.15\n\\end{bmatrix}\n$$\n- 坡度（度） $\\alpha$:\n$$\n\\begin{bmatrix}\n0 & 0 & 0 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n- 坡向（度） $\\gamma$:\n$$\n\\begin{bmatrix}\n0 & 0 & 0 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n- 太阳高度角（度） $\\varepsilon_{s} = 60$，太阳方位角（度） $\\phi_{s} = 150$。\n- 样地位置： $\\{(0,0), (0,1), (1,0), (1,2), (2,1), (2,2)\\}$，对应的CBI值为 $\\{0.35, 0.40, 0.38, 0.45, 0.42, 0.50\\}$。\n- 定标子集位置： $\\{(0,0), (0,1), (1,0), (2,1)\\}$。验证子集位置： $\\{(1,2), (2,2)\\}$。\n\n情况 C。\n\n- 火前NIR反射率 $R_{N,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.43 & 0.42 & 0.20 \\\\\n0.44 & 0.46 & 0.21 \\\\\n0.45 & 0.47 & 0.22\n\\end{bmatrix}\n$$\n- 火前SWIR反射率 $R_{S,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.18 & 0.19 & 0.20 \\\\\n0.17 & 0.18 & 0.21 \\\\\n0.19 & 0.20 & 0.22\n\\end{bmatrix}\n$$\n- 火后NIR反射率 $R_{N,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.25 & 0.24 & 0.18 \\\\\n0.26 & 0.27 & 0.19 \\\\\n0.24 & 0.26 & 0.20\n\\end{bmatrix}\n$$\n- 火后SWIR反射率 $R_{S,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.28 & 0.30 & 0.22 \\\\\n0.29 & 0.27 & 0.23 \\\\\n0.30 & 0.28 & 0.24\n\\end{bmatrix}\n$$\n- 坡度（度） $\\alpha$:\n$$\n\\begin{bmatrix}\n50 & 60 & 70 \\\\\n65 & 75 & 80 \\\\\n55 & 45 & 70\n\\end{bmatrix}\n$$\n- 坡向（度） $\\gamma$:\n$$\n\\begin{bmatrix}\n200 & 220 & 180 \\\\\n200 & 160 & 140 \\\\\n220 & 200 & 110\n\\end{bmatrix}\n$$\n- 太阳高度角（度） $\\varepsilon_{s} = 30$，太阳方位角（度） $\\phi_{s} = 200$。\n- 样地位置： $\\{(0,0), (0,1), (1,0), (1,1), (2,1), (2,2)\\}$，对应的CBI值为 $\\{2.20, 2.00, 2.40, 1.80, 2.10, 1.60\\}$。\n- 定标子集位置： $\\{(0,0), (0,1), (1,0), (1,1)\\}$。验证子集位置： $\\{(2,1), (2,2)\\}$。\n\n程序要求。\n\n- 按照描述实现朗伯体余弦地形校正，在三角函数计算中使用弧度。排除 $\\cos i \\le 0$ 的像素。\n- 根据校正后的波段计算火前和火后图像的归一化差异指数。计算时序变化和相对差异度量 $I_{R}$，使用 $\\epsilon = 10^{-6}$。\n- 对于每种情况，在指定的样地位置提取 $I_{R}$ 值，通过最小二乘法在定标子集上拟合一个线性模型，并在验证子集上计算RMSE。\n- 您的程序应生成单行输出，其中包含分别为情况 A、B 和 C 的三个RMSE值，每个值四舍五入到四位小数，形式为用方括号括起来的逗号分隔列表（例如，$\\left[\\mathrm{r}_{A},\\mathrm{r}_{B},\\mathrm{r}_{C}\\right]$）。\n\n最终输出必须严格遵循以下格式：单行，包含一个方括号内的三个浮点数列表，无任何其他内容。", "solution": "该问题陈述经过了严格的验证，并被确定为科学上合理、定义明确、客观且自洽的。它描述了生态应用中定量遥感的标准工作流程，特别是燃烧严重度评估。其物理原理、数学公式和数据处理步骤均基于已确立的方法。所提供的数据对于此任务是完整且一致的。因此，有必要提供一个解法。\n\n该解法系统地分为几个阶段：地形建模、辐射校正、光谱指数计算和统计验证。每个阶段都应用于每个测试用例提供的栅格数据。\n\n**1. 初步设置与角度转换**\n\n初始步骤是准备用于计算的几何参数。所有以度为单位提供的角度都必须转换为弧度，因为计算库中的三角函数以弧度为单位进行运算。设 $\\alpha_{\\text{deg}}$、$\\gamma_{\\text{deg}}$、$\\varepsilon_{s, \\text{deg}}$ 和 $\\phi_{s, \\text{deg}}$ 分别为以度为单位的输入坡度、坡向、太阳高度角和太阳方位角。转换公式为：\n$$ \\alpha = \\alpha_{\\text{deg}} \\cdot \\frac{\\pi}{180}, \\quad \\gamma = \\gamma_{\\text{deg}} \\cdot \\frac{\\pi}{180}, \\quad \\varepsilon_{s} = \\varepsilon_{s, \\text{deg}} \\cdot \\frac{\\pi}{180}, \\quad \\phi_{s} = \\phi_{s, \\text{deg}} \\cdot \\frac{\\pi}{180} $$\n太阳天顶角 $\\theta_{z}$ 由太阳高度角 $\\varepsilon_{s}$ 导出：\n$$ \\theta_{z} = \\frac{\\pi}{2} - \\varepsilon_{s} $$\n这些计算对坡度和坡向的每个像素执行，对于太阳角度则作为标量值执行。\n\n**2. 光照建模与地形校正**\n\n物理校正的核心在于对倾斜表面上的太阳光照进行建模。假设为朗伯体表面，局部辐照度与太阳入射角的余弦 $\\cos i$ 成正比。这通过以下公式为每个像素计算：\n$$ \\cos i = \\cos \\alpha \\cos \\theta_{z} + \\sin \\alpha \\sin \\theta_{z} \\cos(\\phi_{s} - \\gamma) $$\n一个关键条件是，只有在 $\\cos i > 0$ 时像素才被照亮。$\\cos i \\le 0$ 的像素处于自阴影中，必须从分析中排除。这些无效像素被标记，例如，通过为其分配一个“非数字”（`NaN`）值。\n\n对于所有有效（被照亮）的像素，观测到的反射率 $R_{\\text{obs}}$ 被校正以归一化地形效应。校正后的反射率 $R_{\\text{corr}}$ 模拟了表面平坦时的反射率。此余弦校正的公式为：\n$$ R_{\\text{corr}} = R_{\\text{obs}} \\cdot \\frac{\\cos \\theta_{z}}{\\cos i} $$\n此校正独立应用于四个输入反射率波段中的每一个：火前近红外（$R_{N,\\text{pre}}$）、火前短波红外（$R_{S,\\text{pre}}$）、火后近红外（$R_{N,\\text{post}}$）和火后短波红外（$R_{S,\\text{post}}$）。阴影像素的反射率值被设置为 `NaN`。\n\n**3. 燃烧严重度指数计算**\n\n使用经过地形校正的反射率值，我们可以计算对地形效应更具鲁棒性的光谱指数。对火前和火后时期都计算一个归一化差异指数 $I$，使用校正后的近红外（$R_{N,\\text{corr}}$）和短波红外（$R_{S,\\text{corr}}$）波段。\n$$ I_{\\text{pre}} = \\frac{R_{N,\\text{pre,corr}} - R_{S,\\text{pre,corr}}}{R_{N,\\text{pre,corr}} + R_{S,\\text{pre,corr}}} $$\n$$ I_{\\text{post}} = \\frac{R_{N,\\text{post,corr}} - R_{S,\\text{post,corr}}}{R_{N,\\text{post,corr}} + R_{S,\\text{post,corr}}} $$\n任何分母 $(R_{N,\\text{corr}} + R_{S,\\text{corr}})$ 为零，或输入反射率为 `NaN` 的像素，都将产生 `NaN` 结果，从而确保无效数据得以传播。\n\n根据这些指数，计算由火灾引起的变化 $\\Delta I$：\n$$ \\Delta I = I_{\\text{pre}} - I_{\\text{post}} $$\n为了创建最终的燃烧严重度度量 $I_{R}$，此变化相对于火前指数的量级进行归一化。添加了一个小的稳定项 $\\epsilon = 10^{-6}$，以防止除以零或接近零的值。\n$$ I_{R} = \\frac{\\Delta I}{\\sqrt{|I_{\\text{pre}}| + \\epsilon}} $$\n得到的 $I_R$ 栅格是用于与实地数据进行验证的主要输入。\n\n**4. 使用实地数据进行统计验证**\n\n最后阶段是将导出的 $I_R$ 度量与地面实况的综合燃烧指数（CBI）测量值进行验证。对于每个测试用例，我们都获得了一组样地位置、它们对应的CBI值，以及定标和验证子集的划分。\n\n首先，为每个样地位置提取 $I_R$ 值和CBI值。如果任何样地位置对应于 $I_R$ 栅格中值为 `NaN` 的像素，则根据问题规范，该样地将从分析中舍弃。\n\n接下来，使用数据的定标子集拟合一个简单的线性回归模型：\n$$ \\widehat{\\mathrm{CBI}} = a \\cdot I_{R} + b $$\n系数 $a$（斜率）和 $b$（截距）通过普通最小二乘法（OLS）确定。这在我们的遥感度量和实地测量的燃烧严重度之间建立了一个预测关系。\n\n最后，在留出的验证子集上评估此模型的性能。使用拟合的模型，根据每个验证点 $k$ 的 $I_{R,k}$ 值来预测其CBI值（$\\widehat{\\mathrm{CBI}}_{k}$）。然后计算均方根误差（RMSE）以量化预测误差：\n$$ \\mathrm{RMSE} = \\sqrt{\\frac{1}{n} \\sum_{k=1}^{n} (\\mathrm{CBI}_{k} - \\widehat{\\mathrm{CBI}}_{k})^{2}} $$\n其中 $n$ 是验证集中的有效点数。这个RMSE值作为每种情况的最终结果，为算法的准确性提供了定量度量。对三个测试用例中的每一个重复整个过程。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import linregress\n\ndef solve():\n    \"\"\"\n    Main function to process all test cases and print the final results.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A\n        {\n            \"R_n_pre\": np.array([[0.45, 0.42, 0.40], [0.43, 0.41, 0.44], [0.46, 0.40, 0.42]]),\n            \"R_s_pre\": np.array([[0.14, 0.15, 0.16], [0.13, 0.17, 0.15], [0.14, 0.16, 0.13]]),\n            \"R_n_post\": np.array([[0.30, 0.28, 0.26], [0.27, 0.29, 0.25], [0.28, 0.26, 0.24]]),\n            \"R_s_post\": np.array([[0.22, 0.24, 0.23], [0.25, 0.22, 0.24], [0.26, 0.23, 0.25]]),\n            \"slope\": np.array([[15, 20, 10], [25, 15, 30], [12, 18, 22]]),\n            \"aspect\": np.array([[90, 120, 150], [135, 180, 210], [60, 75, 105]]),\n            \"solar_elev\": 45, \"solar_azim\": 135,\n            \"plot_cbi\": {(0, 0): 0.90, (0, 2): 0.80, (1, 1): 1.10, (1, 2): 1.20, (2, 0): 0.85, (2, 2): 1.00},\n            \"cal_locs\": [(0, 0), (0, 2), (1, 1), (2, 2)],\n            \"val_locs\": [(1, 2), (2, 0)],\n        },\n        # Case B\n        {\n            \"R_n_pre\": np.array([[0.50, 0.48, 0.47], [0.49, 0.51, 0.50], [0.48, 0.47, 0.49]]),\n            \"R_s_pre\": np.array([[0.12, 0.13, 0.12], [0.14, 0.12, 0.13], [0.15, 0.13, 0.14]]),\n            \"R_n_post\": np.array([[0.46, 0.45, 0.44], [0.45, 0.47, 0.46], [0.46, 0.44, 0.45]]),\n            \"R_s_post\": np.array([[0.13, 0.14, 0.13], [0.15, 0.13, 0.14], [0.16, 0.14, 0.15]]),\n            \"slope\": np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0]]),\n            \"aspect\": np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0]]),\n            \"solar_elev\": 60, \"solar_azim\": 150,\n            \"plot_cbi\": {(0, 0): 0.35, (0, 1): 0.40, (1, 0): 0.38, (1, 2): 0.45, (2, 1): 0.42, (2, 2): 0.50},\n            \"cal_locs\": [(0, 0), (0, 1), (1, 0), (2, 1)],\n            \"val_locs\": [(1, 2), (2, 2)],\n        },\n        # Case C\n        {\n            \"R_n_pre\": np.array([[0.43, 0.42, 0.20], [0.44, 0.46, 0.21], [0.45, 0.47, 0.22]]),\n            \"R_s_pre\": np.array([[0.18, 0.19, 0.20], [0.17, 0.18, 0.21], [0.19, 0.20, 0.22]]),\n            \"R_n_post\": np.array([[0.25, 0.24, 0.18], [0.26, 0.27, 0.19], [0.24, 0.26, 0.20]]),\n            \"R_s_post\": np.array([[0.28, 0.30, 0.22], [0.29, 0.27, 0.23], [0.30, 0.28, 0.24]]),\n            \"slope\": np.array([[50, 60, 70], [65, 75, 80], [55, 45, 70]]),\n            \"aspect\": np.array([[200, 220, 180], [200, 160, 140], [220, 200, 110]]),\n            \"solar_elev\": 30, \"solar_azim\": 200,\n            \"plot_cbi\": {(0, 0): 2.20, (0, 1): 2.00, (1, 0): 2.40, (1, 1): 1.80, (2, 1): 2.10, (2, 2): 1.60},\n            \"cal_locs\": [(0, 0), (0, 1), (1, 0), (1, 1)],\n            \"val_locs\": [(2, 1), (2, 2)],\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        rmse = process_case(case)\n        results.append(f\"{rmse:.4f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef process_case(case):\n    \"\"\"\n    Processes a single test case from data preparation to RMSE calculation.\n    \"\"\"\n    epsilon = 1e-6\n\n    # 1. Convert angles to radians and calculate solar zenith\n    slope_rad = np.deg2rad(case[\"slope\"])\n    aspect_rad = np.deg2rad(case[\"aspect\"])\n    solar_elev_rad = np.deg2rad(case[\"solar_elev\"])\n    solar_azim_rad = np.deg2rad(case[\"solar_azim\"])\n    solar_zenith_rad = np.pi / 2 - solar_elev_rad\n    \n    # 2. Illumination modeling\n    cos_i = (np.cos(slope_rad) * np.cos(solar_zenith_rad) +\n             np.sin(slope_rad) * np.sin(solar_zenith_rad) * np.cos(solar_azim_rad - aspect_rad))\n\n    # Mask for shadowed areas\n    valid_mask = cos_i > 0\n    \n    # 3. Topographic correction function\n    def correct_reflectance(r_obs):\n        r_corr = np.full_like(r_obs, np.nan, dtype=np.float64)\n        corr_factor = np.cos(solar_zenith_rad) / cos_i[valid_mask]\n        r_corr[valid_mask] = r_obs[valid_mask] * corr_factor\n        return r_corr\n\n    r_n_pre_corr = correct_reflectance(case[\"R_n_pre\"])\n    r_s_pre_corr = correct_reflectance(case[\"R_s_pre\"])\n    r_n_post_corr = correct_reflectance(case[\"R_n_post\"])\n    r_s_post_corr = correct_reflectance(case[\"R_s_post\"])\n\n    # 4. Normalized difference index calculation function\n    def calculate_ndi(r_n, r_s):\n        denominator = r_n + r_s\n        # Suppress division by zero warning, as we handle it\n        with np.errstate(divide='ignore', invalid='ignore'):\n            ndi = (r_n - r_s) / denominator\n        # Set to NaN where denominator is zero or inputs were NaN\n        ndi[denominator == 0] = np.nan\n        return ndi\n\n    i_pre = calculate_ndi(r_n_pre_corr, r_s_pre_corr)\n    i_post = calculate_ndi(r_n_post_corr, r_s_post_corr)\n\n    # 5. Burn severity metric calculation\n    delta_i = i_pre - i_post\n    # Suppress invalid value warning from sqrt of negative number\n    with np.errstate(invalid='ignore'):\n        i_r = delta_i / np.sqrt(np.abs(i_pre) + epsilon)\n\n    # 6. Extract data and perform validation\n    cal_ir, cal_cbi = [], []\n    for r, c in case[\"cal_locs\"]:\n        ir_val = i_r[r, c]\n        if not np.isnan(ir_val):\n            cal_ir.append(ir_val)\n            cal_cbi.append(case[\"plot_cbi\"][(r, c)])\n    \n    val_ir, val_cbi = [], []\n    for r, c in case[\"val_locs\"]:\n        ir_val = i_r[r, c]\n        if not np.isnan(ir_val):\n            val_ir.append(ir_val)\n            val_cbi.append(case[\"plot_cbi\"][(r, c)])\n\n    cal_ir, cal_cbi = np.array(cal_ir), np.array(cal_cbi)\n    val_ir, val_cbi = np.array(val_ir), np.array(val_cbi)\n\n    if len(cal_ir) < 2 or len(val_ir) == 0:\n        return np.nan # Not enough data to fit model or validate\n\n    # 7. Linear regression on calibration data\n    slope, intercept, _, _, _ = linregress(cal_ir, cal_cbi)\n    \n    # 8. Predict on validation data and compute RMSE\n    pred_cbi = slope * val_ir + intercept\n    rmse = np.sqrt(np.mean((val_cbi - pred_cbi)**2))\n    \n    return rmse\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2527969"}, {"introduction": "遥感产品，例如一张生境地图，永远不可能是完美的。这项至关重要的实践将教您如何量化分类图中的不确定性，并利用这些信息生成统计上可靠的面积估算。通过练习从混淆矩阵计算校正后区域面积及其置信区间，您将掌握一项以科学严谨性报告研究成果的关键技能。[@problem_id:2527995]", "problem": "一份由卫星地球观测生成并在地理信息系统（GIS）中分析的区域生境地图，将总面积为 $A = 25000$ $\\mathrm{km^2}$ 的景观划分为 $K = 4$ 个地图类别：森林、农业、湿地和城市。地图上各类的面积为：$M_{\\text{森林}} = 12000$ $\\mathrm{km^2}$，$M_{\\text{农业}} = 9000$ $\\mathrm{km^2}$，$M_{\\text{湿地}} = 3000$ $\\mathrm{km^2}$，以及 $M_{\\text{城市}} = 1000$ $\\mathrm{km^2}$。一项精度评估采用分层随机抽样，以地图类别作为分层。在每个层内，从甚高分辨率影像中判读一个独立的参考位置简单随机样本。按地图类别划分的样本量为：$n_{\\text{森林}} = 200$，$n_{\\text{农业}} = 150$，$n_{\\text{湿地}} = 120$，以及 $n_{\\text{城市}} = 80$。得到的计数混淆矩阵 $n_{ij}$（行 $i$ = 地图类别，列 $j$ = 参考类别）如下：\n- 地图森林类：$n_{\\text{森林},\\text{森林}} = 178$，$n_{\\text{森林},\\text{农业}} = 12$，$n_{\\text{森林},\\text{湿地}} = 8$，$n_{\\text{森林},\\text{城市}} = 2$。\n- 地图农业类：$n_{\\text{农业},\\text{森林}} = 9$，$n_{\\text{农业},\\text{农业}} = 126$，$n_{\\text{农业},\\text{湿地}} = 10$，$n_{\\text{农业},\\text{城市}} = 5$。\n- 地图湿地类：$n_{\\text{湿地},\\text{森林}} = 6$，$n_{\\text{湿地},\\text{农业}} = 16$，$n_{\\text{湿地},\\text{湿地}} = 92$，$n_{\\text{湿地},\\text{城市}} = 6$。\n- 地图城市类：$n_{\\text{城市},\\text{森林}} = 1$，$n_{\\text{城市},\\text{农业}} = 5$，$n_{\\text{城市},\\text{湿地}} = 3$，$n_{\\text{城市},\\text{城市}} = 71$。\n\n假设以下设计和建模前提：\n- 地图类别定义了 $K$ 个层，其层权重为 $W_i = M_i / A$。\n- 在每个层 $i$ 内，样本是大小为 $n_i$ 的一个简单随机样本，并且针对给定目标参考类别 $j$ 的参考标签可以建模为成功概率为 $p_{ij}$ 的独立伯努利试验。\n- 在进行方差计算时，各层是独立的。\n- 当使用正态近似为调整后区域构建双侧置信区间时，使用标准正态分位数 $z_{0.975} = 1.96$。\n\n根据分层随机抽样的基本原理，计算所有 4 个参考类别的调整后区域估计值及其标准误。然后，重点关注湿地类别，为其调整后区域构建 $95\\%$ 的双侧置信区间。\n\n最终答案仅报告调整后湿地区域的 $95\\%$ 置信下限，以 $\\mathrm{km^2}$ 为单位，并四舍五入至四位有效数字。最终答案框中不要包含单位。", "solution": "所给问题是遥感数据统计分析中一个定义明确且具有科学依据的练习，具体涉及使用分层随机抽样对分类地图进行精度评估。所有提供的数据内部一致，足以得到唯一解。该问题是有效的。\n\n目标是基于参考数据样本，通过校正原始地图中的分类错误，来估计不同土地覆盖类别的真实面积。这可以通过分层估计的原理来实现，其中地图类别作为分层。\n\n设类别数量为 $K$，$K$ 在本问题中为 4。我们用索引 $i$ 表示地图类别（层），用索引 $j$ 表示参考类别，其中 $i, j \\in \\{1, 2, 3, 4\\}$ 分别对应森林、农业、湿地和城市。\n\n给定的数据如下：\n景观总面积，$A = 25000$ $\\mathrm{km^2}$。\n层 $i$ 的地图面积，$M_i$。\n$M_1 = 12000$ $\\mathrm{km^2}$，$M_2 = 9000$ $\\mathrm{km^2}$，$M_3 = 3000$ $\\mathrm{km^2}$，$M_4 = 1000$ $\\mathrm{km^2}$。\n层 $i$ 的层权重为 $W_i = \\frac{M_i}{A}$。\n$W_1 = \\frac{12000}{25000} = 0.48$，$W_2 = \\frac{9000}{25000} = 0.36$，$W_3 = \\frac{3000}{25000} = 0.12$，$W_4 = \\frac{1000}{25000} = 0.04$。\n每个层 $i$ 内的样本量为 $n_i$。\n$n_1 = 200$，$n_2 = 150$，$n_3 = 120$，$n_4 = 80$。\n混淆矩阵计数由 $n_{ij}$ 给出，表示在层 $i$（地图类别）中被识别为类别 $j$（参考类别）的样本点数量。\n\n第一步是估计每个地图层 $i$ 内各个参考类别 $j$ 的比例。这个比例记为 $\\hat{p}_{ij}$，根据样本计数估计如下：\n$$ \\hat{p}_{ij} = \\frac{n_{ij}}{n_i} $$\n该项代表在地图上划分为类别 $i$ 的区域内随机选择一点，其真实属于类别 $j$ 的估计概率。\n\n参考类别 $j$ 的总面积（记为 $\\hat{A}_j$）通过对每个层的面积贡献求和来估计。层 $i$ 对参考类别 $j$ 的面积贡献是层 $i$ 的地图面积 $M_i$ 乘以估计比例 $\\hat{p}_{ij}$。因此，类别 $j$ 的总调整后面积为：\n$$ \\hat{A}_j = \\sum_{i=1}^{K} M_i \\hat{p}_{ij} $$\n\n我们现在计算 $K=4$ 个参考类别中每一个的调整后面积。\n\n对于森林（$j=1$）：\n$$ \\hat{A}_{\\text{森林}} = (12000 \\times \\frac{178}{200}) + (9000 \\times \\frac{9}{150}) + (3000 \\times \\frac{6}{120}) + (1000 \\times \\frac{1}{80}) $$\n$$ \\hat{A}_{\\text{森林}} = 10680 + 540 + 150 + 12.5 = 11382.5 \\text{ km}^2 $$\n\n对于农业（$j=2$）：\n$$ \\hat{A}_{\\text{农业}} = (12000 \\times \\frac{12}{200}) + (9000 \\times \\frac{126}{150}) + (3000 \\times \\frac{16}{120}) + (1000 \\times \\frac{5}{80}) $$\n$$ \\hat{A}_{\\text{农业}} = 720 + 7560 + 400 + 62.5 = 8742.5 \\text{ km}^2 $$\n\n对于湿地（$j=3$）：\n$$ \\hat{A}_{\\text{湿地}} = (12000 \\times \\frac{8}{200}) + (9000 \\times \\frac{10}{150}) + (3000 \\times \\frac{92}{120}) + (1000 \\times \\frac{3}{80}) $$\n$$ \\hat{A}_{\\text{湿地}} = 480 + 600 + 2300 + 37.5 = 3417.5 \\text{ km}^2 $$\n\n对于城市（$j=4$）：\n$$ \\hat{A}_{\\text{城市}} = (12000 \\times \\frac{2}{200}) + (9000 \\times \\frac{5}{150}) + (3000 \\times \\frac{6}{120}) + (1000 \\times \\frac{71}{80}) $$\n$$ \\hat{A}_{\\text{城市}} = 120 + 300 + 150 + 887.5 = 1457.5 \\text{ km}^2 $$\n\n调整后面积的总和是 $11382.5 + 8742.5 + 3417.5 + 1457.5 = 25000$ km$^2$，正确地等于总面积 $A$。\n\n接下来，我们为每个调整后面积估计值计算标准误。由于来自不同层的样本是独立的，总估计面积 $\\hat{A}_j$ 的方差是来自每个层的面积估计值方差的总和。\n$$ V(\\hat{A}_j) = V\\left(\\sum_{i=1}^{K} M_i \\hat{p}_{ij}\\right) = \\sum_{i=1}^{K} M_i^2 V(\\hat{p}_{ij}) $$\n来自简单随机样本的样本比例 $\\hat{p}_{ij}$ 的方差估计如下：\n$$ \\hat{V}(\\hat{p}_{ij}) = \\frac{\\hat{p}_{ij}(1-\\hat{p}_{ij})}{n_i - 1} $$\n这里使用了伯努利试验过程方差的无偏估计量。因此，调整后面积的估计方差为：\n$$ \\hat{V}(\\hat{A}_j) = \\sum_{i=1}^{K} M_i^2 \\frac{\\hat{p}_{ij}(1-\\hat{p}_{ij})}{n_i - 1} $$\n标准误是方差的平方根：$SE(\\hat{A}_j) = \\sqrt{\\hat{V}(\\hat{A}_j)}$。\n\n题目要求我们重点关注湿地类别（$j=3$）。我们将计算其标准误和置信区间。\n调整后区域为 $\\hat{A}_{\\text{湿地}} = 3417.5$ km$^2$。\n方差计算需要对四个项求和，每个层 $i$ 对应一项：\n对于层 $i=1$（森林）：$M_1 = 12000$，$n_1 = 200$，$\\hat{p}_{13} = \\frac{8}{200} = 0.04$。\n$$ \\text{项}_1 = (12000)^2 \\frac{0.04(1 - 0.04)}{200 - 1} = 144000000 \\times \\frac{0.0384}{199} \\approx 27803.015 $$\n对于层 $i=2$（农业）：$M_2 = 9000$，$n_2 = 150$，$\\hat{p}_{23} = \\frac{10}{150} = \\frac{1}{15}$。\n$$ \\text{项}_2 = (9000)^2 \\frac{(\\frac{1}{15})(1 - \\frac{1}{15})}{150 - 1} = 81000000 \\times \\frac{14/225}{149} \\approx 33833.893 $$\n对于层 $i=3$（湿地）：$M_3 = 3000$，$n_3 = 120$，$\\hat{p}_{33} = \\frac{92}{120} = \\frac{23}{30}$。\n$$ \\text{项}_3 = (3000)^2 \\frac{(\\frac{23}{30})(1 - \\frac{23}{30})}{120 - 1} = 9000000 \\times \\frac{161/900}{119} \\approx 13529.412 $$\n对于层 $i=4$（城市）：$M_4 = 1000$，$n_4 = 80$，$\\hat{p}_{43} = \\frac{3}{80} = 0.0375$。\n$$ \\text{项}_4 = (1000)^2 \\frac{0.0375(1 - 0.0375)}{80 - 1} = 1000000 \\times \\frac{0.03609375}{79} \\approx 456.883 $$\n\n调整后湿地区域的总估计方差为：\n$$ \\hat{V}(\\hat{A}_{\\text{湿地}}) \\approx 27803.015 + 33833.893 + 13529.412 + 456.883 \\approx 75623.203 \\text{ (km}^2)^2 $$\n标准误为：\n$$ SE(\\hat{A}_{\\text{湿地}}) = \\sqrt{75623.203} \\approx 274.99673 \\text{ km}^2 $$\n\n使用正态近似为调整后区域构建一个 $95\\%$ 的双侧置信区间：\n$$ CI = \\hat{A}_{\\text{湿地}} \\pm z_{0.975} \\times SE(\\hat{A}_{\\text{湿地}}) $$\n使用给定值 $z_{0.975} = 1.96$：\n$$ CI = 3417.5 \\pm 1.96 \\times 274.99673 $$\n$$ CI = 3417.5 \\pm 538.99359 $$\n置信下限为：\n$$ LCL = 3417.5 - 538.99359 = 2878.50641 $$\n置信上限为：\n$$ UCL = 3417.5 + 538.99359 = 3956.49359 $$\n问题要求调整后湿地区域的 $95\\%$ 置信下限，并四舍五入至四位有效数字。\n该值为 $2878.50641$。第五位有效数字是 $5$，所以我们将第四位数字向上取整。\n$$ LCL \\approx 2879 \\text{ km}^2 $$\n这样就完成了所需的计算。为完整起见，其他类别的标准误近似为：$SE(\\hat{A}_{\\text{森林}}) \\approx 324.52$ km$^2$，$SE(\\hat{A}_{\\text{农业}}) \\approx 351.26$ km$^2$，以及 $SE(\\hat{A}_{\\text{城市}}) \\approx 171.94$ km$^2$。", "answer": "$$\n\\boxed{2879}\n$$", "id": "2527995"}]}