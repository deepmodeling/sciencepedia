{"hands_on_practices": [{"introduction": "在我们将年轮数据用于气候重建之前，评估我们的综合年表在多大程度上代表了一个地点所有树木共享的共同环境信号是至关重要的。本练习将介绍表达总体信号（Expressed Population Signal, $EPS$），这是树木年代学中的一个基本指标。通过从“信号加噪声”模型推导$EPS$，您将学习如何根据样本数量（$N$）和序列间平均相关性（$\\bar{r}$）来量化年表的可靠性，从而为年表评估提供定量基础。[@problem_id:2517256]", "problem": "一个树木气候学站点年表是由 $N=15$ 个去趋势、标准化的树轮宽度序列构建的。假设采用标准的站点级信号加噪声模型，其中每个序列在给定时间 $t$ 可写为 $x_{i,t}=s_{t}+e_{i,t}$，其中 $s_{t}$ 是一个共同的站点范围信号，$e_{i,t}$ 是与 $s_{t}$ 不相关的、独立的、零均值、同方差的个体噪声。在一个参考区间内，不同树木间的平均序列间相关性估计为 $\\bar{r}=0.35$。在这些假设下，从方差分解以及用共同信号方差和个体噪声方差表示的序列间相关性定义出发，推导表达的总体信号 (EPS) 关于 $N$ 和 $\\bar{r}$ 的表达式。然后，计算给定 $N$ 和 $\\bar{r}$ 时的 EPS 值。在你的推理中，还需评估是否达到了常用的 $0.85$ 阈值。最终答案只报告 EPS 值。将答案四舍五入至4位有效数字。不包含单位。", "solution": "所述问题具有科学依据、提法明确、客观，并包含足够信息以获得唯一解。这是树木气候学（古生态学的一个分支学科）中的一个标准练习，因此是有效的。\n\n任务是推导表达的总体信号 (Expressed Population Signal, EPS) 的表达式，并根据树木气候学研究中的一组给定参数计算其值。此推导的基础是信号加噪声模型。\n\n设树木 $i$ 在时间 $t$ 的每个标准化树轮序列 $x_{i,t}$ 由以下线性模型表示：\n$$x_{i,t} = s_t + e_{i,t}$$\n其中，$s_t$ 是站点上所有树木共享的共同信号，$e_{i,t}$ 是树木 $i$ 特有的随机噪声。序列是标准化的，这意味着对于任何序列 $i$，其均值为 $0$，方差为 $1$。\n$$\\text{Var}(x_{i,t}) = 1$$\n\n问题陈述了关于各分量的几个关键假设：\n1. 噪声项 $e_{i,t}$ 的均值为零：$\\mathbb{E}[e_{i,t}] = 0$。\n2. 噪声项与共同信号 $s_t$ 不相关：对于所有 $i$，$\\text{Cov}(s_t, e_{i,t}) = 0$。\n3. 不同树木间的噪声项是独立的：对于 $i \\neq j$，$\\text{Cov}(e_{i,t}, e_{j,t}) = 0$。\n4. 噪声是同方差的，意味着其方差对所有序列都是恒定的：$\\text{Var}(e_{i,t}) = \\sigma_e^2$。\n\n设共同信号的方差为 $\\text{Var}(s_t) = \\sigma_s^2$。\n利用不相关变量之和的方差等于其方差之和的性质，我们可以分解单个序列 $x_{i,t}$ 的方差：\n$$\\text{Var}(x_{i,t}) = \\text{Var}(s_t + e_{i,t}) = \\text{Var}(s_t) + \\text{Var}(e_{i,t})$$\n由于序列是标准化的，$\\text{Var}(x_{i,t}) = 1$。这给出了基本的方差分解：\n$$1 = \\sigma_s^2 + \\sigma_e^2$$\n\n接下来，我们将这些方差与平均序列间相关性 $\\bar{r}$ 联系起来。两个不同序列 $x_{i,t}$ 和 $x_{j,t}$（其中 $i \\neq j$）之间的相关性 $r_{ij}$ 定义为：\n$$r_{ij} = \\frac{\\text{Cov}(x_{i,t}, x_{j,t})}{\\sqrt{\\text{Var}(x_{i,t})\\text{Var}(x_{j,t})}}$$\n由于 $\\text{Var}(x_{i,t}) = \\text{Var}(x_{j,t}) = 1$，相关性即为协方差：\n$$r_{ij} = \\text{Cov}(x_{i,t}, x_{j,t})$$\n我们现在计算这个协方差：\n$$\\text{Cov}(x_{i,t}, x_{j,t}) = \\text{Cov}(s_t + e_{i,t}, s_t + e_{j,t})$$\n使用协方差算子的双线性：\n$$\\text{Cov}(x_{i,t}, x_{j,t}) = \\text{Cov}(s_t, s_t) + \\text{Cov}(s_t, e_{j,t}) + \\text{Cov}(e_{i,t}, s_t) + \\text{Cov}(e_{i,t}, e_{j,t})$$\n根据我们的假设，对于 $i \\neq j$，交叉项为零：$\\text{Cov}(s_t, e_{j,t}) = 0$、$\\text{Cov}(e_{i,t}, s_t) = 0$ 和 $\\text{Cov}(e_{i,t}, e_{j,t}) = 0$。这剩下：\n$$r_{ij} = \\text{Cov}(s_t, s_t) = \\text{Var}(s_t) = \\sigma_s^2$$\n平均序列间相关性 $\\bar{r}$ 是所有这些两两相关性的平均值。因为每个 $r_{ij}$（对于 $i \\neq j$）都等于 $\\sigma_s^2$，所以它们的平均值也是 $\\sigma_s^2$。\n$$\\bar{r} = \\sigma_s^2$$\n从方差分解 $1 = \\sigma_s^2 + \\sigma_e^2$ 出发，我们可以用 $\\bar{r}$ 表示噪声方差：\n$$\\sigma_e^2 = 1 - \\sigma_s^2 = 1 - \\bar{r}$$\n\n表达的总体信号 (EPS) 是衡量站点年表（即 $N$ 个可用序列的平均值）在多大程度上代表了真实的潜在信号 $s_t$ 的一个指标。站点年表为：\n$$\\bar{x}_t = \\frac{1}{N} \\sum_{i=1}^N x_{i,t} = \\frac{1}{N} \\sum_{i=1}^N (s_t + e_{i,t}) = s_t + \\frac{1}{N} \\sum_{i=1}^N e_{i,t} = s_t + \\bar{e}_t$$\nEPS 定义为站点年表 $\\bar{x}_t$ 与真实信号 $s_t$ 之间相关系数的平方：\n$$\\text{EPS} = (\\text{Corr}(\\bar{x}_t, s_t))^2 = \\frac{(\\text{Cov}(\\bar{x}_t, s_t))^2}{\\text{Var}(\\bar{x}_t)\\text{Var}(s_t)}$$\n我们计算此表达式中的各项。首先，是协方差：\n$$\\text{Cov}(\\bar{x}_t, s_t) = \\text{Cov}(s_t + \\bar{e}_t, s_t) = \\text{Cov}(s_t, s_t) + \\text{Cov}(\\bar{e}_t, s_t) = \\text{Var}(s_t) = \\sigma_s^2$$\n因为 $\\text{Cov}(\\bar{e}_t, s_t) = 0$。\n其次，是站点年表的方差：\n$$\\text{Var}(\\bar{x}_t) = \\text{Var}(s_t + \\bar{e}_t) = \\text{Var}(s_t) + \\text{Var}(\\bar{e}_t) = \\sigma_s^2 + \\text{Var}\\left(\\frac{1}{N} \\sum_{i=1}^N e_{i,t}\\right)$$\n因为各个噪声项 $e_{i,t}$ 是独立的，所以它们的和的方差等于它们方差的和：\n$$\\text{Var}(\\bar{e}_t) = \\frac{1}{N^2} \\sum_{i=1}^N \\text{Var}(e_{i,t}) = \\frac{1}{N^2} \\sum_{i=1}^N \\sigma_e^2 = \\frac{N \\sigma_e^2}{N^2} = \\frac{\\sigma_e^2}{N}$$\n因此，年表的方差是：\n$$\\text{Var}(\\bar{x}_t) = \\sigma_s^2 + \\frac{\\sigma_e^2}{N}$$\n将这些代入EPS的公式：\n$$\\text{EPS} = \\frac{(\\sigma_s^2)^2}{(\\sigma_s^2 + \\frac{\\sigma_e^2}{N})\\sigma_s^2} = \\frac{\\sigma_s^2}{\\sigma_s^2 + \\frac{\\sigma_e^2}{N}}$$\n现在，我们代入 $\\sigma_s^2 = \\bar{r}$ 和 $\\sigma_e^2 = 1 - \\bar{r}$，以用给定的参数 $N$ 和 $\\bar{r}$ 来表示EPS：\n$$\\text{EPS} = \\frac{\\bar{r}}{\\bar{r} + \\frac{1-\\bar{r}}{N}}$$\n这是一个有效的表达式。通常为了方便，可以通过将分子和分母同乘以 $N$ 来消除分母中的分数：\n$$\\text{EPS} = \\frac{N\\bar{r}}{N\\bar{r} + (1 - \\bar{r})} = \\frac{N\\bar{r}}{1 + N\\bar{r} - \\bar{r}}$$\n$$\\text{EPS} = \\frac{N\\bar{r}}{1 + (N-1)\\bar{r}}$$\n这是EPS的最终推导表达式。\n\n现在，我们为给定的数据计算其值：$N=15$ 和 $\\bar{r}=0.35$。\n$$\\text{EPS} = \\frac{15 \\times 0.35}{1 + (15-1) \\times 0.35}$$\n$$\\text{EPS} = \\frac{5.25}{1 + 14 \\times 0.35}$$\n$$\\text{EPS} = \\frac{5.25}{1 + 4.9} = \\frac{5.25}{5.9}$$\n$$\\text{EPS} \\approx 0.8898305...$$\n题目要求答案四舍五入到4位有效数字，得到 $0.8898$。\n\n可靠年表的常用阈值是 $\\text{EPS} \\ge 0.85$。在本例中，我们计算出的值 $0.8898$ 大于 $0.85$，因此该年表的质量可被认为足以用于气候重建。", "answer": "$$\\boxed{0.8898}$$", "id": "2517256"}, {"introduction": "除了统计重建，过程模型为我们提供了关于气候如何驱动树木生长的机理上的理解。本实践将指导您实现一个简化的Vaganov–Shashkin（VS）模型。通过应用李比希最低量定律（Liebig’s Law of the Minimum），您将模拟受最限制性因素——温度或土壤水分——限制的每日生长，从而深入了解气候输入和生物响应之间的动态相互作用。[@problem_id:2517293]", "problem": "您的任务是实现一个简化的瓦加诺夫-沙什金（VS）生长指数的模拟，并将其季节内模式与观测到的年内密度变化（IADV）分段指数进行比较。您必须通过编写一个完整、可运行的程序来解决此任务，该程序需基于公认的生态学原理，以数学上精确的方式执行以下计算，而不依赖于未经记载的启发式方法。\n\n您必须使用的基本依据包括：(i) 李比希最低量定律，该定律指出增长受限于最稀缺的资源；(ii) 土壤储水量的逐日质量平衡（连续性）方程；以及 (iii) 一个具有形成层活动下限、最优和上限阈值的分段线性热响应函数。所有数学对象都必须在您编写的程序中明确定义。\n\n定义一个长度为 $N = 365$ 天的一年期逐日时间指数，其中年积日 $d \\in \\{1,2,\\dots,365\\}$。对于每个测试用例，您将生成以摄氏度为单位的日气温 $T(d)$ 和以毫米/天为单位的日降水量 $P(d)$，它们是平滑的季节性函数：\n\n- 温度由正弦曲线给出：\n$$\nT(d) = \\bar{T} + A_T \\,\\sin\\!\\left(\\frac{2\\pi}{365}\\,(d - \\phi_T)\\right) \\quad \\text{in } {}^\\circ\\text{C},\n$$\n其中 $\\bar{T}$ 是年平均温度，$A_T$ 是振幅，$\\phi_T$ 是以天为单位的相移。\n\n- 降水量由一个非负的季节性谐波函数（在零处截断）给出：\n$$\nP(d) = \\max\\!\\left(0,\\; \\bar{P} + A_P \\,f_P\\!\\left(\\frac{2\\pi}{365}\\,(d - \\phi_P)\\right)\\right) \\quad \\text{in } \\mathrm{mm/day},\n$$\n其中 $\\bar{P}$ 是基准降水量，$A_P$ 是振幅，$\\phi_P$ 是相移，$f_P(\\cdot)$ 是 $\\sin(\\cdot)$ 或 $\\cos(\\cdot)$，具体由每个测试用例指定。\n\n使用基于温度的代理估算日蒸散量（单位为 $\\mathrm{mm/day}$）：\n$$\n\\mathrm{ET}(d) = k_{\\mathrm{ET}} \\,\\max\\!\\left(0,\\,T(d)\\right),\n$$\n其中 $k_{\\mathrm{ET}}$ 是一个单位为 $\\text{mm day}^{-1} {}^\\circ\\text{C}^{-1}$ 的站点参数。\n\n通过离散连续性方程，在一个容量为 $W_{\\max}$ 的单层桶模型中演化土壤储水量 $W(d)$（单位为 $\\mathrm{mm}$）：\n$$\nW(d) = \\min\\!\\left(W_{\\max},\\; \\max\\!\\left(0,\\; W(d-1) + P(d) - \\mathrm{ET}(d)\\right)\\right),\n$$\n初始条件为 $W(0) = W_0$ 毫米。\n\n定义温度响应函数 $G_T(d)$ 为一个三角形分段线性函数，其阈值为 $T_{\\min}$、$T_{\\mathrm{opt}}$ 和 $T_{\\max}$（单位为 $^\\circ\\text{C}$），满足 $T_{\\min} < T_{\\mathrm{opt}} < T_{\\max}$：\n$$\nG_T(d) =\n\\begin{cases}\n0, & T(d) \\le T_{\\min}, \\\\[4pt]\n\\dfrac{T(d) - T_{\\min}}{T_{\\mathrm{opt}} - T_{\\min}}, & T_{\\min} < T(d) \\le T_{\\mathrm{opt}}, \\\\[8pt]\n\\dfrac{T_{\\max} - T(d)}{T_{\\max} - T_{\\mathrm{opt}}}, & T_{\\mathrm{opt}} < T(d) < T_{\\max}, \\\\[8pt]\n0, & T(d) \\ge T_{\\max}.\n\\end{cases}\n$$\n\n定义土壤湿度响应函数 $G_W(d)$ 为一个具有湿度最优值 $W_{\\mathrm{opt}}$ 的饱和分段线性函数：\n$$\nG_W(d) =\n\\begin{cases}\n0, & W(d) \\le 0, \\\\[4pt]\n\\min\\!\\left(1,\\; \\dfrac{W(d)}{W_{\\mathrm{opt}}}\\right), & W(d) > 0,\n\\end{cases}\n$$\n其中 $W_{\\mathrm{opt}} \\le W_{\\max}$。\n\n根据李比希最低量定律，定义逐日 VS 生长指数 $G(d)$ 为：\n$$\nG(d) = \\min\\!\\left(G_T(d),\\; G_W(d)\\right),\n$$\n该指数为无量纲。\n\n使用年积日指数定义三个季节内分段（包含边界）：\n- 分段 $\\mathcal{S}_1$：$d \\in \\{100, 101, \\dots, 180\\}$，\n- 分段 $\\mathcal{S}_2$：$d \\in \\{181, 182, \\dots, 240\\}$，\n- 分段 $\\mathcal{S}_3$：$d \\in \\{241, 242, \\dots, 300\\}$。\n\n通过计算每个分段内的平均模拟生长指数来聚合季节性模式：\n$$\n\\bar{G}_k = \\frac{1}{|\\mathcal{S}_k|}\\sum_{d \\in \\mathcal{S}_k} G(d), \\quad k \\in \\{1,2,3\\}.\n$$\n\n设观测到的年内密度变化（IADV）分段向量为 $\\mathbf{y} = [y_1, y_2, y_3]$，对于每个测试用例，您必须将其视为任意尺度上的无量纲指数。通过计算向量 $\\mathbf{\\bar{G}} = [\\bar{G}_1, \\bar{G}_2, \\bar{G}_3]$ 和 $\\mathbf{y}$ 之间的皮尔逊相关系数，来量化模拟的季节性生长模式与观测到的 IADV 之间的相似性。如果任一向量的方差为零，则按惯例将相关性定义为 $0$。\n\n您的程序必须为每个测试用例计算此相关性，并输出一行包含按测试用例顺序排列的相关性列表，列表用逗号分隔并用方括号括起，例如 $[\\rho_1,\\rho_2,\\rho_3]$。每个相关性必须表示为精确到六位小数的十进制数。不允许有其他输出。单位如上定义；相关性是无量纲的。\n\n测试套件（三个案例，涵盖不同气候区和一个边缘条件）：\n\n- 案例 1（类地中海气候区）：\n    - 温度参数：$\\bar{T} = 12.0$，$A_T = 12.0$，$\\phi_T = 173$（天）。\n    - 降水参数：$\\bar{P} = 2.0$，$A_P = 2.0$，$\\phi_P = 15$（天），$f_P(\\cdot) = \\cos(\\cdot)$。\n    - 站点参数：$W_{\\max} = 150.0$（mm），$W_0 = 100.0$（mm），$W_{\\mathrm{opt}} = 80.0$（mm），$k_{\\mathrm{ET}} = 0.25$（$\\text{mm day}^{-1} {}^\\circ\\text{C}^{-1}$）。\n    - 温度阈值：$T_{\\min} = 5.0$，$T_{\\mathrm{opt}} = 18.0$，$T_{\\max} = 30.0$（均为 $^\\circ\\text{C}$）。\n    - 观测的 IADV 向量：$\\mathbf{y}^{(1)} = [0.2,\\, 0.5,\\, 0.9]$。\n\n- 案例 2（大陆性夏季湿润气候区）：\n    - 温度参数：$\\bar{T} = 8.0$，$A_T = 15.0$，$\\phi_T = 173$（天）。\n    - 降水参数：$\\bar{P} = 1.0$，$A_P = 1.5$，$\\phi_P = 172$（天），$f_P(\\cdot) = \\sin(\\cdot)$。\n    - 站点参数：$W_{\\max} = 120.0$（mm），$W_0 = 80.0$（mm），$W_{\\mathrm{opt}} = 70.0$（mm），$k_{\\mathrm{ET}} = 0.30$（$\\text{mm day}^{-1} {}^\\circ\\text{C}^{-1}$）。\n    - 温度阈值：$T_{\\min} = 4.0$，$T_{\\mathrm{opt}} = 20.0$，$T_{\\max} = 32.0$（均为 $^\\circ\\text{C}$）。\n    - 观测的 IADV 向量：$\\mathbf{y}^{(2)} = [0.3,\\, 0.6,\\, 0.85]$。\n\n- 案例 3（生长季接近零的寒冷边缘气候区；边缘案例）：\n    - 温度参数：$\\bar{T} = 0.0$，$A_T = 8.0$，$phi_T = 173$（天）。\n    - 降水参数：$\\bar{P} = 2.0$，$A_P = 0.5$，$\\phi_P = 15$（天），$f_P(\\cdot) = \\cos(\\cdot)$。\n    - 站点参数：$W_{\\max} = 200.0$（mm），$W_0 = 150.0$（mm），$W_{\\mathrm{opt}} = 100.0$（mm），$k_{\\mathrm{ET}} = 0.20$（$\\text{mm day}^{-1} {}^\\circ\\text{C}^{-1}$）。\n    - 温度阈值：$T_{\\min} = 5.0$，$T_{\\mathrm{opt}} = 18.0$，$T_{\\max} = 30.0$（均为 $^\\circ\\text{C}$）。\n    - 观测的 IADV 向量：$\\mathbf{y}^{(3)} = [0.3,\\, 0.5,\\, 0.7]$。\n\n$\\sin(\\cdot)$ 和 $\\cos(\\cdot)$ 内的角度参数以弧度为单位。所有温度必须以 $^\\circ\\text{C}$ 处理，水量和降水量分别以 $\\mathrm{mm}$ 和 $\\mathrm{mm/day}$ 处理。最终输出必须是单行文本，包含三个相关性系数，以逗号分隔并用方括号括起，每个值四舍五入到六位小数，例如 $[0.123456,-0.654321,0.000000]$。", "solution": "该问题是有效的。它在科学上基于成熟的过程生态学模型原理，特别是用于树木生长的 Vaganov-Shashkin 模型。该问题定义明确，所有必要的参数、初始条件和数学函数都得到了明确无误的定义，确保了唯一且稳定的解。问题陈述是客观的，没有任何矛盾。\n\n解决方案要求在 $N=365$ 天的时间段内实现一个正向模拟。问题的核心是根据李比希最低量定律，将植物生长建模为最限制性环境因素（温度或土壤湿度）的函数。解决方案的步骤如下。\n\n首先，我们为一整年生成逐日环境驱动数据。年积日指数为 $d \\in \\{1, 2, \\dots, 365\\}$。日平均气温 $T(d)$ 被建模为正弦函数：\n$$\nT(d) = \\bar{T} + A_T \\,\\sin\\!\\left(\\frac{2\\pi}{365}\\,(d - \\phi_T)\\right)\n$$\n日降水量 $P(d)$ 被建模为非负谐波函数：\n$$\nP(d) = \\max\\!\\left(0,\\; \\bar{P} + A_P \\,f_P\\!\\left(\\frac{2\\pi}{365}\\,(d - \\phi_P)\\right)\\right)\n$$\n这些方程定义了模型环境输入的时间序列，为一年中的每一天计算。\n\n其次，我们对土壤水平衡进行建模。日蒸散量 $\\mathrm{ET}(d)$ 被估算为温度的线性代理：\n$$\n\\mathrm{ET}(d) = k_{\\mathrm{ET}} \\,\\max\\!\\left(0,\\,T(d)\\right)\n$$\n土壤储水量 $W(d)$ 表示在第 $d$ 天结束时的水量（以毫米为单位），它使用一个离散连续性方程进行演化，该方程代表一个单层“桶”模型。从初始条件 $W(0) = W_0$ 开始，后续每一天的储水量通过迭代计算得出：\n$$\nW(d) = \\min\\!\\left(W_{\\max},\\; \\max\\!\\left(0,\\; W(d-1) + P(d) - \\mathrm{ET}(d)\\right)\\right)\n$$\n此计算对 $d = 1, \\dots, 365$ 执行。\n\n第三，我们定义生长响应函数。这些函数将环境因素归一化到从 $0$ 到 $1$ 的无量纲尺度。温度响应函数 $G_T(d)$ 是一个由最低、最优和最高温度阈值（$T_{\\min}, T_{\\mathrm{opt}}, T_{\\max}$）定义的关于 $T(d)$ 的三角形函数：\n$$\nG_T(d) =\n\\begin{cases}\n0, & T(d) \\le T_{\\min} \\text{ or } T(d) \\ge T_{\\max} \\\\\n\\frac{T(d) - T_{\\min}}{T_{\\mathrm{opt}} - T_{\\min}}, & T_{\\min} < T(d) \\le T_{\\mathrm{opt}} \\\\\n\\frac{T_{\\max} - T(d)}{T_{\\max} - T_{\\mathrm{opt}}}, & T_{\\mathrm{opt}} < T(d) < T_{\\max}\n\\end{cases}\n$$\n土壤湿度响应函数 $G_W(d)$ 是一个关于日末土壤储水量 $W(d)$ 相对于最优水平 $W_{\\mathrm{opt}}$ 的饱和线性函数：\n$$\nG_W(d) = \\min\\!\\left(1,\\; \\frac{W(d)}{W_{\\mathrm{opt}}}\\right), \\quad \\text{for } W(d) > 0, \\text{ and } G_W(d)=0 \\text{ if } W(d) \\le 0.\n$$\n\n第四，我们通过应用李比希最低量定律来计算综合日生长指数 $G(d)$。该定律指出，总生长速率由最限制性因素决定：\n$$\nG(d) = \\min\\!\\left(G_T(d),\\; G_W(d)\\right)\n$$\n\n最后，为了将模拟的季节性模式与观测结果进行比较，我们在三个指定的季节内分段上聚合日生长指数 $G(d)$：$\\mathcal{S}_1$（第 $100-180$ 天）、$\\mathcal{S}_2$（第 $181-240$ 天）和 $\\mathcal{S}_3$（第 $241-300$ 天）。每个分段 $k$ 的平均生长指数计算如下：\n$$\n\\bar{G}_k = \\frac{1}{|\\mathcal{S}_k|}\\sum_{d \\in \\mathcal{S}_k} G(d)\n$$\n这三个平均值构成一个模拟模式向量 $\\mathbf{\\bar{G}} = [\\bar{G}_1, \\bar{G}_2, \\bar{G}_3]$。该向量与提供的观测 IADV 向量 $\\mathbf{y} = [y_1, y_2, y_3]$ 的相似性通过皮尔逊相关系数 $\\rho(\\mathbf{\\bar{G}}, \\mathbf{y})$ 进行量化。如果任一向量的方差为零，则相关性定义为 $0$。\n\n该实现将对三个测试用例中的每一个执行这些步骤。为了提高效率，数值计算使用 `numpy` 库提供的向量化操作来执行。每个案例的最终结果将按要求四舍五入到六位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function to process all test cases and print the final results.\n    \"\"\"\n    test_cases = [\n        # Case 1 (Mediterranean-like regime)\n        {\n            \"T_bar\": 12.0, \"A_T\": 12.0, \"phi_T\": 173,\n            \"P_bar\": 2.0, \"A_P\": 2.0, \"phi_P\": 15, \"f_P_func\": np.cos,\n            \"W_max\": 150.0, \"W_0\": 100.0, \"W_opt\": 80.0, \"k_ET\": 0.25,\n            \"T_min\": 5.0, \"T_opt\": 18.0, \"T_max\": 30.0,\n            \"y_obs\": np.array([0.2, 0.5, 0.9])\n        },\n        # Case 2 (continental summer-wet regime)\n        {\n            \"T_bar\": 8.0, \"A_T\": 15.0, \"phi_T\": 173,\n            \"P_bar\": 1.0, \"A_P\": 1.5, \"phi_P\": 172, \"f_P_func\": np.sin,\n            \"W_max\": 120.0, \"W_0\": 80.0, \"W_opt\": 70.0, \"k_ET\": 0.30,\n            \"T_min\": 4.0, \"T_opt\": 20.0, \"T_max\": 32.0,\n            \"y_obs\": np.array([0.3, 0.6, 0.85])\n        },\n        # Case 3 (cold-edge regime with near-zero growing season)\n        {\n            \"T_bar\": 0.0, \"A_T\": 8.0, \"phi_T\": 173,\n            \"P_bar\": 2.0, \"A_P\": 0.5, \"phi_P\": 15, \"f_P_func\": np.cos,\n            \"W_max\": 200.0, \"W_0\": 150.0, \"W_opt\": 100.0, \"k_ET\": 0.20,\n            \"T_min\": 5.0, \"T_opt\": 18.0, \"T_max\": 30.0,\n            \"y_obs\": np.array([0.3, 0.5, 0.7])\n        }\n    ]\n\n    results = []\n    for params in test_cases:\n        correlation = calculate_vs_correlation(params)\n        results.append(correlation)\n\n    # Format the final output string.\n    output_str = f\"[{','.join(f'{r:.6f}' for r in results)}]\"\n    print(output_str)\n\ndef calculate_vs_correlation(params):\n    \"\"\"\n    Calculates the Pearson correlation for a single test case.\n    \"\"\"\n    N = 365\n    d = np.arange(1, N + 1)\n\n    # Step 1: Generate environmental forcing data (T, P)\n    T = params[\"T_bar\"] + params[\"A_T\"] * np.sin(2 * np.pi / N * (d - params[\"phi_T\"]))\n    P_func = params[\"f_P_func\"]\n    P = np.maximum(0, params[\"P_bar\"] + params[\"A_P\"] * P_func(2 * np.pi / N * (d - params[\"phi_P\"])))\n\n    # Step 2: Simulate soil water balance (ET, W)\n    ET = params[\"k_ET\"] * np.maximum(0, T)\n    \n    W = np.zeros(N + 1)\n    W[0] = params[\"W_0\"]\n    for i in range(N):\n        # Clip ensures water storage is between 0 and W_max\n        W[i+1] = np.clip(W[i] + P[i] - ET[i], 0, params[\"W_max\"])\n    \n    # End-of-day water storage for days 1 to 365\n    W_daily = W[1:]\n\n    # Step 3: Define growth response functions (G_T, G_W)\n    T_min, T_opt, T_max = params[\"T_min\"], params[\"T_opt\"], params[\"T_max\"]\n    G_T = np.zeros(N)\n\n    # Ramp up: T_min < T <= T_opt\n    cond_up = (T > T_min) & (T <= T_opt)\n    G_T[cond_up] = (T[cond_up] - T_min) / (T_opt - T_min)\n\n    # Ramp down: T_opt < T < T_max\n    cond_down = (T > T_opt) & (T < T_max)\n    G_T[cond_down] = (T_max - T[cond_down]) / (T_max - T_opt)\n\n    W_opt = params[\"W_opt\"]\n    G_W = np.clip(W_daily / W_opt, 0, 1)\n\n    # Step 4: Calculate composite growth index (G) via Liebig's Law\n    G = np.minimum(G_T, G_W)\n\n    # Step 5: Aggregate over segments and calculate correlation\n    # Segments are defined with 1-based indexing, inclusive.\n    # Convert to 0-based Python slicing:\n    # S1: d in [100, 180] -> i in [99, 179] -> slice [99:180]\n    # S2: d in [181, 240] -> i in [180, 239] -> slice [180:240]\n    # S3: d in [241, 300] -> i in [240, 299] -> slice [240:300]\n    G_bar_1 = np.mean(G[99:180])\n    G_bar_2 = np.mean(G[180:240])\n    G_bar_3 = np.mean(G[240:300])\n    \n    G_bar = np.array([G_bar_1, G_bar_2, G_bar_3])\n    y_obs = params[\"y_obs\"]\n\n    # Calculate Pearson correlation coefficient.\n    # Handle the case where variance is zero to avoid NaN.\n    if np.std(G_bar) == 0 or np.std(y_obs) == 0:\n        corr = 0.0\n    else:\n        # np.corrcoef returns a 2x2 matrix, we need the off-diagonal element.\n        corr = np.corrcoef(G_bar, y_obs)[0, 1]\n\n    return corr\n\nsolve()\n```", "id": "2517293"}, {"introduction": "古生态学依赖于多种多样的代用指标，而化石花粉是重建过去植被和气候的基石。本练习将介绍现代相似技术（Modern Analog Technique, MAT），这是一种通过为给定的化石花粉组合找到最接近的现代对应物来推断过去状况的强大方法。本实践的一个关键部分是实施一项重要的质量控制措施：一种检测“非相似”（non-analog）情况的方法，即过去的生态系统在现代世界中缺乏合适的对应物。[@problem_id:2517302]", "problem": "给定一个由现代孢粉百分比组成及其相关地点气候组成的校准集，以及三个化石孢粉样本。您的任务是实施现代类似方法（MAT）重建，并使用一个基于组分数据几何学和最近邻统计、从校准集推导出的非相似性阈值进行非类似评估。\n\n基本原理：\n- 组分孢粉向量被约束在单纯形上，其分量为非负数且和为一。设一个孢粉组分为向量 $\\mathbf{p} = (p_1,\\dots,p_m)$，其中 $p_i \\ge 0$ 且 $\\sum_{i=1}^m p_i = 1$。\n- Hellinger 变换将 $\\mathbf{p}$ 映射到 $\\sqrt{\\mathbf{p}} = (\\sqrt{p_1},\\dots,\\sqrt{p_m})$，将单纯形嵌入欧几里得空间。组分 $\\mathbf{p}$ 和 $\\mathbf{q}$ 之间的平方弦非相似性定义为\n$$\nD(\\mathbf{p},\\mathbf{q}) = \\sum_{i=1}^m \\left(\\sqrt{p_i} - \\sqrt{q_i}\\right)^2,\n$$\n这等于 $\\sqrt{\\mathbf{p}}$ 和 $\\sqrt{\\mathbf{q}}$ 之间的平方欧几里得距离。\n- 现代类似方法（MAT）通过对所选非相似性度量下 $k$ 个最近的现代类似样的气候值进行加权平均，来估计化石样本的气候变量。使用反距离加权法，对于距离为 $\\{d_j\\}_{j=1}^k$ 的 $k$ 个最近邻，定义其权重为 $w_j = d_j^{-\\alpha}$，其中 $\\alpha > 0$，并进行归一化，使得 $\\sum_{j=1}^k w_j = 1$。估计值为\n$$\n\\hat{\\theta} = \\sum_{j=1}^k w_j \\, \\theta_j,\n$$\n其中 $\\theta_j$ 是邻居 $j$ 的气候值。为避免在出现零非相似性时发生除零错误，如果 $\\min_j d_j \\le \\varepsilon$，则将 $\\hat{\\theta}$ 设置为所有非相似性 $d_j \\le \\varepsilon$ 的邻居的气候值的算术平均值。\n- 非类似检测可通过经验最近邻统计来解决。对于校准集中的每个现代样本 $i$，计算其最近邻非相似性 $r_i = \\min_{j \\ne i} D(\\mathbf{p}_i,\\mathbf{p}_j)$。设非类似阈值 $D^\\star$ 为 $\\{r_i\\}$ 的经验 $q$-分位数，其中 $q \\in (0,1)$（解释为分数）。如果一个化石样本 $\\mathbf{p}^{(f)}$ 满足 $\\min_j D(\\mathbf{p}^{(f)}, \\mathbf{p}_j) > D^\\star$，则将其标记为非类似样本。\n\n请严格按照上述原理实现以下内容：\n\n1) 如果需要，将提供的任何孢粉向量行进行归一化，使其分量和为一，即用 $\\mathbf{p}/\\left(\\sum_{i=1}^m p_i\\right)$ 替换 $\\mathbf{p}$。\n\n2) 使用上文定义的平方弦非相似性 $D(\\cdot,\\cdot)$。\n\n3) 使用线性插值法对排序后的值进行计算，从而计算整个校准集的留一法最近邻非相似性 $\\{r_i\\}$ 及其在分位数水平 $q$ 上的经验分位数 $D^\\star$。\n\n4) 对于每个化石样本，使用指数为 $\\alpha$ 的反距离加权法计算 MAT 重建值 $\\hat{\\theta}$，并通过将其最小非相似性与 $D^\\star$ 进行比较来标记其非类似状态，如上文所述。\n\n物理单位和格式：\n- 重建的气候变量是七月平均气温，单位为摄氏度。将每个重建的温度以摄氏度为单位报告，四舍五入到三位小数，格式为浮点数。\n- 非类似标记必须是布尔值。\n- 对于每个测试用例，答案必须是一个列表，形式为 $[\\hat{\\theta}, \\text{flag}]$，其中 $\\hat{\\theta}$ 是浮点数，$\\text{flag}$ 是布尔值。\n\n所有测试用例共享的校准数据集：\n- 分类单元数量：$m=4$。\n- 现代地点数量：$n=7$。\n- 现代孢粉组分（行和为 $1$，每个条目是分数）：\n  - 地点 $1$：$[\\,0.40,\\,0.30,\\,0.20,\\,0.10\\,]$\n  - 地点 $2$：$[\\,0.35,\\,0.32,\\,0.18,\\,0.15\\,]$\n  - 地点 $3$：$[\\,0.10,\\,0.20,\\,0.50,\\,0.20\\,]$\n  - 地点 $4$：$[\\,0.12,\\,0.18,\\,0.55,\\,0.15\\,]$\n  - 地点 $5$：$[\\,0.25,\\,0.45,\\,0.20,\\,0.10\\,]$\n  - 地点 $6$：$[\\,0.05,\\,0.10,\\,0.70,\\,0.15\\,]$\n  - 地点 $7$：$[\\,0.60,\\,0.25,\\,0.10,\\,0.05\\,]$\n- 现代七月平均气温向量，单位为摄氏度：\n  - $\\boldsymbol{\\theta} = [\\,12.0,\\,13.0,\\,16.0,\\,15.5,\\,11.0,\\,17.5,\\,9.0\\,]$。\n\n所有测试用例共享的全局参数：\n- 非类似分位数水平：$q=0.95$（以小数表示）。\n- 零距离容差：$\\varepsilon=10^{-12}$。\n- 非相似性度量：平方弦非相似性，如上规定。\n\n测试套件：\n- 测试用例 $1$ (典型路径)：\n  - 化石组分：$[\\,0.36,\\,0.31,\\,0.19,\\,0.14\\,]$。\n  - MAT 参数：$k = 3$, $\\alpha = 2$。\n  - 输出：$[\\hat{\\theta}, \\text{flag}]$，其中 $\\hat{\\theta}$ 是以摄氏度为单位、四舍五入到三位小数的值，$\\text{flag}$ 是布尔值。\n- 测试用例 $2$ (边界情况：完全匹配的现代类似样)：\n  - 化石组分：$[\\,0.12,\\,0.18,\\,0.55,\\,0.15\\,]$（与地点 $4$ 完全相同）。\n  - MAT 参数：$k = 5$, $\\alpha = 2$。\n  - 输出：$[\\hat{\\theta}, \\text{flag}]$，其中 $\\hat{\\theta}$ 是以摄氏度为单位、四舍五入到三位小数的值，$\\text{flag}$ 是布尔值。\n- 测试用例 $3$ (边缘情况：非类似组分)：\n  - 化石组分：$[\\,0.01,\\,0.01,\\,0.97,\\,0.01\\,]$。\n  - MAT 参数：$k = 3$, $\\alpha = 2$。\n  - 输出：$[\\hat{\\theta}, \\text{flag}]$，其中 $\\hat{\\theta}$ 是以摄氏度为单位、四舍五入到三位小数的值，$\\text{flag}$ 是布尔值。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含三个测试用例的结果，格式为逗号分隔的列表，并用方括号括起来。每个测试用例的结果本身也格式化为包含两个元素的列表。例如：$[[x_1,b_1],[x_2,b_2],[x_3,b_3]]$，其中每个 $x_i$ 是一个四舍五入到三位小数的浮点数（单位为摄氏度），每个 $b_i$ 是一个布尔值。", "solution": "所提出的问题是一个在古生态重建领域中定义明确且具有科学依据的练习。它要求实施现代类似方法（MAT）并结合一种统计方法来识别非类似化石样本。问题提供了所有必要的数据、参数，以及对所用方法的清晰、形式化的定义。因此，该问题是有效的，并且可以构建解决方案。\n\n问题的核心在于量化孢粉组分之间的相似性，并利用该度量来推断过去的气候条件。孢粉组分是组分数据，意味着每个样本是一个位于单纯形上的比例向量 $\\mathbf{p} = (p_1, \\dots, p_m)$，其中 $p_i \\ge 0$ 且 $\\sum_{i=1}^m p_i = 1$。问题正确地指定了使用平方弦非相似性，这是一种适用于此类数据的度量。该非相似性被定义为经过 Hellinger 变换后的向量之间的平方欧几里得距离，其中变换为 $\\mathbf{p} \\to \\sqrt{\\mathbf{p}} = (\\sqrt{p_1}, \\dots, \\sqrt{p_m})$。因此，两个组分 $\\mathbf{p}$ 和 $\\mathbf{q}$ 之间的平方弦非相似性为：\n$$D(\\mathbf{p}, \\mathbf{q}) = \\sum_{i=1}^m (\\sqrt{p_i} - \\sqrt{q_i})^2$$\n\n该过程包括两个主要阶段：首先，分析现代校准集以建立一个非类似阈值；其次，对照该校准集分析每个化石样本。\n\n**1. 校准与阈值确定**\n\n现代校准集包含 $n=7$ 个孢粉样本 $\\mathbf{p}_i$，每个样本有 $m=4$ 个分类单元，形成一个矩阵 $\\mathbf{P}$，以及一个相关的七月平均气温向量 $\\boldsymbol{\\theta}$。\n\n首先，我们计算非类似阈值 $D^\\star$。这是通过对现代数据集进行留一法分析来完成的。对于每个现代样本 $\\mathbf{p}_i$，我们计算它与所有其他现代样本 $\\mathbf{p}_j$ ($j \\ne i$) 的非相似性，并找到这些值的最小值。这就是样本 $i$ 的最近邻非相似性，记作 $r_i$：\n$$r_i = \\min_{j \\ne i} D(\\mathbf{p}_i, \\mathbf{p}_j)$$\n首先计算现代数据集的非相似性矩阵 $D_{ij} = D(\\mathbf{p}_i, \\mathbf{p}_j)$。对角线元素为 $D_{ii}=0$。$r_i$ 的值是每行（不包括对角线元素）的最小值。\n此过程产生一组 $n$ 个最小非相似性值 $\\{r_1, \\dots, r_n\\}$。\n计算出的值为：\n$r_1 = 0.007494$\n$r_2 = 0.007494$\n$r_3 = 0.005393$\n$r_4 = 0.005393$\n$r_5 = 0.028741$\n$r_6 = 0.025061$\n$r_7 = 0.081192$\n\n非类似阈值 $D^\\star$ 被定义为此集合 $\\{r_i\\}$ 的经验 $q$-分位数，其中 $q = 0.95$。将 $\\{r_i\\}$ 值排序后得到：\n$\\{0.005393, 0.005393, 0.007494, 0.007494, 0.025061, 0.028741, 0.081192\\}$\n对于 $n=7$ 个样本，在 $q=0.95$ 处使用线性插值计算分位数，该值位于第6个和第7个顺序统计量之间。其索引为 $(n-1)q = (7-1) \\times 0.95 = 5.7$。该分位数是第6个和第7个值（在0索引数组中位于索引5和6）的加权平均值。\n$$D^\\star = (1-0.7) \\cdot r_{(6)} + 0.7 \\cdot r_{(7)} = 0.3 \\cdot 0.028741 + 0.7 \\cdot 0.081192 \\approx 0.065457$$\n\n**2. 化石样本分析**\n\n对于每个化石样本 $\\mathbf{p}^{(f)}$，我们执行两个任务：非类似评估和气候重建。\n\n**非类似评估：**\n我们计算化石样本与每个现代样本之间的非相似性 $d_j = D(\\mathbf{p}^{(f)}, \\mathbf{p}_j)$。找到这些值的最小值 $d_{\\text{min}} = \\min_j d_j$。如果 $d_{\\text{min}} > D^\\star$，则该样本被标记为非类似。\n\n**气候重建（MAT）：**\n气候值 $\\hat{\\theta}$ 是根据 $k$ 个最近的现代类似样（邻居）估计的。\n- 如果 $d_{\\text{min}} \\le \\varepsilon = 10^{-12}$，表示存在完全或近乎完全的匹配，则重建值 $\\hat{\\theta}$ 是所有满足 $d_j \\le \\varepsilon$ 的现代样本 $j$ 的气候值的算术平均值。\n- 否则，估计值是 $k$ 个最近邻居气候值的加权平均值。权重使用指数为 $\\alpha$ 的反距离加权法计算：$w_i = d_i^{-\\alpha}$。然后将这些权重归一化以使其和为一, $\\tilde{w}_i = w_i / \\sum_{j=1}^k w_j$。重建的气候为：\n$$\\hat{\\theta} = \\sum_{i=1}^k \\tilde{w}_i \\theta_i$$\n\n**应用于测试用例**\n\n**测试用例 1：**\n- 化石：$\\mathbf{p}^{(f1)} = [0.36, 0.31, 0.19, 0.14]$。\n- 参数：$k=3$, $\\alpha=2$。\n- 计算与现代样本的非相似性 $\\{d_j\\}$。最小值为 $d_{\\text{min}} \\approx 0.000152$（与地点 2）。\n- 非类似检查：$d_{\\text{min}} \\approx 0.000152 \\le D^\\star \\approx 0.065457$。该样本**不是**非类似样本。标记为 `False`。\n- 重建：3 个最近的邻居是地点 2 ($d_2 \\approx 0.000152, \\theta_2=13.0$)、地点 1 ($d_1 \\approx 0.00396, \\theta_1=12.0$) 和地点 5 ($d_5 \\approx 0.03917, \\theta_5=11.0$)。\n- 使用指数为 $\\alpha=2$ 的反距离加权法，归一化后的权重严重偏向地点 2。加权平均得出 $\\hat{\\theta}_1 \\approx 12.999048$。\n- 结果：四舍五入到三位小数，$\\hat{\\theta}_1 = 12.999$。输出：$[12.999, \\text{False}]$。\n\n**测试用例 2：**\n- 化石：$\\mathbf{p}^{(f2)} = [0.12, 0.18, 0.55, 0.15]$，与现代地点 4 完全相同。\n- 参数：$k=5$, $\\alpha=2$。\n- 非相似性：与地点 4 的非相似性为 $d_4 = 0$。因此 $d_{\\text{min}} = 0$。\n- 非类似检查：$d_{\\text{min}} = 0 \\le D^\\star$。该样本**不是**非类似样本。标记为 `False`。\n- 重建：由于 $d_{\\text{min}} = 0 \\le \\varepsilon$，适用特殊规则。$\\hat{\\theta}_2$ 是所有零非相似性地点的气候值的算术平均值。只有地点 4 匹配。\n- 结果：$\\hat{\\theta}_2 = \\theta_4 = 15.5$。输出：$[15.500, \\text{False}]$。\n\n**测试用例 3：**\n- 化石：$\\mathbf{p}^{(f3)} = [0.01, 0.01, 0.97, 0.01]$。\n- 参数：$k=3$, $\\alpha=2$。\n- 非相似性：最小值为 $d_{\\text{min}} \\approx 0.088661$（与地点 6）。\n- 非类似检查：$d_{\\text{min}} \\approx 0.088661 > D^\\star \\approx 0.065457$。该样本**是**非类似样本。标记为 `True`。\n- 重建：仍然按规定执行重建。3 个最近的邻居是地点 6 ($d_6 \\approx 0.08866, \\theta_6=17.5$)、地点 4 ($d_4 \\approx 0.10326, \\theta_4=15.5$) 和地点 3 ($d_3 \\approx 0.12451, \\theta_3=16.0$)。\n- 使用反距离加权法计算得出 $\\hat{\\theta}_3 \\approx 16.50539$。\n- 结果：四舍五入到三位小数，$\\hat{\\theta}_3 = 16.505$。输出：$[16.505, \\text{True}]$。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements the Modern Analog Technique (MAT) for paleoclimatic reconstruction.\n    \"\"\"\n    \n    # Calibration dataset\n    P_modern = np.array([\n        [0.40, 0.30, 0.20, 0.10],\n        [0.35, 0.32, 0.18, 0.15],\n        [0.10, 0.20, 0.50, 0.20],\n        [0.12, 0.18, 0.55, 0.15],\n        [0.25, 0.45, 0.20, 0.10],\n        [0.05, 0.10, 0.70, 0.15],\n        [0.60, 0.25, 0.10, 0.05]\n    ])\n    T_modern = np.array([12.0, 13.0, 16.0, 15.5, 11.0, 17.5, 9.0])\n    \n    # Global parameters\n    q_quantile = 0.95\n    epsilon = 1e-12\n    \n    test_cases = [\n        {'fossil_comp': np.array([0.36, 0.31, 0.19, 0.14]), 'k': 3, 'alpha': 2},\n        {'fossil_comp': np.array([0.12, 0.18, 0.55, 0.15]), 'k': 5, 'alpha': 2},\n        {'fossil_comp': np.array([0.01, 0.01, 0.97, 0.01]), 'k': 3, 'alpha': 2},\n    ]\n\n    # --- Pre-computation on Calibration Set ---\n\n    # Normalize modern pollen compositions (though already normalized)\n    P_modern = P_modern / P_modern.sum(axis=1, keepdims=True)\n    \n    # Hellinger transformation\n    sqrt_P_modern = np.sqrt(P_modern)\n    n_modern = P_modern.shape[0]\n\n    # Calculate squared-chord dissimilarity matrix for modern samples\n    diss_matrix = np.zeros((n_modern, n_modern))\n    for i in range(n_modern):\n        for j in range(i, n_modern):\n            dist = np.sum((sqrt_P_modern[i, :] - sqrt_P_modern[j, :])**2)\n            diss_matrix[i, j] = dist\n            diss_matrix[j, i] = dist\n\n    # Calculate leave-one-out nearest-neighbor dissimilarities {r_i}\n    r_i = np.zeros(n_modern)\n    for i in range(n_modern):\n        # Set diagonal to infinity to find min of off-diagonal elements\n        row = diss_matrix[i, :].copy()\n        row[i] = np.inf\n        r_i[i] = np.min(row)\n\n    # Calculate non-analogue threshold D_star\n    D_star = np.quantile(r_i, q_quantile, interpolation='linear')\n\n    results = []\n    \n    for case in test_cases:\n        p_fossil = case['fossil_comp']\n        k = case['k']\n        alpha = case['alpha']\n        \n        # --- Fossil Sample Analysis ---\n        \n        # Normalize fossil composition\n        p_fossil_norm = p_fossil / np.sum(p_fossil)\n        \n        # Hellinger transformation\n        sqrt_p_fossil = np.sqrt(p_fossil_norm)\n        \n        # Calculate dissimilarities to all modern samples\n        d_j = np.sum((sqrt_P_modern - sqrt_p_fossil)**2, axis=1)\n\n        # Non-analogue assessment\n        d_min = np.min(d_j)\n        is_non_analogue = d_min > D_star\n\n        # MAT Reconstruction\n        theta_hat = 0.0\n        \n        # Check for zero distance\n        if d_min <= epsilon:\n            zero_dist_indices = np.where(d_j <= epsilon)[0]\n            theta_hat = np.mean(T_modern[zero_dist_indices])\n        else:\n            # Find k nearest neighbors\n            neighbor_indices = np.argsort(d_j)[:k]\n            neighbor_diss = d_j[neighbor_indices]\n            neighbor_temps = T_modern[neighbor_indices]\n            \n            # Inverse-distance weighting\n            weights = neighbor_diss**(-alpha)\n            norm_weights = weights / np.sum(weights)\n            \n            theta_hat = np.sum(norm_weights * neighbor_temps)\n        \n        # The problem states \"rounded to three decimal places as a float\".\n        # This is interpreted as rounding the value, then formatting the final output string.\n        # Python's round() function performs the numerical rounding.\n        # Final printing will handle the string format.\n        results.append([round(theta_hat, 3), bool(is_non_analogue)])\n        \n    # Format the final output string exactly as required\n    formatted_results = [f\"[{res[0]:.3f},{str(res[1]).lower()}]\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2517302"}]}