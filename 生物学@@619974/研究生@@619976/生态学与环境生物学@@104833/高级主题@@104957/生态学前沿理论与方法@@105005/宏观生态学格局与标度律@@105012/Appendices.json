{"hands_on_practices": [{"introduction": "宏观生态学的核心在于理解普适性规律如何支配着生物过程。本练习将代谢生态学理论（Metabolic Theory of Ecology, MTE）中的一个基本模型付诸实践，该理论提出生物体代谢率与体重和温度存在标度关系。通过将这个非线性模型线性化，你将练习使用多元线性回归来估计关键的生态学参数，例如质量标度指数和活化能，并评估每个预测变量的相对贡献，从而掌握从理论到数据分析的核心技能。[@problem_id:2505757]", "problem": "给定一个基本的宏观生态学尺度框架作为起点。经验证据表明，整个生物体的新陈代谢率与身体质量成幂律关系，并表现出阿伦尼乌斯型（Arrhenius-type）的温度依赖性。具体而言，基线假设是存在参数 $B_0$、$b$ 和 $E$，使得一个身体质量为 $M$、处于绝对温度 $T$ 下的物种，其新陈代谢率 $B$ 满足\n$$\nB \\propto B_0 \\, M^{b} \\, \\exp\\!\\left(-\\frac{E}{k\\,T}\\right),\n$$\n其中 $k$ 是玻尔兹曼常数（Boltzmann constant）。假设 $k = 8.617333262\\times 10^{-5}$，单位为 $\\mathrm{eV\\,K^{-1}}$，且温度以开尔文（Kelvin）为单位。参数 $E$ 是以电子伏特（electronvolts）为单位的活化能，$B_0$ 是一个正常数。令 $\\ln$ 表示自然对数。\n\n任务。从第一性原理出发，以上述基线假设为起点，推导在对数空间中的线性化统计模型。该模型应包含一个截距项、身体质量的对数以及逆温度协变量。然后，给定由已知的 $(B_0, b, E)$ 生成、且在对数空间中带有微小、已知的加性偏差的多物种观测数据 $(M_i, T_i, B_i)$，应用普通最小二乘法（ordinary least squares）来估计这些参数。具体而言：\n\n- 证明取自然对数可以得到一个关于 $y_i = \\ln B_i$ 的线性模型，其预测变量为 $x_{1,i} = \\ln M_i$ 和 $x_{2,i} = \\frac{1}{k T_i}$，并加上一个加性残差 $\\varepsilon_i$。\n- 使用一个设计矩阵（包含一列全为1的截距项、$x_{1,i}$ 和 $x_{2,i}$）通过普通最小二乘法估计系数。如果设计矩阵是秩亏的（rank-deficient），则使用一个能返回最小范数解（minimum-norm solution）的最小二乘求解器。\n- 对每个测试用例，返回以下结果：估计的质量尺度指数 $\\hat b$，估计的活化能 $\\hat E$（注意线性模型中的温度系数与 $E$ 符号相反），决定系数 $\\hat R^2$，残差标准差 $\\hat\\sigma_{\\mathrm{res}}$（计算公式为 $\\sqrt{\\mathrm{RSS}/(n-r)}$，其中 $n$ 是样本量，$r$ 是设计矩阵的秩），以及在给定温度下质量的偏决定系数和在给定质量下温度的偏决定系数。\n- 将一组预测变量的偏决定系数定义为 $1 - \\mathrm{RSS}_{\\text{full}} / \\mathrm{RSS}_{\\text{reduced}}$，其中简化模型（reduced model）排除了该组预测变量。\n\n合成数据生成（测试套件）。对于下述每个测试用例，您必须严格按照规定构建数据集。对每个物种 $i$，计算\n$$\ny_i = \\ln B_i = \\ln B_0 + b \\,\\ln M_i - E \\,\\frac{1}{k T_i} + \\varepsilon_i,\n$$\n使用所列出的值。您不应对其进行指数化以恢复 $B_i$，因为回归是在对数空间中进行的。\n\n- 测试用例 A（通用情况，变化的质量和温度）：\n  - $n = 8$ 个物种。\n  - 身体质量 $M$（单位：千克）：$[\\,0.01,\\,0.02,\\,0.05,\\,0.10,\\,0.20,\\,0.50,\\,1.00,\\,2.00\\,]$。\n  - 温度 $T$（单位：开尔文）：$[\\,293,\\,298,\\,303,\\,308,\\,288,\\,283,\\,293,\\,303\\,]$。\n  - 真实参数：$B_0 = 0.20$（任意一致单位），$b = \\tfrac{3}{4}$，$E = 0.65$（单位：电子伏特）。\n  - 对数空间中的加性偏差：$\\varepsilon = [\\,0.00,\\,0.03,\\,-0.02,\\,0.01,\\,-0.01,\\,0.02,\\,-0.03,\\,0.00\\,]$。\n\n- 测试用例 B（边界条件，恒定温度；可识别性压力测试）：\n  - $n = 8$ 个物种。\n  - 身体质量 $M$（单位：千克）：$[\\,0.01,\\,0.02,\\,0.05,\\,0.10,\\,0.20,\\,0.50,\\,1.00,\\,2.00\\,]$。\n  - 温度 $T$（单位：开尔文）：$[\\,298,\\,298,\\,298,\\,298,\\,298,\\,298,\\,298,\\,298\\,]$。\n  - 真实参数：$B_0 = 0.20$，$b = \\tfrac{3}{4}$，$E = 0.65$（单位：电子伏特）。\n  - 对数空间中的加性偏差：$\\varepsilon = [\\,-0.01,\\,0.00,\\,0.02,\\,-0.02,\\,0.01,\\,0.00,\\,-0.01,\\,0.01\\,]$。\n\n- 测试用例 C（边缘情况，质量和温度具有更宽的动态范围）：\n  - $n = 8$ 个物种。\n  - 身体质量 $M$（单位：千克）：$[\\,0.001,\\,0.003,\\,0.010,\\,0.030,\\,0.100,\\,0.300,\\,1.000,\\,3.000\\,]$。\n  - 温度 $T$（单位：开尔文）：$[\\,280,\\,285,\\,290,\\,295,\\,300,\\,305,\\,310,\\,315\\,]$。\n  - 真实参数：$B_0 = 0.10$，$b = \\tfrac{3}{4}$，$E = 0.60$（单位：电子伏特）。\n  - 对数空间中的加性偏差：$\\varepsilon = [\\,0.00,\\,0.03,\\,0.00,\\,0.03,\\,0.00,\\,0.03,\\,0.00,\\,0.03\\,]$。\n\n计算与输出要求。\n\n- 对每个测试用例，构建设计矩阵 $X$（其列为 $[\\,1,\\,\\ln M,\\,1/(kT)\\,]$）和响应向量 $y = \\ln B$。\n- 通过普通最小二乘法估计 $\\hat\\beta = [\\,\\widehat{\\ln B_0},\\,\\hat b,\\,\\hat\\gamma\\,]$，其中 $\\hat\\gamma$ 是乘以 $1/(kT)$ 的系数。报告 $\\hat E = -\\hat\\gamma$。\n- 计算 $\\hat R^2 = 1 - \\mathrm{RSS}/\\mathrm{TSS}$，其中 $\\mathrm{RSS} = \\sum_i (y_i - \\hat y_i)^2$ 且 $\\mathrm{TSS} = \\sum_i (y_i - \\bar y)^2$。\n- 计算 $\\hat\\sigma_{\\mathrm{res}} = \\sqrt{\\mathrm{RSS}/(n-r)}$，其中 $r$ 是 $X$ 的列秩。\n- 计算偏决定系数：\n  - 对于给定温度下的质量：拟合简化模型 $y \\sim 1 + 1/(kT)$ 以获得 $\\mathrm{RSS}_{\\text{red, mass}}$，然后计算 $\\text{partial}_{\\text{mass}} = 1 - \\mathrm{RSS}_{\\text{full}} / \\mathrm{RSS}_{\\text{red, mass}}$。\n  - 对于给定质量下的温度：拟合简化模型 $y \\sim 1 + \\ln M$ 以获得 $\\mathrm{RSS}_{\\text{red, temp}}$，然后计算 $\\text{partial}_{\\text{temp}} = 1 - \\mathrm{RSS}_{\\text{full}} / \\mathrm{RSS}_{\\text{red, temp}}$。\n- 为抵消浮点舍入误差，将任何偏决定系数的计算结果在数值上裁剪到 $[\\,0,\\,1\\,]$ 区间内。\n- 您的程序应生成单行输出，其中包含一个以方括号括起来的逗号分隔列表。每个测试用例对应一个包含六个浮点数的子列表，顺序为 $[\\,\\hat b,\\,\\hat E,\\,\\hat R^2,\\,\\hat\\sigma_{\\mathrm{res}},\\,\\text{partial}_{\\text{mass}},\\,\\text{partial}_{\\text{temp}}\\,]$。将每个浮点数四舍五入到 $6$ 位小数。例如，输出格式为 $[\\,[\\,\\cdots\\,],\\,[\\,\\cdots\\,],\\,[\\,\\cdots\\,]\\,]$。\n\n角度单位不适用。不应打印百分比；任何分数量都应以不带百分号的小数形式提供。在报告的输出中，所有参数和变量都是无量纲的，除了 $\\hat E$ 应被解释为电子伏特。", "solution": "该问题要求基于一个基本的宏观生态学尺度关系，推导并应用一个线性化的统计模型。解决方案分两个阶段进行：首先，从给定的尺度定律中理论推导线性模型；其次，应用普通最小二乘法（OLS）估计程序，从合成数据中恢复模型参数。\n\n**1. 线性统计模型的推导**\n\n起点是关于整个生物体新陈代谢率 $B$ 作为身体质量 $M$ 和绝对温度 $T$ 的函数的基线假设：\n$$\nB \\propto B_0 \\, M^{b} \\, \\exp\\!\\left(-\\frac{E}{k\\,T}\\right)\n$$\n其中 $B_0$ 是一个归一化常数，$b$ 是质量尺度指数，$E$ 是活化能，$k$ 是玻尔兹曼常数。通过引入一个无量纲的比例常数，该比例关系可以写成等式，并且在不失一般性的情况下，该常数可以被吸收到 $B_0$ 中。因此，我们写作：\n$$\nB = B_0 \\, M^{b} \\, \\exp\\!\\left(-\\frac{E}{k\\,T}\\right)\n$$\n为了线性化此关系，我们对等式两边取自然对数（$\\ln$）：\n$$\n\\ln(B) = \\ln\\left(B_0 \\, M^{b} \\, \\exp\\!\\left(-\\frac{E}{k\\,T}\\right)\\right)\n$$\n利用对数的性质，$\\ln(xyz) = \\ln(x) + \\ln(y) + \\ln(z)$ 和 $\\ln(x^p) = p \\ln(x)$，我们得到：\n$$\n\\ln(B) = \\ln(B_0) + \\ln(M^b) + \\ln\\left(\\exp\\!\\left(-\\frac{E}{k\\,T}\\right)\\right)\n$$\n$$\n\\ln(B) = \\ln(B_0) + b \\ln(M) - \\frac{E}{k\\,T}\n$$\n该方程具有多元线性回归模型的形式。对于一组 $i=1, \\dots, n$ 的观测数据，我们可以引入一个加性误差项 $\\varepsilon_i$ 来解释生物变异和测量误差，从而得到以下统计模型：\n$$\ny_i = \\beta_0 + \\beta_1 x_{1,i} + \\beta_2 x_{2,i} + \\varepsilon_i\n$$\n其中：\n- 响应变量为 $y_i = \\ln(B_i)$。\n- 预测变量（协变量）为 $x_{1,i} = \\ln(M_i)$ 和 $x_{2,i} = \\frac{1}{k T_i}$。\n- 模型系数为 $\\beta_0 = \\ln(B_0)$，$\\beta_1 = b$ 和 $\\beta_2 = -E$。\n\n**2. 普通最小二乘法（OLS）估计与统计指标**\n\n该线性模型可以用矩阵形式表示为 $\\mathbf{y} = X\\beta + \\varepsilon$，其中 $\\mathbf{y}$ 是观测到的对数新陈代谢率向量，$X$ 是一个 $n \\times 3$ 的设计矩阵，其列分别对应截距项（一个全为1的向量）、$\\ln(M)$ 和 $1/(kT)$，$\\beta = [\\beta_0, \\beta_1, \\beta_2]^T$ 是系数向量，$\\varepsilon$ 是误差向量。\n\nOLS估计值 $\\hat{\\beta}$ 是使残差平方和（RSS）$\\mathrm{RSS} = ||\\mathbf{y} - X\\hat{\\beta}||^2$ 最小化的向量。该解通过求解正规方程 $(X^T X)\\hat{\\beta} = X^T \\mathbf{y}$ 得到。如果设计矩阵 $X$ 是秩亏的（即其列线性相关），如测试用例B中温度恒定的情况，$\\hat{\\beta}$ 将没有唯一解。在这种情况下，按规定计算一个最小范数解。\n\n从估计的系数向量 $\\hat{\\beta} = [\\hat{\\beta}_0, \\hat{\\beta}_1, \\hat{\\beta}_2]^T$ 中，我们估计物理参数：\n- 质量尺度指数：$\\hat{b} = \\hat{\\beta}_1$。\n- 活化能：$\\hat{E} = -\\hat{\\beta}_2$。\n\n计算以下统计指标：\n\n- **决定系数 ($\\hat R^2$)**：该指标衡量响应变量总方差中能被模型解释的比例。其计算公式为 $\\hat R^2 = 1 - \\frac{\\mathrm{RSS}}{\\mathrm{TSS}}$，其中 $\\mathrm{RSS} = \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2$ 是残差平方和，$\\mathrm{TSS} = \\sum_{i=1}^{n} (y_i - \\bar{y})^2$ 是总平方和。\n\n- **残差标准差 ($\\hat{\\sigma}_{\\mathrm{res}}$)**：这是对误差项 $\\varepsilon$ 标准差的估计。其计算公式为 $\\hat{\\sigma}_{\\mathrm{res}} = \\sqrt{\\frac{\\mathrm{RSS}}{n - r}}$，其中 $n$ 是观测数量，$r$ 是设计矩阵 $X$ 的秩。$n-r$ 代表残差自由度。\n\n- **偏决定系数**：该指标量化了在其他预测变量已包含在模型中的前提下，某个预测变量（或一组预测变量）对模型的边际贡献。\n  - 为了求得在给定温度下质量的偏决定系数，我们将完整模型（full model）的RSS（$\\mathrm{RSS}_{\\text{full}}$）与排除了质量项的简化模型 $y \\sim 1 + 1/(kT)$ 的RSS（$\\mathrm{RSS}_{\\text{red, mass}}$）进行比较。该系数为 $\\text{partial}_{\\text{mass}} = 1 - \\frac{\\mathrm{RSS}_{\\text{full}}}{\\mathrm{RSS}_{\\text{red, mass}}}$。\n  - 类似地，对于给定质量下的温度，简化模型为 $y \\sim 1 + \\ln M$，得到 $\\mathrm{RSS}_{\\text{red, temp}}$。该系数为 $\\text{partial}_{\\text{temp}} = 1 - \\frac{\\mathrm{RSS}_{\\text{full}}}{\\mathrm{RSS}_{\\text{red, temp}}}$。\n  - 为修正潜在的浮点不精确性，这些值在数值上被裁剪到 $[\\,0, 1\\,]$ 区间内。\n\n实施过程包括为每个测试用例构建响应向量 $\\mathbf{y}$ 和各种设计矩阵。使用 `numpy.linalg.lstsq` 函数执行OLS回归。该函数通过返回最小范数解来稳健地处理秩亏矩阵，并提供计算所有所需指标的必要输出（系数、RSS和秩）。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the analysis for all test cases.\n    \"\"\"\n\n    k_boltzmann = 8.617333262e-5  # eV K^-1\n\n    def run_analysis_for_case(M, T, B0, b, E, epsilon):\n        \"\"\"\n        Performs the full regression analysis for a single test case.\n        \"\"\"\n        n = len(M)\n        \n        # Convert inputs to numpy arrays for vectorized operations\n        M_arr = np.array(M, dtype=float)\n        T_arr = np.array(T, dtype=float)\n        epsilon_arr = np.array(epsilon, dtype=float)\n\n        # 1. Generate the response variable y = ln(B)\n        # y_i = ln(B0) + b * ln(M_i) - E / (k * T_i) + epsilon_i\n        y = np.log(B0) + b * np.log(M_arr) - E / (k_boltzmann * T_arr) + epsilon_arr\n\n        # 2. Fit the full model: y ~ 1 + ln(M) + 1/(k*T)\n        ln_M = np.log(M_arr)\n        inv_kT = 1 / (k_boltzmann * T_arr)\n        X_full = np.vstack([np.ones(n), ln_M, inv_kT]).T\n\n        # Use lstsq which handles rank deficiency and returns necessary info.\n        # rcond=None ensures use of machine precision for rank determination.\n        coeffs_full, res_full_arr, rank_full, s_full = np.linalg.lstsq(X_full, y, rcond=None)\n        \n        # If matrix is rank deficient, lstsq returns an empty residuals array.\n        # In this case, RSS must be calculated manually.\n        if res_full_arr.size > 0:\n            rss_full = res_full_arr[0]\n        else:\n            rss_full = np.sum((y - X_full @ coeffs_full)**2)\n\n        # 3. Extract estimated model parameters\n        hat_b0, hat_b, hat_gamma = coeffs_full\n        hat_E = -hat_gamma\n\n        # 4. Compute standard statistical metrics\n        # Total Sum of Squares (TSS)\n        tss = np.sum((y - np.mean(y))**2)\n        \n        # Coefficient of Determination (R^2)\n        # Guard against tss=0, although highly unlikely with this data\n        hat_r2 = 1.0 - rss_full / tss if tss > 0 else 1.0\n        \n        # Residual Standard Deviation (sigma_res)\n        # Degrees of freedom for residuals is n - rank(X)\n        hat_sigma_res = np.sqrt(rss_full / (n - rank_full))\n\n        # 5. Compute partial coefficients of determination\n\n        # Partial coefficient for mass, given temperature\n        # Reduced model: y ~ 1 + 1/(k*T)\n        X_red_mass = np.vstack([np.ones(n), inv_kT]).T\n        coeffs_red_mass, res_red_mass_arr, _, _ = np.linalg.lstsq(X_red_mass, y, rcond=None)\n        if res_red_mass_arr.size > 0:\n            rss_red_mass = res_red_mass_arr[0]\n        else:\n            rss_red_mass = np.sum((y - X_red_mass @ coeffs_red_mass)**2)\n        \n        partial_mass = 1.0 - rss_full / rss_red_mass if rss_red_mass > 0 else 1.0\n        partial_mass = np.clip(partial_mass, 0.0, 1.0)\n\n        # Partial coefficient for temperature, given mass\n        # Reduced model: y ~ 1 + ln(M)\n        X_red_temp = np.vstack([np.ones(n), ln_M]).T\n        coeffs_red_temp, res_red_temp_arr, _, _ = np.linalg.lstsq(X_red_temp, y, rcond=None)\n        if res_red_temp_arr.size > 0:\n            rss_red_temp = res_red_temp_arr[0]\n        else:\n            rss_red_temp = np.sum((y - X_red_temp @ coeffs_red_temp)**2)\n            \n        partial_temp = 1.0 - rss_full / rss_red_temp if rss_red_temp > 0 else 1.0\n        partial_temp = np.clip(partial_temp, 0.0, 1.0)\n        \n        return [hat_b, hat_E, hat_r2, hat_sigma_res, partial_mass, partial_temp]\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Test case A (general, varied mass and temperature)\n        {\n            'M': [0.01, 0.02, 0.05, 0.10, 0.20, 0.50, 1.00, 2.00],\n            'T': [293, 298, 303, 308, 288, 283, 293, 303],\n            'B0': 0.20, 'b': 0.75, 'E': 0.65,\n            'epsilon': [0.00, 0.03, -0.02, 0.01, -0.01, 0.02, -0.03, 0.00]\n        },\n        # Test case B (boundary condition with constant temperature)\n        {\n            'M': [0.01, 0.02, 0.05, 0.10, 0.20, 0.50, 1.00, 2.00],\n            'T': [298, 298, 298, 298, 298, 298, 298, 298],\n            'B0': 0.20, 'b': 0.75, 'E': 0.65,\n            'epsilon': [-0.01, 0.00, 0.02, -0.02, 0.01, 0.00, -0.01, 0.01]\n        },\n        # Test case C (edge case with wider dynamic range)\n        {\n            'M': [0.001, 0.003, 0.010, 0.030, 0.100, 0.300, 1.000, 3.000],\n            'T': [280, 285, 290, 295, 300, 305, 310, 315],\n            'B0': 0.10, 'b': 0.75, 'E': 0.60,\n            'epsilon': [0.00, 0.03, 0.00, 0.03, 0.00, 0.03, 0.00, 0.03]\n        }\n    ]\n\n    all_results = []\n    for case in test_cases:\n        # Calculate the result for one case\n        result = run_analysis_for_case(**case)\n        # Format results to 6 decimal places and create the sublist string\n        formatted_result = [f\"{x:.6f}\" for x in result]\n        all_results.append(f\"[{','.join(formatted_result)}]\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2505757"}, {"introduction": "幂律分布是宏观生态学中反复出现的一种模式，从物种的地理分布范围到种群规模的波动都有其身影。然而，准确估计幂律指数 $\\alpha$ 充满挑战，常用的方法往往会引入系统性偏差。本练习将引导你推导并应用最大似然估计（Maximum Likelihood Estimation, MLE）这一黄金标准方法，以稳健地估计幂律指数，并探讨如何通过优化拟合优度来确定幂律适用的数据阈值 $x_{\\min}$。[@problem_id:2505801]", "problem": "在宏观生态学中，连续尺寸分布（例如，物种分布范围大小或岛屿面积）的上尾部通常用一个下限阈值之上的幂律来建模。假设一位研究人员拥有一个由观测尺寸组成的独立同分布样本 $\\{x_{1},\\dots,x_{n}\\}$，已知每个观测值都满足 $x_{i}\\ge x_{\\min}$，并使用连续幂律概率密度函数为尾部分布建模：\n$$\np(x)=\\frac{\\alpha-1}{x_{\\min}}\\left(\\frac{x}{x_{\\min}}\\right)^{-\\alpha},\\quad x\\ge x_{\\min},\\quad \\alpha>1.\n$$\n假设该模型在支撑集 $[x_{\\min},\\infty)$ 上是正确定型的，并且 $\\alpha$ 是未知的，而 $x_{\\min}$ 被视为固定的。\n\n从最大似然估计的基本原理和 Kolmogorov–Smirnov 距离的定义出发（Kolmogorov–Smirnov 是一种非参数拟合优度方法），完成以下任务：\n\n1. 推导出以 $x_{\\min}$ 和样本 $\\{x_{i}\\}_{i=1}^{n}$ 表示的 $\\alpha$ 的最大似然估计量。\n2. 解释一个有原则的程序，该程序通过最小化截断样本 $\\{x_{i}:x_{i}\\ge x_{\\min}\\}$ 的经验累积分布函数与拟合模型的累积分布函数之间的 Kolmogorov–Smirnov 距离来选择 $x_{\\min}$。\n\n将第 1 部分的最终答案以 $n$、$\\{x_{i}\\}$ 和 $x_{\\min}$ 表示的单个闭式解析表达式形式给出。不包含单位。不需要进行数值四舍五入。第 2 部分要求的解释应包含在您的解题过程中，但不必出现在最终的方框答案中。", "solution": "在尝试解答之前，必须对问题陈述进行严格验证。\n\n首先，我们逐字提取给定信息。\n- 一个由观测尺寸组成的独立同分布样本 $\\{x_{1},\\dots,x_{n}\\}$。\n- 存在一个下限阈值 $x_{\\min}$，使得所有观测值都满足 $x_{i}\\ge x_{\\min}$。\n- 模型的概率密度函数 (PDF) 为 $p(x)=\\frac{\\alpha-1}{x_{\\min}}\\left(\\frac{x}{x_{\\min}}\\right)^{-\\alpha}$，其中 $x\\ge x_{\\min}$。\n- 参数 $\\alpha$ 受约束，使得 $\\alpha>1$。\n- 参数 $\\alpha$ 是未知的，而在问题的第一部分中，$x_{\\min}$ 被视为固定的。\n- 任务是首先推导出 $\\alpha$ 的最大似然估计量 (MLE)，其次，解释一个通过最小化 Kolmogorov–Smirnov 距离来选择 $x_{\\min}$ 的程序。\n\n接下来，我们验证问题的完整性。\n该问题具有科学依据。指定的 PDF 是帕累托 I 型分布，它是包括宏观生态学在内的众多科学领域中用于尺寸频率分布的标准且被广泛接受的模型。所要求的方法，即最大似然估计和 Kolmogorov–Smirnov 拟合优度检验，是数理统计学中基本且成熟的原理。该问题是适定的；它为 MLE 推导提供了唯一解所需的所有信息，并描述了一个用于参数估计的连贯（尽管计算量很大）的程序。其语言客观且数学上精确。该问题不违反任何科学逻辑原理，不基于错误的假设，并且是在其指定领域内的一个可形式化的问题。因此，该问题被认为是有效的，我们可以继续进行解答。\n\n该问题由两部分组成。我们将按顺序进行处理。\n\n第 1 部分：推导 $\\alpha$ 的最大似然估计量。\n\n对于一个独立同分布样本 $\\{x_i\\}_{i=1}^n$，其似然函数 $L(\\alpha)$ 是在每个样本点上求值的概率密度函数的乘积。\n$$\nL(\\alpha | \\{x_i\\}_{i=1}^n) = \\prod_{i=1}^{n} p(x_i) = \\prod_{i=1}^{n} \\left[ \\frac{\\alpha-1}{x_{\\min}}\\left(\\frac{x_i}{x_{\\min}}\\right)^{-\\alpha} \\right]\n$$\n为简化最大化过程，我们使用对数似然函数 $\\mathcal{L}(\\alpha) = \\ln(L(\\alpha))$。\n$$\n\\mathcal{L}(\\alpha) = \\ln \\left( \\prod_{i=1}^{n} \\left[ \\frac{\\alpha-1}{x_{\\min}}\\left(\\frac{x_i}{x_{\\min}}\\right)^{-\\alpha} \\right] \\right)\n$$\n利用对数的性质，我们展开此表达式：\n$$\n\\mathcal{L}(\\alpha) = \\sum_{i=1}^{n} \\ln \\left( \\frac{\\alpha-1}{x_{\\min}}\\left(\\frac{x_i}{x_{\\min}}\\right)^{-\\alpha} \\right)\n$$\n$$\n\\mathcal{L}(\\alpha) = \\sum_{i=1}^{n} \\left[ \\ln(\\alpha-1) - \\ln(x_{\\min}) - \\alpha \\ln\\left(\\frac{x_i}{x_{\\min}}\\right) \\right]\n$$\n对 $n$ 个观测值求和得到：\n$$\n\\mathcal{L}(\\alpha) = n \\ln(\\alpha-1) - n \\ln(x_{\\min}) - \\alpha \\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right)\n$$\n为找到使 $\\mathcal{L}(\\alpha)$ 最大化的 $\\alpha$ 值，我们计算其关于 $\\alpha$ 的一阶导数并令其为零。\n$$\n\\frac{d\\mathcal{L}}{d\\alpha} = \\frac{d}{d\\alpha} \\left[ n \\ln(\\alpha-1) - n \\ln(x_{\\min}) - \\alpha \\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right) \\right]\n$$\n$$\n\\frac{d\\mathcal{L}}{d\\alpha} = \\frac{n}{\\alpha-1} - \\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right)\n$$\n将导数设为零，得到最大似然估计值，记为 $\\hat{\\alpha}$：\n$$\n\\frac{n}{\\hat{\\alpha}-1} - \\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right) = 0\n$$\n$$\n\\frac{n}{\\hat{\\alpha}-1} = \\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right)\n$$\n求解 $\\hat{\\alpha}$：\n$$\n\\hat{\\alpha}-1 = \\frac{n}{\\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right)}\n$$\n$$\n\\hat{\\alpha} = 1 + \\frac{n}{\\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right)}\n$$\n为确认这是一个最大值，我们检查二阶导数：\n$$\n\\frac{d^2\\mathcal{L}}{d\\alpha^2} = -\\frac{n}{(\\alpha-1)^2}\n$$\n鉴于 $n>0$ 且 $\\alpha>1$，二阶导数恒为负。这证实了推导出的估计量 $\\hat{\\alpha}$ 对应于对数似然函数的一个最大值。该估计量在文献中被称为 Hill 估计量。\n\n第 2 部分：选择 $x_{\\min}$ 的有原则的程序。\n\n选择 $x_{\\min}$ 是一个优化问题，其目标是找到一个阈值，使得幂律模型能最佳地拟合数据的尾部。所述程序涉及最小化 Kolmogorov–Smirnov (KS) 距离。步骤如下：\n\n1.  为下限阈值 $x_{\\min}$ 定义一个候选值集合。一个合理的选择是观测样本中的唯一值集合 $\\{x_1, \\dots, x_N\\}$，其中 $N$ 是总样本量。将候选阈值记为 $x_{\\text{min,c}}$。为确保有足够的数据点来稳定地估计 $\\alpha$，通常将搜索范围限制在那些能在尾部保留最少观测数量（例如，$n \\ge 30$）的 $x_{\\text{min,c}}$ 值上。\n\n2.  对于所选集合中的每个候选阈值 $x_{\\text{min,c}}$：\n    a. 截断原始数据集，只包含满足 $x_i \\ge x_{\\text{min,c}}$ 的观测值。将此截断样本记为 $\\{x'_1, \\dots, x'_n\\}$，其中 $n$ 是这个新样本中的数据点数量。\n    b. 使用第 1 部分推导的最大似然估计量，为该截断样本估计幂律指数 $\\alpha$。这将得到一个特定的估计值 $\\hat{\\alpha}(x_{\\text{min,c}})$，该值取决于 $x_{\\text{min,c}}$ 的选择：\n    $$\n    \\hat{\\alpha}(x_{\\text{min,c}}) = 1 + \\frac{n}{\\sum_{j=1}^{n} \\ln\\left(\\frac{x'_j}{x_{\\text{min,c}}}\\right)}\n    $$\n    c. 计算截断数据的经验分布与拟合的理论幂律分布之间的 Kolmogorov–Smirnov 距离 $D(x_{\\text{min,c}})$。这需要两个组成部分：\n        i. 截断数据的经验累积分布函数 (ECDF)，$S(x)$，由 $S(x) = \\frac{1}{n} \\sum_{j=1}^{n} I(x'_j \\le x)$ 给出，其中 $I(\\cdot)$ 是指示函数。\n        ii. 必须推导出幂律模型的理论累积分布函数 (CDF) $P(x)$。\n        $$\n        P(x) = \\int_{x_{\\min}}^{x} p(t) dt = \\int_{x_{\\min}}^{x} \\frac{\\alpha-1}{x_{\\min}}\\left(\\frac{t}{x_{\\min}}\\right)^{-\\alpha} dt\n        $$\n        $$\n        P(x) = (\\alpha-1)x_{\\min}^{\\alpha-1} \\left[ \\frac{t^{1-\\alpha}}{1-\\alpha} \\right]_{x_{\\min}}^{x} = -x_{\\min}^{\\alpha-1} \\left( x^{1-\\alpha} - x_{\\min}^{1-\\alpha} \\right) = 1 - \\left(\\frac{x}{x_{\\min}}\\right)^{1-\\alpha}\n        $$\n        因此，拟合的理论 CDF 为 $P(x; x_{\\text{min,c}}) = 1 - \\left(\\frac{x}{x_{\\text{min,c}}}\\right)^{1-\\hat{\\alpha}(x_{\\text{min,c}})}$。\n        iii. 候选值 $x_{\\text{min,c}}$ 的 KS 距离是这两个函数在定义域 $x \\ge x_{\\text{min,c}}$ 上的最大绝对差：\n        $$\n        D(x_{\\text{min,c}}) = \\sup_{x \\ge x_{\\text{min,c}}} |S(x) - P(x; x_{\\text{min,c}})|\n        $$\n\n3.  选择最优阈值 $x_{\\min}^*$ 为最小化所计算的 KS 距离的候选值 $x_{\\text{min,c}}$：\n    $$\n    x_{\\min}^* = \\arg\\min_{x_{\\text{min,c}}} D(x_{\\text{min,c}})\n    $$\n该程序系统地搜索一个截断点，在该点之上，数据与假设的幂律分布最为一致。", "answer": "$$\\boxed{1 + \\frac{n}{\\sum_{i=1}^{n} \\ln\\left(\\frac{x_i}{x_{\\min}}\\right)}}$$", "id": "2505801"}, {"introduction": "我们观察到的生态学模式，有多大程度上反映了真实的自然过程，又有多大程度上是观测方法本身造成的假象？本练习深入探讨了“占有率-丰度关系”这一宏观生态学经典模式中一个常见的陷阱：不完美的物种探测。你将通过数学推导，揭示探测概率的异质性如何人为地制造出占有率与丰度之间的虚假关联，并学习如何构建一个统计学校正方法，以区分观测偏差与真实的生态信号。[@problem_id:2505767]", "problem": "宏观生态学家通常用占域概率来概括一个物种的地理分布，该概率定义为一个随机选择的地点被真实占据的概率，记为 $ \\psi $。一个普遍的宏观生态学模式是占域-丰度关系（OAR），即 $ \\psi $ 与平均局域丰度之间存在正相关关系。然而，不完美的探测以及异质性的探测概率 $ p $ 会导致虚假的OAR，即使真实占域在物种间是恒定的。请考虑以下生成模型，该模型仅使用了占域和探测的定义以及标准的独立性假设。\n\n对于物种 $ i $，在 $ S $ 个地点和每个地点 $ K $ 次重复访问中：\n- 在地点 $ s $，潜占域状态为 $ z_{is} \\sim \\mathrm{Bernoulli}(\\psi_i) $。\n- 在某次访问 $ k $ 中，若条件为 $ z_{is} = 1 $，可被探测的个体数量由平均局域丰度参数 $ \\lambda_i $ 概括。每个个体被独立探测到的概率为 $ r $（单一个体探测概率），因此，在占域条件下，单次访问中至少有一次探测的概率为 $ p_i = 1 - \\exp(- r \\lambda_i) $。在给定参数的情况下，各次访问和各个地点是独立的。\n\n设物种 $ i $ 的朴素占域估计量为 $ O_{i,\\mathrm{obs}} $，即在 $ K $ 次访问中至少有一次探测的地点比例。假设 $ S $ 足够大，使得 $ O_{i,\\mathrm{obs}} $ 可被视为其在该模型下的期望值。\n\n任务：\n1. 仅使用全概率定律和各次访问的独立性，推导出 $ \\mathbb{E}[O_{i,\\mathrm{obs}} \\mid \\psi_i, p_i] $ 作为 $ \\psi_i $、 $ p_i $ 和 $ K $ 的函数。然后，将其特化到模型 $ p_i = 1 - \\exp(- r \\lambda_i) $，明确展示即使 $ \\psi_i $ 在物种间是恒定的，$ \\mathbb{E}[O_{i,\\mathrm{obs}} \\mid \\lambda_i] $ 也如何依赖于 $ \\lambda_i $，并解释为什么这会在均值尺度上产生虚假的OAR。\n2. 宏观生态学家通常在logit尺度上分析占域。在上述假设下，设 $ \\psi_i = \\psi_0 $ 在物种间是恒定的，定义 $ y(\\lambda) = \\mathbb{E}[O_{i,\\mathrm{obs}} \\mid \\lambda] $。计算导数\n$$\nG(\\lambda) \\equiv \\frac{\\mathrm{d}}{\\mathrm{d}\\ln \\lambda} \\left[ \\ln\\!\\left( \\frac{y(\\lambda)}{1 - y(\\lambda)} \\right) \\right],\n$$\n并将其简化为用 $ \\lambda $、 $ \\psi_0 $、 $ K $ 和 $ r $ 表示的闭式表达式。您可以假设 $ S $ 足够大，使得 $ y(\\lambda) $ 是相关的总体期望。\n3. 当 $ \\psi_0 = 0.5 $、 $ K = 3 $、 $ r = 0.25 $ 和 $ \\lambda = 2 $ 时，计算 $ G(\\lambda) $ 的值。将您的答案四舍五入到四位有效数字。将答案表示为一个纯数字（无单位）。\n4. 在上述模型下，假设 $ p_i $ 已知，推导出探测校正的占域估计量 $ \\widehat{\\psi}_i $，用 $ O_{i,\\mathrm{obs}} $、 $ p_i $ 和 $ K $ 表示。根据推导出的表达式，简要评论当 $ \\psi_i $ 实际上在物种间是恒定时，此校正如何消除对 $ \\lambda_i $ 的虚假依赖性。\n\n您最终报告的答案必须仅为任务 $ 3 $ 中要求的单个数值，并按要求四舍五入。", "solution": "该问题陈述是一个定义明确的初等概率论和微积分练习，应用于统计生态学中关于占域-探测模型的标准问题。它具有科学依据、自成体系且客观。推导所需的所有定义和参数均已提供。该问题是有效的。\n\n任务1：推导期望朴素占域并解释虚假的占域-丰度关系（OAR）。\n设 $O_{i,\\mathrm{obs}}$ 为观测到的物种 $i$ 被探测到的地点比例。对于足够大的地点数量 $S$，该比例可用其期望值来近似，即在一个随机选择的地点探测到该物种的概率。设 $D_{is}$ 为在地点 $s$ 的 $K$ 次访问中至少探测到一次物种 $i$ 的事件。则 $\\mathbb{E}[O_{i,\\mathrm{obs}}] = P(D_{is})$。\n\n我们使用全概率定律，以潜占域状态 $z_{is}$ 为条件，$z_{is}$ 是一个参数为 $\\psi_i$ 的伯努利随机变量：\n$$\nP(D_{is}) = P(D_{is} \\mid z_{is}=1) P(z_{is}=1) + P(D_{is} \\mid z_{is}=0) P(z_{is}=0)\n$$\n根据问题陈述，我们有：\n$P(z_{is}=1) = \\psi_i$。\n$P(z_{is}=0) = 1 - \\psi_i$。\n如果物种不存在于该地点（$z_{is}=0$），则无法被探测到，所以 $P(D_{is} \\mid z_{is}=0) = 0$。\n\n如果物种存在（$z_{is}=1$），单次访问的探测概率为 $p_i$。在单次访问中*未*探测到该物种的概率为 $1 - p_i$。由于各次访问是独立的，在 $K$ 次访问中均未探测到该物种的概率为 $(1 - p_i)^K$。在 $K$ 次访问中至少有一次探测的概率是其补集：\n$$\nP(D_{is} \\mid z_{is}=1) = 1 - (1 - p_i)^K\n$$\n将这些项代回全概率定律：\n$$\n\\mathbb{E}[O_{i,\\mathrm{obs}}] = \\left[1 - (1 - p_i)^K\\right] \\psi_i + (0)(1 - \\psi_i) = \\psi_i \\left[1 - (1 - p_i)^K\\right]\n$$\n现在，我们使用给定的探测概率模型 $p_i = 1 - \\exp(-r \\lambda_i)$ 来特化此结果。\n这意味着 $1 - p_i = \\exp(-r \\lambda_i)$。将其代入我们关于期望观测占域的表达式中，得到：\n$$\n\\mathbb{E}[O_{i,\\mathrm{obs}} \\mid \\psi_i, \\lambda_i] = \\psi_i \\left[1 - (\\exp(-r \\lambda_i))^K\\right] = \\psi_i \\left[1 - \\exp(-rK\\lambda_i)\\right]\n$$\n为了解释虚假的OAR，我们假设真实占域 $\\psi_i$ 在所有物种间是恒定的，即对所有 $i$ 都有 $\\psi_i = \\psi_0$。那么期望观测占域变为：\n$$\n\\mathbb{E}[O_{i,\\mathrm{obs}} \\mid \\lambda_i] = \\psi_0 \\left[1 - \\exp(-rK\\lambda_i)\\right]\n$$\n该表达式表明，观测占域 $\\mathbb{E}[O_{i,\\mathrm{obs}}]$ 是平均局域丰度 $\\lambda_i$ 的单调递增函数。随着 $\\lambda_i$ 的增加，$\\exp(-rK\\lambda_i)$ 减小，因此 $\\mathbb{E}[O_{i,\\mathrm{obs}}]$ 增加。因此，即使所有物种的真实占域 $\\psi_0$ 都相同，丰度较高的物种 $\\lambda_i$ 也会有较高的观测占域。这纯粹是由于异质性探测概率造成的人为结果，在观测占域和丰度之间产生了正相关关系，这便是所谓的虚假OAR。\n\n任务2：计算导数 $G(\\lambda)$。\n我们需要计算 $G(\\lambda) \\equiv \\frac{\\mathrm{d}}{\\mathrm{d}\\ln \\lambda} \\left[ \\ln\\!\\left( \\frac{y(\\lambda)}{1 - y(\\lambda)} \\right) \\right]$，其中 $y(\\lambda) = \\psi_0 [1 - \\exp(-rK\\lambda)]$。关于 $\\ln \\lambda$ 的导数可以使用链式法则计算：$\\frac{\\mathrm{d}}{\\mathrm{d}\\ln \\lambda} = \\lambda \\frac{\\mathrm{d}}{\\mathrm{d}\\lambda}$。\n设 $f(\\lambda) = \\ln\\left( \\frac{y(\\lambda)}{1 - y(\\lambda)} \\right)$。则 $G(\\lambda) = \\lambda \\frac{\\mathrm{d}f}{\\mathrm{d}\\lambda}$。\n首先，我们求 $f(\\lambda)$ 关于 $\\lambda$ 的导数：\n$$\n\\frac{\\mathrm{d}f}{\\mathrm{d}\\lambda} = \\frac{\\mathrm{d}}{\\mathrm{d}\\lambda} \\left[ \\ln(y(\\lambda)) - \\ln(1 - y(\\lambda)) \\right] = \\left(\\frac{1}{y(\\lambda)} + \\frac{1}{1-y(\\lambda)}\\right) \\frac{\\mathrm{d}y}{\\mathrm{d}\\lambda} = \\frac{1}{y(\\lambda)(1-y(\\lambda))} \\frac{\\mathrm{d}y}{\\mathrm{d}\\lambda}\n$$\n接下来，我们计算 $y(\\lambda)$ 关于 $\\lambda$ 的导数：\n$$\n\\frac{\\mathrm{d}y}{\\mathrm{d}\\lambda} = \\frac{\\mathrm{d}}{\\mathrm{d}\\lambda} \\left( \\psi_0 [1 - \\exp(-rK\\lambda)] \\right) = \\psi_0 [0 - \\exp(-rK\\lambda)(-rK)] = \\psi_0 r K \\exp(-rK\\lambda)\n$$\n现在，代入 $y(\\lambda)$、 $1-y(\\lambda)$ 和 $\\frac{\\mathrm{d}y}{\\mathrm{d}\\lambda}$ 的表达式：\n$y(\\lambda) = \\psi_0 [1 - \\exp(-rK\\lambda)]$\n$1 - y(\\lambda) = 1 - \\psi_0 [1 - \\exp(-rK\\lambda)] = 1 - \\psi_0 + \\psi_0 \\exp(-rK\\lambda)$\n$$\n\\frac{\\mathrm{d}f}{\\mathrm{d}\\lambda} = \\frac{\\psi_0 r K \\exp(-rK\\lambda)}{\\left( \\psi_0 [1 - \\exp(-rK\\lambda)] \\right) \\left( 1 - \\psi_0 + \\psi_0 \\exp(-rK\\lambda) \\right)}\n$$\n我们可以消去 $\\psi_0$ 项：\n$$\n\\frac{\\mathrm{d}f}{\\mathrm{d}\\lambda} = \\frac{r K \\exp(-rK\\lambda)}{\\left( 1 - \\exp(-rK\\lambda) \\right) \\left( 1 - \\psi_0 + \\psi_0 \\exp(-rK\\lambda) \\right)}\n$$\n最后，我们计算 $G(\\lambda) = \\lambda \\frac{\\mathrm{d}f}{\\mathrm{d}\\lambda}$：\n$$\nG(\\lambda) = \\frac{\\lambda r K \\exp(-rK\\lambda)}{\\left( 1 - \\exp(-rK\\lambda) \\right) \\left( 1 - \\psi_0 + \\psi_0 \\exp(-rK\\lambda) \\right)}\n$$\n这就是所要求的闭式表达式。\n\n任务3：为给定参数计算 $G(\\lambda)$。\n给定参数为 $\\psi_0 = 0.5$、 $K = 3$、 $r = 0.25$ 和 $\\lambda = 2$。\n首先，计算指数函数的参数：\n$$\nrK\\lambda = (0.25)(3)(2) = 1.5\n$$\n现在将这些值代入 $G(\\lambda)$ 的表达式中：\n$$\nG(2) = \\frac{(2)(0.25)(3) \\exp(-1.5)}{\\left( 1 - \\exp(-1.5) \\right) \\left( 1 - 0.5 + 0.5 \\exp(-1.5) \\right)}\n$$\n$$\nG(2) = \\frac{1.5 \\exp(-1.5)}{\\left( 1 - \\exp(-1.5) \\right) \\left( 0.5 + 0.5 \\exp(-1.5) \\right)}\n$$\n分母可以被简化：\n$$\n\\left( 1 - \\exp(-1.5) \\right) \\left( 0.5 \\left(1 + \\exp(-1.5)\\right) \\right) = 0.5 \\left( 1 - \\exp(-1.5) \\right) \\left( 1 + \\exp(-1.5) \\right)\n$$\n使用恒等式 $(a-b)(a+b) = a^2 - b^2$，这变为：\n$$\n0.5 \\left( 1^2 - (\\exp(-1.5))^2 \\right) = 0.5 \\left( 1 - \\exp(-3) \\right)\n$$\n所以 $G(2)$ 的表达式简化为：\n$$\nG(2) = \\frac{1.5 \\exp(-1.5)}{0.5 \\left( 1 - \\exp(-3) \\right)} = \\frac{3 \\exp(-1.5)}{1 - \\exp(-3)}\n$$\n现在，我们计算数值：\n$\\exp(-1.5) \\approx 0.22313016$\n$\\exp(-3) \\approx 0.04978707$\n$$\nG(2) \\approx \\frac{3 \\times 0.22313016}{1 - 0.04978707} = \\frac{0.66939048}{0.95021293} \\approx 0.7044648\n$$\n四舍五入到四位有效数字，结果是 $0.7045$。\n\n任务4：推导探测校正的占域估计量 $\\widehat{\\psi}_i$。\n我们从任务1推导出的关系开始，将观测值 $O_{i,\\mathrm{obs}}$ 与其在模型下的期望值等同起来：\n$$\nO_{i,\\mathrm{obs}} \\approx \\psi_i \\left[1 - (1 - p_i)^K\\right]\n$$\n为了获得 $\\psi_i$ 的估计量（我们记为 $\\widehat{\\psi}_i$），我们只需通过求解 $\\psi_i$ 来反转此关系：\n$$\n\\widehat{\\psi}_i = \\frac{O_{i,\\mathrm{obs}}}{1 - (1 - p_i)^K}\n$$\n该估计量在分母不为零的条件下是有效的，这要求当 $K \\geq 1$ 时 $p_i > 0$。\n为评论此校正如何消除对 $\\lambda_i$ 的虚假依赖性，我们首先将任务1中 $O_{i,\\mathrm{obs}}$ 的表达式（其中包含真实参数 $\\psi_i$）代入我们的新估计量中：\n$$\n\\widehat{\\psi}_i \\approx \\frac{\\psi_i \\left[1 - (1 - p_i)^K\\right]}{1 - (1 - p_i)^K} = \\psi_i\n$$\n这表明，该估计量在平均意义上恢复了真实的占域参数 $\\psi_i$。关键在于 $1 - (1 - p_i)^K$ 这一项是在一个被占据的地点探测到该物种的总概率。这一项通过 $p_i = 1 - \\exp(-r\\lambda_i)$ 而是 $\\lambda_i$ 的函数。朴素占域 $O_{i, \\mathrm{obs}}$ 与此探测项成正比，从而导致了虚假的OAR。估计量 $\\widehat{\\psi}_i$ 的作用正是通过将朴素占域除以这个探测项。因此，分子（在 $O_{i,\\mathrm{obs}}$ 内）对 $\\lambda_i$ 的依赖性被分母中对 $\\lambda_i$ 的依赖性所抵消。结果，$\\widehat{\\psi}_i$ 不再是 $\\lambda_i$ 的函数，虚假的占域-丰度关系也随之消除。", "answer": "$$\\boxed{0.7045}$$", "id": "2505767"}]}