{"hands_on_practices": [{"introduction": "逻辑斯谛映射 $x_{t+1} = r x_t (1 - x_t)$ 是研究具有非重叠世代的单个种群动态的最基本模型之一。这个练习将引导你通过解析方法，亲自推导这个简单非线性系统行为的深刻变化。通过分析其不动点及其稳定性，你将揭示当参数 $r$ 变化时，系统如何通过一次倍周期分岔，从一个稳定的平衡状态跃迁到一个两点振荡循环，这是通往混沌的关键第一步。[@problem_id:2512867]", "problem": "在一个具有无重叠世代和密度依赖调节的单一物种的离散时间生态模型中，归一化种群密度 $x_t \\in [0,1]$ 根据逻辑斯谛映射 $x_{t+1} = r x_t (1 - x_t)$ 演化，其中 $r$ 是一个无量纲内在增长参数，受限于 $0 < r \\leq 4$ 以确保区间 $[0,1]$ 是前向不变的。将 $r$ 视为一个控制参数，在受控的实验室环境中可以通过调整资源来缓慢增加。\n\n仅使用一维映射的第一性原理定义，确定该映射的所有不动点 $x^{*}$ 作为 $r$ 的函数，并通过在每个不动点附近对映射进行线性化并分析由此产生的扰动动力学，推导出它们的局部稳定性作为 $r$ 的函数。然后，确定当 $r$ 从 $0$ 开始增加时，非平凡不动点首次通过倍周期（翻转）分岔失去稳定性，从而产生一个稳定的 2-周期环的精确参数值 $r_{\\mathrm{pd}}$。\n\n最终答案仅报告 $r_{\\mathrm{pd}}$ 的单一值。最终答案请表示为一个无单位的精确数。无需四舍五入。假设具有生物学意义的不动点满足 $x^{*} \\in [0,1]$ 且 $r > 0$。", "solution": "提交分析的问题陈述被认为是有效的。它在非线性动力学和种群生态学的既定理论中具有科学依据，信息充分且一致，表述良定，并使用客观、正式的语言。这是一维离散映射研究中的一个标准、基本问题。因此，我们可以进行推导。\n\n该系统由逻辑斯谛映射描述，这是一个函数 $f: [0,1] \\to [0,1]$，定义为：\n$$x_{t+1} = f(x_t) = r x_t (1 - x_t)$$\n其中 $x_t$ 是时间 $t$ 时的归一化种群密度，$r$ 是增长参数，满足 $0 < r \\leq 4$。\n\n首先，我们必须确定该映射的不动点，记为 $x^*$。不动点是系统不随时间变化的状态，即 $x_{t+1} = x_t = x^*$。因此，不动点的条件是：\n$$x^* = f(x^*) = r x^* (1 - x^*)$$\n必须求解该方程以得到 $x^*$。我们可以将其重写为：\n$$r x^* (1 - x^*) - x^* = 0$$\n提出公因子 $x^*$ 得：\n$$x^* [r(1 - x^*) - 1] = 0$$\n此方程为不动点提供了两个不同的解。\n\n第一个不动点是平凡解：\n$$x_1^* = 0$$\n这对应于种群的灭绝，并且对所有 $r$ 值都存在。\n\n第二个不动点通过求解括号中的表达式得到：\n$$r(1 - x^*) - 1 = 0$$\n$$r - r x^* - 1 = 0$$\n$$r x^* = r - 1$$\n$$x_2^* = \\frac{r - 1}{r} = 1 - \\frac{1}{r}$$\n这是非平凡不动点，代表一个稳定的种群水平。为了使该不动点在归一化域 $[0,1]$ 内具有生物学意义，我们需要 $x_2^* \\in [0,1]$。给定 $r > 0$，条件 $x_2^* \\leq 1$ 总是满足的，因为 $1 - \\frac{1}{r} \\leq 1$ 意味着 $-\\frac{1}{r} \\leq 0$，这是成立的。条件 $x_2^* \\geq 0$ 要求 $1 - \\frac{1}{r} \\geq 0$，简化为 $r \\geq 1$。因此，非平凡不动点 $x_2^*$ 在 $r \\geq 1$ 时存在且为正。当 $r=1$ 时，$x_2^* = x_1^* = 0$。\n\n接下来，我们分析这些不动点的局部稳定性。对于一维映射，不动点 $x^*$ 的稳定性由映射的导数 $f'(x)$ 在该点的值的绝对值决定。令 $\\lambda = f'(x^*)$ 为乘子。如果 $|\\lambda| < 1$，则不动点是局部稳定的；如果 $|\\lambda| > 1$，则不动点是不稳定的。如果 $|\\lambda| = 1$，则不动点是中性稳定的，可能会发生分岔。\n\n逻辑斯谛映射 $f(x) = rx - rx^2$ 的导数是：\n$$f'(x) = \\frac{df}{dx} = r - 2rx$$\n\n我们现在在每个不动点处计算此导数的值。\n\n对于平凡不动点 $x_1^* = 0$：\n$$\\lambda_1 = f'(0) = r - 2r(0) = r$$\n不动点 $x_1^* = 0$ 在 $|\\lambda_1| = |r| < 1$ 时是稳定的。由于问题指定 $r > 0$，此条件变为 $0 < r < 1$。对于 $r>1$，该不动点是不稳定的。在 $r=1$ 处，发生跨临界分岔，平凡和非平凡不动点交换稳定性。\n\n对于非平凡不动点 $x_2^* = 1 - \\frac{1}{r}$（其在 $r \\geq 1$ 时存在）：\n$$\\lambda_2 = f'\\left(1 - \\frac{1}{r}\\right) = r - 2r\\left(1 - \\frac{1}{r}\\right)$$\n$$\\lambda_2 = r - (2r - 2) = 2 - r$$\n该不动点在 $|\\lambda_2| = |2 - r| < 1$ 时是稳定的。这个不等式可以表示为：\n$$-1 < 2 - r < 1$$\n求解这个复合不等式：\n1. $2 - r < 1 \\implies 1 < r$\n2. $-1 < 2 - r \\implies r < 3$\n综合这些结果，非平凡不动点 $x_2^*$ 在 $1 < r < 3$ 的范围内是稳定的。\n\n问题要求的是非平凡不动点首次通过倍周期（或翻转）分岔失去稳定性时的参数值 $r_{\\mathrm{pd}}$。当乘子 $\\lambda$ 穿过 $-1$ 时，发生倍周期分岔。对于非平凡不动点 $x_2^*$，乘子是 $\\lambda_2 = 2 - r$。我们将其设为 $-1$ 以找到分岔点：\n$$2 - r = -1$$\n求解 $r$ 得：\n$$r = 3$$\n该值被指定为 $r_{\\mathrm{pd}}$。在 $r=3$ 时，不动点 $x_2^*$ 失去其稳定性，因为对于 $r > 3$，乘子变为 $\\lambda_2 < -1$，导致不稳定的振荡动力学。这种不稳定性产生了一个稳定的 2-周期环。这是逻辑斯谛映射通向混沌路径上的第一次倍周期事件。平凡不动点的乘子 $\\lambda_1 = r$ 始终为正，因此它不能经历倍周期分岔。\n\n因此，非平凡不动点首次经历倍周期分岔的精确参数值是 $r_{\\mathrm{pd}} = 3$。", "answer": "$$\\boxed{3}$$", "id": "2512867"}, {"introduction": "从单一种群的离散动态，我们转向更复杂的连续时间捕食者-猎物相互作用。Rosenzweig-MacArthur 模型是一个经典的例子，它解释了生态系统中常见的种群循环是如何产生的。这个练习要求你分析该系统的平衡点 $(N^*, P^*)$，并使用雅可比矩阵确定其稳定性，最终推导出当猎物的承载能力 $K$ 变化时，导致极限环出现的霍普夫分岔（Hopf bifurcation）的条件。[@problem_id:2512862]", "problem": "考虑 Rosenzweig–MacArthur 捕食者-猎物模型，该模型具有 Holling II 型功能性反应，由以下常微分方程组 (ODE) 给出：\n$$\n\\dot{N} \\;=\\; r\\,N\\!\\left(1-\\frac{N}{K}\\right) \\;-\\; \\frac{a\\,N\\,P}{1+h\\,a\\,N}, \n\\qquad\n\\dot{P} \\;=\\; e\\,\\frac{a\\,N\\,P}{1+h\\,a\\,N} \\;-\\; m\\,P,\n$$\n其中 $N$ 是猎物密度，$P$ 是捕食者密度，参数 $r, K, a, h, e, m$ 均为正常数，具有其通常的生态学意义（$r$ 为猎物内禀增长率，$K$ 为环境承载力，$a$ 为攻击率，$h>0$ 为处理时间，$e>0$ 为转化效率，$m>0$ 为捕食者死亡率）。\n\n从自治常微分方程平衡点的定义以及通过雅可比矩阵的线性化出发，完成以下任务：\n\n1. 通过求解 $\\dot{N}=0$ 和 $\\dot{P}=0$ 来推导所有平衡点 $(N^{\\ast},P^{\\ast})$。对每个平衡点，明确陈述其可行性条件，即确保在相关情况下 $N^{\\ast}>0$ 和 $P^{\\ast}>0$ 的参数条件。\n\n2. 计算向量场在一般点 $(N,P)$ 处的雅可比矩阵，并在每个平衡点处求值。使用雅可比矩阵的特征值来确定每个平衡点关于参数的局部稳定性类型。你的推理应基于线性稳定性判据：一个平衡点是局部渐近稳定的，当且仅当所有特征值的实部均为负。\n\n3. 将 $K$ 视为分岔参数并保持 $r,a,h,e,m$ 固定，关注于其可行时的内部共存平衡点。使用平面系统的 Hopf 分岔的迹-行列式特征，确定当 $K$ 变化时，内部平衡点经历 Hopf 分岔的条件。显式求解发生 Hopf 分岔时的临界环境承载力 $K_{c}$，其表达式仅用参数 $a,h,e,m$ 表示，且与 $r$ 无关。\n\n清晰地给出所有推导和理由。作为你最终报告的答案，只需提供临界环境承载力 $K_{c}$ 的闭式解析表达式。不需要进行数值计算或四舍五入，并且最终答案中不报告单位。", "solution": "该问题陈述是分析 Rosenzweig-MacArthur 捕食者-猎物模型的一个标准练习。它在科学上是合理的，提法恰当，客观，并包含了所有必要的信息。它是有效的。我们开始求解。\n\n常微分方程组 (ODE) 为：\n$$ \\dot{N} = rN\\left(1-\\frac{N}{K}\\right) - \\frac{aNP}{1+haN} = f(N,P) $$\n$$ \\dot{P} = e\\frac{aNP}{1+haN} - mP = g(N,P) $$\n所有参数 $r, K, a, h, e, m$ 均为正常数。\n\n**1. 平衡点与可行性条件**\n\n通过令 $\\dot{N}=0$ 和 $\\dot{P}=0$ 来找到平衡点 $(N^{\\ast}, P^{\\ast})$。\n\n由 $\\dot{P} = P\\left(e\\frac{aN}{1+haN} - m\\right) = 0$ 可得两种可能：$P=0$ 或 $e\\frac{aN}{1+haN} - m = 0$。\n\n情况 1：平凡平衡点。\n如果我们令 $N=0$ 和 $P=0$，两个方程都满足。因此，$(N^{\\ast}, P^{\\ast}) = (0,0)$ 是一个平衡点。它总是可行的。\n\n情况 2：无捕食者平衡点。\n如果 $P^{\\ast}=0$ 且 $N^{\\ast} \\neq 0$，方程 $\\dot{P}=0$ 满足。方程 $\\dot{N}=0$ 变为：\n$$ rN^{\\ast}\\left(1-\\frac{N^{\\ast}}{K}\\right) = 0 $$\n由于 $N^{\\ast} \\neq 0$ 且 $r>0$，我们必然有 $1 - \\frac{N^{\\ast}}{K} = 0$，这给出 $N^{\\ast}=K$。\n因此，$(N^{\\ast}, P^{\\ast}) = (K,0)$ 是一个平衡点。由于 $K>0$，它在生物学上总是可行的。\n\n情况 3：共存平衡点。\n此处，我们假设 $N^{\\ast}>0$ 且 $P^{\\ast}>0$。由 $\\dot{P}=0$，我们必然有：\n$$ e\\frac{aN^{\\ast}}{1+haN^{\\ast}} - m = 0 $$\n求解 $N^{\\ast}$：\n$$ eaN^{\\ast} = m(1+haN^{\\ast}) $$\n$$ N^{\\ast}(ea - mha) = m $$\n$$ N^{\\ast} = \\frac{m}{a(e-mh)} $$\n为使该平衡点可行，我们必须有 $N^{\\ast}>0$。由于 $m, a, h$ 均为正数，这要求分母为正：$e-mh > 0$，即 $e > mh$。\n\n现在我们将 $N^{\\ast}$ 代入 $\\dot{N}=0$ 方程来求 $P^{\\ast}$：\n$$ rN^{\\ast}\\left(1-\\frac{N^{\\ast}}{K}\\right) - \\frac{aN^{\\ast}P^{\\ast}}{1+haN^{\\ast}} = 0 $$\n由于 $N^{\\ast} \\neq 0$，我们可以用它来除：\n$$ r\\left(1-\\frac{N^{\\ast}}{K}\\right) = \\frac{aP^{\\ast}}{1+haN^{\\ast}} $$\n我们可以将来自捕食者零斜线 $e\\frac{aN^{\\ast}}{1+haN^{\\ast}} = m$ 的条件重新排列为 $\\frac{aN^{\\ast}}{1+haN^{\\ast}} = \\frac{m}{e}$。\n将此代入猎物零斜线方程得到：\n$$ r\\left(1-\\frac{N^{\\ast}}{K}\\right) = P^{\\ast}\\frac{a}{1+haN^{\\ast}} = P^{\\ast} \\frac{m}{eN^{\\ast}} $$\n求解 $P^{\\ast}$：\n$$ P^{\\ast} = \\frac{er}{m} N^{\\ast}\\left(1-\\frac{N^{\\ast}}{K}\\right) $$\n为了可行性，我们还需要 $P^{\\ast}>0$。由于 $e, r, m, N^{\\ast}$ 均为正数，这意味着 $1-\\frac{N^{\\ast}}{K} > 0$，即 $N^{\\ast} < K$。\n代入 $N^{\\ast}$ 的表达式：\n$$ \\frac{m}{a(e-mh)} < K $$\n总结来说，共存平衡点 $(N^{\\ast}, P^{\\ast})$ 存在且可行，当且仅当满足以下两个关于参数的条件：\n1. $e > mh$\n2. $K > \\frac{m}{a(e-mh)}$\n\n**2. 雅可比矩阵和局部稳定性**\n\n系统的雅可比矩阵 $J$ 为：\n$$ J(N,P) = \\begin{pmatrix} \\frac{\\partial f}{\\partial N} & \\frac{\\partial f}{\\partial P} \\\\ \\frac{\\partial g}{\\partial N} & \\frac{\\partial g}{\\partial P} \\end{pmatrix} $$\n偏导数是：\n$\\frac{\\partial f}{\\partial N} = r - \\frac{2rN}{K} - \\frac{aP}{(1+haN)^2}$\n$\\frac{\\partial f}{\\partial P} = -\\frac{aN}{1+haN}$\n$\\frac{\\partial g}{\\partial N} = \\frac{eaP}{(1+haN)^2}$\n$\\frac{\\partial g}{\\partial P} = \\frac{eaN}{1+haN} - m$\n\n$(0,0)$ 的稳定性：\n$$ J(0,0) = \\begin{pmatrix} r & 0 \\\\ 0 & -m \\end{pmatrix} $$\n特征值为 $\\lambda_1 = r > 0$ 和 $\\lambda_2 = -m < 0$。由于一个特征值为正，原点是一个鞍点，是不稳定的。\n\n$(K,0)$ 的稳定性：\n$$ J(K,0) = \\begin{pmatrix} r - 2rK/K & -aK/(1+haK) \\\\ 0 & eaK/(1+haK) - m \\end{pmatrix} = \\begin{pmatrix} -r & -\\frac{aK}{1+haK} \\\\ 0 & \\frac{eaK}{1+haK} - m \\end{pmatrix} $$\n特征值是对角线元素：$\\lambda_1 = -r < 0$ 和 $\\lambda_2 = \\frac{eaK}{1+haK} - m$。\n稳定性取决于 $\\lambda_2$ 的符号。\n- 如果 $\\lambda_2 < 0$，这等价于 $K < \\frac{m}{a(e-mh)}$，平衡点是一个稳定节点。这是共存平衡点不可行的情况。\n- 如果 $\\lambda_2 > 0$，这等价于 $K > \\frac{m}{a(e-mh)}$，平衡点是一个鞍点，是不稳定的。这是共存平衡点可行的情况。\n\n$(N^{\\ast}, P^{\\ast})$ 的稳定性：\n在共存平衡点处，我们计算雅可比矩阵的各分量：\n根据 $N^{\\ast}$ 的定义，$J_{22} = \\frac{\\partial g}{\\partial P}|_{(N^{\\ast},P^{\\ast})} = \\frac{eaN^{\\ast}}{1+haN^{\\ast}} - m = 0$。\n$J_{12} = \\frac{\\partial f}{\\partial P}|_{(N^{\\ast},P^{\\ast})} = -\\frac{aN^{\\ast}}{1+haN^{\\ast}}$。根据捕食者零斜线，$\\frac{aN^{\\ast}}{1+haN^{\\ast}} = \\frac{m}{e}$，所以 $J_{12} = -\\frac{m}{e}$。\n$J_{21} = \\frac{\\partial g}{\\partial N}|_{(N^{\\ast},P^{\\ast})} = \\frac{eaP^{\\ast}}{(1+haN^{\\ast})^2}$。由于在可行区域 $P^{\\ast}>0$，因此 $J_{21} > 0$。\n$J_{11} = \\frac{\\partial f}{\\partial N}|_{(N^{\\ast},P^{\\ast})} = r - \\frac{2rN^{\\ast}}{K} - \\frac{aP^{\\ast}}{(1+haN^{\\ast})^2}$。\n利用猎物零斜线关系 $r(1 - N^{\\ast}/K) = aP^{\\ast}/(1+haN^{\\ast})$，我们可以重写 $J_{11}$：\n$J_{11} = r - \\frac{2rN^{\\ast}}{K} - \\frac{1}{1+haN^{\\ast}}\\left(\\frac{aP^{\\ast}}{1+haN^{\\ast}}\\right) = r - \\frac{2rN^{\\ast}}{K} - \\frac{r(1 - N^{\\ast}/K)}{1+haN^{\\ast}}$\n$J_{11} = r \\left( 1 - \\frac{2N^{\\ast}}{K} - \\frac{1-N^{\\ast}/K}{1+haN^{\\ast}} \\right) = r \\left( \\frac{(1+haN^{\\ast})(1-2N^{\\ast}/K) - (1-N^{\\ast}/K)}{1+haN^{\\ast}} \\right)$\n化简分子：\n$(1 - 2N^{\\ast}/K + haN^{\\ast} - 2ha(N^{\\ast})^2/K) - (1 - N^{\\ast}/K) = haN^{\\ast} - N^{\\ast}/K - 2ha(N^{\\ast})^2/K = N^{\\ast}(ha - \\frac{1}{K} - \\frac{2haN^{\\ast}}{K})$\n所以，$J_{11} = \\frac{rN^{\\ast}}{1+haN^{\\ast}}\\left(ha - \\frac{1+2haN^{\\ast}}{K}\\right)$。\n\n特征值的特征方程为 $\\lambda^2 - \\text{tr}(J)\\lambda + \\det(J) = 0$。\n$\\text{tr}(J) = J_{11} + J_{22} = J_{11}$。\n$\\det(J) = J_{11}J_{22} - J_{12}J_{21} = -(-\\frac{m}{e})\\left(\\frac{eaP^{\\ast}}{(1+haN^{\\ast})^2}\\right) = \\frac{maP^{\\ast}}{(1+haN^{\\ast})^2}$。\n由于在可行区域内所有参数和变量均为正，所以 $\\det(J) > 0$。这意味着平衡点要么是节点，要么是螺线点，绝不会是鞍点。\n稳定性由迹的符号决定，$\\text{tr}(J) = J_{11}$。\n如果 $\\text{tr}(J) < 0$，平衡点是局部渐近稳定的，这要求：\n$$ ha - \\frac{1+2haN^{\\ast}}{K} < 0 \\implies K < \\frac{1+2haN^{\\ast}}{ha} = \\frac{1}{ha} + 2N^{\\ast} $$\n如果 $\\text{tr}(J) > 0$，平衡点是不稳定的，这意味着 $K > \\frac{1}{ha} + 2N^{\\ast}$。\n\n**3. Hopf 分岔**\n\n对于一个平面系统，当一个参数变化时，一个稳定的平衡点因一对共轭复特征值穿过虚轴而失去其稳定性，这时就发生了 Hopf 分岔。这种情况在 $\\text{tr}(J) = 0$ 且 $\\det(J) > 0$ 时发生。\n我们已经证明，对于可行的共存平衡点，$\\det(J)>0$。因此，分岔点可以通过将迹设为零来找到。\n设 $K_c$ 为发生分岔时环境承载力 $K$ 的临界值。\n$$ \\text{tr}(J) = \\frac{rN^{\\ast}}{1+haN^{\\ast}}\\left(ha - \\frac{1+2haN^{\\ast}}{K_c}\\right) = 0 $$\n由于 $r, N^{\\ast}, (1+haN^{\\ast})$ 均为正，我们必然有：\n$$ ha - \\frac{1+2haN^{\\ast}}{K_c} = 0 $$\n$$ ha = \\frac{1+2haN^{\\ast}}{K_c} $$\n求解 $K_c$：\n$$ K_c = \\frac{1+2haN^{\\ast}}{ha} = \\frac{1}{ha} + 2N^{\\ast} $$\n问题要求 $K_c$ 用 $a, h, e, m$ 表示。我们代入 $N^{\\ast}$ 的表达式：\n$$ N^{\\ast} = \\frac{m}{a(e-mh)} $$\n$$ K_c = \\frac{1}{ha} + 2\\left(\\frac{m}{a(e-mh)}\\right) = \\frac{e-mh}{ha(e-mh)} + \\frac{2mh}{ha(e-mh)} $$\n$$ K_c = \\frac{(e-mh) + 2mh}{ha(e-mh)} $$\n$$ K_c = \\frac{e+mh}{ha(e-mh)} $$\n这个临界环境承载力 $K_c$ 的表达式仅依赖于 $a, h, e, m$，且与 $r$ 无关，符合要求。在 $K$ 的这个值上，内部平衡点经历一次 Hopf 分岔，标志着从稳定螺线点转变为被稳定极限环包围的不稳定螺线点（即“富集悖论”）。", "answer": "$$\n\\boxed{\\frac{e+mh}{ha(e-mh)}}\n$$", "id": "2512862"}, {"introduction": "现实中的生态系统不仅在时间上演化，还在空间上相互关联，并常常表现出多个稳定状态。本练习将我们的视角从非空间模型扩展到空间耦合系统，并引入“韧性”这一核心生态学概念的量化度量。你将通过编写一个计算程序，使用蒙特卡洛模拟来估算一个具有专替稳定态的空间生态系统的“吸引盆稳定性”，这是一种衡量理想生态状态 $u_i \\equiv 1$ 抵抗大扰动能力的现代方法。[@problem_id:2512890]", "problem": "考虑一个一维生态斑块环，用于模拟因Allee效应而具有替代稳定状态的生物量密度。令 $N \\in \\mathbb{N}$ 为排列成周期性环的斑块数量，因此斑块索引满足周期性边界条件 $i \\mapsto (i \\pm 1) \\bmod N$。令 $u_i(t) \\in [0,1]$ 表示在时间 $t \\ge 0$ 时斑块 $i$ 中的生物量分数。每个斑块中的局部动态由与Allee效应相关的三次动力学给出，并且斑块通过最近邻扩散（弥散）耦合。该空间耦合系统为\n$$\n\\frac{d u_i}{d t} \\;=\\; r\\,u_i\\,(1 - u_i)\\,(u_i - a)\\;+\\;D\\,\\big(u_{i+1} + u_{i-1} - 2 u_i\\big),\n\\quad i = 0,1,\\dots,N-1,\n$$\n具有周期性边界条件和参数 $r > 0$（内禀增长率）、$a \\in (0,1)$（Allee阈值）以及 $D \\ge 0$（扩散强度）。状态 $u_i \\approx 1$ 对应于理想的植被状态，而 $u_i \\approx 0$ 对应于不希望的贫瘠状态。理想的吸引子是空间均匀的高生物量平衡点 $A_+:\\,u_i \\equiv 1$。\n\n在初始条件的概率测度 $\\mu$ 下，理想吸引子 $A_+$ 的盆地稳定性定义为轨迹收敛到 $A_+$ 的初始状态的 $\\mu$-测度。在实践中，通过蒙特卡洛采样来近似盆地稳定性，方法如下。\n\n- 从 $[0,1]^N$ 上的乘积均匀分布中采样 $M \\in \\mathbb{N}$ 个独立的初始条件 $u(0) \\in [0,1]^N$（即，每个分量都独立且均匀地从 $[0,1]$ 中采样）。\n- 使用时间步长为 $\\Delta t > 0$ 的显式前向欧拉方法，将系统在时间上向前数值积分到一个固定的时间界限 $T > 0$：\n$$\nu_i^{(n+1)} \\;=\\; u_i^{(n)} \\;+\\; \\Delta t\\;\\Big[r\\,u_i^{(n)}\\big(1 - u_i^{(n)}\\big)\\big(u_i^{(n)} - a\\big) \\;+\\; D\\,\\big(u_{i+1}^{(n)} + u_{i-1}^{(n)} - 2 u_i^{(n)}\\big)\\Big],\n$$\n对于 $n = 0,1,\\dots, K-1$，其中 $K = T/\\Delta t \\in \\mathbb{N}$。为符合生态现实性，在每一步之后强制执行状态约束：如果任何分量由于数值更新而离开 $[0,1]$，则将其重置到区间 $[0,1]$ 内。\n- 积分到 $t = T$ 后，当且仅当 $\\min_i u_i(T) \\ge 1 - \\varepsilon$ 时，宣布一条轨迹已恢复到理想吸引子，其中 $\\varepsilon \\in (0,1)$ 是一个指定的容差，否则认为其未恢复。\n- 将盆地稳定性估计为恢复指标的蒙特卡洛平均值：\n$$\n\\widehat{S} \\;=\\; \\frac{1}{M} \\sum_{m=1}^{M} \\mathbf{1}\\Big\\{ \\min_i u_i^{(m)}(T) \\ge 1 - \\varepsilon \\Big\\}.\n$$\n\n实现一个程序，对以下测试套件以向量化方式执行此蒙特卡洛估计。按规定使用显式前向欧拉方法，为保证可复现性设置给定的随机数生成器种子，并在每个欧拉步骤后将状态裁剪到 $[0,1]$。此问题中无需报告物理单位。不涉及角度。\n\n您的程序必须不接受任何输入，并且必须在内部运行以下测试套件，生成如上所述的盆地稳定性估计值。对于每个测试用例，参数以元组 $(N, r, a, D, \\Delta t, T, M, \\varepsilon, \\text{seed})$ 的形式给出：\n\n- 案例1（中等扩散，中等Allee阈值）： $(20,\\, 1.0,\\, 0.30,\\, 0.20,\\, 0.02,\\, 20.0,\\, 80,\\, 0.05,\\, 20231)$。\n- 案例2（弱扩散，高Allee阈值）： $(20,\\, 1.0,\\, 0.49,\\, 0.05,\\, 0.02,\\, 20.0,\\, 80,\\, 0.05,\\, 20232)$。\n- 案例3（单斑块基线）： $(1,\\, 1.0,\\, 0.30,\\, 0.00,\\, 0.02,\\, 40.0,\\, 200,\\, 0.05,\\, 20233)$。\n- 案例4（强扩散，较大网络）： $(50,\\, 1.0,\\, 0.35,\\, 0.50,\\, 0.01,\\, 15.0,\\, 60,\\, 0.05,\\, 20234)$。\n- 案例5（极强扩散，小时间步长）： $(30,\\, 1.0,\\, 0.40,\\, 1.00,\\, 0.005,\\, 10.0,\\, 50,\\, 0.05,\\, 20235)$。\n\n覆盖设计：\n- 案例1是具有中等耦合的一般情况。\n- 案例2挑战了在更高Allee阈值和更弱耦合下的恢复能力。\n- 案例3是一个边界情况（$N=1$, $D=0$），在这种情况下，无限时间下的理论盆地稳定性等于 $1 - a$，可作为算法正确性的参考。\n- 案例4评估了在强耦合的较大网络中的行为。\n- 案例5探讨了在极强扩散和小时间步长下的数值稳定性约束。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的、由逗号分隔的5个盆地稳定性估计值列表（例如，“[x1,x2,x3,x4,x5]”）。每个 $x_k$ 必须是案例 $k$ 的蒙特卡洛估计值 $\\widehat{S}$ 的十进制表示。", "solution": "该问题要求计算一个具有Allee效应的空间显式生态模型的盆地稳定性。该模型描述了生物量密度 $u_i(t)$ 在一个由 $N$ 个离散斑块组成的一维环上的动态变化。其控制方程是一个耦合常微分方程（ODEs）组：\n$$\n\\frac{d u_i}{d t} = f(u_i) + g(u_i, u_{i-1}, u_{i+1}) = \\underbrace{r\\,u_i\\,(1 - u_i)\\,(u_i - a)}_{\\text{局部动力学}} + \\underbrace{D\\,\\big(u_{i+1} + u_{i-1} - 2 u_i\\big)}_{\\text{扩散}},\n$$\n对于 $i = 0, 1, \\dots, N-1$。索引对 $N$ 取模以强制执行周期性边界条件。函数 $f(u_i)$ 代表局部种群动态，其表现出以阈值 $a \\in (0,1)$ 为特征的Allee效应。密度低于 $a$ 的种群趋向于灭绝（$u_i=0$），而高于 $a$ 的种群则可能向承载能力（$u_i=1$）增长。函数 $g(\\dots)$ 模拟了最近邻斑块之间的扩散，扩散系数为 $D \\ge 0$。表达式 $u_{i+1} + u_{i-1} - 2 u_i$ 是空间二阶导数的离散形式，代表了菲克扩散。\n\n问题在于估计所有斑块都处于承载能力时的理想平衡状态（即对所有 $i$ 都有 $u_i \\equiv 1$）的盆地稳定性。这是通过蒙特卡洛方法完成的。我们生成 $M$ 个独立的初始条件，其中每个 $u_i(0)$ 都从 $[0,1]$ 上均匀抽取。对于每个初始条件，我们在时间界限 $T$ 内模拟系统的轨迹。\n\n该模拟采用显式前向欧拉方法，这是一种用于积分常微分方程的一阶数值格式。对于一个系统 $\\frac{d\\mathbf{u}}{dt} = \\mathbf{F}(\\mathbf{u})$，其更新规则为 $\\mathbf{u}^{(n+1)} = \\mathbf{u}^{(n)} + \\Delta t \\cdot \\mathbf{F}(\\mathbf{u}^{(n)})$。将此应用于我们的特定系统，在时间步 $n$ 时每个斑块 $i$ 的更新规则是：\n$$\nu_i^{(n+1)} = u_i^{(n)} + \\Delta t \\left[ r\\,u_i^{(n)}\\big(1 - u_i^{(n)}\\big)\\big(u_i^{(n)} - a\\big) + D\\,\\big(u_{i+1}^{(n)} + u_{i-1}^{(n)} - 2 u_i^{(n)}\\big) \\right].\n$$\n为保持生态现实性（即生物量分数必须保持在区间 $[0,1]$ 内），任何计算出的超出此范围的值 $u_i^{(n+1)}$ 都会被投影回该区间。这是通过在每个欧拉步骤后对值进行裁剪来实现的。\n\n该实现旨在通过对所有 $M$ 个蒙特卡洛样本和所有 $N$ 个空间斑块同时进行向量化计算来提高效率。我们将时间步 $n$ 时的系统状态表示为一个 $M \\times N$ 的矩阵 $\\mathbf{U}^{(n)}$，其中每一行对应一次蒙特卡洛实现，每一列对应一个斑块。\n\n模拟过程如下：\n1.  **初始化**：通过从 $[0,1]$ 上的均匀分布中抽取数值，创建一个大小为 $M \\times N$ 的初始状态矩阵 $\\mathbf{U}^{(0)}$。为确保可复现性，随机数生成器被设定了种子。\n2.  **时间步循环**：模拟迭代 $K = T/\\Delta t$ 步。在每一步 $n$ 中：\n    a.  **反应项**：局部动力学项 $r\\,\\mathbf{U}^{(n)}\\,(1 - \\mathbf{U}^{(n)})\\,(\\mathbf{U}^{(n)} - a)$ 在矩阵 $\\mathbf{U}^{(n)}$ 上进行逐元素计算。\n    b.  **扩散项**：为所有斑块和所有样本高效地计算离散拉普拉斯算子。对于 $\\mathbf{U}^{(n)}$ 的每一行，通过循环移位该行的元素来获得邻居的状态 $u_{i-1}$ 和 $u_{i+1}$。在 `numpy` 中，这是通过沿 `axis=1` 使用 `np.roll` 来实现的。整个矩阵的扩散项计算为 $D \\times (\\text{np.roll}(\\mathbf{U}^{(n)}, 1, \\text{axis}=1) + \\text{np.roll}(\\mathbf{U}^{(n)}, -1, \\text{axis}=1) - 2 \\mathbf{U}^{(n)})$。这种方法能正确处理所有 $N \\ge 1$ 的周期性边界条件。对于 $N=1$ 的情况，移位后的数组与原数组相同，扩散项正确地计算为零。\n    c.  **欧拉更新**：状态矩阵更新为：$\\mathbf{U}^{(n+1)} = \\mathbf{U}^{(n)} + \\Delta t \\times (\\text{反应项} + \\text{扩散项})$。\n    d.  **裁剪**：使用 `np.clip` 将新状态矩阵 $\\mathbf{U}^{(n+1)}$ 中的值裁剪到区间 $[0,1]$。\n3.  **评估**：经过 $K$ 步后，我们得到最终的状态矩阵 $\\mathbf{U}^{(K)}$。对于每个样本 $m$（$\\mathbf{U}^{(K)}$ 的每一行），我们判断系统是否已恢复到理想状态。如果在该样本中所有斑块的最小生物量至少为 $1 - \\varepsilon$，即 $\\min_{i} u^{(m)}_i(T) \\ge 1 - \\varepsilon$，则宣布恢复。\n4.  **盆地稳定性估计**：盆地稳定性 $\\widehat{S}$ 被估计为满足恢复条件的 $M$ 个样本的比例。这是恢复事件的指示函数在所有蒙特卡洛试验上的均值。\n\n这个向量化过程被应用于问题中指定的五个测试用例，使用所提供的参数 $(N, r, a, D, \\Delta t, T, M, \\varepsilon, \\text{seed})$。得到的五个 $\\widehat{S}$ 的估计值被收集并格式化为最终输出。$N=1$ 和 $D=0$ 的特殊参考案例为实现提供了一个检验。对于这种情况，每个样本的动态都独立于其他斑块（因为只有一个斑块），并由 $\\frac{du}{dt} = r u(1-u)(u-a)$ 控制。稳定平衡点 $u=1$ 的理论吸引盆是区间 $(a, 1]$。由于初始条件在 $[0,1]$ 上是均匀的，所以从这个盆地开始的概率是 $1-a$。对于案例3，$a=0.30$，所以理论盆地稳定性是 $0.70$。数值估计应该接近这个值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef run_simulation(N, r, a, D, dt, T, M, eps, seed):\n    \"\"\"\n    Runs the Monte Carlo simulation for a single test case.\n\n    Args:\n        N (int): Number of patches.\n        r (float): Intrinsic growth rate.\n        a (float): Allee threshold.\n        D (float): Dispersal strength.\n        dt (float): Time step for Euler method.\n        T (float): Total simulation time.\n        M (int): Number of Monte Carlo samples.\n        eps (float): Tolerance for recovery condition.\n        seed (int): Seed for the random number generator.\n\n    Returns:\n        float: The estimated basin stability.\n    \"\"\"\n    # Initialize the random number generator with the specified seed for reproducibility.\n    rng = np.random.default_rng(seed)\n\n    # 1. Initialization: Create a matrix of M samples (rows) for N patches (columns).\n    # Initial conditions u_i(0) are drawn from a uniform distribution on [0, 1].\n    # U is an M x N matrix.\n    U = rng.uniform(low=0.0, high=1.0, size=(M, N))\n\n    # Calculate the number of time steps.\n    # The problem statement guarantees T/dt is an integer.\n    num_steps = int(T / dt)\n\n    # 2. Time-stepping Loop\n    for _ in range(num_steps):\n        # a. Reaction Term (local kinetics)\n        # This is computed element-wise for all M*N states simultaneously.\n        reaction = r * U * (1.0 - U) * (U - a)\n\n        # b. Diffusion Term (spatial coupling)\n        # np.roll handles periodic boundary conditions by circularly shifting array elements.\n        # axis=1 specifies rolling along the spatial dimension (patches).\n        # Shift left to get u_{i+1} for all i\n        u_i_plus_1 = np.roll(U, -1, axis=1)\n        # Shift right to get u_{i-1} for all i\n        u_i_minus_1 = np.roll(U, 1, axis=1)\n        # The discrete Laplacian term for all patches and samples\n        diffusion = D * (u_i_plus_1 + u_i_minus_1 - 2.0 * U)\n\n        # c. Euler Update\n        U = U + dt * (reaction + diffusion)\n\n        # d. Clipping\n        # Enforce state constraints u_i in [0, 1] after the update step.\n        U = np.clip(U, 0.0, 1.0)\n    \n    # After the simulation, U is the final state matrix U(T).\n\n    # 3. Evaluation\n    # For each sample (row), find the minimum biomass across all patches (columns).\n    min_biomass_per_sample = np.min(U, axis=1)\n\n    # A sample is considered 'recovered' if its minimum biomass is >= 1 - epsilon.\n    # This creates a boolean array of shape (M,).\n    recovered_samples = min_biomass_per_sample >= (1.0 - eps)\n\n    # 4. Basin Stability Estimation\n    # The estimate is the mean of the boolean array, where True=1 and False=0.\n    basin_stability = np.mean(recovered_samples)\n    \n    return basin_stability\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results in the specified format.\n    \"\"\"\n    # Test cases defined as tuples:\n    # (N, r, a, D, dt, T, M, eps, seed)\n    test_cases = [\n        (20, 1.0, 0.30, 0.20, 0.02, 20.0, 80, 0.05, 20231),\n        (20, 1.0, 0.49, 0.05, 0.02, 20.0, 80, 0.05, 20232),\n        (1, 1.0, 0.30, 0.00, 0.02, 40.0, 200, 0.05, 20233),\n        (50, 1.0, 0.35, 0.50, 0.01, 15.0, 60, 0.05, 20234),\n        (30, 1.0, 0.40, 1.00, 0.005, 10.0, 50, 0.05, 20235),\n    ]\n\n    results = []\n    for params in test_cases:\n        stability_estimate = run_simulation(*params)\n        results.append(stability_estimate)\n\n    # Final print statement must produce the single-line format.\n    # We use map(str, results) to convert each float to its string representation.\n    print(f\"[{','.join(map(str, results))}]\")\n\n# Execute the solution.\nsolve()\n```", "id": "2512890"}]}