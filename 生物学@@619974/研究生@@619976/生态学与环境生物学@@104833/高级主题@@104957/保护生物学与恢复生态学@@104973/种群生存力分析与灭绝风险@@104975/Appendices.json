{"hands_on_practices": [{"introduction": "种群生存力分析（PVA）的核心是评估灭绝风险，而这在确定性模型中是无法体现的。此练习要求您首先使用经典的逻辑斯谛增长方程来计算一个种群在理想条件下的确定性轨迹。通过这个计算，您将亲身体会确定性模型的预测能力及其根本局限性，从而理解为何在PVA中必须引入随机性来捕捉真实世界种群动态的不确定性。[@problem_id:2524078]", "problem": "一个封闭的、单一物种的种群受密度依赖性调节，且没有迁入或迁出。设初始丰度为 $N_0 = 200$ 个个体，密度无关的有限增长率为每年 $\\lambda = 1.05$，环境承载力为 $K = 1000$ 个个体。假设出生和死亡在时间上是连续发生的，并且密度调节通过经典的连续时间逻辑斯蒂机制起作用，其环境承载力为 $K$，瞬时人均增长率 $r$ 与给定密度无关条件下的 $\\lambda$ 一致。\n\n仅使用这些前提和标准的种群统计学定义，从第一性原理推导出确定性丰度 $N(t)$ 的表达式，并计算在时间 $t = 20$ 年时的确定性预期丰度。报告 $N(20)$ 的数值（单位：个体），并四舍五入至四位有效数字。\n\n然后，简要论证在没有任何种群统计或环境方差估计的情况下，使用此确定性轨迹作为种群生存力分析（PVA）的基线是否合适，并说明理由。你的论证部分不会以数值评分，但你计算出的丰度必须按上述要求报告。", "solution": "该问题陈述具有科学依据，提法恰当、客观，并包含足够的信息以得到唯一解。这是理论种群生态学中的一个标准问题。因此，该问题被认为是有效的，并将提供完整的解答。\n\n该问题描述了一个种群，其动态遵循连续时间逻辑斯蒂增长模型。描述种群丰度 $N(t)$ 作为时间 $t$ 函数的控制性微分方程是：\n$$\n\\frac{dN}{dt} = rN\\left(1 - \\frac{N}{K}\\right)\n$$\n其中 $r$ 是内禀人均增长率，$K$ 是环境承载力。\n\n首先，我们必须从给定的密度无关的有限增长率 $\\lambda$ 来确定 $r$ 的值。密度无关的情景对应于密度效应可以忽略不计的极限，即 $N \\to 0$。在此极限下，逻辑斯蒂方程简化为指数增长方程：\n$$\n\\frac{dN}{dt} = rN\n$$\n这个线性常微分方程的解是 $N(t) = N_0 \\exp(rt)$。有限增长率 $\\lambda$ 定义为种群数量在一个时间单位内变化的倍数，因此 $\\lambda = \\frac{N(t+1)}{N(t)}$。对于连续指数模型，这变为：\n$$\n\\lambda = \\frac{N_0 \\exp(r(t+1))}{N_0 \\exp(rt)} = \\frac{\\exp(rt)\\exp(r)}{\\exp(rt)} = \\exp(r)\n$$\n因此，有限增长率 $\\lambda$ 与瞬时增长率 $r$ 之间的关系是 $r = \\ln(\\lambda)$。给定 $\\lambda = 1.05$，我们有：\n$$\nr = \\ln(1.05)\n$$\n\n接下来，我们通过分离变量法求解逻辑斯蒂微分方程来推导 $N(t)$ 的表达式：\n$$\n\\frac{dN}{N\\left(1 - \\frac{N}{K}\\right)} = r dt\n$$\n为了对左侧进行积分，我们使用部分分式分解。首先，重写该项：\n$$\n\\frac{1}{N\\left(1 - \\frac{N}{K}\\right)} = \\frac{K}{N(K - N)}\n$$\n我们建立分解式：\n$$\n\\frac{K}{N(K - N)} = \\frac{A}{N} + \\frac{B}{K - N}\n$$\n两边乘以 $N(K-N)$ 得到 $K = A(K-N) + BN$。\n当 $N=0$ 时，我们得到 $K = A(K)$，所以 $A=1$。\n当 $N=K$ 时，我们得到 $K = B(K)$，所以 $B=1$。\n因此，微分方程变为：\n$$\n\\left(\\frac{1}{N} + \\frac{1}{K - N}\\right)dN = r dt\n$$\n对两边积分得到：\n$$\n\\int \\left(\\frac{1}{N} + \\frac{1}{K - N}\\right)dN = \\int r dt\n$$\n$$\n\\ln|N| - \\ln|K - N| = rt + C\n$$\n其中 $C$ 是积分常数。由于种群从 $N_0 < K$ 开始并且正在增长（$\\lambda > 1$），$N(t)$ 将保持在 $0$ 和 $K$ 之间，所以我们可以去掉绝对值符号：\n$$\n\\ln\\left(\\frac{N}{K - N}\\right) = rt + C\n$$\n我们使用初始条件 $N(0) = N_0$ 来求解 $C$：\n$$\n\\ln\\left(\\frac{N_0}{K - N_0}\\right) = r(0) + C \\implies C = \\ln\\left(\\frac{N_0}{K - N_0}\\right)\n$$\n将 $C$ 代回方程中：\n$$\n\\ln\\left(\\frac{N(t)}{K - N(t)}\\right) = rt + \\ln\\left(\\frac{N_0}{K - N_0}\\right)\n$$\n为了解出 $N(t)$，我们首先对两边取指数：\n$$\n\\frac{N(t)}{K - N(t)} = \\exp\\left(rt + \\ln\\left(\\frac{N_0}{K - N_0}\\right)\\right) = \\left(\\frac{N_0}{K - N_0}\\right)\\exp(rt)\n$$\n为简化起见，我们将右侧的项命名为 $f(t) = \\left(\\frac{N_0}{K-N_0}\\right)\\exp(rt)$。那么 $N(t) = (K - N(t))f(t)$。\n$$\nN(t) = K f(t) - N(t)f(t)\n$$\n$$\nN(t) (1 + f(t)) = K f(t)\n$$\n$$\nN(t) = \\frac{K f(t)}{1 + f(t)} = \\frac{K}{1 + \\frac{1}{f(t)}}\n$$\n将 $f(t)$ 的表达式代回：\n$$\nN(t) = \\frac{K}{1 + \\left(\\frac{K - N_0}{N_0}\\right)\\exp(-rt)}\n$$\n这就是确定性逻辑斯蒂增长的一般表达式。\n\n现在我们使用给定的值计算 $t = 20$ 年时的丰度：$N_0 = 200$, $K = 1000$, $\\lambda = 1.05$, and $t = 20$。\n首先，增长率 $r = \\ln(1.05)$。\n$$\nN(20) = \\frac{1000}{1 + \\left(\\frac{1000 - 200}{200}\\right)\\exp(-\\ln(1.05) \\times 20)}\n$$\n$$\nN(20) = \\frac{1000}{1 + \\left(\\frac{800}{200}\\right)\\exp(-20 \\ln(1.05))}\n$$\n$$\nN(20) = \\frac{1000}{1 + 4 \\exp(\\ln(1.05^{-20}))}\n$$\n$$\nN(20) = \\frac{1000}{1 + 4(1.05)^{-20}}\n$$\n计算数值：\n$1.05^{20} \\approx 2.6532977$。\n$(1.05)^{-20} \\approx 0.37688948$。\n$$\nN(20) \\approx \\frac{1000}{1 + 4(0.37688948)} = \\frac{1000}{1 + 1.50755792} = \\frac{1000}{2.50755792} \\approx 398.7945\n$$\n四舍五入到四位有效数字，在 $t = 20$ 年时的确定性丰度是 $398.8$ 个个体。\n\n最后，我们必须论证在没有方差估计的情况下，将此确定性轨迹作为种群生存力分析（PVA）的基线是否合适。这从根本上说是不合适的。PVA的核心目的是估计灭绝概率，而这是一个内禀的随机现象。灭绝风险源于随机波动，可分为种群统计随机性（个体生存和繁殖中的偶然事件）、环境随机性（影响所有个体的环境条件波动）、遗传随机性（例如近交衰退）和灾变。根据其定义，确定性模型不包含任何随机因素。它预测种群的唯一、确定的轨迹。在这种情况下，确定性轨迹趋近于环境承载力 $K=1000$，这意味着灭绝概率为零。这是一个不符合生物学现实的结论，因为即使一个具有正平均增长率的种群，也可能因一系列不利的随机事件而被推向灭绝，尤其是在其规模较小的时候。一个有意义的PVA绝对需要估计和纳入方差（种群统计方差和/或环境方差），以模拟未来可能轨迹的分布，从而计算出非零的灭绝概率。单独使用确定性模型具有误导性，并且违背了生存力分析的目的。", "answer": "$$\\boxed{398.8}$$", "id": "2524078"}, {"introduction": "在建立了随机性的必要性之后，我们将探索一个基础的随机种群模型——高尔顿-沃森（Galton–Watson）分支过程。这个模型是理解纯粹由个体繁殖和存活的随机事件（即人口随机性）如何导致种群灭绝的有力工具，即便在平均增长率大于1的情况下也是如此。本练习将指导您为一个具有泊松后代分布的种群计算其最终灭绝概率，让您能够亲手量化由内在随机性所带来的风险。[@problem_id:2524077]", "problem": "考虑一个时间齐次 Galton–Watson 分支过程，该过程从初始数量的创始者 $N_0 \\in \\{0,1,2,\\dots\\}$ 开始。每一代的每个个体在下一代中产生的后代数量是一个随机数，这些数量是独立同分布的，服从均值为 $m \\ge 0$ 的泊松随机变量。最终灭绝概率是指谱系最终消亡（在有限或无限时间内种群规模达到零）的概率。\n\n使用以下基本依据：\n- 后代分布 $X$ 的概率生成函数 (PGF) 是 $G(s) = \\mathbb{E}[s^X]$，对于 $s \\in [0,1]$。\n- 对于从单个创始者 ($N_0 = 1$) 开始的 Galton–Watson 过程，最终灭绝概率 $q$ 是 PGF 在 $[0,1]$ 中的最小不动点，即满足 $q = G(q)$ 的最小 $q \\in [0,1]$。\n- 对于 $N_0 \\ge 1$ 个独立的创始者，最终灭绝概率是 $q^{N_0}$。\n- 均值为 $m$ 的泊松分布的 PGF 是 $G(s) = \\exp(m(s-1))$。\n\n任务：\n1. 从上述定义出发，推导表征在泊松($m$)后代分布下，单个创始者最终灭绝概率 $q$ 的不动点方程。\n2. 解释在何种条件下存在非平凡不动点 $q \\in [0,1)$，以及在何种条件下唯一的不动点是 $q=1$。\n3. 设计一个稳健的数值方法，用以求解给定 $m$ 的最小不动点 $q \\in [0,1]$，并为下面指定的测试套件计算最终灭绝概率 $q^{N_0}$。您的方法必须正确处理边界情况，例如 $N_0 = 0$、$m = 0$、$m = 1$ 以及 $m$ 略大于 $1$ 的近临界情况。\n4. 当 $m$ 仅略大于 $1$（近临界）时，对灭绝概率的大小进行解释。您的解释应基于分支过程的性质，并说明为什么即使在 $m > 1$ 的情况下，显著的灭绝风险仍然存在。\n\n测试套件：\n- 案例 A: $(N_0, m) = (10, 1.1)$\n- 案例 B: $(N_0, m) = (10, 0.9)$\n- 案例 C: $(N_0, m) = (10, 1.0)$\n- 案例 D: $(N_0, m) = (1, 2.0)$\n- 案例 E: $(N_0, m) = (2, 2.0)$\n- 案例 F: $(N_0, m) = (0, 1.1)$\n\n数值输出要求：\n- 对于每个案例，输出最终灭绝概率，该概率为 $[0,1]$ 内的实数，四舍五入至六位小数。\n- 您的程序应生成单行输出，其中包含按 A–F 顺序排列的结果，形式为逗号分隔的列表，并用方括号括起，不含空格。例如：“[0.123456,0.234567,0.345678,0.456789,0.567890,0.678901]”。", "solution": "所述问题已进行验证。\n\n**步骤 1：提取给定信息**\n- 过程：时间齐次 Galton–Watson 分支过程。\n- 初始种群：$N_0 \\in \\{0, 1, 2, \\dots\\}$。\n- 后代分布：独立同分布的泊松随机变量，均值为 $m \\ge 0$。\n- 最终灭绝概率：谱系达到零种群规模的概率。\n- 概率生成函数 (PGF)：$G(s) = \\mathbb{E}[s^X]$，对于 $s \\in [0,1]$。\n- $N_0 = 1$ 时的灭绝概率：PGF 的最小不动点 $q \\in [0,1]$，满足 $q = G(q)$。\n- $N_0 \\ge 1$ 时的灭绝概率：$q^{N_0}$。\n- 泊松($m$) 的 PGF：$G(s) = \\exp(m(s-1))$。\n\n**步骤 2：验证给定信息**\n该问题具有科学依据，它建立在 Galton-Watson 分支过程的成熟数学理论之上，该理论是随机种群动力学的基石。问题中的前提、定义和常数均为该领域的标准。该问题是适定的，为确定指定参数的唯一、有意义的解提供了所有必要信息。所使用的语言客观、精确，没有歧义或无法形式化的概念。该问题未违反任何无效性标准。它代表了应用概率论中一个标准而全面的练习。\n\n**步骤 3：结论**\n问题有效。将构建解决方案。\n\n**解决方案推导**\n\n将通过解决问题陈述中指定的四个任务来推导解决方案。\n\n**任务 1：不动点方程的推导**\n\n后代分布是均值为 $m$ 的泊松分布。该分布的概率生成函数 (PGF) 由 $G(s) = \\exp(m(s-1))$ 给出。\n\n以单个创始者开始的谱系的最终灭绝概率，记为 $q$，是不动点方程 $s = G(s)$ 在区间 $[0,1]$ 中的最小非负根。\n\n通过将泊松分布的特定 PGF 代入此一般方程，我们得到此特定过程的不动点方程：\n$$q = \\exp(m(q-1))$$\n这就是必须为 $q$ 求解的超越方程。\n\n**任务 2：非平凡不动点的条件**\n\n我们分析方程 $s = G(s)$ 在区间 $s \\in [0,1]$ 中解的存在性。让我们定义一个函数 $f(s) = G(s) - s$。我们正在寻找 $f(s)=0$ 的根。\n\n对于所有 $s$，函数 $G(s) = \\exp(m(s-1))$ 是一个凸函数，因为它的二阶导数 $G''(s) = m^2 \\exp(m(s-1))$ 是非负的。\n\n在 $s=1$ 处始终存在一个不动点，因为 $G(1) = \\exp(m(1-1)) = \\exp(0) = 1$。\n\n是否存在另一个不动点 $q \\in [0,1)$ 取决于函数 $G(s)$ 在 $s=1$ 附近的行为。这由 PGF 在 $s=1$ 处的斜率决定，该斜率为 $G'(1)$。PGF 的导数是 $G'(s) = m \\exp(m(s-1))$。\n在 $s=1$ 处求值：\n$$G'(1) = m \\exp(m(1-1)) = m$$\n在分支过程理论中，$G'(1)$ 是后代的期望数量，对于此泊松分布，该值确实为 $m$。\n\n有两种不同的情况：\n1.  **次临界和临界情况 ($m \\le 1$):**\n    如果 $m \\le 1$，则 PGF 在 $s=1$ 处的斜率小于或等于直线 $y=s$ 的斜率（即 $1$）。由于 $G(s)$ 是凸函数且 $G(1)=1$，对于 $s \\in [0,1)$，函数 $y=G(s)$ 的图像必须完全位于直线 $y=s$ 的上方，除非在 $m=1$ 时，它们在 $s=1$ 处相切。因此，在区间 $[0,1]$ 中，$s = G(s)$ 的唯一解是 $s=1$。最小不动点是 $q=1$。灭绝是必然的。\n\n2.  **超临界情况 ($m > 1$):**\n    如果 $m > 1$，则 PGF 在 $s=1$ 处的斜率大于 $1$。由于 $G(s)$ 是凸函数，$G(1)=1$，且 $G(0) = \\exp(-m) > 0$，曲线 $y=G(s)$ 必须在某个点 $q \\in [0,1)$ 从下方穿过直线 $y=s$。这个交点是最小的非负不动点。在这种情况下，在 $[0,1]$ 中有两个不动点：$q$ 和 $1$。最终灭绝概率是这两者中较小的一个，因此存在一个非平凡不动点 $q \\in [0,1)$。灭绝不是必然的。\n\n总而言之，当且仅当后代平均数量 $m$ 大于 $1$ 时，才存在非平凡的灭绝概率 $q < 1$。如果 $m \\le 1$，则灭绝概率为 $q=1$。\n\n**任务 3：数值方法设计**\n\n为了求解最终灭绝概率 $P_{\\text{ext}} = q^{N_0}$，我们必须首先计算 $q$。\n\n算法流程如下：\n1.  **处理边界情况：**\n    - 如果初始创始者数量 $N_0 = 0$，种群已经灭绝。概率为 $1$。\n    - 如果平均后代数 $m \\le 1$，根据任务 2 的分析，单个创始者的灭绝概率为 $q=1$。对于 $N_0 > 0$，总灭绝概率为 $1^{N_0} = 1$。$m=0$ 的情况是其中的一个子集，此时灭绝是立即发生的，得到 $q=1$。\n\n2.  **超临界情况 ($m > 1$) 的数值解：**\n    - 对于 $m > 1$，我们必须数值求解方程 $q = \\exp(m(q-1))$ 在 $[0,1]$ 中的最小根。\n    - 一个稳健且理论上可靠的方法是不动点迭代法。我们可以定义一个迭代序列：\n      $$q_{k+1} = G(q_k) = \\exp(m(q_k - 1))$$\n    - 根据分支过程理论的一个已知结果，从 $q_0 = 0$ 开始，该迭代序列是单调递增的，并收敛到最小不动点 $q$。\n    - 迭代将持续进行，直到连续两次迭代值之间的变化小于指定的容差，例如 $|q_{k+1} - q_k| < 10^{-12}$。\n    - 一旦找到单个创始者的灭绝概率 $q$，则 $N_0$ 个创始者的最终答案计算为 $q^{N_0}$。\n\n**任务 4：近临界情况 ($m \\gtrsim 1$) 的解释**\n\n当 $m$ 仅略大于 $1$ 时，设 $m = 1+\\epsilon$，其中 $\\epsilon$ 是一个小的正数。我们必须解释为什么灭绝概率仍然很高。\n\n让我们在 $q=1$ 附近近似求解 $q = G(q)$。使用 $G(q)$ 在 $q=1$ 附近的二阶泰勒展开：\n$$G(q) \\approx G(1) + G'(1)(q-1) + \\frac{G''(1)}{2!}(q-1)^2$$\n我们有 $G(1)=1$，$G'(1)=m$，以及 $G''(q) = m^2\\exp(m(q-1))$，所以 $G''(1)=m^2$。不动点方程 $q=G(q)$ 变为：\n$$q \\approx 1 + m(q-1) + \\frac{m^2}{2}(q-1)^2$$\n重新整理各项得到：\n$$0 \\approx (m-1)(q-1) + \\frac{m^2}{2}(q-1)^2$$\n因为我们寻求的是 $q \\ne 1$ 的解，我们可以除以 $(q-1)$ 项：\n$$0 \\approx (m-1) + \\frac{m^2}{2}(q-1)$$\n解出 $q$：\n$$q-1 \\approx - \\frac{2(m-1)}{m^2}$$\n$$q \\approx 1 - \\frac{2(m-1)}{m^2}$$\n代入 $m=1+\\epsilon$：\n$$q \\approx 1 - \\frac{2\\epsilon}{(1+\\epsilon)^2} \\approx 1 - 2\\epsilon(1 - 2\\epsilon + \\dots) \\approx 1 - 2\\epsilon$$\n这个近似表明，对于一个小的正常数增长因子 $\\epsilon = m-1$，灭绝概率 $q$ 约等于 $1-2\\epsilon$，这是一个非常接近 $1$ 的值。\n\n**解释：** 即使在种群平均期望增长 ($m>1$) 的情况下，高灭绝风险的持续存在是**人口随机性**的一个基本结果。在早期世代，当总种群规模较小时，整个谱系的命运对少数个体产生的后代数量的随机波动高度敏感。几次“不幸”的世代，即实际产生的后代数量低于平均水平，就足以使种群走向灭绝。这个过程类似于一个带有轻微正向漂移的随机游走。虽然期望是远离原点（灭绝状态），但仍然有相当大的概率会触及位于零点的吸收壁，尤其是当漂移（与 $m-1$ 成正比）很小时。谱系必须度过这个初始的高风险阶段，达到足够大的规模，此时大数定律会减弱个体层面随机性的影响，种群的增长轨迹才会与其正期望值对齐。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the ultimate extinction probability in a Galton-Watson process\n    with a Poisson offspring distribution for a given set of test cases.\n    \"\"\"\n\n    def calculate_extinction_prob(N0, m):\n        \"\"\"\n        Calculates the ultimate extinction probability for a given N0 and m.\n\n        Args:\n            N0 (int): The initial number of founders.\n            m (float): The mean of the Poisson offspring distribution.\n\n        Returns:\n            float: The ultimate extinction probability.\n        \"\"\"\n        # Case 1: Initial population is zero. Extinction is a certain event.\n        if N0 == 0:\n            return 1.0\n\n        # Case 2: Subcritical or critical process (m <= 1).\n        # The ultimate extinction probability for a single founder is q=1.\n        # For N0 founders, the probability is 1^N0 = 1.\n        if m <= 1.0:\n            return 1.0\n\n        # Case 3: Supercritical process (m > 1).\n        # We must numerically find the smallest fixed point q in [0,1] of\n        # the PGF G(s) = exp(m*(s-1)). The equation is q = exp(m*(q-1)).\n        # We use fixed-point iteration, q_{k+1} = G(q_k), starting at q_0 = 0.\n        # This is guaranteed to converge to the smallest fixed point.\n        q = 0.0  # Initial guess for the single-founder extinction probability\n        tolerance = 1e-12\n        max_iterations = 1000\n\n        for _ in range(max_iterations):\n            q_next = np.exp(m * (q - 1.0))\n            if np.abs(q_next - q) < tolerance:\n                q = q_next\n                break\n            q = q_next\n        \n        # The total extinction probability for N0 independent founders is q^N0.\n        # Using np.power is robust for float exponents.\n        return np.power(q, N0)\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (N0, m)\n        (10, 1.1),  # Case A\n        (10, 0.9),  # Case B\n        (10, 1.0),  # Case C\n        (1, 2.0),   # Case D\n        (2, 2.0),   # Case E\n        (0, 1.1),   # Case F\n    ]\n\n    results = []\n    for case in test_cases:\n        N0, m = case\n        prob = calculate_extinction_prob(N0, m)\n        # Format to 6 decimal places as required.\n        results.append(f\"{prob:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2524077"}, {"introduction": "真实世界的种群很少是同质的；它们由具有不同存活率和繁殖率的年龄或阶段组成。为了将这种生命史结构融入模型，生态学家们广泛使用阶段结构矩阵模型。本练习将带您构建一个莱夫科维奇（Lefkovitch）矩阵，这是现代PVA中常用的工具，并要求您通过数值迭代方法计算种群的长期增长率 $λ$ 和稳定阶段分布，这是评估结构化种群生存力的两个关键指标。[@problem_id:2524056]", "problem": "给定一个适用于种群生存力分析（PVA）的离散时间、阶段结构种群模型。该种群被划分为 $3$ 个阶段：阶段 $1$（新生个体或幼苗），阶段 $2$（幼年或亚成年个体），以及阶段 $3$（成年个体）。在时间步长 $t \\to t+1$ 的种群预测由以下线性系统描述\n$$\n\\mathbf{n}_{t+1} = \\mathbf{A}\\,\\mathbf{n}_t,\n$$\n其中 $\\mathbf{n}_t \\in \\mathbb{R}_{\\ge 0}^3$ 是时间 $t$ 的种群向量，$\\mathbf{A} \\in \\mathbb{R}_{\\ge 0}^{3 \\times 3}$ 是 $3$ 阶段 Lefkovitch 矩阵。矩阵 $\\mathbf{A}$ 的形式如下\n$$\n\\mathbf{A} = \\begin{bmatrix}\nF_1 & F_2 & F_3\\\\\ns_1 & s_2(1-g_2) & 0\\\\\n0 & s_2 g_2 & s_3\n\\end{bmatrix},\n$$\n该矩阵基于繁殖前普查和以下假设构建：\n- 阶段 $1$ 的个体不会在跨时间步长后仍停留在阶段 $1$；阶段 $1$ 的所有存活者在下一次普查时都转移到阶段 $2$（即，阶段 $1$ 的条件前向转移概率为 $1$）。\n- 阶段 $2$ 的存活者或者以条件概率 $(1-g_2)$ 停留在阶段 $2$，或者以条件概率 $g_2$ 向前转移到阶段 $3$。\n- 阶段 $3$ 的存活者停留在阶段 $3$（不存在更高阶段）。\n- 所有生育率 $F_1, F_2, F_3$ 产生新的阶段 $1$ 个体。\n- 所有存活概率 $s_1, s_2, s_3$ 和条件前向转移概率 $g_2$ 均为 $[0,1]$ 范围内的无量纲小数（请勿使用百分号）。\n\n令 $\\lambda$ 表示种群的长期主导增长率，定义为 $\\mathbf{A}$ 的谱半径；令 $\\mathbf{w}$ 表示相应的稳定阶段分布，定义为与 $\\lambda$ 相关联的 $\\mathbf{A}$ 的唯一右特征向量，其元素非负且归一化后总和为 $1$。\n\n任务：\n- 对于下面的每一组参数，根据给定的存活概率、转移概率和生育率构建矩阵 $\\mathbf{A}$。\n- 仅依据非负矩阵主导特征值和稳定阶段分布的基本定义，数值计算 $\\lambda$ 和 $\\mathbf{w}$，不使用任何闭式特征值公式。\n- 报告 $\\lambda$ 和 $\\mathbf{w}$，每个值四舍五入到 $6$ 位小数。所有输出必须是小数。\n\n测试集（四组参数）：\n$1.$ $(F_1,F_2,F_3) = (0.0, 1.2, 2.8)$, $(s_1,s_2,s_3) = (0.4, 0.7, 0.85)$, $g_2 = 0.6$。\n$2.$ $(F_1,F_2,F_3) = (0.0, 0.5, 1.2)$, $(s_1,s_2,s_3) = (0.3, 0.6, 0.8)$, $g_2 = 0.5$。\n$3.$ $(F_1,F_2,F_3) = (0.2, 0.0, 4.0)$, $(s_1,s_2,s_3) = (0.5, 0.75, 0.9)$, $g_2 = 0.9$。\n$4.$ $(F_1,F_2,F_3) = (0.0, 0.8, 0.0)$, $(s_1,s_2,s_3) = (0.6, 0.65, 0.7)$, $g_2 = 0.05$。\n\n最终输出格式：\n- 你的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表形式的结果。\n- 每个测试用例的结果应为一个双元素列表：第一个元素是 $\\lambda$（一个浮点数），第二个元素是稳定阶段分布 $\\mathbf{w}$（一个包含 $3$ 个浮点数的列表）。例如：\n$[[\\lambda_1, [w_{1,1}, w_{1,2}, w_{1,3}]], [\\lambda_2, [w_{2,1}, w_{2,2}, w_{2,3}]], [\\lambda_3, [w_{3,1}, w_{3,2}, w_{3,3}]], [\\lambda_4, [w_{4,1}, w_{4,2}, w_{4,3}]]]$。\n- 所有数值必须四舍五入到 $6$ 位小数。", "solution": "该问题被确定为有效。它提出了一个关于阶段结构种群模型的数学生态学中的标准、适定问题。所有参数均已提供，且在物理上和生物学上都是一致的。任务是为一系列 Lefkovitch 矩阵计算主导特征值及其对应的特征向量。\n\n该问题要求一种依赖于主导特征值（$\\lambda$）和稳定阶段分布（$\\mathbf{w}$）基本定义的数值解法。这一要求直接指向使用幂迭代法 (Power Iteration method)。该方法模拟了种群的长期演化，种群会自然收敛到一个状态：种群向量的方向保持恒定——这就是稳定阶段分布；种群总数在每个时间步长按一个固定因子增长——这就是主导特征值。\n\n对于一个非负、不可约且本原的矩阵 $\\mathbf{A}$（正如在可生存种群模型中的情况），Perron-Frobenius 定理保证了存在一个唯一的、简单的、正的主导特征值，其值等于 $\\mathbf{A}$ 的谱半径。相应的右特征向量也是唯一的（在缩放意义上），并且可以选择使其所有分量均为正值。幂迭代法保证能收敛到这个主导特征对。即使在矩阵可约的情况下（如测试用例 $4$），如果存在一个唯一的、其模严格大于所有其他特征值的主导特征值，幂迭代法仍然可以正确收敛。\n\n为每个参数集实现的算法如下：\n\n1.  使用提供的生育率（$F_i$）、存活概率（$s_i$）和转移概率（$g_2$）参数，构建 $3 \\times 3$ 的 Lefkovitch 矩阵 $\\mathbf{A} \\in \\mathbb{R}_{\\ge 0}^{3 \\times 3}$。该矩阵具有指定形式：\n    $$\n    \\mathbf{A} = \\begin{bmatrix}\n    F_1 & F_2 & F_3\\\\\n    s_1 & s_2(1-g_2) & 0\\\\\n    0 & s_2 g_2 & s_3\n    \\end{bmatrix}\n    $$\n2.  初始化一个任意的非负种群向量，它将作为稳定阶段分布的初始估计 $\\mathbf{w}^{(0)}$。该向量必须被归一化，使其元素总和为 $1$（即其 $L_1$ 范数为 $1$）。一个均匀分布，如 $\\mathbf{w}^{(0)} = [1/3, 1/3, 1/3]^T$，是一个合适的起点。特征值的初始估计 $\\lambda^{(0)}$ 可以设为 $0$。\n\n3.  迭代更新种群向量和特征值估计。对于迭代 $k=0, 1, 2, \\dots$：\n    a. 将当前阶段分布向前投射一个时间步：$\\mathbf{y}^{(k+1)} = \\mathbf{A} \\mathbf{w}^{(k)}$。\n    b. 结果向量的 $L_1$ 范数 $\\|\\mathbf{y}^{(k+1)}\\|_1 = \\sum_i |\\mathbf{y}^{(k+1)}_i|$，提供了对主导特征值的下一个估计 $\\lambda^{(k+1)}$。由于所有分量都非负，这仅仅是各元素之和。\n    c. 稳定阶段分布的新估计通过用其 $L_1$ 范数对投射向量进行归一化得到：$\\mathbf{w}^{(k+1)} = \\mathbf{y}^{(k+1)} / \\lambda^{(k+1)}$。\n\n4.  迭代持续进行直到过程收敛。当连续迭代之间特征值估计的变化量 $|\\lambda^{(k+1)} - \\lambda^{(k)}|$ 小于预设的数值容差 $\\epsilon$（例如 $10^{-9}$）时，即达到收敛。同时也会设置最大迭代次数以防止无限循环。\n\n5.  收敛后，将 $\\lambda$ 的最终值和 $\\mathbf{w}$ 的每个分量按问题陈述中的要求四舍五入到 $6$ 位小数。然后将所有测试用例的结果汇总并格式化为所需的输出字符串。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the population viability analysis problem for all test cases.\n    \"\"\"\n\n    test_cases = [\n        # (F1, F2, F3, s1, s2, s3, g2)\n        (0.0, 1.2, 2.8, 0.4, 0.7, 0.85, 0.6),\n        (0.0, 0.5, 1.2, 0.3, 0.6, 0.8, 0.5),\n        (0.2, 0.0, 4.0, 0.5, 0.75, 0.9, 0.9),\n        (0.0, 0.8, 0.0, 0.6, 0.65, 0.7, 0.05)\n    ]\n\n    results = []\n    for params in test_cases:\n        F1, F2, F3, s1, s2, s3, g2 = params\n\n        # Construct the Lefkovitch matrix A\n        A = np.array([\n            [F1, F2, F3],\n            [s1, s2 * (1 - g2), 0],\n            [0, s2 * g2, s3]\n        ])\n\n        lambda_val, w_vec = _power_iteration(A)\n        \n        # Round results to 6 decimal places as required\n        rounded_lambda = round(lambda_val, 6)\n        rounded_w = [round(x, 6) for x in w_vec]\n        \n        results.append([rounded_lambda, rounded_w])\n\n    # Format and print the final output string\n    # Using map(str, ...) converts each result list (e.g., [1.2, [0.1, 0.2, 0.3]])\n    # into its string representation. Joining with ',' creates the final format.\n    print(f\"[{','.join(map(str, results))}]\".replace(\" \", \"\"))\n\ndef _power_iteration(A, tol=1e-12, max_iter=10000):\n    \"\"\"\n    Calculates the dominant eigenvalue (lambda) and its corresponding\n    eigenvector (stable stage distribution w) of matrix A using the\n    Power Iteration method with L1 normalization.\n\n    Args:\n        A (np.ndarray): The square matrix.\n        tol (float): The tolerance for convergence.\n        max_iter (int): The maximum number of iterations.\n\n    Returns:\n        tuple[float, np.ndarray]: A tuple containing the dominant eigenvalue\n                                  and the corresponding eigenvector.\n    \"\"\"\n    # Initialize a non-zero starting vector for the population distribution.\n    # We use a uniform distribution, normalized to sum to 1.\n    n = A.shape[0]\n    w = np.ones(n) / n\n    \n    lambda_val = 0.0\n\n    for _ in range(max_iter):\n        # Project the population forward by one time step\n        w_next = A @ w\n        \n        # The new eigenvalue estimate is the L1 norm (total population size)\n        lambda_next = np.linalg.norm(w_next, 1)\n        \n        # Normalize the projected vector to get the new stage distribution\n        w = w_next / lambda_next\n        \n        # Check for convergence\n        if abs(lambda_next - lambda_val) < tol:\n            break\n        \n        lambda_val = lambda_next\n        \n    return lambda_val, w\n\nsolve()\n```", "id": "2524056"}]}