{"hands_on_practices": [{"introduction": "在进行任何定量分析之前，严谨的环境科学家必须首先清晰地构建其研究问题的逻辑结构。有向无环图（DAGs）是阐明变量间因果关系假设、识别潜在混杂因素的强大工具。本练习将指导你如何应用 DAG 来形式化一个关于空气污染与健康效应的复杂研究问题 [@problem_id:2488829]，这是区分有意义的因果推断与虚假相关性的关键第一步。", "problem": "一个环境流行病学团队旨在估计长期环境空气污染暴露对心血管结局的总因果效应。为使研究根植于环境科学而非环境主义，该团队从可测变量间经验上可识别的因果关系（而非倡导）的角度来构建问题。设变量为：空气污染暴露 $A$、社会经济地位 $S$、吸烟强度 $M$ 和心血管结局 $Y$。\n\n使用因果图的核心定义和标准因果推理，按以下步骤进行：\n\n1) 在 $A$、$S$、$M$ 和 $Y$ 之间提出了一个合理的有向无环图 (DAG) 结构，该结构需反映以下由领域知识支持且不与已知生物学或社会决定因素相矛盾的定性陈述：社会经济地位 $S$ 影响居住地点，从而影响空气污染暴露 $A$；$S$ 还通过多种路径影响吸烟强度 $M$ 和基线心血管风险 $Y$；吸烟 $M$ 影响 $Y$；空气污染 $A$ 影响 $Y$；并且从长期来看，$A$ 不直接导致 $M$ 的变化。除这些陈述所隐含的之外，不要引入额外的环或对撞节点。\n\n2) 仅使用基本因果图原理，为估计 $A$ 对 $Y$ 的总因果效应确定一个最小充分调整集。\n\n3) 现在，假设一个与您的 DAG 一致的线性结构因果模型 (SCM)，其干扰项是联合独立且均值为零的：\n$$\nS \\sim \\mathcal{N}(0,\\sigma_S^2), \\quad A \\,=\\, \\gamma_S S + \\varepsilon_A, \\quad M \\,=\\, \\delta_S S + \\varepsilon_M, \\quad Y \\,=\\, \\beta_A A + \\beta_M M + \\beta_S S + \\varepsilon_Y,\n$$\n其中 $\\varepsilon_A$、$\\varepsilon_M$ 和 $\\varepsilon_Y$ 彼此之间以及与 $S$ 相互独立，各自具有有限方差，且所有期望均为有限值。\n\n令 $\\theta_{\\text{naive}}$ 为仅将 $Y$ 对 $A$ 进行回归得到的普通最小二乘法 (OLS; Ordinary Least Squares) 斜率，令 $\\theta_{\\text{adj}}$ 为将 $Y$ 对 $A$ 和 $S$ 进行回归得到的关于 $A$ 的 OLS 偏斜率（调整集中不包括 $M$）。从协方差法则和 OLS 斜率的定义出发，推导差值 $\\theta_{\\text{naive}} - \\theta_{\\text{adj}}$ 的一个闭式解析表达式，该表达式用结构参数 $\\beta_A$、$\\beta_M$、$\\beta_S$、$\\gamma_S$、$\\delta_S$、$\\sigma_S^2$ 以及 $\\varepsilon_A$ 的方差（记为 $\\sigma_A^2$）来表示。\n\n仅报告 $\\theta_{\\text{naive}} - \\theta_{\\text{adj}}$ 的简化表达式作为最终答案。无需数值近似，也不需要单位。", "solution": "所述问题具有科学依据、良定且客观。它运用因果推断和统计学中的标准、可形式化的方法——特别是有向无环图 (DAG) 和线性结构因果模型 (SCM)——来解决环境流行病学中的一个有效问题。其前提内部一致，所提供的信息足以得到唯一解。因此，该问题是有效的，我们开始求解。\n\n问题分为三个部分。我们将按顺序解决它们。\n\n第 $1$ 部分：有向无环图 (DAG) 的构建\n\n问题给出了变量空气污染暴露 ($A$)、社会经济地位 ($S$)、吸烟强度 ($M$) 和心血管结局 ($Y$) 之间的以下定性关系。\n1. 社会经济地位 $S$ 影响空气污染暴露 $A$：$S \\to A$。\n2. 社会经济地位 $S$ 影响吸烟强度 $M$：$S \\to M$。\n3. 社会经济地位 $S$ 影响心血管结局 $Y$：$S \\to Y$。\n4. 吸烟强度 $M$ 影响心血管结局 $Y$：$M \\to Y$。\n5. 空气污染暴露 $A$ 影响心血管结局 $Y$：$A \\to Y$。\n6. 空气污染暴露 $A$ 不直接导致吸烟强度 $M$。不存在边 $A \\to M$。\n\n基于这些有向关系，变量 $S$ 是 $A$、$M$ 和 $Y$ 的一个共同原因。变量 $A$ 和 $M$ 是 $S$ 对 $Y$ 效应的中介变量，但它们也各自有直接指向 $Y$ 的因果路径。最终得到的 DAG 包含由 $S$ 指向 $A$、$M$ 和 $Y$ 的箭头；一个由 $A$ 指向 $Y$ 的箭头；以及一个由 $M$ 指向 $Y$ 的箭头。\n\n第 $2$ 部分：最小充分调整集的确定\n\n目标是估计 $A$ 对 $Y$ 的总因果效应，这对应于路径 $A \\to Y$。为实现此目标，我们必须阻断 $A$ 和 $Y$ 之间所有非因果的“后门”路径。后门路径是一条从 $A$ 到 $Y$ 的路径，其第一条边是指向 $A$ 的箭头。\n\n在构建的 DAG 中，我们识别出从 $A$ 到 $Y$ 的以下路径：\n- 直接因果路径：$A \\to Y$。\n- 一条通过混杂因素 $S$ 的后门路径：$A \\leftarrow S \\to Y$。\n- 另一条涉及 $S$ 和 $M$ 的后门路径：$A \\leftarrow S \\to M \\to Y$。\n\n为了估计 $A$ 对 $Y$ 的因果效应，我们必须阻断所有后门路径，同时保持所有因果路径开放。根据后门准则，一组变量 $Z$ 是一个充分调整集，如果：\n1. $Z$ 中没有变量是 $A$ 的后代。\n2. $Z$ 阻断了 $A$ 和 $Y$ 之间的每一条后门路径。\n\n已识别的两条后门路径 $A \\leftarrow S \\to Y$ 和 $A \\leftarrow S \\to M \\to Y$ 都包含变量 $S$。以 $S$ 为条件可以阻断这两条路径。变量 $S$ 不是 $A$ 的后代。因此，集合 $\\{S\\}$ 满足后门准则，是一个充分调整集。\n\n要确定 $\\{S\\}$ 是否为最小充分调整集，我们必须确认 $\\{S\\}$ 的任何真子集都不是充分的。唯一的真子集是空集 $\\emptyset$，它会使两条后门路径都保持开放。因此，以 $S$ 为条件是必要的。所以，集合 $\\{S\\}$ 是一个最小充分调整集。\n\n第 $3$ 部分：差值 $\\theta_{\\text{naive}} - \\theta_{\\text{adj}}$ 的推导\n\n我们给出了线性结构因果模型 (SCM)：\n$$\nS \\sim \\mathcal{N}(0,\\sigma_S^2), \\quad A = \\gamma_S S + \\varepsilon_A, \\quad M = \\delta_S S + \\varepsilon_M, \\quad Y = \\beta_A A + \\beta_M M + \\beta_S S + \\varepsilon_Y\n$$\n干扰项 $\\varepsilon_A$、$\\varepsilon_M$、$\\varepsilon_Y$ 以及变量 $S$ 相互独立，均值为零且方差有限。我们记 $\\text{Var}(\\varepsilon_A) = \\sigma_A^2$。\n\n朴素估计量 $\\theta_{\\text{naive}}$ 是仅将 $Y$ 对 $A$ 进行普通最小二乘法 (OLS) 回归得到的斜率。它由以下公式给出：\n$$\n\\theta_{\\text{naive}} = \\frac{\\text{Cov}(Y,A)}{\\text{Var}(A)}\n$$\n调整后的估计量 $\\theta_{\\text{adj}}$ 是将 $Y$ 对 $A$ 和 $S$ 进行 OLS 回归得到的关于 $A$ 的偏斜率。为了求得此值，我们首先将 $Y$ 表示为 $A$ 和 $S$ 以及一个与 $A$ 和 $S$ 不相关的误差项的函数。我们将 $M$ 的方程代入 $Y$ 的方程中：\n$$\nY = \\beta_A A + \\beta_M (\\delta_S S + \\varepsilon_M) + \\beta_S S + \\varepsilon_Y\n$$\n$$\nY = \\beta_A A + (\\beta_M \\delta_S + \\beta_S)S + (\\beta_M \\varepsilon_M + \\varepsilon_Y)\n$$\n这是一个关于 $A$ 和 $S$ 的 $Y$ 的线性模型。新的误差项是 $u = \\beta_M \\varepsilon_M + \\varepsilon_Y$。我们必须检查回归变量 $A$ 和 $S$ 是否与 $u$ 不相关。\n$$\n\\text{Cov}(A, u) = \\text{Cov}(\\gamma_S S + \\varepsilon_A, \\beta_M \\varepsilon_M + \\varepsilon_Y) = 0\n$$\n$$\n\\text{Cov}(S, u) = \\text{Cov}(S, \\beta_M \\varepsilon_M + \\varepsilon_Y) = 0\n$$\n由于 $S$、$\\varepsilon_A$、$\\varepsilon_M$ 和 $\\varepsilon_Y$ 的相互独立性，这两个协方差均为零。因为回归变量与误差项不相关，所以 $A$ 的系数的 OLS 估计量将是真实参数 $\\beta_A$ 的一个无偏且一致的估计量。因此：\n$$\n\\theta_{\\text{adj}} = \\beta_A\n$$\n现在我们计算 $\\theta_{\\text{naive}}$。我们需要 $\\text{Var}(A)$ 和 $\\text{Cov}(Y,A)$。首先，我们从 SCM 计算必要的方差和协方差。\n$$\n\\text{Var}(S) = \\sigma_S^2\n$$\n$$\n\\text{Var}(A) = \\text{Var}(\\gamma_S S + \\varepsilon_A) = \\gamma_S^2 \\text{Var}(S) + \\text{Var}(\\varepsilon_A) = \\gamma_S^2 \\sigma_S^2 + \\sigma_A^2\n$$\n混杂因素 $S$ 和暴露 $A$ 之间的协方差为：\n$$\n\\text{Cov}(S,A) = \\text{Cov}(S, \\gamma_S S + \\varepsilon_A) = \\gamma_S \\text{Var}(S) = \\gamma_S \\sigma_S^2\n$$\n吸烟 $M$ 和暴露 $A$ 之间的协方差为：\n$$\n\\text{Cov}(M,A) = \\text{Cov}(\\delta_S S + \\varepsilon_M, \\gamma_S S + \\varepsilon_A) = \\delta_S \\gamma_S \\text{Var}(S) = \\delta_S \\gamma_S \\sigma_S^2\n$$\n现在，我们计算结局 $Y$ 和暴露 $A$ 之间的协方差：\n$$\n\\text{Cov}(Y,A) = \\text{Cov}(\\beta_A A + \\beta_M M + \\beta_S S + \\varepsilon_Y, A)\n$$\n$$\n= \\beta_A \\text{Var}(A) + \\beta_M \\text{Cov}(M,A) + \\beta_S \\text{Cov}(S,A) + \\text{Cov}(\\varepsilon_Y, A)\n$$\n由于 $\\text{Cov}(\\varepsilon_Y, A) = \\text{Cov}(\\varepsilon_Y, \\gamma_S S + \\varepsilon_A)=0$，我们代入先前推导出的项：\n$$\n\\text{Cov}(Y,A) = \\beta_A (\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2) + \\beta_M (\\delta_S \\gamma_S \\sigma_S^2) + \\beta_S (\\gamma_S \\sigma_S^2)\n$$\n现在我们可以计算 $\\theta_{\\text{naive}}$：\n$$\n\\theta_{\\text{naive}} = \\frac{\\text{Cov}(Y,A)}{\\text{Var}(A)} = \\frac{\\beta_A (\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2) + \\beta_M \\delta_S \\gamma_S \\sigma_S^2 + \\beta_S \\gamma_S \\sigma_S^2}{\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2}\n$$\n$$\n\\theta_{\\text{naive}} = \\beta_A + \\frac{\\gamma_S \\sigma_S^2 (\\beta_M \\delta_S + \\beta_S)}{\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2}\n$$\n所求的差值为 $\\theta_{\\text{naive}} - \\theta_{\\text{adj}}$。由于 $\\theta_{\\text{adj}} = \\beta_A$，这个差值就是遗漏变量偏误项：\n$$\n\\theta_{\\text{naive}} - \\theta_{\\text{adj}} = \\left( \\beta_A + \\frac{\\gamma_S \\sigma_S^2 (\\beta_M \\delta_S + \\beta_S)}{\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2} \\right) - \\beta_A\n$$\n$$\n\\theta_{\\text{naive}} - \\theta_{\\text{adj}} = \\frac{\\gamma_S \\sigma_S^2 (\\beta_M \\delta_S + \\beta_S)}{\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2}\n$$\n这就是最终的简化表达式。它量化了因未对混杂因素 $S$ 进行调整而引入的偏误。该偏误是混杂路径对结局的影响（$\\beta_M \\delta_S + \\beta_S$ 项）与混杂因素和暴露之间的关联（与其他项相关）的乘积。", "answer": "$$\n\\boxed{\\frac{\\gamma_S \\sigma_S^2 (\\beta_M \\delta_S + \\beta_S)}{\\gamma_S^2 \\sigma_S^2 + \\sigma_A^2}}\n$$", "id": "2488829"}, {"introduction": "环境科学的核心任务之一是为动态系统建模，以预测其行为并为管理决策提供信息，例如渔业中的最大可持续产量（MSY）。本练习要求你从一个基本的人口增长模型——逻辑斯谛方程——出发，推导出 MSY [@problem_id:2488860]。更进一步，你还将分析模型参数不确定性如何影响 MSY 的估算，这体现了科学的严谨性，即量化和报告我们知识的局限性。", "problem": "在一个封闭区域内，单一物种鱼类种群的生物量 $B(t)$ 由密度制约增长模型描述，其内禀增长率为 $r$，环境承载力为 $K$，这与种群生态学中的逻辑斯谛状态方程一致。在没有捕捞的情况下，一个微小时间间隔内的净生物量增量即为剩余产量，其定义为出生与生长之和减去自然死亡率，在逻辑斯谛动态下，它是 $B(t)$、$r$ 和 $K$ 的函数。在渔业环境科学中，一项有科学依据的捕捞策略是设定一个恒定的捕捞率，使其等于在某个正平衡生物量下的长期剩余产量。这定义了最大可持续产量（Maximum Sustainable Yield, MSY），即在假定的种群动态下可以无限期维持的最高恒定捕捞量。这个科学量不同于规范性环保主义，后者可能出于预防性或伦理原因而主张低于 MSY 的目标；此处，我们严格关注科学推导。\n\n从逻辑斯谛增长框架和平衡状态下的剩余产量定义（即捕捞量等于净产量）出发，完成以下任务：\n\n1. 推导在平衡捕捞条件下，作为生物量 $B$ 的函数的剩余产量模型 $Y(B)$，并确定在生物学可行区间内使 $Y(B)$ 最大化的生物量 $B^{\\ast}$。利用此结果，求出作为 $r$ 和 $K$ 的函数的最大可持续产量。\n\n2. 为了在环境科学背景下分析参数不确定性的敏感度，假设真实参数 $r$ 和 $K$ 是具有较小相对不确定性的随机变量。设 $\\operatorname{E}[r]=r$，$\\operatorname{E}[K]=K$，定义变异系数 $c_{r}=\\operatorname{sd}(r)/r$ 和 $c_{K}=\\operatorname{sd}(K)/K$，并令 $\\rho$ 表示 $r$ 和 $K$ 之间的相关性。使用一阶德尔塔方法近似（线性误差传播），推导 MSY 变异系数的闭式表达式，记为 $\\mathrm{CV}_{\\mathrm{MSY}}=\\operatorname{sd}(\\mathrm{MSY})/\\operatorname{E}[\\mathrm{MSY}]$，该表达式应以 $c_{r}$、$c_{K}$ 和 $\\rho$ 表示。\n\n作为你的最终答案，报告你在步骤2中得到的 $\\mathrm{CV}_{\\mathrm{MSY}}$ 的单一解析表达式。无需进行数值计算，也无需单位，因为 $\\mathrm{CV}_{\\mathrm{MSY}}$ 是无量纲的。不要四舍五入，提供精确的符号形式。", "solution": "该问题陈述已经过严格验证，被认为是具有科学依据、良定且客观的。它代表了定量种群生态学和资源管理中的一个标准练习，将从逻辑斯谛模型中确定性地推导最大可持续产量（MSY）与使用德尔塔方法进行统计不确定性分析相结合。其前提合理，并为得出唯一解提供了所有必要信息。我们将开始推导。\n\n鱼类种群生物量 $B(t)$ 的动态由逻辑斯谛方程描述：\n$$\n\\frac{dB}{dt} = rB\\left(1 - \\frac{B}{K}\\right)\n$$\n此处，$r$ 是种群的内禀增长率，$K$ 是环境承载力。等式右侧项为剩余产量，即可供捕捞的净生物量增长。\n\n步骤1：推导最大可持续产量（MSY）。\n\n可持续捕捞或产量，我们将其表示为生物量的函数 $Y(B)$，是指与种群剩余产量完全匹配的捕捞率。在这样的捕捞率下，生物量水平保持平衡。因此，在生物量为 $B$ 时的可持续产量为：\n$$\nY(B) = rB\\left(1 - \\frac{B}{K}\\right) = rB - \\frac{r}{K}B^2\n$$\n为求得最大可持续产量（MSY），我们必须找到使此函数 $Y(B)$ 最大化的生物量水平 $B^{\\ast}$。这通过对 $Y(B)$ 关于 $B$ 求导并将结果置零来实现，从而找到 $Y(B)$ 的临界点。\n$$\n\\frac{dY}{dB} = \\frac{d}{dB}\\left(rB - \\frac{r}{K}B^2\\right) = r - \\frac{2rB}{K}\n$$\n将导数置零以求解最优生物量 $B^{\\ast}$：\n$$\nr - \\frac{2rB^{\\ast}}{K} = 0\n$$\n假设 $r > 0$，我们可以解出 $B^{\\ast}$：\n$$\n\\frac{2rB^{\\ast}}{K} = r \\implies B^{\\ast} = \\frac{K}{2}\n$$\n为确认这是一个极大值，我们检验二阶导数：\n$$\n\\frac{d^2Y}{dB^2} = -\\frac{2r}{K}\n$$\n由于 $r > 0$ 且 $K > 0$，二阶导数为负，这证实了 $B^{\\ast} = K/2$ 产生极大值。\n\nMSY 是在该最优生物量 $B^{\\ast}$ 处评估的产量，即 $Y(B^{\\ast})$：\n$$\n\\mathrm{MSY} = Y\\left(\\frac{K}{2}\\right) = r\\left(\\frac{K}{2}\\right)\\left(1 - \\frac{K/2}{K}\\right) = r\\left(\\frac{K}{2}\\right)\\left(1 - \\frac{1}{2}\\right) = r\\left(\\frac{K}{2}\\right)\\left(\\frac{1}{2}\\right) = \\frac{rK}{4}\n$$\n这给出了 MSY 作为模型参数 $r$ 和 $K$ 的函数。\n\n步骤2：推导 MSY 的变异系数。\n\n现在我们将 $r$ 和 $K$ 视为随机变量，其均值为 $\\operatorname{E}[r]$ 和 $\\operatorname{E}[K]$（根据题目约定，简记为 $r$ 和 $K$），标准差为 $\\sigma_r$ 和 $\\sigma_K$，相关性为 $\\rho$。我们有函数 $\\mathrm{MSY} = f(r, K) = \\frac{rK}{4}$。我们将使用一阶德尔塔方法（不确定性传播公式）来近似 MSY 的方差。\n函数 $f(x_1, x_2)$ 的方差的一般公式为：\n$$\n\\operatorname{Var}(f) \\approx \\left(\\frac{\\partial f}{\\partial x_1}\\right)^2 \\operatorname{Var}(x_1) + \\left(\\frac{\\partial f}{\\partial x_2}\\right)^2 \\operatorname{Var}(x_2) + 2\\left(\\frac{\\partial f}{\\partial x_1}\\right)\\left(\\frac{\\partial f}{\\partial x_2}\\right)\\operatorname{Cov}(x_1, x_2)\n$$\n其中导数在均值处求值。\n\n首先，我们计算 MSY 对 $r$ 和 $K$ 的偏导数：\n$$\n\\frac{\\partial(\\mathrm{MSY})}{\\partial r} = \\frac{\\partial}{\\partial r}\\left(\\frac{rK}{4}\\right) = \\frac{K}{4}\n$$\n$$\n\\frac{\\partial(\\mathrm{MSY})}{\\partial K} = \\frac{\\partial}{\\partial K}\\left(\\frac{rK}{4}\\right) = \\frac{r}{4}\n$$\n将这些代入方差公式，其中 $\\operatorname{Var}(r) = \\sigma_{r}^{2}$，$\\operatorname{Var}(K) = \\sigma_{K}^{2}$，且 $\\operatorname{Cov}(r, K) = \\rho \\sigma_r \\sigma_K$：\n$$\n\\operatorname{Var}(\\mathrm{MSY}) \\approx \\left(\\frac{K}{4}\\right)^2 \\sigma_{r}^{2} + \\left(\\frac{r}{4}\\right)^2 \\sigma_{K}^{2} + 2\\left(\\frac{K}{4}\\right)\\left(\\frac{r}{4}\\right)\\rho \\sigma_r \\sigma_K\n$$\n$$\n\\operatorname{Var}(\\mathrm{MSY}) \\approx \\frac{K^2 \\sigma_{r}^{2}}{16} + \\frac{r^2 \\sigma_{K}^{2}}{16} + \\frac{2rK \\rho \\sigma_r \\sigma_K}{16}\n$$\n题目要求的是变异系数 $\\mathrm{CV}_{\\mathrm{MSY}} = \\operatorname{sd}(\\mathrm{MSY}) / \\operatorname{E}[\\mathrm{MSY}]$。更直接的方法是处理变异系数的平方，或称相对方差：$\\mathrm{CV}_{\\mathrm{MSY}}^{2} = \\operatorname{Var}(\\mathrm{MSY}) / (\\operatorname{E}[\\mathrm{MSY}])^2$。\n\nMSY 期望值的一阶近似为 $\\operatorname{E}[\\mathrm{MSY}] \\approx f(\\operatorname{E}[r], \\operatorname{E}[K]) = \\frac{rK}{4}$。\n现在我们计算 $\\mathrm{CV}_{\\mathrm{MSY}}^{2}$：\n$$\n\\mathrm{CV}_{\\mathrm{MSY}}^{2} \\approx \\frac{\\frac{1}{16}(K^2 \\sigma_{r}^{2} + r^2 \\sigma_{K}^{2} + 2rK \\rho \\sigma_r \\sigma_K)}{\\left(\\frac{rK}{4}\\right)^2} = \\frac{\\frac{1}{16}(K^2 \\sigma_{r}^{2} + r^2 \\sigma_{K}^{2} + 2rK \\rho \\sigma_r \\sigma_K)}{\\frac{r^2 K^2}{16}}\n$$\n$$\n\\mathrm{CV}_{\\mathrm{MSY}}^{2} \\approx \\frac{K^2 \\sigma_{r}^{2} + r^2 \\sigma_{K}^{2} + 2rK \\rho \\sigma_r \\sigma_K}{r^2 K^2}\n$$\n将分子中的每一项除以分母：\n$$\n\\mathrm{CV}_{\\mathrm{MSY}}^{2} \\approx \\frac{K^2 \\sigma_{r}^{2}}{r^2 K^2} + \\frac{r^2 \\sigma_{K}^{2}}{r^2 K^2} + \\frac{2rK \\rho \\sigma_r \\sigma_K}{r^2 K^2} = \\left(\\frac{\\sigma_r}{r}\\right)^2 + \\left(\\frac{\\sigma_K}{K}\\right)^2 + 2\\rho\\left(\\frac{\\sigma_r}{r}\\right)\\left(\\frac{\\sigma_K}{K}\\right)\n$$\n题目给出了参数变异系数的定义：$c_r = \\sigma_r/r$ 和 $c_K = \\sigma_K/K$。将这些代入表达式：\n$$\n\\mathrm{CV}_{\\mathrm{MSY}}^{2} \\approx c_{r}^{2} + c_{K}^{2} + 2\\rho c_r c_K\n$$\n最后，取平方根得到 MSY 的变异系数：\n$$\n\\mathrm{CV}_{\\mathrm{MSY}} \\approx \\sqrt{c_{r}^{2} + c_{K}^{2} + 2\\rho c_r c_K}\n$$\n这就是所要求的闭式表达式。", "answer": "$$\n\\boxed{\\sqrt{c_{r}^{2} + c_{K}^{2} + 2 \\rho c_{r} c_{K}}}\n$$", "id": "2488860"}, {"introduction": "从实地收集的原始数据很少能完美地反映生态系统的真实状态；它们通常受到观测过程的偏差和误差的影响。本练习聚焦于生态监测中一个常见的问题：物种的不完美探测 [@problem_id:2488903]。你将通过一个计算实践，构建一个考虑了该观测误差的统计模型，从而得到对物种占有率趋势的更准确估计。这个过程将清晰地展示，为何严谨的科学方法比那些忽略数据复杂性的“朴素”指标更能揭示真相。", "problem": "环境科学旨在通过数据推断状态变量，同时考虑观测误差；而环保主义则常常宣传一些可能忽略了已知偏差的简化指标。考虑一项任务：通过重复的探测/未探测调查来监测一个物种，并估计其多季节的地点占有率趋势，其中存在不完美探测问题。你需要实现一个程序，使用分层占有率模型估计占有率趋势，并将其与一个忽略了不完美探测的朴素变化指标（一种宣传式统计量）进行比较。\n\n使用的建模框架（基础模型）：\n- 潜在占有状态：对于季节 $t$ 的地点 $i$，其潜在的真实占有状态 $z_{it}$ 是一个成功概率为 $\\psi_t$ 的伯努利随机变量，记作 $z_{it} \\sim \\mathrm{Bernoulli}(\\psi_t)$，其中 $i \\in \\{1,\\dots,S\\}$ 且 $t \\in \\{1,\\dots,T\\}$。\n- 探测模型：在 $z_{it} = 1$ 的条件下，每次重复调查 $j \\in \\{1,\\dots,J_{it}\\}$ 产生一次探测 $y_{itj} \\sim \\mathrm{Bernoulli}(p)$，各次重复调查间相互独立，且探测概率 $p$ 在所有季节和地点中保持不变。如果 $z_{it} = 0$，则 $y_{itj} = 0$ 几乎必然成立。\n- 占有率的时间趋势：占有概率 $\\psi_t$ 服从逻辑斯谛趋势，\n$$\n\\mathrm{logit}(\\psi_t) = \\alpha + \\beta \\cdot (t-1),\n$$\n其中 $\\alpha \\in \\mathbb{R}$ 且 $\\beta \\in \\mathbb{R}$，并且 $\\mathrm{logit}(x) = \\log\\left(\\frac{x}{1-x}\\right)$。\n\n估计原则：\n- 使用最大似然估计 (MLE) 通过对潜在变量 $z_{it}$ 进行边缘化来估计 $(\\alpha,\\beta,p)$。从上述生成过程中推导出地点-季节的观测模型，并最大化所有地点和季节的联合似然。\n\n每个测试用例的必需输出：\n1. 分层模型趋势变化（小数形式）：使用 $(\\alpha,\\beta)$ 的最大似然估计值，通过 $\\psi_t = \\mathrm{logit}^{-1}(\\alpha + \\beta \\cdot (t-1))$ 计算\n$$\n\\Delta_{\\mathrm{hier}} = \\frac{\\psi_T - \\psi_1}{\\psi_1},\n$$\n2. 忽略不完美探测的朴素变化（小数形式）：对于每个季节 $t$，计算至少有一次探测的地点比例，记为 $d_t$。然后计算\n$$\n\\Delta_{\\mathrm{naive}} = \\frac{d_T - d_1}{d_1}.\n$$\n3. 朴素变化与分层模型变化的差异：\n$$\n\\Delta_{\\mathrm{diff}} = \\Delta_{\\mathrm{naive}} - \\Delta_{\\mathrm{hier}}.\n$$\n\n每个测试用例的三个输出都必须表示为小数，并精确到小数点后 $3$ 位。\n\n不涉及角度单位。不需要物理单位。百分比变化必须以小数形式返回，而不是百分数。\n\n需要实现和评估的测试套件：\n每个测试用例是一个地点列表，其中每个地点是一个包含各季节数据的列表，每个季节数据则包含一个重复探测结果（$0/1$）的列表。每个测试用例中都有 $3$ 个季节。重复调查次数 $J_{it}$ 可能因测试用例和季节而异。\n\n- 测试用例 A（中等下降信号，中等探测率；$S=12$ 个地点，$T=3$ 个季节，每季重复调查 $J_{it}=3$ 次）：\n  [\n    [[1,0,1],[1,0,0],[0,1,0]],\n    [[0,1,1],[0,0,1],[0,0,1]],\n    [[1,1,1],[1,0,1],[0,0,1]],\n    [[0,0,1],[0,0,0],[0,0,0]],\n    [[0,1,0],[0,0,0],[0,0,0]],\n    [[1,0,0],[0,0,0],[0,0,0]],\n    [[1,1,0],[0,1,0],[0,1,0]],\n    [[0,0,0],[0,0,1],[0,0,0]],\n    [[0,0,0],[1,0,0],[0,0,1]],\n    [[1,0,0],[1,0,0],[0,0,0]],\n    [[0,0,0],[0,0,0],[0,0,0]],\n    [[0,1,0],[0,0,0],[0,0,0]]\n  ]\n\n- 测试用例 B（占有率近似稳定，低探测率；$S=10$ 个地点，$T=3$ 个季节，每季重复调查 $J_{it}=4$ 次）：\n  [\n    [[1,0,0,0],[0,1,0,0],[0,0,1,0]],\n    [[0,0,0,0],[0,0,0,0],[0,0,0,0]],\n    [[0,1,0,0],[0,0,1,0],[0,0,0,1]],\n    [[1,1,0,0],[0,0,0,0],[0,1,0,0]],\n    [[0,0,0,0],[0,0,0,0],[0,0,0,0]],\n    [[0,1,1,0],[0,0,0,0],[0,0,1,0]],\n    [[0,0,0,0],[1,0,0,0],[0,0,0,0]],\n    [[0,1,0,0],[0,1,0,0],[0,0,0,0]],\n    [[0,0,0,0],[0,0,1,0],[0,0,0,0]],\n    [[1,0,0,0],[0,0,0,0],[0,0,0,0]]\n  ]\n\n- 测试用例 C（强劲增长信号，高探测率；$S=8$ 个地点，$T=3$ 个季节，每季重复调查 $J_{it}=2$ 次）：\n  [\n    [[0,0],[0,1],[1,1]],\n    [[0,0],[0,1],[1,1]],\n    [[1,1],[1,1],[1,1]],\n    [[0,0],[0,0],[1,0]],\n    [[0,0],[0,1],[1,1]],\n    [[1,0],[1,1],[1,1]],\n    [[0,0],[0,0],[0,0]],\n    [[0,1],[1,1],[1,1]]\n  ]\n\n你的任务：\n- 实现一个完整的程序，对上述三个测试用例中的每一个，通过最大似然估计来拟合指定的分层占有率模型，计算 $\\Delta_{\\mathrm{hier}}$、$\\Delta_{\\mathrm{naive}}$ 和 $\\Delta_{\\mathrm{diff}}$，并将每个结果四舍五入到恰好 $3$ 位小数。\n- 你的程序必须生成单行输出，包含一个方括号内的、扁平的、逗号分隔的所有结果列表。要求的顺序是：\n  [\n    $\\Delta_{\\mathrm{hier}}^{(A)}$,\n    $\\Delta_{\\mathrm{naive}}^{(A)}$,\n    $\\Delta_{\\mathrm{diff}}^{(A)}$,\n    $\\Delta_{\\mathrm{hier}}^{(B)}$,\n    $\\Delta_{\\mathrm{naive}}^{(B)}$,\n    $\\Delta_{\\mathrm{diff}}^{(B)}$,\n    $\\Delta_{\\mathrm{hier}}^{(C)}$,\n    $\\Delta_{\\mathrm{naive}}^{(C)}$,\n    $\\Delta_{\\mathrm{diff}}^{(C)}$\n  ]\n例如，你的输出必须是符合 \"[x1,x2,x3,x4,x5,x6,x7,x8,x9]\" 模式的单行文本，其中每个 $x_k$ 都是一个精确到 $3$ 位小数的十进制数。\n\n实现约束：\n- 程序必须是自包含的，无需输入，并使用最大似然估计以及与上述模型定义一致的数值稳定的似然计算。通过无约束参数对 $\\psi_t$ 和 $p$ 使用逻辑斯谛函数。\n- 将所有最终数值结果表示为小数点后恰好有 $3$ 位数字的小数。", "solution": "问题陈述被评估为有效。它在科学上基于统计生态学的既定原则，特别是物种占有率的分层建模。问题提法恰当，完整描述了数据、生成模型、估计原则（最大似然估计）以及所需的精确输出指标。语言客观、正式。所有必要的数据和约束都已提供，使得问题自包含且可解。\n\n任务是在不完美探测条件下估计生态趋势，并将一个严谨的基于模型的估计与一个忽略了此复杂性的朴素估计进行比较。这需要推导并最大化分层占有率模型的似然函数。\n\n待估计的模型参数为 $\\boldsymbol{\\theta} = (\\alpha, \\beta, p)$，其中 $\\alpha$ 和 $\\beta$ 定义了占有概率 $\\psi_t$ 的时间趋势，$p$ 是探测概率。\n对于季节 $t \\in \\{1, \\dots, T\\}$，占有概率由逻辑斯谛模型给出：\n$$ \\psi_t = \\frac{1}{1 + \\exp(-(\\alpha + \\beta(t-1)))} $$\n对于季节 $t$ 的地点 $i \\in \\{1, \\dots, S\\}$，其潜在（未观测到）的真实占有状态，记为 $z_{it}$，是一个伯努利随机变量：\n$$ z_{it} \\sim \\mathrm{Bernoulli}(\\psi_t) $$\n观测数据包括在季节 $t$ 对地点 $i$ 进行的 $J_{it}$ 次重复调查。每次调查的结果 $y_{itj}$ 是探测到（$1$）或未探测到（$0$）。在地点被占有（$z_{it}=1$）的条件下，每次调查都是一次独立的伯努利试验，成功概率为 $p$：\n$$ y_{itj} | z_{it}=1 \\sim \\mathrm{Bernoulli}(p) $$\n如果地点未被占有（$z_{it}=0$），则不可能探测到，因此 $y_{itj}=0$。\n\n为了执行最大似然估计，我们必须首先通过对潜在状态 $z_{it}$ 进行边缘化来构建观测数据的似然。令地点 $i$ 在季节 $t$ 的数据由探测次数 $k_{it} = \\sum_{j=1}^{J_{it}} y_{itj}$（总共 $J_{it}$ 次调查）来概括。\n\n单个地点-季节观测的似然贡献 $L_{it}$ 取决于是否发生了探测：\n\n情况 1：至少有一次探测 ($k_{it} > 0$)。\n如果观测到一次或多次探测，则该地点必须被占有 ($z_{it}=1$)。此观测结果的概率是地点被占有的概率乘以在占有条件下特定探测历史的概率。\n$$ L_{it}(k_{it}>0) = P(z_{it}=1) \\cdot P(\\text{data}_{it} | z_{it}=1) = \\psi_t \\cdot p^{k_{it}} (1-p)^{J_{it}-k_{it}} $$\n\n情况 2：没有探测 ($k_{it} = 0$)。\n这可能通过两种互斥的方式发生：地点被占有但在 $J_{it}$ 次调查中均未探测到物种，或者地点未被占有。\n$$ L_{it}(k_{it}=0) = P(z_{it}=1) \\cdot P(k_{it}=0 | z_{it}=1) + P(z_{it}=0) \\cdot P(k_{it}=0 | z_{it}=0) $$\n$$ L_{it}(k_{it}=0) = \\psi_t \\cdot (1-p)^{J_{it}} + (1-\\psi_t) \\cdot 1 $$\n\n总似然是所有地点和季节的这些单独似然的乘积，假设它们相互独立：\n$$ L(\\alpha, \\beta, p) = \\prod_{i=1}^{S} \\prod_{t=1}^{T} L_{it} $$\n为了进行数值优化，我们处理负对数似然 (NLL)。令 $D_1 = \\{(i, t) | k_{it} > 0\\}$ 和 $D_0 = \\{(i, t) | k_{it} = 0\\}$。\n$$ \\mathrm{NLL}(\\alpha, \\beta, p) = - \\log L = - \\sum_{(i,t) \\in D_1} \\left[ \\log(\\psi_t) + k_{it}\\log(p) + (J_{it}-k_{it})\\log(1-p) \\right] - \\sum_{(i,t) \\in D_0} \\log\\left( \\psi_t (1-p)^{J_{it}} + 1-\\psi_t \\right) $$\n为确保数值稳定性和便于无约束优化，对参数 $(\\alpha, \\beta, p)$ 进行重新参数化。我们可以在 $(\\alpha, \\beta, \\text{logit}(p))$ 上进行优化，其中 $\\text{logit}(p) = \\log(p/(1-p))$。使用数值优化算法，例如 `scipy.optimize.minimize` 中可用的 Broyden–Fletcher–Goldfarb–Shanno (BFGS) 算法，对这些无约束参数最小化负对数似然。\n\n在找到最大似然估计值 $(\\hat{\\alpha}, \\hat{\\beta}, \\hat{p})$ 后，计算所需的量：\n1.  分层模型相对变化, $\\Delta_{\\mathrm{hier}}$:\n    $$ \\hat{\\psi}_1 = \\frac{1}{1 + \\exp(-\\hat{\\alpha})} $$\n    $$ \\hat{\\psi}_T = \\frac{1}{1 + \\exp(-(\\hat{\\alpha} + \\hat{\\beta}(T-1)))} $$\n    $$ \\Delta_{\\mathrm{hier}} = \\frac{\\hat{\\psi}_T - \\hat{\\psi}_1}{\\hat{\\psi}_1} $$\n2.  朴素相对变化, $\\Delta_{\\mathrm{naive}}$:\n    对于每个季节 $t$，至少有一次探测的地点比例为 $d_t = \\frac{1}{S} \\sum_{i=1}^{S} \\mathbb{I}(k_{it}>0)$，其中 $\\mathbb{I}(\\cdot)$ 是指示函数。\n    $$ \\Delta_{\\mathrm{naive}} = \\frac{d_T - d_1}{d_1} $$\n3.  差异, $\\Delta_{\\mathrm{diff}}$:\n    $$ \\Delta_{\\mathrm{diff}} = \\Delta_{\\mathrm{naive}} - \\Delta_{\\mathrm{hier}} $$\n对每个提供的测试用例执行这些计算。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import minimize\n\ndef solve():\n    \"\"\"\n    Main function to solve the occupancy modeling problem for all test cases.\n    \"\"\"\n    test_cases = {\n        'A': [\n            [[1,0,1],[1,0,0],[0,1,0]],\n            [[0,1,1],[0,0,1],[0,0,1]],\n            [[1,1,1],[1,0,1],[0,0,1]],\n            [[0,0,1],[0,0,0],[0,0,0]],\n            [[0,1,0],[0,0,0],[0,0,0]],\n            [[1,0,0],[0,0,0],[0,0,0]],\n            [[1,1,0],[0,1,0],[0,1,0]],\n            [[0,0,0],[0,0,1],[0,0,0]],\n            [[0,0,0],[1,0,0],[0,0,1]],\n            [[1,0,0],[1,0,0],[0,0,0]],\n            [[0,0,0],[0,0,0],[0,0,0]],\n            [[0,1,0],[0,0,0],[0,0,0]]\n        ],\n        'B': [\n            [[1,0,0,0],[0,1,0,0],[0,0,1,0]],\n            [[0,0,0,0],[0,0,0,0],[0,0,0,0]],\n            [[0,1,0,0],[0,0,1,0],[0,0,0,1]],\n            [[1,1,0,0],[0,0,0,0],[0,1,0,0]],\n            [[0,0,0,0],[0,0,0,0],[0,0,0,0]],\n            [[0,1,1,0],[0,0,0,0],[0,0,1,0]],\n            [[0,0,0,0],[1,0,0,0],[0,0,0,0]],\n            [[0,1,0,0],[0,1,0,0],[0,0,0,0]],\n            [[0,0,0,0],[0,0,1,0],[0,0,0,0]],\n            [[1,0,0,0],[0,0,0,0],[0,0,0,0]]\n        ],\n        'C': [\n            [[0,0],[0,1],[1,1]],\n            [[0,0],[0,1],[1,1]],\n            [[1,1],[1,1],[1,1]],\n            [[0,0],[0,0],[1,0]],\n            [[0,0],[0,1],[1,1]],\n            [[1,0],[1,1],[1,1]],\n            [[0,0],[0,0],[0,0]],\n            [[0,1],[1,1],[1,1]]\n        ]\n    }\n\n    all_results = []\n    \n    for case_data in [test_cases['A'], test_cases['B'], test_cases['C']]:\n        # Perform calculations for one test case\n        S = len(case_data)\n        T = len(case_data[0]) if S > 0 else 0\n\n        # Pre-process data into summary statistics (k_it, J_it)\n        summary_data = []\n        for i in range(S):\n            site_summary = []\n            for t in range(T):\n                detections = case_data[i][t]\n                k_it = sum(detections)\n                J_it = len(detections)\n                site_summary.append((k_it, J_it))\n            summary_data.append(site_summary)\n\n        # Numerically stable logistic function\n        def logistic(x):\n            return 1.0 / (1.0 + np.exp(-x))\n\n        # Numerically stable log-sum-exp for log(exp(a) + exp(b))\n        def log_sum_exp(a, b):\n            if a > b:\n                return a + np.log(1.0 + np.exp(b - a))\n            else:\n                return b + np.log(1.0 + np.exp(a - b))\n\n        # Negative log-likelihood function\n        def nll(params):\n            alpha, beta, logit_p = params\n            \n            # Using stable forms for log(p) and log(1-p)\n            log_p = -np.log(1.0 + np.exp(-logit_p))\n            log_1_minus_p = -np.log(1.0 + np.exp(logit_p))\n            if np.isinf(log_p) or np.isinf(log_1_minus_p): return np.inf\n\n            total_log_likelihood = 0.0\n\n            for t_idx in range(T):\n                t = t_idx + 1.0\n                logit_psi = alpha + beta * (t - 1.0)\n                \n                log_psi_t = -np.log(1.0 + np.exp(-logit_psi))\n                log_1_minus_psi_t = -np.log(1.0 + np.exp(logit_psi))\n                if np.isinf(log_psi_t) or np.isinf(log_1_minus_psi_t): return np.inf\n\n                for i in range(S):\n                    k_it, J_it = summary_data[i][t_idx]\n                    \n                    if k_it > 0:\n                        term = log_psi_t + k_it * log_p + (J_it - k_it) * log_1_minus_p\n                        total_log_likelihood += term\n                    else:\n                        term1 = log_1_minus_psi_t\n                        term2 = log_psi_t + J_it * log_1_minus_p\n                        total_log_likelihood += log_sum_exp(term1, term2)\n            \n            return -total_log_likelihood\n\n        # Find Maximum Likelihood Estimates\n        initial_params = np.array([0.0, 0.0, 0.0]) # alpha, beta, logit(p)\n        result = minimize(nll, initial_params, method='BFGS')\n        alpha_mle, beta_mle, logit_p_mle = result.x\n\n        # 1. Calculate hierarchical change\n        psi_1 = logistic(alpha_mle)\n        psi_T = logistic(alpha_mle + beta_mle * (T - 1))\n        \n        delta_hier = (psi_T - psi_1) / psi_1 if psi_1 != 0 else np.inf\n\n        # 2. Calculate naive change\n        d = np.zeros(T)\n        for t_idx in range(T):\n            detected_sites_count = sum(1 for i in range(S) if summary_data[i][t_idx][0] > 0)\n            d[t_idx] = detected_sites_count / S\n        \n        d_1 = d[0]\n        d_T = d[-1]\n        \n        delta_naive = (d_T - d_1) / d_1 if d_1 != 0 else np.inf\n\n        # 3. Calculate the difference\n        delta_diff = delta_naive - delta_hier\n        \n        # Append rounded results\n        all_results.append(f\"{delta_hier:.3f}\")\n        all_results.append(f\"{delta_naive:.3f}\")\n        all_results.append(f\"{delta_diff:.3f}\")\n        \n    # Print the final formatted output\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2488903"}]}