{"hands_on_practices": [{"introduction": "生态位概念的强大之处在于它将有机体的生理学与其环境联系起来。本练习将这一联系具体化，要求您使用一个标准的物种热性能曲线模型。通过求解内禀增长率 $r(T)$ 为正的温度区间，您将分析性地推导出该物种基础热生态位的边界，将抽象的生态位概念转化为一个可计算的量。[@problem_id:2494152]", "problem": "一种异温微生物表现出一种温度依赖性的人均内在增长率，该增长率由以下形式的热性能曲线描述：\n$$\nr(T)=r_{\\max}\\exp\\!\\left(-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}\\right)-m,\n$$\n其中，$T$ 是温度（单位为摄氏度），$r_{\\max}$ 是在最适温度 $T_{\\text{opt}}$ 下的最大潜在人均增长率，$\\sigma$ 控制温度耐受范围，而 $m$ 是一个与温度无关的背景损失项，整合了死亡率和维持成本。在没有生物相互作用（没有消费者、竞争者或互惠者）的情况下，温度方面的基本生态位定义为使人均内在增长率为正的 $T$ 值集合，即满足 $r(T)0$ 的集合。\n\n仅使用基本生态位（即人均增长为正的非生物条件子集）的核心定义以及指数函数和自然对数函数的标准性质，针对具体参数值 $r_{\\max}=0.5$，$T_{\\text{opt}}=25$，$\\sigma=5$ 和 $m=0.1$，解析推导使 $r(T)0$ 的温度 $T$ 区间。将你的最终答案表示为该区间的两个端点，以摄氏度为单位，用闭式解析表达式表示（不要进行数值近似）。将下界和上界以一个二元行矩阵的形式报告。不需要四舍五入，并且不要在矩阵内包含单位。", "solution": "所述问题具有科学依据，提法恰当且客观。它基于生态学中使用的标准热性能曲线模型和基本生态位的正式定义。所有必需的参数均已提供，且问题结构允许唯一的解析解。因此，该问题是有效的，我们可以着手求解。\n\n任务是确定使人均内在增长率 $r(T)$ 为正的温度区间 $T$。基本生态位由条件 $r(T)0$ 定义。所提供的增长率模型为：\n$$\nr(T)=r_{\\max}\\exp\\!\\left(-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}\\right)-m\n$$\n因此，正增长的条件是：\n$$\nr_{\\max}\\exp\\!\\left(-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}\\right)-m  0\n$$\n为了求解 $T$，我们必须将其分离出来。我们首先在不等式两边加上 $m$：\n$$\nr_{\\max}\\exp\\!\\left(-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}\\right)  m\n$$\n鉴于 $r_{\\max}$ 是一个代表最大速率的正常量，我们可以在不等式两边同时除以 $r_{\\max}$ 而不改变不等号的方向：\n$$\n\\exp\\!\\left(-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}\\right)  \\frac{m}{r_{\\max}}\n$$\n仅当右侧小于 $1$ 时，$T$ 的解才存在，因为指数项的最大值为 $1$（当 $T=T_{\\text{opt}}$ 时）。给定参数为 $r_{\\max}=0.5$ 和 $m=0.1$，所以 $\\frac{m}{r_{\\max}} = \\frac{0.1}{0.5} = 0.2$。由于 $0.2  1$，存在一个非空的温度区间使得增长为正。\n\n现在我们对不等式两边取自然对数 $\\ln$。由于 $\\ln(x)$ 对于 $x0$ 是一个严格递增函数，不等号方向保持不变：\n$$\n\\ln\\left(\\exp\\!\\left(-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}\\right)\\right)  \\ln\\left(\\frac{m}{r_{\\max}}\\right)\n$$\n利用性质 $\\ln(\\exp(x)) = x$，我们简化左侧：\n$$\n-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}  \\ln\\left(\\frac{m}{r_{\\max}}\\right)\n$$\n利用对数恒等式 $\\ln(a/b) = -\\ln(b/a)$，我们可以重写右侧：\n$$\n-\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}  -\\ln\\left(\\frac{r_{\\max}}{m}\\right)\n$$\n接着，我们在不等式两边乘以 $-1$。这个操作会反转不等号的方向：\n$$\n\\frac{(T-T_{\\text{opt}})^{2}}{2\\sigma^{2}}  \\ln\\left(\\frac{r_{\\max}}{m}\\right)\n$$\n由于 $r_{\\max}  m$，比率 $\\frac{r_{\\max}}{m}  1$，其自然对数是正数。我们可以在不等式两边乘以 $2\\sigma^2$（一个正值）而不影响不等号：\n$$\n(T-T_{\\text{opt}})^{2}  2\\sigma^{2}\\ln\\left(\\frac{r_{\\max}}{m}\\right)\n$$\n对两边取平方根，得到一个涉及绝对值的不等式。令 $W^2 = 2\\sigma^{2}\\ln\\left(\\frac{r_{\\max}}{m}\\right)$。那么 $(T-T_{\\text{opt}})^{2}  W^2$ 等价于 $|T-T_{\\text{opt}}|  \\sqrt{W^2}$：\n$$\n|T-T_{\\text{opt}}|  \\sqrt{2\\sigma^{2}\\ln\\left(\\frac{r_{\\max}}{m}\\right)}\n$$\n这可以简化为：\n$$\n|T-T_{\\text{opt}}|  \\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}\n$$\n形如 $|x|  a$ 的不等式等价于 $-a  x  a$。应用这个性质，我们得到：\n$$\n-\\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}  T - T_{\\text{opt}}  \\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}\n$$\n最后，我们在不等式的三部分同时加上 $T_{\\text{opt}}$ 来解出 $T$：\n$$\nT_{\\text{opt}} - \\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}  T  T_{\\text{opt}} + \\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}\n$$\n这就定义了基本生态位的温度区间的下界和上界。下界 $T_{\\text{lower}}$ 是 $T_{\\text{opt}} - \\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}$，上界 $T_{\\text{upper}}$ 是 $T_{\\text{opt}} + \\sigma\\sqrt{2\\ln\\left(\\frac{r_{\\max}}{m}\\right)}$。\n\n我们现在代入所提供的具体参数值：$r_{\\max}=0.5$，$T_{\\text{opt}}=25$，$\\sigma=5$ 和 $m=0.1$。\n首先，我们计算对数内的比率：\n$$\n\\frac{r_{\\max}}{m} = \\frac{0.5}{0.1} = 5\n$$\n现在，将所有值代入界限的表达式中：\n$$\nT_{\\text{lower}} = 25 - 5\\sqrt{2\\ln(5)}\n$$\n$$\nT_{\\text{upper}} = 25 + 5\\sqrt{2\\ln(5)}\n$$\n这些就是温度区间端点的精确解析表达式。", "answer": "$$\n\\boxed{\\begin{pmatrix} 25 - 5\\sqrt{2\\ln(5)}  25 + 5\\sqrt{2\\ln(5)} \\end{pmatrix}}\n$$", "id": "2494152"}, {"introduction": "基础生态位描述了一个物种的“潜力”，但在现实世界中，生物相互作用会限制这种潜力。本练习要求您基于经典的 Lotka-Volterra 竞争模型构建一个模拟。通过编写算法来确定沿环境梯度的稳定群落，您将直接观察到一个物种的实现生态位由于竞争排斥而如何成为其基础生态位的一个子集，从而深刻理解生物互动在塑造物种分布中的作用。[@problem_id:2494118]", "problem": "给定一个由$3$个物种组成的群落，它们沿一非生物环境梯度 $E \\in [0,1]$ 竞争。假设确定性种群动态遵循具有环境依赖性承载能力的 Lotka–Volterra 竞争系统，其中物种 $i$ 在时间 $t$ 的种群大小为 $N_i(t)$，其内在人均增长率为 $r_i  0$。该动态为\n$$\n\\frac{dN_i}{dt} \\;=\\; r_i \\, N_i \\left( 1 \\;-\\; \\frac{N_i + \\sum_{j \\neq i} \\alpha_{ij} N_j}{K_i(E)} \\right), \\quad i \\in \\{1,2,3\\}.\n$$\n其中 $\\alpha_{ij} \\ge 0$ 是物种 $j$ 对物种 $i$ 的人均竞争效应，而 $K_i(E)  0$ 是物种 $i$ 在环境 $E$ 下的承载能力。物种 $i$ 的基础生态位是指在没有种间竞争者的情况下，物种 $i$ 具有正平衡点的 $E$ 的集合；而物种 $i$ 的实现生态位是指在所有竞争者都存在的情况下，物种 $i$ 达到正平衡丰度的 $E$ 的集合。\n\n对于固定的 $E$，一个群落平衡点必须满足从上述动态和标准入侵分析中得出的以下原则：\n- 对于存在物种的可行性：对于每个持续存在的物种 $i$，$\\frac{dN_i}{dt} = 0$ 且 $N_i \\ge 0$。\n- 对于不存在物种的排斥一致性：对于每个在平衡点时不存在的物种 $k$（即 $N_k = 0$），在给定定居物种的情况下，其稀有时的人均增长率必须为非正数，以使该不存在的物种无法入侵。\n- 必须在可能的定居物种集合中选择平衡点，使得该平衡点对所有被排斥的物种具有入侵抗性，并对所有包含的物种可行。\n\n仅根据这些原则，实现一个算法，该算法对于一个离散的 $E$ 值网格，计算平衡丰度，并识别出每个物种的实现生态位因竞争排斥而为零的位置（即，在平衡点 $N_i^\\ast = 0$ 的位置，尽管该物种在该 $E$ 值下单独自是可存活的）。使用以下定义使算法精确且无歧义：\n- 对于任何候选定居集合 $S \\subseteq \\{1,2,3\\}$，可行性要求解由 $i \\in S$ 的 $\\frac{dN_i}{dt}=0$ 所蕴含的线性条件，得出对所有 $i \\in S$ 都有 $N_i^\\ast \\ge 0$。如果不可行（任何 $N_i^\\ast lt; 0$），则舍弃 $S$。\n- 对于任何不存在的物种 $k \\notin S$ 且 $K_k(E)  0$，将稀有时的入侵指数定义为 $g_k(E) = r_k \\left( 1 - \\frac{\\sum_{j \\in S} \\alpha_{kj} N_j^\\ast}{K_k(E)} \\right)$。入侵抗性要求对于所有 $k \\notin S$ 且 $K_k(E)  0$ 的物种，$g_k(E) \\le 0$。\n- 在所有可行且具有入侵抗性的集合 $S$ 中，优先选择基数 $|S|$ 最大的集合。如果出现平局，则通过选择字典序最小的 $S$ 来打破平局（例如，$\\{1,2\\}$ 在 $\\{1,3\\}$ 之前，$\\{1,3\\}$ 在 $\\{2,3\\}$ 之前）。\n\n在一个均匀的 $E$ 值网格 $E_m = 0.05 \\times m$（其中 $m \\in \\{0,1,2,\\dots,20\\}$）上，将上述方法应用于下面的每个测试用例。对于每个物种 $i$，计算：\n- 其实现生态位因排斥而为零的 $E$ 网格点的比例（以小数表示），定义为满足 $K_i(E)  0$ 且平衡点 $N_i^\\ast(E) = 0$ 的网格点数，除以满足 $K_i(E)  0$ 的网格点数。\n- 实现生态位因排斥而为零的 $E$ 网格连续区段的数量（相对于网格顺序），将单个孤立的网格点计为一个长度为一的区段。当某些网格点的 $K_i(E) \\le 0$ 时，不要将这些点计为任何排斥区段的一部分，并将它们视为分隔区段的边界。\n\n重要约定：\n- 对所有物种 $i \\in \\{1,2,3\\}$，使用 $r_i = 1$。\n- 与零比较时，使用数值公差 $\\varepsilon = 10^{-9}$。\n- 认为 $K_i(E)$ 的单位是任意但一致的；因为只报告比例和计数，所以输出中不需要物理单位。\n- 所有报告的比例必须是小数（而不是百分比）。将每个比例四舍五入到 $3$ 位小数。\n\n参数集测试套件：\n- 测试用例 A:\n  - 竞争矩阵，其中对角线项 $\\alpha_{ii} = 1$，非对角线项为\n    $\\alpha_{12} = 0.6$, $\\alpha_{13} = 0.3$,\n    $\\alpha_{21} = 0.7$, $\\alpha_{23} = 0.4$,\n    $\\alpha_{31} = 0.5$, $\\alpha_{32} = 0.6$.\n  - 承载能力：\n    $K_1(E) = 80 + 40E$,\n    $K_2(E) = 60 + 0E$,\n    $K_3(E) = 90 - 60E$.\n- 测试用例 B:\n  - 竞争矩阵，其中对角线项 $\\alpha_{ii} = 1$，非对角线项为\n    $\\alpha_{12} = 1.2$, $\\alpha_{13} = 1.1$,\n    $\\alpha_{21} = 0.2$, $\\alpha_{23} = 0.2$,\n    $\\alpha_{31} = 1.3$, $\\alpha_{32} = 1.0$.\n  - 承载能力：\n    $K_1(E) = 50 + 0E$,\n    $K_2(E) = 120 + 0E$,\n    $K_3(E) = 55 + 0E$.\n- 测试用例 C:\n  - 竞争矩阵，其中对角线项 $\\alpha_{ii} = 1$，非对角线项为\n    $\\alpha_{12} = 0.9$, $\\alpha_{13} = 0.4$,\n    $\\alpha_{21} = 0.9$, $\\alpha_{23} = 0.4$,\n    $\\alpha_{31} = 0.4$, $\\alpha_{32} = 0.4$.\n  - 承载能力：\n    $K_1(E) = 10 + 90E$,\n    $K_2(E) = 100 - 90E$,\n    $K_3(E) = 40 + 0E$.\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含所有测试用例的结果，格式为用方括号括起来的逗号分隔列表。\n- 对于每个测试用例，输出一个包含三个项目（每个物种一个）的列表，其中每个项目本身是一个双元素列表 $[f_i, s_i]$，$f_i$ 是比例（四舍五入到 $3$ 位小数），$s_i$ 是连续排斥区段的整数计数，二者的定义如上所述。\n- 因此，最终输出必须是形如\n$[[[f_1,s_1],[f_2,s_2],[f_3,s_3]],\\;[[\\dots],[\\dots],[\\dots]],\\;[[\\dots],[\\dots],[\\dots]]]$ 的单行，\n没有额外的空白要求，也没有附加文本。", "solution": "首先将验证问题的科学性和逻辑完整性。\n\n### 步骤 1：提取已知条件\n问题描述了一个包含$3$个竞争物种的系统，其种群动态由 Lotka-Volterra 方程控制：\n$$ \\frac{dN_i}{dt} = r_i N_i \\left( 1 - \\frac{N_i + \\sum_{j \\neq i} \\alpha_{ij} N_j}{K_i(E)} \\right), \\quad i \\in \\{1,2,3\\} $$\n- **物种数量**：$3$。\n- **环境梯度**：$E \\in [0,1]$。\n- **物种 $i$ 的种群**：$N_i(t)$。\n- **内在增长率**：$r_i  0$。问题指定对所有 $i$ 使用 $r_i = 1$。\n- **竞争系数**：$\\alpha_{ij} \\ge 0$。对角线元素为 $\\alpha_{ii}=1$。\n- **承载能力**：$K_i(E)  0$。\n- **数值公差**：$\\varepsilon = 10^{-9}$。\n- **环境网格**：$E_m = 0.05 \\times m$，其中 $m \\in \\{0, 1, ..., 20\\}$。\n- **平衡原则**：\n    1.  **可行性**：对于一个定居物种集合 $S$，求解对所有 $i \\in S$ 的 $\\frac{dN_i}{dt}=0$ 对应的线性系统。解必须满足对所有 $i \\in S$ 都有 $N_i^\\ast \\ge 0$。不可行的集合（任何 $N_i^\\ast  0$）将被丢弃。\n    2.  **入侵抗性**：对于任何不存在的物种 $k \\notin S$ 且 $K_k(E)  0$，其入侵指数 $g_k(E) = r_k \\left( 1 - \\frac{\\sum_{j \\in S} \\alpha_{kj} N_j^\\ast}{K_k(E)} \\right)$ 必须为非正数，即 $g_k(E) \\le 0$。\n    3.  **选择规则**：在所有可行且具有入侵抗性的集合 $S$ 中，选择基数 $|S|$ 最大的集合。平局通过选择字典序最小的集合来解决。\n- **每个物种 $i$ 需要的输出**：\n    1.  $f_i$：物种可存活（$K_i(E)  0$）但在平衡点被排斥（$N_i^\\ast(E) = 0$）的网格点比例，四舍五入到 $3$ 位小数。\n    2.  $s_i$：$E$ 网格上发生此类排斥的连续区段数量。\n- **测试用例**：提供了三组参数（$\\boldsymbol{\\alpha}$ 矩阵和 $K_i(E)$ 函数）。\n\n### 步骤 2：使用提取的已知条件进行验证\n问题将根据指定标准进行验证。\n- **科学依据**：该问题基于 Lotka-Volterra 竞争模型，这是理论生态学的基石。基础生态位、实现生态位、竞争排斥和入侵分析等概念都是标准且成熟的。该设置在科学上是合理的。\n- **适定性**：该问题为任何给定的参数集和环境条件 $E$ 提供了一个确定性且无歧义的算法，用以识别唯一的平衡状态。平局打破规则（最大基数，然后是字典序）确保总是选择唯一的解。该问题是适定的。\n- **客观性**：该问题使用精确的数学和生物学术语进行陈述。所有参数和要求的输出都进行了定量定义，没有主观解释的余地。\n- **完整性**：提供了所有必要信息。动态方程、参数值（$r_i$）、平衡选择的定义、网格规格和测试用例数据都已明确说明。\n- **未检测到其他缺陷**：该问题不是隐喻性的、琐碎的或不可验证的。它是一个标准的、可解的计算科学问题。\n\n### 步骤 3：结论与行动\n问题陈述是**有效的**。这是一个清晰、自成一体且科学严谨的计算练习。将开发一个解决方案。\n\n### 求解算法\n该解决方案需要实现指定的程序，以找到环境网格 $E_m$ 上每个点的稳定平衡群落结构。此过程被构建为对“定居”物种所有可能子集的搜索。\n\n对于网格上的每个点 $E$ 和每个测试用例，稳定平衡状态 $\\mathbf{N}^\\ast(E) = (N_1^\\ast(E), N_2^\\ast(E), N_3^\\ast(E))$ 按如下方式确定。物种 $\\{1,2,3\\}$ 的可能子集按特定顺序进行检查：从最大基数到最小基数，对于相同大小的子集，按字典序排序。要检查的子集 $S$ 的有序列表是：$\\{1,2,3\\}$, $\\{1,2\\}$, $\\{1,3\\}$, $\\{2,3\\}$, $\\{1\\}$, $\\{2\\}, \\{3\\}, \\emptyset$。此序列中第一个同时满足可行性和入侵抗性标准的子集决定了平衡点。\n\n**1. 可行性分析**\n对于一个给定的候选定居物种集合 $S \\subseteq \\{1,2,3\\}$，通过求解由条件 $\\frac{dN_i}{dt}=0$ 推导出的线性系统来找到 $i \\in S$ 的平衡丰度 $N_i^\\ast$，该条件简化为：\n$$ \\sum_{j \\in S} \\alpha_{ij} N_j = K_i(E) \\quad \\text{对所有 } i \\in S $$\n这可以写成矩阵形式 $\\boldsymbol{\\alpha}_S \\mathbf{N}_S = \\mathbf{K}_S(E)$，其中 $\\boldsymbol{\\alpha}_S$ 是 $S$ 中物种的竞争系数子矩阵，$\\mathbf{K}_S(E)$ 是它们承载能力的向量。\n可以获得一个解 $\\mathbf{N}_S^\\ast$。如果其所有分量都是非负的，即对所有 $i \\in S$ 都有 $N_i^\\ast \\ge -\\varepsilon$（其中 $\\varepsilon=10^{-9}$ 是数值公差），则集合 $S$ 被认为是**可行的**。如果系统是奇异的，或者任何 $N_i^\\ast  -\\varepsilon$，则集合 $S$ 是不可行的，并被丢弃。\n\n**2. 入侵抗性分析**\n如果一个集合 $S$ 是可行的，则必须测试其对任何 $k \\notin S$ 的物种的入侵抗性。对于每个 $K_k(E)  \\varepsilon$ 的潜在入侵者 $k$，我们计算入侵指数：\n$$ g_k(E) = r_k \\left( 1 - \\frac{\\sum_{j \\in S} \\alpha_{kj} N_j^\\ast}{K_k(E)} \\right) $$\n由于 $r_k=1$，这简化为 $g_k(E) = 1 - \\frac{\\sum_{j \\in S} \\alpha_{kj} N_j^\\ast}{K_k(E)}$。如果对所有潜在入侵者 $k$ 都有 $g_k(E) \\le \\varepsilon$，则该平衡点是**入侵抗性的**。如果任何入侵者的 $g_k(E)  \\varepsilon$，则该平衡点是不稳定的，集合 $S$ 被丢弃。\n\n**3. 最终平衡与输出计算**\n有序搜索中第一个同时可行且具有入侵抗性的集合 $S$ 决定了系统的稳定平衡点。丰度由 $\\mathbf{N}_S^\\ast$ 给出，对所有 $k \\notin S$，$N_k^\\ast = 0$。对每个网格点 $E_m$ 重复此过程。\n\n在计算完所有 $m$ 的 $\\mathbf{N}^\\ast(E_m)$ 后，计算每个物种 $i$ 的最终统计数据：\n- 可存活点数是 $K_i(E_m)  \\varepsilon$ 的网格点数。记为 $C_{V,i}$。\n- 被排斥点数是 $K_i(E_m)  \\varepsilon$ 且 $|N_i^\\ast(E_m)|  \\varepsilon$ 的网格点数。记为 $C_{X,i}$。\n- **排斥比例**是 $f_i = C_{X,i} / C_{V,i}$，四舍五入到 $3$ 位小数。如果 $C_{V,i}=0$，则 $f_i=0$。\n- **排斥区段数** $s_i$ 是通过创建一个布尔数组来找到的，该数组指示每个网格点是否发生排斥。一个区段是此数组中 `True` 值的连续块。计算这些块的数量。\n\n将整个程序应用于提供的三个测试用例中的每一个。实现将使用 `numpy` 进行数值计算，特别是用于求解线性系统。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Lotka-Volterra competition problem for three test cases.\n    \"\"\"\n    E_grid = np.linspace(0, 1, 21)\n    epsilon = 1e-9\n\n    test_cases = [\n        {\n            \"alpha\": np.array([\n                [1.0, 0.6, 0.3],\n                [0.7, 1.0, 0.4],\n                [0.5, 0.6, 1.0]\n            ]),\n            \"K_funcs\": [\n                lambda E: 80 + 40 * E,\n                lambda E: 60.0,\n                lambda E: 90 - 60 * E\n            ]\n        },\n        {\n            \"alpha\": np.array([\n                [1.0, 1.2, 1.1],\n                [0.2, 1.0, 0.2],\n                [1.3, 1.0, 1.0]\n            ]),\n            \"K_funcs\": [\n                lambda E: 50.0,\n                lambda E: 120.0,\n                lambda E: 55.0\n            ]\n        },\n        {\n            \"alpha\": np.array([\n                [1.0, 0.9, 0.4],\n                [0.9, 1.0, 0.4],\n                [0.4, 0.4, 1.0]\n            ]),\n            \"K_funcs\": [\n                lambda E: 10 + 90 * E,\n                lambda E: 100 - 90 * E,\n                lambda E: 40.0\n            ]\n        }\n    ]\n\n    # Subsets to check, ordered by cardinality (desc) and then lexicographically\n    # Species indices are 1-based in this list\n    subsets_to_check = [\n        (1, 2, 3),\n        (1, 2), (1, 3), (2, 3),\n        (1,), (2,), (3,),\n        ()\n    ]\n\n    all_results = []\n\n    for case in test_cases:\n        alpha = case[\"alpha\"]\n        K_funcs = case[\"K_funcs\"]\n        \n        equilibria = []\n        k_values_over_e = []\n\n        for E in E_grid:\n            k_vec = np.array([k_func(E) for k_func in K_funcs])\n            k_values_over_e.append(k_vec)\n            \n            final_n_star = None\n\n            for s_tuple in subsets_to_check:\n                s = list(s_tuple)\n                is_feasible = False\n                n_star_s = np.array([])\n                \n                # 1. Feasibility check\n                if not s:\n                    is_feasible = True\n                else:\n                    indices = [i - 1 for i in s]\n                    alpha_s = alpha[np.ix_(indices, indices)]\n                    k_s = k_vec[indices]\n\n                    if np.linalg.det(alpha_s) > epsilon:\n                        try:\n                            n_star_s = np.linalg.solve(alpha_s, k_s)\n                            if np.all(n_star_s >= -epsilon):\n                                is_feasible = True\n                        except np.linalg.LinAlgError:\n                            is_feasible = False\n                \n                if not is_feasible:\n                    continue\n\n                # 2. Invasion resistance check\n                n_star_full = np.zeros(3)\n                if s:\n                    indices = [i-1 for i in s]\n                    n_star_full[indices] = n_star_s\n                \n                is_stable = True\n                invaders = [i for i in [1, 2, 3] if i not in s]\n                \n                for invader_idx in invaders:\n                    k_idx = invader_idx - 1\n                    if k_vec[k_idx] = epsilon:\n                        continue # Cannot invade if non-viable\n                    \n                    competition_effect = np.dot(alpha[k_idx, :], n_star_full)\n                    # Note r_i = 1 for all species\n                    g_k = 1.0 - competition_effect / k_vec[k_idx]\n\n                    if g_k > epsilon:\n                        is_stable = False\n                        break\n                \n                if is_stable:\n                    final_n_star = n_star_full\n                    break\n            \n            # This should be safe as empty set is always an option\n            equilibria.append(final_n_star)\n\n        case_results = []\n        for i in range(3): # For each species\n            viable_points = 0\n            excluded_points = 0\n            is_excluded_array = []\n\n            for m, E in enumerate(E_grid):\n                k_i = k_values_over_e[m][i]\n                n_star_i = equilibria[m][i]\n                \n                is_viable = k_i > epsilon\n                if is_viable:\n                    viable_points += 1\n                \n                is_excluded = is_viable and abs(n_star_i)  epsilon\n                is_excluded_array.append(is_excluded)\n                if is_excluded:\n                    excluded_points += 1\n\n            # Calculate fraction f_i\n            if viable_points == 0:\n                f_i = 0.0\n            else:\n                f_i = round(excluded_points / viable_points, 3)\n\n            # Calculate segments s_i\n            s_i = 0\n            if len(is_excluded_array) > 0:\n                if is_excluded_array[0]:\n                    s_i = 1\n                for m in range(1, len(is_excluded_array)):\n                    if is_excluded_array[m] and not is_excluded_array[m-1]:\n                        s_i += 1\n            \n            case_results.append([f_i, s_i])\n        \n        all_results.append(case_results)\n\n    # Format final output string\n    result_str = str(all_results).replace(\" \", \"\")\n    print(result_str)\n\nsolve()\n```", "id": "2494118"}, {"introduction": "理论生态学家在理想条件下定义生态位，而实证生态学家则必须从杂乱的现实世界数据中推断它们。这个思想实验探讨了物种分布模型中的统计和概念挑战。通过分析一个物种存在的形式化模型，您将剖析为何仅凭观测数据不足以识别基础生态位，并探索区分非生物适宜性、生物相互作用和扩散限制所需的关键假设。[@problem_id:2494083]", "problem": "某个物种通过仅有存在（occurrence-only）记录在景观中被观测到，该景观由空间位置 $s \\in \\mathcal{S}$ 及其相关的环境条件 $z(s) \\in \\mathbb{R}^p$ 索引。设基础生态位（fundamental niche）在环境空间中定义为集合 $\\mathcal{N}_F = \\{ z \\in \\mathbb{R}^p : r(z)  0 \\}$，其中 $r(z)$ 是在没有生物相互作用情况下的单位种群增长率。现实生态位（realized niche）是环境的子集，在给定的生物相互作用和扩散限制下，物种既能在此持续生存也确实在此出现。\n\n假设景观上的生物占据过程受到非生物适宜性、生物相互作用和扩散可达性的乘性过滤，并且观测记录产生于一个观测过程。具体来说，假设观测到的仅有存在记录是从一个强度为\n$$\n\\lambda(s) \\;=\\; \\rho \\; q(s) \\; \\Psi(s),\n$$\n的非均匀泊松过程（Inhomogeneous Poisson Process, IPP）中独立抽取的样本，其中 $\\rho0$ 是一个总强度标度， $q(s) \\in (0,\\infty)$ 是观测偏差或可探测性因子，而 $\\Psi(s)$ 是生物占据项。假设一个简约分解\n$$\n\\Psi(s) \\;=\\; \\mathbf{1}\\{ r(z(s))  0 \\} \\; B(s) \\; D(s),\n$$\n其中 $B(s) \\in [0,1]$ 总结了净生物过滤器（如竞争和天敌），$D(s) \\in [0,1]$ 总结了扩散可达性或来自源种群的平衡定殖概率，而 $\\mathbf{1}\\{\\cdot\\}$ 是指示函数。映射 $s \\mapsto z(s)$ 从环境图层中是已知的。你没有不存在记录，只有存在位置的集合，以及可选的、独立于物种采样的背景位置。\n\n从第一性原理出发，解释为什么在没有关于 $B(s)$、$D(s)$ 和 $q(s)$ 的强假设的情况下，仅有存在数据无法识别基础生态位 $\\mathcal{N}_F$。然后，提出可在经验上检验的识别假设，在这些假设下，$\\mathcal{N}_F$ 在指定区域 $\\Omega \\subset \\mathcal{S}$ 内可以从仅有存在数据中识别出来。\n\n以下哪个（些）选项同时正确提供了：\n- 在上述模型下，关于仅有存在数据无法识别 $\\mathcal{N}_F$ 的一个基于原理的有效解释，以及\n- 一组可在经验上检验的假设，这些假设若被满足，将使得 $\\mathcal{N}_F$ 能在某个区域内从仅有存在数据中被识别出来？\n\n选择所有适用项。\n\nA. 因为 $\\lambda(s)$ 依赖于乘积 $\\mathbf{1}\\{ r(z(s))  0 \\} B(s) D(s) q(s)$，任何归因于 $\\mathbf{1}\\{ r(z(s))  0 \\}$ 的 $\\lambda(s)$ 模式都可以通过 $B(s)$ 或 $D(s)$ 的补偿性变化来模仿，除非它们受到约束；因此，没有额外的结构，仅有存在数据无法识别 $\\mathcal{N}_F$。通过满足以下所有可在经验上检验的条件，可以在一个校准区域 $\\Omega$ 中实现识别：生物排斥被移除，使得在 $\\Omega$ 中 $B(s)=1$（例如，通过移除竞争者或设置天敌排斥实验，并由监测验证）；扩散有效饱和，使得在 $\\Omega$ 中 $D(s)=1$（例如，通过在一个由独立估计的扩散核证明的连通性缓冲区内选择 $\\Omega$）；并且观测被标准化，使得在 $\\Omega$ 中 $q(s)$ 在一个常数因子内是已知的（例如，通过具有努力量记录的等努力量抽样）。在这些条件下，$\\lambda(s) \\propto \\mathbf{1}\\{ r(z(s))  0 \\}$ 在 $\\Omega$ 中成立，从而使得 $r(z)$ 的符号，即 $\\mathcal{N}_F$，在该区域是可识别的。\n\nB. 当有足够多的仅有存在记录，并使用背景点拟合一个灵活的机器学习算法时，学习到的对 $z(s)$ 的响应会收敛到基础生态位，因为生物相互作用和扩散在大尺度上会平均掉。因此，不需要关于 $B(s)$、$D(s)$ 或 $q(s)$ 的明确假设。\n\nC. 不可识别性之所以产生，是因为对于任何候选的指示函数 $\\mathbf{1}\\{ r(z(s))  0 \\}$，我们都可以构建出能产生相同 $\\lambda(s)$ 的替代 $B(s)$ 或 $D(s)$；因此，仅凭仅有存在数据无法识别 $\\mathcal{N}_F$。然而，如果利用一个自然实验，该实验产生了一个时间窗口 $[t_1,t_2]$ 和区域 $\\Omega$，其中 $B(s,t)=1$（例如，有记录的竞争者根除），并使用独立的遥测或标记-重捕法来验证在经过测量的达到扩散平衡的弛豫时间后 $\\Omega$ 内 $D(s,t)=1$，再加上标准化的抽样来确保 $q(s,t)$ 在一个尺度因子内是已知的，那么 $\\mathcal{N}_F$ 就变得可识别了。将IPP限制在 $\\Omega \\times [t_1,t_2]$ 内，则可得到 $\\lambda(s,t) \\propto \\mathbf{1}\\{ r(z(s))  0 \\}$，从而识别出 $\\mathcal{N}_F$。\n\nD. 从景观中随机抽取的伪不存在点（pseudo-absences）将仅有存在数据转换为存在-不存在数据，这本身就能识别基础生态位，因为零值（不存在）必然意味着 $r(z)\\le 0$。因此，一旦使用了伪不存在点，就不再需要关于 $B(s)$、$D(s)$ 或 $q(s)$ 的任何假设。", "solution": "问题陈述具有科学依据且定义明确。它描述了现代生态学中一个用于根据仅有存在数据建模物种分布的标准框架。问题的核心在于参数可识别性这一统计问题，这是数学建模中的一个核心概念。该问题是有效的。\n\n中心任务是解释基础生态位 $\\mathcal{N}_F$ 的不可识别性，并为其识别建立充分的、可检验的条件。观测数据的模型是一个强度函数为 $\\lambda(s)$ 的非均匀泊松过程（IPP）。数据，即一组位置 $\\{s_i\\}$，是该过程的实现。因此，数据中包含的信息是关于函数 $\\lambda(s)$ 的信息。\n\n强度由几个因子的乘积给出：\n$$\n\\lambda(s) \\;=\\; \\rho \\; q(s) \\; \\Psi(s) \\;=\\; \\rho \\; q(s) \\; \\mathbf{1}\\{ r(z(s))  0 \\} \\; B(s) \\; D(s)\n$$\n这里，$\\rho$ 是一个正常数， $q(s)  0$ 是抽样努力量或可探测性， $B(s) \\in [0,1]$ 代表生物过滤器， $D(s) \\in [0,1]$ 代表扩散过滤器，而 $\\mathbf{1}\\{ r(z(s))  0 \\}$ 是代表基础生态位 $\\mathcal{N}_F$ 的项。基础生态位在环境空间中定义为 $\\mathcal{N}_F = \\{ z \\in \\mathbb{R}^p : r(z)  0 \\}$。识别 $\\mathcal{N}_F$ 等同于识别使 $r(z)  0$ 的环境条件 $z$ 的集合，或者等同于在所有环境范围内识别指示函数 $\\mathbf{1}\\{ r(z)  0 \\}$。\n\n不可识别性问题源于 $\\lambda(s)$的乘性结构。观测到的点模式只提供了关于复合函数 $\\lambda(s)$ 的信息。我们希望分离出其中的一个组成部分，即 $\\mathbf{1}\\{ r(z(s))  0 \\}$。然而，我们无法仅通过观察乘积本身来唯一确定其因子。\n\n具体来说，如果我们观察到一个没有物种出现的区域，这意味着 $\\lambda(s)$ 为零或接近于零，这可能是由几个互不排斥的原因造成的：\n1.  环境非生物性不适宜：$r(z(s)) \\le 0$，所以 $\\mathbf{1}\\{ r(z(s))  0 \\} = 0$。\n2.  生物相互作用具有排斥性：$B(s) = 0$。例如，一个更强的竞争者或一个有效的天敌阻止了该物种维持种群。\n3.  由于扩散屏障，该位置不可达：$D(s) = 0$。该物种从未能够到达这个位置。\n\n由于这些因子中任何一个为零都会导致 $\\lambda(s) = 0$，我们无法仅从存在数据中区分出物种不存在的原因。更正式地说，让我们提出一个候选的基础生态位，对应于指示函数 $I_1(s) = \\mathbf{1}\\{ r_1(z(s))  0 \\}$。这给出了一个强度 $\\lambda_1(s) = \\rho_1 q_1(s) B_1(s) D_1(s) I_1(s)$。现在考虑一个不同的、更小的候选生态位，$I_2(s) = \\mathbf{1}\\{ r_2(z(s))  0 \\}$。我们总能构造一组新的过滤器函数，例如 $B_2(s)$，使得观测到的强度完全相同，即 $\\lambda_1(s) = \\lambda_2(s)$。例如，在任何 $I_1(s)=1$ 但 $I_2(s)=0$ 的地方，我们可以将 $B_2(s)$ 设置为某个补偿值，同时将 $B_1(s)$ 设置为0。由于数据无法区分两个产生相同 $\\lambda(s)$ 的不同模型 $(\\mathcal{N}_{F,1}, B_1, D_1, q_1)$ 和 $(\\mathcal{N}_{F,2}, B_2, D_2, q_2)$，因此在没有进一步假设的情况下，基础生态位 $\\mathcal{N}_F$ 是无法从仅有存在数据中识别的。\n\n为了使 $\\mathcal{N}_F$ 可识别，我们必须施加能够消除混淆效应的假设。目标是找到一个研究区域 $\\Omega \\subseteq \\mathcal{S}$，在该区域内 $B(s)$、$D(s)$ 和 $q(s)$ 的效应要么被消除，要么是已知的。具体来说，如果我们能建立一个区域 $\\Omega$，其中：\n1.  **生物相互作用不具限制性：** 对于所有 $s \\in \\Omega$，$B(s) = 1$。这意味着没有显著的竞争者、天敌或疾病阻止其持续生存。\n2.  **扩散不具限制性：** 对于所有 $s \\in \\Omega$，$D(s) = 1$。这意味着该区域已完全被繁殖体饱和，并且物种有足够的时间和方式到达 $\\Omega$ 内的所有位置。\n3.  **观测过程受控：** $q(s)$ 是已知的，至少在一个常数乘法因子内是已知的。最简单的情况是标准化抽样，其中对于所有 $s \\in \\Omega$，$q(s) = c$（$c$ 为某个正常数）。\n\n如果这三个条件在 $\\Omega$ 内都得到满足，强度函数将简化为：\n$$\n\\lambda(s) = \\rho \\cdot c \\cdot \\mathbf{1}\\{ r(z(s))  0 \\} \\cdot 1 \\cdot 1 = \\rho' \\; \\mathbf{1}\\{ r(z(s))  0 \\} \\quad \\text{for } s \\in \\Omega\n$$\n其中 $\\rho' = \\rho c$ 是一个新的正常数。在这些条件下，观测点在区域 $\\Omega$ 内的强度 $\\lambda(s)$ 非零，当且仅当该位置处于基础生态位之内（$r(z(s))  0$）。通过观测区域 $\\Omega$ 内物种出现位置在环境空间中的边界，我们就可以描绘出 $\\mathcal{N}_F$ 的边界。重要的是，这些假设必须能通过有针对性的野外研究、实验或抽样方案分析来进行经验性检验。\n\n现在，我们来评估各个选项。\n\n**A.** 该选项首先正确地解释了不可识别性：“...任何归因于 $\\mathbf{1}\\{ r(z(s))  0 \\}$ 的 $\\lambda(s)$ 模式都可以通过 $B(s)$ 或 $D(s)$ 的补偿性变化来模仿...”。这是对混淆问题的精确陈述。然后它为区域 $\\Omega$ 提出了一套识别假设：$B(s)=1$（通过生物移除实验验证），$D(s)=1$（通过扩散分析验证），以及 $q(s)$ 在一个常数因子内是已知的（通过抽样协议验证）。它正确地得出结论，在这些可检验的条件下，在 $\\Omega$ 中 $\\lambda(s) \\propto \\mathbf{1}\\{ r(z(s))  0 \\}$，使得 $\\mathcal{N}_F$ 在那里是可识别的。其逻辑是合理的，并且与上述的第一性原理推导完全一致。所提出的条件确实是可在经验上检验的。\n**结论：正确。**\n\n**B.** 这个选项声称只要数据足够多，生物和扩散限制就会“平均掉”，机器学习算法就会找到基础生态位。这个说法在科学上是不正确的。没有任何生态学或数学原理表明生物和扩散限制会在大尺度上平均为一个常数。通常，这些因素是广域分布限制的主要驱动力。一个在存在数据上训练的机器学习算法（即使有背景点）只能学习一个与观测数据生成过程（即 $\\lambda(s)$）成比例的函数。因此，它将学习一个被 $B(s)$、$D(s)$ 和 $q(s)$ 过滤后的现实生态位的模型，而不是基础生态位 $\\mathcal{N}_F$。声称不需要明确的假设，这直接与可识别性问题相矛盾。\n**结论：不正确。**\n\n**C.** 该选项也为不可识别性提供了有效的解释：“...对于任何候选的指示函数...我们都可以构建出能产生相同 $\\lambda(s)$ 的替代 $B(s)$ 或 $D(s)$...”。这是对该问题的一个正式且正确的陈述。然后它提出了一个具体而强大的识别方法：利用一个时空域 $\\Omega \\times [t_1,t_2]$ 内的自然实验。提出的条件是 $B(s,t)=1$（例如，有记录的害虫根除）、$D(s,t)=1$（通过独立数据如遥测验证）以及标准化的抽样来确保 $q(s,t)$。这是在推导和选项A中概述的一般策略的一个实例。它正确地得出结论，在该时空域内 $\\lambda(s,t) \\propto \\mathbf{1}\\{ r(z(s))  0 \\}$，从而可以识别 $\\mathcal{N}_F$。这些条件是可在经验上检验的。\n**结论：正确。**\n\n**D.** 该选项犯了两个根本性错误。首先，它错误地将使用“伪不存在点”等同于拥有真实的存在-不存在数据。背景点（伪不存在点）只是作为可用环境的样本，允许估计一个与 $\\lambda(s)$ 成比例的函数；它们并不提供物种真正不存在的信息。其次，它提出了一个谬论，即零值（不存在）“必然意味着 $r(z) \\le 0$”。这恰恰是不可识别性问题的核心：物种不存在可能是由于非生物因素（$r(z) \\le 0$）、生物因素（$B(s)=0$）或扩散因素（$D(s)=0$）。使用伪不存在点并不能解决这种混淆。因此，其结论即一旦使用伪不存在点就不再需要关于 $B(s)$、$D(s)$ 或 $q(s)$ 的假设是错误的。\n**结论：不正确。**\n\n选项 A 和 C 都为不可识别性问题提供了正确的解释，并提出了一套有效的、可在经验上检验的假设，这些假设能使基础生态位变得可识别。", "answer": "$$\\boxed{AC}$$", "id": "2494083"}]}