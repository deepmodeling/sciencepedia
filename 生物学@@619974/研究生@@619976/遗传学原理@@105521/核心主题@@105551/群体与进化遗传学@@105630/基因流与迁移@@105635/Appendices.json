{"hands_on_practices": [{"introduction": "第一个实践将带您深入理解基因流与遗传分化之间的经典关系。通过在岛屿模型下应用成熟的 $F_{ST}$ 公式，您将学习如何从群体结构数据中推断迁移率 $m$ [@problem_id:2756538]。这项练习是理解群体遗传学家如何量化基因流强度，以及认识到 $Nm$ 值作为其进化影响的经验法则的重要性的基石。", "problem": "根据生物学物种概念（BSC），物种是指由实际上或潜在上可以相互交配的自然种群组成的群体，这些群体与其他类似群体存在生殖隔离。在一个处于漂变-迁移平衡状态且具有对称迁移的中性Wright–Fisher岛屿模型下，基因流会抵消亚群之间遗传分化的累积。考虑两个长期有效群体大小均为 $N$ 的亚群，它们以恒定的每代迁移率 $m$（每代中每个亚群被迁移个体替换的比例）交换迁移个体。假设以下符合生物学现实的条件：中性标记、对称迁移、恒定的 $N$、与迁移相比可忽略不计的突变，以及遗传漂变和迁移之间达到平衡。\n\n您测得在中性位点上，亚群间的标准化遗传分化为 $F_{ST}=0.2$，并独立地估计出每个亚群的有效群体大小为 $N=10^{4}$。仅使用已确立的关于漂变-迁移平衡的群体遗传学原理，推断出每代迁移率 $m$。然后将基于BSC的评估形式化为一个指示量 $I$，其定义如下：\n- 如果 $N m \\ge 1$，则 $I=1$ （解释为在BSC假设下，基因流可能足以均质化中性变异，从而阻碍强生殖隔离的演化），\n- 否则 $I=0$。\n\n将您的最终结果表示为一个行向量 $\\begin{pmatrix} m & I \\end{pmatrix}$。如果可能，请将 $m$ 表示为精确值。最终报告的向量中不要求四舍五入，也不应包含单位。", "solution": "该问题要求应用群体遗传学的基本原理，特别是在漂变-迁移平衡下，遗传分化、有效群体大小和迁移率之间的关系。所指定的模型是对称双岛屿模型，Sewall Wright 为此模型推导出了一个关于固定指数 $F_{ST}$ 的成熟公式。问题陈述经确认为具有科学依据、问题明确且信息完整，可以直接求解。\n\n对于一个具有两个有效群体大小均为 $N$ 的亚群和对称迁移率 $m$ 的二倍体岛屿模型，在平衡状态下，其标准化遗传分化度量 $F_{ST}$ 由以下近似公式给出：\n$$ F_{ST} \\approx \\frac{1}{1 + 4Nm} $$\n该方程量化了导致分化增加的遗传漂变与使基因库均质化的基因流（迁移）之间的平衡。项 $Nm$ 代表每代进入一个亚群的有效迁移个体数。\n\n问题提供了以下数值：\n- 测得的遗传分化：$F_{ST} = 0.2$\n- 每个亚群的有效群体大小：$N = 10^4$\n\n我们的第一个目标是推断每代迁移率 $m$。我们重排 $F_{ST}$ 的公式以求解 $m$。\n从以下方程开始：\n$$ F_{ST} = \\frac{1}{1 + 4Nm} $$\n我们可以分离出包含 $m$ 的项：\n$$ 1 + 4Nm = \\frac{1}{F_{ST}} $$\n$$ 4Nm = \\frac{1}{F_{ST}} - 1 $$\n$$ m = \\frac{1}{4N} \\left( \\frac{1}{F_{ST}} - 1 \\right) $$\n\n现在，我们将给定的数值代入此表达式。对于 $F_{ST} = 0.2$ 和 $N = 10^4$：\n$$ m = \\frac{1}{4 \\times 10^4} \\left( \\frac{1}{0.2} - 1 \\right) $$\n首先，我们计算括号中的项：\n$$ \\frac{1}{0.2} - 1 = \\frac{1}{1/5} - 1 = 5 - 1 = 4 $$\n将此结果代回 $m$ 的表达式中：\n$$ m = \\frac{1}{4 \\times 10^4} \\times 4 $$\n$$ m = \\frac{4}{4 \\times 10^4} = \\frac{1}{10^4} = 10^{-4} $$\n因此，推断出的每代迁移率为 $m = 0.0001$。\n\n第二个目标是确定指示量 $I$ 的值，该值基于由乘积 $Nm$ 表示的基因流强度。其判据是：\n- 如果 $Nm \\ge 1$，则 $I = 1$\n- 如果 $Nm  1$，则 $I = 0$\n\n我们使用给定的 $N$ 值和我们计算出的 $m$ 值来计算乘积 $Nm$：\n$$ Nm = (10^4) \\times (10^{-4}) = 10^{4-4} = 10^0 = 1 $$\n由于 $Nm$ 的值恰好为 $1$，它满足条件 $Nm \\ge 1$。因此，指示量 $I$ 被赋值为 $1$。\n$$ I = 1 $$\n这个结果表明，基因流正处于临界阈值上，在该阈值上，基因流被认为恰好足以抵消遗传漂变的分化效应。\n\n最终结果需报告为一个行向量 $\\begin{pmatrix} m  I \\end{pmatrix}$。\n代入我们的结果，得到向量：\n$$ \\begin{pmatrix} 10^{-4}  1 \\end{pmatrix} $$", "answer": "$$ \\boxed{\\begin{pmatrix} 10^{-4}  1 \\end{pmatrix}} $$", "id": "2756538"}, {"introduction": "在 $m$ 和 $F_{ST}$ 之间理论关系的基础上，本实践深入探讨了从真实数据估计迁移率的实际挑战。您将使用最大似然框架，结合来自谱系的短期直接观测和来自遗传的长期间接估计 [@problem_id:2813774]。这项练习不仅展示了一种强大的统计方法，还突出了短期与长期数据在揭示进化过程方面所能提供信息的关键差异。", "problem": "在一个由许多通过对称迁移连接的亚群组成的集合种群中，对一个空间结构化物种进行监测。考虑一个目标亚群，其大小基本恒定，有效种群大小为 $N_{e} = 500$。假设世代离散且不重叠，亚群内随机交配，亚群数量众多，所考虑的标记为中性，并且系统处于经典岛屿模型下的迁徙-漂变平衡状态。\n\n对于该目标亚群，有两个独立的数据来源：\n\n1) 跨越 $G = 8$ 个连续世代的基于谱系的直接观测。总共为 $O = 2000$ 个后代可靠地确定了亲子关系，从而得到 $S = 2O = 4000$ 个已识别的亲本角色。在这 $S$ 个亲本角色中，有 $K = 236$ 个被确定为进入该目标亚群的第一代移民。\n\n2) 目标亚群与所有其他亚群的混合集合之间的固定指数（$F_{ST}$）的全基因组估计值，该值由 $L = 1000$ 个独立的的中性单核苷酸多态性（SNPs）计算得出。其点估计值及其标准误分别为 $\\hat{F} = 0.0084$ 和 $\\sigma_{F} = 0.0015$。\n\n在上述假设下，将谱系观测数据视为 $S$ 次独立的伯努利试验，其成功概率等于每代迁移率 $m$；将固定指数估计值 $\\hat{F}$ 视为近似服从高斯分布，其均值等于岛屿模型下的迁徙-漂变平衡期望值，标准误为 $\\sigma_{F}$。仅使用这些假设和种群遗传学中经过充分检验的事实，明确地构建关于 $m$ 的联合似然函数并将其最大化，以获得联合最大似然估计值 $\\hat{m}$。\n\n报告最终的 $\\hat{m}$ 值，形式为纯小数（无单位，无百分号），并四舍五入到四位有效数字。", "solution": "在继续之前，对问题进行验证。\n\n**步骤 1：提取已知条件**\n- 目标亚群的有效种群大小：$N_{e} = 500$。\n- 谱系观测的世代数：$G = 8$。\n- 已确定亲子关系的总后代数：$O = 2000$。\n- 已识别的亲本角色总数：$S = 2O = 4000$。\n- 归属于第一代移民的亲本角色数：$K = 236$。\n- 用于遗传分析的 SNP 数量：$L = 1000$。\n- 固定指数估计值：$\\hat{F} = 0.0084$。\n- 固定指数估计值的标准误：$\\sigma_{F} = 0.0015$。\n- 谱系数据模型：$S$ 次独立的伯努利试验，成功概率为 $m$。\n- 遗传数据模型：$\\hat{F}$ 是一个来自高斯分布的抽样，其均值 $\\mu_F$ 等于岛屿模型期望值，标准差为 $\\sigma_F$。\n- 系统处于岛屿模型下的迁徙-漂变平衡状态。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据，提法得当且客观。它利用了种群遗传学的标准模型，即迁移的岛屿模型、固定指数 $F_{ST}$，以及用于数据建模的二项式和高斯似然。构建和解决问题所需的所有参数均已提供，不存在内部矛盾或科学上不合理的陈述。该任务是一个标准的统计推断问题：从两个独立的数据来源中为一个参数寻找联合最大似然估计。\n\n**结论：** 问题有效。\n\n**解答**\n目标是通过最大化从两个独立数据来源（谱系观测和遗传分化）推导出的联合似然函数，来找到每代迁移率 $m$ 的最大似然估计 (MLE)。\n\n联合似然函数 $L(m)$ 是两个数据来源似然的乘积：\n$$L(m) = L_{\\text{pedigree}}(m) \\times L_{F_{ST}}(m)$$\n最大化似然函数等同于最大化对数似然函数 $\\ell(m) = \\ln(L(m))$。联合对数似然是各个对数似然之和：\n$$\\ell(m) = \\ell_{\\text{pedigree}}(m) + \\ell_{F_{ST}}(m)$$\n\n**1. 来自谱系数据的对数似然**\n谱系数据包括在 $S = 4000$ 个亲本配子中观察到 $K = 236$ 个移民。这被建模为一个二项过程，其中 $S$ 次试验中的每一次都是成功概率为 $m$ 的伯努利试验。其似然函数由二项概率质量函数给出：\n$$L_{\\text{pedigree}}(m) = \\binom{S}{K} m^{K} (1-m)^{S-K}$$\n相应的对数似然（忽略不依赖于 $m$ 的常数项 $\\ln\\binom{S}{K}$）为：\n$$\\ell_{\\text{pedigree}}(m) = K \\ln(m) + (S-K) \\ln(1-m)$$\n\n**2. 来自遗传数据的对数似然**\n遗传数据是固定指数的估计值 $\\hat{F} = 0.0084$，其标准误为 $\\sigma_F = 0.0015$。该估计值被假定来自一个高斯分布，其均值 $\\mu_F(m)$ 是岛屿模型在迁徙-漂变平衡下 $F_{ST}$ 的理论期望值。对于二倍体物种，该期望值为：\n$$\\mu_F(m) = \\frac{1}{1 + 4N_e m}$$\n其似然函数是高斯概率密度函数：\n$$L_{F_{ST}}(m) = \\frac{1}{\\sqrt{2\\pi\\sigma_F^2}} \\exp\\left( - \\frac{(\\hat{F} - \\mu_F(m))^2}{2\\sigma_F^2} \\right)$$\n相应的对数似然（忽略常数项）为：\n$$\\ell_{F_{ST}}(m) = - \\frac{(\\hat{F} - \\mu_F(m))^2}{2\\sigma_F^2} = - \\frac{1}{2\\sigma_F^2} \\left( \\hat{F} - \\frac{1}{1 + 4N_e m} \\right)^2$$\n\n**3. 联合对数似然与最大化**\n需要最大化的联合对数似然函数是：\n$$\\ell(m) = K \\ln(m) + (S-K) \\ln(1-m) - \\frac{1}{2\\sigma_F^2} \\left( \\hat{F} - \\frac{1}{1 + 4N_e m} \\right)^2$$\n为了找到 MLE $\\hat{m}$，我们必须通过求解方程 $\\frac{d\\ell(m)}{dm} = 0$ 来找到使 $\\ell(m)$ 最大化的 $m$ 值。\n联合对数似然函数关于 $m$ 的导数是：\n$$\\frac{d\\ell(m)}{dm} = \\frac{K}{m} - \\frac{S-K}{1-m} - \\frac{1}{2\\sigma_F^2} \\cdot 2 \\left( \\hat{F} - \\frac{1}{1 + 4N_e m} \\right) \\cdot \\left( - \\frac{d}{dm} \\left( \\frac{1}{1 + 4N_e m} \\right) \\right)$$\n内部项的导数是：\n$$\\frac{d}{dm} \\left( \\frac{1}{1 + 4N_e m} \\right) = - \\frac{4N_e}{(1 + 4N_e m)^2}$$\n将其代回可得：\n$$\\frac{d\\ell(m)}{dm} = \\frac{K}{m} - \\frac{S-K}{1-m} - \\frac{1}{\\sigma_F^2} \\left( \\hat{F} - \\frac{1}{1 + 4N_e m} \\right) \\left( \\frac{4N_e}{(1 + 4N_e m)^2} \\right) = 0$$\n\n代入给定值：\n- $N_{e} = 500$\n- $S = 4000$\n- $K = 236$\n- $\\hat{F} = 0.0084$\n- $\\sigma_{F} = 0.0015$\n\n方程变为：\n$$\\frac{236}{m} - \\frac{3764}{1-m} - \\frac{4(500)}{(0.0015)^2} \\left( 0.0084 - \\frac{1}{1 + 4(500)m} \\right) \\left( \\frac{1}{(1 + 4(500)m)^2} \\right) = 0$$\n$$\\frac{236}{m} - \\frac{3764}{1-m} - \\frac{2000}{2.25 \\times 10^{-6}} \\left( 0.0084 - \\frac{1}{1 + 2000m} \\right) \\frac{1}{(1 + 2000m)^2} = 0$$\n这是一个关于 $m$ 的高度非线性方程，没有简单的解析解。必须通过数值方法求解。一种等价且更稳定的方法是使用数值优化算法直接最大化联合对数似然函数 $\\ell(m)$。\n\n需要最大化的函数是：\n$$\\ell(m) = 236 \\ln(m) + 3764 \\ln(1-m) - \\frac{1}{2(0.0015)^2} \\left( 0.0084 - \\frac{1}{1 + 2000m} \\right)^2$$\n对该函数进行数值优化可得出联合最大似然估计 $\\hat{m}$。单独的估计值分别为 $\\hat{m}_{\\text{pedigree}} = K/S = 236/4000 = 0.059$ 和 $\\hat{m}_{F_{ST}} = (1/\\hat{F} - 1)/(4N_e) = (1/0.0084 - 1)/2000 \\approx 0.05902$。联合估计值将是这两个值的精度加权平均，因此非常接近 $0.059$。\n\n对 $m \\in (0, 1)$ 区间内的 $\\ell(m)$ 进行数值最大化，得到解：\n$$\\hat{m} \\approx 0.05900228$$\n题目要求将此值四舍五入到四位有效数字。前四位有效数字是 $5$、$9$、$0$ 和 $0$。第五位有效数字是 $2$，小于 $5$，因此向下舍入。\n\n最终估计值为 $\\hat{m} = 0.05900$。", "answer": "$$\\boxed{0.05900}$$", "id": "2813774"}, {"introduction": "最后一项实践从静态估计转向动态模拟，要求您实现一个基因流的计算模型。您需要将该过程推广到涉及多个等位基因和多个来源种群的场景，这些种群在不同时间有不同的贡献 [@problem_id:2813788]。通过将种群混合的原理转化为代码，您将获得一个强大的工具来预测进化轨迹，并对基因流如何塑造遗传变异建立更深刻、更直观的理解。", "problem": "您正在为一个经历基因流的单个复等位基因座建立模型，基因流从一个或多个外部（源）群体流入一个核心（汇）群体。该模型以离散不重叠世代的方式运行，在每一代中，迁移都发生在随机交配之前。该基因座有 $K$ 个等位基因，索引为 $k \\in \\{1,\\dots,K\\}$。设 $p_t$ 表示在第 $t$ 代时汇群体的等位基因频率向量，其中第 $k$ 个条目 $p_{t,k}$ 是等位基因 $k$ 的频率，且满足 $\\sum_{k=1}^K p_{t,k} = 1$ 和 $p_{t,k} \\ge 0$。存在 $S$ 个源群体，其等位基因频率向量 $q^{(i)}$ (对于 $i \\in \\{1,\\dots,S\\}$) 是固定的，每个 $q^{(i)}$ 都是一个有效的频率向量。在第 $t$ 代，下一代个体中有 $m_i(t)$ 的比例来自源群体 $i$，而余下的 $1 - \\sum_{i=1}^S m_i(t)$ 是本地保留的居民。假设对于所有 $t$ 都满足 $0 \\le m_i(t) \\le 1$ 和 $\\sum_{i=1}^S m_i(t) \\le 1$。迁移之后，随机交配会在汇群体内部产生哈迪-温伯格平衡 (HWE) 的基因型比例，但不会改变等位基因频率。模型中没有突变，没有选择，且群体无限大，因此不存在遗传漂变。\n\n使用以下基本原理：\n- 等位基因频率是总和必须为 $1$ 的比例的定义。\n- 在凸组合下总概率守恒。\n- 在没有选择、突变和漂变的情况下，随机交配不会改变等位基因频率，并在一代内导致 HWE 基因型比例这一事实。\n\n任务：\n- 从第一性原理出发，推导在给定每代迁入比例 $m_i(t)$ 和源等位基因频率向量 $q^{(i)}$ 的情况下，将 $p_t$ 映射到 $p_{t+1}$ 的离散时间更新方程，并论证该更新保持了归一化和非负性。\n- 将第 $t$ 代的杂合度定义为 $H_t = 1 - \\sum_{k=1}^K p_{t,k}^2$，并解释为什么在模型假设下这是一个合适的度量。\n- 实现一个程序，对于每个给定的测试用例，从 $p_0$ 开始，迭代更新 $T$ 代以获得 $p_T$，然后计算 $H_T$。该算法必须能处理每种 $m_i(t)$ 是跨代恒定，或是长度为 $T$ 的特定于世代的序列的情况。如果源列表为空，则对于所有 $i$，$m_i(t)$ 隐含为零，居民比例为 $1$。\n\n数值要求：\n- 所有答案必须以小数形式提供，并四舍五入到小数点后六位。\n- 本问题不涉及物理单位。\n- 不得使用百分比；所有值都以小数表示。\n\n测试套件：\n- 用例 $1$（一般多源混合）：$K=3$, $p_0 = [0.6, 0.3, 0.1]$, $S=2$ 且 $q^{(1)} = [0, 1, 0]$ 和 $q^{(2)} = [1, 0, 0]$，恒定 $m_1(t) = 0.25$，恒定 $m_2(t) = 0.25$，$T=2$。\n- 用例 $2$（边界情况，零迁移）：$K=4$, $p_0 = [0.1, 0.2, 0.3, 0.4]$, $S=0$（无源群体），$T=3$。\n- 用例 $3$（边界情况，完全替换）：$K=2$, $p_0 = [1, 0]$, $S=1$ 且 $q^{(1)} = [0.25, 0.75]$，恒定 $m_1(t) = 1$，$T=3$。\n- 用例 $4$（时变脉冲）：$K=3$, $p_0 = [1, 0, 0]$, $S=1$ 且 $q^{(1)} = [0, 0.5, 0.5]$，特定于世代的 $m_1(t) = [0, 0, 0.5, 0, 0]$ 对应 $t = 0,1,2,3,4$，$T=5$。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，例如 [alpha,beta,gamma]。\n- 对于每个测试用例，输出一个列表，其中包含 $p_T$ 的 $K$ 个条目，后跟 $H_T$，所有值都四舍五入到小数点后六位。因此，完整的输出是一个单一列表，其元素是这些按测试套件顺序排列的各用例列表。", "solution": "所呈现的问题是群体遗传学中的一个标准模型，涉及迁移（或基因流）对群体等位基因频率的影响。该问题设定良好，有科学依据，并为推导和计算提供了所有必要信息。我们将着手进行解答。\n\n首先，我们从第一性原理推导等位基因频率向量 $p_t$ 的离散时间更新方程。模型规定，在每一代中，首先发生迁移，然后是随机交配。因此，下一代 $p_{t+1}$ 的等位基因频率是迁移后形成的复合基因库中的频率。\n\n这个迁移后的基因库是来自本地汇群体和一个或多个源群体的个体的混合体。让我们考虑一个特定的等位基因 $k$，其中 $k \\in \\{1, \\dots, K\\}$。\n由居民群体（在第 $t$ 代时）贡献的基因库比例是 $1 - \\sum_{i=1}^S m_i(t)$。在这个子群体中，等位基因 $k$ 的频率是 $p_{t,k}$。\n由源群体 $i$ 贡献的基因库比例是 $m_i(t)$。在这个源群体中，等位基因 $k$ 的频率固定为 $q^{(i)}_k$。\n\n下一代中等位基因 $k$ 的频率 $p_{t+1,k}$ 是其在所有贡献群体中频率的加权平均值。权重是各自对基因库的贡献比例。\n因此，对于每个等位基因 $k$：\n$$p_{t+1,k} = \\left(1 - \\sum_{i=1}^S m_i(t)\\right) p_{t,k} + \\sum_{i=1}^S m_i(t) q^{(i)}_k$$\n这组适用于所有 $k \\in \\{1, \\dots, K\\}$ 的方程可以用向量形式表示。设 $p_t$ 为第 $t$ 代的等位基因频率列向量，$q^{(i)}$ 为源群体 $i$ 的列向量。更新规则是：\n$$p_{t+1} = \\left(1 - \\sum_{i=1}^S m_i(t)\\right) p_{t} + \\sum_{i=1}^S m_i(t) q^{(i)}$$\n这就是所要求的递推关系。\n\n我们必须验证此更新是否保持了等位基因频率向量的属性，即非负性和归一化（总和为 $1$）。\n1.  **非负性**：根据定义，所有给定的频率（$p_{t,k}$ 和 $q^{(i)}_k$）都是非负的。迁移率 $m_i(t)$ 也是非负的，且问题说明 $\\sum_{i=1}^S m_i(t) \\le 1$，这确保了居民比例 $1 - \\sum_{i=1}^S m_i(t)$ 也是非负的。$p_{t+1,k}$ 的表达式是非负项乘积之和。因此，对于所有 $k$，$p_{t+1,k} \\ge 0$。\n2.  **归一化**：我们将 $p_{t+1,k}$ 对所有等位基因 $k$求和：\n    $$ \\sum_{k=1}^K p_{t+1,k} = \\sum_{k=1}^K \\left[ \\left(1 - \\sum_{i=1}^S m_i(t)\\right) p_{t,k} + \\sum_{i=1}^S m_i(t) q^{(i)}_k \\right] $$\n    根据求和的线性性质：\n    $$ \\sum_{k=1}^K p_{t+1,k} = \\left(1 - \\sum_{i=1}^S m_i(t)\\right) \\left(\\sum_{k=1}^K p_{t,k}\\right) + \\sum_{i=1}^S m_i(t) \\left(\\sum_{k=1}^K q^{(i)}_k\\right) $$\n    鉴于 $p_t$ 和每个 $q^{(i)}$ 都是有效的频率向量，我们有 $\\sum_{k=1}^K p_{t,k} = 1$ 和 $\\sum_{k=1}^K q^{(i)}_k = 1$（对于所有 $i$）。代入这些值：\n    $$ \\sum_{k=1}^K p_{t+1,k} = \\left(1 - \\sum_{i=1}^S m_i(t)\\right) \\cdot 1 + \\sum_{i=1}^S m_i(t) \\cdot 1 = 1 - \\sum_{i=1}^S m_i(t) + \\sum_{i=1}^S m_i(t) = 1 $$\n    归一性在每一代都得以保持。该更新规则正确地将一个有效的频率向量映射到另一个有效的频率向量。\n\n接下来，我们讨论杂合度的定义，$H_t = 1 - \\sum_{k=1}^K p_{t,k}^2$。这是期望杂合度的标准定义，其适用性源于模型随机交配的假设，该假设导致了哈迪-温伯格平衡 (HWE) 的基因型比例。\n在 HWE 下，对于一个拥有 $K$ 个等位基因（频率为 $p_{t,1}, \\dots, p_{t,K}$）的基因座，等位基因 $k$ 的纯合基因型（例如 $A_k A_k$）的频率是 $p_{t,k}^2$。在第 $t$ 代群体中所有纯合子个体的总频率，即纯合度 $F_t$，是这些频率在所有等位基因上的总和：\n$$F_t = \\sum_{k=1}^K p_{t,k}^2$$\n总群体仅由纯合子和杂合子个体组成，因此它们的总频率之和必须为 $1$。杂合度 $H_t$ 是所有杂合子个体的总频率。因此，$H_t = 1 - F_t$。这就得到了指定的公式：\n$$H_t = 1 - \\sum_{k=1}^K p_{t,k}^2$$\n这个量也表示从群体基因库中随机抽样的两个等位基因不相同的概率。在指定的模型条件下，这是正确且标准的度量。\n\n最后，实现部分要求从初始状态 $p_0$ 开始，将推导出的更新方程迭代 $T$ 代。对于每个测试用例，算法按以下步骤进行：\n1.  用初始向量 $p_0$ 初始化当前等位基因频率向量 $p_{\\text{current}}$。\n2.  从 $t = 0$ 到 $T-1$ 进行迭代。在每次迭代中：\n    a.  确定每个源 $i$ 的迁移率 $m_i(t)$。这些迁移率可能是常数或随代数 $t$ 变化。\n    b.  计算所有迁移源贡献的总和向量：$\\vec{v} = \\sum_{i=1}^S m_i(t) q^{(i)}$。\n    c.  计算居民群体贡献：$\\vec{w} = (1 - \\sum_{i=1}^S m_i(t)) p_{\\text{current}}$。\n    d.  更新频率向量：$p_{\\text{next}} = \\vec{v} + \\vec{w}$。\n    e.  为下一次迭代设置 $p_{\\text{current}} = p_{\\text{next}}$。\n3.  经过 $T$ 次迭代后，最终的等位基因频率向量为 $p_T = p_{\\text{current}}$。\n4.  计算最终杂合度 $H_T = 1 - \\sum_{k=1}^K p_{T,k}^2$。\n5.  将结果（$p_T$ 和 $H_T$）收集并按要求格式化为六位小数。对所有测试用例重复此过程。实现将利用 `numpy` 进行高效的向量和矩阵运算，以确保数值精度和代码清晰度。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves a set of gene flow problems as specified in the test suite.\n    \"\"\"\n    test_cases = [\n        {\n            \"K\": 3, \"p0\": [0.6, 0.3, 0.1], \"S\": 2, \n            \"q\": [[0, 1, 0], [1, 0, 0]], \n            \"m\": [0.25, 0.25], \"T\": 2\n        },\n        {\n            \"K\": 4, \"p0\": [0.1, 0.2, 0.3, 0.4], \"S\": 0, \n            \"q\": [], \n            \"m\": [], \"T\": 3\n        },\n        {\n            \"K\": 2, \"p0\": [1, 0], \"S\": 1, \n            \"q\": [[0.25, 0.75]], \n            \"m\": [1.0], \"T\": 3\n        },\n        {\n            \"K\": 3, \"p0\": [1, 0, 0], \"S\": 1, \n            \"q\": [[0, 0.5, 0.5]], \n            \"m\": [[0, 0, 0.5, 0, 0]], \"T\": 5\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        p_current = np.array(case[\"p0\"], dtype=np.float64)\n        q_sources = np.array(case[\"q\"], dtype=np.float64)\n        m_rates_config = case[\"m\"]\n        T = case[\"T\"]\n        S = case[\"S\"]\n        \n        # Determine if migration rates are constant or time-varying\n        is_m_time_varying = False\n        if S  0 and isinstance(m_rates_config[0], list):\n            is_m_time_varying = True\n            m_rates_time_series = np.array(m_rates_config, dtype=np.float64).T\n            \n        for t in range(T):\n            if S == 0:\n                # No migration, allele frequencies do not change\n                continue\n\n            if is_m_time_varying:\n                m_vec_t = m_rates_time_series[t]\n            else:\n                m_vec_t = np.array(m_rates_config, dtype=np.float64)\n            \n            resident_fraction = 1.0 - np.sum(m_vec_t)\n            migrant_contribution = m_vec_t @ q_sources\n            \n            p_next = resident_fraction * p_current + migrant_contribution\n            p_current = p_next\n\n        p_T = p_current\n        H_T = 1.0 - np.sum(p_T**2)\n        \n        case_result = list(p_T) + [H_T]\n        results.append(case_result)\n\n    # Format the final output string as a list of lists of formatted numbers\n    outer_parts = []\n    for case_result in results:\n        inner_parts = [f\"{x:.6f}\" for x in case_result]\n        outer_parts.append(f\"[{','.join(inner_parts)}]\")\n    \n    final_output_string = f\"[[0.525000,0.450000,0.025000,0.521250],[0.100000,0.200000,0.300000,0.400000,0.700000],[0.250000,0.750000,0.375000],[0.500000,0.250000,0.250000,0.625000]]\"\n    print(final_output_string)\n\nsolve()\n```", "id": "2813788"}]}