{"hands_on_practices": [{"introduction": "这第一个练习旨在介绍细胞器基因组的一个基本特征：其非凡的紧凑性。通过分析一个假设的叶绿体基因组注释，你将计算蛋白质编码 DNA 所占的比例。这项实践将帮助你将一个简单的基因组度量与“基因组经济性”选择这一强大的进化概念联系起来。[@problem_id:2834523]", "problem": "一个新测序的陆生植物的叶绿体基因组注释如下。该环状基因组的长度为 $154{,}723$ 个碱基对。注释识别出的蛋白质编码基因，其编码序列（CDS; coding sequence）总长度为 $79{,}560$ 个碱基对，该总长度仅计算被翻译的外显子的总和，即使基因被分割成多个外显子，每个碱基也只计算一次。在这些蛋白质编码基因中，共有 $20$ 个内含子，其总长度为 $14{,}300$ 个碱基对。核糖体RNA和转运RNA基因共同额外占据 $7{,}450$ 个碱基对，但这些不被视为蛋白质编码序列。\n\n仅根据第一性原理（即编码序列由翻译成氨基酸的碱基对组成，而内含子被剪接掉且不被翻译），计算整个细胞器基因组中蛋白质编码序列所占的比例 $p$。将 $p$ 表示为不带单位的小数，并将您的答案四舍五入到四位有效数字。\n\n然后，根据 $p$ 的值与典型陆生植物核基因组（其蛋白质编码部分的比例通常在 $0.01$ 到 $0.02$ 的数量级）的对比，使用定性推理，简要解释这对于细胞器基因组紧凑性的选择压力意味着什么。不要将此解释包含在您的最终数值答案中。", "solution": "题目要求计算叶绿体基因组中蛋白质编码部分所占的比例（我们将其记为 $p$），然后对这个值进行定性解释。\n\n首先，我们必须根据题目陈述中提供的信息，精确定义所涉及的各个量。\n环状叶绿体基因组的总长度给出为 $L_{total} = 154,723$ 个碱基对。\n蛋白质编码序列（CDS）的总长度（其定义为所有被翻译的外显子的加总长度）给出为 $L_{CDS} = 79,560$ 个碱基对。\n题目还提供了额外信息：蛋白质编码基因中内含子的总长度为 $L_{introns} = 14,300$ 个碱基对，核糖体RNA和转运RNA基因的总长度为 $L_{RNA} = 7,450$ 个碱基对。\n\n需要计算的量是 *蛋白质编码序列* 在 *整个* 基因组中所占的比例。根据定义，蛋白质编码序列由被翻译成氨基酸的密码子组成。内含子是从前体mRNA转录本中被切除的非编码区域，不会被翻译。同样，rRNA和tRNA基因产生功能性RNA分子，但也不被翻译成蛋白质。因此，关于 $L_{introns}$ 和 $L_{RNA}$ 的信息对于直接计算蛋白质编码比例是多余的，在计算我们这个分数的分子时必须被忽略。\n\n比例 $p$ 是蛋白质编码序列总长度与基因组总长度的比值。其公式为：\n$$p = \\frac{L_{CDS}}{L_{total}}$$\n\n将给定值代入此方程：\n$$p = \\frac{79,560}{154,723}$$\n\n进行除法运算，得到 $p$ 的数值：\n$$p \\approx 0.51420705...$$\n\n题目要求答案保留四位有效数字。前四位有效数字是 $5$、$1$、$4$ 和 $2$。第五位数字是 $0$，小于 $5$，所以我们向下舍入。\n$$p \\approx 0.5142$$\n\n对于题目的第二部分，我们必须解释这个结果。计算出的蛋白质编码DNA比例约为 $p \\approx 0.5142$，相当于 $51.42\\%$。这个值必须与题目中提到的陆生植物核基因组中典型的蛋白质编码比例进行比较，该比例的数量级为 $0.01$ 到 $0.02$，即 $1\\%$ 到 $2\\%$。\n\n叶绿体基因组异常紧凑，其一半以上的序列都用于蛋白质编码。与其宿主核基因组相比，其信息内容的密度要高出几个数量级。这种巨大的差异意味着，塑造细胞器基因组的进化力量与塑造核基因组的进化力量有着根本的不同。具体而言，叶绿体基因组的高基因密度表明存在着非常强大、持续的纯化选择压力，以维持较小的基因组规模并清除无功能或非必需的DNA。这被称为对基因组紧凑性或经济性的选择。这种压力可能源于复制的代谢成本、每个细胞中必须维持的大量基因组拷贝，以及使非编码DNA成为突变负累的高突变率。\n\n相反，陆生植物更大且基因密度更低的核基因组，其特点是大量非编码DNA的积累，包括广阔的基因间区、巨大而众多的内含子，以及高含量的重复元件（例如，转座子）。这表明，在核基因组层面，对基因组紧凑性的选择要么弱得多，要么完全不存在，甚至在某些情况下，基因组大小的增加可能是被容忍的或具有适应性的。", "answer": "$$\\boxed{0.5142}$$", "id": "2834523"}, {"introduction": "从基因组结构转向细胞内的丰度，这个练习模拟了分子生物学中的一项常见任务：确定每个细胞的线粒体 DNA (mtDNA) 拷贝数。你将使用定量 PCR 的 $C_t$ 值，并考虑细胞的异质性（如倍性和细胞周期阶段），学习如何将原始实验测量值转化为具有生物学意义的量。这项练习强调了在实验遗传学中，严谨的归一化和定量推理的重要性。[@problem_id:2834509]", "problem": "将从哺乳动物细胞混合群体中提取的单一DNA样本，通过定量聚合酶链式反应（qPCR）进行定量，该过程使用两种检测方法：一种靶向线粒体DNA（mtDNA）位点，另一种靶向每个单倍体基因组中存在一次的单拷贝核基因位点。两种qPCR检测均使用相同的提取物和相同的上样体积，因此mtDNA和核DNA的测量结果对应于相同数量的细胞。每种检测的绝对定量都通过标准曲线进行，该标准曲线通过线性模型 $C_t = m \\log_{10}(N_0) + b$ 将定量循环数 $C_t$ 与初始模板拷贝数的以10为底的对数 $\\log_{10}(N_0)$ 联系起来。两种检测的标准曲线（来自独立校准）如下：\n- mtDNA检测：斜率 $m_{\\mathrm{mt}} = -3.35$，截距 $b_{\\mathrm{mt}} = 39.10$。\n- 核基因检测：斜率 $m_{\\mathrm{nuc}} = -3.40$，截距 $b_{\\mathrm{nuc}} = 37.50$。\n\n在目标样本中，测得的 $C_t$ 值为：\n- mtDNA检测：$C_{t,\\mathrm{mt}} = 15.20$。\n- 核基因检测：$C_{t,\\mathrm{nuc}} = 22.80$。\n\n对同一细胞群体的流式细胞术分析表明，该群体是倍性和细胞周期阶段的混合体，各组分比例如下：\n- 二倍体细胞比例 $= 0.80$，四倍体细胞比例 $= 0.20$。\n- 二倍体细胞中：G1期比例 $= 0.55$，S期比例 $= 0.30$，G2/M期比例 $= 0.15$。\n- 四倍体细胞中：G1期比例 $= 0.45$，S期比例 $= 0.35$，G2/M期比例 $= 0.20$。\n\n假设以下经过充分验证的事实：(i) 作为标准曲线基础的qPCR扩增模型适用，(ii) 核基因靶点在每个单倍体基因组中存在一次，因此核基因qPCR拷贝数测量的是单倍体基因组当量，以及 (iii) 对于二倍体细胞，G1期的核DNA含量为 $2C$，G2/M期为 $4C$；由于S期DNA复制进程大致均匀，S期细胞的平均DNA含量为中点值 $3C$；相应地，四倍体细胞在G1期的DNA含量为 $4C$，G2/M期为 $8C$，S期平均为 $6C$。\n\n仅使用这些原理，通过对倍性和细胞周期阶段混合情况进行适当调整，计算该群体中每个细胞的绝对mtDNA拷贝数。将最终答案四舍五入至四位有效数字，并以“拷贝数/细胞”（无量纲）的形式表示。", "solution": "该问题要求利用定量聚合酶链式反应（qPCR）和流式细胞术的数据，确定一个混合细胞群体中每个细胞的平均线粒体DNA（mtDNA）拷贝数。\n\n首先，我们必须验证问题陈述的有效性。\n已知条件如下：\n1.  qPCR定量模型：$C_t = m \\log_{10}(N_0) + b$，其中 $C_t$ 是定量循环数，$N_0$ 是初始模板拷贝数，$m$ 是斜率，$b$ 是截距。\n2.  mtDNA检测的参数：$m_{\\mathrm{mt}} = -3.35$, $b_{\\mathrm{mt}} = 39.10$。\n3.  核DNA（nuc）检测的参数：$m_{\\mathrm{nuc}} = -3.40$, $b_{\\mathrm{nuc}} = 37.50$。\n4.  样本测得的 $C_t$ 值：$C_{t,\\mathrm{mt}} = 15.20$, $C_{t,\\mathrm{nuc}} = 22.80$。\n5.  细胞群体结构：\n    -   二倍体细胞比例, $f_{d} = 0.80$。\n    -   四倍体细胞比例, $f_{t} = 0.20$。\n6.  亚群内的细胞周期分布：\n    -   二倍体比例：G1 ($f_{d,G1}=0.55$), S ($f_{d,S}=0.30$), G2/M ($f_{d,G2/M}=0.15$)。\n    -   四倍体比例：G1 ($f_{t,G1}=0.45$), S ($f_{t,S}=0.35$), G2/M ($f_{t,G2/M}=0.20$)。\n7.  关于DNA含量的假设，其中 $C$ 是一个单倍体基因组的DNA含量：\n    -   二倍体细胞：G1=$2C$, S (平均)=$3C$, G2/M=$4C$。这些分别对应于 $2$、$3$ 和 $4$ 个单倍体基因组当量。\n    -   四倍体细胞：G1=$4C$, S (平均)=$6C$, G2/M=$8C$。这些分别对应于 $4$、$6$ 和 $8$ 个单倍体基因组当量。\n\n这个问题在科学上是合理的，因为它基于分子生物学（qPCR）和细胞生物学（细胞周期、倍性）的既定原理。所提供的数据内部一致，并且对于真实的生物实验而言在数值上是合理的。该问题提法清晰、客观，并包含得出唯一解所需的所有信息。因此，该问题被认为是有效的，我们将构建一个解决方案。\n\n目标是求出每个细胞的平均mtDNA拷贝数，我们将其表示为 $\\langle N_{\\mathrm{mt/cell}} \\rangle$。这是mtDNA总拷贝数 $N_{0,\\mathrm{mt}}$ 除以细胞总数 $N_{\\mathrm{cells}}$。\n$$\n\\langle N_{\\mathrm{mt/cell}} \\rangle = \\frac{N_{0,\\mathrm{mt}}}{N_{\\mathrm{cells}}}\n$$\nqPCR测量提供了 $N_{0,\\mathrm{mt}}$（mtDNA总拷贝数）和 $N_{0,\\mathrm{nuc}}$（单倍体基因组总当量）。细胞数量 $N_{\\mathrm{cells}}$ 没有直接测量。然而，单倍体基因组的总当量是每个细胞的平均单倍体基因组数 $\\langle G \\rangle$ 与细胞总数的乘积。\n$$\nN_{0,\\mathrm{nuc}} = \\langle G \\rangle \\cdot N_{\\mathrm{cells}}\n$$\n我们可以重新排列这个等式得到 $N_{\\mathrm{cells}} = N_{0,\\mathrm{nuc}} / \\langle G \\rangle$。将此代入第一个方程：\n$$\n\\langle N_{\\mathrm{mt/cell}} \\rangle = \\frac{N_{0,\\mathrm{mt}}}{N_{0,\\mathrm{nuc}} / \\langle G \\rangle} = \\left(\\frac{N_{0,\\mathrm{mt}}}{N_{0,\\mathrm{nuc}}}\\right) \\cdot \\langle G \\rangle\n$$\n因此，求解路径为：1) 根据qPCR数据计算初始拷贝数的比率，2) 根据细胞群体数据计算每个细胞的平均单倍体基因组数，以及 3) 将这两个结果相乘。\n\n步骤1：计算初始模板拷贝数的比率。\n从qPCR模型出发，我们首先反转方程以求解 $N_0$：\n$$\nN_0 = 10^{\\frac{C_t - b}{m}}\n$$\n将此应用于mtDNA和核基因检测：\n$$\nN_{0,\\mathrm{mt}} = 10^{\\frac{C_{t,\\mathrm{mt}} - b_{\\mathrm{mt}}}{m_{\\mathrm{mt}}}} = 10^{\\frac{15.20 - 39.10}{-3.35}} = 10^{\\frac{-23.90}{-3.35}}\n$$\n$$\nN_{0,\\mathrm{nuc}} = 10^{\\frac{C_{t,\\mathrm{nuc}} - b_{\\mathrm{nuc}}}{m_{\\mathrm{nuc}}}} = 10^{\\frac{22.80 - 37.50}{-3.40}} = 10^{\\frac{-14.70}{-3.40}}\n$$\nmtDNA拷贝数与核基因组当量的比率为：\n$$\n\\frac{N_{0,\\mathrm{mt}}}{N_{0,\\mathrm{nuc}}} = \\frac{10^{\\frac{23.90}{3.35}}}{10^{\\frac{14.70}{3.40}}} = 10^{\\left(\\frac{23.90}{3.35} - \\frac{14.70}{3.40}\\right)}\n$$\n\n步骤2：计算每个细胞的平均单倍体基因组数 $\\langle G \\rangle$。\n这是一个基于群体构成的加权平均值。\n首先，我们计算每个亚群的平均基因组含量。\n对于二倍体细胞（基因组数 $g_d = \\{2, 3, 4\\}$）：\n$$\n\\langle G_d \\rangle = f_{d,G1} \\cdot 2 + f_{d,S} \\cdot 3 + f_{d,G2/M} \\cdot 4 = (0.55)(2) + (0.30)(3) + (0.15)(4) = 1.10 + 0.90 + 0.60 = 2.60\n$$\n对于四倍体细胞（基因组数 $g_t = \\{4, 6, 8\\}$）：\n$$\n\\langle G_t \\rangle = f_{t,G1} \\cdot 4 + f_{t,S} \\cdot 6 + f_{t,G2/M} \\cdot 8 = (0.45)(4) + (0.35)(6) + (0.20)(8) = 1.80 + 2.10 + 1.60 = 5.50\n$$\n每个细胞的总体平均单倍体基因组数是这两个值的加权平均：\n$$\n\\langle G \\rangle = f_d \\cdot \\langle G_d \\rangle + f_t \\cdot \\langle G_t \\rangle = (0.80)(2.60) + (0.20)(5.50) = 2.08 + 1.10 = 3.18\n$$\n\n步骤3：合并结果以求得最终答案。\n$$\n\\langle N_{\\mathrm{mt/cell}} \\rangle = 10^{\\left(\\frac{23.90}{3.35} - \\frac{14.70}{3.40}\\right)} \\cdot \\langle G \\rangle\n$$\n我们计算指数的值：\n$$\n\\frac{23.90}{3.35} - \\frac{14.70}{3.40} \\approx 7.134328 - 4.323529 = 2.810799\n$$\n现在我们计算最终值：\n$$\n\\langle N_{\\mathrm{mt/cell}} \\rangle \\approx 10^{2.810799} \\cdot 3.18 \\approx 646.853 \\cdot 3.18 \\approx 2057.00\n$$\n根据问题陈述的要求，将最终答案四舍五入至四位有效数字，得到 $2057$。", "answer": "$$\\boxed{2057}$$", "id": "2834509"}, {"introduction": "这最后一个高级练习将深入探讨细胞器基因组在演变中的细胞谱系内的种群动态。你将基于 Wright-Fisher 过程实现一个计算模型，以量化遗传漂变和选择对线粒体异质性的影响。通过将模型拟合到测序数据来估计有效群体大小 ($N_e$) 和选择系数 ($s$)，并进行似然比检验，你将亲身体验用于揭示塑造细胞器 DNA 进化力量的现代统计方法。[@problem_id:2834548]", "problem": "您会获得来自独立细胞谱系的跨组织线粒体异质性观测数据，这些细胞谱系从一个共同的祖先分化而来。假设采用以下基于 Wright–Fisher 模型和扩散近似的建模框架：\n\n- 谱系中一个目标线粒体单倍型的频率（异质性）用 $p$ 表示。在共同祖先处的初始异质性为 $p_0 \\in (0,1)$。\n- 在一个有效线粒体基因组数量（有效细胞谱系大小）为 $N_e$ 的谱系中，经过 $t$ 个离散世代，会发生 Wright–Fisher 漂变。在扩散近似下，经过 $t$ 个世代后由漂变引起的等位基因频率的方差为\n  $$ \\mathrm{Var}(p_t \\mid p_0, N_e, t) \\approx p_t (1 - p_t) \\left(1 - e^{-t / (2 N_e)}\\right). $$\n- 选择系数为 $s$ 的弱定向选择每代以乘法方式起作用。在连续时间近似中，确定性平均轨迹遵循逻辑斯谛微分方程\n  $$ \\frac{dp}{dt} = s\\, p (1 - p), $$\n  其解意味着在时间 $t$ 的期望均值为\n  $$ \\mu_t = \\mathrm{logistic}\\!\\left(\\mathrm{logit}(p_0) + s t\\right), $$\n  其中 $\\mathrm{logistic}(x) = \\frac{1}{1 + e^{-x}}$ 且 $\\mathrm{logit}(p) = \\ln\\!\\left(\\frac{p}{1-p}\\right)$。\n- 为对采样时未观测到的真实异质性进行边缘化，用均值为 $\\mu_t$、方差为\n  $$ v_t = \\mu_t (1 - \\mu_t) \\left(1 - e^{-t / (2 N_e)}\\right) $$\n  的 Beta 分布来近似 $p_t$。\n  这意味着一个 Beta 分布 $\\mathrm{Beta}(\\alpha_t, \\beta_t)$，其参数为\n  $$ \\alpha_t = \\mu_t \\left( \\frac{\\mu_t (1 - \\mu_t)}{v_t} - 1 \\right), \\quad \\beta_t = (1 - \\mu_t) \\left( \\frac{\\mu_t (1 - \\mu_t)}{v_t} - 1 \\right), $$\n  条件是 $0 < v_t < \\mu_t(1-\\mu_t)$。在 $v_t \\to 0$ 的极限情况下，使用成功概率为 $\\mu_t$ 的二项式似然。\n- 测序测量在组织 $i$ 中观测到 $n_i$ 个总读数中有 $k_i$ 个突变读数。在 $p_t \\sim \\mathrm{Beta}(\\alpha_t, \\beta_t)$ 和读数抽样的条件下，边缘计数分布是贝塔-二项分布：\n  $$ \\Pr(K = k) = \\binom{n}{k} \\frac{B(k + \\alpha, n - k + \\beta)}{B(\\alpha, \\beta)}, $$\n  其中 $B(\\cdot,\\cdot)$ 是贝塔函数。如果 $v_t = 0$，则使用二项式 $\\Pr(K=k) = \\binom{n}{k} \\mu_t^k (1 - \\mu_t)^{n - k}$。\n\n您的任务是编写一个完整的、可运行的程序，对下面的每个数据集执行以下操作：\n\n1. 通过最大似然法拟合 Wright–Fisher 漂变模型，以估计有效细胞谱系大小 $N_e$ 和选择系数 $s$。似然由各组织贝塔-二项（或当 $v_t \\to 0$ 时的二项）概率的乘积定义。使用给定的 $p_0$，并在给定 $(N_e, s)$ 的条件下，将谱系视为独立的。\n2. 通过仅对 $N_e$ 进行最大化，计算零假设模型 $H_0: s = 0$ 下的对数似然。\n3. 计算备择假设模型 $H_1: s$ 为自由参数（$N_e$ 也为自由参数）下的对数似然。\n4. 使用检验统计量\n   $$ \\Lambda = 2 \\left(\\ell_1^{\\star} - \\ell_0^{\\star}\\right) $$\n   执行似然比检验 (LRT)，比较 $H_0$ 和 $H_1$。\n   其中 $\\ell_0^{\\star}$ 和 $\\ell_1^{\\star}$ 分别是 $H_0$ 和 $H_1$ 下的最大化对数似然。在标准正则性条件下，使用自由度为 $1$ 的卡方分布报告 $p$ 值。\n5. 为了数值稳定性，强制 $\\mu_t \\in [10^{-9}, 1 - 10^{-9}]$。在计算 Beta 参数时，如果 $v_t \\le 10^{-12}$，则回退到使用成功概率为 $\\mu_t$ 的二项式似然。\n\n估计的算法约束：\n\n- 对 $N_e$ 在集合 $\\{30, 50, 80, 120, 200, 300, 500, 800, 1200, 2000, 3000, 4000, 5000\\}$ 中进行网格搜索。\n- 对 $s$ 在闭区间 $[-0.05, 0.05]$ 内进行网格搜索，步长为 $0.001$。\n- 确保备择模型的 $s$ 网格包含 $0$，以便 $H_0$ 嵌套于 $H_1$ 之内。\n- 将达到最大对数似然的网格点作为最大似然估计值报告。\n\n测试套件（每个数据集是一个包含所有所需量的元组）：\n\n- 数据集 A (中性漂变, 时间递增): $p_0 = 0.5$, 时间 $t = [10, 20, 30, 40]$, 深度 $n = [300, 300, 300, 300]$, 突变计数 $k = [150, 152, 148, 151]$。\n- 数据集 B (正选择信号): $p_0 = 0.6$, 时间 $t = [20, 30, 40]$, 深度 $n = [400, 400, 400]$, 突变计数 $k = [288, 318, 332]$。\n- 数据集 C (边界情况，漂变时间极短，负选择信号): $p_0 = 0.4$, 时间 $t = [1, 1, 2]$, 深度 $n = [200, 200, 200]$, 突变计数 $k = [80, 79, 77]$。\n- 数据集 D (近边界频率，中性): $p_0 = 0.1$, 时间 $t = [10, 30, 50]$, 深度 $n = [500, 500, 500]$, 突变计数 $k = [55, 44, 79]$。\n\n要求的最终输出格式：\n\n- 您的程序应生成单行输出，其中包含所有数据集的结果，形式为一个用方括号括起来的逗号分隔列表，每个数据集的结果是一个包含四个浮点数的列表\n  $$[\\hat{N}_e, \\hat{s}, \\Lambda, p\\text{-值}],$$\n  并四舍五入到三位小数。总输出应为\n  $$\\big[ [\\cdot,\\cdot,\\cdot,\\cdot], [\\cdot,\\cdot,\\cdot,\\cdot], [\\cdot,\\cdot,\\cdot,\\cdot], [\\cdot,\\cdot,\\cdot,\\cdot] \\big].$$\n- 不涉及物理单位；所有量均为无量纲。不使用角度。将任何分数量表示为小数浮点数。\n\n您的程序必须是完整的、无需修改即可运行的，并且没有用户输入。它必须使用指定的模型和网格计算所要求的估计值和检验统计量，并严格按照指定格式打印结果。", "solution": "该问题陈述已经过严格验证，并被认定为有效。它构成了一个统计群体遗传学中的良定问题，其基础是 Wright–Fisher 模型、扩散近似和最大似然推断的既有理论框架。该问题是自洽的、科学上合理的，并提供了所有必要的数据和算法约束，以便根据指定方法推导出唯一解。\n\n目标是使用最大似然方法，从线粒体异质性数据中估计有效细胞谱系大小 $N_e$ 和选择系数 $s$。这涉及对中性遗传漂变的零假设模型（$H_0: s=0$）与同时包含漂变和选择的备择假设模型（$H_1: s \\neq 0$）进行比较。\n\n分析过程结构如下。对于每个数据集，我们给定一个初始异质性频率 $p_0$ 和一组观测值，其中每个观测值 $i$ 包含以世代为单位的时间 $t_i$、总测序深度 $n_i$ 和突变读数数量 $k_i$。\n\n首先，我们为给定的一组参数 $(N_e, s)$ 定义单个观测值 $(k_i, n_i)$ 在时间 $t_i$ 的对数似然。一个数据集的总对数似然是其所有独立观测值的对数似然之和：$\\mathcal{L}(N_e, s) = \\sum_i \\ell_i(k_i, n_i, t_i \\mid N_e, s, p_0)$。\n\n每一项 $\\ell_i$ 的计算按以下步骤进行：\n\n1.  **确定性平均频率**：选择作用下的期望频率 $\\mu_{t_i}$ 使用逻辑斯谛增长模型解计算得出：\n    $$ \\mu_{t_i} = \\mathrm{logistic}\\!\\left(\\mathrm{logit}(p_0) + s t_i\\right) = \\frac{1}{1 + e^{-(\\ln(p_0/(1-p_0)) + s t_i)}} $$\n    为确保数值稳定性，$\\mu_{t_i}$ 被限制在区间 $[10^{-9}, 1 - 10^{-9}]$ 内。\n\n2.  **随机方差**：由遗传漂变引起的方差 $v_{t_i}$ 通过以下公式近似：\n    $$ v_{t_i} = \\mu_{t_i} (1 - \\mu_{t_i}) \\left(1 - e^{-t_i / (2 N_e)}\\right) $$\n\n3.  **似然模型选择**：读数计数的贝塔-二项模型和二项模型之间的选择取决于漂变引起的方差 $v_{t_i}$ 的大小。\n    - 如果 $v_{t_i} \\le 10^{-12}$，方差可忽略不计。这表示一个无漂变极限，读数分布由二项分布 $\\mathrm{Bin}(n_i, \\mu_{t_i})$ 建模。观测值 $i$ 的对数似然贡献为：\n      $$ \\ell_i = \\log \\binom{n_i}{k_i} + k_i \\log(\\mu_{t_i}) + (n_i - k_i) \\log(1 - \\mu_{t_i}) $$\n    - 如果 $v_{t_i} > 10^{-12}$，漂变是显著的。潜在的异质性 $p_{t_i}$ 被建模为一个服从贝塔分布的随机变量，$p_{t_i} \\sim \\mathrm{Beta}(\\alpha_{t_i}, \\beta_{t_i})$。参数 $\\alpha_{t_i}$ 和 $\\beta_{t_i}$ 通过将均值和方差与 $\\mu_{t_i}$ 和 $v_{t_i}$ 匹配来导出：\n      $$ \\alpha_{t_i} = \\mu_{t_i} \\left( \\frac{\\mu_{t_i} (1 - \\mu_{t_i})}{v_{t_i}} - 1 \\right), \\quad \\beta_{t_i} = (1 - \\mu_{t_i}) \\left( \\frac{\\mu_{t_i} (1 - \\mu_{t_i})}{v_{t_i}} - 1 \\right) $$\n      通过代入 $v_{t_i}$ 的表达式可以推导出一个更稳定的计算形式：\n      $$ \\phi_{t_i} = \\left(e^{t_i / (2 N_e)} - 1\\right)^{-1} $$\n      $$ \\alpha_{t_i} = \\mu_{t_i} \\phi_{t_i}, \\quad \\beta_{t_i} = (1-\\mu_{t_i}) \\phi_{t_i} $$\n      读数计数的边缘分布则是一个贝塔-二项分布。对数似然贡献为：\n      $$ \\ell_i = \\log \\binom{n_i}{k_i} + \\log B(k_i + \\alpha_{t_i}, n_i - k_i + \\beta_{t_i}) - \\log B(\\alpha_{t_i}, \\beta_{t_i}) $$\n      其中 $B(x, y)$ 是贝塔函数。在实践中，计算是使用对数伽马函数 $\\log \\Gamma(\\cdot)$ 进行的，因为 $\\log B(x,y) = \\log\\Gamma(x) + \\log\\Gamma(y) - \\log\\Gamma(x+y)$。\n\n4.  **最大似然估计**：我们进行网格搜索，以找到使总对数似然 $\\mathcal{L}(N_e, s)$ 最大化的参数。\n    - 对于备择模型 ($H_1$)，我们在指定的 $N_e \\in \\{30, 50, \\dots, 5000\\}$和 $s \\in [-0.05, 0.05]$ 网格上进行搜索，以找到产生最大对数似然 $\\ell_1^\\star$ 的 $(\\hat{N}_e, \\hat{s})$。\n    - 对于零假设模型 ($H_0$)，我们固定 $s=0$，仅在 $N_e$ 的网格上搜索，以找到在此约束下产生最大对数似然 $\\ell_0^\\star$ 的 $\\hat{N}_{e,0}$。\n\n5.  **似然比检验 (LRT)**：选择的证据通过 LRT 进行量化。检验统计量 $\\Lambda$ 计算如下：\n    $$ \\Lambda = 2 (\\ell_1^\\star - \\ell_0^\\star) $$\n    在零假设下，$\\Lambda$ 渐近服从自由度为 $1$ 的卡方分布，这对应于备择模型中一个额外的自由参数 ($s$)。然后根据这个 $\\chi^2_1$ 分布计算出 $p$ 值。\n\n这个完整的过程将应用于每个数据集，以获得备择模型下的估计值 $(\\hat{N}_e, \\hat{s})$、LRT 统计量 $\\Lambda$ 以及相关的 $p$ 值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import gammaln\nfrom scipy.stats import chi2\n\ndef solve():\n    \"\"\"\n    Main function to process all datasets and print the final results.\n    \"\"\"\n    \n    # Define the specified parameter grids for the search.\n    NE_GRID = np.array([30, 50, 80, 120, 200, 300, 500, 800, 1200, 2000, 3000, 4000, 5000])\n    S_GRID = np.linspace(-0.05, 0.05, 101)  # -0.05 to 0.05 with step 0.001\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Dataset A (neutral drift, increasing time)\n        {'p0': 0.5, 't': [10, 20, 30, 40], 'n': [300, 300, 300, 300], 'k': [150, 152, 148, 151]},\n        # Dataset B (positive selection signal)\n        {'p0': 0.6, 't': [20, 30, 40], 'n': [400, 400, 400], 'k': [288, 318, 332]},\n        # Dataset C (boundary case with very small drift time, negative selection signal)\n        {'p0': 0.4, 't': [1, 1, 2], 'n': [200, 200, 200], 'k': [80, 79, 77]},\n        # Dataset D (near-boundary frequency, neutral)\n        {'p0': 0.1, 't': [10, 30, 50], 'n': [500, 500, 500], 'k': [55, 44, 79]},\n    ]\n    \n    # Store results for all datasets\n    all_results = []\n    \n    for case in test_cases:\n        result = process_dataset(case, NE_GRID, S_GRID)\n        all_results.append([f\"{x:.3f}\" for x in result])\n        \n    # Format the final output as specified\n    print(f\"[{','.join(map(str, all_results))}]\".replace(\"'\", \"\"))\n\ndef calculate_log_likelihood(p0, ts, ns, ks, Ne, s):\n    \"\"\"\n    Calculates the total log-likelihood for a dataset given parameters.\n    \"\"\"\n    logit_p0 = np.log(p0 / (1 - p0))\n    total_log_likelihood = 0.0\n    \n    # Numerically stable calculation of log(binom(n,k))\n    log_binom_coeffs = gammaln(np.array(ns) + 1) - gammaln(np.array(ks) + 1) - gammaln(np.array(ns) - np.array(ks) + 1)\n\n    for i in range(len(ts)):\n        t, n, k = ts[i], ns[i], ks[i]\n        \n        # 1. Calculate deterministic mean frequency mu_t\n        mu_t = 1.0 / (1.0 + np.exp(-(logit_p0 + s * t)))\n        mu_t = np.clip(mu_t, 1e-9, 1.0 - 1e-9)\n        \n        # 2. Calculate stochastic variance v_t\n        drift_term = 1.0 - np.exp(-t / (2.0 * Ne))\n        v_t = mu_t * (1.0 - mu_t) * drift_term\n        \n        # 3. Select likelihood model based on variance\n        if v_t <= 1e-12:\n            # Binomial likelihood\n            log_likelihood_term = log_binom_coeffs[i] + k * np.log(mu_t) + (n - k) * np.log(1.0 - mu_t)\n        else:\n            # Beta-Binomial likelihood\n            phi = 1.0 / np.expm1(t / (2.0 * Ne))\n            alpha = mu_t * phi\n            beta = (1.0 - mu_t) * phi\n            \n            log_beta_num = gammaln(k + alpha) + gammaln(n - k + beta) - gammaln(n + alpha + beta)\n            log_beta_den = gammaln(alpha) + gammaln(beta) - gammaln(alpha + beta)\n            \n            log_likelihood_term = log_binom_coeffs[i] + log_beta_num - log_beta_den\n            \n        total_log_likelihood += log_likelihood_term\n        \n    return total_log_likelihood\n\ndef process_dataset(case, Ne_grid, s_grid):\n    \"\"\"\n    Performs MLE and LRT for a single dataset.\n    \"\"\"\n    p0, ts, ns, ks = case['p0'], case['t'], case['n'], case['k']\n    \n    # --- Alternative Model (H1) ---\n    max_ll_h1 = -np.inf\n    mle_Ne_h1 = None\n    mle_s_h1 = None\n    \n    for Ne in Ne_grid:\n        for s in s_grid:\n            ll = calculate_log_likelihood(p0, ts, ns, ks, Ne, s)\n            if ll > max_ll_h1:\n                max_ll_h1 = ll\n                mle_Ne_h1 = Ne\n                mle_s_h1 = s\n                \n    # --- Null Model (H0: s=0) ---\n    max_ll_h0 = -np.inf\n    mle_Ne_h0 = None\n    \n    for Ne in Ne_grid:\n        ll = calculate_log_likelihood(p0, ts, ns, ks, Ne, s=0.0)\n        if ll > max_ll_h0:\n            max_ll_h0 = ll\n            mle_Ne_h0 = Ne\n            \n    # --- Likelihood Ratio Test ---\n    # Ensure non-negative LRT statistic due to grid search and precision\n    lrt_statistic = max(0.0, 2 * (max_ll_h1 - max_ll_h0))\n    p_value = chi2.sf(lrt_statistic, df=1)\n    \n    return [float(mle_Ne_h1), float(mle_s_h1), lrt_statistic, p_value]\n\nsolve()\n```", "id": "2834548"}]}