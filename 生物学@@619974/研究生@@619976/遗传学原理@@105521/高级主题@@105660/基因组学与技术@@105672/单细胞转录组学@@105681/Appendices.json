{"hands_on_practices": [{"introduction": "在规划任何单细胞转录组学实验之前，一个最基本的问题就是：我们需要测序多少个细胞？这个问题在寻找稀有细胞类型时尤为关键。本练习将引导你运用基础的概率论知识，将这个生物学问题转化为一个统计模型，从而科学地确定所需的样本量，以确保实验设计的成功率。[@problem_id:2851229]", "problem": "一位研究人员正在设计一个单细胞RNA测序（scRNA-seq）实验，以检测异质组织中的一种稀有细胞类型。假设组织足够大，无放回抽样可以近似为有放回的独立抽样，并且每个捕获的细胞是稀有类型的概率为 $f$（其中 $0<f<1$），且事件之间相互独立。研究人员计划对 $n$ 个细胞进行测序，如果在测序的 $n$ 个细胞中至少捕获到一个稀有类型的细胞，则宣布实验成功。\n\n仅从伯努利试验和二项分布的基本定义出发，对检测事件进行建模，并推导使检测到至少一个稀有细胞的概率不低于 $0.95$ 的最小整数 $n$。请将您的最终答案表示为仅包含 $f$ 的单个闭式表达式。请勿代入任何数值。无需单位。", "solution": "首先必须对问题陈述进行严格验证。\n\n**步骤1：提取已知条件**\n- 捕获单个细胞的过程近似为一次独立的伯努利试验。\n- 捕获的细胞为稀有类型的概率用 $f$ 表示，其中 $0 < f < 1$。\n- 待测序的细胞总数为 $n$。\n- 实验成功定义为捕获到至少一个稀有细胞。\n- 条件是成功概率必须至少为 $0.95$。\n- 目标是推导满足此条件的最小整数 $n$。\n\n**步骤2：使用提取的已知条件进行验证**\n根据所需标准对问题进行评估。\n- **科学依据**：该问题使用二项分布对细胞抽样进行建模，这在统计基因组学和群体遗传学中是处理此类问题的标准且根本正确的方法。对于大群体而言，有放回抽样的假设是有效的近似，这对于组织样本是典型情况。\n- **良态问题**：问题陈述清晰。它提供了所有必要的参数（$f$ 和概率阈值 $0.95$），以确定 $n$ 的一个唯一的最小整数解。\n- **客观性**：问题使用精确、客观的数学语言进行表述。诸如“概率”、“至少一个”和“最小整数”等术语是明确无歧义的。\n\n该问题没有缺陷。它在科学上并非不成立、不完整、自相矛盾或非良态。这是一个标准的、可形式化的应用概率论问题，与其所述领域相关。\n\n**步骤3：结论与行动**\n问题有效。我们现在开始推导。\n\n任务是找到需要测序的最小整数细胞数 $n$，以确保检测到至少一个稀有细胞的概率不低于 $0.95$。稀有细胞的比例为 $f$。\n\n设随机变量 $X$ 表示在 $n$ 个细胞样本中检测到的稀有细胞数量。每次细胞捕获都是一次独立的伯努利试验，成功（检测到稀有细胞）的概率等于 $f$。因此，随机变量 $X$ 服从二项分布，记为 $X \\sim \\text{Binomial}(n, f)$。\n\n二项分布的概率质量函数由下式给出：\n$$P(X=k) = \\binom{n}{k} f^{k} (1-f)^{n-k}$$\n其中 $k$ 是成功的次数，可以是 $0$ 到 $n$ 之间的任意整数。\n\n问题中陈述的条件是，检测到至少一个稀有细胞的概率至少为 $0.95$。用数学方式表示为：\n$$P(X \\ge 1) \\ge 0.95$$\n\n使用互补事件（即检测到零个稀有细胞的事件，$P(X=0)$）来计算此概率更为直接。其关系为：\n$$P(X \\ge 1) = 1 - P(X=0)$$\n\n将此代入我们的不等式中，得到：\n$$1 - P(X=0) \\ge 0.95$$\n\n现在，我们使用二项概率质量函数并令 $k=0$ 来计算 $P(X=0)$：\n$$P(X=0) = \\binom{n}{0} f^{0} (1-f)^{n-0} = 1 \\cdot 1 \\cdot (1-f)^{n} = (1-f)^{n}$$\n\n将此结果代回不等式，得出：\n$$1 - (1-f)^{n} \\ge 0.95$$\n\n我们现在必须解这个关于 $n$ 的不等式。\n首先，重新整理各项，以分离出包含 $n$ 的表达式：\n$$-(1-f)^{n} \\ge 0.95 - 1$$\n$$-(1-f)^{n} \\ge -0.05$$\n两边同乘以 $-1$ 会使不等号反向：\n$$(1-f)^{n} \\le 0.05$$\n\n为了解出指数 $n$，我们对两边取自然对数。由于 $0 < f < 1$，指数的底数 $(1-f)$ 严格介于 $0$ 和 $1$ 之间。不等式两边的 $(1-f)^{n}$ 和 $0.05$ 均为正数，因此对数有良好定义。\n$$\\ln\\left((1-f)^{n}\\right) \\le \\ln(0.05)$$\n使用对数性质 $\\ln(a^b) = b\\ln(a)$，我们得到：\n$$n \\ln(1-f) \\le \\ln(0.05)$$\n\n为了分离出 $n$，我们必须除以 $\\ln(1-f)$。如前所述，因为 $0 < (1-f) < 1$，其自然对数 $\\ln(1-f)$ 是一个负数。不等式两边同时除以一个负数需要将不等号的方向反转：\n$$n \\ge \\frac{\\ln(0.05)}{\\ln(1-f)}$$\n\n问题要求满足此条件的最小*整数* $n$。$n$ 的解集是一个从 $\\frac{\\ln(0.05)}{\\ln(1-f)}$ 开始的连续区间。属于此集合的最小整数是此下界的向上取整。向上取整函数，记作 $\\lceil x \\rceil$，给出大于或等于 $x$ 的最小整数。\n\n因此，最小整数 $n$ 为：\n$$n_{\\min} = \\left\\lceil \\frac{\\ln(0.05)}{\\ln(1-f)} \\right\\rceil$$\n\n这就是关于稀有细胞比例 $f$ 的最小细胞数 $n$ 的最终闭式表达式。", "answer": "$$\n\\boxed{\n\\left\\lceil \\frac{\\ln(0.05)}{\\ln(1-f)} \\right\\rceil\n}\n$$", "id": "2851229"}, {"introduction": "获得原始测序数据后，下一步关键任务是进行质量控制（QC），以滤除那些可能由细胞死亡或实验操作失误导致的低质量数据。本练习模拟了一个核心的生物信息学工作流程：利用线粒体基因比例、检测到的基因数和UMI总数等标准QC指标，并通过贝叶斯决策理论来构建一个分类器。通过这个练习，你将学会如何基于数据本身，建立一个原则性的标准来区分高质量与低质量的细胞。[@problem_id:2851235]", "problem": "一项单细胞RNA测序 (scRNA-seq) 实验产生一个计数矩阵，其条目 $c_{ij}$ 表示在细胞 $i$ 中基因 $j$ 的唯一分子标识符 (UMI) 分子数量。对于每个细胞 $i$，基于单细胞转录组学的核心定义，定义三个质量控制指标：\n\n- 线粒体读取分数 $f_{\\mathrm{mt},i}$ 是比对到已注释线粒体基因集的UMI计数与细胞 $i$ 中总UMI计数的比率，即 $f_{\\mathrm{mt},i} = \\frac{c_{i,\\mathrm{mt}}}{c_{i,\\mathrm{tot}}}$，其中 $c_{i,\\mathrm{tot}} = \\sum_{j} c_{ij}$ 且 $c_{i,\\mathrm{mt}}$ 是对线粒体基因的UMI计数求和。\n- 检测到的基因数量 $g_i$ 是在细胞 $i$ 中至少有一个UMI的基因计数，即 $g_i = \\sum_{j} \\mathbf{1}\\{c_{ij} > 0\\}$。\n- 总UMI计数 $u_i$ 是 $u_i = \\sum_{j} c_{ij}$。\n\n一种常用的区分低质量细胞和高质量细胞的方法是，首先将这些指标汇总为一个标量分数，然后拟合一个 $2$ 组分混合模型。考虑以下标量汇总分数\n$$\ns_i = \\ln(1+u_i) + \\ln(1+g_i) - 4\\, f_{\\mathrm{mt},i}.\n$$\n假设在给定的数据集中，$\\{s_i\\}$ 的经验分布可以由一个双组分高斯混合模型很好地近似，该模型反映了两个潜在类别：低质量细胞 ($\\mathrm{L}$) 和高质量细胞 ($\\mathrm{H}$)。具体来说，假设 $s \\mid \\mathrm{L} \\sim \\mathcal{N}(\\mu_{\\mathrm{L}}, \\sigma^2)$ 和 $s \\mid \\mathrm{H} \\sim \\mathcal{N}(\\mu_{\\mathrm{H}}, \\sigma^2)$，两者方差相等，且先验类别概率分别为 $\\pi_{\\mathrm{L}}$ 和 $\\pi_{\\mathrm{H}} = 1 - \\pi_{\\mathrm{L}}$。对于一个特定的实验，设\n$$\n\\mu_{\\mathrm{L}} = 6.0,\\quad \\mu_{\\mathrm{H}} = 10.5,\\quad \\sigma = 0.8,\\quad \\pi_{\\mathrm{L}} = 0.35,\\quad \\pi_{\\mathrm{H}} = 0.65.\n$$\n\n仅从上述定义、高斯概率密度函数的形式以及在 $0$–$1$ 损失和相等错分成本下的贝叶斯法则出发，推导出一个关于 $s$ 的贝叶斯最优决策阈值 $t$。该阈值根据“如果 $s \\ge t$ 则分类为高质量，否则分类为低质量”的规则来区分低质量和高质量细胞。\n\n将 $t$ 的数值报告为一个纯数（无单位）。将答案四舍五入到 $4$ 位有效数字。", "solution": "该问题要求推导贝叶斯最优决策阈值 $t$，用于根据标量分数 $s$ 将细胞分类为低质量 ($\\mathrm{L}$) 或高质量 ($\\mathrm{H}$) 类别。决策规则是：如果一个细胞的分数 $s$ 大于或等于阈值 $t$，则将其分类为高质量，否则分类为低质量。此分析基于一个用于描述 $s$ 分布的双组分高斯混合模型。\n\n首先，我们必须对问题陈述进行验证。\n\n第一步：提取已知条件\n- 质量控制指标定义：\n  - 线粒体读取分数：$f_{\\mathrm{mt},i} = \\frac{c_{i,\\mathrm{mt}}}{c_{i,\\mathrm{tot}}}$，其中 $c_{i,\\mathrm{tot}} = \\sum_{j} c_{ij}$。\n  - 检测到的基因数量：$g_i = \\sum_{j} \\mathbf{1}\\{c_{ij} > 0\\}$。\n  - 总UMI计数：$u_i = \\sum_{j} c_{ij}$。\n- 标量汇总分数：$s_i = \\ln(1+u_i) + \\ln(1+g_i) - 4\\, f_{\\mathrm{mt},i}$。\n- 分数 $s$ 的潜在类条件分布：\n  - 低质量细胞：$s \\mid \\mathrm{L} \\sim \\mathcal{N}(\\mu_{\\mathrm{L}}, \\sigma^2)$。\n  - 高质量细胞：$s \\mid \\mathrm{H} \\sim \\mathcal{N}(\\mu_{\\mathrm{H}}, \\sigma^2)$。\n- 先验类别概率：$\\pi_{\\mathrm{L}}$ 和 $\\pi_{\\mathrm{H}} = 1 - \\pi_{\\mathrm{L}}$。\n- 具体参数值：\n  - $\\mu_{\\mathrm{L}} = 6.0$\n  - $\\mu_{\\mathrm{H}} = 10.5$\n  - $\\sigma = 0.8$\n  - $\\pi_{\\mathrm{L}} = 0.35$\n  - $\\pi_{\\mathrm{H}} = 0.65$\n- 决策准则：在 $0$–$1$ 损失函数和相等错分成本下的贝叶斯最优决策规则。\n- 决策规则结构：如果 $s \\ge t$ 则分类为 $\\mathrm{H}$，如果 $s < t$ 则分类为 $\\mathrm{L}$。\n\n第二步：使用提取的已知条件进行验证\n该问题具有科学依据，因为它使用了单细胞转录组学领域的标准质量控制指标和建模方法（高斯混合模型）。问题提法恰当，提供了所有必要的参数和一个基于统计决策理论的明确目标。语言客观而精确。问题是自洽的且在数学上是一致的。因此，该问题被认为是有效的。\n\n第三步：结论与行动\n问题有效。我们继续进行求解。\n\n目标是找到能使错分概率最小化的决策阈值 $t$。对于一个 $0$-$1$ 损失函数和相等的错分成本，贝叶斯最优决策规则是将观测值 $s$ 分配给具有最高后验概率的类别。决策规则是：如果 $P(\\mathrm{H}|s) > P(\\mathrm{L}|s)$，则分类为 $\\mathrm{H}$；如果 $P(\\mathrm{L}|s) > P(\\mathrm{H}|s)$，则分类为 $\\mathrm{L}$。决策阈值 $t$ 是后验概率相等的 $s$ 值：\n$$\nP(\\mathrm{H}|s=t) = P(\\mathrm{L}|s=t)\n$$\n根据贝叶斯法则，类别 $C \\in \\{\\mathrm{L}, \\mathrm{H}\\}$ 的后验概率由 $P(C|s) = \\frac{p(s|C)P(C)}{p(s)}$ 给出，其中 $p(s|C)$ 是类条件概率密度（似然），$P(C)$ 是该类别的先验概率，而 $p(s)$ 是 $s$ 的边际密度。在我们的记法中，$P(C)$ 对应于 $\\pi_C$。\n\n在 $s=t$ 处后验概率相等意味着：\n$$\n\\frac{p(t|\\mathrm{H})\\pi_{\\mathrm{H}}}{p(t)} = \\frac{p(t|\\mathrm{L})\\pi_{\\mathrm{L}}}{p(t)}\n$$\n边际密度 $p(t)$ 不为零并可以消去，得到由先验加权的似然之间的等式：\n$$\np(t|\\mathrm{H})\\pi_{\\mathrm{H}} = p(t|\\mathrm{L})\\pi_{\\mathrm{L}}\n$$\n问题陈述指出，类条件分布是方差相等的高斯分布：$s \\mid \\mathrm{H} \\sim \\mathcal{N}(\\mu_{\\mathrm{H}}, \\sigma^2)$ 和 $s \\mid \\mathrm{L} \\sim \\mathcal{N}(\\mu_{\\mathrm{L}}, \\sigma^2)$。高斯分布 $\\mathcal{N}(\\mu, \\sigma^2)$ 的概率密度函数 (PDF) 是 $p(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(x-\\mu)^2}{2\\sigma^2}\\right)$。将PDF代入我们的方程，得到：\n$$\n\\left(\\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(t-\\mu_{\\mathrm{H}})^2}{2\\sigma^2}\\right)\\right) \\pi_{\\mathrm{H}} = \\left(\\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left(-\\frac{(t-\\mu_{\\mathrm{L}})^2}{2\\sigma^2}\\right)\\right) \\pi_{\\mathrm{L}}\n$$\n归一化常数 $\\frac{1}{\\sqrt{2\\pi\\sigma^2}}$ 在等式两边相同，可以消去。我们得到：\n$$\n\\exp\\left(-\\frac{(t-\\mu_{\\mathrm{H}})^2}{2\\sigma^2}\\right) \\pi_{\\mathrm{H}} = \\exp\\left(-\\frac{(t-\\mu_{\\mathrm{L}})^2}{2\\sigma^2}\\right) \\pi_{\\mathrm{L}}\n$$\n为了求解 $t$，我们对等式两边取自然对数：\n$$\n\\ln\\left(\\exp\\left(-\\frac{(t-\\mu_{\\mathrm{H}})^2}{2\\sigma^2}\\right) \\pi_{\\mathrm{H}}\\right) = \\ln\\left(\\exp\\left(-\\frac{(t-\\mu_{\\mathrm{L}})^2}{2\\sigma^2}\\right) \\pi_{\\mathrm{L}}\\right)\n$$\n$$\n-\\frac{(t-\\mu_{\\mathrm{H}})^2}{2\\sigma^2} + \\ln(\\pi_{\\mathrm{H}}) = -\\frac{(t-\\mu_{\\mathrm{L}})^2}{2\\sigma^2} + \\ln(\\pi_{\\mathrm{L}})\n$$\n重新整理各项以分离出 $t$：\n$$\n\\frac{(t-\\mu_{\\mathrm{L}})^2 - (t-\\mu_{\\mathrm{H}})^2}{2\\sigma^2} = \\ln(\\pi_{\\mathrm{L}}) - \\ln(\\pi_{\\mathrm{H}})\n$$\n$$\n(t-\\mu_{\\mathrm{L}})^2 - (t-\\mu_{\\mathrm{H}})^2 = 2\\sigma^2 \\ln\\left(\\frac{\\pi_{\\mathrm{L}}}{\\pi_{\\mathrm{H}}}\\right)\n$$\n展开二次项：\n$$\n(t^2 - 2t\\mu_{\\mathrm{L}} + \\mu_{\\mathrm{L}}^2) - (t^2 - 2t\\mu_{\\mathrm{H}} + \\mu_{\\mathrm{H}}^2) = 2\\sigma^2 \\ln\\left(\\frac{\\pi_{\\mathrm{L}}}{\\pi_{\\mathrm{H}}}\\right)\n$$\n$$\n2t\\mu_{\\mathrm{H}} - 2t\\mu_{\\mathrm{L}} + \\mu_{\\mathrm{L}}^2 - \\mu_{\\mathrm{H}}^2 = 2\\sigma^2 \\ln\\left(\\frac{\\pi_{\\mathrm{L}}}{\\pi_{\\mathrm{H}}}\\right)\n$$\n$$\n2t(\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}}) = \\mu_{\\mathrm{H}}^2 - \\mu_{\\mathrm{L}}^2 + 2\\sigma^2 \\ln\\left(\\frac{\\pi_{\\mathrm{L}}}{\\pi_{\\mathrm{H}}}\\right)\n$$\n对平方差 $\\mu_{\\mathrm{H}}^2 - \\mu_{\\mathrm{L}}^2 = (\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}})(\\mu_{\\mathrm{H}} + \\mu_{\\mathrm{L}})$ 进行因式分解，然后除以 $2(\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}})$ (因为 $\\mu_{\\mathrm{H}} \\neq \\mu_{\\mathrm{L}})$：\n$$\nt = \\frac{(\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}})(\\mu_{\\mathrm{H}} + \\mu_{\\mathrm{L}})}{2(\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}})} + \\frac{2\\sigma^2}{2(\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}})} \\ln\\left(\\frac{\\pi_{\\mathrm{L}}}{\\pi_{\\mathrm{H}}}\\right)\n$$\n这可以简化为阈值的一般表达式：\n$$\nt = \\frac{\\mu_{\\mathrm{H}} + \\mu_{\\mathrm{L}}}{2} + \\frac{\\sigma^2}{\\mu_{\\mathrm{H}} - \\mu_{\\mathrm{L}}} \\ln\\left(\\frac{\\pi_{\\mathrm{L}}}{\\pi_{\\mathrm{H}}}\\right)\n$$\n现在，我们代入给定的数值：$\\mu_{\\mathrm{L}} = 6.0$，$\\mu_{\\mathrm{H}} = 10.5$，$\\sigma = 0.8$，$\\pi_{\\mathrm{L}} = 0.35$ 和 $\\pi_{\\mathrm{H}} = 0.65$。\n$$\nt = \\frac{10.5 + 6.0}{2} + \\frac{(0.8)^2}{10.5 - 6.0} \\ln\\left(\\frac{0.35}{0.65}\\right)\n$$\n$$\nt = \\frac{16.5}{2} + \\frac{0.64}{4.5} \\ln\\left(\\frac{7}{13}\\right)\n$$\n$$\nt = 8.25 + \\frac{0.64}{4.5} \\ln\\left(\\frac{7}{13}\\right)\n$$\n我们现在计算其数值：\n$$\n\\ln\\left(\\frac{7}{13}\\right) \\approx -0.6190392\n$$\n$$\n\\frac{0.64}{4.5} \\approx 0.1422222\n$$\n$$\nt \\approx 8.25 + (0.1422222) \\times (-0.6190392)\n$$\n$$\nt \\approx 8.25 - 0.0880354\n$$\n$$\nt \\approx 8.1619646\n$$\n问题要求答案四舍五入到 $4$ 位有效数字。\n$$\nt \\approx 8.162\n$$\n根据贝叶斯最优决策规则，最终得到的阈值 $t$ 是分数 $s$ 的边界值。任何 $s \\ge 8.162$ 的细胞将被分类为高质量，而任何 $s < 8.162$ 的细胞将被分类为低质量。", "answer": "$$\n\\boxed{8.162}\n$$", "id": "2851235"}, {"introduction": "单细胞数据不仅能揭示细胞类型的异质性，更能捕捉到动态的生物学过程。本练习将带你进入一个更高级的主题：如何从一系列静态的“快照”数据中推断细胞的动态行为。你将通过建立一个描述 $mRNA$ 丰度变化的常微分方程（$ODE$），并结合最优运输理论，来估计随时间变化的转录速率，这为理解细胞对刺激的反应等过程提供了定量的分析框架。[@problem_id:2851200]", "problem": "您的任务是使用一种基于动力学和输运原理的方法，在单细胞核糖核酸（RNA）快照实验中对刺激引起的转录响应进行建模。您将使用一个单基因模型，其中每个细胞的成熟信使RNA丰度（记为 $m(t)$）遵循一个常微分方程（ODE），该方程由时变转录（生产）速率 $\\alpha(t)$ 和一级降解速率 $\\delta$ 驱动。该模型为\n$$\n\\frac{dm}{dt} \\;=\\; \\alpha(t) \\;-\\; \\delta\\, m(t).\n$$\n给定在离散时间点 $t_0 < t_1 < \\dots < t_K$ 采集的带有时间戳的单细胞快照。在每个区间 $[t_k,t_{k+1}]$ 内，转录速率假定为常数，即对于 $t\\in[t_k,t_{k+1}]$，有 $\\alpha(t)=\\alpha_k$。您的目标是利用带有时间戳的快照，并遵循以下约束和原则，来估计分段常数转录速率的值 $\\alpha_k$。\n\n基础和假设：\n- 分子生物学中心法则和标准基因表达模型是上述ODE的理论基础，其中 $\\alpha(t)$ 捕捉启动子活性，$\\delta$ 捕捉转录本的一级衰变。\n- 一维确定性动力学和概率质量守恒意味着细胞群体通过关于 $m$ 的单调映射演化，因此两个时间点分布之间的一维最优输运（OT）耦合是匹配相等分位数的单调重排。\n- 对于每个区间 $[t_k,t_{k+1}]$，具有常数 $\\alpha_k$ 的ODE精确解与一个关于 $m$ 的递增仿射映射是一致的。\n\n数学和算法要求：\n- 仅基于离散时间点的 $m$ 分布进行计算，不进行细胞间的谱系追踪。使用一维最优输运（OT）通过匹配相等分位数来耦合 $m(t_k)$ 和 $m(t_{k+1})$。通过对样本排序来实现单调输运映射的数值计算，如果样本大小不同，则使用经验分位数的线性插值。\n- 结合ODE和OT配对，推导出一个在数学上一致的区间转录速率 $\\alpha_k$ 的估计量。该估计量应以 $t_k$ 和 $t_{k+1}$ 之间的配对值、已知的降解速率 $\\delta$ 以及时间步长 $\\Delta t_k = t_{k+1}-t_k$ 来表示。在由ODE解和单调耦合所隐含的无噪声情况下，您的估计量必须是精确的。\n- 所有时间单位为小时，$m$ 的单位为分子/细胞，$\\alpha$ 的单位为分子/细胞/小时，$\\delta$ 的单位为/小时。\n\n测试套件的数据生成协议（在您的程序内部实现，无随机性）：\n- 对每个测试用例，在 $t_0$ 时刻通过使用均匀间隔的分位数对伽马（Gamma）分布进行确定性采样，生成初始快照。对于一个形状参数为 $k$、尺度参数为 $\\theta$、样本大小为 $N$ 的伽马分布，定义分位数 $q_i = \\frac{i+\\tfrac{1}{2}}{N}$（其中 $i \\in \\{0,1,\\dots,N-1\\}$），并将 $m_i(t_0)$ 设为在 $q_i$ 处的逆累积分布函数值。这将产生一组确定性的、已排序的、不含随机噪声的初始值。\n- 对于每个具有常数 $\\alpha_k$ 的区间 $[t_k,t_{k+1}]$，使用该区间上ODE的精确闭式解，对每个细胞在ODE下进行确定性演化，从 $m_i(t_k)$ 得到 $m_i(t_{k+1})$。这确保了生成一个科学上合理、无噪声且遵循模型的基准真相。\n- 仅使用快照 $m(t_k)$ 和 $m(t_{k+1})$ 以及已知的 $\\delta$ 和 $\\Delta t_k$，通过一维OT耦合和您推导的估计量来估计 $\\alpha_k$。\n\n您的程序必须为每个测试用例计算所有区间的最大绝对估计误差，即\n$$\n\\max_{k \\in \\{0,\\dots,K-1\\}} \\left|\\widehat{\\alpha}_k - \\alpha_k\\right|,\n$$\n并将这些误差作为浮点数输出。误差的单位是分子/细胞/小时，但您的输出应只包含数值，不含单位字符串。\n\n测试套件（请精确实现以下三个用例）：\n- 用例1（一般动力学）：\n  - 时间: $t = [\\,0,\\,1,\\,2.5\\,]$，因此 $\\Delta t_0 = 1$ 且 $\\Delta t_1 = 1.5$。\n  - 降解速率: $\\delta = 0.2$ /小时。\n  - 真实转录速率: $\\alpha = [\\,2.0,\\,0.5\\,]$ 分子/细胞/小时。\n  - 初始分布: 形状参数 $k = 2.0$、尺度参数 $\\theta = 1.0$ 的伽马分布。\n  - 样本大小: $N = 200$ 个细胞。\n\n- 用例2（无降解边界情况）：\n  - 时间: $t = [\\,0,\\,0.5,\\,1.0,\\,1.5\\,]$，因此每个 $\\Delta t_k = 0.5$。\n  - 降解速率: $\\delta = 0$ /小时。\n  - 真实转录速率: $\\alpha = [\\,1.5,\\,1.5,\\,1.5\\,]$ 分子/细胞/小时。\n  - 初始分布: 形状参数 $k = 0.5$、尺度参数 $\\theta = 2.0$ 的伽马分布。\n  - 样本大小: $N = 200$ 个细胞。\n\n- 用例3（短区间和快速衰变）：\n  - 时间: $t = [\\,0,\\,0.05,\\,0.2\\,]$，因此 $\\Delta t_0 = 0.05$ 且 $\\Delta t_1 = 0.15$。\n  - 降解速率: $\\delta = 1.0$ /小时。\n  - 真实转录速率: $\\alpha = [\\,0.0,\\,4.0\\,]$ 分子/细胞/小时。\n  - 初始分布: 形状参数 $k = 5.0$、尺度参数 $\\theta = 0.5$ 的伽马分布。\n  - 样本大小: $N = 200$ 个细胞。\n\n最终输出规格：\n- 您的程序应生成一行输出，其中包含一个用方括号括起来的逗号分隔列表，例如 $[x_1,x_2,x_3]$，其中 $x_j$ 是测试用例 $j$ 的最大绝对估计误差。\n- 每个 $x_j$ 都必须是浮点数。为了可读性，您可以四舍五入到固定的小数位数，但输出必须只包含一行数值列表，不含任何其他文本。", "solution": "所提出的问题在科学和数学上是有效的。该问题定义明确、自成体系，并基于基因表达动力学和计算单细胞生物学的既定原则。它提出了一个从快照数据中推导和实现转录速率估计量的非平凡任务。我将继续提供一个完整的解决方案。\n\n问题的核心是为一系列时间区间 $[t_k, t_{k+1}]$ 估计分段常数转录速率 $\\alpha_k$。该估计必须利用两个关键信息：控制信使RNA（mRNA）丰度 $m(t)$ 的常微分方程（ODE），以及用于耦合不同时间点细胞群体的一维最优输运（OT）原理。\n\n首先，我们分析单个区间 $[t_k, t_{k+1}]$ 内的控制ODE，其中转录速率 $\\alpha(t)$ 是一个常数 $\\alpha_k$，降解速率为 $\\delta$：\n$$\n\\frac{dm(t)}{dt} = \\alpha_k - \\delta m(t)\n$$\n这是一个标准的一阶线性ODE。我们使用初始条件 $m(t_k)$ 来求解它，以找到在 $t_{k+1}$ 时的状态。设 $\\Delta t_k = t_{k+1} - t_k$。解可以通过使用积分因子 $e^{\\delta t}$ 得到。\n\n对于 $\\delta > 0$ 的情况：\n$$\nm(t_{k+1}) = m(t_k) e^{-\\delta \\Delta t_k} + \\frac{\\alpha_k}{\\delta} (1 - e^{-\\delta \\Delta t_k})\n$$\n该方程表明，在时间 $t_{k+1}$ 时的mRNA丰度是时间 $t_k$ 时丰度的一个递增仿射函数。这种确定性演化意味着，只要没有新细胞引入，细胞按其mRNA丰度的排序随时间保持不变。\n\n对于没有降解的特殊情况，$\\delta = 0$，ODE简化为 $\\frac{dm}{dt} = \\alpha_k$。其解为：\n$$\nm(t_{k+1}) = m(t_k) + \\alpha_k \\Delta t_k\n$$\n这也是一个关于 $m(t_k)$ 的递增仿射函数。\n\n接下来，我们引入一维最优输运的原理。问题陈述指出，$t_k$ 和 $t_{k+1}$ 处 $m$ 的分布之间的耦合是匹配相等分位数的单调重排。对于两个大小相同为 $N$ 的经验分布 $\\{m_i(t_k)\\}_{i=0}^{N-1}$ 和 $\\{m_j(t_{k+1})\\}_{j=0}^{N-1}$，这对应于对两组测量值进行排序，并将第一组排序后数据的第 $i$ 个值与第二组排序后数据的第 $i$ 个值配对。由于数据生成协议确保了 $t_{k+1}$ 时的群体是 $t_k$ 时群体的确定性演化，因此群体大小相同，如果我们保持细胞的索引，它们就已经被正确排序。因此，细胞 $i$ 的OT配对就是 $(m_i(t_k), m_i(t_{k+1}))$。\n\n由于ODE解对每个细胞 $i$ 都成立，它也必须对整个群体的平均值成立。对ODE解取期望（或样本均值，记为 $\\bar{m}$）可以得到区间开始和结束时平均丰度之间的关系。\n\n对于 $\\delta > 0$，我们有：\n$$\n\\bar{m}(t_{k+1}) = \\bar{m}(t_k) e^{-\\delta \\Delta t_k} + \\frac{\\alpha_k}{\\delta} (1 - e^{-\\delta \\Delta t_k})\n$$\n我们可以重新整理这个方程来求解 $\\alpha_k$，从而得到我们的估计量 $\\widehat{\\alpha}_k$。这是一个稳健的方法，因为它对所有细胞进行平均，从而减少了在真实世界场景中潜在噪声的影响。\n$$\n\\bar{m}(t_{k+1}) - \\bar{m}(t_k) e^{-\\delta \\Delta t_k} = \\frac{\\alpha_k}{\\delta} (1 - e^{-\\delta \\Delta t_k})\n$$\n$$\n\\widehat{\\alpha}_k = \\frac{\\delta \\left( \\bar{m}(t_{k+1}) - \\bar{m}(t_k) e^{-\\delta \\Delta t_k} \\right)}{1 - e^{-\\delta \\Delta t_k}}\n$$\n对于 $\\delta = 0$，均值之间的关系是：\n$$\n\\bar{m}(t_{k+1}) = \\bar{m}(t_k) + \\alpha_k \\Delta t_k\n$$\n求解 $\\alpha_k$ 得到零降解情况的估计量：\n$$\n\\widehat{\\alpha}_k = \\frac{\\bar{m}(t_{k+1}) - \\bar{m}(t_k)}{\\Delta t_k}\n$$\n该估计量也可以通过对通用公式使用洛必达法则（L'Hôpital's rule）取极限 $\\delta \\to 0$ 得到。\n\n计算流程如下：\n1.  对每个测试用例，定义参数：时间点 $\\{t_k\\}$、降解速率 $\\delta$、真实转录速率 $\\{\\alpha_k\\}$、初始伽马分布参数 ($k, \\theta$) 和样本大小 $N$。\n2.  通过在均匀间隔的分位数 $q_i = \\frac{i+1/2}{N}$（其中 $i \\in \\{0, \\dots, N-1\\}$）上对指定的伽马分布的逆累积分布函数（PPF）进行确定性采样，生成大小为N的初始群体快照 $m(t_0)$。\n3.  遍历时间区间 $[t_k, t_{k+1}]$（其中 $k = 0, \\dots, K-1$）。\n    a.  设当前快照为 $m(t_k)$。使用此区间的真实转录速率 $\\alpha_k$ 和已知的降解速率 $\\delta$，通过精确的ODE解，将每个细胞的mRNA计数确定性地演化到 $t_{k+1}$。这会生成快照 $m(t_{k+1})$。\n    b.  仅使用快照 $m(t_k)$和$m(t_{k+1})$、时间步长 $\\Delta t_k$ 和 $\\delta$，使用基于样本均值推导出的估计量计算估计的转录速率 $\\widehat{\\alpha}_k$。\n    c.  计算绝对误差 $|\\widehat{\\alpha}_k - \\alpha_k|$。\n4.  遍历所有区间后，找出该测试用例的最大绝对误差。\n5.  对所有测试用例重复此过程并报告最大误差。\n\n由于数据生成过程遵循的数学模型与推导估计量所用的模型完全相同，因此估计的速率 $\\widehat{\\alpha}_k$ 应与真实速率 $\\alpha_k$ 在浮点精度范围内相同。因此，最终误差预计将接近于零。这可以作为对所推导方法的严格验证。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import gamma\n\ndef solve():\n    \"\"\"\n    Solves for the maximum absolute estimation error of transcription rates\n    for a set of test cases based on a 1D ODE model of gene expression.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"times\": [0.0, 1.0, 2.5],\n            \"delta\": 0.2,\n            \"alphas\": [2.0, 0.5],\n            \"gamma_k\": 2.0,\n            \"gamma_theta\": 1.0,\n            \"N\": 200,\n        },\n        {\n            \"times\": [0.0, 0.5, 1.0, 1.5],\n            \"delta\": 0.0,\n            \"alphas\": [1.5, 1.5, 1.5],\n            \"gamma_k\": 0.5,\n            \"gamma_theta\": 2.0,\n            \"N\": 200,\n        },\n        {\n            \"times\": [0.0, 0.05, 0.2],\n            \"delta\": 1.0,\n            \"alphas\": [0.0, 4.0],\n            \"gamma_k\": 5.0,\n            \"gamma_theta\": 0.5,\n            \"N\": 200,\n        },\n    ]\n\n    def propagate_snapshot(m_initial, alpha, delta, dt):\n        \"\"\"\n        Propagates an mRNA distribution snapshot forward in time using the exact ODE solution.\n        \"\"\"\n        if delta > 0:\n            exp_term = np.exp(-delta * dt)\n            m_final = m_initial * exp_term + (alpha / delta) * (1 - exp_term)\n        else: # delta == 0\n            m_final = m_initial + alpha * dt\n        return m_final\n\n    def estimate_alpha(m_initial, m_final, delta, dt):\n        \"\"\"\n        Estimates the transcription rate alpha from two snapshots.\n        \"\"\"\n        mean_initial = np.mean(m_initial)\n        mean_final = np.mean(m_final)\n\n        if delta > 0:\n            exp_term = np.exp(-delta * dt)\n            # To avoid potential division by zero if 1-exp_term is too small,\n            # although not strictly necessary for the given test cases.\n            if 1 - exp_term == 0:\n                 # Fallback to the delta=0 case via Taylor expansion\n                 return (mean_final - mean_initial) / dt\n            \n            estimated_alpha = (delta * (mean_final - mean_initial * exp_term)) / (1 - exp_term)\n        else: # delta == 0\n            estimated_alpha = (mean_final - mean_initial) / dt\n        \n        return estimated_alpha\n\n    max_errors = []\n\n    for case in test_cases:\n        t_points = case[\"times\"]\n        delta_rate = case[\"delta\"]\n        alpha_rates = case[\"alphas\"]\n        gamma_k = case[\"gamma_k\"]\n        gamma_theta = case[\"gamma_theta\"]\n        N = case[\"N\"]\n\n        # Generate initial snapshot at t_0\n        quantiles = (np.arange(N) + 0.5) / N\n        m_current = gamma.ppf(quantiles, a=gamma_k, scale=gamma_theta)\n        \n        errors_for_case = []\n        \n        # Iterate through each time interval\n        for i in range(len(alpha_rates)):\n            t_k = t_points[i]\n            t_k_plus_1 = t_points[i+1]\n            dt = t_k_plus_1 - t_k\n            true_alpha = alpha_rates[i]\n            \n            # 1. Generate ground truth data for the next snapshot\n            m_next = propagate_snapshot(m_current, true_alpha, delta_rate, dt)\n            \n            # 2. Estimate alpha_k from the two snapshots m_current and m_next\n            estimated_alpha = estimate_alpha(m_current, m_next, delta_rate, dt)\n            \n            # 3. Calculate and store the estimation error\n            error = np.abs(estimated_alpha - true_alpha)\n            errors_for_case.append(error)\n            \n            # 4. Update the current snapshot for the next iteration\n            m_current = m_next\n            \n        max_errors.append(np.max(errors_for_case))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{err:.16f}' for err in max_errors)}]\")\n\nsolve()\n```", "id": "2851200"}]}