{"hands_on_practices": [{"introduction": "在构建系统发育树之前，我们必须首先理解数据中哪些信息对于解析进化关系是真正有用的。在最大简约法（Maximum Parsimony）的框架下，并非序列比对中的所有位点都具有同等价值；只有所谓的“简约性信息位点”（parsimony-informative sites）才能提供区分不同树拓扑结构所需的证据。本练习 [@problem_id:2837245] 旨在通过动手实践，训练您应用简约性信息位点的严格定义，这是一项评估系统发育数据质量和理解简约法推断逻辑的基础技能。", "problem": "给定一个包含 $4$ 个分类单元（标记为 A、B、C 和 D）在 $20$ 个位点上的脱氧核糖核酸 (DNA) 字符序列比对。在最大简约法 (MP) 原则下的系统发育推断中，如果一个位点的性状状态分布可以通过推导出不同的最小状态改变数来区分不同的无根树拓扑结构，则该位点被称为简约信息位点。对于具有四种可能核苷酸的 DNA 字符，假设根据第一性原理进行如下解释：一个位点是简约信息位点，当且仅当至少存在 $2$ 种不同的核苷酸，并且这 $2$ 种核苷酸中至少有 $2$ 种各自在至少 $2$ 个分类单元中出现。由 N 表示的模糊字符和由 - 表示的空位被视作缺失数据，不计入统计；一个位点仅在明确的观测值本身满足所述标准时，才被计为简约信息位点。\n\n请根据上述原则，用您自己的话定义什么是简约信息位点，然后计算以下序列比对中简约信息位点的总数。每个位点以 A/B/C/D 的模式列出：\n\n- 位点 $1$： A A A A\n- 位点 $2$： A A A G\n- 位点 $3$： A A G G\n- 位点 $4$： A G A G\n- 位点 $5$： A G G A\n- 位点 $6$： A C G T\n- 位点 $7$： C C C C\n- 位点 $8$： T T C C\n- 位点 $9$： G G G T\n- 位点 $10$： G T G T\n- 位点 $11$： T G G G\n- 位点 $12$： C C G G\n- 位点 $13$： C G C G\n- 位点 $14$： C G G C\n- 位点 $15$： A A C C\n- 位点 $16$： A C C C\n- 位点 $17$： A N G G\n- 位点 $18$： N N A A\n- 位点 $19$： - A - A\n- 位点 $20$： T C T C\n\n作为最终答案，仅报告简约信息位点的数量。无需四舍五入；以整数形式提供结果，不带单位。", "solution": "在尝试任何解答之前，需要对问题陈述进行验证。\n\n**步骤 1：提取的已知条件**\n- 分类单元数：$4$ (A, B, C, D)。\n- 位点数：$20$。\n- 字符类型：脱氧核糖核酸 (DNA) 核苷酸 (A, C, G, T)。\n- 特定字符的处理：'N' (模糊) 和 '-' (空位) 被视为缺失数据，并从字符计数中排除。\n- 简约信息位点的定义：一个位点是简约信息位点，当且仅当基于明确的字符同时满足两个条件：\n    1. 至少存在 $2$ 种不同的核苷酸。\n    2. 这些不同的核苷酸中，至少有 $2$ 种各自在至少 $2$ 个分类单元中出现。\n- 数据：提供了一个 $4 \\times 20$ 的 DNA 序列比对。\n\n**步骤 2：验证结论**\n该问题具有科学依据，因为它涉及系统发育分析中简约信息位点的基本概念，这是计算生物学和遗传学的核心课题。所提供的定义是对 $4$ 个分类单元分析中一个位点成为简约信息位点的充分必要条件的正确且正式的陈述。该问题提法明确，包含了所有必要的数据和清晰、无歧义的评估标准，确保了唯一解的存在。它是客观的，没有任何科学或逻辑上的缺陷。因此，该问题是**有效的**。\n\n接下来进行求解。\n\n根据所提供的原则，简约信息位点是序列比对中的一列，它提供证据以支持某一个无根系统发育树拓扑结构优于其他拓扑结构。对于 $4$ 个分类单元，存在 $3$ 种可能的无根树。一个位点只有在支持特定的分类单元分组时才能区分这些树。这要求一种性状分布，其中至少有两个分类单元共享一种性状状态，另外至少有两个分类单元共享另一种不同的性状状态。因此，其模式为 `x-x-y-y` 形式。任何其他模式，如 `x-x-x-x` (恒定)、`x-x-x-y` (独征) 或 `w-x-y-z` (全不相同)，在所有 $3$ 种可能的树拓扑上都将需要相同的最小改变数，因此对于选择最简约的树是无信息的。给定的规则是这一原则的形式化：一个位点要有信息量，它必须包含至少两种不同的性状状态，并且其中至少有两种状态必须至少出现两次。\n\n我们根据这个标准分析 $20$ 个位点中的每一个，忽略任何 `N` 或 `-` 字符。\n\n设 $S_i$ 是位点 $i$ 的字符集合。设 $C(S_i)$ 是 $S_i$ 中的唯一字符集合。设 $N(c, S_i)$ 是字符 $c$ 在位点 $S_i$ 中的计数。一个位点是简约信息位点，如果：\n1. $|C(S_i)| \\ge 2$\n2. 满足 $N(c, S_i) \\ge 2$ 的字符 $c \\in C(S_i)$ 的数量本身至少为 $2$。\n\n- **恒定位点：** 模式 `x-x-x-x`。\n  - 位点 $1$ (A,A,A,A)：$|C(S_1)| = 1$。不满足条件 1。非信息位点。\n  - 位点 $7$ (C,C,C,C)：$|C(S_7)| = 1$。不满足条件 1。非信息位点。\n\n- **独征位点：** 模式 `x-x-x-y`。\n  - 位点 $2$ (A,A,A,G)：$C(S_2) = \\{\\text{A, G}\\}$，所以 $|C(S_2)| = 2$。$N(\\text{A}, S_2)=3$， $N(\\text{G}, S_2)=1$。只有一个字符 ('A') 的计数 $\\ge 2$。不满足条件 2。非信息位点。\n  - 位点 $9$ (G,G,G,T)：$C(S_9) = \\{\\text{G, T}\\}$，$N(\\text{G}, S_9)=3$， $N(\\text{T}, S_9)=1$。不满足条件 2。非信息位点。\n  - 位点 $11$ (T,G,G,G)：$C(S_{11}) = \\{\\text{T, G}\\}$，$N(\\text{T}, S_{11})=1$， $N(\\text{G}, S_{11})=3$。不满足条件 2。非信息位点。\n  - 位点 $16$ (A,C,C,C)：$C(S_{16}) = \\{\\text{A, C}\\}$，$N(\\text{A}, S_{16})=1$， $N(\\text{C}, S_{16})=3$。不满足条件 2。非信息位点。\n\n- **多状态独有位点：** 模式 `w-x-y-z`。\n  - 位点 $6$ (A,C,G,T)：$C(S_6) = \\{\\text{A, C, G, T}\\}$，所以 $|C(S_6)| = 4$。$N(\\text{A})=1, N(\\text{C})=1, N(\\text{G})=1, N(\\text{T})=1$。没有字符的计数 $\\ge 2$。不满足条件 2。非信息位点。\n\n- **含缺失数据的位点：**\n  - 位点 $17$ (A,N,G,G)：明确的字符是 (A,G,G)。$C(S_{17}) = \\{\\text{A, G}\\}$。$N(\\text{A})=1, N(\\text{G})=2$。只有一个字符 ('G') 的计数 $\\ge 2$。不满足条件 2。非信息位点。\n  - 位点 $18$ (N,N,A,A)：明确的字符是 (A,A)。$C(S_{18}) = \\{\\text{A}\\}$，所以 $|C(S_{18})| = 1$。不满足条件 1。非信息位点。\n  - 位点 $19$ (-,A,-,A)：明确的字符是 (A,A)。$C(S_{19}) = \\{\\text{A}\\}$，所以 $|C(S_{19})| = 1$。不满足条件 1。非信息位点。\n\n- **简约信息位点：** 模式 `x-x-y-y`。\n  - 这些是唯一满足两个条件的位点。$|C(S_i)|=2$，并且对于 $C(S_i)$ 中的两个字符 $c_1, c_2$，都有 $N(c_1, S_i) = 2$ 和 $N(c_2, S_i) = 2$。\n  - 位点 $3$ (A,A,G,G)：$N(\\text{A})=2, N(\\text{G})=2$。**信息位点。**\n  - 位点 $4$ (A,G,A,G)：$N(\\text{A})=2, N(\\text{G})=2$。**信息位点。**\n  - 位点 $5$ (A,G,G,A)：$N(\\text{A})=2, N(\\text{G})=2$。**信息位点。**\n  - 位点 $8$ (T,T,C,C)：$N(\\text{T})=2, N(\\text{C})=2$。**信息位点。**\n  - 位点 $10$ (G,T,G,T)：$N(\\text{G})=2, N(\\text{T})=2$。**信息位点。**\n  - 位点 $12$ (C,C,G,G)：$N(\\text{C})=2, N(\\text{G})=2$。**信息位点。**\n  - 位点 $13$ (C,G,C,G)：$N(\\text{C})=2, N(\\text{G})=2$。**信息位点。**\n  - 位点 $14$ (C,G,G,C)：$N(\\text{C})=2, N(\\text{G})=2$。**信息位点。**\n  - 位点 $15$ (A,A,C,C)：$N(\\text{A})=2, N(\\text{C})=2$。**信息位点。**\n  - 位点 $20$ (T,C,T,C)：$N(\\text{T})=2, N(\\text{C})=2$。**信息位点。**\n\n简约信息位点的总数是最后一类位点的数量。共有 $10$ 个这样的位点。", "answer": "$$\\boxed{10}$$", "id": "2837245"}, {"introduction": "有了可用的数据后，我们如何通过算法构建一棵树呢？邻接法（Neighbor-Joining, NJ）是一种强大且广泛应用的距离法，它能高效地从一个分类单元间的成对距离矩阵中构建出树的拓扑结构。本练习 [@problem_id:2837181] 将引导您逐步完成其迭代过程，从而揭示邻接法的内在机制：选择最近的“邻居”进行连接，计算它们各自的枝长，并更新距离矩阵，直至整棵树的结构被完全解析。这项实践对于理解距离法如何将原始的差异性数据转化为具体的进化假说至关重要。", "problem": "给定五个分类单元 $A$、 $B$、 $C$、 $D$ 和 $E$ 之间的一个加性对称距离矩阵。成对距离 $d_{ij}$（其中 $d_{ii}=0$）如下：\n- $d_{AB} = 2$, $d_{AC} = 6.2$, $d_{AD} = 6.4$, $d_{AE} = 6.4$,\n- $d_{BC} = 6.2$, $d_{BD} = 6.4$, $d_{BE} = 6.4$,\n- $d_{CD} = 2.6$, $d_{CE} = 2.6$, $d_{DE} = 0.8$.\n\n仅使用加性树度量的基本定义和邻接法 (NJ) 的规范算法步骤，重建无根系统发育树。在每次迭代中，计算用于选择要连接的配对的标准，确定被连接的配对，计算它们到新的连接节点的分支长度，并精确更新缩减后的距离矩阵。持续此过程直到剩下最后三个分类单元的步骤，并计算连接到最后内部节点的末端分支长度。\n\n如果在邻接法选择标准中出现平局，选择原始距离 $d_{ij}$ 较小的配对来打破平局；如果仍然平局，则选择标签字典序靠前的配对。\n\n重建的无根树的总树长（定义为所有分支长度的总和）的精确值是多少，表示为单个实数？请勿四舍五入您的答案；提供不带单位的精确值。", "solution": "问题陈述已经过验证。给定的是五个分类单元的集合 $\\{A, B, C, D, E\\}$ 以及一个对称的加性距离矩阵。该问题具有科学依据、提法明确、客观且自成体系，需要直接应用邻接法(NJ)算法。该过程是确定性的，有明确的平局打破规则。因此，可以构建一个有效的解决方案。\n\n邻接法算法通过迭代进行，每一步将分类单元的数量减少一个，直到只剩下三个。得到的无根树的总长度是其所有分支长度的总和。\n\n对于 $N=5$ 个分类单元，初始距离矩阵 $D$ 如下：\n$$\nD_0 = \n\\begin{pmatrix}\n & A & B & C & D & E \\\\\nA & 0 & 2 & 6.2 & 6.4 & 6.4 \\\\\nB & 2 & 0 & 6.2 & 6.4 & 6.4 \\\\\nC & 6.2 & 6.2 & 0 & 2.6 & 2.6 \\\\\nD & 6.4 & 6.4 & 2.6 & 0 & 0.8 \\\\\nE & 6.4 & 6.4 & 2.6 & 0.8 & 0 \n\\end{pmatrix}\n$$\n\n**步骤1：对 $N=5$ 个分类单元进行迭代。**\n\n首先，我们计算每个分类单元 $i$ 的净分化度 $r_i$，定义为其到所有其他分类单元的距离之和：\n$r_i = \\sum_{j \\in \\{A,B,C,D,E\\}} d_{ij}$。\n$$\nr_A = 2 + 6.2 + 6.4 + 6.4 = 21.0 \\\\\nr_B = 2 + 6.2 + 6.4 + 6.4 = 21.0 \\\\\nr_C = 6.2 + 6.2 + 2.6 + 2.6 = 17.6 \\\\\nr_D = 6.4 + 6.4 + 2.6 + 0.8 = 16.2 \\\\\nr_E = 6.4 + 6.4 + 2.6 + 0.8 = 16.2\n$$\n\n接下来，我们计算邻接法标准矩阵 $Q$，其中 $Q_{ij} = (N-2)d_{ij} - r_i - r_j$。对于 $N=5$，即为 $Q_{ij} = 3 d_{ij} - r_i - r_j$。\n$$\nQ_{AB} = 3(2) - 21.0 - 21.0 = 6.0 - 42.0 = -36.0 \\\\\nQ_{AC} = 3(6.2) - 21.0 - 17.6 = 18.6 - 38.6 = -20.0 \\\\\nQ_{AD} = 3(6.4) - 21.0 - 16.2 = 19.2 - 37.2 = -18.0 \\\\\nQ_{AE} = 3(6.4) - 21.0 - 16.2 = 19.2 - 37.2 = -18.0 \\\\\nQ_{BC} = 3(6.2) - 21.0 - 17.6 = 18.6 - 38.6 = -20.0 \\\\\nQ_{BD} = 3(6.4) - 21.0 - 16.2 = 19.2 - 37.2 = -18.0 \\\\\nQ_{BE} = 3(6.4) - 21.0 - 16.2 = 19.2 - 37.2 = -18.0 \\\\\nQ_{CD} = 3(2.6) - 17.6 - 16.2 = 7.8 - 33.8 = -26.0 \\\\\nQ_{CE} = 3(2.6) - 17.6 - 16.2 = 7.8 - 33.8 = -26.0 \\\\\nQ_{DE} = 3(0.8) - 16.2 - 16.2 = 2.4 - 32.4 = -30.0\n$$\n$Q$ 矩阵中的最小值是 $Q_{AB} = -36.0$。因此，分类单元 $A$ 和 $B$ 是相邻的，并将被连接到一个新节点，我们将其命名为 $U$。\n\n从 $A$ 和 $B$ 到新节点 $U$ 的分支长度计算如下：\n$d_{iU} = \\frac{1}{2}d_{ij} + \\frac{1}{2(N-2)}(r_i-r_j)$。\n$$\nd_{AU} = \\frac{1}{2}d_{AB} + \\frac{1}{2(5-2)}(r_A - r_B) = \\frac{1}{2}(2) + \\frac{1}{6}(21.0 - 21.0) = 1.0 \\\\\nd_{BU} = d_{AB} - d_{AU} = 2 - 1.0 = 1.0\n$$\n\n我们现在为分类单元 $\\{U, C, D, E\\}$ 定义一个新的距离矩阵 $D_1$。从 $U$ 到任何其他分类单元 $k$ 的距离计算为 $d_{Uk} = \\frac{1}{2}(d_{Ak} + d_{Bk} - d_{AB})$。\n$$\nd_{UC} = \\frac{1}{2}(d_{AC} + d_{BC} - d_{AB}) = \\frac{1}{2}(6.2 + 6.2 - 2) = \\frac{10.4}{2} = 5.2 \\\\\nd_{UD} = \\frac{1}{2}(d_{AD} + d_{BD} - d_{AB}) = \\frac{1}{2}(6.4 + 6.4 - 2) = \\frac{10.8}{2} = 5.4 \\\\\nd_{UE} = \\frac{1}{2}(d_{AE} + d_{BE} - d_{AB}) = \\frac{1}{2}(6.4 + 6.4 - 2) = \\frac{10.8}{2} = 5.4\n$$\n对于 $N=4$ 个分类单元，缩减后的距离矩阵是：\n$$\nD_1 = \n\\begin{pmatrix}\n & U & C & D & E \\\\\nU & 0 & 5.2 & 5.4 & 5.4 \\\\\nC & 5.2 & 0 & 2.6 & 2.6 \\\\\nD & 5.4 & 2.6 & 0 & 0.8 \\\\\nE & 5.4 & 2.6 & 0.8 & 0 \n\\end{pmatrix}\n$$\n\n**步骤2：对 $N=4$ 个分类单元进行迭代。**\n\n我们对分类单元 $\\{U, C, D, E\\}$ 重复此过程。\n首先，计算净分化度 $r'_i$：\n$$\nr'_U = 5.2 + 5.4 + 5.4 = 16.0 \\\\\nr'_C = 5.2 + 2.6 + 2.6 = 10.4 \\\\\nr'_D = 5.4 + 2.6 + 0.8 = 8.8 \\\\\nr'_E = 5.4 + 2.6 + 0.8 = 8.8\n$$\n接下来，计算 $Q'$ 矩阵，其中 $Q'_{ij} = (N-2)d_{ij} - r'_i - r'_j$。对于 $N=4$，即为 $Q'_{ij} = 2 d_{ij} - r'_i - r'_j$。\n$$\nQ'_{UC} = 2(5.2) - 16.0 - 10.4 = 10.4 - 26.4 = -16.0 \\\\\nQ'_{UD} = 2(5.4) - 16.0 - 8.8 = 10.8 - 24.8 = -14.0 \\\\\nQ'_{UE} = 2(5.4) - 16.0 - 8.8 = 10.8 - 24.8 = -14.0 \\\\\nQ'_{CD} = 2(2.6) - 10.4 - 8.8 = 5.2 - 19.2 = -14.0 \\\\\nQ'_{CE} = 2(2.6) - 10.4 - 8.8 = 5.2 - 19.2 = -14.0 \\\\\nQ'_{DE} = 2(0.8) - 8.8 - 8.8 = 1.6 - 17.6 = -16.0\n$$\n最小值为 $-16.0$，配对 $(U,C)$ 和 $(D,E)$ 在此值上出现平局。问题指定通过选择原始距离 $d_{ij}$ 较小的配对来打破平局。\n我们比较 $d_{UC} = 5.2$ 和 $d_{DE} = 0.8$。由于 $0.8 < 5.2$，我们选择配对 $(D,E)$ 连接到一个新节点，命名为 $V$。\n\n从 $D$ 和 $E$ 到 $V$ 的分支长度为：\n$$\nd_{DV} = \\frac{1}{2}d_{DE} + \\frac{1}{2(4-2)}(r'_D - r'_E) = \\frac{1}{2}(0.8) + \\frac{1}{4}(8.8 - 8.8) = 0.4 \\\\\nd_{EV} = d_{DE} - d_{DV} = 0.8 - 0.4 = 0.4\n$$\n我们为分类单元 $\\{U, C, V\\}$ 定义一个新的距离矩阵 $D_2$。涉及 $V$ 的距离为：\n$$\nd_{VU} = \\frac{1}{2}(d_{DU} + d_{EU} - d_{DE}) = \\frac{1}{2}(5.4 + 5.4 - 0.8) = \\frac{10.0}{2} = 5.0 \\\\\nd_{VC} = \\frac{1}{2}(d_{DC} + d_{EC} - d_{DE}) = \\frac{1}{2}(2.6 + 2.6 - 0.8) = \\frac{4.4}{2} = 2.2\n$$\n\n**步骤3：对 $N=3$ 个分类单元的最后一步。**\n\n算法在剩下三个分类单元 $\\{U, C, V\\}$ 时终止。它们的成对距离定义了围绕一个中心内部节点（命名为 $W$）的最终无根结构。\n$$\nD_2 =\n\\begin{pmatrix}\n & U & C & V \\\\\nU & 0 & 5.2 & 5.0 \\\\\nC & 5.2 & 0 & 2.2 \\\\\nV & 5.0 & 2.2 & 0 \n\\end{pmatrix}\n$$\n连接到节点 $W$ 的三个末端分支的长度由公式 $d_{iW} = \\frac{1}{2}(d_{ij} + d_{ik} - d_{jk})$ 给出。\n$$\nd_{UW} = \\frac{1}{2}(d_{UC} + d_{UV} - d_{CV}) = \\frac{1}{2}(5.2 + 5.0 - 2.2) = \\frac{8.0}{2} = 4.0 \\\\\nd_{CW} = \\frac{1}{2}(d_{CU} + d_{CV} - d_{UV}) = \\frac{1}{2}(5.2 + 2.2 - 5.0) = \\frac{2.4}{2} = 1.2 \\\\\nd_{VW} = \\frac{1}{2}(d_{VU} + d_{VC} - d_{UC}) = \\frac{1}{2}(5.0 + 2.2 - 5.2) = \\frac{2.0}{2} = 1.0\n$$\n\n**步骤4：总树长计算。**\n\n无根树由末端分支和内部分支组成。全部分支的长度集合是：\n-   到叶节点的末端分支：$d_{AU}=1.0$, $d_{BU}=1.0$, $d_{CW}=1.2$, $d_{DV}=0.4$, $d_{EV}=0.4$。\n-   内部分支：$d_{UW}=4.0$, $d_{VW}=1.0$。\n\n总树长 $L$ 是所有分支长度的总和：\n$$\nL = d_{AU} + d_{BU} + d_{CW} + d_{DV} + d_{EV} + d_{UW} + d_{VW}\n$$\n$$\nL = 1.0 + 1.0 + 1.2 + 0.4 + 0.4 + 4.0 + 1.0\n$$\n$$\nL = 9.0\n$$\n重建的无根树的总长度精确为 $9.0$。", "answer": "$$\\boxed{9}$$", "id": "2837181"}, {"introduction": "构建系统发育树只是战斗的一半，确保其准确性才是最终目标。长枝吸引（Long-Branch Attraction, LBA）是系统发育推断中一个臭名昭著的系统性误差，它会导致快速演化的支系因趋同演化而非共同祖先被错误地聚在一起。这项高级实践 [@problem_id:2837197] 呈现了一个典型的长枝吸引场景，挑战您像一位真正的系统发育学家那样思考，评估从增加类群取样到选择复杂模型等一系列策略，以减轻这种普遍存在的人为偏差。掌握这种推理能力对于批判性地评估系统发育结果和设计稳健的分析至关重要。", "problem": "一个亲缘基因组数据集包含一个由 $4$ 个分类单元组成的内群 $\\{A,B,C,D\\}$ 和一个单独的外群 $O$。该内群的真实有根历史是这样的：内群的无根拓扑结构为 $((A,B),(C,D))$，且完整树的根位于连接到内群的分支上（即，外群 $O$ 确实是内群的姐妹群）。序列演化遵循核苷酸上的连续时间马尔可夫链（CTMC），每个位点的瞬时速率是时间可逆的，但位点是从一个混合模型中抽取的，其中一部分（比例为 $f$）位点的平衡频率有强烈的腺嘌呤-胸腺嘧啶（AT）偏好，而其余部分（比例为 $(1-f)$）的平衡频率有强烈的鸟嘌呤-胞嘧啶（GC）偏好。各位点的速率根据形状参数为 $\\alpha$ 的 Gamma 分布而变化，并且在一些末端分支上存在谱系特异性的速率加速。真实树上的分支长度（每个位点的期望替换数）如下：连接到 $A$、$B$ 和 $D$ 的末端分支长度各自约为 $0.10$，连接到 $C$ 的末端分支长度约为 $1.20$，连接到 $O$ 的末端分支长度约为 $1.50$，内群内的短内部支各自约为 $0.05$。假设没有插入-缺失事件，且序列比对是准确的。\n\n请你基于基本原理来推理一个高度分化的外群如何能诱发长支吸引（LBA）并导致内群的错误定根，以及如何减轻这种风险。你的推理必须基于：(i) 序列在树上演化遵循CTMC，(ii) 位点模式的概率如何依赖于路径长度和速率/生成过程，(iii) 最大简约法（MP）最小化推断出的总变化数，而最大似然法（ML）和贝叶斯方法在显式模型下最大化数据的概率，以及 (iv) 统计一致性要求模型具有充分性。除这些基础外，不要假设任何特定的快捷公式。\n\n选择所有与以上原则和情景最一致的陈述。\n\nA. 在这些分支长度条件下，MP 预计会因 LBA 而错误地将 $O$ 与 $C$ 归为一组，从而错误地将根置于内群之中。\n\nB. 拟合一个位点同质的通用时间可逆（GTR）+ Gamma 模型（即带有 Gamma 分布的位点间速率变化的通用时间可逆模型），并简单地增加比对长度 $L$，即使外群仍然高度分化，也能够消除定根偏差。\n\nC. 用2个关系适度更近、共同构成根的外群（每个末端分支长度约$0.40$–$0.60$）来替换单个分化的外群 $O$，可以降低LBA诱发的错误定根风险。\n\nD. 添加3个额外的分类单元，将通往 $C$ 的长支细分为更短的片段（不改变总路径长度），可以降低 $C$ 被虚假地吸引到 $O$ 的概率。\n\nE. 当长支上的趋同性组分偏好导致虚假相似性时，使用一个基于平衡频率谱的位点异质性混合模型（例如，狄利克雷过程“CAT”模型）可以减轻错误定根。\n\nF. 将核苷酸重编码为嘌呤与嘧啶（purine/pyrimidine (RY) coding）并过滤掉演化最快的位点，可以减少但未必能消除由长外群分支引起的LBA。\n\nG. 选择一个更远的单个外群（末端分支长度约$2.50$）会增强定根信号，并被推荐用于对抗LBA。\n\nH. 使用一个不可逆替换模型或一个带有适当校准的松散分子钟，如果模型拟合充分，可以减少定根位置对外群的依赖，从而减轻由外群引起的错误定根。\n\n选择所有适用项。", "solution": "提交问题陈述以供验证。\n\n### 第1步：提取已知条件\n-   **内群**: 一组 $4$ 个分类单元，记为 $\\{A,B,C,D\\}$。\n-   **外群**: 一个单独的分类单元，$O$。\n-   **真实有根历史**: 外群 $O$ 是内群的姐妹群。\n-   **真实内群无根拓扑**: $((A,B),(C,D))$。\n-   **演化模型**: 用于核苷酸序列的连续时间马尔可夫链（CTMC）。\n-   **模型属性**:\n    -   瞬时速率是时间可逆的。\n    -   位点特异性的组分异质性：一个混合模型，其中比例为 $f$ 的位点具有AT偏好的平衡频率，比例为 $(1-f)$ 的位点具有GC偏好的平衡频率。\n    -   位点间速率异质性：速率从形状参数为 $\\alpha$ 的Gamma分布中抽取。\n    -   存在谱系特异性的速率加速。\n-   **分支长度（每个位点的期望替换数）**:\n    -   连接到 $A$ 的末端分支：$\\approx 0.10$\n    -   连接到 $B$ 的末端分支：$\\approx 0.10$\n    -   连接到 $D$ 的末端分支：$\\approx 0.10$\n    -   连接到 $C$ 的末端分支：$\\approx 1.20$\n    -   连接到 $O$ 的末端分支：$\\approx 1.50$\n    -   内群内部支：$\\approx 0.05$\n-   **假设**: 无插入或缺失；比对准确。\n-   **任务**: 评估关于由分化外群引起的的长支吸引（LBA）、由此导致的内群错误定根以及缓解策略的陈述。推理必须基于系统发育学的基本原理。\n\n### 第2步：使用提取的已知条件进行验证\n审查问题陈述的有效性。\n-   **科学依据**: 该设定描述了系统发育推断中一个经典且已被充分理解的人为现象，称为长支吸引（LBA）。该场景涉及特定的分支长度、一个复杂但标准的替换模型（带有位点和谱系异质性的CTMC）以及一个外群，这在科学上是合理的，并且是计算生物学和演化生物学中经常研究的问题。\n-   **适定性**: 这个问题是适定的。它提出了一个具体但复杂的系统发育场景，并要求在这些条件下对几个关于推断的命题进行评估。其任务是应用系统发育理论的基本原理来评估这些陈述的有效性，这是一个清晰而有意义的目标。\n-   **客观性**: 该问题以系统发育学领域通用的精确、客观和技术性语言陈述。核心设定中没有主观性或模糊性。\n-   **完整性和一致性**: 所提供的信息足以对所讨论的现象进行推理。分支长度创造了一个“Felsenstein区”场景，对真实演化过程的描述足够详细，可以与选项中提到的简化模型进行比较。内部没有矛盾。\n-   **现实性**: 该场景是现实的。这样的分支长度和模型复杂性在真实的亲缘基因组数据集中很常见。\n\n### 第3步：结论与行动\n问题陈述在科学上是合理的、适定的且内部一致。它为严格分析系统发育方法提供了有效的基础。因此，将推导出一个完整的解决方案。\n\n### 推导与选项分析\n\n问题的核心是长支吸引（LBA）。LBA是系统发育推断中的一种系统性误差，其中两个或多个长支（经历了大量演化的谱系）被错误地推断为有紧密的亲缘关系。这是因为，在漫长的演化时间内，同一位点上累积多次替换的可能性变得很高。一个非常长的分支末端的性状状态的概率分布会趋近于替换过程的平衡频率分布，而与祖先状态无关。因此，两个不相关的长支独立演化出相同性状状态（非同源相似）的几率高于预期。系统发育方法，尤其是在模型错误指定下不一致的方法，如最大简约法（MP），会把这种趋同演化误认为是共享祖先（共源性状）。\n\n在这个问题中，我们有两个长支：通往分类单元 $C$ 的末端分支（长度 $\\approx 1.20$）和通往外群 $O$ 的末端分支（长度 $\\approx 1.50$）。真实的树是 $(O, ((A,B),(C,D)))$。在这个真实的拓扑结构中，$C$ 和 $O$ 的亲缘关系很远。LBA会倾向于将 $C$ 和 $O$ 归为一类，产生一个不正确的无根树，例如 $((A,B),D,(C,O))$。当使用 $O$ 作为外群对这个无根树进行定根时，内群的根会被错误地放置在将 $D$ 与 $(A,B)$ 分支分开的支上，从而得到一个不正确的有根内群拓扑 $((A,B),D)$，而不是真实的 $((A,B),(C,D))$。\n\n现在，我们基于这些基本原理来评估每个陈述。\n\n**A. 在这些分支长度条件下，MP 预计会因 LBA 而错误地将 $O$ 与 $C$ 归为一组，从而错误地将根置于内群之中。**\nMP寻找使性状状态总变化数最小化的树。考虑一个位点，其中分类单元 $C$ 和 $O$ 共享一个在 $A$、$B$ 和 $D$ 中不存在的状态。真实的树需要至少两次平行变化（一次在通往 $C$ 的分支上，一次在通往 $O$ 的分支上）来解释这个模式。而将 $(C,O)$ 归组的错误LBA树，仅需在 $(C,O)$ 进化枝的祖先分支上发生一次变化即可解释此模式。因为通往 $C$ 和 $O$ 的分支很长，具有这种误导性趋同状态的位点数量很高。MP没有考虑长支上发生多次替换的高可能性，因此会系统性地偏向于将 $C$ 和 $O$ 归组的错误拓扑。如上所述，将外群 $O$ 与内群分类单元 $C$ 归组直接导致内群根的错误放置。\n**结论：正确。**\n\n**B. 拟合一个位点同质的通用时间可逆（GTR）+ Gamma 模型，并简单地增加比对长度 $L$，即使外群仍然高度分化，也能够消除定根偏差。**\n真实的数据生成过程被描述为在组分属性上位点异质的：一部分（比例为 $f$）位点是AT偏好的，而 $(1-f)$ 是GC偏好的。所提议的GTR+Gamma模型虽然考虑了速率异质性（Gamma部分），但在其替换过程上是位点同质的，意味着它假设所有位点都使用单一的一组平衡碱基频率和单一的速率矩阵。这构成了模型错误指定。在模型错误指定的情况下，像最大似然法（ML）这样的统计方法不能保证是统计上一致的。增加数据量（比对长度 $L$）将导致该方法高度自信地收敛到在错误指定模型下最拟合数据的树，而在LBA情景中，这棵树可能（且通常）是错误的树。如果不对此组分异质性进行建模，它可能会驱动 $C$ 和 $O$ 的虚假聚类，而更多的数据只会增强对这个错误结论的支持。\n**结论：不正确。**\n\n**C. 用2个关系适度更近、共同构成根的外群（每个末端分支长度约$0.40$–$0.60$）来替换单个分化的外群 $O$，可以降低LBA诱发的错误定根风险。**\n这个策略是一种“打断长支”的形式。通往外群 $O$ 的单个长支（长度 $\\approx 1.50$）是吸引力的主要原因之一。通过用两个分化程度较低的外群替换它，我们用几个较短的分支替换了一个非常长的分支。这减少了在通往外群的路径上替换饱和的位点数量，从而减少了随机噪音和与另一个长支（$C$）发生趋同的可能性。这是对抗LBA的一种标准且有效的策略。\n**结论：正确。**\n\n**D. 添加3个额外的分类单元，将通往 $C$ 的长支细分为更短的片段（不改变总路径长度），可以降低 $C$ 被虚假地吸引到 $O$ 的概率。**\n这是缓解LBA的另一个主要策略，通常称为“改善分类单元抽样”。通往 $C$ 的长支（长度 $\\approx 1.20$）是吸引力的另一个来源。添加位于该谱系上的分类单元，将这个长支分解为一系列较短的内部和末端分支。这提供了更多的系统发育约束。一个以前会被解释为发生在单个长支上某个地方的变化，现在被定位到新的、较短的片段之一。这使得方法错误地推断出包含 $C$ 的更密集抽样的进化枝与遥远的外群 $O$ 之间存在虚假关系的可能性大大降低。\n**结论：正确。**\n\n**E. 当长支上的趋同性组分偏好导致虚假相似性时，使用一个基于平衡频率谱的位点异质性混合模型（例如，狄利克雷过程“CAT”模型）可以减轻错误定根。**\n问题陈述中说明，真实的生成过程涉及跨位点的组分谱的混合。一个假设单一组分谱的简单模型是错误指定的。位点异质性混合模型（如CAT模型，它近似于狄利克雷过程的谱混合）是专门为处理这种组分异质性而设计的。它允许不同的位点在不同的平衡频率下演化。如果 $C$ 和 $O$ 由于它们各自长支上共享的GC偏好而表现出趋同演化，位点同质模型会将其误解为共享历史。而一个类CAT模型可以正确地将在某些位点上过多的共享G/C状态归因于这些位点上共享的组分偏好，而不是共同祖先。通过更准确地对演化过程建模，这些模型对由组分趋同引起的LBA更具鲁棒性。\n**结论：正确。**\n\n**F. 将核苷酸重编码为嘌呤与嘧啶（purine/pyrimidine (RY) coding）并过滤掉演化最快的位点，可以减少但未必能消除由长外群分支引起的LBA。**\nLBA是由多次替换导致的非同源相似性驱动的。这种替换在演化最快的位点上累积得最快。过滤掉这些快速位点可以移除大部分误导性信号，但代价是失去部分总的系统发育信息。RY编码将4态的核苷酸数据转换为2态数据（嘌呤R，嘧啶Y）。因为颠换（嘌呤 $\\leftrightarrow$ 嘧啶的变化）通常比转换更罕见，所以2态的RY编码数据演化得更慢，在更长的演化距离上才会饱和。这可以保留在原始核苷酸数据中被多次替换所抹去的更深层的系统发育信号。这两种都是已知的用于缓解LBA的启发式方法。然而，它们并非万灵药；它们会丢弃信息，并且在极端情况下可能不足以解决问题。因此，“可以减少但未必能消除”的说法是准确的。\n**结论：正确。**\n\n**G. 选择一个更远的单个外群（末端分支长度约$2.50$）会增强定根信号，并被推荐用于对抗LBA。**\n这与应该做的恰恰相反。外群分支已经很长了（长度 $\\approx 1.50$），是导致LBA的原因之一。将其长度增加到 $\\approx 2.50$ 会使其更加分化，增加与另一个长支（$C$）发生随机序列趋同的可能性。这将加剧而不是对抗LBA，并使定根更加不可靠。理想的外群是与内群关系最近的亲属，因为这在确保其位于内群之外的同时，最小化了外群的分支长度。\n**结论：不正确。**\n\n**H. 使用一个不可逆替换模型或一个带有适当校准的松散分子钟，如果模型拟合充分，可以减少定根位置对外群的依赖，从而减轻由外群引起的错误定根。**\n对于一个时间可逆的CTMC模型，数据在无根树上的似然值与根的位置无关。因此，仅从内群数据中无法推断根的位置；需要一个外群。如果演化过程不是时间可逆的，这种对称性就被打破了。数据的似然值将依赖于根的位置，从而原则上允许从内群序列中推断根。同样，松散分子钟模型假设演化速率在树上是变化的。如果经过适当校准或建构，该模型可以通过找到最能解释在时钟模型假设下观察到的分支长度分布的根位置来确定根的位置。这两种方法都可以为根的位置提供独立于外群的证据，从而减轻由涉及问题外群的LBA引起的定根错误。短语“如果模型拟合充分”是至关重要的，因为在不合理的情况下使用这些更复杂的模型可能会导致其他错误。\n**结论：正确。**", "answer": "$$\\boxed{ACDEFH}$$", "id": "2837197"}]}