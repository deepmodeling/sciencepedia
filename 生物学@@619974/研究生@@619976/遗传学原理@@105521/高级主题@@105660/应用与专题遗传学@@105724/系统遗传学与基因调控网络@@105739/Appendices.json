{"hands_on_practices": [{"introduction": "基因表达的调控始于转录因子（TF）与启动子区域的物理结合。量化这一结合事件的概率对于构建整个基因调控网络的模型至关重要。本练习将引导你从第一性原理出发，推导启动子被占据的概率，从而将转录因子的宏观浓度 $[TF]$ 及其结合亲和力（由解离常数 $K_d$ 表示）与单个基因的微观状态联系起来 [@problem_id:2854817]。", "problem": "在基因调控网络中，一个单基因模块受一个启动子控制，该启动子拥有一个用于转录因子 (TF) 的经典结合位点。假设存在快速时间尺度分离，其中转录因子的结合和解离相对于转录起始处于准平衡状态，且占据概率等于结合位点的平衡占据分数。使用解离常数的化学定义，从第一性原理推导占据率。\n\n令 $[X]$ 表示物种 $X$ 的摩尔浓度，其中 $X \\in \\{\\mathrm{TF}, P, \\mathrm{TF}\\!\\cdot\\!P\\}$。假设一个简单的 $1{:}1$ 结合模型，其反应为 $\\mathrm{TF} + P \\rightleftharpoons \\mathrm{TF}\\!\\cdot\\!P$，解离常数 $K_d$ 定义为 $K_d = \\dfrac{[\\mathrm{TF}][P]}{[\\mathrm{TF}\\!\\cdot\\!P]}$。占据分数（启动子被结合的概率）定义为 $P_{\\mathrm{bound}} = \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[P] + [\\mathrm{TF}\\!\\cdot\\!P]}$。假设总启动子浓度相对于核内转录因子浓度非常小，因此 $[\\mathrm{TF}]$ 实际上是游离的核内浓度。\n\n从 $K_d$ 的定义和启动子的守恒关系出发，在 $1{:}1$ 结合模型下，推导一个用 $K_d$ 和 $[\\mathrm{TF}]$ 表示 $P_{\\mathrm{bound}}$ 的表达式，并对 $K_d = 20\\,\\mathrm{nM}$ 和 $[\\mathrm{TF}] = 30\\,\\mathrm{nM}$ 进行数值计算。将最终概率表示为一个精确分数。", "solution": "在尝试任何解答之前，需对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 系统是一个单基因模块，其启动子带有一个转录因子 (TF) 的结合位点。\n- 结合反应 $\\mathrm{TF} + P \\rightleftharpoons \\mathrm{TF}\\!\\cdot\\!P$ 假定为准平衡状态。\n- 占据概率 $P_{\\mathrm{bound}}$ 等于结合位点的平衡占据分数。\n- 解离常数定义为 $K_d = \\dfrac{[\\mathrm{TF}][P]}{[\\mathrm{TF}\\!\\cdot\\!P]}$。\n- 占据分数定义为 $P_{\\mathrm{bound}} = \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[P] + [\\mathrm{TF}\\!\\cdot\\!P]}$。分母 $[P] + [\\mathrm{TF}\\!\\cdot\\!P]$ 代表总启动子浓度，即 $[P]_{\\mathrm{total}}$。\n- 做出一个近似：总启动子浓度与总转录因子浓度相比可以忽略不计，因此游离转录因子浓度 $[\\mathrm{TF}]$ 实际上是恒定的，等于核内总 TF 浓度。\n- 任务是推导 $P_{\\mathrm{bound}}$ 作为 $K_d$ 和 $[\\mathrm{TF}]$ 函数的表达式。\n- 提供了用于计算的数值：$K_d = 20\\,\\mathrm{nM}$ 和 $[\\mathrm{TF}] = 30\\,\\mathrm{nM}$。\n- 最终数值答案必须是精确分数。\n\n**步骤2：使用提取的已知条件进行验证**\n评估问题的有效性。\n- **科学依据**：该问题在化学动力学和分子生物学原理方面有充分的依据。所描述的模型是转录因子-启动子结合的标准简化表示，通常称为单一位点的 Hill-Langmuir 等温线。准平衡和 TF 耗尽可忽略不计的假设在此背景下是常见且有效的近似。\n- **适定性**：该问题是适定的。它提供了清晰的定义、足够的数据和一个明确的目标。可以确定一个唯一且有意义的解。\n- **客观性**：问题使用了客观和精确的科学语言陈述。\n\n该问题没有科学不健全、模糊不清和内部矛盾之处。所有已知条件都是一致的，足以推导出解。\n\n**步骤3：结论和行动**\n该问题被判定为**有效**。将推导解答。\n\n推导从提供的第一性原理开始：解离常数 $K_d$ 的定义和占据分数 $P_{\\mathrm{bound}}$ 的定义。目标是用 $[\\mathrm{TF}]$ 和 $K_d$ 表示 $P_{\\mathrm{bound}}$。\n\n解离常数由下式给出：\n$$K_d = \\dfrac{[\\mathrm{TF}][P]}{[\\mathrm{TF}\\!\\cdot\\!P]}$$\n此处，$[P]$ 是游离（未结合）启动子的浓度，$[\\mathrm{TF}\\!\\cdot\\!P]$ 是结合复合物的浓度。我们可以重排此方程，用结合复合物和其他参数表示游离启动子的浓度：\n$$[P] = K_d \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[\\mathrm{TF}]}$$\n\n占据分数代表启动子被结合的概率，定义为结合启动子的浓度与总启动子浓度的比值：\n$$P_{\\mathrm{bound}} = \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[P]_{\\mathrm{total}}} = \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[P] + [\\mathrm{TF}\\!\\cdot\\!P]}$$\n\n现在，我们将重排后的 $K_d$ 方程中 $[P]$ 的表达式代入 $P_{\\mathrm{bound}}$ 方程的分母中：\n$$P_{\\mathrm{bound}} = \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{\\left(K_d \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[\\mathrm{TF}]}\\right) + [\\mathrm{TF}\\!\\cdot\\!P]}$$\n\n项 $[\\mathrm{TF}\\!\\cdot\\!P]$ 出现在分子以及分母的两项中。假设转录因子浓度不为零，这意味着存在非零的结合可能性，因此 $[\\mathrm{TF}\\!\\cdot\\!P]$ 不为零，可以从分母中作为公因式提取出来并消去：\n$$P_{\\mathrm{bound}} = \\dfrac{[\\mathrm{TF}\\!\\cdot\\!P]}{[\\mathrm{TF}\\!\\cdot\\!P] \\left(\\dfrac{K_d}{[\\mathrm{TF}]} + 1\\right)} = \\dfrac{1}{\\dfrac{K_d}{[\\mathrm{TF}]} + 1}$$\n\n为了简化这个繁分数，我们对分母中的各项进行通分：\n$$P_{\\mathrm{bound}} = \\dfrac{1}{\\dfrac{K_d + [\\mathrm{TF}]}{[\\mathrm{TF}]}}$$\n\n最后，将分母颠倒，得到用 $K_d$ 和 $[\\mathrm{TF}]$ 表示 $P_{\\mathrm{bound}}$ 的表达式：\n$$P_{\\mathrm{bound}} = \\dfrac{[\\mathrm{TF}]}{K_d + [\\mathrm{TF}]}$$\n这就是所要求的解析表达式。这是 Hill 系数为 $1$ 的 Hill-Langmuir 方程的一个特例。\n\n问题现在要求对给定值 $K_d = 20\\,\\mathrm{nM}$ 和 $[\\mathrm{TF}] = 30\\,\\mathrm{nM}$ 进行数值计算。浓度单位（$\\mathrm{nM}$）是一致的，将会被消去，从而得到一个无量纲的概率，正如所预期的。\n$$P_{\\mathrm{bound}} = \\dfrac{30\\,\\mathrm{nM}}{20\\,\\mathrm{nM} + 30\\,\\mathrm{nM}} = \\dfrac{30}{50}$$\n\n按照要求，将此结果表示为其最简形式的精确分数：\n$$P_{\\mathrm{bound}} = \\dfrac{3}{5}$$\n这意味着在给定条件下，在任何时刻，该启动子的结合位点有 $60\\%$ 的概率被转录因子占据。", "answer": "$$\\boxed{\\frac{3}{5}}$$", "id": "2854817"}, {"introduction": "简单的网络基序（network motifs）能够产生出乎意料的复杂动态行为。在此实践中，我们将探索最基本的基序之一：正向自身调控，即一个蛋白质激活其自身的转录。通过使用非线性常微分方程对该系统进行建模，你将发现这个简单的反馈回路如何能够产生双稳态（bistability）——一种具有两个稳定状态的系统属性，这是细胞决策和记忆的关键机制 [@problem_id:2854806]。", "problem": "在基因调控网络 (GRN) 中，一个单基因正向自动调节模块可以被建模为一个关于分子浓度 $x \\ge 0$ 的一维常微分方程 (ODE)，该方程平衡了物质的合成与一级降解。合成速率由一个捕获协同转录因子结合的希尔激活函数表示，而降解是线性的。其动力学由下式给出：\n$$\n\\frac{dx}{dt} \\;=\\; f(x) \\;=\\; \\alpha \\,\\frac{x^{n}}{K^{n} + x^{n}} \\;-\\; \\beta\\, x,\n$$\n其中 $\\alpha > 0$ 是最大生产速率，$\\beta > 0$ 是降解速率常数，$K > 0$ 是激活解离常数，$n \\ge 1$ 是希尔系数。一个不动点 $x^\\ast$ 满足 $f(x^\\ast) = 0$ 且 $x^\\ast \\ge 0$。线性稳定性由 $f'(x^\\ast)$ 的符号决定：如果 $f'(x^\\ast) < 0$，则不动点是稳定的；如果 $f'(x^\\ast) > 0$，则不动点是不稳定的。如果在域 $x \\ge 0$ 中至少存在两个不同的稳定不动点，则存在多重稳定态。\n\n任务：编写一个完整的程序，对下面测试套件中的每一组参数，计算：\n- 不动点 $x^\\ast \\ge 0$ 的总数，以及\n- 是否存在多重稳定态（即，是否存在至少两个不同的稳定不动点）。\n\n您必须纯粹从数学角度处理此问题，仅使用上述模型。在域 $x \\in [0, X_{\\max}]$ 上使用数值求根法，其中有限的 $X_{\\max}$ 由您根据参数系统地选择，以确保找到所有非负不动点。用于稳定性分析的导数可以通过解析或数值方法计算，但最终的分类必须正确。在整个过程中，所有计算都是无量纲的；不需要物理单位。\n\n测试套件（每个案例是一个元组 $(\\alpha,\\beta,K,n)$，所有数字和参数如上定义）：\n- 案例 1：$(\\alpha,\\beta,K,n) = (50, 1, 5, 3)$。\n- 案例 2：$(\\alpha,\\beta,K,n) = (2, 1, 5, 1)$。\n- 案例 3：$(\\alpha,\\beta,K,n) = (10, 1, 5, 1)$。\n- 案例 4：$(\\alpha,\\beta,K,n) = (5, 1, 5, 3)$。\n- 案例 5：$(\\alpha,\\beta,K,n) = (20, 1, 3, 4)$。\n\n最终输出格式：您的程序应生成单行输出，包含五个案例的结果，格式为逗号分隔的列表的列表。每个内部列表包含两项：不动点总数的整数值和一个指示是否存在多重稳定态的布尔值。确切的格式要求是\n\"[ [m1,b1], [m2,b2], [m3,b3], [m4,b4], [m5,b5] ]\"\n但不含任何空格，例如：\n\"[[m1,b1],[m2,b2],[m3,b3],[m4,b4],[m5,b5]]\"\n其中每个 $m_i$ 是一个整数，每个 $b_i$ 是 True 或 False。请将每个 $m_i$ 和 $b_i$ 替换为计算出的结果。", "solution": "该问题要求分析由以下常微分方程描述的单基因正向自动调节系统的不动点及其稳定性：\n$$\n\\frac{dx}{dt} \\;=\\; f(x) \\;=\\; \\alpha \\,\\frac{x^{n}}{K^{n} + x^{n}} \\;-\\; \\beta\\, x\n$$\n其中 $x \\ge 0$ 是分子浓度，参数 $\\alpha$、$\\beta$、$K$ 是正常数，希尔系数 $n \\ge 1$。\n\n不动点，或称稳态 $x^\\ast$，是变化率为零的浓度，即 $f(x^\\ast) = 0$。我们关注的是非负不动点，$x^\\ast \\ge 0$。不动点的方程为：\n$$\n\\alpha \\,\\frac{(x^\\ast)^{n}}{K^{n} + (x^\\ast)^{n}} \\;=\\; \\beta\\, x^\\ast\n$$\n一个平凡解是显而易见的：$x^\\ast_0 = 0$。对于满足给定约束的任何参数，$f(0) = 0$，因此原点总是一个不动点。\n\n为了找到非平凡不动点 ($x^\\ast > 0$)，我们可以将方程两边同除以 $x^\\ast$：\n$$\n\\alpha \\,\\frac{(x^\\ast)^{n-1}}{K^{n} + (x^\\ast)^{n}} \\;=\\; \\beta\n$$\n求解这个关于 $x^\\ast$ 的非多项式方程通常需要使用数值方法。正实根的数量取决于参数。从几何上看，这些根是合成速率曲线 $S(x) = \\alpha \\frac{x^n}{K^n+x^n}$ 和降解速率直线 $D(x) = \\beta x$ 的交点。\n\n不动点 $x^\\ast$ 的线性稳定性由导数 $f'(x^\\ast)$ 的符号决定。如果 $f'(x^\\ast) < 0$，不动点是稳定的；如果 $f'(x^\\ast) > 0$，不动点是不稳定的。$f(x)$ 的导数可通过商法则求得：\n$$\nf'(x) = \\frac{d}{dx}f(x) = \\alpha \\frac{nK^n x^{n-1}}{(K^n + x^n)^2} - \\beta\n$$\n我们必须分析每个不动点的稳定性。\n\n首先，考虑平凡不动点 $x^\\ast_0 = 0$。其稳定性取决于 $n$ 的值。\n- 如果 $n > 1$，则 $n-1 > 0$。项 $x^{n-1}$ 在 $x=0$ 处的值为 0，因此 $f'(0) = \\alpha \\cdot 0 - \\beta = -\\beta$。由于 $\\beta > 0$，我们有 $f'(0) < 0$。因此，当 $n > 1$ 时，不动点 $x^\\ast_0 = 0$ 总是稳定的。\n- 如果 $n = 1$，导数为 $f'(x) = \\alpha \\frac{K}{(K+x)^2} - \\beta$。在 $x=0$ 处，这给出 $f'(0) = \\frac{\\alpha}{K} - \\beta$。当 $n=1$ 时，$x^\\ast_0 = 0$ 的稳定性取决于参数：如果 $\\frac{\\alpha}{K} < \\beta$，则它是稳定的；如果 $\\frac{\\alpha}{K} > \\beta$，则它是不稳定的。\n\n为了找到所有非负不动点并评估每组给定参数下它们的稳定性，我们采用一种数值算法。\n1. 为给定的参数 $(\\alpha, \\beta, K, n)$ 定义函数 $f(x)$ 和 $f'(x)$。\n2. 寻找正不动点的搜索可以限制在一个有限区间 $[0, X_{\\max}]$ 内。一个不动点 $x^\\ast$ 必须满足 $\\beta x^\\ast = \\alpha \\frac{(x^\\ast)^n}{K^n + (x^\\ast)^n}$。由于对于任何有限的 $x^\\ast$，希尔函数项都严格小于1，我们必须有 $\\beta x^\\ast < \\alpha$，这意味着 $x^\\ast < \\alpha / \\beta$。因此，可以保证所有正不动点都位于区间 $(0, \\alpha/\\beta)$ 内。为了安全起见，我们选择一个搜索区间 $[0, X_{\\max}]$，其中 $X_{\\max} = \\alpha/\\beta$。\n3. 我们在区间 $(0, X_{\\max}]$ 内系统地搜索 $f(x)$ 的根。一个稳健的方法是将该区间划分为一个精细的网格，并检测相邻网格点之间 $f(x)$ 的符号变化。符号变化表明存在一个根，可以使用像布伦特法 (Brent's method) 这样的标准求根算法来精确定位。\n4. 所有找到的正根，连同平凡根 $x^\\ast_0=0$，构成了非负不动点的完整集合。\n5. 对于这个集合中的每个不动点 $x^\\ast$，我们计算其导数 $f'(x^\\ast)$ 并检查其符号。\n6. 计算不动点的总数。同时，也统计稳定不动点（其中 $f'(x^\\ast) < 0$）的数量。\n7. 如果稳定不动点的数量至少为两个，则系统表现出多重稳定态。\n\n这个以编程方式实现的程序，可以对每个测试用例进行明确的分析。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Analyzes the fixed points and stability of a single-gene positive autoregulatory module.\n    \"\"\"\n    test_cases = [\n        (50., 1., 5., 3.),  # Case 1\n        (2., 1., 5., 1.),   # Case 2\n        (10., 1., 5., 1.),  # Case 3\n        (5., 1., 5., 3.),   # Case 4\n        (20., 1., 3., 4.)   # Case 5\n    ]\n\n    results = []\n\n    for case in test_cases:\n        alpha, beta, K, n = case\n\n        # Define the function f(x) whose roots are the fixed points.\n        def f(x):\n            if x < 0:\n                return np.inf  # Domain is x >= 0\n            # To prevent overflow with large x and n, handle the Hill term carefully.\n            # However, for the given constraints, standard float precision is sufficient.\n            return alpha * (x**n) / (K**n + x**n) - beta * x\n\n        # Define the derivative f'(x) for stability analysis.\n        def f_prime(x):\n            if x < 0:\n                return np.inf\n            if n == 1:\n                # Correct handling for n=1 to avoid 0^0 issues at x=0\n                return alpha * K / (K + x)**2 - beta\n            else:\n                # General case for n > 1\n                numerator = alpha * n * (K**n) * (x**(n - 1))\n                denominator = (K**n + x**n)**2\n                return numerator / denominator - beta\n\n        # 1. Initialize with the trivial fixed point x=0\n        # Use a small tolerance for comparing floating point numbers\n        tolerance = 1e-9\n        roots = [0.0]\n\n        # 2. Search for positive fixed points\n        # All positive fixed points must be less than alpha/beta.\n        x_max = alpha / beta\n        \n        # Use a grid search to find intervals where roots exist\n        num_grid_points = 2000\n        # Start grid search from a small positive value to avoid the root at 0\n        grid = np.linspace(tolerance, x_max, num_grid_points)\n        y_grid = np.array([f(x) for x in grid])\n\n        for i in range(num_grid_points - 1):\n            if y_grid[i] * y_grid[i+1] < 0:\n                # A sign change indicates a root in the interval\n                bracket = (grid[i], grid[i+1])\n                try:\n                    root = brentq(f, bracket[0], bracket[1])\n                    # Ensure the found root is not a duplicate of an existing one\n                    is_new_root = True\n                    for existing_root in roots:\n                        if np.isclose(root, existing_root, atol=tolerance):\n                            is_new_root = False\n                            break\n                    if is_new_root:\n                        roots.append(root)\n                except ValueError:\n                    # brentq can fail if signs are not opposite, but grid check should prevent this\n                    pass\n        \n        roots.sort()\n        num_fixed_points = len(roots)\n\n        # 3. Analyze stability of each fixed point\n        stable_points_count = 0\n        for r in roots:\n            fp_val = f_prime(r)\n            if fp_val < 0:\n                stable_points_count += 1\n        \n        multiple_stable_states = stable_points_count >= 2\n        \n        results.append([num_fixed_points, multiple_stable_states])\n\n    # Format the final output string exactly as required, without spaces.\n    result_str = \"[\" + \",\".join([f\"[{m},{str(b)}]\" for m, b in results]) + \"]\"\n    print(result_str)\n\nsolve()\n```", "id": "2854806"}, {"introduction": "从观测数据中推断因果关系是系统遗传学的一大挑战。本练习将介绍孟德尔随机化（Mendelian Randomization, MR），这是一种强大的方法，它利用遗传变异作为工具变量来探究基因表达与复杂性状之间的因果链。通过这个例子，你将学会如何将Wald比率估计量应用于双样本研究的汇总数据，这是构建和验证因果基因调控网络的一项基石技术 [@problem_id:2854802]。", "problem": "一个单核苷酸多态性（SNP）$G$ 作为基因调控网络中一个转录调节因子表达水平 $E$ 的顺式表达数量性状基因座（cis-eQTL），并且也与一个复杂性状 $Y$ 相关联。考虑一个双样本设置，其样本无重叠，因此 $Y$ 对 $G$ 和 $E$ 对 $G$ 的汇总关联估计值在统计上是独立的。假设线性关系、在适当尺度上的可加性、关联估计值的大样本正态性，以及孟德尔随机化（MR）的标准工具变量假设：工具变量相关性、工具变量与混杂因素的独立性，以及排除 $G$ 通过 $E$ 之外的任何路径影响 $Y$。给定以下来自回归分析的汇总估计值：$Y$ 对 $G$ 的关联为 $\\hat{\\beta}_{YG} = 0.10$，标准误为 $\\mathrm{SE}(\\hat{\\beta}_{YG}) = 0.03$；$E$ 对 $G$ 的关联为 $\\hat{\\beta}_{EG} = 0.25$，标准误为 $\\mathrm{SE}(\\hat{\\beta}_{EG}) = 0.05$。\n\n仅使用上述假设，计算：\n- $E$ 对 $Y$ 的孟德尔随机化因果效应估计值，\n- 其标准误，\n- 以及在显著性水平 $\\alpha = 0.05$ 下，检验因果效应为零的零假设的双侧 $p$ 值。\n\n将您的结果报告为一个行向量 $\\left[\\hat{\\beta}_{\\mathrm{MR}}, \\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}}), p\\right]$。将每个分量四舍五入至三位有效数字。无需单位。", "solution": "本题要求在双样本设置中计算孟德尔随机化（MR）的因果效应估计值、其标准误以及相应的 p 值。我们首先验证问题陈述的有效性。\n\n已知条件如下：\n- 一个单核苷酸多态性（SNP）$G$ 是一个工具变量（IV）。\n- 暴露是转录调节因子的表达水平 $E$。\n- 结局是一个复杂性状 $Y$。\n- 使用了双样本设计，样本无重叠，确保了汇总估计值的统计独立性。\n- 陈述了标准的MR假设成立：\n    1. 工具变量相关性：$G$ 与 $E$ 相关。\n    2. 工具变量与混杂因素的独立性：$G$ 与 $E-Y$ 关系中的任何未测量混杂因素无关。\n    3. 排除限制：$G$ 仅通过 $E$ 影响 $Y$。\n- $Y$ 对 $G$ 的关联估计值为 $\\hat{\\beta}_{YG} = 0.10$。\n- 该估计值的标准误为 $\\mathrm{SE}(\\hat{\\beta}_{YG}) = 0.03$。\n- $E$ 对 $G$ 的关联估计值为 $\\hat{\\beta}_{EG} = 0.25$。\n- 该估计值的标准误为 $\\mathrm{SE}(\\hat{\\beta}_{EG}) = 0.05$。\n- 假设了可加性、线性关系以及估计值的大样本正态性。\n- 检验的显著性水平为 $\\alpha = 0.05$。\n\n该问题具有科学依据，适定、客观且内部一致。它描述了双样本孟德尔随机化中 Wald 比率估计量的标准应用，这是遗传流行病学和系统遗传学中的一种基石方法。所有必要的数据和假设都已提供，可以推导出唯一且有意义的解。因此，该问题是有效的。\n\n我们开始求解。\n\n首先，我们计算 $E$ 对 $Y$ 的 MR 因果效应估计值，记为 $\\beta_{EY}$。在给定假设下，该效应可以通过 SNP-结局关联与 SNP-暴露关联的比值来估计。这就是 Wald 比率估计量，对于我们的汇总数据而言：\n$$ \\hat{\\beta}_{\\mathrm{MR}} = \\frac{\\hat{\\beta}_{YG}}{\\hat{\\beta}_{EG}} $$\n代入给定值：\n$$ \\hat{\\beta}_{\\mathrm{MR}} = \\frac{0.10}{0.25} = 0.4 $$\n\n其次，我们计算该估计值的标准误 $\\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}})$。由于 $\\hat{\\beta}_{YG}$ 和 $\\hat{\\beta}_{EG}$ 来自无重叠的样本，它们是独立的随机变量。它们的比值的方差可以使用一阶泰勒级数展开（Delta 方法）来近似。对于函数 $f(x, y) = x/y$，其方差近似为：\n$$ \\mathrm{Var}\\left(\\frac{X}{Y}\\right) \\approx \\left(\\frac{\\mu_X}{\\mu_Y}\\right)^2 \\left( \\frac{\\mathrm{Var}(X)}{\\mu_X^2} + \\frac{\\mathrm{Var}(Y)}{\\mu_Y^2} \\right) $$\n将此应用于我们的估计值，其中 $\\mathrm{Var}(\\hat{\\beta}) = \\mathrm{SE}(\\hat{\\beta})^2$：\n$$ \\mathrm{Var}(\\hat{\\beta}_{\\mathrm{MR}}) \\approx \\left(\\frac{\\hat{\\beta}_{YG}}{\\hat{\\beta}_{EG}}\\right)^2 \\left( \\frac{\\mathrm{SE}(\\hat{\\beta}_{YG})^2}{\\hat{\\beta}_{YG}^2} + \\frac{\\mathrm{SE}(\\hat{\\beta}_{EG})^2}{\\hat{\\beta}_{EG}^2} \\right) $$\n从 Delta 方法推导出的一个更直接和常用的形式是：\n$$ \\mathrm{Var}(\\hat{\\beta}_{\\mathrm{MR}}) \\approx \\frac{\\mathrm{SE}(\\hat{\\beta}_{YG})^2}{\\hat{\\beta}_{EG}^2} + \\frac{\\hat{\\beta}_{YG}^2 \\mathrm{SE}(\\hat{\\beta}_{EG})^2}{\\hat{\\beta}_{EG}^4} $$\n我们将使用这个公式。代入给定值：\n$$ \\mathrm{Var}(\\hat{\\beta}_{\\mathrm{MR}}) \\approx \\frac{(0.03)^2}{(0.25)^2} + \\frac{(0.10)^2 (0.05)^2}{(0.25)^4} $$\n$$ \\mathrm{Var}(\\hat{\\beta}_{\\mathrm{MR}}) \\approx \\frac{0.0009}{0.0625} + \\frac{(0.01)(0.0025)}{0.00390625} $$\n$$ \\mathrm{Var}(\\hat{\\beta}_{\\mathrm{MR}}) \\approx 0.0144 + \\frac{0.000025}{0.00390625} = 0.0144 + 0.0064 = 0.0208 $$\n标准误是方差的平方根：\n$$ \\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}}) = \\sqrt{0.0208} \\approx 0.144222051... $$\n\n第三，我们计算零假设 $H_0: \\beta_{\\mathrm{MR}} = 0$ 的双侧 p 值。鉴于大样本正态性的假设，在零假设下，检验统计量 $Z$ 服从标准正态分布 $\\mathcal{N}(0, 1)$。\n$$ Z = \\frac{\\hat{\\beta}_{\\mathrm{MR}} - 0}{\\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}})} = \\frac{\\hat{\\beta}_{\\mathrm{MR}}}{\\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}})} $$\n代入计算出的值：\n$$ Z \\approx \\frac{0.4}{0.144222051...} \\approx 2.77350098... $$\n双侧 p 值是观察到至少与 $|Z|$ 一样极端的检验统计量的概率：\n$$ p = 2 \\times P(Z_{std} \\ge |Z|) = 2 \\times (1 - \\Phi(|Z|)) $$\n其中 $\\Phi$ 是标准正态分布的累积分布函数。\n$$ p \\approx 2 \\times (1 - \\Phi(2.7735)) \\approx 2 \\times (1 - 0.99723) \\approx 2 \\times 0.00277 = 0.00554 $$\n\n最后，我们将结果以行向量 $[\\hat{\\beta}_{\\mathrm{MR}}, \\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}}), p]$ 的形式报告，四舍五入至三位有效数字。\n- $\\hat{\\beta}_{\\mathrm{MR}} = 0.4$ 四舍五入至三位有效数字为 $0.400$。\n- $\\mathrm{SE}(\\hat{\\beta}_{\\mathrm{MR}}) \\approx 0.14422...$ 四舍五入至三位有效数字为 $0.144$。\n- $p \\approx 0.00554$（已经有三位有效数字，$5, 5, 4$）。\n\n最终结果是向量 $[0.400, 0.144, 0.00554]$。", "answer": "$$\\boxed{\\begin{pmatrix} 0.400 & 0.144 & 0.00554 \\end{pmatrix}}$$", "id": "2854802"}]}