{"hands_on_practices": [{"introduction": "RNA 编辑通常不会发生在所有转录本上，而是以一定的“效率”进行，从而在细胞内同时产生编辑和未编辑的蛋白亚基。本练习将引导你思考这种部分编辑对蛋白质复合物功能活性的定量影响。通过构建一个简单的概率模型 [@problem_id:1518594]，你将学会如何从分子水平的编辑效率推导出细胞表型层面的功能蛋白比例，这是连接基因型和表型的关键一步。", "problem": "在转录后基因调控的研究中，一种我们称之为依赖二聚体的激酶调节剂（Dimer-Dependent Kinase Regulator, DDKR）的特定蛋白质，被发现对于一个细胞信号通路至关重要。DDKR蛋白质仅在形成同源二聚体时才具有活性，该复合物由两个相同的DDKR蛋白质单元组成。DDKR的基因经历一个特定的、特征明确的信使RNA（mRNA）编辑事件，其中一个单个核苷酸被改变。这一编辑事件产生了一种完全无功能的DDKR蛋白质单体变体，因为它不能与其靶标结合，也无法形成稳定的二聚体界面。\n\n大量测序已确定该RNA编辑过程的效率为60.0%。这意味着在细胞的DDKR mRNA转录本池中，60.0%是编辑过的，其余是未编辑的。假设蛋白质单体（包括来自未编辑mRNA的功能性单体和来自编辑mRNA的非功能性单体）的合成量与其各自转录本的丰度成正比，并且它们随机组合形成二聚体。\n\n计算细胞内完全有功能的DDKR蛋白质复合物的比例。将你的答案以十进制形式表示，并四舍五入到三位有效数字。", "solution": "设编辑过的（非功能性）转录本的比例为 $f_{e}=0.600$。因为蛋白质的合成量与转录本的丰度成正比，所以非功能性单体的比例也是 $f_{e}=0.600$。因此，未编辑的（功能性）单体的比例为\n$$\nf_{u}=1-f_{e}=1-0.600=0.400.\n$$\n假设随机组合成二聚体，两个单体的选择是独立的。可能的配对及其概率为 $f_{u}^{2}$（未编辑–未编辑）、$2f_{u}f_{e}$（异源二聚体）和 $f_{e}^{2}$（编辑过–编辑过）。只有未编辑–未编辑的二聚体是完全有功能的。因此，细胞池中完全有功能的二聚体的比例是\n$$\nf_{\\text{functional}}=f_{u}^{2}=(0.400)^{2}=0.160.\n$$\n四舍五入到三位有效数字，结果仍为 $0.160$。", "answer": "$$\\boxed{0.160}$$", "id": "1518594"}, {"introduction": "在分析转录组测序数据时，一个核心挑战是如何区分真正的 RNA 编辑事件和基因组中固有的单核苷酸多态性 (SNPs)。本练习提供了一个动手实践的机会，让你应用基础的统计学工具——卡方检验（$\\chi^2$ test）[@problem_id:1518621]。通过比较 DNA-seq 和 RNA-seq 数据中等位基因频率的差异，你将能够定量地评估在 RNA 水平观察到的碱基变化是否显著，从而掌握一项鉴定 RNA 编辑位点的关键生物信息学技能。", "problem": "在基因表达的研究中，一个关键过程是RNA编辑，即核糖核酸（RNA）转录本的核苷酸序列在转录后被改变。一种常见的类型是A到I编辑，其中腺苷（A）被转化为肌苷（I），随后被测序技术和翻译机制解读为鸟嘌呤（G）。基因组学中的一个重大挑战是区分这些转录后编辑事件与真实的基因组变异，例如单核苷酸多态性（SNPs），后者是脱氧核糖核酸（DNA）序列本身的差异。\n\n一名研究人员正在使用来自单个组织样本的数据，研究一个人类基因中A到I编辑的候选位点。他们已将来自全基因组DNA测序（DNA-seq）和链特异性RNA测序（RNA-seq）的测序读段比对到人类参考基因组上。在感兴趣的特定基因组坐标处，参考等位基因为“A”。支持参考等位基因“A”和替代等位基因“G”的测序读段计数总结如下：\n\n- 来自DNA-seq：98个读段支持“A”等位基因，2个读段支持“G”等位基因。\n- 来自链特异性RNA-seq（映射到表达链）：140个读段支持“A”等位基因，60个读段支持“G”等位基因。\n\n为了统计评估RNA-seq数据中“G”的富集是否足够显著，以至于可以被归类为一个编辑事件，而不是低频体细胞SNP或测序噪音，我们进行了一次卡方同质性检验。该检验的原假设是，在DNA和RNA测序读段所采样的来源分子群体中，“G”等位基因的比例是相同的。\n\n计算此数据的卡方检验统计量。将最终答案四舍五入到三位有效数字。", "solution": "我们建立一个2x2列联表，行代表数据来源（DNA-seq, RNA-seq），列代表等位基因（A, G）。观测计数如下：\n- DNA-seq: $O_{\\text{DNA},A}=98$，$O_{\\text{DNA},G}=2$，行总和为 $100$。\n- RNA-seq: $O_{\\text{RNA},A}=140$，$O_{\\text{RNA},G}=60$，行总和为 $200$。\n\n列总和为 $A: 98+140=238$ 和 $G: 2+60=62$，总计 $N=300$。\n\n在DNA和RNA的等位基因比例相等的原假设下，期望计数由以下公式给出\n$$\nE_{ij}=\\frac{(\\text{row total})_{i}\\,(\\text{column total})_{j}}{N}.\n$$\n因此，\n$$\nE_{\\text{DNA},A}=\\frac{100\\cdot 238}{300}=\\frac{238}{3},\\quad\nE_{\\text{DNA},G}=\\frac{100\\cdot 62}{300}=\\frac{62}{3},\n$$\n$$\nE_{\\text{RNA},A}=\\frac{200\\cdot 238}{300}=\\frac{476}{3},\\quad\nE_{\\text{RNA},G}=\\frac{200\\cdot 62}{300}=\\frac{124}{3}.\n$$\n\nPearson卡方检验统计量为\n$$\n\\chi^{2}=\\sum_{\\text{cells}}\\frac{(O-E)^{2}}{E}.\n$$\n计算每个单元格的贡献值：\n- 对于 DNA,A:\n$$\n\\frac{(98-\\frac{238}{3})^{2}}{\\frac{238}{3}}=\\frac{\\left(\\frac{294-238}{3}\\right)^{2}}{\\frac{238}{3}}=\\frac{\\left(\\frac{56}{3}\\right)^{2}}{\\frac{238}{3}}=\\frac{3136}{9}\\cdot\\frac{3}{238}=\\frac{224}{51}.\n$$\n- 对于 DNA,G:\n$$\n\\frac{(2-\\frac{62}{3})^{2}}{\\frac{62}{3}}=\\frac{\\left(\\frac{6-62}{3}\\right)^{2}}{\\frac{62}{3}}=\\frac{\\left(-\\frac{56}{3}\\right)^{2}}{\\frac{62}{3}}=\\frac{3136}{9}\\cdot\\frac{3}{62}=\\frac{1568}{93}.\n$$\n- 对于 RNA,A:\n$$\n\\frac{(140-\\frac{476}{3})^{2}}{\\frac{476}{3}}=\\frac{\\left(\\frac{420-476}{3}\\right)^{2}}{\\frac{476}{3}}=\\frac{\\left(-\\frac{56}{3}\\right)^{2}}{\\frac{476}{3}}=\\frac{3136}{9}\\cdot\\frac{3}{476}=\\frac{112}{51}.\n$$\n- 对于 RNA,G:\n$$\n\\frac{(60-\\frac{124}{3})^{2}}{\\frac{124}{3}}=\\frac{\\left(\\frac{180-124}{3}\\right)^{2}}{\\frac{124}{3}}=\\frac{\\left(\\frac{56}{3}\\right)^{2}}{\\frac{124}{3}}=\\frac{3136}{9}\\cdot\\frac{3}{124}=\\frac{784}{93}.\n$$\n\n将这四项相加，\n$$\n\\chi^{2}=\\frac{224}{51}+\\frac{1568}{93}+\\frac{112}{51}+\\frac{784}{93}\n=\\left(\\frac{224+112}{51}\\right)+\\left(\\frac{1568+784}{93}\\right)\n=\\frac{336}{51}+\\frac{2352}{93}\n=\\frac{112}{17}+\\frac{784}{31}\n=\\frac{16800}{527}\\approx 31.8786.\n$$\n\n四舍五入到三位有效数字，卡方统计量为 $31.9$。", "answer": "$$\\boxed{31.9}$$", "id": "1518621"}, {"introduction": "本章的最终实践是一项综合性挑战，要求你将关于 RNA 编辑的生物学原理整合成一个完整的计算分析流程 [@problem_id:2847685]。你需要将链特异性、SNP 过滤和比对容错等复杂概念转化为一个明确的算法。这个练习模拟了从第一性原理开发生物信息学工具的过程，旨在深化你对真实研究中如何可靠地鉴定 RNA 编辑位点的系统性理解。", "problem": "设计一个完整、可运行的程序，通过整合编辑兼容错配的比对容忍度、使用匹配DNA进行单核苷酸多态性 (SNP) 过滤以及文库链特异性这三个原则性组分，从简化的RNA测序 (RNA-seq) 观测数据中判断每个候选基因组位点是否为腺苷到肌苷 (A-to-I) RNA编辑事件。你的程序必须实现以下模型，该模型源于遗传学原理中的核心定义和广泛接受的事实。\n\n使用的基本碱基和生物学事实：\n- 分子生物学的中心法则指出，信息从脱氧核糖核酸 (DNA) 流向核糖核酸 (RNA)，再到蛋白质。A-to-I RNA编辑是一种转录后修饰，其中RNA中的腺苷被脱氨成肌苷，而在测序和反转录过程中，肌苷被解释为鸟苷。因此，在转录（有义）链上，A-to-I 编辑在测序读段数据中产生一个表观的 A-to-G 变化。在基因组比对坐标系的互补链表示中，这表现为 T-to-C。\n- 碱基配对规则：腺嘌呤与胸腺嘧啶（在RNA中为尿嘧啶）配对，胞嘧啶与鸟嘌呤配对。因此，编辑位点的基因组表示取决于基因所在的链。\n- 使用匹配的DNA进行单核苷酸多态性 (SNP) 过滤，可以排除那些观测到的RNA碱基已存在于种系基因型中的位点，从而区分真实的编辑和遗传性变异。\n- 链特异性RNA-seq文库方案将被测序读段的比对链与原始转录本的链联系起来。在第一链方案中，读段比对到转录本的相反链；在第二链方案中，读段比对到与转录本相同的链；非链特异性方案则不保留这种关系。\n\n数学和算法规范：\n- 每个测试用例描述一个基因组位点，输入如下：\n  - 参考碱基 $b_{\\mathrm{ref}} \\in \\{A,C,G,T\\}$。\n  - 基因链 $s \\in \\{+,-\\}$。\n  - 文库类型 $L \\in \\{\\mathrm{U},\\mathrm{F},\\mathrm{S}\\}$，其中 U 表示非链特异性，F 表示第一链，S 表示第二链。\n  - 按比对链区分的RNA读段计数：\n    - 比对到正链的读段：$n^+_A, n^+_C, n^+_G, n^+_T$。\n    - 比对到负链的读段：$n^-_A, n^-_C, n^-_G, n^-_T$。\n  - 匹配的 DNA 二倍体基因型 $(g_1,g_2)$，其中 $g_1,g_2 \\in \\{A,C,G,T\\}$。\n- 比对容忍度通过罚分进行建模：\n  - 编辑兼容错配罚分 $p_{\\mathrm{edit}}$ 应用于 $A \\rightarrow G$ 或 $T \\rightarrow C$ 的错配（相应地）。\n  - 其他错配罚分 $p_{\\mathrm{other}}$ 应用于所有其他错配。\n  - 如果每个错配的平均罚分 $\\bar{p}$ 不超过阈值 $\\tau$，则接受。\n- 链特异性选择：\n  - 如果 $L=\\mathrm{U}$，对于每个 $X \\in \\{A,C,G,T\\}$，定义 $n_X = n^+_X + n^-_X$。\n  - 如果 $L=\\mathrm{F}$，当 $s=+$ 时使用 $n_X = n^-_X$，当 $s=-$ 时使用 $n_X = n^+_X$。\n  - 如果 $L=\\mathrm{S}$，当 $s=+$ 时使用 $n_X = n^+_X$，当 $s=-$ 时使用 $n_X = n^-_X$。\n- 基因组坐标中的编辑兼容碱基映射：\n  - 如果 $s=+$，目标参考碱基必须是 $A$，编辑支持碱基为 $G$，与参考相同的碱基为 $A$。\n  - 如果 $s=-$，目标参考碱基必须是 $T$，编辑支持碱基为 $C$，与参考相同的碱基为 $T$。\n- 使用与链一致的 $n_X$ 计算：\n  - $n_{\\mathrm{ref}}$ 为与参考相同的碱基的计数。\n  - $n_{\\mathrm{edit}}$ 为编辑兼容碱基的计数。\n  - $n_{\\mathrm{other}} = n_{\\mathrm{tot}} - n_{\\mathrm{ref}} - n_{\\mathrm{edit}}$，其中 $n_{\\mathrm{tot}} = n_A+n_C+n_G+n_T$。\n  - $n_{\\mathrm{mm}} = n_{\\mathrm{edit}} + n_{\\mathrm{other}}$。\n  - 如果 $n_{\\mathrm{mm}} > 0$，则设置 $\\bar{p} = \\dfrac{n_{\\mathrm{edit}} \\, p_{\\mathrm{edit}} + n_{\\mathrm{other}} \\, p_{\\mathrm{other}}}{n_{\\mathrm{mm}}}$；否则设置 $\\bar{p} = 0$。\n  - 编辑分数 $f = \\dfrac{n_{\\mathrm{edit}}}{n_{\\mathrm{edit}} + n_{\\mathrm{ref}}}$，当分母为正时；否则 $f=0$。\n- 使用DNA基因型进行SNP过滤：\n  - 如果 $s=+$ 且 $\\{g_1,g_2\\}$ 包含 $G$，则将该位点标记为已过滤。\n  - 如果 $s=-$ 且 $\\{g_1,g_2\\}$ 包含 $C$，则将该位点标记为已过滤。\n- 当且仅当所有条件都成立时，判定结果“已编辑”为 $\\mathrm{True}$：\n  - 预期的参考碱基：如果 $s=+$，则 $b_{\\mathrm{ref}}=A$；如果 $s=-$，则 $b_{\\mathrm{ref}}=T$。\n  - 未被上述DNA基因型过滤。\n  - 覆盖度阈值：$n_{\\mathrm{ref}} + n_{\\mathrm{edit}} \\ge c_{\\min}$。\n  - 最低编辑支持读段数：$n_{\\mathrm{edit}} \\ge r_{\\min}$。\n  - 比对容忍度：$\\bar{p} \\le \\tau$。\n  - 编辑分数阈值：$f \\ge f_{\\min}$。\n- 如果预期的参考碱基条件不满足，则定义 $f=0$ 且判定结果为 $\\mathrm{False}$。\n\n适用于所有测试用例的全局参数值：\n- $p_{\\mathrm{edit}} = 1.0$, $p_{\\mathrm{other}} = 3.0$, $\\tau = 2.0$。\n- $c_{\\min} = 10$, $f_{\\min} = 0.2$, $r_{\\min} = 3$。\n\n测试套件（六个用例）。每个用例是一个 $13$元组 $(b_{\\mathrm{ref}}, s, L, n^+_A, n^+_C, n^+_G, n^+_T, n^-_A, n^-_C, n^-_G, n^-_T, g_1, g_2)$:\n- 用例 1：$(A, +, S, 12, 0, 8, 0, 0, 0, 0, 0, A, A)$。\n- 用例 2：$(A, +, S, 5, 0, 10, 0, 0, 0, 0, 0, A, G)$。\n- 用例 3：$(T, -, F, 0, 5, 0, 15, 0, 0, 0, 0, T, T)$。注意：$n^+_T=15$, $n^+_C=5$；其他为 $0$。\n- 用例 4：$(A, +, U, 8, 3, 4, 3, 0, 2, 0, 2, A, A)$。\n- 用例 5：$(A, +, F, 0, 0, 0, 0, 12, 0, 3, 0, A, A)$。\n- 用例 6：$(C, +, S, 0, 20, 5, 0, 0, 0, 0, 0, C, C)$。\n\n必需的输出：\n- 对于每个用例，输出一个双元素列表 $[b, f]$，其中 $b$ 是一个布尔值，指示该位点是否被判定为已编辑，f 是编辑分数，以小数形式（非百分比）四舍五入到三位小数。将所有六个用例的结果聚合到一行的单个列表中。\n- 最终输出格式：你的程序应生成单行输出，包含用方括号括起来的、以逗号分隔的结果列表，其中每个元素本身是 $[\\mathrm{True}, 0.400]$ 或 $[\\mathrm{False}, 0.000]$ 形式的双元素列表。例如：$[[\\mathrm{True}, 0.400],[\\mathrm{False}, 0.000],\\dots]$。\n\n实现约束：\n- 程序必须完全自包含，不接受任何输入，并严格按照上述格式打印一行输出。", "solution": "该问题提出了一个有效、适定且有科学依据的任务。它要求实现一个确定性算法，从模拟的测序数据中识别腺苷到肌苷 (A-to-I) 的RNA编辑事件。该模型整合了标准的生物信息学原理，包括比对错配分析、单核苷酸多态性 (SNP) 过滤和文库链特异性方案。所有参数和条件都已明确定义，从而可以为每个给定的测试用例提供唯一且有意义的解。我现在将进行正式的求解。\n\n问题的核心是构建一个决策函数，该函数将基因组位点的特征作为输入，并输出一个布尔决策（对于编辑位点为 `True`，否则为 `False`）和计算出的编辑分数 $f$。该决策基于一系列过滤步骤，所有这些步骤都必须满足。\n\n我们定义指定的全局参数如下：\n- 错配罚分：$p_{\\mathrm{edit}} = 1.0$, $p_{\\mathrm{other}} = 3.0$。\n- 比对容忍度阈值：$\\tau = 2.0$。\n- 最低覆盖度：$c_{\\min} = 10$。\n- 最低编辑分数：$f_{\\min} = 0.2$。\n- 最低编辑支持读段数：$r_{\\min} = 3$。\n\n对于每个测试用例，我们应用以下逻辑操作序列。\n\n**步骤 1：基于链特异性的读段计数选择**\n第一步是根据基因链 $s \\in \\{+,-\\}$ 和文库制备方案 $L \\in \\{\\mathrm{U}, \\mathrm{F}, \\mathrm{S}\\}$ 来选择相关的RNA读段计数集 $(n_A, n_C, n_G, n_T)$。\n- 如果 $L = \\mathrm{U}$ (非链特异性)，方向信息会丢失。我们必须将两条链的计数相加：对于每个碱基 $X \\in \\{A,C,G,T\\}$，$n_X = n^+_X + n^-_X$。\n- 如果 $L = \\mathrm{F}$ (第一链)，测序的读段对应于转录本的相反链。\n    - 如果基因位于正链 ($s=+$)，转录本来自正链，因此读段比对到负链。我们使用 $n_X = n^-_X$。\n    - 如果基因位于负链 ($s=-$)，转录本来自负链，因此读段比对到正链。我们使用 $n_X = n^+_X$。\n- 如果 $L = \\mathrm{S}$ (第二链)，测序的读段对应于与转录本相同的链。\n    - 如果基因位于正链 ($s=+$)，读段比对到正链。我们使用 $n_X = n^+_X$。\n    - 如果基因位于负链 ($s=-$)，读段比对到负链。我们使用 $n_X = n^-_X$。\n\n**步骤 2：基本资格检查**\n\n**2.1. 预期的参考碱基：**\nA-to-I 编辑意味着一个特定的参考碱基，具体取决于链。\n- 如果基因位于正链 ($s=+$)，被编辑的碱基是腺苷 ($A$)。一个 A-to-I 编辑表现为 $A \\to G$ 的变化。参考碱基 $b_{\\mathrm{ref}}$ 必须是 $A$。\n- 如果基因位于负链 ($s=-$)，基因组参考是反向互补的。RNA中被编辑的腺苷对应于负链DNA上的一个胸腺嘧啶 ($T$)。在参考基因组坐标中，此编辑表现为 $T \\to C$ 的变化。参考碱基 $b_{\\mathrm{ref}}$ 必须是 $T$。\n如果不满足此条件，该位点不是 A-to-I 编辑的候选位点。判定立即为 `False`，并且编辑分数 $f$ 定义为 $0$。\n\n**2.2. SNP 过滤：**\n我们必须确保观测到的变化是转录后修饰，而非种系变异。我们使用匹配的二倍体 DNA 基因型 $(g_1, g_2)$ 来实现这一点。\n- 如果 $s=+$ (A-to-G 编辑)，若鸟苷 ($G$) 存在于基因型中，即 $G \\in \\{g_1, g_2\\}$，则该位点被过滤掉。\n- 如果 $s=-$ (T-to-C 编辑)，若胞嘧啶 ($C$) 存在于基因型中，即 $C \\in \\{g_1, g_2\\}$，则该位点被过滤掉。\n如果位点被过滤，判定为 `False`。\n\n**步骤 3：位点指标计算**\n如果位点通过了初始检查，我们继续进行定量分析。首先，我们对链选择的计数进行分类。\n- 对于 $s=+$，与参考相同的碱基是 $A$，编辑兼容碱基是 $G$。因此，$n_{\\mathrm{ref}} = n_A$ 且 $n_{\\mathrm{edit}} = n_G$。\n- 对于 $s=-$，与参考相同的碱基是 $T$，编辑兼容碱基是 $C$。因此，$n_{\\mathrm{ref}} = n_T$ 且 $n_{\\mathrm{edit}} = n_C$。\n\n使用这些值，我们计算：\n- 覆盖该位点的总读段数：$n_{\\mathrm{tot}} = n_A + n_C + n_G + n_T$。\n- 支持其他错配的读段数：$n_{\\mathrm{other}} = n_{\\mathrm{tot}} - n_{\\mathrm{ref}} - n_{\\mathrm{edit}}$。\n- 总错配读段数：$n_{\\mathrm{mm}} = n_{\\mathrm{edit}} + n_{\\mathrm{other}}$。\n- 编辑分数：$f = \\frac{n_{\\mathrm{edit}}}{n_{\\mathrm{ref}} + n_{\\mathrm{edit}}}$，如果 $n_{\\mathrm{ref}} + n_{\\mathrm{edit}} > 0$；否则 $f=0$。\n- 平均错配罚分：$\\bar{p} = \\frac{n_{\\mathrm{edit}} \\cdot p_{\\mathrm{edit}} + n_{\\mathrm{other}} \\cdot p_{\\mathrm{other}}}{n_{\\mathrm{mm}}}$，如果 $n_{\\mathrm{mm}} > 0$；否则 $\\bar{p}=0$。\n\n**步骤 4：最终阈值判断与决策**\n应用最后一组条件：\n1. 覆盖度阈值：$n_{\\mathrm{ref}} + n_{\\mathrm{edit}} \\ge c_{\\min}$。\n2. 最低编辑支持：$n_{\\mathrm{edit}} \\ge r_{\\min}$。\n3. 比对容忍度：$\\bar{p} \\le \\tau$。\n4. 编辑分数阈值：$f \\ge f_{\\min}$。\n\n当且仅当一个位点满足步骤2的条件（参考碱基和SNP过滤）以及步骤4的所有四个条件时，它才被判定为“已编辑” (`True`)。否则，判定为`False`。无论最终的布尔决策如何，都会报告计算出的编辑分数 $f$（除非参考碱基检查失败，此时 $f=0$）。\n\n**应用于测试用例：**\n\n**用例 1:** $(b_{\\mathrm{ref}}=A, s=+, L=S, n^+_A=12, n^+_G=8, \\dots, g_1=A, g_2=A)$\n1. 链特异性: $L=S, s=+ \\Rightarrow$ 使用 $n^+$。$n_A=12, n_C=0, n_G=8, n_T=0$。\n2. 资格检查: 对于 $s=+$, $b_{\\mathrm{ref}}=A$ 是正确的。基因型 $(A,A)$ 不包含 $G$。通过。\n3. 计算: $n_{\\mathrm{ref}}=n_A=12$, $n_{\\mathrm{edit}}=n_G=8$。$n_{\\mathrm{tot}}=20, n_{\\mathrm{other}}=0, n_{\\mathrm{mm}}=8$。\n   $f = \\frac{8}{12+8} = 0.4$。$\\bar{p} = \\frac{8 \\cdot 1.0 + 0 \\cdot 3.0}{8} = 1.0$。\n4. 阈值判断:\n   - 覆盖度: $12+8=20 \\ge 10$。通过。\n   - 编辑支持: $8 \\ge 3$。通过。\n   - 罚分: $1.0 \\le 2.0$。通过。\n   - 分数: $0.4 \\ge 0.2$。通过。\n5. 决策: 所有检查均通过。结果: $[\\mathrm{True}, 0.400]$。\n\n**用例 2:** $(b_{\\mathrm{ref}}=A, s=+, L=S, n^+_A=5, n^+_G=10, \\dots, g_1=A, g_2=G)$\n1. 链特异性: $L=S, s=+ \\Rightarrow$ 使用 $n^+$。$n_A=5, n_C=0, n_G=10, n_T=0$。\n2. 资格检查: 对于 $s=+$, $b_{\\mathrm{ref}}=A$ 是正确的。基因型 $(A,G)$ 包含 $G$。不通过 (SNP 过滤)。\n3. 计算: $f = \\frac{n_G}{n_A+n_G} = \\frac{10}{5+10} = \\frac{10}{15} \\approx 0.667$。\n5. 决策: SNP 过滤不通过。结果: $[\\mathrm{False}, 0.667]$。\n\n**用例 3:** $(b_{\\mathrm{ref}}=T, s=-, L=F, n^+_C=5, n^+_T=15, \\dots, g_1=T, g_2=T)$\n1. 链特异性: $L=F, s=- \\Rightarrow$ 使用 $n^+$。$n_A=0, n_C=5, n_G=0, n_T=15$。\n2. 资格检查: 对于 $s=-$, $b_{\\mathrm{ref}}=T$ 是正确的。基因型 $(T,T)$ 不包含 $C$。通过。\n3. 计算: $n_{\\mathrm{ref}}=n_T=15$, $n_{\\mathrm{edit}}=n_C=5$。$n_{\\mathrm{tot}}=20, n_{\\mathrm{other}}=0, n_{\\mathrm{mm}}=5$。\n   $f = \\frac{5}{15+5} = 0.25$。$\\bar{p} = \\frac{5 \\cdot 1.0 + 0 \\cdot 3.0}{5} = 1.0$。\n4. 阈值判断:\n   - 覆盖度: $15+5=20 \\ge 10$。通过。\n   - 编辑支持: $5 \\ge 3$。通过。\n   - 罚分: $1.0 \\le 2.0$。通过。\n   - 分数: $0.25 \\ge 0.2$。通过。\n5. 决策: 所有检查均通过。结果: $[\\mathrm{True}, 0.250]$。\n\n**用例 4:** $(b_{\\mathrm{ref}}=A, s=+, L=U, n^+_A=8, n^+_C=3, n^+_G=4, \\dots, g_1=A, g_2=A)$\n1. 链特异性: $L=U \\Rightarrow$ 将 $n^+$ 和 $n^-$ 相加。$n_A=8+0=8$, $n_C=3+2=5$, $n_G=4+0=4$, $n_T=3+2=5$。\n2. 资格检查: 对于 $s=+$, $b_{\\mathrm{ref}}=A$ 是正确的。基因型 $(A,A)$ 不包含 $G$。通过。\n3. 计算: $n_{\\mathrm{ref}}=n_A=8$, $n_{\\mathrm{edit}}=n_G=4$。$n_{\\mathrm{tot}}=22$。\n   $n_{\\mathrm{other}}=n_C+n_T=5+5=10$。$n_{\\mathrm{mm}}=4+10=14$。\n   $f = \\frac{4}{8+4} = \\frac{4}{12} \\approx 0.333$。$\\bar{p} = \\frac{4 \\cdot 1.0 + 10 \\cdot 3.0}{14} = \\frac{34}{14} \\approx 2.429$。\n4. 阈值判断:\n   - 覆盖度: $8+4=12 \\ge 10$。通过。\n   - 编辑支持: $4 \\ge 3$。通过。\n   - 罚分: $2.429 \\le 2.0$。不通过。\n   - 分数: $0.333 \\ge 0.2$。通过。\n5. 决策: 比对容忍度不通过。结果: $[\\mathrm{False}, 0.333]$。\n\n**用例 5:** $(b_{\\mathrm{ref}}=A, s=+, L=F, n^-_A=12, n^-_G=3, \\dots, g_1=A, g_2=A)$\n1. 链特异性: $L=F, s=+ \\Rightarrow$ 使用 $n^-$。$n_A=12, n_C=0, n_G=3, n_T=0$。\n2. 资格检查: 对于 $s=+$, $b_{\\mathrm{ref}}=A$ 是正确的。基因型 $(A,A)$ 不包含 $G$。通过。\n3. 计算: $n_{\\mathrm{ref}}=n_A=12$, $n_{\\mathrm{edit}}=n_G=3$。$n_{\\mathrm{tot}}=15, n_{\\mathrm{other}}=0, n_{\\mathrm{mm}}=3$。\n   $f = \\frac{3}{12+3} = 0.2$。$\\bar{p} = \\frac{3 \\cdot 1.0 + 0 \\cdot 3.0}{3} = 1.0$。\n4. 阈值判断:\n   - 覆盖度: $12+3=15 \\ge 10$。通过。\n   - 编辑支持: $3 \\ge 3$。通过。\n   - 罚分: $1.0 \\le 2.0$。通过。\n   - 分数: $0.2 \\ge 0.2$。通过。\n5. 决策: 所有检查均通过。结果: $[\\mathrm{True}, 0.200]$。\n\n**用例 6:** $(b_{\\mathrm{ref}}=C, s=+, L=S, \\dots, g_1=C, g_2=C)$\n1. 链特异性: 无需。\n2. 资格检查: $s=+$ 要求 $b_{\\mathrm{ref}}=A$。此处 $b_{\\mathrm{ref}}=C$。不通过 (参考碱基检查)。\n5. 决策: 参考碱基检查不通过。$f$ 设置为 $0$。结果: $[\\mathrm{False}, 0.000]$。\n\n这个全面、分步的过程提供了一种严谨且可复现的方法，用于根据指定的模型分析每个用例。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the RNA editing detection problem for a suite of test cases.\n    The entire program is self-contained as required.\n    \"\"\"\n\n    # Global parameter values for all test cases.\n    p_edit = 1.0\n    p_other = 3.0\n    tau = 2.0\n    c_min = 10\n    f_min = 0.2\n    r_min = 3\n\n    # Test suite (six cases). Each case is a 13-tuple:\n    # (b_ref, s, L, np_A, np_C, np_G, np_T, nm_A, nm_C, nm_G, nm_T, g1, g2)\n    test_cases = [\n        ('A', '+', 'S', 12, 0, 8, 0, 0, 0, 0, 0, 'A', 'A'),\n        ('A', '+', 'S', 5, 0, 10, 0, 0, 0, 0, 0, 'A', 'G'),\n        ('T', '-', 'F', 0, 5, 0, 15, 0, 0, 0, 0, 'T', 'T'),\n        ('A', '+', 'U', 8, 3, 4, 3, 0, 2, 0, 2, 'A', 'A'),\n        ('A', '+', 'F', 0, 0, 0, 0, 12, 0, 3, 0, 'A', 'A'),\n        ('C', '+', 'S', 0, 20, 5, 0, 0, 0, 0, 0, 'C', 'C'),\n    ]\n\n    results = []\n    for case in test_cases:\n        b_ref, s, L, np_A, np_C, np_G, np_T, nm_A, nm_C, nm_G, nm_T, g1, g2 = case\n        \n        # Step 1: Strandedness selection to get n_A, n_C, n_G, n_T\n        if L == 'U':\n            n_A, n_C, n_G, n_T = (np_A + nm_A, np_C + nm_C, np_G + nm_G, np_T + nm_T)\n        elif L == 'F':\n            if s == '+':\n                n_A, n_C, n_G, n_T = (nm_A, nm_C, nm_G, nm_T)\n            else: # s == '-'\n                n_A, n_C, n_G, n_T = (np_A, np_C, np_G, np_T)\n        elif L == 'S':\n            if s == '+':\n                n_A, n_C, n_G, n_T = (np_A, np_C, np_G, np_T)\n            else: # s == '-'\n                n_A, n_C, n_G, n_T = (nm_A, nm_C, nm_G, nm_T)\n\n        reads_by_base = {'A': n_A, 'C': n_C, 'G': n_G, 'T': n_T}\n\n        # --- Begin decision logic ---\n        is_edited = True\n        \n        # Step 2.1: Expected reference base check\n        if s == '+':\n            expected_ref = 'A'\n            edit_base = 'G'\n        else: # s == '-'\n            expected_ref = 'T'\n            edit_base = 'C'\n\n        if b_ref != expected_ref:\n            is_edited = False\n            f = 0.0\n            results.append([is_edited, f])\n            continue\n\n        # Step 3 and subsequent calculations\n        n_ref = reads_by_base[expected_ref]\n        n_edit = reads_by_base[edit_base]\n        n_tot = sum(reads_by_base.values())\n        n_other = n_tot - n_ref - n_edit\n        n_mm = n_edit + n_other\n\n        # Calculate editing fraction f\n        if (n_ref + n_edit) > 0:\n            f = n_edit / (n_ref + n_edit)\n        else:\n            f = 0.0\n\n        # Calculate mean penalty p_bar\n        if n_mm > 0:\n            p_bar = (n_edit * p_edit + n_other * p_other) / n_mm\n        else:\n            p_bar = 0.0\n\n        # Step 2.2: SNP filter\n        genotype = {g1, g2}\n        if s == '+' and 'G' in genotype:\n            is_edited = False\n        if s == '-' and 'C' in genotype:\n            is_edited = False\n        \n        # Step 4: Final thresholding\n        if not (n_ref + n_edit >= c_min):\n            is_edited = False\n        if not (n_edit >= r_min):\n            is_edited = False\n        if not (p_bar = tau):\n            is_edited = False\n        if not (f >= f_min):\n            is_edited = False\n        \n        results.append([is_edited, f])\n\n    # Final print statement in the exact required format.\n    output_str = '[' + ','.join([f\"[{str(res[0])}, {res[1]:.3f}]\" for res in results]) + ']'\n    print(output_str)\n\nsolve()\n```", "id": "2847685"}]}