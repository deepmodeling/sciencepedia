{"hands_on_practices": [{"introduction": "掌握杂交不育系统的基本原理，首先需要能够设计和解读经典的遗传学诊断杂交实验。本练习将引导您系统性地思考$P$、$M$和$M'$品系间的杂交组合，并根据母性细胞质型抑制的原则，预测不同杂交后代的表型。通过这个实践，您将巩固对杂交不育现象核心逻辑的理解。[@problem_id:2835431]", "problem": "一个实验室有三种标准的黑腹果蝇（Drosophila melanogaster）品系，它们在P因子含量上有所不同：P品系（$P$）携带许多自主P因子并表现出保护性的P细胞质型；M品系（$M$）缺乏P因子序列并表现出容许性的M细胞质型；M'品系（$M'$）主要携带缺陷P因子序列，几乎不表现出或完全不表现出母系保护作用。考虑到P因子转座是温度敏感的，且P因子特异性PIWI相互作用RNA（piRNA）的母系遗传会抑制子代生殖系中的转座。在$29^\\circ\\mathrm{C}$的高饲养温度下，您希望使用 $P$、$M$ 和 $M'$ 品系间的诊断性杂交来揭示杂种不育现象，并决定在 $F_1$ 和 $F_2$ 代中记录哪些表型以区分不育和非不育的结果。\n\n哪个选项正确地指定了这些品系间的一组四个诊断性杂交，指出了在 $29^\\circ\\mathrm{C}$ 下哪些应该产生杂种不育而哪些不应该，并确定了在 $F_1$ 和 $F_2$ 代中检测不育现象应记录的适当表型？\n\nA. $29^\\circ\\mathrm{C}$下的杂交及结果：\n- $P \\mars \\times M \\venus$：不育；$F_1$ 表现出高发生率的生殖腺发育不全和不育性。\n- $M \\mars \\times P \\venus$：非不育，由于母本的P细胞质型；$F_1$ 可育。\n- $P \\mars \\times M' \\venus$：部分不育（$F_1$ 中等程度的生殖腺发育不全，反映了部分抑制作用）。\n- $M' \\mars \\times M \\venus$：弱不育（$F_1$ 生殖腺发育不全发生率低于 $P \\mars \\times M \\venus$ 杂交）。\n待记录的表型：在 $F_1$ 中，记录 $29^\\circ\\mathrm{C}$ 下的生殖腺发育不全不育指数；在 $F_2$ 中（由 $F_1$ 雄性产生），记录升高的雄性重组率和新突变频率作为不育的表征。\n\nB. $29^\\circ\\mathrm{C}$下的杂交及结果：\n- $P \\venus \\times M \\mars$：不育；$F_1$ 不育，因为P因子来自母本。\n- $M \\venus \\times P \\mars$：非不育，因为父本的P因子被合子抑制。\n- $M' \\venus \\times P \\mars$：非不育；$M'$ 雌性像 $P$ 雌性一样完全保护子代。\n- $M \\venus \\times M' \\mars$：非不育；$M'$ 中的缺陷P因子不能诱导不育。\n待记录的表型：在 $F_1$ 中，记录雄性重组；在 $F_2$ 中，记录生殖腺发育不全。\n\nC. 不受温度影响的杂交及结果：\n- $P \\mars \\times M \\venus$：在任何温度下都不育；$F_1$ 不育。\n- $M \\mars \\times P \\venus$：不育，因为合子继承了P因子。\n- $P \\mars \\times M' \\venus$：非不育，因为 $M'$ 携带P序列。\n- $M' \\mars \\times M \\venus$：非不育；只有自主P因子才会导致不育。\n待记录的表型：在 $F_1$ 中，记录新的可见突变和雄性重组；$F_2$ 的记录没有信息价值。\n\nD. $29^\\circ\\mathrm{C}$下的杂交及结果：\n- $P \\mars \\times M \\venus$：非不育；母本缺乏P因子避免了转座。\n- $M \\mars \\times P \\venus$：不育；由于P因子的母本装载，导致 $F_1$ 不育。\n- $P \\mars \\times M' \\venus$：完全不育，程度与 $P \\mars \\times M \\venus$ 相同。\n- $M' \\mars \\times M \\venus$：完全非不育，因为 $M'$ 雄性缺乏任何诱导活性。\n待记录的表型：在 $F_1$ 中，只记录繁殖力；在 $F_2$ 中，只记录不同杂交组合间的生存能力差异。", "solution": "必须首先验证问题陈述的科学合理性和一致性。\n\n### 步骤1：提取已知条件\n\n1.  **品系：**\n    *   P品系 ($P$)：包含许多自主P因子；拥有P细胞质型（保护性）。\n    *   M品系 ($M$)：缺乏P因子序列；拥有M细胞质型（容许性）。\n    *   M'品系 ($M'$)：主要包含缺陷P因子序列；细胞质几乎不表现出或完全不表现出母系保护作用。\n2.  **条件：**\n    *   饲养温度为 $29^\\circ\\mathrm{C}$，是一个高温。\n    *   P因子转座是温度敏感的。\n    *   P因子特异性PIWI相互作用RNA (piRNA) 的母系遗传负责抑制子代生殖系中的转座。\n3.  **目标：**\n    *   选择一组正确的四个诊断性杂交。\n    *   在 $29^\\circ\\mathrm{C}$ 下正确预测每个杂交的不育或非不育结果。\n    *   确定在 $F_1$ 和 $F_2$ 代中应记录的适当表型。\n\n### 步骤2：使用提取的条件进行验证\n\n问题陈述描述了*黑腹果蝇*中经典的P-M杂种不育系统。\n\n*   **科学根据：** 对 $P$、$M$ 和 $M'$ 品系的描述、P和M细胞质型的概念、母系遗传的piRNA在抑制中的作用、转座的温度敏感性以及不育表型（生殖腺发育不全、不育性、雄性重组、突变）都是现代遗传学的教科书原理。这些内容在事实上和科学上都是合理的。\n*   **定义明确：** 问题定义清晰。它要求应用已建立的遗传学原理来预测特定杂交的结果，并确定正确的实验表征。可以确定一个唯一的正确答案。\n*   **客观：** 语言技术性强、精确，且没有主观偏见。\n\n问题陈述科学合理、定义明确且客观。未发现任何缺陷。\n\n### 步骤3：结论与行动\n\n问题是**有效的**。将通过分析杂种不育的原理，然后评估每个选项来推导出解决方案。\n\n### 解决方案的推导\n\n在该系统中，杂种不育是一种生殖系异常综合征，当携带自主P转座因子（$P$品系雄性）的雄性与缺乏这些因子及抑制机制（$M$品系雌性）的雌性杂交时发生。\n\n关键原理如下：\n1.  **不育的原因：** $F_1$ 子代生殖系细胞中P因子的不受控制的转座。这需要功能性转座酶的来源，该酶由自主P因子编码。\n2.  **抑制作用（P细胞质型）：** 来自 $P$ 品系的雌性产生的卵子含有源自P因子的piRNA。这些piRNA建立了一种“P细胞质型”，能够抑制早期胚胎中的P因子转座，从而保护生殖系。这种保护是母系遗传的。\n3.  **容许性（M细胞质型）：** 来自 $M$ 品系的雌性，因缺乏P因子，不产生这些抑制性piRNA。她们的卵子具有“M细胞质型”，这是一个容许性环境，引入的P因子可以在其中自由转座。\n4.  **$M'$ 品系：** 一个 $M'$ 雌性“几乎不表现出或完全不表现出母系保护作用”，使其细胞质在功能上类似于容许性的M细胞质型。一个 $M'$ 雄性提供“主要为缺陷的P因子序列”。缺陷P因子缺乏转座酶基因，无法自行移动。然而，某些类型的缺陷因子即使没有自主因子也能引起某些不育性状（如生殖腺发育不全），或者在有转座酶来源时被动员。\n5.  **温度：** $29^\\circ\\mathrm{C}$ 的高温会增强P因子的转座速率和不育表型的严重程度。\n6.  **表型：**\n    *   **$F_1$ 代：** 生殖腺发育不全（GD），导致不育，是一个标志性表型，尤其是在高温下饲养的雌性中。\n    *   **$F_1$ 的生殖系（在 $F_2$ 中记录）：** 如果 $F_1$ 个体不完全不育，其生殖系中持续的转座会导致基因组不稳定性，这可以通过诸如雄性重组率升高（在*果蝇*中通常不存在）和在 $F_2$ 代中出现新的致死或可见突变等现象来衡量。\n\n基于这些原理，我们来分析四个关键的杂交组合：\n\n1.  **$P \\mars \\times M \\venus$：** $P$ 雄性将自主P因子引入到卵子的容许性M细胞质中。这是产生杂种不育的经典组合。在 $29^\\circ\\mathrm{C}$ 下，预计会出现严重影响，包括高发生率的 $F_1$ 生殖腺发育不全和不育。这是**不育杂交**。\n\n2.  **$M \\mars \\times P \\venus$：** $P$ 雌性在其卵子中提供了抑制性的P细胞质型（含有piRNA）。这种细胞质会沉默任何可能存在的P因子。在这种情况下，$M$ 雄性反正也不提供P因子。这个杂交是**非不育的正反交对照**，$F_1$ 子代是可育的。\n\n3.  **$P \\mars \\times M' \\venus$：** $P$ 雄性引入自主P因子。$M'$ 雌性“几乎不表现出或完全不表现出母系保护作用”，意味着她的细胞质在很大程度上是容许性的。因此，这个杂交将是**不育的**。术语“部分”或“中等程度”不育是合理的，因为“几乎不”的保护作用比 $M$ 雌性的“完全没有”要多，但转座仍将以高速率发生。\n\n4.  **$M' \\mars \\times M \\venus$：** $M$ 雌性提供了一个容许性的细胞质。$M'$ 雄性提供缺陷的P因子。经典的杂种不育需要来自自主因子的转座酶，因此不会发生。然而，已知某些特定的缺陷P因子（例如$KP$因子）能够自行诱导生殖腺发育不全，尽管其频率通常低于一个完整的$P$品系。因此，就GD不育而言，将此杂交归类为**弱不育**是一种细致且可接受的描述。它肯定比 $P \\mars \\times M \\venus$ 杂交的不育性要弱。\n\n**表型记录：** 一个稳健的实验设计会测量 $F_1$ 中最直接的影响（生殖腺发育不全/不育），以及下一代生殖系不稳定性的后果，这通过将 $F_1$ 雄性与合适的测交雌性杂交，并记录 $F_2$ 后代中的雄性重组或新突变来评估。\n\n### 逐项分析\n\n**A. $29^\\circ\\mathrm{C}$下的杂交及结果：**\n*   `$P \\mars \\times M \\venus$：不育；$F_1$ 表现出高发生率的生殖腺发育不全和不育性。` **正确。** 这与原理完全一致。\n*   `$M \\mars \\times P \\venus$：非不育，由于母本的P细胞质型；$F_1$ 可育。` **正确。** 这是正反交对照杂交。\n*   `$P \\mars \\times M' \\venus$：部分不育（$F_1$ 中等程度的生殖腺发育不全，反映了部分抑制作用）。` **正确。** $M'$ 细胞质在很大程度上是容许性的，导致不育。“部分”是一个合适的限定词。\n*   `$M' \\mars \\times M \\venus$：弱不育（$F_1$ 生殖腺发育不全发生率低于 $P \\mars \\times M \\venus$ 杂交）。` **正确。** 这反映了某些缺陷因子已知能够诱导GD不育的能力，使其区别于一个完全惰性的杂交。\n*   `待记录的表型：在 $F_1$ 中，记录 $29^\\circ\\mathrm{C}$ 下的生殖腺发育不全不育指数；在 $F_2$ 中（由 $F_1$ 雄性产生），记录升高的雄性重组率和新突变频率作为不育的表征。` **正确。** 这描述了用于P-M不育症的标准且适当的一套表型分析方法。\n\n**B. $29^\\circ\\mathrm{C}$下的杂交及结果：**\n*   `$P \\venus \\times M \\mars$：不育；...` **不正确。** 这是非不育杂交。该陈述致命地颠倒了雄性和雌性在导致和抑制不育中的作用。\n*   `$M \\venus \\times P \\mars$：非不育；...` **不正确。** 这是典型的不育杂交。\n\n**C. 不受温度影响的杂交及结果：**\n*   `...不受温度影响：` **不正确。** P因子的转座和不育表型的严重程度强烈依赖于温度，在像 $29^\\circ\\mathrm{C}$ 这样的较高温度下更为显著。\n*   `$M \\mars \\times P \\venus$：不育...` **不正确。** 这是非不育杂交。\n\n**D. $29^\\circ\\mathrm{C}$下的杂交及结果：**\n*   `$P \\mars \\times M \\venus$：非不育；...` **不正确。** 这是典型的不育杂交。给出的理由（“母本缺乏P因子避免了转座”）是错误的；正是这种缺乏使得细胞质具有容许性。\n*   `$M \\mars \\times P \\venus$：不育；...` **不正确。** 这是非不育杂交。理由也是错误的；P因子产物（piRNA）的母本装载导致抑制，而不是不育。\n\n### 结论\n\n选项A是唯一一个根据已建立的P因子生物学原理（包括$M'$品系的细微行为）正确识别不育和非不育杂交，并列出了在 $F_1$ 和后续世代中应记录的正确表型组合的选项。", "answer": "$$\\boxed{A}$$", "id": "2835431"}, {"introduction": "生物过程的表达常常受到环境因素的显著影响，而杂交不育的强度对温度敏感便是一个典型例子。将生物学现象从定性描述转化为定量模型，是现代生物学研究的关键一步。通过本练习，您将学习如何使用一个现象学模型来拟合实验数据，从而估算关键参数，量化温度对不育率的影响。[@problem_id:2835418]", "problem": "在果蝇（Drosophila melanogaster）中，携带活性 P 因子的雄性与具有母系 M 细胞质型的雌性进行杂交，会表现出杂交不育。其不育外显率会随着温度升高而增加，这是由于在缺少 PIWI 相互作用 RNA (piRNA) 介导的沉默作用时，转座活性增强所致。考虑一个关于不育外显率的唯象、单调温度依赖模型，其函数如下：\n$$\nP_{\\text{sterile}}(T) \\;=\\; 1 - e^{-k\\,(T - T_{0})},\n$$\n其中，$T$ 是以摄氏度为单位的温度，$k$ 是一个单位为 $(^{\\circ}\\mathrm{C})^{-1}$ 的正常数速率参数，$T_{0}$ 是一个有效阈值温度（单位为 $^{\\circ}\\mathrm{C}$），低于此温度时外显率趋于零。假设对于所有关注的温度，都有 $0 \\le P_{\\text{sterile}}(T) < 1$。\n\n您必须从模型拟合和代数的基本原理出发，根据两个独立的观测值 $(T_{1}, p_{1})$ 和 $(T_{2}, p_{2})$ 来估计 $k$ 和 $T_{0}$，其中 $p_{i}$ 是观测到的不育外显率，以小数表示（而非百分比），$T_{i}$ 以 $^{\\circ}\\mathrm{C}$ 为单位。请使用以下参数值测试集：\n- 情况 1（典型的杂交不育观测）：$(T_{1}, p_{1}, T_{2}, p_{2}) = (29, 0.80, 20, 0.05)$。\n- 情况 2（宽动态范围）：$(T_{1}, p_{1}, T_{2}, p_{2}) = (18, 0.20, 30, 0.90)$。\n- 情况 3（接近基线外显率，小温度增量）：$(T_{1}, p_{1}, T_{2}, p_{2}) = (18, 0.01, 19, 0.02)$。\n- 情况 4（高温下高外显率）：$(T_{1}, p_{1}, T_{2}, p_{2}) = (25, 0.50, 35, 0.999)$。\n\n您的程序必须：\n- 对于每种情况，计算满足给定两个观测值的模型的 $k$（单位为 $(^{\\circ}\\mathrm{C})^{-1}$）和 $T_{0}$（单位为 $^{\\circ}\\mathrm{C}$）。\n- 将 $k$ 和 $T_{0}$ 作为浮点数输出，并精确到小数点后六位。\n\n约束和预期：\n- 将外显率值 $p_{i}$ 视为严格在区间 $[0, 1)$ 内的小数，即 $p_{i} \\in [0,1)$，温度以 $^{\\circ}\\mathrm{C}$ 为单位表示的实数。\n- 不涉及角度；不需要角度单位。\n- 所有计算必须与模型和量纲分析保持一致，确保指数是无量纲的。\n\n最终输出格式：\n- 您的程序应生成单行输出，包含一个由列表组成的逗号分隔列表，其中每个内部列表按 $[k, T_{0}]$ 的顺序排列，对应相应的测试用例，两个条目都四舍五入到小数点后六位。例如，输出应如下所示：\n[[$k_1,T_{0,1}$],[$k_2,T_{0,2}$],[$k_3,T_{0,3}$],[$k_4,T_{0,4}$]]\n- 不需要空格，您可以省略它们以确保严格的格式。确切要求的格式是：\n\"[[k1,T01],[k2,T02],[k3,T03],[k4,T04]]\"\n其中每个 $k$ 的单位是 $(^{\\circ}\\mathrm{C})^{-1}$，每个 $T_{0}$ 的单位是 $^{\\circ}\\mathrm{C}$，所有数值都四舍五入到小数点后六位。", "solution": "此问题要求为给定的果蝇（*Drosophila melanogaster*）不育外显率唯象模型估计两个参数：速率常数 $k$ 和阈值温度 $T_{0}$。该模型由以下函数给出：\n$$\nP_{\\text{sterile}}(T) = 1 - e^{-k\\,(T - T_{0})}\n$$\n其中 $T$ 是摄氏温度，$k$ 的单位是 $(^{\\circ}\\mathrm{C})^{-1}$，$T_{0}$ 的单位是 $^{\\circ}\\mathrm{C}$。估计过程将使用两个观测数据点 $(T_{1}, p_{1})$ 和 $(T_{2}, p_{2})$。\n\n首先，必须确定该问题是适定的。我们有两个方程和两个未知数，构成一个可以求解的方程组。给定的数据点是不同的，并且模型的函数形式允许唯一的解析解，前提是 $T_{1} \\ne T_{2}$ 且 $p_{1} \\ne p_{2}$，这在所有测试用例中都成立。因此，该问题是有效的，有科学依据的，并且可以从代数的基本原理出发求解。\n\n参数 $k$ 和 $T_{0}$ 的推导过程如下。\n根据两个观测值，我们可以写出一个包含两个方程的方程组：\n$$\np_{1} = 1 - e^{-k(T_{1} - T_{0})} \\quad (1)\n$$\n$$\np_{2} = 1 - e^{-k(T_{2} - T_{0})} \\quad (2)\n$$\n\n为了求解 $k$ 和 $T_{0}$，我们首先重新整理每个方程，以分离出指数项：\n$$\n1 - p_{1} = e^{-k(T_{1} - T_{0})}\n$$\n$$\n1 - p_{2} = e^{-k(T_{2} - T_{0})}\n$$\n由于外显率值 $p_{1}, p_{2}$ 在区间 $[0, 1)$ 内，这些等式的两边都为正。因此，我们可以对等式两边取自然对数以消除指数函数。这将方程组相对于 $k T_0$ 项线性化：\n$$\n\\ln(1 - p_{1}) = -k(T_{1} - T_{0}) = -kT_{1} + kT_{0} \\quad (3)\n$$\n$$\n\\ln(1 - p_{2}) = -k(T_{2} - T_{0}) = -kT_{2} + kT_{0} \\quad (4)\n$$\n\n我们现在得到了一个包含两个变量（可视为 $k$ 和 $kT_0$）的二元线性方程组。为了求解 $k$，我们将方程 $(3)$ 减去方程 $(4)$：\n$$\n\\ln(1 - p_{1}) - \\ln(1 - p_{2}) = (-kT_{1} + kT_{0}) - (-kT_{2} + kT_{0})\n$$\n$$\n\\ln(1 - p_{1}) - \\ln(1 - p_{2}) = -kT_{1} + kT_{2} = k(T_{2} - T_{1})\n$$\n分离出 $k$ 得到其表达式：\n$$\nk = \\frac{\\ln(1 - p_{1}) - \\ln(1 - p_{2})}{T_{2} - T_{1}}\n$$\n只要 $T_{2} \\ne T_{1}$，此公式就有效。实验数据满足 $k > 0$ 的条件，即更高的温度对应更高的外显率。\n\n为了求出 $T_{0}$，我们可以重新整理方程 $(3)$：\n$$\n\\frac{\\ln(1 - p_{1})}{-k} = T_{1} - T_{0}\n$$\n$$\nT_{0} = T_{1} + \\frac{\\ln(1 - p_{1})}{k}\n$$\n虽然可以将 $k$ 的数值代入此方程，但为了数值稳定性和推导的简洁性，最好是直接根据初始输入推导出 $T_0$ 的表达式。我们可以通过首先求解线性方程组来得到 $kT_{0}$。设 $A = \\ln(1 - p_{1})$ 和 $B = \\ln(1 - p_{2})$。方程组为：\n$$\nA = -kT_{1} + kT_{0}\n$$\n$$\nB = -kT_{2} + kT_{0}\n$$\n将第一个方程乘以 $T_{2}$，第二个方程乘以 $T_{1}$：\n$$\nA T_{2} = -k T_{1} T_{2} + k T_{0} T_{2}\n$$\n$$\nB T_{1} = -k T_{1} T_{2} + k T_{0} T_{1}\n$$\n将第一个新方程减去第二个新方程，得到：\n$$\nA T_{2} - B T_{1} = k T_{0} T_{2} - k T_{0} T_{1} = kT_{0}(T_{2} - T_{1})\n$$\n我们知道 $k(T_{2} - T_{1}) = A - B$。代入此式，我们得到：\n$$\nA T_{2} - B T_{1} = (A - B) T_{0}\n$$\n求解 $T_{0}$：\n$$\nT_{0} = \\frac{A T_{2} - B T_{1}}{A - B} = \\frac{T_{2}\\ln(1-p_{1}) - T_{1}\\ln(1-p_{2})}{\\ln(1-p_{1}) - \\ln(1-p_{2})}\n$$\n这种 $T_0$ 的表达式在计算上是稳健的，因为它避免了中间计算以及可能出现的用一个很小的 $k$ 值作除数的情况。\n\n因此，参数的最终解析表达式为：\n$$\nk = \\frac{\\ln(1 - p_{1}) - \\ln(1 - p_{2})}{T_{2} - T_{1}}\n$$\n$$\nT_{0} = \\frac{T_{2}\\ln(1-p_{1}) - T_{1}\\ln(1-p_{2})}{\\ln(1-p_{1}) - \\ln(1-p_{2})}\n$$\n这些公式将在一个 Python 程序中实现，用以计算四个测试用例的参数值。根据要求，$k$ 和 $T_{0}$ 的结果将四舍五入到小数点后六位。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the parameters k and T0 of the sterility penetrance model\n    P_sterile(T) = 1 - exp(-k*(T - T0)) for a suite of test cases.\n    \"\"\"\n    \n    test_cases = [\n        # Case 1 (canonical hybrid dysgenesis observation)\n        (29, 0.80, 20, 0.05),\n        # Case 2 (broad dynamic range)\n        (18, 0.20, 30, 0.90),\n        # Case 3 (near-baseline penetrance, small temperature increment)\n        (18, 0.01, 19, 0.02),\n        # Case 4 (high penetrance at elevated temperature)\n        (25, 0.50, 35, 0.999),\n    ]\n\n    def estimate_parameters(T1, p1, T2, p2):\n        \"\"\"\n        Estimates k and T0 from two observations (T1, p1) and (T2, p2).\n\n        Args:\n            T1 (float): Temperature of the first observation in degrees Celsius.\n            p1 (float): Sterility penetrance of the first observation (decimal).\n            T2 (float): Temperature of the second observation in degrees Celsius.\n            p2 (float): Sterility penetrance of the second observation (decimal).\n\n        Returns:\n            tuple: A tuple containing the estimated k and T0.\n        \"\"\"\n        # Ensure that p1 and p2 are not 1 to avoid log(0).\n        if p1 >= 1.0 or p2 >= 1.0:\n            raise ValueError(\"Penetrance values must be less than 1.\")\n        \n        # Ensure T1 is not equal to T2 to avoid division by zero.\n        if T1 == T2:\n             raise ValueError(\"Temperatures T1 and T2 must be different.\")\n\n        # Using the derived formulas\n        # Let A = ln(1 - p1) and B = ln(1 - p2)\n        A = np.log(1 - p1)\n        B = np.log(1 - p2)\n        \n        # k = (ln(1-p1) - ln(1-p2)) / (T2 - T1)\n        k = (A - B) / (T2 - T1)\n        \n        # T0 = (T2*ln(1-p1) - T1*ln(1-p2)) / (ln(1-p1) - ln(1-p2))\n        T0 = (T2 * A - T1 * B) / (A - B)\n        \n        return k, T0\n\n    results_as_strings = []\n    for case in test_cases:\n        T1, p1, T2, p2 = case\n        k, T0 = estimate_parameters(T1, p1, T2, p2)\n        \n        # Format the numbers to exactly six decimal places and create the string for the inner list.\n        results_as_strings.append(f\"[{k:.6f},{T0:.6f}]\")\n\n    # Join the inner list strings and wrap them in the outer list brackets.\n    final_output = f\"[{','.join(results_as_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "2835418"}, {"introduction": "在遗传学研究中，我们常常面临“反向问题”：即根据可观察的实验结果（如果蝇的不育率）来推断背后隐藏的遗传状态（如果蝇品系的细胞质型）。考虑到实验数据不可避免地带有噪音和不确定性，我们需要借助强大的统计推断方法。本练习将带您体验现代计算遗传学的核心任务之一，运用贝叶斯推断框架，从杂交数据中推断未知品系的细胞质型，并量化推断的不确定性。[@problem_id:2835381]", "problem": "给定一个简化的、基于机制的 `Drosophila melanogaster` P元件介导的杂交不育模型，该模型将母本细胞质型和父本P元件状态与正反交中的不育结果联系起来。您的目标是使用基于似然的推断来推断三个品系的细胞质型标签，并根据细胞质型分配的后验分布量化错分概率。\n\n基础生物学背景：\n- P元件介导的杂交不育涉及母本细胞质型效应：P细胞质型的母亲传递抑制P元件动员的小RNA，而M细胞质型的母亲则不传递。Q细胞质型的母亲具有抑制性，但不携带自主P元件。因此，当M细胞质型雌性与P细胞质型雄性杂交时，通常会观察到不育，而在反交中则不会。\n- 我们将其抽象为一个由两个概率控制的二元诱导模型：当母亲为M细胞质型且父亲为P细胞质型时，存在一个高不育概率 $\\theta_{\\mathrm{MP}}$，对于所有其他亲本细胞质型组合，则存在一个背景不育概率 $\\theta_{\\mathrm{bg}}$。\n\n数学模型：\n- 存在三个品系，索引为 $0$、$1$ 和 $2$，其细胞质型 $z_i \\in \\{ \\mathrm{M}, \\mathrm{P}, \\mathrm{Q} \\}$ 未知（其中 $i \\in \\{0,1,2\\}$）。使用数字编码 $0 \\mapsto \\mathrm{M}$，$1 \\mapsto \\mathrm{P}$，$2 \\mapsto \\mathrm{Q}$。\n- 对于定向杂交 $(i,j)$（意为品系 $i$ 的雌性与品系 $j$ 的雄性杂交），您观察到 $n_{ij}$ 个记分后代总数中有 $s_{ij}$ 个不育后代。\n- 给定一个联合细胞质型分配 $\\mathbf{z}=(z_0,z_1,z_2)$，杂交 $(i,j)$ 的不育概率为\n  $$ p_{ij}(\\mathbf{z}) = \\begin{cases}\n  \\theta_{\\mathrm{MP}}, & \\text{if } z_i=\\mathrm{M} \\text{ and } z_j=\\mathrm{P},\\\\\n  \\theta_{\\mathrm{bg}}, & \\text{otherwise}.\n  \\end{cases} $$\n- 以 $p_{ij}(\\mathbf{z})$ 为条件，观测值 $s_{ij}$ 被建模为 $\\mathrm{Binomial}(n_{ij}, p_{ij}(\\mathbf{z}))$，并且在给定 $\\mathbf{z}$ 的情况下，不同的定向杂交是条件独立的。\n- 假设每个品系 $i$ 的 $z_i$ 都有一个独立的均匀先验，即 $\\mathbb{P}(z_i=\\mathrm{M})=\\mathbb{P}(z_i=\\mathrm{P})=\\mathbb{P}(z_i=\\mathrm{Q})=1/3$。\n\n推断任务：\n- 在均匀先验下，计算联合分配的后验分布 $\\mathbb{P}(\\mathbf{z}\\mid \\mathcal{D}) \\propto \\prod_{(i,j)} p_{ij}(\\mathbf{z})^{s_{ij}} \\left(1-p_{ij}(\\mathbf{z})\\right)^{n_{ij}-s_{ij}}$，其中 $\\mathcal{D}$ 表示所有定向杂交数据。使用此后验分布来获得每个品系 $k$ 的边际后验，\n  $$ \\mathbb{P}(z_k=c \\mid \\mathcal{D}) = \\sum_{\\mathbf{z}: z_k=c} \\mathbb{P}(\\mathbf{z}\\mid \\mathcal{D}), \\quad c \\in \\{\\mathrm{M},\\mathrm{P},\\mathrm{Q}\\}. $$\n- 对每个品系 $k$，报告通过最大化 $\\mathbb{P}(z_k=c \\mid \\mathcal{D})$ (对 $c$ 进行) 得到的预测细胞质型编码 $\\hat{c}_k \\in \\{0,1,2\\}$；如果出现平局，则选择最小的编码。同时报告相应的错分概率\n  $$ \\pi_k = 1 - \\max_{c \\in \\{\\mathrm{M},\\mathrm{P},\\mathrm{Q}\\}} \\mathbb{P}(z_k=c \\mid \\mathcal{D}). $$\n- 为确保数值稳定性，您可以在对数空间中进行计算，并通过除以所有联合分配的总和来归一化后验。您可以舍去不依赖于 $\\mathbf{z}$ 的二项式系数项。\n\n测试套件与参数：\n对于每个测试用例 $t \\in \\{1,2,3\\}$，您将获得 $(\\theta_{\\mathrm{MP}}, \\theta_{\\mathrm{bg}})$ 和三个品系间的定向杂交数据。定向杂交按固定顺序 $(0,1)$, $(1,0)$, $(0,2)$, $(2,0)$, $(1,2)$, $(2,1)$ 列出，每个杂交由 $(s_{ij}, n_{ij})$ 指定。\n\n- 测试用例 1：$\\theta_{\\mathrm{MP}}=0.8$, $\\theta_{\\mathrm{bg}}=0.05$；定向杂交：\n  - $(0,1)$: $s_{01}=38$, $n_{01}=50$。\n  - $(1,0)$: $s_{10}=3$, $n_{10}=50$。\n  - $(0,2)$: $s_{02}=4$, $n_{02}=50$。\n  - $(2,0)$: $s_{20}=2, n_{20}=50$。\n  - $(1,2)$: $s_{12}=1$, $n_{12}=50$。\n  - $(2,1)$: $s_{21}=2$, $n_{21}=50$。\n\n- 测试用例 2：$\\theta_{\\mathrm{MP}}=0.7$, $\\theta_{\\mathrm{bg}}=0.1$；定向杂交：\n  - $(0,1)$: $s_{01}=2$, $n_{01}=12$。\n  - $(1,0)$: $s_{10}=1$, $n_{10}=12$。\n  - $(0,2)$: $s_{02}=1$, $n_{02}=12$。\n  - $(2,0)$: $s_{20}=2$, $n_{20}=12$。\n  - $(1,2)$: $s_{12}=2$, $n_{12}=12$。\n  - $(2,1)$: $s_{21}=7$, $n_{21}=12$。\n\n- 测试用例 3：$\\theta_{\\mathrm{MP}}=0.85$, $\\theta_{\\mathrm{bg}}=0.02$；定向杂交：\n  - $(0,1)$: $s_{01}=0$, $n_{01}=20$。\n  - $(1,0)$: $s_{10}=1$, $n_{10}=20$。\n  - $(0,2)$: $s_{02}=0$, $n_{02}=20$。\n  - $(2,0)$: $s_{20}=0$, $n_{20}=20$。\n  - $(1,2)$: $s_{12}=0$, $n_{12}=20$。\n  - $(2,1)$: $s_{21}=0$, $n_{21}=20$。\n\n输出规范：\n- 对于每个测试用例，按品系索引顺序 $[0,1,2]$ 输出一个包含三个各品系结果的列表。每个品系的结果是一个双元素列表 $[\\hat{c}_k, \\pi_k]$，其中 $\\hat{c}_k \\in \\{0,1,2\\}$ 是预测的细胞质型编码，$\\pi_k$ 是错分概率，以小数形式表示，并四舍五入到3位小数。\n- 您的程序应生成单行输出，其中包含所有测试用例的结果，形式为一个顶级列表，每个元素对应一个测试用例。例如，一个语法上有效的总输出形式为 $[[[\\hat{c}_0,\\pi_0],[\\hat{c}_1,\\pi_1],[\\hat{c}_2,\\pi_2]], \\ldots]$。", "solution": "该问题要求根据正反交的不育数据，推断索引为 $k \\in \\{0, 1, 2\\}$ 的三个 *Drosophila* 品系的细胞质型。所提供的框架是一个贝叶斯模型，我们需要为该模型计算未知细胞质型分配的后验分布。解决方案的流程是系统地评估每种可能的联合细胞质型分配的后验概率，然后通过边际化来找到每个品系最可能的细胞质型。\n\n每个品系 $z_k$ 的细胞质型可以是M、P或Q三种类型之一，我们分别将其数字编码为 $0$、$1$ 和 $2$。三个品系的联合细胞质型分配是一个向量 $\\mathbf{z} = (z_0, z_1, z_2)$，其中每个分量 $z_k \\in \\{0, 1, 2\\}$。由于有 $3$ 个品系，每个品系有 $3$ 种可能的细胞质型，因此总共有 $3^3 = 27$ 种可能的联合分配。\n\n问题指定了这些分配上的一个均匀先验分布。由于每个品系的细胞质型是独立选择的，概率为 $1/3$，因此任何特定联合分配 $\\mathbf{z}$ 的先验概率是\n$$ \\mathbb{P}(\\mathbf{z}) = \\mathbb{P}(z_0) \\mathbb{P}(z_1) \\mathbb{P}(z_2) = \\left(\\frac{1}{3}\\right)^3 = \\frac{1}{27}. $$\n\n数据，记为 $\\mathcal{D}$，包含三个品系间 $6$ 个定向杂交的观测值：$(0,1)$, $(1,0)$, $(0,2)$, $(2,0)$, $(1,2)$ 和 $(2,1)$。对于每个杂交 $(i,j)$，其中 $i$ 是雌性品系，$j$ 是雄性品系，我们得到总共 $n_{ij}$ 个记分后代中有 $s_{ij}$ 个不育后代。\n\n观测值 $s_{ij}$ 被建模为一个二项式随机变量，$s_{ij} \\sim \\mathrm{Binomial}(n_{ij}, p_{ij}(\\mathbf{z}))$。不育概率 $p_{ij}(\\mathbf{z})$ 根据杂交不育的原理，取决于亲本品系的细胞质型：\n$$ p_{ij}(\\mathbf{z}) = \\begin{cases}\n\\theta_{\\mathrm{MP}}, & \\text{if } z_i=0 \\text{ (M-type) and } z_j=1 \\text{ (P-type)}, \\\\\n\\theta_{\\mathrm{bg}}, & \\text{otherwise}.\n\\end{cases} $$\n此处，$\\theta_{\\mathrm{MP}}$ 是不育杂交（M型雌性 $\\times$ P型雄性）中的高不育概率，而 $\\theta_{\\mathrm{bg}}$ 是所有其他杂交的背景不育概率。\n\n在给定特定联合分配 $\\mathbf{z}$ 的情况下，观测到数据 $\\mathcal{D}$ 的似然是每个杂交结果概率的乘积，这是由于它们的条件独立性：\n$$ L(\\mathbf{z} \\mid \\mathcal{D}) = \\mathbb{P}(\\mathcal{D} \\mid \\mathbf{z}) = \\prod_{(i,j)} \\mathbb{P}(s_{ij} \\mid n_{ij}, p_{ij}(\\mathbf{z})). $$\n二项分布的概率质量函数为 $\\mathbb{P}(s \\mid n, p) = \\binom{n}{s} p^s (1-p)^{n-s}$。\n\n根据贝叶斯定理，一个分配 $\\mathbf{z}$ 的后验概率与似然和先验的乘积成正比：\n$$ \\mathbb{P}(\\mathbf{z} \\mid \\mathcal{D}) \\propto L(\\mathbf{z} \\mid \\mathcal{D}) \\mathbb{P}(\\mathbf{z}). $$\n由于先验 $\\mathbb{P}(\\mathbf{z})$ 是均匀的（对所有 $\\mathbf{z}$ 都是常数），后验简单地与似然成正比：\n$$ \\mathbb{P}(\\mathbf{z} \\mid \\mathcal{D}) \\propto L(\\mathbf{z} \\mid \\mathcal{D}). $$\n出于计算目的，使用对数似然更为稳定。对数似然（不包括不依赖于 $\\mathbf{z}$ 的常数项，即对数二项式系数之和）是：\n$$ \\log L(\\mathbf{z} \\mid \\mathcal{D}) = \\sum_{(i,j)} \\left( s_{ij} \\log(p_{ij}(\\mathbf{z})) + (n_{ij}-s_{ij})\\log(1-p_{ij}(\\mathbf{z})) \\right). $$\n\n求解算法如下：\n1.  遍历所有 $27$ 种可能的联合分配 $\\mathbf{z} = (z_0, z_1, z_2)$。\n2.  对每个 $\\mathbf{z}$，通过对所有 $6$ 个杂交的贡献求和，计算总对数似然 $\\log L(\\mathbf{z} \\mid \\mathcal{D})$。\n3.  未归一化的后验概率与 $\\exp(\\log L(\\mathbf{z} \\mid \\mathcal{D}))$ 成正比。为防止数值下溢或上溢，我们使用 log-sum-exp 技巧进行归一化。令 $M = \\max_{\\mathbf{z}} \\log L(\\mathbf{z} \\mid \\mathcal{D})$。每个 $\\mathbf{z}$ 的归一化后验概率为：\n    $$ \\mathbb{P}(\\mathbf{z} \\mid \\mathcal{D}) = \\frac{\\exp(\\log L(\\mathbf{z} \\mid \\mathcal{D}) - M)}{\\sum_{\\mathbf{z}'} \\exp(\\log L(\\mathbf{z}' \\mid \\mathcal{D}) - M)}. $$\n4.  计算出所有 $27$ 种联合分配的后验分布后，我们通过对所有与该条件一致的联合分配的概率求和，来找到每个品系 $k$ 具有细胞质型 $c \\in \\{0, 1, 2\\}$ 的边际后验概率：\n    $$ \\mathbb{P}(z_k = c \\mid \\mathcal{D}) = \\sum_{\\mathbf{z}: z_k=c} \\mathbb{P}(\\mathbf{z} \\mid \\mathcal{D}). $$\n5.  对于每个品系 $k$，预测的细胞质型 $\\hat{c}_k$ 是使边际后验概率最大化的那个：\n    $$ \\hat{c}_k = \\arg\\max_{c \\in \\{0,1,2\\}} \\mathbb{P}(z_k=c \\mid \\mathcal{D}). $$\n    如果出现平局，选择最小的数字编码。\n6.  品系 $k$ 的错分概率 $\\pi_k$ 是最可能细胞质型的互补概率：\n    $$ \\pi_k = 1 - \\max_{c \\in \\{0,1,2\\}} \\mathbb{P}(z_k=c \\mid \\mathcal{D}). $$\n对每个提供的测试用例，使用指定的参数 $(\\theta_{\\mathrm{MP}}, \\theta_{\\mathrm{bg}})$ 和杂交数据重复此过程。最终输出格式化为列表的列表，其中每个内部列表包含品系 $k=0, 1, 2$ 的配对 $[\\hat{c}_k, \\pi_k]$，并按要求进行四舍五入。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve all test cases for the hybrid dysgenesis problem.\n    \"\"\"\n    test_cases = [\n        {\n            \"params\": (0.8, 0.05),\n            \"crosses\": [(38, 50), (3, 50), (4, 50), (2, 50), (1, 50), (2, 50)],\n        },\n        {\n            \"params\": (0.7, 0.1),\n            \"crosses\": [(2, 12), (1, 12), (1, 12), (2, 12), (2, 12), (7, 12)],\n        },\n        {\n            \"params\": (0.85, 0.02),\n            \"crosses\": [(0, 20), (1, 20), (0, 20), (0, 20), (0, 20), (0, 20)],\n        },\n    ]\n\n    all_results_str_list = []\n    for case in test_cases:\n        case_result = solve_one_case(case[\"params\"], case[\"crosses\"])\n        strain_strs = [f\"[{res[0]},{res[1]}]\" for res in case_result]\n        case_str = f\"[{','.join(strain_strs)}]\"\n        all_results_str_list.append(case_str)\n\n    print(f\"[{','.join(all_results_str_list)}]\")\n\ndef solve_one_case(params, crosses):\n    \"\"\"\n    Solves a single test case of cytotype inference.\n\n    Args:\n        params (tuple): A tuple (theta_mp, theta_bg) of sterility probabilities.\n        crosses (list): A list of tuples (s_ij, n_ij) for the 6 directed crosses.\n\n    Returns:\n        list: A list of [predicted_cytotype, misclassification_prob] for each strain.\n    \"\"\"\n    theta_mp, theta_bg = params\n    \n    # Generate all 27 possible joint assignments for z = (z0, z1, z2)\n    # Cytotype codes: 0:M, 1:P, 2:Q\n    assignments = []\n    for z0 in range(3):\n        for z1 in range(3):\n            for z2 in range(3):\n                assignments.append((z0, z1, z2))\n\n    log_likelihoods = np.zeros(len(assignments))\n    \n    # Fixed order of crosses: (0,1), (1,0), (0,2), (2,0), (1,2), (2,1)\n    cross_indices = [(0, 1), (1, 0), (0, 2), (2, 0), (1, 2), (2, 1)]\n\n    # Pre-calculate log probabilities to avoid re-computation\n    log_theta_mp = np.log(theta_mp)\n    log_1_minus_theta_mp = np.log(1 - theta_mp)\n    log_theta_bg = np.log(theta_bg)\n    log_1_minus_theta_bg = np.log(1 - theta_bg)\n\n    for idx, z in enumerate(assignments):\n        total_log_lik = 0\n        for i, cross_idx in enumerate(cross_indices):\n            s_ij, n_ij = crosses[i]\n            z_i, z_j = z[cross_idx[0]], z[cross_idx[1]]\n\n            # Determine sterility probability p_ij based on parent cytotypes\n            is_dysgenic = (z_i == 0 and z_j == 1) # M female x P male\n            \n            if is_dysgenic:\n                log_lik_cross = s_ij * log_theta_mp + (n_ij - s_ij) * log_1_minus_theta_mp\n            else:\n                log_lik_cross = s_ij * log_theta_bg + (n_ij - s_ij) * log_1_minus_theta_bg\n            \n            total_log_lik += log_lik_cross\n        \n        log_likelihoods[idx] = total_log_lik\n\n    # Normalize log-likelihoods to get posterior probabilities using log-sum-exp trick\n    max_log_lik = np.max(log_likelihoods)\n    post_unnorm = np.exp(log_likelihoods - max_log_lik)\n    norm_const = np.sum(post_unnorm)\n    posterior_probs = post_unnorm / norm_const\n\n    # Calculate marginal posterior probabilities for each strain\n    marginal_posteriors = np.zeros((3, 3))  # Rows: strain, Cols: cytotype\n    for idx, z in enumerate(assignments):\n        marginal_posteriors[0, z[0]] += posterior_probs[idx]\n        marginal_posteriors[1, z[1]] += posterior_probs[idx]\n        marginal_posteriors[2, z[2]] += posterior_probs[idx]\n\n    # Determine predicted cytotype and misclassification probability for each strain\n    results = []\n    for k in range(3):  # For each strain 0, 1, 2\n        probs_k = marginal_posteriors[k, :]\n        max_prob = np.max(probs_k)\n        \n        # np.argmax handles tie-breaking by choosing the smallest index\n        pred_c = np.argmax(probs_k)\n        \n        misclass_prob = 1 - max_prob\n        \n        # Round misclassification probability to 3 decimal places\n        results.append([int(pred_c), round(misclass_prob, 3)])\n        \n    return results\n\nsolve()\n```", "id": "2835381"}]}