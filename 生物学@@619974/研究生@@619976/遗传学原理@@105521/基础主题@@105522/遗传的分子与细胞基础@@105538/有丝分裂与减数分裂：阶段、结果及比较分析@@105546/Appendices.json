{"hands_on_practices": [{"introduction": "准确的染色体分离依赖于精细调控的纠错机制。本练习将深入探讨这一过程的生物物理学核心，使用一个定量模型来探索 Aurora B 激酶活性、物理张力以及分子结构如何协同作用以确保有丝分裂的保真性。通过推导染色体附着稳定性的张力阈值，你将更深刻地理解细胞内精妙的控制系统。[@problem_id:2830064]", "problem": "确保有丝分裂中染色体正确分离的一个核心机制是，由Aurora B激酶驱动的、在动粒上发生的张力依赖性纠错。考虑一个空间分离模型，其中定位于内着丝粒的Aurora B激酶会磷酸化外动粒上稳定微管附着的底物。假设以下基本且经过充分检验的原理和定义为您推导的基础：\n\n- 底物处激酶活性的有效浓度随其与激酶源的距离呈指数衰减：$A(d) = A_{0}\\exp(-d/\\lambda)$，其中$A_{0}$是零间距活性，d是激酶与底物之间的分离距离，$\\lambda$是由分子结构和扩散-反应平衡决定的衰减长度标度。\n- 根据有效的胡克行为，着丝粒-动粒间距随机械张力的增加而增大：$d = T/k_{s}$，其中T是张力，$k_{s}$是有效刚度。\n- 底物的磷酸化速率为 $k_{p} = k_{\\mathrm{cat}}A(d)$，而由局部磷酸酶设定的与之拮抗的去磷酸化速率为常数$k_{d}$。当$k_{p} \\leq k_{d}$时，附着被认为是稳定的；当$k_{p} > k_{d}$时，附着则不稳定。\n- 降低的Aurora B激酶活性（例如，由于部分抑制或定位减少）通过作用于$A_{0}$的乘法因子$0 < \\alpha \\leq 1$来建模，即$A_{0} \\to \\alpha A_{0}$。\n\n任务：\n\n1. 从这些原理出发，推导区分不稳定附着与稳定附着的阈值张力$T_{\\mathrm{th}}(\\alpha)$的显式解析表达式，该表达式是$\\alpha$、$k_{s}$、$\\lambda$、$k_{\\mathrm{cat}}$、$A_{0}$和$k_{d}$的函数。\n2. 与正确的双向附着相比，错向附着通常产生中等大小的张力$T_{m}$。定义$\\alpha_{c}$为在张力$T_{m}$下的错向附着达到稳定状态（即$T_{m} \\geq T_{\\mathrm{th}}(\\alpha)$）时，激酶活性所能达到的最大分数。使用您推导出的判据，以闭合形式求出$\\alpha_{c}$，然后用以下科学上合理的参数对其进行数值计算：$k_{s} = 0.5\\,\\mathrm{pN/nm}$，$\\lambda = 20\\,\\mathrm{nm}$，$(k_{\\mathrm{cat}}A_{0})/k_{d} = 50$，以及$T_{m} = 5\\,\\mathrm{pN}$。\n\n将您的最终答案表示为一个无量纲小数，并四舍五入到四位有效数字。", "solution": "问题陈述提出了一个关于有丝分裂中张力依赖性纠错的定量模型。给定条件是一组定义明确的物理和生物化学关系：\n- 激酶活性作为距离的函数：$A(d) = A_{0}\\exp(-d/\\lambda)$。\n- 通过因子$\\alpha$降低激酶活性的效应：$A(d, \\alpha) = (\\alpha A_{0})\\exp(-d/\\lambda)$。\n- 张力与动粒间距之间的关系：$d = T/k_{s}$。\n- 磷酸化速率：$k_{p} = k_{\\mathrm{cat}}A(d, \\alpha)$。\n- 恒定的去磷酸化速率：$k_{d}$。\n- 附着稳定性的判据：当磷酸化速率不超过去磷酸化速率时，即$k_{p} \\leq k_{d}$，附着是稳定的。不稳定与稳定之间的阈值发生在$k_{p} = k_{d}$处。\n\n该问题具有科学依据，使用了标准的生物物理近似（指数衰减、胡克定律）。该问题是良定的，为求得唯一解提供了所有必要的参数和条件。其语言客观而精确。因此，该问题是有效的，我们可以继续进行推导。\n\n任务1：推导阈值张力$T_{\\mathrm{th}}(\\alpha)$。\n\n区分不稳定状态（$k_{p} > k_{d}$）和稳定状态（$k_{p} \\leq k_{d}$）的阈值条件由以下等式定义：\n$$k_{p} = k_{d}$$\n代入包含活性降低因子$\\alpha$的磷酸化速率$k_{p}$的给定表达式：\n$$k_{\\mathrm{cat}} A(d_{\\mathrm{th}}, \\alpha) = k_{d}$$\n$$k_{\\mathrm{cat}} (\\alpha A_{0}) \\exp(-d_{\\mathrm{th}}/\\lambda) = k_{d}$$\n此处，$d_{\\mathrm{th}}$是使此等式成立的阈值分离距离。我们必须解出$d_{\\mathrm{th}}$。\n$$\\exp(-d_{\\mathrm{th}}/\\lambda) = \\frac{k_{d}}{\\alpha k_{\\mathrm{cat}} A_{0}}$$\n为了分离出$d_{\\mathrm{th}}$，我们对等式两边取自然对数：\n$$\\ln\\left(\\exp(-d_{\\mathrm{th}}/\\lambda)\\right) = \\ln\\left(\\frac{k_{d}}{\\alpha k_{\\mathrm{cat}} A_{0}}\\right)$$\n$$- \\frac{d_{\\mathrm{th}}}{\\lambda} = \\ln\\left(\\frac{k_{d}}{\\alpha k_{\\mathrm{cat}} A_{0}}\\right)$$\n使用对数恒等式$\\ln(1/x) = -\\ln(x)$，我们可以写成：\n$$- \\frac{d_{\\mathrm{th}}}{\\lambda} = -\\ln\\left(\\frac{\\alpha k_{\\mathrm{cat}} A_{0}}{k_{d}}\\right)$$\n$$d_{\\mathrm{th}} = \\lambda \\ln\\left(\\frac{\\alpha k_{\\mathrm{cat}} A_{0}}{k_{d}}\\right)$$\n问题要求的是阈值张力$T_{\\mathrm{th}}$，而不是距离。张力与距离通过有效的胡克行为相关联，$T = k_{s} d$。因此，阈值张力为$T_{\\mathrm{th}} = k_{s} d_{\\mathrm{th}}$。\n代入$d_{\\mathrm{th}}$的表达式，我们得到阈值张力作为$\\alpha$的函数的显式解析表达式：\n$$T_{\\mathrm{th}}(\\alpha) = k_{s} \\lambda \\ln\\left(\\frac{\\alpha k_{\\mathrm{cat}} A_{0}}{k_{d}}\\right)$$\n至此完成第一个任务。如果一个附着所承受的张力T大于或等于此阈值，即$T \\geq T_{\\mathrm{th}}(\\alpha)$，那么该附着是稳定的，因为更高的张力会导致更大的分离、更低的磷酸化水平，从而实现稳定。\n\n任务2：确定$\\alpha_{c}$并进行数值计算。\n\n根据题意，$\\alpha_{c}$是使得张力为$T_{m}$的错向附着达到稳定时，激酶活性所能达到的最大分数。稳定的条件是$T_{m} \\geq T_{\\mathrm{th}}(\\alpha)$。由于$T_{\\mathrm{th}}(\\alpha)$是$\\alpha$的单调递增函数，满足此不等式的最大$\\alpha$值，即$\\alpha_{c}$，应在等式成立时取到：\n$$T_{m} = T_{\\mathrm{th}}(\\alpha_{c})$$\n使用先前推导出的$T_{\\mathrm{th}}(\\alpha)$表达式：\n$$T_{m} = k_{s} \\lambda \\ln\\left(\\frac{\\alpha_{c} k_{\\mathrm{cat}} A_{0}}{k_{d}}\\right)$$\n我们现在必须解这个方程以求出$\\alpha_{c}$。首先，我们分离出对数项：\n$$\\frac{T_{m}}{k_{s} \\lambda} = \\ln\\left(\\frac{\\alpha_{c} k_{\\mathrm{cat}} A_{0}}{k_{d}}\\right)$$\n接下来，我们对等式两边取以e为底的指数：\n$$\\exp\\left(\\frac{T_{m}}{k_{s} \\lambda}\\right) = \\frac{\\alpha_{c} k_{\\mathrm{cat}} A_{0}}{k_{d}}$$\n最后，我们解出$\\alpha_{c}$：\n$$\\alpha_{c} = \\left(\\frac{k_{d}}{k_{\\mathrm{cat}} A_{0}}\\right) \\exp\\left(\\frac{T_{m}}{k_{s} \\lambda}\\right)$$\n这就是所要求的$\\alpha_{c}$的闭合形式表达式。\n\n现在，我们必须使用所提供的参数对该表达式进行数值计算：\n- $k_{s} = 0.5\\,\\mathrm{pN/nm}$\n- $\\lambda = 20\\,\\mathrm{nm}$\n- $(k_{\\mathrm{cat}}A_{0})/k_{d} = 50$\n- $T_{m} = 5\\,\\mathrm{pN}$\n\n首先，我们计算乘积$k_{s} \\lambda$：\n$$k_{s} \\lambda = (0.5\\,\\mathrm{pN/nm}) \\times (20\\,\\mathrm{nm}) = 10\\,\\mathrm{pN}$$\n指数的自变量是一个无量纲比值，符合要求：\n$$\\frac{T_{m}}{k_{s} \\lambda} = \\frac{5\\,\\mathrm{pN}}{10\\,\\mathrm{pN}} = 0.5$$\n指前因子是给定无量纲比值的倒数：\n$$\\frac{k_{d}}{k_{\\mathrm{cat}} A_{0}} = \\frac{1}{(k_{\\mathrm{cat}}A_{0})/k_{d}} = \\frac{1}{50} = 0.02$$\n将这些值代入$\\alpha_{c}$的表达式中：\n$$\\alpha_{c} = \\frac{1}{50} \\exp(0.5)$$\n使用数值$\\exp(0.5) \\approx 1.64872127...$：\n$$\\alpha_{c} \\approx 0.02 \\times 1.64872127... \\approx 0.032974425...$$\n问题要求答案四舍五入到四位有效数字。\n$$\\alpha_{c} \\approx 0.03297$$\n该结果表明，对于一个承受$5\\,\\mathrm{pN}$低张力的错向附着，激酶活性必须降低到其正常水平的约$3.3\\%$，才能实现稳定并防止后期提前启动。", "answer": "$$\\boxed{0.03297}$$", "id": "2830064"}, {"introduction": "当减数分裂出错时，其后果会体现在最终产生的配子的基因构成中。本练习利用经典的遗传学工具——酵母四分体分析，从一个可观察的表型（孢子存活率）出发，反向推断其潜在的机制性错误。你将应用概率论和贝叶斯推理的原理来区分减数分裂 I 期和 II 期的错误，这是遗传诊断中的一项关键技能。[@problem_id:2830089]", "problem": "一个二倍体 `Saccharomyces cerevisiae` 菌株，其单条目标染色体上的着丝粒近端标记是杂合的，该菌株经过减数分裂产生含有 $4$ 个孢子的子囊。您进行四分体解剖，并且仅记录孢子的存活情况。假设以下与遗传学原理一致的基本依据：\n\n- 在减数分裂 I (MI) 中，同源染色体分离至相反的两极；在减数分裂 II (MII) 中，姐妹染色单体分离。减数分裂 I 中的不分离事件（MI 不分离）导致两条同源染色体在减数分裂后期 I 移向同一极；减数分裂 II 中的不分离事件（MII 不分离）导致单条同源染色体的两条姐妹染色单体在减数分裂后期 II 移向同一极。\n- 一个缺体（缺少目标染色体）的单倍体孢子，其存活概率为 $0$（即致死概率为 $1$），因为该目标染色体携带必需基因。\n- 一个二体（携带两份目标染色体）的单倍体孢子，其存活概率为 $q \\in (0,1)$，且每个二体孢子的存活事件相互独立。\n- 一个对于目标染色体是整倍体（一份拷贝）的单倍体孢子，其存活概率为 $1$。\n\n对于一次减数分裂，如果目标染色体仅发生一次不分离事件（且无其他缺陷），四分体解剖会产生两种机制类别之一：减数分裂 I (MI) 不分离或减数分裂 II (MII) 不分离。设 $\\Omega$ 表示在观察四分体的存活模式之前，目标染色体的不分离事件是 MI 而非 MII 的先验比率，即 $\\Omega = \\frac{P(\\text{MI})}{P(\\text{MII})}$。\n\n仅根据上述定义和减数分裂各阶段的机制，完成以下任务：\n\n1. 对于 MI 不分离的情况，推导四分体中存活孢子数量的分布，并以 $q$ 的函数形式表示。\n2. 对于 MII 不分离的情况，推导四分体中存活孢子数量的分布，并以 $q$ 的函数形式表示。\n3. 使用贝叶斯法则和您推导出的分布，得出一个闭式表达式，用于表示一个含有恰好 $2$ 个存活孢子的四分体源于 MI 而非 MII 的后验比率，该表达式以 $\\Omega$ 和 $q$ 表示。\n\n您的最终答案必须是针对问题 $3$ 所要求的后验比率的单个闭式解析表达式。无需进行数值计算或四舍五入。", "solution": "该问题陈述清晰且具有科学依据，基于减数分裂染色体分离的基本原理和基础概率论。它要求基于一个特定的遗传模型推导后验比率。我们将首先确定每种不分离类型所产生的孢子组成，然后推导存活孢子数量的概率分布，最后应用贝叶斯法则。\n\n让我们从第一个任务开始：推导减数分裂 I (MI) 不分离情况下存活孢子的分布。\n一个二倍体细胞起始时含有一对同源染色体。DNA 复制后，细胞含有两对姐妹染色单体，总共 $4$ 条染色单体。\n在 MI 不分离中，两条同源染色体（每条包含两条姐妹染色单体）在减数分裂后期 I 未能分离，并移向同一极。另一极则没有接收到该染色体的任何拷贝。\n接收到两条同源染色体的次级母细胞进入减数分裂 II，其中姐妹染色单体正常分离。这次分裂产生两个孢子，每个孢子含有该染色体的两个非同源拷贝，使它们成为二体 ($n+1$)。\n另一个没有接收到染色体的次级母细胞也进行分裂。这会产生两个对于目标染色体是缺体 ($n-1$) 的孢子。\n因此，一次 MI 不分离事件产生一个含有 $2$ 个二体孢子和 $2$ 个缺体孢子的四分体。\n\n根据问题陈述：\n- 缺体孢子的存活概率为 $0$。它们对存活孢子计数的贡献为 $0$。\n- 每个二体孢子的存活概率为 $q$，且相互独立。\n\n设 $k$ 为四分体中存活孢子的数量。这 $2$ 个缺体孢子永不存活。存活孢子的数量完全由这 $2$ 个二体孢子的结果决定。这遵循试验次数 $n=2$、成功（存活）概率 $p=q$ 的二项分布。在 MI 不分离条件下，存活孢子数量 $k$ 的概率质量函数 $P(k|\\text{MI})$ 为：\n- 对于 $k=0$：两个二体孢子均不存活。$P(k=0|\\text{MI}) = \\binom{2}{0}q^{0}(1-q)^{2} = (1-q)^2$。\n- 对于 $k=1$：一个二体孢子存活，另一个不存活。$P(k=1|\\text{MI}) = \\binom{2}{1}q^{1}(1-q)^{1} = 2q(1-q)$。\n- 对于 $k=2$：两个二体孢子均存活。$P(k=2|\\text{MI}) = \\binom{2}{2}q^{2}(1-q)^{0} = q^2$。\n- 对于 $k>2$：这是不可能的，因为只有 $2$ 个可能存活的孢子。$P(k=3|\\text{MI}) = 0$ 且 $P(k=4|\\text{MI}) = 0$。\n\n接下来，我们处理第二个任务：推导减数分裂 II (MII) 不分离情况下存活孢子的分布。\n在这种情况下，减数分裂 I 正常进行。两条同源染色体分离至相反的两极。这产生两个次级母细胞，每个含有一条复制后的染色体（即一对姐妹染色单体）。\n随后进行减数分裂 II。其中一个次级母细胞正常分裂，其姐妹染色单体分离，产生两个整倍体 ($n$) 孢子。\n另一个次级母细胞发生不分离事件，其两条姐妹染色单体未能分离并移向同一极。这次分裂产生一个二体 ($n+1$) 孢子和一个缺体 ($n-1$) 孢子。\n因此，一次 MII 不分离事件产生一个含有 $2$ 个整倍体孢子、 $1$ 个二体孢子和 $1$ 个缺体孢子的四分体。\n\n根据问题陈述：\n- 整倍体孢子的存活概率为 $1$。\n- 缺体孢子的存活概率为 $0$。\n- 二体孢子的存活概率为 $q$。\n\n设 $k$ 为存活孢子的数量。$2$ 个整倍体孢子总是存活的，对计数贡献为 $2$。$1$ 个缺体孢子永不存活，贡献为 $0$。因此，存活孢子的总数 $k$ 等于 $2$ 加上来自单个二体孢子的存活孢子数。\n- 如果二体孢子不存活（概率为 $1-q$），则存活孢子总数为 $k=2+0=2$。\n- 如果二体孢子存活（概率为 $q$），则存活孢子总数为 $k=2+1=3$。\n\n在 MII 不分离条件下，存活孢子数量 $k$ 的概率质量函数 $P(k|\\text{MII})$ 为：\n- 对于 $k=2$：这在二体孢子不存活时发生。$P(k=2|\\text{MII}) = 1-q$。\n- 对于 $k=3$：这在二体孢子存活时发生。$P(k=3|\\text{MII}) = q$。\n- 对于其他 $k$ 值：$P(k \\notin \\{2,3\\}|\\text{MII}) = 0$。\n\n最后，我们执行第三个任务：推导一个含有恰好 $k=2$ 个存活孢子的四分体源于 MI 而非 MII 不分离的后验比率。后验比率定义为 $\\frac{P(\\text{MI}|k=2)}{P(\\text{MII}|k=2)}$。\n根据贝叶斯法则，在给定一个观察结果（例如 $k=2$）的条件下，一个事件（例如 MI）的后验概率为 $P(\\text{MI}|k=2) = \\frac{P(k=2|\\text{MI})P(\\text{MI})}{P(k=2)}$。\n因此，后验概率之比为：\n$$ \\frac{P(\\text{MI}|k=2)}{P(\\text{MII}|k=2)} = \\frac{\\frac{P(k=2|\\text{MI})P(\\text{MI})}{P(k=2)}}{\\frac{P(k=2|\\text{MII})P(\\text{MII})}{P(k=2)}} $$\n数据的边缘概率项 $P(k=2)$ 被消去，得到的后验比率（a posteriori odds）等于先验比率与贝叶斯因子（或似然比）的乘积：\n$$ \\frac{P(\\text{MI}|k=2)}{P(\\text{MII}|k=2)} = \\left(\\frac{P(\\text{MI})}{P(\\text{MII})}\\right) \\times \\left(\\frac{P(k=2|\\text{MI})}{P(k=2|\\text{MII})}\\right) $$\n问题给出的先验比率为 $\\Omega = \\frac{P(\\text{MI})}{P(\\text{MII})}$。\n根据我们上面的推导，我们得到观察值 $k=2$ 的似然函数：\n- $P(k=2|\\text{MI}) = q^2$\n- $P(k=2|\\text{MII}) = 1-q$\n\n将这些表达式代入后验比率公式，得到：\n$$ \\frac{P(\\text{MI}|k=2)}{P(\\text{MII}|k=2)} = \\Omega \\times \\frac{q^2}{1-q} $$\n该表达式就是后验比率的最终闭式解，以给定的参数 $\\Omega$ 和 $q$ 表示。", "answer": "$$ \\boxed{\\Omega \\frac{q^2}{1-q}} $$", "id": "2830089"}, {"introduction": "减数分裂不仅仅是染色体分离的过程，它还通过重组产生遗传多样性。本练习将视角提升到基因组尺度，要求你应用一个统计学指标——基尼系数（Gini coefficient）——来量化重组事件的分布。通过比较有和没有关键基因 $PRDM9$ 的物种，你将练习计算技能并探索减数分裂过程的演化。[@problem_id:2830034]", "problem": "您会获得多个物种的离散重组热点强度图谱，每个图谱代表了一个基因组在划分为 $n$ 个等长区间后，减数分裂交换的相对密度。每个图谱是一个非负实数的有限列表 $\\{x_i\\}_{i=1}^n$，其總重组与 $\\sum_{i=1}^n x_i$ 成正比。同时提供一个二元指示符，用以标明一个物种是否编码PR结构域锌指蛋白9（PRDM$9$）。您需要仅根据减数分裂和统计学的第一性原理，计算每个物种重组定位不均衡性的定量度量，然后比较携带与不携带PRDM$9$的物种。\n\n基本原理：\n- 在减数分裂中，同源重组局限于热点区域，导致交换沿基因组呈现非均匀分布。这种分布可以被视为在基因组离散化为等长区间上的一个非负测度。\n- 一个非负分布的Lorenz曲线 $L(p)$ 是总量的累积份额与定义域的累积份额之间的函数关系，其中 $p \\in [0,1]$ 表示当区间按强度递增排序时，区间的累积比例。\n- Gini系数 $G$ 定义为均等线 $y = p$ 与Lorenz曲线 $y = L(p)$ 之间面积的两倍，它量化了分布的不均衡性，其中 $G = 0$ 表示完全均等，越大的 $G$ 表示越强的集中度。\n\n任务：\n- 对于每个物种，将其重组强度图谱 $\\{x_i\\}_{i=1}^n$ 按上述方式处理。使用Lorenz曲线的定义，且不假设任何闭式解快捷方式，计算该有限离散分布的Gini系数 $G$ (假设 $x_i \\ge 0$ 且 $\\sum_{i=1}^n x_i > 0$)。\n- 根据PRDM$9$指示符（存在与否）将物种分为两组。计算每组内的平均Gini系数。\n- 计算这两组均值的绝对差，并报告携带PRDM$9$组的均值是否大于不携带PRDM$9$组的均值。\n\n数值输出要求：\n- 所有浮点数结果必须四舍五入到小数点后恰好$6$位。\n- 不涉及物理单位。\n- 最终输出必须为单行，内容是一个用方括号括起来的逗号分隔列表。该列表必须按顺序包含：\n  $1)$ 每个物种的Gini系数（按照下面指定的测试用例顺序），\n  $2)$ 携带PRDM$9$组的平均Gini系数，\n  $3)$ 不携带PRDM$9$组的平均Gini系数，\n  $4)$ 这两个均值之间的绝对差，\n  $5)$ 一个布尔值，指示携带PRDM$9$组的均值是否大于不携带PRDM$9$组的均值。\n  示例格式： $[g_1,g_2,\\dots,\\mu_{\\mathrm{present}},\\mu_{\\mathrm{absent}},\\Delta,\\mathrm{True}]$。\n\n测试套件：\n请严格使用以下五个物种的热点图谱（每个列表包含 $n = 8$ 个区间强度）和PRDM$9$存在性指示符，并遵循指定顺序：\n- 物种 $S_1$ (携带PRDM$9$): $[0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0]$。\n- 物种 $S_2$ (携带PRDM$9$): $[0.2, 0.5, 0.5, 1.0, 2.0, 0.2, 0.1, 0.5]$。\n- 物种 $S_3$ (不携带PRDM$9$): $[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]$。\n- 物种 $S_4$ (不携带PRDM$9$): $[1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0]$。\n- 物种 $S_5$ (不携带PRDM$9$): $[1.1, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]$。\n\n您的程序必须内嵌这些测试用例（无输入），并以要求的格式产生恰好一行的输出，其中浮点数需四舍五入到恰好6位小数。", "solution": "该问题是有效的，因为它具有科学依据、问题是良定的、客观的，并为得出唯一解提供了所有必要信息。任务是使用Gini系数来量化重组热点分布的不均衡性，并比较携带与不携带$PRDM9$基因的物种之间的平均不均衡性。\n\n该分析的基本原理是Lorenz曲线，它提供了概率分布不均衡性的图形化表示。对于一个跨越 $n$ 个基因组区间的非负离散重组强度分布 $\\{x_i\\}_{i=1}^n$，Gini系数 $G$ 是从Lorenz曲线 $L(p)$ 推导出来的。系数 $G$ 是一个介于0和1之间的标量值，其中 $G=0$ 表示完全均等（均匀分布），而趋近于1的值表示最大程度的不均等（集中）。\n\n计算给定物种重组图谱 $\\{x_i\\}_{i=1}^n$ 的Gini系数的算法步骤如下：\n\n步骤1：数据准备\n首先，将重组强度 $\\{x_i\\}$ 按非递减顺序排序，得到有序集合 $\\{x_{(i)}\\}_{i=1}^n$，其中 $x_{(1)} \\le x_{(2)} \\le \\dots \\le x_{(n)}$。总重组强度计算为总和 $S = \\sum_{i=1}^n x_i$。问题规定 $S > 0$。如果 $S=0$，则意味着所有 $x_i=0$，表示完全均等，因此 $G=0$。\n\n步骤2：构造Lorenz曲线\n该离散分布的Lorenz曲线是一个连接点 $(p_k, L_k)$（$k \\in \\{0, 1, \\dots, n\\}$）的分段线性函数。水平坐标 $p_k$ 代表按强度排序后基因组区间的累积比例。这些点定义在 $p_k = k/n$。垂直坐标 $L_k$ 代表总重组强度的累积比例。其计算方法为排序后强度的累积和，并用总和 $S$ 进行归一化：\n$$ L_k = \\frac{\\sum_{i=1}^k x_{(i)}}{S} $$\n此构造定义了 $n+1$ 个点，从 $(p_0, L_0) = (0, 0)$ 开始，到 $(p_n, L_n) = (1, 1)$ 结束，因为 $\\sum_{i=1}^n x_{(i)} = S$。\n\n步骤3：计算Gini系数\nGini系数 $G$ 定义为完全均等线 ($y=p$) 与构造的Lorenz曲线 $L(p)$ 之间面积的两倍。从 $p=0$ 到 $p=1$，完全均等线下的面积是 $\\frac{1}{2}$。必须计算Lorenz曲线下的面积 $A_L$。由于 $L(p)$ 是一个分段线性函数，其积分可以使用梯形法则精确计算。该面积是 $n$ 个梯形面积的总和，每个梯形的宽度为 $\\Delta p = p_k - p_{k-1} = 1/n$。\n$$ A_L = \\int_0^1 L(p) \\, dp = \\sum_{k=1}^n \\frac{1}{2} (L_{k-1} + L_k) (p_k - p_{k-1}) = \\frac{1}{2n} \\sum_{k=1}^n (L_{k-1} + L_k) $$\n然后通过以下公式求得Gini系数：\n$$ G = 2 \\left( \\frac{1}{2} - A_L \\right) = 1 - 2A_L $$\n将此过程应用于五个物种中的每一个的重组图谱，以获得它们各自的Gini系数 $G_1, G_2, G_3, G_4, G_5$。\n\n步骤4：分组分析与比较\n根据提供的$PRDM9$存在性二元指示符，将物种划分为两组。\n第一组 (携带$PRDM9$)：物种 $S_1$、$S_2$。\n第二组 (不携带$PRDM9$)：物种 $S_3$、$S_4$、$S_5$。\n\n计算每组的平均Gini系数。设携带PRDM9物种的Gini系数集合为 $\\mathcal{G}_{\\text{present}} = \\{G_1, G_2\\}$，不携带PRDM9物种的Gini系数集合为 $\\mathcal{G}_{\\text{absent}} = \\{G_3, G_4, G_5\\}$。均值为：\n$$ \\mu_{\\mathrm{present}} = \\frac{1}{|\\mathcal{G}_{\\text{present}}|} \\sum_{G_i \\in \\mathcal{G}_{\\text{present}}} G_i $$\n$$ \\mu_{\\mathrm{absent}} = \\frac{1}{|\\mathcal{G}_{\\text{absent}}|} \\sum_{G_i \\in \\mathcal{G}_{\\text{absent}}} G_i $$\n最后，计算这些均值之间的绝对差 $\\Delta = |\\mu_{\\mathrm{present}} - \\mu_{\\mathrm{absent}}|$。我们还确定不等式 $\\mu_{\\mathrm{present}} > \\mu_{\\mathrm{absent}}$ 的真值。所有得到的浮点数都按要求四舍五入到六位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of calculating Gini coefficients for recombination maps\n    and comparing groups based on PRDM9 presence.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\"name\": \"S1\", \"prdm9_present\": True, \"map\": [0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0]},\n        {\"name\": \"S2\", \"prdm9_present\": True, \"map\": [0.2, 0.5, 0.5, 1.0, 2.0, 0.2, 0.1, 0.5]},\n        {\"name\": \"S3\", \"prdm9_present\": False, \"map\": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]},\n        {\"name\": \"S4\", \"prdm9_present\": False, \"map\": [1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0]},\n        {\"name\": \"S5\", \"prdm9_present\": False, \"map\": [1.1, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}\n    ]\n\n    def compute_gini(x: list[float]) -> float:\n        \"\"\"\n        Computes the Gini coefficient for a discrete distribution {x_i}.\n        The calculation is based on the area under the Lorenz curve, as per the problem.\n        \"\"\"\n        x_arr = np.array(x, dtype=np.float64)\n        n = len(x_arr)\n        if n == 0:\n            return 0.0\n        \n        # Total sum must be positive, otherwise Gini is not well-defined or is 0.\n        total_sum = np.sum(x_arr)\n        if total_sum == 0:\n            return 0.0  # Perfect equality\n\n        # Sort the array\n        x_sorted = np.sort(x_arr)\n\n        # Create cumulative sums, prepend 0 for the (0,0) point of the Lorenz curve\n        cum_sums = np.cumsum(x_sorted)\n        \n        # Lorenz curve y-coordinates L_k\n        lorenz_y = np.concatenate(([0], cum_sums / total_sum))\n        \n        # Lorenz curve x-coordinates p_k = k/n\n        # The spacing dx = 1/n is constant.\n        \n        # Calculate the area under the Lorenz curve using the trapezoidal rule\n        # np.trapz integrates y-values with a given spacing.\n        area_lorenz = np.trapz(lorenz_y, dx=1.0/n)\n        \n        # Gini coefficient is 1 - 2 * (area under Lorenz curve)\n        gini_coefficient = 1.0 - 2.0 * area_lorenz\n        \n        return gini_coefficient\n\n    gini_coefficients = []\n    prdm9_present_ginis = []\n    prdm9_absent_ginis = []\n\n    for case in test_cases:\n        g = compute_gini(case[\"map\"])\n        gini_coefficients.append(g)\n        if case[\"prdm9_present\"]:\n            prdm9_present_ginis.append(g)\n        else:\n            prdm9_absent_ginis.append(g)\n\n    # Calculate group means\n    mean_present = np.mean(prdm9_present_ginis) if prdm9_present_ginis else 0.0\n    mean_absent = np.mean(prdm9_absent_ginis) if prdm9_absent_ginis else 0.0\n\n    # Calculate absolute difference\n    diff_means = abs(mean_present - mean_absent)\n\n    # Compare the means\n    is_present_greater = mean_present > mean_absent\n\n    # Format final results, rounding to 6 decimal places\n    final_output_list = [round(g, 6) for g in gini_coefficients]\n    final_output_list.append(round(mean_present, 6))\n    final_output_list.append(round(mean_absent, 6))\n    final_output_list.append(round(diff_means, 6))\n    final_output_list.append(is_present_greater)\n    \n    # Generate the output string in the specified format\n    output_str = f\"[{','.join(map(str, final_output_list))}]\"\n\n    print(output_str)\n\nsolve()\n```", "id": "2830034"}]}