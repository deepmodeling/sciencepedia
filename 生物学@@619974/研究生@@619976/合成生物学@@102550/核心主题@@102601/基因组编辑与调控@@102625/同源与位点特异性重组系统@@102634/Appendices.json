{"hands_on_practices": [{"introduction": "在我们能够有效地利用位点特异性重组酶进行工程改造之前, 我们必须掌握其核心催化机制。这项练习 [@problem_id:2744910] 挑战你从第一性原理出发, 推理在酪氨酸和丝氨酸重组酶中使其催化残基失效的后果。通过思考这些“计算机模拟”中的突变, 你将建立一个稳固的思维模型, 来理解支撑 DNA 切割、链交换和再连接的化学事件。", "problem": "您正在为一种合成开关设计位点特异性重组模块。您考虑使用酪氨酸重组酶（如作用于`LoxP`位点的`Cre`或作用于`FRT`位点的`Flp`），或者使用丝氨酸重组酶（如作用于其同源`att`位点的`Bxb1`）。您制造了两种突变体：一种酪氨酸重组酶，其催化性酪氨酸被苯丙氨酸取代(Y→F)；以及一种丝氨酸重组酶，其催化性丝氨酸被丙氨酸取代(S→A)。然后，您在体外对标准底物进行了切割、链交换和再连接的检测。\n\n请使用以下基本事实来推断其机理上的后果：\n\n- 在酪氨酸和丝氨酸重组酶中，催化过程均通过共价催化进行，其中活性位点的羟基对一个易裂的脱氧核糖核酸(DNA)磷酸基团进行亲核攻击，形成一个瞬时的共价中间体。对于酪氨酸重组酶，该中间体是一个$3'$-磷酸酪氨酸，并带有一个游离的$5'$-羟基离去基团；对于丝氨酸重组酶，则是一个$5'$-磷酸丝氨酸，并带有一个游离的$3'$-羟基离去基团。\n- 酪氨酸重组酶通过两次连续的单链交换实现重组，该过程经过一个Holliday交叉中间体；再连接是切割的微观逆过程，利用游离的$5'$-羟基攻击$3'$-磷酸酪氨酸。\n- 丝氨酸重组酶切割所有$4$条链，产生双链断裂，其$5'$端带有共价的酶-DNA连接，而$3'$端游离，然后执行亚基旋转，并通过游离的$3'$-羟基攻击$5'$-磷酸丝氨酸来进行再连接。\n- 特异性DNA结合和联会本身并不需要对磷酸二酯键进行催化切割。\n\n在这些条件下，哪些陈述最能准确预测Y→F和S→A突变的机理后果？\n\nA. 在酪氨酸(Y→F)和丝氨酸(S→A)重组酶中，切割都被终止，因为催化性羟基亲核试剂被移除；特异性DNA结合和联会得以保留；没有共价的蛋白质-DNA中间体形成；因此链交换和再连接都不会发生。\n\nB. 酪氨酸重组酶Y→F突变体仍然可以通过激活游离的$5'$-羟基来攻击游离的$3'$-磷酸基团，从而对预先切割的底物进行再连接，因为再连接不需要酶-DNA共价中间体。\n\nC. 丝氨酸重组酶S→A突变体支持单次双链断裂和随后的再连接，因为活性位点中的另一个丝氨酸可作为低效率的亲核试剂进行替代。\n\nD. 酪氨酸重组酶Y→F突变体将积累稳定的Holliday交叉中间体，因为切口和链交换发生在与DNA共价连接之前。\n\nE. 丝氨酸重组酶S→A突变体可以形成联会复合物并维持位点的拓扑对齐，但由于所有$4$条链均未被切割，因此无法执行亚基旋转；因此再连接也不会发生。", "solution": "首先将对问题陈述进行严格验证。\n\n### 步骤1：提取已知条件\n问题提供了以下信息：\n*   **所考虑的系统**：\n    1.  酪氨酸重组酶（例如，作用于`LoxP`位点的`Cre`或作用于`FRT`位点的`Flp`）。\n    2.  丝氨酸重组酶（例如，作用于其同源`att`位点的`Bxb1`）。\n*   **设计的突变体**：\n    1.  酪氨酸重组酶突变体：催化性酪氨酸被苯丙氨酸取代(Y→F)。\n    2.  丝氨酸重组酶突变体：催化性丝氨酸被丙氨酸取代(S→A)。\n*   **检测**：在体外对标准底物进行切割、链交换和再连接的检测。\n*   **基本事实**：\n    1.  **催化机理**：两种重组酶都使用共价催化，其中活性位点羟基($-\\text{OH}$)攻击DNA磷酸基团，形成一个瞬时的共价蛋白质-DNA中间体。\n    2.  **酪氨酸重组酶中间体**：形成一个$3'$-磷酸酪氨酸键，释放一个游离的$5'$-羟基。\n    3.  **丝氨酸重组酶中间体**：形成一个$5'$-磷酸丝氨酸键，释放一个游离的$3'$-羟基。\n    4.  **酪氨酸重组酶途径**：重组通过两次连续的单链交换发生，经过一个Holliday交叉中间体。再连接是切割的微观逆过程，其中游离的$5'$-羟基攻击$3'$-磷酸酪氨酸中间体。\n    5.  **丝氨酸重组酶途径**：所有$4$条链都被切割，产生双链断裂，在$5'$端带有共价酶-DNA连接，并有游离的$3'$端。随后是亚基旋转和再连接，其中游离的$3'$-羟基攻击$5'$-磷酸丝氨酸中间体。\n    6.  **结合与联会**：特异性DNA结合和联会复合物的形成，本身不需要磷酸二酯键的催化切割活性。\n\n### 步骤2：使用提取的已知条件进行验证\n根据科学有效性的标准来评估问题陈述。\n*   **有科学依据**：关于酪氨酸和丝氨酸重组酶机理的描述与分子生物学和生物化学领域的既有文献一致。使用定点诱变(Y→F, S→A)来探究催化残基的功能是一种标准、有效的实验方法。苯丙氨酸与酪氨酸是等排的，但缺少亲核性羟基。丙氨酸是一种小的非反应性氨基酸，通常用于去除侧链功能。这些前提在事实上是可靠的。\n*   **适定的**：该问题要求基于一组给定的机理规则，逻辑推导特定突变的生化后果。问题的结构设计使其能够从已知条件中得出一个唯一且稳定的答案。\n*   **客观的**：问题以精确、无歧义的科学语言陈述，不含主观或推测性内容。\n\n该问题未表现出任何诸如科学上不健全、不完整、矛盾或模棱两可的缺陷。这是一个应用于合成生物学领域的机理酶学标准问题。\n\n### 步骤3：结论与行动\n问题陈述是**有效的**。将基于所给的已知条件推导出解决方案。\n\n### 基于原理的推导\n核心任务是预测两种突变的后果：酪氨酸重组酶中的Y→F突变和丝氨酸重组酶中的S→A突变。\n\n1.  **突变分析**：\n    *   酪氨酸重组酶中的催化残基是酪氨酸(Y)，其苯环上带有一个羟基($-\\text{OH}$)。该羟基作为亲核试剂。突变为苯丙氨酸(F)后，该羟基被一个氢原子取代。苯丙氨酸在此上下文中是催化惰性的；它不能作为亲核试剂。\n    *   丝氨酸重组酶中的催化残基是丝氨酸(S)，其侧链为伯醇($-\\text{CH}_2\\text{OH}$)。其羟基作为亲核试剂。突变为丙氨酸(A)后，羟甲基被一个简单的甲基($-\\text{CH}_3$)取代。丙氨酸是化学惰性的，缺乏亲核试剂。\n    *   在这两种情况下，突变都移除了反应的第一个化学步骤所必需的亲核性羟基，即对DNA磷酸二酯骨架的攻击。\n\n2.  **对催化循环的影响**：\n    *   **切割**：根据所提供的事实，两种酶的第一步都是由催化性羟基进行亲核攻击，以切割磷酸二酯键并形成一个共价的蛋白质-DNA中间体。由于Y→F和S→A突变体都缺少这个羟基，它们无法执行这一初始切割步骤。因此，在两种突变体中，切割都被终止了。\n    *   **共价中间体形成**：$3'$-磷酸酪氨酸（酪氨酸重组酶）或$5'$-磷酸丝氨酸（丝氨酸重组酶）中间体的形成是切割事件的直接后果。由于切割被终止，将不会形成共价的蛋白质-DNA中间体。\n    *   **下游步骤（链交换、旋转、再连接）**：重组途径中的所有后续步骤，如链交换（对酪氨酸重组酶）、亚基旋转（对丝氨酸重组酶）和再连接，都依赖于DNA底物的初始切割。由于切割没有发生，反应无法进行到任何这些后续阶段。\n    *   **DNA结合与联会**：明确指出，特异性DNA结合和联会（将识别位点聚集在一起）不需要催化作用。因此，预计Y→F和S→A突变体都将保留其结合各自DNA靶位点并组装成联会复合物的能力，前提是活性位点中的单氨基酸替换不会严重扰乱蛋白质的整体结构，这在此类分析中是一个标准假设。\n\n### 逐项分析\n**A. 在酪氨酸(Y→F)和丝氨酸(S→A)重组酶中，切割都被终止，因为催化性羟基亲核试剂被移除；特异性DNA结合和联会得以保留；没有共价的蛋白质-DNA中间体形成；因此链交换和再连接都不会发生。**\n该陈述是对从第一性原理推导出的后果的完整而准确的总结。在两种突变体(Y→F和S→A)中去除催化性羟基阻止了初始的亲核攻击，从而终止了切割。没有切割，就不能形成共价中间体，也无法发生链交换或再连接等下游步骤。根据所提供的事实，所述的结合和联会能力的保留也是正确的。\n**结论：正确。**\n\n**B. 酪氨酸重组酶Y→F突变体仍然可以通过激活游离的$5'$-羟基来攻击游离的$3'$-磷酸基团，从而对预先切割的底物进行再连接，因为再连接不需要酶-DNA共价中间体。**\n该陈述根本上是错误的。问题指出，对于酪氨酸重组酶，再连接涉及游离的$5'$-羟基对$3'$-磷酸酪氨酸**共价中间体**的攻击。再连接是该中间体的解消。该突变体无法形成此中间体。此外，声称催化失活的酶可以“激活”一个羟基进行攻击是毫无根据的；用于催化的活性位点机制已被去除。\n**结论：错误。**\n\n**C. 丝氨酸重组酶S→A突变体支持单次双链断裂和随后的再连接，因为活性位点中的另一个丝氨酸可作为低效率的亲核试剂进行替代。**\n这是一个未经证实的假说。问题定义了一个特定的催化丝氨酸。没有提供任何信息表明在活性位点中存在或位置合适的第二个、具有补偿作用的丝氨酸残基。推论必须基于给定的事实，而不是基于对假设性补救机制的猜测。根据已知条件，S→A突变移除了唯一的催化亲核试剂。\n**结论：错误。**\n\n**D. 酪氨酸重组酶Y→F突变体将积累稳定的Holliday交叉中间体，因为切口和链交换发生在与DNA共价连接之前。**\n该陈述错误地描述了反应机理。对于酪氨酸重组酶，“切口”或DNA骨架的切割正是产生共价蛋白质-DNA连接（$3'$-磷酸酪氨酸）的事件。它们不是交换先于连接的顺序事件。链交换和Holliday交叉的形成是在初始切割/共价连接*之后*的步骤。由于Y→F突变体不能进行切割，它也无法形成Holliday交叉。\n**结论：错误。**\n\n**E. 丝氨酸重组酶S→A突变体可以形成联会复合物并维持位点的拓扑对齐，但由于所有$4$条链均未被切割，因此无法执行亚基旋转；因此再连接也不会发生。**\n该陈述为丝氨酸重组酶突变体提供了一个正确的逻辑链。根据已知条件，该突变体可以结合DNA并形成联会复合物。机理表明，亚基旋转发生在所有$4$条链被切割之后。由于S→A突变体是催化失活的，不能进行切割，因此不满足旋转的前提条件。因此，旋转不会发生，再连接（在旋转之后发生）也不会发生。这是对丝氨酸重组酶突变体的一个正确且具体的预测。\n**结论：正确。**", "answer": "$$\\boxed{AE}$$", "id": "2744910"}, {"introduction": "理解了分子机制后, 我们便可以设计可预测的基因装置。这个问题聚焦于重组酶介导的盒式交换 (Recombinase-Mediated Cassette Exchange, RMCE), 一种用于精确基因组编辑的强大技术 [@problem_id:2744883]。你将分析不同的供体盒设计以预测最终的基因组结果, 从而学习如何策略性地利用重组位点的方向和特异性, 以确保交换反应的定向和不可逆。", "problem": "一个环状细菌染色体包含一个用于重组酶介导的盒式交换（Recombinase-Mediated Cassette Exchange, RMCE）的预置受体基因座，该交换使用翻转酶（Flippase, Flp）重组酶和两个异源特异性识别位点：一个FRT位点和一个$F_3$位点。沿染色体从左到右，该基因座的排列方式为FRT($\\rightarrow$)–填充片段$S$–$F_3$($\\rightarrow$)。一个供体环状DNA携带一个目标盒式片段$C$和适合RMCE的匹配位点。考虑两种供体设计，它们的唯一区别在于供体$F_3$位点相对于目标盒式片段的方向：\n\n- 设计I（RMCE对齐）：FRT($\\rightarrow$)–$C$–$F_3$($\\rightarrow$)。\n- 设计II（$F_3$反向）：FRT($\\rightarrow$)–$C$–$F_3$($\\leftarrow$)。\n\n短暂脉冲表达Flp后，将其移除。在此脉冲后，任何缺少复制起始点的非复制型切除产物都会在生长过程中丢失，并且供体质粒不会被保留。请预测每种设计最稳定的长期基因组结果，并仅根据位点特异性重组的基本特性（同型配对和方向依赖性），证明在成功的情况下，FRT和$F_3$位点的混合如何强制反应路径的方向性。\n\n哪个选项最能描述预期的结果？\n\nA. 设计I产生精确的盒式交换：基因组中的填充片段$S$被目标盒式片段$C$替换，在染色体上形成FRT($\\rightarrow$)–$C$–$F_3$($\\rightarrow$)结构，同时一个包含载体骨架和$S$的副产物环被切除。在供体丢失后，这种交换实际上是不可逆的，因为染色体上没有一对相同的位点位于$C$的两侧。设计II无法解离：在FRT处初始整合后，两个$F_3$位点相互反向，并经历中间片段的反复倒位而无法解离共整合体；在供体丢失后，基因组恢复原状或保持未交换状态。\n\nB. 设计I无法进行交换，因为位点的同向排列会驱动$S$作为一个环被完全切除；染色体坍缩成一个单位点，而$C$仍保留在供体上。设计II由于有一个反向的$F_3$位点，通过产生一个可解离的共整合体来安装$C$并移除$S$，从而允许交换。\n\nC. 两种设计都失败了，因为FRT和$F_3$不兼容，因此在任何步骤中都不会发生重组；基因座保持为FRT($\\rightarrow$)–$S$–$F_3$($\\rightarrow$)。\n\nD. 在设计I中，Flp在异源的FRT和$F_3$位点之间进行重组，形成杂合的嵌合位点，从而将$C$不可逆地锁定。在设计II中，经过一次倒位后会形成相同的嵌合位点，同样产生稳定的交换。\n\nE. 两种设计都实现了交换，但设计II在解离过程中由于反向的$F_3$位点翻转了目标盒式片段，从而在FRT和$F_3$之间以反向方向安装了$C$；在供体丢失后，两者同样是不可逆的。", "solution": "我们从酪氨酸重组酶（如Flippase (Flp)）催化的位点特异性重组的核心规则开始：重组需要两个相同的识别位点（同型配对），其结果取决于它们的相对方向。对于同一分子上两个同向排列的相同位点，重组会切除中间的DNA形成一个环，并留下一个位点。对于两个反向排列的相同位点，重组会倒位中间的片段。两个环状分子上相同位点之间的分子间重组会产生一个共整合体；第二对相同位点之间的第二次重组可以解离该共整合体。在标准条件下，异源特异性位点（例如FRT与$F_3$）不会相互重组。\n\n我们分析这两种供体设计。\n\n设计I：供体FRT($\\rightarrow$)–$C$–$F_3$($\\rightarrow$) 与基因组FRT($\\rightarrow$)–$S$–$F_3$($\\rightarrow$)。\n\n- 步骤$1$（在FRT处整合）：供体和基因组各有一个FRT($\\rightarrow$)位点。这些FRT位点之间可以发生分子间同型配对，形成一个将供体连接到基因组的共整合体。此步骤后，共整合体包含两个$F_3$位点：基因组的$F_3$($\\rightarrow$)和供体的$F_3$($\\rightarrow$)，它们的位置使得它们在新形成的连接分子上呈同向排列。两个$F_3$位点之间的片段包含填充片段$S$和载体骨架或目标盒式片段，具体取决于精确的连接拓扑结构，但重要的是，这两个$F_3$位点是同型且同向的。\n\n- 步骤$2$（在$F_3$处解离）：现在，这两个同向排列的$F_3$位点进行分子内重组，切除它们之间的DNA形成一个环，并解离共整合体。通过供体和受体的恰当排列，这次切除会移除原始的填充片段$S$以及供体载体骨架，将目标盒式片段$C$留在染色体上两侧的FRT($\\rightarrow$)和$F_3$($\\rightarrow$)位点之间。被切除的副产物环包含一个FRT和一个$F_3$位点；由于它们是异源特异性的，因此不会相互重组以进行进一步的自我编辑。\n\n- 供体丢失后的方向性：最终的染色体具有异源特异性侧翼序列FRT($\\rightarrow$)–$C$–$F_3$($\\rightarrow$)。没有成对的相同位点位于$C$的两侧，因此不存在可以切除或倒位$C$的单步分子内反应。要逆转这一交换，需要通过与携带匹配位点的外部分子（例如供体环）进行同型配对来重新建立共整合体，然后进行第二次重组。在供体被移除且非复制型副产物丢失后，这种逆转实际上变得不可能。因此，异源不兼容性通过确保每个正向步骤都消除掉原本可以在同一分子内催化立即发生逆向反应的同型位点对，从而强制了反应的方向性。\n\n设计II：供体FRT($\\rightarrow$)–$C$–$F_3$($\\leftarrow$) 与相同的基因组基因座。\n\n- 步骤$1$（在FRT处整合）：与设计I中一样，同型FRT位点重组形成一个共整合体。\n\n- 步骤$2$（在$F_3$处的作用）：整合后，共整合体呈现出两个$F_3$位点：基因组的$F_3$($\\rightarrow$)和供体的$F_3$($\\leftarrow$)。它们相互反向。反向排列的$F_3$位点之间的同型重组会倒位中间的片段，而不是切除它。这种倒位并不能解离共整合体；供体骨架仍然连接在基因组上。该系统可以继续经历额外的重组事件：倒位的片段可以通过$F_3$重组翻转回来，或者初始的FRT连接点可以重组以逆转整合。在任何构型中，两个同型的$F_3$位点都不是同向重复序列，因此无法解离并切除适当的片段以完成RMCE。因此，精确的盒式交换不会稳定下来。在供体丢失后，基因组倾向于恢复到整合前的状态或保持未交换状态；在FRT和$F_3$之间稳定安装$C$的状态无法持续，因为解离从未实现。\n\n根据这些机理分析，我们评估每个选项：\n\n- 选项A：指出设计I产生精确的交换，形成FRT($\\rightarrow$)–$C$–$F_3$($\\rightarrow$)，并切除一个副产物环；异源特异性侧翼序列阻止了分子内逆转；还指出设计II形成一个共整合体，其中反向的$F_3$位点发生倒位而不是解离，从而排除了稳定的交换，并在供体丢失后导致恢复原状或无变化。这与分析相符。结论 — 正确。\n\n- 选项B：声称设计I无法进行交换，因为同向排列导致$S$被完全切除而不安装$C$，而设计II成功。这错误地应用了方向规则，并忽略了分子间步骤：在RMCE中，第一次同型配对整合了供体DNA；第二种位点类型的同向重复正是设计I中解离共整合体所需要的。在设计II中，反向的$F_3$位点不会解离。结论 — 错误。\n\n- 选项C：声称两种设计都失败了，因为FRT和$F_3$不兼容，因此根本不会发生重组。这忽略了重组是发生在分子间的同型对之间（FRT与FRT，$F_3$与$F_3$）。结论 — 错误。\n\n- 选项D：提出FRT和$F_3$之间发生异源重组以产生嵌合位点。在标准条件下，Flp不会重组异源变体；该机制仅依赖于同型配对。结论 — 错误。\n\n- 选项E：声称两种设计都实现了交换，设计II只是在解离期间反转了目标盒式片段的方向，并且两者同样不可逆。如前所述，设计II无法解离，因为$F_3$位点是反向的，导致倒位而不是切除，因此无法执行盒式交换。结论 — 错误。\n\n因此，只有选项A与位点特异性重组的基本规则以及异源不兼容性在强制RMCE方向性中的作用相符。", "answer": "$$\\boxed{A}$$", "id": "2744883"}, {"introduction": "即使是最具特异性的分子工具也存在脱靶活性, 而量化这种风险是稳健合成生物学设计的关键环节。这项练习 [@problem_id:2744901] 引入了一种计算方法, 用于建模和预测丝氨酸整合酶的脱靶事件频率。通过实现一个基于泊松过程 (Poisson process) 的随机模型, 你将获得将生物学原理和基因组数据转化为系统行为定量预测的实践经验。", "problem": "您正在对丝氨酸整合酶 PhiC31 在包含许多伪 attB 基序的基因组上的位点特异性重组酶活性进行建模。每个基序都被赋予一个定量的活性分数。一个活性阈值被用来筛选被认为有整合能力的基序。您需要根据以下基于经过充分检验的随机和动力学原理的假设，计算在给定整合酶剂量下，每个细胞的脱靶整合的期望数量。\n\n用于推导的基本假设：\n- 每个合格的基序（活性等于或高于阈值）其整合事件可被视为一个随机点过程，在暴露窗口期内可以被均匀泊松过程充分建模。对于一个均值参数为 $\\mu$ 的泊松过程，其期望计数为 $\\mu$，增量是独立的，并且观察到零个事件的概率是 $\\exp(-\\mu)$。\n- 在给定基序上的事件发生率与整合酶剂量和位点特异性活性权重均成正比。具体来说，如果整合酶剂量为 $D$（单位为分子/细胞），基础催化常数为 $k_0$（单位为每分子每细胞暴露），基序的活性权重为 $a_i$（无量纲，且 $a_i \\in [0,1]$），那么该基序在暴露期间的平均事件参数与 $k_0 a_i D$ 成正比。\n- 在给定基因座上的整合实际上是不可逆的；因此，每个基因座最多只计数一次独特的整合。对于泊松过程，至少发生一次事件的概率是 $1-\\exp(-\\mu)$，当每个基因座最多只能贡献一次时，这等于独特整合的期望数量。\n\n您的程序必须为每个指定的测试用例执行以下计算：\n- 给定基序活性列表 $[a_1,a_2,\\dots,a_N]$、阈值 $\\tau$、整合酶剂量 $D$（单位为分子/细胞）和基础常数 $k_0$（单位为每分子每细胞暴露），仅包含那些满足 $a_i \\ge \\tau$ 的基序。\n- 对于每个包含的基序，计算一个与 $k_0 a_i D$ 成正比的均值参数 $\\lambda_i$，然后计算其独特整合贡献的期望值为 $1 - \\exp(-\\lambda_i)$。\n- 将这些贡献在所有包含的基序上求和，以获得每个细胞的脱靶整合的期望数量。这个期望值是一个无量纲的计数（单位为整合次数/细胞）。\n\n数值和单位约定：\n- 整合酶剂量 $D$ 必须以分子/细胞为单位处理。\n- 常数 $k_0$ 必须以每分子每细胞暴露为单位处理，从而使得 $k_0 D$ 是无量纲的。\n- 每个测试用例的最终答案是每个细胞的整合期望数量，表示为一个浮点数（无单位计数）。将每个结果四舍五入到 $6$ 位小数。\n- 不涉及角度。不要使用百分号。如果必须表示分数，请使用小数表示法。\n\n测试套件（五个案例，涵盖典型、边界和边缘情景）：\n- 案例 A（典型的混合活性）：$a = [\\,0.12,\\,0.27,\\,0.51,\\,0.77,\\,0.95\\,]$，$\\tau = 0.25$，$D = 2\\times 10^5$ 分子/细胞，$k_0 = 2\\times 10^{-6}$ 每分子每细胞暴露。\n- 案例 B（零剂量边界）：$a = [\\,0.10,\\,0.20,\\,0.30\\,]$，$\\tau = 0.00$，$D = 0.0$ 分子/细胞，$k_0 = 1\\times 10^{-6}$ 每分子每细胞暴露。\n- 案例 C（没有基序通过阈值）：$a = [\\,0.20,\\,0.40\\,]$，$\\tau = 0.99$，$D = 1\\times 10^6$ 分子/细胞，$k_0 = 1\\times 10^{-6}$ 每分子每细胞暴露。\n- 案例 D（饱和剂量极限）：$a = [\\,0.05,\\,0.50,\\,0.80,\\,1.00\\,]$，$\\tau = 0.05$，$D = 5\\times 10^8$ 分子/细胞，$k_0 = 1\\times 10^{-6}$ 每分子每细胞暴露。\n- 案例 E（阈值边缘包含）：$a = [\\,0.20,\\,0.25,\\,0.249999,\\,0.250001\\,]$，$\\tau = 0.25$，$D = 1\\times 10^6$ 分子/细胞，$k_0 = 5\\times 10^{-7}$ 每分子每细胞暴露。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含案例 A–E 的结果，按顺序排列，形式为一个逗号分隔的列表，并用方括号括起来，每个值都四舍五入到 $6$ 位小数。例如：$[\\text{result}_A,\\text{result}_B,\\text{result}_C,\\text{result}_D,\\text{result}_E]$。", "solution": "该问题被确定为有效的，因为它是基于科学的、自洽的，并且在数学上是适定的。我们接下来对解决方案进行形式化推导。\n\n目标是计算每个细胞中独特的脱靶整合事件的总期望数，记为 $E_{total}$。该模型由几个参数定义：一组 $N$ 个潜在的整合基序，每个基序都有一个无量纲的活性权重 $a_i \\in [0, 1]$（其中 $i=1, \\dots, N$）；一个筛选阈值 $\\tau$；一个整合酶剂量 $D$（单位为分子/细胞）；以及一个基础催化常数 $k_0$。问题规定乘积 $k_0 D$ 是无量纲的。\n\n该过程的第一步是识别被认为具有整合能力的基序子集。如果一个基序 $i$ 的活性权重 $a_i$ 大于或等于阈值 $\\tau$，则该基序被认为是合格的。我们将所有合格基序的索引集合定义为 $S = \\{i \\mid a_i \\ge \\tau\\}$。\n\n对于每个合格的基序 $i \\in S$，整合事件的发生由一个均匀泊松过程描述。该过程的均值参数 $\\lambda_i$ 表示在暴露时间内位点 $i$ 的总整合事件的期望数量。根据规定，该参数与整合酶剂量和基序的活性权重成正比。精确关系式如下：\n$$\n\\lambda_i = k_0 a_i D\n$$\n在此， $a_i$、$k_0$ 和 $D$ 是先前定义的量。\n\n在特定基因座上的整合是一个实际上的不可逆过程，这意味着一旦一个位点被修饰，后续在同一位点发生的事件不会改变结果。因此，我们感兴趣的是为每个合格的基因座计算最多一次独特的整合。这等同于确定在该位点至少发生一次整合事件的概率。对于一个均值为 $\\lambda_i$ 的泊松过程，观察到恰好 $k$ 个事件的概率由其概率质量函数给出：$P(X=k) = \\frac{\\lambda_i^k e^{-\\lambda_i}}{k!}$。因此，观察到零个事件（$k=0$）的概率是 $P(X=0) = e^{-\\lambda_i}$。观察到至少一个事件的概率是其补集：\n$$\nP(X \\ge 1) = 1 - P(X=0) = 1 - e^{-\\lambda_i}\n$$\n单个位点 $i$ 的独特整合的期望数量，记为 $E_i$，是一个指示变量的期望值，该变量在至少发生一次整合时为 $1$，否则为 $0$。此类变量的期望值就是该事件的概率。因此，\n$$\nE_i = P(X \\ge 1) = 1 - e^{-\\lambda_i}\n$$\n每个细胞中独特的脱靶整合的总期望数量 $E_{total}$，是每个合格基序的单个期望值的总和。这是期望线性性质的直接结果，前提是假设不同基序上的整合事件是独立的过程。\n$$\nE_{total} = \\sum_{i \\in S} E_i = \\sum_{i \\mid a_i \\ge \\tau} \\left(1 - e^{-k_0 a_i D}\\right)\n$$\n这个公式为计算提供了基础。该算法包括：\n$1$. 筛选输入的活性列表 $[a_1, a_2, \\dots, a_N]$，只保留那些 $a_i \\ge \\tau$ 的活性。\n$2$. 对于每个保留的活性 $a_i$，计算相应的均值参数 $\\lambda_i = k_0 a_i D$。\n$3$. 对于每个 $\\lambda_i$，计算期望贡献 $E_i = 1 - e^{-\\lambda_i}$。\n$4$. 将所有贡献求和以得到 $E_{total}$。\n每个测试用例的最终数值结果需要四舍五入到 $6$ 位小数。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the expected number of off-target integrations for a series of test cases based on a stochastic model.\n    \"\"\"\n\n    test_cases = [\n        # Case A: typical mixed activities\n        {'activities': [0.12, 0.27, 0.51, 0.77, 0.95], 'tau': 0.25, 'D': 2e5, 'k0': 2e-6},\n        # Case B: zero dose boundary\n        {'activities': [0.10, 0.20, 0.30], 'tau': 0.00, 'D': 0.0, 'k0': 1e-6},\n        # Case C: no motif passes threshold\n        {'activities': [0.20, 0.40], 'tau': 0.99, 'D': 1e6, 'k0': 1e-6},\n        # Case D: saturating dose limit\n        {'activities': [0.05, 0.50, 0.80, 1.00], 'tau': 0.05, 'D': 5e8, 'k0': 1e-6},\n        # Case E: threshold edge inclusions\n        {'activities': [0.20, 0.25, 0.249999, 0.250001], 'tau': 0.25, 'D': 1e6, 'k0': 5e-7}\n    ]\n\n    def calculate_expected_integrations(activities, threshold, dose, k0):\n        \"\"\"\n        Computes the total expected number of unique integrations for a single case.\n\n        Args:\n            activities (list of float): List of motif activity scores.\n            threshold (float): Activity threshold for a motif to be competent.\n            dose (float): Integrase dose in molecules per cell.\n            k0 (float): Base catalytic constant.\n\n        Returns:\n            float: The total expected number of integrations per cell.\n        \"\"\"\n        # Convert list to a numpy array for efficient vectorized operations.\n        activities_arr = np.array(activities)\n\n        # 1. Filter motifs: include only those with activity at or above the threshold.\n        qualified_activities = activities_arr[activities_arr >= threshold]\n\n        # If no motifs are qualified, the expected number is 0.\n        if qualified_activities.size == 0:\n            return 0.0\n\n        # 2. For each included motif, compute the mean parameter lambda_i.\n        # The product of k0 and D is a dimensionless quantity used in the rate calculation.\n        kd_product = k0 * dose\n        lambda_values = kd_product * qualified_activities\n\n        # 3. For each lambda_i, compute the expected unique integration contribution.\n        # This is the probability of at least one event: 1 - exp(-lambda).\n        expected_contributions = 1 - np.exp(-lambda_values)\n\n        # 4. Sum contributions to get the total expected number of integrations.\n        total_expected_integrations = np.sum(expected_contributions)\n        \n        return total_expected_integrations\n\n    results = []\n    for case in test_cases:\n        # Calculate the result for each test case.\n        result = calculate_expected_integrations(case['activities'], case['tau'], case['D'], case['k0'])\n        # Format the result to 6 decimal places.\n        results.append(f\"{result:.6f}\")\n\n    # Print the final results in the specified single-line format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2744901"}]}