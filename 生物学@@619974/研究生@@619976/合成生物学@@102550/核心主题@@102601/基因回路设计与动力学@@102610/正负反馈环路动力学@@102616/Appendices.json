{"hands_on_practices": [{"introduction": "我们从许多基因回路的基本构建模块——单基因负反馈回路——开始。在处理复杂网络之前，理解这一核心基序的行为至关重要。此练习 [@problem_id:2753420] 将指导您对一个经典的自抑制模型进行分析和数值检验，从而巩固您确定稳态性质的能力，并体会简单负反馈所赋予的内在稳定性。", "id": "2753420", "problem": "一个单基因自抑制子的模型由以下常微分方程描述：\n$$\n\\frac{dx}{dt} \\;=\\; \\beta\\,\\frac{1}{1+\\left(\\frac{x}{K}\\right)^{n}} \\;-\\; \\gamma\\,x,\n$$\n其中 $x(t)$ 表示一种通过协同结合来抑制其自身产生的转录因子的浓度，$\\beta \\gt 0$ 是最大生产速率，$K \\gt 0$ 是解离常数，$n \\ge 1$ 是希尔系数，$\\gamma \\gt 0$ 是一阶降解-稀释常数。这些形式与质量作用动力学和基因调控模型中常用的希尔抑制函数相一致，而蛋白质合成与周转的描述则与分子生物学的中心法则 (DNA $\\to$ RNA $\\to$ Protein) 相符。\n\n你的任务是：\n- 从稳态（即浓度不随时间变化）的定义和希尔抑制函数的单调性出发，推导稳态 $x^{\\ast}$ 满足的代数方程，并确定对于任何参数选择 $(\\beta,\\gamma,K,n)$（其中 $\\beta \\gt 0$、$\\gamma \\gt 0$、$K \\gt 0$ 且 $n \\ge 1$），是否可能存在多个正稳态。你的推理必须基于这些基本定义和事实，而不是引用任何关于唯一性的已有结论。\n- 对于具体的参数值 $(\\beta,\\gamma,K,n) = (50,\\,1,\\,3,\\,2)$，数值计算出唯一的正稳态 $x^{\\ast}$。将你的答案四舍五入到四位有效数字。最终数值以与 $x$ 相同的任意浓度单位表示，但在最终答案中只报告数值（不带单位）。", "solution": "提交审议的问题陈述是有效的。它在科学上基于生物化学动力学（特别是基因调控）的原理，并且在数学上是适定的。我们将着手进行推导和求解。\n\n该系统由以下常微分方程描述：\n$$\n\\frac{dx}{dt} = \\beta\\,\\frac{1}{1+\\left(\\frac{x}{K}\\right)^{n}} - \\gamma\\,x\n$$\n给定参数 $\\beta > 0$、$\\gamma > 0$、$K > 0$ 且 $n \\ge 1$。变量 $x(t)$ 代表浓度，必须为非负值，即 $x \\ge 0$。\n\n首先，我们讨论正稳态的存在性和唯一性。稳态，记为 $x^{\\ast}$，是一个不随时间变化的浓度。根据定义，这意味着浓度的变化率为零：\n$$\n\\frac{dx}{dt}\\bigg|_{x=x^{\\ast}} = 0\n$$\n将此条件代入控制方程，得到任意稳态 $x^{\\ast}$ 所满足的代数方程：\n$$\n\\beta\\,\\frac{1}{1+\\left(\\frac{x^{\\ast}}{K}\\right)^{n}} - \\gamma\\,x^{\\ast} = 0\n$$\n这就是所求的代数方程。对于正稳态，我们寻求 $x^{\\ast} > 0$ 的解。该方程可以重排，使生产速率与降解速率相等：\n$$\n\\beta\\,\\frac{1}{1+\\left(\\frac{x^{\\ast}}{K}\\right)^{n}} = \\gamma\\,x^{\\ast}\n$$\n为了确定正解的数量，我们可以分析两个关于 $x$ 的函数的交点：生产速率函数 $P(x) = \\beta\\,\\frac{1}{1+\\left(\\frac{x}{K}\\right)^{n}}$ 和降解速率函数 $D(x) = \\gamma\\,x$。稳态 $x^{\\ast}$ 是满足 $P(x^{\\ast}) = D(x^{\\ast})$ 的点。\n\n我们研究这两个函数在 $x > 0$ 时的性质。\n降解函数 $D(x) = \\gamma\\,x$ 是一个从原点 $D(0) = 0$ 开始的线性函数，其斜率为常数正值 $\\gamma > 0$。因此，对于所有 $x > 0$，该函数是严格单调递增的。\n\n生产函数 $P(x) = \\beta\\left(1+\\left(\\frac{x}{K}\\right)^{n}\\right)^{-1}$ 是一个希尔抑制函数。我们通过计算它对 $x$ 的导数来分析其单调性：\n$$\n\\frac{dP}{dx} = \\beta \\left(-1\\right) \\left(1+\\left(\\frac{x}{K}\\right)^{n}\\right)^{-2} \\left(\\frac{n x^{n-1}}{K^n}\\right) = - \\frac{n \\beta}{K^n} \\frac{x^{n-1}}{\\left(1+\\left(\\frac{x}{K}\\right)^{n}\\right)^2}\n$$\n由于 $\\beta > 0$、$K > 0$ 且 $n \\ge 1$，对于任意 $x > 0$，项 $x^{n-1}$ 是正的。分数中的所有其他项也都是正的。因此，对于所有 $x > 0$，都有 $\\frac{dP}{dx} < 0$。这证明了生产函数 $P(x)$ 对于所有正浓度 $x$ 都是严格单调递减的。\n\n现在，我们比较 $P(x)$ 和 $D(x)$ 的行为。\n在 $x = 0$ 处，降解速率为 $D(0) = 0$。生产速率为 $P(0) = \\beta\\,\\frac{1}{1+0} = \\beta$。因为 $\\beta > 0$，所以有 $P(0) > D(0)$。\n当 $x \\to \\infty$ 时，降解速率 $D(x) \\to \\infty$。生产速率 $P(x) \\to 0$，因为分母无界增长。\n因此，函数 $P(x)$ 从值 $\\beta$ 开始严格递减趋向于 $0$，而函数 $D(x)$ 从 $0$ 开始严格递增且无上界。一个严格递减函数和一个严格递增函数在 $x>0$ 的区间内最多相交一次。因为 $P(0) > D(0)$ 且对于足够大的 $x$ 有 $P(x) < D(x)$，根据介值定理，它们必然在某个 $x^{\\ast} > 0$ 处至少相交一次。\n综合这两个事实，方程 $P(x) = D(x)$ 必须有且仅有一个正解 $x^{\\ast}$。\n因此，对于任何有效的参数选择 $(\\beta, \\gamma, K, n)$，都不可能存在多个正稳态。该系统总是拥有一个唯一的正稳态。\n\n其次，我们为具体参数 $(\\beta,\\gamma,K,n) = (50,\\,1,\\,3,\\,2)$ 计算唯一正稳态的数值。\n我们将这些值代入稳态方程：\n$$\n50 \\frac{1}{1+\\left(\\frac{x}{3}\\right)^{2}} = 1 \\cdot x\n$$\n重排该方程得到：\n$$\n50 = x \\left(1 + \\frac{x^2}{9}\\right)\n$$\n$$\n50 = x + \\frac{x^3}{9}\n$$\n两边乘以 $9$ 以消去分母，我们得到关于稳态 $x^{\\ast}$ 的三次多项式方程：\n$$\n(x^{\\ast})^3 + 9x^{\\ast} - 450 = 0\n$$\n我们必须找到这个三次方程的唯一正根。设 $f(x) = x^3 + 9x - 450$。我们可以估计根的位置。\n当 $x=7$ 时，$f(7) = 7^3 + 9(7) - 450 = 343 + 63 - 450 = -44$。\n当 $x=8$ 时，$f(8) = 8^3 + 9(8) - 450 = 512 + 72 - 450 = 134$。\n根 $x^{\\ast}$ 位于 $7$ 和 $8$ 之间。可以使用数值方法（如牛顿-拉夫逊法）来找到更精确的值。我们来细化搜索范围。\n测试 $x=7.2$：$f(7.2) = (7.2)^3 + 9(7.2) - 450 = 373.248 + 64.8 - 450 = -11.952$。\n测试 $x=7.3$：$f(7.3) = (7.3)^3 + 9(7.3) - 450 = 389.017 + 65.7 - 450 = 4.717$。\n根位于 $7.2$ 和 $7.3$ 之间，且更接近 $7.3$。\n我们测试 $x=7.27$：$f(7.27) = (7.27)^3 + 9(7.27) - 450 \\approx 384.27 + 65.43 - 450 = -0.3$。\n我们测试 $x=7.272$：$f(7.272) = (7.272)^3 + 9(7.272) - 450 \\approx 384.58 + 65.45 - 450 = 0.03$。\n符号的变化确认了根位于 $7.27$ 和 $7.272$ 之间。\n由于 $|f(7.272)|=0.03$ 比 $|f(7.27)|=0.3$ 小一个数量级，所以根更接近 $7.272$。\n为了满足四位有效数字的要求，我们对最佳估计值进行四舍五入。线性插值法给出的值约为 $7.2718$。将其四舍五入到四位有效数字得到 $x^{\\ast} \\approx 7.272$。", "answer": "$$\n\\boxed{7.272}\n$$"}, {"introduction": "虽然简单的负反馈通常能带来稳定的动态平衡，但引入时间延迟和强非线性可以产生持续的振荡。此练习 [@problem_id:2753488] 深入探讨了经典的 Goodwin 振荡器模型，这是理解生物节律的基石。通过进行线性稳定性分析，您将推导出合成基因级联作为振荡器所需的最低要求，揭示生物钟背后的基本设计原则。", "id": "2753488", "problem": "在一个以Goodwin振荡器为模型的合成负反馈基因回路中，考虑一个由$n$个转录阶段组成的环路，其中除了一个反馈到第一阶段的末端抑制性Hill非线性外，所有阶段都具有线性的生成和降解。设状态向量为 $(x_{1}, x_{2}, \\ldots, x_{n})$，其中$x_{i}$表示第$i$个阶段产物的浓度。其动力学由以下常微分方程组（ODE）给出\n$$\n\\begin{aligned}\n\\frac{dx_{1}}{dt} &= \\frac{\\alpha}{1 + x_{n}^{h}} - \\beta x_{1}, \\\\\n\\frac{dx_{i}}{dt} &= \\gamma x_{i-1} - \\beta x_{i}, \\quad i=2,\\ldots,n,\n\\end{aligned}\n$$\n其中$\\alpha>0$, $\\beta>0$, $\\gamma>0$为正常数，Hill系数$h>0$。假设存在唯一的正稳态$(x_{1}^{\\ast},\\ldots,x_{n}^{\\ast})$。\n\n仅使用线性时不变（LTI）系统的线性化和线性稳定性分析的基本原理，通过霍普夫分岔（Hopf bifurcation）推导自持振荡起始的必要条件，并用$n$和$h$表示。您必须：\n- 将方程无量纲化或以其他方式重新缩放，使得线性时间常数被归一化且级间线性增益为1，而不失一般性。\n- 在稳态下对系统进行线性化，并以一种能明确地将$n$级线性延迟链与稳态下Hill非线性的局部斜率（增益）分离开来的形式，获得雅可比矩阵的特征多项式。\n- 确定对于带有负反馈的$n$级延迟链，可以产生一对纯虚特征值的最小整数$n$。\n- 通过将稳态下Hill抑制的斜率与$h$和稳态值$x_{n}^{\\ast}$联系起来，仅使用由稳态方程所蕴含的代数恒等式，将得到的临界环路增益条件转化为关于$h$的界。\n\n作为您的最终答案，报告在该模型中，对于$\\alpha,\\beta,\\gamma>0$的某些选择，使得这种振荡可能发生的最小整数级数$n$和相应的最小Hill系数$h$。将最终答案表示为一个二元行向量$\\bigl[n_{\\min},\\,h_{\\min}\\bigr]$。不包括单位。无需四舍五入；提供精确值。", "solution": "所提供的问题是生物化学振荡器模型稳定性分析中的一个标准练习。该问题具有科学依据、提法良定，并包含了所有必要信息。因此，该问题被认定为有效，并将提供完整解答。\n\n描述该合成基因回路的常微分方程组（ODE）为：\n$$\n\\begin{aligned}\n\\frac{dx_{1}}{dt} &= \\frac{\\alpha}{1 + x_{n}^{h}} - \\beta x_{1}, \\\\\n\\frac{dx_{i}}{dt} &= \\gamma x_{i-1} - \\beta x_{i}, \\quad i=2,\\ldots,n.\n\\end{aligned}\n$$\n参数$\\alpha$、$\\beta$、$\\gamma$和$h$均为正常数。\n\n首先，我们必须按要求重新缩放系统，使得线性降解时间常数归一化为1，级间线性增益也为1。让我们引入一个重新缩放的时间$\\tau = \\beta t$。导数变换为$\\frac{d}{dt} = \\beta \\frac{d}{d\\tau}$。系统变为：\n$$\n\\begin{aligned}\n\\beta \\frac{dx_{1}}{d\\tau} &= \\frac{\\alpha}{1 + x_{n}^{h}} - \\beta x_{1} \\implies \\frac{dx_{1}}{d\\tau} = \\frac{\\alpha/\\beta}{1 + x_{n}^{h}} - x_{1}, \\\\\n\\beta \\frac{dx_{i}}{d\\tau} &= \\gamma x_{i-1} - \\beta x_{i} \\implies \\frac{dx_{i}}{d\\tau} = \\frac{\\gamma}{\\beta} x_{i-1} - x_{i}, \\quad i=2,\\ldots,n.\n\\end{aligned}\n$$\n问题指出，我们可以选择参数使得振荡成为可能。因此，我们可以在不失存在性问题一般性的前提下，自由地假设参数之间存在某种特定关系以简化分析。让我们设$\\gamma = \\beta$。这使得级间增益$\\gamma/\\beta$等于$1$。我们再定义一个新的合并参数$k = \\alpha/\\beta > 0$。为简单起见，省略时间上的撇号，重新缩放后的系统为：\n$$\n\\begin{aligned}\n\\frac{dx_{1}}{dt} &= \\frac{k}{1 + x_{n}^{h}} - x_{1}, \\\\\n\\frac{dx_{i}}{dt} &= x_{i-1} - x_{i}, \\quad i=2,\\ldots,n.\n\\end{aligned}\n$$\n\n接下来，我们求唯一的正稳态$(x_{1}^{\\ast}, \\ldots, x_{n}^{\\ast})$。在稳态下，所有时间导数均为零：\n$$\n\\begin{aligned}\n0 &= x_{i-1}^{\\ast} - x_{i}^{\\ast} \\quad \\text{for } i=2,\\ldots,n \\\\\n0 &= \\frac{k}{1 + (x_{n}^{\\ast})^{h}} - x_{1}^{\\ast}.\n\\end{aligned}\n$$\n从这组线性方程中，我们立即推断出$x_{1}^{\\ast} = x_{2}^{\\ast} = \\ldots = x_{n}^{\\ast}$。我们用$x^{\\ast}$表示这个公共的稳态浓度。第一个方程给出了该稳态的条件：\n$$ k = x^{\\ast}(1 + (x^{\\ast})^{h}). $$\n\n现在，我们在该稳态$x^{\\ast}$附近对系统进行线性化。令$\\delta x_i = x_i - x_i^\\ast$。系统的雅可比矩阵$J$的元素为$J_{ij} = \\frac{\\partial (dx_i/dt)}{\\partial x_j}$，在稳态下求值。\n偏导数为：\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial x_1}\\left(\\frac{dx_1}{dt}\\right) &= -1 \\\\\n\\frac{\\partial}{\\partial x_n}\\left(\\frac{dx_1}{dt}\\right) &= \\frac{-k h x_n^{h-1}}{(1+x_n^h)^2} \\\\\n\\frac{\\partial}{\\partial x_{i-1}}\\left(\\frac{dx_i}{dt}\\right) &= 1 \\quad \\text{for } i \\ge 2 \\\\\n\\frac{\\partial}{\\partial x_i}\\left(\\frac{dx_i}{dt}\\right) &= -1 \\quad \\text{for } i \\ge 2\n\\end{aligned}\n$$\n所有其他偏导数均为零。在稳态$x_1^\\ast = \\dots = x_n^\\ast = x^\\ast$下求值，雅可比矩阵为：\n$$\nJ =\n\\begin{pmatrix}\n-1 & 0 & \\cdots & 0 & -\\mu \\\\\n1 & -1 & \\cdots & 0 & 0 \\\\\n0 & 1 & \\ddots & \\vdots & \\vdots \\\\\n\\vdots & \\vdots & \\ddots & -1 & 0 \\\\\n0 & 0 & \\cdots & 1 & -1\n\\end{pmatrix}\n$$\n其中$\\mu$是反馈增益的大小，定义为：\n$$ \\mu = \\frac{k h (x^{\\ast})^{h-1}}{(1+(x^{\\ast})^{h})^2}. $$\n\n稳态的稳定性由$J$的特征值$\\lambda$决定，这些特征值是特征多项式$P(\\lambda) = \\det(J - \\lambda I) = 0$的根。\n$$\n\\det\\begin{pmatrix}\n-1-\\lambda & 0 & \\cdots & 0 & -\\mu \\\\\n1 & -1-\\lambda & \\cdots & 0 & 0 \\\\\n0 & 1 & \\ddots & \\vdots & \\vdots \\\\\n\\vdots & \\vdots & \\ddots & -1-\\lambda & 0 \\\\\n0 & 0 & \\cdots & 1 & -1-\\lambda\n\\end{pmatrix} = 0.\n$$\n沿第一行展开行列式得：\n$$ (-1-\\lambda) \\det(M_{11}) + (-1)^{1+n}(-\\mu)\\det(M_{1n}) = 0. $$\n此处，$M_{11}$是一个$(n-1) \\times (n-1)$的下三角矩阵，对角线元素为$(-1-\\lambda)$，所以$\\det(M_{11}) = (-1-\\lambda)^{n-1}$。矩阵$M_{1n}$是一个$(n-1) \\times (n-1)$的下三角矩阵，对角线元素为$1$，所以$\\det(M_{1n})=1$。方程变为：\n$$ (-1-\\lambda)(-1-\\lambda)^{n-1} + (-1)^{n+1}(-\\mu) = 0 $$\n$$ (-1-\\lambda)^n - (-1)^{n+1}\\mu = 0 $$\n$$ (-1)^n(1+\\lambda)^n - (-1)^{n+1}\\mu = 0 $$\n$$ (1+\\lambda)^n + \\mu = 0. $$\n这就是特征方程，它将线性链动力学与反馈增益分离开来。\n\n当一对共轭复特征值穿过虚轴时，发生霍普夫分岔。我们寻找形式为$\\lambda = i\\omega$的解，其中$\\omega \\in \\mathbb{R}$且$\\omega \\neq 0$。\n$$ (1+i\\omega)^n + \\mu = 0 \\implies (1+i\\omega)^n = -\\mu. $$\n我们将两边表示为极坐标形式。左边是$( \\sqrt{1+\\omega^2} e^{i \\arctan(\\omega)} )^n = (1+\\omega^2)^{n/2} e^{i n \\arctan(\\omega)}$。右边是$\\mu e^{i(\\pi + 2m\\pi)}$，其中$m$为整数。\n令模和相位分别相等，得到两个条件：\n$$ (1+\\omega^2)^{n/2} = \\mu $$\n$$ n \\arctan(\\omega) = \\pi(2m+1) \\implies \\omega = \\tan\\left(\\frac{\\pi(2m+1)}{n}\\right). $$\n为了得到有物理意义的振荡频率，我们需要$\\omega$是实数且为正。这要求正切函数的自变量位于区间$(0, \\pi/2)$内。我们选择基模，即取$m=0$：\n$$ 0 < \\frac{\\pi}{n} < \\frac{\\pi}{2}. $$\n左边的不等式对$n>0$成立。右边的不等式意味着$1/n < 1/2$，即$n > 2$。因此，可能发生振荡的最小整数级数为$n_{\\min}=3$。\n\n对于$n=3$，分岔点处的频率为：\n$$ \\omega = \\tan\\left(\\frac{\\pi}{3}\\right) = \\sqrt{3}. $$\n该分岔所需的临界增益$\\mu_{crit}$为：\n$$ \\mu_{crit} = (1+\\omega^2)^{n/2} = (1+(\\sqrt{3})^2)^{3/2} = 4^{3/2} = 8. $$\n一般而言，对于给定的$n>2$，临界增益为$\\mu_{crit}(n) = (1+\\tan^2(\\pi/n))^{n/2} = (\\sec^2(\\pi/n))^{n/2} = \\sec^n(\\pi/n)$。\n\n最后，我们必须将增益$\\mu$与Hill系数$h$联系起来。我们使用稳态方程$k = x^{\\ast}(1 + (x^{\\ast})^h)$从$\\mu$的表达式中消去$k$：\n$$ \\mu = \\frac{x^{\\ast}(1+(x^{\\ast})^h) h (x^{\\ast})^{h-1}}{(1+(x^{\\ast})^{h})^2} = \\frac{h (x^{\\ast})^h}{1+(x^{\\ast})^h}. $$\n令$y=(x^\\ast)^h$。表达式变为$\\mu = \\frac{hy}{1+y}$。由于$x^\\ast$可以取任意正值（通过调整$k$），$y$也可以取任意正值。我们想找到对于给定的$h$，$\\mu$可能的最大值。我们考察函数$\\mu(y) = h(y/(1+y))$。这是一个关于$y$的单调递增函数。其上确界在$y \\to \\infty$时达到：\n$$ \\sup_{y > 0} \\mu(y) = \\lim_{y\\to\\infty} h \\frac{y}{1+y} = h. $$\n为使振荡发生，系统参数必须允许反馈增益$\\mu$超过临界值$\\mu_{crit}$。这意味着$\\mu$可能的最大值必须大于或等于$\\mu_{crit}$。\n$$ \\sup(\\mu) \\ge \\mu_{crit} \\implies h \\ge \\mu_{crit}. $$\n因此，可能发生振荡的最小Hill系数$h_{min}$等于临界增益$\\mu_{crit}$。\n对于最小级数$n_{min}=3$，我们已求得$\\mu_{crit} = 8$。\n因此，所需的最小Hill系数为$h_{min}=8$。\n\n最小整数级数为$n_{min}=3$，相应的最小Hill系数为$h_{min}=8$。", "answer": "$$\\boxed{\\begin{pmatrix} 3 & 8 \\end{pmatrix}}$$"}, {"introduction": "合成生物学通常涉及设计由跨尺度、多系统相互作用而产生的复杂行为。这个高级计算实践 [@problem_id:2753343] 要求您将一个包含负反馈和正反馈的细胞内基因线路与由群体感应介导的种群层面动力学相结合。通过模拟这个耦合系统，您将探索这些相互作用如何能够产生如双稳态和同步振荡等复杂的集体行为，这是工程化微生物群落的一个关键目标。", "id": "2753343", "problem": "设想一个充分混合的同基因微生物种群，其通过一个胞内基因回路进行了工程改造，该回路结合了负向自动调节与群体感应介导的正反馈。您将对种群平均的胞内调节物浓度、胞外自诱导物浓度以及种群大小进行建模，然后使用第一性原理的质量平衡和标准动力学近似，分析不同参数区域下涌现的集体行为。\n\n基本和建模假设：\n- 确定性的、充分混合的常微分方程源于分子种类和细胞合成与损失的质量平衡。\n- 逻辑斯谛增长捕捉了资源受限的种群动态。\n- Hill 函数捕捉了结合反应达到稳态时的协同转录调控。\n- 群体感应（QS）自诱导物的产生可包括一个基础项和一个由胞内调节物控制的诱导项。\n\n状态变量（无量纲）：\n- $x(t)$: 每个细胞的种群平均胞内调节物水平。\n- $A(t)$: 每单位体积的胞外自诱导物水平。\n- $N(t)$: 归一化种群大小，经过缩放以使环境承载力为 $K_N = 1$ 以方便计算。\n\n参数（均为正数且无量纲）：\n- 胞内产生与调控：$\\alpha_0$（基础调节物产生）、$\\alpha$（最大诱导贡献）、$K_p$ 和 $n_p$（$A$ 激活的半激活常数和 Hill 系数）、$K_n$ 和 $n_n$（$x$ 自我抑制的半抑制常数和 Hill 系数）、$\\delta_x$（与生长无关的一阶调节物损失）。\n- 自诱导物动态：$\\gamma$（每个细胞的基础自诱导物合成）、$\\beta$（每个细胞的诱导自诱导物合成）、$K_a$ 和 $m$（调节物激活的自诱导物合成的半激活常数和 Hill 系数）、$d_A$（一阶自诱导物损失）。\n- 生长：$\\mu_{\\max}$（最大人均生长速率）、$K_N$（环境承载力）、$b$（$x$ 减缓生长的负荷因子）。\n\n设正向和负向调节函数为\n$$\nf_{+}(A) = \\frac{A^{n_p}}{K_p^{n_p} + A^{n_p}}, \\qquad f_{-}(x) = \\frac{1}{1 + \\left(\\frac{x}{K_n}\\right)^{n_n}}, \\qquad h(x) = \\frac{x^m}{K_a^m + x^m}.\n$$\n设生长速率为\n$$\n\\mu(N,x) = \\mu_{\\max}\\left(1 - \\frac{N}{K_N}\\right)\\frac{1}{1 + b\\,x}.\n$$\n\n模型方程（无量纲时间 $t$）：\n$$\n\\frac{dx}{dt} = \\alpha_0 + \\alpha\\, f_{+}(A)\\, f_{-}(x) - \\left(\\delta_x + \\mu(N,x)\\right)x,\n$$\n$$\n\\frac{dA}{dt} = \\left(\\gamma + \\beta\\, h(x)\\right)N - d_A\\,A,\n$$\n$$\n\\frac{dN}{dt} = \\mu(N,x)\\, N.\n$$\n\n您的任务：\n- 实现一个程序，对于测试套件中的每个参数集，从多个初始条件对模型进行数值积分，并对涌现的集体行为进行分类。\n- 对每个参数集，使用以下三个初始条件三元组 $(x(0),A(0),N(0))$：\n  - $(x(0),A(0),N(0)) = (10^{-3}, 0, 10^{-3})$，\n  - $(x(0),A(0),N(0)) = (5, 0, 10^{-3})$，\n  - $(x(0),A(0),N(0)) = (10^{-3}, 2, 10^{-3})$。\n- 对于每个初始条件，积分到一个足够长的最终时间，分析 $x(t)$ 轨迹的最后一部分，并确定它是趋近于一个不动点还是表现出持续振荡。\n- 每个参数集的涌现行为分类定义为以下之一：\n  - $0$：$x$ 的单稳态低表达不动点，\n  - $1$：$x$ 的单稳态高表达不动点，\n  - $2$：双稳态不动点（从不同初始条件达到的不同 $x$ 稳态值），\n  - $3$：$x$ 出现持续振荡。\n- 使用一个数据驱动的规则，通过将稳态 $x$ 值与一个阈值进行比较来区分低表达和高表达；您必须选择一个固定的阈值，并在所有参数集中一致应用。您的代码应记录并使用此阈值。\n- 为检测持续振荡，要求在最终时间窗口内既有最小振幅，又有多个局部最大值。\n\n测试套件（每个项目符号定义一个参数集；任何未在项目符号中列出的参数都应采用下面明确的默认值）：\n- 除非被覆盖，否则使用默认值：$\\alpha_0 = 0.01$, $\\alpha = 5.0$, $K_p = 1.0$, $n_p = 2$, $K_n = 1.0$, $n_n = 2$, $\\delta_x = 0.1$, $\\beta = 1.0$, $K_a = 1.0$, $m = 2$, $d_A = 0.1$, $\\mu_{\\max} = 0.4$, $K_N = 1.0$, $b = 0.1$, $\\gamma = 0.01$。\n- 情况 $1$（无群体感应耦合）：$\\beta = 0.0$, $\\gamma = 0.0$, $\\alpha = 4.0$。\n- 情况 $2$（强群体感应耦合与基础合成）：$\\alpha = 6.0$, $\\beta = 3.0$, $\\gamma = 0.2$, $d_A = 0.05$。\n- 情况 $3$（中等耦合；可能存在双稳态）：$\\alpha = 6.0$, $\\beta = 2.0$, $\\gamma = 0.02$, $d_A = 0.1$。\n- 情况 $4$（快速自诱导物损失）：$\\alpha = 5.0$, $\\beta = 2.0$, $\\gamma = 0.0$, $d_A = 1.0$。\n\n数值和算法要求：\n- 使用固定的积分时域和均匀的时间网格进行分析。选择合适的容差以确保所有情况下的数值稳定性。\n- 对于每个轨迹，使用最终窗口（例如，最后 $20\\%$ 的时间样本）来评估其行为。如果在该窗口内的振幅超过一个固定的绝对阈值，并且至少存在一个固定数量的局部最大值，则定义为振荡。否则，将其视为趋近不动点，并提取该窗口内 $x(t)$ 的平均值。\n- 对每个参数集，汇总三条轨迹的结果：\n  - 如果任何一条轨迹是振荡的，则分类为 $3$。\n  - 否则，如果三个初始条件得出的稳态 $x$ 值之间的最大差异超过一个固定容差，则分类为 $2$。\n  - 否则，根据稳态 $x$ 值是低于还是高于一个固定阈值，分类为 $0$ 或 $1$。\n- 您的程序应生成一行输出，其中包含一个用方括号括起来的逗号分隔的结果列表（例如，$[r_1,r_2,r_3,r_4]$，其中 $r_i$ 是情况 $i$ 的整数分类）。不需要物理单位，所有输出必须是整数。\n\n交付物：\n- 一个完整、可运行的 Python 程序，该程序实现模型，对所有列出的情况进行模拟，按照上述规则对涌现行为进行分类，并以所描述的精确格式打印整数分类列表。", "solution": "所提出的问题是计算系统生物学中一个定义明确且有科学依据的练习。它基于质量作用动力学、种群动态和转录调控的既定原则，由一个确定性常微分方程组表示。该模型描述了蛋白质 $x$ 的负向自动调节与由群体感应分子 $A$ 介导的正反馈回路之间的相互作用，并与种群增长 $N$ 相耦合。任务是在不同参数集下对该系统进行数值模拟，并对由此产生的涌现集体行为（如单稳态、双稳态或振荡）进行分类。该问题定义严格，并包含得出唯一且可验证解所需的所有必要信息。\n\n模型的核心是一个由三个耦合的非线性常微分方程（ODE）组成的系统，用于描述状态变量 $x(t)$（胞内调节物）、$A(t)$（胞外自诱导物）和 $N(t)$（归一化种群大小）：\n$$\n\\frac{dx}{dt} = \\alpha_0 + \\alpha\\, f_{+}(A)\\, f_{-}(x) - \\left(\\delta_x + \\mu(N,x)\\right)x\n$$\n$$\n\\frac{dA}{dt} = \\left(\\gamma + \\beta\\, h(x)\\right)N - d_A\\,A\n$$\n$$\n\\frac{dN}{dt} = \\mu(N,x)\\, N\n$$\n调节函数 $f_{+}(A)$、$f_{-}(x)$ 和 $h(x)$ 是标准的 Hill 函数，生长速率 $\\mu(N,x)$ 遵循一个带有调节物表达附加负荷项的逻辑斯谛模型。所有参数均为正的无量纲常数。\n\n为解决此问题，我们将根据要求实现一个数值解。选择 SciPy 库中的 `solve_ivp` 函数来积分该 ODE 系统。此函数是一个鲁棒的自适应求解器，适用于可能表现出刚性或振荡动态的系统。将使用一个固定的积分时域，直至最终时间 $t_{final} = 500$，并在 $10000$ 个均匀间隔的时间点上对解进行评估。这样长的时间跨度和精细的时间分辨率足以确保系统动态达到其渐进行为（不动点或稳定极限环），并确保任何振荡都能被精确捕捉。\n\n系统行为的分类是通过分析从三个不同初始条件出发的轨迹来执行的：$(x(0),A(0),N(0)) = (10^{-3}, 0, 10^{-3})$、$(5, 0, 10^{-3})$ 和 $(10^{-3}, 2, 10^{-3})$。对于每条轨迹，分析模拟的最后 $20\\%$ 时间（从 $t = 400$ 到 $t = 500$）以确定其终端状态。\n\n分类逻辑遵循一个严格的分层程序：\n$1$. **振荡检测**: 如果在最终分析窗口内，调节物浓度 $x(t)$ 的振幅 $\\max(x(t)) - \\min(x(t))$ 超过阈值 $0.1$，并且至少存在 $2$ 个局部最大值，则该轨迹被分类为振荡。这些标准用于区分持续振荡与瞬态动力学或数值噪声。如果一个参数集的三个轨迹中有任何一个是振荡的，则其涌现行为被分类为类型 $3$。\n$2$. **不动点分析**: 如果未检测到振荡，则假定系统收敛到一个或多个不动点。每条轨迹的 $x$ 稳态值计算为最终分析窗口内 $x(t)$ 的平均值。\n$3$. **双稳态与单稳态**: 接着检查这三个稳态值的集合。如果最大和最小稳态值之间的差超过容差 $0.5$，则系统被视为双稳态（类型 $2$），表明最终状态依赖于初始条件。\n$4$. **单稳态分类**: 如果稳态值彼此接近（在双稳态容差范围内），则系统是单稳态的。如果平均稳态值低于阈值 $1.5$，则行为被分类为低表达状态（类型 $0$）；否则，分类为高表达状态（类型 $1$）。该阈值是相对于半抑制常数 $K_n=1.0$ 来选择的，用于区分负向自动调节被弱激活或强激活的状态。\n\n这种系统化的方法为指定基因回路架构产生的复杂动力学提供了一种客观且可复现的分类。实现过程将通过在一个独立的程序中定义模型、参数集和分析逻辑来进行。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Implements the model, performs simulations for all test cases,\n    classifies the emergent behavior, and prints the result.\n    \"\"\"\n    \n    # Algorithmic parameters for analysis\n    # These values are chosen to be robust for the given problem dynamics.\n    T_FINAL = 500.0  # Integration horizon\n    N_POINTS = 10000  # Number of time points for evaluation\n    ANALYSIS_FRAC = 0.2  # Fraction of trajectory to analyze for steady-state/oscillation\n    \n    # Classification thresholds\n    OSC_AMP_THRESH = 0.1  # Minimum amplitude to be considered an oscillation\n    MIN_PEAKS = 2  # Minimum number of local maxima to be an oscillation\n    BISTABLE_TOL = 0.5  # Minimum difference between fixed points to be considered bistable\n    HIGH_EXPR_THRESH = 1.5  # Threshold for x to be considered 'high-expression'\n\n    def model_rhs(t, y, params):\n        \"\"\"\n        Defines the system of ODEs for the gene circuit model.\n        State vector y is [x, A, N].\n        \"\"\"\n        x, A, N = y\n\n        # Ensure state variables are non-negative\n        if x < 0: x = 0\n        if A < 0: A = 0\n        if N < 0: N = 0\n        \n        # Unpack parameters for clarity\n        alpha_0, alpha, K_p, n_p = params['alpha_0'], params['alpha'], params['K_p'], params['n_p']\n        K_n, n_n, delta_x = params['K_n'], params['n_n'], params['delta_x']\n        gamma, beta, K_a, m = params['gamma'], params['beta'], params['K_a'], params['m']\n        d_A, mu_max, K_N, b = params['d_A'], params['mu_max'], params['K_N'], params['b']\n\n        # Regulatory Hill functions\n        f_plus = (A**n_p) / (K_p**n_p + A**n_p) if A > 0 else 0\n        f_minus = 1.0 / (1.0 + (x / K_n)**n_n)\n        h_x = (x**m) / (K_a**m + x**m)\n        \n        # Growth rate with metabolic burden\n        mu = mu_max * (1.0 - N / K_N) / (1.0 + b * x)\n        mu = max(0, mu) # Growth rate cannot be negative\n\n        # The system of ODEs\n        dxdt = alpha_0 + alpha * f_plus * f_minus - (delta_x + mu) * x\n        dAdt = (gamma + beta * h_x) * N - d_A * A\n        dNdt = mu * N\n        \n        return [dxdt, dAdt, dNdt]\n\n    def analyze_trajectory(t, x_traj):\n        \"\"\"\n        Analyzes the final portion of a trajectory to classify its behavior\n        as reaching a steady-state or exhibiting sustained oscillations.\n        \"\"\"\n        n_total = len(t)\n        n_analysis_start = n_total - int(n_total * ANALYSIS_FRAC)\n        \n        if n_analysis_start >= n_total - 2: # Need at least 3 points for peak finding\n            return 'ss', np.mean(x_traj)\n\n        x_window = x_traj[n_analysis_start:]\n\n        amplitude = np.max(x_window) - np.min(x_window)\n\n        if amplitude > OSC_AMP_THRESH:\n            peak_count = 0\n            for i in range(1, len(x_window) - 1):\n                if x_window[i] > x_window[i-1] and x_window[i] > x_window[i+1]:\n                    peak_count += 1\n            \n            if peak_count >= MIN_PEAKS:\n                return 'osc', None\n        \n        ss_val = np.mean(x_window)\n        return 'ss', ss_val\n\n    # Default parameters as specified in the problem statement.\n    default_params = {\n        'alpha_0': 0.01, 'alpha': 5.0, 'K_p': 1.0, 'n_p': 2,\n        'K_n': 1.0, 'n_n': 2, 'delta_x': 0.1, 'beta': 1.0,\n        'K_a': 1.0, 'm': 2, 'd_A': 0.1, 'mu_max': 0.4,\n        'K_N': 1.0, 'b': 0.1, 'gamma': 0.01\n    }\n\n    # Define the 4 test cases by their parameter overrides.\n    test_cases = [\n        {'beta': 0.0, 'gamma': 0.0, 'alpha': 4.0},\n        {'alpha': 6.0, 'beta': 3.0, 'gamma': 0.2, 'd_A': 0.05},\n        {'alpha': 6.0, 'beta': 2.0, 'gamma': 0.02, 'd_A': 0.1},\n        {'alpha': 5.0, 'beta': 2.0, 'gamma': 0.0, 'd_A': 1.0}\n    ]\n\n    # The three initial conditions to test for each parameter set.\n    initial_conditions = [\n        (1e-3, 0.0, 1e-3),\n        (5.0, 0.0, 1e-3),\n        (1e-3, 2.0, 1e-3)\n    ]\n\n    # Time grid for consistent evaluation across all simulations.\n    t_span = [0, T_FINAL]\n    t_eval = np.linspace(t_span[0], t_span[1], N_POINTS)\n    \n    final_results = []\n    \n    for case_override in test_cases:\n        params = default_params.copy()\n        params.update(case_override)\n        \n        trajectory_outcomes = []\n        for y0_tuple in initial_conditions:\n            y0 = list(y0_tuple)\n            # Numerically integrate the ODE system.\n            # LSODA is a good general-purpose choice for potentially stiff problems.\n            # Tight tolerances are used for high accuracy.\n            sol = solve_ivp(\n                fun=lambda t, y: model_rhs(t, y, params),\n                t_span=t_span,\n                y0=y0,\n                t_eval=t_eval,\n                method='LSODA',\n                atol=1e-8,\n                rtol=1e-8\n            )\n            \n            x_trajectory = sol.y[0,:]\n            behavior, value = analyze_trajectory(sol.t, x_trajectory)\n            trajectory_outcomes.append((behavior, value))\n\n        # Classify the parameter set based on the outcomes of the three trajectories.\n        is_oscillatory = any(o[0] == 'osc' for o in trajectory_outcomes)\n\n        if is_oscillatory:\n            final_results.append(3)\n            continue\n            \n        ss_values = [o[1] for o in trajectory_outcomes]\n        \n        if np.max(ss_values) - np.min(ss_values) > BISTABLE_TOL:\n            final_results.append(2)\n            continue\n            \n        # Monostable case: classify as low or high expression.\n        final_ss = np.mean(ss_values)\n        if final_ss > HIGH_EXPR_THRESH:\n            final_results.append(1)\n        else:\n            final_results.append(0)\n\n    # Print the final list of classifications in the exact required format.\n    print(f\"[{','.join(map(str, final_results))}]\")\n\nsolve()\n\n```"}]}