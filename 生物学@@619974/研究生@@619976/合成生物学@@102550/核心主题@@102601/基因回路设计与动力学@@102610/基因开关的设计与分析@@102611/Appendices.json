{"hands_on_practices": [{"introduction": "对基因拨动开关的深入理解始于其数学核心。本练习将引导您完成一项基础分析，以确定双稳态出现的精确条件。通过对控制方程进行无量纲化并执行线性稳定性分析，您将推导出对称开关的临界阈值，这是一个经典的结论，揭示了蛋白质生产速率和协同抑制之间至关重要的相互作用。[@problem_id:2783261]", "problem": "一个典型的互斥抑制基因拨动开关由两个基因组成，其蛋白质产物相互抑制对方的转录。在转录调控的标准准稳态假设和蛋白质一级降解假设下，一个描述蛋白质浓度 $U(t)$ 和 $V(t)$ 的最小模型由以下常微分方程（ODEs）给出\n$$\n\\frac{dU}{dt}=\\frac{\\alpha_{1}}{1+\\left(\\frac{V}{K_{2}}\\right)^{n_{2}}}-\\delta_{1}\\,U,\\qquad\n\\frac{dV}{dt}=\\frac{\\alpha_{2}}{1+\\left(\\frac{U}{K_{1}}\\right)^{n_{1}}}-\\delta_{2}\\,V,\n$$\n其中，$t$ 是时间，$\\alpha_{i}$ 是最大合成速率，$\\delta_{i}$ 是蛋白质降解（或稀释）速率，$K_{i}$ 是抑制阈值，$n_{i}$ 是描述协同抑制的希尔系数。\n\n从这个有量纲模型出发，并仅使用以下基本原理：\n- 稳态时的转录抑制由形式为 $1/\\left(1+(X/K)^{n}\\right)$ 的希尔函数表示。\n- 蛋白质的清除主要由速率常数为 $\\delta_{i}$ 的一级过程主导。\n- 无量纲化通过定义吸收物理单位的标度化变量来进行，以减少参数数量。\n\n请执行以下任务：\n1. 通过用抑制阈值对浓度进行标度化，以及用降解时间尺度对时间进行标度化，引入无量纲变量，并推导出无量纲常微分方程，明确写出最小的独立无量纲参数群。\n2. 将模型特殊化到由 $\\alpha_{1}=\\alpha_{2}=\\alpha$、$\\delta_{1}=\\delta_{2}=\\delta$、$K_{1}=K_{2}=K$ 和 $n_{1}=n_{2}=n\\geq 1$ 定义的对称情况，并沿着两个浓度相等的不变子空间分析对称不动点的线性稳定性。确定该对称不动点首次通过一个零特征值失去稳定性时的临界无量纲生产参数值，该点标志着双稳态的开始。\n\n最终答案必须是仅含希尔系数 $n$ 的、表示临界无量纲生产参数的单个闭式解析表达式。最终答案无需单位。请勿在最终答案中提供中间步骤或附加文本。", "solution": "所述问题具有科学依据、提法恰当且客观。它提出了一个来自合成生物学的经典模型，并要求进行一项标准的、尽管并非平凡的数学分析。所有必要信息均已提供，且前提条件一致。因此，我们可以开始求解。\n\n该问题要求对基因拨动开关模型进行两部分分析。首先，我们必须对控制常微分方程（ODEs）进行无量纲化。其次，我们必须在特殊化的对称情况下分析对称不动点的稳定性，以找到出现双稳态的临界参数值。\n\n有量纲模型由以下耦合常微分方程给出：\n$$\n\\frac{dU}{dt}=\\frac{\\alpha_{1}}{1+\\left(\\frac{V}{K_{2}}\\right)^{n_{2}}}-\\delta_{1}\\,U\n$$\n$$\n\\frac{dV}{dt}=\\frac{\\alpha_{2}}{1+\\left(\\frac{U}{K_{1}}\\right)^{n_{1}}}-\\delta_{2}\\,V\n$$\n此处，$U(t)$ 和 $V(t)$ 是蛋白质浓度，$t$ 是时间，$\\alpha_{i}$ 是最大合成速率，$\\delta_{i}$ 是一级降解速率，$K_{i}$ 是抑制阈值（半最大抑制时的浓度），$n_{i}$ 是表示抑制协同性的希尔系数。\n\n**第一部分：无量纲化**\n我们按照指示引入无量纲变量。我们用各自的抑制阈值对浓度进行标度化：\n$$\nu = \\frac{U}{K_{1}}, \\qquad v = \\frac{V}{K_{2}}\n$$\n我们用一个降解时间尺度对时间进行标度化。我们选择 $\\frac{1}{\\delta_1}$，定义无量纲时间 $\\tau$：\n$$\n\\tau = \\delta_{1}t\n$$\n根据这些定义，我们有 $U = u K_{1}$，$V = v K_{2}$，以及 $t = \\frac{\\tau}{\\delta_1}$。时间导数变换为 $\\frac{d}{dt} = \\frac{d\\tau}{dt}\\frac{d}{d\\tau} = \\delta_{1}\\frac{d}{d\\tau}$。\n\n将这些代入第一个常微分方程：\n$$\n\\delta_{1}\\frac{d(u K_{1})}{d\\tau} = \\frac{\\alpha_{1}}{1+v^{n_{2}}} - \\delta_{1} u K_{1}\n$$\n$$\nK_{1}\\delta_{1}\\frac{du}{d\\tau} = \\frac{\\alpha_{1}}{1+v^{n_{2}}} - \\delta_{1} u K_{1}\n$$\n两边同除以 $K_{1}\\delta_{1}$：\n$$\n\\frac{du}{d\\tau} = \\frac{\\alpha_{1}}{K_{1}\\delta_{1}}\\frac{1}{1+v^{n_{2}}} - u\n$$\n现在，代入第二个常微分方程：\n$$\n\\delta_{1}\\frac{d(v K_{2})}{d\\tau} = \\frac{\\alpha_{2}}{1+u^{n_{1}}} - \\delta_{2} v K_{2}\n$$\n$$\nK_{2}\\delta_{1}\\frac{dv}{d\\tau} = \\frac{\\alpha_{2}}{1+u^{n_{1}}} - \\delta_{2} v K_{2}\n$$\n两边同除以 $K_{2}\\delta_{1}$：\n$$\n\\frac{dv}{d\\tau} = \\frac{\\alpha_{2}}{K_{2}\\delta_{1}}\\frac{1}{1+u^{n_{1}}} - \\frac{\\delta_{2}}{\\delta_{1}} v\n$$\n现在，该系统用无量纲变量 $\\{u, v, \\tau\\}$ 表示。我们确定独立的无量纲参数群：\n- 无量纲合成速率：$\\tilde{\\alpha}_{1} = \\frac{\\alpha_{1}}{K_{1}\\delta_{1}}$ 和 $\\tilde{\\alpha}_{2} = \\frac{\\alpha_{2}}{K_{2}\\delta_{1}}$。\n- 降解速率之比：$\\gamma = \\frac{\\delta_{2}}{\\delta_{1}}$。\n希尔系数 $n_{1}$ 和 $n_{2}$ 本身就是无量纲的。\n\n无量纲系统为：\n$$\n\\frac{du}{d\\tau} = \\frac{\\tilde{\\alpha}_{1}}{1+v^{n_{2}}} - u\n$$\n$$\n\\frac{dv}{d\\tau} = \\frac{\\tilde{\\alpha}_{2}}{1+u^{n_{1}}} - \\gamma v\n$$\n\n**第二部分：对称情况的稳定性分析**\n现在我们特殊化到对称情况，其中 $\\alpha_{1}=\\alpha_{2}=\\alpha$、$\\delta_{1}=\\delta_{2}=\\delta$、$K_{1}=K_{2}=K$ 且 $n_{1}=n_{2}=n$。\n无量纲参数变为：\n- $\\tilde{\\alpha}_{1} = \\frac{\\alpha}{K\\delta}$ 和 $\\tilde{\\alpha}_{2} = \\frac{\\alpha}{K\\delta}$。我们用 $\\beta = \\frac{\\alpha}{K\\delta}$ 表示这个共同的无量纲生产参数。\n- $\\gamma = \\frac{\\delta}{\\delta} = 1$。\n\n对称的无量纲系统是：\n$$\n\\frac{du}{d\\tau} = \\frac{\\beta}{1+v^{n}} - u \\equiv f(u,v)\n$$\n$$\n\\frac{dv}{d\\tau} = \\frac{\\beta}{1+u^{n}} - v \\equiv g(u,v)\n$$\n我们寻找对称不动点，此时 $u=v$。设不动点坐标为 $(u^{*}, v^{*})$。对于对称不动点，$u^{*} = v^{*} = x^{*}$。将时间导数设为零，不动点条件变为一个单一方程：\n$$\nx^{*} = \\frac{\\beta}{1+(x^{*})^{n}}\n$$\n为了分析此不动点的线性稳定性，我们计算系统的雅可比矩阵 $J$：\n$$\nJ(u,v) = \\begin{pmatrix} \\frac{\\partial f}{\\partial u} & \\frac{\\partial f}{\\partial v} \\\\ \\frac{\\partial g}{\\partial u} & \\frac{\\partial g}{\\partial v} \\end{pmatrix} = \\begin{pmatrix} -1 & -\\frac{\\beta n v^{n-1}}{(1+v^{n})^{2}} \\\\ -\\frac{\\beta n u^{n-1}}{(1+u^{n})^{2}} & -1 \\end{pmatrix}\n$$\n在对称不动点 $(x^{*}, x^{*})$ 处计算雅可比矩阵：\n$$\nJ(x^{*},x^{*}) = \\begin{pmatrix} -1 & -\\frac{\\beta n (x^{*})^{n-1}}{(1+(x^{*})^{n})^{2}} \\\\ -\\frac{\\beta n (x^{*})^{n-1}}{(1+(x^{*})^{n})^{2}} & -1 \\end{pmatrix}\n$$\n从不动点方程，我们可以代入 $\\beta = x^{*}(1+(x^{*})^{n})$。非对角线项变为：\n$$\n-\\frac{x^{*}(1+(x^{*})^{n}) n (x^{*})^{n-1}}{(1+(x^{*})^{n})^{2}} = -\\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}\n$$\n设此项为 $C$。不动点处的雅可比矩阵为 $J = \\begin{pmatrix} -1 & C \\\\ C & -1 \\end{pmatrix}$。特征值 $\\lambda$ 是特征方程 $\\det(J - \\lambda I) = 0$ 的根：\n$$\n\\det \\begin{pmatrix} -1-\\lambda & C \\\\ C & -1-\\lambda \\end{pmatrix} = (-1-\\lambda)^{2} - C^{2} = 0\n$$\n$$\n(\\lambda+1)^{2} = C^{2} \\implies \\lambda+1 = \\pm C \\implies \\lambda = -1 \\pm C\n$$\n两个特征值为：\n$$\n\\lambda_{1} = -1 - \\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}\n$$\n$$\n\\lambda_{2} = -1 + \\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}\n$$\n为使不动点稳定，两个特征值都必须具有负实部。\n由于 $n \\ge 1$ 且 $x^{*} > 0$，项 $\\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}$ 总是正的。因此，$\\lambda_{1}$ 总是负的。稳定性由 $\\lambda_{2}$ 的符号决定。\n当 $\\lambda_{2}$ 从负值穿过零变为正值时，对称不动点失去稳定性。这个分岔标志着新的、非对称不动点的出现，对应于双稳态的开始。临界条件是 $\\lambda_{2}=0$。设 $x^{*}_{c}$ 为分岔点的不动点值。\n$$\n-1 + \\frac{n (x^{*}_{c})^{n}}{1+(x^{*}_{c})^{n}} = 0\n$$\n$$\nn (x^{*}_{c})^{n} = 1+(x^{*}_{c})^{n}\n$$\n$$\n(n-1)(x^{*}_{c})^{n} = 1\n$$\n这个方程仅在 $n > 1$ 时对 $x^{*}_{c} > 0$ 有意义。如果 $n=1$，方程变为 $0=1$，这是不可能的。对于 $n=1$，$\\lambda_{2} = -1 + \\frac{x^{*}}{1+x^{*}} = -\\frac{1}{1+x^{*}} < 0$，因此系统总是单稳态的。在该开关中，双稳态现象需要协同抑制，即 $n>1$。\n\n对于 $n>1$，我们解出临界不动点浓度 $x^{*}_{c}$：\n$$\n(x^{*}_{c})^{n} = \\frac{1}{n-1} \\implies x^{*}_{c} = \\left(\\frac{1}{n-1}\\right)^{\\frac{1}{n}}\n$$\n问题要求的是无量纲生产参数的临界值 $\\beta_{c}$。我们通过将 $x^{*}_{c}$ 代入不动点方程来求得此值：\n$$\n\\beta_{c} = x^{*}_{c}(1+(x^{*}_{c})^{n})\n$$\n$$\n\\beta_{c} = \\left(\\frac{1}{n-1}\\right)^{\\frac{1}{n}} \\left(1 + \\frac{1}{n-1}\\right)\n$$\n简化第二项：\n$$\n1 + \\frac{1}{n-1} = \\frac{n-1+1}{n-1} = \\frac{n}{n-1}\n$$\n因此，临界值 $\\beta_{c}$ 为：\n$$\n\\beta_{c} = \\frac{n}{n-1} \\left(\\frac{1}{n-1}\\right)^{\\frac{1}{n}} = \\frac{n}{(n-1)^{1} (n-1)^{\\frac{1}{n}}} = \\frac{n}{(n-1)^{1+\\frac{1}{n}}}\n$$\n该表达式最终可写为：\n$$\n\\beta_{c} = \\frac{n}{(n-1)^{\\frac{n+1}{n}}}\n$$\n这是对称稳态失去稳定性并产生双稳态时的临界无量纲生产参数值。此分岔是一个超临界叉式分岔。", "answer": "$$\n\\boxed{\\frac{n}{(n-1)^{\\frac{n+1}{n}}}}\n$$", "id": "2783261"}, {"introduction": "除了定量计算，合成生物学家的一个关键技能是培养设计直觉。本练习挑战您使用零增长线这一强大的概念工具，来定性地预测工程改造（例如添加蛋白质降解标签）如何影响拨动开关的行为。掌握这种定性推理能力，使您能够快速评估设计选择，并理解工程线路的稳定性和开关特性。[@problem_id:2783198]", "problem": "一个工程化的基因拨动开关由两个编码蛋白质阻遏物 $X$ 和 $Y$ 的基因组成，这两个阻遏物相互抑制对方的启动子。作为一个基本前提，我们假设分子生物学中心法则（转录产生信使核糖核酸 (mRNA)，后者被翻译成蛋白质）和标准的动力学描述成立：蛋白质的产生由转录抑制控制，该过程可用希尔型函数描述；蛋白质的损失由一级稀释和蛋白酶解驱动。一个广泛使用的关于蛋白质浓度 $x(t)$ 和 $y(t)$ 的确定性模型如下：\n$$\n\\frac{dx}{dt} \\;=\\; \\beta_x\\,\\frac{1}{1+\\left(\\sigma_y y/K_y\\right)^{n_y}} \\;+\\; \\beta_{0x} \\;-\\; \\delta_x\\,x, \\qquad\n\\frac{dy}{dt} \\;=\\; \\beta_y\\,\\frac{1}{1+\\left(\\sigma_x x/K_x\\right)^{n_x}} \\;+\\; \\beta_{0y} \\;-\\; \\delta_y\\,y,\n$$\n其中 $K_x,K_y$ 是抑制阈值，$n_x,n_y$ 是希尔系数（$n_x,n_y>1$），用于描述协同抑制，$\\beta_x,\\beta_y$ 是最大产生速率，$\\beta_{0x},\\beta_{0y}$ 是基础（泄露）产生速率，$\\delta_x,\\delta_y$ 是由稀释和降解引起的有效一级损失速率。使阻遏物 $X$ 和 $Y$ 失活的小分子诱导物通过参数 $\\sigma_x,\\sigma_y\\in(0,1]$ 进入模型，该参数量化了可结合DNA的活性阻遏物的比例；例如，增加靶向 $X$ 的诱导物会降低 $\\sigma_x$。\n\n附加到阻遏物上的“降解标签”会增加其蛋白酶解速率，但不会改变其DNA结合特性。我们将对 $X$ 的标记理想化为 $\\delta_x \\mapsto \\tau_x\\,\\delta_x$（其中 $\\tau_x>1$），对 $Y$ 的标记理想化为 $\\delta_y \\mapsto \\tau_y\\,\\delta_y$（其中 $\\tau_y>1$），同时保持 $\\beta$、$\\beta_0$、$K$、$n$ 以及 $\\sigma$-诱导物剂量-效应关系不变。\n\n考虑一个初始对称的拨动开关，其参数为 $\\beta_x=\\beta_y=\\beta$、$\\beta_{0x}=\\beta_{0y}=\\beta_0$、$K_x=K_y=K$、$n_x=n_y=n$ 和 $\\delta_x=\\delta_y=\\delta$，该开关在零诱导物（即 $\\sigma_x=\\sigma_y=1$）时是双稳态的。假设 $\\beta_0/\\beta$ 很小但不为零，且 $n$ 足够大以允许双稳态。你在两种情景下引入降解标签：(i) 对称标记，$\\tau_x=\\tau_y=\\tau>1$；(ii) 非对称标记，$\\tau_x=\\tau>1$ 且 $\\tau_y=1$。\n\n仅使用上述模型结构和第一性原理的零斜线与不动点论证，在假设指定情况下标记后双稳态仍然存在的前提下，评估这些标签对稳定状态下的稳态蛋白质浓度以及诱导物空间中切换阈值（即鞍节点分岔消除一个稳定状态时的临界 $\\sigma$ 值）的影响。\n\n下列哪项陈述是正确的？\n\nA. 在对称标记（$\\tau>1$）下，与未标记的拨动开关相比，两个稳定状态的蛋白质水平均降低，迟滞窗口变宽，诱导物阈值向外移动（即在两个方向上切换都需要更多的诱导物）。\n\nB. 在对称标记（$\\tau>1$）下，与未标记的拨动开关相比，两个稳定状态的蛋白质水平均降低，迟滞窗口变窄，诱导物阈值向内移动（即在两个方向上切换都需要更少的诱导物）。\n\nC. 在对称标记（$\\tau>1$）下，两个稳定状态的蛋白质水平均升高，因为更快的周转加速了产生周期，迟滞窗口变窄，且阈值向内移动。\n\nD. 在非对称标记（$\\tau_x>1$ 和 $\\tau_y=1$）下，拨动开关变得有偏向性：X-高状态更不稳定，需要更少的靶向X的诱导物来切换到Y-高状态，而从Y-高到X-高的反向切换需要更多的靶向Y的诱导物；不对称的程度随 $\\tau_x$ 的增加而增加。", "solution": "该问题陈述经过验证，是有效的。这是一个良定问题，其基础是非线性动力学和合成生物学的既定原理，并使用了基因拨动开关的经典模型。语言精确，设定自洽且在科学上是合理的。\n\n系统行为的分析基于其零斜线，零斜线描述了每种蛋白质浓度变化率为零的条件。系统的稳态，或称不动点，是这些零斜线的交点。零斜线的方程通过设置 $\\frac{dx}{dt}=0$ 和 $\\frac{dy}{dt}=0$ 得到：\n$$ \\delta_x\\,x \\;=\\; \\beta_x\\,\\frac{1}{1+\\left(\\sigma_y y/K_y\\right)^{n_y}} \\;+\\; \\beta_{0x} \\quad (\\text{x-零斜线}) $$\n$$ \\delta_y\\,y \\;=\\; \\beta_y\\,\\frac{1}{1+\\left(\\sigma_x x/K_x\\right)^{n_x}} \\;+\\; \\beta_{0y} \\quad (\\text{y-零斜线}) $$\n这些方程可以写成函数 $x(y)$ 和 $y(x)$ 的形式，代表了 $(x, y)$ 相平面中的曲线。当这两条S型的递减曲线相交于三点时，出现双稳态：两个稳定不动点，分别对应于（X-高，Y-低）和（Y-高，X-低）状态，以及它们之间的一个不稳定鞍点。这些点的位置、稳定性，以及导致它们出现或消失的分岔，都由系统参数决定。\n\n初始的对称、未标记的拨动开关具有参数 $\\beta_x=\\beta_y=\\beta$、$\\beta_{0x}=\\beta_{0y}=\\beta_0$、$K_x=K_y=K$、$n_x=n_y=n$ 和 $\\delta_x=\\delta_y=\\delta$。近似的稳态水平为 $(\\bar{x}_{\\text{high}}, \\bar{y}_{\\text{low}}) \\approx \\left( (\\beta + \\beta_0)/\\delta, \\beta_0/\\delta \\right)$ 和 $(\\bar{x}_{\\text{low}}, \\bar{y}_{\\text{high}}) \\approx \\left( \\beta_0/\\delta, (\\beta + \\beta_0)/\\delta \\right)$。\n\n我们现在分析这两种情景。\n\n**情景 (i): 对称标记 ($\\tau_x = \\tau_y = \\tau > 1$)**\n\n在这种情况下，降解速率变为 $\\delta_x' = \\tau\\delta$ 和 $\\delta_y' = \\tau\\delta$。新的零斜线方程为：\n$$ x(y) = \\frac{1}{\\tau\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_y y/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) $$\n$$ y(x) = \\frac{1}{\\tau\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_x x/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) $$\n\n1.  **对稳态浓度的影响**：与未标记的系统相比，两个零斜线方程都被乘以一个因子 $1/\\tau < 1$。这意味着，对于任何给定的阻遏物浓度，所表达蛋白质的稳态浓度都更低。因此，稳定不动点处的浓度将更低。新的近似水平为 $\\bar{x}_{\\text{high}}' \\approx (\\beta + \\beta_0)/(\\tau\\delta)$ 和 $\\bar{y}_{\\text{high}}' \\approx (\\beta + \\beta_0)/(\\tau\\delta)$。高和低蛋白质水平都降低了 $\\tau$ 倍。\n\n2.  **对迟滞和切换阈值的影响**：产生双稳态开关的相互抑制的有效性，可以通过一个无量纲环路增益参数来量化。在保持产生速率 $\\beta$ 和抑制阈值 $K$ 不变的情况下，增加降解速率 $\\delta$ 会降低稳态蛋白质水平。较低的蛋白质水平导致较弱的抑制，从而降低了反馈回路的有效增益。环路增益较低的系统具有较小的双稳态区域。较小的双稳态区域意味着迟滞窗口变窄。这意味着定义切换阈值的鞍节点分岔发生在较小的诱导物浓度范围内。具体来说，为了从Y-高状态切换到X-高状态，需要施加使Y失活的诱导物，从而降低 $\\sigma_y$。一个更窄的窗口意味着切换发生在更大的 $\\sigma_y$ 值（更接近1）上，这对应于较低的诱导物浓度。同样的逻辑对称地适用于另一个切换。因此，诱导物阈值向内移动。\n\n基于此分析：\n-   **选项 A**：陈述了稳定状态的蛋白质水平下降，但声称迟滞窗口变宽且阈值向外移动。后两个说法不正确。\n-   **选项 B**：陈述了稳定状态的蛋白质水平下降，迟滞窗口变窄，且诱导物阈值向内移动。这与我们的分析完全一致。\n-   **选项 C**：陈述了稳定状态的蛋白质水平增加。这在根本上是错误的。增加的降解必然导致更低的稳态浓度，因为产生函数与降解速率无关。“更快的周转加速了产生周期”这一推理是虚假的。\n\n因此，陈述B是正确的，而A和C是错误的。\n\n**情景 (ii): 非对称标记 ($\\tau_x = \\tau > 1, \\tau_y = 1$)**\n\n这里，降解速率为 $\\delta_x' = \\tau\\delta$ 和 $\\delta_y' = \\delta$。这打破了系统的对称性。零斜线变为：\n$$ x(y) = \\frac{1}{\\tau\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_y y/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) \\quad (\\text{x-零斜线})$$\n$$ y(x) = \\frac{1}{\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_x x/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) \\quad (\\text{y-零斜线})$$\ny-零斜线与未标记的对称情况相同，但x-零斜线被按因子 $1/\\tau$ 缩小。在相平面中，这意味着x-零斜线向y轴移动（即向更低的x值移动）。\n\n1.  **偏向性和稳定性**：x-零斜线的移动打破了相图的对称性。对应于X-高、Y-低状态的交点移动到更低的x值。这种较低浓度的X阻遏物在抑制Y基因表达方面的效果较差。该状态的吸引盆收缩，且该状态更接近中心鞍点，使其更不稳定。相反，Y-高状态变得更鲁棒。系统现在偏向于Y-高、X-低状态。这证实了“拨动开关变得有偏向性：X-高状态更不稳定”。\n\n2.  **切换阈值**：\n    -   **从X-高切换到Y-高**：此切换是通过降低 $\\sigma_x$（添加靶向X的诱导物）来诱导的。这导致y-零斜线向上移动。由于X-高状态已经更不稳定且更接近分岔点，因此只需要y-零斜线一个较小的向上移动就足以触发消除该状态的鞍节点分岔。较小的移动对应于 $\\sigma_x$ 从1开始的较小下降。因此，临界值 $\\sigma_{x,crit}$ 更大（更接近1），意味着需要更少的诱导物。这证实了“……需要更少的靶向X的诱导物来切换……”。\n    -   **从Y-高切换到X-高**：此切换是通过降低 $\\sigma_y$（添加靶向Y的诱导物）来诱导的。这使x-零斜线向右移动。由于x-零斜线最初因标记而被因子 $1/\\tau$ 向左移动，因此需要一个更大的补偿性向右移动才能达到与y-零斜线的切点。这需要 $\\sigma_y$ 有更大的下降。因此，临界值 $\\sigma_{y,crit}$ 更小，意味着需要更多的诱导物。这证实了“……反向切换……需要更多的靶向Y的诱导物”。\n\n3.  **对 $\\tau_x$ 的依赖性**：所有非对称效应都源于增加的降解速率 $\\delta_x' = \\tau_x\\delta$。随着 $\\tau_x$ 的增加，x-零斜线向左移动得更远，放大了所有后果：对X-高状态的不利偏向变得更强，切换所需诱导物浓度的差异也增大。这证实了“……不对称的程度随 $\\tau_x$ 的增加而增加”。\n\n基于此分析：\n-   **选项 D**：该陈述的所有部分都与我们的零斜线分析一致。拨动开关变得有偏向性，X-高状态更不稳定，从该状态切换出去更容易（需要更少的诱导物），切换到该状态更难（需要更多的诱导物），并且这种不对称性随着 $\\tau_x$ 的增加而放大。\n\n因此，陈述D是正确的。\n\n**结论**\n\n我们的分析基于应用于所提供模型的零斜线几何和分岔理论的第一性原理，表明在指定的修改下，陈述B和陈述D都是对系统行为的正确描述。\n\n*   **选项A**：**不正确**。对称标记使迟滞窗口变窄，而不是变宽。\n*   **选项B**：**正确**。对称标记降低了蛋白质水平并使迟滞窗口变窄，使阈值向内移动。\n*   **选项C**：**不正确**。蛋白质水平下降，而不是增加。\n*   **选项D**：**正确**。对X的非对称标记使开关偏向于不利于X-高状态，使其更不稳定，并如所述改变了诱导物阈值。", "answer": "$$\\boxed{BD}$$", "id": "2783198"}, {"introduction": "尽管解析方法能提供深刻的洞察，但大多数现实的基因线路，尤其是不对称的线路，都无法精确求解。这个计算实践旨在解决这一问题，要求您构建一个通用的数值求解器来寻找拨动开关的所有稳态。这项动手编程练习将为您提供一个强大的工具，用以探索系统的行为，验证您的设计直觉，并对任何拨动开关设计进行定量化的响应分析。[@problem_id:2783277]", "problem": "您将设计并实现一个数值程序，用于计算一个经典的双基因遗传双稳态开关（Genetic Toggle Switch）模型在具有希尔型调控的转录抑制作用下的所有不同不动点，并报告几组不同参数集下的解的数量。该双稳态开关在蛋白质水平上由以下无量纲常微分方程组建模，这些方程源于分子生物学中心法则（DNA转录为RNA，翻译为蛋白质）以及经过充分检验的用于转录控制的希尔抑制函数：\n- 对于蛋白质浓度 $x(t)$ 和 $y(t)$，\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{\\alpha_x}{1 + \\left(\\frac{y}{K_y}\\right)^{n}} \\;-\\; x,\n\\qquad\n\\frac{dy}{dt} \\;=\\; \\frac{\\alpha_y}{1 + \\left(\\frac{x}{K_x}\\right)^{m}} \\;-\\; y.\n$$\n这里，$\\alpha_x,\\alpha_y$ 是无量纲的最大合成参数，$K_x,K_y$ 是无量纲的抑制阈值，$n,m$ 是希尔系数（协同性）。不动点是同时满足稳态条件 $\\frac{dx}{dt}=0$ 和 $\\frac{dy}{dt}=0$ 的任意点对 $(x^\\ast,y^\\ast)$。\n\n您的程序必须对下述测试套件中的每一组参数，计算出所有满足 $x^\\ast \\ge 0$ 和 $y^\\ast \\ge 0$ 的不同不动点 $(x^\\ast,y^\\ast)$，然后仅输出找到的不同解的数量。解的独特性必须通过以下标准来确定：两个解 $(x_1,y_1)$ 和 $(x_2,y_2)$ 代表同一个不动点，如果它们同时满足 $|x_1-x_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|x_1|,|x_2|\\}$ 和 $|y_1-y_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|y_1|,|y_2|\\}$，其中 $\\varepsilon_{\\text{abs}} = 10^{-8}$ 且 $\\varepsilon_{\\text{rel}} = 10^{-6}$。\n\n科学假设与约束：\n- 所有参数 $\\alpha_x,\\alpha_y,K_x,K_y,n,m$ 均为严格正实数。\n- 物理上允许的不动点需满足 $x^\\ast \\ge 0$ 和 $y^\\ast \\ge 0$。任何违反这些不等式的候选解都必须被舍弃。\n- 通过构造，单位是无量纲的；报告解的数量时仅报告无量纲的计数值。\n- 您对 $x^\\ast$ 和 $y^\\ast$ 的搜索域可以使用模型隐含的最大值进行限定；任何不动点都必须满足 $0 \\le x^\\ast \\le \\alpha_x$ 和 $0 \\le y^\\ast \\le \\alpha_y$ 这一点是严格成立的。\n\n您的数值程序必须在整个测试套件中具有通用性和鲁棒性，并且不得依赖于不动点的解析闭式解。您可以使用浮点计算。角度单位不适用。结果必须是确定性的。\n\n测试套件（每一项是一个元组 $(\\alpha_x,\\alpha_y,K_x,K_y,n,m)$）：\n- 情况A: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (50,50,1,1,4,4)$\n- 情况B: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (10,10,1,1,1,1)$\n- 情况C: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (40,8,1,1,4,4)$\n- 情况D: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (10,10,5,5,3,3)$\n- 情况E: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (6,6,1,1,1.5,1.5)$\n\n最终输出规范：\n- 您的程序应生成一行输出，其中包含一个整数列表，每个整数对应上述测试用例（按顺序），给出为每个用例找到的不同不动点的数量。\n- 输出必须是单行，且格式必须完全符合\n`[rA,rB,rC,rD,rE]`\n其中 `rA` 是情况A的整数结果，以此类推。", "solution": "该问题陈述经过分析，被确定为有效。它在科学上基于已建立的遗传调控网络理论，数学上是适定的，并以客观、无歧义的规范呈现。它代表了计算系统生物学中一个标准的、非平凡的问题。因此，我们可以着手解决。\n\n任务是为一个代表遗传双稳态开关的耦合常微分方程组，找到所有不同的、非负的不动点 $(x^\\ast, y^\\ast)$ 的数量。不动点是时间导数为零的稳态解。该系统由以下方程给出：\n$$\n\\frac{dx}{dt} = \\frac{\\alpha_x}{1 + \\left(\\frac{y}{K_y}\\right)^{n}} - x\n$$\n$$\n\\frac{dy}{dt} = \\frac{\\alpha_y}{1 + \\left(\\frac{x}{K_x}\\right)^{m}} - y\n$$\n将导数设为零，即可得到不动点 $(x^\\ast, y^\\ast)$ 需满足的条件：\n$$\nx^\\ast = \\frac{\\alpha_x}{1 + \\left(\\frac{y^\\ast}{K_y}\\right)^{n}} \\quad \\equiv f(y^\\ast)\n$$\n$$\ny^\\ast = \\frac{\\alpha_y}{1 + \\left(\\frac{x^\\ast}{K_x}\\right)^{m}} \\quad \\equiv g(x^\\ast)\n$$\n这两个方程定义了系统的零斜线。不动点是这两条零斜线在 $(x, y)$ 平面非负象限内的交点。\n\n为了在不依赖解析形式的情况下数值求解该系统，我们可以将其简化为单变量的求根问题。通过将 $y^\\ast$ 的表达式代入 $x^\\ast$ 的方程，我们得到一个关于 $x^\\ast$ 的单一方程：\n$$\nx^\\ast = f(g(x^\\ast)) = \\frac{\\alpha_x}{1 + \\left( \\frac{1}{K_y} \\left( \\frac{\\alpha_y}{1 + \\left(\\frac{x^\\ast}{K_x}\\right)^{m}} \\right) \\right)^{n}}\n$$\n不动点的 $x$ 坐标 $x^\\ast$ 必须是函数 $H(x)$ 的一个根：\n$$\nH(x) = x - f(g(x)) = 0\n$$\n问题陈述正确地指出，任何具有物理意义的解都必须满足 $0 \\le x^\\ast \\le \\alpha_x$ 和 $0 \\le y^\\ast \\le \\alpha_y$。这是因为希尔型抑制项是有界的。因此，我们可以在闭区间 $[0, \\alpha_x]$ 内搜索 $H(x)=0$ 的根。\n\n找到所有这些根的数值步骤如下：\n1.  **离散化定义域**：使用一个精细的网格将 $x$ 的搜索区间 $[0, \\alpha_x]$ 分割成大量的小子区间。设网格点为 $x_i$，其中 $i=0, 1, \\dots, N$。\n2.  **界定潜在根的区间**：在每个网格点 $x_i$ 上计算函数 $H(x)$ 的值。如果 $H(x_i)$ 和 $H(x_{i+1})$ 符号相反，即 $H(x_i) \\cdot H(x_{i+1}) < 0$，则根据介值定理，在子区间 $[x_i, x_{i+1}]$ 内保证存在一个根，因为函数 $H(x)$ 是连续的。我们还需明确检查那些恰好落在网格点上，即 $H(x_i) = 0$ 的根。\n3.  **精确求解根**：对于每个包含根的子区间 $[x_i, x_{i+1}]$，采用一个鲁棒的数值求根算法来高精度地确定根 $x^\\ast$。Brent-Dekker 方法（在`scipy.optimize`中为`brentq`）是完成此任务的绝佳选择，因为它结合了有保证的收敛性和高效率。\n4.  **构建完整解**：对于找到的每个不同的根 $x^\\ast_j$，使用零斜线方程 $y^\\ast_j = g(x^\\ast_j)$ 计算出相应的 $y$ 坐标。这样就得到了一个候选不动点 $(x^\\ast_j, y^\\ast_j)$。\n5.  **筛选不同解**：由于网格搜索的特性，该过程可能会找到同一数学根的多个数值近似值。因此，必须对候选解列表进行筛选，以仅保留不同的不动点。这可以通过遍历解列表，并使用问题中指定的精确容差标准将每个新解与已接受的不同解进行比较来完成：如果 $|x_1 - x_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|x_1|, |x_2|\\}$ 且 $|y_1 - y_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|y_1|, |y_2|\\}$（其中 $\\varepsilon_{\\text{abs}} = 10^{-8}$ 且 $\\varepsilon_{\\text{rel}} = 10^{-6}$），则认为两个点 $(x_1, y_1)$ 和 $(x_2, y_2)$ 是相同的。\n\n这种系统性的方法确保了在指定域内的所有不动点都能被准确地找到和计数，完全符合问题的约束。最终的 Python 实现将对测试套件中提供的每一组参数执行此逻辑。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Main function to solve the genetic toggle switch problem for all test cases.\n    It computes the number of distinct fixed points for each parameter set and\n    prints the results in the specified format.\n    \"\"\"\n    test_cases = [\n        # (alpha_x, alpha_y, K_x, K_y, n, m)\n        (50.0, 50.0, 1.0, 1.0, 4.0, 4.0),  # Case A\n        (10.0, 10.0, 1.0, 1.0, 1.0, 1.0),  # Case B\n        (40.0, 8.0, 1.0, 1.0, 4.0, 4.0),   # Case C\n        (10.0, 10.0, 5.0, 5.0, 3.0, 3.0),  # Case D\n        (6.0, 6.0, 1.0, 1.0, 1.5, 1.5),    # Case E\n    ]\n\n    results = []\n    for params in test_cases:\n        num_solutions = count_fixed_points(params)\n        results.append(num_solutions)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef count_fixed_points(params):\n    \"\"\"\n    Calculates the number of distinct fixed points for a given set of parameters.\n    \"\"\"\n    alpha_x, alpha_y, K_x, K_y, n, m = params\n    \n    eps_abs = 1e-8\n    eps_rel = 1e-6\n\n    def is_close(p1, p2):\n        \"\"\"\n        Custom comparison function to determine if two points are the same\n        based on the problem's specific tolerance definition.\n        \"\"\"\n        x1, y1 = p1\n        x2, y2 = p2\n        \n        x_tol = eps_abs + eps_rel * max(abs(x1), abs(x2))\n        y_tol = eps_abs + eps_rel * max(abs(y1), abs(y2))\n        \n        return abs(x1 - x2) <= x_tol and abs(y1 - y2) <= y_tol\n\n    def g(x_val):\n        \"\"\"Defines the nullcline function y = g(x).\"\"\"\n        x_safe = np.maximum(x_val, 0)\n        return alpha_y / (1.0 + (x_safe / K_x)**m)\n\n    def f(y_val):\n        \"\"\"Defines the nullcline function x = f(y).\"\"\"\n        y_safe = np.maximum(y_val, 0)\n        return alpha_x / (1.0 + (y_safe / K_y)**n)\n\n    def H(x_val):\n        \"\"\"Root-finding function H(x) = x - f(g(x)).\"\"\"\n        return x_val - f(g(x_val))\n\n    search_min = 0.0\n    search_max = alpha_x\n    \n    N_grid = 20000\n    x_grid = np.linspace(search_min, search_max, N_grid)\n    \n    solutions = []\n\n    try:\n        h_vals = np.array([H(xi) for xi in x_grid])\n    except (OverflowError, ValueError):\n        # Fallback for numerical instability, though not expected here\n        print(\"Warning: Numerical instability encountered.\")\n        return 0\n\n    # Grid scan to bracket and find roots\n    for i in range(N_grid - 1):\n        h1, h2 = h_vals[i], h_vals[i+1]\n        x1, x2 = x_grid[i], x_grid[i+1]\n\n        root_to_add = None\n        if h1 * h2 < 0:\n            try:\n                # A root is bracketed, refine it with brentq\n                root_to_add = brentq(H, x1, x2)\n            except ValueError:\n                # This should not be reached if h1*h2 < 0, but is a safeguard\n                pass\n        elif h1 == 0:\n            # A root lies exactly on a grid point\n            root_to_add = x1\n            \n        if root_to_add is not None:\n            solutions.append((root_to_add, g(root_to_add)))\n    \n    # Check the very last grid point\n    if h_vals[-1] == 0:\n        root_to_add = x_grid[-1]\n        solutions.append((root_to_add, g(root_to_add)))\n\n    # Filter for distinct solutions using the specified tolerance\n    distinct_solutions = []\n    if not solutions:\n        return 0\n    \n    for sol in solutions:\n        is_distinct = True\n        for d_sol in distinct_solutions:\n            if is_close(sol, d_sol):\n                is_distinct = False\n                break\n        if is_distinct:\n            # Check physical admissibility (x>=0, y>=0)\n            if sol[0] >= 0 and sol[1] >= 0:\n                distinct_solutions.append(sol)\n            \n    return len(distinct_solutions)\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2783277"}]}