{"hands_on_practices": [{"introduction": "细菌的 SOS 反应是理解细胞如何协调应对 DNA 损伤的经典模型。本练习旨在挑战您通过预测移除关键组分——细胞分裂抑制蛋白 SulA——的后果来剖析该途径。这项实践将磨练您的机理推理能力，将损伤修复和耐受的功能与细胞周期检查点控制的功能区分开来，这是分子遗传学中的一个基本概念。[@problem_id:2862403]", "problem": "您正在研究细菌SOS应答在DNA损伤后对存活和诱变的影响。您比较了两种同基因的大肠杆菌 (Escherichia coli) 菌株：一种是野生型菌株，另一种是 sulA 基因被精确删除的菌株（记为 $\\Delta \\mathrm{sulA}$），其所有其他SOS组分（包括 recA、lexA、umuDC 和 dinB）均完好无损。使用足以诱导SOS应答但又不足以使群体绝育的剂量的紫外线（UV）进行照射。在富集培养基中恢复一段时间后，您通过能形成菌落的活细胞比例来量化存活率，定义为 $S \\equiv N_{\\mathrm{CFU,post}}/N_{\\mathrm{CFU,pre}}$，其中 $N_{\\mathrm{CFU}}$ 表示菌落形成单位（CFU）。您通过对利福平产生抗性的活细胞比例来量化突变频率，定义为 $M \\equiv N_{\\mathrm{Rif}^R}/N_{\\mathrm{viable}}$。\n\n请使用以下基本事实作为您推理的起点：UV诱导产生嘧啶二聚体，这些二聚体阻断了复制型脱氧核糖核酸（DNA）聚合酶；停滞的复制叉处的单链DNA会激活RecA，使其进入共蛋白酶状态，从而促进LexA阻遏蛋白的自切割，解除对SOS调节子的阻遏；SOS调节子包括核苷酸切除修复相关基因（例如，uvrA和uvrB）、易错的跨损伤DNA合成（TLS）聚合酶相关基因（例如，编码DNA聚合酶V的umuDC和编码DNA聚合酶IV的dinB），以及编码一种细胞分裂抑制剂的sulA基因，该抑制剂通过与FtsZ结合来抑制胞质分裂。假设TLS聚合酶在参与作用时，由于保真度降低而提高了突变频率，并且SulA的主要作用是抑制细胞分裂（而不是直接调节DNA修复）。\n\n在UV照射后，与野生型相比，以下哪项最能预测 $\\Delta \\mathrm{sulA}$ 菌株的表型后果？\n\nA. $S$ 增加而 $M$ 减少，因为持续的细胞分裂减少了对易错的跨损伤合成的依赖。\n\nB. $S$ 减少但 $M$ 大致保持不变（按活细胞计算），因为分裂抑制的丧失降低了存活率，而诱变是由SOS诱导的、独立于SulA的TLS所决定的。\n\nC. $S$ 和 $M$ 均减少，因为诱导跨损伤聚合酶需要SulA。\n\nD. $S$ 不变而 $M$ 增加，因为SulA通常会抑制跨损伤聚合酶。\n\nE. $S$ 和 $M$ 均增加，因为SulA通常会抑制SOS基因的诱导。", "solution": "在尝试解答之前，对所提供的问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- **菌株：** 两种同基因的*大肠杆菌*(*Escherichia coli*)菌株：野生型（WT）和`sulA`基因缺失的突变体（$\\Delta \\mathrm{sulA}$）。其他SOS组分（`recA`、`lexA`、`umuDC`、`dinB`）均完好。\n- **处理：** 使用足以诱导SOS应答但不会导致绝育的剂量的紫外线（UV）进行照射。\n- **测量的表型：**\n  - 存活率，$S \\equiv N_{\\mathrm{CFU,post}}/N_{\\mathrm{CFU,pre}}$，其中 $N_{\\mathrm{CFU}}$ 是菌落形成单位。\n  - 突变频率，$M \\equiv N_{\\mathrm{Rif}^R}/N_{\\mathrm{viable}}$，即对利福平有抗性的活细胞比例。\n- **基本原理：**\n  - UV照射导致嘧啶二聚体，阻断复制型脱氧核糖核酸（DNA）聚合酶。\n  - 停滞的复制叉产生单链DNA（ssDNA），从而激活RecA。\n  - 激活的RecA促进LexA阻遏蛋白的自切割，导致SOS调节子的去阻遏。\n  - SOS调节子包括：\n    - 核苷酸切除修复基因（例如 `uvrA`、`uvrB`）。\n    - 跨损伤DNA合成（TLS）聚合酶基因：`umuDC`（DNA聚合酶V）和`dinB`（DNA聚合酶IV）。\n    - `sulA`，其编码一种与FtsZ结合的细胞分裂抑制剂。\n- **假设：**\n  - TLS聚合酶提高突变频率。\n  - SulA的主要作用是抑制细胞分裂。它不直接调节DNA修复。\n\n**步骤2：问题陈述的验证**\n该问题描述了一个关于细菌SOS应答的经典微生物遗传学实验。所述的关键基因和蛋白质——`recA`、`lexA`、`umuDC`、`dinB`和`sulA`——的作用与已建立的分子生物学知识一致。实验设计，包括使用`$\\Delta \\mathrm{sulA}$`突变体、UV照射以及测量存活率和突变频率，是标准且科学合理的。$S$和$M$的定义精确且符合常规。该问题表述清晰、客观、内部一致，并依赖于可验证的科学原理。未发现任何缺陷。\n\n**步骤3：结论与行动**\n问题陈述有效。现在将推导解答。\n\n**解答的推导**\n\n该问题要求预测在UV照射后，`$\\Delta \\mathrm{sulA}$`菌株相对于野生型（WT）菌株在存活率（$S$）和突变频率（$M$）上的变化。这需要分析`sulA`基因产物在SOS应答背景下的具体作用。\n\n1.  **野生型（WT）应答分析：**\n    UV照射后，嘧啶二聚体形式的DNA损伤会使DNA复制停滞。停滞的复制叉处产生的ssDNA会激活RecA。激活的RecA促进LexA阻遏蛋白的自催化切割。这会解除对整个SOS调节子的阻遏，导致超过$40$个基因的协同表达。\n    - **存活率（$S$）：** 被诱导的基因之一是`sulA`。SulA蛋白与FtsZ蛋白结合，FtsZ是一种微管蛋白同源物，它形成的Z环对细菌胞质分裂至关重要。这种相互作用抑制了细胞分裂。由此产生的暂时性细胞周期停滞为细胞在尝试分离其染色体之前，通过核苷酸切除修复等途径修复DNA损伤提供了额外的时间。如果一个细胞在染色体受损的情况下分裂，它将面临产生不存活子细胞的风险（例如，一个子细胞接收到断裂的染色体）。因此，在DNA损伤条件下，SulA介导的分裂停滞是一种促进存活的机制。\n    - **诱变（$M$）：** SOS调节子还包括`umuDC`和`dinB`，它们分别编码易错的TLS聚合酶——DNA聚合酶V（Pol V）和DNA聚合酶IV（Pol IV）。这些聚合酶能够在嘧啶二聚体等损伤位点上合成DNA，从而完成复制并有助于存活。然而，由于它们的保真度低，它们是突变的主要来源。这种现象被称为SOS诱变。\n\n2.  **`$\\Delta \\mathrm{sulA}$`突变体应答分析：**\n    `$\\Delta \\mathrm{sulA}$`菌株的`sulA`基因被删除。问题陈述表明所有其他SOS组分均完好。\n    - **对存活率（$S$）的影响：** UV照射后，SOS应答像在WT中一样被诱导。然而，由于`sulA`基因缺失，SulA蛋白不会产生。因此，没有对FtsZ的抑制，也没有细胞分裂的停滞。尽管存在未修复的DNA损伤，细胞仍会继续尝试分裂。这种分离受损染色体的尝试会导致高频率的致死事件，例如形成无核细胞或染色体断裂的细胞（一种被称为“鲁莽”分裂的现象）。这导致能够形成菌落的活细胞数量显著减少。因此，`$\\Delta \\mathrm{sulA}$`菌株的存活率（$S$）将相对于WT菌株**降低**。\n    - **对诱变（$M$）的影响：** 突变频率$M$被定义为每个*活*细胞的突变数（$M \\equiv N_{\\mathrm{Rif}^R}/N_{\\mathrm{viable}}$）。负责产生突变的机制——TLS聚合酶Pol V和Pol IV——由`umuDC`和`dinB`编码，它们是SOS调节子的一部分，并被假设在`$\\Delta \\mathrm{sulA}$`菌株中正常诱导。问题明确指出，SulA的作用仅限于抑制细胞分裂，而非调节DNA修复。因此，TLS的分子过程不受SulA缺失的直接影响。`$\\Delta \\mathrm{sulA}$`群体中任何能够经受住UV处理并存活下来的细胞（即被计为“活细胞”）都必须已经成功修复了其DNA，这一过程涉及与存活的WT细胞中相同的SOS诱导的TLS聚合酶。这些聚合酶的出错频率与SulA无关。因此，与WT相比，存活细胞亚群中的突变频率应该**大致保持不变**。\n\n**推导结论：**\n对于`$\\Delta \\mathrm{sulA}$`菌株相对于WT：\n- 存活率（$S$）预计将**降低**。\n- 突变频率（$M$）预计将**大致保持不变**。\n\n**选项评估**\n\n- **A. $S$ 增加而 $M$ 减少，因为持续的细胞分裂减少了对易错的跨损伤合成的依赖。**\n这是错误的。由于致死性分离，$S$ 会减少。持续分裂减少了对TLS依赖的推理也是有缺陷的；对TLS的需求是由DNA损伤的存在决定的，而不是由细胞分裂状态决定的。**错误**。\n\n- **B. $S$ 减少但 $M$ 大致保持不变（按活细胞计算），因为分裂抑制的丧失降低了存活率，而诱变是由SOS诱导的、独立于SulA的TLS所决定的。**\n这个预测与我们的推导相符。由于致死性细胞分裂事件，$S$ 减少。由于引起突变的TLS系统独立于`sulA`，且频率是按活细胞计算的，所以$M$ 保持不变。所提供的推理也是正确的。**正确**。\n\n- **C. $S$ 和 $M$ 均减少，因为诱导跨损伤聚合酶需要SulA。**\n这是错误的。“诱导跨损伤聚合酶需要SulA”这一前提在事实上是错误的。SulA是SOS应答的效应蛋白，而不是其他SOS基因的调节蛋白。主调节系统是LexA/RecA系统。**错误**。\n\n- **D. $S$ 不变而 $M$ 增加，因为SulA通常会抑制跨损伤聚合酶。**\n这是错误的。$S$ 并非不变；它会显著减少。“SulA通常会抑制跨损伤聚合酶”这一前提在事实上也是错误的。它的靶标是FtsZ。**错误**。\n\n- **E. $S$ 和 $M$ 均增加，因为SulA通常会抑制SOS基因的诱导。**\n这是错误的。$S$ 减少，而不是增加。“SulA通常会抑制SOS基因的诱导”这一前提是错误的。LexA是SOS调节子的阻遏蛋白；SulA是它的产物之一。**错误**。", "answer": "$$\\boxed{B}$$", "id": "2862403"}, {"introduction": "除了存活率，DNA 损伤和修复的最终结果是其对基因组序列的影响，这种影响可以被捕获为一种“突变印记” (mutational signature)。本练习要求您解读来自不同修复缺陷菌株的假设但真实的突变谱，以推断各种修复途径的作用。您还将基于您的模型预测遗传相互作用（上位性），从而将经典遗传学与现代基因组学联系起来，学习如何从定量测序数据中推断途径功能和相互关系。[@problem_id:2945691]", "problem": "在研究紫外线（UV）照射后脱氧核糖核酸（DNA）损伤和修复时，有一组经典的观察结果：UV会在二嘧啶位点诱导产生大体积损伤，主要是环丁烷嘧啶二聚体（CPDs）和嘧啶-(6-4)-嘧啶酮光产物。核苷酸切除修复（NER）通过损伤识别和双链切除来切除此类大体积损伤；光裂合酶（Photolyase）的光复活作用利用可见光直接逆转CPDs；跨损伤合成（TLS）聚合酶以较高的错误率为代价绕过未修复的损伤；错配修复（MMR）校正复制过程中产生的碱基-碱基错配，但不去除大体积的光产物。一个普遍的预期是，跨越UV光产物的TLS会产生一个特征性的突变谱，其富含二嘧啶背景下的 $C \\to T$ 取代和串联的 $CC \\to TT$ 变化。\n\n研究人员对一种细菌在模拟处理和单次UV脉冲处理后的突变积累株系进行了测序，取样了野生型和几种修复突变体。对于每个菌株，他们计算了在所有检出的突变中，二嘧啶背景下的 $C \\to T$ 碱基取代的比例以及串联 $CC \\to TT$ 双碱基取代的比例。他们还记录了每个谱系的总突变数是否发生显著变化。关键的观察结果如下：\n\n- 模拟处理的野生型显示出以 $G:C \\to A:T$ 转换为主的基线谱（约占取代的$60\\%$），其中二嘧啶位点的 $C \\to T$ 突变稀少（$\\lt$ $5\\%$），而串联 $CC \\to TT$ 突变基本不存在（$\\approx$ $0\\%$）。\n- 在野生型中，UV处理后，二嘧啶位点 $C \\to T$ 的比例上升至 $\\approx$ $65\\%$，串联 $CC \\to TT$ 比例为 $\\approx$ $8\\%$。\n- 在光裂合酶缺失（$\\Delta$phr；光裂合酶缺陷）的菌株中，UV处理后，二嘧啶位点 $C \\to T$ 的比例进一步增加至 $\\approx$ $78\\%$，串联 $CC \\to TT$ 增加至 $\\approx$ $15\\%$。\n- 在NER识别突变体（$\\Delta$uvrA；NER缺陷）中，UV处理后，二嘧啶位点 $C \\to T$ 的比例增加至 $\\approx$ $82\\%$，串联 $CC \\to TT$ 增加至 $\\approx$ $14\\%$。\n- 在TLS聚合酶V突变体（$\\Delta$umuC；TLS缺陷）中，UV处理后，二嘧啶位点 $C \\to T$ 的比例下降至 $\\approx$ $24\\%$，串联 $CC \\to TT$ 降至 $\\approx$ $0\\%$；存活者明显减少（定性上，生存能力降低），但存活下来的菌株与野生型相比，其突变谱中UV特征性突变减少了。\n- 在MMR突变体（$\\Delta$mutS；MMR缺陷）中，UV处理后，每个谱系的碱基取代总数大约翻了一番（约$2$倍），但二嘧啶位点 $C \\to T$ 的比例（$\\approx$ $63\\%$）和串联 $CC \\to TT$ 的比例（$\\approx$ $7\\%$）与野生型相似。\n\n假设使用标准定义：这里的上位性（epistasis）指的是，同一线性通路中两个组分的双突变体所表现出的敏感性不高于最敏感的单突变体（即一个突变对另一个突变具有上位性），而作用于平行或部分冗余通路中的组分，其双突变体通常比任一单突变体都更敏感。\n\n哪个选项最好地整合了基于突变谱的通路作用推断与对双突变体在UV敏感性方面上位性的正确预测？\n\nA. 去除UV光产物的主要保护性通路是核苷酸切除修复（NER），而 $C \\to T$ 和 $CC \\to TT$ 特征源于跨损伤合成（TLS）绕过未修复的损伤；因此，两个NER组分（例如 $\\Delta$uvrA $\\Delta$uvrC）的双突变体在UV敏感性方面将表现出上位性（敏感性不高于最敏感的单突变体），而 $\\Delta$uvrA $\\Delta$umuC 双突变体将比任一单突变体对UV更敏感。\n\nB. 错配修复（MMR）是影响UV诱导突变谱的主要通路，该谱主要反映了胞嘧啶脱氨基作用；因此，$\\Delta$mutS $\\Delta$umuC 双突变体在UV敏感性方面将表现出上位性，而 $\\Delta$uvrA $\\Delta$uvrC 双突变体即使没有UV照射也将是合成致死的。\n\nC. 在这些条件下，光裂合酶的光复活作用是唯一相关的UV损伤修复方式；因此，$\\Delta$phr $\\Delta$uvrA 双突变体在UV敏感性方面将表现出上位性，且TLS在UV诱导的突变发生中没有可检测到的作用。\n\nD. 作用于CPDs的碱基切除修复（BER）是去除UV光产物的主要途径；因此，两个BER糖基化酶（例如 $\\Delta$xthA $\\Delta$nei）的双突变体在UV敏感性方面表现出上位性，并且TLS的缺失（例如 $\\Delta$umuC）应增加而不是减少存活者中串联 $CC \\to TT$ 突变的比例。\n\n选择唯一的最佳选项。", "solution": "我们从DNA修复生物学的基本原理和既有观察结果出发：\n\n- 紫外线（UV）在二嘧啶位点诱导大体积损伤，特别是环丁烷嘧啶二聚体（CPDs）和嘧啶-(6-4)-嘧啶酮光产物。这些损伤会阻碍复制聚合酶。\n- 核苷酸切除修复（NER）通过双链切除识别并切除大体积损伤，然后进行重新合成。NER的缺失导致光产物持续存在至S期。\n- 光裂合酶的光复活作用利用可见光直接逆转CPDs；光裂合酶的缺失会增加CPD的持续存在，但不影响非CPD损伤。\n- 跨损伤合成（TLS）聚合酶能够以较高的错误率为代价绕过未修复的损伤；跨越UV光产物的旁路合成通常会产生一个特征性的突变谱，富含二嘧啶背景下的 $C \\to T$ 取代和串联的 $CC \\to TT$ 变化。\n- 错配修复（MMR）校正复制错误（错配和小的环），但不去除大体积的光产物；其缺失会增加复制错误的保留，而不会改变基础的损伤谱。\n- 线性通路中的上位性：同一通路中两个组分的双突变体不比最敏感的单突变体更敏感（这些突变是上位性的）。对于平行或部分冗余的通路，双突变体通常比任一单突变体更敏感。\n\n对突变谱的解读：\n\n- 模拟处理的野生型显示出基线的 $G:C \\to A:T$ 转换和可忽略的UV特征；这只是设定了基线水平。\n- 在野生型中，UV处理后，二嘧啶位点 $C \\to T$ 的比例为 $\\approx$ $65\\%$，串联 $CC \\to TT$ 为 $\\approx$ $8\\%$。这与TLS跨越UV光产物产生典型的UV特征相符。\n- 在 $\\Delta$phr 中，UV处理后，二嘧啶位点 $C \\to T$ 的比例为 $\\approx$ $78\\%$，而 $CC \\to TT$ 为 $\\approx$ $15\\%$，均相对于野生型增加。光裂合酶的缺失增加了CPD的持续存在；因此更多的损伤持续到S期，必须由TLS绕过，从而增加了UV特征。这支持了光裂合酶作为与NER平行的保护性通路。\n- 在 $\\Delta$uvrA 中，UV处理后，二嘧啶位点 $C \\to T$ 的比例为 $\\approx$ $82\\%$，而 $CC \\to TT$ 为 $\\approx$ $14\\%$，代表了更强的UV特征。NER的缺失使得更多的光产物得以持续存在，再次增加了对TLS的依赖，从而增强了UV特征。这支持了NER是针对大体积UV损伤的主要保护性通路。\n- 在 $\\Delta$umuC 中，UV处理后，二嘧啶位点 $C \\to T$ 的比例为 $\\approx$ $24\\%$，而 $CC \\to TT$ 为 $\\approx$ $0\\%$，即存活者中的UV特征被耗尽了。如果TLS聚合酶V（UmuC）是大多数UV诱导突变的原因，这正是预期的结果；没有TLS，细胞更加敏感（存活者更少），而那些存活下来的细胞避免了TLS介导的突变，因此显示出减少的UV特征性突变。\n- 在 $\\Delta$mutS 中，UV处理后，总突变数增加了约2倍，但二嘧啶位点 $C \\to T$ 的比例（$\\approx$ $63\\%$）和 $CC \\to TT$ 的比例（$\\approx$ $7\\%$）与野生型保持相似。这表明MMR调节了复制错误的总负担，但并不决定UV损伤谱，这与MMR不去除大体积UV损伤的认识一致。\n\n由此，我们推断：\n\n- 针对UV光产物的主要保护性通路是NER（在存在的情况下，光裂合酶平行发挥作用）。\n- UV特征性突变（二嘧啶位点的 $C \\to T$ 和 $CC \\to TT$）源于TLS跨越未修复的光产物。\n- 上位性预测：\n  - 两个NER组分（例如UvrA和UvrC）作用于同一线性NER通路中；因此 $\\Delta$uvrA $\\Delta$uvrC 在UV敏感性方面应该是上位性的（不比更敏感的单突变体更差，因为任何一个缺陷都会使NER失效）。\n  - NER和TLS平行作用（一个去除损伤，另一个耐受损伤）。因此，一个 $\\Delta$uvrA $\\Delta$umuC 双突变体应该比任一单突变体都对UV更敏感，因为NER的缺失留下了更多的损伤，而TLS的缺失移除了绕行途径，两者结合降低了存活率。\n  - 光裂合酶和NER在CPD方面也是平行或部分冗余的；因此 $\\Delta$phr $\\Delta$uvrA 双突变体应该比任一单突变体都更敏感（非上位性）。\n  - MMR和TLS在处理UV光产物方面不在同一线性通路中；它们的双突变体不应显示出可归因于单一去除UV损伤通路的经典上位性。\n\n逐项分析选项：\n\nA. 指出NER是主要保护通路，UV特征来自TLS。这与数据相符：NER或光裂合酶的缺失增加了UV特征；TLS的缺失则减少了它。预测了 $\\Delta$uvrA $\\Delta$uvrC 的上位性（同一通路）和 $\\Delta$uvrA $\\Delta$umuC 比任一单突变体都具有更高的敏感性（平行功能）。两个预测都与基本原理和观察结果一致。结论 — 正确。\n\nB. 声称MMR是主导，且突变谱主要反映胞嘧啶脱氨。这与数据相矛盾：$\\Delta$mutS 显示总突变数增加约2倍，但UV特征比例没有大的变化，并且UV特征是TLS跨越光产物的典型特征，而不是大量脱氨。预测 $\\Delta$mutS $\\Delta$umuC 的上位性（不合理，不同通路）和 $\\Delta$uvrA $\\Delta$uvrC 在没有UV的情况下合成致死（无依据；NER的缺失在没有DNA损伤时不是致死的）。结论 — 错误。\n\nC. 声称光裂合酶是唯一相关通路，且TLS无作用。这与UV特征对TLS的强依赖性（$\\Delta$umuC 将串联 $CC \\to TT$ 的UV特征性突变减少到 $\\approx$ $0\\%$）以及NER缺陷会增加UV特征的观察相冲突。预测了 $\\Delta$phr $\\Delta$uvrA 的上位性，但光裂合酶和NER是平行作用的；双突变体通常比任一单突变体都更敏感。结论 — 错误。\n\nD. 声称碱基切除修复（BER）移除CPDs，这在机理上是不正确的：BER针对的是小的、非大体积的损伤，而不是像CPDs和(6-4)光产物这样的大体积UV光产物。还预测了TLS的缺失会增加存活者中 $CC \\to TT$ 的比例，这与在 $\\Delta$umuC 中观察到的耗尽至 $\\approx$ $0\\%$ 的现象相反。结论 — 错误。\n\n因此，只有选项A连贯地整合了基于突变谱的推断和上位性预测。", "answer": "$$\\boxed{A}$$", "id": "2945691"}, {"introduction": "在细胞中观察到的突变谱通常是几种不同过程的复合混合物。计算生物学中的一项关键任务就是对这些信号进行拆解。这项计算挑战将引导您实现一个核心算法——非负最小二乘法 (nonnegative least squares, NNLS)，将观察到的突变谱分解为已知潜在突变印记的贡献。通过完成这项练习，您将获得处理前沿定量方法的实践经验，这些方法被广泛应用于癌症基因组学和进化研究中，以理解细胞或生物体中的突变发生史。[@problem_id:2753137]", "problem": "在合成生物学中，一个样本中观测到的突变谱通常被建模为典型突变特征的非负线性组合，这些特征反映了潜在的诱变过程和DNA修复通路活性。在一种将每个谱表示为不同突变类别上的相对频率的归一化方法下，该观测模型可以写为 $v \\approx S x$，其中 $v \\in \\mathbb{R}_{\\ge 0}^{m}$ 是观测到的谱，$S \\in \\mathbb{R}_{\\ge 0}^{m \\times n}$ 是一个将 $n$ 个已知的非负特征向量作为列的矩阵，$x \\in \\mathbb{R}_{\\ge 0}^{n}$ 是待估计的未知非负贡献。假设归一化后存在加性的、近似高斯的测量噪声，最大似然估计对应于求解非负最小二乘问题 $\\min_{x \\ge 0} \\| S x - v \\|_{2}$。\n\n您的任务是编写一个程序，为下面的每个测试案例计算其非负最小二乘估计 $\\hat{x} = \\arg\\min_{x \\ge 0} \\| S x - v \\|_{2}$。每个测试案例指定一个矩阵 $S$ 和一个向量 $v$。您的程序必须为每种情况数值求解 $\\min_{x \\ge 0} \\| S x - v \\|_{2}$ 并返回解向量。下面所有的输入在维度上和生物学上都是合理的（非负的突变谱和特征）。没有需要报告的物理单位；所有量都是无量纲的，并且没有角度。最终答案应四舍五入到$6$位小数。\n\n您可以不加证明地假设以下基本原理：突变谱的线性建模 $v \\approx S x$ 以及 $S$、$v$ 和 $x$ 的非负性；高斯噪声与最小二乘法之间的联系；以及非负最小二乘问题的凸性。\n\n测试套件：\n- 案例 $1$（良态，精确重构）。$m = 6$, $n = 3$。\n  - $$S_{1} = \\begin{bmatrix}\n  0.6 & 0.1 & 0.05 \\\\\n  0.1 & 0.6 & 0.1 \\\\\n  0.0 & 0.1 & 0.6 \\\\\n  0.2 & 0.0 & 0.1 \\\\\n  0.05 & 0.1 & 0.05 \\\\\n  0.05 & 0.1 & 0.1\n  \\end{bmatrix}$$\n  - $$v_{1} = \\begin{bmatrix} 0.28 \\\\ 0.24 \\\\ 0.15 \\\\ 0.10 \\\\ 0.06 \\\\ 0.07 \\end{bmatrix}$$（构造为 $S_{1} \\cdot \\begin{bmatrix} 0.4 \\\\ 0.3 \\\\ 0.2 \\end{bmatrix}$）。\n- 案例 $2$（零谱边界）。$m = 6$, $n = 3$。\n  - $S_{2} = S_{1}$。\n  - $$v_{2} = \\begin{bmatrix} 0.0 \\\\ 0.0 \\\\ 0.0 \\\\ 0.0 \\\\ 0.0 \\\\ 0.0 \\end{bmatrix}$$。\n- 案例 $3$（秩亏特征，多个最优解）。$m = 5$, $n = 3$。\n  - $$S_{3} = \\begin{bmatrix}\n  0.4 & 0.4 & 0.0 \\\\\n  0.2 & 0.2 & 0.2 \\\\\n  0.1 & 0.1 & 0.4 \\\\\n  0.1 & 0.1 & 0.2 \\\\\n  0.2 & 0.2 & 0.2\n  \\end{bmatrix}$$\n  - $$v_{3} = \\begin{bmatrix} 0.2 \\\\ 0.2 \\\\ 0.25 \\\\ 0.15 \\\\ 0.2 \\end{bmatrix}$$（构造为 $\\frac{1}{2} c_{1} + \\frac{1}{2} c_{3}$，其中 $S_3$ 的列 $c_1$ 和 $c_2$ 相同）。\n- 案例 $4$（对于锥外的目标欠完备，正解）。$m = 3$, $n = 2$。\n  - $$S_{4} = \\begin{bmatrix}\n  1.0 & 0.2 \\\\\n  0.2 & 1.0 \\\\\n  0.2 & 0.2\n  \\end{bmatrix}$$\n  - $$v_{4} = \\begin{bmatrix} 0.2 \\\\ 0.2 \\\\ 1.0 \\end{bmatrix}$$。\n- 案例 $5$（良态，不同的精确混合）。$m = 6$, $n = 3$。\n  - $S_{5} = S_{1}$。\n  - $$v_{5} = \\begin{bmatrix} 0.2575 \\\\ 0.31 \\\\ 0.075 \\\\ 0.075 \\\\ 0.065 \\\\ 0.0675 \\end{bmatrix}$$（构造为 $S_{1} \\cdot \\begin{bmatrix} 0.35 \\\\ 0.45 \\\\ 0.05 \\end{bmatrix}$）。\n\n您的程序应生成单行输出，其中包含一个逗号分隔的列表，该列表用方括号括起来，其中每个元素本身就是针对一个测试案例估计出的贡献 $\\hat{x}$ 的列表，顺序与上面相同，并四舍五入到$6$位小数（例如，$[[\\dots],[\\dots],\\dots]$）。", "solution": "所提出的问题是数值优化中的一个经典问题，称为非负最小二乘（Nonnegative Least Squares, NNLS）。任务是确定贡献向量 $x$，它能最好地将观测到的突变谱 $v$ 解释为已知突变特征（矩阵 $S$ 的列）的非负线性组合。\n\n该问题被正式表述为找到向量 $\\hat{x}$，该向量解决以下优化问题：\n$$\n\\hat{x} = \\arg\\min_{x \\ge 0} \\| S x - v \\|_{2}\n$$\n这里，$S \\in \\mathbb{R}_{\\ge 0}^{m \\times n}$ 是特征矩阵，$v \\in \\mathbb{R}_{\\ge 0}^{m}$ 是观测到的谱向量，$x \\in \\mathbb{R}_{\\ge 0}^{n}$ 是未知的贡献向量。约束条件 $x \\ge 0$（逐元素非负）至关重要，因为负贡献在生物学上没有意义。目标函数是残差向量 $S x - v$ 的欧几里得范数 $\\| \\cdot \\|_{2}$。最小化此范数等同于最小化其平方 $\\| S x - v \\|_{2}^{2}$，这是一个标准的最小二乘表述。\n\n这个优化问题是一个凸优化问题。目标函数 $f(x) = \\| S x - v \\|_{2}^{2}$ 是 $x$ 的二次函数，因此是凸函数。由非负性约束 $\\{x \\in \\mathbb{R}^{n} \\mid x_i \\ge 0 \\text{ for } i=1, \\dots, n\\}$ 定义的可行集是一个凸集。在凸集上最小化凸函数保证了任何局部最小值也是全局最小值。因此，全局最优解 $\\hat{x}$ 总是存在的。\n\n解的唯一性取决于矩阵 $S$ 的性质。如果 $S$ 的列是线性无关的（即，$S$ 具有满列秩），则NNLS问题的解是唯一的。如果列是线性相关的，如测试案例3中明确指出的情况，可能存在无穷多个解可以达到相同的最小残差范数。在这种情况下，数值算法通常会从最优解集中返回一个特定的解。\n\n一个用于解决NNLS问题的稳健且广泛使用的算法是由 Lawson 和 Hanson 开发的主动集方法。这种迭代算法确定解向量 $x$ 的哪些分量应为零（“主动集”），哪些应为正，并在每一步中为正分量解决一个无约束最小二乘问题。该方法保证收敛到正确的解。\n\n指定的执行环境允许使用 `scipy` 库。函数 `scipy.optimize.nnls` 提供了 Lawson-Hanson 算法的高效可靠实现。因此，策略将是利用此函数为所提供的5个测试案例中的每一个求解 $\\hat{x}$。\n\n对于 $k \\in \\{1, 2, 3, 4, 5\\}$ 的每个测试案例 $(S_k, v_k)$，其过程如下：\n$1$. 使用 `numpy` 数组定义矩阵 $S_k$ 和向量 $v_k$。\n$2$. 调用 `scipy.optimize.nnls(S_k, v_k)` 函数。此函数返回解向量 $\\hat{x}_k$ 和相应的残差范数。我们只需要解向量。\n$3$. 根据问题要求，将所得向量 $\\hat{x}_k$ 的每个元素四舍五入到6位小数。\n$4$. 所有测试用例的最终结果将被收集到一个列表的列表中，并格式化为指定的字符串格式。\n\n对测试案例的简要分析证实了此方法的适用性：\n- 案例1和5的构造使得 $v = S x_{true}$，其中 $x_{true}$ 是非负的。由于 $S_1$ 是良态的，唯一的NNLS解必定是 $\\hat{x} = x_{true}$。\n- 案例2涉及一个零目标向量 $v_2 = 0$。目标是最小化 $\\|S_2 x\\|_2$ 同时满足 $x \\ge 0$。由于 $S_2$ 的所有条目都是非负的，且其列非零，因此只有在 $x=0$ 时才能达到最小值0。\n- 案例3涉及一个秩亏矩阵 $S_3$，其中前两列相同。存在无限多个最优解。`nnls` 求解器会确定性地找到其中之一。提供的 $v_3$ 是一个精确组合，因此解的残差范数将为零。\n- 案例4是一个例子，其中目标向量 $v_4$ 不在 $S_4$ 列的锥包内。NNLS解将是 $v_4$ 在此锥包上的投影，导致非零残差范数，并且解向量 $\\hat{x}_4$ 将具有正分量。\n\n这种对标准数值方法的系统性应用是解决此问题的可靠且正确的方法。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import nnls\n\ndef solve():\n    \"\"\"\n    Solves a series of Nonnegative Least Squares (NNLS) problems\n    related to mutational signature analysis in synthetic biology.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = []\n\n    # Case 1: Well-conditioned, exact reconstruction\n    S1 = np.array([\n        [0.6, 0.1, 0.05],\n        [0.1, 0.6, 0.1],\n        [0.0, 0.1, 0.6],\n        [0.2, 0.0, 0.1],\n        [0.05, 0.1, 0.05],\n        [0.05, 0.1, 0.1]\n    ])\n    v1 = np.array([0.28, 0.24, 0.15, 0.10, 0.06, 0.07])\n    test_cases.append((S1, v1))\n\n    # Case 2: Zero spectrum boundary\n    S2 = S1\n    v2 = np.zeros(6)\n    test_cases.append((S2, v2))\n\n    # Case 3: Rank-deficient signatures, multiple optima\n    S3 = np.array([\n        [0.4, 0.4, 0.0],\n        [0.2, 0.2, 0.2],\n        [0.1, 0.1, 0.4],\n        [0.1, 0.1, 0.2],\n        [0.2, 0.2, 0.2]\n    ])\n    v3 = np.array([0.2, 0.2, 0.25, 0.15, 0.2])\n    test_cases.append((S3, v3))\n    \n    # Case 4: Undercomplete for a target outside the cone, positive solution\n    S4 = np.array([\n        [1.0, 0.2],\n        [0.2, 1.0],\n        [0.2, 0.2]\n    ])\n    v4 = np.array([0.2, 0.2, 1.0])\n    test_cases.append((S4, v4))\n    \n    # Case 5: Well-conditioned, different exact mixture\n    S5 = S1\n    v5 = np.array([0.2575, 0.31, 0.075, 0.075, 0.065, 0.0675])\n    test_cases.append((S5, v5))\n\n    results = []\n    for S, v in test_cases:\n        # Compute the nonnegative least squares solution\n        x, _ = nnls(S, v)\n        \n        # Round the solution vector to 6 decimal places\n        rounded_x = np.round(x, 6).tolist()\n        results.append(rounded_x)\n\n    # Format the final output string as a list of lists, without spaces.\n    # The repr() function provides a string representation of the list of lists.\n    # We remove spaces to create a compact and unambiguous format.\n    final_output = repr(results).replace(\" \", \"\")\n    \n    print(final_output)\n\nsolve()\n```", "id": "2753137"}]}