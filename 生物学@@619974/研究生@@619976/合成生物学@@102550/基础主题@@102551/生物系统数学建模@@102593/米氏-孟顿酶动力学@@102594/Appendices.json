{"hands_on_practices": [{"introduction": "米氏方程中的动力学参数，$V_{\\max}$ 和 $K_m$，并非抽象的理论值，而是必须通过实验数据来确定。这个实践练习将引导你处理原始的反应速率与底物浓度数据，并探讨两种主流的参数估计方法：直接非线性回归和线性化的 Lineweaver-Burk 作图法。通过亲手实现并比较这两种方法，你不仅能掌握从实验数据中提取关键动力学参数的核心技能，还能深刻理解不同数据分析策略各自的优势与局限，这对于任何实验生物学家都是至关重要的。[@problem_id:2938278]", "problem": "您将获得一个单底物酶在初始速率条件下，遵循 $E + S \\rightleftharpoons ES \\rightarrow E + P$ 结合-催化机制的初始速率测量数据。请从质量作用定律和准稳态假设出发，推导初始速率 $v$ 作为底物浓度 $[S]$ 和表征该酶催化反应的两个参数的函数表达式。然后，实现并使用两种独立的估算程序，从给定的数据集中推断这两个参数：(i) 对推导出的速率定律进行直接非线性最小二乘回归；(ii) 基于 Lineweaver–Burk (LB) 变换进行线性回归。最后，比较每组数据集下两种程序得到的参数估算值。\n\n开始推导的基本依据：\n- 反应机制为 $E + S \\xrightleftharpoons[k_{-1}]{k_1} ES \\xrightarrow{k_2} E + P$，速率常数分别为 $k_1$、$k_{-1}$ 和 $k_2$。\n- 在初始速率条件下，产物积累可忽略不计，总酶浓度 $[E]_T$ 守恒。\n- 复合物 $ES$ 的准稳态条件在早期成立。\n- 可观测的初始速率为 $v = \\frac{d[P]}{dt}|_{t \\to 0^+}$。\n- 假设 $[S]_0 \\gg [E]_T$，因此在初始速率测量期间底物消耗可忽略不计。\n\n您的程序必须：\n1. 从上述基本依据推导出初始速率定律，并将其用作非线性回归模型以估算两个动力学参数。将最大速率表示为 $V_{\\max}$（单位为 $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$），将米氏常数表示为 $K_m$（单位为 $\\mu \\mathrm{M}$）。使用具有物理意义约束（$V_{\\max} > 0$，$K_m > 0$）的无权非线性最小二乘法。\n2. 独立地，应用 Lineweaver–Burk (LB) 变换，将模型重写为参数线性的形式，并通过对变换后的变量进行普通最小二乘法来估算相同的参数。\n3. 对于每个数据集，报告两组参数估算值。$V_{\\max}$ 以 $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$ 表示，$K_m$ 以 $\\mu \\mathrm{M}$ 表示。将报告的每个数字四舍五入到四位有效数字。\n\n测试套件（所有 $[S]$ 值的单位均为 $\\mu \\mathrm{M}$，所有 $v$ 值的单位均为 $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$）：\n- 数据集 A（$[S]$ 范围均衡）：$[S] = [2, 5, 10, 20, 40, 80, 160]$，$v = [0.162, 0.349, 0.641, 0.991, 1.441, 1.792, 2.118]$。\n- 数据集 B（低 $[S]$ 密集）：$[S] = [0.5, 1, 2, 3, 4, 5, 8]$，$v = [0.106, 0.208, 0.335, 0.461, 0.522, 0.612, 0.727]$。\n- 数据集 C（高 $[S]$ 密集）：$[S] = [10, 20, 50, 100, 200, 400, 800]$，$v = [0.040, 0.071, 0.165, 0.258, 0.409, 0.523, 0.648]$。\n- 数据集 D（包含一个轻微的高 $[S]$ 离群值）：$[S] = [5, 15, 30, 60, 120, 240]$，$v = [0.191, 0.492, 0.869, 1.329, 1.960, 2.270]$。\n\n算法要求和数值条件：\n- 对于非线性回归，使用一个不假设参数先验知识的稳健初始化策略，并强制执行 $V_{\\max} > 0$ 和 $K_m > 0$。\n- 对于 LB 方法，构建 $x = 1/[S]$ 和 $y = 1/v$，并对 $y = a x + b$ 执行普通最小二乘法。将拟合的斜率 $a$ 和截距 $b$ 转换为 $V_{\\max}$ 和 $K_m$。确保不会发生除以零的错误。\n- 对于每个数据集，输出有序列表 $[V_{\\max}^{\\mathrm{NL}}, K_m^{\\mathrm{NL}}, V_{\\max}^{\\mathrm{LB}}, K_m^{\\mathrm{LB}}]$，其中上标表示估算方法（非线性与 Lineweaver–Burk）。所有值必须是浮点数，四舍五入到四位有效数字，单位如上所述。\n\n最终输出格式：\n- 您的程序应生成一行输出，其中包含所有数据集的结果，格式为方括号括起来的逗号分隔列表，例如 $[[x_{A1},x_{A2},x_{A3},x_{A4}],[x_{B1},x_{B2},x_{B3},x_{B4}],\\ldots]$，不含空格。", "solution": "该问题经过严格验证，被认为是有效的。这是一个在化学动力学领域具有科学依据、问题明确且客观的问题。任务要求从基本原理出发推导米氏-孟顿方程，并使用两种标准的回归技术（直接非线性最小二乘拟合和对 Lineweaver-Burk 变换数据进行线性回归）将其应用于实验数据分析。这是一个经典的练习，旨在评估理论理解和实际数据分析两方面的技能。\n\n解决方案分为两部分：首先，对速率定律进行形式化推导；其次，描述用于从所提供数据集中估算动力学参数的计算方法。\n\n**1. 米氏-孟顿速率定律的推导**\n\n该酶促反应由以下机制描述：\n$$\nE + S \\xrightleftharpoons[k_{-1}]{k_1} ES \\xrightarrow{k_2} E + P\n$$\n其中 $E$ 是酶，$S$ 是底物，$ES$ 是酶-底物复合物，$P$ 是产物。结合、解离和催化步骤的速率常数分别为 $k_1$、$k_{-1}$ 和 $k_2$。\n\n所涉及化学物质浓度的变化速率由质量作用定律描述。对于酶-底物复合物 $[ES]$，速率方程为：\n$$\n\\frac{d[ES]}{dt} = k_1 [E][S] - k_{-1}[ES] - k_2[ES] = k_1 [E][S] - (k_{-1} + k_2)[ES]\n$$\n\n总酶浓度 $[E]_T$ 在整个反应过程中是守恒的：\n$$\n[E]_T = [E] + [ES]\n$$\n这使得游离酶的浓度 $[E]$ 可以表示为 $[E] = [E]_T - [ES]$。\n\n应用准稳态假设（QSSA），该假设认为中间体 $[ES]$ 复合物的浓度迅速达到一个稳态，此时其生成速率与其分解速率相平衡。在数学上，这表示为：\n$$\n\\frac{d[ES]}{dt} \\approx 0\n$$\n将 QSSA 应用于 $[ES]$ 的速率方程，得到：\n$$\nk_1 [E][S] - (k_{-1} + k_2)[ES] = 0\n$$\n将 $[E] = [E]_T - [ES]$ 代入此方程：\n$$\nk_1 ([E]_T - [ES])[S] - (k_{-1} + k_2)[ES] = 0\n$$\n我们现在求解复合物的稳态浓度 $[ES]$：\n$$\nk_1 [E]_T [S] - k_1 [ES][S] - (k_{-1} + k_2)[ES] = 0\n$$\n$$\nk_1 [E]_T [S] = [ES] (k_1[S] + k_{-1} + k_2)\n$$\n$$\n[ES] = \\frac{k_1 [E]_T [S]}{k_1[S] + k_{-1} + k_2}\n$$\n通过将分子和分母同时除以 $k_1$，我们得到：\n$$\n[ES] = \\frac{[E]_T [S]}{[S] + \\frac{k_{-1} + k_2}{k_1}}\n$$\n\n反应的初始速率 $v$ 定义为产物的生成速率，它与 $ES$ 复合物的浓度成正比：\n$$\nv = \\frac{d[P]}{dt} = k_2 [ES]\n$$\n将 $[ES]$ 的表达式代入速率方程中得到：\n$$\nv = k_2 \\frac{[E]_T [S]}{[S] + \\frac{k_{-1} + k_2}{k_1}}\n$$\n该表达式是在 QSSA 下的完整速率定律。为了将其简化为熟悉的米氏-孟顿形式，我们定义两个关键参数：\n1.  最大速率 $V_{\\max}$，是当酶被底物完全饱和时（$[S] \\to \\infty$）反应的理论最大速率。在此极限下，$[ES] \\approx [E]_T$，速率变为 $v = k_2 [E]_T$。因此，我们定义：\n    $$\n    V_{\\max} = k_2 [E]_T\n    $$\n2.  米氏常数 $K_m$，它是一个复合常数，表示反应速率为 $V_{\\max}$ 一半时的底物浓度。我们将其定义为：\n    $$\n    K_m = \\frac{k_{-1} + k_2}{k_1}\n    $$\n\n将这两个参数 $V_{\\max}$ 和 $K_m$ 代入速率定律，得到米氏-孟顿方程：\n$$\nv = \\frac{V_{\\max}[S]}{K_m + [S]}\n$$\n该方程将作为非线性回归分析的模型。\n\n**2. 参数估算程序**\n\n我们实现两种独立的方法来从提供的数据集中估算 $V_{\\max}$ 和 $K_m$。\n\n**2.1. 直接非线性最小二乘 (NLS) 回归**\n\n该方法直接将米氏-孟顿方程拟合到实验数据对 $([S]_i, v_i)$。目标是找到最小化残差平方和 (SSR) 的参数值 $V_{\\max}$ 和 $K_m$：\n$$\n\\mathrm{SSR}(V_{\\max}, K_m) = \\sum_{i=1}^{n} \\left( v_i - \\frac{V_{\\max}[S]_i}{K_m + [S]_i} \\right)^2\n$$\n这是一个非线性优化问题。实现中使用了 `scipy.optimize.curve_fit` 函数。为确保稳健性和物理意义，应用了以下条件：\n-   生成一个稳健的参数初始猜测值：$V_{\\max, 0} = \\max(v_{\\text{data}})$ 和 $K_{m, 0} = \\mathrm{median}([S]_{\\text{data}})$。\n-   使用函数的 `bounds` 参数强制执行参数约束 $V_{\\max} > 0$ 和 $K_m > 0$。\n\n**2.2. Lineweaver-Burk (LB) 线性回归**\n\n该方法涉及将米氏-孟顿方程转换为线性形式。通过对方程两边取倒数：\n$$\n\\frac{1}{v} = \\frac{K_m + [S]}{V_{\\max}[S]} = \\frac{K_m}{V_{\\max}[S]} + \\frac{[S]}{V_{\\max}[S]}\n$$\n这简化为一条直线方程 $y = ax + b$：\n$$\n\\frac{1}{v} = \\left(\\frac{K_m}{V_{\\max}}\\right) \\frac{1}{[S]} + \\frac{1}{V_{\\max}}\n$$\n其中 $y = 1/v$，$x = 1/[S]$，斜率为 $a = K_m / V_{\\max}$，y-截距为 $b = 1 / V_{\\max}$。\n\n将实验数据转换为 $(x_i, y_i) = (1/[S]_i, 1/v_i)$。对这些变换后的数据执行普通最小二乘线性回归，以找到最佳拟合的斜率 $a$ 和截距 $b$。然后根据这些拟合值计算动力学参数：\n$$\nV_{\\max} = \\frac{1}{b}\n$$\n$$\nK_m = a \\cdot V_{\\max} = \\frac{a}{b}\n$$\n这种方法计算简单，但可能对低底物浓度下的测量误差敏感，因为这些点在线性拟合中具有高杠杆作用。\n\n以下程序为所有提供的数据集实现了这两种程序，并按要求格式化结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import curve_fit\nimport math\n\ndef solve():\n    \"\"\"\n    Derives Michaelis-Menten parameters using NLS and Lineweaver-Burk methods.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Dataset A\n        {'S': np.array([2, 5, 10, 20, 40, 80, 160], dtype=float), \n         'v': np.array([0.162, 0.349, 0.641, 0.991, 1.441, 1.792, 2.118], dtype=float)},\n        # Dataset B\n        {'S': np.array([0.5, 1, 2, 3, 4, 5, 8], dtype=float), \n         'v': np.array([0.106, 0.208, 0.335, 0.461, 0.522, 0.612, 0.727], dtype=float)},\n        # Dataset C\n        {'S': np.array([10, 20, 50, 100, 200, 400, 800], dtype=float), \n         'v': np.array([0.040, 0.071, 0.165, 0.258, 0.409, 0.523, 0.648], dtype=float)},\n        # Dataset D\n        {'S': np.array([5, 15, 30, 60, 120, 240], dtype=float), \n         'v': np.array([0.191, 0.492, 0.869, 1.329, 1.960, 2.270], dtype=float)},\n    ]\n\n    all_results = []\n\n    def michaelis_menten(S, Vmax, Km):\n        \"\"\"Michaelis-Menten model function.\"\"\"\n        return (Vmax * S) / (Km + S)\n\n    def round_to_sf(x, sf):\n        \"\"\"Rounds a number to a specified number of significant figures.\"\"\"\n        if x == 0:\n            return 0.0\n        sign = -1 if x < 0 else 1\n        x = abs(x)\n        if x == 0:\n            return 0.0\n        \n        # Calculate rounding position\n        pos = sf - 1 - int(math.floor(math.log10(x)))\n        return sign * round(x, pos)\n\n    for case in test_cases:\n        S_data = case['S']\n        v_data = case['v']\n\n        # (i) Nonlinear Least-Squares Regression (NLS)\n        Vmax_nl, Km_nl = np.nan, np.nan\n        try:\n            # Robust initial guess for parameters: Vmax ~ max(v), Km ~ S at Vmax/2\n            p0 = [np.max(v_data), np.median(S_data)]\n            # Enforce physically meaningful constraints (Vmax > 0, Km > 0)\n            bounds = ([0, 0], [np.inf, np.inf])\n            popt_nl, _ = curve_fit(michaelis_menten, S_data, v_data, p0=p0, bounds=bounds)\n            Vmax_nl, Km_nl = popt_nl\n        except RuntimeError:\n            # This case occurs if the optimization fails to converge.\n            pass\n\n        # (ii) Lineweaver-Burk (LB) Linear Regression\n        Vmax_lb, Km_lb = np.nan, np.nan\n        try:\n            # Transform data: x = 1/[S], y = 1/v\n            # The problem statement guarantees S > 0 and v > 0.\n            x_lb = 1.0 / S_data\n            y_lb = 1.0 / v_data\n            \n            # Perform linear regression: y = a*x + b\n            # slope (a) = Km/Vmax, intercept (b) = 1/Vmax\n            slope, intercept = np.polyfit(x_lb, y_lb, 1)\n\n            # Check for physically meaningful results (positive slope and intercept)\n            if intercept > 0 and slope > 0:\n                Vmax_lb = 1.0 / intercept\n                Km_lb = slope / intercept\n        except (np.linalg.LinAlgError, ZeroDivisionError):\n            # This case occurs if linear algebra fails or if intercept is zero.\n            pass\n        \n        # Round all results to four significant figures\n        sf = 4\n        result = [\n            round_to_sf(Vmax_nl, sf),\n            round_to_sf(Km_nl, sf),\n            round_to_sf(Vmax_lb, sf),\n            round_to_sf(Km_lb, sf)\n        ]\n        all_results.append(result)\n\n    # Format the output string to be a list of lists with no spaces\n    # Example: [[v_a,k_a,v_a,k_a],[v_b,k_b,v_b,k_b]]\n    result_strings = [f\"[{r[0]},{r[1]},{r[2]},{r[3]}]\" for r in all_results]\n    final_output = f\"[{','.join(result_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "2938278"}, {"introduction": "在细胞内，酶的活性常常受到各类抑制剂的精确调控，因此，理解不同类型抑制剂的作用机制对于基础科学研究和药物开发都至关重要。本练习将理论付诸实践，要求你运用竞争性抑制和反竞争性抑制的修正米氏方程来解决一个具体问题。你将定量比较这两种抑制剂在达到相同反应速率时，对所需底物浓度的影响有何不同，从而对它们在分子层面上的独特作用方式获得更深刻、更直观的理解。[@problem_id:2323062]", "problem": "一个科研团队正在表征一种名为 Xylosidase Prime 的新型酶，该酶是一种新型治疗药物的潜在靶点。该酶遵循米氏动力学。在没有任何抑制剂的情况下，测得其动力学参数为：米氏常数（$K_M$）为 60 µM，最大速率（$V_{\\text{max}}$）为 120 µM/s。\n\n有两种小分子化合物正在被评估为潜在的抑制剂：\n1.  **Comparetin**：一种竞争性抑制剂，其抑制常数（$K_I$）为 10 µM。\n2.  **Uncompexil**：一种反竞争性抑制剂，其抑制常数（$K_{I'}$）为 40 µM。\n\n在两个独立的实验中，分别将每种抑制剂以 20 µM 的浓度加入到酶反应混合物中。研究人员希望确定在每种抑制剂存在的情况下，要达到 40 µM/s 的反应速率所需的底物浓度。\n\n设 $[S]_{\\text{Comparetin}}$ 为在 Comparetin 存在下达到该速率所需的底物浓度，设 $[S]_{\\text{Uncompexil}}$ 为在 Uncompexil 存在下达到该速率所需的底物浓度。\n\n计算比值 $\\frac{[S]_{\\text{Uncompexil}}}{[S]_{\\text{Comparetin}}}$。将您的答案表示为单个实数，并四舍五入到三位有效数字。", "solution": "对于有抑制剂存在的米氏动力学，在竞争性抑制和反竞争性抑制存在的情况下，速率方程可以写成统一形式\n$$\nv=\\frac{V_{\\text{max}}[S]}{\\alpha K_{M}+\\alpha'[S]},\n$$\n其中，对于竞争性抑制，$\\alpha=1+\\frac{[I]}{K_{I}}$ 且 $\\alpha'=1$；对于反竞争性抑制，$\\alpha=1$ 且 $\\alpha'=1+\\frac{[I]}{K_{I'}}$。\n\n已知 $V_{\\text{max}}=120$，$K_{M}=60$，目标速率 $v=40$，抑制剂浓度 $[I]=20$：\n\n竞争性 (Comparetin): $\\alpha=1+\\frac{20}{10}=3$，$\\alpha'=1$。速率方程变为\n$$\n40=\\frac{120[S]}{3\\cdot 60+[S]}=\\frac{120[S]}{180+[S]}。\n$$\n求解得，\n$$\n40(180+[S])=120[S]\\;\\Rightarrow\\;7200+40[S]=120[S]\\;\\Rightarrow\\;[S]_{\\text{Comparetin}}=\\frac{7200}{80}=90。\n$$\n\n反竞争性 (Uncompexil): $\\alpha=1$，$\\alpha'=1+\\frac{20}{40}=\\frac{3}{2}$。速率方程变为\n$$\n40=\\frac{120[S]}{60+\\frac{3}{2}[S]}。\n$$\n求解得，\n$$\n40\\left(60+\\frac{3}{2}[S]\\right)=120[S]\\;\\Rightarrow\\;2400+60[S]=120[S]\\;\\Rightarrow\\;[S]_{\\text{Uncompexil}}=\\frac{2400}{60}=40。\n$$\n\n因此，所求的比值为\n$$\n\\frac{[S]_{\\text{Uncompexil}}}{[S]_{\\text{Comparetin}}}=\\frac{40}{90}=\\frac{4}{9}\\approx 0.444。\n$$\n结果四舍五入到三位有效数字后为 $0.444$。", "answer": "$$\\boxed{0.444}$$", "id": "2323062"}, {"introduction": "在合成生物学和药物递送等前沿领域，酶常常被包裹在囊泡或细胞等空间受限的隔室中，这会改变其表观动力学特性。这项高级练习旨在挑战你构建一个系统层面的模型，将米氏动力学与膜的物质运输物理学原理相结合。你的任务是推导出一个全新的速率方程，用以描述这个空间受限酶系统的稳态行为，这个实践将引导你从简单的体外动力学迈向对更真实生物情境的建模，让你体会到复杂系统行为是如何从其组分的相互作用中涌现出来的。[@problem_id:2323088]", "problem": "正在对一个先进的药物递送系统进行建模，该系统由设计用作微型生物反应器的球形脂质囊泡组成。每个囊泡的半径为 $R$，并包裹了固定数量的酶分子 $N_E$。该酶遵循 Michaelis-Menten 动力学，其特征是催化速率常数 $k_{cat}$ 和 Michaelis 常数 $K_m$。\n\n这些囊泡悬浮在一个大的缓冲溶液中，其中底物浓度保持在一个恒定值 $S_{out}$。底物可以穿过囊泡的膜进行扩散，该膜的渗透系数为 $P$。进入囊泡的底物总转运速率由关系式 $v_{transport} = A \\cdot P \\cdot (S_{out} - S_{in})$ 决定，其中 $A$ 是囊泡的表面积，$S_{in}$ 是囊泡内的底物浓度。\n\n为了简化最终表达式，我们定义了两个复合参数：膜转运能力 $\\kappa = 4 \\pi R^2 P$ 和囊泡的总催化能力 $V_{max,total} = k_{cat} N_E$。\n\n假设系统达到稳态，此时内部底物浓度 $S_{in}$ 恒定，且产物从囊泡中被立即移除且不影响反应，请推导单个囊泡的稳态产物生成速率 $v_p$ 的闭式解析表达式。您的最终表达式应以 $S_{out}$、$K_m$、$\\kappa$ 和 $V_{max,total}$ 来表示。", "solution": "在稳态下，穿过膜的底物流入速率等于酶促消耗速率，也等于产物生成速率。将稳态产物生成速率记为 $v_{p}$。膜转运流入速率由 $v_{transport} = \\kappa (S_{out} - S_{in})$ 给出，其中 $\\kappa = 4 \\pi R^{2} P$。囊泡内的酶促反应速率遵循 Michaelis-Menten 动力学，总催化能力为 $V_{max,total} = k_{cat} N_{E}$，因此 $v_{enz} = V_{max,total} \\frac{S_{in}}{K_{m} + S_{in}}$。在稳态下，\n$$\nv_{p} = v_{transport} = \\kappa (S_{out} - S_{in}), \\quad v_{p} = v_{enz} = V_{max,total} \\frac{S_{in}}{K_{m} + S_{in}}.\n$$\n求解 Michaelis-Menten 关系式，得到用 $v_{p}$ 表示的 $S_{in}$：\n$$\nv_{p} (K_{m} + S_{in}) = V_{max,total} S_{in} \\;\\Rightarrow\\; v_{p} K_{m} = (V_{max,total} - v_{p}) S_{in} \\;\\Rightarrow\\; S_{in} = \\frac{v_{p} K_{m}}{V_{max,total} - v_{p}}.\n$$\n将此代入转运关系式：\n$$\nv_{p} = \\kappa \\left( S_{out} - \\frac{v_{p} K_{m}}{V_{max,total} - v_{p}} \\right).\n$$\n两边同乘以 $(V_{max,total} - v_{p})$ 并展开，得到一个关于 $v_{p}$ 的二次方程：\n$$\nv_{p} (V_{max,total} - v_{p}) = \\kappa \\left( S_{out} (V_{max,total} - v_{p}) - v_{p} K_{m} \\right),\n$$\n$$\nv_{p} V_{max,total} - v_{p}^{2} = \\kappa V_{max,total} S_{out} - \\kappa v_{p} S_{out} - \\kappa v_{p} K_{m}.\n$$\n整理各项得\n$$\nv_{p}^{2} - v_{p} \\left( \\kappa S_{out} + V_{max,total} + \\kappa K_{m} \\right) + \\kappa V_{max,total} S_{out} = 0.\n$$\n对这个关于 $v_{p}$ 的二次方程求解，得到\n$$\nv_{p} = \\frac{ \\kappa S_{out} + V_{max,total} + \\kappa K_{m} \\pm \\sqrt{ \\left( \\kappa S_{out} + V_{max,total} + \\kappa K_{m} \\right)^{2} - 4 \\kappa V_{max,total} S_{out} } }{ 2 }.\n$$\n具有物理意义的解支是根据当 $S_{out} \\to 0$ 时 $v_{p} \\to 0$ 的条件来选择的，这对应于选取平方根前的负号。因此，单个囊泡的稳态产物生成速率为\n$$\nv_{p} = \\frac{ \\kappa (K_{m} + S_{out}) + V_{max,total} - \\sqrt{ \\left[ \\kappa (K_{m} + S_{out}) + V_{max,total} \\right]^{2} - 4 \\kappa V_{max,total} S_{out} } }{ 2 }.\n$$", "answer": "$$\\boxed{\\frac{\\kappa\\left(K_{m}+S_{out}\\right)+V_{max,total}-\\sqrt{\\left[\\kappa\\left(K_{m}+S_{out}\\right)+V_{max,total}\\right]^{2}-4\\,\\kappa\\,V_{max,total}\\,S_{out}}}{2}}$$", "id": "2323088"}]}