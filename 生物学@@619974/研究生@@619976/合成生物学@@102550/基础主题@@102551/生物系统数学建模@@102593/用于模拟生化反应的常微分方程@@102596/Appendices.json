{"hands_on_practices": [{"introduction": "我们实践的第一步是从最基本的生物过程——单个基因的表达——开始。这个练习将指导你建立一个描述组成型基因表达的数学模型，并探索其确定性和随机性两个层面。通过推导常微分方程（ODE）来描述平均分子数量的变化，并进一步分析其固有的随机波动，你将学会如何量化例如变异系数（$CV$）这样的分子噪声，并理解宏观平均行为与微观随机事件之间的联系 [@problem_id:2776313]。", "problem": "一个组成型转录装置通过合成生物学开放语言 (SBOL) 进行描述，其每个基因拷贝的注释属性如下：一个启动子，其测得的零级转录起始速率为每分钟 $12$ 个分子；以及信使 RNA，其一级降解速率常数为每分钟 $0.6$。该装置在无细胞反应中实例化，每个反应室包含 $3$ 个基因拷贝。您的任务是在充分混合、等温、恒容的假设下，使用基元反应将此设计转换为系统生物学标记语言 (SBML) 中的动力学模型。\n\n从标准的质量作用动力学和生灭过程的化学主方程出发，完成以下任务：\n\n1) 将 SBOL 设计属性映射为代表 RNA 拷贝数的单一分子物种 $X$ 的 SBML 参数。令 $\\alpha$ 表示零级合成速率，$\\beta$ 表示一级降解速率常数。推导期望拷贝数 $X(t)$ 的确定性常微分方程 (ODE)。\n\n2) 根据随机模拟算法的定义，为两个 SBML 反应 $\\varnothing \\to X$ 和 $X \\to \\varnothing$ 指定随机倾向。\n\n3) 使用生灭过程化学主方程的稳态解，推导其稳态分布，并由此推导出稳态时的变异系数 $\\mathrm{CV}$（作为 $\\alpha$ 和 $\\beta$ 的函数）。\n\n4) 使用所提供的 SBOL 属性和基因拷贝数，计算 $X$ 的稳态变异系数的数值。将变异系数表示为小数（无量纲），并将您的答案四舍五入到四位有效数字。\n\n最终答案只提供变异系数的数值。", "solution": "在尝试任何解答之前，对问题陈述进行严格验证。\n\n步骤 1：提取已知条件。\n以下数据和条件按原文提供：\n- 一个组成型转录装置。\n- 框架：合成生物学开放语言 (SBOL)，系统生物学标记语言 (SBML)。\n- 启动子属性：每个基因拷贝的零级转录起始速率为每分钟 $12$ 个分子。\n- 信使 RNA 属性：一级降解速率常数为每分钟 $0.6$。\n- 系统配置：每个反应室 $3$ 个基因拷贝。\n- 建模假设：充分混合、等温、恒容反应。\n- 任务 1：将 SBOL 属性映射为物种 $X$ (RNA 拷贝数) 的 SBML 参数 $\\alpha$（零级合成速率）和 $\\beta$（一级降解速率常数）。推导 $X(t)$ 的确定性常微分方程 (ODE)。\n- 任务 2：为反应 $\\varnothing \\to X$ 和 $X \\to \\varnothing$ 指定随机倾向。\n- 任务 3：从化学主方程推导稳态分布，以及相应的稳态变异系数 $\\mathrm{CV}$（作为 $\\alpha$ 和 $\\beta$ 的函数）。\n- 任务 4：计算稳态 $\\mathrm{CV}$ 的数值，并四舍五入到四位有效数字。\n\n步骤 2：验证已知条件。\n根据所需标准对问题进行审查。\n- **科学依据：** 该问题描述了一个简单的生灭过程，这是随机化学动力学中用于表示基因表达的典型模型。使用 SBOL 和 SBML 交换此类模型是合成生物学和系统生物学中的标准实践。动力学参数在信使 RNA 动力学的物理和生物学现实范围内。因此，该问题在科学上是合理的。\n- **适定性：** 该问题提供了执行所需推导和计算的所有必要信息。其结构为一系列逻辑步骤，导向一个唯一且有意义的解。\n- **客观性：** 语言技术性强、精确，且没有主观或模糊的陈述。\n\n步骤 3：结论。\n该问题被认定为**有效**。这是一个适定的、有科学依据的问题，旨在检验生物系统随机建模的基本概念。我们将继续进行解答。\n\n该解答通过依次处理四个任务来构建。\n\n1) SBOL 属性映射与确定性 ODE 推导\n\nSBOL 设计指定了每个基因拷贝的属性。要为整个反应室构建 SBML 模型，必须将这些属性进行汇总。我们感兴趣的物种是信使 RNA，记为 $X$。\n\n总的零级合成速率 $\\alpha$ 是每个基因拷贝的速率与基因拷贝数的乘积。\n已知：\n- 每个拷贝的转录起始速率：$12 \\, \\text{min}^{-1}$\n- 基因拷贝数：$3$\n反应室的总合成速率 $\\alpha$ 为：\n$$ \\alpha = (12 \\, \\text{min}^{-1}) \\times 3 = 36 \\, \\text{min}^{-1} $$\n一级降解速率常数 $\\beta$ 直接给出为：\n$$ \\beta = 0.6 \\, \\text{min}^{-1} $$\n这些参数 $\\alpha$ 和 $\\beta$ 代表了从 SBOL 描述到 SBML 动力学模型参数的映射。\n\n该系统由两个基元反应描述：\n- 合成（生）：$\\varnothing \\xrightarrow{\\alpha} X$\n- 降解（灭）：$X \\xrightarrow{\\beta} \\varnothing$\n\n在确定性假设（平均场近似）下，物种 $X$ 的期望拷贝数（记为 $X(t)$）的时间演化由一个常微分方程 (ODE) 控制。变化率等于生产速率减去消耗速率。\n- 生产速率（零级）：$\\alpha$\n- 降解速率（一级）：$\\beta X(t)$\n得到的 ODE 是：\n$$ \\frac{dX(t)}{dt} = \\alpha - \\beta X(t) $$\n该方程描述了 $X$ 分子平均数目的演化。\n\n2) 随机倾向的指定\n\n在随机表述中，反应速率由倾向函数描述。反应 $j$ 的倾向 $a_j(\\mathbf{x})$ 定义为，在给定系统状态 $\\mathbf{x}$ 的情况下，反应 $j$ 在无穷小时间间隔 $[t, t+dt)$ 内发生的概率为 $a_j(\\mathbf{x})dt$。在这里，状态就是 $X$ 的分子数，我们记为 $n$。\n\n- 对于合成反应 $R_1: \\varnothing \\xrightarrow{\\alpha} X$，其速率与 $X$ 的分子数无关。这是一个零级反应。其倾向为常数：\n$$ a_1(n) = \\alpha $$\n- 对于降解反应 $R_2: X \\xrightarrow{\\beta} \\varnothing$，其速率与反应物分子数 $n$ 成正比。这是一个一级反应。其倾向为：\n$$ a_2(n) = \\beta n $$\n\n这两个倾向 $a_1(n)$ 和 $a_2(n)$ 是随机模拟算法（如 Gillespie 算法）的基础。\n\n3) 稳态分布与变异系数的推导\n\n分子数 $n$ 的概率分布 $P(n, t)$ 的时间演化由化学主方程 (CME) 描述。对于此生灭过程，CME 为：\n$$ \\frac{dP(n, t)}{dt} = [\\text{birth from } n-1] + [\\text{death from } n+1] - [\\text{death from } n] - [\\text{birth from } n] $$\n$$ \\frac{dP(n, t)}{dt} = \\alpha P(n-1, t) + \\beta(n+1)P(n+1, t) - (\\alpha + \\beta n)P(n, t) \\quad \\text{for } n \\ge 1 $$\n边界条件为 $n=0$ 时：\n$$ \\frac{dP(0, t)}{dt} = \\beta P(1, t) - \\alpha P(0, t) $$\n在稳态时，概率分布不随时间变化，因此对所有 $n$ 都有 $\\frac{dP(n, t)}{dt} = 0$。设稳态分布为 $P_s(n)$。CME 简化为一组代数方程。一个更简单的方法是使用细致平衡原理，对于一维系统，该原理要求相邻状态之间的概率通量为零。\n$$ \\text{Flux}(n-1 \\to n) = \\text{Flux}(n \\to n-1) $$\n$$ \\alpha P_s(n-1) = \\beta n P_s(n) $$\n这产生了递推关系：\n$$ P_s(n) = \\frac{\\alpha}{n\\beta} P_s(n-1) $$\n通过重复应用，我们得到 $P_s(n)$ 以 $P_s(0)$ 表示的通式：\n$$ P_s(n) = \\frac{1}{n!} \\left(\\frac{\\alpha}{\\beta}\\right)^n P_s(0) $$\n我们使用归一化条件 $\\sum_{n=0}^{\\infty} P_s(n) = 1$ 来求解 $P_s(0)$。令 $\\lambda = \\frac{\\alpha}{\\beta}$。\n$$ \\sum_{n=0}^{\\infty} \\frac{\\lambda^n}{n!} P_s(0) = P_s(0) \\sum_{n=0}^{\\infty} \\frac{\\lambda^n}{n!} = P_s(0) \\exp(\\lambda) = 1 $$\n这得出 $P_s(0) = \\exp(-\\lambda)$。将其代回，得到稳态分布：\n$$ P_s(n) = \\frac{\\lambda^n \\exp(-\\lambda)}{n!}, \\quad \\text{where } \\lambda = \\frac{\\alpha}{\\beta} $$\n这是一个参数为 $\\lambda$ 的泊松分布。\n\n变异系数 ($\\mathrm{CV}$) 定义为标准差 $\\sigma$ 与均值 $\\mu$ 的比值：$\\mathrm{CV} = \\frac{\\sigma}{\\mu}$。对于参数为 $\\lambda$ 的泊松分布，其均值和方差已知为：\n- 均值：$\\mu = \\langle n \\rangle = \\lambda$\n- 方差：$\\sigma^2 = \\langle (n-\\mu)^2 \\rangle = \\lambda$\n因此，标准差为 $\\sigma = \\sqrt{\\lambda}$。\n稳态时的变异系数为：\n$$ \\mathrm{CV} = \\frac{\\sigma}{\\mu} = \\frac{\\sqrt{\\lambda}}{\\lambda} = \\frac{1}{\\sqrt{\\lambda}} $$\n代入 $\\lambda = \\frac{\\alpha}{\\beta}$，我们得到以模型参数表示的 $\\mathrm{CV}$ 表达式：\n$$ \\mathrm{CV} = \\frac{1}{\\sqrt{\\alpha/\\beta}} = \\sqrt{\\frac{\\beta}{\\alpha}} $$\n\n4) 变异系数的数值计算\n\n我们使用第一部分推导出的参数值来计算 $\\mathrm{CV}$ 的数值。\n- 总合成速率：$\\alpha = 36 \\, \\text{min}^{-1}$\n- 降解速率常数：$\\beta = 0.6 \\, \\text{min}^{-1}$\n将这些值代入推导出的 $\\mathrm{CV}$ 公式中：\n$$ \\mathrm{CV} = \\sqrt{\\frac{0.6}{36}} = \\sqrt{\\frac{6 \\times 10^{-1}}{36}} = \\sqrt{\\frac{1}{60}} $$\n现在，我们计算其数值并按要求四舍五入到四位有效数字。\n$$ \\mathrm{CV} = \\frac{1}{\\sqrt{60}} \\approx 0.12909944... $$\n四舍五入到四位有效数字，得到：\n$$ \\mathrm{CV} \\approx 0.1291 $$", "answer": "$$\\boxed{0.1291}$$", "id": "2776313"}, {"introduction": "在掌握了单个过程的建模后，我们转向更复杂的生化反应网络。直接分析和模拟大规模网络可能非常困难，因此，在求解之前简化模型至关重要。本练习将介绍一种强大的分析技术：利用化学计量矩阵 $S$ 来识别系统中的守恒关系 [@problem_id:2776492]。你将通过分析一个经典的磷酸化-去磷酸化循环，学会如何找出守恒量并利用它们减少模型的维度，从而揭示系统动力学受到的基本约束。", "problem": "一个系统生物学标记语言 (SBML) 模型由一个合成生物学开放语言 (SBOL) 设计生成，该设计描述了在一个封闭、充分混合、恒定体积的反应器中，由一种激酶和一种磷酸酶催化的单底物可逆磷酸化循环。该模型包含以下化学物质：未磷酸化蛋白 $P$、磷酸化蛋白 $P^{*}$、游离激酶 $K$、游离磷酸酶 $F$、激酶-底物复合物 $C_{1}$、磷酸酶-底物复合物 $C_{2}$、三磷酸腺苷 $\\mathrm{ATP}$、二磷酸腺苷 $\\mathrm{ADP}$ 和无机磷酸盐 $\\mathrm{Pi}$。SBML反应（可逆步骤表示为独立的正向和反向反应）如下：\n- $R_{1f}: K + P \\rightarrow C_{1}$，\n- $R_{1r}: C_{1} \\rightarrow K + P$，\n- $R_{2}: C_{1} + \\mathrm{ATP} \\rightarrow K + P^{*} + \\mathrm{ADP}$，\n- $R_{3f}: F + P^{*} \\rightarrow C_{2}$，\n- $R_{3r}: C_{2} \\rightarrow F + P^{*}$，\n- $R_{4}: C_{2} \\rightarrow F + P + \\mathrm{Pi}$。\n\n所有反应都是基元反应，并遵循质量作用动力学。在这些反应之外，没有任何物质的合成或降解，也没有与环境的物质交换。\n\n1) 使用SBML中反应网络的基本表示法 $d\\mathbf{x}/dt = S\\,\\mathbf{v}(\\mathbf{x})$，其中 $S$ 是化学计量矩阵，$\\mathbf{x}$ 是按固定顺序 $\\left[P,\\,P^{*},\\,K,\\,F,\\,C_{1},\\,C_{2},\\,\\mathrm{ATP},\\,\\mathrm{ADP},\\,\\mathrm{Pi}\\right]^{\\top}$ 排列的物质数量向量，写出由上述反应所决定的化学计量矩阵 $S$。\n\n2) 从守恒部分 (conserved moieties) 的定义和由 $S$ 隐含的化学计量不变量出发，推导出在该封闭系统中必须成立的所有线性无关的守恒关系。请清晰陈述您使用的建模假设。\n\n3) 利用守恒关系消去因变物种，并用一组独立动态变量和相应的守恒总量来表示它们。为具体起见，选择独立变量集为 $\\{P,\\,K,\\,F,\\,\\mathrm{ATP}\\}$。提供 $C_{1}$、$C_{2}$、$P^{*}$、$\\mathrm{ADP}$ 和 $\\mathrm{Pi}$ 关于 $P,\\,K,\\,F,\\,\\mathrm{ATP}$ 以及您确定的守恒总量的显式表达式。\n\n4) 根据您的推导，确定通过守恒关系降维后剩余的独立常微分方程的数量。将此数字作为您的最终答案。最终答案无需四舍五入，也无需单位。", "solution": "在尝试解答之前，对问题陈述进行验证。\n\n步骤1：提取已知条件。\n系统包含9种化学物质，其数量由向量 $\\mathbf{x} = \\left[P,\\,P^{*},\\,K,\\,F,\\,C_{1},\\,C_{2},\\,\\mathrm{ATP},\\,\\mathrm{ADP},\\,\\mathrm{Pi}\\right]^{\\top}$ 表示。\n给出了6个遵循质量作用动力学的基元反应：\n- $R_{1f}: K + P \\rightarrow C_{1}$\n- $R_{1r}: C_{1} \\rightarrow K + P$\n- $R_{2}: C_{1} + \\mathrm{ATP} \\rightarrow K + P^{*} + \\mathrm{ADP}$\n- $R_{3f}: F + P^{*} \\rightarrow C_{2}$\n- $R_{3r}: C_{2} \\rightarrow F + P^{*}$\n- $R_{4}: C_{2} \\rightarrow F + P + \\mathrm{Pi}$\n该系统由微分方程 $\\frac{d\\mathbf{x}}{dt} = S\\,\\mathbf{v}(\\mathbf{x})$ 描述。\n系统是封闭的、充分混合的，并具有恒定体积。除了指定的反应外，没有物质的合成、降解或与环境的交换。\n\n步骤2：使用提取的已知条件进行验证。\n该问题具有科学依据，描述了一个标准的磷酸化-去磷酸化循环，这是生化网络中的一个基本模体。使用化学计量矩阵形式 ($S$) 和质量作用动力学是化学动力学和系统生物学中的一种标准且严谨的方法。问题定义清晰、客观，问题设置良好，通过一系列逻辑任务可导出一个唯一解。所有必要信息均已提供。该问题是自洽且一致的。\n\n步骤3：结论与行动。\n问题被判定为有效。将提供完整解答。\n\n解答按要求分四部分进行。\n\n第1部分：化学计量矩阵 $S$\n物质数量的状态向量为 $\\mathbf{x} = \\left[P, P^{*}, K, F, C_{1}, C_{2}, \\mathrm{ATP}, \\mathrm{ADP}, \\mathrm{Pi}\\right]^{\\top}$。反应速率向量为 $\\mathbf{v} = \\left[v_{1f}, v_{1r}, v_{2}, v_{3f}, v_{3r}, v_{4}\\right]^{\\top}$。化学计量矩阵 $S$ 的维度为 $9 \\times 6$，其中每一列代表一个反应，每一行代表一种物质。矩阵元素 $S_{ij}$ 表示物质 $i$ 的数量因反应 $j$ 发生的净变化。\n\n对于每个反应，$S$ 的相应列构建如下：\n- $R_{1f}: K + P \\rightarrow C_{1}$。变化量：$\\Delta P = -1$，$\\Delta K = -1$，$\\Delta C_{1} = +1$。\n- $R_{1r}: C_{1} \\rightarrow K + P$。变化量：$\\Delta C_{1} = -1$，$\\Delta K = +1$，$\\Delta P = +1$。\n- $R_{2}: C_{1} + \\mathrm{ATP} \\rightarrow K + P^{*} + \\mathrm{ADP}$。变化量：$\\Delta C_{1} = -1$，$\\Delta \\mathrm{ATP} = -1$，$\\Delta K = +1$，$\\Delta P^{*} = +1$，$\\Delta \\mathrm{ADP} = +1$。\n- $R_{3f}: F + P^{*} \\rightarrow C_{2}$。变化量：$\\Delta F = -1$，$\\Delta P^{*} = -1$，$\\Delta C_{2} = +1$。\n- $R_{3r}: C_{2} \\rightarrow F + P^{*}$。变化量：$\\Delta C_{2} = -1$，$\\Delta F = +1$，$\\Delta P^{*} = +1$。\n- $R_{4}: C_{2} \\rightarrow F + P + \\mathrm{Pi}$。变化量：$\\Delta C_{2} = -1$，$\\Delta F = +1$，$\\Delta P = +1$，$\\Delta \\mathrm{Pi} = +1$。\n\n按照指定的反应顺序组合这些列，得到化学计量矩阵 $S$：\n$$\nS = \\begin{pmatrix}\n-1 & 1 & 0 & 0 & 0 & 1 \\\\\n0 & 0 & 1 & -1 & 1 & 0 \\\\\n-1 & 1 & 1 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & -1 & 1 & 1 \\\\\n1 & -1 & -1 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 1 & -1 & -1 \\\\\n0 & 0 & -1 & 0 & 0 & 0 \\\\\n0 & 0 & 1 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 1\n\\end{pmatrix}\n$$\n\n第2部分：守恒关系\n守恒关系源于物质数量的某种线性组合，该组合随时间保持不变。要使一个量 $M = \\mathbf{c}^{\\top}\\mathbf{x}$ 守恒，其时间导数必须为零：\n$$\n\\frac{dM}{dt} = \\mathbf{c}^{\\top}\\frac{d\\mathbf{x}}{dt} = \\mathbf{c}^{\\top}S\\mathbf{v}(\\mathbf{x}) = 0\n$$\n由于这对于任何有效的速率向量 $\\mathbf{v}(\\mathbf{x})$ 都必须成立，因此条件简化为寻找 $S$ 的左零空间，即所有满足 $\\mathbf{c}^{\\top}S = \\mathbf{0}^{\\top}$ 的向量 $\\mathbf{c}$。线性无关的守恒定律的数量是该零空间的维度，等于 $N - \\mathrm{rank}(S)$，其中 $N=9$ 是物质的数量。\n\n通过对矩阵进行符号计算（以避免浮点误差），可以确定 $S$ 的秩为 $4$。因此，存在 $9 - 4 = 5$ 个线性无关的守恒定律。一组这样的定律，对应于物理上直观的守恒部分，是：\n1.  总蛋白守恒，因为它以游离形式 $P$ 和 $P^*$ 或复合物形式 $C_1$ 和 $C_2$ 存在。\n    $P(t) + P^{*}(t) + C_{1}(t) + C_{2}(t) = P_{tot}$\n2.  总激酶守恒，它以游离激酶 $K$ 或复合物 $C_1$ 的形式存在。\n    $K(t) + C_{1}(t) = K_{tot}$\n3.  总磷酸酶守恒，它以游离磷酸酶 $F$ 或复合物 $C_2$ 的形式存在。\n    $F(t) + C_{2}(t) = F_{tot}$\n4.  腺苷总池守恒，因为 $\\mathrm{ATP}$ 会转化为 $\\mathrm{ADP}$。\n    $\\mathrm{ATP}(t) + \\mathrm{ADP}(t) = A_{tot}$\n5.  第五个守恒定律可以从磷酸基转移的化学计量关系中推导出来。向量 $\\mathbf{c}^{\\top} = [0, 1, 0, 0, 1, 1, 1, 0, -1]$ （对应于 $P^{*} + C_{1} + C_{2} + \\mathrm{ATP} - \\mathrm{Pi}$）是一个有效的左零向量。\n    $P^{*}(t) + C_{1}(t) + C_{2}(t) + \\mathrm{ATP}(t) - \\mathrm{Pi}(t) = Q_{tot}$\n这五个关系是线性无关的。常数 $P_{tot}$、$K_{tot}$、$F_{tot}$、$A_{tot}$ 和 $Q_{tot}$ 由系统的初始条件确定。这里使用的建模假设在问题中已明确说明：系统是封闭的，并且所列出的反应是详尽无遗的。\n\n第3部分：消去因变物种\n五个守恒关系允许我们将五个因变物种用四个自变物种和五个守恒总量来表示。问题指定独立变量集为 $\\{P, K, F, \\mathrm{ATP}\\}$。我们求解因变物种 $\\{P^{*}, C_{1}, C_{2}, \\mathrm{ADP}, \\mathrm{Pi}\\}$。\n\n根据守恒关系(2)：\n$$C_{1} = K_{tot} - K$$\n根据守恒关系(3)：\n$$C_{2} = F_{tot} - F$$\n根据守恒关系(4)：\n$$\\mathrm{ADP} = A_{tot} - \\mathrm{ATP}$$\n将这些结果代入守恒关系(1)以求得 $P^{*}$：\n$$P^{*} = P_{tot} - P - C_{1} - C_{2} = P_{tot} - P - (K_{tot} - K) - (F_{tot} - F)$$\n$$P^{*} = P_{tot} - K_{tot} - F_{tot} - P + K + F$$\n最后，将这些结果代入守恒关系(5)以求得 $\\mathrm{Pi}$。注意：原始解答中第5个守恒关系存在错误，正确的守恒向量及其对应的表达式已在上文修正。\n$$\\mathrm{Pi} = P^{*} + C_{1} + C_{2} + \\mathrm{ATP} - Q_{tot}$$\n$$\\mathrm{Pi} = (P_{tot} - K_{tot} - F_{tot} - P + K + F) + (K_{tot} - K) + (F_{tot} - F) + \\mathrm{ATP} - Q_{tot}$$\n$$\\mathrm{Pi} = P_{tot} - P + \\mathrm{ATP} - Q_{tot}$$\n\n因此，因变物种的显式表达式为：\n- $C_{1} = K_{tot} - K$\n- $C_{2} = F_{tot} - F$\n- $\\mathrm{ADP} = A_{tot} - \\mathrm{ATP}$\n- $P^{*} = P_{tot} - K_{tot} - F_{tot} - P + K + F$\n- $\\mathrm{Pi} = (P_{tot} - Q_{tot}) - P + \\mathrm{ATP}$\n\n第4部分：独立常微分方程的数量\n原始系统由描述这9种物质的9个耦合常微分方程(ODEs)组成。5个线性无关守恒关系的存在意味着系统的动力学被限制在一个较低维度的流形上。描述该系统所需的独立自由度数，即独立ODEs的数量，是物质总数减去独立守恒定律的数量。\n物质数量 = $9$。\n独立守恒定律数量 = $5$。\n独立ODEs数量 = $9 - 5 = 4$。\n这个结果与第3部分中选择的独立动态变量集 $\\{P, K, F, \\mathrm{ATP}\\}$ 的大小相对应。系统动力学可以用一个描述这些变量的由四个ODEs组成的降维模型来完全描述。\n最终答案就是这个数字。", "answer": "$$\\boxed{4}$$", "id": "2776492"}, {"introduction": "构建和分析了模型之后，我们来探索当生物组分通过非线性相互作用连接时，能够涌现出怎样的复杂动态行为。本练习聚焦于合成生物学中的一个奠基性设计——基因开关（genetic toggle switch），它由两个相互抑制的基因构成。你将学习如何使用希尔函数（Hill function）来描述这种非线性调控，并通过数值模拟来探索系统的双稳态（bistability）特性——即系统在相同参数下存在两个不同稳定状态的能力，这是细胞记忆和决策过程的分子基础 [@problem_id:2755952]。", "problem": "在合成生物学的背景下，您需要使用常微分方程 (ODE) 对一个双基因相互抑制回路（一个基因拨动开关）进行形式化和分析。该系统由两种相互抑制对方表达的蛋白质组成。您的任务包括：从基本原理推导控制该系统的 ODE；实现一个数值求解器；并确定在测试套件的每个参数集下，从两个性质不同的初始条件出发，可以达到的不同稳定稳态的数量。所有浓度和时间都经过无量纲化处理，因此报告的任何值都不需要物理单位。\n\n基本建模假设和推导要求：\n- 从以下基础出发：\n  - 抑制蛋白与启动子结合的质量作用动力学。\n  - 启动子占用的准稳态近似，从而得到一个具有 Hill 系数 $n$ 和解离常数 $K$ 的 Hill 型抑制函数。\n  - 由降解和稀释引起的线性一阶损耗。\n- 令 $A(t)$ 和 $B(t)$ 表示在时间 $t$ 时两种蛋白质的无量纲浓度。\n- 令 $\\alpha_A$ 和 $\\alpha_B$ 表示当相应启动子完全未被其抑制蛋白结合时的最大生产速率。\n- 令 $\\delta_A$ 和 $\\delta_B$ 表示一阶损耗速率常数。\n- 令 $K_A$ 和 $K_B$ 分别表示与抑制蛋白结合到控制 $B$ 和 $A$ 的启动子相关的有效解离常数。\n- 令 $n_A$ 和 $n_B$ 表示描述抑制协同性的 Hill 系数。\n- 基于这些原理，推导 $A(t)$ 和 $B(t)$ 的 ODE。在这些方程中，每种蛋白质的有效生产与相应启动子未被结合的概率成正比，而未结合启动子的概率是抑制蛋白浓度的递减 Hill 函数。不要引入任何泄漏项。\n\n计算和分类协议：\n- 对于下面测试套件中的每个参数集，在 $t \\in [0, T_{\\max}]$（其中 $T_{\\max} = $ $500$）上对推导出的 ODE 进行积分。使用两个旨在探测不同吸引盆的初始条件：\n  - 初始条件 $I_1$：$A(0) = $ $50$, $B(0) = $ $0.01$。\n  - 初始条件 $I_2$：$A(0) = $ $0.01$, $B(0) = $ $50$。\n- 使用足够精确的数值方法来求解并收敛到稳态行为。推荐使用具有严格容差的刚性求解器。\n- 从两个初始条件积分后，确定 $(A,B)$ 平面中两个终末状态之间的欧几里得距离 $d$。使用以下分类规则：\n  - 如果 $d \\ge \\tau$，其中 $\\tau = $ $5$，则报告该参数集达到了两个不同的稳定稳态（即，检测到双稳态）。\n  - 否则，报告一个稳定稳态。\n- 对于每个参数集，所需的输出是一个整数：$1$ 或 $2$。\n\n测试套件：\n- 情况 $1$（理想情况，强协同性）：$\\alpha_A = $ $50$, $\\alpha_B = $ $50$, $\\delta_A = $ $1$, $\\delta_B = $ $1$, $K_A = $ $1$, $K_B = $ $1$, $n_A = $ $4$, $n_B = $ $4$。\n- 情况 $2$（边界情况，无协同性）：$\\alpha_A = $ $50$, $\\alpha_B = $ $50$, $\\delta_A = $ $1$, $\\delta_B = $ $1$, $K_A = $ $1$, $K_B = $ $1$, $n_A = $ $1$, $n_B = $ $1$。\n- 情况 $3$（边缘情况，快速损耗）：$\\alpha_A = $ $50$, $\\alpha_B = $ $50$, $\\delta_A = $ $5$, $\\delta_B = $ $5$, $K_A = $ $1$, $K_B = $ $1$, $n_A = $ $4$, $n_B = $ $4$。\n- 情况 $4$（边缘情况，弱表达）：$\\alpha_A = $ $5$, $\\alpha_B = $ $5$, $\\delta_A = $ $1$, $\\delta_B = $ $1$, $K_A = $ $1$, $K_B = $ $1$, $n_A = $ $4$, $n_B = $ $4$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，结果按测试套件案例的顺序列出。例如，如果结果是 $2$, $1$, $1$, $1$，您的程序必须精确打印：\n- $[2,1,1,1]$。", "solution": "所述问题在科学上是合理的、定义明确的，并包含了解决该问题所需的所有信息。它要求基于已建立的生物物理学原理，对合成生物学中的一个标准模型——基因拨动开关——进行推导和分析。验证已通过，我将继续提供解决方案。\n\n任务是形式化一个双蛋白相互抑制回路的动力学。令两种蛋白质的无量纲浓度为 $A(t)$ 和 $B(t)$。推导的核心是应用质量作用定律，该定律指出，一个物种浓度的变化率等于其生产速率之和减去其损耗速率之和。\n\n对于任何蛋白质 $P$，其控制性常微分方程 (ODE) 的一般形式是：\n$$\n\\frac{d[P]}{dt} = (\\text{生产速率}) - (\\text{损耗速率})\n$$\n其中 $[P]$ 表示蛋白质 $P$ 的浓度。\n\n问题指明损耗是一个一阶过程，代表了活性降解和细胞生长引起的稀释的综合效应。对于蛋白质 $A$ 和 $B$，这些损耗项分别由 $\\delta_A A$ 和 $\\delta_B B$ 给出，其中 $\\delta_A$ 和 $\\delta_B$ 是一阶损耗速率常数。\n\n生产项更为复杂。基因的表达由 DNA 上的启动子区域控制。在该系统中，蛋白质 $B$ 抑制蛋白质 $A$ 的生产，蛋白质 $A$ 抑制蛋白质 $B$ 的生产。蛋白质的合成速率被假定为与最大生产速率 $\\alpha$ 以及相关启动子处于活性（未结合）状态的概率成正比。\n\n我们首先考虑蛋白质 $A$ 的生产。其合成受到蛋白质 $B$ 的抑制。当蛋白质 $B$ 的分子与编码 $A$ 的基因的启动子上的操纵子位点结合时，就会发生这种抑制。我们可以将此结合过程建模为一个化学平衡：\n$$\nn_B P_B + O_A \\rightleftharpoons C\n$$\n在这里，$P_B$ 代表抑制蛋白 $B$，$O_A$ 是编码 $A$ 的基因的自由操纵子位点，$C$ 是由 $n_B$ 个抑制蛋白分子结合的操纵子复合物。参数 $n_B$ 是 Hill 系数，表示结合的协同性。\n\n对此结合过程采用准稳态近似——这是在此背景下的标准简化方法——可以导出操纵子 $O_A$ 未被结合的概率的 Hill 函数。这个概率我们记为 $f_{rep}(B)$，它是抑制蛋白浓度 $[B]$ 的一个递减函数：\n$$\nf_{rep}(B) = \\frac{K_{B}^{n_B}}{K_{B}^{n_B} + B^{n_B}} = \\frac{1}{1 + (B/K_B)^{n_B}}\n$$\n在这里，$K_B$ 是抑制蛋白 $B$ 与其目标操纵子结合的有效解离常数。它对应于使 $A$ 的生产速率减半的 $B$ 浓度。根据问题陈述，参数 $K_B$ 与控制 $A$ 的启动子相关，而 $n_B$ 是抑制蛋白 $B$ 的协同性。\n\n因此，蛋白质 $A$ 的总生产速率是由这个抑制函数调节的最大速率 $\\alpha_A$。问题明确没有泄漏表达，因此当启动子被完全抑制时，生产速率为零。\n$$\n\\text{蛋白质 } A \\text{ 的生产速率} = \\alpha_A \\cdot f_{rep}(B) = \\frac{\\alpha_A}{1 + (B/K_B)^{n_B}}\n$$\n\n结合生产项和损耗项，我们得到关于蛋白质 $A$ 浓度的第一个 ODE：\n$$\n\\frac{dA}{dt} = \\frac{\\alpha_A}{1 + (B/K_B)^{n_B}} - \\delta_A A\n$$\n\n关于蛋白质 $B$ 浓度的推导是完全对称的。其生产受到蛋白质 $A$ 的抑制。与此相互作用相关的参数是最大生产速率 $\\alpha_B$、解离常数 $K_A$ 和 Hill 系数 $n_A$。$B$ 的生产速率为：\n$$\n\\text{蛋白质 } B \\text{ 的生产速率} = \\alpha_B \\cdot f_{rep}(A) = \\frac{\\alpha_B}{1 + (A/K_A)^{n_A}}\n$$\n损耗项为 $\\delta_B B$。因此，第二个 ODE 是：\n$$\n\\frac{dB}{dt} = \\frac{\\alpha_B}{1 + (A/K_A)^{n_A}} - \\delta_B B\n$$\n\n至此，我们推导出了控制基因拨动开关的完整耦合非线性 ODE 系统：\n$$\n\\begin{cases}\n\\frac{dA}{dt} = \\frac{\\alpha_A}{1 + (B/K_B)^{n_B}} - \\delta_A A \\\\\n\\frac{dB}{dt} = \\frac{\\alpha_B}{1 + (A/K_A)^{n_A}} - \\delta_B B\n\\end{cases}\n$$\n该系统必须通过数值方法求解。计算协议要求我们对每个参数集，从两个不同的初始条件（$I_1$：高 $A$、低 $B$；$I_2$：低 $A$、高 $B$）出发，对这些方程进行积分。系统在一个足够长的时间 $T_{\\max} = 500$ 内进行积分，以使其达到稳态。\n\n通过比较从 $I_1$ 和 $I_2$ 出发达到的最终状态，可以确定存在一个还是两个稳定稳态（单稳态 vs. 双稳态）。令从 $I_1$ 出发的终末状态向量为 $(A_1, B_1)$，从 $I_2$ 出发的为 $(A_2, B_2)$。我们计算欧几里得距离 $d = \\sqrt{(A_1 - A_2)^2 + (B_1 - B_2)^2}$。如果此距离 $d$ 大于或等于阈值 $\\tau = 5$，我们断定该系统是双稳态的，并已收敛到两个不同的稳定状态。否则，我们断定它是单稳态的。对所提供的测试套件中的每种情况都执行此程序。使用刚性 ODE 求解器是合适的，因为系统的时间尺度可能相差很大，尤其是在切换事件期间。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Derives, implements, and solves the ODE model for a genetic toggle switch\n    to determine the number of stable steady states for different parameter sets.\n    \"\"\"\n\n    # Test cases are tuples of parameters in the order:\n    # (alpha_A, alpha_B, delta_A, delta_B, K_A, K_B, n_A, n_B)\n    test_cases = [\n        (50.0, 50.0, 1.0, 1.0, 1.0, 1.0, 4.0, 4.0),  # Case 1: strong cooperativity\n        (50.0, 50.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0),  # Case 2: no cooperativity\n        (50.0, 50.0, 5.0, 5.0, 1.0, 1.0, 4.0, 4.0),  # Case 3: fast loss\n        (5.0, 5.0, 1.0, 1.0, 1.0, 1.0, 4.0, 4.0),   # Case 4: weak expression\n    ]\n\n    results = []\n    \n    T_max = 500.0\n    t_span = (0, T_max)\n    \n    # Initial Conditions\n    # IC1: High A, Low B\n    # IC2: Low A, High B\n    ic1 = [50.0, 0.01]\n    ic2 = [0.01, 50.0]\n    \n    # Threshold for distinguishing states\n    distance_threshold = 5.0\n\n    def toggle_switch_ode(t, y, alpha_A, alpha_B, delta_A, delta_B, K_A, K_B, n_A, n_B):\n        \"\"\"\n        Defines the system of ODEs for the genetic toggle switch.\n        y[0] = A, y[1] = B\n        \"\"\"\n        A, B = y\n        \n        # Rate of change for protein A, repressed by B\n        dAdt = alpha_A / (1.0 + (B / K_B)**n_B) - delta_A * A\n        \n        # Rate of change for protein B, repressed by A\n        dBdt = alpha_B / (1.0 + (A / K_A)**n_A) - delta_B * B\n        \n        return [dAdt, dBdt]\n\n    for params in test_cases:\n        # Solver options: a stiff solver with tight tolerances for accuracy.\n        solver_options = {\n            'method': 'Radau',\n            'rtol': 1e-8,\n            'atol': 1e-8,\n        }\n\n        # Integrate from the first initial condition\n        sol1 = solve_ivp(toggle_switch_ode, t_span, ic1, args=params, **solver_options)\n        \n        # Integrate from the second initial condition\n        sol2 = solve_ivp(toggle_switch_ode, t_span, ic2, args=params, **solver_options)\n        \n        # Extract terminal states\n        terminal_state1 = sol1.y[:, -1]\n        terminal_state2 = sol2.y[:, -1]\n        \n        # Calculate Euclidean distance between terminal states\n        distance = np.linalg.norm(terminal_state1 - terminal_state2)\n        \n        # Classify as monostable (1) or bistable (2)\n        if distance >= distance_threshold:\n            results.append(2)\n        else:\n            results.append(1)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2755952"}]}