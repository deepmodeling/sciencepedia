{"hands_on_practices": [{"introduction": "对简单基因网络的稳态分析始于最基本的构建模块：线性反应链。本练习旨在通过一个简单的双分子系统，巩固将生物化学反应转化为常微分方程($ODEs$)并求解其稳态的核心技能。熟练掌握这一基础过程，是分析任何更复杂调控网络的第一步。[@problem_id:2776736]", "problem": "考虑一个混合均匀、体积固定的单细胞系统，其中两种分子$A$和$B$的浓度根据质量作用动力学在以下反应网络下进行确定性演化：$\\emptyset \\xrightarrow{k_0} A$，$A \\xrightarrow{k_1} B$ 和 $B \\xrightarrow{k_2} \\emptyset$。此处，$k_0$，$k_1$和$k_2$均为正常数；$k_0$的单位是浓度/单位时间，$k_1$和$k_2$的单位是时间的倒数。设$a(t)$和$b(t)$分别表示在时间$t$时$A$和$B$的浓度。请使用质量作用动力学的定义和该开放系统内的物质守恒定律，从第一性原理出发，构建描述$a(t)$和$b(t)$演化的确定性常微分方程（ODE）。然后，利用常微分方程的稳态定义，推导出仅用$k_0$，$k_1$和$k_2$表示的代数稳态条件，并求解这些条件以获得唯一的正常数稳态浓度$a^{\\ast}$和$b^{\\ast}$的闭式表达式。最终答案以$1 \\times 2$行向量$(a^{\\ast}, b^{\\ast})$的形式给出。无需数值近似，最终答案中不应包含单位。", "solution": "在尝试任何解答之前，需对问题陈述进行验证。\n\n**第一步：提取已知条件**\n- 系统描述：一个混合均匀的固定体积单细胞系统。\n- 物种：分子种类$A$和$B$。\n- 动力学：根据质量作用动力学的确定性演化。\n- 反应网络：$\\emptyset \\xrightarrow{k_0} A$，$A \\xrightarrow{k_1} B$，$B \\xrightarrow{k_2} \\emptyset$。\n- 速率常数：$k_0$、$k_1$和$k_2$均为正常数。\n- 单位：$k_0$的单位是浓度/单位时间；$k_1$和$k_2$的单位是时间的倒数。\n- 状态变量：$a(t)$和$b(t)$是在时间$t$时$A$和$B$的浓度。\n- 目标：\n    1. 构建关于$a(t)$和$b(t)$的常微分方程（ODE）。\n    2. 推导代数稳态条件。\n    3. 求解唯一的正常数稳态浓度，记为$a^{\\ast}$和$b^{\\ast}$。\n- 最终答案格式：一个$1 \\times 2$的行向量$(a^{\\ast}, b^{\\ast})$。\n\n**第二步：问题陈述的验证**\n该问题具有科学依据，是适定且客观的。它描述了一个简单的线性反应网络，这是化学动力学和系统生物学中的一个基本模型。问题要求应用质量作用动力学原理，这是一种标准且严谨的方法。问题提供了构建线性常微分方程组所需的所有信息——反应方案和速率常数的性质。众所周知，对于正常数速率常数，这样的系统拥有一个唯一的、稳定的、正的稳态解。因此，该问题不是不适定、不完整或矛盾的。这是一个第一性原理的直接应用，而不是一个无意义或故作高深的问题。\n\n**第三步：结论**\n问题被认为是有效的。将提供解答。\n\n浓度$a(t)$和$b(t)$的演化由一个根据质量作用动力学原理推导出的常微分方程组所控制。对于每一种物质，其浓度的变化率等于所有产生它的反应的速率之和减去所有消耗它的反应的速率之和。\n\n对于物种$A$，其浓度记为$a(t)$。\n- $A$的产生来自反应$\\emptyset \\xrightarrow{k_0} A$。这是一个相对于系统物种的零级反应，因此其速率就是常数$k_0$。\n- $A$的消耗来自反应$A \\xrightarrow{k_1} B$。这是一个相对于$A$的一级反应，因此其速率为$k_1 a(t)$。\n由此得到$a(t)$的微分方程为：\n$$ \\frac{da}{dt} = k_0 - k_1 a(t) $$\n\n对于物种$B$，其浓度记为$b(t)$。\n- $B$的产生来自反应$A \\xrightarrow{k_1} B$。此反应的速率，也就是$B$的生成速率，为$k_1 a(t)$。\n- $B$的消耗来自反应$B \\xrightarrow{k_2} \\emptyset$。这是一个相对于$B$的一级反应，因此其速率为$k_2 b(t)$。\n由此得到$b(t)$的微分方程为：\n$$ \\frac{db}{dt} = k_1 a(t) - k_2 b(t) $$\n\n因此，常微分方程组为：\n$$ \\frac{da}{dt} = k_0 - k_1 a $$\n$$ \\frac{db}{dt} = k_1 a - k_2 b $$\n\n稳态被定义为所有物种的浓度不随时间变化的条件。在数学上，这对应于所有浓度的时间导数等于零。令$a^{\\ast}$和$b^{\\ast}$分别为$A$和$B$的稳态浓度。\n稳态条件为：\n$$ \\frac{da}{dt} = 0 \\implies k_0 - k_1 a^{\\ast} = 0 $$\n$$ \\frac{db}{dt} = 0 \\implies k_1 a^{\\ast} - k_2 b^{\\ast} = 0 $$\n\n我们现在必须求解这个关于$a^{\\ast}$和$b^{\\ast}$的线性代数方程组。\n从第一个方程：\n$$ k_1 a^{\\ast} = k_0 $$\n由于$k_1$是一个正常数，我们可以用它来除以求得$a^{\\ast}$：\n$$ a^{\\ast} = \\frac{k_0}{k_1} $$\n\n现在，将$a^{\\ast}$的这个表达式代入第二个方程：\n$$ k_1 \\left( \\frac{k_0}{k_1} \\right) - k_2 b^{\\ast} = 0 $$\n$$ k_0 - k_2 b^{\\ast} = 0 $$\n$$ k_2 b^{\\ast} = k_0 $$\n由于$k_2$是一个正常数，我们可以用它来除以求得$b^{\\ast}$：\n$$ b^{\\ast} = \\frac{k_0}{k_2} $$\n\n问题指明$k_0$，$k_1$和$k_2$都是正常数。因此，稳态浓度$a^{\\ast} = \\frac{k_0}{k_1}$和$b^{\\ast} = \\frac{k_0}{k_2}$保证是唯一且为正的。最终答案是行向量$(a^{\\ast}, b^{\\ast})$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{k_0}{k_1} & \\frac{k_0}{k_2}\n\\end{pmatrix}\n}\n$$", "id": "2776736"}, {"introduction": "掌握了线性系统后，我们将转向非线性网络，这是涌现出复杂生物学行为（如双稳态）的根源。本练习将分析一个标志性的合成生物学元件——基因拨动开关，并引入线性稳定性分析这一关键工具，用以判断多个理论上的稳态中哪些是可以在现实中稳定存在的。通过此练习，您将从仅仅“找到”稳态，跃升至能够“预测”其动态行为。[@problem_id:2776738]", "problem": "考虑一个由两个相互抑制的转录单元构成的对称基因触发开关，其在平均蛋白质浓度水平上的确定性模型由以下常微分方程组 (ODEs) 给出：\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{\\alpha}{1 + y^{n}} \\;-\\; x, \n\\qquad\n\\frac{dy}{dt} \\;=\\; \\frac{\\alpha}{1 + x^{n}} \\;-\\; y,\n$$\n其中 $x$ 和 $y$ 是两种阻遏蛋白的无量纲浓度，$\\alpha$ 是一个无量纲的最大合成参数（包括启动子强度、翻译速率和降解标度），$n$ 是描述协同抑制的Hill系数。假设该动力学遵循Hill型调控背后标准的准稳态近似以及一阶有效稀释/降解。假设在一个对称参数体系中，$\\alpha = 3$ 且 $n = 2$。已知当 $\\alpha$ 足够大且 $n>1$ 时，该体系会产生双稳态。\n\n从平面系统的线性化与稳定性的基本原理出发，完成以下任务：\n- 在一般稳态 $(x^{\\ast}, y^{\\ast})$ 处，推导系统的雅可比矩阵。\n- 确定当 $\\alpha = 3$ 且 $n = 2$ 时的所有稳态（预计会存在一个对称稳态 $x^{\\ast} = y^{\\ast}$ 和两个非对称稳态 $x^{\\ast} \\neq y^{\\ast}$）。您可以用任何必要的精度数值计算非对称稳态，以便通过迹-行列式检验明确地分类其稳定性。\n- 在每个稳态处，计算雅可比矩阵，并使用平面系统的迹-行列式条件来判断线性稳定性。\n- 总结在该参数体系中，有多少个稳态是线性稳定的。\n\n您的最终答案必须是等于线性稳定稳态数量的单个整数。无需指定舍入规则。不要在最终答案中包含任何单位。", "solution": "该问题要求对一个对称基因触发开关进行线性稳定性分析。系统的动力学由以下耦合常微分方程给出：\n$$\n\\frac{dx}{dt} = f(x,y) = \\frac{\\alpha}{1 + y^{n}} - x\n$$\n$$\n\\frac{dy}{dt} = g(x,y) = \\frac{\\alpha}{1 + x^{n}} - y\n$$\n给定参数 $\\alpha = 3$ 和 $n = 2$。任务是找出所有稳态，并确定其中有多少个是线性稳定的。\n\n首先，我们推导系统在一般点 $(x, y)$ 处的雅可比矩阵 $J$。雅可比矩阵定义为：\n$$\nJ(x,y) = \\begin{pmatrix} \\frac{\\partial f}{\\partial x} & \\frac{\\partial f}{\\partial y} \\\\ \\frac{\\partial g}{\\partial x} & \\frac{\\partial g}{\\partial y} \\end{pmatrix}\n$$\n偏导数计算如下：\n$$\n\\frac{\\partial f}{\\partial x} = -1\n$$\n$$\n\\frac{\\partial f}{\\partial y} = \\frac{d}{dy} \\left( \\alpha (1+y^n)^{-1} \\right) = -\\alpha (1+y^n)^{-2} (ny^{n-1}) = -\\frac{\\alpha n y^{n-1}}{(1+y^n)^2}\n$$\n$$\n\\frac{\\partial g}{\\partial x} = \\frac{d}{dx} \\left( \\alpha (1+x^n)^{-1} \\right) = -\\alpha (1+x^n)^{-2} (nx^{n-1}) = -\\frac{\\alpha n x^{n-1}}{(1+x^n)^2}\n$$\n$$\n\\frac{\\partial g}{\\partial y} = -1\n$$\n因此，雅可比矩阵为：\n$$\nJ(x,y) = \\begin{pmatrix} -1 & -\\frac{\\alpha n y^{n-1}}{(1+y^n)^2} \\\\ -\\frac{\\alpha n x^{n-1}}{(1+x^n)^2} & -1 \\end{pmatrix}\n$$\n接下来，我们通过令 $\\frac{dx}{dt} = 0$ 和 $\\frac{dy}{dt} = 0$ 来确定稳态 $(x^{\\ast}, y^{\\ast})$。对于给定的参数 $\\alpha=3$ 和 $n=2$，稳态条件为：\n$$\nx^{\\ast} = \\frac{3}{1 + (y^{\\ast})^2}\n$$\n$$\ny^{\\ast} = \\frac{3}{1 + (x^{\\ast})^2}\n$$\n为求解该方程组，我们先去分母得到 $x^{\\ast}(1+(y^{\\ast})^2) = 3$ 和 $y^{\\ast}(1+(x^{\\ast})^2) = 3$，然后将两式相减：\n$$\nx^{\\ast} + x^{\\ast}(y^{\\ast})^2 - (y^{\\ast} + y^{\\ast}(x^{\\ast})^2) = 0\n$$\n$$\n(x^{\\ast} - y^{\\ast}) - x^{\\ast}y^{\\ast}(x^{\\ast} - y^{\\ast}) = 0\n$$\n$$\n(x^{\\ast} - y^{\\ast})(1 - x^{\\ast}y^{\\ast}) = 0\n$$\n该方程为稳态解提供了两种可能性：\n1. $x^{\\ast} = y^{\\ast}$ (对称稳态).\n2. $x^{\\ast}y^{\\ast} = 1$ (非对称稳态).\n\n情况1：$x^{\\ast} = y^{\\ast}$。\n代入稳态方程可得：\n$$\nx^{\\ast} = \\frac{3}{1+(x^{\\ast})^2} \\implies x^{\\ast}(1+(x^{\\ast})^2) = 3 \\implies (x^{\\ast})^3 + x^{\\ast} - 3 = 0\n$$\n令该对称解为 $x^{\\ast} = x_s$。由于浓度必须为正 ($x_s>0$)，我们分析函数 $p(x) = x^3+x-3$。其导数为 $p'(x) = 3x^2+1 > 0$，因此该函数是严格单调递增的。由于 $p(1) = -1$ 且 $p(2) = 7$，存在一个唯一的实根 $x_s \\in (1, 2)$。这就定义了对称稳态 $(x_s, x_s)$。\n\n情况2：$x^{\\ast}y^{\\ast} = 1$。\n将 $y^{\\ast} = 1/x^{\\ast}$ 代入第一个稳态方程：\n$$\nx^{\\ast} = \\frac{3}{1 + (1/x^{\\ast})^2} = \\frac{3}{1 + 1/(x^{\\ast})^2} = \\frac{3(x^{\\ast})^2}{(x^{\\ast})^2+1}\n$$\n由于 $x^{\\ast}>0$，我们可以两边同除以 $x^{\\ast}$：\n$$\n1 = \\frac{3x^{\\ast}}{(x^{\\ast})^2+1} \\implies (x^{\\ast})^2 + 1 = 3x^{\\ast} \\implies (x^{\\ast})^2 - 3x^{\\ast} + 1 = 0\n$$\n使用二次方程求根公式，我们找到 $x^{\\ast}$ 的两个根：\n$$\nx^{\\ast} = \\frac{3 \\pm \\sqrt{(-3)^2 - 4(1)(1)}}{2} = \\frac{3 \\pm \\sqrt{5}}{2}\n$$\n这给出了两个非对称稳态：\n$SS_2: (x^{\\ast}, y^{\\ast}) = \\left(\\frac{3+\\sqrt{5}}{2}, \\frac{3-\\sqrt{5}}{2}\\right)$\n$SS_3: (x^{\\ast}, y^{\\ast}) = \\left(\\frac{3-\\sqrt{5}}{2}, \\frac{3+\\sqrt{5}}{2}\\right)$\n\n现在我们使用迹-行列式检验来分析这三个稳态中每一个的稳定性。一个稳态是线性稳定的当且仅当 $\\text{tr}(J) < 0$ 且 $\\det(J) > 0$。对于 $\\alpha=3, n=2$ 的雅可比矩阵是：\n$$\nJ(x,y) = \\begin{pmatrix} -1 & -\\frac{6 y}{(1+y^2)^2} \\\\ -\\frac{6 x}{(1+x^2)^2} & -1 \\end{pmatrix}\n$$\n其迹为 $\\text{tr}(J) = -1 + (-1) = -2$。由于对于任何稳态，$\\text{tr}(J) < 0$ 都成立，所以稳定性仅取决于行列式的符号。\n$$\n\\det(J) = (-1)(-1) - \\left(-\\frac{6 y^{\\ast}}{(1+(y^{\\ast})^2)^2}\\right)\\left(-\\frac{6 x^{\\ast}}{(1+(x^{\\ast})^2)^2}\\right) = 1 - \\frac{36 x^{\\ast}y^{\\ast}}{((1+(x^{\\ast})^2)(1+(y^{\\ast})^2))^2}\n$$\n利用稳态关系式 $1+(x^{\\ast})^2 = 3/y^{\\ast}$ 和 $1+(y^{\\ast})^2 = 3/x^{\\ast}$：\n$$\n\\det(J) = 1 - \\frac{36 x^{\\ast}y^{\\ast}}{((3/y^{\\ast})(3/x^{\\ast}))^2} = 1 - \\frac{36 x^{\\ast}y^{\\ast}}{(9/(x^{\\ast}y^{\\ast}))^2} = 1 - \\frac{36 (x^{\\ast}y^{\\ast})^3}{81} = 1 - \\frac{4}{9}(x^{\\ast}y^{\\ast})^3\n$$\n现在我们对每种情况进行评估。\n\n对称稳态 $(x_s, x_s)$ 的稳定性：\n此处 $x^{\\ast}y^{\\ast} = x_s^2$。行列式为 $\\det(J_1) = 1 - \\frac{4}{9}(x_s^2)^3 = 1 - \\frac{4}{9}(x_s^3)^2$。从三次方程我们得到 $x_s^3 = 3 - x_s$。\n$$\n\\det(J_1) = 1 - \\frac{4}{9}(3-x_s)^2\n$$\n为了确定符号，我们必须评估是否 $(3-x_s)^2 > 9/4$。这等价于 $|3-x_s| > 3/2 = 1.5$。由于我们已经确定 $1 < x_s < 2$，并且更精确地，由于 $p(1.5) = 1.5^3+1.5-3=3.375-1.5=1.875>0$，我们知道 $1 < x_s < 1.5$。因此，$1.5 < 3-x_s < 2$，这意味着 $|3-x_s| > 1.5$。\n因此，$\\frac{4}{9}(3-x_s)^2 > 1$，这使得 $\\det(J_1) < 0$。对称稳态是一个鞍点，因此是**不稳定**的。\n\n非对称稳态 $SS_2$ 和 $SS_3$ 的稳定性：\n对于这两个稳态，我们已经确定 $x^{\\ast}y^{\\ast} = 1$。其行列式为：\n$$\n\\det(J_{2,3}) = 1 - \\frac{4}{9}(1)^3 = 1 - \\frac{4}{9} = \\frac{5}{9}\n$$\n由于 $\\det(J_{2,3}) = 5/9 > 0$ 且 $\\text{tr}(J) = -2 < 0$，两个非对称稳态都是**稳定**的。其特征值为实数，因此它们是稳定节点。\n\n总之，该系统有三个稳态：一个不稳定的对称稳态和两个稳定的非对称稳态。线性稳定稳态的总数是 $2$。", "answer": "$$\n\\boxed{2}\n$$", "id": "2776738"}, {"introduction": "虽然解析方法深刻揭示了系统原理，但许多真实的生物网络过于复杂，无法手动求解。本练习将前一个练习中的分析方法升级为一种通用的计算策略，指导您如何通过数值“打靶法”系统性地找到所有稳态，并自动计算其稳定性。掌握这种计算技能对于探索系统在不同参数下的行为至关重要，例如，精确确定导致开关行为出现的临界（分岔）点。[@problem_id:2776770]", "problem": "考虑一个具有两种阻遏蛋白的对称遗传拨动开关模型的无量纲形式。令 $x(t)$ 和 $y(t)$ 表示时刻 $t$ 时这两种蛋白质的无量纲浓度。其动力学由以下常微分方程给出\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{a}{1 + \\left(y\\right)^{n}} \\;-\\; x, \\qquad\n\\frac{dy}{dt} \\;=\\; \\frac{a}{1 + \\left(x\\right)^{n}} \\;-\\; y,\n$$\n其中 $a \\gt 0$ 是一个无量纲的最大产生参数（两个基因相同），而 $n \\ge 1$ 是一个希尔（Hill）协同指数。假设 $n = 2$ 且无基础表达。稳态是满足以下耦合代数方程的任意数对 $(x^{\\ast}, y^{\\ast})$，其中 $x^{\\ast} \\ge 0$，$y^{\\ast} \\ge 0$\n$$\n0 \\;=\\; \\frac{a}{1 + \\left(y^{\\ast}\\right)^{2}} \\;-\\; x^{\\ast}, \\qquad\n0 \\;=\\; \\frac{a}{1 + \\left(x^{\\ast}\\right)^{2}} \\;-\\; y^{\\ast}.\n$$\n稳态 $(x^{\\ast}, y^{\\ast})$ 的局部线性稳定性由在 $(x^{\\ast}, y^{\\ast})$ 处计算的右侧函数的雅可比矩阵 $J(x^{\\ast}, y^{\\ast})$ 的特征值确定。当且仅当 $J(x^{\\ast}, y^{\\ast})$ 的所有特征值都具有严格为负的实部时，该稳态是渐近稳定的。\n\n您的任务是设计并实现一种数值“打靶”法，通过求解耦合代数方程来找到给定参数 $a$ 的所有不同稳态，然后通过计算雅可比矩阵的特征值来验证每个稳态的稳定性。对于此问题，术语“打靶”指的是在有界域内的初始猜测网格上进行系统的多起点求根过程，并将数值上无法区分的解进行聚类以避免重复。\n\n要求：\n\n1. 使用以下基本定义和事实作为您的出发点：\n   - 稳态满足 $dx/dt = 0$ 和 $dy/dt = 0$。\n   - 对于向量场 $(f,g)$，其雅可比矩阵的元素为 $J_{ij} = \\partial \\phi_i / \\partial z_j$，其中 $\\phi_1 = f$，$ \\phi_2 = g$，$z_1 = x$，$z_2 = y$。\n   - 如果雅可比矩阵的所有特征值都具有严格为负的实部，则稳态是渐近稳定的。\n\n2. 在一个闭合的方形域中，对均匀的初始猜测点 $(x_0,y_0)$ 网格实施多起点“打靶”策略。对于每个参数 $a$：\n   - 使用域 $[0, a] \\times [0, a]$ 作为初始猜测。使用模型方程证明此边界的合理性。\n   - 使用一个均匀网格，其中至少有 $M \\times M$ 个起始点，其中 $M \\ge 21$。\n   - 对于每个起始点，对稳态方程应用数值求根器，并在求解器收敛、残差范数低于一个小的容差 $\\varepsilon_{\\text{res}}$ 且解位于非负象限内的情况下接受该解。\n   - 将欧几里得范数下距离小于容差 $\\varepsilon_{\\text{uniq}}$ 的解聚类为单个代表。\n\n3. 对于每个唯一的稳态 $(x^{\\ast}, y^{\\ast})$，计算其雅可比矩阵\n   $$\n   J(x^{\\ast}, y^{\\ast}) \\;=\\;\n   \\begin{bmatrix}\n   -1 & - \\dfrac{2 a\\, y^{\\ast}}{\\left(1 + \\left(y^{\\ast}\\right)^2\\right)^2} \\\\\n   - \\dfrac{2 a\\, x^{\\ast}}{\\left(1 + \\left(x^{\\ast}\\right)^2\\right)^2} & -1\n   \\end{bmatrix}\n   $$\n   然后计算其特征值。如果 $\\max \\{ \\Re(\\lambda) \\} \\lt 0$，则将稳态分类为渐近稳定，其中最大值取自 $J(x^{\\ast}, y^{\\ast})$ 的所有特征值 $\\lambda$。在您的实现中，使用一个严格的稳定性容差 $\\varepsilon_{\\text{stab}} \\gt 0$，并且如果 $\\max \\{ \\Re(\\lambda) \\} \\le - \\varepsilon_{\\text{stab}}$，则宣布其为稳定。\n\n4. 数值参数：\n   - 使用 $\\varepsilon_{\\text{res}} = 10^{-10}$，$\\varepsilon_{\\text{uniq}} = 10^{-8}$ 和 $\\varepsilon_{\\text{stab}} = 10^{-8}$。\n   - 每轴使用 $M = 31$ 个网格点。\n\n5. 测试套件：\n   在以下三个参数值上评估您的方法：\n   - 案例1：$a = 1.5$（一个低于临界点的值）。\n   - 案例2：$a = 3.0$（一个高于临界点的值）。\n   - 案例3：$a = 2.0$（临界点）。\n\n6. 输出规格：\n   - 对于每种情况，计算两个整数：您的方法找到的不同稳态的数量 $N$ 和其中渐近稳定稳态的数量 $S$。\n   - 您的程序应生成单行输出，其中包含结果，格式为逗号分隔的列表的列表，精确格式为 $[[N_1,S_1],[N_2,S_2],[N_3,S_3]]$，不含多余空格。\n\n所有变量和参数都是无量纲的；不需要物理单位。不涉及角度。\n\n您的实现必须遵守以下约束：\n- 代码必须是完整的、可运行的程序，不接受任何输入。\n- 它必须使用确定性的网格、容差和求解器选择，以便结果是可复现的。\n- 最终的打印输出必须与指定的精确格式完全匹配。", "solution": "所呈现的问题是动力系统分析中的一个标准的、适定的练习，具体应用于合成生物学中的一个经典模型——遗传拨动开关。该模型在科学上是合理的，问题陈述提供了所有必要的定义、参数和约束，其解决需要系统地应用数值分析原理。因此，该问题被认为是**有效的**，我们将着手解决它。\n\n核心任务是为给定的参数值找到系统的所有不同稳态，并确定它们的局部渐近稳定性。\n\n常微分方程组由以下公式给出：\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{a}{1 + y^{n}} \\;-\\; x \\\\\n\\frac{dy}{dt} \\;=\\; \\frac{a}{1 + x^{n}} \\;-\\; y\n$$\n将希尔（Hill）协同指数固定为 $n=2$ 后，系统为：\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{a}{1 + y^{2}} \\;-\\; x \\\\\n\\frac{dy}{dt} \\;=\\; \\frac{a}{1 + x^{2}} \\;-\\; y\n$$\n稳态，记作 $(x^{\\ast}, y^{\\ast})$，是系统动力学停止的点，即 $\\frac{dx}{dt} = 0$ 和 $\\frac{dy}{dt} = 0$。此条件转化为一个包含两个耦合非线性代数方程的系统：\n$$\nx^{\\ast} = \\frac{a}{1 + (y^{\\ast})^{2}} \\\\\ny^{\\ast} = \\frac{a}{1 + (x^{\\ast})^{2}}\n$$\n我们可以定义一个向量函数 $\\mathbf{F}: \\mathbb{R}^2 \\to \\mathbb{R}^2$，使得寻找稳态等同于寻找 $\\mathbf{F}(\\mathbf{z}) = \\mathbf{0}$ 的根，其中 $\\mathbf{z} = (x, y)^T$：\n$$\n\\mathbf{F}(x, y) =\n\\begin{pmatrix}\n\\frac{a}{1 + y^2} - x \\\\\n\\frac{a}{1 + x^2} - y\n\\end{pmatrix}\n= \\mathbf{0}\n$$\n问题指定在非负象限 $x^{\\ast} \\ge 0$ 和 $y^{\\ast} \\ge 0$ 中搜索解。根据稳态方程，由于 $(y^{\\ast})^2 \\ge 0$，因此 $1 + (y^{\\ast})^2 \\ge 1$。对于 $a > 0$，这意味着 $x^{\\ast} = a / (1 + (y^{\\ast})^2) \\le a$。对称的论证得出 $y^{\\ast} \\le a$。因此，所有非负稳态都必须位于闭合方域 $[0, a] \\times [0, a]$ 内。这严格证明了为初始猜测指定的搜索域的合理性。\n\n为了找到该域内的所有根，我们采用多起点求根程序，问题中称之为“打靶”法。标准的求根器，例如基于牛顿法的求根器，通常会收敛到依赖于初始猜测的单个根。为了找到所有根，我们必须从一组不同的初始点启动求解器。\n\n算法流程如下：\n$1$. 对于给定的参数 $a$，在域 $[0, a] \\times [0, a]$ 上构建一个包含 $M \\times M$ 个初始猜测点 $(x_0, y_0)$ 的均匀网格，其中 $M=31$。\n\n$2$. 对于每个初始猜测，使用一个鲁棒的数值求根器（此处使用 `scipy.optimize` 库）来找到系统 $\\mathbf{F}(\\mathbf{z}) = \\mathbf{0}$ 的一个根 $\\mathbf{z}^{\\ast} = (x^{\\ast}, y^{\\ast})$。\n\n$3$. 候选解 $\\mathbf{z}^{\\ast}$ 仅在满足三个标准时才被接受：(a) 求解器必须报告成功收敛。(b) 解必须具有物理意义，即 $x^{\\ast} \\ge 0$ 和 $y^{\\ast} \\ge 0$。(c) 残差范数 $\\| \\mathbf{F}(\\mathbf{z}^{\\ast}) \\|_2$ 必须小于容差 $\\varepsilon_{\\text{res}} = 10^{-10}$，以确保它是一个高精度的根。\n\n$4$. 多起点方法可能会多次找到相同的根。为了获得一组不同的稳态，需要对接受的解进行聚类。一个新解只有在它与每个先前找到的唯一解的欧几里得距离大于唯一性容差 $\\varepsilon_{\\text{uniq}} = 10^{-8}$ 时，才会被添加到唯一稳态列表中。\n\n在确定唯一稳态集合后，我们分析它们的局部线性稳定性。稳定性由在稳态 $(x^{\\ast}, y^{\\ast})$ 处计算的向量场的雅可比矩阵 $J$ 的特征值决定。雅可比矩阵如下所示：\n$$\nJ(x^{\\ast}, y^{\\ast}) =\n\\begin{bmatrix}\n\\frac{\\partial}{\\partial x}\\left(\\frac{a}{1+y^2} - x\\right) & \\frac{\\partial}{\\partial y}\\left(\\frac{a}{1+y^2} - x\\right) \\\\\n\\frac{\\partial}{\\partial x}\\left(\\frac{a}{1+x^2} - y\\right) & \\frac{\\partial}{\\partial y}\\left(\\frac{a}{1+x^2} - y\\right)\n\\end{bmatrix}\n\\Bigg|_{(x^{\\ast}, y^{\\ast})}\n=\n\\begin{bmatrix}\n-1 & - \\dfrac{2 a y^{\\ast}}{\\left(1 + (y^{\\ast})^2\\right)^2} \\\\\n- \\dfrac{2 a x^{\\ast}}{\\left(1 + (x^{\\ast})^2\\right)^2} & -1\n\\end{bmatrix}\n$$\n当且仅当 $J(x^{\\ast}, y^{\\ast})$ 的所有特征值 $\\lambda$ 都具有严格为负的实部时，稳态是渐近稳定的。对于一个 $2 \\times 2$ 矩阵，这等价于迹 $\\text{Tr}(J) < 0$ 和行列式 $\\text{Det}(J) > 0$。此处，$\\text{Tr}(J) = -2$，恒为负。因此，稳定性仅取决于行列式的符号：\n$$\n\\text{Det}(J) = (-1)(-1) - \\left(- \\dfrac{2 a y^{\\ast}}{\\left(1 + (y^{\\ast})^2\\right)^2}\\right) \\left(- \\dfrac{2 a x^{\\ast}}{\\left(1 + (x^{\\ast})^2\\right)^2}\\right) = 1 - \\frac{4 a^2 x^{\\ast} y^{\\ast}}{\\left(1+(x^{\\ast})^2\\right)^2 \\left(1+(y^{\\ast})^2\\right)^2} > 0\n$$\n在数值上，我们为每个唯一稳态计算特征值 $\\lambda_1, \\lambda_2$。如果它们实部的最大值小于一个负容差，则该状态被分类为渐近稳定：\n$$\n\\max \\{ \\Re(\\lambda_1), \\Re(\\lambda_2) \\} \\le - \\varepsilon_{\\text{stab}}\n$$\n其中 $\\varepsilon_{\\text{stab}} = 10^{-8}$。这个严格的条件能正确地将特征值实部为零（如在分岔点发生的情况）的状态识别为非渐近稳定。\n\n整个过程——求根、聚类和稳定性分析——将对指定的每个测试用例执行：$a = 1.5$（亚临界）、$a = 3.0$（超临界）和 $a = 2.0$（临界分岔点）。每个用例的最终输出是不同稳态的总数 $N$ 和渐近稳定稳态的数量 $S$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import root\n\ndef solve():\n    \"\"\"\n    Finds and analyzes steady states for a genetic toggle switch model.\n    \"\"\"\n    \n    # Define numerical parameters from the problem statement\n    M = 31\n    EPS_RES = 1e-10\n    EPS_UNIQ = 1e-8\n    EPS_STAB = 1e-8\n\n    # Define the test cases (parameter 'a')\n    test_cases = [1.5, 3.0, 2.0]\n    \n    final_results = []\n\n    for a in test_cases:\n        # Define the system of equations for the root finder\n        # F(z) = 0, where z = [x, y]\n        def system_equations(z, a_param):\n            x, y = z\n            eq1 = a_param / (1 + y**2) - x\n            eq2 = a_param / (1 + x**2) - y\n            return [eq1, eq2]\n\n        # Define the Jacobian matrix function\n        def jacobian_matrix(z, a_param):\n            x, y = z\n            j12 = -2 * a_param * y / (1 + y**2)**2\n            j21 = -2 * a_param * x / (1 + x**2)**2\n            return np.array([[-1.0, j12], [j21, -1.0]])\n\n        # Generate the grid of initial guesses\n        search_domain = np.linspace(0, a, M)\n        initial_guesses = []\n        for x0 in search_domain:\n            for y0 in search_domain:\n                initial_guesses.append([x0, y0])\n\n        # --- Part 1: Find all potential steady states ---\n        found_solutions = []\n        for guess in initial_guesses:\n            # Use scipy's root finder\n            sol = root(system_equations, guess, args=(a,), method='hybr', tol=EPS_RES)\n            \n            # Check for convergence and validity\n            if sol.success:\n                solution_point = sol.x\n                # Check residual norm\n                residual_norm = np.linalg.norm(system_equations(solution_point, a))\n                # Check non-negativity\n                if residual_norm < EPS_RES and np.all(solution_point >= -EPS_UNIQ): # Use tolerance for non-negativity\n                    found_solutions.append(solution_point)\n\n        # --- Part 2: Cluster solutions to find unique steady states ---\n        if not found_solutions:\n            unique_steady_states = []\n        else:\n            # Sort solutions to make clustering deterministic\n            found_solutions.sort(key=lambda p: (p[0], p[1]))\n            unique_steady_states = [found_solutions[0]]\n            for sol in found_solutions[1:]:\n                is_unique = True\n                for unique_sol in unique_steady_states:\n                    if np.linalg.norm(sol - unique_sol) < EPS_UNIQ:\n                        is_unique = False\n                        break\n                if is_unique:\n                    unique_steady_states.append(np.array(sol))\n        \n        num_distinct_states = len(unique_steady_states)\n        \n        # --- Part 3: Analyze stability of each unique steady state ---\n        num_stable_states = 0\n        for state in unique_steady_states:\n            # Compute the Jacobian at the steady state\n            J = jacobian_matrix(state, a)\n            \n            # Compute the eigenvalues\n            eigenvalues = np.linalg.eigvals(J)\n            \n            # Check stability criterion\n            max_real_part = np.max(np.real(eigenvalues))\n            if max_real_part <= -EPS_STAB:\n                num_stable_states += 1\n\n        final_results.append([num_distinct_states, num_stable_states])\n\n    # Final print statement in the exact required format.\n    str_results = [str(res).replace(' ', '') for res in final_results]\n    print(f\"[{','.join(str_results)}]\")\n\n\nsolve()\n```", "id": "2776770"}]}