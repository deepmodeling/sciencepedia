{"hands_on_practices": [{"introduction": "这项基础练习将引导你进入双组分系统定量分析的世界。通过运用质量作用定律和质量守恒原理，你将推导出一个最小化系统的稳态响应。这项基本练习旨在锻炼你将生物示意图转化为数学模型并求解其平衡行为的能力，这是分析任何信号网络的核心技能。[@problem_id:2786337]", "problem": "一个由组氨酸激酶 (HK)和响应调节因子 (RR)组成的最小双组分信号转导系统，使用质量作用动力学进行建模。磷酸化的组氨酸激酶（记作$HK\\sim P$）以双分子磷酸转移速率常数$k_{pt}$将其磷酸基团转移给未磷酸化的响应调节因子$RR$，从而产生磷酸化的响应调节因子$RR\\sim P$。磷酸化的响应调节因子$RR\\sim P$仅通过速率常数为$k_{dp}$的一级去磷酸化反应被移除；不存在逆向磷酸转移或特异性磷酸酶活性。响应调节因子的总浓度是守恒的，因此$[RR] + [RR\\sim P] = [RR_{tot}]$。假设$[HK\\sim P]$受上游过程缓冲，并在$RR$磷酸化动力学的时间尺度上可被视为常数。\n\n仅使用(i)基元反应的质量作用定律和(ii)响应调节因子总浓度守恒，从第一性原理推导出稳态浓度$[RR\\sim P]$，然后代入参数值$k_{pt} = 1 \\times 10^{5}\\,\\mathrm{M^{-1}s^{-1}}$，$k_{dp} = 0.01\\,\\mathrm{s^{-1}}$，$[HK\\sim P] = 100\\,\\mathrm{nM}$以及$[RR_{tot}] = 1\\,\\mu\\mathrm{M}$进行计算。以纳摩尔（nM）为单位表示最终浓度，并将您的答案四舍五入至三位有效数字。", "solution": "首先将对问题进行严格的验证。\n\n### 步骤1：提取已知条件\n明确给出的信息如下：\n- **系统组分与反应**：\n    - 一个由组氨酸激酶(HK)和响应调节因子(RR)组成的最小双组分系统。\n    - 磷酸转移反应：磷酸化的组氨酸激酶$HK\\sim P$以双分子速率常数$k_{pt}$将磷酸基团转移给未磷酸化的响应调节因子$RR$。这可以写为 $HK\\sim P + RR \\xrightarrow{k_{pt}} HK + RR\\sim P$。\n    - 去磷酸化反应：磷酸化的响应调节因子$RR\\sim P$通过速率常数为$k_{dp}$的一级去磷酸化反应被移除。这可以写为 $RR\\sim P \\xrightarrow{k_{dp}} RR + P_i$。\n- **约束与假设**：\n    - 不存在逆向磷酸转移反应。\n    - 不存在针对$RR\\sim P$去磷酸化的特异性磷酸酶活性。\n    - 响应调节因子的总浓度是守恒的：$[RR] + [RR\\sim P] = [RR_{tot}]$。\n    - 磷酸化的组氨酸激酶的浓度$[HK\\sim P]$是恒定的。\n- **参数值**：\n    - $k_{pt} = 1 \\times 10^{5}\\,\\mathrm{M^{-1}s^{-1}}$\n    - $k_{dp} = 0.01\\,\\mathrm{s^{-1}}$\n    - $[HK\\sim P] = 100\\,\\mathrm{nM}$\n    - $[RR_{tot}] = 1\\,\\mu\\mathrm{M}$\n- **目标**：\n    - 推导稳态浓度$[RR\\sim P]$。\n    - 计算给定参数下的$[RR\\sim P]_{ss}$值。\n    - 以纳摩尔（$\\mathrm{nM}$）为单位表示最终浓度，并四舍五入至三位有效数字。\n\n### 步骤2：使用提取的已知条件进行验证\n根据所需标准对问题进行评估：\n- **科学性**：该问题使用质量作用定律描述了一个双组分信号转导系统的简化模型。这是化学动力学和系统生物学中的一个标准和基本方法。反应和假设，例如总蛋白守恒和缓冲的上游信号，是使这类系统能够被解析处理的常见且有效的简化。\n- **适定性**：问题要求一个唯一的稳态浓度。鉴于已定义的反应、守恒定律和恒定输入，预计存在一个唯一的、稳定的稳态解。所有必需的参数都已提供。该问题是适定的。\n- **客观性**：问题以精确、定量的语言陈述，没有歧义或主观论断。\n\n该问题没有表现出任何已定义的缺陷。它在科学上是合理的、可形式化的、完整的，并且其参数对于生物系统而言在合理范围内。\n\n### 步骤3：结论与行动\n问题有效。我将继续进行推导和求解。\n\n磷酸化响应调节因子浓度$[RR\\sim P]$的动态变化受质量作用定律支配。$[RR\\sim P]$的变化率等于其生成速率减去其移除速率。\n\n$RR\\sim P$的生成是由于双分子磷酸转移反应，其速率为$k_{pt}[HK\\sim P][RR]$。$RR\\sim P$的移除是由于一级去磷酸化反应，其速率为$k_{dp}[RR\\sim P]$。\n\n因此，描述$[RR\\sim P]$随时间演化的常微分方程为：\n$$\n\\frac{d[RR\\sim P]}{dt} = k_{pt}[HK\\sim P][RR] - k_{dp}[RR\\sim P]\n$$\n在稳态下，所有物种的浓度恒定，这意味着它们的时间导数为零。应用稳态条件$\\frac{d[RR\\sim P]}{dt} = 0$：\n$$\nk_{pt}[HK\\sim P][RR]_{ss} = k_{dp}[RR\\sim P]_{ss}\n$$\n其中下标$ss$表示稳态浓度。\n\n我们已知响应调节因子总浓度的守恒定律：\n$$\n[RR] + [RR\\sim P] = [RR_{tot}]\n$$\n该关系式在任何时候都必须成立，包括在稳态时。因此，我们可以将未磷酸化的响应调节因子的稳态浓度$[RR]_{ss}$表示为：\n$$\n[RR]_{ss} = [RR_{tot}] - [RR\\sim P]_{ss}\n$$\n将此表达式代入稳态方程中：\n$$\nk_{pt}[HK\\sim P]([RR_{tot}] - [RR\\sim P]_{ss}) = k_{dp}[RR\\sim P]_{ss}\n$$\n这是一个关于未知变量$[RR\\sim P]_{ss}$的线性代数方程。我们求解它。\n$$\nk_{pt}[HK\\sim P][RR_{tot}] - k_{pt}[HK\\sim P][RR\\sim P]_{ss} = k_{dp}[RR\\sim P]_{ss}\n$$\n重新整理各项以分离出$[RR\\sim P]_{ss}$：\n$$\nk_{pt}[HK\\sim P][RR_{tot}] = (k_{dp} + k_{pt}[HK\\sim P])[RR\\sim P]_{ss}\n$$\n最后，磷酸化响应调节因子的稳态浓度的符号表达式为：\n$$\n[RR\\sim P]_{ss} = \\frac{k_{pt}[HK\\sim P][RR_{tot}]}{k_{dp} + k_{pt}[HK\\sim P]}\n$$\n现在，我们将给定的数值代入此表达式。为保证量纲一致性，所有浓度都必须转换为基本单位摩尔（$M$）。\n- $k_{pt} = 1 \\times 10^{5}\\,\\mathrm{M^{-1}s^{-1}}$\n- $k_{dp} = 0.01\\,\\mathrm{s^{-1}}$\n- $[HK\\sim P] = 100\\,\\mathrm{nM} = 100 \\times 10^{-9}\\,\\mathrm{M} = 1 \\times 10^{-7}\\,\\mathrm{M}$\n- $[RR_{tot}] = 1\\,\\mu\\mathrm{M} = 1 \\times 10^{-6}\\,\\mathrm{M}$\n\n首先，我们计算乘积$k_{pt}[HK\\sim P]$，它可视为磷酸化反应的一个伪一级速率常数：\n$$\nk_{pt}[HK\\sim P] = (1 \\times 10^{5}\\,\\mathrm{M^{-1}s^{-1}}) \\times (1 \\times 10^{-7}\\,\\mathrm{M}) = 1 \\times 10^{-2}\\,\\mathrm{s^{-1}} = 0.01\\,\\mathrm{s^{-1}}\n$$\n我们观察到该速率常数在数值上等于去磷酸化速率常数$k_{dp}$。\n\n将这个值和其他参数代入稳态表达式中：\n$$\n[RR\\sim P]_{ss} = \\frac{(0.01\\,\\mathrm{s^{-1}})(1 \\times 10^{-6}\\,\\mathrm{M})}{0.01\\,\\mathrm{s^{-1}} + 0.01\\,\\mathrm{s^{-1}}} = \\frac{0.01}{0.02} \\times (1 \\times 10^{-6}\\,\\mathrm{M})\n$$\n$$\n[RR\\sim P]_{ss} = \\frac{1}{2} \\times 1 \\times 10^{-6}\\,\\mathrm{M} = 0.5 \\times 10^{-6}\\,\\mathrm{M}\n$$\n问题要求答案以纳摩尔（$\\mathrm{nM}$）为单位。我们进行单位转换：\n$$\n1\\,\\mathrm{M} = 10^{9}\\,\\mathrm{nM}\n$$\n$$\n[RR\\sim P]_{ss} = 0.5 \\times 10^{-6} \\times 10^{9}\\,\\mathrm{nM} = 0.5 \\times 10^{3}\\,\\mathrm{nM} = 500\\,\\mathrm{nM}\n$$\n问题指定答案必须四舍五入至三位有效数字。计算出的精确值为$500$。为了明确地用三位有效数字表示，我们将其写成科学记数法形式$5.00 \\times 10^{2}$。", "answer": "$$\\boxed{5.00 \\times 10^{2}}$$", "id": "2786337"}, {"introduction": "在基础模型之上，本练习引入了一个更具生物真实性的层次：一个遵循米氏动力学（Michaelis-Menten kinetics）的专用磷酸酶。在这里，你将探索“零级超敏性”（zero-order ultrasensitivity）这一迷人现象，该机制使得信号系统能够像精确果断的开关一样工作。这项练习将挑战你使用渐近分析来理解非线性酶动力学如何能产生复杂的系统级行为。[@problem_id:2786302]", "problem": "考虑一个合成的双组分信号转导系统，其中一个活化的组氨酸激酶 (HK) 通过双分子磷酸转移将磷酸基团提供给一个响应调节子 (RR)，而一个专一性的 RR 磷酸酶催化磷酸化 RR 的去磷酸化。设活性激酶浓度为输入 $u \\equiv [HK\\sim P]$。假设如下：\n- 从 $[HK\\sim P]$ 到未磷酸化的 $[RR]$ 的磷酸转移是二级反应，速率为 $k_{pt} u [RR]$，其中 $k_{pt}$ 是一个双分子速率常数。\n- 该磷酸酶遵循 Michaelis–Menten (MM) 动力学，其作用于底物 $[RR\\sim P]$ 的最大速率为 $V_{max}$，Michaelis 常数为 $K_{M}$。\n- 总响应调节子是守恒的，$R_{T} = [RR] + [RR\\sim P]$，并且在所关注的时间尺度上，酶-底物复合物可以忽略不计。\n\n设 $y(u) \\equiv \\frac{[RR\\sim P]}{R_{T}}$ 表示作为输入 u 函数的稳态输出。从质量作用和 Michaelis–Menten 定义出发，写出 $[RR\\sim P]$ 的稳态方程。然后：\n1) 通过适当的极限分析，证明当磷酸酶在作用于 $[RR\\sim P]$ 时接近饱和状态，可以出现零级超敏输入-输出关系 $y(u)$。\n2) 通过在 $y=\\frac{1}{2}$ 时 Hill 图的斜率来定义半最大输出时的有效 Hill 系数 $n_{H}$，\n$$\nn_{H} \\equiv \\left.\\frac{d}{d\\ln u}\\ln\\!\\left(\\frac{y(u)}{1-y(u)}\\right)\\right|_{y=1/2}.\n$$\n在渐近区域 $V_{max} \\gg k_{pt}\\,u\\,[RR]$ (因此磷酸酶在稳态时远低于饱和状态工作) 中，推导 $n_{H}$ 的精确值。\n\n将你的最终答案表示为一个精确的无量纲数。不包含单位。无需四舍五入。", "solution": "设 $u \\equiv [HK\\sim P]$，$R \\equiv [RR]$，以及 $R_{P} \\equiv [RR\\sim P]$。总响应调节子为 $R_{T} = R + R_{P}$。磷酸转移 (磷酸化) 通量为\n$$\nv_{phos} = k_{pt}\\,u\\,R = k_{pt}\\,u\\,(R_{T} - R_{P}).\n$$\n通过专一性磷酸酶的去磷酸化通量，假设对底物 $R_P$ 遵循 Michaelis–Menten 动力学，为\n$$\nv_{dephos} = \\frac{V_{max}\\,R_{P}}{K_{M} + R_{P}}.\n$$\n在稳态时，\n$$\n0 = \\frac{dR_{P}}{dt} = v_{phos} - v_{dephos} \\quad\\Rightarrow\\quad k_{pt}\\,u\\,(R_{T} - R_{P}) = \\frac{V_{max}\\,R_{P}}{K_{M} + R_{P}}.\n$$\n定义输出 $y(u) \\equiv \\frac{R_{P}}{R_{T}}$，因此 $R_{P} = y R_{T}$ 且 $R = (1-y)R_{T}$。于是稳态方程变为\n$$\nk_{pt}\\,u\\,R_{T}(1-y) = \\frac{V_{max}\\,y R_{T}}{K_{M} + y R_{T}}.\n$$\n消去 $R_{T} > 0$ 得到\n$$\nk_{pt}\\,u\\,(1-y) = \\frac{V_{max}\\,y}{K_{M} + y R_{T}}.\n$$\n\n第1部分：当磷酸酶饱和时的零级超敏性。\n磷酸酶饱和对应于 $R_{P} \\gg K_{M}$，即 $y R_{T} \\gg K_{M}$。在该极限下，$v_{dephos} \\approx V_{max}$ 变得与 $R_{P}$ 无关（对底物是零级反应），稳态平衡简化为\n$$\nk_{pt}\\,u\\,(1-y) \\approx \\frac{V_{max}}{R_{T}} \\cdot \\frac{y R_{T}}{y R_{T}} = \\frac{V_{max}}{R_{T}} \\cdot 1 \\quad\\Rightarrow\\quad k_{pt}\\,u\\,(1-y) \\approx \\frac{V_{max}}{R_{T}}.\n$$\n解出 $y$ 得到\n$$\ny(u) \\approx 1 - \\frac{V_{max}}{k_{pt}\\,u\\,R_{T}}.\n$$\n该关系在阈值输入 $u_{t} \\equiv \\frac{V_{max}}{k_{pt}\\,R_{T}}$ 附近表现出急剧的转变：对于 $u \\gg u_{t}$，$y \\to 1$，而对于 $u \\gtrsim u_{t}$，输出会随着 $u$ 的微小分数变化而迅速上升。这种陡峭性之所以出现，是因为去磷酸化通量实际上与 $R_{P}$ 无关（零级），因此一旦 $k_{pt}\\,u\\,R$ 超过 $V_{max}$，就没有额外的去磷酸化能力来抵抗进一步的磷酸化。\n\n第2部分：在 $V_{max} \\gg k_{pt}\\,u\\,[RR]$ 条件下的有效 Hill 系数。\n在此渐近区域中，稳态去磷酸化通量等于 $v_{phos} = k_{pt}\\,u\\,R$，根据假设，它满足 $v_{phos} \\ll V_{max}$。对于一个 Michaelis–Menten 酶，\n$$\n\\frac{v_{dephos}}{V_{max}} = \\frac{R_{P}}{K_{M} + R_{P}}.\n$$\n如果 $\\frac{v_{dephos}}{V_{max}} \\ll 1$，那么必然有 $R_{P} \\ll K_{M}$，因为求解 $\\frac{R_{P}}{K_{M} + R_{P}} = \\varepsilon$ 会得到 $R_{P} = \\frac{\\varepsilon}{1-\\varepsilon}K_{M}$，当 $0<\\varepsilon\\ll 1$ 时，近似为 $\\varepsilon K_{M}$。因此，在此区域中，磷酸酶在远低于饱和的状态下工作，且\n$$\nv_{dephos} \\approx \\frac{V_{max}}{K_{M}}\\,R_{P}.\n$$\n稳态方程变为\n$$\nk_{pt}\\,u\\,(R_{T} - R_{P}) \\approx \\frac{V_{max}}{K_{M}}\\,R_{P}.\n$$\n求解 $R_{P}$，\n$$\nk_{pt}\\,u\\,R_{T} - k_{pt}\\,u\\,R_{P} \\approx \\frac{V_{max}}{K_{M}}\\,R_{P}\n\\quad\\Rightarrow\\quad\nk_{pt}\\,u\\,R_{T} \\approx \\left(k_{pt}\\,u + \\frac{V_{max}}{K_{M}}\\right)R_{P}.\n$$\n因此，\n$$\ny(u) \\equiv \\frac{R_{P}}{R_{T}} \\approx \\frac{k_{pt}\\,u}{k_{pt}\\,u + \\frac{V_{max}}{K_{M}}}\n= \\frac{u}{u + K_{\\mathrm{eff}}},\n$$\n其中有效输入标度为\n$$\nK_{\\mathrm{eff}} \\equiv \\frac{V_{max}}{k_{pt}\\,K_{M}}.\n$$\n这是关于 $u$ 的一个直角双曲线，其半最大点在 $u = K_{\\mathrm{eff}}$。为了计算有效 Hill 系数（在半输出时的 Hill 图斜率），使用定义\n$$\nn_{H} \\equiv \\left.\\frac{d}{d\\ln u}\\ln\\!\\left(\\frac{y}{1-y}\\right)\\right|_{y=1/2}.\n$$\n对于 $y(u) = \\frac{u}{u + K_{\\mathrm{eff}}}$，\n$$\n\\frac{y}{1-y} = \\frac{\\frac{u}{u + K_{\\mathrm{eff}}}}{1 - \\frac{u}{u + K_{\\mathrm{eff}}}}\n= \\frac{u}{K_{\\mathrm{eff}}}.\n$$\n因此，\n$$\n\\ln\\!\\left(\\frac{y}{1-y}\\right) = \\ln u - \\ln K_{\\mathrm{eff}},\n$$\n并且\n$$\n\\frac{d}{d\\ln u}\\ln\\!\\left(\\frac{y}{1-y}\\right) = \\frac{d\\ln u}{d\\ln u} - 0 = 1,\n$$\n该值对所有 $u$ 都是常数，特别是在 $y=\\frac{1}{2}$ 处。因此，在 $V_{max} \\gg k_{pt}\\,u\\,[RR]$ 这一磷酸酶在稳态时远低于饱和状态工作的区域中，有效 Hill 系数为\n$$\nn_{H} = 1.\n$$\n在此渐近极限下，这个值表明系统表现为一级（非超敏）行为，这与第1部分中建立的当磷酸酶在接近饱和状态下工作时的零级超敏区域形成对比。", "answer": "$$\\boxed{1}$$", "id": "2786302"}, {"introduction": "最后的这项实践在理论模型与真实世界数据之间架起了一座桥梁，这是合成生物学中至关重要的一步。你将获得响应调节器磷酸化过程的模拟时间序列数据，任务是拟合一个动力学模型以提取潜在的速率常数 $k_{pt}$ 和 $k_{dp}$。这项练习将为你提供非线性最小二乘法拟合和置信区间估计的实践经验，这些都是验证模型和量化生物过程的基本技术。[@problem_id:2786294]", "problem": "给定一个双组分信号转导系统中磷酸化响应调节子浓度的时间进程测量数据。其生化背景是组氨酸激酶对响应调节子进行磷酸化，以及内在或同源磷酸酶对其进行去磷酸化。假设以下基本事实和建模假设，这些必须用于推导待拟合的机理模型：\n\n- 质量作用动力学适用于磷酸基转移和去磷酸化反应。\n- 在测定区间内，磷酸化组氨酸激酶的浓度恒定为一个已知值 $H_0$（磷酸基转移步骤的伪一级反应条件）。\n- 总响应调节子浓度 $R_T$ 恒定，因此未磷酸化响应调节子的浓度为 $R(t) = R_T - R_P(t)$，其中 $R_P(t)$ 是磷酸化响应调节子浓度作为时间 $t$ 的函数。\n- 初始条件为 $R_P(0) = 0$。\n\n您的任务是：\n1) 基于这些基本假设和质量作用动力学，为 $R_P(t)$ 建立常微分方程，该方程仅依赖于待估计的两个动力学参数：双分子磷酸基转移速率常数 $k_{pt}$ 和单分子去磷酸化速率常数 $k_{dp}$。\n2) 在所述假设下，为 $R_P(t)$ 推导出一个可计算模型 $f(t; k_{pt}, k_{dp}, H_0, R_T)$。\n3) 通过最小化观测到的 $R_P$ 与模型预测值之间的残差平方和，实现非线性最小二乘法，以从下面每个测试案例的时间进程数据中估计 $(k_{pt}, k_{dp})$。\n4) 利用最优点处的残差雅可比矩阵和非线性最小二乘法的标准渐近理论，为每个测试案例计算 $k_{pt}$ 和 $k_{dp}$ 的 $95\\%$ 置信区间。使用学生t分布，其自由度等于数据点数量减去拟合参数的数量。\n5) 报告拟合的参数和置信区间。\n\n单位和数值约定：\n- 时间必须以秒 ($\\text{s}$) 为单位。\n- 浓度必须以微摩尔/升 ($\\mu\\text{M}$) 为单位。\n- 参数 $k_{pt}$ 必须以 $\\mu\\text{M}^{-1}\\,\\text{s}^{-1}$ 为单位报告。\n- 参数 $k_{dp}$ 必须以 $\\text{s}^{-1}$ 为单位报告。\n- 将所有数值输出表示为浮点小数，并精确到小数点后 $6$ 位。\n\n测试套件（提供所有三个案例的结果）：\n- 案例 A: $H_0 = 2.0\\,\\mu\\text{M}$, $R_T = 10.0\\,\\mu\\text{M}$, 时间点 $t = [0, 5, 10, 20, 40, 80, 120]\\,\\text{s}$, 观测值 $R_P = [0.00, 3.85, 6.25, 8.30, 9.42, 9.50, 9.53]\\,\\mu\\text{M}$。\n- 案例 B: $H_0 = 0.5\\,\\mu\\text{M}$, $R_T = 10.0\\,\\mu\\text{M}$, 时间点 $t = [0, 10, 20, 50, 100, 200]\\,\\text{s}$, 观测值 $R_P = [0.00, 2.50, 4.20, 6.46, 7.35, 7.49]\\,\\mu\\text{M}$。\n- 案例 C: $H_0 = 1.0\\,\\mu\\text{M}$, $R_T = 5.0\\,\\mu\\text{M}$, 时间点 $t = [0, 1, 2, 5, 10, 20, 40]\\,\\text{s}$, 观测值 $R_P = [0.00, 0.090, 0.160, 0.300, 0.405, 0.448, 0.454]\\,\\mu\\text{M}$。\n\n每个案例需要计算的量：\n- 拟合的 $k_{pt}$ 和 $k_{dp}$。\n- $k_{pt}$ 的 $95\\%$ 置信区间的下限和上限。\n- $k_{dp}$ 的 $95\\%$ 置信区间的下限和上限。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个以逗号分隔的列表的列表形式的结果，每个内部列表对应一个测试案例，顺序为案例A、案例B、案例C。\n- 每个内部列表的形式必须是 $[k_{pt}, k_{dp}, k_{pt, \\text{low}}, k_{pt, \\text{high}}, k_{dp, \\text{low}}, k_{dp, \\text{high}}]$，其中“low”和“high”分别表示 $95\\%$ 置信区间的下限和上限。\n- 所有值都必须是浮点数，并精确到 $6$ 位小数，输出字符串中不含单位。\n- 格式示例（仅供说明）：$[[0.012345, 0.067890, 0.010000, 0.014000, 0.050000, 0.080000], [...], [...]]$.\n\n科学真实性和约束条件：\n- 您的模型和估算过程必须从质量作用动力学和最小二乘理论推导得出，不得使用本问题陈述中明確提供的任何快捷方式。\n- 仅使用所提供的数据和假设。确保在拟合过程中参数遵守物理非负性。", "solution": "该问题要求为一个双组分信号转导系统推导动力学模型，然后根据实验数据进行参数估计和置信区间确定。分析按要求从第一性原理出发。\n\n首先，我们建立控制磷酸化响应调节子浓度 $R_P(t)$ 的常微分方程 (ODE)。该系统涉及两个关键反应：\n$1$. 从磷酸化的组氨酸激酶 $H_p$ 到未磷酸化的响应调节子 $R$ 的磷酸基转移，双分子速率常数为 $k_{pt}$：\n$$H_p + R \\xrightarrow{k_{pt}} H_p + R_P$$\n$2$. 磷酸化的响应调节子 $R_P$ 的去磷酸化，单分子速率常数为 $k_{dp}$：\n$$R_P \\xrightarrow{k_{dp}} R + P_i$$\n应用质量作用定律，$R_P$ 浓度（记作 $[R_P]$）的变化率是其生成速率与消耗速率之差：\n$$\\frac{d[R_P]}{dt} = k_{pt} [H_p] [R] - k_{dp} [R_P]$$\n问题陈述了几个简化假设。磷酸化组氨酸激酶的浓度恒定，$[H_p] = H_0$。总响应调节子的浓度也恒定，为 $R_T$，因此未磷酸化形式的浓度为 $[R] = R_T - [R_P]$。将这些代入速率方程，并使用 $R_P(t)$ 表示 $[R_P]$，得到该系统的控制性ODE：\n$$\\frac{dR_P}{dt} = k_{pt} H_0 (R_T - R_P(t)) - k_{dp} R_P(t)$$\n该ODE依赖于待估计的两个动力学参数 $k_{pt}$ 和 $k_{dp}$，以及已知的实验常数 $H_0$ 和 $R_T$。至此完成第一项任务。\n\n其次，我们推导该ODE的解析解以获得一个可计算模型。该ODE是一个线性一阶非齐次微分方程。我们可以将其重排为标准形式：\n$$\\frac{dR_P}{dt} + (k_{pt} H_0 + k_{dp}) R_P = k_{pt} H_0 R_T$$\n该方程可以使用积分因子或分离变量法求解。我们定义一个表观一级速率常数 $k_{obs} = k_{pt} H_0 + k_{dp}$。方程变为：\n$$\\frac{dR_P}{dt} = k_{pt} H_0 R_T - k_{obs} R_P$$\n分离变量得到：\n$$\\frac{dR_P}{k_{pt} H_0 R_T - k_{obs} R_P} = dt$$\n对两边进行积分，时间从 $t=0$ 到 $t$，浓度从 $R_P(0)$ 到 $R_P(t)$：\n$$\\int_{R_P(0)}^{R_P(t)} \\frac{d\\mathcal{R}_P}{k_{pt} H_0 R_T - k_{obs} \\mathcal{R}_P} = \\int_0^t d\\tau$$\n$$\\left[ -\\frac{1}{k_{obs}} \\ln(k_{pt} H_0 R_T - k_{obs} \\mathcal{R}_P) \\right]_{R_P(0)}^{R_P(t)} = t$$\n给定初始条件 $R_P(0) = 0$，这可简化为：\n$$-\\frac{1}{k_{obs}} \\left( \\ln(k_{pt} H_0 R_T - k_{obs} R_P(t)) - \\ln(k_{pt} H_0 R_T) \\right) = t$$\n$$\\ln\\left(\\frac{k_{pt} H_0 R_T - k_{obs} R_P(t)}{k_{pt} H_0 R_T}\\right) = -k_{obs} t$$\n求解 $R_P(t)$：\n$$1 - \\frac{k_{obs} R_P(t)}{k_{pt} H_0 R_T} = e^{-k_{obs} t}$$\n$$R_P(t) = \\frac{k_{pt} H_0 R_T}{k_{obs}}(1 - e^{-k_{obs} t})$$\n将 $k_{obs} = k_{pt} H_0 + k_{dp}$ 代回，我们得到最终的可计算模型 $f(t; k_{pt}, k_{dp}, H_0, R_T)$：\n$$R_P(t) = \\frac{k_{pt} H_0 R_T}{k_{pt} H_0 + k_{dp}}(1 - e^{-(k_{pt} H_0 + k_{dp})t})$$\n至此完成第二项任务。\n\n第三，我们通过最小化观测数据点 $(t_i, R_{P,i}^{\\text{obs}})$ 与模型预测值之间的残差平方和 (SSR) 来估计参数 $(k_{pt}, k_{dp})$。需要最小化的目标函数是：\n$$SSR(k_{pt}, k_{dp}) = \\sum_{i=1}^{N} \\left( R_{P,i}^{\\text{obs}} - R_P(t_i; k_{pt}, k_{dp}, H_0, R_T) \\right)^2$$\n其中 $N$ 是数据点的数量。这是一个非线性最小二乘法 (NLLS) 问题。拟合过程使用 `scipy.optimize.curve_fit` 函数进行计算，并施加边界条件以确保速率常数必须为非负的物理约束，即 $k_{pt} \\ge 0$ 且 $k_{dp} \\ge 0$。\n\n第四，我们计算估计参数的置信区间。根据NLLS的渐近理论，参数估计值 $\\boldsymbol{p} = [k_{pt}, k_{dp}]^T$ 的协方差矩阵可以近似为：\n$$\\boldsymbol{C} \\approx \\hat{\\sigma}^2 (\\boldsymbol{J}^T \\boldsymbol{J})^{-1}$$\n这里，$\\boldsymbol{J}$ 是模型函数关于参数的雅可比矩阵，在最优参数值处进行评估。其元素为 $J_{ij} = \\frac{\\partial R_P(t_i)}{\\partial p_j}$。项 $\\hat{\\sigma}^2$ 是测量误差的估计方差，由最小残差平方和 ($SSR_{min}$) 计算得出，公式为 $\\hat{\\sigma}^2 = \\frac{SSR_{min}}{N-P}$，其中 $P=2$ 是拟合参数的数量。参数 $p_j$ 估计的方差是 $\\boldsymbol{C}$ 的第 $j$ 个对角元素，即 $\\sigma^2_{p_j} = C_{jj}$。标准误为 $SE(p_j) = \\sqrt{C_{jj}}$。`curve_fit` 函数直接提供估计的协方差矩阵 $\\boldsymbol{C}$。\n\n然后，使用学生t分布为每个参数 $p_j$ 构建 $95\\%$ 置信区间：\n$$p_j \\pm t_{1-\\alpha/2, \\nu} \\cdot SE(p_j)$$\n其中显著性水平 $\\alpha=0.05$，自由度为 $\\nu = N-P$。临界值 $t_{0.975, \\nu}$ 从对应于每个测试案例自由度的t分布中获得。\n\n该过程用 Python 实现。对于每个测试案例，将模型拟合到数据以找到最优的 $k_{pt}$ 和 $k_{dp}$。然后，利用返回的协方差矩阵和适当的t统计量，计算两个参数 $95\\%$ 置信区间的下限和上限。最终的数值结果按要求四舍五入到 $6$ 位小数。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import curve_fit\nfrom scipy.stats import t\n\ndef solve():\n    \"\"\"\n    Derives a kinetic model for a two-component system, fits it to data,\n    and calculates parameter confidence intervals.\n    \"\"\"\n    # Define the problem test cases with all necessary data and constants.\n    test_cases = [\n        {\n            \"H0\": 2.0, \"RT\": 10.0,\n            \"t\": np.array([0, 5, 10, 20, 40, 80, 120]),\n            \"Rp_obs\": np.array([0.00, 3.85, 6.25, 8.30, 9.42, 9.50, 9.53]),\n            \"p0\": [0.05, 0.005]  # Initial guess for [k_pt, k_dp]\n        },\n        {\n            \"H0\": 0.5, \"RT\": 10.0,\n            \"t\": np.array([0, 10, 20, 50, 100, 200]),\n            \"Rp_obs\": np.array([0.00, 2.50, 4.20, 6.46, 7.35, 7.49]),\n            \"p0\": [0.07, 0.01]\n        },\n        {\n            \"H0\": 1.0, \"RT\": 5.0,\n            \"t\": np.array([0, 1, 2, 5, 10, 20, 40]),\n            \"Rp_obs\": np.array([0.00, 0.090, 0.160, 0.300, 0.405, 0.448, 0.454]),\n            \"p0\": [0.02, 0.2]\n        }\n    ]\n\n    all_results = []\n\n    for case in test_cases:\n        H0 = case[\"H0\"]\n        RT = case[\"RT\"]\n        t_data = case[\"t\"]\n        Rp_data = case[\"Rp_obs\"]\n        p0 = case[\"p0\"]\n\n        # Define the kinetic model derived from the ODE.\n        # This function will be passed to curve_fit.\n        def kinetic_model(t_points, k_pt, k_dp):\n            k_obs = k_pt * H0 + k_dp\n            # Handle the edge case where k_obs is zero to avoid division by zero.\n            if k_obs == 0:\n                return np.zeros_like(t_points)\n            \n            Rp_max = (k_pt * H0 * RT) / k_obs\n            return Rp_max * (1.0 - np.exp(-k_obs * t_points))\n\n        # Perform nonlinear least squares fitting using scipy.optimize.curve_fit.\n        # Bounds are set to [0, inf) to ensure physical non-negativity of rate constants.\n        popt, pcov = curve_fit(\n            kinetic_model,\n            t_data,\n            Rp_data,\n            p0=p0,\n            bounds=([0, 0], [np.inf, np.inf])\n        )\n        \n        k_pt_fit, k_dp_fit = popt\n\n        # Calculate 95% confidence intervals for the fitted parameters.\n        N = len(t_data)  # Number of data points\n        P = len(popt)    # Number of parameters\n        dof = N - P      # Degrees of freedom\n\n        # Standard errors of the parameters are the square root of the diagonal of the covariance matrix.\n        perr = np.sqrt(np.diag(pcov))\n        se_k_pt, se_k_dp = perr\n        \n        # Calculate the t-statistic for a 95% confidence interval.\n        alpha = 0.05\n        t_stat = t.ppf(1.0 - alpha / 2.0, dof)\n\n        # Calculate the confidence interval for k_pt.\n        k_pt_low = k_pt_fit - t_stat * se_k_pt\n        k_pt_high = k_pt_fit + t_stat * se_k_pt\n\n        # Calculate the confidence interval for k_dp.\n        k_dp_low = k_dp_fit - t_stat * se_k_dp\n        k_dp_high = k_dp_fit + t_stat * se_k_dp\n\n        # Store the results for the current case.\n        all_results.append([\n            k_pt_fit, k_dp_fit,\n            k_pt_low, k_pt_high,\n            k_dp_low, k_dp_high\n        ])\n\n    # Format the final output string according to the specified format.\n    # Each inner list represents a test case. All values rounded to 6 decimal places.\n    list_strs = [f\"[{','.join(f'{val:.6f}' for val in row)}]\" for row in all_results]\n    final_output = f\"[{','.join(list_strs)}]\"\n\n    print(final_output)\n\nsolve()\n```", "id": "2786294"}]}