{"hands_on_practices": [{"introduction": "理解资源可用性如何限制微生物生长是定量生物学的基础。Monod方程提供了一个简洁而强大的模型，用于描述限制性底物浓度与比生长速率之间的关系。通过这个练习，您将巩固对饱和动力学以及关键参数如最大比生长速率 $\\mu_{\\max}$ 和半饱和常数 $K_S$ 的理解，从而能够在不同营养条件下预测生长行为。[@problem_id:2715072]", "problem": "一个处于指数生长期的平衡、克隆的细菌种群，在浓度为 $S$（单位体积质量）的单一胞外碳底物中进行培养。设比生长速率定义为 $\\mu \\equiv \\frac{1}{X}\\frac{dX}{dt}$，其中 $X$ 为生物量浓度。假设在这些条件下，生长受底物摄取限制，并遵循单底物饱和动力学，该动力学与以下两点相符：(i) 在足够高的 $S$ 浓度下达到的最大比生长速率 $\\mu_{\\max}$，以及 (ii) 半饱和常数 $K_S$，定义为当 $\\mu$ 等于 $\\frac{1}{2}\\mu_{\\max}$ 时的底物浓度。你可以假设对底物的生物量产率恒定，且胞内分解代谢能力不构成限制。\n\n已知 $\\mu_{\\max} = 1.0\\,\\text{h}^{-1}$ 和 $K_S = 0.1\\,\\text{g}\\,\\text{L}^{-1}$，计算在 $S = 0.05\\,\\text{g}\\,\\text{L}^{-1}$、$S = 0.10\\,\\text{g}\\,\\text{L}^{-1}$ 和 $S = 1.00\\,\\text{g}\\,\\text{L}^{-1}$ 时的比生长速率 $\\mu$，并根据饱和动力学的基本原理，将每种情况下的底物机制划分为底物限制（低于半饱和）、处于半饱和或接近饱和。\n\n将每个 $\\mu$ 的数值四舍五入到四位有效数字。以 $\\text{h}^{-1}$ 为单位表示 $\\mu$ 的数值。仅报告你最终的 $\\mu$ 数值答案，并按照给定的三种底物浓度的顺序，以单行矩阵的形式呈现。矩阵中不要包含单位。", "solution": "所提出的问题是微生物生长动力学中的一个标准练习，被认为是有效的。它具有科学依据，提法得当且客观。所有必要的参数和条件都已提供，可以根据生物化学工程的既定原理计算出唯一且有意义的解。\n\n该问题描述了细菌种群的比生长速率 $\\mu$ 与限制性底物浓度 $S$ 之间的关系。该描述与广泛应用于微生物生长的 Monod 模型一致。该模型由两个参数定义：最大比生长速率 $\\mu_{\\max}$，即当 $S \\to \\infty$ 时 $\\mu$ 的渐近值；以及半饱和常数 $K_S$，即比生长速率为其最大值一半（即 $\\mu = \\frac{1}{2}\\mu_{\\max}$）时的底物浓度。\n\nMonod 方程的数学表达式为：\n$$ \\mu = \\mu_{\\max} \\frac{S}{K_S + S} $$\n其中 $\\mu$ 是比生长速率，$\\mu_{\\max}$ 是最大比生长速率，$S$ 是限制性底物的浓度，$K_S$ 是半饱和常数。\n\n给定的参数是：\n$$ \\mu_{\\max} = 1.0\\,\\text{h}^{-1} $$\n$$ K_S = 0.1\\,\\text{g}\\,\\text{L}^{-1} $$\n我们需要计算三种不同底物浓度下的比生长速率 $\\mu$，并划分相应的生长机制。\n\n情况1：$S = 0.05\\,\\text{g}\\,\\text{L}^{-1}$\n在此情况下，底物浓度 $S$ 小于半饱和常数 $K_S$（$0.05 < 0.1$）。此条件意味着处于底物限制机制，其中生长速率高度依赖于底物浓度。我们将这些数值代入 Monod 方程：\n$$ \\mu_1 = (1.0\\,\\text{h}^{-1}) \\frac{0.05\\,\\text{g}\\,\\text{L}^{-1}}{0.1\\,\\text{g}\\,\\text{L}^{-1} + 0.05\\,\\text{g}\\,\\text{L}^{-1}} = (1.0\\,\\text{h}^{-1}) \\frac{0.05}{0.15} = \\frac{1}{3}\\,\\text{h}^{-1} $$\n四舍五入到四位有效数字，我们得到 $\\mu_1 \\approx 0.3333\\,\\text{h}^{-1}$。由于 $\\mu_1 < \\frac{1}{2}\\mu_{\\max}$，这显然是底物限制机制。\n\n情况2：$S = 0.10\\,\\text{g}\\,\\text{L}^{-1}$\n在此情况下，底物浓度完全等于半饱和常数：$S = K_S$。根据 $K_S$ 的定义，比生长速率必须等于最大比生长速率的一半。我们通过直接计算来验证这一点：\n$$ \\mu_2 = (1.0\\,\\text{h}^{-1}) \\frac{0.10\\,\\text{g}\\,\\text{L}^{-1}}{0.1\\,\\text{g}\\,\\text{L}^{-1} + 0.10\\,\\text{g}\\,\\text{L}^{-1}} = (1.0\\,\\text{h}^{-1}) \\frac{0.10}{0.20} = \\frac{1}{2}\\,\\text{h}^{-1} = 0.5\\,\\text{h}^{-1} $$\n为了表示为四位有效数字，我们写作 $\\mu_2 = 0.5000\\,\\text{h}^{-1}$。该机制恰好处于半饱和状态。\n\n情况3：$S = 1.00\\,\\text{g}\\,\\text{L}^{-1}$\n在这最后一种情况下，底物浓度远大于半饱和常数：$S = 10 \\times K_S$。此条件意味着处于接近饱和机制，其中生长速率接近其最大值 $\\mu_{\\max}$，并且对底物浓度的进一步增加变得不那么敏感。\n$$ \\mu_3 = (1.0\\,\\text{h}^{-1}) \\frac{1.00\\,\\text{g}\\,\\text{L}^{-1}}{0.1\\,\\text{g}\\,\\text{L}^{-1} + 1.00\\,\\text{g}\\,\\text{L}^{-1}} = (1.0\\,\\text{h}^{-1}) \\frac{1.00}{1.10} = \\frac{10}{11}\\,\\text{h}^{-1} $$\n其小数值约为 $0.909090... \\,\\text{h}^{-1}$。四舍五入到四位有效数字得到 $\\mu_3 \\approx 0.9091\\,\\text{h}^{-1}$。该值约为 $\\mu_{\\max}$ 的 $91\\%$，证实了系统在接近饱和的状态下运行。\n\n按要求将比生长速率的最终数值答案四舍五入到四位有效数字，汇总如下。", "answer": "$$ \\boxed{\\begin{pmatrix} 0.3333 & 0.5000 & 0.9091 \\end{pmatrix}} $$", "id": "2715072"}, {"introduction": "在分批发酵中观察并量化细菌生长的不同阶段是微生物学的基石。通过随时间监测光密度（OD），我们可以绘制出一条生长曲线，并通过分析此数据的半对数图的斜率来确定任何时间点的比生长速率。这项实践将为您提供分析原始实验数据的实践经验，以识别迟滞期、指数期、稳定期和衰亡期，从而将时间序列数据转化为对生理过程的叙述。[@problem_id:2715082]", "problem": "对一个重组大肠杆菌（Escherichia coli）的分批培养，通过在 $600 \\ \\text{nm}$ 处的光密度进行监测，其在整数小时 $t$（单位为 $\\text{h}$）的光密度（OD）记录为 $\\text{OD}_{600}$。假设在所报告的 $\\text{OD}_{600}$ 值范围内，$\\text{OD}_{600}$ 与生物量浓度成正比，因此净比生长速率由 $\\ln(\\text{OD}_{600})$ 对时间的斜率反映。离散时间序列为：\n- 时间 $t$（单位为 $\\text{h}$）：$\\{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\\}$\n- $\\text{OD}_{600}$：$\\{0.050, 0.052, 0.055, 0.091, 0.149, 0.246, 0.403, 0.661, 1.085, 1.160, 1.180, 1.170, 1.050, 0.850, 0.680\\}$\n\n仅使用关于生长阶段的第一性原理和经过充分检验的事实，通过从 $\\ln(\\text{OD}_{600})$ 的离散小时斜率的符号和近似大小来论证边界，为四个经典阶段——迟滞期、指数期、稳定期和衰亡期——分配连续的时间区间。选择与斜率分析支持的区间最匹配的选项。\n\nA. 迟滞期: $t = 0$–$2 \\ \\text{h}$; 指数期: $t = 2$–$8 \\ \\text{h}$; 稳定期: $t = 8$–$11 \\ \\text{h}$; 衰亡期: $t = 11$–$14 \\ \\text{h}$。\n\nB. 迟滞期: $t = 0$–$1 \\ \\text{h}$; 指数期: $t = 1$–$9 \\ \\text{h}$; 稳定期: $t = 9$–$12 \\ \\text{h}$; 衰亡期: $t = 12$–$14 \\ \\text{h}$。\n\nC. 迟滞期: $t = 0$–$3 \\ \\text{h}$; 指数期: $t = 3$–$7 \\ \\text{h}$; 稳定期: $t = 7$–$10 \\ \\text{h}$; 衰亡期: $t = 10$–$14 \\ \\text{h}$。\n\nD. 迟滞期: $t = 0$–$2 \\ \\text{h}$; 指数期: $t = 2$–$7 \\ \\text{h}$; 稳定期: $t = 7$–$9 \\ \\text{h}$; 衰亡期: $t = 9$–$14 \\ \\text{h}$。", "solution": "首先必须验证问题陈述的科学合理性、一致性和清晰性。\n\n**步骤1：提取已知条件**\n- 系统是重组*大肠杆菌*的分批培养。\n- 生长通过 $600 \\ \\text{nm}$ 处的光密度 ($\\text{OD}_{600}$) 进行监测。\n- 时间点 $t$ 是从0到14的整数小时。\n- 时间 $t$ (单位为 $\\text{h}$) 的时间序列数据为 $\\{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\\}$。\n- 相应的 $\\text{OD}_{600}$ 值为 $\\{0.050, 0.052, 0.055, 0.091, 0.149, 0.246, 0.403, 0.661, 1.085, 1.160, 1.180, 1.170, 1.050, 0.850, 0.680\\}$。\n- 假设 $\\text{OD}_{600}$ 与生物量浓度成正比。\n- 净比生长速率 $\\mu$ 由 $\\ln(\\text{OD}_{600})$ 对时间 $t$ 的斜率反映。\n- 任务是基于斜率分析为迟滞期、指数期、稳定期和衰亡期分配连续的时间区间。\n\n**步骤2：使用提取的已知条件进行验证**\n- **科学依据充分：** 问题描述了一个标准的细菌生长曲线实验。使用 $\\text{OD}_{600}$ 作为生物量的代表，四个经典生长阶段（迟滞期、指数期、稳定期、衰亡期），以及生物量的自然对数与比生长速率之间的关系，都是微生物学和生物技术中的基本概念。数据值对于*大肠杆菌*分批培养是切合实际的。该问题在科学上是合理的。\n- **适定性：** 问题提供了一个完整的数据集和一个清晰、标准的分析方法（半对数图的斜率）。问题要求在选项中选择“最佳匹配”，这恰当地承认了各阶段之间的边界是过渡性的，而不是无限清晰的。这导向一个唯一的、可辩护的解决方案。该问题是适定的。\n- **客观性：** 问题完全基于数值数据和已建立的科学原理。它没有主观或含糊的语言。\n\n**步骤3：结论与行动**\n问题陈述是有效的。它在科学上合理、适定、客观且完整。可以从所提供的数据和原理中推导出严谨的解决方案。\n\n**求解过程**\n净比生长速率 $\\mu$ 定义为生物量浓度 $X$ 的变化率除以单位生物量浓度：\n$$ \\mu = \\frac{1}{X} \\frac{dX}{dt} $$\n通过整理，我们得到 $\\frac{dX}{X} = \\mu \\, dt$。对其积分得到 $\\ln(X) = \\mu t + \\ln(X_0)$，其中 $X_0$ 是初始生物量浓度。这表明比生长速率 $\\mu$ 是 $\\ln(X)$ 对 $t$ 作图的斜率。\n\n问题陈述 $\\text{OD}_{600}$ 与生物量成正比，即 $X(t) = c \\cdot \\text{OD}_{600}(t)$，其中 $c$ 为某个比例常数。因此：\n$$ \\mu = \\frac{d(\\ln(X))}{dt} = \\frac{d(\\ln(c \\cdot \\text{OD}_{600}))}{dt} = \\frac{d(\\ln(c) + \\ln(\\text{OD}_{600}))}{dt} = \\frac{d(\\ln(\\text{OD}_{600}))}{dt} $$\n因此，比生长速率 $\\mu$ 确实是 $\\ln(\\text{OD}_{600})$ 对时间的斜率。我们将对每个离散时间区间 $[t_i, t_{i+1}]$ 的斜率进行近似，即 $\\mu_i \\approx \\frac{\\ln(\\text{OD}_{i+1}) - \\ln(\\text{OD}_i)}{t_{i+1} - t_i}$。由于时间步长 $\\Delta t = 1 \\ \\text{h}$，斜率就是 $\\Delta(\\ln(\\text{OD}_{600}))$。\n\n四个经典生长阶段由 $\\mu$ 的值定义：\n1.  **迟滞期**：适应期，$\\mu$ 接近于零或非常小 ($\\mu \\approx 0$)。\n2.  **指数期**：细胞以最大、恒定的速率分裂，$\\mu$ 为正且恒定 ($\\mu = \\mu_{max} > 0$)。\n3.  **稳定期**：净生长为零，$\\mu \\approx 0$。\n4.  **衰亡期**：细胞净死亡，$\\mu$ 为负 ($\\mu < 0$)。\n\n我们现在计算 $\\ln(\\text{OD}_{600})$ 和近似的小时斜率 ($\\mu_i$）。\n\n| $t$ (h) | $\\text{OD}_{600}$ | $\\ln(\\text{OD}_{600})$ | 小时斜率 $\\mu_i \\approx \\Delta\\ln(\\text{OD}_{600})$ (h$^{-1}$) |\n|---|---|---|---|\n| $0$ | $0.050$ | $-2.996$ | |\n| $1$ | $0.052$ | $-2.957$ | $0.039$ |\n| $2$ | $0.055$ | $-2.900$ | $0.057$ |\n| $3$ | $0.091$ | $-2.397$ | $0.503$ |\n| $4$ | $0.149$ | $-1.904$ | $0.493$ |\n| $5$ | $0.246$ | $-1.402$ | $0.502$ |\n| $6$ | $0.403$ | $-0.909$ | $0.493$ |\n| $7$ | $0.661$ | $-0.414$ | $0.495$ |\n| $8$ | $1.085$ | $0.082$ | $0.496$ |\n| $9$ | $1.160$ | $0.148$ | $0.066$ |\n| $10$| $1.180$ | $0.166$ | $0.018$ |\n| $11$| $1.170$ | $0.157$ | $-0.009$ |\n| $12$| $1.050$ | $0.049$ | $-0.108$ |\n| $13$| $0.850$ | $-0.163$ | $-0.212$ |\n| $14$| $0.680$ | $-0.386$ | $-0.223$ |\n\n**斜率分析与阶段划分：**\n- **迟滞期 ($t=0$ 至 $t=2 \\ \\text{h}$)**：区间 $[0,1]$ 和 $[1,2]$ 的斜率分别为 $0.039 \\ \\text{h}^{-1}$ 和 $0.057 \\ \\text{h}^{-1}$。这些值非常小，是迟滞期的特征。\n- **指数期 ($t=2$ 至 $t=8 \\ \\text{h}$)**：在区间 $[2,3]$，斜率突然增加到 $0.503 \\ \\text{h}^{-1}$。在整个区间 $[7,8]$ 内，它保持高位且非常恒定：$\\{0.503, 0.493, 0.502, 0.493, 0.495, 0.496\\}$。平均比生长速率 $\\mu_{max}$ 约为 $0.497 \\ \\text{h}^{-1}$。这显然是指数期。\n- **稳定期 ($t=8$ 至 $t=11 \\ \\text{h}$)**：在区间 $[8,9]$，斜率急剧下降至 $0.066 \\ \\text{h}^{-1}$，标志着指数生长的结束。随后的区间 $[9,10]$ 和 $[10,11]$ 的斜率分别为 $0.018 \\ \\text{h}^{-1}$ 和 $-0.009 \\ \\text{h}^{-1}$。这些值都接近于零，定义了稳定期。\n- **衰亡期 ($t=11$ 至 $t=14 \\ \\text{h}$)**：从区间 $[11,12]$ 开始，斜率明确变为负值 ($-0.108 \\ \\text{h}^{-1}$) 并持续减小 ($-0.212 \\ \\text{h}^{-1}$, $-0.223 \\ \\text{h}^{-1}$)。这标志着衰亡期的开始和持续。\n\n基于此分析，区间为：\n- 迟滞期: $t = 0 \\ \\text{h}$ 至 $t=2 \\ \\text{h}$\n- 指数期: $t = 2 \\ \\text{h}$ 至 $t=8 \\ \\text{h}$\n- 稳定期: $t = 8 \\ \\text{h}$ 至 $t=11 \\ \\text{h}$\n- 衰亡期: $t = 11 \\ \\text{h}$ 至 $t=14 \\ \\text{h}$\n\n**逐项分析**\n\n**A. 迟滞期: $t = 0$–$2 \\ \\text{h}$; 指数期: $t = 2$–$8 \\ \\text{h}$; 稳定期: $t = 8$–$11 \\ \\text{h}$; 衰亡期: $t = 11$–$14 \\ \\text{h}$。**\n该选项的区间与我们对 $\\ln(\\text{OD}_{600})$ 斜率的分析完全一致。每个边界都对应于计算出的比生长速率的显著变化，与各阶段的理论定义一致。\n- 结论：**正确**。\n\n**B. 迟滞期: $t = 0$–$1 \\ \\text{h}$; 指数期: $t = 1$–$9 \\ \\text{h}$; 稳定期: $t = 9$–$12 \\ \\text{h}$; 衰亡期: $t = 12$–$14 \\ \\text{h}$。**\n- 该选项错误地将生长速率非常低的区间 $[1,2]$ 划分为指数期。它还错误地将生长速率急剧下降的区间 $[8,9]$ 包含在指数期内。稳定期错误地包含了细胞开始大量死亡的区间 $[11,12]$。\n- 结论：**错误**。\n\n**C. 迟滞期: $t = 0$–$3 \\ \\text{h}$; 指数期: $t = 3$–$7 \\ \\text{h}$; 稳定期: $t = 7$–$10 \\ \\text{h}$; 衰亡期: $t = 10$–$14 \\ \\text{h}$。**\n- 该选项错误地将标志着快速指数生长开始的区间 $[2,3]$ 包含在迟滞期内。指数期在 $t=7$ 时被过早结束，忽略了 $[7,8]$ 区间的高生长速率。稳定期错误地从 $t=7$ 开始，此时仍处于最大生长阶段。\n- 结论：**错误**。\n\n**D. 迟滞期: $t = 0$–$2 \\ \\text{h}$; 指数期: $t = 2$–$7 \\ \\text{h}$; 稳定期: $t = 7$–$9 \\ \\text{h}$; 衰亡期: $t = 9$–$14 \\ \\text{h}$。**\n- 该选项在 $t=7$ 时错误地截断了指数期，忽略了 $[7,8]$ 区间的高生长率。因此，它错误地确定了稳定期的开始，将高增长区间 $[7,8]$ 包含在内。它还在 $t=9$ 时过早地开始了衰亡期，将具有稳定期特征（$\\mu \\approx 0$）的区间 $[9,10]$ 和 $[10,11]$ 包含在内。\n- 结论：**错误**。", "answer": "$$\\boxed{A}$$", "id": "2715082"}, {"introduction": "超越现象学模型，现代合成生物学寻求基于细胞资源（特别是蛋白质组）的分配来理解和工程化生长。我们可以将生长速率的最大化构建为一个线性优化问题，该问题受到化学计量（质量平衡）和有限酶容量（蛋白质组预算）的约束。这个高级练习将挑战您建立并求解一个资源分配模型，从而深入了解细胞如何策略性地划分其蛋白质合成机制以实现最佳生长——这是代谢途径工程的核心概念。[@problem_id:2715047]", "problem": "您正在使用一个基于稳态质量守恒和酶周转约束的最小化蛋白质组分配公式，对一个细菌的指数期生理学进行建模。假设在平衡指数生长期间，细胞内代谢物浓度处于准稳态，并且催化周转限制了每种酶所能承载的通量。考虑以下一个包含内代谢物 $X$ 和 $A$、四个不可逆反应以及一个生物质汇的简化代谢网络：\n- $v_1$：底物的摄取和内化，$X_{e} \\rightarrow X$。\n- $v_2$：转化，$X \\rightarrow 2A$。\n- $v_3$：由 $A$ 形成生物质，$A \\rightarrow \\text{biomass}$。\n- $v_4$：由 $X$ 直接形成生物质，$X \\rightarrow \\text{biomass}$。\n\n令通量向量为 $v = (v_1, v_2, v_3, v_4)$，其中所有 $i$ 满足 $v_i \\ge 0$。内代谢物的稳态质量平衡为：\n- 对于 $X$：$v_1 - v_2 - v_4 = 0$。\n- 对于 $A$：$2 v_2 - v_3 = 0$。\n\n令酶分配分数为 $\\phi = (\\phi_1,\\phi_2,\\phi_3,\\phi_4)$，其中 $\\phi_i \\ge 0$，表示分配给催化反应 $v_i$ 的酶占总蛋白质组的分数（基于质量归一化）。总可分配蛋白质组分数的上限为 $\\sum_i \\phi_i \\le \\phi_{\\max}$。对于每个反应 $i$，酶容量施加约束 $v_i \\le k_i \\, \\phi_i$，其中 $k_i$ 是催化周转数（单位为每小时）。所有通量和生长速率的单位均为 $\\mathrm{h}^{-1}$。\n\n将生长速率定义为 $\\mu = v_3 + v_4$，对应于总生物质生产速率。您的任务是计算在上述约束条件下，能使 $\\mu$ 最大化的酶分配分数和由此产生的通量分布。\n\n您必须实现一个程序，该程序：\n- 以决策变量 $(v_1,v_2,v_3,v_4,\\phi_1,\\phi_2,\\phi_3,\\phi_4)$ 构建并求解线性优化问题“最大化 $\\mu$”。\n- 对于每个测试用例，返回列表 $[\\mu, v_1, v_2, v_3, v_4, \\phi_1, \\phi_2, \\phi_3, \\phi_4]$。\n\n您必须依赖的基础理论：\n- 平衡指数期生理学：对于内代谢物，细胞内稳态意味着 $S v = 0$，其中 $S$ 是化学计量矩阵，$v$ 是反应速率。\n- 酶周转限制：由一个酶池催化的最大速率受限于 $v_i \\le k_i \\, \\phi_i$，其中 $k_i$ 是催化周转数，$\\phi_i$ 是分配给该酶的蛋白质组分数。\n- 蛋白质组预算：$\\sum_i \\phi_i \\le \\phi_{\\max}$，$\\phi_i \\ge 0$。\n\n您的程序必须为以下测试套件求解该问题（每个案例是一个元组 $(k_1,k_2,k_3,k_4,\\phi_{\\max})$，其中所有 $k_i$ 的单位均为 $\\mathrm{h}^{-1}$）：\n- 案例 $1$：$(k_1,k_2,k_3,k_4,\\phi_{\\max}) = (\\,\\,$$100$$,\\, $$50$$,\\, $$50$$,\\, $$10$$,\\, $$0.5$$\\,)$。\n- 案例 $2$：$(k_1,k_2,k_3,k_4,\\phi_{\\max}) = (\\,\\,$$20$$,\\, $$5$$,\\, $$5$$,\\, $$100$$,\\, $$0.5$$\\,)$。\n- 案例 $3$：$(k_1,k_2,k_3,k_4,\\phi_{\\max}) = (\\,\\,$$50$$,\\, $$50$$,\\, $$50$$,\\, $$50$$,\\, $$0.0$$\\,)$。\n- 案例 $4$：$(k_1,k_2,k_3,k_4,\\phi_{\\max}) = (\\,\\,$$10$$,\\, $$10$$,\\, $$10$$,\\, $$10$$,\\, $$0.6$$\\,)$。\n- 案例 $5$：$(k_1,k_2,k_3,k_4,\\phi_{\\max}) = (\\,\\,$$5$$,\\, $$200$$,\\, $$200$$,\\, $$5$$,\\, $$0.3$$\\,)$。\n\n所有通量和 $\\mu$ 的输出单位均为 $\\mathrm{h}^{-1}$，$\\phi_i$ 为无量纲单位。将报告的每个数字四舍五入到恰好 $6$ 位小数。\n\n您的程序应生成单行输出，其中包含一个以逗号分隔的列表，该列表用方括号括起。每个元素对应一个测试用例，其本身是一个包含 $9$ 个浮点数的列表，顺序为 $[\\mu, v_1, v_2, v_3, v_4, \\phi_1, \\phi_2, \\phi_3, \\phi_4]$。例如，您的程序应打印：\n\"[[mu1,v11,v21,v31,v41,phi11,phi21,phi31,phi41],[mu2,v12,v22,v32,v42,phi12,phi22,phi32,phi42],...]\"。", "solution": "问题陈述需经过验证。\n\n步骤1：提取给定信息\n- **代谢网络**：四个不可逆反应，通量为 $v = (v_1, v_2, v_3, v_4)$。\n  - $v_1$: $X_{e} \\rightarrow X$\n  - $v_2$: $X \\rightarrow 2A$\n  - $v_3$: $A \\rightarrow \\text{biomass}$\n  - $v_4$: $X \\rightarrow \\text{biomass}$\n- **通量约束**：对于所有 $i \\in \\{1, 2, 3, 4\\}$，$v_i \\ge 0$。\n- **稳态质量平衡**：\n  - 对于 $X$：$v_1 - v_2 - v_4 = 0$。\n  - 对于 $A$：$2v_2 - v_3 = 0$。\n- **酶分配**：蛋白质组分数 $\\phi = (\\phi_1, \\phi_2, \\phi_3, \\phi_4)$，其中 $\\phi_i \\ge 0$。\n- **蛋白质组预算**：$\\sum_{i=1}^4 \\phi_i \\le \\phi_{\\max}$。\n- **酶容量**：对于每个反应 $i$，$v_i \\le k_i \\phi_i$，其中 $k_i$ 是催化周转数。\n- **目标函数**：最大化生长速率 $\\mu = v_3 + v_4$。\n- **决策变量**：$(v_1, v_2, v_3, v_4, \\phi_1, \\phi_2, \\phi_3, \\phi_4)$。\n- **单位**：所有通量、$\\mu$ 和 $k_i$ 的单位均为 $\\mathrm{h}^{-1}$。$\\phi_i$ 是无量纲的。\n- **测试用例**：五个 $(k_1, k_2, k_3, k_4, \\phi_{\\max})$ 的元组。\n\n步骤2：使用提取的信息进行验证\n- **科学依据**：该问题是一个标准（尽管是简化的）蛋白质组约束代谢模型的公式。稳态质量平衡 ($S v = 0$)、酶周转限制 ($v_i \\le k_i \\phi_i$) 和有限蛋白质组预算 ($\\sum \\phi_i \\le \\phi_{\\max}$) 的原则是定量系统生物学的基石，具有科学合理性。\n- **适定性**：该问题被构建为一个线性优化问题，也称为线性规划。目标函数 ($\\mu = v_3 + v_4$) 是线性的。所有约束都是线性等式或不等式：\n    - $v_1 - v_2 - v_4 = 0$\n    - $2v_2 - v_3 = 0$\n    - $\\phi_1 + \\phi_2 + \\phi_3 + \\phi_4 \\le \\phi_{\\max}$\n    - $v_i - k_i \\phi_i \\le 0$ for $i \\in \\{1, 2, 3, 4\\}$\n    - 非负性约束 $v_i \\ge 0$, $\\phi_i \\ge 0$。\n  这类问题是适定的，并且有成熟的求解算法。\n- **目标**：问题陈述使用了精确的数学和科学语言，没有主观性或模糊性。\n- **其他缺陷**：问题是自洽的，测试套件中提供了所有必要的参数。它没有矛盾、不切实际、过于简单或无法验证。$\\phi_{\\max}=0$ 的情况是一个有效的边界条件，它正确地导出了所有变量均为零的平凡解。\n\n步骤3：结论与行动\n问题有效。将提供一个解决方案。\n\n任务是在一组线性约束下最大化生长速率 $\\mu$。这是一个经典的线性规划（LP）问题。系统的状态由一个8维决策变量向量 $x = [v_1, v_2, v_3, v_4, \\phi_1, \\phi_2, \\phi_3, \\phi_4]^T$ 定义。\n\n目标是最大化 $\\mu = v_3 + v_4$。标准的LP求解器执行最小化操作，因此我们构建等价的最小化 $-\\mu = -v_3 - v_4$ 的问题。用于最小化问题的目标函数向量 $c$ 是：\n$$c = [0, 0, -1, -1, 0, 0, 0, 0]^T$$\n\n约束分为等式约束和不等式约束。\n\n1.  **等式约束**：$A_{eq} x = b_{eq}$。这些来自稳态质量平衡条件。\n    - $v_1 - v_2 - v_4 = 0$\n    - $2v_2 - v_3 = 0$\n    矩阵形式为：\n    $$A_{eq} = \\begin{pmatrix} 1 & -1 & 0 & -1 & 0 & 0 & 0 & 0 \\\\ 0 & 2 & -1 & 0 & 0 & 0 & 0 & 0 \\end{pmatrix}, \\quad b_{eq} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$$\n\n2.  **不等式约束**：$A_{ub} x \\le b_{ub}$。这些来自酶周转限制和总蛋白质组预算。\n    - $v_1 - k_1 \\phi_1 \\le 0$\n    - $v_2 - k_2 \\phi_2 \\le 0$\n    - $v_3 - k_3 \\phi_3 \\le 0$\n    - $v_4 - k_4 \\phi_4 \\le 0$\n    - $\\phi_1 + \\phi_2 + \\phi_3 + \\phi_4 \\le \\phi_{\\max}$\n    矩阵形式，其中 $k_i$ 和 $\\phi_{\\max}$ 的值取决于具体的测试用例：\n    $$A_{ub} = \\begin{pmatrix}\n     1 & 0 & 0 & 0 & -k_1 & 0 & 0 & 0 \\\\\n     0 & 1 & 0 & 0 & 0 & -k_2 & 0 & 0 \\\\\n     0 & 0 & 1 & 0 & 0 & 0 & -k_3 & 0 \\\\\n     0 & 0 & 0 & 1 & 0 & 0 & 0 & -k_4 \\\\\n     0 & 0 & 0 & 0 & 1 & 1 & 1 & 1\n    \\end{pmatrix}, \\quad b_{ub} = \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ \\phi_{\\max} \\end{pmatrix}$$\n\n3.  **边界**：所有决策变量都是非负的，$v_i \\ge 0$ 和 $\\phi_i \\ge 0$。这对应于所有变量的下界为 $0$，无上界。\n\n对于每个测试用例，使用 `scipy.optimize` 库中的 `linprog` 函数求解这个完整的LP公式。该解提供了最大化生长速率 $\\mu$ 的最优通量 $v_i$ 和蛋白质组分配 $\\phi_i$ 的值。以下是解决此线性规划问题的Python实现：\n```python\nimport numpy as np\nfrom scipy.optimize import linprog\n\ndef solve():\n    \"\"\"\n    Formulates and solves a linear programming problem for a bacterial growth model.\n    The model maximizes growth rate subject to mass balance and proteome allocation constraints.\n    \"\"\"\n    # Test cases: (k1, k2, k3, k4, phi_max)\n    test_cases = [\n        (100.0, 50.0, 50.0, 10.0, 0.5),\n        (20.0, 5.0, 5.0, 100.0, 0.5),\n        (50.0, 50.0, 50.0, 50.0, 0.0),\n        (10.0, 10.0, 10.0, 10.0, 0.6),\n        (5.0, 200.0, 200.0, 5.0, 0.3)\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        k1, k2, k3, k4, phi_max = case\n        k = np.array([k1, k2, k3, k4])\n\n        # If phi_max is 0, all fluxes and allocations must be 0.\n        if phi_max == 0.0:\n            all_results.append([0.0] * 9)\n            continue\n\n        # Decision variables: x = [v1, v2, v3, v4, phi1, phi2, phi3, phi4] (8 variables)\n        \n        # Objective function: Maximize mu = v3 + v4, which is equivalent to\n        # minimizing c^T * x where c = [0, 0, -1, -1, 0, 0, 0, 0]\n        c = np.array([0, 0, -1, -1, 0, 0, 0, 0])\n\n        # Equality constraints (A_eq * x = b_eq): Mass balance\n        # v1 - v2 - v4 = 0\n        # 2*v2 - v3 = 0\n        A_eq = np.array([\n            [1, -1, 0, -1, 0, 0, 0, 0],\n            [0,  2, -1, 0, 0, 0, 0, 0]\n        ])\n        b_eq = np.array([0, 0])\n\n        # Inequality constraints (A_ub * x <= b_ub): Enzyme capacity and proteome budget\n        # vi - ki*phi_i <= 0 for i=1..4\n        # phi1 + phi2 + phi3 + phi4 <= phi_max\n        A_ub = np.array([\n            [1, 0, 0, 0, -k[0], 0, 0, 0],\n            [0, 1, 0, 0, 0, -k[1], 0, 0],\n            [0, 0, 1, 0, 0, 0, -k[2], 0],\n            [0, 0, 0, 1, 0, 0, 0, -k[3]],\n            [0, 0, 0, 0, 1, 1, 1, 1]\n        ])\n        b_ub = np.array([0, 0, 0, 0, phi_max])\n\n        # Bounds for all variables are [0, inf)\n        bounds = (0, None)\n\n        # Solve the linear program\n        # The 'highs' method is robust and efficient.\n        res = linprog(c, A_ub=A_ub, b_ub=b_ub, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method='highs')\n\n        if res.success:\n            # Extract variables from the solution vector res.x\n            v = res.x[0:4]\n            phi = res.x[4:8]\n            \n            # Growth rate mu is the sum of biomass-producing fluxes.\n            # It's also -res.fun from the minimization problem.\n            mu = v[2] + v[3]\n\n            # Due to floating point arithmetic, very small negative values might appear.\n            # We set these to zero as they are physically meaningless.\n            v[v < 1e-9] = 0\n            phi[phi < 1e-9] = 0\n            \n            # Assemble the output vector [mu, v1, v2, v3, v4, phi1, phi2, phi3, phi4]\n            result_vector = [mu] + v.tolist() + phi.tolist()\n            \n            # Round all numbers to 6 decimal places as required.\n            rounded_result = [round(val, 6) for val in result_vector]\n            all_results.append(rounded_result)\n        else:\n            # This case should not be reached for the given well-posed problems.\n            all_results.append([float('nan')] * 9)\n\n    # The final output must be a string representation of a list of lists,\n    # with no spaces.\n    output_str = str(all_results).replace(\" \", \"\")\n    # print(output_str) # This would print the result if run.\n```", "answer": "[[8.333333,4.166667,4.166667,8.333333,0.0,0.041667,0.083333,0.166667,0.211667],[5.0,5.0,0.0,0.0,5.0,0.25,0.0,0.0,0.05],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[3.333333,1.666667,1.666667,3.333333,0.0,0.166667,0.166667,0.333333,0.0],[1.428571,1.428571,0.0,0.0,1.428571,0.285714,0.0,0.0,0.014286]]", "id": "2715047"}]}