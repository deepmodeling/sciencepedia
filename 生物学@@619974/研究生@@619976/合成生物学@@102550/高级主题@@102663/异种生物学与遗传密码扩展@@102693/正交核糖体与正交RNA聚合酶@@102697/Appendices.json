{"hands_on_practices": [{"introduction": "在设计合成生物系统时，一个核心挑战是管理工程组件与宿主细胞内源分子之间的资源竞争。正交RNA聚合酶（oRNAP）的特异性并非绝对，它可能与宿主启动子发生非预期的脱靶结合，从而消耗有限的聚合酶资源。本练习 [@problem_id:2756586] 引导你使用竞争性结合平衡模型，量化oRNAP在正交启动子和宿主启动子之间的分配情况。通过这个实践，你将学会如何运用质量作用定律和解离常数来预测关键资源的分配，这是进行可靠基因回路定量设计的基础。", "problem": "一种工程菌表达一种正交RNA聚合酶 (RNAP)，该酶能识别一组设计的正交启动子，同时也对宿主启动子表现出微弱的脱靶结合。假设RNAP与启动子的结合和解离相对于其他过程是快速的，因此可以使用结合平衡来进行分析。从以下基本原理出发：\n- 分子生物学中心法则确立了转录需要RNAP与启动子脱氧核糖核酸 (DNA) 结合。\n- 在具有独立位点的1:1结合条件下，解离常数定义为 $K_{d} = [E][P]/[C]$，其中 $[E]$ 是游离RNAP浓度，$[P]$ 是游离启动子浓度，$[C]$ 是RNAP-启动子复合物浓度。\n- RNAP满足质量守恒：$E_{T} = [E] + \\sum \\text{(结合在复合物中的RNAP)}$。\n\n考虑两类启动子：总浓度为 $P_{T}^{(h)}$ 的宿主启动子和总浓度为 $P_{T}^{(o)}$ 的正交启动子。该正交RNAP对宿主启动子和正交启动子的解离常数分别为 $K_{d}^{(h)}$ 和 $K_{d}^{(o)}$。假设每个启动子只有一个结合位点，且启动子之间没有协同性或空间耦合。利用上述基本关系，推导RNAP在宿主启动子和正交启动子之间的稳态分配，并计算与启动子结合的总RNAP中，结合到正交启动子上的部分所占的比例，\n$$\nf_{o} = \\frac{C_{o}}{C_{h} + C_{o}},\n$$\n其中 $C_{o}$ 和 $C_{h}$ 分别是与正交启动子和宿主启动子结合的RNAP的稳态浓度。\n\n使用以下实验上合理的参数（所有浓度单位均为纳摩尔，nM）：总RNAP浓度 $E_{T} = 200$，正交启动子总浓度 $P_{T}^{(o)} = 50$，宿主启动子总浓度 $P_{T}^{(h)} = 500$，解离常数 $K_{d}^{(o)} = 10$，$K_{d}^{(h)} = 200$。将你计算的 $f_{o}$ 最终答案表示为小数，并四舍五入到四位有效数字。", "solution": "对问题陈述进行验证。\n\n步骤1：提取已知条件。\n- 一种带有正交RNA聚合酶 (RNAP) 的工程菌。\n- 该RNAP与正交启动子结合，并对宿主启动子有脱靶结合。\n- 假设：结合和解离是快速的，允许进行平衡分析。\n- 基本原理：转录需要RNAP与启动子DNA结合。\n- 1:1结合的解离常数定义：$K_{d} = [E][P]/[C]$，其中 $[E]$ 为游离RNAP，$[P]$ 为游离启动子，$[C]$ 为复合物浓度。\n- RNAP质量守恒：$E_{T} = [E] + \\sum \\text{(结合在复合物中的RNAP)}$。\n- 两类启动子：宿主 ($P_{T}^{(h)}$) 和正交 ($P_{T}^{(o)}$)。\n- 正交RNAP的解离常数：$K_{d}^{(h)}$ 对应宿主启动子，$K_{d}^{(o)}$ 对应正交启动子。\n- 假设：每个启动子只有一个结合位点，无协同性，无空间耦合。\n- 目标：计算与启动子结合的总RNAP中结合到正交启动子上的比例，$f_{o} = \\frac{C_{o}}{C_{h} + C_{o}}$。\n- 参数：$E_{T} = 200 \\text{ nM}$，$P_{T}^{(o)} = 50 \\text{ nM}$，$P_{T}^{(h)} = 500 \\text{ nM}$，$K_{d}^{(o)} = 10 \\text{ nM}$，$K_{d}^{(h)} = 200 \\text{ nM}$。\n- 最终答案：四舍五入至四位有效数字的小数。\n\n步骤2：使用提取的已知条件进行验证。\n- 该问题具有科学依据。它利用了生物化学动力学的标准原理，特别是竞争性结合平衡，这种平衡由解离常数和质量守恒定律决定。正交生物组分的背景是现代合成生物学中一个标准且重要的话题。\n- 该问题提法明确。它提供了一套完整的定义、方程和数值参数，足以推导出所求量的唯一解。\n- 该问题是客观的。其语言技术性强、精确，没有主观或含糊不清的陈述。\n- 该问题不违反任何无效标准。它在事实上是合理的，可形式化的，完整的，并且内部一致的。\n\n步骤3：结论与行动。\n该问题被判定为有效。将推导解答。\n\n该系统由单个配体（正交RNAP，我们记为E）的两个竞争性结合平衡组成。两种启动子分别是宿主启动子 (h) 和正交启动子 (o)。我们已知RNAP的总浓度 ($E_T$)、宿主启动子的总浓度 ($P_T^{(h)}$) 和正交启动子的总浓度 ($P_T^{(o)}$)，以及RNAP与每种启动子结合的解离常数 ($K_d^{(h)}$ 和 $K_d^{(o)}$)。\n\n设 $[E]$ 为游离RNAP的浓度。设 $C_h$ 和 $C_o$ 分别为与宿主启动子和正交启动子结合的RNAP的浓度。结合平衡由解离常数描述：\n$$K_{d}^{(h)} = \\frac{[E][P_h]}{C_h} \\quad (1)$$\n$$K_{d}^{(o)} = \\frac{[E][P_o]}{C_o} \\quad (2)$$\n其中 $[P_h]$ 和 $[P_o]$ 是游离的宿主启动子和正交启动子的浓度。\n\n质量守恒提供了以下关系：\n对于RNAP：\n$$E_T = [E] + C_h + C_o \\quad (3)$$\n对于宿主启动子：\n$$P_T^{(h)} = [P_h] + C_h \\quad (4)$$\n对于正交启动子：\n$$P_T^{(o)} = [P_o] + C_o \\quad (5)$$\n\n我们可以将结合复合物的浓度 $C_h$ 和 $C_o$ 表示为游离RNAP浓度 $[E]$ 的函数。根据方程(4)，我们有 $[P_h] = P_T^{(h)} - C_h$。将其代入方程(1)：\n$$K_{d}^{(h)} = \\frac{[E](P_T^{(h)} - C_h)}{C_h}$$\n重新整理以求解 $C_h$：\n$$K_{d}^{(h)}C_h = [E]P_T^{(h)} - [E]C_h$$\n$$C_h(K_{d}^{(h)} + [E]) = [E]P_T^{(h)}$$\n$$C_h = \\frac{P_T^{(h)}[E]}{K_{d}^{(h)} + [E]} \\quad (6)$$\n这是宿主启动子的Langmuir结合等温线。\n\n通过对正交启动子进行相同的推导：\n$$C_o = \\frac{P_T^{(o)}[E]}{K_{d}^{(o)} + [E]} \\quad (7)$$\n\n为了求出 $[E]$ 的值，我们将表达式(6)和(7)代入RNAP的质量平衡方程(3)：\n$$E_T = [E] + \\frac{P_T^{(h)}[E]}{K_{d}^{(h)} + [E]} + \\frac{P_T^{(o)}[E]}{K_{d}^{(o)} + [E]}$$\n这个方程只有一个未知数 $[E]$。我们可以代入给定的数值（单位均为nM）：$E_T=200$，$P_T^{(h)}=500$，$P_T^{(o)}=50$，$K_d^{(h)}=200$，$K_d^{(o)}=10$。\n$$200 = [E] + \\frac{500[E]}{200 + [E]} + \\frac{50[E]}{10 + [E]}$$\n这是一个关于 $[E]$ 的非线性方程。我们可以通过乘以分母将其转换为一个三次多项式，但求解它需要使用数值方法。设 $x = [E]$。该方程可以写成 $f(x) = x + \\frac{500x}{200+x} + \\frac{50x}{10+x} - 200 = 0$。具有物理意义的根必须为正。通过数值求解该方程，得到稳态下游离RNAP浓度：\n$$[E] \\approx 53.078 \\text{ nM}$$\n\n利用 $[E]$ 的这个值，我们现在可以使用方程(6)和(7)计算结合复合物的浓度：\n$$C_o = \\frac{50 \\times 53.078}{10 + 53.078} = \\frac{2653.9}{63.078} \\approx 42.074 \\text{ nM}$$\n$$C_h = \\frac{500 \\times 53.078}{200 + 53.078} = \\frac{26539}{253.078} \\approx 104.865 \\text{ nM}$$\n我们可以检查其是否与RNAP的质量平衡一致：$[E] + C_h + C_o \\approx 53.078 + 104.865 + 42.074 = 200.017 \\text{ nM}$，这与 $E_T=200 \\text{ nM}$ 是一致的。\n\n最后，我们计算所求的比例 $f_o$：\n$$f_o = \\frac{C_o}{C_h + C_o} = \\frac{42.074}{104.865 + 42.074} = \\frac{42.074}{146.939} \\approx 0.286334$$\n根据问题陈述的要求，四舍五入到四位有效数字，得到 $0.2863$。", "answer": "$$\\boxed{0.2863}$$", "id": "2756586"}, {"introduction": "在成功实现基因表达后，下一步是构建能够执行特定功能的动态调控回路。负反馈是合成生物学中用于增强系统稳健性和实现稳态调节的关键设计模式。本练习 [@problem_id:2756626] 构建了一个负反馈回路的动态模型，其中正交RNA聚合酶（oRNAP）催化其自身抑制子的表达。你将通过对该非线性系统进行线性化并分析其雅可比矩阵的特征值，来判断该回路在设计工作点的稳定性，这是设计可预测和稳定生物系统的核心技能。", "problem": "在一个经过工程设计的正交基因表达模块中，一个正交RNA聚合酶 (oRNAP) 转录一个阻遏蛋白，该阻遏蛋白抑制oRNAP自身的表达。该模块对oRNAP和阻遏蛋白基因均使用一个正交启动子 (Pₒ)，翻译由一个正交核糖体 (oRibo) 执行，但为了便于处理，翻译动力学被集总到有效的蛋白质生成速率中。从分子生物学的中心法则和质量作用动力学出发，假设以下用于描述oRNAP和阻遏蛋白浓度的、基于机理的最小集总参数模型：\n- 设 $x(t)$ 为oRNAP浓度，$y(t)$ 为阻遏蛋白浓度，单位均为 $\\mathrm{nM}$。\n- oRNAP由启动子 $P_{o,x}$ 产生，该过程受 $y$ 抑制，Hill系数为 $n$；oRNAP通过一级稀释/降解被移除，速率为 $\\delta_{x}$。\n- 阻遏蛋白由启动子 $P_{o,y}$ 产生，该过程为oRNAP催化的转录，对 $x$ 具有Michaelis–Menten依赖性；阻遏蛋白通过一级稀释/降解被移除，速率为 $\\delta_{y}$。\n\n与这些假设一致的集总确定性模型为\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{\\beta_{x}}{\\,1 + \\left(\\frac{y}{K_{y}}\\right)^{n}\\,}\\;-\\;\\delta_{x}\\,x,\n\\qquad\n\\frac{dy}{dt} \\;=\\; \\beta_{y}\\,\\frac{x}{K_{x}+x}\\;-\\;\\delta_{y}\\,y,\n$$\n其中 $\\beta_{x}$ 和 $\\beta_{y}$ 的单位是 $\\mathrm{nM\\,h^{-1}}$，$K_{x}$ 和 $K_{y}$ 的单位是 $\\mathrm{nM}$，$\\delta_{x}$ 和 $\\delta_{y}$ 的单位是 $\\mathrm{h^{-1}}$。为了反映通过启动子和降解调控来设定工作点的设计目标，施加设计约束，使得稳态出现在 $x^{\\ast}=K_{x}$ 和 $y^{\\ast}=K_{y}$ 处。您可以假设这可以通过选择参数来实现，而不会违反其潜在的生物物理学原理。\n\n1. 从上述模型和所述的设计目标出发，确定 $\\beta_{x}$、$\\beta_{y}$、$\\delta_{x}$、$\\delta_{y}$、$K_{x}$、$K_{y}$ 和 $n$ 之间满足 $(x^{\\ast},y^{\\ast})=(K_{x},K_{y})$ 是一个稳态的代数关系。\n2. 在 $(x^{\\ast},y^{\\ast})$ 附近将系统线性化，并推导出该工作点的雅可比矩阵 $J^{\\ast}$ 的符号形式。\n3. 使用以下数值指定的设计选择\n$$\n\\delta_{x}=0.7~\\mathrm{h^{-1}},\\quad \\delta_{y}=0.5~\\mathrm{h^{-1}},\\quad K_{x}=100~\\mathrm{nM},\\quad K_{y}=50~\\mathrm{nM},\\quad n=2,\n$$\n通过选择与第1部分结果一致的 $\\beta_{x}$ 和 $\\beta_{y}$ 来完成设计。对 $J^{\\ast}$ 进行数值评估并计算其特征值。报告特征值的最大实部，单位为 $\\mathrm{h^{-1}}$。\n\n最终数值答案以 $\\mathrm{h^{-1}}$ 为单位，并四舍五入到四位有效数字。", "solution": "该问题给出了一个由两个常微分方程组成的系统，用于模拟一个合成基因线路。该问题具有科学依据，提法明确，并包含了求解所需的所有信息。因此，我将开始进行分析。\n\n该系统由以下方程描述oRNAP浓度 $x(t)$ 和阻遏蛋白浓度 $y(t)$：\n$$\n\\frac{dx}{dt} = \\frac{\\beta_{x}}{\\,1 + \\left(\\frac{y}{K_{y}}\\right)^{n}\\,} - \\delta_{x}\\,x, \\quad \\text{(1)}\n$$\n$$\n\\frac{dy}{dt} = \\beta_{y}\\,\\frac{x}{K_{x}+x} - \\delta_{y}\\,y. \\quad \\text{(2)}\n$$\n\n**第1部分：稳态关系**\n\n在稳态下，时间导数为零：$\\frac{dx}{dt} = 0$ 且 $\\frac{dy}{dt} = 0$。设稳态浓度为 $(x^{\\ast}, y^{\\ast})$。问题施加了一个设计约束，即该稳态出现在 $(x^{\\ast}, y^{\\ast}) = (K_{x}, K_{y})$。我们将这些值代入稳态方程。\n\n根据方程(1)，令 $\\frac{dx}{dt} = 0$：\n$$\n\\frac{\\beta_{x}}{\\,1 + \\left(\\frac{y^{\\ast}}{K_{y}}\\right)^{n}\\,} = \\delta_{x}\\,x^{\\ast}\n$$\n代入 $x^{\\ast} = K_{x}$ 和 $y^{\\ast} = K_{y}$：\n$$\n\\frac{\\beta_{x}}{\\,1 + \\left(\\frac{K_{y}}{K_{y}}\\right)^{n}\\,} = \\delta_{x}\\,K_{x}\n$$\n$$\n\\frac{\\beta_{x}}{1 + 1^{n}} = \\frac{\\beta_{x}}{2} = \\delta_{x}\\,K_{x}\n$$\n这得到了第一个代数关系：\n$$\n\\beta_{x} = 2 \\delta_{x} K_{x}\n$$\n\n根据方程(2)，令 $\\frac{dy}{dt} = 0$：\n$$\n\\beta_{y}\\,\\frac{x^{\\ast}}{K_{x}+x^{\\ast}} = \\delta_{y}\\,y^{\\ast}\n$$\n代入 $x^{\\ast} = K_{x}$ 和 $y^{\\ast} = K_{y}$：\n$$\n\\beta_{y}\\,\\frac{K_{x}}{K_{x}+K_{x}} = \\delta_{y}\\,K_{y}\n$$\n$$\n\\beta_{y}\\,\\frac{K_{x}}{2 K_{x}} = \\frac{\\beta_{y}}{2} = \\delta_{y}\\,K_{y}\n$$\n这得到了第二个代数关系：\n$$\n\\beta_{y} = 2 \\delta_{y} K_{y}\n$$\n\n**第2部分：稳态点的雅可比矩阵**\n\n为使系统线性化，我们计算右手边函数（记为 $f(x,y)$ 和 $g(x,y)$）的雅可比矩阵 $J$。\n$$\nJ = \\begin{pmatrix} \\frac{\\partial f}{\\partial x} & \\frac{\\partial f}{\\partial y} \\\\ \\frac{\\partial g}{\\partial x} & \\frac{\\partial g}{\\partial y} \\end{pmatrix}\n$$\n偏导数如下：\n$$\n\\frac{\\partial f}{\\partial x} = -\\delta_{x}\n$$\n$$\n\\frac{\\partial f}{\\partial y} = \\frac{d}{dy}\\left( \\beta_{x} \\left(1 + \\left(\\frac{y}{K_{y}}\\right)^{n}\\right)^{-1} \\right) = -\\beta_{x} \\left(1 + \\left(\\frac{y}{K_{y}}\\right)^{n}\\right)^{-2} \\left(n\\left(\\frac{y}{K_{y}}\\right)^{n-1} \\frac{1}{K_{y}}\\right)\n$$\n$$\n\\frac{\\partial g}{\\partial x} = \\frac{d}{dx}\\left( \\beta_{y} \\frac{x}{K_{x}+x} \\right) = \\beta_{y} \\frac{(K_{x}+x)(1) - x(1)}{(K_{x}+x)^2} = \\frac{\\beta_{y} K_{x}}{(K_{x}+x)^2}\n$$\n$$\n\\frac{\\partial g}{\\partial y} = -\\delta_{y}\n$$\n我们在稳态点 $(x^{\\ast}, y^{\\ast}) = (K_{x}, K_{y})$ 处计算这些导数的值，以求得雅可比矩阵 $J^{\\ast}$。\n$J^{\\ast}_{11} = -\\delta_{x}$\n$J^{\\ast}_{12} = \\left. \\frac{\\partial f}{\\partial y} \\right|_{y=K_{y}} = -\\beta_{x} \\left(1 + 1^{n}\\right)^{-2} \\left(\\frac{n}{K_{y}}\\right) = -\\frac{n\\beta_{x}}{4K_{y}}$。使用 $\\beta_{x} = 2\\delta_{x}K_{x}$，上式变为 $J^{\\ast}_{12} = -\\frac{n(2\\delta_{x}K_{x})}{4K_{y}} = -\\frac{n\\delta_{x}K_{x}}{2K_{y}}$。\n$J^{\\ast}_{21} = \\left. \\frac{\\partial g}{\\partial x} \\right|_{x=K_{x}} = \\frac{\\beta_{y} K_{x}}{(K_{x}+K_{x})^2} = \\frac{\\beta_{y}}{4K_{x}}$。使用 $\\beta_{y} = 2\\delta_{y}K_{y}$，上式变为 $J^{\\ast}_{21} = \\frac{2\\delta_{y}K_{y}}{4K_{x}} = \\frac{\\delta_{y}K_{y}}{2K_{x}}$。\n$J^{\\ast}_{22} = -\\delta_{y}$\n\n该工作点的符号形式雅可比矩阵为：\n$$\nJ^{\\ast} = \\begin{pmatrix} -\\delta_{x} & -\\frac{n \\delta_{x} K_{x}}{2 K_{y}} \\\\ \\frac{\\delta_{y} K_{y}}{2 K_{x}} & -\\delta_{y} \\end{pmatrix}\n$$\n\n**第3部分：数值评估**\n\n问题给出的数值为：$\\delta_{x}=0.7~\\mathrm{h^{-1}}$，$\\delta_{y}=0.5~\\mathrm{h^{-1}}$，$K_{x}=100~\\mathrm{nM}$，$K_{y}=50~\\mathrm{nM}$，以及 $n=2$。\n\n首先，我们通过求解 $\\beta_{x}$ 和 $\\beta_{y}$ 来完成设计：\n$$\n\\beta_{x} = 2\\delta_{x}K_{x} = 2(0.7)(100) = 140~\\mathrm{nM\\,h^{-1}}\n$$\n$$\n\\beta_{y} = 2\\delta_{y}K_{y} = 2(0.5)(50) = 50~\\mathrm{nM\\,h^{-1}}\n$$\n接着，我们对 $J^{\\ast}$ 的元素进行数值计算：\n$$\nJ^{\\ast}_{11} = -0.7\n$$\n$$\nJ^{\\ast}_{12} = -\\frac{2 \\cdot 0.7 \\cdot 100}{2 \\cdot 50} = -\\frac{140}{100} = -1.4\n$$\n$$\nJ^{\\ast}_{21} = \\frac{0.5 \\cdot 50}{2 \\cdot 100} = \\frac{25}{200} = 0.125\n$$\n$$\nJ^{\\ast}_{22} = -0.5\n$$\n因此，数值雅可比矩阵为：\n$$\nJ^{\\ast} = \\begin{pmatrix} -0.7 & -1.4 \\\\ 0.125 & -0.5 \\end{pmatrix}\n$$\n$J^{\\ast}$ 的特征值 $\\lambda$ 是特征方程 $\\det(J^{\\ast} - \\lambda I) = 0$ 的根，即 $\\lambda^{2} - \\mathrm{Tr}(J^{\\ast})\\lambda + \\det(J^{\\ast}) = 0$。\n迹为 $\\mathrm{Tr}(J^{\\ast}) = -0.7 + (-0.5) = -1.2$。\n行列式为 $\\det(J^{\\ast}) = (-0.7)(-0.5) - (-1.4)(0.125) = 0.35 + 0.175 = 0.525$。\n特征方程为：\n$$\n\\lambda^{2} - (-1.2)\\lambda + 0.525 = 0 \\implies \\lambda^{2} + 1.2\\lambda + 0.525 = 0\n$$\n使用二次求根公式 $\\lambda = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}$：\n$$\n\\lambda = \\frac{-1.2 \\pm \\sqrt{(1.2)^{2} - 4(1)(0.525)}}{2} = \\frac{-1.2 \\pm \\sqrt{1.44 - 2.1}}{2} = \\frac{-1.2 \\pm \\sqrt{-0.66}}{2}\n$$\n特征值为一对共轭复数：\n$$\n\\lambda_{1,2} = \\frac{-1.2 \\pm i\\sqrt{0.66}}{2} = -0.6 \\pm i\\frac{\\sqrt{0.66}}{2}\n$$\n两个特征值的实部相同：\n$$\n\\mathrm{Re}(\\lambda_{1}) = \\mathrm{Re}(\\lambda_{2}) = -0.6\n$$\n因此，特征值的最大实部为 $-0.6$。单位必须是 $\\mathrm{h^{-1}}$，与矩阵元素的单位一致。问题要求答案四舍五入到四位有效数字。", "answer": "$$\\boxed{-0.6000}$$", "id": "2756626"}, {"introduction": "现实世界中的正交系统通常包含多个转录和翻译组件，它们的交叉反应会以复杂的方式组合在一起，形成系统级的泄漏。为了全面理解和优化整个系统，我们需要超越对单个组件的分析。本练习 [@problem_id:2756577] 介绍了一种强大的计算方法，使用克罗内克积（Kronecker product）来构建一个综合性的泄漏矩阵，并利用奇异值分解（SVD）来识别和排序系统中主要的泄漏模式。通过这个实践，你将学会如何运用线性代数工具从高维数据中提取关键信息，从而精准定位和量化一个复杂合成系统中最主要的非预期相互作用。", "problem": "您正在一个合成基因表达系统中，为正交核糖体和正交核糖核酸（RNA）聚合酶的组合交叉反应性进行建模。测量数据以标准化相互作用矩阵的形式提供，分别针对三对核糖体-核糖体结合位点（RBS）和两对RNA聚合酶-启动子。每个矩阵条目代表一个相对活性，经过标准化，使得同源相互作用的值为 $1$，而脱靶相互作用的值在 $[0,1)$ 区间内。在分子生物学中心法则和线性小信号合成的假设下，从预期的启动子-RBS输入到可观察的蛋白质输出的组合映射被建模为一个分块结构矩阵 $M$，其由克罗内克积给出：$$M = P \\otimes R,$$ 其中 $R \\in \\mathbb{R}^{3 \\times 3}$ 是核糖体-RBS相互作用矩阵，$P \\in \\mathbb{R}^{2 \\times 2}$ 是RNA聚合酶-启动子相互作用矩阵。等价地，$$M = \\begin{bmatrix} p_{11} R & p_{12} R \\\\ p_{21} R & p_{22} R \\end{bmatrix},$$ 其中 $p_{ij}$ 是 $P$ 的条目。在一个理想的完全正交系统中，$M$ 将是大小为 $6$ 的单位矩阵，记作 $I_6$。定义泄漏矩阵 $$L = M - I_6.$$ 使用奇异值分解（SVD），即分解式 $$L = U \\Sigma V^{\\top},$$ 来识别主要泄漏模式，这些模式是与最大奇异值相对应的右奇异向量。具体来说，设 $\\sigma_1 \\ge \\sigma_2 \\ge \\cdots \\ge \\sigma_6 \\ge 0$ 是按降序排列的奇异值，并设 $v_1$ 和 $v_2$ 是与 $\\sigma_1$ 和 $\\sigma_2$ 相关的前两个右奇异向量（$V$ 的列）。为了在启动子-RBS网格上具有可解释性，通过将 $6$ 维向量空间按字典序（启动子索引优先）排序，将向量索引映射到启动子-RBS索引对：分量索引为 $$i = a \\cdot 3 + b,$$ 其中 $a \\in \\{0,1\\}$ 是启动子（RNA聚合酶）索引，$b \\in \\{0,1,2\\}$ 是RBS（核糖体）索引。对于每个 $k \\in \\{1,2\\}$ 的 $v_k$，识别出 $v_k$ 中具有最大绝对值的分量所对应的启动子-RBS索引对 $(a_k,b_k)$。\n\n您的任务是编写一个完整的程序，对于每个提供的测试用例 $(R,P)$，构建 $M$，计算 $L$，执行SVD，并为该用例返回列表 $$[\\text{四舍五入的 } \\sigma_1, a_1, b_1, \\text{四舍五入的 } \\sigma_2, a_2, b_2],$$ 其中奇异值四舍五入到 $6$ 位小数，索引 $a_k$ 和 $b_k$ 是如上文定义的整数。不需要物理单位。不涉及角度。不要输出百分比。\n\n测试套件。使用以下四个测试用例，每个用例由 $R$（大小 $3 \\times 3$）和 $P$（大小 $2 \\times 2$）给出，所有条目都指定为实数：\n\n- 案例 $1$（近正交基线）：\n  - $R = \\begin{bmatrix} 1.0 & 0.05 & 0.02 \\\\ 0.04 & 1.0 & 0.03 \\\\ 0.01 & 0.02 & 1.0 \\end{bmatrix}$\n  - $P = \\begin{bmatrix} 1.0 & 0.08 \\\\ 0.06 & 1.0 \\end{bmatrix}$\n- 案例 $2$（翻译串扰主导）：\n  - $R = \\begin{bmatrix} 1.0 & 0.35 & 0.10 \\\\ 0.30 & 1.0 & 0.15 \\\\ 0.05 & 0.20 & 1.0 \\end{bmatrix}$\n  - $P = \\begin{bmatrix} 1.0 & 0.20 \\\\ 0.25 & 1.0 \\end{bmatrix}$\n- 案例 $3$（完全正交性）：\n  - $R = \\begin{bmatrix} 1.0 & 0.0 & 0.0 \\\\ 0.0 & 1.0 & 0.0 \\\\ 0.0 & 0.0 & 1.0 \\end{bmatrix}$\n  - $P = \\begin{bmatrix} 1.0 & 0.0 \\\\ 0.0 & 1.0 \\end{bmatrix}$\n- 案例 $4$（转录串扰主导）：\n  - $R = \\begin{bmatrix} 1.0 & 0.02 & 0.01 \\\\ 0.02 & 1.0 & 0.02 \\\\ 0.01 & 0.02 & 1.0 \\end{bmatrix}$\n  - $P = \\begin{bmatrix} 1.0 & 0.40 \\\\ 0.35 & 1.0 \\end{bmatrix}$\n\n最终输出格式。您的程序应生成单行输出，其中包含一个由逗号分隔的列表，该列表包含四个用方括号括起来的各案例列表，例如 $[[\\cdots],[\\cdots],[\\cdots],[\\cdots]]$。每个案例列表必须是 $[\\sigma_1,a_1,b_1,\\sigma_2,a_2,b_2]$ 的形式，其中 $\\sigma_1$ 和 $\\sigma_2$ 四舍五入到 $6$ 位小数，$a_k,b_k$ 为整数。", "solution": "问题陈述已经过严格验证，并被确定为有效。它提出了一个适定的计算任务，该任务基于一个标准的（尽管是简化的）基因表达动力学的线性系统模型。包括使用克罗内克积和奇异值分解（SVD）在内的数学框架，适用于分析所述系统。所提供的数据是完整且一致的。因此，我们将继续提供一个正式的解决方案。\n\n问题的核心是量化和识别一个由正交转录和翻译组件构成的合成生物电路中交叉反应（或称“泄漏”）的主要来源。系统的行为由一组输入到一组输出的线性映射来建模。\n\n输入是 $2$ 对启动子-RNA聚合酶和 $3$ 对核糖体结合位点（RBS）-核糖体的预期激活。这构成了一个 $2 \\times 3$ 的可能主信号网格，可以表示为一个 $6$ 维向量空间。输出是相应的 $6$ 种蛋白质的表达水平。系统的响应由一个矩阵 $M \\in \\mathbb{R}^{6 \\times 6}$ 描述。\n\n在线性合成的假设下，总系统矩阵 $M$ 由RNA聚合酶-启动子相互作用矩阵 $P \\in \\mathbb{R}^{2 \\times 2}$ 和核糖体-RBS相互作用矩阵 $R \\in \\mathbb{R}^{3 \\times 3}$ 的克罗内克积给出：\n$$\nM = P \\otimes R\n$$\n$P$ 的条目（记为 $p_{ij}$）和 $R$ 的条目（记为 $r_{kl}$）是标准化的活性。一个完全正交、无交叉反应的系统将具有矩阵 $P = I_2$ 和 $R = I_3$，其中 $I_n$ 是大小为 $n$ 的单位矩阵。在这种理想情况下，$M = I_2 \\otimes I_3 = I_6$。\n\n为了分析与这种理想情况的偏差，我们定义泄漏矩阵 $L$：\n$$\nL = M - I_6\n$$\n$L$ 的非零条目代表了不期望的串扰路径的强度。一个大的条目 $L_{ij}$ 意味着激活输入 $j$ 会导致在 $i$ 处产生显著的非预期输出。\n\n为了识别最重要的泄漏路径，我们采用矩阵 $L$ 的奇异值分解（SVD）：\n$$\nL = U \\Sigma V^{\\top}\n$$\n这里，$U$ 和 $V$ 是 $6 \\times 6$ 的正交矩阵，$\\Sigma$ 是一个包含奇异值 $\\sigma_1 \\ge \\sigma_2 \\ge \\dots \\ge \\sigma_6 \\ge 0$ 的对角矩阵。奇异值量化了输入和输出空间中沿主正交方向的放大增益。最大的奇异值 $\\sigma_1$ 和 $\\sigma_2$ 对应于最主要的泄漏模式。\n\n$V$ 的列，记作 $v_k$，是右奇异向量。每个向量 $v_k$ 代表一个“输入模式”，它是输入信号（启动子-RBS对的激活）的特定组合，该组合导致一个泄漏输出模式（$U$ 的一列，$u_k$），其幅度为 $\\sigma_k$。为了解释这些输入模式，我们识别出对最主要模式贡献最大的启动子-RBS对。这是通过在相应的右奇异向量（$v_1$ 和 $v_2$）中找到具有最大绝对值的分量来实现的。\n\n问题定义了一个从启动子-RBS索引对 $(a, b)$ 到单个向量索引 $i$ 的字典序映射：\n$$\ni = a \\cdot 3 + b\n$$\n此处，$a \\in \\{0, 1\\}$ 是启动子索引，$b \\in \\{0, 1, 2\\}$ 是RBS索引，使得向量索引 $i \\in \\{0, 1, 2, 3, 4, 5\\}$。为了找到与奇异向量 $v_k$ 的主导分量相对应的特定启动子-RBS对 $(a_k, b_k)$，我们首先找到 $v_k$ 中绝对值最大元素的索引 $i_k$。然后，我们应用逆映射：\n$$\na_k = i_k \\operatorname{div} 3 \\quad (\\text{整除})\n$$\n$$\nb_k = i_k \\pmod 3 \\quad (\\text{模运算})\n$$\n\n每个测试用例的计算过程如下：\n1.  根据给定数据构建矩阵 $P$ 和 $R$。\n2.  计算系统矩阵 $M = P \\otimes R$。\n3.  计算泄漏矩阵 $L = M - I_6$。\n4.  对 $L$ 执行SVD以获得奇异值 $\\Sigma$ 和右奇异向量矩阵 $V$（或其转置 $V^\\top$）。\n5.  提取两个最大的奇异值 $\\sigma_1$ 和 $\\sigma_2$。\n6.  提取两个对应的右奇异向量 $v_1$ 和 $v_2$。\n7.  对于每个向量 $v_k$（$k=1, 2$），找到索引 $i_k = \\operatorname{argmax}_j(|(v_k)_j|)$。\n8.  使用逆映射将每个索引 $i_k$ 转换为对应的对 $(a_k, b_k)$。\n9.  将结果格式化为 $[\\sigma_1, a_1, b_1, \\sigma_2, a_2, b_2]$，其中奇异值四舍五入到 $6$ 位小数。\n\n此过程将应用于所有四个测试用例以生成最终输出。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of identifying principal leakage modes in a synthetic\n    gene expression system for a given set of test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (near-orthogonal baseline)\n        {\n            \"R\": [[1.0, 0.05, 0.02], [0.04, 1.0, 0.03], [0.01, 0.02, 1.0]],\n            \"P\": [[1.0, 0.08], [0.06, 1.0]],\n        },\n        # Case 2 (translation cross-talk dominant)\n        {\n            \"R\": [[1.0, 0.35, 0.10], [0.30, 1.0, 0.15], [0.05, 0.20, 1.0]],\n            \"P\": [[1.0, 0.20], [0.25, 1.0]],\n        },\n        # Case 3 (perfect orthogonality)\n        {\n            \"R\": [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]],\n            \"P\": [[1.0, 0.0], [0.0, 1.0]],\n        },\n        # Case 4 (transcription cross-talk dominant)\n        {\n            \"R\": [[1.0, 0.02, 0.01], [0.02, 1.0, 0.02], [0.01, 0.02, 1.0]],\n            \"P\": [[1.0, 0.40], [0.35, 1.0]],\n        },\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        # Step 1: Extract givens and convert to numpy arrays\n        R = np.array(case[\"R\"])\n        P = np.array(case[\"P\"])\n        \n        # System matrix M is the Kronecker product of P and R\n        # The size of M will be (2*3) x (2*3) = 6x6\n        M = np.kron(P, R)\n        \n        # Leakage matrix L = M - I_6\n        # np.eye generates the identity matrix of the specified size\n        L = M - np.eye(6)\n        \n        # Perform Singular Value Decomposition (SVD) on L\n        # L = U * Sigma * V^T\n        # np.linalg.svd returns U, S (a 1D array of singular values), and Vh (V transpose)\n        _U, S, Vh = np.linalg.svd(L)\n        \n        # The singular values in S are already sorted in descending order.\n        # sigma_1 is S[0], sigma_2 is S[1]\n        sigma_1 = S[0]\n        sigma_2 = S[1]\n        \n        # The right singular vectors are the rows of Vh.\n        # v_1 is the first row, v_2 is the second row.\n        v_1 = Vh[0, :]\n        v_2 = Vh[1, :]\n        \n        # Find the index of the component with the largest absolute value for each vector.\n        idx_1 = np.argmax(np.abs(v_1))\n        idx_2 = np.argmax(np.abs(v_2))\n        \n        # Map indices back to promoter-RBS pairs (a, b)\n        # using a = index // 3 and b = index % 3\n        # For v_1:\n        a_1 = idx_1 // 3\n        b_1 = idx_1 % 3\n        \n        # For v_2:\n        a_2 = idx_2 // 3\n        b_2 = idx_2 % 3\n        \n        # Assemble the result list for the current case.\n        # Singular values are formatted to 6 decimal places.\n        case_result = [f\"{sigma_1:.6f}\", a_1, b_1, f\"{sigma_2:.6f}\", a_2, b_2]\n        all_results.append(case_result)\n\n    # Format the final output string as a list of lists.\n    # e.g., [[res1_val1,res1_val2,...],[res2_val1,res2_val2,...],...]\n    inner_list_strs = [f\"[{','.join(map(str, res))}]\" for res in all_results]\n    final_output_str = f\"[{','.join(inner_list_strs)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output_str)\n\nsolve()\n```", "id": "2756577"}]}