{"hands_on_practices": [{"introduction": "“反应-扩散”系统是理解生物学中模式形成（如Alan Turing提出的模式）的基石。通过本练习，您将掌握无量纲化这一强大的数学工具，它能将复杂的偏微分方程组简化，并揭示出控制模式形态和边缘锐度的核心无量纲参数。这个过程不仅是理论推演，更是培养从复杂动力学中提炼关键物理洞察力的重要训练 [@problem_id:2719110]。", "problem": "一个空间扩展的微生物种群利用两种可扩散物质来实现边缘检测：一种是细胞内产生的激活剂，其浓度表示为 $a(x,t)$；另一种是可扩散的抑制剂，其浓度表示为 $i(x,t)$。该种群位于一个特征长度为 $\\mathcal{L}$ 的一维条带上，其空间坐标 $x \\in [0,\\mathcal{L}]$。两种物质均遵循菲克扩散和一阶衰变规律。激活剂的产生是对外部维持的形态发生素分布 $m(x)$ 的响应，并受希尔型调节；而抑制剂的产生则与局部激活剂水平成正比。其控制反应扩散方程为\n$$\n\\frac{\\partial a}{\\partial t} \\;=\\; D_{a}\\,\\frac{\\partial^{2} a}{\\partial x^{2}} \\;+\\; s_{a}\\,f\\!\\left(m(x)\\right) \\;-\\; k_{a}\\,a,\n\\qquad\n\\frac{\\partial i}{\\partial t} \\;=\\; D_{i}\\,\\frac{\\partial^{2} i}{\\partial x^{2}} \\;+\\; s_{i}\\,a \\;-\\; k_{i}\\,i,\n$$\n其中 $D_{a}$ 和 $D_{i}$ 是扩散系数，$k_{a}$ 和 $k_{i}$ 是一阶衰变速率，$s_{a}$ 和 $s_{i}$ 是生成速率常数，希尔调节函数为\n$$\nf\\!\\left(m\\right) \\;=\\; \\frac{m^{n}}{K^{n} + m^{n}},\n$$\n其中希尔系数 $n \\geq 1$，激活阈值 $K>0$。假设在 $x=0$ 和 $x=\\mathcal{L}$ 处为无通量边界条件。外部形态发生素 $m(x)$ 是给定的，并在空间域上平滑变化。\n\n从菲克扩散和一阶反应动力学的基本原理出发，引入时间 $T$、长度 $L$ 以及浓度 $A_{0}$ 和 $I_{0}$ 的特征尺度，对该系统进行无量纲化。定义无量纲变量 $\\tau = t/T$、$\\xi = x/L$、$\\alpha(\\xi,\\tau) = a(x,t)/A_{0}$ 和 $\\iota(\\xi,\\tau) = i(x,t)/I_{0}$。推导无量纲方程，并确定控制稳态空间模式形状以及高低形态发生素界面处所检测边缘锐度的无量纲数组的最小集合。讨论你所确定的每个无量纲数组在相对扩散长度、生成与衰变的平衡以及调节陡峭程度方面的物理意义。\n\n将边缘锐度指数 $\\Gamma$ 定义为激活剂扩散长度与抑制剂扩散长度之比，其中扩散系数为 $D$、衰变速率为 $k$ 的物质的扩散长度定义为 $\\ell \\equiv \\sqrt{D/k}$。用有量纲参数 $D_{a}$、$D_{i}$、$k_{a}$ 和 $k_{i}$ 以闭合形式表示 $\\Gamma$。你最终报告的答案应仅为 $\\Gamma$ 的表达式，该表达式是无量纲的，因此必须以无单位的形式表示。", "solution": "所述问题在科学上是合理的、自洽的且适定的。它提出了一个标准的激活剂-抑制剂系统，这是生物模式形成研究中的一个基石模型，由一组反应扩散偏微分方程描述。问题中的参数和函数定义清晰，其任务——对系统进行无量纲化、确定控制性的无量纲参数并推导特定指数——是数学物理和生物学中的一个标准而严谨的步骤。因此，我们着手进行求解。\n\n该问题要求我们分析在一维域 $x \\in [0, \\mathcal{L}]$ 内，由以下方程组控制的激活剂 $a(x,t)$ 和抑制剂 $i(x,t)$ 的动力学：\n$$\n\\frac{\\partial a}{\\partial t} = D_{a}\\,\\frac{\\partial^{2} a}{\\partial x^{2}} + s_{a}\\,f\\!\\left(m(x)\\right) - k_{a}\\,a\n$$\n$$\n\\frac{\\partial i}{\\partial t} = D_{i}\\,\\frac{\\partial^{2} i}{\\partial x^{2}} + s_{i}\\,a - k_{i}\\,i\n$$\n第一步是对该系统进行无量纲化。我们引入无量纲变量 $\\tau = t/T$、$\\xi = x/L$、$\\alpha(\\xi,\\tau) = a(x,t)/A_{0}$ 和 $\\iota(\\xi,\\tau) = i(x,t)/I_{0}$，其中 $T$、$L$、$A_{0}$ 和 $I_{0}$ 分别是时间、长度、激活剂浓度和抑制剂浓度的特征尺度。\n\n偏导数的变换如下：\n$$\n\\frac{\\partial}{\\partial t} = \\frac{1}{T}\\frac{\\partial}{\\partial \\tau}, \\qquad \\frac{\\partial^{2}}{\\partial x^{2}} = \\frac{1}{L^{2}}\\frac{\\partial^{2}}{\\partial \\xi^{2}}\n$$\n将这些代入控制方程，我们得到：\n$$\n\\frac{A_{0}}{T}\\frac{\\partial \\alpha}{\\partial \\tau} = D_{a}\\frac{A_{0}}{L^{2}}\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + s_{a}\\,f\\!\\left(m(L\\xi)\\right) - k_{a}A_{0}\\alpha\n$$\n$$\n\\frac{I_{0}}{T}\\frac{\\partial \\iota}{\\partial \\tau} = D_{i}\\frac{I_{0}}{L^{2}}\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + s_{i}A_{0}\\alpha - k_{i}I_{0}\\iota\n$$\n现在我们必须选择特征尺度。对于长度尺度，一个合乎逻辑的选择是系统尺寸，即 $L = \\mathcal{L}$。对于时间尺度，我们选择激活剂衰变速率的倒数，即 $T = 1/k_{a}$，因为它代表了系统反应动力学的一个基本时间尺度。对于激活剂浓度尺度 $A_{0}$，我们平衡最大生成速率 $s_{a}$（因为 $0 \\le f(m) \\le 1$）与衰变速率，得到 $A_{0} = s_{a}/k_{a}$。对于抑制剂浓度尺度 $I_{0}$，我们平衡其由特征激活剂水平 $A_{0}$ 产生的速率与其衰变速率，得到 $s_{i}A_{0} = k_{i}I_{0}$，因此 $I_{0} = s_{i}A_{0}/k_{i} = s_{i}s_{a}/(k_{a}k_{i})$。\n\n利用这些尺度，我们进行代入和简化。首先，对于激活剂方程：\n$$\n\\frac{s_{a}/k_{a}}{1/k_{a}}\\frac{\\partial \\alpha}{\\partial \\tau} = D_{a}\\frac{s_{a}/k_{a}}{\\mathcal{L}^{2}}\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + s_{a}\\,f\\!\\left(m(\\mathcal{L}\\xi)\\right) - k_{a}(s_{a}/k_{a})\\alpha\n$$\n两边除以 $s_{a}$ 得：\n$$\n\\frac{\\partial \\alpha}{\\partial \\tau} = \\frac{D_{a}}{k_{a}\\mathcal{L}^{2}}\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + f\\!\\left(m(\\mathcal{L}\\xi)\\right) - \\alpha\n$$\n接下来，对于抑制剂方程：\n$$\n\\frac{I_{0}}{1/k_{a}}\\frac{\\partial \\iota}{\\partial \\tau} = D_{i}\\frac{I_{0}}{\\mathcal{L}^{2}}\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + s_{i}A_{0}\\alpha - k_{i}I_{0}\\iota\n$$\n两边除以 $k_{a}I_{0}$ 得：\n$$\n\\frac{\\partial \\iota}{\\partial \\tau} = \\frac{D_{i}}{k_{a}\\mathcal{L}^{2}}\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + \\frac{s_{i}A_{0}}{k_{a}I_{0}}\\alpha - \\frac{k_{i}}{k_{a}}\\iota\n$$\n将我们选择的 $A_{0}$ 和 $I_{0}$ 尺度代入 $\\alpha$ 的系数中：\n$$\n\\frac{s_{i}A_{0}}{k_{a}I_{0}} = \\frac{s_{i}(s_{a}/k_{a})}{k_{a}(s_{i}s_{a}/(k_{a}k_{i}))} = \\frac{s_{i}s_{a}/k_{a}}{s_{i}s_{a}/k_{i}} = \\frac{k_{i}}{k_{a}}\n$$\n因此，无量纲方程组为：\n$$\n\\frac{\\partial \\alpha}{\\partial \\tau} = \\left(\\frac{D_{a}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + \\tilde{f}(\\xi) - \\alpha\n$$\n$$\n\\frac{\\partial \\iota}{\\partial \\tau} = \\left(\\frac{D_{i}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + \\frac{k_{i}}{k_{a}}\\left(\\alpha - \\iota\\right)\n$$\n其中 $\\tilde{f}(\\xi) = f(m(\\mathcal{L}\\xi))$。\n\n问题要求找出控制稳态模式 ($ \\partial/\\partial\\tau = 0 $) 的参数。稳态方程为：\n$$\n0 = \\left(\\frac{D_{a}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{d^{2} \\alpha}{d \\xi^{2}} + \\tilde{f}(\\xi) - \\alpha\n$$\n$$\n0 = \\left(\\frac{D_{i}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{d^{2} \\iota}{d \\xi^{2}} + \\frac{k_{i}}{k_{a}}\\left(\\alpha - \\iota\\right)\n$$\n使用扩散长度的定义 $\\ell \\equiv \\sqrt{D/k}$，我们有 $\\ell_{a} = \\sqrt{D_{a}/k_{a}}$ 和 $\\ell_{i} = \\sqrt{D_{i}/k_{i}}$。这些系数可以用这些基本长度来重写：\n$$\n\\frac{D_{a}}{k_{a}\\mathcal{L}^{2}} = \\left(\\frac{\\ell_{a}}{\\mathcal{L}}\\right)^{2}, \\qquad \\frac{D_{i}}{k_{a}\\mathcal{L}^{2}} = \\frac{D_{i}}{k_{i}\\mathcal{L}^{2}}\\frac{k_{i}}{k_{a}} = \\left(\\frac{\\ell_{i}}{\\mathcal{L}}\\right)^{2}\\frac{k_{i}}{k_{a}}\n$$\n将这些代入第二个稳态方程：\n$$\n0 = \\left(\\frac{\\ell_{i}}{\\mathcal{L}}\\right)^{2}\\frac{k_{i}}{k_{a}}\\frac{d^{2} \\iota}{d \\xi^{2}} + \\frac{k_{i}}{k_{a}}\\left(\\alpha - \\iota\\right)\n$$\n由于 $k_{i}/k_{a} \\neq 0$，我们可以将其约去。最终的稳态系统为：\n$$\n\\alpha - \\left(\\frac{\\ell_{a}}{\\mathcal{L}}\\right)^{2}\\frac{d^{2} \\alpha}{d \\xi^{2}} = \\tilde{f}(\\xi)\n$$\n$$\n\\iota - \\left(\\frac{\\ell_{i}}{\\mathcal{L}}\\right)^{2}\\frac{d^{2} \\iota}{d \\xi^{2}} = \\alpha\n$$\n从这个形式可以明显看出，控制空间模式形状的无量纲数组的最小集合是：\n1.  $\\Pi_{1} = \\ell_{a}/\\mathcal{L}$：激活剂扩散长度与系统尺寸之比。该数组代表了激活剂衰变时间尺度 ($1/k_a$) 与跨系统扩散时间尺度 ($\\mathcal{L}^2/D_a$) 之比的平方根。它决定了输入形态发生素分布 $\\tilde{f}(\\xi)$ 在生成激活剂分布 $\\alpha(\\xi)$ 过程中的空间滤波（或模糊）程度。\n2.  $\\Pi_{2} = \\ell_{i}/\\mathcal{L}$：抑制剂扩散长度与系统尺寸之比。与 $\\Pi_{1}$ 类似，它设定了抑制剂分布 $\\iota(\\xi)$ 相对于其来源（即激活剂分布 $\\alpha(\\xi)$）被平滑化的长度尺度。\n3.  $n$：希尔系数。该参数源于函数 $\\tilde{f}$，控制着生成响应对形态发生素 $m(x)$ 的陡峭程度或超敏性。高值的 $n$ 会导致更接近开关式的响应，这是形成锐利边缘的先决条件。\n\n为通过侧向抑制实现有效的边缘检测，抑制剂的扩散距离必须显著远于激活剂，即 $\\ell_{i} > \\ell_{a}$。这确保了高形态发生素区域的细胞在激活其邻近细胞的同时，也抑制了更远处的细胞，从而将激活区域限制在一个锐利的边界上。因此，比值 $\\ell_{i}/\\ell_{a}$ 是决定边缘锐度的最关键参数。集合 $\\{\\ell_{a}/\\mathcal{L}, \\ell_{i}/\\ell_{a}, n\\}$ 是描述模式形成能力的另一个等价的最小集合。\n\n最后，题目要求我们求解边缘锐度指数 $\\Gamma$ 的表达式，该指数在问题中被定义为激活剂扩散长度与抑制剂扩散长度之比。\n$$\n\\Gamma \\equiv \\frac{\\ell_{a}}{\\ell_{i}}\n$$\n使用扩散长度的定义 $\\ell = \\sqrt{D/k}$，我们有：\n$$\n\\ell_{a} = \\sqrt{\\frac{D_{a}}{k_{a}}}, \\qquad \\ell_{i} = \\sqrt{\\frac{D_{i}}{k_{i}}}\n$$\n将这些代入 $\\Gamma$ 的表达式中：\n$$\n\\Gamma = \\frac{\\sqrt{D_{a}/k_{a}}}{\\sqrt{D_{i}/k_{i}}} = \\sqrt{\\frac{D_{a}/k_{a}}{D_{i}/k_{i}}} = \\sqrt{\\frac{D_{a} k_{i}}{D_{i} k_{a}}}\n$$\n这个无量纲量捕捉了激活剂和抑制剂两种物质之间扩散与衰变速率的关键平衡，这一平衡决定了系统形成锐利空间边界的能力。对于这种边缘检测机制，要求 $\\Gamma < 1$。", "answer": "$$\\boxed{\\sqrt{\\frac{D_{a} k_{i}}{D_{i} k_{a}}}}$$", "id": "2719110"}, {"introduction": "在群体水平的模型中，扩散系数 $D$ 往往被视为一个给定的参数，但它的物理起源是什么？本练习将引导您从单个细胞的微观运动（“运动-翻滚”过程）出发，通过严谨的数学推导，得出描述细胞群体密度的宏观扩散方程。这清晰地揭示了微观随机行为如何涌现为可预测的宏观现象 [@problem_id:2719094]。", "problem": "在琼脂表面实现种群水平边缘检测的工程菌，通过奔跑-翻滚运动在空间中重新分布，同时计算可扩散诱导物的局部空间对比度。考虑将单细胞运动描述为 $d=2$ 空间维度中的一个连续时间速度跳跃过程的基于个体的模型：每个细胞以恒定速率 $v$ 沿由角度 $\\theta \\in [0,2\\pi)$ 定义的方向前进，并以泊松速率 $\\lambda$ 瞬时重新定向到一个从 $[0,2\\pi)$ 中均匀随机抽取的新方向。令 $p(\\mathbf{x},\\theta,t)$ 表示取向分辨的细胞数密度，令 $\\rho(\\mathbf{x},t)=\\int_{0}^{2\\pi} p(\\mathbf{x},\\theta,t)\\,\\mathrm{d}\\theta$ 表示宏观细胞密度。从概率守恒和所述的各向同性重定向法则出发，在长时间、大空间、抛物线标度极限（在此极限下，许多重定向事件发生在种群重新分布的时间尺度上）下，推导 $\\rho(\\mathbf{x},t)$ 的宏观演化方程。针对 $d=2$ 的情况，用运动参数 $v$ 和 $\\lambda$ 识别出控制此宏观极限的有效扩散系数 $D$。以 $D$ 的单个闭式符号表达式形式提供你的最终答案。在最终的方框答案中不要包含单位。如果你进行了任何近似，请明确说明其有效的标度假设。最终答案必须是 $D$ 的单个解析表达式。", "solution": "所述问题是有效的。这是一个统计物理学中的适定问题，其基础是成熟的随机过程理论（特别是速度跳跃过程）及其宏观极限。所有参数和条件都已指明，任务是从第一性原理出发推导一个已知结果。\n\n我们首先将取向分辨的细胞密度 $p(\\mathbf{x},\\theta,t)$ 的动力学形式化。该密度的演化由一个玻尔兹曼型动力学方程控制，该方程考虑了两个过程：确定性运动（“奔跑”）和随机重定向（“翻滚”）。\n\n$p(\\mathbf{x},\\theta,t)$ 随时间的变化由位置 $\\mathbf{x}$ 和方向 $\\theta$ 的相空间中的守恒方程给出：\n$$\n\\frac{\\partial p}{\\partial t} + \\nabla \\cdot (\\mathbf{v}(\\theta) p) = \\mathcal{C}[p]\n$$\n此处，$\\mathbf{v}(\\theta)$ 是方向为 $\\theta$ 的细胞的速度。在二维空间中，$\\mathbf{x} = (x, y)$，速度矢量为 $\\mathbf{v}(\\theta) = v(\\cos\\theta, \\sin\\theta)$，其中 $v$ 是恒定速率。项 $\\nabla \\cdot (\\mathbf{v}(\\theta) p)$ 表示由于细胞移入或移出体积元而引起的密度变化。由于 $v$ 是恒定的，该项简化为 $\\mathbf{v}(\\theta) \\cdot \\nabla p$。\n\n项 $\\mathcal{C}[p]$ 是碰撞或重定向算子。它描述了由于翻滚事件引起的 $p$ 的变化率。它由一个损失项和一个增益项组成。\n1.  **损失**：方向为 $\\theta$ 的细胞以泊松速率 $\\lambda$ 重新定向。这导致状态 $(\\mathbf{x}, \\theta)$ 下的密度以 $-\\lambda p(\\mathbf{x},\\theta,t)$ 的速率损失。\n2.  **增益**：任何方向 $\\theta'$ 的细胞都可以重新定向并获得新方向 $\\theta$。在位置 $\\mathbf{x}$ 处的总翻滚率为 $\\int_{0}^{2\\pi} \\lambda p(\\mathbf{x},\\theta',t) \\, \\mathrm{d}\\theta' = \\lambda\\rho(\\mathbf{x},t)$。由于新方向是从 $[0, 2\\pi)$ 中均匀抽取的，这个总速率均匀分布在长度为 $2\\pi$ 的区间上。因此，方向 $\\theta$ 的增益率为 $\\frac{1}{2\\pi} \\lambda \\rho(\\mathbf{x},t)$。\n\n结合这些项，$p(\\mathbf{x},\\theta,t)$ 的动力学方程为：\n$$\n\\frac{\\partial p}{\\partial t} + \\mathbf{v}(\\theta) \\cdot \\nabla p = -\\lambda p + \\frac{\\lambda}{2\\pi} \\rho(\\mathbf{x},t)\n$$\n其中 $\\rho(\\mathbf{x},t) = \\int_{0}^{2\\pi} p(\\mathbf{x},\\theta,t) \\, \\mathrm{d}\\theta$ 是宏观细胞密度。\n\n我们的目标是找到 $\\rho(\\mathbf{x},t)$ 的方程。我们将动力学方程对所有角度 $\\theta \\in [0, 2\\pi)$ 进行积分：\n$$\n\\int_{0}^{2\\pi} \\frac{\\partial p}{\\partial t} \\, \\mathrm{d}\\theta + \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\cdot \\nabla p \\, \\mathrm{d}\\theta = \\int_{0}^{2\\pi} \\left(-\\lambda p + \\frac{\\lambda}{2\\pi} \\rho \\right) \\mathrm{d}\\theta\n$$\n让我们逐项计算：\n-   $\\int_{0}^{2\\pi} \\frac{\\partial p}{\\partial t} \\, \\mathrm{d}\\theta = \\frac{\\partial}{\\partial t} \\int_{0}^{2\\pi} p \\, \\mathrm{d}\\theta = \\frac{\\partial \\rho}{\\partial t}$。\n-   $\\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\cdot \\nabla p \\, \\mathrm{d}\\theta = \\nabla \\cdot \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p \\, \\mathrm{d}\\theta = \\nabla \\cdot \\mathbf{J}$，其中我们定义了宏观通量矢量 $\\mathbf{J}(\\mathbf{x},t) = \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p(\\mathbf{x},\\theta,t) \\, \\mathrm{d}\\theta$。\n-   $\\int_{0}^{2\\pi} \\left(-\\lambda p + \\frac{\\lambda}{2\\pi} \\rho \\right) \\mathrm{d}\\theta = -\\lambda \\int_{0}^{2\\pi} p \\, \\mathrm{d}\\theta + \\frac{\\lambda\\rho}{2\\pi} \\int_{0}^{2\\pi} \\mathrm{d}\\theta = -\\lambda\\rho + \\frac{\\lambda\\rho}{2\\pi}(2\\pi) = 0$。\n\n这就得到了宏观连续性方程：\n$$\n\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\mathbf{J} = 0\n$$\n这个方程不是封闭的，因为它将 $\\rho$ 与 $\\mathbf{J}$ 联系起来。为了封闭它，我们需要一个用 $\\rho$ 表示 $\\mathbf{J}$ 的表达式。我们通过将动力学方程乘以 $\\mathbf{v}(\\theta)$ 并对 $\\theta$ 积分来推导 $\\mathbf{J}$ 的演化方程：\n$$\n\\frac{\\partial}{\\partial t} \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p \\, \\mathrm{d}\\theta + \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) (\\mathbf{v}(\\theta) \\cdot \\nabla p) \\, \\mathrm{d}\\theta = \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\left( -\\lambda p + \\frac{\\lambda}{2\\pi} \\rho \\right) \\mathrm{d}\\theta\n$$\n让我们计算这个新方程中的每一项：\n-   第一项是 $\\frac{\\partial \\mathbf{J}}{\\partial t}$。\n-   右边是 $-\\lambda \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p \\, \\mathrm{d}\\theta + \\frac{\\lambda\\rho}{2\\pi} \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\, \\mathrm{d}\\theta$。第一部分是 $-\\lambda \\mathbf{J}$。第二部分为零，因为 $\\int_0^{2\\pi} \\cos\\theta \\, \\mathrm{d}\\theta = 0$ 且 $\\int_0^{2\\pi} \\sin\\theta \\, \\mathrm{d}\\theta = 0$。因此，右边（RHS）为 $-\\lambda \\mathbf{J}$。\n-   左边的第二项是 $\\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) \\cdot \\nabla p \\, \\mathrm{d}\\theta = \\nabla \\cdot \\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) p \\, \\mathrm{d}\\theta$，其中 $\\otimes$ 表示外积。我们称张量为 $\\mathcal{T} = \\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) p \\, \\mathrm{d}\\theta$。\n\n因此，通量的演化方程为：\n$$\n\\frac{\\partial \\mathbf{J}}{\\partial t} + \\nabla \\cdot \\mathcal{T} = -\\lambda \\mathbf{J}\n$$\n这是矩方程层次结构中的第二个方程。我们现在引用“长时间、大空间、抛物线标度极限”的条件。这个极限对应于在远大于重定向时间 $1/\\lambda$ 的时间尺度和远大于典型奔跑长度 $v/\\lambda$ 的长度尺度上观察系统。在此极限下，通量 $\\mathbf{J}$ 的演化比快速弛豫率 $\\lambda$ 慢得多，因此我们可以假设 $\\frac{\\partial \\mathbf{J}}{\\partial t} \\ll \\lambda \\mathbf{J}$。这是一种绝热近似，其中快变量 $\\mathbf{J}$ 被消去。忽略通量的时间导数，我们得到：\n$$\n\\lambda \\mathbf{J} \\approx - \\nabla \\cdot \\mathcal{T}\n$$\n为继续进行，我们必须近似张量 $\\mathcal{T}$。在扩散极限下，方向分布 $p(\\mathbf{x},\\theta,t)$ 近似各向同性。我们可以用其主导项来近似，即 $p(\\mathbf{x},\\theta,t) \\approx \\frac{\\rho(\\mathbf{x},t)}{2\\pi}$。将此代入 $\\mathcal{T}$ 的定义中：\n$$\n\\mathcal{T} \\approx \\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) \\frac{\\rho}{2\\pi} \\, \\mathrm{d}\\theta = \\frac{\\rho}{2\\pi} \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta) \\, \\mathrm{d}\\theta\n$$\n让我们计算积分的分量。矩阵 $\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)$ 是 $v^2 \\begin{pmatrix} \\cos^2\\theta & \\cos\\theta\\sin\\theta \\\\ \\cos\\theta\\sin\\theta & \\sin^2\\theta \\end{pmatrix}$。\n-   xx-分量：$\\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\cos^2\\theta \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\frac{1+\\cos(2\\theta)}{2} \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\left[\\pi\\right] = \\frac{\\rho v^2}{2}$。\n-   yy-分量：$\\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\sin^2\\theta \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\frac{1-\\cos(2\\theta)}{2} \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\left[\\pi\\right] = \\frac{\\rho v^2}{2}$。\n-   xy-分量：$\\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\cos\\theta\\sin\\theta \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{4\\pi} \\int_0^{2\\pi} \\sin(2\\theta) \\, \\mathrm{d}\\theta = 0$。\n所以张量 $\\mathcal{T}$ 是对角且各向同性的：$\\mathcal{T} \\approx \\frac{\\rho v^2}{2} \\mathbf{I}$，其中 $\\mathbf{I}$ 是 $2 \\times 2$ 单位矩阵。\n\n将此结果代入近似通量方程中：\n$$\n\\lambda \\mathbf{J} \\approx - \\nabla \\cdot \\left(\\frac{\\rho v^2}{2} \\mathbf{I}\\right) = - \\frac{v^2}{2} \\nabla\\rho\n$$\n这给出了菲克第一扩散定律：\n$$\n\\mathbf{J}(\\mathbf{x},t) = - \\frac{v^2}{2\\lambda} \\nabla\\rho(\\mathbf{x},t)\n$$\n最后，我们将通量 $\\mathbf{J}$ 的这个表达式代回到连续性方程 $\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\mathbf{J} = 0$ 中：\n$$\n\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\left(- \\frac{v^2}{2\\lambda} \\nabla\\rho \\right) = 0\n$$\n$$\n\\frac{\\partial \\rho}{\\partial t} = \\frac{v^2}{2\\lambda} \\nabla^2\\rho\n$$\n这就是细胞密度的宏观演化方程，也就是扩散方程。通过将其与扩散方程的一般形式 $\\frac{\\partial \\rho}{\\partial t} = D \\nabla^2\\rho$ 进行比较，我们识别出有效扩散系数 $D$。\n这个结果对维度 $d=2$ 成立。对于一般维度 $d$，结果是 $D = v^2/(d\\lambda)$。", "answer": "$$\n\\boxed{\\frac{v^{2}}{2\\lambda}}\n$$", "id": "2719094"}, {"introduction": "合成生物学的核心在于“设计”与“构建”，而不仅仅是“分析”。这个计算实践将带您体验设计一个条带通基因表达回路的完整过程，其目标是在响应空间浓度梯度时，产生尽可能窄的表达带（即清晰的“边缘”）。您需要在一个离散的参数空间中进行搜索，以找到能最小化带宽同时保证有效输出的最优参数组合，这正是合成生物学中常见的工程优化挑战 [@problem_id:2719114]。", "problem": "一个合成多细胞边缘检测器可以通过一个带通基因表达回路来建模。在该回路中，一个形态发生素浓度场在空间上变化，每个细胞的稳态输出是根据局部形态发生素水平计算的激活型希尔函数和抑制型希尔函数的乘积。目标是找出能够最小化群体响应带宽的激活强度、抑制强度和希尔系数，同时在存在空间梯度的情况下保持非零的峰值输出。\n\n从以下经过充分检验的事实和建模假设出发。由转录因子（形态发生素）驱动的基因表达可以由希尔型占据函数近似。设形态发生素梯度是空间的光滑单调函数，并设稳态输出与一个激活项和一个抑制项的乘积成正比。对于一维域 $[0,1]$ 中的空间位置 $x$，定义形态发生素分布\n$$\ng(x) \\;=\\; g_{\\mathrm{lo}} \\;+\\; \\frac{g_{\\mathrm{hi}} - g_{\\mathrm{lo}}}{1 + \\exp\\!\\left(-\\frac{x - x_0}{\\sigma}\\right)} \\,,\n$$\n其中 $g_{\\mathrm{lo}} \\in \\mathbb{R}_{>0}$，$g_{\\mathrm{hi}} \\in \\mathbb{R}_{>0}$，$x_0 \\in (0,1)$，以及 $\\sigma \\in \\mathbb{R}_{>0}$。激活项为\n$$\n\\mathrm{Act}(g; K_a, n) \\;=\\; \\frac{g^n}{K_a^n + g^n} \\,,\n$$\n抑制项为\n$$\n\\mathrm{Rep}(g; K_r, m) \\;=\\; \\frac{K_r^m}{K_r^m + g^m} \\,.\n$$\n定义在位置 $x$ 的细胞的稳态输出为\n$$\ny(x; s_a, s_r, n, m) \\;=\\; \\left[\\mathrm{Act}\\!\\left(g(x); K_a, n\\right)\\right]^{s_a} \\cdot \\left[\\mathrm{Rep}\\!\\left(g(x); K_r, m\\right)\\right]^{s_r} \\,,\n$$\n其中，$s_a \\in \\mathbb{R}_{>0}$ 和 $s_r \\in \\mathbb{R}_{>0}$ 分别是激活和抑制强度，$n \\in \\mathbb{N}$ 和 $m \\in \\mathbb{N}$ 分别是激活和抑制的希尔系数。阈值 $K_a$ 和 $K_r$ 是固定的，且 $K_a < K_r$，这确保了在中间浓度 $g$ 范围内存在一个带通机制。\n\n使用半峰全宽（FWHM）来定义带宽，其中半峰全宽（FWHM）是输出超过其峰值一半的空间宽度。设 $y_{\\max} = \\max_{x \\in [0,1]} y(x)$ 且 $\\tau = \\frac{1}{2} y_{\\max}$。FWHM 由以下公式计算\n$$\nW \\;=\\; \\max\\{x \\in [0,1] \\;|\\; y(x) \\ge \\tau\\} \\;-\\; \\min\\{x \\in [0,1] \\;|\\; y(x) \\ge \\tau\\} \\,,\n$$\n该值在离散网格上计算。为避免平凡解，通过施加 $y_{\\max} \\ge \\varepsilon$（其中 $\\varepsilon \\in \\mathbb{R}_{>0}$ 为一个小数）来要求一个非零峰值。\n\n您的任务是编写一个完整的、可运行的程序。对于每个指定的测试用例，该程序在离散参数网格中搜索 $(s_a, s_r, n, m)$，并返回在满足 $y_{\\max} \\ge \\varepsilon$ 的条件下使带宽 $W$ 最小化的参数元组。如果在数值容差范围内 $W$ 出现并列值，则优先选择具有更大 $y_{\\max}$ 的元组；如果仍然并列，则优先选择具有更小 $\\ell_2$ 范数 $\\sqrt{s_a^2 + s_r^2 + n^2 + m^2}$ 的元组。\n\n所有量都是无量纲的。不使用角度。不使用百分比。\n\n对所有测试用例使用以下固定常量：\n- $K_a = 0.5$,\n- $K_r = 2.0$,\n- $g_{\\mathrm{lo}} = 0.01$,\n- $g_{\\mathrm{hi}} = 10.0$,\n- $x_0 = 0.5$,\n- $\\varepsilon = 10^{-3}$,\n- 空间域 $x \\in [0,1]$ 使用 $N = 1001$ 个点进行均匀离散化。\n\n对每个测试用例使用以下参数搜索网格：\n- 激活强度 $s_a \\in \\{0.5, 1.0, 2.0\\}$,\n- 抑制强度 $s_r \\in \\{0.5, 1.0, 2.0\\}$,\n- 激活希尔系数 $n \\in \\{1, 2, 3, 4\\}$,\n- 抑制希尔系数 $m \\in \\{1, 2, 3, 4\\}$.\n\n使用以下梯度陡度值的测试套件：\n- 测试用例 A: $\\sigma = 0.02$,\n- 测试用例 B: $\\sigma = 0.10$,\n- 测试用例 C: $\\sigma = 0.50$.\n\n对于每个测试用例，计算最佳元组 $(s_a, s_r, n, m)$、其实现的 FWHM $W$ 以及其峰值输出 $y_{\\max}$。您的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表。每个测试用例的结果必须是 $[s_a, s_r, n, m, W, y_{\\max}]$ 形式的列表，其中 $W$ 和 $y_{\\max}$ 四舍五入到 $6$ 位小数，并按测试用例 A、B、C 的顺序排列。例如，整体输出格式必须为\n$$\n\\big[ [s_a^{(A)}, s_r^{(A)}, n^{(A)}, m^{(A)}, W^{(A)}, y_{\\max}^{(A)}], [s_a^{(B)}, s_r^{(B)}, n^{(B)}, m^{(B)}, W^{(B)}, y_{\\max}^{(B)}], [s_a^{(C)}, s_r^{(C)}, n^{(C)}, m^{(C)}, W^{(C)}, y_{\\max}^{(C)}] \\big].\n$$\n不应打印任何额外文本。", "solution": "所提出的问题是一个明确定义的计算优化任务，其根源于合成生物学领域。目标是为一个旨在用作群体水平边缘检测器的合成基因回路确定最佳参数。这是通过设计一个对空间变化的形态发生素浓度产生带通滤波器响应的系统来实现的。最佳参数是指那些能在确保足够高峰值表达水平的同时，最小化基因表达带的空间宽度的参数。\n\n该系统建模如下。定义一个一维空间域 $x \\in [0,1]$。在该域上，建立了一个由S型函数描述的形态发生素浓度分布 $g(x)$：\n$$\ng(x) = g_{\\mathrm{lo}} + \\frac{g_{\\mathrm{hi}} - g_{\\mathrm{lo}}}{1 + \\exp\\left(-\\frac{x - x_0}{\\sigma}\\right)}\n$$\n此处，$g_{\\mathrm{lo}}$ 和 $g_{\\mathrm{hi}}$ 是最小和最大形态发生素浓度，$x_0$ 是梯度的中心，$\\sigma$ 控制梯度的陡度。\n\n每个位置 $x$ 处的细胞通过一个基因回路对局部形态发生素浓度 $g(x)$ 作出响应。该回路的稳态输出（记为 $y(x)$）被建模为一个激活项和一个抑制项的乘积。这两项都由希尔函数描述，希尔函数是用于建模协同分子相互作用的标准函数。\n\n激活项 $\\mathrm{Act}(g)$ 由下式给出：\n$$\n\\mathrm{Act}(g; K_a, n) = \\frac{g^n}{K_a^n + g^n}\n$$\n其中 $K_a$ 是激活阈值，$n$ 是激活希尔系数，用于量化响应的陡度。\n\n抑制项 $\\mathrm{Rep}(g)$ 由下式给出：\n$$\n\\mathrm{Rep}(g; K_r, m) = \\frac{K_r^m}{K_r^m + g^m}\n$$\n其中 $K_r$ 是抑制阈值，$m$ 是抑制希尔系数。条件 $K_a < K_r$ 确保了激活发生在比抑制更低的形态发生素浓度下，从而在中间浓度下形成一个表达带。\n\n总细胞输出 $y(x)$ 是四个可调参数的函数：激活强度 $s_a$、抑制强度 $s_r$ 以及希尔系数 $n$ 和 $m$。\n$$\ny(x; s_a, s_r, n, m) = \\left[\\mathrm{Act}(g(x); K_a, n)\\right]^{s_a} \\cdot \\left[\\mathrm{Rep}(g(x); K_r, m)\\right]^{s_r}\n$$\n\n主要优化目标是最小化表达分布 $y(x)$ 的带宽 $W$。带宽通过半峰全宽（FWHM）来量化。首先，找到峰值输出：$y_{\\max} = \\max_{x \\in [0,1]} y(x)$。然后，FWHM 定义为输出 $y(x)$ 等于其最大值一半（$\\tau = \\frac{1}{2} y_{\\max}$）的两点之间的空间距离。形式上：\n$$\nW = \\max\\{x \\in [0,1] \\mid y(x) \\ge \\tau\\} - \\min\\{x \\in [0,1] \\mid y(x) \\ge \\tau\\}\n$$\n为防止平凡解（例如，处处为零的输出，其宽度为零），施加了一个约束：峰值输出必须高于一个最小阈值 $\\varepsilon$。\n$$\ny_{\\max} \\ge \\varepsilon\n$$\n因此，优化问题是：\n$$\n\\min_{(s_a, s_r, n, m)} W \\quad \\text{subject to} \\quad y_{\\max} \\ge \\varepsilon\n$$\n寻找最优参数集 $(s_a, s_r, n, m)$ 的过程是在一个指定的离散网格上进行的。鉴于搜索空间的离散性，解必定存在。为确保解的唯一性，定义了一套打破并列的规则：\n1.  如果多个参数集产生相同的最小宽度 $W$（在小的数值容差范围内），则优先选择产生最大峰值输出 $y_{\\max}$ 的集合。\n2.  如果仍然存在并列，则选择具有最小 $\\ell_2$ 范数 $\\sqrt{s_a^2 + s_r^2 + n^2 + m^2}$ 的集合。\n\n为解决每个测试用例的该问题，计算过程包括以下步骤：\n1.  将空间域 $x \\in [0,1]$ 离散化为 $N=1001$ 个等距点。\n2.  对于给定的测试用例 $\\sigma$ 值，计算离散网格上的形态发生素分布 $g(x)$。\n3.  从提供的参数搜索网格中，遍历 $(s_a, s_r, n, m)$ 的所有可能组合。\n4.  对于每个参数组合，计算输出分布 $y(x)$，找到其最大值 $y_{\\max}$，并验证 $y_{\\max} \\ge \\varepsilon$。\n5.  如果满足约束条件，则计算带宽 $W$。\n6.  将得到的 $(W, y_{\\max})$ 和参数范数与迄今为止找到的最佳值进行比较，应用分层优化标准来更新已知的最佳解。\n7.  在探索整个参数网格后，记录最优参数元组 $(s_a, s_r, n, m)$ 及其对应的度量指标 $W$ 和 $y_{\\max}$。对每个测试用例重复此过程。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the synthetic biology edge detector optimization problem.\n    \"\"\"\n\n    # --- Fixed constants ---\n    KA = 0.5\n    KR = 2.0\n    G_LO = 0.01\n    G_HI = 10.0\n    X0 = 0.5\n    EPSILON = 1e-3\n    N_POINTS = 1001\n\n    # --- Spatial domain ---\n    x_grid = np.linspace(0, 1, N_POINTS)\n\n    # --- Parameter search grid ---\n    sa_grid = [0.5, 1.0, 2.0]\n    sr_grid = [0.5, 1.0, 2.0]\n    n_grid = [1, 2, 3, 4]\n    m_grid = [1, 2, 3, 4]\n\n    # --- Test cases for gradient steepness ---\n    test_cases = [\n        0.02,  # Case A\n        0.10,  # Case B\n        0.50,  # Case C\n    ]\n\n    all_results = []\n    TOL = 1e-9  # Numerical tolerance for float comparisons\n\n    for sigma in test_cases:\n        # Calculate morphogen profile for the current test case\n        g = G_LO + (G_HI - G_LO) / (1.0 + np.exp(-(x_grid - X0) / sigma))\n\n        # Initialize tracking variables for the best parameters\n        best_W = float('inf')\n        best_y_max_at_W = -1.0\n        best_norm_at_tie = float('inf')\n        best_params = None\n\n        # Grid search over all parameter combinations\n        for sa in sa_grid:\n            for sr in sr_grid:\n                for n in n_grid:\n                    for m in m_grid:\n                        # Calculate activation and repression terms\n                        gn = np.power(g, n)\n                        gm = np.power(g, m)\n                        \n                        act = gn / (KA**n + gn)\n                        rep = (KR**m) / (KR**m + gm)\n                        \n                        # Calculate cell output profile\n                        y = np.power(act, sa) * np.power(rep, sr)\n\n                        # Find peak output and check constraint\n                        y_max = np.max(y)\n                        if y_max < EPSILON:\n                            continue\n\n                        # Calculate Full Width at Half Maximum (FWHM)\n                        tau = 0.5 * y_max\n                        above_half_max_indices = np.where(y >= tau)[0]\n                        \n                        if above_half_max_indices.size > 1:\n                            W = x_grid[above_half_max_indices[-1]] - x_grid[above_half_max_indices[0]]\n                        else:\n                            # If only one point is at/above half-max, width is zero.\n                            W = 0.0\n\n                        # Apply optimization criteria with tie-breaking\n                        is_better = False\n                        if W < best_W - TOL:\n                            is_better = True\n                        elif W < best_W + TOL:  # Tie in W\n                            if y_max > best_y_max_at_W + TOL:\n                                is_better = True\n                            elif y_max > best_y_max_at_W - TOL:  # Tie in W and y_max\n                                norm = np.sqrt(sa**2 + sr**2 + n**2 + m**2)\n                                if norm < best_norm_at_tie - TOL:\n                                    is_better = True\n                        \n                        if is_better:\n                            best_W = W\n                            best_y_max_at_W = y_max\n                            best_norm_at_tie = np.sqrt(sa**2 + sr**2 + n**2 + m**2)\n                            best_params = (sa, sr, n, m)\n                            \n        # Store the result for the current test case\n        if best_params:\n            sa_opt, sr_opt, n_opt, m_opt = best_params\n            # Recalculate y_max for the optimal parameters, as best_y_max_at_W might be from a different set in case of a norm tie\n            gn_opt = np.power(g, n_opt)\n            gm_opt = np.power(g, m_opt)\n            act_opt = gn_opt / (KA**n_opt + gn_opt)\n            rep_opt = (KR**m_opt) / (KR**m_opt + gm_opt)\n            y_opt = np.power(act_opt, sa_opt) * np.power(rep_opt, sr_opt)\n            final_y_max = np.max(y_opt)\n\n            all_results.append([sa_opt, sr_opt, n_opt, m_opt, best_W, final_y_max])\n\n    # Format the final output string exactly as required\n    result_strings = []\n    for res in all_results:\n        sa, sr, n, m, W, y_max = res\n        result_strings.append(f\"[{sa}, {sr}, {n}, {m}, {W:.6f}, {y_max:.6f}]\")\n    \n    final_output = f\"[{','.join(result_strings)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2719114"}]}