{"hands_on_practices": [{"introduction": "“RNA世界”假说面临的一个核心挑战是其基本构件——核糖（ribose）——的化学不稳定性。本练习通过一个假设的史前化学场景，运用化学平衡的基本原理，来量化研究一个可能的解决方案：环境中存在的矿物质（如硼酸盐）对核糖的稳定作用。通过这个计算，你将亲身体验如何评估一个史前地球化学情景的合理性，并理解简单的化学相互作用如何为生命起源的关键步骤创造条件。[@problem_id:2778209]", "problem": "在生命起源前的化学中，已知硼酸根阴离子通过形成可逆的 $1:1$ 配合物来稳定核糖，这会降低游离核糖的浓度，从而在其仅以游离形式易于降解的情况下，降低其降解速率。考虑平衡 $$R + B \\rightleftharpoons RB,$$ 其中 $R$ 代表核糖，$B$ 代表硼酸根，$RB$ 代表核糖-硼酸根配合物。结合常数根据质量作用定律定义为 $$K = \\frac{[RB]}{[R][B]}.$$ 在恒定温度下准备了一个合成重建实验，其中总核糖浓度 $[R]_{\\mathrm{tot}} = 1\\ \\mathrm{mM}$，总硼酸根浓度 $[B]_{\\mathrm{tot}} = 50\\ \\mathrm{mM}$，结合常数 $K = 2000\\ \\mathrm{M}^{-1}$。所有这些值在核糖降解的时间尺度上均被假定为不随时间变化。\n\n假设只有游离核糖 $R$ 会发生一级降解，其内禀速率常数为 $k_{0}$，而与硼酸根配合的核糖 $RB$ 受到保护（不降解）。利用 $R$ 和 $B$ 的质量作用定律和质量守恒，从第一性原理出发，推导平衡状态下与硼酸根配合的核糖所占分数的表达式，并在给定条件下计算其数值。然后，确定观测到的一级降解速率的相应降低因子，该因子定义为比率 $k_{\\mathrm{eff}}/k_{0}$，其中 $k_{\\mathrm{eff}}$ 是在有硼酸根存在时的有效一级速率常数。\n\n按顺序报告所要求的两个量：(i) 与硼酸根配合的核糖所占的分数，以及 (ii) 降低因子 $k_{\\mathrm{eff}}/k_{0}$。将两个答案均表示为无单位的小数，并各自四舍五入到四位有效数字。", "solution": "该问题陈述经核实具有科学依据、问题明确且客观。这是一个化学平衡和动力学中的标准问题，并包含了获得唯一解所需的所有信息。我们将基于第一性原理进行推导。\n\n该系统由处于平衡状态的可逆配合反应所控制：\n$$R + B \\rightleftharpoons RB$$\n平衡状态由结合常数 $K$ 的质量作用定律描述：\n$$K = \\frac{[RB]}{[R][B]}$$\n其中 $[R]$、$[B]$ 和 $[RB]$ 分别是游离核糖、游离硼酸根和核糖-硼酸根配合物的平衡浓度。\n\n核糖和硼酸根的总浓度是守恒的。质量平衡方程为：\n$$[R]_{\\mathrm{tot}} = [R] + [RB]$$\n$$[B]_{\\mathrm{tot}} = [B] + [RB]$$\n\n根据这些守恒定律，我们可以用配合物浓度 $[RB]$ 来表示游离物质的浓度：\n$$[R] = [R]_{\\mathrm{tot}} - [RB]$$\n$$[B] = [B]_{\\mathrm{tot}} - [RB]$$\n\n将这些表达式代入平衡方程，得到一个仅含 $[RB]$ 的方程：\n$$K = \\frac{[RB]}{([R]_{\\mathrm{tot}} - [RB])([B]_{\\mathrm{tot}} - [RB])}$$\n\n令 $x = [RB]$。方程变为：\n$$K = \\frac{x}{([R]_{\\mathrm{tot}} - x)([B]_{\\mathrm{tot}} - x)}$$\n将其整理成标准二次方程形式 $ax^2 + bx + c = 0$：\n$$K(([R]_{\\mathrm{tot}} - x)([B]_{\\mathrm{tot}} - x)) = x$$\n$$K([R]_{\\mathrm{tot}}[B]_{\\mathrm{tot}} - ([R]_{\\mathrm{tot}} + [B]_{\\mathrm{tot}})x + x^2) = x$$\n$$Kx^2 - K([R]_{\\mathrm{tot}} + [B]_{\\mathrm{tot}})x - x + K[R]_{\\mathrm{tot}}[B]_{\\mathrm{tot}} = 0$$\n$$Kx^2 - (K([R]_{\\mathrm{tot}} + [B]_{\\mathrm{tot}}) + 1)x + K[R]_{\\mathrm{tot}}[B]_{\\mathrm{tot}} = 0$$\n\n在求解 $x$ 之前，我们必须确保单位一致。给定的浓度单位是 $\\mathrm{mM}$，而结合常数的单位是 $\\mathrm{M}^{-1}$。我们将所有浓度转换为 $\\mathrm{M}$：\n$$[R]_{\\mathrm{tot}} = 1\\ \\mathrm{mM} = 1 \\times 10^{-3}\\ \\mathrm{M}$$\n$$[B]_{\\mathrm{tot}} = 50\\ \\mathrm{mM} = 50 \\times 10^{-3}\\ \\mathrm{M} = 5 \\times 10^{-2}\\ \\mathrm{M}$$\n结合常数为 $K = 2000\\ \\mathrm{M}^{-1}$。\n\n我们计算二次方程的系数：\n$$a = K = 2000$$\n$$b = -(K([R]_{\\mathrm{tot}} + [B]_{\\mathrm{tot}}) + 1) = -(2000(1 \\times 10^{-3} + 5 \\times 10^{-2}) + 1) = -(2000(0.051) + 1) = -(102 + 1) = -103$$\n$$c = K[R]_{\\mathrm{tot}}[B]_{\\mathrm{tot}} = 2000(1 \\times 10^{-3})(5 \\times 10^{-2}) = 2000(5 \\times 10^{-5}) = 0.1$$\n\n得到的关于 $x$ 的二次方程是：\n$$2000x^2 - 103x + 0.1 = 0$$\n\n我们使用二次公式 $x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$ 求解 $x$：\n$$x = \\frac{103 \\pm \\sqrt{(-103)^2 - 4(2000)(0.1)}}{2(2000)}$$\n$$x = \\frac{103 \\pm \\sqrt{10609 - 800}}{4000}$$\n$$x = \\frac{103 \\pm \\sqrt{9809}}{4000}$$\n数值上，$\\sqrt{9809} \\approx 99.0404$。这给出了两个可能的 $x$ 的解：\n$$x_1 = \\frac{103 + 99.0404}{4000} \\approx \\frac{202.0404}{4000} \\approx 0.05051\\ \\mathrm{M}$$\n$$x_2 = \\frac{103 - 99.0404}{4000} \\approx \\frac{3.9596}{4000} \\approx 0.0009899\\ \\mathrm{M}$$\n配合物的浓度 $x = [RB]$ 不能超过限制反应物的总浓度，即核糖的总浓度 $[R]_{\\mathrm{tot}} = 0.001\\ \\mathrm{M}$。解 $x_1$ 违反了此条件，因此在物理上是不可能的。因此，唯一有效的物理解是 $x = x_2 \\approx 0.0009899\\ \\mathrm{M}$。\n\n要计算的第一个量是与硼酸根配合的核糖所占的分数。这由比率 $\\frac{[RB]}{[R]_{\\mathrm{tot}}}$ 给出。\n$$\\text{配合分数} = \\frac{x}{[R]_{\\mathrm{tot}}} = \\frac{0.000989901...}{1 \\times 10^{-3}} = 0.989901...$$\n四舍五入到四位有效数字，与硼酸根配合的核糖的分数是 $0.9899$。\n\n接下来，我们确定观测到的降解速率的降低因子 $k_{\\mathrm{eff}}/k_{0}$。问题陈述表明，只有游离核糖 $R$ 通过一级过程降解。因此，总核糖 $[R]_{\\mathrm{tot}} = [R] + [RB]$ 的损失速率由 $[R]$ 的降解速率决定：\n$$\\frac{d[R]_{\\mathrm{tot}}}{dt} = -k_0[R]$$\n有效一级速率常数 $k_{\\mathrm{eff}}$ 是相对于总核糖浓度定义的：\n$$\\frac{d[R]_{\\mathrm{tot}}}{dt} = -k_{\\mathrm{eff}}[R]_{\\mathrm{tot}}$$\n将两个速率表达式相等，可得：\n$$-k_{\\mathrm{eff}}[R]_{\\mathrm{tot}} = -k_0[R]$$\n$$k_{\\mathrm{eff}} = k_0 \\frac{[R]}{[R]_{\\mathrm{tot}}}$$\n降低因子是比率 $\\frac{k_{\\mathrm{eff}}}{k_0}$：\n$$\\frac{k_{\\mathrm{eff}}}{k_0} = \\frac{[R]}{[R]_{\\mathrm{tot}}}$$\n这个因子恰好是平衡时保持游离状态的核糖的分数。该分数可以计算为 1 减去与硼酸根配合的核糖的分数：\n$$\\frac{k_{\\mathrm{eff}}}{k_0} = \\frac{[R]_{\\mathrm{tot}} - [RB]}{[R]_{\\mathrm{tot}}} = 1 - \\frac{[RB]}{[R]_{\\mathrm{tot}}}$$\n使用高精度的配合分数数值：\n$$\\frac{k_{\\mathrm{eff}}}{k_0} = 1 - 0.989901... = 0.0100989...$$\n四舍五入到四位有效数字，降低因子是 $0.01010$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0.9899 & 0.01010\n\\end{pmatrix}\n}\n$$", "id": "2778209"}, {"introduction": "有了稳定的化学构件后，下一步便是将它们组装成能够自我复制并携带信息的聚合物。然而，任何复制过程都不可避免地会产生错误，这限制了遗传信息量的增长。本练习将引导你探索信息含量（即“基因组”长度 $L$）与复制保真度 $q$ 之间的根本性权衡，这是由 Manfred Eigen 的准种理论所描述的“错误阈值”概念。你将推导出并计算在给定的错误率和选择优势 $\\sigma$ 下，一个早期复制子所能稳定维持的最大信息量。[@problem_id:2778240]", "problem": "在早期复制子的准种框架中，一个核心的定量概念是误差阈，它限制了在存在复制错误的情况下，通过选择所能维持的最大信息含量（基因组长度）。考虑一个合成生物学实验，该实验构建了一个最小的核糖核酸（RNA）复制子，其指定的主序列长度为 $L$ 个核苷酸。在每个复制事件中，每个位点都以每位点错误概率 $e$ 独立复制，因此每位点保真度为 $q = 1 - e$。与被归一化为1的基准突变体云相比，主序列以相对适应度（复制速率）$\\sigma$ 进行复制。假设种群大小无限，并处于经典准种模型中的稳态条件下。\n\n仅使用以下基本要素：\n- 各个位点复制事件的独立性，\n- 每位点保真度的定义 $q = 1 - e$，\n- 独立事件的概率法则，\n- 一个谱系要得以延续，其每一代精确主序列拷贝的期望产量（相对于基准）必须超过1这一要求，\n\n请推导主序列的存续准则（用 $q$、$L$ 和 $\\sigma$ 表示），并说明在固定的 $e$ 和 $\\sigma$ 下，该准则如何限制最大允许基因组长度 $L$。\n\n然后，对于 $e = 0.03$，$L = 100$ 和 $\\sigma = 2$：\n1. 计算 $q^{L}$。\n2. 使用您推导出的准则，判断主序列在此 $L$ 下是否能够存续。\n3. 解析求解在此 $e$ 和 $\\sigma$ 下，使得存续条件成立的最大整数 $L$。\n\n将 $q^{L}$ 四舍五入到四位有效数字。将最终答案以行向量 $(q^{L}, L_{\\text{max}})$ 的形式报告，其中 $L_{\\text{max}}$ 为整数。两个条目均为无量纲量。", "solution": "所给问题是分子进化定量理论中的一个标准练习，具体涉及由 Eigen 和 Schuster 发展的准种模型。该问题具有科学依据，提法明确，并包含了获得唯一解所需的所有信息。因此，我将进行推导和计算。\n\n问题要求从第一性原理出发，推导长度为 $L$ 的主序列的存续准则。让我们按照题目所给的定义来界定各项术语。\n主序列的长度为 $L$ 个核苷酸。\n每位点保真度为 $q$，其中 $q = 1 - e$，$e$ 是每位点错误概率。\n$L$ 个位点中每个位点的复制都是一个独立事件。\n\n产生一个长度为 $L$ 的完整序列的完美、无错误拷贝的概率，是正确复制第一个位点、并且正确复制第二个位点、依此类推，直到第 $L$ 个位点的概率。由于这些事件的独立性，这个总概率（我们记为 $Q_{L}$）是各个位点概率的乘积：\n$$\nQ_{L} = \\underbrace{q \\times q \\times \\dots \\times q}_{L \\text{ times}} = q^{L}\n$$\n这个表达式 $q^{L}$ 代表了主序列产生的后代中，本身就是主序列精确拷贝的那部分所占的比例。\n\n题目给定主序列的相对复制速率（适应度）为 $\\sigma$，而基准突变体种群的复制速率被归一化为 $1$。这意味着在每个复制周期中，一个主序列模板平均产生 $\\sigma$ 个后代。\n\n问题将存续准则定义为“每一代精确主序列拷贝的期望产量（相对于基准）必须超过1”这一要求。精确主序列拷贝的产生速率是主序列的总复制速率 $\\sigma$ 乘以一个后代是精确拷贝的概率 $Q_{L}$。基准种群以速率 $1$ 复制。因此，主序列存续的准则（即其种群增长速度快于平均突变体）是其产生完美拷贝的速率必须大于基准的复制速率。用数学方式表达为：\n$$\n\\sigma Q_{L} > 1\n$$\n代入我们关于 $Q_{L}$ 的表达式：\n$$\n\\sigma q^{L} > 1\n$$\n这就是主序列的存续准则。\n\n为了说明这个准则如何限制最大允许基因组长度 $L$，我们针对 $L$ 求解这个不等式。\n$$\n\\sigma (1 - e)^{L} > 1\n$$\n两边除以 $\\sigma$（题目给定 $\\sigma$ 大于 $1$，所以是正数）：\n$$\n(1 - e)^{L} > \\frac{1}{\\sigma}\n$$\n为了分离出 $L$，我们对不等式两边取自然对数。由于 $\\ln(x)$ 是一个严格递增函数，不等号的方向保持不变。\n$$\n\\ln((1 - e)^{L}) > \\ln\\left(\\frac{1}{\\sigma}\\right)\n$$\n使用对数性质 $\\ln(a^b) = b\\ln(a)$ 和 $\\ln(1/a) = -\\ln(a)$：\n$$\nL \\ln(1 - e) > -\\ln(\\sigma)\n$$\n关键是要认识到，因为要使问题有意义，错误率 $e$ 必须大于 $0$（而要使复制成为可能，则 $e$ 小于 $1$），保真度 $q = 1 - e$ 满足 $0 < q < 1$。因此，其自然对数 $\\ln(1 - e)$ 是一个负数。当我们在不等式两边同除以这个负数时，必须反转不等号的方向。\n$$\nL < \\frac{-\\ln(\\sigma)}{\\ln(1 - e)}\n$$\n这可以更清晰地写成：\n$$\nL < \\frac{\\ln(\\sigma)}{-\\ln(1 - e)} = \\frac{\\ln(\\sigma)}{\\ln\\left(\\frac{1}{1-e}\\right)}\n$$\n这个结果就是著名的误差阈。它表明，对于给定的错误率 $e$ 和适应度优势 $\\sigma$，基因组长度 $L$ 必须低于某个临界值，主序列中的信息才能通过选择被稳定地维持。如果 $L$ 超过这个阈值，序列就会“熔化”到突变体云中，主序列就会丢失。\n\n现在，我们必须对给定参数进行所需的计算：$e = 0.03$，$L = 100$ 和 $\\sigma = 2$。\n\n首先，我们计算每位点保真度 $q$：\n$$\nq = 1 - e = 1 - 0.03 = 0.97\n$$\n\n1. 计算 $q^{L}$：\n题目要求我们计算 $(0.97)^{100}$ 并四舍五入到四位有效数字。\n$$\nq^{L} = (0.97)^{100} \\approx 0.0475525 \\dots\n$$\n四舍五入到四位有效数字，我们得到 $0.04755$。\n\n2. 判断在 $L = 100$ 时是否存续：\n我们检查存续准则 $\\sigma q^{L} > 1$ 是否满足。\n$$\n\\sigma q^{L} = 2 \\times (0.97)^{100} \\approx 2 \\times 0.04755 = 0.0951\n$$\n由于 $0.0951 < 1$，条件不满足。主序列在此长度下无法存续；它已经越过了误差阈。\n\n3. 求解最大整数 $L$（记为 $L_{\\text{max}}$）：\n我们必须找到满足存续准则的最大整数 $L$。\n$$\n\\sigma (1 - e)^{L} > 1\n$$\n$$\n2 \\times (0.97)^{L} > 1\n$$\n如前所述，这等价于：\n$$\nL < \\frac{\\ln(2)}{\\ln\\left(\\frac{1}{0.97}\\right)}\n$$\n或者，也可以写为：\n$$\nL < \\frac{\\ln(2)}{-\\ln(0.97)}\n$$\n我们现在计算右边的值：\n$$\n\\frac{\\ln(2)}{-\\ln(0.97)} \\approx \\frac{0.693147}{-(-0.030459)} \\approx \\frac{0.693147}{0.030459} \\approx 22.757\n$$\n所以条件是 $L < 22.757$。由于 $L$ 必须是整数，满足此不等式的最大整数值为 $22$。\n因此，$L_{\\text{max}} = 22$。\n\n最终答案要求提供一个包含计算出的 $q^L$ 和 $L_{\\text{max}}$ 的行向量。\n四舍五入到四位有效数字的 $q^L$ 值为 $0.04755$。\n$L_{\\text{max}}$ 的值为 $22$。\n最终应报告的向量是 $(0.04755, 22)$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0.04755 & 22\n\\end{pmatrix}\n}\n$$", "id": "2778240"}, {"introduction": "生命不仅需要单个的复制子，还需要一个能够支持其存在和复制的代谢网络。本练习将向你介绍一种源自系统生物学的强大计算工具——流平衡分析（Flux Balance Analysis, FBA），并将其应用于一个假设的“原始代谢网络”。通过解决这个线性规划问题，你将学习如何确定该网络在特定环境资源限制下的最优性能（例如，最大化某种内部催化剂的产量），从而深入理解早期代谢系统的组织逻辑和优化原则。[@problem_id:2778230]", "problem": "您的任务是实现一个线性规划求解器，用于计算一个极简原始代谢网络的最优稳态通量分布。该网络用于合成生物学中研究生命起源。目标是在遵守质量守恒、不可逆性和摄取边界的条件下，最大化一种内部催化剂的生产速率。您的程序必须基于下述的纯数学公式进行运算，并按指定的单位和格式产生数值输出。\n\n基本原理：\n- 稳态下的质量守恒定律意味着每种内部代谢物的净生产速率为零。这表示为矩阵方程 $$S\\,\\mathbf{v} = \\mathbf{0},$$ 其中 $S$ 是化学计量矩阵，$\\mathbf{v}$ 是反应通量向量。\n- 反应不可逆性被建模为通量的下界，通常为 $v_i \\ge 0$。\n- 从环境中摄取底物受到物理传输或可利用性限制的约束，这被建模为摄取通量的上界。\n- 生产速率的最大化是关于通量的线性目标，构成一个线性规划问题。\n\n网络设定：\n- 内部代谢物（$S$ 的行）：$[S, A, B, C, \\mathrm{Cat}]$。\n- 反应（$S$ 的列）：\n$$\n\\begin{aligned}\nR_0 &: \\mathrm{S_{ext}} \\rightarrow S, \\\\\nR_1 &: S \\rightarrow A, \\\\\nR_2 &: A \\rightarrow 2B, \\\\\nR_3 &: B \\rightarrow C, \\\\\nR_4 &: C \\rightarrow \\mathrm{Cat}, \\\\\nR_5 &: \\mathrm{Cat} \\rightarrow \\mathrm{sink}, \\\\\nR_6 &: S \\rightarrow \\mathrm{waste}.\n\\end{aligned}\n$$\n- 化学计量矩阵 $S \\in \\mathbb{R}^{5 \\times 7}$，其代谢物顺序为 $[S, A, B, C, \\mathrm{Cat}]$，反应顺序为 $[R_0,R_1,R_2,R_3,R_4,R_5,R_6]$：\n$$\nS = \n\\begin{bmatrix}\n+1 & -1 & 0 & 0 & 0 & 0 & -1 \\\\\n0 & +1 & -1 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & +2 & -1 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & +1 & -1 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & +1 & -1 & 0\n\\end{bmatrix}.\n$$\n- 设通量向量为 $\\mathbf{v} \\in \\mathbb{R}^{7}$，顺序为 $[v_0, v_1, v_2, v_3, v_4, v_5, v_6]$，对应于 $[R_0, \\ldots, R_6]$。\n- 目标：最大化 $v_5$（$R_5$ 的通量，即催化剂的输出），由于 $S\\,\\mathbf{v}=\\mathbf{0}$，在稳态下这等于内部催化剂的净生产速率。\n\n约束条件：\n- 稳态质量平衡：$$S\\,\\mathbf{v} = \\mathbf{0}。$$\n- 不可逆性：$$v_i \\ge 0 \\text{ for all } i \\in \\{0,1,2,3,4,5,6\\}。$$\n- 底物摄取边界：$$0 \\le v_0 \\le U_{\\max},$$ 其中 $U_{\\max}$ 由每个测试用例提供。\n- $R_3$ 的瓶颈边界：$$0 \\le v_3 \\le B_{\\max},$$ 其中 $B_{\\max}$ 由每个测试用例提供（如果不构成限制，则可视为无界）。\n- $R_6$ 的维持消耗：$$v_6 \\ge M_{\\min},$$ 其中 $M_{\\min}$ 由每个测试用例提供。\n\n单位：\n- 所有通量必须以毫摩尔每克干重每小时（mmol gDW$^{-1}$ h$^{-1}$）表示。\n- 您的程序必须为每个测试用例输出最优目标值 $v_5$，单位为 mmol gDW$^{-1}$ h$^{-1}$，并四舍五入到恰好 $3$ 位小数。\n- 如果给定测试用例的线性规划问题不可行（例如，当 $U_{\\max} < M_{\\min}$ 时），则输出值 $-1.000$ 作为表示不可行的标记值（单位仍为 mmol gDW$^{-1}$ h$^{-1}$）。\n\n测试套件：\n请为以下参数集 $(U_{\\max}, B_{\\max}, M_{\\min})$ 提供结果，所有数值单位均为 mmol gDW$^{-1}$ h$^{-1}$：\n- 情况 $1$：$(5.0, \\text{无界}, 1.0)$。\n- 情况 $2$：$(2.5, 3.0, 0.0)$。\n- 情况 $3$：$(0.0, \\text{无界}, 0.0)$。\n- 情况 $4$：$(0.5, \\text{无界}, 1.0)$。\n- 情况 $5$：$(10.0, 0.0, 0.0)$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，例如 $$[r_1,r_2,r_3,r_4,r_5],$$ 其中每个 $r_i$ 是情况 $i$ 的四舍五入后的最优 $v_5$ 值（单位为 mmol gDW$^{-1}$ h$^{-1}$），如果不可行则为 $-1.000$。不应打印任何其他文本。", "solution": "所述问题是有效的。它构成了一个良构的线性规划问题，是通量平衡分析（FBA）在系统生物学和合成生物学中预测代谢通量的一个标准应用。其前提基于稳态质量守恒原理，具有科学依据，并且该网络虽然极简，但也是一个有效的用于研究的抽象表示。所有必要的参数和约束都已提供。我们开始求解。\n\n问题在于找到一个通量向量 $\\mathbf{v} = [v_0, v_1, v_2, v_3, v_4, v_5, v_6]^T$，在一组线性约束条件下，使一个目标函数最大化。\n\n目标是最大化催化剂输出通量 $v_5$。这可以写作最大化 $Z = \\mathbf{c}^T \\mathbf{v}$，其中目标向量为 $\\mathbf{c} = [0, 0, 0, 0, 0, 1, 0]^T$。\n\n约束条件如下：\n$1$. 稳态质量平衡：$S\\mathbf{v} = \\mathbf{0}$，其中 $S$ 是给定的 $5 \\times 7$ 化学计量矩阵。这提供了一个包含5个线性方程的方程组：\n$$\n\\begin{cases}\nv_0 - v_1 - v_6 = 0 \\\\\nv_1 - v_2 = 0 \\\\\n2v_2 - v_3 = 0 \\\\\nv_3 - v_4 = 0 \\\\\nv_4 - v_5 = 0\n\\end{cases}\n$$\n$2$. 不可逆性：$v_i \\ge 0$ 对于所有 $i \\in \\{0, 1, \\dots, 6\\}$。\n$3$. 底物摄取边界：$v_0 \\le U_{\\max}$。\n$4$. 瓶颈边界：$v_3 \\le B_{\\max}$。\n$5$. 维持消耗：$v_6 \\ge M_{\\min}$。\n\n该系统可以进行解析求解。来自 $S\\mathbf{v} = \\mathbf{0}$ 的等式约束定义了化学计量矩阵的零空间。我们可以通过用独立通量表示相关通量来简化该系统。从方程组可得：\n- $v_1 = v_2$\n- $v_3 = 2v_2$\n- $v_4 = v_3 = 2v_2$\n- $v_5 = v_4 = 2v_2$\n\n将这些代入第一个方程：\n$v_0 - v_2 - v_6 = 0 \\implies v_0 = v_2 + v_6$。\n\n整个通量向量 $\\mathbf{v}$ 可以用两个自变量来描述，我们可以选择 $v_2$和 $v_6$：\n$\\mathbf{v} = [(v_2 + v_6), v_2, v_2, 2v_2, 2v_2, 2v_2, v_6]^T$。\n\n目标是最大化 $v_5 = 2v_2$，这等价于最大化 $v_2$。约束条件可用 $v_2$ 和 $v_6$ 重写：\n- 不可逆性 $v_i \\ge 0$：这可简化为 $v_2 \\ge 0$ 和 $v_6 \\ge 0$，因为所有其他通量都是这两者的正线性组合。\n- 摄取边界 $v_0 \\le U_{\\max}$：$v_2 + v_6 \\le U_{\\max}$。\n- 瓶颈边界 $v_3 \\le B_{\\max}$：$2v_2 \\le B_{\\max}$ 或 $v_2 \\le B_{\\max}/2$。\n- 维持消耗 $v_6 \\ge M_{\\min}$：此项保持不变。\n\n现在我们有了一个简化的线性规划问题：\n最大化 $2v_2$，约束条件为：\n$1$. $v_2 + v_6 \\le U_{\\max}$\n$2$. $v_2 \\le B_{\\max}/2$\n$3$. $v_6 \\ge M_{\\min}$\n$4$. $v_2 \\ge 0$\n\n为了最大化 $v_2$，从约束（1）可知 $v_2 \\le U_{\\max} - v_6$。当 $v_6$ 最小时，$v_2$ 的上界最大。从约束（3）可知，$v_6$ 的最小值为 $M_{\\min}$。因此，$v_2 \\le U_{\\max} - M_{\\min}$。\n\n结合所有关于 $v_2$ 的上界，我们得到：\n$v_2 \\le \\min(U_{\\max} - M_{\\min}, B_{\\max}/2)$。\n如果 $B_{\\max}$ 被指定为“无界”，此约束被省略，则 $v_2 \\le U_{\\max} - M_{\\min}$。\n\n要存在可行解，可行集必须非空。关系式 $v_0 = v_2+v_6$、$v_2 \\ge 0$ 和 $v_6 \\ge M_{\\min}$ 意味着 $v_0 \\ge M_{\\min}$。摄取约束为 $v_0 \\le U_{\\max}$。因此，必须满足 $M_{\\min} \\le U_{\\max}$。如果 $U_{\\max} < M_{\\min}$，则约束条件相互矛盾，问题不可行。\n\n如果问题是可行的（$U_{\\max} \\ge M_{\\min}$），$v_2$ 的最大值为 $\\max(0, \\min(U_{\\max} - M_{\\min}, B_{\\max}/2))$。由于所有测试用例的参数 $U_{\\max}$ 和 $M_{\\min}$ 在可行时都满足 $U_{\\max} - M_{\\min} \\ge 0$，并且 $B_{\\max} \\ge 0$，所以 $\\max(0, \\dots)$ 是多余的。最优目标值为 $v_5^{\\text{opt}} = 2 \\times v_2^{\\max}$。\n\n所以，解析解是：\n- 如果 $U_{\\max} < M_{\\min}$，问题不可行。\n- 否则，$v_5^{\\text{opt}} = 2 \\times \\min(U_{\\max} - M_{\\min}, B_{\\max}/2) = \\min(2(U_{\\max} - M_{\\min}), B_{\\max})$。当 $B_{\\max}$ 无界时，这简化为 $v_5^{\\text{opt}} = 2(U_{\\max} - M_{\\min})$。\n\n虽然对于这个简单的网络可以得到解析解，但解决此类问题（特别是对于更大型的网络）的通用方法是使用数值线性规划求解器。所提供的代码通过为 `scipy.optimize.linprog` 函数构造完整问题来实现这种通用方法，这是一种更鲁棒和可扩展的技术。该求解器能正确识别不可行性，并为可行情况计算出最优目标值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import linprog\n\ndef solve():\n    \"\"\"\n    Computes the optimal steady-state flux distribution for a minimal\n    protometabolic network using linear programming.\n    \"\"\"\n\n    # The stoichiometric matrix S for the metabolites [S, A, B, C, Cat] and\n    # reactions [R0, R1, R2, R3, R4, R5, R6].\n    S = np.array([\n        [1, -1, 0, 0, 0, 0, -1],  # Metabolite S\n        [0, 1, -1, 0, 0, 0, 0],   # Metabolite A\n        [0, 0, 2, -1, 0, 0, 0],   # Metabolite B\n        [0, 0, 0, 1, -1, 0, 0],   # Metabolite C\n        [0, 0, 0, 0, 1, -1, 0]    # Metabolite Cat\n    ])\n\n    # Objective function: Maximize v_5 (flux of R5).\n    # scipy.optimize.linprog performs minimization, so we minimize -v_5.\n    # The flux vector v is [v0, v1, v2, v3, v4, v5, v6].\n    c = np.array([0, 0, 0, 0, 0, -1, 0])\n\n    # Equality constraints: S * v = 0 representing mass balance at steady state.\n    A_eq = S\n    b_eq = np.zeros(S.shape[0])\n\n    # Test cases with parameters (U_max, B_max, M_min) in mmol gDW^-1 h^-1.\n    # 'None' represents an unbounded parameter.\n    test_cases = [\n        (5.0, None, 1.0),   # Case 1\n        (2.5, 3.0, 0.0),   # Case 2\n        (0.0, None, 0.0),   # Case 3\n        (0.5, None, 1.0),   # Case 4\n        (10.0, 0.0, 0.0)   # Case 5\n    ]\n\n    results = []\n    for U_max, B_max, M_min in test_cases:\n        # Bounds for each flux v_i: (lower_bound, upper_bound).\n        # None indicates no bound in that direction.\n        bounds = [\n            (0, U_max),      # 0 <= v0 <= U_max\n            (0, None),       # v1 >= 0\n            (0, None),       # v2 >= 0\n            (0, B_max),      # 0 <= v3 <= B_max\n            (0, None),       # v4 >= 0\n            (0, None),       # v5 >= 0\n            (M_min, None)    # v6 >= M_min\n        ]\n\n        # Solve the linear programming problem.\n        # The 'highs' method is robust for this class of problems.\n        res = linprog(c, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method='highs')\n\n        if res.success:\n            # The objective was to minimize -v5, so the optimal v5 is -res.fun.\n            optimal_v5 = -res.fun\n            # Correct for floating point artifacts close to zero.\n            if abs(optimal_v5) < 1e-9:\n                optimal_v5 = 0.0\n            results.append(f\"{optimal_v5:.3f}\")\n        else:\n            # If the solver fails, the problem is infeasible as per problem spec.\n            results.append(\"-1.000\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2778230"}]}