{"hands_on_practices": [{"introduction": "通量平衡分析 (Flux Balance Analysis, FBA) 是预测全基因组代谢网络表型的强大工具。通过模拟单个反应的基因敲除，我们可以系统性地识别对细胞生长等关键目标至关重要的反应，这是指导基因组最小化和发现潜在药物靶点的第一步。本练习将指导您实现这一基本算法，通过求解一系列线性规划问题来完成一次“计算机内”的必需反应筛选 [@problem_id:2741599]。", "problem": "给定一个处于稳态的代谢网络的标准流平衡分析（FBA）设置，其中反应通量由向量 $v \\in \\mathbb{R}^{n}$ 表示，内部代谢物的质量平衡由化学计量矩阵 $S \\in \\mathbb{R}^{m \\times n}$ 编码。稳态假设意味着 $S v = 0$。反应边界满足 $l \\le v \\le u$，其中 $l, u \\in \\mathbb{R}^{n}$ 且对于所有索引 $i \\in \\{0,\\ldots,n-1\\}$ 都有 $l_i \\le u_i$。线性目标 $c^{\\top} v$ 代表一个选定的细胞目标，如生长，其中 $c \\in \\mathbb{R}^{n}$。对索引 $j$ 的反应“敲除”是在现有约束之外强制执行 $v_j = 0$。定义一个阈值 $\\mu_0 \\in \\mathbb{R}$，并称反应 $j$ 是 $\\mu_0$-必需的，如果在敲除 $v_j = 0$ 的条件下，$c^{\\top} v$ 的最优值严格小于 $\\mu_0$。为了避免平凡分类，如果未扰动问题（无敲除）的最优值严格小于 $\\mu_0$，那么按照惯例返回空集（在这种情况下，没有反应被报告为 $\\mu_0$-必需的）。\n\n从稳态质量守恒 $S v = 0$、边界 $l \\le v \\le u$ 以及反应敲除定义为 $v_j = 0$ 出发，为每个反应 $j$ 构建用于判断其 $\\mu_0$-必需性的线性规划（LP）。实现一个算法，该算法在给定 $(S,l,u,c,\\mu_0)$ 的情况下，返回作为 $\\mu_0$-必需反应的从零开始的索引 $j$ 的排序列表。\n\n您的实现必须求解LP\n$$\n\\max_{v \\in \\mathbb{R}^{n}} \\; c^{\\top} v \\quad \\text{subject to} \\quad S v = 0,\\;\\; l \\le v \\le u\n$$\n以获得未扰动最优值，并对每个反应敲除索引 $j \\in \\{0,\\ldots,n-1\\}$，求解\n$$\n\\max_{v \\in \\mathbb{R}^{n}} \\; c^{\\top} v \\quad \\text{subject to} \\quad S v = 0,\\;\\; l \\le v \\le u,\\;\\; v_j = 0.\n$$\n使用严格比较“$<$”来测试敲除最优值是否低于 $\\mu_0$。如果未扰动最优值严格小于 $\\mu_0$，则按照惯例返回空集。\n\n测试套件。使用以下测试用例，每个用例由 $(S,l,u,c,\\mu_0)$ 指定，所有数组均以行主序给出。下面定义中的所有数字都是精确的实数。\n\n- 测试用例 $1$（冗余途径，阈值等于野生型最优值）：\n$$\nS_1 =\n\\begin{bmatrix}\n1 & -1 & 0 & -1 & -1 \\\\\n0 & 1 & -1 & 0 & 1\n\\end{bmatrix},\\quad\nl_1 = \\begin{bmatrix} 0 & 0 & 0 & 0 & 0 \\end{bmatrix},\\quad\nu_1 = \\begin{bmatrix} 10 & 1000 & 1000 & 1000 & 1000 \\end{bmatrix}, \\\\\nc_1 = \\begin{bmatrix} 0 & 0 & 1 & 0 & 0 \\end{bmatrix},\\quad\n\\mu_{0,1} = 10.\n$$\n  反应按 $S_1$ 的列排序：索引 $0$ 是摄取，索引 $2$ 是目标输出。\n\n- 测试用例 $2$（相同网络，零阈值）：\n  $$\n  S_2 = S_1,\\;\\; l_2 = l_1,\\;\\; u_2 = u_1,\\;\\; c_2 = c_1,\\;\\; \\mu_{0,2} = 0.\n  $$\n\n- 测试用例 $3$（存在阻塞反应，阈值等于野生型最优值）：\n  $$\n  S_3 = \\begin{bmatrix} 1 & -1 & -1 \\end{bmatrix},\\quad\n  l_3 = \\begin{bmatrix} 0 & 0 & 0 \\end{bmatrix},\\quad\n  u_3 = \\begin{bmatrix} 1 & 1000 & 0 \\end{bmatrix},\\quad\n  c_3 = \\begin{bmatrix} 0 & 1 & 0 \\end{bmatrix},\\quad\n  \\mu_{0,3} = 1.\n  $$\n\n- 测试用例 $4$（阈值高于野生型最优值，按惯例返回空集）：\n  $$\n  S_4 = S_3,\\;\\; l_4 = l_3,\\;\\; u_4 = u_3,\\;\\; c_4 = c_3,\\;\\; \\mu_{0,4} = 2.\n  $$\n\n您的程序必须为每个测试用例计算，在所述惯例下，作为 $\\mu_0$-必需反应的从零开始的索引的排序列表。最终输出格式为单行，其中包含所有测试用例的结果，形式为方括号括起来的逗号分隔列表。与测试用例对应的每个元素本身应该是一个整数列表。例如，一个包含四个测试用例的有效输出可能看起来像 $[ [0,2], [\\,], [0,1], [\\,] ]$。\n您的程序应生成单行输出，包含方括号括起来的逗号分隔列表形式的结果（例如，$ [result1,result2,result3,result4]$）。此问题不涉及单位。不涉及角度。任何地方都不得使用百分比；任何比率（如果需要）必须表示为小数。", "solution": "问题陈述需要进行验证。\n\n**第1步：提取给定信息**\n- 化学计量矩阵：$S \\in \\mathbb{R}^{m \\times n}$\n- 反应通量向量：$v \\in \\mathbb{R}^{n}$\n- 稳态方程：$S v = 0$\n- 通量边界：$l \\le v \\le u$，其中 $l, u \\in \\mathbb{R}^{n}$ 且 $l_i \\le u_i$ 对于 $i \\in \\{0,\\ldots,n-1\\}$\n- 线性目标函数：最大化 $c^{\\top} v$，其中 $c \\in \\mathbb{R}^{n}$\n- 索引为 $j$ 的反应敲除：$v_j = 0$\n- 必需性阈值：$\\mu_0 \\in \\mathbb{R}$\n- $\\mu_0$-必需性的定义：如果在 $v_j=0$ 约束下 $c^{\\top} v$ 的最优值严格小于 $\\mu_0$，则反应 $j$ 是 $\\mu_0$-必需的。\n- 惯例：如果未扰动最优值严格小于 $\\mu_0$，则 $\\mu_0$-必需反应的集合为空。\n- 任务：给定 $(S,l,u,c,\\mu_0)$，找到作为 $\\mu_0$-必需反应的从零开始的索引的排序列表。\n- 该问题提供了四个具体测试用例，包含 $(S,l,u,c,\\mu_0)$ 的数值。\n\n**第2步：使用提取的给定信息进行验证**\n- **科学依据**：该问题是使用流平衡分析（FBA）进行的标准“计算机模拟”（in-silico）单基因/反应敲除分析。FBA是代谢网络约束性建模的基石。整个公式植根于化学计量、质量平衡和数学优化的既定原则。它在科学上是有效的。\n- **良构性**：该问题需要求解一系列线性规划（LP）。一个通过在由线性等式和不等式描述的可行域上最大化线性目标来定义的LP是一个良构的数学问题。可行域 $P = \\{v \\in \\mathbb{R}^n \\mid Sv=0, l \\le v \\le u\\}$ 是一个凸多面体。如果 $P$ 非空且有界（这在具有约束摄取的代谢模型中是典型情况），则保证存在最优解。必需性的标准是用数学上精确的（严格不等式）定义的，没有任何歧义。该问题是良构的。\n- **客观性**：该问题使用了精确的数学语言和定义进行陈述。所有术语都经过了正式规定。没有主观或非科学内容。\n\n**第3步：结论与行动**\n该问题是有效的。它是一个定义明确的计算任务，基于可靠的科学和数学原理。将提供一个算法解决方案。\n\n**基于原理的解决方案设计**\n\n任务是识别代谢网络中的 $\\mu_0$-必需反应。这通过系统地模拟每个反应的敲除，并观察其对细胞目标（如生物质生产）的影响来实现。整个过程是基于线性规划（LP）的计算工作流。\n\n**1. 线性规划公式**\n分析的核心是求解以下形式的LP：\n$$\n\\max_{v \\in \\mathbb{R}^{n}} \\; c^{\\top} v \\quad \\text{subject to} \\quad S v = 0,\\;\\; l \\le v \\le u\n$$\n标准的LP求解器，例如 `scipy.optimize.linprog`，被设计用来解决最小化问题。最大化问题 $\\max c^{\\top}v$ 等价于最小化问题 $\\min (-c)^{\\top}v$。因此，我们将求解：\n$$\n\\min_{v \\in \\mathbb{R}^{n}} \\; (-c)^{\\top} v \\quad \\text{subject to} \\quad S v = 0,\\;\\; l \\le v \\le u\n$$\n约束处理如下：\n- 等式约束 $S v = 0$ 直接作为 `A_eq`$=S$ 和 `b_eq`$=0$ 传递给求解器。\n- 不等式约束 $l \\le v \\le u$ 作为变量向量 $v$ 的逐元素边界传递。\n\n**2. 算法流程**\n该算法分三个主要阶段进行：\n\n**阶段A：分析未扰动系统**\n首先，我们求解原始未扰动网络的LP，以确定可能的最大目标值，我们将其表示为 $z_{wt}$。\n$$\nz_{wt} = \\max_{v} \\{c^{\\top}v \\mid Sv=0, l \\le v \\le u\\}\n$$\n该值作为野生型生物体性能的基线。\n\n**阶段B：应用必需性惯例**\n问题指定了一个惯例来处理野生型性能已经低于阈值的情况。如果 $z_{wt} < \\mu_0$，我们立即得出结论，相对于此阈值，没有任何反应可以被有意义地分类为必需的，并且算法必须返回一个空索引集。\n\n**阶段C：分析单反应敲除**\n如果 $z_{wt} \\ge \\mu_0$，我们继续逐个测试每个反应。对于每个反应索引 $j \\in \\{0, \\ldots, n-1\\}$：\n1.  **构建敲除LP**：通过添加约束 $v_j = 0$ 来模拟敲除。这最容易通过将反应 $j$ 的边界修改为 $[0, 0]$ 来实现，即 $l'_j = u'_j = 0$。\n2.  **求解敲除LP**：我们求解修改后的LP，以找到敲除条件下的最优目标值 $z_{ko,j}$。\n    $$\n    z_{ko,j} = \\max_{v} \\{c^{\\top}v \\mid Sv=0, l \\le v \\le u, v_j=0\\}\n    $$\n3.  **测试必需性**：我们应用 $\\mu_0$-必需性的定义。如果 $z_{ko,j} < \\mu_0$，则反应 $j$ 被认为是必需的，其索引被添加到我们的结果列表中。\n\n如果一次敲除导致LP不可行，即不存在稳态通量分布，则会出现一种特殊情况。在这种情况下，该反应对网络的完整性至关重要。目标值实际上是 $-\\infty$，它严格小于任何有限的 $\\mu_0$。因此，根据定义，任何其敲除导致问题不可行的反应都是 $\\mu_0$-必需的。我们的实现必须正确处理LP求解器返回的“不可行”状态。\n\n最终输出将是所有被识别为必需的索引 $j$ 的列表。由于反应是按其索引的升序进行测试的，因此结果列表将自然排序。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import linprog\n\ndef solve():\n    \"\"\"\n    Main function to define test cases and compute the final result.\n    \"\"\"\n\n    # Test Case 1\n    S1 = np.array([\n        [1, -1, 0, -1, -1],\n        [0, 1, -1, 0, 1]\n    ])\n    l1 = np.array([0, 0, 0, 0, 0])\n    u1 = np.array([10, 1000, 1000, 1000, 1000])\n    c1 = np.array([0, 0, 1, 0, 0])\n    mu0_1 = 10.0\n\n    # Test Case 2\n    S2, l2, u2, c2 = S1, l1, u1, c1\n    mu0_2 = 0.0\n\n    # Test Case 3\n    S3 = np.array([[1, -1, -1]])\n    l3 = np.array([0, 0, 0])\n    u3 = np.array([1, 1000, 0])\n    c3 = np.array([0, 1, 0])\n    mu0_3 = 1.0\n\n    # Test Case 4\n    S4, l4, u4, c4 = S3, l3, u3, c3\n    mu0_4 = 2.0\n\n    test_cases = [\n        (S1, l1, u1, c1, mu0_1),\n        (S2, l2, u2, c2, mu0_2),\n        (S3, l3, u3, c3, mu0_3),\n        (S4, l4, u4, c4, mu0_4),\n    ]\n\n    def _solve_lp(c, S, l, u, knockout_idx=None):\n        \"\"\"\n        Helper function to solve the FBA linear program.\n        Maximizes c^T v subject to Sv=0 and l <= v <= u.\n        A knockout sets the flux of a specific reaction to zero.\n        Returns the optimal objective value, or -np.inf if infeasible.\n        \"\"\"\n        # We use linprog to minimize, so we minimize (-c)^T v\n        c_min = -np.array(c, dtype=float)\n        \n        # Prepare constraints\n        S_mat = np.array(S, dtype=float)\n        m, n = S_mat.shape\n        b_eq = np.zeros(m)\n        \n        # Prepare bounds\n        bounds = list(zip(l, u))\n        if knockout_idx is not None:\n            # Enforce v_j = 0 by setting bounds to (0, 0)\n            bounds[knockout_idx] = (0.0, 0.0)\n\n        # Solve the LP\n        res = linprog(c=c_min, A_eq=S_mat, b_eq=b_eq, bounds=bounds, method='highs')\n\n        # Return objective value for the maximization problem\n        if res.success:\n            return -res.fun\n        else:\n            # If infeasible (status=2) or another error, the maximum objective value \n            # is effectively negative infinity.\n            return -np.inf\n\n    def find_essential_reactions(S, l, u, c, mu_0):\n        \"\"\"\n        Identifies mu_0-essential reactions based on the problem definition.\n        \"\"\"\n        num_reactions = len(c)\n        \n        # 1. Solve the unperturbed (wild-type) problem\n        opt_wt = _solve_lp(c, S, l, u)\n        \n        # 2. Apply the convention for trivial classification\n        # We use a small tolerance for floating point comparisons to be robust,\n        # although direct comparison works for the given test cases.\n        # The problem asks for \"strictly less than\".\n        if opt_wt < mu_0:\n            return []\n            \n        essential_indices = []\n        # 3. Iterate through all possible single-reaction knockouts\n        for j in range(num_reactions):\n            opt_ko = _solve_lp(c, S, l, u, knockout_idx=j)\n            \n            # 4. Check if the knockout objective is strictly less than the threshold\n            if opt_ko < mu_0:\n                essential_indices.append(j)\n                \n        # The list is already sorted as we iterate from 0 to n-1.\n        return essential_indices\n\n    results = []\n    for case in test_cases:\n        S, l, u, c, mu_0 = case\n        result = find_essential_reactions(S, l, u, c, mu_0)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    # The output should be a string representation of a list of lists, with no spaces.\n    print(str(results).replace(\" \", \"\"))\n\nsolve()\n\n```", "id": "2741599"}, {"introduction": "基因的必需性不仅是单个基因的固有属性，它也常常从基因间的相互作用中涌现。其中，合成致死是一种关键的遗传相互作用，指的是两个非必需基因的同时缺失对细胞是致命的，这为癌症治疗等领域提供了重要思路。本练习将教您如何从实验生长数据中量化这种遗传相互作用（即上位性 $\\epsilon$），并推导出确定合成致死相互作用的数学条件 [@problem_id:2741623]。", "problem": "一项在模型细菌中进行的基因组最小化研究将生长量化为指数形式，细胞数量为 $N(t) = N_{0}\\exp(r t)$，其中 $r$ 是马尔萨斯增长率。突变体的相对适应度 $w$ 定义为其增长率与野生型增长率之比。假设在没有遗传相互作用（无上位性）的情况下，两个基因缺失 $A$ 和 $B$ 对相对适应度的综合效应是乘性的。在成对必需基因作图筛选中，合成致死在操作上定义为：当生长表型低于检测阈值 $w < \\tau$ 时无法检测到，该阈值 $\\tau$ 由具体实验确定，而每个单基因缺失的表型则保持在阈值之上。\n\n仅根据这些定义和假设，完成以下任务：\n-推导缺失 $A$ 和 $B$ 之间的上位性参数 $\\epsilon$ 的表达式，其定义为观测到的双缺失相对适应度与独立性期望之间的偏差。\n-使用基于阈值的合成致死定义，推导一个用 $\\epsilon$、$w_{A}$、$w_{B}$ 和 $\\tau$ 表示的不等式，该不等式保证即使两个单缺失都存活，也会发生合成致死。\n-一个特定的数据集报告了指数增长率 $r_{\\mathrm{WT}} = 1.00\\,\\mathrm{h}^{-1}$、$r_{A} = 0.80\\,\\mathrm{h}^{-1}$ 和 $r_{B} = 0.85\\,\\mathrm{h}^{-1}$。双缺失突变体没有显示出可检测的生长，因此在计算中可以取 $w_{AB} \\approx 0$。计算该数据集的 $\\epsilon$ 数值。报告 $\\epsilon$ 的最终数值答案（无量纲）。将答案四舍五入到四位有效数字。", "solution": "在尝试解答之前，将对所述问题进行验证。\n\n**步骤 1：提取已知条件**\n- 细胞生长模型：$N(t) = N_{0}\\exp(r t)$，其中 $r$ 是马尔萨斯增长率。\n- 相对适应度 $w$ 的定义：突变体增长率与野生型增长率之比。\n- 无上位性的假设：两个基因缺失 $A$ 和 $B$ 对相对适应度的综合效应是乘性的。\n- 合成致死的定义：双突变体表型的相对适应度 $w < \\tau$（$\\tau$ 为检测阈值），而每个单缺失的相对适应度均高于该阈值。\n- 任务 1：推导上位性参数 $\\epsilon$ 的表达式，其定义为观测到的双缺失相对适应度与独立性期望之间的偏差。\n- 任务 2：推导一个用 $\\epsilon$、$w_{A}$、$w_{B}$ 和 $\\tau$ 表示的合成致死不等式。\n- 任务 3：对于一个增长率为 $r_{\\mathrm{WT}} = 1.00\\,\\mathrm{h}^{-1}$、$r_{A} = 0.80\\,\\mathrm{h}^{-1}$、$r_{B} = 0.85\\,\\mathrm{h}^{-1}$ 的数据集，计算 $\\epsilon$ 的数值。假设双缺失没有可检测的生长，意味着 $w_{AB} \\approx 0$。$\\epsilon$ 的最终值必须四舍五入到四位有效数字。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据。马尔萨斯增长、相对适应度、乘性上位性模型和合成致死等概念在定量遗传学和合成生物学中是标准且成熟的概念。该问题提法明确，提供了进行推导和计算所需的所有必要定义和数据。语言客观而精确。没有矛盾、信息缺失或伪科学论断。该问题是在应用基本生物学原理方面一个有效且可形式化的练习。\n\n**结论与行动：**\n该问题有效。将提供完整的解答。\n\n**解题推导**\n\n解答过程需要依次推导上位性参数、合成致死的条件以及进行数值计算。\n\n首先，我们形式化相对适应度的定义。突变体的相对适应度是其马尔萨斯增长率 $r_{\\mathrm{mut}}$ 与野生型增长率 $r_{\\mathrm{WT}}$ 之比。对于单基因缺失 $A$，相对适应度为 $w_{A}$。对于单基因缺失 $B$，相对适应度为 $w_{B}$。对于双缺失 $AB$，相对适应度为 $w_{AB}$。\n$$w_{A} = \\frac{r_{A}}{r_{\\mathrm{WT}}}$$\n$$w_{B} = \\frac{r_{B}}{r_{\\mathrm{WT}}}$$\n$$w_{AB} = \\frac{r_{AB}}{r_{\\mathrm{WT}}}$$\n野生型菌株的相对适应度为 $w_{\\mathrm{WT}} = \\frac{r_{\\mathrm{WT}}}{r_{\\mathrm{WT}}} = 1$。\n\n**任务 1：上位性参数 $\\epsilon$ 的推导**\n问题指出，在没有遗传相互作用（上位性）的情况下，两个缺失对相对适应度的综合效应是乘性的。这建立了独立性的零假设。因此，在无上位性的假设下，双突变体 $AB$ 的期望相对适应度，记作 $w_{AB, \\text{exp}}$，是各单个相对适应度值的乘积：\n$$w_{AB, \\text{exp}} = w_{A} w_{B}$$\n上位性参数 $\\epsilon$ 定义为观测到的双缺失相对适应度 $w_{AB}$ 与此独立性期望之间的偏差。该偏差计算为观测值与期望值之差。\n$$\\epsilon = w_{AB} - w_{AB, \\text{exp}}$$\n代入期望适应度的表达式，我们得到乘性上位性参数的正式表达式：\n$$\\epsilon = w_{AB} - w_{A} w_{B}$$\n该方程量化了遗传相互作用。如果 $\\epsilon = 0$，则基因不发生相互作用。如果 $\\epsilon > 0$，则相互作用是正向的（缓解性）。如果 $\\epsilon < 0$，则相互作用是负向的（加剧性）。\n\n**任务 2：合成致死不等式的推导**\n合成致死由一组条件定义。单缺失必须是存活的，意味着它们的生长是可检测的。这在操作上定义为其相对适应度高于检测阈值 $\\tau$。\n$$w_{A} > \\tau \\quad \\text{且} \\quad w_{B} > \\tau$$\n然而，双缺失必须是致死的或具有不可检测的生长表型。这定义为其相对适应度低于同一阈值 $\\tau$。\n$$w_{AB} < \\tau$$\n为了找到一个用 $\\epsilon$ 表示的不等式，我们使用推导出的上位性表达式来重写 $w_{AB}$。由 $\\epsilon = w_{AB} - w_{A} w_{B}$，我们可以将观测到的双突变体适应度表示为：\n$$w_{AB} = w_{A} w_{B} + \\epsilon$$\n将此代入双缺失表型的条件中，得到：\n$$w_{A} w_{B} + \\epsilon < \\tau$$\n整理这个不等式以分离出 $\\epsilon$，就得到了保证合成致死的条件，前提是单突变体是存活的：\n$$\\epsilon < \\tau - w_{A} w_{B}$$\n这个不等式指明了，对于给定的单突变体适应度值和检测阈值，产生合成致死相互作用所需的负上位性的大小。\n\n**任务 3：$\\epsilon$ 的数值计算**\n问题提供以下数据：\n- 野生型增长率：$r_{\\mathrm{WT}} = 1.00\\,\\mathrm{h}^{-1}$\n- 单突变体 A 增长率：$r_{A} = 0.80\\,\\mathrm{h}^{-1}$\n- 单突变体 B 增长率：$r_{B} = 0.85\\,\\mathrm{h}^{-1}$\n- 双突变体 $AB$ 显示无可见生长，这意味着其相对适应度 $w_{AB}$ 约等于零：$w_{AB} \\approx 0$。\n\n首先，我们计算单突变体的相对适应度：\n$$w_{A} = \\frac{r_{A}}{r_{\\mathrm{WT}}} = \\frac{0.80\\,\\mathrm{h}^{-1}}{1.00\\,\\mathrm{h}^{-1}} = 0.80$$\n$$w_{B} = \\frac{r_{B}}{r_{\\mathrm{WT}}} = \\frac{0.85\\,\\mathrm{h}^{-1}}{1.00\\,\\mathrm{h}^{-1}} = 0.85$$\n现在我们使用 $\\epsilon$ 的表达式和给定值进行计算：\n$$\\epsilon = w_{AB} - w_{A} w_{B}$$\n代入数值：\n$$\\epsilon \\approx 0 - (0.80)(0.85)$$\n单突变体适应度值的乘积是：\n$$(0.80)(0.85) = 0.68$$\n因此，上位性参数是：\n$$\\epsilon \\approx -0.68$$\n题目要求答案报告为四位有效数字。输入数据（$r_A$ 和 $r_B$ 具有两位有效数字）的精度通常会将结果的精度限制为两位有效数字。但是，遵循明确的指令，我们通过添加尾随零来报告该值。\n$$\\epsilon = -0.6800$$\n这个强烈的负上位性值是合成致死相互作用的典型特征。", "answer": "$$\\boxed{-0.6800}$$", "id": "2741623"}, {"introduction": "无论是实验性的还是计算性的，高通量必需基因筛选所产生的数据集通常存在严重的类别不平衡问题，即必需基因只占少数。在这种情况下，诸如准确率或ROC曲线下面积 (AUC) 等标准评估指标可能会产生误导，无法真实反映模型的性能。本练习将从第一性原理出发，通过分析推导证明为什么精确率-召回率 (Precision-Recall) 分析在这种场景下更为可靠，从而帮助您掌握评估必需性预测模型的关键技能 [@problem_id:2741586]。", "problem": "在一个基因组最小化项目中，您试图通过使用一个输出分数的二元分类器，根据转座子插入测序特征来预测一个细菌中的必需基因，从而对这些基因进行定位。设基因组中必需基因的比例（正类流行率）为 $p \\in (0,1)$，并假设在不同的决策阈值下，该分类器的受试者工作特征（ROC）曲线在经验上可以很好地用参数关系 $\\mathrm{TPR} = \\sqrt{\\mathrm{FPR}}$ 近似，其中 $\\mathrm{TPR}$ 是真阳性率，$\\mathrm{FPR}$ 是假阳性率。\n\n仅使用评估指标的基本定义和条件概率的 Bayes 法则来：\n\n1. 推导在给定阈值下，精确率作为 $p$、$\\mathrm{TPR}$ 和 $\\mathrm{FPR}$ 的函数的表达式。\n2. 使用给定的 ROC 关系，通过将精确率从 $0$ 到 $1$ 对召回率进行积分，计算精确率-召回率曲线下面积（平均精确率）作为 $p$ 的函数。\n3. 根据您的推导，简要说明为什么当必需基因是少数类时，ROC 曲线下面积不能反映类别不平衡带来的偏斜，而精确率-召回率曲线下面积却可以。\n\n您最终报告的答案必须是精确率-召回率曲线下面积关于 $p$ 的单个闭式解析表达式。不包含单位。无需数值舍入。", "solution": "目标是使用第一性原理将类别流行率与评估指标联系起来，然后分析量化类别不平衡的影响。\n\n基本定义：\n- 定义基因总数为 $N$，必需（阳性）基因的数量为 $N_{+} = pN$，非必需（阴性）基因的数量为 $N_{-} = (1-p)N$。\n- 真阳性率（TPR；灵敏度，召回率）是 $\\mathrm{TPR} = \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FN}}$。\n- 假阳性率（FPR）是 $\\mathrm{FPR} = \\frac{\\mathrm{FP}}{\\mathrm{FP} + \\mathrm{TN}}$。\n- 精确率（阳性预测值）是 $\\mathrm{Prec} = \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FP}}$。\n- 根据定义，在不同阈值下，$\\mathrm{TP} = N_{+} \\cdot \\mathrm{TPR} = pN \\cdot \\mathrm{TPR}$ 且 $\\mathrm{FP} = N_{-} \\cdot \\mathrm{FPR} = (1-p)N \\cdot \\mathrm{FPR}$。\n- 精确率可以通过 Bayes 法则推导，即一个被预测为阳性的样本确实是阳性的后验概率：$\\mathrm{Prec} = \\mathbb{P}(\\text{阳性} \\mid \\text{预测为阳性})$。\n\n步骤 1：推导精确率作为 $p$、$\\mathrm{TPR}$ 和 $\\mathrm{FPR}$ 的函数。\n使用上述定义，\n$$\n\\mathrm{Prec} \\;=\\; \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FP}}\n\\;=\\; \\frac{pN \\cdot \\mathrm{TPR}}{pN \\cdot \\mathrm{TPR} + (1-p)N \\cdot \\mathrm{FPR}}\n\\;=\\; \\frac{p \\cdot \\mathrm{TPR}}{p \\cdot \\mathrm{TPR} + (1-p) \\cdot \\mathrm{FPR}}。\n$$\n这显示了精确率对类别流行率 $p$ 的显式依赖关系。\n\n步骤 2：在给定 ROC 关系的情况下，计算精确率-召回率曲线下面积（平均精确率）作为 $p$ 的函数。\n给定 ROC 曲线 $\\mathrm{TPR} = \\sqrt{\\mathrm{FPR}}$。将 $\\mathrm{FPR}$ 写为 $u \\in [0,1]$，并记召回率 $R = \\mathrm{TPR} = f(u) = \\sqrt{u}$。在对应于 $u$ 的阈值下的精确率为\n$$\n\\mathrm{Prec}(u) \\;=\\; \\frac{p \\cdot R}{p \\cdot R + (1-p) \\cdot u}\n\\;=\\; \\frac{p \\sqrt{u}}{p \\sqrt{u} + (1-p) u}。\n$$\n为代数计算方便，将分子和分母同除以 $\\sqrt{u}$，得到\n$$\n\\mathrm{Prec}(u) \\;=\\; \\frac{p}{p + (1-p)\\sqrt{u}}。\n$$\n平均精确率（AP）定义为精确率-召回率曲线下的面积，\n$$\n\\mathrm{AP}(p) \\;=\\; \\int_{0}^{1} \\mathrm{Prec}(R) \\, dR。\n$$\n使用参数 $u$ 和关系 $R = \\sqrt{u}$，我们有 $dR = \\frac{1}{2} u^{-1/2} \\, du$，因此\n$$\n\\mathrm{AP}(p)\n\\;=\\; \\int_{u=0}^{1} \\mathrm{Prec}(u) \\, \\frac{dR}{du} \\, du\n\\;=\\; \\int_{0}^{1} \\frac{p}{p + (1-p)\\sqrt{u}} \\cdot \\frac{1}{2} u^{-1/2} \\, du。\n$$\n替换变量 $x = \\sqrt{u}$，则 $u = x^{2}$ 且 $du = 2x \\, dx$。那么 $u^{-1/2} = x^{-1}$。积分简化为\n$$\n\\mathrm{AP}(p)\n\\;=\\; \\int_{x=0}^{1} \\frac{p}{p + (1-p)x} \\, dx。\n$$\n这是一个初等积分。计算\n$$\n\\int \\frac{p}{p + (1-p)x} \\, dx\n\\;=\\; \\frac{p}{1-p} \\ln\\!\\big(p + (1-p)x\\big) \\;+\\; C。\n$$\n从 $x=0$ 到 $x=1$ 求定积分：\n$$\n\\mathrm{AP}(p)\n\\;=\\; \\frac{p}{1-p} \\left[ \\ln\\!\\big(p + (1-p)\\cdot 1\\big) - \\ln\\!\\big(p + (1-p)\\cdot 0\\big) \\right]\n\\;=\\; \\frac{p}{1-p} \\left[ \\ln(1) - \\ln(p) \\right]。\n$$\n由于 $\\ln(1) = 0$，我们得到闭式解\n$$\n\\mathrm{AP}(p) \\;=\\; - \\frac{p}{1-p} \\ln(p)。\n$$\n\n步骤 3：说明为什么 ROC 曲线下面积不能反映类别不平衡，而精确率-召回率曲线下面积可以。\nROC 曲线下面积为\n$$\n\\mathrm{AUC}_{\\mathrm{ROC}} \\;=\\; \\int_{0}^{1} \\mathrm{TPR} \\, d(\\mathrm{FPR})\n\\;=\\; \\int_{0}^{1} \\sqrt{u} \\, du\n\\;=\\; \\left[ \\frac{2}{3} u^{3/2} \\right]_{0}^{1}\n\\;=\\; \\frac{2}{3}，\n$$\n该值与 $p$ 无关，因为 $\\mathrm{TPR}$ 和 $\\mathrm{FPR}$ 是按类别总数归一化的比率。相比之下，精确率-召回率曲线下面积通过精确率中包含的后验几率依赖于 $p$。具体来说，\n$$\n\\mathrm{AP}(p) \\;=\\; - \\frac{p}{1-p} \\ln(p)，\n$$\n当 $p \\to 0$ 时，该值减小到 $0$；当 $p \\to 1$ 时，该值趋近于 $1$。因此，当必需基因构成少数类（$p$ 值很小）时，$\\mathrm{AUC}_{\\mathrm{ROC}}$ 保持为 $\\frac{2}{3}$，掩盖了类别不平衡的严重性，而 $\\mathrm{AP}(p)$ 则会减小，忠实地反映了在低流行率下实现高精确率的难度。这为在类别不平衡的必需基因定位场景中，优先选择精确率-召回率分析而非 ROC 分析提供了分析基础。\n\n要求的最终答案是 $\\mathrm{AP}(p)$ 的闭式表达式。", "answer": "$$\\boxed{-\\frac{p}{1-p}\\ln(p)}$$", "id": "2741586"}]}