{"hands_on_practices": [{"introduction": "检验我们对信号通路理解的一个有效方法是使用基因突变体来“破坏”特定的调控步骤。本练习使用YAP的拟磷酸化和去磷酸化突变体，来考察你对S127位点的磷酸化如何控制其亚细胞定位的理解。解决这个问题将加强你在细胞信号研究中预测和解释基因实验结果的能力。[@problem_id:2688222]", "problem": "您正在研究机械输入如何通过 Hippo 通路及其效应蛋白——Yes 相关蛋白 (YAP) 和带 PDZ 结合基序的转录共激活因子 (TAZ)——来调节器官生长。在上皮组织中，当 Hippo 激酶级联通路被激活时，哺乳动物 STE20 样激酶 (MST) 和大肿瘤抑制激酶 (LATS1/2) 会磷酸化 YAP，从而为 14-3-3 蛋白创造结合位点。14-3-3 蛋白促进 YAP 的细胞质滞留，并限制与增殖相关的 TEA 结构域 (TEAD) 依赖性转录。当 Hippo 级联通路失活时，去磷酸化的 YAP 在细胞核中积累并共激活 TEAD，从而促进生长，导致器官尺寸增大。\n\n您构建了两种 YAP 突变体：一种是磷酸化失活突变体 YAP $S127A$（位置 $127$ 的丝氨酸突变为丙氨酸，导致该位点不能被磷酸化），另一种是磷酸化模拟突变体 YAP $S127D$（位置 $127$ 的丝氨酸突变为天冬氨酸，模拟该位点持续带负电荷的状态）。您将野生型 YAP、YAP $S127A$ 或 YAP $S127D$ 以相当的水平表达于包埋在柔性细胞外基质中的上皮类器官中。这种柔性基质通常会产生低的细胞骨架张力并激活 Hippo 信号通路。\n\n您使用免疫荧光法定量 YAP 的亚细胞定位和 TEAD 靶基因的表达。基于激酶调控的蛋白磷酸化和定位控制的核心定义，以及公认的将磷酸化状态与 YAP 定位和活性联系起来的 Hippo 通路逻辑，以下哪个陈述最准确地预测了这些突变体在柔性基质上的定位结果，并正确推断出这些结果对 Hippo 通路活性读数意味着什么？\n\nA. 在柔性基质上，野生型 YAP 主要位于细胞质，YAP $S127A$ 主要位于细胞核，而 YAP $S127D$ 主要位于细胞质；因此，YAP $S127A$ 的核定位不能用来推断上游 Hippo 通路的活性，而野生型 YAP 的核定位则表明 Hippo 通路失活。\n\nB. 在柔性基质上，所有三种 YAP（野生型、YAP $S127A$ 和 YAP $S127D$）都主要位于细胞质，因为基质是软的；因此，YAP $S127A$ 的细胞质定位表明 Hippo 信号通路是失活的。\n\nC. 在柔性基质上，YAP $S127D$ 主要位于细胞核，因为其负电荷暴露了核定位信号，这表明激活的 Hippo 信号通路驱动 YAP 在细胞核中积累。\n\nD. 在柔性基质上，YAP $S127A$ 主要位于细胞质，因为它不能被磷酸化，因此不能从 $14-3-3$ 蛋白上解离；这表明 Hippo 驱动的 YAP 核排斥与磷酸化无关。\n\nE. 在柔性基质上，野生型 YAP 和 YAP $S127D$ 都主要位于细胞核，因为酸性氨基酸取代模拟了 RhoA 驱动的肌动蛋白张力；因此，YAP 的定位与 Hippo 状态无关，并且在这些条件下不能报告通路活性。", "solution": "首先应验证问题陈述的科学合理性和逻辑一致性。\n\n### 步骤 1：提取已知信息\n已知信息如下：\n- 研究的系统是 Hippo 通路、其效应蛋白 YAP（Yes 相关蛋白）和 TAZ（带 PDZ 结合基序的转录共激活因子），以及它们在机械转导和器官尺寸控制中的作用。\n- 当 Hippo 激酶级联通路被激活时，MST（哺乳动物 STE20 样激酶）和 LATS1/2（大肿瘤抑制激酶）会磷酸化 YAP。\n- 磷酸化的 YAP 为 14-3-3 蛋白创造结合位点。\n- 14-3-3 蛋白与磷酸化的 YAP 结合，促进其在细胞质中的滞留。\n- YAP 的细胞质滞留限制了其对 TEAD（TEA 结构域）转录因子的共激活作用，从而抑制增殖。\n- 当 Hippo 级联通路失活时，YAP 被去磷酸化，在细胞核中积累，共激活 TEAD，并促进生长。\n- 实验设置使用了包埋在柔性（软）细胞外基质中的上皮类器官。\n- 陈述中说明，柔性基质会产生低的细胞骨架张力并激活 Hippo 信号通路。\n- 表达了三种 YAP 变体：\n    1. 野生型 YAP (YAP WT)。\n    2. 一种磷酸化失活突变体 YAP S127A，其中位置 $127$ 的丝氨酸突变为丙氨酸，阻止了该位点的磷酸化。\n    3. 一种磷酸化模拟突变体 YAP S127D，其中位置 $127$ 的丝氨酸突变为天冬氨酸，模拟磷酸基团的负电荷。\n- 任务是预测这些 YAP 变体在柔性基质上的亚细胞定位，并推断将其用作 Hippo 通路活性报告分子的意义。\n\n### 步骤 2：使用提取的已知信息进行验证\n根据既定标准对问题陈述进行评估。\n- **科学依据充分**：该问题牢固地基于细胞生物学和信号转导的既定原则。Hippo-YAP/TAZ 通路、其受机械线索（机械转导）的调控、LATS 激酶的作用、S127 磷酸化、14-3-3 蛋白结合以及核-质穿梭，都是该领域有充分文献记载的基本概念。使用磷酸化失活（S 到 A）和磷酸化模拟（S 到 D）突变体是研究蛋白质磷酸化的标准且被广泛接受的技术。\n- **问题明确**：该问题提法明确。它提供了清晰的实验背景（柔性基质），定义了关键的分子角色及其相互作用，并要求基于这些既定机制做出具体预测。可以从所提供的信息中推导出一个唯一且合乎逻辑的解决方案。\n- **客观性**：语言精确且无偏见。它客观地描述了生物组分和机制，没有主观性。\n\n问题陈述没有表现出任何诸如科学性不健全、信息缺失或含糊不清等缺陷。这是一个分子和细胞生物学中标准的、教科书级别的问题。\n\n### 步骤 3：结论与行动\n问题陈述有效。将推导解决方案。\n\n### 解题推导\n\n问题的核心在于理解由机械环境引发的一系列事件。\n\n1.  **机械线索与 Hippo 通路活性**：柔性（软）基质导致低的细胞骨架张力。问题明确指出这种情况会激活 Hippo 信号通路。因此，LATS1/2 激酶是活化的。\n\n2.  **LATS1/2 激酶作用**：活化的 LATS1/2 激酶会磷酸化其底物。这里的关键底物是 YAP 的丝氨酸 $127$ ($S127$) 位点。\n\n3.  **磷酸化的后果**：YAP 在 $S127$ 位点的磷酸化为支架蛋白 14-3-3 家族创造了一个结合基序。问题陈述，14-3-3 的结合促进了 YAP 的细胞质滞留。\n\n基于这些原则，我们预测每种 YAP 变体的定位：\n\n-   **野生型 YAP (YAP WT)**：在活化的 LATS1/2 激酶存在的情况下（由于柔性基质），YAP WT 将在 $S127$ 位点被磷酸化。这种磷酸化的 YAP 将与 14-3-3 蛋白结合，并因此被滞留在细胞质中。因此，预计 YAP WT 主要位于细胞质。\n\n-   **磷酸化失活 YAP (YAP S127A)**：位置 $127$ 的丝氨酸（S）到丙氨酸（A）的突变去除了磷酸化所必需的羟基。因此，LATS1/2 激酶即使被激活，也无法在该位点磷酸化 YAP S127A。没有这种磷酸化，YAP S127A 就不能与 14-3-3 蛋白结合以被隔离在细胞质中。由于核输入是未被隔离的 YAP 的默认状态，YAP S127A 将在细胞核中积累。因此，其定位独立于（并抵抗）上游 Hippo 通路的“关闭”信号。因此，预计 YAP S127A 主要位于细胞核。\n\n-   **磷酸化模拟 YAP (YAP S127D)**：位置 $127$ 的丝氨酸（S）到天冬氨酸（D）的突变引入了一个持续的负电荷，模拟了磷酸基团的效果。该变体被“视为”在该位点被永久磷酸化。因此，无论 LATS1/2 激酶的活性状态如何，YAP S127D 都会与 14-3-3 蛋白结合。这种结合将导致其被滞留在细胞质中。因此，预计 YAP S127D 主要位于细胞质。\n\n在柔性基质上的预测总结：\n- YAP WT：主要位于细胞质\n- YAP S127A：主要位于细胞核\n- YAP S127D：主要位于细胞质\n\n现在，我们评估推断通路活性的逻辑含义。\n- YAP WT 的定位是通路活性的直接读数。细胞质中的 YAP WT 表明 Hippo 通路活化，而细胞核中的 YAP WT 表明 Hippo 通路失活。\n- 突变体的定位由其结构决定。相对于 S127 磷酸化位点，YAP S127A 持续位于细胞核，而 YAP S127D 持续位于细胞质。观察到 YAP S127A 的核定位并不能提供关于上游激酶活性的信息，因为即使 LATS 被激活，它也仍会位于细胞核。这只证实了该突变体的行为符合预期。\n\n### 选项评估\n\n**A. 在柔性基质上，野生型 YAP 主要位于细胞质，YAP $S127A$ 主要位于细胞核，而 YAP $S127D$ 主要位于细胞质；因此，YAP $S127A$ 的核定位不能用来推断上游 Hippo 通路的活性，而野生型 YAP 的核定位则表明 Hippo 通路失活。**\n- 定位预测：YAP WT 位于细胞质（正确），YAP S127A 位于细胞核（正确），YAP S127D 位于细胞质（正确）。这部分与我们的推导完全一致。\n- 关于 YAP S127A 的推断：YAP S127A 的核定位是持续性的，因为它不能被磷酸化。因此，观察到它在细胞核中并不能报告上游 LATS 激酶的活性。该陈述正确。\n- 关于 YAP WT 的推断：YAP WT 在*未*被磷酸化时才会发生核定位，这意味着 Hippo 通路失活。该陈述也是对通路逻辑的正确表述。\n- 结论：**正确**。\n\n**B. 在柔性基质上，所有三种（野生型、YAP $S127A$ 和 YAP $S127D$）都主要位于细胞质，因为基质是软的；因此，YAP $S127A$ 的细胞质定位表明 Hippo 信号通路是失活的。**\n- 定位预测：“所有三种……都主要位于细胞质”是错误的。YAP S127A 预计位于细胞核。\n- 推断：该推断基于一个错误的前提。此外，声称 YAP S127A 的细胞质定位表明 Hippo 失活与通路的机制相矛盾。\n- 结论：**错误**。\n\n**C. 在柔性基质上，YAP $S127D$ 主要位于细胞核，因为其负电荷暴露了核定位信号，这表明激活的 Hippo 信号通路驱动 YAP 在细胞核中积累。**\n- 定位预测：YAP S127D 被预测为位于细胞核，这是错误的。它应该位于细胞质。\n- 机制主张：声称负电荷“暴露了核定位信号”是错误的。来自磷酸化（或其模拟物）的负电荷促进与 14-3-3 的结合，导致细胞质滞留，从而有效地掩盖了核输入。\n- 通路结论：最后的子句“激活的 Hippo 信号通路驱动 YAP 在细胞核中积累”与既定事实相反。\n- 结论：**错误**。\n\n**D. 在柔性基质上，YAP $S127A$ 主要位于细胞质，因为它不能被磷酸化，因此不能从 $14-3-3$ 蛋白上解离；这表明 Hippo 驱动的 YAP 核排斥与磷酸化无关。**\n- 定位预测：YAP S127A 被预测为位于细胞质，这是错误的。\n- 机制主张：其推理“因为它不能被磷酸化，因此不能从 14-3-3 蛋白上解离”存在根本性缺陷。YAP 与 14-3-3 结合是*因为*它被磷酸化了。如果它不能被磷酸化，它首先就无法结合。\n- 通路结论：陈述“Hippo 驱动的 YAP 核排斥与磷酸化无关”是错误的。这个过程严重依赖于 S127 的磷酸化。\n- 结论：**错误**。\n\n**E. 在柔性基质上，野生型 YAP 和 YAP $S127D$ 都主要位于细胞核，因为酸性氨基酸取代模拟了 RhoA 驱动的肌动蛋白张力；因此，YAP 的定位与 Hippo 状态无关，并且在这些条件下不能报告通路活性。**\n- 定位预测：预测 YAP WT 和 YAP S127D 位于细胞核，这是错误的。在这两种条件下，它们都应该位于细胞质。\n- 机制主张：其推理“酸性氨基酸取代模拟了 RhoA 驱动的肌动蛋白张力”是一个混乱的类比。酸性氨基酸取代（S 到 D）模拟磷酸化。高 RhoA 活性和肌动蛋白张力与*硬*基质相关，这会*失活* Hippo 通路，导致*去磷酸化*的 YAP 进入细胞核。该选项混淆并颠倒了因果关系。\n- 结论：**错误**。\n\n基于以上分析，选项 A 是唯一一个正确预测了实验结果并对通路得出了正确逻辑结论的选项。", "answer": "$$\\boxed{A}$$", "id": "2688222"}, {"introduction": "生物学对刺激的反应通常不是线性的，而是表现出可被数学描述的协同、开关样行为。本练习要求你推导希尔方程（Hill equation），一个用于此类过程的经典模型，以形式化基质刚度 $E$ 与YAP在细胞核内积累 $N$ 之间的关系。这项练习是将定性的生物学观察转化为定量的、可预测模型的基础。[@problem_id:2688216]", "problem": "Yes-Associated Protein / Transcriptional co-Activator with PDZ-binding motif (YAP/TAZ)是一种机械敏感性转录共调节因子，其核定位随着底物硬度的增加而增加，这是由细胞骨架张力和粘着斑成熟引起的。考虑一个粗粒化力学转导模块，其中一个硬度传感复合物可以存在于非激活态或激活态，激活态会促进YAP的核输入。假设以下经过充分检验的事实和定义为基本依据：(i) 受体被配体占据的平衡占有率遵循质量作用平衡；(ii) 输入对复合物的协同激活可以通过源于$n$阶结合或协同转变的有效希尔-朗缪尔形式来描述；(iii) 半激活参数$K$是当激活态概率为$1/2$时的输入值；以及(iv) 在稳态下，YAP的核分数与力学传感器的激活态概率成正比，通过对总YAP进行归一化，比例常数设为1。将底物杨氏模量$E$（单位为$\\mathrm{kPa}$）视为传感器的有效输入。\n从这些假设出发，且不预设任何特定的目标公式，推导稳态核分数$N(E)$作为$E$、半激活硬度$K$和有效希尔系数$n$的函数表达式。然后，使用您推导的表达式，计算当$E = 10 \\ \\mathrm{kPa}$，$K = 8 \\ \\mathrm{kPa}$且$n = 3$时的$N$值。将$N$的最终值表示为一个无单位的十进制数，并四舍五入到四位有效数字。", "solution": "该问题要求推导YAP的稳态核分数（表示为$N(E)$）的表达式，该表达式是底物杨氏模量$E$、半激活硬度$K$和希尔系数$n$的函数。推导过程必须基于所给定的假设。\n\n假设(ii)指出，输入$E$对硬度传感复合物的协同激活可以用一个有效的希尔-朗缪尔形式来描述。希尔-朗缪尔方程模拟了表现出协同结合的系统的分数饱和度或激活度。设$P_{\\text{active}}(E)$为力学传感器处于激活态的概率。这个概率是系统对输入硬度$E$的分数响应。希尔方程的一般形式是：\n$$ P_{\\text{active}}(E) = \\frac{E^n}{K_{A}^n + E^n} $$\n其中，$n$是量化协同程度的希尔系数，$K_{A}$是表观激活常数，对应于产生半最大激活时的输入$E$值。\n\n假设(iii)将参数$K$定义为半激活硬度，即当激活态概率为$1/2$时的输入$E$值。我们必须验证我们所选择的希尔方程形式与此定义一致。让我们设$E = K$。那么，概率的表达式变为：\n$$ P_{\\text{active}}(K) = \\frac{K^n}{K^n + K^n} = \\frac{K^n}{2 K^n} = \\frac{1}{2} $$\n这与问题中提供的$K$的定义是一致的。因此，通用希尔方程中的参数$K_{A}$对应于问题陈述中给出的参数$K$。激活态概率的正确表达式是：\n$$ P_{\\text{active}}(E) = \\frac{E^n}{K^n + E^n} $$\n\n假设(iv)提供了力学传感器状态与YAP核分数$N(E)$之间的联系。它指出，在稳态下，$N(E)$与$P_{\\text{active}}(E)$成正比，且由于归一化，比例常数为1。因此，我们有直接关系：\n$$ N(E) = 1 \\cdot P_{\\text{active}}(E) $$\n代入$P_{\\text{active}}(E)$的表达式，我们得到推导出的YAP稳态核分数的表达式：\n$$ N(E) = \\frac{E^n}{K^n + E^n} $$\n\n问题的第二部分是计算在特定参数$E = 10 \\ \\mathrm{kPa}$，$K = 8 \\ \\mathrm{kPa}$和$n = 3$下的$N$值。我们将这些值代入推导出的公式中。$E$和$K$的单位相同，将会抵消，从而得到一个无量纲的$N$值，这对于一个分数是符合预期的。\n$$ N = \\frac{10^3}{8^3 + 10^3} $$\n我们进行幂的计算：\n$$ 10^3 = 1000 $$\n$$ 8^3 = 8 \\times 8 \\times 8 = 64 \\times 8 = 512 $$\n将这些值代回$N$的表达式中：\n$$ N = \\frac{1000}{512 + 1000} = \\frac{1000}{1512} $$\n为了得到最终的数值答案，我们进行除法运算：\n$$ N \\approx 0.66137566... $$\n问题要求结果四舍五入到四位有效数字。第五位有效数字是$7$，大于或等于$5$，因此我们将第四位有效数字向上取整。\n$$ N \\approx 0.6614 $$\n这就是最终的数值答案。", "answer": "$$\n\\boxed{0.6614}\n$$", "id": "2688216"}, {"introduction": "在定量研究中，一个关键任务是从充满噪声的实验数据中估计模型参数。这个高级实践模拟了这一真实场景，要求你使用贝叶斯推断方法，将希尔模型拟合到YAP定位的合成测量数据上。这项练习将为你提供计算数据分析和参数估计的实践经验，这是现代发育生物学研究的关键技能。[@problem_id:2688230]", "problem": "在器官尺寸控制中，Yes相关蛋白 (YAP) 和带有PDZ结合基序的转录共激活因子 (TAZ) 会转导来自细胞外基质的机械信号，以调控基因表达。一个被广泛重复的观察结果是，YAP/TAZ的核分数随着基质硬度的增加而单调饱和地增加，这与希尔型输入输出关系一致。考虑以下关于归一化核分数的独立测量的生成模型。\n\n给定一组独立测量值 $\\{(E_i, N_i)\\}_{i=1}^m$，其中 $E_i$ 是以千帕斯卡 ($\\mathrm{kPa}$) 为单位的基质杨氏模量，$N_i$ 是测得的YAP/TAZ核分数（无量纲，在无噪声模型中介于 $0$ 和 $1$ 之间）。假设模型结构如下：\n- 确定性输入输出关系由一个具有已知饱和边界 $N_{\\min} = 0$ 和 $N_{\\max} = 1$ 的希尔形式给出：\n$$\nf(E; K, n) \\equiv \\frac{E^n}{K^n + E^n},\n$$\n其中 $K$（单位为 $\\mathrm{kPa}$）是半最大响应时的硬度，$n$（无量纲）是希尔系数。\n- 观测模型为加性、独立、零均值的高斯噪声：\n$$\nN_i = f(E_i; K, n) + \\varepsilon_i,\\quad \\varepsilon_i \\overset{\\text{i.i.d.}}{\\sim} \\mathcal{N}(0, \\sigma^2).\n$$\n- 参数的先验通过对其对数的独立正态先验来编码正性和尺度：\n$$\n\\log K \\sim \\mathcal{N}(m_K, s_K^2), \\quad \\log n \\sim \\mathcal{N}(m_n, s_n^2),\n$$\n其中所有对数均为自然对数。\n\n任务：\n1) 根据以上假设和测量的独立性，写出似然 $p(\\{N_i\\}\\mid \\{E_i\\}, K, n, \\sigma)$ 及相应的对数似然。然后，与先验结合，写出后验密度 $p(K, n \\mid \\{E_i, N_i\\}, \\sigma, m_K, s_K, m_n, s_n)$（相差一个比例常数）。最后，提供用于最大后验估计最小化的负对数后验表达式。\n2) 提出一种算法，通过最小化关于 $K$ 和 $n$ 的负对数后验来计算最大后验估计值 $(\\hat{K}, \\hat{n})$。您的算法必须强制 $K > 0$ 和 $n > 0$，并且当 $E$ 跨越多个数量级时应保持数值稳定。说明您使用的任何重参数化，并根据模型证明其合理性。\n3) 将您的算法实现为一个完整、可运行的程序，该程序不接受任何输入，并将该流程应用于以下测试套件。对于每个测试用例，生成 $K$（单位为 $\\mathrm{kPa}$）和 $n$（无量纲）的MAP估计值，并将每个值四舍五入到3位小数。您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，该列表按给定顺序将所有测试用例的结果展平，即 $\\big[\\hat{K}_1,\\hat{n}_1,\\hat{K}_2,\\hat{n}_2,\\dots\\big]$。\n\n使用以下测试套件，其中每个测试用例指定了 $\\{E_i\\}$（单位 $\\mathrm{kPa}$）、$\\{N_i\\}$（无量纲）、$\\sigma$（无量纲）以及先验超参数 $(m_K, s_K, m_n, s_n)$：\n\n- 测试用例 1（典型硬度范围，中等噪声）：\n  - $E = [\\,0.5,\\,1.0,\\,2.0,\\,4.0,\\,8.0,\\,16.0\\,]$\n  - $N = [\\,0.015495,\\,0.010303,\\,0.180200,\\,0.490000,\\,0.869540,\\,0.939700\\,]$\n  - $\\sigma = 0.05$\n  - $(m_K, s_K, m_n, s_n) = (1.3862943611,\\,0.8,\\,0.6931471806,\\,0.5)$\n- 测试用例 2（更宽的硬度范围，较高噪声）：\n  - $E = [\\,0.5,\\,1.0,\\,2.0,\\,5.0,\\,10.0,\\,20.0,\\,40.0\\,]$\n  - $N = [\\,0.006700,\\,0.109400,\\,0.106600,\\,0.363300,\\,0.460000,\\,0.706900,\\,0.811100\\,]$\n  - $\\sigma = 0.10$\n  - $(m_K, s_K, m_n, s_n) = (2.0794415417,\\,0.8,\\,0.4054651081,\\,0.5)$\n- 测试用例 3（有限的亚饱和区域，低噪声；潜在的可识别性挑战）：\n  - $E = [\\,0.2,\\,0.4,\\,0.8,\\,1.6\\,]$\n  - $N = [\\,0.005100,\\,0.000597,\\,0.027970,\\,0.280700\\,]$\n  - $\\sigma = 0.03$\n  - $(m_K, s_K, m_n, s_n) = (1.0986122887,\\,0.7,\\,1.0986122887,\\,0.7)$\n\n限制与要求：\n- 所有计算都必须在假设 $E$ 和 $K$ 的单位为 $\\mathrm{kPa}$ 且 $n$ 无量纲的情况下进行。\n- 本问题不涉及角度；无需角度单位。\n- 您的最终输出必须是遵循确切格式的单行文本：单个Python print语句生成一个方括号括起的、逗号分隔的浮点数列表，四舍五入到3位小数，并按 $[\\,\\hat{K}_1,\\hat{n}_1,\\hat{K}_2,\\hat{n}_2,\\hat{K}_3,\\hat{n}_3\\,]$ 的形式将所有测试用例的结果展平。", "solution": "问题陈述经过审查，被认为是有效的。它在科学上基于生物物理建模和统计推断的原理，在数学上是适定的。唯一解所需的所有必要组成部分都已提供，并且没有内部矛盾。因此，我们可以进行推导和实现。\n\n目标是找到描述YAP/TAZ核定位作为基质硬度 $E$ 函数的希尔型模型的参数 $K$ 和 $n$ 的最大后验 (MAP) 估计。这需要构建参数的负对数后验概率分布，并对其进行最小化。\n\n该问题按要求分两部分解决：首先，推导目标函数（负对数后验）；其次，说明用于找到其最小值的数值算法。\n\n**1. 负对数后验的推导**\n\n设目标参数为 $K$ 和 $n$。给定一组 $m$ 个独立测量值 $\\{ (E_i, N_i) \\}_{i=1}^m$。\n\n确定性关系是希尔函数：\n$$\nf(E_i; K, n) = \\frac{E_i^n}{K^n + E_i^n}\n$$\n\n观测模型假设存在加性、独立且同分布 (i.i.d.) 的高斯噪声，$\\varepsilon_i \\sim \\mathcal{N}(0, \\sigma^2)$。因此，在给定 $E_i$、$K$、$n$ 和 $\\sigma$ 的条件下，观测到单个数据点 $N_i$ 的似然由正态分布的概率密度函数给出：\n$$\np(N_i \\mid E_i, K, n, \\sigma) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left( -\\frac{(N_i - f(E_i; K, n))^2}{2\\sigma^2} \\right)\n$$\n由于测量的独立性，数据集 $\\{N_i\\}$ 的总似然是各个似然的乘积：\n$$\np(\\{N_i\\} \\mid \\{E_i\\}, K, n, \\sigma) = \\prod_{i=1}^m p(N_i \\mid E_i, K, n, \\sigma) = \\left(2\\pi\\sigma^2\\right)^{-m/2} \\exp\\left( -\\frac{1}{2\\sigma^2} \\sum_{i=1}^m (N_i - f(E_i; K, n))^2 \\right)\n$$\n相应的对数似然，记为 $\\mathcal{L}_{\\text{data}}$，是：\n$$\n\\mathcal{L}_{\\text{data}} = \\log p(\\{N_i\\} \\mid \\{E_i\\}, K, n, \\sigma) = -\\frac{m}{2} \\log(2\\pi\\sigma^2) - \\frac{1}{2\\sigma^2} \\sum_{i=1}^m (N_i - f(E_i; K, n))^2\n$$\n参数的先验是为其对数指定的：$\\log K \\sim \\mathcal{N}(m_K, s_K^2)$ 和 $\\log n \\sim \\mathcal{N}(m_n, s_n^2)$。因此，联合先验密度为：\n$$\np(\\log K, \\log n) = p(\\log K) p(\\log n) = \\frac{1}{\\sqrt{2\\pi s_K^2}} \\exp\\left( -\\frac{(\\log K - m_K)^2}{2s_K^2} \\right) \\cdot \\frac{1}{\\sqrt{2\\pi s_n^2}} \\exp\\left( -\\frac{(\\log n - m_n)^2}{2s_n^2} \\right)\n$$\n根据贝叶斯定理，参数的后验概率与似然和先验的乘积成正比：\n$$\np(K, n \\mid \\{E_i, N_i\\}, \\sigma, \\dots) \\propto p(\\{N_i\\} \\mid \\{E_i\\}, K, n, \\sigma) \\cdot p(K,n)\n$$\n更方便的做法是处理对数后验，并通过 $\\theta_K = \\log K$ 和 $\\theta_n = \\log n$ 对问题进行重参数化。在这个参数空间中，先验是一个简单的高斯分布。$\\theta_K$ 和 $\\theta_n$ 的后验为：\n$$\np(\\theta_K, \\theta_n \\mid \\text{data}) \\propto p(\\text{data} \\mid \\theta_K, \\theta_n) \\cdot p(\\theta_K, \\theta_n)\n$$\n因此，对数后验为：\n$$\n\\log p(\\theta_K, \\theta_n \\mid \\text{data}) = \\log p(\\text{data} \\mid \\theta_K, \\theta_n) + \\log p(\\theta_K) + \\log p(\\theta_n) + C\n$$\n其中 $C$ 是一个归一化常数。代入对数似然和对数先验的表达式：\n$$\n\\log p(\\theta_K, \\theta_n \\mid \\dots) = -\\frac{1}{2\\sigma^2} \\sum_{i=1}^m (N_i - f(E_i; e^{\\theta_K}, e^{\\theta_n}))^2 - \\frac{(\\theta_K - m_K)^2}{2s_K^2} - \\frac{(\\theta_n - m_n)^2}{2s_n^2} + C'\n$$\nMAP估计是通过最大化此对数后验找到的，这等价于最小化其负值。负对数后验，我们将其表示为 $\\mathcal{L}_{\\text{MAP}}$，是我们要最小化的目标函数。忽略不影响最小值位置的常数：\n$$\n\\mathcal{L}_{\\text{MAP}}(\\theta_K, \\theta_n) = \\frac{1}{2\\sigma^2} \\sum_{i=1}^m \\left(N_i - f(E_i; e^{\\theta_K}, e^{\\theta_n})\\right)^2 + \\frac{(\\theta_K - m_K)^2}{2s_K^2} + \\frac{(\\theta_n - m_n)^2}{2s_n^2}\n$$\n\n**2. MAP估计的算法**\n\n为了计算MAP估计值 $(\\hat{K}, \\hat{n})$，我们最小化关于 $\\theta_K$ 和 $\\theta_n$ 的目标函数 $\\mathcal{L}_{\\text{MAP}}(\\theta_K, \\theta_n)$。\n\n首先，我们根据先验结构的建议进行重参数化：\n$$\n\\theta_K = \\log K, \\quad \\theta_n = \\log n\n$$\n这种重参数化有两个主要优点：\n1.  约束强制：参数 $K$ 和 $n$ 必须为正。通过在 $(-\\infty, \\infty)$ 上对 $\\theta_K, \\theta_n$ 进行优化，原始参数 $K = e^{\\theta_K}$ 和 $n = e^{\\theta_n}$ 就被内在地约束在正数域 $\\mathbb{R}^+$上。这将一个有约束的优化问题转换为了一个无约束的问题。\n2.  数值稳定性：硬度值 $E$ 和参数 $K$ 可能会跨越数个数量级。像 $E^n$ 这样的运算容易出现数值上溢或下溢。可以使用对数将希尔函数重写为更稳定的形式：\n    $$\n    f(E; K, n) = \\frac{E^n}{K^n + E^n} = \\frac{1}{1 + (K/E)^n} = \\frac{1}{1 + \\exp(n \\log(K/E))} = \\frac{1}{1 + \\exp(n(\\log K - \\log E))}\n    $$\n    用我们的优化变量 $\\theta_K$ 和 $\\theta_n$ 表示：\n    $$\n    f(E; \\theta_K, \\theta_n) = \\frac{1}{1 + \\exp(e^{\\theta_n}(\\theta_K - \\log E))}\n    $$\n    这种形式在数值上是鲁棒的，并且避免了产生大的中间值。\n\n优化问题现在是找到 $(\\hat{\\theta}_K, \\hat{\\theta}_n) = \\arg\\min_{\\theta_K, \\theta_n} \\mathcal{L}_{\\text{MAP}}(\\theta_K, \\theta_n)$。由于 $\\mathcal{L}_{\\text{MAP}}$ 是一个连续且可微（尽管是非线性的）函数，我们可以使用拟牛顿法进行无约束优化。Broyden–Fletcher–Goldfarb–Shanno (BFGS) 算法是一个合适的选择，因为它很高效且不需要解析的Hessian矩阵。\n\n算法如下：\n1.  对于一个给定的测试用例（数据 $\\{E_i, N_i\\}$、噪声 $\\sigma$ 和先验超参数 $m_K, s_K, m_n, s_n$），定义如上构建的目标函数 $\\mathcal{L}_{\\text{MAP}}(\\theta_K, \\theta_n)$。\n2.  为优化选择一个初始猜测值 $(\\theta_{K,0}, \\theta_{n,0})$。一个合乎逻辑的选择是先验分布的均值，即 $(\\theta_{K,0}, \\theta_{n,0}) = (m_K, m_n)$。\n3.  使用一个数值优化程序（例如，带有 `BFGS` 方法的 `scipy.optimize.minimize`）来找到最小化 $\\mathcal{L}_{\\text{MAP}}$ 的参数 $(\\hat{\\theta}_K, \\hat{\\theta}_n)$。\n4.  将估计的对数参数转换回原始参数空间，以获得最终的MAP估计值：\n    $$\n    \\hat{K} = \\exp(\\hat{\\theta}_K), \\quad \\hat{n} = \\exp(\\hat{\\theta}_n)\n    $$\n5.  对所有提供的测试用例重复此过程。\n该算法的实现在最终答案部分提供。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import minimize\n\ndef solve():\n    \"\"\"\n    Solves the MAP estimation problem for all test cases.\n    \"\"\"\n    \n    test_cases = [\n        {\n            \"E\": np.array([0.5, 1.0, 2.0, 4.0, 8.0, 16.0]),\n            \"N\": np.array([0.015495, 0.010303, 0.180200, 0.490000, 0.869540, 0.939700]),\n            \"sigma\": 0.05,\n            \"priors\": (1.3862943611, 0.8, 0.6931471806, 0.5)  # (m_k, s_k, m_n, s_n)\n        },\n        {\n            \"E\": np.array([0.5, 1.0, 2.0, 5.0, 10.0, 20.0, 40.0]),\n            \"N\": np.array([0.006700, 0.109400, 0.106600, 0.363300, 0.460000, 0.706900, 0.811100]),\n            \"sigma\": 0.10,\n            \"priors\": (2.0794415417, 0.8, 0.4054651081, 0.5)\n        },\n        {\n            \"E\": np.array([0.2, 0.4, 0.8, 1.6]),\n            \"N\": np.array([0.005100, 0.000597, 0.027970, 0.280700]),\n            \"sigma\": 0.03,\n            \"priors\": (1.0986122887, 0.7, 1.0986122887, 0.7)\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        E_data = case[\"E\"]\n        N_data = case[\"N\"]\n        sigma = case[\"sigma\"]\n        m_k, s_k, m_n, s_n = case[\"priors\"]\n\n        # Pre-compute log(E) for efficiency\n        log_E_data = np.log(E_data)\n\n        def neg_log_posterior(params, E_log, N_obs, sig, mk, sk, mn, sn):\n            \"\"\"\n            Calculates the negative log-posterior for the given parameters.\n            `params` is a list or array [theta_k, theta_n].\n            \"\"\"\n            theta_k, theta_n = params\n            n = np.exp(theta_n)\n\n            # 1. Numerically stable Hill function calculation (vectorized)\n            # f(E) = 1 / (1 + exp(n * (log(K) - log(E))))\n            exponent_term = n * (theta_k - E_log)\n            # Clip exponent to avoid overflow in exp, which can happen for\n            # very large n or large (theta_k - E_log).\n            exponent_term = np.clip(exponent_term, -700, 700)\n            f_model = 1.0 / (1.0 + np.exp(exponent_term))\n\n            # 2. Likelihood term (sum of squared errors)\n            likelihood_term = np.sum((N_obs - f_model)**2) / (2.0 * sig**2)\n\n            # 3. Prior terms for log K and log n\n            prior_k_term = (theta_k - mk)**2 / (2.0 * sk**2)\n            prior_n_term = (theta_n - mn)**2 / (2.0 * sn**2)\n            \n            return likelihood_term + prior_k_term + prior_n_term\n\n        # Initial guess for optimization: the prior means for (log K, log n)\n        initial_guess = [m_k, m_n]\n        \n        # Perform optimization using BFGS\n        opt_result = minimize(\n            fun=neg_log_posterior,\n            x0=initial_guess,\n            args=(log_E_data, N_data, sigma, m_k, s_k, m_n, s_n),\n            method='BFGS'\n        )\n\n        # Extract optimal log-parameters\n        theta_k_hat, theta_n_hat = opt_result.x\n        \n        # Convert back to K and n\n        k_hat = np.exp(theta_k_hat)\n        n_hat = np.exp(theta_n_hat)\n        \n        # Append rounded results to the list\n        results.append(round(k_hat, 3))\n        results.append(round(n_hat, 3))\n\n    # Format the final output as a single comma-separated string in brackets\n    output_str = f\"[{','.join(map(str, results))}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2688230"}]}