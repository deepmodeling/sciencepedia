{"hands_on_practices": [{"introduction": "形态发生素梯度如何转化为精确的细胞命运边界是发育生物学中的一个核心问题。“法国国旗模型”提供了一个经典框架，即细胞根据其经历的形态发生素浓度来决定其命运。本练习将此概念付诸实践，要求您基于一个简化的指数梯度模型 $c(x) = c_0 e^{-x/\\lambda}$，推导出祖细胞域边界的位置 [@problem_id:2674824]。通过这个推导，您将亲身体验位置信息是如何从一个连续的浓度分布中被解码出来，并理解发育模式如何随梯度参数（如长度尺度 $\\lambda$ 和源浓度 $c_0$）而伸缩。", "problem": "在脊椎动物的神经管中，由腹侧中线（脊索和底板）分泌的Sonic Hedgehog (Shh) 沿背腹轴形成一个形态发生素梯度，该梯度决定了祖细胞区域的模式。考虑一个简化的、一维的组织，它从位于位置 $x=0$ 处的腹侧源头，朝向背侧 $x$ 增加的方向延伸。假设在稳态下，形态发生素的浓度分布由得到经验充分支持的指数形式 $c(x)=c_{0}\\exp(-x/\\lambda)$ 给出，其中 $c_{0}$ 是 $x=0$ 处的形态发生素浓度，$\\lambda$ 是由扩散和降解决定的特征长度尺度。祖细胞区域的边界由位置 $x^{\\ast}$ 定义，在该位置，局部的形态发生素浓度等于用于细胞命运激活的基因调控阈值 $T$。假设 $c_{0}>T$，从而在 $x^{\\ast}>0$ 处存在一个有限的边界。\n\n仅使用以下基本依据：\n- 在稳定条件下，一维空间中具有均匀线性降解的反应-扩散稳态会产生一个从边界源头开始的指数衰减。\n- 基因调控网络激活的阈值模型将区域边界定义为形态发生素浓度等于一个固定阈值的位置。\n\n从第一性原理推导 $x^{\\ast}$ 关于 $\\lambda$ 和比值 $c_{0}/T$ 的显式闭合形式表达式。然后，通过分析函数依赖关系，确定 $x^{\\ast}$ 与 $\\lambda$ 和 $c_{0}/T$ 的标度关系（例如，该依赖关系是线性的、对数的还是其他形式的）。将最终答案表示为 $x^{\\ast}$ 关于 $\\lambda$ 和 $c_{0}/T$ 的单一解析表达式。无需进行数值计算。最终表达式中不应包含单位。如果选择陈述任何中间数值关系，请使用标准数学符号表示任何整数（如 $2$）。最终答案必须是单一的闭合形式表达式。", "solution": "所述问题是连贯的、有科学依据且适定的。它提出了一个发育生物学中关于形态发生素梯度形成和解读的典范模型，该模型易于进行直接的数学分析。我们将根据所提供的第一性原理进行推导。\n\n基本依据如下：\n$1$. 在一维组织中，当源位于 $x=0$ 且存在均匀线性降解时，形态发生素的稳态浓度分布呈指数衰减。\n$2$. 祖细胞区域的边界建立在一个特定的空间位置上，在该位置形态发生素的浓度等于一个固定的激活阈值。\n\n问题给出了浓度分布 $c(x)$ 作为位置 $x$ 的函数的显式数学形式：\n$$c(x) = c_{0} \\exp\\left(-\\frac{x}{\\lambda}\\right)$$\n此处，$c_{0}$ 是源头（$x=0$）的浓度，$\\lambda$ 是梯度的特征长度尺度。该方程是第一个基本依据的直接数学推论。\n\n问题将祖细胞区域边界的位置（记为 $x^{\\ast}$）定义为该位置的局部浓度精确等于基因调控阈值 $T$ 的条件。这对应于第二个基本依据。在数学上，这表示为：\n$$c(x^{\\ast}) = T$$\n\n为求得 $x^{\\ast}$ 的显式表达式，我们将 $c(x)$ 的表达式代入边界条件方程：\n$$c_{0} \\exp\\left(-\\frac{x^{\\ast}}{\\lambda}\\right) = T$$\n\n我们的目标是求解该方程以得到 $x^{\\ast}$。问题陈述了先决条件 $c_{0} > T$，这是在有限的正位置 $x^{\\ast} > 0$ 形成边界的必要条件。我们开始代数操作，首先分离指数项。将方程两边同时除以 $c_{0}$：\n$$\\exp\\left(-\\frac{x^{\\ast}}{\\lambda}\\right) = \\frac{T}{c_{0}}$$\n\n为了求解指数函数的参数，我们对该方程两边取自然对数 $\\ln$：\n$$\\ln\\left(\\exp\\left(-\\frac{x^{\\ast}}{\\lambda}\\right)\\right) = \\ln\\left(\\frac{T}{c_{0}}\\right)$$\n\n自然对数是指数函数的反函数，因此它们在等式左边相互抵消，得到：\n$$-\\frac{x^{\\ast}}{\\lambda} = \\ln\\left(\\frac{T}{c_{0}}\\right)$$\n\n我们可以利用对数性质 $\\ln(a/b) = -\\ln(b/a)$ 来重写等式右边，这通常更直观，因为它涉及一个大于 $1$ 的比值：\n$$-\\frac{x^{\\ast}}{\\lambda} = -\\ln\\left(\\frac{c_{0}}{T}\\right)$$\n\n现在，我们将两边同乘以 $-\\lambda$ 以分离出 $x^{\\ast}$：\n$$x^{\\ast} = \\lambda \\ln\\left(\\frac{c_{0}}{T}\\right)$$\n\n这就是边界位置 $x^{\\ast}$ 的显式闭合形式表达式。条件 $c_{0} > T$ 确保了比值 $c_{0}/T > 1$，因此其自然对数为正数，即 $\\ln(c_{0}/T) > 0$。由于 $\\lambda$ 是一个物理长度尺度，它也是正的，即 $\\lambda > 0$。因此，位置 $x^{\\ast}$ 保证为正，这与问题的物理设定是一致的。\n\n下一个任务是分析 $x^{\\ast}$ 与 $\\lambda$ 和比值 $c_{0}/T$ 的函数依赖关系，或称标度关系。\n\n$1$. 与 $\\lambda$ 的标度关系：表达式表明 $x^{\\ast}$ 与 $\\lambda$ 成正比。这是一种线性关系。如果特征长度 $\\lambda$ 增加一倍，而浓度 $c_{0}$ 和 $T$ 保持不变，则边界位置 $x^{\\ast}$ 也会增加一倍。这意味着整体模式随形态发生素梯度的长度尺度线性缩放。\n\n$2$. 与 $c_{0}/T$ 的标度关系：表达式表明 $x^{\\ast}$ 依赖于比值 $c_{0}/T$ 的对数。这是一种非线性的对数关系。对数依赖性意味着边界的位置对梯度大小的波动相对不敏感，或称具有鲁棒性。例如，将源浓度从 $c_{0}$ 增加一倍至 $2c_{0}$（从而使比值 $c_{0}/T$ 增加一倍）并不会使边界位置 $x^{\\ast}$ 增加一倍。相反，该位置会移动一个附加量：\n$$x_{\\text{new}}^{\\ast} = \\lambda \\ln\\left(\\frac{2 c_{0}}{T}\\right) = \\lambda \\left(\\ln(2) + \\ln\\left(\\frac{c_{0}}{T}\\right)\\right) = x^{\\ast} + \\lambda \\ln(2)$$\n这表明，浓度的较大相对变化会导致位置的较小绝对变化，这是确保发育模式具有鲁棒性的一个关键特征。\n\n最终推导出的、满足所有条件并源于第一性原理的表达式，结合了这些依赖关系。", "answer": "$$\\boxed{\\lambda \\ln\\left(\\frac{c_{0}}{T}\\right)}$$", "id": "2674824"}, {"introduction": "在真实的生物系统中，细胞命运的决定往往不是由单一信号，而是由多个相互作用的信号网络精确调控的。本练习模拟了神经管背腹轴发育中的一个更真实的情景：来自腹侧的 Shh 信号与来自背侧的 BMP 信号形成拮抗梯度 [@problem_id:2674785]。您的任务是计算这两种信号达到“平衡拮抗”状态的空间区域，该区域被认为是中间类型祖细胞（如运动神经元祖细胞）产生的关键。这个练习揭示了拮抗信号相互作用在定义精确且复杂发育模式中的重要作用。", "problem": "一个长度为 $L$ 的一维胚胎神经管背腹轴通过坐标 $x \\in [0,L]$ 建模，其中 $x=0$ 为腹侧底板，$x=L$ 为背侧顶板。腹侧的 Sonic Hedgehog (Shh) 和背侧的 Bone Morphogenetic Protein (BMP) 通过从各自边界进行扩散和一级降解，形成稳态的形态发生素梯度。在这种标准模式下，来自边界源的稳态浓度分布呈指数衰减，其特征长度常数为 $\\lambda$，这是 Fick 定律和稳态一级降解的一个广泛应用的结果。设腹侧 Shh 浓度为 $S(x)=S_{0}\\exp(-x/\\lambda_{s})$，背侧 BMP 浓度为 $G(x)=G_{0}\\exp(-(L-x)/\\lambda_{g})$。与背腹神经特性相关的转录输入被建模为净拮抗信号\n$$\nN(x)=G(x)-\\beta\\,S(x),\n$$\n其中 $\\beta>0$ 是一个比例因子，用于捕捉 Shh 在共同转录网络中抑制作用的相对效力。产生中间祖细胞命运的“平衡拮抗”模式由容差带 $|N(x)|\\leq \\theta$ 定义，其中 $\\theta>0$ 是一个小的生化阈值。\n\n假设长度常数相等，即 $\\lambda_{s}=\\lambda_{g}=\\lambda$，并采用以下符合生物学实际的参数：$L=300~\\mu\\mathrm{m}$，$S_{0}=8$（浓度单位），$G_{0}=12$（浓度单位），$\\beta=0.6$，$\\theta=0.5$（与 $S_{0}$ 和 $G_{0}$ 的浓度单位相同），以及 $\\lambda=100~\\mu\\mathrm{m}$。仅使用上述已证明其合理性的指数稳态形式和 $N(x)$ 的定义，推导在 $[0,L]$ 区间上满足 $|N(x)|\\leq \\theta$ 的空间区间的宽度 $w$（单位为 $\\mu\\mathrm{m}$）的解析表达式，然后根据给定参数对 $w$ 进行数值计算。将最终数值结果四舍五入至三位有效数字。以微米（$\\mu\\mathrm{m}$）表示最终答案。", "solution": "我们首先对问题陈述进行必要的验证。\n\n### 步骤1：提取已知条件\n问题提供了以下信息：\n- 一个长度为 $L$ 的一维背腹轴，用坐标 $x \\in [0,L]$ 建模。\n- 腹侧底板位于 $x=0$。\n- 背侧顶板位于 $x=L$。\n- 腹侧 Shh 浓度：$S(x)=S_{0}\\exp(-x/\\lambda_{s})$\n- 背侧 BMP 浓度：$G(x)=G_{0}\\exp(-(L-x)/\\lambda_{g})$\n- 净拮抗信号：$N(x)=G(x)-\\beta\\,S(x)$\n- 效力比例因子：$\\beta>0$\n- 中间祖细胞命运的条件：$|N(x)|\\leq \\theta$\n- 生化阈值：$\\theta>0$\n- 长度常数相等的假设：$\\lambda_{s}=\\lambda_{g}=\\lambda$\n- 参数值：\n  - $L=300~\\mu\\mathrm{m}$\n  - $S_{0}=8$（浓度单位）\n  - $G_{0}=12$（浓度单位）\n  - $\\beta=0.6$\n  - $\\theta=0.5$（浓度单位）\n  - $\\lambda=100~\\mu\\mathrm{m}$\n- 目标是推导满足 $|N(x)|\\leq \\theta$ 的空间区间的宽度 $w$ 的解析表达式，然后对 $w$ 进行数值计算。\n\n### 步骤2：使用提取的已知条件进行验证\n对问题进行严格验证。\n1.  **科学依据**：该模型基于标准的反应-扩散框架来描述形态发生素梯度，这是发育生物学中的一个基本概念。$S(x)$ 和 $G(x)$ 的指数衰减分布是具有局域源、扩散和一级降解的系统的正确稳态解。分子 Sonic Hedgehog (Shh) 和 Bone Morphogenetic Protein (BMP) 是构成神经管背腹轴模式的经典拮抗物。净拮抗信号 $N(x)$ 模型是对其背后复杂的基因调控网络的一种常见且有效的简化。该问题具有科学依据。\n2.  **适定性**：该问题在数学上是适定的。函数 $N(x)$ 是连续且单调的，确保不等式 $|N(x)|\\leq \\theta$ 定义了一个单一的连通区间 $[x_1, x_2]$。要求推导宽度 $w = x_2 - x_1$ 的解析表达式并进行数值计算，这是一项标准的数学任务。所有必要的参数均已提供。\n3.  **客观性**：语言精确且量化。没有主观或模棱两可的陈述。\n\n该问题没有科学上的不合理之处，陈述规范，内容完整，并且结构良好。\n\n### 步骤3：结论与行动\n该问题被认定为有效。现在开始推导解答。\n\n净信号由 $N(x) = G(x) - \\beta S(x)$ 给出。使用所提供的函数形式和统一的长度常数 $\\lambda$，该式变为：\n$$\nN(x) = G_0 \\exp\\left(-\\frac{L-x}{\\lambda}\\right) - \\beta S_0 \\exp\\left(-\\frac{x}{\\lambda}\\right)\n$$\n“平衡拮抗”模式由条件 $|N(x)| \\leq \\theta$ 定义。这个不等式等价于以下不等式对：\n$$\n-\\theta \\leq N(x) \\leq \\theta\n$$\n设满足此条件的空间区间为 $[x_1, x_2]$，其中 $x_1 < x_2$。此区间的边界可通过求解方程 $N(x_1) = -\\theta$ 和 $N(x_2) = \\theta$ 找到。此区间的宽度为 $w = x_2 - x_1$。\n\n为了求解方程 $N(x) = y$（其中 $y$ 为一般常数），我们有：\n$$\nG_0 \\exp\\left(-\\frac{L}{\\lambda}\\right) \\exp\\left(\\frac{x}{\\lambda}\\right) - \\beta S_0 \\exp\\left(-\\frac{x}{\\lambda}\\right) = y\n$$\n设 $u = \\exp(x/\\lambda)$。该方程变换为：\n$$\nG_0 \\exp\\left(-\\frac{L}{\\lambda}\\right) u - \\frac{\\beta S_0}{u} = y\n$$\n两边乘以 $u$（$u$ 恒为正），得到一个关于 $u$ 的二次方程：\n$$\n\\left(G_0 \\exp\\left(-\\frac{L}{\\lambda}\\right)\\right) u^2 - y u - \\beta S_0 = 0\n$$\n这是 $Au^2 + Bu + C = 0$ 的形式，其中 $A = G_0 \\exp(-L/\\lambda)$，$B = -y$，$C = -\\beta S_0$。\n$u$ 的解由二次公式给出：\n$$\nu = \\frac{-B \\pm \\sqrt{B^2 - 4AC}}{2A} = \\frac{y \\pm \\sqrt{y^2 + 4 \\beta S_0 G_0 \\exp(-L/\\lambda)}}{2 G_0 \\exp(-L/\\lambda)}\n$$\n由于 $u = \\exp(x/\\lambda)$ 必须为正，我们必须取正根。平方根下的项总是大于 $y^2$，所以其平方根大于 $|y|$。因此，$y + \\sqrt{\\cdots}$ 总是正的，而 $y - \\sqrt{\\cdots}$ 总是负的。我们选择 `+` 号。\n$$\nu = \\frac{y + \\sqrt{y^2 + 4 \\beta S_0 G_0 \\exp(-L/\\lambda)}}{2 G_0 \\exp(-L/\\lambda)}\n$$\n由 $u = \\exp(x/\\lambda)$，我们通过取自然对数来求解 $x$：$x = \\lambda \\ln(u)$。设 $K = 4 \\beta S_0 G_0 \\exp(-L/\\lambda)$。\n$$\nx(y) = \\lambda \\ln\\left( \\frac{y + \\sqrt{y^2 + K}}{2 G_0 \\exp(-L/\\lambda)} \\right)\n$$\n我们现在通过令 $y = -\\theta$ 和 $y = \\theta$ 来求边界 $x_1$ 和 $x_2$：\n$$\nx_1 = x(-\\theta) = \\lambda \\ln\\left( \\frac{-\\theta + \\sqrt{\\theta^2 + K}}{2 G_0 \\exp(-L/\\lambda)} \\right)\n$$\n$$\nx_2 = x(\\theta) = \\lambda \\ln\\left( \\frac{\\theta + \\sqrt{\\theta^2 + K}}{2 G_0 \\exp(-L/\\lambda)} \\right)\n$$\n宽度 $w$ 是 $x_2 - x_1$：\n$$\nw = x_2 - x_1 = \\lambda \\left[ \\ln\\left( \\frac{\\theta + \\sqrt{\\theta^2 + K}}{2 A} \\right) - \\ln\\left( \\frac{-\\theta + \\sqrt{\\theta^2 + K}}{2 A} \\right) \\right]\n$$\n使用对数性质 $\\ln(a) - \\ln(b) = \\ln(a/b)$，我们得到宽度 $w$ 的解析表达式：\n$$\nw = \\lambda \\ln\\left( \\frac{\\theta + \\sqrt{\\theta^2 + 4 \\beta S_0 G_0 \\exp(-L/\\lambda)}}{-\\theta + \\sqrt{\\theta^2 + 4 \\beta S_0 G_0 \\exp(-L/\\lambda)}} \\right)\n$$\n这就是所求的解析解。\n\n接下来，我们使用给定参数对此表达式进行数值计算：$L=300~\\mu\\mathrm{m}$，$\\lambda=100~\\mu\\mathrm{m}$，$S_0=8$，$G_0=12$，$\\beta=0.6$，以及 $\\theta=0.5$。\n\n首先，计算平方根中的常数项，我们记为 $K$：\n比率 $L/\\lambda = 300/100 = 3$。\n$$\nK = 4 \\beta S_0 G_0 \\exp(-L/\\lambda) = 4 \\times 0.6 \\times 8 \\times 12 \\times \\exp(-3) = 230.4 \\exp(-3)\n$$\n数值上，$K \\approx 230.4 \\times 0.049787 \\approx 11.4709$。\n另外，$\\theta^2 = 0.5^2 = 0.25$。\n平方根内的项是 $\\theta^2 + K \\approx 0.25 + 11.4709 = 11.7209$。\n平方根是 $\\sqrt{11.7209} \\approx 3.42358$。\n\n现在，我们将这些值代入 $w$ 的表达式中：\n$$\nw = 100 \\ln\\left( \\frac{0.5 + 3.42358}{-0.5 + 3.42358} \\right)\n$$\n$$\nw = 100 \\ln\\left( \\frac{3.92358}{2.92358} \\right)\n$$\n$$\nw = 100 \\ln(1.34205)\n$$\n$$\nw \\approx 100 \\times 0.29419 = 29.419~\\mu\\mathrm{m}\n$$\n问题要求将结果四舍五入到三位有效数字。\n$$\nw \\approx 29.4~\\mu\\mathrm{m}\n$$", "answer": "$$\\boxed{29.4}$$", "id": "2674785"}, {"introduction": "解析模型为我们提供了关于模式形成机制的深刻洞见，但动态计算机模拟能够捕捉从初始状态到最终稳态的全过程。这项高阶练习旨在引导您构建一个完整的计算模型，将形态发生素的建立过程（由反应-扩散偏微分方程（PDEs）描述）与细胞内部基因调控网络的解码过程（由常微分方程（ODEs）描述）耦合起来 [@problem_id:2674739]。通过模拟这个系统，您将能够直观地探索扩散、降解或基因调控参数的改变如何动态地影响最终的发育模式，这是现代定量发育生物学研究中的一个强大工具。", "problem": "考虑一个一维背腹轴，其模型为空间区间 $[0,1]$，位置为 $x \\in [0,1]$，时间为 $t \\ge 0$。两种形态发生素，即 Sonic hedgehog (Shh) 和骨形态发生蛋白 (Bone Morphogenetic Protein, BMP)，通过扩散和降解形成梯度，并为细胞内基因调控网络 (GRN) 提供位置信息。该网络将局部形态发生素浓度解码为两种相互拮抗的转录程序：腹侧程序和背侧程序。您将构建一个偏微分方程-常微分方程 (PDE-ODE) 耦合模型，并实现一个数值稳定的格式来模拟其动态过程直至达到稳态。\n\n基本假设：\n- 形态发生素的扩散遵循菲克扩散 (Fickian diffusion) 和线性降解规律，这是一个经过充分检验的、用于描述沿上皮组织形成形态发生素梯度的模型。\n- 细胞内转录响应遵循饱和S型激活和抑制动力学，这与由希尔函数 (Hill functions) 建模的协同结合相一致，并符合标准的基因调控现象学和分子生物学的中心法则（脱氧核糖核酸 (DNA) 到核糖核酸 (RNA) 到蛋白质）。\n\n模型详述：\n1) 细胞外形态发生素动力学。令 $s(x,t)$ 表示 Shh 的浓度，$b(x,t)$ 表示 BMP 的浓度。它们在 $x \\in (0,1)$ 上的动力学由以下方程给出：\n$$\n\\frac{\\partial s}{\\partial t} = D_s \\frac{\\partial^2 s}{\\partial x^2} - k_s s, \\qquad\n\\frac{\\partial b}{\\partial t} = D_b \\frac{\\partial^2 b}{\\partial x^2} - k_b b,\n$$\n边界条件模拟了局部自分泌和无通量情况：\n- 在腹侧边界 $x=0$ 处，Shh 具有恒定的内向通量 $J_s$：$-D_s \\frac{\\partial s}{\\partial x}(0,t) = J_s$。在 $x=1$ 处，Shh 为无通量：$\\frac{\\partial s}{\\partial x}(1,t) = 0$。\n- 在背侧边界 $x=1$ 处，BMP 具有恒定的内向通量 $J_b$：$-D_b \\frac{\\partial b}{\\partial x}(1,t) = J_b$。在 $x=0$ 处，BMP 为无通量：$\\frac{\\partial b}{\\partial x}(0,t) = 0$。\n对于所有 $x \\in [0,1]$，初始条件为 $s(x,0) = 0$ 和 $b(x,0) = 0$。\n\n2) 细胞内 GRN 解码。在每个空间位置，追踪两种无量纲的转录活性：腹侧程序 $v(x,t)$ 和背侧程序 $d(x,t)$。它们的动力学为：\n$$\n\\frac{dv}{dt} = \\alpha_v \\, H(s;K_{sv},n_{sv}) \\, H^-(b;K_{bv},n_{bv}) \\, \\frac{1}{1+\\beta_v d} - \\gamma_v v,\n$$\n$$\n\\frac{dd}{dt} = \\alpha_d \\, H(b;K_{bd},n_{bd}) \\, H^-(s;K_{sd},n_{sd}) \\, \\frac{1}{1+\\beta_d v} - \\gamma_d d,\n$$\n其中，希尔激活函数为 $H(z;K,n) = \\dfrac{z^n}{K^n + z^n}$，抑制形式函数为 $H^-(z;K,n) = \\dfrac{K^n}{K^n + z^n}$。对于所有 $x \\in [0,1]$，初始条件为 $v(x,0)=0$ 和 $d(x,0)=0$。\n\n数值方法要求：\n- 使用包含 $N$ 个节点的均匀网格对空间 $[0,1]$ 进行离散化，其中 $N=101$，网格间距为 $\\Delta x = \\dfrac{1}{N-1}$。\n- 在内部节点处，使用线法和二阶中心有限差分法来计算 $\\dfrac{\\partial^2}{\\partial x^2}$。使用与二阶精度一致的鬼点消除法来施加诺伊曼型 (Neumann-type) 边界条件。将在 $x=0$ 处 $s$ 的内向通量边界和在 $x=1$ 处 $b$ 的内向通量边界实现为通过消除鬼点而产生的附加源项。这会产生一个集中在腹侧边界的线性项 $q_s$ 和一个集中在背侧边界的线性项 $q_b$，每一项都与 $\\dfrac{J}{\\Delta x}$ 成正比，并应在时间步进中以附加方式并入。\n- 为确保偏微分方程的无条件稳定性，使用向后欧拉 (backward Euler) 法对扩散-降解过程进行隐式推进：\n  $$\n  s^{n+1} = s^n + \\Delta t \\left( D_s \\Delta_x s^{n+1} - k_s s^{n+1} + q_s \\right), \\quad\n  b^{n+1} = b^n + \\Delta t \\left( D_b \\Delta_x b^{n+1} - k_b b^{n+1} + q_b \\right),\n  $$\n  其中 $\\Delta_x$ 表示包含上述边界修改的离散拉普拉斯算子。\n- 在每个网格节点上，使用 $t^{n+1}$ 时刻的局部形态发生素浓度，通过向前欧拉 (forward Euler) 法对 GRN 常微分方程进行显式推进（一种隐式-显式 (IMEX) 分裂法）：\n  $$\n  v^{n+1} = v^n + \\Delta t \\, \\left[ \\alpha_v \\, H(s^{n+1};K_{sv},n_{sv}) \\, H^-(b^{n+1};K_{bv},n_{bv}) \\, \\frac{1}{1+\\beta_v d^n} - \\gamma_v v^n \\right],\n  $$\n  $$\n  d^{n+1} = d^n + \\Delta t \\, \\left[ \\alpha_d \\, H(b^{n+1};K_{bd},n_{bd}) \\, H^-(s^{n+1};K_{sd},n_{sd}) \\, \\frac{1}{1+\\beta_d v^n} - \\gamma_d d^n \\right].\n  $$\n- 使用时间步长 $\\Delta t = 0.02$ 进行模拟，直到所有场和网格节点上连续步骤之间的最大绝对变化小于 $\\varepsilon = 10^{-8}$，或者达到最大时间 $T_{\\max} = 10.0$，以先到者为准。\n\n输出指标：\n- 在稳态时，如果 $v(x_i) > d(x_i)$，则将每个节点分类为腹侧，否则为非腹侧。通过将腹侧节点的数量除以 $N$ 来计算指定为腹侧的区域所占的比例，结果为 $[0,1]$ 内的一个小数。报告此比例，并四舍五入到三位小数。\n\n测试套件：\n对于下面的每一组参数，运行模拟并按所述报告指定为腹侧的节点所占的比例。所有参数均为无量纲。\n\n- 情况 A (平衡梯度)：\n  $D_s = 0.01$, $D_b = 0.01$, $k_s = 0.1$, $k_b = 0.1$, $J_s = 1.0$, $J_b = 1.0$.\n- 情况 B (腹侧形态发生素梯度陡峭，背侧形态发生素梯度平缓)：\n  $D_s = 0.002$, $D_b = 0.05$, $k_s = 0.1$, $k_b = 0.1$, $J_s = 1.0$, $J_b = 0.8$.\n- 情况 C (强降解，弱源)：\n  $D_s = 0.01$, $D_b = 0.01$, $k_s = 1.0$, $k_b = 1.0$, $J_s = 0.2$, $J_b = 0.2$.\n\nGRN 参数 (适用于所有情况)：\n$\\alpha_v = 1.0$, $\\alpha_d = 1.0$, $\\beta_v = 2.0$, $\\beta_d = 2.0$, $\\gamma_v = 1.0$, $\\gamma_d = 1.0$, $K_{sv} = 0.3$, $n_{sv} = 2$, $K_{bv} = 0.3$, $n_{bv} = 2$, $K_{bd} = 0.3$, $n_{bd} = 2$, $K_{sd} = 0.3$, $n_{sd} = 2$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个列表，内含按 A、B、C 顺序排列的三个情况的结果。每个结果都四舍五入到三位小数，以逗号分隔，并用方括号括起来，例如 $[0.500,0.460,0.000]$。不允许有其他输出。所有结果均为无单位小数。", "solution": "所提出的问题是一个适定的、有科学依据的发育模式形成模型，具体而言，是通过形态发生素 Shh 和 BMP 的反向梯度来确定神经管的背腹轴。该模型由一个描述形态发生素动力学的偏微分方程 (PDEs) 耦合系统和一个描述细胞内基因调控网络 (GRN) 的常微分方程 (ODEs) 组成。我们将根据指定的线法以及隐式-显式 (IMEX) 时间步进格式，开发并实现一个完整的数值解。\n\n对问题陈述的验证没有发现任何缺陷。它基于生物物理学和分子生物学的既定原理，在数学上是自洽的，并且所有参数和数值过程都有明确的定义。因此，解答该问题是合理的。\n\n求解过程首先对空间域和微分算子进行离散化，然后构建时间步进算法，最后概述完整的模拟流程。\n\n**1. 空间离散化**\n\n一维空间域 $x \\in [0, 1]$ 被离散化为一个由 $N=101$ 个节点组成的均匀网格，节点索引为 $i = 0, 1, \\dots, N-1$。第 $i$ 个节点的位置是 $x_i = i \\cdot \\Delta x$，其中网格间距为 $\\Delta x = 1/(N-1)$。连续场 $s(x,t)$、$b(x,t)$、$v(x,t)$ 和 $d(x,t)$ 通过它们在这些节点上的值构成的向量来近似，例如，$s_i(t) \\approx s(x_i, t)$，我们将其表示为向量 $\\mathbf{s}(t)$。\n\n**2. 形态发生素动力学的离散化**\n\n形态发生素 $s$ 和 $b$ 的反应-扩散偏微分方程使用二阶精度的有限差分法在空间上进行离散化。这将偏微分方程组转化为一个大型的常微分方程耦合系统。\n\n对于内部节点 $i \\in \\{1, \\dots, N-2\\}$，拉普拉斯算子 $\\frac{\\partial^2 s}{\\partial x^2}$ 由标准的二阶中心差分近似：\n$$\n\\frac{\\partial^2 s}{\\partial x^2}\\bigg|_{x_i} \\approx \\frac{s_{i-1} - 2s_i + s_{i+1}}{\\Delta x^2}\n$$\n\n诺伊曼 (Neumann) 边界条件需要特殊处理。我们使用鬼点法来保持二阶精度。\n\n对于 Shh 场 $s$：\n- 在腹侧边界 $x=0$（节点 $i=0$），内向通量条件为 $-D_s \\frac{\\partial s}{\\partial x}(0,t) = J_s$。我们使用一个位于 $x_{-1} = -\\Delta x$ 的鬼点，通过围绕 $x_0=0$ 的中心差分来近似该导数：$\\frac{\\partial s}{\\partial x}|_{x_0} \\approx \\frac{s_1 - s_{-1}}{2\\Delta x}$。将此代入边界条件，得到 $s_{-1} = s_1 + \\frac{2\\Delta x J_s}{D_s}$。于是，在 $i=0$ 处的拉普拉斯算子为：\n$$\n\\frac{\\partial^2 s}{\\partial x^2}\\bigg|_{x_0} \\approx \\frac{s_{-1} - 2s_0 + s_1}{\\Delta x^2} = \\frac{(s_1 + \\frac{2\\Delta x J_s}{D_s}) - 2s_0 + s_1}{\\Delta x^2} = \\frac{2s_1 - 2s_0}{\\Delta x^2} + \\frac{2J_s}{D_s \\Delta x}\n$$\n- 在背侧边界 $x=1$（节点 $i=N-1$），无通量条件为 $\\frac{\\partial s}{\\partial x}(1,t) = 0$。使用一个鬼点 $s_N$，这意味着 $s_N = s_{N-2}$。在 $i=N-1$ 处的拉普拉斯算子变为：\n$$\n\\frac{\\partial^2 s}{\\partial x^2}\\bigg|_{x_{N-1}} \\approx \\frac{s_{N-2} - 2s_{N-1} + s_N}{\\Delta x^2} = \\frac{2s_{N-2} - 2s_{N-1}}{\\Delta x^2}\n$$\n$\\mathbf{s}$ 的半离散化系统是一个线性常微分方程组：\n$$\n\\frac{d\\mathbf{s}}{dt} = \\left( \\frac{D_s}{\\Delta x^2} \\mathbf{M} - k_s \\mathbf{I} \\right) \\mathbf{s} + \\mathbf{Q}_s\n$$\n其中 $\\mathbf{I}$ 是单位矩阵，$\\mathbf{M}$ 是表示带有诺伊曼边界条件的离散拉普拉斯算子的 $N \\times N$ 矩阵，$\\mathbf{Q}_s$ 是一个源向量。$\\mathbf{M}$ 是一个三对角矩阵，其非零元素为：对于 $i=1,\\dots,N-2$，$M_{i,i-1}=1$，$M_{i,i}=-2$，$M_{i,i+1}=1$；$M_{0,0}=-2$，$M_{0,1}=2$；以及 $M_{N-1,N-2}=2$，$M_{N-1,N-1}=-2$。源向量 $\\mathbf{Q}_s$ 除了第一个元素外均为零，该元素来自于通量条件：$(\\mathbf{Q}_s)_0 = \\frac{2J_s}{\\Delta x}$。\n\n由于边界条件的对称性，BMP 场 $\\mathbf{b}$ 的动力学是类似的，只是通量端和无通量端相反。这导致了相同的矩阵 $\\mathbf{M}$，但源向量 $\\mathbf{Q}_b$ 不同，该向量除了最后一个元素外均为零：$(\\mathbf{Q}_b)_{N-1} = \\frac{2J_b}{\\Delta x}$。\n\n**3. 时间离散化 (IMEX 格式)**\n\n按照指定，时间积分采用 IMEX (隐式-显式) 格式。形态发生素动力学中的刚性扩散部分被隐式处理以保证无条件稳定性，而 GRN 的非刚性反应项则被显式处理以提高计算效率。\n\n使用向后欧拉 (backward Euler) 法求解形态发生素的偏微分方程，从时间步 $n$ 到 $n+1$ 的更新为：\n$$\n\\frac{\\mathbf{s}^{n+1} - \\mathbf{s}^n}{\\Delta t} = \\left( \\frac{D_s}{\\Delta x^2} \\mathbf{M} - k_s \\mathbf{I} \\right) \\mathbf{s}^{n+1} + \\mathbf{Q}_s\n$$\n重新整理该式可得到关于 $\\mathbf{s}^{n+1}$ 的线性系统：\n$$\n\\left( (1+\\Delta t k_s)\\mathbf{I} - \\frac{\\Delta t D_s}{\\Delta x^2} \\mathbf{M} \\right) \\mathbf{s}^{n+1} = \\mathbf{s}^n + \\Delta t \\mathbf{Q}_s\n$$\n令 $\\mathbf{C}_s = (1+\\Delta t k_s)\\mathbf{I} - \\frac{\\Delta t D_s}{\\Delta x^2} \\mathbf{M}$。该系统矩阵 $\\mathbf{C}_s$ 在整个模拟过程中是恒定的，可以预先计算。在每个时间步，我们求解线性系统 $\\mathbf{C}_s \\mathbf{s}^{n+1} = \\mathbf{s}^n + \\Delta t \\mathbf{Q}_s$。对于 $\\mathbf{b}^{n+1}$，使用其对应的矩阵 $\\mathbf{C}_b$ 和源向量 $\\mathbf{Q}_b$ 遵循相同的过程。\n\nGRN 常微分方程使用向前欧拉 (forward Euler) 法进行更新。关键在于，这个显式步骤使用了刚刚通过隐式方法计算出的 $t^{n+1}$ 时刻的形态发生素浓度，但 GRN 的值则来自上一步 $t^n$。对于每个节点 $i$：\n$$\nv_i^{n+1} = v_i^n + \\Delta t \\left[ \\alpha_v H(s_i^{n+1};K_{sv},n_{sv}) H^-(b_i^{n+1};K_{bv},n_{bv}) \\frac{1}{1+\\beta_v d_i^n} - \\gamma_v v_i^n \\right]\n$$\n$$\nd_i^{n+1} = d_i^n + \\Delta t \\left[ \\alpha_d H(b_i^{n+1};K_{bd},n_{bd}) H^-(s_i^{n+1};K_{sd},n_{sd}) \\frac{1}{1+\\beta_d v_i^n} - \\gamma_d d_i^n \\right]\n$$\n这就完成了一个完整的 IMEX 格式时间步。\n\n**4. 模拟算法和输出**\n\n模拟按以下步骤进行：\n1.  对于给定的测试案例，初始化参数以及数值常数 ($\\Delta t, N, \\Delta x, \\epsilon, T_{\\text{max}}$)。\n2.  将状态向量 $\\mathbf{s}, \\mathbf{b}, \\mathbf{v}, \\mathbf{d}$ 初始化为零。\n3.  预先计算系统矩阵 $\\mathbf{C}_s, \\mathbf{C}_b$ 和源向量 $\\mathbf{Q}_s, \\mathbf{Q}_b$。\n4.  进入一个时间循环，直到模拟时间 $t$ 达到 $T_{\\text{max}}$ 或系统达到稳态。\n5.  在每次迭代中，存储当前的状态向量，然后通过求解各自的线性系统将 $\\mathbf{s}$ 和 $\\mathbf{b}$ 更新到第 $n+1$ 步。接着，使用显式公式将 $\\mathbf{v}$ 和 $\\mathbf{d}$ 更新到第 $n+1$ 步。\n6.  当连续时间步之间任何场在任何节点上的值的最大绝对变化量低于容差 $\\epsilon = 10^{-8}$ 时，即满足稳态条件。\n7.  终止时，计算腹侧区域的比例。对于每个节点 $i$，如果 $v_i > d_i$，则该节点被分类为‘腹侧’。将腹侧节点的总数除以节点总数 $N$。结果四舍五入到三位小数。\n\n该算法针对所提供的三种参数情况中的每一种进行实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import solve\n\ndef solve_problem():\n    \"\"\"\n    Main function to run simulations for all test cases and print results.\n    \"\"\"\n\n    # --- Hill Function Definitions ---\n    def H(z, K, n):\n        z_pow_n = np.power(z, n)\n        K_pow_n = K**n\n        # Add a small epsilon to denominator to prevent division by zero if z and K are both zero.\n        return z_pow_n / (K_pow_n + z_pow_n + 1e-12)\n\n    def H_neg(z, K, n):\n        K_pow_n = K**n\n        z_pow_n = np.power(z, n)\n        return K_pow_n / (K_pow_n + z_pow_n + 1e-12)\n        \n    def run_simulation(case_params):\n        \"\"\"\n        Runs a single simulation for a given set of parameters.\n        \"\"\"\n        # --- Unpack Parameters ---\n        p_morph = case_params['morphogen']\n        p_grn_rates = case_params['grn_rates']\n        p_grn_hills = case_params['grn_hills']\n        \n        Ds, Db, ks, kb, Js, Jb = p_morph\n        alpha_v, alpha_d, beta_v, beta_d, gamma_v, gamma_d = p_grn_rates\n        K_sv, n_sv, K_bv, n_bv, K_bd, n_bd, K_sd, n_sd = p_grn_hills\n        \n        # --- Numerical Setup ---\n        N = 101\n        dx = 1.0 / (N - 1)\n        dt = 0.02\n        T_max = 10.0\n        epsilon = 1e-8\n\n        # --- State Vector Initialization ---\n        s = np.zeros(N)\n        b = np.zeros(N)\n        v = np.zeros(N)\n        d = np.zeros(N)\n\n        # --- Matrix Assembly for Implicit Solver ---\n        # Construct M matrix for the discrete Laplacian with Neumann BCs\n        M = np.zeros((N, N))\n        for i in range(1, N - 1):\n            M[i, i - 1] = 1\n            M[i, i] = -2\n            M[i, i + 1] = 1\n        M[0, 0] = -2\n        M[0, 1] = 2\n        M[N - 1, N - 2] = 2\n        M[N - 1, N - 1] = -2\n\n        # Construct system matrices Cs and Cb for the backward Euler step\n        # Cs * s_new = rhs_s\n        Cs = (1 + dt * ks) * np.eye(N) - (dt * Ds / dx**2) * M\n        Cb = (1 + dt * kb) * np.eye(N) - (dt * Db / dx**2) * M\n\n        # Construct source vectors from flux boundary conditions\n        Qs = np.zeros(N)\n        Qs[0] = 2.0 * Js / dx\n        \n        Qb = np.zeros(N)\n        Qb[N - 1] = 2.0 * Jb / dx\n\n        # --- Time Integration Loop ---\n        t = 0.0\n        while t < T_max:\n            s_old, b_old, v_old, d_old = s.copy(), b.copy(), v.copy(), d.copy()\n\n            # Step 1: Update morphogens (Implicit Backward Euler)\n            rhs_s = s_old + dt * Qs\n            s = solve(Cs, rhs_s, assume_a='gen') \n            \n            rhs_b = b_old + dt * Qb\n            b = solve(Cb, rhs_b, assume_a='gen')\n            \n            # Enforce non-negativity\n            s[s < 0] = 0\n            b[b < 0] = 0\n\n            # Step 2: Update GRN (Explicit Forward Euler)\n            v_prod = alpha_v * H(s, K_sv, n_sv) * H_neg(b, K_bv, n_bv) / (1 + beta_v * d_old)\n            v = v_old + dt * (v_prod - gamma_v * v_old)\n            \n            d_prod = alpha_d * H(b, K_bd, n_bd) * H_neg(s, K_sd, n_sd) / (1 + beta_d * v_old)\n            d = d_old + dt * (d_prod - gamma_d * d_old)\n\n            # Enforce non-negativity\n            v[v < 0] = 0\n            d[d < 0] = 0\n            \n            # Step 3: Check for convergence to steady state\n            max_change = max(np.max(np.abs(s - s_old)), \n                             np.max(np.abs(b - b_old)), \n                             np.max(np.abs(v - v_old)),\n                             np.max(np.abs(d - d_old)))\n            \n            if max_change < epsilon:\n                break\n                \n            t += dt\n\n        # --- Post-processing: Compute Ventral Fraction ---\n        ventral_nodes = np.sum(v > d)\n        ventral_fraction = ventral_nodes / N\n        \n        return round(ventral_fraction, 3)\n\n    # --- Define Test Cases ---\n    grn_rates_common = (1.0, 1.0, 2.0, 2.0, 1.0, 1.0) # alpha_v, alpha_d, beta_v, beta_d, gamma_v, gamma_d\n    grn_hills_common = (0.3, 2, 0.3, 2, 0.3, 2, 0.3, 2) # K_sv, n_sv, K_bv, n_bv, K_bd, n_bd, K_sd, n_sd\n\n    test_cases = [\n        { # Case A\n            'morphogen': (0.01, 0.01, 0.1, 0.1, 1.0, 1.0),\n            'grn_rates': grn_rates_common,\n            'grn_hills': grn_hills_common\n        },\n        { # Case B\n            'morphogen': (0.002, 0.05, 0.1, 0.1, 1.0, 0.8),\n            'grn_rates': grn_rates_common,\n            'grn_hills': grn_hills_common\n        },\n        { # Case C\n            'morphogen': (0.01, 0.01, 1.0, 1.0, 0.2, 0.2),\n            'grn_rates': grn_rates_common,\n            'grn_hills': grn_hills_common\n        }\n    ]\n\n    results = [run_simulation(case) for case in test_cases]\n\n    # --- Final Output ---\n    print(f\"[{','.join(f'{r:.3f}' for r in results)}]\")\n\nsolve_problem()\n```", "id": "2674739"}]}