{"hands_on_practices": [{"introduction": "细胞的命运抉择往往始于其对微环境信号的响应。在造血干细胞的发育过程中，$c-Kit$ 受体对于细胞的存活和增殖至关重要。通过应用化学反应中的质量作用定律，本练习将引导你为受体-配体动力学建立起定量的直觉，这是理解信号转导的基石。[@problem_id:2641382]", "problem": "在胚胎造血过程中的生血内皮中，由c-Kit受体酪氨酸激酶介导的信号传导取决于被可溶性配体干细胞因子占据的受体分数，以及每个被占据受体产生下游信号中间体的速率。假设一个浸泡在充分搅拌的细胞外介质中的单个生血内皮细胞具有以下实验上合理的条件和参数：\n- 配体浓度：$L = 50\\,\\text{nM}$。\n- 受体-配体相互作用的解离常数：$K_d = 5\\,\\text{nM}$，根据质量作用定律，由平衡关系 $K_d = [R][L]/[RL]$ 定义，其中 $[R]$ 是未结合受体的浓度，$[L]$ 是溶液中游离配体的浓度，$[RL]$ 是受体-配体复合物的浓度。\n- 细胞上的受体表面密度：$\\rho_R = 20\\,\\text{receptors}\\,\\mu\\text{m}^{-2}$。\n- 暴露于介质的有效膜面积：$A = 800\\,\\mu\\text{m}^2$。\n- 每个被占据受体产生下游中间体的信号产生速率：$k_{\\text{sig}} = 0.05\\,\\text{s}^{-1}$。\n\n假设细胞外介质足够大，以至于 $L$ 代表膜处的游离配体浓度（即，由结合引起的配体耗竭可以忽略不计），并且受体-配体结合相对于下游信号传导能迅速达到平衡。\n\n仅使用质量作用定律和解离常数的定义，从第一性原理推导c-Kit的稳态占据分数 $\\theta$，并用它计算细胞的总稳态下游信号通量 $F$，该通量定义为下游中间体的总产生速率：\n- 首先，计算稳态下配体对受体的占据分数 $\\theta$。\n- 然后，计算细胞上的受体总数 $N_R$、被占据的受体数量 $N_{\\text{occ}}$，最后计算信号通量 $F = k_{\\text{sig}}\\,N_{\\text{occ}}$。\n\n将占据分数 $\\theta$ 表示为无量纲分数，信号通量 $F$ 的单位为分子/秒/细胞。将两个数值结果四舍五入到四位有效数字。按 $\\theta$，$F$ 的顺序提供您的最终数值结果。", "solution": "合适的起点是将质量作用定律应用于处于平衡状态的受体-配体结合。令 $R$ 表示游离受体，$L$ 表示游离配体，$RL$ 表示受体-配体复合物。结合反应为 $R + L \\rightleftharpoons RL$。在平衡状态下，解离常数定义为\n$$\nK_d \\equiv \\frac{[R][L]}{[RL]}.\n$$\n定义（每个细胞的）受体总量为 $R_T \\equiv [R] + [RL]$。占据分数是配体结合的受体所占的比例：\n$$\n\\theta \\equiv \\frac{[RL]}{R_T}.\n$$\n我们的目标是用 $L$ 和 $K_d$ 来表示 $\\theta$。从 $K_d$ 的定义中求解 $[RL]$，用 $[R]$ 表示：\n$$\n[RL] = \\frac{[R][L]}{K_d}.\n$$\n代入 $[R] = R_T - [RL]$：\n$$\n[RL] = \\frac{(R_T - [RL])\\,L}{K_d}.\n$$\n重新整理，将包含 $[RL]$ 的项收集到左边：\n$$\n[RL]\\left(1 + \\frac{L}{K_d}\\right) = \\frac{R_T\\,L}{K_d}.\n$$\n求解 $[RL]$：\n$$\n[RL] = \\frac{R_T\\,L}{K_d + L}.\n$$\n两边同除以 $R_T$ 得到占据分数：\n$$\n\\theta = \\frac{[RL]}{R_T} = \\frac{L}{K_d + L}.\n$$\n这个表达式仅取决于 $L$ 和 $K_d$，并且在 $L$ 表示游离配体浓度时有效。在所述的大体积、充分搅拌介质的假设下，给定的 $L$ 等于游离配体浓度。\n\n代入给定值 $L = 50\\,\\text{nM}$ 和 $K_d = 5\\,\\text{nM}$：\n$$\n\\theta = \\frac{50}{5 + 50} = \\frac{50}{55} = \\frac{10}{11}.\n$$\n数值上，\n$$\n\\theta = \\frac{10}{11} \\approx 0.909090\\ldots\n$$\n\n接下来，计算细胞上的受体总数。已知受体表面密度 $\\rho_R$ 和暴露面积 $A$，\n$$\nN_R = \\rho_R \\, A = \\left(20\\,\\text{receptors}\\,\\mu\\text{m}^{-2}\\right)\\left(800\\,\\mu\\text{m}^2\\right) = 16000\\,\\text{receptors}.\n$$\n被占据的受体数量为\n$$\nN_{\\text{occ}} = \\theta\\,N_R = \\left(\\frac{10}{11}\\right)\\left(16000\\right) = \\frac{160000}{11} \\approx 14545.4545\\ldots\n$$\n下游信号通量，定义为由被占据的受体引起的信号中间体的产生速率，为\n$$\nF = k_{\\text{sig}}\\,N_{\\text{occ}} = \\left(0.05\\,\\text{s}^{-1}\\right)\\left(\\frac{160000}{11}\\right) = \\frac{8000}{11}\\,\\text{s}^{-1}.\n$$\n数值上，\n$$\nF \\approx 727.2727\\ldots\\,\\text{molecules}\\,\\text{s}^{-1}\\,\\text{cell}^{-1}.\n$$\n\n将两个量均四舍五入到四位有效数字：\n- $\\theta \\approx 0.9091$ (无量纲)。\n- $F \\approx 727.3\\,\\text{molecules}\\,\\text{s}^{-1}\\,\\text{cell}^{-1}$。\n\n这些结果直接由质量作用定律和解离常数的定义，以及细胞的受体总数和每个被占据受体的信号速率常数得出。", "answer": "$$\\boxed{\\begin{pmatrix}0.9091 & 727.3\\end{pmatrix}}$$", "id": "2641382"}, {"introduction": "细胞内的基因调控网络（GRN）负责处理信号并做出命运决定。一个经典的例子是转录因子 $GATA1$ 与 $PU.1$ 的相互抑制，它构成了一个引导红系或髓系命运的“拨动开关”。本练习要求你使用常微分方程（ODEs）对该开关进行建模，探索网络结构如何产生导致不同细胞命运的双稳态。[@problem_id:2641340]", "problem": "在两种关键转录因子 GATA1 和 PU.1 的影响下，造血干细胞 (HSC) 会定型为红系或髓系谱系。这两种因子相互抑制对方的表达，同时也能自我激活自身的表达。从分子生物学中心法则（即DNA转录为RNA，再翻译为蛋白质）以及转录因子对启动子的调控可通过S型Hill函数来描述这一经过充分检验的观察出发，为 GATA1–PU.1 相互拮抗回路建立一个无量纲的常微分方程 (ODE) 模型。使用此模型来算法性地预测系统是否为双稳态，并推断在指定参数集下谱系定型的结果。\n\n待使用的基本定义和约束：\n- 令 $G(t)$ 表示在时间 $t$ 时 GATA1 蛋白的无量纲浓度，单位为任意表达单位；令 $P(t)$ 表示在时间 $t$ 时 PU.1 蛋白的无量纲浓度，单位相同。所有浓度均为非负实数。\n- 定义激活Hill函数 $H_{\\mathrm{act}}(x;n)$ 为 $H_{\\mathrm{act}}(x;n) = \\dfrac{x^{n}}{1 + x^{n}}$，其中 $x \\ge 0$，Hill系数 $n \\ge 1$。\n- 定义抑制Hill函数 $H_{\\mathrm{rep}}(y;K,m)$ 为 $H_{\\mathrm{rep}}(y;K,m) = \\dfrac{1}{1 + \\left(\\dfrac{y}{K}\\right)^{m}}$，其中 $y \\ge 0$，解离常数 $K > 0$，Hill系数 $m \\ge 1$。\n- 假设无量纲的合成与衰变动力学受以下机理组合的控制：每种蛋白质的合成速率等于一个最大合成速率乘以一个基础项加上一个自我激活项的乘积，再乘以来自对立因子的抑制项；一级衰变与浓度成正比。\n\n你的任务是：\n- 基于上述基本定义，推导并实现以下ODE，并进行论证：\n$$\n\\frac{dG}{dt} = s_G \\left( b_G + a_G \\, H_{\\mathrm{act}}(G; n_G) \\right) \\, H_{\\mathrm{rep}}(P; K_{PG}, m_{PG}) - d_G \\, G,\n$$\n$$\n\\frac{dP}{dt} = s_P \\left( b_P + a_P \\, H_{\\mathrm{act}}(P; n_P) \\right) \\, H_{\\mathrm{rep}}(G; K_{GP}, m_{GP}) - d_P \\, P,\n$$\n其中 $s_G, s_P > 0$ 是合成尺度因子，$b_G, b_P \\ge 0$ 是基础转录项，$a_G, a_P \\ge 0$ 是自我激活增益，$d_G, d_P > 0$ 是一级衰变速率，$n_G, n_P \\ge 1$ 是激活Hill系数，$m_{PG}, m_{GP} \\ge 1$ 是抑制Hill系数，$K_{PG}, K_{GP} > 0$ 是抑制解离常数。所有参数均为无量纲。基因表达单位是任意的，并且通过构造是无量纲的；无需物理单位。\n- 对于每个指定的参数集，通过从一个初始条件网格对ODE进行数值积分，并对长时间后的状态进行聚类，来确定系统的吸引子。使用一个均匀的方形初始条件 $(G(0), P(0))$ 网格，范围为 $[0, G_{\\max}] \\times [0, P_{\\max}]$，其中 $G_{\\max} = P_{\\max} = 4$，网格点为 $9 \\times 9$ 个均匀间隔的点（包括端点）。使用你选择的任何标准ODE求解器，从 $t = 0$ 积分到 $t = T$，其中 $T = 200$。将 $t = T$ 时的状态视为每个初始条件的终末状态。通过将欧几里得距离小于 $\\varepsilon = 10^{-3}$ 的状态分组，将终末状态聚类成不同的吸引子。不同簇的总数即为不同吸引子的数量。\n- 根据对最终状态的不同吸引子质心进行评估的以下规则，为每个参数集将谱系结果分类为单个整数代码：\n    - 如果存在至少2个不同的吸引子（双稳态区域，对应于不同的命运），则返回 $3$。\n    - 如果恰好有1个不同的吸引子，计算比率 $R = \\dfrac{G^{\\ast}}{P^{\\ast} + 10^{-9}}$，其中 $(G^{\\ast}, P^{\\ast})$ 是该唯一吸引子的质心，$10^{-9}$ 是一个为避免除以零而设置的小稳定项。设决策阈值为 $\\theta = 1.5$。如果 $R > \\theta$，返回 $1$（GATA1高表达，类红系定型）；如果 $R < \\dfrac{1}{\\theta}$，返回 $2$（PU.1高表达，类髓系定型）；否则返回 $0$（共表达单吸引子）。\n- 程序必须是确定性的，不得使用任何随机性。\n\n测试套件：\n实现你的程序，以精确评估以下四个参数集，并按所列顺序输出每个参数集的分类代码。\n- 测试 A（对称，强相互抑制与自我激活；预期为双稳态）：$s_G = 1$, $s_P = 1$, $d_G = 1$, $d_P = 1$, $b_G = 0.02$, $b_P = 0.02$, $a_G = 6$, $a_P = 6$, $n_G = 2$, $n_P = 2$, $m_{PG} = 4$, $m_{GP} = 4$, $K_{PG} = 1$, $K_{GP} = 1$。\n- 测试 B（非对称，有利于GATA1）：$s_G = 1.2$, $s_P = 0.7$, $d_G = 1$, $d_P = 1$, $b_G = 0.02$, $b_P = 0.02$, $a_G = 6$, $a_P = 2$, $n_G = 2$, $n_P = 2$, $m_{PG} = 4$, $m_{GP} = 4$, $K_{PG} = 1$, $K_{GP} = 1$。\n- 测试 C（非对称，有利于PU.1）：$s_G = 0.7$, $s_P = 1.2$, $d_G = 1$, $d_P = 1$, $b_G = 0.02$, $b_P = 0.02$, $a_G = 2$, $a_P = 6$, $n_G = 2$, $n_P = 2$, $m_{PG} = 4$, $m_{GP} = 4$, $K_{PG} = 1$, $K_{GP} = 1$。\n- 测试 D（弱抑制，中等自我激活；预期为单一共表达吸引子）：$s_G = 1$, $s_P = 1$, $d_G = 1$, $d_P = 1$, $b_G = 0.2$, $b_P = 0.2$, $a_G = 1$, $a_P = 1$, $n_G = 2$, $n_P = 2$, $m_{PG} = 1$, $m_{GP} = 1$, $K_{PG} = 1$, $K_{GP} = 1$。\n\n最终输出格式：\n你的程序应生成单行输出，其中包含结果，格式为用方括号括起来的逗号分隔列表，顺序为 [测试 A, 测试 B, 测试 C, 测试 D]。例如，一个有效的输出可能看起来像 [$3$,$1$,$2$,$0$]。输出为整数，没有单位，因为该模型通过构造是无量纲的。", "solution": "该问题陈述经过了严格验证，被认为是有效的。它在科学上基于分子和系统生物学原理，在数学上是适定的，并且以足够的细节和清晰度进行了规定，从而能够得出一个唯一、客观且可验证的解。所有必需的参数、方程和数值程序都已提供，没有歧义或矛盾。因此，我们将着手进行形式化推导和计算求解。\n\n该问题要求对一个动力学系统进行形式化和分析，该系统模拟了两种转录因子 GATA1 和 PU.1 的基因调控网络，其浓度分别表示为 $G(t)$ 和 $P(t)$。该动力学基于中心法则，其中蛋白质浓度的变化是合成与衰变之间平衡的结果。\n\n蛋白质（例如 $G(t)$）浓度的变化率由其合成速率和衰变速率之差给出：\n$$\n\\frac{dG}{dt} = \\text{合成速率}_G - \\text{衰变速率}_G\n$$\n根据问题陈述，衰变是一个一级过程，意味着其速率与当前浓度成正比。\n$$\n\\text{衰变速率}_G = d_G \\, G\n$$\n其中 $d_G > 0$ 是衰变速率常数。\n\n合成速率被描述为一个最大合成速率 $s_G > 0$、一个转录激活项和一个转录抑制项的乘积。\n$$\n\\text{合成速率}_G = s_G \\times (\\text{激活项}) \\times (\\text{抑制项})\n$$\n激活项结合了基础（渗漏）表达组分 $b_G \\ge 0$ 和一个自我激活组分，即 GATA1 增强其自身的转录。这种自我激活由激活Hill函数 $H_{\\mathrm{act}}(G; n_G)$ 乘以一个增益因子 $a_G \\ge 0$ 来建模。因此，总激活项为：\n$$\n\\text{激活项} = b_G + a_G \\, H_{\\mathrm{act}}(G; n_G) = b_G + a_G \\, \\frac{G^{n_G}}{1 + G^{n_G}}\n$$\nGATA1 的合成受到 PU.1 的抑制。这由抑制Hill函数 $H_{\\mathrm{rep}}(P; K_{PG}, m_{PG})$ 来描述。\n$$\n\\text{抑制项} = H_{\\mathrm{rep}}(P; K_{PG}, m_{PG}) = \\frac{1}{1 + \\left(\\frac{P}{K_{PG}}\\right)^{m_{PG}}}\n$$\n将这些组分结合起来，得到 $G(t)$ 的完整微分方程：\n$$\n\\frac{dG}{dt} = s_G \\left( b_G + a_G \\, \\frac{G^{n_G}}{1 + G^{n_G}} \\right) \\left( \\frac{1}{1 + \\left(\\frac{P}{K_{PG}}\\right)^{m_{PG}}} \\right) - d_G \\, G\n$$\n这正是问题陈述中提供的第一个方程。根据逻辑的对称性，对蛋白质 PU.1 应用相同的原理（其被自我激活并受 GATA1 抑制），我们推导出第二个方程：\n$$\n\\frac{dP}{dt} = s_P \\left( b_P + a_P \\, \\frac{P^{n_P}}{1 + P^{n_P}} \\right) \\left( \\frac{1}{1 + \\left(\\frac{G}{K_{GP}}\\right)^{m_{GP}}} \\right) - d_P \\, P\n$$\n因此，这个由两个耦合的常微分方程(ODE)组成的系统得到了论证。\n\n数值解将严格按照指定的程序实现。\n1.  **定义ODE系统**：ODE系统方程组的右侧将实现为一个函数 `dY/dt = f(t, Y, params)`，其中 $Y = [G, P]$ 是状态向量，`params` 是一个包含所有14个模型参数的字典。\n2.  **生成初始条件**：将在方形域 $[0, 4] \\times [0, 4]$ 上生成一个 $9 \\times 9 = 81$ 个初始条件 $(G(0), P(0))$ 的均匀网格。`numpy.linspace` 函数适合此目的，可以生成包含端点的序列。\n3.  **数值积分**：对于每个初始条件，将从 $t=0$ 到 $t=200$ 对ODE系统进行积分。将使用 `scipy.integrate.solve_ivp` 函数，因为它为求解初值问题提供了稳健且精确的方法。系统在最终时间的状态 $Y(200) = [G(200), P(200)]$ 将被存储为终末状态。\n4.  **终末状态聚类**：将对81个终末状态进行聚类，以识别不同的吸引子。指定的聚类规则是，将欧几里得距离小于 $\\varepsilon = 10^{-3}$ 的状态分为一组。这将通过将终末状态视为图中的节点来实现，如果两个节点之间的欧几里得距离小于 $\\varepsilon$，则它们之间存在一条边。然后，聚类簇就是该图的连通分量。将使用广度优先搜索(BFS)算法来确定性地找到这些分量。为确保确定性，在聚类开始前，将对终末状态列表进行字典序排序。将状态划分到簇后，计算每个簇的质心（该簇内所有点的均值）。\n5.  **结果分类**：吸引子质心的数量和位置决定了谱系结果代码。\n    - 如果吸引子数量为2个或更多，系统是双稳态的，代码为 $3$。\n    - 如果恰好有1个吸引子，其质心为 $(G^{\\ast}, P^{\\ast})$，则计算比率 $R = \\frac{G^{\\ast}}{P^{\\ast} + 10^{-9}}$。通过将 $R$ 与阈值 $\\theta = 1.5$ 进行比较来确定结果：\n        - 如果 $R > \\theta$，代码为 $1$ (GATA1高表达)。\n        - 如果 $R < 1/\\theta$，代码为 $2$ (PU.1高表达)。\n        - 否则，代码为 $0$ (共表达)。\n\n这个完整的算法将应用于四个指定的参数集中的每一个，以生成最终输出。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    It defines the parameter sets and calls the solver for each case.\n    \"\"\"\n\n    test_cases = [\n        # Test A: symmetric, strong mutual repression and auto-activation\n        {\n            \"s_G\": 1.0, \"s_P\": 1.0, \"d_G\": 1.0, \"d_P\": 1.0,\n            \"b_G\": 0.02, \"b_P\": 0.02, \"a_G\": 6.0, \"a_P\": 6.0,\n            \"n_G\": 2.0, \"n_P\": 2.0, \"m_PG\": 4.0, \"m_GP\": 4.0,\n            \"K_PG\": 1.0, \"K_GP\": 1.0\n        },\n        # Test B: asymmetric, GATA1-favored\n        {\n            \"s_G\": 1.2, \"s_P\": 0.7, \"d_G\": 1.0, \"d_P\": 1.0,\n            \"b_G\": 0.02, \"b_P\": 0.02, \"a_G\": 6.0, \"a_P\": 2.0,\n            \"n_G\": 2.0, \"n_P\": 2.0, \"m_PG\": 4.0, \"m_GP\": 4.0,\n            \"K_PG\": 1.0, \"K_GP\": 1.0\n        },\n        # Test C: asymmetric, PU.1-favored\n        {\n            \"s_G\": 0.7, \"s_P\": 1.2, \"d_G\": 1.0, \"d_P\": 1.0,\n            \"b_G\": 0.02, \"b_P\": 0.02, \"a_G\": 2.0, \"a_P\": 6.0,\n            \"n_G\": 2.0, \"n_P\": 2.0, \"m_PG\": 4.0, \"m_GP\": 4.0,\n            \"K_PG\": 1.0, \"K_GP\": 1.0\n        },\n        # Test D: weak repression, modest auto-activation\n        {\n            \"s_G\": 1.0, \"s_P\": 1.0, \"d_G\": 1.0, \"d_P\": 1.0,\n            \"b_G\": 0.2, \"b_P\": 0.2, \"a_G\": 1.0, \"a_P\": 1.0,\n            \"n_G\": 2.0, \"n_P\": 2.0, \"m_PG\": 1.0, \"m_GP\": 1.0,\n            \"K_PG\": 1.0, \"K_GP\": 1.0\n        }\n    ]\n\n    results = [run_simulation_and_classify(params) for params in test_cases]\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef h_act(x, n):\n    \"\"\"Activation Hill function.\"\"\"\n    return (x**n) / (1.0 + x**n)\n\ndef h_rep(y, K, m):\n    \"\"\"Repression Hill function.\"\"\"\n    return 1.0 / (1.0 + (y / K)**m)\n\ndef ode_system(t, y, p):\n    \"\"\"\n    Defines the system of ODEs for GATA1-PU.1 mutual antagonism.\n    y: state vector [G, P]\n    p: dictionary of parameters\n    \"\"\"\n    G, P = y[0], y[1]\n\n    dG_dt = p[\"s_G\"] * (p[\"b_G\"] + p[\"a_G\"] * h_act(G, p[\"n_G\"])) * h_rep(P, p[\"K_PG\"], p[\"m_PG\"]) - p[\"d_G\"] * G\n    dP_dt = p[\"s_P\"] * (p[\"b_P\"] + p[\"a_P\"] * h_act(P, p[\"n_P\"])) * h_rep(G, p[\"K_GP\"], p[\"m_GP\"]) - p[\"d_P\"] * P\n\n    return [dG_dt, dP_dt]\n\ndef cluster_states(terminal_states, epsilon):\n    \"\"\"\n    Clusters terminal states using a connected components algorithm.\n    Nodes are states, an edge exists if Euclidean distance < epsilon.\n    \"\"\"\n    # Sort points for deterministic behavior\n    sorted_states = sorted(terminal_states, key=lambda p: (p[0], p[1]))\n    n_states = len(sorted_states)\n    assigned = [False] * n_states\n    clusters = []\n\n    for i in range(n_states):\n        if not assigned[i]:\n            # Start a new cluster using Breadth-First Search (BFS)\n            new_cluster_indices = []\n            queue = [i]\n            assigned[i] = True\n            \n            head = 0\n            while head < len(queue):\n                current_idx = queue[head]\n                head += 1\n                new_cluster_indices.append(current_idx)\n\n                # Find all unassigned neighbors\n                p1 = np.array(sorted_states[current_idx])\n                for j in range(n_states):\n                    if not assigned[j]:\n                        p2 = np.array(sorted_states[j])\n                        dist = np.linalg.norm(p1 - p2)\n                        if dist < epsilon:\n                            assigned[j] = True\n                            queue.append(j)\n            \n            clusters.append([sorted_states[k] for k in new_cluster_indices])\n            \n    # Calculate centroids for each cluster\n    centroids = [np.mean(c, axis=0) for c in clusters]\n    return centroids\n\ndef classify_attractors(centroids):\n    \"\"\"\n    Classifies the system outcome based on the number and position of attractors.\n    \"\"\"\n    num_attractors = len(centroids)\n    \n    if num_attractors >= 2:\n        return 3  # Bistable\n\n    if num_attractors == 1:\n        G_star, P_star = centroids[0]\n        ratio = G_star / (P_star + 1e-9)\n        threshold = 1.5\n        \n        if ratio > threshold:\n            return 1  # GATA1-high\n        elif ratio < 1.0 / threshold:\n            return 2  # PU.1-high\n        else:\n            return 0  # Co-expression\n    \n    # Should not be reached with the given problem setup\n    return -1 # Error code\n\ndef run_simulation_and_classify(params):\n    \"\"\"\n    Runs the full simulation and classification pipeline for a single parameter set.\n    \"\"\"\n    # 1. Setup grid of initial conditions\n    G_max, P_max = 4.0, 4.0\n    grid_size = 9\n    g_initial = np.linspace(0, G_max, grid_size)\n    p_initial = np.linspace(0, P_max, grid_size)\n    initial_conditions = np.array(np.meshgrid(g_initial, p_initial)).T.reshape(-1, 2)\n    \n    # 2. Integrate ODEs for each initial condition\n    t_span = (0, 200)\n    terminal_states = []\n    for y0 in initial_conditions:\n        sol = solve_ivp(\n            fun=ode_system, \n            t_span=t_span, \n            y0=y0, \n            args=(params,), \n            method='RK45', \n            dense_output=True\n        )\n        terminal_states.append(sol.y[:, -1])\n        \n    # 3. Cluster terminal states to find attractors\n    epsilon = 1e-3\n    attractor_centroids = cluster_states(terminal_states, epsilon)\n    \n    # 4. Classify outcome\n    return classify_attractors(attractor_centroids)\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2641340"}, {"introduction": "理论模型必须通过实验来验证，但从复杂数据中推断因果关系是核心挑战。本练习提供了一个包含单细胞多组学和基因扰动（如 CRISPRi 和 dTAG）的真实场景，要求你批判性地分析证据，以区分命运决定的因果驱动因素与简单的相关现象。这项“干实验室”实践将训练你如何严谨地思考因果关系、功能冗余和混杂因素，这是从现代生物学数据中得出可靠结论的关键技能。[@problem_id:2641365]", "problem": "在脊椎动物胚胎造血过程中，源自生血内皮的多能祖细胞（MPP）在谱系相关位点上表现出低水平的表达和染色质可及性，这通常被称为谱系启动。一个核心问题是，这种启动信号究竟是命运选择的因果性倾向，还是仅仅是上游状态（例如，成熟阶段或细胞周期）的相关性结果。\n\n考虑以下在从主动脉-性腺-中肾（AGM）分离的生血内皮源MPP中获得的真实、自洽的数据和干预措施。单细胞多组学分析结合了单细胞RNA测序（scRNA-seq）和单细胞转座酶可及性染色质测序（scATAC-seq），随后通过条形码技术进行克隆命运追踪。首次使用的缩写词：造血干细胞（HSC），多能祖细胞（MPP），单细胞RNA测序（scRNA-seq），单细胞转座酶可及性染色质测序（scATAC-seq），成簇规律间隔短回文重复序列干扰（CRISPRi），降解标签系统（dTAG）。\n\n在 $t_0$ 时刻（在明显的谱系定型之前），对 $n=1200$ 个MPP进行了分析。在一个记为 $\\mathrm{SE}_{\\mathrm{ery}}$ 的红细胞系超级增强子模块上具有高可及性的细胞，其随后的红细胞系命运概率为 $P(\\mathrm{ery} \\mid \\mathrm{High\\;SE}_{\\mathrm{ery}})=0.62$，而可及性低的细胞则为 $P(\\mathrm{ery} \\mid \\mathrm{Low\\;SE}_{\\mathrm{ery}})=0.18$。一个利用 $t_0$ 时刻的协变量（包括红细胞系启动分数、髓系启动分数、拟时 $\\tau$ 和细胞周期分数 $C$）来预测命运的逻辑斯蒂模型显示，红细胞系可及性分数具有独立的贡献，其系数为 $\\hat{\\beta}_{\\mathrm{ery\\_acc}}=0.90 \\pm 0.20$ 且 $p<10^{-3}$。\n\n在 $t_0$ 和 $t_1$ 之间（推断的定型窗口期）进行了四种时间上受控的靶向扰动，并在 $t_2$ 时刻对细胞命运进行评估：\n1) 靶向 $\\mathrm{SE}_{\\mathrm{ery}}$ 内单个组成性增强子的CRISPRi在 $t_1$ 时刻使早期红细胞系相关转录本减少了 $70\\%$，但并未改变 $t_2$ 时刻的 $P(\\mathrm{ery})$；并行的scATAC-seq表明，在 $\\mathrm{SE}_{\\mathrm{ery}}$ 内的两个冗余增强子处，可及性出现了代偿性增加。\n2) 靶向 $\\mathrm{SE}_{\\mathrm{ery}}$ 内三个冗余增强子的多重CRISPRi在 $t_1$ 时刻降低了红细胞系启动分数，并在 $t_2$ 时刻将红细胞系命运从 $0.58$ 降至 $0.22$。\n3) 在 $t_0 \\rightarrow t_1$ 期间，通过dTAG特异性地急性降解红细胞系主调节因子——红细胞系Krüppel样因子（EKLF），在 $t_1$ 时刻降低了红细胞系启动分数，并在 $t_2$ 时刻将红细胞系命运从 $0.60$ 降至 $0.12$。在 $t_0 \\rightarrow t_1$ 窗口之外进行降解对命运没有影响。\n4) 瞬时过表达髓系主调节因子CCAAT/增强子结合蛋白α（CEBPA）在 $t_0$ 时刻增加了髓系启动分数，但也延长了细胞周期（$C$ 增加）并延迟了成熟（$\\tau$ 减少）。在 $t_2$ 时刻，髓系输出相对于对照组保持不变。\n\n从分子生物学中心法则（DNA到RNA到蛋白质）、转录因子在增强子上占据从而进行转录的顺式调控核心原则，以及基本的因果标准（时间优先性、必要性与充分性、以及在考虑冗余和混杂因素情况下基于扰动的推断）出发，评估以下论断：\n\n“多能祖细胞中的谱系启动信号代表了因果性倾向，而非相关性结果。”\n\n哪个选项最能概括从以上数据中得出的结论？\n\nA. 启动信号是广泛的因果性倾向：其在 $t_0$ 时的预测能力和 EKLF 降解实验共同证明了谱系启动普遍指导着跨谱系的命运。\n\nB. 启动信号仅仅是相关性结果：未能改变命运的单增强子CRISPRi实验证明了谱系启动是非因果的。\n\nC. 启动信号包含因果和非因果成分：一些信号反映了在正确时间窗口内必要调控节点的活动（例如，EKLF和非冗余增强子模块），而另一些则被缓冲或反映了相关的上游状态（例如，细胞周期），因此因果归因需要考虑冗余性的、靶向的、时间精确的扰动。\n\nD. 因果或相关的解释均不被支持：多组学相关性和扰动缺乏时间信息，因此无法得出关于因果关系的推断。", "solution": "我们从与基因调控和发育决策中的因果关系相关的基本原理开始。\n\n1) 分子生物学中心法则指出，信息从DNA流向RNA，再流向蛋白质。对于发育调控而言，转录因子（TFs）结合到顺式调控DNA（启动子和增强子）上以调控转录。因此，TF的占据和增强子的可及性位于转录变化的上游，而转录变化又先于执行谱系程序的蛋白质水平效应子。所以，当在 $t_0$ 时刻测量增强子可及性和TF水平，并在 $t_2$ 时刻评估命运时，时间上的优先性与因果关系是相容的，但其本身并不能确立因果关系。\n\n2) 顺式调控逻辑和冗余性：多个增强子通常控制着关键的谱系基因。如果一个增强子被抑制，其他冗余的增强子可以进行代偿，从而缓冲基因表达以维持命运结果。因此，扰动单个元件得到的阴性结果并不能证伪更广泛的调控程序的因果性。\n\n3) 因果标准：要使一个因素被认为是命运的因果性倾向，它应该 (i) 在时间上先于结果，(ii) 在相关窗口内被操纵时能改变结果（必要性和/或充分性），以及 (iii) 在控制了混杂过程（例如，细胞周期、成熟状态）后，其效应仍然存在。\n\n现在我们来解读数据。\n\n$t_0$ 时的观测预测能力：在 $t_0$ 时具有高红细胞系增强子可及性的细胞，其 $P(\\mathrm{ery} \\mid \\mathrm{High\\;SE}_{\\mathrm{ery}})=0.62$，而低可及性细胞为 $0.18$，并且逻辑斯蒂模型显示，即使在包含了拟时 $\\tau$ 和细胞周期 $C$ 之后，红细胞系可及性系数仍为 $\\hat{\\beta}_{\\mathrm{ery\\_acc}}=0.90 \\pm 0.20$ 且 $p<10^{-3}$。这表明 (a) 存在时间优先性，以及 (b) 这种预测性关联不能完全被成熟或增殖解释。然而，预测性关联不等同于因果关系；它既可能与因果性倾向相容，也可能只是一个与未测量的因果驱动因子紧密相关的稳定生物标志物。\n\n单增强子CRISPRi：靶向一个组成性增强子在 $t_1$ 时刻使早期红细胞系转录本减少了 $70\\%$，但并未改变 $t_2$ 时刻的 $P(\\mathrm{ery})$。鉴于在 $\\mathrm{SE}_{\\mathrm{ery}}$ 内的另外两个增强子处出现了代偿性可及性增加，这个结果与增强子冗余缓冲命运结果的观点是一致的。它并不能证明启动程序的非因果性；相反，它表明由于冗余性，这一个别元件并非必需。\n\n多重增强子CRISPRi：靶向三个冗余增强子在 $t_1$ 时刻降低了启动分数，并在 $t_2$ 时刻将红细胞系命运从 $0.58$ 降至 $0.22$。这项干预满足了时间优先性，并证明了该增强子模块对于正常红细胞系输出的必要性，从而支持了红细胞系启动结构（至少是其一部分）的因果作用。\n\n急性EKLF降解：在 $t_0 \\rightarrow t_1$ 期间移除一个谱系决定性TF，在 $t_1$ 时刻降低了启动分数，并在 $t_2$ 时刻将红细胞系输出从 $0.60$ 降至 $0.12$，而在此窗口之外的降解则无效果。这确立了该TF在时间上特异的必要作用，与启动信号在正确窗口内测量时能反映因果性调控活动的观点相符。\n\nCEBPA过表达：在 $t_0$ 时刻增加髓系启动分数也延长了细胞周期（$C$ 增加）并降低了成熟度（$\\tau$ 减少），但 $t_2$ 时刻的髓系输出没有变化。这表明，由于混杂因素和时间不匹配，改变的启动读数可以与命运解耦，说明并非所有在 $t_0$ 时的启动特征都足以指导命运。\n\n从原理出发的综合分析：\n- 时间优先性存在。\n- 针对定型窗口内必要的上游节点（EKLF，非冗余增强子模块）的扰动会改变命运，这支持了这些组分的因果性。\n- 冗余和混杂因素可以使一些启动读数即使具有预测性，也变得非因果或不充分。\n\n因此，数据支持一种混合解释：一些启动信号代表因果性倾向（当它们在正确的时间窗口内指示了必要的调控活动时），而另一些则是相关性结果或被缓冲的读数。\n\n逐项分析选项：\n\nA. 该选项基于预测能力和一个TF实验声称广泛的因果性。这属于过度概括；预测性关联通常不能确立因果关系，并且CEBPA和单增强子实验显示了被缓冲和混杂的情况。结论：不正确。\n\nB. 该选项从单增强子实验的阴性结果推断出非因果性。这忽略了冗余性以及来自多重增强子CRISPRi和EKLF降解的积极因果证据。结论：不正确。\n\nC. 该选项断言存在一种混合情况：一些启动组分在适当的时间和网络背景下是因果的，而另一些则是相关的或被缓冲的；它强调了需要进行考虑冗余性的、靶向的、时间精确的扰动。这与基本原理和所有数据都一致。结论：正确。\n\nD. 该选项声称由于缺乏时间信息而无法进行因果推断。这是错误的；实验明确地在 $t_0 \\rightarrow t_1$ 期间进行操纵，并在 $t_2$ 测量结果，提供了时间分辨率。结论：不正确。", "answer": "$$\\boxed{C}$$", "id": "2641365"}]}