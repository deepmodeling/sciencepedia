{"hands_on_practices": [{"introduction": "热量时间（degree-days）是预测种子萌发等发育过程如何响应温度的核心工具。这个基础练习将引导你从物理和生物学的基本原理出发，亲自推导出描述萌发时间与温度关系的经典热量时间模型 [@problem_id:2608938]。通过这个推导，你将深刻理解生物体如何随时间整合环境信号，并将这一过程抽象为简洁的数学形式。", "problem": "将一批温带一年生物种置于亚适温范围内的恒定温度下进行孵化。经验研究表明，在下限基础温度 $T_b$ 和最适温度 $T_o$ 之间，朝向发芽的进程可以通过线性积温得到很好的近似：在任何时刻，只有高于基础温度的温度才对发育有贡献，并且当累积的热暴露达到特定批次和百分位的要求时，发育才会进行。具体来说，假设以下基本原则：\n- 在基础温度 $T_b$ 以下，不会发生任何朝向发芽的发育进程（发育速率为零）。\n- 对于恒定温度 $T$（其中 $T_b < T < T_o$），热量进程变量 $\\Theta(t)$ 的瞬时累积速率与超出基础温度的部分成正比，根据热时间的定义，比例系数为1，因此 $\\mathrm{d}\\Theta/\\mathrm{d}t$ 等于超出 $T_b$ 的温度。\n- 当累积的热量进程变量首次达到该批次中特定百分位所特有的阈值 $\\theta_T(g)$ 时，第 $g$ 百分位的种子便会发芽。\n\n仅使用这些假设，不使用任何额外的简化公式，推导出一个在 $T_b < T < T_o$ 范围内有效的、表示第 $g$ 百分位发芽时间 $t_g$ 的封闭形式表达式，该表达式是 $T$、$T_b$ 和 $\\theta_T(g)$ 的函数。当 $\\theta_T(g)$ 以度-日为单位，温度以摄氏度为单位时，请用“天”来表示最终的时间。然后，简要说明在此框架下 $T_b$、$T_o$ 和 $\\theta_T(g)$ 的生物学意义。您最终报告的答案必须是 $t_g$ 的单一简化解析表达式。", "solution": "该问题要求基于线性热时间模型的原理，推导种子群体中特定百分位发芽时间的表达式。该模型适用于亚适温范围 $T_b < T < T_o$ 内的恒定孵化温度 $T$，其中 $T_b$ 是基础温度，$T_o$ 是最适温度。\n\n首先，我们必须验证问题陈述的有效性。\n\n已知条件如下：\n1.  恒定孵化温度 $T$，其中 $T_b < T < T_o$。\n2.  基础温度为 $T_b$。低于此温度，发育速率为零。\n3.  热量进程变量为 $\\Theta(t)$。\n4.  热量进程的累积速率由微分方程 $\\frac{\\mathrm{d}\\Theta}{\\mathrm{d}t} = T - T_b$ 给出。\n5.  第 $g$ 百分位种子批次的发芽条件是累积的热量进程 $\\Theta(t)$ 达到阈值 $\\theta_T(g)$。\n6.  第 $g$ 百分位的发芽时间表示为 $t_g$。\n7.  $\\theta_T(g)$ 的单位是度-日，温度的单位是摄氏度。最终得到的时间 $t_g$ 必须以天为单位。\n\n该问题具有科学依据，利用了标准的热时间（或度-日）模型，这是农业科学和生态学中一个成熟的概念。该问题提法明确，为找到唯一解提供了所有必要条件。模型中的参数和变量定义清晰。因此，该问题是有效的，我们可以继续求解。\n\n提供的基本关系是控制热量进程 $\\Theta$ 随时间 $t$ 累积的常微分方程：\n$$\n\\frac{\\mathrm{d}\\Theta}{\\mathrm{d}t} = T - T_b\n$$\n该方程在恒定温度 $T$ 且 $T > T_b$ 的条件下有效。\n\n为了求出截至某个时间 $t$ 的总累积热量进程，我们必须对这个速率方程进行积分。我们假设在孵化期开始时，即 $t=0$ 时，尚未有任何热量进程累积。这给了我们初始条件 $\\Theta(0) = 0$。\n\n我们可以通过分离变量法求解此微分方程：\n$$\n\\mathrm{d}\\Theta = (T - T_b) \\mathrm{d}t\n$$\n将两边从初始状态 $(t=0, \\Theta=0)$ 积分到一般状态 $(t, \\Theta(t))$，得到：\n$$\n\\int_{0}^{\\Theta(t)} \\mathrm{d}\\Theta' = \\int_{0}^{t} (T - T_b) \\mathrm{d}t'\n$$\n由于在实验期间 $T$ 和 $T_b$ 是常数，因此项 $(T - T_b)$ 也是一个常数，可以移到右侧积分号的外面。\n$$\n[\\Theta']_{0}^{\\Theta(t)} = (T - T_b) [t']_{0}^{t}\n$$\n计算积分，得到在任意时间 $t$ 的累积热量进程表达式：\n$$\n\\Theta(t) - 0 = (T - T_b) (t - 0)\n$$\n$$\n\\Theta(t) = (T - T_b) t\n$$\n该方程表明，对于高于基础温度的恒定温度，热时间随实际时间呈线性累积。\n\n问题陈述，当累积的热量进程 $\\Theta(t_g)$ 达到阈值 $\\theta_T(g)$ 时，第 $g$ 百分位的种子批次在特定时间 $t_g$ 发芽。我们可以将此条件表示为：\n$$\n\\Theta(t_g) = \\theta_T(g)\n$$\n将我们推导出的在 $t=t_g$ 时的 $\\Theta(t)$ 表达式代入此条件，我们得到：\n$$\n(T - T_b) t_g = \\theta_T(g)\n$$\n我们的目标是求出 $t_g$ 的表达式。由于问题定义在 $T > T_b$ 的条件下，项 $(T - T_b)$ 是一个正的非零常数。因此，我们可以通过将两边同除以 $(T - T_b)$ 来分离出 $t_g$：\n$$\nt_g = \\frac{\\theta_T(g)}{T - T_b}\n$$\n这就是第 $g$ 百分位发芽时间的封闭形式表达式。\n\n对物理单位的检验提供了进一步的验证。热时间需求 $\\theta_T(g)$ 的单位是度-日（例如 $\\text{°C} \\cdot \\text{days}$）。温度 $T$ 和 $T_b$ 的单位是摄氏度（$\\text{°C}$），因此它们的差 $(T - T_b)$ 的单位也是摄氏度。$t_g$ 表达式的单位是：\n$$\n\\text{units of } t_g = \\frac{\\text{units of } \\theta_T(g)}{\\text{units of } (T - T_b)} = \\frac{\\text{°C} \\cdot \\text{days}}{\\text{°C}} = \\text{days}\n$$\n最终得到的单位是天，这是一个时间单位，与预期和要求一致。\n\n最后，此框架内关键参数的生物学意义如下：\n- $T_b$ (基础温度): 这代表了任何朝向发芽的发育进程的理论最低温度阈值。低于此温度，生物体的代谢过程被假定为停止，无论经过多长时间都不会有发芽进程的进展。\n- $T_o$ (最适温度): 这是发育速率达到最大的温度。线性模型 $\\frac{\\mathrm{d}\\Theta}{\\mathrm{d}t} = T - T_b$ 只是一个近似，仅在亚适温范围 $T_b < T < T_o$ 内成立。超过 $T_o$，发育速率通常会因热应激而开始下降。\n- $\\theta_T(g)$ (热时间需求): 该参数量化了种子完成发芽过程所必须经历的累积热量进程总量（一种生理时间尺度）。它作为百分位 $g$ 的函数，解释了种子群体内部固有的生物变异性；‘较快’的种子（$g$ 值较小）具有较小的 $\\theta_T(g)$，与‘较慢’的种子（$g$ 值较大）相比，需要较少的热量积累即可发芽。", "answer": "$$\n\\boxed{t_g = \\frac{\\theta_T(g)}{T - T_b}}\n$$", "id": "2608938"}, {"introduction": "在自然界中，温度和水分往往共同作用，决定种子是否能够成功萌发。本练习在前一个热量时间模型的基础上，引入了水分潜力这一关键变量，引导你构建并推导出一个更全面的水热时间模型（hydrothermal time model）[@problem_id:2608875]。这项实践不仅展示了如何将多个环境因子整合进一个统一的框架，还通过一个计算示例让你体会如何用实验数据来量化模型中的生物学参数。", "problem": "一个种子批表现出生理休眠异质性，即单个种子能够向萌发过程发展的最低水势各不相同。对于给定的累计萌发分数 $g$（例如，中位数 $g = 0.5$），将相应的基础水势 $\\Psi_{b}(g)$ 定义为这样一个唯一的阈值水势：当环境水势等于或高于该值时，分数 $g$ 的种子可以向萌发过程发展。考虑等温和等水势条件，其中外部水势 $\\Psi$ 和温度 $T$ 随时间保持恒定。\n\n假设以下基本前提：\n- 对于任何阈值未被超过的单个种子，其萌发进程为零；一旦外部环境超过其个体阈值，其内部进程变量 $x(t)$ 将单调增加。\n- 在与阈值有微小偏离的情况下，进程速率与偏离阈值的驱动差成一阶关系。在固定温度的水分限制条件下，该速率与外部水势和种子基础水势之差成正比。在固定水势的次适温条件下，该速率与外部温度和基础温度 $T_{b}$（低于此温度则进程不发生）之差成正比。\n- 分数 $g$ 的累计萌发时间 $t_{g}$ 是在恒定条件下 $x(t)$ 从 $x(0)=0$ 达到一个固定阈值所需的时间，而种子间的异质性完全由所选 $g$ 对应的 $\\Psi_{b}(g)$ 体现。\n\n任务 A. 从上述原理和量纲一致性出发，推导在固定温度下，萌发时间 $t_{g}$ 作为外部水势 $\\Psi$、特定于 $g$ 的基础水势 $\\Psi_{b}(g)$ 以及一个量纲为 $\\mathrm{MPa}\\cdot\\mathrm{time}$ 且特定于物种和分数的常数的函数表达式。不要引用或假设任何已有的萌发时间公式。\n\n任务 B. 通过引入热驱动差，将推导扩展到次适温范围（即，对于低于任何假定最适温度但高于 $T_{b}$ 的温度 $T$）。利用对于两个独立驱动差的可分离性和一阶标度关系，证明在恒定的 $\\Psi$ 和 $T$ 条件下，当 $T > T_{b}$ 且 $\\Psi > \\Psi_{b}(g)$ 时，温差、水势差和萌发时间的乘积等于一个取决于物种和 $g$ 的常数，其量纲为 $\\mathrm{MPa}\\cdot{}^{\\circ}\\mathrm{C}\\cdot\\mathrm{time}$。\n\n任务 C. 一批野生一年生杂草种子的中位数基础水势为 $\\Psi_{b}(0.5) = -1.2\\,\\mathrm{MPa}$，基础温度为 $T_{b} = 8\\,^{\\circ}\\mathrm{C}$。在 $\\Psi = -0.5\\,\\mathrm{MPa}$ 和 $T = 18\\,^{\\circ}\\mathrm{C}$ 的恒定条件下，测得的中位数萌发时间为 $t_{50} = 40\\,\\mathrm{h}$。使用你从任务 B 中得到的结果，计算中位数分数对应的常数。将最终值以 $\\mathrm{MPa}\\cdot{}^{\\circ}\\mathrm{C}\\cdot\\mathrm{h}$ 为单位表示。将你的答案四舍五入到3位有效数字，并用科学记数法表示。", "solution": "为推导所求关系，我们将萌发进程框架形式化。令 $x(t)$ 表示一个内部进程变量，一旦环境条件超过种子的阈值，该变量便单调增加，其中 $x(0)=0$，并且对于所研究的分数 $g$，萌发被定义为 $x(t_{g})=1$。\n\n任务 A. 水分限制、等温情况。在恒定温度下，我们基于阈值附近的线性响应，假定进程速率与超过种子阈值的水势驱动差成一阶关系：\n$$\n\\frac{dx}{dt} = k_{H}\\,(\\Psi - \\Psi_{b})_{+},\n$$\n其中 $(\\cdot)_{+}$ 表示正部，$\\Psi_{b}$ 是所考虑种子的基础水势。对于特定于 $g$ 的分数，我们使用特定于 $g$ 的阈值 $\\Psi_{b}(g)$。在 $\\Psi > \\Psi_{b}(g)$ 的条件下，该式变为\n$$\n\\frac{dx}{dt} = k_{H}\\,\\big(\\Psi - \\Psi_{b}(g)\\big),\n$$\n其中 $k_{H}$ 是一个比例常数，其量纲为 $\\mathrm{(time\\cdot MPa)}^{-1}$，因此 $\\frac{dx}{dt}$ 是单位时间内的无量纲量，并且当 $\\Psi \\le \\Psi_{b}(g)$ 时为零。从 $t=0$ 到 $t=t_{g}$ 以及从 $x=0$ 到 $x=1$ 进行积分，得到\n$$\n\\int_{0}^{1} dx = \\int_{0}^{t_{g}} k_{H}\\,\\big(\\Psi - \\Psi_{b}(g)\\big)\\,dt.\n$$\n因此，\n$$\n1 = k_{H}\\,\\big(\\Psi - \\Psi_{b}(g)\\big)\\,t_{g}.\n$$\n定义水时常数 $\\theta_{H}(g)$ 为 $\\theta_{H}(g) \\equiv \\frac{1}{k_{H}}$，其单位为 $\\mathrm{MPa}\\cdot\\mathrm{time}$。解出 $t_{g}$ 可得\n$$\nt_{g} = \\frac{\\theta_{H}(g)}{\\Psi - \\Psi_{b}(g)}.\n$$\n这就是从恒温下进程变量的一阶动力学导出的水时关系。\n\n任务 B. 次适温和水分限制情况。接下来我们假设，在次适温范围内，进程速率与高于基础温度 $T_{b}$ 的热驱动差成线性标度关系，这与经验性的温时行为和阈值附近的一阶展开相一致：\n$$\n\\frac{dx}{dt} \\propto (T - T_{b})_{+}.\n$$\n假设在阈值附近独立的水分和温度限制具有可分离性，最简单的一阶联合依赖关系是乘积形式：\n$$\n\\frac{dx}{dt} = k_{HT}\\,\\big(T - T_{b}\\big)\\,\\big(\\Psi - \\Psi_{b}(g)\\big),\n$$\n对于 $T > T_{b}$ 和 $\\Psi > \\Psi_{b}(g)$，其中 $k_{HT}$ 的量纲为 $\\mathrm{\\big(time\\cdot MPa\\cdot{}^{\\circ}C\\big)^{-1}}$。如上文所述，在恒定的 $\\Psi$ 和 $T$ 下积分，得到\n$$\n1 = k_{HT}\\,\\big(T - T_{b}\\big)\\,\\big(\\Psi - \\Psi_{b}(g)\\big)\\,t_{g}.\n$$\n定义水热时常数 $\\theta_{HT}(g) \\equiv \\frac{1}{k_{HT}}$，其单位为 $\\mathrm{MPa}\\cdot{}^{\\circ}\\mathrm{C}\\cdot\\mathrm{time}$。整理后得到水热时关系\n$$\n\\theta_{HT}(g) = \\big(T - T_{b}\\big)\\,\\big(\\Psi - \\Psi_{b}(g)\\big)\\,t_{g}.\n$$\n该表达式表明，对于固定的 $g$，温差、水势差和萌发时间的乘积是在次适温范围内该种子批和 $g$ 的一个特征常数。\n\n任务 C. 中位数分数的数值计算。给定中位数基础水势 $\\Psi_{b}(0.5) = -1.2\\,\\mathrm{MPa}$，基础温度 $T_{b} = 8\\,^{\\circ}\\mathrm{C}$，以及实验条件 $\\Psi = -0.5\\,\\mathrm{MPa}$、$T = 18\\,^{\\circ}\\mathrm{C}$ 和 $t_{50} = 40\\,\\mathrm{h}$。对于中位数分数 $g=0.5$，水热时常数为\n$$\n\\theta_{HT}(0.5) = \\big(T - T_{b}\\big)\\,\\big(\\Psi - \\Psi_{b}(0.5)\\big)\\,t_{50}.\n$$\n先分别计算每一项，然后代入：\n$$\nT - T_{b} = 18 - 8 = 10\\,^{\\circ}\\mathrm{C}, \\quad \\Psi - \\Psi_{b}(0.5) = -0.5 - (-1.2) = 0.7\\,\\mathrm{MPa}, \\quad t_{50} = 40\\,\\mathrm{h}.\n$$\n因此，\n$$\n\\theta_{HT}(0.5) = 10 \\times 0.7 \\times 40 = 280\\,\\mathrm{MPa}\\cdot{}^{\\circ}\\mathrm{C}\\cdot\\mathrm{h}.\n$$\n用科学记数法表示并四舍五入到3位有效数字，\n$$\n\\theta_{HT}(0.5) = 2.80 \\times 10^{2}\\,\\mathrm{MPa}\\cdot{}^{\\circ}\\mathrm{C}\\cdot\\mathrm{h}.\n$$", "answer": "$$\\boxed{2.80 \\times 10^{2}}$$", "id": "2608875"}, {"introduction": "从理论推导到数据分析，是现代生物学研究的必经之路。当面临多个可能的解释模型时，我们如何科学地进行选择？这个综合性的计算练习 [@problem_id:2608923] 将你置于一个真实的数据科学家角色中，你需要编写代码来将之前探讨的模型（如水热时间模型）与模拟的实验数据进行拟合，并运用赤池信息准则（$\\mathrm{AICc}$）等统计学方法，结合生物学机理的合理性，最终做出有理有据的模型选择决策。", "problem": "您的任务是，使用信息准则以编程方式比较三种受生物学启发的种子萌发曲线模型，然后应用一条基于机理合理性的决胜规则。该比较将在基于种子休眠和萌发基本原理构建的、可复现的合成数据集上进行。待比较的模型包括：一个水分时间模型、一个温度时间模型以及一个经验性Weibull模型。您的程序必须在累积萌发分数服从附加独立正态误差的假设下，通过最小化残差平方和将每个模型拟合到每个数据集，计算校正后的Akaike信息准则，并最终使用一个整合了信息准则和机理合理性的决策规则，为每个数据集选择最合适的模型。\n\n基本原理。水分时间框架假设，在种子群体中存在一个基础水势（用 $\\Psi_{b}$ 表示）的分布，并且对于给定的水势 $\\Psi$ 和时间 $t$，当水分时间平衡达到一个常数 $\\theta_{H}$ 时，种子便会萌发，这遵循经过充分检验的关系式 $\\theta_{H} = (\\Psi - \\Psi_{b}) t_{g}$，其中 $t_{g}$ 是萌发时间分位数。类似地，温度时间框架假设存在一个基础温度 $T_{b}$ 的分布和一个恒定的温度时间 $\\theta_{T}$，使得 $\\theta_{T} = (T - T_{b}) t_{g}$。在这两种情况下，均假设 $\\Psi_{b}$ 和 $T_{b}$ 在种子群体中呈正态分布，其均值为 $\\mu$，标准差为 $\\sigma$，并且在时间 $t$ 的累积萌发分数是在相应阈值处计算的累积分布函数值。令 $\\Phi(\\cdot)$ 表示标准正态累积分布函数。令 $G_{\\max}$ 表示在测试条件下的最大可萌发分数。所有观测到的萌发分数都必须表示为闭区间 $[0,1]$ 内的小数。\n\n模型定义。对于在时间 $t$、水势 $\\Psi$ 和温度 $T$ 下的每次观测：\n- 水分时间模型 $M_{H}$：预测的累积分数为\n$$\n\\hat{F}_{H}(t,\\Psi) = G_{\\max} \\, \\Phi\\!\\left(\\frac{\\Psi - \\theta_{H}/t - \\mu_{\\Psi_{b}}}{\\sigma_{\\Psi_{b}}}\\right),\n$$\n其参数为 $\\theta_{H} \\!>\\! 0$、$\\mu_{\\Psi_{b}}$ (单位：兆帕)、$\\sigma_{\\Psi_{b}} \\!>\\! 0$ (单位：兆帕) 以及 $G_{\\max} \\in (0,1]$。对于 $t \\rightarrow 0^{+}$，将该表达式解释为极限，并在 $t=0$ 时设定 $\\hat{F}_{H}(t,\\Psi) = 0$。\n- 温度时间模型 $M_{T}$：预测的累积分数为\n$$\n\\hat{F}_{T}(t,T) = G_{\\max} \\, \\Phi\\!\\left(\\frac{T - \\theta_{T}/t - \\mu_{T_{b}}}{\\sigma_{T_{b}}}\\right),\n$$\n其参数为 $\\theta_{T} \\!>\\! 0$、$\\mu_{T_{b}}$ (单位：摄氏度)、$\\sigma_{T_{b}} \\!>\\! 0$ (单位：摄氏度)以及 $G_{\\max} \\in (0,1]$。\n- Weibull经验模型 $M_{W}$：预测的累积分数为\n$$\n\\hat{F}_{W}(t) = G_{\\max} \\left[1 - \\exp\\!\\left(-\\left(\\frac{t}{\\lambda}\\right)^{k}\\right)\\right],\n$$\n其参数为 $\\lambda \\!>\\! 0$ (单位：小时)、$k \\!>\\! 0$ 以及 $G_{\\max} \\in (0,1]$。该模型未显式包含环境协变量。\n\n噪声模型与拟合准则。假设在时间 $t_{i}$ 观测到的累积分数 $y_{i}$ 由相应模型的预测值加上均值为 $0$、方差恒为 $\\sigma_{\\text{obs}}^{2}$ 的独立同分布正态误差产生。通过最小化残差平方和进行估计\n$$\n\\mathrm{RSS} = \\sum_{i=1}^{n} \\left(y_{i} - \\hat{F}(\\cdot)\\right)^{2}。\n$$\n令 $n$ 为数据集中观测点的数量，$k$ 为模型均值函数中自由参数的数量。使用校正后的Akaike信息准则\n$$\n\\mathrm{AICc} = n \\ln\\!\\left(\\frac{\\mathrm{RSS}}{n}\\right) + 2k + \\frac{2k(k+1)}{n-k-1},\n$$\n（在 $n > k + 1$ 时有效），以比较针对给定数据集的模型。在假定的噪声模型下，较低的 $\\mathrm{AICc}$ 值表示更优的预期样本外预测性能。\n\n机理合理性决胜规则。对于成对的 $\\mathrm{AICc}$ 差异低于指定容差的情况，应使用机理合理性来做决定。具体而言，使用以下规则，容差 $\\Delta = 2$：如果最优模型和次优模型之间的 $\\mathrm{AICc}$ 差异小于 $\\Delta$，则选择与数据集中变化的实验协变量最一致的模型。如果在有效恒定的温度 $T$ 下，水势 $\\Psi$ 在不同条件间变化，则优先选择水分时间模型 $M_{H}$。如果在有效恒定的水势 $\\Psi$ 下，温度 $T$ 变化，则优先选择温度时间模型 $M_{T}$。如果两个协变量都不变（仅单一条件），则优先选择Weibull模型 $M_{W}$。\n\n测试套件的数据生成。您的程序必须根据以下规范，在内部确定性地生成三个数据集。将伪随机数生成器的种子设置为 $314159$，为观测分数抽取具有指定标准差的独立高斯噪声，並在添加噪声后将结果裁剪至 $[0,1]$ 区间。对所有数据集使用共同的时间网格 $t \\in \\{6,12,18,24,36,48,60,72\\}$ 小时。所有累积分数都必须是小数。\n\n- 数据集A（水分时间主导；$\\Psi$ 变化）：恒温 $T = 20$ 摄氏度。水势 $\\Psi \\in \\{-0.1,-0.5,-0.9\\}$ 兆帕。使用参数 $\\theta_{H} = 45$ 兆帕·小时、$\\mu_{\\Psi_{b}} = -1.0$ 兆帕、$\\sigma_{\\Psi_{b}} = 0.25$ 兆帕以及 $G_{\\max} = 0.92$ 从 $M_{H}$ 生成无噪声的分数。添加标准差为 $0.02$ 的独立高斯噪声。\n- 数据集B（温度时间主导；$T$ 变化）：恒定水势 $\\Psi = -0.3$ 兆帕。温度 $T \\in \\{10,15,20\\}$ 摄氏度。使用参数 $\\theta_{T} = 110$ 摄氏度·小时、$\\mu_{T_{b}} = 7$ 摄氏度、$\\sigma_{T_{b}} = 2$ 摄氏度以及 $G_{\\max} = 0.90$ 从 $M_{T}$ 生成无噪声的分数。添加标准差为 $0.02$ 的独立高斯噪声。\n- 数据集C（边缘情况；单一严酷条件）：单一条件，温度 $T = 20$ 摄氏度，水势 $\\Psi = -1.6$ 兆帕。使用与数据集A相同的参数和相同的时间网格，从 $M_{H}$ 生成无噪声的分数。添加标准差为 $0.01$ 的独立高斯噪声。\n\n拟合细节与参数边界。为了数值稳定性，在拟合期间按如下方式约束参数。对于 $M_{H}$，使用边界 $\\theta_{H} \\in [1,300]$, $\\mu_{\\Psi_{b}} \\in [-2.5,0]$, $\\sigma_{\\Psi_{b}} \\in [0.05,1.0]$, 以及 $G_{\\max} \\in [0.5,1.0]$。对于 $M_{T}$，使用边界 $\\theta_{T} \\in [1,400]$, $\\mu_{T_{b}} \\in [0,15]$, $\\sigma_{T_{b}} \\in [0.05,5.0]$, 以及 $G_{\\max} \\in [0.5,1.0]$。对于 $M_{W}$，使用边界 $\\lambda \\in [1,400]$, $k \\in [0.5,5.0]$, 以及 $G_{\\max} \\in [0.5,1.0]$。在边界内使用任何合理的初始猜测值。通过最小化数据集中所有点的 $\\mathrm{RSS}$，将每个模型拟合到每个数据集。\n\n决策与输出。对于每个数据集，计算 $M_{H}$、$M_{T}$ 和 $M_{W}$ 的 $\\mathrm{AICc}$，然后使用容差 $\\Delta = 2$ 的机理决胜规则选择最佳模型。将模型标识编码为整数：水分时间 $M_{H} \\rightarrow 0$、温度时间 $M_{T} \\rightarrow 1$、Weibull $M_{W} \\rightarrow 2$。\n\n您的程序应生成单行输出，其中包含分别为数据集A、B、C选择的模型索引，格式为以逗号分隔并用方括号括起的列表（例如，$[0,1,2]$）。不应打印任何其他输出。输出中的所有计算均无单位。不涉及角度。所有分数必须作为不带百分号的小数进行处理和表示。", "solution": "所提出的问题是计算生物学和统计学中的一个适定任务。它具有科学依据，逻辑上一致，并为获得唯一的确定性解提供了所有必要信息。因此，该问题被认定为有效。解决方案通过实现指定的数据生成、模型拟合和模型选择协议来推进。\n\n该任务的核心是，为三个不同的、人工生成的数据集，以编程方式在三种种子萌发的数学模型之间进行裁定。这些模型是一个水分时间模型（$M_H$）、一个温度时间模型（$M_T$）和一个经验性Weibull模型（$M_W$）。决策过程整合了预测准确性的一个统计度量，即校正后的Akaike信息准则（$\\mathrm{AICc}$），以及一条用于处理统计证据不具决定性情况的机理合理性规则。\n\n逻辑流程的结构如下：\n1. **确定性数据生成**：首先，根据问题的确切规范合成三个数据集（A、B和C）。这确保了可复现性。一个伪随机数生成器以值 $314159$ 作为种子。\n    - 一个公共时间网格，$t \\in \\{6, 12, 18, 24, 36, 48, 60, 72\\}$ 小时，被用于所有数据集。\n    - **数据集A** 被设计为水分时间主导，具有恒定温度 $T = 20$ 摄氏度和变化的水势 $\\Psi \\in \\{-0.1, -0.5, -0.9\\}$ 兆帕。“真实”的萌发分数使用水分时间模型 $M_H$ 生成，参数为 $\\theta_{H} = 45$、$\\mu_{\\Psi_{b}} = -1.0$、$\\sigma_{\\Psi_{b}} = 0.25$ 和 $G_{\\max} = 0.92$。共有 $n = 8 \\times 3 = 24$ 个数据点。\n    - **数据集B** 被设计为温度时间主导，具有恒定水势 $\\Psi = -0.3$ 兆帕和变化的温度 $T \\in \\{10, 15, 20\\}$ 摄氏度。真实分数使用温度时间模型 $M_T$ 生成，参数为 $\\theta_{T} = 110$、$\\mu_{T_{b}} = 7$、$\\sigma_{T_{b}} = 2$ 和 $G_{\\max} = 0.90$。共有 $n = 8 \\times 3 = 24$ 个数据点。\n    - **数据集C** 代表一个单一、严酷的环境条件（$T=20$ 摄氏度，$\\Psi=-1.6$ 兆帕）。真实分数使用与数据集A相同参数的水分时间模型 $M_H$ 生成。共有 $n = 8 \\times 1 = 8$ 个数据点。\n    - 对于每个数据集，向真实分数中添加独立的的高斯噪声（A和B的标准差为 $0.02$，C的标准差为 $0.01$）。然后将得到的观测分数 $y_i$ 裁剪到有效区间 $[0, 1]$ 内。\n\n2. **模型参数估计**：对于三个数据集中的每一个，将三个模型（$M_H$、$M_T$、$M_W$）分别拟合到数据。拟合过程是一个优化问题，旨在找到使残差平方和（$\\mathrm{RSS}$）最小化的模型参数：\n$$\n\\mathrm{RSS} = \\sum_{i=1}^{n} \\left(y_{i} - \\hat{F}(\\cdot)\\right)^{2}\n$$\n其中 $y_i$ 是观测到的累积萌发分数，$\\hat{F}(\\cdot)$ 是模型预测的分数。这些模型是：\n- 水分时间模型（$M_H$）：$\\hat{F}_{H}(t,\\Psi) = G_{\\max} \\, \\Phi\\!\\left(\\frac{\\Psi - \\theta_{H}/t - \\mu_{\\Psi_{b}}}{\\sigma_{\\Psi_{b}}}\\right)$，有 $k=4$ 个参数：$\\theta_H, \\mu_{\\Psi_b}, \\sigma_{\\Psi_b, G_{\\max}}$。\n- 温度时间模型（$M_T$）：$\\hat{F}_{T}(t,T) = G_{\\max} \\, \\Phi\\!\\left(\\frac{T - \\theta_{T}/t - \\mu_{T_{b}}}{\\sigma_{T_{b}}}\\right)$，有 $k=4$ 个参数：$\\theta_T, \\mu_{T_b}, \\sigma_{T_b, G_{\\max}}$。\n- Weibull模型（$M_W$）：$\\hat{F}_{W}(t) = G_{\\max} \\left[1 - \\exp\\!\\left(-\\left(\\frac{t}{\\lambda}\\right)^{k}\\right)\\right]$，有 $k=3$ 个参数：$\\lambda, k, G_{\\max}$。\n项 $\\Phi(\\cdot)$ 表示标准正态分布的累积分布函数（CDF）。使用L-BFGS-B算法执行数值优化，该算法可以处理对参数指定的边界。选择参数各自有界区间的中点作为其初始猜测值。\n\n3. **通过AICc和决胜规则进行模型选择**：拟合后，使用校正后的Akaike信息准则（$\\mathrm{AICc}$）对模型进行比较，该准则在模型拟合度（低$\\mathrm{RSS}$）与模型复杂度（参数数量, $k$）之间取得平衡。其公式为：\n$$\n\\mathrm{AICc} = n \\ln\\!\\left(\\frac{\\mathrm{RSS}}{n}\\right) + 2k + \\frac{2k(k+1)}{n-k-1}\n$$\n其中 $n$ 是数据集中的观测数量。较低的 $\\mathrm{AICc}$ 值表示模型更优。对于每个数据集，计算并排序 $M_H$、$M_T$ 和 $M_W$ 的 $\\mathrm{AICc}$ 值。\n\n然后应用一个结合了统计证据和机理合理性的决策规则：\n- 计算拟合最优模型（$\\mathrm{AICc}$最低）与次优模型之间的 $\\mathrm{AICc}$ 差异：$\\Delta_{\\mathrm{AICc}} = \\mathrm{AICc}_{\\text{second}} - \\mathrm{AICc}_{\\text{best}}$。\n- 如果 $\\Delta_{\\mathrm{AICc}} \\ge 2$，则认为统计证据充分，选择 $\\mathrm{AICc}$ 最低的模型。\n- 如果 $\\Delta_{\\mathrm{AICc}} < 2$，则认为这些模型在统计上无法区分。此时调用机理决胜规则：\n    - 对于数据集A，其中水势 $\\Psi$ 是变化的实验因素，选择水分时间模型（$M_H$，索引 $0$）。\n    - 对于数据集B，其中温度 $T$ 是变化的因素，选择温度时间模型（$M_T$，索引 $1$）。\n    - 对于数据集C，它描述了在单一条件下（$\\Psi$ 和 $T$ 在数据集内均不变化）随时间变化的萌发过程，选择更简约的经验模型（$M_W$，索引 $2$）。\n\n对每个数据集依次应用此完整流程，并记录所选模型对应的整数索引（$M_H \\rightarrow 0$，$M_T \\rightarrow 1$，$M_W \\rightarrow 2$）。最终输出是这三个索引的列表。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm\nfrom scipy.optimize import minimize\n\ndef solve():\n    \"\"\"\n    Generates datasets, fits models, applies AICc selection with a tie-breaker,\n    and prints the final selected model indices.\n    \"\"\"\n\n    # --- 1. Data Generation ---\n    def generate_datasets():\n        \"\"\"Generates three datasets according to problem specifications.\"\"\"\n        rng = np.random.default_rng(314159)\n        time_grid = np.array([6, 12, 18, 24, 36, 48, 60, 72], dtype=float)\n        datasets = []\n\n        # Dataset A: Hydrotime-dominant\n        psi_levels = np.array([-0.1, -0.5, -0.9])\n        T_A = 20.0\n        params_H_true = {'theta_H': 45.0, 'mu_Psi_b': -1.0, 'sigma_Psi_b': 0.25, 'G_max': 0.92}\n        t_A, psi_A = np.meshgrid(time_grid, psi_levels)\n        t_A, psi_A = t_A.ravel(), psi_A.ravel()\n        with np.errstate(divide='ignore', invalid='ignore'):\n            arg = (psi_A - params_H_true['theta_H'] / t_A - params_H_true['mu_Psi_b']) / params_H_true['sigma_Psi_b']\n        y_true_A = params_H_true['G_max'] * norm.cdf(arg)\n        y_obs_A = np.clip(y_true_A + rng.normal(0, 0.02, size=y_true_A.shape), 0, 1)\n        datasets.append({'name': 'A', 't': t_A, 'T': np.full_like(t_A, T_A), 'psi': psi_A, 'y': y_obs_A, 'covariate': 'psi'})\n\n        # Dataset B: Thermal time-dominant\n        temp_levels = np.array([10, 15, 20])\n        psi_B = -0.3\n        params_T_true = {'theta_T': 110.0, 'mu_T_b': 7.0, 'sigma_T_b': 2.0, 'G_max': 0.90}\n        t_B, T_B = np.meshgrid(time_grid, temp_levels)\n        t_B, T_B = t_B.ravel(), T_B.ravel()\n        with np.errstate(divide='ignore', invalid='ignore'):\n            arg = (T_B - params_T_true['theta_T'] / t_B - params_T_true['mu_T_b']) / params_T_true['sigma_T_b']\n        y_true_B = params_T_true['G_max'] * norm.cdf(arg)\n        y_obs_B = np.clip(y_true_B + rng.normal(0, 0.02, size=y_true_B.shape), 0, 1)\n        datasets.append({'name': 'B', 't': t_B, 'T': T_B, 'psi': np.full_like(t_B, psi_B), 'y': y_obs_B, 'covariate': 'T'})\n\n        # Dataset C: Edge case\n        T_C, psi_C = 20.0, -1.6\n        t_C = time_grid\n        with np.errstate(divide='ignore', invalid='ignore'):\n            arg = (psi_C - params_H_true['theta_H'] / t_C - params_H_true['mu_Psi_b']) / params_H_true['sigma_Psi_b']\n        y_true_C = params_H_true['G_max'] * norm.cdf(arg)\n        y_obs_C = np.clip(y_true_C + rng.normal(0, 0.01, size=y_true_C.shape), 0, 1)\n        datasets.append({'name': 'C', 't': t_C, 'T': np.full_like(t_C, T_C), 'psi': np.full_like(t_C, psi_C), 'y': y_obs_C, 'covariate': 'none'})\n        \n        return datasets\n\n    # --- 2. Model Definitions ---\n    def model_h(params, t, psi):\n        theta_H, mu_Psi_b, sigma_Psi_b, G_max = params\n        with np.errstate(divide='ignore', invalid='ignore'):\n            arg = (psi - theta_H / t - mu_Psi_b) / sigma_Psi_b\n        return G_max * norm.cdf(arg)\n\n    def model_t(params, t, T):\n        theta_T, mu_T_b, sigma_T_b, G_max = params\n        with np.errstate(divide='ignore', invalid='ignore'):\n            arg = (T - theta_T / t - mu_T_b) / sigma_T_b\n        return G_max * norm.cdf(arg)\n\n    def model_w(params, t):\n        lmbda, k, G_max = params\n        return G_max * (1 - np.exp(-(t / lmbda)**k))\n\n    # --- 3. Fitting and Selection Logic ---\n    model_definitions = {\n        'H': {'id': 0, 'k': 4, 'func': model_h, 'bounds': [(1, 300), (-2.5, 0), (0.05, 1.0), (0.5, 1.0)]},\n        'T': {'id': 1, 'k': 4, 'func': model_t, 'bounds': [(1, 400), (0, 15), (0.05, 5.0), (0.5, 1.0)]},\n        'W': {'id': 2, 'k': 3, 'func': model_w, 'bounds': [(1, 400), (0.5, 5.0), (0.5, 1.0)]}\n    }\n\n    def rss_objective(params, model_name, data):\n        model_info = model_definitions[model_name]\n        if model_name == 'H':\n            y_pred = model_info['func'](params, data['t'], data['psi'])\n        elif model_name == 'T':\n            y_pred = model_info['func'](params, data['t'], data['T'])\n        else: # 'W'\n            y_pred = model_info['func'](params, data['t'])\n        return np.sum((data['y'] - y_pred)**2)\n\n    def calculate_aicc(rss, k, n):\n        if n = k + 1:\n            return np.inf\n        return n * np.log(rss / n) + 2 * k + (2 * k * (k + 1)) / (n - k - 1)\n\n    datasets = generate_datasets()\n    final_selections = []\n\n    for dataset in datasets:\n        n = len(dataset['y'])\n        model_results = []\n\n        for name, info in model_definitions.items():\n            initial_guess = [(b[0] + b[1]) / 2 for b in info['bounds']]\n            \n            opt_result = minimize(\n                rss_objective,\n                x0=initial_guess,\n                args=(name, dataset),\n                method='L-BFGS-B',\n                bounds=info['bounds']\n            )\n            \n            rss = opt_result.fun\n            aicc = calculate_aicc(rss, info['k'], n)\n            model_results.append({'id': info['id'], 'aicc': aicc})\n\n        model_results.sort(key=lambda x: x['aicc'])\n        \n        best_model = model_results[0]\n        second_best_model = model_results[1]\n        delta_aicc = second_best_model['aicc'] - best_model['aicc']\n        \n        if delta_aicc >= 2:\n            final_selections.append(best_model['id'])\n        else:\n            # Apply tie-break rule\n            if dataset['covariate'] == 'psi':\n                final_selections.append(0)  # M_H\n            elif dataset['covariate'] == 'T':\n                final_selections.append(1)  # M_T\n            else: # 'none'\n                final_selections.append(2)  # M_W\n    \n    # --- 4. Final Output ---\n    print(f\"[{','.join(map(str, final_selections))}]\")\n\nsolve()\n```", "id": "2608923"}]}