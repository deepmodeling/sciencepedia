{"hands_on_practices": [{"introduction": "任何关于有性生殖进化之谜的探讨，都始于对其最基本代价的理解——“性的双重代价”。本练习将引导你从第一性原理出发，通过构建一个简洁的种群动态模型，来精确推导这一代价。通过计算和比较无性与有性生殖种群的马尔萨斯增长率（Malthusian parameter），你将亲手量化有性生殖在种群增长上的内在劣势，这是理解为何有性生殖需要提供巨大演化优势才能存在的关键一步 [@problem_id:2547512]。", "problem": "在比较动物学和植物学的背景下，考虑两个专性繁殖种群：一个专性无性生殖谱系和一个专性有性生殖谱系。假设种群规模庞大，种群动态与密度无关，并且时间是连续的。对于这两种策略，假设雌性个体繁殖力 $b$ 相等，定义为成年雌性产下新生个体（合子或克隆后代）的瞬时速率；并假设雌性个体死亡率 $d$ 也相等。在有性生殖谱系中，假设费雪原理导致初始性别比均等，因此新生个体中有 $1/2$ 的比例是雌性，并且只有雌性后代能对下一代的繁殖雌性群体做出贡献。在无性生殖谱系中，假设所有后代都是雌性（克隆雌性）。通过将 $b$ 和 $d$ 解释为繁殖雌性群体的有效速率，忽略幼年阶段和成熟延迟。\n\n使用马尔萨斯参数（定义为繁殖雌性种群的瞬时人均指数增长率）的定义，从第一性原理出发，推导出无性生殖谱系的马尔萨斯参数与有性生殖谱系的马尔萨斯参数之比，并用 $b$ 和 $d$ 表示。你的推导必须从雌性的人均出生和死亡过程的定义开始，并应论证任何性别比因子的合理性。将最终答案表示为仅包含 $b$ 和 $d$ 的单个闭式解析表达式。无需四舍五入。最终答案中不要包含单位。", "solution": "题目要求推导专性无性生殖谱系的马尔萨斯参数与专性有性生殖谱系的马尔萨斯参数之比。马尔萨斯参数，我们记为 $r$，定义为繁殖雌性种群的瞬时人均指数增长率。\n\n设 $N(t)$ 表示在时间 $t$ 繁殖雌性的数量。在密度无关的假设下，该种群的动态由以下微分方程描述：\n$$\n\\frac{dN}{dt} = r N\n$$\n参数 $r$ 是人均出生率和死亡率的净结果。具体来说，它是雌性的人均出生率 $b_f$ 减去雌性的人均死亡率 $d_f$。\n$$\nr = b_f - d_f\n$$\n现在，我们将这个基本原理应用于问题陈述中描述的每个谱系。\n\n首先，考虑**专性无性生殖谱系**。设其马尔萨斯参数为 $r_a$。一个雌性的个体繁殖力为 $b$。在此谱系中，所有后代都是克隆雌性。因此，单个雌性产生新雌性的速率恰好是 $b$。因此，无性生殖种群中雌性的人均出生率 $b_{f, a}$ 为：\n$$\nb_{f, a} = b\n$$\n雌性的人均死亡率给定为 $d$。因此，$d_{f, a} = d$。\n因此，无性生殖谱系的马尔萨斯参数 $r_a$ 为：\n$$\nr_a = b_{f, a} - d_{f, a} = b - d\n$$\n\n接下来，考虑**专性有性生殖谱系**。设其马尔萨斯参数为 $r_s$。雌性的个体繁殖力同样为 $b$。然而，问题陈述指出，该谱系维持着均等的初始性别比，这意味着新生个体中只有 $1/2$ 的比例是雌性。雌性种群的增长完全取决于新雌性的产生。因此，雌性的有效人均出生率 $b_{f, s}$ 是总繁殖率 $b$ 乘以雌性后代的比例，即 $1/2$。\n$$\nb_{f, s} = b \\times \\frac{1}{2} = \\frac{b}{2}\n$$\n这种有效雌性出生率减半的情况，是“有性生殖的双重代价”的数学表示，即繁殖资源被分配用于产生雄性，而雄性并不能直接对下一代的繁殖个体数量做出贡献。雌性的人均死亡率与无性生殖情况相同，即 $d_{f, s} = d$。\n因此，有性生殖谱系的马尔萨斯参数 $r_s$ 为：\n$$\nr_s = b_{f, s} - d_{f, s} = \\frac{b}{2} - d\n$$\n\n最后，我们必须计算无性生殖马尔萨斯参数与有性生殖马尔萨斯参数之比，即 $\\frac{r_a}{r_s}$。使用上面推导出的表达式：\n$$\n\\frac{r_a}{r_s} = \\frac{b - d}{\\frac{b}{2} - d}\n$$\n为了将此表达式简化为所需的闭式形式，我们将分子和分母同乘以 $2$：\n$$\n\\frac{r_a}{r_s} = \\frac{2(b - d)}{2 \\left(\\frac{b}{2} - d\\right)} = \\frac{2(b - d)}{b - 2d}\n$$\n这就是所要求的比率的最终解析表达式。", "answer": "$$\\boxed{\\frac{2(b - d)}{b - 2d}}$$", "id": "2547512"}, {"introduction": "除了人口统计学上的代价，有性生殖在遗传层面也可能带来劣势。当杂合子具有最高适合度时，有性生殖的孟德尔分离和重组过程会不可避免地产生适合度较低的纯合子后代，这种现象被称为“分离负荷”（segregation load）。本练习通过一个经典的群体遗传学模型，让你计算在一个具有超显性（overdominance）的座位上，能够克隆最佳杂合子基因型的无性谱系相对于有性群体所获得的适合度优势 [@problem_id:2547339]。这个计算清晰地揭示了有性生殖在维持最佳基因组合上的潜在“成本”。", "problem": "一个二倍体物种（动物或植物）携带一个单一的双等位基因基因座，其等位基因为 $A$ 和 $a$。生存力选择仅作用于该基因座，并表现出对称的杂合子优势（超显性）：基因型生存力分别为 $w_{\\mathrm{AA}}=1-s$，$w_{\\mathrm{Aa}}=1$ 和 $w_{\\mathrm{aa}}=1-s$，其中 $0<s<1$。考虑两种繁殖策略：\n\n- 有性繁殖：随机交配与孟德尔分离。假设种群极大、世代不重叠、没有突变，并且有性繁殖种群在这些条件下已达到其确定性的平衡等位基因频率。将平衡状态下有性繁殖种群的平均生存力（平均适合度）定义为 $\\bar{w}_{\\mathrm{sex}}$。\n- 无性繁殖：一个无性繁殖谱系源于单个杂合子亲代，并通过克隆繁殖，使得杂合基因型 $Aa$ 在每一代都被精确地延续下去。将其恒定的生存力定义为 $w_{\\mathrm{asex}}$。\n\n假定除了上述定义的基因型生存力之外，没有与有性或无性繁殖相关的其他成本或收益。设杂合子优势为 $s=0.1$。将适合度差异 $D$ 定义为 $D=w_{\\mathrm{asex}}-\\bar{w}_{\\mathrm{sex}}$。计算当 $s=0.1$ 时的 $D$ 值，并将最终答案表示为一个不带单位的小数。由于答案是精确值，因此无需四舍五入。", "solution": "问题要求计算一个无性繁殖谱系与一个处于平衡状态的有性繁殖种群之间的适合度差异 $D$。其定义为 $D = w_{\\mathrm{asex}} - \\bar{w}_{\\mathrm{sex}}$。我们将首先验证问题陈述的有效性，然后通过分别计算 $w_{\\mathrm{asex}}$ 和 $\\bar{w}_{\\mathrm{sex}}$ 这两项来求解。\n\n首先，验证问题陈述。\n已知条件如下：\n- 一个二倍体物种，有一个单一的双等位基因座，等位基因为 $A$ 和 $a$。\n- 基因型生存力（适合度）：$w_{\\mathrm{AA}}=1-s$，$w_{\\mathrm{Aa}}=1$，$w_{\\mathrm{aa}}=1-s$。\n- 选择系数 $s$ 的范围是：$0<s<1$。\n- 一个有性繁殖种群处于其确定性平衡等位基因频率。其平均生存力为 $\\bar{w}_{\\mathrm{sex}}$。\n- 一个无性繁殖谱系源于一个杂合子 ($Aa$) 亲代并进行克隆繁殖。其恒定生存力为 $w_{\\mathrm{asex}}$。\n- 与繁殖模式相关的没有其他成本。\n- 选择系数的具体值为 $s=0.1$。\n- 适合度差异为 $D = w_{\\mathrm{asex}}-\\bar{w}_{\\mathrm{sex}}$。\n\n这个问题具有科学依据，因为它使用了标准的群体遗传学模型，即对称超显性的生存力选择模型。关于大种群、随机交配和不重叠世代的假设适用于导向稳定平衡的确定性分析。该问题提法得当、客观，并包含了推导出唯一解所需的所有信息。该模型是对演化动力学的一个有效但简化的表述。因此，该问题是有效的，可以寻求解答。\n\n第一步是确定无性繁殖谱系的生存力 $w_{\\mathrm{asex}}$。问题陈述该谱系源自单个杂合子亲代 ($Aa$) 并进行克隆繁殖。这意味着所有后代在基因上都与亲代相同，即基因型为 $Aa$。因此，该谱系的生存力是恒定的，等于 $Aa$ 基因型的生存力。\n$$w_{\\mathrm{asex}} = w_{\\mathrm{Aa}} = 1$$\n\n第二步是确定平衡状态下有性繁殖种群的平均生存力 $\\bar{w}_{\\mathrm{sex}}$。这需要找到平衡等位基因频率。设等位基因 $A$ 的频率为 $p$，等位基因 $a$ 的频率为 $q$，且满足约束条件 $p+q=1$。在一个极大的随机交配种群中，合子阶段的基因型频率由哈迪-温伯格比例给出：$AA$ 为 $p^2$，$Aa$ 为 $2pq$，$aa$ 为 $q^2$。\n\n种群的平均生存力 $\\bar{w}$ 是各基因型生存力按其频率加权的平均值：\n$$\\bar{w} = p^2 w_{\\mathrm{AA}} + 2pq w_{\\mathrm{Aa}} + q^2 w_{\\mathrm{aa}}$$\n代入给定的生存力值：\n$$\\bar{w} = p^2(1-s) + 2pq(1) + q^2(1-s)$$\n这可以使用恒等式 $(p+q)^2 = p^2 + 2pq + q^2 = 1$ 进行简化：\n$$\\bar{w} = p^2 - sp^2 + 2pq + q^2 - sq^2 = (p^2 + 2pq + q^2) - s(p^2 + q^2) = 1 - s(p^2 + q^2)$$\n\n为了找到平衡点，我们必须找到那个从一代到下一代频率不变的等位基因频率 $p$。下一代等位基因 $A$ 的频率 $p'$ 是选择发生后种群中 $A$ 等位基因的频率：\n$$p' = \\frac{\\text{选择后 } A \\text{ 等位基因的频率}}{\\text{选择后所有等位基因的频率之和}} = \\frac{p^2 w_{\\mathrm{AA}} + pq w_{\\mathrm{Aa}}}{\\bar{w}}$$\n$$p' = \\frac{p^2(1-s) + pq}{\\bar{w}}$$\n在平衡状态下，$p' = p$，记为 $\\hat{p}$。因此，我们必须求解 $\\hat{p} = \\frac{\\hat{p}^2(1-s) + \\hat{p}\\hat{q}}{\\bar{w}}$。对于 $\\hat{p} \\neq 0$ 和 $\\hat{p} \\neq 1$ 的非平凡多态平衡，我们可以两边同除以 $\\hat{p}$：\n$$\\bar{w} = \\hat{p}(1-s) + \\hat{q}$$\n代入 $\\bar{w} = 1 - s(\\hat{p}^2 + \\hat{q}^2)$ 和 $\\hat{q} = 1 - \\hat{p}$：\n$$1 - s(\\hat{p}^2 + (1-\\hat{p})^2) = \\hat{p}(1-s) + (1-\\hat{p})$$\n$$1 - s(2\\hat{p}^2 - 2\\hat{p} + 1) = \\hat{p} - s\\hat{p} + 1 - \\hat{p} = 1 - s\\hat{p}$$\n$$-s(2\\hat{p}^2 - 2\\hat{p} + 1) = -s\\hat{p}$$\n由于 $s \\in (0,1)$，我们可以两边同除以 $-s$：\n$$2\\hat{p}^2 - 2\\hat{p} + 1 = \\hat{p}$$\n$$2\\hat{p}^2 - 3\\hat{p} + 1 = 0$$\n这是一个一元二次方程，可因式分解为 $(2\\hat{p}-1)(\\hat{p}-1) = 0$。其解为 $\\hat{p}=1$ 和 $\\hat{p}=1/2$。解 $\\hat{p}=1$ 代表一个 $A$ 等位基因被固定的单态种群，这在杂合子优势条件下是一个不稳定的平衡。稳定的多态平衡是：\n$$\\hat{p} = \\frac{1}{2}$$\n因此，等位基因 $a$ 的平衡频率为 $\\hat{q} = 1 - \\hat{p} = 1/2$。\n\n这个结果是对于对称超显性的标准结果。现在，我们可以计算在该平衡下有性繁殖种群的平均生存力 $\\bar{w}_{\\mathrm{sex}}$：\n$$\\bar{w}_{\\mathrm{sex}} = 1 - s(\\hat{p}^2 + \\hat{q}^2) = 1 - s\\left(\\left(\\frac{1}{2}\\right)^2 + \\left(\\frac{1}{2}\\right)^2\\right)$$\n$$\\bar{w}_{\\mathrm{sex}} = 1 - s\\left(\\frac{1}{4} + \\frac{1}{4}\\right) = 1 - s\\left(\\frac{1}{2}\\right) = 1 - \\frac{s}{2}$$\n这个平均适合度低于杂合子（$w_{Aa}=1$）的适合度，因为有性繁殖（通过孟德尔分离）会持续产生适合度较低的纯合基因型（$AA$ 和 $aa$）。这种平均适合度的降低通常被称为“分离负荷”（segregation load）。\n\n最后，我们计算适合度差异 $D$：\n$$D = w_{\\mathrm{asex}} - \\bar{w}_{\\mathrm{sex}} = 1 - \\left(1 - \\frac{s}{2}\\right)$$\n$$D = \\frac{s}{2}$$\n问题给出了选择系数的具体值 $s=0.1$。我们代入这个值以获得最终的数值答案：\n$$D = \\frac{0.1}{2} = 0.05$$\n这个值代表了在指定条件下，无性克隆相对于平衡状态下的有性繁殖种群的适合度优势。它也恰好是有性繁殖种群所承担的分离负荷。", "answer": "$$\\boxed{0.05}$$", "id": "2547339"}, {"introduction": "既然有性生殖存在显著的人口和遗传代价，为何它在自然界中如此普遍？一个强有力的解释是“红皇后假说”（Red Queen hypothesis），它认为在与寄生虫等对手的持续协同演化竞赛中，有性生殖产生的遗传多样性至关重要。本练习将理论付诸实践，要求你编写一个程序来模拟宿主与寄生虫之间的动态相互作用 [@problem_id:2547486]。更重要的是，你将学习如何分析模拟生成的时间序列数据，使用傅里叶变换、互相关分析和回归等方法来识别红皇后动态的特征信号并估算选择强度，这让你能像演化生物学家一样，从数据中探寻理论的证据。", "problem": "您将获得一个关于负频率依赖选择下的宿主-寄生虫协同进化的概念框架，该框架通常被用来解释红皇后假说下有性繁殖的优势。考虑一个宿主物种，其具有 $2$ 种单倍体基因型，标记为 $A$ 和 $B$。在离散时间 $t$，基因型 $A$ 的频率由 $x_t \\in (0,1)$ 表示，基因型 $B$ 的频率则为 $1 - x_t$。存在 $2$ 种分别特化于每种宿主基因型的寄生虫品系，特化于 $A$ 的品系的流行率由 $y_{A,t} \\in (0,1)$ 表示，而特化于 $B$ 的品系的流行率则由 $y_{B,t} = 1 - y_{A,t}$ 表示。所有量均为无量纲的频率和流行率。\n\n基本的种群遗传动力学由用于选择的离散时间复制子方程定义。如果宿主基因型在时间 $t$ 的相对适应度分别为 $w_{A,t}$ 和 $w_{B,t}$，那么宿主基因型频率的变化由以下公式决定：\n$$\nx_{t+1} \\;=\\; \\frac{x_t \\, w_{A,t}}{x_t \\, w_{A,t} + (1 - x_t) \\, w_{B,t}}.\n$$\n假设寄生虫通过基因型特异性的适应度降低施加负频率依赖选择，其降低幅度 $s \\ge 0$ 与匹配的寄生虫流行率成正比：\n$$\nw_{A,t} \\;=\\; 1 - s\\, y_{A,t}, \\qquad w_{B,t} \\;=\\; 1 - s\\, y_{B,t}.\n$$\n假设寄生虫流行率通过引入一个滞后的线性追踪规则来适应宿主的构成：\n$$\ny_{A,t+1} \\;=\\; y_{A,t} \\;+\\; \\gamma \\, (x_t - y_{A,t}), \\qquad \\gamma \\in [0,1],\n$$\n且 $y_{B,t} = 1 - y_{A,t}$。\n\n根据这些定义，一个经过充分检验的对复制子更新的弱选择近似可得出：\n$$\nx_{t+1} - x_t \\;\\approx\\; s \\, x_t \\, (1 - x_t) \\, \\big(y_{B,t} - y_{A,t}\\big),\n$$\n这表明转换后的频率变化与寄生虫差异 $\\big(y_{B,t} - y_{A,t}\\big)$ 之间存在线性关系。这为使用回归分析从时间序列中估计 $s$ 提供了一条有原则的途径。\n\n您的任务是编写一个完整的程序，对下面指定的每个测试用例执行以下操作：\n- 对给定的参数 $(T, s, \\gamma, x_0, y_{A,0})$，使用上述方程模拟宿主-寄生虫时间序列 $\\{x_t, y_{A,t}\\}_{t=0}^{T-1}$。\n- 仅使用模拟的时间序列，而不使用已知的参数值，推断模拟数据中是否存在与红皇后假说一致的周期性动力学。\n- 使用基于弱选择近似的回归分析，从模拟的时间序列中估算选择强度 $s$。\n\n在本问题中，“与红皇后假说一致”的定义如下：\n- 在 $x_t$ 中必须存在一个非零频率的主导振荡分量。通过计算后续分析窗口内均值中心化的宿主序列的离散傅里叶变换 (DFT) 功率谱，识别周期为 $P$（以时间步为单位）的最大非零频率峰值，并要求该峰值的功率与所有非零频率的功率中位数之比超过阈值 $\\rho^\\star$，来形式化此条件。\n- 必须存在与对抗性协同进化一致的宿主引导寄生虫的相位关系：计算分析窗口内 $x_t$ 和 $y_{A,t}$ 之间作为非负整数滞后 $\\ell$ 的函数的互相关，并找出使 $x_t$ 和 $y_{A,t+\\ell}$ 之间相关性最大化的滞后 $\\ell^\\star \\in \\{1,2,\\dots,\\lfloor P \\rfloor - 1\\}$。计算相位分数 $\\phi = \\ell^\\star / P$，并要求 $|\\phi - 1/4| \\le \\delta^\\star$。\n- 基于回归的 $s$ 估计值必须为正，并超过一个最小可检测值 $s^\\star$。\n\n$s$ 的估计：\n- 对于分析窗口中的每个 $t$，定义转换响应\n$$\nr_t \\;=\\; \\frac{x_{t+1} - x_t}{x_t \\, (1 - x_t)},\n$$\n和预测变量\n$$\nz_t \\;=\\; y_{B,t} - y_{A,t} \\;=\\; 1 - 2 y_{A,t}.\n$$\n在线性模型 $r_t = s \\, z_t + \\varepsilon_t$ 中通过普通最小二乘法估计 $s$，即\n$$\n\\hat{s} \\;=\\; \\frac{\\sum_t z_t \\, r_t}{\\sum_t z_t^2},\n$$\n该计算在分析窗口内满足 $x_t \\in [\\epsilon, 1 - \\epsilon]$ 的 $t$ 上进行，其中 $\\epsilon$ 是一个很小的值，以避免除以接近于 0 的值。\n\n分析窗口和阈值：\n- 使用由时间序列的后 $3/4$ 组成的后续窗口，即时间索引 $t \\in \\{\\lfloor T/4 \\rfloor, \\dots, T-1\\}$。\n- 使用阈值 $\\rho^\\star = 2.0$，$\\delta^\\star = 0.2$ 和 $s^\\star = 0.05$。\n- 为保证数值稳定性，使用 $\\epsilon = 10^{-6}$。\n\n测试套件：\n- 案例 1：$(T, s, \\gamma, x_0, y_{A,0}) = (256, 0.6, 0.2, 0.55, 0.45)$。\n- 案例 2：$(T, s, \\gamma, x_0, y_{A,0}) = (256, 0.0, 0.3, 0.52, 0.50)$。\n- 案例 3：$(T, s, \\gamma, x_0, y_{A,0}) = (256, 0.2, 0.25, 0.60, 0.40)$。\n- 案例 4：$(T, s, \\gamma, x_0, y_{A,0}) = (256, 0.5, 0.0, 0.50, 0.50)$。\n\n输出规格：\n- 对于每个案例，输出一个包含 2 个元素的列表 $[b, \\hat{s}]$，其中 $b$ 是一个布尔值，表示根据上述决策规则是否推断出与红皇后假说一致的周期，$\\hat{s}$ 是估算的选择强度，四舍五入到三位小数（作为数字浮点型）。按顺序将 4 个案例的结果汇总到一个列表中。\n- 您的程序应生成单行输出，其中包含一个方括号括起来的逗号分隔列表形式的结果（例如，[[True,0.603],[False,0.000],[True,0.198],[False,0.000]]）。不要打印任何其他文本。\n\n所有量均为无量纲；不涉及任何物理单位或角度。计算必须仅使用给定的更新方程和分析规则，不得参考外部数据。", "solution": "本问题提出了一个定义明确的计算任务，该任务基于负频率依赖选择下的宿主-寄生虫协同进化标准模型，这是红皇后假说的一个基石。该问题有科学依据，数学上完备，且算法上明确。因此，它是有效的。\n\n任务是模拟协同进化动力学，然后分析生成的时间序列，以检验是否存在红皇后动力学特征，并估计选择强度 $s$。解决方案分两个主要阶段进行：模拟和分析。\n\n**1. 宿主-寄生虫动力学模拟**\n\n在任何离散时间步 $t$，系统状态由宿主基因型频率 $x_t$（对于基因型 $A$）和寄生虫流行率 $y_{A,t}$（对于适应于 $A$ 的品系）描述。初始状态 $(x_0, y_{A,0})$ 与总模拟时间 $T$、选择强度 $s$ 和寄生虫追踪速率 $\\gamma$ 等参数一同给出。\n\n时间序列 $\\{x_t\\}_{t=0}^{T-1}$ 和 $\\{y_{A,t}\\}_{t=0}^{T-1}$ 是迭代生成的。对于从 $0$ 到 $T-2$ 的每个时间步 $t$，我们计算时间 $t+1$ 的状态：\n\n首先，我们将宿主基因型 $B$ 的频率定义为 $1 - x_t$，适应于 $B$ 的寄生虫品系的流行率定义为 $y_{B,t} = 1 - y_{A,t}$。\n\n宿主基因型的相对适应度由匹配寄生虫品系的流行率决定，并受选择系数 $s$ 的影响：\n$$\nw_{A,t} = 1 - s \\cdot y_{A,t}\n$$\n$$\nw_{B,t} = 1 - s \\cdot (1 - y_{A,t})\n$$\n\n下一个时间步的宿主基因型 $A$ 的频率 $x_{t+1}$，是使用离散时间复制子方程计算的，该方程描述了基因型频率在选择作用下的变化。新频率等于旧频率乘以其相对适应度，再通过种群的平均适应度 $\\bar{w}_t$ 进行归一化：\n$$\n\\bar{w}_t = x_t \\, w_{A,t} + (1 - x_t) \\, w_{B,t}\n$$\n$$\nx_{t+1} = \\frac{x_t \\, w_{A,t}}{\\bar{w}_t}\n$$\n\n同时，寄生虫流行率适应宿主的基因型频率。下一个时间步适应于宿主 $A$ 的寄生虫品系的流行率 $y_{A,t+1}$，根据带有滞后参数 $\\gamma$ 的线性追踪规则进行更新：\n$$\ny_{A,t+1} = y_{A,t} + \\gamma \\, (x_t - y_{A,t})\n$$\n此过程重复 $T-1$ 步以生成完整的时间序列。\n\n**2. 时间序列分析**\n\n分析在模拟数据的后续窗口上进行，该窗口定义为时间索引 $t \\in \\{\\lfloor T/4 \\rfloor, \\dots, T-1\\}$。设 $N_w = T - \\lfloor T/4 \\rfloor$ 为此分析窗口的长度。对红皇后动力学的推断基于三个特定标准。\n\n**条件 1：主导振荡分量**\n该条件验证宿主动力学是否表现出持续的振荡，这是红皇后协同进化的一个标志。\n- 分析窗口内的宿主频率时间序列 $x_w = \\{x_t\\}_{t=\\lfloor T/4 \\rfloor}^{T-1}$ 首先进行均值中心化。\n- 使用实值离散傅里叶变换 (DFT) 计算此均值中心化序列的功率谱。功率是 DFT 系数幅度的平方。\n- 我们在所有非零频率中识别出峰值功率。设此峰值频率对应的周期为 $P$。\n- 计算该峰值功率与所有非零频率的功率中位数之比 $\\rho$。\n- 如果 $\\rho > \\rho^\\star$（其中 $\\rho^\\star = 2.0$），则该条件满足。这确保了峰值是显著的，而不仅仅是随机波动。\n\n**条件 2：宿主引导寄生虫的相位关系**\n对抗性协同进化预测，宿主种群的变化之后应伴随着寄生虫种群的适应性变化。这意味着一个特定的相位滞后。\n- 仅当条件 1 满足且找到周期 $P \\ge 2$ 时，才检查此条件。\n- 对于在 $\\{1, 2, \\dots, \\lfloor P \\rfloor-1\\}$ 范围内的整数滞后 $\\ell$，我们计算宿主序列 $x_t$ 和时间提前的寄生虫序列 $y_{A,t+\\ell}$ 之间的皮尔逊相关系数。对于给定的 $\\ell$，相关性在分析窗口的重叠部分上计算。\n- 确定使该相关性最大化的滞后 $\\ell^\\star$。\n- 相位分数计算为 $\\phi = \\ell^\\star / P$。红皇后假说预测存在四分之一周期的滞后（$\\phi \\approx 1/4$）。\n- 如果 $|\\phi - 1/4| \\le \\delta^\\star$（其中 $\\delta^\\star = 0.2$），则该条件满足。\n\n**条件 3：正向选择估计**\n整个动力学都基于选择是活跃的（$s > 0$）这一前提。我们从数据中估计 $s$ 并验证其足够大。\n- 估计使用所提供的弱选择近似：$x_{t+1} - x_t \\approx s \\, x_t(1-x_t)(y_{B,t} - y_{A,t})$。\n- 这可以重新整理成一个通过原点的线性回归模型：$r_t = s \\, z_t$。其中响应变量为 $r_t = \\frac{x_{t+1} - x_t}{x_t(1 - x_t)}$，预测变量为 $z_t = y_{B,t} - y_{A,t} = 1 - 2y_{A,t}$。\n- $s$ 的普通最小二乘 (OLS) 估计值为 $\\hat{s} = \\frac{\\sum z_t r_t}{\\sum z_t^2}$。\n- 总和是在分析窗口（从 $t = \\lfloor T/4 \\rfloor$ 到 $T-2$）上计算的，排除了 $x_t$ 太接近 $0$ 或 $1$ 的点（即 $x_t \\notin [\\epsilon, 1-\\epsilon]$，其中 $\\epsilon = 10^{-6}$），以确保数值稳定性。\n- 如果分母 $\\sum z_t^2$ 为零，这意味着预测变量没有变化，则将 $\\hat{s}$ 取为 $0$。\n- 如果 $\\hat{s} > s^\\star$（其中 $s^\\star = 0.05$），则该条件满足。\n\n最后，当且仅当所有三个条件都满足时，给定测试用例的动力学才被归类为“与红皇后假说一致”。然后，程序报告此布尔结果以及估算的选择强度 $\\hat{s}$（四舍五入到三位小数）。", "answer": "```python\nimport numpy as np\nfrom scipy import fft\n\ndef solve():\n    \"\"\"\n    Solves the host-parasite coevolution problem for a suite of test cases.\n    \"\"\"\n    test_cases = [\n        (256, 0.6, 0.2, 0.55, 0.45),\n        (256, 0.0, 0.3, 0.52, 0.50),\n        (256, 0.2, 0.25, 0.60, 0.40),\n        (256, 0.5, 0.0, 0.50, 0.50),\n    ]\n\n    results = []\n    for params in test_cases:\n        result = analyze_case(*params)\n        results.append(result)\n\n    # Format the output string as per the specification\n    final_strings = []\n    for res in results:\n        bool_str = \"True\" if res[0] else \"False\"\n        # Ensure float is formatted with 3 decimal places\n        float_str = f\"{res[1]:.3f}\"\n        final_strings.append(f\"[{bool_str},{float_str}]\")\n    \n    print(f\"[{','.join(final_strings)}]\")\n\ndef analyze_case(T, s, gamma, x0, yA0):\n    \"\"\"\n    Runs the simulation and analysis for a single test case.\n\n    Args:\n        T (int): Total number of time steps.\n        s (float): Selection strength.\n        gamma (float): Parasite tracking rate.\n        x0 (float): Initial host genotype frequency.\n        yA0 (float): Initial parasite prevalence.\n\n    Returns:\n        list: A list [b, s_hat] where b is a boolean indicating Red Queen\n              consistency and s_hat is the estimated selection strength.\n    \"\"\"\n    # Define thresholds and constants\n    rho_star = 2.0\n    delta_star = 0.2\n    s_star = 0.05\n    epsilon = 1e-6\n\n    # 1. Simulation\n    x = np.zeros(T)\n    yA = np.zeros(T)\n    x[0], yA[0] = x0, yA0\n\n    for t in range(T - 1):\n        yB_t = 1.0 - yA[t]\n        wA_t = 1.0 - s * yA[t]\n        wB_t = 1.0 - s * yB_t\n        \n        mean_fitness = x[t] * wA_t + (1.0 - x[t]) * wB_t\n        \n        if mean_fitness > 1e-9:\n            x[t+1] = (x[t] * wA_t) / mean_fitness\n        else:\n            x[t+1] = x[t]\n\n        yA[t+1] = yA[t] + gamma * (x[t] - yA[t])\n    \n    # 2. Analysis\n    t_start = T // 4\n    analysis_window_len = T - t_start\n    x_w = x[t_start:]\n    yA_w = yA[t_start:]\n\n    # Condition 1: Oscillation\n    cond1 = False\n    P = 0.0\n    x_w_centered = x_w - np.mean(x_w)\n    \n    power_spectrum = np.abs(fft.rfft(x_w_centered))**2\n    freqs = fft.rfftfreq(analysis_window_len)\n    \n    power_nonzero = power_spectrum[1:]\n    freqs_nonzero = freqs[1:]\n    \n    median_power = np.median(power_nonzero) if len(power_nonzero) > 0 else 0.0\n\n    if median_power > 1e-9:\n        peak_power_idx_nz = np.argmax(power_nonzero)\n        peak_power = power_nonzero[peak_power_idx_nz]\n        rho = peak_power / median_power\n        if rho > rho_star:\n            cond1 = True\n            peak_freq = freqs_nonzero[peak_power_idx_nz]\n            if peak_freq > 1e-9:\n                P = 1.0 / peak_freq\n    \n    # Condition 2: Phase\n    cond2 = False\n    if cond1 and P >= 2.0:\n        lag_max = int(np.floor(P)) - 1\n        lags = range(1, lag_max + 1)\n        if lags:\n            corrs = []\n            for l in lags:\n                if len(x_w) - l > 1:\n                    corr_matrix = np.corrcoef(x_w[:-l], yA_w[l:])\n                    corrs.append(corr_matrix[0, 1])\n            \n            if corrs:\n                best_lag_idx = np.argmax(corrs)\n                l_star = lags[best_lag_idx]\n                phi = l_star / P\n                if abs(phi - 0.25) = delta_star:\n                    cond2 = True\n\n    # Condition 3: Selection estimate\n    sum_zr = 0.0\n    sum_z_sq = 0.0\n    \n    for t_idx in range(analysis_window_len - 1):\n        t_global = t_start + t_idx\n        if epsilon = x[t_global] = 1.0 - epsilon:\n            r_t = (x[t_global+1] - x[t_global]) / (x[t_global] * (1.0 - x[t_global]))\n            z_t = 1.0 - 2.0 * yA[t_global]\n            sum_zr += z_t * r_t\n            sum_z_sq += z_t**2\n\n    s_hat = 0.0\n    if sum_z_sq > 1e-9:\n        s_hat = sum_zr / sum_z_sq\n    \n    cond3 = s_hat > s_star\n        \n    is_red_queen = cond1 and cond2 and cond3\n    \n    return [is_red_queen, s_hat]\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2547486"}]}