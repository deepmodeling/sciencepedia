{"hands_on_practices": [{"introduction": "从同型孢子到异型孢子的转变是植物演化史上的一大步，它深刻地改变了植物的繁殖方式。这个练习将引导你使用概率论中的竞争过程模型，来量化这两种生命周期下自交率的差异。通过推导这些公式，你将能更深入地理解性别分离如何从机制上限制了自交的可能性，并为理解更复杂的交配系统演化奠定数学基础。[@problem_id:2581274]", "problem": "从同型孢子到异型孢子的转变，其核心的进化后果之一是性别分离对自交机制和机会所施加的限制。在同型孢子谱系中，单个单倍体孢子可以发育成一个能够进行配子体内自交（即由同一个单倍体配子体产生的配子之间融合）的两性配子体。在异型孢子谱系（包括种子植物）中，雌雄配子体被分离到小孢子和大孢子中，因此自交——如果发生的话——必定是配子体间的，即源自同一个二倍体孢子体的雌雄配子体之间通过其自身的花粉传递而受精。\n\n考虑以下机制模型，这些模型基于标准定义以及将交配描述为竞争性到达过程的、经过充分检验的随机模型。\n\n1. 同型孢子情况（配子体内自交）：比例为 $q \\in [0,1]$ 的配子体是两性的。对于一个两性配子体，其自身的精子到达并成功使其一个颈卵器受精所需的时间 $T_{s}$，被建模为一个速率为 $\\mu \\gt 0$ 的指数随机变量。同时，来自相邻配子体的异交精子以独立的泊松动态到达，因此在该颈卵器上首次异交受精机会的时间 $T_{o}$ 是一个速率为 $\\lambda \\ge 0$ 的指数随机变量。受精发生在首次到达时，即在 $\\min\\{T_{s},T_{o}\\}$ 时刻。假设每个两性配子体最多贡献一个合子。单性配子体（比例为 $1-q$）不能进行配子体内自交，对配子体内自交的贡献为零。\n\n2. 异型孢子情况（配子体间自交）：在给定的二倍体孢子体上，胚珠接收来自同一孢子体的自交花粉的速率为 $\\sigma \\ge 0$，接收来自其他孢子体的异交花粉的速率为 $\\tau \\ge 0$。设第一个成功的自交花粉管形成的时间 $S$ 为一个速率为 $\\sigma$ 的指数随机变量，第一个成功的异交花粉管形成的时间 $O$ 为一个速率为 $\\tau$ 的指数随机变量，两者相互独立。受精发生在首次到达时，即在 $\\min\\{S,O\\}$ 时刻。不存在自交不亲和性。\n\n将自交率定义为在每种生活史下由自交形成的合子所占的比例：对于同型孢子情况，是在两性配子体上发生的配子体内自交；对于异型孢子情况，是通过来自同一孢子体的自交花粉进行的配子体间自交。\n\n仅使用上述假设以及独立泊松到达过程和指数等待时间的基本性质，推导以下项的封闭形式表达式：\n- 同型孢子情况下的预期配子体内自交率 $S_{\\text{homo}}$，以及\n- 异型孢子情况下的预期配子体间自交率 $S_{\\text{hetero}}$，\n\n用 $q$、$\\mu$、$\\lambda$、$\\sigma$ 和 $\\tau$ 来表示。将您的最终答案以最简解析形式表示为单个行向量 $\\big(S_{\\text{homo}}, S_{\\text{hetero}}\\big)$。不需要进行数值计算。", "solution": "在尝试任何解答之前，将对问题陈述进行验证。\n\n**问题验证**\n\n**第1步：提取已知条件**\n\n*   **同型孢子模型：**\n    *   比例为 $q \\in [0,1]$ 的配子体是两性的。\n    *   两性配子体发生配子体内自交的时间 $T_s$ 是一个速率为 $\\mu > 0$ 的指数随机变量。\n    *   两性配子体发生首次异交受精的时间 $T_o$ 是一个速率为 $\\lambda \\ge 0$ 的指数随机变量。\n    *   $T_s$ 和 $T_o$ 相互独立。\n    *   受精发生在时间 $\\min\\{T_s, T_o\\}$。\n    *   比例为 $1-q$ 的配子体是单性的，不能自交。\n\n*   **异型孢子模型：**\n    *   一个胚珠发生自花受精的时间 $S$ 是一个速率为 $\\sigma \\ge 0$ 的指数随机变量。\n    *   一个胚珠发生异花受精的时间 $O$ 是一个速率为 $\\tau \\ge 0$ 的指数随机变量。\n    *   $S$ 和 $O$ 相互独立。\n    *   受精发生在时间 $\\min\\{S, O\\}$。\n    *   不存在自交不亲和性。\n\n*   **定义：**\n    *   自交率是由自交形成的合子所占的比例。\n\n*   **目标：**\n    *   推导同型孢子自交率 $S_{\\text{homo}}$ 和异型孢子自交率 $S_{\\text{hetero}}$ 的封闭形式表达式。\n    *   最终答案必须是一个行向量 $(S_{\\text{homo}}, S_{\\text{hetero}})$。\n\n**第2步：使用提取的已知条件进行验证**\n\n根据提供的验证标准对问题进行评估。\n\n*   **科学依据：**该问题基于植物进化生物学中的既定概念（同型孢子、异型孢子、自交与异交）。其建模方法，即使用竞争性泊松过程（由指数等待时间表示），是理论群体遗传学和生态学中一种标准且有效的方法。\n*   **良态问题：**问题陈述清晰。所有必要的变量（$q$、$\\mu$、$\\lambda$、$\\sigma$、$\\tau$）及其约束都已定义。目标明确，并且可以使用标准概率论实现。\n*   **客观性：**语言正式、精确，不含主观性或个人观点。\n\n该问题没有表现出任何列出的缺陷（例如，科学上不健全、不完整、矛盾、模棱两可）。这些假设虽然是对复杂生物现实的简化，但陈述清晰，构成了一个自洽的、可解的数学问题。\n\n**第3步：结论与行动**\n\n问题是**有效的**。将推导解答。\n\n**自交率的推导**\n\n这个问题的核心依赖于独立指数随机变量的一个基本性质。如果一个随机变量 $X_1$ 服从速率参数为 $\\alpha_1$ 的指数分布，另一个独立的随机变量 $X_2$ 服从速率参数为 $\\alpha_2$ 的指数分布，那么 $X_1$ 在 $X_2$ 之前发生的概率为：\n$$\nP(X_1 < X_2) = \\frac{\\alpha_1}{\\alpha_1 + \\alpha_2}\n$$\n这一结果源于指数分布的无记忆性，它代表了两个独立泊松过程之间竞争的结果。\n\n**1. 同型孢子自交率 ($S_{\\text{homo}}$)**\n\n自交率 $S_{\\text{homo}}$ 定义为群体中所有合子里由配子体内自交形成的合子所占的比例。\n\n配子体群体被分为两种类型：\n*   比例为 $q$ 的是两性配子体。它们既能自交也能异交。\n*   比例为 $1-q$ 的是单性配子体。问题陈述它们对配子体内自交的贡献为零，这意味着它们只能被异交。\n\n我们假设所有具有雌性生殖能力的配子体（即拥有颈卵器）最终都会形成一个合子，无论是通过自交还是异交。这个假设隐含在“首次到达”受精模型中。\n\n考虑单个两性配子体。竞争发生在自交（事件时间 $T_s$，其中 $T_s \\sim \\text{Exponential}(\\mu)$）和异交（事件时间 $T_o$，其中 $T_o \\sim \\text{Exponential}(\\lambda)$）之间。该配子体进行自交的概率是自交事件在异交事件之前发生的概率：\n$$\nP(\\text{selfing} | \\text{bisexual}) = P(T_s < T_o) = \\frac{\\mu}{\\mu + \\lambda}\n$$\n自交只能在两性配子体的亚群中发生，该亚群占配子体总群体的比例为 $q$。因此，通过自交形成的所有合子的比例，是能够自交的配子体比例与它们进行自交的条件概率的乘积。\n$$\nS_{\\text{homo}} = P(\\text{selfing}) = P(\\text{selfing} | \\text{bisexual}) \\times P(\\text{bisexual})\n$$\n将给定的比例 $q$ 代入 $P(\\text{bisexual})$，并将推导出的概率代入条件项，我们得到：\n$$\nS_{\\text{homo}} = \\left(\\frac{\\mu}{\\mu + \\lambda}\\right) \\times q\n$$\n因此，预期的配子体内自交率为 $S_{\\text{homo}} = \\frac{q\\mu}{\\mu + \\lambda}$。\n\n**2. 异型孢子自交率 ($S_{\\text{hetero}}$)**\n\n在异型孢子的情况下，自交是配子体间的。我们考虑一个二倍体孢子体上的单个胚珠。这个胚珠是来自同一孢子体的自交花粉和来自其他孢子体的异交花粉之间竞争的场所。\n\n问题用两个独立的指数随机变量来模拟这种竞争：\n*   由自交花粉成功受精的时间 $S$，其中 $S \\sim \\text{Exponential}(\\sigma)$。\n*   由异交花粉成功受精的时间 $O$，其中 $O \\sim \\text{Exponential}(\\tau)$。\n\n自交率 $S_{\\text{hetero}}$ 是任意一个给定的合子由自交花粉形成的概率。这等同于对于任何给定的胚珠，自交事件在异交事件之前发生的概率。\n$$\nS_{\\text{hetero}} = P(S < O)\n$$\n使用竞争性指数过程的标准公式，我们有：\n$$\nS_{\\text{hetero}} = \\frac{\\sigma}{\\sigma + \\tau}\n$$\n该表达式表示在给定的到达速率 $\\sigma$ 和 $\\tau$ 以及不存在自交不亲和性的条件下，预期由自交花粉受精的所有胚珠的比例。\n\n**结论**\n\n推导出的两种自交率的表达式为：\n*   $S_{\\text{homo}} = \\frac{q\\mu}{\\mu + \\lambda}$\n*   $S_{\\text{hetero}} = \\frac{\\sigma}{\\sigma + \\tau}$\n\n最终答案应表示为单个行向量 $(S_{\\text{homo}}, S_{\\text{hetero}})$。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{q\\mu}{\\mu + \\lambda} & \\frac{\\sigma}{\\sigma + \\tau} \\end{pmatrix}}\n$$", "id": "2581274"}, {"introduction": "异型孢子的演化，特别是小孢子小型化为花粉，不仅涉及遗传和发育的改变，也受到基本物理定律的制约。这个练习构建了一个生物物理模型，要求你计算在满足紫外线防护和细胞生存力这两个相互冲突的需求下，孢子的最小可行尺寸。通过这个计算，你将亲身体验到演化如何在多重选择压力之间寻求最佳的“设计”方案，从而塑造生物体的形态与功能。[@problem_id:2581213]", "problem": "产生花粉（雄性小孢子）的异形孢子世系通常会经历小孢子小型化的选择压力，以利于传播和加速雄性配子体发育，而陆地紫外线（UV）暴露则选择需要有足够的孢粉素屏蔽来保护脱氧核糖核酸（DNA）。考虑一个球形小孢子，其具有厚度均匀的孢粉素外壁和内部的细胞质原生质体。假设在传播过程中的紫外线B（UV-B）辐照度施加了一个约束，即入射到孢子内部基因组上的时间积分UV-B光子通量不得超过维持生存能力所需的临界值。您可以假设UV通过孢粉素的衰减遵循比尔-朗伯定律，其吸收系数$\\alpha$在整个外壁上是恒定的，并且原生质体本身不会显著衰减UV-B。设传播期间的外部时间积分UV-B光子通量为$\\Phi_{0}$（单位：光子 $\\mathrm{m}^{-2}$），设基因组内部可耐受的最大通量为$\\Phi_{\\mathrm{crit}}$（单位：光子 $\\mathrm{m}^{-2}$）。设功能性雄性配子体启动所需的最小存活原生质体半径为$r_{\\mathrm{p,min}}$。假设一个半径为$r$的球形孢子，其外壁厚度为$t$，因此原生质体半径为$r - t$。\n\n仅使用这些假设和标准几何关系，推导出同时满足紫外线屏蔽要求和原生质体尺寸要求的最小可行孢子直径。然后，使用以下基于经验的参数对其进行数值计算：$\\alpha = 1.3 \\ \\mu \\mathrm{m}^{-1}$，$\\Phi_{0} = 1.0 \\times 10^{20}$ 光子 $\\mathrm{m}^{-2}$，$\\Phi_{\\mathrm{crit}} = 5.0 \\times 10^{17}$ 光子 $\\mathrm{m}^{-2}$，以及 $r_{\\mathrm{p,min}} = 3.0 \\ \\mu \\mathrm{m}$。将最终答案表示为以$\\mu \\mathrm{m}$为单位的最小直径，并四舍五入到3位有效数字。", "solution": "对问题陈述的分析表明，该问题具有科学依据，提法明确，并包含足够的信息以获得唯一解。这个问题是一个在两个约束条件下的生物物理优化问题，是定量生物学中的一个标准练习。因此，该问题被认为是有效的，我将着手进行推导。\n\n该问题要求确定最小可行孢子直径$D$。孢子被建模为一个半径为$r$的球体，由一个半径为$r_{\\mathrm{p}}$的内部原生质体和一个厚度均匀的外部保护性外壁$t$组成。因此，总半径由$r = r_{\\mathrm{p}} + t$给出。直径为$D = 2r = 2(r_{\\mathrm{p}} + t)$。为了最小化直径$D$，我们必须最小化半径$r$，这又需要最小化原生质体半径$r_{\\mathrm{p}}$和外壁厚度$t$之和。这种最小化受到两个独立约束条件的制约。\n\n第一个约束：原生质体生存能力。\n问题陈述指出，启动功能性雄性配子体需要一个最小存活原生质体半径$r_{\\mathrm{p,min}}$。因此，任何可行的孢子都必须满足条件：\n$$r_{\\mathrm{p}} \\ge r_{\\mathrm{p,min}}$$\n因此，原生质体半径的最小可能值为$r_{\\mathrm{p,min}}$。\n\n第二个约束：UV-B屏蔽。\n紫外线B（UV-B）辐射穿过孢粉素外壁的衰减遵循比尔-朗伯定律。穿过厚度为$t$的外壁后，原生质体表面的通量$\\Phi_{\\mathrm{p}}$与外部入射通量$\\Phi_{0}$的关系由以下方程给出：\n$$\\Phi_{\\mathrm{p}} = \\Phi_{0} \\exp(-\\alpha t)$$\n此处，$\\alpha$是孢粉素的吸收系数。问题规定，原生质体本身提供的衰减可以忽略不计，且基因组处的时间积分通量不得超过临界值$\\Phi_{\\mathrm{crit}}$。这对外壁厚度施加了以下不等式：\n$$\\Phi_{0} \\exp(-\\alpha t) \\le \\Phi_{\\mathrm{crit}}$$\n为了找到所需的最小厚度，我们对此不等式求解$t$。\n$$\\exp(-\\alpha t) \\le \\frac{\\Phi_{\\mathrm{crit}}}{\\Phi_{0}}$$\n对两边取自然对数：\n$$-\\alpha t \\le \\ln\\left(\\frac{\\Phi_{\\mathrm{crit}}}{\\Phi_{0}}\\right)$$\n两边乘以-1会反转不等号：\n$$\\alpha t \\ge -\\ln\\left(\\frac{\\Phi_{\\mathrm{crit}}}{\\Phi_{0}}\\right)$$\n利用对数性质$-\\ln(x) = \\ln(1/x)$：\n$$\\alpha t \\ge \\ln\\left(\\frac{\\Phi_{0}}{\\Phi_{\\mathrm{crit}}}\\right)$$\n最后，求解厚度$t$：\n$$t \\ge \\frac{1}{\\alpha} \\ln\\left(\\frac{\\Phi_{0}}{\\Phi_{\\mathrm{crit}}}\\right)$$\n这就确定了所需的最小外壁厚度，我们记为$t_{\\mathrm{min}}$：\n$$t_{\\mathrm{min}} = \\frac{1}{\\alpha} \\ln\\left(\\frac{\\Phi_{0}}{\\Phi_{\\mathrm{crit}}}\\right)$$\n\n孢子直径的最小化。\n孢子半径为$r = r_{\\mathrm{p}} + t$。为了找到最小可能孢子半径$r_{\\mathrm{min}}$，我们必须同时满足两个约束。由于总半径是原生质体半径和外壁厚度的简单相加，并且这两个量都分别有下限约束（$r_{\\mathrm{p}} \\ge r_{\\mathrm{p,min}}$ 和 $t \\ge t_{\\mathrm{min}}$），因此当每个分量取其最小可能值时，总和达到最小值。\n因此，最小可行孢子半径为：\n$$r_{\\mathrm{min}} = r_{\\mathrm{p,min}} + t_{\\mathrm{min}}$$\n代入$t_{\\mathrm{min}}$的表达式：\n$$r_{\\mathrm{min}} = r_{\\mathrm{p,min}} + \\frac{1}{\\alpha} \\ln\\left(\\frac{\\Phi_{0}}{\\Phi_{\\mathrm{crit}}}\\right)$$\n问题要求的是最小可行直径$D_{\\mathrm{min}}$，即$2r_{\\mathrm{min}}$。\n$$D_{\\mathrm{min}} = 2 \\left( r_{\\mathrm{p,min}} + \\frac{1}{\\alpha} \\ln\\left(\\frac{\\Phi_{0}}{\\Phi_{\\mathrm{crit}}}\\right) \\right)$$\n这就是最小可行孢子直径的最终解析表达式。\n\n数值计算。\n给定以下参数值：\n$\\alpha = 1.3 \\ \\mu \\mathrm{m}^{-1}$\n$\\Phi_{0} = 1.0 \\times 10^{20}$ 光子 $\\mathrm{m}^{-2}$\n$\\Phi_{\\mathrm{crit}} = 5.0 \\times 10^{17}$ 光子 $\\mathrm{m}^{-2}$\n$r_{\\mathrm{p,min}} = 3.0 \\ \\mu \\mathrm{m}$\n\n首先，我们计算通量之比：\n$$\\frac{\\Phi_{0}}{\\Phi_{\\mathrm{crit}}} = \\frac{1.0 \\times 10^{20}}{5.0 \\times 10^{17}} = \\frac{1000 \\times 10^{17}}{5.0 \\times 10^{17}} = 200$$\n接下来，我们计算所需的最小外壁厚度$t_{\\mathrm{min}}$：\n$$t_{\\mathrm{min}} = \\frac{1}{1.3} \\ln(200) \\ \\mu \\mathrm{m}$$\n使用值$\\ln(200) \\approx 5.298317$：\n$$t_{\\mathrm{min}} \\approx \\frac{5.298317}{1.3} \\ \\mu \\mathrm{m} \\approx 4.075628 \\ \\mu \\mathrm{m}$$\n现在，我们计算最小孢子半径$r_{\\mathrm{min}}$：\n$$r_{\\mathrm{min}} = r_{\\mathrm{p,min}} + t_{\\mathrm{min}} \\approx 3.0 \\ \\mu \\mathrm{m} + 4.075628 \\ \\mu \\mathrm{m} = 7.075628 \\ \\mu \\mathrm{m}$$\n最后，我们计算最小孢子直径$D_{\\mathrm{min}}$：\n$$D_{\\mathrm{min}} = 2 r_{\\mathrm{min}} \\approx 2 \\times 7.075628 \\ \\mu \\mathrm{m} = 14.151256 \\ \\mu \\mathrm{m}$$\n问题要求将最终答案四舍五入到3位有效数字。\n$$D_{\\mathrm{min}} \\approx 14.2 \\ \\mu \\mathrm{m}$$\n此结果代表了一个球形小孢子可能的最小直径，该孢子既能在指定的UV-B暴露下存活，又能在到达基质后保持萌发的活性。", "answer": "$$\n\\boxed{14.2}\n$$", "id": "2581213"}, {"introduction": "为什么像异型孢子这样复杂的性状会在演化中出现并被固定下来？一个强有力的解释是，它们是在不确定的环境中优化长期适合度的策略。这个高级练习将指导你通过编程实现一个随机动态规划模型，来确定在何种环境波动程度下，通过大孢子进行母体供给（异型孢子）的策略会优于依赖外部资源的策略（同型孢子）。这个练习不仅展示了演化生态学中的一个核心权衡，也让你掌握了使用数值方法解决复杂演化问题的强大工具。[@problem_id:2581295]", "problem": "您需要实现一个数值程序，该程序在一个波动的环境中，形式化地阐明了通过大孢子（具内生孢子发育的异孢性）进行的母体供给相对于体外供给（具外生孢子发育的同孢性）何时更具优势。此推导必须从以下原则出发：在环境随机性下的乘性生活史中，自然选择会最大化长期几何平均适应度，而这通过最大化每代繁殖产出的期望对数值来实现。形式上，作如下假设。\n\n- 定义：\n  - 令 $R_t$ 表示一株植物的子代在第 $t$ 代所经历的环境资源可利用量。\n  - 令 $R_t$ 为严格正值，并通过 $R_t = \\exp(X_t)$ 建模为对数正态随机变量，其中 $X_t \\sim \\mathcal{N}(\\mu, \\sigma^2)$，在各代之间独立同分布。\n  - 考虑两种策略 $S \\in \\{E, M\\}$，其中 $E$ 代表体外供给（同孢性），$M$ 代表通过大孢子的母体供给（异孢性）。\n  - 令 $n_0$ 表示体外供给策略产生的基准繁殖体数量。\n  - 令 $c \\in (0,1)$ 表示母体供给策略因供给成本而导致的繁殖体数量的减少分数，因此母体供给产生 $n_0 (1 - c)$ 个繁殖体。\n  - 令 $\\alpha > 0$ 为一个参数，描述子代存活率对资源的响应。\n  - 令 $\\varepsilon \\in (0,1)$ 表示一个微小的基准存活率，以防止在极端恶劣的环境中灭绝（在生物学上，这可以捕捉到由于例如储存的储备或微生境避难所而产生的残余存活率）。\n  - 令 $b \\in [0,1]$ 为一个缓冲参数，捕捉有效子代资源中作为固定母体储备提供的部分，而非从外部环境获取的部分。\n  - 令 $r_b > 0$ 表示母体供给的每个子代的资源当量。\n\n- 单个世代 $t$ 中每个成体的适应度模型，作为已实现资源 $R_t$ 的函数：\n  - 体外供给：\n    $$W_E(R_t) = n_0 \\left[ \\varepsilon + (1 - \\varepsilon)\\left(1 - e^{-\\alpha R_t}\\right) \\right].$$\n  - 母体供给：\n    $$W_M(R_t) = n_0(1 - c) \\left[ \\varepsilon + (1 - \\varepsilon)\\left(1 - e^{-\\alpha \\left((1 - b) R_t + b r_b\\right)}\\right) \\right].$$\n  这些表达式捕捉了一种数量-质量的权衡：体外供给产生更多的繁殖体，但它们完全依赖于 $R_t$；而母体供给产生较少的繁殖体，但其有效资源 $(1 - b)R_t + b r_b$ 得到部分缓冲。\n\n- 乘性增长下的随机动态规划目标：\n  - 长期选择偏好能够最大化每代繁殖产出期望对数值的策略。在各代之间平稳且独立的条件下，这简化为选择具有较大 $\\mathbb{E}[\\ln W_S(R_t)]$ 的策略。\n\n- 阈值定义：\n  - 定义选择微分\n    $$\\Delta(\\sigma) = \\mathbb{E}\\left[\\ln W_M(R_t)\\right] - \\mathbb{E}\\left[\\ln W_E(R_t)\\right],$$\n    其中期望是关于 $X_t \\sim \\mathcal{N}(\\mu, \\sigma^2)$ 和 $R_t = \\exp(X_t)$ 计算的。\n  - 阈值环境方差是使母体供给开始有利的最小方差 $\\sigma^{2\\star}$，定义如下：\n    - 如果 $\\Delta(0) \\ge 0$，则 $\\sigma^{2\\star} = 0$。\n    - 如果对于一个大的搜索上限 $\\sigma_{\\max}$，有 $\\Delta(\\sigma_{\\max}) \\le 0$，则在 $[0, \\sigma_{\\max}]$ 内不存在阈值，您必须返回哨兵值 $-1$。\n    - 否则，使用区间法找到 $\\sigma^\\star \\in (0, \\sigma_{\\max})$ 使得 $\\Delta(\\sigma^\\star) = 0$，并返回方差 $\\sigma^{2\\star} = (\\sigma^\\star)^2$。\n\n- $\\mathbb{E}[\\ln W_S(R_t)]$ 的数值评估：\n  - 对于 $X \\sim \\mathcal{N}(\\mu, \\sigma^2)$，使用 $n$ 阶高斯-埃尔米特求积法来评估\n    $$\\mathbb{E}[g(X)] = \\frac{1}{\\sqrt{\\pi}} \\sum_{i=1}^{n} w_i\\, g\\!\\left(\\mu + \\sqrt{2}\\sigma z_i\\right),$$\n    其中 $\\{z_i, w_i\\}_{i=1}^n$ 分别是埃尔米特节点和权重。设 $g(x) = \\ln W_S(\\exp(x))$。\n\n- 实现要求：\n  - 使用高斯-埃尔米特求积法计算 $\\Delta(\\sigma)$。\n  - 使用二分法在 $[0, \\sigma_{\\max}]$ 区间内搜索 $\\Delta(\\sigma)$ 的根，对 $\\sigma$ 的绝对容差为 $10^{-6}$。\n  - 如果对于某些求积节点，$W_S$ 在数值上变得极小，$\\varepsilon$ 项保证其为正；不要添加任何其他临时的下限处理。\n  - 将阈值方差 $\\sigma^{2\\star}$ 报告为浮点数。\n\n- 测试集：\n  - 使用以下四个参数集，每个都是一个元组 $(n_0, c, \\alpha, \\varepsilon, b, r_b, \\mu, \\sigma_{\\max})$：\n    - 情况 A（典型情况，预期存在有限的内部阈值）：$(200, 0.4, 0.8, 0.001, 0.6, 1.2, 0.0, 2.0)$。\n    - 情况 B（缓冲弱且成本高，预期在范围内无阈值）：$(200, 0.6, 0.8, 0.001, 0.2, 1.1, 0.0, 2.5)$。\n    - 情况 C（缓冲强且成本低，即使在低方差下母体供给也更有利）：$(200, 0.2, 0.8, 0.001, 0.9, 2.0, 0.0, 2.0)$。\n    - 情况 D（缓冲强但成本相当高，阈值可能较大）：$(200, 0.5, 0.8, 0.001, 0.8, 1.0, 0.0, 3.0)$。\n\n- 输出规范：\n  - 对于每种情况，根据上述规则计算阈值方差 $\\sigma^{2\\star}$。\n  - 如果在 $[0, \\sigma_{\\max}]$ 内不存在阈值，则对该情况输出 $-1$。\n  - 您的程序应生成单行输出，包含四个结果，形式为逗号分隔的列表并用方括号括起，每个浮点数四舍五入到四位小数（例如，$[0.0000,-1.0000,0.1234,0.0000]$）。\n  - 所有量都是无量纲的；不需要物理单位。", "solution": "问题陈述已经过验证，并被认定为有效。它在科学上基于演化生物学中关于随机环境下生活史策略的既定原则。其数学公式是合理的、自洽的，并且对于所需的数值分析是适定的。不存在逻辑矛盾、事实不准确或关键性的模糊之处。因此，我们将着手开发解决方案。\n\n核心目标是确定阈值环境方差 $\\sigma^{2\\star}$，在该方差下，母体供给策略（$M$）在选择上变得比体外供给策略（$E$）更有优势。选择偏好具有更高长期几何平均适应度的策略，这等同于最大化每代存活后代数量的期望对数值 $\\mathbb{E}[\\ln W_S]$。选择微分 $\\Delta(\\sigma)$ 量化了策略 $M$ 相对于策略 $E$ 的适应度优势，是环境标准差 $\\sigma$ 的函数。其定义为：\n$$\n\\Delta(\\sigma) = \\mathbb{E}\\left[\\ln W_M(R_t)\\right] - \\mathbb{E}\\left[\\ln W_E(R_t)\\right]\n$$\n期望是关于环境资源变量 $R_t = \\exp(X_t)$ 的分布计算的，其中 $X_t$ 服从正态分布 $\\mathcal{N}(\\mu, \\sigma^2)$。单个世代的适应度函数 $W_E(R_t)$ 和 $W_M(R_t)$ 由下式给出：\n$$\nW_E(R_t) = n_0 \\left[ \\varepsilon + (1 - \\varepsilon)\\left(1 - e^{-\\alpha R_t}\\right) \\right]\n$$\n$$\nW_M(R_t) = n_0(1 - c) \\left[ \\varepsilon + (1 - \\varepsilon)\\left(1 - e^{-\\alpha \\left((1 - b) R_t + b r_b\\right)}\\right) \\right]\n$$\n其中参数 $n_0, c, \\alpha, \\varepsilon, b, r_b$ 均在问题陈述中定义。\n\n由于对数正态分布变量 $R_t$ 经过了非线性变换，解析计算期望 $\\mathbb{E}[\\ln W_S(R_t)]$ 是不可行的。因此，需要采用数值方法。问题要求使用高斯-埃尔米特求积法来近似函数 $g(X)$ 的期望，其中 $X \\sim \\mathcal{N}(\\mu, \\sigma^2)$：\n$$\n\\mathbb{E}[g(X)] = \\int_{-\\infty}^{\\infty} g(x) \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} dx \\approx \\frac{1}{\\sqrt{\\pi}} \\sum_{i=1}^{n} w_i\\, g\\!\\left(\\mu + \\sqrt{2}\\sigma z_i\\right)\n$$\n这里，$\\{z_i, w_i\\}_{i=1}^n$ 是物理学家 $n$ 阶埃尔米特多项式的节点和权重。需要积分的函数是 $g_E(x) = \\ln(W_E(e^x))$ 和 $g_M(x) = \\ln(W_M(e^x))$。我们将使用一个足够大的阶数，如 $n=64$，以确保数值精度。\n\n阈值方差 $\\sigma^{2\\star}$ 通过定位 $\\Delta(\\sigma)$ 的根来找到。寻找根 $\\sigma^\\star \\ge 0$ 的过程遵循一个严格的程序：\n1.  首先，在 $\\sigma=0$ 处评估 $\\Delta(\\sigma)$。这对应于一个具有恒定资源 $R_t = e^\\mu$ 的确定性环境。如果 $\\Delta(0) \\ge 0$，则即使没有环境波动，策略 $M$ 也更优，因此阈值方差 $\\sigma^{2\\star}$ 为 $0$。\n2.  如果 $\\Delta(0) < 0$，我们接着在指定的上界 $\\sigma_{\\max}$ 处评估 $\\Delta(\\sigma)$。如果 $\\Delta(\\sigma_{\\max}) \\le 0$，这意味着在所考虑的整个环境方差范围 $[0, \\sigma_{\\max}^2]$ 内，体外供给策略始终更有利。在这种情况下，没有找到阈值，结果为哨兵值 $-1$。\n3.  如果 $\\Delta(0) < 0$ 且 $\\Delta(\\sigma_{\\max}) > 0$，假设 $\\Delta(\\sigma)$ 是连续的，则该函数必定在某个 $\\sigma^\\star \\in (0, \\sigma_{\\max})$ 处穿过零点。我们采用二分法来寻找这个根。初始搜索区间为 $[\\sigma_{low}, \\sigma_{high}] = [0, \\sigma_{\\max}]$。我们迭代计算中点 $\\sigma_{mid} = (\\sigma_{low} + \\sigma_{high}) / 2$ 并评估 $\\Delta(\\sigma_{mid})$。如果 $\\Delta(\\sigma_{mid}) < 0$，则根必在 $[\\sigma_{mid}, \\sigma_{high}]$ 内，因此我们设置 $\\sigma_{low} = \\sigma_{mid}$。否则，根在 $[\\sigma_{low}, \\sigma_{mid}]$ 内，我们设置 $\\sigma_{high} = \\sigma_{mid}$。重复此过程，直到区间宽度 $(\\sigma_{high} - \\sigma_{low})$ 小于指定的绝对容差 $10^{-6}$。\n4.  通过此过程找到的根是 $\\sigma^\\star$。最终结果是阈值方差 $\\sigma^{2\\star} = (\\sigma^\\star)^2$。\n\n该过程通过一个 Python 程序实现。它定义了用于计算适应度表达式的函数、一个使用高斯-埃尔米特求积法计算 $\\Delta(\\sigma)$ 的函数，以及一个主函数，该主函数应用二分法逻辑为每个指定的测试案例找到阈值方差。`scipy.special.roots_hermite` 函数提供了求积所需的节点和权重。", "answer": "```python\nimport numpy as np\nfrom scipy.special import roots_hermite\n\ndef solve():\n    \"\"\"\n    Computes the threshold environmental variance for maternal provisioning.\n    \"\"\"\n\n    # Test suite: tuples of (n0, c, alpha, epsilon, b, rb, mu, sigma_max)\n    test_cases = [\n        # Case A\n        (200.0, 0.4, 0.8, 0.001, 0.6, 1.2, 0.0, 2.0),\n        # Case B\n        (200.0, 0.6, 0.8, 0.001, 0.2, 1.1, 0.0, 2.5),\n        # Case C\n        (200.0, 0.2, 0.8, 0.001, 0.9, 2.0, 0.0, 2.0),\n        # Case D\n        (200.0, 0.5, 0.8, 0.001, 0.8, 1.0, 0.0, 3.0),\n    ]\n    \n    # Quadrature order\n    QUAD_ORDER = 64\n    nodes, weights = roots_hermite(QUAD_ORDER)\n\n    def calculate_delta(sigma, params):\n        \"\"\"\n        Calculates the selection differential Delta(sigma) using Gauss-Hermite quadrature.\n        \"\"\"\n        n0, c, alpha, epsilon, b, rb, mu, _ = params\n        \n        # Transformation for quadrature: x = mu + sqrt(2)*sigma*z\n        x_nodes = mu + np.sqrt(2.0) * sigma * nodes\n        # Environmental resources at quadrature nodes: R = exp(x)\n        r_nodes = np.exp(x_nodes)\n        \n        # Fitness for Exosporic strategy (E)\n        survival_e = epsilon + (1.0 - epsilon) * (1.0 - np.exp(-alpha * r_nodes))\n        w_e = n0 * survival_e\n        \n        # Fitness for Maternal provisioning strategy (M)\n        effective_resources_m = (1.0 - b) * r_nodes + b * rb\n        survival_m = epsilon + (1.0 - epsilon) * (1.0 - np.exp(-alpha * effective_resources_m))\n        w_m = n0 * (1.0 - c) * survival_m\n        \n        # Calculate expected log-fitness using quadrature formula\n        # E[g(X)] approx= (1/sqrt(pi)) * sum(w_i * g(x_i))\n        # Note: log is taken after computing W, as W is always > 0 due to epsilon.\n        e_ln_we = np.sum(weights * np.log(w_e)) / np.sqrt(np.pi)\n        e_ln_wm = np.sum(weights * np.log(w_m)) / np.sqrt(np.pi)\n        \n        return e_ln_wm - e_ln_we\n\n    def find_threshold_variance(params):\n        \"\"\"\n        Finds the threshold variance sigma^2* for a given parameter set.\n        \"\"\"\n        _, _, _, _, _, _, _, sigma_max = params\n        tol = 1e-6\n        \n        # Step 1: Check delta at sigma = 0\n        delta_at_zero = calculate_delta(0.0, params)\n        if delta_at_zero >= 0:\n            return 0.0\n            \n        # Step 2: Check delta at sigma_max\n        delta_at_max = calculate_delta(sigma_max, params)\n        if delta_at_max <= 0:\n            return -1.0\n            \n        # Step 3: Bisection method to find root sigma*\n        sigma_low = 0.0\n        sigma_high = sigma_max\n        \n        while (sigma_high - sigma_low) > tol:\n            sigma_mid = (sigma_low + sigma_high) / 2.0\n            delta_mid = calculate_delta(sigma_mid, params)\n            \n            if delta_mid < 0:\n                sigma_low = sigma_mid\n            else:\n                sigma_high = sigma_mid\n                \n        sigma_star = (sigma_low + sigma_high) / 2.0\n        \n        # Step 4: Return the threshold variance\n        return sigma_star**2\n\n    results = []\n    for case in test_cases:\n        result = find_threshold_variance(case)\n        results.append(result)\n\n    # Format output as specified: comma-separated list in brackets, 4 decimal places.\n    formatted_results = [f\"{r:.4f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2581295"}]}