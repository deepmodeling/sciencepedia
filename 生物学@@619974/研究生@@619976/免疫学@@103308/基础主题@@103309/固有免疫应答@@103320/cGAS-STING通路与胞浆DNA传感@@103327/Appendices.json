{"hands_on_practices": [{"introduction": "信号传导始于分子识别。STING受体必须能够区分不同的分子模式，例如其内源性配体 $2'3'$-cGAMP 和细菌来源的环状二核苷酸。本练习旨在深入探讨竞争性结合的基本原理 [@problem_id:2839445]，让您能够基于配体亲和力（以解离常数 $K_d$ 表示）来量化信号偏好。通过计算STING被不同配体占据的相对比例，您将能洞察先天免疫系统如何确定反应的优先级。", "problem": "干扰素基因刺激蛋白 (STING) 的单个结合口袋一次只能被一个环二核苷酸占据。两种配体——由环磷酸鸟苷-腺苷合酶 (cGAS) 产生的 2'-3' 环磷酸鸟苷-腺苷 (cGAMP) 和细菌来源的 3'-3' 环二鸟苷酸 (CDG)——在胞质溶胶中竞争该结合口袋。假设在一个充分混合的区室中处于平衡状态，游离配体浓度恒定，且结合遵循质量作用定律，每个STING只有一个非协同位点。解离常数由可逆结合的基本关系定义，即对于每种配体 $i$，\n\n$$\nK_{d,i} \\equiv \\frac{[R][L_i]}{[RL_i]},\n$$\n\n其中 $[R]$ 是未结合的STING的浓度，$[L_i]$ 是配体 $i$ 的游离浓度，$[RL_i]$ 是相应的STING-配体复合物的浓度。STING的总浓度为 $[R_T] = [R] + \\sum_i [RL_i]$。两种配体的游离浓度相等，均为 $10 \\ \\mathrm{nM}$。2'-3' 环磷酸鸟苷-腺苷的解离常数为 $K_{d,\\mathrm{cGAMP}} = 5 \\ \\mathrm{nM}$，3'-3' 环二鸟苷酸的解离常数为 $K_{d,\\mathrm{CDG}} = 100 \\ \\mathrm{nM}$。\n\n仅使用这些定义和质量守恒定律，推导出在竞争条件下计算每种配体对STING的平衡分数占据率所需的表达式，然后计算平衡时的占据率之比 $f_{\\mathrm{cGAMP}}/f_{\\mathrm{CDG}}$。在每个被占据的STING无论与何种配体结合都对下游信号传导有相同贡献（内在效能相等）的假设下，将此比率解释为有利于 2'-3' 环磷酸鸟苷-腺苷而非 3'-3' 环二鸟苷酸的信号偏好因子。将此比率报告为单个无量纲数。无需四舍五入，最终答案中不应包含任何单位。", "solution": "所提出的问题是化学平衡中竞争性结合原理的一个直接应用。该问题具有科学依据，表述清晰，并包含了解决该问题所需的所有信息。因此，我将进行正式的推导。\n\n设 $R$ 表示STING蛋白，$L_1$ 表示配体 2'-3' 环磷酸鸟苷-腺苷 (cGAMP)，$L_2$ 表示配体 3'-3' 环二鸟苷酸 (CDG)。结合反应是可逆的，描述如下：\n$$\nR + L_1 \\rightleftharpoons RL_1\n$$\n$$\nR + L_2 \\rightleftharpoons RL_2\n$$\n\n问题给出了每种配体 $i$ 的解离常数 $K_{d,i}$ 的定义。对于 cGAMP ($i=1$) 和 CDG ($i=2$)，这些定义是：\n$$\nK_{d,1} = K_{d,\\mathrm{cGAMP}} = \\frac{[R][L_1]}{[RL_1]}\n$$\n$$\nK_{d,2} = K_{d,\\mathrm{CDG}} = \\frac{[R][L_2]}{[RL_2]}\n$$\n其中 $[R]$ 是游离、未结合的STING蛋白的浓度，$[L_i]$ 是游离配体 $i$ 的浓度，而 $[RL_i]$ 是STING-配体复合物的浓度。\n\n根据这些定义，我们可以用游离受体浓度 $[R]$ 和游离配体浓度 $[L_1]$ 和 $[L_2]$ 来表示每种复合物的浓度：\n$$\n[RL_1] = \\frac{[R][L_1]}{K_{d,1}}\n$$\n$$\n[RL_2] = \\frac{[R][L_2]}{K_{d,2}}\n$$\n\n配体 $i$ 对STING的分数占据率 $f_i$ 定义为与该配体结合的STING占STING总量的比例：\n$$\nf_i = \\frac{[RL_i]}{[R_T]}\n$$\n其中 $[R_T]$ 是STING蛋白的总浓度。受体的质量守恒定律规定：\n$$\n[R_T] = [R] + [RL_1] + [RL_2]\n$$\n\n问题要求我们计算分数占据率之比 $f_1/f_2$。让我们用定义来表示这个比率：\n$$\n\\frac{f_1}{f_2} = \\frac{f_{\\mathrm{cGAMP}}}{f_{\\mathrm{CDG}}} = \\frac{[RL_1]/[R_T]}{[RL_2]/[R_T]}\n$$\nSTING的总浓度 $[R_T]$ 从表达式中消去，将比率简化为：\n$$\n\\frac{f_1}{f_2} = \\frac{[RL_1]}{[RL_2]}\n$$\n这表明占据率之比与受体总浓度无关，这是一个关键的简化。\n\n现在，我们代入从解离常数推导出的 $[RL_1]$ 和 $[RL_2]$ 的表达式：\n$$\n\\frac{f_1}{f_2} = \\frac{\\frac{[R][L_1]}{K_{d,1}}}{\\frac{[R][L_2]}{K_{d,2}}}\n$$\n游离受体的浓度 $[R]$ 也被消去，因为它是两个结合平衡的公因子。这就得出了在竞争条件下占据率之比的最终通用表达式：\n$$\n\\frac{f_1}{f_2} = \\frac{[L_1]}{[L_2]} \\times \\frac{K_{d,2}}{K_{d,1}}\n$$\n这个结果是药理学中Cheng-Prusoff方程的一个特例，它表明相对占据率由配体游离浓度的比率和其解离常数的反比（或者等效地，其结合常数的正比）决定。较低的 $K_d$ 值意味着较高的亲和力。\n\n问题提供了以下数值：\n-   cGAMP游离浓度：$[L_1] = [L_{\\mathrm{cGAMP}}] = 10 \\ \\mathrm{nM}$\n-   CDG游离浓度：$[L_2] = [L_{\\mathrm{CDG}}] = 10 \\ \\mathrm{nM}$\n-   cGAMP的解离常数：$K_{d,1} = K_{d,\\mathrm{cGAMP}} = 5 \\ \\mathrm{nM}$\n-   CDG的解离常数：$K_{d,2} = K_{d,\\mathrm{CDG}} = 100 \\ \\mathrm{nM}$\n\n将这些数值代入我们推导出的表达式：\n$$\n\\frac{f_{\\mathrm{cGAMP}}}{f_{\\mathrm{CDG}}} = \\frac{10 \\ \\mathrm{nM}}{10 \\ \\mathrm{nM}} \\times \\frac{100 \\ \\mathrm{nM}}{5 \\ \\mathrm{nM}}\n$$\n浓度和单位按要求消去，得到一个无量纲的比率：\n$$\n\\frac{f_{\\mathrm{cGAMP}}}{f_{\\mathrm{CDG}}} = 1 \\times \\frac{100}{5} = 20\n$$\n占据率之比为 $20$。在信号输出与占据率成正比，且与配体种类无关的解释性假设下，这个比率 $20$ 代表了信号偏好。这意味着，在游离浓度相等的情况下，cGAMP占据STING的效率是CDG的 $20$ 倍，这主要是由于其结合亲和力高出 $20$ 倍（即 $K_{d,\\mathrm{CDG}}/K_{d,\\mathrm{cGAMP}} = 100/5 = 20$）。", "answer": "$$\n\\boxed{20}\n$$", "id": "2839445"}, {"introduction": "配体结合后，信号通过酶促反应得以放大。STING蛋白作为一个支架，变构增强其招募的激酶TBK1的催化效率。本练习 [@problem_id:2839452] 将运用米氏方程动力学模型来量化这种调节效应，要求您计算底物IRF3磷酸化所需的时间。通过这个计算，您将对下游信号传播的动态过程和反应速率有一个更具体的认识。", "problem": "在一个模拟胞质DNA感应的体外重构系统中，当由干扰素基因刺激因子（STING）的C端尾部提供支架时，Tank-结合激酶1（TBK1）会磷酸化干扰素调节因子3（IRF3）。实验证据表明，STING尾肽通过变构调节TBK1，从而提高其催化转换数并增强底物亲和力。考虑在以下条件下，TBK1对IRF3的单一位点磷酸化过程：\n\n- 在没有STING尾肽的情况下，TBK1对IRF3的催化转换数和米氏常数分别为 $k_{\\mathrm{cat}}^{0} = 1.2\\,\\mathrm{s}^{-1}$ 和 $K_{M}^{0} = 15\\,\\mu\\mathrm{M}$。\n- 饱和的STING尾肽均匀地修饰该酶，使得$k_{\\mathrm{cat}}$乘以因子 $\\beta = 2.5$，$K_{M}$乘以因子 $\\alpha = 0.4$。\n- 总TBK1浓度为 $[E]_{T} = 25\\,\\mathrm{nM}$，初始IRF3浓度为 $[S]_{0} = 8\\,\\mu\\mathrm{M}$。\n- 三磷酸腺苷（ATP）是饱和的，产物无抑制作用，酶保持活性，且酶-底物复合物相对于底物消耗的时间尺度能迅速达到准稳态。\n\n从基本酶促反应机理 $E + S \\rightleftharpoons ES \\rightarrow E + P$ 出发，并应用针对 $[ES]$ 的准稳态假设以及总酶量守恒，推导未磷酸化的IRF3浓度 $[S](t)$ 降低至 $0.4\\,[S]_{0}$ 所需的时间 $t$ 的表达式，并进行数值计算。将最终结果四舍五入至三位有效数字。以秒为单位表示您的答案。", "solution": "所陈述的问题具有科学依据、问题明确，并包含了得到唯一解所需的所有信息。它描述了酶动力学中的一个标准情景，该情景由Michaelis-Menten模型控制，其适用性由所给的假设证明是合理的。对于一个*体外*生化系统，这些参数是符合物理现实的。因此，我们将进行严谨的推导和计算。\n\n单底物酶催化反应的基本机理如下：\n$$ E + S \\underset{k_{-1}}{\\stackrel{k_1}{\\rightleftharpoons}} ES \\stackrel{k_{\\mathrm{cat}}}{\\longrightarrow} E + P $$\n其中 $E$ 是酶（TBK1），$S$ 是底物（IRF3），$ES$ 是酶-底物复合物，$P$ 是产物（磷酸化的IRF3）。底物消耗的速率由产物生成速率给出，$v = k_{\\mathrm{cat}}[ES]$。\n\n问题指明，酶-底物复合物 $[ES]$ 会迅速达到准稳态。准稳态假设（QSSA）指出，中间复合物 $[ES]$ 的浓度近似恒定，意味着其变化率为零：\n$$ \\frac{d[ES]}{dt} = k_{1}[E][S] - (k_{-1} + k_{\\mathrm{cat}})[ES] \\approx 0 $$\n总酶浓度 $[E]_{T}$ 是守恒的：$[E]_{T} = [E] + [ES]$，因此 $[E] = [E]_{T} - [ES]$。将此代入QSSA方程得到：\n$$ k_{1}([E]_{T} - [ES])[S] = (k_{-1} + k_{\\mathrm{cat}})[ES] $$\n求解 $[ES]$ 得：\n$$ [ES] = \\frac{[E]_{T}[S]}{\\frac{k_{-1} + k_{\\mathrm{cat}}}{k_{1}} + [S]} = \\frac{[E]_{T}[S]}{K_{M} + [S]} $$\n其中米氏常数 $K_{M}$ 定义为 $K_{M} = \\frac{k_{-1} + k_{\\mathrm{cat}}}{k_{1}}$。\n\n反应速度 $v$，即底物浓度的下降速率，则为：\n$$ v = -\\frac{d[S]}{dt} = k_{\\mathrm{cat}}[ES] = \\frac{k_{\\mathrm{cat}}[E]_{T}[S]}{K_{M} + [S]} = \\frac{V_{\\mathrm{max}}[S]}{K_{M} + [S]} $$\n其中 $V_{\\mathrm{max}} = k_{\\mathrm{cat}}[E]_{T}$ 是最大反应速度。\n\n问题陈述了存在饱和的STING尾肽。因此，我们必须使用受调节后的动力学参数。基础参数为 $k_{\\mathrm{cat}}^{0} = 1.2\\,\\mathrm{s}^{-1}$ 和 $K_{M}^{0} = 15\\,\\mu\\mathrm{M}$。调节因子为 $\\beta = 2.5$ 和 $\\alpha = 0.4$。调节后的参数为：\n$$ k_{\\mathrm{cat}}' = \\beta \\cdot k_{\\mathrm{cat}}^{0} = 2.5 \\times 1.2\\,\\mathrm{s}^{-1} = 3.0\\,\\mathrm{s}^{-1} $$\n$$ K_{M}' = \\alpha \\cdot K_{M}^{0} = 0.4 \\times 15\\,\\mu\\mathrm{M} = 6.0\\,\\mu\\mathrm{M} $$\n\n总酶浓度为 $[E]_{T} = 25\\,\\mathrm{nM}$。有必要使用一致的单位。我们将纳摩尔浓度转换为微摩尔浓度：$[E]_{T} = 0.025\\,\\mu\\mathrm{M}$。\n现在，我们计算调节后的最大速度 $V_{\\mathrm{max}}'$：\n$$ V_{\\mathrm{max}}' = k_{\\mathrm{cat}}' [E]_{T} = (3.0\\,\\mathrm{s}^{-1}) \\times (0.025\\,\\mu\\mathrm{M}) = 0.075\\,\\mu\\mathrm{M}\\cdot\\mathrm{s}^{-1} $$\n\n底物消耗的微分速率方程为：\n$$ -\\frac{d[S]}{dt} = \\frac{V_{\\mathrm{max}}'[S]}{K_{M}' + [S]} $$\n这是一个可分离变量的微分方程。我们重排以进行积分：\n$$ \\left(\\frac{K_{M}' + [S]}{[S]}\\right) d[S] = -V_{\\mathrm{max}}' dt $$\n$$ \\left(\\frac{K_{M}'}{[S]} + 1\\right) d[S] = -V_{\\mathrm{max}}' dt $$\n我们对时间从 $t=0$ 积分到最终时间 $t$，在此期间底物浓度从其初始值 $[S]_{0}$ 变为 $[S](t)$。\n$$ \\int_{[S]_{0}}^{[S](t)} \\left(\\frac{K_{M}'}{[S]} + 1\\right) d[S] = \\int_{0}^{t} -V_{\\mathrm{max}}' dt' $$\n$$ \\left[ K_{M}' \\ln|[S]| + [S] \\right]_{[S]_{0}}^{[S](t)} = -V_{\\mathrm{max}}' \\left[ t' \\right]_{0}^{t} $$\n$$ (K_{M}' \\ln([S](t)) + [S](t)) - (K_{M}' \\ln([S]_{0}) + [S]_{0}) = -V_{\\mathrm{max}}' t $$\n$$ K_{M}' \\ln\\left(\\frac{[S](t)}{[S]_{0}}\\right) + ([S](t) - [S]_{0}) = -V_{\\mathrm{max}}' t $$\n求解时间 $t$ 得到Michaelis-Menten方程的积分形式：\n$$ t = \\frac{1}{V_{\\mathrm{max}}'} \\left( ([S]_{0} - [S](t)) + K_{M}' \\ln\\left(\\frac{[S]_{0}}{[S](t)}\\right) \\right) $$\n\n问题要求计算底物浓度降低到其初始值0.4倍所需的时间，即 $[S](t) = 0.4\\,[S]_{0}$。给定的初始底物浓度为 $[S]_{0} = 8\\,\\mu\\mathrm{M}$。\n最终底物浓度为 $[S](t) = 0.4 \\times 8\\,\\mu\\mathrm{M} = 3.2\\,\\mu\\mathrm{M}$。\n\n现在我们将数值代入 $t$ 的表达式中：\n- $[S]_{0} = 8\\,\\mu\\mathrm{M}$\n- $[S](t) = 3.2\\,\\mu\\mathrm{M}$\n- $K_{M}' = 6.0\\,\\mu\\mathrm{M}$\n- $V_{\\mathrm{max}}' = 0.075\\,\\mu\\mathrm{M}\\cdot\\mathrm{s}^{-1}$\n\n$$ t = \\frac{1}{0.075\\,\\mu\\mathrm{M}\\cdot\\mathrm{s}^{-1}} \\left( (8\\,\\mu\\mathrm{M} - 3.2\\,\\mu\\mathrm{M}) + (6.0\\,\\mu\\mathrm{M}) \\ln\\left(\\frac{8\\,\\mu\\mathrm{M}}{3.2\\,\\mu\\mathrm{M}}\\right) \\right) $$\n括号内的单位 $\\mu\\mathrm{M}$ 相互抵消，最终单位为秒。\n$$ t = \\frac{1}{0.075} \\left( 4.8 + 6.0 \\ln\\left(2.5\\right) \\right) \\,\\mathrm{s} $$\n使用 $\\ln(2.5) \\approx 0.9162907$：\n$$ t \\approx \\frac{1}{0.075} \\left( 4.8 + 6.0 \\times 0.9162907 \\right) \\,\\mathrm{s} $$\n$$ t \\approx \\frac{1}{0.075} \\left( 4.8 + 5.4977442 \\right) \\,\\mathrm{s} $$\n$$ t \\approx \\frac{10.2977442}{0.075} \\,\\mathrm{s} $$\n$$ t \\approx 137.303256 \\,\\mathrm{s} $$\n按要求四舍五入至三位有效数字，时间为 $137\\,\\mathrm{s}$。", "answer": "$$ \\boxed{137} $$", "id": "2839452"}, {"introduction": "生物通路很少以简单的线性方式运作，它们通常嵌入在复杂的调控网络中。这个高级实践将探讨负反馈在调节cGAS-STING通路动态响应中的关键作用。您需要将生物学机制转化为一个常微分方程（ODE）系统，并构建一个计算模型来模拟通路在一次激活后如何对后续的刺激产生耐受 [@problem_id:2839431]。这项练习将帮助您跨越从分子组分到涌现的系统级行为之间的鸿沟。", "problem": "构建一个通过环鸟苷酸-腺苷酸合酶 (cGAS)-干扰素基因刺激因子 (STING) 轴进行胞质DNA传感的最小化、机制上忠实的动力学模型，该模型包含由干扰素 (IFN) 诱导的泛素特异性蛋白酶13 (USP13) 介导的负反馈。从以下基本依据出发：\n\n- 胞质DNA与模式识别受体结合，激活环鸟苷酸-腺苷酸合酶 (cGAS) 产生环鸟苷酸-腺苷酸 (cGAMP)。cGAMP 结合干扰素基因刺激因子 (STING) 并促使其进入信号激活状态。\n- 活化的STING招募TANK结合激酶1 (TBK1)，导致干扰素调节因子3 (IRF3) 活化和I型干扰素的产生（在此统称为干扰素输出代理）。\n- 干扰素诱导USP13的表达，而USP13对STING进行去泛素化，从而减弱信号传导。\n\n根据质量作用和线性降解假设，在以下约束条件下，将上述内容转化为常微分方程组：\n\n- 令 $A(t)$ 表示时间 $t$ 时活化STING的浓度，$F(t)$ 表示干扰素代理的浓度，$U(t)$ 表示USP13的水平。\n- 设总STING守恒，为 $S_{\\mathrm{tot}} = S(t) + A(t)$，其中 $S(t)$ 是未活化的STING。\n- 设cGAMP输入 $c(t)$ 是一个外部指定的脉冲序列（定义如下）。STING的活化对未活化的STING和 $c(t)$ 均呈一级反应，速率常数为 $k_{\\mathrm{on}}$。失活对 $A$ 呈一级反应，其速率包括一个基线速率 $k_{\\mathrm{off}}$ 和一个额外的、由去泛素化驱动的失活速率，该速率与 $U$ 成正比，系数为 $k_{\\mathrm{du}}$。\n- 干扰素代理的产生对 $A$ 呈一级反应，系数为 $k_{\\mathrm{IFN}}$，并以速率 $k_{F}$ 进行一级降解。\n- USP13的产生速率为一个恒定的基础项 $u_{0}$ 与一个IFN诱导项之和，该诱导项与 $F$ 成正比，速率为 $k_{U}$。USP13以速率 $k_{dU}$ 进行一级降解。\n\n在本练习中，所有量均为无量纲和无单位的。不使用角度。不使用百分比；所有比率必须以小数形式报告。\n\n您必须实现一个程序，对于下面的每一组参数，计算先前的IFN预处理对第二次cGAMP脉冲期间最大信号的影响。请使用以下方案：\n\n- 考虑两次cGAMP脉冲。对于预处理条件，在区间 $[0, T_{1}]$ 上施加一个幅值为 $g_{1}$ 的第一次脉冲，然后是一个持续时间为 $\\Delta T$ 的无输入间隙，接着在区间 $[T_{1} + \\Delta T, T_{1} + \\Delta T + T_{2}]$ 上施加一个幅值为 $g_{2}$ 的第二次脉冲。在这些区间之外，$c(t) = 0$。\n- 对于原始条件，没有第一次脉冲。仅在 $[0, T_{2}]$ 上施加一个幅值为 $g_{2}$ 的单次脉冲，其他情况下 $c(t) = 0$。\n- 对于预处理和原始模拟，在它们各自的起始时间，初始条件为 $A(0) = 0$，$F(0) = 0$ 和 $U(0) = u_{0}/k_{dU}$，这是在没有干扰素的情况下的基础稳态。\n- 将瞬时信号输出定义为 $Y(t) = k_{\\mathrm{IFN}} A(t)$。\n- 对于预处理模拟，在时间窗口 $t \\in [T_{1} + \\Delta T, T_{1} + \\Delta T + T_{2}]$ 内提取 $Y(t)$ 的最大值作为 $Y_{\\max}^{\\mathrm{primed}}$。\n- 对于原始模拟，在时间窗口 $t \\in [0, T_{2}]$ 内提取 $Y(t)$ 的最大值作为 $Y_{\\max}^{\\mathrm{naive}}$。\n- 计算比率 $R = Y_{\\max}^{\\mathrm{primed}} / Y_{\\max}^{\\mathrm{naive}}$。如果 $Y_{\\max}^{\\mathrm{naive}} = 0$，则当 $Y_{\\max}^{\\mathrm{primed}} = 0$ 时定义 $R=1$，否则定义 $R=0$。\n\n您的程序必须实现上述模型和方案，并评估以下测试套件。有序参数元组为\n$p = \\big(k_{\\mathrm{on}}, k_{\\mathrm{off}}, k_{\\mathrm{du}}, k_{\\mathrm{IFN}}, k_{F}, u_{0}, k_{U}, k_{dU}, S_{\\mathrm{tot}}, g_{1}, T_{1}, \\Delta T, g_{2}, T_{2}\\big)$。\n使用这5个测试用例：\n\n- $p_{1} = \\big(0.2, 0.05, 0.2, 1.5, 0.1, 0.002, 0.05, 0.02, 1.0, 1.0, 60.0, 120.0, 1.0, 60.0\\big)$。\n- $p_{2} = \\big(0.2, 0.05, 0.0, 1.5, 0.1, 0.002, 0.05, 0.02, 1.0, 1.0, 60.0, 120.0, 1.0, 60.0\\big)$。\n- $p_{3} = \\big(0.2, 0.05, 0.2, 1.5, 0.1, 0.002, 0.0, 0.02, 1.0, 1.0, 60.0, 120.0, 1.0, 60.0\\big)$。\n- $p_{4} = \\big(0.2, 0.05, 0.5, 1.5, 0.1, 0.002, 0.1, 0.02, 1.0, 1.0, 120.0, 10.0, 1.0, 60.0\\big)$。\n- $p_{5} = \\big(0.2, 0.05, 0.2, 1.5, 0.1, 0.002, 0.05, 0.02, 1.0, 1.0, 60.0, 600.0, 1.0, 60.0\\big)$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，结果的顺序与测试用例的顺序相同。每个条目必须是 $R$ 的小数值，四舍五入到小数点后三位（例如，$[0.842,0.999,1.000,0.211,0.956]$）。", "solution": "该问题要求构建并分析一个cGAS-STING信号通路的最小常微分方程 (ODE) 模型，该模型包含由泛素特异性蛋白酶USP13介导的负反馈回路。其目标是通过比较一个原始系统（naive system）与一个经过初始刺激预处理的系统（primed system）对环鸟苷酸-腺苷酸 (cGAMP) 刺激的信号响应，来量化这种反馈的影响。\n\n首先，我们将所述的生物学机制形式化为一个数学模型。给定三个状态变量：活化STING的浓度，表示为 $A(t)$；干扰素代理的浓度，$F(t)$；以及USP13的浓度，$U(t)$。\n\n活化STING $A(t)$ 的动力学由其活化和失活过程决定。活化由cGAMP输入信号 $c(t)$ 驱动，并取决于可用的未活化STING库 $S(t)$。根据总STING浓度守恒定律 $S_{\\mathrm{tot}} = S(t) + A(t)$（其中 $S_{\\mathrm{tot}}$ 为总STING浓度），未活化库为 $S(t) = S_{\\mathrm{tot}} - A(t)$。因此，根据质量作用动力学，活化速率为 $k_{\\mathrm{on}} c(t) (S_{\\mathrm{tot}} - A(t))$。失活通过两种途径发生：一种是速率常数为 $k_{\\mathrm{off}}$ 的基础一级过程，另一种是反馈驱动的去泛素化过程。后者的速率与活化的STING $A(t)$ 和蛋白酶浓度 $U(t)$ 均成正比，速率系数为 $k_{\\mathrm{du}}$。综合这些项，总失活速率为 $(k_{\\mathrm{off}} + k_{\\mathrm{du}} U(t))A(t)$。由此得到 $A(t)$ 的ODE为：\n$$ \\frac{dA}{dt} = k_{\\mathrm{on}} c(t) (S_{\\mathrm{tot}} - A) - (k_{\\mathrm{off}} + k_{\\mathrm{du}} U) A $$\n\n接下来，我们对干扰素代理 $F(t)$ 进行建模。规定其产生对活化的STING $A(t)$ 呈一级反应，速率常数为 $k_{\\mathrm{IFN}}$。它以速率常数 $k_{F}$ 进行一级衰变。这可转化为以下线性ODE：\n$$ \\frac{dF}{dt} = k_{\\mathrm{IFN}} A - k_{F} F $$\n\n最后，我们描述由 $U(t)$ 代表的反馈调节因子USP13的动力学。其产生速率是一个恒定的基础速率 $u_{0}$ 和一个干扰素诱导项之和，该诱导项与 $F(t)$ 成正比，速率常数为 $k_{U}$。其降解是一个速率常数为 $k_{dU}$ 的一级过程。因此，$U(t)$ 的ODE为：\n$$ \\frac{dU}{dt} = u_{0} + k_{U} F - k_{dU} U $$\n\n这样，这个由三个耦合ODE组成的系统就完全定义了。初始条件被指定为系统在没有任何cGAMP刺激下的基础稳态：$A(0) = 0$，$F(0) = 0$ 和 $U(0) = u_{0} / k_{dU}$。最后一个条件表示当 $F=0$ 时第三个ODE的稳态。\n\n问题的核心是进行一个数值实验来比较两种情景。在“原始”(naive) 情景中，系统受到单次cGAMP脉冲，即在 $t \\in [0, T_{2}]$ 时 $c(t) = g_{2}$。在“预处理”(primed) 情景中，系统首先接受一个初步脉冲，即在 $t \\in [0, T_{1}]$ 时 $c(t) = g_{1}$，然后是一个持续时间为 $\\Delta T$ 的恢复期（其中 $c(t)=0$），之后是相同的第二次脉冲，即在 $t \\in [T_{1} + \\Delta T, T_{1} + \\Delta T + T_{2}]$ 时 $c(t) = g_{2}$。\n\n信号输出定义为 $Y(t) = k_{\\mathrm{IFN}} A(t)$。我们的任务是计算比率 $R = Y_{\\max}^{\\mathrm{primed}} / Y_{\\max}^{\\mathrm{naive}}$。这里，$Y_{\\max}^{\\mathrm{naive}}$ 是在原始模拟中脉冲期间 $Y(t)$ 的最大值，即对于 $t \\in [0, T_{2}]$。类似地，$Y_{\\max}^{\\mathrm{primed}}$ 是在预处理模拟中*第二次*脉冲期间 $Y(t)$ 的最大值，即对于 $t \\in [T_{1} + \\Delta T, T_{1} + \\Delta T + T_{2}]$。该比率 $R$ 量化了由于先前刺激而导致的信号响应的减弱程度。\n\n为解决此问题，我们将实现一个程序，该程序在原始和预处理条件下为每个测试用例数值积分ODE系统。我们将使用SciPy库中的标准数值积分例程`scipy.integrate.solve_ivp`，它适用于此类初值问题。为了在指定的时间窗口内准确确定 $Y(t)$ 的最大值，将利用积分器的密集输出（dense output）功能。这允许在覆盖目标窗口的精细时间网格上评估解，确保不会错过峰值。对于每组参数，程序将执行两次模拟，找到各自的峰值输出，根据指定规则计算比率 $R$，并按要求格式化结果。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Constructs and solves a dynamical model of the cGAS-STING pathway to compute\n    the effect of IFN priming on subsequent signaling.\n    \"\"\"\n\n    # Parameter tuple order:\n    # p = (k_on, k_off, k_du, k_IFN, k_F, u0, k_U, k_dU, S_tot, g1, T1, delta_T, g2, T2)\n    test_cases = [\n        (0.2, 0.05, 0.2, 1.5, 0.1, 0.002, 0.05, 0.02, 1.0, 1.0, 60.0, 120.0, 1.0, 60.0),\n        (0.2, 0.05, 0.0, 1.5, 0.1, 0.002, 0.05, 0.02, 1.0, 1.0, 60.0, 120.0, 1.0, 60.0),\n        (0.2, 0.05, 0.2, 1.5, 0.1, 0.002, 0.0, 0.02, 1.0, 1.0, 60.0, 120.0, 1.0, 60.0),\n        (0.2, 0.05, 0.5, 1.5, 0.1, 0.002, 0.1, 0.02, 1.0, 1.0, 120.0, 10.0, 1.0, 60.0),\n        (0.2, 0.05, 0.2, 1.5, 0.1, 0.002, 0.05, 0.02, 1.0, 1.0, 60.0, 600.0, 1.0, 60.0),\n    ]\n\n    results = []\n\n    for params_tuple in test_cases:\n        k_on, k_off, k_du, k_IFN, k_F, u0, k_U, k_dU, S_tot, g1, T1, delta_T, g2, T2 = params_tuple\n\n        def odes(t, y, c_func, params):\n            \"\"\"Defines the system of ODEs for the cGAS-STING model.\"\"\"\n            k_on, k_off, k_du, k_IFN, k_F, u0, k_U, k_dU, S_tot = params\n            A, F, U = y\n            c_val = c_func(t)\n            dAdt = k_on * c_val * (S_tot - A) - (k_off + k_du * U) * A\n            dFdt = k_IFN * A - k_F * F\n            dUdt = u0 + k_U * F - k_dU * U\n            return [dAdt, dFdt, dUdt]\n\n        # Shared initial conditions and ODE parameters\n        y0 = [0.0, 0.0, u0 / k_dU if k_dU > 0 else 0.0]\n        ode_params = (k_on, k_off, k_du, k_IFN, k_F, u0, k_U, k_dU, S_tot)\n        integrator_kwargs = {'method': 'RK45', 'dense_output': True, 'rtol': 1e-6, 'atol': 1e-9}\n\n        # --- Naive Simulation ---\n        def c_func_naive(t):\n            return g2 if 0.0 <= t <= T2 else 0.0\n\n        t_span_naive = [0.0, T2]\n        Y_max_naive = 0.0\n        \n        if T2 > 0:\n            sol_naive = solve_ivp(\n                lambda t, y: odes(t, y, c_func_naive, ode_params),\n                t_span_naive,\n                y0,\n                **integrator_kwargs\n            )\n            t_eval_naive = np.linspace(t_span_naive[0], t_span_naive[1], 500)\n            y_eval_naive = sol_naive.sol(t_eval_naive)\n            A_sol_naive = y_eval_naive[0]\n            Y_naive = k_IFN * A_sol_naive\n            if Y_naive.size > 0:\n                Y_max_naive = np.max(Y_naive)\n\n        # --- Primed Simulation ---\n        def c_func_primed(t):\n            if 0.0 = t = T1:\n                return g1\n            elif T1 + delta_T = t = T1 + delta_T + T2:\n                return g2\n            else:\n                return 0.0\n\n        t_end_primed = T1 + delta_T + T2\n        t_span_primed = [0.0, t_end_primed]\n        Y_max_primed = 0.0\n\n        sol_primed = solve_ivp(\n            lambda t, y: odes(t, y, c_func_primed, ode_params),\n            t_span_primed,\n            y0,\n            **integrator_kwargs\n        )\n            \n        t_window_start = T1 + delta_T\n        t_window_end = t_end_primed\n\n        if t_window_start  t_window_end:\n            t_eval_primed = np.linspace(t_window_start, t_window_end, 500)\n            y_eval_primed = sol_primed.sol(t_eval_primed)\n            A_sol_primed = y_eval_primed[0]\n            Y_primed = k_IFN * A_sol_primed\n            if Y_primed.size > 0:\n                Y_max_primed = np.max(Y_primed)\n\n        # --- Calculate Ratio R as per problem specification ---\n        if Y_max_naive == 0.0:\n            R = 1.0 if Y_max_primed == 0.0 else 0.0\n        else:\n            R = Y_max_primed / Y_max_naive\n        \n        results.append(f\"{R:.3f}\")\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2839431"}]}