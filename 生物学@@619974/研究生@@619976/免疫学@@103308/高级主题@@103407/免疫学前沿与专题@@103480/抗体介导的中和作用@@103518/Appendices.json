{"hands_on_practices": [{"introduction": "抗体介导的中和作用，其核心在于阻止病毒与宿主细胞受体结合。本练习将这一过程简化为一个竞争性结合的物理模型，帮助你运用质量作用定律来理解中和效力背后的定量关系 [@problem_id:2832726]。通过从第一性原理出发，你将学会如何根据病毒-受体和病毒-抗体的亲和力（$K_D$值）以及受体密度，来计算实现特定中和效率（例如，阻断90%的病毒附着）所需的抗体浓度。", "problem": "一个球形靶细胞表面展示着宿主受体，病毒利用该受体进行附着。病毒也可以与一种中和性单克隆抗体结合，该抗体与受体结合所需的病毒表位相同，从而产生竞争。假设如下：\n- 每个细胞的受体拷贝数为 $N_{R} = 10^{5}$，均匀分布在细胞表面。\n- 细胞是一个半径为 $r = 10\\,\\mu\\mathrm{m}$ 的球体。\n- 受体被视为在紧邻细胞表面的厚度为 $\\delta = 10\\,\\mathrm{nm}$ 的薄捕获层内的有效三维竞争者，因此有效受体浓度使用壳层体积 $V_{\\mathrm{shell}} = 4\\pi r^{2}\\delta$ 计算。\n- 病毒粒子-受体结合的平衡解离常数 (KD) 为 $K_{R} = 10\\,\\mathrm{nM}$。\n- 病毒粒子-抗体结合的平衡解离常数 (KD) 为 $K_{A} = 100\\,\\mathrm{pM}$。\n- 每种配体与单个病毒表位的结合为 $1{:}1$，质量作用平衡成立，受体和抗体仅竞争同一病毒位点，且配体耗尽可忽略不计（游离浓度等于总浓度）。\n- 使用阿伏伽德罗常数 $N_{A} = 6.022\\times 10^{23}\\,\\mathrm{mol}^{-1}$ 和转换关系 $1\\,\\mathrm{m}^{3} = 10^{3}\\,\\mathrm{L}$。\n\n使用质量作用平衡和竞争性结合逻辑，计算将受体介导的附着概率相对于无抗体基线降低 $90\\%$ 所需的总抗体浓度。以微摩尔（micromolar）为单位表示最终答案，并四舍五入至三位有效数字。", "solution": "问题陈述经验证具有科学依据、提法明确且客观。它提出了一个来自定量免疫学的标准竞争性结合场景，并为获得唯一解提供了所有必要的参数和常数。我们将开始推导。\n\n令 $V$ 代表病毒，$R$ 代表宿主细胞受体，$A$ 代表中和抗体。该系统由两个同时发生的竞争性结合平衡控制，它们遵循质量作用定律：\n$V + R \\rightleftharpoons VR$，其平衡解离常数为 $K_{R} = \\frac{[V][R]}{[VR]}$。\n$V + A \\rightleftharpoons VA$，其平衡解离常数为 $K_{A} = \\frac{[V][A]}{[VA]}$。\n\n此处，$[V]$、$[R]$ 和 $[A]$ 分别是游离病毒、受体和抗体的摩尔浓度。$[VR]$ 和 $[VA]$ 是病毒-受体复合物和病毒-抗体复合物的浓度。问题陈述指出配体耗尽可忽略不计，因此受体和抗体的游离浓度可以用它们的总有效浓度来近似。\n\n病毒粒子附着到受体的概率与已结合受体的病毒粒子分数成正比。这个分数我们记为 $\\theta_{VR}$，是病毒-受体复合物的浓度除以所有状态（游离、受体结合和抗体结合）下病毒粒子的总浓度。\n病毒的总浓度为 $[V]_{\\mathrm{total}} = [V] + [VR] + [VA]$。\n使用平衡常数的定义，我们可以用游离病毒浓度 $[V]$ 来表示 $[VR]$ 和 $[VA]$：\n$[VR] = \\frac{[V][R]}{K_{R}}$\n$[VA] = \\frac{[V][A]}{K_{A}}$\n将这些代入 $[V]_{\\mathrm{total}}$ 的表达式中，得到：\n$$[V]_{\\mathrm{total}} = [V] + \\frac{[V][R]}{K_{R}} + \\frac{[V][A]}{K_{A}} = [V] \\left( 1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}} \\right)$$\n因此，与受体结合的病毒分数为：\n$$\\theta_{VR} = \\frac{[VR]}{[V]_{\\mathrm{total}}} = \\frac{\\frac{[V][R]}{K_{R}}}{[V] \\left( 1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}} \\right)} = \\frac{\\frac{[R]}{K_{R}}}{1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}}}$$\n在没有抗体的情况下，即 $[A]=0$ 时，受体结合病毒的基线分数 $\\theta_{VR,0}$ 为：\n$$\\theta_{VR,0} = \\frac{\\frac{[R]}{K_{R}}}{1 + \\frac{[R]}{K_{R}}}$$\n目标是找到能将受体介导的附着概率降低 $90\\%$ 的抗体浓度 $[A]$。这转化为新分数占有率 $\\theta_{VR}$ 必须是基线占有率 $\\theta_{VR,0}$ 的 $10\\%$ 这一条件：\n$$\\theta_{VR} = (1 - 0.9) \\theta_{VR,0} = 0.1 \\times \\theta_{VR,0}$$\n代入 $\\theta_{VR}$ 和 $\\theta_{VR,0}$ 的表达式，得到控制方程：\n$$\\frac{\\frac{[R]}{K_{R}}}{1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}}} = 0.1 \\times \\frac{\\frac{[R]}{K_{R}}}{1 + \\frac{[R]}{K_{R}}}$$\n由于受体浓度 $[R]$ 不为零，可以从两个分子中消去项 $\\frac{[R]}{K_{R}}$：\n$$\\frac{1}{1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}}} = \\frac{0.1}{1 + \\frac{[R]}{K_{R}}}$$\n现在我们重排此方程以求解 $[A]$：\n$$1 + \\frac{[R]}{K_{R}} = 0.1 \\left( 1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}} \\right)$$\n$$10 \\left( 1 + \\frac{[R]}{K_{R}} \\right) = 1 + \\frac{[R]}{K_{R}} + \\frac{[A]}{K_{A}}$$\n$$9 \\left( 1 + \\frac{[R]}{K_{R}} \\right) = \\frac{[A]}{K_{A}}$$\n$$[A] = 9 K_{A} \\left( 1 + \\frac{[R]}{K_{R}} \\right)$$\n这就是所需的表达式。为了获得数值，我们必须首先计算有效受体浓度 $[R]$。受体数量为 $N_{R} = 10^{5}$，分布在半径为 $r=10\\,\\mu\\mathrm{m}$、壳层厚度为 $\\delta=10\\,\\mathrm{nm}$ 的细胞周围的壳层体积 $V_{\\mathrm{shell}} = 4\\pi r^{2}\\delta$ 中。\n首先，我们用国际单位制（SI units）($m$) 表示半径和厚度：\n$r = 10\\,\\mu\\mathrm{m} = 10 \\times 10^{-6}\\,\\mathrm{m} = 10^{-5}\\,\\mathrm{m}$\n$\\delta = 10\\,\\mathrm{nm} = 10 \\times 10^{-9}\\,\\mathrm{m} = 10^{-8}\\,\\mathrm{m}$\n壳层体积为：\n$$V_{\\mathrm{shell}} = 4\\pi (10^{-5}\\,\\mathrm{m})^{2} (10^{-8}\\,\\mathrm{m}) = 4\\pi \\times 10^{-18}\\,\\mathrm{m}^3$$\n为了计算摩尔浓度，我们将此体积转换为升（$1\\,\\mathrm{m}^{3} = 10^{3}\\,\\mathrm{L}$）：\n$$V_{\\mathrm{shell}} = 4\\pi \\times 10^{-18}\\,\\mathrm{m}^3 \\times \\frac{10^3\\,\\mathrm{L}}{1\\,\\mathrm{m}^3} = 4\\pi \\times 10^{-15}\\,\\mathrm{L}$$\n摩尔浓度 $[R]$ 是每单位体积中受体的摩尔数，即 $n_{R} = N_{R}/N_{A}$：\n$$[R] = \\frac{N_{R}}{N_{A} V_{\\mathrm{shell}}} = \\frac{10^{5}}{(6.022\\times 10^{23}\\,\\mathrm{mol}^{-1}) (4\\pi \\times 10^{-15}\\,\\mathrm{L})}$$\n$$[R] = \\frac{10^{5 + 15}}{4\\pi \\times 6.022 \\times 10^{23}}\\,\\mathrm{M} = \\frac{10^{20}}{75.666 \\times 10^{23}}\\,\\mathrm{M} \\approx 1.3216 \\times 10^{-5}\\,\\mathrm{M}$$\n已知的解离常数为：\n$K_{R} = 10\\,\\mathrm{nM} = 10 \\times 10^{-9}\\,\\mathrm{M} = 10^{-8}\\,\\mathrm{M}$\n$K_{A} = 100\\,\\mathrm{pM} = 100 \\times 10^{-12}\\,\\mathrm{M} = 10^{-10}\\,\\mathrm{M}$\n现在，我们将所有数值代入推导出的 $[A]$ 方程中：\n$$[A] = 9 \\times (10^{-10}\\,\\mathrm{M}) \\times \\left( 1 + \\frac{1.3216 \\times 10^{-5}\\,\\mathrm{M}}{10^{-8}\\,\\mathrm{M}} \\right)$$\n无量纲比值为：\n$$\\frac{[R]}{K_{R}} = \\frac{1.3216 \\times 10^{-5}}{10^{-8}} = 1321.6$$\n因此方程变为：\n$$[A] = 9 \\times 10^{-10} \\times (1 + 1321.6)\\,\\mathrm{M}$$\n$$[A] = 9 \\times 10^{-10} \\times 1322.6\\,\\mathrm{M}$$\n$$[A] = 11903.4 \\times 10^{-10}\\,\\mathrm{M} = 1.19034 \\times 10^{-6}\\,\\mathrm{M}$$\n结果要求以微摩尔（micromolar）为单位（$1\\,\\mu\\mathrm{M} = 10^{-6}\\,\\mathrm{M}$）：\n$$[A] = 1.19034\\,\\mu\\mathrm{M}$$\n四舍五入至三位有效数字，最终浓度为 $1.19\\,\\mu\\mathrm{M}$。", "answer": "$$\\boxed{1.19}$$", "id": "2832726"}, {"introduction": "理论模型为我们提供了清晰的框架，但在真实的实验环境中，结果的解读往往会受到潜在混杂因素的干扰。本练习旨在挑战你的实验设计思维，通过一个非阻断性抗体表现出“假性”中和活性的思想实验，引导你分析实验伪影的来源 [@problem_id:2832719]。这项实践对于培养严谨的科学探究能力至关重要，它将教会你如何设计关键的对照实验，以区分真正的抗体功能与由可溶性诱饵受体等因素造成的假象。", "problem": "一个实验室正在评估一种单克隆抗体 (mAb)，该抗体针对一种有包膜病毒，该病毒通过病毒附着蛋白与宿主受体之间的单一关键蛋白质-蛋白质相互作用附着于宿主细胞。该 mAb 结合病毒附着蛋白上一个不与受体结合位点重叠的表位，且结构研究已表明其不会阻断受体的结合。中和作用通过在 $4^\\circ \\mathrm{C}$ 下进行的病毒-细胞附着实验来评估，实验中，病毒与系列稀释的免疫血清预孵育 $30$ 分钟，然后加入到受体阳性的靶细胞上；洗涤后，通过定量聚合酶链式反应 (qPCR) 对与细胞相关的病毒基因组进行定量，并以相对于无抗体对照组的附着百分比表示。无抗体对照组在无血清缓冲液中制备，而每种抗体稀释液则是通过对全免疫血清进行相应稀释来制备的（即，较高的抗体浓度对应于较高的血清组分）。研究人员不知道的是，血清中含有可溶性的病毒受体胞外域，其在纯血清中的浓度为 $\\rho$，能够以解离常数 $K_{D,VR_s}$ 与病毒粒子结合，并充当诱饵。假设经典的质量作用结合平衡，病毒粒子的数量远小于受体分子（包括可溶性受体和细胞表面受体）的数量，并且该 mAb 确实不阻断受体结合，除了通过形成免疫复合物外，不会改变病毒粒子结合受体的能力。\n\n仅使用质量作用结合原理以及本实验中“附着”与到达细胞表面且未被可溶性受体诱饵结合的病毒粒子浓度成正比的定义，分析当抗体滴定以全血清系列稀释进行时，血清中的可溶性受体诱饵是否以及如何对这种非阻断性 mAb 产生人为的、虚高的表观中和作用。然后，从下列选项中选择一个最佳的实验对照，该对照能最直接地检测出任何表观中和作用，并将其归因于可溶性受体诱饵而非抗体。\n\n- A. 从免疫血清中通过 Protein G 纯化免疫球蛋白 G (IgG)，然后在无血清缓冲液中测试相同质量的 IgG，并设一个补救条件，即以确定浓度加回重组的可溶性受体胞外域；如果单独使用纯化 IgG 时“中和”作用消失，而在加回胞外域后恢复，则表明受体诱饵是原因。\n\n- B. 在附着实验前将血清在 $56^\\circ \\mathrm{C}$ 下热灭活 $30$ 分钟以消除补体活性；如果热灭活后“中和”作用持续存在，则将证实是抗体介导的中和作用。\n\n- C. 在缺乏可结晶片段γ受体 (Fc$\\gamma$R) 的靶细胞上进行附着实验，以排除 Fc 受体在 $4^\\circ \\mathrm{C}$ 下对表观中和作用的贡献。\n\n- D. 在所有条件下将感染复数 (MOI) 增加 $10$ 倍以克服弱的诱饵效应；如果“中和”作用持续存在，则必定是抗体介导的。\n\n你的分析应从病毒粒子-可溶性受体结合的质量作用平衡出发，将血清稀释因子 $s \\in (0,1]$ 视为可溶性受体浓度的缩放因子，即 $[R_s] = s \\rho$，并考虑到对于非阻断性 mAb，细胞附着取决于未与 $R_s$ 结合的病毒粒子的比例，而非 $[A]$ 本身。除了生理上合理的范围（例如，纳摩尔级别），不要为 $\\rho$ 或 $K_{D,VR_s}$ 假设任何具体数值。最后，从以上选项中选出最佳的单一对照，该对照能最直接地检测出人为效应并将其归因于可溶性受体诱饵。", "solution": "问题陈述描述了一个免疫学实验可能受到混杂变量影响的情景，从而导致对实验结果的错误解读。任务是首先对这种人为效应进行理论分析，然后确定最合适的实验对照来诊断和归因该效应。\n\n### 问题验证\n首先，必须验证问题陈述的正确性和连贯性。\n\n*   **已知条件：**\n    *   正在测试一种针对有包膜病毒的非阻断性单克隆抗体 (mAb)。\n    *   该实验在 $4^\\circ \\mathrm{C}$ 下测量病毒与细胞的附着情况，此前病毒已与系列稀释的免疫血清进行了预孵育。\n    *   读数是相对于无抗体对照组（在无血清缓冲液中制备）的附着百分比。\n    *   较高的抗体浓度是通过使用较高比例的全免疫血清实现的。\n    *   免疫血清含有一种可溶性病毒受体胞外域 ($R_s$)，其在纯血清中的浓度为 $\\rho$，作为诱饵，与病毒的解离常数为 $K_{D,VR_s}$。\n    *   病毒粒子的数量远小于受体分子的数量。\n    *   “附着”与未被可溶性受体诱饵结合的病毒粒子浓度成正比。\n    *   该 mAb 确实是非阻断性的。\n\n*   **验证：**\n    *   **科学依据：** 这个问题在科学上是合理的。它基于病毒学、免疫学和生物物理化学的既定原理，包括质量作用动力学、抗体功能和受体-诱饵机制。血清中的可溶性受体作为混杂因素的情景在实验设计中是一个现实且重要的考虑因素。\n    *   **适定性：** 这个问题是适定的。它提出了一个清晰的场景，并要求进行具体的分析和对已定义的实验对照进行评估。可以从所提供的信息中推导出一个唯一的、合乎逻辑的解决方案。\n    *   **客观性：** 问题以客观、技术性的语言陈述，没有歧义或主观性陈述。\n    *   **一致性与完整性：** 问题是自洽且内部一致的。它提供了进行所需分析的所有必要定义（例如，“附着”的基础）和约束条件。\n\n*   **结论：** 问题陈述是有效的。它在实验设计和数据解读方面提出了一个严谨且概念上合理的挑战。\n\n### 人为中和效应分析\n\n本分析将论证与抗体 ($A$) 共同稀释的可溶性受体诱饵 ($R_s$) 的存在如何能够产生一条人为的中和曲线。\n\n设 $[V]$ 为游离病毒粒子的浓度，$[R_s]$ 为可溶性受体诱饵的浓度，$[VR_s]$ 为病毒粒子-诱饵复合物的浓度。结合平衡由下式给出：\n$$V + R_s \\rightleftharpoons VR_s$$\n\n该相互作用的解离常数 $K_{D,VR_s}$ 为：\n$$K_{D,VR_s} = \\frac{[V][R_s]}{[VR_s]}$$\n\n病毒粒子的总浓度 $[V]_{total}$ 是游离和结合病毒粒子的总和：\n$$[V]_{total} = [V] + [VR_s]$$\n\n问题陈述指出，附着与未被可溶性诱饵结合的病毒粒子浓度成正比。这对应于未结合病毒粒子的比例 $f_{unbound}$：\n$$f_{unbound} = \\frac{[V]}{[V]_{total}} = \\frac{[V]}{[V] + [VR_s]}$$\n\n根据 $K_{D,VR_s}$ 的定义，我们可以将 $[VR_s]$ 表示为 $[VR_s] = \\frac{[V][R_s]}{K_{D,VR_s}}$。将其代入 $f_{unbound}$ 的方程中：\n$$f_{unbound} = \\frac{[V]}{[V] + \\frac{[V][R_s]}{K_{D,VR_s}}} = \\frac{1}{1 + \\frac{[R_s]}{K_{D,VR_s}}}$$\n\n问题明确指出，血清稀释液是由全血清制备的。设 $s$ 为血清稀释因子，其中 $s \\in (0, 1]$。$s=1$ 对应于纯血清，$s \\to 0$ 对应于无限稀释。实验中可溶性受体的浓度为 $[R_s] = s \\rho$，其中 $\\rho$ 是其在纯血清中的浓度。我们可以将其代入 $f_{unbound}$ 的表达式中：\n$$f_{unbound}(s) = \\frac{1}{1 + \\frac{s\\rho}{K_{D,VR_s}}}$$\n\n在实验中，通过绘制附着百分比对抗体浓度 $[A]$ 的关系图来生成“中和”曲线。由于抗体存在于血清中，其浓度也与血清稀释因子 $s$ 成正比。设 $[A]_{neat}$ 为纯血清中的 mAb 浓度，则 $[A] = s [A]_{neat}$。因此，高抗体浓度对应于高 $s$ 值，低抗体浓度对应于低 $s$ 值。\n\n分析函数 $f_{unbound}(s)$：\n*   在高抗体浓度下（高 $s$ 值，趋近于 $1$），$\\frac{s\\rho}{K_{D,VR_s}}$ 项为最大值。这导致 $f_{unbound}$ 为最小值，从而测得较低的附着率。\n*   在低抗体浓度下（低 $s$ 值，趋近于 $0$），$\\frac{s\\rho}{K_{D,VR_s}}$ 项趋近于 $0$。这导致 $f_{unbound}$ 趋近于 $1$，从而测得较高的附着率。\n\n抗体浓度与病毒附着之间的这种反比关系正是中和曲线的定义。然而，在这种情况下，该效应并非由抗体（规定为非阻断性）介导，而是由共同稀释的可溶性受体诱饵介导。该实验设计产生了一个完美的混杂因素，其中致效剂的浓度 ($[R_s]$) 与测试变量 ($[A]$) 成正比，从而导致了人为的“中和”效应。\n\n### 实验对照评估\n\n目标是选择一个最佳的单一对照，既能检测到这种人为效应，又能将其正确归因于可溶性受体诱饵。\n\n*   **A. 从免疫血清中通过 Protein G 纯化免疫球蛋白 G (IgG)，然后在无血清缓冲液中测试相同质量的 IgG，并设一个补救条件，即以确定浓度加回重组的可溶性受体胞外域；如果单独使用纯化 IgG 时“中和”作用消失，而在加回胞外域后恢复，则表明受体诱饵是原因。**\n    这个提议的对照是一个严谨的、多步骤的实验，旨在分离变量。\n    1.  **纯化：** Protein G 选择性地结合 IgG 的 Fc 区，从而可以将抗体与其他血清蛋白（包括可溶性受体诱饵 $R_s$）分离开。\n    2.  **测试纯化 IgG：** 在干净的、无血清的缓冲液中用纯化的 IgG 重新进行滴定，消除了混杂变量 ($R_s$)。鉴于该 mAb 是非阻断性的，我们预测“中和”效应将会消失。此步骤用于**检测**到在全血清中观察到的效应并非抗体本身所固有。\n    3.  **加回（补救）：** 将已知量的重组可溶性受体加回到纯化的 IgG 制剂中，并观察到“中和”曲线的恢复，这直接检验了 $R_s$ 是致效剂的假设。此步骤用于**归因**该效应。\n    这种全面的方法为识别此人为效应并确定其原因提供了必要的证据。\n    **结论：正确。**\n\n*   **B. 在附着实验前将血清在 $56^\\circ \\mathrm{C}$ 下热灭活 $30$ 分钟以消除补体活性；如果热灭活后“中和”作用持续存在，则将证实是抗体介导的中和作用。**\n    热灭活是消除补体活性的标准方法。虽然补体可以介导中和作用，但它不是问题设置中描述的混杂因素。主要的混杂因素是可溶性受体诱饵 $R_s$。$R_s$ 的热稳定性是未知的。如果 $R_s$ 在 $56^\\circ \\mathrm{C}$ 下是稳定的（许多蛋白质都是），那么人为的中和作用将持续存在。该选项中的结论——“将证实是抗体介导的中和作用”——是一个逻辑谬误（不合逻辑的推论）。效应的持续存在可能是由于热稳定的诱饵受体，而不是抗体。因此，这个对照未能正确地剖析其机制。\n    **结论：不正确。**\n\n*   **C. 在缺乏可结晶片段γ受体 (Fc$\\gamma$R) 的靶细胞上进行附着实验，以排除 Fc 受体在 $4^\\circ \\mathrm{C}$ 下对表观中和作用的贡献。**\n    靶细胞上的 Fc$\\gamma$R 会结合抗体的 Fc 区。如果这些受体发挥作用，它们可能会结合抗体调理的病毒粒子，从而可能*增加*与细胞相关的病毒量。这种现象，即抗体依赖性增强效应 (ADE)，与中和作用相反。因此，Fc$\\gamma$R 不太可能是观察到的附着*减少*的原因。此外，像通过 Fc$\\gamma$R 的吞噬作用这样的主动细胞过程在 $4^\\circ \\mathrm{C}$ 下会受到抑制。这个对照解决的是一个与所描述的人为效应无关的机制。\n    **结论：不正确。**\n\n*   **D. 在所有条件下将感染复数 (MOI) 增加 $10$ 倍以克服弱的诱饵效应；如果“中和”作用持续存在，则必定是抗体介导的。**\n    增加 MOI 意味着增加病毒粒子的总浓度 $[V]_{total}$。对于任何给定的血清稀释度，可溶性诱饵受体的浓度是固定的，$[R_s]_T = s\\rho$。如果 $[V]_{total}$ 大幅增加到与 $[R_s]_T$ 相比不再可以忽略不计的水平，诱饵可能会变得饱和。这将使得诱饵对每个病毒粒子的效力降低，从而削弱表观中和作用（即将曲线向右移动）。然而，只要 $[R_s]_T$ 不为零，效应仍将持续存在。结论“如果'中和'作用持续存在，则必定是抗体介导的”同样是一个错误的推断。由诱饵介导的效应也同样会持续存在，只是形式上减弱了。这个实验没有提供区分抗体效应和诱饵效应的清晰界限。\n    **结论：不正确。**\n\n### 结论\n\n选项 A 提供了最直接和科学上最严谨的方法，既能检测出实验中的人为效应，又能将其正确归因于可溶性受体诱饵。它通过物理分离抗体和血清中的混杂成分，然后系统地测试它们在单独和组合使用时的效果来实现这一目标。这代表了阐明复杂生物系统中单个组分作用的黄金标准。", "answer": "$$\\boxed{A}$$", "id": "2832719"}, {"introduction": "抗体施加的选择性压力会驱动病毒进化，产生能够逃避免疫识别的突变株，这是疫苗和抗体疗法面临的核心挑战。本练习将带领你进入计算免疫学的前沿，构建一个连接病毒基因型与表型（即中和抗性）的定量模型 [@problem_id:2832730]。你将学习如何利用深度突变扫描数据，结合结合自由能（$\\Delta G$）、上位性（epistasis）和适应性成本等概念，通过编程来预测病毒最可能演化出的逃逸路径，从而定量评估免疫逃逸的风险。", "problem": "给定一个概念模型，该模型将深度突变扫描 (DMS) 的逃逸测量值与抗体介导中和作用的半数最大抑制浓度 (IC50) 的变化联系起来。其基本原理如下：在平衡结合条件下，单个中和抗体的中和作用可以通过希尔系数等于 $1$ 的一对一配体结合等温线进行建模，其中，在抗体浓度为 $C$ 时，抗体结合的抗原比例为 $f_{\\mathrm{bound}}(C) = \\dfrac{C}{C + K_D}$。半数最大抑制浓度 $IC_{50}$ 是在此模型下中和效应达到其最大值一半时的抗体浓度，对于固定的中和映射关系，它与解离常数 $K_D$ 成正比。深度突变扫描 (DMS) 测量突变对抗体逃逸的影响，其方式可以与结合自由能的变化相关联。如果位点 $i$ 上的一个突变使结合自由能改变了 $\\Delta g_i$（以 $k_B T$ 为单位），那么解离常数会按乘法关系进行缩放，即 $K_D \\mapsto K_D \\cdot \\exp(\\Delta g_i)$。对于一个突变集合 $\\mathcal{S}$，当多个突变同时存在时，成对上位性项 $\\epsilon_{ij}$（其中 $i \\neq j$）会累加到自由能变化中，因此 $\\log K_D$ 的总变化量为 $\\sum_{i \\in \\mathcal{S}} \\Delta g_i + \\sum_{\\substack{i,j \\in \\mathcal{S}\\\\ i<j}} \\epsilon_{ij}$。可及性受突变成本的限制：位点 $i$ 上的每个突变都有一个适应度成本 $c_i$，一个集合 $\\mathcal{S}$ 的总成本必须满足 $\\sum_{i \\in \\mathcal{S}} c_i \\le C_{\\max}$，每个单独的成本必须满足 $c_i \\le c_{\\mathrm{ind}}$，并且最多只能组合 $m_{\\max}$ 个突变，即 $|\\mathcal{S}| \\le m_{\\max}$。您的任务是操作化此模型。\n\n编写一个程序，对于每个独立的测试用例，枚举所有满足可及性约束 $\\sum_{i \\in \\mathcal{S}} c_i \\le C_{\\max}$ 和对所有 $i \\in \\mathcal{S}$ 均有 $c_i \\le c_{\\mathrm{ind}}$ 的突变子集 $\\mathcal{S}$（其中 $|\\mathcal{S}| \\le m_{\\max}$），根据给定的基线 $IC_{50}^{(0)}$ 计算每个可及集合 $\\mathcal{S}$ 的预测 $IC_{50}$，并返回可及集合中最大的预测 $IC_{50}$（最坏情况下的可及逃逸）。如果没有非空集合是可及的，则空集始终可及，其结果为基线 $IC_{50}^{(0)}$。所有输出均以纳摩尔 (nM) 为单位，以十进制形式打印，并四舍五入到小数点后六位。\n\n使用以下测试套件。在每个测试用例中，您将获得：\n- 基线半数最大抑制浓度 $IC_{50}^{(0)}$，单位为纳摩尔，\n- 每个位点的自由能对数效应向量 $\\Delta g_i$，\n- 成对上位性的对称矩阵 $\\epsilon_{ij}$，对角线元素为零，\n- 每个位点的成本向量 $c_i$，\n- 最大总成本 $C_{\\max}$，\n- 最大单位点成本 $c_{\\mathrm{ind}}$，\n- 最大突变数量 $m_{\\max}$。\n\n您的程序必须根据上述模型，利用 $IC_{50}$ 在一对一结合基础模型下与 $K_D$ 成正比的特性，为每个测试用例计算出最大的可及预测 $IC_{50}$（单位为纳摩尔）。\n\n测试用例：\n- 测试用例 A：\n  - $IC_{50}^{(0)} = 1.0 \\ \\mathrm{nM}$，\n  - $\\Delta g = [0.7, \\ 0.5, \\ 0.3]$,\n  - $\\epsilon = \\begin{bmatrix} 0 & 0.2 & 0.0 \\\\ 0.2 & 0 & -0.05 \\\\ 0.0 & -0.05 & 0 \\end{bmatrix}$，\n  - $c = [2.0, \\ 1.5, \\ 0.5]$,\n  - $C_{\\max} = 3.0$， $c_{\\mathrm{ind}} = 2.0$， $m_{\\max} = 2$。\n- 测试用例 B：\n  - $IC_{50}^{(0)} = 5.0 \\ \\mathrm{nM}$，\n  - $\\Delta g = [1.2, \\ 0.4, \\ 0.2, \\ 0.0]$,\n  - $\\epsilon = \\begin{bmatrix} 0 & -0.5 & 0 & 0 \\\\ -0.5 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 \\end{bmatrix}$，\n  - $c = [3.0, \\ 1.5, \\ 1.0, \\ 0.2]$,\n  - $C_{\\max} = 2.0$， $c_{\\mathrm{ind}} = 2.0$， $m_{\\max} = 2$。\n- 测试用例 C：\n  - $IC_{50}^{(0)} = 2.0 \\ \\mathrm{nM}$，\n  - $\\Delta g = [0.6, \\ 0.9]$,\n  - $\\epsilon = \\begin{bmatrix} 0 & 0 \\\\ 0 & 0 \\end{bmatrix}$，\n  - $c = [5.0, \\ 5.1]$,\n  - $C_{\\max} = 1.0$， $c_{\\mathrm{ind}} = 1.0$， $m_{\\max} = 2$。\n- 测试用例 D：\n  - $IC_{50}^{(0)} = 3.0 \\ \\mathrm{nM}$，\n  - $\\Delta g = [0.3, \\ -0.2, \\ 0.4]$,\n  - $\\epsilon = \\begin{bmatrix} 0 & 0.6 & 0 \\\\ 0.6 & 0 & 0 \\\\ 0 & 0 & 0 \\end{bmatrix}$，\n  - $c = [0.6, \\ 0.6, \\ 0.6]$,\n  - $C_{\\max} = 1.2$， $c_{\\mathrm{ind}} = 1.2$， $m_{\\max} = 2$。\n\n最终输出格式：您的程序应生成单行输出，按顺序包含测试用例 A、B、C、D 的结果，形式为逗号分隔的列表并用方括号括起（例如，$[x_A,x_B,x_C,x_D]$）。每个条目必须是最大的可及预测 $IC_{50}$（单位为 $\\mathrm{nM}$），并四舍五入到小数点后六位。", "solution": "该问题被验证为合理。它提出了一个基于生物物理学的抗体逃逸模型，该模型建立在统计热力学和结合动力学的既定原则之上。此任务是一个适定的优化问题，具有清晰、客观的标准和足以得出唯一解的充分数据。\n\n该模型的核心是突变集合 $\\mathcal{S}$ 与由此产生的半数最大抑制浓度（表示为 $IC_{50}(\\mathcal{S})$）之间的关系。给定一个基线浓度 $IC_{50}^{(0)}$，一个突变集合 $\\mathcal{S}$ 会引起结合自由能的变化。这个变化以 $k_B T$ 为单位，由以下公式给出：\n$$\n\\Delta E_{\\mathcal{S}} = \\sum_{i \\in \\mathcal{S}} \\Delta g_i + \\sum_{\\substack{i,j \\in \\mathcal{S}\\\\ i<j}} \\epsilon_{ij}\n$$\n新的解离常数 $K_D(\\mathcal{S})$ 与基线常数 $K_D^{(0)}$ 的关系为 $K_D(\\mathcal{S}) = K_D^{(0)} \\exp(\\Delta E_{\\mathcal{S}})$。由于问题陈述 $IC_{50}$ 与 $K_D$ 成正比，因此突变集合 $\\mathcal{S}$ 的预测 $IC_{50}$ 为：\n$$\nIC_{50}(\\mathcal{S}) = IC_{50}^{(0)} \\exp(\\Delta E_{\\mathcal{S}})\n$$\n问题的目标是在所有“可及”的集合 $\\mathcal{S}$ 中找到可能的最大 $IC_{50}(\\mathcal{S})$。一个非空突变集合 $\\mathcal{S}$ 被定义为可及的，如果它同时满足三个约束条件：\n1. 突变数量不得超过 $m_{\\max}$：$|\\mathcal{S}| \\le m_{\\max}$。\n2. 每个单独突变 $i \\in \\mathcal{S}$ 的成本 $c_i$ 不得超过 $c_{\\mathrm{ind}}$：$c_i \\le c_{\\mathrm{ind}}$。\n3. 集合中所有突变的总成本不得超过 $C_{\\max}$：$\\sum_{i \\in \\mathcal{S}} c_i \\le C_{\\max}$。\n空集 $\\mathcal{S} = \\emptyset$ 被定义为始终可及。对于此集合，能量变化 $\\Delta E_{\\emptyset}$ 为 $0$，导致 $IC_{50}(\\emptyset) = IC_{50}^{(0)}$。该值作为最大化过程的初始基线。\n\n解决此问题的计算算法是确定性和系统性的。\n首先，将最大的可及 $IC_{50}$ 初始化为对应于空集的基线值 $IC_{50}^{(0)}$。\n其次，枚举所有可能的非空突变位点子集。给定 $N$ 个潜在位点，我们考虑所有大小为 $k$ 的子集 $\\mathcal{S}$，其中 $k$ 的范围从 $1$ 到指定的最大值 $m_{\\max}$。此枚举通过生成位点索引的组合来执行。\n第三，对于每个生成的子集 $\\mathcal{S}$，通过依次检查单个成本约束（对所有 $i \\in \\mathcal{S}$ 都有 $c_i \\le c_{\\mathrm{ind}}$）和总成本约束（$\\sum_{i \\in \\mathcal{S}} c_i \\le C_{\\max}$）来验证其可及性。关于子集大小的约束（$|\\mathcal{S}| \\le m_{\\max}$）已通过枚举策略内在满足。\n第四，如果一个子集 $\\mathcal{S}$ 被发现是可及的，则计算其总自由能变化 $\\Delta E_{\\mathcal{S}}$。随后，使用上述指数公式计算相应的 $IC_{50}(\\mathcal{S})$。\n第五，将这个新计算的 $IC_{50}(\\mathcal{S})$ 与当前记录的最大值进行比较。如果新值更大，则更新最大值。\n此过程会穷举探索已定义的搜索空间，保证找到所有允许的突变组合中的全局最大 $IC_{50}$ 值。该实现利用了标准的 Python 库，特别是用于组合生成子集的 `itertools.combinations` 和用于指数函数的 `numpy`，并严格遵守所提供的执行环境。", "answer": "```python\nimport numpy as np\nimport itertools\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for all test cases.\n    \"\"\"\n\n    test_cases = [\n        # Test case A\n        {\n            \"ic50_0\": 1.0,\n            \"delta_g\": np.array([0.7, 0.5, 0.3]),\n            \"epsilon\": np.array([[0, 0.2, 0.0], [0.2, 0, -0.05], [0.0, -0.05, 0]]),\n            \"costs\": np.array([2.0, 1.5, 0.5]),\n            \"c_max\": 3.0, \"c_ind\": 2.0, \"m_max\": 2\n        },\n        # Test case B\n        {\n            \"ic50_0\": 5.0,\n            \"delta_g\": np.array([1.2, 0.4, 0.2, 0.0]),\n            \"epsilon\": np.array([[0, -0.5, 0, 0], [-0.5, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]),\n            \"costs\": np.array([3.0, 1.5, 1.0, 0.2]),\n            \"c_max\": 2.0, \"c_ind\": 2.0, \"m_max\": 2\n        },\n        # Test case C\n        {\n            \"ic50_0\": 2.0,\n            \"delta_g\": np.array([0.6, 0.9]),\n            \"epsilon\": np.array([[0, 0], [0, 0]]),\n            \"costs\": np.array([5.0, 5.1]),\n            \"c_max\": 1.0, \"c_ind\": 1.0, \"m_max\": 2\n        },\n        # Test case D\n        {\n            \"ic50_0\": 3.0,\n            \"delta_g\": np.array([0.3, -0.2, 0.4]),\n            \"epsilon\": np.array([[0, 0.6, 0], [0.6, 0, 0], [0, 0, 0]]),\n            \"costs\": np.array([0.6, 0.6, 0.6]),\n            \"c_max\": 1.2, \"c_ind\": 1.2, \"m_max\": 2\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        result = calculate_max_ic50(\n            case[\"ic50_0\"],\n            case[\"delta_g\"],\n            case[\"epsilon\"],\n            case[\"costs\"],\n            case[\"c_max\"],\n            case[\"c_ind\"],\n            case[\"m_max\"]\n        )\n        results.append(result)\n\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef calculate_max_ic50(ic50_0, delta_g, epsilon, costs, c_max, c_ind, m_max):\n    \"\"\"\n    Calculates the maximal accessible predicted IC50 for a single test case.\n\n    Args:\n        ic50_0 (float): Baseline IC50.\n        delta_g (np.ndarray): Vector of per-site free-energy log-effects.\n        epsilon (np.ndarray): Matrix of pairwise epistasis.\n        costs (np.ndarray): Vector of per-site costs.\n        c_max (float): Maximum total cost.\n        c_ind (float): Maximum per-site cost.\n        m_max (int): Maximum number of mutations.\n\n    Returns:\n        float: The maximal accessible predicted IC50.\n    \"\"\"\n    n_sites = len(delta_g)\n    max_ic50 = float(ic50_0)\n\n    # Iterate through all possible numbers of mutations, from 1 to m_max\n    for k in range(1, m_max + 1):\n        # Generate all combinations of mutation site indices of size k\n        for s_indices in itertools.combinations(range(n_sites), k):\n            \n            # Check accessibility constraint: individual cost\n            if not all(costs[i] = c_ind for i in s_indices):\n                continue\n            \n            # Check accessibility constraint: total cost\n            if sum(costs[i] for i in s_indices) > c_max:\n                continue\n\n            # If accessible, calculate the new IC50.\n            # The constraint |S| = m_max is implicitly handled by the loop range for k.\n\n            # Calculate total free energy change (delta_e)\n            # 1. Sum of single-mutation effects\n            delta_e = np.sum(delta_g[list(s_indices)])\n            \n            # 2. Sum of epistatic effects for pairs within the subset\n            if k > 1:\n                for i1, i2 in itertools.combinations(s_indices, 2):\n                    delta_e += epsilon[i1, i2]\n\n            # Calculate new IC50\n            current_ic50 = ic50_0 * np.exp(delta_e)\n\n            # Update maximum\n            if current_ic50 > max_ic50:\n                max_ic50 = current_ic50\n                \n    return max_ic50\n\nsolve()\n```", "id": "2832730"}]}