{"hands_on_practices": [{"introduction": "要定量地理解轴突变性这一生物现象，关键的第一步是用数学模型来描述其动态过程。本练习提供了一组假设数据，代表了轴突损伤后随时间推移而保持完整的轴突比例。通过将这些数据拟合到一阶衰变模型，您将练习提取速率常数（$k$）和半衰期（$t_{1/2}$）等基本参数，从而将观测数据转化为对变性过程的精确量化描述。[@problem_id:2731255]", "problem": "在微流控腔室中，一个周围轴突束受到损伤，在不稳定型轴突维持酶——烟酰胺单核苷酸腺苷酰转移酶2（NMNAT2）缺失后，触发了由含有无菌α和Toll/白细胞介素受体基序的蛋白1（SARM1）通路驱动的瓦勒样变性。随时间推移，在形态上保持连续的轴突节段的比例（记为 $A(t)$）在轴突切断后的离散时间点 $t$（小时）进行测量。在下游执行级联反应由一个单一、无记忆的步骤（恒定风险）所限速，且上游事件实际上速度很快而非速率限制性的条件下，该变性动力学可以被建模为一级生存过程。\n\n测量数据（时间单位为小时，连续部分的比例为初始完整群体的无量纲分数）：\n$\\{(0, 1.00), (2, 0.78), (4, 0.61), (6, 0.47), (8, 0.36)\\}$.\n\n任务：\n1) 从风险函数 $h(t) \\equiv -\\frac{d}{dt}\\ln A(t)$的定义和无记忆假设 $h(t) = k$（常数）出发，推导 $A(t)$ 关于 $k$ 和 $A(0)$ 的函数形式。\n\n2) 使用普通最小二乘法，对恒定风险所蕴含的线性化形式进行拟合，从以上数据中估计变性速率常数 $k$（单位为 $\\mathrm{h}^{-1}$）。\n\n3) 计算由 $A(t_{1/2}) = \\frac{1}{2}A(0)$ 定义的半衰期 $t_{1/2}$，并结合SARM1驱动的轴突自我毁灭的背景，简要解释 $k$ 和 $t_{1/2}$ 的生物学意义。\n\n最终答案只报告以小时为单位、四舍五入到四位有效数字的半衰期 $t_{1/2}$。在最终的方框答案中不要包含单位。所有中间推理过程和任何额外的量（包括 $k$）都应出现在你的解题步骤中。", "solution": "我们从适用于一级生存过程的基本原理开始。风险函数定义为 $h(t) \\equiv -\\frac{d}{dt}\\ln A(t)$。在风险函数为常数 $h(t) = k$ 的无记忆假设下，我们积分得到\n$$\n-\\frac{d}{dt}\\ln A(t) = k \\;\\;\\Longrightarrow\\;\\; \\frac{d}{dt}\\ln A(t) = -k \\;\\;\\Longrightarrow\\;\\; \\ln A(t) = -k t + C,\n$$\n其中 $C$ 是一个积分常数。两边取指数得到\n$$\nA(t) = \\exp(C)\\,\\exp(-k t).\n$$\n将 $\\exp(C)$ 视为初始值 $A(0)$，即可得到指数生存形式\n$$\nA(t) = A(0)\\,\\exp(-k t).\n$$\n\n为了从数据中估计 $k$，我们使用该模型所蕴含的线性化形式。令 $y(t) \\equiv \\ln A(t)$。那么\n$$\ny(t) = \\ln A(0) - k t,\n$$\n这是一个截距为 $a \\equiv \\ln A(0)$、斜率为 $b \\equiv -k$ 的直线方程。\n\n根据数据 $\\{(t_i, A_i)\\} = \\{(0, 1.00), (2, 0.78), (4, 0.61), (6, 0.47), (8, 0.36)\\}$，计算 $y_i \\equiv \\ln A_i$：\n- 对于 $t_1 = 0$：$y_1 = \\ln(1.00) = 0$。\n- 对于 $t_2 = 2$：$y_2 = \\ln(0.78) \\approx -0.248461$。\n- 对于 $t_3 = 4$：$y_3 = \\ln(0.61) \\approx -0.494296$。\n- 对于 $t_4 = 6$：$y_4 = \\ln(0.47) \\approx -0.755022$。\n- 对于 $t_5 = 8$：$y_5 = \\ln(0.36) \\approx -1.021651$。\n\n令 $N = 5$，$\\sum t_i = 0 + 2 + 4 + 6 + 8 = 20$，$\\sum t_i^2 = 0 + 4 + 16 + 36 + 64 = 120$，$\\sum y_i = 0 + (-0.248461) + (-0.494296) + (-0.755022) + (-1.021651) = -2.51943$，以及 $\\sum t_i y_i = 0\\cdot 0 + 2(-0.248461) + 4(-0.494296) + 6(-0.755022) + 8(-1.021651) = -15.176982$。\n\n斜率 $b$ 和截距 $a$ 的普通最小二乘估计值为\n$$\nb = \\frac{N\\sum t_i y_i - (\\sum t_i)(\\sum y_i)}{N\\sum t_i^2 - (\\sum t_i)^2}, \\quad\na = \\frac{\\sum y_i - b \\sum t_i}{N}.\n$$\n计算分母：\n$$\nN\\sum t_i^2 - (\\sum t_i)^2 = 5\\cdot 120 - 20^2 = 600 - 400 = 200.\n$$\n计算 $b$ 的分子：\n$$\nN\\sum t_i y_i - (\\sum t_i)(\\sum y_i) = 5(-15.176982) - (20)(-2.51943) = -75.88491 + 50.3886 = -25.49631.\n$$\n因此\n$$\nb = \\frac{-25.49631}{200} = -0.12748155\\;\\;(\\mathrm{h}^{-1}).\n$$\n所以，\n$$\nk = -b = 0.12748155\\;\\;(\\mathrm{h}^{-1}).\n$$\n为完整起见，计算截距\n$$\na = \\frac{-2.51943 - (-0.12748155)\\cdot 20}{5} = \\frac{-2.51943 + 2.549631}{5} = \\frac{0.030201}{5} = 0.0060402,\n$$\n所以 $A(0) \\approx \\exp(a) \\approx 1.006$，与测量值 $A(0) = 1.00$ 一致。\n\n半衰期 $t_{1/2}$ 满足 $A(t_{1/2}) = \\frac{1}{2}A(0)$，对于指数生存模型，可得\n$$\n\\frac{1}{2}A(0) = A(0)\\,\\exp(-k t_{1/2}) \\;\\;\\Longrightarrow\\;\\; \\exp(-k t_{1/2}) = \\frac{1}{2} \\;\\;\\Longrightarrow\\;\\; t_{1/2} = \\frac{\\ln 2}{k}.\n$$\n使用估计出的 $k$ 值，\n$$\nt_{1/2} = \\frac{\\ln 2}{0.12748155} \\approx \\frac{0.69314718056}{0.12748155} \\approx 5.4373\\;\\;\\text{hours}.\n$$\n\n生物学解释：速率常数 $k$ 是指在 SARM1 激活及其下游的烟酰胺腺嘌呤二核苷酸 ($\\text{NAD}^+$) 裂解成为烟酰胺单核苷酸腺苷酰转移酶2 (NMNAT2) 缺失后的限速步骤的条件下，完整轴突节段转变为变性状态的有效一级风险率。半衰期 $t_{1/2}$ 是完整轴突比例下降一半所需的特征时间尺度，反映了在该制备样本中SARM1驱动的轴突自我毁灭过程的执行速度。\n\n根据要求，我们报告以小时为单位、四舍五入到四位有效数字的半衰期。数值上，$t_{1/2} \\approx 5.437$ 小时（四舍五入到四位有效数字）。", "answer": "$$\\boxed{5.437}$$", "id": "2731255"}, {"introduction": "在对整体变性动力学进行建模之后，我们现在深入探讨其核心生化机制：SARM1 的酶活性。本练习要求您运用经典的 Michaelis-Menten 酶动力学框架，来模拟活化的 SARM1 如何消耗轴突内的 $\\text{NAD}^{+}$。通过推导并应用积分速率方程，您将计算出 $\\text{NAD}^{+}$ 水平耗竭所需的时间，从而将酶的参数与沃勒变性中观察到的快速新陈代谢崩溃直接联系起来。[@problem_id:2731272]", "problem": "轴突损伤后，无菌Alpha和Toll/白细胞介素受体基序蛋白1（SARM1）会转变为一种活性的烟酰胺腺嘌呤二核苷酸（$\\text{NAD}^+$）水解酶（NADase），通过耗尽轴浆中的$\\text{NAD}^+$，在瓦勒氏变性（Wallerian degeneration）过程中引发代谢崩溃。考虑一个体积为 $V$ 的充分混合的轴突节段，其中活化的SARM1均匀分布。以准稳态近似下的单底物酶的标准Michaelis–Menten速率定律为基础，反应速度由 $v([N]) = k_{\\mathrm{cat}} E \\, [N]/(K_{m} + [N])$ 给出，其中 $[N]$ 表示$\\text{NAD}^+$浓度，$E$ 是催化活性SARM1位点的摩尔浓度，$k_{\\mathrm{cat}}$ 是催化常数，$K_{m}$ 是Michaelis常数。假设没有$\\text{NAD}^+$再合成（例如，通过烟酰胺单核苷酸腺苷酸转移酶），没有转运，也没有产物抑制；将 $E$、$k_{\\mathrm{cat}}$ 和 $K_{m}$ 视为与时间无关。\n\n1. 从 $[N](t)$ 的守恒定律和Michaelis–Menten速率定律出发，推导出一个封闭形式的表达式，用于计算$\\text{NAD}^+$从其初始浓度 $[N]_{0}$ 降低到目标浓度 $[N]_{f} = f \\,[N]_{0}$（其中 $0 < f < 1$）所需的时间 $t_{f}$。您的推导应仅基于质量作用推理和Michaelis–Menten定律的性质。\n\n2. 使用您的表达式，根据以下一个受损的哺乳动物轴突的生理学合理参数，计算达到小分数目标 $f = 0.05$ 所需的耗尽时间：初始$\\text{NAD}^+$浓度 $[N]_{0} = 300~\\mu\\mathrm{M}$，活性SARM1位点浓度 $E = 0.10~\\mu\\mathrm{M}$，Michaelis常数 $K_{m} = 200~\\mu\\mathrm{M}$，以及催化常数 $k_{\\mathrm{cat}} = 10~\\mathrm{s}^{-1}$。以分钟为单位表示最终时间，并将您的答案四舍五入到三位有效数字。\n\n注意：由于控制方程是以浓度形式书写的，因此在所述假设下，计算耗尽时间不需要轴突体积 $V$ 的明确值。", "solution": "该问题要求推导一个封闭系统中，遵循Michaelis-Menten动力学的酶催化底物耗尽的时间进程。其基本原理是质量作用定律，该定律决定了底物浓度的变化速率。\n\n**第1部分：耗尽时间 $t_{f}$ 的推导**\n\n我们从$\\text{NAD}^+$浓度（表示为 $[N]$）的守恒方程开始。问题陈述，没有$\\text{NAD}^+$的合成或转运。因此，$[N]$的变化速率完全由SARM1的酶促消耗引起。该消耗的速率即为反应速度 $v$。\n\n控制该系统的微分方程为：\n$$\n\\frac{d[N]}{dt} = -v([N])\n$$\n反应速度 $v([N])$ 由Michaelis–Menten速率定律给出：\n$$\nv([N]) = \\frac{k_{\\mathrm{cat}} E [N]}{K_{m} + [N]}\n$$\n其中 $E$ 是活性SARM1位点的浓度，$k_{\\mathrm{cat}}$ 是催化常数，$K_{m}$ 是Michaelis常数。结合这两个方程，得到 $[N](t)$ 的控制常微分方程：\n$$\n\\frac{d[N]}{dt} = - \\frac{k_{\\mathrm{cat}} E [N]}{K_{m} + [N]}\n$$\n这是一个一阶、非线性、可分离的微分方程。为了求解浓度变化所需的时间，我们必须分离变量 $[N]$ 和 $t$，并在指定区间上进行积分。\n$$\n\\frac{K_{m} + [N]}{[N]} d[N] = -k_{\\mathrm{cat}} E \\, dt\n$$\n方程左侧可以简化为：\n$$\n\\left(\\frac{K_{m}}{[N]} + 1\\right) d[N] = -k_{\\mathrm{cat}} E \\, dt\n$$\n现在我们对两边进行积分。$\\text{NAD}^+$的浓度在 $t=0$ 到 $t=t_f$ 的时间间隔内，从其初始值 $[N](0) = [N]_{0}$ 变化到最终值 $[N](t_f) = [N]_{f}$。\n$$\n\\int_{[N]_{0}}^{[N]_{f}} \\left(\\frac{K_{m}}{[N]} + 1\\right) d[N] = \\int_{0}^{t_f} -k_{\\mathrm{cat}} E \\, dt\n$$\n参数 $K_{m}$、$k_{\\mathrm{cat}}$ 和 $E$ 均被视为常数，因此在积分过程中可以如此处理。\n\n计算左侧的积分：\n$$\n\\int \\left(\\frac{K_{m}}{[N]} + 1\\right) d[N] = K_{m} \\ln|[N]| + [N]\n$$\n应用从 $[N]_0$ 到 $[N]_f$ 的积分限：\n$$\n[K_{m} \\ln[N] + [N]]_{[N]_{0}}^{[N]_{f}} = (K_{m} \\ln[N]_{f} + [N]_{f}) - (K_{m} \\ln[N]_{0} + [N]_{0})\n$$\n利用对数的性质，上式变为：\n$$\nK_{m} \\ln\\left(\\frac{[N]_{f}}{[N]_{0}}\\right) + ([N]_{f} - [N]_{0})\n$$\n计算右侧的积分：\n$$\n\\int_{0}^{t_f} -k_{\\mathrm{cat}} E \\, dt = -k_{\\mathrm{cat}} E [t]_{0}^{t_f} = -k_{\\mathrm{cat}} E t_f\n$$\n将两边的结果相等，得到积分速率定律：\n$$\nK_{m} \\ln\\left(\\frac{[N]_{f}}{[N]_{0}}\\right) + ([N]_{f} - [N]_{0}) = -k_{\\mathrm{cat}} E t_f\n$$\n我们求解这个方程以得到耗尽时间 $t_f$：\n$$\nt_f = -\\frac{1}{k_{\\mathrm{cat}} E} \\left[ K_{m} \\ln\\left(\\frac{[N]_{f}}{[N]_{0}}\\right) + ([N]_{f} - [N]_{0}) \\right]\n$$\n为了得到时间的正值表达式，我们可以反转对数的参数和差值项：\n$$\nt_f = \\frac{1}{k_{\\mathrm{cat}} E} \\left[ -K_{m} \\ln\\left(\\frac{[N]_{f}}{[N]_{0}}\\right) - ([N]_{f} - [N]_{0}) \\right] = \\frac{1}{k_{\\mathrm{cat}} E} \\left[ K_{m} \\ln\\left(\\frac{[N]_{0}}{[N]_{f}}\\right) + ([N]_{0} - [N]_{f}) \\right]\n$$\n问题指定最终浓度为初始浓度的分数 $f$，即 $[N]_{f} = f [N]_{0}$，其中 $0 < f < 1$。将此代入我们得到的 $t_f$ 表达式中：\n$$\nt_f = \\frac{1}{k_{\\mathrm{cat}} E} \\left[ K_{m} \\ln\\left(\\frac{[N]_{0}}{f [N]_{0}}\\right) + ([N]_{0} - f [N]_{0}) \\right]\n$$\n简化该表达式，得到耗尽时间的最终封闭形式方程：\n$$\nt_f = \\frac{1}{k_{\\mathrm{cat}} E} \\left[ K_{m} \\ln\\left(\\frac{1}{f}\\right) + [N]_{0} (1-f) \\right]\n$$\n至此，完成了问题第一部分的推导。\n\n**第2部分：耗尽时间的计算**\n\n现在我们使用推导出的表达式，根据给定参数计算时间 $t_f$：\n- 初始$\\text{NAD}^+$浓度：$[N]_{0} = 300~\\mu\\mathrm{M}$\n- 活性SARM1位点浓度：$E = 0.10~\\mu\\mathrm{M}$\n- Michaelis常数：$K_{m} = 200~\\mu\\mathrm{M}$\n- 催化常数：$k_{\\mathrm{cat}} = 10~\\mathrm{s}^{-1}$\n- 目标分数：$f = 0.05$\n\n首先，我们计算 $k_{\\mathrm{cat}} E$ 项，这是最大反应速度 $V_{\\max}$，单位为浓度/时间。\n$$\nV_{\\max} = k_{\\mathrm{cat}} E = (10~\\mathrm{s}^{-1}) \\times (0.10~\\mu\\mathrm{M}) = 1.0~\\mu\\mathrm{M} \\cdot \\mathrm{s}^{-1}\n$$\n接下来，我们计算方括号内的各项：\n- 对数项：$K_{m} \\ln\\left(\\frac{1}{f}\\right) = (200~\\mu\\mathrm{M}) \\times \\ln\\left(\\frac{1}{0.05}\\right) = (200~\\mu\\mathrm{M}) \\times \\ln(20)$。\n- 线性项：$[N]_{0} (1-f) = (300~\\mu\\mathrm{M}) \\times (1 - 0.05) = (300~\\mu\\mathrm{M}) \\times (0.95)$。\n\n现在，将这些代入 $t_f$ 的方程中：\n$$\nt_f = \\frac{1}{1.0~\\mu\\mathrm{M} \\cdot \\mathrm{s}^{-1}} \\left[ (200~\\mu\\mathrm{M}) \\ln(20) + (300~\\mu\\mathrm{M})(0.95) \\right]\n$$\n分子中的单位 $\\mu\\mathrm{M}$ 与分母中的 $\\mu\\mathrm{M}$ 相抵消，结果以秒为单位，这是正确的。\n$$\nt_f = \\left( 200 \\ln(20) + 300 \\times 0.95 \\right) \\mathrm{s}\n$$\n我们计算数值：\n$$\n\\ln(20) \\approx 2.995732\n$$\n$$\n200 \\times 2.995732 = 599.1464\n$$\n$$\n300 \\times 0.95 = 285\n$$\n所以，以秒为单位的时间是：\n$$\nt_f = (599.1464 + 285)~\\mathrm{s} = 884.1464~\\mathrm{s}\n$$\n问题要求最终时间以分钟表示，并四舍五入到三位有效数字。为了从秒转换为分钟，我们除以 $60$：\n$$\nt_f(\\text{min}) = \\frac{884.1464}{60} \\approx 14.73577~\\text{min}\n$$\n将此结果四舍五入到三位有效数字，得到 $14.7$ 分钟。这是在所述条件下，SARM1 NADase活性将轴浆$\\text{NAD}^+$耗尽至其初始水平的 $5\\%$所需的时间。", "answer": "$$\n\\boxed{14.7}\n$$", "id": "2731272"}, {"introduction": "生物通路很少是线性的，它们是相互作用组分构成的复杂网络。这最后一个练习将我们的分析提升到系统层面，通过构建一个综合模型，将 SARM1 活性、$\\text{NAD}^{+}$ 耗竭、随后的钙离子失调以及细胞骨架分解联系起来。您将模拟这个多步级联反应以研究一种治疗性 SARM1 抑制剂的效果，并通过测量下游损伤标志物来量化其保护轴突的能力。本练习展示了计算系统生物学在预测复杂通路的涌现行为和评估潜在治疗策略方面的强大威力。[@problem_id:2731303]", "problem": "您将获得一个用于轴突变性的综合动态模型，该模型将 Sterile Alpha and Toll/Interleukin receptor Motif Containing 1 (SARM1) 的活性与烟酰胺腺嘌呤二核苷酸（$\\text{NAD}^{+}$）耗竭、细胞溶质钙（$\\mathrm{Ca}^{2+}$）升高、钙蛋白酶活化以及产生血影蛋白分解产物 (SBDP) 的血影蛋白蛋白水解联系起来。您的任务是基于质量作用动力学和协同结合的基本原理，模拟部分 SARM1 抑制对峰值 $\\mathrm{Ca}^{2+}$ 和峰值 SBDP 水平的影响，并量化其保护程度。\n\n基本原理与模型构建：\n- 假设 $\\text{NAD}^{+}$ 浓度 $N(t)$ 被 SARM1 耗竭并缓慢补充，因此\n$$\n\\frac{dN}{dt} = -k_{\\text{sarm}}\\,(1 - I)\\,N + k_{\\text{syn}}\\,(N_{\\text{set}} - N),\n$$\n其中 $I \\in [0,1]$ 是 SARM1 的分数抑制， $k_{\\text{sarm}}$ 是水解速率常数， $k_{\\text{syn}}$ 是缓慢的恢复性合成速率， $N_{\\text{set}}$ 是稳态设定点。\n\n- 细胞溶质 $\\mathrm{Ca}^{2+}$ 浓度 $C(t)$ 对 $\\text{NAD}^{+}$ 依赖性膜衰竭作出响应，该响应可近似为对 $N(t)$ 的 Hill 型依赖关系，并向静息设定点 $C_{\\text{rest}}$ 进行基线恢复：\n$$\nH_N(N) = \\frac{K_N^{h}}{N^{h} + K_N^{h}}, \\quad H_N(N_{\\text{set}}) = \\frac{K_N^{h}}{N_{\\text{set}}^{h} + K_N^{h}},\n$$\n$$\n\\frac{dC}{dt} = k_{\\text{pump}}\\,(C_{\\text{rest}} - C) + k_{\\text{cain}} \\,\\big(H_N(N) - H_N(N_{\\text{set}})\\big),\n$$\n其中 $K_N$ 是 $\\text{NAD}^{+}$ 的半效应水平， $h$ 是 $\\mathrm{Ca}^{2+}$ 内流能量依赖性的 Hill 系数， $k_{\\text{pump}}$ 是有效的 $\\mathrm{Ca}^{2+}$ 外排速率， $k_{\\text{cain}}$ 则用于缩放由能量崩溃驱动的内流幅度。\n\n- 钙蛋白酶活化 $P(t)$ 通过一个动态弛豫至平衡的 Hill 关系来追踪 $\\mathrm{Ca}^{2+}$：\n$$\nH_C(C) = \\frac{C^{m}}{C^{m} + K_C^{m}}, \\quad \\frac{dP}{dt} = k_{\\text{calp}}\\,(H_C(C) - P),\n$$\n其中 $K_C$ 是半活化 $\\mathrm{Ca}^{2+}$ 水平， $m$ 是钙蛋白酶活化协同性的 Hill 系数， $k_{\\text{calp}}$ 是一个弛豫速率常数。\n\n- 血影蛋白完整性 $S(t)$ 和血影蛋白分解产物 $B(t)$ 通过钙蛋白酶介导的裂解和 SBDP 清除而演变：\n$$\n\\frac{dS}{dt} = -k_{\\text{clv}}\\,P\\,S, \\quad \\frac{dB}{dt} = k_{\\text{clv}}\\,P\\,S - k_{\\text{deg}}\\,B,\n$$\n其中 $S(0)=1$ （单位归一化的完整血影蛋白池）且 $B(0)=0$。\n\n初始条件和单位：\n- 使用 $N(0)=N_{\\text{set}}$、 $C(0)=C_{\\text{rest}}$、 $P(0)=H_C(C_{\\text{rest}})$、 $S(0)=1$、 $B(0)=0$。\n- 时间 $t$ 以秒为单位， $\\mathrm{Ca}^{2+}$ 浓度 $C$ 必须以微摩尔为单位报告，而 $B$ 是无量纲的（表示为 SBDP 的初始血影蛋白池的比例）。\n\n所有模拟的固定参数：\n- $k_{\\text{sarm}} = 0.001 \\ \\text{s}^{-1}$\n- $k_{\\text{syn}} = 0.0001 \\ \\text{s}^{-1}$\n- $N_{\\text{set}} = 1$\n- $K_N = 0.5$\n- $h = 4$\n- $k_{\\text{pump}} = 0.02 \\ \\text{s}^{-1}$\n- $C_{\\text{rest}} = 0.1 \\ \\mu\\text{M}$\n- $k_{\\text{cain}} = 0.2 \\ \\mu\\text{M}\\,\\text{s}^{-1}$\n- $K_C = 0.5 \\ \\mu\\text{M}$\n- $m = 3$\n- $k_{\\text{calp}} = 1.0 \\ \\text{s}^{-1}$\n- $k_{\\text{clv}} = 0.01 \\ \\text{s}^{-1}$\n- $k_{\\text{deg}} = 0.001 \\ \\text{s}^{-1}$\n\n模拟方案：\n- 对于每个指定的抑制水平 $I$，使用数值稳定的方法在 $t \\in [0, 3600]$ 的区间上对常微分方程 (ODE) 系统进行积分。\n- 对每次运行，计算：\n  - 以微摩尔为单位的峰值 $\\mathrm{Ca}^{2+}$ 浓度 $C_{\\max}$。\n  - 峰值 SBDP 水平 $B_{\\max}$ （无量纲）。\n- 将针对给定 $I$ 的血影蛋白蛋白水解的保护程度定义为一个十进制数：\n$$\n\\Pi(I) = 1 - \\frac{B_{\\max}(I)}{B_{\\max}(0)}.\n$$\n对于控制案例 $I=0$，定义 $\\Pi(0)=0$。\n\n测试套件：\n- 使用以下 SARM1 抑制分数 $I$：\n  - $I = 0.0$\n  - $I = 0.4$\n  - $I = 0.7$\n  - $I = 0.9$\n  - $I = 1.0$\n\n答案规格：\n- 对于上述列表中的每个测试案例，按顺序生成一个包含三个浮点数的列表： $[C_{\\max}, B_{\\max}, \\Pi(I)]$。\n- 将 $C_{\\max}$ 以微摩尔表示， $B_{\\max}$ 为无量纲。报告所有三个值，并四舍五入到三位小数。\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，列表中的每个元素本身就是针对一个测试案例的列表。例如：\n\"[ [c1,b1,p1],[c2,b2,p2],... ]\"", "solution": "该解决方案需要对一个由五个耦合的非线性常微分方程 (ODE) 组成的系统进行数值积分，该系统模拟了轴突变性中的一个关键分子通路。该系统描述了五个状态变量的动力学：$\\text{NAD}^{+}$ 浓度 $N(t)$、细胞溶质 $\\mathrm{Ca}^{2+}$ 浓度 $C(t)$、活化钙蛋白酶分数 $P(t)$、完整血影蛋白分数 $S(t)$ 以及血影蛋白分解产物分数 $B(t)$。\n\n该模型由以下 ODE 系统定义：\n1.  $\\text{NAD}^{+}$ 动力学： $\\frac{dN}{dt} = -k_{\\text{sarm}}\\,(1 - I)\\,N + k_{\\text{syn}}\\,(N_{\\text{set}} - N)$\n2.  $\\mathrm{Ca}^{2+}$ 动力学： $\\frac{dC}{dt} = k_{\\text{pump}}\\,(C_{\\text{rest}} - C) + k_{\\text{cain}} \\,\\big(H_N(N) - H_N(N_{\\text{set}})\\big)$\n3.  钙蛋白酶动力学： $\\frac{dP}{dt} = k_{\\text{calp}}\\,(H_C(C) - P)$\n4.  血影蛋白动力学： $\\frac{dS}{dt} = -k_{\\text{clv}}\\,P\\,S$\n5.  SBDP 动力学： $\\frac{dB}{dt} = k_{\\text{clv}}\\,P\\,S - k_{\\text{deg}}\\,B$\n\n用于协同效应的辅助 Hill 函数由以下公式给出：\n-   $H_N(N) = \\frac{K_N^{h}}{N^{h} + K_N^{h}}$ 用于描述膜完整性对 $\\text{NAD}^{+}$ 的依赖性。\n-   $H_C(C) = \\frac{C^{m}}{C^{m} + K_C^{m}}$ 用于描述钙蛋白酶活化对 $\\mathrm{Ca}^{2+}$ 的依赖性。\n\n解决方案策略包括以下逻辑步骤序列。\n\n首先，我们建立系统在时间 $t=0$ 时的初始条件。问题指明 $N(0)=N_{\\text{set}}=1$、$C(0)=C_{\\text{rest}}=0.1 \\, \\mu\\text{M}$、$S(0)=1$ 以及 $B(0)=0$。初始钙蛋白酶活化 $P(0)$ 是根据静息钙水平下的稳态假设推导出来的，此时钙蛋白酶活化与基础 $\\mathrm{Ca}^{2+}$ 浓度处于平衡状态，因此 $P(0) = H_C(C_{\\text{rest}})$。使用提供的参数 $K_C = 0.5 \\, \\mu\\text{M}$ 和 $m=3$，我们计算得出：\n$$ P(0) = H_C(C_{\\text{rest}}) = \\frac{C_{\\text{rest}}^m}{C_{\\text{rest}}^m + K_C^m} = \\frac{(0.1)^3}{(0.1)^3 + (0.5)^3} = \\frac{0.001}{0.001 + 0.125} \\approx 0.0079365 $$\n因此，完整的初始状态向量为 $\\mathbf{y}_0 = [N(0), C(0), P(0), S(0), B(0)]^T$。\n\n其次，钙动力学方程中的项 $H_N(N_{\\text{set}})$ 是一个常数值，代表在稳态 $\\text{NAD}^{+}$ 水平下的基线钙内流分量。该项确保在没有 $\\text{NAD}^{+}$ 耗竭性损伤的情况下，系统保持在其静息状态。我们预先计算这个常数：\n$$ H_N(N_{\\text{set}}) = \\frac{K_N^h}{N_{\\text{set}}^h + K_N^h} = \\frac{(0.5)^4}{(1)^4 + (0.5)^4} = \\frac{0.0625}{1 + 0.0625} \\approx 0.0588235 $$\n在这些初始条件下，如果 SARM1 被完全抑制 ($I=1$)，则 $N$、$C$ 和 $P$ 的时间导数均为零，这正确地表示了一个稳定、未受扰动的状态。退行性级联反应由 SARM1 活性引发，对应于 $I<1$。\n\n第三，对于集合 $\\{0.0, 0.4, 0.7, 0.9, 1.0\\}$ 中每个指定的 SARM1 抑制水平 $I$，我们必须在时间间隔 $t \\in [0, 3600]$ 秒上对五个 ODE 组成的系统进行数值积分。为此，我们采用一个鲁棒的数值求解器，例如 SciPy 库提供的求解器 (`scipy.integrate.solve_ivp`)。该函数实现了自适应步长方法，如龙格-库塔算法 (Runge-Kutta algorithm)，以保证解的稳定性和准确性。\n\n第四，对于每个 $I$ 值，从得到的 $C(t)$ 和 $B(t)$ 的时间序列解中，我们找出在模拟区间内达到的最大值： $C_{\\max}(I) = \\max_{t \\in [0, 3600]} C(t)$ 和 $B_{\\max}(I) = \\max_{t \\in [0, 3600]} B(t)$。\n\n第五，我们计算保护程度 $\\Pi(I)$。该度量用于量化 SARM1 抑制的有效性。它需要来自未抑制 ($I=0$) 情况下的 $B_{\\max}(0)$ 值作为最大损伤的参考。公式为：\n$$ \\Pi(I) = 1 - \\frac{B_{\\max}(I)}{B_{\\max}(0)} $$\n根据定义，对于基准情况 $I=0$，保护程度为 $\\Pi(0)=0$。\n\n此严谨的程序被系统地应用于所有测试案例。最终输出的结构是一个列表的列表，其中每个内部列表包含给定 $I$ 值的三元组 $[C_{\\max}(I), B_{\\max}(I), \\Pi(I)]$，所有数值结果都四舍五入到三位小数。提供的 Python 代码精确地实现了这些步骤。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Solves the ODE system for axonal degeneration for different SARM1 inhibition levels.\n    \"\"\"\n    \n    # Define fixed parameters as a dictionary for clarity\n    params = {\n        'k_sarm': 0.001,    # s^-1\n        'k_syn': 0.0001,    # s^-1\n        'N_set': 1.0,       # dimensionless\n        'K_N': 0.5,         # dimensionless\n        'h': 4.0,           # dimensionless\n        'k_pump': 0.02,     # s^-1\n        'C_rest': 0.1,      # uM\n        'k_cain': 0.2,      # uM s^-1\n        'K_C': 0.5,         # uM\n        'm': 3.0,           # dimensionless\n        'k_calp': 1.0,      # s^-1\n        'k_clv': 0.01,      # s^-1\n        'k_deg': 0.001,     # s^-1\n    }\n\n    # Pre-calculate the constant term H_N(N_set) for the calcium ODE\n    H_N_set_val = params['K_N']**params['h'] / (params['N_set']**params['h'] + params['K_N']**params['h'])\n\n    def model(t, y, I, p, H_N_set_const):\n        \"\"\"\n        Defines the system of ordinary differential equations.\n        y: state vector [N, C, P, S, B]\n        t: time\n        I: SARM1 inhibition fraction\n        p: parameters dictionary\n        H_N_set_const: pre-calculated H_N(N_set)\n        \"\"\"\n        N, C, P, S, B = y\n        \n        # NAD+ dynamics (eq 1)\n        dN_dt = -p['k_sarm'] * (1.0 - I) * N + p['k_syn'] * (p['N_set'] - N)\n        \n        # Ca2+ dynamics (eq 2)\n        H_N = p['K_N']**p['h'] / (N**p['h'] + p['K_N']**p['h'])\n        dC_dt = p['k_pump'] * (p['C_rest'] - C) + p['k_cain'] * (H_N - H_N_set_const)\n\n        # Calpain dynamics (eq 3)\n        H_C = C**p['m'] / (C**p['m'] + p['K_C']**p['m'])\n        dP_dt = p['k_calp'] * (H_C - P)\n        \n        # Spectrin dynamics (eq 4)\n        dS_dt = -p['k_clv'] * P * S\n        \n        # SBDP dynamics (eq 5)\n        dB_dt = p['k_clv'] * P * S - p['k_deg'] * B\n        \n        return [dN_dt, dC_dt, dP_dt, dS_dt, dB_dt]\n\n    # Define initial conditions\n    N0 = params['N_set']\n    C0 = params['C_rest']\n    P0 = C0**params['m'] / (C0**params['m'] + params['K_C']**params['m'])\n    S0 = 1.0\n    B0 = 0.0\n    y0 = [N0, C0, P0, S0, B0]\n\n    # Define simulation time span and evaluation points\n    t_span = [0, 3600]\n    t_eval = np.linspace(t_span[0], t_span[1], 1500)\n\n    # Define the test suite of SARM1 inhibition fractions\n    test_cases_I = [0.0, 0.4, 0.7, 0.9, 1.0]\n    \n    # Store raw results before calculating protection magnitude\n    raw_results = []\n    \n    for I in test_cases_I:\n        # Solve the ODE system for the current inhibition level\n        sol = solve_ivp(\n            fun=model,\n            t_span=t_span,\n            y0=y0,\n            args=(I, params, H_N_set_val),\n            t_eval=t_eval,\n            method='RK45',\n            rtol=1e-6, \n            atol=1e-6\n        )\n\n        # Extract peak calcium and peak SBDP levels\n        C_max = np.max(sol.y[1])\n        B_max = np.max(sol.y[4])\n        raw_results.append({'I': I, 'C_max': C_max, 'B_max': B_max})\n\n    # Get the reference B_max(0) for calculating protection\n    try:\n        B_max_0 = next(item['B_max'] for item in raw_results if item['I'] == 0.0)\n    except StopIteration:\n        # This case should not be reached with the given test suite\n        B_max_0 = 0.0\n\n    # Process results to calculate protection and format for output\n    final_results = []\n    for res in raw_results:\n        I = res['I']\n        C_max = res['C_max']\n        B_max = res['B_max']\n        \n        if I == 0.0:\n            Pi_I = 0.0\n        else:\n            # Avoid division by zero if there's no damage in the baseline case\n            if B_max_0 > 1e-9:\n                Pi_I = 1.0 - (B_max / B_max_0)\n            else:\n                Pi_I = 0.0 if B_max  1e-9 else -np.inf # Should not occur\n        \n        final_results.append([\n            round(C_max, 3),\n            round(B_max, 3),\n            round(Pi_I, 3)\n        ])\n        \n    # Format the final output string as specified in the problem\n    output_str = \"[\" + \",\".join([str(res) for res in final_results]) + \"]\"\n    print(output_str)\n\nsolve()\n```", "id": "2731303"}]}