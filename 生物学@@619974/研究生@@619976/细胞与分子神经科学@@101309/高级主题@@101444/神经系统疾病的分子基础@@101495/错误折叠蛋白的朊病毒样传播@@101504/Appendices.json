{"hands_on_practices": [{"introduction": "种子诱导的聚合反应是朊病毒样蛋白传播的核心机制。本练习旨在演示如何利用简单的体外实验数据，计算出关键的生物物理参数——延伸速率常数 $k_+$。通过这个实践，你将学习如何运用动力学模型，从宏观测量结果（如半衰期）中揭示分子层面的反应速率，这对于理解和量化蛋白聚集过程至关重要。[@problem_id:2740797]", "problem": "在错误折叠的微管相关蛋白tau的朊病毒样传播中，纤维末端的模板化延伸将可溶性单体转化为纤维状聚集体。考虑一个充分混合的反应，其中初始浓度为$m_{0}$的tau单体通过两个过程聚合：产生新纤维的初级成核，以及将单体添加到现有纤维末端的延伸。假设没有断裂和次级成核。设 $m(t)$ 表示时间 $t$ 时的可溶性单体浓度，设 $P(t)$ 表示纤维状聚合物的数量浓度（每个聚合物有两个具有生长能力的末端）。根据延伸的质量作用动力学，由延伸引起的单体消耗速率与 $m(t)$ 和末端总数的乘积成正比。\n\n在一个未加晶种的对照实验中，在 $37\\,^{\\circ}\\mathrm{C}$ 时，消耗一半单体所测得的半衰期 $t_{1/2,\\mathrm{unseeded}}$ 为 $20\\,\\mathrm{h}$。在相同条件下进行的加晶种实验中，在 $t=0$ 时引入少量晶种浓度 $P_{0}$，使得对于所有 $t$ 都有 $P(t)\\approx P_{0}$（因为没有断裂，且相对于在预先存在的末端上进行的延伸，初级成核可以忽略不计），在 $P_{0}=0.50\\,\\mathrm{nM}$（聚合物数量浓度）时，测得的半衰期为 $t_{1/2,\\mathrm{seeded}}=1.5\\,\\mathrm{h}$。将加晶种的半衰期视作由延伸主导，并使用质量作用动力学和质量守恒来推导估算延伸速率常数 $k_{+}$ 所需的关系式。\n\n仅使用加晶种的条件和上述假设，计算 $k_{+}$ 并以 $\\mathrm{M^{-1}\\,s^{-1}}$ 为单位表示最终答案。将您的答案四舍五入至三位有效数字。在计算之前，通过比较 $t_{1/2,\\mathrm{unseeded}}$ 和 $t_{1/2,\\mathrm{seeded}}$，简要论证为什么在加晶种的动力学估算中忽略成核是合理的，但您的计算应仅基于为加晶种情况推导出的表达式。", "solution": "首先对问题陈述进行验证。\n\n**第一步：提取已知条件**\n- $m(t)$: 时间 $t$ 时的可溶性单体浓度。\n- $m_{0}$: 初始单体浓度。\n- $P(t)$: 纤维状聚合物的数量浓度。\n- 每个聚合物有两个具有生长能力的末端。\n- 由于延伸导致的单体消耗速率与 $m(t)$ 和末端总数成正比（质量作用动力学）。\n- 无断裂或次级成核。\n- 未加晶种的半衰期，$t_{1/2,\\mathrm{unseeded}} = 20\\,\\mathrm{h}$。\n- 加晶种的半衰期，$t_{1/2,\\mathrm{seeded}} = 1.5\\,\\mathrm{h}$。\n- 加晶种实验的初始晶种浓度，$P_{0} = 0.50\\,\\mathrm{nM}$。\n- 在加晶种实验中，对于所有 $t$ 都有 $P(t) \\approx P_{0}$。\n- 任务是计算延伸速率常数 $k_{+}$，单位为 $\\mathrm{M^{-1}\\,s^{-1}}$，并四舍五入至三位有效数字。\n\n**第二步：使用提取的已知条件进行验证**\n该问题具有科学依据，描述了生物物理化学中用于分析蛋白质聚集动力学的标准成核聚合模型。该问题提法恰当，提供了足够的信息来确定所求常数 $k_{+}$ 的唯一值，因为在一级过程半衰期的推导中，未知的初始单体浓度 $m_{0}$ 会被消去。问题陈述客观，术语精确。所提供的值对于体外聚集实验是物理上现实的。这些假设（无断裂、无次级成核、在加晶种情况下 $P(t) \\approx P_{0}$）是用于孤立出延伸过程的标准简化方法。该问题没有提法不当、自相矛盾或过于简单。\n\n**第三步：结论与行动**\n该问题有效。将提供完整解答。\n\n**求解过程推导**\n\n首先，我们论证在加晶种实验中忽略成核这一简化的合理性。在未加晶种的对照组中，单体消耗的半衰期为 $t_{1/2,\\mathrm{unseeded}} = 20\\,\\mathrm{h}$。这个相对较长的时间尺度反映了一个受缓慢的初级成核步骤限制的过程，该步骤是生成初始纤维所必需的，而这些纤维随后可以进行延伸。在加晶种的实验中，半衰期急剧减少至 $t_{1/2,\\mathrm{seeded}} = 1.5\\,\\mathrm{h}$。这种约 $\\frac{20}{1.5} \\approx 13.3$ 倍的加速表明，引入晶种 ($P_{0}$) 为单体消耗提供了一个比从头成核途径远为高效的途径。从预先存在的末端进行的延伸成为主导的动力学过程。因此，在实验的时间尺度上，忽略初级成核对加晶种反应中单体消耗的贡献是合理的。\n\n现在，我们仅基于加晶种的条件进行计算。设 $k_{+}$ 为一个单体分子添加到一个纤维末端的二级速率常数。题目陈述每个聚合物有 $2$ 个具有生长能力的末端。在加晶种实验中，活性末端的总浓度为 $2P(t)$。根据假设 $P(t) \\approx P_{0}$（成核和断裂可忽略不计），末端浓度是恒定的，等于 $2P_{0}$。\n\n根据质量作用动力学，单体消耗速率与单体浓度 $m(t)$ 和活性末端浓度成正比。单体浓度的微分方程为：\n$$\n\\frac{dm(t)}{dt} = -k_{+} \\cdot m(t) \\cdot (2P_{0})\n$$\n这是一个一阶线性常微分方程。我们可以将其整理为：\n$$\n\\frac{dm(t)}{m(t)} = -2 k_{+} P_{0} \\, dt\n$$\n我们对这个方程从时间 $t=0$ 到任意时间 $t$ 进行积分，对应的单体浓度从 $m(0) = m_{0}$ 变为 $m(t)$：\n$$\n\\int_{m_{0}}^{m(t)} \\frac{1}{m'} dm' = -2 k_{+} P_{0} \\int_{0}^{t} dt'\n$$\n$$\n\\ln(m(t)) - \\ln(m_{0}) = -2 k_{+} P_{0} t\n$$\n$$\n\\ln\\left(\\frac{m(t)}{m_{0}}\\right) = -2 k_{+} P_{0} t\n$$\n解出 $m(t)$，我们得到指数衰减函数：\n$$\nm(t) = m_{0} \\exp(-2 k_{+} P_{0} t)\n$$\n半衰期 $t_{1/2,\\mathrm{seeded}}$ 是单体浓度消耗至其初始值一半时的时间，即 $m(t_{1/2,\\mathrm{seeded}}) = m_{0}/2$。将此代入方程：\n$$\n\\frac{m_{0}}{2} = m_{0} \\exp(-2 k_{+} P_{0} t_{1/2,\\mathrm{seeded}})\n$$\n$$\n\\frac{1}{2} = \\exp(-2 k_{+} P_{0} t_{1/2,\\mathrm{seeded}})\n$$\n对两边取自然对数，得到：\n$$\n\\ln\\left(\\frac{1}{2}\\right) = -2 k_{+} P_{0} t_{1/2,\\mathrm{seeded}}\n$$\n$$\n-\\ln(2) = -2 k_{+} P_{0} t_{1/2,\\mathrm{seeded}}\n$$\n这给出了半衰期和速率常数之间的直接关系：\n$$\n\\ln(2) = 2 k_{+} P_{0} t_{1/2,\\mathrm{seeded}}\n$$\n我们需要计算 $k_{+}$。整理表达式：\n$$\nk_{+} = \\frac{\\ln(2)}{2 P_{0} t_{1/2,\\mathrm{seeded}}}\n$$\n现在，我们代入给定的值。单位必须转换为目标答案的基本单位（$\\mathrm{M}$ 和 $\\mathrm{s}$）。\n晶种浓度为 $P_{0} = 0.50\\,\\mathrm{nM} = 0.50 \\times 10^{-9}\\,\\mathrm{M}$。\n半衰期为 $t_{1/2,\\mathrm{seeded}} = 1.5\\,\\mathrm{h}$。我们将小时转换为秒：\n$$\nt_{1/2,\\mathrm{seeded}} = 1.5\\,\\mathrm{h} \\times \\frac{3600\\,\\mathrm{s}}{1\\,\\mathrm{h}} = 5400\\,\\mathrm{s}\n$$\n现在，将这些值代入 $k_{+}$ 的表达式中：\n$$\nk_{+} = \\frac{\\ln(2)}{2 \\cdot (0.50 \\times 10^{-9}\\,\\mathrm{M}) \\cdot (5400\\,\\mathrm{s})}\n$$\n$$\nk_{+} = \\frac{\\ln(2)}{(1.00 \\times 10^{-9}\\,\\mathrm{M}) \\cdot (5400\\,\\mathrm{s})}\n$$\n$$\nk_{+} = \\frac{\\ln(2)}{5.4 \\times 10^{-6}\\,\\mathrm{M \\cdot s}}\n$$\n使用值 $\\ln(2) \\approx 0.693147$：\n$$\nk_{+} \\approx \\frac{0.693147}{5.4 \\times 10^{-6}}\\,\\mathrm{M^{-1}\\,s^{-1}}\n$$\n$$\nk_{+} \\approx 128360.5\\,\\mathrm{M^{-1}\\,s^{-1}}\n$$\n$$\nk_{+} \\approx 1.283605 \\times 10^{5}\\,\\mathrm{M^{-1}\\,s^{-1}}\n$$\n将结果四舍五入到三位有效数字，我们得到：\n$$\nk_{+} = 1.28 \\times 10^{5}\\,\\mathrm{M^{-1}\\,s^{-1}}\n$$", "answer": "$$\\boxed{1.28 \\times 10^{5}}$$", "id": "2740797"}, {"introduction": "细胞内有毒蛋白聚集体的净积累量，取决于其形成与清除之间的动态平衡。本练习将经典的米氏-孟顿（Michaelis–Menten）酶动力学模型应用于蛋白酶介导的淀粉样蛋白种子降解问题。通过推导并计算种子的半衰期，你将对这一关键的细胞防御机制获得定量的理解，并深化对酶动力学如何调控细胞内物质浓度的认识。[@problem_id:2740752]", "problem": "在神经元中错误折叠蛋白的朊病毒样传播过程中，β-淀粉样蛋白（Aβ）种子的负荷通过蛋白酶介导的降解而减少。考虑一个单一、混合均匀的隔室，其中Aβ种子的浓度（表示为 $S(t)$）仅由一种蛋白酶降解而减少，该蛋白酶对酶-底物复合物遵循准稳态假设下的标准Michaelis–Menten速率定律。在所关注的时间窗口内，没有新种子的流入或产生，且蛋白酶浓度保持不变。最大降解速率为 $V_{\\max}$，Michaelis常数为 $K_{m}$。在时间 $t=0$ 时，初始种子浓度为 $S(0)=S_{0}$。\n\n使用标准Michaelis–Menten速率定律作为基本动力学描述，并对 $S(t)$ 进行质量平衡，从第一性原理推导出 $S(t)$ 达到 $S_{0}/2$ 时的时间 $t_{1/2}$ 的表达式。然后，使用以下参数计算该时间：$V_{\\max} = 4.00\\,\\text{nM}\\,\\text{min}^{-1}$，$K_{m} = 30.0\\,\\text{nM}$，以及 $S_{0} = 120\\,\\text{nM}$。以分钟为单位表示最终时间。将答案四舍五入到三位有效数字。", "solution": "问题陈述需经验证。\n\n**步骤1：提取已知条件**\n- **系统**：单一、混合均匀的隔室。\n- **过程**：蛋白酶对β-淀粉样蛋白（Aβ）种子 $S(t)$ 的降解。\n- **动力学**：遵循准稳态假设下的标准Michaelis–Menten速率定律。\n- **速率参数**：最大降解速率为 $V_{\\max}$，Michaelis常数为 $K_{m}$。\n- **质量平衡条件**：没有新种子的流入或产生。蛋白酶浓度恒定。\n- **初始条件**：$S(0) = S_{0}$。\n- **目标**：推导出 $S(t) = S_{0}/2$ 时的时间 $t_{1/2}$ 的表达式。\n- **数值**：$V_{\\max} = 4.00\\,\\text{nM}\\,\\text{min}^{-1}$，$K_{m} = 30.0\\,\\text{nM}$，$S_{0} = 120\\,\\text{nM}$。\n- **最终计算**：以分钟为单位计算 $t_{1/2}$，并四舍五入到三位有效数字。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题具有科学依据，因为它采用Michaelis–Menten模型（酶动力学的基本原理）来描述一个公认的生物过程。该问题是适定的，它提供了一个具有明确初始条件和特定目标状态的微分方程，从而确保了唯一且有意义的解。该问题是客观的，使用了精确、无歧义的科学术语。所有必要的参数都已提供，并且它们的单位是一致的。因此，该问题是有效的。\n\n**步骤3：结论与操作**\n问题有效。我们继续进行推导。\n\n控制底物（Aβ种子）浓度 $S(t)$ 的基本原理是质量平衡定律。鉴于没有种子的流入或产生，种子浓度的变化率等于其降解速率的负值。降解速率 $v$ 由Michaelis–Menten方程描述：\n$$v = \\frac{V_{\\max} S(t)}{K_{m} + S(t)}$$\n因此，该系统的控制常微分方程（ODE）为：\n$$\\frac{dS}{dt} = -v = -\\frac{V_{\\max} S(t)}{K_{m} + S(t)}$$\n这是一个可分离变量的常微分方程。为了求解浓度从初始值 $S_{0}$ 变为后续值 $S(t)$ 所需的时间，我们重排方程以分离变量 $S$ 和 $t$：\n$$\\frac{K_{m} + S}{S} dS = -V_{\\max} dt$$\n简化左侧可得：\n$$\\left(\\frac{K_{m}}{S} + 1\\right) dS = -V_{\\max} dt$$\n我们对等式两边进行积分。浓度 $S$ 在时间从 $t=0$ 到 $t$ 的过程中，从其初始值 $S(0) = S_{0}$ 变为最终值 $S(t)$。\n$$\\int_{S_{0}}^{S(t)} \\left(\\frac{K_{m}}{S'} + 1\\right) dS' = \\int_{0}^{t} -V_{\\max} dt'$$\n对两边执行积分可得：\n$$\\left[ K_{m} \\ln(S') + S' \\right]_{S_{0}}^{S(t)} = \\left[ -V_{\\max} t' \\right]_{0}^{t}$$\n计算定积分结果为：\n$$\\left( K_{m} \\ln(S(t)) + S(t) \\right) - \\left( K_{m} \\ln(S_{0}) + S_{0} \\right) = -V_{\\max} t$$\n这个方程给出了 $S(t)$ 的一个隐式关系。更方便的做法是显式地解出时间 $t$：\n$$V_{\\max} t = \\left( K_{m} \\ln(S_{0}) + S_{0} \\right) - \\left( K_{m} \\ln(S(t)) + S(t) \\right)$$\n$$V_{\\max} t = (S_{0} - S(t)) + K_{m} (\\ln(S_{0}) - \\ln(S(t)))$$\n$$V_{\\max} t = (S_{0} - S(t)) + K_{m} \\ln\\left(\\frac{S_{0}}{S(t)}\\right)$$\n达到浓度 $S(t)$ 所需时间 $t$ 的表达式为：\n$$t = \\frac{1}{V_{\\max}} \\left[ (S_{0} - S(t)) + K_{m} \\ln\\left(\\frac{S_{0}}{S(t)}\\right) \\right]$$\n我们的任务是找到浓度达到其初始值一半时的时间 $t_{1/2}$，即 $S(t_{1/2}) = S_{0}/2$。我们将此条件代入推导出的 $t$ 的表达式中：\n$$t_{1/2} = \\frac{1}{V_{\\max}} \\left[ \\left(S_{0} - \\frac{S_{0}}{2}\\right) + K_{m} \\ln\\left(\\frac{S_{0}}{S_{0}/2}\\right) \\right]$$\n简化此表达式可得到 $t_{1/2}$ 的最终解析形式：\n$$t_{1/2} = \\frac{1}{V_{\\max}} \\left[ \\frac{S_{0}}{2} + K_{m} \\ln(2) \\right]$$\n现在，我们代入给定的数值：$V_{\\max} = 4.00\\,\\text{nM}\\,\\text{min}^{-1}$，$K_{m} = 30.0\\,\\text{nM}$，以及 $S_{0} = 120\\,\\text{nM}$。\n$$t_{1/2} = \\frac{1}{4.00} \\left[ \\frac{120}{2} + 30.0 \\ln(2) \\right]$$\n单位为 $(\\text{nM}\\,\\text{min}^{-1})^{-1} \\times (\\text{nM} + \\text{nM}) = \\text{min}$，这是正确的。\n$$t_{1/2} = \\frac{1}{4.00} \\left[ 60.0 + 30.0 \\ln(2) \\right]$$\n使用 $\\ln(2) \\approx 0.693147$ 的值：\n$$t_{1/2} \\approx \\frac{1}{4.00} \\left[ 60.0 + 30.0 \\times 0.693147 \\right]$$\n$$t_{1/2} \\approx \\frac{1}{4.00} \\left[ 60.0 + 20.79441 \\right]$$\n$$t_{1/2} \\approx \\frac{80.79441}{4.00}$$\n$$t_{1/2} \\approx 20.1986\\,\\text{min}$$\n将结果四舍五入到三位有效数字，我们得到 $20.2\\,\\text{min}$。", "answer": "$$ \\boxed{20.2} $$", "id": "2740752"}, {"introduction": "为了理解病理蛋白如何在整个大脑中扩散，我们需要将局部复制的动力学原理与轴突运输模型相结合。这项高级实践将挑战你构建一个简洁而强大的体内传播模型，并将其线性化以便拟合模拟的实验数据。通过这个过程，你将估算出关键的生物学参数，如有效运输速度 $v$ 和复制速率 $k_r$，从而搭建起从分子动力学到系统层面神经退行性病变的桥梁。[@problem_id:2740804]", "problem": "考虑一个用于 tau P301S 小鼠品系中错误折叠蛋白聚集体朊病毒样传播的最小机理模型，该模型专注于由近似线性、有向的轴突束连接的下游区域。假设存在以下基本依据，这些依据在细胞和分子神经科学的聚集体传播模型中被广泛使用：\n\n- 局部聚集体扩增遵循一级质量作用动力学，因此在种子到达后，一个区域内的聚集体数量 $A(t)$ 遵循 $\\frac{dA}{dt} = k_r A$，其中 $k_r$ 是有效复制速率常数（单位为 $\\text{week}^{-1}$）。\n- 沿着长度为 $\\ell$ 的轴突束的有效有向轴突运输以近似恒定的有效速度 $v$（单位为 $\\text{mm}/\\text{week}$）进行，因此平均到达时间等于穿越该轴突束的行进时间。\n\n令 $A_0$ 表示到达下游区域瞬间的聚集体数量，令 $A_\\theta$ 表示首次将病理状态评分为存在的固定检测阈值。观察到的病理发病时间 $t_{\\text{onset}}$ 是从源区域播种到下游区域首次达到 $A_\\theta$ 所经过的时间。\n\n任务：\n\n1. 从上述两个基本依据和标准微积分出发，推导连接 $t_{\\text{onset}}$、$\\ell$、$v$、$k_r$、$A_0$ 和 $A_\\theta$ 的关系式。您的推导应明确区分运输时间和局部复制时间。\n2. 证明该关系式可以表示为关于轴突束长度 $\\ell$ 的线性模型形式 $t_{\\text{onset}} = s\\,\\ell + c$，并用 $v$、$k_r$、$A_0$ 和 $A_\\theta$ 表示 $s$ 和 $c$。\n3. 设计一个算法，在给定数据 $\\{(\\ell_i, t_i)\\}_{i=1}^n$ 以及已知的 $A_0$ 和 $A_\\theta$ 的情况下，通过将线性模型与数据进行最小二乘拟合来估计 $v$ 和 $k_r$。您的算法应：\n   - 通过最小化 $\\sum_i (t_i - s\\,\\ell_i - c)^2$ 来估计斜率 $s$ 和截距 $c$。\n   - 从 $s$ 和 $c$ 中恢复 $v$ 和 $k_r$。\n   - 确保正确处理单位，使得 $v$ 的单位为 $\\text{mm}/\\text{week}$，$k_r$ 的单位为 $\\text{week}^{-1}$。\n\n实现要求：\n\n- 实现一个程序，使用普通最小二乘法对线性化模型进行拟合，为下面提供的每个测试用例求解 $v$ 和 $k_r$。对任何对数量均使用自然对数。\n- $v$ 和 $k_r$ 的最终数值答案必须四舍五入到三位小数。\n- 您的程序必须生成单行输出，其中包含一个逗号分隔的列表的列表形式的结果，不含多余空格，格式为“[[v1,kr1],[v2,kr2],...]”，其中每个值都是四舍五入到三位小数的浮点数。\n\n测试套件（所有时间单位为周，长度单位为毫米，$A_0$ 和 $A_\\theta$ 的单位为相同的任意浓度单位，因此它们的比率是无量纲的）：\n\n- 案例1（一般情况；多种长度）：\n  - $\\ell = [1.0, 2.0, 4.0, 6.0]$\n  - $t = [17.8095238095, 18.4761904762, 19.8095238095, 21.1428571429]$\n  - $A_0 = 1.0$, $A_\\theta = 162754.79141900392$\n- 案例2（边界情况，包含零长度目标区域）：\n  - $\\ell = [0.0, 3.0, 10.0]$\n  - $t = [7.5, 9.0, 12.5]$\n  - $A_0 = 1.0$, $A_\\theta = 8103.083927575384$\n- 案例3（较长的轴突束长度）：\n  - $\\ell = [2.5, 5.0, 12.5]$\n  - $t = [25.125, 28.25, 37.625]$\n  - $A_0 = 1.0$, $A_\\theta = 59874.14171519782$\n\n答案要求：\n\n- 以 $\\text{mm}/\\text{week}$ 为单位表示 $v$，以 $\\text{week}^{-1}$ 为单位表示 $k_r$。\n- 两者均四舍五入到三位小数。\n- 输出格式必须为单行字符串，形式为“[[v1,kr1],[v2,kr2],[v3,kr3]]”，且不含任何空格。", "solution": "对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 局部聚集体扩增动力学：$\\frac{dA}{dt} = k_r A$，其中 $k_r$ 是复制速率常数，单位为 $\\text{week}^{-1}$。\n- 轴突运输模型：沿长度为 $\\ell$ 的轴突束的恒定有效速度 $v$（单位为 $\\text{mm}/\\text{week}$）。平均到达时间即行进时间 $\\ell/v$。\n- 到达时的聚集体数量（复制的初始条件）：$A_0$。\n- 病理检测阈值：$A_\\theta$。\n- 病理发病时间：$t_{\\text{onset}}$，从源头播种到下游区域聚集体数量达到 $A_\\theta$ 的总时间。\n- 用于拟合的数据：一组 $n$ 个测量值 $\\{(\\ell_i, t_i)\\}_{i=1}^n$。\n- 目标：\n    1. 推导 $t_{\\text{onset}}$ 关于 $\\ell$、$v$、$k_r$、$A_0$ 和 $A_\\theta$ 的表达式。\n    2. 证明该关系式是一个线性模型 $t_{\\text{onset}} = s\\,\\ell + c$，并找出 $s$ 和 $c$ 的表达式。\n    3. 设计一个最小二乘算法，根据数据估计 $v$ 和 $k_r$。\n\n**步骤2：使用提取的已知条件进行验证**\n根据所需标准对问题进行评估。\n- **科学性**：问题有效。它采用了一个标准的简化模型来描述错误折叠蛋白聚集体的传播，这是研究阿尔茨海默病和帕金森病等神经退行性疾病的核心课题。一级复制动力学和恒速运输的假设是此类模型常见且合理的出发点。\n- **良构性**：问题有效。它结构清晰，有明确的变量、显式的假设，以及一系列导向具体计算目标的任务。对于推导和参数估计，都可以获得唯一的解。\n- **客观性**：问题有效。其语言精确、技术性强，不含任何主观或非科学内容。\n\n**步骤3：结论与行动**\n问题有效。这是一个在定量生物建模方面构思良好的练习，基于生物物理学和数据分析的既定原则。我将继续进行解答。\n\n---\n\n**1. 发病时间关系的推导**\n\n病理总发病时间 $t_{\\text{onset}}$ 是两个不同连续过程所需时间的总和：初始种子从源区域行进到下游区域所需的时间（运输时间，$t_{\\text{transport}}$），以及随后局部聚集体群体从其初始种子数量扩增到检测阈值所需的时间（复制时间，$t_{\\text{replication}}$）。\n\n$$t_{\\text{onset}} = t_{\\text{transport}} + t_{\\text{replication}}$$\n\n根据问题陈述，沿长度为 $\\ell$ 的轴突束以有效速度 $v$ 进行的运输过程，其运输时间为：\n$$t_{\\text{transport}} = \\frac{\\ell}{v}$$\n\n局部复制过程由一级动力学方程控制：\n$$\\frac{dA}{dt} = k_r A(t)$$\n其中这里的 $t$ 代表自种子到达后经过的时间。这是一个可分离的常微分方程。我们使用初始条件求解它，即在到达时刻（$t=0$），聚集体数量为 $A(0) = A_0$。\n\n$$\\int_{A_0}^{A(t')} \\frac{dA}{A} = \\int_{0}^{t'} k_r dt$$\n$$[\\ln A]_{A_0}^{A(t')} = [k_r t]_{0}^{t'}$$\n$$\\ln(A(t')) - \\ln(A_0) = k_r t'$$\n$$\\ln\\left(\\frac{A(t')}{A_0}\\right) = k_r t'$$\n\n求解作为时间函数的聚集体数量 $A(t')$：\n$$A(t') = A_0 e^{k_r t'}$$\n\n复制时间 $t_{\\text{replication}}$ 是聚集体数量 $A(t')$ 达到检测阈值 $A_\\theta$ 时的时间 $t'$。我们设 $A(t_{\\text{replication}}) = A_\\theta$：\n$$A_\\theta = A_0 e^{k_r t_{\\text{replication}}}$$\n\n我们求解 $t_{\\text{replication}}$：\n$$\\frac{A_\\theta}{A_0} = e^{k_r t_{\\text{replication}}}$$\n对两边取自然对数：\n$$\\ln\\left(\\frac{A_\\theta}{A_0}\\right) = k_r t_{\\text{replication}}$$\n$$t_{\\text{replication}} = \\frac{1}{k_r} \\ln\\left(\\frac{A_\\theta}{A_0}\\right)$$\n\n结合 $t_{\\text{transport}}$ 和 $t_{\\text{replication}}$ 的表达式，我们得到 $t_{\\text{onset}}$ 的完整关系式：\n$$t_{\\text{onset}} = \\frac{\\ell}{v} + \\frac{1}{k_r} \\ln\\left(\\frac{A_\\theta}{A_0}\\right)$$\n\n**2. 模型的线性化**\n\n推导出的关系可以重新整理，以突显其对轴突束长度 $\\ell$ 的依赖性：\n$$t_{\\text{onset}} = \\left(\\frac{1}{v}\\right)\\ell + \\frac{1}{k_r} \\ln\\left(\\frac{A_\\theta}{A_0}\\right)$$\n\n这个表达式是标准线性形式 $y = mx + b$，或者如问题中所指定的 $t_{\\text{onset}} = s\\,\\ell + c$。通过直接比较，我们可以确定斜率 $s$ 和 y 轴截距 $c$：\n\n斜率 $s$ 是 $\\ell$ 的系数：\n$$s = \\frac{1}{v}$$\n\n截距 $c$ 是常数项，代表零长度轴突束（$\\ell=0$）的发病时间：\n$$c = \\frac{1}{k_r} \\ln\\left(\\frac{A_\\theta}{A_0}\\right)$$\n\n**3. 参数估计算法**\n\n给定一个包含 $n$ 对观测到的轴突束长度和发病时间的数据集 $\\{(\\ell_i, t_i)\\}_{i=1}^n$，以及已知的常数 $A_0$ 和 $A_\\theta$，我们可以估计物理参数 $v$ 和 $k_r$。\n\n该算法按以下步骤进行：\n\n- **步骤1：估计斜率（$s$）和截距（$c$）。**\n我们使用普通最小二乘法（OLS）将线性模型 $t_i = s\\,\\ell_i + c$ 拟合到数据。这涉及找到使残差平方和 $SSR = \\sum_{i=1}^n (t_i - (s\\,\\ell_i + c))^2$ 最小化的 $s$ 和 $c$ 的值。\nOLS 的标准解析解是：\n$$s = \\frac{n \\sum_{i=1}^n \\ell_i t_i - (\\sum_{i=1}^n \\ell_i)(\\sum_{i=1}^n t_i)}{n \\sum_{i=1}^n \\ell_i^2 - (\\sum_{i=1}^n \\ell_i)^2}$$\n$$c = \\bar{t} - s\\bar{\\ell}$$\n其中 $\\bar{t} = \\frac{1}{n}\\sum_{i=1}^n t_i$ 且 $\\bar{\\ell} = \\frac{1}{n}\\sum_{i=1}^n \\ell_i$。在实践中，这些估计值是使用标准数值库获得的。\n\n- **步骤2：恢复物理参数（$v$ 和 $k_r$）。**\n一旦估计出统计参数 $s$ 和 $c$，我们就反转前一节中推导出的关系，以求出物理参数。\n\n根据 $s = \\frac{1}{v}$，有效运输速度 $v$ 为：\n$$v = \\frac{1}{s}$$\n单位是一致的：如果 $s$ 的单位是 $\\text{week}/\\text{mm}$，那么 $v$ 的单位就是 $\\text{mm}/\\text{week}$。\n\n根据 $c = \\frac{1}{k_r} \\ln\\left(\\frac{A_\\theta}{A_0}\\right)$，有效复制速率常数 $k_r$ 为：\n$$k_r = \\frac{1}{c} \\ln\\left(\\frac{A_\\theta}{A_0}\\right)$$\n单位是一致的：如果 $c$ 的单位是 $\\text{weeks}$，并且对数是无量纲的，那么 $k_r$ 的单位就是 $\\text{week}^{-1}$。\n\n这便完成了算法的设计。只要 $s \\neq 0$ 且 $c \\neq 0$，该算法就是稳健的。考虑到问题的物理性质，即病理随时间传播，我们预期 $s > 0$ 且 $c > 0$。\n\n```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the effective transport velocity (v) and replication rate (k_r)\n    for a series of test cases based on a linearized model of prion-like propagation.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"l\": np.array([1.0, 2.0, 4.0, 6.0]),\n            \"t\": np.array([17.8095238095, 18.4761904762, 19.8095238095, 21.1428571429]),\n            \"A0\": 1.0,\n            \"A_theta\": 162754.79141900392\n        },\n        {\n            \"l\": np.array([0.0, 3.0, 10.0]),\n            \"t\": np.array([7.5, 9.0, 12.5]),\n            \"A0\": 1.0,\n            \"A_theta\": 8103.083927575384\n        },\n        {\n            \"l\": np.array([2.5, 5.0, 12.5]),\n            \"t\": np.array([25.125, 28.25, 37.625]),\n            \"A0\": 1.0,\n            \"A_theta\": 59874.14171519782\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        ell = case[\"l\"]\n        t_onset = case[\"t\"]\n        A0 = case[\"A0\"]\n        A_theta = case[\"A_theta\"]\n\n        # Step 1: Estimate slope (s) and intercept (c) using OLS.\n        # np.polyfit with deg=1 performs a linear least-squares fit.\n        # It returns coefficients [slope, intercept].\n        s, c = np.polyfit(ell, t_onset, 1)\n\n        # Step 2: Recover physical parameters v and k_r from s and c.\n        \n        # Velocity v is the reciprocal of the slope s.\n        # s is in week/mm, so v is in mm/week.\n        v = 1.0 / s\n\n        # Replication rate k_r is derived from the intercept c.\n        # c is in weeks, log term is dimensionless, so k_r is in week^-1.\n        # np.log is the natural logarithm.\n        k_r = np.log(A_theta / A0) / c\n        \n        # Round the final values to three decimal places as required.\n        v_rounded = round(v, 3)\n        k_r_rounded = round(k_r, 3)\n\n        results.append([v_rounded, k_r_rounded])\n\n    # Final print statement must produce a single line in the exact specified format.\n    # The str() representation of a list of lists is '[[...], [...]]',\n    # so we remove spaces to match the required format \"[[...],[...]]\".\n    return str(results).replace(\" \", \"\")\n\n# In a real execution environment, this function would be called and its\n# output captured. For this context, the answer is the result of this call.\n# print(solve())\n```", "answer": "[[1.500,0.700],[2.000,1.200],[0.800,0.500]]", "id": "2740804"}]}