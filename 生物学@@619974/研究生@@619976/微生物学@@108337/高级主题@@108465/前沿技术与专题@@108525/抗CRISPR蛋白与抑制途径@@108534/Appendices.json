{"hands_on_practices": [{"introduction": "在研究抗CRISPR（Acr）蛋白与其CRISPR-Cas靶标之间的相互作用时，一个核心问题是它们结合的紧密程度。本练习将引导你运用一个关键的生物物理学原理：一个蛋白质复合物的结构特征（特别是其相互作用界面上埋藏的表面积）与其热力学稳定性（由解离常数 $K_d$ 量化）之间的联系。通过这个基于结构数据的估算练习，你将能更好地理解蛋白质相互作用的物理基础，并掌握在实验设计早期阶段进行数量级估算的重要技能 [@problem_id:2471922]。", "problem": "一种抗CRISPR (Acr) 蛋白通过蛋白质-蛋白质界面抑制一种CRISPR相关 (Cas) 核酸酶，根据溶剂可及表面积计算估算，在复合物形成时该界面埋藏的面积为 $A_{\\mathrm{buried}}=1200\\,\\text{\\AA}^{2}$。假设，在一级近似下，结合标准吉布斯自由能与埋藏表面积近似成线性关系，即 $\\Delta G^{\\circ}_{\\mathrm{bind}} \\approx \\alpha\\,A_{\\mathrm{buried}}$，其中 $\\alpha=-0.020\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\text{\\AA}^{-2}$ 是一个经验性的界面自由能密度。在温度 $T=298\\,\\mathrm{K}$、标准态为 $1\\,\\mathrm{M}$ 的条件下，使用将双分子结合反应的标准吉布斯自由能与平衡解离常数联系起来的统计热力学定义，估算Acr–Cas复合物的平衡解离常数 $K_{d}$。取摩尔气体常数为 $R=1.987\\times 10^{-3}\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$。以摩尔浓度单位表示最终答案，并四舍五入到一位有效数字。", "solution": "首先验证问题陈述的科学合理性、一致性和完整性。\n\n**步骤1：提取已知条件**\n-   复合物形成时埋藏的表面积：$A_{\\mathrm{buried}} = 1200\\,\\text{\\AA}^{2}$。\n-   经验性界面自由能密度：$\\alpha = -0.020\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\text{\\AA}^{-2}$。\n-   结合标准吉布斯自由能的关系式：$\\Delta G^{\\circ}_{\\mathrm{bind}} \\approx \\alpha\\,A_{\\mathrm{buried}}$。\n-   温度：$T = 298\\,\\mathrm{K}$。\n-   摩尔气体常数：$R = 1.987 \\times 10^{-3}\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$。\n-   溶质的标准态：$1\\,\\mathrm{M}$。\n-   目标：估算平衡解离常数 $K_{d}$。\n-   最终格式：以摩尔浓度单位表示，并四舍五入到一位有效数字。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题具有科学依据。它涉及蛋白质-蛋白质相互作用的热力学，这是生物物理化学的核心课题。吉布斯自由能与埋藏表面积之间的线性关系是一种标准的经验近似（“疏水效应”模型）。将 $\\Delta G^{\\circ}$ 与平衡常数联系起来的方程是化学热力学的基本原理。所有提供的值对于此类系统都是物理上现实的。这个问题是适定的，因为它提供了一个明确的目标以及实现该目标所需的所有数据和关系，从而可以得出一个唯一的解。其语言客观而精确。因此，该问题被认为是有效的。\n\n**步骤3：求解**\n求解过程首先计算结合标准吉布斯自由能 $\\Delta G^{\\circ}_{\\mathrm{bind}}$，然后通过基本的热力学原理将该量与平衡解离常数 $K_{d}$ 联系起来。\n\n首先，我们使用给定的线性近似计算 $\\Delta G^{\\circ}_{\\mathrm{bind}}$。\n$$\n\\Delta G^{\\circ}_{\\mathrm{bind}} = \\alpha \\cdot A_{\\mathrm{buried}}\n$$\n代入所给数值：\n$$\n\\Delta G^{\\circ}_{\\mathrm{bind}} = (-0.020\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\text{\\AA}^{-2}) \\times (1200\\,\\text{\\AA}^{2}) = -24\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\n$$\n\n接下来，我们将标准吉布斯自由能与平衡常数联系起来。Acr–Cas复合物的解离由以下平衡表示：\n$$\n\\text{Acr-Cas} \\rightleftharpoons \\text{Acr} + \\text{Cas}\n$$\n该反应的平衡常数是解离常数 $K_{d}$。此解离反应的标准吉布斯自由能变 $\\Delta G^{\\circ}_{\\mathrm{diss}}$ 与 $K_{d}$ 的关系由以下方程给出：\n$$\n\\Delta G^{\\circ}_{\\mathrm{diss}} = -RT \\ln K_{d}\n$$\n解离反应是我们计算了 $\\Delta G^{\\circ}_{\\mathrm{bind}}$ 的结合（缔合）反应的逆反应。因此，它们的标准吉布斯自由能符号相反：\n$$\n\\Delta G^{\\circ}_{\\mathrm{diss}} = -\\Delta G^{\\circ}_{\\mathrm{bind}}\n$$\n将此代入前一个方程，得到：\n$$\n-\\Delta G^{\\circ}_{\\mathrm{bind}} = -RT \\ln K_{d}\n$$\n这可以简化为：\n$$\n\\Delta G^{\\circ}_{\\mathrm{bind}} = RT \\ln K_{d}\n$$\n现在我们可以求解 $K_{d}$：\n$$\nK_{d} = \\exp\\left(\\frac{\\Delta G^{\\circ}_{\\mathrm{bind}}}{RT}\\right)\n$$\n现在我们代入数值。首先，我们计算乘积 $RT$：\n$$\nRT = (1.987 \\times 10^{-3}\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}) \\times (298\\,\\mathrm{K}) \\approx 0.592126\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\n$$\n现在，我们可以计算指数的值：\n$$\n\\frac{\\Delta G^{\\circ}_{\\mathrm{bind}}}{RT} = \\frac{-24\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}}{0.592126\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}} \\approx -40.53\n$$\n最后，我们计算 $K_{d}$。由于标准态定义为 $1\\,\\mathrm{M}$，单位将是摩尔浓度 ($\\mathrm{M}$)。\n$$\nK_{d} = \\exp(-40.53) \\approx 8.3 \\times 10^{-18}\\,\\mathrm{M}\n$$\n题目要求最终答案四舍五入到一位有效数字。值 $\\alpha = -0.020\\,\\mathrm{kcal}\\,\\mathrm{mol}^{-1}\\,\\text{\\AA}^{-2}$ 有两位有效数字，面积 $A_{\\mathrm{buried}} = 1200\\,\\text{\\AA}^{2}$ 被视为至少有两位有效数字。必须遵循四舍五入到一位有效数字的明确指令。\n$$\nK_{d} \\approx 8 \\times 10^{-18}\\,\\mathrm{M}\n$$", "answer": "$$\\boxed{8 \\times 10^{-18}}$$", "id": "2471922"}, {"introduction": "理解了Acr蛋白与Cas核酸酶的结合强度后，下一步是探究这种结合如何影响酶的催化功能。本练习将带你深入经典的米氏动力学框架，特别是竞争性抑制模型，其中Acr蛋白与底物DNA竞争结合Cas核酸酶的活性位点 [@problem_id:2472003]。通过推导并计算表观米氏常数（$K_m^{app}$），你将能够量化地理解竞争性抑制剂如何改变酶对底物的依赖性，这是酶学和药物研发中的一个基石概念。", "problem": "一项脱氧核糖核酸（DNA）切割实验测量了在有和没有抗CRISPR（anti-CRISPR, Acr）蛋白存在时，由CRISPR相关（Cas）核酸酶对目标DNA的初始转换速率。该Acr蛋白与核酸酶进行竞争性结合，且其结合与底物DNA的结合是相互排斥的。假设标准的准稳态米氏-门氏模型适用于核酸酶-底物的相互作用，并且抑制剂的结合是游离酶参与的一个快速平衡的竞争性步骤。基线米氏常数为 $K_m = 5$ nM，Acr的抑制常数为 $K_i = 20$ nM，其定义为游离酶 $E$、抑制剂 $I$ 和复合物 $EI$ 之间平衡的 $K_i = [E][I]/[EI]$。在一个实验中，抑制剂浓度固定为 $[I] = 40$ nM。\n\n仅使用这些基础和定义，推导在抑制剂存在时的表观米氏常数，并根据给定参数计算其值。简要地从机理上解释，与无抑制剂的情况相比，竞争性Acr的存在如何改变初始速率对底物浓度的依赖性。以nM为单位表示表观米氏常数。无需四舍五入。", "solution": "问题陈述经评估有效。这是一个酶动力学中提法得当的问题，其科学基础是米氏-门氏模型及其对竞争性抑制的扩展。所提供的参数是充分且一致的，可以推导出一个唯一的解。\n\n我们将推导竞争性抑制条件下表观米氏常数 $K_m^{app}$ 的表达式。酶（$E$）和底物（$S$）的基本反应方案由米氏-门氏模型给出：\n$$ E + S \\underset{k_{-1}}{\\stackrel{k_1}{\\rightleftharpoons}} ES \\stackrel{k_2}{\\rightarrow} E + P $$\n此处，$ES$ 是酶-底物复合物，$P$ 是产物。初始反应速率 $v_0$ 由 $v_0 = k_2[ES]$ 给出。\n\n在竞争性抑制剂 $I$ 存在的情况下，会建立一个额外的平衡，其中抑制剂只与游离酶结合：\n$$ E + I \\underset{k_{-i}}{\\stackrel{k_i}{\\rightleftharpoons}} EI $$\n问题指出这是一个快速平衡步骤，由抑制常数 $K_i$ 表征：\n$$ K_i = \\frac{[E][I]}{[EI]} $$\n根据该定义，酶-抑制剂复合物的浓度 $[EI]$ 可表示为：\n$$ [EI] = \\frac{[E][I]}{K_i} $$\n总酶浓度 $[E]_T$ 现在分配在游离酶、酶-底物复合物和酶-抑制剂复合物中：\n$$ [E]_T = [E] + [ES] + [EI] $$\n将 $[EI]$ 的表达式代入酶的质量平衡方程，得到：\n$$ [E]_T = [E] + [ES] + \\frac{[E][I]}{K_i} = [E]\\left(1 + \\frac{[I]}{K_i}\\right) + [ES] $$\n我们现在可以从这个方程中解出游离酶的浓度 $[E]$：\n$$ [E] = \\frac{[E]_T - [ES]}{1 + \\frac{[I]}{K_i}} $$\n问题指定对 $ES$ 复合物使用准稳态近似（QSSA）。该假设假定 $ES$ 的形成速率等于其分解速率：\n$$ \\frac{d[ES]}{dt} = k_1[E][S] - (k_{-1} + k_2)[ES] = 0 $$\n$$ k_1[E][S] = (k_{-1} + k_2)[ES] $$\n现在，我们将 $[E]$ 的表达式代入稳态方程：\n$$ k_1 \\left( \\frac{[E]_T - [ES]}{1 + \\frac{[I]}{K_i}} \\right) [S] = (k_{-1} + k_2)[ES] $$\n为了解出 $[ES]$，我们重新整理各项：\n$$ k_1[E]_T[S] - k_1[ES][S] = (k_{-1} + k_2)\\left(1 + \\frac{[I]}{K_i}\\right)[ES] $$\n$$ k_1[E]_T[S] = [ES]\\left[ k_1[S] + (k_{-1} + k_2)\\left(1 + \\frac{[I]}{K_i}\\right) \\right] $$\n$$ [ES] = \\frac{k_1[E]_T[S]}{k_1[S] + (k_{-1} + k_2)\\left(1 + \\frac{[I]}{K_i}\\right)} $$\n将分子和分母同时除以 $k_1$ 得到：\n$$ [ES] = \\frac{[E]_T[S]}{[S] + \\frac{k_{-1} + k_2}{k_1}\\left(1 + \\frac{[I]}{K_i}\\right)} $$\n米氏常数 $K_m$ 定义为 $K_m = \\frac{k_{-1} + k_2}{k_1}$。代入此定义，我们得到：\n$$ [ES] = \\frac{[E]_T[S]}{[S] + K_m\\left(1 + \\frac{[I]}{K_i}\\right)} $$\n初始速率 $v_0$ 为 $v_0 = k_2[ES]$。最大速率 $V_{max}$ 定义为 $k_2[E]_T$。因此：\n$$ v_0 = \\frac{k_2[E]_T[S]}{[S] + K_m\\left(1 + \\frac{[I]}{K_i}\\right)} = \\frac{V_{max}[S]}{[S] + K_m\\left(1 + \\frac{[I]}{K_i}\\right)} $$\n该方程与标准米氏-门氏方程 $v_0 = \\frac{V_{max}[S]}{K_m^{app} + [S]}$ 具有相同的形式，其中 $K_m^{app}$ 是表观米氏常数。通过直接比较，我们推导出 $K_m^{app}$ 的表达式：\n$$ K_m^{app} = K_m \\left(1 + \\frac{[I]}{K_i}\\right) $$\n这就是所要求推导的表达式。\n\n现在我们使用给定参数计算其数值：$K_m = 5$ nM，$K_i = 20$ nM，以及 $[I] = 40$ nM。\n$$ K_m^{app} = 5 \\text{ nM} \\times \\left(1 + \\frac{40 \\text{ nM}}{20 \\text{ nM}}\\right) $$\n$$ K_m^{app} = 5 \\times (1 + 2) $$\n$$ K_m^{app} = 5 \\times 3 = 15 \\text{ nM} $$\n在抑制剂存在的情况下，表观米氏常数为 $15$ nM。\n\n从机理上看，竞争性Acr蛋白的存在使表观米氏常数从 $5$ nM 增加到 $15$ nM。米氏常数代表反应速率达到其最大值一半（$V_{max}/2$）时的底物浓度。$K_m$ 增加到 $K_m^{app}$ 意味着需要更高浓度的底物（DNA）才能达到相同的反应速率，特别是要达到酶的半饱和状态。这是竞争的直接结果。Acr抑制剂与游离酶结合，减少了可用于结合底物的酶分子数量。为了克服这种竞争效应并使酶达到与无抑制剂情况相同的饱和程度，必须增加底物浓度。值得注意的是，最大速率 $V_{max}$ 保持不变，因为在足够高的饱和底物浓度下（$[S] \\to \\infty$），底物可以有效地与固定浓度的抑制剂竞争，反应速率趋向于相同的最大值。", "answer": "$$\\boxed{15}$$", "id": "2472003"}, {"introduction": "此前的练习主要关注理想化、宏观条件下的分子特性，但在分子数量极少的单个细胞内，情况又会如何呢？本练习将引导你从基于平均浓度的确定性模型，过渡到能够解释小分子数量反应中固有随机性的随机模型 [@problem_id:2471935]。通过这个计算实践，你将能区分生物过程的宏观（确定性）和微观（随机性）描述，并理解为何随机效应对于理解细胞决策（例如，噬菌体能否成功规避细菌的CRISPR防御）至关重要。", "problem": "考虑通过结合并失活成簇规律间隔短回文重复序列 (CRISPR) 效应复合物来抑制它们的抗CRISPR蛋白（Acr；Anti-Clustered Regularly Interspaced Short Palindromic Repeats）。在一个下游转录响应决定抑制成败的短暂细胞决策窗口中，将失效定义为在决策时刻至少有一个效应复合物保持活性的事件。您将对比基于常微分方程的确定性预测与基于效应复合物拷贝数较低时离散拷贝数波动的随机性预测。\n\n使用质量作用定律和化学主方程框架作为基础：(i) 在一个充分混合的体积中，一级失活过程的宏观速率定律遵循一个常微分方程；(ii) 在介观体系中，独立反应通道的拷贝数动态可以被建模为离散时间或连续时间的马尔可夫过程；在适当的独立性假设下，存活事件在分子间可分解。\n\n此问题的建模假设：\n- 在决策窗口内，Acr浓度可视为常数，且足够大，以至于每个效应复合物的失活过程都可视为一个伪一级过程，其有效失活率为 $\\lambda$ (单位为 $\\mathrm{min}^{-1}$)。\n- 活性效应复合物的初始数量为 $N_{0}$ (一个非负整数，单位为分子)。\n- 决策时间为 $T$ (单位为分钟)。\n- 确定性模型：使用由伪一级动力学所蕴含的宏观常微分方程，得到在时间 $T$ 时的确定性平均活性效应复合物数量。然后，为将此确定性平均值转换为确定性失效概率，假设一个线性噪声近似，其中存活者数量被建模为一个均值等于确定性解的泊松随机变量，并计算该随机变量至少为1的概率。\n- 随机性模型：假设 $N_{0}$ 个初始效应复合物中的每一个都独立地在决策窗口中存活下来，其存活概率由时间 $T$ 内的伪一级过程所决定，并计算至少有一个效应复合物存活的概率。\n\n您的任务是实现一个程序，对于每个测试用例，按以下确切顺序返回三个浮点数：\n- 确定性失效概率，\n- 随机性失效概率，\n- 这两个概率之间的绝对差值，\n每个数值都四舍五入到六位小数。\n\n物理单位和角度单位：\n- 时间 $T$ 必须以分钟为单位处理。\n- 速率 $\\lambda$ 必须以 $\\mathrm{min}^{-1}$ 为单位处理。\n- 不涉及角度。\n\n测试集：\n为以下参数集 $(N_{0}, \\lambda, T)$ 计算结果：\n1. $(N_{0}=1,\\, \\lambda=0.2\\,\\mathrm{min}^{-1},\\, T=10\\,\\mathrm{min})$\n2. $(N_{0}=5,\\, \\lambda=0.1\\,\\mathrm{min}^{-1},\\, T=5\\,\\mathrm{min})$\n3. $(N_{0}=0,\\, \\lambda=0.5\\,\\mathrm{min}^{-1},\\, T=10\\,\\mathrm{min})$\n4. $(N_{0}=2,\\, \\lambda=0.0\\,\\mathrm{min}^{-1},\\, T=10\\,\\mathrm{min})$\n5. $(N_{0}=2,\\, \\lambda=1.0\\,\\mathrm{min}^{-1},\\, T=10\\,\\mathrm{min})$\n\n最终输出格式：\n您的程序应生成单行输出，其中包含所有测试用例的结果，格式为一个由方括号括起来的逗号分隔列表，其中每个测试用例的结果本身是按上述顺序包含三个逗号分隔浮点数的列表，每个浮点数四舍五入到六位小数。例如：[[pdet1,pstoch1,delta1],[pdet2,pstoch2,delta2],...]。", "solution": "该问题陈述经验证在科学上是合理的、定义明确且客观的。它基于已确立的化学动力学和随机过程原理，特别是质量作用定律和化学主方程框架。定义精确，且所有必要参数均已提供。该问题是一个带泊松噪声近似的确定性模型与一个基于二项式统计的更基础的随机性模型之间的非平凡比较，这在定量生物学中是一项标准且有意义的练习。因此，我们可以继续进行求解。\n\n该问题要求比较两种用于描述抗CRISPR (Acr) 蛋白对CRISPR效应复合物失活作用失效的模型。失效被定义为在决策时间 $T$ 时至少有一个效应复合物保持活性的事件。活性效应复合物的初始数量为 $N_0$。失活过程被建模为一个有效速率常数为 $\\lambda$ 的伪一级过程。\n\n首先，我们分析确定性模型。活性效应复合物数量 $N(t)$ 的变化率由以下一级常微分方程描述：\n$$ \\frac{dN(t)}{dt} = -\\lambda N(t) $$\n在初始条件 $N(0) = N_0$ 下，此方程的解为：\n$$ N(t) = N_0 e^{-\\lambda t} $$\n在决策时间 $T$ 时，确定性模型预测的存活效应复合物的平均数量，我们记为 $\\mu$：\n$$ \\mu = \\langle N(T) \\rangle_{\\text{det}} = N_0 e^{-\\lambda T} $$\n问题接着要求我们将实际存活者数量 $X$ 建模为一个均值为 $\\mu$ 的泊松随机变量。因此，$X \\sim \\text{Poisson}(\\mu)$。其概率质量函数为 $P(X=k) = \\frac{e^{-\\mu} \\mu^k}{k!}$。如果 $X \\ge 1$，则发生失效。失效概率 $P_{\\text{det\\_fail}}$ 计算为 $1$ 减去成功概率（即零存活，$X=0$）：\n$$ P_{\\text{det\\_fail}} = P(X \\ge 1) = 1 - P(X=0) = 1 - \\frac{e^{-\\mu} \\mu^0}{0!} = 1 - e^{-\\mu} $$\n代入 $\\mu$ 的表达式，我们得到确定性失效概率：\n$$ P_{\\text{det\\_fail}} = 1 - \\exp(-N_0 e^{-\\lambda T}) $$\n\n接下来，我们分析随机性模型。该模型将 $N_0$ 个初始效应复合物中的每一个都视为独立的实体。单个效应复合物的失活是一个随机事件。对于速率为 $\\lambda$ 的一级过程，单个分子的失活时间遵循指数分布。单个效应复合物存活超过时间 $T$ 的概率由下式给出：\n$$ p_s = e^{-\\lambda T} $$\n我们有 $N_0$ 个这样的效应复合物，每个都以概率 $p_s$ 独立存活。存活者总数 $Y$ 遵循二项分布，$Y \\sim \\text{Binomial}(n=N_0, p=p_s)$。恰好有 $k$ 个存活者的概率是 $P(Y=k) = \\binom{N_0}{k} p_s^k (1-p_s)^{N_0-k}$。如果 $Y \\ge 1$，则发生失效。与确定性情况类似，我们通过其补集来计算此概率：\n$$ P_{\\text{stoch\\_fail}} = P(Y \\ge 1) = 1 - P(Y=0) $$\n对于二项分布，零次成功的概率是：\n$$ P(Y=0) = \\binom{N_0}{0} p_s^0 (1-p_s)^{N_0-0} = (1-p_s)^{N_0} $$\n因此，随机性失效概率为：\n$$ P_{\\text{stoch\\_fail}} = 1 - (1-p_s)^{N_0} = 1 - (1 - e^{-\\lambda T})^{N_0} $$\n在每个分子遵循独立、相同的伪一级失活通道的假设下，这个结果是精确的。确定性模型使用泊松分布是对此二项分布的一种近似，在 $N_0$ 较大且 $p_s$ 较小时成立。\n\n最后，我们需要计算两种概率之间的绝对差值 $\\Delta$：\n$$ \\Delta = |P_{\\text{det\\_fail}} - P_{\\text{stoch\\_fail}}| = |(1 - \\exp(-N_0 e^{-\\lambda T})) - (1 - (1 - e^{-\\lambda T})^{N_0})| $$\n$$ \\Delta = |(1 - e^{-\\lambda T})^{N_0} - \\exp(-N_0 e^{-\\lambda T})| $$\n\n必须考虑特殊情况。如果 $N_0 = 0$，则一开始就没有效应复合物，因此存活者数量必须为零。两种模型的失效概率都为 $0$，因此 $\\Delta=0$。如果 $\\lambda = 0$，则没有失活发生。单个效应复合物的存活概率为 $p_s = e^0 = 1$。因此，如果 $N_0 > 0$，所有 $N_0$ 个效应复合物都将存活，随机性失效概率 $P_{\\text{stoch\\_fail}} = 1 - (1-1)^{N_0} = 1$。而确定性模型给出 $P_{\\text{det\\_fail}} = 1 - \\exp(-N_0)$，这不一定为 $1$。推导出的公式能正确处理这些情况。\n\n实现程序将为每个提供的测试用例 $(N_0, \\lambda, T)$ 计算这三个量，$P_{\\text{det\\_fail}}$、$P_{\\text{stoch\\_fail}}$ 和 $\\Delta$，并按指定格式输出结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes deterministic and stochastic failure probabilities for CRISPR inhibition.\n    \"\"\"\n\n    # Test cases are given as a list of tuples (N0, lambda, T).\n    test_cases = [\n        # (N0, lambda, T)\n        (1, 0.2, 10),\n        (5, 0.1, 5),\n        (0, 0.5, 10),\n        (2, 0.0, 10),\n        (2, 1.0, 10),\n    ]\n\n    # This function calculates the probabilities for a single test case.\n    def calculate_probabilities(N0, lam, T):\n        \"\"\"\n        Calculates deterministic and stochastic probabilities for given parameters.\n\n        Args:\n            N0 (int): Initial number of effector complexes.\n            lam (float): Pseudo-first-order inactivation rate (min^-1).\n            T (float): Decision time (min).\n\n        Returns:\n            tuple: A tuple containing (P_det_fail, P_stoch_fail, delta)\n                   each rounded to six decimal places.\n        \"\"\"\n        # If there are no initial effectors, failure is impossible.\n        if N0 == 0:\n            return (0.0, 0.0, 0.0)\n\n        # The survival probability of a single effector over time T.\n        # This is a core component of both models.\n        p_s = np.exp(-lam * T)\n\n        # Deterministic model calculation\n        # Mean number of survivors in the deterministic model.\n        mu = N0 * p_s\n        # Failure probability assuming a Poisson distribution of survivors.\n        p_det_fail = 1.0 - np.exp(-mu)\n\n        # Stochastic model calculation\n        # Failure probability from the exact Binomial distribution of survivors.\n        p_stoch_fail = 1.0 - (1.0 - p_s)**N0\n        \n        # Absolute difference between the two probabilities.\n        delta = abs(p_det_fail - p_stoch_fail)\n\n        # Format results to six decimal places as required.\n        # Using f-string formatting provides rounding to nearest, with .5 going away from zero.\n        f_p_det = float(f\"{p_det_fail:.6f}\")\n        f_p_stoch = float(f\"{p_stoch_fail:.6f}\")\n        f_delta = float(f\"{delta:.6f}\")\n        \n        return [f_p_det, f_p_stoch, f_delta]\n\n    # Process all test cases\n    all_results = []\n    for case in test_cases:\n        N0, lam, T = case\n        result_tuple = calculate_probabilities(N0, lam, T)\n        all_results.append(result_tuple)\n\n    # Format the final output string exactly as specified in the problem statement.\n    # e.g., [[pdet1,pstoch1,delta1],[pdet2,pstoch2,delta2],...]\n    # Each sub-list is converted to a string.\n    result_strings = []\n    for res in all_results:\n        # Format each number to have 6 decimal places.\n        formatted_nums = [f\"{num:.6f}\" for num in res]\n        result_strings.append(f\"[{','.join(formatted_nums)}]\")\n    \n    # Join the sub-list strings into the final output format.\n    final_output = f\"[{','.join(result_strings)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output)\n\nsolve()\n```", "id": "2471935"}]}