{"hands_on_practices": [{"introduction": "本练习旨在培养基于约束建模的一项基本技能：将生物反应网络转化为其数学表示形式——化学计量矩阵 $S$。通过构建该矩阵并分析其特性，你将探索零空间的概念，其维度揭示了稳态假设下代谢系统内的自由度。这项实践对于理解网络结构如何从根本上定义其可能的功能状态至关重要 [@problem_id:2496368]。", "problem": "在基因组尺度代谢模型的基于约束的重构与分析(COBRA)中，稳态假设对细胞内代谢物施加了质量平衡约束，表示为 $S \\, v = 0$，其中 $S$ 是化学计量矩阵，$v$ 是反应通量向量。考虑一个封闭的内子网络，包含三个不可逆反应 $R_1$, $R_2$, $R_3$ 和三种细胞内代谢物 $A$, $B$, $C$：\n- $R_1$: $A \\to B$\n- $R_2$: $B \\to C$\n- $R_3$: $C \\to A$\n\n根据化学计量系数的定义（消耗为负，生成为正），构建化学计量矩阵 $S$，其代谢物顺序为 $[A,B,C]$，反应顺序为 $[R_1,R_2,R_3]$。然后，应用封闭内网络（无交换反应）的稳态质量平衡，确定方程 $S \\, v = 0$ 在实数范围内的解空间的维度。假设所有三个反应都是不可逆的，但报告线性解空间（而非可行锥）的维度。将最终答案表示为一个无单位的整数。无需四舍五入。", "solution": "该问题要求确定对于一个给定的封闭代谢子网络，其稳态质量平衡方程 $S \\, v = 0$ 的解空间的维度。该维度在数学上等同于化学计量矩阵 $S$ 的零空间（null space）的维度，也称为 $S$ 的零度（nullity）。\n\n首先，我们必须构建化学计量矩阵 $S$。该矩阵的行对应于代谢物，列对应于反应。问题指定了代谢物的顺序为 $[A, B, C]$，反应的顺序为 $[R_1, R_2, R_3]$。因此，矩阵 $S$ 将是一个 $3 \\times 3$ 的矩阵。矩阵的元素 $S_{ij}$ 是代谢物 $i$ 在反应 $j$ 中的化学计量系数。约定是反应物（消耗）的系数为负，产物（生成）的系数为正。\n\n反应如下：\n$R_1$: $A \\to B$\n$R_2$: $B \\to C$\n$R_3$: $C \\to A$\n\n让我们构建 $S$ 中对应于每个反应的列：\n对于反应 $R_1$: $A \\to B$。代谢物 $A$ 被消耗（系数为 $-1$），代谢物 $B$ 被生成（系数为 $+1$），代谢物 $C$ 不参与（系数为 $0$）。$S$ 的第一列是 $\\begin{pmatrix} -1 \\\\ 1 \\\\ 0 \\end{pmatrix}$。\n\n对于反应 $R_2$: $B \\to C$。代谢物 $B$ 被消耗（系数为 $-1$），代谢物 $C$ 被生成（系数为 $+1$），代谢物 $A$ 不参与（系数为 $0$）。$S$ 的第二列是 $\\begin{pmatrix} 0 \\\\ -1 \\\\ 1 \\end{pmatrix}$。\n\n对于反应 $R_3$: $C \\to A$。代谢物 $C$ 被消耗（系数为 $-1$），代谢物 $A$ 被生成（系数为 $+1$），代谢物 $B$ 不参与（系数为 $0$）。$S$ 的第三列是 $\\begin{pmatrix} 1 \\\\ 0 \\\\ -1 \\end{pmatrix}$。\n\n组合这些列，化学计量矩阵 $S$ 为：\n$$\nS = \\begin{pmatrix}\n-1 & 0 & 1 \\\\\n1 & -1 & 0 \\\\\n0 & 1 & -1\n\\end{pmatrix}\n$$\n\n问题要求解线性系统 $S v = 0$ 的解空间的维度，其中 $v = \\begin{pmatrix} v_1 \\\\ v_2 \\\\ v_3 \\end{pmatrix}$ 是反应通量向量。这就是矩阵 $S$ 的零度，记为 $\\text{nullity}(S)$。\n\n根据秩-零度定理，对于一个有 $n$ 列的矩阵，以下关系成立：\n$$\n\\text{rank}(S) + \\text{nullity}(S) = n\n$$\n在我们的例子中，列数 $n$ 是反应的数量，即 $3$。因此，我们有：\n$$\n\\text{nullity}(S) = 3 - \\text{rank}(S)\n$$\n为了求出零度，我们首先确定 $S$ 的秩，也就是其行空间（或列空间）的维度。$S$ 的行向量是：\n$r_1 = \\begin{pmatrix} -1 & 0 & 1 \\end{pmatrix}$\n$r_2 = \\begin{pmatrix} 1 & -1 & 0 \\end{pmatrix}$\n$r_3 = \\begin{pmatrix} 0 & 1 & -1 \\end{pmatrix}$\n\n我们可以通过观察这三个行向量之和为零向量来检查它们的线性相关性：\n$$\nr_1 + r_2 + r_3 = \\begin{pmatrix} -1+1+0 & 0-1+1 & 1+0-1 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 & 0 \\end{pmatrix}\n$$\n由于存在一个等于零向量的非平凡线性组合，这些行向量是线性相关的。这意味着 $\\text{rank}(S) < 3$。\n\n现在我们检查是否有任意两行是线性无关的。考虑 $r_1$ 和 $r_2$。它们是线性无关的，因为它们中的任何一个都不是另一个的标量倍数。例如，要匹配第一个元素，我们需要 $c \\cdot (-1) = 1$，所以 $c=-1$。但是 $c \\cdot r_1 = (-1)\\begin{pmatrix} -1 & 0 & 1 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 & -1 \\end{pmatrix} \\neq r_2$。因此，$S$ 的秩至少为 $2$。\n由于 $\\text{rank}(S) < 3$ 且 $\\text{rank}(S) \\ge 2$，所以必然有 $\\text{rank}(S) = 2$。\n\n使用秩-零度定理：\n$$\n\\text{nullity}(S) = 3 - \\text{rank}(S) = 3 - 2 = 1\n$$\n或者，我们可以直接求解方程组 $S v = 0$：\n$$\n\\begin{pmatrix}\n-1 & 0 & 1 \\\\\n1 & -1 & 0 \\\\\n0 & 1 & -1\n\\end{pmatrix}\n\\begin{pmatrix}\nv_1 \\\\\nv_2 \\\\\nv_3\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n0 \\\\\n0 \\\\\n0\n\\end{pmatrix}\n$$\n这给出了以下线性方程组：\n$1) \\quad -v_1 + v_3 = 0 \\implies v_1 = v_3$\n$2) \\quad v_1 - v_2 = 0 \\implies v_1 = v_2$\n$3) \\quad v_2 - v_3 = 0 \\implies v_2 = v_3$\n所有三个方程都导出相同的条件：$v_1 = v_2 = v_3$。如果我们令 $v_1 = t$，其中 $t$ 为某个实数参数，那么任何解向量 $v$ 都可以写成：\n$$\nv = \\begin{pmatrix} t \\\\ t \\\\ t \\end{pmatrix} = t \\begin{pmatrix} 1 \\\\ 1 \\\\ 1 \\end{pmatrix}\n$$\n解空间是向量 $\\begin{pmatrix} 1 \\\\ 1 \\\\ 1 \\end{pmatrix}$ 的所有标量倍数的集合。这个空间由一个基向量张成。因此，解空间的维度是 $1$。这个结果对应于存在一个独立的稳态通量模式，在本例中就是这个循环通路本身，其中所有反应必须以相同的速率进行以维持质量平衡。题目指出反应是不可逆的，但正确地要求了线性解空间（$S v = 0$）的维度，而不是可行锥（$S v = 0, v \\ge 0$）的维度，这个维度确实是 $1$。", "answer": "$$\n\\boxed{1}\n$$", "id": "2496368"}, {"introduction": "化学计量定义了物质流动的可能路径，而热力学则决定了这些路径中哪些是实际可行的。本练习将引入吉布斯自由能（$\\Delta_r G'$）在约束反应方向性方面的关键作用，使分析超越单纯的质量平衡。通过分析胞内条件如何改变反应相对于其标准状态的可行性，你将学会整合物理化学原理，以创建更真实的代谢模型 [@problem_id:2496312]。", "problem": "考虑一个嵌入在流通平衡分析（FBA）中的基因组尺度代谢模型里的单个胞内反应。该反应的标准转换吉布斯反应自由能变为 $\\Delta_{r} G'^{\\circ} = -20 \\ \\text{kJ} \\ \\text{mol}^{-1}$。在温度 $T = 310 \\ \\text{K}$ 下，根据测得的胞内代谢物浓度，观察到其转换吉布斯自由能变满足基本关系式 $\\Delta_{r} G' = \\Delta_{r} G'^{\\circ} + R T \\ln Q$，并被确定为 $\\Delta_{r} G' = +2 \\ \\text{kJ} \\ \\text{mol}^{-1}$。在模型重构中，该反应受酶容量限制，其双向界限为 $-5 \\le v \\le 10$，其中 $v$ 是净反应通量，单位为 $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$，且正向定义为 $v > 0$。假设系统处于稳态，并施加与热力学第二定律一致的热力学可行性约束。\n\n此反应的最大热力学可行正向净通量是多少？请以 $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$ 为单位表示您的最终答案。无需四舍五入。", "solution": "目标是根据给定的热力学测量值和容量界限，从非平衡态热力学的第一性原理出发，确定最大可行正向净通量。\n\n将反应自由能与浓度联系起来的基本关系式为\n$$\n\\Delta_{r} G' \\;=\\; \\Delta_{r} G'^{\\circ} + R T \\ln Q,\n$$\n其中 $\\Delta_{r} G'$ 是胞内条件下的转换吉布斯自由能变，$\\Delta_{r} G'^{\\circ}$ 是标准转换吉布斯自由能变，$R$ 是理想气体常数，$T$ 是绝对温度，$Q$ 是由代谢物活度或浓度计算出的反应商。根据题意，在测量的胞内状态下，此值计算为 $\\Delta_{r} G' = +2 \\ \\text{kJ} \\ \\text{mol}^{-1}$。\n\n接下来，我们对化学反应的非平衡稳态应用热力学第二定律。与单个反应 $r$ 相关的熵产生速率由非平衡态热力学的一个公认结果给出：\n$$\n\\sigma_{r} \\;=\\; -\\frac{v_{r} \\, \\Delta_{r} G'}{T},\n$$\n其中 $v_{r}$ 是净反应通量（在定义的正向上为正值），$T$ 是绝对温度。第二定律要求在稳态下 $\\sigma_{r} \\ge 0$。因此，\n$$\n-\\frac{v_{r} \\, \\Delta_{r} G'}{T} \\;\\ge\\; 0 \\quad \\Longrightarrow \\quad v_{r} \\, \\Delta_{r} G' \\;\\le\\; 0,\n$$\n因为 $T > 0$。\n\n由于 $\\Delta_{r} G' = +2 \\ \\text{kJ} \\ \\text{mol}^{-1} > 0$，该不等式可简化为\n$$\nv_{r} \\le 0.\n$$\n因此，任何热力学上可行的净通量都必须是非正的；特别地，不存在严格为正的正向净通量。给定的酶容量界限为 $-5 \\le v \\le 10$，单位为 $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$。施加 $v \\le 0$ 的约束将可行区域进一步限制为\n$$\n-5 \\;\\le\\; v \\;\\le\\; 0.\n$$\n因此，在正向（正值）方向上 $v$ 的最大可行值是同时满足这两个约束的最大 $v$ 值，即\n$$\nv_{\\text{forward,max}} = 0.\n$$\n因此，最大热力学可行正向净通量为零，单位为 $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$。", "answer": "$$\\boxed{0}$$", "id": "2496312"}, {"introduction": "代谢模型的最终目标通常是从基因型预测细胞表型。这项高级实践将指导你完成一个系统生物学的核心工作流程：结合通量平衡分析（FBA）和基因-蛋白质-反应（GPR）规则来识别合成致死基因对。该练习展示了如何系统地模拟基因缺失的功能性后果并揭示复杂的遗传相互作用，从而体现了基因组尺度模型的预测能力 [@problem_id:2496280]。", "problem": "给定一个小的、质量平衡的代谢网络，该网络包含两条平行通路，由反应 $R_A$ 和 $R_B$ 表示。每条通路在功能正常时都能独立支持生物质的生产。任务是使用基因-蛋白质-反应（GPR）映射和流通平衡分析（FBA）来确定基因缺失情况下的存活性，并识别合成致死基因对。您的程序必须从第一性原理出发，从稳态质量平衡和代谢流的操作性定义开始，实现这些步骤。\n\n使用的基本定义：\n- 在代谢稳态下，细胞内代谢物的浓度在所关心的时间尺度上没有明显变化。这意味着存在线性约束 $S \\, v = 0,$ 其中 $S$ 是化学计量矩阵，$v$ 是反应流向量。\n- 每个反应流 $v_i$ 都受到上下界的约束 $\\ell_i \\le v_i \\le u_i$。\n- 在此，流通平衡分析（FBA）被定义为在稳态和边界约束条件下最大化生物质生产速率的优化问题。设生物质反应为索引为 $5$ 的反应（从零开始的索引）。线性规划的目标是最大化 $v_5$。\n- 基因-蛋白质-反应（GPR）映射使用布尔逻辑将基因的存在/缺失与反应的可用性联系起来。当且仅当一个反应的 GPR 布尔公式在给定的基因缺失集下求值为真时，该反应才处于活性状态；否则，如果反应处于非活性状态，则强制 $v_i = 0$。\n\n网络规格：\n- 内部代谢物（$S$ 的行）：$S$（底物），$A$（通路 $R_A$ 的中间产物），$C$（通路 $R_B$ 的中间产物），$B$（生物质前体）。\n- 反应（$S$ 的列），按顺序排列：\n  $0$：$S$ 的交换/摄取（表示为 $\\mathrm{EX\\_S}$）， \n  $1$：$S \\to A$ ($R1A$)， \n  $2$：$A \\to B$ ($R2A$)， \n  $3$：$S \\to C$ ($R1B$)， \n  $4$：$C \\to B$ ($R2B$)， \n  $5$：$B \\to$ 生物质汇（$\\mathrm{Biomass}$）。\n- 化学计量矩阵 $S \\in \\mathbb{R}^{4 \\times 6}$，其中代谢物和反应的顺序如上所述：\n$$\nS =\n\\begin{bmatrix}\n+1 & -1 & 0 & -1 & 0 & 0 \\\\\n0 & +1 & -1 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & +1 & -1 & 0 \\\\\n0 & 0 & +1 & 0 & +1 & -1\n\\end{bmatrix}.\n$$\n- 流通边界（单位任意）：下界\n$$\n\\ell = \\begin{bmatrix} -10 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix},\n$$\n上界\n$$\nu = \\begin{bmatrix} 0 \\\\ 1000 \\\\ 1000 \\\\ 1000 \\\\ 1000 \\\\ 1000 \\end{bmatrix}.\n$$\n- GPR 规则，使用从零开始的基因索引。共有 $4$ 个基因，索引为 $0,1,2,3$。对每个反应的 GPR 使用析取范式（与的或）：\n  - 反应 $0$ ($\\mathrm{EX\\_S}$): 无基因关联（始终活性）。\n  - 反应 $1$ ($R1A$): $[\\,[0]\\,]$。\n  - 反应 $2$ ($R2A$): $[\\,[1]\\,]$。\n  - 反应 $3$ ($R1B$): $[\\,[2]\\,]$。\n  - 反应 $4$ ($R2B$): $[\\,[3]\\,]$。\n  - 反应 $5$ ($\\mathrm{Biomass}$): 无基因关联（始终活性）。\n  解释：像 $[\\,[i]\\,]$ 这样的列表意味着如果基因 $i$ 存在，则反应是活性的；像 $[i,j]$ 这样的子句意味着基因 $i$ 和 $j$ 必须同时存在；跨子句的“或”关系意味着至少需要满足一个子句才能使反应具有活性。\n\n存活性标准：\n- 对于给定的基因缺失集，评估 GPR 规则以去激活任何相关反应（为非活性反应设置上下界均为 $0$），然后执行 FBA。如果最优生物质流满足 $v_5^\\star \\ge \\varepsilon,$（其中 $\\varepsilon = 10^{-9}$），则认为该基因型具有存活性。\n\n合成致死性：\n- 如果基因对 $\\{i,j\\}$ 对应的两个单基因缺失都具有存活性，但基因 $i$ 和 $j$ 的双基因缺失是非存活的，则该基因对是合成致死对。\n\n程序任务：\n- 实现如上定义的 GPR 评估和 FBA。\n- 使用指定的网络和边界，评估以下基因缺失集的存活性（使用从零开始的基因索引，并将每个集合按升序排序）：\n  - $D_0 = [\\,]$,\n  - $D_1 = [\\,0\\,]$,\n  - $D_2 = [\\,1\\,]$,\n  - $D_3 = [\\,2\\,]$,\n  - $D_4 = [\\,3\\,]$,\n  - $D_5 = [\\,0,2\\,]$,\n  - $D_6 = [\\,0,3\\,]$,\n  - $D_7 = [\\,1,2\\,]$,\n  - $D_8 = [\\,1,3\\,]$.\n- 在全基因集 $\\{0,1,2,3\\}$ 上，枚举所有大小为 $2$ 的基因对，并根据上述定义返回合成致死的基因对。每个基因对必须以排序列表 $[i,j]$（其中 $i < j$）的形式报告。基因对列表本身必须按字典序排序。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。列表中的条目按顺序为 $D_0$ 到 $D_8$ 的 $9$ 个布尔存活性结果，其后是包含所有合成致死对（表示为含两个整数的列表）的单个列表。例如，带有占位符的输出看起来像 `\"[True,True,False,...,[[0,2],[1,3]]]\"`（不要打印引号）。", "solution": "所提出的问题是计算系统生物学中的一个良构练习，要求在由基因-蛋白质-反应（GPR）映射定义的遗传约束下应用流通平衡分析（FBA）。任务是确定不同基因型的细胞存活性，并识别合成致死基因对。解决方案是从代谢稳态和线性优化的第一性原理推导出来的。\n\n问题的核心在于求解一个线性规划（LP）问题。代谢网络的状态由反应流向量 $v \\in \\mathbb{R}^6$ 描述。在稳态下，内部代谢物的浓度是恒定的。这引入了质量平衡约束，它是一个线性方程组：\n$$S v = 0$$\n此处，$S \\in \\mathbb{R}^{4 \\times 6}$ 是化学计量矩阵，其中行对应代谢物，列对应反应。向量 $v$ 包含每个反应的流。方程 $S v = 0$ 确保对于每种内部代谢物，其总生产速率等于总消耗速率。\n\n此外，每个流 $v_i$ 都受到热力学和酶容量限制的约束。这些限制表示为每个流的上下界：\n$$ \\ell_i \\le v_i \\le u_i $$\n对于本问题，边界由向量 $\\ell = [-10, 0, 0, 0, 0, 0]^T$ 和 $u = [0, 1000, 1000, 1000, 1000, 1000]^T$ 给出。注意，摄取反应 $\\mathrm{EX\\_S}$（反应 $0$）具有负流，表示从环境中消耗底物，最大速率为 $10$ 个单位。所有内部反应都是不可逆的，其下界为 $0$。\n\n细胞的生物学目标被假定为最大化其生长速率。在 FBA 中，这被建模为最大化通过一个合成生物质反应的流，该反应以化学计量上适当的比例消耗前体。在这个简化模型中，这是反应 $5$，目标是最大化 $v_5$。\n\n因此，完整的 FBA 问题可以表述为以下 LP：\n$$\n\\begin{array}{ll}\n\\underset{v}{\\text{maximize}} & c^T v \\\\\n\\text{subject to} & S v = 0 \\\\\n& \\ell \\le v \\le u\n\\end{array}\n$$\n其中目标向量为 $c = [0, 0, 0, 0, 0, 1]^T$。标准的 LP 求解器通常执行最小化操作，因此我们求解等价的最小化问题，即最小化 $-c^T v$。\n\n通过评估 GPR 规则来整合基因缺失的影响。GPR 规则是一个布尔表达式，它根据相关基因的存在与否来确定反应是否具有活性。如果由于基因缺失，某个反应 $i$ 的 GPR 表达式求值为假，则该反应被视为非活性。这是通过将其流通边界设置为零来实现的：$\\ell_i = 0$ 和 $u_i = 0$，这会强制 $v_i=0$。对于给定的网络，GPR 是简单的一一对应关系：基因 $0 \\to$ 反应 $1$，基因 $1 \\to$ 反应 $2$，基因 $2 \\to$ 反应 $3$，以及基因 $3 \\to$ 反应 $4$。例如，如果基因 $0$ 被删除，反应 $1$ 将变为非活性。\n\n一个由一组被删除基因指定的基因型，如果其产生的最优生物质流 $v_5^*$ 满足 $v_5^* \\ge \\varepsilon$（其中存活性阈值为 $\\varepsilon = 10^{-9}$），则被认为是存活的。\n\n如果基因 $i$ 和 $j$ 的单基因缺失都是存活的，但 $\\{i,j\\}$ 的双基因缺失是非存活的，则基因对 $\\{i,j\\}$ 被定义为合成致死。这表明基因 $i$ 和 $j$ 参与了平行的、冗余的通路，这些通路在组合起来时是必需的。\n\n解决策略如下：\n1.  对于给定的基因缺失集，根据 GPR 规则更新默认的流通边界 $\\ell$ 和 $u$。\n2.  求解相应的 FBA 线性规划问题，以找到最大生物质流 $v_5^*$。\n3.  通过将 $v_5^*$ 与阈值 $\\varepsilon$ 进行比较来确定存活性。\n4.  应用此程序来评估九个指定缺失集的存活性。\n5.  为识别合成致死对，首先评估所有单基因缺失的存活性。然后，对于每个其单独缺失是存活的基因对 $\\{i,j\\}$，评估双基因缺失 $\\{i,j\\}$ 的存活性。如果双基因缺失是非存活的，则 $\\{i,j\\}$ 是一个合成致死对。\n\nFBA 的这种系统性应用提供了所需的存活性数据，并识别了编码在网络结构和 GPR 逻辑中的功能冗余。所提供的网络包含两个平行通路（通路 A：反应 $1,2$，由基因 $0,1$ 控制；通路 B：反应 $3,4$，由基因 $2,3$ 控制），它们将底物 $S$ 转化为生物质前体 $B$。同时从每个通路中删除一个基因将阻断通往生物质生产的两条途径，从而导致致死表型，这是该系统中合成致死性的基础。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import linprog\nfrom itertools import combinations\n\ndef solve():\n    \"\"\"\n    Solves the metabolic network analysis problem by implementing Flux Balance Analysis (FBA)\n    with Gene-Protein-Reaction (GPR) constraints to determine viability and synthetic lethality.\n    \"\"\"\n    \n    # --- Model Definition ---\n    # Stoichiometric matrix S\n    S = np.array([\n        [1, -1, 0, -1, 0, 0],  # Substrate S\n        [0, 1, -1, 0, 0, 0],  # Intermediate A\n        [0, 0, 0, 1, -1, 0],  # Intermediate C\n        [0, 0, 1, 0, 1, -1]   # Precursor B\n    ])\n\n    # Default flux bounds (lower, upper)\n    base_bounds = [\n        (-10, 0),    # 0: EX_S\n        (0, 1000),   # 1: R1A\n        (0, 1000),   # 2: R2A\n        (0, 1000),   # 3: R1B\n        (0, 1000),   # 4: R2B\n        (0, 1000)    # 5: Biomass\n    ]\n\n    # GPR rules: maps gene index to the reaction index it controls.\n    # A deleted gene knocks out its associated reaction.\n    gpr_map = {\n        0: 1,  # Gene 0 -> R1A (Reaction 1)\n        1: 2,  # Gene 1 -> R2A (Reaction 2)\n        2: 3,  # Gene 2 -> R1B (Reaction 3)\n        3: 4,  # Gene 3 -> R2B (Reaction 4)\n    }\n\n    # FBA objective: maximize biomass flux (v_5). Scipy minimizes, so we minimize -v_5.\n    c = np.array([0, 0, 0, 0, 0, -1])\n\n    # Equality constraints: Sv = 0\n    A_eq = S\n    b_eq = np.zeros(S.shape[0])\n\n    # Viability threshold\n    epsilon = 1e-9\n\n    # Cache for memoizing FBA results to avoid redundant computations\n    viability_cache = {}\n\n    def is_viable(deleted_genes_tuple):\n        \"\"\"\n        Determines if a genotype is viable by running FBA.\n        The input is a tuple of sorted, unique gene indices to be deleted.\n        \"\"\"\n        if deleted_genes_tuple in viability_cache:\n            return viability_cache[deleted_genes_tuple]\n\n        # Apply GPR rules to update bounds\n        current_bounds = list(base_bounds)\n        for gene_idx in deleted_genes_tuple:\n            if gene_idx in gpr_map:\n                reaction_idx = gpr_map[gene_idx]\n                current_bounds[reaction_idx] = (0, 0)\n        \n        # Solve the LP\n        res = linprog(c=c, A_eq=A_eq, b_eq=b_eq, bounds=current_bounds, method='highs')\n\n        max_biomass_flux = 0.0\n        if res.success:\n            max_biomass_flux = -res.fun\n        \n        # Determine and cache viability\n        viable = max_biomass_flux >= epsilon\n        viability_cache[deleted_genes_tuple] = viable\n        return viable\n\n    # --- Task 1: Evaluate viability for specified gene deletion sets ---\n    deletion_sets_to_test = [\n        [], [0], [1], [2], [3], [0, 2], [0, 3], [1, 2], [1, 3]\n    ]\n    \n    viability_results = []\n    for d_set in deletion_sets_to_test:\n        # Use a sorted tuple as the cache key\n        d_tuple = tuple(sorted(d_set))\n        viability_results.append(is_viable(d_tuple))\n\n    # --- Task 2: Identify all synthetic lethal gene pairs ---\n    num_genes = 4\n    all_genes = range(num_genes)\n    synthetic_lethal_pairs = []\n\n    # Check all pairs of genes {i, j} with i < j\n    for i, j in combinations(all_genes, 2):\n        # A pair is synthetic lethal if single deletions are viable but the double is not.\n        single_i_viable = is_viable((i,))\n        single_j_viable = is_viable((j,))\n        double_ij_viable = is_viable((i, j))\n        \n        if single_i_viable and single_j_viable and not double_ij_viable:\n            synthetic_lethal_pairs.append([i, j])\n\n    # The pairs are already sorted by `itertools.combinations`.\n\n    # --- Final Output Formatting ---\n    # Combine the 9 viability booleans and the list of SL pairs\n    final_output_list = viability_results + [synthetic_lethal_pairs]\n\n    # Format the list to a string with no spaces, as per the example\n    str_results = []\n    for item in final_output_list:\n        # Convert item to string and remove all whitespace\n        str_item = str(item).replace(\" \", \"\")\n        str_results.append(str_item)\n    \n    print(f\"[{','.join(str_results)}]\")\n\nsolve()\n```", "id": "2496280"}]}