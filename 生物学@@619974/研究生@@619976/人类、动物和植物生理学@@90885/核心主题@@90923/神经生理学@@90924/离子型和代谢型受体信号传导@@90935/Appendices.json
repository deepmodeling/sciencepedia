{"hands_on_practices": [{"introduction": "深入理解离子型受体功能的第一步是掌握单个离子通道的生物物理学。本练习将引导你从欧姆定律等基本物理原理出发，推导出描述通道电流-电压关系的方程 $i = g(V_m - E_{\\mathrm{rev}})$。你将进一步应用高盛-霍奇金-卡茨（Goldman–Hodgkin–Katz, GHK）电压方程，来量化细胞外离子浓度的变化如何通过改变反转电位 $E_{\\mathrm{rev}}$ 来调节离子型受体的效能，这项实践对于连接受体结构、离子环境与细胞电生理输出至关重要。[@problem_id:2576223]", "problem": "哺乳动物神经元中的一个配体门控离子型受体，对单价阳离子钠和钾具有相同的单位通透性。当与激动剂结合时，该通道切换到一个具有恒定单通道电导的开放状态。考虑以下生理条件：\n\n- 绝对温度：$T = 310\\,\\mathrm{K}$。\n- 通用气体常数：$R = 8.314\\,\\mathrm{J\\,mol^{-1}\\,K^{-1}}$。\n- 法拉第常数：$F = 96485\\,\\mathrm{C\\,mol^{-1}}$。\n- 细胞内浓度：$[\\mathrm{Na}^{+}]_{\\mathrm{i}} = 12\\,\\mathrm{mM}$ 和 $[\\mathrm{K}^{+}]_{\\mathrm{i}} = 140\\,\\mathrm{mM}$。\n- 基线细胞外浓度：$[\\mathrm{Na}^{+}]_{\\mathrm{o}} = 145\\,\\mathrm{mM}$ 和 $[\\mathrm{K}^{+}]_{\\mathrm{o}} = 5\\,\\mathrm{mM}$。\n- 扰动后的细胞外钾浓度：$[\\mathrm{K}^{+}]_{\\mathrm{o}} = 25\\,\\mathrm{mM}$（所有其他量保持不变）。\n- 开放状态下的相对通透性：$P_{\\mathrm{Na}}:P_{\\mathrm{K}} = 1:1$。\n- 开放状态单通道电导：$g = 20\\,\\mathrm{pS}$。\n- 受体激活期间的膜电位：$V_{m} = -60\\,\\mathrm{mV}$。\n\n仅使用基本原理，分两步进行：\n\n1) 从欧姆导体的定义和翻转电位（即开放通道净电流为零时的膜电位）的定义出发，推导开放状态下单通道电流 $i$、电导 $g$、膜电位 $V_{m}$ 和翻转电位 $E_{\\mathrm{rev}}$ 之间的显式线性关系。\n\n2) 从用于描述空间均匀电场中离子独立运动的恒定场（Goldman–Hodgkin–Katz (GHK)）框架出发，并对一个混合的 $\\mathrm{Na}^{+}/\\mathrm{K}^{+}$ 通透通道强制施加零电流条件，以 $R$、$T$、$F$、$P_{\\mathrm{Na}}$、$P_{\\mathrm{K}}$ 以及细胞内和细胞外离子活度（假设活度等于浓度）来推导翻转电位 $E_{\\mathrm{rev}}$ 的符号表达式。然后，在上述基线和扰动后的细胞外钾浓度条件下，数值计算 $E_{\\mathrm{rev}}$ 。\n\n将在固定激动剂占据率下，离子型受体的“功效”定义为在指定 $V_{m}$ 下开放状态单通道电流的绝对值 $|i|$ 。计算功效比\n$$\n\\mathcal{R} \\equiv \\frac{|i|_{\\,[\\mathrm{K}^{+}]_{\\mathrm{o}}=25\\,\\mathrm{mM}}}{|i|_{\\,[\\mathrm{K}^{+}]_{\\mathrm{o}}=5\\,\\mathrm{mM}}}.\n$$\n将最终的功效比表示为一个无量纲数，并将答案四舍五入到四位有效数字。", "solution": "问题陈述具有科学依据、提法明确、客观，并包含足够的信息以得出唯一解。所给条件在生理上是合理的。我将按要求进行解答。\n\n问题要求一个两步的推导和计算。\n\n第1步：线性电流-电压关系的推导。\n欧姆导体的特征是电流 $I$ 和电压 $V$ 之间存在线性关系，由欧姆定律描述：$I = G V$，其中 $G$ 是电导。对于嵌入细胞膜的离子通道，构成电流 $i$ 的离子流动是由跨膜的电化学势差驱动的。这个驱动力是膜电位 $V_{m}$ 和翻转电位 $E_{\\mathrm{rev}}$ 之间的差值。翻转电位是在该特定膜电位下，没有净离子流通过通道，因此电流为零。\n\n因此，驱动力为 $(V_{m} - E_{\\mathrm{rev}})$。将欧姆定律的原理应用于电导为 $g$ 的单个通道，单通道电流 $i$ 与此驱动力成正比：\n$$\ni = g (V_{m} - E_{\\mathrm{rev}})\n$$\n这就是单通道电流 $i$、电导 $g$、膜电位 $V_{m}$ 和翻转电位 $E_{\\mathrm{rev}}$ 之间的显式线性关系。该关系正确地预测了如果 $V_{m} = E_{\\mathrm{rev}}$，则电流 $i = g (E_{\\mathrm{rev}} - E_{\\mathrm{rev}}) = 0$，这与所提供的翻转电位的定义一致。\n\n第2步：翻转电位的推导和功效比的计算。\nGoldman–Hodgkin–Katz (GHK) 框架模拟了恒定电场下跨膜的离子通量。对于一个对多种离子通透的通道，其翻转电位 $E_{\\mathrm{rev}}$ 是指总净跨膜电流为零时的膜电位。对于一个对单价阳离子 $\\mathrm{Na}^{+}$ 和 $\\mathrm{K}^{+}$ 通透的通道，总电流 $I_{\\mathrm{total}}$ 是单个离子电流 $I_{\\mathrm{Na}}$ 和 $I_{\\mathrm{K}}$ 的总和。零电流条件是 $I_{\\mathrm{total}} = I_{\\mathrm{Na}} + I_{\\mathrm{K}} = 0$。\n\n在恒定场假设下，对于带正电荷 $z_j=+1$ 的离子种类 $j$ ，GHK 电流方程由下式给出：\n$$\nI_j = P_j \\frac{F^2 V_m}{RT} \\frac{[j]_{\\mathrm{i}} - [j]_{\\mathrm{o}} \\exp(\\frac{F V_m}{RT})}{1 - \\exp(\\frac{F V_m}{RT})}\n$$\n其中 $P_j$ 是通透性，$R$ 是通用气体常数，$T$ 是绝对温度，$F$ 是法拉第常数。\n\n在翻转电位 $V_m = E_{\\mathrm{rev}}$ 处，总电流为零：\n$$\nP_{\\mathrm{Na}} \\frac{F^2 E_{\\mathrm{rev}}}{RT} \\frac{[\\mathrm{Na}^{+}]_{\\mathrm{i}} - [\\mathrm{Na}^{+}]_{\\mathrm{o}} \\exp(\\frac{F E_{\\mathrm{rev}}}{RT})}{1 - \\exp(\\frac{F E_{\\mathrm{rev}}}{RT})} + P_{\\mathrm{K}} \\frac{F^2 E_{\\mathrm{rev}}}{RT} \\frac{[\\mathrm{K}^{+}]_{\\mathrm{i}} - [\\mathrm{K}^{+}]_{\\mathrm{o}} \\exp(\\frac{F E_{\\mathrm{rev}}}{RT})}{1 - \\exp(\\frac{F E_{\\mathrm{rev}}}{RT})} = 0\n$$\n假设 $E_{\\mathrm{rev}} \\ne 0$，我们可以消去公因子 $\\frac{F^2 E_{\\mathrm{rev}}}{RT} \\frac{1}{1 - \\exp(\\frac{F E_{\\mathrm{rev}}}{RT})}$。剩下：\n$$\nP_{\\mathrm{Na}} \\left( [\\mathrm{Na}^{+}]_{\\mathrm{i}} - [\\mathrm{Na}^{+}]_{\\mathrm{o}} \\exp\\left(\\frac{F E_{\\mathrm{rev}}}{RT}\\right) \\right) + P_{\\mathrm{K}} \\left( [\\mathrm{K}^{+}]_{\\mathrm{i}} - [\\mathrm{K}^{+}]_{\\mathrm{o}} \\exp\\left(\\frac{F E_{\\mathrm{rev}}}{RT}\\right) \\right) = 0\n$$\n重新整理各项以求解 $E_{\\mathrm{rev}}$：\n$$\nP_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{\\mathrm{i}} + P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{\\mathrm{i}} = \\left( P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{\\mathrm{o}} + P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{\\mathrm{o}} \\right) \\exp\\left(\\frac{F E_{\\mathrm{rev}}}{RT}\\right)\n$$\n$$\n\\exp\\left(\\frac{F E_{\\mathrm{rev}}}{RT}\\right) = \\frac{P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{\\mathrm{i}} + P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{\\mathrm{i}}}{P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{\\mathrm{o}} + P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{\\mathrm{o}}}\n$$\nGHK 电压方程通常将细胞外浓度置于分子中。通过对对数的参数取倒数，我们得到标准形式：\n$$\nE_{\\mathrm{rev}} = \\frac{RT}{F} \\ln \\left( \\frac{P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{\\mathrm{o}} + P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{\\mathrm{o}}}{P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{\\mathrm{i}} + P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{\\mathrm{i}}} \\right)\n$$\n给定相对通透性 $P_{\\mathrm{Na}}:P_{\\mathrm{K}} = 1:1$，我们可以设定 $P_{\\mathrm{Na}} = P_{\\mathrm{K}} = P$。通透性常数 $P$ 随后从表达式中消去：\n$$\nE_{\\mathrm{rev}} = \\frac{RT}{F} \\ln \\left( \\frac{[\\mathrm{Na}^{+}]_{\\mathrm{o}} + [\\mathrm{K}^{+}]_{\\mathrm{o}}}{[\\mathrm{Na}^{+}]_{\\mathrm{i}} + [\\mathrm{K}^{+}]_{\\mathrm{i}}} \\right)\n$$\n我们首先计算热电压项 $\\frac{RT}{F}$：\n$$\n\\frac{RT}{F} = \\frac{(8.314\\,\\mathrm{J\\,mol^{-1}\\,K^{-1}}) (310\\,\\mathrm{K})}{96485\\,\\mathrm{C\\,mol^{-1}}} \\approx 0.026707\\,\\mathrm{V} = 26.707\\,\\mathrm{mV}\n$$\n现在我们计算两种指定条件下的 $E_{\\mathrm{rev}}$。\n\n条件1（基线）：$[\\mathrm{K}^{+}]_{\\mathrm{o}} = 5\\,\\mathrm{mM}$。\n细胞内浓度为 $[\\mathrm{Na}^{+}]_{\\mathrm{i}} = 12\\,\\mathrm{mM}$ 和 $[\\mathrm{K}^{+}]_{\\mathrm{i}} = 140\\,\\mathrm{mM}$。细胞外浓度为 $[\\mathrm{Na}^{+}]_{\\mathrm{o}} = 145\\,\\mathrm{mM}$ 和 $[\\mathrm{K}^{+}]_{\\mathrm{o}} = 5\\,\\mathrm{mM}$。\n$$\nE_{\\mathrm{rev},1} = \\left(\\frac{RT}{F}\\right) \\ln \\left( \\frac{145 + 5}{12 + 140} \\right) = \\left(\\frac{RT}{F}\\right) \\ln \\left( \\frac{150}{152} \\right) \\approx (26.707\\,\\mathrm{mV}) \\times (-0.013245) \\approx -0.3538\\,\\mathrm{mV}\n$$\n条件2（扰动后）：$[\\mathrm{K}^{+}]_{\\mathrm{o}} = 25\\,\\mathrm{mM}$。\n细胞外钾浓度升高，而其他浓度保持不变。\n$$\nE_{\\mathrm{rev},2} = \\left(\\frac{RT}{F}\\right) \\ln \\left( \\frac{145 + 25}{12 + 140} \\right) = \\left(\\frac{RT}{F}\\right) \\ln \\left( \\frac{170}{152} \\right) \\approx (26.707\\,\\mathrm{mV}) \\times (0.11195) \\approx 2.990\\,\\mathrm{mV}\n$$\n功效定义为在 $V_{m} = -60\\,\\mathrm{mV}$ 时单通道电流的绝对值 $|i|$ 。单通道电导为 $g = 20\\,\\mathrm{pS}$。\n使用第1步中推导的线性 I-V 关系 $i = g(V_{m} - E_{\\mathrm{rev}})$，功效为 $|i| = |g(V_{m} - E_{\\mathrm{rev}})| = g|V_{m} - E_{\\mathrm{rev}}|$。\n\n功效比 $\\mathcal{R}$ 定义为：\n$$\n\\mathcal{R} \\equiv \\frac{|i|_{\\,[\\mathrm{K}^{+}]_{\\mathrm{o}}=25\\,\\mathrm{mM}}}{|i|_{\\,[\\mathrm{K}^{+}]_{\\mathrm{o}}=5\\,\\mathrm{mM}}} = \\frac{|i_{2}|}{|i_{1}|}\n$$\n代入 $|i|$ 的表达式：\n$$\n\\mathcal{R} = \\frac{g|V_{m} - E_{\\mathrm{rev},2}|}{g|V_{m} - E_{\\mathrm{rev},1}|} = \\frac{|V_{m} - E_{\\mathrm{rev},2}|}{|V_{m} - E_{\\mathrm{rev},1}|}\n$$\n电导 $g$ 消去。我们代入 $V_m$、$E_{\\mathrm{rev},1}$ 和 $E_{\\mathrm{rev},2}$ 的值（均以 mV 为单位）：\n$$\n\\mathcal{R} = \\frac{|-60 - 2.990|}{|-60 - (-0.3538)|} = \\frac{|-62.990|}{|-59.6462|} = \\frac{62.990}{59.6462} \\approx 1.05606\n$$\n四舍五入到四位有效数字，最终的功效比为 $1.056$。", "answer": "$$\\boxed{1.056}$$", "id": "2576223"}, {"introduction": "从单个通道的行为扩展到细胞上受体群体的集体反应，药理学为我们提供了关键的分析工具。本练习将带领你从质量作用定律这一基本原理推导经典的剂量-反应关系，并运用计算建模的方法来拟合仿真数据。通过这个过程，你将亲手验证非竞争性拮抗剂和竞争性拮抗剂如何以不同方式改变细胞的反应曲线，从而深刻理解效能-浓度关系中的关键参数，如半数效应浓度 $EC_{50}$ 和最大效应 $E_{\\max}$。[@problem_id:2576249]", "problem": "您的任务是，从基本原理出发，构建、拟合和解释一个适用于离子通道型和代谢型受体信号转导的受体药理学剂量-反应模型。请从质量作用定律、单一激动剂结合事件的受体占有率定义，以及在下游未饱和时的线性刺激-反应耦合概念开始。您的推导必须定义一个从激动剂浓度到效应的饱和、单调映射，该映射需与离子通道型通道的开放概率或一级代谢型级联激活相一致，并且包含两个可辨识的参数：最大效应 $E_{\\max}$（任意反应单位）和半最大效应浓度 $EC_{50}$（单位为摩尔，M）。不要假设任何预先存在的“捷径”公式；请从这些基本原理推导出您打算实现的模型。\n\n然后，实现一个程序，使用您推导出的模型作为数据生成过程来产生无噪声的剂量-反应数据集，并使用非线性最小二乘法为每个数据集估计 $E_{\\max}$ 和 $EC_{50}$。最后，量化以下药理学解释：非竞争性拮抗剂会降低 $E_{\\max}$ 但不改变 $EC_{50}$，而竞争性拮抗剂会增加 $EC_{50}$ 但不改变 $E_{\\max}$。\n\n您可以假设的基本事实：\n- 单一结合位点的质量作用定律。\n- 当下游信号转导未饱和时，受体占有率与效应成正比。\n- 对于固定拮抗剂浓度下的竞争性拮抗，经典药理学中定义的剂量比大于$1$，即需要增加激动剂浓度才能达到相同的占有率。\n- 对于降低最大信号转导能力的非竞争性拮抗，在所有激动剂浓度下，可达到的最大效应都会降低，而达到半最大效应的浓度不变。\n\n数据生成和测试套件：\n- 对所有场景使用以下激动剂浓度网格（单位为摩尔，M）：$\\left[1\\times 10^{-10},\\,3\\times 10^{-10},\\,1\\times 10^{-9},\\,3\\times 10^{-9},\\,1\\times 10^{-8},\\,3\\times 10^{-8},\\,1\\times 10^{-7},\\,3\\times 10^{-7},\\,1\\times 10^{-6},\\,3\\times 10^{-6},\\,1\\times 10^{-5},\\,3\\times 10^{-5},\\,1\\times 10^{-4}\\right]$。\n- 使用您推导出的基于占有率的双参数转导模型和以下四个场景的真实参数生成无噪声的效应数据：\n  - 场景 $\\mathrm{S1}$ (离子通道型对照组): $EC_{50} = 3.0\\times 10^{-8}\\,\\mathrm{M}$, $E_{\\max} = 1.0$ (任意单位)。\n  - 场景 $\\mathrm{S2}$ (离子通道型，存在固定浓度的非竞争性拮抗剂): $EC_{50} = 3.0\\times 10^{-8}\\,\\mathrm{M}$ (与 $\\mathrm{S1}$ 相比无变化)，$E_{\\max} = 0.5$ (相对于 $\\mathrm{S1}$ 降低)。\n  - 场景 $\\mathrm{S3}$ (离子通道型，存在固定浓度的竞争性拮抗剂): $EC_{50} = 1.2\\times 10^{-7}\\,\\mathrm{M}$ (相对于 $\\mathrm{S1}$ 右移$4.0$倍)，$E_{\\max} = 1.0$ (相对于 $\\mathrm{S1}$ 无变化)。\n  - 场景 $\\mathrm{S4}$ (代谢型基线边界情况): $EC_{50} = 1.0\\times 10^{-4}\\,\\mathrm{M}$, $E_{\\max} = 1.0$。\n\n参数估计：\n- 对于每个场景，通过非线性最小二乘法将您的双参数模型拟合到生成的数据集，以估计 $EC_{50}$ (单位为 $\\mathrm{M}$) 和 $E_{\\max}$ (任意单位)。\n- 在拟合过程中对 $EC_{50}$ 和 $E_{\\max}$ 施加正值约束。\n\n解释性检查：\n- 使用相对容差 $\\tau = 0.05$ 计算以下布尔值：\n  - $b_{\\mathrm{nc}\\_EC50\\_\\mathrm{unchanged}}$: $\\left|\\dfrac{\\widehat{EC_{50}}(\\mathrm{S2})}{\\widehat{EC_{50}}(\\mathrm{S1})}-1\\right| \\le \\tau$。\n  - $b_{\\mathrm{nc}\\_Emax\\_\\mathrm{decrease}}$: $\\widehat{E_{\\max}}(\\mathrm{S2}) < \\widehat{E_{\\max}}(\\mathrm{S1})\\times (1-\\tau)$。\n  - $b_{\\mathrm{comp}\\_EC50\\_\\mathrm{increase}}$: $\\widehat{EC_{50}}(\\mathrm{S3}) > \\widehat{EC_{50}}(\\mathrm{S1}) \\times (1+\\tau)$。\n  - $b_{\\mathrm{comp}\\_Emax\\_\\mathrm{unchanged}}$: $\\left|\\dfrac{\\widehat{E_{\\max}}(\\mathrm{S3})}{\\widehat{E_{\\max}}(\\mathrm{S1})}-1\\right| \\le \\tau$。\n\n角度单位不适用。物理单位：所有 $EC_{50}$ 值以 $\\mathrm{M}$ 报告，所有 $E_{\\max}$ 值使用与生成数据时相同的任意反应单位。不要使用百分号；在比较相对差异时，将它们视为纯小数比率。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含一个逗号分隔的Python风格列表，按顺序包含以下条目：\n  - $\\widehat{EC_{50}}(\\mathrm{S1})$, $\\widehat{E_{\\max}}(\\mathrm{S1})$, $\\widehat{EC_{50}}(\\mathrm{S2})$, $\\widehat{E_{\\max}}(\\mathrm{S2})$, $\\widehat{EC_{50}}(\\mathrm{S3})$, $\\widehat{E_{\\max}}(\\mathrm{S3})$, $\\widehat{EC_{50}}(\\mathrm{S4})$, $\\widehat{E_{\\max}}(\\mathrm{S4})$, $b_{\\mathrm{nc}\\_EC50\\_\\mathrm{unchanged}}$, $b_{\\mathrm{nc}\\_Emax\\_\\mathrm{decrease}}$, $b_{\\mathrm{comp}\\_EC50\\_\\mathrm{increase}}$, $b_{\\mathrm{comp}\\_Emax\\_\\mathrm{unchanged}}$。\n- 前八个条目必须是表示上述单位估计值的浮点数。后四个条目必须是按上述定义计算的布尔值。\n- 示例示意图（非实际值）：$\\left[ \\widehat{EC_{50}}(\\mathrm{S1}), \\widehat{E_{\\max}}(\\mathrm{S1}), \\ldots, b_{\\mathrm{comp}\\_Emax\\_\\mathrm{unchanged}} \\right]$。", "solution": "所提出的问题是有效的、有科学依据的、且定义明确的。它要求从基本原理出发推导一个基本的药理学模型，并将其应用于计算环境中。这是定量生物科学中一个标准且有价值的练习。我们将着手解决。\n\n主要任务是推导单个激动剂与一群受体结合的剂量-反应关系。推导必须从质量作用定律和线性刺激-反应耦合原理开始。\n\n设激动剂为 $L$ (配体)，受体为 $R$。结合反应是可逆的：\n$$\nR + L \\underset{k_{off}}{\\stackrel{k_{on}}{\\rightleftharpoons}} LR\n$$\n其中 $k_{on}$ 是结合速率常数，$k_{off}$ 是解离速率常数。在平衡状态下，配体-受体复合物 $LR$ 的形成速率等于其解离速率：\n$$\nk_{on} [R] [L] = k_{off} [LR]\n$$\n这里，$[X]$ 表示物种 $X$ 的浓度。这个等式使我们能够定义平衡解离常数 $K_D$，它是衡量配体对受体结合亲和力的指标：\n$$\nK_D = \\frac{k_{off}}{k_{on}} = \\frac{[R][L]}{[LR]}\n$$\n较低的 $K_D$ 值对应于较高的结合亲和力。\n\n受体总浓度 $[R_{tot}]$ 是游离受体 $[R]$ 和配体结合的受体 $[LR]$ 的总和：\n$$\n[R_{tot}] = [R] + [LR]\n$$\n分数占有率 $p$ 是被配体结合的受体比例：\n$$\np = \\frac{[LR]}{[R_{tot}]}\n$$\n为了将占有率表示为配体浓度 $[L]$ 的函数，我们首先用 $[LR]$、$[L]$ 和 $K_D$ 来表示 $[R]$：\n$$\n[R] = \\frac{K_D [LR]}{[L]}\n$$\n将此式代入 $[R_{tot}]$ 的方程：\n$$\n[R_{tot}] = \\frac{K_D [LR]}{[L]} + [LR] = [LR] \\left( \\frac{K_D}{[L]} + 1 \\right) = [LR] \\left( \\frac{K_D + [L]}{[L]} \\right)\n$$\n我们可以重新整理这个式子，用 $[R_{tot}]$ 和 $[L]$ 来表示 $[LR]$：\n$$\n[LR] = [R_{tot}] \\frac{[L]}{K_D + [L]}\n$$\n将此表达式代入分数占有率 $p$ 的定义中，得到Hill-Langmuir方程：\n$$\np = \\frac{[LR]}{[R_{tot}]} = \\frac{[R_{tot}] \\frac{[L]}{K_D + [L]}}{[R_{tot}]} = \\frac{[L]}{K_D + [L]}\n$$\n该方程描述了受体占有率对配体浓度的双曲线依赖关系。\n\n问题假设存在线性刺激-反应耦合，意味着观察到的生物效应 $E$ 与活化的受体复合物浓度 $[LR]$ 成正比：\n$$\nE = c \\cdot [LR]\n$$\n其中 $c$ 是一个转导系数。最大效应 $E_{\\max}$ 在所有受体都被占据时达到，即在饱和配体浓度下，此时 $[LR] = [R_{tot}]$。因此：\n$$\nE_{\\max} = c \\cdot [R_{tot}]\n$$\n这使我们可以写出 $c = E_{\\max} / [R_{tot}]$。将此式和 $[LR]$ 的表达式代入效应方程：\n$$\nE = \\left( \\frac{E_{\\max}}{[R_{tot}]} \\right) \\left( [R_{tot}] \\frac{[L]}{K_D + [L]} \\right) = E_{\\max} \\frac{[L]}{K_D + [L]}\n$$\n题目要求模型以半最大效应浓度 $EC_{50}$ 表示，即产生 $E_{\\max}/2$ 效应的配体浓度。设 $E = E_{\\max}/2$，并将相应的浓度表示为 $[L]_{50}$：\n$$\n\\frac{E_{\\max}}{2} = E_{\\max} \\frac{[L]_{50}}{K_D + [L]_{50}}\n$$\n假设 $E_{\\max} \\neq 0$，我们可以简化：\n$$\n\\frac{1}{2} = \\frac{[L]_{50}}{K_D + [L]_{50}} \\implies K_D + [L]_{50} = 2[L]_{50} \\implies K_D = [L]_{50}\n$$\n因此，在这个简单系统中，$EC_{50} = K_D$。我们现在可以写出双参数剂量-反应模型的最终形式。令 $x$ 代表配体浓度，效应 $E(x)$ 为：\n$$\nE(x) = E_{\\max} \\frac{x}{EC_{50} + x}\n$$\n这个推导出的模型是按要求建立的饱和、单调函数，将用于数据生成和拟合。\n\n实现将遵循一个明确的程序。首先，将为推导出的模型定义一个Python函数。对于四个指定的场景中的每一个，将使用此函数和提供的真实参数生成无噪声数据。然后，将使用 `scipy.optimize.curve_fit` 对生成的数据进行模型的非线性最小二乘拟合，从而得到 $E_{\\max}$ 和 $EC_{50}$ 的估计值。将使用 `bounds` 参数对两个参数强制施加正值约束。最后，将使用来自场景S1、S2和S3的估计参数来计算所需的布尔值检查，以验证非竞争性和竞争性拮抗的药理学原理，使用指定的容差 $\\tau = 0.05$。完整的结果集将按规定格式化为单行输出。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import curve_fit\n\ndef solve():\n    \"\"\"\n    Derives, fits, and interprets a pharmacological dose-response model from first principles.\n    \"\"\"\n    # Define the derived two-parameter dose-response model function.\n    # The order of parameters (Emax, EC50) is important for curve_fit.\n    def model(x, Emax, EC50):\n        \"\"\"\n        Standard two-parameter Hill-Langmuir model.\n        E(x) = Emax * x / (EC50 + x)\n        \"\"\"\n        # Using np.divide for safe division, x is treated as array.\n        return Emax * np.divide(x, EC50 + x)\n\n    # Agonist concentration grid (in molar, M)\n    x_concentrations = np.array([\n        1e-10, 3e-10, 1e-9, 3e-9, 1e-8, 3e-8, 1e-7, 3e-7,\n        1e-6, 3e-6, 1e-5, 3e-5, 1e-4\n    ])\n\n    # True parameters for the four scenarios\n    # Format: (EC50 in M, Emax in arbitrary units)\n    scenarios = {\n        'S1': {'EC50': 3.0e-8, 'Emax': 1.0},\n        'S2': {'EC50': 3.0e-8, 'Emax': 0.5},\n        'S3': {'EC50': 1.2e-7, 'Emax': 1.0},\n        'S4': {'EC50': 1.0e-4, 'Emax': 1.0}\n    }\n\n    estimated_params = {}\n    \n    # Process each scenario: generate data and fit the model\n    for name, params in scenarios.items():\n        true_ec50 = params['EC50']\n        true_emax = params['Emax']\n\n        # Generate noiseless effect data\n        y_effects = model(x_concentrations, true_emax, true_ec50)\n\n        # Set initial guesses for the parameters (Emax, EC50)\n        p0 = [np.max(y_effects) if np.max(y_effects) > 0 else 1.0, np.median(x_concentrations)]\n\n        # Set positivity bounds for Emax and EC50\n        # The bounds are ([lower_Emax, lower_EC50], [upper_Emax, upper_EC50])\n        bounds = ([0, 0], [np.inf, np.inf])\n\n        # Perform nonlinear least squares fitting\n        # popt contains the optimal parameters: [est_Emax, est_EC50]\n        popt, _ = curve_fit(model, x_concentrations, y_effects, p0=p0, bounds=bounds)\n        \n        est_emax, est_ec50 = popt\n\n        # Store the estimated parameters\n        estimated_params[name] = {'EC50': est_ec50, 'Emax': est_emax}\n\n    # Retrieve estimated parameters for interpretation checks\n    est_ec50_s1 = estimated_params['S1']['EC50']\n    est_emax_s1 = estimated_params['S1']['Emax']\n    est_ec50_s2 = estimated_params['S2']['EC50']\n    est_emax_s2 = estimated_params['S2']['Emax']\n    est_ec50_s3 = estimated_params['S3']['EC50']\n    est_emax_s3 = estimated_params['S3']['Emax']\n\n    # Define the tolerance for boolean checks\n    tau = 0.05\n\n    # Compute the boolean interpretation checks\n    # Noncompetitive antagonism checks (S2 vs S1)\n    b_nc_EC50_unchanged = abs(est_ec50_s2 / est_ec50_s1 - 1) = tau\n    b_nc_Emax_decrease = est_emax_s2  est_emax_s1 * (1 - tau)\n\n    # Competitive antagonism checks (S3 vs S1)\n    b_comp_EC50_increase = est_ec50_s3 > est_ec50_s1 * (1 + tau)\n    b_comp_Emax_unchanged = abs(est_emax_s3 / est_emax_s1 - 1) = tau\n\n    # Collect all results in the specified order: EC50, Emax for S1, S2, S3, S4, then booleans\n    final_results = [\n        estimated_params['S1']['EC50'], estimated_params['S1']['Emax'],\n        estimated_params['S2']['EC50'], estimated_params['S2']['Emax'],\n        estimated_params['S3']['EC50'], estimated_params['S3']['Emax'],\n        estimated_params['S4']['EC50'], estimated_params['S4']['Emax'],\n        b_nc_EC50_unchanged,\n        b_nc_Emax_decrease,\n        b_comp_EC50_increase,\n        b_comp_Emax_unchanged\n    ]\n    \n    # Format the final output string as a Python-style list, as required.\n    # The default string representation of floats and booleans is used.\n    print(f\"[{','.join(map(str, final_results))}]\")\n\nsolve()\n\n```", "id": "2576249"}, {"introduction": "本章的压轴实践将整合离子型和代谢型信号通路，以理解它们在细胞功能层面的协同作用。在这个高级计算练习中，你将构建一个包含离子型突触输入和由代谢型信号调控的M型钾电流（$I_{\\mathrm{M}}$）的神经元模型。通过模拟，你将探索代谢型信号如何改变神经元的兴奋性，并最终影响其对突触输入的反应——即发放动作电位的概率，这充分展示了不同信号模式在神经计算中的复杂相互作用。[@problem_id:2576253]", "problem": "您的任务是使用膜生物物理学的基本原理，对单室神经元中离子型和代谢型信号转导之间的串扰进行建模。该神经元接收由离子型受体介导的兴奋性突触后电导瞬变，并表达一种电压门控的M型钾电流，该电流受毒蕈碱M1受体激活的下调。您的目标是从膜电荷守恒定律和门控动力学中推导出一个算法，然后执行该算法，以估算在M电流受到不同水平的毒蕈碱调节下的尖峰概率。最终输出必须是包含所提供测试用例的尖峰概率列表的单行文本，每个概率值四舍五入到三位小数。\n\n从以下基本生物物理学定义和定律开始：\n- 膜方程（电荷守恒）：$$C \\frac{dV}{dt} = -I_{\\text{L}} - I_{\\text{M}} + I_{\\text{syn}} + I_{\\text{noise}},$$ 其中 $C$ 是膜电容，$V$ 是膜电位，$I_{\\text{L}}$ 是漏电流，$I_{\\text{M}}$ 是M型钾电流，$I_{\\text{syn}}$ 是由离子型受体介导的突触电流，$I_{\\text{noise}}$ 是随机背景电流。\n- 漏电流：$$I_{\\text{L}} = g_{\\text{L}} \\left(V - E_{\\text{L}}\\right),$$ 其中 $g_{\\text{L}}$ 是漏电导，$E_{\\text{L}}$ 是漏反转电位。\n- M电流（由KCNQ/Kv7介导）：$$I_{\\text{M}} = g_{\\text{M,eff}}\\, w \\left(V - E_{\\text{K}}\\right),$$ 其中，$g_{\\text{M,eff}} = \\alpha g_{\\text{M,base}}$ 是在毒蕈碱M1受体（M1毒蕈碱型乙酰胆碱受体）激活后，基线M电导 $g_{\\text{M,base}}$ 被无量纲因子 $\\alpha \\in [0,1]$ 缩放后的有效M电导，$w$ 是M门控激活变量，$E_{\\text{K}}$ 是钾反转电位。M门控遵循一级动力学：$$\\frac{dw}{dt} = \\frac{w_{\\infty}(V) - w}{\\tau_w}, \\quad w_{\\infty}(V) = \\frac{1}{1 + \\exp\\left(-\\frac{V - V_{1/2}}{k_w}\\right)}.$$\n- 离子型突触电流（考虑类AMPA受体）：$$I_{\\text{syn}} = g_{\\text{syn,peak}}\\, s(t)\\, \\left(E_{\\text{A}} - V\\right),$$ 其中 $g_{\\text{syn,peak}}$ 是峰值突触电导，$E_{\\text{A}}$ 是突触反转电位。电导激活 $s(t)$ 是一个归一化到单位峰值的双指数函数：$$s(t) = \\begin{cases} 0,  t  t_0, \\\\ \\dfrac{e^{-\\frac{t - t_0}{\\tau_d}} - e^{-\\frac{t - t_0}{\\tau_r}}}{e^{-\\frac{t_p}{\\tau_d}} - e^{-\\frac{t_p}{\\tau_r}}},  t \\ge t_0, \\end{cases}$$ 其中 $\\tau_r$ 是上升时间常数，$\\tau_d$ 是衰减时间常数，$t_0$ 是起始时间，峰值时间为 $$t_p = \\frac{\\tau_r \\tau_d}{\\tau_d - \\tau_r}\\,\\ln\\!\\left(\\frac{\\tau_d}{\\tau_r}\\right)。$$\n- 随机背景电流被建模为高斯白噪声：$$I_{\\text{noise}}(t) = \\sigma_I \\sqrt{\\Delta t}\\, \\xi(t),$$ 其中 $\\sigma_I$ 是噪声强度，单位为电流/平方根时间，$\\Delta t$ 是模拟时间步长，$\\xi(t)$ 是独立的标准正态随机变量。\n\n对 $V$ 和 $w$ 使用时间步长为 $\\Delta t$、总模拟窗口为 $T$ 的前向欧拉法进行离散化：\n- $$V_{n+1} = V_n + \\frac{\\Delta t}{C}\\left(-g_{\\text{L}}\\left(V_n - E_{\\text{L}}\\right) - g_{\\text{M,eff}}\\, w_n \\left(V_n - E_{\\text{K}}\\right) + g_{\\text{syn,peak}}\\, s(t_n)\\, \\left(E_{\\text{A}} - V_n\\right) + I_{\\text{noise},n}\\right),$$\n- $$w_{n+1} = w_n + \\Delta t \\frac{w_{\\infty}(V_n) - w_n}{\\tau_w}.$$\n\n初始条件：$$V(0) = E_{\\text{L}}, \\quad w(0) = w_{\\infty}(E_{\\text{L}}).$$\n\n将尖峰定义为在模拟窗口内的任何时间，$V$ 从低于固定阈值 $V_{\\text{th}}$ 首次向上穿越到等于或高于该阈值的事件。对于每组参数，使用不同的噪声实现（但确定性参数相同）运行 $N_{\\text{trials}}$ 次统计独立的试验，并将尖峰概率估算为至少产生一个尖峰的试验所占的比例。为每个测试用例使用固定的随机种子，以确保确定性输出。\n\n在整个过程中使用以下固定的参数值和单位：\n- 电容 $C = 0.2\\,\\text{nF}$,\n- 漏电导 $g_{\\text{L}} = 5\\,\\text{nS}$,\n- 基线M电导 $g_{\\text{M,base}} = 60\\,\\text{nS}$,\n- 漏反转电位 $E_{\\text{L}} = -65\\,\\text{mV}$,\n- 钾反转电位 $E_{\\text{K}} = -90\\,\\text{mV}$,\n- AMPA反转电位 $E_{\\text{A}} = 0\\,\\text{mV}$,\n- M门控参数 $V_{1/2} = -35\\,\\text{mV}$, $k_w = 10\\,\\text{mV}$, $\\tau_w = 50\\,\\text{ms}$,\n- 突触动力学：$t_0 = 20\\,\\text{ms}$, $\\tau_r = 0.5\\,\\text{ms}$, $\\tau_d = 5\\,\\text{ms}$,\n- 噪声强度 $\\sigma_I = 0.06\\,\\text{nA}\\cdot \\text{ms}^{-1/2}$,\n- 时间步长 $\\Delta t = 0.025\\,\\text{ms}$，总时间 $T = 80\\,\\text{ms}$,\n- 尖峰阈值 $V_{\\text{th}} = -52\\,\\text{mV}$,\n- 每个测试用例的试验次数 $N_{\\text{trials}} = 400$。\n\n测试套件（五组参数），每组由有序对 $(\\alpha, g_{\\text{syn,peak}})$ 指定，其中 $g_{\\text{syn,peak}}$ 的单位是纳西门子（nanosiemens）：\n1. $(\\alpha = 1.0,\\, g_{\\text{syn,peak}} = 2.0)$\n2. $(\\alpha = 0.3,\\, g_{\\text{syn,peak}} = 2.0)$\n3. $(\\alpha = 1.0,\\, g_{\\text{syn,peak}} = 5.0)$\n4. $(\\alpha = 0.1,\\, g_{\\text{syn,peak}} = 0.5)$\n5. $(\\alpha = 0.1,\\, g_{\\text{syn,peak}} = 0.0)$\n\n为确保可复现性，对于每个测试用例，按上述顺序确定性地设置随机数生成器种子，分别为 $1, 2, 3, 4, 5$。\n\n您的程序必须：\n- 为每个测试用例模拟随机动力学过程，\n- 计算在区间 $[0, T]$ 内产生至少一个尖峰的试验比例，\n- 以小数（而非百分比）形式报告尖峰概率，每个概率均四舍五入到三位小数。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个以逗号分隔并用方括号括起来的结果列表，例如，“[$p_1$,$p_2$,$p_3$,$p_4$,$p_5$]”。每个$p_i$必须是四舍五入到小数点后三位的十进制数，不包含任何额外的文本或空格。", "solution": "问题陈述已经过严格验证，并被确定为有效。这是一个计算生物物理学领域中定义明确的问题，其基础是成熟的神经元动力学理论框架。它提出了一组清晰、完整且科学上合理的常微分方程与随机微分方程耦合的系统，用于模拟神经元行为。所有参数、初始条件和数值方法都得到了明确的规定。\n\n目标是计算神经元在受到神经调质电流影响的同时，响应突触输入而产生动作电位（“尖峰”）的概率。这是一个关于神经元兴奋性的经典问题。解决方案需要对系统的控制方程进行数值积分。\n\n神经元的状态由两个变量描述：膜电位 $V(t)$ 和M型钾电流的激活变量 $w(t)$。它们的动力学由以下源于细胞膜电荷守恒原理和一级门控动力学的微分方程组控制：\n$$C \\frac{dV}{dt} = -I_{\\text{L}} - I_{\\text{M}} + I_{\\text{syn}} + I_{\\text{noise}}$$\n$$\\frac{dw}{dt} = \\frac{w_{\\infty}(V) - w}{\\tau_w}$$\n代入所提供的各个电流表达式，完整的方程组为：\n$$C \\frac{dV}{dt} = -g_{\\text{L}}(V - E_{\\text{L}}) - \\alpha g_{\\text{M,base}} w (V - E_{\\text{K}}) + g_{\\text{syn,peak}} s(t) (E_{\\text{A}} - V) + I_{\\text{noise}}(t)$$\n$$ \\frac{dw}{dt} = \\frac{1}{\\tau_w} \\left( \\frac{1}{1 + \\exp\\left(-\\frac{V - V_{1/2}}{k_w}\\right)} - w \\right) $$\n在此，代谢型调节由参数 $\\alpha$ 捕获，该参数缩放了M电流的最大电导 $g_{\\text{M,base}}$。较小的 $\\alpha$ 对应于对M电流（一种外向、超极化电流）的更强毒蕈碱抑制。因此，预计较小的 $\\alpha$ 值将增加神经元的兴奋性。离子型输入由突触电流 $I_{\\text{syn}}$ 表示。\n\n为了数值求解该系统，我们以步长 $\\Delta t$ 将时间离散化。问题指定使用前向欧拉法。对于时间步长 $n$，其中 $t_n = n \\Delta t$，状态变量 $(V_{n+1}, w_{n+1})$ 根据其前一步的值 $(V_n, w_n)$ 计算得出：\n$$V_{n+1} = V_n + \\frac{\\Delta t}{C} \\left( -g_{\\text{L}}(V_n - E_{\\text{L}}) - \\alpha g_{\\text{M,base}} w_n (V_n - E_{\\text{K}}) + g_{\\text{syn,peak}} s(t_n) (E_{\\text{A}} - V_n) + I_{\\text{noise},n} \\right)$$\n$$w_{n+1} = w_n + \\frac{\\Delta t}{\\tau_w} \\left( w_{\\infty}(V_n) - w_n \\right)$$\n每一步的随机噪声电流 $I_{\\text{noise},n}$ 由 $I_{\\text{noise},n} = \\sigma_I \\sqrt{\\Delta t} \\, \\xi_n$ 给出，其中 $\\xi_n$ 是从标准正态分布 $\\mathcal{N}(0,1)$ 中抽取的随机变量。该项为电压动力学引入了随机性。\n\n估算每个测试用例尖峰概率的算法步骤如下：\n1.  **初始化**：对于每个由 $(\\alpha, g_{\\text{syn,peak}})$ 定义的测试用例，设置相应的随机数生成器种子以确保可复现性。为提高效率，预先计算时间向量和突触电导曲线 $s(t)$。\n2.  **蒙特卡洛模拟**：进行一组 $N_{\\text{trials}} = 400$ 次的独立模拟。为了计算效率，使用向量化并行模拟这些试验。状态向量 $\\mathbf{V}$ 和 $\\mathbf{w}$（每个大小为 $N_{\\text{trials}}$）使用静息条件进行初始化：$V(0) = E_{\\text{L}}$ 和 $w(0) = w_{\\infty}(E_{\\text{L}})$。\n3.  **时间步进循环**：通过从 $t=0$到 $t=T$ 的离散时间步进行迭代模拟。在每一步 $n$：\n    a. 根据离散化的欧拉方程更新状态向量 $\\mathbf{V}$ 和 $\\mathbf{w}$。\n    b. 为噪声项生成一个包含 $N_{\\text{trials}}$ 个独立高斯随机数的向量。\n    c. 对于任何电压 $V$ 向上穿越阈值 $V_{\\text{th}}$ 的试验（即 $V_n \\ge V_{\\text{th}}$ 且 $V_{n-1}  V_{\\text{th}}$），检测到一个尖峰事件。使用一个布尔数组跟踪哪些试验已产生尖峰。\n4.  **概率估计**：完成所有试验的时间循环后，将尖峰概率计算为出现至少一个尖峰的试验总数除以总试验次数 $N_{\\text{trials}}$。\n5.  **输出格式化**：将计算出的概率四舍五入到三位小数。对所有五个测试用例重复此过程，并将结果收集成指定的输出格式。\n\n这个结构化的数值实验能够定量评估代谢型对M电流的调节（$\\alpha$）如何与离子型突触输入（$g_{\\text{syn,peak}}$）相互作用，以控制神经元放电的可能性。其实现精确遵循了这些原则。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Simulates a single-compartment neuron model to estimate spike probabilities\n    under varying neuromodulatory and synaptic conditions.\n    \"\"\"\n    \n    # Fixed biophysical and simulation parameters\n    C = 0.2          # Membrane capacitance (nF)\n    g_L = 5.0        # Leak conductance (nS)\n    g_M_base = 60.0  # Baseline M-conductance (nS)\n    E_L = -65.0      # Leak reversal potential (mV)\n    E_K = -90.0      # Potassium reversal potential (mV)\n    E_A = 0.0        # Synaptic reversal potential (mV)\n    V_12 = -35.0     # M-gate half-activation voltage (mV)\n    k_w = 10.0       # M-gate slope factor (mV)\n    tau_w = 50.0     # M-gate time constant (ms)\n    t0 = 20.0        # Synaptic input onset time (ms)\n    tau_r = 0.5      # Synaptic rise time constant (ms)\n    tau_d = 5.0      # Synaptic decay time constant (ms)\n    sigma_I = 0.06   # Noise intensity (nA * ms^(-1/2))\n    dt = 0.025       # Simulation time step (ms)\n    T = 80.0         # Total simulation time (ms)\n    V_th = -52.0     # Spike threshold (mV)\n    N_trials = 400   # Number of trials per test case\n\n    # Define the test suite: (alpha, g_syn_peak in nS)\n    test_cases = [\n        (1.0, 2.0),\n        (0.3, 2.0),\n        (1.0, 5.0),\n        (0.1, 0.5),\n        (0.1, 0.0),\n    ]\n    seeds = [1, 2, 3, 4, 5]\n    \n    results = []\n\n    # Pre-calculate time vector and synaptic conductance waveform s(t)\n    time_vec = np.arange(0, T, dt)\n    \n    # Calculate peak time and normalization factor for synaptic conductance\n    tp = (tau_r * tau_d) / (tau_d - tau_r) * np.log(tau_d / tau_r)\n    norm_factor = np.exp(-tp / tau_d) - np.exp(-tp / tau_r)\n    \n    s_t = np.zeros_like(time_vec)\n    mask = time_vec >= t0\n    t_shifted = time_vec[mask] - t0\n    s_t[mask] = (np.exp(-t_shifted / tau_d) - np.exp(-t_shifted / tau_r)) / norm_factor\n\n    # M-gate activation function\n    def w_infinity(V):\n        return 1.0 / (1.0 + np.exp(-(V - V_12) / k_w))\n\n    # Loop through each test case\n    for i, (alpha, g_syn_peak) in enumerate(test_cases):\n        seed = seeds[i]\n        np.random.seed(seed)\n        \n        # --- Vectorized simulation for N_trials ---\n        \n        # Initial conditions for all trials\n        V = np.full(N_trials, E_L)\n        w = np.full(N_trials, w_infinity(E_L))\n        \n        # Effective M-conductance for the current case\n        g_M_eff = alpha * g_M_base\n        \n        # Boolean array to track which trials have spiked\n        spiked_trials = np.zeros(N_trials, dtype=bool)\n\n        # Main simulation loop over time steps\n        for n in range(len(time_vec)):\n            V_prev = V.copy()\n\n            # Update M-gate activation variable w for all trials\n            w = w + (dt / tau_w) * (w_infinity(V) - w)\n            \n            # Calculate currents for all trials\n            I_L = g_L * (V - E_L)\n            I_M = g_M_eff * w * (V - E_K)\n            I_syn = g_syn_peak * s_t[n] * (E_A - V)\n            I_noise = sigma_I * np.sqrt(dt) * np.random.randn(N_trials)\n            \n            # Update membrane potential V for all trials\n            dV = (dt / C) * (-I_L - I_M + I_syn + I_noise)\n            V = V + dV\n            \n            # Detect new spikes (upward threshold crossing)\n            # Only check trials that have not spiked yet to avoid redundant work\n            not_yet_spiked = ~spiked_trials\n            new_spikes = (V_prev[not_yet_spiked]  V_th)  (V[not_yet_spiked] >= V_th)\n            spiked_trials[not_yet_spiked] = new_spikes\n\n        # Calculate spike probability as the fraction of spiked trials\n        spike_prob = np.sum(spiked_trials) / N_trials\n        \n        # Append the rounded result\n        results.append(round(spike_prob, 3))\n    \n    # Format and print the final output as a single line\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2576253"}]}