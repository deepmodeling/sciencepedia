{"hands_on_practices": [{"introduction": "此练习聚焦于卡尔文-本森循环的核心酶——Rubisco的双重功能。通过计算羧化与氧化反应的速率之比，您将定量理解光呼吸的起源，以及它如何受到底物浓度（$[\\mathrm{CO}_2]$ 和 $[\\mathrm{O}_2]$）和酶的内在特异性因子的影响。这项基本计算对于掌握C3植物光合作用中的核心权衡至关重要 [@problem_id:2613850]。", "problem": "在稳态下，C3叶片的叶绿体基质中，1,5-二磷酸核酮糖羧化/加氧酶（Rubisco; ribulose-1,5-bisphosphate carboxylase/oxygenase）在卡尔文-本森循环（Calvin–Benson cycle）中，催化同一个酶-1,5-二磷酸核酮糖复合物上的两种替代反应：由溶解的二氧化碳引起的羧化反应和由溶解的分子氧引起的加氧反应。假设1,5-二磷酸核酮糖是饱和的，Rubisco被基质的pH值和镁离子完全激活，并且溶解的气体浓度相对于它们各自的米氏常数足够低，以至于每个气体-底物分支都可以被视为相对于该气体的伪一级米氏-孟顿动力学。Rubisco特异性因子 $S_{c/o}$ 定义为羧化和加氧催化效率的比值，即：\n$$\nS_{c/o} \\equiv \\frac{k_{\\mathrm{cat},c}/K_{M,\\mathrm{CO_2}}}{k_{\\mathrm{cat},o}/K_{M,\\mathrm{O_2}}}.\n$$\n给定在基质温度为 $25\\,^{\\circ}\\mathrm{C}$ 时，$S_{c/o} = 90$，游离溶解二氧化碳浓度为 $[\\mathrm{CO_2}] = 12\\,\\mu\\mathrm{M}$，游离溶解分子氧浓度为 $[\\mathrm{O_2}] = 0.25\\,\\mathrm{mM}$。请仅使用上述定义以及所述的动力学机制，从第一性原理出发，推导羧化与加氧反应速率的预期稳态比值的表达式，并根据这些基质浓度计算其数值。\n\n将最终比值表示为一个无量纲数，并将答案四舍五入到三位有效数字。最终答案中不要包含单位。", "solution": "题目要求推导由1,5-二磷酸核酮糖羧化/加氧酶（Rubisco）催化的羧化与加氧反应速率之比。该推导必须基于所提供的动力学信息，从第一性原理出发。\n\n让我们将酶-1,5-二磷酸核酮糖复合物表示为 $E'$。题目指出1,5-二磷酸核酮糖（RuBP）是饱和的，这意味着 $[E']$ 的浓度处于稳态，并代表了可用于后续反应的活性位点池。二氧化碳 $[\\mathrm{CO_2}]$ 和分子氧 $[\\mathrm{O_2}]$ 作为该复合物 $E'$ 的竞争性底物。\n\n该催化过程可以通过以下反应组来建模：\n1. 羧化反应：复合物 $E'$ 与 $\\mathrm{CO_2}$ 结合形成中间体 $E'$-$\\mathrm{CO_2}$，然后产生羧化产物。\n$$ E' + \\mathrm{CO_2} \\underset{k_{-c}}{\\stackrel{k_c}{\\rightleftharpoons}} E'\\text{-}\\mathrm{CO_2} \\xrightarrow{k_{\\mathrm{cat},c}} E' + \\text{Products}_c $$\n2. 加氧反应：复合物 $E'$ 与 $\\mathrm{O_2}$ 结合形成中间体 $E'$-$\\mathrm{O_2}$，然后产生加氧产物。\n$$ E' + \\mathrm{O_2} \\underset{k_{-o}}{\\stackrel{k_o}{\\rightleftharpoons}} E'\\text{-}\\mathrm{O_2} \\xrightarrow{k_{\\mathrm{cat},o}} E' + \\text{Products}_o $$\n这些反应的米氏常数定义为 $K_{M,\\mathrm{CO_2}} = (k_{-c} + k_{\\mathrm{cat},c})/k_c$ 和 $K_{M,\\mathrm{O_2}} = (k_{-o} + k_{\\mathrm{cat},o})/k_o$。羧化速率 $v_c$ 和加氧速率 $v_o$ 分别由 $v_c = k_{\\mathrm{cat},c}[E'\\text{-}\\mathrm{CO_2}]$ 和 $v_o = k_{\\mathrm{cat},o}[E'\\text{-}\\mathrm{O_2}]$ 给出。\n\n为了求出中间体的稳态浓度，我们应用稳态近似。活性位点的总浓度 $[E'_T]$ 分布在游离形式 $E'$ 和两种结合形式中：\n$$ [E'_T] = [E'] + [E'\\text{-}\\mathrm{CO_2}] + [E'\\text{-}\\mathrm{O_2}] $$\n在稳态条件下，中间体的形成速率和分解速率相等：\n$$ k_c[E'][\\mathrm{CO_2}] = (k_{-c} + k_{\\mathrm{cat},c})[E'\\text{-}\\mathrm{CO_2}] \\implies [E'\\text{-}\\mathrm{CO_2}] = \\frac{[E'][\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} $$\n$$ k_o[E'][\\mathrm{O_2}] = (k_{-o} + k_{\\mathrm{cat},o})[E'\\text{-}\\mathrm{O_2}] \\implies [E'\\text{-}\\mathrm{O_2}] = \\frac{[E'][\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}} $$\n将这些表达式代入 $[E'_T]$ 的守恒方程中：\n$$ [E'_T] = [E'] + \\frac{[E'][\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} + \\frac{[E'][\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}} = [E']\\left(1 + \\frac{[\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} + \\frac{[\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}}\\right) $$\n由此，我们可以表示出游离复合物 $[E']$ 的浓度：\n$$ [E'] = \\frac{[E'_T]}{1 + \\frac{[\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} + \\frac{[\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}}} $$\n现在，羧化和加氧的速率可以用总酶浓度 $[E'_T]$ 和底物浓度来表示：\n$$ v_c = k_{\\mathrm{cat},c}[E'\\text{-}\\mathrm{CO_2}] = k_{\\mathrm{cat},c}\\frac{[E'][\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} = \\frac{k_{\\mathrm{cat},c}}{K_{M,\\mathrm{CO_2}}} \\frac{[E'_T][\\mathrm{CO_2}]}{1 + \\frac{[\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} + \\frac{[\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}}} $$\n$$ v_o = k_{\\mathrm{cat},o}[E'\\text{-}\\mathrm{O_2}] = k_{\\mathrm{cat},o}\\frac{[E'][\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}} = \\frac{k_{\\mathrm{cat},o}}{K_{M,\\mathrm{O_2}}} \\frac{[E'_T][\\mathrm{O_2}]}{1 + \\frac{[\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} + \\frac{[\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}}} $$\n题目要求的是这两个速率的比值 $\\frac{v_c}{v_o}$。当我们计算这个比值时，对应于总酶浓度 $[E'_T]$ 的项和复杂的分母项都相互抵消了。这是在该动力学模型下竞争性底物的一个基本结果。\n$$ \\frac{v_c}{v_o} = \\frac{\\frac{k_{\\mathrm{cat},c}}{K_{M,\\mathrm{CO_2}}} [E'_T][\\mathrm{CO_2}]}{\\frac{k_{\\mathrm{cat},o}}{K_{M,\\mathrm{O_2}}} [E'_T][\\mathrm{O_2}]} = \\frac{k_{\\mathrm{cat},c}/K_{M,\\mathrm{CO_2}}}{k_{\\mathrm{cat},o}/K_{M,\\mathrm{O_2}}} \\cdot \\frac{[\\mathrm{CO_2}]}{[\\mathrm{O_2}]} $$\n项 $\\frac{k_{\\mathrm{cat}}}{K_M}$ 是酶对给定底物的催化效率。题目将Rubisco特异性因子 $S_{c/o}$ 定义为羧化和加氧催化效率的比值：\n$$ S_{c/o} \\equiv \\frac{k_{\\mathrm{cat},c}/K_{M,\\mathrm{CO_2}}}{k_{\\mathrm{cat},o}/K_{M,\\mathrm{O_2}}} $$\n将此定义代入我们推导出的速率比中，得到最终表达式：\n$$ \\frac{v_c}{v_o} = S_{c/o} \\frac{[\\mathrm{CO_2}]}{[\\mathrm{O_2}]} $$\n与问题陈述中提到的可能具有误导性的简化相反，该表达式无论气体浓度相对于其米氏常数是高是低都成立。题目中“伪一级”动力学的前提也会得出相同的最终比值，因为它是这个更一般结果的一个特例，其中分母项 $1 + \\frac{[\\mathrm{CO_2}]}{K_{M,\\mathrm{CO_2}}} + \\frac{[\\mathrm{O_2}]}{K_{M,\\mathrm{O_2}}} \\approx 1$。\n\n现在，我们代入给定的数值来计算该比值：\n$S_{c/o} = 90$\n$[\\mathrm{CO_2}] = 12\\,\\mu\\mathrm{M} = 12 \\times 10^{-6}\\,\\mathrm{M}$\n$[\\mathrm{O_2}] = 0.25\\,\\mathrm{mM} = 0.25 \\times 10^{-3}\\,\\mathrm{M} = 250 \\times 10^{-6}\\,\\mathrm{M}$\n\n浓度的比值为：\n$$ \\frac{[\\mathrm{CO_2}]}{[\\mathrm{O_2}]} = \\frac{12 \\times 10^{-6}\\,\\mathrm{M}}{250 \\times 10^{-6}\\,\\mathrm{M}} = \\frac{12}{250} $$\n最后，我们计算反应速率的比值：\n$$ \\frac{v_c}{v_o} = 90 \\times \\frac{12}{250} = \\frac{1080}{250} = \\frac{108}{25} = 4.32 $$\n题目要求结果四舍五入到三位有效数字。计算值 $4.32$ 恰好有三位有效数字。", "answer": "$$\\boxed{4.32}$$", "id": "2613850"}, {"introduction": "从单个酶的动力学扩展到整个循环的系统行为，这个思想实验挑战您预测在特定酶被抑制后关键代谢物池的动态变化。此练习旨在培养您的系统性思维，帮助您将卡尔文-本森循环理解为一个相互关联的网络，其中扰动会产生独特的代谢指征。这种分析对于诊断调控瓶颈和解读代谢组学研究的数据至关重要 [@problem_id:2613788]。", "problem": "一个叶肉细胞叶绿体处于光照充足、预适应的卡尔文-本森循环 (CBC) 稳态，其电子传递速率固定，因此在紧随任何扰动后的短暂时间窗口内，三磷酸腺苷 (ATP) 和还原型烟酰胺腺嘌呤二核苷酸磷酸 (NADPH) 的供应速率近似恒定。假设 ribulose-$1,5$-bisphosphate (RuBP) 的羧化是主要通量，光呼吸、产物输出和淀粉合成在扰动后的最初时刻没有显著变化，并且相互转化磷酸丙糖和单磷酸糖的可逆醛缩酶/转酮醇酶网络相对于所施加的扰动响应迅速。考虑在时间 $t=0$ 时进行的两个独立、瞬时且特定的操作：(i) 完全抑制 ribulose-$5$-phosphate kinase (phosphoribulokinase, PRK)，即 ATP 依赖的 ribulose-$5$-phosphate 向 RuBP 的转化；(ii) 完全抑制 sedoheptulose-$1,7$-bisphosphatase (SBPase)，即 sedoheptulose-$1,7$-bisphosphate 水解为 sedoheptulose-$7$-phosphate 和无机磷酸 (Pi) 的反应。\n\n仅使用质量和磷酸守恒定律、标准的酶动力学相对于底物和效应物的单调性，以及卡尔文-本森循环的化学计量布局（即，RuBP 被 ribulose-$1,5$-bisphosphate carboxylase/oxygenase 消耗生成 $3$-phosphoglycerate ($3$-PGA)，$3$-PGA 使用 ATP 和 NADPH 被还原为 triose phosphate，triose phosphate 通过再生网络再循环回 pentoses，并最终生成 RuBP），确定每次抑制后瞬间的初始时间导数 $d[\\mathrm{RuBP}]/dt$、$d[3\\text{-}\\mathrm{PGA}]/dt$ 和 $d[\\mathrm{triose\\ phosphate}]/dt$ 的定性符号。\n\n选择一个选项，该选项正确列出了两种情况下 $[\\mathrm{RuBP}]$、$[3\\text{-}\\mathrm{PGA}]$ 和 $[\\mathrm{triose\\ phosphate}]$ 池的初始定性变化（增加 $\\uparrow$，减少 $\\downarrow$，无净变化 $\\approx$）。每个选项的格式为：\nPRK被抑制：$[\\mathrm{RuBP}]$、$[3\\text{-}\\mathrm{PGA}]$、$[\\mathrm{triose\\ phosphate}]$；SBPase被抑制：$[\\mathrm{RuBP}]$、$[3\\text{-}\\mathrm{PGA}]$、$[\\mathrm{triose\\ phosphate}]$。\n\nA. PRK被抑制：$\\downarrow$, $\\downarrow$, $\\uparrow$；SBPase被抑制：$\\downarrow$, $\\uparrow$, $\\downarrow$。\n\nB. PRK被抑制：$\\uparrow$, $\\uparrow$, $\\downarrow$；SBPase被抑制：$\\downarrow$, $\\downarrow$, $\\uparrow$。\n\nC. PRK被抑制：$\\downarrow$, $\\uparrow$, $\\downarrow$；SBPase被抑制：$\\downarrow, \\downarrow, \\uparrow$。\n\nD. PRK被抑制：$\\downarrow$, $\\downarrow$, $\\downarrow$；SBPase被抑制：$\\downarrow$, $\\uparrow$, $\\uparrow$。\n\nE. PRK被抑制：$\\uparrow$, $\\downarrow$, $\\uparrow$；SBPase被抑制：$\\uparrow$, $\\uparrow$, $\\downarrow$。", "solution": "问题陈述描述了一个有效且适定的生化系统。它要求对卡尔文-本森循环 (CBC) 对特定酶抑制的初始响应进行定性分析。该分析将通过考虑每个代谢物库的质量守恒定律来进行，其中代谢物浓度 $[X]$ 的变化速率由生成通量之和与消耗通量之和的差值给出：\n$$ \\frac{d[X]}{dt} = \\sum v_{\\text{production}} - \\sum v_{\\text{consumption}} $$\n在初始稳态 ($t<0$) 时，对于所有代谢物，$\\frac{d[X]}{dt} = 0$。抑制作用在 $t=0$ 时施加。我们必须确定在 $t=0^+$ 时 $\\frac{d[X]}{dt}$ 的符号。\n\n与此问题相关的 CBC 核心反应如下：\n1.  羧化作用：Ribulose-$1,5$-bisphosphate (RuBP) 被 RuBisCO 羧化，生成两个分子的 $3$-phosphoglycerate ($3$-PGA)。速率为 $v_{\\text{RuBisCO}}$。\n2.  还原作用：$3$-PGA 在一系列需要 adenosine triphosphate (ATP) 和 reduced nicotinamide adenine dinucleotide phosphate (NADPH) 的反应中被还原为 triose phosphate (TP)。净速率为 $v_{\\text{reduction}}$。\n3.  再生作用：TP 通过一个复杂的反应网络被用于再生 RuBP。此阶段的两个关键酶是 sedoheptulose-$1,7$-bisphosphatase (SBPase) 和 phosphoribulokinase (PRK)。此阶段消耗 TP（速率为 $v_{\\text{regeneration\\_out}}$）并生成 RuBP（速率为 $v_{\\text{PRK}}$）。\n\n指定代谢物库的变化速率为：\n$$ \\frac{d[\\mathrm{RuBP}]}{dt} = v_{\\text{PRK}} - v_{\\text{RuBisCO}} $$\n$$ \\frac{d[3\\text{-}\\mathrm{PGA}]}{dt} = 2 \\cdot v_{\\text{RuBisCO}} - v_{\\text{reduction}} $$\n$$ \\frac{d[\\mathrm{TP}]}{dt} = v_{\\text{reduction}} - v_{\\text{regeneration\\_out}} $$\n\n**情况 (i)：完全抑制 phosphoribulokinase (PRK)**\n\n酶 PRK 催化再生阶段的最后一步：Ribulose-$5$-phosphate (Ru$5$P) + ATP $\\to$ RuBP + ADP。在 $t=0$ 时，其速率 $v_{\\text{PRK}}$ 变为零。\n\n-   **$[\\mathrm{RuBP}]$ 的变化：**\n    生成通量 $v_{\\text{PRK}}$ 变为 $0$。只要 $[\\mathrm{RuBP}]$ 池存在，消耗通量 $v_{\\text{RuBisCO}}$ 就会继续。\n    $$ \\frac{d[\\mathrm{RuBP}]}{dt} = 0 - v_{\\text{RuBisCO}} < 0 $$\n    因此，$[\\mathrm{RuBP}]$ 的浓度将减少：$[\\mathrm{RuBP}] \\downarrow$。\n\n-   **$[3\\text{-}\\mathrm{PGA}]$ 的变化：**\n    $3\\text{-PGA}$ 的生成速率 $2 \\cdot v_{\\text{RuBisCO}}$ 依赖于其底物 $[\\mathrm{RuBP}]$ 的浓度。由于 $[\\mathrm{RuBP}]$ 正在减少，$3\\text{-PGA}$ 的生成速率也将减少。$3\\text{-PGA}$ 的消耗速率 $v_{\\text{reduction}}$ 依赖于 $[3\\text{-}\\mathrm{PGA}]$、$[\\text{ATP}]$ 和 $[\\text{NADPH}]$。最初，$[3\\text{-}\\mathrm{PGA}]$ 池处于其稳态水平，并且问题陈述 ATP 和 NADPH 的供应是恒定的。因此，消耗通量最初保持较高水平，而生成通量减少。\n    $$ \\text{流入通量} < \\text{流出通量} $$\n    因此，$3\\text{-PGA}$ 的浓度将减少：$[3\\text{-}\\mathrm{PGA}] \\downarrow$。\n\n-   **$[\\mathrm{triose\\ phosphate}]$ 的变化：**\n    $[\\mathrm{TP}]$ 的生成速率 $v_{\\text{reduction}}$ 将随着其底物 $[3\\text{-}\\mathrm{PGA}]$ 的减少而下降。$[\\mathrm{TP}]$ 的消耗 $v_{\\text{regeneration\\_out}}$ 供给再生途径。该途径现在在其最后一步 (PRK) 被阻断。这导致 PRK 的底物 $[\\text{Ru5P}]$ 及其前体积累。这种“交通堵塞”或产物抑制效应通过快速响应网络向后传播，从而大幅减少 $[\\mathrm{TP}]$ 的消耗。尽管 $[\\mathrm{TP}]$ 的生成正在下降，但其消耗被更严重地阻断。从初始的 $[\\mathrm{RuBP}]$ 和 $[3\\text{-}\\mathrm{PGA}]$ 池流出的碳继续被转化为 $[\\mathrm{TP}]$，然后在阻断点前积累。\n    $$ \\text{流入通量} > \\text{流出通量} $$\n    因此，$[\\mathrm{TP}]$ 的浓度将增加：$[\\mathrm{triose\\ phosphate}] \\uparrow$。\n\nPRK 抑制总结：$[\\mathrm{RuBP}] \\downarrow$、$[3\\text{-}\\mathrm{PGA}] \\downarrow$、$[\\mathrm{triose\\ phosphate}] \\uparrow$。\n\n**情况 (ii)：完全抑制 sedoheptulose-$1,7$-bisphosphatase (SBPase)**\n\n酶 SBPase 催化 sedoheptulose-$1,7$-bisphosphate (SBP) 水解为 sedoheptulose-$7$-phosphate (S$7$P)，这是再生阶段的一个关键步骤。在 $t=0$ 时，该通量变为零。由于其对叶绿体基质磷酸盐平衡的影响，这种抑制具有更复杂的效果。\n\n-   **$[\\mathrm{RuBP}]$ 的变化：**\n    SBPase 处的阻断中断了再生途径，阻止了 $[\\text{Ru5P}]$ 的合成，从而也阻止了 RuBP 的合成。RuBP 的生成通量 $v_{\\text{PRK}}$ 将因其底物 ($[\\text{Ru5P}]$) 被耗尽而降至零。消耗通量 $v_{\\text{RuBisCO}}$ 继续进行。\n    $$ \\frac{d[\\mathrm{RuBP}]}{dt} = v_{\\text{PRK}} - v_{\\text{RuBisCO}} \\approx 0 - v_{\\text{RuBisCO}} < 0 $$\n    因此，$[\\mathrm{RuBP}]$ 的浓度将减少：$[\\mathrm{RuBP}] \\downarrow$。\n\n-   **$[3\\text{-}\\mathrm{PGA}]$ 的变化：**\n    SBPase 阻断导致 SBP（一种二磷酸糖）的积累。这种积累将叶绿体基质内的无机磷酸 ($P_i$) 固存起来。基质中 $[P_i]$ 的减少会抑制 ATP 合成酶（光合磷酸化），导致基质中 $[\\text{ATP}]$ 和 $[\\text{ATP}]/[\\text{ADP}]$ 比率下降。$3\\text{-PGA}$ 的消耗速率 $v_{\\text{reduction}}$ 高度依赖于 ATP（在 phosphoglycerate kinase 步骤）。因此，由于 ATP 限制，$v_{\\text{reduction}}$ 急剧下降。$3\\text{-PGA}$ 的生成速率 $2 \\cdot v_{\\text{RuBisCO}}$ 也随着 $[\\mathrm{RuBP}]$ 的下降而减少，但由于 ATP 骤降导致的 $v_{\\text{reduction}}$ 速率的扼制作用更快、更严重。\n    $$ \\text{流入通量} > \\text{流出通量（严重抑制）} $$\n    因此，生成暂时超过消耗，导致 $3\\text{-PGA}$ 的积累：$[3\\text{-}\\mathrm{PGA}] \\uparrow$。\n\n-   **$[\\mathrm{triose\\ phosphate}]$ 的变化：**\n    $[\\mathrm{TP}]$ 的生成速率是 $v_{\\text{reduction}}$。如前所述，由于基质 $[\\text{ATP}]$ 的下降，该通量急剧减少。$[\\mathrm{TP}]$ 的消耗速率 $v_{\\text{regeneration\\_out}}$ 也因再生途径在下游被阻断而减少。然而，$[\\mathrm{TP}]$ *生成*的崩溃是主要的最直接效应。现有的 $[\\mathrm{TP}]$ 池在整个途径堵塞之前，继续被再生途径的初始步骤消耗（例如，形成更多的 SBP）。在生成崩溃而消耗暂时持续的情况下，净效应是 $[\\mathrm{TP}]$ 池的耗尽。\n    $$ \\text{流入通量（严重抑制）} < \\text{流出通量} $$\n    因此，$[\\mathrm{TP}]$ 的浓度将减少：$[\\mathrm{triose\\ phosphate}] \\downarrow$。\n\nSBPase 抑制总结：$[\\mathrm{RuBP}] \\downarrow$、$[3\\text{-}\\mathrm{PGA}] \\uparrow$、$[\\mathrm{triose\\ phosphate}] \\downarrow$。\n\n**选项评估**\n\n-   **A. PRK被抑制：$\\downarrow$, $\\downarrow$, $\\uparrow$；SBPase被抑制：$\\downarrow$, $\\uparrow$, $\\downarrow$。**\n    - PRK 分析：与我们推导出的结果（$\\downarrow, \\downarrow, \\uparrow$）相符。\n    - SBPase 分析：与我们推导出的结果（$\\downarrow, \\uparrow, \\downarrow$）相符。\n    - 结论：**正确**。\n\n-   **B. PRK被抑制：$\\uparrow$, $\\uparrow$, $\\downarrow$；SBPase被抑制：$\\downarrow$, $\\downarrow$, $\\uparrow$。**\n    - PRK 分析：不正确。$[\\mathrm{RuBP}]$ 的合成被阻断，因此其浓度必须下降。\n    - SBPase 分析：不正确。这与一个忽略了 $P_i$ 限制的简化分析相符，但未能捕捉到实验观察到的 $[3\\text{-}\\mathrm{PGA}]$ 上升。\n    - 结论：**不正确**。\n\n-   **C. PRK被抑制：$\\downarrow$, $\\uparrow$, $\\downarrow$；SBPase被抑制：$\\downarrow, \\downarrow, \\uparrow$。**\n    - PRK 分析：不正确。抑制 PRK 会导致其产物 $[\\mathrm{RuBP}]$ 和后续产物 $[3\\text{-}\\mathrm{PGA}]$ 减少，而其前体（包括 $[\\mathrm{TP}]$）积累。该选项对 $[3\\text{-}\\mathrm{PGA}]$ 和 $[\\mathrm{TP}]$ 的陈述正好相反。模式 $\\downarrow, \\uparrow, \\downarrow$ 是 SBPase 抑制的特征。\n    - SBPase 分析：原因同选项 B，不正确。\n    - 结论：**不正确**。\n\n-   **D. PRK被抑制：$\\downarrow$, $\\downarrow$, $\\downarrow$；SBPase被抑制：$\\downarrow$, $\\uparrow$, $\\uparrow$。**\n    - PRK 分析：不正确。由于下游阻断，$[\\mathrm{TP}]$ 应该增加而不是减少。\n    - SBPase 分析：不正确。由于依赖 ATP 的合成崩溃，$[\\mathrm{TP}]$ 应该减少。\n    - 结论：**不正确**。\n\n-   **E. PRK被抑制：$\\uparrow$, $\\downarrow$, $\\uparrow$；SBPase被抑制：$\\uparrow$, $\\uparrow$, $\\downarrow$。**\n    - PRK 分析：不正确。$[\\mathrm{RuBP}]$ 不可能增加。\n    - SBPase 分析：不正确。$[\\mathrm{RuBP}]$ 不可能增加。\n    - 结论：**不正确**。\n\n唯一与基于卡尔文-本森循环的代谢控制和调节原理进行的严谨分析相一致的选项是 A。", "answer": "$$\\boxed{A}$$", "id": "2613788"}, {"introduction": "这最后一个练习通过应用广泛使用的Farquhar-von Caemmerer-Berry (FvCB) 模型，将生化理论与实验植物生理学联系起来。您将使用该模型拟合光合响应曲线数据，以估算最大羧化速率（$V_{c,\\max}$）和最大电子传递速率（$J_{\\max}$）等关键生理参数。这项任务提供了宝贵的实践经验，让您学习如何运用数学模型来解析不同生理限制对光合作用的相对重要性，这是现代生态学和农业研究中的一项核心技能 [@problem_id:2613785]。", "problem": "你的任务是在饱和辐照度条件下，为叶片光合作用的 Farquhar–von Caemmerer–Berry 生物化学模型进行参数化，该模型考虑了卡尔文-本森循环（CBC）中受 1,5-二磷酸核酮糖羧化/加氧酶（Rubisco）羧化限制和 1,5-二磷酸核酮糖再生限制的情况。胞间二氧化碳分压用 $C_i$ 表示，净 CO$_2$ 同化速率用 $A$ 表示。已知的日间呼吸速率（光下非光呼吸的线粒体呼吸）用 $R_d$ 表示。所有速率均以微摩尔/平方米/秒为单位，所有分压均以帕斯卡为单位。假设整个过程中叶片温度为 $25$ 摄氏度，氧气分压恒定为 $21{,}000$ 帕斯卡。请使用以下基本事实作为你推导和算法设计的基础：\n- 在饱和辐照度下，实际净同化速率 $A$ 由 $A = \\min\\{A_c,A_j\\} - R_d$ 给出，其中 $A_c$ 是 Rubisco 羧化限制速率，$A_j$ 是 1,5-二磷酸核酮糖再生限制速率。\n- 羧化限制速率为 $A_c = V_{c,\\max}\\,\\dfrac{C_i - \\Gamma^\\ast}{C_i + K_c\\left(1 + \\dfrac{O}{K_o}\\right)}$，其中 $V_{c,\\max}$ 是最大 Rubisco 羧化能力，$\\Gamma^\\ast$ 是无日间呼吸时的 CO$_2$ 补偿点，$K_c$ 和 $K_o$ 分别是 CO$_2$ 和 O$_2$ 的米氏常数，$O$ 是氧气分压。\n- 在饱和辐照度下，再生限制速率为 $A_j = \\dfrac{J}{4}\\,\\dfrac{C_i - \\Gamma^\\ast}{C_i + 2\\Gamma^\\ast}$，其中 $J$ 是电子传递速率。在饱和辐照度下，取 $J = J_{\\max}$，即最大电子传递能力。\n\n在 $25$ 摄氏度下使用以下经过充分检验的参数值：\n- $K_c = 40.4$ 帕斯卡，\n- $K_o = 27{,}800$ 帕斯卡，\n- $\\Gamma^\\ast = 4.275$ 帕斯卡，\n- $O = 21{,}000$ 帕斯卡。\n\n你的程序必须使用上述模型和每个数据集已知的 $R_d$ 值，对 $V_{c,\\max}$ 和 $J_{\\max}$ 进行非线性最小二乘拟合。约束 $V_{c,\\max}$ 和 $J_{\\max}$ 均为严格正值。\n\n测试集规范：\n- 所有数据集使用相同的胞间 CO$_2$ 分压（单位：帕斯卡）：$C_i \\in \\{10, 20, 50, 100, 200, 300, 400, 600\\}$。\n- 所有数据集使用已知的日间呼吸速率 $R_d = 1.5$。\n- 通过使用下面列出的参数对精确评估模型（无噪声），构建三个饱和辐照度下的合成 $A/C_i$ 数据集，然后将这些合成的 $A$ 值作为待拟合的测量数据：\n    - 情况 $1$ (基线): $V_{c,\\max} = 80$, $J_{\\max} = 160$。\n    - 情况 $2$ (Rubisco 能力降低): $V_{c,\\max} = 60$, $J_{\\max} = 160$。\n    - 情况 $3$ (再生能力降低): $V_{c,\\max} = 80$, $J_{\\max} = 120$。\n\n拟合与解释任务：\n- 对于每种情况，通过在测试集的所有 $C_i$ 上最小化模型预测的 $A$ 与合成的“测量”$A$ 之间的残差平方和，来拟合 $V_{c,\\max}$ 和 $J_{\\max}$。确保 $V_{c,\\max} > 0$ 且 $J_{\\max} > 0$。\n- 使用拟合结果，解释相对于基线（情况 1）的主要变化是反映了 Rubisco 能力的变化还是再生能力的变化。使用相对变化定义以下分类规则：\n    - 对于情况 $k \\in \\{2,3\\}$，计算 $\\Delta_V^{(k)} = \\left|\\dfrac{\\hat V_{c,\\max}^{(k)} - \\hat V_{c,\\max}^{(1)}}{\\hat V_{c,\\max}^{(1)}}\\right|$ 和 $\\Delta_J^{(k)} = \\left|\\dfrac{\\hat J_{\\max}^{(k)} - \\hat J_{\\max}^{(1)}}{\\hat J_{\\max}^{(1)}}\\right|$，其中帽子符号表示拟合值。\n    - 如果 $\\Delta_V^{(k)} - \\Delta_J^{(k)} \\ge \\epsilon$，则“主要限制转移代码” $L^{(k)}$ 为 $1$；如果 $\\Delta_J^{(k)} - \\Delta_V^{(k)} \\ge \\epsilon$，则为 $2$；否则为 $0$。容差 $\\epsilon = 0.02$。\n    - 按照惯例，为基线定义 $L^{(1)} = 0$。\n\n答案规范：\n- 按 1, 2, 3 的顺序报告每种情况的拟合 $V_{c,\\max}$ 和 $J_{\\max}$（单位为微摩尔/平方米/秒），四舍五入到三位小数，以及如上定义的整数代码 $L^{(k)}$。\n- 你的程序应生成单行输出，其中包含一个由三个列表组成的逗号分隔列表，每个列表对应一种情况，每个内部列表的形式为 $[\\hat V_{c,\\max}, \\hat J_{\\max}, L]$。例如，打印的行应类似于 $[[v_1,j_1,\\ell_1],[v_2,j_2,\\ell_2],[v_3,j_3,\\ell_3]]$，并用数值替换。", "solution": "该问题是有效的。它以广为接受的 Farquhar–von Caemmerer–Berry (FvCB) 光合作用模型为科学依据，作为一个参数估计问题在数学上是适定的，并且陈述客观，提供了所有必要信息。\n\n主要目标是通过估计两个关键生理参数：最大 Rubisco 羧化能力 $V_{c,\\max}$ 和最大电子传递能力 $J_{\\max}$，来参数化叶片光合作用的 FvCB 模型。这是通过在饱和辐照度下，将模型拟合到代表 $A/C_i$ 曲线（净 CO$_2$ 同化速率 $A$ 对比胞间 CO$_2$ 分压 $C_i$）的合成数据来实现的。\n\n在指定条件下，FvCB 模型指出，净同化速率 $A$ 受两个过程中的较小者限制：Rubisco 的羧化速率 ($A_c$) 和 1,5-二磷酸核酮糖 (RuBP) 的再生速率，后者依赖于电子传递速率 ($A_j$)。净速率是总速率减去光下线粒体呼吸速率 $R_d$。该关系表示为：\n$$\nA = \\min\\{A_c, A_j\\} - R_d\n$$\n这两个限制速率由米氏动力学类型的方程给出。Rubisco 限制速率 $A_c$ 为：\n$$\nA_c = V_{c,\\max} \\frac{C_i - \\Gamma^\\ast}{C_i + K_c\\left(1 + \\frac{O}{K_o}\\right)}\n$$\n此处，$\\Gamma^\\ast$ 是无日间呼吸时的 CO$_2$ 补偿点，$K_c$ 和 $K_o$ 分别是 Rubisco 对 CO$_2$ 和 O$_2$ 的米氏常数，$O$ 是氧气分压。为方便起见，可以定义一个环境氧气下对 CO$_2$ 的有效米氏常数 $K_m = K_c\\left(1 + \\frac{O}{K_o}\\right)$。\n\nRuBP 再生限制速率 $A_j$ 在饱和光下由最大电子传递速率 $J_{\\max}$ 决定。卡尔文-本森循环的化学计量关系决定了每个固定的 CO$_2$ 分子大约需要 4 个电子，从而得出以下表达式：\n$$\nA_j = \\frac{J_{\\max}}{4} \\frac{C_i - \\Gamma^\\ast}{C_i + 2\\Gamma^\\ast}\n$$\n参数估计被构建为一个非线性最小二乘优化问题。我们寻求参数向量 $\\mathbf{p} = [V_{c,\\max}, J_{\\max}]^T$，该向量能最小化模型预测的同化速率 $A_{\\text{model}}(C_i, \\mathbf{p})$ 与提供的合成“测量”数据 $A_{\\text{data}}(C_i)$ 之间的残差平方和 (SSR)。需要最小化的目标函数是：\n$$\n\\text{SSR}(\\mathbf{p}) = \\sum_{k=1}^{N} \\left( A_{\\text{model}}(C_{i,k}, \\mathbf{p}) - A_{\\text{data}}(C_{i,k}) \\right)^2\n$$\n最小化过程需要遵循生物物理上必需的约束条件，即 $V_{c,\\max}$ 和 $J_{\\max}$ 都必须严格为正：$V_{c,\\max} > 0$ 且 $J_{\\max} > 0$。\n\n算法解决方案的步骤如下：\n首先，使用提供的方程和常数（$K_c = 40.4$ Pa, $K_o = 27800$ Pa, $\\Gamma^\\ast = 4.275$ Pa, $O = 21000$ Pa, $R_d = 1.5$ $\\mu$mol m$^{-2}$ s$^{-1}$）创建一个实现 FvCB 模型的函数 $A_{\\text{model}}(C_i, V_{c,\\max}, J_{\\max})$。\n\n其次，使用此模型函数生成三个用于 $A_{\\text{data}}$ 的合成数据集。每个数据集对应指定的三种情况之一，使用真实的参数对：情况 1 ($V_{c,\\max}=80, J_{\\max}=160$)，情况 2 ($V_{c,\\max}=60, J_{\\max}=160$)，以及情况 3 ($V_{c,\\max}=80, J_{\\max}=120$)。所有情况都使用相同的 $C_i$ 值集合 $\\{10, 20, 50, 100, 200, 300, 400, 600\\}$ Pa。\n\n第三，对于每个数据集，使用 `scipy.optimize.minimize` 函数找到最小化 SSR 的最优参数 $\\hat{V}_{c,\\max}$ 和 $\\hat{J}_{\\max}$。选择 L-BFGS-B 算法来完成此任务，因为它非常适合带边界约束的优化。将两个参数的下界设置为一个小的正数，以强制执行正值约束。\n\n最后，在获得每种情况 $k \\in \\{1, 2, 3\\}$ 的拟合参数 ($\\hat{V}_{c,\\max}^{(k)}, \\hat{J}_{\\max}^{(k)}$) 后，我们执行指定的解释。基线情况 $k=1$ 被分配一个限制转移代码 $L^{(1)}=0$。对于情况 $k \\in \\{2, 3\\}$，计算拟合参数相对于基线的相对变化：\n$$\n\\Delta_V^{(k)} = \\left|\\frac{\\hat V_{c,\\max}^{(k)} - \\hat V_{c,\\max}^{(1)}}{\\hat V_{c,\\max}^{(1)}}\\right| \\quad \\text{and} \\quad \\Delta_J^{(k)} = \\left|\\frac{\\hat J_{\\max}^{(k)} - \\hat J_{\\max}^{(1)}}{\\hat J_{\\max}^{(1)}}\\right|\n$$\n然后，通过将这些相对变化与容差 $\\epsilon = 0.02$ 进行比较来确定限制转移代码 $L^{(k)}$：如果 $V_{c,\\max}$ 的变化是主要的，则 $L^{(k)}=1$；如果 $J_{\\max}$ 的变化是主要的，则 $L^{(k)}=2$；否则为 $L^{(k)}=0$。\n\n结果由三位小数精度的拟合参数和三种情况各自的整数限制代码组成，被汇总并以指定格式打印。由于输入数据是由无噪声模型生成的，因此拟合过程预计能高精度地恢复原始真实参数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import minimize\n\ndef solve():\n    \"\"\"\n    Solves the FvCB model parameterization problem.\n    \"\"\"\n    # ----------------------------------------------------------------------\n    # 1. Define constants, parameters, and test cases from the problem\n    # ----------------------------------------------------------------------\n\n    # Biophysical parameters at 25 degrees Celsius\n    KC = 40.4  # Michaelis-Menten constant for CO2 (Pascals)\n    KO = 27800.0  # Michaelis-Menten constant for O2 (Pascals)\n    GAMMA_STAR = 4.275  # CO2 compensation point (Pascals)\n    O = 21000.0  # Oxygen partial pressure (Pascals)\n    RD = 1.5  # Day respiration rate (umol m^-2 s^-1)\n\n    # Independent variable: internal CO2 partial pressure\n    CI_VALUES = np.array([10, 20, 50, 100, 200, 300, 400, 600])\n\n    # True parameters for synthetic data generation\n    TRUE_PARAMS = [\n        (80.0, 160.0),  # Case 1: Baseline\n        (60.0, 160.0),  # Case 2: Reduced Rubisco capacity\n        (80.0, 120.0),  # Case 3: Reduced regeneration capacity\n    ]\n    \n    # Epsilon for limitation shift classification\n    EPSILON = 0.02\n\n    # ----------------------------------------------------------------------\n    # 2. Implement the FvCB model\n    # ----------------------------------------------------------------------\n\n    def calculate_A(Ci, Vcmax, Jmax):\n        \"\"\"\n        Calculates net CO2 assimilation rate A based on the FvCB model.\n        Args:\n            Ci (np.ndarray): Internal CO2 partial pressures.\n            Vcmax (float): Maximum Rubisco carboxylation capacity.\n            Jmax (float): Maximum electron transport capacity.\n        Returns:\n            np.ndarray: Net assimilation rates.\n        \"\"\"\n        # Effective Michaelis-Menten constant for CO2\n        Km = KC * (1.0 + O / KO)\n        \n        # Rubisco-limited rate\n        Ac = Vcmax * (Ci - GAMMA_STAR) / (Ci + Km)\n        \n        # RuBP regeneration-limited rate\n        Aj = (Jmax / 4.0) * (Ci - GAMMA_STAR) / (Ci + 2.0 * GAMMA_STAR)\n        \n        # Net assimilation rate, ensuring gross assimilation is non-negative\n        gross_A = np.minimum(Ac, Aj)\n        gross_A[gross_A < 0] = 0 # Physically, gross assimilation cannot be negative\n        \n        return gross_A - RD\n\n    # ----------------------------------------------------------------------\n    # 3. Generate synthetic datasets\n    # ----------------------------------------------------------------------\n    \n    synthetic_datasets = []\n    for vcmax_true, jmax_true in TRUE_PARAMS:\n        A_data = calculate_A(CI_VALUES, vcmax_true, jmax_true)\n        synthetic_datasets.append(A_data)\n\n    # ----------------------------------------------------------------------\n    # 4. Perform nonlinear least-squares fitting\n    # ----------------------------------------------------------------------\n\n    def objective_function(params, Ci, A_data):\n        \"\"\"\n        Calculates the sum of squared residuals for the FvCB model fit.\n        \"\"\"\n        Vcmax, Jmax = params\n        A_model = calculate_A(Ci, Vcmax, Jmax)\n        return np.sum((A_model - A_data)**2)\n\n    fitted_results = []\n    for A_data in synthetic_datasets:\n        # Initial guess for the optimizer\n        initial_guess = [100.0, 200.0]\n        \n        # Bounds for the parameters (must be > 0)\n        bounds = [(1e-9, None), (1e-9, None)]\n        \n        # Run the optimization\n        result = minimize(\n            objective_function,\n            initial_guess,\n            args=(CI_VALUES, A_data),\n            method='L-BFGS-B',\n            bounds=bounds\n        )\n        \n        # Store the fitted parameters\n        fitted_results.append(result.x)\n\n    # ----------------------------------------------------------------------\n    # 5. Interpret results and format output\n    # ----------------------------------------------------------------------\n\n    final_output = []\n    \n    # Case 1 (Baseline)\n    vcmax1, jmax1 = fitted_results[0]\n    L1 = 0  # By definition\n    final_output.append([round(vcmax1, 3), round(jmax1, 3), L1])\n    \n    # Case 2\n    vcmax2, jmax2 = fitted_results[1]\n    delta_v2 = abs((vcmax2 - vcmax1) / vcmax1)\n    delta_j2 = abs((jmax2 - jmax1) / jmax1)\n\n    if delta_v2 - delta_j2 >= EPSILON:\n        L2 = 1\n    elif delta_j2 - delta_v2 >= EPSILON:\n        L2 = 2\n    else:\n        L2 = 0\n    final_output.append([round(vcmax2, 3), round(jmax2, 3), L2])\n    \n    # Case 3\n    vcmax3, jmax3 = fitted_results[2]\n    delta_v3 = abs((vcmax3 - vcmax1) / vcmax1)\n    delta_j3 = abs((jmax3 - jmax1) / jmax1)\n\n    if delta_v3 - delta_j3 >= EPSILON:\n        L3 = 1\n    elif delta_j3 - delta_v3 >= EPSILON:\n        L3 = 2\n    else:\n        L3 = 0\n    final_output.append([round(vcmax3, 3), round(jmax3, 3), L3])\n    \n    # Print in the exact required format\n    print(str(final_output).replace(\" \", \"\"))\n\nsolve()\n\n```", "id": "2613785"}]}