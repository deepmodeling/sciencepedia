{"hands_on_practices": [{"introduction": "理解肝脏代谢不仅需要了解各个代谢途径，还需要量化其能量成本。这个关于科里循环的练习是一个经典的例子，它通过化学计量学计算，揭示了器官间底物交换所付出的 $ATP$ 代价——这是代谢生理学中的一个基本概念。通过这个实践，你将能精确计算出在肌肉和肝脏之间循环一摩尔葡萄糖的净能量消耗。[@problem_id:2573745]", "problem": "人类进行短暂、剧烈的运动，在此期间骨骼肌在无氧条件下运作，将循环中的葡萄糖转化为乳酸。乳酸被输送到肝脏，肝脏处于糖异生状态，合成葡萄糖并将其送回肌肉。这就构成了一次科里循环（Cori cycle）。利用基于经过充分验证的途径化学计量的质量平衡、氧化还原平衡和能量衡算，推导每摩尔葡萄糖从肝脏到肌肉再以乳酸形式返回的科里循环操作中，生物体层面的三磷酸腺苷（ATP）净成本。\n\n假设：\n- 所有反应均在胞质 pH 为 7.0 的标准生化条件下发生。\n- 组织间的运输成本可忽略不计。\n- 将一个水解的三磷酸鸟苷（GTP）计为一个 ATP 当量（一个高能磷酸键）。\n- 肝脏乳酸氧化产生的烟酰胺腺嘌呤二核苷酸（NADH）可用于支持糖异生中的还原反应；不计入任何氧化磷酸化的贡献。\n- 使用以下公认的净化学计量作为基本事实：\n  - 肌肉中的无氧糖酵解（葡萄糖到乳酸）：\n    $$\\mathrm{glucose} + 2\\,\\mathrm{ADP} + 2\\,\\mathrm{P_i} \\rightarrow 2\\,\\mathrm{lactate} + 2\\,\\mathrm{ATP} + 2\\,\\mathrm{H_2O}$$\n  - 乳酸脱氢酶（可逆）：\n    $$\\mathrm{lactate} + \\mathrm{NAD^+} \\leftrightarrow \\mathrm{pyruvate} + \\mathrm{NADH} + \\mathrm{H^+}$$\n  - 从丙酮酸到葡萄糖的肝糖异生过程在丙酮酸羧化酶、磷酸烯醇式丙酮酸羧激酶和磷酸甘油酸激酶处消耗高能磷酸酯，并在3-磷酸甘油醛脱氢酶处需要还原当量；总的来说，从 $2$ 个丙酮酸合成 $1$ 个葡萄糖需要消耗 $4$ 个 ATP、$2$ 个 GTP 和 $2$ 个 NADH。\n\n任务：\n- 从上述基础出发，并遵循碳、电荷和还原当量的守恒，将肌肉和肝脏的反应相加，以获得一摩尔葡萄糖通过科里循环循环一次的生物体层面总平衡。\n- 根据此总平衡，计算每摩尔循环的葡萄糖所消耗的 ATP 当量的净数量。\n\n答案格式：\n- 将最终结果表示为一个单一数字，代表每摩尔循环的葡萄糖所对应的 ATP 当量的摩尔数。无需四舍五入。", "solution": "问题要求推导一次科里循环 (Cori cycle) 在生物体层面的三磷酸腺苷 (ATP) 净成本。我们将通过分析肌肉和肝脏中过程的化学计量，然后将它们相加来求得总净反应及其相关的能量成本。此分析将严格遵守所提供的化学计量和假设，包括质量平衡、氧化还原平衡以及能量衡算（其中 $1$ 摩尔的三磷酸鸟苷 (GTP) 被视为等同于 $1$ 摩尔的 ATP）。\n\n首先，我们分析骨骼肌中发生的代谢过程。在剧烈运动中，肌肉在无氧条件下运作，将葡萄糖转化为乳酸。问题为此过程提供了净反应式：\n$$ \\mathrm{glucose} + 2\\,\\mathrm{ADP} + 2\\,\\mathrm{P_i} \\rightarrow 2\\,\\mathrm{lactate} + 2\\,\\mathrm{ATP} + 2\\,\\mathrm{H_2O} $$\n从这个化学计量关系中，我们观察到每消耗一摩尔 $\\mathrm{glucose}$，肌肉组织净产生 $2$ 摩尔的 $\\mathrm{ATP}$。生成的 $2$ 摩尔乳酸随后被运输到肝脏。\n\n其次，我们分析在处于糖异生状态的肝脏中发生的代谢过程。肝脏从循环中摄取 $2$ 摩尔的乳酸并合成 $1$ 摩尔的 $\\mathrm{glucose}$。这个转化过程可以看作两个连续的阶段：\n1.  乳酸在乳酸脱氢酶的催化下氧化为丙酮酸。对于 $2$ 摩尔的乳酸，该反应为：\n    $$ 2\\,\\mathrm{lactate} + 2\\,\\mathrm{NAD^+} \\rightarrow 2\\,\\mathrm{pyruvate} + 2\\,\\mathrm{NADH} + 2\\,\\mathrm{H^+} $$\n    该反应产生 $2$ 摩尔的还原当量 $\\mathrm{NADH}$。\n\n2.  从丙酮酸合成葡萄糖（糖异生）。问题指出，将 $2$ 摩尔的丙酮酸转化为 $1$ 摩尔的 $\\mathrm{glucose}$ 会消耗 $4$ 摩尔的 $\\mathrm{ATP}$、$2$ 摩尔的 $\\mathrm{GTP}$ 和 $2$ 摩尔的 $\\mathrm{NADH}$。\n\n将这两个阶段合并为肝脏中的总过程（从 $2$ 份乳酸到 $1$ 份葡萄糖），我们可以考虑氧化还原平衡。第一阶段产生的 $2$ 摩尔 $\\mathrm{NADH}$ 在第二阶段被消耗。正如问题中所述，这种内部平衡意味着在从乳酸到葡萄糖的整个转化过程中，肝脏没有净产生或消耗 $\\mathrm{NADH}$，并且不考虑与氧化磷酸化的相互作用。\n因此，肝脏的净能量成本是水解的高能磷酸键的总和。使用给定的 $1\\,\\mathrm{GTP} = 1\\,\\mathrm{ATP}$ 等价关系，总成本计算如下：\n$$ \\text{肝脏成本} = 4\\,\\mathrm{ATP} + 2\\,\\mathrm{GTP} = 4\\,\\text{ATP 当量} + 2\\,\\text{ATP 当量} = 6\\,\\text{ATP 当量} $$\n因此，肝脏消耗净 $6$ 摩尔的 ATP 当量，以从肌肉供应的 $2$ 摩尔乳酸中再生 $1$ 摩尔的 $\\mathrm{glucose}$。肝脏的净反应式可写为：\n$$ 2\\,\\mathrm{lactate} + 4\\,\\mathrm{ATP} + 2\\,\\mathrm{GTP} \\rightarrow \\mathrm{glucose} + 4\\,\\mathrm{ADP} + 2\\,\\mathrm{GDP} + 6\\,\\mathrm{P_i} $$\n（水和质子的平衡被省略，因为它不影响 ATP 的计算）。\n\n最后，为了确定整个生物体完成一次科里循环的净成本，我们将肌肉和肝脏的能量平衡相加。该循环包括在肌肉中 $\\mathrm{glucose}$ 转化为 $\\mathrm{lactate}$，以及在肝脏中 $\\mathrm{lactate}$ 转化回 $\\mathrm{glucose}$。\n-   肌肉中的 ATP 产生量：$+2$ 摩尔 $\\mathrm{ATP}$\n-   肝脏中的 ATP 当量消耗量：$-6$ 摩尔 $\\mathrm{ATP}$ 当量\n\n生物体层面 ATP 当量的净变化是这两个值的总和：\n$$ \\text{ATP 当量净变化} = (+2\\,\\mathrm{ATP}) + (-6\\,\\text{ATP 当量}) = -4\\,\\text{ATP 当量} $$\n负号表示生物体净消耗了 ATP 当量。因此，运行一次科里循环的净成本是每摩尔循环的葡萄糖消耗 $4$ 摩尔的 ATP 当量。\n\n为了将其形式化，我们将肌肉和肝脏的净反应相加：\n肌肉: $\\mathrm{glucose} + 2\\,\\mathrm{ADP} + 2\\,\\mathrm{P_i} \\rightarrow 2\\,\\mathrm{lactate} + 2\\,\\mathrm{ATP} + 2\\,\\mathrm{H_2O}$\n肝脏: $2\\,\\mathrm{lactate} + 4\\,\\mathrm{ATP} + 2\\,\\mathrm{GTP} \\rightarrow \\mathrm{glucose} + 4\\,\\mathrm{ADP} + 2\\,\\mathrm{GDP} + 6\\,\\mathrm{P_i}$\n将这两个方程式相加，并消去两边都出现的项（$\\mathrm{glucose}$ 和 $2\\,\\mathrm{lactate}$），我们得到该循环的总净反应式：\n$$ 2\\,\\mathrm{ADP} + 2\\,\\mathrm{P_i} + 4\\,\\mathrm{ATP} + 2\\,\\mathrm{GTP} \\rightarrow 2\\,\\mathrm{ATP} + 2\\,\\mathrm{H_2O} + 4\\,\\mathrm{ADP} + 2\\,\\mathrm{GDP} + 6\\,\\mathrm{P_i} $$\n通过消去两边的相同项来简化此方程，得到：\n$$ 2\\,\\mathrm{ATP} + 2\\,\\mathrm{GTP} \\rightarrow 2\\,\\mathrm{ADP} + 2\\,\\mathrm{GDP} + 4\\,\\mathrm{P_i} + 2\\,\\mathrm{H_2O} $$\n这个最终的净反应表明，科里循环的总过程是水解 $2$ 摩尔的 $\\mathrm{ATP}$ 和 $2$ 摩尔的 $\\mathrm{GTP}$。ATP 当量的总成本是这些被消耗的高能磷酸键的总和：\n$$ \\text{净成本} = 2\\,\\mathrm{ATP} + 2\\,\\mathrm{GTP} = 2 + 2 = 4\\,\\text{ATP 当量} $$\n生物体运行科里循环的净成本是每摩尔循环的葡萄糖消耗 $4$ 个 ATP 当量。", "answer": "$$\\boxed{4}$$", "id": "2573745"}, {"introduction": "肝脏在药物代谢（药代动力学）中扮演着核心角色，而定量描述这一过程对于药物开发至关重要。本实践将引导你超越简单的通路图，进入定量建模的世界，运用“充分搅拌”模型来推导和计算肝脏清除率。这个练习不仅能加深你对首过效应和生物利用度等关键概念的理解，还能锻炼你从第一性原理出发解决生理学问题的能力。[@problem_id:2573698]", "problem": "一种药物经口服给药，在稳态条件下通过内脏循环进入肝脏。考虑一个血流速率为 $Q$ 的单一充分混合肝室模型，其中进出肝脏的总药物浓度分别为 $C_{\\text{in}}$ 和 $C_{\\text{out}}$。以下基本事实成立：\n- 稳态下的质量守恒意味着肝消除速率为 $Q(C_{\\text{in}}-C_{\\text{out}})$。\n- 肝提取率定义为 $E=\\dfrac{C_{\\text{in}}-C_{\\text{out}}}{C_{\\text{in}}}$。\n- 肝清除率定义为 $CL_{h} = \\frac{\\text{肝消除速率}}{C_{\\text{in}}}$，根据上述定义，可得 $CL_{h}=Q E$。\n- 肝脏的固有代謝能力由固有清除率 $CL_{\\text{int}}$ 表征，它将代谢速率与肝细胞环境中的未结合药物浓度联系起来。\n- 在充分混合（静脉平衡）假设下，肝细胞环境中的未结合药物浓度等于肝静脉流出液中的未结合药物浓度，即 $f_{u} C_{\\text{out}}$，其中 $f_{u}$ 是血液中的游离（未结合）分数。\n\n任务：\n1) 仅使用上述基本事实，在充分混合假设下，推导肝清除率 $CL_{h}$ 作为 $Q$、$f_{u}$ 和 $CL_{\\text{int}}$ 函数的显式表达式。\n2) 对 $Q=84 \\text{ L h}^{-1}$、$f_{u}=0.08$ 和 $CL_{\\text{int}}=500 \\text{ L h}^{-1}$ 进行数值计算，并以 $\\text{L h}^{-1}$ 为单位报告 $CL_{h}$。\n3) 一项独立测量得出肝提取率为 $E=0.323$。使用肝生物利用度（首过肝生物利用度）的基本定义，即逃脱肝提取的分数，计算肝生物利用度 $F_{h}$ 的小数值（不要使用百分号）。\n\n将数值 $CL_{h}$ 和 $F_{h}$ 均四舍五入到四位有效数字。将 $CL_{h}$ 以 $\\text{L h}^{-1}$ 为单位表示，并将 $F_{h}$ 表示为纯数（无量纲）。", "solution": "该问题提出了药代动力学建模领域中一个有效且定义明确的任务。目标是推导充分混合模型下的肝清除率方程，然后进行数值计算。\n\n首先，我们解决任务1：推导肝清除率 $CL_{h}$ 作为肝血流速率 $Q$、未结合分数 $f_{u}$ 和固有清除率 $CL_{\\text{int}}$ 函数的显式表达式。\n\n该问题陈述了稳态下肝消除速率的两个基本原理。\n1. 基于质量守恒，消除速率是进出肝脏的质量流率之差：\n$$ \\text{Rate of Elimination} = Q(C_{\\text{in}} - C_{\\text{out}}) $$\n其中 $C_{\\text{in}}$ 和 $C_{\\text{out}}$ 分别是进出肝脏血液中的总药物浓度。\n\n2. 基于肝脏内的酶活性，消除速率与酶所接触的未结合药物浓度成正比。该比例常数即为固有清除率 $CL_{\\text{int}}$。在充分混合模型假设下，此浓度在整个肝脏中是均匀的，并等于流出的静脉血中的未结合药物浓度，即 $f_{u}C_{\\text{out}}$。因此：\n$$ \\text{Rate of Elimination} = CL_{\\text{int}} \\cdot (f_{u}C_{\\text{out}}) $$\n\n在稳态下，这两个消除速率的表达式必须相等：\n$$ Q(C_{\\text{in}} - C_{\\text{out}}) = f_{u}CL_{\\text{int}}C_{\\text{out}} $$\n问题将肝清除率定义为 $CL_{h} = Q E$，其中 $E$ 是肝提取率，$E = \\dfrac{C_{\\text{in}} - C_{\\text{out}}}{C_{\\text{in}}}$。我们的目标是用 $Q$、$f_{u}$ 和 $CL_{\\text{int}}$ 来表示 $CL_h$。为此，我们必须首先找到 $E$ 的表达式。\n\n我们重排稳态等式以求解比值 $\\frac{C_{\\text{out}}}{C_{\\text{in}}}$。\n$$ Q C_{\\text{in}} - Q C_{\\text{out}} = f_{u} CL_{\\text{int}} C_{\\text{out}} $$\n$$ Q C_{\\text{in}} = Q C_{\\text{out}} + f_{u} CL_{\\text{int}} C_{\\text{out}} $$\n$$ Q C_{\\text{in}} = (Q + f_{u} CL_{\\text{int}}) C_{\\text{out}} $$\n这给出了流出与流入浓度的比值：\n$$ \\frac{C_{\\text{out}}}{C_{\\text{in}}} = \\frac{Q}{Q + f_{u} CL_{\\text{int}}} $$\n提取率 $E$ 可以写为 $E = 1 - \\frac{C_{\\text{out}}}{C_{\\text{in}}}$。代入我们推导出的浓度比值表达式：\n$$ E = 1 - \\frac{Q}{Q + f_{u} CL_{\\text{int}}} = \\frac{(Q + f_{u} CL_{\\text{int}}) - Q}{Q + f_{u} CL_{\\text{int}}} = \\frac{f_{u} CL_{\\text{int}}}{Q + f_{u} CL_{\\text{int}}} $$\n最后，我们将 $E$ 的这个表达式代入肝清除率的定义 $CL_{h} = Q E$ 中：\n$$ CL_{h} = Q \\left( \\frac{f_{u} CL_{\\text{int}}}{Q + f_{u} CL_{\\text{int}}} \\right) = \\frac{Q f_{u} CL_{\\text{int}}}{Q + f_{u} CL_{\\text{int}}} $$\n这就完成了问题第一部分的推导。\n\n接下来，对于任务2，我们必须使用给定值对该表达式进行数值计算：$Q=84 \\text{ L h}^{-1}$、$f_{u}=0.08$ 和 $CL_{\\text{int}}=500 \\text{ L h}^{-1}$。\n$$ CL_{h} = \\frac{(84) \\cdot (0.08) \\cdot (500)}{84 + (0.08) \\cdot (500)} \\text{ L h}^{-1} $$\n首先，我们计算乘积 $f_{u} CL_{\\text{int}}$：\n$$ f_{u} CL_{\\text{int}} = 0.08 \\times 500 = 40 \\text{ L h}^{-1} $$\n现在，我们将这个值代回 $CL_{h}$ 的表达式中：\n$$ CL_{h} = \\frac{84 \\times 40}{84 + 40} \\text{ L h}^{-1} = \\frac{3360}{124} \\text{ L h}^{-1} \\approx 27.09677... \\text{ L h}^{-1} $$\n按要求四舍五入到四位有效数字：\n$$ CL_{h} = 27.10 \\text{ L h}^{-1} $$\n\n最后，对于任务3，在给定肝提取率为 $E = 0.323$ 的情况下，我们需要计算肝生物利用度 $F_{h}$。肝生物利用度定义为药物通过肝脏时逃脱提取的分数。因此，它是提取率的补集。\n$$ F_{h} = 1 - E $$\n代入给定的 $E$ 值：\n$$ F_{h} = 1 - 0.323 = 0.677 $$\n问题要求四舍五入到四位有效数字。因此，我们将结果表示为：\n$$ F_{h} = 0.6770 $$\n问题已完全解决。两个数值答案是 $CL_h = 27.10$ 和 $F_h = 0.6770$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 27.10 & 0.6770 \\end{pmatrix}}\n$$", "id": "2573698"}, {"introduction": "现代生理学研究越来越依赖系统层面的方法来理解复杂的生物过程。本练习将向你介绍一种强大的计算工具——通量平衡分析 (Flux Balance Analysis, FBA)，它使我们能够预测复杂代谢网络在不同生理条件下的行为。通过构建和求解一个简化的肝脏代谢模型，你将亲身体验如何运用系统生物学方法，探索肝脏在饱食和禁食状态下如何调整其代谢重点。[@problem_id:2573750]", "problem": "给定一个小型的、质量平衡的网络，该网络捕捉了在胞质和线粒体稳态下人类肝脏代谢的核心碳流。您需要使用流量平衡分析（FBA）来计算三种不同情景在摄食和禁食约束下的最佳稳态流量。您的推理和实现应基于以下基本原则：(i) 稳态下的质量守恒，表示为 $S v = 0$，其中 $S$是化学计量矩阵，$v$是反应流量向量；(ii) 编码在$v$的下界和上界中的反应可逆性；以及 (iii) 对生物学相关的目标函数进行线性优化。确保所有流量均以毫摩尔/克干重/小时（mmol gDW$^{-1}$ h$^{-1}$）为单位表示，并报告最终数值输出，四舍五入至三位小数。\n\n代谢物（内部，状态向量的行，按顺序）：$\\mathrm{GLU}$ (胞质葡萄糖)，$\\mathrm{G6P}$ (葡萄糖-6-磷酸)，$\\mathrm{PYR}$ (丙酮酸)，$\\mathrm{LAC}$ (乳酸)，$\\mathrm{OAA}$ (草酰乙酸)，$\\mathrm{ACCOA}$ (乙酰辅酶A)，$\\mathrm{AcAc}$ (乙酰乙酸)。\n\n反应（列，流量向量$v$的索引$r0$至$r13$）：\n- $r0$: $\\varnothing \\rightarrow \\mathrm{GLU}$ (葡萄糖摄取交换；导入)。\n- $r1$: $\\mathrm{GLU} \\rightarrow \\varnothing$ (葡萄糖输出交换；导出)。\n- $r2$: $\\mathrm{GLU} \\leftrightarrow \\mathrm{G6P}$ (可逆的异构化/磷酸化集总反应)。\n- $r3$: $\\mathrm{G6P} \\rightarrow 2\\,\\mathrm{PYR}$ (糖酵解集总反应)。\n- $r4$: $\\mathrm{PYR} \\leftrightarrow \\mathrm{LAC}$ (乳酸脱氢酶，可逆)。\n- $r5$: $\\varnothing \\rightarrow \\mathrm{LAC}$ (乳酸摄取交换；导入)。\n- $r6$: $\\mathrm{LAC} \\rightarrow \\varnothing$ (乳酸输出交换；导出)。\n- $r7$: $\\mathrm{PYR} \\rightarrow \\mathrm{OAA}$ (丙酮酸羧化酶)。\n- $r8$: $2\\,\\mathrm{PYR} \\rightarrow \\mathrm{GLU}$ (糖异生集总反应)。\n- $r9$: $\\mathrm{PYR} \\rightarrow \\mathrm{ACCOA}$ (丙酮酸脱氢酶)。\n- $r10$: $\\varnothing \\rightarrow \\mathrm{ACCOA}$ (来自脂肪酸β-氧化的乙酰辅酶A来源)。\n- $r11$: $2\\,\\mathrm{ACCOA} \\rightarrow \\mathrm{AcAc}$ (酮生成)。\n- $r12$: $\\mathrm{AcAc} \\rightarrow \\varnothing$ (乙酰乙酸输出交换)。\n- $r13$: $\\mathrm{ACCOA} \\rightarrow \\varnothing$ (乙酰辅酶A氧化汇，代表三羧酸循环（TCA）的氧化)。\n\n化学计量矩阵 $S \\in \\mathbb{R}^{7 \\times 14}$，行按上述代谢物顺序排列，列按上述反应顺序排列：\n$$\nS =\n\\begin{bmatrix}\n+1 & -1 & -1 & 0 & 0 & 0 & 0 & 0 & +1 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & +1 & -1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & +2 & -1 & 0 & 0 & -1 & -2 & -1 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & +1 & +1 & -1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & +1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & +1 & +1 & -2 & 0 & -1 \\\\\n0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & +1 & -1 & 0\n\\end{bmatrix}\n$$\n\n每个反应 $rj$ 的界限由下界 $\\ell_j$ 和上界 $u_j$ 给出。除非被特定情景的约束所覆盖，否则以下通用界限适用：\n- $r2$ 和 $r4$ 是可逆的： $\\ell_{2} = -10^3$, $u_{2} = +10^3$；$\\ell_{4} = -10^3$, $u_{4} = +10^3$。\n- 所有其他内部代谢和交换反应都是不可逆的正向反应：对于 $j \\in \\{0,1,3,5,6,7,8,9,10,11,12,13\\}$，$\\ell_{j} = 0$, $u_{j} = +10^3$，除非下文的情景界限进一步限制它们。\n\n您必须通过线性优化解决三种情景，约束条件为 $S v = 0$ 和界限。在每种情景中，目标都是一个待最大化的线性泛函 $c^\\top v$。\n\n情景定义和测试套件（所有流量容量单位均为 mmol gDW$^{-1}$ h$^{-1}$）：\n- 情景 A（摄食，糖酵解，理想路径）：$u_{0} = 10$, $u_{1} = 0$, $u_{5} = 0$, $u_{10} = 0$。最大化乳酸输出：最大化 $v_{6}$。\n- 情景 B（禁食，糖异生，可逆边界情况）：$u_{0} = 0$, $u_{1} = 10^3$, $u_{5} = 12$, $u_{10} = 0$。最大化葡萄糖输出：最大化 $v_{1}$。\n- 情景 C（禁食，生酮，化学计量边界）：$u_{0} = 0$, $u_{1} = 0$, $u_{5} = 0$, $u_{10} = 20$。最大化乙酰乙酸输出：最大化 $v_{12}$。\n\n实现要求：\n- 利用稳态约束 $S v = 0$ 和界限为每种情景构建一个线性规划问题。\n- 计算每种情景的最佳目标值。将每个计算出的最佳值以 mmol gDW$^{-1}$ h$^{-1}$ 为单位表示，并四舍五入至三位小数。\n- 您的程序应生成单行输出，包含一个用方括号括起来的逗号分隔列表（例如，$[x_A,x_B,x_C]$），其中$x_A$、$x_B$和$x_C$分别是情景 A、B、C 的最佳目标值（按此顺序）。\n\n注释：\n- 使用线性规划进行流量平衡分析（FBA），其中目标是最大化 $c^\\top v$。\n- 将克干重（gDW）定义为基于约束的建模中的标准生物量归一化单位。\n- 通过在指定情况下遵守不可逆性且不违反质量平衡来确保科学真实性。", "solution": "该问题是流量平衡分析（FBA）的一个标准应用，其形式化为一个线性规划（LP）问题。目标是在给定的代谢网络中确定最佳的稳态流量分布 $v$，以最大化一个特定的生物学目标。系统的核心约束是稳态下的质量守恒定律以及对反应流量的热力学和容量约束。\n\n每种情景的线性规划（LP）公式为：\n最大化：$c^\\top v$\n约束条件：\n1. $S v = 0$ (稳态质量平衡)\n2. $\\ell \\le v \\le u$ (流量界限)\n\n这里，$v \\in \\mathbb{R}^{14}$ 是反应 $r0$ 到 $r13$ 的流量向量，$S \\in \\mathbb{R}^{7 \\times 14}$ 是给定的化学计量矩阵，$\\ell, u \\in \\mathbb{R}^{14}$ 分别是流量的下界和上界向量。向量 $c \\in \\mathbb{R}^{14}$ 定义了线性目标函数。我们针对三种不同的情景求解此问题。\n\n通用界限为所有流量 $v_j$ 定义，其中 $j \\in \\{0, 1, \\dots, 13\\}$。可逆反应 $r2$ 和 $r4$ 的界限为 $[\\ell_j, u_j] = [-10^3, 10^3]$。所有其他反应都是不可逆的，通用界限为 $[\\ell_j, u_j] = [0, 10^3]$。这些通用界限会根据特定情景的约束进行修改。\n\n情景A：摄食状态，糖酵解\n目标是最大化乳酸输出，这对应于最大化流量 $v_6$。因此，目标函数是 $c^\\top v = v_6$。\n此情景的特定约束是：\n- 葡萄糖摄取能力：$v_0 \\le 10$ mmol gDW$^{-1}$ h$^{-1}$。因此，$v_0$的界限是 $[0, 10]$。\n- 无葡萄糖输出：$v_1 = 0$。$v_1$的界限是 $[0, 0]$。\n- 无乳酸摄取：$v_5 = 0$。$v_5$的界限是 $[0, 0]$。\n- 无来自脂肪酸的乙酰辅酶A：$v_{10} = 0$。$v_{10}$的界限是 $[0, 0]$。\n\n从葡萄糖最大化乳酸输出的最佳代谢途径是糖酵解。化学计量路径是 $\\mathrm{GLU} \\rightarrow \\mathrm{G6P} \\rightarrow 2\\,\\mathrm{PYR} \\rightarrow 2\\,\\mathrm{LAC}$。质量平衡分析表明，每消耗$1$摩尔葡萄糖，可产生$2$摩尔乳酸。\n在最大葡萄糖摄取量$v_0 = 10$的情况下，系统可以达到最大的乳酸生产流量。\n- GLU的稳态：$v_0 - v_1 - v_2 + v_8 = 0$。给定$v_0=10$，$v_1 = 0$，并假设没有糖异生（$v_8=0$），我们得到$v_2 = 10$。\n- G6P的稳态：$v_2 - v_3 = 0 \\implies v_3 = 10$。\n- PYR的稳态：$2v_3 - v_4 - \\dots = 0$。这产生了 $2 \\times 10 = 20$ 单位的丙酮酸流量。\n- LAC的稳态：$v_4 + v_5 - v_6 = 0$。这$20$单位的丙酮酸流量被转化为乳酸（$v_4 = 20$），并且没有乳酸摄取（$v_5=0$），因此输出流量$v_6$必须等于$20$。\n因此，最佳目标值为 $20.000$ mmol gDW$^{-1}$ h$^{-1}$。\n\n情景B：禁食状态，糖异生\n目标是最大化葡萄糖输出，这对应于最大化流量 $v_1$。目标函数是 $c^\\top v = v_1$。\n特定约束是：\n- 无葡萄糖摄取：$v_0 = 0$。$v_0$的界限是 $[0, 0]$。\n- 乳酸摄取能力：$v_5 \\le 12$ mmol gDW$^{-1}$ h$^{-1}$。$v_5$的界限是 $[0, 12]$。\n- 无来自脂肪酸的乙酰辅酶A：$v_{10} = 0$。$v_{10}$的界限是 $[0, 0]$。\n\n为了最大化葡萄糖输出，肝脏利用糖异生作用，将乳酸等前体物质转化为葡萄糖。该途径基本上是糖酵解的逆过程：$2\\,\\mathrm{LAC} \\rightarrow 2\\,\\mathrm{PYR} \\rightarrow \\mathrm{GLU}$。\n在最大乳酸摄取量$v_5 = 12$的情况下，系统可以支持相应的葡萄糖生产流量。\n- 为了利用导入的乳酸，可逆反应 $r4$ 必须反向进行（$\\mathrm{LAC} \\rightarrow \\mathrm{PYR}$），所以$v_4$将为负值。LAC的稳态：$v_4 + v_5 - v_6 = 0$。为最大化葡萄糖输出，不应有乳酸被重新导出（$v_6=0$），所以 $v_4 = -v_5 = -12$。\n- 流量 $v_4 = -12$ 表示产生了 $12$ 单位的丙酮酸流量。\n- 这些丙酮酸通过反应 $r8: 2\\,\\mathrm{PYR} \\rightarrow \\mathrm{GLU}$ 用于糖异生。此反应的速率受丙酮酸可用性的限制。$v_8 = 12 / 2 = 6$。\n- GLU的稳态：$v_0 - v_1 - v_2 + v_8 = 0$。在$v_0=0$和$v_2=0$（糖酵解不活跃）的情况下，我们有$-v_1 + v_8 = 0$，这意味着$v_1 = v_8 = 6$。\n最佳目标值为 $6.000$ mmol gDW$^{-1}$ h$^{-1}$。\n\n情景C：禁食状态，生酮\n目标是最大化乙酰乙酸输出，即流量 $v_{12}$。目标函数是 $c^\\top v = v_{12}$。\n特定约束是：\n- 无葡萄糖交换：$v_0 = 0$，$v_1 = 0$。\n- 无乳酸摄取：$v_5 = 0$。\n- 来自脂肪酸氧化的乙酰辅酶A来源：$v_{10} \\le 20$ mmol gDW$^{-1}$ h$^{-1}$。$v_{10}$的界限是 $[0, 20]$。\n\n在这种状态下，肝脏进行酮生成，将来自脂肪酸分解的乙酰辅酶A转化为像乙酰乙酸这样的酮体。途径是 $2\\,\\mathrm{ACCOA} \\rightarrow \\mathrm{AcAc}$。\n- 来自脂肪酸氧化的最大可用乙酰辅酶A是$v_{10} = 20$。\n- ACCOA的稳态：$v_9 + v_{10} - 2v_{11} - v_{13} = 0$。在没有碳水化合物输入的情况下，与丙酮酸相关的流量为零（$v_9=0$）。这得到 $20 - 2v_{11} - v_{13} = 0$。\n- AcAc的稳态：$v_{11} - v_{12} = 0 \\implies v_{11} = v_{12}$。\n- 为了最大化$v_{12}$，必须最大化$v_{11}$。这是通过最小化流量汇$v_{13}$（TCA循环氧化）来实现的。$v_{13}$的最小值为 $0$。\n- 设置 $v_{13} = 0$，乙酰辅酶A的平衡变为 $20 - 2v_{11} = 0$，从而得到$v_{11} = 10$。\n- 因此，最大输出流量是 $v_{12} = v_{11} = 10$。\n最佳目标值为 $10.000$ mmol gDW$^{-1}$ h$^{-1}$。\n\n综上所述，情景 A、B 和 C 中目标函数的最佳值分别为 $20.000$、$6.000$ 和 $10.000$ mmol gDW$^{-1}$ h$^{-1}$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import linprog\n\ndef solve():\n    \"\"\"\n    Solves a Flux Balance Analysis problem for a simplified hepatic metabolic network\n    under three different physiological scenarios.\n    \"\"\"\n    # Stoichiometric matrix S (7 metabolites x 14 reactions)\n    # Metabolites: GLU, G6P, PYR, LAC, OAA, ACCOA, AcAc\n    # Reactions: r0-r13\n    S = np.array([\n        # r0, r1, r2, r3, r4, r5, r6, r7, r8,   r9, r10, r11, r12, r13\n        [+1, -1, -1,  0,  0,  0,  0,  0, +1,   0,   0,   0,   0,   0],  # GLU\n        [ 0,  0, +1, -1,  0,  0,  0,  0,  0,   0,   0,   0,   0,   0],  # G6P\n        [ 0,  0,  0, +2, -1,  0,  0, -1, -2,  -1,   0,   0,   0,   0],  # PYR\n        [ 0,  0,  0,  0, +1, +1, -1,  0,  0,   0,   0,   0,   0,   0],  # LAC\n        [ 0,  0,  0,  0,  0,  0,  0, +1,  0,   0,   0,   0,   0,   0],  # OAA\n        [ 0,  0,  0,  0,  0,  0,  0,  0,  0,  +1,  +1,  -2,   0,  -1],  # ACCOA\n        [ 0,  0,  0,  0,  0,  0,  0,  0,  0,   0,   0,  +1,  -1,   0],  # AcAc\n    ])\n\n    num_reactions = 14\n    inf = 1000  # A large number to represent infinity for flux bounds\n\n    # Define base bounds for the 14 reactions (r0 to r13).\n    # All are irreversible (0, inf) except for r2 and r4 which are reversible.\n    base_bounds = [(0, inf) for _ in range(num_reactions)]\n    base_bounds[2] = (-inf, inf)  # r2 is reversible\n    base_bounds[4] = (-inf, inf)  # r4 is reversible\n\n    # Define the three scenarios as test cases. Each case specifies:\n    # - a name for identification\n    # - the index of the flux to be maximized in the objective function\n    # - a dictionary of bounds to override the base_bounds\n    test_cases = [\n        {   # Scenario A: Fed, glycolytic\n            'name': 'A',\n            'obj_idx': 6,  # Maximize v6 (Lactate export)\n            'bounds_overrides': {\n                0: (0, 10), # r0: GLU uptake limit\n                1: (0, 0),  # r1: No GLU export\n                5: (0, 0),  # r5: No LAC uptake\n                10: (0, 0) # r10: No ACCOA from FA\n            }\n        },\n        {   # Scenario B: Fasting, gluconeogenic\n            'name': 'B',\n            'obj_idx': 1,  # Maximize v1 (Glucose export)\n            'bounds_overrides': {\n                0: (0, 0),   # r0: No GLU uptake\n                5: (0, 12),  # r5: LAC uptake limit\n                10: (0, 0)  # r10: No ACCOA from FA\n            }\n        },\n        {   # Scenario C: Fasting, ketogenic\n            'name': 'C',\n            'obj_idx': 12, # Maximize v12 (Acetoacetate export)\n            'bounds_overrides': {\n                0: (0, 0),   # r0: No GLU uptake\n                1: (0, 0),   # r1: No GLU export\n                5: (0, 0),   # r5: No LAC uptake\n                10: (0, 20)  # r10: ACCOA source limit\n            }\n        }\n    ]\n\n    results = []\n    # Right-hand side of the steady-state equation Sv = 0\n    b_eq = np.zeros(S.shape[0])\n\n    for case in test_cases:\n        # Objective function vector c. To maximize c'v, we minimize -c'v.\n        # The objective is to maximize a single flux, so c has -1 at that flux's index.\n        c = np.zeros(num_reactions)\n        c[case['obj_idx']] = -1\n\n        # Apply scenario-specific bounds\n        scenario_bounds = base_bounds.copy()\n        for idx, b in case['bounds_overrides'].items():\n            scenario_bounds[idx] = b\n\n        # Solve the linear programming problem\n        res = linprog(c=c,\n                      A_eq=S,\n                      b_eq=b_eq,\n                      bounds=scenario_bounds,\n                      method='highs')\n\n        if res.success:\n            # linprog minimizes, so the maximum value is the negative of the result\n            optimal_value = -res.fun\n            results.append(optimal_value)\n        else:\n            # Handle cases where solver fails, though not expected for this problem\n            results.append(np.nan)\n\n    # Format the final output string as specified: [val_A,val_B,val_C]\n    # with each value rounded to three decimal places.\n    print(f\"[{','.join(f'{val:.3f}' for val in results)}]\")\n\nsolve()\n```", "id": "2573750"}]}