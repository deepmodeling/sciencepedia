{"hands_on_practices": [{"introduction": "本练习将我们的理解建立在酶动力学的基础之上。通过应用经典的 Michaelis-Menten 模型，我们将计算单个细胞内磷酸化反应的速率，并将抽象的动力学参数（如 $k_{\\text{cat}}$ 和 $K_M$）转化为可量化的分子事件数量。这一实践旨在阐明作为所有信号放大基础的核心催化能力，帮助你将宏观的动力学理论与微观的细胞活动联系起来。[@problem_id:2576943]", "problem": "一种胞质丝氨酸/苏氨酸激酶在哺乳动物细胞中启动一个磷酸化级联反应，通过每个酶分子催化多轮底物磷酸化来实现信号放大。假设该激酶对特定底物的作用遵循标准的稳态、单底物 Michaelis–Menten 条件。催化常数为 $k_{\\text{cat}} = 10\\,\\text{s}^{-1}$，Michaelis 常数为 $K_M = 5\\,\\mu\\text{M}$，且底物浓度被上游流束钳定在 $[S] = K_M$。在一个体积为 $V_c = 1\\,\\text{pL}$ 的充分混合的细胞中，总催化活性激酶浓度为 $[E] = 50\\,\\text{nM}$。假设每次磷酸化恰好消耗一个三磷酸腺苷 (ATP) 分子，且产物生成速率等于 ATP 消耗速率。使用 Avogadro 常数 $N_A = 6.022 \\times 10^{23}\\,\\text{mol}^{-1}$。\n\n仅使用基本动力学定义和稳态酶动力学，确定在此单个细胞中，稳态下每分钟消耗的 ATP 分子总数。将最终答案表示为每分钟的分子总数，并将其四舍五入到 $3$ 位有效数字。", "solution": "必须首先严格验证问题陈述的科学合理性和逻辑一致性。\n\n**步骤 1：提取已知条件**\n- **模型**：标准稳态、单底物 Michaelis–Menten 条件\n- **催化常数**：$k_{\\text{cat}} = 10\\,\\text{s}^{-1}$\n- **Michaelis 常数**：$K_M = 5\\,\\mu\\text{M}$\n- **底物浓度**：$[S] = K_M$\n- **总酶浓度**：$[E] = 50\\,\\text{nM}$\n- **细胞体积**：$V_c = 1\\,\\text{pL}$\n- **化学计量**：每生成 1 分子产物消耗 1 分子 ATP。\n- **速率相等**：产物生成速率等于 ATP 消耗速率。\n- **Avogadro 常数**：$N_A = 6.022 \\times 10^{23}\\,\\text{mol}^{-1}$\n- **要求计算**：单个细胞内每分钟消耗的 ATP 分子总数。\n- **四舍五入**：四舍五入到 3 位有效数字。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题基于基本的 Michaelis-Menten 酶动力学模型，具有科学依据。所有参数均已提供，其数值（$k_{\\text{cat}}$、$K_M$、$[E]$、$V_c$）对于细胞系统而言，在物理和生物学上都是合理的。例如，$k_{\\text{cat}} = 10\\,\\text{s}^{-1}$ 和 $K_M = 5\\,\\mu\\text{M}$ 的激酶是典型的。该问题是适定的，可以从所提供的数据中推导出唯一解。语言客观、精确。问题是自洽且一致的。没有违反任何科学定律，也没有缺少任何必要信息。\n\n**步骤 3：结论与行动**\n问题被判定为**有效**。将推导解答。\n\n在 Michaelis–Menten 条件下，酶催化反应的速率 $v$ 由以下方程给出：\n$$v = \\frac{V_{\\text{max}} [S]}{K_M + [S]}$$\n其中 $V_{\\text{max}}$ 是最大反应速率，$[S]$ 是底物浓度，$K_M$ 是 Michaelis 常数。最大速率 $V_{\\text{max}}$ 定义为催化常数 $k_{\\text{cat}}$ 和总酶浓度 $[E]$ 的乘积：\n$$V_{\\text{max}} = k_{\\text{cat}} [E]$$\n将此定义代入 Michaelis–Menten 方程，得到：\n$$v = \\frac{k_{\\text{cat}} [E] [S]}{K_M + [S]}$$\n问题陈述指出，底物浓度被钳定在 Michaelis 常数的值，即 $[S] = K_M$。将此条件代入速率方程，得到：\n$$v = \\frac{k_{\\text{cat}} [E] K_M}{K_M + K_M} = \\frac{k_{\\text{cat}} [E] K_M}{2 K_M} = \\frac{1}{2} k_{\\text{cat}} [E]$$\n该速率 $v$ 表示每升每秒生成的产物的摩尔数 $(\\text{mol} \\cdot \\text{L}^{-1} \\cdot \\text{s}^{-1})$。根据问题陈述，ATP 的消耗速率等于产物的生成速率。设 $v_{\\text{ATP}}$ 是 ATP 的消耗速率，单位为浓度每时间。\n$$v_{\\text{ATP}} = v = \\frac{1}{2} k_{\\text{cat}} [E]$$\n为了求出消耗的 ATP 分子总数，我们必须首先确定整个细胞体积 $V_c$ 内每秒消耗的摩尔数。设该速率为 $R_{\\text{mol}}$。\n$$R_{\\text{mol}} = v_{\\text{ATP}} \\cdot V_c = \\left( \\frac{1}{2} k_{\\text{cat}} [E] \\right) V_c$$\n接下来，为了求出以每秒分子数计的速率 $R_{\\text{molecules}}$，我们将摩尔速率乘以 Avogadro 常数 $N_A$。\n$$R_{\\text{molecules}} = R_{\\text{mol}} \\cdot N_A = \\left( \\frac{1}{2} k_{\\text{cat}} [E] \\right) V_c N_A$$\n问题要求计算每分钟消耗的 ATP 分子总数，我们将其表示为 $N_{\\text{ATP/min}}$。由于一分钟有 $60$ 秒，我们将 $R_{\\text{molecules}}$ 乘以 $60$。\n$$N_{\\text{ATP/min}} = R_{\\text{molecules}} \\cdot (60\\,\\text{s/min}) = \\frac{1}{2} k_{\\text{cat}} [E] V_c N_A \\cdot 60$$\n现在我们代入给定的数值，并确保单位一致。\n酶浓度为 $[E] = 50\\,\\text{nM} = 50 \\times 10^{-9}\\,\\text{mol} \\cdot \\text{L}^{-1}$。\n细胞体积为 $V_c = 1\\,\\text{pL} = 1 \\times 10^{-12}\\,\\text{L}$。\n催化常数为 $k_{\\text{cat}} = 10\\,\\text{s}^{-1}$。\nAvogadro 常数为 $N_A = 6.022 \\times 10^{23}\\,\\text{mol}^{-1}$。\n\n将这些值代入 $N_{\\text{ATP/min}}$ 的表达式中：\n$$N_{\\text{ATP/min}} = \\frac{1}{2} \\cdot (10\\,\\text{s}^{-1}) \\cdot (50 \\times 10^{-9}\\,\\text{mol} \\cdot \\text{L}^{-1}) \\cdot (1 \\times 10^{-12}\\,\\text{L}) \\cdot (6.022 \\times 10^{23}\\,\\text{mol}^{-1}) \\cdot (60\\,\\text{s} \\cdot \\text{min}^{-1})$$\n我们进行计算：\n$$N_{\\text{ATP/min}} = \\frac{1}{2} \\cdot 10 \\cdot 50 \\cdot 1 \\cdot 6.022 \\cdot 60 \\cdot (10^{-9} \\cdot 10^{-12} \\cdot 10^{23}) \\,\\text{min}^{-1}$$\n$$N_{\\text{ATP/min}} = (5 \\cdot 50 \\cdot 6.022 \\cdot 60) \\cdot 10^{(-9 - 12 + 23)} \\,\\text{min}^{-1}$$\n$$N_{\\text{ATP/min}} = (250 \\cdot 6.022 \\cdot 60) \\cdot 10^{2} \\,\\text{min}^{-1}$$\n$$N_{\\text{ATP/min}} = (1505.5 \\cdot 60) \\cdot 10^{2} \\,\\text{min}^{-1}$$\n$$N_{\\text{ATP/min}} = 90330 \\cdot 10^{2} \\,\\text{min}^{-1}$$\n$$N_{\\text{ATP/min}} = 9.033 \\times 10^{4} \\cdot 10^{2} \\,\\text{min}^{-1}$$\n$$N_{\\text{ATP/min}} = 9.033 \\times 10^{6} \\,\\text{min}^{-1}$$\n问题要求答案四舍五入到 $3$ 位有效数字。\n$$N_{\\text{ATP/min}} \\approx 9.03 \\times 10^{6} \\,\\text{min}^{-1}$$\n这就是在指定的单个细胞中每分钟消耗的 ATP 分子总数。", "answer": "$$\\boxed{9.03 \\times 10^6}$$", "id": "2576943"}, {"introduction": "信号通路并非孤立的反应，而是复杂的调控网络。本问题挑战我们去探索一个非直觉的现象——悖论性激活，即抑制一个激酶有时反而会意外地增强其下游目标的活性。通过对一个包含负反馈的激酶级联进行建模和分析，我们将揭示网络拓扑如何导致与直觉相悖的系统响应，这是理解药物作用机制和进行系统生物学研究的一个关键概念。[@problem_id:2576903]", "problem": "考虑一个关于哺乳动物细胞中 Rapidly Accelerated Fibrosarcoma (RAF)–Mitogen-Activated Protein Kinase/Extracellular signal-Regulated Kinase Kinase (MEK)–Extracellular signal-Regulated Kinase (ERK) 丝裂原活化蛋白激酶 (MAPK) 级联的最小粗粒度稳态模型，该模型包含 ERK 介导的对 RAF 的负反馈。假设：\n\n- 在没有反馈的情况下，RAF 以输入强度 $R_{0}$ 驱动 MEK。ERK 对此输入施加负反馈，灵敏度为 $a>0$，因此有效的 RAF 驱动被一个因子 $1/\\bigl(1 + a E\\bigr)$ 缩放，其中 $E$ 是稳态 ERK 活性。\n- 一个 MEK 抑制剂，其分数水平为 $i \\in [0,1]$，具有两个效应：\n  1) 它通过一个因子 $g(i)$ 以乘法方式降低 MEK 的催化通量，其中 $g(0)=1$ 且 $g'(0)=-\\gamma<0$（在 $i=0$ 附近取 $g(i)=1-\\gamma i$，其中 $\\gamma>0$）。\n  2) 它将 ERK 到 RAF 的反馈臂减弱一个分数 $\\phi(i)$，其中 $\\phi(0)=0$ 且 $\\phi'(0)=\\eta>0$（在 $i=0$ 附近取 $\\phi(i)=\\eta i$），因此反馈因子变为 $1 + a\\bigl(1-\\phi(i)\\bigr)E$。\n- 在 MEK 下游，ERK 对有效 MEK 驱动的响应是局部线性的，增益为 $k>0$，因此在稳态时\n$$\nE \\;=\\; k \\,\\frac{g(i)\\,R_{0}}{1 + a\\bigl(1-\\phi(i)\\bigr)E}\\,.\n$$\n\n这个设定体现了 MEK 抑制剂既削弱 MEK 通量，又解除 ERK 对 RAF 负反馈传递的思想。在此，悖论性激活情景定义为：随着抑制剂的微小增加，ERK 活性出现初始增加，即 $\\left.\\frac{dE}{di}\\right|_{i=0}>0$。\n\n从该模型和基本的稳态平衡出发，完成以下任务：\n\n1) 以 $a$、$k$ 和 $R_{0}$ 为参数，计算在 $i=0$ 时无药物情况下的稳态 ERK 活性 $E_{0}$。\n\n2) 使用关于 $i=0$ 的隐式微分，推导出现悖论性激活（即 $\\left.\\frac{dE}{di}\\right|_{i=0}>0$）时，$\\eta$ 和 $\\gamma$（以及其他参数）所需满足的条件。\n\n3) 将临界反馈衰减斜率 $\\eta_{\\mathrm{crit}}$（即满足 $\\left.\\frac{dE}{di}\\right|_{i=0}=0$ 的 $\\eta$ 的边界值）表示为仅包含 $a$、$k$、$R_{0}$ 和 $\\gamma$ 的单一闭合形式解析表达式。你的最终答案必须是这个单一的解析表达式（无量纲的）。不要提供不等式。不要包含单位。", "solution": "所述问题构成了一个数学生物学领域中有效的、适定的问题。它在科学上基于信号转导级联的已知原理，包括负反馈和抑制剂作用。定义精确，目标明确，且可通过标准的数学方法实现。我们开始求解。\n\n稳态 ERK 活性，记为 $E$，由以下代数方程决定：\n$$\nE \\;=\\; k \\,\\frac{g(i)\\,R_{0}}{1 + a\\bigl(1-\\phi(i)\\bigr)E}\n$$\n其中 $i$是抑制剂水平。所有参数 $a$、$k$、$R_{0}$、$\\gamma$ 和 $\\eta$ 均为正常数。\n\n1. 计算无药物时的稳态 ERK 活性 $E_{0}$。\n\n题目要求我们找到在抑制剂水平为 $i = 0$ 时的稳态 ERK 活性 $E_{0}$。在 $i=0$ 时，问题给出了条件 $g(0) = 1$ 和 $\\phi(0) = 0$。将这些值代入控制方程，得到：\n$$\nE_{0} \\;=\\; k \\,\\frac{g(0)\\,R_{0}}{1 + a\\bigl(1-\\phi(0)\\bigr)E_{0}} \\;=\\; k \\,\\frac{(1)R_{0}}{1 + a(1-0)E_{0}} \\;=\\; \\frac{kR_{0}}{1+aE_{0}}\n$$\n这个方程可以重排为一个关于 $E_{0}$ 的二次方程：\n$$\nE_{0} (1 + aE_{0}) = kR_{0}\n$$\n$$\naE_{0}^2 + E_{0} - kR_{0} = 0\n$$\n我们用二次公式求解此方程中的 $E_{0}$：\n$$\nE_{0} = \\frac{-1 \\pm \\sqrt{1^2 - 4(a)(-kR_{0})}}{2a} = \\frac{-1 \\pm \\sqrt{1 + 4akR_{0}}}{2a}\n$$\n由于 ERK 活性 $E_{0}$ 必须是一个非负的物理量，并且已知 $a > 0$、$k > 0$ 和 $R_{0} > 0$，平方根下的项 $\\sqrt{1+4akR_{0}}$ 严格大于 $1$。为确保 $E_{0} > 0$，我们必须选择正根。因此，无药物时的稳态 ERK 活性为：\n$$\nE_{0} = \\frac{-1 + \\sqrt{1 + 4akR_{0}}}{2a}\n$$\n\n2. 推导悖论性激活的条件。\n\n悖论性激活定义为，当 $i$ 微小增加时 $E$ 初始增加，其数学上对应于条件 $\\left.\\frac{dE}{di}\\right|_{i=0} > 0$。为求此导数，我们对控制稳态方程使用隐式微分。首先，我们通过去分母来重写方程：\n$$\nE \\left[1 + a\\bigl(1-\\phi(i)\\bigr)E\\right] - k g(i) R_{0} = 0\n$$\n令此表达式为 $F(E, i) = 0$。我们对 $F(E, i)$ 关于 $i$ 求导，将 $E$ 视为 $i$ 的函数：\n$$\n\\frac{d}{di} \\left( E + aE^2 - a\\phi(i)E^2 - k g(i) R_{0} \\right) = 0\n$$\n应用乘法法则和链式法则得到：\n$$\n\\frac{dE}{di} + 2aE\\frac{dE}{di} - \\left[ a\\phi'(i)E^2 + a\\phi(i) \\cdot 2E\\frac{dE}{di} \\right] - k g'(i) R_{0} = 0\n$$\n我们合并包含 $\\frac{dE}{di}$ 的项：\n$$\n\\frac{dE}{di} \\left( 1 + 2aE - 2aE\\phi(i) \\right) = aE^2\\phi'(i) + kR_{0}g'(i)\n$$\n求解 $\\frac{dE}{di}$：\n$$\n\\frac{dE}{di} = \\frac{aE^2\\phi'(i) + kR_{0}g'(i)}{1 + 2aE - 2aE\\phi(i)}\n$$\n我们现在计算此导数在 $i=0$ 处的值。在这一点，我们有 $E=E_{0}$，并且根据问题陈述，$\\phi(0)=0$, $\\phi'(0)=\\eta$, and $g'(0)=-\\gamma$。将这些代入表达式中：\n$$\n\\left.\\frac{dE}{di}\\right|_{i=0} = \\frac{aE_{0}^2\\phi'(0) + kR_{0}g'(0)}{1 + 2aE_{0} - 2aE_{0}\\phi(0)} = \\frac{aE_{0}^2(\\eta) + kR_{0}(-\\gamma)}{1 + 2aE_{0} - 2aE_{0}(0)} = \\frac{a\\eta E_{0}^2 - k\\gamma R_{0}}{1 + 2aE_{0}}\n$$\n悖论性激活的条件 $\\left.\\frac{dE}{di}\\right|_{i=0} > 0$ 要求分子为正，因为对于 $a>0$ 和 $E_0 > 0$，分母 $1 + 2aE_{0}$ 恒为正。因此，该条件是：\n$$\na\\eta E_{0}^2 - k\\gamma R_{0} > 0 \\quad \\implies \\quad \\eta > \\frac{k\\gamma R_{0}}{a E_{0}^2}\n$$\n\n3. 临界反馈衰减斜率 $\\eta_{\\mathrm{crit}}$ 的表达式。\n\n临界斜率 $\\eta_{\\mathrm{crit}}$ 是悖论性激活效应开始出现时 $\\eta$ 的边界值，即在 $\\left.\\frac{dE}{di}\\right|_{i=0}=0$ 处。根据上一步，这发生在分子为零时：\n$$\na\\eta_{\\mathrm{crit}} E_{0}^2 - k\\gamma R_{0} = 0\n$$\n求解 $\\eta_{\\mathrm{crit}}$ 得到：\n$$\n\\eta_{\\mathrm{crit}} = \\frac{k\\gamma R_{0}}{a E_{0}^2}\n$$\n为了只用基本参数 $a$、$k$、$R_{0}$ 和 $\\gamma$ 来表示它，我们必须消去 $E_0$。我们使用在第1部分中从关于 $E_{0}$ 的二次方程推导出的关系：$kR_{0} = aE_{0}^2 + E_{0}$。将此代入 $\\eta_{\\mathrm{crit}}$ 的表达式中：\n$$\n\\eta_{\\mathrm{crit}} = \\frac{\\gamma (aE_{0}^2 + E_{0})}{a E_{0}^2} = \\gamma \\left( \\frac{aE_{0}^2}{aE_{0}^2} + \\frac{E_{0}}{aE_{0}^2} \\right) = \\gamma \\left( 1 + \\frac{1}{aE_{0}} \\right)\n$$\n现在我们代入 $E_{0}$ 的完整表达式：\n$$\naE_{0} = a \\left( \\frac{-1 + \\sqrt{1 + 4akR_{0}}}{2a} \\right) = \\frac{-1 + \\sqrt{1 + 4akR_{0}}}{2}\n$$\n因此，其倒数为：\n$$\n\\frac{1}{aE_{0}} = \\frac{2}{-1 + \\sqrt{1 + 4akR_{0}}}\n$$\n将此代入 $\\eta_{\\mathrm{crit}}$ 的方程中：\n$$\n\\eta_{\\mathrm{crit}} = \\gamma \\left( 1 + \\frac{2}{-1 + \\sqrt{1 + 4akR_{0}}} \\right)\n$$\n为了将其写成单一的分数，我们通分：\n$$\n\\eta_{\\mathrm{crit}} = \\gamma \\left( \\frac{-1 + \\sqrt{1 + 4akR_{0}} + 2}{-1 + \\sqrt{1 + 4akR_{0}}} \\right) = \\gamma \\left( \\frac{1 + \\sqrt{1 + 4akR_{0}}}{-1 + \\sqrt{1 + 4akR_{0}}} \\right)\n$$\n这是临界斜率的最终闭合形式表达式。根据要求，它是无量纲的。", "answer": "$$\\boxed{\\gamma \\frac{1 + \\sqrt{1 + 4akR_{0}}}{\\sqrt{1 + 4akR_{0}} - 1}}$$", "id": "2576903"}, {"introduction": "真实的生物系统表现出固有的随机性，导致细胞在面对相同信号时产生个体化的响应差异。这项高级计算练习将我们从确定性模型带入随机世界，探索蛋白质丰度的随机波动如何造成细胞群体的异质性。通过将一个基于伽马分布的随机模型与观测数据进行拟合，你将能够推断解释为何只有部分细胞被激活所需的内在噪声水平（即变异系数 $CV$），从而为理解细胞信号处理提供一个更现代、更符合真实情况的视角。[@problem_id:2576915]", "problem": "您的任务是为固定细胞外刺激下激酶级联活化的细胞间异质性，建立并求解一个机理随机模型。目标是推断出能够重现给定观测活化细胞比例所需的激酶丰度变异系数。您必须实现一个程序，该程序针对所提供的测试套件，以浮点数列表的形式返回每种情况下推断出的变异系数。\n\n建模假设与基础：\n- 根据分子生物学中心法则以及蛋白质合成和降解的经典出生-死亡动力学，当存在转录爆发时，稳态下的蛋白质拷贝数可以很好地由伽马分布族描述。具体来说，设第 $i$ 级激酶的丰度（表示为 $K_i$）被建模为一个伽马随机变量，其形状参数为 $\\alpha$，尺度参数为 $\\beta_i$，得到均值 $\\mu_i = \\alpha \\beta_i$ 和方差 $\\sigma_i^2 = \\alpha \\beta_i^2$。那么，每个激酶的变异系数 (CV) 为 $\\mathrm{CV} = \\sigma_i / \\mu_i = 1/\\sqrt{\\alpha}$，当外在噪声占主导时，该值在各层级间共享。\n- 根据质量作用定律和低底物浓度条件下酶催化磷酸化的米氏-门顿 (MM) 形式，通过第 $i$ 级的瞬时磷酸化通量与所施加的刺激物 $S$ 和活化激酶丰度 $K_i$ 的乘积成正比。假设下游模块表现为超敏开关，当 $K_i \\ge T_i(S)$ 时，第 $i$ 级发生活化，其中 $T_i(S) = \\Theta_i / S$，$\\Theta_i$ 是一个生化阈值（在单位刺激物下），它包含了去磷酸化和下游需求。\n- 只有当 $n$ 个独立层级的激酶级联中的每一级都满足其活化条件时，该级联才被认为是活化的。对于独立的层级，活化细胞的比例等于所有 $n$ 个不等式 $K_i \\ge T_i(S)$ 同时成立的概率，根据独立性，该概率是各个层级尾概率的乘积。\n\n数学规约：\n- 对第 $i$ 层级，设 $K_i \\sim \\mathrm{Gamma}(\\alpha, \\beta_i)$，其均值固定为 $\\mu_i$，并具有共同的形状参数 $\\alpha > 0$。因此 $\\beta_i = \\mu_i / \\alpha$。\n- 设第 $i$ 层级在刺激物 $S$ 下的活化阈值为 $T_i(S) = \\Theta_i / S$，其中 $\\Theta_i > 0$ 且 $S > 0$。\n- 单个层级被活化的概率为 $p_i(\\alpha; S, \\Theta_i, \\mu_i) = \\mathbb{P}(K_i \\ge T_i(S)) = 1 - F_{\\mathrm{Gamma}}\\!\\left(T_i(S); \\alpha, \\beta_i\\right)$，其中 $F_{\\mathrm{Gamma}}(\\cdot;\\alpha,\\beta)$ 是形状参数为 $\\alpha$、尺度参数为 $\\beta$ 的伽马分布的累积分布函数 (CDF)。\n- $n$ 个层级的模型预测活化比例为\n$$\nP_{\\mathrm{model}}(\\alpha; S, \\{\\Theta_i\\}, \\{\\mu_i\\}) = \\prod_{i=1}^{n} \\left[ 1 - F_{\\mathrm{Gamma}}\\!\\left(\\frac{\\Theta_i}{S}; \\alpha, \\frac{\\mu_i}{\\alpha} \\right) \\right].\n$$\n- 观测到的活化比例表示为 $p_{\\mathrm{obs}} \\in (0,1)$。推断任务是找到与 $p_{\\mathrm{obs}}$ 尽可能匹配的变异系数 $\\mathrm{CV} = 1/\\sqrt{\\alpha}$。在数值上，这是指能够最小化平方误差的正数 $\\alpha$\n$$\nE(\\alpha) = \\left( P_{\\mathrm{model}}(\\alpha; S, \\{\\Theta_i\\}, \\{\\mu_i\\}) - p_{\\mathrm{obs}} \\right)^2.\n$$\n\n编程任务：\n- 编写一个程序，对于每个给定的测试用例，计算变异系数 $\\mathrm{CV} = 1/\\sqrt{\\alpha^\\star}$，其中 $\\alpha^\\star = \\arg\\min_{\\alpha > 0} E(\\alpha)$。\n- 数值细节：\n  - 将 $\\alpha$ 视为一个连续的正参数。为确保数值稳定性，您可以使用 $x = \\log \\alpha$ 进行重新参数化，并在 $x$ 的有界区间上最小化 $E(e^x)$。\n  - 使用可靠的伽马累积分布函数实现和一个有界标量最小化器来求解 $E(\\alpha)$。\n- 以小数形式报告最终答案（无量纲）。不要使用百分号。\n\n测试套件：\n- 案例 A（两个独立层级，中等程度活化）：\n  - 刺激物 $S = 1.0$。\n  - 均值 $\\{\\mu_i\\} = [4000.0, 2500.0]$，单位：分子/细胞。\n  - 单位刺激物下的阈值 $\\{\\Theta_i\\} = [2200.0, 1800.0]$，单位：分子。\n  - 观测到的活化比例 $p_{\\mathrm{obs}} = 0.55$。\n- 案例 B（三个独立层级，严格活化）：\n  - 刺激物 $S = 0.8$。\n  - 均值 $\\{\\mu_i\\} = [3000.0, 2000.0, 1500.0]$，单位：分子/细胞。\n  - 单位刺激物下的阈值 $\\{\\Theta_i\\} = [2600.0, 1800.0, 1400.0]$，单位：分子。\n  - 观测到的活化比例 $p_{\\mathrm{obs}} = 0.10$。\n- 案例 C（两个独立层级，强刺激）：\n  - 刺激物 $S = 1.5$。\n  - 均值 $\\{\\mu_i\\} = [2500.0, 2500.0]$，单位：分子/细胞。\n  - 单位刺激物下的阈值 $\\{\\Theta_i\\} = [1600.0, 1500.0]$，单位：分子。\n  - 观测到的活化比例 $p_{\\mathrm{obs}} = 0.90$。\n- 案例 D（单层级，中等阈值）：\n  - 刺激物 $S = 1.0$。\n  - 均值 $\\{\\mu_i\\} = [1200.0]$，单位：分子/细胞。\n  - 单位刺激物下的阈值 $\\{\\Theta_i\\} = [1000.0]$，单位：分子。\n  - 观测到的活化比例 $p_{\\mathrm{obs}} = 0.30$。\n\n要求的输出格式：\n- 您的程序应生成单行输出，其中包含案例 A 到 D 的推断变异系数，按此顺序排列，形式为用方括号括起来的逗号分隔列表，例如：\"[0.123456,0.234567,0.345678,0.456789]\"。", "solution": "在尝试求解之前，会对问题进行验证。\n\n### 第 1 步：提取已知条件\n- **模型框架**：一个 $n$ 层激酶级联的随机模型。\n- **激酶丰度分布**：第 $i$ 级激酶的丰度 $K_i$ 服从伽马分布，$K_i \\sim \\mathrm{Gamma}(\\alpha, \\beta_i)$。\n- **分布参数**：形状参数 $\\alpha$ 对所有层级通用。尺度参数为 $\\beta_i = \\mu_i / \\alpha$，其中 $\\mu_i$ 是第 $i$ 级激酶的平均丰度。\n- **变异系数 (CV)**：需要推断的目标量是 $\\mathrm{CV} = 1/\\sqrt{\\alpha}$。\n- **活化条件**：如果 $K_i \\ge T_i(S)$，则第 $i$ 层级活化，其中阈值为 $T_i(S) = \\Theta_i / S$。\n- **级联活化概率**：对于 $n$ 个独立的层级，总活化概率是各层级活化概率的乘积：\n$$P_{\\mathrm{model}}(\\alpha; S, \\{\\Theta_i\\}, \\{\\mu_i\\}) = \\prod_{i=1}^{n} \\mathbb{P}(K_i \\ge T_i(S))$$\n单个概率是伽马分布的生存函数：\n$$p_i = \\mathbb{P}(K_i \\ge T_i(S)) = 1 - F_{\\mathrm{Gamma}}\\!\\left(\\frac{\\Theta_i}{S}; \\alpha, \\frac{\\mu_i}{\\alpha} \\right)$$\n- **推断目标**：找到 $\\alpha^\\star = \\arg\\min_{\\alpha > 0} E(\\alpha)$，其中误差函数为 $E(\\alpha) = \\left( P_{\\mathrm{model}}(\\alpha) - p_{\\mathrm{obs}} \\right)^2$。报告 $\\mathrm{CV} = 1/\\sqrt{\\alpha^\\star}$。\n- **数值指南**：使用 $x = \\log \\alpha$ 进行重新参数化，并使用有界标量最小化器。\n- **测试套件**：\n    - **案例 A**：$n=2$，$S=1.0$，$\\{\\mu_i\\} = [4000.0, 2500.0]$，$\\{\\Theta_i\\} = [2200.0, 1800.0]$，$p_{\\mathrm{obs}} = 0.55$。\n    - **案例 B**：$n=3$，$S=0.8$，$\\{\\mu_i\\} = [3000.0, 2000.0, 1500.0]$，$\\{\\Theta_i\\} = [2600.0, 1800.0, 1400.0]$，$p_{\\mathrm{obs}} = 0.10$。\n    - **案例 C**：$n=2$，$S=1.5$，$\\{\\mu_i\\} = [2500.0, 2500.0]$，$\\{\\Theta_i\\} = [1600.0, 1500.0]$，$p_{\\mathrm{obs}} = 0.90$。\n    - **案例 D**：$n=1$，$S=1.0$，$\\{\\mu_i\\} = [1200.0]$，$\\{\\Theta_i\\} = [1000.0]$，$p_{\\mathrm{obs}} = 0.30$。\n\n### 第 2 步：使用提取的已知条件进行验证\n1.  **科学依据**：该问题在定量系统生物学中有充分的依据。使用伽马分布描述蛋白质丰度源于成熟的基因表达随机模型。基于质量作用和阈值的活化模型是超敏信号通路的标准简化方法。\n2.  **问题良定性**：该问题被构建为一个数值优化任务。目标函数 $E(\\alpha)$ 在 $\\alpha > 0$ 上有明确定义。函数 $P_{\\mathrm{model}}(\\alpha)$ 的行为是复杂的。令 $c_i = (\\Theta_i/S)/\\mu_i$ 为第 $i$ 级的归一化阈值。\n    - 如果所有的 $c_i > 1$（平均丰度低于阈值，如案例 B），$P_{\\mathrm{model}}(\\alpha)$ 是一个从 $1$（当 $\\alpha \\to 0$ 时）到 $0$（当 $\\alpha \\to \\infty$ 时）的单调递减函数。对于任何 $p_{\\mathrm{obs}} \\in (0,1)$，存在一个唯一的解 $\\alpha^\\star$ 使得 $E(\\alpha^\\star) = 0$。\n    - 如果所有的 $c_i < 1$（平均丰度高于阈值，如案例 A、C、D），$P_{\\mathrm{model}}(\\alpha)$ 是非单调的。它从 $1$（当 $\\alpha \\to 0$ 时）开始，下降到一个最小值 $P_{\\min} > 0$，然后回升到 $1$（当 $\\alpha \\to \\infty$ 时）。最小化 $E(\\alpha)$ 的问题仍然是良定的。如果 $p_{\\mathrm{obs}} < P_{\\min}$，最小误差非零，且 $\\alpha^\\star$ 是唯一的。如果 $p_{\\mathrm{obs}} > P_{\\min}$，则存在两个不同的 $\\alpha$ 值可以得到全局最小误差 $0$。问题没有在这种情况下指定选择标准。一个标准的数值最小化器通常会找到这些解中的一个，考虑到提示，这是一个可接受的结果。\n3.  **客观性**：问题使用精确的数学语言和客观、可验证的陈述进行说明。\n4.  **不完整或矛盾的设置**：设置是完整的且内部一致。\n5.  **不切实际或不可行**：所提供的参数在物理上和生物学上是合理的。\n6.  **琐碎、同义反复或故作高深**：该问题非琐碎，需要综合运用统计模型和数值方法。\n7.  **超出科学可验证性范围**：该问题可通过标准的数学和计算分析进行验证。\n\n### 第 3 步：结论与行动\n问题被判定为**有效**。在某些情况下可能存在多解是该模型的一个特征，而非问题陈述的缺陷。任务是找到误差函数的最小值点，这是一个明确定义的操作。我将继续进行求解。\n\n### 求解推导\n问题的核心是找到伽马分布形状参数 $\\alpha$ 的值，该值能够最小化模型预测概率与观测值之间的平方误差。然后将变异系数计算为 $\\mathrm{CV} = 1/\\sqrt{\\alpha}$。\n\n模型预测 $P_{\\mathrm{model}}(\\alpha)$ 由下式给出：\n$$P_{\\mathrm{model}}(\\alpha) = \\prod_{i=1}^{n} p_i(\\alpha)$$\n其中 $p_i(\\alpha)$ 是第 $i$ 个层级被活化的概率。这个概率是伽马分布的生存函数 (SF)：\n$$p_i(\\alpha) = \\mathrm{SF}_{\\mathrm{Gamma}}\\left(T_i; a=\\alpha, \\mathrm{scale}=\\beta_i\\right)$$\n这里，阈值为 $T_i = \\Theta_i/S$，形状参数为 $a=\\alpha$，尺度参数为 $\\beta_i = \\mu_i/\\alpha$。这可以使用 `scipy.stats.gamma.sf` 计算。\n\n优化任务是 $\\alpha^\\star = \\arg\\min_{\\alpha > 0} (P_{\\mathrm{model}}(\\alpha) - p_{\\mathrm{obs}})^2$。按照建议，我们使用 $x = \\log \\alpha$ 重新参数化，将定义域从 $\\alpha \\in (0, \\infty)$ 转换为 $x \\in (-\\infty, \\infty)$。数值求解器的目标函数变为：\n$$f(x) = \\left( P_{\\mathrm{model}}(e^x) - p_{\\mathrm{obs}} \\right)^2$$\n我们将使用 `scipy.optimize.minimize_scalar` 的 `bounded` 方法在一个合理的 $x$ 区间（例如 $[-10, 10]$）内找到 $f(x)$ 的最小值。这对应于一个非常宽的 $\\mathrm{CV}$ 值范围，从约 $0.007$ 到 $150$。\n\n数值研究表明，在宽搜索区间内，标准优化例程可能无法找到误差函数的全局最小值，尤其对于非单调情况。这是函数存在平坦区域或多个局部最小值时常见的数值伪影。为了确保得到一个鲁棒的解，将对 $x=\\log\\alpha$ 的搜索区间进行编程分割。对于当 $\\mu_i > T_i$ 时出现的 U 形函数，最小值通常位于 $\\alpha=1$ ($x=0$) 附近，如果 $p_{obs} > P_{min}$，可能存在两个根。通过分割搜索域（例如，分为 $x<0$ 和 $x>0$），我们增加了找到全局最小值或其中一个全局最小值的可能性（如果存在多个）。将选择两次搜索中误差较小的那个解。\n\n对每个测试用例的算法如下：\n1.  定义误差函数 `error_squared(log_alpha, ...)`，它计算 $(P_{\\mathrm{model}}(e^{\\log\\alpha}) - p_{\\mathrm{obs}})^2$。\n2.  对 $\\log\\alpha$ 执行两次独立的最小化：一次在负区间（如 $[-10, 0]$），一次在正区间（如 $[0, 10]$）。\n3.  比较两次搜索得到的最小函数值 (`res.fun`)。最优的 $\\log\\alpha^\\star$ 是对应于两个最小值中较小者的那个。这既处理了真实最小值为唯一的情况，也处理了存在两个根的情况（两者都产生最小误差 $0$）。\n4.  计算最优形状参数 $\\alpha^\\star = e^{\\log\\alpha^\\star}$。\n5.  计算最终结果：$\\mathrm{CV} = 1 / \\sqrt{\\alpha^\\star}$。\n6.  收集所有案例的结果并格式化输出。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import gamma\nfrom scipy.optimize import minimize_scalar\n\ndef solve():\n    \"\"\"\n    Formulates and solves a mechanistic stochastic model for cell-to-cell heterogeneity\n    in kinase cascade activation to infer the coefficient of variation of kinase abundance.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A (two independent tiers, moderate activation)\n        {\n            \"S\": 1.0,\n            \"mus\": [4000.0, 2500.0],\n            \"Thetas\": [2200.0, 1800.0],\n            \"p_obs\": 0.55\n        },\n        # Case B (three independent tiers, stringent activation)\n        {\n            \"S\": 0.8,\n            \"mus\": [3000.0, 2000.0, 1500.0],\n            \"Thetas\": [2600.0, 1800.0, 1400.0],\n            \"p_obs\": 0.10\n        },\n        # Case C (two independent tiers, strong stimulus)\n        {\n            \"S\": 1.5,\n            \"mus\": [2500.0, 2500.0],\n            \"Thetas\": [1600.0, 1500.0],\n            \"p_obs\": 0.90\n        },\n        # Case D (single tier, moderate threshold)\n        {\n            \"S\": 1.0,\n            \"mus\": [1200.0],\n            \"Thetas\": [1000.0],\n            \"p_obs\": 0.30\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        s_val, mus, thetas, p_obs = case[\"S\"], case[\"mus\"], case[\"Thetas\"], case[\"p_obs\"]\n\n        def p_model(alpha, s, mu_list, theta_list):\n            \"\"\"Calculates the model-predicted active fraction for a given alpha.\"\"\"\n            if alpha = 1e-9:\n                return 1.0\n            \n            p_total = 1.0\n            for mu, theta in zip(mu_list, theta_list):\n                threshold = theta / s\n                scale = mu / alpha\n                # The survival function P(K > T) for K ~ Gamma(alpha, scale)\n                p_tier = gamma.sf(threshold, a=alpha, scale=scale)\n                p_total *= p_tier\n            return p_total\n\n        def error_squared(log_alpha, s, mu_list, theta_list, p_observed):\n            \"\"\"Objective function to minimize: squared error.\"\"\"\n            alpha = np.exp(log_alpha)\n            p_pred = p_model(alpha, s, mu_list, theta_list)\n            return (p_pred - p_observed)**2\n\n        # To robustly find the global minimum, especially for U-shaped error functions,\n        # we split the search domain for log(alpha) and compare the results.\n        # This handles cases with a unique minimum or two distinct roots.\n        args = (s_val, mus, thetas, p_obs)\n        \n        # Search over log(alpha)  0 (i.e., alpha  1, high CV)\n        res1 = minimize_scalar(error_squared, args=args, bounds=(-10, 0), method='bounded')\n        \n        # Search over log(alpha) > 0 (i.e., alpha > 1, low CV)\n        res2 = minimize_scalar(error_squared, args=args, bounds=(0, 10), method='bounded')\n\n        # Select the result from the interval that yielded the smaller error\n        if res1.fun  res2.fun:\n            optimal_log_alpha = res1.x\n        else:\n            optimal_log_alpha = res2.x\n            \n        optimal_alpha = np.exp(optimal_log_alpha)\n        \n        # Coefficient of Variation is 1/sqrt(alpha)\n        cv = 1.0 / np.sqrt(optimal_alpha)\n        results.append(cv)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2576915"}]}