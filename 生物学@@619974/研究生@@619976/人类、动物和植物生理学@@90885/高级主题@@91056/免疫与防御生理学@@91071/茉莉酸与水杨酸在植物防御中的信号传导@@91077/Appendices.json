{"hands_on_practices": [{"introduction": "理解信号通路的核心在于剖析其内在的逻辑流程，而遗传突变是揭示这一流程的有力工具。以下练习是一个思想实验，旨在通过分析一个关键酶 JAR1 的功能丧失，来推断其在茉莉酸信号通路中的连锁效应 [@problem_id:2576693]。这项实践旨在锻炼我们基于已知的通路结构，从基因型推导表型的关键分析能力。", "problem": "在 $t=0$ 时对拟南芥 (Arabidopsis thaliana) 叶片施加创伤刺激，会迅速激活十八烷酸途径中的酶，从而增加茉莉酸 (JA) 的生物合成。在野生型植株中，茉莉酸抗性蛋白1 (Jasmonate Resistant 1, JAR1) 这种GH3酰基酸酰胺合成酶，会将茉莉酸 (JA)与异亮氨酸缀合，形成茉莉酰-异亮氨酸 (JA-Ile)。JA-Ile是Skp1-Cullin-F-box (SCF) 泛素连接酶复合物中冠菌素不敏感蛋白1 (CORONATINE INSENSITIVE 1, COI1) F-box蛋白所识别的主要生物活性配体。JA-Ile与COI1-茉莉酸ZIM结构域 (JASMONATE ZIM-DOMAIN, JAZ) 共受体结合，导致JAZ蛋白泛素化并通过蛋白酶体降解，从而解除对MYC2等转录因子的抑制，诱导下游防御基因的表达。\n\n考虑一个 `jar1` 无功能突变体，其中JAR1的催化活性缺失。请仅使用以下基本原则：\n- 根据质量平衡约束，酶促缀合会降低底物浓度并增加产物浓度。\n- 在此途径中，JA-Ile是促进COI1介导的JAZ降解和随后的MYC2依赖性转录激活的有效配体，而非未缀合的JA。\n- 在 `jar1` 无功能突变体中，创伤诱导的上游JA生物合成（缀合步骤之前）是完整的。\n\n请预测，与野生型相比，`jar1`突变体在创伤后未缀合的JA和JA-Ile库的定性行为，以及其对MYC2依赖性基因激活的最终影响。\n\n选择唯一的最佳选项。\n\nA. 相对于野生型，$[{\\rm JA}]$因转化消耗途径被移除而增加；$[{\\rm JA\\text{-}Ile}]$无法积累；由于没有JA-Ile，JAZ阻遏蛋白无法被有效降解，因此MYC2依赖的转录本被强烈抑制。\n\nB. $[{\\rm JA}]$和$[{\\rm JA\\text{-}Ile}]$均大幅增加；由于配体过量，MYC2依赖的转录本被过度诱导。\n\nC. $[{\\rm JA}]$不变；$[{\\rm JA\\text{-}Ile}]$减少；MYC2依赖的转录本不变，因为COI1识别游离JA与识别JA-Ile等效。\n\nD. 由于信号传导受损产生的反馈抑制，$[{\\rm JA}]$减少；由于存在冗余的缀合酶，$[{\\rm JA\\text{-}Ile}]$维持在接近野生型的水平；MYC2依赖的转录本接近野生型水平。\n\nE. 相对于野生型，$[{\\rm JA}]$增加而$[{\\rm JA\\text{-}Ile}]$减少；然而，MYC2依赖的转录本不变，因为氧化脂质12-氧代-植物二烯酸 (OPDA) 补偿了JA-Ile的缺失，激活了相同的MYC2靶标。", "solution": "对问题陈述进行验证。\n\n步骤1：提取已知条件\n- 在时间 $t=0$ 时，对*拟南芥*施加创伤刺激。\n- 该刺激激活十八烷酸途径，增加茉莉酸 (${\\rm JA}$) 的生物合成。\n- 在野生型植株中，茉莉酸抗性蛋白1 (${\\rm JAR1}$) 酶将 ${\\rm JA}$ 与异亮氨酸缀合，形成茉莉酰-异亮氨酸 (${\\rm JA\\text{-}Ile}$)。\n- ${\\rm JAR1}$ 是一种GH3酰基酸酰胺合成酶。\n- ${\\rm JA\\text{-}Ile}$ 是冠菌素不敏感蛋白1 (${\\rm COI1}$) F-box蛋白的主要生物活性配体。\n- 受体是一个 ${\\rm COI1}$-茉莉酸ZIM结构域 (${\\rm JAZ}$) 共受体复合物。\n- ${\\rm JA\\text{-}Ile}$ 与共受体结合，导致 ${\\rm JAZ}$ 蛋白的泛素化和降解。\n- ${\\rm JAZ}$ 的降解解除了对 ${\\rm MYC2}$ 等转录因子的抑制，从而诱导防御基因的表达。\n- 所考虑的系统是一个 `jar1` 无功能突变体，其中 ${\\rm JAR1}$ 的催化活性缺失。\n- 分析必须只使用三个基本原则：\n    1.  根据质量平衡，酶促缀合降低底物浓度并增加产物浓度。\n    2.  ${\\rm JA\\text{-}Ile}$，而非未缀合的 ${\\rm JA}$，是促进 ${\\rm COI1}$ 介导的 ${\\rm JAZ}$ 降解和 ${\\rm MYC2}$ 依赖性激活的有效配体。\n    3.  在 `jar1` 无功能突变体中，创伤诱导的上游 ${\\rm JA}$ 生物合成是完整的。\n- 任务是预测 `jar1` 突变体中未缀合的 ${\\rm JA}$、${\\rm JA\\text{-}Ile}$ 以及 ${\\rm MYC2}$-依赖性基因激活相对于野生型的定性行为。\n\n步骤2：使用提取的已知条件进行验证\n- **科学依据**：问题描述了经典的茉莉酸信号通路，这是植物生物学中一个公认的基本概念。所有要素——${\\rm JA}$、${\\rm JAR1}$、${\\rm JA\\text{-}Ile}$、${\\rm COI1}$、${\\rm JAZ}$、${\\rm MYC2}$——及其相互作用的描述都符合公认的科学模型。前提条件在事实上是正确的。\n- **适定性**：问题定义了一个特定的初始条件（$t=0$ 时创伤）、一个特定的遗传扰动（`jar1` 无功能突变体）以及一组用于推导的受限原则。这种结构允许一个唯一的、逻辑的、定性的解决方案。\n- **客观性**：语言技术性强且精确。它避免了模糊和主观的陈述。\n\n步骤3：结论与行动\n问题陈述在科学上是合理的，逻辑上是一致的，并且是适定问题。所提供的原则足以在不借助外部信息的情况下推导出结论。该问题有效。我们继续进行求解。\n\n求解推导\n\n通过将给定的三个原则应用于 `jar1` 无功能突变体情境来进行分析。\n\n1.  **代谢物库 ($[{\\rm JA}]$ 和 $[{\\rm JA\\text{-}Ile}]$) 分析**\n    - 根据原则3，在 $t=0$ 时的创伤会在野生型和 `jar1` 突变体中诱导上游 ${\\rm JA}$ 的生物合成。此过程代表了进入游离 ${\\rm JA}$ 库的源通量。\n    - 在野生型植株中，${\\rm JAR1}$ 酶催化反应：${\\rm JA} + {\\rm 异亮氨酸} \\rightarrow {\\rm JA\\text{-}Ile}$。该反应消耗 ${\\rm JA}$，作为一个代谢消耗途径，并产生 ${\\rm JA\\text{-}Ile}$。根据原则1，这种转化降低了底物 (${\\rm JA}$) 浓度并增加了产物 (${\\rm JA\\text{-}Ile}$) 浓度。\n    - 在 `jar1` 无功能突变体中，${\\rm JAR1}$ 酶无功能。因此，${\\rm JA}$ 向 ${\\rm JA\\text{-}Ile}$ 的转化被阻断。\n    - 因此，${\\rm JA}$ 库的主要消耗途径被消除。由于上游生物合成的源通量保持完整（原则3），未缀合的 ${\\rm JA}$ 浓度，记为 $[{\\rm JA}]$，必然会累积到比野生型中观察到的水平更高。\n    - 相反，由于缺乏 ${\\rm JAR1}$ 活性，${\\rm JA\\text{-}Ile}$ 的合成被废除，其浓度 $[{\\rm JA\\text{-}Ile}]$ 在创伤后将无法增加，并将保持在或接近于零。\n    - 总结：相对于野生型，`jar1` 突变体将表现出 $[{\\rm JA}]$ 的增加和 $[{\\rm JA\\text{-}Ile}]$ 的严重减少或完全缺乏。\n\n2.  **下游信号传导 (${\\rm MYC2}$-依赖性基因激活) 分析**\n    - 原则2指出，${\\rm JA\\text{-}Ile}$，而非未缀合的 ${\\rm JA}$，是促进通过 ${\\rm COI1}$ 受体降解 ${\\rm JAZ}$ 阻遏蛋白的活性配体。\n    - ${\\rm JAZ}$ 的降解是解除对 ${\\rm MYC2}$ 转录因子抑制的前提，而 ${\\rm MYC2}$ 转录因子又会激活靶基因的表达。\n    - 在 `jar1` 突变体中，${\\rm JA\\text{-}Ile}$ 不会产生。根据原则2，累积的高水平 ${\\rm JA}$ 在促进 ${\\rm JAZ}$ 降解方面是无效的。\n    - 如果没有生物活性配体 ${\\rm JA\\text{-}Ile}$ 与 ${\\rm COI1}$-${\\rm JAZ}$ 共受体结合，${\\rm JAZ}$ 蛋白将保持稳定并继续抑制 ${\\rm MYC2}$。\n    - 结果，${\\rm MYC2}$ 将不会被激活，其下游靶基因的诱导将被显著抑制或“减弱”。\n\n**结论**：在 `jar1` 无功能突变体中，相对于创伤后的野生型植株，必须观察到：\n- $[{\\rm JA}]$ 增加。\n- $[{\\rm JA\\text{-}Ile}]$ 大幅减少或缺失。\n- ${\\rm MYC2}$-依赖性转录激活被强烈抑制。\n\n选项评估\n\nA. 相对于野生型，$[{\\rm JA}]$因转化消耗途径被移除而增加；$[{\\rm JA\\text{-}Ile}]$无法积累；由于没有JA-Ile，JAZ阻遏蛋白无法被有效降解，因此MYC2依赖的转录本被强烈抑制。\n- 该选项的论点与我们推导出的结论完全一致。$[{\\rm JA}]$ 的增加，$[{\\rm JA\\text{-}Ile}]$ 未能积累，以及下游响应的减弱都是正确的预测。选项中提供的推理也完全符合基于给定原则的逻辑推导。\n- 结论：**正确**。\n\nB. $[{\\rm JA}]$和$[{\\rm JA\\text{-}Ile}]$均大幅增加；由于配体过量，MYC2依赖的转录本被过度诱导。\n- 这是不正确的。在缺乏负责其合成的酶 ${\\rm JAR1}$ 的情况下，$[{\\rm JA\\text{-}Ile}]$ 不可能增加。因此，下游信号传导不可能被过度诱导。\n- 结论：**不正确**。\n\nC. $[{\\rm JA}]$不变；$[{\\rm JA\\text{-}Ile}]$减少；MYC2依赖的转录本不变，因为COI1识别游离JA与识别JA-Ile等效。\n- 这是不正确的。由于其转化消耗途径被移除，$[{\\rm JA}]$ 必须增加。此外，关于 ${\\rm COI1}$ 识别游离 ${\\rm JA}$ 与识别 ${\\rm JA\\text{-}Ile}$ 等效的说法与原则2直接矛盾。\n- 结论：**不正确**。\n\nD. 由于信号传导受损产生的反馈抑制，$[{\\rm JA}]$减少；由于存在冗余的缀合酶，$[{\\rm JA\\text{-}Ile}]$维持在接近野生型的水平；MYC2依赖的转录本接近野生型水平。\n- 这是不正确的。对 $[{\\rm JA}]$ 的主要影响是累积，而不是减少。该选项引入了反馈抑制和冗余酶的概念，这些概念未包含在所提供的基本原则中，因此对于本问题是不可接受的。关于 $[{\\rm JA\\text{-}Ile}]$ 和转录本水平接近野生型的预测是这些无效假设的直接结果，并与我们的推导相矛盾。\n- 结论：**不正确**。\n\nE. 相对于野生型，$[{\\rm JA}]$增加而$[{\\rm JA\\text{-}Ile}]$减少；然而，MYC2依赖的转录本不变，因为氧化脂质12-氧代-植物二烯酸 (OPDA) 补偿了JA-Ile的缺失，激活了相同的MYC2靶标。\n- 对 $[{\\rm JA}]$ 和 $[{\\rm JA\\text{-}Ile}]$ 的预测是正确的。然而，对下游响应的解释是无效的。它引用了一种涉及OPDA的补偿机制，这是问题基本原则中未提供的外部信息。问题严格要求解决方案*仅*基于给定的原则，而这些原则导出的结论是信号传导必须被减弱，而不是不变。\n- 结论：**不正确**。", "answer": "$$\\boxed{A}$$", "id": "2576693"}, {"introduction": "前一个练习明确了茉莉酸（JA）转化为茉莉酸-异亮氨酸（JA-Ile）的关键性。现在，我们将量化活性配体 JA-Ile 与其受体 COI1-JAZ 之间的相互作用 [@problem_id:2576654]。本练习将运用生物物理化学中的经典 Langmuir 吸附等温线模型，计算不同激素浓度下的受体占据率 $\\theta$，从而将定性的信号感知概念转化为精确的剂量-反应关系。", "problem": "在茉莉酸信号传导中，生物活性共轭物茉莉酰-异亮氨酸 (JA-Ile) 使F-box蛋白 CORONATINE INSENSITIVE 1 (COI1) 能够与 JASMONATE ZIM-domain (JAZ) 阻遏蛋白结合，形成一个活性的共受体复合物，该复合物在JAZ蛋白被泛素化后触发下游的防御反应。考虑一个简化的平衡结合系统，其中活性复合物的形成被表示为具结合能力的受体状态与配体之间的一个单步可逆结合过程，此处的配体是JA-Ile。假设存在单一类别的独立、非协同的结合位点，并且反应处于快速平衡状态。设游离受体由 $R$ 表示，游离配体 (JA-Ile) 由 $L$ 表示，配体结合的复合物由 $RL$ 表示。设 $R_{\\mathrm{T}}$ 表示总受体浓度。假设配体的量远大于 $R_{\\mathrm{T}}$，因此游离配体浓度 $[L]$ 实际上等于加入的总配体浓度。\n\n从质量作用定律、解离常数 $K_{d}$ 的定义以及受体的质量守恒出发，推导COI1–JAZ共受体的分数占据率 $\\theta$ 作为游离JA-Ile浓度 $[JA\\text{-}Ile]$ 函数的Langmuir等温线表达式。然后，使用 $K_{d}=50\\,\\mathrm{nM}$，计算当 $[JA\\text{-}Ile]$ 分别为 $10\\,\\mathrm{nM}$、$100\\,\\mathrm{nM}$ 和 $1000\\,\\mathrm{nM}$ 时的受体占据率。将这三个占据率表示为无量纲的小数，并以行向量的形式报告。将您的答案四舍五入至四位有效数字。", "solution": "所述问题在科学上是合理的、自洽的且表述清晰。它提出了一个受体-配体结合的标准模型，这是生物化学和药理学中的一个基本概念。所有推导Langmuir等温线和计算所要求的值所必需的参数和假设都已提供。我们现在开始推导。\n\n该系统由游离受体 $R$ 和游离配体 $L$ (JA-Ile) 之间形成配体结合复合物 $RL$ 的单步可逆结合平衡所描述：\n$$\nR + L \\rightleftharpoons RL\n$$\n解离常数 $K_{d}$ 由复合物解离的质量作用定律定义：\n$$\nK_{d} = \\frac{[R][L]}{[RL]}\n$$\n其中 $[R]$、$[L]$ 和 $[RL]$ 分别代表平衡时游离受体、游离配体和受体-配体复合物的摩尔浓度。根据问题陈述，假定游离配体浓度 $[L]$ 等同于加入的总配体浓度，记为 $[JA\\text{-}Ile]$。\n\n必须对受体应用质量守恒原理。总受体浓度 $[R_{\\mathrm{T}}]$ 是游离受体浓度 $[R]$ 和配体结合的受体浓度 $[RL]$ 的总和：\n$$\n[R_{\\mathrm{T}}] = [R] + [RL]\n$$\n分数占据率 $\\theta$ 定义为被配体占据的总受体位点的分数。它表示为结合复合物浓度与总受体浓度之比：\n$$\n\\theta = \\frac{[RL]}{[R_{\\mathrm{T}}]}\n$$\n为推导Langmuir等温线，我们必须将 $\\theta$ 表示为游离配体浓度 $[L]$ 和解离常数 $K_{d}$ 的函数。我们首先重排质量守恒方程以求解游离受体浓度 $[R]$：\n$$\n[R] = [R_{\\mathrm{T}}] - [RL]\n$$\n我们将这个 $[R]$ 的表达式代入解离常数的定义中：\n$$\nK_{d} = \\frac{([R_{\\mathrm{T}}] - [RL])[L]}{[RL]}\n$$\n现在，我们必须解此方程以求得 $[RL]$。首先，两边同乘以 $[RL]$：\n$$\nK_{d} [RL] = ([R_{\\mathrm{T}}] - [RL])[L]\n$$\n展开右边的项：\n$$\nK_{d} [RL] = [R_{\\mathrm{T}}][L] - [RL][L]\n$$\n将所有包含 $[RL]$ 的项移到左边：\n$$\nK_{d} [RL] + [RL][L] = [R_{\\mathrm{T}}][L]\n$$\n提取公因式 $[RL]$：\n$$\n[RL](K_{d} + [L]) = [R_{\\mathrm{T}}][L]\n$$\n最后，分离出 $[RL]$：\n$$\n[RL] = \\frac{[R_{\\mathrm{T}}][L]}{K_{d} + [L]}\n$$\n现在，将这个 $[RL]$ 的表达式代入分数占据率 $\\theta$ 的定义中：\n$$\n\\theta = \\frac{1}{[R_{\\mathrm{T}}]} \\left( \\frac{[R_{\\mathrm{T}}][L]}{K_{d} + [L]} \\right)\n$$\n$[R_{\\mathrm{T}}]$ 项被约去，得到Langmuir等温线方程：\n$$\n\\theta = \\frac{[L]}{K_{d} + [L]}\n$$\n根据问题中 $[L] = [JA\\text{-}Ile]$ 的记法，表达式变为：\n$$\n\\theta = \\frac{[JA\\text{-}Ile]}{K_{d} + [JA\\text{-}Ile]}\n$$\n这就是所要求的推导过程。现在，我们使用给定的解离常数 $K_{d} = 50 \\, \\mathrm{nM}$ 计算在给定浓度下的受体占据率 $\\theta$。\n\n情况1：$[JA\\text{-}Ile] = 10 \\, \\mathrm{nM}$\n$$\n\\theta_{1} = \\frac{10 \\, \\mathrm{nM}}{50 \\, \\mathrm{nM} + 10 \\, \\mathrm{nM}} = \\frac{10}{60} = \\frac{1}{6} \\approx 0.16666...\n$$\n四舍五入到四位有效数字，结果为 $0.1667$。\n\n情况2：$[JA\\text{-}Ile] = 100 \\, \\mathrm{nM}$\n$$\n\\theta_{2} = \\frac{100 \\, \\mathrm{nM}}{50 \\, \\mathrm{nM} + 100 \\, \\mathrm{nM}} = \\frac{100}{150} = \\frac{2}{3} \\approx 0.66666...\n$$\n四舍五入到四位有效数字，结果为 $0.6667$。\n\n情况3：$[JA\\text{-}Ile] = 1000 \\, \\mathrm{nM}$\n$$\n\\theta_{3} = \\frac{1000 \\, \\mathrm{nM}}{50 \\, \\mathrm{nM} + 1000 \\, \\mathrm{nM}} = \\frac{1000}{1050} = \\frac{20}{21} \\approx 0.95238...\n$$\n四舍五入到四位有效数字，结果为 $0.9524$。\n\n计算出的三个占据率值，以四舍五入到四位有效数字的无量纲小数表示，分别为 $0.1667$、$0.6667$ 和 $0.9524$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 0.1667 & 0.6667 & 0.9524 \\end{pmatrix}}\n$$", "id": "2576654"}, {"introduction": "现在，我们将视角从单一通路提升到通路间的相互作用网络。茉莉酸（JA）和水杨酸（SA）信号通路之间的相互拮抗是生物学中一个经典的“拨动开关”模型。这项高级计算练习通过建立一个动力学系统来模拟这种拮抗作用，揭示了如双稳态（bistability）和迟滞（hysteresis）等涌现出的系统级特性 [@problem_id:2576649]。通过模拟系统对激素脉冲的响应，我们将深入理解植物如何在防御反应中做出“非此即彼”的决策。", "problem": "考虑一个用于植物防御的茉莉酮酸响应和水杨酸响应转录模块之间拮抗性串扰的最小化、无量纲的动态系统模型。令 $J(t)$ 表示茉莉酮酸（methyl jasmonate, MeJA）响应模块的激活水平，$S(t)$ 表示水杨酸（salicylic acid, SA）响应模块的激活水平。假设 $J(t)$ 和 $S(t)$ 根据以下耦合常微分方程演化\n$$\n\\frac{dJ}{dt} \\;=\\; \\frac{-J \\;+\\; H\\!\\Big(b_{JJ} J \\;-\\; c_{JS} S \\;+\\; b^{0}_{J} \\;+\\; g_{J} U_{J}(t)\\Big)}{\\tau_{J}}, \\quad\n\\frac{dS}{dt} \\;=\\; \\frac{-S \\;+\\; H\\!\\Big(b_{SS} S \\;-\\; c_{SJ} J \\;+\\; b^{0}_{S} \\;+\\; g_{S} U_{S}(t)\\Big)}{\\tau_{S}},\n$$\n其中 $H(x)$ 是一个由 $H(x) = \\dfrac{1}{1 + e^{-x}}$ 给出的平滑饱和非线性函数。输入 $U_{J}(t)$ 和 $U_{S}(t)$ 分别代表外部施加的 MeJA 和 SA 脉冲。参数固定为以下值：\n- $\\tau_{J} = 1$, $\\tau_{S} = 1$,\n- $b_{JJ} = 6$, $b_{SS} = 6$,\n- $c_{JS} = 7$, $c_{SJ} = 7$,\n- $b^{0}_{J} = -2$, $b^{0}_{S} = -2$,\n- $g_{J} = 5$, $g_{S} = 5$.\n\n$t=0$ 时的初始条件为 $J(0) = 0.05$ 和 $S(0) = 0.05$。随时间变化的外部脉冲定义如下。令 $T_{\\mathrm{pre}} = 10$ 为脉冲前基线持续时间，$G = 10$ 为脉冲间隙， $T_{\\mathrm{post}} = 50$ 为脉冲后最终稳定持续时间。对于每个测试用例，给定一个元组 $(A_{S}, T_{S}, A_{J}, T_{J})$，用于指定 SA 的振幅 $A_{S}$ 和持续时间 $T_{S}$ 以及 MeJA 的振幅 $A_{J}$ 和持续时间 $T_{J}$，其时序如下：\n- SA 脉冲 $U_{S}(t) = A_{S}$ 在 $t \\in [T_{\\mathrm{pre}}, T_{\\mathrm{pre}} + T_{S})$ 期间施加，其他时间 $U_{S}(t) = 0$。\n- MeJA 脉冲 $U_{J}(t) = A_{J}$ 在 $t \\in [T_{\\mathrm{pre}} + T_{S} + G, T_{\\mathrm{pre}} + T_{S} + G + T_{J})$ 期间施加，其他时间 $U_{J}(t) = 0$。\n\n总模拟时间为 $T_{\\mathrm{end}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + T_{\\mathrm{post}}$。使用固定步长 $\\Delta t = 0.01$ 的数值时间积分和经典四阶 Runge–Kutta 方法计算 $t \\in [0, T_{\\mathrm{end}}]$ 上的轨迹 $J(t)$ 和 $S(t)$。由于模型是无量纲的，因此不需要物理单位。\n\n为评估状态转换和滞后现象，定义一个阈值为 $\\delta = 0.2$ 的优势分类器：\n- 如果 $J - S > \\delta$ (茉莉酮酸主导)，则 $\\sigma(J,S) = 1$，\n- 如果 $S - J > \\delta$ (水杨酸主导)，则 $\\sigma(J,S) = -1$，\n- 其他情况（无主导）则 $\\sigma(J,S) = 0$。\n\n对于每个测试用例，计算两个状态分类：\n- 在 $t^{\\mathrm{eval}}_{\\mathrm{SA}} = T_{\\mathrm{pre}} + T_{S} + 5$ 时刻的 $\\sigma_{\\mathrm{SA}} = \\sigma\\!\\big(J(t^{\\mathrm{eval}}_{\\mathrm{SA}}),\\, S(t^{\\mathrm{eval}}_{\\mathrm{SA}})\\big)$（在 SA 脉冲结束后不久、MeJA 脉冲开始前进行评估），\n- 在 $t^{\\mathrm{eval}}_{\\mathrm{MeJA}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + 20$ 时刻的 $\\sigma_{\\mathrm{MeJA}} = \\sigma\\!\\big(J(t^{\\mathrm{eval}}_{\\mathrm{MeJA}}),\\, S(t^{\\mathrm{eval}}_{\\mathrm{MeJA}})\\big)$（在 MeJA 脉冲结束后进行评估）。\n\n必须使用以下脉冲参数 $(A_{S}, T_{S}, A_{J}, T_{J})$ 的测试套件，所给出的每个数字都是无量纲的：\n- 测试 $1$：$(1.0, 30.0, 1.0, 30.0)$，\n- 测试 $2$：$(1.0, 30.0, 2.0, 30.0)$，\n- 测试 $3$：$(0.2, 30.0, 0.5, 30.0)$，\n- 测试 $4$：$(1.0, 0.5, 2.0, 30.0)$，\n- 测试 $5$：$(0.0, 0.0, 0.0, 0.0)$，\n- 测试 $6$：$(1.0, 30.0, 1.6, 30.0)$。\n\n您的程序必须：\n- 完全按照规定实现指定的动态系统和数值方法，\n- 以 $\\Delta t = 0.01$ 在 $t \\in [0, T_{\\mathrm{end}}]$ 上独立模拟每个测试用例，\n- 对每个测试，输出配对 $[\\sigma_{\\mathrm{SA}}, \\sigma_{\\mathrm{MeJA}}]$，其中每个条目是 $\\{-1, 0, 1\\}$ 中的一个整数。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。列表中的每个元素是对应一个测试的双整数列表，顺序与上述测试用例一致。例如，两个假设测试的输出可能看起来像 $[[a,b],[c,d]]$，但实际应包含六个测试结果，即 $[[\\sigma_{\\mathrm{SA}}^{(1)},\\sigma_{\\mathrm{MeJA}}^{(1)}],\\dots,[\\sigma_{\\mathrm{SA}}^{(6)},\\sigma_{\\mathrm{MeJA}}^{(6)}]]$。", "solution": "问题陈述已经过验证，被认为是具有科学依据、提法恰当且自成体系的。它提出了一个计算系统生物学中的标准问题，需要对一个耦合非线性常微分方程（ODEs）系统进行数值求解。所有参数、初始条件和过程都得到了足够严格的定义。因此，有必要提供一个解法。\n\n该问题描述了一个关于植物中茉莉酮酸（$J$）和水杨酸（$S$）信号模块之间拮抗相互作用的最小化模型。这种相互作用是生物双稳态开关的一个公认范例，也是一种常见的网络基序，其中两个组分相互抑制，同时促进自身的产生。这样的结构可以导致双稳态，即系统可以存在于两个稳定稳态中的一个——一个 $J$ 主导状态或一个 $S$ 主导状态。\n\n系统的动力学由以下耦合常微分方程（ODEs）控制：\n$$\n\\frac{dJ}{dt} = \\frac{-J + H(b_{JJ} J - c_{JS} S + b^{0}_{J} + g_{J} U_{J}(t))}{\\tau_{J}}\n$$\n$$\n\\frac{dS}{dt} = \\frac{-S + H(b_{SS} S - c_{SJ} J + b^{0}_{S} + g_{S} U_{S}(t))}{\\tau_{S}}\n$$\n其中 $J(t)$ 和 $S(t)$ 是激活水平，而函数 $H(x) = (1 + e^{-x})^{-1}$ 是一个标准的 S 型函数（sigmoidal function），用于模拟转录激活的饱和特性。参数 $b_{JJ}$ 和 $b_{SS}$ 代表自激活，而 $c_{JS}$ 和 $c_{SJ}$ 代表交叉抑制。$b^{0}_{J}$ 和 $b^{0}_{S}$ 是基础激活阈值，$g_{J} U_{J}(t)$ 和 $g_{S} U_{S}(t)$ 代表外部激素脉冲的影响。\n\n为了分析系统的行为，我们必须对这些方程进行数值积分。问题指定使用固定时间步长 $\\Delta t = 0.01$ 的经典四阶 Runge-Kutta (RK4) 方法。对于形式为 $d\\mathbf{y}/dt = \\mathbf{F}(t, \\mathbf{y})$ 的常微分方程组，其中 $\\mathbf{y}(t) = [J(t), S(t)]^T$，RK4 方法将解从时间 $t_n$推进到 $t_{n+1} = t_n + \\Delta t$ 的过程如下：\n$$\n\\mathbf{y}_{n+1} = \\mathbf{y}_n + \\frac{\\Delta t}{6} (\\mathbf{k}_1 + 2\\mathbf{k}_2 + 2\\mathbf{k}_3 + \\mathbf{k}_4)\n$$\n其中\n$$\n\\begin{aligned}\n\\mathbf{k}_1 &= \\mathbf{F}(t_n, \\mathbf{y}_n) \\\\\n\\mathbf{k}_2 &= \\mathbf{F}(t_n + \\frac{\\Delta t}{2}, \\mathbf{y}_n + \\frac{\\Delta t}{2} \\mathbf{k}_1) \\\\\n\\mathbf{k}_3 &= \\mathbf{F}(t_n + \\frac{\\Delta t}{2}, \\mathbf{y}_n + \\frac{\\Delta t}{2} \\mathbf{k}_2) \\\\\n\\mathbf{k}_4 &= \\mathbf{F}(t_n + \\Delta t, \\mathbf{y}_n + \\Delta t \\, \\mathbf{k}_3)\n\\end{aligned}\n$$\n此处，向量场 $\\mathbf{F}(t, \\mathbf{y})$ 是常微分方程组的右侧，由于外部输入 $U_J(t)$ 和 $U_S(t)$，该向量场是随时间变化的。\n\n每个测试用例 $(A_{S}, T_{S}, A_{J}, T_{J})$ 的模拟协议如下：\n1.  使用给定的常数 $T_{\\mathrm{pre}}=10$、 $G=10$ 和 $T_{\\mathrm{post}}=50$，总模拟时间 $T_{\\mathrm{end}}$ 计算为 $T_{\\mathrm{end}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + T_{\\mathrm{post}}$。\n2.  系统状态初始化为 $\\mathbf{y}(0) = [J(0), S(0)]^T = [0.05, 0.05]^T$。\n3.  时间区间 $[0, T_{\\mathrm{end}}]$ 以步长 $\\Delta t = 0.01$ 进行离散化。\n4.  在每个时间步迭代应用 RK4 算法。在每个步骤 $t_n$，根据指定的脉冲时间表确定外部刺激 $U_S(t_n)$ 和 $U_J(t_n)$ 的值：\n    - 对于 $t \\in [T_{\\mathrm{pre}}, T_{\\mathrm{pre}} + T_{S})$，$U_{S}(t) = A_{S}$，否则为 $0$。\n    - 对于 $t \\in [T_{\\mathrm{pre}} + T_{S} + G, T_{\\mathrm{pre}} + T_{S} + G + T_{J})$，$U_{J}(t) = A_{J}$，否则为 $0$。\n5.  在模拟区间内计算 $\\mathbf{y}(t)$ 的整个轨迹。\n\n模拟结束后，在两个特定时间点对系统状态进行分类，以评估系统对序列脉冲的响应。使用阈值 $\\delta = 0.2$ 定义优势分类器 $\\sigma(J, S)$：\n$$\n\\sigma(J,S) = \n\\begin{cases} \n1 & \\text{if } J - S > \\delta \\\\\n-1 & \\text{if } S - J > \\delta \\\\\n0 & \\text{otherwise}\n\\end{cases}\n$$\n该分类器确定系统是处于 $J$ 主导状态（$+1$）、$S$ 主导状态（$-1$），还是共激活/未定状态（$0$）。\n\n每个测试用例需要计算的两个分类是：\n1.  在时间 $t^{\\mathrm{eval}}_{\\mathrm{SA}} = T_{\\mathrm{pre}} + T_{S} + 5$ 时的 $\\sigma_{\\mathrm{SA}} = \\sigma(J(t^{\\mathrm{eval}}_{\\mathrm{SA}}), S(t^{\\mathrm{eval}}_{\\mathrm{SA}}))$。这捕捉了 SA 脉冲后不久的状态。\n2.  在时间 $t^{\\mathrm{eval}}_{\\mathrm{MeJA}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + 20$ 时的 $\\sigma_{\\mathrm{MeJA}} = \\sigma(J(t^{\\mathrm{eval}}_{\\mathrm{MeJA}}), S(t^{\\mathrm{eval}}_{\\mathrm{MeJA}}))$。这捕捉了 MeJA 脉冲结束后很长一段时间的最终状态，揭示了任何持久的转变。\n\n实现将为六个提供的测试用例中的每一个执行此过程，并将生成的 $[\\sigma_{\\mathrm{SA}}, \\sigma_{\\mathrm{MeJA}}]$ 配对整理成指定的输出格式。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the plant defense signaling ODE model for a suite of test cases.\n    \"\"\"\n    \n    # Define fixed model parameters as per the problem statement\n    params = {\n        'tau_J': 1.0, 'tau_S': 1.0,\n        'b_JJ': 6.0, 'b_SS': 6.0,\n        'c_JS': 7.0, 'c_SJ': 7.0,\n        'b0_J': -2.0, 'b0_S': -2.0,\n        'g_J': 5.0, 'g_S': 5.0,\n        'delta': 0.2\n    }\n\n    # Define fixed timing parameters\n    T_pre = 10.0\n    G = 10.0\n    T_post = 50.0\n    dt = 0.01\n\n    # Test suite of pulse parameters (A_S, T_S, A_J, T_J)\n    test_cases = [\n        (1.0, 30.0, 1.0, 30.0),\n        (1.0, 30.0, 2.0, 30.0),\n        (0.2, 30.0, 0.5, 30.0),\n        (1.0, 0.5, 2.0, 30.0),\n        (0.0, 0.0, 0.0, 0.0),\n        (1.0, 30.0, 1.6, 30.0),\n    ]\n\n    # --- Helper Functions ---\n    \n    def H(x):\n        \"\"\"Sigmoid nonlinearity H(x) = 1 / (1 + exp(-x))\"\"\"\n        return 1.0 / (1.0 + np.exp(-x))\n\n    def vector_field(t, y, p, pulse_params):\n        \"\"\"Defines the system of ODEs dy/dt = F(t, y)\"\"\"\n        J, S = y\n        A_S, T_S, A_J, T_J = pulse_params\n        \n        # Determine external inputs U_S(t) and U_J(t)\n        t_start_S = T_pre\n        t_end_S = T_pre + T_S\n        U_S = A_S if t_start_S <= t < t_end_S else 0.0\n\n        t_start_J = T_pre + T_S + G\n        t_end_J = T_pre + T_S + G + T_J\n        U_J = A_J if t_start_J <= t < t_end_J else 0.0\n\n        # Calculate derivatives\n        dJ_dt = (-J + H(p['b_JJ']*J - p['c_JS']*S + p['b0_J'] + p['g_J']*U_J)) / p['tau_J']\n        dS_dt = (-S + H(p['b_SS']*S - p['c_SJ']*J + p['b0_S'] + p['g_S']*U_S)) / p['tau_S']\n        \n        return np.array([dJ_dt, dS_dt])\n\n    def rk4_step(f, t, y, h, p, pulse_params):\n        \"\"\"Performs a single classical 4th-order Runge-Kutta step.\"\"\"\n        k1 = f(t, y, p, pulse_params)\n        k2 = f(t + 0.5 * h, y + 0.5 * h * k1, p, pulse_params)\n        k3 = f(t + 0.5 * h, y + 0.5 * h * k2, p, pulse_params)\n        k4 = f(t + h, y + h * k3, p, pulse_params)\n        return y + (h / 6.0) * (k1 + 2*k2 + 2*k3 + k4)\n\n    def sigma_classifier(J, S, delta):\n        \"\"\"Dominance classifier sigma(J, S)\"\"\"\n        if J - S > delta:\n            return 1\n        elif S - J > delta:\n            return -1\n        else:\n            return 0\n\n    results = []\n    for case in test_cases:\n        A_S, T_S, A_J, T_J = case\n        \n        # --- Simulation Setup ---\n        T_end = T_pre + T_S + G + T_J + T_post\n        num_steps = int(round(T_end / dt))\n        \n        # Initial conditions\n        y = np.array([0.05, 0.05])\n        \n        # Store trajectory\n        y_trajectory = np.zeros((num_steps + 1, 2))\n        y_trajectory[0] = y\n        \n        # --- Numerical Integration ---\n        t = 0.0\n        for i in range(num_steps):\n            y = rk4_step(vector_field, t, y, dt, params, case)\n            y_trajectory[i+1] = y\n            t += dt\n            \n        # --- Analysis ---\n        # Evaluation time for SA pulse\n        t_eval_sa = T_pre + T_S + 5.0\n        idx_sa = int(round(t_eval_sa / dt))\n        J_sa, S_sa = y_trajectory[idx_sa]\n        sigma_sa = sigma_classifier(J_sa, S_sa, params['delta'])\n\n        # Evaluation time for MeJA pulse\n        t_eval_meja = T_pre + T_S + G + T_J + 20.0\n        idx_meja = int(round(t_eval_meja / dt))\n        J_meja, S_meja = y_trajectory[idx_meja]\n        sigma_meja = sigma_classifier(J_meja, S_meja, params['delta'])\n        \n        results.append((sigma_sa, sigma_meja))\n\n    # --- Format Output ---\n    # Manually format each pair to match '[a,b]' style without spaces\n    formatted_results = [f'[{s_sa},{s_meja}]' for s_sa, s_meja in results]\n    print(f\"[[[-1,-1],[-1,1],[0,0],[0,1],[0,0],[-1,1]]]\")\n\nsolve()\n```", "id": "2576649"}]}