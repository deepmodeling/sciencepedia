{"hands_on_practices": [{"introduction": "栓塞事件会阻塞木质部导管，增加植物的整体水力阻力，这类似于电路中电阻的增加。本练习将应用电路理论中的欧姆定律类比，通过计算来理解当部分茎干木质部导管功能丧失时，植物需要产生多大的额外拉力（更负的水势）来维持蒸腾水流。这项实践将结构（栓塞的导管）与功能（水分运输效率）紧密联系起来，并量化了栓塞对植物水分关系造成的直接后果 [@problem_id:2624050]。", "problem": "一株正在蒸腾的被子植物幼苗可以表示为一个由根、茎、叶三个部分串联组成的线性水力网络。在稳态条件下，当内部储水能力可忽略不计且液流粘度恒定时，水的质量通量与土壤-根系界面和叶片质外体之间的驱动水势差成正比。将每个部分 $i \\in \\{\\text{root}, \\text{stem}, \\text{leaf}\\}$ 的水力导度定义为 $K_{i}$ (单位: $\\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$)，并设整株植物的水力导度为 $K_{\\text{plant}}$。栓塞事件会产生气体栓塞，使得一部分木质部导管失效。在茎中，导管可理想化为平行的相同管道；当比例为 $f$ 的导管发生栓塞时，功能性平行网络的规模减小为原来的 $(1-f)$ 倍，有效的茎干导度也按比例 $(1-f)$ 减小。假设栓塞不改变剩余功能性导管的几何形状。\n\n给定正午稳态下的以下数据：\n- 根部基线导度 $K_{\\text{root},0} = 2.0 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$。\n- 茎部基线导度 $K_{\\text{stem},0} = 3.0 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$。\n- 叶部基线导度 $K_{\\text{leaf},0} = 1.2 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$。\n- 栓塞的茎干导管比例 $f = 0.50$。\n- 稳态蒸腾质量通量 $E = 1.0 \\times 10^{-5}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}$。\n\n从适用于植物水力学的第一性原理出发（线性流量-势能正比关系；导度和阻力的定义；水力阻力的串联组合；平行网络导度与功能性导管数量的标度关系），进行以下工作：\n1. 推导维持通量 $E$ 所需的叶-根水势差 $\\Delta \\Psi$（取为从土壤-根系界面到叶片质外体的势降大小）的表达式，用 $E$、$K_{\\text{root},0}$、$K_{\\text{stem},0}$、$K_{\\text{leaf},0}$ 和 $f$ 表示。\n2. 使用给定的数值计算 $\\Delta \\Psi$。\n\n以兆帕 (MPa) 为单位表示 $\\Delta \\Psi$ 的最终答案，并将答案四舍五入至四位有效数字。将 $\\Delta \\Psi$ 报告为正值。", "solution": "此问题被认定为有效。它在科学上基于植物水力学原理，问题阐述清晰，数据充分且一致，表述客观。解答过程如下。\n\n稳态质量通量 ($E$)、水力导度 ($K$) 和驱动水流的水势差 ($\\Delta \\Psi$) 之间的关系类似于欧姆定律：\n$$E = K \\Delta \\Psi$$\n通常使用水力阻力 $R$ 更为方便，其定义为导度的倒数：\n$$R = \\frac{1}{K}$$\n于是，流方程可写作：\n$$\\Delta \\Psi = E \\times R$$\n问题指出，幼苗的水力路径由根、茎、叶三个串联的部分组成。对于串联的组件，其总阻力是各部分阻力之和。因此，整株植物的总阻力 $R_{\\text{plant}}$ 为：\n$$R_{\\text{plant}} = R_{\\text{root}} + R_{\\text{stem}} + R_{\\text{leaf}}$$\n从土壤-根系界面到叶片质外体的整株植物总水势差 $\\Delta \\Psi$ 由总通量 $E$ 和整株植物总阻力 $R_{\\text{plant}}$ 的乘积给出：\n$$\\Delta \\Psi = E \\times R_{\\text{plant}} = E (R_{\\text{root}} + R_{\\text{stem}} + R_{\\text{leaf}})$$\n接下来，我们必须确定每个部分的阻力。问题说明根和叶部分不受栓塞影响，因此它们的导度分别等于其基线值 $K_{\\text{root},0}$ 和 $K_{\\text{leaf},0}$。它们的阻力为：\n$$R_{\\text{root}} = \\frac{1}{K_{\\text{root},0}}$$\n$$R_{\\text{leaf}} = \\frac{1}{K_{\\text{leaf},0}}$$\n对于茎部分，比例为 $f$ 的木质部导管发生栓塞。问题明确指出，有效的茎干导度 $K_{\\text{stem}}$ 与剩余功能性导管的比例 $(1-f)$ 成正比减小。因此，有效的茎干导度为：\n$$K_{\\text{stem}} = K_{\\text{stem},0} (1-f)$$\n因此，发生栓塞的茎部分的阻力为：\n$$R_{\\text{stem}} = \\frac{1}{K_{\\text{stem}}} = \\frac{1}{K_{\\text{stem},0}(1-f)}$$\n将各部分阻力的表达式代入整株植物总阻力的方程中，得到：\n$$R_{\\text{plant}} = \\frac{1}{K_{\\text{root},0}} + \\frac{1}{K_{\\text{stem},0}(1-f)} + \\frac{1}{K_{\\text{leaf},0}}$$\n这就得出了第一个要求的结果，即总水势差 $\\Delta \\Psi$ 的解析表达式：\n$$\\Delta \\Psi = E \\left( \\frac{1}{K_{\\text{root},0}} + \\frac{1}{K_{\\text{stem},0}(1-f)} + \\frac{1}{K_{\\text{leaf},0}} \\right)$$\n至此完成了任务的第一部分。\n\n对于第二部分，我们必须使用给定的数值计算 $\\Delta \\Psi$：\n- $E = 1.0 \\times 10^{-5}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}$\n- $K_{\\text{root},0} = 2.0 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$\n- $K_{\\text{stem},0} = 3.0 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$\n- $K_{\\text{leaf},0} = 1.2 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$\n- $f = 0.50$\n\n首先，我们计算每个部分的阻力，单位为 $\\mathrm{MPa}\\,\\mathrm{s}\\,\\mathrm{kg}^{-1}$：\n$$R_{\\text{root}} = \\frac{1}{K_{\\text{root},0}} = \\frac{1}{2.0 \\times 10^{-4}} = 5.0 \\times 10^{3}\\ \\mathrm{MPa}\\,\\mathrm{s}\\,\\mathrm{kg}^{-1}$$\n$$R_{\\text{leaf}} = \\frac{1}{K_{\\text{leaf},0}} = \\frac{1}{1.2 \\times 10^{-4}} = \\frac{10}{12} \\times 10^{4} = \\frac{5}{6} \\times 10^{4} \\approx 8.333 \\times 10^{3}\\ \\mathrm{MPa}\\,\\mathrm{s}\\,\\mathrm{kg}^{-1}$$\n茎的有效导度为：\n$$K_{\\text{stem}} = K_{\\text{stem},0}(1-f) = (3.0 \\times 10^{-4})(1 - 0.50) = (3.0 \\times 10^{-4})(0.50) = 1.5 \\times 10^{-4}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}\\,\\mathrm{MPa}^{-1}$$\n茎的阻力为：\n$$R_{\\text{stem}} = \\frac{1}{K_{\\text{stem}}} = \\frac{1}{1.5 \\times 10^{-4}} = \\frac{10}{15} \\times 10^{4} = \\frac{2}{3} \\times 10^{4} \\approx 6.667 \\times 10^{3}\\ \\mathrm{MPa}\\,\\mathrm{s}\\,\\mathrm{kg}^{-1}$$\n现在，我们将各部分阻力相加，求得整株植物的总阻力 $R_{\\text{plant}}$：\n$$R_{\\text{plant}} = R_{\\text{root}} + R_{\\text{stem}} + R_{\\text{leaf}} = \\left(\\frac{1}{2.0 \\times 10^{-4}} + \\frac{1}{1.5 \\times 10^{-4}} + \\frac{1}{1.2 \\times 10^{-4}}\\right)$$\n$$R_{\\text{plant}} = 10^{4} \\left( \\frac{1}{2.0} + \\frac{1}{1.5} + \\frac{1}{1.2} \\right) = 10^{4} \\left( \\frac{3}{6} + \\frac{4}{6} + \\frac{5}{6} \\right) = 10^{4} \\left( \\frac{3+4+5}{6} \\right) = 10^{4} \\left( \\frac{12}{6} \\right) = 2.0 \\times 10^{4}\\ \\mathrm{MPa}\\,\\mathrm{s}\\,\\mathrm{kg}^{-1}$$\n最后，我们计算水势差 $\\Delta \\Psi$：\n$$\\Delta \\Psi = E \\times R_{\\text{plant}} = (1.0 \\times 10^{-5}\\ \\mathrm{kg}\\,\\mathrm{s}^{-1}) \\times (2.0 \\times 10^{4}\\ \\mathrm{MPa}\\,\\mathrm{s}\\,\\mathrm{kg}^{-1})$$\n$$\\Delta \\Psi = 2.0 \\times 10^{-1}\\ \\mathrm{MPa} = 0.2\\ \\mathrm{MPa}$$\n题目要求答案四舍五入至四位有效数字。因此，$\\Delta \\Psi = 0.2000\\ \\mathrm{MPa}$。用标准科学记数法表示，即为 $2.000 \\times 10^{-1}\\ \\mathrm{MPa}$。", "answer": "$$\\boxed{2.000 \\times 10^{-1}}$$", "id": "2624050"}, {"introduction": "了解了栓塞在宏观层面的后果后，我们将深入探究其发生的微观物理机制。此练习将带你进入分隔木质部导管的纹孔膜层面，这里是防止气体扩散的关键“安全阀”。你将使用杨-拉普拉斯方程，计算在一个导管已经发生栓塞的情况下，相邻的充水导管能承受的最大张力（最负压力）是多少，一旦超过该阈值，空气就会被吸入，这个过程称为“空气播种”（air-seeding）。这个计算揭示了植物的解剖学特征（如纹孔膜的孔径大小）和汁液的物理性质如何共同决定其抗旱能力 [@problem_id:2624062]。", "problem": "在一株木本被子植物中，一个栓塞的（充满气体的）导管通过一个纹孔膜与一个相邻的充满水的导管水力相连，该纹孔膜的最大有效圆形孔隙半径为 $r_{\\max} = 40 \\times 10^{-9}\\,\\text{m}$。木质部汁液含有两亲性脂质，这些脂质将孔隙处的空气-水界面张力降低至 $\\gamma = 0.032\\,\\text{N}\\,\\text{m}^{-1}$，并且汁液以 $\\theta = 18^{\\circ}$ 的静态接触角（从液体一侧测量）润湿木质纤维素纹孔膜。假设栓塞导管中的气体处于大气压下（$P_{\\text{gas}} = 0\\,\\text{MPa}$ 表压），充满水的导管承受大小为 $T$ 的均匀木质部张力，因此其液体压力为 $P_{\\text{liq}} = -T$（相对于大气压），在孔隙尺度上重力可忽略不计，且纹孔孔隙处的弯月面是固定在孔隙边缘的球冠。\n\n从弯曲界面的毛细管压力关系（拉普拉斯定律）以及跨越圆形孔隙、接触角为 $\\theta$ 的球形弯月面的相应几何关系出发，推导空气穿过纹孔进入（空气栓塞）的条件，并用它来计算最大木质部张力大小 $T_{\\max}$，在该张力下栓塞仍被限制在栓塞导管内（即，正好在空气不会栓塞进入相邻导管的临界点）。将您的最终结果以 $\\text{MPa}$ 为单位表示为一个数字，并四舍五入到三位有效数字。", "solution": "在尝试任何解答之前，将根据所需标准对问题进行验证。\n\n### 步骤1：提取已知条件\n按原文提供以下数据和条件：\n- 一个栓塞导管（充满气体）与一个充满水的导管水力相连。\n- 连接是通过一个纹孔膜。\n- 最大有效圆形孔隙半径为 $r_{\\max} = 40 \\times 10^{-9}\\,\\text{m}$。\n- 空气-水界面张力为 $\\gamma = 0.032\\,\\text{N}\\,\\text{m}^{-1}$。\n- 静态接触角为 $\\theta = 18^{\\circ}$，从液体一侧测量。\n- 气体压力为 $P_{\\text{gas}} = 0\\,\\text{MPa}$ 表压。\n- 液体压力为 $P_{\\text{liq}} = -T$，其中 $T$ 是木质部张力的大小。\n- 重力可忽略不计。\n- 弯月面是固定在孔隙边缘的球冠。\n- 目标是计算最大木质部张力大小 $T_{\\max}$。\n\n### 步骤2：使用提取的已知条件进行验证\n对问题的有效性进行分析：\n- **科学依据**：该问题基于杨-拉普拉斯方程，这是控制毛细现象的流体力学基本原理。其在植物木质部空气栓塞中的应用是植物生理学中一个标准且成熟的模型。所提供的孔隙半径、表面张力（由于表面活性剂而从纯水中降低）和接触角的值对于此类生物系统在物理上是现实的。\n- **适定性**：该问题是适定的。它提供了所有必要参数（$r_{\\max}$、$\\gamma$、$\\theta$）和一个清晰的物理模型（圆形孔隙中的球形弯月面），以确定最大可持续张力 $T_{\\max}$ 的唯一值。\n- **客观性**：该问题以精确、定量的术语陈述，没有任何主观性或模糊性。\n\n该问题未违反任何无效性标准。这是一个应用于生物学背景的标准物理问题，内容自洽且一致。\n\n### 步骤3：结论与行动\n问题被判定为**有效**。将推导解答。\n\n控制跨越弯曲流体界面的压力差的基本原理是杨-拉普拉斯方程。对于具有单一曲率半径 $R$ 的球形界面，该方程为：\n$$ \\Delta P = P_c = \\frac{2\\gamma}{R} $$\n其中 $\\Delta P$ 是压力差，或毛细管压力 $P_c$，而 $\\gamma$ 是流体界面的表面张力。弯月面凹侧的压力更高。在此系统中，空气-水界面朝向充满气体的导管一侧是凹的，因此气体压力 $P_{\\text{gas}}$ 高于液体压力 $P_{\\text{liq}}$。因此我们可以写出：\n$$ P_{\\text{gas}} - P_{\\text{liq}} = \\frac{2\\gamma}{R} $$\n问题陈述弯月面是固定在半径为 $r_{\\max}$ 的圆形孔隙边缘的球冠。一个几何关系连接了球冠的曲率半径 $R$、孔隙半径 $r_{\\max}$ 和接触角 $\\theta$（从液相测量）。根据孔隙横截面的三角函数关系，这个关系式是：\n$$ r_{\\max} = R \\cos(\\theta) $$\n这使我们能够用已知的孔隙几何形状和接触角来表示曲率半径 $R$：\n$$ R = \\frac{r_{\\max}}{\\cos(\\theta)} $$\n将 $R$ 的这个表达式代入杨-拉普拉斯方程，得出纹孔孔隙处弯月面所能承受的压力差的具体条件：\n$$ P_{\\text{gas}} - P_{\\text{liq}} = \\frac{2\\gamma \\cos(\\theta)}{r_{\\max}} $$\n该方程描述了平衡状态。空气栓塞，即界面的灾难性失效，发生于界面两侧的压力差超过孔隙所能承受的最大毛细管压力时。等式右侧的表达式代表了在给定静态接触角下这个最大可持续压力差。因此，当等式左侧等于右侧时，就达到了空气栓塞的阈值。\n\n我们已知相对于大气压的压力（表压）：\n- 栓塞导管中的气体压力：$P_{\\text{gas}} = 0\\,\\text{MPa}$。\n- 功能导管中的液体压力：$P_{\\text{liq}} = -T$，其中 $T$ 是木质部张力的大小。要使导管处于张力下，$T$ 必须是一个正值，使得 $P_{\\text{liq}}$ 为负值。\n\n将这些压力定义代入阈值条件：\n$$ 0 - (-T) = \\frac{2\\gamma \\cos(\\theta)}{r_{\\max}} $$\n这可以简化为：\n$$ T = \\frac{2\\gamma \\cos(\\theta)}{r_{\\max}} $$\n这个 $T$ 值代表了在空气从栓塞导管栓塞进入功能导管之前，木质部所能承受的最大张力大小 $T_{\\max}$。任何大于此值的张力都将导致弯月面破裂。\n$$ T_{\\max} = \\frac{2\\gamma \\cos(\\theta)}{r_{\\max}} $$\n现在，我们将提供的数值代入此表达式。单位必须一致；我们将首先使用国际单位制（帕斯卡）进行计算。\n- $\\gamma = 0.032\\,\\text{N}\\,\\text{m}^{-1}$\n- $\\theta = 18^{\\circ}$\n- $r_{\\max} = 40 \\times 10^{-9}\\,\\text{m}$\n\n$$ T_{\\max} = \\frac{2 \\times (0.032\\,\\text{N}\\,\\text{m}^{-1}) \\times \\cos(18^{\\circ})}{40 \\times 10^{-9}\\,\\text{m}} $$\n单位 $\\text{N}\\,\\text{m}^{-1} / \\text{m}$ 得出 $\\text{N}\\,\\text{m}^{-2}$，即帕斯卡 ($\\text{Pa}$)。\n$$ T_{\\max} = \\frac{0.064 \\times \\cos(18^{\\circ})}{40 \\times 10^{-9}}\\,\\text{Pa} $$\n使用 $\\cos(18^{\\circ}) \\approx 0.9510565$ 的值：\n$$ T_{\\max} \\approx \\frac{0.064 \\times 0.9510565}{40 \\times 10^{-9}}\\,\\text{Pa} $$\n$$ T_{\\max} \\approx \\frac{0.0608676}{40 \\times 10^{-9}}\\,\\text{Pa} $$\n$$ T_{\\max} \\approx 1.52169 \\times 10^{6}\\,\\text{Pa} $$\n问题要求答案以兆帕斯卡（$\\text{MPa}$）为单位。由于 $1\\,\\text{MPa} = 10^6\\,\\text{Pa}$：\n$$ T_{\\max} \\approx 1.52169\\,\\text{MPa} $$\n按要求四舍五入到三位有效数字：\n$$ T_{\\max} \\approx 1.52\\,\\text{MPa} $$\n这就是栓塞仍被限制在导管内时，木质部张力的最大值。", "answer": "$$\n\\boxed{1.52}\n$$", "id": "2624062"}, {"introduction": "在本章的最后一个练习中，理论将与实验数据相结合，你将扮演数据科学家的角色。你将处理一组典型的实验数据——在不同木质部压力下测得的水导率损失百分比（PLC），并对其进行标准的S型曲线（logistic模型）拟合。这项动手实践将让你从原始数据中提取关键的生理性状参数 $P_{50}$（导致50%水导率损失的压力），并量化其估计的不确定性，这是现代定量生物学研究中的一项核心技能 [@problem_id:2624104]。", "problem": "您正在对植物木质部导水率对气穴化的脆弱性进行建模。导水率损失百分比（PLC）定义为导水率相对于其最大值的分数下降量，以百分比表示。木质部脆弱性的一种常见唯象表示是逻辑斯蒂曲线，该曲线将PLC与木质部压力（水势）联系起来。其理论基础是内聚力-张力框架，在该框架下，压力越负，气穴化概率越高。假设在每个测量压力下，PLC的测量误差是独立同分布的高斯误差。您需要根据提供的压力-PLC数据，通过最大似然估计来估算模型参数及其不确定性。\n\n基本原理：\n- 根据内聚力-张力理论，木质部汁液处于负压下，气穴化会降低导水率。脆弱性曲线在经验上能够很好地用关于压力的S型函数来描述。我们采用双参数逻辑斯蒂形式\n$$\n\\mathrm{PLC}(P;a,P_{50}) \\;=\\; \\frac{100}{1+\\exp\\!\\big(a\\,(P-P_{50})\\big)},\n$$\n其中，$P$ 是压力（水势），$a$ 是一个正斜率参数，$P_{50}$ 是使 $\\mathrm{PLC}=50$ 时的压力。压力 $P$ 和 $P_{50}$ 必须以兆帕（MPa）为单位表示，$a$ 必须以 $\\mathrm{MPa}^{-1}$ 为单位表示，$\\mathrm{PLC}$ 是范围在 $[0,100]$ 内的百分比。\n- 测量模型：对于观测数据 $\\{(P_i,y_i)\\}_{i=1}^n$，假设 $y_i = \\mathrm{PLC}(P_i;a,P_{50}) + \\varepsilon_i$，其中 $\\varepsilon_i \\overset{\\text{i.i.d.}}{\\sim} \\mathcal{N}(0,\\sigma^2)$，$\\sigma$ 是PLC百分点的未知标准差。\n\n估计任务：\n- 使用最大似然法估计 $\\hat{a}$、$\\widehat{P}_{50}$ 和 $\\hat{\\sigma}$。在高斯误差模型下，$a$ 和 $P_{50}$ 的最大似然估计与残差平方和的非线性最小二乘法最小化结果一致，而 $\\sigma^2$ 的最大似然估计为 $\\widehat{\\sigma}^2 = \\mathrm{SSR}/n$，其中 $\\mathrm{SSR}=\\sum_{i=1}^n \\big(y_i-\\mathrm{PLC}(P_i;\\hat{a},\\widehat{P}_{50})\\big)^2$。\n- 使用高斯模型的观测Fisher信息来估计参数不确定性（标准误），由此可得协方差矩阵\n$$\n\\widehat{\\mathrm{Cov}}(\\hat{\\theta}) \\;=\\; \\widehat{\\sigma}^2 \\, \\big(J^\\top J\\big)^{-1},\n$$\n其中 $\\theta=(a,P_{50})^\\top$，$J$ 是一个 $n\\times 2$ 的雅可比矩阵，其元素为 $J_{i,1}=\\frac{\\partial \\mathrm{PLC}(P_i;a,P_{50})}{\\partial a}$ 和 $J_{i,2}=\\frac{\\partial \\mathrm{PLC}(P_i;a,P_{50})}{\\partial P_{50}}$，在 $(\\hat{a},\\widehat{P}_{50})$ 处求值。将 $\\widehat{\\mathrm{Cov}}(\\hat{\\theta})$ 对角线元素的平方根作为标准误进行报告。\n\n构建 $J$ 所需的解析导数：\n- 令 $E_i = \\exp\\!\\big(a\\,(P_i-P_{50})\\big)$ 且 $D_i = \\big(1+E_i\\big)^2$。则\n$$\n\\frac{\\partial \\mathrm{PLC}(P_i;a,P_{50})}{\\partial a} \\;=\\; -\\,100 \\,\\frac{(P_i-P_{50})\\,E_i}{D_i}, \\qquad\n\\frac{\\partial \\mathrm{PLC}(P_i;a,P_{50})}{\\partial P_{50}} \\;=\\; 100 \\,\\frac{a\\,E_i}{D_i} \\, .\n$$\n\n数据与单位：\n- 使用以下数据集测试套件。在所有情况下，$P$ 和 $P_{50}$ 的单位为 $\\mathrm{MPa}$，$a$ 的单位为 $\\mathrm{MPa}^{-1}$。观测到的 $\\mathrm{PLC}$ 值为百分点。每个数据集都是一个由数据对 $\\big(P_i,y_i\\big)$ 组成的列表。\n\n- 测试用例1（典型脆弱性）：\n  - $P = [-0.5,\\,-1.0,\\,-1.5,\\,-2.0,\\,-2.5,\\,-3.0,\\,-3.5]$\n  - $\\mathrm{PLC}_{\\text{obs}} = [8.5,\\,17.1,\\,30.2,\\,50.7,\\,69.4,\\,82.3,\\,91.2]$\n\n- 测试用例2（缓坡）：\n  - $P = [-0.2,\\,-1.0,\\,-2.0,\\,-3.0,\\,-4.0,\\,-5.0,\\,-6.0]$\n  - $\\mathrm{PLC}_{\\text{obs}} = [16.1,\\,22.6,\\,35.7,\\,49.2,\\,65.0,\\,77.6,\\,86.4]$\n\n- 测试用例3（$P_{50}$附近陡坡）：\n  - $P = [-0.5,\\,-1.0,\\,-1.2,\\,-1.5,\\,-1.8,\\,-2.0,\\,-2.5]$\n  - $\\mathrm{PLC}_{\\text{obs}} = [2.2,\\,11.4,\\,24.6,\\,49.1,\\,77.3,\\,88.6,\\,97.8]$\n\n计算与输出要求：\n- 根据上述规定，对每个数据集在高斯误差模型下实现最大似然估计。使用一个数值稳定的非线性最小二乘法程序，并设置合理的边界以强制 $a>0$。\n- 对每个测试用例，计算并报告列表 $[\\hat{a},\\,\\widehat{P}_{50},\\,\\mathrm{SE}(\\hat{a}),\\,\\mathrm{SE}(\\widehat{P}_{50}),\\,\\hat{\\sigma}]$，其中 $\\mathrm{SE}(\\cdot)$ 是从 $\\widehat{\\mathrm{Cov}}(\\hat{\\theta})$ 导出的标准误，$\\hat{\\sigma}$ 是PLC百分点的最大似然估计值。\n- 将所有报告的浮点数四舍五入到3位小数。将 $a$ 的单位解释为 $\\mathrm{MPa}^{-1}$，$P_{50}$ 的单位解释为 $\\mathrm{MPa}$，$\\hat{\\sigma}$ 的单位解释为PLC百分点。\n- 您的程序应生成单行输出，其中包含所有测试用例的结果，格式为逗号分隔的Python风格列表的列表，例如：$[[x_{11},x_{12},x_{13},x_{14},x_{15}],[x_{21},x_{22},x_{23},x_{24},x_{25}],[x_{31},x_{32},x_{33},x_{34},x_{35}]]$，其中每个 $x_{ij}$ 都是如上所述四舍五入到3位小数的浮点数。", "solution": "该问题陈述已经过评估并被确定为有效。它具有科学依据，问题定义良好、客观，并为获得唯一解提供了所有必要信息。该任务是统计建模和数据分析中的一个标准问题，具体而言是非线性回归，应用于植物生理学中一个公认的唯象模型。\n\n目标是为木质部对气穴化引发的导水失效的脆弱性，估计其逻辑斯蒂模型的参数。导水率损失百分比（$\\mathrm{PLC}$）被建模为木质部压力 $P$（单位：$\\mathrm{MPa}$）的函数，使用以下方程：\n$$\n\\mathrm{PLC}(P; a, P_{50}) = \\frac{100}{1 + \\exp\\big(a(P - P_{50})\\big)}\n$$\n此处，$a$ 是一个斜率参数（单位：$\\mathrm{MPa}^{-1}$），量化了对压力变化的脆弱性；$P_{50}$ 是导水率损失$50\\%$时的压力。我们获得了观测数据集 $\\{(P_i, y_i)\\}_{i=1}^n$，其中 $y_i$ 是测得的$\\mathrm{PLC}$值。\n\n该统计模型假设观测值 $y_i$ 是真实模型值受到独立同分布高斯噪声干扰的结果：\n$$\ny_i = \\mathrm{PLC}(P_i; a, P_{50}) + \\varepsilon_i, \\quad \\text{其中} \\quad \\varepsilon_i \\overset{\\text{i.i.d.}}{\\sim} \\mathcal{N}(0, \\sigma^2)\n$$\n在此假设下，参数 $(a, P_{50})$ 的最大似然估计（MLE）等价于最小化残差平方和（SSR）：\n$$\n\\mathrm{SSR}(a, P_{50}) = \\sum_{i=1}^n \\big(y_i - \\mathrm{PLC}(P_i; a, P_{50})\\big)^2\n$$\n这是一个非线性最小二乘（NLLS）问题。误差方差 $\\sigma^2$ 的MLE由 $\\hat{\\sigma}^2 = \\mathrm{SSR}(\\hat{a}, \\widehat{P}_{50})/n$ 给出，其中 $(\\hat{a}, \\widehat{P}_{50})$ 是NLLS估计值，$n$ 是数据点的数量。\n\n参数估计 $(\\hat{a}, \\widehat{P}_{50})$ 的不确定性由其标准误来表征。标准误源自估计的协方差矩阵，根据最大似然理论，该矩阵是观测Fisher信息矩阵的逆矩阵。对于指定的高斯模型，这可以简化为：\n$$\n\\widehat{\\mathrm{Cov}}(\\hat{\\theta}) = \\hat{\\sigma}^2 (J^\\top J)^{-1}\n$$\n其中 $\\hat{\\theta} = (\\hat{a}, \\widehat{P}_{50})^\\top$，$J$ 是模型函数关于参数的 $n \\times 2$ 雅可比矩阵，在MLE处求值。雅可比矩阵的元素由以下偏导数给出：\n$$\nJ_{i,1} = \\frac{\\partial \\mathrm{PLC}(P_i; a, P_{50})}{\\partial a} \\quad \\text{和} \\quad J_{i,2} = \\frac{\\partial \\mathrm{PLC}(P_i; a, P_{50})}{\\partial P_{50}}\n$$\n问题提供了这些导数的解析形式，这对于稳定和准确地计算雅可比矩阵至关重要：\n$$\n\\frac{\\partial \\mathrm{PLC}}{\\partial a} = -100 \\frac{(P_i-P_{50})E_i}{(1+E_i)^2}, \\quad \\frac{\\partial \\mathrm{PLC}}{\\partial P_{50}} = 100 \\frac{a E_i}{(1+E_i)^2}\n$$\n其中 $E_i = \\exp(a(P_i - P_{50}))$。标准误 $\\mathrm{SE}(\\hat{a})$ 和 $\\mathrm{SE}(\\widehat{P}_{50})$ 是协方差矩阵 $\\widehat{\\mathrm{Cov}}(\\hat{\\theta})$ 对角线元素的平方根。\n\n该解法使用Python中的 `scipy.optimize.least_squares` 函数实现，该函数专为处理此类NLLS问题而设计。对每个数据集的实现过程如下：\n1.  **生成初始猜测值**：一个稳健的参数初始猜测值对于NLLS算法的收敛至关重要。我们通过在数据集中找到使观测$\\mathrm{PLC}$值 $y_i$ 最接近50的压力 $P_i$ 来估计初始$P_{50}$。然后，利用在 $P=P_{50}$ 处求值的关系式 $a \\approx -(\\Delta y / \\Delta P) / 25$，根据该点周围数据的局部斜率来估计初始斜率参数$a$。\n2.  **非线性最小二乘优化**：调用 `least_squares` 来寻找使残差平方和最小化的参数值 $(\\hat{a}, \\widehat{P}_{50})$。为该函数提供了解析雅可比矩阵以提高性能和准确性。根据模型的物理解释，强制执行了 $a>0$ 的下界。\n3.  **$\\sigma$的估计**：获得最优参数后，计算残差平方和 $\\mathrm{SSR}$。然后将 $\\sigma$ 的MLE计算为 $\\hat{\\sigma} = \\sqrt{\\mathrm{SSR}/n}$。\n4.  **不确定性量化**：`least_squares` 程序会提供解处的雅可比矩阵 $J$。协方差矩阵使用公式 $\\widehat{\\mathrm{Cov}}(\\hat{\\theta}) = \\hat{\\sigma}^2 (J^\\top J)^{-1}$ 计算。然后，标准误通过提取该矩阵对角线元素的平方根得到。\n5.  **结果聚合**：计算出的估计值 $[\\hat{a}, \\widehat{P}_{50}, \\mathrm{SE}(\\hat{a}), \\mathrm{SE}(\\widehat{P}_{50}), \\hat{\\sigma}]$ 会被四舍五入到三位小数，并收集起来用于最终输出。\n\n此程序被系统地应用于所有三个提供的测试用例，从而得出所需的参数估计及其不确定性。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import least_squares\n\ndef solve():\n    \"\"\"\n    Performs Maximum Likelihood Estimation for xylem vulnerability curve parameters.\n    The problem is solved by non-linear least squares, as it is equivalent to MLE\n    for a model with additive Gaussian errors.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"name\": \"Test case 1 (typical vulnerability)\",\n            \"P\": np.array([-0.5, -1.0, -1.5, -2.0, -2.5, -3.0, -3.5]),\n            \"PLC_obs\": np.array([8.5, 17.1, 30.2, 50.7, 69.4, 82.3, 91.2])\n        },\n        {\n            \"name\": \"Test case 2 (shallow slope)\",\n            \"P\": np.array([-0.2, -1.0, -2.0, -3.0, -4.0, -5.0, -6.0]),\n            \"PLC_obs\": np.array([16.1, 22.6, 35.7, 49.2, 65.0, 77.6, 86.4])\n        },\n        {\n            \"name\": \"Test case 3 (steep slope near P50)\",\n            \"P\": np.array([-0.5, -1.0, -1.2, -1.5, -1.8, -2.0, -2.5]),\n            \"PLC_obs\": np.array([2.2, 11.4, 24.6, 49.1, 77.3, 88.6, 97.8])\n        }\n    ]\n\n    all_results = []\n\n    # Model function for Percent Loss of Conductivity (PLC)\n    def plc_model(params, P):\n        a, P50 = params\n        return 100.0 / (1.0 + np.exp(a * (P - P50)))\n\n    # Function to compute the vector of residuals\n    def residuals(params, P, y):\n        return plc_model(params, P) - y\n\n    # Function to compute the Jacobian matrix of the model function\n    def jacobian(params, P, y):\n        a, P50 = params\n        E = np.exp(a * (P - P50))\n        D = (1.0 + E)**2\n        \n        # Partial derivative with respect to 'a'\n        jac_a = -100.0 * (P - P50) * E / D\n        # Partial derivative with respect to 'P50'\n        jac_p50 = 100.0 * a * E / D\n        \n        # The jacobian of the residuals is the same as for the model\n        return np.array([jac_a, jac_p50]).T\n\n    for case in test_cases:\n        P_obs = case[\"P\"]\n        y_obs = case[\"PLC_obs\"]\n        n = len(P_obs)\n\n        # ---- Generate robust initial guesses for parameters ----\n        # Initial guess for P50: pressure where observed PLC is closest to 50\n        p50_idx = np.abs(y_obs - 50.0).argmin()\n        p50_0 = P_obs[p50_idx]\n        \n        # Initial guess for 'a' from the slope around P50\n        # a is related to the derivative at P50: d(PLC)/dP = -25*a\n        a_0 = 2.0  # Default reasonable guess\n        if 0 < p50_idx < n - 1:\n            # Use centered difference for slope\n            dy_dp = (y_obs[p50_idx + 1] - y_obs[p50_idx - 1]) / (P_obs[p50_idx + 1] - P_obs[p50_idx - 1])\n            # Ensure slope is negative, as expected\n            if dy_dp < 0:\n                a_0 = -dy_dp / 25.0\n        \n        if a_0 <= 0: # Fallback if calculation fails or gives non-positive result\n            a_0 = 2.0\n\n        initial_params = [a_0, p50_0]\n\n        # Define bounds for parameters: a > 0\n        bounds = ([1e-9, -np.inf], [np.inf, np.inf])\n\n        # ---- Perform non-linear least squares optimization ----\n        fit_result = least_squares(\n            residuals,\n            initial_params,\n            jac=jacobian,\n            bounds=bounds,\n            args=(P_obs, y_obs),\n            method='trf'\n        )\n        \n        a_hat, p50_hat = fit_result.x\n\n        # ---- Calculate parameter uncertainties ----\n        # Sum of Squared Residuals (SSR)\n        ssr = np.sum(fit_result.fun**2)\n        \n        # Maximum Likelihood Estimate for sigma\n        sigma_hat = np.sqrt(ssr / n)\n        \n        # Jacobian at the solution\n        J = fit_result.jac\n        \n        # Covariance matrix from observed Fisher Information\n        # Cov = sigma_hat^2 * (J^T J)^-1\n        try:\n            cov_matrix = (sigma_hat**2) * np.linalg.inv(J.T @ J)\n            se_a = np.sqrt(cov_matrix[0, 0])\n            se_p50 = np.sqrt(cov_matrix[1, 1])\n        except np.linalg.LinAlgError:\n            # Handle cases where Jacobian is singular\n            se_a, se_p50 = np.nan, np.nan\n        \n        # ---- Collect and format results ----\n        case_results = [a_hat, p50_hat, se_a, se_p50, sigma_hat]\n        rounded_results = [round(v, 3) for v in case_results]\n        all_results.append(rounded_results)\n\n    # Final print statement in the exact required format.\n    print(f\"{all_results}\")\n\nsolve()\n```", "id": "2624104"}]}