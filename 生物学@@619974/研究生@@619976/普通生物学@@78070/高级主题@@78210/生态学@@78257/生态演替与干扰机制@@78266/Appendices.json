{"hands_on_practices": [{"introduction": "生态恢复力是衡量生态系统在受到干扰后恢复其原始状态能力的关键概念。为了将这一概念从定性描述转变为可量化的指标，我们可以使用数学模型。本练习提供了一个量化生态系统恢复速率的基础模型，通过从一个简单的一阶线性微分方程推导恢复半衰期，你将深入理解恢复力作为一个可测量的属性，并学会如何运用它来简洁地概括干扰后的动态过程。[@problem_id:2794126] 这是将演替生态学从定性描述推向定量预测的第一步。", "problem": "一个温带草原的干扰机制中包含周期性的斑块级火灾。火灾发生后，群落的地上生物量会偏离其干扰前的平衡状态，偏离量为 $D(t)$（以 $\\mathrm{g}\\,\\mathrm{m}^{-2}$ 为单位的绝对偏差计量），其中 $t$ 是以年为单位的时间。生态监测表明，恢复过程可以很好地用一阶线性弛豫来近似，即偏差的瞬时变化率与当前偏差成正比：$\\frac{dD}{dt}=-rD$，其中 $r$ 是一个恒定的恢复速率。假设长期调查估计该草原的 $r=0.15\\,\\mathrm{yr}^{-1}$，并且在 $t=0$ 时，偏差为 $D(0)=D_{0}$。\n\n将偏差半衰期 $t_{1/2}$ 定义为偏差从 $D_{0}$ 减少到 $D_{0}/2$ 所需的时间。仅从微分方程 $\\frac{dD}{dt}=-rD$ 和初始条件 $D(0)=D_{0}$ 出发，推导出用 $r$ 表示 $t_{1/2}$ 的表达式，然后计算当 $r=0.15\\,\\mathrm{yr}^{-1}$ 时的数值。将您的答案四舍五入到三位有效数字，并以年为单位表示。\n\n用一两句话陈述在此背景下半衰期 $t_{1/2}$ 的生态学意义（解释部分无需计算，但仍需提供最终的数值答案）。", "solution": "问题陈述经评估确定为有效。其科学基础是既有的关于干扰和恢复的生态学原理，并被构建为一个使用标准一阶线性微分方程的适定初值问题。其中的变量和参数定义清晰，前提条件一致且充分，足以推导出唯一解。因此，我们可以进行正式的推导和计算。\n\n该问题描述了群落生物量在干扰后的恢复过程。偏离平衡状态的量 $D(t)$ 遵循以下微分方程：\n$$\n\\frac{dD}{dt} = -rD\n$$\n这是一个一阶、线性、齐次常系数常微分方程。初始条件为 $D(t=0) = D_0$。\n\n为了求解该方程，我们使用分离变量法。我们重新整理方程，将包含 $D$ 和 $t$ 的项分别置于等式两侧：\n$$\n\\frac{1}{D} dD = -r \\, dt\n$$\n接下来，我们对两边进行积分。积分的范围是从时间 $t=0$ 时的初始状态（此时偏差为 $D_0$）到任意时间 $t$（此时偏差为 $D(t)$）。\n$$\n\\int_{D_0}^{D(t)} \\frac{1}{D'} dD' = \\int_{0}^{t} -r \\, dt'\n$$\n等式左边积分为自然对数，右边是一个常数的简单积分。由于偏差 $D(t)$ 必须为正值（对于 $t < \\infty$，$D(t)>0$），我们可以省略对数中的绝对值符号。\n$$\n[\\ln(D')]_{D_0}^{D(t)} = [-rt']_{0}^{t}\n$$\n$$\n\\ln(D(t)) - \\ln(D_0) = -r(t) - (-r(0))\n$$\n$$\n\\ln\\left(\\frac{D(t)}{D_0}\\right) = -rt\n$$\n为了求出 $D(t)$ 的显式函数，我们对两边取指数：\n$$\n\\frac{D(t)}{D_0} = \\exp(-rt)\n$$\n$$\nD(t) = D_0 \\exp(-rt)\n$$\n这个解描述了生物量偏差随时间从其初始值 $D_0$ 开始的指数衰减过程。\n\n问题将偏差半衰期 $t_{1/2}$ 定义为偏差减少到其初始值一半所需的时间。在数学上，这意味着找到时间 $t = t_{1/2}$ 使得 $D(t_{1/2}) = \\frac{D_0}{2}$。我们将此条件代入我们求得的 $D(t)$ 解中：\n$$\n\\frac{D_0}{2} = D_0 \\exp(-r t_{1/2})\n$$\n对于一个非平凡的干扰（$D_0 \\ne 0$），我们可以将等式两边同除以 $D_0$：\n$$\n\\frac{1}{2} = \\exp(-r t_{1/2})\n$$\n为了解出 $t_{1/2}$，我们对等式两边取自然对数：\n$$\n\\ln\\left(\\frac{1}{2}\\right) = \\ln\\left(\\exp(-r t_{1/2})\\right)\n$$\n利用对数的性质 $\\ln(1/x) = -\\ln(x)$ 和 $\\ln(\\exp(y)) = y$，我们得到：\n$$\n-\\ln(2) = -r t_{1/2}\n$$\n求解 $t_{1/2}$，我们得到用恢复速率 $r$ 表示的通用表达式：\n$$\nt_{1/2} = \\frac{\\ln(2)}{r}\n$$\n现在，我们已知恢复速率的数值为 $r = 0.15\\,\\mathrm{yr}^{-1}$。我们将其代入我们推导出的半衰期公式中：\n$$\nt_{1/2} = \\frac{\\ln(2)}{0.15}\n$$\n使用自然对数 $\\ln(2)$ 的近似值 $\\ln(2) \\approx 0.693147...$，我们可以计算出 $t_{1/2}$ 的数值：\n$$\nt_{1/2} \\approx \\frac{0.693147}{0.15}\\,\\mathrm{yr} \\approx 4.62098\\,\\mathrm{yr}\n$$\n问题要求答案保留三位有效数字。因此，我们有：\n$$\nt_{1/2} \\approx 4.62\\,\\mathrm{yr}\n$$\n在此背景下，半衰期 $t_{1/2}$ 的生态学意义是，它是草原生态系统在火灾后恢复到其干扰前平衡生物量状态一半所需的特征时间。该值可作为群落恢复力的一个量化指标，其中较短的半衰期意味着更快的恢复速率。", "answer": "$$\n\\boxed{4.62}\n$$", "id": "2794126"}, {"introduction": "生态演替的过程通常由物种间的相互作用驱动，其中早期物种改变环境，为后期物种的定居铺平道路，这一过程被称为“促进作用” (facilitation)。本练习深入探讨了促进作用的核心机制，通过一个双物种竞争模型，模拟了先锋物种如何通过改善非生物胁迫来促进竞争者的入侵。[@problem_id:2794094] 你将通过推导竞争者成功入侵所需的临界条件，学习如何将经典的演替过程数学化，并理解正相互作用如何决定群落变化的轨迹。", "problem": "考虑一个用于描述在具有非生物胁迫的恶劣基质上原生演替的连续时间双物种竞争模型。设胁迫水平由 $S$ 表示。最初，在没有植被时，胁迫为 $S_{0}$。一个耐胁迫的先锋物种 $P$ 在局部范围内按其生物量的比例改善胁迫：在先锋物种占优势的斑块中，有效胁迫为 $S = S_{0} - \\sigma P$，其中 $\\sigma > 0$ 是先锋物种的促进（改善）系数。一个演替后期的竞争者 $C$ 在定居阶段不耐胁迫，但一旦占优势，便会维持一个更低且近似稳定的胁迫水平 $S_{1}$，其中 $0 < S_{1} < S_{0}$（例如，通过持续的冠层郁闭和水分保持）。假设 $S_{1}$ 是竞争者占优势的群落的一个恒定属性。\n\n种群动态遵循具有依赖胁迫的内禀增长的 Lotka–Volterra 竞争模型：\n- 先锋物种：$\\dfrac{dP}{dt} = P\\left[r_{p} - \\eta S - b_{p} P - \\theta C\\right]$,\n- 竞争者：$\\dfrac{dC}{dt} = C\\left[r_{c} - S - b_{c} C - \\kappa P\\right]$,\n\n其中 $r_{p} > 0$ 和 $r_{c} > 0$ 是无胁迫时的内禀增长参数，$\\eta \\in (0,1)$ 量化了先锋物种的胁迫敏感性（小于竞争者，反映了更高的胁迫耐受性），$b_{p} > 0$ 和 $b_{c} > 0$ 是种内自我限制系数，$\\theta > 0$ 和 $\\kappa > 0$ 是种间竞争系数（分别指 $C$ 对 $P$ 的影响，以及 $P$ 对 $C$ 的影响）。在先锋物种占优势的斑块中，设 $S = S_{0} - \\sigma P$；在竞争者占优势的斑块中，设 $S = S_{1}$。\n\n假设以下基于经验的条件，这些条件描述了一个由促进作用驱动的演替序列：\n1. 先锋物种在裸露基质上的定居是可行的：$r_{p} - \\eta S_{0} > 0$。\n2. 竞争者无法在裸露基质上定居：$r_{c} - S_{0} < 0$。\n3. 竞争者可以在其自我维持的环境中持久存在：$r_{c} - S_{1} > 0$。\n4. 先锋物种在低胁迫下的竞争劣势：当 $C$ 在 $S_{1}$ 胁迫下处于其单物种平衡点时，先锋物种无法入侵，即 $r_{p} - \\eta S_{1} - \\theta \\dfrac{r_{c} - S_{1}}{b_{c}} < 0$。\n5. 先锋物种在自身改善作用下存在可行的平衡点：$b_{p} > \\eta \\sigma$。\n\n从这些原则出发，解析地推导使竞争者 $C$ 能够入侵先锋物种占优势的环境中仅有先锋物种的平衡点的最小促进强度 $\\sigma^{\\ast}$。在假设3-4下，这种入侵意味着 $P$ 最终将被 $C$ 替代。\n\n你的最终答案必须是仅用模型参数 $\\{r_{p}, r_{c}, \\eta, S_{0}, b_{p}, \\kappa\\}$ 表示的 $\\sigma^{\\ast}$ 的闭式表达式。不要进行近似或取整。将最终答案表示为不带单位的单个代数表达式。", "solution": "该问题要求推导最小促进强度，记为 $\\sigma^{\\ast}$，该强度允许竞争物种 $C$ 入侵由先锋物种 $P$ 主导的环境。此分析将在所提供的连续时间竞争模型的框架内进行。\n\n在先锋物种主导的斑块中，胁迫 $S$ 根据 $S = S_{0} - \\sigma P$ 得到改善。通过将此表达式代入一般种群方程，可以得到该系统的动态。\n\n对于先锋物种 $P$：\n$$ \\dfrac{dP}{dt} = P\\left[r_{p} - \\eta (S_{0} - \\sigma P) - b_{p} P - \\theta C\\right] $$\n$$ \\dfrac{dP}{dt} = P\\left[(r_{p} - \\eta S_{0}) - (b_{p} - \\eta\\sigma)P - \\theta C\\right] $$\n\n对于竞争物种 $C$：\n$$ \\dfrac{dC}{dt} = C\\left[r_{c} - (S_{0} - \\sigma P) - b_{c} C - \\kappa P\\right] $$\n$$ \\dfrac{dC}{dt} = C\\left[(r_{c} - S_{0}) + (\\sigma - \\kappa)P - b_{c} C\\right] $$\n\n第一步是确定在没有竞争者的情况下先锋物种的平衡状态。这就是仅有先锋物种的平衡点，我们通过设置 $C=0$ 和 $\\frac{dP}{dt}=0$ 来找到它。\n$$ \\dfrac{dP}{dt} = P\\left[(r_{p} - \\eta S_{0}) - (b_{p} - \\eta\\sigma)P\\right] = 0 $$\n该方程对 $P$ 有两个解：平凡平衡点 $P=0$ 和一个由下式给出的非平凡平衡点 $P^{\\ast}$：\n$$ (r_{p} - \\eta S_{0}) - (b_{p} - \\eta\\sigma)P^{\\ast} = 0 $$\n解出 $P^{\\ast}$ 得：\n$$ P^{\\ast} = \\dfrac{r_{p} - \\eta S_{0}}{b_{p} - \\eta\\sigma} $$\n为使该平衡点具有生物学意义（即，一个稳定且为正的生物量），必须满足两个条件。首先，分子必须为正，$r_{p} - \\eta S_{0} > 0$，这由假设1保证。其次，分母必须为正，$b_{p} - \\eta\\sigma > 0$，这由假设5保证。因此，$P^{\\ast}$ 代表一个有效且稳定的仅有先锋物种的平衡点。\n\n下一步是分析竞争物种 $C$ 能够入侵这个先锋物种主导的系统的条件。当 $C$ 的种群数量无穷小（$C \\approx 0$）且先锋物种处于其平衡密度（$P = P^{\\ast}$）时，如果 $C$ 的初始人均增长率为正，则入侵是可能的。$C$ 的人均增长率为 $\\frac{1}{C}\\frac{dC}{dt}$。\n$$ \\left. \\dfrac{1}{C}\\dfrac{dC}{dt} \\right|_{C \\to 0} = (r_{c} - S_{0}) + (\\sigma - \\kappa)P $$\n入侵条件是当在 $P = P^{\\ast}$ 处取值时，该增长率为正：\n$$ (r_{c} - S_{0}) + (\\sigma - \\kappa)P^{\\ast} > 0 $$\n现在，我们将 $P^{\\ast}$ 的表达式代入这个不等式：\n$$ (r_{c} - S_{0}) + (\\sigma - \\kappa)\\left(\\dfrac{r_{p} - \\eta S_{0}}{b_{p} - \\eta\\sigma}\\right) > 0 $$\n为了解出 $\\sigma$，我们重新整理这个不等式。首先，将第一项移到另一边：\n$$ (\\sigma - \\kappa)\\left(\\dfrac{r_{p} - \\eta S_{0}}{b_{p} - \\eta\\sigma}\\right) > -(r_{c} - S_{0}) $$\n$$ (\\sigma - \\kappa)\\left(\\dfrac{r_{p} - \\eta S_{0}}{b_{p} - \\eta\\sigma}\\right) > S_{0} - r_{c} $$\n由于根据假设5有 $b_{p} - \\eta\\sigma > 0$，我们可以用它乘以不等式两边而不改变不等式的方向：\n$$ (\\sigma - \\kappa)(r_{p} - \\eta S_{0}) > (S_{0} - r_{c})(b_{p} - \\eta\\sigma) $$\n展开不等式两边：\n$$ \\sigma(r_{p} - \\eta S_{0}) - \\kappa(r_{p} - \\eta S_{0}) > b_{p}(S_{0} - r_{c}) - \\eta\\sigma(S_{0} - r_{c}) $$\n现在，我们将所有含 $\\sigma$ 的项收集到左边：\n$$ \\sigma(r_{p} - \\eta S_{0}) + \\eta\\sigma(S_{0} - r_{c}) > b_{p}(S_{0} - r_{c}) + \\kappa(r_{p} - \\eta S_{0}) $$\n提出公因子 $\\sigma$：\n$$ \\sigma \\left[ (r_{p} - \\eta S_{0}) + \\eta(S_{0} - r_{c}) \\right] > b_{p}(S_{0} - r_{c}) + \\kappa(r_{p} - \\eta S_{0}) $$\n简化左边括号中的项：\n$$ (r_{p} - \\eta S_{0}) + \\eta S_{0} - \\eta r_{c} = r_{p} - \\eta r_{c} $$\n不等式变为：\n$$ \\sigma(r_{p} - \\eta r_{c}) > b_{p}(S_{0} - r_{c}) + \\kappa(r_{p} - \\eta S_{0}) $$\n为了分离出 $\\sigma$，我们必须除以 $(r_{p} - \\eta r_{c})$。这一项的符号决定了不等式的方向是否保持不变。为了让促进机制能够使入侵发生，更大的 $\\sigma$ 值应该使入侵更有可能。这要求 $\\sigma$ 的系数 $(r_{p} - \\eta r_{c})$ 为正。如果它为负，更大的 $\\sigma$ 将阻碍入侵，这与促进作用的前提相矛盾。因此，我们假设 $r_{p} - \\eta r_{c} > 0$ 并继续。用这个正项相除，我们得到：\n$$ \\sigma > \\dfrac{b_{p}(S_{0} - r_{c}) + \\kappa(r_{p} - \\eta S_{0})}{r_{p} - \\eta r_{c}} $$\n这个不等式定义了竞争者能够入侵时对促进强度 $\\sigma$ 的条件。最小促进强度 $\\sigma^{\\ast}$ 是该不等式变为等式时的阈值。因此，$\\sigma^{\\ast}$ 的表达式是：\n$$ \\sigma^{\\ast} = \\dfrac{\\kappa(r_{p} - \\eta S_{0}) + b_{p}(S_{0} - r_{c})}{r_{p} - \\eta r_{c}} $$\n这个 $\\sigma^{\\ast}$ 的表达式完全由指定的参数 $\\{r_{p}, r_{c}, \\eta, S_{0}, b_{p}, \\kappa\\}$ 表示，符合要求。\n分子为正，因为假设1给出 $r_{p} - \\eta S_{0} > 0$，假设2给出 $S_{0} - r_{c} > 0$，且参数 $\\kappa, b_p$ 均为正。分母 $r_{p} - \\eta r_{c}$ 被假设为正，以便存在一个有意义的促进阈值。", "answer": "$$\n\\boxed{\\dfrac{\\kappa(r_{p} - \\eta S_{0}) + b_{p}(S_{0} - r_{c})}{r_{p} - \\eta r_{c}}}\n$$", "id": "2794094"}, {"introduction": "真实的生态系统包含了大量物种在周期性干扰下的复杂相互作用。最后的这个实践项目将挑战你综合运用所学知识，基于经典的 Lotka-Volterra 竞争模型，构建一个多物种群落的动态模拟。[@problem_id:2794128] 通过编写代码实现该模型，整合干扰事件，并将你的模拟预测结果与假设的观测数据进行比较，你将掌握计算生态学中的核心技能，并深入洞悉物种间的竞争关系和干扰机制如何共同塑造长期的演替格局。", "problem": "考虑一组在均质生境中经历演替的物种，其种群动态由两两间的资源竞争决定。假设存在以下基本建模假设：(i) 在没有其他物种的情况下，每个物种的单位种群增长遵循逻辑斯谛增长；(ii) 种间竞争是可加的，并通过从实验中估计的参数化两两竞争系数来表征；(iii) 外部干扰在指定时间发生，并根据物种特异的存活分数瞬间降低种群密度；(iv) 不存在迁入。假设密度为 $N_i(t)$ 的物种 $i$ 的连续时间动态具有 Lotka–Volterra 竞争形式，该形式从逻辑斯谛增长和两两可加效应推导而来：\n$$\n\\frac{dN_i}{dt} \\;=\\; r_i \\, N_i \\,\\Bigg(1 - \\frac{\\sum_{j=1}^{S} \\alpha_{ij} \\, N_j}{K_i}\\Bigg),\n$$\n其中 $S$ 是物种数量，$r_i$ 是内禀增长率，$K_i$ 是在没有竞争者情况下的环境承载力，$\\alpha_{ij}$ 是竞争系数，用于衡量物种 $j$ 对物种 $i$ 的影响，以物种 $i$ 的单位表示。假设对于所有 $i$，$\\alpha_{ii} = 1$。在指定时间 $t \\in \\mathcal{D}$ 发生的干扰会瞬间将每个密度乘以其存活分数 $s_i \\in [0,1]$。\n\n你的任务是编写一个程序，在给定参数化的两两竞争系数和其他种群统计学参数的情况下，预测群落组成随时间的变化，并使用 Bray–Curtis 相异度对照观测到的演替轨迹对其进行验证。对于同一时间的组成向量 $\\mathbf{p}$ 和观测的组成向量 $\\mathbf{q}$，其 Bray–Curtis 相异度为：\n$$\n\\mathrm{BC}(\\mathbf{p},\\mathbf{q}) \\;=\\; \\frac{\\sum_{i=1}^{S} |p_i - q_i|}{\\sum_{i=1}^{S} (p_i + q_i)}.\n$$\n由于 $\\mathbf{p}$ 和 $\\mathbf{q}$ 都是总和为 $1$ 的相对丰度，因此分母等于 $2$，于是 $\\mathrm{BC}(\\mathbf{p},\\mathbf{q}) = \\tfrac{1}{2}\\sum_{i=1}^{S} |p_i - q_i|$。\n\n数值预测要求：实现一个前向欧拉显式时间离散化方法，使用固定的时间步长 $\\Delta t$（单位为年）来积分连续时间动态。在从时间 $t$ 到 $t + \\Delta t$ 的每一步中，\n$$\nN_i(t+\\Delta t) \\;=\\; N_i(t) \\;+\\; \\Delta t \\; r_i \\, N_i(t)\\,\\Bigg(1 - \\frac{\\sum_{j=1}^{S} \\alpha_{ij} \\, N_j(t)}{K_i}\\Bigg).\n$$\n更新到时间 $t+\\Delta t$ 后，通过将任何负的 $N_i$ 值设为 $0$ 来强制执行非负性。如果 $t+\\Delta t$ 与一个观测时间 $\\tau \\in \\mathcal{T}_{\\mathrm{obs}}$ 重合，则记录相对丰度向量 $\\mathbf{p}(\\tau)$，其条目为 $p_i(\\tau) = N_i(\\tau) / \\sum_{k=1}^{S} N_k(\\tau)$。如果 $t+\\Delta t$ 与 $\\mathcal{D}$ 中的一个干扰时间重合，则在记录完该时间的观测数据（如果有的话）之后，立即通过将 $N_i(\\tau)$ 乘以存活分数 $s_i$ 来施加干扰。这为观测和干扰时间重合的情况定义了一个一致的顺序：在施加干扰前立即记录组成。\n\n验证要求：对于每个测试用例，计算所有观测时间的 Bray–Curtis 相异度，并以单个浮点数（无量纲）的形式返回这些相异度的算术平均值。你的程序必须产生单行输出，其中包含所有测试用例的结果，形式为方括号内由逗号分隔的平均相异度列表（例如，“[0.123456,0.234567,0.345678]”）。将每个值四舍五入到恰好六位小数。所有密度的单位均为 个体/平方米 (ind m$^{-2}$)，时间单位为年。输出指标是无量纲的。\n\n测试套件：使用以下三个测试用例。在每个用例中，$S = 3$，时间步长为 $\\Delta t = 0.01$ 年，所有观测时间和干扰时间均以年为单位表示。\n\n- 测试用例 A (中等种间竞争；轻度干扰下出现晚期演替优势种):\n  - 参数:\n    - 内禀增长率 $r = (1.20, 0.80, 0.50)$ yr$^{-1}$。\n    - 环境承载力 $K = (100.0, 120.0, 150.0)$ ind m$^{-2}$。\n    - 竞争矩阵 $\\alpha$ 各行如下:\n      - 第 1 行: $(1.00, 0.60, 0.90)$，\n      - 第 2 行: $(0.70, 1.00, 0.80)$，\n      - 第 3 行: $(0.20, 0.30, 1.00)$。\n    - 初始密度 $N_0 = (5.00, 1.00, 0.10)$ ind m$^{-2}$。\n    - 干扰时间 $\\mathcal{D} = \\{5.00, 15.00, 30.00\\}$，统一存活分数为 $s = (0.50, 0.50, 0.50)$。\n    - 观测时间 $\\mathcal{T}_{\\mathrm{obs}} = \\{1.00, 5.00, 10.00, 20.00, 40.00\\}$；模拟至 $T_{\\max} = 40.00$ 年。\n  - 观测时间点的演替组成 (各行按 $1.00, 5.00, 10.00, 20.00, 40.00$ 的时间顺序对应):\n    - $(0.70, 0.25, 0.05)$,\n    - $(0.60, 0.30, 0.10)$,\n    - $(0.40, 0.35, 0.25)$,\n    - $(0.20, 0.30, 0.50)$,\n    - $(0.10, 0.20, 0.70)$.\n\n- 测试用例 B (中性边界；对称竞争伴随频繁强干扰；组成保持在初始比例附近):\n  - 参数:\n    - 内禀增长率 $r = (0.80, 0.80, 0.80)$ yr$^{-1}$。\n    - 环境承载力 $K = (100.00, 100.00, 100.00)$ ind m$^{-2}$。\n    - 竞争矩阵 $\\alpha$ 各行如下:\n      - 第 1 行: $(1.00, 1.00, 1.00)$,\n      - 第 2 行: $(1.00, 1.00, 1.00)$,\n      - 第 3 行: $(1.00, 1.00, 1.00)$。\n    - 初始密度 $N_0 = (30.00, 30.00, 40.00)$ ind m$^{-2}$。\n    - 干扰时间 $\\mathcal{D} = \\{2.00, 4.00, 6.00, 8.00, 10.00, 12.00, 14.00, 16.00\\}$，统一存活分数为 $s = (0.10, 0.10, 0.10)$。\n    - 观测时间 $\\mathcal{T}_{\\mathrm{obs}} = \\{1.00, 2.00, 4.00, 8.00, 16.00\\}$；模拟至 $T_{\\max} = 16.00$ 年。\n  - 观测时间点的演替组成 (各行按 $1.00, 2.00, 4.00, 8.00, 16.00$ 的时间顺序对应):\n    - $(0.30, 0.30, 0.40)$,\n    - $(0.31, 0.29, 0.40)$,\n    - $(0.29, 0.31, 0.40)$,\n    - $(0.30, 0.30, 0.40)$,\n    - $(0.30, 0.30, 0.40)$.\n\n- 测试用例 C (一个竞争优势物种导致的非对称强排斥；一次干扰差异性地减少了优势物种，但长期优势仍然出现):\n  - 参数:\n    - 内禀增长率 $r = (1.00, 0.70, 0.60)$ yr$^{-1}$。\n    - 环境承载力 $K = (80.00, 200.00, 120.00)$ ind m$^{-2}$。\n    - 竞争矩阵 $\\alpha$ 各行如下:\n      - 第 1 行: $(1.00, 1.20, 0.90)$,\n      - 第 2 行: $(0.40, 1.00, 0.50)$,\n      - 第 3 行: $(0.80, 1.10, 1.00)$。\n    - 初始密度 $N_0 = (2.00, 0.50, 0.50)$ ind m$^{-2}$。\n    - 干扰时间 $\\mathcal{D} = \\{8.00, 20.00\\}$，存活分数为 $s = (0.60, 0.30, 0.60)$。\n    - 观测时间 $\\mathcal{T}_{\\mathrm{obs}} = \\{2.00, 8.00, 12.00, 24.00, 36.00\\}$；模拟至 $T_{\\max} = 36.00$ 年。\n  - 观测时间点的演替组成 (各行按 $2.00, 8.00, 12.00, 24.00, 36.00$ 的时间顺序对应):\n    - $(0.60, 0.25, 0.15)$,\n    - $(0.55, 0.20, 0.25)$,\n    - $(0.40, 0.40, 0.20)$,\n    - $(0.20, 0.60, 0.20)$,\n    - $(0.10, 0.75, 0.15)$.\n\n实现细节和输出规范：\n- 使用上述指定的前向欧拉更新，时间步长 $\\Delta t = 0.01$ 年。\n- 在任何同时是观测时间和干扰时间的时刻，应在施加干扰前立即记录组成。\n- 对于每个测试用例，计算所有观测时间点的 Bray–Curtis 相异度的平均值。\n- 你的程序应产生单行输出，其中包含一个由方括号括起来的逗号分隔列表（例如，“[0.123456,0.234567,0.345678]”），列表中的每个值都四舍五入到恰好六位小数。", "solution": "所述问题定义明确、科学上合理且内部一致。它提出了计算生态学中的一个标准任务：对一个受离散干扰事件影响的多物种 Lotka-Volterra 竞争模型进行数值模拟，并随后根据一组给定的观测数据对模型输出进行验证。因此，我们可以直接着手构建解决方案。\n\n问题的核心是求解控制 $S$ 个竞争物种种群动态的耦合非线性常微分方程组。对于每个物种 $i$，其密度 $N_i$ 的变化率由下式给出：\n$$\n\\frac{dN_i}{dt} \\;=\\; r_i \\, N_i \\,\\Bigg(1 - \\frac{\\sum_{j=1}^{S} \\alpha_{ij} \\, N_j}{K_i}\\Bigg)\n$$\n其中 $r_i$ 是内禀增长率，$K_i$ 是环境承载力，矩阵 $\\alpha$ 包含竞争系数 $\\alpha_{ij}$，并定义种内竞争系数 $\\alpha_{ii} = 1$。\n\n该方程组的解析解通常是难以求得的，因此需要采用数值方法。问题指定使用前向欧拉法，这是一种显式一阶积分方案。使用固定的时间步长 $\\Delta t$，种群密度向量 $\\mathbf{N}(t) = (N_1(t), \\dots, N_S(t))^\\top$ 根据以下迭代公式从时间 $t$ 递推到 $t + \\Delta t$：\n$$\nN_i(t+\\Delta t) \\;=\\; N_i(t) \\;+\\; \\Delta t \\; r_i \\, N_i(t)\\,\\Bigg(1 - \\frac{\\sum_{j=1}^{S} \\alpha_{ij} \\, N_j(t)}{K_i}\\Bigg)\n$$\n对所有物种 $i=1, \\dots, S$ 执行此更新。一个反映生物学现实的关键步骤是强制执行非负性约束：如果任何 $N_i(t+\\Delta t)$ 计算为负值，则立即将其设置为 $0$。\n\n连续的动态过程会被离散事件（观测和干扰）所打断。鲁棒的数值实现必须在精确的预定时间处理这些事件。比较时间的浮点表示容易出错。正确而严谨的程序是将所有事件时间转换为整数时间步索引，从而将整个模拟时间线离散化。对于最大模拟时间 $T_{\\max}$ 和时间步长 $\\Delta t$，模拟将总共运行 $n_{\\text{steps}} = \\text{round}(T_{\\max} / \\Delta t)$ 步。安排在时间 $t_{\\text{event}}$ 的事件因此被映射到整数步索引 $k_{\\text{event}} = \\text{round}(t_{\\text{event}} / \\Delta t)$。\n\n模拟算法的结构是一个从步骤 $k=1$ 迭代到 $n_{\\text{steps}}$ 的循环：\n1.  **积分**：使用前向欧拉公式将种群向量 $\\mathbf{N}$ 从其在步骤 $k-1$ 的状态更新到步骤 $k$ 的状态。对得到的 $\\mathbf{N}$ 向量强制执行非负性。\n2.  **观测**：我们检查当前步骤索引 $k$ 是否与预定的观测步骤匹配。如果匹配，则从当前绝对密度 $\\mathbf{N}$ 计算预测的相对丰度向量 $\\mathbf{p}$（其中 $p_i = N_i / \\sum_j N_j$）。然后使用 Bray-Curtis 相异度将此预测组成 $\\mathbf{p}$ 与相应的观测组成 $\\mathbf{q}$ 进行比较。由于 $\\mathbf{p}$ 和 $\\mathbf{q}$ 都被归一化为总和为 $1$，公式简化为 $\\mathrm{BC}(\\mathbf{p},\\mathbf{q}) = \\frac{1}{2}\\sum_{i=1}^{S} |p_i - q_i|$。记录得到的相异度值。\n3.  **干扰**：然后我们检查步骤 $k$ 是否与预定的干扰步骤匹配。如果匹配，则通过将每个物种的密度 $N_i$ 乘以其指定的存活分数 $s_i$ 来施加干扰，即 $N_i \\leftarrow N_i \\cdot s_i$。问题规定，在同一时间点的观测发生在干扰之前。对于给定的步骤索引 $k$，在循环内顺序执行步骤 (2) 和 (3) 可以正确地实现此顺序。\n\n在模拟于 $T_{\\max}$ 完成后，每个测试用例最终要求的输出是所有记录的 Bray-Curtis 相异度值的算术平均值。整个过程将使用 `numpy` 库来实现，以便对种群向量和参数数组进行高效的向量化计算。该算法将被封装在一个处理单个测试用例的函数中，一个主驱动程序将遍历所有测试用例以生成最终格式化的输出。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef run_simulation(r, K, alpha, N0, s, dist_times, obs_times, obs_data, T_max, dt):\n    \"\"\"\n    Runs the Lotka-Volterra competition simulation with disturbances for one test case.\n\n    Args:\n        r (tuple): Intrinsic rates of increase.\n        K (tuple): Carrying capacities.\n        alpha (list of lists): Competition matrix.\n        N0 (tuple): Initial densities.\n        s (tuple): Survival fractions.\n        dist_times (set): Set of disturbance times.\n        obs_times (tuple): Tuple of observation times.\n        obs_data (list of tuples): Observed compositions at observation times.\n        T_max (float): Maximum simulation time.\n        dt (float): Time step for integration.\n\n    Returns:\n        float: The mean Bray-Curtis dissimilarity over all observation times.\n    \"\"\"\n    # Convert parameters to numpy arrays for vectorized operations\n    r = np.array(r, dtype=np.float64)\n    K = np.array(K, dtype=np.float64)\n    alpha = np.array(alpha, dtype=np.float64)\n    N = np.array(N0, dtype=np.float64)\n    s_vec = np.array(s, dtype=np.float64)\n\n    # Create event maps based on integer step indices for robust time handling\n    obs_data_map = {t: np.array(q) for t, q in zip(obs_times, obs_data)}\n    obs_step_data_map = {int(round(t / dt)): q for t, q in obs_data_map.items()}\n    dist_step_map = {int(round(t / dt)): s_vec for t in dist_times}\n\n    num_steps = int(round(T_max / dt))\n    bray_curtis_dissimilarities = []\n\n    for step in range(1, num_steps + 1):\n        # Forward Euler integration step\n        # dN/dt = r*N*(1 - (alpha @ N) / K)\n        competition_term = alpha @ N\n        dN_dt = r * N * (1.0 - competition_term / K)\n        N += dt * dN_dt\n\n        # Enforce non-negativity constraint\n        N[N  0] = 0.0\n\n        # Check for observation event at the end of the current time step\n        if step in obs_step_data_map:\n            observed_q = obs_step_data_map[step]\n            \n            # Calculate predicted relative abundance, p\n            total_density = np.sum(N)\n            # Handle case where all species are extinct to avoid division by zero\n            if total_density > 1e-12:\n                predicted_p = N / total_density\n            else:\n                predicted_p = np.zeros_like(N)\n            \n            # Calculate Bray-Curtis dissimilarity: 0.5 * sum(|p_i - q_i|)\n            bc_dissimilarity = 0.5 * np.sum(np.abs(predicted_p - observed_q))\n            bray_curtis_dissimilarities.append(bc_dissimilarity)\n\n        # Check for disturbance event (occurs after observation at the same time)\n        if step in dist_step_map:\n            survival_fractions = dist_step_map[step]\n            N *= survival_fractions\n    \n    return np.mean(bray_curtis_dissimilarities) if bray_curtis_dissimilarities else 0.0\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Test Case A\n        {\n            \"r\": (1.20, 0.80, 0.50), \"K\": (100.0, 120.0, 150.0),\n            \"alpha\": [[1.00, 0.60, 0.90], [0.70, 1.00, 0.80], [0.20, 0.30, 1.00]],\n            \"N0\": (5.00, 1.00, 0.10), \"s\": (0.50, 0.50, 0.50),\n            \"dist_times\": {5.00, 15.00, 30.00},\n            \"obs_times\": (1.00, 5.00, 10.00, 20.00, 40.00),\n            \"obs_data\": [\n                (0.70, 0.25, 0.05), (0.60, 0.30, 0.10), (0.40, 0.35, 0.25),\n                (0.20, 0.30, 0.50), (0.10, 0.20, 0.70)\n            ],\n            \"T_max\": 40.00, \"dt\": 0.01\n        },\n        # Test Case B\n        {\n            \"r\": (0.80, 0.80, 0.80), \"K\": (100.00, 100.00, 100.00),\n            \"alpha\": [[1.00, 1.00, 1.00], [1.00, 1.00, 1.00], [1.00, 1.00, 1.00]],\n            \"N0\": (30.00, 30.00, 40.00), \"s\": (0.10, 0.10, 0.10),\n            \"dist_times\": {2.00, 4.00, 6.00, 8.00, 10.00, 12.00, 14.00, 16.00},\n            \"obs_times\": (1.00, 2.00, 4.00, 8.00, 16.00),\n            \"obs_data\": [\n                (0.30, 0.30, 0.40), (0.31, 0.29, 0.40), (0.29, 0.31, 0.40),\n                (0.30, 0.30, 0.40), (0.30, 0.30, 0.40)\n            ],\n            \"T_max\": 16.00, \"dt\": 0.01\n        },\n        # Test Case C\n        {\n            \"r\": (1.00, 0.70, 0.60), \"K\": (80.00, 200.00, 120.00),\n            \"alpha\": [[1.00, 1.20, 0.90], [0.40, 1.00, 0.50], [0.80, 1.10, 1.00]],\n            \"N0\": (2.00, 0.50, 0.50), \"s\": (0.60, 0.30, 0.60),\n            \"dist_times\": {8.00, 20.00},\n            \"obs_times\": (2.00, 8.00, 12.00, 24.00, 36.00),\n            \"obs_data\": [\n                (0.60, 0.25, 0.15), (0.55, 0.20, 0.25), (0.40, 0.40, 0.20),\n                (0.20, 0.60, 0.20), (0.10, 0.75, 0.15)\n            ],\n            \"T_max\": 36.00, \"dt\": 0.01\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        mean_bc = run_simulation(\n            r=case[\"r\"], K=case[\"K\"], alpha=case[\"alpha\"], N0=case[\"N0\"],\n            s=case[\"s\"], dist_times=case[\"dist_times\"], obs_times=case[\"obs_times\"],\n            obs_data=case[\"obs_data\"], T_max=case[\"T_max\"], dt=case[\"dt\"]\n        )\n        results.append(f\"{mean_bc:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2794128"}]}