{"hands_on_practices": [{"introduction": "要深刻理解酶的功能，首先需要量化其催化效率。本练习将指导你完成一项在生物化学研究中至关重要的实践任务：通过对原始实验数据进行非线性最小二乘法拟合，直接提取米氏常数（$K_M$）和催化转换数（$k_{cat}$）[@problem_id:2863191]。这项计算练习不仅能让你掌握从真实数据中获取基本动力学参数的技能，还能让你体会到为何现代酶学分析更倾向于直接拟合非线性模型，而非传统的线性变换方法。", "problem": "您正在模拟氨酰-转运RNA合成酶 (aaRS) 对转运RNA (tRNA) 的稳态初始装载速率。在初始速率条件和单底物动力学下，tRNA装载速率作为底物tRNA浓度的函数，可以用米氏-门顿模型来描述，其中总酶浓度对于每个数据集是已知且保持固定的。您的任务是拟合不同tRNA浓度下的初始速率数据，通过非线性最小二乘法提取催化转换数和米氏常数，并给出其不确定性估计。\n\n使用的基本原理和假设：\n- 分子生物学中心法则确立了转运RNA (tRNA) 在翻译过程中被氨酰-转运RNA合成酶 (aaRS) 氨酰化。\n- 在初始速率 ($v_0$) 条件下，当底物浓度 $[S]$ 远大于酶浓度 $[E]_0$ 时，准稳态动力学适用于单底物机制。\n- 米氏-门顿速率定律有效：\n$$\nv([S]; V_{\\max}, K_M) = \\frac{V_{\\max}\\,[S]}{K_M + [S]},\n$$\n其中 $V_{\\max} = k_{\\mathrm{cat}} [E]_0$，$k_{\\mathrm{cat}}$ 是催化转换数，$K_M$ 是米氏常数。\n\n任务：\n- 对每个数据集，执行米氏-门顿模型的直接非线性最小二乘拟合，以估计 $V_{\\max}$ 和 $K_M$。\n- 使用该数据集中已知的总酶浓度 $[E]_0$，通过 $k_{\\mathrm{cat}} = V_{\\max}/[E]_0$ 将 $V_{\\max}$ 转换为 $k_{\\mathrm{cat}}$。\n- 计算 $k_{\\mathrm{cat}}$ 和 $K_M$ 的标准误。将 $[E]_0$ 视为无不确定性的已知量。使用非线性最小二乘拟合得到的参数协方差；通过线性误差传播来传播 $k_{\\mathrm{cat}}$ 的不确定性，\n$$\n\\mathrm{SE}\\!\\left(k_{\\mathrm{cat}}\\right) = \\frac{\\mathrm{SE}\\!\\left(V_{\\max}\\right)}{[E]_0}.\n$$\n\n单位：\n- 所有底物浓度 $[S]$ 和酶浓度 $[E]_0$ 的单位均为微摩尔/升 ($\\mu\\mathrm{M}$)。\n- 所有初始速率 $v$ 的单位均为微摩尔/升/秒 ($\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}$)。\n- 报告 $k_{\\mathrm{cat}}$ 的单位为 $\\mathrm{s}^{-1}$，$K_M$ 的单位为 $\\mu\\mathrm{M}$。报告标准误的单位与其各自参数的单位相同。\n\n重要约束和要求：\n- 不要对模型进行线性化（例如，不要使用双倒数变换）。直接拟合非线性模型。\n- 仅使用下面提供的数据。不允许外部输入。\n- 对于数值输出，将所有报告值四舍五入到 $6$ 位小数。\n- 您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表，每个数据集贡献一个包含四个浮点数的列表，顺序为 $[k_{\\mathrm{cat}}, K_M, \\mathrm{SE}(k_{\\mathrm{cat}}), \\mathrm{SE}(K_M)]$。例如，两个数据集的有效输出应如下所示：$[[1.234000,5.678000,0.010000,0.200000],[\\dots]]$。\n\n测试套件（数据集）：\n- 数据集 1：\n  - $[E]_0 = 0.02$ $\\mu\\mathrm{M}$\n  - $[S]$ （单位 $\\mu\\mathrm{M}$）： $[1, 3, 5, 10, 20, 50, 100, 200]$ 即 $[1, 3, 5, 10, 20, 50, 100, 200]$\n  - $v$ （单位 $\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}$）： $[0.0102, 0.0271, 0.0391, 0.0655, 0.0899, 0.1220, 0.1405, 0.1472]$\n- 数据集 2：\n  - $[E]_0 = 0.01$ $\\mu\\mathrm{M}$\n  - $[S]$ （单位 $\\mu\\mathrm{M}$）： $[0.05, 0.1, 0.2, 0.5, 1, 2, 5]$ 即 $[0.05, 0.1, 0.2, 0.5, 1, 2, 5]$\n  - $v$ （单位 $\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}$）： $[0.00080, 0.00136, 0.00285, 0.00610, 0.00970, 0.01530, 0.02110]$\n- 数据集 3：\n  - $[E]_0 = 0.05$ $\\mu\\mathrm{M}$\n  - $[S]$ （单位 $\\mu\\mathrm{M}$）： $[1, 5, 10, 20, 50, 100]$ 即 $[1, 5, 10, 20, 50, 100]$\n  - $v$ （单位 $\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}$）： $[0.00120, 0.00630, 0.01240, 0.02200, 0.0490, 0.0845]$\n\n输出规格：\n- 您的程序必须输出单行，其中包含一个含三个内部列表的列表（每个数据集一个），每个内部列表包含四个浮点数：$[k_{\\mathrm{cat}}, K_M, \\mathrm{SE}(k_{\\mathrm{cat}}), \\mathrm{SE}(K_M)]$，所有数值均四舍五入到 $6$ 位小数，格式完全如下：\n$[[kcat_1,KM_1,SEkcat_1,SEKM_1],[kcat_2,KM_2,SEkcat_2,SEKM_2],[kcat_3,KM_3,SEkcat_3,SEKM_3]]$。", "solution": "该问题陈述已经过严格评估，并被确定为有效。这是一个在生物化学的子学科——酶动力学领域中，提法恰当且有科学依据的问题。任务是使用标准数学模型——米氏-门顿方程，通过非线性最小二乘回归对实验数据进行定量分析。获得唯一解所需的所有数据、常数和关系均已提供，并且没有内部矛盾或逻辑缺陷。\n\n问题的核心是将米氏-门顿模型拟合到所提供的初始反应速率($v$)与底物浓度($[S]$)的数据集。该模型由以下函数给出：\n$$\nv([S]) = \\frac{V_{\\max}\\,[S]}{K_M + [S]}\n$$\n在此，$V_{\\max}$ 是最大反应速率，$K_M$ 是米氏常数，它代表反应速率为 $V_{\\max}$ 一半时的底物浓度。这两个参数，$V_{\\max}$ 和 $K_M$，需要为每个数据集进行估计。\n\n指定的方法是直接非线性最小二乘拟合，这可以避免由线性化变换（如Lineweaver-Burk作图法）引入的系统误差。此过程旨在最小化给定参数集下，观测速率 $v_i$ 与模型预测速率 $\\hat{v}_i([S_i])$ 之间的残差平方和 $SSR$：\n$$\nSSR(V_{\\max}, K_M) = \\sum_{i=1}^{n} \\left( v_i - \\hat{v}_i([S_i]; V_{\\max}, K_M) \\right)^2\n$$\n最优参数 $(V_{\\max}^*, K_M^*)$ 是使此函数最小化的参数。这将使用 `scipy.optimize` 库中的 `curve_fit` 函数以数值方式完成，该函数实现了Levenberg-Marquardt算法。该函数还为拟合参数提供了估计的协方差矩阵 $\\mathbf{C}$。\n\n$$\n\\mathbf{C} = \\begin{pmatrix} \\sigma^2_{V_{\\max}} & \\sigma_{V_{\\max}, K_M} \\\\ \\sigma_{K_M, V_{\\max}} & \\sigma^2_{K_M} \\end{pmatrix}\n$$\n\n该矩阵的对角线元素是估计参数的方差。每个参数的标准误 ($SE$) 是其方差的平方根：\n$$\n\\mathrm{SE}(V_{\\max}) = \\sqrt{\\mathbf{C}_{11}} = \\sqrt{\\sigma^2_{V_{\\max}}}\n$$\n$$\n\\mathrm{SE}(K_M) = \\sqrt{\\mathbf{C}_{22}} = \\sqrt{\\sigma^2_{K_M}}\n$$\n\n一旦确定了 $V_{\\max}$ 及其标准误，就可以计算催化转换数 $k_{\\mathrm{cat}}$。$V_{\\max}$ 和 $k_{\\mathrm{cat}}$ 之间的关系是线性的：\n$$\nk_{\\mathrm{cat}} = \\frac{V_{\\max}}{[E]_0}\n$$\n其中 $[E]_0$ 是总酶浓度，对于每个数据集，它都是一个已知的常数。\n\n$k_{\\mathrm{cat}}$ 的不确定性通过从 $V_{\\max}$ 传播不确定性来确定。由于 $[E]_0$ 被视为没有不确定性的常数，因此 $k_{\\mathrm{cat}}$ 的标准误通过对 $V_{\\max}$ 的标准误进行简单缩放得出：\n$$\n\\mathrm{SE}(k_{\\mathrm{cat}}) = \\frac{\\mathrm{SE}(V_{\\max})}{[E]_0}\n$$\n所有单位都是一致的。底物浓度 $[S]$ 的单位是 $\\mu\\mathrm{M}$，$[E]_0$ 的单位是 $\\mu\\mathrm{M}$，速率 $v$ 的单位是 $\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}$。因此，拟合参数 $K_M$ 的单位将是 $\\mu\\mathrm{M}$，$V_{\\max}$ 的单位将是 $\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}$。这使得 $k_{\\mathrm{cat}}$ 的单位为 $(\\mu\\mathrm{M}\\,\\mathrm{s}^{-1}) / (\\mu\\mathrm{M}) = \\mathrm{s}^{-1}$，这对于一级反应速率常数是正确的。\n\n该过程将独立应用于所提供的三个数据集中的每一个。每个数据集的最终输出将包括四个值：估计的 $k_{\\mathrm{cat}}$、$K_M$、$\\mathrm{SE}(k_{\\mathrm{cat}})$ 和 $\\mathrm{SE}(K_M)$，所有值均按要求四舍五入到六位小数。所有数据集的结果将被汇总成一个单一格式化的列表结构。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import curve_fit\n\ndef solve():\n    \"\"\"\n    Solves the enzyme kinetics problem by fitting Michaelis-Menten data for three datasets.\n    \"\"\"\n\n    # Define the Michaelis-Menten model function for curve fitting.\n    def michaelis_menten(S, V_max, K_M):\n        \"\"\"\n        Michaelis-Menten rate law.\n        S: Substrate concentration.\n        V_max: Maximum reaction rate.\n        K_M: Michaelis constant.\n        \"\"\"\n        return (V_max * S) / (K_M + S)\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"E0\": 0.02,\n            \"S\": np.array([1, 3, 5, 10, 20, 50, 100, 200], dtype=float),\n            \"v\": np.array([0.0102, 0.0271, 0.0391, 0.0655, 0.0899, 0.1220, 0.1405, 0.1472], dtype=float),\n        },\n        {\n            \"E0\": 0.01,\n            \"S\": np.array([0.05, 0.1, 0.2, 0.5, 1, 2, 5], dtype=float),\n            \"v\": np.array([0.00080, 0.00136, 0.00285, 0.00610, 0.00970, 0.01530, 0.02110], dtype=float),\n        },\n        {\n            \"E0\": 0.05,\n            \"S\": np.array([1, 5, 10, 20, 50, 100], dtype=float),\n            \"v\": np.array([0.00120, 0.00630, 0.01240, 0.02200, 0.0490, 0.0845], dtype=float),\n        },\n    ]\n\n    all_results = []\n    for case in test_cases:\n        E0 = case[\"E0\"]\n        S_data = case[\"S\"]\n        v_data = case[\"v\"]\n\n        # Perform nonlinear least-squares fit using curve_fit.\n        # It returns optimal parameters (popt) and the covariance matrix (pcov).\n        # We provide reasonable initial guesses [Vmax_guess, KM_guess].\n        initial_guesses = [np.max(v_data), np.median(S_data)]\n        popt, pcov = curve_fit(michaelis_menten, S_data, v_data, p0=initial_guesses, bounds=(0, np.inf))\n\n        # Extract fitted parameters\n        V_max, K_M = popt\n\n        # Calculate standard errors from the covariance matrix.\n        # SE is the square root of the variance (diagonal elements of pcov).\n        perr = np.sqrt(np.diag(pcov))\n        SE_V_max, SE_K_M = perr\n\n        # Calculate k_cat from V_max and E0.\n        k_cat = V_max / E0\n\n        # Propagate error for k_cat.\n        # Since E0 is a constant, SE(k_cat) = SE(V_max) / E0.\n        SE_k_cat = SE_V_max / E0\n        \n        # Store results for this dataset.\n        results_for_case = [k_cat, K_M, SE_k_cat, SE_K_M]\n        all_results.append(results_for_case)\n\n    # Format the final output string as specified.\n    # e.g., [[kcat1,KM1,SEkcat1,SEKM1],[kcat2,KM2,SEkcat2,SEKM2],...]\n    # Each value is rounded to 6 decimal places. No spaces.\n    outer_parts = []\n    for inner_list in all_results:\n        inner_str = f\"[{','.join([f'{x:.6f}' for x in inner_list])}]\"\n        outer_parts.append(inner_str)\n    \n    final_output_string = f\"[{','.join(outer_parts)}]\"\n\n    print(final_output_string)\n\nsolve()\n```", "id": "2863191"}, {"introduction": "在获得酶的基本动力学参数后，下一步是理解这些参数如何决定酶的底物特异性。本练习通过一个假设情景，探讨氨酰-tRNA合成酶（aaRS）如何区分正确（同源）与错误（近同源）的tRNA底物[@problem_id:2846481]。通过计算去除tRNA上的一个负向识别元件对错配酰化概率的影响，你将深入理解特异性常数（$k_{cat}/K_M$）在量化酶保真度中的核心作用。", "problem": "氨酰tRNA合成酶 (aaRS; 氨酰转移RNA合成酶) 利用tRNA上的正向和负向识别元件来区分同源转移RNA (tRNA) 和近同源tRNA。一个突变移除了近同源tRNA反密码子环中的一个负向决定簇，实验表明这使其与aaRS的解离常数 ($K_D$) 从 $20\\ \\mu\\mathrm{M}$ 降低到 $2\\ \\mu\\mathrm{M}$，而该近同源tRNA的氨酰化催化转换数 ($k_{\\mathrm{cat}}$) 保持不变。同源tRNA的动力学参数不受此突变影响。假设在稳态条件下，两种tRNA竞争该酶，且两种tRNA的浓度远低于它们的米氏常数 ($K_M$)，并且底物结合处于快速平衡状态，因此对于近同源tRNA，在突变前后均可认为 $K_M \\approx K_D$。\n\n在这些条件下，近同源tRNA的错配氨酰化概率由同源和近同源tRNA通过其特异性进行的竞争决定。计算因移除负向决定簇而导致的近同源tRNA错配氨酰化概率的倍数增加。请用一个纯数（无量纲的倍数变化）表示你的答案。无需四舍五入。", "solution": "用户提供了一个酶动力学问题，具体涉及同源和近同源tRNA与一种氨酰tRNA合成酶的竞争性相互作用。在尝试求解之前，必须进行严格的验证。\n\n首先，我将逐字提取问题陈述中的已知条件。\n1.  一种氨酰tRNA合成酶 (`aaRS`)。\n2.  两种竞争性底物：一个同源转移RNA (`tRNA`) 和一个近同源`tRNA`。\n3.  一个突变从近同源`tRNA`中移除了一个负向决定簇。\n4.  对于近同源`tRNA`，初始解离常数为 $K_{D, i} = 20\\ \\mu\\mathrm{M}$。\n5.  对于近同源`tRNA`，突变后的最终解离常数为 $K_{D, f} = 2\\ \\mu\\mathrm{M}$。\n6.  近同源`tRNA`的催化转换数 $k_{\\mathrm{cat}}$ 不受突变影响。\n7.  同源`tRNA`的动力学参数保持不变。\n8.  假设1：稳态条件。\n9.  假设2：两种`tRNA`的浓度远低于它们的米氏常数，即 $[S] \\ll K_M$。\n10. 假设3：底物结合处于快速平衡状态，因此对于近同源`tRNA`，$K_M \\approx K_D$。\n\n问题是计算近同源`tRNA`的错配氨酰化概率的倍数增加。\n\n接下来，我验证该问题。该问题基于酶动力学和分子生物学的原理，具有科学依据，描述了一个关于酶特异性的合理情景。其语言客观而精确。所提供的假设，特别是 $[S] \\ll K_M$ 和 $K_M \\approx K_D$，是简化动力学分析的标准做法，使问题成为一个适定问题。数据在量纲上是一致的。该问题没有违反任何基本原理，不是不完整的，并且不包含任何矛盾。可以从所提供的信息中推导出一个唯一的解。因此，该问题被认为是有效的，并将构建一个解决方案。\n\n设同源`tRNA`表示为 $S_c$，近同源`tRNA`表示为 $S_{nc}$。酶促反应如下：\n$$ E + S_c \\xrightarrow{k_{on,c}} ES_c \\xrightarrow{k_{cat,c}} E + P_c $$\n$$ E + S_{nc} \\xrightarrow{k_{on,nc}} ES_{nc} \\xrightarrow{k_{cat,nc}} E + P_{nc} $$\n酶促反应的速率由米氏方程给出。然而，在指定的底物浓度远低于米氏常数（$[S_c] \\ll K_{M,c}$ 和 $[S_{nc}] \\ll K_{M,nc}$）的条件下，每个产物（$P_c$ 和 $P_{nc}$）的生成速率 $v_c$ 和 $v_{nc}$ 得以简化。对于单个底物 $S_i$，速率 $v_i = \\frac{k_{\\mathrm{cat},i} [E]_{total} [S_i]}{K_{M,i} + [S_i]}$ 简化为 $v_i \\approx \\frac{k_{\\mathrm{cat},i}}{K_{M,i}} [E]_{total} [S_i]$。$\\frac{k_{\\mathrm{cat}}}{K_M}$ 这一项是特异性常数，我们将其表示为 $\\eta$。只要总底物浓度足够低，以至于游离酶浓度 $[E]$ 约等于总酶浓度 $[E]_{total}$，那么这个近似在竞争性场景中也成立。\n\n因此，氨酰化速率为：\n$$ v_c \\approx \\left(\\frac{k_{\\mathrm{cat},c}}{K_{M,c}}\\right) [E]_{total} [S_c] = \\eta_c [E]_{total} [S_c] $$\n$$ v_{nc} \\approx \\left(\\frac{k_{\\mathrm{cat},nc}}{K_{M,nc}}\\right) [E]_{total} [S_{nc}] = \\eta_{nc} [E]_{total} [S_{nc}] $$\n错配氨酰化概率 $P_{misc}$ 是指在总氨酰化事件中，对应于不正确底物 $S_{nc}$ 的事件所占的比例。\n$$ P_{misc} = \\frac{v_{nc}}{v_c + v_{nc}} $$\n代入速率表达式：\n$$ P_{misc} = \\frac{\\eta_{nc} [E]_{total} [S_{nc}]}{\\eta_c [E]_{total} [S_c] + \\eta_{nc} [E]_{total} [S_{nc}]} = \\frac{\\eta_{nc} [S_{nc}]}{\\eta_c [S_c] + \\eta_{nc} [S_{nc}]} $$\n在任何需要高保真度的生物系统中，如蛋白质合成，正确反应的速率必须远超过错误反应的速率，即 $v_c \\gg v_{nc}$。这意味着分母中的 $\\eta_{nc} [S_{nc}]$ 项与 $\\eta_c [S_c]$ 相比可以忽略不计。因此，该概率表达式可以近似为：\n$$ P_{misc} \\approx \\frac{\\eta_{nc} [S_{nc}]}{\\eta_c [S_c]} = \\frac{v_{nc}}{v_c} $$\n问题要求计算由于突变导致的该概率的倍数增加。设初始状态（突变前）用下标 $i$ 表示，最终状态（突变后）用下标 $f$ 表示。倍数增加是比值 $\\frac{P_{misc,f}}{P_{misc,i}}$。\n$$ \\text{Fold-increase} = \\frac{P_{misc,f}}{P_{misc,i}} \\approx \\frac{ (\\eta_{nc,f} [S_{nc}]) / (\\eta_c [S_c]) }{ (\\eta_{nc,i} [S_{nc}]) / (\\eta_c [S_c]) } $$\n浓度 $[S_c]$ 和 $[S_{nc}]$，以及同源底物的参数 ($\\eta_c$)，在整个实验过程中是恒定的。因此，它们可以从比值中约去。\n$$ \\text{Fold-increase} \\approx \\frac{\\eta_{nc,f}}{\\eta_{nc,i}} $$\n现在，我们将特异性常数用其组成部分来表示。\n$$ \\frac{\\eta_{nc,f}}{\\eta_{nc,i}} = \\frac{k_{\\mathrm{cat},nc,f} / K_{M,nc,f}}{k_{\\mathrm{cat},nc,i} / K_{M,nc,i}} $$\n问题陈述指出，近同源`tRNA`的催化转换数 $k_{\\mathrm{cat},nc}$ 保持不变。因此，$k_{\\mathrm{cat},nc,f} = k_{\\mathrm{cat},nc,i}$。这些项可以约去。\n$$ \\text{Fold-increase} \\approx \\frac{K_{M,nc,i}}{K_{M,nc,f}} $$\n我们已知假设对于近同源`tRNA`，$K_M \\approx K_D$。我们将给定的解离常数代入此表达式。\n$$ \\text{Fold-increase} \\approx \\frac{K_{D,nc,i}}{K_{D,nc,f}} $$\n给定的值为 $K_{D,nc,i} = 20\\ \\mu\\mathrm{M}$ 和 $K_{D,nc,f} = 2\\ \\mu\\mathrm{M}$。\n$$ \\text{Fold-increase} \\approx \\frac{20\\ \\mu\\mathrm{M}}{2\\ \\mu\\mathrm{M}} = 10 $$\n该突变使近同源`tRNA`的结合能力增强了10倍（如$K_D$的降低所示）。在$k_{\\mathrm{cat}}$保持不变的情况下，这直接转化为特异性常数 $\\eta_{nc}$ 的10倍增加，并因此在指定的低底物浓度条件下，导致错配氨酰化概率增加10倍。", "answer": "$$\\boxed{10}$$", "id": "2846481"}, {"introduction": "氨酰-tRNA合成酶的保真度并不仅仅依赖于对底物的初步选择，还依赖于一个更为精密的校对机制。本练习构建了一个动力学校对模型，用于模拟aaRS如何通过专门的编辑途径主动纠正其自身的错误[@problem_id:2846576]。通过这个练习，你将学会如何量化校对机制对最终错误率的影响，并计算维持这种高精确性所必须付出的能量代价（ATP消耗），从而揭示维持蛋白质生物合成高保真度所涉及的深刻生物学权衡。", "problem": "氨酰-tRNA合成酶 (aaRS) 催化一个两步反应：首先，一个氨基酸被三磷酸腺苷 (ATP) 活化，形成一个氨酰-腺苷酸中间体；然后，氨酰基被转移到其同源转移RNA (tRNA) 的末端腺苷上。对同源和近同源氨基酸的区分来自于活化步骤中的基态结合/过渡态效应，以及通过特异性编辑通路进行的动力学校对，这些通路会水解错误活化的氨酰-腺苷酸或错误酰化的tRNA。考虑作用于异亮氨酸 (Ile, 同源) 和缬氨酸 (Val, 近同源) 的异亮氨酰-tRNA合成酶。假设氨基酸浓度相等，使得观测到的伪一级活化速率常数分别为 $k_{act}^{\\mathrm{Ile}}=100\\,\\mathrm{s}^{-1}$ 和 $k_{act}^{\\mathrm{Val}}=10\\,\\mathrm{s}^{-1}$。活化后，氨酰-腺苷酸中间体要么以速率 $k_{tr}=20\\,\\mathrm{s}^{-1}$（对于两种底物均如此）进行氨酰基转移至tRNA，要么，如果底物是缬氨酸，则被一个特异性的转移前编辑通路以速率 $k_{edit}^{\\mathrm{Val}}=50\\,\\mathrm{s}^{-1}$ 水解。Ile的编辑作用可忽略不计。每次活化事件恰好消耗$1$个ATP；转移和编辑过程均不消耗额外的ATP分子。假设每个竞争步骤的等待时间是独立的、无记忆的（指数分布），并且每个催化循环都始于一个Ile或Val的活化事件，具体是哪一个由活化过程之间的竞争决定。\n\n仅使用以上假设和定义：\n- 计算释放的已负载tRNA产物中的稳态错误频率，该频率定义为释放的总产物中Val-tRNA（而非Ile-tRNA）所占的比例，以小数形式表示。\n- 计算每生成一个正确负载的Ile-tRNA产物所消耗的ATP分子的期望数。\n\n将您的答案四舍五入到$4$位有效数字。将错误频率表示为无单位的小数，将ATP消耗表示为每个正确的Ile-tRNA产物所消耗的ATP分子数（无单位计数）。不要使用百分号，最终数值答案中也不要包含单位。", "solution": "该问题要求计算与氨酰-tRNA合成酶保真度相关的两个量：稳态错误频率和每个正确产物的能量成本。该分析通过将系统建模为一组竞争性动力学通路来进行，这与每一步的等待时间是独立的指数分布的假设相符。\n\n首先，我们计算稳态错误频率，记为 $\\eta$。它被定义为释放的已负载tRNA总产物中Val-tRNA所占的比例，即错误产物形成速率与总产物形成速率之比。\n$$ \\eta = \\frac{\\text{Rate of Val-tRNA release}}{\\text{Rate of Ile-tRNA release} + \\text{Rate of Val-tRNA release}} $$\n设Ile-tRNA和Val-tRNA的形成速率分别为 $v_{\\mathrm{Ile-tRNA}}$ 和 $v_{\\mathrm{Val-tRNA}}$。于是，\n$$ \\eta = \\frac{v_{\\mathrm{Val-tRNA}}}{v_{\\mathrm{Ile-tRNA}} + v_{\\mathrm{Val-tRNA}}} $$\n产物形成的总速率是一个两阶段过程：活化，然后是氨酰基转移。\n\n初始的活化步骤涉及到异亮氨酸 (Ile) 和缬氨酸 (Val) 对合成酶的竞争。由于假设它们的浓度相等，活化的相对速率分别与它们各自的伪一级速率常数 $k_{act}^{\\mathrm{Ile}}$ 和 $k_{act}^{\\mathrm{Val}}$ 成正比。\nIle的活化速率与 $k_{act}^{\\mathrm{Ile}}$ 成正比。\nVal的活化速率与 $k_{act}^{\\mathrm{Val}}$ 成正比。\n\n活化之后，异亮氨酰-腺苷酸中间体 (Ile-AMP) 进入转移步骤。问题陈述Ile的编辑作用可以忽略不计。因此，每个活化的Ile分子都被转移到其同源tRNA上。一个活化的Ile被转移的概率是 $P_{\\mathrm{tr|Ile}} = 1$。因此，正确产物形成的总速率与活化速率成正比：\n$$ v_{\\mathrm{Ile-tRNA}} \\propto k_{act}^{\\mathrm{Ile}} \\times P_{\\mathrm{tr|Ile}} = k_{act}^{\\mathrm{Ile}} \\times 1 = k_{act}^{\\mathrm{Ile}} $$\n\n对于缬氨酰-腺苷酸中间体 (Val-AMP)，存在两条竞争通路：以速率常数 $k_{tr}$ 转移至tRNA，和通过编辑通路以速率常数 $k_{edit}^{\\mathrm{Val}}$ 进行水解。一个活化的Val分子被转移至tRNA而非被编辑的概率，由这些竞争的一级速率的分支比给出：\n$$ P_{\\mathrm{tr|Val}} = \\frac{k_{tr}}{k_{tr} + k_{edit}^{\\mathrm{Val}}} $$\n错误产物 (Val-tRNA) 形成的总速率与Val的活化速率乘以这个成功转移的概率成正比：\n$$ v_{\\mathrm{Val-tRNA}} \\propto k_{act}^{\\mathrm{Val}} \\times P_{\\mathrm{tr|Val}} = k_{act}^{\\mathrm{Val}} \\frac{k_{tr}}{k_{tr} + k_{edit}^{\\mathrm{Val}}} $$\n\n将这些速率表达式代入错误频率 $\\eta$ 的公式中，比例常数被消去，得到：\n$$ \\eta = \\frac{k_{act}^{\\mathrm{Val}} \\frac{k_{tr}}{k_{tr} + k_{edit}^{\\mathrm{Val}}}}{k_{act}^{\\mathrm{Ile}} + k_{act}^{\\mathrm{Val}} \\frac{k_{tr}}{k_{tr} + k_{edit}^{\\mathrm{Val}}}} $$\n我们已知数值为：$k_{act}^{\\mathrm{Ile}} = 100\\,\\mathrm{s}^{-1}$，$k_{act}^{\\mathrm{Val}} = 10\\,\\mathrm{s}^{-1}$，$k_{tr} = 20\\,\\mathrm{s}^{-1}$，以及 $k_{edit}^{\\mathrm{Val}} = 50\\,\\mathrm{s}^{-1}$。\n首先，我们计算缬氨酸的转移概率：\n$$ P_{\\mathrm{tr|Val}} = \\frac{20}{20 + 50} = \\frac{20}{70} = \\frac{2}{7} $$\n现在我们将这个值和活化速率代入 $\\eta$ 的表达式中：\n$$ \\eta = \\frac{10 \\times \\frac{2}{7}}{100 + 10 \\times \\frac{2}{7}} = \\frac{\\frac{20}{7}}{100 + \\frac{20}{7}} = \\frac{\\frac{20}{7}}{\\frac{700}{7} + \\frac{20}{7}} = \\frac{20}{720} = \\frac{1}{36} $$\n以小数形式表示，$\\eta = 1/36 \\approx 0.027777...$。四舍五入到$4$位有效数字，错误频率为 $0.02778$。\n\n接下来，我们计算每生成一个正确负载的Ile-tRNA产物所消耗的ATP分子的期望数。我们用 $N_{ATP}$ 表示这个量。这是ATP消耗总速率与正确产物Ile-tRNA形成速率之比。\n$$ N_{ATP} = \\frac{\\text{Total Rate of ATP Consumption}}{\\text{Rate of Ile-tRNA Formation}} $$\n根据题意，每次活化事件恰好消耗一个ATP分子，无论氨基酸是Ile还是Val。后续的转移和编辑步骤不消耗额外的ATP。因此，ATP消耗的总速率是两种氨基酸活化速率之和。\n$$ \\text{Total Rate of ATP Consumption} \\propto k_{act}^{\\mathrm{Ile}} + k_{act}^{\\mathrm{Val}} $$\n如前所述，Ile-tRNA的形成速率与Ile的活化速率成正比。\n$$ \\text{Rate of Ile-tRNA Formation} \\propto k_{act}^{\\mathrm{Ile}} $$\n因此，比率 $N_{ATP}$ 为：\n$$ N_{ATP} = \\frac{k_{act}^{\\mathrm{Ile}} + k_{act}^{\\mathrm{Val}}}{k_{act}^{\\mathrm{Ile}}} = 1 + \\frac{k_{act}^{\\mathrm{Val}}}{k_{act}^{\\mathrm{Ile}}} $$\n活化后步骤的速率（$k_{tr}$ 和 $k_{edit}^{\\mathrm{Val}}$）没有出现在这个表达式中，因为它们既不影响初始活化事件的总数（这是ATP消耗的唯一来源），也不影响由初始Ile活化形成的正确产物的数量。代入给定数值：\n$$ N_{ATP} = 1 + \\frac{10}{100} = 1 + 0.1 = 1.1 $$\n按要求四舍五入到$4$位有效数字，该值为 $1.100$。", "answer": "$$ \\boxed{ \\begin{pmatrix} 0.02778 & 1.100 \\end{pmatrix} } $$", "id": "2846576"}]}