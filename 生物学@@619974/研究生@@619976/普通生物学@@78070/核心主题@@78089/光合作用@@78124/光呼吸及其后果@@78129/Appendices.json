{"hands_on_practices": [{"introduction": "光呼吸过程始于 RuBisCO 酶的一个关键“选择”。这个练习将带你深入 RuBisCO 的核心，运用稳态酶动力学原理，从第一性原理推导出在特定底物浓度下，羧化与氧化反应速率的比率。通过这个计算 [@problem_id:2823056]，你将能够量化决定植物碳固定效率的这一根本性权衡。", "problem": "核酮糖-1,5-二磷酸羧化酶/加氧酶 (RuBisCO) 在单一活性位点催化两种相互排斥的替代反应：利用二氧化碳对核酮糖-1,5-二磷酸 (RuBP) 进行羧化反应，以及利用分子氧对 RuBP 进行加氧反应。假设对于竞争同一活性位点的两种替代底物，遵循稳态米氏动力学 (Michaelis-Menten kinetics) 和快速平衡结合，无底物抑制，且总酶浓度固定。令 $C$ 表示游离的基质二氧化碳浓度，$O$ 表示游离的基质分子氧浓度。令 $K_c$ 和 $K_o$ 分别为二氧化碳和氧气的米氏常数，令 $k_{cat}^c$ 和 $k_{cat}^o$ 分别为羧化和加氧反应的催化转换数。\n\n在 $25\\,^{\\circ}\\mathrm{C}$ 时，考虑以下适用于高等植物 RuBisCO 和基质环境的生理学合理参数：\n- $K_c = 12\\ \\mu\\mathrm{M}$，\n- $K_o = 350\\ \\mu\\mathrm{M}$，\n- $k_{cat}^c = 3.2\\ \\mathrm{s}^{-1}$，\n- $k_{cat}^o = 1.0\\ \\mathrm{s}^{-1}$，\n- $C = 10\\ \\mu\\mathrm{M}$，\n- $O = 260\\ \\mu\\mathrm{M}$。\n\n仅使用单一活性位点竞争性替代底物的基本稳态酶动力学和总酶守恒，从第一性原理推导羧化速率 $v_c$ 和加氧速率 $v_o$ 的表达式，并由此得到无量纲比率 $v_o/v_c$ 和发生加氧反应的 RuBP 转换分数，定义为 $v_o/(v_c+v_o)$。\n\n使用上述参数计算数值。以无量纲小数形式报告最终答案，并四舍五入至四位有效数字。按照以下顺序给出您的答案：加氧反应分数，然后是 $v_o/v_c$。", "solution": "所提出的问题是一个定义明确、有科学依据的稳态酶动力学练习。它要求使用生理上真实的参数，为一个在单一活性位点催化两种竞争反应的酶（RuBisCO）推导反应速率。该问题是有效的，并且可以从第一性原理解决。\n\n令 $E$ 代表酶的活性位点，假设它已被其第一底物核酮糖-1,5-二磷酸 (RuBP) 饱和。令 $C$ 代表底物二氧化碳，$O$ 代表替代底物分子氧。问题指出 $C$ 和 $O$ 是相互排斥的，竞争同一个活性位点。在快速平衡假设下，动力学方案如下：\n\n羧化反应：\n$$E + C \\rightleftharpoons EC \\xrightarrow{k_{cat}^c} E + \\text{Products}_c$$\n加氧反应：\n$$E + O \\rightleftharpoons EO \\xrightarrow{k_{cat}^o} E + \\text{Products}_o$$\n\n此处，$EC$ 和 $EO$ 是酶-底物复合物，$k_{cat}^c$ 和 $k_{cat}^o$ 分别是羧化和加氧反应的催化转换数。快速平衡假设意味着底物的结合和解离远快于催化步骤。因此，米氏常数 $K_c$ 和 $K_o$ 分别等同于其各自酶-底物复合物的解离常数：\n$$K_c = \\frac{[E][C]}{[EC]}$$\n$$K_o = \\frac{[E][O]}{[EO]}$$\n其中 $[E]$、$[C]$、$[O]$、$[EC]$ 和 $[EO]$ 分别是游离酶、游离二氧化碳、游离氧气、酶-CO$_2$ 复合物和酶-O$_2$ 复合物的浓度。\n\n酶活性位点的总浓度 $[E_T]$ 是守恒的。在稳态下，总酶浓度是游离酶和酶-底物复合物浓度之和：\n$$[E_T] = [E] + [EC] + [EO]$$\n\n我们可以使用解离常数，用游离酶浓度 $[E]$ 来表示复合物的浓度：\n$$[EC] = \\frac{[E][C]}{K_c}$$\n$$[EO] = \\frac{[E][O]}{K_o}$$\n\n将这些代入酶守恒方程：\n$$[E_T] = [E] + \\frac{[E][C]}{K_c} + \\frac{[E][O]}{K_o} = [E] \\left( 1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o} \\right)$$\n求解游离酶浓度 $[E]$：\n$$[E] = \\frac{[E_T]}{1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o}}$$\n\n羧化反应的速率 $v_c$ 是从 $EC$ 复合物生成产物的速率。加氧反应的速率 $v_o$ 是从 $EO$ 复合物生成产物的速率。\n$$v_c = k_{cat}^c [EC]$$\n$$v_o = k_{cat}^o [EO]$$\n\n将用 $[E]$ 表示的 $[EC]$ 表达式代入，然后再将用 $[E_T]$ 表示的 $[E]$ 表达式代入，我们推导出羧化反应的速率方程 $v_c$：\n$$v_c = k_{cat}^c \\left( \\frac{[E][C]}{K_c} \\right) = \\frac{k_{cat}^c [C]}{K_c} \\left( \\frac{[E_T]}{1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o}} \\right)$$\n$$v_c = \\frac{k_{cat}^c [E_T] [C]}{K_c \\left( 1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o} \\right)}$$\n同样，我们推导出加氧反应的速率方程 $v_o$：\n$$v_o = k_{cat}^o \\left( \\frac{[E][O]}{K_o} \\right) = \\frac{k_{cat}^o [O]}{K_o} \\left( \\frac{[E_T]}{1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o}} \\right)$$\n$$v_o = \\frac{k_{cat}^o [E_T] [O]}{K_o \\left( 1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o} \\right)}$$\n这些就是从第一性原理推导出的所需反应速率表达式。\n\n接下来，我们推导无量纲比率 $v_o/v_c$。将 $v_o$ 的表达式除以 $v_c$ 的表达式，包含 $[E_T]$ 的项和分母项会消去：\n$$\\frac{v_o}{v_c} = \\frac{\\frac{k_{cat}^o [E_T] [O]}{K_o \\left( 1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o} \\right)}}{\\frac{k_{cat}^c [E_T] [C]}{K_c \\left( 1 + \\frac{[C]}{K_c} + \\frac{[O]}{K_o} \\right)}} = \\frac{k_{cat}^o [O] / K_o}{k_{cat}^c [C] / K_c}$$\n$$\\frac{v_o}{v_c} = \\left(\\frac{k_{cat}^o}{k_{cat}^c}\\right) \\left(\\frac{K_c}{K_o}\\right) \\left(\\frac{[O]}{[C]}\\right)$$\n\n最后，我们推导发生加氧反应的 RuBP 转换分数 $v_o/(v_c+v_o)$ 的表达式。这可以用比率 $v_o/v_c$ 来表示：\n$$\\frac{v_o}{v_c+v_o} = \\frac{v_o/v_c}{(v_c+v_o)/v_c} = \\frac{v_o/v_c}{1 + v_o/v_c}$$\n代入推导出的 $v_o/v_c$ 表达式：\n$$\\frac{v_o}{v_c+v_o} = \\frac{\\frac{k_{cat}^o [O] / K_o}{k_{cat}^c [C] / K_c}}{1 + \\frac{k_{cat}^o [O] / K_o}{k_{cat}^c [C] / K_c}} = \\frac{k_{cat}^o [O] / K_o}{k_{cat}^c [C] / K_c + k_{cat}^o [O] / K_o}$$\n\n现在，我们使用所提供的参数计算数值：\n$K_c = 12\\ \\mu\\mathrm{M}$\n$K_o = 350\\ \\mu\\mathrm{M}$\n$k_{cat}^c = 3.2\\ \\mathrm{s}^{-1}$\n$k_{cat}^o = 1.0\\ \\mathrm{s}^{-1}$\n$[C] = 10\\ \\mu\\mathrm{M}$\n$[O] = 260\\ \\mu\\mathrm{M}$\n\n首先，我们计算比率 $v_o/v_c$：\n$$\\frac{v_o}{v_c} = \\left(\\frac{1.0}{3.2}\\right) \\left(\\frac{12}{350}\\right) \\left(\\frac{260}{10}\\right) = (0.3125) \\left(\\frac{12}{350}\\right) (26) = \\frac{0.3125 \\times 12 \\times 26}{350} = \\frac{97.5}{350} = \\frac{39}{140}$$\n作为小数，$\\frac{v_o}{v_c} \\approx 0.2785714$。四舍五入到四位有效数字，结果是 $0.2786$。\n\n接下来，我们计算加氧反应的分数。令 $R = v_o/v_c = 39/140$。\n$$\\frac{v_o}{v_c+v_o} = \\frac{R}{1+R} = \\frac{39/140}{1 + 39/140} = \\frac{39/140}{179/140} = \\frac{39}{179}$$\n作为小数，$\\frac{39}{179} \\approx 0.2178770$。四舍五入到四位有效数字，结果是 $0.2179$。\n\n问题要求按特定顺序给出答案：首先是加氧反应的分数，其次是比率 $v_o/v_c$。\n加氧反应的分数：$0.2179$。\n比率 $v_o/v_c$：$0.2786$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0.2179 & 0.2786\n\\end{pmatrix}\n}\n$$", "id": "2823056"}, {"introduction": "当 RuBisCO 选择了氧化途径后，细胞必须付出一系列能量代价来补救碳损失。本练习 [@problem_id:2823016] 侧重于光呼吸补救途径的生物能量学，要求你对整个代谢途径中的 ATP 和 NAD(P)H 消耗进行精确的化学计量核算。完成此练习有助于你深刻理解为何光呼吸被认为是一个“浪费”能量的过程。", "problem": "一个进行光合作用的叶片细胞通过核酮糖-1,5-二磷酸羧化/加氧酶 (Rubisco) 来固定碳。在一次加氧事件中，Rubisco将一个核酮糖-1,5-二磷酸分子转化为一个3-磷酸甘油酸 ($\\text{3-PGA}$) 分子和一个2-磷酸乙醇酸 ($\\text{2-PG}$) 分子。植物通过跨越叶绿体、过氧化物酶体和线粒体的光呼吸途径从$\\text{2-PG}$中补救碳。考虑以下关于将$\\text{2-PG}$补救为$\\text{3-PGA}$以及重吸收释放的氨的核心反应的、有实验支持的化学计量事实：\n- 两个$\\text{2-PG}$分子通过光呼吸循环共同转化为一个$\\text{3-PGA}$分子，同时释放一个二氧化碳 ($\\text{CO}_2$) 分子和一个氨 ($\\text{NH}_3$) 分子。\n- 在叶绿体中，甘油酸激酶将一个甘油酸分子磷酸化为一个$\\text{3-PGA}$分子，每磷酸化一个甘油酸分子消耗$1$个三磷酸腺苷 (ATP)。\n- 在线粒体中，甘氨酸脱羧酶复合体 (GDC) 与丝氨酸羟甲基转移酶一起，将两个甘氨酸分子转化为一个丝氨酸分子，释放$1$个$\\text{CO}_2$分子和$1$个$\\text{NH}_3$分子，并产生$1$个还原型烟酰胺腺嘌呤二核苷酸 (NADH) 分子。\n- 在过氧化物酶体中，羟基丙酮酸还原酶将一个羟基丙酮酸分子还原为一个甘油酸分子，消耗$1$个NADH分子。\n- 在叶绿体中，谷氨酰胺合成酶 (GS) 将$\\text{NH}_3$同化为谷氨酰胺，每同化一个$\\text{NH}_3$消耗$1$个ATP。然后，谷氨酸合酶 (GOGAT) 将谷氨酰胺和2-酮戊二酸转化为两个谷氨酸分子，每重吸收一个$\\text{NH}_3$消耗$2$个还原型铁氧还蛋白 ($\\text{Fd}_{\\text{red}}$)。出于能量衡算的目的，将$2$个还原型铁氧还蛋白等同于$1$个还原型烟酰胺腺嘌呤二核苷酸磷酸 (NADPH) 氧化为$\\text{NADP}^+$。\n作如下假设以进行能量簿记：\n- 忽略代谢物运输、细胞器氧化还原穿梭和过氧化氢解毒的能量成本。\n- 假设GDC产生的$1$个NADH被羟基丙酮酸还原酶定量使用，使得这两个步骤合起来的$\\text{NAD(P)H}$净变化为零。\n仅从上述信息以及化学计量和能量耦合的核心定义出发，推导将$2$个$\\text{2-PG}$分子通过GS/GOGAT循环转化为$1$个$\\text{3-PGA}$分子并重吸收氨所关联的净ATP成本和净$\\text{NAD(P)H}$成本。然后，将$2$个$\\text{2-PG}$分子的净成本除以$2$，计算单次Rubisco加氧事件的净能量成本。\n为了表示一个单值答案，定义$\\xi$为氧化$1$个NADPH分子的ATP等效成本（即，在所关注的生理条件下，与一个NADPH氧化在能量上等效的ATP水解数目）。令$C(\\xi)$表示每次加氧事件以ATP等效值为单位的总能量成本，其中ATP水解成本的系数为$1$，NADPH氧化的系数为$\\xi$。\n$C(\\xi)$的闭合形式解析表达式是什么？请以单个解析表达式的形式提供您的最终答案。不需要对$\\xi$进行数值评估，也无需四舍五入。", "solution": "问题陈述已经过验证，被认为是科学上可靠、自洽且适定的。它代表了植物生物能量学中的一个标准问题。因此，可以进行严谨、分步的解答推导，现呈现如下。\n\n目标是确定单次Rubisco加氧事件的总能量成本$C(\\xi)$（以ATP等效值为单位）。计算将分三个连续阶段进行：\n$1$. 将$2$个$2$-磷酸乙醇酸 ($\\text{2-PG}$) 分子补救为$1$个$3$-磷酸甘油酸 ($\\text{3-PGA}$) 分子（包括重吸收释放的氨 ($\\text{NH}_3$)）的能量消耗 (ATP) 和还原力 (NAD(P)H) 的化学计量核算。\n$2$. 确定单次Rubisco加氧事件（产生一个$\\text{2-PG}$分子）的净能量成本。\n$3$. 将总成本表述为一个函数$C(\\xi)$，其中$\\xi$是氧化一个NADPH分子的ATP等效成本。\n\n**阶段1：补救$2$个$\\text{2-PG}$分子的能量成本**\n\n根据给定条件，整个过程是将$2$个$\\text{2-PG}$分子转化为$1$个$\\text{3-PGA}$分子，同时释放$1$个$\\text{CO}_2$分子和$1$个$\\text{NH}_3$分子。我们根据所提供的反应步骤，将此转化所需的能量输入相加。\n\n- **ATP消耗**：在该途径的两个不同点消耗ATP。\n    $1$. **甘油酸激酶**：该途径从$2$个$\\text{2-PG}$分子产生$1$个甘油酸分子。此甘油酸随后被磷酸化为$\\text{3-PGA}$。问题指出此反应消耗$1$个ATP分子。\n    $$1 \\; \\text{glycerate} + 1 \\; \\text{ATP} \\rightarrow 1 \\; \\text{3-PGA} + 1 \\; \\text{ADP}$$\n    来自甘油酸激酶的成本：$1$个ATP。\n    $2$. **谷氨酰胺合成酶 (GS)**：该途径释放$1$个$\\text{NH}_3$分子，必须将其重吸收。由GS催化的第一步，每吸收一个$\\text{NH}_3$分子消耗$1$个ATP分子。\n    $$\\text{NH}_3 + \\text{glutamate} + 1 \\text{ ATP} \\rightarrow \\text{glutamine} + \\text{ADP} + \\text{P}_\\text{i}$$\n    来自GS的成本：$1$个ATP。\n\n补救$2$个$\\text{2-PG}$分子的总ATP成本，记为$C_{\\text{ATP},2}$，是这些成本的总和：\n$$C_{\\text{ATP},2} = 1 + 1 = 2 \\; \\text{ATP}$$\n\n- **NAD(P)H消耗**：我们必须核算还原当量的净平衡。\n    $1$. **GDC/HPR氧化还原平衡**：甘氨酸脱羧酶复合体 (GDC) 产生$1$个NADH分子。羟基丙酮酸还原酶 (HPR) 消耗$1$个NADH分子。问题提供了一个关键的简化假设：“假设GDC产生的$1$个NADH被羟基丙酮酸还原酶定量使用，使得这两个步骤合起来的$\\text{NAD(P)H}$净变化为零。”因此，这两步的净成本为$0$。\n    $2$. **谷氨酸合酶 (GOGAT)**：氨重吸收的第二步，由GOGAT催化，每同化一个$\\text{NH}_3$分子消耗$2$个还原型铁氧还蛋白 ($\\text{Fd}_{\\text{red}}$) 分子。\n    $$\\text{glutamine} + \\text{2-oxoglutarate} + 2 \\; \\text{Fd}_{\\text{red}} \\rightarrow 2 \\; \\text{glutamate} + 2 \\; \\text{Fd}_{\\text{ox}}$$\n    问题提供了能量等价关系：$2$个$\\text{Fd}_{\\text{red}}$分子等同于$1$个NADPH分子。因此，GOGAT步骤产生的成本相当于氧化$1$个NADPH。\n    来自GOGAT的成本：$1$个NADPH。\n\n补救$2$个$\\text{2-PG}$分子的还原力总净成本，记为$C_{\\text{NADPH},2}$，是：\n$$C_{\\text{NADPH},2} = 1 \\; \\text{NADPH}$$\n\n总之，将$2$个$\\text{2-PG}$分子转化为$1$个$\\text{3-PGA}$分子并重吸收氨，需要消耗$2$个ATP和$1$个NADPH。\n\n**阶段2：单次Rubisco加氧事件的能量成本**\n\n单次Rubisco加氧事件产生$1$个$\\text{2-PG}$分子。问题明确指示通过将阶段1中推导出的成本除以$2$来求得每次加氧事件的成本。\n\n- 每次加氧事件的净ATP成本 ($C_{\\text{ATP,oxy}}$)：\n$$C_{\\text{ATP,oxy}} = \\frac{C_{\\text{ATP},2}}{2} = \\frac{2}{2} = 1 \\; \\text{ATP}$$\n\n- 每次加氧事件的净NADPH成本 ($C_{\\text{NADPH,oxy}}$)：\n$$C_{\\text{NADPH,oxy}} = \\frac{C_{\\text{NADPH},2}}{2} = \\frac{1}{2} \\; \\text{NADPH}$$\n\n因此，补救一次加氧事件产物的成本为$1$个ATP和$\\frac{1}{2}$个NADPH。\n\n**阶段3：以ATP等效值为单位的总能量成本，$C(\\xi)$**\n\n每次加氧事件的总能量成本$C(\\xi)$是直接ATP成本与NADPH氧化的ATP等效成本之和。参数$\\xi$表示与$1$个NADPH分子氧化在能量上等效的ATP分子数目。\n\n函数$C(\\xi)$定义为：\n$$C(\\xi) = (\\text{ATP cost}) \\times 1 + (\\text{NADPH cost}) \\times \\xi$$\n代入阶段2推导出的值：\n$$C(\\xi) = C_{\\text{ATP,oxy}} + \\xi \\cdot C_{\\text{NADPH,oxy}}$$\n$$C(\\xi) = 1 + \\xi \\cdot \\frac{1}{2}$$\n\n这就得出了每次加氧事件以ATP等效值为单位的总能量成本的最终解析表达式。\n$$C(\\xi) = 1 + \\frac{1}{2}\\xi$$", "answer": "$$\n\\boxed{1 + \\frac{1}{2}\\xi}\n$$", "id": "2823016"}, {"introduction": "为了全面理解光呼吸的净效应，我们需要将酶动力学和能量消耗整合到一个系统层面的模型中。这个练习 [@problem_id:2823001] 要求你构建一个化学计量模型，该模型将 RuBisCO 的反应比率（$\\phi = v_o / v_c$）作为输入，来计算整个系统的净碳同化速率以及总能量需求。这项实践将使你从分析单个反应提升到模拟和理解整个代谢网络的动态平衡。", "problem": "要求您编写一个完整的程序，用于计算一个包含卡尔文-本森循环、光呼吸以及谷氨酰胺合成酶/谷氨酸合酶 (GS/GOGAT) 循环的最小稳态化学计量模型的净二氧化碳同化量以及叶绿体中三磷酸腺苷 (ATP) 和烟酰胺腺嘌呤二核苷酸磷酸（还原形式）(NADPH) 的需求量。该模型必须将 1,5-二磷酸核酮糖羧化酶/加氧酶 (RuBisCO) 的羧化速率和加氧速率作为主要通量变量，并结合经过充分检验的化学计量学事实，以数学方式推导出总需求量。\n\n使用的基本依据和假设：\n- 将羧化通量定义为 $v_c$，加氧通量定义为 $v_o$，其无量纲比率为 $\\phi = v_o / v_c$。所有通量均为任意但一致的非负速率（单位时间单位面积）；答案中不要求物理单位。\n- RuBisCO 羧化反应：一次事件消耗一分子 1,5-二磷酸核酮糖 (RuBP) 和一分子二氧化碳，形成两分子 3-磷酸甘油酸 ($\\text{3-PGA}$)。因此，每次羧化事件产生 $2$ 分子 3-PGA。\n- RuBisCO 加氧反应：一次事件消耗一分子 RuBP 和一分子氧气，形成一分子 $\\text{3-PGA}$ 和一分子 2-磷酸乙醇酸 ($\\text{2-PG}$)。\n- 光呼吸碳回收：两分子 $\\text{2-PG}$ 通过光呼吸途径转化为一分子甘油酸，后者被磷酸化为一分子 $\\text{3-PGA}$，同时释放一分子二氧化碳和一分子铵。因此，每次加氧事件：\n  - 最终额外回收 $0.5$ 分子 $\\text{3-PGA}$，\n  - 释放 $0.5$ 分子二氧化碳，\n  - 释放 $0.5$ 分子铵。\n- 叶绿体能量和还原当量核算：\n  - 将 $\\text{3-PGA}$ 还原为磷酸丙糖，每分子 $\\text{3-PGA}$ 需要 $1$ 个 ATP 和 $1$ 个 NADPH。\n  - 通过磷酸核酮糖激酶从磷酸丙糖再生 RuBP，每再生一个 RuBP 需要 $1$ 个 ATP；为维持稳态，RuBP 必须以总速率 $v_c + v_o$ 再生。\n  - 甘油酸激酶（叶绿体）每形成一个甘油酸消耗 $1$ 个 ATP；由于每两次加氧反应形成一个甘油酸，这相当于每次加氧事件消耗 $0.5$ 个 ATP。\n  - 谷氨酰胺合成酶（叶绿体同工酶 GS2）每同化一个铵消耗 $1$ 个 ATP；由于每次加氧反应产生 $0.5$ 个铵，这相当于每次加氧消耗 $0.5$ 个 ATP。\n  - 谷氨酸合酶 (GOGAT) 每同化一个铵消耗 $2$ 个铁氧还蛋白（还原态）；将其计为每个铵消耗 $1$ 个 NADPH 当量。由于每次加氧反应产生 $0.5$ 个铵，这相当于每次加氧消耗 $0.5$ 个 NADPH 当量。\n- 在稳态下，叶绿体-光呼吸系统的净二氧化碳同化量定义为 $A = v_c - 0.5\\,v_o$，忽略线粒体的日间呼吸。\n\n任务：\n1. 根据上述事实，推导出以下各项关于 $v_c$ 和 $v_o$（并因此表示为 $\\phi = v_o / v_c$ 的函数）的表达式：\n   - 每单位时间必须被还原的 $3$-PGA 分子总数。\n   - 每单位时间的叶绿体总 ATP 需求量。\n   - 每单位时间的叶绿体总 NADPH 需求量。\n   - 每单位时间的净二氧化碳同化量 $A$。\n   所有表达式必须直接源于所述的化学计量关系，不得引入任何额外假设。\n2. 实现一个程序，为下方的每个测试用例计算三个量（均为实数）：\n   - $A$，\n   - 总 ATP 需求量，\n   - 总 NADPH 需求量。\n   使用 $v_o = \\phi \\, v_c$ 来消去 $v_o$。\n\n测试套件：\n- 用例 $1$：$v_c = 100.0$, $\\phi = 0.0$。\n- 用例 $2$：$v_c = 100.0$, $\\phi = 2.0$。\n- 用例 $3$：$v_c = 50.0$, $\\phi = 1.0$。\n- 用例 $4$：$v_c = 0.0$, $\\phi = 1.0$。\n- 用例 $5$：$v_c = 80.0$, $\\phi = 0.2$。\n- 用例 $6$：$v_c = 40.0$, $\\phi = 3.0$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含所有用例的结果列表，每个用例的结果为一个列表 $[A,\\mathrm{ATP},\\mathrm{NADPH}]$，顺序与测试套件中的顺序相同。具体来说，打印单行，格式如下\n  - $[[A_1,\\mathrm{ATP}_1,\\mathrm{NADPH}_1],[A_2,\\mathrm{ATP}_2,\\mathrm{NADPH}_2],\\dots,[A_6,\\mathrm{ATP}_6,\\mathrm{NADPH}_6]]$。\n- 不应打印任何单位或附加文本；所有值都是纯数字，单位为一致的任意速率单位。", "solution": "所述问题是代谢化学计量学中一个明确定义的练习。它为卡尔文-本森循环、光呼吸及相关的氮同化作用提供了一套已确立但经过简化的反应化学计量关系。所有参数和假设都已明确定义，使得该问题具有科学依据、客观且可解。因此，该问题被认定为有效。我们接下来推导所需数量。\n\n主要通量是 RuBisCO 的羧化速率 $v_c$ 和 RuBisCO 的加氧速率 $v_o$。它们的比率由 $\\phi = v_o / v_c$ 给出。所有派生量都必须用这些基本速率来表示。\n\n**1. 3-磷酸甘油酸 (3-PGA) 总生成速率的推导**\n\n3-PGA 的合成通过源自 RuBisCO 活性的两条途径发生。\n- **羧化反应**：对于每次以速率 $v_c$ 发生的羧化事件，会产生两分子 3-PGA。来自该来源的 3-PGA 通量为 $2 v_c$。\n- **加氧反应**：对于每次以速率 $v_o$ 发生的加氧事件，会直接产生一分子 3-PGA，并同时产生一分子 2-磷酸乙醇酸 (2-PG)。2-PG 进入光呼吸途径。根据问题陈述，处理两分子 2-PG 会回收一分子 3-PGA（通过叶绿体中的甘油酸磷酸化）。因此，每分子 2-PG 产生 $0.5$ 分子 3-PGA。来自该回收途径的 3-PGA 通量为 $0.5 v_o$。\n\n3-PGA 的总生成速率，我们记为 $V_{PGA,prod}$，是所有来源的产量之和：\n$$ V_{PGA,prod} = (\\text{源自羧化}) + (\\text{直接源自加氧}) + (\\text{从 2-PG 回收}) $$\n$$ V_{PGA,prod} = (2 v_c) + (1 v_o) + (0.5 v_o) = 2 v_c + 1.5 v_o $$\n在稳态下，为维持代谢物池，3-PGA 的还原速率必须等于其生成速率。因此，所需的 3-PGA 总还原速率为 $2 v_c + 1.5 v_o$。\n\n**2. 叶绿体总 ATP 需求量的推导**\n\n总 ATP 需求量 $V_{ATP}$ 是几个叶绿体过程消耗的 ATP 之和。\n- **3-PGA 的还原**：将每分子 3-PGA 还原为磷酸丙糖会消耗一分子 ATP。此步骤的总 ATP 成本为：\n  $$ \\text{ATP}_{\\text{PGA-red}} = 1 \\cdot V_{PGA,prod} = 1 \\cdot (2 v_c + 1.5 v_o) = 2 v_c + 1.5 v_o $$\n- **RuBP 的再生**：为维持稳态，1,5-二磷酸核酮糖 (RuBP) 的再生速率必须与其被 RuBisCO 消耗的速率相同。RuBP 的总消耗速率为 $v_c + v_o$。再生一分子 RuBP 消耗一分子 ATP。再生的总 ATP 成本为：\n  $$ \\text{ATP}_{\\text{RuBP-reg}} = 1 \\cdot (v_c + v_o) = v_c + v_o $$\n- **光呼吸特有的成本**：问题指定了叶绿体中与光呼吸相关的两个额外消耗 ATP 的步骤。\n  - **甘油酸激酶**：甘油酸（从光呼吸中回收）的磷酸化每次加氧事件消耗 $0.5$ 个 ATP。此 ATP 消耗的总速率为 $0.5 v_o$。\n  - **谷氨酰胺合成酶 (GS2)**：同化光呼吸过程中释放的铵，每次加氧事件消耗 $0.5$ 个 ATP。此 ATP 消耗的总速率为 $0.5 v_o$。\n\n将所有分量相加，得到叶绿体的总 ATP 需求：\n$$ V_{ATP} = \\text{ATP}_{\\text{PGA-red}} + \\text{ATP}_{\\text{RuBP-reg}} + \\text{ATP}_{\\text{Glycerate-kin}} + \\text{ATP}_{\\text{GS2}} $$\n$$ V_{ATP} = (2 v_c + 1.5 v_o) + (v_c + v_o) + (0.5 v_o) + (0.5 v_o) $$\n$$ V_{ATP} = (2 + 1)v_c + (1.5 + 1 + 0.5 + 0.5)v_o $$\n$$ V_{ATP} = 3 v_c + 3.5 v_o $$\n\n**3. 叶绿体总 NADPH 需求量的推导**\n\n总 NADPH 需求量 $V_{NADPH}$ 是叶绿体中两个过程消耗的 NADPH 之和。\n- **3-PGA 的还原**：将每分子 3-PGA 还原会消耗一分子 NADPH。此步骤的总 NADPH 成本为：\n  $$ \\text{NADPH}_{\\text{PGA-red}} = 1 \\cdot V_{PGA,prod} = 1 \\cdot (2 v_c + 1.5 v_o) = 2 v_c + 1.5 v_o $$\n- **光呼吸特有的成本**：问题指定了一个与氮同化相关的消耗 NADPH 的步骤。\n  - **谷氨酸合酶 (GOGAT)**：通过 GS/GOGAT循环同化铵需要相当于每次加氧事件消耗 $0.5$ 个 NADPH 的还原力。此 NADPH 消耗的总速率为 $0.5 v_o$。\n\n将这些分量相加，得到叶绿体的总 NADPH 需求：\n$$ V_{NADPH} = \\text{NADPH}_{\\text{PGA-red}} + \\text{NADPH}_{\\text{GOGAT}} $$\n$$ V_{NADPH} = (2 v_c + 1.5 v_o) + (0.5 v_o) $$\n$$ V_{NADPH} = 2 v_c + (1.5 + 0.5)v_o $$\n$$ V_{NADPH} = 2 v_c + 2 v_o $$\n\n**4. 净二氧化碳同化量**\n\n净 CO$_2$ 同化速率 $A$ 定义为羧化反应吸收的 CO$_2$ 速率减去光呼吸释放的 CO$_2$ 速率。\n- CO$_2$ 吸收速率为 $v_c$。\n- CO$_2$ 释放速率被设定为每次加氧事件释放 $0.5$ 分子，总速率为 $0.5 v_o$。\n因此，净同化速率为：\n$$ A = v_c - 0.5 v_o $$\n\n**5. 以 $v_c$ 和 $\\phi$ 表示的最终表达式**\n\n为获得用于计算的最终表达式，我们将 $v_o = \\phi v_c$ 代入上面推导出的方程中。\n\n- **净同化量 ($A$)**：\n  $$ A(v_c, \\phi) = v_c - 0.5 (\\phi v_c) = v_c(1 - 0.5 \\phi) $$\n- **总 ATP 需求量 ($V_{ATP}$)**：\n  $$ V_{ATP}(v_c, \\phi) = 3 v_c + 3.5 (\\phi v_c) = v_c(3 + 3.5 \\phi) $$\n- **总 NADPH 需求量 ($V_{NADPH}$)**：\n  $$ V_{NADPH}(v_c, \\phi) = 2 v_c + 2 (\\phi v_c) = v_c(2 + 2 \\phi) $$\n\n这些方程为实现提供了所需的数学模型。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport sys\nimport io\n\ndef solve():\n    \"\"\"\n    Computes net CO2 assimilation (A), total ATP demand, and total NADPH\n    demand for a stoichiometric model of photosynthesis and photorespiration.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple (vc, phi).\n    test_cases = [\n        (100.0, 0.0),\n        (100.0, 2.0),\n        (50.0, 1.0),\n        (0.0, 1.0),\n        (80.0, 0.2),\n        (40.0, 3.0),\n    ]\n\n    results = []\n    for vc, phi in test_cases:\n        # vc: carboxylation flux\n        # phi: ratio of oxygenation to carboxylation flux (vo/vc)\n        \n        # Calculate oxygenation flux from vc and phi\n        vo = vc * phi\n        \n        # 1. Net carbon dioxide assimilation (A)\n        # A = vc - 0.5 * vo\n        A = vc * (1.0 - 0.5 * phi)\n        \n        # 2. Total chloroplastic ATP demand\n        # ATP_demand = 3 * vc + 3.5 * vo\n        ATP_demand = vc * (3.0 + 3.5 * phi)\n        \n        # 3. Total chloroplastic NADPH demand\n        # NADPH_demand = 2 * vc + 2 * vo\n        NADPH_demand = vc * (2.0 + 2.0 * phi)\n\n        results.append([A, ATP_demand, NADPH_demand])\n\n    # Build the final output string exactly as specified.\n    # Format: [[A1,ATP1,NADPH1],[A2,ATP2,NADPH2],...]\n    # This avoids any standard library dependencies like 'json' and\n    # gives full control over the string representation, preventing\n    # unwanted whitespace.\n    case_strings = []\n    for case_result in results:\n        # Format each inner list: [val1,val2,val3]\n        case_str = f\"[{case_result[0]},{case_result[1]},{case_result[2]}]\"\n        case_strings.append(case_str)\n    \n    # Join the inner lists and enclose in an outer list: [[...],[...]]\n    final_output = f\"[{','.join(case_strings)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output)\n\n# To ensure the code runs idempotently without side-effects in some execution\n# environments, we can redirect stdout during the test to verify the output format.\n# This part is for self-testing and not strictly required by the prompt, but good practice.\n# The final call to solve() will print to standard output as required.\nif __name__ == '__main__':\n    # Keep the original stdout\n    original_stdout = sys.stdout\n    # Redirect stdout to a string buffer\n    sys.stdout = captured_output = io.StringIO()\n\n    solve()\n\n    # Get the output from the buffer\n    output_str = captured_output.getvalue().strip()\n\n    # Restore original stdout\n    sys.stdout = original_stdout\n\n    # Now print the captured output to the actual console\n    print(output_str)\n\n```", "id": "2823001"}]}