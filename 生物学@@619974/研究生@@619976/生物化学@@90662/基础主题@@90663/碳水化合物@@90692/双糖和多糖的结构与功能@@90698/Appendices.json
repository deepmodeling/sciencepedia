{"hands_on_practices": [{"introduction": "在糖生物化学中，精确确定一个寡糖的完整结构——包括其单糖组成、连接位点和立体化学——是一项核心任务。核磁共振（NMR）和质谱（MS）是完成这项任务最强大的两种分析技术。本练习 [@problem_id:2556518] 将引导你像一位结构生物化学家一样，通过解读一系列模拟的实验数据，来推断一个未知双糖的糖苷键构型和连接位置，从而掌握从复杂光谱中提取精确结构信息的基本技能。", "problem": "一个由两个D-己吡喃糖单元组成的未知二糖通过核磁共振（NMR）和串联质谱（MS/MS）进行结构表征。为了简化异头分析，首先将样品的还原端还原为相应的糖醇。请考虑以下解析的基础原理：(i) 六元环中邻位质子间的三键标量耦合取决于连接它们的二面角，这由 Karplus 关系描述；(ii) 糖苷键的形成会扰动电子环境，通常导致碳-13 NMR谱中，与同一环内未取代的位置相比，取代位点的碳发生低场位移；(iii) 在寡糖的碰撞诱导解离中，糖苷键断裂产生 B/Y 离子，而还原端残基上的跨环断裂产生 $^{i,j}A$/$^{i,j}X$ 离子，这些离子的存在与否取决于连接位置。\n\n您获得以下基于实验的观察结果：\n\n- 在一维质子谱中观察到一个异头质子信号，位于 $\\delta \\, 5.38\\,\\mathrm{ppm}$，呈现为双重峰，耦合常数为 $J_{1,2} = 3.6\\,\\mathrm{Hz}$。异核单量子相干谱（HSQC）显示其直接相连的碳位于 $\\delta \\, 99.8\\,\\mathrm{ppm}$，这与一个被糖苷键取代的残基的异头碳一致。旋转坐标系奥弗豪泽效应谱（ROESY）显示，该异头质子与同一残基上指定为 H-$3$ 的质子之间存在核奥弗豪泽效应。\n- 对于还原后的残基（即原还原端），异核单量子相干谱（HSQC）显示 C-$4$ 位于 $\\delta \\, 80.2\\,\\mathrm{ppm}$，其直接相连的质子位于 $\\delta \\, 3.59\\,\\mathrm{ppm}$，而 C-$6$ 的共振峰位于 $\\delta \\, 61.8\\,\\mathrm{ppm}$。异核多键相关谱（HMBC）显示，从位于 $\\delta \\, 5.38\\,\\mathrm{ppm}$ 的异头质子到位于 $\\delta \\, 80.2\\,\\mathrm{ppm}$ 的碳存在一个三键相关，但与位于 $\\delta \\, 61.8\\,\\mathrm{ppm}$ 的碳没有远程相关。\n- 天然二糖的正离子电喷雾电离产生一个钠加合物分子离子，其 $m/z \\, 365.11$ 值与约 $342.12\\,\\mathrm{Da}$ 的中性质量一致。对 $m/z \\, 365.11$ 离子的碰撞诱导解离产生一个显著的跨环裂解碎片，标记为 $^{0,2}A_{\\mathrm{red}}$，归属于还原残基，而在噪音水平之上未观察到 $^{0,3}A_{\\mathrm{red}}$ 碎片。存在与己糖–己糖组成一致的诊断性糖苷裂解碎片，但它们本身不能区分连接位置。\n\n哪种结构最符合原始（未还原）二糖的 NMR 和 MS/MS 综合证据？\n\nA. $\\alpha$-D-Glcp-$(1\\rightarrow 4)$-D-Glcp (麦芽糖)\n\nB. $\\beta$-D-Glcp-$(1\\rightarrow 4)$-D-Glcp (纤维二糖)\n\nC. $\\alpha$-D-Glcp-$(1\\rightarrow 6)$-D-Glcp (异麦芽糖)\n\nD. $\\beta$-D-Glcp-$(1\\rightarrow 6)$-D-Glcp (龙胆二糖)", "solution": "对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- **二糖组成：** 两个D-己吡喃糖单元。\n- **样品制备：** 将二糖的还原端还原，形成用于NMR分析的糖醇。\n- **基本原理：**\n    - (i) 六元环中邻位质子耦合 ($^3J$) 的 Karplus 关系。\n    - (ii) 糖苷取代引起的 $^{13}$C 化学位移的低场扰动。\n    - (iii) 寡糖的诊断性碰撞诱导解离 (CID) 裂解模式 (B/Y, A/X离子)。\n- **NMR数据（针对还原样品）：**\n    - 一个异头质子信号：$\\delta = 5.38\\,\\mathrm{ppm}$。\n    - 异头质子耦合：双重峰，$J_{1,2} = 3.6\\,\\mathrm{Hz}$。\n    - 异头碳化学位移 (HSQC)：$\\delta = 99.8\\,\\mathrm{ppm}$。\n    - ROESY：在异头质子 (H-$1'$) 和同一非还原残基的 H-$3'$ 质子之间观察到核奥弗豪泽效应 (NOE)。\n    - 还原残基（糖醇）的归属：C-$4$ 位于 $\\delta = 80.2\\,\\mathrm{ppm}$ (相连的 H 位于 $\\delta = 3.59\\,\\mathrm{ppm}$); C-$6$ 位于 $\\delta = 61.8\\,\\mathrm{ppm}$。\n    - HMBC：从异头质子 ($\\delta = 5.38\\,\\mathrm{ppm}$) 到位于 $\\delta = 80.2\\,\\mathrm{ppm}$ 的碳 (糖醇的 C-$4$) 存在一个三键相关。未观察到与位于 $\\delta = 61.8\\,\\mathrm{ppm}$ 的碳 (糖醇的 C-$6$) 的相关。\n- **MS/MS数据（针对天然样品）：**\n    - 分子离子：钠加合物 $[\\text{M}+\\text{Na}]^+$，其 $m/z = 365.11$。\n    - 中性质量与己糖-己糖二糖 ($C_{12}H_{22}O_{11}$，摩尔质量 $342.30\\,\\mathrm{g/mol}$) 一致。\n    - 对 $m/z = 365.11$ 离子的 CID 产生一个源自还原端残基的显著跨环碎片 $^{0,2}A_{\\mathrm{red}}$。\n    - 未观察到 $^{0,3}A_{\\mathrm{red}}$ 跨环碎片。\n\n**步骤2：使用提取的已知条件进行验证**\n- **科学依据：** 该问题坚实地建立在使用核磁共振 (NMR) 光谱和串联质谱 (MS/MS) 进行结构解析的既定原则之上，这些是碳水化合物化学中的标准技术。所提供的数据值（化学位移、耦合常数、m/z 值）对于二糖是物理上现实的。\n- **良构性：** 该问题提供了充分、不矛盾的数据，可以逻辑地推导出二糖的异头构型和连接位置，从而在给定选项中找到唯一的解。\n- **客观性：** 该问题使用精确、客观和技术性的语言陈述，没有任何主观或偏见的元素。\n- **缺陷分析：**\n    - 该问题在科学和事实上是合理的。\n    - 这是一个可形式化的分析生物化学问题。\n    - 设定是完整和一致的。分别使用天然样品和还原样品进行不同实验（质谱和核磁共振）是一种常见且有效的实验策略。\n    - 条件和数据都是现实的。\n    - 这是一个良构问题，可以根据所提供的数据得出一个唯一解。\n\n**步骤3：结论与行动**\n- **结论：** 该问题有效。\n- **行动：** 继续解答。\n\n**解答推导**\n\n二糖的结构是通过分析所提供的光谱和质谱数据来确定的。我们用上撇号 (') 表示非还原端残基，不用上撇号表示还原端残基。\n\n1.  **异头构型的确定：**\n    - 非还原端残基的异头质子 (H-$1'$) 在 $\\delta = 5.38\\,\\mathrm{ppm}$ 处共振。关键信息是其与邻位质子 H-$2'$ 的标量耦合常数 $J_{1',2'} = 3.6\\,\\mathrm{Hz}$。\n    - 根据 Karplus 关系（原理 i），吡喃糖环中一个小的 $^3J$ 耦合常数 (通常 < $4\\,\\mathrm{Hz}$) 表明耦合的质子之间是轴-平键或平-平键关系。对于像葡萄糖这样的己吡喃糖，在其标准的 $^4C_1$ 椅式构象中，$\\alpha$-异头物具有一个轴向的 H-$1'$ 和一个平向的 H-$2'$，导致二面角约为 $60^\\circ$ 和一个小的 $J_{1',2'}$。相比之下，$\\beta$-异头物同时具有轴向的 H-$1'$ 和 H-$2'$，导致二面角接近 $180^\\circ$ 和一个大的耦合常数 (通常为 $7-9\\,\\mathrm{Hz}$)。\n    - 测得的 $J_{1',2'} = 3.6\\,\\mathrm{Hz}$ 很小，因此明确地表明这是一个 **$\\alpha$-异头糖苷键**。\n    - ROESY 数据进一步支持了这一结论，该数据显示了 H-$1'$ 和 H-$3'$ 之间的 NOE。在一个 $\\alpha$-吡喃葡萄糖基单元中，H-$1'$ 和 H-$3'$ 处于 1,3-双轴向排列，使它们在空间上非常接近，从而产生强烈的 NOE。这是 $\\alpha$-连接的一个特征。\n\n2.  **连接位置的确定：**\n    - 连接位置由异核多键相关谱 (HMBC) 确定，该谱揭示了质子和碳之间的三键耦合 ($^3J_{C,H}$)。\n    - 实验显示，从非还原单元的异头质子 (H-$1'$，位于 $\\delta = 5.38\\,\\mathrm{ppm}$) 到还原残基中位于 $\\delta = 80.2\\,\\mathrm{ppm}$ 的一个碳存在相关性。这个碳被鉴定为 C-$4$。相关路径是 H-$1'$—O—C-$4$—C-$...$，这建立了 C-$1'$ 和连接在 C-$4$ 上的氧之间的共价键。\n    - 因此，该二糖具有一个 **$(1\\rightarrow 4)$ 连接**。\n    - 与其在未取代糖醇中的位置（例如，在葡萄糖醇中，C-4 约在 $70\\,\\mathrm{ppm}$）相比，C-$4$ 的显著低场位移 ($\\delta = 80.2\\,\\mathrm{ppm}$) 与糖苷化在该位置的去屏蔽效应一致（原理 ii）。\n    - 明确没有从 H-$1'$ 到 C-$6$（位于典型的未取代伯醇位移 $\\delta = 61.8\\,\\mathrm{ppm}$）的 HMBC 相关，排除了 $(1\\rightarrow 6)$ 连接的可能性。\n    - MS/MS 数据提供了证实性证据。A-型的跨环裂解碎片对于连接位置具有高度的诊断性。观察到显著的 $^{0,2}A$ 碎片（C2-C3 和 C0-C1 键的断裂）是 $(1\\rightarrow 4)$ 连接的特征。相反，未观察到 $^{0,3}A$ 碎片（预计在 $(1\\rightarrow 6)$ 连接中出现），这强烈地反驳了那种可能性。\n\n3.  **结构综合：**\n    - 单体单元是 D-己吡喃糖，选项指定为 D-吡喃葡萄糖 (D-Glcp)。\n    - 糖苷键的异头构型是 $\\alpha$。\n    - 连接位置是 $(1\\rightarrow 4)$。\n    - 综合这些发现，确定的结构是 **$\\alpha$-D-吡喃葡萄糖基-$(1\\rightarrow 4)$-D-吡喃葡萄糖**。这是麦芽糖的化学名称。\n\n**选项评估**\n\n*   **A. $\\alpha$-D-Glcp-$(1\\rightarrow 4)$-D-Glcp (麦芽糖)**\n    该结构具有两个 D-葡萄糖单元之间的 $\\alpha$-(1→4) 连接。这与我们的推导完全匹配：$\\alpha$-连接与 $J_{1',2'} = 3.6\\,\\mathrm{Hz}$ 以及 H-$1'$ 到 H-$3'$ 的 NOE 一致；$(1\\rightarrow 4)$ 连接由特定的 HMBC 相关（H-$1'$ 到 C-$4$）和 MS/MS 裂解模式（$^{0,2}A$ 碎片）证实。\n    **结论：正确。**\n\n*   **B. $\\beta$-D-Glcp-$(1\\rightarrow 4)$-D-Glcp (纤维二糖)**\n    该结构具有一个 $\\beta$-异头糖苷键。这将导致一个大的 $J_{1',2'}$ 耦合常数 (~$8\\,\\mathrm{Hz}$)，与实验值 $3.6\\,\\mathrm{Hz}$ 相矛盾。\n    **结论：错误。**\n\n*   **C. $\\alpha$-D-Glcp-$(1\\rightarrow 6)$-D-Glcp (异麦芽糖)**\n    该结构具有正确的 $\\alpha$-异头构型，但连接位置是错误的 $(1\\rightarrow 6)$。该连接与 HMBC 数据不一致，数据显示了到 C-$4$ 的相关而没有到 C-$6$ 的相关。它也与 MS/MS 裂解数据不一致。\n    **结论：错误。**\n\n*   **D. $\\beta$-D-Glcp-$(1\\rightarrow 6)$-D-Glcp (龙胆二糖)**\n    该结构在异头构型（$\\beta$ 而非 $\\alpha$）和连接位置（$(1\\rightarrow 6)$ 而非 $(1\\rightarrow 4)$）上都是错误的。它与所有主要的实验证据都相矛盾。\n    **结论：错误。**\n\n唯一与整套 NMR 和 MS/MS 数据完全一致的结构是麦芽糖。", "answer": "$$\\boxed{A}$$", "id": "2556518"}, {"introduction": "确定了糖的共价连接性之后，下一个关键问题是其三维构象和柔性，这决定了它如何与其他分子相互作用。本练习 [@problem_id:2556527] 将带你进入计算生物物理学的世界，使用一个简化的力场模型来描述糖苷键的势能。通过编程实现这个模型，你将亲身体验如何计算不同构象（如由二面角 $\\phi$ 和 $\\psi$ 定义）的能量，并最终估算它们之间的自由能差 $\\Delta G$，从而连接静态结构与动态行为。", "problem": "一种碳水化合物二糖的粗粒化力场表示法将糖苷键处理为两个耦合的扭转自由度，由二面角 $\\phi$ 和 $\\psi$ 表示 (角度单位为度)。势能函数定义为每个角度的傅里叶扭转项之和，再加上两个角度之间的一个耦合项。具体来说，在构型 $(\\phi,\\psi)$ 处的能量为\n$$\nE(\\phi,\\psi) \\;=\\; \\sum_{m=1}^{M_\\phi} k_{\\phi,m}\\,\\bigl(1+\\cos\\bigl(n_{\\phi,m}\\,\\phi - \\delta_{\\phi,m}\\bigr)\\bigr) \\;+\\; \\sum_{m=1}^{M_\\psi} k_{\\psi,m}\\,\\bigl(1+\\cos\\bigl(n_{\\psi,m}\\,\\psi - \\delta_{\\psi,m}\\bigr)\\bigr) \\;+\\; k_c\\,\\bigl(1+\\cos\\bigl(\\phi - \\psi - \\delta_c\\bigr)\\bigr),\n$$\n其中所有的傅里叶相位偏移 $\\delta$ 和角度都以度为单位，但在计算余弦值之前必须转换为弧度。所有力常数 $k$ 的单位都是千卡/摩尔。系统假定处于绝对温度为 $T$ (单位为开尔文) 的正则系综中，其 Boltzmann 分布为 $p(\\phi,\\psi) \\propto \\exp\\!\\bigl(-\\beta\\,E(\\phi,\\psi)\\bigr)$，其中 $\\beta = 1/(k_B T)$，Boltzmann 常数 $k_B = 0.0019872041$ 千卡/摩尔·开尔文。\n\n将“顺式”区域 $\\mathcal{A}$ 定义为满足 $|\\phi|\\le 90^\\circ$ 和 $|\\psi|\\le 90^\\circ$ 的扭转角集合，并令 $\\mathcal{B}$ 为其在完整扭转角域 $(-180^\\circ,180^\\circ]\\times(-180^\\circ,180^\\circ]$ 中的补集。区域间的自由能差为\n$$\n\\Delta G_{\\mathcal{A}\\to \\mathcal{B}} \\;=\\; -\\,k_B\\,T\\,\\ln\\!\\left(\\frac{P(\\mathcal{A})}{P(\\mathcal{B})}\\right),\n$$\n其中 $P(\\mathcal{A})$ 和 $P(\\mathcal{B})$ 分别是处于区域 $\\mathcal{A}$ 和 $\\mathcal{B}$ 的平衡概率。\n\n您的任务是编写一个完整程序，针对下面测试套件中的每一组参数集，使用以下数值计算步骤计算 $\\Delta G_{\\mathcal{A}\\to \\mathcal{B}}$ (单位为千卡/摩尔)，该步骤必须严格按照所述实现：\n1. 将每个扭转角离散化为一个步长为 $s$ 度的均匀网格，并使用中点，因此单个角度的网格点为 $\\{-180^\\circ + s/2,\\,-180^\\circ + 3s/2,\\,\\dots,\\,180^\\circ - s/2\\}$，每个角度产生恰好 $360^\\circ/s$ 个均匀间隔的值。\n2. 对于每个网格点 $(\\phi,\\psi)$，计算 $E(\\phi,\\psi)$，在计算过程中，所有作为余弦函数参数的角度都需从度转换为弧度。\n3. 计算未归一化的 Boltzmann 权重 $w(\\phi,\\psi) = \\exp\\!\\bigl(-\\beta\\,[E(\\phi,\\psi)-E_{\\min}]\\bigr)$，其中 $E_{\\min}$ 是整个网格上的最小能量(为了数值稳定性需要进行此能量平移，这不会改变概率)。\n4. 通过在网格上对各自区域的 $w(\\phi,\\psi)$ 进行归一化求和来近似 $P(\\mathcal{A})$ 和 $P(\\mathcal{B})$，其中网格隐含了均匀测度。即，$P(\\mathcal{A}) = \\sum_{(\\phi,\\psi)\\in\\mathcal{A}} w(\\phi,\\psi) \\big/ \\sum_{\\text{all}} w(\\phi,\\psi)$ 且 $P(\\mathcal{B}) = 1 - P(\\mathcal{A})$。\n5. 使用上述定义计算 $\\Delta G_{\\mathcal{A}\\to \\mathcal{B}}$，单位为千卡/摩尔。\n\n角度单位：所有输入参数和区域定义都必须使用度，而余弦计算必须使用弧度。能量单位：千卡/摩尔。温度单位：开尔文。$\\Delta G_{\\mathcal{A}\\to \\mathcal{B}}$ 的最终值必须以千卡/摩尔为单位，并以浮点数形式报告。\n\n测试套件 (每个案例指定了温度 $T$ (单位为开尔文)，$\\phi$ 和 $\\psi$ 的傅里叶项列表，形式为三元组 $(k, n, \\delta)$，其中 $k$ 的单位是千卡/摩尔，$n$ 是无单位整数，$\\delta$ 的单位是度，以及耦合参数 $(k_c,\\delta_c)$ 和网格步长 $s$ (单位为度))：\n- 案例 1: $T = 300$，$\\phi$ 项 $=\\,$空列表，$\\psi$ 项 $=\\,$空列表，$(k_c,\\delta_c) = (0,0)$，$s = 10$。\n- 案例 2: $T = 300$，$\\phi$ 项 $=\\,[\\,(1.0,\\,3,\\,180)\\,]$，$\\psi$ 项 $=\\,[\\,(1.0,\\,3,\\,180)\\,]$，$(k_c,\\delta_c) = (2.0,\\,180)$，$s = 10$。\n- 案例 3: $T = 900$，$\\phi$ 项 $=\\,[\\,(1.0,\\,3,\\,180)\\,]$，$\\psi$ 项 $=\\,[\\,(1.0,\\,3,\\,180)\\,]$，$(k_c,\\delta_c) = (2.0,\\,180)$，$s = 10$。\n- 案例 4: $T = 50$，$\\phi$ 项 $=\\,[\\,(0.5,\\,1,\\,180),\\,(1.0,\\,3,\\,180)\\,]$，$\\psi$ 项 $=\\,[\\,(0.5,\\,1,\\,180),\\,(1.0,\\,3,\\,180)\\,]$，$(k_c,\\delta_c) = (5.0,\\,180)$，$s = 10$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表 (例如 $[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4]$)，其中每个 $\\text{result}_i$ 是针对案例 $i$ 计算出的 $\\Delta G_{\\mathcal{A}\\to \\mathcal{B}}$ (单位为千卡/摩尔)，其顺序与上述案例的顺序相同。", "solution": "提交以供分析的问题陈述被认为是有效的。它在科学上是合理的、问题是良定的，并且以客观、明确的语言呈现。它描述了计算生物物理学中的一个标准问题：根据势能面计算构象子状态之间的自由能差。所提供的能量函数、统计力学框架和数值积分步骤都是标准的且定义明确的。因此，我们可以着手进行严谨的求解。\n\n该解决方案分两部分展开。首先，我们将建立该问题的理论和数学基础。其次，我们将描述用于将此理论付诸计算实践的指定数值算法。\n\n**1. 理论框架**\n\n该二糖的构象状态由两个扭转角 $\\phi$ 和 $\\psi$ 描述。系统的势能作为这些角度的函数，$E(\\phi, \\psi)$，定义了一个二维势能面 (PES)。该能量函数由三个分量的和给出：\n$$\nE(\\phi,\\psi) \\;=\\; E_\\phi(\\phi) + E_\\psi(\\psi) + E_c(\\phi, \\psi)\n$$\n其中 $E_\\phi(\\phi)$ 和 $E_\\psi(\\psi)$ 是代表每个角度固有扭转势的傅里叶级数项之和，而 $E_c(\\phi, \\psi)$ 是一个耦合项。其具体形式为：\n$$\nE_\\phi(\\phi) = \\sum_{m=1}^{M_\\phi} k_{\\phi,m}\\,\\bigl(1+\\cos\\bigl(n_{\\phi,m}\\,\\phi - \\delta_{\\phi,m}\\bigr)\\bigr)\n$$\n$$\nE_\\psi(\\psi) = \\sum_{m=1}^{M_\\psi} k_{\\psi,m}\\,\\bigl(1+\\cos\\bigl(n_{\\psi,m}\\,\\psi - \\delta_{\\psi,m}\\bigr)\\bigr)\n$$\n$$\nE_c(\\phi, \\psi) = k_c\\,\\bigl(1+\\cos\\bigl(\\phi - \\psi - \\delta_c\\bigr)\\bigr)\n$$\n在这里，参数 $k$ 是力常数 (能量)，$n$ 是周期性 (无单位)，$\\delta$ 是相位移 (度)。一个严格的要求是，余弦函数的所有角度参数，即 $(n\\phi - \\delta)$ 和 $(\\phi-\\psi-\\delta_c)$，都必须从度转换为弧度才能进行正确计算。\n\n系统在温度 $T$ 下处于热平衡状态，由正则系综描述。根据统计力学原理，观测到系统处于特定构象 $(\\phi, \\psi)$ 的概率由 Boltzmann 分布给出：\n$$\np(\\phi, \\psi) = \\frac{1}{Z} \\exp\\bigl(-\\beta E(\\phi, \\psi)\\bigr)\n$$\n其中 $\\beta = 1/(k_B T)$ 是逆热能，$k_B$ 是 Boltzmann 常数。归一化因子 $Z$，称为配分函数，由对所有可能构象的积分给出：\n$$\nZ = \\int_{-180^\\circ}^{180^\\circ} \\int_{-180^\\circ}^{180^\\circ} \\exp\\bigl(-\\beta E(\\phi, \\psi)\\bigr) \\,d\\phi\\,d\\psi\n$$\n在构象空间的特定区域内（例如区域 $\\mathcal{A}$，即“顺式”区域，其中 $|\\phi| \\le 90^\\circ$ 且 $|\\psi| \\le 90^\\circ$）找到系统的概率，是通过在该区域上对概率密度进行积分得到的：\n$$\nP(\\mathcal{A}) = \\iint_{\\mathcal{A}} p(\\phi, \\psi) \\,d\\phi\\,d\\psi = \\frac{1}{Z} \\iint_{\\mathcal{A}} \\exp\\bigl(-\\beta E(\\phi, \\psi)\\bigr) \\,d\\phi\\,d\\psi\n$$\n对于其补集区域 $\\mathcal{B}$ 也是如此。这两个区域之间的自由能差在问题中定义为：\n$$\n\\Delta G_{\\mathcal{A}\\to \\mathcal{B}} = -k_B T \\ln\\left(\\frac{P(\\mathcal{A})}{P(\\mathcal{B})}\\right)\n$$\n这个量对应于自由能之差 $G_{\\mathcal{A}} - G_{\\mathcal{B}}$，其中一个区域 $\\mathcal{R}$ 的自由能是 $G_{\\mathcal{R}} = -k_B T \\ln Z_{\\mathcal{R}}$，$Z_{\\mathcal{R}}$ 是限制在该区域的配分函数积分。\n\n**2. 数值计算步骤**\n\n对于一个通用的能量函数 $E(\\phi, \\psi)$，用于计算概率的连续积分在解析上是难以处理的。因此，我们必须按照指定采用数值近似方法。\n\n**步骤 2.1：网格离散化**\n连续的二维域 $(\\phi, \\psi) \\in (-180^\\circ, 180^\\circ] \\times (-180^\\circ, 180^\\circ]$ 被离散化为一个均匀网格。对于步长为 $s$ 度的情况，单个角度的网格点被指定为区间的中点：$\\{-180^\\circ + s/2, -180^\\circ + 3s/2, \\dots, 180^\\circ - s/2\\}$。这为每个角度生成 $N = 360/s$ 个点。然后，二维网格就是所有点对 $(\\phi_i, \\psi_j)$ 的集合，其中 $i, j \\in \\{1, \\dots, N\\}$。\n\n**步骤 2.2：能量矩阵评估**\n势能 $E(\\phi, \\psi)$ 在网格的每个点 $(\\phi_i, \\psi_j)$ 上进行评估，生成一个 $N \\times N$ 的能量矩阵 $E_{ij} = E(\\phi_i, \\psi_j)$。按照规定，在计算三角函数之前，所有角度和相位移都将转换为弧度。\n\n**步骤 2.3：Boltzmann 权重计算**\nBoltzmann 因子的积分由求和来近似。为了防止当指数非常大或非常小时出现数值上溢或下溢，能量值会通过网格上的最小能量 $E_{\\min} = \\min_{i,j}(E_{ij})$ 进行平移。这种平移在概率比中会相互抵消，不影响最终结果。每个网格点上的未归一化 Boltzmann 权重为：\n$$\nw_{ij} = \\exp\\bigl(-\\beta (E_{ij} - E_{\\min})\\bigr)\n$$\n\n**步骤 2.4：概率近似**\n配分函数的积分被替换为在网格点上的这些权重的和。在区域 $\\mathcal{A}$ 中所有点的权重之和是 $W_{\\mathcal{A}} = \\sum_{(\\phi_i, \\psi_j) \\in \\mathcal{A}} w_{ij}$。整个网格上的总权重和是 $W_{\\text{total}} = \\sum_{i,j} w_{ij}$。那么，处于区域 $\\mathcal{A}$ 的概率可由这些和的比值来近似：\n$$\nP(\\mathcal{A}) \\approx \\frac{W_{\\mathcal{A}}}{W_{\\text{total}}}\n$$\n处于互补区域 $\\mathcal{B}$ 的概率则简单地为 $P(\\mathcal{B}) = 1 - P(\\mathcal{A})$。\n\n**步骤 2.5：自由能计算**\n最后，将计算出的概率代入给定公式，以计算自由能差（单位为千卡/摩尔）：\n$$\n\\Delta G_{\\mathcal{A}\\to \\mathcal{B}} = -k_B T \\ln\\left(\\frac{P(\\mathcal{A})}{P(\\mathcal{B})}\\right)\n$$\n如果 $P(\\mathcal{B})$ 为零，对数的参数将变为无穷大，自由能差将被正确地评估为 $-\\infty$。相反，如果 $P(\\mathcal{A})$ 为零，结果将是 $+\\infty$。对所提供的每个测试案例都执行这整个过程。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases specified.\n    \"\"\"\n    KB_KCAL_MOL_K = 0.0019872041  # Boltzmann constant in kcal/mol/K\n\n    # Each case: T, phi_terms, psi_terms, (kc, dc), s\n    test_cases = [\n        # Case 1\n        (300.0, [], [], (0.0, 0.0), 10.0),\n        # Case 2\n        (300.0, [(1.0, 3, 180.0)], [(1.0, 3, 180.0)], (2.0, 180.0), 10.0),\n        # Case 3\n        (900.0, [(1.0, 3, 180.0)], [(1.0, 3, 180.0)], (2.0, 180.0), 10.0),\n        # Case 4\n        (50.0, [(0.5, 1, 180.0), (1.0, 3, 180.0)], [(0.5, 1, 180.0), (1.0, 3, 180.0)], (5.0, 180.0), 10.0)\n    ]\n\n    results = []\n\n    for case in test_cases:\n        T, phi_terms, psi_terms, coupling_params, s = case\n        \n        # 1. Discretize torsional angles\n        # Grid points are midpoints: -180+s/2, -180+3s/2, ..., 180-s/2\n        grid_1d = np.arange(-180.0 + s / 2.0, 180.0, s)\n        phi_grid_deg, psi_grid_deg = np.meshgrid(grid_1d, grid_1d)\n\n        # 2. Evaluate potential energy E(phi, psi)\n        energy = np.zeros_like(phi_grid_deg, dtype=np.float64)\n\n        # Convert grids to radians for cosine evaluation\n        phi_grid_rad = np.deg2rad(phi_grid_deg)\n        psi_grid_rad = np.deg2rad(psi_grid_deg)\n\n        # Add phi torsional terms\n        for k_phi, n_phi, d_phi in phi_terms:\n            d_phi_rad = np.deg2rad(d_phi)\n            energy += k_phi * (1.0 + np.cos(n_phi * phi_grid_rad - d_phi_rad))\n\n        # Add psi torsional terms\n        for k_psi, n_psi, d_psi in psi_terms:\n            d_psi_rad = np.deg2rad(d_psi)\n            energy += k_psi * (1.0 + np.cos(n_psi * psi_grid_rad - d_psi_rad))\n            \n        # Add coupling term\n        k_c, d_c = coupling_params\n        if k_c != 0.0:\n            d_c_rad = np.deg2rad(d_c)\n            energy += k_c * (1.0 + np.cos(phi_grid_rad - psi_grid_rad - d_c_rad))\n\n        # 3. Compute unnormalized Boltzmann weights\n        if T > 0:\n            beta = 1.0 / (KB_KCAL_MOL_K * T)\n            e_min = np.min(energy)\n            weights = np.exp(-beta * (energy - e_min))\n        else: # Handle T=0 case: only min energy state is populated\n            weights = np.zeros_like(energy)\n            weights[energy == np.min(energy)] = 1.0\n\n\n        # 4. Approximate probabilities P(A) and P(B)\n        # Define region A mask: |phi| <= 90 and |psi| <= 90\n        mask_A = (np.abs(phi_grid_deg) <= 90.0) & (np.abs(psi_grid_deg) <= 90.0)\n        \n        sum_weights_A = np.sum(weights[mask_A])\n        sum_weights_total = np.sum(weights)\n\n        if sum_weights_total == 0.0:\n            # This can happen if T=0 and min energy is not on grid, though unlikely here\n            # Or if weights underflow to zero everywhere.\n            # In this case, probabilities are ill-defined. Let's assume P(A)=0, P(B)=1\n            # as a fallback, which would lead to +inf free energy.\n            prob_A = 0.0\n        else:\n            prob_A = sum_weights_A / sum_weights_total\n        \n        prob_B = 1.0 - prob_A\n\n        # 5. Compute free energy difference\n        if prob_B == 0.0:\n            # System is always in A. P(A)/P(B) -> +inf. log -> +inf. deltaG -> -inf.\n            delta_G = -np.inf\n        elif prob_A == 0.0:\n            # System is always in B. P(A)/P(B) -> 0. log -> -inf. deltaG -> +inf.\n            delta_G = np.inf\n        else:\n            ratio = prob_A / prob_B\n            delta_G = -KB_KCAL_MOL_K * T * np.log(ratio)\n\n        results.append(delta_G)\n\n    # Print results in the required format\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2556527"}, {"introduction": "分子结构最终如何决定宏观性质和生物功能？定量结构-性质关系（QSPR）为回答这一问题提供了强大的框架。本练习 [@problem_id:2556544] 将指导你建立一个线性模型，将多糖的基本结构描述符（如聚合度 $n$、支化度 $b$ 和连接类型）与一个关键的宏观物理性质——特性黏度 $[\\eta]$ ——关联起来。通过应用普通最小二乘法，你将学习如何从实验数据中训练模型，并用它来预测新结构的功能特性，体验连接分子世界和材料科学的定量方法。", "problem": "定量构效关系 (QSPR) 中的一项核心任务是建立一个预测模型，将碳水化合物的结构描述符与可测量的溶液性质联系起来。考虑在 $25~^{\\circ}\\mathrm{C}$ 下水溶液中的双糖和多糖，并假设我们感兴趣的性质是特性黏度，记为 $[\\eta]$，单位为 $\\mathrm{dL}\\cdot\\mathrm{g}^{-1}$。您将使用一组源自核心结构特征的描述符——聚合度、支化密度、异头构型和 $\\mathrm{C}1\\to\\mathrm{C}6$ 糖苷键频率，以及一个端基校正——来构建一个基于特性黏度自然对数的线性自由能风格的 QSPR 模型。\n\n基本原理与建模假设：\n- 聚合物溶液理论和 Mark–Houwink–Sakurada 关系指出，$[\\eta]$ 与摩尔质量成幂律关系，对于均聚物，$M \\propto n$，其中 $n$ 是聚合度。为实现线性化并引入其他结构效应，我们假设特性黏度的对数满足以下线性关系\n$$\n\\ln[\\eta] = \\beta_0 + \\beta_1 \\ln n + \\beta_2 b + \\beta_3 r_{\\alpha} + \\beta_4 \\phi_{1\\to 6} + \\beta_5 e,\n$$\n其中 $b$ 是支化密度（作为支化点的残基所占的比例，无量纲），$r_{\\alpha}$ 是 $\\alpha$ 构型糖苷键的比例（无量纲），$\\phi_{1\\to 6}$ 是 $\\mathrm{C}1\\to\\mathrm{C}6$ 糖苷键的比例（无量纲），$e = 1/n$ 是端基分数（无量纲）。所有系数 $\\beta_i$ 均为未知，必须通过普通最小二乘法 (OLS) 从校准数据中估算。\n\n校准数据：\n- 给定 $8$ 个校准样本。每个样本包含 $(n, b, r_{\\alpha}, \\phi_{1\\to 6})$ 和测得的特性黏度 $[\\eta]$，单位为 $\\mathrm{dL}\\cdot\\mathrm{g}^{-1}$。\n    - 样本 1： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,500,\\,0,\\,1,\\,0\\,)$，测得 $[\\eta] = 1.300$。\n    - 样本 2： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,500,\\,0,\\,0,\\,0\\,)$，测得 $[\\eta] = 1.940$。\n    - 样本 3： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,800,\\,0.03,\\,1,\\,0.05\\,)$，测得 $[\\eta] = 1.370$。\n    - 样本 4： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,2500,\\,0.08,\\,1,\\,0.15\\,)$，测得 $[\\eta] = 1.650$。\n    - 样本 5： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,10,\\,0.01,\\,1,\\,0.10\\,)$，测得 $[\\eta] = 0.345$。\n    - 样本 6： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,20,\\,0,\\,1,\\,0\\,)$，测得 $[\\eta] = 0.449$。\n    - 样本 7： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,1200,\\,0.02,\\,1,\\,0.90\\,)$，测得 $[\\eta] = 1.230$。\n    - 样本 8： $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,50,\\,0,\\,0,\\,0\\,)$，测得 $[\\eta] = 0.955$。\n\n任务：\n- 使用建模假设，通过最小化校准集上 $\\ln[\\eta]$ 与线性预测值之间残差的平方和，即通过普通最小二乘法 (OLS)，来估计系数向量 $\\boldsymbol{\\beta} = (\\beta_0,\\beta_1,\\beta_2,\\beta_3,\\beta_4,\\beta_5)^{\\top}$。\n- 在估算出 $\\boldsymbol{\\beta}$ 后，使用 $e=1/n$ 及相同的描述符定义，为以下 $5$ 个测试案例（测试集）预测 $[\\eta]$，单位为 $\\mathrm{dL}\\cdot\\mathrm{g}^{-1}$：\n    - 测试 1 (类麦芽糖 $\\alpha$-$1\\to 4$ 双糖): $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,2,\\,0,\\,1,\\,0\\,)$。\n    - 测试 2 (类乳糖 $\\beta$-$1\\to 4$ 双糖): $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,2,\\,0,\\,0,\\,0\\,)$。\n    - 测试 3 (类纤维素线性链段): $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,1000,\\,0,\\,0,\\,0\\,)$。\n    - 测试 4 (类直链淀粉线性链段): $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,1000,\\,0,\\,1,\\,0\\,)$。\n    - 测试 5 (类糖原高度支化): $(n, b, r_{\\alpha}, \\phi_{1\\to 6}) = (\\,2000,\\,0.08,\\,1,\\,0.15\\,)$。\n\n输入数据处理与转换：\n- 对于每个聚合度为 $n$ 的样本，计算 $e = 1/n$ 和特征向量\n$$\n\\mathbf{x} = \\big(1,\\ \\ln n,\\ b,\\ r_{\\alpha},\\ \\phi_{1\\to 6},\\ e\\big).\n$$\n- 对于校准，响应变量为 $y = \\ln [\\eta]$。\n\n输出要求：\n- 您的程序必须计算测试集的预测值，并以浮点数形式输出预测的特性黏度（单位为 $\\mathrm{dL}\\cdot\\mathrm{g}^{-1}$），精确到三位小数。\n- 最终输出格式：一行包含一个逗号分隔、无空格的 Python 风格列表，例如 $[x_1,x_2,x_3,x_4,x_5]$，其中每个 $x_i$ 是四舍五入后的预测值，单位为 $\\mathrm{dL}\\cdot\\mathrm{g}^{-1}$。\n\n测试集覆盖范围：\n- 所提供的测试案例涵盖了小分子寡糖（$n = 2$）、线性高 $n$ 极限（$n = 1000$）以及一个高度支化的大分子（$n = 2000$，$b = 0.08$），用以探究模型对 $n$、$b$、$r_{\\alpha}$ 和 $\\phi_{1\\to 6}$ 的敏感性。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表（例如：$[result_1,result_2,result_3,result_4,result_5]$），其中每个 $result_i$ 是以 $\\mathrm{dL}\\cdot\\mathrm{g}^{-1}$ 为单位并四舍五入到三位小数的结果。", "solution": "所述问题是使用多元线性回归构建定量构效关系 (QSPR) 模型的一个标准练习。它在科学上基于聚合物溶液理论的既定原理，即 Mark–Houwink–Sakurada 关系，并通过一个线性自由能关系框架对其进行了扩展。该问题是适定的：它提供了足够数量的校准数据点（$N=8$）来估计未知模型参数的数量（$p=6$），使得该系统是超定的，适合采用普通最小二乘法 (OLS) 进行估计。获得唯一解所需的所有数据和定义均已提供，不存在矛盾或歧义。因此，该问题被认为是有效的，我们将着手推导解决方案。\n\n任务是为以下线性模型估计系数向量 $\\boldsymbol{\\beta} = (\\beta_0, \\beta_1, \\beta_2, \\beta_3, \\beta_4, \\beta_5)^{\\top}$：\n$$\n\\ln[\\eta] = \\beta_0 + \\beta_1 \\ln n + \\beta_2 b + \\beta_3 r_{\\alpha} + \\beta_4 \\phi_{1\\to 6} + \\beta_5 e\n$$\n其中 $e = 1/n$。这可以表示为矩阵形式的线性系统 $\\mathbf{y} = \\mathbf{X}\\boldsymbol{\\beta}$。\n\n对于 $i=1, \\dots, 8$ 中的每一个校准样本，我们定义响应变量 $y_i = \\ln([\\eta]_i)$ 和特征向量 $\\mathbf{x}_i^{\\top}$如下：\n$$\n\\mathbf{x}_i^{\\top} = \\begin{pmatrix} 1 & \\ln n_i & b_i & r_{\\alpha,i} & \\phi_{1\\to 6,i} & e_i \\end{pmatrix}\n$$\n完整的系统由 $8 \\times 1$ 的响应向量 $\\mathbf{y}$ 和 $8 \\times 6$ 的设计矩阵 $\\mathbf{X}$ 组成，$\\mathbf{X}$ 的行是单个特征向量 $\\mathbf{x}_i^{\\top}$。OLS 方法找到的估计值 $\\hat{\\boldsymbol{\\beta}}$ 能使残差平方和 $SSR = \\sum_{i=1}^{N}(y_i - \\mathbf{x}_i^{\\top}\\boldsymbol{\\beta})^2 = (\\mathbf{y} - \\mathbf{X}\\boldsymbol{\\beta})^{\\top}(\\mathbf{y} - \\mathbf{X}\\boldsymbol{\\beta})$ 最小化。\n\n这个最小化问题的解由正规方程组给出：\n$$\n(\\mathbf{X}^{\\top}\\mathbf{X})\\hat{\\boldsymbol{\\beta}} = \\mathbf{X}^{\\top}\\mathbf{y}\n$$\n假设矩阵 $\\mathbf{X}^{\\top}\\mathbf{X}$ 是非奇异的，系数向量的唯一解为：\n$$\n\\hat{\\boldsymbol{\\beta}} = (\\mathbf{X}^{\\top}\\mathbf{X})^{-1}\\mathbf{X}^{\\top}\\mathbf{y}\n$$\n为了获得更好的数值稳定性，我们避免直接计算逆矩阵，而是使用诸如 QR 分解等方法来求解最小二 homosexuality题，这些方法在数值线性代数库中是标准方法。\n\n实现步骤如下：\n1.  根据 8 个校准样本构建设计矩阵 $\\mathbf{X}$ 和响应向量 $\\mathbf{y}$。$\\mathbf{X}$ 的条目是特征值 $(1, \\ln n, b, r_\\alpha, \\phi_{1\\to 6}, 1/n)$，$\\mathbf{y}$ 的条目是 $\\ln[\\eta]$ 的值。\n2.  在最小二乘意义上求解系统 $\\mathbf{X}\\hat{\\boldsymbol{\\beta}} = \\mathbf{y}$ 以得到 $\\hat{\\boldsymbol{\\beta}}$。这将得出系数 $\\beta_0, \\dots, \\beta_5$ 的数值。\n3.  对 5 个测试案例中的每一个，构建一个新的特征向量 $\\mathbf{x}_{\\text{test}}$。\n4.  使用估算出的系数向量 $\\hat{\\boldsymbol{\\beta}}$ 预测每个测试案例的对数特性黏度：$\\ln[\\eta]_{\\text{pred}} = \\mathbf{x}_{\\text{test}}^{\\top}\\hat{\\boldsymbol{\\beta}}$。\n5.  通过取指数将预测值转换回原始尺度：$[\\eta]_{\\text{pred}} = \\exp(\\ln[\\eta]_{\\text{pred}})$.\n6.  按要求将最终预测值 $[\\eta]_{\\text{pred}}$ 四舍五入到三位小数。\n\n此过程提供了一种基于基本统计原理的系统性、可复现的问题解决方法。最后的 Python 代码以算法方式实现了这些步骤。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the QSPR problem by estimating coefficients from calibration data\n    using Ordinary Least Squares and predicting intrinsic viscosity for a test suite.\n    \"\"\"\n    \n    # Calibration data: (n, b, r_alpha, phi_1_6, [eta])\n    calibration_data = [\n        (500, 0.00, 1, 0.00, 1.300),\n        (500, 0.00, 0, 0.00, 1.940),\n        (800, 0.03, 1, 0.05, 1.370),\n        (2500, 0.08, 1, 0.15, 1.650),\n        (10, 0.01, 1, 0.10, 0.345),\n        (20, 0.00, 1, 0.00, 0.449),\n        (1200, 0.02, 1, 0.90, 1.230),\n        (50, 0.00, 0, 0.00, 0.955),\n    ]\n\n    # Construct the design matrix X and response vector y for OLS\n    num_samples = len(calibration_data)\n    num_coeffs = 6\n    X_cal = np.zeros((num_samples, num_coeffs))\n    y_cal = np.zeros(num_samples)\n\n    for i, (n, b, r_alpha, phi_1_6, eta) in enumerate(calibration_data):\n        X_cal[i, 0] = 1.0  # beta_0 (intercept)\n        X_cal[i, 1] = np.log(n)\n        X_cal[i, 2] = b\n        X_cal[i, 3] = r_alpha\n        X_cal[i, 4] = phi_1_6\n        X_cal[i, 5] = 1.0 / n\n        y_cal[i] = np.log(eta)\n\n    # Solve for the coefficient vector beta using Ordinary Least Squares.\n    # np.linalg.lstsq is numerically stable and solves X*beta = y.\n    beta_hat, _, _, _ = np.linalg.lstsq(X_cal, y_cal, rcond=None)\n\n    # Test suite: (n, b, r_alpha, phi_1_6)\n    test_suite = [\n        (2, 0.00, 1, 0.00),     # Test 1: maltose-like\n        (2, 0.00, 0, 0.00),     # Test 2: lactose-like\n        (1000, 0.00, 0, 0.00),  # Test 3: cellulose-like\n        (1000, 0.00, 1, 0.00),  # Test 4: amylose-like\n        (2000, 0.08, 1, 0.15),  # Test 5: glycogen-like\n    ]\n\n    # Construct the design matrix for the test suite\n    num_tests = len(test_suite)\n    X_test = np.zeros((num_tests, num_coeffs))\n\n    for i, (n, b, r_alpha, phi_1_6) in enumerate(test_suite):\n        X_test[i, 0] = 1.0\n        X_test[i, 1] = np.log(n)\n        X_test[i, 2] = b\n        X_test[i, 3] = r_alpha\n        X_test[i, 4] = phi_1_6\n        X_test[i, 5] = 1.0 / n\n    \n    # Predict log([eta]) for the test suite\n    log_eta_pred = X_test @ beta_hat\n    \n    # Convert predictions back to [eta] by exponentiation\n    eta_pred = np.exp(log_eta_pred)\n    \n    # Round results to three decimal places\n    rounded_results = [round(val, 3) for val in eta_pred]\n\n    # Format the final output string\n    output_string = f\"[{','.join(map(str, rounded_results))}]\"\n    \n    print(output_string)\n\nsolve()\n```", "id": "2556544"}]}