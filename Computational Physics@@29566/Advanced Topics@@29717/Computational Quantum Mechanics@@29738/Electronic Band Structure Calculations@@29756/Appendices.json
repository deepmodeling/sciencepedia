{"hands_on_practices": [{"introduction": "The tight-binding model provides one of the most intuitive pictures of electronic band formation, starting from localized atomic orbitals and considering the quantum mechanical \"hopping\" of electrons between neighboring atoms. This first exercise is a foundational pen-and-paper calculation that solidifies the mathematical link between the real-space lattice geometry and the resulting energy-momentum ($E(\\mathbf{k})$) dispersion relation in reciprocal space. By deriving the band structure for a simple 2D square lattice, you will gain direct experience with the core components of the model, including on-site energies and hopping integrals. [@problem_id:111189]", "problem": "Consider a two-dimensional crystal with atoms arranged on a square lattice with lattice constant $a$. We want to study the electronic band structure of this crystal using the tight-binding approximation. We assume that each atom contributes a single, non-degenerate s-orbital, and these atomic orbitals, denoted by $|\\mathbf{R}\\rangle$ for an orbital at site $\\mathbf{R}$, form an orthonormal basis.\n\nThe electronic properties are governed by a Hamiltonian $H$. In the basis of these localized atomic orbitals, the matrix elements of the Hamiltonian are given by:\n1.  The on-site energy: $\\langle\\mathbf{R}|H|\\mathbf{R}\\rangle = \\epsilon_0$.\n2.  The nearest-neighbor hopping integral: $\\langle\\mathbf{R}|H|\\mathbf{R}'\\rangle = -t$, where $\\mathbf{R}$ and $\\mathbf{R}'$ are nearest-neighbor sites. The parameter $t$ is a positive real constant.\n3.  The next-nearest-neighbor hopping integral: $\\langle\\mathbf{R}|H|\\mathbf{R}''\\rangle = -t'$, where $\\mathbf{R}$ and $\\mathbf{R}''$ are next-nearest-neighbor sites. The parameter $t'$ is also a positive real constant.\n4.  All other off-site matrix elements are zero.\n\nThe nearest-neighbor sites to an atom at the origin are at positions $(\\pm a, 0)$ and $(0, \\pm a)$. The next-nearest-neighbor sites are at positions $(\\pm a, \\pm a)$.\n\nYour task is to calculate the energy $E$ of an electron at the M-point of the first Brillouin zone. The M-point is a corner point of the square Brillouin zone.", "solution": "We use the Bloch ansatz and evaluate the tight-binding dispersion.  \n\n1. Bloch state:  \n$$|\\psi_{\\mathbf k}\\rangle=\\sum_{\\mathbf R}e^{i\\mathbf k\\cdot\\mathbf R}|\\mathbf R\\rangle$$  \nActing with $H$ gives the dispersion  \n$$E(\\mathbf k)\n=\\langle\\psi_{\\mathbf k}|H|\\psi_{\\mathbf k}\\rangle\n=\\epsilon_0+\\sum_{\\boldsymbol\\delta}\\langle\\mathbf R|H|\\mathbf R+\\boldsymbol\\delta\\rangle e^{i\\mathbf k\\cdot\\boldsymbol\\delta}\\,. $$\n\n2. Nearest-neighbor (NN) terms ($\\boldsymbol\\delta=(\\pm a,0),(0,\\pm a)$) with hopping $-t$:  \n$$\\sum_{\\rm NN}e^{i\\mathbf k\\cdot\\boldsymbol\\delta}\n=e^{ik_xa}+e^{-ik_xa}+e^{ik_ya}+e^{-ik_ya}\n=2\\cos(k_xa)+2\\cos(k_ya)\\,. $$\n\n3. Next-nearest-neighbor (NNN) terms ($\\boldsymbol\\delta=(\\pm a,\\pm a)$) with hopping $-t'$:  \n$$\\sum_{\\rm NNN}e^{i\\mathbf k\\cdot\\boldsymbol\\delta}\n=e^{i(k_x+k_y)a}+e^{-i(k_x+k_y)a}+e^{i(k_x-k_y)a}+e^{-i(k_x-k_y)a}\n=2\\cos\\bigl((k_x+k_y)a\\bigr)+2\\cos\\bigl((k_x-k_y)a\\bigr)\n=4\\cos(k_xa)\\cos(k_ya)\\,. $$\n\n4. Combine terms to obtain  \n$$E(\\mathbf k)\n=\\epsilon_0\n-t\\bigl[2\\cos(k_xa)+2\\cos(k_ya)\\bigr]\n-t'\\bigl[4\\cos(k_xa)\\cos(k_ya)\\bigr]\n=\\epsilon_0-2t[\\cos(k_xa)+\\cos(k_ya)]-4t'\\cos(k_xa)\\cos(k_ya)\\,. $$\n\n5. At the M-point $\\mathbf k_M=(\\pi/a,\\pi/a)$:  \n$$\\cos(\\pi)=-1\\quad\\Longrightarrow\\quad\nE_M=\\epsilon_0-2t[(-1)+(-1)]-4t'(-1)(-1)\n=\\epsilon_0+4t-4t'\\,. $$", "answer": "$$\\boxed{\\epsilon_0+4t-4t'}$$", "id": "111189"}, {"introduction": "Moving from analytical derivation to computational simulation, this practice applies the tight-binding model to graphene, a material renowned for its unique electronic properties. You will construct the model for its honeycomb lattice and observe the emergence of the famous linear \"Dirac cones\" at the corners of the Brillouin zone. The exercise then goes a step further into materials engineering by demonstrating how breaking the crystal's sublattice symmetry—a key feature of the honeycomb lattice—opens a band gap, transforming the semimetallic graphene into a semiconductor. [@problem_id:2387847]", "problem": "You are asked to implement a nearest-neighbor tight-binding (TB) model for graphene and to quantify how breaking the sublattice symmetry by unequal on-site energies opens a band gap at the Dirac points. Use a two-atom basis on a two-dimensional honeycomb lattice with a triangular Bravais lattice. Let the nearest-neighbor distance be set to the dimensionless value $1$ to define length units. Work in reciprocal space such that the phase $e^{i \\mathbf{k} \\cdot \\boldsymbol{\\delta}_j}$ uses angles in radians. All energies must be expressed in electronvolts (eV).\n\nThe honeycomb lattice is constructed from the triangular Bravais lattice with primitive vectors\n$$\n\\mathbf{a}_1 = (\\sqrt{3}, \\, 0), \\quad \\mathbf{a}_2 = \\left(\\frac{\\sqrt{3}}{2}, \\, \\frac{3}{2}\\right).\n$$\nThe three nearest-neighbor vectors connecting sublattice $A$ to sublattice $B$ are\n$$\n\\boldsymbol{\\delta}_1 = (0, \\, 1), \\quad \\boldsymbol{\\delta}_2 = \\left(\\frac{\\sqrt{3}}{2}, \\, -\\frac{1}{2}\\right), \\quad \\boldsymbol{\\delta}_3 = \\left(-\\frac{\\sqrt{3}}{2}, \\, -\\frac{1}{2}\\right).\n$$\nLet $\\mathbf{b}_1$ and $\\mathbf{b}_2$ be the reciprocal lattice vectors defined by $\\mathbf{a}_i \\cdot \\mathbf{b}_j = 2\\pi \\delta_{ij}$. Define the Dirac point\n$$\n\\mathbf{K} = \\frac{1}{3}\\left(\\mathbf{b}_1 + 2 \\mathbf{b}_2\\right).\n$$\n\nIn the nearest-neighbor tight-binding Hamiltonian, with on-site energies $E_A$ and $E_B$ on sublattices $A$ and $B$, and nearest-neighbor hopping energy $t$, the Bloch Hamiltonian for wave vector $\\mathbf{k}$ is the $2\\times 2$ Hermitian matrix\n$$\nH(\\mathbf{k}) = \\begin{pmatrix}\nE_A & -t \\, f(\\mathbf{k}) \\\\\n-t \\, f^*(\\mathbf{k}) & E_B\n\\end{pmatrix},\n$$\nwhere\n$$\nf(\\mathbf{k}) = \\sum_{j=1}^{3} e^{i \\mathbf{k}\\cdot \\boldsymbol{\\delta}_j}.\n$$\n\nFor each parameter set, compute the two energy bands as the eigenvalues $E_{-}(\\mathbf{k}) \\le E_{+}(\\mathbf{k})$ of $H(\\mathbf{k})$ and evaluate the direct band gap at the Dirac point $\\mathbf{K}$,\n$$\n\\Delta_{\\mathbf{K}} = E_{+}(\\mathbf{K}) - E_{-}(\\mathbf{K}),\n$$\nexpressed in electronvolts (eV). The angle unit for $\\mathbf{k}\\cdot\\boldsymbol{\\delta}_j$ must be radians. Your program must output the values of $\\Delta_{\\mathbf{K}}$ for the following test suite of parameter sets $(t, E_A, E_B)$, with all quantities in electronvolts:\n- $(2.7, \\, 0.0, \\, 0.0)$,\n- $(2.7, \\, 0.1, \\, -0.1)$,\n- $(1.0, \\, 0.25, \\, 0.0)$,\n- $(0.0, \\, 0.3, \\, -0.3)$,\n- $(3.0, \\, 0.4, \\, 0.4)$.\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each gap value rounded to $6$ decimal places in eV. For example, the format must be\n$$\n[\\Delta_{\\mathbf{K}}^{(1)},\\Delta_{\\mathbf{K}}^{(2)},\\ldots,\\Delta_{\\mathbf{K}}^{(5)}]\n$$\nwith each $\\Delta_{\\mathbf{K}}^{(i)}$ shown with exactly $6$ digits after the decimal point.", "solution": "The problem statement has been validated and is found to be scientifically sound, well-posed, and self-contained. It presents a standard problem in computational solid-state physics. We will proceed with a complete solution.\n\nThe objective is to compute the direct band gap $\\Delta_{\\mathbf{K}}$ at the Dirac point $\\mathbf{K}$ for a graphene-like honeycomb lattice described by a nearest-neighbor tight-binding model. The band gap is defined as the difference between the two energy eigenvalues of the Bloch Hamiltonian $H(\\mathbf{k})$ evaluated at $\\mathbf{k}=\\mathbf{K}$.\n\nThe provided Bloch Hamiltonian is a $2\\times 2$ matrix:\n$$\nH(\\mathbf{k}) = \\begin{pmatrix}\nE_A & -t \\, f(\\mathbf{k}) \\\\\n-t \\, f^*(\\mathbf{k}) & E_B\n\\end{pmatrix}\n$$\nwhere $E_A$ and $E_B$ are the on-site energies for the two sublattices, $t$ is the nearest-neighbor hopping energy, and $f(\\mathbf{k}) = \\sum_{j=1}^{3} e^{i \\mathbf{k}\\cdot \\boldsymbol{\\delta}_j}$ is the geometric structure factor involving the three nearest-neighbor vectors $\\boldsymbol{\\delta}_j$.\n\nThe energy eigenvalues $E(\\mathbf{k})$ are found by solving the characteristic equation $\\det(H(\\mathbf{k}) - E I) = 0$:\n$$\n(E_A - E)(E_B - E) - |-t f(\\mathbf{k})|^2 = 0\n$$\n$$\nE^2 - (E_A + E_B)E + E_A E_B - t^2|f(\\mathbf{k})|^2 = 0\n$$\nThe solutions for the energy bands, $E_{\\pm}(\\mathbf{k})$, are given by the quadratic formula:\n$$\nE_{\\pm}(\\mathbf{k}) = \\frac{E_A + E_B}{2} \\pm \\sqrt{\\left(\\frac{E_A - E_B}{2}\\right)^2 + t^2 |f(\\mathbf{k})|^2}\n$$\nThe direct band gap at a wave vector $\\mathbf{k}$ is the difference between these two energy bands:\n$$\n\\Delta_{\\mathbf{k}} = E_{+}(\\mathbf{k}) - E_{-}(\\mathbf{k}) = 2\\sqrt{\\left(\\frac{E_A - E_B}{2}\\right)^2 + t^2 |f(\\mathbf{k})|^2} = \\sqrt{(E_A - E_B)^2 + 4t^2 |f(\\mathbf{k})|^2}\n$$\nTo evaluate the gap at the Dirac point $\\mathbf{K}$, we must first determine the coordinates of $\\mathbf{K}$. The problem defines $\\mathbf{K} = \\frac{1}{3}(\\mathbf{b}_1 + 2 \\mathbf{b}_2)$, where $\\mathbf{b}_1$ and $\\mathbf{b}_2$ are the reciprocal lattice vectors corresponding to the primitive lattice vectors $\\mathbf{a}_1 = (\\sqrt{3}, 0)$ and $\\mathbf{a}_2 = (\\frac{\\sqrt{3}}{2}, \\frac{3}{2})$. The reciprocal vectors are defined by the relation $\\mathbf{a}_i \\cdot \\mathbf{b}_j = 2\\pi \\delta_{ij}$.\n\nThe area of the real-space unit cell is $A = |\\mathbf{a}_1 \\times \\mathbf{a}_2| = \\sqrt{3} \\cdot \\frac{3}{2} - 0 \\cdot \\frac{\\sqrt{3}}{2} = \\frac{3\\sqrt{3}}{2}$. The reciprocal vectors are then calculated as:\n$$\n\\mathbf{b}_1 = \\frac{2\\pi}{A} (a_{2y}, -a_{2x}) = \\frac{2\\pi}{3\\sqrt{3}/2} \\left(\\frac{3}{2}, -\\frac{\\sqrt{3}}{2}\\right) = \\left(\\frac{2\\pi}{\\sqrt{3}}, -\\frac{2\\pi}{3}\\right)\n$$\n$$\n\\mathbf{b}_2 = \\frac{2\\pi}{A} (-a_{1y}, a_{1x}) = \\frac{2\\pi}{3\\sqrt{3}/2} (0, \\sqrt{3}) = \\left(0, \\frac{4\\pi}{3}\\right)\n$$\nUsing these, we find the coordinates of the Dirac point $\\mathbf{K}$:\n$$\n\\mathbf{K} = \\frac{1}{3}(\\mathbf{b}_1 + 2\\mathbf{b}_2) = \\frac{1}{3}\\left[\\left(\\frac{2\\pi}{\\sqrt{3}}, -\\frac{2\\pi}{3}\\right) + 2\\left(0, \\frac{4\\pi}{3}\\right)\\right] = \\frac{1}{3}\\left(\\frac{2\\pi}{\\sqrt{3}}, \\frac{6\\pi}{3}\\right) = \\left(\\frac{2\\pi}{3\\sqrt{3}}, \\frac{2\\pi}{3}\\right)\n$$\nThe next step is to evaluate the structure factor $f(\\mathbf{K})$. This requires computing the dot products $\\mathbf{K} \\cdot \\boldsymbol{\\delta}_j$ with the given nearest-neighbor vectors $\\boldsymbol{\\delta}_1 = (0, 1)$, $\\boldsymbol{\\delta}_2 = (\\frac{\\sqrt{3}}{2}, -\\frac{1}{2})$, and $\\boldsymbol{\\delta}_3 = (-\\frac{\\sqrt{3}}{2}, -\\frac{1}{2})$:\n$$\n\\mathbf{K} \\cdot \\boldsymbol{\\delta}_1 = \\left(\\frac{2\\pi}{3\\sqrt{3}}, \\frac{2\\pi}{3}\\right) \\cdot (0, 1) = \\frac{2\\pi}{3}\n$$\n$$\n\\mathbf{K} \\cdot \\boldsymbol{\\delta}_2 = \\left(\\frac{2\\pi}{3\\sqrt{3}}, \\frac{2\\pi}{3}\\right) \\cdot \\left(\\frac{\\sqrt{3}}{2}, -\\frac{1}{2}\\right) = \\frac{2\\pi}{3\\sqrt{3}}\\frac{\\sqrt{3}}{2} - \\frac{2\\pi}{3}\\frac{1}{2} = \\frac{\\pi}{3} - \\frac{\\pi}{3} = 0\n$$\n$$\n\\mathbf{K} \\cdot \\boldsymbol{\\delta}_3 = \\left(\\frac{2\\pi}{3\\sqrt{3}}, \\frac{2\\pi}{3}\\right) \\cdot \\left(-\\frac{\\sqrt{3}}{2}, -\\frac{1}{2}\\right) = -\\frac{2\\pi}{3\\sqrt{3}}\\frac{\\sqrt{3}}{2} - \\frac{2\\pi}{3}\\frac{1}{2} = -\\frac{\\pi}{3} - \\frac{\\pi}{3} = -\\frac{2\\pi}{3}\n$$\nNow, we compute $f(\\mathbf{K})$:\n$$\nf(\\mathbf{K}) = e^{i (\\mathbf{K} \\cdot \\boldsymbol{\\delta}_1)} + e^{i (\\mathbf{K} \\cdot \\boldsymbol{\\delta}_2)} + e^{i (\\mathbf{K} \\cdot \\boldsymbol{\\delta}_3)} = e^{i 2\\pi/3} + e^{i 0} + e^{-i 2\\pi/3}\n$$\nUsing Euler's formula, $e^{i\\theta} = \\cos\\theta + i\\sin\\theta$:\n$$\nf(\\mathbf{K}) = \\left(\\cos\\frac{2\\pi}{3} + i\\sin\\frac{2\\pi}{3}\\right) + 1 + \\left(\\cos\\frac{-2\\pi}{3} + i\\sin\\frac{-2\\pi}{3}\\right)\n$$\n$$\nf(\\mathbf{K}) = \\left(-\\frac{1}{2} + i\\frac{\\sqrt{3}}{2}\\right) + 1 + \\left(-\\frac{1}{2} - i\\frac{\\sqrt{3}}{2}\\right) = \\left(-\\frac{1}{2} + 1 - \\frac{1}{2}\\right) + i\\left(\\frac{\\sqrt{3}}{2} - \\frac{\\sqrt{3}}{2}\\right) = 0\n$$\nThe vanishing of the structure factor, $f(\\mathbf{K}) = 0$, is the defining feature of the Dirac points in graphene. Substituting this result into the general formula for the band gap:\n$$\n\\Delta_{\\mathbf{K}} = \\sqrt{(E_A - E_B)^2 + 4t^2 |f(\\mathbf{K})|^2} = \\sqrt{(E_A - E_B)^2 + 4t^2|0|^2} = \\sqrt{(E_A - E_B)^2}\n$$\n$$\n\\Delta_{\\mathbf{K}} = |E_A - E_B|\n$$\nThis demonstrates that the band gap at the Dirac point is precisely the magnitude of the difference between the on-site energies of the two sublattices. The gap is independent of the hopping parameter $t$. If the sublattice symmetry is preserved ($E_A = E_B$), the gap is zero, as expected for pristine graphene.\n\nWe now apply this simple formula to the given parameter sets, where all energies are in units of eV.\n\n1.  $(t=2.7, E_A=0.0, E_B=0.0)$: $\\Delta_{\\mathbf{K}} = |0.0 - 0.0| = 0.0$ eV.\n2.  $(t=2.7, E_A=0.1, E_B=-0.1)$: $\\Delta_{\\mathbf{K}} = |0.1 - (-0.1)| = 0.2$ eV.\n3.  $(t=1.0, E_A=0.25, E_B=0.0)$: $\\Delta_{\\mathbf{K}} = |0.25 - 0.0| = 0.25$ eV.\n4.  $(t=0.0, E_A=0.3, E_B=-0.3)$: $\\Delta_{\\mathbf{K}} = |0.3 - (-0.3)| = 0.6$ eV.\n5.  $(t=3.0, E_A=0.4, E_B=0.4)$: $\\Delta_{\\mathbf{K}} = |0.4 - 0.4| = 0.0$ eV.\n\nThe following program will implement the full calculation as a numerical verification of this derivation and produce the final results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the tight-binding band gap of graphene at the Dirac point K\n    for several sets of parameters.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple (t, E_A, E_B) in electronvolts (eV).\n    test_cases = [\n        (2.7, 0.0, 0.0),\n        (2.7, 0.1, -0.1),\n        (1.0, 0.25, 0.0),\n        (0.0, 0.3, -0.3),\n        (3.0, 0.4, 0.4),\n    ]\n\n    results = []\n\n    # Define lattice vectors as per the problem statement.\n    # The nearest-neighbor distance is set to 1 (dimensionless).\n    # Primitive Bravais lattice vectors.\n    a1 = np.array([np.sqrt(3), 0.0])\n    a2 = np.array([np.sqrt(3) / 2.0, 3.0 / 2.0])\n\n    # Nearest-neighbor vectors from sublattice A to B.\n    delta1 = np.array([0.0, 1.0])\n    delta2 = np.array([np.sqrt(3) / 2.0, -1.0 / 2.0])\n    delta3 = np.array([-np.sqrt(3) / 2.0, -1.0 / 2.0])\n    deltas = [delta1, delta2, delta3]\n\n    # Calculate reciprocal lattice vectors b1, b2 from a1, a2.\n    # The relation is a_i . b_j = 2*pi*delta_ij.\n    # For 2D, b1 = 2*pi/A * (a2y, -a2x) and b2 = 2*pi/A * (-a1y, a1x),\n    # where A = a1x*a2y - a1y*a2x is the unit cell area.\n    unit_cell_area = a1[0] * a2[1] - a1[1] * a2[0]\n    b1 = (2 * np.pi / unit_cell_area) * np.array([a2[1], -a2[0]])\n    b2 = (2 * np.pi / unit_cell_area) * np.array([-a1[1], a1[0]])\n\n    # Define the Dirac point K in the Brillouin zone.\n    K_point = (1.0 / 3.0) * (b1 + 2.0 * b2)\n\n    for case in test_cases:\n        t, E_A, E_B = case\n\n        # Although the analytical result is simply |E_A - E_B|, we perform the full\n        # numerical calculation to rigorously implement the model as requested.\n        \n        # 1. Calculate the structure factor f(k) at k = K.\n        # f(K) = sum_{j=1 to 3} exp(i * K . delta_j)\n        f_K = np.sum([np.exp(1j * np.dot(K_point, d)) for d in deltas])\n        \n        # Due to the properties of the graphene lattice, f(K) should be zero.\n        # Numerically, it will be a complex number very close to zero.\n\n        # 2. Construct the 2x2 Bloch Hamiltonian H(K).\n        H_K = np.array([\n            [E_A, -t * f_K],\n            [-t * np.conj(f_K), E_B]\n        ], dtype=complex)\n\n        # 3. Calculate the eigenvalues of the Hermitian matrix H(K).\n        # np.linalg.eigvalsh is used for Hermitian matrices and returns sorted real eigenvalues.\n        eigenvalues = np.linalg.eigvalsh(H_K)\n        \n        # 4. The band gap is the difference between the two eigenvalues.\n        E_minus, E_plus = eigenvalues[0], eigenvalues[1]\n        band_gap = E_plus - E_minus\n        \n        results.append(band_gap)\n\n    # Final print statement in the exact required format.\n    # Each result is formatted to 6 decimal places.\n    print(f\"[{','.join([f'{r:.6f}' for r in results])}]\")\n\nsolve()\n```", "id": "2387847"}, {"introduction": "This practice introduces the second major paradigm for band structure calculations: the plane-wave method, which builds upon the nearly-free electron model. Instead of starting with localized atoms, this approach begins with free-electron plane waves and examines how they are scattered by the crystal's periodic potential to form bands and gaps. By computationally solving the Schrödinger equation for a one-dimensional crystal with two atoms per unit cell, you will directly observe how the diatomic basis gives rise to distinct \"acoustic-like\" and \"optical-like\" band branches, a fundamental concept in the band theory of multi-atomic crystals. [@problem_id:2387858]", "problem": "You are to compute the lowest two electronic energy bands for a one-dimensional crystal with two identical or non-identical atomic wells per unit cell and demonstrate, through quantitative metrics, the emergence of a more dispersive \"acoustic-like\" branch and a less dispersive \"optical-like\" branch. Consider non-interacting electrons described by the time-independent Schrödinger equation in a periodic potential with lattice constant $a$, using units with reduced Planck constant $\\hbar$ and particle mass $m$ fixed by $\\hbar^2/(2m)=1$. Thus, the kinetic energy operator in coordinate representation is $-\\partial_x^2$, and all energies are dimensionless. The wavevector $k$ is specified in units of inverse length of the lattice constant $a$.\n\nLet the one-dimensional potential be\n$$\nV(x)=\\sum_{n\\in\\mathbb{Z}} \\left[ V_1 \\exp\\!\\left(-\\frac{(x - n a)^2}{2 \\sigma^2}\\right) + V_2 \\exp\\!\\left(-\\frac{(x - n a - d)^2}{2 \\sigma^2}\\right) \\right],\n$$\nwhere $a$ is the lattice constant, $\\sigma$ is the width parameter of each Gaussian well, $V_1$ and $V_2$ are the depths (energy amplitudes) of the two wells within each unit cell, and $d$ is the intra-cell separation with $0 \\le d < a$. Work in a finite plane-wave subspace spanned by the basis states $\\{\\exp(i (k + G_n) x)\\}$ with reciprocal lattice vectors $G_n = 2\\pi n / a$ for integers $n$ satisfying $-N \\le n \\le N$, with the fixed cutoff $N=5$. For each $k$, project the single-particle Hamiltonian onto this subspace and compute its two lowest eigenvalues, which define the lowest two Bloch bands $E_1(k)$ and $E_2(k)$.\n\nUse the following fixed constants throughout all test cases:\n- Lattice constant $a = 1$ (dimensionless length unit).\n- Gaussian width $\\sigma = 0.2$ (dimensionless length unit).\n- Plane-wave cutoff $N = 5$.\n- Sample the First Brillouin Zone (FBZ) uniformly with $k \\in [-\\pi/a, \\pi/a]$, using $301$ equally spaced points including both endpoints.\n\nFor each specified parameter set $(V_1, V_2, d)$, compute the following three quantities:\n1. The direct energy splitting at the zone center (the $\\Gamma$-point) defined by $\\Delta E_{\\Gamma} = E_2(0) - E_1(0)$.\n2. The direct energy splitting at the zone boundary defined by $\\Delta E_{\\text{edge}} = E_2(\\pi/a) - E_1(\\pi/a)$.\n3. The acoustic-versus-optical dispersivity contrast defined by $A = \\left(\\max_{k} E_1(k) - \\min_{k} E_1(k)\\right) - \\left(\\max_{k} E_2(k) - \\min_{k} E_2(k)\\right)$ computed over the sampled $k$ grid.\n\nTest Suite (three parameter sets), with all energies in the above dimensionless units and distances relative to the lattice constant $a$:\n- Case $1$: $V_1 = -4.0$, $V_2 = -4.0$, $d = 0.5$.\n- Case $2$: $V_1 = -4.0$, $V_2 = -4.0$, $d = 0.001$.\n- Case $3$: $V_1 = -6.0$, $V_2 = -2.0$, $d = 0.5$.\n\nYour program must compute $[\\Delta E_{\\Gamma}, \\Delta E_{\\text{edge}}, A]$ for each case, in the order of the cases listed above, using the specified subspace and $k$-grid. The final output format must be a single line containing a comma-separated list of three lists, each inner list containing the three floating-point values rounded to six decimal places, and enclosed in square brackets. For example, your program should produce a single line of output of the form\n`[[x_1,y_1,z_1],[x_2,y_2,z_2],[x_3,y_3,z_3]]`,\nwhere each $x_i$, $y_i$, $z_i$ is a float rounded to six decimal places.", "solution": "The problem requires the computation of the lowest two electronic energy bands, $E_1(k)$ and $E_2(k)$, for a one-dimensional periodic potential. This is a standard problem in solid-state theory, solved by diagonalizing the single-particle Hamiltonian in a suitable basis. The specified basis is a finite set of plane waves, which is appropriate for a periodic system.\n\nThe time-independent Schrödinger equation is $H\\psi = E\\psi$, with the Hamiltonian $H = T + V(x)$. In the specified units where $\\hbar^2/(2m) = 1$, the kinetic energy operator is $T = -\\partial_x^2$. The potential $V(x)$ is periodic with lattice constant $a$.\n$$\nV(x)=\\sum_{n\\in\\mathbb{Z}} \\left[ V_1 \\exp\\!\\left(-\\frac{(x - n a)^2}{2 \\sigma^2}\\right) + V_2 \\exp\\!\\left(-\\frac{(x - n a - d)^2}{2 \\sigma^2}\\right) \\right]\n$$\nAccording to Bloch's theorem, the eigenfunctions in a periodic potential take the form $\\psi_k(x) = u_k(x)e^{ikx}$, where $u_k(x)$ has the same periodicity as the lattice. The function $u_k(x)$ can be expanded in a Fourier series over the reciprocal lattice vectors $G_n = 2\\pi n / a$:\n$u_k(x) = \\sum_n c_{k,n} e^{iG_n x}$.\nThis leads to an expansion of the Bloch function $\\psi_k(x)$ in a basis of plane waves:\n$$\n\\psi_k(x) = \\sum_n c_{k,n} e^{i(k+G_n)x}\n$$\nThe problem specifies a finite subspace spanned by basis functions $\\{e^{i(k+G_n)x}\\}$ for integers $n$ from $-N$ to $N$, with $N=5$. The dimension of this subspace is $2N+1 = 11$. The Schrödinger equation is projected onto this subspace, which transforms it into a matrix eigenvalue problem, $H(k) \\mathbf{c}_k = E(k) \\mathbf{c}_k$.\n\nThe matrix elements of the Hamiltonian, $H_{nm}(k) = \\langle k,G_n | H | k,G_m \\rangle$, must be calculated. The basis functions are $\\phi_m(x) = e^{i(k+G_m)x}$.\nThe kinetic energy operator is diagonal in this basis. Its action on a basis function is $T \\phi_m(x) = (k+G_m)^2 \\phi_m(x)$. Thus, the kinetic part of the matrix is:\n$$\nT_{nm}(k) = (k+G_n)^2 \\delta_{nm}\n$$\nThe potential energy matrix elements are $V_{nm} = \\langle k,G_n | V(x) | k,G_m \\rangle$. Because $V(x)$ is periodic, it can be expressed as a Fourier series $V(x) = \\sum_p \\tilde{V}(G_p) e^{iG_p x}$. The matrix element $V_{nm}$ simplifies to the Fourier coefficient of the potential corresponding to the wavevector $G_n - G_m$.\n$$\nV_{nm} = \\tilde{V}(G_{n-m})\n$$\nThe Fourier coefficients $\\tilde{V}(G_p)$ are found by integrating the potential over the crystal, which simplifies to an integral over all space of the potential contribution from a single unit cell, scaled by $1/a$:\n$$\n\\tilde{V}(G_p) = \\frac{1}{a} \\int_{-\\infty}^{\\infty} \\left[ V_1 e^{-x^2/(2\\sigma^2)} + V_2 e^{-(x-d)^2/(2\\sigma^2)} \\right] e^{-iG_p x} dx\n$$\nThis is the Fourier transform of two Gaussian functions. Using the standard result for the Fourier transform of a Gaussian, and the shift theorem, one obtains:\n$$\n\\tilde{V}(G_p) = \\frac{\\sqrt{2\\pi}\\sigma}{a} \\left[ V_1 + V_2 e^{-iG_p d} \\right] \\exp\\left(-\\frac{1}{2} G_p^2 \\sigma^2\\right)\n$$\nwhere $G_p = 2\\pi p/a$.\nThe complete Hamiltonian matrix is then:\n$$\nH_{nm}(k) = (k+G_n)^2 \\delta_{nm} + \\tilde{V}(G_{n-m})\n$$\nThe computational procedure is as follows:\n1. For each test case $(V_1, V_2, d)$, the Fourier coefficients $\\tilde{V}(G_p)$ are pre-computed for $p$ ranging from $-2N$ to $2N$.\n2. A uniform grid of $301$ wavevectors $k$ is established across the First Brillouin Zone, from $-\\pi/a$ to $\\pi/a$.\n3. For each $k$ on the grid, the $(2N+1) \\times (2N+1)$ Hermitian matrix $H(k)$ is constructed using the derived expressions for the matrix elements.\n4. The matrix $H(k)$ is diagonalized. The two lowest eigenvalues are stored, corresponding to $E_1(k)$ and $E_2(k)$.\n5. After iterating through all $k$-points, the full bands $E_1(k)$ and $E_2(k)$ are obtained.\n6. The required physical quantities are calculated from these bands:\n   - The splitting at the zone center ($\\Gamma$-point, $k=0$): $\\Delta E_{\\Gamma} = E_2(0) - E_1(0)$.\n   - The splitting at the zone boundary ($k=\\pi/a$): $\\Delta E_{\\text{edge}} = E_2(\\pi/a) - E_1(\\pi/a)$.\n   - The acoustic-vs-optical dispersivity contrast: $A = (\\max E_1(k) - \\min E_1(k)) - (\\max E_2(k) - \\min E_2(k))$.\nThis procedure yields the quantitative metrics which describe the band structure features resulting from the diatomic basis of the crystal cell.", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import eigh\n\ndef solve():\n    \"\"\"\n    Computes electronic band structure properties for a 1D diatomic crystal model.\n    \"\"\"\n\n    test_cases = [\n        # Case 1: Identical wells, maximally separated\n        {'V1': -4.0, 'V2': -4.0, 'd': 0.5},\n        # Case 2: Identical wells, nearly overlapping\n        {'V1': -4.0, 'V2': -4.0, 'd': 0.001},\n        # Case 3: Non-identical wells, maximally separated\n        {'V1': -6.0, 'V2': -2.0, 'd': 0.5},\n    ]\n\n    all_results = []\n    for case in test_cases:\n        result = calculate_metrics(case['V1'], case['V2'], case['d'])\n        all_results.append(result)\n\n    # Format the final output string as specified\n    formatted_lists = []\n    for res_list in all_results:\n        # Format each number to 6 decimal places\n        formatted_numbers = [f\"{num:.6f}\" for num in res_list]\n        formatted_lists.append(f\"[{','.join(formatted_numbers)}]\")\n    \n    final_output = f\"[{','.join(formatted_lists)}]\"\n    print(final_output)\n\ndef calculate_metrics(V1, V2, d):\n    \"\"\"\n    Calculates band structure metrics for a given set of potential parameters.\n    \"\"\"\n    # Fixed constants from the problem statement\n    a = 1.0\n    sigma = 0.2\n    N = 5\n    num_k_points = 301\n    \n    # Set up the k-point grid in the First Brillouin Zone\n    k_values = np.linspace(-np.pi / a, np.pi / a, num_k_points)\n    \n    # Pre-compute the Fourier coefficients of the potential V(x)\n    # The matrix element V_{nm} depends on p = n-m, which ranges from -2N to 2N.\n    dim_H = 2 * N + 1\n    p_values = np.arange(-dim_H + 1, dim_H) # from -2N to 2N\n    \n    Gp = 2 * np.pi * p_values / a\n    \n    prefactor = np.sqrt(2 * np.pi) * sigma / a\n    exp_term = np.exp(-1j * Gp * d)\n    gauss_term = np.exp(-0.5 * Gp**2 * sigma**2)\n    \n    V_fourier = prefactor * (V1 + V2 * exp_term) * gauss_term\n    \n    # Store Fourier coefficients in a dictionary for easy access by p=n-m\n    V_map = {p: V_fourier[idx] for idx, p in enumerate(p_values)}\n\n    E1_k = np.zeros(num_k_points)\n    E2_k = np.zeros(num_k_points)\n    \n    # Basis state indices n run from -N to N\n    n_indices = np.arange(-N, N + 1)\n    G_n_vals = 2 * np.pi * n_indices / a\n    \n    # Hamiltonian matrix\n    H = np.zeros((dim_H, dim_H), dtype=np.complex128)\n\n    # Loop over all k-points\n    for ik, k in enumerate(k_values):\n        # Construct the Hamiltonian matrix H(k)\n        for i in range(dim_H):\n            for j in range(dim_H):\n                if i == j:\n                    # Diagonal elements: Kinetic Energy + V(G=0)\n                    H[i, j] = (k + G_n_vals[i])**2 + V_map[0]\n                else:\n                    # Off-diagonal elements: Potential coupling\n                    p = n_indices[i] - n_indices[j]\n                    H[i, j] = V_map[p]\n        \n        # Diagonalize the Hermitian matrix H(k)\n        # eigh returns sorted eigenvalues\n        eigenvalues = eigh(H, eigvals_only=True)\n        E1_k[ik] = eigenvalues[0]\n        E2_k[ik] = eigenvalues[1]\n        \n    # --- Compute the required metrics ---\n\n    # 1. Direct energy splitting at the Gamma-point (k=0)\n    # k=0 is at the center of the k-grid\n    k0_index = num_k_points // 2\n    delta_E_gamma = E2_k[k0_index] - E1_k[k0_index]\n    \n    # 2. Direct energy splitting at the zone boundary (k=pi/a)\n    # k=pi/a is the last point in the k-grid\n    k_edge_index = num_k_points - 1\n    delta_E_edge = E2_k[k_edge_index] - E1_k[k_edge_index]\n    \n    # 3. Acoustic-vs-optical dispersivity contrast A\n    bandwidth1 = np.max(E1_k) - np.min(E1_k)\n    bandwidth2 = np.max(E2_k) - np.min(E2_k)\n    A = bandwidth1 - bandwidth2\n    \n    return [delta_E_gamma, delta_E_edge, A]\n\nsolve()\n```", "id": "2387858"}]}