{"hands_on_practices": [{"introduction": "The shape of a hazard function, $h(t)$, reveals the underlying pattern of risk over time. While some risks are constant or always increasing, many real-world phenomena exhibit a more complex pattern of risk that first rises and then declines. This practice explores the log-logistic model, a flexible tool for capturing such non-monotonic risk profiles. By deriving its \"hump-shaped\" hazard function from first principles and identifying the point of peak risk, you will gain a deeper intuition for how different mathematical forms can model diverse survival dynamics [@problem_id:3186972].", "problem": "A data scientist is modeling a time-to-event variable $T \\geq 0$ in a customer retention study. The model assumes a log-logistic survival function\n$$\nS(t) = \\frac{1}{1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}},\n$$\nwith scale parameter $\\alpha  0$ and shape parameter $\\gamma  0$. Starting only from the core definitions of survival analysis, namely:\n- the probability density function (PDF) $f(t)$ satisfies $f(t) = -\\frac{d}{dt}S(t)$, and\n- the hazard function $h(t)$ is defined by $h(t) = \\frac{f(t)}{S(t)}$,\nderive the hazard function $h(t)$ implied by $S(t)$.\n\nThen, analyze the behavior of $h(t)$ to show that when $\\gamma  1$ it is nonmonotone and attains a unique interior maximum. Determine the exact closed-form time $t^{\\star}$ at which $h(t)$ reaches this peak, expressed in terms of $\\alpha$ and $\\gamma$. Conclude with a brief, scientifically grounded interpretation of what a hump-shaped hazard implies for risk over time in this retention context.\n\nYour final answer must be the single closed-form analytic expression for $t^{\\star}$ in terms of $\\alpha$ and $\\gamma$.", "solution": "The problem is valid. It is a well-posed, scientifically grounded problem in survival analysis that is self-contained and free of contradictions or ambiguities. It asks for the derivation and analysis of standard statistical functions based on fundamental definitions.\n\nThe problem commences with the survival function for a log-logistic distribution, given by\n$$\nS(t) = \\frac{1}{1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}}\n$$\nwhere $t \\geq 0$ is the time-to-event variable, $\\alpha  0$ is the scale parameter, and $\\gamma  0$ is the shape parameter.\n\nFirst, we derive the probability density function (PDF), $f(t)$, using its definition in terms of the survival function, $f(t) = -\\frac{d}{dt}S(t)$. To facilitate differentiation, we can write $S(t)$ as:\n$$\nS(t) = \\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right]^{-1}\n$$\nApplying the chain rule for differentiation with respect to $t$:\n$$\n\\frac{d}{dt}S(t) = -1 \\cdot \\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right]^{-2} \\cdot \\frac{d}{dt}\\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right]\n$$\nThe derivative of the inner part is:\n$$\n\\frac{d}{dt}\\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right] = \\frac{d}{dt}\\left(\\frac{t^{\\gamma}}{\\alpha^{\\gamma}}\\right) = \\frac{1}{\\alpha^{\\gamma}} \\cdot \\gamma t^{\\gamma-1} = \\frac{\\gamma}{\\alpha} \\left(\\frac{t}{\\alpha}\\right)^{\\gamma-1}\n$$\nSubstituting this back, we get:\n$$\n\\frac{d}{dt}S(t) = -\\frac{\\frac{\\gamma}{\\alpha} \\left(\\frac{t}{\\alpha}\\right)^{\\gamma-1}}{\\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right]^2}\n$$\nTherefore, the PDF is:\n$$\nf(t) = -\\frac{d}{dt}S(t) = \\frac{\\frac{\\gamma}{\\alpha} \\left(\\frac{t}{\\alpha}\\right)^{\\gamma-1}}{\\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right]^2}\n$$\nNext, we derive the hazard function, $h(t)$, using its definition, $h(t) = \\frac{f(t)}{S(t)}$.\n$$\nh(t) = \\frac{\\frac{\\frac{\\gamma}{\\alpha} \\left(\\frac{t}{\\alpha}\\right)^{\\gamma-1}}{\\left[1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}\\right]^2}}{\\frac{1}{1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}}}\n$$\nCanceling one of the denominator terms, we obtain the hazard function:\n$$\nh(t) = \\frac{\\frac{\\gamma}{\\alpha} \\left(\\frac{t}{\\alpha}\\right)^{\\gamma-1}}{1 + \\left(\\frac{t}{\\alpha}\\right)^{\\gamma}}\n$$\nTo analyze the behavior of $h(t)$, we seek to find its extrema by finding the critical points. This is done by solving $\\frac{d}{dt}h(t) = 0$. For easier differentiation, we can rewrite $h(t)$ by multiplying the numerator and denominator by $\\alpha^{\\gamma}$:\n$$\nh(t) = \\frac{\\gamma \\alpha^{\\gamma-1} t^{\\gamma-1}}{\\alpha^{\\gamma} + t^{\\gamma}}\n$$\nNow we differentiate $h(t)$ with respect to $t$ using the quotient rule, where $u(t) = \\gamma \\alpha^{\\gamma-1} t^{\\gamma-1}$ and $v(t) = \\alpha^{\\gamma} + t^{\\gamma}$.\nThe derivatives are $u'(t) = \\gamma \\alpha^{\\gamma-1} (\\gamma-1) t^{\\gamma-2}$ and $v'(t) = \\gamma t^{\\gamma-1}$.\n$$\n\\frac{d}{dt}h(t) = \\frac{u'(t)v(t) - u(t)v'(t)}{[v(t)]^2} = \\frac{\\gamma \\alpha^{\\gamma-1}(\\gamma-1)t^{\\gamma-2}(\\alpha^{\\gamma} + t^{\\gamma}) - \\gamma \\alpha^{\\gamma-1}t^{\\gamma-1}(\\gamma t^{\\gamma-1})}{(\\alpha^{\\gamma} + t^{\\gamma})^2}\n$$\nWe set the numerator to $0$ to find the critical points for $t  0$. We can factor out the common term $\\gamma \\alpha^{\\gamma-1}t^{\\gamma-2}$:\n$$\n\\gamma \\alpha^{\\gamma-1}t^{\\gamma-2} \\left[ (\\gamma-1)(\\alpha^{\\gamma} + t^{\\gamma}) - \\gamma t^{\\gamma} \\right] = 0\n$$\nSince $\\alpha  0$, $\\gamma  0$, and we are looking for an interior maximum ($t  0$), we must have the term in the brackets equal to zero:\n$$\n(\\gamma-1)(\\alpha^{\\gamma} + t^{\\gamma}) - \\gamma t^{\\gamma} = 0\n$$\n$$\n(\\gamma-1)\\alpha^{\\gamma} + (\\gamma-1)t^{\\gamma} - \\gamma t^{\\gamma} = 0\n$$\n$$\n(\\gamma-1)\\alpha^{\\gamma} - t^{\\gamma} = 0\n$$\nThis gives the equation for the critical time $t^{\\star}$:\n$$\n(t^{\\star})^{\\gamma} = (\\gamma-1)\\alpha^{\\gamma}\n$$\nFor a real, positive solution for $t^{\\star}$ to exist, the right-hand side must be positive. Since $\\alpha  0$, this requires $\\gamma-1  0$, or $\\gamma  1$. This confirms that a nonmonotone shape with an interior extremum occurs only when the shape parameter $\\gamma$ is greater than $1$. If $0  \\gamma \\leq 1$, the hazard function is monotonically decreasing.\n\nSolving for $t^{\\star}$ when $\\gamma1$:\n$$\nt^{\\star} = \\left( (\\gamma-1)\\alpha^{\\gamma} \\right)^{1/\\gamma} = \\alpha (\\gamma-1)^{1/\\gamma}\n$$\nTo confirm this is a maximum, we examine the sign of the derivative, $\\frac{d}{dt}h(t)$. The sign is determined by the term $(\\gamma-1)\\alpha^{\\gamma} - t^{\\gamma}$.\n- For $0  t  t^{\\star}$, we have $t^{\\gamma}  (t^{\\star})^{\\gamma} = (\\gamma-1)\\alpha^{\\gamma}$. Thus $(\\gamma-1)\\alpha^{\\gamma} - t^{\\gamma}  0$, which implies $\\frac{d}{dt}h(t)  0$. The function is increasing.\n- For $t  t^{\\star}$, we have $t^{\\gamma}  (t^{\\star})^{\\gamma} = (\\gamma-1)\\alpha^{\\gamma}$. Thus $(\\gamma-1)\\alpha^{\\gamma} - t^{\\gamma}  0$, which implies $\\frac{d}{dt}h(t)  0$. The function is decreasing.\nThis confirms that $h(t)$ attains a unique interior maximum at $t = t^{\\star} = \\alpha(\\gamma-1)^{1/\\gamma}$ for $\\gamma  1$.\n\nFinally, the interpretation of a hump-shaped hazard in the context of customer retention is as follows. The hazard function $h(t)$ represents the instantaneous rate of customer churn at time $t$, given the customer has been retained up until time $t$.\n- The initial increasing phase of the hazard ($0  t  t^{\\star}$) signifies a period of escalating risk. Customers may be in an initial evaluation or trial period, and their likelihood of churning increases as time passes.\n- The peak of the hazard at $t = t^{\\star}$ marks the point of highest instantaneous risk. A customer who has survived this long is at their most vulnerable moment.\n- The subsequent decreasing phase ($t  t^{\\star}$) implies that if a customer is retained beyond this peak-risk time, their loyalty or investment in the product/service strengthens. The risk of churn then progressively declines, indicating a form of positive duration dependence followed by negative duration dependence. This flexible shape makes the log-logistic model suitable for phenomena where initial risk is low but grows, before eventually declining due to selection or adaptation.", "answer": "$$\n\\boxed{\\alpha (\\gamma - 1)^{\\frac{1}{\\gamma}}}\n$$", "id": "3186972"}, {"introduction": "A primary goal of survival analysis is to understand how individual characteristics, or covariates, affect time-to-event outcomes. This exercise introduces the powerful proportional hazards (PH) framework, using a Weibull model as a concrete example. Your task is to connect the model's parameters to an intuitive and important metric—the median survival time—and to quantify how this median time changes with the covariate, providing a direct and practical interpretation of the model's predictions [@problem_id:3186976].", "problem": "In a survival analysis setting within statistical learning, let $T \\geq 0$ denote a nonnegative time-to-event random variable and let $x \\in \\mathbb{R}$ be a scalar covariate. The survival function is $S(t \\mid x) = \\Pr(T  t \\mid x)$ and the hazard function is defined as $h(t \\mid x) = \\lim_{\\Delta t \\to 0^{+}} \\frac{\\Pr(t \\leq T  t + \\Delta t \\mid T \\geq t, x)}{\\Delta t}$. Consider a proportional hazards model (Proportional Hazards (PH)) with a Weibull baseline hazard, specified by\n$$\nh(t \\mid x) = \\lambda \\, k \\, t^{k-1} \\exp(\\beta x), \\quad t \\geq 0,\n$$\nwhere $\\lambda  0$ and $k  0$ are scale and shape parameters, respectively, and $\\beta \\in \\mathbb{R}$ encodes the log-linear effect of the covariate.\n\nStarting from the core definitions of survival and hazard, derive the median survival time $t_{0.5}(x)$ that satisfies $S(t_{0.5}(x) \\mid x) = 0.5$ as a closed-form expression in terms of $\\lambda$, $k$, $\\beta$, and $x$. Then, quantify the sensitivity of the median survival to small covariate changes by deriving the analytical expression for the derivative $\\frac{d}{dx} t_{0.5}(x)$, which characterizes the first-order change in $t_{0.5}(x)$ under an infinitesimal perturbation of $x$. Express both results as closed-form analytic expressions. No rounding is required, and no units are to be reported in the final answer.", "solution": "The problem statement is evaluated to be scientifically grounded, well-posed, objective, and complete. It represents a standard derivation in the field of survival analysis and is therefore valid.\n\nThe derivation proceeds in two stages. First, we will derive the median survival time, $t_{0.5}(x)$, by first principles. Second, we will differentiate this expression with respect to the covariate $x$ to find the sensitivity, $\\frac{d}{dx} t_{0.5}(x)$.\n\nThe fundamental relationship between the survival function $S(t \\mid x)$ and the hazard function $h(t \\mid x)$ is given by:\n$$\nS(t \\mid x) = \\exp\\left(-H(t \\mid x)\\right)\n$$\nwhere $H(t \\mid x)$ is the cumulative hazard function, defined as the integral of the hazard function from $0$ to $t$:\n$$\nH(t \\mid x) = \\int_{0}^{t} h(u \\mid x) \\, du\n$$\nThe problem specifies a proportional hazards model with a Weibull baseline, where the hazard function is:\n$$\nh(t \\mid x) = \\lambda \\, k \\, t^{k-1} \\exp(\\beta x)\n$$\nfor parameters $\\lambda  0$, $k  0$, and $\\beta \\in \\mathbb{R}$.\n\nFirst, we compute the cumulative hazard function $H(t \\mid x)$ by integrating the given hazard function with respect to the time variable, which we denote by $u$ in the integrand:\n$$\nH(t \\mid x) = \\int_{0}^{t} \\lambda \\, k \\, u^{k-1} \\exp(\\beta x) \\, du\n$$\nThe terms $\\lambda$ and $\\exp(\\beta x)$ are constant with respect to the integration variable $u$ and can be factored out of the integral:\n$$\nH(t \\mid x) = \\lambda \\exp(\\beta x) \\int_{0}^{t} k \\, u^{k-1} \\, du\n$$\nThe integral of $k \\, u^{k-1}$ is $u^k$. Evaluating the definite integral gives:\n$$\n\\int_{0}^{t} k \\, u^{k-1} \\, du = \\left[ u^k \\right]_{0}^{t} = t^k - 0^k = t^k\n$$\nsince $k  0$.\nSubstituting this result back into the expression for the cumulative hazard, we obtain:\n$$\nH(t \\mid x) = \\lambda t^k \\exp(\\beta x)\n$$\nNow, we can write the survival function $S(t \\mid x)$:\n$$\nS(t \\mid x) = \\exp\\left(-\\lambda t^k \\exp(\\beta x)\\right)\n$$\nThe median survival time, denoted $t_{0.5}(x)$, is the time $t$ at which the survival probability is exactly $0.5$. We find this by setting $S(t \\mid x) = 0.5$ and solving for $t = t_{0.5}(x)$:\n$$\nS(t_{0.5}(x) \\mid x) = \\exp\\left(-\\lambda [t_{0.5}(x)]^k \\exp(\\beta x)\\right) = 0.5\n$$\nTo solve for $t_{0.5}(x)$, we take the natural logarithm of both sides:\n$$\n-\\lambda [t_{0.5}(x)]^k \\exp(\\beta x) = \\ln(0.5)\n$$\nUsing the property $\\ln(0.5) = \\ln(1/2) = -\\ln(2)$, the equation becomes:\n$$\n-\\lambda [t_{0.5}(x)]^k \\exp(\\beta x) = -\\ln(2)\n$$\nMultiplying by $-1$ and isolating the term containing $t_{0.5}(x)$ yields:\n$$\n[t_{0.5}(x)]^k = \\frac{\\ln(2)}{\\lambda \\exp(\\beta x)} = \\frac{\\ln(2)}{\\lambda} \\exp(-\\beta x)\n$$\nTo obtain the final expression for $t_{0.5}(x)$, we take the $k$-th root of both sides (or raise to the power of $1/k$):\n$$\nt_{0.5}(x) = \\left(\\frac{\\ln(2)}{\\lambda} \\exp(-\\beta x)\\right)^{1/k} = \\left(\\frac{\\ln(2)}{\\lambda}\\right)^{1/k} \\exp\\left(-\\frac{\\beta x}{k}\\right)\n$$\nThis is the closed-form expression for the median survival time.\n\nNext, we quantify the sensitivity of the median survival time to the covariate $x$ by computing the derivative $\\frac{d}{dx} t_{0.5}(x)$. Let us define a constant $C = \\left(\\frac{\\ln(2)}{\\lambda}\\right)^{1/k}$ to simplify the expression. Then:\n$$\nt_{0.5}(x) = C \\cdot \\exp\\left(-\\frac{\\beta x}{k}\\right)\n$$\nWe differentiate this expression with respect to $x$ using the chain rule. The derivative of $\\exp(ax)$ is $a\\exp(ax)$. Here, the role of $a$ is played by $-\\frac{\\beta}{k}$.\n$$\n\\frac{d}{dx} t_{0.5}(x) = \\frac{d}{dx} \\left[ C \\cdot \\exp\\left(-\\frac{\\beta x}{k}\\right) \\right] = C \\cdot \\frac{d}{dx} \\left[ \\exp\\left(-\\frac{\\beta x}{k}\\right) \\right]\n$$\n$$\n\\frac{d}{dx} t_{0.5}(x) = C \\cdot \\left(-\\frac{\\beta}{k}\\right) \\exp\\left(-\\frac{\\beta x}{k}\\right)\n$$\nSubstituting the expression for $C$ back into this equation gives the final analytical form for the derivative:\n$$\n\\frac{d}{dx} t_{0.5}(x) = \\left(\\frac{\\ln(2)}{\\lambda}\\right)^{1/k} \\left(-\\frac{\\beta}{k}\\right) \\exp\\left(-\\frac{\\beta x}{k}\\right)\n$$\nwhich can be rearranged to:\n$$\n\\frac{d}{dx} t_{0.5}(x) = -\\frac{\\beta}{k} \\left(\\frac{\\ln(2)}{\\lambda}\\right)^{1/k} \\exp\\left(-\\frac{\\beta x}{k}\\right)\n$$\nThis completes the derivation of both requested quantities.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\left(\\frac{\\ln(2)}{\\lambda}\\right)^{1/k} \\exp\\left(-\\frac{\\beta x}{k}\\right)  -\\frac{\\beta}{k} \\left(\\frac{\\ln(2)}{\\lambda}\\right)^{1/k} \\exp\\left(-\\frac{\\beta x}{k}\\right) \\end{pmatrix}}\n$$", "id": "3186976"}, {"introduction": "Building a survival model is only half the battle; we must also verify that its predictions are reliable and well-calibrated. This final hands-on practice addresses this critical task by bridging the gap between theory and implementation. You will write a program to compare a model's predicted event probabilities against the actual event rates observed in data, a fundamental procedure for assessing whether a model is trustworthy enough for making real-world decisions [@problem_id:3186997].", "problem": "You are given a cohort with right-censored time-to-event data and a model that outputs predicted survival functions $\\hat S(t \\mid X)$ evaluated at specified time bin edges. The goal is to assess the calibration of the hazard function $h(t \\mid X)$ by comparing, within bins of time, empirical event rates to the model-implied conditional event probabilities derived from $\\hat S(t \\mid X)$. Start from the core definitions of the survival function and the hazard function in time-to-event analysis: the survival function $S(t) = \\mathbb{P}(T  t)$ and the hazard function $h(t) = \\lim_{\\Delta t \\to 0} \\frac{\\mathbb{P}(t \\le T  t + \\Delta t \\mid T \\ge t)}{\\Delta t}$. Use only these definitions and well-tested facts from survival analysis to derive the algorithmic quantities you will compute.\n\nDesign a binning procedure over time using given bin edges $\\{t_0, t_1, \\dots, t_K\\}$, where bin $k$ corresponds to the interval $[t_k, t_{k+1})$. For each bin:\n- Determine the empirical event rate as the fraction of individuals who experience the event in the bin among those at risk at the start of the bin.\n- Determine the model-implied conditional event probability in the bin, aggregating individual predictions from the given $\\hat S(t \\mid X)$ evaluated at the bin edges.\n\nImplement the following rules precisely:\n1. An individual $i$ with observed time $T_i$ is at risk at the start of bin $k$ if $T_i \\ge t_k$.\n2. The observed number of events in bin $k$ is the count of individuals with event indicator $\\delta_i = 1$ and $t_k \\le T_i  t_{k+1}$.\n3. The empirical event rate for bin $k$ is $d_k / n_k$, where $d_k$ is the event count in the bin and $n_k$ is the number at risk at the start of the bin. If $n_k = 0$, define the empirical event rate to be $0$ for that bin.\n4. The model-implied conditional event probability for an individual $i$ in bin $k$ is computed from $\\hat S_i(t)$ at the bin edges $t_k$ and $t_{k+1}$ and is aggregated by averaging across all individuals at risk at the start of the bin. When computing with the provided $\\hat S_i(t)$ values, clip survival values to the interval $[10^{-12}, 1]$ to avoid division-by-zero and ensure numerical stability, and then constrain the resulting conditional probabilities to the interval $[0, 1]$.\n5. Quantify calibration by the root mean squared error (RMSE), defined as the square root of the average of the squared differences between the empirical event rates and the predicted conditional event probabilities across all bins. If a bin has $n_k = 0$, include that bin using the values defined above.\n\nYour program must implement this procedure for each of the following test cases and output the RMSE for each case. No physical units are required; probabilities are dimensionless. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[$r_1, r_2, r_3$]\"), where each $r_j$ is a floating-point number corresponding to the RMSE for test case $j$.\n\nTest Suite:\n- Test Case 1 (general case):\n  - Bin edges: $[0.0, 2.0, 4.0, 6.0]$.\n  - Observed times: $T = [1.0, 3.2, 5.5, 2.1, 4.5, 6.0]$.\n  - Event indicators: $\\delta = [1, 1, 1, 0, 1, 0]$.\n  - Predicted survival matrix $\\hat S$ at the bin edges (rows are individuals, columns are edges):\n    - Individual $1$: $[1.0, 0.201896, 0.040762, 0.008230]$.\n    - Individual $2$: $[1.0, 0.548812, 0.301194, 0.165299]$.\n    - Individual $3$: $[1.0, 0.818731, 0.670320, 0.548812]$.\n    - Individual $4$: $[1.0, 0.367879, 0.135335, 0.049787]$.\n    - Individual $5$: $[1.0, 0.670320, 0.449329, 0.301194]$.\n    - Individual $6$: $[1.0, 0.904837, 0.818731, 0.740818]$.\n- Test Case 2 (single bin and mixed outcomes):\n  - Bin edges: $[0.0, 1.0]$.\n  - Observed times: $T = [0.3, 0.7, 1.2, 0.9]$.\n  - Event indicators: $\\delta = [1, 0, 1, 1]$.\n  - Predicted survival matrix $\\hat S$:\n    - Individual $1$: $[1.0, 0.7]$.\n    - Individual $2$: $[1.0, 0.9]$.\n    - Individual $3$: $[1.0, 0.6]$.\n    - Individual $4$: $[1.0, 0.8]$.\n- Test Case 3 (constructed perfect calibration across bins):\n  - Bin edges: $[0.0, 1.0, 2.0]$.\n  - Observed times: $T = [0.5, 1.5, 1.7, 3.0, 3.0]$.\n  - Event indicators: $\\delta = [1, 1, 0, 0, 0]$.\n  - Predicted survival matrix $\\hat S$:\n    - Individual $1$: $[1.0, 0.8, 0.6]$.\n    - Individual $2$: $[1.0, 0.8, 0.6]$.\n    - Individual $3$: $[1.0, 0.8, 0.6]$.\n    - Individual $4$: $[1.0, 0.8, 0.6]$.\n    - Individual $5$: $[1.0, 0.8, 0.6]$.\n- Test Case 4 (no observed events, nonzero predicted hazards):\n  - Bin edges: $[0.0, 2.0, 4.0]$.\n  - Observed times: $T = [1.0, 3.0, 3.5]$.\n  - Event indicators: $\\delta = [0, 0, 0]$.\n  - Predicted survival matrix $\\hat S$:\n    - Individual $1$: $[1.0, 0.548812, 0.301194]$.\n    - Individual $2$: $[1.0, 0.548812, 0.301194]$.\n    - Individual $3$: $[1.0, 0.548812, 0.301194]$.\n\nYour program must compute, for each test case, the root mean squared error as defined above and return the results in the specified single-line format. No input should be read; all data must be hardcoded as given here.", "solution": "The problem of assessing the calibration of a survival model's hazard function by binning time is a well-posed and scientifically grounded task in statistical learning and biostatistics. The problem statement provides all necessary data and definitions to construct a rigorous, verifiable algorithm.\n\nThe core of the problem lies in comparing an empirical event rate to a model-predicted event probability within discrete time intervals. We begin by formalizing the quantities involved, starting from the fundamental definitions provided.\n\nThe survival function, $S(t)$, is the probability that the event of interest has not occurred by time $t$, defined as $S(t) = \\mathbb{P}(T  t)$, where $T$ is the time-to-event random variable. The hazard function, $h(t)$, represents the instantaneous rate of event occurrence at time $t$, given survival up to time $t$:\n$$h(t) = \\lim_{\\Delta t \\to 0} \\frac{\\mathbb{P}(t \\le T  t + \\Delta t \\mid T \\ge t)}{\\Delta t}$$\n\nThe problem requires a discrete-time analysis over a set of predefined time bins. Let the bin edges be $\\{t_0, t_1, \\dots, t_K\\}$, defining $K$ bins, where bin $k$ is the interval $[t_k, t_{k+1})$ for $k \\in \\{0, 1, \\dots, K-1\\}$.\n\nFor each bin $k$, we must compute two quantities: the empirical event rate and the model-implied conditional event probability.\n\nFirst, we derive the model-implied conditional event probability for an individual $i$ in bin $k$, given that the individual was event-free at the start of the bin. This probability is $p_{i,k} = \\mathbb{P}(t_k \\le T_i  t_{k+1} \\mid T_i \\ge t_k)$. Using the definition of conditional probability:\n$$p_{i,k} = \\frac{\\mathbb{P}(\\{t_k \\le T_i  t_{k+1}\\} \\cap \\{T_i \\ge t_k\\})}{\\mathbb{P}(T_i \\ge t_k)}$$\nThe event in the numerator, $\\{t_k \\le T_i  t_{k+1}\\} \\cap \\{T_i \\ge t_k\\}$, is simply $\\{t_k \\le T_i  t_{k+1}\\}$. The probability of this interval event can be expressed in terms of the survival function. Assuming a continuous time-to-event variable, $\\mathbb{P}(t_k \\le T_i  t_{k+1}) = S_i(t_k) - S_i(t_{k+1})$. The probability in the denominator is $\\mathbb{P}(T_i \\ge t_k)$, which is also $S_i(t_k)$ for a continuous variable. Thus, the individual conditional event probability is:\n$$p_{i,k} = \\frac{S_i(t_k) - S_i(t_{k+1})}{S_i(t_k)} = 1 - \\frac{S_i(t_{k+1})}{S_i(t_k)}$$\nThis derivation provides the formula to compute the model-implied probability for an individual $i$ using the model's predicted survival function, $\\hat{S}_i(t)$.\n\nThe algorithmic procedure to calculate the root mean squared error (RMSE) of calibration is as follows:\n\nFor each test case, with given bin edges $\\{t_k\\}_{k=0}^K$, observed times $\\{T_i\\}_{i=1}^N$, event indicators $\\{\\delta_i\\}_{i=1}^N$, and predicted survival functions $\\{\\hat{S}_i(t)\\}_{i=1}^N$:\n\n1.  Initialize an empty list to store the squared errors for each bin.\n2.  Iterate through each bin $k$ from $0$ to $K-1$, corresponding to the interval $[t_k, t_{k+1})$.\n\n    a.  **Determine the Risk Set**: Identify the set of individuals, $R_k$, who are at risk at the beginning of bin $k$. According to the problem, an individual $i$ is at risk if their observed time $T_i$ is greater than or equal to the start of the bin, i.e., $R_k = \\{i \\mid T_i \\ge t_k\\}$. The number of individuals at risk is $n_k = |R_k|$.\n\n    b.  **Calculate Empirical Event Rate ($E_k$)**:\n        i.  Count the number of observed events, $d_k$, within the bin. These are individuals who experienced the event in the time interval $[t_k, t_{k+1})$. Formally, $d_k = \\sum_{i=1}^N \\mathbb{I}(t_k \\le T_i  t_{k+1} \\text{ and } \\delta_i = 1)$, where $\\mathbb{I}(\\cdot)$ is the indicator function.\n        ii. The empirical event rate for bin $k$ is $E_k = \\frac{d_k}{n_k}$. If $n_k = 0$, the problem specifies that $E_k = 0$.\n\n    c.  **Calculate Average Predicted Probability ($P_k$)**:\n        i.  If $n_k = 0$, the average predicted probability is undefined. We adopt the convention that the contribution of this bin to the overall error is $0$, effectively setting $P_k=0$ to match $E_k=0$.\n        ii. If $n_k  0$, we first compute the individual predicted conditional event probability, $p_{i,k}$, for each individual $i \\in R_k$.\n            - Fetch the predicted survival probabilities $\\hat{S}_i(t_k)$ and $\\hat{S}_i(t_{k+1})$ from the provided data.\n            - For numerical stability, clip these values to the range $[10^{-12}, 1]$, let's call them $\\hat{S}'_i(t_k)$ and $\\hat{S}'_i(t_{k+1})$.\n            - Calculate the raw probability: $p_{i,k}^{\\text{raw}} = 1 - \\frac{\\hat{S}'_i(t_{k+1})}{\\hat{S}'_i(t_k)}$.\n            - Constrain this value to the interval $[0, 1]$ to obtain the final individual prediction $p_{i,k}$.\n        iii. The average predicted probability for the bin, $P_k$, is the mean of these individual probabilities over the risk set: $P_k = \\frac{1}{n_k} \\sum_{i \\in R_k} p_{i,k}$.\n\n    d.  **Store Squared Error**: Calculate the squared difference $(E_k - P_k)^2$ and add it to the list of squared errors.\n\n3.  **Compute Final RMSE**: After iterating through all $K$ bins, calculate the mean of the stored squared errors. The RMSE is the square root of this mean:\n    $$\\text{RMSE} = \\sqrt{\\frac{1}{K} \\sum_{k=0}^{K-1} (E_k - P_k)^2}$$\n\nThis procedure is applied to each test case to compute the required RMSE values.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by calculating the calibration RMSE for each test case.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"bin_edges\": [0.0, 2.0, 4.0, 6.0],\n            \"T\": [1.0, 3.2, 5.5, 2.1, 4.5, 6.0],\n            \"delta\": [1, 1, 1, 0, 1, 0],\n            \"S_hat\": [\n                [1.0, 0.201896, 0.040762, 0.008230],\n                [1.0, 0.548812, 0.301194, 0.165299],\n                [1.0, 0.818731, 0.670320, 0.548812],\n                [1.0, 0.367879, 0.135335, 0.049787],\n                [1.0, 0.670320, 0.449329, 0.301194],\n                [1.0, 0.904837, 0.818731, 0.740818],\n            ],\n        },\n        {\n            \"bin_edges\": [0.0, 1.0],\n            \"T\": [0.3, 0.7, 1.2, 0.9],\n            \"delta\": [1, 0, 1, 1],\n            \"S_hat\": [\n                [1.0, 0.7],\n                [1.0, 0.9],\n                [1.0, 0.6],\n                [1.0, 0.8],\n            ],\n        },\n        {\n            \"bin_edges\": [0.0, 1.0, 2.0],\n            \"T\": [0.5, 1.5, 1.7, 3.0, 3.0],\n            \"delta\": [1, 1, 0, 0, 0],\n            \"S_hat\": [\n                [1.0, 0.8, 0.6],\n                [1.0, 0.8, 0.6],\n                [1.0, 0.8, 0.6],\n                [1.0, 0.8, 0.6],\n                [1.0, 0.8, 0.6],\n            ],\n        },\n        {\n            \"bin_edges\": [0.0, 2.0, 4.0],\n            \"T\": [1.0, 3.0, 3.5],\n            \"delta\": [0, 0, 0],\n            \"S_hat\": [\n                [1.0, 0.548812, 0.301194],\n                [1.0, 0.548812, 0.301194],\n                [1.0, 0.548812, 0.301194],\n            ],\n        },\n    ]\n\n    def calculate_rmse(bin_edges, T, delta, S_hat):\n        \"\"\"\n        Calculates the calibration RMSE for a single test case.\n        \"\"\"\n        T = np.array(T)\n        delta = np.array(delta)\n        S_hat = np.array(S_hat)\n        \n        num_individuals = len(T)\n        num_bins = len(bin_edges) - 1\n        squared_errors = []\n\n        for k in range(num_bins):\n            t_k = bin_edges[k]\n            t_k_plus_1 = bin_edges[k+1]\n\n            # 1. Determine the risk set\n            at_risk_indices = np.where(T = t_k)[0]\n            n_k = len(at_risk_indices)\n\n            # Handle case where no one is at risk\n            if n_k == 0:\n                empirical_rate = 0.0\n                predicted_prob = 0.0\n                squared_errors.append((empirical_rate - predicted_prob)**2)\n                continue\n\n            # 2. Calculate empirical event rate\n            event_indices = np.where((T = t_k)  (T  t_k_plus_1)  (delta == 1))[0]\n            d_k = len(event_indices)\n            empirical_rate = d_k / n_k\n\n            # 3. Calculate model-implied conditional event probability\n            individual_probs = []\n            for i in at_risk_indices:\n                s_hat_tk = S_hat[i, k]\n                s_hat_tk_plus_1 = S_hat[i, k+1]\n\n                # Clip survival values for numerical stability\n                s_hat_tk_clipped = np.clip(s_hat_tk, 1e-12, 1.0)\n                s_hat_tk_plus_1_clipped = np.clip(s_hat_tk_plus_1, 1e-12, 1.0)\n\n                # Calculate individual probability\n                prob_raw = 1.0 - (s_hat_tk_plus_1_clipped / s_hat_tk_clipped)\n                \n                # Constrain probability to [0, 1]\n                prob = np.clip(prob_raw, 0.0, 1.0)\n                individual_probs.append(prob)\n            \n            predicted_prob = np.mean(individual_probs)\n\n            # 4. Quantify calibration error for the bin\n            squared_errors.append((empirical_rate - predicted_prob)**2)\n\n        # 5. Compute final RMSE\n        if not squared_errors:\n            return 0.0\n            \n        mean_squared_error = np.mean(squared_errors)\n        rmse = np.sqrt(mean_squared_error)\n        \n        return rmse\n\n    results = []\n    for case in test_cases:\n        rmse = calculate_rmse(case[\"bin_edges\"], case[\"T\"], case[\"delta\"], case[\"S_hat\"])\n        results.append(rmse)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.7f}' for r in results)}]\")\n\nsolve()\n```", "id": "3186997"}]}