{"hands_on_practices": [{"introduction": "This exercise demonstrates the most fundamental scenario in the Steihaug Truncated Conjugate Gradient (TCG) method. We will perform a single iteration, starting with a step along the steepest descent direction, and see what happens when the unconstrained minimizer along this path lies outside the trust region. This practice is crucial for understanding the primary truncation rule and its connection to the concept of the Cauchy point, which guarantees a sufficient decrease in the model function [@problem_id:3185651].", "problem": "Consider the trust-region quadratic model of order two for minimizing a smooth function near a current iterate, defined by\n$$\nm(p) \\;=\\; m(0) \\;+\\; g^{\\top}p \\;+\\; \\tfrac{1}{2}\\,p^{\\top}Hp,\n$$\nwhere the gradient at the current iterate is\n$$\ng \\;=\\; \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix},\n$$\nand the symmetric positive definite Hessian approximation is\n$$\nH \\;=\\; \\begin{pmatrix} 2 & 0 \\\\ 0 & 6 \\end{pmatrix}.\n$$\nLet the trust-region radius be\n$$\n\\Delta \\;=\\; 1.\n$$\nApply one iteration of Steihaug's truncated conjugate gradient method, which starts from\n$$\np_{0} \\;=\\; 0, \\quad d_{0} \\;=\\; -g,\n$$\nand moves along the ray\n$$\np(\\alpha) \\;=\\; p_{0} + \\alpha d_{0}\n$$\nuntil either the one-dimensional minimizer is reached or the boundary of the trust region is encountered.\n\nUsing only the definitions of the trust-region model and the line search along the initial direction, do the following:\n- Determine the first trial step length $\\alpha_{0}$ at which the trust-region boundary is hit along the direction $d_{0}$ by solving the boundary equation $\\|p(\\alpha)\\| = \\Delta$.\n- Verify by differentiating the univariate model $\\phi(\\alpha) = m(p(\\alpha))$ that the unconstrained minimizer along $d_{0}$ occurs at some $\\alpha_{\\star}$, and decide whether $\\alpha_{\\star}$ lies beyond the trust-region boundary.\n- Compute the step $p_{1} = p(\\alpha_{0})$.\n- Compute the predicted reduction $m(0) - m(p_{1})$.\n- Compute the Cauchy decrease for this data and verify that it equals the predicted reduction.\n\nReport the common value of the predicted reduction and the Cauchy decrease. Round your answer to four significant figures.", "solution": "The problem is to apply one iteration of Steihaug's truncated conjugate gradient method to a given trust-region quadratic model. The process involves finding the step that minimizes the model along the steepest descent direction within the trust-region boundary.\n\nThe given quadratic model is\n$$\nm(p) \\;=\\; m(0) \\;+\\; g^{\\top}p \\;+\\; \\tfrac{1}{2}\\,p^{\\top}Hp\n$$\nwith the gradient vector\n$$\ng \\;=\\; \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix}\n$$\nand the symmetric positive definite Hessian matrix\n$$\nH \\;=\\; \\begin{pmatrix} 2 & 0 \\\\ 0 & 6 \\end{pmatrix}\n$$\nThe trust-region radius is $\\Delta = 1$.\n\nThe first iteration of Steihaug's method starts from the origin, $p_{0} = 0$, and searches along the steepest descent direction, $d_{0} = -g$. The trial step is defined by the ray $p(\\alpha) = p_{0} + \\alpha d_{0} = \\alpha d_{0}$ for $\\alpha \\geq 0$.\n\nFirst, we determine the step length $\\alpha_{0}$ at which the search path intersects the trust-region boundary. The boundary is defined by the equation $\\|p\\| = \\Delta$.\nSubstituting $p(\\alpha) = \\alpha d_{0}$, we get:\n$$\n\\|\\alpha d_{0}\\| \\;=\\; \\Delta\n$$\nSince $\\alpha \\ge 0$, this simplifies to $\\alpha \\|d_{0}\\| = \\Delta$. The norm of the search direction $d_{0} = -g$ is:\n$$\n\\|d_{0}\\| \\;=\\; \\|-g\\| \\;=\\; \\|g\\| \\;=\\; \\sqrt{3^2 + 4^2} \\;=\\; \\sqrt{9 + 16} \\;=\\; \\sqrt{25} \\;=\\; 5\n$$\nThe step length to reach the boundary is therefore:\n$$\n\\alpha_{0} \\;=\\; \\frac{\\Delta}{\\|d_{0}\\|} \\;=\\; \\frac{1}{5} \\;=\\; 0.2\n$$\n\nNext, we determine the unconstrained minimizer of the quadratic model along the direction $d_{0}$. We define a univariate quadratic function $\\phi(\\alpha) = m(p(\\alpha))$:\n$$\n\\phi(\\alpha) \\;=\\; m(0) + g^{\\top}(\\alpha d_{0}) + \\frac{1}{2}(\\alpha d_{0})^{\\top}H(\\alpha d_{0})\n$$\n$$\n\\phi(\\alpha) \\;=\\; m(0) + \\alpha (g^{\\top}d_{0}) + \\frac{1}{2}\\alpha^2 (d_{0}^{\\top}H d_{0})\n$$\nTo find the minimizer $\\alpha_{\\star}$, we set the derivative with respect to $\\alpha$ to zero:\n$$\n\\phi'(\\alpha) \\;=\\; g^{\\top}d_{0} + \\alpha (d_{0}^{\\top}H d_{0}) \\;=\\; 0\n$$\nThis gives the step length for the unconstrained minimizer:\n$$\n\\alpha_{\\star} \\;=\\; -\\frac{g^{\\top}d_{0}}{d_{0}^{\\top}H d_{0}}\n$$\nWe compute the two quadratic terms. Since $d_{0} = -g$:\n$$\ng^{\\top}d_{0} \\;=\\; g^{\\top}(-g) \\;=\\; -\\|g\\|^2 \\;=\\; -25\n$$\n$$\nd_{0}^{\\top}H d_{0} \\;=\\; (-g)^{\\top}H(-g) \\;=\\; g^{\\top}H g\n$$\nWe calculate $g^{\\top}H g$:\n$$\ng^{\\top}H g \\;=\\; \\begin{pmatrix} 3 & 4 \\end{pmatrix} \\begin{pmatrix} 2 & 0 \\\\ 0 & 6 \\end{pmatrix} \\begin{pmatrix} 3 \\\\ 4 \\end{pmatrix} \\;=\\; \\begin{pmatrix} 3 & 4 \\end{pmatrix} \\begin{pmatrix} 6 \\\\ 24 \\end{pmatrix} \\;=\\; 3(6) + 4(24) \\;=\\; 18 + 96 \\;=\\; 114\n$$\nNow, we can find $\\alpha_{\\star}$:\n$$\n\\alpha_{\\star} \\;=\\; -\\frac{-25}{114} \\;=\\; \\frac{25}{114} \\approx 0.2193\n$$\nWe compare the unconstrained minimizing step length $\\alpha_{\\star}$ with the step length to the boundary $\\alpha_{0}$:\n$$\n\\alpha_{\\star} \\;=\\; \\frac{25}{114} \\quad > \\quad \\alpha_{0} \\;=\\; \\frac{1}{5} \\;=\\; 0.2\n$$\nSince the unconstrained minimizer along $d_{0}$ lies beyond the trust-region boundary, Steihaug's method truncates the step at the boundary. The step taken is $p_{1} = p(\\alpha_{0})$.\n\nThe step $p_{1}$ is computed as:\n$$\np_{1} \\;=\\; \\alpha_{0} d_{0} \\;=\\; 0.2 \\times (-g) \\;=\\; 0.2 \\begin{pmatrix} -3 \\\\ -4 \\end{pmatrix} \\;=\\; \\begin{pmatrix} -0.6 \\\\ -0.8 \\end{pmatrix}\n$$\n\nThe predicted reduction in the model value is $m(0) - m(p_{1})$.\n$$\nm(0) - m(p_{1}) \\;=\\; - \\left( g^{\\top}p_{1} + \\frac{1}{2} p_{1}^{\\top}H p_{1} \\right)\n$$\nWe compute the terms:\n$$\ng^{\\top}p_{1} \\;=\\; \\begin{pmatrix} 3 & 4 \\end{pmatrix} \\begin{pmatrix} -0.6 \\\\ -0.8 \\end{pmatrix} \\;=\\; 3(-0.6) + 4(-0.8) \\;=\\; -1.8 - 3.2 \\;=\\; -5\n$$\n$$\np_{1}^{\\top}H p_{1} \\;=\\; \\begin{pmatrix} -0.6 & -0.8 \\end{pmatrix} \\begin{pmatrix} 2 & 0 \\\\ 0 & 6 \\end{pmatrix} \\begin{pmatrix} -0.6 \\\\ -0.8 \\end{pmatrix} \\;=\\; \\begin{pmatrix} -0.6 & -0.8 \\end{pmatrix} \\begin{pmatrix} -1.2 \\\\ -4.8 \\end{pmatrix}\n$$\n$$\np_{1}^{\\top}H p_{1} \\;=\\; (-0.6)(-1.2) + (-0.8)(-4.8) \\;=\\; 0.72 + 3.84 \\;=\\; 4.56\n$$\nThe predicted reduction is:\n$$\nm(0) - m(p_{1}) \\;=\\; - \\left( -5 + \\frac{1}{2}(4.56) \\right) \\;=\\; -(-5 + 2.28) \\;=\\; -(-2.72) \\;=\\; 2.72\n$$\n\nFinally, we must verify that this value equals the Cauchy decrease. The Cauchy point is defined as the minimizer of the quadratic model along the steepest descent direction within the trust region. The step we have just computed, $p_{1}$, is precisely the Cauchy point for this problem, because the unconstrained minimizer along the steepest descent direction was found to be outside the trust-region boundary, causing the step to be truncated at the boundary. The Cauchy decrease is, by definition, the predicted model reduction at the Cauchy point, which is $m(0) - m(p_{1})$. Therefore, the value we computed for the predicted reduction, $2.72$, is identical to the Cauchy decrease.\n\nThe problem asks for this common value, rounded to four significant figures.\n$$\n2.720\n$$", "answer": "$$\\boxed{2.720}$$", "id": "3185651"}, {"introduction": "Building on the basic boundary truncation, this problem explores a more advanced and critical feature of the Steihaug TCG method: its ability to handle non-convex quadratic models. You will work with an indefinite Hessian matrix and encounter a search direction with negative curvature, i.e., a direction along which the model value decreases without bound. This exercise will guide you through the process of detecting this negative curvature and applying the second truncation rule to find a stable step on the trust-region boundary [@problem_id:3185627].", "problem": "Consider the trust-region quadratic model $m(p) = g^{\\top} p + \\frac{1}{2} p^{\\top} B p$ for a step $p \\in \\mathbb{R}^{3}$, where the symmetric tridiagonal matrix $B \\in \\mathbb{R}^{3 \\times 3}$ and gradient $g \\in \\mathbb{R}^{3}$ are given by\n$$\nB = \\begin{pmatrix}\n2 & -1 & 0 \\\\\n-1 & -2 & -1 \\\\\n0 & -1 & 2\n\\end{pmatrix}, \n\\quad\ng = \\begin{pmatrix}\n1 \\\\\n0 \\\\\n0\n\\end{pmatrix}.\n$$\nLet the trust-region radius be $\\Delta = \\frac{3}{4}$. Use Steihaug's truncated Conjugate Gradient method (TCG) to solve the trust-region subproblem $\\min \\{ m(p) : \\|p\\| \\leq \\Delta \\}$ starting from $p_{0} = 0$, where the Conjugate Gradient (CG) iteration for the linear system $B p = -g$ is initiated with residual $r_{0} = g$ and search direction $d_{0} = -r_{0}$. In each CG iteration $k$, if the curvature $d_{k}^{\\top} B d_{k} > 0$ and the full step $p_{k+1} = p_{k} + \\alpha_{k} d_{k}$ with $\\alpha_{k} = \\frac{r_{k}^{\\top} r_{k}}{d_{k}^{\\top} B d_{k}}$ stays within the trust region (i.e., $\\|p_{k+1}\\| < \\Delta$), update the residual $r_{k+1} = r_{k} + \\alpha_{k} B d_{k}$ and the direction $d_{k+1} = -r_{k+1} + \\beta_{k} d_{k}$ with $\\beta_{k} = \\frac{r_{k+1}^{\\top} r_{k+1}}{r_{k}^{\\top} r_{k}}$. If either (i) the step along $d_{k}$ hits the trust-region boundary, or (ii) negative curvature is detected (i.e., $d_{k}^{\\top} B d_{k} \\leq 0$), truncate by moving from $p_{k}$ along $d_{k}$ to the boundary point $p^{\\star} = p_{k} + \\tau d_{k}$ with $\\tau > 0$ chosen so that $\\|p^{\\star}\\| = \\Delta$.\n\nTasks:\n1. Carry out the first CG iteration to compute $p_{1}$, $r_{1}$, and $d_{1}$.\n2. Determine whether negative curvature is present at the second direction $d_{1}$ by evaluating $d_{1}^{\\top} B d_{1}$.\n3. If truncation is required, solve analytically for the boundary intersection parameter $\\tau$ satisfying $\\|p_{1} + \\tau d_{1}\\| = \\Delta$, and compute the truncated step $p^{\\star} = p_{1} + \\tau d_{1}$.\n4. Verify the $B$-conjugacy of the directions generated before truncation by computing $d_{0}^{\\top} B d_{1}$, and verify the truncation rule by checking $\\|p^{\\star}\\| = \\Delta$.\n\nExpress the final trust-region step $p^{\\star}$ as a single exact analytic row vector. Use exact algebra and do not round.", "solution": "The problem is to apply Steihaug's truncated Conjugate Gradient (TCG) method to the given trust-region subproblem. We will follow the CG steps, checking for boundary hits or negative curvature at each iteration.\n\n**Initialization (k=0):**\n- Initial step: $p_0 = 0$\n- Initial residual: $r_0 = g + Bp_0 = g = \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\end{pmatrix}$\n- Initial search direction: $d_0 = -r_0 = \\begin{pmatrix} -1 \\\\ 0 \\\\ 0 \\end{pmatrix}$\n\n**First CG Iteration (k=0):**\n1.  **Check for negative curvature:** We compute $d_0^\\top B d_0$.\n    $$\n    d_0^\\top B d_0 = \\begin{pmatrix} -1 & 0 & 0 \\end{pmatrix} \\begin{pmatrix} 2 & -1 & 0 \\\\ -1 & -2 & -1 \\\\ 0 & -1 & 2 \\end{pmatrix} \\begin{pmatrix} -1 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 & 0 \\end{pmatrix} \\begin{pmatrix} -2 \\\\ 1 \\\\ 0 \\end{pmatrix} = 2\n    $$\n    Since $d_0^\\top B d_0 > 0$, the curvature is positive, and we proceed.\n\n2.  **Compute step length $\\alpha_0$:**\n    $$\n    \\alpha_0 = \\frac{r_0^\\top r_0}{d_0^\\top B d_0} = \\frac{1^2 + 0^2 + 0^2}{2} = \\frac{1}{2}\n    $$\n\n3.  **Check boundary condition:** The new point would be $p_1 = p_0 + \\alpha_0 d_0 = 0 + \\frac{1}{2} d_0 = \\begin{pmatrix} -1/2 \\\\ 0 \\\\ 0 \\end{pmatrix}$.\n    The norm of this new point is $\\|p_1\\| = \\sqrt{(-1/2)^2} = 1/2$.\n    The trust-region radius is $\\Delta = 3/4$. Since $\\|p_1\\| = 1/2  3/4$, the step is within the trust region. We accept this step and continue to the next iteration.\n\n4.  **Update residual and search direction:**\n    - $r_1 = r_0 + \\alpha_0 B d_0 = \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\end{pmatrix} + \\frac{1}{2} \\begin{pmatrix} -2 \\\\ 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 1/2 \\\\ 0 \\end{pmatrix}$\n    - $\\beta_0 = \\frac{r_1^\\top r_1}{r_0^\\top r_0} = \\frac{(1/2)^2}{1^2} = \\frac{1}{4}$\n    - $d_1 = -r_1 + \\beta_0 d_0 = \\begin{pmatrix} 0 \\\\ -1/2 \\\\ 0 \\end{pmatrix} + \\frac{1}{4} \\begin{pmatrix} -1 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -1/4 \\\\ -1/2 \\\\ 0 \\end{pmatrix}$\n\n**Second CG Iteration (k=1):**\n1.  **Check for negative curvature:** We have the current point $p_1 = (-1/2, 0, 0)^\\top$ and new direction $d_1 = (-1/4, -1/2, 0)^\\top$. We compute $d_1^\\top B d_1$.\n    $$\n    B d_1 = \\begin{pmatrix} 2  -1  0 \\\\ -1  -2  -1 \\\\ 0  -1  2 \\end{pmatrix} \\begin{pmatrix} -1/4 \\\\ -1/2 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} -1/2 + 1/2 \\\\ 1/4 + 1 \\\\ 1/2 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 5/4 \\\\ 1/2 \\end{pmatrix}\n    $$\n    $$\n    d_1^\\top B d_1 = \\begin{pmatrix} -1/4  -1/2  0 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 5/4 \\\\ 1/2 \\end{pmatrix} = 0 - \\frac{5}{8} + 0 = -\\frac{5}{8}\n    $$\n    Since $d_1^\\top B d_1 \\le 0$, we have detected a direction of negative curvature. The TCG algorithm must terminate and find a step by moving from $p_1$ along $d_1$ to the trust-region boundary.\n\n2.  **Truncate to boundary:** We need to find $\\tau > 0$ such that $\\|p_1 + \\tau d_1\\| = \\Delta$.\n    The squared-norm equation is $\\|p_1 + \\tau d_1\\|^2 = \\Delta^2 = (3/4)^2 = 9/16$.\n    $$\n    \\|p_1\\|^2 + 2\\tau(p_1^\\top d_1) + \\tau^2\\|d_1\\|^2 = 9/16\n    $$\n    - $\\|p_1\\|^2 = (-1/2)^2 = 1/4$\n    - $p_1^\\top d_1 = (-1/2)(-1/4) + 0 + 0 = 1/8$\n    - $\\|d_1\\|^2 = (-1/4)^2 + (-1/2)^2 = 1/16 + 1/4 = 5/16$\n    Substituting these values into the equation:\n    $$\n    \\frac{1}{4} + 2\\tau\\left(\\frac{1}{8}\\right) + \\tau^2\\left(\\frac{5}{16}\\right) = \\frac{9}{16}\n    $$\n    $$\n    \\frac{5}{16}\\tau^2 + \\frac{1}{4}\\tau + \\frac{4}{16} - \\frac{9}{16} = 0\n    $$\n    Multiplying by 16 gives:\n    $$\n    5\\tau^2 + 4\\tau - 5 = 0\n    $$\n    Using the quadratic formula for $\\tau$:\n    $$\n    \\tau = \\frac{-4 \\pm \\sqrt{4^2 - 4(5)(-5)}}{2(5)} = \\frac{-4 \\pm \\sqrt{16 + 100}}{10} = \\frac{-4 \\pm \\sqrt{116}}{10} = \\frac{-2 \\pm \\sqrt{29}}{5}\n    $$\n    Since we must move forward along $d_1$, we choose $\\tau > 0$: $\\tau = \\frac{-2 + \\sqrt{29}}{5}$.\n\n3.  **Compute final step $p^\\star$:**\n    The final step is $p^\\star = p_1 + \\tau d_1$.\n    $$\n    p^\\star = \\begin{pmatrix} -1/2 \\\\ 0 \\\\ 0 \\end{pmatrix} + \\left(\\frac{-2 + \\sqrt{29}}{5}\\right) \\begin{pmatrix} -1/4 \\\\ -1/2 \\\\ 0 \\end{pmatrix}\n    $$\n    The components are:\n    - $p_x^\\star = -\\frac{1}{2} + \\frac{-2 + \\sqrt{29}}{5} \\left(-\\frac{1}{4}\\right) = -\\frac{1}{2} + \\frac{2 - \\sqrt{29}}{20} = \\frac{-10 + 2 - \\sqrt{29}}{20} = \\frac{-8 - \\sqrt{29}}{20}$\n    - $p_y^\\star = 0 + \\frac{-2 + \\sqrt{29}}{5} \\left(-\\frac{1}{2}\\right) = \\frac{2 - \\sqrt{29}}{10}$\n    - $p_z^\\star = 0$\n                \nThe final trust-region step is the row vector $\\begin{pmatrix} \\frac{-8 - \\sqrt{29}}{20}  \\frac{2 - \\sqrt{29}}{10}  0 \\end{pmatrix}$.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{-8 - \\sqrt{29}}{20}  \\frac{2 - \\sqrt{29}}{10}  0 \\end{pmatrix}}\n$$", "id": "3185627"}, {"introduction": "Moving from manual calculations to practical implementation, this final exercise challenges you to build a computational tool to explore the behavior of the Steihaug TCG algorithm. By varying the trust-region radius $\\Delta$ and the Hessian matrix $B$, you will programmatically identify the three distinct termination regimes: convergence within the trust region, truncation at the boundary due to a long step, and truncation due to negative curvature. This practice solidifies the theoretical concepts by observing how they play out across a range of scenarios, bridging the gap between textbook algorithms and real-world application [@problem_id:3185595].", "problem": "Consider the trust-region subproblem in unconstrained optimization, where one seeks a step $p \\in \\mathbb{R}^n$ that approximately minimizes the quadratic model $m(p) = g^\\top p + \\tfrac{1}{2} p^\\top B p$ subject to the Euclidean norm constraint $\\lVert p \\rVert_2 \\le \\Delta$. Here, $g \\in \\mathbb{R}^n$ represents the gradient of the objective function at the current iterate, $B \\in \\mathbb{R}^{n \\times n}$ is a symmetric matrix modeling curvature, and $\\Delta  0$ is the trust-region radius. A classical approach to approximately solve this problem without computing factorizations of $B$ is the truncated conjugate gradient method due to Michael Steihaug, which applies the Conjugate Gradient (CG) iteration to the linear system derived from the first-order condition of the quadratic model and truncates under specific conditions.\n\nBegin with the following base definitions and facts:\n- The trust-region model $m(p)$ is a quadratic approximation of a general nonlinear objective. Minimizing $m(p)$ subject to $\\lVert p \\rVert_2 \\le \\Delta$ yields a step that is robust to indefinite curvature.\n- The gradient of $m(p)$ with respect to $p$ is $\\nabla m(p) = g + B p$.\n- The Conjugate Gradient method, applied to symmetric systems, generates search directions that are mutually $B$-conjugate. When $B$ is positive definite and the trust-region constraint is inactive, CG converges in at most $n$ steps to the unconstrained minimizer $p^\\star = -B^{-1} g$.\n- In the presence of indefinite curvature, the CG method can encounter a direction $d$ with nonpositive curvature $d^\\top B d \\le 0$. In the trust-region context, this indicates that along $d$ the quadratic model does not have a bounded minimizer; Steihaug's procedure then truncates the step to the boundary $\\lVert p \\rVert_2 = \\Delta$.\n\nDesign a computational experiment that varies the trust-region radius $\\Delta$ across orders of magnitude and identifies which termination regime of Steihaug’s truncated Conjugate Gradient method occurs. The three regimes to be detected are:\n1. Residual tolerance met strictly inside the trust region (code $0$).\n2. Boundary of the trust region is hit while curvature is positive (code $1$).\n3. Negative curvature is detected and the step is truncated to the boundary (code $2$).\n\nImplement a program that, for each test case, returns only the regime code as an integer. No physical units or angles are involved in this problem. Use the following test suite, which varies $\\Delta$ over orders of magnitude and covers positive definite, indefinite, boundary, and interior scenarios. In all cases, use the residual tolerance $\\varepsilon = 10^{-12}$ in the Euclidean norm of the residual $\\lVert r \\rVert_2$ where $r = g + B p$.\n\nTest suite:\n- Test $1$: $B = \\begin{bmatrix} 4  1 \\\\ 1  3 \\end{bmatrix}$, $g = \\begin{bmatrix} 1 \\\\ -2 \\end{bmatrix}$, $\\Delta = 10$, $\\varepsilon = 10^{-12}$.\n- Test $2$: $B = \\begin{bmatrix} 4  1 \\\\ 1  3 \\end{bmatrix}$, $g = \\begin{bmatrix} 1 \\\\ -2 \\end{bmatrix}$, $\\Delta = 0.5$, $\\varepsilon = 10^{-12}$.\n- Test $3$: $B = \\begin{bmatrix} 4  1 \\\\ 1  3 \\end{bmatrix}$, $g = \\begin{bmatrix} 1 \\\\ -2 \\end{bmatrix}$, $\\Delta = 10^{-4}$, $\\varepsilon = 10^{-12}$.\n- Test $4$: $B = \\begin{bmatrix} -1  0 \\\\ 0  2 \\end{bmatrix}$, $g = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$, $\\Delta = 10$, $\\varepsilon = 10^{-12}$.\n- Test $5$: $B = \\begin{bmatrix} -1  0 \\\\ 0  2 \\end{bmatrix}$, $g = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$, $\\Delta = 10^{-2}$, $\\varepsilon = 10^{-12}$.\n- Test $6$: $B = \\begin{bmatrix} 2  0  0 \\\\ 0  2  0 \\\\ 0  0  2 \\end{bmatrix}$, $g = \\begin{bmatrix} 0.1 \\\\ -0.1 \\\\ 0.05 \\end{bmatrix}$, $\\Delta = 1$, $\\varepsilon = 10^{-12}$.\n\nAlgorithmic requirements:\n- Implement Steihaug’s truncated Conjugate Gradient method starting from $p_0 = 0$, residual $r_0 = g$, and initial direction $d_0 = -r_0$.\n- At each iteration, compute the curvature $d^\\top B d$. If it is nonpositive, truncate to the boundary along $d$ and return regime code $2$.\n- Otherwise, compute the tentative step $p + \\alpha d$ where $\\alpha$ is the CG step length. If the tentative step would leave the trust region, compute the intersection with the boundary along $d$ and return regime code $1$.\n- If the residual norm falls below $\\varepsilon$ strictly before hitting the boundary, return regime code $0$.\n- Limit iterations to the dimension $n$ of the problem.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,\\dots,r_6]$), where each $r_i$ is the integer regime code for test $i$ in the order given above.", "solution": "The problem presented requires the implementation of Steihaug's truncated Conjugate Gradient (CG) algorithm to find an approximate solution to the trust-region subproblem. This subproblem is a core component of trust-region methods for unconstrained nonlinear optimization.\n\nThe objective is to find a step vector $p \\in \\mathbb{R}^n$ that approximately minimizes the quadratic model of the objective function:\n$$\nm(p) = g^\\top p + \\frac{1}{2} p^\\top B p\n$$\nsubject to the constraint that the step remains within a region of trust, defined by a Euclidean ball of radius $\\Delta  0$:\n$$\n\\lVert p \\rVert_2 \\le \\Delta\n$$\nHere, $g \\in \\mathbb{R}^n$ is the gradient of the objective function at the current iterate, and $B \\in \\mathbb{R}^{n \\times n}$ is a symmetric matrix that approximates the Hessian of the objective function.\n\nSteihaug's method applies the standard Conjugate Gradient algorithm to the linear system $B p = -g$, which represents the first-order optimality condition ($\\nabla m(p) = 0$) for the unconstrained minimum of $m(p)$. The CG iteration is, however, \"truncated\" if one of two conditions arises: the search direction exhibits non-positive curvature, or the step would exceed the trust-region boundary.\n\nThe algorithm proceeds as follows:\n\n**1. Initialization**\nThe iteration starts from the origin, as a zero-step is the simplest choice within the trust region.\n- The initial step is $p_0 = 0$.\n- The initial residual for the system $B p = -g$ is $r_0 = g + B p_0 = g$.\n- If the initial residual norm $\\lVert r_0 \\rVert_2$ is less than a specified tolerance $\\varepsilon$, the current point is already near-optimal, so we take the step $p=0$ and terminate.\n- The initial search direction is the steepest descent direction of the quadratic model at $p_0$, which is $d_0 = -r_0 = -g$.\n- An auxiliary variable for the squared norm of the residual, $\\rho_0 = r_0^\\top r_0$, is stored.\n\n**2. Iterative Procedure**\nFor each iteration $k = 0, 1, \\dots, n-1$, where $n$ is the dimension of the problem:\n\n**Step 2.1: Curvature Test**\nThe first check within an iteration is to determine if the model $m(p)$ is convex along the current search direction $d_k$. This is assessed by computing the curvature term $\\kappa_k = d_k^\\top B d_k$.\n- If $\\kappa_k \\le 0$: The quadratic model does not increase along $d_k$ (it is either flat or decreases). The unconstrained problem is unbounded below along this direction. In this context, the step should be extended as far as possible, which is to the trust-region boundary. We must find a scalar $\\tau  0$ such that the step $p = p_k + \\tau d_k$ satisfies $\\lVert p \\rVert_2 = \\Delta$. This requires solving the quadratic equation for $\\tau$:\n  $$\n  (d_k^\\top d_k) \\tau^2 + (2 p_k^\\top d_k) \\tau + (p_k^\\top p_k - \\Delta^2) = 0\n  $$\n  The positive root of this equation gives the required $\\tau$. The algorithm terminates and reports **Regime 2** (Negative Curvature).\n\n**Step 2.2: CG Step Length Calculation**\nIf the curvature is strictly positive ($\\kappa_k  0$), the standard CG step length $\\alpha_k$ is computed.\n$$\n\\alpha_k = \\frac{r_k^\\top r_k}{d_k^\\top B d_k} = \\frac{\\rho_k}{\\kappa_k}\n$$\nThis value of $\\alpha_k$ minimizes the quadratic model $m(p_k + \\alpha d_k)$ with respect to $\\alpha$.\n\n**Step 2.3: Boundary Intersection Test**\nA tentative new step is formed: $p_{k,\\text{cand}} = p_k + \\alpha_k d_k$. We must check if this step violates the trust-region constraint.\n- If $\\lVert p_{k,\\text{cand}} \\rVert_2 \\ge \\Delta$: The full CG step is too long. The path along $d_k$ must be truncated at the point where it intersects the trust-region boundary. This requires finding the scalar $\\tau  0$ by solving the same quadratic equation as in Step 2.1. The algorithm terminates and reports **Regime 1** (Boundary Hit).\n\n**Step 2.4: Solution Update and Convergence Test**\nIf the tentative step lies strictly inside the trust region, it is accepted.\n- Update the step: $p_{k+1} = p_k + \\alpha_k d_k$.\n- Update the residual using the stored $B d_k$: $r_{k+1} = r_k + \\alpha_k B d_k$.\n- Check for convergence: If the norm of the new residual satisfies $\\lVert r_{k+1} \\rVert_2  \\varepsilon$, the step $p_{k+1}$ is a sufficiently accurate approximate minimizer within the trust region. The algorithm terminates and reports **Regime 0** (Convergence Inside Trust Region).\n\n**Step 2.5: Search Direction Update**\nIf the algorithm has not terminated, a new search direction must be computed for the next iteration.\n- Compute the new squared residual norm: $\\rho_{k+1} = r_{k+1}^\\top r_{k+1}$.\n- Compute the CG update parameter: $\\beta_{k+1} = \\frac{\\rho_{k+1}}{\\rho_k}$.\n- Update the search direction to be a combination of the new steepest descent direction and the previous direction, ensuring $B$-conjugacy: $d_{k+1} = -r_{k+1} + \\beta_{k+1} d_k$.\n\nThe loop continues until one of the termination criteria is met or the maximum number of iterations ($n$) is completed. If the loop completes, it implies that the process finished without encountering negative curvature or hitting the boundary, which is classified as **Regime 0**.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\n# language: Python\n# version: 3.12\n# libraries:\n#     - name: numpy, version: 1.23.5\n#     - name: scipy, version: 1.11.4\nimport numpy as np\n\ndef steihaug_cg(B, g, Delta, eps):\n    \"\"\"\n    Implements Steihaug's truncated Conjugate Gradient method for the trust-region subproblem.\n\n    Args:\n        B (np.ndarray): Symmetric Hessian approximation matrix.\n        g (np.ndarray): Gradient vector.\n        Delta (float): Trust-region radius.\n        eps (float): Residual tolerance.\n\n    Returns:\n        int: The termination regime code (0, 1, or 2).\n    \"\"\"\n    n = len(g)\n    p = np.zeros(n)\n    r = g\n    d = -g\n\n    # If gradient is negligible at the start, p=0 is the solution.\n    if np.linalg.norm(r)  eps:\n        return 0\n\n    r_dot_r = np.dot(r, r)\n\n    for _ in range(n):\n        Bd = B @ d\n        d_Bd = np.dot(d, Bd)\n\n        # REGIME 2: Negative curvature detected.\n        # The model is not bounded below along d within the unconstrained space.\n        # Find intersection with the trust-region boundary and terminate.\n        if d_Bd = 0:\n            a = np.dot(d, d)\n            b = 2 * np.dot(p, d)\n            c = np.dot(p, p) - Delta**2\n            # Solve a*tau^2 + b*tau + c = 0 for the positive root tau.\n            discriminant = b**2 - 4 * a * c\n            tau = (-b + np.sqrt(discriminant)) / (2 * a)\n            # No need to compute p_final, just return the code.\n            return 2\n\n        alpha = r_dot_r / d_Bd\n        p_next = p + alpha * d\n\n        # REGIME 1: Boundary of the trust region is hit.\n        # The full CG step would leave the trust region.\n        # Truncate the step to the boundary and terminate.\n        if np.linalg.norm(p_next) >= Delta:\n            a = np.dot(d, d)\n            b = 2 * np.dot(p, d)\n            c = np.dot(p, p) - Delta**2\n            # Solve a*tau^2 + b*tau + c = 0 for the positive root tau.\n            discriminant = b**2 - 4 * a * c\n            tau = (-b + np.sqrt(discriminant)) / (2 * a)\n            # No need to compute p_final, just return the code.\n            return 1\n        \n        # Update step and residual\n        p = p_next\n        r_next = r + alpha * Bd\n\n        # REGIME 0: Residual tolerance met inside the trust region.\n        if np.linalg.norm(r_next)  eps:\n            return 0\n\n        # Prepare for the next iteration\n        r_next_dot_r_next = np.dot(r_next, r_next)\n        beta = r_next_dot_r_next / r_dot_r\n        d = -r_next + beta * d\n        r = r_next\n        r_dot_r = r_next_dot_r_next\n\n    # If the loop completes after n iterations, the CG process has finished\n    # without hitting the boundary or detecting negative curvature.\n    # This falls under the category of a standard \"converged\" solution.\n    return 0\n\ndef solve():\n    \"\"\"\n    Runs the Steihaug CG algorithm on the specified test suite and prints the results.\n    \"\"\"\n    eps = 1e-12\n    \n    test_cases = [\n        # Test 1: Positive definite, large radius (interior solution)\n        {'B': np.array([[4, 1], [1, 3]]), 'g': np.array([1, -2]), 'Delta': 10.0},\n        # Test 2: Positive definite, medium radius (boundary hit)\n        {'B': np.array([[4, 1], [1, 3]]), 'g': np.array([1, -2]), 'Delta': 0.5},\n        # Test 3: Positive definite, small radius (boundary hit early)\n        {'B': np.array([[4, 1], [1, 3]]), 'g': np.array([1, -2]), 'Delta': 1e-4},\n        # Test 4: Indefinite, large radius (negative curvature)\n        {'B': np.array([[-1, 0], [0, 2]]), 'g': np.array([1, 0]), 'Delta': 10.0},\n        # Test 5: Indefinite, small radius (negative curvature)\n        {'B': np.array([[-1, 0], [0, 2]]), 'g': np.array([1, 0]), 'Delta': 1e-2},\n        # Test 6: Positive definite (scaled identity), interior solution\n        {'B': np.array([[2, 0, 0], [0, 2, 0], [0, 0, 2]]), 'g': np.array([0.1, -0.1, 0.05]), 'Delta': 1.0},\n    ]\n\n    results = []\n    for case in test_cases:\n        B, g, Delta = case['B'], case['g'], case['Delta']\n        regime_code = steihaug_cg(B, g, Delta, eps)\n        results.append(regime_code)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3185595"}]}