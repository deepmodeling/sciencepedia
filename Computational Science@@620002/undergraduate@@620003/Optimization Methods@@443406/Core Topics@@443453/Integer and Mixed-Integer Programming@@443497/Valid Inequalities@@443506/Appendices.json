{"hands_on_practices": [{"introduction": "Many optimization problems contain constraints of the form $\\sum a_i x_i \\le b$, which resemble packing items into a knapsack. A powerful technique for strengthening these formulations involves identifying a *cover*—a subset of items whose weights exceed the knapsack's capacity, meaning they cannot all be selected. This exercise [@problem_id:3196864] guides you through deriving such a *cover inequality* from a practical capacitated clustering problem, a fundamental skill for tightening integer programming models.", "problem": "A company solves a Capacitated Clustering Mixed-Integer Linear Program (MILP) to assign customers to a potential cluster center. Let $N$ denote the set of customers, and let each customer $i \\in N$ have a nonnegative demand $d_i$. Consider a single candidate center $k$ with capacity $\\mathrm{cap}_k > 0$. Decision variables are:\n- $y_k \\in \\{0,1\\}$ indicating whether center $k$ is opened,\n- $x_{ik} \\ge 0$ representing the amount of demand of customer $i$ served by center $k$,\n- $z_{ik} \\in \\{0,1\\}$ indicating whether customer $i$ is assigned to center $k$.\n\nAssume the following modeling primitives, which are grounded in the physical resource constraint and assignment logic:\n- If center $k$ is open, the total served demand cannot exceed its capacity, and if it is closed, it cannot serve any demand. The total served demand is measured by $\\sum_{i \\in N} x_{ik}$.\n- Each customer’s served amount cannot exceed its own demand, and an assignment indicator gates any positive service to that customer: $0 \\le x_{ik} \\le d_i z_{ik}$ for all $i \\in N$.\n- A customer can only be assigned to an open center, enforced indirectly by the capacity gating via $y_k$ and by assignment feasibility.\n\nYour tasks are:\n1) Starting from these primitives and without invoking any pre-derived valid inequality, derive the baseline capacity inequality that connects the total served flow to the open decision $y_k$ for center $k$.\n2) Specialize your derivation to the case $y_k = 1$. Use the bounding relation $x_{ik} \\le d_i z_{ik}$ to eliminate the continuous service variables and obtain a knapsack-type constraint in the assignment variables $z_{ik}$. Then, using only the definition of a cover for a knapsack (namely, a subset $S \\subseteq N$ such that $\\sum_{i \\in S} d_i > \\mathrm{cap}_k$), derive a valid inequality that limits how many customers from such a cover can be simultaneously assigned to $k$.\n3) Now consider the concrete data:\n- Customers $N = \\{1,2,3,4,5,6\\}$ with demands $(d_1,d_2,d_3,d_4,d_5,d_6) = (6,5,5,4,4,3)$.\n- Center capacity $\\mathrm{cap}_k = 20$.\n\nChoose $S$ to be the smallest-cardinality subset formed by taking the highest-demand customers first such that $\\sum_{i \\in S} d_i > \\mathrm{cap}_k$. State the corresponding strengthened valid inequality in the assignment variables $z_{ik}$ and report the numerical value of its right-hand side constant.\n\nProvide your final answer as that single numerical constant. No units are required and no rounding is needed.", "solution": "The problem statement is assessed to be valid. It is self-contained, mathematically and scientifically grounded within the field of optimization methods, well-posed, and objective. There are no contradictions, ambiguities, or unsound premises. We proceed with the solution.\n\nThe problem requires a three-part derivation and calculation concerning a capacitated clustering problem. Let $N$ be the set of customers, $d_i \\ge 0$ the demand for customer $i \\in N$, and $\\mathrm{cap}_k > 0$ the capacity of a potential center $k$. The decision variables are $y_k \\in \\{0,1\\}$ for opening center $k$, $x_{ik} \\ge 0$ for the amount of demand of customer $i$ served by center $k$, and $z_{ik} \\in \\{0,1\\}$ for the assignment of customer $i$ to center $k$.\n\n**1) Derivation of the Baseline Capacity Inequality**\n\nThe problem provides the following primitive description of the capacity constraint: \"If center $k$ is open, the total served demand cannot exceed its capacity, and if it is closed, it cannot serve any demand.\" The total served demand is given as $\\sum_{i \\in N} x_{ik}$.\n\nWe can formalize this conditional statement as follows:\n- If center $k$ is open, then $y_k=1$. The total served demand is limited by the capacity: $\\sum_{i \\in N} x_{ik} \\le \\mathrm{cap}_k$.\n- If center $k$ is closed, then $y_k=0$. The center cannot serve any demand. Since $x_{ik} \\ge 0$ for all $i \\in N$, this implies $\\sum_{i \\in N} x_{ik} = 0$.\n\nWe seek a single linear inequality that combines these two cases using the binary variable $y_k$. Consider the inequality:\n$$ \\sum_{i \\in N} x_{ik} \\le \\mathrm{cap}_k y_k $$\nLet's verify this inequality for both possible values of $y_k$:\n- If $y_k=1$, the inequality becomes $\\sum_{i \\in N} x_{ik} \\le \\mathrm{cap}_k$, which correctly models the capacity limit for an open center.\n- If $y_k=0$, the inequality becomes $\\sum_{i \\in N} x_{ik} \\le 0$. Given the non-negativity constraint $x_{ik} \\ge 0$, this forces $\\sum_{i \\in N} x_{ik} = 0$, which correctly models the zero-service condition for a closed center.\n\nThus, the baseline capacity inequality is $\\sum_{i \\in N} x_{ik} \\le \\mathrm{cap}_k y_k$.\n\n**2) Derivation of the Knapsack Cover Inequality**\n\nFirst, we specialize the analysis to the case where center $k$ is open, i.e., $y_k=1$. The baseline inequality reduces to $\\sum_{i \\in N} x_{ik} \\le \\mathrm{cap}_k$.\n\nThe problem states another primitive: $0 \\le x_{ik} \\le d_i z_{ik}$ for all $i \\in N$. This links the continuous flow variable $x_{ik}$ to the binary assignment variable $z_{ik}$. In many standard capacitated assignment models, it is assumed that if a customer is assigned to a facility ($z_{ik}=1$), their entire demand $d_i$ contributes to the capacity usage. Any feasible integer solution must satisfy the total demand of assigned customers not exceeding the capacity. This yields the valid inequality:\n$$ \\sum_{i \\in N} d_i z_{ik} \\le \\mathrm{cap}_k $$\nThis is the knapsack-type constraint that a set of assignments must satisfy for an open center $k$.\n\nNext, we use the provided definition of a cover to derive a valid inequality. A cover $S$ is a subset of customers, $S \\subseteq N$, such that their total demand exceeds the capacity:\n$$ \\sum_{i \\in S} d_i > \\mathrm{cap}_k $$\nLet us consider any feasible set of assignments represented by the values of $z_{ik}$. It is impossible for all customers in the cover set $S$ to be simultaneously assigned to center $k$. If they were, we would have $z_{ik}=1$ for all $i \\in S$. This would imply that the sum of demands for just this subset of assigned customers is $\\sum_{i \\in S} d_i z_{ik} = \\sum_{i \\in S} d_i$. By definition of a cover, this sum is greater than $\\mathrm{cap}_k$. This would violate the knapsack constraint $\\sum_{i \\in N} d_i z_{ik} \\le \\mathrm{cap}_k$, because the sum over the subset $S$ already exceeds the capacity.\n\nTherefore, any feasible solution cannot have $z_{ik}=1$ for all $i \\in S$. This can be expressed as an inequality. The sum of the assignment indicators for the customers in $S$ must be strictly less than the number of customers in $S$:\n$$ \\sum_{i \\in S} z_{ik}  |S| $$\nSince each $z_{ik}$ must be an integer ($0$ or $1$), the sum $\\sum_{i \\in S} z_{ik}$ must also be an integer. The largest integer value strictly less than $|S|$ is $|S|-1$. This leads to the well-known valid inequality for a knapsack cover:\n$$ \\sum_{i \\in S} z_{ik} \\le |S| - 1 $$\nThis inequality is often referred to as a \"strengthened\" inequality because it strengthens the linear programming relaxation of the MILP, cutting off fractional solutions that would otherwise be feasible.\n\n**3) Application to Concrete Data**\n\nThe given data are:\n- Customers $N = \\{1,2,3,4,5,6\\}$\n- Demands $(d_1,d_2,d_3,d_4,d_5,d_6) = (6,5,5,4,4,3)$\n- Center capacity $\\mathrm{cap}_k = 20$\n\nWe are instructed to find the smallest-cardinality subset $S$ formed by taking the highest-demand customers first, such that $\\sum_{i \\in S} d_i > \\mathrm{cap}_k$. The demands in descending order are $6, 5, 5, 4, 4, 3$, corresponding to customers $1, (2,3), (4,5), 6$. Let's construct $S$ by adding customers in this order and tracking the cumulative demand:\n- Add customer $1$ ($d_1=6$): Cumulative demand = $6$.\n- Add customer $2$ ($d_2=5$): Cumulative demand = $6+5=11$.\n- Add customer $3$ ($d_3=5$): Cumulative demand = $11+5=16$.\n- Add customer $4$ ($d_4=4$): Cumulative demand = $16+4=20$. This sum is not strictly greater than $\\mathrm{cap}_k=20$.\n- Add customer $5$ ($d_5=4$): Cumulative demand = $20+4=24$. This sum, $24$, is strictly greater than $20$.\n\nThe resulting set is $S = \\{1,2,3,4,5\\}$. This is a cover, as $\\sum_{i \\in S}d_i = 24 > 20$. The cardinality of this set is $|S|=5$. Any subset with fewer than $5$ customers cannot be a cover, as the maximum sum of demands for any $4$ customers is $6+5+5+4=20$, which is not greater than the capacity. Therefore, $S=\\{1,2,3,4,5\\}$ is a smallest-cardinality cover.\n\nUsing the formula for the valid inequality derived in part 2), $\\sum_{i \\in S} z_{ik} \\le |S| - 1$, we can write the specific inequality for this cover:\n$$ z_{1k} + z_{2k} + z_{3k} + z_{4k} + z_{5k} \\le 5 - 1 $$\n$$ z_{1k} + z_{2k} + z_{3k} + z_{4k} + z_{5k} \\le 4 $$\nThe problem asks for the numerical value of the right-hand side constant of this strengthened valid inequality.\n\nThe right-hand side constant is $4$.", "answer": "$$\\boxed{4}$$", "id": "3196864"}, {"introduction": "Valid inequalities often emerge from the interaction of several constraints, which can reveal underlying structural conflicts. This exercise [@problem_id:3196773] teaches a powerful modeling technique where pairwise conflicts are represented by a *conflict graph*. By identifying *cliques* in this graph—groups of mutually exclusive choices—we can derive strong clique inequalities that are essential for solving many combinatorial problems.", "problem": "Consider an undirected simple graph $G$ with vertex set $V(G) = \\{1, 2, 3, 4, 5\\}$ and edge set $E(G) = \\{\\{1,2\\}, \\{1,3\\}, \\{2,3\\}, \\{2,4\\}, \\{3,4\\}, \\{3,5\\}, \\{4,5\\}, \\{1,5\\}\\}$. Let each edge $\\{i,j\\} \\in E(G)$ have an associated binary selection variable $x_{ij} \\in \\{0,1\\}$ indicating whether edge $\\{i,j\\}$ is selected. The selection must satisfy triangle conflicts: no two selected edges may belong to the same triangle of $G$.\n\nUsing only fundamental definitions, proceed as follows.\n1. Define the conflict graph $H$ whose vertices correspond to the edge variables of $G$, and where two vertices of $H$ are adjacent if their corresponding edges of $G$ are simultaneously prohibited by the triangle-conflict rule.\n2. From the definition of a clique in $H$ and the binary, nonnegativity properties of the variables, derive for each clique in $H$ a valid inequality that restricts the sum of the variables in that clique.\n3. An inequality $a^{\\top} x \\leq \\beta$ is said to dominate another inequality $a'^{\\top} x \\leq \\beta'$ if every vector $x$ that satisfies $a^{\\top} x \\leq \\beta$ also satisfies $a'^{\\top} x \\leq \\beta'$. Using this definition and only the properties of $H$ and the variables, identify which of the derived inequalities are undominated after removing all those implied by others.\n\nWhat is the number of undominated clique inequalities for this instance? Provide a single integer. No rounding is required.", "solution": "The problem requires us to find the number of undominated clique inequalities for a given graph problem. This is a multi-step process that involves identifying conflicts, constructing a conflict graph, and then finding its maximal cliques.\n\nThe graph $G$ is defined on the vertex set $V(G) = \\{1, 2, 3, 4, 5\\}$. The edge set is $E(G) = \\{\\{1,2\\}, \\{1,3\\}, \\{2,3\\}, \\{2,4\\}, \\{3,4\\}, \\{3,5\\}, \\{4,5\\}, \\{1,5\\}\\}$. For each edge $\\{i,j\\} \\in E(G)$, we have a binary variable $x_{ij} \\in \\{0,1\\}$. The core constraint is that no two selected edges may belong to the same triangle in $G$.\n\nStep $1$: Identify the triangles in $G$.\nA triangle is a set of three vertices $\\{u,v,w\\}$ such that the edges $\\{u,v\\}, \\{v,w\\}, \\{w,u\\}$ all belong to $E(G)$. We systematically search for such sets of three vertices:\n-   $\\{1,2,3\\}$: Edges $\\{1,2\\}, \\{2,3\\}, \\{1,3\\}$ are all in $E(G)$. This forms a triangle, let's call it $T_1$.\n-   $\\{2,3,4\\}$: Edges $\\{2,3\\}, \\{3,4\\}, \\{2,4\\}$ are all in $E(G)$. This forms a triangle, $T_2$.\n-   $\\{3,4,5\\}$: Edges $\\{3,4\\}, \\{4,5\\}, \\{3,5\\}$ are all in $E(G)$. This forms a triangle, $T_3$.\n-   $\\{1,3,5\\}$: Edges $\\{1,3\\}, \\{3,5\\}, \\{1,5\\}$ are all in $E(G)$. This forms a triangle, $T_4$.\nChecking other combinations reveals no other triangles. For example, for $\\{1,2,4\\}$, the edge $\\{1,4\\}$ is missing. For $\\{2,3,5\\}$, the edge $\\{2,5\\}$ is missing. Thus, there are exactly $4$ triangles in $G$.\n\nStep $2$: Define the conflict graph $H$.\nThe vertices of $H$, denoted $V(H)$, correspond to the edge variables of $G$. There are $8$ edges in $G$, so $|V(H)| = 8$. We can label the vertices of $H$ by their corresponding variables: $V(H) = \\{x_{12}, x_{13}, x_{23}, x_{24}, x_{34}, x_{35}, x_{45}, x_{15}\\}$.\nTwo vertices in $H$ are adjacent if their corresponding edges in $G$ are \"simultaneously prohibited by the triangle-conflict rule\". This means that the two corresponding edges belong to the same triangle in $G$.\nThe constraint \"no two selected edges may belong to the same triangle\" implies that for any two edges $\\{i,j\\}$ and $\\{k,l\\}$ in a triangle $T$, we cannot have both $x_{ij}=1$ and $x_{kl}=1$. This is equivalent to the constraint $x_{ij} + x_{kl} \\leq 1$.\nTherefore, an edge exists in $H$ between any two vertices whose corresponding edges in $G$ lie in a common triangle. This structure implies that for each triangle in $G$, the set of its edge variables forms a clique in $H$.\n\nStep $3$: Derive clique inequalities.\nA clique in $H$ is a set of vertices $K \\subseteq V(H)$ where every two distinct vertices are adjacent. Let $K$ be a clique in $H$. By definition, any two edges of $G$ corresponding to variables in $K$ belong to a common triangle. The problem constraint states we can select at most one edge from any given triangle. A fortiori, for any set of edges where every pair lies in a common triangle (which is the property of a clique in $H$), we can select at most one.\nGiven that the variables are binary, $x_{ij} \\in \\{0,1\\}$, this condition is captured by the inequality:\n$$ \\sum_{x_{ij} \\in K} x_{ij} \\leq 1 $$\nThis is the general form of a valid inequality for any clique $K$ in $H$.\n\nStep $4$: Identify undominated inequalities.\nThe problem defines that an inequality $a^{\\top} x \\leq \\beta$ dominates $a'^{\\top} x \\leq \\beta'$ if the set of feasible solutions for the first is a subset of the feasible solutions for the second.\nConsider two cliques $K_1$ and $K_2$ in $H$ such that $K_1 \\subset K_2$. The corresponding inequalities are $I_1: \\sum_{x \\in K_1} x \\leq 1$ and $I_2: \\sum_{x \\in K_2} x \\leq 1$.\nSince $x_{ij} \\geq 0$ for all variables, any solution vector $x$ that satisfies $I_2$ must also satisfy $\\sum_{x \\in K_1} x \\leq \\sum_{x \\in K_2} x \\leq 1$. Thus, the inequality $I_2$ for the larger clique $K_2$ dominates the inequality $I_1$ for the smaller clique $K_1$.\nTo find the undominated clique inequalities, we must find the cliques that are not proper subsets of any other clique. These are, by definition, the maximal cliques of $H$. The problem is now reduced to counting the number of maximal cliques in $H$.\n\nStep $5$: Find the maximal cliques of $H$.\nFrom Step $2$, the edges of each triangle in $G$ form a clique in $H$. Let's list these cliques, which we will call $C_1, C_2, C_3, C_4$:\n-   $T_1 = \\{1,2,3\\} \\implies C_1 = \\{x_{12}, x_{13}, x_{23}\\}$ is a clique in $H$.\n-   $T_2 = \\{2,3,4\\} \\implies C_2 = \\{x_{23}, x_{24}, x_{34}\\}$ is a clique in $H$.\n-   $T_3 = \\{3,4,5\\} \\implies C_3 = \\{x_{34}, x_{35}, x_{45}\\}$ is a clique in $H$.\n-   $T_4 = \\{1,3,5\\} \\implies C_4 = \\{x_{13}, x_{35}, x_{15}\\}$ is a clique in $H$.\n\nNow we must determine if these $4$ cliques are maximal and if any other maximal cliques exist.\nA clique is maximal if no other vertex from the graph can be added to it to form a larger clique.\nLet's analyze $C_1 = \\{x_{12}, x_{13}, x_{23}\\}$. To extend this clique, we would need a vertex $v \\in V(H) \\setminus C_1$ that is adjacent to all three vertices in $C_1$.\n-   Consider $x_{24}$. The edge $\\{2,4\\}$ belongs to $T_2$ with $\\{2,3\\}$, so $x_{24}$ is adjacent to $x_{23}$. However, $\\{2,4\\}$ and $\\{1,2\\}$ require edge $\\{1,4\\}$ for a triangle, which is not in $E(G)$. So $x_{24}$ is not adjacent to $x_{12}$. Thus, $x_{24}$ cannot be added to $C_1$.\n-   A similar analysis shows that no other vertex of $H$ is adjacent to all three vertices of $C_1$. For example, $x_{34}$ is not adjacent to $x_{12}$; $x_{35}$ is not adjacent to $x_{12}$ or $x_{23}$.\nTherefore, $C_1$ is a maximal clique. By symmetry in the construction of $H$ (a cycle of $4$ cliques of size $3$), $C_2$, $C_3$, and $C_4$ are also maximal cliques.\n\nDo any other maximal cliques exist? A maximal clique must be formed from vertices of $H$. Any such clique that is not one of $\\{C_1, C_2, C_3, C_4\\}$ would have to be composed of a different combination of vertices. Let's analyze the neighborhoods of vertices that are shared between the initial four cliques.\n-   The vertex $x_{23}$ is in $C_1$ and $C_2$. Its neighbors in $H$ are $N(x_{23}) = \\{x_{12}, x_{13}\\} \\cup \\{x_{24}, x_{34}\\}$. Any clique containing $x_{23}$ must be a subset of $\\{x_{23}\\} \\cup N(x_{23})$. The graph induced by $N(x_{23})$ has edges $\\{x_{12},x_{13}\\}$ (from $T_1$) and $\\{x_{24},x_{34}\\}$ (from $T_2$), but no edges between these pairs (e.g., $\\{x_{12},x_{24}\\}$ is not an edge in $H$ as $\\{1,2,4\\}$ is not a triangle in $G$). The maximal cliques in this induced subgraph are $\\{x_{12},x_{13}\\}$ and $\\{x_{24},x_{34}\\}$. Adding $x_{23}$ back, we obtain $\\{x_{12}, x_{13}, x_{23}\\} = C_1$ and $\\{x_{23}, x_{24}, x_{34}\\} = C_2$. This confirms that the only maximal cliques containing $x_{23}$ are $C_1$ and $C_2$.\n-   Similarly, the vertex $x_{34}$ is in $C_2$ and $C_3$. An identical analysis shows the only maximal cliques containing it are $C_2$ and $C_3$.\n-   The vertex $x_{35}$ is in $C_3$ and $C_4$, leading to maximal cliques $C_3$ and $C_4$.\n-   The vertex $x_{13}$ is in $C_4$ and $C_1$, leading to maximal cliques $C_4$ and $C_1$.\n-   The remaining vertices ($x_{12}, x_{24}, x_{45}, x_{15}$) each belong to only one of these four cliques. For example, $x_{12} \\in C_1$. Any clique containing $x_{12}$ must be a subset of $\\{x_{12}\\} \\cup N(x_{12}) = \\{x_{12}, x_{13}, x_{23}\\}$, which is $C_1$. Since $C_1$ is itself a clique, it is the only maximal clique containing $x_{12}$.\n\nThis exhaustive check confirms that the only maximal cliques in the conflict graph $H$ are the four cliques $C_1, C_2, C_3, C_4$ that were generated from the four triangles of $G$.\n\nSince the undominated clique inequalities correspond one-to-one with the maximal cliques of the conflict graph, there are exactly $4$ such inequalities.", "answer": "$$\\boxed{4}$$", "id": "3196773"}, {"introduction": "In practice, a single fractional solution can often be \"cut\" by multiple types of valid inequalities. This final exercise [@problem_id:3196872] synthesizes the previous concepts in a practical \"cutting-plane\" scenario. Given a specific fractional point, your task is to generate three distinct types of cuts—a cover inequality, a clique inequality, and a Chvátal-Gomory cut—and verify that each successfully separates that point from the integer feasible region.", "problem": "Consider the linear programming (LP) relaxation of a mixed-integer linear program (MILP) in four binary decision variables $x_1, x_2, x_3, x_4 \\in [0,1]$. The LP relaxation defines a polyhedron $\\mathcal{P} \\subseteq \\mathbb{R}^4$ by the following system:\n$$\n\\begin{aligned}\n0 \\leq x_i \\leq 1 \\quad \\text{for } i \\in \\{1,2,3,4\\},\\\\\nx_1 + x_2 \\leq 1,\\quad x_1 + x_3 \\leq 1,\\quad x_2 + x_3 \\leq 1,\\quad x_3 + x_4 \\leq 1,\\\\\n5x_1 + 4x_2 + 3x_3 + 3x_4 \\leq 7,\\\\\n2x_2 + 2x_3 + 2x_4 \\leq 3.\n\\end{aligned}\n$$\nLet the fractional point be\n$$\n\\bar{x} = (x_1, x_2, x_3, x_4) = (0.7,\\,0.2,\\,0.3,\\,0.6),\n$$\nwhich satisfies all constraints of $\\mathcal{P}$.\n\nStarting from the fundamental definition that a valid inequality is any linear inequality satisfied by all integer-feasible points (here, all vectors in $\\{0,1\\}^4$ that satisfy the given system), do the following:\n\n1. Using the knapsack constraint $5x_1 + 4x_2 + 3x_3 + 3x_4 \\leq 7$, identify a cover $C \\subseteq \\{1,2,3,4\\}$ whose weights sum strictly exceed $7$ and write the corresponding cover inequality. Use the cover $C = \\{1,4\\}$.\n\n2. Using the conflict structure implied by the pairwise constraints among $\\{1,2,3\\}$, write a clique inequality for the clique $K = \\{1,2,3\\}$.\n\n3. Using the Chvátal-Gomory (CG) rounding principle applied to the inequality $2x_2 + 2x_3 + 2x_4 \\leq 3$ with multiplier $y = \\frac{1}{2}$, derive the corresponding CG cut.\n\nFor each of the three inequalities, explain why it is valid for the integer hull of $\\mathcal{P}$ and verify that it cuts the fractional point $\\bar{x}$ (i.e., the left-hand side evaluated at $\\bar{x}$ exceeds the right-hand side). Define the violation magnitude of an inequality $a^{\\top}x \\leq b$ at $\\bar{x}$ as $\\max\\{0,\\,a^{\\top}\\bar{x} - b\\}$. Compute the sum of the three violation magnitudes at $\\bar{x}$.\n\nYour final answer must be a single real number. No rounding is required.", "solution": "The problem is first validated to ensure it is self-contained, consistent, and scientifically sound.\nThe givens are:\nThe set of binary decision variables is $\\{x_1, x_2, x_3, x_4\\}$, where $x_i \\in \\{0,1\\}$ for the mixed-integer linear program (MILP), and $x_i \\in [0,1]$ for its linear programming (LP) relaxation.\nThe polyhedron $\\mathcal{P}$ for the LP relaxation is defined by the constraints:\n1. $0 \\leq x_i \\leq 1$ for $i \\in \\{1,2,3,4\\}$\n2. $x_1 + x_2 \\leq 1$\n3. $x_1 + x_3 \\leq 1$\n4. $x_2 + x_3 \\leq 1$\n5. $x_3 + x_4 \\leq 1$\n6. $5x_1 + 4x_2 + 3x_3 + 3x_4 \\leq 7$\n7. $2x_2 + 2x_3 + 2x_4 \\leq 3$\nThe fractional point is given as $\\bar{x} = (x_1, x_2, x_3, x_4) = (0.7, 0.2, 0.3, 0.6)$.\n\nFirst, we verify that $\\bar{x}$ is a feasible point in $\\mathcal{P}$:\n1. All components $0.7, 0.2, 0.3, 0.6$ are in the interval $[0,1]$.\n2. $x_1 + x_2 = 0.7 + 0.2 = 0.9 \\leq 1$. This is satisfied.\n3. $x_1 + x_3 = 0.7 + 0.3 = 1.0 \\leq 1$. This is satisfied.\n4. $x_2 + x_3 = 0.2 + 0.3 = 0.5 \\leq 1$. This is satisfied.\n5. $x_3 + x_4 = 0.3 + 0.6 = 0.9 \\leq 1$. This is satisfied.\n6. $5x_1 + 4x_2 + 3x_3 + 3x_4 = 5(0.7) + 4(0.2) + 3(0.3) + 3(0.6) = 3.5 + 0.8 + 0.9 + 1.8 = 7.0 \\leq 7$. This is satisfied.\n7. $2x_2 + 2x_3 + 2x_4 = 2(0.2) + 2(0.3) + 2(0.6) = 0.4 + 0.6 + 1.2 = 2.2 \\leq 3$. This is satisfied.\nThe point $\\bar{x}$ is feasible for the LP relaxation. The problem is well-defined, objective, and scientifically grounded in the field of optimization methods. Thus, the problem is valid. We proceed to the solution.\n\nThe problem asks for the derivation and analysis of three valid inequalities.\n\n1.  **Cover Inequality**\n    We start with the knapsack constraint $5x_1 + 4x_2 + 3x_3 + 3x_4 \\leq 7$. A set of indices $C \\subseteq \\{1,2,3,4\\}$ is a cover if $\\sum_{i \\in C} a_i > b$, where $a_i$ are the coefficients and $b$ is the right-hand side. The problem specifies the cover $C = \\{1,4\\}$.\n    The sum of the corresponding coefficients is $a_1 + a_4 = 5 + 3 = 8$. Since $8 > 7$, $C = \\{1,4\\}$ is indeed a cover.\n    The cover inequality is given by $\\sum_{i \\in C} x_i \\leq |C| - 1$.\n    For $C=\\{1,4\\}$, we have $|C|=2$. The inequality is thus $x_1 + x_4 \\leq 2 - 1$, which simplifies to $x_1 + x_4 \\leq 1$.\n\n    *Validity*: This inequality must hold for all integer feasible points, i.e., points in $\\{0,1\\}^4$ that satisfy the original constraints. If an integer solution had both $x_1=1$ and $x_4=1$, the knapsack constraint would become $5(1) + 4x_2 + 3x_3 + 3(1) \\leq 7$, which is $8 + 4x_2 + 3x_3 \\leq 7$. Since $x_2, x_3 \\geq 0$, this is impossible. Therefore, it is impossible to have $x_1=1$ and $x_4=1$ simultaneously in any integer feasible solution. This implies that for any integer solution, $x_1 + x_4 \\leq 1$. So, the inequality is valid for the integer hull of $\\mathcal{P}$.\n\n    *Violation*: We check if this inequality cuts off the point $\\bar{x} = (0.7, 0.2, 0.3, 0.6)$.\n    Evaluating the left-hand side (LHS) at $\\bar{x}$: $x_1 + x_4 = 0.7 + 0.6 = 1.3$.\n    Since $1.3 > 1$, the inequality is violated. The violation magnitude is $\\max\\{0, (x_1 + x_4) - 1\\} = 1.3 - 1 = 0.3$.\n\n2.  **Clique Inequality**\n    The constraints $x_1 + x_2 \\leq 1$, $x_1 + x_3 \\leq 1$, and $x_2 + x_3 \\leq 1$ define a conflict structure. In any integer solution, if $x_i=1$ and $x_j=1$ for $i,j \\in \\{1,2,3\\}, i \\neq j$, the corresponding constraint $x_i+x_j \\leq 1$ would be violated ($1+1 \\not\\leq 1$). This means that at most one variable from the set $\\{x_1, x_2, x_3\\}$ can be equal to $1$. In the conflict graph where nodes are variables and an edge connects two variables if they cannot simultaneously be $1$, the set of nodes $\\{1,2,3\\}$ forms a clique. The problem specifies the clique $K=\\{1,2,3\\}$.\n    The clique inequality is given by $\\sum_{i \\in K} x_i \\leq 1$.\n    For $K=\\{1,2,3\\}$, the inequality is $x_1 + x_2 + x_3 \\leq 1$.\n\n    *Validity*: As reasoned above, for any integer feasible solution, no two variables from $\\{x_1, x_2, x_3\\}$ can be $1$ simultaneously. This directly implies that their sum can be at most $1$. Thus, the inequality is valid for the integer hull of $\\mathcal{P}$.\n\n    *Violation*: We check if this inequality cuts off $\\bar{x}$.\n    Evaluating the LHS at $\\bar{x}$: $x_1 + x_2 + x_3 = 0.7 + 0.2 + 0.3 = 1.2$.\n    Since $1.2 > 1$, the inequality is violated. The violation magnitude is $\\max\\{0, (x_1 + x_2 + x_3) - 1\\} = 1.2 - 1 = 0.2$.\n\n3.  **Chvátal-Gomory (CG) Cut**\n    We start with the inequality $2x_2 + 2x_3 + 2x_4 \\leq 3$. The problem specifies using a multiplier $y = \\frac{1}{2}$.\n    Multiplying the inequality by $y$: $\\frac{1}{2} (2x_2 + 2x_3 + 2x_4) \\leq \\frac{1}{2} (3)$, which simplifies to $x_2 + x_3 + x_4 \\leq 1.5$.\n    The Chvátal-Gomory procedure involves taking the floor of all coefficients and the right-hand side, as the variables are integer-constrained. Since $x_i \\in \\{0, 1\\}$, they are integers. For any integer solution, the LHS, $x_2+x_3+x_4$, must be an integer. If an integer is less than or equal to $1.5$, it must be less than or equal to $\\lfloor 1.5 \\rfloor = 1$.\n    The resulting CG cut is $x_2 + x_3 + x_4 \\leq 1$.\n\n    *Validity*: The inequality $x_2+x_3+x_4 \\leq 1.5$ is a valid consequence of the original constraints. For any integer point $x$ in $\\mathcal{P}$, the sum $x_2+x_3+x_4$ must be an integer. An integer that is less than or equal to $1.5$ must be at most $1$. Thus, $x_2 + x_3 + x_4 \\leq 1$ for all integer feasible points, and the inequality is valid.\n\n    *Violation*: We check if this inequality cuts off $\\bar{x}$.\n    Evaluating the LHS at $\\bar{x}$: $x_2 + x_3 + x_4 = 0.2 + 0.3 + 0.6 = 1.1$.\n    Since $1.1 > 1$, the inequality is violated. The violation magnitude is $\\max\\{0, (x_2 + x_3 + x_4) - 1\\} = 1.1 - 1 = 0.1$.\n\n**Sum of Violation Magnitudes**\nThe sum of the three violation magnitudes is the sum of the individual violations calculated above.\nTotal violation = (Violation from cover inequality) + (Violation from clique inequality) + (Violation from CG cut)\nTotal violation = $0.3 + 0.2 + 0.1 = 0.6$.", "answer": "$$\\boxed{0.6}$$", "id": "3196872"}]}