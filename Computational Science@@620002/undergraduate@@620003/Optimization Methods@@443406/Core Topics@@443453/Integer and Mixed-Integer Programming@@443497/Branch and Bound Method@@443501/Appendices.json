{"hands_on_practices": [{"introduction": "The \"branch\" in Branch and Bound refers to the process of dividing a problem into smaller, more manageable subproblems. This is done whenever the solution to a Linear Programming (LP) relaxation results in a fractional value for a variable that must be an integer. This exercise focuses on the fundamental logic of creating these branches, ensuring that the new subproblems collectively cover all possible integer solutions while excluding the current non-integer one [@problem_id:2209727]. Understanding this partitioning step is the first key to mastering the algorithm's mechanics.", "problem": "An operations research team at a logistics company is using an Integer Programming (IP) model to optimize their vehicle routing schedule. The variables $x_i$ represent the number of times vehicle type $i$ is assigned to a specific long-haul route. Since the number of assignments must be an integer, they employ the Branch and Bound algorithm to find the optimal integer solution.\n\nThe process begins by solving the Linear Programming (LP) relaxation of the IP problem, where the integer constraints are temporarily ignored. The optimal solution to this initial LP relaxation yields fractional values for two of the variables: the assignment count for vehicle type A, $x_A$, is $4.6$, and the assignment count for vehicle type B, $x_B$, is $2.3$.\n\nThe algorithm selects the variable $x_A$ to perform the first branching operation, creating two new subproblems (child nodes) from the original problem. Which of the following pairs of constraints correctly defines these two new, mutually exclusive subproblems?\n\nA. $x_A = 4$ and $x_A = 5$\n\nB. $x_A \\leq 4$ and $x_A \\geq 5$\n\nC. $x_A \\leq 4.6$ and $x_A \\geq 4.6$\n\nD. $x_B \\leq 2$ and $x_B \\geq 3$\n\nE. $x_A \\leq 5$ and $x_A \\geq 4$", "solution": "In a branch-and-bound algorithm for an integer program, after solving the LP relaxation and obtaining a fractional value for a chosen integer variable, one creates two child subproblems by partitioning the feasible region so that:\n- the two new regions are mutually exclusive,\n- together they cover all integer values of the variable,\n- and the current fractional solution is excluded from both LP relaxations.\n\nGiven the LP-relaxation solution has $x_{A}^{*} = 4.6$, the standard branching on $x_{A}$ splits at the floor and ceiling of $4.6$:\n$$\nx_{A} \\leq \\lfloor 4.6 \\rfloor = 4 \\quad \\text{and} \\quad x_{A} \\geq \\lceil 4.6 \\rceil = 5.\n$$\nThese two constraints are mutually exclusive for any integer $x_{A}$, collectively cover all integer possibilities ($x_{A} \\in \\mathbb{Z}$ implies either $x_{A} \\leq 4$ or $x_{A} \\geq 5$), and exclude the current LP solution $x_{A}=4.6$ from both branches of the LP relaxations.\n\nChecking the options:\n- A uses equalities $x_{A}=4$ and $x_{A}=5$, which are too restrictive and do not cover all integer possibilities beyond exactly $4$ and $5$.\n- B uses $x_{A} \\leq 4$ and $x_{A} \\geq 5$, which is the correct split at the floor and ceiling.\n- C uses $x_{A} \\leq 4.6$ and $x_{A} \\geq 4.6$, which does not properly exclude the current LP solution in at least one branch when solving the LP relaxations.\n- D branches on $x_{B}$, which is not the selected variable.\n- E uses $x_{A} \\leq 5$ and $x_{A} \\geq 4$, which overlap and are not mutually exclusive; moreover, they do not exclude $4.6$.\n\nTherefore, the correct pair is $x_{A} \\leq 4$ and $x_{A} \\geq 5$.", "answer": "$$\\boxed{B}$$", "id": "2209727"}, {"introduction": "After branching, the next step is to \"bound\" each new subproblem by solving its corresponding LP relaxation. The optimal values of these subproblems provide new bounds that are typically tighter than the parent node's bound. This practice [@problem_id:2209717] takes you through this crucial computational step, asking you to solve the initial LP relaxation and then calculate the objective values for the first two child nodes. This process of branching and then re-calculating bounds is the core iterative engine of the Branch and Bound method.", "problem": "Consider the following Integer Program (IP), where the decision variables $x_1$ and $x_2$ must be non-negative integers:\n\nMaximize $Z = 5x_1 + 8x_2$\nSubject to:\n1. $x_1 + x_2 \\le 6$\n2. $5x_1 + 9x_2 \\le 45$\n3. $x_1, x_2 \\ge 0$ and are integers.\n\nThe Branch and Bound algorithm is employed to find the optimal integer solution. The process begins by solving the Linear Program (LP) relaxation of the problem (i.e., ignoring the integer constraints). After obtaining the optimal solution to this initial LP, one of the variables with a non-integer value in the solution is selected for branching.\n\nAssume the variable $x_2$ is chosen for the first branching step. This branching action creates two new LP subproblems, which constitute the first level of the branch and bound search tree. Let the optimal solution of the initial LP relaxation have a value of $x_2 = x_2^*$. The two new subproblems are formed by adding one of the following constraints to the original LP relaxation:\n- Subproblem A: $x_2 \\le \\lfloor x_2^* \\rfloor$\n- Subproblem B: $x_2 \\ge \\lceil x_2^* \\rceil$\n\nDetermine the optimal objective function values for the LP relaxations of Subproblem A and Subproblem B. Let these values be $Z_A$ and $Z_B$, respectively.\n\nExpress your answer as a row matrix containing the two values in the order $[Z_A, Z_B]$.", "solution": "We begin by solving the LP relaxation of the original problem:\nMaximize $Z=5x_{1}+8x_{2}$ subject to $x_{1}+x_{2}\\leq 6$, $5x_{1}+9x_{2}\\leq 45$, $x_{1},x_{2}\\geq 0$.\n\nBy the fundamental theorem of linear programming, an optimal solution occurs at an extreme point. Compute the intersection of the two binding constraints:\n$$\n\\begin{aligned}\nx_{1}+x_{2} &= 6, \\\\\n5x_{1}+9x_{2} &= 45.\n\\end{aligned}\n$$\nSubstitute $x_{1}=6-x_{2}$ into the second equation:\n$$\n5(6-x_{2})+9x_{2}=45 \\Rightarrow 30-5x_{2}+9x_{2}=45 \\Rightarrow 4x_{2}=15 \\Rightarrow x_{2}^{*}=\\frac{15}{4}.\n$$\nThus $x_{1}^{*}=6-\\frac{15}{4}=\\frac{9}{4}$ and the LP-optimal value is\n$$\nZ^{*}=5\\cdot\\frac{9}{4}+8\\cdot\\frac{15}{4}=\\frac{45}{4}+\\frac{120}{4}=\\frac{165}{4}.\n$$\nSince $x_{2}^{*}=\\frac{15}{4}$ is fractional, we branch on $x_{2}$ with:\nSubproblem A: $x_{2}\\leq\\left\\lfloor \\frac{15}{4}\\right\\rfloor=3$.\nSubproblem B: $x_{2}\\geq\\left\\lceil \\frac{15}{4}\\right\\rceil=4$.\n\nSubproblem A (add $x_{2}\\leq 3$): We maximize $Z=5x_{1}+8x_{2}$ over\n$$\nx_{1}+x_{2}\\leq 6,\\quad 5x_{1}+9x_{2}\\leq 45,\\quad x_{2}\\leq 3,\\quad x_{1},x_{2}\\geq 0.\n$$\nSince the objective coefficients are positive and $8>5$, for feasibility under $x_{2}\\leq 3$ it is optimal to take $x_{2}$ as large as allowed, i.e., $x_{2}=3$, and then maximize $x_{1}$ subject to the remaining constraints. With $x_{2}=3$, the constraints become $x_{1}\\leq 6-3=3$ and $5x_{1}\\leq 45-27=18 \\Rightarrow x_{1}\\leq \\frac{18}{5}$.\nThe binding restriction is $x_{1}\\leq 3$, so choose $(x_{1},x_{2})=(3,3)$, yielding\n$$\nZ_{A}=5\\cdot 3+8\\cdot 3=39.\n$$\nThis point is optimal for Subproblem A.\n\nSubproblem B (add $x_{2}\\geq 4$): Maximize $Z$ over\n$$\nx_{1}+x_{2}\\leq 6,\\quad 5x_{1}+9x_{2}\\leq 45,\\quad x_{2}\\geq 4,\\quad x_{1},x_{2}\\geq 0.\n$$\nConsider the key boundary intersections with $x_{2}\\geq 4$:\n- With $x_{1}=0$, $x_{2}\\leq 5$ from $5x_{1}+9x_{2}\\leq 45$, so $(0,5)$ is feasible and gives $Z=40$.\n- Intersection $x_{2}=4$ with $5x_{1}+9x_{2}=45$ gives $5x_{1}+36=45\\Rightarrow x_{1}=\\frac{9}{5}$, and $x_{1}+x_{2}=\\frac{9}{5}+4=\\frac{29}{5}\\leq 6$, so $(\\frac{9}{5},4)$ is feasible with\n$$\nZ=5\\cdot\\frac{9}{5}+8\\cdot 4=9+32=41.\n$$\n- Intersection $x_{2}=4$ with $x_{1}+x_{2}=6$ gives $(2,4)$, but $5\\cdot 2+9\\cdot 4=46 > 45$ is infeasible.\n\nAlong the boundary $5x_{1}+9x_{2}=45$, moving from $(0,5)$ toward smaller $x_{2}$ increases $x_{1}$ and increases $Z$ since $dZ/dx_1 = 5 - 8(5/9) = 5/9 > 0$. The search is bounded by $x_2 \\ge 4$, so the optimal point must be on this boundary at $x_2=4$. Thus $(\\frac{9}{5},4)$ is optimal for Subproblem B with\n$$\nZ_{B}=41.\n$$\n\nTherefore, the requested pair is $[Z_{A},Z_{B}]=[39,41]$.", "answer": "$$\\boxed{\\begin{pmatrix} 39 & 41 \\end{pmatrix}}$$", "id": "2209717"}, {"introduction": "The power of the Branch and Bound method lies in its ability to \"prune\" (or \"fathom\") large portions of the search space, avoiding exhaustive enumeration. Pruning is possible when we can prove that a subproblem cannot contain a better solution than one we have already found. This practice [@problem_id:2209705] tests your understanding of the most common pruning rule: pruning by bound. For a minimization problem, you will apply the rule that if a node's lower bound is greater than or equal to the current best integer solution (the incumbent), that entire branch of the tree can be discarded.", "problem": "An operations research analyst is using the branch and bound method to solve a minimization integer programming problem. In this method, the algorithm explores a tree of subproblems. A subproblem (represented by a node in the tree) can be \"fathomed,\" meaning it is pruned from the search and not explored further. One of the primary rules for fathoming is \"pruning by bound\": for a minimization problem, a node can be fathomed if its calculated lower bound is greater than or equal to the value of the best integer solution found so far, which is known as the \"incumbent.\"\n\nThe algorithm has been running for some time, and its state is captured at a specific moment. A chronological log of events is as follows:\n\n1.  The search explored several nodes and found an initial feasible integer solution at Node P5 with an objective function value of 285. This established the first incumbent value for the search.\n2.  With the incumbent value set to 285, the set of \"active\" nodes (subproblems that are candidates for further exploration) was determined to be {Node Q1, Node Q2, Node Q3}.\n3.  The algorithm then calculated the lower bounds for these active nodes:\n    *   The lower bound for Node Q1 is 279.\n    *   The lower bound for Node Q2 is 285.\n    *   The lower bound for Node Q3 is 291.\n4.  Immediately after these lower bounds were calculated, the algorithm should have applied the \"pruning by bound\" rule to fathom any nodes that qualify.\n\nBased on the information provided, which of the nodes from the active set {Q1, Q2, Q3} should have been immediately fathomed at this point in the search?\n\nA. Node Q1 only\n\nB. Node Q2 only\n\nC. Node Q3 only\n\nD. Node Q2 and Node Q3\n\nE. Node Q1, Node Q2, and Node Q3\n\nF. None of the nodes should be fathomed", "solution": "We are solving a minimization integer programming problem using branch and bound. The pruning-by-bound rule states that a node is fathomed if its lower bound is greater than or equal to the incumbent objective value.\n\nGiven incumbent value $I=285$. For each active node $Q_{i}$ with lower bound $\\operatorname{LB}(Q_{i})$, the pruning condition is:\n$$\n\\operatorname{LB}(Q_{i}) \\geq I.\n$$\n\nApply to each node:\n1) For Node Q1: The lower bound is $\\operatorname{LB}(Q1)=279$. The condition $279 \\geq 285$ is false, so Q1 is not fathomed by bound.\n2) For Node Q2: The lower bound is $\\operatorname{LB}(Q2)=285$. The condition $285 \\geq 285$ is true, so Q2 is fathomed by bound.\n3) For Node Q3: The lower bound is $\\operatorname{LB}(Q3)=291$. The condition $291 \\geq 285$ is true, so Q3 is fathomed by bound.\n\nTherefore, exactly Node Q2 and Node Q3 should be fathomed immediately.", "answer": "$$\\boxed{D}$$", "id": "2209705"}]}