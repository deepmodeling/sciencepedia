{"hands_on_practices": [{"introduction": "Mastering a new algorithm begins with understanding its core mechanics. This first exercise provides a hands-on walkthrough of Kelley's cutting-plane method, guiding you through the first three iterations on a classic convex optimization problem. By manually calculating the subgradients, forming the cuts, and solving the sequential master problems, you will build a concrete understanding of how the algorithm constructs its piecewise linear model of the objective function. [@problem_id:3141056]", "problem": "Consider the convex minimization problem with objective function $f:\\mathbb{R}^{2}\\to\\mathbb{R}$ defined by $f(x)=\\max\\{x_{1}+x_{2},\\,2x_{1}-x_{2},\\,1-x_{1}\\}$ over the box $X=\\{x\\in\\mathbb{R}^{2}:\\|x\\|_{\\infty}\\le 2\\}$, where $\\|x\\|_{\\infty}=\\max\\{|x_{1}|,|x_{2}|\\}$. The pointwise maximum of affine functions is convex, and for a convex function $f$, any subgradient $g\\in\\partial f(y)$ at a point $y$ obeys the subgradient inequality $f(x)\\ge f(y)+g^{\\top}(x-y)$ for all $x$. Kelley's cutting-plane method constructs linear underestimators using this inequality and solves a sequence of Linear Programming (LP) master problems over the epigraph of $f$.\n\nUse Kelley's cutting-plane method starting from $y^{0}=(0,0)$. At each iteration $k$, query the oracle at $y^{k}$, which returns one subgradient of $f$ at $y^{k}$ arising from an affine function active in the maximum at $y^{k}$. Form the Kelley cut $t\\ge f(y^{k})+g^{k\\top}(x-y^{k})$ in variables $(x,t)$ and define the master LP that minimizes $t$ subject to all collected cuts and $x\\in X$. Let $y^{k+1}$ be the $x$-component of an optimal solution of the master LP. If multiple optimal solutions exist, select $y^{k+1}$ as the one with the smallest Euclidean norm $\\|x\\|_{2}$.\n\nTasks:\n- Compute explicitly the first three Kelley cuts generated at $y^{0}$, $y^{1}$, and $y^{2}$.\n- Write down the corresponding three LP master problems.\n- Solve each master problem to obtain $y^{1}$, $y^{2}$, $y^{3}$ and their optimal objective values $t^{1}$, $t^{2}$, $t^{3}$.\n- Provide, as your final answer, the exact value of $t^{3}$.\n\nNo rounding is required; express your final answer as an exact number.", "solution": "The problem requires the application of Kelley's cutting-plane method to a convex minimization problem. We are tasked with performing three iterations of the algorithm, starting from a given initial point, and determining the optimal objective value of the third master problem.\n\nThe problem is to minimize $f(x) = \\max\\{x_1+x_2, 2x_1-x_2, 1-x_1\\}$ over the feasible set $X = \\{x \\in \\mathbb{R}^2 : \\|x\\|_\\infty \\le 2\\}$. The set $X$ can be written explicitly as $X = \\{(x_1, x_2) \\in \\mathbb{R}^2 : -2 \\le x_1 \\le 2, -2 \\le x_2 \\le 2\\}$.\n\nThe Kelley's cutting-plane method generates a sequence of points $\\{y^k\\}$ and a sequence of lower bounds $\\{t^k\\}$ on the optimal value. At each iteration $k$, we solve a linear programming (LP) master problem to find the next iterate $y^{k+1}$ and the updated lower bound $t^{k+1}$. The master problem minimizes a variable $t$ subject to a set of linear inequalities, called cuts, which are derived from the subgradient inequality.\n\nThe $k$-th cut is given by $t \\ge f(y^k) + g^{k\\top}(x-y^k)$, where $g^k$ is a subgradient of $f$ at $y^k$. For a function defined as the maximum of several differentiable functions, a subgradient at a point can be taken as the gradient of any one of the functions that is active (i.e., achieves the maximum) at that point.\n\nLet the three affine functions be $f_1(x) = x_1+x_2$, $f_2(x) = 2x_1-x_2$, and $f_3(x) = 1-x_1$. Their gradients are, respectively, $g_1 = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$, $g_2 = \\begin{pmatrix} 2 \\\\ -1 \\end{pmatrix}$, and $g_3 = \\begin{pmatrix} -1 \\\\ 0 \\end{pmatrix}$.\n\n**Iteration 0 ($k=0$)**\n\nWe start with the initial point $y^0 = (0,0)$.\n\n1.  **Oracle Query**: We first evaluate the objective function at $y^0$:\n    $$f(y^0) = f(0,0) = \\max\\{0+0, 2(0)-0, 1-0\\} = \\max\\{0, 0, 1\\} = 1$$\n    The active function is $f_3(x) = 1-x_1$. We choose the corresponding gradient as the subgradient:\n    $$g^0 = g_3 = \\begin{pmatrix} -1 \\\\ 0 \\end{pmatrix}$$\n\n2.  **First Kelley Cut**: The first cut (Cut 1) is constructed using the subgradient inequality:\n    $$t \\ge f(y^0) + g^{0\\top}(x-y^0)$$\n    $$t \\ge 1 + \\begin{pmatrix} -1 & 0 \\end{pmatrix} \\begin{pmatrix} x_1 - 0 \\\\ x_2 - 0 \\end{pmatrix}$$\n    $$t \\ge 1 - x_1$$\n\n3.  **First Master Problem (LP1)**: We minimize $t$ subject to the first cut and the constraint $x \\in X$:\n    $$\n    \\begin{aligned}\n    (LP1) \\quad \\min_{x, t} \\quad & t \\\\\n    \\text{s.t.} \\quad & t \\ge 1 - x_1 \\\\\n    & -2 \\le x_1 \\le 2 \\\\\n    & -2 \\le x_2 \\le 2\n    \\end{aligned}\n    $$\n\n4.  **Solution to LP1**: To minimize $t$, we must minimize the right-hand side of the inequality, $1-x_1$. This is achieved by maximizing $x_1$ over the feasible set $X$. The maximum value is $x_1=2$.\n    The optimal value for $t$ is thus $t^1 = 1 - 2 = -1$.\n    The set of optimal solutions for $x$ is $\\{(x_1, x_2) : x_1=2, -2 \\le x_2 \\le 2\\}$.\n    According to the tie-breaking rule, we must select the solution with the smallest Euclidean norm $\\|x\\|_2 = \\sqrt{x_1^2 + x_2^2}$. For $x_1=2$, this requires minimizing $\\sqrt{2^2 + x_2^2}$, which occurs at $x_2=0$.\n    Therefore, the next iterate is $y^1 = (2,0)$, with the objective value of the master problem being $t^1=-1$.\n\n**Iteration 1 ($k=1$)**\n\nWe proceed with the point $y^1 = (2,0)$.\n\n1.  **Oracle Query**: We evaluate $f$ at $y^1$:\n    $$f(y^1) = f(2,0) = \\max\\{2+0, 2(2)-0, 1-2\\} = \\max\\{2, 4, -1\\} = 4$$\n    The active function is $f_2(x) = 2x_1-x_2$. The subgradient is:\n    $$g^1 = g_2 = \\begin{pmatrix} 2 \\\\ -1 \\end{pmatrix}$$\n\n2.  **Second Kelley Cut**: The second cut (Cut 2) is:\n    $$t \\ge f(y^1) + g^{1\\top}(x-y^1)$$\n    $$t \\ge 4 + \\begin{pmatrix} 2 & -1 \\end{pmatrix} \\begin{pmatrix} x_1 - 2 \\\\ x_2 - 0 \\end{pmatrix}$$\n    $$t \\ge 4 + 2(x_1-2) - x_2 = 4 + 2x_1 - 4 - x_2$$\n    $$t \\ge 2x_1 - x_2$$\n\n3.  **Second Master Problem (LP2)**: We add the new cut to the master problem:\n    $$\n    \\begin{aligned}\n    (LP2) \\quad \\min_{x, t} \\quad & t \\\\\n    \\text{s.t.} \\quad & t \\ge 1 - x_1 \\quad (\\text{Cut 1}) \\\\\n    & t \\ge 2x_1 - x_2 \\quad (\\text{Cut 2}) \\\\\n    & -2 \\le x_1 \\le 2, \\quad -2 \\le x_2 \\le 2\n    \\end{aligned}\n    $$\n\n4.  **Solution to LP2**: This is equivalent to finding $\\min_{x \\in X} \\max\\{1-x_1, 2x_1-x_2\\}$. The minimum of this pointwise maximum function will occur either at a vertex of the domain $X$ or at a point where $1-x_1=2x_1-x_2$.\n    - Check vertices of $X = [-2,2]^2$:\n      - $x=(2,2): \\max\\{1-2, 4-2\\} = \\max\\{-1, 2\\}=2$.\n      - $x=(2,-2): \\max\\{1-2, 4-(-2)\\} = \\max\\{-1, 6\\}=6$.\n      - $x=(-2,2): \\max\\{1-(-2), -4-2\\} = \\max\\{3, -6\\}=3$.\n      - $x=(-2,-2): \\max\\{1-(-2), -4-(-2)\\} = \\max\\{3, -2\\}=3$.\n    - Check points where $1-x_1=2x_1-x_2$, which simplifies to $x_2=3x_1-1$. On this line, the value of the max function is $1-x_1$. We need to find the minimum of $1-x_1$ for points $(x_1, 3x_1-1)$ that lie in $X$. This means maximizing $x_1$.\n      The line segment of $x_2 = 3x_1-1$ within $X$ is bounded by its intersections with the boundary of the box.\n      - At $x_2=2$: $2 = 3x_1-1 \\implies 3x_1=3 \\implies x_1=1$. Point is $(1,2)$.\n      - At $x_2=-2$: $-2 = 3x_1-1 \\implies 3x_1=-1 \\implies x_1=-1/3$. Point is $(-1/3, -2)$.\n      The maximum $x_1$ on this segment is $x_1=1$. At this point, $(1,2)$, the objective value is $1-1=0$.\n    Comparing all candidate values $\\{2,6,3,0,1-(-1/3)=4/3\\}$, the minimum is $0$.\n    This minimum occurs at the unique point $(1,2)$.\n    Thus, the solution is $y^2 = (1,2)$ and $t^2=0$.\n\n**Iteration 2 ($k=2$)**\n\nWe now use the point $y^2 = (1,2)$.\n\n1.  **Oracle Query**: Evaluate $f$ at $y^2$:\n    $$f(y^2) = f(1,2) = \\max\\{1+2, 2(1)-2, 1-1\\} = \\max\\{3, 0, 0\\} = 3$$\n    The active function is $f_1(x) = x_1+x_2$. The subgradient is:\n    $$g^2 = g_1 = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$$\n\n2.  **Third Kelley Cut**: The third cut (Cut 3) is:\n    $$t \\ge f(y^2) + g^{2\\top}(x-y^2)$$\n    $$t \\ge 3 + \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} x_1 - 1 \\\\ x_2 - 2 \\end{pmatrix}$$\n    $$t \\ge 3 + (x_1-1) + (x_2-2) = 3 + x_1 - 1 + x_2 - 2$$\n    $$t \\ge x_1 + x_2$$\n\n3.  **Third Master Problem (LP3)**: Add the new cut to form LP3:\n    $$\n    \\begin{aligned}\n    (LP3) \\quad \\min_{x, t} \\quad & t \\\\\n    \\text{s.t.} \\quad & t \\ge 1 - x_1 \\quad (\\text{Cut 1}) \\\\\n    & t \\ge 2x_1 - x_2 \\quad (\\text{Cut 2}) \\\\\n    & t \\ge x_1 + x_2 \\quad (\\text{Cut 3}) \\\\\n    & -2 \\le x_1 \\le 2, \\quad -2 \\le x_2 \\le 2\n    \\end{aligned}\n    $$\n\n4.  **Solution to LP3**: This is equivalent to finding $t^3 = \\min_{x \\in X} \\max\\{1 - x_1, 2x_1 - x_2, x_1 + x_2\\}$.\n    The function $h(x) = \\max\\{1 - x_1, 2x_1 - x_2, x_1 + x_2\\}$ is convex. Its unconstrained minimum on $\\mathbb{R}^2$ occurs at a point where the subdifferential contains the zero vector. A candidate for such a point is where all three affine functions are equal:\n    $$1 - x_1 = 2x_1 - x_2 = x_1 + x_2$$\n    From $2x_1 - x_2 = x_1 + x_2$, we get $x_1 = 2x_2$.\n    Substitute this into $1 - x_1 = x_1 + x_2$:\n    $$1 - 2x_2 = 2x_2 + x_2$$\n    $$1 = 5x_2 \\implies x_2 = \\frac{1}{5}$$\n    Then $x_1 = 2x_2 = 2(\\frac{1}{5}) = \\frac{2}{5}$.\n    Let's check this with the third equality $1 - x_1 = 2x_1 - x_2$:\n    $1 - \\frac{2}{5} = \\frac{3}{5}$ and $2(\\frac{2}{5}) - \\frac{1}{5} = \\frac{4}{5} - \\frac{1}{5} = \\frac{3}{5}$. The equalities hold.\n    The point where the three functions are equal is $x^* = (\\frac{2}{5}, \\frac{1}{5})$.\n    We check if this point is in the feasible set $X$:\n    $|x_1^*| = \\frac{2}{5} \\le 2$ and $|x_2^*| = \\frac{1}{5} \\le 2$. The point is inside $X$.\n    Since the unconstrained minimizer of the convex function $h(x)$ lies within the feasible set $X$, it is also the minimizer for the constrained problem.\n    The optimal solution for the x-variables is $y^3 = (\\frac{2}{5}, \\frac{1}{5})$.\n    The optimal value for $t$ is the value of the functions at this point:\n    $$t^3 = 1 - x_1 = 1 - \\frac{2}{5} = \\frac{3}{5}$$\n    The optimal value of the third master problem is $t^3 = \\frac{3}{5}$.\n\nSummary of results:\n- Cut 1: $t \\ge 1-x_1$. LP1 solution: $(y^1, t^1) = ((2,0), -1)$.\n- Cut 2: $t \\ge 2x_1-x_2$. LP2 solution: $(y^2, t^2) = ((1,2), 0)$.\n- Cut 3: $t \\ge x_1+x_2$. LP3 solution: $(y^3, t^3) = ((\\frac{2}{5}, \\frac{1}{5}), \\frac{3}{5})$.\nThe question asks for the exact value of $t^3$.", "answer": "$$\\boxed{\\frac{3}{5}}$$", "id": "3141056"}, {"introduction": "Having practiced the basic steps, we now turn to a more realistic objective function, $f(x) = \\|A x - b\\|_{2}$, which is fundamental in areas like data fitting and machine learning. This exercise requires you to derive a Kelley cut for this smooth, curved function, which involves applying the chain rule for subgradients. More importantly, it challenges you to think critically about the algorithm's efficiency and understand why its reliance on linear approximations can lead to slow convergence on smoothly curved epigraphs. [@problem_id:3141057]", "problem": "Consider the convex function $f(x) = \\|A x - b\\|_{2}$ with $A \\in \\mathbb{R}^{2 \\times 2}$, $b \\in \\mathbb{R}^{2}$, and $x \\in \\mathbb{R}^{2}$. The epigraph of $f$ is the set $\\{(x,t) \\in \\mathbb{R}^{2} \\times \\mathbb{R} \\mid t \\ge f(x)\\}$. Kelley's cutting-plane method constructs linear underestimators (cuts) that support the epigraph of $f$ at previous iterates. A valid cut at a point $x_{k}$ is built from a subgradient of $f$ at $x_{k}$ and must be a supporting hyperplane of the epigraph at $(x_{k}, f(x_{k}))$. Let\n$$\nA = \\begin{bmatrix} 2 & -1 \\\\ 0 & 1 \\end{bmatrix}, \\quad b = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}, \\quad x_{k} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}.\n$$\nAssume the residual $r_{k} = A x_{k} - b$ is nonzero, and you are given the vector $s_{k} = A^{\\top}(A x_{k} - b)$. Choose the option that gives a valid Kelley cut at $x_{k}$ for the function $f(x) = \\|A x - b\\|_{2}$ and correctly explains why using only linear cuts can be slow when the epigraph of $f$ is smoothly curved.\n\nA. $t \\ge \\sqrt{5} + \\dfrac{-4 x_{1} + x_{2} - 1}{\\sqrt{5}}$. Linear cuts can be slow on smooth curved epigraphs because they capture only first-order (tangent) information; a piecewise-linear underestimator requires many cuts to approximate curvature well, leading to small improvements per iteration.\n\nB. $t \\ge \\sqrt{5} + \\left(-4 x_{1} + x_{2} - 1\\right)$. Linear cuts are fast on smooth epigraphs because high curvature guarantees large steps with each added plane.\n\nC. $t \\ge -\\dfrac{4}{\\sqrt{5}} x_{1} + \\dfrac{1}{\\sqrt{5}} x_{2}$. Linear cuts are slow here because $\\|A x - b\\|_{2}$ is not convex, so planes cannot support the epigraph.\n\nD. $t \\ge \\sqrt{5} - \\dfrac{-4 x_{1} + x_{2} - 1}{\\sqrt{5}}$. Linear cuts are slow because norms are non-differentiable everywhere, preventing effective tangential approximation.", "solution": "The problem asks for the derivation of a valid Kelley cut for a given convex function and point, and for an evaluation of the method's performance characteristics.\n\nFirst, we establish the theoretical basis for a Kelley cut. For a convex function $f(x)$, the epigraph of $f$ is the set of points $(x, t)$ in $\\mathbb{R}^{n} \\times \\mathbb{R}$ such that $t \\ge f(x)$. A Kelley cut at an iterate $x_k$ is a linear inequality that defines a supporting hyperplane to the epigraph at the point $(x_k, f(x_k))$. This is given by the first-order approximation of the function:\n$$\nt \\ge f(x_k) + g_k^\\top (x - x_k)\n$$\nwhere $g_k$ is any subgradient of $f$ at $x_k$, i.e., $g_k \\in \\partial f(x_k)$.\n\nThe problem provides the function $f(x) = \\|A x - b\\|_{2}$ and the specific values:\n$$\nA = \\begin{bmatrix} 2 & -1 \\\\ 0 & 1 \\end{bmatrix}, \\quad b = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}, \\quad x_{k} = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}.\n$$\nLet's compute the components required for the Kelley cut inequality.\n\n1.  **Calculate $f(x_k)$:**\n    The residual at $x_k$ is $r_k = A x_k - b$.\n    $$\n    A x_k = \\begin{bmatrix} 2 & -1 \\\\ 0 & 1 \\end{bmatrix} \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} (2)(0) + (-1)(1) \\\\ (0)(0) + (1)(1) \\end{bmatrix} = \\begin{bmatrix} -1 \\\\ 1 \\end{bmatrix}.\n    $$\n    $$\n    r_k = A x_k - b = \\begin{bmatrix} -1 \\\\ 1 \\end{bmatrix} - \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix} = \\begin{bmatrix} -2 \\\\ -1 \\end{bmatrix}.\n    $$\n    The problem statement assumes this residual is nonzero, which it is. Now we can calculate the function value:\n    $$\n    f(x_k) = \\|A x_k - b\\|_{2} = \\left\\| \\begin{bmatrix} -2 \\\\ -1 \\end{bmatrix} \\right\\|_{2} = \\sqrt{(-2)^2 + (-1)^2} = \\sqrt{4 + 1} = \\sqrt{5}.\n    $$\n\n2.  **Calculate a subgradient $g_k \\in \\partial f(x_k)$:**\n    The function $f(x) = \\|A x - b\\|_{2}$ is the composition of the Euclidean norm function $g(z) = \\|z\\|_2$ and the affine function $h(x) = Ax-b$. The chain rule for subdifferentials states that $\\partial f(x) = A^\\top \\partial g(h(x))$.\n    The subdifferential of the Euclidean norm $\\|z\\|_2$ is $\\{\\frac{z}{\\|z\\|_2}\\}$ if $z \\neq 0$, and the closed unit ball $\\{u \\mid \\|u\\|_2 \\le 1\\}$ if $z = 0$.\n    Since $A x_k - b = \\begin{bmatrix} -2 \\\\ -1 \\end{bmatrix} \\neq 0$, the function $f$ is differentiable at $x_k$. The subdifferential $\\partial f(x_k)$ contains only one element, the gradient $\\nabla f(x_k)$.\n    $$\n    g_k = \\nabla f(x_k) = A^\\top \\frac{A x_k - b}{\\|A x_k - b\\|_{2}}.\n    $$\n    We have $A x_k - b = \\begin{bmatrix} -2 \\\\ -1 \\end{bmatrix}$ and $\\|A x_k - b\\|_{2} = \\sqrt{5}$. The transpose of $A$ is:\n    $$\n    A^\\top = \\begin{bmatrix} 2 & 0 \\\\ -1 & 1 \\end{bmatrix}.\n    $$\n    So, the subgradient is:\n    $$\n    g_k = \\begin{bmatrix} 2 & 0 \\\\ -1 & 1 \\end{bmatrix} \\frac{1}{\\sqrt{5}} \\begin{bmatrix} -2 \\\\ -1 \\end{bmatrix} = \\frac{1}{\\sqrt{5}} \\begin{bmatrix} (2)(-2) + (0)(-1) \\\\ (-1)(-2) + (1)(-1) \\end{bmatrix} = \\frac{1}{\\sqrt{5}} \\begin{bmatrix} -4 \\\\ 1 \\end{bmatrix}.\n    $$\n    Note that the problem gives the vector $s_k = A^\\top(A x_k - b)$, which is $\\begin{bmatrix} -4 \\\\ 1 \\end{bmatrix}$. Thus, the subgradient is $g_k = s_k / f(x_k)$.\n\n3.  **Construct the Kelley cut inequality:**\n    Substituting the calculated values into the general form $t \\ge f(x_k) + g_k^\\top (x - x_k)$:\n    $$\n    t \\ge \\sqrt{5} + \\left( \\frac{1}{\\sqrt{5}} \\begin{bmatrix} -4 \\\\ 1 \\end{bmatrix} \\right)^\\top \\left( \\begin{bmatrix} x_1 \\\\ x_2 \\end{bmatrix} - \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix} \\right)\n    $$\n    $$\n    t \\ge \\sqrt{5} + \\frac{1}{\\sqrt{5}} \\begin{bmatrix} -4 & 1 \\end{bmatrix} \\begin{bmatrix} x_1 \\\\ x_2 - 1 \\end{bmatrix}\n    $$\n    $$\n    t \\ge \\sqrt{5} + \\frac{1}{\\sqrt{5}} (-4x_1 + (x_2 - 1))\n    $$\n    $$\n    t \\ge \\sqrt{5} + \\frac{-4x_1 + x_2 - 1}{\\sqrt{5}}\n    $$\n    This is the valid Kelley cut at $x_k$.\n\nNow, we evaluate each option.\n\n**A. $t \\ge \\sqrt{5} + \\dfrac{-4 x_{1} + x_{2} - 1}{\\sqrt{5}}$. Linear cuts can be slow on smooth curved epigraphs because they capture only first-order (tangent) information; a piecewise-linear underestimator requires many cuts to approximate curvature well, leading to small improvements per iteration.**\n-   **Cut Formula**: The inequality matches our derived result precisely.\n-   **Explanation**: This explanation is correct. Kelley's cutting-plane method approximates the convex epigraph from below with a polyhedral set formed by the intersection of half-spaces (the cuts). For a function with a smoothly curved epigraph, such as $f(x) = \\|Ax-b\\|_2$, each linear cut is tangent to the epigraph at only one point. The gap between the linear underestimator and the actual function grows quadratically away from the tangency point. Consequently, many cuts are required to create a reasonably accurate approximation of the curved surface, which means the algorithm often takes small steps and converges slowly.\n-   **Verdict**: **Correct**.\n\n**B. $t \\ge \\sqrt{5} + \\left(-4 x_{1} + x_{2} - 1\\right)$. Linear cuts are fast on smooth epigraphs because high curvature guarantees large steps with each added plane.**\n-   **Cut Formula**: This is incorrect. The term containing $x_1$ and $x_2$ should be divided by $\\sqrt{5}$. This formula incorrectly uses $s_k = A^\\top(A x_k - b)$ as the subgradient, rather than the correctly normalized $g_k = s_k / f(x_k)$.\n-   **Explanation**: This explanation is incorrect. High curvature is precisely what makes linear approximations poor and causes slow convergence for first-order methods like Kelley's.\n-   **Verdict**: **Incorrect**.\n\n**C. $t \\ge -\\dfrac{4}{\\sqrt{5}} x_{1} + \\dfrac{1}{\\sqrt{5}} x_{2}$. Linear cuts are slow here because $\\|A x - b\\|_{2}$ is not convex, so planes cannot support the epigraph.**\n-   **Cut Formula**: This is incorrect. It is missing the constant term $f(x_k) - g_k^\\top x_k$. The full inequality is $t \\ge f(x_k) + g_k^\\top(x-x_k) = (f(x_k) - g_k^\\top x_k) + g_k^\\top x$. The constant term evaluates to $\\sqrt{5} - \\frac{1}{\\sqrt{5}}(-4(0) + 1(1)) = \\sqrt{5} - \\frac{1}{\\sqrt{5}} = \\frac{4}{\\sqrt{5}}$. So the full inequality should be $t \\ge \\frac{4}{\\sqrt{5}} + \\frac{-4x_1+x_2}{\\sqrt{5}}$. The formula provided is incomplete.\n-   **Explanation**: This explanation is fundamentally wrong. The function $f(x) = \\|A x - b\\|_{2}$ is a well-known example of a convex function. It is a composition of a convex function (the Euclidean norm) with an affine function. The entire theoretical foundation of Kelley's method rests on the function being convex, which guarantees that the subgradient-based cuts are valid global underestimators.\n-   **Verdict**: **Incorrect**.\n\n**D. $t \\ge \\sqrt{5} - \\dfrac{-4 x_{1} + x_{2} - 1}{\\sqrt{5}}$. Linear cuts are slow because norms are non-differentiable everywhere, preventing effective tangential approximation.**\n-   **Cut Formula**: This is incorrect. The sign between the $f(x_k)$ term and the subgradient term is wrong. The supporting hyperplane inequality is $t \\ge f(x_k) + g_k^\\top(x-x_k)$, not $t \\ge f(x_k) - g_k^\\top(x-x_k)$.\n-   **Explanation**: This explanation is incorrect. The Euclidean norm $\\|z\\|_2$ is differentiable everywhere except at $z=0$. The statement that norms are \"non-differentiable everywhere\" is false. At the point $x_k$, the function is differentiable because $A x_k - b \\neq 0$. The slowness is due to the poor quality of the linear approximation for a curved function, not a general lack of differentiability.\n-   **Verdict**: **Incorrect**.\n\nOnly option A provides both the correct mathematical formula for the Kelley cut and a correct conceptual explanation for the method's performance.", "answer": "$$\\boxed{A}$$", "id": "3141057"}, {"introduction": "The ultimate test of understanding is to move from theory to implementation. This capstone practice challenges you to write a program that brings Kelley's method to life and compares its performance against the well-known projected gradient descent algorithm. By implementing both methods and tracking key metrics like envelope error and distance to the optimum, you will gain invaluable, empirical insights into their distinct behaviors and practical trade-offs. [@problem_id:3141092]", "problem": "Design and implement an experiment to compare two iterative methods for unconstrained convex minimization over a bounded convex set: Kelley's cutting-plane method and projected gradient descent, on the same differentiable convex objective. The objective is the function $f:\\mathbb{R}^n\\to\\mathbb{R}$ defined by\n$$\nf(x) \\equiv \\sqrt{1+\\lVert x\\rVert_2^2},\n$$\nwhich is convex and smooth, and achieves its unique minimum at the origin $x^\\star = 0$ with value $f(x^\\star)=1$. The feasible set is a hypercube (box)\n$$\n\\mathcal{X} \\equiv \\{x\\in\\mathbb{R}^n : \\lVert x\\rVert_\\infty \\le R\\}.\n$$\n\nYour program must implement both methods and measure, at each iteration, two quantities derived from foundational principles of convex optimization: (i) the model envelope error based on the supporting hyperplane lower model, and (ii) the iterate's Euclidean distance to the minimizer.\n\nFundamental base to use:\n- The first-order characterization of convexity states that for a differentiable convex function, for any $x,y\\in\\mathbb{R}^n$, the supporting hyperplane inequality holds:\n$$\nf(y) \\ge f(x) + \\nabla f(x)^\\top (y-x).\n$$\n- Therefore, the pointwise supremum of past supporting hyperplanes is a global lower bound (also known as a cutting-plane model or polyhedral underestimator). If $\\{x_i\\}_{i=0}^{k-1}$ are past query points with gradients $g_i \\equiv \\nabla f(x_i)$, define the model\n$$\nm_{k-1}(x) \\equiv \\max_{0\\le i\\le k-1} \\left\\{ f(x_i) + g_i^\\top (x-x_i) \\right\\}.\n$$\nFor any $x\\in\\mathbb{R}^n$, one has $m_{k-1}(x) \\le f(x)$, and the envelope error at $x$ relative to the model $m_{k-1}$ is $f(x) - m_{k-1}(x) \\ge 0$.\n\nAlgorithmic specifications to implement:\n1) Kelley's cutting-plane method over $\\mathcal{X}$:\n- Initialization: Choose $x_0 \\in \\mathcal{X}$ and compute $g_0 \\equiv \\nabla f(x_0)$. Initialize the set of cuts $\\mathcal{C}_0 \\equiv \\{(x_0,g_0)\\}$.\n- For iteration $t=1,2,\\dots,K$:\n  - Solve the linear master problem\n    minimize $t$ subject to\n    $$\n    t \\ge f(x_i) + g_i^\\top (x - x_i) \\quad \\text{for all} \\ i\\in\\{0,\\dots,t-1\\}, \\quad x\\in\\mathcal{X}.\n    $$\n    To ensure deterministic lexicographic tie-breaking when the model is flat, augment the objective with an infinitesimal $\\ell_1$-regularization on $x$: minimize $t + \\varepsilon \\lVert x\\rVert_1$ with $\\varepsilon = 10^{-9}$. Implement this as a linear program by introducing auxiliary variables $u\\in\\mathbb{R}^n$ with $u_j \\ge \\lvert x_j\\rvert$ for $j=1,\\dots,n$, so the objective is $t + \\varepsilon \\sum_{j=1}^n u_j$, subject to the cut constraints and box constraints $-R \\le x_j \\le R$.\n  - Let the optimizer be $x_t$. Compute the envelope error $e_t \\equiv f(x_t) - m_{t-1}(x_t)$. Compute the gradient $g_t \\equiv \\nabla f(x_t)$ and add the new cut $(x_t,g_t)$ to the model.\n\n2) Projected gradient descent over $\\mathcal{X}$:\n- Initialization: Choose the same or specified $x_0 \\in \\mathcal{X}$. Initialize cuts $\\mathcal{C}_0^{\\text{GD}} \\equiv \\{(x_0,\\nabla f(x_0))\\}$.\n- For iteration $t=1,2,\\dots,K$:\n  - Compute the gradient $g_{t-1} \\equiv \\nabla f(x_{t-1})$, take one gradient step with step size $\\alpha>0$, and project back to the box:\n    $$\n    \\tilde{x}_t \\equiv x_{t-1} - \\alpha g_{t-1}, \\quad\n    x_t \\equiv \\Pi_{\\mathcal{X}}(\\tilde{x}_t),\n    $$\n    where $\\Pi_{\\mathcal{X}}$ denotes the Euclidean projection onto $\\mathcal{X}$, which is the coordinate-wise clipping onto $[-R,R]$.\n  - Compute the envelope error $e_t^{\\text{GD}} \\equiv f(x_t) - \\max_{0\\le i\\le t-1}\\{ f(x_i) + (\\nabla f(x_i))^\\top (x_t - x_i)\\}$ using only the past gradient information from the gradient descent iterates.\n  - Add the new cut $(x_t,\\nabla f(x_t))$ to $\\mathcal{C}_t^{\\text{GD}}$.\n\nFor both methods, after each iteration $t$, also compute the Euclidean distance to the optimum $d_t \\equiv \\lVert x_t - x^\\star\\rVert_2 = \\lVert x_t\\rVert_2$.\n\nImplementation details you must adhere to:\n- Use the exact objective $f(x)=\\sqrt{1+\\lVert x\\rVert_2^2}$ and its gradient\n$$\n\\nabla f(x) \\equiv \\frac{x}{\\sqrt{1+\\lVert x\\rVert_2^2}}.\n$$\n- For Kelley's master problem, implement the linear program with variables $(x,t,u)$ as described to realize the objective $t + \\varepsilon \\lVert x\\rVert_1$ via the auxiliary variables $u$ and linear constraints $x_j \\le u_j$ and $-x_j \\le u_j$ for each coordinate $j$.\n- For gradient descent, use the given constant step size $\\alpha$ and the projection $\\Pi_{\\mathcal{X}}$ given by coordinate-wise clipping.\n- For numerical robustness, when computing envelope errors, if due to numerical roundoff you obtain a small negative value, replace it by $0$.\n\nMetrics to report per test case:\n- Let $K$ be the number of iterations. For each method, compute the cumulative envelope error $\\sum_{t=1}^K e_t$ and the final distance $d_K$. Report these four numbers as a list $[S_{\\text{Kelley}}, S_{\\text{GD}}, D_{\\text{Kelley}}, D_{\\text{GD}}]$, where $S$ denotes the cumulative envelope error and $D$ denotes final distance to $x^\\star$. Round each reported number to six decimal places.\n\nTest suite:\nRun your program on the following four test cases. For each case, the dimension $n$, box radius $R$, number of iterations $K$, gradient descent step size $\\alpha$, and initial point $x_0$ are specified.\n\n- Case 1 (general two-dimensional): $n=2$, $R=2.0$, $K=10$, $\\alpha=0.9$, $x_0 = (1.0,-1.0)$.\n- Case 2 (moderate dimension): $n=5$, $R=1.0$, $K=12$, $\\alpha=0.8$, $x_0 = (0.5,-0.4,0.3,-0.2,0.1)$.\n- Case 3 (boundary start, aggressive step): $n=3$, $R=0.5$, $K=8$, $\\alpha=1.0$, $x_0 = (0.5,-0.5,0.5)$.\n- Case 4 (start at optimum): $n=4$, $R=1.5$, $K=5$, $\\alpha=0.9$, $x_0 = (0.0,0.0,0.0,0.0)$.\n\nFinal output format:\nYour program should produce a single line of output containing a Python-style list of the four per-case result lists in the order of the cases above. That is, the output must be a single line of the form\n\"[ [S_Kelley1,S_GD1,D_Kelley1,D_GD1], [S_Kelley2,S_GD2,D_Kelley2,D_GD2], [S_Kelley3,S_GD3,D_Kelley3,D_GD3], [S_Kelley4,S_GD4,D_Kelley4,D_GD4] ]\"\nwith each number rounded to six decimal places as specified.", "solution": "The user has requested a computational experiment to compare two fundamental first-order methods for constrained convex optimization: Kelley's cutting-plane method and projected gradient descent. The problem is well-defined, scientifically sound, and all necessary parameters for implementation are provided. The core of the task is to implement both algorithms, track specified performance metrics at each iteration, and report the aggregated results for a suite of test cases.\n\n### Mathematical Formulation and Principles\n\nThe problem is to minimize a differentiable convex function $f(x)$ over a compact convex set $\\mathcal{X}$.\n$$\n\\min_{x \\in \\mathcal{X}} f(x)\n$$\nThe specific objective function is $f(x) \\equiv \\sqrt{1+\\lVert x\\rVert_2^2}$, and the feasible set is a hypercube $\\mathcal{X} \\equiv \\{x\\in\\mathbb{R}^n : \\lVert x\\rVert_\\infty \\le R\\}$. The function $f(x)$ is minimized at $x^\\star=0$, which is contained in $\\mathcal{X}$ for all test cases as $R>0$.\n\nThe gradient of the objective function is essential for both methods and is given by:\n$$\n\\nabla f(x) = \\frac{x}{\\sqrt{1+\\lVert x\\rVert_2^2}} = \\frac{x}{f(x)}\n$$\nFor $x=0$, the gradient is $\\nabla f(0) = 0$.\n\nA cornerstone of both the analysis and Kelley's method is the first-order characterization of convexity, which states that a function's linear approximation at any point provides a global underestimator:\n$$\nf(y) \\ge f(x) + \\nabla f(x)^\\top (y-x) \\quad \\forall x, y \\in \\mathbb{R}^n\n$$\nThis inequality defines a supporting hyperplane to the graph of $f$ at the point $(x, f(x))$.\n\nKelley's method leverages this by iteratively building a polyhedral lower model of $f(x)$ from the supporting hyperplanes at past iterates $\\{x_i\\}_{i=0}^{t-1}$. The model $m_{t-1}(x)$ is the pointwise maximum of these hyperplanes:\n$$\nm_{t-1}(x) \\equiv \\max_{0\\le i\\le t-1} \\left\\{ f(x_i) + \\nabla f(x_i)^\\top (x-x_i) \\right\\}\n$$\nThe next iterate $x_t$ is chosen to minimize this model over $\\mathcal{X}$. This is equivalent to solving a linear program (LP).\n\nProjected gradient descent, on the other hand, takes a step in the negative gradient direction and then projects the result back into the feasible set $\\mathcal{X}$. The projection onto a hypercube is a simple coordinate-wise clipping operation.\n\nBoth methods are evaluated based on two metrics:\n1.  **Cumulative Envelope Error**: $\\sum_{t=1}^K e_t$, where $e_t = f(x_t) - m_{t-1}(x_t)$. This measures how much the true function value at the new iterate $x_t$ exceeds the prediction of the current polyhedral model. For Kelley's method, $m_{t-1}(x_t)$ is the optimal value of the master problem, whereas for PGD we must explicitly compute it using the history of iterates. A small error suggests the model is a good approximation of the function.\n2.  **Final Distance to Optimum**: $d_K = \\lVert x_K - x^\\star \\rVert_2 = \\lVert x_K \\rVert_2$. This measures how close the final iterate is to the true minimizer.\n\n### Algorithmic Implementation\n\n**Kelley's Cutting-Plane Method**\n\nAt each iteration $t$, we must find $x_t$ that minimizes the model $m_{t-1}(x)$ over $\\mathcal{X}$, with an added regularization term $\\varepsilon \\lVert x\\rVert_1$ for tie-breaking. This is formulated as the following linear program:\n$$\n\\begin{aligned}\n\\min_{x, t_{\\text{var}}, u} \\quad & t_{\\text{var}} + \\varepsilon \\sum_{j=1}^n u_j \\\\\n\\text{s.t.} \\quad & t_{\\text{var}} \\ge f(x_i) + \\nabla f(x_i)^\\top (x - x_i), && \\forall i \\in \\{0, \\dots, t-1\\} \\\\\n& -R \\le x_j \\le R, && \\forall j \\in \\{1, \\dots, n\\} \\\\\n& -u_j \\le x_j \\le u_j, && \\forall j \\in \\{1, \\dots, n\\} \\\\\n& u_j \\ge 0, && \\forall j \\in \\{1, \\dots, n\\}\n\\end{aligned}\n$$\nThe optimization variables for the LP solver are $z = [x_1, \\dots, x_n, t_{\\text{var}}, u_1, \\dots, u_n]$. The constraints are rearranged into the standard form $A_{ub} z \\le b_{ub}$ for the solver. The implementation uses `scipy.optimize.linprog` for this purpose. The envelope error at iterate $x_t$ is $e_t = f(x_t) - t_{\\text{var}}^*$, where $t_{\\text{var}}^*$ is the optimal value of the epigraph variable from the LP.\n\n**Projected Gradient Descent (PGD)**\n\nThe PGD implementation is more direct. At each iteration $t$, the update rule is:\n1.  $g_{t-1} = \\nabla f(x_{t-1})$\n2.  $\\tilde{x}_t = x_{t-1} - \\alpha g_{t-1}$\n3.  $x_t = \\Pi_{\\mathcal{X}}(\\tilde{x}_t) = \\text{numpy.clip}(\\tilde{x}_t, -R, R)$\n\nFor PGD, a history of iterates $\\{x_i\\}_{i=0}^{t-1}$ and gradients $\\{\\nabla f(x_i)\\}_{i=0}^{t-1}$ is maintained solely for the purpose of computing the envelope error $e_t = f(x_t) - m_{t-1}(x_t)$, as specified.\n\nThe implementation encapsulates these two algorithms in separate functions. A main driver function iterates through the specified test cases, calls the algorithm implementations, collects the results, and formats them into the required single-line string output. Numerical robustness is handled by ensuring that calculated envelope errors, which could be slightly negative due to floating-point arithmetic, are floored at $0$.", "answer": "[[2.340243,0.380480,0.407955,0.228795],[1.527315,0.141570,0.187332,0.063261],[0.403565,0.219803,0.170624,0.024624],[2.500000,0.000000,1.500000,0.000000]]", "id": "3141092"}]}