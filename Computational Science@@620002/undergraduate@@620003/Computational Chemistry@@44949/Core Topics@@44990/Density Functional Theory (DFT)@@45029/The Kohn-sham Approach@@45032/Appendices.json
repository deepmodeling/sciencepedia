{"hands_on_practices": [{"introduction": "While the Kohn-Sham (KS) theory is formally exact for the ground-state energy and density, the physical interpretation of the KS orbitals and their energies is more subtle than in Hartree-Fock (HF) theory. This practice provides a direct, data-driven comparison between the common approximation for ionization potential using the KS highest occupied molecular orbital (HOMO) energy and the more rigorously derived Koopmans' theorem in HF theory. By analyzing hypothetical yet realistic computational data, you will develop critical thinking about the practical utility and typical accuracy of these foundational approximations in quantum chemistry. [@problem_id:2464919]", "problem": "You are given the definitions used in computational chemistry to approximate the first ionization potential of an electronic system. Under the Hartree-Fock (HF) approximation and Koopmans' theorem, the first ionization potential is approximated by the negative of the highest occupied molecular orbital (HOMO) energy, that is, $I_{\\mathrm{HF}} \\approx -\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{HF}}$. In Kohn-Sham (KS) density functional theory, a common practical approximation is to take the negative of the highest occupied Kohn-Sham orbital energy as an estimate of the first ionization potential, that is, $I_{\\mathrm{KS}} \\approx -\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{KS}}$. All energies must be treated in Hartree atomic units $\\left(E_{\\mathrm{h}}\\right)$.\n\nFor a series of ten small, closed-shell systems, you are provided with the following test suite. Each test case is a triple $\\left(\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{HF}}, \\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{KS}}, I_{\\mathrm{ref}}\\right)$, where $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{HF}}$ is the HF HOMO energy in $E_{\\mathrm{h}}$, $\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{KS}}$ is the KS HOMO energy in $E_{\\mathrm{h}}$, and $I_{\\mathrm{ref}}$ is a reference first ionization potential in $E_{\\mathrm{h}}$:\n- System 1: $\\left(-0.570, -0.300, 0.567\\right)$\n- System 2: $\\left(-0.605, -0.330, 0.572\\right)$\n- System 3: $\\left(-0.540, -0.310, 0.515\\right)$\n- System 4: $\\left(-0.502, -0.285, 0.464\\right)$\n- System 5: $\\left(-0.490, -0.270, 0.464\\right)$\n- System 6: $\\left(-0.400, -0.400, 0.400\\right)$\n- System 7: $\\left(-0.500, -0.300, 0.400\\right)$\n- System 8: $\\left(-0.700, -0.460, 0.470\\right)$\n- System 9: $\\left(-0.350, -0.345, 0.348\\right)$\n- System 10: $\\left(-0.001, -0.0005, 0.0008\\right)$\n\nFor each system $i$, define the HF-based approximation $I_{\\mathrm{HF},i} = -\\varepsilon_{\\mathrm{HOMO},i}^{\\mathrm{HF}}$ and the Kohn-Sham-based approximation $I_{\\mathrm{KS},i} = -\\varepsilon_{\\mathrm{HOMO},i}^{\\mathrm{KS}}$. Then compute the signed difference of absolute errors\n$$\n\\Delta_i = \\left| I_{\\mathrm{KS},i} - I_{\\mathrm{ref},i} \\right| - \\left| I_{\\mathrm{HF},i} - I_{\\mathrm{ref},i} \\right|.\n$$\nA negative $\\Delta_i$ indicates that the Kohn-Sham-based approximation is closer to the reference value for system $i$, a positive $\\Delta_i$ indicates that the Hartree-Fock Koopmans approximation is closer, and $\\Delta_i = 0$ indicates a tie.\n\nAll quantities are to be computed and reported in Hartree atomic units $E_{\\mathrm{h}}$. Angles and percentages do not appear in this problem.\n\nYour program must:\n- Use the test suite above.\n- For each system $i$, compute $\\Delta_i$ as defined.\n- Produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the systems $1$ through $10$, with each $\\Delta_i$ rounded to six decimal places. For example, an output with three hypothetical results would look like $\\left[\\Delta_1,\\Delta_2,\\Delta_3\\right] = [0.123456,-0.000010,0.000000]$ where each entry is in $E_{\\mathrm{h}}$.", "solution": "The problem statement is subjected to validation.\n\nStep 1: Extraction of Givens.\nThe provided information is as follows:\n- The Hartree-Fock (HF) approximation for the first ionization potential: $I_{\\mathrm{HF}} \\approx -\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{HF}}$.\n- The Kohn-Sham (KS) density functional theory approximation for the first ionization potential: $I_{\\mathrm{KS}} \\approx -\\varepsilon_{\\mathrm{HOMO}}^{\\mathrm{KS}}$.\n- All energy quantities are given in Hartree atomic units, $E_{\\mathrm{h}}$.\n- A test suite of ten systems, each defined by a triple of $(\\varepsilon_{\\mathrm{HOMO},i}^{\\mathrm{HF}}, \\varepsilon_{\\mathrm{HOMO},i}^{\\mathrm{KS}}, I_{\\mathrm{ref},i})$:\n  - System 1: $(-0.570, -0.300, 0.567)$\n  - System 2: $(-0.605, -0.330, 0.572)$\n  - System 3: $(-0.540, -0.310, 0.515)$\n  - System 4: $(-0.502, -0.285, 0.464)$\n  - System 5: $(-0.490, -0.270, 0.464)$\n  - System 6: $(-0.400, -0.400, 0.400)$\n  - System 7: $(-0.500, -0.300, 0.400)$\n  - System 8: $(-0.700, -0.460, 0.470)$\n  - System 9: $(-0.350, -0.345, 0.348)$\n  - System 10: $(-0.001, -0.0005, 0.0008)$\n- For each system $i$, the approximations are defined precisely as $I_{\\mathrm{HF},i} = -\\varepsilon_{\\mathrm{HOMO},i}^{\\mathrm{HF}}$ and $I_{\\mathrm{KS},i} = -\\varepsilon_{\\mathrm{HOMO},i}^{\\mathrm{KS}}$.\n- The quantity to be computed is the signed difference of absolute errors:\n$$\n\\Delta_i = \\left| I_{\\mathrm{KS},i} - I_{\\mathrm{ref},i} \\right| - \\left| I_{\\mathrm{HF},i} - I_{\\mathrm{ref},i} \\right|.\n$$\n\nStep 2: Validation of Givens.\nThe problem is assessed for scientific grounding, well-posedness, and objectivity.\n- **Scientific Grounding**: The problem is based on established concepts in computational quantum chemistry. The use of Hartree-Fock orbital energies (via Koopmans' theorem) and Kohn-Sham orbital energies to approximate the first ionization potential are standard, albeit approximate, procedures. The provided numerical values for orbital energies and ionization potentials are physically plausible for small electronic systems. The problem is scientifically sound.\n- **Well-Posedness**: The problem is mathematically well-defined. All necessary data are provided, and the formula for the target quantity $\\Delta_i$ is explicit and unambiguous. A unique result can be calculated for each system.\n- **Objectivity**: The problem is stated using precise and objective language, free of subjective claims or ambiguities.\n\nStep 3: Verdict.\nThe problem is valid. It is a straightforward computational task based on clear definitions and sound scientific context. A solution will be constructed.\n\nThe task is to calculate the value of $\\Delta_i$ for each of the ten systems. The calculation proceeds by first determining the approximate ionization potentials from the HF and KS methods, and then computing their respective absolute errors with respect to the reference ionization potential, $I_{\\mathrm{ref},i}$.\n\nLet us define the absolute error for the KS approximation as $E_{\\mathrm{KS}, i} = | I_{\\mathrm{KS},i} - I_{\\mathrm{ref},i} |$ and the absolute error for the HF approximation as $E_{\\mathrm{HF}, i} = | I_{\\mathrm{HF},i} - I_{\\mathrm{ref},i} |$. The target quantity is then $\\Delta_i = E_{\\mathrm{KS}, i} - E_{\\mathrm{HF}, i}$.\n\nThis procedure is applied to each system. Let us demonstrate the calculation for System 1 as an example.\nFor System 1, the given data are $(\\varepsilon_{\\mathrm{HOMO},1}^{\\mathrm{HF}}, \\varepsilon_{\\mathrm{HOMO},1}^{\\mathrm{KS}}, I_{\\mathrm{ref},1}) = (-0.570, -0.300, 0.567)$.\n\n1.  Calculate the HF and KS ionization potential approximations:\n    $$I_{\\mathrm{HF},1} = -\\varepsilon_{\\mathrm{HOMO},1}^{\\mathrm{HF}} = -(-0.570) = 0.570 \\, E_{\\mathrm{h}}$$\n    $$I_{\\mathrm{KS},1} = -\\varepsilon_{\\mathrm{HOMO},1}^{\\mathrm{KS}} = -(-0.300) = 0.300 \\, E_{\\mathrm{h}}$$\n\n2.  Calculate the absolute error for each approximation:\n    $$E_{\\mathrm{HF},1} = |I_{\\mathrm{HF},1} - I_{\\mathrm{ref},1}| = |0.570 - 0.567| = |0.003| = 0.003 \\, E_{\\mathrm{h}}$$\n    $$E_{\\mathrm{KS},1} = |I_{\\mathrm{KS},1} - I_{\\mathrm{ref},1}| = |0.300 - 0.567| = |-0.267| = 0.267 \\, E_{\\mathrm{h}}$$\n\n3.  Calculate the signed difference of the absolute errors:\n    $$\\Delta_1 = E_{\\mathrm{KS},1} - E_{\\mathrm{HF},1} = 0.267 - 0.003 = 0.264 \\, E_{\\mathrm{h}}$$\n\nThis calculation is repeated for all ten systems. The results are as follows:\n- For System 1: $\\Delta_1 = |0.300 - 0.567| - |0.570 - 0.567| = 0.267 - 0.003 = 0.264$\n- For System 2: $\\Delta_2 = |0.330 - 0.572| - |0.605 - 0.572| = 0.242 - 0.033 = 0.209$\n- For System 3: $\\Delta_3 = |0.310 - 0.515| - |0.540 - 0.515| = 0.205 - 0.025 = 0.180$\n- For System 4: $\\Delta_4 = |0.285 - 0.464| - |0.502 - 0.464| = 0.179 - 0.038 = 0.141$\n- For System 5: $\\Delta_5 = |0.270 - 0.464| - |0.490 - 0.464| = 0.194 - 0.026 = 0.168$\n- For System 6: $\\Delta_6 = |0.400 - 0.400| - |0.400 - 0.400| = 0.000 - 0.000 = 0.000$\n- For System 7: $\\Delta_7 = |0.300 - 0.400| - |0.500 - 0.400| = 0.100 - 0.100 = 0.000$\n- For System 8: $\\Delta_8 = |0.460 - 0.470| - |0.700 - 0.470| = 0.010 - 0.230 = -0.220$\n- For System 9: $\\Delta_9 = |0.345 - 0.348| - |0.350 - 0.348| = 0.003 - 0.002 = 0.001$\n- For System 10: $\\Delta_{10} = |0.0005 - 0.0008| - |0.001 - 0.0008| = 0.0003 - 0.0002 = 0.0001$\n\nThe final output requires these values to be formatted as a list, with each number rounded to six decimal places.\nThe final list of $\\Delta_i$ values is:\n$[0.264000, 0.209000, 0.180000, 0.141000, 0.168000, 0.000000, 0.000000, -0.220000, 0.001000, 0.000100]$.\nA Python program is constructed to perform these calculations and format the output as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of comparing Hartree-Fock and Kohn-Sham approximations\n    for the first ionization potential against reference values.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (HF HOMO energy, KS HOMO energy, reference IP)\n    # All values are in Hartree atomic units (E_h).\n    test_cases = [\n        (-0.570, -0.300, 0.567),   # System 1\n        (-0.605, -0.330, 0.572),   # System 2\n        (-0.540, -0.310, 0.515),   # System 3\n        (-0.502, -0.285, 0.464),   # System 4\n        (-0.490, -0.270, 0.464),   # System 5\n        (-0.400, -0.400, 0.400),   # System 6\n        (-0.500, -0.300, 0.400),   # System 7\n        (-0.700, -0.460, 0.470),   # System 8\n        (-0.350, -0.345, 0.348),   # System 9\n        (-0.001, -0.0005, 0.0008), # System 10\n    ]\n\n    results = []\n    for case in test_cases:\n        eps_homo_hf, eps_homo_ks, i_ref = case\n\n        # Calculate the ionization potential approximations.\n        # I_HF = -eps_HOMO_HF (Koopmans' theorem)\n        # I_KS = -eps_HOMO_KS (Common KS-DFT approximation)\n        i_hf = -eps_homo_hf\n        i_ks = -eps_homo_ks\n\n        # Calculate the absolute errors for each method.\n        error_hf = np.abs(i_hf - i_ref)\n        error_ks = np.abs(i_ks - i_ref)\n\n        # Calculate the signed difference of absolute errors.\n        # Delta = |I_KS - I_ref| - |I_HF - I_ref|\n        delta = error_ks - error_hf\n\n        results.append(delta)\n\n    # Format the results as a comma-separated string with each number\n    # rounded to six decimal places, enclosed in square brackets.\n    # The f-string format specifier \"{value:.6f}\" ensures this rounding and formatting.\n    output_string = f\"[{','.join(f'{d:.6f}' for d in results)}]\"\n\n    # Final print statement in the exact required format.\n    print(output_string)\n\nsolve()\n```", "id": "2464919"}, {"introduction": "The power and complexity of modern DFT lie in the vast array of available exchange-correlation functionals, often categorized by the conceptual framework of \"Jacob's Ladder\". This exercise offers a unique opportunity to look under the hood by implementing simplified model functionals from the first four rungs: LDA, GGA, meta-GGA, and hybrid. By applying these functionals to a model chemical reaction, you will directly observe how including information about the density's reduced gradient ($s$) and kinetic energy density ($t_W$) systematically affects a key chemical property—the reaction energy barrier—illuminating why more sophisticated functionals are often necessary for achieving chemical accuracy. [@problem_id:2464923]", "problem": "You will implement a principled, model calculation in the Kohn–Sham (KS) approach of Density Functional Theory (DFT) to compare reaction barrier heights predicted by one exchange-correlation approximation from each of the first four rungs of Jacob’s Ladder: Local Density Approximation (LDA), Generalized Gradient Approximation (GGA), meta-Generalized Gradient Approximation (meta-GGA), and a hybrid functional. You will start from the foundational statements of the Hohenberg–Kohn theorem and the Kohn–Sham mapping, then define a one-dimensional model density along a reaction coordinate and evaluate the total energy functional on that density for a reactant state and a transition-state-like density. The reaction barrier is defined as the difference between the transition-state energy and the reactant energy, both in atomic units (Hartree). The final program must compute these barrier heights for a small test suite of cases and print them in the specified format.\n\nFundamental base:\n- The Hohenberg–Kohn theorem asserts that the ground-state energy is a functional of the electron density, and the Kohn–Sham construction maps the interacting problem to noninteracting electrons in an effective potential, yielding an energy functional $E[n]$ that decomposes into kinetic, Hartree, and exchange-correlation components.\n- For a single-electron system, the von Weizsäcker kinetic energy functional is exact, and Hartree–Fock exchange exactly cancels the Hartree self-interaction: $E_{x}^{\\mathrm{exact}}[n] = -E_{H}[n]$.\n\nModel definitions to use:\n- Work in one spatial dimension with coordinate $x$ (in Bohr). Define a uniform grid on the interval $[-L, L]$ with $N_x$ points and spacing $\\Delta x = \\frac{2L}{N_x-1}$. Denote the grid points by $x_i$, $i=1,\\dots,N_x$.\n- Define a normalized reactant density $n_R(x)$ and a normalized transition-state density $n_{TS}(x)$ representing a double-well reaction coordinate with well half-separation $a$:\n  - Reactant density:\n    $$n_R(x) = C_R \\exp\\!\\left(-\\frac{(x + a)^2}{2 \\sigma_R^2}\\right), \\quad \\int_{-L}^{L} n_R(x)\\,dx = 1,$$\n    with width parameter $\\sigma_R$ and numerical normalization constant $C_R$ determined by the integral.\n  - Transition-state density (symmetric, delocalized over both wells):\n    $$n_{TS}(x) = C_{TS} \\left[\\tfrac{1}{2}\\exp\\!\\left(-\\frac{(x - a)^2}{2 \\sigma_{TS}^2}\\right) + \\tfrac{1}{2}\\exp\\!\\left(-\\frac{(x + a)^2}{2 \\sigma_{TS}^2}\\right)\\right], \\quad \\int_{-L}^{L} n_{TS}(x)\\,dx = 1,$$\n    with width parameter $\\sigma_{TS}$ and normalization constant $C_{TS}$ determined numerically.\n- Use the following model total energy functional (atomic units) for a given density $n(x)$:\n  $$E[n] = T_{W}[n] + E_{H}[n] + E_{x}[n],$$\n  where:\n  - von Weizsäcker kinetic energy (exact for one electron):\n    $$T_{W}[n] = \\frac{1}{8}\\int_{-L}^{L} \\frac{\\left|\\nabla n(x)\\right|^{2}}{n(x) + \\eta}\\,dx,$$\n    with a small regularization $\\eta = 10^{-12}$ to avoid division by zero in the numerical tails.\n  - Soft-Coulomb Hartree energy:\n    $$E_{H}[n] = \\frac{1}{2}\\int_{-L}^{L}\\int_{-L}^{L} \\frac{n(x)\\,n(x')}{\\sqrt{(x-x')^{2} + \\epsilon^{2}}}\\,dx\\,dx',$$\n    with softening parameter $\\epsilon > 0$ (in Bohr).\n  - Exchange energy $E_{x}[n]$ depends on the rung:\n    1. LDA exchange (unpolarized):\n       $$E_{x}^{\\mathrm{LDA}}[n] = \\int_{-L}^{L} e_{x}^{\\mathrm{LDA}}(n(x))\\,dx, \\quad e_{x}^{\\mathrm{LDA}}(n) = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{\\frac{1}{3}} n^{\\frac{4}{3}}.$$\n       Ignore correlation (set it to zero).\n    2. GGA exchange using a Perdew–Burke–Ernzerhof (PBE)-like enhancement factor:\n       $$E_{x}^{\\mathrm{GGA}}[n] = \\int_{-L}^{L} e_{x}^{\\mathrm{LDA}}(n(x))\\,F_{x}(s(x))\\,dx,$$\n       $$F_{x}(s) = 1 + \\kappa - \\frac{\\kappa}{1 + \\mu s^{2}/\\kappa}, \\quad \\kappa = 0.804,\\ \\mu = 0.21951,$$\n       with reduced gradient\n       $$s(x) = \\frac{|\\nabla n(x)|}{2\\,k_{F}(n(x))\\,n(x)}, \\quad k_{F}(n) = \\left(3\\pi^{2} n\\right)^{\\frac{1}{3}},$$\n       evaluated with $n(x)$ clipped from below by $\\eta$ for numerical stability.\n    3. meta-GGA exchange introducing a simple kinetic-energy-density-dependent attenuation factor:\n       $$E_{x}^{\\mathrm{meta}}[n] = \\int_{-L}^{L} e_{x}^{\\mathrm{LDA}}(n(x))\\,F_{x}(s(x))\\,G(t_{W}(x))\\,dx,$$\n       $$G(t_{W}) = 1 - \\beta \\frac{t_{W}}{1 + t_{W}}, \\quad \\beta = 0.2,$$\n       where\n       $$t_{W}(x) = \\frac{\\tau_{W}(x)}{\\tau_{TF}(x)},\\quad \\tau_{W}(x) = \\frac{|\\nabla n(x)|^{2}}{8\\,(n(x)+\\eta)},\\quad \\tau_{TF}(x) = \\frac{3}{10}\\left(3\\pi^{2}\\right)^{\\frac{2}{3}} n(x)^{\\frac{5}{3}}.$$\n    4. Hybrid functional that mixes a fraction $a$ of exact (Hartree–Fock-like) exchange with the semilocal meta-GGA exchange. For a one-electron density $n(x)$, exact exchange equals negative Hartree, so we define:\n       $$E_{x}^{\\mathrm{hyb}}[n] = (1-a)\\,E_{x}^{\\mathrm{meta}}[n] + a\\,E_{x}^{\\mathrm{exact}}[n], \\quad E_{x}^{\\mathrm{exact}}[n] = -E_{H}[n].$$\n       Thus the total hybrid energy becomes:\n       $$E^{\\mathrm{hyb}}[n] = T_{W}[n] + (1-a)\\,E_{H}[n] + (1-a)\\,E_{x}^{\\mathrm{meta}}[n].$$\n\nFor each rung, define the reaction barrier height as:\n$$B = E[n_{TS}] - E[n_{R}],$$\nin Hartree.\n\nNumerical details:\n- Use centered finite differences to approximate $\\nabla n(x)$ on the uniform grid.\n- Use the rectangle rule for numerical integration on the uniform grid, i.e., replace $\\int f(x)\\,dx$ by $\\sum_{i=1}^{N_x} f(x_i)\\,\\Delta x$. For the double integral in $E_{H}[n]$, use the corresponding two-dimensional rectangle rule with the same spacing, i.e., $\\iint \\cdot \\,dx\\,dx' \\approx \\sum_{i,j} (\\cdot)\\,(\\Delta x)^2$.\n- Use the same spatial grid to construct both $n_R(x)$ and $n_{TS}(x)$ and to evaluate all functionals.\n- All energies must be reported in Hartree and rounded to six decimal places.\n\nTest suite to evaluate:\nFor each case, use the tuple $(L,\\ N_x,\\ \\epsilon,\\ a,\\ \\sigma_R,\\ \\sigma_{TS},\\ a_{\\mathrm{hyb}})$ with $a_{\\mathrm{hyb}} = 0.25$:\n1. Case A (happy path): $(12.0,\\ 801,\\ 0.5,\\ 2.0,\\ 0.6,\\ 0.9,\\ 0.25)$.\n2. Case B (steeper density, boundary on gradients): $(10.0,\\ 601,\\ 0.5,\\ 1.0,\\ 0.4,\\ 0.5,\\ 0.25)$.\n3. Case C (more delocalized TS, softer interaction): $(15.0,\\ 1001,\\ 0.7,\\ 3.0,\\ 0.8,\\ 1.2,\\ 0.25)$.\n\nRequired final output format:\n- Your program should produce a single line of output containing the results as a comma-separated flat list enclosed in square brackets. The list must contain, in order, for each case in the order given above, the four barrier heights for the rungs in the order LDA, GGA, meta-GGA, hybrid. For example, the output must look like\n$$[B_{A,\\mathrm{LDA}}, B_{A,\\mathrm{GGA}}, B_{A,\\mathrm{meta}}, B_{A,\\mathrm{hyb}}, B_{B,\\mathrm{LDA}}, \\dots, B_{C,\\mathrm{hyb}}],$$\nwith each $B$ rounded to six decimal places and expressed in Hartree.\n\nYour task:\n- Implement the above definitions faithfully and compute the barrier heights for the test suite. Ensure scientific plausibility in the implementation by adhering to the definitions and numerical stability notes provided.", "solution": "The problem posed is a well-defined and scientifically grounded exercise in computational chemistry. It requires the implementation of a one-dimensional model system to investigate the behavior of exchange-correlation functionals from the first four rungs of Jacob's Ladder in Density Functional Theory (DFT). The problem is self-contained, providing all necessary definitions, constants, and parameters for a complete numerical solution. The definitions of the one-dimensional density and the energy functionals, while simplified analogies of their three-dimensional counterparts, are explicitly stated for the purpose of this model calculation. Such models are invaluable for pedagogical purposes and for gaining qualitative insight into the performance of different approximations. Therefore, the problem is valid, and we proceed to outline the solution.\n\nThe core task is to compute the reaction barrier, $B = E[n_{TS}] - E[n_{R}]$, for four different approximations to the exchange-correlation functional. This requires several distinct steps: constructing the densities on a discrete grid, implementing the formulas for each component of the total energy, and finally combining these components to find the total energies and the barrier height. All calculations are performed in atomic units, with energy in Hartree and length in Bohr.\n\nFirst, we establish the computational domain. The continuous one-dimensional space $x$ is discretized into a uniform grid of $N_x$ points on the interval $[-L, L]$. The grid points are denoted by $x_i$ for $i = 1, \\dots, N_x$, with a constant spacing $\\Delta x = \\frac{2L}{N_x - 1}$.\n\nOn this grid, we construct the reactant density, $n_R(x)$, and the transition-state density, $n_{TS}(x)$. The reactant state is represented by a single Gaussian-like function localized in one potential well, whereas the transition state is represented by a symmetric linear combination of two Gaussians, corresponding to a delocalized density between the two wells. The analytical forms are given as:\n$$n_{R, \\text{un-norm}}(x) = \\exp\\!\\left(-\\frac{(x + a)^2}{2 \\sigma_R^2}\\right)$$\n$$n_{TS, \\text{un-norm}}(x) = \\frac{1}{2}\\exp\\!\\left(-\\frac{(x - a)^2}{2 \\sigma_{TS}^2}\\right) + \\frac{1}{2}\\exp\\!\\left(-\\frac{(x + a)^2}{2 \\sigma_{TS}^2}\\right)$$\nThese densities must be normalized such that the integral over the domain equals $1$, representing a single electron. Numerically, this is achieved using the rectangle rule for integration: $\\int f(x) dx \\approx \\sum_{i=1}^{N_x} f(x_i) \\Delta x$. The normalization constant $C$ for a given un-normalized density $n_{\\text{un-norm}}(x_i)$ is thus $C = \\left( \\sum_i n_{\\text{un-norm}}(x_i) \\Delta x \\right)^{-1}$. The final discrete densities are then $n(x_i) = C \\cdot n_{\\text{un-norm}}(x_i)$.\n\nNext, we evaluate the total energy functional $E[n]$ for both $n_R$ and $n_{TS}$. The total energy is a sum of kinetic, Hartree, and exchange components: $E[n] = T_{W}[n] + E_{H}[n] + E_{x}[n]$.\n\nThe von Weizsäcker kinetic energy, $T_W[n]$, is given by:\n$$T_{W}[n] = \\frac{1}{8}\\int \\frac{\\left|\\nabla n(x)\\right|^{2}}{n(x) + \\eta}\\,dx \\approx \\frac{\\Delta x}{8} \\sum_i \\frac{\\left|\\nabla n_i\\right|^{2}}{n_i + \\eta}$$\nThe gradient $\\nabla n_i = \\frac{dn}{dx}|_{x_i}$ is approximated using a centered finite difference scheme for interior points and one-sided differences at the boundaries. A small regularization parameter $\\eta = 10^{-12}$ ensures numerical stability in regions where the density $n(x)$ approaches zero.\n\nThe Hartree energy, $E_H[n]$, represents the classical electrostatic self-repulsion. Its soft-Coulomb form is evaluated using a two-dimensional rectangle rule on the discrete grid:\n$$E_{H}[n] = \\frac{1}{2}\\iint \\frac{n(x)\\,n(x')}{\\sqrt{(x-x')^{2} + \\epsilon^{2}}}\\,dx\\,dx' \\approx \\frac{(\\Delta x)^2}{2} \\sum_{i,j} \\frac{n_i n_j}{\\sqrt{(x_i-x_j)^{2} + \\epsilon^{2}}}$$\nwhere $\\epsilon$ is the softening parameter. This $O(N_x^2)$ calculation is the most computationally intensive part of the procedure.\n\nThe exchange energy, $E_x[n]$, is where the four rungs of Jacob's Ladder differ.\n\n$1$. **LDA (Local Density Approximation)**: This is the simplest approximation, depending only on the local density $n(x)$.\n$$E_{x}^{\\mathrm{LDA}}[n] = \\int e_{x}^{\\mathrm{LDA}}(n(x))\\,dx \\approx \\Delta x \\sum_i \\left( -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{\\frac{1}{3}} n_i^{\\frac{4}{3}} \\right)$$\n\n$2$. **GGA (Generalized Gradient Approximation)**: This rung improves upon LDA by including the dependency on the local gradient of the density, $\\nabla n(x)$, through the reduced density gradient $s(x)$.\n$$E_{x}^{\\mathrm{GGA}}[n] = \\int e_{x}^{\\mathrm{LDA}}(n(x)) F_x(s(x)) \\,dx \\approx \\Delta x \\sum_i e_{x}^{\\mathrm{LDA}}(n_i) F_x(s_i)$$\nThe enhancement factor is $F_{x}(s) = 1 + \\kappa - \\frac{\\kappa}{1 + \\mu s^{2}/\\kappa}$ with constants $\\kappa = 0.804$ and $\\mu = 0.21951$. The reduced gradient $s_i$ is calculated at each grid point using $s_i = \\frac{|\\nabla n_i|}{2 k_F(n_i) n_i}$, where $k_F(n) = (3\\pi^2 n)^{1/3}$ is the Fermi wavevector. To maintain stability, the density $n_i$ in the denominator and in powers is numerically clipped from below by $\\eta$.\n\n$3$. **meta-GGA**: This rung adds a dependency on the kinetic energy density, providing more flexibility. Here, the von Weizsäcker kinetic energy density, $\\tau_W(x) = \\frac{|\\nabla n(x)|^2}{8(n(x)+\\eta)}$, is used.\n$$E_{x}^{\\mathrm{meta}}[n] = \\int e_{x}^{\\mathrm{LDA}}(n(x)) F_x(s(x)) G(t_W(x)) \\,dx \\approx \\Delta x \\sum_i e_{x}^{\\mathrm{LDA}}(n_i) F_x(s_i) G(t_{W,i})$$\nThe attenuation factor is $G(t_W) = 1 - \\beta \\frac{t_W}{1 + t_W}$ with $\\beta=0.2$. The ingredient $t_W(x)$ is the ratio of von Weizsäcker to Thomas-Fermi kinetic energy densities, $t_W = \\tau_W / \\tau_{TF}$, with $\\tau_{TF}(x) = \\frac{3}{10}(3\\pi^2)^{2/3} n(x)^{5/3}$. Again, numerical regularization is applied where necessary.\n\n$4$. **Hybrid Functional**: This rung mixes a fraction of exact exchange with a semilocal functional. For a one-electron system, the exact exchange energy perfectly cancels the spurious Hartree self-interaction, i.e., $E_{x}^{\\mathrm{exact}}[n] = -E_{H}[n]$. The total energy for the hybrid functional is thus defined as:\n$$E^{\\mathrm{hyb}}[n] = T_{W}[n] + (1-a)\\,E_{H}[n] + (1-a)\\,E_{x}^{\\mathrm{meta}}[n]$$\nHere, $a$ is the fraction of exact exchange, given as $0.25$.\n\nFor each test case specified by the tuple $(L, N_x, \\epsilon, a, \\sigma_R, \\sigma_{TS}, a_{\\mathrm{hyb}})$, we first construct $n_R$ and $n_{TS}$. Then, for each density, we compute the four total energies: $E^{\\mathrm{LDA}}$, $E^{\\mathrm{GGA}}$, $E^{\\mathrm{meta}}$, and $E^{\\mathrm{hyb}}$. The reaction barrier for each functional is then calculated as the difference $B = E[n_{TS}] - E[n_{R}]$. The final results are collected and formatted as a single list, rounded to six decimal places, providing a quantitative comparison of the functionals for this model problem.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\n# A strict Russian professor would define constants at the top, not inside functions.\n# These constants are derived from the problem statement.\nETA = 1e-12\nKAPPA = 0.804\nMU = 0.21951\nBETA = 0.2\n\n# Pre-calculate factors for efficiency.\nLDA_C = -3.0 / 4.0 * (3.0 / np.pi)**(1.0 / 3.0)\nKF_C = (3.0 * np.pi**2)**(1.0 / 3.0)\nTAUTF_C = 3.0 / 10.0 * (3.0 * np.pi**2)**(2.0 / 3.0)\n\ndef compute_total_energies(n_grid, x_grid, dx, epsilon, a_hyb):\n    \"\"\"\n    Computes the total energy of a given 1D density for all four functionals.\n    The implementation follows the definitions provided in the problem statement meticulously.\n    \"\"\"\n    # Step 1: Calculate the gradient of the density.\n    # np.gradient uses centered differences for interior points, which is appropriate.\n    grad_n = np.gradient(n_grid, dx)\n\n    # Step 2: Calculate the von Weizsäcker kinetic energy, T_W.\n    # The term n(x) + eta is used as per the formula's regularization.\n    T_w_integrand = 0.125 * np.abs(grad_n)**2 / (n_grid + ETA)\n    T_w = np.sum(T_w_integrand) * dx\n\n    # Step 3: Calculate the soft-Coulomb Hartree energy, E_H.\n    # This O(N^2) calculation is vectorized with numpy for performance.\n    x_i, x_j = np.meshgrid(x_grid, x_grid, indexing='ij')\n    n_i, n_j = np.meshgrid(n_grid, n_grid, indexing='ij')\n    dist_sq = (x_i - x_j)**2\n    E_h_integrand = (n_i * n_j) / np.sqrt(dist_sq + epsilon**2)\n    E_h = 0.5 * np.sum(E_h_integrand) * dx**2\n\n    # Step 4: Calculate exchange energies for a tour of Jacob's Ladder.\n    # For stability in fractional powers and denominators, clip n_grid from below.\n    n_clipped = np.maximum(n_grid, ETA)\n\n    # Rung 1: LDA Exchange Energy\n    ex_lda_density = LDA_C * n_clipped**(4.0 / 3.0)\n    Ex_lda = np.sum(ex_lda_density) * dx\n\n    # Rung 2: GGA Exchange Energy\n    kF = KF_C * n_clipped**(1.0 / 3.0)\n    s = np.abs(grad_n) / (2.0 * kF * n_clipped)\n    Fx = 1.0 + KAPPA - KAPPA / (1.0 + MU * s**2 / KAPPA)\n    Ex_gga = np.sum(ex_lda_density * Fx) * dx\n\n    # Rung 3: meta-GGA Exchange Energy\n    tau_w_density = 0.125 * np.abs(grad_n)**2 / (n_grid + ETA)\n    tau_tf_density = TAUTF_C * n_clipped**(5.0 / 3.0)\n    # Add regularization to denominator to prevent potential 0/0 issues.\n    t_w = tau_w_density / (tau_tf_density + ETA)\n    G_tW = 1.0 - BETA * t_w / (1.0 + t_w)\n    Ex_mgga = np.sum(ex_lda_density * Fx * G_tW) * dx\n\n    # Step 5: Assemble the total energies for each functional.\n    E_lda = T_w + E_h + Ex_lda\n    E_gga = T_w + E_h + Ex_gga\n    E_mgga = T_w + E_h + Ex_mgga\n\n    # Rung 4: Hybrid Functional Total Energy\n    # Using the specific simplified total energy expression for the hybrid.\n    E_hyb = T_w + (1.0 - a_hyb) * E_h + (1.0 - a_hyb) * Ex_mgga\n\n    return {\"lda\": E_lda, \"gga\": E_gga, \"meta\": E_mgga, \"hyb\": E_hyb}\n\ndef compute_barriers_for_case(case):\n    \"\"\"\n    Orchestrates the calculation for a single test case from the problem suite.\n    \"\"\"\n    L, Nx, epsilon, a_sep, sigma_R, sigma_TS, a_hyb = case\n\n    # Setup the spatial grid.\n    x_grid = np.linspace(-L, L, Nx)\n    dx = x_grid[1] - x_grid[0]\n\n    # Construct and normalize the reactant density (n_R).\n    n_R_unnormalized = np.exp(-(x_grid + a_sep)**2 / (2.0 * sigma_R**2))\n    norm_R = np.sum(n_R_unnormalized) * dx\n    n_R_grid = n_R_unnormalized / norm_R\n\n    # Construct and normalize the transition-state density (n_TS).\n    n_TS_unnormalized = 0.5 * (np.exp(-(x_grid - a_sep)**2 / (2.0 * sigma_TS**2)) +\n                               np.exp(-(x_grid + a_sep)**2 / (2.0 * sigma_TS**2)))\n    norm_TS = np.sum(n_TS_unnormalized) * dx\n    n_TS_grid = n_TS_unnormalized / norm_TS\n\n    # Calculate total energies for both reactant and transition-state densities.\n    energies_R = compute_total_energies(n_R_grid, x_grid, dx, epsilon, a_hyb)\n    energies_TS = compute_total_energies(n_TS_grid, x_grid, dx, epsilon, a_hyb)\n\n    # The barrier height is the difference in energy.\n    barrier_lda = energies_TS[\"lda\"] - energies_R[\"lda\"]\n    barrier_gga = energies_TS[\"gga\"] - energies_R[\"gga\"]\n    barrier_meta = energies_TS[\"meta\"] - energies_R[\"meta\"]\n    barrier_hyb = energies_TS[\"hyb\"] - energies_R[\"hyb\"]\n\n    return [barrier_lda, barrier_gga, barrier_meta, barrier_hyb]\n\ndef solve():\n    \"\"\"\n    Main function to execute the full problem: iterate through test cases,\n    compute barriers, and print the results in the required format.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (L, N_x, epsilon, a, sigma_R, sigma_TS, a_hyb)\n        (12.0, 801, 0.5, 2.0, 0.6, 0.9, 0.25),\n        (10.0, 601, 0.5, 1.0, 0.4, 0.5, 0.25),\n        (15.0, 1001, 0.7, 3.0, 0.8, 1.2, 0.25),\n    ]\n\n    all_results = []\n    for case in test_cases:\n        barriers = compute_barriers_for_case(case)\n        all_results.extend(barriers)\n\n    # Format the results to exactly six decimal places as requested.\n    formatted_results = [f\"{res:.6f}\" for res in all_results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2464923"}, {"introduction": "The standard Kohn-Sham framework models the complex, interacting many-electron system using a fictitious system of non-interacting electrons, which can be described by a single Slater determinant. This powerful approximation, however, can fail in cases of strong or \"static\" electron correlation, such as in bond-breaking or for certain materials. In this advanced exercise, you will construct both an exact (full configuration interaction) solution and a restricted Kohn-Sham solution for a model two-electron system, allowing you to witness firsthand how and why the standard KS approach falters as electron correlation becomes dominant. [@problem_id:2464920]", "problem": "You must write a complete, runnable program that models two interacting electrons confined in a one-dimensional infinite potential well using the Kohn-Sham (KS) approach within Density Functional Theory (DFT) and compares it to the exact interacting solution. Use Hartree atomic units throughout, so energies must be in Hartree and lengths in Bohr. All quantities in your output are dimensionless.\n\nConsider two spin-$\\tfrac{1}{2}$ electrons of opposite spin in a one-dimensional box of length $L$ with infinite walls at $x=0$ and $x=L$. The exact two-electron Hamiltonian in Hartree atomic units is\n$$\n\\hat{H} = -\\frac{1}{2}\\frac{\\partial^{2}}{\\partial x_{1}^{2}} - \\frac{1}{2}\\frac{\\partial^{2}}{\\partial x_{2}^{2}} + g\\,\\delta(x_{1}-x_{2}),\n$$\nwith boundary conditions $\\psi(0,x_{2})=\\psi(L,x_{2})=\\psi(x_{1},0)=\\psi(x_{1},L)=0$ for the exact two-electron wavefunction $\\psi(x_{1},x_{2})$. The parameter $g \\ge 0$ controls the strength of a contact repulsion. Set $L=1$.\n\nDefine a discrete, finite-difference representation with $M$ interior grid points per spatial coordinate, where $M=40$. Let the uniform grid spacing be $h=L/(M+1)$. Define the one-particle kinetic-energy matrix $T_{1}$ of size $M \\times M$ by\n$$\n(T_{1})_{ii} = -\\frac{1}{2}\\,\\frac{-2}{h^{2}},\\quad (T_{1})_{i,i\\pm 1} = -\\frac{1}{2}\\,\\frac{1}{h^{2}},\\quad \\text{and all other entries } 0,\n$$\nwhich corresponds to central differences with Dirichlet boundary conditions. Define the two-particle kinetic operator as the Kronecker sum\n$$\nT_{2} = I \\otimes T_{1} + T_{1} \\otimes I,\n$$\nwhere $I$ is the $M\\times M$ identity matrix and $\\otimes$ denotes the Kronecker product. Represent the contact interaction as a diagonal matrix $V_{2}$ of size $M^{2}\\times M^{2}$ with entries\n$$\n(V_{2})_{(i,j),(i,j)} =\n\\begin{cases}\n\\frac{g}{h}, & \\text{if } i=j,\\\\\n0, & \\text{if } i \\ne j,\n\\end{cases}\n$$\nwhere $i$ and $j$ range from $1$ to $M$ and $(i,j)$ labels the two-particle grid point $(x_{i},x_{j})$. The exact discrete Hamiltonian is $H_{2}=T_{2}+V_{2}$. Define the exact ground-state energy $E_{\\mathrm{exact}}(g)$ as the smallest eigenvalue of $H_{2}$.\n\nDefine the spin-restricted Kohn-Sham (RKS) reference as a single doubly occupied spatial orbital $\\varphi(x)$ with $\\int_{0}^{L}|\\varphi(x)|^{2}\\,dx=1$. For contact repulsion, the corresponding spin-restricted energy functional is\n$$\nE_{\\mathrm{RKS}}[\\varphi] = 2 \\int_{0}^{L} \\varphi^{*}(x)\\left(-\\frac{1}{2}\\frac{d^{2}}{dx^{2}}\\right)\\varphi(x)\\,dx \\;+\\; g \\int_{0}^{L} |\\varphi(x)|^{4}\\,dx,\n$$\nsubject to $\\varphi(0)=\\varphi(L)=0$. Its stationary condition yields the non-linear eigenproblem\n$$\n\\left[-\\frac{1}{2}\\frac{d^{2}}{dx^{2}} + g\\,|\\varphi(x)|^{2}\\right]\\varphi(x) = \\varepsilon\\,\\varphi(x),\n$$\nwith the same boundary conditions. In the same discrete representation as above, write the RKS non-linear problem for a vector $u\\in\\mathbb{R}^{M}$ with Euclidean normalization $u^{\\mathsf{T}}u=1$. The effective one-particle Hamiltonian is\n$$\nH_{\\mathrm{eff}}[u] = T_{1} + \\operatorname{diag}\\!\\left(g\\,u\\odot u\\right),\n$$\nwhere $\\odot$ denotes componentwise multiplication, and the discrete RKS ground-state orbital $u$ is the lowest-eigenvalue eigenvector of $H_{\\mathrm{eff}}[u]$. The corresponding discrete RKS total energy is\n$$\nE_{\\mathrm{RKS}}(g) = 2\\,u^{\\mathsf{T}}T_{1}u \\;+\\; g\\,\\sum_{i=1}^{M} u_{i}^{4}.\n$$\n\nYour task is to implement these definitions exactly and compute, for each given $g$, the dimensionless relative error\n$$\n\\mathrm{rel}(g) \\;=\\; \\frac{E_{\\mathrm{RKS}}(g) - E_{\\mathrm{exact}}(g)}{E_{\\mathrm{exact}}(g)}.\n$$\n\nUse the following test suite, which specifies the contact strengths $g$ to be evaluated:\n- $g=0$,\n- $g=1$,\n- $g=5$,\n- $g=20$.\n\nYour program must compute $\\mathrm{rel}(g)$ for each of the $4$ values of $g$ above, in the order given, and produce a single line of output containing these $4$ results as a comma-separated list enclosed in square brackets. Each result must be rounded to exactly $6$ decimal places. For example, the required output format is\n\"[r0,r1,r2,r3]\"\nwhere each $r_{k}$ is a float rounded to $6$ decimal places representing $\\mathrm{rel}(g)$ for the corresponding test case. No other text should be printed.", "solution": "The problem statement has been critically validated and is determined to be scientifically sound, complete, and well-posed. All definitions are mathematically consistent and the computational task is feasible. We will proceed with the solution.\n\nThe problem requires a comparison between two computational schemes for a system of two interacting electrons in a one-dimensional infinite potential well of length $L=1$. The first scheme is an \"exact\" numerical solution obtained by diagonalizing the full two-particle Hamiltonian in a discrete basis. The second is an approximate solution based on the spin-restricted Kohn-Sham (RKS) or Hartree method. All calculations are performed in a finite-difference representation with $M=40$ interior grid points, leading to a grid spacing of $h=L/(M+1)$.\n\n### 1. Discretization and Shared Operators\n\nThe foundation for both methods is the discrete representation of the single-particle kinetic energy operator, $-\\frac{1}{2}\\frac{d^2}{dx^2}$, on the grid. Using a second-order central difference approximation with Dirichlet boundary conditions ($\\varphi(0)=\\varphi(L)=0$), we construct the $M \\times M$ matrix $T_1$. Its elements are given by:\n$$\n(T_{1})_{ij} = \\frac{-1}{2h^2} \\times\n\\begin{cases}\n-2 & \\text{if } i=j \\\\\n1 & \\text{if } |i-j|=1 \\\\\n0 & \\text{otherwise}\n\\end{cases}\n$$\nThis matrix, $T_1$, is constructed once and used in both the exact and RKS calculations.\n\n### 2. Exact Ground-State Energy, $E_{\\mathrm{exact}}(g)$\n\nThe exact two-particle Hamiltonian, $\\hat{H} = \\hat{T}_1 + \\hat{T}_2 + \\hat{V}_{12}$, is discretized on a two-dimensional grid of size $M \\times M$. A state on this grid is represented by a vector of size $M^2$. The two-particle kinetic operator, $\\hat{T}_1 + \\hat{T}_2$, is represented by the $M^2 \\times M^2$ matrix $T_2$, defined by the Kronecker sum:\n$$\nT_{2} = I \\otimes T_{1} + T_{1} \\otimes I\n$$\nwhere $I$ is the $M \\times M$ identity matrix.\n\nThe contact repulsion, $g\\,\\delta(x_1-x_2)$, is represented by a diagonal $M^2 \\times M^2$ matrix, $V_2$. The delta function's integral property, $\\int f(x) \\delta(x-y) dx = f(y)$, is modeled in the discrete space by setting the interaction potential to $g/h$ at points where $x_1 = x_2$ (i.e., $i=j$) and zero otherwise. This ensures the correct integrated strength. The non-zero elements of the diagonal matrix $V_2$ are:\n$$\n(V_{2})_{(i,i),(i,i)} = \\frac{g}{h} \\quad \\text{for } i=1, \\dots, M\n$$\nThe total discrete Hamiltonian is the sum $H_2 = T_2 + V_2$. This is a real symmetric matrix of size $M^2 \\times M^2 = 1600 \\times 1600$. The exact ground-state energy within this basis, $E_{\\mathrm{exact}}(g)$, is the lowest eigenvalue of $H_2$. This is computed numerically using an efficient eigensolver for symmetric matrices.\n\n### 3. Spin-Restricted Kohn-Sham Energy, $E_{\\mathrm{RKS}}(g)$\n\nThe RKS approach approximates the many-body problem by solving a one-body problem in an effective potential. For two electrons in a single spatial orbital $\\varphi(x)$, the problem reduces to finding the self-consistent solution to the non-linear eigenproblem:\n$$\n\\left[-\\frac{1}{2}\\frac{d^{2}}{dx^{2}} + V_{\\mathrm{eff}}[\\varphi](x)\\right]\\varphi(x) = \\varepsilon\\,\\varphi(x)\n$$\nHere, the effective potential includes electron-electron interaction. For the specified contact interaction, this corresponds to a Hartree potential $V_{\\mathrm{eff}}(x) = g|\\varphi(x)|^2$. The total energy is the expectation value of the true Hamiltonian with the approximate two-particle wavefunction $\\Psi(x_1, x_2) = \\varphi(x_1)\\varphi(x_2)$.\n\nIn the discrete representation, the orbital is a vector $u \\in \\mathbb{R}^M$ with normalization $u^\\mathsf{T}u = 1$. The discrete eigenproblem is solved via a Self-Consistent Field (SCF) procedure:\n\n1.  **Initialization**: An initial guess for the orbital, $u^{(0)}$, is required. The ground state of the non-interacting system ($g=0$), which is the eigenvector corresponding to the lowest eigenvalue of $T_1$, serves as an excellent initial guess.\n\n2.  **Iteration**: The following steps are repeated until convergence:\n    a. At iteration $k$, construct the effective Hamiltonian matrix $H_{\\mathrm{eff}}[u^{(k)}]$ from the current orbital $u^{(k)}$:\n       $$\n       H_{\\mathrm{eff}}[u^{(k)}] = T_{1} + \\operatorname{diag}(g\\,u^{(k)} \\odot u^{(k)})\n       $$\n       where $\\odot$ denotes element-wise multiplication.\n    b. Solve the linear eigenproblem for $H_{\\mathrm{eff}}[u^{(k)}]$ to find its lowest-energy eigenvector, which becomes the updated orbital guess, $u^{(k+1)}$.\n    c. Check for convergence by comparing the norm of the difference between successive orbitals, $\\|u^{(k+1)} - u^{(k)}\\|_2$, against a small tolerance. To handle arbitrary sign flips of the eigenvector, the signs are aligned before comparison.\n\n3.  **Energy Calculation**: Once the converged orbital, $u$, is obtained, the RKS total energy is calculated using the expression provided, which is the discrete analogue of the energy functional:\n    $$\n    E_{\\mathrm{RKS}}(g) = 2\\,u^{\\mathsf{T}}T_{1}u + g\\,\\sum_{i=1}^{M} u_{i}^{4}\n    $$\n\n### 4. Relative Error\n\nFinally, for each value of the interaction strength $g$, the relative error of the RKS approximation with respect to the exact numerical solution is computed as:\n$$\n\\mathrm{rel}(g) = \\frac{E_{\\mathrm{RKS}}(g) - E_{\\mathrm{exact}}(g)}{E_{\\mathrm{exact}}(g)}\n$$\nFor $g=0$, the RKS/Hartree method is exact, yielding a theoretical error of $0$. For $g>0$, due to the variational nature of the Hartree approximation, we expect $E_{\\mathrm{RKS}}(g) \\ge E_{\\mathrm{exact}}(g)$, resulting in a non-negative error.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import linalg\n\ndef solve():\n    \"\"\"\n    Computes the relative error of the RKS energy versus the exact energy for two\n    interacting electrons in a 1D box.\n    \"\"\"\n    # Define problem parameters from the statement\n    M = 40\n    L = 1.0\n    g_values = [0.0, 1.0, 5.0, 20.0]\n\n    # Calculate grid spacing\n    h = L / (M + 1)\n\n    # --- Construct operators common to all calculations ---\n\n    # One-particle kinetic energy matrix T1 using central differences\n    diag_T1 = np.ones(M) / h**2\n    offdiag_T1 = np.ones(M - 1) * (-0.5 / h**2)\n    T1 = np.diag(diag_T1) + np.diag(offdiag_T1, k=1) + np.diag(offdiag_T1, k=-1)\n\n    # Two-particle kinetic energy matrix T2 using Kronecker sum\n    I_M = np.identity(M)\n    T2 = np.kron(I_M, T1) + np.kron(T1, I_M)\n\n    # --- Initial guess for RKS SCF iteration ---\n    # The ground state of the non-interacting system (lowest eigenvector of T1)\n    # is an excellent starting point for all g.\n    _, eigvecs_T1 = linalg.eigh(T1)\n    u_initial = eigvecs_T1[:, 0]\n    \n    relative_errors = []\n\n    for g in g_values:\n        # --- Part 1: Exact Ground-State Energy Calculation ---\n        \n        # The interaction V2 is a diagonal M^2 x M^2 matrix. We construct its\n        # diagonal as a 1D vector.\n        v2_diag = np.zeros(M**2)\n        # The interaction is non-zero only for x1 = x2, which corresponds to\n        # grid indices (i, i). In the flattened M^2 vector, these are indices\n        # i*M + i.\n        diag_indices = [i * M + i for i in range(M)]\n        v2_diag[diag_indices] = g / h\n        \n        # The full two-particle Hamiltonian H2 is T2 + V2.\n        H2 = T2 + np.diag(v2_diag)\n\n        # The exact ground-state energy is the lowest eigenvalue of H2.\n        # linalg.eigvalsh is efficient for real symmetric matrices.\n        E_exact = linalg.eigvalsh(H2, subset_by_index=[0, 0])[0]\n\n        # --- Part 2: RKS Ground-State Energy Calculation ---\n        \n        u = u_initial.copy()\n        \n        # Self-Consistent Field (SCF) loop to solve the non-linear eigenproblem.\n        # For g=0, this will converge in one step as the initial guess is already the solution.\n        for _ in range(100):  # Maximum of 100 iterations\n            u_old = u\n            \n            # Construct the effective Hamiltonian for the current orbital u\n            v_eff_diag = g * u**2\n            H_eff = T1 + np.diag(v_eff_diag)\n            \n            # Solve the linear eigenproblem for H_eff to get the new orbital\n            _, eigvecs_H_eff = linalg.eigh(H_eff)\n            u_new = eigvecs_H_eff[:, 0]\n            \n            # Align the sign of the new eigenvector with the old one to ensure\n            # correct convergence check.\n            if np.dot(u_new, u_old) < 0:\n                u_new = -u_new\n            \n            u = u_new\n\n            # Check for convergence\n            if linalg.norm(u - u_old) < 1e-10:\n                break\n        \n        # Calculate the RKS total energy using the converged orbital u\n        # E_rks = 2 * <u|T1|u> + g * sum(u_i^4)\n        kinetic_energy_rks = 2 * u.T @ T1 @ u\n        interaction_energy_rks = g * np.sum(u**4)\n        E_rks = kinetic_energy_rks + interaction_energy_rks\n        \n        # --- Part 3: Relative Error Calculation ---\n\n        # The ground state energy E_exact is always positive for this system,\n        # so division by zero is not a concern.\n        rel_error = (E_rks - E_exact) / E_exact\n        relative_errors.append(rel_error)\n\n    # --- Final Output Formatting ---\n    # Format each result to 6 decimal places as required.\n    formatted_results = [f\"{r:.6f}\" for r in relative_errors]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2464920"}]}