{"hands_on_practices": [{"introduction": "A key skill in molecular simulation is understanding the link between the microscopic parameters of a force field and the macroscopic properties it predicts. This exercise challenges you to 'debug' a hypothetical water model that produces an incorrect density [@problem_id:2455667]. By reasoning about the physical meaning of the Lennard-Jones parameters, $\\sigma$ and $\\epsilon$, you will develop a crucial intuition for how atomic size and attraction strength govern the behavior of a simulated liquid under constant pressure conditions.", "problem": "You run a constant Number, Pressure, Temperature (NPT) simulation of liquid water at $T=298\\,\\mathrm{K}$ and $p=1\\,\\mathrm{bar}$ using the Transferable Intermolecular Potential with $3$ Points (TIP3P) model. The rigid geometry and partial charges are exactly those of standard TIP3P, and hydrogen atoms carry no Lennard-Jones (LJ) terms. However, due to a suspected input error, the simulated equilibrium mass density is $1.20\\,\\mathrm{g\\,cm^{-3}}$ at these ambient conditions. You are allowed to alter only one of the two Lennard-Jones non-bonded parameters on the oxygen site, either the size parameter $\\sigma_{\\mathrm{O}}$ or the well-depth parameter $\\epsilon_{\\mathrm{O}}$, while keeping everything else unchanged. To bring the liquid density toward its ambient value near $1.00\\,\\mathrm{g\\,cm^{-3}}$ at $T=298\\,\\mathrm{K}$ and $p=1\\,\\mathrm{bar}$, which parameter would you modify first, in which direction, and why?\n\nA. Increase $\\sigma_{\\mathrm{O}}$ first; the position of the preferred intermolecular separation set by the Lennard-Jones potential scales with $\\sigma_{\\mathrm{O}}$, so increasing $\\sigma_{\\mathrm{O}}$ increases excluded volume and lowers the equilibrium density at fixed $T$ and $p$.\n\nB. Decrease $\\epsilon_{\\mathrm{O}}$ first; decreasing $\\epsilon_{\\mathrm{O}}$ shifts the preferred separation to larger distance, expanding the liquid and lowering the density at fixed $T$ and $p$.\n\nC. Increase $\\epsilon_{\\mathrm{O}}$ first; a deeper attractive well will reduce the internal pressure at a given density, so at fixed external $p$ the system expands and the density decreases.\n\nD. Decrease $\\sigma_{\\mathrm{O}}$ first; a smaller core reduces overpacking by weakening repulsion, which lowers the equilibrium density at fixed $T$ and $p$.\n\nE. Either parameter is equally appropriate as a first change; both $\\sigma_{\\mathrm{O}}$ and $\\epsilon_{\\mathrm{O}}$ control the location of the preferred separation and therefore influence density in the same way at fixed $T$ and $p$.", "solution": "The problem statement is subjected to validation.\n\n### Step 1: Extract Givens\n- Simulation ensemble: Constant Number, Pressure, Temperature (NPT).\n- System: Liquid water.\n- Thermodynamic state: Temperature $T=298\\,\\mathrm{K}$, pressure $p=1\\,\\mathrm{bar}$.\n- Force field: Transferable Intermolecular Potential with $3$ Points (TIP3P) model.\n- Force field details: Standard rigid geometry and partial charges; hydrogen atoms have no Lennard-Jones (LJ) terms.\n- Observation: The simulated equilibrium mass density is $\\rho_{sim} = 1.20\\,\\mathrm{g\\,cm^{-3}}$.\n- Objective: To modify the simulation parameters to bring the density closer to the experimental ambient value of approximately $\\rho_{exp} \\approx 1.00\\,\\mathrm{g\\,cm^{-3}}$.\n- Constraint: Only one of the two Lennard-Jones parameters on the oxygen site, $\\sigma_{\\mathrm{O}}$ or $\\epsilon_{\\mathrm{O}}$, may be altered.\n\n### Step 2: Validate Using Extracted Givens\n- **Scientifically Grounded**: The problem is rooted in the principles of classical molecular dynamics and statistical mechanics. It concerns the relationship between microscopic interaction potentials (Lennard-Jones) and macroscopic thermodynamic properties (density). The TIP3P model and the NPT ensemble are standard tools in computational chemistry. The scenario of a parameterized model yielding an incorrect density is a common and realistic problem in force field development. The problem is scientifically sound.\n- **Well-Posed**: The problem is clearly defined. The initial condition (overly dense liquid), the goal (reduce density), and the constraints (modify only $\\sigma_{\\mathrm{O}}$ or $\\epsilon_{\\mathrm{O}}$) are explicitly stated. A unique physical reasoning can be applied to determine the correct course of action. The problem is well-posed.\n- **Objective**: The language used is precise and quantitative, free of ambiguity or subjective claims.\n\n### Step 3: Verdict and Action\nThe problem statement is valid. It is scientifically sound, well-posed, and objective. A solution will be derived.\n\nThe core of the problem is to understand how the Lennard-Jones (LJ) parameters influence the equilibrium density of a liquid in a constant pressure and temperature (NPT) simulation. The simulated density, $\\rho_{sim} = 1.20\\,\\mathrm{g\\,cm^{-3}}$, is significantly higher than the target experimental density, $\\rho_{exp} \\approx 1.00\\,\\mathrm{g\\,cm^{-3}}$. This implies that the simulated water molecules are packed too closely together. To correct this, the system's volume must be increased.\n\nThe intermolecular interactions in the TIP3P model consist of electrostatic interactions between partial charges and a Lennard-Jones interaction solely between the oxygen atoms. The Lennard-Jones potential, $U_{LJ}$, between two oxygen atoms separated by a distance $r$ is given by:\n$$ U_{LJ}(r) = 4\\epsilon_{\\mathrm{O}} \\left[ \\left( \\frac{\\sigma_{\\mathrm{O}}}{r} \\right)^{12} - \\left( \\frac{\\sigma_{\\mathrm{O}}}{r} \\right)^{6} \\right] $$\nHere, $\\sigma_{\\mathrm{O}}$ is the finite distance at which the inter-particle potential is zero, often considered the effective diameter or size parameter. $\\epsilon_{\\mathrm{O}}$ is the depth of the potential well, representing the strength of the pairwise attractive interaction. The minimum of this potential, which corresponds to the most energetically favorable separation for an isolated pair, occurs at $r_{min} = 2^{1/6}\\sigma_{\\mathrm{O}}$.\n\nOur goal is to decrease the density, which requires an increase in the average equilibrium volume of the system. In an NPT simulation, the volume fluctuates to maintain a balance where the internal pressure equals the external pressure $p$. We must modify the potential to favor larger intermolecular distances. Let us analyze the effect of changing each parameter.\n\n1.  **Modifying the size parameter, $\\sigma_{\\mathrm{O}}$**:\n    - The parameter $\\sigma_{\\mathrm{O}}$ directly controls the effective size of the oxygen atom. The repulsive part of the potential, the $(\\sigma_{\\mathrm{O}}/r)^{12}$ term, is highly sensitive to $\\sigma_{\\mathrm{O}}$.\n    - If we **increase** $\\sigma_{\\mathrm{O}}$, the repulsive wall of the potential is pushed to larger distances. This increases the effective excluded volume of each molecule. At any given intermolecular separation, the repulsive forces become stronger. To maintain the constant external pressure $p$, the system must expand, leading to an increase in the average volume and thus a **decrease** in density.\n    - Conversely, decreasing $\\sigma_{\\mathrm{O}}$ would shrink the effective molecular size, allowing for tighter packing and leading to an increase in density.\n    - Therefore, to decrease the density, we must **increase** $\\sigma_{\\mathrm{O}}$.\n\n2.  **Modifying the well-depth parameter, $\\epsilon_{\\mathrm{O}}$**:\n    - The parameter $\\epsilon_{\\mathrm{O}}$ controls the strength of the attractive interactions between molecules.\n    - If we **increase** $\\epsilon_{\\mathrm{O}}$, the attractive forces between molecules become stronger. This enhanced \"stickiness\" will pull the molecules closer together. To balance the constant external pressure $p$, the system will contract to a smaller average volume, leading to an **increase** in density.\n    - If we **decrease** $\\epsilon_{\\mathrm{O}}$, the attractive forces are weakened. The molecules are less cohesive, and the thermal motion ($k_B T$) becomes more effective at pushing them apart. The system must expand to a larger average volume to satisfy the pressure constraint, resulting in a **decrease** in density.\n    - Therefore, to decrease the density, we must **decrease** $\\epsilon_{\\mathrm{O}}$.\n\nBased on this analysis, there are two possible actions to lower the density: increase $\\sigma_{\\mathrm{O}}$ or decrease $\\epsilon_{\\mathrm{O}}$. We now evaluate the provided options.\n\n**A. Increase $\\sigma_{\\mathrm{O}}$ first; the position of the preferred intermolecular separation set by the Lennard-Jones potential scales with $\\sigma_{\\mathrm{O}}$, so increasing $\\sigma_{\\mathrm{O}}$ increases excluded volume and lowers the equilibrium density at fixed $T$ and $p$.**\nThe proposed action is to increase $\\sigma_{\\mathrm{O}}$. As derived, this is a correct action to decrease density. The reasoning provided is also correct. The preferred separation $r_{min}$ does scale with $\\sigma_{\\mathrm{O}}$. Increasing $\\sigma_{\\mathrm{O}}$ increases the effective excluded volume due to the powerful short-range repulsion, forcing the system to expand at constant pressure. This statement is physically and mathematically sound. **Correct**.\n\n**B. Decrease $\\epsilon_{\\mathrm{O}}$ first; decreasing $\\epsilon_{\\mathrm{O}}$ shifts the preferred separation to larger distance, expanding the liquid and lowering the density at fixed $T$ and $p$.**\nThe proposed action, decrease $\\epsilon_{\\mathrm{O}}$, is a valid way to decrease density. However, the reasoning is flawed. The position of the preferred separation, $r_{min} = 2^{1/6}\\sigma_{\\mathrm{O}}$, is determined by $\\sigma_{\\mathrm{O}}$ and is independent of $\\epsilon_{\\mathrm{O}}$. Changing $\\epsilon_{\\mathrm{O}}$ only changes the depth of the potential well, not its location. Because the justification is fundamentally incorrect, the entire option is invalid. **Incorrect**.\n\n**C. Increase $\\epsilon_{\\mathrm{O}}$ first; a deeper attractive well will reduce the internal pressure at a given density, so at fixed external $p$ the system expands and the density decreases.**\nThe proposed action is to increase $\\epsilon_{\\mathrm{O}}$. This is the opposite of the required change; it would increase the density. The reasoning is also flawed in its conclusion. While it is true that at a fixed volume, increasing $\\epsilon_{\\mathrm{O}}$ (a deeper well) leads to a more negative contribution to the pressure virial and thus lowers the internal pressure, the system's response in an NPT ensemble is to compress until the internal pressure again matches the external pressure. A lower internal pressure at constant volume means the system must contract to re-establish pressure balance, thereby increasing density. The option's conclusion is the opposite of the correct physical response. **Incorrect**.\n\n**D. Decrease $\\sigma_{\\mathrm{O}}$ first; a smaller core reduces overpacking by weakening repulsion, which lowers the equilibrium density at fixed $T$ and $p$.**\nThe proposed action is to decrease $\\sigma_{\\mathrm{O}}$. This is incorrect; it would increase the density by allowing molecules to pack more closely. The reasoning is also nonsensical. A smaller core does not \"reduce overpacking\"; it facilitates it. The conclusion that this lowers the equilibrium density is false. **Incorrect**.\n\n**E. Either parameter is equally appropriate as a first change; both $\\sigma_{\\mathrm{O}}$ and $\\epsilon_{\\mathrm{O}}$ control the location of the preferred separation and therefore influence density in the same way at fixed $T$ and $p$.**\nThis statement contains multiple falsehoods. First, as explained for option B, only $\\sigma_{\\mathrm{O}}$ controls the location of the potential minimum, not $\\epsilon_{\\mathrm{O}}$. Second, the parameters do not influence density \"in the same way\"; to decrease density, one must increase $\\sigma_{\\mathrm{O}}$ but decrease $\\epsilon_{\\mathrm{O}}$. Therefore, the parameters are not \"equally appropriate as a first change\" in the sense that they require opposite adjustments. **Incorrect**.\n\nIn conclusion, Option A is the only choice that proposes the correct action for the correct physical reason. Increasing the effective atomic size ($\\sigma_{\\mathrm{O}}$) is a direct way to increase the system's volume and thus decrease its density at constant pressure.", "answer": "$$\\boxed{A}$$", "id": "2455667"}, {"introduction": "Running a successful molecular dynamics simulation is not just about setup; it's also about active monitoring to ensure the system behaves as expected. This practice focuses on a critical diagnostic skill: identifying an unintended phase transition, such as accidental freezing, by interpreting the time evolution of the potential energy [@problem_id:2455681]. Learning to recognize the characteristic signatures of different physical states in simple thermodynamic observables is essential for validating your simulation results.", "problem": "You are running Molecular Dynamics (MD) of liquid water using an explicit solvent model in the constant Number, Volume, Temperature (NVT) ensemble at temperature $T$. The system consists of $N$ rigid water molecules confined to a periodic cubic box at fixed density, and is thermostatted to maintain $T$. You are not allowed to inspect coordinates or velocities; the only observable you can monitor in real time is the total potential energy $U_{\\mathrm{pot}}(t)$ of the system. In the canonical ensemble, configurations with potential energy $U$ are sampled with probability proportional to $\\exp(-\\beta U)$, where $\\beta = 1/(k_{\\mathrm{B}} T)$ and $k_{\\mathrm{B}}$ is the Boltzmann constant. You suspect that, due to an integration or thermostat misparameterization, the solvent has accidentally frozen into a solidlike state during the run. Which of the following observed time traces of $U_{\\mathrm{pot}}(t)$ would be the most reliable indicator of such accidental freezing, based solely on $U_{\\mathrm{pot}}(t)$?\n\nA. After initial equilibration, $U_{\\mathrm{pot}}(t)$ undergoes a relatively abrupt decrease to a distinctly lower long-lived plateau and, simultaneously, its fluctuations narrow markedly into small nearly harmonic oscillations with a substantially reduced variance that persists over many vibrational periods, without recovery to the prior mean.\n\nB. After initial equilibration, $U_{\\mathrm{pot}}(t)$ fluctuates around a stationary mean with approximately constant variance and no systematic drift over long times, showing occasional larger excursions but no lasting change in mean or variance.\n\nC. $U_{\\mathrm{pot}}(t)$ shows a steady increase toward zero at a roughly constant rate, reflecting continuous heating by the thermostat, and this monotonic rise signals the onset of freezing.\n\nD. $U_{\\mathrm{pot}}(t)$ becomes a nearly perfect straight line with zero slope (exactly constant in time), which by itself is sufficient to conclude that the solvent has frozen.", "solution": "The problem requires an identification of the most reliable signature of accidental freezing in a Molecular Dynamics (MD) simulation of liquid water, based solely on the time series of the total potential energy, $U_{\\mathrm{pot}}(t)$. The simulation is conducted in the canonical (NVT) ensemble.\n\nTo solve this, we must analyze the thermodynamic and statistical mechanical characteristics of the liquid-to-solid phase transition (freezing) and how they manifest in the potential energy.\n\n1.  **Phase and Potential Energy**: A phase of matter corresponds to a region in the high-dimensional configuration space of the system. The liquid phase is characterized by disorder and high molecular mobility, allowing the system to explore a wide range of configurations. This results in a relatively high average potential energy. The solid (crystalline) phase is characterized by a high degree of order, with molecules localized in a lattice structure. Motion is restricted to small-amplitude vibrations about these equilibrium positions. This structured arrangement corresponds to a deep minimum on the potential energy surface. Consequently, the solid phase has a significantly lower average potential energy than the liquid phase at the same temperature.\n\n2.  **Phase Transition Energetics**: Freezing is a first-order phase transition. It is an exothermic process, meaning that latent heat is released as the system transitions from the higher-energy liquid state to the lower-energy solid state. In an NVT simulation, the thermostat's role is to maintain a constant average kinetic energy (and thus constant temperature $T$). As the system freezes, the released potential energy is converted into kinetic energy, which the thermostat must then remove from the system to maintain the target temperature $T$. This removal of energy from the system as a whole while transitioning to a more stable configuration results in a net decrease in the total potential energy, $U_{\\mathrm{pot}}$. This decrease will appear as a drop in the time trace of $U_{\\mathrm{pot}}(t)$ to a new, lower-lying plateau.\n\n3.  **Fluctuations in Potential Energy**: The magnitude of fluctuations in an observable is a critical indicator of the system's state.\n    *   In the **liquid state**, molecules are free to translate and rotate, leading to continuous rearrangement of the local environment for each molecule. This large-scale structural exploration results in significant fluctuations in the total potential energy.\n    *   In the **solid state**, molecules are trapped in deep potential wells corresponding to their lattice sites. Their motion is constrained to small oscillations (phonons). The system is confined to a much smaller volume of the configuration space. This restricted dynamics leads to a drastic reduction in the magnitude of fluctuations of the potential energy. The variance of the potential energy, $\\sigma^2(U_{\\mathrm{pot}}) = \\langle (U_{\\mathrm{pot}} - \\langle U_{\\mathrm{pot}} \\rangle)^2 \\rangle$, will be substantially smaller in the solid phase compared to the liquid phase. The oscillations around the minimum of the deep potential well are often well-approximated as harmonic, leading to \"nearly harmonic oscillations\" in the potential energy signal.\n\nBased on these principles, the signature of accidental freezing in the $U_{\\mathrm{pot}}(t)$ trace must include two key features:\n1.  A distinct, and often abrupt, drop in the average value of $U_{\\mathrm{pot}}(t)$ to a new, stable, lower baseline.\n2.  A simultaneous and significant reduction in the amplitude (variance) of the fluctuations of $U_{\\mathrm{pot}}(t)$ around this new baseline.\n\nNow, we evaluate each option based on this understanding.\n\n**A. After initial equilibration, $U_{\\mathrm{pot}}(t)$ undergoes a relatively abrupt decrease to a distinctly lower long-lived plateau and, simultaneously, its fluctuations narrow markedly into small nearly harmonic oscillations with a substantially reduced variance that persists over many vibrational periods, without recovery to the prior mean.**\n\nThis statement accurately and comprehensively describes the expected signature.\n*   `\"abrupt decrease to a distinctly lower long-lived plateau\"`: This corresponds to the system settling into the lower-energy solid state, releasing latent heat.\n*   `\"fluctuations narrow markedly into small nearly harmonic oscillations with a substantially reduced variance\"`: This correctly captures the change in dynamics from diffusive liquid motion to localized vibrations in the solid lattice.\n*   `\"persists ... without recovery\"`: This indicates the system is now stable (or metastable) in the new frozen state.\n\nThis option combines both the change in the mean and the change in the fluctuations, providing a complete and reliable indicator.\nVerdict: **Correct**.\n\n**B. After initial equilibration, $U_{\\mathrm{pot}}(t)$ fluctuates around a stationary mean with approximately constant variance and no systematic drift over long times, showing occasional larger excursions but no lasting change in mean or variance.**\n\nThis statement describes a system that is properly equilibrated within a single, stable phase (the liquid phase). The fluctuations around a stationary mean are the hallmark of a system at equilibrium. There is no indication of a phase transition. This is the expected behavior of a successful simulation that *does not* undergo a phase change.\nVerdict: **Incorrect**.\n\n**C. $U_{\\mathrm{pot}}(t)$ shows a steady increase toward zero at a roughly constant rate, reflecting continuous heating by the thermostat, and this monotonic rise signals the onset of freezing.**\n\nThis statement is fundamentally incorrect. Freezing is an exothermic process associated with a *decrease* in potential energy as stronger, more ordered intermolecular bonds are formed. A steady increase in potential energy would suggest the system is moving to a higher-energy, less stable state, such as boiling or simply heating up due to a malfunctioning thermostat that is continuously injecting energy. For molecular systems, potential energies are typically negative (with the zero reference at infinite separation), so an increase \"toward zero\" implies a weakening of intermolecular interactions, which is the opposite of freezing.\nVerdict: **Incorrect**.\n\n**D. $U_{\\mathrm{pot}}(t)$ becomes a nearly perfect straight line with zero slope (exactly constant in time), which by itself is sufficient to conclude that the solvent has frozen.**\n\nThis statement is physically incorrect for a simulation at a finite temperature $T > 0$. In the canonical ensemble, the system's configuration is constantly changing, driven by the thermal motion of the atoms (non-zero kinetic energy). As atomic positions change, the potential energy must also change. Therefore, $U_{\\mathrm{pot}}(t)$ must fluctuate. A completely constant $U_{\\mathrm{pot}}(t)$ implies that all particle positions are fixed, which would mean the kinetic energy is zero (or the simulation has crashed). This is inconsistent with an NVT simulation at $T > 0$. While a solid state has much smaller fluctuations than a liquid, they are not zero. This option describes an unphysical artifact of a broken simulation, not a physical state of matter at finite temperature. Furthermore, it omits the crucial drop in the average potential energy, which is the primary thermodynamic signal of the first-order transition.\nVerdict: **Incorrect**.\n\nIn summary, Option A provides the only physically sound and complete description of the signature of freezing that can be observed in the potential energy time series.", "answer": "$$\\boxed{A}$$", "id": "2455681"}, {"introduction": "In computational chemistry, choosing a model is often a trade-off between physical accuracy and computational cost. This exercise provides a hands-on approach to quantifying that trade-off by building a performance model to compare a simple, non-polarizable water model with a more accurate but expensive polarizable one [@problem_id:2455716]. By estimating the computational cost from its algorithmic components, you will gain a practical understanding of why model selection is a critical decision that depends on both the scientific question and the available resources.", "problem": "You are asked to build a simple, first-principles performance model to quantitatively compare the computational cost, expressed in CPU hours per nanosecond, of two explicit solvent Molecular Dynamics (MD) simulations of the same solvated protein system: one using the Transferable Intermolecular Potential with 3 Points (TIP3P) water model and one using the Atomic Multipole Optimized Energetics for Biomolecular Applications (AMOEBA) polarizable water model. The comparison must be grounded in classical MD, which integrates Newton’s equations of motion, and well-tested algorithmic facts about the main work components: bonded interactions, real-space nonbonded interactions within a cutoff, long-range electrostatics via the Particle Mesh Ewald (PME) method, holonomic constraints (for example, SHAKE), and, for AMOEBA, iterative self-consistent polarization. You will use the prescribed parameter values and constants below to compute the total floating-point operation count per time step, scale to the number of steps per nanosecond, and finally convert to CPU hours assuming a single CPU core with a specified sustained floating-point throughput.\n\nFundamental bases to use:\n- Classical MD advances positions by integrating Newton’s equations with a finite time step $\\,\\Delta t\\,$, so the number of steps in a time interval $\\,T\\,$ is $\\,T/\\Delta t\\,$.\n- Real-space short-range nonbonded work scales with the number of interacting pairs within a cutoff $\\,r_c\\,$. Under a uniform atom number density $\\,\\rho_{\\text{atom}}\\,\\equiv\\,N/V\\,$ in a cubic box of side $\\,L\\,$ and volume $\\,V=L^3\\,$, the average number of neighbors per atom is $\\,\\frac{4}{3}\\pi r_c^3 \\rho_{\\text{atom}}\\,$, and the total pair count per step is $\\,N_{\\text{pairs}}=\\tfrac{1}{2}N\\left(\\tfrac{4}{3}\\pi r_c^3 \\rho_{\\text{atom}}\\right)\\,$.\n- The PME cost scales as $\\,\\mathcal{O}(M\\log_2 M)\\,$ with $\\,M\\,=\\,N_x N_y N_z\\,$ grid points. For a cubic system, take $\\,N_x=N_y=N_z=\\mathrm{round}(L/g)\\,$, where $\\,g\\,$ is the grid spacing, and $\\,M = N_x^3\\,$. Use the base-$2$ logarithm $\\,\\log_2(\\cdot)\\,$.\n- Holonomic constraints cost scales with the number of constrained bonds, modeled here as a fixed fraction of total atoms.\n- AMOEBA introduces an iterative self-consistent polarization procedure incurring additional pairwise field evaluations per iteration.\n\nYou must adopt the following cost model (all costs in floating-point operations per step) and constants. Every symbol and number below must be used as provided without further modification:\n- Total atoms $\\,N\\,$ in a cubic box of side $\\,L\\,$ (in Ångström), so $\\,V=L^3\\,$ and $\\,\\rho_{\\text{atom}}=N/V\\,$.\n- Real-space cutoff $\\,r_c\\,$ (in Ångström).\n- PME grid spacing $\\,g\\,$ (in Ångström), with $\\,N_x=\\mathrm{round}(L/g)\\,$ and $\\,M=N_x^3\\,$.\n- Fraction of constrained bonds $\\,f_c\\,$, number of constraint iterations per step $\\,i_{\\text{cons}}\\,$, and cost per constrained bond per iteration $\\,k_{\\text{cons}}\\,$.\n- Time steps: TIP3P uses $\\,\\Delta t_{\\mathrm{T}}\\,$ (in femtoseconds), AMOEBA uses $\\,\\Delta t_{\\mathrm{A}}\\,$ (in femtoseconds). The number of steps per nanosecond is $\\,10^6/\\Delta t\\,$ when $\\,\\Delta t\\,$ is in femtoseconds.\n- Per-component floating-point operation counts (constants):\n  - Bonded interactions per atom: TIP3P $\\,k_{\\text{bond,T}}=200\\,$, AMOEBA $\\,k_{\\text{bond,A}}=300\\,$.\n  - Real-space nonbonded per pair: TIP3P $\\,k_{\\text{nb,T}}=60\\,$, AMOEBA $\\,k_{\\text{nb,A}}=150\\,$.\n  - PME operations: TIP3P $\\,K_{\\text{PME,T}}=50\\,$, AMOEBA $\\,K_{\\text{PME,A}}=120\\,$, used as $\\,K_{\\text{PME}}\\,M\\,\\log_2 M\\,$ per step.\n  - Constraint cost per constrained bond per iteration: $\\,k_{\\text{cons}}=500\\,$.\n  - AMOEBA polarization: number of iterations per step $\\,I\\,$, with per-iteration cost $\\,k_{\\text{pol,pair}}\\,N_{\\text{pairs}} + k_{\\text{pol,upd}}\\,N\\,$ where $\\,k_{\\text{pol,pair}}=80\\,$ and $\\,k_{\\text{pol,upd}}=20\\,$.\n- Sustained floating-point throughput of one CPU core: $\\,F = 2.0\\times 10^{10}\\,$ floating-point operations per second. Convert total operations per nanosecond to CPU hours per nanosecond by dividing by $\\,F\\,$ and then by $\\,3600\\,$.\n\nDefine for TIP3P the per-step operation count\n$$\n\\mathrm{FLOPs}_{\\text{step,T}} \\;=\\; k_{\\text{bond,T}}\\,N \\;+\\; k_{\\text{nb,T}}\\,N_{\\text{pairs}} \\;+\\; K_{\\text{PME,T}}\\,M\\,\\log_2 M \\;+\\; k_{\\text{cons}}\\,(f_c\\,N)\\,i_{\\text{cons}}\\,,\n$$\nand for AMOEBA\n$$\n\\mathrm{FLOPs}_{\\text{step,A}} \\;=\\; k_{\\text{bond,A}}\\,N \\;+\\; k_{\\text{nb,A}}\\,N_{\\text{pairs}} \\;+\\; K_{\\text{PME,A}}\\,M\\,\\log_2 M \\;+\\; k_{\\text{cons}}\\,(f_c\\,N)\\,i_{\\text{cons}} \\;+\\; I\\left(k_{\\text{pol,pair}}\\,N_{\\text{pairs}}+k_{\\text{pol,upd}}\\,N\\right).\n$$\nThen compute\n$$\n\\mathrm{FLOPs/ns}_{\\mathrm{T}} \\;=\\; \\mathrm{FLOPs}_{\\text{step,T}} \\times \\frac{10^6}{\\Delta t_{\\mathrm{T}}}\\,,\n\\qquad\n\\mathrm{FLOPs/ns}_{\\mathrm{A}} \\;=\\; \\mathrm{FLOPs}_{\\text{step,A}} \\times \\frac{10^6}{\\Delta t_{\\mathrm{A}}}\\,,\n$$\nand\n$$\n\\mathrm{CPU\\,hours/ns} \\;=\\; \\frac{\\mathrm{FLOPs/ns}}{F\\times 3600}\\,.\n$$\n\nAngle units are not used. All distances are in Ångström, time steps in femtoseconds, and the final answers must be expressed in CPU hours per nanosecond, rounded to three decimal places. The program must compute, for each test case, the triple $[\\mathrm{TIP3P\\_hours/ns},\\,\\mathrm{AMOEBA\\_hours/ns},\\,\\mathrm{AMOEBA}/\\mathrm{TIP3P}]$.\n\nTest suite. For each case, use the tuple $(N, L, r_c, g, \\Delta t_{\\mathrm{T}}, \\Delta t_{\\mathrm{A}}, I, f_c, i_{\\text{cons}})$:\n- Case $\\,1\\,$ (baseline large solvated protein):\n  - $N=80000$, $L=90$, $r_c=9$, $g=1.0$, $\\Delta t_{\\mathrm{T}}=2.0$, $\\Delta t_{\\mathrm{A}}=1.0$, $I=6$, $f_c=0.35$, $i_{\\text{cons}}=2$.\n- Case $\\,2\\,$ (smaller system):\n  - $N=12000$, $L=60$, $r_c=10$, $g=1.1$, $\\Delta t_{\\mathrm{T}}=2.0$, $\\Delta t_{\\mathrm{A}}=1.0$, $I=5$, $f_c=0.35$, $i_{\\text{cons}}=2$.\n- Case $\\,3\\,$ (larger cutoff):\n  - $N=80000$, $L=90$, $r_c=11$, $g=1.0$, $\\Delta t_{\\mathrm{T}}=2.0$, $\\Delta t_{\\mathrm{A}}=1.0$, $I=6$, $f_c=0.35$, $i_{\\text{cons}}=2$.\n- Case $\\,4\\,$ (coarser PME grid and stricter polarization):\n  - $N=80000$, $L=90$, $r_c=9$, $g=1.6$, $\\Delta t_{\\mathrm{T}}=2.0$, $\\Delta t_{\\mathrm{A}}=0.5$, $I=7$, $f_c=0.35$, $i_{\\text{cons}}=2$.\n\nAdditional modeling details and constraints:\n- Use $\\,\\rho_{\\text{atom}}=N/L^3\\,$ and the uniform-density neighbor estimate. If the computed neighbor count per atom exceeds $\\,N-1\\,$, cap it at $\\,N-1\\,$. Then set $\\,N_{\\text{pairs}}=\\tfrac{1}{2}N \\times \\text{neighbors per atom}\\,$.\n- Compute $\\,N_x=\\max\\{8,\\,\\mathrm{round}(L/g)\\}\\,$ to avoid trivial grids, then $\\,M=N_x^3\\,$.\n- Use base-$2$ logarithm $\\,\\log_2(\\cdot)\\,$ for the PME term.\n- Assume one CPU core of throughput $\\,F=2.0\\times 10^{10}\\,$ floating-point operations per second for all cases.\n\nFinal output format:\n- Your program should produce a single line of output containing a list of four sublists in the order of the test cases. Each sublist must be in the form $[\\text{TIP3P\\_hours/ns},\\text{AMOEBA\\_hours/ns},\\text{AMOEBA}/\\text{TIP3P}]$, where each entry is a float rounded to three decimal places. For example, a valid overall output format is:\n  - $[[x_1,y_1,z_1],[x_2,y_2,z_2],[x_3,y_3,z_3],[x_4,y_4,z_4]]$.", "solution": "The problem statement is a well-posed and scientifically grounded exercise in the performance modeling of molecular dynamics (MD) simulations. It provides a complete set of parameters, constants, and a coherent algorithmic cost model to compare two common explicit solvent models: the rigid, non-polarizable TIP3P model and the polarizable AMOEBA model. The assumptions regarding the scaling of computational work for different components of the force field calculation—bonded interactions, real-space nonbonded interactions, Particle Mesh Ewald (PME) for long-range electrostatics, and iterative procedures for constraints and polarization—are standard and reflect established principles in computational chemistry. The problem is objective, free of ambiguity, and contains all necessary information for a unique solution. Therefore, the problem is deemed valid and a full solution will be provided.\n\nThe objective is to compute the total computational cost, in units of CPU hours per nanosecond of simulated time, for two different force fields. This cost is derived from the total number of floating-point operations (FLOPs) required. The total FLOPs per nanosecond is the product of the FLOPs per integration time step and the number of time steps per nanosecond.\n\nLet us dissect the total FLOPs per time step, $\\mathrm{FLOPs}_{\\text{step}}$, for each model. This cost is a sum of contributions from various components of the MD algorithm.\n\n1.  **System-Dependent Parameters**: For any given system defined by the total number of atoms $N$ in a cubic box of side length $L$, and a real-space cutoff $r_c$, we first compute shared geometric and structural quantities.\n    - The uniform atom number density is $\\rho_{\\text{atom}} = N/L^3$.\n    - The average number of interacting neighbors for any given atom within the cutoff sphere is approximated as $N_{\\text{neighbors/atom}} = \\frac{4}{3}\\pi r_c^3 \\rho_{\\text{atom}}$. This value is capped at a maximum of $N-1$, the total number of other atoms.\n    - The total number of interacting pairs, accounting for Newton's third law (action-reaction pairs are not double-counted), is $N_{\\text{pairs}} = \\frac{1}{2} N \\times N_{\\text{neighbors/atom}}$.\n    - For the PME calculation, the grid dimension in one direction is $N_x = \\max\\{8, \\mathrm{round}(L/g)\\}$, where $g$ is the grid spacing. The minimum value of $8$ prevents trivially small grids. The total number of grid points is then $M = N_x^3$.\n\n2.  **Cost for TIP3P Model**: The total per-step cost, $\\mathrm{FLOPs}_{\\text{step,T}}$, is the sum of the following terms:\n    - **Bonded Interactions**: These include bonds, angles, and dihedral terms. The cost is local and scales linearly with the number of atoms, given by $k_{\\text{bond,T}}\\,N$.\n    - **Real-Space Nonbonded Interactions**: This includes Lennard-Jones and short-range Coulomb interactions between pairs of atoms within the cutoff $r_c$. The cost is proportional to the number of pairs, $k_{\\text{nb,T}}\\,N_{\\text{pairs}}$.\n    - **PME Reciprocal-Space Interactions**: The cost of the reciprocal-space part of the Ewald sum, calculated using Fast Fourier Transforms (FFTs) on the PME grid, scales as $\\mathcal{O}(M \\log M)$. The cost is modeled as $K_{\\text{PME,T}}\\,M\\,\\log_2 M$.\n    - **Holonomic Constraints**: The cost of iterative algorithms like SHAKE to constrain bond lengths (e.g., in water molecules) is proportional to the number of constrained entities ($f_c N$), the number of iterations ($i_{\\text{cons}}$), and the cost per entity per iteration ($k_{\\text{cons}}$). The total is $k_{\\text{cons}}\\,(f_c\\,N)\\,i_{\\text{cons}}$.\n    The complete expression is:\n    $$\n    \\mathrm{FLOPs}_{\\text{step,T}} \\;=\\; k_{\\text{bond,T}}\\,N \\;+\\; k_{\\text{nb,T}}\\,N_{\\text{pairs}} \\;+\\; K_{\\text{PME,T}}\\,M\\,\\log_2 M \\;+\\; k_{\\text{cons}}\\,(f_c\\,N)\\,i_{\\text{cons}}\n    $$\n    \n3.  **Cost for AMOEBA Model**: The AMOEBA model is more complex, leading to higher computational costs in most components, and adds an entirely new and expensive term for induced polarization.\n    - **Bonded, Nonbonded, and PME**: These terms are analogous to those for TIP3P but with larger cost coefficients ($k_{\\text{bond,A}}$, $k_{\\text{nb,A}}$, $K_{\\text{PME,A}}$) reflecting the more complex functional forms (e.g., multipole interactions versus point charges). The constraint cost remains the same.\n    - **Self-Consistent Polarization**: This is a major additional cost. At each time step, induced dipoles must be calculated iteratively. Each of the $I$ iterations involves calculating the electric field at each atomic site from all other sites, which is a pairwise operation, and updating the dipoles. This cost is modeled as $I\\left(k_{\\text{pol,pair}}\\,N_{\\text{pairs}}+k_{\\text{pol,upd}}\\,N\\right)$.\n    The complete expression is:\n    $$\n    \\mathrm{FLOPs}_{\\text{step,A}} \\;=\\; k_{\\text{bond,A}}\\,N \\;+\\; k_{\\text{nb,A}}\\,N_{\\text{pairs}} \\;+\\; K_{\\text{PME,A}}\\,M\\,\\log_2 M \\;+\\; k_{\\text{cons}}\\,(f_c\\,N)\\,i_{\\text{cons}} \\;+\\; I\\left(k_{\\text{pol,pair}}\\,N_{\\text{pairs}}+k_{\\text{pol,upd}}\\,N\\right)\n    $$\n    \n4.  **Final Cost Conversion**: To obtain the final cost in CPU hours per nanosecond, we must account for the time step and processor speed. The number of steps required to simulate $1\\,\\mathrm{ns}$ ($10^6\\,\\mathrm{fs}$) is $10^6 / \\Delta t$, where $\\Delta t$ is the time step in femtoseconds. Note that $\\Delta t_{\\mathrm{T}}$ for TIP3P is typically larger than $\\Delta t_{\\mathrm{A}}$ for AMOEBA, a crucial factor in the overall cost comparison. The total FLOPs per nanosecond is then:\n    $$\n    \\mathrm{FLOPs/ns} \\;=\\; \\mathrm{FLOPs}_{\\text{step}} \\times \\frac{10^6}{\\Delta t}\n    $$\n    This value is then converted to CPU hours using the given single-core throughput $F = 2.0 \\times 10^{10}\\,\\mathrm{FLOPs/second}$:\n    $$\n    \\mathrm{CPU\\,hours/ns} \\;=\\; \\frac{\\mathrm{FLOPs/ns}}{F\\times 3600\\,\\mathrm{s/hr}}\n    $$\n    We will now apply this full procedure to each of the four test cases provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates and compares the computational cost of TIP3P and AMOEBA\n    MD simulations based on a first-principles performance model.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Format: (N, L, r_c, g, dt_T, dt_A, I, f_c, i_cons)\n    test_cases = [\n        (80000, 90, 9, 1.0, 2.0, 1.0, 6, 0.35, 2),   # Case 1\n        (12000, 60, 10, 1.1, 2.0, 1.0, 5, 0.35, 2),  # Case 2\n        (80000, 90, 11, 1.0, 2.0, 1.0, 6, 0.35, 2),  # Case 3\n        (80000, 90, 9, 1.6, 2.0, 0.5, 7, 0.35, 2),   # Case 4\n    ]\n\n    # Per-component floating-point operation counts (constants)\n    k_bond_T = 200.0\n    k_bond_A = 300.0\n    k_nb_T = 60.0\n    k_nb_A = 150.0\n    K_PME_T = 50.0\n    K_PME_A = 120.0\n    k_cons = 500.0\n    k_pol_pair = 80.0\n    k_pol_upd = 20.0\n    \n    # Sustained floating-point throughput of one CPU core (FLOPs/sec)\n    F = 2.0e10\n    \n    results = []\n    \n    for case in test_cases:\n        N, L, r_c, g, dt_T, dt_A, I, f_c, i_cons = case\n        \n        # --- Step 1: Calculate System-Dependent Intermediate Values ---\n        rho_atom = N / (L**3)\n        \n        neighbors_per_atom = (4.0 / 3.0) * np.pi * (r_c**3) * rho_atom\n        # Cap the average number of neighbors at N-1\n        neighbors_per_atom = min(neighbors_per_atom, N - 1)\n        \n        N_pairs = 0.5 * N * neighbors_per_atom\n        \n        Nx = max(8, int(np.round(L / g)))\n        M = float(Nx**3)\n        \n        # --- Step 2: Calculate Per-Step FLOPs for TIP3P ---\n        cost_bond_T = k_bond_T * N\n        cost_nb_T = k_nb_T * N_pairs\n        cost_PME_T = K_PME_T * M * np.log2(M) if M > 1 else 0\n        cost_cons = k_cons * (f_c * N) * i_cons\n        \n        flops_step_T = cost_bond_T + cost_nb_T + cost_PME_T + cost_cons\n        \n        # --- Step 3: Calculate Per-Step FLOPs for AMOEBA ---\n        cost_bond_A = k_bond_A * N\n        cost_nb_A = k_nb_A * N_pairs\n        cost_PME_A = K_PME_A * M * np.log2(M) if M > 1 else 0\n        \n        # Polarization cost\n        cost_pol = I * (k_pol_pair * N_pairs + k_pol_upd * N)\n        \n        flops_step_A = cost_bond_A + cost_nb_A + cost_PME_A + cost_cons + cost_pol\n        \n        # --- Step 4: Calculate Total FLOPs per Nanosecond ---\n        steps_per_ns_T = 1.0e6 / dt_T\n        steps_per_ns_A = 1.0e6 / dt_A\n        \n        flops_ns_T = flops_step_T * steps_per_ns_T\n        flops_ns_A = flops_step_A * steps_per_ns_A\n        \n        # --- Step 5: Convert to CPU Hours per Nanosecond ---\n        seconds_per_hour = 3600.0\n        cpu_hours_ns_T = flops_ns_T / (F * seconds_per_hour)\n        cpu_hours_ns_A = flops_ns_A / (F * seconds_per_hour)\n        \n        # --- Step 6: Calculate the Ratio ---\n        ratio = cpu_hours_ns_A / cpu_hours_ns_T if cpu_hours_ns_T > 0 else 0\n        \n        # --- Step 7: Format and store results ---\n        results.append([\n            round(cpu_hours_ns_T, 3),\n            round(cpu_hours_ns_A, 3),\n            round(ratio, 3),\n        ])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2455716"}]}