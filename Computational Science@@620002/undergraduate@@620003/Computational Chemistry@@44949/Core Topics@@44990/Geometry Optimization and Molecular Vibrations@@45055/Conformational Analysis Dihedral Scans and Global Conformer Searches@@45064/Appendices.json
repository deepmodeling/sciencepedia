{"hands_on_practices": [{"introduction": "Rotation around chemical bonds is not free; it is governed by a potential energy landscape. This first exercise introduces a fundamental tool for modeling this landscape: the Fourier series. By building a torsional potential from simple cosine functions, you will gain a hands-on understanding of how the periodicity and magnitude of interactions, such as steric hindrance or hyperconjugation, contribute to the overall rotational barrier of a molecule [@problem_id:2453297].", "problem": "You are asked to compare the rotational barriers about the central bonds in two small molecules within a unified and purely mathematical torsional model. For each molecule, the torsional potential energy about the specified dihedral angle $\\phi$ (in degrees) is represented by the truncated Fourier series\n$$\nE(\\phi) \\;=\\; \\sum_{k=1}^{K} V_{n_k} \\,\\bigl(1 - \\cos(n_k \\,\\phi)\\bigr),\n$$\nwhere $n_k$ are positive integers and $V_{n_k}$ are nonnegative real coefficients in $\\mathrm{kJ\\,mol^{-1}}$. The rotational barrier $\\Delta E$ for a given molecule is defined as\n$$\n\\Delta E \\;=\\; \\max_{\\phi \\in [0^\\circ,\\,360^\\circ)} E(\\phi) \\;-\\; \\min_{\\phi \\in [0^\\circ,\\,360^\\circ)} E(\\phi),\n$$\nand must be expressed in $\\mathrm{kJ\\,mol^{-1}}$.\n\nYou will compute, for each test case, the difference\n$$\n\\Delta \\;=\\; \\Delta E_{\\mathrm{DMDS}} \\;-\\; \\Delta E_{\\mathrm{Me_2O_2}},\n$$\nwhere $\\Delta E_{\\mathrm{DMDS}}$ is the rotational barrier for the $\\,\\mathrm{C\\!-\\!S\\!-\\!S\\!-\\!C}\\,$ torsion in dimethyl disulfide and $\\Delta E_{\\mathrm{Me_2O_2}}$ is the rotational barrier for the $\\,\\mathrm{C\\!-\\!O\\!-\\!O\\!-\\!C}\\,$ torsion in dimethyl peroxide, both modeled by the same functional form $E(\\phi)$ above with the molecule-specific parameter sets.\n\nAngle input must be in degrees, $\\phi \\in [0^\\circ,\\,360^\\circ)$, and energies must be in $\\mathrm{kJ\\,mol^{-1}}$. Report each $\\Delta$ rounded to $3$ decimal places.\n\nTest Suite:\nFor each test case, two parameter sets are provided: one for dimethyl disulfide (DMDS) and one for dimethyl peroxide ($\\mathrm{Me_2O_2}$). Each set is a finite list of pairs $(n, V)$ meaning the term $V\\,(1-\\cos(n\\,\\phi))$ contributes to $E(\\phi)$.\n\n- Test Case $1$ (general comparison):\n  - DMDS terms: `[(1, 10.0)]`.\n  - $\\mathrm{Me_2O_2}$ terms: `[(1, 8.0)]`.\n\n- Test Case $2$ (equality case):\n  - DMDS terms: `[(1, 5.0)]`.\n  - $\\mathrm{Me_2O_2}$ terms: `[(1, 5.0)]`.\n\n- Test Case $3$ (edge case with zero barrier versus nonzero):\n  - DMDS terms: `[]` (no terms, meaning $E(\\phi) = 0$ for all $\\phi$).\n  - $\\mathrm{Me_2O_2}$ terms: `[(2, 3.0)]`.\n\n- Test Case $4$ (odd-harmonic multi-term comparison):\n  - DMDS terms: `[(1, 6.0), (3, 2.0)]`.\n  - $\\mathrm{Me_2O_2}$ terms: `[(1, 4.0), (3, 1.0)]`.\n\nRequired final output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each entry being the scalar $\\Delta$ for the corresponding test case rounded to $3$ decimal places, for example\n$$\n[\\Delta_1,\\Delta_2,\\Delta_3,\\Delta_4].\n$$", "solution": "We model torsional rotation about a single bond by a truncated Fourier series\n$$\nE(\\phi)\\;=\\;\\sum_{k=1}^{K} V_{n_k}\\,\\bigl(1-\\cos(n_k\\,\\phi)\\bigr),\n$$\nwith $\\phi$ in degrees and $V_{n_k}$ in $\\mathrm{kJ\\,mol^{-1}}$. This functional form arises from symmetry and periodicity of dihedral rotations, where integer harmonics $n_k$ encode the periodicity of steric and electronic interactions. The rotational barrier $\\Delta E$ is, by definition,\n$$\n\\Delta E \\;=\\; \\max_{\\phi\\in[0^\\circ,360^\\circ)} E(\\phi) \\;-\\; \\min_{\\phi\\in[0^\\circ,360^\\circ)}E(\\phi),\n$$\nwhich captures the height of the highest transition state along a full $360^\\circ$ rotation relative to the global minimum.\n\nKey properties of the chosen form:\n- For any integer $n$, $\\cos(n\\,\\phi)$ attains $+1$ at $\\phi = 0^\\circ$; thus $E(0^\\circ)=\\sum_k V_{n_k}(1-1)=0$. Because each term $V_{n}(1-\\cos(n\\phi))\\ge 0$, we also have $E(\\phi)\\ge 0$ for all $\\phi$, so the global minimum is exactly $E_{\\min}=0$ at $\\phi=0^\\circ$ (and at any $\\phi$ where all $n_k\\phi$ are integer multiples of $360^\\circ$).\n- For any term with an odd harmonic $n$, the maximum value of $1-\\cos(n\\phi)$ is $2$, occurring at $\\phi=180^\\circ$. Thus, if only odd harmonics are present, the global maximum of $E(\\phi)$ occurs at $\\phi=180^\\circ$ with $E_{\\max}=2\\sum_{\\text{odd }n}V_n$, and the barrier is $\\Delta E=2\\sum_{\\text{odd }n}V_n$ since $E_{\\min}=0$.\n- For a term with an even harmonic, like $n=2$ in Test Case 3, the maximum value of $1-\\cos(2\\phi)$ is also $2$, occurring when $2\\phi = 180^\\circ$, i.e., at $\\phi=90^\\circ$. Thus for a single $n=2$ term, $\\Delta E = 2V_2$. If a mix of harmonics were present, the maximum might occur at a different angle.\n\nWe now evaluate each test case.\n\n- Test Case $1$:\n  - DMDS: terms `[(1, 10.0)]`. Only the $n=1$ odd harmonic contributes, so\n    $$\n    \\Delta E_{\\mathrm{DMDS}} \\;=\\; 2\\,V_1 \\;=\\; 2\\times 10.0 \\;=\\; 20.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n  - $\\mathrm{Me_2O_2}$: terms `[(1, 8.0)]`, only $n=1$ odd harmonic, hence\n    $$\n    \\Delta E_{\\mathrm{Me_2O_2}} \\;=\\; 2\\,V_1 \\;=\\; 2\\times 8.0 \\;=\\; 16.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n  - Difference:\n    $$\n    \\Delta \\;=\\; 20.0 - 16.0 \\;=\\; 4.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n\n- Test Case $2$:\n  - DMDS: terms `[(1, 5.0)]`, odd-only, so $\\Delta E_{\\mathrm{DMDS}} = 2\\times 5.0 = 10.0\\;\\mathrm{kJ\\,mol^{-1}}$.\n  - $\\mathrm{Me_2O_2}$: terms `[(1, 5.0)]`, odd-only, so $\\Delta E_{\\mathrm{Me_2O_2}} = 2\\times 5.0 = 10.0\\;\\mathrm{kJ\\,mol^{-1}}$.\n  - Difference:\n    $$\n    \\Delta \\;=\\; 10.0 - 10.0 \\;=\\; 0.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n\n- Test Case $3$:\n  - DMDS: no terms, $E(\\phi)=0$ for all $\\phi$, so $\\Delta E_{\\mathrm{DMDS}}=0.0\\;\\mathrm{kJ\\,mol^{-1}}$.\n  - $\\mathrm{Me_2O_2}$: terms `[(2, 3.0)]`, even-only ($n=2$), so $\\Delta E_{\\mathrm{Me_2O_2}} = 2\\times 3.0 = 6.0\\;\\mathrm{kJ\\,mol^{-1}}$.\n  - Difference:\n    $$\n    \\Delta \\;=\\; 0.0 - 6.0 \\;=\\; -6.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n\n- Test Case $4$:\n  - DMDS: terms `[(1, 6.0), (3, 2.0)]`, both odd, so\n    $$\n    \\Delta E_{\\mathrm{DMDS}} \\;=\\; 2\\,(6.0 + 2.0) \\;=\\; 16.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n  - $\\mathrm{Me_2O_2}$: terms `[(1, 4.0), (3, 1.0)]`, both odd, so\n    $$\n    \\Delta E_{\\mathrm{Me_2O_2}} \\;=\\; 2\\,(4.0 + 1.0) \\;=\\; 10.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n  - Difference:\n    $$\n    \\Delta \\;=\\; 16.0 - 10.0 \\;=\\; 6.0\\;\\mathrm{kJ\\,mol^{-1}}.\n    $$\n\nCollecting the rounded differences to $3$ decimal places in the required format yields\n$$\n[4.000,0.000,-6.000,6.000].\n$$", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef torsion_energy(phi_deg: np.ndarray, terms):\n    \"\"\"\n    Compute E(phi) = sum V_n * (1 - cos(n * phi))\n    phi_deg: numpy array of angles in degrees\n    terms: list of (n, V) pairs, with n integer, V in kJ/mol\n    Returns: numpy array E(phi) in kJ/mol\n    \"\"\"\n    if not terms:\n        return np.zeros_like(phi_deg, dtype=float)\n    phi_rad = np.deg2rad(phi_deg)\n    E = np.zeros_like(phi_rad, dtype=float)\n    for n, V in terms:\n        E += V * (1.0 - np.cos(n * phi_rad))\n    return E\n\ndef rotational_barrier(terms):\n    \"\"\"\n    Rotational barrier Delta E = max_phi E(phi) - min_phi E(phi)\n    with phi in [0, 360) degrees.\n    \"\"\"\n    # Dense grid to capture maxima/minima reliably\n    phi_grid = np.linspace(0.0, 360.0, 36001, endpoint=False)  # 0.01-degree resolution\n    E = torsion_energy(phi_grid, terms)\n    return float(E.max() - E.min())\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each test case is a tuple: (terms_DMDS, terms_Me2O2)\n    # terms is a list of (n, V_kJmol) pairs.\n    test_cases = [\n        ([(1, 10.0)], [(1, 8.0)]),                  # Test 1\n        ([(1, 5.0)], [(1, 5.0)]),                   # Test 2\n        ([], [(2, 3.0)]),                           # Test 3\n        ([(1, 6.0), (3, 2.0)], [(1, 4.0), (3, 1.0)])# Test 4\n    ]\n\n    results = []\n    for terms_dmds, terms_me2o2 in test_cases:\n        barrier_dmds = rotational_barrier(terms_dmds)\n        barrier_me2o2 = rotational_barrier(terms_me2o2)\n        delta = barrier_dmds - barrier_me2o2\n        results.append(f\"{delta:.3f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2453297"}, {"introduction": "A molecule's preferred three-dimensional structure often arises from a delicate compromise between opposing energetic forces. This practice explores this principle by modeling the twist of a biphenyl-like system, where the electronic desire for planar conjugation clashes with the steric repulsion of nearby atoms. By manipulating the parameters that control these effects, you will see firsthand how a molecule's geometry is a direct consequence of balancing these competing interactions [@problem_id:2453243].", "problem": "You are asked to model how replacing the central carbon–carbon bond in biphenyl with a silicon–silicon bond affects the torsional potential and the preferred twist angle between the two rings. Consider a coarse-grained intramolecular energy model that resolves the dihedral angle $\\phi$ about the central bond and two opposing ortho–ortho steric sites (one on each ring) that move on coaxial circles centered on the bond axis. The total potential energy as a function of the dihedral angle $\\phi$ (in radians) is defined as\n$$\nV_{\\text{tot}}(\\phi) \\;=\\; V_{\\text{tors}}(\\phi) \\;+\\; N \\, V_{\\text{rep}}(d(\\phi)) \\, ,\n$$\nwhere $N$ is the number of identical steric interacting pairs, $V_{\\text{tors}}(\\phi)$ is a torsional term capturing conjugative preferences, $V_{\\text{rep}}(d)$ is a purely repulsive nonbonded term as a function of the inter-site distance $d$, and $d(\\phi)$ is the geometric distance between the two steric sites as the rings rotate.\n\nUse the following forms and definitions.\n\n1) Torsional term:\n$$\nV_{\\text{tors}}(\\phi) \\;=\\; k_2 \\,\\bigl(1 - \\cos(2\\phi)\\bigr) \\, ,\n$$\nwith $k_2$ in kilojoules per mole (kJ/mol).\n\n2) Geometry of the steric sites: Let each steric site lie on a circle of radius $a$ (in ångström, Å) about the bond axis, with the two rings separated by an axial distance $h$ (in Å). The inter-site distance as a function of $\\phi$ is\n$$\nd(\\phi) \\;=\\; \\sqrt{\\, h^2 + 2 a^2 \\bigl(1 - \\cos \\phi \\bigr) \\,} \\, .\n$$\n\n3) Repulsive nonbonded interaction: Use the Weeks–Chandler–Andersen (WCA) repulsive form derived from the Lennard–Jones $12$–$6$ potential with parameters $\\varepsilon$ (in kJ/mol) and $\\sigma$ (in Å):\n$$\nV_{\\text{WCA}}(d) \\;=\\; \n\\begin{cases}\n4\\varepsilon \\left[ \\left(\\dfrac{\\sigma}{d}\\right)^{12} - \\left(\\dfrac{\\sigma}{d}\\right)^{6} \\right] + \\varepsilon \\,, & d \\le d_c \\\\\n0 \\,, & d > d_c\n\\end{cases}\n\\quad \\text{with} \\quad d_c \\;=\\; 2^{1/6} \\sigma \\, .\n$$\nSet $V_{\\text{rep}}(d) = V_{\\text{WCA}}(d)$.\n\nFor each specified parameter set below, determine the preferred twist angle $\\phi^\\star$ that minimizes $V_{\\text{tot}}(\\phi)$ over $\\phi \\in [0,\\pi]$ and the torsional barrier height $\\Delta V$ defined as\n$$\n\\Delta V \\;=\\; \\max_{\\phi \\in [0,\\pi]} V_{\\text{tot}}(\\phi) \\;-\\; \\min_{\\phi \\in [0,\\pi]} V_{\\text{tot}}(\\phi) \\, .\n$$\n\nAngle unit requirement: report $\\phi^\\star$ in degrees. Energy unit requirement: report $\\Delta V$ in kilojoules per mole.\n\nRounding requirement: report $\\phi^\\star$ rounded to one decimal place and $\\Delta V$ rounded to three decimal places.\n\nTest suite (each case is $(k_2,\\varepsilon,\\sigma,a,h,N)$ with lengths in Å and energies in kJ/mol):\n- Case A (biphenyl-like, central C–C): $(2.5,\\, 0.15,\\, 2.4,\\, 2.1,\\, 1.47,\\, 2)$.\n- Case B (diphenyl-disilane-like, central Si–Si): $(0.5,\\, 0.15,\\, 2.4,\\, 2.3,\\, 2.34,\\, 2)$.\n- Case C (no steric repulsion): $(1.2,\\, 0.0,\\, 2.4,\\, 2.0,\\, 1.47,\\, 2)$.\n- Case D (strong steric crowding): $(0.5,\\, 0.3,\\, 2.4,\\, 2.5,\\, 1.2,\\, 2)$.\n\nYour program must compute, for each case, the pair $(\\phi^\\star,\\Delta V)$ according to the definitions above and produce a single line of output containing the results as a comma-separated list enclosed in square brackets, aggregating all cases in order as $[\\phi^\\star_{\\text{A}},\\Delta V_{\\text{A}},\\phi^\\star_{\\text{B}},\\Delta V_{\\text{B}},\\phi^\\star_{\\text{C}},\\Delta V_{\\text{C}},\\phi^\\star_{\\text{D}},\\Delta V_{\\text{D}}]$. The angles must be in degrees (rounded to one decimal place) and the energies must be in kilojoules per mole (rounded to three decimal places). No other text should be printed.", "solution": "The problem requires the determination of the preferred twist angle $\\phi^\\star$ and the torsional barrier height $\\Delta V$ for a given intramolecular potential energy function $V_{\\text{tot}}(\\phi)$. The analysis must be conducted for four distinct parameter sets.\n\nThe total potential energy is given by the sum of a torsional term and a steric repulsion term:\n$$\nV_{\\text{tot}}(\\phi) = V_{\\text{tors}}(\\phi) + N V_{\\text{rep}}(d(\\phi))\n$$\nThe analysis will be performed over the specified domain for the dihedral angle, $\\phi \\in [0, \\pi]$ radians.\n\nThe component functions are defined as follows:\n1.  **Torsional Potential:** $V_{\\text{tors}}(\\phi) = k_2 (1 - \\cos(2\\phi))$. This term models the electronic preference for planarity. For $k_2 > 0$, it has minima at $\\phi=0$ and $\\phi=\\pi$, corresponding to coplanar conformations, and a maximum at $\\phi=\\pi/2$, the perpendicular conformation.\n\n2.  **Inter-site Distance:** $d(\\phi) = \\sqrt{h^2 + 2a^2(1 - \\cos\\phi)}$. This function gives the distance between two opposing steric sites. The distance is minimal at $\\phi=0$ ($d(0)=h$) and maximal at $\\phi=\\pi$ ($d(\\pi)=\\sqrt{h^2+4a^2}$).\n\n3.  **Repulsive Potential:** The Weeks–Chandler–Andersen (WCA) potential, $V_{\\text{rep}}(d) = V_{\\text{WCA}}(d)$, is defined as:\n    $$\n    V_{\\text{WCA}}(d) = \n    \\begin{cases}\n    4\\varepsilon \\left[ \\left(\\dfrac{\\sigma}{d}\\right)^{12} - \\left(\\dfrac{\\sigma}{d}\\right)^{6} \\right] + \\varepsilon \\,, & d \\le d_c \\\\\n    0 \\,, & d > d_c\n    \\end{cases}\n    $$\n    where $d_c = 2^{1/6}\\sigma$. The WCA potential is the repulsive part of the Lennard-Jones potential, shifted so that $V_{\\text{WCA}}(d) \\ge 0$ for all $d$. Consequently, the total potential $V_{\\text{tot}}(\\phi)$ is also non-negative, as $V_{\\text{tors}}(\\phi) \\ge 0$.\n\nThe quantities to be determined are:\n-   The preferred twist angle $\\phi^\\star$, which is the value of $\\phi \\in [0, \\pi]$ that minimizes $V_{\\text{tot}}(\\phi)$.\n-   The torsional barrier height $\\Delta V = \\max_{\\phi \\in [0,\\pi]} V_{\\text{tot}}(\\phi) - \\min_{\\phi \\in [0,\\pi]} V_{\\text{tot}}(\\phi)$.\n\nThe solution strategy is to perform a numerical search for the minimum and maximum of $V_{\\text{tot}}(\\phi)$ on the compact interval $[0, \\pi]$. This will be accomplished by discretizing the interval into a fine grid of points and evaluating the function at each point. This direct search method is robust for a one-dimensional problem.\n\nAn important analytical observation can be made for cases where steric repulsion is present ($\\varepsilon > 0$). At $\\phi=\\pi$:\n-   $V_{\\text{tors}}(\\pi) = k_2(1 - \\cos(2\\pi)) = 0$.\n-   The inter-site distance is $d(\\pi) = \\sqrt{h^2 + 4a^2}$. For all provided parameter sets (A, B, D), a direct calculation shows that $d(\\pi) > d_c = 2^{1/6}\\sigma$.\n-   Since $d(\\pi) > d_c$, the repulsive potential $V_{\\text{rep}}(d(\\pi))$ is zero.\n-   Therefore, $V_{\\text{tot}}(\\pi) = 0$.\n\nAs established that $V_{\\text{tot}}(\\phi) \\ge 0$ for all $\\phi$, the value $V_{\\text{tot}}(\\pi) = 0$ represents a global minimum. Thus, for Cases A, B, and D, the preferred angle is unambiguously $\\phi^\\star = \\pi$ radians, or $180.0$ degrees.\n\nFor Case C, $\\varepsilon=0$, so $V_{\\text{rep}}(d) = 0$ for all $d$. The potential is purely torsional: $V_{\\text{tot}}(\\phi) = k_2 (1 - \\cos(2\\phi))$. This function has minima at $\\phi=0$ and $\\phi=\\pi$, where $V_{\\text{tot}}=0$. By convention, we select the smallest non-negative angle, so $\\phi^\\star=0.0$ degrees.\n\nThe calculation proceeds as follows:\n\n**Case A: Biphenyl-like (C–C)**\nParameters: $(k_2, \\varepsilon, \\sigma, a, h, N) = (2.5, 0.15, 2.4, 2.1, 1.47, 2)$.\n-   $\\phi^\\star = 180.0^\\circ$.\n-   $V_{\\text{min}} = V_{\\text{tot}}(\\pi) = 0$ kJ/mol.\n-   The maximum of the potential occurs at $\\phi=0$ due to severe steric clash ($h=1.47\\,\\text{Å} < d_c \\approx 2.694\\,\\text{Å}$).\n    $V_{\\text{max}} = V_{\\text{tot}}(0) = 2 \\times V_{\\text{WCA}}(1.47)$.\n    $V_{\\text{WCA}}(1.47) = 4(0.15)\\left[ \\left(\\frac{2.4}{1.47}\\right)^{12} - \\left(\\frac{2.4}{1.47}\\right)^{6} \\right] + 0.15 \\approx 215.694$ kJ/mol.\n    $V_{\\text{max}} \\approx 2 \\times 215.694 = 431.389$ kJ/mol.\n-   $\\Delta V = V_{\\text{max}} - V_{\\text{min}} = 431.389$ kJ/mol.\n\n**Case B: Diphenyl-disilane-like (Si–Si)**\nParameters: $(k_2, \\varepsilon, \\sigma, a, h, N) = (0.5, 0.15, 2.4, 2.3, 2.34, 2)$.\n-   $\\phi^\\star = 180.0^\\circ$.\n-   $V_{\\text{min}} = V_{\\text{tot}}(\\pi) = 0$ kJ/mol.\n-   The potential at $\\phi=0$ is $V_{\\text{tot}}(0) \\approx 0.524$ kJ/mol. The torsional potential maximum is at $\\phi=\\pi/2$, with value $V_{\\text{tors}}(\\pi/2) = 2k_2 = 1.0$ kJ/mol. At this angle, $d(\\pi/2) \\approx 4.007\\,\\text{Å} > d_c$, so $V_{\\text{rep}}=0$. The global maximum is thus $V_{\\text{max}} = V_{\\text{tot}}(\\pi/2) = 1.0$ kJ/mol.\n-   $\\Delta V = V_{\\text{max}} - V_{\\text{min}} = 1.000$ kJ/mol.\n\n**Case C: No steric repulsion**\nParameters: $(k_2, \\varepsilon, \\sigma, a, h, N) = (1.2, 0.0, 2.4, 2.0, 1.47, 2)$.\n-   $V_{\\text{tot}}(\\phi) = 1.2(1 - \\cos(2\\phi))$.\n-   The minima are at $\\phi=0$ and $\\phi=\\pi$. We choose $\\phi^\\star = 0.0^\\circ$.\n-   $V_{\\text{min}} = 0$ kJ/mol.\n-   The maximum is at $\\phi=\\pi/2$, where $V_{\\text{max}} = 1.2(1 - (-1)) = 2.4$ kJ/mol.\n-   $\\Delta V = V_{\\text{max}} - V_{\\text{min}} = 2.400$ kJ/mol.\n\n**Case D: Strong steric crowding**\nParameters: $(k_2, \\varepsilon, \\sigma, a, h, N) = (0.5, 0.3, 2.4, 2.5, 1.2, 2)$.\n-   $\\phi^\\star = 180.0^\\circ$.\n-   $V_{\\text{min}} = V_{\\text{tot}}(\\pi) = 0$ kJ/mol.\n-   The maximum occurs at $\\phi=0$ due to extreme steric repulsion ($h=1.2\\,\\text{Å} \\ll d_c$).\n    $V_{\\text{max}} = V_{\\text{tot}}(0) = 2 \\times V_{\\text{WCA}}(1.2)$.\n    $V_{\\text{WCA}}(1.2) = 4(0.3)\\left[ \\left(\\frac{2.4}{1.2}\\right)^{12} - \\left(\\frac{2.4}{1.2}\\right)^{6} \\right] + 0.3 = 1.2(2^{12} - 2^6)+0.3 = 4838.7$ kJ/mol.\n    $V_{\\text{max}} = 2 \\times 4838.7 = 9677.4$ kJ/mol.\n-   $\\Delta V = V_{\\text{max}} - V_{\\text{min}} = 9677.400$ kJ/mol.\n\nThese results are computed numerically to ensure precision according to the problem specification.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n# No other libraries are permitted.\n\ndef solve():\n    \"\"\"\n    Solves the conformational analysis problem for four test cases.\n    \"\"\"\n    \n    # Test cases are given as tuples of (k2, epsilon, sigma, a, h, N)\n    # Units are kJ/mol for energies and Angstroms for lengths.\n    test_cases = [\n        # Case A (biphenyl-like, C-C)\n        (2.5, 0.15, 2.4, 2.1, 1.47, 2),\n        # Case B (diphenyl-disilane-like, Si-Si)\n        (0.5, 0.15, 2.4, 2.3, 2.34, 2),\n        # Case C (no steric repulsion)\n        (1.2, 0.0, 2.4, 2.0, 1.47, 2),\n        # Case D (strong steric crowding)\n        (0.5, 0.3, 2.4, 2.5, 1.2, 2)\n    ]\n\n    results = []\n    for params in test_cases:\n        phi_star_deg, delta_v = calculate_potential_properties(params)\n        results.extend([phi_star_deg, delta_v])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef calculate_potential_properties(params):\n    \"\"\"\n    Calculates the preferred twist angle (phi_star) and torsional barrier (delta_v)\n    for a given set of potential parameters.\n\n    Args:\n        params (tuple): A tuple containing (k2, eps, sigma, a, h, N).\n\n    Returns:\n        tuple: A tuple containing (phi_star_deg, delta_v) rounded as required.\n    \"\"\"\n    k2, eps, sigma, a, h, N = params\n    \n    # The cutoff distance for the WCA potential\n    d_c = 2**(1/6) * sigma\n\n    # Create a fine grid for the dihedral angle phi from 0 to pi.\n    # A high number of points ensures accuracy for finding optima.\n    phi_rad = np.linspace(0, np.pi, 20001)\n\n    # Calculate the torsional potential term V_tors(phi)\n    v_tors = k2 * (1 - np.cos(2 * phi_rad))\n\n    # Calculate the inter-site distance d(phi)\n    d = np.sqrt(h**2 + 2 * a**2 * (1 - np.cos(phi_rad)))\n\n    # Calculate the WCA repulsive potential V_rep(d)\n    # Initialize v_rep array with zeros.\n    v_rep = np.zeros_like(d)\n    \n    # Create a boolean mask for distances within the WCA cutoff\n    mask = d <= d_c\n    \n    # Only calculate potential for distances where it's non-zero\n    # to avoid unnecessary computation and potential warnings.\n    d_sub = d[mask]\n    if d_sub.size > 0:\n        # Ratio sigma/d for the relevant points\n        ratio = sigma / d_sub\n        v_rep[mask] = 4 * eps * (ratio**12 - ratio**6) + eps\n\n    # Calculate the total potential energy V_tot(phi)\n    v_total = v_tors + N * v_rep\n\n    # Find the minimum and maximum of the total potential energy\n    v_min = np.min(v_total)\n    v_max = np.max(v_total)\n\n    # Find the index of the minimum to get the corresponding angle phi_star\n    min_idx = np.argmin(v_total)\n    phi_star_rad = phi_rad[min_idx]\n    \n    # Convert phi_star to degrees\n    phi_star_deg = np.rad2deg(phi_star_rad)\n\n    # Calculate the torsional barrier height\n    delta_v = v_max - v_min\n\n    # Round the results to the specified number of decimal places\n    phi_star_deg_rounded = round(phi_star_deg, 1)\n    delta_v_rounded = round(delta_v, 3)\n\n    return phi_star_deg_rounded, delta_v_rounded\n\n# Run the solver\nsolve()\n```", "id": "2453243"}, {"introduction": "In computational chemistry, the \"best\" method is not always the most accurate one, but rather the one that provides a viable balance between accuracy and computational cost. This final exercise demystifies the steep expense of quantum chemical calculations and conformational searches. You will use a simplified scaling model to quantify how the choice of method (like HF, DFT, or MP2) and basis set, combined with a molecule's conformational complexity, can lead to an exponential increase in required resources—a critical lesson for any practical computational study [@problem_id:2453265].", "problem": "You are given a simplified, first-principles cost model for estimating the total computational cost of a global conformer search performed via uniform dihedral scans. The total cost depends on three factors: the number of basis functions for a chosen basis set, the scaling of the chosen electronic structure method, and the number of sampled dihedral angle combinations.\n\nDefinitions and assumptions to be used:\n\n1. Electronic structure methods and their cost scaling per single energy evaluation:\n   - Hartree–Fock (HF): per-evaluation cost is $C_{\\mathrm{HF}} = k_{\\mathrm{HF}} \\, N_b^{p_{\\mathrm{HF}}}$ with $k_{\\mathrm{HF}} = 1$ and $p_{\\mathrm{HF}} = 4$.\n   - Density Functional Theory (DFT) with Becke, three-parameter, Lee–Yang–Parr (B3LYP): per-evaluation cost is $C_{\\mathrm{B3LYP}} = k_{\\mathrm{B3LYP}} \\, N_b^{p_{\\mathrm{B3LYP}}}$ with $k_{\\mathrm{B3LYP}} = 2$ and $p_{\\mathrm{B3LYP}} = 3$.\n   - Second-order Møller–Plesset perturbation theory (MP2): per-evaluation cost is $C_{\\mathrm{MP2}} = k_{\\mathrm{MP2}} \\, N_b^{p_{\\mathrm{MP2}}}$ with $k_{\\mathrm{MP2}} = 0.02$ and $p_{\\mathrm{MP2}} = 5$.\n\n   Here $N_b$ is the total number of basis functions used to represent the molecular orbitals.\n\n2. Basis sets and the number of spherical harmonic basis functions per atom (contracted), to be used for computing $N_b$:\n   - Minimal basis Slater-type orbital 3-Gaussian (STO-3G): Hydrogen (H) contributes $1$, Carbon (C) contributes $5$, Oxygen (O) contributes $5$.\n   - Split-valence 6-31G with polarization on heavy atoms (6-31G*): Hydrogen (H) contributes $2$, Carbon (C) contributes $14$, Oxygen (O) contributes $14$.\n   - Correlation-consistent polarized valence triple-zeta (cc-pVTZ): Hydrogen (H) contributes $10$, Carbon (C) contributes $30$, Oxygen (O) contributes $30$.\n\n   For a molecule with atomic composition consisting of $N_{\\mathrm{H}}$ hydrogens, $N_{\\mathrm{C}}$ carbons, and $N_{\\mathrm{O}}$ oxygens, and for a given basis set with per-atom contributions $b_{\\mathrm{H}}$, $b_{\\mathrm{C}}$, $b_{\\mathrm{O}}$, the total number of basis functions is\n   $$N_b = b_{\\mathrm{H}} \\, N_{\\mathrm{H}} + b_{\\mathrm{C}} \\, N_{\\mathrm{C}} + b_{\\mathrm{O}} \\, N_{\\mathrm{O}}.$$\n\n3. Global conformer search model via dihedral scans:\n   - Suppose a molecule has $R$ rotatable single bonds (treated as independent torsions). If each torsion is scanned uniformly over $n$ dihedral angles evenly spanning $360^\\circ$ (angles in degrees), then the total number of sampled torsion combinations is\n     $$S = n^{R}.$$\n   - The total cost at a given level of theory is\n     $$T = S \\times C,$$\n     where $C$ is the per-evaluation cost for that method and basis set combination as defined above.\n   - If a computation yields a non-integer intermediate due to the prefactor, the final $T$ must be rounded to the nearest integer.\n\nCompute and compare the total costs for three combinations of method and basis set:\n- Hartree–Fock with STO-3G (HF/STO-3G).\n- B3LYP with 6-31G* (B3LYP/6-31G*).\n- MP2 with cc-pVTZ (MP2/cc-pVTZ).\n\nTest Suite (compute results for each case):\n\n- Case $1$ (happy path): Ethanol, with atomic composition $N_{\\mathrm{C}} = 2$, $N_{\\mathrm{H}} = 6$, $N_{\\mathrm{O}} = 1$, number of rotatable bonds $R = 2$, and $n = 12$ dihedral angles per torsion.\n- Case $2$ (edge case: no torsions): Water, with atomic composition $N_{\\mathrm{C}} = 0$, $N_{\\mathrm{H}} = 2$, $N_{\\mathrm{O}} = 1$, number of rotatable bonds $R = 0$, and $n = 12$.\n- Case $3$ (larger scan): $n$-Butane, with atomic composition $N_{\\mathrm{C}} = 4$, $N_{\\mathrm{H}} = 10$, $N_{\\mathrm{O}} = 0$, number of rotatable bonds $R = 3$, and $n = 6$.\n\nYour program must:\n- For each case, compute $N_b$ for each of the three basis sets, then compute $C_{\\mathrm{HF}}$, $C_{\\mathrm{B3LYP}}$, and $C_{\\mathrm{MP2}}$ using the corresponding $N_b$, then compute total costs $T_{\\mathrm{HF}}$, $T_{\\mathrm{B3LYP}}$, and $T_{\\mathrm{MP2}}$ using the same $S$ for that case, rounding each $T$ to the nearest integer.\n- Produce a single line of output containing the results as a comma-separated list of three lists, where each inner list corresponds to one case in the order Case $1$, Case $2$, Case $3$, and contains the three integers $[T_{\\mathrm{HF}}, T_{\\mathrm{B3LYP}}, T_{\\mathrm{MP2}}]$ for that case.\n- The output must be formatted exactly as a single line JSON-like array of arrays without spaces, for example: $[[x_1,y_1,z_1],[x_2,y_2,z_2],[x_3,y_3,z_3]]$.\n\nNo additional text should be printed. All angles are in degrees. There are no physical units for cost; report the results as integer counts in arbitrary cost units.", "solution": "The problem statement has been evaluated and is determined to be valid. It is scientifically grounded in established, albeit simplified, principles of computational chemistry, well-posed with all necessary information and formulae provided, and expressed in objective, unambiguous language. The problem is a formalizable exercise in applying a cost model for conformational searches.\n\nThe total computational cost, $T$, is a product of the number of sampled conformers, $S$, and the per-evaluation cost of the electronic structure calculation, $C$. The total cost is given by the formula $T = S \\times C$.\n\nThe number of sampled conformers, $S$, is determined by the number of rotatable bonds, $R$, and the number of divisions, $n$, for each torsional scan, as $S = n^R$.\n\nThe per-evaluation cost, $C$, depends on the chosen electronic structure method and basis set. It is modeled by the power law $C = k N_b^p$, where $N_b$ is the total number of basis functions, and $k$ and $p$ are parameters specific to the method. The total number of basis functions is calculated as a sum over all atoms in the molecule:\n$$N_b = b_{\\mathrm{H}} N_{\\mathrm{H}} + b_{\\mathrm{C}} N_{\\mathrm{C}} + b_{\\mathrm{O}} N_{\\mathrm{O}}$$\nwhere $N_{\\mathrm{H}}$, $N_{\\mathrm{C}}$, and $N_{\\mathrm{O}}$ are the counts of hydrogen, carbon, and oxygen atoms, respectively, and $b_{\\mathrm{H}}$, $b_{\\mathrm{C}}$, and $b_{\\mathrm{O}}$ are the numbers of basis functions contributed per atom for a given basis set.\n\nThe problem requires calculating the total costs for three specific combinations of method and basis set for three different molecules. The final cost $T$ must be rounded to the nearest integer.\n\nThe parameters for the methods are:\n- Hartree-Fock (HF): $k_{\\mathrm{HF}} = 1$, $p_{\\mathrm{HF}} = 4$.\n- B3LYP: $k_{\\mathrm{B3LYP}} = 2$, $p_{\\mathrm{B3LYP}} = 3$.\n- MP2: $k_{\\mathrm{MP2}} = 0.02$, $p_{\\mathrm{MP2}} = 5$.\n\nThe basis function counts per atom are:\n- STO-3G: $b_{\\mathrm{H}} = 1$, $b_{\\mathrm{C}} = 5$, $b_{\\mathrm{O}} = 5$.\n- 6-31G*: $b_{\\mathrm{H}} = 2$, $b_{\\mathrm{C}} = 14$, $b_{\\mathrm{O}} = 14$.\n- cc-pVTZ: $b_{\\mathrm{H}} = 10$, $b_{\\mathrm{C}} = 30$, $b_{\\mathrm{O}} = 30$.\n\nThe calculations for each case are as follows.\n\nCase 1: Ethanol ($N_{\\mathrm{C}} = 2, N_{\\mathrm{H}} = 6, N_{\\mathrm{O}} = 1$) with $R = 2$ and $n = 12$.\nThe number of sampled conformers is $S = 12^2 = 144$.\n\n- HF/STO-3G:\n  - $N_b(\\text{STO-3G}) = (1 \\times 6) + (5 \\times 2) + (5 \\times 1) = 6 + 10 + 5 = 21$.\n  - $C_{\\mathrm{HF}} = 1 \\times 21^4 = 194481$.\n  - $T_{\\mathrm{HF}} = 144 \\times 194481 = 28005264$.\n\n- B3LYP/6-31G*:\n  - $N_b(\\text{6-31G*}) = (2 \\times 6) + (14 \\times 2) + (14 \\times 1) = 12 + 28 + 14 = 54$.\n  - $C_{\\mathrm{B3LYP}} = 2 \\times 54^3 = 2 \\times 157464 = 314928$.\n  - $T_{\\mathrm{B3LYP}} = 144 \\times 314928 = 45349632$.\n\n- MP2/cc-pVTZ:\n  - $N_b(\\text{cc-pVTZ}) = (10 \\times 6) + (30 \\times 2) + (30 \\times 1) = 60 + 60 + 30 = 150$.\n  - $C_{\\mathrm{MP2}} = 0.02 \\times 150^5 = 0.02 \\times 75937500000 = 1518750000$.\n  - $T_{\\mathrm{MP2}} = 144 \\times 1518750000 = 218700000000$.\n\nThe resulting costs for Case 1 are $[28005264, 45349632, 218700000000]$.\n\nCase 2: Water ($N_{\\mathrm{C}} = 0, N_{\\mathrm{H}} = 2, N_{\\mathrm{O}} = 1$) with $R = 0$ and $n = 12$.\nThe number of sampled conformers is $S = 12^0 = 1$. A single point energy calculation is performed.\n\n- HF/STO-3G:\n  - $N_b(\\text{STO-3G}) = (1 \\times 2) + (5 \\times 0) + (5 \\times 1) = 2 + 0 + 5 = 7$.\n  - $C_{\\mathrm{HF}} = 1 \\times 7^4 = 2401$.\n  - $T_{\\mathrm{HF}} = 1 \\times 2401 = 2401$.\n\n- B3LYP/6-31G*:\n  - $N_b(\\text{6-31G*}) = (2 \\times 2) + (14 \\times 0) + (14 \\times 1) = 4 + 0 + 14 = 18$.\n  - $C_{\\mathrm{B3LYP}} = 2 \\times 18^3 = 2 \\times 5832 = 11664$.\n  - $T_{\\mathrm{B3LYP}} = 1 \\times 11664 = 11664$.\n\n- MP2/cc-pVTZ:\n  - $N_b(\\text{cc-pVTZ}) = (10 \\times 2) + (30 \\times 0) + (30 \\times 1) = 20 + 0 + 30 = 50$.\n  - $C_{\\mathrm{MP2}} = 0.02 \\times 50^5 = 0.02 \\times 312500000 = 6250000$.\n  - $T_{\\mathrm{MP2}} = 1 \\times 6250000 = 6250000$.\n\nThe resulting costs for Case 2 are $[2401, 11664, 6250000]$.\n\nCase 3: $n$-Butane ($N_{\\mathrm{C}} = 4, N_{\\mathrm{H}} = 10, N_{\\mathrm{O}} = 0$) with $R = 3$ and $n = 6$.\nThe number of sampled conformers is $S = 6^3 = 216$.\n\n- HF/STO-3G:\n  - $N_b(\\text{STO-3G}) = (1 \\times 10) + (5 \\times 4) + (5 \\times 0) = 10 + 20 + 0 = 30$.\n  - $C_{\\mathrm{HF}} = 1 \\times 30^4 = 810000$.\n  - $T_{\\mathrm{HF}} = 216 \\times 810000 = 174960000$.\n\n- B3LYP/6-31G*:\n  - $N_b(\\text{6-31G*}) = (2 \\times 10) + (14 \\times 4) + (14 \\times 0) = 20 + 56 + 0 = 76$.\n  - $C_{\\mathrm{B3LYP}} = 2 \\times 76^3 = 2 \\times 438976 = 877952$.\n  - $T_{\\mathrm{B3LYP}} = 216 \\times 877952 = 189637632$.\n\n- MP2/cc-pVTZ:\n  - $N_b(\\text{cc-pVTZ}) = (10 \\times 10) + (30 \\times 4) + (30 \\times 0) = 100 + 120 + 0 = 220$.\n  - $C_{\\mathrm{MP2}} = 0.02 \\times 220^5 = 0.02 \\times 515363200000 = 10307264000$.\n  - $T_{\\mathrm{MP2}} = 216 \\times 10307264000 = 2226369024000$.\n\nThe resulting costs for Case 3 are $[174960000, 189637632, 2226369024000]$.\n\nThe final program will compute these values and format them as requested.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes computational costs for global conformer searches based on a\n    simplified first-principles model.\n    \"\"\"\n\n    # Define parameters for methods and basis sets\n    methods = {\n        'HF': {'k': 1.0, 'p': 4},\n        'B3LYP': {'k': 2.0, 'p': 3},\n        'MP2': {'k': 0.02, 'p': 5}\n    }\n\n    basis_sets = {\n        'STO-3G': {'H': 1, 'C': 5, 'O': 5},\n        '6-31G*': {'H': 2, 'C': 14, 'O': 14},\n        'cc-pVTZ': {'H': 10, 'C': 30, 'O': 30}\n    }\n\n    # Define the combinations to be computed\n    combinations = [\n        {'method': 'HF', 'basis': 'STO-3G'},\n        {'method': 'B3LYP', 'basis': '6-31G*'},\n        {'method': 'MP2', 'basis': 'cc-pVTZ'}\n    ]\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: Ethanol\n        {'composition': {'N_C': 2, 'N_H': 6, 'N_O': 1}, 'R': 2, 'n': 12},\n        # Case 2: Water\n        {'composition': {'N_C': 0, 'N_H': 2, 'N_O': 1}, 'R': 0, 'n': 12},\n        # Case 3: n-Butane\n        {'composition': {'N_C': 4, 'N_H': 10, 'N_O': 0}, 'R': 3, 'n': 6}\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        comp = case['composition']\n        R = case['R']\n        n = case['n']\n\n        # Calculate S, the number of sampled torsion combinations.\n        # Note: Python's int handles arbitrary size, so overflow is not an issue.\n        S = n ** R\n\n        case_results = []\n        for combo in combinations:\n            method_name = combo['method']\n            basis_name = combo['basis']\n\n            method_params = methods[method_name]\n            basis_params = basis_sets[basis_name]\n            \n            # Calculate Nb, the total number of basis functions.\n            N_b = (basis_params['H'] * comp['N_H'] +\n                   basis_params['C'] * comp['N_C'] +\n                   basis_params['O'] * comp['N_O'])\n\n            # Calculate C, the per-evaluation cost.\n            k = method_params['k']\n            p = method_params['p']\n            C = k * (N_b ** p)\n\n            # Calculate T, the total cost.\n            T_float = S * C\n            \n            # Round to the nearest integer.\n            # int(np.round(x)) converts to a standard Python arbitrary-precision integer.\n            T_int = int(np.round(T_float))\n            \n            case_results.append(T_int)\n        \n        all_results.append(case_results)\n\n    # Format the final output string exactly as specified.\n    # The string representation of a list includes spaces, so we build the string manually.\n    inner_lists = [f\"[{','.join(map(str, r))}]\" for r in all_results]\n    final_output = f\"[{','.join(inner_lists)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output)\n\nsolve()\n```", "id": "2453265"}]}