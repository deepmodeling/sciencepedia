{"hands_on_practices": [{"introduction": "Electron correlation is not merely a theoretical correction; it has profound and measurable effects on molecular properties. This first exercise demonstrates this by examining the electric dipole moment of ozone ($\\mathrm{O}_3$), a molecule whose electronic structure is famously described poorly by simple single-reference methods like Hartree-Fock. By calculating the dipole moment from hypothetical charge distributions derived from both Hartree-Fock and a more accurate correlated method, you will gain a tangible understanding of why describing electron correlation is critical for reliable chemical predictions [@problem_id:2451531].", "problem": "A neutral triatomic molecule in the Born–Oppenheimer approximation has an electric dipole moment vector defined by the first moment of all charges as\n$$\n\\boldsymbol{\\mu} \\;=\\; \\sum_{A} Z_A e\\, \\mathbf{R}_A \\;-\\; \\int \\rho(\\mathbf{r})\\, e\\, \\mathbf{r}\\, d^3 r,\n$$\nwhere $Z_A$ is the atomic number of nucleus $A$, $e$ is the elementary charge, $\\mathbf{R}_A$ are nuclear position vectors, and $\\rho(\\mathbf{r})$ is the electronic charge density. In a point-charge approximation to the electronic density consistent with a population analysis, the molecular dipole can be computed as\n$$\n\\boldsymbol{\\mu} \\;=\\; \\sum_{i=1}^{N} q_i\\, \\mathbf{R}_i,\n$$\nwhere $q_i$ are net atomic partial charges in units of $e$ that sum to zero and $\\mathbf{R}_i$ are atomic position vectors in ångströms. The magnitude is $|\\boldsymbol{\\mu}|$, and the unit conversion is $1~\\mathrm{e\\cdot\\mathring{A}} = 4.80320427~\\mathrm{D}$, where $\\mathrm{D}$ denotes Debye. Angles must be treated in degrees.\n\nUsing this definition, write a complete program that computes the dipole moment magnitudes (in Debye) from supplied geometries and net atomic partial charges for ozone ($\\mathrm{O}_3$) at the Hartree–Fock (HF) and a correlated level such as Møller–Plesset second-order perturbation theory (MP2) or Coupled Cluster with Singles and Doubles (CCSD). Use the following parameter sets as the test suite. For bent geometries, place the central atom at the origin, and place the two terminal atoms at a bond length $L$ from the origin in the $xy$-plane at a bond angle $\\theta$ (degrees) between the two terminal atoms; specifically, take the terminal positions to be\n$$\n\\mathbf{R}_{\\text{term},1} = \\big(L \\cos(\\theta/2),\\, L \\sin(\\theta/2),\\, 0\\big),\\quad\n\\mathbf{R}_{\\text{term},2} = \\big(L \\cos(\\theta/2),\\, -L \\sin(\\theta/2),\\, 0\\big),\n$$\nand the central atom at $\\mathbf{R}_{\\text{cent}} = (0,0,0)$. For linear geometries, place the central atom at $\\mathbf{R}_{\\text{cent}}=(0,0,0)$ and the two terminals at $\\mathbf{R}_{\\text{term},1}=(+L,0,0)$ and $\\mathbf{R}_{\\text{term},2}=(-L,0,0)$.\n\nAll charges are given in units of $e$ and sum to zero. Report, for each case, three values: the HF dipole magnitude in Debye, the correlated-method dipole magnitude in Debye, and the absolute difference between these two magnitudes in Debye. Express all three as floating-point numbers rounded to six decimal places. Your program should produce a single line of output containing the results as a comma-separated list of lists, for example, $[[x_1,y_1,z_1],[x_2,y_2,z_2],\\dots]$.\n\nTest suite:\n- Case $1$ (ozone, bent): $L = 1.278~\\mathring{\\mathrm{A}}$, $\\theta = 116.8^\\circ$. HF charges: $\\{+0.300,\\,-0.150,\\,-0.150\\}$. Correlated charges: $\\{+0.165,\\,-0.0825,\\,-0.0825\\}$.\n- Case $2$ (ozone, bent): $L = 1.278~\\mathring{\\mathrm{A}}$, $\\theta = 116.8^\\circ$. HF charges: $\\{+0.400,\\,-0.200,\\,-0.200\\}$. Correlated charges: $\\{+0.180,\\,-0.090,\\,-0.090\\}$.\n- Case $3$ (linear symmetric triatomic, boundary case): $L = 1.160~\\mathring{\\mathrm{A}}$, $\\theta = 180.0^\\circ$. HF charges: $\\{+1.000,\\,-0.500,\\,-0.500\\}$. Correlated charges: $\\{+1.000,\\,-0.500,\\,-0.500\\}$.\n\nRequired final output format:\nYour program must print a single line\n$$\n\\big[\\,[\\mu_{\\mathrm{HF},1},\\,\\mu_{\\mathrm{corr},1},\\,\\Delta_1],\\;[\\mu_{\\mathrm{HF},2},\\,\\mu_{\\mathrm{corr},2},\\,\\Delta_2],\\;[\\mu_{\\mathrm{HF},3},\\,\\mu_{\\mathrm{corr},3},\\,\\Delta_3]\\,\\big],\n$$\nwhere each $\\mu$ and $\\Delta$ is rounded to six decimal places, measured in Debye.", "solution": "The problem statement has been subjected to rigorous validation and is determined to be valid. It is scientifically grounded, well-posed, objective, and provides a complete and consistent set of data and definitions required for a unique solution. The problem concerns a standard calculation in computational chemistry—the determination of a molecular dipole moment from a point-charge model derived from quantum chemical calculations. All provided values and geometric prescriptions are physically and mathematically sound.\n\nThe solution proceeds as follows. The core principle is the calculation of the molecular electric dipole moment vector, $\\boldsymbol{\\mu}$, within a point-charge approximation. The provided formula is\n$$\n\\boldsymbol{\\mu} \\;=\\; \\sum_{i=1}^{N} q_i\\, \\mathbf{R}_i\n$$\nwhere $N$ is the number of atoms, $q_i$ are the net atomic partial charges in units of the elementary charge $e$, and $\\mathbf{R}_i$ are the corresponding atomic position vectors in ångströms ($\\mathring{\\mathrm{A}}$). The resulting dipole moment vector $\\boldsymbol{\\mu}$ will have units of $\\mathrm{e\\cdot\\mathring{A}}$.\n\nFor each test case, we must first establish the Cartesian coordinates ($\\mathbf{R}_i$) for the three atoms of the molecule. The problem specifies the coordinate system and atom placement.\n\nFor a bent triatomic molecule, such as ozone in Cases $1$ and $2$, the central atom is placed at the origin, $\\mathbf{R}_{\\text{cent}} = (0,0,0)$. The two terminal atoms are placed symmetrically in the $xy$-plane at a distance $L$ from the origin, with a bond angle $\\theta$ between them. The positions are given as:\n$$\n\\mathbf{R}_{\\text{term},1} = \\big(L \\cos(\\theta/2),\\, L \\sin(\\theta/2),\\, 0\\big)\n$$\n$$\n\\mathbf{R}_{\\text{term},2} = \\big(L \\cos(\\theta/2),\\, -L \\sin(\\theta/2),\\, 0\\big)\n$$\nIt is critical to note that trigonometric functions in computational libraries typically require angles in radians, so the given angle $\\theta$ in degrees must be converted via the relation $1^{\\circ} = \\pi/180$ radians.\n\nFor a linear symmetric triatomic molecule, as in Case $3$, a specific coordinate system is also provided: the central atom is at the origin, $\\mathbf{R}_{\\text{cent}}=(0,0,0)$, and the two terminal atoms are at $\\mathbf{R}_{\\text{term},1}=(+L,0,0)$ and $\\mathbf{R}_{\\text{term},2}=(-L,0,0)$.\n\nThe partial charges $q_i$ must be assigned to the correct atoms. For the symmetric triatomic molecules considered ($\\mathrm{O}_3$), there is one unique central atom and two chemically equivalent terminal atoms. The provided charge sets, e.g., $\\{+0.300,\\,-0.150,\\,-0.150\\}$, contain one unique value and two identical values. By chemical principles, the unique charge corresponds to the central atom, and the identical charges correspond to the two terminal atoms.\n\nWith the coordinates $\\mathbf{R}_i$ and charges $q_i$ established, the components of the dipole moment vector, $\\boldsymbol{\\mu} = (\\mu_x, \\mu_y, \\mu_z)$, are calculated:\n$$\n\\mu_x = \\sum_{i=1}^{3} q_i R_{i,x}\n$$\n$$\n\\mu_y = \\sum_{i=1}^{3} q_i R_{i,y}\n$$\n$$\n\\mu_z = \\sum_{i=1}^{3} q_i R_{i,z}\n$$\nFor the bent case, with $\\mathbf{R}_{\\text{cent}} = \\mathbf{0}$, $q_1=q_{\\text{cent}}$, and $q_2=q_3=q_{\\text{term}}$, this simplifies. The $y$ and $z$ components become zero due to symmetry:\n$$\n\\mu_y = q_{\\text{term}}(L \\sin(\\theta/2)) + q_{\\text{term}}(-L \\sin(\\theta/2)) = 0\n$$\n$$\n\\mu_z = 0\n$$\nThe only non-zero component is $\\mu_x$:\n$$\n\\mu_x = q_{\\text{cent}}(0) + q_{\\text{term}}(L \\cos(\\theta/2)) + q_{\\text{term}}(L \\cos(\\theta/2)) = 2 q_{\\text{term}} L \\cos(\\theta/2)\n$$\nFor the linear case, the calculation is even simpler. With $q_2=q_3=q_{\\text{term}}$:\n$$\n\\mu_x = q_{\\text{term}}(+L) + q_{\\text{term}}(-L) = 0\n$$\nThus, for the linear symmetric case, $\\boldsymbol{\\mu} = \\mathbf{0}$, as required by symmetry.\n\nAfter computing the vector $\\boldsymbol{\\mu}$ in units of $\\mathrm{e\\cdot\\mathring{A}}$, its magnitude $|\\boldsymbol{\\mu}|$ is found using the Euclidean norm:\n$$\n|\\boldsymbol{\\mu}| = \\sqrt{\\mu_x^2 + \\mu_y^2 + \\mu_z^2}\n$$\nThe problem requires the magnitude in units of Debye ($\\mathrm{D}$). The conversion is performed using the supplied factor:\n$$\n|\\boldsymbol{\\mu}|_{\\mathrm{D}} = |\\boldsymbol{\\mu}|_{\\mathrm{e\\cdot\\mathring{A}}} \\times 4.80320427~\\mathrm{D/(e\\cdot\\mathring{A})}\n$$\nThis calculation is performed for both the Hartree-Fock (HF) and the correlated charge sets, yielding $\\mu_{\\mathrm{HF}}$ and $\\mu_{\\mathrm{corr}}$, respectively. Finally, the absolute difference is computed:\n$$\n\\Delta = |\\mu_{\\mathrm{HF}} - \\mu_{\\mathrm{corr}}|\n$$\nAll three resulting values ($\\mu_{\\mathrm{HF}}$, $\\mu_{\\mathrm{corr}}$, $\\Delta$) for each case are rounded to six decimal places. The final program implements this complete procedure for all test cases and formats the output as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes molecular dipole moment magnitudes for a series of test cases\n    based on a point-charge approximation.\n    \"\"\"\n    \n    # Conversion factor from e*Angstrom to Debye\n    CONVERSION_FACTOR = 4.80320427\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (L, theta, HF_charges, Correlated_charges)\n    # Charges are ordered as (central, terminal1, terminal2).\n    test_cases = [\n        # Case 1 (ozone, bent)\n        (1.278, 116.8, (0.300, -0.150, -0.150), (0.165, -0.0825, -0.0825)),\n        # Case 2 (ozone, bent)\n        (1.278, 116.8, (0.400, -0.200, -0.200), (0.180, -0.090, -0.090)),\n        # Case 3 (linear symmetric triatomic)\n        (1.160, 180.0, (1.000, -0.500, -0.500), (1.000, -0.500, -0.500)),\n    ]\n\n    def calculate_dipole_magnitude_eA(L, theta, charges):\n        \"\"\"\n        Calculates the magnitude of the dipole moment in e*Angstrom.\n\n        Args:\n            L (float): Bond length in Angstrom.\n            theta (float): Bond angle in degrees.\n            charges (tuple): A tuple of three partial charges (q_central, q_term1, q_term2).\n\n        Returns:\n            float: The dipole moment magnitude in e*Angstrom.\n        \"\"\"\n        q_cent, q_term1, q_term2 = charges\n\n        if np.isclose(theta, 180.0):\n            # Linear geometry as specified\n            R_cent = np.array([0.0, 0.0, 0.0])\n            R_term1 = np.array([L, 0.0, 0.0])\n            R_term2 = np.array([-L, 0.0, 0.0])\n        else:\n            # Bent geometry as specified\n            theta_rad_half = np.radians(theta / 2.0)\n            R_cent = np.array([0.0, 0.0, 0.0])\n            R_term1 = np.array([L * np.cos(theta_rad_half), L * np.sin(theta_rad_half), 0.0])\n            R_term2 = np.array([L * np.cos(theta_rad_half), -L * np.sin(theta_rad_half), 0.0])\n            \n        # Define charge and position vectors\n        charge_vector = np.array([q_cent, q_term1, q_term2])\n        position_matrix = np.array([R_cent, R_term1, R_term2])\n\n        # Calculate dipole moment vector sum(q_i * R_i)\n        # Transpose position_matrix to multiply charges with corresponding x,y,z coordinates\n        mu_vector = np.dot(charge_vector, position_matrix)\n        \n        # Calculate magnitude of the dipole moment vector\n        mu_magnitude = np.linalg.norm(mu_vector)\n        \n        return mu_magnitude\n\n    all_results = []\n    for case in test_cases:\n        L, theta, hf_charges, corr_charges = case\n        \n        # Calculate HF dipole magnitude\n        mu_hf_eA = calculate_dipole_magnitude_eA(L, theta, hf_charges)\n        mu_hf_D = mu_hf_eA * CONVERSION_FACTOR\n        \n        # Calculate correlated dipole magnitude\n        mu_corr_eA = calculate_dipole_magnitude_eA(L, theta, corr_charges)\n        mu_corr_D = mu_corr_eA * CONVERSION_FACTOR\n        \n        # Calculate the absolute difference\n        delta = abs(mu_hf_D - mu_corr_D)\n        \n        # Append formatted results as strings with 6 decimal places\n        all_results.append([\n            f\"{mu_hf_D:.6f}\",\n            f\"{mu_corr_D:.6f}\",\n            f\"{delta:.6f}\"\n        ])\n\n    # Format the final output string as a list of lists without extra spaces\n    formatted_sublists = []\n    for sublist in all_results:\n        formatted_sublists.append(f\"[{','.join(sublist)}]\")\n    final_output_string = f\"[{','.join(formatted_sublists)}]\"\n\n    print(final_output_string)\n\nsolve()\n```", "id": "2451531"}, {"introduction": "Knowing when a simple, single-reference calculation is sufficient versus when a more complex multi-reference method is required is a crucial decision in computational chemistry. In this practice, you will implement the Coupled Cluster T1 diagnostic, a widely used heuristic for quantifying the degree of static correlation in a system. Calculating and interpreting this value from model data will equip you with a key practical skill for assessing the reliability of your calculations and choosing the appropriate theoretical approach [@problem_id:2454438].", "problem": "You are given a simplified, first-principles definition of the coupled cluster singles diagnostic (the T1 diagnostic) to assess the onset of static (nondynamic) electron correlation in substituted organic diradicals. Consider a fixed, noncanonical orthonormal orbital basis in which the off-diagonal Fock matrix elements between occupied and virtual subspaces need not vanish. For each system, let the set of single excitations be indexed by occupied indices $i$ and virtual indices $a$. The approximate single-excitation amplitudes are given by\n$$\nt_i^a \\approx \\frac{F_{ai}}{\\varepsilon_a - \\varepsilon_i},\n$$\nwhere $F_{ai}$ is the off-diagonal Fock matrix element in hartree and $\\varepsilon_p$ are the orbital energies in hartree. Define the T1 diagnostic as\n$$\nT_1 \\equiv \\frac{\\left(\\sum_{i,a} \\left(t_i^a\\right)^2\\right)^{1/2}}{\\sqrt{n_{\\text{occ}}}},\n$$\nwhere $n_{\\text{occ}}$ is the number of occupied spin-orbitals. In the context of open-shell diradicals, use the conventional heuristic threshold\n$$\n\\tau = 0.04,\n$$\nand declare that the onset of static correlation is predicted if and only if $T_1 \\ge \\tau$. The diagnostic $T_1$ is dimensionless.\n\nYour task is to implement a program that, for each test case, computes $T_1$ using the formulas above and decides whether static correlation is predicted to onset under the stated criterion. All orbital energies and Fock matrix elements must be treated in hartree. The final output for each test case must contain the value of $T_1$ rounded to five decimal places (dimensionless) and the associated boolean decision for onset of static correlation.\n\nTest suite (each test case specifies $n_{\\text{occ}}$, a list of $F_{ai}$ values, and a list of corresponding energy gaps $\\Delta_{ia} = \\varepsilon_a - \\varepsilon_i$; all energies are in hartree and all gaps satisfy $\\Delta_{ia} > 0$):\n\n- Case A (moderate couplings, sizable gaps): $n_{\\text{occ}} = 5$, $F_{ai} = [0.02, 0.015, 0.01]$, $\\Delta_{ia} = [0.5, 0.6, 0.8]$.\n- Case B (borderline near the threshold): $n_{\\text{occ}} = 2$, $F_{ai} = [0.01, 0.01]$, $\\Delta_{ia} = [0.25, 0.25]$.\n- Case C (small gaps and stronger couplings): $n_{\\text{occ}} = 6$, $F_{ai} = [0.03, 0.025, 0.02, 0.02]$, $\\Delta_{ia} = [0.15, 0.2, 0.2, 0.25]$.\n- Case D (no coupling): $n_{\\text{occ}} = 4$, $F_{ai} = [0.0, 0.0]$, $\\Delta_{ia} = [0.3, 0.4]$.\n- Case E (single near-degenerate excitation): $n_{\\text{occ}} = 4$, $F_{ai} = [0.005]$, $\\Delta_{ia} = [0.05]$.\n\nRequirements:\n\n- Compute $t_i^a$ using $t_i^a = F_{ai}/\\Delta_{ia}$ for each provided pair, then compute $T_1$ as defined above for each case.\n- For each case, compare $T_1$ to $\\tau = 0.04$ and decide if static correlation onset is predicted by the criterion $T_1 \\ge \\tau$.\n- The final program output must be a single line containing a comma-separated list enclosed in square brackets. The list must contain, for each case in the order A through E, the rounded $T_1$ value (as a float rounded to five decimal places) immediately followed by the boolean decision (using the tokens True or False). For example, the output format must be\n\"[T1_A,onset_A,T1_B,onset_B,T1_C,onset_C,T1_D,onset_D,T1_E,onset_E]\".", "solution": "The problem statement has been validated and is deemed valid. It is scientifically sound, arithmetically well-posed, and provides all necessary data for a unique and verifiable solution. The problem entails the computation of the coupled cluster T1 diagnostic, a standard measure in quantum chemistry for assessing the importance of static electron correlation.\n\nThe governing equations are as follows. The single-excitation amplitudes, $t_i^a$, which measure the mixing between the reference determinant and singly excited determinants, are approximated from first-order perturbation theory as:\n$$\nt_i^a \\approx \\frac{F_{ai}}{\\varepsilon_a - \\varepsilon_i} = \\frac{F_{ai}}{\\Delta_{ia}}\n$$\nHere, $F_{ai}$ represents the off-diagonal element of the Fock matrix between an occupied spin-orbital $i$ and a virtual spin-orbital $a$, and $\\Delta_{ia} = \\varepsilon_a - \\varepsilon_i$ is the corresponding orbital energy difference. All quantities are in atomic units (hartree).\n\nThe T1 diagnostic is defined as the norm of the vector of single-excitation amplitudes, normalized by the square root of the number of occupied orbitals, $n_{\\text{occ}}$:\n$$\nT_1 \\equiv \\frac{\\left(\\sum_{i,a} \\left(t_i^a\\right)^2\\right)^{1/2}}{\\sqrt{n_{\\text{occ}}}}\n$$\nThis expression is equivalent to $T_1 = ||\\mathbf{t}||_2 / \\sqrt{n_{\\text{occ}}}$, where $||\\mathbf{t}||_2$ is the Euclidean norm of the vector of amplitudes $\\mathbf{t} = (t_1, t_2, \\ldots)$.\n\nStatic correlation is determined to be significant if the diagnostic value exceeds a predefined threshold, $\\tau$. The problem specifies a threshold conventional for open-shell diradicals:\n$$\n\\tau = 0.04\n$$\nThe condition for the onset of static correlation is therefore $T_1 \\ge \\tau$.\n\nWe proceed with the calculation for each test case.\n\nCase A:\nGiven: $n_{\\text{occ}} = 5$, $F_{ai} = [0.02, 0.015, 0.01]$, $\\Delta_{ia} = [0.5, 0.6, 0.8]$.\nThe amplitudes are computed as:\n$t_1 = 0.02 / 0.5 = 0.04$\n$t_2 = 0.015 / 0.6 = 0.025$\n$t_3 = 0.01 / 0.8 = 0.0125$\nThe sum of squared amplitudes is $\\sum_{i,a} (t_i^a)^2 = (0.04)^2 + (0.025)^2 + (0.0125)^2 = 0.0016 + 0.000625 + 0.00015625 = 0.00238125$.\nThe T1 diagnostic is:\n$$\nT_1 = \\frac{\\sqrt{0.00238125}}{\\sqrt{5}} \\approx \\frac{0.04880}{2.23607} \\approx 0.02182\n$$\nSince $0.02182 < 0.04$, the onset of static correlation is not predicted. Result: $(0.02182, \\text{False})$.\n\nCase B:\nGiven: $n_{\\text{occ}} = 2$, $F_{ai} = [0.01, 0.01]$, $\\Delta_{ia} = [0.25, 0.25]$.\nThe amplitudes are:\n$t_1 = 0.01 / 0.25 = 0.04$\n$t_2 = 0.01 / 0.25 = 0.04$\nThe sum of squared amplitudes is $\\sum_{i,a} (t_i^a)^2 = (0.04)^2 + (0.04)^2 = 0.0016 + 0.0016 = 0.0032$.\nThe T1 diagnostic is:\n$$\nT_1 = \\frac{\\sqrt{0.0032}}{\\sqrt{2}} = \\sqrt{\\frac{0.0032}{2}} = \\sqrt{0.0016} = 0.04\n$$\nSince $0.04 \\ge 0.04$, the onset of static correlation is predicted. Result: $(0.04000, \\text{True})$.\n\nCase C:\nGiven: $n_{\\text{occ}} = 6$, $F_{ai} = [0.03, 0.025, 0.02, 0.02]$, $\\Delta_{ia} = [0.15, 0.2, 0.2, 0.25]$.\nThe amplitudes are:\n$t_1 = 0.03 / 0.15 = 0.2$\n$t_2 = 0.025 / 0.2 = 0.125$\n$t_3 = 0.02 / 0.2 = 0.1$\n$t_4 = 0.02 / 0.25 = 0.08$\nThe sum of squared amplitudes is $\\sum_{i,a} (t_i^a)^2 = (0.2)^2 + (0.125)^2 + (0.1)^2 + (0.08)^2 = 0.04 + 0.015625 + 0.01 + 0.0064 = 0.072025$.\nThe T1 diagnostic is:\n$$\nT_1 = \\frac{\\sqrt{0.072025}}{\\sqrt{6}} = \\frac{0.268375}{2.44949} \\approx 0.10956\n$$\nSince $0.10956 \\ge 0.04$, the onset of static correlation is predicted. Result: $(0.10956, \\text{True})$.\n\nCase D:\nGiven: $n_{\\text{occ}} = 4$, $F_{ai} = [0.0, 0.0]$, $\\Delta_{ia} = [0.3, 0.4]$.\nThe off-diagonal Fock matrix elements are zero, so all amplitudes are zero: $t_i^a = 0$.\nConsequently, the sum of squared amplitudes is $\\sum_{i,a} (t_i^a)^2 = 0$.\nThe T1 diagnostic is:\n$$\nT_1 = \\frac{\\sqrt{0}}{\\sqrt{4}} = 0.0\n$$\nSince $0.0 < 0.04$, the onset of static correlation is not predicted. Result: $(0.00000, \\text{False})$.\n\nCase E:\nGiven: $n_{\\text{occ}} = 4$, $F_{ai} = [0.005]$, $\\Delta_{ia} = [0.05]$.\nThere is a single significant excitation. The amplitude is:\n$t_1 = 0.005 / 0.05 = 0.1$\nThe sum of squared amplitudes is $\\sum_{i,a} (t_i^a)^2 = (0.1)^2 = 0.01$.\nThe T1 diagnostic is:\n$$\nT_1 = \\frac{\\sqrt{0.01}}{\\sqrt{4}} = \\frac{0.1}{2.0} = 0.05\n$$\nSince $0.05 \\ge 0.04$, the onset of static correlation is predicted. Result: $(0.05000, \\text{True})$.\n\nThe calculations are now complete and will be implemented programmatically as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the T1 diagnostic for several test cases and determines\n    if static correlation onset is predicted.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {'id': 'A', 'n_occ': 5, 'F_ai': [0.02, 0.015, 0.01], 'Delta_ia': [0.5, 0.6, 0.8]},\n        {'id': 'B', 'n_occ': 2, 'F_ai': [0.01, 0.01], 'Delta_ia': [0.25, 0.25]},\n        {'id': 'C', 'n_occ': 6, 'F_ai': [0.03, 0.025, 0.02, 0.02], 'Delta_ia': [0.15, 0.2, 0.2, 0.25]},\n        {'id': 'D', 'n_occ': 4, 'F_ai': [0.0, 0.0], 'Delta_ia': [0.3, 0.4]},\n        {'id': 'E', 'n_occ': 4, 'F_ai': [0.005], 'Delta_ia': [0.05]},\n    ]\n    \n    # Heuristic threshold for static correlation onset\n    tau = 0.04\n    \n    results = []\n    \n    for case in test_cases:\n        n_occ = case['n_occ']\n        # Convert lists to numpy arrays for vectorized operations\n        F_ai = np.array(case['F_ai'])\n        Delta_ia = np.array(case['Delta_ia'])\n        \n        # Calculate the single-excitation amplitudes t_i^a\n        # Handle the case where Delta_ia might contain zeros to avoid division by zero,\n        # although the problem statement guarantees Delta_ia > 0.\n        # Adding a small epsilon or specific check is good practice but not strictly\n        # necessary given the problem constraints.\n        t_ia = F_ai / Delta_ia\n        \n        # Calculate the sum of squares of the amplitudes\n        sum_sq_t = np.sum(t_ia**2)\n        \n        # Calculate the T1 diagnostic\n        # Denominator will not be zero as n_occ is always a positive integer.\n        T1 = np.sqrt(sum_sq_t) / np.sqrt(n_occ)\n        \n        # Compare with the threshold to get the boolean decision\n        onset_predicted = T1 >= tau\n        \n        # Append the formatted results, rounded to five decimal places\n        results.append(f\"{T1:.5f}\")\n        results.append(str(onset_predicted))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2454438"}, {"introduction": "To truly understand static correlation, we must look at its origin: the near-degeneracy of electronic states that occurs during processes like bond breaking and formation. This exercise employs a powerful, yet conceptually simple, two-state model Hamiltonian to map out the potential energy surface for a chemical reaction. By analyzing how the ground state electronic character changes along the reaction coordinate, you will build an intuitive physical picture of an 'avoided crossing' and see precisely why static correlation becomes dominant at the transition state [@problem_id:2454410].", "problem": "Consider a simplified two-configuration quantum model for the insertion reaction $Be + H_{2} \\rightarrow H\\text{-}Be\\text{-}H$. Let the geometry be parameterized by a one-dimensional reaction coordinate $s$ (dimensionless) and the bending angle $\\theta$ (in radians). In a diabatic basis of two dominant electronic configurations, the electronic Hamiltonian is represented by the symmetric $2 \\times 2$ matrix\n$$\nH(s,\\theta) = \\begin{pmatrix}\nE_{1}(s,\\theta) & V_{12}(s,\\theta) \\\\\nV_{12}(s,\\theta) & E_{2}(s,\\theta)\n\\end{pmatrix},\n$$\nwith the following model components in dimensionless units:\n$$\nE_{1}(s,\\theta) = k\\,(s - s_{r})^{2} + b_{1}\\,(\\theta - \\pi)^{2},\n$$\n$$\nE_{2}(s,\\theta) = k\\,(s - s_{i})^{2} + b_{2}\\,(\\theta - \\pi)^{2} + \\delta,\n$$\n$$\nV_{12}(s,\\theta) = V_{0}\\,\\exp\\!\\big(-\\alpha\\,(s - s_{c})^{2}\\big)\\,\\exp\\!\\big(-\\gamma\\,(\\theta - \\pi)^{2}\\big).\n$$\nUse the fixed parameter values $k = 1.0$, $s_{r} = 3.0$, $s_{i} = 1.2$, $b_{1} = 0.10$, $b_{2} = 0.30$, $\\delta = 0.20$, $V_{0} = 0.05$, $\\alpha = 2.0$, $s_{c} = 2.0$, and $\\gamma = 1.0$. All energies and couplings are in the same arbitrary, dimensionless unit.\n\nFor each geometry $(s,\\theta)$, let the normalized ground-state eigenvector of $H(s,\\theta)$ in the diabatic basis be $|\\Psi_{0}\\rangle = c_{1}|\\phi_{1}\\rangle + c_{2}|\\phi_{2}\\rangle$ with $|c_{1}|^{2} + |c_{2}|^{2} = 1$. Define the static correlation index $\\mathrm{SCI}(s,\\theta)$ by\n$$\n\\mathrm{SCI}(s,\\theta) = 4\\,|c_{1}|^{2}\\,|c_{2}|^{2},\n$$\nwhich takes values in $[0,1]$ and attains its maximum $1$ at perfect two-configuration mixing $|c_{1}|^{2} = |c_{2}|^{2} = 1/2$.\n\nTask: For the test suite of geometries listed below, compute $\\mathrm{SCI}(s,\\theta)$ for each case, rounded to exactly three decimal places. Then determine the zero-based index of the case with the largest $\\mathrm{SCI}$ (if multiple cases share the same maximum, choose the smallest index). Report all $\\mathrm{SCI}$ values and the index of the maximum as a single list on one line as specified in the final output format. Angles must be treated in radians, and all outputs are dimensionless.\n\nTest suite (ordered list of $(s,\\theta)$):\n- Case $0$: $(s=\\;3.0,\\;\\theta=\\;\\pi)$\n- Case $1$: $(s=\\;2.044,\\;\\theta=\\;\\pi)$\n- Case $2$: $(s=\\;2.044,\\;\\theta=\\;2.2)$\n- Case $3$: $(s=\\;1.2,\\;\\theta=\\;\\pi)$\n- Case $4$: $(s=\\;2.3,\\;\\theta=\\;\\pi)$\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with the five $\\mathrm{SCI}$ values in order followed by the integer index of the maximum. For example, the output must have the form $[\\mathrm{SCI}_{0},\\mathrm{SCI}_{1},\\mathrm{SCI}_{2},\\mathrm{SCI}_{3},\\mathrm{SCI}_{4},i_{\\max}]$, where each $\\mathrm{SCI}_{j}$ is a float rounded to exactly three decimal places and $i_{\\max}$ is an integer.", "solution": "We model the insertion reaction $Be + H_{2} \\rightarrow H\\text{-}Be\\text{-}H$ using a two-configuration diabatic Hamiltonian $H(s,\\theta)$, where $s$ is a dimensionless reaction coordinate and $\\theta$ is the bending angle in radians. The Hamiltonian is\n$$\nH(s,\\theta) = \\begin{pmatrix}\nE_{1}(s,\\theta) & V_{12}(s,\\theta) \\\\\nV_{12}(s,\\theta) & E_{2}(s,\\theta)\n\\end{pmatrix},\n$$\nwith\n$$\nE_{1}(s,\\theta) = k\\,(s - s_{r})^{2} + b_{1}\\,(\\theta - \\pi)^{2}, \\quad\nE_{2}(s,\\theta) = k\\,(s - s_{i})^{2} + b_{2}\\,(\\theta - \\pi)^{2} + \\delta,\n$$\n$$\nV_{12}(s,\\theta) = V_{0}\\,\\exp\\!\\big(-\\alpha\\,(s - s_{c})^{2}\\big)\\,\\exp\\!\\big(-\\gamma\\,(\\theta - \\pi)^{2}\\big),\n$$\nand fixed parameters $k = 1.0$, $s_{r} = 3.0$, $s_{i} = 1.2$, $b_{1} = 0.10$, $b_{2} = 0.30$, $\\delta = 0.20$, $V_{0} = 0.05$, $\\alpha = 2.0$, $s_{c} = 2.0$, $\\gamma = 1.0$. This model captures the essential physics of near-degeneracy between two dominant electronic configurations along the insertion coordinate, with geometry-dependent coupling.\n\nTo identify static correlation from first principles, we diagonalize the real symmetric matrix $H(s,\\theta)$ to obtain eigenvalues $E_{-} \\le E_{+}$ and corresponding normalized eigenvectors. The lower (ground-state) eigenvector can be written in the diabatic basis as\n$$\n|\\Psi_{0} \\rangle = c_{1} |\\phi_{1} \\rangle + c_{2} |\\phi_{2} \\rangle,\n$$\nwith $|c_{1}|^{2} + |c_{2}|^{2} = 1$. The measure of static (also called nondynamic) correlation here is the degree of near-degeneracy-induced mixing between the two configurations, quantified by\n$$\n\\mathrm{SCI}(s,\\theta) = 4\\,|c_{1}|^{2}\\,|c_{2}|^{2}.\n$$\nThis follows directly from the two-configuration picture: when the diagonal gap $\\Delta(s,\\theta) = E_{1}(s,\\theta) - E_{2}(s,\\theta)$ approaches zero while $V_{12}(s,\\theta)$ is finite, the ground-state eigenvector mixes the diabatic configurations nearly equally, $|c_{1}|^{2} \\approx |c_{2}|^{2} \\approx 1/2$, giving $\\mathrm{SCI} \\approx 1$, which indicates strong static correlation. Conversely, when $|\\Delta(s,\\theta)| \\gg |V_{12}(s,\\theta)|$, the ground state is nearly a single configuration, so $|c_{1}|^{2} \\approx 1$ or $0$, and $\\mathrm{SCI} \\approx 0$, indicating weak static correlation dominated by dynamic correlation.\n\nAlgorithmic steps grounded in these principles:\n1. For each $(s,\\theta)$, evaluate $E_{1}(s,\\theta)$, $E_{2}(s,\\theta)$, and $V_{12}(s,\\theta)$ using the given parameter values.\n2. Form the symmetric matrix $H(s,\\theta)$ and compute its eigenvalues and normalized eigenvectors by solving the time-independent Schrödinger equation\n$$\nH(s,\\theta)\\,\\mathbf{c} = E\\,\\mathbf{c},\n$$\nwhere $\\mathbf{c} = (c_{1}, c_{2})^{\\top}$ for the ground state.\n3. Extract $|c_{1}|^{2}$ and $|c_{2}|^{2}$ from the ground-state eigenvector and compute\n$$\n\\mathrm{SCI}(s,\\theta) = 4\\,|c_{1}|^{2}\\,|c_{2}|^{2}.\n$$\n4. Round each $\\mathrm{SCI}$ to exactly three decimal places.\n5. Determine the zero-based index $i_{\\max}$ of the largest rounded or unrounded $\\mathrm{SCI}$; to avoid tie-breaking issues from rounding, it is principled to use the unrounded values for selecting the maximum and then apply the specified rounding for reporting, while selecting the smallest index in case of exact ties.\n\nPhysical interpretation on the provided test suite:\n- At $(s=\\;3.0,\\theta=\\;\\pi)$ and $(s=\\;1.2,\\theta=\\;\\pi)$, one diabatic surface is much lower than the other (large $|\\Delta|$ relative to $|V_{12}|$), so $|c_{1}|^{2}$ or $|c_{2}|^{2}$ is close to $1$, yielding $\\mathrm{SCI} \\approx 0$, which corresponds to weak static correlation.\n- Near $(s \\approx 2.044,\\theta=\\;\\pi)$, the diabatic surfaces are nearly degenerate ($\\Delta \\approx 0$) and the coupling is appreciable, giving nearly equal configuration mixing and hence $\\mathrm{SCI} \\approx 1$, which identifies the region of the potential energy surface with the strongest static correlation.\n- Slight deviations in $s$ or $\\theta$ from that region increase $|\\Delta|$ and decrease $|V_{12}|$, reducing the mixing and thereby lowering $\\mathrm{SCI}$.\n\nThe program implements these steps to compute and report the list $[\\mathrm{SCI}_{0},\\mathrm{SCI}_{1},\\mathrm{SCI}_{2},\\mathrm{SCI}_{3},\\mathrm{SCI}_{4},i_{\\max}]$ in the required single-line format, with angles in radians and all outputs in dimensionless units.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef hamiltonian(s, theta):\n    # Parameters (dimensionless)\n    k = 1.0\n    s_r = 3.0\n    s_i = 1.2\n    b1 = 0.10\n    b2 = 0.30\n    delta = 0.20\n    V0 = 0.05\n    alpha = 2.0\n    s_c = 2.0\n    gamma = 1.0\n\n    E1 = k * (s - s_r) ** 2 + b1 * (theta - np.pi) ** 2\n    E2 = k * (s - s_i) ** 2 + b2 * (theta - np.pi) ** 2 + delta\n    V12 = V0 * np.exp(-alpha * (s - s_c) ** 2) * np.exp(-gamma * (theta - np.pi) ** 2)\n\n    H = np.array([[E1, V12],\n                  [V12, E2]], dtype=float)\n    return H\n\ndef static_correlation_index(s, theta):\n    H = hamiltonian(s, theta)\n    # Diagonalize symmetric 2x2 Hamiltonian\n    evals, evecs = np.linalg.eigh(H)\n    # Ground state eigenvector is column corresponding to smallest eigenvalue\n    idx_min = np.argmin(evals)\n    vec = evecs[:, idx_min]\n    # Normalize defensively (should already be normalized by eigh)\n    vec = vec / np.linalg.norm(vec)\n    p1 = float(vec[0] ** 2)  # |c1|^2\n    p2 = 1.0 - p1            # |c2|^2\n    sci = 4.0 * p1 * p2\n    return sci\n\ndef solve():\n    # Define the test cases from the problem statement: (s, theta) with theta in radians.\n    test_cases = [\n        (3.0, np.pi),     # Case 0\n        (2.044, np.pi),   # Case 1\n        (2.044, 2.2),     # Case 2\n        (1.2, np.pi),     # Case 3\n        (2.3, np.pi),     # Case 4\n    ]\n\n    sci_values = []\n    for (s, theta) in test_cases:\n        sci = static_correlation_index(s, theta)\n        sci_values.append(sci)\n\n    # Determine index of maximum SCI using unrounded values; tie broken by first occurrence.\n    imax = int(np.argmax(sci_values))\n\n    # Round SCI values to exactly three decimals for output.\n    sci_strings = [f\"{v:.3f}\" for v in sci_values]\n\n    # Build final output list: five SCI values followed by the integer index.\n    output_items = sci_strings + [str(imax)]\n    print(f\"[{','.join(output_items)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2454410"}]}