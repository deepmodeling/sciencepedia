{"hands_on_practices": [{"introduction": "Before diving into numerical computations, it is crucial to grasp the analytical origins of quantum uncertainty. This exercise guides you through a foundational derivation of the commutator between an orbital angular momentum component, $\\hat{L}_x$, and a position operator, $\\hat{y}$. By working through this calculation [@problem_id:2452621], you will see directly how the non-commutativity of these operators arises from their definitions, providing a concrete mathematical basis for the Heisenberg Uncertainty Principle.", "problem": "In the quantum mechanical description used in computational chemistry for electrons in molecular fields, consider a non-relativistic particle in three-dimensional space with position operators $\\hat{x}$, $\\hat{y}$, $\\hat{z}$ and canonical momentum operators $\\hat{p}_x$, $\\hat{p}_y$, $\\hat{p}_z$ acting on square-integrable wavefunctions. The fundamental canonical commutation relations are $[\\hat{r}_i,\\hat{p}_j]=i\\hbar\\,\\delta_{ij}$ and $[\\hat{r}_i,\\hat{r}_j]=[\\hat{p}_i,\\hat{p}_j]=0$, where $i,j\\in\\{x,y,z\\}$, $\\delta_{ij}$ is the Kronecker delta, and $\\hbar$ is the reduced Planck constant. The $x$-component of the orbital angular momentum operator is defined by $\\hat{L}_x=\\hat{y}\\hat{p}_z-\\hat{z}\\hat{p}_y$.\n\nCompute the commutator $[\\hat{L}_x,\\hat{y}]$ exactly in closed form, and interpret the result in the context of the Heisenberg Uncertainty Principle (HUP) for the simultaneous specification of $\\hat{L}_x$ and $\\hat{y}$ in molecular electronic structure calculations. \n\nAnswer specification:\n- Provide your final reported answer as a single, fully simplified analytic expression.\n- Do not include any explanatory text, inequalities, or units in the final reported answer.", "solution": "The first task is to compute the commutator $[\\hat{L}_x, \\hat{y}]$. We begin by substituting the definition of the operator $\\hat{L}_x$:\n$$\n[\\hat{L}_x, \\hat{y}] = [\\hat{y}\\hat{p}_z - \\hat{z}\\hat{p}_y, \\hat{y}]\n$$\nUsing the linearity property of the commutator, which states that $[\\hat{A} - \\hat{B}, \\hat{C}] = [\\hat{A}, \\hat{C}] - [\\hat{B}, \\hat{C}]$, we expand the expression:\n$$\n[\\hat{L}_x, \\hat{y}] = [\\hat{y}\\hat{p}_z, \\hat{y}] - [\\hat{z}\\hat{p}_y, \\hat{y}]\n$$\nNext, we apply the commutator identity for products, $[\\hat{A}\\hat{B}, \\hat{C}] = \\hat{A}[\\hat{B}, \\hat{C}] + [\\hat{A}, \\hat{C}]\\hat{B}$, to each term.\n\nFor the first term, $[\\hat{y}\\hat{p}_z, \\hat{y}]$, let $\\hat{A} = \\hat{y}$ and $\\hat{B} = \\hat{p}_z$ and $\\hat{C} = \\hat{y}$:\n$$\n[\\hat{y}\\hat{p}_z, \\hat{y}] = \\hat{y}[\\hat{p}_z, \\hat{y}] + [\\hat{y}, \\hat{y}]\\hat{p}_z\n$$\nWe evaluate the fundamental commutators. From the provided relations, $[\\hat{r}_i, \\hat{r}_j] = 0$, so $[\\hat{y}, \\hat{y}] = 0$. Also, $[\\hat{r}_i, \\hat{p}_j] = i\\hbar\\delta_{ij}$, which implies $[\\hat{p}_j, \\hat{r}_i] = -i\\hbar\\delta_{ij}$. Here, $i=y$ and $j=z$, so $\\delta_{yz} = 0$. Thus, $[\\hat{p}_z, \\hat{y}] = -i\\hbar\\delta_{zy} = 0$.\nSubstituting these results:\n$$\n[\\hat{y}\\hat{p}_z, \\hat{y}] = \\hat{y}(0) + (0)\\hat{p}_z = 0\n$$\n\nFor the second term, $-[\\hat{z}\\hat{p}_y, \\hat{y}]$, let $\\hat{A} = \\hat{z}$ and $\\hat{B} = \\hat{p}_y$ and $\\hat{C} = \\hat{y}$:\n$$\n-[\\hat{z}\\hat{p}_y, \\hat{y}] = -(\\hat{z}[\\hat{p}_y, \\hat{y}] + [\\hat{z}, \\hat{y}]\\hat{p}_y)\n$$\nWe evaluate the fundamental commutators. Position operators commute, so $[\\hat{z}, \\hat{y}] = 0$. For $[\\hat{p}_y, \\hat{y}]$, we have $[\\hat{p}_j, \\hat{r}_i]$ with $i=y$ and $j=y$. So $[\\hat{p}_y, \\hat{y}] = -i\\hbar\\delta_{yy} = -i\\hbar$.\nSubstituting these results:\n$$\n-[\\hat{z}\\hat{p}_y, \\hat{y}] = -(\\hat{z}(-i\\hbar) + (0)\\hat{p}_y) = -(-i\\hbar\\hat{z}) = i\\hbar\\hat{z}\n$$\nCombining the results for the two terms gives the final expression for the commutator:\n$$\n[\\hat{L}_x, \\hat{y}] = 0 + i\\hbar\\hat{z} = i\\hbar\\hat{z}\n$$\nThe second task is to interpret this result in the context of the Heisenberg Uncertainty Principle (HUP). The generalized uncertainty principle for two observables represented by Hermitian operators $\\hat{A}$ and $\\hat{B}$ states that the product of their standard deviations, $\\sigma_A$ and $\\sigma_B$, must satisfy the inequality:\n$$\n\\sigma_A \\sigma_B \\ge \\frac{1}{2} |\\langle [\\hat{A}, \\hat{B}] \\rangle|\n$$\nwhere $\\langle \\cdot \\rangle$ denotes the expectation value in a given quantum state. In our case, $\\hat{A} = \\hat{L}_x$ and $\\hat{B} = \\hat{y}$. The commutator is $[\\hat{L}_x, \\hat{y}] = i\\hbar\\hat{z}$. The uncertainty relation is therefore:\n$$\n\\sigma_{L_x} \\sigma_y \\ge \\frac{1}{2} |\\langle i\\hbar\\hat{z} \\rangle| = \\frac{\\hbar}{2} |\\langle \\hat{z} \\rangle|\n$$\nSince the commutator $[\\hat{L}_x, \\hat{y}]$ is not zero (it is the operator $i\\hbar\\hat{z}$), the observables corresponding to $\\hat{L}_x$ and $\\hat{y}$ do not commute. According to the principles of quantum mechanics, non-commuting observables cannot be simultaneously specified with arbitrary precision. This means there is no complete set of common eigenfunctions for $\\hat{L}_x$ and $\\hat{y}$.\n\nConsequently, it is fundamentally impossible to precisely know both the $x$-component of an electron's orbital angular momentum ($L_x$) and its position along the $y$-axis simultaneously. This has direct implications for computational chemistry. When we model electron distributions in molecules, such as in atomic or molecular orbitals, this uncertainty is an intrinsic feature. For example, an electron in a state with a well-defined value of $L_x$ (an eigenstate of $\\hat{L}_x$) must be delocalized in the $y$-$z$ plane. The derived relationship $\\sigma_{L_x} \\sigma_y \\ge \\frac{\\hbar}{2} |\\langle \\hat{z} \\rangle|$ quantifies this trade-off. The minimum uncertainty product is proportional to the magnitude of the average position of the particle along the $z$-axis. If a particle is, on average, located away from the $z=0$ plane (i.e., $|\\langle \\hat{z} \\rangle| > 0$), there is a non-zero lower bound on the product of uncertainties $\\sigma_{L_x} \\sigma_y$. This is a rigorous constraint that must be respected by any valid quantum mechanical model of molecular electronic structure.", "answer": "$$\\boxed{i\\hbar\\hat{z}}$$", "id": "2452621"}, {"introduction": "Quantum theory is often expressed with continuous operators, but computational chemistry operates on discrete grids. This practice bridges that gap by having you construct matrix representations of the position ($\\hat{x}$) and momentum ($\\hat{p}_x$) operators and test their fundamental commutation relation. You will discover that the famous relation $[\\hat{x}, \\hat{p}_x] = i\\hbar$ does not hold perfectly in a discrete world, allowing you to quantify the concept of discretization error [@problem_id:2452582], a critical consideration in all numerical quantum simulations.", "problem": "You are given a one-dimensional quantum particle in position representation discretized on a uniform grid. In atomic units (Hartree atomic units), the reduced Planck constant is set to $\\hbar = 1$. Consider the position operator $\\hat{x}$ acting by multiplication and the momentum operator $\\hat{p}_x$ approximated on the grid by a finite-difference representation of $-\\,\\mathrm{i}\\,\\hbar\\,\\partial/\\partial x$. Let the commutator be $[\\hat{x},\\hat{p}_x] = \\hat{x}\\hat{p}_x - \\hat{p}_x \\hat{x}$.\n\nYour task is to construct matrix representations of $\\hat{x}$ and $\\hat{p}_x$ on uniform grids and to quantify how closely the discrete commutator approximates the continuous result. Use the following definitions and conventions so that answers are unambiguous and reproducible:\n\n- The position operator $\\hat{x}$ is represented by a diagonal matrix $X$ with entries $x_j$ at grid points $x_j$.\n- The momentum operator $\\hat{p}_x$ is represented as $P = -\\,\\mathrm{i}\\,\\hbar\\,D$, where $D$ is a real finite-difference matrix approximating $\\partial/\\partial x$.\n- For periodic boundary conditions on an interval of length $L$, use $N$ points with spacing $\\Delta x = L/N$ and grid points $x_j = -L/2 + j\\,\\Delta x$ for $j \\in \\{0,\\dots,N-1\\}$, and use the second-order central-difference stencil at every point with wrap-around, i.e., $(D\\psi)_j = \\left(\\psi_{j+1} - \\psi_{j-1}\\right)/(2\\,\\Delta x)$ with indices understood modulo $N$.\n- For Dirichlet boundary conditions on the same interval, use $N$ points with spacing $\\Delta x = L/(N-1)$ and grid points $x_j = -L/2 + j\\,\\Delta x$ for $j \\in \\{0,\\dots,N-1\\}$. Use the second-order central-difference stencil at interior points $j \\in \\{1,\\dots,N-2\\}$, and the second-order one-sided stencils at the two boundaries: forward stencil at $j=0$, $(D\\psi)_0 = \\left(-\\tfrac{3}{2}\\psi_0 + 2\\psi_1 - \\tfrac{1}{2}\\psi_2\\right)/\\Delta x$, and backward stencil at $j=N-1$, $(D\\psi)_{N-1} = \\left(\\tfrac{3}{2}\\psi_{N-1} - 2\\psi_{N-2} + \\tfrac{1}{2}\\psi_{N-3}\\right)/\\Delta x$.\n- Quantify the deviation of the discrete commutator from the continuous identity by testing its action on a smooth normalized probe state. Use the normalized Gaussian probe $\\psi(x) \\propto \\exp\\!\\left[-\\dfrac{(x-x_0)^2}{2\\sigma^2}\\right]$ with $x_0 = 0$ and $\\sigma = L/10$. Normalize numerically with respect to the discrete $L^2$ norm defined by $\\lVert u \\rVert_2 = \\sqrt{\\sum_j |u_j|^2\\,\\Delta x}$ on the chosen grid. For any matrix $A$, define the relative action error on $\\psi$ by\n$$\nE(A;\\psi) = \\frac{\\lVert A\\,\\psi \\rVert_2}{\\hbar\\,\\lVert \\psi \\rVert_2}.\n$$\nUse $A = [\\hat{x},\\hat{p}_x] - \\mathrm{i}\\,\\hbar\\,I$, where $I$ is the identity matrix of compatible size. For Dirichlet boundary conditions, evaluate the action error only on interior components by restricting the vector resulting from $A\\,\\psi$ to indices $j \\in \\{1,\\dots,N-2\\}$ before forming the norm, while keeping the same $\\Delta x$ for the norm.\n- All outputs are dimensionless real numbers because of the normalization by $\\hbar$ and the use of atomic units.\n\nUsing these definitions, implement a program that computes the following three test cases:\n\n- Periodic, happy-path accuracy: $L = 10.0$ and $N = 101$. Compute the relative action error $E$ for periodic boundary conditions using the definition above. Report this value.\n- Dirichlet, boundary-sensitivity: $L = 10.0$ and $N = 21$. Compute the interior-only relative action error $E$ for Dirichlet boundary conditions as defined above. Report this value.\n- Convergence under refinement, periodic: $L = 10.0$ with two grids, $N_{\\text{coarse}} = 51$ and $N_{\\text{fine}} = 101$. Compute the periodic relative action errors $E_{\\text{coarse}}$ and $E_{\\text{fine}}$ and report the ratio $R = E_{\\text{coarse}}/E_{\\text{fine}}$.\n\nYour program should produce a single line of output containing the three results as a comma-separated list enclosed in square brackets, in the order listed above, i.e., $[E_{\\text{periodic}},E_{\\text{dirichlet}},R]$. The three reported quantities must be floating-point numbers with no unit.", "solution": "The fundamental principle underlying this problem is the canonical commutation relation (CCR) between the position operator $\\hat{x}$ and the momentum operator $\\hat{p}_x$ in one dimension:\n$$[\\hat{x}, \\hat{p}_x] = \\hat{x}\\hat{p}_x - \\hat{p}_x\\hat{x} = \\mathrm{i}\\hbar I$$\nwhere $\\hbar$ is the reduced Planck constant and $I$ is the identity operator. In atomic units, $\\hbar=1$, so the relation simplifies to $[\\hat{x}, \\hat{p}_x] = \\mathrm{i}I$. This relation is a cornerstone of quantum theory and is exact for the continuous operators.\n\nThis problem investigates how the CCR is compromised when operators are represented on a discrete grid, a common practice in computational chemistry and physics. The discrepancy arises because the derivative in the momentum operator, $\\hat{p}_x = -\\mathrm{i}\\hbar \\frac{\\partial}{\\partial x}$, is approximated using finite-difference methods. These approximations introduce truncation errors.\n\nThe solution involves constructing matrix representations for $\\hat{x}$ and $\\hat{p}_x$ and then computing the commutator of these matrices.\n\n**1. Matrix Representation of Operators**\n\nFor a grid of $N$ points $\\{x_j\\}$, a quantum state $\\psi(x)$ is represented by a vector $\\psi$ with components $\\psi_j = \\psi(x_j)$.\n\nThe position operator $\\hat{x}$ acts by multiplication, so its matrix representation, $X$, is a diagonal matrix where the diagonal elements are the grid point coordinates:\n$$X_{jj} = x_j \\quad \\text{and} \\quad X_{jk} = 0 \\text{ for } j \\neq k$$\n\nThe momentum operator $\\hat{p}_x$ is represented as $P = -\\mathrm{i}\\hbar D$, where $D$ is the matrix representation of the spatial derivative operator $\\frac{\\partial}{\\partial x}$. The structure of $D$ depends on the chosen boundary conditions and the finite-difference scheme.\n\n*   **Periodic Boundary Conditions**: For a grid of $N$ points with spacing $\\Delta x = L/N$, the second-order central-difference scheme with periodic wrap-around is used. The action on a state vector $\\psi$ is $(D\\psi)_j = (\\psi_{j+1} - \\psi_{j-1})/(2\\Delta x)$, where indices are modulo $N$. This results in a circulant matrix $D$ where for each row $j$:\n    $$D_{j, (j+1) \\pmod N} = \\frac{1}{2\\Delta x}, \\quad D_{j, (j-1) \\pmod N} = -\\frac{1}{2\\Delta x}$$\n    All other elements in the row are $0$.\n\n*   **Dirichlet Boundary Conditions**: For a grid of $N$ points with spacing $\\Delta x = L/(N-1)$, the matrix $D$ is nearly tridiagonal but with special stencils at the boundaries to maintain second-order accuracy.\n    *   For interior points ($j \\in \\{1, \\dots, N-2\\}$), the central-difference stencil is used:\n        $$D_{j, j+1} = \\frac{1}{2\\Delta x}, \\quad D_{j, j-1} = -\\frac{1}{2\\Delta x}$$\n    *   At the first point ($j=0$), the second-order forward-difference stencil is used:\n        $$D_{0,0} = -\\frac{3}{2\\Delta x}, \\quad D_{0,1} = \\frac{2}{\\Delta x}, \\quad D_{0,2} = -\\frac{1}{2\\Delta x}$$\n    *   At the last point ($j=N-1$), the second-order backward-difference stencil is used:\n        $$D_{N-1, N-1} = \\frac{3}{2\\Delta x}, \\quad D_{N-1, N-2} = -\\frac{2}{\\Delta x}, \\quad D_{N-1, N-3} = \\frac{1}{2\\Delta x}$$\n\n**2. Quantifying the Discretization Error**\n\nThe error in the numerical representation of the CCR is quantified using an error operator $A$:\n$$A = [X, P] - \\mathrm{i}\\hbar I = (XP - PX) - \\mathrm{i}\\hbar I$$\nFor the exact continuous operators, $A$ would be the zero operator. For the discrete matrix representations, $A$ is generally non-zero.\n\nTo measure the magnitude of this error, we test the action of the matrix $A$ on a smooth, well-behaved probe state. The problem specifies a Gaussian function centered at $x_0=0$ with width $\\sigma=L/10$:\n$$\\psi(x) = C \\exp\\left(-\\frac{x^2}{2\\sigma^2}\\right)$$\nThis function is evaluated at the grid points $x_j$ to form a vector $\\psi$. This vector is then numerically normalized using the discrete $L^2$ norm, defined as $\\lVert u \\rVert_2 = \\sqrt{\\sum_j |u_j|^2 \\Delta x}$, such that the normalized vector $\\psi_{\\text{norm}}$ satisfies $\\lVert \\psi_{\\text{norm}} \\rVert_2 = 1$.\n\nThe final error metric is the relative action error $E$, defined as:\n$$E(A; \\psi_{\\text{norm}}) = \\frac{\\lVert A \\psi_{\\text{norm}} \\rVert_2}{\\hbar \\lVert \\psi_{\\text{norm}} \\rVert_2}$$\nGiven that $\\hbar=1$ and $\\psi_{\\text{norm}}$ is normalized, this simplifies to $E = \\lVert A \\psi_{\\text{norm}} \\rVert_2$.\n\nFor the Dirichlet case, a modification is specified: the norm in the numerator is computed only over the interior grid points. That is, after computing the vector $v = A \\psi_{\\text{norm}}$, we form a truncated vector $v_{\\text{int}}$ using components $v_j$ for $j \\in \\{1,...,N-2\\}$, and the error is calculated as $E = \\lVert v_{\\text{int}} \\rVert_2 = \\sqrt{\\sum_{j=1}^{N-2} |v_j|^2 \\Delta x}$.\n\n**3. Computational Tasks**\n\nThe algorithm implements these principles to compute the three required values:\n1.  The error $E_{\\text{periodic}}$ for $L=10.0$ and $N=101$ with periodic boundary conditions.\n2.  The interior error $E_{\\text{dirichlet}}$ for $L=10.0$ and $N=21$ with Dirichlet boundary conditions.\n3.  The convergence ratio $R = E_{\\text{coarse}}/E_{\\text{fine}}$ for the periodic case with $L=10.0$, comparing grids of $N_{\\text{coarse}}=51$ and $N_{\\text{fine}}=101$. Since the finite-difference stencils are second-order accurate, the error $E$ is expected to be proportional to $(\\Delta x)^2$. The ratio $R$ should therefore be close to $(\\Delta x_{\\text{coarse}}/\\Delta x_{\\text{fine}})^2 = ( (L/N_{\\text{coarse}}) / (L/N_{\\text{fine}}) )^2 = (N_{\\text{fine}}/N_{\\text{coarse}})^2 \\approx (101/51)^2 \\approx 3.92$. This provides a theoretical check on the results.\n\nThe following Python program implements this logic to calculate and report the required quantities.", "answer": "```python\nimport numpy as np\n\ndef calculate_periodic_error(L, N):\n    \"\"\"\n    Computes the relative action error for periodic boundary conditions.\n    \"\"\"\n    # 1. Setup grid\n    dx = L / N\n    # grid points x_j = -L/2 + j*dx for j in {0, ..., N-1}\n    x_vec = -L / 2.0 + np.arange(N) * dx\n\n    # 2. Construct operator matrices\n    # Position operator X\n    X = np.diag(x_vec)\n\n    # Derivative operator D (second-order central difference with wrap-around)\n    D = np.zeros((N, N), dtype=float)\n    coeff = 1.0 / (2.0 * dx)\n    for i in range(N):\n        D[i, (i + 1) % N] = coeff\n        D[i, (i - 1 + N) % N] = -coeff\n\n    # Momentum operator P (hbar=1)\n    h_bar = 1.0\n    P = -1j * h_bar * D\n\n    # 3. Construct error matrix A\n    I = np.identity(N)\n    commutator = X @ P - P @ X\n    A = commutator - 1j * h_bar * I\n\n    # 4. Define and normalize probe state\n    x0 = 0.0\n    sigma = L / 10.0\n    psi = np.exp(-(x_vec - x0)**2 / (2.0 * sigma**2))\n    \n    # Discrete L2 norm: sqrt(sum(|u_j|^2 * dx))\n    norm_psi = np.sqrt(np.sum(np.abs(psi)**2) * dx)\n    psi_norm = psi / norm_psi\n\n    # 5. Calculate error\n    # E = ||A*psi_norm|| / (hbar * ||psi_norm||). Since hbar=1 and ||psi_norm||=1, E = ||A*psi_norm||\n    A_psi = A @ psi_norm\n    error = np.sqrt(np.sum(np.abs(A_psi)**2) * dx)\n    \n    return error\n\ndef calculate_dirichlet_error(L, N):\n    \"\"\"\n    Computes the relative action error for Dirichlet boundary conditions.\n    \"\"\"\n    # 1. Setup grid\n    dx = L / (N - 1)\n    # grid points x_j = -L/2 + j*dx for j in {0, ..., N-1}\n    x_vec = -L / 2.0 + np.arange(N) * dx\n\n    # 2. Construct operator matrices\n    # Position operator X\n    X = np.diag(x_vec)\n\n    # Derivative operator D (second-order stencils)\n    D = np.zeros((N, N), dtype=float)\n    \n    # Interior points (central difference)\n    coeff_mid = 1.0 / (2.0 * dx)\n    for i in range(1, N - 1):\n        D[i, i + 1] = coeff_mid\n        D[i, i - 1] = -coeff_mid\n\n    # Boundary j=0 (forward difference)\n    D[0, 0] = -3.0 / (2.0 * dx)\n    D[0, 1] = 2.0 / dx\n    D[0, 2] = -1.0 / (2.0 * dx)\n    \n    # Boundary j=N-1 (backward difference)\n    D[N - 1, N - 1] = 3.0 / (2.0 * dx)\n    D[N - 1, N - 2] = -2.0 / dx\n    D[N - 1, N - 3] = 1.0 / (2.0 * dx)\n    \n    # Momentum operator P (hbar=1)\n    h_bar = 1.0\n    P = -1j * h_bar * D\n\n    # 3. Construct error matrix A\n    I = np.identity(N)\n    commutator = X @ P - P @ X\n    A = commutator - 1j * h_bar * I\n\n    # 4. Define and normalize probe state\n    x0 = 0.0\n    sigma = L / 10.0\n    psi = np.exp(-(x_vec - x0)**2 / (2.0 * sigma**2))\n    \n    norm_psi = np.sqrt(np.sum(np.abs(psi)**2) * dx)\n    psi_norm = psi / norm_psi\n    \n    # 5. Calculate error\n    A_psi = A @ psi_norm\n    \n    # Restrict result vector to interior points for norm calculation\n    A_psi_interior = A_psi[1:-1]\n    \n    error = np.sqrt(np.sum(np.abs(A_psi_interior)**2) * dx)\n    \n    return error\n\ndef solve():\n    \"\"\"\n    Main function to run the specified test cases and print the results.\n    \"\"\"\n    # Test case definitions\n    test_cases = {\n        \"periodic\": {\"L\": 10.0, \"N\": 101},\n        \"dirichlet\": {\"L\": 10.0, \"N\": 21},\n        \"convergence\": {\"L\": 10.0, \"N_coarse\": 51, \"N_fine\": 101}\n    }\n\n    # --- Case 1: Periodic, happy-path accuracy ---\n    case1_params = test_cases[\"periodic\"]\n    E_periodic = calculate_periodic_error(case1_params[\"L\"], case1_params[\"N\"])\n\n    # --- Case 2: Dirichlet, boundary-sensitivity ---\n    case2_params = test_cases[\"dirichlet\"]\n    E_dirichlet = calculate_dirichlet_error(case2_params[\"L\"], case2_params[\"N\"])\n\n    # --- Case 3: Convergence under refinement, periodic ---\n    case3_params = test_cases[\"convergence\"]\n    E_coarse = calculate_periodic_error(case3_params[\"L\"], case3_params[\"N_coarse\"])\n    # Fine grid is the same as case 1, so we can reuse the result\n    E_fine = E_periodic\n    R = E_coarse / E_fine\n    \n    results = [E_periodic, E_dirichlet, R]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2452582"}, {"introduction": "The principles of commutation and uncertainty are not limited to position and momentum; they are universal in quantum mechanics. This problem applies these concepts to the intrinsic angular momentum of a particle, or spin, which is naturally described by matrices. By representing the spin operators $\\hat{S}_x$, $\\hat{S}_y$, and $\\hat{S}_z$ numerically, you will verify their commutation relations and test the Heisenberg Uncertainty Principle for various quantum states [@problem_id:2452615], solidifying your skills in quantum operator algebra and the calculation of expectation values.", "problem": "Consider a single spin-$\\tfrac{1}{2}$ particle. Let $\\hat{S}_x$, $\\hat{S}_y$, and $\\hat{S}_z$ denote the spin operators along the $x$-, $y$-, and $z$-axes, respectively. Represent these operators using Pauli matrices so that $\\hat{S}_k$ is proportional to the corresponding Pauli matrix for $k \\in \\{x,y,z\\}$. Use dimensionless reduced units with $\\hbar$ set to $1$ (so all computed quantities are dimensionless). Define the commutator as $[\\hat{A},\\hat{B}] \\equiv \\hat{A}\\hat{B}-\\hat{B}\\hat{A}$. Numerically verify the commutation relation $[\\hat{S}_x,\\hat{S}_y]=i\\,\\hbar\\,\\hat{S}_z$ within an absolute tolerance $\\varepsilon = 10^{-12}$.\n\nNext, assess the Heisenberg Uncertainty Principle (HUP), also called the Robertson uncertainty relation, for the pair $(\\hat{S}_x,\\hat{S}_y)$:\n$$\n\\Delta S_x \\,\\Delta S_y \\;\\ge\\; \\tfrac{1}{2}\\,\\left|\\langle [\\hat{S}_x,\\hat{S}_y]\\rangle\\right| \\,,\n$$\nwhere $\\Delta S_k = \\sqrt{\\langle \\hat{S}_k^2\\rangle - \\langle \\hat{S}_k\\rangle^2}$ for $k\\in\\{x,y\\}$, and $\\langle \\cdot \\rangle$ denotes the quantum mechanical expectation value in the specified state. In the chosen units with $\\hbar=1$, the right-hand side simplifies accordingly. Angles must be interpreted in radians.\n\nUse the computational basis given by the eigenstates of $\\hat{S}_z$. The following states (each a column vector in the $\\hat{S}_z$ basis) constitute the test suite:\n- $|\\psi_1\\rangle = |\\uparrow \\rangle = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$.\n- $|\\psi_2\\rangle = |\\downarrow \\rangle = \\begin{bmatrix} 0 \\\\ 1 \\end{bmatrix}$.\n- $|\\psi_3\\rangle = |+x \\rangle = \\tfrac{1}{\\sqrt{2}}\\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$.\n- $|\\psi_4\\rangle = \\begin{bmatrix} \\cos\\theta \\\\ e^{i\\phi}\\sin\\theta \\end{bmatrix}$ with $\\theta = 0.3$ and $\\phi = 0.7$.\n\nFor each state $|\\psi_j\\rangle$, compute the nonnegative real number\n$$\nd_j \\;=\\; \\Delta S_x\\,\\Delta S_y \\;-\\; \\tfrac{1}{2}\\,\\left|\\langle [\\hat{S}_x,\\hat{S}_y]\\rangle\\right| \\,,\n$$\nevaluated in $|\\psi_j\\rangle$. Report each $d_j$ as a real number rounded to $10^{-12}$ (i.e., to within absolute tolerance $\\varepsilon = 10^{-12}$). The commutator verification must produce a boolean $C$ that is `True` if and only if every entry of the matrix difference $[\\hat{S}_x,\\hat{S}_y]-i\\,\\hbar\\,\\hat{S}_z$ has absolute value at most $\\varepsilon$, and `False` otherwise.\n\nYour program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets:\n$$\n[\\;C,\\; d_1,\\; d_2,\\; d_3,\\; d_4\\;].\n$$\nAll quantities are dimensionless because $\\hbar=1$, and angles are in radians. The four $d_j$ values must be real numbers rounded to $10^{-12}$ as specified, and $C$ must be a boolean. No other output is permitted.", "solution": "The solution proceeds as follows. First, we establish the matrix representations of the spin operators. Second, we verify the commutation relation. Third, we derive the expressions for the uncertainty product and the expectation value of the commutator. Finally, we evaluate the quantity $d_j$ for each of the four specified quantum states.\n\n**1. Operator Representation**\nFor a spin-$\\tfrac{1}{2}$ particle, the spin operators $\\hat{S}_k$ are related to the Pauli matrices $\\sigma_k$ by $\\hat{S}_k = \\frac{\\hbar}{2}\\sigma_k$. Given the problem's convention of dimensionless units with $\\hbar=1$, the operators become $\\hat{S}_k = \\frac{1}{2}\\sigma_k$. The Pauli matrices are:\n$$\n\\sigma_x = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, \\quad\n\\sigma_y = \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix}, \\quad\n\\sigma_z = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}\n$$\nTherefore, the spin operators in the standard $\\hat{S}_z$ eigenbasis are:\n$$\n\\hat{S}_x = \\frac{1}{2}\\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, \\quad\n\\hat{S}_y = \\frac{1}{2}\\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix}, \\quad\n\\hat{S}_z = \\frac{1}{2}\\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}\n$$\nThese are $2 \\times 2$ matrices with complex entries.\n\n**2. Commutator Verification**\nThe commutation relation to verify is $[\\hat{S}_x, \\hat{S}_y] = i\\hbar\\hat{S}_z$, which simplifies to $[\\hat{S}_x, \\hat{S}_y] = i\\hat{S}_z$ since $\\hbar=1$.\nWe compute the commutator explicitly:\n$$\n[\\hat{S}_x, \\hat{S}_y] = \\hat{S}_x\\hat{S}_y - \\hat{S}_y\\hat{S}_x = \\left(\\frac{1}{2}\\right)^2 (\\sigma_x\\sigma_y - \\sigma_y\\sigma_x) = \\frac{1}{4}[\\sigma_x, \\sigma_y]\n$$\nThe well-known relation for Pauli matrices is $[\\sigma_a, \\sigma_b] = 2i\\sum_c \\epsilon_{abc}\\sigma_c$, where $\\epsilon_{abc}$ is the Levi-Civita symbol. For $(a,b,c)=(x,y,z)$, we have $\\epsilon_{xyz}=1$, so $[\\sigma_x, \\sigma_y] = 2i\\sigma_z$.\nSubstituting this into the expression for the spin commutator:\n$$\n[\\hat{S}_x, \\hat{S}_y] = \\frac{1}{4}(2i\\sigma_z) = i\\left(\\frac{1}{2}\\sigma_z\\right) = i\\hat{S}_z\n$$\nThis confirms the relation analytically. The matrix difference $[\\hat{S}_x, \\hat{S}_y] - i\\hat{S}_z$ is the zero matrix. Every entry has an absolute value of $0$, which is less than or equal to the specified tolerance $\\varepsilon = 10^{-12}$. Thus, the boolean variable $C$ must be `True`.\n\n**3. Uncertainty Principle Calculation**\nWe must compute $d_j = \\Delta S_x\\,\\Delta S_y - \\tfrac{1}{2}\\,\\left|\\langle [\\hat{S}_x,\\hat{S}_y]\\rangle\\right|$ for each state $|\\psi_j\\rangle$.\nThe expectation value of an operator $\\hat{A}$ in a state $|\\psi\\rangle$ is $\\langle\\hat{A}\\rangle = \\langle\\psi|\\hat{A}|\\psi\\rangle$.\nThe standard deviation is $\\Delta A = \\sqrt{\\langle\\hat{A}^2\\rangle - \\langle\\hat{A}\\rangle^2}$.\nA key simplification arises from the property $\\sigma_k^2 = I$ (the $2 \\times 2$ identity matrix). This implies $\\hat{S}_k^2 = (\\frac{\\hbar}{2})^2 \\sigma_k^2 = (\\frac{1}{2})^2 I = \\frac{1}{4}I$.\nFor any normalized state $|\\psi\\rangle$, the expectation value is $\\langle\\hat{S}_k^2\\rangle = \\langle\\psi|(\\frac{1}{4}I)|\\psi\\rangle = \\frac{1}{4}\\langle\\psi|\\psi\\rangle = \\frac{1}{4}$.\nThe standard deviation for $\\hat{S}_k$ is therefore:\n$$\n\\Delta S_k = \\sqrt{\\frac{1}{4} - \\langle\\hat{S}_k\\rangle^2}\n$$\nThe term on the right-hand side of the HUP involves the expectation value of the commutator. From the previous section, $[\\hat{S}_x, \\hat{S}_y] = i\\hat{S}_z$.\n$$\n\\tfrac{1}{2}\\left|\\langle [\\hat{S}_x,\\hat{S}_y]\\rangle\\right| = \\tfrac{1}{2}\\left|\\langle i\\hat{S}_z\\rangle\\right| = \\tfrac{1}{2}|i\\langle\\hat{S}_z\\rangle| = \\tfrac{1}{2}|\\langle\\hat{S}_z\\rangle|\n$$\nSince $\\hat{S}_z$ is a Hermitian operator, its expectation value $\\langle\\hat{S}_z\\rangle$ is always a real number. So, $|\\langle\\hat{S}_z\\rangle|$ is simply the absolute value of this real number.\nThe quantity to compute for each state is:\n$$\nd_j = \\left(\\sqrt{\\frac{1}{4} - \\langle\\hat{S}_x\\rangle_j^2}\\right) \\left(\\sqrt{\\frac{1}{4} - \\langle\\hat{S}_y\\rangle_j^2}\\right) - \\frac{1}{2}|\\langle\\hat{S}_z\\rangle_j|\n$$\n\n**4. Evaluation for Each State**\n\n- **State $|\\psi_1\\rangle = [1, 0]^T$ (eigenstate of $\\hat{S}_z$ with eigenvalue $+\\frac{1}{2}$):**\n$\\langle\\hat{S}_x\\rangle_1 = 0$, $\\langle\\hat{S}_y\\rangle_1 = 0$, $\\langle\\hat{S}_z\\rangle_1 = \\frac{1}{2}$.\n$\\Delta S_x = \\sqrt{\\frac{1}{4} - 0^2} = \\frac{1}{2}$.\n$\\Delta S_y = \\sqrt{\\frac{1}{4} - 0^2} = \\frac{1}{2}$.\n$\\Delta S_x \\Delta S_y = \\frac{1}{4}$.\n$\\frac{1}{2}|\\langle\\hat{S}_z\\rangle_1| = \\frac{1}{2}|\\frac{1}{2}| = \\frac{1}{4}$.\n$d_1 = \\frac{1}{4} - \\frac{1}{4} = 0$.\n\n- **State $|\\psi_2\\rangle = [0, 1]^T$ (eigenstate of $\\hat{S}_z$ with eigenvalue $-\\frac{1}{2}$):**\n$\\langle\\hat{S}_x\\rangle_2 = 0$, $\\langle\\hat{S}_y\\rangle_2 = 0$, $\\langle\\hat{S}_z\\rangle_2 = -\\frac{1}{2}$.\n$\\Delta S_x = \\frac{1}{2}$, $\\Delta S_y = \\frac{1}{2}$.\n$\\Delta S_x \\Delta S_y = \\frac{1}{4}$.\n$\\frac{1}{2}|\\langle\\hat{S}_z\\rangle_2| = \\frac{1}{2}|-\\frac{1}{2}| = \\frac{1}{4}$.\n$d_2 = \\frac{1}{4} - \\frac{1}{4} = 0$.\n\n- **State $|\\psi_3\\rangle = \\frac{1}{\\sqrt{2}}[1, 1]^T$ (eigenstate of $\\hat{S}_x$ with eigenvalue $+\\frac{1}{2}$):**\n$\\langle\\hat{S}_x\\rangle_3 = \\frac{1}{2}$, $\\langle\\hat{S}_y\\rangle_3 = 0$, $\\langle\\hat{S}_z\\rangle_3 = 0$.\n$\\Delta S_x = \\sqrt{\\frac{1}{4} - (\\frac{1}{2})^2} = 0$.\n$\\Delta S_y = \\sqrt{\\frac{1}{4} - 0^2} = \\frac{1}{2}$.\n$\\Delta S_x \\Delta S_y = 0 \\times \\frac{1}{2} = 0$.\n$\\frac{1}{2}|\\langle\\hat{S}_z\\rangle_3| = \\frac{1}{2}|0| = 0$.\n$d_3 = 0 - 0 = 0$.\n\n- **State $|\\psi_4\\rangle = [\\cos\\theta, e^{i\\phi}\\sin\\theta]^T$ with $\\theta=0.3, \\phi=0.7$:**\nThe expectation values for a general state $|\\psi\\rangle = [a, b]^T$ with $a=\\cos\\theta$ and $b=e^{i\\phi}\\sin\\theta$ are:\n$\\langle\\hat{S}_x\\rangle_4 = \\mathrm{Re}(a^*b) = \\cos\\theta\\sin\\theta\\cos\\phi = \\frac{1}{2}\\sin(2\\theta)\\cos\\phi$.\n$\\langle\\hat{S}_y\\rangle_4 = \\mathrm{Im}(a^*b) = \\cos\\theta\\sin\\theta\\sin\\phi = \\frac{1}{2}\\sin(2\\theta)\\sin\\phi$.\n$\\langle\\hat{S}_z\\rangle_4 = \\frac{1}{2}(|a|^2 - |b|^2) = \\frac{1}{2}(\\cos^2\\theta - \\sin^2\\theta) = \\frac{1}{2}\\cos(2\\theta)$.\nWith $\\theta=0.3$ and $\\phi=0.7$:\n$\\langle\\hat{S}_x\\rangle_4 = \\frac{1}{2}\\sin(0.6)\\cos(0.7) \\approx 0.21591880$.\n$\\langle\\hat{S}_y\\rangle_4 = \\frac{1}{2}\\sin(0.6)\\sin(0.7) \\approx 0.18185945$.\n$\\langle\\hat{S}_z\\rangle_4 = \\frac{1}{2}\\cos(0.6) \\approx 0.41266781$.\nNow we compute the terms for $d_4$:\n$\\Delta S_x^2 = \\frac{1}{4} - \\langle\\hat{S}_x\\rangle_4^2 \\approx 0.25 - 0.04662153 \\approx 0.20337847$.\n$\\Delta S_y^2 = \\frac{1}{4} - \\langle\\hat{S}_y\\rangle_4^2 \\approx 0.25 - 0.03307284 \\approx 0.21692716$.\n$\\Delta S_x = \\sqrt{\\Delta S_x^2} \\approx 0.45097502$.\n$\\Delta S_y = \\sqrt{\\Delta S_y^2} \\approx 0.46575442$.\n$\\Delta S_x \\Delta S_y \\approx 0.21003875$.\n$\\frac{1}{2}|\\langle\\hat{S}_z\\rangle_4| = \\frac{1}{2}|0.41266781| \\approx 0.20633390$.\n$d_4 = 0.21003875 - 0.20633390 \\approx 0.00370484768$.\n\n**Summary of Results**\n- Commutator verification: $C = \\mathrm{True}$.\n- $d_1 = 0.0$.\n- $d_2 = 0.0$.\n- $d_3 = 0.0$.\n- $d_4 \\approx 0.00370484768$.\nThese values will be computed numerically and formatted as required. The HUP inequality, which states $d_j \\ge 0$, is satisfied in all cases.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the quantum mechanics problem for a spin-1/2 particle.\n\n    1. Defines spin operators S_x, S_y, S_z using Pauli matrices with hbar=1.\n    2. Numerically verifies the commutation relation [S_x, S_y] = i*S_z.\n    3. Computes the Heisenberg uncertainty difference d_j for four given states.\n    4. Formats the results as specified.\n    \"\"\"\n\n    # Define constants and tolerance\n    HBAR = 1.0\n    TOL = 1e-12\n\n    # Define spin-1/2 operators in the S_z eigenbasis (hbar=1)\n    S_x = 0.5 * np.array([[0, 1], [1, 0]], dtype=np.complex128)\n    S_y = 0.5 * np.array([[0, -1j], [1j, 0]], dtype=np.complex128)\n    S_z = 0.5 * np.array([[1, 0], [0, -1]], dtype=np.complex128)\n\n    # 1. Verify the commutation relation: [S_x, S_y] = i*hbar*S_z\n    commutator_xy = S_x @ S_y - S_y @ S_x\n    rhs_commutator = 1j * HBAR * S_z\n    diff_matrix = commutator_xy - rhs_commutator\n    \n    # C is True if all elements of the difference matrix are within tolerance\n    C = np.all(np.abs(diff_matrix) <= TOL)\n\n    # Define the test states as column vectors\n    psi_1 = np.array([[1], [0]], dtype=np.complex128)\n    psi_2 = np.array([[0], [1]], dtype=np.complex128)\n    psi_3 = (1 / np.sqrt(2)) * np.array([[1], [1]], dtype=np.complex128)\n    \n    theta = 0.3\n    phi = 0.7\n    psi_4 = np.array(\n        [[np.cos(theta)], [np.exp(1j * phi) * np.sin(theta)]], \n        dtype=np.complex128\n    )\n\n    test_cases = [psi_1, psi_2, psi_3, psi_4]\n    \n    results = [C]\n\n    # Pre-calculate squared operators. S_k^2 = (hbar/2)^2 * Ientity\n    S_x_sq = S_x @ S_x\n    S_y_sq = S_y @ S_y\n\n    def expectation_value(op, state_vec):\n        \"\"\"Computes <psi|Op|psi>.\"\"\"\n        state_vec_dag = state_vec.conj().T\n        return (state_vec_dag @ op @ state_vec)[0, 0]\n\n    for psi in test_cases:\n        # Calculate standard deviations Delta S_x and Delta S_y\n        # For Hermitian operators, expectation values are real.\n        # Use np.real() to discard negligible imaginary parts from numeric error.\n        exp_Sx = np.real(expectation_value(S_x, psi))\n        exp_Sy = np.real(expectation_value(S_y, psi))\n        \n        # <S_k^2> is always (hbar/2)^2 = 0.25 for any normalized state\n        exp_Sx_sq = np.real(expectation_value(S_x_sq, psi))\n        exp_Sy_sq = np.real(expectation_value(S_y_sq, psi))\n\n        var_Sx = exp_Sx_sq - exp_Sx**2\n        var_Sy = exp_Sy_sq - exp_Sy**2\n        \n        # Variance might be slightly negative due to float precision, clip at 0.\n        delta_Sx = np.sqrt(max(0, var_Sx))\n        delta_Sy = np.sqrt(max(0, var_Sy))\n        \n        uncertainty_product = delta_Sx * delta_Sy\n\n        # Calculate the RHS of the HUP inequality\n        exp_commutator = expectation_value(commutator_xy, psi)\n        rhs_hup = 0.5 * np.abs(exp_commutator)\n\n        # Calculate d_j and round to 12 decimal places\n        d_j = uncertainty_product - rhs_hup\n        results.append(round(d_j, 12))\n\n    # Format the final output string\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2452615"}]}