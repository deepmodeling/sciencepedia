{"hands_on_practices": [{"introduction": "Our journey into the practical application of group theory begins with a foundational exercise. This problem provides a direct, hands-on opportunity to use the projection operator, $\\hat{P}^{(\\Gamma)}$, to generate a Symmetry-Adapted Linear Combination (SALC) in a simple and intuitive system. By working with the hydrogen orbitals of a $C_{2v}$ molecule, you will practice the essential steps of defining matrix representations for symmetry operations and applying the projection formula to a basis set, a core skill for building molecular orbitals. [@problem_id:2917493]", "problem": "Consider a bent triatomic molecule with point group $C_{2v}$ containing two equivalent hydrogen $1s$ orbitals, labeled $\\chi_{1s}(\\mathrm{H}_1)$ and $\\chi_{1s}(\\mathrm{H}_2)$. Work in the hydrogen orbital coefficient basis $\\{ \\chi_{1s}(\\mathrm{H}_1), \\chi_{1s}(\\mathrm{H}_2) \\}$ so that a linear combination is represented by a coefficient vector $(c_1, c_2)$. The $C_{2v}$ operations act on the hydrogen labels by either leaving each hydrogen invariant or swapping $1 \\leftrightarrow 2$, as follows: the identity $E$ leaves both unchanged; the $C_2$ rotation swaps $\\mathrm{H}_1$ and $\\mathrm{H}_2$; the mirror $\\sigma_v$ in the molecular plane leaves each unchanged; the perpendicular mirror $\\sigma_v'$ swaps $\\mathrm{H}_1$ and $\\mathrm{H}_2$. Let $R(g)$ denote the $2\\times 2$ matrix representation of operation $g$ in this basis.\n\nUsing the definition of the projection operator for the totally symmetric irreducible representation $A_1$ of $C_{2v}$, which has dimension $1$ and characters $+1$ for all group elements, apply\n$$\nP^{(A_1)} \\;=\\; \\frac{1}{4} \\sum_{g \\in C_{2v}} R(g)\n$$\nto the coefficient vector $(1,1)$ to construct the $A_1$ Symmetry-Adapted Linear Combination (SALC). Then normalize the resulting vector with respect to the standard Euclidean inner product. Express your final normalized coefficient vector as a single row vector. No rounding is required, and no units are needed.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- **System:** A bent triatomic molecule with point group $C_{2v}$.\n- **Basis Functions:** Two equivalent hydrogen $1s$ orbitals, $\\chi_{1} \\equiv \\chi_{1s}(\\mathrm{H}_1)$ and $\\chi_{2} \\equiv \\chi_{1s}(\\mathrm{H}_2)$.\n- **Vector Representation:** A linear combination $c_1 \\chi_1 + c_2 \\chi_2$ is represented by the coefficient vector $(c_1, c_2)$.\n- **Group Operations on Basis:**\n    - $E$: identity, leaves $\\mathrm{H}_1, \\mathrm{H}_2$ unchanged.\n    - $C_2$: rotation, swaps $\\mathrm{H}_1 \\leftrightarrow \\mathrm{H}_2$.\n    - $\\sigma_v$: mirror plane containing the molecule, leaves $\\mathrm{H}_1, \\mathrm{H}_2$ unchanged.\n    - $\\sigma_v'$: mirror plane perpendicular to the molecule, swaps $\\mathrm{H}_1 \\leftrightarrow \\mathrm{H}_2$.\n- **Matrix Representation:** $R(g)$ denotes the $2 \\times 2$ matrix for operation $g$ in the basis $\\{\\chi_1, \\chi_2\\}$.\n- **Projection Operator:** For the $A_1$ irreducible representation, the operator is given as $P^{(A_1)} = \\frac{1}{4} \\sum_{g \\in C_{2v}} R(g)$.\n- **Task:** Apply $P^{(A_1)}$ to the vector $(1,1)$, then normalize the resulting vector.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is assessed to be **valid**. It is a standard, scientifically grounded problem in the application of group theory to quantum chemistry. The description of the $C_{2v}$ point group and its action on a pair of equivalent atomic orbitals is correct. The provided formula for the projection operator for the totally symmetric irreducible representation is correct. The problem is well-posed, unambiguous, and contains all necessary information for a unique solution.\n\n**Step 3: Verdict and Action**\nThe problem is valid. A solution will be constructed.\n\nThe solution proceeds in a sequence of logical steps. First, we must construct the matrix representations, $R(g)$, for each of the four symmetry operations $g$ in the $C_{2v}$ point group, acting on the basis vectors corresponding to $\\chi_1$ and $\\chi_2$. In the basis $\\{\\chi_1, \\chi_2\\}$, the basis vectors are represented as $\\chi_1 \\rightarrow \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ and $\\chi_2 \\rightarrow \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$.\n\n1.  **Identity, $E$:** This operation leaves both orbitals unchanged: $E\\chi_1 = \\chi_1$ and $E\\chi_2 = \\chi_2$.\n    The matrix representation is the identity matrix:\n    $$R(E) = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$$\n\n2.  **$C_2$ Rotation:** This operation swaps the two orbitals: $C_2\\chi_1 = \\chi_2$ and $C_2\\chi_2 = \\chi_1$.\n    The matrix representation is a permutation matrix:\n    $$R(C_2) = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}$$\n\n3.  **$\\sigma_v$ Mirror Plane (in the molecular plane):** This operation leaves both orbitals unchanged: $\\sigma_v\\chi_1 = \\chi_1$ and $\\sigma_v\\chi_2 = \\chi_2$.\n    The matrix representation is identical to that of $E$:\n    $$R(\\sigma_v) = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$$\n\n4.  **$\\sigma_v'$ Mirror Plane (perpendicular to the molecular plane):** This operation swaps the two orbitals: $\\sigma_v'\\chi_1 = \\chi_2$ and $\\sigma_v'\\chi_2 = \\chi_1$.\n    The matrix representation is identical to that of $C_2$:\n    $$R(\\sigma_v') = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}$$\n\nNext, we construct the projection operator $P^{(A_1)}$ using the given formula, which requires summing these matrices. The order of the group $C_{2v}$ is $h=4$.\n$$P^{(A_1)} = \\frac{1}{4} \\sum_{g \\in C_{2v}} R(g) = \\frac{1}{4} \\left[ R(E) + R(C_2) + R(\\sigma_v) + R(\\sigma_v') \\right]$$\nSubstituting the matrices:\n$$P^{(A_1)} = \\frac{1}{4} \\left[ \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} + \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} + \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} + \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} \\right]$$\nSumming the matrices inside the brackets:\n$$P^{(A_1)} = \\frac{1}{4} \\begin{pmatrix} 1+0+1+0 & 0+1+0+1 \\\\ 0+1+0+1 & 1+0+1+0 \\end{pmatrix} = \\frac{1}{4} \\begin{pmatrix} 2 & 2 \\\\ 2 & 2 \\end{pmatrix}$$\nSimplifying the expression for the operator:\n$$P^{(A_1)} = \\begin{pmatrix} \\frac{1}{2} & \\frac{1}{2} \\\\ \\frac{1}{2} & \\frac{1}{2} \\end{pmatrix}$$\n\nNow, we apply this operator to the given coefficient vector $\\mathbf{v} = (1,1)$, which is written as a column vector for matrix multiplication:\n$$\\mathbf{v} = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$$\nThe projected vector, which we denote $\\mathbf{v}'$, is:\n$$\\mathbf{v}' = P^{(A_1)} \\mathbf{v} = \\begin{pmatrix} \\frac{1}{2} & \\frac{1}{2} \\\\ \\frac{1}{2} & \\frac{1}{2} \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\frac{1}{2}(1) + \\frac{1}{2}(1) \\\\ \\frac{1}{2}(1) + \\frac{1}{2}(1) \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$$\nThe resulting coefficient vector is $(1,1)$. This result is expected, as the starting vector corresponds to the combination $\\chi_1 + \\chi_2$, which is already fully symmetric and thus belongs to the $A_1$ representation.\n\nThe final step is to normalize this resulting vector $\\mathbf{v}' = (1,1)$ with respect to the standard Euclidean inner product. The norm $\\|\\mathbf{v}'\\|$ is calculated as:\n$$\\|\\mathbf{v}'\\| = \\sqrt{1^2 + 1^2} = \\sqrt{2}$$\nThe normalization constant is the reciprocal of the norm, $N = \\frac{1}{\\|\\mathbf{v}'\\|} = \\frac{1}{\\sqrt{2}}$.\nThe normalized vector, $\\mathbf{v}_{\\text{norm}}$, is obtained by multiplying $\\mathbf{v}'$ by the normalization constant $N$:\n$$\\mathbf{v}_{\\text{norm}} = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} \\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} \\end{pmatrix}$$\nThe problem requests the final normalized coefficient vector expressed as a single row vector.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{1}{\\sqrt{2}} & \\frac{1}{\\sqrt{2}} \\end{pmatrix}}\n$$", "id": "2917493"}, {"introduction": "Having mastered the basic application of the projection operator, we now advance to a more complex and realistic chemical scenario. This practice explores the construction of SALCs in a molecule with higher symmetry, $D_{3h}$, and challenges you to handle different types of atomic orbitals—in-plane $\\sigma$ orbitals and out-of-plane $\\pi$ orbitals—as separate basis sets. This exercise is crucial for understanding how group theory allows us to systematically classify and build molecular orbitals from different types of atomic orbital contributions. [@problem_id:2463214]", "problem": "Consider planar trigonal $BCl_3$ with boron at the origin and the three chlorine atoms at the vertices of an equilateral triangle in the $xy$-plane, centered at the origin. The molecular point group is $D_{3h}$ with group order $h=12$ and classes $\\{E,\\,2C_3,\\,3C_2',\\,\\sigma_h,\\,2S_3,\\,3\\sigma_v\\}$. The $D_{3h}$ irreducible representations and their characters are:\n- $A_1'$: $(1,\\,1,\\,1,\\,1,\\,1,\\,1)$\n- $A_2'$: $(1,\\,1,\\,-1,\\,1,\\,1,\\,-1)$\n- $E'$: $(2,\\,-1,\\,0,\\,2,\\,-1,\\,0)$\n- $A_1''$: $(1,\\,1,\\,1,\\,-1,\\,-1,\\,-1)$\n- $A_2''$: $(1,\\,1,\\,-1,\\,-1,\\,-1,\\,1)$\n- $E''$: $(2,\\,-1,\\,0,\\,-2,\\,1,\\,0)$\n\nDefine two sets of three ligand-centered, mutually orthonormal functions:\n- $\\{\\sigma_1,\\,\\sigma_2,\\,\\sigma_3\\}$, where each $\\sigma_i$ is localized on a chlorine and oriented along the $B$–$Cl$ bond to describe $\\sigma$-bonding donation toward boron.\n- $\\{p_{z,1},\\,p_{z,2},\\,p_{z,3}\\}$, where each $p_{z,i}$ is the out-of-plane $p$-type orbital on chlorine perpendicular to the molecular plane (the $z$-axis is perpendicular to the $xy$-plane).\n\nConstruct the symmetry-adapted linear combinations (Symmetry-Adapted Linear Combinations (SALCs)) spanned by each set by determining the reducible representations they generate and reducing them into irreducible representations. Identify, for each set, the totally symmetric SALC within its parity class (that is, for the in-plane $\\sigma$ set, the SALC transforming as $A_1'$, and for the out-of-plane $\\pi$-type set, the SALC transforming as $A_2''$). Write each of these two SALCs in the normalized form $c \\sum_{i=1}^{3} \\phi_i$ with an explicit normalization constant $c$.\n\nFinally, compute the product of the two normalization constants. Provide your final answer as a single exact number. Do not include units.", "solution": "The problem is first validated by examining its components.\n\n**Step 1: Extract Givens**\n- Molecule: Planar trigonal $BCl_3$.\n- Geometry: Boron at the origin, three chlorine atoms at the vertices of an equilateral triangle in the $xy$-plane, centered at the origin.\n- Molecular Point Group: $D_{3h}$.\n- Group Order: $h=12$.\n- Classes: $\\{E,\\,2C_3,\\,3C_2',\\,\\sigma_h,\\,2S_3,\\,3\\sigma_v\\}$.\n- Irreducible Representations (Irreps) and Characters for $D_{3h}$:\n    - $A_1'$: $(1,\\,1,\\,1,\\,1,\\,1,\\,1)$\n    - $A_2'$: $(1,\\,1,\\,-1,\\,1,\\,1,\\,-1)$\n    - $E'$: $(2,\\,-1,\\,0,\\,2,\\,-1,\\,0)$\n    - $A_1''$: $(1,\\,1,\\,1,\\,-1,\\,-1,\\,-1)$\n    - $A_2''$: $(1,\\,1,\\,-1,\\,-1,\\,-1,\\,1)$\n    - $E''$: $(2,\\,-1,\\,0,\\,-2,\\,1,\\,0)$\n- Basis Sets:\n    - $\\{\\sigma_1,\\,\\sigma_2,\\,\\sigma_3\\}$: orthonormal set of ligand $\\sigma$-bonding orbitals.\n    - $\\{p_{z,1},\\,p_{z,2},\\,p_{z,3}\\}$: orthonormal set of out-of-plane ligand $p_z$ orbitals.\n- Task: Construct the specified SALCs for each set, determine their normalization constants, and compute the product of these constants.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, well-posed, and objective. It is a standard application of group theory to molecular orbital theory, specifically for the construction of Symmetry-Adapted Linear Combinations (SALCs). The molecule $\\text{BCl}_3$, its $D_{3h}$ point group, the provided character table, and the chosen basis sets are all standard and correct for such an analysis. The problem is self-contained and provides all necessary information to derive a unique, verifiable solution. There are no violations of scientific principles, logical inconsistencies, or ambiguities.\n\n**Verdict:** The problem is valid.\n\n**Solution**\n\nThe task requires us to find the normalization constants for two specific SALCs, one derived from a set of in-plane $\\sigma$ orbitals and one from a set of out-of-plane $p_z$ orbitals of the chlorine ligands in a planar trigonal $\\text{BCl}_3$ molecule (point group $D_{3h}$).\n\n**Part 1: SALC from $\\sigma$ orbitals**\n\nFirst, we consider the basis set of three orthonormal $\\sigma$ orbitals, $\\{\\sigma_1, \\sigma_2, \\sigma_3\\}$, each oriented along a $\\text{B}-\\text{Cl}$ bond. We must determine the reducible representation, $\\Gamma_{\\sigma}$, generated by this basis set. The character $\\chi_{\\sigma}(R)$ for a symmetry operation $R$ is found by counting the number of basis functions that are left unchanged by the operation.\n\n- $\\hat{E}$: The identity operation leaves all $3$ orbitals unmoved. $\\chi_{\\sigma}(E) = 3$.\n- $\\hat{C}_3$: A $120^{\\circ}$ rotation about the $z$-axis permutes all three orbitals, so none are left in their original position. $\\chi_{\\sigma}(C_3) = 0$.\n- $\\hat{C}_2'$: A $180^{\\circ}$ rotation about an axis passing through the $\\text{B}$ atom and one $\\text{Cl}$ atom (e.g., $\\text{Cl}_1$). This leaves $\\sigma_1$ unchanged, while $\\sigma_2$ and $\\sigma_3$ are interchanged. Thus, $1$ orbital is unmoved. $\\chi_{\\sigma}(C_2') = 1$.\n- $\\hat{\\sigma}_h$: Reflection through the molecular ($xy$) plane. All three $\\sigma$ orbitals are in this plane and are therefore unmoved. $\\chi_{\\sigma}(\\sigma_h) = 3$.\n- $\\hat{S}_3$: An improper rotation, $\\hat{S}_3 = \\hat{\\sigma}_h \\hat{C}_3$. Since $\\hat{C}_3$ moves all orbitals, none are left in place to be reflected. $\\chi_{\\sigma}(S_3) = 0$.\n- $\\hat{\\sigma}_v$: Reflection through a vertical plane containing a $\\text{B}-\\text{Cl}$ bond. This plane is coincident with a $C_2'$ axis. It leaves $1$ orbital unchanged and interchanges the other $2$. $\\chi_{\\sigma}(\\sigma_v) = 1$.\n\nThe character vector for the reducible representation $\\Gamma_{\\sigma}$ is therefore $\\chi_{\\sigma} = (3, 0, 1, 3, 0, 1)$.\n\nNext, we reduce $\\Gamma_{\\sigma}$ into its constituent irreducible representations using the reduction formula:\n$$n_{\\Gamma} = \\frac{1}{h} \\sum_{R} N_R \\, \\chi_{\\Gamma}(R) \\, \\chi_{\\text{irrep}}(R)$$\nwhere $h=12$ is the order of the group and $N_R$ is the number of operations in each class.\nFor $A_1'$:\n$$n_{A_1'} = \\frac{1}{12} [1(3)(1) + 2(0)(1) + 3(1)(1) + 1(3)(1) + 2(0)(1) + 3(1)(1)] = \\frac{1}{12} [3+3+3+3] = \\frac{12}{12} = 1$$\nFor $E'$:\n$$n_{E'} = \\frac{1}{12} [1(3)(2) + 2(0)(-1) + 3(1)(0) + 1(3)(2) + 2(0)(-1) + 3(1)(0)] = \\frac{1}{12} [6+6] = \\frac{12}{12} = 1$$\nThe characters for $\\sigma_h$ are positive, so no double-primed (e.g., $A_1''$, $A_2''$, $E''$) irreps can be present.\nThus, the reduction is $\\Gamma_{\\sigma} = A_1' \\oplus E'$.\n\nWe are asked to construct the totally symmetric SALC, which transforms as $A_1'$. We use the projection operator $\\hat{P}^{(A_1')} \\propto \\sum_{R} \\chi_{A_1'}(R) \\hat{R}$ on a basis function, e.g., $\\sigma_1$. Since all characters of $A_1'$ are $1$, the projector sums the result of applying every group operation to $\\sigma_1$. Any operation either leaves $\\sigma_1$ as is or transforms it into $\\sigma_2$ or $\\sigma_3$. The resulting combination will be a sum of all basis functions. The unnormalized SALC is thus:\n$$\\Psi_{A_1'} = \\sigma_1 + \\sigma_2 + \\sigma_3$$\nTo normalize this SALC, let $\\Phi_1 = c_1(\\sigma_1 + \\sigma_2 + \\sigma_3)$. The normalization condition is $\\langle \\Phi_1 | \\Phi_1 \\rangle = 1$. Given that the basis is orthonormal, i.e., $\\langle \\sigma_i | \\sigma_j \\rangle = \\delta_{ij}$:\n$$c_1^2 \\langle \\sigma_1 + \\sigma_2 + \\sigma_3 | \\sigma_1 + \\sigma_2 + \\sigma_3 \\rangle = 1$$\n$$c_1^2 (\\langle \\sigma_1|\\sigma_1\\rangle + \\langle \\sigma_2|\\sigma_2\\rangle + \\langle \\sigma_3|\\sigma_3\\rangle) = 1$$\n$$c_1^2 (1 + 1 + 1) = 1 \\implies 3c_1^2 = 1 \\implies c_1 = \\frac{1}{\\sqrt{3}}$$\n\n**Part 2: SALC from $p_z$ orbitals**\n\nNext, we consider the basis set of three orthonormal out-of-plane orbitals, $\\{p_{z,1}, p_{z,2}, p_{z,3}\\}$. The character $\\chi_{p_z}(R)$ is the trace of the transformation matrix for the basis under operation $R$. An unshifted orbital that is inverted contributes $-1$.\n\n- $\\hat{E}$: All $3$ orbitals are unchanged. $\\chi_{p_z}(E) = 3$.\n- $\\hat{C}_3$: All $3$ orbitals are permuted. $\\chi_{p_z}(C_3) = 0$.\n- $\\hat{C}_2'$: One orbital ($p_{z,1}$) is unshifted but inverted (a $180^{\\circ}$ rotation about an axis in the $xy$-plane maps $z \\to -z$). It contributes $-1$. The other two are interchanged. $\\chi_{p_z}(C_2') = -1$.\n- $\\hat{\\sigma}_h$: Reflection through the $xy$-plane inverts all $3$ orbitals ($z \\to -z$). All are unshifted. $\\chi_{p_z}(\\sigma_h) = 3 \\times (-1) = -3$.\n- $\\hat{S}_3$: All $3$ orbitals are permuted. $\\chi_{p_z}(S_3) = 0$.\n- $\\hat{\\sigma}_v$: One orbital ($p_{z,1}$) lies in the reflection plane and is unchanged (the plane contains the $z$-axis). It contributes $+1$. The other two are interchanged. $\\chi_{p_z}(\\sigma_v) = 1$.\n\nThe character vector for $\\Gamma_{p_z}$ is $\\chi_{p_z} = (3, 0, -1, -3, 0, 1)$. The negative character for $\\sigma_h$ indicates that this representation is composed of double-primed irreps only.\n\nWe reduce $\\Gamma_{p_z}$:\nFor $A_2''$:\n$$n_{A_2''} = \\frac{1}{12} [1(3)(1) + 2(0)(1) + 3(-1)(-1) + 1(-3)(-1) + 2(0)(-1) + 3(1)(1)]$$\n$$n_{A_2''} = \\frac{1}{12} [3 + 3 + 3 + 3] = \\frac{12}{12} = 1$$\nFor $E''$:\n$$n_{E''} = \\frac{1}{12} [1(3)(2) + 2(0)(-1) + 3(-1)(0) + 1(-3)(-2) + 2(0)(1) + 3(1)(0)]$$\n$$n_{E''} = \\frac{1}{12} [6 + 6] = \\frac{12}{12} = 1$$\nThe reduction is $\\Gamma_{p_z} = A_2'' \\oplus E''$.\n\nWe are asked for the SALC corresponding to the $A_2''$ irrep. Applying the projection operator $\\hat{P}^{(A_2'')}$ to $p_{z,1}$ results in a sum where each transformed function is weighted by the appropriate character from $\\chi_{A_2''}=(1, 1, -1, -1, -1, 1)$. As shown by detailed application of the projector, a sum of all basis functions is produced. The unnormalized SALC is:\n$$\\Psi_{A_2''} = p_{z,1} + p_{z,2} + p_{z,3}$$\nTo normalize this SALC, let $\\Phi_2 = c_2(p_{z,1} + p_{z,2} + p_{z,3})$. The basis is orthonormal, so $\\langle p_{z,i} | p_{z,j} \\rangle = \\delta_{ij}$.\n$$c_2^2 \\langle p_{z,1} + p_{z,2} + p_{z,3} | p_{z,1} + p_{z,2} + p_{z,3} \\rangle = 1$$\n$$c_2^2 (\\langle p_{z,1}|p_{z,1}\\rangle + \\langle p_{z,2}|p_{z,2}\\rangle + \\langle p_{z,3}|p_{z,3}\\rangle) = 1$$\n$$c_2^2 (1 + 1 + 1) = 1 \\implies 3c_2^2 = 1 \\implies c_2 = \\frac{1}{\\sqrt{3}}$$\n\n**Final Calculation**\n\nThe problem asks for the product of the two normalization constants, $c_1$ and $c_2$.\n$$c_1 = \\frac{1}{\\sqrt{3}}$$\n$$c_2 = \\frac{1}{\\sqrt{3}}$$\nThe product is:\n$$c_1 \\times c_2 = \\frac{1}{\\sqrt{3}} \\times \\frac{1}{\\sqrt{3}} = \\frac{1}{3}$$\nThis is the final answer.", "answer": "$$\\boxed{\\frac{1}{3}}$$", "id": "2463214"}, {"introduction": "The final step in our hands-on practice is to bridge the gap between manual calculation and computational chemistry by automating the SALC construction process. In this exercise, you will develop a program that implements the projection operator formalism to determine the symmetry properties of a basis set for any given finite group. This task encapsulates the theoretical principles you've learned and translates them into a powerful, general-purpose tool, reflecting the true nature of modern computational chemistry. [@problem_id:2463215]", "problem": "Write a complete program that, given a finite group with a provided character table and a specified action on a finite atomic basis via atom index mappings for each symmetry operation, constructs the projection operators for all irreducible representations and reports, for each test case, the multiplicities of each irreducible representation in the given permutation representation. The program must use the following mathematical definitions.\n\nLet the group be denoted by $G$ with order $h = |G|$. Let the atomic basis have $n$ functions indexed by $\\{0,1,\\dots,n-1\\}$. For each symmetry operation $g \\in G$, you are given a mapping $\\sigma_g : \\{0,1,\\dots,n-1\\} \\to \\{0,1,\\dots,n-1\\}$ describing the permutation of basis indices. Define the representation matrix $D(g)$ on the basis by the action $D(g)\\,\\mathbf{e}_i = \\mathbf{e}_{\\sigma_g(i)}$, where $\\mathbf{e}_i$ is the $i$-th standard basis column vector in $\\mathbb{R}^n$. For each irreducible representation $\\Gamma$ of dimension $l_{\\Gamma}$ and character $\\chi_{\\Gamma}(g)$, define the projection operator\n$$\nP^{(\\Gamma)} \\;=\\; \\frac{l_{\\Gamma}}{h} \\sum_{g\\in G} \\chi_{\\Gamma}(g)^{\\ast}\\, D(g).\n$$\nFor each $\\Gamma$, the multiplicity $m_{\\Gamma}$ of $\\Gamma$ in the given representation is the integer\n$$\nm_{\\Gamma} \\;=\\; \\frac{1}{l_{\\Gamma}}\\,\\mathrm{tr}\\!\\left(P^{(\\Gamma)}\\right).\n$$\n\nYour program must, for each test case below, construct all $D(g)$, all $P^{(\\Gamma)}$, and then compute and report the list of multiplicities $[m_{\\Gamma_1}, m_{\\Gamma_2}, \\dots]$ in the specified order of irreducible representations for that test case. No physical units are involved. Angles, if any, are not required for this task.\n\nTest suite. For each test case, the operations are specified in a fixed order, and all character lists must be interpreted in that same order. All index mappings are zero-based.\n\n- Test case $1$ (point group $C_{2v}$, order $h = 4$):\n  - Operations in order: $\\left[E,\\, C_2,\\, \\sigma_v(xz),\\, \\sigma_v'(yz)\\right]$.\n  - Number of basis functions: $n = 3$ with indices $\\{0,1,2\\}$.\n  - Atom mappings for each operation:\n    - $E$: $(0,1,2)$,\n    - $C_2$: $(0,1,2)$,\n    - $\\sigma_v(xz)$: $(0,2,1)$,\n    - $\\sigma_v'(yz)$: $(0,2,1)$.\n  - Irreducible representations and characters:\n    - $\\Gamma_1 = A_1$: $l_{A_1} = 1$, characters $[1,\\,1,\\,1,\\,1]$,\n    - $\\Gamma_2 = A_2$: $l_{A_2} = 1$, characters $[1,\\,1,\\,-1,\\,-1]$,\n    - $\\Gamma_3 = B_1$: $l_{B_1} = 1$, characters $[1,\\,-1,\\,1,\\,-1]$,\n    - $\\Gamma_4 = B_2$: $l_{B_2} = 1$, characters $[1,\\,-1,\\,-1,\\,1]$.\n  - Required output for this case: the list $\\left[m_{A_1}, m_{A_2}, m_{B_1}, m_{B_2}\\right]$.\n\n- Test case $2$ (point group $C_{3v}$, order $h = 6$):\n  - Operations in order: $\\left[E,\\, C_3,\\, C_3^2,\\, \\sigma_v^{(1)},\\, \\sigma_v^{(2)},\\, \\sigma_v^{(3)}\\right]$.\n  - Number of basis functions: $n = 3$ with indices $\\{0,1,2\\}$.\n  - Atom mappings for each operation:\n    - $E$: $(0,1,2)$,\n    - $C_3$: $(1,2,0)$,\n    - $C_3^2$: $(2,0,1)$,\n    - $\\sigma_v^{(1)}$: $(0,2,1)$,\n    - $\\sigma_v^{(2)}$: $(2,1,0)$,\n    - $\\sigma_v^{(3)}$: $(1,0,2)$.\n  - Irreducible representations and characters:\n    - $\\Gamma_1 = A_1$: $l_{A_1} = 1$, characters $[1,\\,1,\\,1,\\,1,\\,1,\\,1]$,\n    - $\\Gamma_2 = A_2$: $l_{A_2} = 1$, characters $[1,\\,1,\\,1,\\,-1,\\,-1,\\,-1]$,\n    - $\\Gamma_3 = E$: $l_{E} = 2$, characters $[2,\\,-1,\\,-1,\\,0,\\,0,\\,0]$.\n  - Required output for this case: the list $\\left[m_{A_1}, m_{A_2}, m_{E}\\right]$.\n\n- Test case $3$ (point group $C_{1}$, order $h = 1$):\n  - Operations in order: $\\left[E\\right]$.\n  - Number of basis functions: $n = 4$ with indices $\\{0,1,2,3\\}$.\n  - Atom mappings for each operation:\n    - $E$: $(0,1,2,3)$.\n  - Irreducible representations and characters:\n    - $\\Gamma_1 = A$: $l_{A} = 1$, characters $[1]$.\n  - Required output for this case: the list $\\left[m_{A}\\right]$.\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element corresponds to one test case in the order given above, and each element itself is a bracketed comma-separated list of integers for the multiplicities of irreducible representations, in the specified order for that test case. For example, a valid output format with three test cases is of the form\n\"[ [a,b,c], [d,e], [f] ]\" but without spaces, i.e., \"[[a,b,c],[d,e],[f]]\".", "solution": "The problem has been subjected to rigorous validation and is deemed valid. It is a well-posed problem in computational group theory, providing all necessary data and definitions for a unique, verifiable solution. The underlying principles are standard in the application of representation theory to chemical systems. Any perceived physical inconsistencies in the provided data for a given test case, such as the mapping for the $C_2$ operation in test case $1$, are irrelevant. The problem is defined by the provided algebraic structure—the mappings and character tables—not by any specific geometric realization. The labels of operations serve only to connect the mappings to the characters. We now proceed with the solution.\n\nThe task is to compute the multiplicities $m_{\\Gamma}$ of each irreducible representation (irrep) $\\Gamma$ within a given permutation representation of a finite group $G$. The procedure is defined by a sequence of precise mathematical steps.\n\nFirst, for a basis of $n$ functions, we construct the matrix representation $D$ for each group operation $g \\in G$. The action of $g$ on the basis indices is given by a permutation $\\sigma_g: \\{0, 1, \\dots, n-1\\} \\to \\{0, 1, \\dots, n-1\\}$. The matrix $D(g)$ is defined by its action on the standard basis column vectors $\\mathbf{e}_i \\in \\mathbb{R}^n$ as $D(g)\\,\\mathbf{e}_i = \\mathbf{e}_{\\sigma_g(i)}$. This implies that the $i$-th column of the $n \\times n$ matrix $D(g)$ is the vector $\\mathbf{e}_{\\sigma_g(i)}$. The matrix elements are therefore $(D(g))_{ji} = \\delta_{j, \\sigma_g(i)}$, where $\\delta$ is the Kronecker delta.\n\nSecond, for each irrep $\\Gamma$, we construct the projection operator $P^{(\\Gamma)}$. The definition provided is:\n$$\nP^{(\\Gamma)} \\;=\\; \\frac{l_{\\Gamma}}{h} \\sum_{g\\in G} \\chi_{\\Gamma}(g)^{\\ast}\\, D(g)\n$$\nHere, $h = |G|$ is the order of the group, $l_{\\Gamma}$ is the dimension of the irrep $\\Gamma$, and $\\chi_{\\Gamma}(g)$ is the character of the operation $g$ in that irrep. As the provided characters are real numbers, the complex conjugate $\\chi_{\\Gamma}(g)^{\\ast}$ is simply $\\chi_{\\Gamma}(g)$. This is a linear combination of the representation matrices $D(g)$, weighted by their respective characters.\n\nThird, we compute the multiplicity $m_{\\Gamma}$. The multiplicity is the number of times the irrep $\\Gamma$ is contained within the (reducible) permutation representation. It is calculated from the trace of the projection operator:\n$$\nm_{\\Gamma} \\;=\\; \\frac{1}{l_{\\Gamma}}\\,\\mathrm{tr}\\!\\left(P^{(\\Gamma)}\\right)\n$$\nSubstituting the definition of $P^{(\\Gamma)}$ simplifies this to the well-known reduction formula, which can be used for verification:\n$$\nm_{\\Gamma} = \\frac{1}{l_{\\Gamma}}\\,\\mathrm{tr}\\!\\left(\\frac{l_{\\Gamma}}{h} \\sum_{g\\in G} \\chi_{\\Gamma}(g)^{\\ast}\\, D(g)\\right) = \\frac{1}{h} \\sum_{g\\in G} \\chi_{\\Gamma}(g)^{\\ast}\\, \\mathrm{tr}(D(g))\n$$\nThe trace of a permutation matrix, $\\mathrm{tr}(D(g))$, is the number of fixed points of the permutation $\\sigma_g$. However, the problem formulation requires the explicit construction of $P^{(\\Gamma)}$ before computing its trace. We will adhere to this prescribed procedure. The result for $m_{\\Gamma}$ must be an integer.\n\nWe now apply this procedure to each test case.\n\n**Test Case $1$: Point Group $C_{2v}$**\n- Group order $h = 4$.\n- Number of basis functions $n = 3$.\n- Operations: $\\left[E,\\, C_2,\\, \\sigma_v(xz),\\, \\sigma_v'(yz)\\right]$.\n- Atom mappings: $E \\to (0,1,2)$, $C_2 \\to (0,1,2)$, $\\sigma_v(xz) \\to (0,2,1)$, $\\sigma_v'(yz) \\to (0,2,1)$.\n- The corresponding $3 \\times 3$ representation matrices are:\n$$\nD(E) = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}, \\quad D(C_2) = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}\n$$\n$$\nD(\\sigma_v(xz)) = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 1 & 0 \\end{pmatrix}, \\quad D(\\sigma_v'(yz)) = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 1 & 0 \\end{pmatrix}\n$$\n- For irrep $\\Gamma_1 = A_1$, with $l_{A_1} = 1$ and characters $[1, 1, 1, 1]$:\n$$\nP^{(A_1)} = \\frac{1}{4} \\left[ 1 \\cdot D(E) + 1 \\cdot D(C_2) + 1 \\cdot D(\\sigma_v(xz)) + 1 \\cdot D(\\sigma_v'(yz)) \\right]\n$$\n$$\nP^{(A_1)} = \\frac{1}{4} \\left( \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} + \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix} + \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 1 & 0 \\end{pmatrix} + \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 1 & 0 \\end{pmatrix} \\right) = \\frac{1}{4} \\begin{pmatrix} 4 & 0 & 0 \\\\ 0 & 2 & 2 \\\\ 0 & 2 & 2 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0.5 & 0.5 \\\\ 0 & 0.5 & 0.5 \\end{pmatrix}\n$$\nThen, $\\mathrm{tr}(P^{(A_1)}) = 1 + 0.5 + 0.5 = 2$.\nThe multiplicity is $m_{A_1} = \\frac{1}{l_{A_1}} \\mathrm{tr}(P^{(A_1)}) = \\frac{1}{1}(2) = 2$.\n\n- Following this procedure for the other irreps:\n    - For $\\Gamma_2 = A_2$ ($l_{A_2}=1$, chars $[1,1,-1,-1]$): $\\mathrm{tr}(P^{(A_2)}) = 1$, so $m_{A_2} = 1$.\n    - For $\\Gamma_3 = B_1$ ($l_{B_1}=1$, chars $[1,-1,1,-1]$): $\\mathrm{tr}(P^{(B_1)}) = 0$, so $m_{B_1} = 0$.\n    - For $\\Gamma_4 = B_2$ ($l_{B_2}=1$, chars $[1,-1,-1,1]$): $\\mathrm{tr}(P^{(B_2)}) = 0$, so $m_{B_2} = 0$.\nThe list of multiplicities is $[2, 1, 0, 0]$.\n\n**Test Case $2$: Point Group $C_{3v}$**\n- Group order $h = 6$.\n- Number of basis functions $n = 3$.\n- The atom mappings correspond to the permutation of $3$ vertices.\n- The irreps are $A_1$, $A_2$, and $E$.\n- Applying the same methodology:\n    - For $\\Gamma_1 = A_1$ ($l_{A_1}=1$): $\\mathrm{tr}(P^{(A_1)}) = 1$, so $m_{A_1} = 1$.\n    - For $\\Gamma_2 = A_2$ ($l_{A_2}=1$): $\\mathrm{tr(P^{(A_2)}) = 0}$, so $m_{A_2} = 0$.\n    - For $\\Gamma_3 = E$ ($l_E=2$): $\\mathrm{tr}(P^{(E)}) = 2$, so $m_E = \\frac{1}{2}(2) = 1$.\nThe list of multiplicities is $[1, 0, 1]$.\n\n**Test Case $3$: Point Group $C_1$**\n- Group order $h = 1$.\n- Number of basis functions $n = 4$.\n- The single operation is identity $E$, which maps all $4$ indices to themselves.\n- The single irrep is $A$. For $\\Gamma_1 = A$ ($l_A=1$, char $[1]$):\n$$\nP^{(A)} = \\frac{1}{1} [1 \\cdot D(E)] = D(E) = I_4\n$$\nwhere $I_4$ is the $4 \\times 4$ identity matrix.\nThen, $\\mathrm{tr}(P^{(A)}) = \\mathrm{tr}(I_4) = 4$.\nThe multiplicity is $m_A = \\frac{1}{l_A} \\mathrm{tr}(P^{(A)}) = \\frac{1}{1}(4) = 4$.\nThe list of multiplicities is $[4]$.\n\nThese calculations will be implemented in the provided Python environment.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the multiplicities of irreducible representations for given test cases\n    based on group representation theory.\n    \"\"\"\n    test_cases = [\n        {\n            \"name\": \"C2v\",\n            \"h\": 4,\n            \"n\": 3,\n            \"op_mappings\": [\n                (0, 1, 2),  # E\n                (0, 1, 2),  # C2\n                (0, 2, 1),  # sigma_v(xz)\n                (0, 2, 1),  # sigma_v'(yz)\n            ],\n            \"irreps\": [\n                {\"name\": \"A1\", \"dim\": 1, \"chars\": [1, 1, 1, 1]},\n                {\"name\": \"A2\", \"dim\": 1, \"chars\": [1, 1, -1, -1]},\n                {\"name\": \"B1\", \"dim\": 1, \"chars\": [1, -1, 1, -1]},\n                {\"name\": \"B2\", \"dim\": 1, \"chars\": [1, -1, -1, 1]},\n            ],\n        },\n        {\n            \"name\": \"C3v\",\n            \"h\": 6,\n            \"n\": 3,\n            \"op_mappings\": [\n                (0, 1, 2),  # E\n                (1, 2, 0),  # C3\n                (2, 0, 1),  # C3^2\n                (0, 2, 1),  # sigma_v(1)\n                (2, 1, 0),  # sigma_v(2)\n                (1, 0, 2),  # sigma_v(3)\n            ],\n            \"irreps\": [\n                {\"name\": \"A1\", \"dim\": 1, \"chars\": [1, 1, 1, 1, 1, 1]},\n                {\"name\": \"A2\", \"dim\": 1, \"chars\": [1, 1, 1, -1, -1, -1]},\n                {\"name\": \"E\", \"dim\": 2, \"chars\": [2, -1, -1, 0, 0, 0]},\n            ],\n        },\n        {\n            \"name\": \"C1\",\n            \"h\": 1,\n            \"n\": 4,\n            \"op_mappings\": [\n                (0, 1, 2, 3), # E\n            ],\n            \"irreps\": [\n                {\"name\": \"A\", \"dim\": 1, \"chars\": [1]},\n            ],\n        },\n    ]\n\n    all_results = []\n    for case in test_cases:\n        h = case[\"h\"]\n        n = case[\"n\"]\n        op_mappings = case[\"op_mappings\"]\n        irreps = case[\"irreps\"]\n        \n        # 1. Construct representation matrices D(g) for all g in G\n        D_matrices = []\n        for sigma_g in op_mappings:\n            D_g = np.zeros((n, n), dtype=float)\n            for i in range(n):\n                # The action D(g)e_i = e_{sigma_g(i)} means the i-th column\n                # of D(g) is the basis vector e_{sigma_g(i)}.\n                D_g[sigma_g[i], i] = 1.0\n            D_matrices.append(D_g)\n        \n        case_multiplicities = []\n        for irrep in irreps:\n            l_gamma = irrep[\"dim\"]\n            chi_gamma = irrep[\"chars\"]\n            \n            # 2. Construct the projection operator P^(Gamma)\n            # P^(Gamma) = (l_Gamma / h) * sum_{g in G} chi_Gamma(g)* D(g)\n            P_gamma = np.zeros((n, n), dtype=float)\n            for i in range(h):\n                chi_g = chi_gamma[i]\n                D_g = D_matrices[i]\n                P_gamma += chi_g * D_g\n            \n            P_gamma *= l_gamma / h\n            \n            # 3. Compute the multiplicity m_Gamma\n            # m_Gamma = (1 / l_Gamma) * tr(P^(Gamma))\n            trace_P_gamma = np.trace(P_gamma)\n            \n            # Multiplicity must be an integer; round to handle potential float inaccuracies\n            m_gamma = int(round(trace_P_gamma / l_gamma))\n            case_multiplicities.append(m_gamma)\n            \n        # Format the result for this test case\n        all_results.append(repr(case_multiplicities).replace(\" \", \"\"))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2463215"}]}